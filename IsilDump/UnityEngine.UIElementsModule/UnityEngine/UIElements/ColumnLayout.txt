Type: UnityEngine.UIElements.ColumnLayout

Method: UnityEngine.UIElements.Columns get_columns()

Disassembly:
	0x03D710C4 LDR X0, [X22]
	0x03D710C8 BL 0x1C16F10

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Single get_columnsWidth()

Disassembly:
	0x03D710CC LDR X1, [X20]
	0x03D710D0 MOV X20, X0
	0x03D710D4 BL 0x301B7C4
	0x03D710D8 LDR X0, [X19 + 0x30]
	0x03D710DC CBZ X0, 0x3D719BC
	0x03D710E0 BL 0x3D72594
	0x03D710E4 MOV X22, X0
	0x03D710E8 CBZ X0, 0x3D719C0
	0x03D710EC ADRP X25, 0x382000
	0x03D710F0 ADRP X26, 0x3AB000
	0x03D710F4 ADRP X27, 0x3F5000
	0x03D710F8 LDR X25, [X25 + 0xE18]
	0x03D710FC LDR X26, [X26 + 0x118]
	0x03D71100 LDR X27, [X27 + 0xDE8]
	0x03D71104 MOVZ W28, 0x1
	0x03D71108 FMOV S9, W31
	0x03D7110C MOVK W28, 0x7F800000
	0x03D71110 MOVZ W29, 0x42C80000
	0x03D71114 FMOV S11, W31
	0x03D71118 LDR X8, [X22]
	0x03D7111C LDR X1, [X25]
	0x03D71120 LDRH W9, [X8 + 0x12E]
	0x03D71124 CBZ X9, 0x3D71148
	0x03D71128 LDR X10, [X8 + 0xB0]
	0x03D7112C ADD X10, X10, 0x8
	0x03D71130 LDUR X11, [X10 - 0x8]
	0x03D71134 CMP X11, X1
	0x03D71138 B.EQ 0x3D71158
	0x03D7113C SUBS X9, X9, 0x1
	0x03D71140 ADD X10, X10, 0x10
	0x03D71144 B.NE 0x3D71130
	0x03D71148 MOV X0, X22
	0x03D7114C MOV W2, W31
	0x03D71150 BL 0x1C5C788
	0x03D71154 B 0x3D71164
	0x03D71158 LDRSW X9, [X10]
	0x03D7115C ADD X8, X8, X9, 0x4, LSL
	0x03D71160 ADD X0, X8, 0x138
	0x03D71164 LDP X8, X1, [X0]
	0x03D71168 MOV X0, X22
	0x03D7116C BLR X8
	0x03D71170 TBZ X0, 0x0, 0x3D71430
	0x03D71174 LDR X8, [X22]
	0x03D71178 LDR X1, [X26]
	0x03D7117C LDRH W9, [X8 + 0x12E]
	0x03D71180 CBZ X9, 0x3D711A4
	0x03D71184 LDR X10, [X8 + 0xB0]
	0x03D71188 ADD X10, X10, 0x8
	0x03D7118C LDUR X11, [X10 - 0x8]
	0x03D71190 CMP X11, X1
	0x03D71194 B.EQ 0x3D711B4
	0x03D71198 SUBS X9, X9, 0x1
	0x03D7119C ADD X10, X10, 0x10
	0x03D711A0 B.NE 0x3D7118C
	0x03D711A4 MOV X0, X22
	0x03D711A8 MOV W2, W31
	0x03D711AC BL 0x1C5C788
	0x03D711B0 B 0x3D711C0
	0x03D711B4 LDRSW X9, [X10]
	0x03D711B8 ADD X8, X8, X9, 0x4, LSL
	0x03D711BC ADD X0, X8, 0x138
	0x03D711C0 LDP X8, X1, [X0]
	0x03D711C4 MOV X0, X22
	0x03D711C8 BLR X8
	0x03D711CC MOV X23, X0
	0x03D711D0 CBZ X0, 0x3D719A4
	0x03D711D4 LDRB W8, [X23 + 0x40]
	0x03D711D8 CBZ W8, 0x3D71118
	0x03D711DC LDR V0, [X19 + 0x50]
	0x03D711E0 LDR W8, [X23 + 0x50]
	0x03D711E4 LDR V10, [X23 + 0x4C]
	0x03D711E8 CBZ W8, 0x3D711F8
	0x03D711EC FMUL S1, S0, S10
	0x03D711F0 FMOV S2, W29
	0x03D711F4 FDIV S10, S1, S2
	0x03D711F8 LDR W8, [X23 + 0x58]
	0x03D711FC LDR V12, [X23 + 0x54]
	0x03D71200 CBZ W8, 0x3D71210
	0x03D71204 FMUL S1, S0, S12
	0x03D71208 FMOV S2, W29
	0x03D7120C FDIV S12, S1, S2
	0x03D71210 LDR W8, [X23 + 0x48]
	0x03D71214 LDR V13, [X23 + 0x44]
	0x03D71218 CBZ W8, 0x3D71228
	0x03D7121C FMUL S0, S0, S13
	0x03D71220 FMOV S1, W29
	0x03D71224 FDIV S13, S0, S1
	0x03D71228 LDR V1, [X23 + 0x5C]
	0x03D7122C LDR X8, [X19 + 0x30]
	0x03D71230 FMOV W9, S1
	0x03D71234 AND W9, W9, 0x7FFFFFFF
	0x03D71238 CMP W9, W28
	0x03D7123C B.CC 0x3D712F4
	0x03D71240 CBZ X8, 0x3D719A8
	0x03D71244 LDR W8, [X8 + 0x2C]
	0x03D71248 CMP W8, 0x1
	0x03D7124C B.NE 0x3D712B4
	0x03D71250 LDRB W8, [X23 + 0x60]
	0x03D71254 CBZ W8, 0x3D712B4
	0x03D71258 CBZ X21, 0x3D719B0
	0x03D7125C LDR W10, [X21 + 0x1C]
	0x03D71260 LDR X8, [X21 + 0x10]
	0x03D71264 LDR X9, [X27]
	0x03D71268 ADD W10, W10, 0x1
	0x03D7126C STR W10, [X21 + 0x1C]
	0x03D71270 CBZ X8, 0x3D719AC
	0x03D71274 LDRSW X10, [X21 + 0x18]
	0x03D71278 LDR W11, [X8 + 0x18]
	0x03D7127C CMP W10, W11
	0x03D71280 B.CS 0x3D71298
	0x03D71284 ADD W9, W10, 0x1
	0x03D71288 ADD X8, X8, X10, 0x3, LSL
	0x03D7128C STR W9, [X21 + 0x18]
	0x03D71290 STR X23, [X8 + 0x20]
	0x03D71294 B 0x3D71118
	0x03D71298 LDR X8, [X9 + 0x20]
	0x03D7129C LDR X8, [X8 + 0xC0]
	0x03D712A0 LDR X2, [X8 + 0x70]
	0x03D712A4 MOV X0, X21
	0x03D712A8 MOV X1, X23
	0x03D712AC BL 0x301BF90
	0x03D712B0 B 0x3D71118
	0x03D712B4 FCMP S13, S12
	0x03D712B8 FCSEL S0, S12, S13, GT
	0x03D712BC FCMP S13, S10
	0x03D712C0 FCSEL S0, S0, S10, PL
	0x03D712C4 FCMP S1, S0
	0x03D712C8 ADD X24, X23, 0x5C
	0x03D712CC B.EQ 0x3D7141C
	0x03D712D0 LDR X8, [X23 + 0xB8]
	0x03D712D4 STR S0, [X23 + 0x5C]
	0x03D712D8 CBZ X8, 0x3D7141C
	0x03D712DC LDR X0, [X8 + 0x40]
	0x03D712E0 LDR X9, [X8 + 0x18]
	0x03D712E4 LDR X2, [X8 + 0x28]
	0x03D712E8 MOV X1, X23
	0x03D712EC BLR X9
	0x03D712F0 B 0x3D7141C
	0x03D712F4 CBZ X8, 0x3D719CC
	0x03D712F8 LDR W8, [X8 + 0x2C]
	0x03D712FC ADD X24, X23, 0x5C
	0x03D71300 CMP W8, 0x1
	0x03D71304 B.NE 0x3D7137C
	0x03D71308 LDRB W8, [X23 + 0x60]
	0x03D7130C CBZ W8, 0x3D7137C
	0x03D71310 CBZ X20, 0x3D719F4
	0x03D71314 LDR W10, [X20 + 0x1C]
	0x03D71318 LDR X8, [X20 + 0x10]
	0x03D7131C LDR X9, [X27]
	0x03D71320 ADD W10, W10, 0x1
	0x03D71324 STR W10, [X20 + 0x1C]
	0x03D71328 CBZ X8, 0x3D719F0
	0x03D7132C LDRSW X10, [X20 + 0x18]
	0x03D71330 LDR W11, [X8 + 0x18]
	0x03D71334 CMP W10, W11
	0x03D71338 B.CS 0x3D71350
	0x03D7133C ADD W9, W10, 0x1
	0x03D71340 ADD X8, X8, X10, 0x3, LSL
	0x03D71344 STR W9, [X20 + 0x18]
	0x03D71348 STR X23, [X8 + 0x20]
	0x03D7134C B 0x3D71368
	0x03D71350 LDR X8, [X9 + 0x20]
	0x03D71354 LDR X8, [X8 + 0xC0]
	0x03D71358 LDR X2, [X8 + 0x70]
	0x03D7135C MOV X0, X20
	0x03D71360 MOV X1, X23
	0x03D71364 BL 0x301BF90
	0x03D71368 MOV X0, X19
	0x03D7136C MOV X1, X23
	0x03D71370 BL 0x3D72634
	0x03D71374 LDR V1, [X24]
	0x03D71378 FADD S11, S11, S0
	0x03D7137C FCMP S1, S10
	0x03D71380 B.LT 0x3D7138C
	0x03D71384 FCMP S1, S12
	0x03D71388 B.LS 0x3D713C4
	0x03D7138C FCMP S13, S12
	0x03D71390 FCSEL S0, S12, S13, GT
	0x03D71394 FCMP S13, S10
	0x03D71398 FCSEL S0, S0, S10, PL
	0x03D7139C FCMP S1, S0
	0x03D713A0 B.EQ 0x3D713C4
	0x03D713A4 LDR X8, [X23 + 0xB8]
	0x03D713A8 STR S0, [X23 + 0x5C]
	0x03D713AC CBZ X8, 0x3D713C4
	0x03D713B0 LDR X0, [X8 + 0x40]
	0x03D713B4 LDR X9, [X8 + 0x18]
	0x03D713B8 LDR X2, [X8 + 0x28]
	0x03D713BC MOV X1, X23
	0x03D713C0 BLR X9
	0x03D713C4 LDR X8, [X19 + 0x30]
	0x03D713C8 CBZ X8, 0x3D719D0
	0x03D713CC LDR W8, [X8 + 0x2C]
	0x03D713D0 CBNZ W8, 0x3D7141C
	0x03D713D4 LDR W8, [X23 + 0x48]
	0x03D713D8 CMP W8, 0x1
	0x03D713DC B.NE 0x3D7141C
	0x03D713E0 LDR V1, [X24]
	0x03D713E4 FCMP S13, S12
	0x03D713E8 FCSEL S0, S12, S13, GT

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x677000
	007 Move W8, [X20+3362]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x383000
	014 Move X0, [X0+3584]
	015 Call 0x1C17CF4
	016 Move X0, 0x3AC000
	017 Move X0, [X0+272]
	018 Call 0x1C17CF4
	019 Move X0, 0x3AC000
	020 Move X0, [X0+280]
	021 Call 0x1C17CF4
	022 Move X0, 0x383000
	023 Move X0, [X0+3608]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+3362], W8
	027 Move W8, [X19+60]
	028 Compare W8, 0
	029 JumpIfEqual {154}
	030 Move X20, [X19+48]
	031 Move [X19+56], W31
	032 Compare X20, 0
	033 JumpIfEqual {162}
	034 Move X0, X20
	035 Call Columns.UpdateVisibleColumns, X0
	036 Move X20, [X20+32]
	037 Compare X20, 0
	038 JumpIfEqual {162}
	039 Move X10, 0x3AC000
	040 Move X8, [X20]
	041 Move X10, [X10+272]
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move X1, [X10]
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move X0, X20
	053 Move W2, W31
	054 Call 0x1C5D788
	055 NotImplemented "Instruction LDRSW not yet implemented."
	056 Add X8, X8, X9
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X1, [X0+8]
	060 Move X0, X20
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X20, X0
	063 Compare X0, 0
	064 JumpIfEqual {163}
	065 Move X21, 0x383000
	066 Move X22, 0x3AC000
	067 Move X21, [X21+3608]
	068 Move X22, [X22+280]
	069 Move X8, [X20]
	070 Move X1, [X21]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move X0, X20
	081 Move W2, W31
	082 Call 0x1C5D788
	083 NotImplemented "Instruction LDRSW not yet implemented."
	084 Add X8, X8, X9
	085 Add X0, X8, 312
	086 Move X8, [X0]
	087 Move X1, [X0+8]
	088 Move X0, X20
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {121}
	094 Move X8, [X20]
	095 Move X1, [X22]
	096 NotImplemented "Instruction LDRH not yet implemented."
	097 Compare X9, 0
	098 JumpIfEqual {105}
	099 Move X10, [X8+176]
	100 Add X10, X10, 8
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Subtract X9, X9, 1
	104 Add X10, X10, 16
	105 Move X0, X20
	106 Move W2, W31
	107 Call 0x1C5D788
	108 NotImplemented "Instruction LDRSW not yet implemented."
	109 Add X8, X8, X9
	110 Add X0, X8, 312
	111 Move X8, [X0]
	112 Move X1, [X0+8]
	113 Move X0, X20
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Compare X0, 0
	116 JumpIfEqual {161}
	117 Move V0, [X19+56]
	118 Move V1, [X0+92]
	119 Add S0, S0, S1
	120 Move [X19+56], S0
	121 Move X21, X31
	122 Move W22, 5
	123 Compare X20, 0
	124 JumpIfEqual {148}
	125 Move X10, 0x383000
	126 Move X8, [X20]
	127 Move X10, [X10+3584]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Move X1, [X10]
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X20
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X20
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Compare X21, 0
	149 JumpIfNotEqual {164}
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Compare W22, 0
	152 JumpIfNotEqual {155}
	153 Move [X19+60], W31
	154 Move V0, [X19+56]
	155 Move X20, [X31+32]
	156 Move X19, [X31+40]
	157 Move X22, [X31+16]
	158 Move X21, [X31+24]
	159 Move X30, [X31+48]
	160 Return V0
	161 Call 0x1C17F20
	162 Call 0x1C17F20
	163 Call 0x1C17F20
	164 Move X0, X21
	165 Call 0x1C17F18
	166 Move X22, X0
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X0, X22
	169 Call 0x3EB2AD0
	170 Move X21, [X0]
	171 Call 0x3EB2AE0
	172 Move W22, W31
	173 Compare X20, 0
	174 JumpIfNotEqual {125}
	175 Move X21, X31
	176 Move X22, X0
	177 Compare X20, 0
	178 JumpIfEqual {202}
	179 Move X10, 0x383000
	180 Move X8, [X20]
	181 Move X10, [X10+3584]
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Move X1, [X10]
	184 Compare X9, 0
	185 JumpIfEqual {192}
	186 Move X10, [X8+176]
	187 Add X10, X10, 8
	188 NotImplemented "Instruction LDUR not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Subtract X9, X9, 1
	191 Add X10, X10, 16
	192 Move X0, X20
	193 Move W2, W31
	194 Call 0x1C5D788
	195 NotImplemented "Instruction LDRSW not yet implemented."
	196 Add X8, X8, X9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X1, [X0+8]
	200 Move X0, X20
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Compare X21, 0
	203 JumpIfNotEqual {206}
	204 Move X0, X22
	205 Call 0x1D2D690
	206 Move X0, X21
	207 Call 0x1C17F18
	208 Call 0x1991590

Method: System.Single get_layoutWidth()

Disassembly:
	0x03D713EC FCMP S13, S10
	0x03D713F0 FCSEL S0, S0, S10, PL

ISIL:
	001 Move V0, [X0+80]
	002 Return V0

Method: System.Single get_minColumnsWidth()

Disassembly:
	0x03D713F4 FCMP S1, S0
	0x03D713F8 B.EQ 0x3D7141C

ISIL:
	001 Move V0, [X0+68]
	002 Return V0

Method: System.Single get_maxColumnsWidth()

Disassembly:
	0x03D713FC LDR X8, [X23 + 0xB8]
	0x03D71400 STR S0, [X23 + 0x5C]

ISIL:
	001 Move V0, [X0+64]
	002 Return V0

Method: System.Boolean get_hasStretchableColumns()

Disassembly:
	0x03D71404 CBZ X8, 0x3D7141C
	0x03D71408 LDR X0, [X8 + 0x40]
	0x03D7140C LDR X9, [X8 + 0x18]
	0x03D71410 LDR X2, [X8 + 0x28]
	0x03D71414 MOV X1, X23
	0x03D71418 BLR X9
	0x03D7141C LDRB W8, [X23 + 0x60]
	0x03D71420 CBNZ W8, 0x3D71118
	0x03D71424 LDR V0, [X24]
	0x03D71428 FADD S9, S9, S0
	0x03D7142C B 0x3D71118
	0x03D71430 MOV X23, X31
	0x03D71434 MOVZ W24, 0x14
	0x03D71438 CBZ X22, 0x3D7149C
	0x03D7143C LDR X8, [X22]
	0x03D71440 ADRP X10, 0x382000
	0x03D71444 LDRH W9, [X8 + 0x12E]
	0x03D71448 LDR X10, [X10 + 0xE00]
	0x03D7144C LDR X1, [X10]
	0x03D71450 CBZ X9, 0x3D71474

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x677000
	005 Move W8, [X20+3363]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3F6000
	012 Move X0, [X0+3440]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3363], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {26}
	019 Move W8, [X8+24]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Move X30, [X31+32]
	025 Return X0
	026 Call 0x1C17F20

Method: System.Boolean get_hasRelativeWidthColumns()

Disassembly:
	0x03D71454 LDR X10, [X8 + 0xB0]
	0x03D71458 ADD X10, X10, 0x8
	0x03D7145C LDUR X11, [X10 - 0x8]
	0x03D71460 CMP X11, X1
	0x03D71464 B.EQ 0x3D71484
	0x03D71468 SUBS X9, X9, 0x1
	0x03D7146C ADD X10, X10, 0x10
	0x03D71470 B.NE 0x3D7145C
	0x03D71474 MOV X0, X22
	0x03D71478 MOV W2, W31
	0x03D7147C BL 0x1C5C788
	0x03D71480 B 0x3D71490
	0x03D71484 LDRSW X9, [X10]
	0x03D71488 ADD X8, X8, X9, 0x4, LSL
	0x03D7148C ADD X0, X8, 0x138
	0x03D71490 LDP X8, X1, [X0]
	0x03D71494 MOV X0, X22
	0x03D71498 BLR X8
	0x03D7149C CBNZ X23, 0x3D719C4
	0x03D714A0 CMP W24, 0x14
	0x03D714A4 B.EQ 0x3D714AC
	0x03D714A8 CBNZ W24, 0x3D71968
	0x03D714AC CBZ X21, 0x3D719BC
	0x03D714B0 LDR W8, [X21 + 0x18]
	0x03D714B4 CMP W8, 0x0
	0x03D714B8 B.LE 0x3D71788
	0x03D714BC ADRP X23, 0x382000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x677000
	005 Move W8, [X20+3364]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3F6000
	012 Move X0, [X0+3440]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3364], W8
	016 Move X8, [X19+32]
	017 Compare X8, 0
	018 JumpIfEqual {32}
	019 Move W8, [X8+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W0, 1
	022 Move X8, [X19+40]
	023 Compare X8, 0
	024 JumpIfEqual {32}
	025 Move W8, [X8+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0
	032 Call 0x1C17F20

Method: System.Void add_layoutRequested(System.Action value)

Disassembly:
	0x03D714C0 LDR X23, [X23 + 0x5A8]
	0x03D714C4 LDR X0, [X23]
	0x03D714C8 LDR W8, [X0 + 0xE0]
	0x03D714CC CBNZ W8, 0x3D714D4
	0x03D714D0 BL 0x1C16DFC
	0x03D714D4 FSUB S1, S8, S9
	0x03D714D8 FMOV S0, W31
	0x03D714DC MOV X0, X31
	0x03D714E0 BL 0x337EE18
	0x03D714E4 LDR X8, [X19 + 0x10]
	0x03D714E8 CBZ X8, 0x3D719BC
	0x03D714EC ADRP X27, 0x3F5000
	0x03D714F0 LDR W28, [X8 + 0x18]
	0x03D714F4 LDR X27, [X27 + 0xDD8]
	0x03D714F8 MOV V9.16B, V0.16B
	0x03D714FC LDR X0, [X27]
	0x03D71500 BL 0x1C16F10
	0x03D71504 ADRP X8, 0x3F5000
	0x03D71508 LDR X8, [X8 + 0xDC8]
	0x03D7150C MOV X1, X19
	0x03D71510 MOV X3, X31
	0x03D71514 MOV X22, X0
	0x03D71518 LDR X2, [X8]
	0x03D7151C BL 0x295A080
	0x03D71520 ADRP X25, 0x3F5000
	0x03D71524 LDR X25, [X25 + 0xDF0]
	0x03D71528 MOV X0, X21
	0x03D7152C MOV X1, X22
	0x03D71530 LDR X2, [X25]
	0x03D71534 BL 0x301DD30
	0x03D71538 ADRP X26, 0x3AC000
	0x03D7153C LDR X26, [X26 + 0xB98]
	0x03D71540 ADD X8, X31, 0x8
	0x03D71544 MOV X0, X21
	0x03D71548 LDR X1, [X26]
	0x03D7154C BL 0x301CB58
	0x03D71550 LDUR V0, [X31 + 0x8]
	0x03D71554 LDR X8, [X31 + 0x18]
	0x03D71558 ADRP X24, 0x3AC000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x677000
	007 Move W8, [X21+3365]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x384000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3365], W8
	019 Move X22, 0x384000
	020 Add X20, X20, 136
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Combine, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void remove_layoutRequested(System.Action value)

Disassembly:
	0x03D7155C LDR X24, [X24 + 0xB88]
	0x03D71560 STR V0, [X31 + 0x9]
	0x03D71564 STR X8, [X31 + 0xA0]
	0x03D71568 MOVZ W22, 0x42C80000
	0x03D7156C LDR X1, [X24]
	0x03D71570 ADD X0, X31, 0x90
	0x03D71574 BL 0x2BC4350
	0x03D71578 TBZ X0, 0x0, 0x3D71630
	0x03D7157C LDR X21, [X31 + 0xA0]
	0x03D71580 CBZ X21, 0x3D719B4
	0x03D71584 LDR V1, [X19 + 0x50]
	0x03D71588 LDR W8, [X21 + 0x50]
	0x03D7158C LDR V0, [X21 + 0x4C]
	0x03D71590 CBZ W8, 0x3D715A0
	0x03D71594 FMUL S0, S1, S0
	0x03D71598 FMOV S2, W22
	0x03D7159C FDIV S0, S0, S2
	0x03D715A0 LDR W8, [X21 + 0x58]
	0x03D715A4 LDR V2, [X21 + 0x54]
	0x03D715A8 CBZ W8, 0x3D715B8
	0x03D715AC FMUL S1, S1, S2
	0x03D715B0 FMOV S2, W22
	0x03D715B4 FDIV S2, S1, S2
	0x03D715B8 SCVTF S1, W28
	0x03D715BC LDR V10, [X21 + 0x5C]
	0x03D715C0 FDIV S1, S9, S1
	0x03D715C4 FCMP S1, S2
	0x03D715C8 FCSEL S2, S2, S1, GT
	0x03D715CC FCMP S1, S0
	0x03D715D0 FCSEL S0, S2, S0, PL
	0x03D715D4 FCMP S10, S0
	0x03D715D8 B.EQ 0x3D71604
	0x03D715DC LDR X8, [X21 + 0xB8]
	0x03D715E0 MOV V10.16B, V0.16B
	0x03D715E4 STR S0, [X21 + 0x5C]
	0x03D715E8 CBZ X8, 0x3D71604
	0x03D715EC LDR X0, [X8 + 0x40]
	0x03D715F0 LDR X9, [X8 + 0x18]
	0x03D715F4 LDR X2, [X8 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x677000
	007 Move W8, [X21+3366]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x384000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3366], W8
	019 Move X22, 0x384000
	020 Add X20, X20, 136
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Remove, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void .ctor(UnityEngine.UIElements.Columns columns)

Disassembly:
	0x03D715F8 MOV X1, X21
	0x03D715FC BLR X9
	0x03D71600 LDR V10, [X21 + 0x5C]
	0x03D71604 LDR X0, [X23]
	0x03D71608 LDR W8, [X0 + 0xE0]
	0x03D7160C CBNZ W8, 0x3D71614
	0x03D71610 BL 0x1C16DFC
	0x03D71614 FSUB S1, S9, S10
	0x03D71618 FMOV S0, W31
	0x03D7161C MOV X0, X31
	0x03D71620 BL 0x337EE18
	0x03D71624 SUB W28, W28, 0x1
	0x03D71628 MOV V9.16B, V0.16B
	0x03D7162C B 0x3D7156C
	0x03D71630 ADRP X8, 0x3AC000
	0x03D71634 LDR X8, [X8 + 0xB80]
	0x03D71638 ADD X0, X31, 0x90
	0x03D7163C LDR X1, [X8]
	0x03D71640 BL 0x2BC434C
	0x03D71644 LDR X0, [X27]
	0x03D71648 BL 0x1C16F10
	0x03D7164C ADRP X8, 0x3F5000
	0x03D71650 LDR X8, [X8 + 0xDD0]
	0x03D71654 MOV X1, X19
	0x03D71658 MOV X3, X31
	0x03D7165C MOV X21, X0
	0x03D71660 LDR X2, [X8]
	0x03D71664 BL 0x295A080
	0x03D71668 CBZ X20, 0x3D719BC
	0x03D7166C LDR X2, [X25]
	0x03D71670 MOV X0, X20
	0x03D71674 MOV X1, X21
	0x03D71678 BL 0x301DD30
	0x03D7167C LDR X1, [X26]
	0x03D71680 ADD X8, X31, 0x8
	0x03D71684 MOV X0, X20
	0x03D71688 BL 0x301CB58
	0x03D7168C LDUR V0, [X31 + 0x8]
	0x03D71690 LDR X8, [X31 + 0x18]
	0x03D71694 MOVZ W21, 0x42C80000
	0x03D71698 STR V0, [X31 + 0x7]
	0x03D7169C STR X8, [X31 + 0x80]
	0x03D716A0 LDR X1, [X24]
	0x03D716A4 ADD X0, X31, 0x70
	0x03D716A8 BL 0x2BC4350
	0x03D716AC TBZ X0, 0x0, 0x3D71774
	0x03D716B0 LDR X20, [X31 + 0x80]
	0x03D716B4 MOV X0, X19
	0x03D716B8 MOV X1, X20
	0x03D716BC BL 0x3D72634
	0x03D716C0 CBZ X20, 0x3D719B8
	0x03D716C4 MOV V10.16B, V0.16B
	0x03D716C8 LDR V1, [X19 + 0x50]
	0x03D716CC LDR W8, [X20 + 0x50]
	0x03D716D0 LDR V0, [X20 + 0x4C]
	0x03D716D4 CBZ W8, 0x3D716E4
	0x03D716D8 FMUL S0, S1, S0
	0x03D716DC FMOV S2, W21
	0x03D716E0 FDIV S0, S0, S2
	0x03D716E4 LDR W8, [X20 + 0x58]
	0x03D716E8 LDR V2, [X20 + 0x54]
	0x03D716EC CBZ W8, 0x3D716FC
	0x03D716F0 FMUL S1, S1, S2
	0x03D716F4 FMOV S2, W21
	0x03D716F8 FDIV S2, S1, S2
	0x03D716FC FDIV S1, S10, S11
	0x03D71700 LDR V12, [X20 + 0x5C]
	0x03D71704 FMUL S1, S9, S1
	0x03D71708 FCMP S1, S2
	0x03D7170C FCSEL S2, S2, S1, GT
	0x03D71710 FCMP S1, S0
	0x03D71714 FCSEL S0, S2, S0, PL
	0x03D71718 FCMP S12, S0
	0x03D7171C B.EQ 0x3D71748
	0x03D71720 LDR X8, [X20 + 0xB8]
	0x03D71724 MOV V12.16B, V0.16B
	0x03D71728 STR S0, [X20 + 0x5C]
	0x03D7172C CBZ X8, 0x3D71748
	0x03D71730 LDR X0, [X8 + 0x40]
	0x03D71734 LDR X9, [X8 + 0x18]
	0x03D71738 LDR X2, [X8 + 0x28]
	0x03D7173C MOV X1, X20
	0x03D71740 BLR X9
	0x03D71744 LDR V12, [X20 + 0x5C]
	0x03D71748 LDR X0, [X23]
	0x03D7174C LDR W8, [X0 + 0xE0]
	0x03D71750 CBNZ W8, 0x3D71758
	0x03D71754 BL 0x1C16DFC
	0x03D71758 FSUB S1, S9, S12
	0x03D7175C FMOV S0, W31
	0x03D71760 MOV X0, X31
	0x03D71764 BL 0x337EE18
	0x03D71768 MOV V9.16B, V0.16B
	0x03D7176C FSUB S11, S11, S10
	0x03D71770 B 0x3D716A0
	0x03D71774 ADRP X8, 0x3AC000
	0x03D71778 LDR X8, [X8 + 0xB80]
	0x03D7177C ADD X0, X31, 0x70
	0x03D71780 LDR X1, [X8]
	0x03D71784 BL 0x2BC434C
	0x03D71788 MOV X0, X19
	0x03D7178C BL 0x3D70404
	0x03D71790 TBZ X0, 0x0, 0x3D717C8
	0x03D71794 LDR X8, [X19 + 0x30]
	0x03D71798 CBZ X8, 0x3D719BC
	0x03D7179C LDR W8, [X8 + 0x2C]
	0x03D717A0 CBZ W8, 0x3D717EC
	0x03D717A4 MOV X0, X19
	0x03D717A8 BL 0x3D700CC
	0x03D717AC LDP S1, S2, [X19 + 0x40]
	0x03D717B0 FCMP S1, S8
	0x03D717B4 FCSEL S1, S1, S8, MI
	0x03D717B8 FCMP S2, S8
	0x03D717BC FCSEL S1, S1, S2, LE
	0x03D717C0 FSUB S0, S0, S1
	0x03D717C4 B 0x3D71808
	0x03D717C8 MOV X0, X19
	0x03D717CC BL 0x3D70454
	0x03D717D0 TBZ X0, 0x0, 0x3D71960
	0x03D717D4 LDR X8, [X19 + 0x30]
	0x03D717D8 CBZ X8, 0x3D719BC
	0x03D717DC LDR W9, [X8 + 0x2C]
	0x03D717E0 CMP W9, 0x1
	0x03D717E4 B.EQ 0x3D7179C
	0x03D717E8 B 0x3D71960
	0x03D717EC LDR V0, [X19 + 0x4C]
	0x03D717F0 MOVZ W9, 0x7F800000
	0x03D717F4 FMOV W8, S0
	0x03D717F8 AND W8, W8, 0x7FFFFFFF
	0x03D717FC CMP W8, W9
	0x03D71800 B.HI 0x3D71960
	0x03D71804 FSUB S0, S0, S8
	0x03D71808 FCMP S0, 0x0
	0x03D7180C STR S0, [X31 + 0x6C]
	0x03D71810 B.EQ 0x3D71960
	0x03D71814 ADRP X21, 0x3F5000
	0x03D71818 LDR X21, [X21 + 0xDC0]
	0x03D7181C LDR X0, [X21]
	0x03D71820 LDR W8, [X0 + 0xE0]
	0x03D71824 CBNZ W8, 0x3D7182C
	0x03D71828 BL 0x1C16DFC
	0x03D7182C ADRP X20, 0x3F5000
	0x03D71830 LDR X20, [X20 + 0xDB8]
	0x03D71834 ADD X0, X31, 0x50
	0x03D71838 LDR X1, [X20]
	0x03D7183C BL 0x28F996C
	0x03D71840 MOV X8, X0
	0x03D71844 LDR X0, [X21]
	0x03D71848 STP X8, X1, [X31 + 0x58]
	0x03D7184C LDR W8, [X0 + 0xE0]
	0x03D71850 CBNZ W8, 0x3D71858
	0x03D71854 BL 0x1C16DFC
	0x03D71858 LDR X1, [X20]
	0x03D7185C ADD X0, X31, 0x38
	0x03D71860 BL 0x28F996C
	0x03D71864 LDR X8, [X21]
	0x03D71868 STP X0, X1, [X31 + 0x40]
	0x03D7186C LDR W9, [X8 + 0xE0]
	0x03D71870 CBNZ W9, 0x3D7187C
	0x03D71874 MOV X0, X8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x677000
	012 Move X23, 0x3F6000
	013 Move X22, 0x3F6000
	014 Move W8, [X21+3367]
	015 Move X23, [X23+3432]
	016 Move X22, [X22+3448]
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {49}
	023 Move X0, 0x3F6000
	024 Move X0, [X0+1616]
	025 Call 0x1C17CF4
	026 Move X0, 0x3F6000
	027 Move X0, [X0+1632]
	028 Call 0x1C17CF4
	029 Move X0, 0x3F6000
	030 Move X0, [X0+1640]
	031 Call 0x1C17CF4
	032 Move X0, 0x3F6000
	033 Move X0, [X0+3456]
	034 Call 0x1C17CF4
	035 Move X0, 0x3F6000
	036 Move X0, [X0+3464]
	037 Call 0x1C17CF4
	038 Move X0, 0x3F6000
	039 Move X0, [X0+3472]
	040 Call 0x1C17CF4
	041 Move X0, 0x3F6000
	042 Move X0, [X0+3448]
	043 Call 0x1C17CF4
	044 Move X0, 0x3F6000
	045 Move X0, [X0+3432]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X21+3367], W8
	049 Move X0, [X23]
	050 Call 0x1C17F10
	051 Move X1, [X22]
	052 Move X21, X0
	053 Call List`1<Object>..ctor, X0
	054 Move [X20+16], X21
	055 Move X0, [X23]
	056 Call 0x1C17F10
	057 Move X1, [X22]
	058 Move X21, X0
	059 Call List`1<Object>..ctor, X0
	060 Move [X20+24], X21
	061 Move X0, [X23]
	062 Call 0x1C17F10
	063 Move X1, [X22]
	064 Move X21, X0
	065 Call List`1<Object>..ctor, X0
	066 Move [X20+32], X21
	067 Move X0, [X23]
	068 Call 0x1C17F10
	069 Move X1, [X22]
	070 Move X21, X0
	071 Call List`1<Object>..ctor, X0
	072 Move W9, 0x7FC00000
	073 Move W8, 1
	074 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	075 Move [X20+40], X21
	076 Move [X20+56], W31
	077 Move [X20+64], X31
	078 Move [X20+72], W31
	079 Move [X20+60], W8
	080 Move [X20+76], D0
	081 Move [X20+85], W31
	082 Move X0, [X23]
	083 Call 0x1C17F10
	084 Move X1, [X22]
	085 Move X21, X0
	086 Call List`1<Object>..ctor, X0
	087 Move [X20+104], X21
	088 Move X0, [X23]
	089 Call 0x1C17F10
	090 Move X1, [X22]
	091 Move X21, X0
	092 Call List`1<Object>..ctor, X0
	093 Move [X20+112], X21
	094 Move X0, [X23]
	095 Call 0x1C17F10
	096 Move X1, [X22]
	097 Move X21, X0
	098 Call List`1<Object>..ctor, X0
	099 Move X0, X20
	100 Move X1, X31
	101 Move [X20+120], X21
	102 Call Object..ctor, X0
	103 Move [X20+48], X19
	104 Compare X19, 0
	105 JumpIfEqual {173}
	106 Move X27, 0x3F6000
	107 Move X26, 0x3F6000
	108 Move X25, 0x3F6000
	109 Move X24, 0x3F6000
	110 Move X23, 0x3F6000
	111 Move X22, 0x3F6000
	112 Move X27, [X27+1632]
	113 Move X26, [X26+3456]
	114 Move X25, [X25+1616]
	115 Move X24, [X24+3464]
	116 Move X23, [X23+1640]
	117 Move X22, [X22+3472]
	118 Move X0, X19
	119 Call Columns.get_Count, X0
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move W21, W31
	122 Move X0, X19
	123 Move W1, W21
	124 Call Columns.get_Item, X0, X1
	125 Move X1, X0
	126 Move X0, X20
	127 Call ColumnLayout.OnColumnAdded, X0, X1, X2
	128 Move X0, X19
	129 Add W21, W21, 1
	130 Call Columns.get_Count, X0
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, [X27]
	133 Call 0x1C17F10
	134 Move X2, [X26]
	135 Move X1, X20
	136 Move X3, X31
	137 Move X21, X0
	138 Call Action`2<Object, Int32>..ctor, X0, X1, X2
	139 Move X0, X19
	140 Move X1, X21
	141 Call Columns.add_columnAdded, X0, X1
	142 Move X0, [X25]
	143 Call 0x1C17F10
	144 Move X2, [X24]
	145 Move X1, X20
	146 Move X3, X31
	147 Move X21, X0
	148 Call Action`1<Object>..ctor, X0, X1, X2
	149 Move X0, X19
	150 Move X1, X21
	151 Call Columns.add_columnRemoved, X0, X1
	152 Move X0, [X23]
	153 Call 0x1C17F10
	154 Move X2, [X22]
	155 Move X1, X20
	156 Move X3, X31
	157 Move X21, X0
	158 Call Action`3<Object, Int32, Int32>..ctor, X0, X1, X2
	159 Move X0, X19
	160 Move X1, X21
	161 Move X20, [X31+64]
	162 Move X19, [X31+72]
	163 Move X22, [X31+48]
	164 Move X21, [X31+56]
	165 Move X24, [X31+32]
	166 Move X23, [X31+40]
	167 Move X26, [X31+16]
	168 Move X25, [X31+24]
	169 Move X30, [X31+80]
	170 Move X27, [X31+88]
	171 Call Columns.add_columnReordered, X0, X1
	172 Return 
	173 Call 0x1C17F20

Method: System.Void Dirty()

Disassembly:
	0x03D71CB4 LDR X10, [X8 + 0xB0]
	0x03D71CB8 ADD X10, X10, 0x8
	0x03D71CBC LDUR X11, [X10 - 0x8]
	0x03D71CC0 CMP X11, X1
	0x03D71CC4 B.EQ 0x3D71CE4
	0x03D71CC8 SUBS X9, X9, 0x1
	0x03D71CCC ADD X10, X10, 0x10
	0x03D71CD0 B.NE 0x3D71CBC
	0x03D71CD4 MOV X0, X22
	0x03D71CD8 MOV W2, W31
	0x03D71CDC BL 0x1C5C788
	0x03D71CE0 B 0x3D71CF0
	0x03D71CE4 LDRSW X9, [X10]
	0x03D71CE8 ADD X8, X8, X9, 0x4, LSL
	0x03D71CEC ADD X0, X8, 0x138
	0x03D71CF0 LDP X8, X1, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+72]
	004 Compare W8, 0
	005 JumpIfEqual {9}
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 
	009 Move W8, 1
	010 Move X19, X0
	011 Move [X0+72], W8
	012 Call ColumnLayout.ClearCache, X0
	013 Move X8, [X19+136]
	014 Compare X8, 0
	015 JumpIfEqual {6}
	016 Move X2, [X8+24]
	017 Move X0, [X8+64]
	018 Move X1, [X8+40]
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 CallNoReturn X2

Method: System.Void OnColumnAdded(UnityEngine.UIElements.Column column, System.Int32 index)

Disassembly:
	0x03D71920 MOV X22, X31
	0x03D71924 MOVZ W20, 0x26
	0x03D71928 B 0x3D71930
	0x03D7192C MOV X22, X31
	0x03D71930 ADRP X21, 0x3F5000
	0x03D71934 LDR X21, [X21 + 0xDF8]
	0x03D71938 LDR X1, [X21]
	0x03D7193C ADD X0, X31, 0x40
	0x03D71940 BL 0x24A6D20
	0x03D71944 CBNZ X22, 0x3D719DC
	0x03D71948 CMP W20, 0x26
	0x03D7194C B.EQ 0x3D71954
	0x03D71950 CBNZ W20, 0x3D71994
	0x03D71954 LDR X1, [X21]
	0x03D71958 ADD X0, X31, 0x58
	0x03D7195C BL 0x24A6D20
	0x03D71960 STR S8, [X19 + 0x4C]
	0x03D71964 STRB W31, [X19 + 0x48]
	0x03D71968 LDP X20, X19, [X31 + 0x130]
	0x03D7196C LDP X22, X21, [X31 + 0x120]
	0x03D71970 LDP X24, X23, [X31 + 0x110]
	0x03D71974 LDP X26, X25, [X31 + 0x100]
	0x03D71978 LDP X28, X27, [X31 + 0xF0]
	0x03D7197C LDP X29, X30, [X31 + 0xE0]
	0x03D71980 LDP D9, D8, [X31 + 0xD0]
	0x03D71984 LDP D11, D10, [X31 + 0xC0]
	0x03D71988 LDP D13, D12, [X31 + 0xB0]
	0x03D7198C ADD X31, X31, 0x140
	0x03D71990 RET
	0x03D71994 LDR X1, [X21]
	0x03D71998 ADD X0, X31, 0x58
	0x03D7199C BL 0x24A6D20
	0x03D719A0 B 0x3D71968
	0x03D719A4 BL 0x1C16F20
	0x03D719A8 BL 0x1C16F20
	0x03D719AC BL 0x1C16F20
	0x03D719B0 BL 0x1C16F20
	0x03D719B4 BL 0x1C16F20
	0x03D719B8 BL 0x1C16F20
	0x03D719BC BL 0x1C16F20
	0x03D719C0 BL 0x1C16F20
	0x03D719C4 MOV X0, X23
	0x03D719C8 BL 0x1C16F18
	0x03D719CC BL 0x1C16F20
	0x03D719D0 BL 0x1C16F20
	0x03D719D4 BL 0x1C16F20
	0x03D719D8 BL 0x1C16F20
	0x03D719DC MOV X0, X22
	0x03D719E0 BL 0x1C16F18
	0x03D719E4 BL 0x1C16F20
	0x03D719E8 MOV X0, X22
	0x03D719EC BL 0x1C16F18
	0x03D719F0 BL 0x1C16F20
	0x03D719F4 BL 0x1C16F20
	0x03D719F8 B 0x3D71C68
	0x03D719FC B 0x3D71A24
	0x03D71A00 B 0x3D71A30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x677000
	008 Move X23, 0x3F6000
	009 Move X21, 0x3F6000
	010 Move W8, [X22+3368]
	011 Move X23, [X23+1624]
	012 Move X21, [X21+3480]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x3F6000
	020 Move X0, [X0+1616]
	021 Call 0x1C17CF4
	022 Move X0, 0x3F6000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x3F6000
	026 Move X0, [X0+3480]
	027 Call 0x1C17CF4
	028 Move X0, 0x3F6000
	029 Move X0, [X0+3488]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+3368], W8
	033 Move X0, [X23]
	034 Call 0x1C17F10
	035 Move X2, [X21]
	036 Move X1, X19
	037 Move X3, X31
	038 Move X21, X0
	039 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	040 Compare X20, 0
	041 JumpIfEqual {68}
	042 Move X22, 0x3F6000
	043 Move X23, 0x3F6000
	044 Move X22, [X22+1616]
	045 Move X23, [X23+3488]
	046 Move X0, X20
	047 Move X1, X21
	048 Call Column.add_changed, X0, X1
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X2, [X23]
	052 Move X1, X19
	053 Move X3, X31
	054 Move X21, X0
	055 Call Action`1<Object>..ctor, X0, X1, X2
	056 Move X0, X20
	057 Move X1, X21
	058 Call Column.add_resized, X0, X1
	059 Move X0, X19
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Move X23, [X31+56]
	066 Call ColumnLayout.Dirty, X0
	067 Return 
	068 Call 0x1C17F20

Method: System.Void OnColumnRemoved(UnityEngine.UIElements.Column column)

Disassembly:
	0x03D71DC0 CMP X11, X1
	0x03D71DC4 B.EQ 0x3D71DE4
	0x03D71DC8 SUBS X9, X9, 0x1
	0x03D71DCC ADD X10, X10, 0x10
	0x03D71DD0 B.NE 0x3D71DBC
	0x03D71DD4 MOV X0, X19
	0x03D71DD8 MOV W2, W31
	0x03D71DDC BL 0x1C5C788
	0x03D71DE0 B 0x3D71DF0
	0x03D71DE4 LDRSW X9, [X10]
	0x03D71DE8 ADD X8, X8, X9, 0x4, LSL
	0x03D71DEC ADD X0, X8, 0x138
	0x03D71DF0 LDP X8, X1, [X0]
	0x03D71DF4 ADRP X22, 0x382000
	0x03D71DF8 LDR X22, [X22 + 0xE00]
	0x03D71DFC MOV X0, X19
	0x03D71E00 BLR X8
	0x03D71E04 MOV X19, X0
	0x03D71E08 CBZ X0, 0x3D72184
	0x03D71E0C ADRP X23, 0x382000
	0x03D71E10 ADRP X24, 0x3AB000
	0x03D71E14 ADRP X25, 0x3F5000
	0x03D71E18 LDR X23, [X23 + 0xE18]
	0x03D71E1C LDR X24, [X24 + 0x118]
	0x03D71E20 LDR X25, [X25 + 0xDE8]
	0x03D71E24 MOVZ W26, 0x42C80000
	0x03D71E28 LDR X8, [X19]
	0x03D71E2C LDR X1, [X23]
	0x03D71E30 LDRH W9, [X8 + 0x12E]
	0x03D71E34 CBZ X9, 0x3D71E58
	0x03D71E38 LDR X10, [X8 + 0xB0]
	0x03D71E3C ADD X10, X10, 0x8
	0x03D71E40 LDUR X11, [X10 - 0x8]
	0x03D71E44 CMP X11, X1
	0x03D71E48 B.EQ 0x3D71E68
	0x03D71E4C SUBS X9, X9, 0x1
	0x03D71E50 ADD X10, X10, 0x10
	0x03D71E54 B.NE 0x3D71E40
	0x03D71E58 MOV X0, X19
	0x03D71E5C MOV W2, W31
	0x03D71E60 BL 0x1C5C788
	0x03D71E64 B 0x3D71E74
	0x03D71E68 LDRSW X9, [X10]
	0x03D71E6C ADD X8, X8, X9, 0x4, LSL
	0x03D71E70 ADD X0, X8, 0x138
	0x03D71E74 LDP X8, X1, [X0]
	0x03D71E78 MOV X0, X19
	0x03D71E7C BLR X8
	0x03D71E80 TBZ X0, 0x0, 0x3D720DC
	0x03D71E84 LDR X8, [X19]
	0x03D71E88 LDR X1, [X24]
	0x03D71E8C LDRH W9, [X8 + 0x12E]
	0x03D71E90 CBZ X9, 0x3D71EB4
	0x03D71E94 LDR X10, [X8 + 0xB0]
	0x03D71E98 ADD X10, X10, 0x8
	0x03D71E9C LDUR X11, [X10 - 0x8]
	0x03D71EA0 CMP X11, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x677000
	008 Move X23, 0x3F6000
	009 Move X21, 0x3F6000
	010 Move W8, [X22+3369]
	011 Move X23, [X23+1624]
	012 Move X21, [X21+3480]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x3F6000
	020 Move X0, [X0+1616]
	021 Call 0x1C17CF4
	022 Move X0, 0x3F6000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x3F6000
	026 Move X0, [X0+3480]
	027 Call 0x1C17CF4
	028 Move X0, 0x3F6000
	029 Move X0, [X0+3488]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+3369], W8
	033 Move X0, [X23]
	034 Call 0x1C17F10
	035 Move X2, [X21]
	036 Move X1, X19
	037 Move X3, X31
	038 Move X21, X0
	039 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	040 Compare X20, 0
	041 JumpIfEqual {68}
	042 Move X22, 0x3F6000
	043 Move X23, 0x3F6000
	044 Move X22, [X22+1616]
	045 Move X23, [X23+3488]
	046 Move X0, X20
	047 Move X1, X21
	048 Call Column.remove_changed, X0, X1
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X2, [X23]
	052 Move X1, X19
	053 Move X3, X31
	054 Move X21, X0
	055 Call Action`1<Object>..ctor, X0, X1, X2
	056 Move X0, X20
	057 Move X1, X21
	058 Call Column.remove_resized, X0, X1
	059 Move X0, X19
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Move X23, [X31+56]
	066 Call ColumnLayout.Dirty, X0
	067 Return 
	068 Call 0x1C17F20

Method: System.Void OnColumnReordered(UnityEngine.UIElements.Column column, System.Int32 from, System.Int32 to)

Disassembly:
	0x03D71EA4 B.EQ 0x3D71EC4

ISIL:
	001 Call ColumnLayout.Dirty, X0
	002 Return 

Method: System.Boolean RequiresLayoutUpdate(UnityEngine.UIElements.ColumnDataType type)

Disassembly:
	0x03D71EA8 SUBS X9, X9, 0x1
	0x03D71EAC ADD X10, X10, 0x10
	0x03D71EB0 B.NE 0x3D71E9C
	0x03D71EB4 MOV X0, X19
	0x03D71EB8 MOV W2, W31
	0x03D71EBC BL 0x1C5C788
	0x03D71EC0 B 0x3D71ED0
	0x03D71EC4 LDRSW X9, [X10]
	0x03D71EC8 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Subtract W8, W1, 3
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Subtract W8, W1, 11
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0
	007 Move W0, 1
	008 Return X0

Method: System.Void OnColumnChanged(UnityEngine.UIElements.Column column, UnityEngine.UIElements.ColumnDataType type)

Disassembly:
	0x03D71ECC ADD X0, X8, 0x138
	0x03D71ED0 LDP X8, X1, [X0]
	0x03D71ED4 MOV X0, X19
	0x03D71ED8 BLR X8
	0x03D71EDC MOV X21, X0
	0x03D71EE0 CBZ X0, 0x3D72158
	0x03D71EE4 LDRB W8, [X21 + 0x60]
	0x03D71EE8 CBZ W8, 0x3D71F48
	0x03D71EEC LDR X8, [X20 + 0x30]
	0x03D71EF0 CBZ X8, 0x3D7215C
	0x03D71EF4 LDR W8, [X8 + 0x2C]

ISIL:
	001 Move W8, [X0+85]
	002 Compare W8, 0
	003 JumpIfEqual {5}
	004 Return 
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W8, 1
	007 NotImplemented "Instruction LSLV not yet implemented."
	008 Move W9, 0x18F8
	009 And W31, W8, W9
	010 Call ColumnLayout.Dirty, X0
	011 Return 

Method: System.Void OnColumnResized(UnityEngine.UIElements.Column column)

Disassembly:
	0x03D71EF8 CMP W8, 0x1
	0x03D71EFC B.NE 0x3D71F48
	0x03D71F00 LDR X0, [X20 + 0x10]

ISIL:
	001 Move W8, 1
	002 Move [X0+60], W8
	003 Return 

Method: System.Boolean IsClamped(System.Single value, System.Single min, System.Single max)

Disassembly:
	0x03D71F04 CBZ X0, 0x3D72178
	0x03D71F08 LDR W10, [X0 + 0x1C]
	0x03D71F0C LDR X8, [X0 + 0x10]
	0x03D71F10 LDR X9, [X25]
	0x03D71F14 ADD W10, W10, 0x1
	0x03D71F18 STR W10, [X0 + 0x1C]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 And W0, W8, W9
	006 Return X0

Method: System.Void DoLayout(System.Single width)

Disassembly:
	0x03D71F1C CBZ X8, 0x3D7217C
	0x03D71F20 LDRSW X10, [X0 + 0x18]
	0x03D71F24 LDR W11, [X8 + 0x18]
	0x03D71F28 CMP W10, W11
	0x03D71F2C B.CC 0x3D71F80
	0x03D71F30 LDR X8, [X9 + 0x20]
	0x03D71F34 LDR X8, [X8 + 0xC0]
	0x03D71F38 LDR X2, [X8 + 0x70]
	0x03D71F3C MOV X1, X21
	0x03D71F40 BL 0x301BF90
	0x03D71F44 B 0x3D71FA8
	0x03D71F48 LDR W8, [X21 + 0x48]
	0x03D71F4C CBNZ W8, 0x3D71FA8
	0x03D71F50 LDR X0, [X20 + 0x18]
	0x03D71F54 CBZ X0, 0x3D72174
	0x03D71F58 LDR W10, [X0 + 0x1C]
	0x03D71F5C LDR X8, [X0 + 0x10]
	0x03D71F60 LDR X9, [X25]
	0x03D71F64 ADD W10, W10, 0x1
	0x03D71F68 STR W10, [X0 + 0x1C]
	0x03D71F6C CBZ X8, 0x3D72170
	0x03D71F70 LDRSW X10, [X0 + 0x18]
	0x03D71F74 LDR W11, [X8 + 0x18]
	0x03D71F78 CMP W10, W11
	0x03D71F7C B.CS 0x3D71F94
	0x03D71F80 ADD W9, W10, 0x1
	0x03D71F84 ADD X8, X8, X10, 0x3, LSL
	0x03D71F88 STR W9, [X0 + 0x18]
	0x03D71F8C STR X21, [X8 + 0x20]
	0x03D71F90 B 0x3D71FA8
	0x03D71F94 LDR X8, [X9 + 0x20]
	0x03D71F98 LDR X8, [X8 + 0xC0]
	0x03D71F9C LDR X2, [X8 + 0x70]
	0x03D71FA0 MOV X1, X21
	0x03D71FA4 BL 0x301BF90
	0x03D71FA8 LDUR X8, [X21 + 0x44]
	0x03D71FAC UBFM X9, X8, 0x20, 0x3F
	0x03D71FB0 CMP X9, 0x1
	0x03D71FB4 B.NE 0x3D72014
	0x03D71FB8 LDR X0, [X20 + 0x20]
	0x03D71FBC CBZ X0, 0x3D72160
	0x03D71FC0 LDR W10, [X0 + 0x1C]
	0x03D71FC4 LDR X8, [X0 + 0x10]
	0x03D71FC8 LDR X9, [X25]
	0x03D71FCC ADD W10, W10, 0x1
	0x03D71FD0 STR W10, [X0 + 0x1C]
	0x03D71FD4 CBZ X8, 0x3D72164
	0x03D71FD8 LDRSW X10, [X0 + 0x18]
	0x03D71FDC LDR W11, [X8 + 0x18]
	0x03D71FE0 CMP W10, W11
	0x03D71FE4 B.CS 0x3D71FFC
	0x03D71FE8 ADD W9, W10, 0x1
	0x03D71FEC ADD X8, X8, X10, 0x3, LSL
	0x03D71FF0 STR W9, [X0 + 0x18]
	0x03D71FF4 STR X21, [X8 + 0x20]
	0x03D71FF8 B 0x3D72010
	0x03D71FFC LDR X8, [X9 + 0x20]
	0x03D72000 LDR X8, [X8 + 0xC0]
	0x03D72004 LDR X2, [X8 + 0x70]
	0x03D72008 MOV X1, X21
	0x03D7200C BL 0x301BF90
	0x03D72010 LDUR X8, [X21 + 0x44]
	0x03D72014 UBFM X8, X8, 0x20, 0x3F
	0x03D72018 CBNZ X8, 0x3D7208C
	0x03D7201C LDR W8, [X21 + 0x50]
	0x03D72020 CMP W8, 0x1
	0x03D72024 B.EQ 0x3D72034
	0x03D72028 LDR W8, [X21 + 0x58]
	0x03D7202C CMP W8, 0x1
	0x03D72030 B.NE 0x3D7208C
	0x03D72034 LDR X0, [X20 + 0x28]
	0x03D72038 CBZ X0, 0x3D72168
	0x03D7203C LDR W10, [X0 + 0x1C]
	0x03D72040 LDR X8, [X0 + 0x10]
	0x03D72044 LDR X9, [X25]
	0x03D72048 ADD W10, W10, 0x1
	0x03D7204C STR W10, [X0 + 0x1C]
	0x03D72050 CBZ X8, 0x3D7216C
	0x03D72054 LDRSW X10, [X0 + 0x18]
	0x03D72058 LDR W11, [X8 + 0x18]
	0x03D7205C CMP W10, W11
	0x03D72060 B.CS 0x3D72078
	0x03D72064 ADD W9, W10, 0x1
	0x03D72068 ADD X8, X8, X10, 0x3, LSL
	0x03D7206C STR W9, [X0 + 0x18]
	0x03D72070 STR X21, [X8 + 0x20]
	0x03D72074 B 0x3D7208C
	0x03D72078 LDR X8, [X9 + 0x20]
	0x03D7207C LDR X8, [X8 + 0xC0]
	0x03D72080 LDR X2, [X8 + 0x70]
	0x03D72084 MOV X1, X21
	0x03D72088 BL 0x301BF90
	0x03D7208C LDR V1, [X20 + 0x40]
	0x03D72090 LDR V0, [X20 + 0x50]
	0x03D72094 LDR W8, [X21 + 0x58]
	0x03D72098 LDR V2, [X21 + 0x54]
	0x03D7209C CBZ W8, 0x3D720AC
	0x03D720A0 FMUL S2, S0, S2
	0x03D720A4 FMOV S3, W26
	0x03D720A8 FDIV S2, S2, S3
	0x03D720AC FADD S1, S1, S2
	0x03D720B0 STR S1, [X20 + 0x40]
	0x03D720B4 LDR V1, [X20 + 0x44]
	0x03D720B8 LDR W8, [X21 + 0x50]
	0x03D720BC LDR V2, [X21 + 0x4C]
	0x03D720C0 CBZ W8, 0x3D720D0
	0x03D720C4 FMUL S0, S0, S2
	0x03D720C8 FMOV S2, W26
	0x03D720CC FDIV S2, S0, S2
	0x03D720D0 FADD S0, S1, S2
	0x03D720D4 STR S0, [X20 + 0x44]
	0x03D720D8 B 0x3D71E28
	0x03D720DC MOV X21, X31
	0x03D720E0 CBZ X19, 0x3D7213C
	0x03D720E4 LDR X8, [X19]
	0x03D720E8 LDR X1, [X22]
	0x03D720EC LDRH W9, [X8 + 0x12E]
	0x03D720F0 CBZ X9, 0x3D72114
	0x03D720F4 LDR X10, [X8 + 0xB0]
	0x03D720F8 ADD X10, X10, 0x8
	0x03D720FC LDUR X11, [X10 - 0x8]
	0x03D72100 CMP X11, X1
	0x03D72104 B.EQ 0x3D72124
	0x03D72108 SUBS X9, X9, 0x1
	0x03D7210C ADD X10, X10, 0x10
	0x03D72110 B.NE 0x3D720FC
	0x03D72114 MOV X0, X19
	0x03D72118 MOV W2, W31
	0x03D7211C BL 0x1C5C788
	0x03D72120 B 0x3D72130
	0x03D72124 LDRSW X9, [X10]
	0x03D72128 ADD X8, X8, X9, 0x4, LSL
	0x03D7212C ADD X0, X8, 0x138
	0x03D72130 LDP X8, X1, [X0]
	0x03D72134 MOV X0, X19
	0x03D72138 BLR X8
	0x03D7213C CBNZ X21, 0x3D72188
	0x03D72140 LDP X20, X19, [X31 + 0x40]
	0x03D72144 LDP X22, X21, [X31 + 0x30]
	0x03D72148 LDP X24, X23, [X31 + 0x20]
	0x03D7214C LDP X26, X25, [X31 + 0x10]
	0x03D72150 LDR X30, [X31], #0x50
	0x03D72154 RET
	0x03D72158 BL 0x1C16F20
	0x03D7215C BL 0x1C16F20
	0x03D72160 BL 0x1C16F20
	0x03D72164 BL 0x1C16F20
	0x03D72168 BL 0x1C16F20
	0x03D7216C BL 0x1C16F20
	0x03D72170 BL 0x1C16F20
	0x03D72174 BL 0x1C16F20
	0x03D72178 BL 0x1C16F20
	0x03D7217C BL 0x1C16F20
	0x03D72180 BL 0x1C16F20
	0x03D72184 BL 0x1C16F20
	0x03D72188 MOV X0, X21
	0x03D7218C BL 0x1C16F18
	0x03D72190 B 0x3D721C0
	0x03D72194 B 0x3D721C0
	0x03D72198 B 0x3D721C0
	0x03D7219C B 0x3D721C0
	0x03D721A0 B 0x3D721C0
	0x03D721A4 B 0x3D721C0
	0x03D721A8 B 0x3D721C0
	0x03D721AC B 0x3D721C0
	0x03D721B0 B 0x3D721C0
	0x03D721B4 B 0x3D721C0
	0x03D721B8 B 0x3D721C0
	0x03D721BC B 0x3D721C0
	0x03D721C0 MOV X20, X0
	0x03D721C4 CMP W1, 0x1
	0x03D721C8 B.NE 0x3D721E0
	0x03D721CC MOV X0, X20
	0x03D721D0 BL 0x3EB1AD0
	0x03D721D4 LDR X21, [X0]
	0x03D721D8 BL 0x3EB1AE0
	0x03D721DC B 0x3D720E0
	0x03D721E0 MOV X21, X31
	0x03D721E4 B 0x3D721EC
	0x03D721E8 MOV X20, X0
	0x03D721EC CBZ X19, 0x3D72248
	0x03D721F0 LDR X8, [X19]
	0x03D721F4 LDR X1, [X22]
	0x03D721F8 LDRH W9, [X8 + 0x12E]
	0x03D721FC CBZ X9, 0x3D72220
	0x03D72200 LDR X10, [X8 + 0xB0]
	0x03D72204 ADD X10, X10, 0x8
	0x03D72208 LDUR X11, [X10 - 0x8]
	0x03D7220C CMP X11, X1
	0x03D72210 B.EQ 0x3D72230
	0x03D72214 SUBS X9, X9, 0x1
	0x03D72218 ADD X10, X10, 0x10
	0x03D7221C B.NE 0x3D72208
	0x03D72220 MOV X0, X19
	0x03D72224 MOV W2, W31
	0x03D72228 BL 0x1C5C788
	0x03D7222C B 0x3D7223C
	0x03D72230 LDRSW X9, [X10]
	0x03D72234 ADD X8, X8, X9, 0x4, LSL
	0x03D72238 ADD X0, X8, 0x138
	0x03D7223C LDP X8, X1, [X0]
	0x03D72240 MOV X0, X19
	0x03D72244 BLR X8
	0x03D72248 CBNZ X21, 0x3D72254
	0x03D7224C MOV X0, X20
	0x03D72250 BL 0x1D2C690
	0x03D72254 MOV X0, X21
	0x03D72258 BL 0x1C16F18
	0x03D7225C BL 0x1990590
	0x03D72260 STR X30, [X31 - 0x40]!
	0x03D72264 STP X24, X23, [X31 + 0x10]
	0x03D72268 STP X22, X21, [X31 + 0x20]
	0x03D7226C STP X20, X19, [X31 + 0x30]
	0x03D72270 ADRP X19, 0x675000
	0x03D72274 LDRB W8, [X19 + 0xD3C]
	0x03D72278 MOV X20, X0
	0x03D7227C TBNZ X8, 0x0, 0x3D722B8
	0x03D72280 ADRP X0, 0x381000
	0x03D72284 LDR X0, [X0 + 0xE00]
	0x03D72288 BL 0x1C16CF4
	0x03D7228C ADRP X0, 0x3AA000
	0x03D72290 LDR X0, [X0 + 0x110]
	0x03D72294 BL 0x1C16CF4
	0x03D72298 ADRP X0, 0x3AA000
	0x03D7229C LDR X0, [X0 + 0x118]
	0x03D722A0 BL 0x1C16CF4
	0x03D722A4 ADRP X0, 0x381000
	0x03D722A8 LDR X0, [X0 + 0xE18]
	0x03D722AC BL 0x1C16CF4
	0x03D722B0 MOVZ W8, 0x1
	0x03D722B4 STRB W8, [X19 + 0xD3C]
	0x03D722B8 LDR X19, [X20 + 0x30]
	0x03D722BC STR X31, [X20 + 0x40]
	0x03D722C0 CBZ X19, 0x3D724DC
	0x03D722C4 MOV X0, X19
	0x03D722C8 BL 0x3D746E4
	0x03D722CC LDR X19, [X19 + 0x20]
	0x03D722D0 CBZ X19, 0x3D724DC
	0x03D722D4 ADRP X10, 0x3AA000
	0x03D722D8 LDR X8, [X19]
	0x03D722DC LDR X10, [X10 + 0x110]
	0x03D722E0 LDRH W9, [X8 + 0x12E]
	0x03D722E4 LDR X1, [X10]
	0x03D722E8 CBZ X9, 0x3D7230C
	0x03D722EC LDR X10, [X8 + 0xB0]
	0x03D722F0 ADD X10, X10, 0x8
	0x03D722F4 LDUR X11, [X10 - 0x8]
	0x03D722F8 CMP X11, X1
	0x03D722FC B.EQ 0x3D7231C
	0x03D72300 SUBS X9, X9, 0x1
	0x03D72304 ADD X10, X10, 0x10
	0x03D72308 B.NE 0x3D722F4
	0x03D7230C MOV X0, X19
	0x03D72310 MOV W2, W31
	0x03D72314 BL 0x1C5C788
	0x03D72318 B 0x3D72328
	0x03D7231C LDRSW X9, [X10]
	0x03D72320 ADD X8, X8, X9, 0x4, LSL
	0x03D72324 ADD X0, X8, 0x138
	0x03D72328 LDP X8, X1, [X0]
	0x03D7232C ADRP X21, 0x381000
	0x03D72330 LDR X21, [X21 + 0xE00]
	0x03D72334 MOV X0, X19
	0x03D72338 BLR X8
	0x03D7233C MOV X19, X0
	0x03D72340 CBZ X0, 0x3D724E0
	0x03D72344 ADRP X22, 0x381000
	0x03D72348 ADRP X23, 0x3AA000
	0x03D7234C LDR X22, [X22 + 0xE18]
	0x03D72350 LDR X23, [X23 + 0x118]
	0x03D72354 MOVZ W24, 0x42C80000
	0x03D72358 LDR X8, [X19]
	0x03D7235C LDR X1, [X22]
	0x03D72360 LDRH W9, [X8 + 0x12E]
	0x03D72364 CBZ X9, 0x3D72388
	0x03D72368 LDR X10, [X8 + 0xB0]
	0x03D7236C ADD X10, X10, 0x8
	0x03D72370 LDUR X11, [X10 - 0x8]
	0x03D72374 CMP X11, X1
	0x03D72378 B.EQ 0x3D72398
	0x03D7237C SUBS X9, X9, 0x1
	0x03D72380 ADD X10, X10, 0x10
	0x03D72384 B.NE 0x3D72370
	0x03D72388 MOV X0, X19
	0x03D7238C MOV W2, W31
	0x03D72390 BL 0x1C5C788
	0x03D72394 B 0x3D723A4
	0x03D72398 LDRSW X9, [X10]
	0x03D7239C ADD X8, X8, X9, 0x4, LSL
	0x03D723A0 ADD X0, X8, 0x138
	0x03D723A4 LDP X8, X1, [X0]
	0x03D723A8 MOV X0, X19
	0x03D723AC BLR X8
	0x03D723B0 TBZ X0, 0x0, 0x3D72460
	0x03D723B4 LDR X8, [X19]
	0x03D723B8 LDR X1, [X23]
	0x03D723BC LDRH W9, [X8 + 0x12E]
	0x03D723C0 CBZ X9, 0x3D723E4
	0x03D723C4 LDR X10, [X8 + 0xB0]
	0x03D723C8 ADD X10, X10, 0x8
	0x03D723CC LDUR X11, [X10 - 0x8]
	0x03D723D0 CMP X11, X1
	0x03D723D4 B.EQ 0x3D723F4
	0x03D723D8 SUBS X9, X9, 0x1
	0x03D723DC ADD X10, X10, 0x10
	0x03D723E0 B.NE 0x3D723CC
	0x03D723E4 MOV X0, X19
	0x03D723E8 MOV W2, W31
	0x03D723EC BL 0x1C5C788
	0x03D723F0 B 0x3D72400
	0x03D723F4 LDRSW X9, [X10]
	0x03D723F8 ADD X8, X8, X9, 0x4, LSL
	0x03D723FC ADD X0, X8, 0x138
	0x03D72400 LDP X8, X1, [X0]
	0x03D72404 MOV X0, X19
	0x03D72408 BLR X8
	0x03D7240C CBZ X0, 0x3D724D8
	0x03D72410 LDR V0, [X20 + 0x50]
	0x03D72414 LDR W8, [X0 + 0x58]
	0x03D72418 LDR V1, [X0 + 0x54]
	0x03D7241C CBZ W8, 0x3D7242C
	0x03D72420 FMUL S1, S0, S1
	0x03D72424 FMOV S2, W24
	0x03D72428 FDIV S1, S1, S2
	0x03D7242C LDR V2, [X20 + 0x40]
	0x03D72430 FADD S1, S2, S1
	0x03D72434 STR S1, [X20 + 0x40]
	0x03D72438 LDR W8, [X0 + 0x50]
	0x03D7243C LDR V1, [X0 + 0x4C]
	0x03D72440 CBZ W8, 0x3D72450
	0x03D72444 FMUL S0, S0, S1
	0x03D72448 FMOV S1, W24
	0x03D7244C FDIV S1, S0, S1
	0x03D72450 LDR V0, [X20 + 0x44]
	0x03D72454 FADD S0, S0, S1
	0x03D72458 STR S0, [X20 + 0x44]
	0x03D7245C B 0x3D72358
	0x03D72460 MOV X20, X31
	0x03D72464 CBZ X19, 0x3D724C0
	0x03D72468 LDR X8, [X19]
	0x03D7246C LDR X1, [X21]
	0x03D72470 LDRH W9, [X8 + 0x12E]
	0x03D72474 CBZ X9, 0x3D72498
	0x03D72478 LDR X10, [X8 + 0xB0]
	0x03D7247C ADD X10, X10, 0x8
	0x03D72480 LDUR X11, [X10 - 0x8]
	0x03D72484 CMP X11, X1
	0x03D72488 B.EQ 0x3D724A8
	0x03D7248C SUBS X9, X9, 0x1
	0x03D72490 ADD X10, X10, 0x10
	0x03D72494 B.NE 0x3D72480
	0x03D72498 MOV X0, X19
	0x03D7249C MOV W2, W31
	0x03D724A0 BL 0x1C5C788
	0x03D724A4 B 0x3D724B4
	0x03D724A8 LDRSW X9, [X10]
	0x03D724AC ADD X8, X8, X9, 0x4, LSL
	0x03D724B0 ADD X0, X8, 0x138
	0x03D724B4 LDP X8, X1, [X0]
	0x03D724B8 MOV X0, X19
	0x03D724BC BLR X8
	0x03D724C0 CBNZ X20, 0x3D724E4
	0x03D724C4 LDP X20, X19, [X31 + 0x30]
	0x03D724C8 LDP X22, X21, [X31 + 0x20]
	0x03D724CC LDP X24, X23, [X31 + 0x10]
	0x03D724D0 LDR X30, [X31], #0x40
	0x03D724D4 RET
	0x03D724D8 BL 0x1C16F20
	0x03D724DC BL 0x1C16F20
	0x03D724E0 BL 0x1C16F20
	0x03D724E4 MOV X0, X20
	0x03D724E8 BL 0x1C16F18
	0x03D724EC B 0x3D724F8
	0x03D724F0 B 0x3D724F8
	0x03D724F4 B 0x3D724F8
	0x03D724F8 CMP W1, 0x1
	0x03D724FC B.NE 0x3D72510
	0x03D72500 BL 0x3EB1AD0
	0x03D72504 LDR X20, [X0]
	0x03D72508 BL 0x3EB1AE0
	0x03D7250C B 0x3D72464
	0x03D72510 STR X0, [X31 + 0x8]
	0x03D72514 MOV X20, X31
	0x03D72518 B 0x3D72520
	0x03D7251C STR X0, [X31 + 0x8]
	0x03D72520 CBZ X19, 0x3D7257C
	0x03D72524 LDR X8, [X19]
	0x03D72528 LDR X1, [X21]
	0x03D7252C LDRH W9, [X8 + 0x12E]
	0x03D72530 CBZ X9, 0x3D72554
	0x03D72534 LDR X10, [X8 + 0xB0]
	0x03D72538 ADD X10, X10, 0x8
	0x03D7253C LDUR X11, [X10 - 0x8]
	0x03D72540 CMP X11, X1
	0x03D72544 B.EQ 0x3D72564
	0x03D72548 SUBS X9, X9, 0x1
	0x03D7254C ADD X10, X10, 0x10
	0x03D72550 B.NE 0x3D7253C
	0x03D72554 MOV X0, X19
	0x03D72558 MOV W2, W31
	0x03D7255C BL 0x1C5C788
	0x03D72560 B 0x3D72570
	0x03D72564 LDRSW X9, [X10]
	0x03D72568 ADD X8, X8, X9, 0x4, LSL
	0x03D7256C ADD X0, X8, 0x138
	0x03D72570 LDP X8, X1, [X0]
	0x03D72574 MOV X0, X19
	0x03D72578 BLR X8
	0x03D7257C CBNZ X20, 0x3D72588
	0x03D72580 LDR X0, [X31 + 0x8]
	0x03D72584 BL 0x1D2C690
	0x03D72588 MOV X0, X20
	0x03D7258C BL 0x1C16F18
	0x03D72590 BL 0x1990590
	0x03D72594 STR X30, [X31 - 0x20]!
	0x03D72598 STP X20, X19, [X31 + 0x10]
	0x03D7259C ADRP X20, 0x675000
	0x03D725A0 LDRB W8, [X20 + 0xD4A]
	0x03D725A4 MOV X19, X0
	0x03D725A8 TBNZ X8, 0x0, 0x3D725C0
	0x03D725AC ADRP X0, 0x3AA000
	0x03D725B0 LDR X0, [X0 + 0x110]
	0x03D725B4 BL 0x1C16CF4
	0x03D725B8 MOVZ W8, 0x1
	0x03D725BC STRB W8, [X20 + 0xD4A]
	0x03D725C0 LDR X19, [X19 + 0x10]
	0x03D725C4 CBZ X19, 0x3D72630
	0x03D725C8 ADRP X10, 0x3AA000
	0x03D725CC LDR X8, [X19]
	0x03D725D0 LDR X10, [X10 + 0x110]
	0x03D725D4 LDRH W9, [X8 + 0x12E]
	0x03D725D8 LDR X1, [X10]
	0x03D725DC CBZ X9, 0x3D72600
	0x03D725E0 LDR X10, [X8 + 0xB0]
	0x03D725E4 ADD X10, X10, 0x8
	0x03D725E8 LDUR X11, [X10 - 0x8]
	0x03D725EC CMP X11, X1
	0x03D725F0 B.EQ 0x3D72610
	0x03D725F4 SUBS X9, X9, 0x1
	0x03D725F8 ADD X10, X10, 0x10
	0x03D725FC B.NE 0x3D725E8
	0x03D72600 MOV X0, X19
	0x03D72604 MOV W2, W31
	0x03D72608 BL 0x1C5C788
	0x03D7260C B 0x3D7261C
	0x03D72610 LDRSW X9, [X10]
	0x03D72614 ADD X8, X8, X9, 0x4, LSL
	0x03D72618 ADD X0, X8, 0x138
	0x03D7261C LDP X2, X1, [X0]
	0x03D72620 MOV X0, X19
	0x03D72624 LDP X20, X19, [X31 + 0x10]
	0x03D72628 LDR X30, [X31], #0x20
	0x03D7262C BR X2
	0x03D72630 BL 0x1C16F20
	0x03D72634 STP X30, X21, [X31 - 0x20]!
	0x03D72638 STP X20, X19, [X31 + 0x10]
	0x03D7263C ADRP X21, 0x675000
	0x03D72640 LDRB W8, [X21 + 0xD38]
	0x03D72644 MOV X19, X1
	0x03D72648 MOV X20, X0
	0x03D7264C TBNZ X8, 0x0, 0x3D72670
	0x03D72650 ADRP X0, 0x3F4000
	0x03D72654 LDR X0, [X0 + 0xE00]
	0x03D72658 BL 0x1C16CF4
	0x03D7265C ADRP X0, 0x3F4000
	0x03D72660 LDR X0, [X0 + 0xE08]
	0x03D72664 BL 0x1C16CF4
	0x03D72668 MOVZ W8, 0x1
	0x03D7266C STRB W8, [X21 + 0xD38]
	0x03D72670 LDRB W8, [X20 + 0x54]
	0x03D72674 CBZ W8, 0x3D726BC
	0x03D72678 LDR X0, [X20 + 0x80]
	0x03D7267C CBZ X0, 0x3D726D0
	0x03D72680 ADRP X8, 0x3F4000
	0x03D72684 LDR X8, [X8 + 0xE00]
	0x03D72688 MOV X1, X19
	0x03D7268C LDR X2, [X8]
	0x03D72690 BL 0x2AB4C84
	0x03D72694 TBZ X0, 0x0, 0x3D726BC
	0x03D72698 LDR X0, [X20 + 0x80]
	0x03D7269C CBZ X0, 0x3D726D0
	0x03D726A0 ADRP X8, 0x3F4000
	0x03D726A4 LDR X8, [X8 + 0xE08]
	0x03D726A8 MOV X1, X19
	0x03D726AC LDP X20, X19, [X31 + 0x10]
	0x03D726B0 LDR X2, [X8]
	0x03D726B4 LDP X30, X21, [X31], #0x20
	0x03D726B8 B 0x2AB4A08
	0x03D726BC CBZ X19, 0x3D726D0
	0x03D726C0 LDR V0, [X19 + 0x5C]
	0x03D726C4 LDP X20, X19, [X31 + 0x10]
	0x03D726C8 LDP X30, X21, [X31], #0x20
	0x03D726CC RET
	0x03D726D0 BL 0x1C16F20
	0x03D726D4 STR X30, [X31 - 0x50]!
	0x03D726D8 STP X26, X25, [X31 + 0x10]
	0x03D726DC STP X24, X23, [X31 + 0x20]
	0x03D726E0 STP X22, X21, [X31 + 0x30]
	0x03D726E4 STP X20, X19, [X31 + 0x40]
	0x03D726E8 ADRP X26, 0x675000
	0x03D726EC LDRB W8, [X26 + 0xD2B]
	0x03D726F0 MOV W22, W6
	0x03D726F4 MOV W24, W5
	0x03D726F8 MOV X19, X4
	0x03D726FC MOV X20, X3
	0x03D72700 MOV X21, X2
	0x03D72704 MOV X23, X1
	0x03D72708 MOV X25, X0
	0x03D7270C TBNZ X8, 0x0, 0x3D72724
	0x03D72710 ADRP X0, 0x3F4000
	0x03D72714 LDR X0, [X0 + 0xD70]
	0x03D72718 BL 0x1C16CF4
	0x03D7271C MOVZ W8, 0x1
	0x03D72720 STRB W8, [X26 + 0xD2B]
	0x03D72724 CBZ X23, 0x3D727B8
	0x03D72728 LDR W8, [X23 + 0x18]
	0x03D7272C CBNZ W8, 0x3D72748
	0x03D72730 CBZ X20, 0x3D727B8
	0x03D72734 LDR W8, [X20 + 0x18]
	0x03D72738 CBNZ W8, 0x3D72748
	0x03D7273C CBZ X21, 0x3D727B8
	0x03D72740 LDR W8, [X21 + 0x18]
	0x03D72744 CBZ W8, 0x3D727A0
	0x03D72748 LDR V0, [X19]
	0x03D7274C AND W5, W24, 0x1
	0x03D72750 AND W6, W22, 0x1
	0x03D72754 MOV X0, X25
	0x03D72758 MOV X1, X23
	0x03D7275C MOV X2, X21
	0x03D72760 MOV X3, X20
	0x03D72764 MOV X4, X19
	0x03D72768 FCMP S0, 0x0
	0x03D7276C B.LE 0x3D72788
	0x03D72770 LDP X20, X19, [X31 + 0x40]
	0x03D72774 LDP X22, X21, [X31 + 0x30]
	0x03D72778 LDP X24, X23, [X31 + 0x20]
	0x03D7277C LDP X26, X25, [X31 + 0x10]
	0x03D72780 LDR X30, [X31], #0x50
	0x03D72784 B 0x3D727BC
	0x03D72788 LDP X20, X19, [X31 + 0x40]
	0x03D7278C LDP X22, X21, [X31 + 0x30]
	0x03D72790 LDP X24, X23, [X31 + 0x20]
	0x03D72794 LDP X26, X25, [X31 + 0x10]
	0x03D72798 LDR X30, [X31], #0x50
	0x03D7279C B 0x3D72934
	0x03D727A0 LDP X20, X19, [X31 + 0x40]
	0x03D727A4 LDP X22, X21, [X31 + 0x30]
	0x03D727A8 LDP X24, X23, [X31 + 0x20]
	0x03D727AC LDP X26, X25, [X31 + 0x10]
	0x03D727B0 LDR X30, [X31], #0x50
	0x03D727B4 RET
	0x03D727B8 BL 0x1C16F20
	0x03D727BC STP D9, D8, [X31 - 0x60]!
	0x03D727C0 STP X30, X27, [X31 + 0x10]
	0x03D727C4 STP X26, X25, [X31 + 0x20]
	0x03D727C8 STP X24, X23, [X31 + 0x30]
	0x03D727CC STP X22, X21, [X31 + 0x40]
	0x03D727D0 STP X20, X19, [X31 + 0x50]
	0x03D727D4 ADRP X27, 0x675000
	0x03D727D8 ADRP X26, 0x381000
	0x03D727DC LDRB W8, [X27 + 0xD2C]
	0x03D727E0 LDR X26, [X26 + 0x5A8]
	0x03D727E4 MOV W23, W6
	0x03D727E8 MOV W24, W5
	0x03D727EC MOV X19, X4
	0x03D727F0 MOV X22, X3
	0x03D727F4 MOV X20, X2
	0x03D727F8 MOV X25, X1
	0x03D727FC MOV X21, X0
	0x03D72800 TBNZ X8, 0x0, 0x3D72818
	0x03D72804 ADRP X0, 0x381000
	0x03D72808 LDR X0, [X0 + 0x5A8]
	0x03D7280C BL 0x1C16CF4
	0x03D72810 MOVZ W8, 0x1
	0x03D72814 STRB W8, [X27 + 0xD2C]
	0x03D72818 LDR X0, [X26]
	0x03D7281C LDR V8, [X19]
	0x03D72820 LDR W8, [X0 + 0xE0]
	0x03D72824 CBNZ W8, 0x3D7282C
	0x03D72828 BL 0x1C16DFC
	0x03D7282C ORR W27, W24, W23, 0x0
	0x03D72830 FABS S0, S8
	0x03D72834 TBNZ X27, 0x0, 0x3D72860
	0x03D72838 MOVZ W2, 0x1
	0x03D7283C MOVZ W3, 0x1
	0x03D72840 MOV X0, X21
	0x03D72844 MOV X1, X20
	0x03D72848 BL 0x3D72A84
	0x03D7284C MOVZ W2, 0x1
	0x03D72850 MOVZ W3, 0x1
	0x03D72854 MOV X0, X21
	0x03D72858 MOV X1, X22
	0x03D7285C BL 0x3D72A84
	0x03D72860 ORN W8, W31, W27, 0x0
	0x03D72864 AND W2, W8, 0x1
	0x03D72868 MOV X0, X21
	0x03D7286C MOV X1, X25
	0x03D72870 BL 0x3D72BA8
	0x03D72874 MOV V8.16B, V0.16B
	0x03D72878 TBZ X24, 0x0, 0x3D728B8
	0x03D7287C MOV X0, X21
	0x03D72880 MOV X1, X22
	0x03D72884 MOV V0.16B, V8.16B
	0x03D72888 MOV W2, W31
	0x03D7288C BL 0x3D72BA8
	0x03D72890 MOV X0, X21
	0x03D72894 MOV X1, X20
	0x03D72898 MOV W2, W31
	0x03D7289C BL 0x3D72BA8
	0x03D728A0 MOV X0, X21
	0x03D728A4 MOV X1, X22
	0x03D728A8 MOV W2, W31
	0x03D728AC BL 0x3D72E88
	0x03D728B0 MOV W23, W31
	0x03D728B4 B 0x3D728DC
	0x03D728B8 TBNZ X23, 0x0, 0x3D728C4
	0x03D728BC FCMP S8, 0x0
	0x03D728C0 B.LE 0x3D728F0
	0x03D728C4 MOVZ W2, 0x1
	0x03D728C8 MOV X0, X21
	0x03D728CC MOV X1, X22
	0x03D728D0 MOV V0.16B, V8.16B
	0x03D728D4 MOVZ W23, 0x1
	0x03D728D8 BL 0x3D72E88
	0x03D728DC MOV X0, X21
	0x03D728E0 MOV X1, X20
	0x03D728E4 MOV W2, W23
	0x03D728E8 BL 0x3D72E88
	0x03D728EC MOV V8.16B, V0.16B
	0x03D728F0 LDR X0, [X26]
	0x03D728F4 LDR V9, [X19]
	0x03D728F8 LDR W8, [X0 + 0xE0]
	0x03D728FC CBNZ W8, 0x3D72904
	0x03D72900 BL 0x1C16DFC
	0x03D72904 FSUB S1, S9, S8
	0x03D72908 FMOV S0, W31
	0x03D7290C MOV X0, X31
	0x03D72910 BL 0x337EE18
	0x03D72914 STR S0, [X19]
	0x03D72918 LDP X20, X19, [X31 + 0x50]
	0x03D7291C LDP X22, X21, [X31 + 0x40]
	0x03D72920 LDP X24, X23, [X31 + 0x30]
	0x03D72924 LDP X26, X25, [X31 + 0x20]
	0x03D72928 LDP X30, X27, [X31 + 0x10]
	0x03D7292C LDP D9, D8, [X31], #0x60
	0x03D72930 RET
	0x03D72934 STR D8, [X31 - 0x60]!
	0x03D72938 STP X30, X27, [X31 + 0x10]
	0x03D7293C STP X26, X25, [X31 + 0x20]
	0x03D72940 STP X24, X23, [X31 + 0x30]
	0x03D72944 STP X22, X21, [X31 + 0x40]
	0x03D72948 STP X20, X19, [X31 + 0x50]
	0x03D7294C ADRP X27, 0x675000
	0x03D72950 ADRP X26, 0x381000
	0x03D72954 LDRB W8, [X27 + 0xD2D]
	0x03D72958 LDR X26, [X26 + 0x5A8]
	0x03D7295C MOV W25, W6
	0x03D72960 MOV W23, W5
	0x03D72964 MOV X19, X4
	0x03D72968 MOV X22, X3
	0x03D7296C MOV X20, X2
	0x03D72970 MOV X24, X1
	0x03D72974 MOV X21, X0
	0x03D72978 TBNZ X8, 0x0, 0x3D72990
	0x03D7297C ADRP X0, 0x381000
	0x03D72980 LDR X0, [X0 + 0x5A8]
	0x03D72984 BL 0x1C16CF4
	0x03D72988 MOVZ W8, 0x1
	0x03D7298C STRB W8, [X27 + 0xD2D]
	0x03D72990 LDR X0, [X26]
	0x03D72994 LDR V8, [X19]
	0x03D72998 LDR W8, [X0 + 0xE0]
	0x03D7299C CBNZ W8, 0x3D729A4
	0x03D729A0 BL 0x1C16DFC
	0x03D729A4 ORR W26, W23, W25, 0x0
	0x03D729A8 FABS S0, S8
	0x03D729AC TBNZ X26, 0x0, 0x3D729D8
	0x03D729B0 MOVZ W2, 0x1
	0x03D729B4 MOV X0, X21
	0x03D729B8 MOV X1, X20
	0x03D729BC MOV W3, W31
	0x03D729C0 BL 0x3D72A84
	0x03D729C4 MOVZ W2, 0x1
	0x03D729C8 MOV X0, X21
	0x03D729CC MOV X1, X22
	0x03D729D0 MOV W3, W31
	0x03D729D4 BL 0x3D72A84
	0x03D729D8 TBZ X25, 0x0, 0x3D72A04
	0x03D729DC MOVZ W2, 0x1
	0x03D729E0 MOV X0, X21
	0x03D729E4 MOV X1, X20
	0x03D729E8 MOV W3, W31
	0x03D729EC BL 0x3D72A84
	0x03D729F0 MOVZ W2, 0x1
	0x03D729F4 MOV X0, X21
	0x03D729F8 MOV X1, X22
	0x03D729FC MOV W3, W31
	0x03D72A00 BL 0x3D72A84
	0x03D72A04 ORN W8, W31, W26, 0x0
	0x03D72A08 AND W2, W8, 0x1
	0x03D72A0C MOV X0, X21
	0x03D72A10 MOV X1, X24
	0x03D72A14 BL 0x3D73018
	0x03D72A18 TBZ X23, 0x0, 0x3D72A5C
	0x03D72A1C MOV X0, X21
	0x03D72A20 MOV X1, X22
	0x03D72A24 MOV W2, W31
	0x03D72A28 BL 0x3D73018
	0x03D72A2C MOV X0, X21
	0x03D72A30 MOV X1, X20
	0x03D72A34 MOV W2, W31
	0x03D72A38 BL 0x3D73018
	0x03D72A3C MOV X0, X21
	0x03D72A40 MOV X1, X22
	0x03D72A44 MOV W2, W31
	0x03D72A48 BL 0x3D732DC
	0x03D72A4C MOV X0, X21
	0x03D72A50 MOV X1, X20
	0x03D72A54 MOV W2, W31
	0x03D72A58 BL 0x3D732DC
	0x03D72A5C LDR V1, [X19]
	0x03D72A60 LDP X22, X21, [X31 + 0x40]
	0x03D72A64 LDP X24, X23, [X31 + 0x30]
	0x03D72A68 LDP X26, X25, [X31 + 0x20]
	0x03D72A6C FADD S0, S0, S1
	0x03D72A70 STR S0, [X19]
	0x03D72A74 LDP X20, X19, [X31 + 0x50]
	0x03D72A78 LDP X30, X27, [X31 + 0x10]
	0x03D72A7C LDR V8, [X31], #0x60
	0x03D72A80 RET
	0x03D72A84 STR D8, [X31 - 0x40]!
	0x03D72A88 STP X30, X23, [X31 + 0x10]
	0x03D72A8C STP X22, X21, [X31 + 0x20]
	0x03D72A90 STP X20, X19, [X31 + 0x30]
	0x03D72A94 ADRP X23, 0x675000
	0x03D72A98 LDRB W8, [X23 + 0xD30]
	0x03D72A9C MOV W22, W3
	0x03D72AA0 MOV W19, W2
	0x03D72AA4 MOV V8.16B, V0.16B
	0x03D72AA8 MOV X20, X1
	0x03D72AAC MOV X21, X0
	0x03D72AB0 TBNZ X8, 0x0, 0x3D72AD4
	0x03D72AB4 ADRP X0, 0x3F4000
	0x03D72AB8 LDR X0, [X0 + 0xD70]
	0x03D72ABC BL 0x1C16CF4
	0x03D72AC0 ADRP X0, 0x3F4000
	0x03D72AC4 LDR X0, [X0 + 0xE10]
	0x03D72AC8 BL 0x1C16CF4
	0x03D72ACC MOVZ W8, 0x1
	0x03D72AD0 STRB W8, [X23 + 0xD30]
	0x03D72AD4 TBZ X22, 0x0, 0x3D72B2C
	0x03D72AD8 CBZ X20, 0x3D72BA4
	0x03D72ADC LDR W8, [X20 + 0x18]
	0x03D72AE0 ADRP X23, 0x3F4000
	0x03D72AE4 LDR X23, [X23 + 0xE10]
	0x03D72AE8 SUB W22, W8, 0x1
	0x03D72AEC TBNZ X22, 0x1F, 0x3D72B8C
	0x03D72AF0 LDR X2, [X23]
	0x03D72AF4 MOV X0, X20
	0x03D72AF8 MOV W1, W22
	0x03D72AFC BL 0x301BCCC
	0x03D72B00 MOV X1, X0
	0x03D72B04 AND W2, W19, 0x1
	0x03D72B08 MOVZ W3, 0x1
	0x03D72B0C MOV X0, X21
	0x03D72B10 MOV V0.16B, V8.16B
	0x03D72B14 BL 0x3D7358C
	0x03D72B18 MOV V8.16B, V0.16B
	0x03D72B1C FCMP S0, 0x0
	0x03D72B20 SUB W22, W22, 0x1
	0x03D72B24 B.HI 0x3D72AEC
	0x03D72B28 B 0x3D72B8C
	0x03D72B2C CBZ X20, 0x3D72BA4
	0x03D72B30 LDR W8, [X20 + 0x18]
	0x03D72B34 CMP W8, 0x1
	0x03D72B38 B.LT 0x3D72B8C
	0x03D72B3C ADRP X23, 0x3F4000
	0x03D72B40 LDR X23, [X23 + 0xE10]
	0x03D72B44 MOV W22, W31
	0x03D72B48 LDR X2, [X23]
	0x03D72B4C MOV X0, X20
	0x03D72B50 MOV W1, W22
	0x03D72B54 BL 0x301BCCC
	0x03D72B58 MOV X1, X0
	0x03D72B5C AND W2, W19, 0x1
	0x03D72B60 MOV X0, X21
	0x03D72B64 MOV V0.16B, V8.16B
	0x03D72B68 MOV W3, W31
	0x03D72B6C BL 0x3D7358C
	0x03D72B70 MOV V8.16B, V0.16B
	0x03D72B74 FCMP S0, 0x0
	0x03D72B78 B.LS 0x3D72B8C
	0x03D72B7C LDR W8, [X20 + 0x18]
	0x03D72B80 ADD W22, W22, 0x1
	0x03D72B84 CMP W22, W8
	0x03D72B88 B.LT 0x3D72B48
	0x03D72B8C LDP X20, X19, [X31 + 0x30]
	0x03D72B90 LDP X22, X21, [X31 + 0x20]
	0x03D72B94 LDP X30, X23, [X31 + 0x10]
	0x03D72B98 MOV V0.16B, V8.16B
	0x03D72B9C LDR V8, [X31], #0x40
	0x03D72BA0 RET
	0x03D72BA4 BL 0x1C16F20
	0x03D72BA8 STP D13, D12, [X31 - 0x80]!
	0x03D72BAC STP D11, D10, [X31 + 0x10]
	0x03D72BB0 STP D9, D8, [X31 + 0x20]
	0x03D72BB4 STP X30, X27, [X31 + 0x30]
	0x03D72BB8 STP X26, X25, [X31 + 0x40]
	0x03D72BBC STP X24, X23, [X31 + 0x50]
	0x03D72BC0 STP X22, X21, [X31 + 0x60]
	0x03D72BC4 STP X20, X19, [X31 + 0x70]
	0x03D72BC8 ADRP X21, 0x675000
	0x03D72BCC LDRB W8, [X21 + 0xD2F]
	0x03D72BD0 MOV W22, W2
	0x03D72BD4 MOV V8.16B, V0.16B
	0x03D72BD8 MOV X19, X1
	0x03D72BDC MOV X20, X0
	0x03D72BE0 TBNZ X8, 0x0, 0x3D72C64
	0x03D72BE4 ADRP X0, 0x3F4000
	0x03D72BE8 LDR X0, [X0 + 0x650]
	0x03D72BEC BL 0x1C16CF4
	0x03D72BF0 ADRP X0, 0x3F4000
	0x03D72BF4 LDR X0, [X0 + 0xE18]
	0x03D72BF8 BL 0x1C16CF4
	0x03D72BFC ADRP X0, 0x3F4000
	0x03D72C00 LDR X0, [X0 + 0xDD8]
	0x03D72C04 BL 0x1C16CF4
	0x03D72C08 ADRP X0, 0x3F4000
	0x03D72C0C LDR X0, [X0 + 0xE20]
	0x03D72C10 BL 0x1C16CF4
	0x03D72C14 ADRP X0, 0x3F4000
	0x03D72C18 LDR X0, [X0 + 0xDF0]
	0x03D72C1C BL 0x1C16CF4
	0x03D72C20 ADRP X0, 0x3F4000
	0x03D72C24 LDR X0, [X0 + 0xD70]
	0x03D72C28 BL 0x1C16CF4
	0x03D72C2C ADRP X0, 0x3F4000
	0x03D72C30 LDR X0, [X0 + 0xE10]
	0x03D72C34 BL 0x1C16CF4
	0x03D72C38 ADRP X0, 0x381000
	0x03D72C3C LDR X0, [X0 + 0x5A8]
	0x03D72C40 BL 0x1C16CF4
	0x03D72C44 ADRP X0, 0x3F4000
	0x03D72C48 LDR X0, [X0 + 0xE28]
	0x03D72C4C BL 0x1C16CF4
	0x03D72C50 ADRP X0, 0x3F4000
	0x03D72C54 LDR X0, [X0 + 0xE30]
	0x03D72C58 BL 0x1C16CF4
	0x03D72C5C MOVZ W8, 0x1
	0x03D72C60 STRB W8, [X21 + 0xD2F]
	0x03D72C64 FCMP S8, 0x0
	0x03D72C68 B.LE 0x3D72E5C
	0x03D72C6C ADRP X8, 0x3F4000
	0x03D72C70 LDR X8, [X8 + 0xE30]
	0x03D72C74 LDR X0, [X8]
	0x03D72C78 BL 0x1C16F10
	0x03D72C7C MOV X1, X31
	0x03D72C80 MOV X21, X0
	0x03D72C84 BL 0x33BDD8C
	0x03D72C88 CBZ X21, 0x3D72E84
	0x03D72C8C STR X20, [X21 + 0x18]
	0x03D72C90 ADRP X8, 0x3F4000
	0x03D72C94 LDR X8, [X8 + 0xDD8]
	0x03D72C98 LDR X0, [X8]
	0x03D72C9C BL 0x1C16F10
	0x03D72CA0 ADRP X8, 0x3F4000
	0x03D72CA4 LDR X8, [X8 + 0xE18]
	0x03D72CA8 MOV X1, X20
	0x03D72CAC MOV X3, X31
	0x03D72CB0 MOV X23, X0
	0x03D72CB4 LDR X2, [X8]
	0x03D72CB8 BL 0x295A080
	0x03D72CBC CBZ X19, 0x3D72E84
	0x03D72CC0 ADRP X8, 0x3F4000
	0x03D72CC4 LDR X8, [X8 + 0xDF0]
	0x03D72CC8 MOV X0, X19
	0x03D72CCC MOV X1, X23
	0x03D72CD0 LDR X2, [X8]
	0x03D72CD4 BL 0x301DD30
	0x03D72CD8 STR W31, [X21 + 0x10]
	0x03D72CDC ADRP X8, 0x3F4000
	0x03D72CE0 LDR X8, [X8 + 0x650]
	0x03D72CE4 LDR X0, [X8]
	0x03D72CE8 BL 0x1C16F10
	0x03D72CEC ADRP X8, 0x3F4000
	0x03D72CF0 LDR X8, [X8 + 0xE28]
	0x03D72CF4 MOV X1, X21
	0x03D72CF8 MOV X3, X31
	0x03D72CFC MOV X23, X0
	0x03D72D00 LDR X2, [X8]
	0x03D72D04 BL 0x2A6B948
	0x03D72D08 ADRP X8, 0x3F4000
	0x03D72D0C LDR X8, [X8 + 0xE20]
	0x03D72D10 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+176], D13
	003 Move [X31+184], D12
	004 Move [X31+192], D11
	005 Move [X31+200], D10
	006 Move [X31+208], D9
	007 Move [X31+216], D8
	008 Move [X31+224], X29
	009 Move [X31+232], X30
	010 Move [X31+240], X28
	011 Move [X31+248], X27
	012 Move [X31+256], X26
	013 Move [X31+264], X25
	014 Move [X31+272], X24
	015 Move [X31+280], X23
	016 Move [X31+288], X22
	017 Move [X31+296], X21
	018 Move [X31+304], X20
	019 Move [X31+312], X19
	020 Move X20, 0x677000
	021 Move W8, [X20+3370]
	022 Move V8, V0
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {90}
	028 Move X0, 0x3F6000
	029 Move X0, [X0+3512]
	030 Call 0x1C17CF4
	031 Move X0, 0x3F6000
	032 Move X0, [X0+3520]
	033 Call 0x1C17CF4
	034 Move X0, 0x3F6000
	035 Move X0, [X0+3528]
	036 Call 0x1C17CF4
	037 Move X0, 0x3F6000
	038 Move X0, [X0+3536]
	039 Call 0x1C17CF4
	040 Move X0, 0x3F6000
	041 Move X0, [X0+3544]
	042 Call 0x1C17CF4
	043 Move X0, 0x3AD000
	044 Move X0, [X0+2944]
	045 Call 0x1C17CF4
	046 Move X0, 0x3AD000
	047 Move X0, [X0+2952]
	048 Call 0x1C17CF4
	049 Move X0, 0x3AD000
	050 Move X0, [X0+2960]
	051 Call 0x1C17CF4
	052 Move X0, 0x383000
	053 Move X0, [X0+3584]
	054 Call 0x1C17CF4
	055 Move X0, 0x3AC000
	056 Move X0, [X0+280]
	057 Call 0x1C17CF4
	058 Move X0, 0x383000
	059 Move X0, [X0+3608]
	060 Call 0x1C17CF4
	061 Move X0, 0x3F6000
	062 Move X0, [X0+3552]
	063 Call 0x1C17CF4
	064 Move X0, 0x3F6000
	065 Move X0, [X0+3560]
	066 Call 0x1C17CF4
	067 Move X0, 0x3AD000
	068 Move X0, [X0+2968]
	069 Call 0x1C17CF4
	070 Move X0, 0x3F5000
	071 Move X0, [X0+3568]
	072 Call 0x1C17CF4
	073 Move X0, 0x3F5000
	074 Move X0, [X0+3448]
	075 Call 0x1C17CF4
	076 Move X0, 0x3F5000
	077 Move X0, [X0+3440]
	078 Call 0x1C17CF4
	079 Move X0, 0x3F5000
	080 Move X0, [X0+3432]
	081 Call 0x1C17CF4
	082 Move X0, 0x382000
	083 Move X0, [X0+1448]
	084 Call 0x1C17CF4
	085 Move X0, 0x3F5000
	086 Move X0, [X0+3576]
	087 Call 0x1C17CF4
	088 Move W8, 1
	089 Move [X20+3370], W8
	090 Move [X31+144], X31
	091 Move [X31+152], X31
	092 Move [X31+160], X31
	093 Move [X31+112], X31
	094 Move [X31+120], X31
	095 Move [X31+128], X31
	096 Move [X31+108], W31
	097 Move [X31+88], X31
	098 Move [X31+96], X31
	099 Move [X31+72], X31
	100 Move [X31+80], X31
	101 Move [X31+56], X31
	102 Move [X31+64], X31
	103 Move [X31+40], X31
	104 Move [X31+48], X31
	105 Move [X31+32], X31
	106 Move W8, [X19+72]
	107 Move [X19+80], S8
	108 Compare W8, 0
	109 JumpIfEqual {112}
	110 Move X0, X19
	111 Call ColumnLayout.UpdateCache, X0
	112 Move X22, 0x3F5000
	113 Move X20, 0x3F5000
	114 Move X22, [X22+3432]
	115 Move X20, [X20+3448]
	116 Move X0, X19
	117 Call ColumnLayout.get_hasRelativeWidthColumns, X0
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {124}
	122 Move X0, X19
	123 Call ColumnLayout.UpdateMinAndMaxColumnsWidth, X0
	124 Move X0, [X22]
	125 Call 0x1C17F10
	126 Move X1, [X20]
	127 Move X21, X0
	128 Call List`1<Object>..ctor, X0
	129 Move X0, [X22]
	130 Call 0x1C17F10
	131 Move X1, [X20]
	132 Move X20, X0
	133 Call List`1<Object>..ctor, X0
	134 Move X0, [X19+48]
	135 Compare X0, 0
	136 JumpIfEqual {748}
	137 Call Columns.GetEnumerator, X0
	138 Move X22, X0
	139 Compare X0, 0
	140 JumpIfEqual {749}
	141 Move X25, 0x382000
	142 Move X26, 0x3AB000
	143 Move X27, 0x3F5000
	144 Move X25, [X25+3608]
	145 Move X26, [X26+280]
	146 Move X27, [X27+3560]
	147 Move W28, 1
	148 Move S9, W31
	149 NotImplemented "Instruction MOVK not yet implemented."
	150 Move W29, 0x42C80000
	151 Move S11, W31
	152 Move X8, [X22]
	153 Move X1, [X25]
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Compare X9, 0
	156 JumpIfEqual {163}
	157 Move X10, [X8+176]
	158 Add X10, X10, 8
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Subtract X9, X9, 1
	162 Add X10, X10, 16
	163 Move X0, X22
	164 Move W2, W31
	165 Call 0x1C5D788
	166 NotImplemented "Instruction LDRSW not yet implemented."
	167 Add X8, X8, X9
	168 Add X0, X8, 312
	169 Move X8, [X0]
	170 Move X1, [X0+8]
	171 Move X0, X22
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {354}
	177 Move X8, [X22]
	178 Move X1, [X26]
	179 NotImplemented "Instruction LDRH not yet implemented."
	180 Compare X9, 0
	181 JumpIfEqual {188}
	182 Move X10, [X8+176]
	183 Add X10, X10, 8
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract X9, X9, 1
	187 Add X10, X10, 16
	188 Move X0, X22
	189 Move W2, W31
	190 Call 0x1C5D788
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Add X8, X8, X9
	193 Add X0, X8, 312
	194 Move X8, [X0]
	195 Move X1, [X0+8]
	196 Move X0, X22
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move X23, X0
	199 Compare X0, 0
	200 JumpIfEqual {742}
	201 Move W8, [X23+64]
	202 Compare W8, 0
	203 JumpIfEqual {152}
	204 Move V0, [X19+80]
	205 Move W8, [X23+80]
	206 Move V10, [X23+76]
	207 Compare W8, 0
	208 JumpIfEqual {212}
	209 Multiply S1, S0, S10
	210 Move S2, W29
	211 NotImplemented "Instruction FDIV not yet implemented."
	212 Move W8, [X23+88]
	213 Move V12, [X23+84]
	214 Compare W8, 0
	215 JumpIfEqual {219}
	216 Multiply S1, S0, S12
	217 Move S2, W29
	218 NotImplemented "Instruction FDIV not yet implemented."
	219 Move W8, [X23+72]
	220 Move V13, [X23+68]
	221 Compare W8, 0
	222 JumpIfEqual {226}
	223 Multiply S0, S0, S13
	224 Move S1, W29
	225 NotImplemented "Instruction FDIV not yet implemented."
	226 Move V1, [X23+92]
	227 Move X8, [X19+48]
	228 Move W9, S1
	229 And W9, W9, 0x7FFFFFFF
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Compare X8, 0
	232 JumpIfEqual {743}
	233 Move W8, [X8+44]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move W8, [X23+96]
	236 Compare W8, 0
	237 JumpIfEqual {260}
	238 Compare X21, 0
	239 JumpIfEqual {745}
	240 Move W10, [X21+28]
	241 Move X8, [X21+16]
	242 Move X9, [X27]
	243 Add W10, W10, 1
	244 Move [X21+28], W10
	245 Compare X8, 0
	246 JumpIfEqual {744}
	247 NotImplemented "Instruction LDRSW not yet implemented."
	248 Move W11, [X8+24]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Add W9, W10, 1
	251 Add X8, X8, X10
	252 Move [X21+24], W9
	253 Move [X8+32], X23
	254 Move X8, [X9+32]
	255 Move X8, [X8+192]
	256 Move X2, [X8+112]
	257 Move X0, X21
	258 Move X1, X23
	259 Call List`1<Object>.AddWithResize, X0, X1
	260 NotImplemented "Instruction FCMP not yet implemented."
	261 NotImplemented "Instruction FCSEL not yet implemented."
	262 NotImplemented "Instruction FCMP not yet implemented."
	263 NotImplemented "Instruction FCSEL not yet implemented."
	264 NotImplemented "Instruction FCMP not yet implemented."
	265 Add X24, X23, 92
	266 Move X8, [X23+184]
	267 Move [X23+92], S0
	268 Compare X8, 0
	269 JumpIfEqual {349}
	270 Move X0, [X8+64]
	271 Move X9, [X8+24]
	272 Move X2, [X8+40]
	273 Move X1, X23
	274 NotImplemented "Instruction BLR not yet implemented."
	275 Compare X8, 0
	276 JumpIfEqual {752}
	277 Move W8, [X8+44]
	278 Add X24, X23, 92
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move W8, [X23+96]
	281 Compare W8, 0
	282 JumpIfEqual {310}
	283 Compare X20, 0
	284 JumpIfEqual {762}
	285 Move W10, [X20+28]
	286 Move X8, [X20+16]
	287 Move X9, [X27]
	288 Add W10, W10, 1
	289 Move [X20+28], W10
	290 Compare X8, 0
	291 JumpIfEqual {761}
	292 NotImplemented "Instruction LDRSW not yet implemented."
	293 Move W11, [X8+24]
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Add W9, W10, 1
	296 Add X8, X8, X10
	297 Move [X20+24], W9
	298 Move [X8+32], X23
	299 Move X8, [X9+32]
	300 Move X8, [X8+192]
	301 Move X2, [X8+112]
	302 Move X0, X20
	303 Move X1, X23
	304 Call List`1<Object>.AddWithResize, X0, X1
	305 Move X0, X19
	306 Move X1, X23
	307 Call ColumnLayout.GetDesiredWidth, X0, X1
	308 Move V1, [X24]
	309 Add S11, S11, S0
	310 NotImplemented "Instruction FCMP not yet implemented."
	311 NotImplemented "Instruction FCMP not yet implemented."
	312 NotImplemented "Instruction FCMP not yet implemented."
	313 NotImplemented "Instruction FCSEL not yet implemented."
	314 NotImplemented "Instruction FCMP not yet implemented."
	315 NotImplemented "Instruction FCSEL not yet implemented."
	316 NotImplemented "Instruction FCMP not yet implemented."
	317 Move X8, [X23+184]
	318 Move [X23+92], S0
	319 Compare X8, 0
	320 JumpIfEqual {326}
	321 Move X0, [X8+64]
	322 Move X9, [X8+24]
	323 Move X2, [X8+40]
	324 Move X1, X23
	325 NotImplemented "Instruction BLR not yet implemented."
	326 Move X8, [X19+48]
	327 Compare X8, 0
	328 JumpIfEqual {753}
	329 Move W8, [X8+44]
	330 Compare W8, 0
	331 JumpIfNotEqual {349}
	332 Move W8, [X23+72]
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move V1, [X24]
	335 NotImplemented "Instruction FCMP not yet implemented."
	336 NotImplemented "Instruction FCSEL not yet implemented."
	337 NotImplemented "Instruction FCMP not yet implemented."
	338 NotImplemented "Instruction FCSEL not yet implemented."
	339 NotImplemented "Instruction FCMP not yet implemented."
	340 Move X8, [X23+184]
	341 Move [X23+92], S0
	342 Compare X8, 0
	343 JumpIfEqual {349}
	344 Move X0, [X8+64]
	345 Move X9, [X8+24]
	346 Move X2, [X8+40]
	347 Move X1, X23
	348 NotImplemented "Instruction BLR not yet implemented."
	349 Move W8, [X23+96]
	350 Compare W8, 0
	351 JumpIfNotEqual {152}
	352 Move V0, [X24]
	353 Add S9, S9, S0
	354 Move X23, X31
	355 Move W24, 20
	356 Compare X22, 0
	357 JumpIfEqual {381}
	358 Move X8, [X22]
	359 Move X10, 0x382000
	360 NotImplemented "Instruction LDRH not yet implemented."
	361 Move X10, [X10+3584]
	362 Move X1, [X10]
	363 Compare X9, 0
	364 JumpIfEqual {371}
	365 Move X10, [X8+176]
	366 Add X10, X10, 8
	367 NotImplemented "Instruction LDUR not yet implemented."
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Subtract X9, X9, 1
	370 Add X10, X10, 16
	371 Move X0, X22
	372 Move W2, W31
	373 Call 0x1C5D788
	374 NotImplemented "Instruction LDRSW not yet implemented."
	375 Add X8, X8, X9
	376 Add X0, X8, 312
	377 Move X8, [X0]
	378 Move X1, [X0+8]
	379 Move X0, X22
	380 NotImplemented "Instruction BLR not yet implemented."
	381 Compare X23, 0
	382 JumpIfNotEqual {750}
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Compare W24, 0
	385 JumpIfNotEqual {719}
	386 Compare X21, 0
	387 JumpIfEqual {748}
	388 Move W8, [X21+24]
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Move X23, 0x382000
	391 Move X23, [X23+1448]
	392 Move X0, [X23]
	393 Move W8, [X0+224]
	394 Compare W8, 0
	395 JumpIfNotEqual {397}
	396 Call 0x1C17DFC
	397 Subtract S1, S8, S9
	398 Move S0, W31
	399 Move X0, X31
	400 Call Math.Max, V0, V1
	401 Move X8, [X19+16]
	402 Compare X8, 0
	403 JumpIfEqual {748}
	404 Move X27, 0x3F5000
	405 Move W28, [X8+24]
	406 Move X27, [X27+3544]
	407 Move V9, V0
	408 Move X0, [X27]
	409 Call 0x1C17F10
	410 Move X8, 0x3F5000
	411 Move X8, [X8+3528]
	412 Move X1, X19
	413 Move X3, X31
	414 Move X22, X0
	415 Move X2, [X8]
	416 Call Comparison`1<Object>..ctor, X0, X1, X2
	417 Move X25, 0x3F5000
	418 Move X25, [X25+3568]
	419 Move X0, X21
	420 Move X1, X22
	421 Move X2, [X25]
	422 Call List`1<Object>.Sort, X0, X1
	423 Move X26, 0x3AC000
	424 Move X26, [X26+2968]
	425 Add X8, X31, 8
	426 Move X0, X21
	427 Move X1, [X26]
	428 Call List`1<Object>.GetEnumerator, X0
	429 NotImplemented "Instruction LDUR not yet implemented."
	430 Move X8, [X31+24]
	431 Move X24, 0x3AC000
	432 Move X24, [X24+2952]
	433 Move [X31+9], V0
	434 Move [X31+160], X8
	435 Move W22, 0x42C80000
	436 Move X1, [X24]
	437 Add X0, X31, 144
	438 Call Enumerator<Object>.MoveNext, X0
	439 Move TEMP, X0
	440 And TEMP, TEMP, 1
	441 Compare TEMP, 1
	442 JumpIfNotEqual {491}
	443 Move X21, [X31+160]
	444 Compare X21, 0
	445 JumpIfEqual {746}
	446 Move V1, [X19+80]
	447 Move W8, [X21+80]
	448 Move V0, [X21+76]
	449 Compare W8, 0
	450 JumpIfEqual {454}
	451 Multiply S0, S1, S0
	452 Move S2, W22
	453 NotImplemented "Instruction FDIV not yet implemented."
	454 Move W8, [X21+88]
	455 Move V2, [X21+84]
	456 Compare W8, 0
	457 JumpIfEqual {461}
	458 Multiply S1, S1, S2
	459 Move S2, W22
	460 NotImplemented "Instruction FDIV not yet implemented."
	461 NotImplemented "Instruction SCVTF not yet implemented."
	462 Move V10, [X21+92]
	463 NotImplemented "Instruction FDIV not yet implemented."
	464 NotImplemented "Instruction FCMP not yet implemented."
	465 NotImplemented "Instruction FCSEL not yet implemented."
	466 NotImplemented "Instruction FCMP not yet implemented."
	467 NotImplemented "Instruction FCSEL not yet implemented."
	468 NotImplemented "Instruction FCMP not yet implemented."
	469 Move X8, [X21+184]
	470 Move V10, V0
	471 Move [X21+92], S0
	472 Compare X8, 0
	473 JumpIfEqual {480}
	474 Move X0, [X8+64]
	475 Move X9, [X8+24]
	476 Move X2, [X8+40]
	477 Move X1, X21
	478 NotImplemented "Instruction BLR not yet implemented."
	479 Move V10, [X21+92]
	480 Move X0, [X23]
	481 Move W8, [X0+224]
	482 Compare W8, 0
	483 JumpIfNotEqual {485}
	484 Call 0x1C17DFC
	485 Subtract S1, S9, S10
	486 Move S0, W31
	487 Move X0, X31
	488 Call Math.Max, V0, V1
	489 Subtract W28, W28, 1
	490 Move V9, V0
	491 Move X8, 0x3AC000
	492 Move X8, [X8+2944]
	493 Add X0, X31, 144
	494 Move X1, [X8]
	495 Call Enumerator<Object>.Dispose, X0
	496 Move X0, [X27]
	497 Call 0x1C17F10
	498 Move X8, 0x3F5000
	499 Move X8, [X8+3536]
	500 Move X1, X19
	501 Move X3, X31
	502 Move X21, X0
	503 Move X2, [X8]
	504 Call Comparison`1<Object>..ctor, X0, X1, X2
	505 Compare X20, 0
	506 JumpIfEqual {748}
	507 Move X2, [X25]
	508 Move X0, X20
	509 Move X1, X21
	510 Call List`1<Object>.Sort, X0, X1
	511 Move X1, [X26]
	512 Add X8, X31, 8
	513 Move X0, X20
	514 Call List`1<Object>.GetEnumerator, X0
	515 NotImplemented "Instruction LDUR not yet implemented."
	516 Move X8, [X31+24]
	517 Move W21, 0x42C80000
	518 Move [X31+7], V0
	519 Move [X31+128], X8
	520 Move X1, [X24]
	521 Add X0, X31, 112
	522 Call Enumerator<Object>.MoveNext, X0
	523 Move TEMP, X0
	524 And TEMP, TEMP, 1
	525 Compare TEMP, 1
	526 JumpIfNotEqual {579}
	527 Move X20, [X31+128]
	528 Move X0, X19
	529 Move X1, X20
	530 Call ColumnLayout.GetDesiredWidth, X0, X1
	531 Compare X20, 0
	532 JumpIfEqual {747}
	533 Move V10, V0
	534 Move V1, [X19+80]
	535 Move W8, [X20+80]
	536 Move V0, [X20+76]
	537 Compare W8, 0
	538 JumpIfEqual {542}
	539 Multiply S0, S1, S0
	540 Move S2, W21
	541 NotImplemented "Instruction FDIV not yet implemented."
	542 Move W8, [X20+88]
	543 Move V2, [X20+84]
	544 Compare W8, 0
	545 JumpIfEqual {549}
	546 Multiply S1, S1, S2
	547 Move S2, W21
	548 NotImplemented "Instruction FDIV not yet implemented."
	549 NotImplemented "Instruction FDIV not yet implemented."
	550 Move V12, [X20+92]
	551 Multiply S1, S9, S1
	552 NotImplemented "Instruction FCMP not yet implemented."
	553 NotImplemented "Instruction FCSEL not yet implemented."
	554 NotImplemented "Instruction FCMP not yet implemented."
	555 NotImplemented "Instruction FCSEL not yet implemented."
	556 NotImplemented "Instruction FCMP not yet implemented."
	557 Move X8, [X20+184]
	558 Move V12, V0
	559 Move [X20+92], S0
	560 Compare X8, 0
	561 JumpIfEqual {568}
	562 Move X0, [X8+64]
	563 Move X9, [X8+24]
	564 Move X2, [X8+40]
	565 Move X1, X20
	566 NotImplemented "Instruction BLR not yet implemented."
	567 Move V12, [X20+92]
	568 Move X0, [X23]
	569 Move W8, [X0+224]
	570 Compare W8, 0
	571 JumpIfNotEqual {573}
	572 Call 0x1C17DFC
	573 Subtract S1, S9, S12
	574 Move S0, W31
	575 Move X0, X31
	576 Call Math.Max, V0, V1
	577 Move V9, V0
	578 Subtract S11, S11, S10
	579 Move X8, 0x3AC000
	580 Move X8, [X8+2944]
	581 Add X0, X31, 112
	582 Move X1, [X8]
	583 Call Enumerator<Object>.Dispose, X0
	584 Move X0, X19
	585 Call ColumnLayout.get_hasStretchableColumns, X0
	586 Move TEMP, X0
	587 And TEMP, TEMP, 1
	588 Compare TEMP, 1
	589 JumpIfNotEqual {605}
	590 Move X8, [X19+48]
	591 Compare X8, 0
	592 JumpIfEqual {748}
	593 Move W8, [X8+44]
	594 Compare W8, 0
	595 JumpIfEqual {616}
	596 Move X0, X19
	597 Call ColumnLayout.get_columnsWidth, X0
	598 Move S1, [X19+64]
	599 Move S2, [X19+68]
	600 NotImplemented "Instruction FCMP not yet implemented."
	601 NotImplemented "Instruction FCSEL not yet implemented."
	602 NotImplemented "Instruction FCMP not yet implemented."
	603 NotImplemented "Instruction FCSEL not yet implemented."
	604 Subtract S0, S0, S1
	605 Move X0, X19
	606 Call ColumnLayout.get_hasRelativeWidthColumns, X0
	607 Move TEMP, X0
	608 And TEMP, TEMP, 1
	609 Compare TEMP, 1
	610 JumpIfNotEqual {717}
	611 Move X8, [X19+48]
	612 Compare X8, 0
	613 JumpIfEqual {748}
	614 Move W9, [X8+44]
	615 NotImplemented "Instruction CMP not yet implemented."
	616 Move V0, [X19+76]
	617 Move W9, 0x7F800000
	618 Move W8, S0
	619 And W8, W8, 0x7FFFFFFF
	620 NotImplemented "Instruction CMP not yet implemented."
	621 Subtract S0, S0, S8
	622 NotImplemented "Instruction FCMP not yet implemented."
	623 Move [X31+108], S0
	624 Move X21, 0x3F5000
	625 Move X21, [X21+3520]
	626 Move X0, [X21]
	627 Move W8, [X0+224]
	628 Compare W8, 0
	629 JumpIfNotEqual {631}
	630 Call 0x1C17DFC
	631 Move X20, 0x3F5000
	632 Move X20, [X20+3512]
	633 Add X0, X31, 80
	634 Move X1, [X20]
	635 Call CollectionPool`2<Object, Object>.Get, X0
	636 Move X8, X0
	637 Move X0, [X21]
	638 Move [X31+88], X8
	639 Move [X31+96], X1
	640 Move W8, [X0+224]
	641 Compare W8, 0
	642 JumpIfNotEqual {644}
	643 Call 0x1C17DFC
	644 Move X1, [X20]
	645 Add X0, X31, 56
	646 Call CollectionPool`2<Object, Object>.Get, X0
	647 Move X8, [X21]
	648 Move [X31+64], X0
	649 Move [X31+72], X1
	650 Move W9, [X8+224]
	651 Compare W9, 0
	652 JumpIfNotEqual {655}
	653 Move X0, X8
	654 Call 0x1C17DFC
	655 Move X1, [X20]
	656 Add X0, X31, 32
	657 Call CollectionPool`2<Object, Object>.Get, X0
	658 Move X8, X0
	659 Move X0, [X31+80]
	660 Move [X31+40], X8
	661 Move [X31+48], X1
	662 Compare X0, 0
	663 JumpIfEqual {754}
	664 Move X20, 0x3F5000
	665 Move X1, [X19+16]
	666 Move X20, [X20+3552]
	667 Move X2, [X20]
	668 Call List`1<Object>.AddRange, X0, X1
	669 Move X0, [X31+56]
	670 Compare X0, 0
	671 JumpIfEqual {755}
	672 Move X1, [X19+24]
	673 Move X2, [X20]
	674 Call List`1<Object>.AddRange, X0, X1
	675 Move X0, [X31+32]
	676 Compare X0, 0
	677 JumpIfEqual {758}
	678 Move X1, [X19+32]
	679 Move X2, [X20]
	680 Call List`1<Object>.AddRange, X0, X1
	681 Move X1, [X31+80]
	682 Move X2, [X31+56]
	683 Move X3, [X31+32]
	684 Add X4, X31, 108
	685 Move X0, X19
	686 Move W5, W31
	687 Move W6, W31
	688 Call ColumnLayout.StretchResizeColumns, X0, X1, X2, X3, X4, X5, X6
	689 Move X22, X31
	690 Move W20, 37
	691 Move X8, 0x3F5000
	692 Move X8, [X8+3576]
	693 Move X1, [X8]
	694 Add X0, X31, 40
	695 Call 0x24A7D20, X0
	696 Compare X22, 0
	697 JumpIfNotEqual {759}
	698 NotImplemented "Instruction CMP not yet implemented."
	699 Compare W20, 0
	700 JumpIfNotEqual {703}
	701 Move X22, X31
	702 Move W20, 38
	703 Move X22, X31
	704 Move X21, 0x3F5000
	705 Move X21, [X21+3576]
	706 Move X1, [X21]
	707 Add X0, X31, 64
	708 Call 0x24A7D20, X0
	709 Compare X22, 0
	710 JumpIfNotEqual {756}
	711 NotImplemented "Instruction CMP not yet implemented."
	712 Compare W20, 0
	713 JumpIfNotEqual {739}
	714 Move X1, [X21]
	715 Add X0, X31, 88
	716 Call 0x24A7D20, X0
	717 Move [X19+76], S8
	718 Move [X19+72], W31
	719 Move X20, [X31+304]
	720 Move X19, [X31+312]
	721 Move X22, [X31+288]
	722 Move X21, [X31+296]
	723 Move X24, [X31+272]
	724 Move X23, [X31+280]
	725 Move X26, [X31+256]
	726 Move X25, [X31+264]
	727 Move X28, [X31+240]
	728 Move X27, [X31+248]
	729 Move X29, [X31+224]
	730 Move X30, [X31+232]
	731 Move D9, [X31+208]
	732 Move D8, [X31+216]
	733 Move D11, [X31+192]
	734 Move D10, [X31+200]
	735 Move D13, [X31+176]
	736 Move D12, [X31+184]
	737 Add X31, X31, 320
	738 Return 
	739 Move X1, [X21]
	740 Add X0, X31, 88
	741 Call 0x24A7D20, X0
	742 Call 0x1C17F20
	743 Call 0x1C17F20
	744 Call 0x1C17F20
	745 Call 0x1C17F20
	746 Call 0x1C17F20
	747 Call 0x1C17F20
	748 Call 0x1C17F20
	749 Call 0x1C17F20
	750 Move X0, X23
	751 Call 0x1C17F18
	752 Call 0x1C17F20
	753 Call 0x1C17F20
	754 Call 0x1C17F20
	755 Call 0x1C17F20
	756 Move X0, X22
	757 Call 0x1C17F18
	758 Call 0x1C17F20
	759 Move X0, X22
	760 Call 0x1C17F18
	761 Call 0x1C17F20
	762 Call 0x1C17F20
	763 Move X20, X1
	764 Move X21, X0
	765 Move X20, X1
	766 Move X21, X0
	767 Move X20, X1
	768 Move X21, X0
	769 NotImplemented "Instruction CMP not yet implemented."
	770 Move X0, X21
	771 Call 0x3EB2AD0
	772 Move X22, [X0]
	773 Call 0x3EB2AE0
	774 Move W20, W31
	775 Move X22, X31
	776 Move X8, 0x3F5000
	777 Move X8, [X8+3576]
	778 Move X1, [X8]
	779 Add X0, X31, 40
	780 Call 0x24A7D20, X0
	781 Compare X22, 0
	782 JumpIfNotEqual {810}
	783 NotImplemented "Instruction CMP not yet implemented."
	784 Move X0, X21
	785 Call 0x3EB2AD0
	786 Move X22, [X0]
	787 Call 0x3EB2AE0
	788 Move W20, W31
	789 Move X22, X31
	790 Move X8, 0x3F5000
	791 Move X8, [X8+3576]
	792 Move X1, [X8]
	793 Add X0, X31, 64
	794 Call 0x24A7D20, X0
	795 Compare X22, 0
	796 JumpIfNotEqual {812}
	797 NotImplemented "Instruction CMP not yet implemented."
	798 Move X0, X21
	799 Call 0x3EB2AD0
	800 Move X20, [X0]
	801 Call 0x3EB2AE0
	802 Move X8, 0x3F5000
	803 Move X8, [X8+3576]
	804 Add X0, X31, 88
	805 Move X1, [X8]
	806 Call 0x24A7D20, X0
	807 Compare X20, 0
	808 JumpIfEqual {717}
	809 Move X20, X31
	810 Move X0, X22
	811 Call 0x1C17F18
	812 Move X0, X22
	813 Call 0x1C17F18
	814 Move X20, X1
	815 Move X21, X0
	816 Move X20, X1
	817 Move X21, X0
	818 Move X21, X0
	819 Move X8, 0x3F5000
	820 Move X8, [X8+3576]
	821 Move X1, [X8]
	822 Add X0, X31, 88
	823 Call 0x24A7D20, X0
	824 Compare X20, 0
	825 JumpIfEqual {919}
	826 Move X0, X20
	827 Call 0x1C17F18
	828 Move S9, W31
	829 Move S11, W31
	830 Move X21, X0
	831 NotImplemented "Instruction CMP not yet implemented."
	832 Move X0, X21
	833 Call 0x3EB2AD0
	834 Move X20, [X0]
	835 Call 0x3EB2AE0
	836 Move X8, 0x3AC000
	837 Move X8, [X8+2944]
	838 Add X0, X31, 112
	839 Move X1, [X8]
	840 Call Enumerator<Object>.Dispose, X0
	841 Compare X20, 0
	842 JumpIfEqual {584}
	843 Move X0, X20
	844 Call 0x1C17F18
	845 Move X20, X31
	846 Move X21, X0
	847 Move X8, 0x3AC000
	848 Move X8, [X8+2944]
	849 Move X1, [X8]
	850 Add X0, X31, 112
	851 Call Enumerator<Object>.Dispose, X0
	852 Compare X20, 0
	853 JumpIfEqual {919}
	854 Move X0, X20
	855 Call 0x1C17F18
	856 Move X21, X0
	857 NotImplemented "Instruction CMP not yet implemented."
	858 Move X0, X21
	859 Call 0x3EB2AD0
	860 Move X22, [X0]
	861 Call 0x3EB2AE0
	862 Move X8, 0x3AC000
	863 Move X8, [X8+2944]
	864 Add X0, X31, 144
	865 Move X1, [X8]
	866 Call Enumerator<Object>.Dispose, X0
	867 Compare X22, 0
	868 JumpIfEqual {496}
	869 Move X0, X22
	870 Call 0x1C17F18
	871 Move X22, X31
	872 Move X21, X0
	873 Move X8, 0x3AC000
	874 Move X8, [X8+2944]
	875 Move X1, [X8]
	876 Add X0, X31, 144
	877 Call Enumerator<Object>.Dispose, X0
	878 Compare X22, 0
	879 JumpIfEqual {919}
	880 Move X0, X22
	881 Call 0x1C17F18
	882 NotImplemented "Instruction CMP not yet implemented."
	883 Call 0x3EB2AD0
	884 Move X23, [X0]
	885 Call 0x3EB2AE0
	886 Move W24, W31
	887 Compare X22, 0
	888 JumpIfNotEqual {358}
	889 Move X21, X0
	890 Move X23, X31
	891 Move X21, X0
	892 Compare X22, 0
	893 JumpIfEqual {917}
	894 Move X8, [X22]
	895 Move X10, 0x382000
	896 NotImplemented "Instruction LDRH not yet implemented."
	897 Move X10, [X10+3584]
	898 Move X1, [X10]
	899 Compare X9, 0
	900 JumpIfEqual {907}
	901 Move X10, [X8+176]
	902 Add X10, X10, 8
	903 NotImplemented "Instruction LDUR not yet implemented."
	904 NotImplemented "Instruction CMP not yet implemented."
	905 Subtract X9, X9, 1
	906 Add X10, X10, 16
	907 Move X0, X22
	908 Move W2, W31
	909 Call 0x1C5D788
	910 NotImplemented "Instruction LDRSW not yet implemented."
	911 Add X8, X8, X9
	912 Add X0, X8, 312
	913 Move X8, [X0]
	914 Move X1, [X0+8]
	915 Move X0, X22
	916 NotImplemented "Instruction BLR not yet implemented."
	917 Compare X23, 0
	918 JumpIfNotEqual {921}
	919 Move X0, X21
	920 Call 0x1D2D690
	921 Move X0, X23
	922 Call 0x1C17F18
	923 Call 0x1991590

Method: System.Void StretchResizeColumns(System.Collections.Generic.List`1<UnityEngine.UIElements.Column> stretchableColumns, System.Collections.Generic.List`1<UnityEngine.UIElements.Column> fixedColumns, System.Collections.Generic.List`1<UnityEngine.UIElements.Column> relativeWidthColumns, ref System.Single delta, System.Boolean resizeToFit, System.Boolean dragResize)

Disassembly:
	0x03D736D4 BL 0x1C16DFC
	0x03D736D8 FABD S1, S10, S10
	0x03D736DC MOV V0.16B, V8.16B
	0x03D736E0 MOV X0, X31
	0x03D736E4 BL 0x337EEBC
	0x03D736E8 MOV V9.16B, V0.16B
	0x03D736EC MOV X0, X22
	0x03D736F0 MOV X1, X19
	0x03D736F4 BL 0x3D72634
	0x03D736F8 FCMP S9, 0x0
	0x03D736FC B.LE 0x3D73720
	0x03D73700 FNEG S1, S9
	0x03D73704 ANDS W31, W21, 0x1
	0x03D73708 FCSEL S1, S1, S9, NE
	0x03D7370C FADD S0, S0, S1
	0x03D73710 AND W2, W20, 0x1
	0x03D73714 MOV X0, X22
	0x03D73718 MOV X1, X19
	0x03D7371C BL 0x3D73468
	0x03D73720 FSUB S0, S8, S9
	0x03D73724 LDP X20, X19, [X31 + 0x40]
	0x03D73728 LDP X22, X21, [X31 + 0x30]
	0x03D7372C LDP X30, X23, [X31 + 0x20]
	0x03D73730 LDP D9, D8, [X31 + 0x10]
	0x03D73734 LDR V10, [X31], #0x50
	0x03D73738 RET
	0x03D7373C BL 0x1C16F20
	0x03D73740 SUB X31, X31, 0x80
	0x03D73744 STR D8, [X31 + 0x50]
	0x03D73748 STR X30, [X31 + 0x58]
	0x03D7374C STP X22, X21, [X31 + 0x60]
	0x03D73750 STP X20, X19, [X31 + 0x70]
	0x03D73754 ADRP X21, 0x674000
	0x03D73758 ADRP X20, 0x3F3000
	0x03D7375C LDRB W8, [X21 + 0xD34]
	0x03D73760 LDR X20, [X20 + 0xDC0]
	0x03D73764 MOV V8.16B, V0.16B
	0x03D73768 MOV X19, X0
	0x03D7376C TBNZ X8, 0x0, 0x3D737A8
	0x03D73770 ADRP X0, 0x3F3000
	0x03D73774 LDR X0, [X0 + 0xDB8]
	0x03D73778 BL 0x1C16CF4
	0x03D7377C ADRP X0, 0x3F3000
	0x03D73780 LDR X0, [X0 + 0xDC0]
	0x03D73784 BL 0x1C16CF4
	0x03D73788 ADRP X0, 0x3F3000
	0x03D7378C LDR X0, [X0 + 0xDE0]
	0x03D73790 BL 0x1C16CF4
	0x03D73794 ADRP X0, 0x3F3000
	0x03D73798 LDR X0, [X0 + 0xDF8]
	0x03D7379C BL 0x1C16CF4
	0x03D737A0 MOVZ W8, 0x1
	0x03D737A4 STRB W8, [X21 + 0xD34]
	0x03D737A8 ADRP X21, 0x3F3000
	0x03D737AC LDR X21, [X21 + 0xDB8]
	0x03D737B0 MOV X0, X19
	0x03D737B4 STP X31, X31, [X31 + 0x38]
	0x03D737B8 STP X31, X31, [X31 + 0x28]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x675000
	011 Move W8, [X26+3371]
	012 Move W22, W6
	013 Move W24, W5
	014 Move X19, X4
	015 Move X20, X3
	016 Move X21, X2
	017 Move X23, X1
	018 Move X25, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x3F4000
	024 Move X0, [X0+3440]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X26+3371], W8
	028 Compare X23, 0
	029 JumpIfEqual {82}
	030 Move W8, [X23+24]
	031 Compare W8, 0
	032 JumpIfNotEqual {43}
	033 Compare X20, 0
	034 JumpIfEqual {82}
	035 Move W8, [X20+24]
	036 Compare W8, 0
	037 JumpIfNotEqual {43}
	038 Compare X21, 0
	039 JumpIfEqual {82}
	040 Move W8, [X21+24]
	041 Compare W8, 0
	042 JumpIfEqual {72}
	043 Move V0, [X19]
	044 And W5, W24, 1
	045 And W6, W22, 1
	046 Move X0, X25
	047 Move X1, X23
	048 Move X2, X21
	049 Move X3, X20
	050 Move X4, X19
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 Move X20, [X31+64]
	053 Move X19, [X31+72]
	054 Move X22, [X31+48]
	055 Move X21, [X31+56]
	056 Move X24, [X31+32]
	057 Move X23, [X31+40]
	058 Move X26, [X31+16]
	059 Move X25, [X31+24]
	060 Move X30, [X31+80]
	061 Move X20, [X31+64]
	062 Move X19, [X31+72]
	063 Move X22, [X31+48]
	064 Move X21, [X31+56]
	065 Move X24, [X31+32]
	066 Move X23, [X31+40]
	067 Move X26, [X31+16]
	068 Move X25, [X31+24]
	069 Move X30, [X31+80]
	070 Call ColumnLayout.DistributeExcess, X0, X1, X2, X3, X4, X5, X6
	071 Return 
	072 Move X20, [X31+64]
	073 Move X19, [X31+72]
	074 Move X22, [X31+48]
	075 Move X21, [X31+56]
	076 Move X24, [X31+32]
	077 Move X23, [X31+40]
	078 Move X26, [X31+16]
	079 Move X25, [X31+24]
	080 Move X30, [X31+80]
	081 Return 
	082 Call 0x1C17F20

Method: System.Void DistributeOverflow(System.Collections.Generic.List`1<UnityEngine.UIElements.Column> stretchableColumns, System.Collections.Generic.List`1<UnityEngine.UIElements.Column> fixedColumns, System.Collections.Generic.List`1<UnityEngine.UIElements.Column> relativeWidthColumns, ref System.Single delta, System.Boolean resizeToFit, System.Boolean dragResize)

Disassembly:
	0x03D737BC STP X31, X31, [X31 + 0x18]
	0x03D737C0 STP X31, X31, [X31 + 0x8]
	0x03D737C4 STR X31, [X31]
	0x03D737C8 BL 0x3D700CC
	0x03D737CC LDP S1, S2, [X19 + 0x40]
	0x03D737D0 LDR X0, [X20]
	0x03D737D4 FCMP S1, S8
	0x03D737D8 FCSEL S1, S1, S8, MI
	0x03D737DC FCMP S2, S8
	0x03D737E0 FCSEL S1, S1, S2, LE
	0x03D737E4 FSUB S0, S0, S1
	0x03D737E8 STR S0, [X31 + 0x4C]
	0x03D737EC LDR W8, [X0 + 0xE0]
	0x03D737F0 CBNZ W8, 0x3D737F8
	0x03D737F4 BL 0x1C16DFC
	0x03D737F8 LDR X1, [X21]
	0x03D737FC ADRP X22, 0x3F3000
	0x03D73800 LDR X22, [X22 + 0xDF8]
	0x03D73804 ADD X0, X31, 0x30
	0x03D73808 BL 0x28F996C
	0x03D7380C MOV X8, X0
	0x03D73810 LDR X0, [X20]
	0x03D73814 STP X8, X1, [X31 + 0x38]
	0x03D73818 LDR W8, [X0 + 0xE0]
	0x03D7381C CBNZ W8, 0x3D73824
	0x03D73820 BL 0x1C16DFC
	0x03D73824 LDR X1, [X21]
	0x03D73828 ADD X0, X31, 0x18
	0x03D7382C BL 0x28F996C
	0x03D73830 LDR X8, [X20]
	0x03D73834 STP X0, X1, [X31 + 0x20]
	0x03D73838 LDR W9, [X8 + 0xE0]
	0x03D7383C CBNZ W9, 0x3D73848
	0x03D73840 MOV X0, X8
	0x03D73844 BL 0x1C16DFC
	0x03D73848 LDR X1, [X21]
	0x03D7384C ADD X0, X31, 0x0
	0x03D73850 BL 0x28F996C
	0x03D73854 MOV X8, X0
	0x03D73858 LDR X0, [X31 + 0x30]
	0x03D7385C STP X8, X1, [X31 + 0x8]
	0x03D73860 CBZ X0, 0x3D73918
	0x03D73864 ADRP X20, 0x3F3000
	0x03D73868 LDR X20, [X20 + 0xDE0]
	0x03D7386C LDR X1, [X19 + 0x10]
	0x03D73870 LDR X2, [X20]
	0x03D73874 BL 0x301C194
	0x03D73878 LDR X0, [X31 + 0x18]
	0x03D7387C CBZ X0, 0x3D7391C
	0x03D73880 LDR X1, [X19 + 0x18]
	0x03D73884 LDR X2, [X20]
	0x03D73888 BL 0x301C194
	0x03D7388C LDR X0, [X31]
	0x03D73890 CBZ X0, 0x3D73928
	0x03D73894 LDR X1, [X19 + 0x20]
	0x03D73898 LDR X2, [X20]
	0x03D7389C BL 0x301C194
	0x03D738A0 LDR X1, [X31 + 0x30]
	0x03D738A4 LDR X2, [X31 + 0x18]
	0x03D738A8 LDR X3, [X31]
	0x03D738AC ADD X4, X31, 0x4C
	0x03D738B0 MOVZ W5, 0x1
	0x03D738B4 MOV X0, X19
	0x03D738B8 MOV W6, W31
	0x03D738BC BL 0x3D726D4
	0x03D738C0 LDRB W8, [X19 + 0x48]
	0x03D738C4 CBZ W8, 0x3D738D0
	0x03D738C8 MOV X0, X19
	0x03D738CC BL 0x3D71D14
	0x03D738D0 MOV X19, X31
	0x03D738D4 LDR X1, [X22]
	0x03D738D8 ADD X0, X31, 0x8
	0x03D738DC BL 0x24A6D20
	0x03D738E0 CBNZ X19, 0x3D7392C
	0x03D738E4 LDR X1, [X22]
	0x03D738E8 ADD X0, X31, 0x20
	0x03D738EC BL 0x24A6D20
	0x03D738F0 CBNZ X19, 0x3D73920
	0x03D738F4 LDR X1, [X22]
	0x03D738F8 ADD X0, X31, 0x38
	0x03D738FC BL 0x24A6D20
	0x03D73900 LDP X20, X19, [X31 + 0x70]
	0x03D73904 LDP X22, X21, [X31 + 0x60]
	0x03D73908 LDR X30, [X31 + 0x58]
	0x03D7390C LDR V8, [X31 + 0x50]
	0x03D73910 ADD X31, X31, 0x80
	0x03D73914 RET
	0x03D73918 BL 0x1C16F20
	0x03D7391C BL 0x1C16F20
	0x03D73920 MOV X0, X19
	0x03D73924 BL 0x1C16F18
	0x03D73928 BL 0x1C16F20
	0x03D7392C MOV X0, X19
	0x03D73930 BL 0x1C16F18

ISIL:
	001 Move [X31-96], D9
	002 Move [X31-88], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X27, 0x675000
	014 Move X26, 0x381000
	015 Move W8, [X27+3372]
	016 Move X26, [X26+1448]
	017 Move W23, W6
	018 Move W24, W5
	019 Move X19, X4
	020 Move X22, X3
	021 Move X20, X2
	022 Move X25, X1
	023 Move X21, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x381000
	029 Move X0, [X0+1448]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X27+3372], W8
	033 Move X0, [X26]
	034 Move V8, [X19]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Or W27, W24, W23
	040 NotImplemented "Instruction FABS not yet implemented."
	041 Move TEMP, X27
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {55}
	045 Move W2, 1
	046 Move W3, 1
	047 Move X0, X21
	048 Move X1, X20
	049 Call ColumnLayout.RecomputeToDesiredWidth, X0, X1, V0, X2, X3
	050 Move W2, 1
	051 Move W3, 1
	052 Move X0, X21
	053 Move X1, X22
	054 Call ColumnLayout.RecomputeToDesiredWidth, X0, X1, V0, X2, X3
	055 NotImplemented "Instruction ORN not yet implemented."
	056 And W2, W8, 1
	057 Move X0, X21
	058 Move X1, X25
	059 Call ColumnLayout.RecomputeToMinWidthProportionally, X0, X1, V0, X2
	060 Move V8, V0
	061 Move TEMP, X24
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {79}
	065 Move X0, X21
	066 Move X1, X22
	067 Move V0, V8
	068 Move W2, W31
	069 Call ColumnLayout.RecomputeToMinWidthProportionally, X0, X1, V0, X2
	070 Move X0, X21
	071 Move X1, X20
	072 Move W2, W31
	073 Call ColumnLayout.RecomputeToMinWidthProportionally, X0, X1, V0, X2
	074 Move X0, X21
	075 Move X1, X22
	076 Move W2, W31
	077 Call ColumnLayout.RecomputeToMinWidth, X0, X1, V0, X2
	078 Move W23, W31
	079 Move TEMP, X23
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {84}
	083 NotImplemented "Instruction FCMP not yet implemented."
	084 Move W2, 1
	085 Move X0, X21
	086 Move X1, X22
	087 Move V0, V8
	088 Move W23, 1
	089 Call ColumnLayout.RecomputeToMinWidth, X0, X1, V0, X2
	090 Move X0, X21
	091 Move X1, X20
	092 Move W2, W23
	093 Call ColumnLayout.RecomputeToMinWidth, X0, X1, V0, X2
	094 Move V8, V0
	095 Move X0, [X26]
	096 Move V9, [X19]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Subtract S1, S9, S8
	102 Move S0, W31
	103 Move X0, X31
	104 Call Math.Max, V0, V1
	105 Move [X19], S0
	106 Move X20, [X31+80]
	107 Move X19, [X31+88]
	108 Move X22, [X31+64]
	109 Move X21, [X31+72]
	110 Move X24, [X31+48]
	111 Move X23, [X31+56]
	112 Move X26, [X31+32]
	113 Move X25, [X31+40]
	114 Move X30, [X31+16]
	115 Move X27, [X31+24]
	116 Move D9, [X31+96]
	117 Move D8, [X31+104]
	118 Return 

Method: System.Void DistributeExcess(System.Collections.Generic.List`1<UnityEngine.UIElements.Column> stretchableColumns, System.Collections.Generic.List`1<UnityEngine.UIElements.Column> fixedColumns, System.Collections.Generic.List`1<UnityEngine.UIElements.Column> relativeWidthColumns, ref System.Single delta, System.Boolean resizeToFit, System.Boolean dragResize)

Disassembly:
	0x03D73934 B 0x3D73950
	0x03D73938 B 0x3D7395C
	0x03D7393C B 0x3D7396C
	0x03D73940 B 0x3D7396C
	0x03D73944 B 0x3D73950
	0x03D73948 B 0x3D7395C
	0x03D7394C B 0x3D7396C
	0x03D73950 MOV X20, X1
	0x03D73954 MOV X21, X0
	0x03D73958 B 0x3D739A4
	0x03D7395C MOV X20, X1
	0x03D73960 MOV X21, X0
	0x03D73964 B 0x3D739D4
	0x03D73968 B 0x3D7396C
	0x03D7396C MOV X20, X1
	0x03D73970 MOV X21, X0
	0x03D73974 CMP W20, 0x1
	0x03D73978 B.NE 0x3D73990
	0x03D7397C MOV X0, X21
	0x03D73980 BL 0x3EB1AD0
	0x03D73984 LDR X19, [X0]
	0x03D73988 BL 0x3EB1AE0
	0x03D7398C B 0x3D738D4
	0x03D73990 MOV X19, X31
	0x03D73994 LDR X1, [X22]
	0x03D73998 ADD X0, X31, 0x8
	0x03D7399C BL 0x24A6D20
	0x03D739A0 CBNZ X19, 0x3D73A0C
	0x03D739A4 CMP W20, 0x1
	0x03D739A8 B.NE 0x3D739C0
	0x03D739AC MOV X0, X21
	0x03D739B0 BL 0x3EB1AD0
	0x03D739B4 LDR X19, [X0]
	0x03D739B8 BL 0x3EB1AE0
	0x03D739BC B 0x3D738E4
	0x03D739C0 MOV X19, X31
	0x03D739C4 LDR X1, [X22]
	0x03D739C8 ADD X0, X31, 0x20
	0x03D739CC BL 0x24A6D20
	0x03D739D0 CBNZ X19, 0x3D73A14
	0x03D739D4 CMP W20, 0x1
	0x03D739D8 B.NE 0x3D73A04
	0x03D739DC MOV X0, X21
	0x03D739E0 BL 0x3EB1AD0
	0x03D739E4 LDR X20, [X0]
	0x03D739E8 BL 0x3EB1AE0
	0x03D739EC LDR X1, [X22]
	0x03D739F0 ADD X0, X31, 0x38
	0x03D739F4 BL 0x24A6D20
	0x03D739F8 CBZ X20, 0x3D73900
	0x03D739FC MOV X0, X20
	0x03D73A00 BL 0x1C16F18
	0x03D73A04 MOV X20, X31
	0x03D73A08 B 0x3D73A38
	0x03D73A0C MOV X0, X19
	0x03D73A10 BL 0x1C16F18
	0x03D73A14 MOV X0, X19
	0x03D73A18 BL 0x1C16F18
	0x03D73A1C MOV X20, X1
	0x03D73A20 MOV X21, X0
	0x03D73A24 B 0x3D739C4
	0x03D73A28 MOV X20, X1
	0x03D73A2C MOV X21, X0
	0x03D73A30 B 0x3D73994
	0x03D73A34 MOV X21, X0
	0x03D73A38 LDR X1, [X22]
	0x03D73A3C ADD X0, X31, 0x38
	0x03D73A40 BL 0x24A6D20
	0x03D73A44 CBNZ X20, 0x3D73A50
	0x03D73A48 MOV X0, X21
	0x03D73A4C BL 0x1D2C690
	0x03D73A50 MOV X0, X20
	0x03D73A54 BL 0x1C16F18
	0x03D73A58 BL 0x1990590
	0x03D73A5C STR D8, [X31 - 0x50]!
	0x03D73A60 STR X30, [X31 + 0x8]
	0x03D73A64 STP X26, X25, [X31 + 0x10]
	0x03D73A68 STP X24, X23, [X31 + 0x20]
	0x03D73A6C STP X22, X21, [X31 + 0x30]
	0x03D73A70 STP X20, X19, [X31 + 0x40]
	0x03D73A74 ADRP X22, 0x674000
	0x03D73A78 LDRB W8, [X22 + 0xD36]
	0x03D73A7C MOV W21, W2
	0x03D73A80 MOV V8.16B, V0.16B

ISIL:
	001 Move [X31-96], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x675000
	013 Move X26, 0x381000
	014 Move W8, [X27+3373]
	015 Move X26, [X26+1448]
	016 Move W25, W6
	017 Move W23, W5
	018 Move X19, X4
	019 Move X22, X3
	020 Move X20, X2
	021 Move X24, X1
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x381000
	028 Move X0, [X0+1448]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X27+3373], W8
	032 Move X0, [X26]
	033 Move V8, [X19]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Or W26, W23, W25
	039 NotImplemented "Instruction FABS not yet implemented."
	040 Move TEMP, X26
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {54}
	044 Move W2, 1
	045 Move X0, X21
	046 Move X1, X20
	047 Move W3, W31
	048 Call ColumnLayout.RecomputeToDesiredWidth, X0, X1, V0, X2, X3
	049 Move W2, 1
	050 Move X0, X21
	051 Move X1, X22
	052 Move W3, W31
	053 Call ColumnLayout.RecomputeToDesiredWidth, X0, X1, V0, X2, X3
	054 Move TEMP, X25
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {68}
	058 Move W2, 1
	059 Move X0, X21
	060 Move X1, X20
	061 Move W3, W31
	062 Call ColumnLayout.RecomputeToDesiredWidth, X0, X1, V0, X2, X3
	063 Move W2, 1
	064 Move X0, X21
	065 Move X1, X22
	066 Move W3, W31
	067 Call ColumnLayout.RecomputeToDesiredWidth, X0, X1, V0, X2, X3
	068 NotImplemented "Instruction ORN not yet implemented."
	069 And W2, W8, 1
	070 Move X0, X21
	071 Move X1, X24
	072 Call ColumnLayout.RecomputeToMaxWidthProportionally, X0, X1, V0, X2
	073 Move TEMP, X23
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {93}
	077 Move X0, X21
	078 Move X1, X22
	079 Move W2, W31
	080 Call ColumnLayout.RecomputeToMaxWidthProportionally, X0, X1, V0, X2
	081 Move X0, X21
	082 Move X1, X20
	083 Move W2, W31
	084 Call ColumnLayout.RecomputeToMaxWidthProportionally, X0, X1, V0, X2
	085 Move X0, X21
	086 Move X1, X22
	087 Move W2, W31
	088 Call ColumnLayout.RecomputeToMaxWidth, X0, X1, V0, X2
	089 Move X0, X21
	090 Move X1, X20
	091 Move W2, W31
	092 Call ColumnLayout.RecomputeToMaxWidth, X0, X1, V0, X2
	093 Move V1, [X19]
	094 Move X22, [X31+64]
	095 Move X21, [X31+72]
	096 Move X24, [X31+48]
	097 Move X23, [X31+56]
	098 Move X26, [X31+32]
	099 Move X25, [X31+40]
	100 Add S0, S0, S1
	101 Move [X19], S0
	102 Move X20, [X31+80]
	103 Move X19, [X31+88]
	104 Move X30, [X31+16]
	105 Move X27, [X31+24]
	106 Move V8, [X31+96]
	107 Return 

Method: System.Single RecomputeToMaxWidthProportionally(System.Collections.Generic.List`1<UnityEngine.UIElements.Column> columns, System.Single distributedDelta, System.Boolean setDesiredWidthOnly = False)

Disassembly:
	0x03D74018 LDR X1, [X19 + 0x68]
	0x03D7401C LDP X3, X2, [X19 + 0x70]
	0x03D74020 ADD X4, X31, 0xC
	0x03D74024 MOVZ W6, 0x1
	0x03D74028 MOV X0, X19
	0x03D7402C MOV W5, W31
	0x03D74030 BL 0x3D726D4
	0x03D74034 MOV X0, X19
	0x03D74038 MOV X1, X20
	0x03D7403C BL 0x3D72634
	0x03D74040 LDR V1, [X31 + 0xC]
	0x03D74044 FADD S0, S0, S1
	0x03D74048 B 0x3D740B0
	0x03D7404C MOV X0, X19
	0x03D74050 BL 0x3D700CC
	0x03D74054 FSUB S0, S12, S0
	0x03D74058 FCMP S11, S0
	0x03D7405C FMOV S0, W31
	0x03D74060 B.MI 0x3D74078
	0x03D74064 LDR V12, [X19 + 0x50]
	0x03D74068 MOV X0, X19
	0x03D7406C BL 0x3D700CC
	0x03D74070 FSUB S0, S12, S0
	0x03D74074 FSUB S0, S11, S0
	0x03D74078 STR S0, [X31 + 0x8]
	0x03D7407C LDP X3, X2, [X19 + 0x70]
	0x03D74080 LDR X1, [X19 + 0x68]
	0x03D74084 ADD X4, X31, 0x8
	0x03D74088 MOVZ W6, 0x1
	0x03D7408C MOV X0, X19
	0x03D74090 MOV W5, W31
	0x03D74094 BL 0x3D726D4
	0x03D74098 MOV X0, X19
	0x03D7409C MOV X1, X20
	0x03D740A0 BL 0x3D72634
	0x03D740A4 LDR V1, [X31 + 0x8]
	0x03D740A8 FADD S0, S11, S0
	0x03D740AC FSUB S0, S0, S1
	0x03D740B0 FCMP S0, S9
	0x03D740B4 B.MI 0x3D740C0
	0x03D740B8 FCMP S0, S10
	0x03D740BC FCSEL S9, S10, S0, GT
	0x03D740C0 MOV X0, X19
	0x03D740C4 MOV X1, X20
	0x03D740C8 MOV V0.16B, V9.16B
	0x03D740CC MOV W2, W31
	0x03D740D0 BL 0x3D73468
	0x03D740D4 STR S8, [X19 + 0x5C]
	0x03D740D8 LDP X20, X19, [X31 + 0x40]
	0x03D740DC LDP X30, X21, [X31 + 0x30]
	0x03D740E0 LDP D9, D8, [X31 + 0x20]
	0x03D740E4 LDP D11, D10, [X31 + 0x10]
	0x03D740E8 LDR V12, [X31], #0x50
	0x03D740EC RET
	0x03D740F0 BL 0x1C16F20
	0x03D740F4 SUB X31, X31, 0x90
	0x03D740F8 STR X30, [X31 + 0x60]
	0x03D740FC STP X22, X21, [X31 + 0x70]
	0x03D74100 STP X20, X19, [X31 + 0x80]
	0x03D74104 ADRP X22, 0x673000
	0x03D74108 LDRB W8, [X22 + 0xD3A]
	0x03D7410C MOV W21, W2
	0x03D74110 MOV X20, X1
	0x03D74114 MOV X19, X0
	0x03D74118 TBNZ X8, 0x0, 0x3D74184
	0x03D7411C ADRP X0, 0x3F2000
	0x03D74120 LDR X0, [X0 + 0xE80]
	0x03D74124 BL 0x1C16CF4
	0x03D74128 ADRP X0, 0x3F2000
	0x03D7412C LDR X0, [X0 + 0xE88]
	0x03D74130 BL 0x1C16CF4
	0x03D74134 ADRP X0, 0x3F2000
	0x03D74138 LDR X0, [X0 + 0xE90]
	0x03D7413C BL 0x1C16CF4
	0x03D74140 ADRP X0, 0x3F2000
	0x03D74144 LDR X0, [X0 + 0xE98]
	0x03D74148 BL 0x1C16CF4
	0x03D7414C ADRP X0, 0x3F2000
	0x03D74150 LDR X0, [X0 + 0xEA0]
	0x03D74154 BL 0x1C16CF4
	0x03D74158 ADRP X0, 0x3F2000
	0x03D7415C LDR X0, [X0 + 0xEA8]
	0x03D74160 BL 0x1C16CF4
	0x03D74164 ADRP X0, 0x3F2000
	0x03D74168 LDR X0, [X0 + 0xEB0]
	0x03D7416C BL 0x1C16CF4
	0x03D74170 ADRP X0, 0x3F2000
	0x03D74174 LDR X0, [X0 + 0xDB0]
	0x03D74178 BL 0x1C16CF4
	0x03D7417C MOVZ W8, 0x1
	0x03D74180 STRB W8, [X22 + 0xD3A]
	0x03D74184 MOVI V0.2D, 0x0
	0x03D74188 STR X31, [X31 + 0x50]
	0x03D7418C STP V0, V0, [X31 + 0x30]
	0x03D74190 LDRB W8, [X19 + 0x54]
	0x03D74194 CBZ W8, 0x3D74230
	0x03D74198 STRB W31, [X19 + 0x54]
	0x03D7419C TBNZ X21, 0x0, 0x3D74218
	0x03D741A0 LDR X0, [X19 + 0x80]
	0x03D741A4 CBZ X0, 0x3D742CC
	0x03D741A8 ADRP X8, 0x3F2000
	0x03D741AC LDR X8, [X8 + 0xE88]
	0x03D741B0 LDR X1, [X8]
	0x03D741B4 ADD X8, X31, 0x8
	0x03D741B8 BL 0x2AB4E74
	0x03D741BC LDUR V0, [X31 + 0x8]
	0x03D741C0 LDUR V1, [X31 + 0x18]
	0x03D741C4 LDR X8, [X31 + 0x28]
	0x03D741C8 ADRP X21, 0x3F2000
	0x03D741CC STP V0, V1, [X31 + 0x30]
	0x03D741D0 STR X8, [X31 + 0x50]
	0x03D741D4 LDR X21, [X21 + 0xE98]
	0x03D741D8 LDR X1, [X21]
	0x03D741DC ADD X0, X31, 0x30
	0x03D741E0 BL 0x2C0D32C
	0x03D741E4 TBZ X0, 0x0, 0x3D74204
	0x03D741E8 LDR X1, [X31 + 0x40]
	0x03D741EC LDR V0, [X31 + 0x48]
	0x03D741F0 CMP X1, X20
	0x03D741F4 CSET W2, NE
	0x03D741F8 MOV X0, X19
	0x03D741FC BL 0x3D73468
	0x03D74200 B 0x3D741D8
	0x03D74204 ADRP X8, 0x3F2000
	0x03D74208 LDR X8, [X8 + 0xE90]
	0x03D7420C ADD X0, X31, 0x30
	0x03D74210 LDR X1, [X8]
	0x03D74214 BL 0x2C0D444
	0x03D74218 LDR X0, [X19 + 0x80]
	0x03D7421C CBZ X0, 0x3D742CC
	0x03D74220 ADRP X8, 0x3F2000
	0x03D74224 LDR X8, [X8 + 0xE80]
	0x03D74228 LDR X1, [X8]
	0x03D7422C BL 0x2AB4C18
	0x03D74230 LDR X8, [X19 + 0x68]
	0x03D74234 STRB W31, [X19 + 0x55]
	0x03D74238 CBZ X8, 0x3D742CC
	0x03D7423C LDP W2, W9, [X8 + 0x18]
	0x03D74240 ADD W9, W9, 0x1
	0x03D74244 CMP W2, 0x1
	0x03D74248 STP W31, W9, [X8 + 0x18]
	0x03D7424C B.LT 0x3D74260
	0x03D74250 LDR X0, [X8 + 0x10]
	0x03D74254 MOV W1, W31
	0x03D74258 MOV X3, X31
	0x03D7425C BL 0x339FA34
	0x03D74260 LDR X8, [X19 + 0x78]
	0x03D74264 CBZ X8, 0x3D742CC
	0x03D74268 LDP W2, W9, [X8 + 0x18]
	0x03D7426C ADD W9, W9, 0x1
	0x03D74270 CMP W2, 0x1
	0x03D74274 STP W31, W9, [X8 + 0x18]
	0x03D74278 B.LT 0x3D7428C
	0x03D7427C LDR X0, [X8 + 0x10]
	0x03D74280 MOV W1, W31
	0x03D74284 MOV X3, X31
	0x03D74288 BL 0x339FA34
	0x03D7428C LDR X8, [X19 + 0x70]
	0x03D74290 CBZ X8, 0x3D742CC
	0x03D74294 LDP W2, W9, [X8 + 0x18]
	0x03D74298 ADD W9, W9, 0x1
	0x03D7429C CMP W2, 0x1
	0x03D742A0 STP W31, W9, [X8 + 0x18]
	0x03D742A4 B.LT 0x3D742B8
	0x03D742A8 LDR X0, [X8 + 0x10]
	0x03D742AC MOV W1, W31
	0x03D742B0 MOV X3, X31
	0x03D742B4 BL 0x339FA34
	0x03D742B8 LDP X20, X19, [X31 + 0x80]
	0x03D742BC LDP X22, X21, [X31 + 0x70]
	0x03D742C0 LDR X30, [X31 + 0x60]
	0x03D742C4 ADD X31, X31, 0x90
	0x03D742C8 RET
	0x03D742CC BL 0x1C16F20
	0x03D742D0 B 0x3D742D4
	0x03D742D4 MOV X21, X0
	0x03D742D8 CMP W1, 0x1

ISIL:
	001 Move [X31-128], D13
	002 Move [X31-120], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X27
	009 Move [X31+64], X26
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Move X21, 0x674000
	018 Move W8, [X21+3374]
	019 Move W22, W2
	020 Move V8, V0
	021 Move X19, X1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {59}
	027 Move X0, 0x3F3000
	028 Move X0, [X0+1616]
	029 Call 0x1C17CF4
	030 Move X0, 0x3F3000
	031 Move X0, [X0+3640]
	032 Call 0x1C17CF4
	033 Move X0, 0x3F3000
	034 Move X0, [X0+3544]
	035 Call 0x1C17CF4
	036 Move X0, 0x3F3000
	037 Move X0, [X0+3616]
	038 Call 0x1C17CF4
	039 Move X0, 0x3F3000
	040 Move X0, [X0+3568]
	041 Call 0x1C17CF4
	042 Move X0, 0x3F3000
	043 Move X0, [X0+3440]
	044 Call 0x1C17CF4
	045 Move X0, 0x3F3000
	046 Move X0, [X0+3600]
	047 Call 0x1C17CF4
	048 Move X0, 0x380000
	049 Move X0, [X0+1448]
	050 Call 0x1C17CF4
	051 Move X0, 0x3F3000
	052 Move X0, [X0+3648]
	053 Call 0x1C17CF4
	054 Move X0, 0x3F3000
	055 Move X0, [X0+3656]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X21+3374], W8
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Move X8, 0x3F3000
	061 Move X8, [X8+3656]
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X1, X31
	065 Move X21, X0
	066 Call Object..ctor, X0
	067 Compare X21, 0
	068 JumpIfEqual {195}
	069 Move [X21+24], X20
	070 Move X8, 0x3F3000
	071 Move X8, [X8+3544]
	072 Move X0, [X8]
	073 Call 0x1C17F10
	074 Move X8, 0x3F3000
	075 Move X8, [X8+3640]
	076 Move X1, X20
	077 Move X3, X31
	078 Move X23, X0
	079 Move X2, [X8]
	080 Call Comparison`1<Object>..ctor, X0, X1, X2
	081 Compare X19, 0
	082 JumpIfEqual {195}
	083 Move X8, 0x3F3000
	084 Move X8, [X8+3568]
	085 Move X0, X19
	086 Move X1, X23
	087 Move X2, [X8]
	088 Call List`1<Object>.Sort, X0, X1
	089 Move [X21+16], W31
	090 Move X8, 0x3F3000
	091 Move X8, [X8+1616]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X8, 0x3F3000
	095 Move X8, [X8+3648]
	096 Move X1, X21
	097 Move X3, X31
	098 Move X23, X0
	099 Move X2, [X8]
	100 Call Action`1<Object>..ctor, X0, X1, X2
	101 Move X8, 0x3F3000
	102 Move X8, [X8+3616]
	103 Move X0, X19
	104 Move X1, X23
	105 Move X2, [X8]
	106 Call List`1<Object>.ForEach, X0, X1
	107 Move W8, [X19+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X25, 0x3F3000
	110 Move X26, 0x380000
	111 Move X25, [X25+3600]
	112 Move X26, [X26+1448]
	113 Move W23, W31
	114 And W22, W22, 1
	115 Move W27, 0x42C80000
	116 Move X2, [X25]
	117 Move X0, X19
	118 Move W1, W23
	119 Call List`1<Object>.get_Item, X0, X1
	120 Move X24, X0
	121 Move X0, X20
	122 Move X1, X24
	123 Call ColumnLayout.GetDesiredWidth, X0, X1
	124 Move X0, X20
	125 Move X1, X24
	126 Move V9, V0
	127 Call ColumnLayout.GetDesiredWidth, X0, X1
	128 Compare X24, 0
	129 JumpIfEqual {195}
	130 Move W8, [X24+88]
	131 Move V12, [X24+84]
	132 Move V10, V0
	133 Compare W8, 0
	134 JumpIfEqual {139}
	135 Move V0, [X20+80]
	136 Move S1, W27
	137 Multiply S0, S0, S12
	138 NotImplemented "Instruction FDIV not yet implemented."
	139 Move V13, [X21+16]
	140 Move X0, X20
	141 Move X1, X24
	142 Call ColumnLayout.GetDesiredWidth, X0, X1
	143 NotImplemented "Instruction FCMP not yet implemented."
	144 Move S11, W31
	145 Move X0, X20
	146 Move X1, X24
	147 Call ColumnLayout.GetDesiredWidth, X0, X1
	148 Move X0, [X26]
	149 Move V11, V0
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 NotImplemented "Instruction FDIV not yet implemented."
	155 Multiply S0, S8, S0
	156 Subtract S1, S12, S11
	157 Move X0, X31
	158 Call Math.Min, V0, V1
	159 Move V11, V0
	160 NotImplemented "Instruction FCMP not yet implemented."
	161 Move X0, X20
	162 Move X1, X24
	163 Call ColumnLayout.GetDesiredWidth, X0, X1
	164 Add S0, S11, S0
	165 Move X0, X20
	166 Move X1, X24
	167 Move W2, W22
	168 Call ColumnLayout.ResizeColumn, X0, X1, V0, X2
	169 Move V0, [X21+16]
	170 Subtract S8, S8, S11
	171 NotImplemented "Instruction FCMP not yet implemented."
	172 Subtract S0, S0, S9
	173 Move [X21+16], S0
	174 Move W8, [X19+24]
	175 Add W23, W23, 1
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move V0, V8
	178 Move X20, [X31+112]
	179 Move X19, [X31+120]
	180 Move X22, [X31+96]
	181 Move X21, [X31+104]
	182 Move X24, [X31+80]
	183 Move X23, [X31+88]
	184 Move X26, [X31+64]
	185 Move X25, [X31+72]
	186 Move X30, [X31+48]
	187 Move X27, [X31+56]
	188 Move D9, [X31+32]
	189 Move D8, [X31+40]
	190 Move D11, [X31+16]
	191 Move D10, [X31+24]
	192 Move D13, [X31+128]
	193 Move D12, [X31+136]
	194 Return V0
	195 Call 0x1C17F20

Method: System.Single RecomputeToMinWidthProportionally(System.Collections.Generic.List`1<UnityEngine.UIElements.Column> columns, System.Single distributedDelta, System.Boolean setDesiredWidthOnly = False)

Disassembly:
	0x03D73BA8 LDRB W8, [X19 + 0x54]
	0x03D73BAC LDR X23, [X23 + 0xE50]
	0x03D73BB0 CBZ W8, 0x3D73BFC
	0x03D73BB4 LDR X22, [X19 + 0x80]
	0x03D73BB8 CBNZ X22, 0x3D73BE8
	0x03D73BBC ADRP X8, 0x3F3000
	0x03D73BC0 LDR X8, [X8 + 0xE60]
	0x03D73BC4 LDR X0, [X8]
	0x03D73BC8 BL 0x1C16F10
	0x03D73BCC ADRP X8, 0x3F3000
	0x03D73BD0 LDR X8, [X8 + 0xE58]
	0x03D73BD4 MOV X22, X0
	0x03D73BD8 LDR X1, [X8]
	0x03D73BDC BL 0x2AB41F4
	0x03D73BE0 STR X22, [X19 + 0x80]
	0x03D73BE4 CBZ X22, 0x3D73D1C
	0x03D73BE8 LDR V0, [X20 + 0x5C]
	0x03D73BEC LDR X2, [X23]
	0x03D73BF0 MOV X0, X22
	0x03D73BF4 MOV X1, X20
	0x03D73BF8 BL 0x2AB4A74
	0x03D73BFC LDR X22, [X19 + 0x30]
	0x03D73C00 CBZ X22, 0x3D73D1C
	0x03D73C04 ADRP X24, 0x3F3000
	0x03D73C08 ADRP X25, 0x3F3000
	0x03D73C0C ADRP X26, 0x3F3000
	0x03D73C10 LDR X24, [X24 + 0x760]
	0x03D73C14 LDR X25, [X25 + 0xE68]
	0x03D73C18 LDR X26, [X26 + 0xDE8]
	0x03D73C1C ADD W20, W21, 0x1
	0x03D73C20 MOV X0, X22
	0x03D73C24 BL 0x3D746E4
	0x03D73C28 LDR X0, [X22 + 0x20]
	0x03D73C2C LDR X1, [X24]
	0x03D73C30 BL 0x21BD4C4
	0x03D73C34 CMP W20, W0
	0x03D73C38 B.GE 0x3D73D20
	0x03D73C3C LDR X21, [X19 + 0x30]
	0x03D73C40 CBZ X21, 0x3D73D1C
	0x03D73C44 MOV X0, X21
	0x03D73C48 BL 0x3D746E4
	0x03D73C4C LDR X0, [X21 + 0x20]
	0x03D73C50 LDR X2, [X25]
	0x03D73C54 MOV W1, W20
	0x03D73C58 BL 0x21C0AA4
	0x03D73C5C CBZ X0, 0x3D73D1C
	0x03D73C60 LDRB W8, [X0 + 0x40]
	0x03D73C64 MOV X21, X0
	0x03D73C68 CBZ W8, 0x3D73D10
	0x03D73C6C LDRB W8, [X21 + 0x60]
	0x03D73C70 CBZ W8, 0x3D73C80
	0x03D73C74 LDR X0, [X19 + 0x68]
	0x03D73C78 CBNZ X0, 0x3D73CA0
	0x03D73C7C B 0x3D73D1C
	0x03D73C80 LDR W8, [X21 + 0x48]
	0x03D73C84 CMP W8, 0x1
	0x03D73C88 B.NE 0x3D73C98
	0x03D73C8C LDR X0, [X19 + 0x70]
	0x03D73C90 CBNZ X0, 0x3D73CA0
	0x03D73C94 B 0x3D73D1C
	0x03D73C98 LDR X0, [X19 + 0x78]
	0x03D73C9C CBZ X0, 0x3D73D1C
	0x03D73CA0 LDR W10, [X0 + 0x1C]
	0x03D73CA4 LDR X8, [X0 + 0x10]
	0x03D73CA8 LDR X9, [X26]
	0x03D73CAC ADD W10, W10, 0x1
	0x03D73CB0 STR W10, [X0 + 0x1C]
	0x03D73CB4 CBZ X8, 0x3D73D1C
	0x03D73CB8 LDRSW X10, [X0 + 0x18]
	0x03D73CBC LDR W11, [X8 + 0x18]
	0x03D73CC0 CMP W10, W11
	0x03D73CC4 B.CS 0x3D73CDC
	0x03D73CC8 ADD W9, W10, 0x1
	0x03D73CCC ADD X8, X8, X10, 0x3, LSL
	0x03D73CD0 STR W9, [X0 + 0x18]
	0x03D73CD4 STR X21, [X8 + 0x20]
	0x03D73CD8 B 0x3D73CF0
	0x03D73CDC LDR X8, [X9 + 0x20]
	0x03D73CE0 MOV X1, X21
	0x03D73CE4 LDR X8, [X8 + 0xC0]
	0x03D73CE8 LDR X2, [X8 + 0x70]
	0x03D73CEC BL 0x301BF90
	0x03D73CF0 LDRB W8, [X19 + 0x54]
	0x03D73CF4 CBZ W8, 0x3D73D10
	0x03D73CF8 LDR X0, [X19 + 0x80]
	0x03D73CFC CBZ X0, 0x3D73D1C
	0x03D73D00 LDR V0, [X21 + 0x5C]
	0x03D73D04 LDR X2, [X23]
	0x03D73D08 MOV X1, X21
	0x03D73D0C BL 0x2AB4A74
	0x03D73D10 LDR X22, [X19 + 0x30]
	0x03D73D14 ADD W20, W20, 0x1
	0x03D73D18 CBNZ X22, 0x3D73C20
	0x03D73D1C BL 0x1C16F20
	0x03D73D20 LDP X20, X19, [X31 + 0x40]
	0x03D73D24 LDP X22, X21, [X31 + 0x30]
	0x03D73D28 LDP X24, X23, [X31 + 0x20]
	0x03D73D2C LDP X26, X25, [X31 + 0x10]
	0x03D73D30 LDR X30, [X31 + 0x8]
	0x03D73D34 LDR V8, [X31], #0x50
	0x03D73D38 RET
	0x03D73D3C ADRP X0, 0x380000
	0x03D73D40 LDR X0, [X0 + 0x7D0]
	0x03D73D44 BL 0x1C16D08
	0x03D73D48 BL 0x1C16F10
	0x03D73D4C MOV X19, X0
	0x03D73D50 ADRP X0, 0x3F3000
	0x03D73D54 LDR X0, [X0 + 0xE70]
	0x03D73D58 BL 0x1C16D08
	0x03D73D5C MOV X1, X0
	0x03D73D60 MOV X0, X19
	0x03D73D64 MOV X2, X31
	0x03D73D68 BL 0x33B2C70
	0x03D73D6C ADRP X0, 0x3F3000
	0x03D73D70 LDR X0, [X0 + 0xE78]
	0x03D73D74 BL 0x1C16D08
	0x03D73D78 MOV X1, X0
	0x03D73D7C MOV X0, X19
	0x03D73D80 BL 0x1C16DEC
	0x03D73D84 STR D8, [X31 - 0x40]!
	0x03D73D88 STR X30, [X31 + 0x8]
	0x03D73D8C STP X24, X23, [X31 + 0x10]
	0x03D73D90 STP X22, X21, [X31 + 0x20]
	0x03D73D94 STP X20, X19, [X31 + 0x30]
	0x03D73D98 ADRP X21, 0x674000
	0x03D73D9C LDRB W8, [X21 + 0xD37]
	0x03D73DA0 MOV X19, X1
	0x03D73DA4 MOV X20, X0
	0x03D73DA8 TBNZ X8, 0x0, 0x3D73DC0
	0x03D73DAC ADRP X0, 0x3F3000
	0x03D73DB0 LDR X0, [X0 + 0xE68]
	0x03D73DB4 BL 0x1C16CF4
	0x03D73DB8 MOVZ W8, 0x1
	0x03D73DBC STRB W8, [X21 + 0xD37]
	0x03D73DC0 CBZ X19, 0x3D73E74
	0x03D73DC4 LDRB W8, [X19 + 0x40]
	0x03D73DC8 CBZ W8, 0x3D73E48
	0x03D73DCC MOV X0, X19
	0x03D73DD0 BL 0x3D6F82C
	0x03D73DD4 CMP W0, 0x1
	0x03D73DD8 B.LT 0x3D73E54
	0x03D73DDC ADRP X23, 0x3F3000
	0x03D73DE0 LDR X23, [X23 + 0xE68]
	0x03D73DE4 MOV W21, W31
	0x03D73DE8 FMOV S8, W31
	0x03D73DEC MOVZ W24, 0x7F800000
	0x03D73DF0 LDR X22, [X20 + 0x30]
	0x03D73DF4 CBZ X22, 0x3D73E74
	0x03D73DF8 MOV X0, X22
	0x03D73DFC BL 0x3D746E4
	0x03D73E00 LDR X0, [X22 + 0x20]
	0x03D73E04 LDR X2, [X23]
	0x03D73E08 MOV W1, W21
	0x03D73E0C BL 0x21C0AA4
	0x03D73E10 MOV X1, X0
	0x03D73E14 MOV X0, X20
	0x03D73E18 BL 0x3D72634
	0x03D73E1C FMOV W8, S0
	0x03D73E20 AND W8, W8, 0x7FFFFFFF
	0x03D73E24 FADD S1, S8, S0
	0x03D73E28 CMP W8, W24
	0x03D73E2C MOV X0, X19
	0x03D73E30 FCSEL S8, S8, S1, HI
	0x03D73E34 ADD W21, W21, 0x1
	0x03D73E38 BL 0x3D6F82C
	0x03D73E3C CMP W21, W0
	0x03D73E40 B.LT 0x3D73DF0
	0x03D73E44 B 0x3D73E58
	0x03D73E48 MOVZ W8, 0x7FC00000
	0x03D73E4C FMOV S8, W8
	0x03D73E50 B 0x3D73E58
	0x03D73E54 FMOV S8, W31
	0x03D73E58 LDP X20, X19, [X31 + 0x30]
	0x03D73E5C LDP X22, X21, [X31 + 0x20]
	0x03D73E60 LDP X24, X23, [X31 + 0x10]
	0x03D73E64 LDR X30, [X31 + 0x8]
	0x03D73E68 MOV V0.16B, V8.16B
	0x03D73E6C LDR V8, [X31], #0x40
	0x03D73E70 RET
	0x03D73E74 BL 0x1C16F20
	0x03D73E78 STR D12, [X31 - 0x50]!
	0x03D73E7C STP D11, D10, [X31 + 0x10]
	0x03D73E80 STP D9, D8, [X31 + 0x20]
	0x03D73E84 STP X30, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-128], D13
	002 Move [X31-120], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X27
	009 Move [X31+64], X26
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Move X21, 0x675000
	018 Move W8, [X21+3375]
	019 Move W22, W2
	020 Move V8, V0
	021 Move X19, X1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {59}
	027 Move X0, 0x3F4000
	028 Move X0, [X0+1616]
	029 Call 0x1C17CF4
	030 Move X0, 0x3F4000
	031 Move X0, [X0+3608]
	032 Call 0x1C17CF4
	033 Move X0, 0x3F4000
	034 Move X0, [X0+3544]
	035 Call 0x1C17CF4
	036 Move X0, 0x3F4000
	037 Move X0, [X0+3616]
	038 Call 0x1C17CF4
	039 Move X0, 0x3F4000
	040 Move X0, [X0+3568]
	041 Call 0x1C17CF4
	042 Move X0, 0x3F4000
	043 Move X0, [X0+3440]
	044 Call 0x1C17CF4
	045 Move X0, 0x3F4000
	046 Move X0, [X0+3600]
	047 Call 0x1C17CF4
	048 Move X0, 0x381000
	049 Move X0, [X0+1448]
	050 Call 0x1C17CF4
	051 Move X0, 0x3F4000
	052 Move X0, [X0+3624]
	053 Call 0x1C17CF4
	054 Move X0, 0x3F4000
	055 Move X0, [X0+3632]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X21+3375], W8
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Move X8, 0x3F4000
	061 Move X8, [X8+3632]
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X1, X31
	065 Move X21, X0
	066 Call Object..ctor, X0
	067 Compare X21, 0
	068 JumpIfEqual {203}
	069 Move [X21+24], X20
	070 Move X8, 0x3F4000
	071 Move X8, [X8+3544]
	072 Move X0, [X8]
	073 Call 0x1C17F10
	074 Move X8, 0x3F4000
	075 Move X8, [X8+3608]
	076 Move X1, X20
	077 Move X3, X31
	078 Move X23, X0
	079 Move X2, [X8]
	080 Call Comparison`1<Object>..ctor, X0, X1, X2
	081 Compare X19, 0
	082 JumpIfEqual {203}
	083 Move X8, 0x3F4000
	084 Move X8, [X8+3568]
	085 Move X0, X19
	086 Move X1, X23
	087 Move X2, [X8]
	088 Call List`1<Object>.Sort, X0, X1
	089 Move [X21+16], W31
	090 Move X8, 0x3F4000
	091 Move X8, [X8+1616]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X8, 0x3F4000
	095 Move X8, [X8+3624]
	096 Move X1, X21
	097 Move X3, X31
	098 Move X23, X0
	099 Move X2, [X8]
	100 Call Action`1<Object>..ctor, X0, X1, X2
	101 Move X8, 0x3F4000
	102 Move X8, [X8+3616]
	103 Move X0, X19
	104 Move X1, X23
	105 Move X2, [X8]
	106 Call List`1<Object>.ForEach, X0, X1
	107 Move W8, [X19+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X25, 0x3F4000
	110 Move X26, 0x381000
	111 Move X25, [X25+3600]
	112 Move X26, [X26+1448]
	113 Move W23, W31
	114 And W22, W22, 1
	115 Move W27, 0x42C80000
	116 Move X2, [X25]
	117 Move X0, X19
	118 Move W1, W23
	119 Call List`1<Object>.get_Item, X0, X1
	120 Move X24, X0
	121 Move X0, X20
	122 Move X1, X24
	123 Call ColumnLayout.GetDesiredWidth, X0, X1
	124 Move X0, X20
	125 Move X1, X24
	126 Move V9, V0
	127 Call ColumnLayout.GetDesiredWidth, X0, X1
	128 Move V12, [X21+16]
	129 Move X0, X20
	130 Move X1, X24
	131 Move V10, V0
	132 Call ColumnLayout.GetDesiredWidth, X0, X1
	133 Compare X24, 0
	134 JumpIfEqual {203}
	135 Move W8, [X24+80]
	136 Move V1, [X24+76]
	137 Compare W8, 0
	138 JumpIfEqual {143}
	139 Move V2, [X20+80]
	140 Multiply S1, S2, S1
	141 Move S2, W27
	142 NotImplemented "Instruction FDIV not yet implemented."
	143 NotImplemented "Instruction FCMP not yet implemented."
	144 Move S11, W31
	145 Move X0, X20
	146 Move X1, X24
	147 Call ColumnLayout.GetDesiredWidth, X0, X1
	148 Move W8, [X24+80]
	149 Move V13, [X24+76]
	150 Move V11, V0
	151 Compare W8, 0
	152 JumpIfEqual {157}
	153 Move V0, [X20+80]
	154 Move S1, W27
	155 Multiply S0, S13, S0
	156 NotImplemented "Instruction FDIV not yet implemented."
	157 Move X0, [X26]
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 NotImplemented "Instruction FDIV not yet implemented."
	163 Multiply S0, S8, S0
	164 Subtract S1, S11, S13
	165 Move X0, X31
	166 Call Math.Min, V0, V1
	167 Move V11, V0
	168 NotImplemented "Instruction FCMP not yet implemented."
	169 Move X0, X20
	170 Move X1, X24
	171 Call ColumnLayout.GetDesiredWidth, X0, X1
	172 Subtract S0, S0, S11
	173 Move X0, X20
	174 Move X1, X24
	175 Move W2, W22
	176 Call ColumnLayout.ResizeColumn, X0, X1, V0, X2
	177 Move V0, [X21+16]
	178 Subtract S8, S8, S11
	179 NotImplemented "Instruction FCMP not yet implemented."
	180 Subtract S0, S0, S9
	181 Move [X21+16], S0
	182 Move W8, [X19+24]
	183 Add W23, W23, 1
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move V0, V8
	186 Move X20, [X31+112]
	187 Move X19, [X31+120]
	188 Move X22, [X31+96]
	189 Move X21, [X31+104]
	190 Move X24, [X31+80]
	191 Move X23, [X31+88]
	192 Move X26, [X31+64]
	193 Move X25, [X31+72]
	194 Move X30, [X31+48]
	195 Move X27, [X31+56]
	196 Move D9, [X31+32]
	197 Move D8, [X31+40]
	198 Move D11, [X31+16]
	199 Move D10, [X31+24]
	200 Move D13, [X31+128]
	201 Move D12, [X31+136]
	202 Return V0
	203 Call 0x1C17F20

Method: System.Single RecomputeToDesiredWidth(System.Collections.Generic.List`1<UnityEngine.UIElements.Column> columns, System.Single distributedDelta, System.Boolean setDesiredWidthOnly, System.Boolean distributeOverflow)

Disassembly:
	0x03D73A84 MOV X20, X1
	0x03D73A88 MOV X19, X0
	0x03D73A8C TBNZ X8, 0x0, 0x3D73AEC
	0x03D73A90 ADRP X0, 0x3F3000
	0x03D73A94 LDR X0, [X0 + 0xE58]
	0x03D73A98 BL 0x1C16CF4
	0x03D73A9C ADRP X0, 0x3F3000
	0x03D73AA0 LDR X0, [X0 + 0xE50]
	0x03D73AA4 BL 0x1C16CF4
	0x03D73AA8 ADRP X0, 0x3F3000
	0x03D73AAC LDR X0, [X0 + 0xE60]
	0x03D73AB0 BL 0x1C16CF4
	0x03D73AB4 ADRP X0, 0x3F3000
	0x03D73AB8 LDR X0, [X0 + 0x760]
	0x03D73ABC BL 0x1C16CF4
	0x03D73AC0 ADRP X0, 0x3F3000
	0x03D73AC4 LDR X0, [X0 + 0xE68]
	0x03D73AC8 BL 0x1C16CF4
	0x03D73ACC ADRP X0, 0x3F3000
	0x03D73AD0 LDR X0, [X0 + 0xDE8]
	0x03D73AD4 BL 0x1C16CF4
	0x03D73AD8 ADRP X0, 0x3F3000
	0x03D73ADC LDR X0, [X0 + 0xDB0]
	0x03D73AE0 BL 0x1C16CF4
	0x03D73AE4 MOVZ W8, 0x1
	0x03D73AE8 STRB W8, [X22 + 0xD36]
	0x03D73AEC LDRB W8, [X19 + 0x48]
	0x03D73AF0 CBNZ W8, 0x3D73D3C
	0x03D73AF4 AND W8, W21, 0x1
	0x03D73AF8 MOVZ W9, 0x1
	0x03D73AFC STRB W8, [X19 + 0x54]
	0x03D73B00 STRB W9, [X19 + 0x55]
	0x03D73B04 CBZ X20, 0x3D73D1C
	0x03D73B08 MOV X0, X20
	0x03D73B0C BL 0x3D6F82C
	0x03D73B10 STP S8, S8, [X19 + 0x58]
	0x03D73B14 LDR V0, [X20 + 0x5C]
	0x03D73B18 LDR X8, [X19 + 0x68]
	0x03D73B1C STR S0, [X19 + 0x60]
	0x03D73B20 CBZ X8, 0x3D73D1C
	0x03D73B24 LDP W2, W9, [X8 + 0x18]
	0x03D73B28 MOV W21, W0
	0x03D73B2C ADD W9, W9, 0x1
	0x03D73B30 CMP W2, 0x1
	0x03D73B34 STP W31, W9, [X8 + 0x18]
	0x03D73B38 B.LT 0x3D73B4C
	0x03D73B3C LDR X0, [X8 + 0x10]
	0x03D73B40 MOV W1, W31
	0x03D73B44 MOV X3, X31
	0x03D73B48 BL 0x339FA34
	0x03D73B4C LDR X8, [X19 + 0x78]
	0x03D73B50 CBZ X8, 0x3D73D1C
	0x03D73B54 LDP W2, W9, [X8 + 0x18]
	0x03D73B58 ADD W9, W9, 0x1
	0x03D73B5C CMP W2, 0x1
	0x03D73B60 STP W31, W9, [X8 + 0x18]
	0x03D73B64 B.LT 0x3D73B78
	0x03D73B68 LDR X0, [X8 + 0x10]
	0x03D73B6C MOV W1, W31
	0x03D73B70 MOV X3, X31
	0x03D73B74 BL 0x339FA34
	0x03D73B78 LDR X8, [X19 + 0x70]
	0x03D73B7C CBZ X8, 0x3D73D1C
	0x03D73B80 LDP W2, W9, [X8 + 0x18]
	0x03D73B84 ADD W9, W9, 0x1
	0x03D73B88 CMP W2, 0x1
	0x03D73B8C STP W31, W9, [X8 + 0x18]
	0x03D73B90 B.LT 0x3D73BA4
	0x03D73B94 LDR X0, [X8 + 0x10]
	0x03D73B98 MOV W1, W31
	0x03D73B9C MOV X3, X31
	0x03D73BA0 BL 0x339FA34
	0x03D73BA4 ADRP X23, 0x3F3000

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x675000
	009 Move W8, [X23+3376]
	010 Move W22, W3
	011 Move W19, W2
	012 Move V8, V0
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x3F4000
	020 Move X0, [X0+3440]
	021 Call 0x1C17CF4
	022 Move X0, 0x3F4000
	023 Move X0, [X0+3600]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+3376], W8
	027 Move TEMP, X22
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {54}
	031 Compare X20, 0
	032 JumpIfEqual {85}
	033 Move W8, [X20+24]
	034 Move X23, 0x3F4000
	035 Move X23, [X23+3600]
	036 Subtract W22, W8, 1
	037 Move TEMP, X22
	038 And TEMP, TEMP, -2147483648
	039 Compare TEMP, -2147483648
	040 JumpIfEqual {76}
	041 Move X2, [X23]
	042 Move X0, X20
	043 Move W1, W22
	044 Call List`1<Object>.get_Item, X0, X1
	045 Move X1, X0
	046 And W2, W19, 1
	047 Move W3, 1
	048 Move X0, X21
	049 Move V0, V8
	050 Call ColumnLayout.RecomputeToDesiredWidth, X0, X1, V0, X2, X3
	051 Move V8, V0
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 Subtract W22, W22, 1
	054 Compare X20, 0
	055 JumpIfEqual {85}
	056 Move W8, [X20+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X23, 0x3F4000
	059 Move X23, [X23+3600]
	060 Move W22, W31
	061 Move X2, [X23]
	062 Move X0, X20
	063 Move W1, W22
	064 Call List`1<Object>.get_Item, X0, X1
	065 Move X1, X0
	066 And W2, W19, 1
	067 Move X0, X21
	068 Move V0, V8
	069 Move W3, W31
	070 Call ColumnLayout.RecomputeToDesiredWidth, X0, X1, V0, X2, X3
	071 Move V8, V0
	072 NotImplemented "Instruction FCMP not yet implemented."
	073 Move W8, [X20+24]
	074 Add W22, W22, 1
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X30, [X31+16]
	081 Move X23, [X31+24]
	082 Move V0, V8
	083 Move V8, [X31+64]
	084 Return V0
	085 Call 0x1C17F20

Method: System.Single RecomputeToDesiredWidth(UnityEngine.UIElements.Column column, System.Single distributedDelta, System.Boolean setDesiredWidthOnly, System.Boolean distributeOverflow)

Disassembly:
	0x03D7458C BR X3
	0x03D74590 LDP X20, X19, [X31 + 0x10]
	0x03D74594 LDR X30, [X31], #0x20
	0x03D74598 RET
	0x03D7459C LDR X8, [X0 + 0x40]
	0x03D745A0 CBZ X8, 0x3D745B4
	0x03D745A4 LDR X3, [X8 + 0x18]
	0x03D745A8 LDR X0, [X8 + 0x40]
	0x03D745AC LDR X2, [X8 + 0x28]
	0x03D745B0 BR X3
	0x03D745B4 RET
	0x03D745B8 LDRB W0, [X0 + 0x30]
	0x03D745BC RET
	0x03D745C0 LDRB W9, [X0 + 0x30]
	0x03D745C4 AND W8, W1, 0x1
	0x03D745C8 CMP W9, W8
	0x03D745CC B.EQ 0x3D745F0
	0x03D745D0 LDR X9, [X0 + 0x40]
	0x03D745D4 STRB W8, [X0 + 0x30]
	0x03D745D8 CBZ X9, 0x3D745F0
	0x03D745DC LDR X3, [X9 + 0x18]
	0x03D745E0 LDR X0, [X9 + 0x40]
	0x03D745E4 LDR X2, [X9 + 0x28]
	0x03D745E8 MOVZ W1, 0x2
	0x03D745EC BR X3
	0x03D745F0 RET
	0x03D745F4 LDRB W0, [X0 + 0x31]
	0x03D745F8 RET
	0x03D745FC LDRB W9, [X0 + 0x31]
	0x03D74600 AND W8, W1, 0x1
	0x03D74604 CMP W9, W8
	0x03D74608 B.EQ 0x3D7462C
	0x03D7460C LDR X9, [X0 + 0x40]
	0x03D74610 STRB W8, [X0 + 0x31]
	0x03D74614 CBZ X9, 0x3D7462C
	0x03D74618 LDR X3, [X9 + 0x18]
	0x03D7461C LDR X0, [X9 + 0x40]
	0x03D74620 LDR X2, [X9 + 0x28]
	0x03D74624 MOVZ W1, 0x3
	0x03D74628 BR X3
	0x03D7462C RET
	0x03D74630 LDRB W0, [X0 + 0x32]
	0x03D74634 RET
	0x03D74638 LDRB W9, [X0 + 0x32]
	0x03D7463C AND W8, W1, 0x1
	0x03D74640 CMP W9, W8
	0x03D74644 B.EQ 0x3D74668
	0x03D74648 LDR X9, [X0 + 0x40]
	0x03D7464C STRB W8, [X0 + 0x32]
	0x03D74650 CBZ X9, 0x3D74668
	0x03D74654 LDR X3, [X9 + 0x18]
	0x03D74658 LDR X0, [X9 + 0x40]
	0x03D7465C LDR X2, [X9 + 0x28]
	0x03D74660 MOVZ W1, 0x4
	0x03D74664 BR X3
	0x03D74668 RET
	0x03D7466C STR X30, [X31 - 0x20]!
	0x03D74670 STP X20, X19, [X31 + 0x10]
	0x03D74674 ADRP X20, 0x673000
	0x03D74678 LDRB W8, [X20 + 0xD58]
	0x03D7467C MOV X19, X0
	0x03D74680 TBNZ X8, 0x0, 0x3D746A4
	0x03D74684 ADRP X0, 0x3F2000
	0x03D74688 LDR X0, [X0 + 0xEB8]
	0x03D7468C BL 0x1C16CF4
	0x03D74690 ADRP X0, 0x3F2000
	0x03D74694 LDR X0, [X0 + 0xD68]
	0x03D74698 BL 0x1C16CF4
	0x03D7469C MOVZ W8, 0x1
	0x03D746A0 STRB W8, [X20 + 0xD58]
	0x03D746A4 LDR X8, [X19 + 0x18]
	0x03D746A8 CBNZ X8, 0x3D746D8
	0x03D746AC ADRP X8, 0x3F2000
	0x03D746B0 LDR X8, [X8 + 0xD68]
	0x03D746B4 LDR X0, [X8]
	0x03D746B8 BL 0x1C16F10
	0x03D746BC ADRP X8, 0x3F2000
	0x03D746C0 LDR X8, [X8 + 0xEB8]
	0x03D746C4 MOV X1, X19
	0x03D746C8 MOV X20, X0
	0x03D746CC LDR X2, [X8]
	0x03D746D0 BL 0x301B8E0
	0x03D746D4 STR X20, [X19 + 0x18]
	0x03D746D8 LDP X20, X19, [X31 + 0x10]
	0x03D746DC LDR X30, [X31], #0x20
	0x03D746E0 RET
	0x03D746E4 STR X30, [X31 - 0x40]!
	0x03D746E8 STP X24, X23, [X31 + 0x10]
	0x03D746EC STP X22, X21, [X31 + 0x20]
	0x03D746F0 STP X20, X19, [X31 + 0x30]
	0x03D746F4 ADRP X20, 0x673000
	0x03D746F8 LDRB W8, [X20 + 0xD5A]
	0x03D746FC MOV X19, X0
	0x03D74700 TBNZ X8, 0x0, 0x3D7476C
	0x03D74704 ADRP X0, 0x3F2000
	0x03D74708 LDR X0, [X0 + 0xDA8]
	0x03D7470C BL 0x1C16CF4
	0x03D74710 ADRP X0, 0x3F2000
	0x03D74714 LDR X0, [X0 + 0xDE0]
	0x03D74718 BL 0x1C16CF4
	0x03D7471C ADRP X0, 0x3F2000
	0x03D74720 LDR X0, [X0 + 0xEC0]
	0x03D74724 BL 0x1C16CF4
	0x03D74728 ADRP X0, 0x3F2000
	0x03D7472C LDR X0, [X0 + 0xEC8]
	0x03D74730 BL 0x1C16CF4
	0x03D74734 ADRP X0, 0x3F2000
	0x03D74738 LDR X0, [X0 + 0xD68]
	0x03D7473C BL 0x1C16CF4

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x674000
	011 Move W8, [X23+3377]
	012 Move W21, W3
	013 Move W20, W2
	014 Move V8, V0
	015 Move X19, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x380000
	022 Move X0, [X0+1448]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+3377], W8
	026 Compare X19, 0
	027 JumpIfEqual {129}
	028 Move V1, [X22+80]
	029 Move W8, [X19+72]
	030 Move V0, [X19+68]
	031 Compare W8, 0
	032 JumpIfEqual {37}
	033 Move W8, 0x42C80000
	034 Multiply S0, S1, S0
	035 Move S2, W8
	036 NotImplemented "Instruction FDIV not yet implemented."
	037 Move W8, [X19+80]
	038 Move V2, [X19+76]
	039 Compare W8, 0
	040 JumpIfEqual {45}
	041 Move W8, 0x42C80000
	042 Multiply S2, S1, S2
	043 Move S3, W8
	044 NotImplemented "Instruction FDIV not yet implemented."
	045 Move W8, [X19+88]
	046 Move V3, [X19+84]
	047 Compare W8, 0
	048 JumpIfEqual {53}
	049 Move W8, 0x42C80000
	050 Multiply S1, S1, S3
	051 Move S3, W8
	052 NotImplemented "Instruction FDIV not yet implemented."
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 NotImplemented "Instruction FCSEL not yet implemented."
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 Move X0, X22
	057 Move X1, X19
	058 NotImplemented "Instruction FCSEL not yet implemented."
	059 Call ColumnLayout.GetDesiredWidth, X0, X1
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 Move S9, W31
	062 Move TEMP, X21
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {82}
	066 Move X0, X22
	067 Move X1, X19
	068 Call ColumnLayout.GetDesiredWidth, X0, X1
	069 Move X8, 0x380000
	070 Move X8, [X8+1448]
	071 Move V9, V0
	072 Move X0, [X8]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 NotImplemented "Instruction FABD not yet implemented."
	078 Move V0, V8
	079 Move X0, X31
	080 Call Math.Min, V0, V1
	081 Move V9, V0
	082 Move X0, X22
	083 Move X1, X19
	084 Call ColumnLayout.GetDesiredWidth, X0, X1
	085 NotImplemented "Instruction FCMP not yet implemented."
	086 Move TEMP, X21
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {106}
	090 Move X0, X22
	091 Move X1, X19
	092 Call ColumnLayout.GetDesiredWidth, X0, X1
	093 Move X8, 0x380000
	094 Move X8, [X8+1448]
	095 Move V9, V0
	096 Move X0, [X8]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 NotImplemented "Instruction FABD not yet implemented."
	102 Move V0, V8
	103 Move X0, X31
	104 Call Math.Min, V0, V1
	105 Move V9, V0
	106 Move X0, X22
	107 Move X1, X19
	108 Call ColumnLayout.GetDesiredWidth, X0, X1
	109 NotImplemented "Instruction FCMP not yet implemented."
	110 NotImplemented "Instruction FNEG not yet implemented."
	111 And W31, W21, 1
	112 NotImplemented "Instruction FCSEL not yet implemented."
	113 Add S0, S0, S1
	114 And W2, W20, 1
	115 Move X0, X22
	116 Move X1, X19
	117 Call ColumnLayout.ResizeColumn, X0, X1, V0, X2
	118 Subtract S0, S8, S9
	119 Move X20, [X31+64]
	120 Move X19, [X31+72]
	121 Move X22, [X31+48]
	122 Move X21, [X31+56]
	123 Move X30, [X31+32]
	124 Move X23, [X31+40]
	125 Move D9, [X31+16]
	126 Move D8, [X31+24]
	127 Move V10, [X31+80]
	128 Return V0
	129 Call 0x1C17F20

Method: System.Single RecomputeToMinWidth(System.Collections.Generic.List`1<UnityEngine.UIElements.Column> columns, System.Single distributedDelta, System.Boolean setDesiredWidthOnly = False)

Disassembly:
	0x03D73E88 STP X20, X19, [X31 + 0x40]
	0x03D73E8C ADRP X21, 0x674000
	0x03D73E90 LDRB W8, [X21 + 0xD39]
	0x03D73E94 MOV V8.16B, V0.16B
	0x03D73E98 MOV X20, X1
	0x03D73E9C MOV X19, X0
	0x03D73EA0 TBNZ X8, 0x0, 0x3D73EC4
	0x03D73EA4 ADRP X0, 0x3F3000
	0x03D73EA8 LDR X0, [X0 + 0xD70]
	0x03D73EAC BL 0x1C16CF4
	0x03D73EB0 ADRP X0, 0x380000
	0x03D73EB4 LDR X0, [X0 + 0x5A8]
	0x03D73EB8 BL 0x1C16CF4
	0x03D73EBC MOVZ W8, 0x1
	0x03D73EC0 STRB W8, [X21 + 0xD39]
	0x03D73EC4 CBZ X20, 0x3D740F0
	0x03D73EC8 LDR V0, [X19 + 0x50]
	0x03D73ECC LDR W8, [X20 + 0x50]
	0x03D73ED0 LDR V9, [X20 + 0x4C]
	0x03D73ED4 CBZ W8, 0x3D73EE8
	0x03D73ED8 MOVZ W8, 0x42C80000
	0x03D73EDC FMUL S1, S0, S9
	0x03D73EE0 FMOV S2, W8
	0x03D73EE4 FDIV S9, S1, S2
	0x03D73EE8 LDR W8, [X20 + 0x58]
	0x03D73EEC LDR V10, [X20 + 0x54]
	0x03D73EF0 CBZ W8, 0x3D73F04
	0x03D73EF4 MOVZ W8, 0x42C80000
	0x03D73EF8 FMUL S0, S0, S10
	0x03D73EFC FMOV S1, W8
	0x03D73F00 FDIV S10, S0, S1
	0x03D73F04 LDR X8, [X19 + 0x30]
	0x03D73F08 CBZ X8, 0x3D740F0
	0x03D73F0C LDR W8, [X8 + 0x2C]
	0x03D73F10 CMP W8, 0x1
	0x03D73F14 B.NE 0x3D73FAC
	0x03D73F18 LDR V0, [X19 + 0x5C]
	0x03D73F1C MOV X0, X19
	0x03D73F20 MOV X1, X20
	0x03D73F24 FSUB S11, S8, S0
	0x03D73F28 BL 0x3D72634
	0x03D73F2C FADD S0, S11, S0
	0x03D73F30 FCMP S0, S10
	0x03D73F34 FCSEL S1, S10, S0, GT
	0x03D73F38 FCMP S0, S9
	0x03D73F3C MOV X0, X19
	0x03D73F40 MOV X1, X20
	0x03D73F44 FCSEL S12, S1, S9, PL
	0x03D73F48 BL 0x3D72634
	0x03D73F4C FSUB S11, S12, S0
	0x03D73F50 STR S11, [X31 + 0xC]
	0x03D73F54 LDR X1, [X19 + 0x68]
	0x03D73F58 CBZ X1, 0x3D740F0
	0x03D73F5C FCMP S11, 0x0
	0x03D73F60 B.PL 0x3D73FF8
	0x03D73F64 LDR W8, [X1 + 0x18]
	0x03D73F68 CBNZ W8, 0x3D73FF8
	0x03D73F6C LDP X3, X2, [X19 + 0x70]
	0x03D73F70 ADD X4, X31, 0xC
	0x03D73F74 MOVZ W6, 0x1
	0x03D73F78 MOV X0, X19
	0x03D73F7C MOV W5, W31
	0x03D73F80 BL 0x3D726D4
	0x03D73F84 MOV X0, X19
	0x03D73F88 MOV X1, X20
	0x03D73F8C BL 0x3D72634
	0x03D73F90 MOV X0, X19
	0x03D73F94 MOV X1, X20
	0x03D73F98 MOV V11.16B, V0.16B
	0x03D73F9C BL 0x3D72634
	0x03D73FA0 FADD S1, S12, S11
	0x03D73FA4 FSUB S0, S1, S0
	0x03D73FA8 B 0x3D740B0
	0x03D73FAC ADRP X8, 0x380000
	0x03D73FB0 LDR X8, [X8 + 0x5A8]
	0x03D73FB4 LDR V0, [X19 + 0x58]
	0x03D73FB8 LDR V11, [X19 + 0x60]
	0x03D73FBC LDR X0, [X8]
	0x03D73FC0 FSUB S12, S8, S0
	0x03D73FC4 LDR W8, [X0 + 0xE0]
	0x03D73FC8 CBNZ W8, 0x3D73FD0
	0x03D73FCC BL 0x1C16DFC
	0x03D73FD0 FADD S1, S11, S12
	0x03D73FD4 MOV V0.16B, V10.16B
	0x03D73FD8 MOV X0, X31
	0x03D73FDC BL 0x337EEBC
	0x03D73FE0 MOV V1.16B, V0.16B
	0x03D73FE4 MOV V0.16B, V9.16B
	0x03D73FE8 MOV X0, X31
	0x03D73FEC BL 0x337EE18
	0x03D73FF0 MOV V9.16B, V0.16B
	0x03D73FF4 B 0x3D740C0
	0x03D73FF8 FCMP S11, 0x0
	0x03D73FFC B.LE 0x3D7401C
	0x03D74000 MOV X0, X19
	0x03D74004 BL 0x3D700CC
	0x03D74008 LDR V12, [X19 + 0x50]
	0x03D7400C FADD S0, S11, S0
	0x03D74010 FCMP S0, S12
	0x03D74014 B.MI 0x3D7404C

ISIL:
	001 Move [X31-96], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x675000
	014 Move W8, [X22+3378]
	015 Move W21, W2
	016 Move V8, V0
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0x3F4000
	024 Move X0, [X0+3440]
	025 Call 0x1C17CF4
	026 Move X0, 0x3F4000
	027 Move X0, [X0+3600]
	028 Call 0x1C17CF4
	029 Move X0, 0x381000
	030 Move X0, [X0+1448]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+3378], W8
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 Compare X19, 0
	036 JumpIfEqual {117}
	037 Move W8, [X19+24]
	038 Move X24, 0x3F4000
	039 Move X25, 0x381000
	040 Move X24, [X24+3600]
	041 Move X25, [X25+1448]
	042 And W21, W21, 1
	043 Subtract W22, W8, 1
	044 Move W26, 0x42C80000
	045 Move TEMP, X22
	046 And TEMP, TEMP, -2147483648
	047 Compare TEMP, -2147483648
	048 JumpIfEqual {103}
	049 Move X2, [X24]
	050 Move X0, X19
	051 Move W1, W22
	052 Call List`1<Object>.get_Item, X0, X1
	053 Move X23, X0
	054 Move X0, X20
	055 Move X1, X23
	056 Call ColumnLayout.GetDesiredWidth, X0, X1
	057 Compare X23, 0
	058 JumpIfEqual {117}
	059 Move W8, [X23+80]
	060 Move V1, [X23+76]
	061 Compare W8, 0
	062 JumpIfEqual {67}
	063 Move V2, [X20+80]
	064 Multiply S1, S2, S1
	065 Move S2, W26
	066 NotImplemented "Instruction FDIV not yet implemented."
	067 NotImplemented "Instruction FCMP not yet implemented."
	068 Move S9, W31
	069 Move X0, X20
	070 Move X1, X23
	071 Call ColumnLayout.GetDesiredWidth, X0, X1
	072 Move W8, [X23+80]
	073 Move V10, [X23+76]
	074 Move V9, V0
	075 Compare W8, 0
	076 JumpIfEqual {81}
	077 Move V0, [X20+80]
	078 Move S1, W26
	079 Multiply S0, S10, S0
	080 NotImplemented "Instruction FDIV not yet implemented."
	081 Move X0, [X25]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Subtract S1, S9, S10
	087 Move V0, V8
	088 Move X0, X31
	089 Call Math.Min, V0, V1
	090 Move V9, V0
	091 NotImplemented "Instruction FCMP not yet implemented."
	092 Move X0, X20
	093 Move X1, X23
	094 Call ColumnLayout.GetDesiredWidth, X0, X1
	095 Subtract S0, S0, S9
	096 Move X0, X20
	097 Move X1, X23
	098 Move W2, W21
	099 Call ColumnLayout.ResizeColumn, X0, X1, V0, X2
	100 Subtract S8, S8, S9
	101 NotImplemented "Instruction FCMP not yet implemented."
	102 Subtract W22, W22, 1
	103 Move V0, V8
	104 Move X20, [X31+80]
	105 Move X19, [X31+88]
	106 Move X22, [X31+64]
	107 Move X21, [X31+72]
	108 Move X24, [X31+48]
	109 Move X23, [X31+56]
	110 Move X26, [X31+32]
	111 Move X25, [X31+40]
	112 Move X30, [X31+24]
	113 Move D9, [X31+8]
	114 Move D8, [X31+16]
	115 Move V10, [X31+96]
	116 Return V0
	117 Call 0x1C17F20

Method: System.Single RecomputeToMaxWidth(System.Collections.Generic.List`1<UnityEngine.UIElements.Column> columns, System.Single distributedDelta, System.Boolean setDesiredWidthOnly = False)

Disassembly:
	0x03D742DC B.NE 0x3D74310
	0x03D742E0 MOV X0, X21
	0x03D742E4 BL 0x3EB1AD0
	0x03D742E8 LDR X20, [X0]
	0x03D742EC BL 0x3EB1AE0
	0x03D742F0 ADRP X8, 0x3F2000
	0x03D742F4 LDR X8, [X8 + 0xE90]
	0x03D742F8 ADD X0, X31, 0x30
	0x03D742FC LDR X1, [X8]
	0x03D74300 BL 0x2C0D444
	0x03D74304 CBZ X20, 0x3D74218
	0x03D74308 MOV X0, X20
	0x03D7430C BL 0x1C16F18
	0x03D74310 MOV X20, X31
	0x03D74314 B 0x3D7431C
	0x03D74318 MOV X21, X0
	0x03D7431C ADRP X8, 0x3F2000
	0x03D74320 LDR X8, [X8 + 0xE90]
	0x03D74324 LDR X1, [X8]
	0x03D74328 ADD X0, X31, 0x30
	0x03D7432C BL 0x2C0D444
	0x03D74330 CBNZ X20, 0x3D7433C
	0x03D74334 MOV X0, X21
	0x03D74338 BL 0x1D2C690
	0x03D7433C MOV X0, X20
	0x03D74340 BL 0x1C16F18
	0x03D74344 BL 0x1990590
	0x03D74348 STR X30, [X31 - 0x10]!
	0x03D7434C CBZ X1, 0x3D743A8
	0x03D74350 LDR V1, [X0 + 0x50]
	0x03D74354 LDR W8, [X1 + 0x58]
	0x03D74358 LDR V0, [X1 + 0x54]
	0x03D7435C CBZ W8, 0x3D74370
	0x03D74360 MOVZ W8, 0x42C80000
	0x03D74364 FMUL S0, S1, S0
	0x03D74368 FMOV S2, W8
	0x03D7436C FDIV S0, S0, S2
	0x03D74370 STR S0, [X31 + 0xC]
	0x03D74374 CBZ X2, 0x3D743A8
	0x03D74378 LDR W8, [X2 + 0x58]
	0x03D7437C LDR V0, [X2 + 0x54]
	0x03D74380 CBZ W8, 0x3D74394
	0x03D74384 MOVZ W8, 0x42C80000
	0x03D74388 FMUL S0, S1, S0
	0x03D7438C FMOV S1, W8
	0x03D74390 FDIV S0, S0, S1
	0x03D74394 ADD X0, X31, 0xC
	0x03D74398 MOV X1, X31
	0x03D7439C BL 0x338FCB8
	0x03D743A0 LDR X30, [X31], #0x10
	0x03D743A4 RET
	0x03D743A8 BL 0x1C16F20
	0x03D743AC STR X30, [X31 - 0x10]!
	0x03D743B0 CBZ X1, 0x3D7440C
	0x03D743B4 LDR V1, [X0 + 0x50]
	0x03D743B8 LDR W8, [X1 + 0x58]
	0x03D743BC LDR V0, [X1 + 0x54]
	0x03D743C0 CBZ W8, 0x3D743D4
	0x03D743C4 MOVZ W8, 0x42C80000
	0x03D743C8 FMUL S0, S1, S0
	0x03D743CC FMOV S2, W8
	0x03D743D0 FDIV S0, S0, S2
	0x03D743D4 STR S0, [X31 + 0xC]
	0x03D743D8 CBZ X2, 0x3D7440C
	0x03D743DC LDR W8, [X2 + 0x58]
	0x03D743E0 LDR V0, [X2 + 0x54]
	0x03D743E4 CBZ W8, 0x3D743F8
	0x03D743E8 MOVZ W8, 0x42C80000
	0x03D743EC FMUL S0, S1, S0
	0x03D743F0 FMOV S1, W8
	0x03D743F4 FDIV S0, S0, S1
	0x03D743F8 ADD X0, X31, 0xC
	0x03D743FC MOV X1, X31
	0x03D74400 BL 0x338FCB8
	0x03D74404 LDR X30, [X31], #0x10
	0x03D74408 RET
	0x03D7440C BL 0x1C16F20
	0x03D74410 STR X30, [X31 - 0x10]!
	0x03D74414 CBZ X1, 0x3D74470
	0x03D74418 LDR V1, [X0 + 0x50]
	0x03D7441C LDR W8, [X1 + 0x58]
	0x03D74420 LDR V0, [X1 + 0x54]
	0x03D74424 CBZ W8, 0x3D74438
	0x03D74428 MOVZ W8, 0x42C80000
	0x03D7442C FMUL S0, S1, S0
	0x03D74430 FMOV S2, W8
	0x03D74434 FDIV S0, S0, S2
	0x03D74438 STR S0, [X31 + 0xC]
	0x03D7443C CBZ X2, 0x3D74470
	0x03D74440 LDR W8, [X2 + 0x58]
	0x03D74444 LDR V0, [X2 + 0x54]
	0x03D74448 CBZ W8, 0x3D7445C
	0x03D7444C MOVZ W8, 0x42C80000
	0x03D74450 FMUL S0, S1, S0
	0x03D74454 FMOV S1, W8
	0x03D74458 FDIV S0, S0, S1
	0x03D7445C ADD X0, X31, 0xC

ISIL:
	001 Move [X31-96], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x674000
	014 Move W8, [X21+3379]
	015 Move W22, W2
	016 Move V8, V0
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0x3F3000
	024 Move X0, [X0+3440]
	025 Call 0x1C17CF4
	026 Move X0, 0x3F3000
	027 Move X0, [X0+3600]
	028 Call 0x1C17CF4
	029 Move X0, 0x380000
	030 Move X0, [X0+1448]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+3379], W8
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 Compare X19, 0
	036 JumpIfEqual {108}
	037 Move W8, [X19+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X24, 0x3F3000
	040 Move X25, 0x380000
	041 Move X24, [X24+3600]
	042 Move X25, [X25+1448]
	043 Move W21, W31
	044 And W22, W22, 1
	045 Move W26, 0x42C80000
	046 Move X2, [X24]
	047 Move X0, X19
	048 Move W1, W21
	049 Call List`1<Object>.get_Item, X0, X1
	050 Move X23, X0
	051 Move X0, X20
	052 Move X1, X23
	053 Call ColumnLayout.GetDesiredWidth, X0, X1
	054 Compare X23, 0
	055 JumpIfEqual {108}
	056 Move W8, [X23+88]
	057 Move V10, [X23+84]
	058 Compare W8, 0
	059 JumpIfEqual {64}
	060 Move V1, [X20+80]
	061 Move S2, W26
	062 Multiply S1, S1, S10
	063 NotImplemented "Instruction FDIV not yet implemented."
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 Move S9, W31
	066 Move X0, X20
	067 Move X1, X23
	068 Call ColumnLayout.GetDesiredWidth, X0, X1
	069 Move X0, [X25]
	070 Move V9, V0
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 NotImplemented "Instruction FABD not yet implemented."
	076 Move V0, V8
	077 Move X0, X31
	078 Call Math.Min, V0, V1
	079 Move V9, V0
	080 NotImplemented "Instruction FCMP not yet implemented."
	081 Move X0, X20
	082 Move X1, X23
	083 Call ColumnLayout.GetDesiredWidth, X0, X1
	084 Add S0, S9, S0
	085 Move X0, X20
	086 Move X1, X23
	087 Move W2, W22
	088 Call ColumnLayout.ResizeColumn, X0, X1, V0, X2
	089 Subtract S8, S8, S9
	090 NotImplemented "Instruction FCMP not yet implemented."
	091 Move W8, [X19+24]
	092 Add W21, W21, 1
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move V0, V8
	095 Move X20, [X31+80]
	096 Move X19, [X31+88]
	097 Move X22, [X31+64]
	098 Move X21, [X31+72]
	099 Move X24, [X31+48]
	100 Move X23, [X31+56]
	101 Move X26, [X31+32]
	102 Move X25, [X31+40]
	103 Move X30, [X31+24]
	104 Move D9, [X31+8]
	105 Move D8, [X31+16]
	106 Move V10, [X31+96]
	107 Return V0
	108 Call 0x1C17F20

Method: System.Void ResizeToFit(System.Single width)

Disassembly:
	0x03D74740 ADRP X0, 0x3F2000
	0x03D74744 LDR X0, [X0 + 0xED0]
	0x03D74748 BL 0x1C16CF4
	0x03D7474C ADRP X0, 0x3F2000
	0x03D74750 LDR X0, [X0 + 0xED8]
	0x03D74754 BL 0x1C16CF4
	0x03D74758 ADRP X0, 0x3F2000
	0x03D7475C LDR X0, [X0 + 0xEE0]
	0x03D74760 BL 0x1C16CF4
	0x03D74764 MOVZ W8, 0x1
	0x03D74768 STRB W8, [X20 + 0xD5A]
	0x03D7476C LDRB W8, [X19 + 0x28]
	0x03D74770 CBZ W8, 0x3D748D8
	0x03D74774 MOV X0, X19
	0x03D74778 BL 0x3D7466C
	0x03D7477C LDR X20, [X19 + 0x20]
	0x03D74780 CBNZ X20, 0x3D74820
	0x03D74784 LDR X20, [X19 + 0x10]
	0x03D74788 CBZ X20, 0x3D748EC
	0x03D7478C ADRP X10, 0x3F2000
	0x03D74790 LDR X8, [X20]
	0x03D74794 LDR X10, [X10 + 0xDA8]
	0x03D74798 LDRH W9, [X8 + 0x12E]
	0x03D7479C LDR X1, [X10]
	0x03D747A0 CBZ X9, 0x3D747C4
	0x03D747A4 LDR X10, [X8 + 0xB0]
	0x03D747A8 ADD X10, X10, 0x8
	0x03D747AC LDUR X11, [X10 - 0x8]
	0x03D747B0 CMP X11, X1
	0x03D747B4 B.EQ 0x3D747D4
	0x03D747B8 SUBS X9, X9, 0x1
	0x03D747BC ADD X10, X10, 0x10
	0x03D747C0 B.NE 0x3D747AC
	0x03D747C4 MOV X0, X20
	0x03D747C8 MOV W2, W31
	0x03D747CC BL 0x1C5C788
	0x03D747D0 B 0x3D747E0
	0x03D747D4 LDRSW X9, [X10]
	0x03D747D8 ADD X8, X8, X9, 0x4, LSL
	0x03D747DC ADD X0, X8, 0x138
	0x03D747E0 LDP X8, X1, [X0]
	0x03D747E4 MOV X0, X20
	0x03D747E8 BLR X8
	0x03D747EC ADRP X8, 0x3F2000
	0x03D747F0 LDR X8, [X8 + 0xD68]
	0x03D747F4 MOV W21, W0
	0x03D747F8 LDR X8, [X8]
	0x03D747FC MOV X0, X8
	0x03D74800 BL 0x1C16F10
	0x03D74804 ADRP X8, 0x3F2000
	0x03D74808 LDR X8, [X8 + 0xEC8]
	0x03D7480C MOV W1, W21
	0x03D74810 MOV X20, X0
	0x03D74814 LDR X2, [X8]
	0x03D74818 BL 0x301B830
	0x03D7481C STR X20, [X19 + 0x20]
	0x03D74820 ADRP X24, 0x3F2000
	0x03D74824 LDR X24, [X24 + 0xEE0]
	0x03D74828 LDR X21, [X19 + 0x18]
	0x03D7482C LDR X0, [X24]
	0x03D74830 LDR W8, [X0 + 0xE0]
	0x03D74834 CBNZ W8, 0x3D74840
	0x03D74838 BL 0x1C16DFC
	0x03D7483C LDR X0, [X24]
	0x03D74840 LDR X8, [X0 + 0xB8]
	0x03D74844 LDR X22, [X8 + 0x8]
	0x03D74848 CBNZ X22, 0x3D7489C
	0x03D7484C LDR W8, [X0 + 0xE0]
	0x03D74850 CBNZ W8, 0x3D7485C
	0x03D74854 BL 0x1C16DFC
	0x03D74858 LDR X0, [X24]
	0x03D7485C ADRP X9, 0x3F2000
	0x03D74860 LDR X8, [X0 + 0xB8]
	0x03D74864 LDR X9, [X9 + 0xED0]
	0x03D74868 LDR X23, [X8]
	0x03D7486C LDR X0, [X9]
	0x03D74870 BL 0x1C16F10
	0x03D74874 ADRP X8, 0x3F2000
	0x03D74878 LDR X8, [X8 + 0xED8]
	0x03D7487C MOV X1, X23
	0x03D74880 MOV X3, X31
	0x03D74884 MOV X22, X0
	0x03D74888 LDR X2, [X8]
	0x03D7488C BL 0x24AD1FC
	0x03D74890 LDR X8, [X24]
	0x03D74894 LDR X8, [X8 + 0xB8]
	0x03D74898 STR X22, [X8 + 0x8]
	0x03D7489C CBZ X21, 0x3D748EC
	0x03D748A0 ADRP X8, 0x3F2000
	0x03D748A4 LDR X8, [X8 + 0xEC0]
	0x03D748A8 MOV X0, X21
	0x03D748AC MOV X1, X22
	0x03D748B0 LDR X2, [X8]
	0x03D748B4 BL 0x301C698
	0x03D748B8 CBZ X20, 0x3D748EC
	0x03D748BC ADRP X8, 0x3F2000
	0x03D748C0 LDR X8, [X8 + 0xDE0]
	0x03D748C4 MOV X1, X0
	0x03D748C8 MOV X0, X20
	0x03D748CC LDR X2, [X8]
	0x03D748D0 BL 0x301C194
	0x03D748D4 STRB W31, [X19 + 0x28]
	0x03D748D8 LDP X20, X19, [X31 + 0x30]
	0x03D748DC LDP X22, X21, [X31 + 0x20]
	0x03D748E0 LDP X24, X23, [X31 + 0x10]
	0x03D748E4 LDR X30, [X31], #0x40
	0x03D748E8 RET
	0x03D748EC BL 0x1C16F20
	0x03D748F0 STR X30, [X31 - 0x40]!
	0x03D748F4 STP X24, X23, [X31 + 0x10]
	0x03D748F8 STP X22, X21, [X31 + 0x20]
	0x03D748FC STP X20, X19, [X31 + 0x30]
	0x03D74900 ADRP X21, 0x673000
	0x03D74904 LDRB W8, [X21 + 0xD3E]
	0x03D74908 MOV X19, X1
	0x03D7490C MOV X20, X0
	0x03D74910 TBNZ X8, 0x0, 0x3D74928
	0x03D74914 ADRP X0, 0x3F2000
	0x03D74918 LDR X0, [X0 + 0xEE8]
	0x03D7491C BL 0x1C16CF4
	0x03D74920 MOVZ W8, 0x1
	0x03D74924 STRB W8, [X21 + 0xD3E]
	0x03D74928 ADRP X24, 0x3F2000
	0x03D7492C LDR X21, [X20 + 0x40]!
	0x03D74930 LDR X24, [X24 + 0xEE8]
	0x03D74934 MOV X0, X21
	0x03D74938 MOV X1, X19
	0x03D7493C MOV X2, X31
	0x03D74940 BL 0x33C0DE4
	0x03D74944 CBZ X0, 0x3D74964
	0x03D74948 LDR X23, [X24]
	0x03D7494C MOV X22, X0
	0x03D74950 MOV X1, X23
	0x03D74954 BL 0x1C16E00
	0x03D74958 MOV X1, X0
	0x03D7495C CBNZ X0, 0x3D74968
	0x03D74960 B 0x3D74994
	0x03D74964 MOV X1, X31
	0x03D74968 MOV X0, X20
	0x03D7496C MOV X2, X21
	0x03D74970 BL 0x1C24138
	0x03D74974 CMP X21, X0
	0x03D74978 MOV X21, X0
	0x03D7497C B.NE 0x3D74934
	0x03D74980 LDP X20, X19, [X31 + 0x30]
	0x03D74984 LDP X22, X21, [X31 + 0x20]
	0x03D74988 LDP X24, X23, [X31 + 0x10]
	0x03D7498C LDR X30, [X31], #0x40
	0x03D74990 RET
	0x03D74994 MOV X0, X22
	0x03D74998 MOV X1, X23
	0x03D7499C BL 0x1C171E0
	0x03D749A0 STR X30, [X31 - 0x40]!
	0x03D749A4 STP X24, X23, [X31 + 0x10]
	0x03D749A8 STP X22, X21, [X31 + 0x20]
	0x03D749AC STP X20, X19, [X31 + 0x30]
	0x03D749B0 ADRP X21, 0x673000
	0x03D749B4 LDRB W8, [X21 + 0xD3F]
	0x03D749B8 MOV X19, X1
	0x03D749BC MOV X20, X0
	0x03D749C0 TBNZ X8, 0x0, 0x3D749D8
	0x03D749C4 ADRP X0, 0x3F2000
	0x03D749C8 LDR X0, [X0 + 0xEE8]
	0x03D749CC BL 0x1C16CF4
	0x03D749D0 MOVZ W8, 0x1
	0x03D749D4 STRB W8, [X21 + 0xD3F]
	0x03D749D8 ADRP X24, 0x3F2000
	0x03D749DC LDR X21, [X20 + 0x40]!
	0x03D749E0 LDR X24, [X24 + 0xEE8]
	0x03D749E4 MOV X0, X21
	0x03D749E8 MOV X1, X19
	0x03D749EC MOV X2, X31
	0x03D749F0 BL 0x33C0FDC
	0x03D749F4 CBZ X0, 0x3D74A14
	0x03D749F8 LDR X23, [X24]
	0x03D749FC MOV X22, X0
	0x03D74A00 MOV X1, X23
	0x03D74A04 BL 0x1C16E00
	0x03D74A08 MOV X1, X0
	0x03D74A0C CBNZ X0, 0x3D74A18
	0x03D74A10 B 0x3D74A44
	0x03D74A14 MOV X1, X31
	0x03D74A18 MOV X0, X20
	0x03D74A1C MOV X2, X21
	0x03D74A20 BL 0x1C24138
	0x03D74A24 CMP X21, X0
	0x03D74A28 MOV X21, X0
	0x03D74A2C B.NE 0x3D749E4
	0x03D74A30 LDP X20, X19, [X31 + 0x30]
	0x03D74A34 LDP X22, X21, [X31 + 0x20]
	0x03D74A38 LDP X24, X23, [X31 + 0x10]
	0x03D74A3C LDR X30, [X31], #0x40
	0x03D74A40 RET
	0x03D74A44 MOV X0, X22
	0x03D74A48 MOV X1, X23
	0x03D74A4C BL 0x1C171E0
	0x03D74A50 LDR W0, [X0 + 0x2C]
	0x03D74A54 RET
	0x03D74A58 LDR W8, [X0 + 0x2C]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], D8
	003 Move [X31+88], X30
	004 Move [X31+96], X22
	005 Move [X31+104], X21
	006 Move [X31+112], X20
	007 Move [X31+120], X19
	008 Move X21, 0x674000
	009 Move X20, 0x3F3000
	010 Move W8, [X21+3380]
	011 Move X20, [X20+3520]
	012 Move V8, V0
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x3F3000
	019 Move X0, [X0+3512]
	020 Call 0x1C17CF4
	021 Move X0, 0x3F3000
	022 Move X0, [X0+3520]
	023 Call 0x1C17CF4
	024 Move X0, 0x3F3000
	025 Move X0, [X0+3552]
	026 Call 0x1C17CF4
	027 Move X0, 0x3F3000
	028 Move X0, [X0+3576]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3380], W8
	032 Move X21, 0x3F3000
	033 Move X21, [X21+3512]
	034 Move X0, X19
	035 Move [X31+56], X31
	036 Move [X31+64], X31
	037 Move [X31+40], X31
	038 Move [X31+48], X31
	039 Move [X31+24], X31
	040 Move [X31+32], X31
	041 Move [X31+8], X31
	042 Move [X31+16], X31
	043 Move [X31], X31
	044 Call ColumnLayout.get_columnsWidth, X0
	045 Move S1, [X19+64]
	046 Move S2, [X19+68]
	047 Move X0, [X20]
	048 NotImplemented "Instruction FCMP not yet implemented."
	049 NotImplemented "Instruction FCSEL not yet implemented."
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 NotImplemented "Instruction FCSEL not yet implemented."
	052 Subtract S0, S0, S1
	053 Move [X31+76], S0
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X1, [X21]
	059 Move X22, 0x3F3000
	060 Move X22, [X22+3576]
	061 Add X0, X31, 48
	062 Call CollectionPool`2<Object, Object>.Get, X0
	063 Move X8, X0
	064 Move X0, [X20]
	065 Move [X31+56], X8
	066 Move [X31+64], X1
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X1, [X21]
	072 Add X0, X31, 24
	073 Call CollectionPool`2<Object, Object>.Get, X0
	074 Move X8, [X20]
	075 Move [X31+32], X0
	076 Move [X31+40], X1
	077 Move W9, [X8+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {82}
	080 Move X0, X8
	081 Call 0x1C17DFC
	082 Move X1, [X21]
	083 Add X0, X31, 0
	084 Call CollectionPool`2<Object, Object>.Get, X0
	085 Move X8, X0
	086 Move X0, [X31+48]
	087 Move [X31+8], X8
	088 Move [X31+16], X1
	089 Compare X0, 0
	090 JumpIfEqual {143}
	091 Move X20, 0x3F3000
	092 Move X20, [X20+3552]
	093 Move X1, [X19+16]
	094 Move X2, [X20]
	095 Call List`1<Object>.AddRange, X0, X1
	096 Move X0, [X31+24]
	097 Compare X0, 0
	098 JumpIfEqual {144}
	099 Move X1, [X19+24]
	100 Move X2, [X20]
	101 Call List`1<Object>.AddRange, X0, X1
	102 Move X0, [X31]
	103 Compare X0, 0
	104 JumpIfEqual {147}
	105 Move X1, [X19+32]
	106 Move X2, [X20]
	107 Call List`1<Object>.AddRange, X0, X1
	108 Move X1, [X31+48]
	109 Move X2, [X31+24]
	110 Move X3, [X31]
	111 Add X4, X31, 76
	112 Move W5, 1
	113 Move X0, X19
	114 Move W6, W31
	115 Call ColumnLayout.StretchResizeColumns, X0, X1, X2, X3, X4, X5, X6
	116 Move W8, [X19+72]
	117 Compare W8, 0
	118 JumpIfEqual {121}
	119 Move X0, X19
	120 Call ColumnLayout.UpdateCache, X0
	121 Move X19, X31
	122 Move X1, [X22]
	123 Add X0, X31, 8
	124 Call 0x24A7D20, X0
	125 Compare X19, 0
	126 JumpIfNotEqual {148}
	127 Move X1, [X22]
	128 Add X0, X31, 32
	129 Call 0x24A7D20, X0
	130 Compare X19, 0
	131 JumpIfNotEqual {145}
	132 Move X1, [X22]
	133 Add X0, X31, 56
	134 Call 0x24A7D20, X0
	135 Move X20, [X31+112]
	136 Move X19, [X31+120]
	137 Move X22, [X31+96]
	138 Move X21, [X31+104]
	139 Move X30, [X31+88]
	140 Move V8, [X31+80]
	141 Add X31, X31, 128
	142 Return 
	143 Call 0x1C17F20
	144 Call 0x1C17F20
	145 Move X0, X19
	146 Call 0x1C17F18
	147 Call 0x1C17F20
	148 Move X0, X19
	149 Call 0x1C17F18
	150 Move X20, X1
	151 Move X21, X0
	152 Move X20, X1
	153 Move X21, X0
	154 Move X20, X1
	155 Move X21, X0
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X0, X21
	158 Call 0x3EB2AD0
	159 Move X19, [X0]
	160 Call 0x3EB2AE0
	161 Move X19, X31
	162 Move X1, [X22]
	163 Add X0, X31, 8
	164 Call 0x24A7D20, X0
	165 Compare X19, 0
	166 JumpIfNotEqual {191}
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X0, X21
	169 Call 0x3EB2AD0
	170 Move X19, [X0]
	171 Call 0x3EB2AE0
	172 Move X19, X31
	173 Move X1, [X22]
	174 Add X0, X31, 32
	175 Call 0x24A7D20, X0
	176 Compare X19, 0
	177 JumpIfNotEqual {193}
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, X21
	180 Call 0x3EB2AD0
	181 Move X20, [X0]
	182 Call 0x3EB2AE0
	183 Move X1, [X22]
	184 Add X0, X31, 56
	185 Call 0x24A7D20, X0
	186 Compare X20, 0
	187 JumpIfEqual {135}
	188 Move X0, X20
	189 Call 0x1C17F18
	190 Move X20, X31
	191 Move X0, X19
	192 Call 0x1C17F18
	193 Move X0, X19
	194 Call 0x1C17F18
	195 Move X20, X1
	196 Move X21, X0
	197 Move X20, X1
	198 Move X21, X0
	199 Move X21, X0
	200 Move X1, [X22]
	201 Add X0, X31, 56
	202 Call 0x24A7D20, X0
	203 Compare X20, 0
	204 JumpIfNotEqual {207}
	205 Move X0, X21
	206 Call 0x1D2D690
	207 Move X0, X20
	208 Call 0x1C17F18
	209 Call 0x1991590

Method: System.Void ResizeColumn(UnityEngine.UIElements.Column column, System.Single width, System.Boolean setDesiredWidthOnly = False)

Disassembly:
	0x03D74468 LDR X30, [X31], #0x10
	0x03D7446C RET
	0x03D74470 BL 0x1C16F20
	0x03D74474 STR X30, [X31 - 0x10]!
	0x03D74478 CBZ X2, 0x3D744D4
	0x03D7447C LDR V1, [X0 + 0x50]
	0x03D74480 LDR W8, [X2 + 0x50]
	0x03D74484 LDR V0, [X2 + 0x4C]
	0x03D74488 CBZ W8, 0x3D7449C
	0x03D7448C MOVZ W8, 0x42C80000
	0x03D74490 FMUL S0, S1, S0
	0x03D74494 FMOV S2, W8
	0x03D74498 FDIV S0, S0, S2
	0x03D7449C STR S0, [X31 + 0xC]
	0x03D744A0 CBZ X1, 0x3D744D4
	0x03D744A4 LDR W8, [X1 + 0x50]
	0x03D744A8 LDR V0, [X1 + 0x4C]
	0x03D744AC CBZ W8, 0x3D744C0
	0x03D744B0 MOVZ W8, 0x42C80000
	0x03D744B4 FMUL S0, S1, S0
	0x03D744B8 FMOV S1, W8
	0x03D744BC FDIV S0, S0, S1
	0x03D744C0 ADD X0, X31, 0xC
	0x03D744C4 MOV X1, X31
	0x03D744C8 BL 0x338FCB8
	0x03D744CC LDR X30, [X31], #0x10
	0x03D744D0 RET
	0x03D744D4 BL 0x1C16F20
	0x03D744D8 STR D8, [X31 - 0x20]!
	0x03D744DC STP X30, X19, [X31 + 0x10]
	0x03D744E0 MOV X19, X0
	0x03D744E4 LDR X0, [X0 + 0x18]
	0x03D744E8 CBZ X0, 0x3D74508
	0x03D744EC LDR V8, [X19 + 0x10]
	0x03D744F0 BL 0x3D72634
	0x03D744F4 FADD S0, S8, S0
	0x03D744F8 STR S0, [X19 + 0x10]
	0x03D744FC LDP X30, X19, [X31 + 0x10]
	0x03D74500 LDR V8, [X31], #0x20
	0x03D74504 RET
	0x03D74508 BL 0x1C16F20
	0x03D7450C STR D8, [X31 - 0x20]!
	0x03D74510 STP X30, X19, [X31 + 0x10]
	0x03D74514 MOV X19, X0
	0x03D74518 LDR X0, [X0 + 0x18]
	0x03D7451C CBZ X0, 0x3D7453C
	0x03D74520 LDR V8, [X19 + 0x10]
	0x03D74524 BL 0x3D72634
	0x03D74528 FADD S0, S8, S0
	0x03D7452C STR S0, [X19 + 0x10]
	0x03D74530 LDP X30, X19, [X31 + 0x10]
	0x03D74534 LDR V8, [X31], #0x20
	0x03D74538 RET
	0x03D7453C BL 0x1C16F20
	0x03D74540 LDR X0, [X0 + 0x38]
	0x03D74544 RET
	0x03D74548 STR X30, [X31 - 0x20]!
	0x03D7454C STP X20, X19, [X31 + 0x10]
	0x03D74550 MOV X19, X0
	0x03D74554 LDR X0, [X0 + 0x38]
	0x03D74558 MOV X2, X31
	0x03D7455C MOV X20, X1
	0x03D74560 BL 0x321BA08
	0x03D74564 TBNZ X0, 0x0, 0x3D74590
	0x03D74568 LDR X8, [X19 + 0x40]
	0x03D7456C STR X20, [X19 + 0x38]
	0x03D74570 CBZ X8, 0x3D74590
	0x03D74574 LDR X3, [X8 + 0x18]
	0x03D74578 LDR X0, [X8 + 0x40]
	0x03D7457C LDR X2, [X8 + 0x28]
	0x03D74580 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x674000
	009 Move W8, [X22+3381]
	010 Move W20, W2
	011 Move V8, V0
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x3F3000
	019 Move X0, [X0+3664]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3381], W8
	023 Move [X31+8], X31
	024 Move V0, [X21+80]
	025 Move W8, 0x42C80000
	026 Move S1, W8
	027 Add X0, X31, 8
	028 NotImplemented "Instruction FDIV not yet implemented."
	029 Multiply S0, S0, S1
	030 Move W1, 1
	031 Move X2, X31
	032 Call Length..ctor, X0, V0, X1
	033 Move W8, [X21+84]
	034 Compare W8, 0
	035 JumpIfEqual {53}
	036 Move X0, [X21+128]
	037 Compare X0, 0
	038 JumpIfEqual {81}
	039 Move X8, 0x3F3000
	040 Move X8, [X8+3664]
	041 Move X1, X19
	042 Move V0, V8
	043 Move X2, [X8]
	044 Call Dictionary`2<Object, Single>.set_Item, X0, X1, V0
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X30, [X31+24]
	050 Move V8, [X31+16]
	051 Add X31, X31, 64
	052 Return 
	053 Move TEMP, X20
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {59}
	057 Compare X19, 0
	058 JumpIfNotEqual {70}
	059 Compare X19, 0
	060 JumpIfEqual {81}
	061 Move W8, [X19+72]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X1, [X31+8]
	064 Move V0, V8
	065 Move X0, X31
	066 Call Length.op_Implicit, V0
	067 Move X1, X0
	068 Move X0, X19
	069 Call Column.set_width, X0, X1
	070 Move V0, [X19+92]
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 Move X8, [X19+184]
	073 Move [X19+92], S8
	074 Compare X8, 0
	075 JumpIfEqual {45}
	076 Move X9, [X8+24]
	077 Move X0, [X8+64]
	078 Move X2, [X8+40]
	079 Move X1, X19
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Call 0x1C17F20

Method: System.Void BeginDragResize(UnityEngine.UIElements.Column column, System.Single pos, System.Boolean previewMode)

Disassembly:
	0x03D74A5C CMP W8, W1
	0x03D74A60 B.EQ 0x3D74A84
	0x03D74A64 LDR X8, [X0 + 0x40]
	0x03D74A68 STR W1, [X0 + 0x2C]
	0x03D74A6C CBZ X8, 0x3D74A84
	0x03D74A70 LDR X3, [X8 + 0x18]
	0x03D74A74 LDR X0, [X8 + 0x40]
	0x03D74A78 LDR X2, [X8 + 0x28]
	0x03D74A7C MOVZ W1, 0x1
	0x03D74A80 BR X3
	0x03D74A84 RET
	0x03D74A88 STR X30, [X31 - 0x40]!
	0x03D74A8C STP X24, X23, [X31 + 0x10]
	0x03D74A90 STP X22, X21, [X31 + 0x20]
	0x03D74A94 STP X20, X19, [X31 + 0x30]
	0x03D74A98 ADRP X21, 0x673000
	0x03D74A9C LDRB W8, [X21 + 0xD41]
	0x03D74AA0 MOV X19, X1
	0x03D74AA4 MOV X20, X0
	0x03D74AA8 TBNZ X8, 0x0, 0x3D74AC0
	0x03D74AAC ADRP X0, 0x3F2000
	0x03D74AB0 LDR X0, [X0 + 0x660]
	0x03D74AB4 BL 0x1C16CF4
	0x03D74AB8 MOVZ W8, 0x1
	0x03D74ABC STRB W8, [X21 + 0xD41]
	0x03D74AC0 ADRP X24, 0x3F2000
	0x03D74AC4 LDR X21, [X20 + 0x48]!
	0x03D74AC8 LDR X24, [X24 + 0x660]
	0x03D74ACC MOV X0, X21
	0x03D74AD0 MOV X1, X19
	0x03D74AD4 MOV X2, X31
	0x03D74AD8 BL 0x33C0FDC
	0x03D74ADC CBZ X0, 0x3D74AFC
	0x03D74AE0 LDR X23, [X24]
	0x03D74AE4 MOV X22, X0
	0x03D74AE8 MOV X1, X23
	0x03D74AEC BL 0x1C16E00
	0x03D74AF0 MOV X1, X0
	0x03D74AF4 CBNZ X0, 0x3D74B00
	0x03D74AF8 B 0x3D74B2C
	0x03D74AFC MOV X1, X31
	0x03D74B00 MOV X0, X20
	0x03D74B04 MOV X2, X21
	0x03D74B08 BL 0x1C24138
	0x03D74B0C CMP X21, X0
	0x03D74B10 MOV X21, X0
	0x03D74B14 B.NE 0x3D74ACC
	0x03D74B18 LDP X20, X19, [X31 + 0x30]
	0x03D74B1C LDP X22, X21, [X31 + 0x20]
	0x03D74B20 LDP X24, X23, [X31 + 0x10]
	0x03D74B24 LDR X30, [X31], #0x40
	0x03D74B28 RET
	0x03D74B2C MOV X0, X22
	0x03D74B30 MOV X1, X23
	0x03D74B34 BL 0x1C171E0
	0x03D74B38 STR X30, [X31 - 0x40]!
	0x03D74B3C STP X24, X23, [X31 + 0x10]
	0x03D74B40 STP X22, X21, [X31 + 0x20]
	0x03D74B44 STP X20, X19, [X31 + 0x30]
	0x03D74B48 ADRP X21, 0x673000
	0x03D74B4C LDRB W8, [X21 + 0xD43]
	0x03D74B50 MOV X19, X1
	0x03D74B54 MOV X20, X0
	0x03D74B58 TBNZ X8, 0x0, 0x3D74B70
	0x03D74B5C ADRP X0, 0x3F2000
	0x03D74B60 LDR X0, [X0 + 0x650]
	0x03D74B64 BL 0x1C16CF4
	0x03D74B68 MOVZ W8, 0x1
	0x03D74B6C STRB W8, [X21 + 0xD43]
	0x03D74B70 ADRP X24, 0x3F2000
	0x03D74B74 LDR X21, [X20 + 0x50]!
	0x03D74B78 LDR X24, [X24 + 0x650]
	0x03D74B7C MOV X0, X21
	0x03D74B80 MOV X1, X19
	0x03D74B84 MOV X2, X31
	0x03D74B88 BL 0x33C0FDC
	0x03D74B8C CBZ X0, 0x3D74BAC
	0x03D74B90 LDR X23, [X24]
	0x03D74B94 MOV X22, X0
	0x03D74B98 MOV X1, X23
	0x03D74B9C BL 0x1C16E00
	0x03D74BA0 MOV X1, X0
	0x03D74BA4 CBNZ X0, 0x3D74BB0
	0x03D74BA8 B 0x3D74BDC
	0x03D74BAC MOV X1, X31
	0x03D74BB0 MOV X0, X20
	0x03D74BB4 MOV X2, X21
	0x03D74BB8 BL 0x1C24138
	0x03D74BBC CMP X21, X0
	0x03D74BC0 MOV X21, X0
	0x03D74BC4 B.NE 0x3D74B7C
	0x03D74BC8 LDP X20, X19, [X31 + 0x30]
	0x03D74BCC LDP X22, X21, [X31 + 0x20]
	0x03D74BD0 LDP X24, X23, [X31 + 0x10]
	0x03D74BD4 LDR X30, [X31], #0x40
	0x03D74BD8 RET
	0x03D74BDC MOV X0, X22
	0x03D74BE0 MOV X1, X23
	0x03D74BE4 BL 0x1C171E0
	0x03D74BE8 STR X30, [X31 - 0x40]!
	0x03D74BEC STP X24, X23, [X31 + 0x10]
	0x03D74BF0 STP X22, X21, [X31 + 0x20]
	0x03D74BF4 STP X20, X19, [X31 + 0x30]
	0x03D74BF8 ADRP X21, 0x673000
	0x03D74BFC LDRB W8, [X21 + 0xD44]
	0x03D74C00 MOV X19, X1
	0x03D74C04 MOV X20, X0
	0x03D74C08 TBNZ X8, 0x0, 0x3D74C20
	0x03D74C0C ADRP X0, 0x3F2000
	0x03D74C10 LDR X0, [X0 + 0x658]
	0x03D74C14 BL 0x1C16CF4
	0x03D74C18 MOVZ W8, 0x1
	0x03D74C1C STRB W8, [X21 + 0xD44]
	0x03D74C20 ADRP X24, 0x3F2000
	0x03D74C24 LDR X21, [X20 + 0x58]!
	0x03D74C28 LDR X24, [X24 + 0x658]
	0x03D74C2C MOV X0, X21
	0x03D74C30 MOV X1, X19
	0x03D74C34 MOV X2, X31
	0x03D74C38 BL 0x33C0DE4
	0x03D74C3C CBZ X0, 0x3D74C5C
	0x03D74C40 LDR X23, [X24]
	0x03D74C44 MOV X22, X0
	0x03D74C48 MOV X1, X23
	0x03D74C4C BL 0x1C16E00
	0x03D74C50 MOV X1, X0
	0x03D74C54 CBNZ X0, 0x3D74C60
	0x03D74C58 B 0x3D74C8C
	0x03D74C5C MOV X1, X31
	0x03D74C60 MOV X0, X20
	0x03D74C64 MOV X2, X21
	0x03D74C68 BL 0x1C24138
	0x03D74C6C CMP X21, X0
	0x03D74C70 MOV X21, X0
	0x03D74C74 B.NE 0x3D74C2C
	0x03D74C78 LDP X20, X19, [X31 + 0x30]
	0x03D74C7C LDP X22, X21, [X31 + 0x20]
	0x03D74C80 LDP X24, X23, [X31 + 0x10]
	0x03D74C84 LDR X30, [X31], #0x40
	0x03D74C88 RET
	0x03D74C8C MOV X0, X22
	0x03D74C90 MOV X1, X23
	0x03D74C94 BL 0x1C171E0
	0x03D74C98 STR X30, [X31 - 0x40]!
	0x03D74C9C STP X24, X23, [X31 + 0x10]
	0x03D74CA0 STP X22, X21, [X31 + 0x20]
	0x03D74CA4 STP X20, X19, [X31 + 0x30]
	0x03D74CA8 ADRP X21, 0x673000
	0x03D74CAC LDRB W8, [X21 + 0xD45]
	0x03D74CB0 MOV X19, X1
	0x03D74CB4 MOV X20, X0
	0x03D74CB8 TBNZ X8, 0x0, 0x3D74CD0
	0x03D74CBC ADRP X0, 0x3F2000
	0x03D74CC0 LDR X0, [X0 + 0x658]
	0x03D74CC4 BL 0x1C16CF4
	0x03D74CC8 MOVZ W8, 0x1
	0x03D74CCC STRB W8, [X21 + 0xD45]
	0x03D74CD0 ADRP X24, 0x3F2000
	0x03D74CD4 LDR X21, [X20 + 0x58]!
	0x03D74CD8 LDR X24, [X24 + 0x658]
	0x03D74CDC MOV X0, X21
	0x03D74CE0 MOV X1, X19
	0x03D74CE4 MOV X2, X31
	0x03D74CE8 BL 0x33C0FDC
	0x03D74CEC CBZ X0, 0x3D74D0C
	0x03D74CF0 LDR X23, [X24]
	0x03D74CF4 MOV X22, X0
	0x03D74CF8 MOV X1, X23
	0x03D74CFC BL 0x1C16E00
	0x03D74D00 MOV X1, X0
	0x03D74D04 CBNZ X0, 0x3D74D10
	0x03D74D08 B 0x3D74D3C
	0x03D74D0C MOV X1, X31
	0x03D74D10 MOV X0, X20
	0x03D74D14 MOV X2, X21
	0x03D74D18 BL 0x1C24138
	0x03D74D1C CMP X21, X0
	0x03D74D20 MOV X21, X0
	0x03D74D24 B.NE 0x3D74CDC
	0x03D74D28 LDP X20, X19, [X31 + 0x30]
	0x03D74D2C LDP X22, X21, [X31 + 0x20]
	0x03D74D30 LDP X24, X23, [X31 + 0x10]
	0x03D74D34 LDR X30, [X31], #0x40
	0x03D74D38 RET
	0x03D74D3C MOV X0, X22
	0x03D74D40 MOV X1, X23
	0x03D74D44 BL 0x1C171E0
	0x03D74D48 STR X30, [X31 - 0x40]!
	0x03D74D4C STP X24, X23, [X31 + 0x10]
	0x03D74D50 STP X22, X21, [X31 + 0x20]
	0x03D74D54 STP X20, X19, [X31 + 0x30]
	0x03D74D58 ADRP X21, 0x673000
	0x03D74D5C LDRB W8, [X21 + 0xD46]
	0x03D74D60 MOV X19, X1
	0x03D74D64 MOV X20, X0
	0x03D74D68 TBNZ X8, 0x0, 0x3D74D80
	0x03D74D6C ADRP X0, 0x3F2000
	0x03D74D70 LDR X0, [X0 + 0x650]
	0x03D74D74 BL 0x1C16CF4
	0x03D74D78 MOVZ W8, 0x1
	0x03D74D7C STRB W8, [X21 + 0xD46]
	0x03D74D80 ADRP X24, 0x3F2000

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x674000
	012 Move W8, [X22+3382]
	013 Move W21, W2
	014 Move V8, V0
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0x3F3000
	022 Move X0, [X0+3672]
	023 Call 0x1C17CF4
	024 Move X0, 0x3F3000
	025 Move X0, [X0+3664]
	026 Call 0x1C17CF4
	027 Move X0, 0x3F3000
	028 Move X0, [X0+3680]
	029 Call 0x1C17CF4
	030 Move X0, 0x3F3000
	031 Move X0, [X0+1888]
	032 Call 0x1C17CF4
	033 Move X0, 0x3F3000
	034 Move X0, [X0+3688]
	035 Call 0x1C17CF4
	036 Move X0, 0x3F3000
	037 Move X0, [X0+3560]
	038 Call 0x1C17CF4
	039 Move X0, 0x3F3000
	040 Move X0, [X0+3504]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+3382], W8
	044 Move W8, [X19+72]
	045 Compare W8, 0
	046 JumpIfNotEqual {214}
	047 And W8, W21, 1
	048 Move W9, 1
	049 Move [X19+84], W8
	050 Move [X19+85], W9
	051 Compare X20, 0
	052 JumpIfEqual {202}
	053 Move X0, X20
	054 Call Column.get_visibleIndex, X0
	055 Move [X19+88], S8
	056 Move [X19+96], S8
	057 Move V0, [X20+92]
	058 Move X8, [X19+104]
	059 Move [X19+96], S0
	060 Compare X8, 0
	061 JumpIfEqual {202}
	062 Move W2, [X8+24]
	063 Move W9, [X8+28]
	064 Move W21, W0
	065 Add W9, W9, 1
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X8+24], W31
	068 Move [X8+28], W9
	069 Move X0, [X8+16]
	070 Move W1, W31
	071 Move X3, X31
	072 Call Array.Clear, X0, X1, X2
	073 Move X8, [X19+120]
	074 Compare X8, 0
	075 JumpIfEqual {202}
	076 Move W2, [X8+24]
	077 Move W9, [X8+28]
	078 Add W9, W9, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move [X8+24], W31
	081 Move [X8+28], W9
	082 Move X0, [X8+16]
	083 Move W1, W31
	084 Move X3, X31
	085 Call Array.Clear, X0, X1, X2
	086 Move X8, [X19+112]
	087 Compare X8, 0
	088 JumpIfEqual {202}
	089 Move W2, [X8+24]
	090 Move W9, [X8+28]
	091 Add W9, W9, 1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move [X8+24], W31
	094 Move [X8+28], W9
	095 Move X0, [X8+16]
	096 Move W1, W31
	097 Move X3, X31
	098 Call Array.Clear, X0, X1, X2
	099 Move X23, 0x3F3000
	100 Move W8, [X19+84]
	101 Move X23, [X23+3664]
	102 Compare W8, 0
	103 JumpIfEqual {124}
	104 Move X22, [X19+128]
	105 Compare X22, 0
	106 JumpIfNotEqual {119}
	107 Move X8, 0x3F3000
	108 Move X8, [X8+3680]
	109 Move X0, [X8]
	110 Call 0x1C17F10
	111 Move X8, 0x3F3000
	112 Move X8, [X8+3672]
	113 Move X22, X0
	114 Move X1, [X8]
	115 Call Dictionary`2<Object, Single>..ctor, X0
	116 Move [X19+128], X22
	117 Compare X22, 0
	118 JumpIfEqual {202}
	119 Move V0, [X20+92]
	120 Move X2, [X23]
	121 Move X0, X22
	122 Move X1, X20
	123 Call Dictionary`2<Object, Single>.set_Item, X0, X1, V0
	124 Move X22, [X19+48]
	125 Compare X22, 0
	126 JumpIfEqual {202}
	127 Move X24, 0x3F3000
	128 Move X25, 0x3F3000
	129 Move X26, 0x3F3000
	130 Move X24, [X24+1888]
	131 Move X25, [X25+3688]
	132 Move X26, [X26+3560]
	133 Add W20, W21, 1
	134 Move X0, X22
	135 Call Columns.UpdateVisibleColumns, X0
	136 Move X0, [X22+32]
	137 Move X1, [X24]
	138 Call Enumerable.Count, X0
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X21, [X19+48]
	141 Compare X21, 0
	142 JumpIfEqual {202}
	143 Move X0, X21
	144 Call Columns.UpdateVisibleColumns, X0
	145 Move X0, [X21+32]
	146 Move X2, [X25]
	147 Move W1, W20
	148 Call Enumerable.ElementAt, X0, X1
	149 Compare X0, 0
	150 JumpIfEqual {202}
	151 Move W8, [X0+64]
	152 Move X21, X0
	153 Compare W8, 0
	154 JumpIfEqual {198}
	155 Move W8, [X21+96]
	156 Compare W8, 0
	157 JumpIfEqual {161}
	158 Move X0, [X19+104]
	159 Compare X0, 0
	160 JumpIfNotEqual {169}
	161 Move W8, [X21+72]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X0, [X19+112]
	164 Compare X0, 0
	165 JumpIfNotEqual {169}
	166 Move X0, [X19+120]
	167 Compare X0, 0
	168 JumpIfEqual {202}
	169 Move W10, [X0+28]
	170 Move X8, [X0+16]
	171 Move X9, [X26]
	172 Add W10, W10, 1
	173 Move [X0+28], W10
	174 Compare X8, 0
	175 JumpIfEqual {202}
	176 NotImplemented "Instruction LDRSW not yet implemented."
	177 Move W11, [X8+24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Add W9, W10, 1
	180 Add X8, X8, X10
	181 Move [X0+24], W9
	182 Move [X8+32], X21
	183 Move X8, [X9+32]
	184 Move X1, X21
	185 Move X8, [X8+192]
	186 Move X2, [X8+112]
	187 Call List`1<Object>.AddWithResize, X0, X1
	188 Move W8, [X19+84]
	189 Compare W8, 0
	190 JumpIfEqual {198}
	191 Move X0, [X19+128]
	192 Compare X0, 0
	193 JumpIfEqual {202}
	194 Move V0, [X21+92]
	195 Move X2, [X23]
	196 Move X1, X21
	197 Call Dictionary`2<Object, Single>.set_Item, X0, X1, V0
	198 Move X22, [X19+48]
	199 Add W20, W20, 1
	200 Compare X22, 0
	201 JumpIfNotEqual {134}
	202 Call 0x1C17F20
	203 Move X20, [X31+64]
	204 Move X19, [X31+72]
	205 Move X22, [X31+48]
	206 Move X21, [X31+56]
	207 Move X24, [X31+32]
	208 Move X23, [X31+40]
	209 Move X26, [X31+16]
	210 Move X25, [X31+24]
	211 Move X30, [X31+8]
	212 Move V8, [X31+80]
	213 Return 
	214 Move X0, 0x380000
	215 Move X0, [X0+2000]
	216 Call 0x1C17D08
	217 Call 0x1C17F10
	218 Move X19, X0
	219 Move X0, 0x3F3000
	220 Move X0, [X0+3696]
	221 Call 0x1C17D08
	222 Move X1, X0
	223 Move X0, X19
	224 Move X2, X31
	225 Call Exception..ctor, X0, X1
	226 Move X0, 0x3F3000
	227 Move X0, [X0+3704]
	228 Call 0x1C17D08
	229 Move X1, X0
	230 Move X0, X19
	231 Call 0x1C17DEC

Method: System.Single GetDesiredPosition(UnityEngine.UIElements.Column column)

Disassembly:
	0x03D74D84 LDR X21, [X20 + 0x60]!
	0x03D74D88 LDR X24, [X24 + 0x650]
	0x03D74D8C MOV X0, X21
	0x03D74D90 MOV X1, X19
	0x03D74D94 MOV X2, X31
	0x03D74D98 BL 0x33C0DE4
	0x03D74D9C CBZ X0, 0x3D74DBC
	0x03D74DA0 LDR X23, [X24]
	0x03D74DA4 MOV X22, X0
	0x03D74DA8 MOV X1, X23
	0x03D74DAC BL 0x1C16E00
	0x03D74DB0 MOV X1, X0
	0x03D74DB4 CBNZ X0, 0x3D74DC0
	0x03D74DB8 B 0x3D74DEC
	0x03D74DBC MOV X1, X31
	0x03D74DC0 MOV X0, X20
	0x03D74DC4 MOV X2, X21
	0x03D74DC8 BL 0x1C24138
	0x03D74DCC CMP X21, X0
	0x03D74DD0 MOV X21, X0
	0x03D74DD4 B.NE 0x3D74D8C
	0x03D74DD8 LDP X20, X19, [X31 + 0x30]
	0x03D74DDC LDP X22, X21, [X31 + 0x20]
	0x03D74DE0 LDP X24, X23, [X31 + 0x10]
	0x03D74DE4 LDR X30, [X31], #0x40
	0x03D74DE8 RET
	0x03D74DEC MOV X0, X22
	0x03D74DF0 MOV X1, X23
	0x03D74DF4 BL 0x1C171E0
	0x03D74DF8 STR X30, [X31 - 0x40]!
	0x03D74DFC STP X24, X23, [X31 + 0x10]
	0x03D74E00 STP X22, X21, [X31 + 0x20]
	0x03D74E04 STP X20, X19, [X31 + 0x30]
	0x03D74E08 ADRP X21, 0x673000
	0x03D74E0C LDRB W8, [X21 + 0xD47]
	0x03D74E10 MOV X19, X1
	0x03D74E14 MOV X20, X0
	0x03D74E18 TBNZ X8, 0x0, 0x3D74E30
	0x03D74E1C ADRP X0, 0x3F2000
	0x03D74E20 LDR X0, [X0 + 0x650]
	0x03D74E24 BL 0x1C16CF4
	0x03D74E28 MOVZ W8, 0x1
	0x03D74E2C STRB W8, [X21 + 0xD47]
	0x03D74E30 ADRP X24, 0x3F2000
	0x03D74E34 LDR X21, [X20 + 0x60]!
	0x03D74E38 LDR X24, [X24 + 0x650]
	0x03D74E3C MOV X0, X21
	0x03D74E40 MOV X1, X19
	0x03D74E44 MOV X2, X31
	0x03D74E48 BL 0x33C0FDC
	0x03D74E4C CBZ X0, 0x3D74E6C
	0x03D74E50 LDR X23, [X24]
	0x03D74E54 MOV X22, X0
	0x03D74E58 MOV X1, X23
	0x03D74E5C BL 0x1C16E00
	0x03D74E60 MOV X1, X0
	0x03D74E64 CBNZ X0, 0x3D74E70
	0x03D74E68 B 0x3D74E9C
	0x03D74E6C MOV X1, X31
	0x03D74E70 MOV X0, X20
	0x03D74E74 MOV X2, X21

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x674000
	010 Move W8, [X21+3383]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x3F3000
	018 Move X0, [X0+3688]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3383], W8
	022 Compare X19, 0
	023 JumpIfEqual {69}
	024 Move W8, [X19+64]
	025 Compare W8, 0
	026 JumpIfEqual {56}
	027 Move X0, X19
	028 Call Column.get_visibleIndex, X0
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X23, 0x3F3000
	031 Move X23, [X23+3688]
	032 Move W21, W31
	033 Move S8, W31
	034 Move W24, 0x7F800000
	035 Move X22, [X20+48]
	036 Compare X22, 0
	037 JumpIfEqual {69}
	038 Move X0, X22
	039 Call Columns.UpdateVisibleColumns, X0
	040 Move X0, [X22+32]
	041 Move X2, [X23]
	042 Move W1, W21
	043 Call Enumerable.ElementAt, X0, X1
	044 Move X1, X0
	045 Move X0, X20
	046 Call ColumnLayout.GetDesiredWidth, X0, X1
	047 Move W8, S0
	048 And W8, W8, 0x7FFFFFFF
	049 Add S1, S8, S0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, X19
	052 NotImplemented "Instruction FCSEL not yet implemented."
	053 Add W21, W21, 1
	054 Call Column.get_visibleIndex, X0
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W8, 0x7FC00000
	057 Move S8, W8
	058 Move S8, W31
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X24, [X31+16]
	064 Move X23, [X31+24]
	065 Move X30, [X31+8]
	066 Move V0, V8
	067 Move V8, [X31+64]
	068 Return V0
	069 Call 0x1C17F20

Method: System.Single GetDesiredWidth(UnityEngine.UIElements.Column c)

Disassembly:
	0x03D73634 FCSEL S1, S3, S0, GT
	0x03D73638 FCMP S0, S2
	0x03D7363C MOV X0, X22
	0x03D73640 MOV X1, X19
	0x03D73644 FCSEL S10, S1, S2, PL
	0x03D73648 BL 0x3D72634
	0x03D7364C FCMP S0, S10
	0x03D73650 FMOV S9, W31
	0x03D73654 B.LE 0x3D73698
	0x03D73658 TBZ X21, 0x0, 0x3D73698
	0x03D7365C MOV X0, X22
	0x03D73660 MOV X1, X19
	0x03D73664 BL 0x3D72634
	0x03D73668 ADRP X8, 0x380000
	0x03D7366C LDR X8, [X8 + 0x5A8]
	0x03D73670 MOV V9.16B, V0.16B
	0x03D73674 LDR X0, [X8]
	0x03D73678 LDR W8, [X0 + 0xE0]
	0x03D7367C CBNZ W8, 0x3D73684
	0x03D73680 BL 0x1C16DFC
	0x03D73684 FABD S1, S9, S9
	0x03D73688 MOV V0.16B, V8.16B
	0x03D7368C MOV X0, X31
	0x03D73690 BL 0x337EEBC
	0x03D73694 MOV V9.16B, V0.16B
	0x03D73698 MOV X0, X22
	0x03D7369C MOV X1, X19
	0x03D736A0 BL 0x3D72634
	0x03D736A4 FCMP S0, S10
	0x03D736A8 B.PL 0x3D736EC
	0x03D736AC TBNZ X21, 0x0, 0x3D736EC
	0x03D736B0 MOV X0, X22
	0x03D736B4 MOV X1, X19
	0x03D736B8 BL 0x3D72634
	0x03D736BC ADRP X8, 0x380000
	0x03D736C0 LDR X8, [X8 + 0x5A8]
	0x03D736C4 MOV V9.16B, V0.16B
	0x03D736C8 LDR X0, [X8]
	0x03D736CC LDR W8, [X0 + 0xE0]
	0x03D736D0 CBNZ W8, 0x3D736D8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x675000
	006 Move W8, [X21+3384]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x3F4000
	014 Move X0, [X0+3584]
	015 Call 0x1C17CF4
	016 Move X0, 0x3F4000
	017 Move X0, [X0+3592]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3384], W8
	021 Move W8, [X20+84]
	022 Compare W8, 0
	023 JumpIfEqual {49}
	024 Move X0, [X20+128]
	025 Compare X0, 0
	026 JumpIfEqual {57}
	027 Move X8, 0x3F4000
	028 Move X8, [X8+3584]
	029 Move X1, X19
	030 Move X2, [X8]
	031 Call Dictionary`2<Object, Single>.ContainsKey, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {49}
	036 Move X0, [X20+128]
	037 Compare X0, 0
	038 JumpIfEqual {57}
	039 Move X8, 0x3F4000
	040 Move X8, [X8+3592]
	041 Move X1, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X2, [X8]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call Dictionary`2<Object, Single>.get_Item, X0, X1
	048 Return V0
	049 Compare X19, 0
	050 JumpIfEqual {57}
	051 Move V0, [X19+92]
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return V0
	057 Call 0x1C17F20

Method: System.Void DragResize(UnityEngine.UIElements.Column column, System.Single pos)

Disassembly:
	0x03D74E78 BL 0x1C24138
	0x03D74E7C CMP X21, X0
	0x03D74E80 MOV X21, X0
	0x03D74E84 B.NE 0x3D74E3C
	0x03D74E88 LDP X20, X19, [X31 + 0x30]
	0x03D74E8C LDP X22, X21, [X31 + 0x20]
	0x03D74E90 LDP X24, X23, [X31 + 0x10]
	0x03D74E94 LDR X30, [X31], #0x40
	0x03D74E98 RET
	0x03D74E9C MOV X0, X22
	0x03D74EA0 MOV X1, X23
	0x03D74EA4 BL 0x1C171E0
	0x03D74EA8 STR X30, [X31 - 0x40]!
	0x03D74EAC STP X24, X23, [X31 + 0x10]
	0x03D74EB0 STP X22, X21, [X31 + 0x20]
	0x03D74EB4 STP X20, X19, [X31 + 0x30]
	0x03D74EB8 ADRP X21, 0x673000
	0x03D74EBC LDRB W8, [X21 + 0xD49]
	0x03D74EC0 MOV X19, X1
	0x03D74EC4 MOV X20, X0
	0x03D74EC8 TBNZ X8, 0x0, 0x3D74EE0
	0x03D74ECC ADRP X0, 0x3F2000
	0x03D74ED0 LDR X0, [X0 + 0x668]
	0x03D74ED4 BL 0x1C16CF4
	0x03D74ED8 MOVZ W8, 0x1
	0x03D74EDC STRB W8, [X21 + 0xD49]
	0x03D74EE0 ADRP X24, 0x3F2000
	0x03D74EE4 LDR X21, [X20 + 0x68]!
	0x03D74EE8 LDR X24, [X24 + 0x668]
	0x03D74EEC MOV X0, X21
	0x03D74EF0 MOV X1, X19
	0x03D74EF4 MOV X2, X31
	0x03D74EF8 BL 0x33C0FDC
	0x03D74EFC CBZ X0, 0x3D74F1C
	0x03D74F00 LDR X23, [X24]
	0x03D74F04 MOV X22, X0
	0x03D74F08 MOV X1, X23
	0x03D74F0C BL 0x1C16E00
	0x03D74F10 MOV X1, X0
	0x03D74F14 CBNZ X0, 0x3D74F20
	0x03D74F18 B 0x3D74F4C
	0x03D74F1C MOV X1, X31
	0x03D74F20 MOV X0, X20
	0x03D74F24 MOV X2, X21
	0x03D74F28 BL 0x1C24138
	0x03D74F2C CMP X21, X0
	0x03D74F30 MOV X21, X0
	0x03D74F34 B.NE 0x3D74EEC
	0x03D74F38 LDP X20, X19, [X31 + 0x30]
	0x03D74F3C LDP X22, X21, [X31 + 0x20]
	0x03D74F40 LDP X24, X23, [X31 + 0x10]
	0x03D74F44 LDR X30, [X31], #0x40
	0x03D74F48 RET
	0x03D74F4C MOV X0, X22
	0x03D74F50 MOV X1, X23
	0x03D74F54 BL 0x1C171E0
	0x03D74F58 STR X30, [X31 - 0x20]!
	0x03D74F5C STP X20, X19, [X31 + 0x10]
	0x03D74F60 CBZ X1, 0x3D74FBC
	0x03D74F64 MOV X19, X1
	0x03D74F68 MOV X20, X0
	0x03D74F6C LDR X0, [X0 + 0x38]
	0x03D74F70 LDR X1, [X1 + 0x10]
	0x03D74F74 MOV X2, X31
	0x03D74F78 BL 0x321BA08
	0x03D74F7C TBZ X0, 0x0, 0x3D74F88
	0x03D74F80 MOVZ W0, 0x1
	0x03D74F84 B 0x3D74FB0
	0x03D74F88 LDR X0, [X20 + 0x38]
	0x03D74F8C MOV X1, X31
	0x03D74F90 BL 0x32277A8
	0x03D74F94 TBZ X0, 0x0, 0x3D74FAC
	0x03D74F98 MOV X0, X19
	0x03D74F9C BL 0x3D6F82C
	0x03D74FA0 CMP W0, 0x0
	0x03D74FA4 CSET W0, EQ
	0x03D74FA8 B 0x3D74FB0
	0x03D74FAC MOV W0, W31
	0x03D74FB0 LDP X20, X19, [X31 + 0x10]
	0x03D74FB4 LDR X30, [X31], #0x20
	0x03D74FB8 RET
	0x03D74FBC BL 0x1C16F20
	0x03D74FC0 B 0x3D72594
	0x03D74FC4 STP X30, X21, [X31 - 0x20]!
	0x03D74FC8 STP X20, X19, [X31 + 0x10]
	0x03D74FCC ADRP X21, 0x673000
	0x03D74FD0 LDRB W8, [X21 + 0xD4B]
	0x03D74FD4 MOV X19, X1
	0x03D74FD8 MOV X20, X0
	0x03D74FDC TBNZ X8, 0x0, 0x3D74FF4
	0x03D74FE0 ADRP X0, 0x3F2000
	0x03D74FE4 LDR X0, [X0 + 0xDA8]
	0x03D74FE8 BL 0x1C16CF4
	0x03D74FEC MOVZ W8, 0x1
	0x03D74FF0 STRB W8, [X21 + 0xD4B]
	0x03D74FF4 LDR X21, [X20 + 0x10]
	0x03D74FF8 CBZ X21, 0x3D75074
	0x03D74FFC ADRP X10, 0x3F2000
	0x03D75000 LDR X8, [X21]
	0x03D75004 B 0x3EB1A0C
	0x03D75008 LDRH W9, [X8 + 0x12E]
	0x03D7500C LDR X1, [X10]
	0x03D75010 CBZ X9, 0x3D75034
	0x03D75014 LDR X10, [X8 + 0xB0]
	0x03D75018 ADD X10, X10, 0x8
	0x03D7501C LDUR X11, [X10 - 0x8]
	0x03D75020 CMP X11, X1
	0x03D75024 B.EQ 0x3D75044
	0x03D75028 SUBS X9, X9, 0x1
	0x03D7502C ADD X10, X10, 0x10
	0x03D75030 B.NE 0x3D7501C
	0x03D75034 MOV X0, X21
	0x03D75038 MOV W2, W31
	0x03D7503C BL 0x1C5C788
	0x03D75040 B 0x3D75050
	0x03D75044 LDRSW X9, [X10]
	0x03D75048 ADD X8, X8, X9, 0x4, LSL
	0x03D7504C ADD X0, X8, 0x138
	0x03D75050 LDP X8, X1, [X0]
	0x03D75054 MOV X0, X21
	0x03D75058 BLR X8
	0x03D7505C MOV W1, W0
	0x03D75060 MOV X0, X20
	0x03D75064 MOV X2, X19
	0x03D75068 LDP X20, X19, [X31 + 0x10]
	0x03D7506C LDP X30, X21, [X31], #0x20
	0x03D75070 B 0x3D75078
	0x03D75074 BL 0x1C16F20
	0x03D75078 STR X30, [X31 - 0x50]!
	0x03D7507C STP X26, X25, [X31 + 0x10]
	0x03D75080 STP X24, X23, [X31 + 0x20]
	0x03D75084 STP X22, X21, [X31 + 0x30]
	0x03D75088 STP X20, X19, [X31 + 0x40]
	0x03D7508C ADRP X22, 0x672000
	0x03D75090 LDRB W8, [X22 + 0xD54]
	0x03D75094 MOV X20, X2
	0x03D75098 MOV W19, W1
	0x03D7509C MOV X21, X0
	0x03D750A0 TBNZ X8, 0x0, 0x3D750F4
	0x03D750A4 ADRP X0, 0x3F1000
	0x03D750A8 LDR X0, [X0 + 0x650]
	0x03D750AC BL 0x1C16CF4
	0x03D750B0 ADRP X0, 0x3F1000
	0x03D750B4 LDR X0, [X0 + 0x658]
	0x03D750B8 BL 0x1C16CF4
	0x03D750BC ADRP X0, 0x3F1000
	0x03D750C0 LDR X0, [X0 + 0xEF0]
	0x03D750C4 BL 0x1C16CF4
	0x03D750C8 ADRP X0, 0x3F1000
	0x03D750CC LDR X0, [X0 + 0xEF8]
	0x03D750D0 BL 0x1C16CF4
	0x03D750D4 ADRP X0, 0x3F1000
	0x03D750D8 LDR X0, [X0 + 0xD58]
	0x03D750DC BL 0x1C16CF4
	0x03D750E0 ADRP X0, 0x3F1000
	0x03D750E4 LDR X0, [X0 + 0xF00]
	0x03D750E8 BL 0x1C16CF4
	0x03D750EC MOVZ W8, 0x1
	0x03D750F0 STRB W8, [X22 + 0xD54]

ISIL:
	001 Move [X31-80], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x674000
	011 Move W8, [X21+3385]
	012 Move V8, V0
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x3F3000
	020 Move X0, [X0+3440]
	021 Call 0x1C17CF4
	022 Move X0, 0x380000
	023 Move X0, [X0+1448]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3385], W8
	027 Compare X20, 0
	028 JumpIfEqual {171}
	029 Move V0, [X19+80]
	030 Move W8, [X20+80]
	031 Move V9, [X20+76]
	032 Compare W8, 0
	033 JumpIfEqual {38}
	034 Move W8, 0x42C80000
	035 Multiply S1, S0, S9
	036 Move S2, W8
	037 NotImplemented "Instruction FDIV not yet implemented."
	038 Move W8, [X20+88]
	039 Move V10, [X20+84]
	040 Compare W8, 0
	041 JumpIfEqual {46}
	042 Move W8, 0x42C80000
	043 Multiply S0, S0, S10
	044 Move S1, W8
	045 NotImplemented "Instruction FDIV not yet implemented."
	046 Move X8, [X19+48]
	047 Compare X8, 0
	048 JumpIfEqual {171}
	049 Move W8, [X8+44]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move V0, [X19+92]
	052 Move X0, X19
	053 Move X1, X20
	054 Subtract S11, S8, S0
	055 Call ColumnLayout.GetDesiredWidth, X0, X1
	056 Add S0, S11, S0
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 NotImplemented "Instruction FCSEL not yet implemented."
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Move X0, X19
	061 Move X1, X20
	062 NotImplemented "Instruction FCSEL not yet implemented."
	063 Call ColumnLayout.GetDesiredWidth, X0, X1
	064 Subtract S11, S12, S0
	065 Move [X31+12], S11
	066 Move X1, [X19+104]
	067 Compare X1, 0
	068 JumpIfEqual {171}
	069 NotImplemented "Instruction FCMP not yet implemented."
	070 Move W8, [X1+24]
	071 Compare W8, 0
	072 JumpIfNotEqual {108}
	073 Move X3, [X19+112]
	074 Move X2, [X19+120]
	075 Add X4, X31, 12
	076 Move W6, 1
	077 Move X0, X19
	078 Move W5, W31
	079 Call ColumnLayout.StretchResizeColumns, X0, X1, X2, X3, X4, X5, X6
	080 Move X0, X19
	081 Move X1, X20
	082 Call ColumnLayout.GetDesiredWidth, X0, X1
	083 Move X0, X19
	084 Move X1, X20
	085 Move V11, V0
	086 Call ColumnLayout.GetDesiredWidth, X0, X1
	087 Add S1, S12, S11
	088 Subtract S0, S1, S0
	089 Move X8, 0x380000
	090 Move X8, [X8+1448]
	091 Move V0, [X19+88]
	092 Move V11, [X19+96]
	093 Move X0, [X8]
	094 Subtract S12, S8, S0
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Add S1, S11, S12
	100 Move V0, V10
	101 Move X0, X31
	102 Call Math.Min, V0, V1
	103 Move V1, V0
	104 Move V0, V9
	105 Move X0, X31
	106 Call Math.Max, V0, V1
	107 Move V9, V0
	108 NotImplemented "Instruction FCMP not yet implemented."
	109 Move X0, X19
	110 Call ColumnLayout.get_columnsWidth, X0
	111 Move V12, [X19+80]
	112 Add S0, S11, S0
	113 NotImplemented "Instruction FCMP not yet implemented."
	114 Move X1, [X19+104]
	115 Move X3, [X19+112]
	116 Move X2, [X19+120]
	117 Add X4, X31, 12
	118 Move W6, 1
	119 Move X0, X19
	120 Move W5, W31
	121 Call ColumnLayout.StretchResizeColumns, X0, X1, X2, X3, X4, X5, X6
	122 Move X0, X19
	123 Move X1, X20
	124 Call ColumnLayout.GetDesiredWidth, X0, X1
	125 Move V1, [X31+12]
	126 Add S0, S0, S1
	127 Move X0, X19
	128 Call ColumnLayout.get_columnsWidth, X0
	129 Subtract S0, S12, S0
	130 NotImplemented "Instruction FCMP not yet implemented."
	131 Move S0, W31
	132 Move V12, [X19+80]
	133 Move X0, X19
	134 Call ColumnLayout.get_columnsWidth, X0
	135 Subtract S0, S12, S0
	136 Subtract S0, S11, S0
	137 Move [X31+8], S0
	138 Move X3, [X19+112]
	139 Move X2, [X19+120]
	140 Move X1, [X19+104]
	141 Add X4, X31, 8
	142 Move W6, 1
	143 Move X0, X19
	144 Move W5, W31
	145 Call ColumnLayout.StretchResizeColumns, X0, X1, X2, X3, X4, X5, X6
	146 Move X0, X19
	147 Move X1, X20
	148 Call ColumnLayout.GetDesiredWidth, X0, X1
	149 Move V1, [X31+8]
	150 Add S0, S11, S0
	151 Subtract S0, S0, S1
	152 NotImplemented "Instruction FCMP not yet implemented."
	153 NotImplemented "Instruction FCMP not yet implemented."
	154 NotImplemented "Instruction FCSEL not yet implemented."
	155 Move X0, X19
	156 Move X1, X20
	157 Move V0, V9
	158 Move W2, W31
	159 Call ColumnLayout.ResizeColumn, X0, X1, V0, X2
	160 Move [X19+92], S8
	161 Move X20, [X31+64]
	162 Move X19, [X31+72]
	163 Move X30, [X31+48]
	164 Move X21, [X31+56]
	165 Move D9, [X31+32]
	166 Move D8, [X31+40]
	167 Move D11, [X31+16]
	168 Move D10, [X31+24]
	169 Move V12, [X31+80]
	170 Return 
	171 Call 0x1C17F20

Method: System.Void EndDragResize(UnityEngine.UIElements.Column column, System.Boolean cancelled)

Disassembly:
	0x03D750F4 CBZ X20, 0x3D7526C
	0x03D750F8 LDR X0, [X20 + 0xA8]
	0x03D750FC CMP X0, X21
	0x03D75100 B.EQ 0x3D7528C
	0x03D75104 CBZ X0, 0x3D75110
	0x03D75108 MOV X1, X20
	0x03D7510C BL 0x3D75474
	0x03D75110 LDR X22, [X21 + 0x10]
	0x03D75114 CBZ X22, 0x3D752D4
	0x03D75118 ADRP X10, 0x3F1000
	0x03D7511C LDR X8, [X22]
	0x03D75120 LDR X10, [X10 + 0xD58]
	0x03D75124 LDRH W9, [X8 + 0x12E]
	0x03D75128 LDR X1, [X10]
	0x03D7512C CBZ X9, 0x3D75150
	0x03D75130 LDR X10, [X8 + 0xB0]
	0x03D75134 ADD X10, X10, 0x8
	0x03D75138 LDUR X11, [X10 - 0x8]
	0x03D7513C CMP X11, X1
	0x03D75140 B.EQ 0x3D75160
	0x03D75144 SUBS X9, X9, 0x1
	0x03D75148 ADD X10, X10, 0x10
	0x03D7514C B.NE 0x3D75138
	0x03D75150 MOVZ W2, 0x3
	0x03D75154 MOV X0, X22
	0x03D75158 BL 0x1C5C788
	0x03D7515C B 0x3D75170
	0x03D75160 LDR W9, [X10]
	0x03D75164 ADD W9, W9, 0x3
	0x03D75168 ADD X8, X8, W9, 0x4, SXTW
	0x03D7516C ADD X0, X8, 0x138
	0x03D75170 ADRP X26, 0x3F1000
	0x03D75174 LDR X26, [X26 + 0x658]
	0x03D75178 LDP X8, X3, [X0]
	0x03D7517C ADRP X25, 0x3F1000
	0x03D75180 ADRP X24, 0x3F1000
	0x03D75184 ADRP X23, 0x3F1000
	0x03D75188 LDR X25, [X25 + 0xEF0]
	0x03D7518C LDR X24, [X24 + 0x650]
	0x03D75190 LDR X23, [X23 + 0xEF8]
	0x03D75194 MOV X0, X22
	0x03D75198 MOV W1, W19
	0x03D7519C MOV X2, X20
	0x03D751A0 BLR X8
	0x03D751A4 LDR X0, [X21 + 0x18]
	0x03D751A8 CBZ X0, 0x3D751CC
	0x03D751AC ADRP X8, 0x3F1000
	0x03D751B0 LDR X8, [X8 + 0xF00]
	0x03D751B4 MOV W1, W19
	0x03D751B8 MOV X2, X20
	0x03D751BC LDR X3, [X8]
	0x03D751C0 BL 0x301CEEC
	0x03D751C4 MOV X0, X21
	0x03D751C8 BL 0x3D75B6C
	0x03D751CC STR X21, [X20 + 0xA8]
	0x03D751D0 LDR X0, [X26]
	0x03D751D4 BL 0x1C16F10
	0x03D751D8 LDR X2, [X25]
	0x03D751DC MOV X1, X21
	0x03D751E0 MOV X3, X31
	0x03D751E4 MOV X22, X0
	0x03D751E8 BL 0x2A769B4
	0x03D751EC MOV X0, X20
	0x03D751F0 MOV X1, X22
	0x03D751F4 BL 0x3D6FCC4
	0x03D751F8 LDR X0, [X24]
	0x03D751FC BL 0x1C16F10
	0x03D75200 LDR X2, [X23]
	0x03D75204 MOV X1, X21
	0x03D75208 MOV X3, X31
	0x03D7520C MOV X22, X0
	0x03D75210 BL 0x2A6B948
	0x03D75214 MOV X0, X20
	0x03D75218 MOV X1, X22
	0x03D7521C BL 0x3D6FE24
	0x03D75220 LDR X8, [X21 + 0x48]
	0x03D75224 CBZ X8, 0x3D75254
	0x03D75228 LDR X4, [X8 + 0x18]
	0x03D7522C LDR X0, [X8 + 0x40]
	0x03D75230 LDR X3, [X8 + 0x28]
	0x03D75234 MOV X1, X20
	0x03D75238 MOV W2, W19
	0x03D7523C LDP X20, X19, [X31 + 0x40]
	0x03D75240 LDP X22, X21, [X31 + 0x30]
	0x03D75244 LDP X24, X23, [X31 + 0x20]
	0x03D75248 LDP X26, X25, [X31 + 0x10]
	0x03D7524C LDR X30, [X31], #0x50
	0x03D75250 BR X4
	0x03D75254 LDP X20, X19, [X31 + 0x40]
	0x03D75258 LDP X22, X21, [X31 + 0x30]
	0x03D7525C LDP X24, X23, [X31 + 0x20]
	0x03D75260 LDP X26, X25, [X31 + 0x10]
	0x03D75264 LDR X30, [X31], #0x50
	0x03D75268 RET
	0x03D7526C ADRP X0, 0x386000
	0x03D75270 LDR X0, [X0 + 0x578]
	0x03D75274 BL 0x1C16D08
	0x03D75278 BL 0x1C16F10
	0x03D7527C MOV X19, X0
	0x03D75280 ADRP X0, 0x3F1000
	0x03D75284 LDR X0, [X0 + 0xF08]
	0x03D75288 B 0x3D752A8
	0x03D7528C ADRP X0, 0x386000
	0x03D75290 LDR X0, [X0 + 0x578]
	0x03D75294 BL 0x1C16D08
	0x03D75298 BL 0x1C16F10
	0x03D7529C MOV X19, X0
	0x03D752A0 ADRP X0, 0x3F1000
	0x03D752A4 LDR X0, [X0 + 0xF10]
	0x03D752A8 BL 0x1C16D08
	0x03D752AC MOV X1, X0
	0x03D752B0 MOV X0, X19
	0x03D752B4 MOV X2, X31
	0x03D752B8 BL 0x3314A68
	0x03D752BC ADRP X0, 0x3F1000
	0x03D752C0 LDR X0, [X0 + 0xF18]
	0x03D752C4 BL 0x1C16D08
	0x03D752C8 MOV X1, X0
	0x03D752CC MOV X0, X19
	0x03D752D0 BL 0x1C16DEC
	0x03D752D4 BL 0x1C16F20
	0x03D752D8 STP X30, X23, [X31 - 0x30]!
	0x03D752DC STP X22, X21, [X31 + 0x10]
	0x03D752E0 STP X20, X19, [X31 + 0x20]
	0x03D752E4 ADRP X20, 0x672000
	0x03D752E8 LDRB W8, [X20 + 0xD4C]
	0x03D752EC MOV X19, X0
	0x03D752F0 TBNZ X8, 0x0, 0x3D75314
	0x03D752F4 ADRP X0, 0x3F1000
	0x03D752F8 LDR X0, [X0 + 0xDA8]
	0x03D752FC BL 0x1C16CF4
	0x03D75300 ADRP X0, 0x3F1000
	0x03D75304 LDR X0, [X0 + 0xD58]
	0x03D75308 BL 0x1C16CF4
	0x03D7530C MOVZ W8, 0x1
	0x03D75310 STRB W8, [X20 + 0xD4C]
	0x03D75314 LDR X20, [X19 + 0x10]
	0x03D75318 CBZ X20, 0x3D75460
	0x03D7531C ADRP X22, 0x3F1000
	0x03D75320 ADRP X23, 0x3F1000
	0x03D75324 LDR X22, [X22 + 0xDA8]
	0x03D75328 LDR X23, [X23 + 0xD58]
	0x03D7532C LDR X8, [X20]
	0x03D75330 LDR X1, [X22]
	0x03D75334 LDRH W9, [X8 + 0x12E]
	0x03D75338 CBZ X9, 0x3D7535C
	0x03D7533C LDR X10, [X8 + 0xB0]
	0x03D75340 ADD X10, X10, 0x8
	0x03D75344 LDUR X11, [X10 - 0x8]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X22, 0x673000
	008 Move W8, [X22+3386]
	009 Move W21, W2
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x3F2000
	017 Move X0, [X0+3712]
	018 Call 0x1C17CF4
	019 Move X0, 0x3F2000
	020 Move X0, [X0+3720]
	021 Call 0x1C17CF4
	022 Move X0, 0x3F2000
	023 Move X0, [X0+3728]
	024 Call 0x1C17CF4
	025 Move X0, 0x3F2000
	026 Move X0, [X0+3736]
	027 Call 0x1C17CF4
	028 Move X0, 0x3F2000
	029 Move X0, [X0+3744]
	030 Call 0x1C17CF4
	031 Move X0, 0x3F2000
	032 Move X0, [X0+3752]
	033 Call 0x1C17CF4
	034 Move X0, 0x3F2000
	035 Move X0, [X0+3760]
	036 Call 0x1C17CF4
	037 Move X0, 0x3F2000
	038 Move X0, [X0+3504]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+3386], W8
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Move [X31+80], X31
	044 Move [X31+48], V0
	045 Move [X31+56], V0
	046 Move W8, [X19+84]
	047 Compare W8, 0
	048 JumpIfEqual {95}
	049 Move [X19+84], W31
	050 Move TEMP, X21
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {88}
	054 Move X0, [X19+128]
	055 Compare X0, 0
	056 JumpIfEqual {142}
	057 Move X8, 0x3F2000
	058 Move X8, [X8+3720]
	059 Move X1, [X8]
	060 Add X8, X31, 8
	061 Call Dictionary`2<Object, Single>.GetEnumerator, X0
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 Move X8, [X31+40]
	065 Move X21, 0x3F2000
	066 Move [X31+48], V0
	067 Move [X31+56], V1
	068 Move [X31+80], X8
	069 Move X21, [X21+3736]
	070 Move X1, [X21]
	071 Add X0, X31, 48
	072 Call Enumerator<Object, Single>.MoveNext, X0
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {83}
	077 Move X1, [X31+64]
	078 Move V0, [X31+72]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CSET not yet implemented."
	081 Move X0, X19
	082 Call ColumnLayout.ResizeColumn, X0, X1, V0, X2
	083 Move X8, 0x3F2000
	084 Move X8, [X8+3728]
	085 Add X0, X31, 48
	086 Move X1, [X8]
	087 Call Enumerator<Object, Single>.Dispose, X0
	088 Move X0, [X19+128]
	089 Compare X0, 0
	090 JumpIfEqual {142}
	091 Move X8, 0x3F2000
	092 Move X8, [X8+3712]
	093 Move X1, [X8]
	094 Call Dictionary`2<Object, Single>.Clear, X0
	095 Move X8, [X19+104]
	096 Move [X19+85], W31
	097 Compare X8, 0
	098 JumpIfEqual {142}
	099 Move W2, [X8+24]
	100 Move W9, [X8+28]
	101 Add W9, W9, 1
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move [X8+24], W31
	104 Move [X8+28], W9
	105 Move X0, [X8+16]
	106 Move W1, W31
	107 Move X3, X31
	108 Call Array.Clear, X0, X1, X2
	109 Move X8, [X19+120]
	110 Compare X8, 0
	111 JumpIfEqual {142}
	112 Move W2, [X8+24]
	113 Move W9, [X8+28]
	114 Add W9, W9, 1
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move [X8+24], W31
	117 Move [X8+28], W9
	118 Move X0, [X8+16]
	119 Move W1, W31
	120 Move X3, X31
	121 Call Array.Clear, X0, X1, X2
	122 Move X8, [X19+112]
	123 Compare X8, 0
	124 JumpIfEqual {142}
	125 Move W2, [X8+24]
	126 Move W9, [X8+28]
	127 Add W9, W9, 1
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move [X8+24], W31
	130 Move [X8+28], W9
	131 Move X0, [X8+16]
	132 Move W1, W31
	133 Move X3, X31
	134 Call Array.Clear, X0, X1, X2
	135 Move X20, [X31+128]
	136 Move X19, [X31+136]
	137 Move X22, [X31+112]
	138 Move X21, [X31+120]
	139 Move X30, [X31+96]
	140 Add X31, X31, 144
	141 Return 
	142 Call 0x1C17F20
	143 Move X21, X0
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X0, X21
	146 Call 0x3EB2AD0
	147 Move X20, [X0]
	148 Call 0x3EB2AE0
	149 Move X8, 0x3F2000
	150 Move X8, [X8+3728]
	151 Add X0, X31, 48
	152 Move X1, [X8]
	153 Call Enumerator<Object, Single>.Dispose, X0
	154 Compare X20, 0
	155 JumpIfEqual {88}
	156 Move X0, X20
	157 Call 0x1C17F18
	158 Move X20, X31
	159 Move X21, X0
	160 Move X8, 0x3F2000
	161 Move X8, [X8+3728]
	162 Move X1, [X8]
	163 Add X0, X31, 48
	164 Call Enumerator<Object, Single>.Dispose, X0
	165 Compare X20, 0
	166 JumpIfNotEqual {169}
	167 Move X0, X21
	168 Call 0x1D2D690
	169 Move X0, X20
	170 Call 0x1C17F18
	171 Call 0x1991590

Method: System.Void UpdateCache()

Disassembly:
	0x03D72D14 MOV X1, X23
	0x03D72D18 LDR X2, [X8]
	0x03D72D1C BL 0x301CAA0
	0x03D72D20 LDR W8, [X19 + 0x18]
	0x03D72D24 CMP W8, 0x1
	0x03D72D28 B.LT 0x3D72E5C
	0x03D72D2C ADRP X25, 0x3F4000
	0x03D72D30 ADRP X26, 0x381000
	0x03D72D34 LDR X25, [X25 + 0xE10]
	0x03D72D38 LDR X26, [X26 + 0x5A8]
	0x03D72D3C MOV W23, W31
	0x03D72D40 AND W22, W22, 0x1
	0x03D72D44 MOVZ W27, 0x42C80000
	0x03D72D48 LDR X2, [X25]
	0x03D72D4C MOV X0, X19
	0x03D72D50 MOV W1, W23
	0x03D72D54 BL 0x301BCCC
	0x03D72D58 MOV X24, X0
	0x03D72D5C MOV X0, X20
	0x03D72D60 MOV X1, X24
	0x03D72D64 BL 0x3D72634
	0x03D72D68 MOV X0, X20
	0x03D72D6C MOV X1, X24
	0x03D72D70 MOV V9.16B, V0.16B
	0x03D72D74 BL 0x3D72634
	0x03D72D78 LDR V12, [X21 + 0x10]
	0x03D72D7C MOV X0, X20
	0x03D72D80 MOV X1, X24
	0x03D72D84 MOV V10.16B, V0.16B
	0x03D72D88 BL 0x3D72634
	0x03D72D8C CBZ X24, 0x3D72E84
	0x03D72D90 LDR W8, [X24 + 0x50]
	0x03D72D94 LDR V1, [X24 + 0x4C]
	0x03D72D98 CBZ W8, 0x3D72DAC
	0x03D72D9C LDR V2, [X20 + 0x50]
	0x03D72DA0 FMUL S1, S2, S1
	0x03D72DA4 FMOV S2, W27
	0x03D72DA8 FDIV S1, S1, S2
	0x03D72DAC FCMP S0, S1
	0x03D72DB0 FMOV S11, W31
	0x03D72DB4 B.LE 0x3D72E34
	0x03D72DB8 MOV X0, X20
	0x03D72DBC MOV X1, X24
	0x03D72DC0 BL 0x3D72634
	0x03D72DC4 LDR W8, [X24 + 0x50]
	0x03D72DC8 LDR V13, [X24 + 0x4C]
	0x03D72DCC MOV V11.16B, V0.16B
	0x03D72DD0 CBZ W8, 0x3D72DE4
	0x03D72DD4 LDR V0, [X20 + 0x50]
	0x03D72DD8 FMOV S1, W27
	0x03D72DDC FMUL S0, S13, S0
	0x03D72DE0 FDIV S13, S0, S1
	0x03D72DE4 LDR X0, [X26]
	0x03D72DE8 LDR W8, [X0 + 0xE0]
	0x03D72DEC CBNZ W8, 0x3D72DF4
	0x03D72DF0 BL 0x1C16DFC
	0x03D72DF4 FDIV S0, S10, S12
	0x03D72DF8 FMUL S0, S8, S0
	0x03D72DFC FSUB S1, S11, S13
	0x03D72E00 MOV X0, X31
	0x03D72E04 BL 0x337EEBC
	0x03D72E08 MOV V11.16B, V0.16B
	0x03D72E0C FCMP S0, 0x0
	0x03D72E10 B.LE 0x3D72E34
	0x03D72E14 MOV X0, X20
	0x03D72E18 MOV X1, X24
	0x03D72E1C BL 0x3D72634
	0x03D72E20 FSUB S0, S0, S11
	0x03D72E24 MOV X0, X20
	0x03D72E28 MOV X1, X24
	0x03D72E2C MOV W2, W22
	0x03D72E30 BL 0x3D73468
	0x03D72E34 LDR V0, [X21 + 0x10]
	0x03D72E38 FSUB S8, S8, S11
	0x03D72E3C FCMP S8, 0x0
	0x03D72E40 FSUB S0, S0, S9
	0x03D72E44 STR S0, [X21 + 0x10]
	0x03D72E48 B.LS 0x3D72E5C
	0x03D72E4C LDR W8, [X19 + 0x18]
	0x03D72E50 ADD W23, W23, 0x1
	0x03D72E54 CMP W23, W8
	0x03D72E58 B.LT 0x3D72D48
	0x03D72E5C MOV V0.16B, V8.16B
	0x03D72E60 LDP X20, X19, [X31 + 0x70]
	0x03D72E64 LDP X22, X21, [X31 + 0x60]
	0x03D72E68 LDP X24, X23, [X31 + 0x50]
	0x03D72E6C LDP X26, X25, [X31 + 0x40]
	0x03D72E70 LDP X30, X27, [X31 + 0x30]
	0x03D72E74 LDP D9, D8, [X31 + 0x20]
	0x03D72E78 LDP D11, D10, [X31 + 0x10]
	0x03D72E7C LDP D13, D12, [X31], #0x80
	0x03D72E80 RET
	0x03D72E84 BL 0x1C16F20
	0x03D72E88 STR D10, [X31 - 0x60]!
	0x03D72E8C STP D9, D8, [X31 + 0x8]
	0x03D72E90 STR X30, [X31 + 0x18]
	0x03D72E94 STP X26, X25, [X31 + 0x20]
	0x03D72E98 STP X24, X23, [X31 + 0x30]
	0x03D72E9C STP X22, X21, [X31 + 0x40]
	0x03D72EA0 STP X20, X19, [X31 + 0x50]
	0x03D72EA4 ADRP X22, 0x675000
	0x03D72EA8 LDRB W8, [X22 + 0xD32]
	0x03D72EAC MOV W21, W2
	0x03D72EB0 MOV V8.16B, V0.16B
	0x03D72EB4 MOV X19, X1
	0x03D72EB8 MOV X20, X0
	0x03D72EBC TBNZ X8, 0x0, 0x3D72EEC
	0x03D72EC0 ADRP X0, 0x3F4000
	0x03D72EC4 LDR X0, [X0 + 0xD70]
	0x03D72EC8 BL 0x1C16CF4
	0x03D72ECC ADRP X0, 0x3F4000
	0x03D72ED0 LDR X0, [X0 + 0xE10]
	0x03D72ED4 BL 0x1C16CF4
	0x03D72ED8 ADRP X0, 0x381000
	0x03D72EDC LDR X0, [X0 + 0x5A8]
	0x03D72EE0 BL 0x1C16CF4
	0x03D72EE4 MOVZ W8, 0x1
	0x03D72EE8 STRB W8, [X22 + 0xD32]
	0x03D72EEC FCMP S8, 0x0
	0x03D72EF0 B.LE 0x3D72FF0
	0x03D72EF4 CBZ X19, 0x3D73014
	0x03D72EF8 LDR W8, [X19 + 0x18]
	0x03D72EFC ADRP X24, 0x3F4000
	0x03D72F00 ADRP X25, 0x381000
	0x03D72F04 LDR X24, [X24 + 0xE10]
	0x03D72F08 LDR X25, [X25 + 0x5A8]
	0x03D72F0C AND W21, W21, 0x1
	0x03D72F10 SUB W22, W8, 0x1
	0x03D72F14 MOVZ W26, 0x42C80000
	0x03D72F18 TBNZ X22, 0x1F, 0x3D72FF0
	0x03D72F1C LDR X2, [X24]
	0x03D72F20 MOV X0, X19
	0x03D72F24 MOV W1, W22
	0x03D72F28 BL 0x301BCCC
	0x03D72F2C MOV X23, X0
	0x03D72F30 MOV X0, X20
	0x03D72F34 MOV X1, X23
	0x03D72F38 BL 0x3D72634
	0x03D72F3C CBZ X23, 0x3D73014
	0x03D72F40 LDR W8, [X23 + 0x50]
	0x03D72F44 LDR V1, [X23 + 0x4C]
	0x03D72F48 CBZ W8, 0x3D72F5C
	0x03D72F4C LDR V2, [X20 + 0x50]
	0x03D72F50 FMUL S1, S2, S1
	0x03D72F54 FMOV S2, W26
	0x03D72F58 FDIV S1, S1, S2
	0x03D72F5C FCMP S0, S1
	0x03D72F60 FMOV S9, W31
	0x03D72F64 B.LE 0x3D72FE0
	0x03D72F68 MOV X0, X20
	0x03D72F6C MOV X1, X23
	0x03D72F70 BL 0x3D72634
	0x03D72F74 LDR W8, [X23 + 0x50]
	0x03D72F78 LDR V10, [X23 + 0x4C]
	0x03D72F7C MOV V9.16B, V0.16B
	0x03D72F80 CBZ W8, 0x3D72F94
	0x03D72F84 LDR V0, [X20 + 0x50]
	0x03D72F88 FMOV S1, W26
	0x03D72F8C FMUL S0, S10, S0
	0x03D72F90 FDIV S10, S0, S1
	0x03D72F94 LDR X0, [X25]
	0x03D72F98 LDR W8, [X0 + 0xE0]
	0x03D72F9C CBNZ W8, 0x3D72FA4
	0x03D72FA0 BL 0x1C16DFC
	0x03D72FA4 FSUB S1, S9, S10
	0x03D72FA8 MOV V0.16B, V8.16B
	0x03D72FAC MOV X0, X31
	0x03D72FB0 BL 0x337EEBC
	0x03D72FB4 MOV V9.16B, V0.16B
	0x03D72FB8 FCMP S0, 0x0
	0x03D72FBC B.LE 0x3D72FE0
	0x03D72FC0 MOV X0, X20
	0x03D72FC4 MOV X1, X23
	0x03D72FC8 BL 0x3D72634
	0x03D72FCC FSUB S0, S0, S9
	0x03D72FD0 MOV X0, X20
	0x03D72FD4 MOV X1, X23
	0x03D72FD8 MOV W2, W21
	0x03D72FDC BL 0x3D73468
	0x03D72FE0 FSUB S8, S8, S9
	0x03D72FE4 FCMP S8, 0x0
	0x03D72FE8 SUB W22, W22, 0x1
	0x03D72FEC B.HI 0x3D72F18
	0x03D72FF0 MOV V0.16B, V8.16B
	0x03D72FF4 LDP X20, X19, [X31 + 0x50]
	0x03D72FF8 LDP X22, X21, [X31 + 0x40]
	0x03D72FFC LDP X24, X23, [X31 + 0x30]
	0x03D73000 LDP X26, X25, [X31 + 0x20]
	0x03D73004 LDR X30, [X31 + 0x18]
	0x03D73008 LDP D9, D8, [X31 + 0x8]
	0x03D7300C LDR V10, [X31], #0x60
	0x03D73010 RET
	0x03D73014 BL 0x1C16F20
	0x03D73018 STP D13, D12, [X31 - 0x80]!
	0x03D7301C STP D11, D10, [X31 + 0x10]
	0x03D73020 STP D9, D8, [X31 + 0x20]
	0x03D73024 STP X30, X27, [X31 + 0x30]
	0x03D73028 STP X26, X25, [X31 + 0x40]
	0x03D7302C STP X24, X23, [X31 + 0x50]
	0x03D73030 STP X22, X21, [X31 + 0x60]
	0x03D73034 STP X20, X19, [X31 + 0x70]
	0x03D73038 ADRP X21, 0x674000
	0x03D7303C LDRB W8, [X21 + 0xD2E]
	0x03D73040 MOV W22, W2
	0x03D73044 MOV V8.16B, V0.16B
	0x03D73048 MOV X19, X1
	0x03D7304C MOV X20, X0
	0x03D73050 TBNZ X8, 0x0, 0x3D730D4
	0x03D73054 ADRP X0, 0x3F3000
	0x03D73058 LDR X0, [X0 + 0x650]
	0x03D7305C BL 0x1C16CF4
	0x03D73060 ADRP X0, 0x3F3000
	0x03D73064 LDR X0, [X0 + 0xE38]
	0x03D73068 BL 0x1C16CF4
	0x03D7306C ADRP X0, 0x3F3000
	0x03D73070 LDR X0, [X0 + 0xDD8]
	0x03D73074 BL 0x1C16CF4
	0x03D73078 ADRP X0, 0x3F3000
	0x03D7307C LDR X0, [X0 + 0xE20]
	0x03D73080 BL 0x1C16CF4
	0x03D73084 ADRP X0, 0x3F3000
	0x03D73088 LDR X0, [X0 + 0xDF0]
	0x03D7308C BL 0x1C16CF4
	0x03D73090 ADRP X0, 0x3F3000
	0x03D73094 LDR X0, [X0 + 0xD70]
	0x03D73098 BL 0x1C16CF4
	0x03D7309C ADRP X0, 0x3F3000
	0x03D730A0 LDR X0, [X0 + 0xE10]
	0x03D730A4 BL 0x1C16CF4
	0x03D730A8 ADRP X0, 0x380000
	0x03D730AC LDR X0, [X0 + 0x5A8]
	0x03D730B0 BL 0x1C16CF4
	0x03D730B4 ADRP X0, 0x3F3000
	0x03D730B8 LDR X0, [X0 + 0xE40]
	0x03D730BC BL 0x1C16CF4
	0x03D730C0 ADRP X0, 0x3F3000
	0x03D730C4 LDR X0, [X0 + 0xE48]
	0x03D730C8 BL 0x1C16CF4
	0x03D730CC MOVZ W8, 0x1
	0x03D730D0 STRB W8, [X21 + 0xD2E]
	0x03D730D4 FCMP S8, 0x0
	0x03D730D8 B.LE 0x3D732B0
	0x03D730DC ADRP X8, 0x3F3000
	0x03D730E0 LDR X8, [X8 + 0xE48]
	0x03D730E4 LDR X0, [X8]
	0x03D730E8 BL 0x1C16F10
	0x03D730EC MOV X1, X31
	0x03D730F0 MOV X21, X0
	0x03D730F4 BL 0x33BDD8C
	0x03D730F8 CBZ X21, 0x3D732D8
	0x03D730FC STR X20, [X21 + 0x18]
	0x03D73100 ADRP X8, 0x3F3000
	0x03D73104 LDR X8, [X8 + 0xDD8]
	0x03D73108 LDR X0, [X8]
	0x03D7310C BL 0x1C16F10
	0x03D73110 ADRP X8, 0x3F3000
	0x03D73114 LDR X8, [X8 + 0xE38]
	0x03D73118 MOV X1, X20
	0x03D7311C MOV X3, X31
	0x03D73120 MOV X23, X0
	0x03D73124 LDR X2, [X8]
	0x03D73128 BL 0x295A080
	0x03D7312C CBZ X19, 0x3D732D8
	0x03D73130 ADRP X8, 0x3F3000
	0x03D73134 LDR X8, [X8 + 0xDF0]
	0x03D73138 MOV X0, X19
	0x03D7313C MOV X1, X23
	0x03D73140 LDR X2, [X8]
	0x03D73144 BL 0x301DD30
	0x03D73148 STR W31, [X21 + 0x10]
	0x03D7314C ADRP X8, 0x3F3000
	0x03D73150 LDR X8, [X8 + 0x650]
	0x03D73154 LDR X0, [X8]
	0x03D73158 BL 0x1C16F10
	0x03D7315C ADRP X8, 0x3F3000
	0x03D73160 LDR X8, [X8 + 0xE40]
	0x03D73164 MOV X1, X21
	0x03D73168 MOV X3, X31
	0x03D7316C MOV X23, X0
	0x03D73170 LDR X2, [X8]
	0x03D73174 BL 0x2A6B948
	0x03D73178 ADRP X8, 0x3F3000
	0x03D7317C LDR X8, [X8 + 0xE20]
	0x03D73180 MOV X0, X19
	0x03D73184 MOV X1, X23
	0x03D73188 LDR X2, [X8]
	0x03D7318C BL 0x301CAA0
	0x03D73190 LDR W8, [X19 + 0x18]
	0x03D73194 CMP W8, 0x1
	0x03D73198 B.LT 0x3D732B0
	0x03D7319C ADRP X25, 0x3F3000
	0x03D731A0 ADRP X26, 0x380000
	0x03D731A4 LDR X25, [X25 + 0xE10]
	0x03D731A8 LDR X26, [X26 + 0x5A8]
	0x03D731AC MOV W23, W31
	0x03D731B0 AND W22, W22, 0x1
	0x03D731B4 MOVZ W27, 0x42C80000
	0x03D731B8 LDR X2, [X25]
	0x03D731BC MOV X0, X19
	0x03D731C0 MOV W1, W23
	0x03D731C4 BL 0x301BCCC
	0x03D731C8 MOV X24, X0
	0x03D731CC MOV X0, X20
	0x03D731D0 MOV X1, X24
	0x03D731D4 BL 0x3D72634
	0x03D731D8 MOV X0, X20
	0x03D731DC MOV X1, X24
	0x03D731E0 MOV V9.16B, V0.16B
	0x03D731E4 BL 0x3D72634
	0x03D731E8 CBZ X24, 0x3D732D8
	0x03D731EC LDR W8, [X24 + 0x58]
	0x03D731F0 LDR V12, [X24 + 0x54]
	0x03D731F4 MOV V10.16B, V0.16B
	0x03D731F8 CBZ W8, 0x3D7320C
	0x03D731FC LDR V0, [X20 + 0x50]
	0x03D73200 FMOV S1, W27
	0x03D73204 FMUL S0, S0, S12
	0x03D73208 FDIV S12, S0, S1
	0x03D7320C LDR V13, [X21 + 0x10]
	0x03D73210 MOV X0, X20
	0x03D73214 MOV X1, X24
	0x03D73218 BL 0x3D72634
	0x03D7321C FCMP S0, S12
	0x03D73220 FMOV S11, W31
	0x03D73224 B.PL 0x3D73288
	0x03D73228 MOV X0, X20
	0x03D7322C MOV X1, X24
	0x03D73230 BL 0x3D72634
	0x03D73234 LDR X0, [X26]
	0x03D73238 MOV V11.16B, V0.16B
	0x03D7323C LDR W8, [X0 + 0xE0]
	0x03D73240 CBNZ W8, 0x3D73248
	0x03D73244 BL 0x1C16DFC
	0x03D73248 FDIV S0, S10, S13
	0x03D7324C FMUL S0, S8, S0
	0x03D73250 FSUB S1, S12, S11
	0x03D73254 MOV X0, X31
	0x03D73258 BL 0x337EEBC
	0x03D7325C MOV V11.16B, V0.16B

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0x676000
	011 Move W8, [X19+3387]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x382000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0x3AB000
	021 Move X0, [X0+272]
	022 Call 0x1C17CF4
	023 Move X0, 0x3AB000
	024 Move X0, [X0+280]
	025 Call 0x1C17CF4
	026 Move X0, 0x382000
	027 Move X0, [X0+3608]
	028 Call 0x1C17CF4
	029 Move X0, 0x3F5000
	030 Move X0, [X0+3560]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+3387], W8
	034 Move X0, X20
	035 Call ColumnLayout.ClearCache, X0
	036 Move X19, [X20+48]
	037 Compare X19, 0
	038 JumpIfEqual {305}
	039 Move X0, X19
	040 Call Columns.UpdateVisibleColumns, X0
	041 Move X19, [X19+32]
	042 Compare X19, 0
	043 JumpIfEqual {305}
	044 Move X10, 0x3AB000
	045 Move X8, [X19]
	046 Move X10, [X10+272]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move X0, X19
	058 Move W2, W31
	059 Call 0x1C5D788
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Add X8, X8, X9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X1, [X0+8]
	065 Move X22, 0x382000
	066 Move X22, [X22+3584]
	067 Move X0, X19
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X19, X0
	070 Compare X0, 0
	071 JumpIfEqual {306}
	072 Move X23, 0x382000
	073 Move X24, 0x3AB000
	074 Move X25, 0x3F5000
	075 Move X23, [X23+3608]
	076 Move X24, [X24+280]
	077 Move X25, [X25+3560]
	078 Move W26, 0x42C80000
	079 Move X8, [X19]
	080 Move X1, [X23]
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Compare X9, 0
	083 JumpIfEqual {90}
	084 Move X10, [X8+176]
	085 Add X10, X10, 8
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract X9, X9, 1
	089 Add X10, X10, 16
	090 Move X0, X19
	091 Move W2, W31
	092 Call 0x1C5D788
	093 NotImplemented "Instruction LDRSW not yet implemented."
	094 Add X8, X8, X9
	095 Add X0, X8, 312
	096 Move X8, [X0]
	097 Move X1, [X0+8]
	098 Move X0, X19
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {259}
	104 Move X8, [X19]
	105 Move X1, [X24]
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X19
	116 Move W2, W31
	117 Call 0x1C5D788
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Add X8, X8, X9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X19
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X21, X0
	126 Compare X0, 0
	127 JumpIfEqual {295}
	128 Move W8, [X21+96]
	129 Compare W8, 0
	130 JumpIfEqual {154}
	131 Move X8, [X20+48]
	132 Compare X8, 0
	133 JumpIfEqual {296}
	134 Move W8, [X8+44]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X0, [X20+16]
	137 Compare X0, 0
	138 JumpIfEqual {303}
	139 Move W10, [X0+28]
	140 Move X8, [X0+16]
	141 Move X9, [X25]
	142 Add W10, W10, 1
	143 Move [X0+28], W10
	144 Compare X8, 0
	145 JumpIfEqual {304}
	146 NotImplemented "Instruction LDRSW not yet implemented."
	147 Move W11, [X8+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X8, [X9+32]
	150 Move X8, [X8+192]
	151 Move X2, [X8+112]
	152 Move X1, X21
	153 Call List`1<Object>.AddWithResize, X0, X1
	154 Move W8, [X21+72]
	155 Compare W8, 0
	156 JumpIfNotEqual {179}
	157 Move X0, [X20+24]
	158 Compare X0, 0
	159 JumpIfEqual {302}
	160 Move W10, [X0+28]
	161 Move X8, [X0+16]
	162 Move X9, [X25]
	163 Add W10, W10, 1
	164 Move [X0+28], W10
	165 Compare X8, 0
	166 JumpIfEqual {301}
	167 NotImplemented "Instruction LDRSW not yet implemented."
	168 Move W11, [X8+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Add W9, W10, 1
	171 Add X8, X8, X10
	172 Move [X0+24], W9
	173 Move [X8+32], X21
	174 Move X8, [X9+32]
	175 Move X8, [X8+192]
	176 Move X2, [X8+112]
	177 Move X1, X21
	178 Call List`1<Object>.AddWithResize, X0, X1
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 Move X9, X8
	181 ShiftRight X9, 32
	182 And X9, X9, 0x7FFFFFFF
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X0, [X20+32]
	185 Compare X0, 0
	186 JumpIfEqual {297}
	187 Move W10, [X0+28]
	188 Move X8, [X0+16]
	189 Move X9, [X25]
	190 Add W10, W10, 1
	191 Move [X0+28], W10
	192 Compare X8, 0
	193 JumpIfEqual {298}
	194 NotImplemented "Instruction LDRSW not yet implemented."
	195 Move W11, [X8+24]
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Add W9, W10, 1
	198 Add X8, X8, X10
	199 Move [X0+24], W9
	200 Move [X8+32], X21
	201 Move X8, [X9+32]
	202 Move X8, [X8+192]
	203 Move X2, [X8+112]
	204 Move X1, X21
	205 Call List`1<Object>.AddWithResize, X0, X1
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 Move X8, X8
	208 ShiftRight X8, 32
	209 And X8, X8, 0x7FFFFFFF
	210 Compare X8, 0
	211 JumpIfNotEqual {238}
	212 Move W8, [X21+80]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move W8, [X21+88]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X0, [X20+40]
	217 Compare X0, 0
	218 JumpIfEqual {299}
	219 Move W10, [X0+28]
	220 Move X8, [X0+16]
	221 Move X9, [X25]
	222 Add W10, W10, 1
	223 Move [X0+28], W10
	224 Compare X8, 0
	225 JumpIfEqual {300}
	226 NotImplemented "Instruction LDRSW not yet implemented."
	227 Move W11, [X8+24]
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Add W9, W10, 1
	230 Add X8, X8, X10
	231 Move [X0+24], W9
	232 Move [X8+32], X21
	233 Move X8, [X9+32]
	234 Move X8, [X8+192]
	235 Move X2, [X8+112]
	236 Move X1, X21
	237 Call List`1<Object>.AddWithResize, X0, X1
	238 Move V1, [X20+64]
	239 Move V0, [X20+80]
	240 Move W8, [X21+88]
	241 Move V2, [X21+84]
	242 Compare W8, 0
	243 JumpIfEqual {247}
	244 Multiply S2, S0, S2
	245 Move S3, W26
	246 NotImplemented "Instruction FDIV not yet implemented."
	247 Add S1, S1, S2
	248 Move [X20+64], S1
	249 Move V1, [X20+68]
	250 Move W8, [X21+80]
	251 Move V2, [X21+76]
	252 Compare W8, 0
	253 JumpIfEqual {257}
	254 Multiply S0, S0, S2
	255 Move S2, W26
	256 NotImplemented "Instruction FDIV not yet implemented."
	257 Add S0, S1, S2
	258 Move [X20+68], S0
	259 Move X21, X31
	260 Compare X19, 0
	261 JumpIfEqual {283}
	262 Move X8, [X19]
	263 Move X1, [X22]
	264 NotImplemented "Instruction LDRH not yet implemented."
	265 Compare X9, 0
	266 JumpIfEqual {273}
	267 Move X10, [X8+176]
	268 Add X10, X10, 8
	269 NotImplemented "Instruction LDUR not yet implemented."
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Subtract X9, X9, 1
	272 Add X10, X10, 16
	273 Move X0, X19
	274 Move W2, W31
	275 Call 0x1C5D788
	276 NotImplemented "Instruction LDRSW not yet implemented."
	277 Add X8, X8, X9
	278 Add X0, X8, 312
	279 Move X8, [X0]
	280 Move X1, [X0+8]
	281 Move X0, X19
	282 NotImplemented "Instruction BLR not yet implemented."
	283 Compare X21, 0
	284 JumpIfNotEqual {307}
	285 Move X20, [X31+64]
	286 Move X19, [X31+72]
	287 Move X22, [X31+48]
	288 Move X21, [X31+56]
	289 Move X24, [X31+32]
	290 Move X23, [X31+40]
	291 Move X26, [X31+16]
	292 Move X25, [X31+24]
	293 Move X30, [X31+80]
	294 Return 
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Call 0x1C17F20
	298 Call 0x1C17F20
	299 Call 0x1C17F20
	300 Call 0x1C17F20
	301 Call 0x1C17F20
	302 Call 0x1C17F20
	303 Call 0x1C17F20
	304 Call 0x1C17F20
	305 Call 0x1C17F20
	306 Call 0x1C17F20
	307 Move X0, X21
	308 Call 0x1C17F18
	309 Move X20, X0
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move X0, X20
	312 Call 0x3EB2AD0
	313 Move X21, [X0]
	314 Call 0x3EB2AE0
	315 Move X21, X31
	316 Move X20, X0
	317 Compare X19, 0
	318 JumpIfEqual {340}
	319 Move X8, [X19]
	320 Move X1, [X22]
	321 NotImplemented "Instruction LDRH not yet implemented."
	322 Compare X9, 0
	323 JumpIfEqual {330}
	324 Move X10, [X8+176]
	325 Add X10, X10, 8
	326 NotImplemented "Instruction LDUR not yet implemented."
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Subtract X9, X9, 1
	329 Add X10, X10, 16
	330 Move X0, X19
	331 Move W2, W31
	332 Call 0x1C5D788
	333 NotImplemented "Instruction LDRSW not yet implemented."
	334 Add X8, X8, X9
	335 Add X0, X8, 312
	336 Move X8, [X0]
	337 Move X1, [X0+8]
	338 Move X0, X19
	339 NotImplemented "Instruction BLR not yet implemented."
	340 Compare X21, 0
	341 JumpIfNotEqual {344}
	342 Move X0, X20
	343 Call 0x1D2D690
	344 Move X0, X21
	345 Call 0x1C17F18
	346 Call 0x1991590

Method: System.Void UpdateMinAndMaxColumnsWidth()

Disassembly:
	0x03D73260 FCMP S0, 0x0
	0x03D73264 B.LE 0x3D73288
	0x03D73268 MOV X0, X20
	0x03D7326C MOV X1, X24
	0x03D73270 BL 0x3D72634
	0x03D73274 FADD S0, S11, S0
	0x03D73278 MOV X0, X20
	0x03D7327C MOV X1, X24
	0x03D73280 MOV W2, W22
	0x03D73284 BL 0x3D73468
	0x03D73288 LDR V0, [X21 + 0x10]
	0x03D7328C FSUB S8, S8, S11
	0x03D73290 FCMP S8, 0x0
	0x03D73294 FSUB S0, S0, S9
	0x03D73298 STR S0, [X21 + 0x10]
	0x03D7329C B.LS 0x3D732B0
	0x03D732A0 LDR W8, [X19 + 0x18]
	0x03D732A4 ADD W23, W23, 0x1
	0x03D732A8 CMP W23, W8
	0x03D732AC B.LT 0x3D731B8
	0x03D732B0 MOV V0.16B, V8.16B
	0x03D732B4 LDP X20, X19, [X31 + 0x70]
	0x03D732B8 LDP X22, X21, [X31 + 0x60]
	0x03D732BC LDP X24, X23, [X31 + 0x50]
	0x03D732C0 LDP X26, X25, [X31 + 0x40]
	0x03D732C4 LDP X30, X27, [X31 + 0x30]
	0x03D732C8 LDP D9, D8, [X31 + 0x20]
	0x03D732CC LDP D11, D10, [X31 + 0x10]
	0x03D732D0 LDP D13, D12, [X31], #0x80
	0x03D732D4 RET
	0x03D732D8 BL 0x1C16F20
	0x03D732DC STR D10, [X31 - 0x60]!
	0x03D732E0 STP D9, D8, [X31 + 0x8]
	0x03D732E4 STR X30, [X31 + 0x18]
	0x03D732E8 STP X26, X25, [X31 + 0x20]
	0x03D732EC STP X24, X23, [X31 + 0x30]
	0x03D732F0 STP X22, X21, [X31 + 0x40]
	0x03D732F4 STP X20, X19, [X31 + 0x50]
	0x03D732F8 ADRP X21, 0x674000
	0x03D732FC LDRB W8, [X21 + 0xD33]
	0x03D73300 MOV W22, W2
	0x03D73304 MOV V8.16B, V0.16B
	0x03D73308 MOV X19, X1
	0x03D7330C MOV X20, X0
	0x03D73310 TBNZ X8, 0x0, 0x3D73340
	0x03D73314 ADRP X0, 0x3F3000
	0x03D73318 LDR X0, [X0 + 0xD70]
	0x03D7331C BL 0x1C16CF4
	0x03D73320 ADRP X0, 0x3F3000
	0x03D73324 LDR X0, [X0 + 0xE10]
	0x03D73328 BL 0x1C16CF4
	0x03D7332C ADRP X0, 0x380000
	0x03D73330 LDR X0, [X0 + 0x5A8]
	0x03D73334 BL 0x1C16CF4
	0x03D73338 MOVZ W8, 0x1
	0x03D7333C STRB W8, [X21 + 0xD33]
	0x03D73340 FCMP S8, 0x0
	0x03D73344 B.LE 0x3D73438
	0x03D73348 CBZ X19, 0x3D7345C
	0x03D7334C LDR W8, [X19 + 0x18]
	0x03D73350 CMP W8, 0x1
	0x03D73354 B.LT 0x3D73438
	0x03D73358 ADRP X24, 0x3F3000
	0x03D7335C ADRP X25, 0x380000
	0x03D73360 LDR X24, [X24 + 0xE10]
	0x03D73364 LDR X25, [X25 + 0x5A8]
	0x03D73368 MOV W21, W31
	0x03D7336C AND W22, W22, 0x1
	0x03D73370 MOVZ W26, 0x42C80000
	0x03D73374 LDR X2, [X24]
	0x03D73378 MOV X0, X19
	0x03D7337C MOV W1, W21
	0x03D73380 BL 0x301BCCC
	0x03D73384 MOV X23, X0
	0x03D73388 MOV X0, X20
	0x03D7338C MOV X1, X23
	0x03D73390 BL 0x3D72634
	0x03D73394 CBZ X23, 0x3D7345C
	0x03D73398 LDR W8, [X23 + 0x58]
	0x03D7339C LDR V10, [X23 + 0x54]
	0x03D733A0 CBZ W8, 0x3D733B4
	0x03D733A4 LDR V1, [X20 + 0x50]
	0x03D733A8 FMOV S2, W26
	0x03D733AC FMUL S1, S1, S10
	0x03D733B0 FDIV S10, S1, S2
	0x03D733B4 FCMP S0, S10
	0x03D733B8 FMOV S9, W31
	0x03D733BC B.PL 0x3D7341C
	0x03D733C0 MOV X0, X20
	0x03D733C4 MOV X1, X23
	0x03D733C8 BL 0x3D72634
	0x03D733CC LDR X0, [X25]
	0x03D733D0 MOV V9.16B, V0.16B
	0x03D733D4 LDR W8, [X0 + 0xE0]
	0x03D733D8 CBNZ W8, 0x3D733E0
	0x03D733DC BL 0x1C16DFC
	0x03D733E0 FABD S1, S10, S10
	0x03D733E4 MOV V0.16B, V8.16B
	0x03D733E8 MOV X0, X31
	0x03D733EC BL 0x337EEBC
	0x03D733F0 MOV V9.16B, V0.16B
	0x03D733F4 FCMP S0, 0x0
	0x03D733F8 B.LE 0x3D7341C
	0x03D733FC MOV X0, X20
	0x03D73400 MOV X1, X23
	0x03D73404 BL 0x3D72634
	0x03D73408 FADD S0, S9, S0
	0x03D7340C MOV X0, X20
	0x03D73410 MOV X1, X23
	0x03D73414 MOV W2, W22
	0x03D73418 BL 0x3D73468
	0x03D7341C FSUB S8, S8, S9
	0x03D73420 FCMP S8, 0x0
	0x03D73424 B.LS 0x3D73438
	0x03D73428 LDR W8, [X19 + 0x18]
	0x03D7342C ADD W21, W21, 0x1
	0x03D73430 CMP W21, W8
	0x03D73434 B.LT 0x3D73374
	0x03D73438 MOV V0.16B, V8.16B
	0x03D7343C LDP X20, X19, [X31 + 0x50]
	0x03D73440 LDP X22, X21, [X31 + 0x40]
	0x03D73444 LDP X24, X23, [X31 + 0x30]
	0x03D73448 LDP X26, X25, [X31 + 0x20]
	0x03D7344C LDR X30, [X31 + 0x18]
	0x03D73450 LDP D9, D8, [X31 + 0x8]
	0x03D73454 LDR V10, [X31], #0x60
	0x03D73458 RET
	0x03D7345C BL 0x1C16F20
	0x03D73460 MOV X1, X31
	0x03D73464 B 0x33BDD8C
	0x03D73468 SUB X31, X31, 0x40
	0x03D7346C STR D8, [X31 + 0x10]
	0x03D73470 STR X30, [X31 + 0x18]
	0x03D73474 STP X22, X21, [X31 + 0x20]
	0x03D73478 STP X20, X19, [X31 + 0x30]
	0x03D7347C ADRP X22, 0x674000
	0x03D73480 LDRB W8, [X22 + 0xD35]
	0x03D73484 MOV W20, W2
	0x03D73488 MOV V8.16B, V0.16B
	0x03D7348C MOV X19, X1
	0x03D73490 MOV X21, X0
	0x03D73494 TBNZ X8, 0x0, 0x3D734AC
	0x03D73498 ADRP X0, 0x3F3000
	0x03D7349C LDR X0, [X0 + 0xE50]
	0x03D734A0 BL 0x1C16CF4
	0x03D734A4 MOVZ W8, 0x1
	0x03D734A8 STRB W8, [X22 + 0xD35]
	0x03D734AC STR X31, [X31 + 0x8]
	0x03D734B0 LDR V0, [X21 + 0x50]
	0x03D734B4 MOVZ W8, 0x42C80000
	0x03D734B8 FMOV S1, W8
	0x03D734BC ADD X0, X31, 0x8
	0x03D734C0 FDIV S0, S8, S0
	0x03D734C4 FMUL S0, S0, S1
	0x03D734C8 MOVZ W1, 0x1
	0x03D734CC MOV X2, X31
	0x03D734D0 BL 0x3DFD43C
	0x03D734D4 LDRB W8, [X21 + 0x54]
	0x03D734D8 CBZ W8, 0x3D73514
	0x03D734DC LDR X0, [X21 + 0x80]
	0x03D734E0 CBZ X0, 0x3D73580
	0x03D734E4 ADRP X8, 0x3F3000
	0x03D734E8 LDR X8, [X8 + 0xE50]
	0x03D734EC MOV X1, X19
	0x03D734F0 MOV V0.16B, V8.16B
	0x03D734F4 LDR X2, [X8]
	0x03D734F8 BL 0x2AB4A74
	0x03D734FC LDP X20, X19, [X31 + 0x30]
	0x03D73500 LDP X22, X21, [X31 + 0x20]
	0x03D73504 LDR X30, [X31 + 0x18]
	0x03D73508 LDR V8, [X31 + 0x10]
	0x03D7350C ADD X31, X31, 0x40
	0x03D73510 RET
	0x03D73514 TBZ X20, 0x0, 0x3D73520
	0x03D73518 CBNZ X19, 0x3D73550
	0x03D7351C B 0x3D73580
	0x03D73520 CBZ X19, 0x3D73580
	0x03D73524 LDR W8, [X19 + 0x48]
	0x03D73528 CMP W8, 0x1
	0x03D7352C B.NE 0x3D73538
	0x03D73530 LDR X1, [X31 + 0x8]
	0x03D73534 B 0x3D73548
	0x03D73538 MOV V0.16B, V8.16B
	0x03D7353C MOV X0, X31
	0x03D73540 BL 0x3DFD518
	0x03D73544 MOV X1, X0
	0x03D73548 MOV X0, X19
	0x03D7354C BL 0x3D6F940
	0x03D73550 LDR V0, [X19 + 0x5C]
	0x03D73554 FCMP S0, S8
	0x03D73558 B.EQ 0x3D734FC
	0x03D7355C LDR X8, [X19 + 0xB8]
	0x03D73560 STR S8, [X19 + 0x5C]
	0x03D73564 CBZ X8, 0x3D734FC
	0x03D73568 LDR X9, [X8 + 0x18]
	0x03D7356C LDR X0, [X8 + 0x40]
	0x03D73570 LDR X2, [X8 + 0x28]
	0x03D73574 MOV X1, X19
	0x03D73578 BLR X9
	0x03D7357C B 0x3D734FC
	0x03D73580 BL 0x1C16F20
	0x03D73584 MOV X1, X31
	0x03D73588 B 0x33BDD8C
	0x03D7358C STR D10, [X31 - 0x50]!
	0x03D73590 STP D9, D8, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x675000
	009 Move W8, [X19+3388]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x381000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0x3AA000
	019 Move X0, [X0+272]
	020 Call 0x1C17CF4
	021 Move X0, 0x3AA000
	022 Move X0, [X0+280]
	023 Call 0x1C17CF4
	024 Move X0, 0x381000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+3388], W8
	029 Move X19, [X20+48]
	030 Move [X20+64], X31
	031 Compare X19, 0
	032 JumpIfEqual {175}
	033 Move X0, X19
	034 Call Columns.UpdateVisibleColumns, X0
	035 Move X19, [X19+32]
	036 Compare X19, 0
	037 JumpIfEqual {175}
	038 Move X10, 0x3AA000
	039 Move X8, [X19]
	040 Move X10, [X10+272]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move X0, X19
	052 Move W2, W31
	053 Call 0x1C5D788
	054 NotImplemented "Instruction LDRSW not yet implemented."
	055 Add X8, X8, X9
	056 Add X0, X8, 312
	057 Move X8, [X0]
	058 Move X1, [X0+8]
	059 Move X21, 0x381000
	060 Move X21, [X21+3584]
	061 Move X0, X19
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X19, X0
	064 Compare X0, 0
	065 JumpIfEqual {176}
	066 Move X22, 0x381000
	067 Move X23, 0x3AA000
	068 Move X22, [X22+3608]
	069 Move X23, [X23+280]
	070 Move W24, 0x42C80000
	071 Move X8, [X19]
	072 Move X1, [X22]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move X0, X19
	083 Move W2, W31
	084 Call 0x1C5D788
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Add X8, X8, X9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X1, [X0+8]
	090 Move X0, X19
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {140}
	096 Move X8, [X19]
	097 Move X1, [X23]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move X0, X19
	108 Move W2, W31
	109 Call 0x1C5D788
	110 NotImplemented "Instruction LDRSW not yet implemented."
	111 Add X8, X8, X9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X1, [X0+8]
	115 Move X0, X19
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Compare X0, 0
	118 JumpIfEqual {174}
	119 Move V0, [X20+80]
	120 Move W8, [X0+88]
	121 Move V1, [X0+84]
	122 Compare W8, 0
	123 JumpIfEqual {127}
	124 Multiply S1, S0, S1
	125 Move S2, W24
	126 NotImplemented "Instruction FDIV not yet implemented."
	127 Move V2, [X20+64]
	128 Add S1, S2, S1
	129 Move [X20+64], S1
	130 Move W8, [X0+80]
	131 Move V1, [X0+76]
	132 Compare W8, 0
	133 JumpIfEqual {137}
	134 Multiply S0, S0, S1
	135 Move S1, W24
	136 NotImplemented "Instruction FDIV not yet implemented."
	137 Move V0, [X20+68]
	138 Add S0, S0, S1
	139 Move [X20+68], S0
	140 Move X20, X31
	141 Compare X19, 0
	142 JumpIfEqual {164}
	143 Move X8, [X19]
	144 Move X1, [X21]
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move X0, X19
	155 Move W2, W31
	156 Call 0x1C5D788
	157 NotImplemented "Instruction LDRSW not yet implemented."
	158 Add X8, X8, X9
	159 Add X0, X8, 312
	160 Move X8, [X0]
	161 Move X1, [X0+8]
	162 Move X0, X19
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Compare X20, 0
	165 JumpIfNotEqual {177}
	166 Move X20, [X31+48]
	167 Move X19, [X31+56]
	168 Move X22, [X31+32]
	169 Move X21, [X31+40]
	170 Move X24, [X31+16]
	171 Move X23, [X31+24]
	172 Move X30, [X31+64]
	173 Return 
	174 Call 0x1C17F20
	175 Call 0x1C17F20
	176 Call 0x1C17F20
	177 Move X0, X20
	178 Call 0x1C17F18
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Call 0x3EB2AD0
	181 Move X20, [X0]
	182 Call 0x3EB2AE0
	183 Move [X31+8], X0
	184 Move X20, X31
	185 Move [X31+8], X0
	186 Compare X19, 0
	187 JumpIfEqual {209}
	188 Move X8, [X19]
	189 Move X1, [X21]
	190 NotImplemented "Instruction LDRH not yet implemented."
	191 Compare X9, 0
	192 JumpIfEqual {199}
	193 Move X10, [X8+176]
	194 Add X10, X10, 8
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Subtract X9, X9, 1
	198 Add X10, X10, 16
	199 Move X0, X19
	200 Move W2, W31
	201 Call 0x1C5D788
	202 NotImplemented "Instruction LDRSW not yet implemented."
	203 Add X8, X8, X9
	204 Add X0, X8, 312
	205 Move X8, [X0]
	206 Move X1, [X0+8]
	207 Move X0, X19
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Compare X20, 0
	210 JumpIfNotEqual {213}
	211 Move X0, [X31+8]
	212 Call 0x1D2D690
	213 Move X0, X20
	214 Call 0x1C17F18
	215 Call 0x1991590

Method: System.Void ClearCache()

Disassembly:
	0x03D71CF4 MOV X0, X22
	0x03D71CF8 BLR X8
	0x03D71CFC CBNZ X23, 0x3D71D08
	0x03D71D00 MOV X0, X21
	0x03D71D04 BL 0x1D2C690
	0x03D71D08 MOV X0, X23
	0x03D71D0C BL 0x1C16F18
	0x03D71D10 BL 0x1990590
	0x03D71D14 STR X30, [X31 - 0x50]!
	0x03D71D18 STP X26, X25, [X31 + 0x10]
	0x03D71D1C STP X24, X23, [X31 + 0x20]
	0x03D71D20 STP X22, X21, [X31 + 0x30]
	0x03D71D24 STP X20, X19, [X31 + 0x40]
	0x03D71D28 ADRP X19, 0x676000
	0x03D71D2C LDRB W8, [X19 + 0xD3B]
	0x03D71D30 MOV X20, X0
	0x03D71D34 TBNZ X8, 0x0, 0x3D71D7C
	0x03D71D38 ADRP X0, 0x382000
	0x03D71D3C LDR X0, [X0 + 0xE00]
	0x03D71D40 BL 0x1C16CF4
	0x03D71D44 ADRP X0, 0x3AB000
	0x03D71D48 LDR X0, [X0 + 0x110]
	0x03D71D4C BL 0x1C16CF4
	0x03D71D50 ADRP X0, 0x3AB000
	0x03D71D54 LDR X0, [X0 + 0x118]
	0x03D71D58 BL 0x1C16CF4
	0x03D71D5C ADRP X0, 0x382000
	0x03D71D60 LDR X0, [X0 + 0xE18]
	0x03D71D64 BL 0x1C16CF4
	0x03D71D68 ADRP X0, 0x3F5000
	0x03D71D6C LDR X0, [X0 + 0xDE8]
	0x03D71D70 BL 0x1C16CF4
	0x03D71D74 MOVZ W8, 0x1
	0x03D71D78 STRB W8, [X19 + 0xD3B]
	0x03D71D7C MOV X0, X20
	0x03D71D80 BL 0x3D70CF4
	0x03D71D84 LDR X19, [X20 + 0x30]
	0x03D71D88 CBZ X19, 0x3D72180
	0x03D71D8C MOV X0, X19
	0x03D71D90 BL 0x3D746E4
	0x03D71D94 LDR X19, [X19 + 0x20]
	0x03D71D98 CBZ X19, 0x3D72180
	0x03D71D9C ADRP X10, 0x3AB000
	0x03D71DA0 LDR X8, [X19]
	0x03D71DA4 LDR X10, [X10 + 0x110]
	0x03D71DA8 LDRH W9, [X8 + 0x12E]
	0x03D71DAC LDR X1, [X10]
	0x03D71DB0 CBZ X9, 0x3D71DD4
	0x03D71DB4 LDR X10, [X8 + 0xB0]
	0x03D71DB8 ADD X10, X10, 0x8
	0x03D71DBC LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x677000
	005 Move W8, [X20+3389]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3F6000
	012 Move X0, [X0+3504]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3389], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {62}
	019 Move W2, [X8+24]
	020 Move W9, [X8+28]
	021 Add W9, W9, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move [X8+24], W31
	024 Move [X8+28], W9
	025 Move X0, [X8+16]
	026 Move W1, W31
	027 Move X3, X31
	028 Call Array.Clear, X0, X1, X2
	029 Move X8, [X19+32]
	030 Compare X8, 0
	031 JumpIfEqual {62}
	032 Move W2, [X8+24]
	033 Move W9, [X8+28]
	034 Add W9, W9, 1
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move [X8+24], W31
	037 Move [X8+28], W9
	038 Move X0, [X8+16]
	039 Move W1, W31
	040 Move X3, X31
	041 Call Array.Clear, X0, X1, X2
	042 Move X8, [X19+24]
	043 Compare X8, 0
	044 JumpIfEqual {62}
	045 Move W2, [X8+24]
	046 Move W9, [X8+28]
	047 Add W9, W9, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X8+24], W31
	050 Move [X8+28], W9
	051 Move X0, [X8+16]
	052 Move W1, W31
	053 Move X3, X31
	054 Call Array.Clear, X0, X1, X2
	055 Move W8, 1
	056 Move [X19+64], X31
	057 Move [X19+60], W8
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Return 
	062 Call 0x1C17F20

Method: System.Int32 <DoLayout>b__49_0(UnityEngine.UIElements.Column c1, UnityEngine.UIElements.Column c2)

Disassembly:
	0x03D75348 CMP X11, X1
	0x03D7534C B.EQ 0x3D7536C
	0x03D75350 SUBS X9, X9, 0x1
	0x03D75354 ADD X10, X10, 0x10
	0x03D75358 B.NE 0x3D75344
	0x03D7535C MOV X0, X20
	0x03D75360 MOV W2, W31
	0x03D75364 BL 0x1C5C788
	0x03D75368 B 0x3D75378
	0x03D7536C LDRSW X9, [X10]
	0x03D75370 ADD X8, X8, X9, 0x4, LSL
	0x03D75374 ADD X0, X8, 0x138
	0x03D75378 LDP X8, X1, [X0]
	0x03D7537C MOV X0, X20
	0x03D75380 BLR X8
	0x03D75384 CMP W0, 0x0
	0x03D75388 B.LE 0x3D75464
	0x03D7538C LDR X20, [X19 + 0x10]
	0x03D75390 CBZ X20, 0x3D75460
	0x03D75394 LDR X8, [X20]
	0x03D75398 LDR X1, [X22]
	0x03D7539C LDRH W9, [X8 + 0x12E]
	0x03D753A0 CBZ X9, 0x3D753C4
	0x03D753A4 LDR X10, [X8 + 0xB0]
	0x03D753A8 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {29}
	004 Move V1, [X0+80]
	005 Move W8, [X1+88]
	006 Move V0, [X1+84]
	007 Compare W8, 0
	008 JumpIfEqual {13}
	009 Move W8, 0x42C80000
	010 Multiply S0, S1, S0
	011 Move S2, W8
	012 NotImplemented "Instruction FDIV not yet implemented."
	013 Move [X31+12], S0
	014 Compare X2, 0
	015 JumpIfEqual {29}
	016 Move W8, [X2+88]
	017 Move V0, [X2+84]
	018 Compare W8, 0
	019 JumpIfEqual {24}
	020 Move W8, 0x42C80000
	021 Multiply S0, S1, S0
	022 Move S1, W8
	023 NotImplemented "Instruction FDIV not yet implemented."
	024 Add X0, X31, 12
	025 Move X1, X31
	026 Call Single.CompareTo, X0, V0
	027 Move X30, [X31+16]
	028 Return X0
	029 Call 0x1C17F20

Method: System.Int32 <DoLayout>b__49_1(UnityEngine.UIElements.Column c1, UnityEngine.UIElements.Column c2)

Disassembly:
	0x03D753AC LDUR X11, [X10 - 0x8]
	0x03D753B0 CMP X11, X1
	0x03D753B4 B.EQ 0x3D753D4
	0x03D753B8 SUBS X9, X9, 0x1
	0x03D753BC ADD X10, X10, 0x10
	0x03D753C0 B.NE 0x3D753AC
	0x03D753C4 MOV X0, X20
	0x03D753C8 MOV W2, W31
	0x03D753CC BL 0x1C5C788
	0x03D753D0 B 0x3D753E0
	0x03D753D4 LDRSW X9, [X10]
	0x03D753D8 ADD X8, X8, X9, 0x4, LSL
	0x03D753DC ADD X0, X8, 0x138
	0x03D753E0 LDP X8, X1, [X0]
	0x03D753E4 MOV X0, X20
	0x03D753E8 BLR X8
	0x03D753EC LDR X8, [X20]
	0x03D753F0 LDR X1, [X23]
	0x03D753F4 SUB W21, W0, 0x1
	0x03D753F8 LDRH W9, [X8 + 0x12E]
	0x03D753FC CBZ X9, 0x3D75420
	0x03D75400 LDR X10, [X8 + 0xB0]
	0x03D75404 ADD X10, X10, 0x8
	0x03D75408 LDUR X11, [X10 - 0x8]
	0x03D7540C CMP X11, X1

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {29}
	004 Move V1, [X0+80]
	005 Move W8, [X1+88]
	006 Move V0, [X1+84]
	007 Compare W8, 0
	008 JumpIfEqual {13}
	009 Move W8, 0x42C80000
	010 Multiply S0, S1, S0
	011 Move S2, W8
	012 NotImplemented "Instruction FDIV not yet implemented."
	013 Move [X31+12], S0
	014 Compare X2, 0
	015 JumpIfEqual {29}
	016 Move W8, [X2+88]
	017 Move V0, [X2+84]
	018 Compare W8, 0
	019 JumpIfEqual {24}
	020 Move W8, 0x42C80000
	021 Multiply S0, S1, S0
	022 Move S1, W8
	023 NotImplemented "Instruction FDIV not yet implemented."
	024 Add X0, X31, 12
	025 Move X1, X31
	026 Call Single.CompareTo, X0, V0
	027 Move X30, [X31+16]
	028 Return X0
	029 Call 0x1C17F20

Method: System.Int32 <RecomputeToMaxWidthProportionally>b__53_0(UnityEngine.UIElements.Column c1, UnityEngine.UIElements.Column c2)

Disassembly:
	0x03D75410 B.EQ 0x3D75430
	0x03D75414 SUBS X9, X9, 0x1
	0x03D75418 ADD X10, X10, 0x10
	0x03D7541C B.NE 0x3D75408
	0x03D75420 MOV X0, X20
	0x03D75424 MOV W2, W31
	0x03D75428 BL 0x1C5C788
	0x03D7542C B 0x3D7543C
	0x03D75430 LDRSW X9, [X10]
	0x03D75434 ADD X8, X8, X9, 0x4, LSL
	0x03D75438 ADD X0, X8, 0x138
	0x03D7543C LDP X8, X2, [X0]
	0x03D75440 MOV X0, X20
	0x03D75444 MOV W1, W21
	0x03D75448 BLR X8
	0x03D7544C MOV X1, X0
	0x03D75450 MOV X0, X19
	0x03D75454 BL 0x3D75474
	0x03D75458 LDR X20, [X19 + 0x10]
	0x03D7545C CBNZ X20, 0x3D7532C
	0x03D75460 BL 0x1C16F20
	0x03D75464 LDP X20, X19, [X31 + 0x20]
	0x03D75468 LDP X22, X21, [X31 + 0x10]
	0x03D7546C LDP X30, X23, [X31], #0x30
	0x03D75470 RET

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {29}
	004 Move V1, [X0+80]
	005 Move W8, [X1+88]
	006 Move V0, [X1+84]
	007 Compare W8, 0
	008 JumpIfEqual {13}
	009 Move W8, 0x42C80000
	010 Multiply S0, S1, S0
	011 Move S2, W8
	012 NotImplemented "Instruction FDIV not yet implemented."
	013 Move [X31+12], S0
	014 Compare X2, 0
	015 JumpIfEqual {29}
	016 Move W8, [X2+88]
	017 Move V0, [X2+84]
	018 Compare W8, 0
	019 JumpIfEqual {24}
	020 Move W8, 0x42C80000
	021 Multiply S0, S1, S0
	022 Move S1, W8
	023 NotImplemented "Instruction FDIV not yet implemented."
	024 Add X0, X31, 12
	025 Move X1, X31
	026 Call Single.CompareTo, X0, V0
	027 Move X30, [X31+16]
	028 Return X0
	029 Call 0x1C17F20

Method: System.Int32 <RecomputeToMinWidthProportionally>b__54_0(UnityEngine.UIElements.Column c1, UnityEngine.UIElements.Column c2)

Disassembly:
	0x03D75474 STP X30, X21, [X31 - 0x20]!
	0x03D75478 STP X20, X19, [X31 + 0x10]
	0x03D7547C ADRP X21, 0x672000
	0x03D75480 LDRB W8, [X21 + 0xD50]
	0x03D75484 MOV X19, X1
	0x03D75488 MOV X20, X0
	0x03D7548C TBNZ X8, 0x0, 0x3D754E0
	0x03D75490 ADRP X0, 0x3F1000
	0x03D75494 LDR X0, [X0 + 0x650]
	0x03D75498 BL 0x1C16CF4
	0x03D7549C ADRP X0, 0x3F1000
	0x03D754A0 LDR X0, [X0 + 0x658]
	0x03D754A4 BL 0x1C16CF4
	0x03D754A8 ADRP X0, 0x3F1000
	0x03D754AC LDR X0, [X0 + 0xEF0]
	0x03D754B0 BL 0x1C16CF4
	0x03D754B4 ADRP X0, 0x3F1000
	0x03D754B8 LDR X0, [X0 + 0xEF8]
	0x03D754BC BL 0x1C16CF4
	0x03D754C0 ADRP X0, 0x3F1000
	0x03D754C4 LDR X0, [X0 + 0xDA8]
	0x03D754C8 BL 0x1C16CF4
	0x03D754CC ADRP X0, 0x3F1000
	0x03D754D0 LDR X0, [X0 + 0xF20]
	0x03D754D4 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Compare X2, 0
	003 JumpIfEqual {29}
	004 Move V1, [X0+80]
	005 Move W8, [X2+80]
	006 Move V0, [X2+76]
	007 Compare W8, 0
	008 JumpIfEqual {13}
	009 Move W8, 0x42C80000
	010 Multiply S0, S1, S0
	011 Move S2, W8
	012 NotImplemented "Instruction FDIV not yet implemented."
	013 Move [X31+12], S0
	014 Compare X1, 0
	015 JumpIfEqual {29}
	016 Move W8, [X1+80]
	017 Move V0, [X1+76]
	018 Compare W8, 0
	019 JumpIfEqual {24}
	020 Move W8, 0x42C80000
	021 Multiply S0, S1, S0
	022 Move S1, W8
	023 NotImplemented "Instruction FDIV not yet implemented."
	024 Add X0, X31, 12
	025 Move X1, X31
	026 Call Single.CompareTo, X0, V0
	027 Move X30, [X31+16]
	028 Return X0
	029 Call 0x1C17F20

