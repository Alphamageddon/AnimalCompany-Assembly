Type: UnityEngine.UIElements.UITKTextHandle

Method: System.Void .ctor(UnityEngine.UIElements.TextElement te)

Disassembly:
	0x03E0D7A4 B.CS 0x3E0D868
	0x03E0D7A8 MOVZ W9, 0x30
	0x03E0D7AC UMADDL X8, X20, X9, X8
	0x03E0D7B0 LDP V0, V1, [X8 + 0x20]
	0x03E0D7B4 LDR V2, [X8 + 0x4]
	0x03E0D7B8 MOVZ W9, 0xAFB9
	0x03E0D7BC MOVK W9, 0x260000
	0x03E0D7C0 STP V0, V1, [X31]
	0x03E0D7C4 LDR W8, [X31]
	0x03E0D7C8 STR V2, [X31 + 0x2]
	0x03E0D7CC CMP W8, W9
	0x03E0D7D0 B.NE 0x3E0D84C
	0x03E0D7D4 LDR X8, [X31 + 0x18]
	0x03E0D7D8 CBZ X8, 0x3E0D84C
	0x03E0D7DC LDR W8, [X31 + 0x8]
	0x03E0D7E0 CMP W8, 0x1
	0x03E0D7E4 B.LT 0x3E0D84C
	0x03E0D7E8 ADD X0, X31, 0x0
	0x03E0D7EC MOV X1, X31
	0x03E0D7F0 BL 0x3CA8F90
	0x03E0D7F4 ADRP X8, 0x2E8000
	0x03E0D7F8 LDR X8, [X8 + 0xA28]
	0x03E0D7FC MOV X19, X0
	0x03E0D800 LDR X8, [X8]
	0x03E0D804 LDR W9, [X8 + 0xE0]
	0x03E0D808 CBNZ W9, 0x3E0D814
	0x03E0D80C MOV X0, X8
	0x03E0D810 BL 0x1C16DFC
	0x03E0D814 MOVZ W1, 0x1
	0x03E0D818 MOV X0, X19
	0x03E0D81C MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5DC000
	007 Move X21, 0x355000
	008 Move W8, [X22+860]
	009 Move X21, [X21+3544]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x355000
	017 Move X0, [X0+3544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+860], W8
	021 Move TEMP, 0
	022 Not TEMP
	023 Move W8, TEMP
	024 Move [X20+80], W31
	025 Move [X20+84], W8
	026 NotImplemented "Instruction STRH not yet implemented."
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X20
	033 Move X1, X31
	034 Call TextHandle..ctor, X0
	035 Move [X20+72], X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return 

Method: UnityEngine.Vector2 get_MeasuredSizes()

Disassembly:
	0x03E0D820 BL 0x3624AE4
	0x03E0D824 TBZ X0, 0x0, 0x3E0D84C

ISIL:
	001 Move S0, [X0+52]
	002 Move S1, [X0+56]
	003 Return X0

Method: System.Void set_MeasuredSizes(UnityEngine.Vector2 value)

Disassembly:
	0x03E0D828 ADRP X8, 0x2E6000
	0x03E0D82C LDR X8, [X8 + 0x970]

ISIL:
	001 Move [X0+52], S0
	002 Move [X0+60], S1
	003 Return 

Method: UnityEngine.Vector2 get_RoundedSizes()

Disassembly:
	0x03E0D830 LDR X0, [X8]
	0x03E0D834 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move S0, [X0+60]
	002 Move S1, [X0+64]
	003 Return X0

Method: System.Void set_RoundedSizes(UnityEngine.Vector2 value)

Disassembly:
	0x03E0D838 CBNZ W8, 0x3E0D840
	0x03E0D83C BL 0x1C16DFC

ISIL:
	001 Move [X0+60], S0
	002 Move [X0+68], S1
	003 Return 

Method: System.Single ComputeTextWidth(System.String textToMeasure, System.Boolean wordWrap, System.Single width, System.Single height)

Disassembly:
	0x03E0D840 MOV X0, X19
	0x03E0D844 MOV X1, X31
	0x03E0D848 BL 0x3C01A38
	0x03E0D84C LDP X20, X19, [X31 + 0x60]
	0x03E0D850 LDP X30, X21, [X31 + 0x50]
	0x03E0D854 LDP D9, D8, [X31 + 0x40]
	0x03E0D858 LDP D11, D10, [X31 + 0x30]
	0x03E0D85C ADD X31, X31, 0x70
	0x03E0D860 RET
	0x03E0D864 BL 0x1C16F20
	0x03E0D868 BL 0x1C16F28
	0x03E0D86C STRB W31, [X0 + 0x50]
	0x03E0D870 RET
	0x03E0D874 SUB X31, X31, 0x90
	0x03E0D878 STP D11, D10, [X31 + 0x50]
	0x03E0D87C STP D9, D8, [X31 + 0x60]
	0x03E0D880 STP X30, X21, [X31 + 0x70]
	0x03E0D884 STP X20, X19, [X31 + 0x80]
	0x03E0D888 ADRP X21, 0x5DB000
	0x03E0D88C LDRB W8, [X21 + 0x360]
	0x03E0D890 MOV X20, X1
	0x03E0D894 MOV X19, X0
	0x03E0D898 TBNZ X8, 0x0, 0x3E0D8C8
	0x03E0D89C ADRP X0, 0x30F000
	0x03E0D8A0 LDR X0, [X0 + 0xE88]
	0x03E0D8A4 BL 0x1C16CF4
	0x03E0D8A8 ADRP X0, 0x35A000
	0x03E0D8AC LDR X0, [X0 + 0xBE8]
	0x03E0D8B0 BL 0x1C16CF4
	0x03E0D8B4 ADRP X0, 0x355000
	0x03E0D8B8 LDR X0, [X0 + 0xA58]
	0x03E0D8BC BL 0x1C16CF4
	0x03E0D8C0 MOVZ W8, 0x1
	0x03E0D8C4 STRB W8, [X21 + 0x360]
	0x03E0D8C8 CBZ X20, 0x3E0DB24
	0x03E0D8CC LDR X0, [X19 + 0x48]
	0x03E0D8D0 CBZ X0, 0x3E0DB24
	0x03E0D8D4 LDP S10, S11, [X20 + 0xC0]
	0x03E0D8D8 LDR V8, [X20 + 0xC8]
	0x03E0D8DC MOV X1, X31
	0x03E0D8E0 BL 0x3DED364
	0x03E0D8E4 LDR X0, [X19 + 0x48]
	0x03E0D8E8 CBZ X0, 0x3E0DB24
	0x03E0D8EC MOV X1, X31
	0x03E0D8F0 MOV V9.16B, V0.16B
	0x03E0D8F4 BL 0x3DED364
	0x03E0D8F8 FSUB S0, S10, S9

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x5DC000
	010 Move X22, 0x355000
	011 Move W8, [X23+861]
	012 Move X22, [X22+3544]
	013 Move V8, V1
	014 Move V9, V0
	015 Move W20, W2
	016 Move X21, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x355000
	023 Move X0, [X0+3544]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+861], W8
	027 Move X0, [X22]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X22]
	033 Move X8, [X0+184]
	034 Move X0, X19
	035 Move X1, [X8+8]
	036 Call UITKTextHandle.ConvertUssToTextGenerationSettings, X0, X1
	037 Move X8, [X22]
	038 Move X9, [X8+184]
	039 Move X9, [X9+8]
	040 Compare X9, 0
	041 JumpIfEqual {64}
	042 Move [X9+16], X21
	043 Move [X9+24], X31
	044 Move [X9+32], S9
	045 Move [X9+40], S8
	046 Move X8, [X8+184]
	047 Move X1, [X8+8]
	048 Compare X1, 0
	049 JumpIfEqual {64}
	050 And W8, W20, 1
	051 Move X0, X19
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X22, [X31+32]
	055 Move X21, [X31+40]
	056 Move X30, [X31+16]
	057 Move X23, [X31+24]
	058 Move [X1+120], W8
	059 Move X2, X31
	060 Move D9, [X31+64]
	061 Move D8, [X31+72]
	062 Call TextHandle.ComputeTextWidth, X0, X1
	063 Return V0
	064 Call 0x1C17F20

Method: System.Single ComputeTextHeight(System.String textToMeasure, System.Single width, System.Single height)

Disassembly:
	0x03E0DC04 LDR W9, [X8 + 0x18]
	0x03E0DC08 CMP W21, W9
	0x03E0DC0C B.CS 0x3E0DD68
	0x03E0DC10 MOVZ W9, 0x30
	0x03E0DC14 UMADDL X8, X21, X9, X8
	0x03E0DC18 LDP V0, V1, [X8 + 0x20]
	0x03E0DC1C LDR V2, [X8 + 0x4]
	0x03E0DC20 MOVZ W9, 0xAFB9
	0x03E0DC24 MOVK W9, 0x260000
	0x03E0DC28 STP V0, V1, [X31]
	0x03E0DC2C LDR W8, [X31]
	0x03E0DC30 STR V2, [X31 + 0x2]
	0x03E0DC34 CMP W8, W9
	0x03E0DC38 B.EQ 0x3E0DD48
	0x03E0DC3C LDR X8, [X31 + 0x18]
	0x03E0DC40 CBZ X8, 0x3E0DD48
	0x03E0DC44 LDR W8, [X31 + 0x8]
	0x03E0DC48 CMP W8, 0x1
	0x03E0DC4C B.LT 0x3E0DD48
	0x03E0DC50 ADD X0, X31, 0x0
	0x03E0DC54 MOV X1, X31
	0x03E0DC58 BL 0x3CA8F90
	0x03E0DC5C MOV X21, X0
	0x03E0DC60 MOV X0, X20
	0x03E0DC64 MOV X1, X31
	0x03E0DC68 BL 0x3CC98D0
	0x03E0DC6C MOV X1, X0
	0x03E0DC70 ADD X0, X31, 0x0
	0x03E0DC74 MOV X2, X31
	0x03E0DC78 BL 0x3CA8E98
	0x03E0DC7C ADRP X8, 0x359000
	0x03E0DC80 LDR X8, [X8 + 0x430]
	0x03E0DC84 MOV X22, X0
	0x03E0DC88 LDR X8, [X8]
	0x03E0DC8C LDR W9, [X8 + 0xE0]
	0x03E0DC90 CBNZ W9, 0x3E0DC9C
	0x03E0DC94 MOV X0, X8
	0x03E0DC98 BL 0x1C16DFC
	0x03E0DC9C MOV X0, X19
	0x03E0DCA0 MOV X1, X21
	0x03E0DCA4 MOV X2, X22
	0x03E0DCA8 MOV X3, X31
	0x03E0DCAC BL 0x3D5A738

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x5DC000
	009 Move X21, 0x355000
	010 Move W8, [X22+862]
	011 Move X21, [X21+3544]
	012 Move V8, V1
	013 Move V9, V0
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x355000
	021 Move X0, [X0+3544]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+862], W8
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X0+184]
	032 Move X0, X19
	033 Move X1, [X8+8]
	034 Call UITKTextHandle.ConvertUssToTextGenerationSettings, X0, X1
	035 Move X8, [X21]
	036 Move X9, [X8+184]
	037 Move X9, [X9+8]
	038 Compare X9, 0
	039 JumpIfEqual {57}
	040 Move [X9+16], X20
	041 Move [X9+24], X31
	042 Move [X9+32], S9
	043 Move [X9+40], S8
	044 Move X8, [X8+184]
	045 Move X0, X19
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X1, [X8+8]
	051 Move X30, [X31+16]
	052 Move X2, X31
	053 Move D9, [X31+64]
	054 Move D8, [X31+72]
	055 Call TextHandle.ComputeTextHeight, X0, X1
	056 Return V0
	057 Call 0x1C17F20

Method: UnityEngine.TextCore.Text.TextInfo Update()

Disassembly:
	0x03E0DCB0 MOV X19, X0
	0x03E0DCB4 CBZ X0, 0x3E0DD6C
	0x03E0DCB8 LDR X1, [X20 + 0x48]
	0x03E0DCBC MOV X0, X19
	0x03E0DCC0 MOV X2, X31
	0x03E0DCC4 BL 0x3D9C6C8
	0x03E0DCC8 LDR X0, [X20 + 0x48]
	0x03E0DCCC CBZ X0, 0x3E0DD78
	0x03E0DCD0 LDR X8, [X0]
	0x03E0DCD4 LDP X9, X2, [X8 + 0x198]
	0x03E0DCD8 MOV X1, X19
	0x03E0DCDC BLR X9
	0x03E0DCE0 MOV X20, X31
	0x03E0DCE4 ADRP X10, 0x2E6000
	0x03E0DCE8 LDR X8, [X19]
	0x03E0DCEC LDR X10, [X10 + 0xE00]
	0x03E0DCF0 LDRH W9, [X8 + 0x12E]
	0x03E0DCF4 LDR X1, [X10]
	0x03E0DCF8 CBZ X9, 0x3E0DD1C
	0x03E0DCFC LDR X10, [X8 + 0xB0]
	0x03E0DD00 ADD X10, X10, 0x8
	0x03E0DD04 LDUR X11, [X10 - 0x8]
	0x03E0DD08 CMP X11, X1
	0x03E0DD0C B.EQ 0x3E0DD2C
	0x03E0DD10 SUBS X9, X9, 0x1
	0x03E0DD14 ADD X10, X10, 0x10
	0x03E0DD18 B.NE 0x3E0DD04
	0x03E0DD1C MOV X0, X19
	0x03E0DD20 MOV W2, W31
	0x03E0DD24 BL 0x1C5C788
	0x03E0DD28 B 0x3E0DD38
	0x03E0DD2C LDRSW X9, [X10]
	0x03E0DD30 ADD X8, X8, X9, 0x4, LSL
	0x03E0DD34 ADD X0, X8, 0x138
	0x03E0DD38 LDP X8, X1, [X0]
	0x03E0DD3C MOV X0, X19
	0x03E0DD40 BLR X8
	0x03E0DD44 CBNZ X20, 0x3E0DD70
	0x03E0DD48 LDP X20, X19, [X31 + 0x70]
	0x03E0DD4C LDP X22, X21, [X31 + 0x60]
	0x03E0DD50 LDR X30, [X31 + 0x50]
	0x03E0DD54 LDP D9, D8, [X31 + 0x40]
	0x03E0DD58 LDP D11, D10, [X31 + 0x30]
	0x03E0DD5C ADD X31, X31, 0x80
	0x03E0DD60 RET
	0x03E0DD64 BL 0x1C16F20
	0x03E0DD68 BL 0x1C16F28
	0x03E0DD6C BL 0x1C16F20
	0x03E0DD70 MOV X0, X20
	0x03E0DD74 BL 0x1C16F18
	0x03E0DD78 BL 0x1C16F20
	0x03E0DD7C B 0x3E0DD80
	0x03E0DD80 MOV X21, X0
	0x03E0DD84 CMP W1, 0x1
	0x03E0DD88 B.NE 0x3E0DDA4
	0x03E0DD8C MOV X0, X21
	0x03E0DD90 BL 0x3EB1AD0
	0x03E0DD94 LDR X20, [X0]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X1, [X0+40]
	008 Move X19, X0
	009 Call UITKTextHandle.ConvertUssToTextGenerationSettings, X0, X1
	010 Move X0, [X19+72]
	011 Compare X0, 0
	012 JumpIfEqual {69}
	013 Move X1, X31
	014 Call VisualElement.get_contentRect, X0
	015 Move V1, [X19+60]
	016 Move X8, -53616640
	017 Move V0, [X8+816]
	018 Move V9, V2
	019 NotImplemented "Instruction FABD not yet implemented."
	020 Move V8, V3
	021 NotImplemented "Instruction FCMP not yet implemented."
	022 Move V1, [X19+64]
	023 NotImplemented "Instruction FABD not yet implemented."
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 Move [X19+60], S9
	026 Move [X19+68], S8
	027 Move [X19+52], S9
	028 Move [X19+60], S8
	029 Move S9, [X19+52]
	030 Move S8, [X19+56]
	031 Move X21, 0x5CD000
	032 Move W8, [X21+1935]
	033 Move X20, [X19+40]
	034 Compare W8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0x2EF000
	037 Move X0, [X0+3848]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+1935], W8
	041 Compare X20, 0
	042 JumpIfEqual {69}
	043 Move X8, 0x2EF000
	044 Move X8, [X8+3848]
	045 Move X0, X19
	046 Move X2, X31
	047 Move X8, [X8]
	048 Move X8, [X8+184]
	049 Move V0, [X8]
	050 Move [X20+32], S9
	051 Move [X20+40], S8
	052 Move [X20+24], D0
	053 Move X1, [X19+40]
	054 Call TextHandle.Update, X0, X1
	055 Move X0, X19
	056 Call UITKTextHandle.HandleATag, X0
	057 Move X0, X19
	058 Call UITKTextHandle.HandleLinkTag, X0
	059 Move X0, X19
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X30, [X31+16]
	063 Move X21, [X31+24]
	064 Move X1, X31
	065 Move D9, [X31+48]
	066 Move D8, [X31+56]
	067 Call TextHandle.get_textInfo, X0
	068 Return X0
	069 Call 0x1C17F20

Method: System.Void ATagOnPointerUp(UnityEngine.UIElements.PointerUpEvent pue)

Disassembly:
	0x03E0E6D0 BL 0x3EB1AD0
	0x03E0E6D4 LDR X19, [X0]
	0x03E0E6D8 BL 0x3EB1AE0
	0x03E0E6DC CBNZ X20, 0x3E0E3B8
	0x03E0E6E0 B 0x3E0E418
	0x03E0E6E4 MOV X19, X31
	0x03E0E6E8 B 0x3E0E6F0
	0x03E0E6EC MOV X21, X0
	0x03E0E6F0 CBZ X20, 0x3E0E754
	0x03E0E6F4 ADRP X10, 0x2E5000
	0x03E0E6F8 LDR X8, [X20]
	0x03E0E6FC LDR X10, [X10 + 0xE00]
	0x03E0E700 LDRH W9, [X8 + 0x12E]
	0x03E0E704 LDR X1, [X10]
	0x03E0E708 CBZ X9, 0x3E0E72C
	0x03E0E70C LDR X10, [X8 + 0xB0]
	0x03E0E710 ADD X10, X10, 0x8
	0x03E0E714 LDUR X11, [X10 - 0x8]
	0x03E0E718 CMP X11, X1
	0x03E0E71C B.EQ 0x3E0E73C
	0x03E0E720 SUBS X9, X9, 0x1
	0x03E0E724 ADD X10, X10, 0x10
	0x03E0E728 B.NE 0x3E0E714
	0x03E0E72C MOV X0, X20
	0x03E0E730 MOV W2, W31
	0x03E0E734 BL 0x1C5C788
	0x03E0E738 B 0x3E0E748
	0x03E0E73C LDRSW X9, [X10]
	0x03E0E740 ADD X8, X8, X9, 0x4, LSL
	0x03E0E744 ADD X0, X8, 0x138
	0x03E0E748 LDP X8, X1, [X0]
	0x03E0E74C MOV X0, X20
	0x03E0E750 BLR X8
	0x03E0E754 CBNZ X19, 0x3E0E760
	0x03E0E758 MOV X0, X21
	0x03E0E75C BL 0x1D2C690
	0x03E0E760 MOV X0, X19
	0x03E0E764 BL 0x1C16F18
	0x03E0E768 BL 0x1990590
	0x03E0E76C STP X30, X23, [X31 - 0x30]!
	0x03E0E770 STP X22, X21, [X31 + 0x10]
	0x03E0E774 STP X20, X19, [X31 + 0x20]
	0x03E0E778 ADRP X21, 0x5DA000
	0x03E0E77C LDRB W8, [X21 + 0x364]
	0x03E0E780 MOV X19, X1
	0x03E0E784 MOV X20, X0
	0x03E0E788 TBNZ X8, 0x0, 0x3E0E7B8
	0x03E0E78C ADRP X0, 0x2E5000
	0x03E0E790 LDR X0, [X0 + 0xE00]
	0x03E0E794 BL 0x1C16CF4
	0x03E0E798 ADRP X0, 0x358000
	0x03E0E79C LDR X0, [X0 + 0x3E8]
	0x03E0E7A0 BL 0x1C16CF4
	0x03E0E7A4 ADRP X0, 0x2E7000
	0x03E0E7A8 LDR X0, [X0 + 0x278]
	0x03E0E7AC BL 0x1C16CF4
	0x03E0E7B0 MOVZ W8, 0x1
	0x03E0E7B4 STRB W8, [X21 + 0x364]
	0x03E0E7B8 LDR W8, [X20 + 0x54]
	0x03E0E7BC ADDS W31, W8, 0x1
	0x03E0E7C0 B.EQ 0x3E0E8B0
	0x03E0E7C4 ADRP X8, 0x2E7000
	0x03E0E7C8 LDR X8, [X8 + 0x278]
	0x03E0E7CC ADRP X9, 0x358000
	0x03E0E7D0 LDR X8, [X8]
	0x03E0E7D4 LDR X9, [X9 + 0x3E8]
	0x03E0E7D8 LDR X8, [X8 + 0xB8]
	0x03E0E7DC LDR X0, [X9]
	0x03E0E7E0 LDR X21, [X8]
	0x03E0E7E4 LDR W9, [X0 + 0xE0]
	0x03E0E7E8 CBNZ W9, 0x3E0E7F0
	0x03E0E7EC BL 0x1C16DFC
	0x03E0E7F0 ADRP X23, 0x2E5000
	0x03E0E7F4 LDR X23, [X23 + 0xE00]
	0x03E0E7F8 MOV X0, X19
	0x03E0E7FC MOV X1, X21
	0x03E0E800 MOV X2, X31
	0x03E0E804 BL 0x3D5A494
	0x03E0E808 MOV X19, X0
	0x03E0E80C CBZ X0, 0x3E0E8C0
	0x03E0E810 LDR X1, [X20 + 0x48]
	0x03E0E814 MOV X0, X19
	0x03E0E818 MOV X2, X31
	0x03E0E81C BL 0x3D9C6C8
	0x03E0E820 LDR X0, [X20 + 0x48]
	0x03E0E824 CBZ X0, 0x3E0E8CC
	0x03E0E828 LDR X8, [X0]
	0x03E0E82C LDP X9, X2, [X8 + 0x198]
	0x03E0E830 MOV X1, X19
	0x03E0E834 BLR X9
	0x03E0E838 MOV X21, X31
	0x03E0E83C MOVZ W22, 0x3
	0x03E0E840 LDR X8, [X19]
	0x03E0E844 LDR X1, [X23]
	0x03E0E848 LDRH W9, [X8 + 0x12E]
	0x03E0E84C CBZ X9, 0x3E0E870
	0x03E0E850 LDR X10, [X8 + 0xB0]
	0x03E0E854 ADD X10, X10, 0x8
	0x03E0E858 LDUR X11, [X10 - 0x8]
	0x03E0E85C CMP X11, X1
	0x03E0E860 B.EQ 0x3E0E880
	0x03E0E864 SUBS X9, X9, 0x1
	0x03E0E868 ADD X10, X10, 0x10

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], D11
	003 Move [X31+56], D10
	004 Move [X31+64], D9
	005 Move [X31+72], D8
	006 Move [X31+80], X30
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X21, 0x5DB000
	011 Move W8, [X21+863]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2E6000
	019 Move X0, [X0+2416]
	020 Call 0x1C17CF4
	021 Move X0, 0x355000
	022 Move X0, [X0+2656]
	023 Call 0x1C17CF4
	024 Move X0, 0x2E8000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+863], W8
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X31+16], V0
	031 Move [X31+24], V0
	032 Move [X31], V0
	033 Compare X20, 0
	034 JumpIfEqual {128}
	035 Move X0, [X19+72]
	036 Compare X0, 0
	037 JumpIfEqual {128}
	038 Move S10, [X20+192]
	039 Move S11, [X20+196]
	040 Move V8, [X20+200]
	041 Move X1, X31
	042 Call VisualElement.get_contentRect, X0
	043 Move X0, [X19+72]
	044 Compare X0, 0
	045 JumpIfEqual {128}
	046 Move X1, X31
	047 Move V9, V0
	048 Call VisualElement.get_contentRect, X0
	049 Subtract S0, S10, S9
	050 Subtract S1, S11, S1
	051 Move W1, 1
	052 Move X0, X19
	053 Move V2, V8
	054 Move X2, X31
	055 Call TextHandle.FindIntersectingLink, X0, X1, X2
	056 Move TEMP, X0
	057 And TEMP, TEMP, -2147483648
	058 Compare TEMP, -2147483648
	059 JumpIfEqual {118}
	060 Move W20, W0
	061 Move X0, X19
	062 Move X1, X31
	063 Call TextHandle.get_textInfo, X0
	064 Compare X0, 0
	065 JumpIfEqual {128}
	066 Move X8, [X0+64]
	067 Compare X8, 0
	068 JumpIfEqual {128}
	069 Move W9, [X8+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W9, 48
	072 NotImplemented "Instruction UMADDL not yet implemented."
	073 Move V0, [X8+32]
	074 Move V1, [X8+48]
	075 Move V2, [X8+4]
	076 Move W9, 0xAFB9
	077 NotImplemented "Instruction MOVK not yet implemented."
	078 Move [X31], V0
	079 Move [X31+8], V1
	080 Move W8, [X31]
	081 Move [X31+2], V2
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, [X31+24]
	084 Compare X8, 0
	085 JumpIfEqual {118}
	086 Move W8, [X31+8]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add X0, X31, 0
	089 Move X1, X31
	090 Call LinkInfo.GetLinkId, X0
	091 Move X8, 0x2E8000
	092 Move X8, [X8+2600]
	093 Move X19, X0
	094 Move X8, [X8]
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move W1, 1
	101 Move X0, X19
	102 Move X2, X31
	103 Call Uri.IsWellFormedUriString, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {118}
	108 Move X8, 0x2E6000
	109 Move X8, [X8+2416]
	110 Move X0, [X8]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X19
	116 Move X1, X31
	117 Call Application.OpenURL, X0
	118 Move X20, [X31+96]
	119 Move X19, [X31+104]
	120 Move X30, [X31+80]
	121 Move X21, [X31+88]
	122 Move D9, [X31+64]
	123 Move D8, [X31+72]
	124 Move D11, [X31+48]
	125 Move D10, [X31+56]
	126 Add X31, X31, 112
	127 Return 
	128 Call 0x1C17F20
	129 Call 0x1C17F28

Method: System.Void ATagOnPointerOver(UnityEngine.UIElements.PointerOverEvent _)

Disassembly:
	0x03E0E86C B.NE 0x3E0E858
	0x03E0E870 MOV X0, X19

ISIL:
	001 Move [X0+80], W31
	002 Return 

Method: System.Void ATagOnPointerMove(UnityEngine.UIElements.PointerMoveEvent pme)

Disassembly:
	0x03E0E874 MOV W2, W31
	0x03E0E878 BL 0x1C5C788
	0x03E0E87C B 0x3E0E88C
	0x03E0E880 LDRSW X9, [X10]
	0x03E0E884 ADD X8, X8, X9, 0x4, LSL
	0x03E0E888 ADD X0, X8, 0x138
	0x03E0E88C LDP X8, X1, [X0]
	0x03E0E890 MOV X0, X19
	0x03E0E894 BLR X8
	0x03E0E898 CBNZ X21, 0x3E0E8C4
	0x03E0E89C CMP W22, 0x3
	0x03E0E8A0 B.EQ 0x3E0E8A8
	0x03E0E8A4 CBNZ W22, 0x3E0E8B0
	0x03E0E8A8 MOVN W8, 0x0
	0x03E0E8AC STR W8, [X20 + 0x54]
	0x03E0E8B0 LDP X20, X19, [X31 + 0x20]
	0x03E0E8B4 LDP X22, X21, [X31 + 0x10]
	0x03E0E8B8 LDP X30, X23, [X31], #0x30
	0x03E0E8BC RET
	0x03E0E8C0 BL 0x1C16F20
	0x03E0E8C4 MOV X0, X21
	0x03E0E8C8 BL 0x1C16F18
	0x03E0E8CC BL 0x1C16F20
	0x03E0E8D0 B 0x3E0E8D4
	0x03E0E8D4 MOV X22, X0
	0x03E0E8D8 CMP W1, 0x1
	0x03E0E8DC B.NE 0x3E0E8FC
	0x03E0E8E0 MOV X0, X22
	0x03E0E8E4 BL 0x3EB1AD0
	0x03E0E8E8 LDR X21, [X0]
	0x03E0E8EC BL 0x3EB1AE0
	0x03E0E8F0 MOV W22, W31
	0x03E0E8F4 CBNZ X19, 0x3E0E840
	0x03E0E8F8 B 0x3E0E898
	0x03E0E8FC MOV X21, X31
	0x03E0E900 B 0x3E0E908
	0x03E0E904 MOV X22, X0
	0x03E0E908 CBZ X19, 0x3E0E964
	0x03E0E90C LDR X8, [X19]
	0x03E0E910 LDR X1, [X23]
	0x03E0E914 LDRH W9, [X8 + 0x12E]
	0x03E0E918 CBZ X9, 0x3E0E93C
	0x03E0E91C LDR X10, [X8 + 0xB0]
	0x03E0E920 ADD X10, X10, 0x8
	0x03E0E924 LDUR X11, [X10 - 0x8]
	0x03E0E928 CMP X11, X1
	0x03E0E92C B.EQ 0x3E0E94C
	0x03E0E930 SUBS X9, X9, 0x1
	0x03E0E934 ADD X10, X10, 0x10
	0x03E0E938 B.NE 0x3E0E924
	0x03E0E93C MOV X0, X19
	0x03E0E940 MOV W2, W31
	0x03E0E944 BL 0x1C5C788
	0x03E0E948 B 0x3E0E958
	0x03E0E94C LDRSW X9, [X10]
	0x03E0E950 ADD X8, X8, X9, 0x4, LSL
	0x03E0E954 ADD X0, X8, 0x138
	0x03E0E958 LDP X8, X1, [X0]
	0x03E0E95C MOV X0, X19
	0x03E0E960 BLR X8
	0x03E0E964 CBNZ X21, 0x3E0E970
	0x03E0E968 MOV X0, X22
	0x03E0E96C BL 0x1D2C690
	0x03E0E970 MOV X0, X21
	0x03E0E974 BL 0x1C16F18
	0x03E0E978 BL 0x1990590
	0x03E0E97C SUB X31, X31, 0x70
	0x03E0E980 STP X30, X19, [X31 + 0x60]
	0x03E0E984 MOVI V0.2D, 0x0
	0x03E0E988 STR X31, [X31 + 0x50]
	0x03E0E98C STP V0, V0, [X31 + 0x30]
	0x03E0E990 STP V0, V0, [X31 + 0x10]
	0x03E0E994 STR V0, [X31]
	0x03E0E998 MOV X19, X0
	0x03E0E99C LDR X0, [X0 + 0x48]
	0x03E0E9A0 CBZ X0, 0x3E0EA1C
	0x03E0E9A4 MOV X1, X31
	0x03E0E9A8 BL 0x3DE0F44
	0x03E0E9AC MOV X1, X0
	0x03E0E9B0 ADD X0, X31, 0x0
	0x03E0E9B4 MOVZ W2, 0x58
	0x03E0E9B8 BL 0x3EB1B30
	0x03E0E9BC ADD X0, X31, 0x0
	0x03E0E9C0 MOV X1, X31
	0x03E0E9C4 BL 0x3DC9C2C
	0x03E0E9C8 CBZ W0, 0x3E0EA04
	0x03E0E9CC ADD X0, X31, 0x0
	0x03E0E9D0 MOV X1, X31
	0x03E0E9D4 BL 0x3DC9C2C
	0x03E0E9D8 CMP W0, 0x1
	0x03E0E9DC B.NE 0x3E0EA0C
	0x03E0E9E0 MOV X0, X19
	0x03E0E9E4 BL 0x3E0EA20
	0x03E0E9E8 TBZ X0, 0x0, 0x3E0EA04
	0x03E0E9EC ADD X0, X31, 0x0
	0x03E0E9F0 MOV X1, X31
	0x03E0E9F4 BL 0x3DC6CF4
	0x03E0E9F8 CMP W0, 0x1
	0x03E0E9FC CSET W0, EQ
	0x03E0EA00 B 0x3E0EA10
	0x03E0EA04 MOVZ W0, 0x2
	0x03E0EA08 B 0x3E0EA10
	0x03E0EA0C MOV W0, W31
	0x03E0EA10 LDP X30, X19, [X31 + 0x60]
	0x03E0EA14 ADD X31, X31, 0x70
	0x03E0EA18 RET
	0x03E0EA1C BL 0x1C16F20
	0x03E0EA20 STR X30, [X31 - 0x10]!
	0x03E0EA24 LDR X0, [X0 + 0x48]
	0x03E0EA28 CBZ X0, 0x3E0EA4C
	0x03E0EA2C MOV X1, X31
	0x03E0EA30 BL 0x3DE0F44
	0x03E0EA34 MOV X1, X31
	0x03E0EA38 BL 0x3DCA360
	0x03E0EA3C CMP W0, 0x0
	0x03E0EA40 CSET W0, EQ
	0x03E0EA44 LDR X30, [X31], #0x10
	0x03E0EA48 RET
	0x03E0EA4C BL 0x1C16F20
	0x03E0EA50 STR X30, [X31 - 0x20]!
	0x03E0EA54 STP X20, X19, [X31 + 0x10]
	0x03E0EA58 ADRP X20, 0x5DA000
	0x03E0EA5C LDRB W8, [X20 + 0x36C]
	0x03E0EA60 MOV X19, X0
	0x03E0EA64 TBNZ X8, 0x0, 0x3E0EA88
	0x03E0EA68 ADRP X0, 0x35C000
	0x03E0EA6C LDR X0, [X0 + 0x398]
	0x03E0EA70 BL 0x1C16CF4
	0x03E0EA74 ADRP X0, 0x30D000
	0x03E0EA78 LDR X0, [X0 + 0x970]
	0x03E0EA7C BL 0x1C16CF4
	0x03E0EA80 MOVZ W8, 0x1
	0x03E0EA84 STRB W8, [X20 + 0x36C]
	0x03E0EA88 CBZ X19, 0x3E0EB10
	0x03E0EA8C ADRP X20, 0x35C000
	0x03E0EA90 LDR X20, [X20 + 0x398]
	0x03E0EA94 MOV X0, X19
	0x03E0EA98 MOV X1, X31
	0x03E0EA9C BL 0x3DEC0CC
	0x03E0EAA0 CBZ X0, 0x3E0EAD8
	0x03E0EAA4 ADRP X8, 0x30D000
	0x03E0EAA8 LDR X8, [X8 + 0x970]
	0x03E0EAAC LDR X9, [X0]
	0x03E0EAB0 LDR X8, [X8]
	0x03E0EAB4 LDRB W11, [X9 + 0x130]
	0x03E0EAB8 LDRB W10, [X8 + 0x130]
	0x03E0EABC CMP W11, W10
	0x03E0EAC0 B.CC 0x3E0EAD8
	0x03E0EAC4 LDR X9, [X9 + 0xC8]
	0x03E0EAC8 ADD X9, X9, X10, 0x3, LSL
	0x03E0EACC LDUR X9, [X9 - 0x8]
	0x03E0EAD0 CMP X9, X8
	0x03E0EAD4 B.EQ 0x3E0EAF4
	0x03E0EAD8 LDR X0, [X20]
	0x03E0EADC LDR W8, [X0 + 0xE0]
	0x03E0EAE0 CBNZ W8, 0x3E0EAE8
	0x03E0EAE4 BL 0x1C16DFC
	0x03E0EAE8 LDP X20, X19, [X31 + 0x10]
	0x03E0EAEC LDR X30, [X31], #0x20
	0x03E0EAF0 B 0x3E0A3AC
	0x03E0EAF4 LDR X8, [X0 + 0x1E8]
	0x03E0EAF8 CBZ X8, 0x3E0EB10
	0x03E0EAFC LDR X0, [X8 + 0x98]
	0x03E0EB00 CBZ X0, 0x3E0EAD8
	0x03E0EB04 LDP X20, X19, [X31 + 0x10]
	0x03E0EB08 LDR X30, [X31], #0x20
	0x03E0EB0C RET
	0x03E0EB10 BL 0x1C16F20
	0x03E0EB14 SUB X31, X31, 0x40
	0x03E0EB18 STR X30, [X31 + 0x10]
	0x03E0EB1C STP X22, X21, [X31 + 0x20]
	0x03E0EB20 STP X20, X19, [X31 + 0x30]
	0x03E0EB24 ADRP X20, 0x5DA000
	0x03E0EB28 LDRB W8, [X20 + 0x36A]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], D11
	003 Move [X31+88], D10
	004 Move [X31+96], D9
	005 Move [X31+104], D8
	006 Move [X31+112], X30
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X21, 0x5DB000
	011 Move W8, [X21+864]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x30F000
	019 Move X0, [X0+3720]
	020 Call 0x1C17CF4
	021 Move X0, 0x35A000
	022 Move X0, [X0+3048]
	023 Call 0x1C17CF4
	024 Move X0, 0x355000
	025 Move X0, [X0+2648]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+864], W8
	029 Compare X20, 0
	030 JumpIfEqual {195}
	031 Move X0, [X19+72]
	032 Compare X0, 0
	033 JumpIfEqual {195}
	034 Move S10, [X20+192]
	035 Move S11, [X20+196]
	036 Move V8, [X20+200]
	037 Move X1, X31
	038 Call VisualElement.get_contentRect, X0
	039 Move X0, [X19+72]
	040 Compare X0, 0
	041 JumpIfEqual {195}
	042 Move X1, X31
	043 Move V9, V0
	044 Call VisualElement.get_contentRect, X0
	045 Subtract S0, S10, S9
	046 Subtract S1, S11, S1
	047 Move W1, 1
	048 Move X0, X19
	049 Move V2, V8
	050 Move X2, X31
	051 Call TextHandle.FindIntersectingLink, X0, X1, X2
	052 Move X8, [X19+72]
	053 Compare X8, 0
	054 JumpIfEqual {195}
	055 Move W21, W0
	056 Move X0, X8
	057 Move X1, X31
	058 Call VisualElement.get_panel, X0
	059 Compare X0, 0
	060 JumpIfEqual {72}
	061 Move X9, 0x30F000
	062 Move X9, [X9+3720]
	063 Move X8, [X0]
	064 Move X9, [X9]
	065 Move W11, [X8+304]
	066 Move W10, [X9+304]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X11, [X8+200]
	069 Add X10, X11, X10
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X20, X31
	073 Move TEMP, X21
	074 And TEMP, TEMP, -2147483648
	075 Compare TEMP, -2147483648
	076 JumpIfEqual {126}
	077 Move X0, X19
	078 Move X1, X31
	079 Call TextHandle.get_textInfo, X0
	080 Compare X0, 0
	081 JumpIfEqual {195}
	082 Move X8, [X0+64]
	083 Compare X8, 0
	084 JumpIfEqual {195}
	085 Move W9, [X8+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W9, 48
	088 NotImplemented "Instruction UMADDL not yet implemented."
	089 Move W8, [X8+32]
	090 Move W9, 0xAFB9
	091 NotImplemented "Instruction MOVK not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W8, [X19+80]
	094 Compare W8, 0
	095 JumpIfNotEqual {172}
	096 Move W8, 1
	097 Move [X19+80], W8
	098 Compare X20, 0
	099 JumpIfEqual {172}
	100 Move [X31+32], X31
	101 Move [X31+40], X31
	102 Move X10, 0x35A000
	103 Move X8, [X20]
	104 Move X10, [X10+3048]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Move X1, [X10]
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X20
	116 Move W2, W31
	117 Call 0x1C5D788
	118 Move X9, [X8+872]
	119 Move X1, [X8+880]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X20, X0
	122 Move TEMP, X21
	123 And TEMP, TEMP, -2147483648
	124 Compare TEMP, -2147483648
	125 JumpIfNotEqual {77}
	126 Move W8, [X19+80]
	127 Compare W8, 0
	128 JumpIfEqual {172}
	129 Compare X20, 0
	130 JumpIfEqual {171}
	131 Move X0, [X19+72]
	132 Compare X0, 0
	133 JumpIfEqual {195}
	134 Move X1, X31
	135 Call VisualElement.get_computedStyle, X0
	136 Add X8, X31, 48
	137 Move X1, X31
	138 Call ComputedStyle.get_cursor, X0
	139 Move V0, [X31+3]
	140 Move X8, [X31+64]
	141 Move X10, 0x35A000
	142 Move [X31], V0
	143 Move [X31+16], X8
	144 Move X8, [X20]
	145 Move X10, [X10+3048]
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Move X1, [X10]
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move X0, X20
	157 Move W2, W31
	158 Call 0x1C5D788
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Add X8, X8, X9
	161 Add X0, X8, 312
	162 Move V0, [X31]
	163 Move X8, [X31+16]
	164 Move X9, [X0]
	165 Add X1, X31, 48
	166 Move [X31+3], V0
	167 Move [X31+64], X8
	168 Move X2, [X0+8]
	169 Move X0, X20
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Move [X19+80], W31
	172 Move X20, [X31+128]
	173 Move X19, [X31+136]
	174 Move X30, [X31+112]
	175 Move X21, [X31+120]
	176 Move D9, [X31+96]
	177 Move D8, [X31+104]
	178 Move D11, [X31+80]
	179 Move D10, [X31+88]
	180 Add X31, X31, 144
	181 Return 
	182 NotImplemented "Instruction LDRSW not yet implemented."
	183 Add X8, X8, X9
	184 Add X0, X8, 312
	185 Move X8, -53608448
	186 Move V0, [X31+2]
	187 Move V1, [X8+976]
	188 Move X8, [X0]
	189 Add X1, X31, 48
	190 Move [X31+3], V0
	191 Move [X31+64], D1
	192 Move X2, [X0+8]
	193 Move X0, X20
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Call 0x1C17F20
	196 Call 0x1C17F28

Method: System.Void ATagOnPointerOut(UnityEngine.UIElements.PointerOutEvent _)

Disassembly:
	0x03E0EB2C MOV X19, X0
	0x03E0EB30 TBNZ X8, 0x0, 0x3E0EB48

ISIL:
	001 Move [X0+80], W31
	002 Return 

Method: System.Void LinkTagOnPointerDown(UnityEngine.UIElements.PointerDownEvent pde)

Disassembly:
	0x03E0EB34 ADRP X0, 0x2E5000
	0x03E0EB38 LDR X0, [X0 + 0x598]
	0x03E0EB3C BL 0x1C16CF4
	0x03E0EB40 MOVZ W8, 0x1
	0x03E0EB44 STRB W8, [X20 + 0x36A]
	0x03E0EB48 CBZ X19, 0x3E0ECB8
	0x03E0EB4C ADRP X22, 0x2E5000
	0x03E0EB50 LDR X22, [X22 + 0x598]
	0x03E0EB54 MOV X0, X19
	0x03E0EB58 MOV X1, X31
	0x03E0EB5C BL 0x3DE0F44
	0x03E0EB60 MOV X1, X31
	0x03E0EB64 BL 0x3DC9F98
	0x03E0EB68 STP X0, X1, [X31]
	0x03E0EB6C ADD X0, X31, 0x0
	0x03E0EB70 MOV X1, X31
	0x03E0EB74 BL 0x3DE4A04
	0x03E0EB78 LDR X8, [X22]
	0x03E0EB7C MOV X20, X0
	0x03E0EB80 LDR W9, [X8 + 0xE0]
	0x03E0EB84 CBNZ W9, 0x3E0EB90
	0x03E0EB88 MOV X0, X8
	0x03E0EB8C BL 0x1C16DFC
	0x03E0EB90 MOV X0, X20
	0x03E0EB94 MOV X1, X31
	0x03E0EB98 MOV X2, X31
	0x03E0EB9C BL 0x3C354F8
	0x03E0EBA0 TBZ X0, 0x0, 0x3E0EBCC
	0x03E0EBA4 MOV X0, X19
	0x03E0EBA8 MOV X1, X31
	0x03E0EBAC BL 0x3DE0F44
	0x03E0EBB0 MOV X1, X31
	0x03E0EBB4 BL 0x3DC9F98
	0x03E0EBB8 STP X0, X1, [X31]
	0x03E0EBBC ADD X0, X31, 0x0
	0x03E0EBC0 MOV X1, X31
	0x03E0EBC4 BL 0x3DE4A04
	0x03E0EBC8 B 0x3E0ECBC
	0x03E0EBCC MOV X0, X19
	0x03E0EBD0 BL 0x3E0EA50
	0x03E0EBD4 MOV X20, X0
	0x03E0EBD8 MOV X0, X19
	0x03E0EBDC MOV X1, X31
	0x03E0EBE0 BL 0x3DE0F44
	0x03E0EBE4 MOV X1, X31
	0x03E0EBE8 BL 0x3DC9F98
	0x03E0EBEC STP X0, X1, [X31]
	0x03E0EBF0 ADD X0, X31, 0x0
	0x03E0EBF4 MOV X1, X31
	0x03E0EBF8 BL 0x3DE49FC
	0x03E0EBFC LDR X8, [X22]
	0x03E0EC00 MOV X21, X0
	0x03E0EC04 LDR W9, [X8 + 0xE0]
	0x03E0EC08 CBNZ W9, 0x3E0EC14
	0x03E0EC0C MOV X0, X8
	0x03E0EC10 BL 0x1C16DFC
	0x03E0EC14 MOV X0, X21
	0x03E0EC18 MOV X1, X31
	0x03E0EC1C MOV X2, X31
	0x03E0EC20 BL 0x3C354F8
	0x03E0EC24 MOV W21, W0
	0x03E0EC28 MOV X0, X19
	0x03E0EC2C MOV X1, X31
	0x03E0EC30 BL 0x3DE0F44
	0x03E0EC34 MOV X1, X31
	0x03E0EC38 TBZ X21, 0x0, 0x3E0EC68
	0x03E0EC3C BL 0x3DC9F98
	0x03E0EC40 STP X0, X1, [X31]
	0x03E0EC44 ADD X0, X31, 0x0
	0x03E0EC48 MOV X1, X31
	0x03E0EC4C BL 0x3DE49FC
	0x03E0EC50 CBZ X20, 0x3E0ECB8
	0x03E0EC54 MOV X1, X0
	0x03E0EC58 MOV X0, X20
	0x03E0EC5C MOV X2, X31
	0x03E0EC60 BL 0x3CCC4C4
	0x03E0EC64 B 0x3E0ECBC
	0x03E0EC68 BL 0x3DC9F48
	0x03E0EC6C LDR X8, [X22]
	0x03E0EC70 MOV X21, X0
	0x03E0EC74 LDR W9, [X8 + 0xE0]
	0x03E0EC78 CBNZ W9, 0x3E0EC84
	0x03E0EC7C MOV X0, X8
	0x03E0EC80 BL 0x1C16DFC
	0x03E0EC84 MOV X0, X21
	0x03E0EC88 MOV X1, X31
	0x03E0EC8C MOV X2, X31
	0x03E0EC90 BL 0x3C354F8
	0x03E0EC94 MOV W8, W0
	0x03E0EC98 MOV X0, X31
	0x03E0EC9C TBZ X8, 0x0, 0x3E0ECBC
	0x03E0ECA0 MOV X0, X19
	0x03E0ECA4 MOV X1, X31
	0x03E0ECA8 BL 0x3DE0F44
	0x03E0ECAC MOV X1, X31
	0x03E0ECB0 BL 0x3DC9F48
	0x03E0ECB4 CBNZ X20, 0x3E0EC54
	0x03E0ECB8 BL 0x1C16F20
	0x03E0ECBC LDP X20, X19, [X31 + 0x30]
	0x03E0ECC0 LDP X22, X21, [X31 + 0x20]
	0x03E0ECC4 LDR X30, [X31 + 0x10]
	0x03E0ECC8 ADD X31, X31, 0x40
	0x03E0ECCC RET
	0x03E0ECD0 SUB X31, X31, 0xC0
	0x03E0ECD4 STR D10, [X31 + 0x80]
	0x03E0ECD8 STP D9, D8, [X31 + 0x90]
	0x03E0ECDC STP X30, X21, [X31 + 0xA0]
	0x03E0ECE0 STP X20, X19, [X31 + 0xB0]
	0x03E0ECE4 ADRP X21, 0x5DA000
	0x03E0ECE8 LDRB W8, [X21 + 0x368]
	0x03E0ECEC MOV X19, X1
	0x03E0ECF0 MOV X20, X0
	0x03E0ECF4 TBNZ X8, 0x0, 0x3E0ED0C
	0x03E0ECF8 ADRP X0, 0x35C000
	0x03E0ECFC LDR X0, [X0 + 0x4D0]
	0x03E0ED00 BL 0x1C16CF4
	0x03E0ED04 MOVZ W8, 0x1
	0x03E0ED08 STRB W8, [X21 + 0x368]
	0x03E0ED0C MOVI V0.2D, 0x0
	0x03E0ED10 STR X31, [X31 + 0x70]
	0x03E0ED14 STP V0, V0, [X31 + 0x50]
	0x03E0ED18 STP V0, V0, [X31 + 0x30]
	0x03E0ED1C STR V0, [X31 + 0x2]
	0x03E0ED20 LDR X0, [X20 + 0x48]
	0x03E0ED24 CBZ X0, 0x3E0EE7C
	0x03E0ED28 MOV X1, X31
	0x03E0ED2C BL 0x3DE0F44
	0x03E0ED30 MOV X1, X0
	0x03E0ED34 ADD X0, X31, 0x20
	0x03E0ED38 MOVZ W2, 0x58
	0x03E0ED3C BL 0x3EB1B30
	0x03E0ED40 ADD X0, X31, 0x20
	0x03E0ED44 MOV X1, X31
	0x03E0ED48 BL 0x3DCA310
	0x03E0ED4C FMOV S1, 0.5
	0x03E0ED50 ADD X8, X31, 0x0
	0x03E0ED54 ADD X0, X31, 0x20
	0x03E0ED58 MOV X1, X31
	0x03E0ED5C FMUL S8, S0, S1
	0x03E0ED60 BL 0x3DC9C7C
	0x03E0ED64 LDR V9, [X31]
	0x03E0ED68 ADD X8, X31, 0x0
	0x03E0ED6C ADD X0, X31, 0x20
	0x03E0ED70 MOV X1, X31
	0x03E0ED74 BL 0x3DC9C7C
	0x03E0ED78 LDR V10, [X31 + 0x4]
	0x03E0ED7C ADD X8, X31, 0x0
	0x03E0ED80 ADD X0, X31, 0x20
	0x03E0ED84 MOV X1, X31
	0x03E0ED88 BL 0x3DC9C7C
	0x03E0ED8C LDR V0, [X31 + 0x8]
	0x03E0ED90 FCMP S0, 0x0
	0x03E0ED94 B.NE 0x3E0EDD8
	0x03E0ED98 FCMP S8, 0x0
	0x03E0ED9C B.HI 0x3E0EDD8
	0x03E0EDA0 FCMP S9, 0x0
	0x03E0EDA4 B.NE 0x3E0EDD8
	0x03E0EDA8 FCMP S10, 0x0
	0x03E0EDAC B.NE 0x3E0EDD8
	0x03E0EDB0 ADRP X19, 0x35C000
	0x03E0EDB4 LDR X19, [X19 + 0x4D0]
	0x03E0EDB8 LDR X0, [X19]
	0x03E0EDBC LDR W8, [X0 + 0xE0]
	0x03E0EDC0 CBNZ W8, 0x3E0EDCC
	0x03E0EDC4 BL 0x1C16DFC
	0x03E0EDC8 LDR X0, [X19]
	0x03E0EDCC LDR X8, [X0 + 0xB8]
	0x03E0EDD0 LDR V0, [X8]
	0x03E0EDD4 B 0x3E0EE64
	0x03E0EDD8 ADRP X21, 0x35C000
	0x03E0EDDC LDR X21, [X21 + 0x4D0]
	0x03E0EDE0 FABS S0, S0
	0x03E0EDE4 FABS S2, S9
	0x03E0EDE8 FABS S1, S10
	0x03E0EDEC LDR X0, [X21]
	0x03E0EDF0 FADD S2, S2, S0
	0x03E0EDF4 FCMP S2, S8
	0x03E0EDF8 FADD S0, S1, S0
	0x03E0EDFC FCSEL S2, S2, S8, GT
	0x03E0EE00 LDR W8, [X0 + 0xE0]
	0x03E0EE04 FCMP S0, S8
	0x03E0EE08 FCSEL S0, S0, S8, GT
	0x03E0EE0C FCMP S2, S0
	0x03E0EE10 FCSEL S9, S2, S0, GT
	0x03E0EE14 CBNZ W8, 0x3E0EE20
	0x03E0EE18 BL 0x1C16DFC
	0x03E0EE1C LDR X0, [X21]
	0x03E0EE20 LDR X8, [X0 + 0xB8]
	0x03E0EE24 LDR X0, [X20 + 0x48]
	0x03E0EE28 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], D11
	003 Move [X31+56], D10
	004 Move [X31+64], D9
	005 Move [X31+72], D8
	006 Move [X31+80], X30
	007 Move [X31+96], X22
	008 Move [X31+104], X21
	009 Move [X31+112], X20
	010 Move [X31+120], X19
	011 Move X21, 0x5DB000
	012 Move W8, [X21+865]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x2E6000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x359000
	023 Move X0, [X0+1072]
	024 Call 0x1C17CF4
	025 Move X0, 0x311000
	026 Move X0, [X0+3312]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+865], W8
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+16], V0
	032 Move [X31+24], V0
	033 Move [X31], V0
	034 Compare X19, 0
	035 JumpIfEqual {166}
	036 Move X0, [X20+72]
	037 Compare X0, 0
	038 JumpIfEqual {166}
	039 Move S10, [X19+192]
	040 Move S11, [X19+196]
	041 Move V8, [X19+200]
	042 Move X1, X31
	043 Call VisualElement.get_contentRect, X0
	044 Move X0, [X20+72]
	045 Compare X0, 0
	046 JumpIfEqual {166}
	047 Move X1, X31
	048 Move V9, V0
	049 Call VisualElement.get_contentRect, X0
	050 Subtract S0, S10, S9
	051 Subtract S1, S11, S1
	052 Move W1, 1
	053 Move X0, X20
	054 Move V2, V8
	055 Move X2, X31
	056 Call TextHandle.FindIntersectingLink, X0, X1, X2
	057 Move TEMP, X0
	058 And TEMP, TEMP, -2147483648
	059 Compare TEMP, -2147483648
	060 JumpIfEqual {155}
	061 Move W21, W0
	062 Move X0, X20
	063 Move X1, X31
	064 Call TextHandle.get_textInfo, X0
	065 Compare X0, 0
	066 JumpIfEqual {166}
	067 Move X8, [X0+64]
	068 Compare X8, 0
	069 JumpIfEqual {166}
	070 Move W9, [X8+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W9, 48
	073 NotImplemented "Instruction UMADDL not yet implemented."
	074 Move V0, [X8+32]
	075 Move V1, [X8+48]
	076 Move V2, [X8+4]
	077 Move W9, 0xAFB9
	078 NotImplemented "Instruction MOVK not yet implemented."
	079 Move [X31], V0
	080 Move [X31+8], V1
	081 Move W8, [X31]
	082 Move [X31+2], V2
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X8, [X31+24]
	085 Compare X8, 0
	086 JumpIfEqual {155}
	087 Move W8, [X31+8]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X0, X31, 0
	090 Move X1, X31
	091 Call LinkInfo.GetLinkId, X0
	092 Move X21, X0
	093 Move X0, X20
	094 Move X1, X31
	095 Call TextHandle.get_textInfo, X0
	096 Move X1, X0
	097 Add X0, X31, 0
	098 Move X2, X31
	099 Call LinkInfo.GetLinkText, X0, X1
	100 Move X8, 0x359000
	101 Move X8, [X8+1072]
	102 Move X22, X0
	103 Move X8, [X8]
	104 Move W9, [X8+224]
	105 Compare W9, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X8
	108 Call 0x1C17DFC
	109 Move X0, X19
	110 Move X1, X21
	111 Move X2, X22
	112 Move X3, X31
	113 Call PointerDownLinkTagEvent.GetPooled, X0, X1, X2
	114 Move X19, X0
	115 Compare X0, 0
	116 JumpIfEqual {168}
	117 Move X1, [X20+72]
	118 Move X0, X19
	119 Move X2, X31
	120 Call EventBase.set_target, X0, X1
	121 Move X0, [X20+72]
	122 Compare X0, 0
	123 JumpIfEqual {171}
	124 Move X8, [X0]
	125 Move X9, [X8+408]
	126 Move X2, [X8+416]
	127 Move X1, X19
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move X20, X31
	130 Move X10, 0x2E6000
	131 Move X8, [X19]
	132 Move X10, [X10+3584]
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Move X1, [X10]
	135 Compare X9, 0
	136 JumpIfEqual {143}
	137 Move X10, [X8+176]
	138 Add X10, X10, 8
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Subtract X9, X9, 1
	142 Add X10, X10, 16
	143 Move X0, X19
	144 Move W2, W31
	145 Call 0x1C5D788
	146 NotImplemented "Instruction LDRSW not yet implemented."
	147 Add X8, X8, X9
	148 Add X0, X8, 312
	149 Move X8, [X0]
	150 Move X1, [X0+8]
	151 Move X0, X19
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Compare X20, 0
	154 JumpIfNotEqual {169}
	155 Move X20, [X31+112]
	156 Move X19, [X31+120]
	157 Move X22, [X31+96]
	158 Move X21, [X31+104]
	159 Move X30, [X31+80]
	160 Move D9, [X31+64]
	161 Move D8, [X31+72]
	162 Move D11, [X31+48]
	163 Move D10, [X31+56]
	164 Add X31, X31, 128
	165 Return 
	166 Call 0x1C17F20
	167 Call 0x1C17F28
	168 Call 0x1C17F20
	169 Move X0, X20
	170 Call 0x1C17F18
	171 Call 0x1C17F20
	172 Move X21, X0
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X0, X21
	175 Call 0x3EB2AD0
	176 Move X20, [X0]
	177 Call 0x3EB2AE0
	178 Compare X19, 0
	179 JumpIfNotEqual {130}
	180 Move X20, X31
	181 Move X21, X0
	182 Compare X19, 0
	183 JumpIfEqual {207}
	184 Move X10, 0x2E6000
	185 Move X8, [X19]
	186 Move X10, [X10+3584]
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Move X1, [X10]
	189 Compare X9, 0
	190 JumpIfEqual {197}
	191 Move X10, [X8+176]
	192 Add X10, X10, 8
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Subtract X9, X9, 1
	196 Add X10, X10, 16
	197 Move X0, X19
	198 Move W2, W31
	199 Call 0x1C5D788
	200 NotImplemented "Instruction LDRSW not yet implemented."
	201 Add X8, X8, X9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X1, [X0+8]
	205 Move X0, X19
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Compare X20, 0
	208 JumpIfNotEqual {211}
	209 Move X0, X21
	210 Call 0x1D2D690
	211 Move X0, X20
	212 Call 0x1C17F18
	213 Call 0x1991590

Method: System.Void LinkTagOnPointerUp(UnityEngine.UIElements.PointerUpEvent pue)

Disassembly:
	0x03E0EE2C LDR V10, [X8]
	0x03E0EE30 BL 0x3E0EF64
	0x03E0EE34 CBZ X19, 0x3E0EE7C
	0x03E0EE38 MOV X0, X19
	0x03E0EE3C MOV X1, X31
	0x03E0EE40 MOV V8.16B, V0.16B
	0x03E0EE44 FADD S9, S9, S10
	0x03E0EE48 BL 0x3C9F0B4
	0x03E0EE4C ADD W8, W0, 0x1
	0x03E0EE50 FMUL S0, S9, S8
	0x03E0EE54 SCVTF S1, W8
	0x03E0EE58 FMUL S0, S0, S1
	0x03E0EE5C FCMP S0, S1
	0x03E0EE60 FCSEL S0, S0, S1, MI
	0x03E0EE64 LDP X20, X19, [X31 + 0xB0]
	0x03E0EE68 LDP X30, X21, [X31 + 0xA0]
	0x03E0EE6C LDP D9, D8, [X31 + 0x90]
	0x03E0EE70 LDR V10, [X31 + 0x80]
	0x03E0EE74 ADD X31, X31, 0xC0
	0x03E0EE78 RET
	0x03E0EE7C BL 0x1C16F20
	0x03E0EE80 STR X30, [X31 - 0x30]!
	0x03E0EE84 STP X22, X21, [X31 + 0x10]
	0x03E0EE88 STP X20, X19, [X31 + 0x20]
	0x03E0EE8C ADRP X20, 0x5DA000
	0x03E0EE90 LDRB W8, [X20 + 0x388]
	0x03E0EE94 MOV X19, X0
	0x03E0EE98 TBNZ X8, 0x0, 0x3E0EEBC
	0x03E0EE9C ADRP X0, 0x34B000
	0x03E0EEA0 LDR X0, [X0 + 0x30]
	0x03E0EEA4 BL 0x1C16CF4
	0x03E0EEA8 ADRP X0, 0x2E5000
	0x03E0EEAC LDR X0, [X0 + 0x988]
	0x03E0EEB0 BL 0x1C16CF4
	0x03E0EEB4 MOVZ W8, 0x1
	0x03E0EEB8 STRB W8, [X20 + 0x388]
	0x03E0EEBC ADRP X21, 0x34B000
	0x03E0EEC0 LDR X21, [X21 + 0x30]
	0x03E0EEC4 MOV X0, X19
	0x03E0EEC8 BL 0x3E12CE0
	0x03E0EECC ANDS W31, W0, 0xFFFF
	0x03E0EED0 B.EQ 0x3E0EF34
	0x03E0EED4 LDR X8, [X19]
	0x03E0EED8 MOV X0, X19
	0x03E0EEDC LDR X9, [X8 + 0xB18]
	0x03E0EEE0 LDR X1, [X8 + 0xB20]
	0x03E0EEE4 BLR X9
	0x03E0EEE8 CBZ X0, 0x3E0EF60
	0x03E0EEEC ADRP X22, 0x2E5000
	0x03E0EEF0 LDR W20, [X0 + 0x10]
	0x03E0EEF4 LDR X22, [X22 + 0x988]
	0x03E0EEF8 MOV X0, X19
	0x03E0EEFC BL 0x3E12CE0
	0x03E0EF00 LDR X8, [X22]
	0x03E0EF04 CBZ X8, 0x3E0EF60
	0x03E0EF08 MOV W2, W0
	0x03E0EF0C MOV X0, X8
	0x03E0EF10 MOV W1, W20
	0x03E0EF14 MOV X3, X31
	0x03E0EF18 BL 0x3228948
	0x03E0EF1C LDR X1, [X21]
	0x03E0EF20 LDP X20, X19, [X31 + 0x20]
	0x03E0EF24 LDP X22, X21, [X31 + 0x10]
	0x03E0EF28 MOV X2, X31
	0x03E0EF2C LDR X30, [X31], #0x30
	0x03E0EF30 B 0x321B938
	0x03E0EF34 LDR X0, [X19 + 0x450]
	0x03E0EF38 MOV X1, X31
	0x03E0EF3C ADD X19, X19, 0x450
	0x03E0EF40 BL 0x32277A8
	0x03E0EF44 ANDS W31, W0, 0x1
	0x03E0EF48 CSEL X8, X21, X19, NE
	0x03E0EF4C LDR X0, [X8]
	0x03E0EF50 LDP X20, X19, [X31 + 0x20]
	0x03E0EF54 LDP X22, X21, [X31 + 0x10]
	0x03E0EF58 LDR X30, [X31], #0x30
	0x03E0EF5C RET
	0x03E0EF60 BL 0x1C16F20
	0x03E0EF64 SUB X31, X31, 0xF0
	0x03E0EF68 STR D8, [X31 + 0xC0]
	0x03E0EF6C STP X30, X21, [X31 + 0xD0]
	0x03E0EF70 STP X20, X19, [X31 + 0xE0]
	0x03E0EF74 MOVI V0.2D, 0x0
	0x03E0EF78 STP V0, V0, [X31 + 0xA0]
	0x03E0EF7C STP V0, V0, [X31 + 0x80]
	0x03E0EF80 STP V0, V0, [X31 + 0x60]
	0x03E0EF84 CBZ X1, 0x3E0F018
	0x03E0EF88 MOV X21, X1
	0x03E0EF8C MOV X19, X0
	0x03E0EF90 MOV X0, X1
	0x03E0EF94 MOV X1, X31
	0x03E0EF98 BL 0x3C9F0B4
	0x03E0EF9C MOV W20, W0
	0x03E0EFA0 ADD X8, X31, 0x0
	0x03E0EFA4 MOV X0, X21
	0x03E0EFA8 MOV X1, X31
	0x03E0EFAC BL 0x3C9EB14
	0x03E0EFB0 ADD X0, X31, 0x60
	0x03E0EFB4 ADD X1, X31, 0x0
	0x03E0EFB8 MOVZ W2, 0x60
	0x03E0EFBC BL 0x3EB1AC0
	0x03E0EFC0 ADD X0, X31, 0x60
	0x03E0EFC4 MOV X1, X31
	0x03E0EFC8 BL 0x3C9BF88
	0x03E0EFCC CBZ X19, 0x3E0F018
	0x03E0EFD0 MOV W21, W0
	0x03E0EFD4 SCVTF S0, W20
	0x03E0EFD8 FMOV S1, 1
	0x03E0EFDC MOV X0, X19
	0x03E0EFE0 MOV X1, X31
	0x03E0EFE4 FDIV S8, S1, S0
	0x03E0EFE8 BL 0x3DE0F44
	0x03E0EFEC MOV X1, X31
	0x03E0EFF0 BL 0x3DC61E0
	0x03E0EFF4 FMOV S0, W0
	0x03E0EFF8 SCVTF S1, W21
	0x03E0EFFC FDIV S0, S1, S0
	0x03E0F000 FMUL S0, S8, S0
	0x03E0F004 LDP X20, X19, [X31 + 0xE0]
	0x03E0F008 LDP X30, X21, [X31 + 0xD0]
	0x03E0F00C LDR V8, [X31 + 0xC0]
	0x03E0F010 ADD X31, X31, 0xF0
	0x03E0F014 RET
	0x03E0F018 BL 0x1C16F20
	0x03E0F01C STR X30, [X31 - 0x20]!
	0x03E0F020 STP X20, X19, [X31 + 0x10]
	0x03E0F024 ADRP X19, 0x5D9000
	0x03E0F028 ADRP X20, 0x35B000
	0x03E0F02C LDRB W8, [X19 + 0x369]
	0x03E0F030 LDR X20, [X20 + 0x4D0]
	0x03E0F034 TBNZ X8, 0x0, 0x3E0F04C
	0x03E0F038 ADRP X0, 0x35B000
	0x03E0F03C LDR X0, [X0 + 0x4D0]
	0x03E0F040 BL 0x1C16CF4
	0x03E0F044 MOVZ W8, 0x1
	0x03E0F048 STRB W8, [X19 + 0x369]
	0x03E0F04C LDR X8, [X20]
	0x03E0F050 LDP X20, X19, [X31 + 0x10]
	0x03E0F054 MOVZ W9, 0x40C00000
	0x03E0F058 LDR X8, [X8 + 0xB8]
	0x03E0F05C STR W9, [X8]
	0x03E0F060 LDR X30, [X31], #0x20
	0x03E0F064 RET
	0x03E0F068 STP D11, D10, [X31 - 0x50]!
	0x03E0F06C STP D9, D8, [X31 + 0x10]
	0x03E0F070 STR X30, [X31 + 0x20]
	0x03E0F074 STP X22, X21, [X31 + 0x30]
	0x03E0F078 STP X20, X19, [X31 + 0x40]
	0x03E0F07C CBZ X1, 0x3E0F108
	0x03E0F080 MOV W20, W3
	0x03E0F084 MOV V8.16B, V1.16B
	0x03E0F088 MOV W22, W2
	0x03E0F08C MOV V10.16B, V0.16B
	0x03E0F090 MOV X21, X1
	0x03E0F094 MOV X19, X0
	0x03E0F098 BL 0x3E0F1E4
	0x03E0F09C TBZ X0, 0x0, 0x3E0F108
	0x03E0F0A0 CBZ X19, 0x3E0F1E0
	0x03E0F0A4 MOV X0, X19
	0x03E0F0A8 MOV X1, X31
	0x03E0F0AC BL 0x3DEC4BC
	0x03E0F0B0 FCMP S0, 0x0
	0x03E0F0B4 B.LS 0x3E0F130
	0x03E0F0B8 MOV V9.16B, V0.16B
	0x03E0F0BC CMP W22, 0x1
	0x03E0F0C0 MOV V11.16B, V10.16B
	0x03E0F0C4 B.EQ 0x3E0F0F8
	0x03E0F0C8 LDR X0, [X19 + 0x3D8]
	0x03E0F0CC CBZ X0, 0x3E0F1E0
	0x03E0F0D0 MOV X1, X21
	0x03E0F0D4 MOV W2, W31
	0x03E0F0D8 MOV V0.16B, V10.16B
	0x03E0F0DC MOV V1.16B, V8.16B
	0x03E0F0E0 BL 0x3E0C840
	0x03E0F0E4 CMP W22, 0x2
	0x03E0F0E8 MOV V11.16B, V0.16B
	0x03E0F0EC B.NE 0x3E0F0F8
	0x03E0F0F0 FCMP S11, S10
	0x03E0F0F4 FCSEL S11, S11, S10, MI
	0x03E0F0F8 CMP W20, 0x1
	0x03E0F0FC B.NE 0x3E0F168
	0x03E0F100 MOV V10.16B, V8.16B
	0x03E0F104 B 0x3E0F194
	0x03E0F108 MOVZ W8, 0x7FC00000
	0x03E0F10C FMOV S8, W8
	0x03E0F110 MOV V1.16B, V8.16B
	0x03E0F114 MOV V0.16B, V8.16B
	0x03E0F118 LDP X20, X19, [X31 + 0x40]
	0x03E0F11C LDP X22, X21, [X31 + 0x30]
	0x03E0F120 LDR X30, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], D11
	003 Move [X31+56], D10
	004 Move [X31+64], D9
	005 Move [X31+72], D8
	006 Move [X31+80], X30
	007 Move [X31+96], X22
	008 Move [X31+104], X21
	009 Move [X31+112], X20
	010 Move [X31+120], X19
	011 Move X21, 0x5DB000
	012 Move W8, [X21+866]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x2E6000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x355000
	023 Move X0, [X0+2656]
	024 Call 0x1C17CF4
	025 Move X0, 0x359000
	026 Move X0, [X0+1144]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+866], W8
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+16], V0
	032 Move [X31+24], V0
	033 Move [X31], V0
	034 Compare X19, 0
	035 JumpIfEqual {166}
	036 Move X0, [X20+72]
	037 Compare X0, 0
	038 JumpIfEqual {166}
	039 Move S10, [X19+192]
	040 Move S11, [X19+196]
	041 Move V8, [X19+200]
	042 Move X1, X31
	043 Call VisualElement.get_contentRect, X0
	044 Move X0, [X20+72]
	045 Compare X0, 0
	046 JumpIfEqual {166}
	047 Move X1, X31
	048 Move V9, V0
	049 Call VisualElement.get_contentRect, X0
	050 Subtract S0, S10, S9
	051 Subtract S1, S11, S1
	052 Move W1, 1
	053 Move X0, X20
	054 Move V2, V8
	055 Move X2, X31
	056 Call TextHandle.FindIntersectingLink, X0, X1, X2
	057 Move TEMP, X0
	058 And TEMP, TEMP, -2147483648
	059 Compare TEMP, -2147483648
	060 JumpIfEqual {155}
	061 Move W21, W0
	062 Move X0, X20
	063 Move X1, X31
	064 Call TextHandle.get_textInfo, X0
	065 Compare X0, 0
	066 JumpIfEqual {166}
	067 Move X8, [X0+64]
	068 Compare X8, 0
	069 JumpIfEqual {166}
	070 Move W9, [X8+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W9, 48
	073 NotImplemented "Instruction UMADDL not yet implemented."
	074 Move V0, [X8+32]
	075 Move V1, [X8+48]
	076 Move V2, [X8+4]
	077 Move W9, 0xAFB9
	078 NotImplemented "Instruction MOVK not yet implemented."
	079 Move [X31], V0
	080 Move [X31+8], V1
	081 Move W8, [X31]
	082 Move [X31+2], V2
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X8, [X31+24]
	085 Compare X8, 0
	086 JumpIfEqual {155}
	087 Move W8, [X31+8]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X0, X31, 0
	090 Move X1, X31
	091 Call LinkInfo.GetLinkId, X0
	092 Move X21, X0
	093 Move X0, X20
	094 Move X1, X31
	095 Call TextHandle.get_textInfo, X0
	096 Move X1, X0
	097 Add X0, X31, 0
	098 Move X2, X31
	099 Call LinkInfo.GetLinkText, X0, X1
	100 Move X8, 0x359000
	101 Move X8, [X8+1144]
	102 Move X22, X0
	103 Move X8, [X8]
	104 Move W9, [X8+224]
	105 Compare W9, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X8
	108 Call 0x1C17DFC
	109 Move X0, X19
	110 Move X1, X21
	111 Move X2, X22
	112 Move X3, X31
	113 Call PointerUpLinkTagEvent.GetPooled, X0, X1, X2
	114 Move X19, X0
	115 Compare X0, 0
	116 JumpIfEqual {168}
	117 Move X1, [X20+72]
	118 Move X0, X19
	119 Move X2, X31
	120 Call EventBase.set_target, X0, X1
	121 Move X0, [X20+72]
	122 Compare X0, 0
	123 JumpIfEqual {171}
	124 Move X8, [X0]
	125 Move X9, [X8+408]
	126 Move X2, [X8+416]
	127 Move X1, X19
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move X20, X31
	130 Move X10, 0x2E6000
	131 Move X8, [X19]
	132 Move X10, [X10+3584]
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Move X1, [X10]
	135 Compare X9, 0
	136 JumpIfEqual {143}
	137 Move X10, [X8+176]
	138 Add X10, X10, 8
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Subtract X9, X9, 1
	142 Add X10, X10, 16
	143 Move X0, X19
	144 Move W2, W31
	145 Call 0x1C5D788
	146 NotImplemented "Instruction LDRSW not yet implemented."
	147 Add X8, X8, X9
	148 Add X0, X8, 312
	149 Move X8, [X0]
	150 Move X1, [X0+8]
	151 Move X0, X19
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Compare X20, 0
	154 JumpIfNotEqual {169}
	155 Move X20, [X31+112]
	156 Move X19, [X31+120]
	157 Move X22, [X31+96]
	158 Move X21, [X31+104]
	159 Move X30, [X31+80]
	160 Move D9, [X31+64]
	161 Move D8, [X31+72]
	162 Move D11, [X31+48]
	163 Move D10, [X31+56]
	164 Add X31, X31, 128
	165 Return 
	166 Call 0x1C17F20
	167 Call 0x1C17F28
	168 Call 0x1C17F20
	169 Move X0, X20
	170 Call 0x1C17F18
	171 Call 0x1C17F20
	172 Move X21, X0
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X0, X21
	175 Call 0x3EB2AD0
	176 Move X20, [X0]
	177 Call 0x3EB2AE0
	178 Compare X19, 0
	179 JumpIfNotEqual {130}
	180 Move X20, X31
	181 Move X21, X0
	182 Compare X19, 0
	183 JumpIfEqual {207}
	184 Move X10, 0x2E5000
	185 Move X8, [X19]
	186 Move X10, [X10+3584]
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Move X1, [X10]
	189 Compare X9, 0
	190 JumpIfEqual {197}
	191 Move X10, [X8+176]
	192 Add X10, X10, 8
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Subtract X9, X9, 1
	196 Add X10, X10, 16
	197 Move X0, X19
	198 Move W2, W31
	199 Call 0x1C5D788
	200 NotImplemented "Instruction LDRSW not yet implemented."
	201 Add X8, X8, X9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X1, [X0+8]
	205 Move X0, X19
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Compare X20, 0
	208 JumpIfNotEqual {211}
	209 Move X0, X21
	210 Call 0x1D2D690
	211 Move X0, X20
	212 Call 0x1C17F18
	213 Call 0x1991590

Method: System.Void LinkTagOnPointerMove(UnityEngine.UIElements.PointerMoveEvent pme)

Disassembly:
	0x03E0F124 LDP D9, D8, [X31 + 0x10]
	0x03E0F128 LDP D11, D10, [X31], #0x50
	0x03E0F12C RET
	0x03E0F130 ADRP X19, 0x5CA000
	0x03E0F134 LDRB W8, [X19 + 0x78F]
	0x03E0F138 CBNZ W8, 0x3E0F150
	0x03E0F13C ADRP X0, 0x2EC000
	0x03E0F140 LDR X0, [X0 + 0xF08]
	0x03E0F144 BL 0x1C16CF4
	0x03E0F148 MOVZ W8, 0x1
	0x03E0F14C STRB W8, [X19 + 0x78F]
	0x03E0F150 ADRP X8, 0x2EC000
	0x03E0F154 LDR X8, [X8 + 0xF08]
	0x03E0F158 LDR X8, [X8]
	0x03E0F15C LDR X8, [X8 + 0xB8]
	0x03E0F160 LDP S8, S1, [X8]
	0x03E0F164 B 0x3E0F114
	0x03E0F168 LDR X0, [X19 + 0x3D8]
	0x03E0F16C CBZ X0, 0x3E0F1E0
	0x03E0F170 MOV X1, X21
	0x03E0F174 MOV V0.16B, V10.16B
	0x03E0F178 MOV V1.16B, V8.16B
	0x03E0F17C BL 0x3E0CC04
	0x03E0F180 CMP W20, 0x2
	0x03E0F184 MOV V10.16B, V0.16B
	0x03E0F188 B.NE 0x3E0F194
	0x03E0F18C FCMP S10, S8
	0x03E0F190 FCSEL S10, S10, S8, MI
	0x03E0F194 FMOV S2, W31
	0x03E0F198 MOV V0.16B, V11.16B
	0x03E0F19C MOV V1.16B, V9.16B
	0x03E0F1A0 MOV X0, X31
	0x03E0F1A4 BL 0x3CE815C
	0x03E0F1A8 MOV V8.16B, V0.16B
	0x03E0F1AC FMOV S2, W31
	0x03E0F1B0 MOV V0.16B, V10.16B
	0x03E0F1B4 MOV V1.16B, V9.16B
	0x03E0F1B8 MOV X0, X31
	0x03E0F1BC BL 0x3CE815C
	0x03E0F1C0 LDR X8, [X19 + 0x3D8]
	0x03E0F1C4 CBZ X8, 0x3E0F1E0
	0x03E0F1C8 STP S11, S10, [X8 + 0x34]
	0x03E0F1CC LDR X8, [X19 + 0x3D8]
	0x03E0F1D0 CBZ X8, 0x3E0F1E0
	0x03E0F1D4 MOV V1.16B, V0.16B
	0x03E0F1D8 STP S8, S0, [X8 + 0x3C]
	0x03E0F1DC B 0x3E0F114
	0x03E0F1E0 BL 0x1C16F20
	0x03E0F1E4 SUB X31, X31, 0x30
	0x03E0F1E8 STR X30, [X31 + 0x10]
	0x03E0F1EC STP X20, X19, [X31 + 0x20]
	0x03E0F1F0 ADRP X20, 0x5D9000
	0x03E0F1F4 LDRB W8, [X20 + 0x36B]
	0x03E0F1F8 MOV X19, X0
	0x03E0F1FC TBNZ X8, 0x0, 0x3E0F214
	0x03E0F200 ADRP X0, 0x2E4000
	0x03E0F204 LDR X0, [X0 + 0x598]
	0x03E0F208 BL 0x1C16CF4
	0x03E0F20C MOVZ W8, 0x1
	0x03E0F210 STRB W8, [X20 + 0x36B]
	0x03E0F214 CBZ X19, 0x3E0F2A4
	0x03E0F218 ADRP X20, 0x2E4000
	0x03E0F21C LDR X20, [X20 + 0x598]
	0x03E0F220 MOV X0, X19
	0x03E0F224 MOV X1, X31
	0x03E0F228 BL 0x3DE0F44
	0x03E0F22C MOV X1, X31
	0x03E0F230 BL 0x3DC9F48
	0x03E0F234 LDR X8, [X20]
	0x03E0F238 MOV X20, X0
	0x03E0F23C LDR W9, [X8 + 0xE0]
	0x03E0F240 CBNZ W9, 0x3E0F24C
	0x03E0F244 MOV X0, X8
	0x03E0F248 BL 0x1C16DFC
	0x03E0F24C MOV X0, X20
	0x03E0F250 MOV X1, X31
	0x03E0F254 MOV X2, X31
	0x03E0F258 BL 0x3C354F8
	0x03E0F25C TBZ X0, 0x0, 0x3E0F268
	0x03E0F260 MOVZ W8, 0x1
	0x03E0F264 B 0x3E0F290
	0x03E0F268 MOV X0, X19
	0x03E0F26C MOV X1, X31
	0x03E0F270 BL 0x3DE0F44
	0x03E0F274 MOV X1, X31
	0x03E0F278 BL 0x3DC9F98
	0x03E0F27C STP X0, X1, [X31]
	0x03E0F280 ADD X0, X31, 0x0
	0x03E0F284 MOV X1, X31
	0x03E0F288 BL 0x3DE4B38
	0x03E0F28C EOR W8, W0, 0x1
	0x03E0F290 LDP X20, X19, [X31 + 0x20]
	0x03E0F294 LDR X30, [X31 + 0x10]
	0x03E0F298 AND W0, W8, 0x1
	0x03E0F29C ADD X31, X31, 0x30
	0x03E0F2A0 RET
	0x03E0F2A4 BL 0x1C16F20
	0x03E0F2A8 SUB X31, X31, 0x120
	0x03E0F2AC STP D15, D14, [X31 + 0xA0]
	0x03E0F2B0 STP D13, D12, [X31 + 0xB0]
	0x03E0F2B4 STP D11, D10, [X31 + 0xC0]
	0x03E0F2B8 STP D9, D8, [X31 + 0xD0]
	0x03E0F2BC STR X29, [X31 + 0xE0]
	0x03E0F2C0 STP X30, X23, [X31 + 0xF0]
	0x03E0F2C4 STP X22, X21, [X31 + 0x100]
	0x03E0F2C8 STP X20, X19, [X31 + 0x110]
	0x03E0F2CC ADRP X22, 0x5D9000
	0x03E0F2D0 ADRP X20, 0x2E4000
	0x03E0F2D4 MOV X19, X8
	0x03E0F2D8 LDRB W8, [X22 + 0x36D]
	0x03E0F2DC LDR X20, [X20 + 0x598]
	0x03E0F2E0 MOV X21, X0
	0x03E0F2E4 TBNZ X8, 0x0, 0x3E0F308
	0x03E0F2E8 ADRP X0, 0x30D000
	0x03E0F2EC LDR X0, [X0 + 0x120]
	0x03E0F2F0 BL 0x1C16CF4
	0x03E0F2F4 ADRP X0, 0x2E4000
	0x03E0F2F8 LDR X0, [X0 + 0x598]
	0x03E0F2FC BL 0x1C16CF4
	0x03E0F300 MOVZ W8, 0x1
	0x03E0F304 STRB W8, [X22 + 0x36D]
	0x03E0F308 MOVI V0.2D, 0x0
	0x03E0F30C MOV X0, X21
	0x03E0F310 STR X31, [X31 + 0x90]
	0x03E0F314 STP V0, V0, [X31 + 0x70]
	0x03E0F318 STP V0, V0, [X31 + 0x50]
	0x03E0F31C STR V0, [X31 + 0x4]
	0x03E0F320 BL 0x3E0EB14
	0x03E0F324 LDR X8, [X20]
	0x03E0F328 MOV X22, X0
	0x03E0F32C LDR W9, [X8 + 0xE0]
	0x03E0F330 CBNZ W9, 0x3E0F33C
	0x03E0F334 MOV X0, X8
	0x03E0F338 BL 0x1C16DFC
	0x03E0F33C MOV X0, X22
	0x03E0F340 MOV X1, X31
	0x03E0F344 MOV X2, X31
	0x03E0F348 BL 0x3C3883C
	0x03E0F34C TBZ X0, 0x0, 0x3E0F384
	0x03E0F350 MOV X8, X31
	0x03E0F354 STP X31, X31, [X31]
	0x03E0F358 FMOV S8, W31
	0x03E0F35C FMOV S15, W31
	0x03E0F360 FMOV S2, W31
	0x03E0F364 FMOV S12, W31
	0x03E0F368 FMOV S13, W31
	0x03E0F36C FMOV S14, W31
	0x03E0F370 FMOV S11, W31
	0x03E0F374 FMOV S0, W31
	0x03E0F378 FMOV S9, W31
	0x03E0F37C FMOV S10, W31
	0x03E0F380 B 0x3E0F634
	0x03E0F384 CBZ X21, 0x3E0F680
	0x03E0F388 MOV X0, X21
	0x03E0F38C MOV X1, X31
	0x03E0F390 BL 0x3DE0EB8
	0x03E0F394 MOV X20, X0
	0x03E0F398 MOV X0, X21
	0x03E0F39C MOV X1, X31
	0x03E0F3A0 BL 0x3DE0F44
	0x03E0F3A4 MOV X1, X0
	0x03E0F3A8 ADD X0, X31, 0x40
	0x03E0F3AC MOVZ W2, 0x58
	0x03E0F3B0 BL 0x3EB1B30
	0x03E0F3B4 MOV X0, X21
	0x03E0F3B8 MOV X1, X22
	0x03E0F3BC BL 0x3E0EF64
	0x03E0F3C0 CBZ X20, 0x3E0F680
	0x03E0F3C4 ADRP X21, 0x30D000
	0x03E0F3C8 LDR X8, [X20]
	0x03E0F3CC LDR X21, [X21 + 0x120]
	0x03E0F3D0 MOV V8.16B, V0.16B
	0x03E0F3D4 LDRH W9, [X8 + 0x12E]
	0x03E0F3D8 LDR X1, [X21]
	0x03E0F3DC CBZ X9, 0x3E0F400
	0x03E0F3E0 LDR X10, [X8 + 0xB0]
	0x03E0F3E4 ADD X10, X10, 0x8
	0x03E0F3E8 LDUR X11, [X10 - 0x8]
	0x03E0F3EC CMP X11, X1
	0x03E0F3F0 B.EQ 0x3E0F410
	0x03E0F3F4 SUBS X9, X9, 0x1
	0x03E0F3F8 ADD X10, X10, 0x10
	0x03E0F3FC B.NE 0x3E0F3E8
	0x03E0F400 MOVZ W2, 0x2A
	0x03E0F404 MOV X0, X20
	0x03E0F408 BL 0x1C5C788
	0x03E0F40C B 0x3E0F420
	0x03E0F410 LDR W9, [X10]
	0x03E0F414 ADD W9, W9, 0x2A
	0x03E0F418 ADD X8, X8, W9, 0x4, SXTW
	0x03E0F41C ADD X0, X8, 0x138
	0x03E0F420 LDP X8, X1, [X0]
	0x03E0F424 MOV X0, X20
	0x03E0F428 BLR X8
	0x03E0F42C FMUL S0, S8, S0
	0x03E0F430 FMOV S9, 1
	0x03E0F434 FMIN S1, S0, S9
	0x03E0F438 FCMP S0, 0x0
	0x03E0F43C FMOV S10, W31
	0x03E0F440 ADD X8, X31, 0x20
	0x03E0F444 ADD X0, X31, 0x40
	0x03E0F448 MOV X1, X31
	0x03E0F44C FCSEL S15, S1, S10, PL
	0x03E0F450 BL 0x3DC9C7C
	0x03E0F454 LDR V0, [X31 + 0x28]
	0x03E0F458 ADD X8, X31, 0x20
	0x03E0F45C ADD X0, X31, 0x40
	0x03E0F460 MOV X1, X31
	0x03E0F464 FMUL S0, S8, S0
	0x03E0F468 FMIN S1, S0, S9
	0x03E0F46C FCMP S0, 0x0
	0x03E0F470 FCSEL S0, S1, S10, PL
	0x03E0F474 STR S0, [X31 + 0xEC]
	0x03E0F478 BL 0x3DC9C7C
	0x03E0F47C LDR V0, [X31 + 0x20]
	0x03E0F480 ADD X8, X31, 0x20
	0x03E0F484 ADD X0, X31, 0x40
	0x03E0F488 MOV X1, X31
	0x03E0F48C FCMP S0, 0x0
	0x03E0F490 B.PL 0x3E0F4AC
	0x03E0F494 BL 0x3DC9C7C
	0x03E0F498 LDR V0, [X31 + 0x20]
	0x03E0F49C FMOV S1, -1
	0x03E0F4A0 FMUL S0, S8, S0
	0x03E0F4A4 FMAXNM S9, S0, S1
	0x03E0F4A8 B 0x3E0F4BC
	0x03E0F4AC BL 0x3DC9C7C
	0x03E0F4B0 LDR V0, [X31 + 0x20]
	0x03E0F4B4 FMUL S0, S8, S0
	0x03E0F4B8 FMINNM S9, S0, S9
	0x03E0F4BC ADD X8, X31, 0x20
	0x03E0F4C0 ADD X0, X31, 0x40
	0x03E0F4C4 MOV X1, X31
	0x03E0F4C8 BL 0x3DC9C7C
	0x03E0F4CC LDR V0, [X31 + 0x24]
	0x03E0F4D0 ADD X8, X31, 0x20
	0x03E0F4D4 ADD X0, X31, 0x40
	0x03E0F4D8 MOV X1, X31
	0x03E0F4DC FCMP S0, 0x0
	0x03E0F4E0 B.PL 0x3E0F4FC
	0x03E0F4E4 BL 0x3DC9C7C
	0x03E0F4E8 LDR V0, [X31 + 0x24]
	0x03E0F4EC FMOV S1, -1
	0x03E0F4F0 FMUL S0, S8, S0
	0x03E0F4F4 FMAXNM S8, S0, S1
	0x03E0F4F8 B 0x3E0F510
	0x03E0F4FC BL 0x3DC9C7C
	0x03E0F500 LDR V0, [X31 + 0x24]
	0x03E0F504 FMOV S1, 1
	0x03E0F508 FMUL S0, S8, S0
	0x03E0F50C FMINNM S8, S0, S1
	0x03E0F510 LDR X8, [X20]
	0x03E0F514 LDR X1, [X21]
	0x03E0F518 LDRH W9, [X8 + 0x12E]
	0x03E0F51C CBZ X9, 0x3E0F540
	0x03E0F520 LDR X10, [X8 + 0xB0]
	0x03E0F524 ADD X10, X10, 0x8
	0x03E0F528 LDUR X11, [X10 - 0x8]
	0x03E0F52C CMP X11, X1
	0x03E0F530 B.EQ 0x3E0F550
	0x03E0F534 SUBS X9, X9, 0x1
	0x03E0F538 ADD X10, X10, 0x10
	0x03E0F53C B.NE 0x3E0F528
	0x03E0F540 MOVZ W2, 0xE
	0x03E0F544 MOV X0, X20
	0x03E0F548 BL 0x1C5C788
	0x03E0F54C B 0x3E0F560
	0x03E0F550 LDR W9, [X10]
	0x03E0F554 ADD W9, W9, 0xE
	0x03E0F558 ADD X8, X8, W9, 0x4, SXTW
	0x03E0F55C ADD X0, X8, 0x138
	0x03E0F560 LDP X8, X1, [X0]
	0x03E0F564 MOV X0, X20
	0x03E0F568 FMOV W23, S9
	0x03E0F56C FMOV W22, S8
	0x03E0F570 BLR X8
	0x03E0F574 LDR X8, [X20]
	0x03E0F578 LDR X1, [X21]
	0x03E0F57C MOV V10.16B, V0.16B
	0x03E0F580 MOV V9.16B, V1.16B
	0x03E0F584 LDRH W9, [X8 + 0x12E]
	0x03E0F588 MOV V11.16B, V3.16B
	0x03E0F58C STR S2, [X31 + 0xE8]
	0x03E0F590 CBZ X9, 0x3E0F5B4
	0x03E0F594 LDR X10, [X8 + 0xB0]
	0x03E0F598 ADD X10, X10, 0x8
	0x03E0F59C LDUR X11, [X10 - 0x8]
	0x03E0F5A0 CMP X11, X1
	0x03E0F5A4 B.EQ 0x3E0F5C4
	0x03E0F5A8 SUBS X9, X9, 0x1
	0x03E0F5AC ADD X10, X10, 0x10
	0x03E0F5B0 B.NE 0x3E0F59C
	0x03E0F5B4 MOVZ W2, 0x29
	0x03E0F5B8 MOV X0, X20
	0x03E0F5BC BL 0x1C5C788
	0x03E0F5C0 B 0x3E0F5D4
	0x03E0F5C4 LDR W9, [X10]
	0x03E0F5C8 ADD W9, W9, 0x29
	0x03E0F5CC ADD X8, X8, W9, 0x4, SXTW
	0x03E0F5D0 ADD X0, X8, 0x138
	0x03E0F5D4 LDP X8, X1, [X0]
	0x03E0F5D8 MOV X0, X20
	0x03E0F5DC BLR X8
	0x03E0F5E0 ADRP X8, 0xFFFFFFFFFCCDA000
	0x03E0F5E4 MOV V14.16B, V0.16B
	0x03E0F5E8 LDR V0, [X8 + 0xF9C]
	0x03E0F5EC ADD X8, X31, 0x0
	0x03E0F5F0 ADD X0, X31, 0x40
	0x03E0F5F4 MOV X1, X31
	0x03E0F5F8 FCMP S15, S0
	0x03E0F5FC FMOV S0, W31
	0x03E0F600 MOV V13.16B, V1.16B
	0x03E0F604 MOV V12.16B, V2.16B
	0x03E0F608 FCSEL S8, S0, S3, MI
	0x03E0F60C BL 0x3DC9C7C
	0x03E0F610 LDUR V0, [X31 + 0xC]
	0x03E0F614 LDR V1, [X31]
	0x03E0F618 MOV W8, W23
	0x03E0F61C BFM X8, X22, 0x20, 0x1F
	0x03E0F620 STUR V0, [X31 + 0x2C]
	0x03E0F624 STR V1, [X31 + 0x2]
	0x03E0F628 LDUR V0, [X31 + 0x2C]
	0x03E0F62C STR V0, [X31]
	0x03E0F630 LDP S0, S2, [X31 + 0xE8]
	0x03E0F634 STP S0, S11, [X19 + 0x8]
	0x03E0F638 LDR V0, [X31]
	0x03E0F63C STP S10, S9, [X19]
	0x03E0F640 STP S14, S13, [X19 + 0x10]
	0x03E0F644 STP S12, S8, [X19 + 0x18]
	0x03E0F648 STR S15, [X19 + 0x20]
	0x03E0F64C STUR X8, [X19 + 0x34]
	0x03E0F650 STUR V0, [X19 + 0x24]
	0x03E0F654 STR S2, [X19 + 0x3C]
	0x03E0F658 LDP X20, X19, [X31 + 0x110]
	0x03E0F65C LDP X22, X21, [X31 + 0x100]
	0x03E0F660 LDP X30, X23, [X31 + 0xF0]
	0x03E0F664 LDR X29, [X31 + 0xE0]
	0x03E0F668 LDP D9, D8, [X31 + 0xD0]
	0x03E0F66C LDP D11, D10, [X31 + 0xC0]
	0x03E0F670 LDP D13, D12, [X31 + 0xB0]
	0x03E0F674 LDP D15, D14, [X31 + 0xA0]
	0x03E0F678 ADD X31, X31, 0x120
	0x03E0F67C RET
	0x03E0F680 BL 0x1C16F20
	0x03E0F684 STP X30, X25, [X31 - 0x40]!
	0x03E0F688 STP X24, X23, [X31 + 0x10]
	0x03E0F68C STP X22, X21, [X31 + 0x20]
	0x03E0F690 STP X20, X19, [X31 + 0x30]
	0x03E0F694 ADRP X22, 0x5D9000
	0x03E0F698 ADRP X25, 0x2E6000
	0x03E0F69C ADRP X20, 0x35B000
	0x03E0F6A0 ADRP X21, 0x30D000
	0x03E0F6A4 LDRB W8, [X22 + 0x36E]
	0x03E0F6A8 LDR X25, [X25 + 0x278]
	0x03E0F6AC LDR X20, [X20 + 0x4D0]
	0x03E0F6B0 LDR X21, [X21 + 0xEC8]
	0x03E0F6B4 MOV X19, X0
	0x03E0F6B8 ADD X24, X0, 0x478
	0x03E0F6BC TBNZ X8, 0x0, 0x3E0F728
	0x03E0F6C0 ADRP X0, 0x354000
	0x03E0F6C4 LDR X0, [X0 + 0xD48]
	0x03E0F6C8 BL 0x1C16CF4
	0x03E0F6CC ADRP X0, 0x30E000
	0x03E0F6D0 LDR X0, [X0 + 0x658]
	0x03E0F6D4 BL 0x1C16CF4
	0x03E0F6D8 ADRP X0, 0x30E000
	0x03E0F6DC LDR X0, [X0 + 0x660]
	0x03E0F6E0 BL 0x1C16CF4
	0x03E0F6E4 ADRP X0, 0x2E6000
	0x03E0F6E8 LDR X0, [X0 + 0x278]
	0x03E0F6EC BL 0x1C16CF4
	0x03E0F6F0 ADRP X0, 0x35B000
	0x03E0F6F4 LDR X0, [X0 + 0x4D8]
	0x03E0F6F8 BL 0x1C16CF4
	0x03E0F6FC ADRP X0, 0x35B000
	0x03E0F700 LDR X0, [X0 + 0x4E0]
	0x03E0F704 BL 0x1C16CF4
	0x03E0F708 ADRP X0, 0x30D000
	0x03E0F70C LDR X0, [X0 + 0xEC8]
	0x03E0F710 BL 0x1C16CF4
	0x03E0F714 ADRP X0, 0x35B000
	0x03E0F718 LDR X0, [X0 + 0x4D0]
	0x03E0F71C BL 0x1C16CF4
	0x03E0F720 MOVZ W8, 0x1
	0x03E0F724 STRB W8, [X22 + 0x36E]
	0x03E0F728 ADRP X22, 0x354000
	0x03E0F72C ADRP X23, 0x35B000
	0x03E0F730 LDR X22, [X22 + 0xD48]
	0x03E0F734 LDR X23, [X23 + 0x4D8]
	0x03E0F738 LDR X8, [X25]
	0x03E0F73C ADRP X10, 0xFFFFFFFFFCCDD000
	0x03E0F740 LDR V0, [X10 + 0xD3]
	0x03E0F744 ADRP X10, 0xFFFFFFFFFCCDB000
	0x03E0F748 LDR X8, [X8 + 0xB8]
	0x03E0F74C LDR V1, [X10 + 0xA5]
	0x03E0F750 MOVZ W9, 0x101
	0x03E0F754 MOVZ W10, 0x1
	0x03E0F758 LDR X8, [X8]
	0x03E0F75C MOVN W25, 0x0
	0x03E0F760 STRB W10, [X19 + 0x3EA]
	0x03E0F764 STRB W10, [X19 + 0x41D]
	0x03E0F768 STR X8, [X19 + 0x3E0]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], D11
	003 Move [X31+56], D10
	004 Move [X31+64], D9
	005 Move [X31+72], D8
	006 Move [X31+80], X30
	007 Move [X31+96], X22
	008 Move [X31+104], X21
	009 Move [X31+112], X20
	010 Move [X31+120], X19
	011 Move X21, 0x5DA000
	012 Move W8, [X21+867]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x2E5000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x354000
	023 Move X0, [X0+2648]
	024 Call 0x1C17CF4
	025 Move X0, 0x358000
	026 Move X0, [X0+928]
	027 Call 0x1C17CF4
	028 Move X0, 0x358000
	029 Move X0, [X0+1000]
	030 Call 0x1C17CF4
	031 Move X0, 0x358000
	032 Move X0, [X0+856]
	033 Call 0x1C17CF4
	034 Move X0, 0x2E7000
	035 Move X0, [X0+632]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+867], W8
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+16], V0
	041 Move [X31+24], V0
	042 Move [X31], V0
	043 Compare X20, 0
	044 JumpIfEqual {293}
	045 Move X0, [X19+72]
	046 Compare X0, 0
	047 JumpIfEqual {293}
	048 Move S10, [X20+192]
	049 Move S11, [X20+196]
	050 Move V8, [X20+200]
	051 Move X1, X31
	052 Call VisualElement.get_contentRect, X0
	053 Move X0, [X19+72]
	054 Compare X0, 0
	055 JumpIfEqual {293}
	056 Move X1, X31
	057 Move V9, V0
	058 Call VisualElement.get_contentRect, X0
	059 Subtract S0, S10, S9
	060 Subtract S1, S11, S1
	061 Move W1, 1
	062 Move X0, X19
	063 Move V2, V8
	064 Move X2, X31
	065 Call TextHandle.FindIntersectingLink, X0, X1, X2
	066 Move TEMP, X0
	067 And TEMP, TEMP, -2147483648
	068 Compare TEMP, -2147483648
	069 JumpIfEqual {150}
	070 Move W21, W0
	071 Move X0, X19
	072 Move X1, X31
	073 Call TextHandle.get_textInfo, X0
	074 Compare X0, 0
	075 JumpIfEqual {293}
	076 Move X8, [X0+64]
	077 Compare X8, 0
	078 JumpIfEqual {293}
	079 Move W9, [X8+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W9, 48
	082 NotImplemented "Instruction UMADDL not yet implemented."
	083 Move V0, [X8+32]
	084 Move V1, [X8+48]
	085 Move V2, [X8+4]
	086 Move W9, 0xAFB9
	087 NotImplemented "Instruction MOVK not yet implemented."
	088 Move [X31], V0
	089 Move [X31+8], V1
	090 Move W8, [X31]
	091 Move [X31+2], V2
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W9, [X19+84]
	094 Add W31, W9, 1
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Add X0, X31, 0
	097 Move X1, X31
	098 Call LinkInfo.GetLinkId, X0
	099 Move X21, X0
	100 Move X0, X19
	101 Move X1, X31
	102 Call TextHandle.get_textInfo, X0
	103 Move X1, X0
	104 Add X0, X31, 0
	105 Move X2, X31
	106 Call LinkInfo.GetLinkText, X0, X1
	107 Move X8, 0x358000
	108 Move X8, [X8+928]
	109 Move X22, X0
	110 Move X8, [X8]
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {116}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 Move X0, X20
	117 Move X1, X21
	118 Move X2, X22
	119 Move X3, X31
	120 Call PointerMoveLinkTagEvent.GetPooled, X0, X1, X2
	121 Move X20, X0
	122 Compare X0, 0
	123 JumpIfEqual {299}
	124 Move X1, [X19+72]
	125 Move X0, X20
	126 Move X2, X31
	127 Call EventBase.set_target, X0, X1
	128 Move X0, [X19+72]
	129 Compare X0, 0
	130 JumpIfEqual {300}
	131 Move X8, [X0]
	132 Move X9, [X8+408]
	133 Move X2, [X8+416]
	134 Move X1, X20
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move X19, X31
	137 Move X10, 0x2E5000
	138 Move X8, [X20]
	139 Move X10, [X10+3584]
	140 NotImplemented "Instruction LDRH not yet implemented."
	141 Move X1, [X10]
	142 Compare X9, 0
	143 JumpIfEqual {201}
	144 Move X10, [X8+176]
	145 Add X10, X10, 8
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Subtract X9, X9, 1
	149 Add X10, X10, 16
	150 Move W8, [X19+84]
	151 Add W31, W8, 1
	152 Move TEMP, 0
	153 Not TEMP
	154 Move W8, TEMP
	155 Move [X19+84], W8
	156 Move X8, 0x2E7000
	157 Move X8, [X8+632]
	158 Move X9, 0x358000
	159 Move X8, [X8]
	160 Move X9, [X9+1000]
	161 Move X8, [X8+184]
	162 Move X0, [X9]
	163 Move X21, [X8]
	164 Move W9, [X0+224]
	165 Compare W9, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move X0, X20
	169 Move X1, X21
	170 Move X2, X31
	171 Call PointerOutLinkTagEvent.GetPooled, X0, X1
	172 Move X20, X0
	173 Compare X0, 0
	174 JumpIfEqual {295}
	175 Move X1, [X19+72]
	176 Move X0, X20
	177 Move X2, X31
	178 Call EventBase.set_target, X0, X1
	179 Move X0, [X19+72]
	180 Compare X0, 0
	181 JumpIfEqual {296}
	182 Move X8, [X0]
	183 Move X9, [X8+408]
	184 Move X2, [X8+416]
	185 Move X1, X20
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move X19, X31
	188 Move X10, 0x2E5000
	189 Move X8, [X20]
	190 Move X10, [X10+3584]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X1, [X10]
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move X0, X20
	202 Move W2, W31
	203 Call 0x1C5D788
	204 NotImplemented "Instruction LDRSW not yet implemented."
	205 Add X8, X8, X9
	206 Add X0, X8, 312
	207 Move X8, [X0]
	208 Move X1, [X0+8]
	209 Move X0, X20
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Compare X19, 0
	212 JumpIfNotEqual {291}
	213 Move X20, [X31+112]
	214 Move X19, [X31+120]
	215 Move X22, [X31+96]
	216 Move X21, [X31+104]
	217 Move X30, [X31+80]
	218 Move D9, [X31+64]
	219 Move D8, [X31+72]
	220 Move D11, [X31+48]
	221 Move D10, [X31+56]
	222 Add X31, X31, 128
	223 Return 
	224 Add X0, X31, 0
	225 Move X1, X31
	226 Move [X19+84], W8
	227 Call LinkInfo.GetLinkId, X0
	228 Move X21, X0
	229 Move X0, X19
	230 Move X1, X31
	231 Call TextHandle.get_textInfo, X0
	232 Move X1, X0
	233 Add X0, X31, 0
	234 Move X2, X31
	235 Call LinkInfo.GetLinkText, X0, X1
	236 Move X8, 0x358000
	237 Move X8, [X8+856]
	238 Move X22, X0
	239 Move X8, [X8]
	240 Move W9, [X8+224]
	241 Compare W9, 0
	242 JumpIfNotEqual {245}
	243 Move X0, X8
	244 Call 0x1C17DFC
	245 Move X0, X20
	246 Move X1, X21
	247 Move X2, X22
	248 Move X3, X31
	249 Call PointerOverLinkTagEvent.GetPooled, X0, X1, X2
	250 Move X20, X0
	251 Compare X0, 0
	252 JumpIfEqual {297}
	253 Move X1, [X19+72]
	254 Move X0, X20
	255 Move X2, X31
	256 Call EventBase.set_target, X0, X1
	257 Move X0, [X19+72]
	258 Compare X0, 0
	259 JumpIfEqual {298}
	260 Move X8, [X0]
	261 Move X9, [X8+408]
	262 Move X2, [X8+416]
	263 Move X1, X20
	264 NotImplemented "Instruction BLR not yet implemented."
	265 Move X19, X31
	266 Move X10, 0x2E5000
	267 Move X8, [X20]
	268 Move X10, [X10+3584]
	269 NotImplemented "Instruction LDRH not yet implemented."
	270 Move X1, [X10]
	271 Compare X9, 0
	272 JumpIfEqual {279}
	273 Move X10, [X8+176]
	274 Add X10, X10, 8
	275 NotImplemented "Instruction LDUR not yet implemented."
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Subtract X9, X9, 1
	278 Add X10, X10, 16
	279 Move X0, X20
	280 Move W2, W31
	281 Call 0x1C5D788
	282 NotImplemented "Instruction LDRSW not yet implemented."
	283 Add X8, X8, X9
	284 Add X0, X8, 312
	285 Move X8, [X0]
	286 Move X1, [X0+8]
	287 Move X0, X20
	288 NotImplemented "Instruction BLR not yet implemented."
	289 Compare X19, 0
	290 JumpIfEqual {213}
	291 Move X0, X19
	292 Call 0x1C17F18
	293 Call 0x1C17F20
	294 Call 0x1C17F28
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Call 0x1C17F20
	298 Call 0x1C17F20
	299 Call 0x1C17F20
	300 Call 0x1C17F20
	301 Move X21, X0
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move X0, X21
	304 Call 0x3EB2AD0
	305 Move X8, [X0]
	306 Move [X31+88], X8
	307 Call 0x3EB2AE0
	308 Move X19, [X31+88]
	309 Compare X20, 0
	310 JumpIfNotEqual {137}
	311 Move [X31+88], X31
	312 Move X21, X0
	313 Compare X20, 0
	314 JumpIfEqual {338}
	315 Move X10, 0x2E5000
	316 Move X8, [X20]
	317 Move X10, [X10+3584]
	318 NotImplemented "Instruction LDRH not yet implemented."
	319 Move X1, [X10]
	320 Compare X9, 0
	321 JumpIfEqual {328}
	322 Move X10, [X8+176]
	323 Add X10, X10, 8
	324 NotImplemented "Instruction LDUR not yet implemented."
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Subtract X9, X9, 1
	327 Add X10, X10, 16
	328 Move X0, X20
	329 Move W2, W31
	330 Call 0x1C5D788
	331 NotImplemented "Instruction LDRSW not yet implemented."
	332 Add X8, X8, X9
	333 Add X0, X8, 312
	334 Move X8, [X0]
	335 Move X1, [X0+8]
	336 Move X0, X20
	337 NotImplemented "Instruction BLR not yet implemented."
	338 Move X8, [X31+88]
	339 Compare X8, 0
	340 JumpIfEqual {422}
	341 Move X0, [X31+88]
	342 Call 0x1C17F18
	343 Move X21, X0
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move X0, X21
	346 Call 0x3EB2AD0
	347 Move X8, [X0]
	348 Move [X31+88], X8
	349 Call 0x3EB2AE0
	350 Move X19, [X31+88]
	351 Compare X20, 0
	352 JumpIfNotEqual {266}
	353 Move [X31+88], X31
	354 Move X21, X0
	355 Compare X20, 0
	356 JumpIfEqual {380}
	357 Move X10, 0x2E5000
	358 Move X8, [X20]
	359 Move X10, [X10+3584]
	360 NotImplemented "Instruction LDRH not yet implemented."
	361 Move X1, [X10]
	362 Compare X9, 0
	363 JumpIfEqual {370}
	364 Move X10, [X8+176]
	365 Add X10, X10, 8
	366 NotImplemented "Instruction LDUR not yet implemented."
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Subtract X9, X9, 1
	369 Add X10, X10, 16
	370 Move X0, X20
	371 Move W2, W31
	372 Call 0x1C5D788
	373 NotImplemented "Instruction LDRSW not yet implemented."
	374 Add X8, X8, X9
	375 Add X0, X8, 312
	376 Move X8, [X0]
	377 Move X1, [X0+8]
	378 Move X0, X20
	379 NotImplemented "Instruction BLR not yet implemented."
	380 Move X8, [X31+88]
	381 Compare X8, 0
	382 JumpIfEqual {422}
	383 Move X0, [X31+88]
	384 Call 0x1C17F18
	385 Move X21, X0
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Move X0, X21
	388 Call 0x3EB2AD0
	389 Move X19, [X0]
	390 Call 0x3EB2AE0
	391 Compare X20, 0
	392 JumpIfNotEqual {188}
	393 Move X19, X31
	394 Move X21, X0
	395 Compare X20, 0
	396 JumpIfEqual {420}
	397 Move X10, 0x2E5000
	398 Move X8, [X20]
	399 Move X10, [X10+3584]
	400 NotImplemented "Instruction LDRH not yet implemented."
	401 Move X1, [X10]
	402 Compare X9, 0
	403 JumpIfEqual {410}
	404 Move X10, [X8+176]
	405 Add X10, X10, 8
	406 NotImplemented "Instruction LDUR not yet implemented."
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Subtract X9, X9, 1
	409 Add X10, X10, 16
	410 Move X0, X20
	411 Move W2, W31
	412 Call 0x1C5D788
	413 NotImplemented "Instruction LDRSW not yet implemented."
	414 Add X8, X8, X9
	415 Add X0, X8, 312
	416 Move X8, [X0]
	417 Move X1, [X0+8]
	418 Move X0, X20
	419 NotImplemented "Instruction BLR not yet implemented."
	420 Compare X19, 0
	421 JumpIfNotEqual {424}
	422 Move X0, X21
	423 Call 0x1D2D690
	424 Move X0, X19
	425 Call 0x1C17F18
	426 Call 0x1991590

Method: System.Void LinkTagOnPointerOut(UnityEngine.UIElements.PointerOutEvent poe)

Disassembly:
	0x03E0F76C ADD X8, X19, 0x471
	0x03E0F770 STRH W9, [X19 + 0x3E8]
	0x03E0F774 STR W31, [X19 + 0x418]
	0x03E0F778 STR W25, [X19 + 0x420]
	0x03E0F77C STR W9, [X8]
	0x03E0F780 MOVZ W8, 0x3F800000
	0x03E0F784 MOV X0, X19
	0x03E0F788 MOV X1, X31
	0x03E0F78C STP V0, V1, [X24]
	0x03E0F790 STR W8, [X19 + 0x498]
	0x03E0F794 BL 0x3CE9F64
	0x03E0F798 MOVZ W1, 0x1
	0x03E0F79C MOV X0, X19
	0x03E0F7A0 MOV X2, X31
	0x03E0F7A4 BL 0x3DF2904
	0x03E0F7A8 STR W25, [X19 + 0x24]
	0x03E0F7AC LDR X0, [X20]
	0x03E0F7B0 BL 0x1C16F10
	0x03E0F7B4 MOV X1, X19
	0x03E0F7B8 MOV X20, X0
	0x03E0F7BC BL 0x3E0C7A4
	0x03E0F7C0 STR X20, [X19 + 0x3D8]
	0x03E0F7C4 LDR X0, [X21]
	0x03E0F7C8 LDR W8, [X0 + 0xE0]
	0x03E0F7CC CBNZ W8, 0x3E0F7D8
	0x03E0F7D0 BL 0x1C16DFC
	0x03E0F7D4 LDR X0, [X21]
	0x03E0F7D8 LDR X8, [X0 + 0xB8]
	0x03E0F7DC MOV X0, X19
	0x03E0F7E0 MOV X2, X31
	0x03E0F7E4 LDR X1, [X8]
	0x03E0F7E8 BL 0x3DF1C70
	0x03E0F7EC LDR X0, [X22]
	0x03E0F7F0 LDR X20, [X19 + 0x338]
	0x03E0F7F4 BL 0x1C16F10
	0x03E0F7F8 LDR X2, [X23]
	0x03E0F7FC MOV X1, X19
	0x03E0F800 MOV X3, X31
	0x03E0F804 MOV X21, X0
	0x03E0F808 BL 0x2A6B948
	0x03E0F80C MOV X0, X20
	0x03E0F810 MOV X1, X21
	0x03E0F814 MOV X2, X31
	0x03E0F818 BL 0x33C0DE4
	0x03E0F81C CBZ X0, 0x3E0F834
	0x03E0F820 LDR X21, [X22]
	0x03E0F824 MOV X20, X0
	0x03E0F828 MOV X1, X21
	0x03E0F82C BL 0x1C16E00
	0x03E0F830 CBZ X0, 0x3E0F890
	0x03E0F834 ADRP X8, 0x30E000
	0x03E0F838 LDR X8, [X8 + 0x660]
	0x03E0F83C STR X0, [X19 + 0x338]
	0x03E0F840 ADRP X20, 0x35B000
	0x03E0F844 ADRP X21, 0x30E000
	0x03E0F848 LDR X0, [X8]
	0x03E0F84C LDR X20, [X20 + 0x4E0]
	0x03E0F850 LDR X21, [X21 + 0x658]
	0x03E0F854 BL 0x1C16F10
	0x03E0F858 LDR X2, [X20]
	0x03E0F85C MOV X1, X19
	0x03E0F860 MOV X3, X31
	0x03E0F864 MOV X20, X0
	0x03E0F868 BL 0x2D0E824
	0x03E0F86C LDR X3, [X21]
	0x03E0F870 MOV X0, X19
	0x03E0F874 MOV X1, X20
	0x03E0F878 LDP X20, X19, [X31 + 0x30]
	0x03E0F87C LDP X22, X21, [X31 + 0x20]
	0x03E0F880 LDP X24, X23, [X31 + 0x10]
	0x03E0F884 MOV W2, W31
	0x03E0F888 LDP X30, X25, [X31], #0x40
	0x03E0F88C B 0x21A1534
	0x03E0F890 MOV X0, X20
	0x03E0F894 MOV X1, X21
	0x03E0F898 BL 0x1C171E0
	0x03E0F89C LDR X0, [X0 + 0x3D8]
	0x03E0F8A0 RET
	0x03E0F8A4 STR X1, [X0 + 0x3D8]
	0x03E0F8A8 RET
	0x03E0F8AC B 0x3E0F8B0
	0x03E0F8B0 STR D8, [X31 - 0x30]!
	0x03E0F8B4 STP X30, X21, [X31 + 0x10]
	0x03E0F8B8 STP X20, X19, [X31 + 0x20]
	0x03E0F8BC ADRP X20, 0x5D9000
	0x03E0F8C0 LDRB W8, [X20 + 0x373]
	0x03E0F8C4 MOV X19, X0
	0x03E0F8C8 TBNZ X8, 0x0, 0x3E0F8E0
	0x03E0F8CC ADRP X0, 0x30D000
	0x03E0F8D0 LDR X0, [X0 + 0xEC8]
	0x03E0F8D4 BL 0x1C16CF4
	0x03E0F8D8 MOVZ W8, 0x1
	0x03E0F8DC STRB W8, [X20 + 0x373]
	0x03E0F8E0 MOV X0, X19
	0x03E0F8E4 BL 0x3E0FDE4
	0x03E0F8E8 TBZ X0, 0x0, 0x3E0F9AC
	0x03E0F8EC LDR X0, [X19 + 0x3D8]
	0x03E0F8F0 CBZ X0, 0x3E0F9C4
	0x03E0F8F4 BL 0x3E0EA20
	0x03E0F8F8 TBNZ X0, 0x0, 0x3E0F9B4
	0x03E0F8FC LDR X8, [X19]
	0x03E0F900 MOV X0, X19
	0x03E0F904 LDR X9, [X8 + 0xB18]
	0x03E0F908 LDR X1, [X8 + 0xB20]
	0x03E0F90C BLR X9
	0x03E0F910 ADRP X21, 0x30D000
	0x03E0F914 LDR X21, [X21 + 0xEC8]
	0x03E0F918 MOV X20, X0
	0x03E0F91C LDR X8, [X21]
	0x03E0F920 LDR W9, [X8 + 0xE0]
	0x03E0F924 CBNZ W9, 0x3E0F934
	0x03E0F928 MOV X0, X8
	0x03E0F92C BL 0x1C16DFC
	0x03E0F930 LDR X8, [X21]
	0x03E0F934 LDR X8, [X8 + 0xB8]
	0x03E0F938 MOV X0, X19
	0x03E0F93C MOV X1, X31
	0x03E0F940 LDR X21, [X8 + 0x8]
	0x03E0F944 BL 0x3DED364
	0x03E0F948 MOV X0, X19
	0x03E0F94C MOV X1, X31
	0x03E0F950 MOV V8.16B, V2.16B
	0x03E0F954 BL 0x3DE0F44
	0x03E0F958 MOV X1, X31
	0x03E0F95C BL 0x3DCA360
	0x03E0F960 MOV W3, W0
	0x03E0F964 MOV X0, X19
	0x03E0F968 MOV X1, X20
	0x03E0F96C MOV X2, X21
	0x03E0F970 MOV V0.16B, V8.16B
	0x03E0F974 BL 0x3E10E58
	0x03E0F978 LDR X8, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x5DA000
	008 Move W8, [X21+868]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x2E5000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0x358000
	019 Move X0, [X0+1000]
	020 Call 0x1C17CF4
	021 Move X0, 0x2E7000
	022 Move X0, [X0+632]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+868], W8
	026 Move W8, [X20+84]
	027 Add W31, W8, 1
	028 Move X8, 0x2E7000
	029 Move X8, [X8+632]
	030 Move X9, 0x358000
	031 Move X8, [X8]
	032 Move X9, [X9+1000]
	033 Move X8, [X8+184]
	034 Move X0, [X9]
	035 Move X21, [X8]
	036 Move W9, [X0+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X23, 0x2E5000
	041 Move X23, [X23+3584]
	042 Move X0, X19
	043 Move X1, X21
	044 Move X2, X31
	045 Call PointerOutLinkTagEvent.GetPooled, X0, X1
	046 Move X19, X0
	047 Compare X0, 0
	048 JumpIfEqual {100}
	049 Move X1, [X20+72]
	050 Move X0, X19
	051 Move X2, X31
	052 Call EventBase.set_target, X0, X1
	053 Move X0, [X20+72]
	054 Compare X0, 0
	055 JumpIfEqual {103}
	056 Move X8, [X0]
	057 Move X9, [X8+408]
	058 Move X2, [X8+416]
	059 Move X1, X19
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X21, X31
	062 Move W22, 3
	063 Move X8, [X19]
	064 Move X1, [X23]
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move X0, X19
	075 Move W2, W31
	076 Call 0x1C5D788
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Add X8, X8, X9
	079 Add X0, X8, 312
	080 Move X8, [X0]
	081 Move X1, [X0+8]
	082 Move X0, X19
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Compare X21, 0
	085 JumpIfNotEqual {101}
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Compare W22, 0
	088 JumpIfNotEqual {93}
	089 Move TEMP, 0
	090 Not TEMP
	091 Move W8, TEMP
	092 Move [X20+84], W8
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X30, [X31+48]
	098 Move X23, [X31+56]
	099 Return 
	100 Call 0x1C17F20
	101 Move X0, X21
	102 Call 0x1C17F18
	103 Call 0x1C17F20
	104 Move X22, X0
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, X22
	107 Call 0x3EB2AD0
	108 Move X21, [X0]
	109 Call 0x3EB2AE0
	110 Move W22, W31
	111 Compare X19, 0
	112 JumpIfNotEqual {63}
	113 Move X21, X31
	114 Move X22, X0
	115 Compare X19, 0
	116 JumpIfEqual {138}
	117 Move X8, [X19]
	118 Move X1, [X23]
	119 NotImplemented "Instruction LDRH not yet implemented."
	120 Compare X9, 0
	121 JumpIfEqual {128}
	122 Move X10, [X8+176]
	123 Add X10, X10, 8
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Subtract X9, X9, 1
	127 Add X10, X10, 16
	128 Move X0, X19
	129 Move W2, W31
	130 Call 0x1C5D788
	131 NotImplemented "Instruction LDRSW not yet implemented."
	132 Add X8, X8, X9
	133 Add X0, X8, 312
	134 Move X8, [X0]
	135 Move X1, [X0+8]
	136 Move X0, X19
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Compare X21, 0
	139 JumpIfNotEqual {142}
	140 Move X0, X22
	141 Call 0x1D2D690
	142 Move X0, X21
	143 Call 0x1C17F18
	144 Call 0x1991590

Method: System.Void HandleLinkTag()

Disassembly:
	0x03E0E2C0 BL 0x3D5A1E0
	0x03E0E2C4 MOV X20, X0
	0x03E0E2C8 CBZ X0, 0x3E0E554
	0x03E0E2CC LDR X1, [X19 + 0x48]
	0x03E0E2D0 MOV X0, X20
	0x03E0E2D4 MOV X2, X31
	0x03E0E2D8 BL 0x3D9C6C8
	0x03E0E2DC LDR X0, [X19 + 0x48]
	0x03E0E2E0 CBZ X0, 0x3E0E558
	0x03E0E2E4 LDR X8, [X0]
	0x03E0E2E8 LDP X9, X2, [X8 + 0x198]
	0x03E0E2EC MOV X1, X20
	0x03E0E2F0 BLR X9
	0x03E0E2F4 MOV X19, X31
	0x03E0E2F8 ADRP X10, 0x2E5000
	0x03E0E2FC LDR X8, [X20]
	0x03E0E300 LDR X10, [X10 + 0xE00]
	0x03E0E304 LDRH W9, [X8 + 0x12E]
	0x03E0E308 LDR X1, [X10]
	0x03E0E30C CBZ X9, 0x3E0E3F0
	0x03E0E310 LDR X10, [X8 + 0xB0]
	0x03E0E314 ADD X10, X10, 0x8
	0x03E0E318 LDUR X11, [X10 - 0x8]
	0x03E0E31C CMP X11, X1
	0x03E0E320 B.EQ 0x3E0E400
	0x03E0E324 SUBS X9, X9, 0x1
	0x03E0E328 ADD X10, X10, 0x10
	0x03E0E32C B.NE 0x3E0E318
	0x03E0E330 B 0x3E0E3F0
	0x03E0E334 LDR W8, [X19 + 0x54]
	0x03E0E338 ADDS W31, W8, 0x1
	0x03E0E33C B.EQ 0x3E0E41C
	0x03E0E340 MOVN W8, 0x0
	0x03E0E344 STR W8, [X19 + 0x54]
	0x03E0E348 ADRP X8, 0x2E7000
	0x03E0E34C LDR X8, [X8 + 0x278]
	0x03E0E350 ADRP X9, 0x358000
	0x03E0E354 LDR X8, [X8]
	0x03E0E358 LDR X9, [X9 + 0x3E8]
	0x03E0E35C LDR X8, [X8 + 0xB8]
	0x03E0E360 LDR X0, [X9]
	0x03E0E364 LDR X21, [X8]
	0x03E0E368 LDR W9, [X0 + 0xE0]
	0x03E0E36C CBNZ W9, 0x3E0E374
	0x03E0E370 BL 0x1C16DFC
	0x03E0E374 MOV X0, X20
	0x03E0E378 MOV X1, X21
	0x03E0E37C MOV X2, X31
	0x03E0E380 BL 0x3D5A494
	0x03E0E384 MOV X20, X0
	0x03E0E388 CBZ X0, 0x3E0E544
	0x03E0E38C LDR X1, [X19 + 0x48]
	0x03E0E390 MOV X0, X20
	0x03E0E394 MOV X2, X31
	0x03E0E398 BL 0x3D9C6C8
	0x03E0E39C LDR X0, [X19 + 0x48]
	0x03E0E3A0 CBZ X0, 0x3E0E548
	0x03E0E3A4 LDR X8, [X0]
	0x03E0E3A8 LDP X9, X2, [X8 + 0x198]
	0x03E0E3AC MOV X1, X20
	0x03E0E3B0 BLR X9
	0x03E0E3B4 MOV X19, X31
	0x03E0E3B8 ADRP X10, 0x2E5000
	0x03E0E3BC LDR X8, [X20]
	0x03E0E3C0 LDR X10, [X10 + 0xE00]
	0x03E0E3C4 LDRH W9, [X8 + 0x12E]
	0x03E0E3C8 LDR X1, [X10]
	0x03E0E3CC CBZ X9, 0x3E0E3F0
	0x03E0E3D0 LDR X10, [X8 + 0xB0]
	0x03E0E3D4 ADD X10, X10, 0x8
	0x03E0E3D8 LDUR X11, [X10 - 0x8]
	0x03E0E3DC CMP X11, X1
	0x03E0E3E0 B.EQ 0x3E0E400
	0x03E0E3E4 SUBS X9, X9, 0x1
	0x03E0E3E8 ADD X10, X10, 0x10
	0x03E0E3EC B.NE 0x3E0E3D8
	0x03E0E3F0 MOV X0, X20
	0x03E0E3F4 MOV W2, W31
	0x03E0E3F8 BL 0x1C5C788
	0x03E0E3FC B 0x3E0E40C
	0x03E0E400 LDRSW X9, [X10]
	0x03E0E404 ADD X8, X8, X9, 0x4, LSL
	0x03E0E408 ADD X0, X8, 0x138
	0x03E0E40C LDP X8, X1, [X0]
	0x03E0E410 MOV X0, X20
	0x03E0E414 BLR X8
	0x03E0E418 CBNZ X19, 0x3E0E534
	0x03E0E41C LDP X20, X19, [X31 + 0x70]
	0x03E0E420 LDP X22, X21, [X31 + 0x60]
	0x03E0E424 LDR X30, [X31 + 0x50]
	0x03E0E428 LDP D9, D8, [X31 + 0x40]
	0x03E0E42C LDP D11, D10, [X31 + 0x30]
	0x03E0E430 ADD X31, X31, 0x80
	0x03E0E434 RET
	0x03E0E438 ADD X0, X31, 0x0
	0x03E0E43C MOV X1, X31
	0x03E0E440 STR W8, [X19 + 0x54]
	0x03E0E444 BL 0x3CA8F90
	0x03E0E448 MOV X21, X0
	0x03E0E44C MOV X0, X19
	0x03E0E450 MOV X1, X31
	0x03E0E454 BL 0x3CC98D0
	0x03E0E458 MOV X1, X0
	0x03E0E45C ADD X0, X31, 0x0
	0x03E0E460 MOV X2, X31
	0x03E0E464 BL 0x3CA8E98
	0x03E0E468 ADRP X8, 0x358000
	0x03E0E46C LDR X8, [X8 + 0x358]
	0x03E0E470 MOV X22, X0
	0x03E0E474 LDR X8, [X8]
	0x03E0E478 LDR W9, [X8 + 0xE0]
	0x03E0E47C CBNZ W9, 0x3E0E488
	0x03E0E480 MOV X0, X8
	0x03E0E484 BL 0x1C16DFC
	0x03E0E488 MOV X0, X20
	0x03E0E48C MOV X1, X21
	0x03E0E490 MOV X2, X22
	0x03E0E494 MOV X3, X31
	0x03E0E498 BL 0x3D59F1C
	0x03E0E49C MOV X20, X0
	0x03E0E4A0 CBZ X0, 0x3E0E54C
	0x03E0E4A4 LDR X1, [X19 + 0x48]
	0x03E0E4A8 MOV X0, X20
	0x03E0E4AC MOV X2, X31
	0x03E0E4B0 BL 0x3D9C6C8
	0x03E0E4B4 LDR X0, [X19 + 0x48]
	0x03E0E4B8 CBZ X0, 0x3E0E550
	0x03E0E4BC LDR X8, [X0]
	0x03E0E4C0 LDP X9, X2, [X8 + 0x198]
	0x03E0E4C4 MOV X1, X20
	0x03E0E4C8 BLR X9
	0x03E0E4CC MOV X19, X31
	0x03E0E4D0 ADRP X10, 0x2E5000
	0x03E0E4D4 LDR X8, [X20]
	0x03E0E4D8 LDR X10, [X10 + 0xE00]
	0x03E0E4DC LDRH W9, [X8 + 0x12E]
	0x03E0E4E0 LDR X1, [X10]
	0x03E0E4E4 CBZ X9, 0x3E0E508
	0x03E0E4E8 LDR X10, [X8 + 0xB0]
	0x03E0E4EC ADD X10, X10, 0x8
	0x03E0E4F0 LDUR X11, [X10 - 0x8]
	0x03E0E4F4 CMP X11, X1
	0x03E0E4F8 B.EQ 0x3E0E518
	0x03E0E4FC SUBS X9, X9, 0x1
	0x03E0E500 ADD X10, X10, 0x10
	0x03E0E504 B.NE 0x3E0E4F0
	0x03E0E508 MOV X0, X20
	0x03E0E50C MOV W2, W31
	0x03E0E510 BL 0x1C5C788
	0x03E0E514 B 0x3E0E524
	0x03E0E518 LDRSW X9, [X10]
	0x03E0E51C ADD X8, X8, X9, 0x4, LSL
	0x03E0E520 ADD X0, X8, 0x138
	0x03E0E524 LDP X8, X1, [X0]
	0x03E0E528 MOV X0, X20
	0x03E0E52C BLR X8
	0x03E0E530 CBZ X19, 0x3E0E41C
	0x03E0E534 MOV X0, X19
	0x03E0E538 BL 0x1C16F18
	0x03E0E53C BL 0x1C16F20
	0x03E0E540 BL 0x1C16F28
	0x03E0E544 BL 0x1C16F20
	0x03E0E548 BL 0x1C16F20
	0x03E0E54C BL 0x1C16F20
	0x03E0E550 BL 0x1C16F20
	0x03E0E554 BL 0x1C16F20
	0x03E0E558 BL 0x1C16F20
	0x03E0E55C B 0x3E0E560
	0x03E0E560 MOV X21, X0
	0x03E0E564 CMP W1, 0x1
	0x03E0E568 B.NE 0x3E0E58C
	0x03E0E56C MOV X0, X21
	0x03E0E570 BL 0x3EB1AD0
	0x03E0E574 LDR X8, [X0]
	0x03E0E578 STR X8, [X31 + 0x58]
	0x03E0E57C BL 0x3EB1AE0
	0x03E0E580 LDR X19, [X31 + 0x58]
	0x03E0E584 CBNZ X20, 0x3E0E2F8
	0x03E0E588 B 0x3E0E418
	0x03E0E58C STR X31, [X31 + 0x58]
	0x03E0E590 B 0x3E0E598
	0x03E0E594 MOV X21, X0
	0x03E0E598 CBZ X20, 0x3E0E5FC
	0x03E0E59C ADRP X10, 0x2E5000
	0x03E0E5A0 LDR X8, [X20]
	0x03E0E5A4 LDR X10, [X10 + 0xE00]
	0x03E0E5A8 LDRH W9, [X8 + 0x12E]
	0x03E0E5AC LDR X1, [X10]
	0x03E0E5B0 CBZ X9, 0x3E0E5D4
	0x03E0E5B4 LDR X10, [X8 + 0xB0]
	0x03E0E5B8 ADD X10, X10, 0x8
	0x03E0E5BC LDUR X11, [X10 - 0x8]
	0x03E0E5C0 CMP X11, X1
	0x03E0E5C4 B.EQ 0x3E0E5E4
	0x03E0E5C8 SUBS X9, X9, 0x1
	0x03E0E5CC ADD X10, X10, 0x10
	0x03E0E5D0 B.NE 0x3E0E5BC
	0x03E0E5D4 MOV X0, X20
	0x03E0E5D8 MOV W2, W31
	0x03E0E5DC BL 0x1C5C788
	0x03E0E5E0 B 0x3E0E5F0
	0x03E0E5E4 LDRSW X9, [X10]
	0x03E0E5E8 ADD X8, X8, X9, 0x4, LSL
	0x03E0E5EC ADD X0, X8, 0x138
	0x03E0E5F0 LDP X8, X1, [X0]
	0x03E0E5F4 MOV X0, X20
	0x03E0E5F8 BLR X8
	0x03E0E5FC LDR X8, [X31 + 0x58]
	0x03E0E600 CBZ X8, 0x3E0E758
	0x03E0E604 LDR X0, [X31 + 0x58]
	0x03E0E608 BL 0x1C16F18
	0x03E0E60C B 0x3E0E610
	0x03E0E610 MOV X21, X0
	0x03E0E614 CMP W1, 0x1
	0x03E0E618 B.NE 0x3E0E63C
	0x03E0E61C MOV X0, X21
	0x03E0E620 BL 0x3EB1AD0
	0x03E0E624 LDR X8, [X0]
	0x03E0E628 STR X8, [X31 + 0x58]
	0x03E0E62C BL 0x3EB1AE0
	0x03E0E630 LDR X19, [X31 + 0x58]
	0x03E0E634 CBNZ X20, 0x3E0E4D0
	0x03E0E638 B 0x3E0E530
	0x03E0E63C STR X31, [X31 + 0x58]
	0x03E0E640 B 0x3E0E648
	0x03E0E644 MOV X21, X0
	0x03E0E648 CBZ X20, 0x3E0E6AC
	0x03E0E64C ADRP X10, 0x2E5000
	0x03E0E650 LDR X8, [X20]
	0x03E0E654 LDR X10, [X10 + 0xE00]
	0x03E0E658 LDRH W9, [X8 + 0x12E]
	0x03E0E65C LDR X1, [X10]
	0x03E0E660 CBZ X9, 0x3E0E684
	0x03E0E664 LDR X10, [X8 + 0xB0]
	0x03E0E668 ADD X10, X10, 0x8
	0x03E0E66C LDUR X11, [X10 - 0x8]
	0x03E0E670 CMP X11, X1
	0x03E0E674 B.EQ 0x3E0E694
	0x03E0E678 SUBS X9, X9, 0x1
	0x03E0E67C ADD X10, X10, 0x10
	0x03E0E680 B.NE 0x3E0E66C
	0x03E0E684 MOV X0, X20
	0x03E0E688 MOV W2, W31
	0x03E0E68C BL 0x1C5C788
	0x03E0E690 B 0x3E0E6A0
	0x03E0E694 LDRSW X9, [X10]
	0x03E0E698 ADD X8, X8, X9, 0x4, LSL
	0x03E0E69C ADD X0, X8, 0x138
	0x03E0E6A0 LDP X8, X1, [X0]
	0x03E0E6A4 MOV X0, X20
	0x03E0E6A8 BLR X8
	0x03E0E6AC LDR X8, [X31 + 0x58]
	0x03E0E6B0 CBZ X8, 0x3E0E758
	0x03E0E6B4 LDR X0, [X31 + 0x58]
	0x03E0E6B8 BL 0x1C16F18
	0x03E0E6BC B 0x3E0E6C0
	0x03E0E6C0 MOV X21, X0
	0x03E0E6C4 CMP W1, 0x1
	0x03E0E6C8 B.NE 0x3E0E6E4
	0x03E0E6CC MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5DB000
	007 Move W8, [X20+869]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {63}
	013 Move X0, 0x310000
	014 Move X0, [X0+1904]
	015 Call 0x1C17CF4
	016 Move X0, 0x311000
	017 Move X0, [X0+152]
	018 Call 0x1C17CF4
	019 Move X0, 0x35D000
	020 Move X0, [X0+1120]
	021 Call 0x1C17CF4
	022 Move X0, 0x310000
	023 Move X0, [X0+1912]
	024 Call 0x1C17CF4
	025 Move X0, 0x310000
	026 Move X0, [X0+1936]
	027 Call 0x1C17CF4
	028 Move X0, 0x311000
	029 Move X0, [X0+3368]
	030 Call 0x1C17CF4
	031 Move X0, 0x35D000
	032 Move X0, [X0+1136]
	033 Call 0x1C17CF4
	034 Move X0, 0x310000
	035 Move X0, [X0+1944]
	036 Call 0x1C17CF4
	037 Move X0, 0x35D000
	038 Move X0, [X0+1160]
	039 Call 0x1C17CF4
	040 Move X0, 0x311000
	041 Move X0, [X0+160]
	042 Call 0x1C17CF4
	043 Move X0, 0x310000
	044 Move X0, [X0+1920]
	045 Call 0x1C17CF4
	046 Move X0, 0x310000
	047 Move X0, [X0+1928]
	048 Call 0x1C17CF4
	049 Move X0, 0x35D000
	050 Move X0, [X0+1200]
	051 Call 0x1C17CF4
	052 Move X0, 0x35D000
	053 Move X0, [X0+1208]
	054 Call 0x1C17CF4
	055 Move X0, 0x35D000
	056 Move X0, [X0+1216]
	057 Call 0x1C17CF4
	058 Move X0, 0x35D000
	059 Move X0, [X0+1224]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X20+869], W8
	063 Move X0, X19
	064 Move X1, X31
	065 Call TextHandle.get_textInfo, X0
	066 Compare X0, 0
	067 JumpIfEqual {93}
	068 Move W22, 0xAFB9
	069 Move W20, W31
	070 Move W21, 32
	071 NotImplemented "Instruction MOVK not yet implemented."
	072 Move W8, [X0+32]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X19
	075 Move X1, X31
	076 Call TextHandle.get_textInfo, X0
	077 Compare X0, 0
	078 JumpIfEqual {93}
	079 Move X8, [X0+64]
	080 Compare X8, 0
	081 JumpIfEqual {93}
	082 Move W9, [X8+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W8, [X8]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, X19
	087 Move X1, X31
	088 Add W20, W20, 1
	089 Add X21, X21, 48
	090 Call TextHandle.get_textInfo, X0
	091 Compare X0, 0
	092 JumpIfNotEqual {72}
	093 Call 0x1C17F20
	094 Move W8, [X19+88]
	095 Compare W8, 0
	096 JumpIfEqual {274}
	097 Move [X19+88], W31
	098 Move X8, 0x310000
	099 Move X20, [X19+72]
	100 Move X8, [X8+1920]
	101 Move X0, [X8]
	102 Call 0x1C17F10
	103 Move X8, 0x35D000
	104 Move X8, [X8+1200]
	105 Move X1, X19
	106 Move X3, X31
	107 Move X21, X0
	108 Move X2, [X8]
	109 Call 0x2D0F824, X0, X1, X2
	110 Compare X20, 0
	111 JumpIfEqual {93}
	112 Move X8, 0x310000
	113 Move X8, [X8+1936]
	114 Move W2, 1
	115 Move X0, X20
	116 Move X1, X21
	117 Move X3, [X8]
	118 Call 0x21A28B4, X0, X1, X2
	119 Move X8, 0x310000
	120 Move X20, [X19+72]
	121 Move X8, [X8+1928]
	122 Move X0, [X8]
	123 Call 0x1C17F10
	124 Move X8, 0x35D000
	125 Move X8, [X8+1224]
	126 Move X1, X19
	127 Move X3, X31
	128 Move X21, X0
	129 Move X2, [X8]
	130 Call 0x2D0F824, X0, X1, X2
	131 Compare X20, 0
	132 JumpIfEqual {93}
	133 Move X8, 0x310000
	134 Move X8, [X8+1944]
	135 Move W2, 1
	136 Move X0, X20
	137 Move X1, X21
	138 Move X3, [X8]
	139 Call 0x21A28B4, X0, X1, X2
	140 Move X8, 0x311000
	141 Move X20, [X19+72]
	142 Move X8, [X8+160]
	143 Move X0, [X8]
	144 Call 0x1C17F10
	145 Move X8, 0x35D000
	146 Move X8, [X8+1208]
	147 Move X1, X19
	148 Move X3, X31
	149 Move X21, X0
	150 Move X2, [X8]
	151 Call 0x2D0F824, X0, X1, X2
	152 Compare X20, 0
	153 JumpIfEqual {93}
	154 Move X8, 0x311000
	155 Move X8, [X8+3368]
	156 Move W2, 1
	157 Move X0, X20
	158 Move X1, X21
	159 Move X3, [X8]
	160 Call 0x21A28B4, X0, X1, X2
	161 Move X8, 0x35D000
	162 Move X20, [X19+72]
	163 Move X8, [X8+1160]
	164 Move X0, [X8]
	165 Call 0x1C17F10
	166 Move X8, 0x35D000
	167 Move X8, [X8+1216]
	168 Move X1, X19
	169 Move X3, X31
	170 Move X21, X0
	171 Move X2, [X8]
	172 Call 0x2D0F824, X0, X1, X2
	173 Compare X20, 0
	174 JumpIfEqual {93}
	175 Move X8, 0x35D000
	176 Move X8, [X8+1136]
	177 Move X0, X20
	178 Move X1, X21
	179 Move X20, [X31+32]
	180 Move X19, [X31+40]
	181 Move X3, [X8]
	182 Move X22, [X31+16]
	183 Move X21, [X31+24]
	184 Move W2, 1
	185 Move X30, [X31+48]
	186 Call 0x21A28B4, X0, X1, X2
	187 Return 
	188 Move X8, 0x310000
	189 Move X20, [X19+72]
	190 Move X8, [X8+1920]
	191 Move X0, [X8]
	192 Call 0x1C17F10
	193 Move X8, 0x35D000
	194 Move X8, [X8+1200]
	195 Move X1, X19
	196 Move X3, X31
	197 Move X21, X0
	198 Move X2, [X8]
	199 Call 0x2D0F824, X0, X1, X2
	200 Compare X20, 0
	201 JumpIfEqual {93}
	202 Move X8, 0x310000
	203 Move X8, [X8+1904]
	204 Move W2, 1
	205 Move X0, X20
	206 Move X1, X21
	207 Move X3, [X8]
	208 Call 0x21A2534, X0, X1, X2
	209 Move X8, 0x310000
	210 Move X20, [X19+72]
	211 Move X8, [X8+1928]
	212 Move X0, [X8]
	213 Call 0x1C17F10
	214 Move X8, 0x35D000
	215 Move X8, [X8+1224]
	216 Move X1, X19
	217 Move X3, X31
	218 Move X21, X0
	219 Move X2, [X8]
	220 Call 0x2D0F824, X0, X1, X2
	221 Compare X20, 0
	222 JumpIfEqual {93}
	223 Move X8, 0x310000
	224 Move X8, [X8+1912]
	225 Move W2, 1
	226 Move X0, X20
	227 Move X1, X21
	228 Move X3, [X8]
	229 Call 0x21A2534, X0, X1, X2
	230 Move X8, 0x311000
	231 Move X20, [X19+72]
	232 Move X8, [X8+160]
	233 Move X0, [X8]
	234 Call 0x1C17F10
	235 Move X8, 0x35D000
	236 Move X8, [X8+1208]
	237 Move X1, X19
	238 Move X3, X31
	239 Move X21, X0
	240 Move X2, [X8]
	241 Call 0x2D0F824, X0, X1, X2
	242 Compare X20, 0
	243 JumpIfEqual {93}
	244 Move X8, 0x311000
	245 Move X8, [X8+152]
	246 Move W2, 1
	247 Move X0, X20
	248 Move X1, X21
	249 Move X3, [X8]
	250 Move W22, 1
	251 Call 0x21A2534, X0, X1, X2
	252 Move X8, 0x35D000
	253 Move X20, [X19+72]
	254 Move X8, [X8+1160]
	255 Move X0, [X8]
	256 Call 0x1C17F10
	257 Move X8, 0x35D000
	258 Move X8, [X8+1216]
	259 Move X1, X19
	260 Move X3, X31
	261 Move X21, X0
	262 Move X2, [X8]
	263 Call 0x2D0F824, X0, X1, X2
	264 Compare X20, 0
	265 JumpIfEqual {93}
	266 Move X8, 0x35D000
	267 Move X8, [X8+1120]
	268 Move W2, 1
	269 Move X0, X20
	270 Move X1, X21
	271 Move X3, [X8]
	272 Call 0x21A2534, X0, X1, X2
	273 Move [X19+88], W22
	274 Move X20, [X31+32]
	275 Move X19, [X31+40]
	276 Move X22, [X31+16]
	277 Move X21, [X31+24]
	278 Move X30, [X31+48]
	279 Return 
	280 Call 0x1C17F28

Method: System.Void HandleATag()

Disassembly:
	0x03E0DD98 BL 0x3EB1AE0
	0x03E0DD9C CBNZ X19, 0x3E0DCE4
	0x03E0DDA0 B 0x3E0DD44
	0x03E0DDA4 MOV X20, X31
	0x03E0DDA8 B 0x3E0DDB0
	0x03E0DDAC MOV X21, X0
	0x03E0DDB0 CBZ X19, 0x3E0DE14
	0x03E0DDB4 ADRP X10, 0x2E6000
	0x03E0DDB8 LDR X8, [X19]
	0x03E0DDBC LDR X10, [X10 + 0xE00]
	0x03E0DDC0 LDRH W9, [X8 + 0x12E]
	0x03E0DDC4 LDR X1, [X10]
	0x03E0DDC8 CBZ X9, 0x3E0DDEC
	0x03E0DDCC LDR X10, [X8 + 0xB0]
	0x03E0DDD0 ADD X10, X10, 0x8
	0x03E0DDD4 LDUR X11, [X10 - 0x8]
	0x03E0DDD8 CMP X11, X1
	0x03E0DDDC B.EQ 0x3E0DDFC
	0x03E0DDE0 SUBS X9, X9, 0x1
	0x03E0DDE4 ADD X10, X10, 0x10
	0x03E0DDE8 B.NE 0x3E0DDD4
	0x03E0DDEC MOV X0, X19
	0x03E0DDF0 MOV W2, W31
	0x03E0DDF4 BL 0x1C5C788
	0x03E0DDF8 B 0x3E0DE08
	0x03E0DDFC LDRSW X9, [X10]
	0x03E0DE00 ADD X8, X8, X9, 0x4, LSL
	0x03E0DE04 ADD X0, X8, 0x138
	0x03E0DE08 LDP X8, X1, [X0]
	0x03E0DE0C MOV X0, X19
	0x03E0DE10 BLR X8
	0x03E0DE14 CBNZ X20, 0x3E0DE20
	0x03E0DE18 MOV X0, X21
	0x03E0DE1C BL 0x1D2C690
	0x03E0DE20 MOV X0, X20
	0x03E0DE24 BL 0x1C16F18
	0x03E0DE28 BL 0x1990590
	0x03E0DE2C SUB X31, X31, 0x80
	0x03E0DE30 STP D11, D10, [X31 + 0x30]
	0x03E0DE34 STP D9, D8, [X31 + 0x40]
	0x03E0DE38 STR X30, [X31 + 0x50]
	0x03E0DE3C STP X22, X21, [X31 + 0x60]
	0x03E0DE40 STP X20, X19, [X31 + 0x70]
	0x03E0DE44 ADRP X21, 0x5DB000
	0x03E0DE48 LDRB W8, [X21 + 0x362]
	0x03E0DE4C MOV X19, X1
	0x03E0DE50 MOV X20, X0
	0x03E0DE54 TBNZ X8, 0x0, 0x3E0DE84
	0x03E0DE58 ADRP X0, 0x2E6000
	0x03E0DE5C LDR X0, [X0 + 0xE00]
	0x03E0DE60 BL 0x1C16CF4
	0x03E0DE64 ADRP X0, 0x355000
	0x03E0DE68 LDR X0, [X0 + 0xA60]
	0x03E0DE6C BL 0x1C16CF4
	0x03E0DE70 ADRP X0, 0x359000
	0x03E0DE74 LDR X0, [X0 + 0x478]
	0x03E0DE78 BL 0x1C16CF4
	0x03E0DE7C MOVZ W8, 0x1
	0x03E0DE80 STRB W8, [X21 + 0x362]
	0x03E0DE84 MOVI V0.2D, 0x0
	0x03E0DE88 STP V0, V0, [X31 + 0x10]
	0x03E0DE8C STR V0, [X31]
	0x03E0DE90 CBZ X19, 0x3E0E05C
	0x03E0DE94 LDR X0, [X20 + 0x48]
	0x03E0DE98 CBZ X0, 0x3E0E05C
	0x03E0DE9C LDP S10, S11, [X19 + 0xC0]
	0x03E0DEA0 LDR V8, [X19 + 0xC8]
	0x03E0DEA4 MOV X1, X31
	0x03E0DEA8 BL 0x3DED364
	0x03E0DEAC LDR X0, [X20 + 0x48]
	0x03E0DEB0 CBZ X0, 0x3E0E05C
	0x03E0DEB4 MOV X1, X31
	0x03E0DEB8 MOV V9.16B, V0.16B
	0x03E0DEBC BL 0x3DED364
	0x03E0DEC0 FSUB S0, S10, S9
	0x03E0DEC4 FSUB S1, S11, S1
	0x03E0DEC8 MOVZ W1, 0x1
	0x03E0DECC MOV X0, X20
	0x03E0DED0 MOV V2.16B, V8.16B
	0x03E0DED4 MOV X2, X31
	0x03E0DED8 BL 0x3CCA820
	0x03E0DEDC TBNZ X0, 0x1F, 0x3E0E040
	0x03E0DEE0 MOV W21, W0
	0x03E0DEE4 MOV X0, X20
	0x03E0DEE8 MOV X1, X31
	0x03E0DEEC BL 0x3CC98D0
	0x03E0DEF0 CBZ X0, 0x3E0E05C
	0x03E0DEF4 LDR X8, [X0 + 0x40]
	0x03E0DEF8 CBZ X8, 0x3E0E05C
	0x03E0DEFC LDR W9, [X8 + 0x18]
	0x03E0DF00 CMP W21, W9
	0x03E0DF04 B.CS 0x3E0E060
	0x03E0DF08 MOVZ W9, 0x30
	0x03E0DF0C UMADDL X8, X21, X9, X8
	0x03E0DF10 LDP V0, V1, [X8 + 0x20]
	0x03E0DF14 LDR V2, [X8 + 0x4]
	0x03E0DF18 MOVZ W9, 0xAFB9
	0x03E0DF1C MOVK W9, 0x260000
	0x03E0DF20 STP V0, V1, [X31]
	0x03E0DF24 LDR W8, [X31]
	0x03E0DF28 STR V2, [X31 + 0x2]
	0x03E0DF2C CMP W8, W9
	0x03E0DF30 B.EQ 0x3E0E040
	0x03E0DF34 LDR X8, [X31 + 0x18]
	0x03E0DF38 CBZ X8, 0x3E0E040
	0x03E0DF3C LDR W8, [X31 + 0x8]
	0x03E0DF40 CMP W8, 0x1
	0x03E0DF44 B.LT 0x3E0E040
	0x03E0DF48 ADD X0, X31, 0x0
	0x03E0DF4C MOV X1, X31
	0x03E0DF50 BL 0x3CA8F90
	0x03E0DF54 MOV X21, X0
	0x03E0DF58 MOV X0, X20
	0x03E0DF5C MOV X1, X31
	0x03E0DF60 BL 0x3CC98D0
	0x03E0DF64 MOV X1, X0
	0x03E0DF68 ADD X0, X31, 0x0
	0x03E0DF6C MOV X2, X31
	0x03E0DF70 BL 0x3CA8E98
	0x03E0DF74 ADRP X8, 0x359000
	0x03E0DF78 LDR X8, [X8 + 0x478]
	0x03E0DF7C MOV X22, X0
	0x03E0DF80 LDR X8, [X8]
	0x03E0DF84 LDR W9, [X8 + 0xE0]
	0x03E0DF88 CBNZ W9, 0x3E0DF94
	0x03E0DF8C MOV X0, X8
	0x03E0DF90 BL 0x1C16DFC
	0x03E0DF94 MOV X0, X19
	0x03E0DF98 MOV X1, X21
	0x03E0DF9C MOV X2, X22
	0x03E0DFA0 MOV X3, X31
	0x03E0DFA4 BL 0x3D5A9FC
	0x03E0DFA8 MOV X19, X0
	0x03E0DFAC CBZ X0, 0x3E0E064
	0x03E0DFB0 LDR X1, [X20 + 0x48]
	0x03E0DFB4 MOV X0, X19
	0x03E0DFB8 MOV X2, X31
	0x03E0DFBC BL 0x3D9C6C8
	0x03E0DFC0 LDR X0, [X20 + 0x48]
	0x03E0DFC4 CBZ X0, 0x3E0E070
	0x03E0DFC8 LDR X8, [X0]
	0x03E0DFCC LDP X9, X2, [X8 + 0x198]
	0x03E0DFD0 MOV X1, X19
	0x03E0DFD4 BLR X9
	0x03E0DFD8 MOV X20, X31
	0x03E0DFDC ADRP X10, 0x2E6000
	0x03E0DFE0 LDR X8, [X19]
	0x03E0DFE4 LDR X10, [X10 + 0xE00]
	0x03E0DFE8 LDRH W9, [X8 + 0x12E]
	0x03E0DFEC LDR X1, [X10]
	0x03E0DFF0 CBZ X9, 0x3E0E014
	0x03E0DFF4 LDR X10, [X8 + 0xB0]
	0x03E0DFF8 ADD X10, X10, 0x8
	0x03E0DFFC LDUR X11, [X10 - 0x8]
	0x03E0E000 CMP X11, X1
	0x03E0E004 B.EQ 0x3E0E024
	0x03E0E008 SUBS X9, X9, 0x1
	0x03E0E00C ADD X10, X10, 0x10
	0x03E0E010 B.NE 0x3E0DFFC
	0x03E0E014 MOV X0, X19
	0x03E0E018 MOV W2, W31
	0x03E0E01C BL 0x1C5C788
	0x03E0E020 B 0x3E0E030
	0x03E0E024 LDRSW X9, [X10]
	0x03E0E028 ADD X8, X8, X9, 0x4, LSL
	0x03E0E02C ADD X0, X8, 0x138
	0x03E0E030 LDP X8, X1, [X0]
	0x03E0E034 MOV X0, X19
	0x03E0E038 BLR X8
	0x03E0E03C CBNZ X20, 0x3E0E068
	0x03E0E040 LDP X20, X19, [X31 + 0x70]
	0x03E0E044 LDP X22, X21, [X31 + 0x60]
	0x03E0E048 LDR X30, [X31 + 0x50]
	0x03E0E04C LDP D9, D8, [X31 + 0x40]
	0x03E0E050 LDP D11, D10, [X31 + 0x30]
	0x03E0E054 ADD X31, X31, 0x80
	0x03E0E058 RET
	0x03E0E05C BL 0x1C16F20
	0x03E0E060 BL 0x1C16F28
	0x03E0E064 BL 0x1C16F20
	0x03E0E068 MOV X0, X20
	0x03E0E06C BL 0x1C16F18
	0x03E0E070 BL 0x1C16F20
	0x03E0E074 B 0x3E0E078
	0x03E0E078 MOV X21, X0
	0x03E0E07C CMP W1, 0x1
	0x03E0E080 B.NE 0x3E0E09C
	0x03E0E084 MOV X0, X21
	0x03E0E088 BL 0x3EB1AD0
	0x03E0E08C LDR X20, [X0]
	0x03E0E090 BL 0x3EB1AE0
	0x03E0E094 CBNZ X19, 0x3E0DFDC
	0x03E0E098 B 0x3E0E03C
	0x03E0E09C MOV X20, X31
	0x03E0E0A0 B 0x3E0E0A8
	0x03E0E0A4 MOV X21, X0
	0x03E0E0A8 CBZ X19, 0x3E0E10C
	0x03E0E0AC ADRP X10, 0x2E5000
	0x03E0E0B0 LDR X8, [X19]
	0x03E0E0B4 LDR X10, [X10 + 0xE00]
	0x03E0E0B8 LDRH W9, [X8 + 0x12E]
	0x03E0E0BC LDR X1, [X10]
	0x03E0E0C0 CBZ X9, 0x3E0E0E4
	0x03E0E0C4 LDR X10, [X8 + 0xB0]
	0x03E0E0C8 ADD X10, X10, 0x8
	0x03E0E0CC LDUR X11, [X10 - 0x8]
	0x03E0E0D0 CMP X11, X1
	0x03E0E0D4 B.EQ 0x3E0E0F4
	0x03E0E0D8 SUBS X9, X9, 0x1
	0x03E0E0DC ADD X10, X10, 0x10
	0x03E0E0E0 B.NE 0x3E0E0CC
	0x03E0E0E4 MOV X0, X19
	0x03E0E0E8 MOV W2, W31
	0x03E0E0EC BL 0x1C5C788
	0x03E0E0F0 B 0x3E0E100
	0x03E0E0F4 LDRSW X9, [X10]
	0x03E0E0F8 ADD X8, X8, X9, 0x4, LSL
	0x03E0E0FC ADD X0, X8, 0x138
	0x03E0E100 LDP X8, X1, [X0]
	0x03E0E104 MOV X0, X19
	0x03E0E108 BLR X8
	0x03E0E10C CBNZ X20, 0x3E0E118
	0x03E0E110 MOV X0, X21
	0x03E0E114 BL 0x1D2C690
	0x03E0E118 MOV X0, X20
	0x03E0E11C BL 0x1C16F18
	0x03E0E120 BL 0x1990590
	0x03E0E124 SUB X31, X31, 0x80
	0x03E0E128 STP D11, D10, [X31 + 0x30]
	0x03E0E12C STP D9, D8, [X31 + 0x40]
	0x03E0E130 STR X30, [X31 + 0x50]
	0x03E0E134 STP X22, X21, [X31 + 0x60]
	0x03E0E138 STP X20, X19, [X31 + 0x70]
	0x03E0E13C ADRP X21, 0x5DA000
	0x03E0E140 LDRB W8, [X21 + 0x363]
	0x03E0E144 MOV X20, X1
	0x03E0E148 MOV X19, X0
	0x03E0E14C TBNZ X8, 0x0, 0x3E0E1A0
	0x03E0E150 ADRP X0, 0x2E5000
	0x03E0E154 LDR X0, [X0 + 0xE00]
	0x03E0E158 BL 0x1C16CF4
	0x03E0E15C ADRP X0, 0x354000
	0x03E0E160 LDR X0, [X0 + 0xA58]
	0x03E0E164 BL 0x1C16CF4
	0x03E0E168 ADRP X0, 0x358000
	0x03E0E16C LDR X0, [X0 + 0x3A0]
	0x03E0E170 BL 0x1C16CF4
	0x03E0E174 ADRP X0, 0x358000
	0x03E0E178 LDR X0, [X0 + 0x3E8]
	0x03E0E17C BL 0x1C16CF4
	0x03E0E180 ADRP X0, 0x358000
	0x03E0E184 LDR X0, [X0 + 0x358]
	0x03E0E188 BL 0x1C16CF4
	0x03E0E18C ADRP X0, 0x2E7000
	0x03E0E190 LDR X0, [X0 + 0x278]
	0x03E0E194 BL 0x1C16CF4
	0x03E0E198 MOVZ W8, 0x1
	0x03E0E19C STRB W8, [X21 + 0x363]
	0x03E0E1A0 MOVI V0.2D, 0x0
	0x03E0E1A4 STP V0, V0, [X31 + 0x10]
	0x03E0E1A8 STR V0, [X31]
	0x03E0E1AC CBZ X20, 0x3E0E53C
	0x03E0E1B0 LDR X0, [X19 + 0x48]
	0x03E0E1B4 CBZ X0, 0x3E0E53C
	0x03E0E1B8 LDP S10, S11, [X20 + 0xC0]
	0x03E0E1BC LDR V8, [X20 + 0xC8]
	0x03E0E1C0 MOV X1, X31
	0x03E0E1C4 BL 0x3DED364
	0x03E0E1C8 LDR X0, [X19 + 0x48]
	0x03E0E1CC CBZ X0, 0x3E0E53C
	0x03E0E1D0 MOV X1, X31
	0x03E0E1D4 MOV V9.16B, V0.16B
	0x03E0E1D8 BL 0x3DED364
	0x03E0E1DC FSUB S0, S10, S9
	0x03E0E1E0 FSUB S1, S11, S1
	0x03E0E1E4 MOVZ W1, 0x1
	0x03E0E1E8 MOV X0, X19
	0x03E0E1EC MOV V2.16B, V8.16B
	0x03E0E1F0 MOV X2, X31
	0x03E0E1F4 BL 0x3CCA820
	0x03E0E1F8 TBNZ X0, 0x1F, 0x3E0E334
	0x03E0E1FC MOV W21, W0
	0x03E0E200 MOV X0, X19
	0x03E0E204 MOV X1, X31
	0x03E0E208 BL 0x3CC98D0
	0x03E0E20C CBZ X0, 0x3E0E53C
	0x03E0E210 LDR X8, [X0 + 0x40]
	0x03E0E214 CBZ X8, 0x3E0E53C
	0x03E0E218 LDR W9, [X8 + 0x18]
	0x03E0E21C CMP W21, W9
	0x03E0E220 B.CS 0x3E0E540
	0x03E0E224 MOVZ W9, 0x30
	0x03E0E228 UMADDL X8, X21, X9, X8
	0x03E0E22C LDP V0, V1, [X8 + 0x20]
	0x03E0E230 LDR V2, [X8 + 0x4]
	0x03E0E234 MOVZ W9, 0xAFB9
	0x03E0E238 MOVK W9, 0x260000
	0x03E0E23C STP V0, V1, [X31]
	0x03E0E240 LDR W8, [X31]
	0x03E0E244 STR V2, [X31 + 0x2]
	0x03E0E248 CMP W8, W9
	0x03E0E24C B.EQ 0x3E0E334
	0x03E0E250 LDR W9, [X19 + 0x54]
	0x03E0E254 ADDS W31, W9, 0x1
	0x03E0E258 B.EQ 0x3E0E438
	0x03E0E25C CMP W9, W8
	0x03E0E260 B.NE 0x3E0E334
	0x03E0E264 ADD X0, X31, 0x0
	0x03E0E268 MOV X1, X31
	0x03E0E26C BL 0x3CA8F90
	0x03E0E270 MOV X21, X0
	0x03E0E274 MOV X0, X19
	0x03E0E278 MOV X1, X31
	0x03E0E27C BL 0x3CC98D0
	0x03E0E280 MOV X1, X0
	0x03E0E284 ADD X0, X31, 0x0
	0x03E0E288 MOV X2, X31
	0x03E0E28C BL 0x3CA8E98
	0x03E0E290 ADRP X8, 0x358000
	0x03E0E294 LDR X8, [X8 + 0x3A0]
	0x03E0E298 MOV X22, X0
	0x03E0E29C LDR X8, [X8]
	0x03E0E2A0 LDR W9, [X8 + 0xE0]
	0x03E0E2A4 CBNZ W9, 0x3E0E2B0
	0x03E0E2A8 MOV X0, X8
	0x03E0E2AC BL 0x1C16DFC
	0x03E0E2B0 MOV X0, X20
	0x03E0E2B4 MOV X1, X21
	0x03E0E2B8 MOV X2, X22
	0x03E0E2BC MOV X3, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5DC000
	007 Move W8, [X20+870]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {66}
	013 Move X0, 0x312000
	014 Move X0, [X0+152]
	015 Call 0x1C17CF4
	016 Move X0, 0x35E000
	017 Move X0, [X0+1120]
	018 Call 0x1C17CF4
	019 Move X0, 0x35E000
	020 Move X0, [X0+1128]
	021 Call 0x1C17CF4
	022 Move X0, 0x311000
	023 Move X0, [X0+1912]
	024 Call 0x1C17CF4
	025 Move X0, 0x312000
	026 Move X0, [X0+3368]
	027 Call 0x1C17CF4
	028 Move X0, 0x35E000
	029 Move X0, [X0+1136]
	030 Call 0x1C17CF4
	031 Move X0, 0x35E000
	032 Move X0, [X0+1144]
	033 Call 0x1C17CF4
	034 Move X0, 0x311000
	035 Move X0, [X0+1944]
	036 Call 0x1C17CF4
	037 Move X0, 0x35E000
	038 Move X0, [X0+1152]
	039 Call 0x1C17CF4
	040 Move X0, 0x35E000
	041 Move X0, [X0+1160]
	042 Call 0x1C17CF4
	043 Move X0, 0x312000
	044 Move X0, [X0+160]
	045 Call 0x1C17CF4
	046 Move X0, 0x311000
	047 Move X0, [X0+1928]
	048 Call 0x1C17CF4
	049 Move X0, 0x310000
	050 Move X0, [X0+3712]
	051 Call 0x1C17CF4
	052 Move X0, 0x35E000
	053 Move X0, [X0+1168]
	054 Call 0x1C17CF4
	055 Move X0, 0x35E000
	056 Move X0, [X0+1176]
	057 Call 0x1C17CF4
	058 Move X0, 0x35E000
	059 Move X0, [X0+1184]
	060 Call 0x1C17CF4
	061 Move X0, 0x35E000
	062 Move X0, [X0+1192]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X20+870], W8
	066 Move X0, X19
	067 Move X1, X31
	068 Call TextHandle.get_textInfo, X0
	069 Compare X0, 0
	070 JumpIfEqual {96}
	071 Move W22, 0xAFB9
	072 Move W20, W31
	073 Move W21, 48
	074 NotImplemented "Instruction MOVK not yet implemented."
	075 Move W8, [X0+32]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X0, X19
	078 Move X1, X31
	079 Call TextHandle.get_textInfo, X0
	080 Compare X0, 0
	081 JumpIfEqual {96}
	082 Move X8, [X0+64]
	083 Compare X8, 0
	084 JumpIfEqual {96}
	085 Move W9, [X8+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction SMADDL not yet implemented."
	088 Move W8, [X8+32]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, X19
	091 Move X1, X31
	092 Add W20, W20, 1
	093 Call TextHandle.get_textInfo, X0
	094 Compare X0, 0
	095 JumpIfNotEqual {75}
	096 Call 0x1C17F20
	097 Move W8, [X19+89]
	098 Compare W8, 0
	099 JumpIfEqual {343}
	100 Move [X19+89], W31
	101 Move X8, 0x311000
	102 Move X20, [X19+72]
	103 Move X8, [X8+1928]
	104 Move X0, [X8]
	105 Call 0x1C17F10
	106 Move X8, 0x35E000
	107 Move X8, [X8+1192]
	108 Move X1, X19
	109 Move X3, X31
	110 Move X21, X0
	111 Move X2, [X8]
	112 Call 0x2D0F824, X0, X1, X2
	113 Compare X20, 0
	114 JumpIfEqual {96}
	115 Move X8, 0x311000
	116 Move X8, [X8+1944]
	117 Move W2, 1
	118 Move X0, X20
	119 Move X1, X21
	120 Move X3, [X8]
	121 Call 0x21A28B4, X0, X1, X2
	122 Move X0, [X19+72]
	123 Compare X0, 0
	124 JumpIfEqual {96}
	125 Move X1, X31
	126 Call VisualElement.get_panel, X0
	127 Compare X0, 0
	128 JumpIfEqual {96}
	129 Move X10, 0x310000
	130 Move X8, [X0]
	131 Move X10, [X10+3712]
	132 Move X20, X0
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Move X1, [X10]
	135 Compare X9, 0
	136 JumpIfEqual {143}
	137 Move X10, [X8+176]
	138 Add X10, X10, 8
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Subtract X9, X9, 1
	142 Add X10, X10, 16
	143 Move W2, 2
	144 Move X0, X20
	145 Call 0x1C5D788
	146 Move X8, 0x311000
	147 Move X20, [X19+72]
	148 Move X8, [X8+1928]
	149 Move X0, [X8]
	150 Call 0x1C17F10
	151 Move X8, 0x35E000
	152 Move X8, [X8+1192]
	153 Move X1, X19
	154 Move X3, X31
	155 Move X21, X0
	156 Move X2, [X8]
	157 Call 0x2D0F824, X0, X1, X2
	158 Compare X20, 0
	159 JumpIfEqual {96}
	160 Move X8, 0x311000
	161 Move X8, [X8+1912]
	162 Move W2, 1
	163 Move X0, X20
	164 Move X1, X21
	165 Move X3, [X8]
	166 Call 0x21A2534, X0, X1, X2
	167 Move X0, [X19+72]
	168 Compare X0, 0
	169 JumpIfEqual {96}
	170 Move X1, X31
	171 Call VisualElement.get_panel, X0
	172 Compare X0, 0
	173 JumpIfEqual {96}
	174 Move X10, 0x30F000
	175 Move X8, [X0]
	176 Move X10, [X10+3712]
	177 Move X20, X0
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Move X1, [X10]
	180 Compare X9, 0
	181 JumpIfEqual {188}
	182 Move X10, [X8+176]
	183 Add X10, X10, 8
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract X9, X9, 1
	187 Add X10, X10, 16
	188 Move W2, 2
	189 Move X0, X20
	190 Call 0x1C5D788
	191 Move W9, [X10]
	192 Add W9, W9, 2
	193 Add X8, X8, W9
	194 Add X0, X8, 312
	195 Move X8, [X0]
	196 Move X1, [X0+8]
	197 Move X0, X20
	198 NotImplemented "Instruction BLR not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move X8, 0x311000
	201 Move X20, [X19+72]
	202 Move X8, [X8+160]
	203 Move X0, [X8]
	204 Call 0x1C17F10
	205 Move X8, 0x35D000
	206 Move X8, [X8+1168]
	207 Move X1, X19
	208 Move X3, X31
	209 Move X21, X0
	210 Move X2, [X8]
	211 Call 0x2D0F824, X0, X1, X2
	212 Compare X20, 0
	213 JumpIfEqual {96}
	214 Move X8, 0x311000
	215 Move X8, [X8+152]
	216 Move W2, 1
	217 Move X0, X20
	218 Move X1, X21
	219 Move X3, [X8]
	220 Call 0x21A2534, X0, X1, X2
	221 Move X8, 0x35D000
	222 Move X20, [X19+72]
	223 Move X8, [X8+1152]
	224 Move X0, [X8]
	225 Call 0x1C17F10
	226 Move X8, 0x35D000
	227 Move X8, [X8+1184]
	228 Move X1, X19
	229 Move X3, X31
	230 Move X21, X0
	231 Move X2, [X8]
	232 Call 0x2D0F824, X0, X1, X2
	233 Compare X20, 0
	234 JumpIfEqual {96}
	235 Move X8, 0x35D000
	236 Move X8, [X8+1128]
	237 Move W2, 1
	238 Move X0, X20
	239 Move X1, X21
	240 Move X3, [X8]
	241 Call 0x21A2534, X0, X1, X2
	242 Move X8, 0x35D000
	243 Move X20, [X19+72]
	244 Move X8, [X8+1160]
	245 Move X0, [X8]
	246 Call 0x1C17F10
	247 Move X8, 0x35D000
	248 Move X8, [X8+1176]
	249 Move X1, X19
	250 Move X3, X31
	251 Move X21, X0
	252 Move X2, [X8]
	253 Call 0x2D0F824, X0, X1, X2
	254 Compare X20, 0
	255 JumpIfEqual {96}
	256 Move X8, 0x35D000
	257 Move X8, [X8+1120]
	258 Move W2, 1
	259 Move X0, X20
	260 Move X1, X21
	261 Move X3, [X8]
	262 Call 0x21A2534, X0, X1, X2
	263 Move W8, 1
	264 Move [X19+89], W8
	265 Move W9, [X10]
	266 Add W9, W9, 2
	267 Add X8, X8, W9
	268 Add X0, X8, 312
	269 Move X8, [X0]
	270 Move X1, [X0+8]
	271 Move X0, X20
	272 NotImplemented "Instruction BLR not yet implemented."
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move X8, 0x311000
	275 Move X20, [X19+72]
	276 Move X8, [X8+160]
	277 Move X0, [X8]
	278 Call 0x1C17F10
	279 Move X8, 0x35D000
	280 Move X8, [X8+1168]
	281 Move X1, X19
	282 Move X3, X31
	283 Move X21, X0
	284 Move X2, [X8]
	285 Call 0x2D0F824, X0, X1, X2
	286 Compare X20, 0
	287 JumpIfEqual {96}
	288 Move X8, 0x311000
	289 Move X8, [X8+3368]
	290 Move W2, 1
	291 Move X0, X20
	292 Move X1, X21
	293 Move X3, [X8]
	294 Call 0x21A28B4, X0, X1, X2
	295 Move X8, 0x35D000
	296 Move X20, [X19+72]
	297 Move X8, [X8+1152]
	298 Move X0, [X8]
	299 Call 0x1C17F10
	300 Move X8, 0x35D000
	301 Move X8, [X8+1184]
	302 Move X1, X19
	303 Move X3, X31
	304 Move X21, X0
	305 Move X2, [X8]
	306 Call 0x2D0F824, X0, X1, X2
	307 Compare X20, 0
	308 JumpIfEqual {96}
	309 Move X8, 0x35D000
	310 Move X8, [X8+1144]
	311 Move W2, 1
	312 Move X0, X20
	313 Move X1, X21
	314 Move X3, [X8]
	315 Call 0x21A28B4, X0, X1, X2
	316 Move X8, 0x35D000
	317 Move X20, [X19+72]
	318 Move X8, [X8+1160]
	319 Move X0, [X8]
	320 Call 0x1C17F10
	321 Move X8, 0x35D000
	322 Move X8, [X8+1176]
	323 Move X1, X19
	324 Move X3, X31
	325 Move X21, X0
	326 Move X2, [X8]
	327 Call 0x2D0F824, X0, X1, X2
	328 Compare X20, 0
	329 JumpIfEqual {96}
	330 Move X8, 0x35D000
	331 Move X8, [X8+1136]
	332 Move X0, X20
	333 Move X1, X21
	334 Move X20, [X31+32]
	335 Move X19, [X31+40]
	336 Move X3, [X8]
	337 Move X22, [X31+16]
	338 Move X21, [X31+24]
	339 Move W2, 1
	340 Move X30, [X31+48]
	341 Call 0x21A28B4, X0, X1, X2
	342 Return 
	343 Move X20, [X31+32]
	344 Move X19, [X31+40]
	345 Move X22, [X31+16]
	346 Move X21, [X31+24]
	347 Move X30, [X31+48]
	348 Return 
	349 Call 0x1C17F28

Method: UnityEngine.TextCore.Text.TextOverflowMode GetTextOverflowMode()

Disassembly:
	0x03E0F97C STR X0, [X19 + 0x3F0]
	0x03E0F980 MOV X20, X0
	0x03E0F984 MOV X0, X19
	0x03E0F988 LDR X9, [X8 + 0xB18]
	0x03E0F98C LDR X1, [X8 + 0xB20]
	0x03E0F990 BLR X9
	0x03E0F994 MOV X1, X0
	0x03E0F998 MOV X0, X20
	0x03E0F99C MOV X2, X31
	0x03E0F9A0 BL 0x3226EF8
	0x03E0F9A4 AND W8, W0, 0x1
	0x03E0F9A8 B 0x3E0F9B0
	0x03E0F9AC MOV W8, W31
	0x03E0F9B0 STRB W8, [X19 + 0x3EB]
	0x03E0F9B4 LDP X20, X19, [X31 + 0x20]
	0x03E0F9B8 LDP X30, X21, [X31 + 0x10]
	0x03E0F9BC LDR V8, [X31], #0x30
	0x03E0F9C0 RET
	0x03E0F9C4 BL 0x1C16F20
	0x03E0F9C8 STP X30, X21, [X31 - 0x20]!
	0x03E0F9CC STP X20, X19, [X31 + 0x10]
	0x03E0F9D0 ADRP X21, 0x5D9000
	0x03E0F9D4 ADRP X20, 0x30E000
	0x03E0F9D8 LDRB W8, [X21 + 0x36F]
	0x03E0F9DC LDR X20, [X20 + 0x710]
	0x03E0F9E0 MOV X19, X0
	0x03E0F9E4 TBNZ X8, 0x0, 0x3E0F9FC
	0x03E0F9E8 ADRP X0, 0x30E000
	0x03E0F9EC LDR X0, [X0 + 0x710]
	0x03E0F9F0 BL 0x1C16CF4
	0x03E0F9F4 MOVZ W8, 0x1
	0x03E0F9F8 STRB W8, [X21 + 0x36F]
	0x03E0F9FC LDR X8, [X19]
	0x03E0FA00 LDR X1, [X20]
	0x03E0FA04 LDRH W9, [X8 + 0x12E]
	0x03E0FA08 CBZ X9, 0x3E0FA2C
	0x03E0FA0C LDR X10, [X8 + 0xB0]
	0x03E0FA10 ADD X10, X10, 0x8
	0x03E0FA14 LDUR X11, [X10 - 0x8]
	0x03E0FA18 CMP X11, X1
	0x03E0FA1C B.EQ 0x3E0FA3C

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 Move [X31+104], X19
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Move [X31+80], X31
	006 Move [X31+48], V0
	007 Move [X31+56], V0
	008 Move [X31+16], V0
	009 Move [X31+24], V0
	010 Move [X31], V0
	011 Move X19, X0
	012 Move X0, [X0+72]
	013 Compare X0, 0
	014 JumpIfEqual {47}
	015 Move X1, X31
	016 Call VisualElement.get_computedStyle, X0
	017 Move X1, X0
	018 Add X0, X31, 0
	019 Move W2, 88
	020 Call 0x3EB2B30
	021 Add X0, X31, 0
	022 Move X1, X31
	023 Call ComputedStyle.get_textOverflow, X0
	024 Compare W0, 0
	025 JumpIfEqual {41}
	026 Add X0, X31, 0
	027 Move X1, X31
	028 Call ComputedStyle.get_textOverflow, X0
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, X19
	031 Call UITKTextHandle.TextLibraryCanElide, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {41}
	036 Add X0, X31, 0
	037 Move X1, X31
	038 Call ComputedStyle.get_overflow, X0
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSET not yet implemented."
	041 Move W0, 2
	042 Move W0, W31
	043 Move X30, [X31+96]
	044 Move X19, [X31+104]
	045 Add X31, X31, 112
	046 Return X0
	047 Call 0x1C17F20

Method: System.Void ConvertUssToTextGenerationSettings(UnityEngine.TextCore.Text.TextGenerationSettings tgs)

Disassembly:
	0x03E0D8FC FSUB S1, S11, S1
	0x03E0D900 MOVZ W1, 0x1
	0x03E0D904 MOV X0, X19
	0x03E0D908 MOV V2.16B, V8.16B
	0x03E0D90C MOV X2, X31
	0x03E0D910 BL 0x3CCA820
	0x03E0D914 LDR X8, [X19 + 0x48]
	0x03E0D918 CBZ X8, 0x3E0DB24
	0x03E0D91C MOV W21, W0
	0x03E0D920 MOV X0, X8
	0x03E0D924 MOV X1, X31
	0x03E0D928 BL 0x3DEC0CC
	0x03E0D92C CBZ X0, 0x3E0D964
	0x03E0D930 ADRP X9, 0x30F000
	0x03E0D934 LDR X9, [X9 + 0xE88]
	0x03E0D938 LDR X8, [X0]
	0x03E0D93C LDR X9, [X9]
	0x03E0D940 LDRB W11, [X8 + 0x130]
	0x03E0D944 LDRB W10, [X9 + 0x130]
	0x03E0D948 CMP W11, W10
	0x03E0D94C B.CC 0x3E0D964
	0x03E0D950 LDR X11, [X8 + 0xC8]
	0x03E0D954 ADD X10, X11, X10, 0x3, LSL
	0x03E0D958 LDUR X10, [X10 - 0x8]
	0x03E0D95C CMP X10, X9
	0x03E0D960 B.EQ 0x3E0DA0C
	0x03E0D964 MOV X20, X31
	0x03E0D968 TBNZ X21, 0x1F, 0x3E0DA20
	0x03E0D96C MOV X0, X19
	0x03E0D970 MOV X1, X31
	0x03E0D974 BL 0x3CC98D0
	0x03E0D978 CBZ X0, 0x3E0DB24
	0x03E0D97C LDR X8, [X0 + 0x40]
	0x03E0D980 CBZ X8, 0x3E0DB24
	0x03E0D984 LDR W9, [X8 + 0x18]
	0x03E0D988 CMP W21, W9
	0x03E0D98C B.CS 0x3E0DB28
	0x03E0D990 MOVZ W9, 0x30
	0x03E0D994 UMADDL X8, X21, X9, X8
	0x03E0D998 LDR W8, [X8 + 0x20]
	0x03E0D99C MOVZ W9, 0xAFB9
	0x03E0D9A0 MOVK W9, 0x260000
	0x03E0D9A4 CMP W8, W9
	0x03E0D9A8 B.NE 0x3E0DA20
	0x03E0D9AC LDRB W8, [X19 + 0x50]
	0x03E0D9B0 CBNZ W8, 0x3E0DAD4
	0x03E0D9B4 MOVZ W8, 0x1
	0x03E0D9B8 STRB W8, [X19 + 0x50]
	0x03E0D9BC CBZ X20, 0x3E0DAD4
	0x03E0D9C0 STP X31, X31, [X31 + 0x20]
	0x03E0D9C4 ADRP X10, 0x35A000
	0x03E0D9C8 LDR X8, [X20]
	0x03E0D9CC LDR X10, [X10 + 0xBE8]
	0x03E0D9D0 LDRH W9, [X8 + 0x12E]
	0x03E0D9D4 LDR X1, [X10]
	0x03E0D9D8 CBZ X9, 0x3E0D9FC
	0x03E0D9DC LDR X10, [X8 + 0xB0]
	0x03E0D9E0 ADD X10, X10, 0x8
	0x03E0D9E4 LDUR X11, [X10 - 0x8]
	0x03E0D9E8 CMP X11, X1
	0x03E0D9EC B.EQ 0x3E0DAEC
	0x03E0D9F0 SUBS X9, X9, 0x1
	0x03E0D9F4 ADD X10, X10, 0x10
	0x03E0D9F8 B.NE 0x3E0D9E4
	0x03E0D9FC MOV X0, X20
	0x03E0DA00 MOV W2, W31
	0x03E0DA04 BL 0x1C5C788
	0x03E0DA08 B 0x3E0DAF8
	0x03E0DA0C LDR X9, [X8 + 0x368]
	0x03E0DA10 LDR X1, [X8 + 0x370]
	0x03E0DA14 BLR X9
	0x03E0DA18 MOV X20, X0
	0x03E0DA1C TBZ X21, 0x1F, 0x3E0D96C
	0x03E0DA20 LDRB W8, [X19 + 0x50]
	0x03E0DA24 CBZ W8, 0x3E0DAD4
	0x03E0DA28 CBZ X20, 0x3E0DAD0
	0x03E0DA2C LDR X0, [X19 + 0x48]
	0x03E0DA30 CBZ X0, 0x3E0DB24
	0x03E0DA34 MOV X1, X31
	0x03E0DA38 BL 0x3DE0F44
	0x03E0DA3C ADD X8, X31, 0x30
	0x03E0DA40 MOV X1, X31
	0x03E0DA44 BL 0x3DC9A68
	0x03E0DA48 LDR V0, [X31 + 0x3]
	0x03E0DA4C LDR X8, [X31 + 0x40]
	0x03E0DA50 ADRP X10, 0x35A000
	0x03E0DA54 STR V0, [X31]
	0x03E0DA58 STR X8, [X31 + 0x10]
	0x03E0DA5C LDR X8, [X20]
	0x03E0DA60 LDR X10, [X10 + 0xBE8]
	0x03E0DA64 LDRH W9, [X8 + 0x12E]
	0x03E0DA68 LDR X1, [X10]
	0x03E0DA6C CBZ X9, 0x3E0DA90
	0x03E0DA70 LDR X10, [X8 + 0xB0]
	0x03E0DA74 ADD X10, X10, 0x8
	0x03E0DA78 LDUR X11, [X10 - 0x8]
	0x03E0DA7C CMP X11, X1
	0x03E0DA80 B.EQ 0x3E0DAA0
	0x03E0DA84 SUBS X9, X9, 0x1
	0x03E0DA88 ADD X10, X10, 0x10
	0x03E0DA8C B.NE 0x3E0DA78
	0x03E0DA90 MOV X0, X20
	0x03E0DA94 MOV W2, W31
	0x03E0DA98 BL 0x1C5C788
	0x03E0DA9C B 0x3E0DAAC
	0x03E0DAA0 LDRSW X9, [X10]
	0x03E0DAA4 ADD X8, X8, X9, 0x4, LSL
	0x03E0DAA8 ADD X0, X8, 0x138
	0x03E0DAAC LDR V0, [X31]
	0x03E0DAB0 LDR X8, [X31 + 0x10]
	0x03E0DAB4 LDR X9, [X0]
	0x03E0DAB8 ADD X1, X31, 0x30
	0x03E0DABC STR V0, [X31 + 0x3]
	0x03E0DAC0 STR X8, [X31 + 0x40]
	0x03E0DAC4 LDR X2, [X0 + 0x8]
	0x03E0DAC8 MOV X0, X20
	0x03E0DACC BLR X9
	0x03E0DAD0 STRB W31, [X19 + 0x50]
	0x03E0DAD4 LDP X20, X19, [X31 + 0x80]
	0x03E0DAD8 LDP X30, X21, [X31 + 0x70]
	0x03E0DADC LDP D9, D8, [X31 + 0x60]
	0x03E0DAE0 LDP D11, D10, [X31 + 0x50]
	0x03E0DAE4 ADD X31, X31, 0x90
	0x03E0DAE8 RET
	0x03E0DAEC LDRSW X9, [X10]
	0x03E0DAF0 ADD X8, X8, X9, 0x4, LSL
	0x03E0DAF4 ADD X0, X8, 0x138
	0x03E0DAF8 ADRP X8, 0xFFFFFFFFFCCE0000
	0x03E0DAFC LDR V0, [X31 + 0x2]
	0x03E0DB00 LDR V1, [X8 + 0x3D0]
	0x03E0DB04 LDR X8, [X0]
	0x03E0DB08 ADD X1, X31, 0x30
	0x03E0DB0C STR V0, [X31 + 0x3]
	0x03E0DB10 STR D1, [X31 + 0x40]
	0x03E0DB14 LDR X2, [X0 + 0x8]
	0x03E0DB18 MOV X0, X20
	0x03E0DB1C BLR X8
	0x03E0DB20 B 0x3E0DAD4
	0x03E0DB24 BL 0x1C16F20
	0x03E0DB28 BL 0x1C16F28
	0x03E0DB2C STRB W31, [X0 + 0x50]
	0x03E0DB30 RET
	0x03E0DB34 SUB X31, X31, 0x80
	0x03E0DB38 STP D11, D10, [X31 + 0x30]
	0x03E0DB3C STP D9, D8, [X31 + 0x40]
	0x03E0DB40 STR X30, [X31 + 0x50]
	0x03E0DB44 STP X22, X21, [X31 + 0x60]
	0x03E0DB48 STP X20, X19, [X31 + 0x70]
	0x03E0DB4C ADRP X21, 0x5DB000
	0x03E0DB50 LDRB W8, [X21 + 0x361]
	0x03E0DB54 MOV X19, X1
	0x03E0DB58 MOV X20, X0
	0x03E0DB5C TBNZ X8, 0x0, 0x3E0DB8C
	0x03E0DB60 ADRP X0, 0x2E6000
	0x03E0DB64 LDR X0, [X0 + 0xE00]
	0x03E0DB68 BL 0x1C16CF4
	0x03E0DB6C ADRP X0, 0x359000
	0x03E0DB70 LDR X0, [X0 + 0x430]
	0x03E0DB74 BL 0x1C16CF4
	0x03E0DB78 ADRP X0, 0x311000
	0x03E0DB7C LDR X0, [X0 + 0xCF0]
	0x03E0DB80 BL 0x1C16CF4
	0x03E0DB84 MOVZ W8, 0x1
	0x03E0DB88 STRB W8, [X21 + 0x361]
	0x03E0DB8C MOVI V0.2D, 0x0
	0x03E0DB90 STP V0, V0, [X31 + 0x10]
	0x03E0DB94 STR V0, [X31]
	0x03E0DB98 CBZ X19, 0x3E0DD64
	0x03E0DB9C LDR X0, [X20 + 0x48]
	0x03E0DBA0 CBZ X0, 0x3E0DD64
	0x03E0DBA4 LDP S10, S11, [X19 + 0xC0]
	0x03E0DBA8 LDR V8, [X19 + 0xC8]
	0x03E0DBAC MOV X1, X31
	0x03E0DBB0 BL 0x3DED364
	0x03E0DBB4 LDR X0, [X20 + 0x48]
	0x03E0DBB8 CBZ X0, 0x3E0DD64
	0x03E0DBBC MOV X1, X31
	0x03E0DBC0 MOV V9.16B, V0.16B
	0x03E0DBC4 BL 0x3DED364
	0x03E0DBC8 FSUB S0, S10, S9
	0x03E0DBCC FSUB S1, S11, S1
	0x03E0DBD0 MOVZ W1, 0x1
	0x03E0DBD4 MOV X0, X20
	0x03E0DBD8 MOV V2.16B, V8.16B
	0x03E0DBDC MOV X2, X31
	0x03E0DBE0 BL 0x3CCA820
	0x03E0DBE4 TBNZ X0, 0x1F, 0x3E0DD48
	0x03E0DBE8 MOV W21, W0
	0x03E0DBEC MOV X0, X20
	0x03E0DBF0 MOV X1, X31
	0x03E0DBF4 BL 0x3CC98D0
	0x03E0DBF8 CBZ X0, 0x3E0DD64
	0x03E0DBFC LDR X8, [X0 + 0x40]
	0x03E0DC00 CBZ X8, 0x3E0DD64

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+288], D8
	003 Move [X31+304], X29
	004 Move [X31+312], X30
	005 Move [X31+320], X22
	006 Move [X31+328], X21
	007 Move [X31+336], X20
	008 Move [X31+344], X19
	009 Move X21, 0x5DC000
	010 Move W8, [X21+871]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2E7000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x355000
	021 Move X0, [X0+2888]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+871], W8
	025 NotImplemented "Instruction MOVI not yet implemented."
	026 Move [X31+272], X31
	027 Move [X31+240], V0
	028 Move [X31+248], V0
	029 Move [X31+208], V0
	030 Move [X31+216], V0
	031 Move [X31+176], V0
	032 Move [X31+184], V0
	033 Move [X31+144], V0
	034 Move [X31+152], V0
	035 Move [X31+112], V0
	036 Move [X31+120], V0
	037 Move [X31+6], V0
	038 Move X0, [X20+72]
	039 Compare X0, 0
	040 JumpIfEqual {232}
	041 Move X1, X31
	042 Call VisualElement.get_computedStyle, X0
	043 Move X1, X0
	044 Add X0, X31, 192
	045 Move W2, 88
	046 Call 0x3EB2B30
	047 Move X0, [X20+72]
	048 Call TextUtilities.GetTextSettingsFrom, X0
	049 Compare X19, 0
	050 JumpIfEqual {232}
	051 Move X22, 0x2E7000
	052 Move X22, [X22+1432]
	053 Move [X19+104], X0
	054 Move X21, X0
	055 Move X0, [X22]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X21
	061 Move X1, X31
	062 Move X2, X31
	063 Call Object.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {223}
	068 Move X0, [X20+72]
	069 Call TextUtilities.GetFontAsset, X0
	070 Move [X19+64], X0
	071 Move X21, X0
	072 Move X0, [X22]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X21
	078 Move X1, X31
	079 Move X2, X31
	080 Call Object.op_Equality, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {223}
	085 Move X8, [X19+64]
	086 Compare X8, 0
	087 JumpIfEqual {232}
	088 Move X8, [X8+40]
	089 Move [X19+72], X8
	090 Move X0, [X20+72]
	091 Compare X0, 0
	092 JumpIfEqual {232}
	093 Move X1, X31
	094 Call VisualElement.get_contentRect, X0
	095 Move X0, [X20+72]
	096 Compare X0, 0
	097 JumpIfEqual {232}
	098 Move X1, X31
	099 Move V8, V2
	100 Call VisualElement.get_contentRect, X0
	101 Move X1, [X19+64]
	102 Move X0, X20
	103 Move [X19+24], X31
	104 Move [X19+32], S8
	105 Move [X19+40], S3
	106 Call UITKTextHandle.GetTextEffectPadding, X0, X1
	107 Move [X19+184], S0
	108 Move X8, [X20+72]
	109 Compare X8, 0
	110 JumpIfEqual {232}
	111 Move W9, [X8+1003]
	112 Compare W9, 0
	113 JumpIfEqual {123}
	114 Move X0, X20
	115 Call UITKTextHandle.TextLibraryCanElide, X0
	116 Move X8, [X20+72]
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {125}
	121 Compare X8, 0
	122 JumpIfEqual {232}
	123 Move X0, X8
	124 Call TextElement.get_renderedText, X0
	125 Compare X8, 0
	126 JumpIfEqual {232}
	127 Move X0, [X8+1008]
	128 Move [X19+16], X0
	129 Add X0, X31, 192
	130 Move X1, X31
	131 Call ComputedStyle.get_fontSize, X0
	132 Move S0, W0
	133 NotImplemented "Instruction FCMP not yet implemented."
	134 Add X0, X31, 192
	135 Move X1, X31
	136 Call ComputedStyle.get_fontSize, X0
	137 Move S0, W0
	138 Move X0, [X19+64]
	139 Compare X0, 0
	140 JumpIfEqual {232}
	141 Add X8, X31, 0
	142 Move X1, X31
	143 Call FontAsset.get_faceInfo, X0
	144 Add X0, X31, 96
	145 Add X1, X31, 0
	146 Move W2, 96
	147 Call 0x3EB2AC0
	148 Add X0, X31, 96
	149 Move X1, X31
	150 Call FaceInfo.get_pointSize, X0
	151 NotImplemented "Instruction SCVTF not yet implemented."
	152 Add X0, X31, 192
	153 Move X1, X31
	154 Move [X19+164], S0
	155 Call ComputedStyle.get_unityFontStyleAndWeight, X0
	156 Move X8, 0x355000
	157 Move X8, [X8+2888]
	158 Move W21, W0
	159 Move X8, [X8]
	160 Move W9, [X8+224]
	161 Compare W9, 0
	162 JumpIfNotEqual {165}
	163 Move X0, X8
	164 Call 0x1C17DFC
	165 Move W0, W21
	166 Move X1, X31
	167 Call TextGeneratorUtilities.LegacyStyleToNewStyle, X0
	168 Move [X19+96], W0
	169 Add X0, X31, 192
	170 Move X1, X31
	171 Call ComputedStyle.get_unityTextAlign, X0
	172 Move X1, X31
	173 Call TextGeneratorUtilities.LegacyAlignmentToNewAlignment, X0
	174 Move [X19+112], W0
	175 Add X0, X31, 192
	176 Move X1, X31
	177 Call ComputedStyle.get_whiteSpace, X0
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move W8, 0xCCCD
	180 NotImplemented "Instruction MOVK not yet implemented."
	181 NotImplemented "Instruction CSET not yet implemented."
	182 Move [X19+120], W9
	183 Move [X19+124], W8
	184 Move X8, [X20+72]
	185 Compare X8, 0
	186 JumpIfEqual {232}
	187 Move W8, [X8+1000]
	188 Move X0, X20
	189 Move [X19+181], W8
	190 Call UITKTextHandle.GetTextOverflowMode, X0
	191 Move [X19+116], W0
	192 Add X0, X31, 192
	193 Move X1, X31
	194 Call ComputedStyle.get_letterSpacing, X0
	195 Move [X19+192], W0
	196 Add X0, X31, 192
	197 Move X1, X31
	198 Call ComputedStyle.get_wordSpacing, X0
	199 Move [X19+196], W0
	200 Add X0, X31, 192
	201 Move X1, X31
	202 Call ComputedStyle.get_unityParagraphSpacing, X0
	203 Move [X19+204], W0
	204 Add X0, X31, 192
	205 Move X1, X31
	206 Call ComputedStyle.get_color, X0
	207 Move [X19+128], S0
	208 Move [X19+136], S1
	209 Move [X19+136], S2
	210 Move [X19+144], S3
	211 Move [X19+162], W31
	212 Move X8, [X20+72]
	213 Compare X8, 0
	214 JumpIfEqual {232}
	215 Move W9, [X8+820]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 NotImplemented "Instruction CSET not yet implemented."
	218 Move [X19+182], W9
	219 Move W8, [X8+1001]
	220 Move W9, 1
	221 Move [X19+260], W9
	222 Move [X19+188], W8
	223 Move X20, [X31+336]
	224 Move X19, [X31+344]
	225 Move X22, [X31+320]
	226 Move X21, [X31+328]
	227 Move X29, [X31+304]
	228 Move X30, [X31+312]
	229 Move V8, [X31+288]
	230 Add X31, X31, 352
	231 Return 
	232 Call 0x1C17F20

Method: System.Boolean TextLibraryCanElide()

Disassembly:
	0x03E0FA20 SUBS X9, X9, 0x1
	0x03E0FA24 ADD X10, X10, 0x10
	0x03E0FA28 B.NE 0x3E0FA14
	0x03E0FA2C MOV X0, X19
	0x03E0FA30 MOV W2, W31
	0x03E0FA34 BL 0x1C5C788
	0x03E0FA38 B 0x3E0FA48
	0x03E0FA3C LDRSW X9, [X10]
	0x03E0FA40 ADD X8, X8, X9, 0x4, LSL
	0x03E0FA44 ADD X0, X8, 0x138
	0x03E0FA48 LDP X2, X1, [X0]
	0x03E0FA4C MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+72]
	003 Compare X0, 0
	004 JumpIfEqual {13}
	005 Move X1, X31
	006 Call VisualElement.get_computedStyle, X0
	007 Move X1, X31
	008 Call ComputedStyle.get_unityTextOverflowPosition, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1C17F20

Method: System.Single GetTextEffectPadding(UnityEngine.TextCore.Text.FontAsset fontAsset)

Disassembly:
	0x03E0FCD0 MOV X1, X19
	0x03E0FCD4 LDP X20, X19, [X31 + 0x10]
	0x03E0FCD8 LDP X30, X21, [X31], #0x20
	0x03E0FCDC B 0x3E0FE9C
	0x03E0FCE0 ADRP X10, 0x30E000
	0x03E0FCE4 LDR X8, [X20]
	0x03E0FCE8 LDR X10, [X10 + 0x630]
	0x03E0FCEC LDRH W9, [X8 + 0x12E]
	0x03E0FCF0 LDR X1, [X10]
	0x03E0FCF4 CBZ X9, 0x3E0FD18
	0x03E0FCF8 LDR X10, [X8 + 0xB0]
	0x03E0FCFC ADD X10, X10, 0x8
	0x03E0FD00 LDUR X11, [X10 - 0x8]
	0x03E0FD04 CMP X11, X1
	0x03E0FD08 B.EQ 0x3E0FD28
	0x03E0FD0C SUBS X9, X9, 0x1
	0x03E0FD10 ADD X10, X10, 0x10
	0x03E0FD14 B.NE 0x3E0FD00
	0x03E0FD18 MOVZ W2, 0x2
	0x03E0FD1C MOV X0, X20
	0x03E0FD20 BL 0x1C5C788
	0x03E0FD24 B 0x3E0FD38
	0x03E0FD28 LDR W9, [X10]
	0x03E0FD2C ADD W9, W9, 0x2
	0x03E0FD30 ADD X8, X8, W9, 0x4, SXTW
	0x03E0FD34 ADD X0, X8, 0x138
	0x03E0FD38 LDP X8, X1, [X0]
	0x03E0FD3C MOV X0, X20
	0x03E0FD40 BLR X8
	0x03E0FD44 TBNZ X0, 0x0, 0x3E0FDD4
	0x03E0FD48 LDR X8, [X20]
	0x03E0FD4C LDR X1, [X21]
	0x03E0FD50 LDRH W9, [X8 + 0x12E]
	0x03E0FD54 CBZ X9, 0x3E0FD78
	0x03E0FD58 LDR X10, [X8 + 0xB0]
	0x03E0FD5C ADD X10, X10, 0x8
	0x03E0FD60 LDUR X11, [X10 - 0x8]
	0x03E0FD64 CMP X11, X1
	0x03E0FD68 B.EQ 0x3E0FD88
	0x03E0FD6C SUBS X9, X9, 0x1
	0x03E0FD70 ADD X10, X10, 0x10
	0x03E0FD74 B.NE 0x3E0FD60
	0x03E0FD78 MOV X0, X20
	0x03E0FD7C MOV W2, W31
	0x03E0FD80 BL 0x1C5C788
	0x03E0FD84 B 0x3E0FD94
	0x03E0FD88 LDRSW X9, [X10]
	0x03E0FD8C ADD X8, X8, X9, 0x4, LSL
	0x03E0FD90 ADD X0, X8, 0x138
	0x03E0FD94 LDP X8, X1, [X0]
	0x03E0FD98 MOV X0, X20
	0x03E0FD9C BLR X8
	0x03E0FDA0 TBZ X0, 0x0, 0x3E0FDD4
	0x03E0FDA4 MOV X0, X20
	0x03E0FDA8 BL 0x3E0AC7C
	0x03E0FDAC CBZ X0, 0x3E0FDE0
	0x03E0FDB0 LDR X8, [X0 + 0x10]
	0x03E0FDB4 CBZ X8, 0x3E0FDE0
	0x03E0FDB8 LDRB W8, [X8 + 0x30]
	0x03E0FDBC CBZ W8, 0x3E0FDD4
	0x03E0FDC0 MOV X0, X20
	0x03E0FDC4 MOV X1, X19
	0x03E0FDC8 LDP X20, X19, [X31 + 0x10]
	0x03E0FDCC LDP X30, X21, [X31], #0x20
	0x03E0FDD0 B 0x3E10A0C
	0x03E0FDD4 LDP X20, X19, [X31 + 0x10]
	0x03E0FDD8 LDP X30, X21, [X31], #0x20
	0x03E0FDDC RET
	0x03E0FDE0 BL 0x1C16F20
	0x03E0FDE4 STP X30, X19, [X31 - 0x10]!
	0x03E0FDE8 MOV X1, X31
	0x03E0FDEC MOV X19, X0
	0x03E0FDF0 BL 0x3DE0F44
	0x03E0FDF4 MOV X1, X31
	0x03E0FDF8 BL 0x3DC9C2C
	0x03E0FDFC CMP W0, 0x1
	0x03E0FE00 B.NE 0x3E0FE24
	0x03E0FE04 MOV X0, X19
	0x03E0FE08 MOV X1, X31
	0x03E0FE0C BL 0x3DE0F44
	0x03E0FE10 MOV X1, X31
	0x03E0FE14 BL 0x3DC6CF4
	0x03E0FE18 CMP W0, 0x1
	0x03E0FE1C CSET W0, EQ
	0x03E0FE20 B 0x3E0FE28
	0x03E0FE24 MOV W0, W31
	0x03E0FE28 LDP X30, X19, [X31], #0x10
	0x03E0FE2C RET
	0x03E0FE30 STP X30, X19, [X31 - 0x10]!
	0x03E0FE34 LDRB W8, [X0 + 0x3EA]
	0x03E0FE38 MOV X19, X0
	0x03E0FE3C CBZ W8, 0x3E0FE78
	0x03E0FE40 LDRB W8, [X19 + 0x3EB]
	0x03E0FE44 CBZ W8, 0x3E0FE78
	0x03E0FE48 LDR X8, [X19]
	0x03E0FE4C MOV X0, X19
	0x03E0FE50 LDR X9, [X8 + 0xB18]
	0x03E0FE54 LDR X1, [X8 + 0xB20]
	0x03E0FE58 BLR X9
	0x03E0FE5C MOV X1, X0
	0x03E0FE60 MOV X0, X19
	0x03E0FE64 MOV X2, X31
	0x03E0FE68 BL 0x3DF7B68
	0x03E0FE6C MOVZ W8, 0x1
	0x03E0FE70 STRB W8, [X19 + 0x3F8]
	0x03E0FE74 B 0x3E0FE94
	0x03E0FE78 LDRB W8, [X19 + 0x3F8]
	0x03E0FE7C CBZ W8, 0x3E0FE94

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], D10
	003 Move [X31+144], D9
	004 Move [X31+152], D8
	005 Move [X31+160], X30
	006 Move [X31+168], X21
	007 Move [X31+176], X20
	008 Move [X31+184], X19
	009 Move X21, 0x5DA000
	010 Move W8, [X21+872]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x35C000
	018 Move X0, [X0+1232]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+872], W8
	022 NotImplemented "Instruction MOVI not yet implemented."
	023 Move [X31+112], X31
	024 Move [X31+80], V0
	025 Move [X31+88], V0
	026 Move [X31+48], V0
	027 Move [X31+56], V0
	028 Move [X31+2], V0
	029 Move X0, [X20+72]
	030 Compare X0, 0
	031 JumpIfEqual {118}
	032 Move X1, X31
	033 Call VisualElement.get_computedStyle, X0
	034 Move X1, X0
	035 Add X0, X31, 32
	036 Move W2, 88
	037 Call 0x3EB2B30
	038 Add X0, X31, 32
	039 Move X1, X31
	040 Call ComputedStyle.get_unityTextOutlineWidth, X0
	041 Move S1, 0.5
	042 Add X8, X31, 0
	043 Add X0, X31, 32
	044 Move X1, X31
	045 Multiply S8, S0, S1
	046 Call ComputedStyle.get_textShadow, X0
	047 Move V9, [X31]
	048 Add X8, X31, 0
	049 Add X0, X31, 32
	050 Move X1, X31
	051 Call ComputedStyle.get_textShadow, X0
	052 Move V10, [X31+4]
	053 Add X8, X31, 0
	054 Add X0, X31, 32
	055 Move X1, X31
	056 Call ComputedStyle.get_textShadow, X0
	057 Move V0, [X31+8]
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 NotImplemented "Instruction FCMP not yet implemented."
	062 Move X19, 0x35C000
	063 Move X19, [X19+1232]
	064 Move X0, [X19]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1C17DFC
	069 Move X0, [X19]
	070 Move X8, [X0+184]
	071 Move V0, [X8]
	072 Move X21, 0x35C000
	073 Move X21, [X21+1232]
	074 NotImplemented "Instruction FABS not yet implemented."
	075 NotImplemented "Instruction FABS not yet implemented."
	076 NotImplemented "Instruction FABS not yet implemented."
	077 Move X0, [X21]
	078 Add S2, S2, S0
	079 NotImplemented "Instruction FCMP not yet implemented."
	080 Add S0, S1, S0
	081 NotImplemented "Instruction FCSEL not yet implemented."
	082 Move W8, [X0+224]
	083 NotImplemented "Instruction FCMP not yet implemented."
	084 NotImplemented "Instruction FCSEL not yet implemented."
	085 NotImplemented "Instruction FCMP not yet implemented."
	086 NotImplemented "Instruction FCSEL not yet implemented."
	087 Compare W8, 0
	088 JumpIfNotEqual {91}
	089 Call 0x1C17DFC
	090 Move X0, [X21]
	091 Move X8, [X0+184]
	092 Move X0, [X20+72]
	093 Move X1, X19
	094 Move V10, [X8]
	095 Call TextUtilities.ConvertPixelUnitsToTextCoreRelativeUnits, X0, X1
	096 Compare X19, 0
	097 JumpIfEqual {118}
	098 Move X0, X19
	099 Move X1, X31
	100 Move V8, V0
	101 Add S9, S9, S10
	102 Call FontAsset.get_atlasPadding, X0
	103 Add W8, W0, 1
	104 Multiply S0, S9, S8
	105 NotImplemented "Instruction SCVTF not yet implemented."
	106 Multiply S0, S0, S1
	107 NotImplemented "Instruction FCMP not yet implemented."
	108 NotImplemented "Instruction FCSEL not yet implemented."
	109 Move X20, [X31+176]
	110 Move X19, [X31+184]
	111 Move X30, [X31+160]
	112 Move X21, [X31+168]
	113 Move D9, [X31+144]
	114 Move D8, [X31+152]
	115 Move V10, [X31+128]
	116 Add X31, X31, 192
	117 Return V0
	118 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03E1001C LDR V0, [X8 + 0x24]
	0x03E10020 STP S1, S0, [X31 + 0x38]
	0x03E10024 CBZ X20, 0x3E10A00
	0x03E10028 ADRP X10, 0x30D000
	0x03E1002C LDR X8, [X20]
	0x03E10030 LDR X10, [X10 + 0x628]
	0x03E10034 LDRH W9, [X8 + 0x12E]
	0x03E10038 LDR X1, [X10]
	0x03E1003C CBZ X9, 0x3E10060
	0x03E10040 LDR X10, [X8 + 0xB0]
	0x03E10044 ADD X10, X10, 0x8
	0x03E10048 LDUR X11, [X10 - 0x8]
	0x03E1004C CMP X11, X1
	0x03E10050 B.EQ 0x3E10070
	0x03E10054 SUBS X9, X9, 0x1
	0x03E10058 ADD X10, X10, 0x10
	0x03E1005C B.NE 0x3E10048
	0x03E10060 MOVZ W2, 0x4
	0x03E10064 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x5D9000
	005 Move X20, 0x35B000
	006 Move W8, [X19+873]
	007 Move X20, [X20+1232]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x35B000
	013 Move X0, [X0+1232]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+873], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 0x40C00000
	021 Move X8, [X8+184]
	022 Move [X8], W9
	023 Move X30, [X31+32]
	024 Return 

