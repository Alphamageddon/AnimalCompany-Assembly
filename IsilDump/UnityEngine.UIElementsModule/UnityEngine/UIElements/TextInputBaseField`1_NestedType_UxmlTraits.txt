Type: UnityEngine.UIElements.TextInputBaseField`1/UxmlTraits

Method: System.Void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc)

Disassembly:
	0x0273B3A8 CBZ X19, 0x273B4C8
	0x0273B3AC MOV X0, X19
	0x0273B3B0 MOV X1, X31
	0x0273B3B4 BL 0x322B8DC
	0x0273B3B8 MOV X1, X31
	0x0273B3BC BL 0x32277A8
	0x0273B3C0 MOV X20, X31
	0x0273B3C4 TBNZ X0, 0x0, 0x273B4B4
	0x0273B3C8 MOVZ W1, 0x2C
	0x0273B3CC MOV X0, X19
	0x0273B3D0 MOV W2, W31
	0x0273B3D4 MOV X3, X31
	0x0273B3D8 BL 0x3229AE8
	0x0273B3DC CBZ X0, 0x273B4C8
	0x0273B3E0 LDR W8, [X0 + 0x18]
	0x0273B3E4 MOV X19, X0
	0x0273B3E8 CBZ W8, 0x273B4B0
	0x0273B3EC ADRP X8, 0x19B9000
	0x0273B3F0 LDR X8, [X8 + 0x1D0]
	0x0273B3F4 LDR X0, [X8]
	0x0273B3F8 BL 0x1C16F10
	0x0273B3FC ADRP X8, 0x19B9000
	0x0273B400 LDR X8, [X8 + 0x1C0]
	0x0273B404 MOV X20, X0
	0x0273B408 LDR X1, [X8]
	0x0273B40C BL 0x301B7C4
	0x0273B410 LDR W8, [X19 + 0x18]
	0x0273B414 CMP W8, 0x1
	0x0273B418 B.LT 0x273B4B4
	0x0273B41C ADRP X23, 0x19B9000
	0x0273B420 LDR X23, [X23 + 0x1B8]
	0x0273B424 MOV X21, X31
	0x0273B428 ADD X22, X19, 0x20
	0x0273B42C CMP W21, W8
	0x0273B430 B.CS 0x273B4CC
	0x0273B434 LDR X0, [X22, X21, LSL #3]
	0x0273B438 CBZ X0, 0x273B4C8
	0x0273B43C MOV X1, X31
	0x0273B440 BL 0x322B8DC
	0x0273B444 CBZ X20, 0x273B4C8
	0x0273B448 LDR W10, [X20 + 0x1C]
	0x0273B44C LDR X8, [X20 + 0x10]
	0x0273B450 LDR X9, [X23]
	0x0273B454 ADD W10, W10, 0x1
	0x0273B458 STR W10, [X20 + 0x1C]
	0x0273B45C CBZ X8, 0x273B4C8
	0x0273B460 LDRSW X10, [X20 + 0x18]
	0x0273B464 LDR W11, [X8 + 0x18]
	0x0273B468 MOV X1, X0
	0x0273B46C CMP W10, W11
	0x0273B470 B.CS 0x273B488
	0x0273B474 ADD W9, W10, 0x1
	0x0273B478 ADD X8, X8, X10, 0x3, LSL
	0x0273B47C STR W9, [X20 + 0x18]
	0x0273B480 STR X1, [X8 + 0x20]
	0x0273B484 B 0x273B49C
	0x0273B488 LDR X8, [X9 + 0x20]
	0x0273B48C MOV X0, X20
	0x0273B490 LDR X8, [X8 + 0xC0]
	0x0273B494 LDR X2, [X8 + 0x70]
	0x0273B498 BL 0x301BF90
	0x0273B49C LDR W8, [X19 + 0x18]
	0x0273B4A0 ADD X21, X21, 0x1
	0x0273B4A4 CMP W21, W8
	0x0273B4A8 B.LT 0x273B42C
	0x0273B4AC B 0x273B4B4
	0x0273B4B0 MOV X20, X31
	0x0273B4B4 MOV X0, X20
	0x0273B4B8 LDP X20, X19, [X31 + 0x20]
	0x0273B4BC LDP X22, X21, [X31 + 0x10]
	0x0273B4C0 LDP X30, X23, [X31], #0x30
	0x0273B4C4 RET
	0x0273B4C8 BL 0x1C16F20
	0x0273B4CC BL 0x1C16F28
	0x0273B4D0 STR X30, [X31 - 0x20]!
	0x0273B4D4 STP X20, X19, [X31 + 0x10]
	0x0273B4D8 ADRP X20, 0x1C9F000
	0x0273B4DC LDRB W8, [X20 + 0x6C2]
	0x0273B4E0 MOV X19, X0
	0x0273B4E4 TBNZ X8, 0x0, 0x273B4FC
	0x0273B4E8 ADRP X0, 0x19E2000
	0x0273B4EC LDR X0, [X0 + 0xC60]
	0x0273B4F0 BL 0x1C16CF4
	0x0273B4F4 MOVZ W8, 0x1
	0x0273B4F8 STRB W8, [X20 + 0x6C2]
	0x0273B4FC MOV X0, X19
	0x0273B500 BL 0x273B160
	0x0273B504 LDR X8, [X19 + 0x28]
	0x0273B508 CBZ X8, 0x273B520
	0x0273B50C LDP X20, X19, [X31 + 0x10]
	0x0273B510 MOVZ W9, 0x1
	0x0273B514 STR W9, [X8 + 0x40]
	0x0273B518 LDR X30, [X31], #0x20
	0x0273B51C RET
	0x0273B520 BL 0x1C16F20
	0x0273B524 STP X30, X21, [X31 - 0x20]!
	0x0273B528 STP X20, X19, [X31 + 0x10]
	0x0273B52C ADRP X20, 0x1C9F000
	0x0273B530 ADRP X21, 0x19E2000
	0x0273B534 LDRB W8, [X20 + 0x6C3]
	0x0273B538 LDR X21, [X21 + 0xB20]
	0x0273B53C MOV X19, X0
	0x0273B540 TBNZ X8, 0x0, 0x273B57C
	0x0273B544 ADRP X0, 0x19E2000
	0x0273B548 LDR X0, [X0 + 0xB28]
	0x0273B54C BL 0x1C16CF4
	0x0273B550 ADRP X0, 0x19E2000
	0x0273B554 LDR X0, [X0 + 0xBF0]
	0x0273B558 BL 0x1C16CF4
	0x0273B55C ADRP X0, 0x19E2000
	0x0273B560 LDR X0, [X0 + 0xB20]
	0x0273B564 BL 0x1C16CF4
	0x0273B568 ADRP X0, 0x19E2000
	0x0273B56C LDR X0, [X0 + 0xC58]
	0x0273B570 BL 0x1C16CF4
	0x0273B574 MOVZ W8, 0x1
	0x0273B578 STRB W8, [X20 + 0x6C3]
	0x0273B57C LDR X0, [X21]
	0x0273B580 BL 0x1C16F10
	0x0273B584 MOV X1, X31
	0x0273B588 MOV X20, X0
	0x0273B58C BL 0x3E0A2F4
	0x0273B590 CBZ X20, 0x273B5DC
	0x0273B594 ADRP X8, 0x19E2000
	0x0273B598 LDR X8, [X8 + 0xC58]
	0x0273B59C MOV X0, X19
	0x0273B5A0 MOV X1, X31
	0x0273B5A4 LDR X8, [X8]
	0x0273B5A8 STR X8, [X20 + 0x10]
	0x0273B5AC STR X20, [X19 + 0x78]
	0x0273B5B0 BL 0x3CEA004
	0x0273B5B4 LDR X8, [X19 + 0x40]
	0x0273B5B8 CBZ X8, 0x273B5DC
	0x0273B5BC STR W31, [X8 + 0x40]
	0x0273B5C0 LDR X8, [X19 + 0x50]
	0x0273B5C4 CBZ X8, 0x273B5DC
	0x0273B5C8 LDP X20, X19, [X31 + 0x10]
	0x0273B5CC MOVZ W9, 0x1
	0x0273B5D0 STRB W9, [X8 + 0x40]
	0x0273B5D4 LDP X30, X21, [X31], #0x20
	0x0273B5D8 RET
	0x0273B5DC BL 0x1C16F20
	0x0273B5E0 SUB X31, X31, 0xB0
	0x0273B5E4 STP X30, X23, [X31 + 0x80]
	0x0273B5E8 STP X22, X21, [X31 + 0x90]
	0x0273B5EC STP X20, X19, [X31 + 0xA0]
	0x0273B5F0 LDP V1, V0, [X3]
	0x0273B5F4 STP V1, V0, [X31 + 0x40]
	0x0273B5F8 CBZ X0, 0x273B720
	0x0273B5FC LDP V0, V1, [X31 + 0x40]
	0x0273B600 MOV X20, X4
	0x0273B604 MOV X22, X3
	0x0273B608 ADD X3, X31, 0x20
	0x0273B60C MOV X4, X31
	0x0273B610 MOV X21, X2
	0x0273B614 MOV X19, X1
	0x0273B618 MOV X23, X0
	0x0273B61C STP V0, V1, [X31 + 0x20]
	0x0273B620 BL 0x3CEA08C
	0x0273B624 LDP V0, V1, [X22]
	0x0273B628 LDR X0, [X23 + 0x78]
	0x0273B62C STP V0, V1, [X31]
	0x0273B630 CBZ X0, 0x273B720
	0x0273B634 LDR X8, [X0]
	0x0273B638 LDP V0, V1, [X31]
	0x0273B63C ADD X2, X31, 0x60
	0x0273B640 MOV X1, X21
	0x0273B644 LDR X9, [X8 + 0x178]
	0x0273B648 STP V0, V1, [X31 + 0x60]
	0x0273B64C LDR X3, [X8 + 0x180]
	0x0273B650 BLR X9
	0x0273B654 LDR X8, [X20 + 0x20]
	0x0273B658 MOV X21, X0
	0x0273B65C LDR X8, [X8 + 0xC0]
	0x0273B660 LDR X1, [X8 + 0x8]
	0x0273B664 LDRB W8, [X1 + 0x135]
	0x0273B668 TBNZ X8, 0x0, 0x273B678
	0x0273B66C MOV X0, X1
	0x0273B670 BL 0x1C5C684
	0x0273B674 MOV X1, X0
	0x0273B678 CBZ X19, 0x273B720
	0x0273B67C LDR X8, [X19]
	0x0273B680 LDRB W9, [X1 + 0x130]
	0x0273B684 LDRB W10, [X8 + 0x130]
	0x0273B688 CMP W10, W9
	0x0273B68C B.CC 0x273B718
	0x0273B690 LDR X8, [X8 + 0xC8]
	0x0273B694 ADD X8, X8, X9, 0x3, LSL
	0x0273B698 LDUR X8, [X8 - 0x8]
	0x0273B69C CMP X8, X1
	0x0273B6A0 B.NE 0x273B718
	0x0273B6A4 LDR X8, [X20 + 0x20]
	0x0273B6A8 LDR X8, [X8 + 0xC0]
	0x0273B6AC LDR X1, [X8 + 0x8]
	0x0273B6B0 LDRB W8, [X1 + 0x135]
	0x0273B6B4 TBNZ X8, 0x0, 0x273B6C4
	0x0273B6B8 MOV X0, X1
	0x0273B6BC BL 0x1C5C684
	0x0273B6C0 MOV X1, X0
	0x0273B6C4 LDR X8, [X19]
	0x0273B6C8 LDRB W9, [X1 + 0x130]
	0x0273B6CC LDRB W10, [X8 + 0x130]
	0x0273B6D0 CMP W10, W9
	0x0273B6D4 B.CC 0x273B718
	0x0273B6D8 LDR X8, [X8 + 0xC8]
	0x0273B6DC ADD X8, X8, X9, 0x3, LSL
	0x0273B6E0 LDUR X8, [X8 - 0x8]
	0x0273B6E4 CMP X8, X1
	0x0273B6E8 B.NE 0x273B718
	0x0273B6EC LDR X8, [X20 + 0x20]
	0x0273B6F0 MOV X0, X19
	0x0273B6F4 MOV X1, X21
	0x0273B6F8 LDR X8, [X8 + 0xC0]
	0x0273B6FC LDR X2, [X8 + 0x10]
	0x0273B700 BL 0x28A3A48

ISIL:
	001 Subtract X31, X31, 384
	002 Move [X31+320], X29
	003 Move [X31+328], X30
	004 Move [X31+336], X24
	005 Move [X31+344], X23
	006 Move [X31+352], X22
	007 Move [X31+360], X21
	008 Move [X31+368], X20
	009 Move [X31+376], X19
	010 Move X24, 0x1CA0000
	011 Move W8, [X24+1722]
	012 Move X20, X4
	013 Move X22, X3
	014 Move X21, X2
	015 Move X19, X1
	016 Move X23, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x19E3000
	022 Move X0, [X0+3176]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X24+1722], W8
	026 Move V1, [X22]
	027 Move V0, [X22+16]
	028 Move [X31+256], V1
	029 Move [X31+264], V0
	030 Compare X23, 0
	031 JumpIfEqual {275}
	032 Move X8, 0x19E3000
	033 Move X8, [X8+3176]
	034 Move V0, [X31+256]
	035 Move V1, [X31+272]
	036 Add X3, X31, 288
	037 Move X0, X23
	038 Move X4, [X8]
	039 Move X1, X19
	040 Move X2, X21
	041 Move [X31+288], V0
	042 Move [X31+296], V1
	043 Call BaseFieldTraits`2<Object, Object>.Init, X0, X1, X2, X3
	044 Move X8, [X20+32]
	045 Move X8, [X8+192]
	046 Move X1, [X8]
	047 Move W8, [X1+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {55}
	052 Move X0, X1
	053 Call 0x1C5D684
	054 Move X1, X0
	055 Compare X19, 0
	056 JumpIfEqual {65}
	057 Move X8, [X19]
	058 Move W9, [X1+304]
	059 Move W10, [X8+304]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, [X8+200]
	062 Add X8, X8, X9
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move V0, [X22]
	066 Move V1, [X22+16]
	067 Move X0, [X23+136]
	068 Move [X31+224], V0
	069 Move [X31+232], V1
	070 Compare X0, 0
	071 JumpIfEqual {275}
	072 Move X8, [X0]
	073 Move V0, [X31+224]
	074 Move V1, [X31+240]
	075 Add X2, X31, 288
	076 Move X1, X21
	077 Move X9, [X8+376]
	078 Move [X31+288], V0
	079 Move [X31+296], V1
	080 Move X3, [X8+384]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Compare X19, 0
	083 JumpIfEqual {275}
	084 Move X8, [X20+32]
	085 Move W1, W0
	086 Move X0, X19
	087 Move X8, [X8+192]
	088 Move X2, [X8+16]
	089 Call TextInputBaseField`1<Object>.set_maxLength, X0, X1
	090 Move V0, [X22]
	091 Move V1, [X22+16]
	092 Move X0, [X23+144]
	093 Move [X31+192], V0
	094 Move [X31+200], V1
	095 Compare X0, 0
	096 JumpIfEqual {275}
	097 Move X8, [X0]
	098 Move V0, [X31+192]
	099 Move V1, [X31+208]
	100 Add X2, X31, 288
	101 Move X1, X21
	102 Move X9, [X8+376]
	103 Move [X31+288], V0
	104 Move [X31+296], V1
	105 Move X3, [X8+384]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X8, [X20+32]
	108 And W1, W0, 1
	109 Move X0, X19
	110 Move X8, [X8+192]
	111 Move X2, [X8+24]
	112 Call TextInputBaseField`1<Object>.set_isPasswordField, X0, X1
	113 Move V0, [X22]
	114 Move V1, [X22+16]
	115 Move X0, [X23+160]
	116 Move [X31+160], V0
	117 Move [X31+168], V1
	118 Compare X0, 0
	119 JumpIfEqual {275}
	120 Move X8, [X0]
	121 Move V0, [X31+160]
	122 Move V1, [X31+176]
	123 Add X2, X31, 288
	124 Move X1, X21
	125 Move X9, [X8+376]
	126 Move [X31+288], V0
	127 Move [X31+296], V1
	128 Move X3, [X8+384]
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, [X20+32]
	131 And W1, W0, 1
	132 Move X0, X19
	133 Move X8, [X8+192]
	134 Move X2, [X8+32]
	135 Call TextInputBaseField`1<Object>.set_isReadOnly, X0, X1
	136 Move V0, [X22]
	137 Move V1, [X22+16]
	138 Move X0, [X23+168]
	139 Move [X31+128], V0
	140 Move [X31+136], V1
	141 Compare X0, 0
	142 JumpIfEqual {275}
	143 Move X8, [X0]
	144 Move V0, [X31+128]
	145 Move V1, [X31+144]
	146 Add X2, X31, 288
	147 Move X1, X21
	148 Move X9, [X8+376]
	149 Move [X31+288], V0
	150 Move [X31+296], V1
	151 Move X3, [X8+384]
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move X8, [X20+32]
	154 And W1, W0, 1
	155 Move X0, X19
	156 Move X8, [X8+192]
	157 Move X2, [X8+40]
	158 Call TextInputBaseField`1<Object>.set_isDelayed, X0, X1
	159 Move V0, [X22]
	160 Move V1, [X22+16]
	161 Move X0, [X23+176]
	162 Move [X31+96], V0
	163 Move [X31+104], V1
	164 Compare X0, 0
	165 JumpIfEqual {275}
	166 Move X8, [X0]
	167 Move V0, [X31+96]
	168 Move V1, [X31+112]
	169 Add X2, X31, 288
	170 Move X1, X21
	171 Move X9, [X8+376]
	172 Move [X31+288], V0
	173 Move [X31+296], V1
	174 Move X3, [X8+384]
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move X8, [X20+32]
	177 And W1, W0, 1
	178 Move X0, X19
	179 Move X8, [X8+192]
	180 Move X2, [X8+48]
	181 Call TextInputBaseField`1<Object>.set_hideMobileInput, X0, X1
	182 Move V0, [X22]
	183 Move V1, [X22+16]
	184 Move X0, [X23+184]
	185 Move [X31+64], V0
	186 Move [X31+72], V1
	187 Compare X0, 0
	188 JumpIfEqual {275}
	189 Move X8, [X0]
	190 Move V0, [X31+64]
	191 Move V1, [X31+80]
	192 Add X2, X31, 288
	193 Move X1, X21
	194 Move X9, [X8+376]
	195 Move [X31+288], V0
	196 Move [X31+296], V1
	197 Move X3, [X8+384]
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Move X8, [X20+32]
	200 Move W1, W0
	201 Move X0, X19
	202 Move X8, [X8+192]
	203 Move X2, [X8+56]
	204 Call TextInputBaseField`1<Object>.set_keyboardType, X0, X1
	205 Move V0, [X22]
	206 Move V1, [X22+16]
	207 Move X0, [X23+192]
	208 Move [X31+32], V0
	209 Move [X31+40], V1
	210 Compare X0, 0
	211 JumpIfEqual {275}
	212 Move X8, [X0]
	213 Move V0, [X31+32]
	214 Move V1, [X31+48]
	215 Add X2, X31, 288
	216 Move X1, X21
	217 Move X9, [X8+376]
	218 Move [X31+288], V0
	219 Move [X31+296], V1
	220 Move X3, [X8+384]
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move X8, [X20+32]
	223 And W1, W0, 1
	224 Move X0, X19
	225 Move X8, [X8+192]
	226 Move X2, [X8+64]
	227 Call TextInputBaseField`1<Object>.set_autoCorrection, X0, X1
	228 Move V0, [X22]
	229 Move V1, [X22+16]
	230 Move X0, [X23+152]
	231 Move [X31], V0
	232 Move [X31+8], V1
	233 Compare X0, 0
	234 JumpIfEqual {275}
	235 Move X8, [X0]
	236 Move V0, [X31]
	237 Move V1, [X31+16]
	238 Add X2, X31, 288
	239 Move X1, X21
	240 Move X9, [X8+376]
	241 Move [X31+288], V0
	242 Move [X31+296], V1
	243 Move X3, [X8+384]
	244 NotImplemented "Instruction BLR not yet implemented."
	245 Move X1, X31
	246 Move X21, X0
	247 Call String.IsNullOrEmpty, X0
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfNotEqual {253}
	252 Move W1, 42
	253 Compare X21, 0
	254 JumpIfEqual {275}
	255 Move X0, X21
	256 Move W1, W31
	257 Move X2, X31
	258 Call String.get_Chars, X0, X1
	259 Move W1, W0
	260 Move X8, [X20+32]
	261 Move X0, X19
	262 Move X8, [X8+192]
	263 Move X2, [X8+72]
	264 Call TextInputBaseField`1<Object>.set_maskChar, X0, X1
	265 Move X20, [X31+368]
	266 Move X19, [X31+376]
	267 Move X22, [X31+352]
	268 Move X21, [X31+360]
	269 Move X24, [X31+336]
	270 Move X23, [X31+344]
	271 Move X29, [X31+320]
	272 Move X30, [X31+328]
	273 Add X31, X31, 384
	274 Return 
	275 Call 0x1C17F20
	276 Move X0, X19
	277 Call 0x1C181E0

Method: System.Void .ctor()

Disassembly:
	0x0273B704 LDP X20, X19, [X31 + 0xA0]
	0x0273B708 LDP X22, X21, [X31 + 0x90]
	0x0273B70C LDP X30, X23, [X31 + 0x80]
	0x0273B710 ADD X31, X31, 0xB0
	0x0273B714 RET
	0x0273B718 MOV X0, X19
	0x0273B71C BL 0x1C171E0
	0x0273B720 BL 0x1C16F20
	0x0273B724 STP X30, X23, [X31 - 0x30]!
	0x0273B728 STP X22, X21, [X31 + 0x10]
	0x0273B72C STP X20, X19, [X31 + 0x20]
	0x0273B730 ADRP X20, 0x1C9F000
	0x0273B734 LDRB W8, [X20 + 0x6C4]
	0x0273B738 MOV X19, X0
	0x0273B73C TBNZ X8, 0x0, 0x273B76C
	0x0273B740 ADRP X0, 0x19B9000
	0x0273B744 LDR X0, [X0 + 0x1B8]
	0x0273B748 BL 0x1C16CF4
	0x0273B74C ADRP X0, 0x19B9000
	0x0273B750 LDR X0, [X0 + 0x1C0]
	0x0273B754 BL 0x1C16CF4
	0x0273B758 ADRP X0, 0x19B9000
	0x0273B75C LDR X0, [X0 + 0x1D0]
	0x0273B760 BL 0x1C16CF4
	0x0273B764 MOVZ W8, 0x1
	0x0273B768 STRB W8, [X20 + 0x6C4]
	0x0273B76C CBZ X19, 0x273B88C
	0x0273B770 MOV X0, X19
	0x0273B774 MOV X1, X31
	0x0273B778 BL 0x322B8DC
	0x0273B77C MOV X1, X31
	0x0273B780 BL 0x32277A8
	0x0273B784 MOV X20, X31
	0x0273B788 TBNZ X0, 0x0, 0x273B878
	0x0273B78C MOVZ W1, 0x2C
	0x0273B790 MOV X0, X19
	0x0273B794 MOV W2, W31
	0x0273B798 MOV X3, X31
	0x0273B79C BL 0x3229AE8
	0x0273B7A0 CBZ X0, 0x273B88C
	0x0273B7A4 LDR W8, [X0 + 0x18]
	0x0273B7A8 MOV X19, X0
	0x0273B7AC CBZ W8, 0x273B874
	0x0273B7B0 ADRP X8, 0x19B9000
	0x0273B7B4 LDR X8, [X8 + 0x1D0]
	0x0273B7B8 LDR X0, [X8]
	0x0273B7BC BL 0x1C16F10
	0x0273B7C0 ADRP X8, 0x19B9000
	0x0273B7C4 LDR X8, [X8 + 0x1C0]
	0x0273B7C8 MOV X20, X0
	0x0273B7CC LDR X1, [X8]
	0x0273B7D0 BL 0x301B7C4
	0x0273B7D4 LDR W8, [X19 + 0x18]
	0x0273B7D8 CMP W8, 0x1
	0x0273B7DC B.LT 0x273B878
	0x0273B7E0 ADRP X23, 0x19B9000
	0x0273B7E4 LDR X23, [X23 + 0x1B8]
	0x0273B7E8 MOV X21, X31
	0x0273B7EC ADD X22, X19, 0x20
	0x0273B7F0 CMP W21, W8
	0x0273B7F4 B.CS 0x273B890
	0x0273B7F8 LDR X0, [X22, X21, LSL #3]
	0x0273B7FC CBZ X0, 0x273B88C
	0x0273B800 MOV X1, X31
	0x0273B804 BL 0x322B8DC
	0x0273B808 CBZ X20, 0x273B88C
	0x0273B80C LDR W10, [X20 + 0x1C]
	0x0273B810 LDR X8, [X20 + 0x10]
	0x0273B814 LDR X9, [X23]
	0x0273B818 ADD W10, W10, 0x1
	0x0273B81C STR W10, [X20 + 0x1C]
	0x0273B820 CBZ X8, 0x273B88C
	0x0273B824 LDRSW X10, [X20 + 0x18]
	0x0273B828 LDR W11, [X8 + 0x18]
	0x0273B82C MOV X1, X0
	0x0273B830 CMP W10, W11
	0x0273B834 B.CS 0x273B84C
	0x0273B838 ADD W9, W10, 0x1
	0x0273B83C ADD X8, X8, X10, 0x3, LSL
	0x0273B840 STR W9, [X20 + 0x18]
	0x0273B844 STR X1, [X8 + 0x20]
	0x0273B848 B 0x273B860
	0x0273B84C LDR X8, [X9 + 0x20]
	0x0273B850 MOV X0, X20
	0x0273B854 LDR X8, [X8 + 0xC0]
	0x0273B858 LDR X2, [X8 + 0x70]
	0x0273B85C BL 0x301BF90
	0x0273B860 LDR W8, [X19 + 0x18]
	0x0273B864 ADD X21, X21, 0x1
	0x0273B868 CMP W21, W8
	0x0273B86C B.LT 0x273B7F0
	0x0273B870 B 0x273B878
	0x0273B874 MOV X20, X31
	0x0273B878 MOV X0, X20
	0x0273B87C LDP X20, X19, [X31 + 0x20]
	0x0273B880 LDP X22, X21, [X31 + 0x10]
	0x0273B884 LDP X30, X23, [X31], #0x30
	0x0273B888 RET
	0x0273B88C BL 0x1C16F20
	0x0273B890 BL 0x1C16F28
	0x0273B894 STP X30, X21, [X31 - 0x20]!
	0x0273B898 STP X20, X19, [X31 + 0x10]
	0x0273B89C ADRP X20, 0x1C9F000
	0x0273B8A0 ADRP X21, 0x19E2000
	0x0273B8A4 LDRB W8, [X20 + 0x6C5]
	0x0273B8A8 LDR X21, [X21 + 0xB20]
	0x0273B8AC MOV X19, X0
	0x0273B8B0 TBNZ X8, 0x0, 0x273B8EC
	0x0273B8B4 ADRP X0, 0x19E2000
	0x0273B8B8 LDR X0, [X0 + 0xB28]
	0x0273B8BC BL 0x1C16CF4
	0x0273B8C0 ADRP X0, 0x19E2000
	0x0273B8C4 LDR X0, [X0 + 0xBF0]
	0x0273B8C8 BL 0x1C16CF4
	0x0273B8CC ADRP X0, 0x19E2000
	0x0273B8D0 LDR X0, [X0 + 0xB20]
	0x0273B8D4 BL 0x1C16CF4
	0x0273B8D8 ADRP X0, 0x19E2000
	0x0273B8DC LDR X0, [X0 + 0xC58]
	0x0273B8E0 BL 0x1C16CF4
	0x0273B8E4 MOVZ W8, 0x1
	0x0273B8E8 STRB W8, [X20 + 0x6C5]
	0x0273B8EC LDR X0, [X21]
	0x0273B8F0 BL 0x1C16F10
	0x0273B8F4 MOV X1, X31
	0x0273B8F8 MOV X20, X0
	0x0273B8FC BL 0x3E0A2F4
	0x0273B900 CBZ X20, 0x273B94C
	0x0273B904 ADRP X8, 0x19E2000
	0x0273B908 LDR X8, [X8 + 0xC58]
	0x0273B90C MOV X0, X19
	0x0273B910 MOV X1, X31
	0x0273B914 LDR X8, [X8]
	0x0273B918 STR X8, [X20 + 0x10]
	0x0273B91C STR X20, [X19 + 0x78]
	0x0273B920 BL 0x3CEA004
	0x0273B924 LDR X8, [X19 + 0x40]
	0x0273B928 CBZ X8, 0x273B94C
	0x0273B92C STR W31, [X8 + 0x40]
	0x0273B930 LDR X8, [X19 + 0x50]
	0x0273B934 CBZ X8, 0x273B94C
	0x0273B938 LDP X20, X19, [X31 + 0x10]
	0x0273B93C MOVZ W9, 0x1
	0x0273B940 STRB W9, [X8 + 0x40]
	0x0273B944 LDP X30, X21, [X31], #0x20
	0x0273B948 RET
	0x0273B94C BL 0x1C16F20
	0x0273B950 SUB X31, X31, 0xB0
	0x0273B954 STP X30, X23, [X31 + 0x80]
	0x0273B958 STP X22, X21, [X31 + 0x90]
	0x0273B95C STP X20, X19, [X31 + 0xA0]
	0x0273B960 LDP V1, V0, [X3]
	0x0273B964 STP V1, V0, [X31 + 0x40]
	0x0273B968 CBZ X0, 0x273BA90
	0x0273B96C LDP V0, V1, [X31 + 0x40]
	0x0273B970 MOV X20, X4
	0x0273B974 MOV X22, X3
	0x0273B978 ADD X3, X31, 0x20
	0x0273B97C MOV X4, X31
	0x0273B980 MOV X21, X2
	0x0273B984 MOV X19, X1
	0x0273B988 MOV X23, X0
	0x0273B98C STP V0, V1, [X31 + 0x20]
	0x0273B990 BL 0x3CEA08C
	0x0273B994 LDP V0, V1, [X22]
	0x0273B998 LDR X0, [X23 + 0x78]
	0x0273B99C STP V0, V1, [X31]
	0x0273B9A0 CBZ X0, 0x273BA90
	0x0273B9A4 LDR X8, [X0]
	0x0273B9A8 LDP V0, V1, [X31]
	0x0273B9AC ADD X2, X31, 0x60
	0x0273B9B0 MOV X1, X21
	0x0273B9B4 LDR X9, [X8 + 0x178]
	0x0273B9B8 STP V0, V1, [X31 + 0x60]
	0x0273B9BC LDR X3, [X8 + 0x180]
	0x0273B9C0 BLR X9
	0x0273B9C4 LDR X8, [X20 + 0x20]
	0x0273B9C8 MOV X21, X0
	0x0273B9CC LDR X8, [X8 + 0xC0]
	0x0273B9D0 LDR X1, [X8 + 0x8]
	0x0273B9D4 LDRB W8, [X1 + 0x135]
	0x0273B9D8 TBNZ X8, 0x0, 0x273B9E8
	0x0273B9DC MOV X0, X1
	0x0273B9E0 BL 0x1C5C684
	0x0273B9E4 MOV X1, X0
	0x0273B9E8 CBZ X19, 0x273BA90
	0x0273B9EC LDR X8, [X19]
	0x0273B9F0 LDRB W9, [X1 + 0x130]
	0x0273B9F4 LDRB W10, [X8 + 0x130]
	0x0273B9F8 CMP W10, W9
	0x0273B9FC B.CC 0x273BA88
	0x0273BA00 LDR X8, [X8 + 0xC8]
	0x0273BA04 ADD X8, X8, X9, 0x3, LSL
	0x0273BA08 LDUR X8, [X8 - 0x8]
	0x0273BA0C CMP X8, X1
	0x0273BA10 B.NE 0x273BA88
	0x0273BA14 LDR X8, [X20 + 0x20]
	0x0273BA18 LDR X8, [X8 + 0xC0]
	0x0273BA1C LDR X1, [X8 + 0x8]
	0x0273BA20 LDRB W8, [X1 + 0x135]
	0x0273BA24 TBNZ X8, 0x0, 0x273BA34
	0x0273BA28 MOV X0, X1
	0x0273BA2C BL 0x1C5C684
	0x0273BA30 MOV X1, X0
	0x0273BA34 LDR X8, [X19]
	0x0273BA38 LDRB W9, [X1 + 0x130]
	0x0273BA3C LDRB W10, [X8 + 0x130]
	0x0273BA40 CMP W10, W9
	0x0273BA44 B.CC 0x273BA88
	0x0273BA48 LDR X8, [X8 + 0xC8]
	0x0273BA4C ADD X8, X8, X9, 0x3, LSL
	0x0273BA50 LDUR X8, [X8 - 0x8]
	0x0273BA54 CMP X8, X1
	0x0273BA58 B.NE 0x273BA88
	0x0273BA5C LDR X8, [X20 + 0x20]
	0x0273BA60 MOV X0, X19
	0x0273BA64 MOV X1, X21
	0x0273BA68 LDR X8, [X8 + 0xC0]
	0x0273BA6C LDR X2, [X8 + 0x10]
	0x0273BA70 BL 0x28A5FE0
	0x0273BA74 LDP X20, X19, [X31 + 0xA0]
	0x0273BA78 LDP X22, X21, [X31 + 0x90]
	0x0273BA7C LDP X30, X23, [X31 + 0x80]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1CA0000
	007 Move X20, 0x19E3000
	008 Move W8, [X21+1723]
	009 Move X20, [X20+3080]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {77}
	015 Move X0, 0x19E3000
	016 Move X0, [X0+3184]
	017 Call 0x1C17CF4
	018 Move X0, 0x19BB000
	019 Move X0, [X0+368]
	020 Call 0x1C17CF4
	021 Move X0, 0x19B9000
	022 Move X0, [X0+2760]
	023 Call 0x1C17CF4
	024 Move X0, 0x19E3000
	025 Move X0, [X0+3192]
	026 Call 0x1C17CF4
	027 Move X0, 0x19E3000
	028 Move X0, [X0+3056]
	029 Call 0x1C17CF4
	030 Move X0, 0x19E3000
	031 Move X0, [X0+1880]
	032 Call 0x1C17CF4
	033 Move X0, 0x19E3000
	034 Move X0, [X0+3200]
	035 Call 0x1C17CF4
	036 Move X0, 0x19E3000
	037 Move X0, [X0+3208]
	038 Call 0x1C17CF4
	039 Move X0, 0x19E3000
	040 Move X0, [X0+3080]
	041 Call 0x1C17CF4
	042 Move X0, 0x19E3000
	043 Move X0, [X0+2848]
	044 Call 0x1C17CF4
	045 Move X0, 0x19E3000
	046 Move X0, [X0+3216]
	047 Call 0x1C17CF4
	048 Move X0, 0x19E3000
	049 Move X0, [X0+1888]
	050 Call 0x1C17CF4
	051 Move X0, 0x19E3000
	052 Move X0, [X0+1896]
	053 Call 0x1C17CF4
	054 Move X0, 0x19E3000
	055 Move X0, [X0+3224]
	056 Call 0x1C17CF4
	057 Move X0, 0x19E3000
	058 Move X0, [X0+3232]
	059 Call 0x1C17CF4
	060 Move X0, 0x19E3000
	061 Move X0, [X0+3240]
	062 Call 0x1C17CF4
	063 Move X0, 0x19E3000
	064 Move X0, [X0+3248]
	065 Call 0x1C17CF4
	066 Move X0, 0x19E3000
	067 Move X0, [X0+3256]
	068 Call 0x1C17CF4
	069 Move X0, 0x19E3000
	070 Move X0, [X0+3264]
	071 Call 0x1C17CF4
	072 Move X0, 0x19E3000
	073 Move X0, [X0+3272]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X21+1723], W8
	077 Move X0, [X20]
	078 NotImplemented "Instruction STRH not yet implemented."
	079 Call 0x1C17F10
	080 Move X1, X31
	081 Move X20, X0
	082 Call UxmlIntAttributeDescription..ctor, X0
	083 Compare X20, 0
	084 JumpIfEqual {244}
	085 Move X8, 0x19E3000
	086 Move X8, [X8+3216]
	087 Move X22, 0x19B9000
	088 Move W1, 1
	089 Move X8, [X8]
	090 Move X22, [X22+2760]
	091 Move [X20+16], X8
	092 Move X0, [X22]
	093 Call 0x1C17D6C
	094 Compare X0, 0
	095 JumpIfEqual {244}
	096 Move W8, [X0+24]
	097 Move X1, X0
	098 Compare W8, 0
	099 JumpIfEqual {245}
	100 Move X8, 0x19E3000
	101 Move X8, [X8+3248]
	102 Move X21, 0x19E3000
	103 Move X0, X20
	104 Move X2, X31
	105 Move X8, [X8]
	106 Move X21, [X21+1880]
	107 Move [X1+32], X8
	108 Call UxmlAttributeDescription.set_obsoleteNames, X0, X1
	109 Move TEMP, 0
	110 Not TEMP
	111 Move W8, TEMP
	112 Move [X20+64], W8
	113 Move [X19+136], X20
	114 Move X0, [X21]
	115 Call 0x1C17F10
	116 Move X1, X31
	117 Move X20, X0
	118 Call UxmlBoolAttributeDescription..ctor, X0
	119 Compare X20, 0
	120 JumpIfEqual {244}
	121 Move X8, 0x19E3000
	122 Move X8, [X8+3256]
	123 Move X9, 0x19E3000
	124 Move X8, [X8]
	125 Move X9, [X9+2848]
	126 Move [X20+16], X8
	127 Move [X19+144], X20
	128 Move X0, [X9]
	129 Call 0x1C17F10
	130 Move X1, X31
	131 Move X20, X0
	132 Call UxmlStringAttributeDescription..ctor, X0
	133 Compare X20, 0
	134 JumpIfEqual {244}
	135 Move X8, 0x19E3000
	136 Move X8, [X8+3224]
	137 Move W1, 1
	138 Move X8, [X8]
	139 Move [X20+16], X8
	140 Move X0, [X22]
	141 Call 0x1C17D6C
	142 Compare X0, 0
	143 JumpIfEqual {244}
	144 Move W8, [X0+24]
	145 Move X1, X0
	146 Compare W8, 0
	147 JumpIfEqual {245}
	148 Move X8, 0x19E3000
	149 Move X8, [X8+3264]
	150 Move X22, 0x19BB000
	151 Move X0, X20
	152 Move X2, X31
	153 Move X8, [X8]
	154 Move X22, [X22+368]
	155 Move [X1+32], X8
	156 Call UxmlAttributeDescription.set_obsoleteNames, X0, X1
	157 Move X0, [X22]
	158 Move W8, 42
	159 NotImplemented "Instruction STRH not yet implemented."
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Add X0, X31, 12
	165 Move X1, X31
	166 Call Char.ToString, X0
	167 Move [X20+64], X0
	168 Move [X19+152], X20
	169 Move X0, [X21]
	170 Call 0x1C17F10
	171 Move X1, X31
	172 Move X20, X0
	173 Call UxmlBoolAttributeDescription..ctor, X0
	174 Compare X20, 0
	175 JumpIfEqual {244}
	176 Move X8, 0x19E3000
	177 Move X8, [X8+1888]
	178 Move X8, [X8]
	179 Move [X20+16], X8
	180 Move [X19+160], X20
	181 Move X0, [X21]
	182 Call 0x1C17F10
	183 Move X1, X31
	184 Move X20, X0
	185 Call UxmlBoolAttributeDescription..ctor, X0
	186 Compare X20, 0
	187 JumpIfEqual {244}
	188 Move X8, 0x19E3000
	189 Move X8, [X8+1896]
	190 Move X8, [X8]
	191 Move [X20+16], X8
	192 Move [X19+168], X20
	193 Move X0, [X21]
	194 Call 0x1C17F10
	195 Move X1, X31
	196 Move X20, X0
	197 Call UxmlBoolAttributeDescription..ctor, X0
	198 Compare X20, 0
	199 JumpIfEqual {244}
	200 Move X8, 0x19E3000
	201 Move X8, [X8+3240]
	202 Move X9, 0x19E3000
	203 Move X8, [X8]
	204 Move X9, [X9+3208]
	205 Move [X20+16], X8
	206 Move [X19+176], X20
	207 Move X0, [X9]
	208 Move X20, 0x19E3000
	209 Move X20, [X20+3200]
	210 Call 0x1C17F10
	211 Move X1, [X20]
	212 Move X20, X0
	213 Call 0x2735B10, X0
	214 Compare X20, 0
	215 JumpIfEqual {244}
	216 Move X8, 0x19E3000
	217 Move X8, [X8+3232]
	218 Move X8, [X8]
	219 Move [X20+16], X8
	220 Move [X19+184], X20
	221 Move X0, [X21]
	222 Call 0x1C17F10
	223 Move X1, X31
	224 Move X20, X0
	225 Call UxmlBoolAttributeDescription..ctor, X0
	226 Compare X20, 0
	227 JumpIfEqual {244}
	228 Move X8, 0x19E3000
	229 Move X8, [X8+3272]
	230 Move X9, 0x19E3000
	231 Move X0, X19
	232 Move X8, [X8]
	233 Move X9, [X9+3184]
	234 Move [X20+16], X8
	235 Move [X19+192], X20
	236 Move X1, [X9]
	237 Call BaseFieldTraits`2<Object, Object>..ctor, X0
	238 Move X20, [X31+32]
	239 Move X19, [X31+40]
	240 Move X22, [X31+16]
	241 Move X21, [X31+24]
	242 Move X30, [X31+48]
	243 Return 
	244 Call 0x1C17F20
	245 Call 0x1C17F28

