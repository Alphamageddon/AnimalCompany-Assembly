Type: UnityEngine.UIElements.ScheduledItem

Method: System.Int64 get_startMs()

Disassembly:
	0x03DE2330 LDR X0, [X0 + 0x10]
	0x03DE2334 RET

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_startMs(System.Int64 value)

Disassembly:
	0x03DE2338 STR X30, [X31 - 0x30]!
	0x03DE233C STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Int64 get_delayMs()

Disassembly:
	0x03DE2340 STP X20, X19, [X31 + 0x20]
	0x03DE2344 ADRP X22, 0x606000

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_delayMs(System.Int64 value)

Disassembly:
	0x03DE2348 ADRP X21, 0x311000
	0x03DE234C LDRB W8, [X22 + 0x1EF]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Int64 get_intervalMs()

Disassembly:
	0x03DE2350 LDR X21, [X21 + 0x598]
	0x03DE2354 MOV X20, X1

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_intervalMs(System.Int64 value)

Disassembly:
	0x03DE2358 MOV X19, X0
	0x03DE235C TBNZ X8, 0x0, 0x3DE2374

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Int64 get_endTimeMs()

Disassembly:
	0x03DE2360 ADRP X0, 0x311000
	0x03DE2364 LDR X0, [X0 + 0x598]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03DE2368 BL 0x1C16CF4
	0x03DE236C MOVZ W8, 0x1
	0x03DE2370 STRB W8, [X22 + 0x1EF]
	0x03DE2374 LDR X0, [X21]
	0x03DE2378 LDR X21, [X19 + 0x10]
	0x03DE237C LDR W8, [X0 + 0xE0]
	0x03DE2380 CBNZ W8, 0x3DE2388
	0x03DE2384 BL 0x1C16DFC
	0x03DE2388 MOV X0, X21
	0x03DE238C MOV X1, X20
	0x03DE2390 MOV X2, X31
	0x03DE2394 BL 0x3C3883C
	0x03DE2398 TBNZ X0, 0x0, 0x3DE23A4
	0x03DE239C STP X31, X31, [X19]
	0x03DE23A0 STP X20, X31, [X19 + 0x10]
	0x03DE23A4 LDP X20, X19, [X31 + 0x20]
	0x03DE23A8 LDP X22, X21, [X31 + 0x10]
	0x03DE23AC LDR X30, [X31], #0x30
	0x03DE23B0 RET
	0x03DE23B4 STR X30, [X31 - 0x30]!
	0x03DE23B8 STP X22, X21, [X31 + 0x10]
	0x03DE23BC STP X20, X19, [X31 + 0x20]
	0x03DE23C0 ADRP X22, 0x606000
	0x03DE23C4 ADRP X21, 0x311000
	0x03DE23C8 LDRB W8, [X22 + 0x1F0]
	0x03DE23CC LDR X21, [X21 + 0x598]
	0x03DE23D0 MOV X19, X1
	0x03DE23D4 MOV X20, X0
	0x03DE23D8 TBNZ X8, 0x0, 0x3DE23F0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x607000
	006 Move X20, 0x388000
	007 Move W8, [X21+481]
	008 Move X20, [X20+1464]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x388000
	015 Move X0, [X0+1464]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+481], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Object..ctor, X0
	022 Move X0, X19
	023 Call ScheduledItem.ResetStartTime, X0
	024 Move X0, [X20]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Move X8, [X0+184]
	031 Move X8, [X8]
	032 Move [X19+16], X8
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return 

Method: System.Void ResetStartTime()

Disassembly:
	0x03DE23DC ADRP X0, 0x311000
	0x03DE23E0 LDR X0, [X0 + 0x598]
	0x03DE23E4 BL 0x1C16CF4
	0x03DE23E8 MOVZ W8, 0x1
	0x03DE23EC STRB W8, [X22 + 0x1F0]
	0x03DE23F0 LDR X0, [X21]
	0x03DE23F4 LDR X21, [X20 + 0x18]
	0x03DE23F8 LDR W8, [X0 + 0xE0]
	0x03DE23FC CBNZ W8, 0x3DE2404
	0x03DE2400 BL 0x1C16DFC
	0x03DE2404 MOV X0, X21
	0x03DE2408 MOV X1, X19
	0x03DE240C MOV X2, X31
	0x03DE2410 BL 0x3C3883C
	0x03DE2414 TBNZ X0, 0x0, 0x3DE2420
	0x03DE2418 STP X31, X31, [X20]
	0x03DE241C STP X31, X19, [X20 + 0x10]
	0x03DE2420 LDP X20, X19, [X31 + 0x20]
	0x03DE2424 LDP X22, X21, [X31 + 0x10]
	0x03DE2428 LDR X30, [X31], #0x30
	0x03DE242C RET
	0x03DE2430 SUB X31, X31, 0x30
	0x03DE2434 STP X30, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x607000
	006 Move X21, 0x33C000
	007 Move W8, [X20+482]
	008 Move X21, [X21+3336]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x33C000
	015 Move X0, [X0+3336]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+482], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call Panel.TimeSinceStartupMs
	026 Move [X19+24], X0
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Void PerformTimerUpdate(UnityEngine.UIElements.TimerState state)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void OnItemUnscheduled()

Disassembly:
	0x03DE2438 MOV X1, X0

ISIL:
	001 Return 

Method: System.Boolean ShouldUnschedule()

Disassembly:
	0x03DE243C MOVI V0.2D, 0x0
	0x03DE2440 ADD X0, X31, 0x0
	0x03DE2444 MOV X19, X8
	0x03DE2448 STP V0, V0, [X31]
	0x03DE244C BL 0x3DE2230
	0x03DE2450 LDP V1, V0, [X31]
	0x03DE2454 STP V1, V0, [X19]
	0x03DE2458 LDP X30, X19, [X31 + 0x20]

ISIL:
	001 Move X8, [X0+16]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X2, [X8+24]
	005 Move X0, [X8+64]
	006 Move X1, [X8+40]
	007 CallNoReturn X2
	008 Move W0, W31
	009 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03DE245C ADD X31, X31, 0x30
	0x03DE2460 RET
	0x03DE2464 SUB X31, X31, 0x30
	0x03DE2468 STP X30, X19, [X31 + 0x20]
	0x03DE246C MOV X1, X0
	0x03DE2470 MOVI V0.2D, 0x0
	0x03DE2474 ADD X0, X31, 0x0
	0x03DE2478 MOV X19, X8
	0x03DE247C STP V0, V0, [X31]
	0x03DE2480 BL 0x3DE2338
	0x03DE2484 LDP V1, V0, [X31]
	0x03DE2488 STP V1, V0, [X19]
	0x03DE248C LDP X30, X19, [X31 + 0x20]
	0x03DE2490 ADD X31, X31, 0x30
	0x03DE2494 RET
	0x03DE2498 SUB X31, X31, 0x30
	0x03DE249C STP X30, X19, [X31 + 0x20]
	0x03DE24A0 MOV X1, X0
	0x03DE24A4 MOVI V0.2D, 0x0
	0x03DE24A8 ADD X0, X31, 0x0
	0x03DE24AC MOV X19, X8
	0x03DE24B0 STP V0, V0, [X31]
	0x03DE24B4 BL 0x3DE22B4
	0x03DE24B8 LDP V1, V0, [X31]
	0x03DE24BC STP V1, V0, [X19]
	0x03DE24C0 LDP X30, X19, [X31 + 0x20]
	0x03DE24C4 ADD X31, X31, 0x30
	0x03DE24C8 RET
	0x03DE24CC SUB X31, X31, 0x30
	0x03DE24D0 STP X30, X19, [X31 + 0x20]
	0x03DE24D4 MOV X1, X0
	0x03DE24D8 MOVI V0.2D, 0x0
	0x03DE24DC ADD X0, X31, 0x0
	0x03DE24E0 MOV X19, X8
	0x03DE24E4 STP V0, V0, [X31]
	0x03DE24E8 BL 0x3DE23B4
	0x03DE24EC LDP V1, V0, [X31]
	0x03DE24F0 STP V1, V0, [X19]
	0x03DE24F4 LDP X30, X19, [X31 + 0x20]
	0x03DE24F8 ADD X31, X31, 0x30
	0x03DE24FC RET
	0x03DE2500 SUB X31, X31, 0x70
	0x03DE2504 STR X30, [X31 + 0x40]
	0x03DE2508 STP X22, X21, [X31 + 0x50]
	0x03DE250C STP X20, X19, [X31 + 0x60]
	0x03DE2510 ADRP X21, 0x606000
	0x03DE2514 LDRB W9, [X21 + 0x1F1]
	0x03DE2518 MOV X20, X0
	0x03DE251C MOV X19, X8
	0x03DE2520 TBNZ X9, 0x0, 0x3DE2568
	0x03DE2524 ADRP X0, 0x311000
	0x03DE2528 LDR X0, [X0 + 0x598]
	0x03DE252C BL 0x1C16CF4
	0x03DE2530 ADRP X0, 0x313000
	0x03DE2534 LDR X0, [X0 + 0x130]
	0x03DE2538 BL 0x1C16CF4
	0x03DE253C ADRP X0, 0x383000
	0x03DE2540 LDR X0, [X0 + 0xB68]
	0x03DE2544 BL 0x1C16CF4
	0x03DE2548 ADRP X0, 0x33B000
	0x03DE254C LDR X0, [X0 + 0x250]
	0x03DE2550 BL 0x1C16CF4
	0x03DE2554 ADRP X0, 0x383000
	0x03DE2558 LDR X0, [X0 + 0xB80]
	0x03DE255C BL 0x1C16CF4
	0x03DE2560 MOVZ W8, 0x1
	0x03DE2564 STRB W8, [X21 + 0x1F1]
	0x03DE2568 ADRP X22, 0x311000
	0x03DE256C LDR X22, [X22 + 0x598]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x607000
	009 Move X21, 0x388000
	010 Move W8, [X19+483]
	011 Move X21, [X21+1472]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x31B000
	017 Move X0, [X0+2368]
	018 Call 0x1C17CF4
	019 Move X0, 0x388000
	020 Move X0, [X0+1464]
	021 Call 0x1C17CF4
	022 Move X0, 0x388000
	023 Move X0, [X0+1480]
	024 Call 0x1C17CF4
	025 Move X0, 0x388000
	026 Move X0, [X0+1488]
	027 Call 0x1C17CF4
	028 Move X0, 0x388000
	029 Move X0, [X0+1472]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X19+483], W8
	033 Move X0, [X21]
	034 Move X24, 0x31B000
	035 Move X20, 0x388000
	036 Move X22, 0x388000
	037 Move X23, 0x388000
	038 Move W8, [X0+224]
	039 Move X24, [X24+2368]
	040 Move X20, [X20+1480]
	041 Move X22, [X22+1464]
	042 Move X23, [X23+1488]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X21]
	047 Move X8, [X0+184]
	048 Move X0, [X24]
	049 Move X19, [X8]
	050 Call 0x1C17F10
	051 Move X2, [X20]
	052 Move X1, X19
	053 Move X3, X31
	054 Move X20, X0
	055 Call Func`1<Boolean>..ctor, X0, X1, X2
	056 Move X8, [X22]
	057 Move X8, [X8+184]
	058 Move [X8], X20
	059 Move X8, [X21]
	060 Move X0, [X24]
	061 Move X8, [X8+184]
	062 Move X19, [X8]
	063 Call 0x1C17F10
	064 Move X2, [X23]
	065 Move X1, X19
	066 Move X3, X31
	067 Move X20, X0
	068 Call Func`1<Boolean>..ctor, X0, X1, X2
	069 Move X8, [X22]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X8, [X8+184]
	075 Move [X8+8], X20
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X30, [X31+64]
	079 Return 

