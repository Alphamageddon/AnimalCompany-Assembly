Type: UnityEngine.UIElements.Hash128Field

Method: System.Void .ctor()

Disassembly:
	0x03D13220 MOV X19, X0
	0x03D13224 TBNZ X8, 0x0, 0x3D1323C
	0x03D13228 ADRP X0, 0x450000

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W2, TEMP
	004 Move X1, X31

Method: System.Void .ctor(System.String label, System.Int32 maxLength = -1)

Disassembly:
	0x03D1322C LDR X0, [X0 + 0xD08]
	0x03D13230 BL 0x1C16CF4
	0x03D13234 MOVZ W8, 0x1
	0x03D13238 STRB W8, [X20 + 0x8D8]
	0x03D1323C LDR X1, [X21]
	0x03D13240 MOV X0, X19
	0x03D13244 LDP X20, X19, [X31 + 0x10]
	0x03D13248 LDP X30, X21, [X31], #0x20
	0x03D1324C B 0x2736468
	0x03D13250 SUB X31, X31, 0xB0
	0x03D13254 STP X30, X23, [X31 + 0x80]
	0x03D13258 STP X22, X21, [X31 + 0x90]
	0x03D1325C STP X20, X19, [X31 + 0xA0]
	0x03D13260 ADRP X23, 0x6D4000
	0x03D13264 LDRB W8, [X23 + 0x8D9]
	0x03D13268 MOV X20, X3
	0x03D1326C MOV X19, X2
	0x03D13270 MOV X22, X1
	0x03D13274 MOV X21, X0
	0x03D13278 TBNZ X8, 0x0, 0x3D13290
	0x03D1327C ADRP X0, 0x450000
	0x03D13280 LDR X0, [X0 + 0xCD8]
	0x03D13284 BL 0x1C16CF4
	0x03D13288 MOVZ W8, 0x1
	0x03D1328C STRB W8, [X23 + 0x8D9]
	0x03D13290 LDP V1, V0, [X20]
	0x03D13294 ADD X3, X31, 0x40
	0x03D13298 MOV X0, X21
	0x03D1329C MOV X1, X22
	0x03D132A0 MOV X2, X19
	0x03D132A4 MOV X4, X31
	0x03D132A8 STP V1, V0, [X31 + 0x40]
	0x03D132AC BL 0x3DF81FC
	0x03D132B0 CBZ X22, 0x3D132F0
	0x03D132B4 ADRP X8, 0x450000
	0x03D132B8 LDR X8, [X8 + 0xCD8]
	0x03D132BC LDR X9, [X22]
	0x03D132C0 LDR X8, [X8]
	0x03D132C4 LDRB W11, [X9 + 0x130]
	0x03D132C8 LDRB W10, [X8 + 0x130]
	0x03D132CC CMP W11, W10
	0x03D132D0 B.CS 0x3D132DC
	0x03D132D4 MOV X22, X31
	0x03D132D8 B 0x3D132F0
	0x03D132DC LDR X9, [X9 + 0xC8]
	0x03D132E0 ADD X9, X9, X10, 0x3, LSL
	0x03D132E4 LDUR X9, [X9 - 0x8]
	0x03D132E8 CMP X9, X8
	0x03D132EC CSEL X22, X22, X31, EQ
	0x03D132F0 LDP V0, V1, [X20]
	0x03D132F4 LDR X0, [X21 + 0x70]
	0x03D132F8 STP V0, V1, [X31 + 0x20]
	0x03D132FC CBZ X0, 0x3D133A0
	0x03D13300 LDR X8, [X0]
	0x03D13304 LDP V0, V1, [X31 + 0x20]
	0x03D13308 ADD X2, X31, 0x60
	0x03D1330C MOV X1, X19
	0x03D13310 LDR X9, [X8 + 0x178]
	0x03D13314 STP V0, V1, [X31 + 0x60]
	0x03D13318 LDR X3, [X8 + 0x180]
	0x03D1331C BLR X9
	0x03D13320 CBZ X22, 0x3D133A0
	0x03D13324 MOV X1, X0
	0x03D13328 LDR X0, [X22 + 0x3E0]
	0x03D1332C CBZ X0, 0x3D133A0
	0x03D13330 LDR X8, [X0]
	0x03D13334 LDR X9, [X8 + 0xB28]
	0x03D13338 LDR X2, [X8 + 0xB30]
	0x03D1333C BLR X9
	0x03D13340 LDP V0, V1, [X20]
	0x03D13344 LDR X0, [X21 + 0x78]
	0x03D13348 STP V0, V1, [X31]
	0x03D1334C CBZ X0, 0x3D133A0
	0x03D13350 LDR X8, [X0]
	0x03D13354 LDP V0, V1, [X31]
	0x03D13358 ADD X2, X31, 0x60
	0x03D1335C MOV X1, X19
	0x03D13360 LDR X9, [X8 + 0x178]
	0x03D13364 STP V0, V1, [X31 + 0x60]
	0x03D13368 LDR X3, [X8 + 0x180]
	0x03D1336C BLR X9
	0x03D13370 LDR W8, [X22 + 0x3C8]
	0x03D13374 CMP W8, W0
	0x03D13378 B.EQ 0x3D1338C
	0x03D1337C MOV W1, W0
	0x03D13380 STR W0, [X22 + 0x3C8]
	0x03D13384 MOV X0, X22
	0x03D13388 BL 0x3D12D7C
	0x03D1338C LDP X20, X19, [X31 + 0xA0]
	0x03D13390 LDP X22, X21, [X31 + 0x90]
	0x03D13394 LDP X30, X23, [X31 + 0x80]
	0x03D13398 ADD X31, X31, 0xB0
	0x03D1339C RET
	0x03D133A0 BL 0x1C16F20
	0x03D133A4 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x6D5000
	010 Move X22, 0x451000
	011 Move X24, 0x451000
	012 Move W8, [X23+2247]
	013 Move X22, [X22+3096]
	014 Move X24, [X24+3104]
	015 Move W20, W2
	016 Move X21, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {42}
	022 Move X0, 0x451000
	023 Move X0, [X0+3112]
	024 Call 0x1C17CF4
	025 Move X0, 0x451000
	026 Move X0, [X0+3120]
	027 Call 0x1C17CF4
	028 Move X0, 0x451000
	029 Move X0, [X0+3128]
	030 Call 0x1C17CF4
	031 Move X0, 0x451000
	032 Move X0, [X0+3096]
	033 Call 0x1C17CF4
	034 Move X0, 0x451000
	035 Move X0, [X0+3136]
	036 Call 0x1C17CF4
	037 Move X0, 0x451000
	038 Move X0, [X0+3104]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+2247], W8
	042 Move X0, [X22]
	043 Move X25, 0x451000
	044 Move X23, 0x451000
	045 Move X25, [X25+3136]
	046 Move X23, [X23+3128]
	047 Call 0x1C17F10
	048 Move X22, X0
	049 Call Hash128Input..ctor, X0
	050 Move X0, [X24]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X5, [X25]
	056 Move X0, X19
	057 Move X1, X21
	058 Move W2, W20
	059 Move W3, W31
	060 Move X4, X22
	061 Call TextInputBaseField`1<Hash128>..ctor, X0, X1, X2, X3, X4
	062 Move X8, [X19]
	063 Move W9, 1
	064 Move [X19+1120], W9
	065 Move X0, X19
	066 Move X9, [X8+2184]
	067 Move X3, [X8+2192]
	068 Move X1, X31
	069 Move X2, X31
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X0, [X23]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1C17DFC
	076 Move X0, [X23]
	077 Move X8, [X0+184]
	078 Move X0, X19
	079 Move X2, X31
	080 Move X1, [X8]
	081 Call VisualElement.AddToClassList, X0, X1
	082 Move X0, [X19+1032]
	083 Compare X0, 0
	084 JumpIfEqual {111}
	085 Move X8, [X23]
	086 Move X20, 0x451000
	087 Move X2, X31
	088 Move X8, [X8+184]
	089 Move X1, [X8+8]
	090 Move X20, [X20+3120]
	091 Call VisualElement.AddToClassList, X0, X1
	092 Move X1, [X20]
	093 Move X0, X19
	094 Call BaseField`1<Hash128>.get_visualInput, X0
	095 Compare X0, 0
	096 JumpIfEqual {111}
	097 Move X8, [X23]
	098 Move X20, [X31+48]
	099 Move X19, [X31+56]
	100 Move X22, [X31+32]
	101 Move X21, [X31+40]
	102 Move X24, [X31+16]
	103 Move X23, [X31+24]
	104 Move X8, [X8+184]
	105 Move X2, X31
	106 Move X1, [X8+16]
	107 Move X30, [X31+64]
	108 Move X25, [X31+72]
	109 Call VisualElement.AddToClassList, X0, X1
	110 Return 
	111 Call 0x1C17F20

Method: UnityEngine.Hash128 get_value()

Disassembly:
	0x03D134F8 BL 0x1C16DFC
	0x03D134FC MOV X0, X21
	0x03D13500 MOV X1, X19
	0x03D13504 MOV X2, X31
	0x03D13508 BL 0x3C3883C
	0x03D1350C TBZ X0, 0x0, 0x3D13528
	0x03D13510 LDRB W8, [X20 + 0x408]
	0x03D13514 CBZ W8, 0x3D13528
	0x03D13518 LDP X20, X19, [X31 + 0x20]
	0x03D1351C LDP X22, X21, [X31 + 0x10]
	0x03D13520 LDR X30, [X31], #0x30
	0x03D13524 RET
	0x03D13528 LDR X0, [X22]
	0x03D1352C ADRP X22, 0x450000
	0x03D13530 ADD X21, X20, 0x3D0
	0x03D13534 LDR W8, [X0 + 0xE0]
	0x03D13538 LDR X22, [X22 + 0xD30]
	0x03D1353C CBNZ W8, 0x3D13544

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6D5000
	006 Move X21, 0x451000
	007 Move W8, [X20+2248]
	008 Move X21, [X21+3168]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x451000
	015 Move X0, [X0+3168]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2248], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call BaseField`1<Hash128>.get_value, X0
	026 Return X0

Method: System.Void set_value(UnityEngine.Hash128 value)

Disassembly:
	0x03D13540 BL 0x1C16DFC
	0x03D13544 MOV X0, X19
	0x03D13548 MOV X1, X31
	0x03D1354C MOV X2, X31
	0x03D13550 BL 0x3C354F8
	0x03D13554 AND W8, W0, 0x1
	0x03D13558 STRB W8, [X20 + 0x408]
	0x03D1355C LDR X5, [X22]
	0x03D13560 ADD X3, X20, 0x3D8
	0x03D13564 ADD X4, X20, 0x3E0
	0x03D13568 MOV X0, X20
	0x03D1356C MOV X1, X19
	0x03D13570 MOV X2, X21
	0x03D13574 LDP X20, X19, [X31 + 0x20]
	0x03D13578 LDP X22, X21, [X31 + 0x10]
	0x03D1357C LDR X30, [X31], #0x30
	0x03D13580 B 0x3D14B8C
	0x03D13584 LDR X0, [X0 + 0x3D8]
	0x03D13588 RET
	0x03D1358C STR X30, [X31 - 0x30]!
	0x03D13590 STP X22, X21, [X31 + 0x10]
	0x03D13594 STP X20, X19, [X31 + 0x20]
	0x03D13598 ADRP X21, 0x6D4000
	0x03D1359C ADRP X22, 0x3E0000
	0x03D135A0 LDRB W8, [X21 + 0x8DC]
	0x03D135A4 LDR X22, [X22 + 0x598]
	0x03D135A8 MOV X19, X1
	0x03D135AC MOV X20, X0
	0x03D135B0 TBNZ X8, 0x0, 0x3D135D4
	0x03D135B4 ADRP X0, 0x450000
	0x03D135B8 LDR X0, [X0 + 0xD38]
	0x03D135BC BL 0x1C16CF4
	0x03D135C0 ADRP X0, 0x3E0000
	0x03D135C4 LDR X0, [X0 + 0x598]
	0x03D135C8 BL 0x1C16CF4
	0x03D135CC MOVZ W8, 0x1
	0x03D135D0 STRB W8, [X21 + 0x8DC]
	0x03D135D4 LDR X0, [X22]
	0x03D135D8 LDR X21, [X20 + 0x3D8]
	0x03D135DC LDR W8, [X0 + 0xE0]
	0x03D135E0 CBNZ W8, 0x3D135E8
	0x03D135E4 BL 0x1C16DFC
	0x03D135E8 MOV X0, X21
	0x03D135EC MOV X1, X19
	0x03D135F0 MOV X2, X31
	0x03D135F4 BL 0x3C3883C
	0x03D135F8 TBZ X0, 0x0, 0x3D13614
	0x03D135FC LDRB W8, [X20 + 0x408]
	0x03D13600 CBZ W8, 0x3D13614
	0x03D13604 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x6D5000
	009 Move X23, 0x451000
	010 Move W8, [X22+2249]
	011 Move X23, [X23+3176]
	012 Move X20, X2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x451000
	020 Move X0, [X0+3184]
	021 Call 0x1C17CF4
	022 Move X0, 0x451000
	023 Move X0, [X0+3176]
	024 Call 0x1C17CF4
	025 Move X0, 0x451000
	026 Move X0, [X0+3192]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2249], W8
	030 Move X3, [X23]
	031 Move X0, X19
	032 Move X1, X21
	033 Move X2, X20
	034 Call BaseField`1<Hash128>.set_value, X0, X1
	035 Move W8, [X19+1120]
	036 Compare W8, 0
	037 JumpIfEqual {54}
	038 Move X8, 0x451000
	039 Move X8, [X8+3184]
	040 Move X20, 0x451000
	041 Move X0, X19
	042 Move X1, [X8]
	043 Move X20, [X20+3192]
	044 Call BaseField`1<Hash128>.get_rawValue, X0
	045 Move [X31], X0
	046 Move [X31+8], X1
	047 Add X0, X31, 0
	048 Move X1, X31
	049 Call Hash128.ToString, X0
	050 Move X2, [X20]
	051 Move X1, X0
	052 Move X0, X19
	053 Call TextInputBaseField`1<Hash128>.set_text, X0, X1
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X30, [X31+16]
	059 Move X23, [X31+24]
	060 Add X31, X31, 64
	061 Return 

Method: System.Void UpdateValueFromText()

Disassembly:
	0x03D13608 LDP X22, X21, [X31 + 0x10]
	0x03D1360C LDR X30, [X31], #0x30
	0x03D13610 RET
	0x03D13614 LDR X0, [X22]
	0x03D13618 ADRP X22, 0x450000
	0x03D1361C ADD X21, X20, 0x3D8
	0x03D13620 LDR W8, [X0 + 0xE0]
	0x03D13624 LDR X22, [X22 + 0xD38]
	0x03D13628 CBNZ W8, 0x3D13630
	0x03D1362C BL 0x1C16DFC
	0x03D13630 MOV X0, X19
	0x03D13634 MOV X1, X31
	0x03D13638 MOV X2, X31
	0x03D1363C BL 0x3C354F8
	0x03D13640 AND W8, W0, 0x1
	0x03D13644 STRB W8, [X20 + 0x408]
	0x03D13648 LDR X5, [X22]
	0x03D1364C ADD X3, X20, 0x3D0
	0x03D13650 ADD X4, X20, 0x3E0
	0x03D13654 MOV X0, X20
	0x03D13658 MOV X1, X19
	0x03D1365C MOV X2, X21
	0x03D13660 LDP X20, X19, [X31 + 0x20]
	0x03D13664 LDP X22, X21, [X31 + 0x10]
	0x03D13668 LDR X30, [X31], #0x30
	0x03D1366C B 0x3D14B8C
	0x03D13670 LDR X0, [X0 + 0x3E0]
	0x03D13674 RET
	0x03D13678 STR X30, [X31 - 0x30]!
	0x03D1367C STP X22, X21, [X31 + 0x10]
	0x03D13680 STP X20, X19, [X31 + 0x20]
	0x03D13684 ADRP X21, 0x6D4000
	0x03D13688 ADRP X22, 0x3E0000
	0x03D1368C LDRB W8, [X21 + 0x8DD]
	0x03D13690 LDR X22, [X22 + 0x598]
	0x03D13694 MOV X19, X1
	0x03D13698 MOV X20, X0
	0x03D1369C TBNZ X8, 0x0, 0x3D136C0
	0x03D136A0 ADRP X0, 0x450000
	0x03D136A4 LDR X0, [X0 + 0xD40]
	0x03D136A8 BL 0x1C16CF4
	0x03D136AC ADRP X0, 0x3E0000
	0x03D136B0 LDR X0, [X0 + 0x598]
	0x03D136B4 BL 0x1C16CF4
	0x03D136B8 MOVZ W8, 0x1
	0x03D136BC STRB W8, [X21 + 0x8DD]
	0x03D136C0 LDR X0, [X22]
	0x03D136C4 LDR X21, [X20 + 0x3E0]
	0x03D136C8 LDR W8, [X0 + 0xE0]
	0x03D136CC CBNZ W8, 0x3D136D4
	0x03D136D0 BL 0x1C16DFC
	0x03D136D4 MOV X0, X21
	0x03D136D8 MOV X1, X19
	0x03D136DC MOV X2, X31
	0x03D136E0 BL 0x3C3883C
	0x03D136E4 TBZ X0, 0x0, 0x3D13700
	0x03D136E8 LDRB W8, [X20 + 0x408]
	0x03D136EC CBZ W8, 0x3D13700
	0x03D136F0 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6D5000
	006 Move X20, 0x451000
	007 Move W8, [X21+2250]
	008 Move X20, [X20+3200]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x451000
	015 Move X0, [X0+3200]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2250], W8
	019 Move [X19+1120], W31
	020 Move X1, [X20]
	021 Move X0, X19
	022 Call TextInputBaseField`1<Hash128>.get_text, X0
	023 Move X1, X0
	024 Move X8, [X19]
	025 Move X9, [X8+2216]
	026 Move X2, [X8+2224]
	027 Move X0, X19
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X8, [X19]
	030 Move X2, X0
	031 Move X4, X1
	032 Move X9, [X8+2040]
	033 Move X3, [X8+2048]
	034 Move X0, X19
	035 Move X1, X2
	036 Move X2, X4
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move W8, 1
	039 Move [X19+1120], W8
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Call 0x3EB2AD0
	047 Move X20, [X0]
	048 Call 0x3EB2AE0
	049 Move W8, 1
	050 Move [X19+1120], W8
	051 Compare X20, 0
	052 JumpIfEqual {40}
	053 Move X0, X20
	054 Call 0x1C17F18
	055 Move W8, 1
	056 Move [X19+1120], W8
	057 Move W8, 1
	058 Move [X19+1120], W8
	059 Compare X20, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1D2D690
	062 Move X0, X20
	063 Call 0x1C17F18
	064 Call 0x1991590

Method: System.Void UpdateTextFromValue()

Disassembly:
	0x03D136F4 LDP X22, X21, [X31 + 0x10]
	0x03D136F8 LDR X30, [X31], #0x30
	0x03D136FC RET
	0x03D13700 LDR X0, [X22]
	0x03D13704 ADRP X22, 0x450000
	0x03D13708 ADD X21, X20, 0x3E0
	0x03D1370C LDR W8, [X0 + 0xE0]
	0x03D13710 LDR X22, [X22 + 0xD40]
	0x03D13714 CBNZ W8, 0x3D1371C
	0x03D13718 BL 0x1C16DFC
	0x03D1371C MOV X0, X19
	0x03D13720 MOV X1, X31
	0x03D13724 MOV X2, X31
	0x03D13728 BL 0x3C354F8
	0x03D1372C AND W8, W0, 0x1
	0x03D13730 STRB W8, [X20 + 0x408]
	0x03D13734 LDR X5, [X22]
	0x03D13738 ADD X3, X20, 0x3D0
	0x03D1373C ADD X4, X20, 0x3D8
	0x03D13740 MOV X0, X20
	0x03D13744 MOV X1, X19
	0x03D13748 MOV X2, X21
	0x03D1374C LDP X20, X19, [X31 + 0x20]
	0x03D13750 LDP X22, X21, [X31 + 0x10]
	0x03D13754 LDR X30, [X31], #0x30
	0x03D13758 B 0x3D14B8C
	0x03D1375C B 0x3D13760
	0x03D13760 STP D13, D12, [X31 - 0x60]!
	0x03D13764 STP D11, D10, [X31 + 0x10]
	0x03D13768 STP D9, D8, [X31 + 0x20]
	0x03D1376C STP X30, X23, [X31 + 0x30]
	0x03D13770 STP X22, X21, [X31 + 0x40]
	0x03D13774 STP X20, X19, [X31 + 0x50]
	0x03D13778 ADRP X20, 0x6D4000
	0x03D1377C LDRB W8, [X20 + 0x8E4]
	0x03D13780 MOV X19, X0
	0x03D13784 TBNZ X8, 0x0, 0x3D1379C
	0x03D13788 ADRP X0, 0x3E0000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6D5000
	007 Move X22, 0x451000
	008 Move X20, 0x451000
	009 Move W8, [X21+2251]
	010 Move X22, [X22+3184]
	011 Move X20, [X20+3192]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x451000
	018 Move X0, [X0+3184]
	019 Call 0x1C17CF4
	020 Move X0, 0x451000
	021 Move X0, [X0+3192]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2251], W8
	025 Move X1, [X22]
	026 Move X0, X19
	027 Call BaseField`1<Hash128>.get_rawValue, X0
	028 Move X8, [X19]
	029 Move X2, X0
	030 Move X4, X1
	031 Move X0, X19
	032 Move X9, [X8+2200]
	033 Move X3, [X8+2208]
	034 Move X1, X2
	035 Move X2, X4
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X2, [X20]
	038 Move X1, X0
	039 Move X0, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Call TextInputBaseField`1<Hash128>.set_text, X0, X1
	046 Return 

Method: System.Void SetValueWithoutNotify(UnityEngine.Hash128 newValue)

Disassembly:
	0x03D1378C LDR X0, [X0 + 0x598]
	0x03D13790 BL 0x1C16CF4
	0x03D13794 MOVZ W8, 0x1
	0x03D13798 STRB W8, [X20 + 0x8E4]
	0x03D1379C ADRP X23, 0x3E0000
	0x03D137A0 LDR X23, [X23 + 0x598]
	0x03D137A4 MOV X0, X31
	0x03D137A8 BL 0x3C0B398
	0x03D137AC ADRP X21, 0x6C6000
	0x03D137B0 LDRB W8, [X21 + 0x78F]
	0x03D137B4 MOV V8.16B, V0.16B
	0x03D137B8 MOV V10.16B, V1.16B
	0x03D137BC MOV V9.16B, V2.16B
	0x03D137C0 MOV V11.16B, V3.16B
	0x03D137C4 CBNZ W8, 0x3D137DC
	0x03D137C8 ADRP X0, 0x3E8000
	0x03D137CC LDR X0, [X0 + 0xF08]
	0x03D137D0 BL 0x1C16CF4
	0x03D137D4 MOVZ W8, 0x1
	0x03D137D8 STRB W8, [X21 + 0x78F]
	0x03D137DC ADRP X22, 0x3E8000
	0x03D137E0 LDR X22, [X22 + 0xF08]
	0x03D137E4 LDR X0, [X23]
	0x03D137E8 LDR X20, [X19 + 0x3D0]
	0x03D137EC LDR X8, [X22]
	0x03D137F0 LDR W9, [X0 + 0xE0]
	0x03D137F4 LDR X8, [X8 + 0xB8]
	0x03D137F8 LDP S13, S12, [X8]
	0x03D137FC CBNZ W9, 0x3D13804
	0x03D13800 BL 0x1C16DFC
	0x03D13804 MOV X0, X20
	0x03D13808 MOV X1, X31
	0x03D1380C MOV X2, X31
	0x03D13810 BL 0x3C354F8
	0x03D13814 TBZ X0, 0x0, 0x3D13828
	0x03D13818 MOV X1, X20
	0x03D1381C BL 0x3D13B40
	0x03D13820 MOV V13.16B, V0.16B
	0x03D13824 MOV V12.16B, V1.16B
	0x03D13828 LDR X0, [X23]
	0x03D1382C LDR X20, [X19 + 0x3E0]
	0x03D13830 LDR W8, [X0 + 0xE0]
	0x03D13834 CBNZ W8, 0x3D1383C
	0x03D13838 BL 0x1C16DFC
	0x03D1383C MOV X0, X20
	0x03D13840 MOV X1, X31
	0x03D13844 MOV X2, X31
	0x03D13848 BL 0x3C354F8
	0x03D1384C TBZ X0, 0x0, 0x3D13858
	0x03D13850 CBZ X20, 0x3D138FC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x6D5000
	009 Move X23, 0x451000
	010 Move W8, [X22+2252]
	011 Move X23, [X23+3208]
	012 Move X20, X2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x451000
	020 Move X0, [X0+3208]
	021 Call 0x1C17CF4
	022 Move X0, 0x451000
	023 Move X0, [X0+3184]
	024 Call 0x1C17CF4
	025 Move X0, 0x451000
	026 Move X0, [X0+3192]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2252], W8
	030 Move X3, [X23]
	031 Move X0, X19
	032 Move X1, X21
	033 Move X2, X20
	034 Call BaseField`1<Hash128>.SetValueWithoutNotify, X0, X1
	035 Move W8, [X19+1120]
	036 Compare W8, 0
	037 JumpIfEqual {54}
	038 Move X8, 0x451000
	039 Move X8, [X8+3184]
	040 Move X20, 0x451000
	041 Move X0, X19
	042 Move X1, [X8]
	043 Move X20, [X20+3192]
	044 Call BaseField`1<Hash128>.get_rawValue, X0
	045 Move [X31], X0
	046 Move [X31+8], X1
	047 Add X0, X31, 0
	048 Move X1, X31
	049 Call Hash128.ToString, X0
	050 Move X2, [X20]
	051 Move X1, X0
	052 Move X0, X19
	053 Call TextInputBaseField`1<Hash128>.set_text, X0, X1
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X30, [X31+16]
	059 Move X23, [X31+24]
	060 Add X31, X31, 64
	061 Return 

Method: System.String ValueToString(UnityEngine.Hash128 value)

Disassembly:
	0x03D13854 LDP S13, S12, [X20 + 0x40]
	0x03D13858 LDRB W8, [X21 + 0x78F]
	0x03D1385C CBNZ W8, 0x3D13874
	0x03D13860 ADRP X0, 0x3E8000
	0x03D13864 LDR X0, [X0 + 0xF08]
	0x03D13868 BL 0x1C16CF4
	0x03D1386C MOVZ W8, 0x1
	0x03D13870 STRB W8, [X21 + 0x78F]
	0x03D13874 LDR X8, [X22]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X2
	003 Move [X31+16], X30
	004 Move [X31], X1
	005 Add X0, X31, 0
	006 Move X1, X31
	007 Call Hash128.ToString, X0
	008 Move X30, [X31+16]
	009 Add X31, X31, 32
	010 Return X0

Method: UnityEngine.Hash128 StringToValue(System.String str)

Disassembly:
	0x03D13878 LDR X8, [X8 + 0xB8]
	0x03D1387C LDP S0, S1, [X8]

ISIL:
	001 Move X0, X1

Method: System.Void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03D138F0 LDP D11, D10, [X31 + 0x10]
	0x03D138F4 LDP D13, D12, [X31], #0x60
	0x03D138F8 RET
	0x03D138FC BL 0x1C16F20
	0x03D13900 LDR V0, [X0 + 0x3E8]
	0x03D13904 LDR V1, [X0 + 0x3EC]
	0x03D13908 LDR V2, [X0 + 0x3F0]
	0x03D1390C LDR V3, [X0 + 0x3F4]
	0x03D13910 RET
	0x03D13914 LDR V4, [X0 + 0x3E8]
	0x03D13918 FCMP S4, S0
	0x03D1391C B.NE 0x3D13948
	0x03D13920 LDR V4, [X0 + 0x3F4]
	0x03D13924 FCMP S4, S3
	0x03D13928 B.NE 0x3D13948
	0x03D1392C LDR V4, [X0 + 0x3F0]
	0x03D13930 FCMP S4, S2
	0x03D13934 B.NE 0x3D13948
	0x03D13938 LDR V4, [X0 + 0x3EC]
	0x03D1393C FCMP S4, S1
	0x03D13940 B.NE 0x3D13948
	0x03D13944 RET
	0x03D13948 STR S0, [X0 + 0x3E8]
	0x03D1394C STR S1, [X0 + 0x3EC]
	0x03D13950 STR S2, [X0 + 0x3F0]
	0x03D13954 STR S3, [X0 + 0x3F4]
	0x03D13958 RET
	0x03D1395C LDR W0, [X0 + 0x3C8]
	0x03D13960 RET
	0x03D13964 LDR V0, [X0 + 0x3F8]
	0x03D13968 LDR V1, [X0 + 0x3FC]
	0x03D1396C LDR V2, [X0 + 0x400]
	0x03D13970 LDR V3, [X0 + 0x404]
	0x03D13974 RET
	0x03D13978 STR X30, [X31 - 0x50]!
	0x03D1397C STP X26, X25, [X31 + 0x10]
	0x03D13980 STP X24, X23, [X31 + 0x20]
	0x03D13984 STP X22, X21, [X31 + 0x30]
	0x03D13988 STP X20, X19, [X31 + 0x40]
	0x03D1398C ADRP X21, 0x6D4000
	0x03D13990 ADRP X20, 0x408000
	0x03D13994 LDRB W8, [X21 + 0x8DE]
	0x03D13998 LDR X20, [X20 + 0x898]
	0x03D1399C MOV X19, X0
	0x03D139A0 TBNZ X8, 0x0, 0x3D13A00
	0x03D139A4 ADRP X0, 0x450000
	0x03D139A8 LDR X0, [X0 + 0xD48]
	0x03D139AC BL 0x1C16CF4
	0x03D139B0 ADRP X0, 0x40A000
	0x03D139B4 LDR X0, [X0 + 0x638]
	0x03D139B8 BL 0x1C16CF4
	0x03D139BC ADRP X0, 0x40A000
	0x03D139C0 LDR X0, [X0 + 0x640]
	0x03D139C4 BL 0x1C16CF4
	0x03D139C8 ADRP X0, 0x450000
	0x03D139CC LDR X0, [X0 + 0xD50]
	0x03D139D0 BL 0x1C16CF4
	0x03D139D4 ADRP X0, 0x450000
	0x03D139D8 LDR X0, [X0 + 0xD58]
	0x03D139DC BL 0x1C16CF4
	0x03D139E0 ADRP X0, 0x450000
	0x03D139E4 LDR X0, [X0 + 0xD60]
	0x03D139E8 BL 0x1C16CF4
	0x03D139EC ADRP X0, 0x408000
	0x03D139F0 LDR X0, [X0 + 0x898]
	0x03D139F4 BL 0x1C16CF4
	0x03D139F8 MOVZ W8, 0x1
	0x03D139FC STRB W8, [X21 + 0x8DE]
	0x03D13A00 LDR X0, [X20]
	0x03D13A04 ADRP X26, 0x450000
	0x03D13A08 LDR W8, [X0 + 0xE0]
	0x03D13A0C LDR X26, [X26 + 0xD60]
	0x03D13A10 CBNZ W8, 0x3D13A18
	0x03D13A14 BL 0x1C16DFC
	0x03D13A18 ADRP X24, 0x40A000
	0x03D13A1C ADRP X20, 0x450000
	0x03D13A20 ADRP X23, 0x40A000
	0x03D13A24 ADRP X22, 0x450000
	0x03D13A28 ADRP X21, 0x450000
	0x03D13A2C LDR X24, [X24 + 0x640]
	0x03D13A30 LDR X20, [X20 + 0xD50]
	0x03D13A34 LDR X23, [X23 + 0x638]
	0x03D13A38 LDR X22, [X22 + 0xD48]
	0x03D13A3C LDR X21, [X21 + 0xD58]
	0x03D13A40 MOV X0, X19
	0x03D13A44 MOV X1, X31
	0x03D13A48 ADD X25, X19, 0x3E8
	0x03D13A4C BL 0x3DEF578
	0x03D13A50 LDR X0, [X26]
	0x03D13A54 LDR W8, [X0 + 0xE0]
	0x03D13A58 CBNZ W8, 0x3D13A64
	0x03D13A5C BL 0x1C16DFC
	0x03D13A60 LDR X0, [X26]
	0x03D13A64 LDR X8, [X0 + 0xB8]
	0x03D13A68 MOV X0, X19
	0x03D13A6C MOV X2, X31
	0x03D13A70 LDR X1, [X8]
	0x03D13A74 BL 0x3DF1C70
	0x03D13A78 ADRP X9, 0xFFFFFFFFFCDD7000
	0x03D13A7C LDR V0, [X9 + 0xBC]
	0x03D13A80 MOVZ W8, 0x2
	0x03D13A84 FMOV V1.4S, 0x0
	0x03D13A88 MOVZ W1, 0x1
	0x03D13A8C MOV X0, X19
	0x03D13A90 MOV X2, X31
	0x03D13A94 STR W8, [X19 + 0x3C8]
	0x03D13A98 STP V0, V1, [X25]
	0x03D13A9C BL 0x3DF2904
	0x03D13AA0 LDR X0, [X24]
	0x03D13AA4 BL 0x1C16F10
	0x03D13AA8 LDR X2, [X20]
	0x03D13AAC MOV X1, X19
	0x03D13AB0 MOV X3, X31
	0x03D13AB4 MOV X20, X0
	0x03D13AB8 BL 0x2D0E824
	0x03D13ABC LDR X3, [X23]
	0x03D13AC0 MOV X0, X19
	0x03D13AC4 MOV X1, X20
	0x03D13AC8 MOV W2, W31
	0x03D13ACC BL 0x21A1534
	0x03D13AD0 LDR X0, [X22]
	0x03D13AD4 LDR X20, [X19 + 0x338]
	0x03D13AD8 BL 0x1C16F10
	0x03D13ADC LDR X2, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6D5000
	006 Move W8, [X21+2253]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {39}
	013 Move X0, 0x40B000
	014 Move X0, [X0+1768]
	015 Call 0x1C17CF4
	016 Move X0, 0x40B000
	017 Move X0, [X0+1784]
	018 Call 0x1C17CF4
	019 Move X0, 0x40B000
	020 Move X0, [X0+1584]
	021 Call 0x1C17CF4
	022 Move X0, 0x451000
	023 Move X0, [X0+3216]
	024 Call 0x1C17CF4
	025 Move X0, 0x451000
	026 Move X0, [X0+3224]
	027 Call 0x1C17CF4
	028 Move X0, 0x451000
	029 Move X0, [X0+3200]
	030 Call 0x1C17CF4
	031 Move X0, 0x451000
	032 Move X0, [X0+3232]
	033 Call 0x1C17CF4
	034 Move X0, 0x451000
	035 Move X0, [X0+3240]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+2253], W8
	039 Move X0, X19
	040 Move X1, X20
	041 Move X2, X31
	042 Call VisualElement.ExecuteDefaultAction, X0, X1
	043 Compare X20, 0
	044 JumpIfEqual {122}
	045 Move X8, 0x451000
	046 Move X8, [X8+3216]
	047 Move X0, X19
	048 Move X1, [X8]
	049 Call TextInputBaseField`1<Hash128>.get_textEdition, X0
	050 Compare X0, 0
	051 JumpIfEqual {146}
	052 Move X10, 0x40B000
	053 Move X8, [X0]
	054 Move X10, [X10+1584]
	055 Move X21, X0
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move X1, [X10]
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move W2, 2
	067 Move X0, X21
	068 Call 0x1C5D788
	069 Move W9, [X10]
	070 Add W9, W9, 2
	071 Add X8, X8, W9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X1, [X0+8]
	075 Move X0, X21
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {122}
	081 Move X8, [X20]
	082 Move X0, X20
	083 Move X9, [X8+392]
	084 Move X1, [X8+400]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X8, 0x40B000
	087 Move X8, [X8+1784]
	088 Move X20, X0
	089 Move X8, [X8]
	090 Move W9, [X8+224]
	091 Compare W9, 0
	092 JumpIfNotEqual {95}
	093 Move X0, X8
	094 Call 0x1C17DFC
	095 Move X8, 0x40B000
	096 Move X8, [X8+1768]
	097 Move X0, [X8]
	098 Call 0x2D0E5C8
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X8, 0x451000
	101 Move X8, [X8+3200]
	102 Move X0, X19
	103 Move X1, [X8]
	104 Call TextInputBaseField`1<Hash128>.get_text, X0
	105 Move X1, X31
	106 Call String.IsNullOrEmpty, X0
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {127}
	111 Move X8, [X19]
	112 Move X0, X19
	113 Move X20, [X31+16]
	114 Move X19, [X31+24]
	115 Move X1, X31
	116 Move X4, [X8+2040]
	117 Move X3, [X8+2048]
	118 Move X2, X31
	119 Move X30, [X31+32]
	120 Move X21, [X31+40]
	121 CallNoReturn X4
	122 Move X20, [X31+16]
	123 Move X19, [X31+24]
	124 Move X30, [X31+32]
	125 Move X21, [X31+40]
	126 Return 
	127 Move X0, [X19+1104]
	128 Compare X0, 0
	129 JumpIfEqual {146}
	130 Move X8, 0x451000
	131 Move X8, [X8+3240]
	132 Move X1, [X8]
	133 Call TextInputBase<Hash128>.UpdateValueFromText, X0
	134 Move X0, [X19+1104]
	135 Compare X0, 0
	136 JumpIfEqual {146}
	137 Move X8, 0x451000
	138 Move X8, [X8+3232]
	139 Move X20, [X31+16]
	140 Move X19, [X31+24]
	141 Move X1, [X8]
	142 Move X30, [X31+32]
	143 Move X21, [X31+40]
	144 Call TextInputBase<Hash128>.UpdateTextFromValue, X0
	145 Return 
	146 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D13AE0 MOV X1, X19
	0x03D13AE4 MOV X3, X31
	0x03D13AE8 MOV X21, X0
	0x03D13AEC BL 0x2A6B948
	0x03D13AF0 MOV X0, X20
	0x03D13AF4 MOV X1, X21
	0x03D13AF8 MOV X2, X31
	0x03D13AFC BL 0x33C0DE4
	0x03D13B00 CBZ X0, 0x3D13B18
	0x03D13B04 LDR X21, [X22]
	0x03D13B08 MOV X20, X0
	0x03D13B0C MOV X1, X21
	0x03D13B10 BL 0x1C16E00
	0x03D13B14 CBZ X0, 0x3D13B34
	0x03D13B18 STR X0, [X19 + 0x338]
	0x03D13B1C LDP X20, X19, [X31 + 0x40]
	0x03D13B20 LDP X22, X21, [X31 + 0x30]
	0x03D13B24 LDP X24, X23, [X31 + 0x20]
	0x03D13B28 LDP X26, X25, [X31 + 0x10]
	0x03D13B2C LDR X30, [X31], #0x50
	0x03D13B30 RET
	0x03D13B34 MOV X0, X20
	0x03D13B38 MOV X1, X21
	0x03D13B3C BL 0x1C171E0
	0x03D13B40 STP D9, D8, [X31 - 0x30]!
	0x03D13B44 STP X30, X21, [X31 + 0x10]
	0x03D13B48 STP X20, X19, [X31 + 0x20]
	0x03D13B4C ADRP X20, 0x6D4000
	0x03D13B50 LDRB W8, [X20 + 0x8DF]
	0x03D13B54 MOV X19, X1
	0x03D13B58 TBNZ X8, 0x0, 0x3D13B70
	0x03D13B5C ADRP X0, 0x3E0000
	0x03D13B60 LDR X0, [X0 + 0x598]
	0x03D13B64 BL 0x1C16CF4
	0x03D13B68 MOVZ W8, 0x1
	0x03D13B6C STRB W8, [X20 + 0x8DF]
	0x03D13B70 ADRP X21, 0x6C6000
	0x03D13B74 ADRP X20, 0x3E0000
	0x03D13B78 LDRB W8, [X21 + 0x78F]
	0x03D13B7C LDR X20, [X20 + 0x598]
	0x03D13B80 CBNZ W8, 0x3D13B98
	0x03D13B84 ADRP X0, 0x3E8000
	0x03D13B88 LDR X0, [X0 + 0xF08]
	0x03D13B8C BL 0x1C16CF4
	0x03D13B90 MOVZ W8, 0x1
	0x03D13B94 STRB W8, [X21 + 0x78F]
	0x03D13B98 ADRP X8, 0x3E8000
	0x03D13B9C LDR X8, [X8 + 0xF08]
	0x03D13BA0 LDR X0, [X20]
	0x03D13BA4 LDR X8, [X8]
	0x03D13BA8 LDR W9, [X0 + 0xE0]
	0x03D13BAC LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x6D5000
	008 Move X22, 0x451000
	009 Move X19, 0x451000
	010 Move X21, 0x40A000
	011 Move X20, 0x40A000
	012 Move W8, [X23+2254]
	013 Move X22, [X22+3248]
	014 Move X19, [X19+3128]
	015 Move X21, [X21+3768]
	016 Move X20, [X20+3776]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x451000
	022 Move X0, [X0+3128]
	023 Call 0x1C17CF4
	024 Move X0, 0x451000
	025 Move X0, [X0+3248]
	026 Call 0x1C17CF4
	027 Move X0, 0x40A000
	028 Move X0, [X0+3768]
	029 Call 0x1C17CF4
	030 Move X0, 0x40A000
	031 Move X0, [X0+3776]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+2254], W8
	035 Move X8, [X19]
	036 Move X9, [X22]
	037 Move X2, X31
	038 Move X8, [X8+184]
	039 Move [X8], X9
	040 Move X8, [X19]
	041 Move X1, [X21]
	042 Move X8, [X8+184]
	043 Move X0, [X8]
	044 Call String.Concat, X0, X1
	045 Move X8, [X19]
	046 Move X2, X31
	047 Move X8, [X8+184]
	048 Move [X8+8], X0
	049 Move X0, [X8]
	050 Move X1, [X20]
	051 Call String.Concat, X0, X1
	052 Move X8, [X19]
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X8, [X8+184]
	058 Move [X8+16], X0
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return 

