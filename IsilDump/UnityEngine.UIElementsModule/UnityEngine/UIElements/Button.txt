Type: UnityEngine.UIElements.Button

Method: UnityEngine.UIElements.Clickable get_clickable()

Disassembly:
	0x03D074EC LDR X0, [X22 + 0x80]
	0x03D074F0 STP V0, V1, [X31 + 0x60]

ISIL:
	001 Move X0, [X0+1184]
	002 Return X0

Method: System.Void set_clickable(UnityEngine.UIElements.Clickable value)

Disassembly:
	0x03D074F4 CBZ X0, 0x3D075FC
	0x03D074F8 LDR X8, [X0]
	0x03D074FC LDP V0, V1, [X31 + 0x60]
	0x03D07500 ADD X2, X31, 0xA0
	0x03D07504 MOV X1, X20
	0x03D07508 LDR X9, [X8 + 0x178]
	0x03D0750C STP V0, V1, [X31 + 0xA0]
	0x03D07510 LDR X3, [X8 + 0x180]
	0x03D07514 BLR X9
	0x03D07518 MOV V8.16B, V0.16B
	0x03D0751C LDP V0, V1, [X21]
	0x03D07520 LDR X0, [X22 + 0x88]
	0x03D07524 STP V0, V1, [X31 + 0x40]
	0x03D07528 CBZ X0, 0x3D075FC
	0x03D0752C LDR X8, [X0]
	0x03D07530 LDP V0, V1, [X31 + 0x40]
	0x03D07534 ADD X2, X31, 0xA0
	0x03D07538 MOV X1, X20
	0x03D0753C LDR X9, [X8 + 0x178]
	0x03D07540 STP V0, V1, [X31 + 0xA0]
	0x03D07544 LDR X3, [X8 + 0x180]
	0x03D07548 BLR X9
	0x03D0754C MOV V9.16B, V0.16B
	0x03D07550 LDP V0, V1, [X21]
	0x03D07554 LDR X0, [X22 + 0x90]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+1184]
	006 Move X20, X1
	007 Compare X0, 0
	008 JumpIfEqual {16}
	009 Move X1, X31
	010 Call Manipulator.get_target, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X1, [X19+1184]
	013 Move X0, X19
	014 Move X2, X31
	015 Call VisualElementExtensions.RemoveManipulator, X0, X1
	016 Move [X19+1184], X20
	017 Compare X20, 0
	018 JumpIfEqual {27}
	019 Move X0, X19
	020 Move X1, X20
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X30, [X31+32]
	025 Call VisualElementExtensions.AddManipulator, X0, X1
	026 Return 
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return 

Method: System.Void .ctor()

Disassembly:
	0x03D07558 STP V0, V1, [X31 + 0x20]
	0x03D0755C CBZ X0, 0x3D075FC

ISIL:
	001 Move X1, X31

Method: System.Void .ctor(System.Action clickEvent)

Disassembly:
	0x03D07560 LDR X8, [X0]
	0x03D07564 LDP V0, V1, [X31 + 0x20]
	0x03D07568 ADD X2, X31, 0xA0
	0x03D0756C MOV X1, X20
	0x03D07570 LDR X9, [X8 + 0x178]
	0x03D07574 STP V0, V1, [X31 + 0xA0]
	0x03D07578 LDR X3, [X8 + 0x180]
	0x03D0757C BLR X9
	0x03D07580 MOV V10.16B, V0.16B
	0x03D07584 LDP V0, V1, [X21]
	0x03D07588 LDR X0, [X22 + 0x98]
	0x03D0758C STP V0, V1, [X31]
	0x03D07590 CBZ X0, 0x3D075FC
	0x03D07594 LDR X8, [X0]
	0x03D07598 LDP V0, V1, [X31]
	0x03D0759C ADD X2, X31, 0xA0
	0x03D075A0 MOV X1, X20
	0x03D075A4 LDR X9, [X8 + 0x178]
	0x03D075A8 STP V0, V1, [X31 + 0xA0]
	0x03D075AC LDR X3, [X8 + 0x180]
	0x03D075B0 BLR X9
	0x03D075B4 CBZ X19, 0x3D075FC
	0x03D075B8 LDR X8, [X19]
	0x03D075BC MOV V3.16B, V0.16B
	0x03D075C0 MOV X0, X19
	0x03D075C4 MOV V0.16B, V8.16B
	0x03D075C8 LDR X9, [X8 + 0x888]
	0x03D075CC LDR X1, [X8 + 0x890]
	0x03D075D0 MOV V1.16B, V9.16B
	0x03D075D4 MOV V2.16B, V10.16B
	0x03D075D8 BLR X9
	0x03D075DC LDP X20, X19, [X31 + 0x110]
	0x03D075E0 LDP X22, X21, [X31 + 0x100]
	0x03D075E4 LDP X24, X23, [X31 + 0xF0]
	0x03D075E8 LDP X29, X30, [X31 + 0xE0]
	0x03D075EC LDP D9, D8, [X31 + 0xD0]
	0x03D075F0 LDR V10, [X31 + 0xC0]
	0x03D075F4 ADD X31, X31, 0x120
	0x03D075F8 RET
	0x03D075FC BL 0x1C16F20
	0x03D07600 MOV X0, X19
	0x03D07604 BL 0x1C171E0
	0x03D07608 STP X30, X21, [X31 - 0x20]!
	0x03D0760C STP X20, X19, [X31 + 0x10]
	0x03D07610 ADRP X20, 0x6E0000
	0x03D07614 ADRP X21, 0x45C000
	0x03D07618 LDRB W8, [X20 + 0x848]
	0x03D0761C LDR X21, [X21 + 0x270]
	0x03D07620 MOV X19, X0
	0x03D07624 TBNZ X8, 0x0, 0x3D07678
	0x03D07628 ADRP X0, 0x45C000
	0x03D0762C LDR X0, [X0 + 0x270]
	0x03D07630 BL 0x1C16CF4
	0x03D07634 ADRP X0, 0x45C000
	0x03D07638 LDR X0, [X0 + 0x4E0]
	0x03D0763C BL 0x1C16CF4
	0x03D07640 ADRP X0, 0x414000
	0x03D07644 LDR X0, [X0 + 0x780]
	0x03D07648 BL 0x1C16CF4
	0x03D0764C ADRP X0, 0x440000
	0x03D07650 LDR X0, [X0 + 0x110]
	0x03D07654 BL 0x1C16CF4
	0x03D07658 ADRP X0, 0x414000
	0x03D0765C LDR X0, [X0 + 0x788]
	0x03D07660 BL 0x1C16CF4
	0x03D07664 ADRP X0, 0x419000
	0x03D07668 LDR X0, [X0 + 0x3D8]
	0x03D0766C BL 0x1C16CF4
	0x03D07670 MOVZ W8, 0x1
	0x03D07674 STRB W8, [X20 + 0x848]
	0x03D07678 LDR X0, [X21]
	0x03D0767C BL 0x1C16F10
	0x03D07680 MOV X1, X31
	0x03D07684 MOV X20, X0
	0x03D07688 BL 0x3E1B6CC
	0x03D0768C CBZ X20, 0x3D07744
	0x03D07690 ADRP X8, 0x414000
	0x03D07694 LDR X8, [X8 + 0x780]
	0x03D07698 LDR X8, [X8]
	0x03D0769C STR X8, [X20 + 0x10]
	0x03D076A0 STR X20, [X19 + 0x80]
	0x03D076A4 LDR X0, [X21]
	0x03D076A8 BL 0x1C16F10
	0x03D076AC MOV X1, X31
	0x03D076B0 MOV X20, X0
	0x03D076B4 BL 0x3E1B6CC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x6E1000
	010 Move X21, 0x416000
	011 Move W8, [X22+2105]
	012 Move X21, [X21+3784]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x45D000
	020 Move X0, [X0+952]
	021 Call 0x1C17CF4
	022 Move X0, 0x45C000
	023 Move X0, [X0+3568]
	024 Call 0x1C17CF4
	025 Move X0, 0x418000
	026 Move X0, [X0+144]
	027 Call 0x1C17CF4
	028 Move X0, 0x45C000
	029 Move X0, [X0+3440]
	030 Call 0x1C17CF4
	031 Move X0, 0x418000
	032 Move X0, [X0+168]
	033 Call 0x1C17CF4
	034 Move X0, 0x416000
	035 Move X0, [X0+3784]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+2105], W8
	039 Move X0, [X21]
	040 Move X25, 0x45C000
	041 Move W8, [X0+224]
	042 Move X25, [X25+3568]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X21, 0x45C000
	047 Move X24, 0x418000
	048 Move X23, 0x45D000
	049 Move X22, 0x418000
	050 Move X21, [X21+3440]
	051 Move X24, [X24+168]
	052 Move X23, [X23+952]
	053 Move X22, [X22+144]
	054 Move X0, X19
	055 Move X1, X31
	056 Call TextElement..ctor, X0
	057 Move X0, [X25]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X25]
	063 Move X8, [X0+184]
	064 Move X0, X19
	065 Move X2, X31
	066 Move X1, [X8]
	067 Call VisualElement.AddToClassList, X0, X1
	068 Move X0, [X21]
	069 Call 0x1C17F10
	070 Move X1, X20
	071 Move X2, X31
	072 Move X21, X0
	073 Call Clickable..ctor, X0, X1
	074 Move X0, X19
	075 Move X1, X21
	076 Call Button.set_clickable, X0, X1
	077 Move W8, 1
	078 Move [X19+32], W8
	079 Move [X19+36], W31
	080 Move X0, [X24]
	081 Call 0x1C17F10
	082 Move X2, [X23]
	083 Move X1, X19
	084 Move X3, X31
	085 Move X20, X0
	086 Call 0x2D0F824, X0, X1, X2
	087 Move X3, [X22]
	088 Move X0, X19
	089 Move X1, X20
	090 Move X20, [X31+48]
	091 Move X19, [X31+56]
	092 Move X22, [X31+32]
	093 Move X21, [X31+40]
	094 Move X24, [X31+16]
	095 Move X23, [X31+24]
	096 Move W2, W31
	097 Move X30, [X31+64]
	098 Move X25, [X31+72]
	099 Call 0x21A2534, X0, X1, X2
	100 Return 

Method: System.Void OnNavigationSubmit(UnityEngine.UIElements.NavigationSubmitEvent evt)

Disassembly:
	0x03D076B8 CBZ X20, 0x3D07744
	0x03D076BC ADRP X8, 0x414000
	0x03D076C0 LDR X8, [X8 + 0x788]
	0x03D076C4 LDR X8, [X8]
	0x03D076C8 STR X8, [X20 + 0x10]
	0x03D076CC STR X20, [X19 + 0x88]
	0x03D076D0 LDR X0, [X21]
	0x03D076D4 BL 0x1C16F10
	0x03D076D8 MOV X1, X31
	0x03D076DC MOV X20, X0
	0x03D076E0 BL 0x3E1B6CC
	0x03D076E4 CBZ X20, 0x3D07744
	0x03D076E8 ADRP X8, 0x419000
	0x03D076EC LDR X8, [X8 + 0x3D8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, [X0+1184]
	004 Move X19, X1
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Move W2, 100
	008 Move X1, X19
	009 Move X3, X31
	010 Call Clickable.SimulateSingleClick, X0, X1, X2
	011 Compare X19, 0
	012 JumpIfEqual {19}
	013 Move X0, X19
	014 Move X1, X31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Call EventBase.StopPropagation, X0
	018 Return 
	019 Call 0x1C17F20

Method: UnityEngine.Vector2 DoMeasure(System.Single desiredWidth, UnityEngine.UIElements.VisualElement/MeasureMode widthMode, System.Single desiredHeight, UnityEngine.UIElements.VisualElement/MeasureMode heightMode)

Disassembly:
	0x03D076F0 LDR X8, [X8]
	0x03D076F4 STR X8, [X20 + 0x10]
	0x03D076F8 STR X20, [X19 + 0x90]
	0x03D076FC LDR X0, [X21]
	0x03D07700 BL 0x1C16F10
	0x03D07704 MOV X1, X31
	0x03D07708 MOV X20, X0
	0x03D0770C BL 0x3E1B6CC
	0x03D07710 CBZ X20, 0x3D07744
	0x03D07714 ADRP X8, 0x440000
	0x03D07718 LDR X8, [X8 + 0x110]
	0x03D0771C ADRP X9, 0x45C000
	0x03D07720 MOV X0, X19
	0x03D07724 LDR X8, [X8]
	0x03D07728 LDR X9, [X9 + 0x4E0]
	0x03D0772C STR X8, [X20 + 0x10]
	0x03D07730 STR X20, [X19 + 0x98]
	0x03D07734 LDR X1, [X9]
	0x03D07738 LDP X20, X19, [X31 + 0x10]
	0x03D0773C LDP X30, X21, [X31], #0x20
	0x03D07740 B 0x273AA80
	0x03D07744 BL 0x1C16F20
	0x03D07748 STR X30, [X31 - 0x20]!
	0x03D0774C STP X20, X19, [X31 + 0x10]
	0x03D07750 ADRP X19, 0x6E0000
	0x03D07754 ADRP X20, 0x45C000
	0x03D07758 LDRB W8, [X19 + 0x849]
	0x03D0775C LDR X20, [X20 + 0x420]
	0x03D07760 TBNZ X8, 0x0, 0x3D07778
	0x03D07764 ADRP X0, 0x45C000
	0x03D07768 LDR X0, [X0 + 0x420]
	0x03D0776C BL 0x1C16CF4
	0x03D07770 MOVZ W8, 0x1
	0x03D07774 STRB W8, [X19 + 0x849]
	0x03D07778 LDR X0, [X20]
	0x03D0777C BL 0x1C16F10
	0x03D07780 MOV X1, X31
	0x03D07784 MOV X19, X0
	0x03D07788 BL 0x33BDD8C
	0x03D0778C LDR X8, [X20]
	0x03D07790 LDR X8, [X8 + 0xB8]
	0x03D07794 STR X19, [X8]
	0x03D07798 LDP X20, X19, [X31 + 0x10]
	0x03D0779C LDR X30, [X31], #0x20
	0x03D077A0 RET
	0x03D077A4 MOV X1, X31
	0x03D077A8 B 0x33BDD8C

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x6E1000
	009 Move W8, [X22+2106]
	010 Move W19, W2
	011 Move V8, V1
	012 Move W20, W1
	013 Move V9, V0
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x45C000
	020 Move X0, [X0+3568]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2106], W8
	024 Move X8, [X21]
	025 Move X0, X21
	026 Move X9, [X8+2840]
	027 Move X1, [X8+2848]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X1, X31
	030 Move X22, X0
	031 Call String.IsNullOrEmpty, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {46}
	036 Move X22, 0x45C000
	037 Move X22, [X22+3568]
	038 Move X0, [X22]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X22]
	044 Move X8, [X0+184]
	045 Move X22, [X8+8]
	046 Move X0, X21
	047 Move X1, X22
	048 Move W2, W20
	049 Move W3, W19
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X30, [X31+16]
	055 Move V0, V9
	056 Move V1, V8
	057 Move X4, X31
	058 Move D9, [X31+64]
	059 Move D8, [X31+72]
	060 Call TextElement.MeasureTextSize, X0, X1, V0, X2, V1, X3
	061 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03D077AC RET
	0x03D077B0 STR S0, [X1]
	0x03D077B4 RET
	0x03D077B8 MOV V0.16B, V1.16B
	0x03D077BC RET
	0x03D077C0 STR S0, [X1 + 0x4]
	0x03D077C4 RET
	0x03D077C8 MOV V0.16B, V2.16B
	0x03D077CC RET
	0x03D077D0 STR S0, [X1 + 0x8]
	0x03D077D4 RET
	0x03D077D8 MOV V0.16B, V3.16B
	0x03D077DC RET
	0x03D077E0 STR S0, [X1 + 0xC]
	0x03D077E4 RET
	0x03D077E8 SUB X31, X31, 0xF0
	0x03D077EC STR X30, [X31 + 0xA0]
	0x03D077F0 STP X26, X25, [X31 + 0xB0]
	0x03D077F4 STP X24, X23, [X31 + 0xC0]
	0x03D077F8 STP X22, X21, [X31 + 0xD0]
	0x03D077FC STP X20, X19, [X31 + 0xE0]
	0x03D07800 ADRP X20, 0x6E0000
	0x03D07804 ADRP X19, 0x45C000
	0x03D07808 ADRP X25, 0x45C000
	0x03D0780C LDRB W8, [X20 + 0x84A]
	0x03D07810 LDR X19, [X19 + 0x4E8]
	0x03D07814 LDR X25, [X25 + 0x4F0]
	0x03D07818 TBNZ X8, 0x0, 0x3D07920
	0x03D0781C ADRP X0, 0x45C000
	0x03D07820 LDR X0, [X0 + 0x4E8]
	0x03D07824 BL 0x1C16CF4
	0x03D07828 ADRP X0, 0x45C000
	0x03D0782C LDR X0, [X0 + 0x4F8]
	0x03D07830 BL 0x1C16CF4
	0x03D07834 ADRP X0, 0x45C000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6E1000
	007 Move X21, 0x45D000
	008 Move X20, 0x45C000
	009 Move X19, 0x3ED000
	010 Move W8, [X22+2107]
	011 Move X21, [X21+960]
	012 Move X20, [X20+3568]
	013 Move X19, [X19+3544]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x45C000
	019 Move X0, [X0+3568]
	020 Call 0x1C17CF4
	021 Move X0, 0x3ED000
	022 Move X0, [X0+3544]
	023 Call 0x1C17CF4
	024 Move X0, 0x45D000
	025 Move X0, [X0+960]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2107], W8
	029 Move X8, [X20]
	030 Move X9, [X21]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X8, [X8+184]
	034 Move [X8], X9
	035 Move X8, [X20]
	036 Move X9, [X19]
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X8, [X8+184]
	040 Move [X8+8], X9
	041 Move X30, [X31+48]
	042 Return 

