Type: UnityEngine.UIElements.VisualElementPanelActivator

Method: System.Boolean get_isActive()

Disassembly:
	0x03D1A164 ADRP X22, 0x44A000
	0x03D1A168 ADRP X23, 0x44A000

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_isActive(System.Boolean value)

Disassembly:
	0x03D1A16C ADRP X21, 0x44A000
	0x03D1A170 LDR X1, [X8]
	0x03D1A174 LDR X22, [X22 + 0x180]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+24], W8
	003 Return 

Method: System.Boolean get_isDetaching()

Disassembly:
	0x03D1A178 LDR X23, [X23 + 0x170]
	0x03D1A17C LDR X21, [X21 + 0x178]

ISIL:
	001 Move W0, [X0+25]
	002 Return X0

Method: System.Void set_isDetaching(System.Boolean value)

Disassembly:
	0x03D1A180 ADD X8, X31, 0x8
	0x03D1A184 MOV X0, X20
	0x03D1A188 BL 0x301CB58

ISIL:
	001 And W8, W1, 1
	002 Move [X0+25], W8
	003 Return 

Method: System.Void .ctor(UnityEngine.UIElements.IVisualElementPanelActivatable activatable)

Disassembly:
	0x03D1A18C LDR X1, [X22]
	0x03D1A190 ADD X0, X31, 0x8
	0x03D1A194 BL 0x2BC4350
	0x03D1A198 TBZ X0, 0x0, 0x3D1A1B4
	0x03D1A19C LDR X0, [X19 + 0x20]
	0x03D1A1A0 CBZ X0, 0x3D1A1DC
	0x03D1A1A4 LDR X1, [X31 + 0x18]
	0x03D1A1A8 LDR X2, [X23]
	0x03D1A1AC BL 0x2DBE67C
	0x03D1A1B0 B 0x3D1A18C
	0x03D1A1B4 LDR X1, [X21]
	0x03D1A1B8 ADD X0, X31, 0x8
	0x03D1A1BC BL 0x2BC434C
	0x03D1A1C0 MOVZ W8, 0x1
	0x03D1A1C4 STRB W8, [X19 + 0x31]
	0x03D1A1C8 LDP X20, X19, [X31 + 0x40]
	0x03D1A1CC LDP X22, X21, [X31 + 0x30]
	0x03D1A1D0 LDP X30, X23, [X31 + 0x20]
	0x03D1A1D4 ADD X31, X31, 0x50
	0x03D1A1D8 RET
	0x03D1A1DC BL 0x1C16F20
	0x03D1A1E0 BL 0x1C16F20
	0x03D1A1E4 B 0x3D1A1EC
	0x03D1A1E8 B 0x3D1A1EC
	0x03D1A1EC MOV X20, X0
	0x03D1A1F0 CMP W1, 0x1
	0x03D1A1F4 B.NE 0x3D1A228
	0x03D1A1F8 MOV X0, X20
	0x03D1A1FC BL 0x3EB1AD0
	0x03D1A200 LDR X21, [X0]
	0x03D1A204 BL 0x3EB1AE0
	0x03D1A208 ADRP X8, 0x44A000
	0x03D1A20C LDR X8, [X8 + 0x178]
	0x03D1A210 ADD X0, X31, 0x8
	0x03D1A214 LDR X1, [X8]
	0x03D1A218 BL 0x2BC434C
	0x03D1A21C CBZ X21, 0x3D1A1C0
	0x03D1A220 MOV X0, X21
	0x03D1A224 BL 0x1C16F18
	0x03D1A228 MOV X21, X31
	0x03D1A22C B 0x3D1A234
	0x03D1A230 MOV X20, X0
	0x03D1A234 ADRP X8, 0x44A000
	0x03D1A238 LDR X8, [X8 + 0x178]
	0x03D1A23C LDR X1, [X8]
	0x03D1A240 ADD X0, X31, 0x8
	0x03D1A244 BL 0x2BC434C
	0x03D1A248 CBNZ X21, 0x3D1A254
	0x03D1A24C MOV X0, X20
	0x03D1A250 BL 0x1D2C690
	0x03D1A254 MOV X0, X21
	0x03D1A258 BL 0x1C16F18
	0x03D1A25C BL 0x1990590
	0x03D1A260 STP X30, X21, [X31 - 0x20]!
	0x03D1A264 STP X20, X19, [X31 + 0x10]
	0x03D1A268 ADRP X21, 0x6CD000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x6CE000
	010 Move X24, 0x404000
	011 Move X23, 0x44B000
	012 Move X22, 0x404000
	013 Move X21, 0x44B000
	014 Move W8, [X25+2330]
	015 Move X24, [X24+3440]
	016 Move X23, [X23+216]
	017 Move X22, [X22+3448]
	018 Move X21, [X21+224]
	019 Move X20, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0x404000
	026 Move X0, [X0+3440]
	027 Call 0x1C17CF4
	028 Move X0, 0x404000
	029 Move X0, [X0+3448]
	030 Call 0x1C17CF4
	031 Move X0, 0x44B000
	032 Move X0, [X0+216]
	033 Call 0x1C17CF4
	034 Move X0, 0x44B000
	035 Move X0, [X0+224]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X25+2330], W8
	039 Move X0, X19
	040 Move X1, X31
	041 Call Object..ctor, X0
	042 Move [X19+16], X20
	043 Move X0, [X24]
	044 Call 0x1C17F10
	045 Move X2, [X23]
	046 Move X1, X19
	047 Move X3, X31
	048 Move X20, X0
	049 Call 0x2D0F824, X0, X1, X2
	050 Move [X19+32], X20
	051 Move X0, [X22]
	052 Call 0x1C17F10
	053 Move X2, [X21]
	054 Move X1, X19
	055 Move X3, X31
	056 Move X20, X0
	057 Call 0x2D0F824, X0, X1, X2
	058 Move [X19+40], X20
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X24, [X31+16]
	064 Move X23, [X31+24]
	065 Move X30, [X31+64]
	066 Move X25, [X31+72]
	067 Return 

Method: System.Void SetActive(System.Boolean action)

Disassembly:
	0x03D1A26C LDRB W8, [X21 + 0x92B]
	0x03D1A270 MOV X20, X1
	0x03D1A274 MOV X19, X0
	0x03D1A278 TBNZ X8, 0x0, 0x3D1A290
	0x03D1A27C ADRP X0, 0x44A000
	0x03D1A280 LDR X0, [X0 + 0x198]
	0x03D1A284 BL 0x1C16CF4
	0x03D1A288 MOVZ W8, 0x1
	0x03D1A28C STRB W8, [X21 + 0x92B]
	0x03D1A290 LDR X0, [X19 + 0x20]
	0x03D1A294 CBZ X0, 0x3D1A2C0
	0x03D1A298 ADRP X8, 0x44A000
	0x03D1A29C LDR X8, [X8 + 0x198]
	0x03D1A2A0 MOV X1, X20
	0x03D1A2A4 LDR X2, [X8]
	0x03D1A2A8 BL 0x2DBEF30
	0x03D1A2AC MOVZ W8, 0x101
	0x03D1A2B0 STRH W8, [X19 + 0x30]
	0x03D1A2B4 LDP X20, X19, [X31 + 0x10]
	0x03D1A2B8 LDP X30, X21, [X31], #0x20
	0x03D1A2BC RET
	0x03D1A2C0 BL 0x1C16F20
	0x03D1A2C4 SUB X31, X31, 0x50
	0x03D1A2C8 STP X30, X23, [X31 + 0x20]
	0x03D1A2CC STP X22, X21, [X31 + 0x30]
	0x03D1A2D0 STP X20, X19, [X31 + 0x40]
	0x03D1A2D4 ADRP X21, 0x6CD000
	0x03D1A2D8 LDRB W8, [X21 + 0x92C]
	0x03D1A2DC MOV X20, X1
	0x03D1A2E0 MOV X19, X0
	0x03D1A2E4 TBNZ X8, 0x0, 0x3D1A32C
	0x03D1A2E8 ADRP X0, 0x44A000
	0x03D1A2EC LDR X0, [X0 + 0x178]
	0x03D1A2F0 BL 0x1C16CF4
	0x03D1A2F4 ADRP X0, 0x44A000
	0x03D1A2F8 LDR X0, [X0 + 0x180]
	0x03D1A2FC BL 0x1C16CF4
	0x03D1A300 ADRP X0, 0x44A000
	0x03D1A304 LDR X0, [X0 + 0x188]
	0x03D1A308 BL 0x1C16CF4
	0x03D1A30C ADRP X0, 0x44A000
	0x03D1A310 LDR X0, [X0 + 0x198]
	0x03D1A314 BL 0x1C16CF4
	0x03D1A318 ADRP X0, 0x44A000
	0x03D1A31C LDR X0, [X0 + 0x190]
	0x03D1A320 BL 0x1C16CF4
	0x03D1A324 MOVZ W8, 0x1
	0x03D1A328 STRB W8, [X21 + 0x92C]
	0x03D1A32C STP X31, X31, [X31 + 0x8]
	0x03D1A330 STR X31, [X31 + 0x18]
	0x03D1A334 CBZ X20, 0x3D1A3BC
	0x03D1A338 ADRP X8, 0x44A000
	0x03D1A33C LDR X8, [X8 + 0x190]
	0x03D1A340 ADRP X22, 0x44A000
	0x03D1A344 ADRP X23, 0x44A000
	0x03D1A348 ADRP X21, 0x44A000
	0x03D1A34C LDR X1, [X8]
	0x03D1A350 LDR X22, [X22 + 0x180]
	0x03D1A354 LDR X23, [X23 + 0x198]
	0x03D1A358 LDR X21, [X21 + 0x178]
	0x03D1A35C ADD X8, X31, 0x8
	0x03D1A360 MOV X0, X20
	0x03D1A364 BL 0x301CB58
	0x03D1A368 LDR X1, [X22]
	0x03D1A36C ADD X0, X31, 0x8
	0x03D1A370 BL 0x2BC4350
	0x03D1A374 TBZ X0, 0x0, 0x3D1A390
	0x03D1A378 LDR X0, [X19 + 0x20]
	0x03D1A37C CBZ X0, 0x3D1A3B8
	0x03D1A380 LDR X1, [X31 + 0x18]
	0x03D1A384 LDR X2, [X23]
	0x03D1A388 BL 0x2DBEF30
	0x03D1A38C B 0x3D1A368
	0x03D1A390 LDR X1, [X21]
	0x03D1A394 ADD X0, X31, 0x8
	0x03D1A398 BL 0x2BC434C
	0x03D1A39C MOVZ W8, 0x101
	0x03D1A3A0 STRH W8, [X19 + 0x30]
	0x03D1A3A4 LDP X20, X19, [X31 + 0x40]
	0x03D1A3A8 LDP X22, X21, [X31 + 0x30]
	0x03D1A3AC LDP X30, X23, [X31 + 0x20]
	0x03D1A3B0 ADD X31, X31, 0x50
	0x03D1A3B4 RET
	0x03D1A3B8 BL 0x1C16F20
	0x03D1A3BC BL 0x1C16F20
	0x03D1A3C0 B 0x3D1A3C8
	0x03D1A3C4 B 0x3D1A3C8
	0x03D1A3C8 MOV X20, X0
	0x03D1A3CC CMP W1, 0x1
	0x03D1A3D0 B.NE 0x3D1A404
	0x03D1A3D4 MOV X0, X20
	0x03D1A3D8 BL 0x3EB1AD0
	0x03D1A3DC LDR X21, [X0]
	0x03D1A3E0 BL 0x3EB1AE0
	0x03D1A3E4 ADRP X8, 0x44A000
	0x03D1A3E8 LDR X8, [X8 + 0x178]
	0x03D1A3EC ADD X0, X31, 0x8
	0x03D1A3F0 LDR X1, [X8]
	0x03D1A3F4 BL 0x2BC434C
	0x03D1A3F8 CBZ X21, 0x3D1A39C
	0x03D1A3FC MOV X0, X21
	0x03D1A400 BL 0x1C16F18
	0x03D1A404 MOV X21, X31
	0x03D1A408 B 0x3D1A410
	0x03D1A40C MOV X20, X0
	0x03D1A410 ADRP X8, 0x44A000
	0x03D1A414 LDR X8, [X8 + 0x178]
	0x03D1A418 LDR X1, [X8]
	0x03D1A41C ADD X0, X31, 0x8
	0x03D1A420 BL 0x2BC434C
	0x03D1A424 CBNZ X21, 0x3D1A430
	0x03D1A428 MOV X0, X20
	0x03D1A42C BL 0x1D2C690
	0x03D1A430 MOV X0, X21
	0x03D1A434 BL 0x1C16F18
	0x03D1A438 BL 0x1990590
	0x03D1A43C SUB X31, X31, 0x80
	0x03D1A440 STR X30, [X31 + 0x40]
	0x03D1A444 STP X24, X23, [X31 + 0x50]
	0x03D1A448 STP X22, X21, [X31 + 0x60]
	0x03D1A44C STP X20, X19, [X31 + 0x70]
	0x03D1A450 ADRP X21, 0x6CD000
	0x03D1A454 ADRP X20, 0x403000
	0x03D1A458 LDRB W8, [X21 + 0x92D]
	0x03D1A45C LDR X20, [X20 + 0xD08]
	0x03D1A460 MOV X19, X0
	0x03D1A464 TBNZ X8, 0x0, 0x3D1A4DC
	0x03D1A468 ADRP X0, 0x44A000
	0x03D1A46C LDR X0, [X0 + 0x1A0]
	0x03D1A470 BL 0x1C16CF4
	0x03D1A474 ADRP X0, 0x44A000
	0x03D1A478 LDR X0, [X0 + 0x178]
	0x03D1A47C BL 0x1C16CF4
	0x03D1A480 ADRP X0, 0x44A000
	0x03D1A484 LDR X0, [X0 + 0x180]
	0x03D1A488 BL 0x1C16CF4
	0x03D1A48C ADRP X0, 0x44A000
	0x03D1A490 LDR X0, [X0 + 0x188]
	0x03D1A494 BL 0x1C16CF4
	0x03D1A498 ADRP X0, 0x44A000
	0x03D1A49C LDR X0, [X0 + 0x1A8]
	0x03D1A4A0 BL 0x1C16CF4
	0x03D1A4A4 ADRP X0, 0x44A000
	0x03D1A4A8 LDR X0, [X0 + 0x1B0]
	0x03D1A4AC BL 0x1C16CF4
	0x03D1A4B0 ADRP X0, 0x44A000
	0x03D1A4B4 LDR X0, [X0 + 0x190]
	0x03D1A4B8 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6CE000
	007 Move W8, [X21+2331]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x404000
	015 Move X0, [X0+3424]
	016 Call 0x1C17CF4
	017 Move X0, 0x404000
	018 Move X0, [X0+3432]
	019 Call 0x1C17CF4
	020 Move X0, 0x44B000
	021 Move X0, [X0+232]
	022 Call 0x1C17CF4
	023 Move X0, 0x44B000
	024 Move X0, [X0+240]
	025 Call 0x1C17CF4
	026 Move X0, 0x44B000
	027 Move X0, [X0+248]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2331], W8
	031 Move W8, [X19+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 And W8, W20, 1
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X21, [X19+16]
	037 Move [X19+24], W8
	038 Compare X21, 0
	039 JumpIfEqual {164}
	040 Move X22, 0x44B000
	041 Move X8, [X21]
	042 Move X22, [X22+248]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X22]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move X0, X21
	054 Move W2, W31
	055 Call 0x1C5D788
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Return 
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Add X8, X8, X9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X1, [X0+8]
	067 Move X0, X21
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Compare X0, 0
	070 JumpIfEqual {164}
	071 Move X1, [X19+32]
	072 Move TEMP, X20
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {98}
	076 Move X8, 0x404000
	077 Move X8, [X8+3424]
	078 Move W2, W31
	079 Move X3, [X8]
	080 Call 0x21A2534, X0, X1, X2
	081 Move X20, [X19+16]
	082 Compare X20, 0
	083 JumpIfEqual {164}
	084 Move X8, [X20]
	085 Move X1, [X22]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move X0, X20
	096 Move W2, W31
	097 Call 0x1C5D788
	098 Move X8, 0x44B000
	099 Move X8, [X8+232]
	100 Move W2, W31
	101 Move X3, [X8]
	102 Call 0x21A28B4, X0, X1, X2
	103 Move X20, [X19+16]
	104 Compare X20, 0
	105 JumpIfEqual {164}
	106 Move X8, [X20]
	107 Move X1, [X22]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move X0, X20
	118 Move W2, W31
	119 Call 0x1C5D788
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Add X8, X8, X9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X1, [X0+8]
	125 Move X0, X20
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Compare X0, 0
	128 JumpIfEqual {164}
	129 Move X8, 0x404000
	130 Move X1, [X19+40]
	131 Move X8, [X8+3432]
	132 Move W2, W31
	133 Move X3, [X8]
	134 Call 0x21A2534, X0, X1, X2
	135 Move X0, X19
	136 Move X20, [X31+32]
	137 Move X19, [X31+40]
	138 Move X22, [X31+16]
	139 Move X21, [X31+24]
	140 Move X30, [X31+48]
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X20
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Compare X0, 0
	149 JumpIfEqual {164}
	150 Move X8, 0x44B000
	151 Move X1, [X19+40]
	152 Move X8, [X8+240]
	153 Move W2, W31
	154 Move X3, [X8]
	155 Call 0x21A28B4, X0, X1, X2
	156 Move X0, X19
	157 Move X20, [X31+32]
	158 Move X19, [X31+40]
	159 Move X22, [X31+16]
	160 Move X21, [X31+24]
	161 Move X30, [X31+48]
	162 Call VisualElementPanelActivator.SendDeactivation, X0
	163 Return 
	164 Call 0x1C17F20

Method: System.Void SendActivation()

Disassembly:
	0x03D1A4BC ADRP X0, 0x403000
	0x03D1A4C0 LDR X0, [X0 + 0xD08]
	0x03D1A4C4 BL 0x1C16CF4
	0x03D1A4C8 ADRP X0, 0x44A000
	0x03D1A4CC LDR X0, [X0 + 0x168]
	0x03D1A4D0 BL 0x1C16CF4
	0x03D1A4D4 MOVZ W8, 0x1
	0x03D1A4D8 STRB W8, [X21 + 0x92D]
	0x03D1A4DC LDR X0, [X20]
	0x03D1A4E0 STP X31, X31, [X31 + 0x20]
	0x03D1A4E4 STR X31, [X31 + 0x30]
	0x03D1A4E8 LDR W8, [X0 + 0xE0]
	0x03D1A4EC CBNZ W8, 0x3D1A4F4
	0x03D1A4F0 BL 0x1C16DFC
	0x03D1A4F4 MOV X0, X31
	0x03D1A4F8 BL 0x3DBD7F8
	0x03D1A4FC LDRB W8, [X19 + 0x31]
	0x03D1A500 MOV X20, X0
	0x03D1A504 CBZ W8, 0x3D1A524
	0x03D1A508 ADRP X8, 0x44A000
	0x03D1A50C LDR X8, [X8 + 0x1A0]
	0x03D1A510 LDR X0, [X19 + 0x20]
	0x03D1A514 LDR X1, [X8]
	0x03D1A518 BL 0x21D79F4
	0x03D1A51C STR X0, [X19 + 0x28]
	0x03D1A520 STRB W31, [X19 + 0x31]
	0x03D1A524 LDRB W8, [X19 + 0x30]
	0x03D1A528 CBNZ W8, 0x3D1A538
	0x03D1A52C LDR X8, [X19 + 0x38]
	0x03D1A530 CMP X8, X20
	0x03D1A534 B.EQ 0x3D1A608
	0x03D1A538 LDR X0, [X19 + 0x28]
	0x03D1A53C CBZ X0, 0x3D1A74C
	0x03D1A540 ADRP X8, 0x44A000
	0x03D1A544 LDR X8, [X8 + 0x190]
	0x03D1A548 ADRP X23, 0x44A000
	0x03D1A54C ADRP X24, 0x44A000
	0x03D1A550 ADRP X22, 0x44A000
	0x03D1A554 LDR X1, [X8]
	0x03D1A558 LDR X23, [X23 + 0x180]
	0x03D1A55C LDR X24, [X24 + 0x1B0]
	0x03D1A560 LDR X22, [X22 + 0x178]
	0x03D1A564 ADD X8, X31, 0x8
	0x03D1A568 BL 0x301CB58
	0x03D1A56C LDUR V0, [X31 + 0x8]
	0x03D1A570 LDR X8, [X31 + 0x18]
	0x03D1A574 STR V0, [X31 + 0x2]
	0x03D1A578 STR X8, [X31 + 0x30]
	0x03D1A57C LDR X1, [X23]
	0x03D1A580 ADD X0, X31, 0x20
	0x03D1A584 BL 0x2BC4350
	0x03D1A588 TBZ X0, 0x0, 0x3D1A5F4
	0x03D1A58C LDR X21, [X31 + 0x30]
	0x03D1A590 CBZ X21, 0x3D1A744
	0x03D1A594 LDR X8, [X21]
	0x03D1A598 LDR X1, [X24]
	0x03D1A59C LDRH W9, [X8 + 0x12E]
	0x03D1A5A0 CBZ X9, 0x3D1A5C4
	0x03D1A5A4 LDR X10, [X8 + 0xB0]
	0x03D1A5A8 ADD X10, X10, 0x8
	0x03D1A5AC LDUR X11, [X10 - 0x8]
	0x03D1A5B0 CMP X11, X1
	0x03D1A5B4 B.EQ 0x3D1A5D4
	0x03D1A5B8 SUBS X9, X9, 0x1
	0x03D1A5BC ADD X10, X10, 0x10
	0x03D1A5C0 B.NE 0x3D1A5AC
	0x03D1A5C4 MOV X0, X21
	0x03D1A5C8 MOV W2, W31
	0x03D1A5CC BL 0x1C5C788
	0x03D1A5D0 B 0x3D1A5E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6CE000
	006 Move W8, [X20+2332]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x44B000
	013 Move X0, [X0+248]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2332], W8
	017 Move X20, [X19+16]
	018 Compare X20, 0
	019 JumpIfEqual {82}
	020 Move X21, 0x44B000
	021 Move X8, [X20]
	022 Move X21, [X21+248]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X1, [X21]
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move W2, 1
	034 Move X0, X20
	035 Call 0x1C5D788
	036 Move W9, [X10]
	037 Add W9, W9, 1
	038 Add X8, X8, W9
	039 Add X0, X8, 312
	040 Move X8, [X0]
	041 Move X1, [X0+8]
	042 Move X0, X20
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {65}
	048 Move X19, [X19+16]
	049 Compare X19, 0
	050 JumpIfEqual {82}
	051 Move X8, [X19]
	052 Move X1, [X21]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move W2, 2
	063 Move X0, X19
	064 Call 0x1C5D788
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Return 
	070 Move W9, [X10]
	071 Add W9, W9, 2
	072 Add X8, X8, W9
	073 Add X0, X8, 312
	074 Move X2, [X0]
	075 Move X1, [X0+8]
	076 Move X0, X19
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 CallNoReturn X2
	082 Call 0x1C17F20

Method: System.Void SendDeactivation()

Disassembly:
	0x03D1A5D4 LDRSW X9, [X10]
	0x03D1A5D8 ADD X8, X8, X9, 0x4, LSL
	0x03D1A5DC ADD X0, X8, 0x138
	0x03D1A5E0 LDP X8, X2, [X0]
	0x03D1A5E4 MOV X0, X21
	0x03D1A5E8 MOV X1, X20
	0x03D1A5EC BLR X8
	0x03D1A5F0 B 0x3D1A57C
	0x03D1A5F4 LDR X1, [X22]
	0x03D1A5F8 ADD X0, X31, 0x20
	0x03D1A5FC BL 0x2BC434C
	0x03D1A600 STRB W31, [X19 + 0x30]
	0x03D1A604 STR X20, [X19 + 0x38]
	0x03D1A608 LDR X0, [X19 + 0x18]
	0x03D1A60C CBZ X0, 0x3D1A74C
	0x03D1A610 LDR X8, [X0]
	0x03D1A614 ADRP X19, 0x44A000
	0x03D1A618 LDR X9, [X8 + 0x3D8]
	0x03D1A61C LDR X1, [X8 + 0x3E0]
	0x03D1A620 LDR X19, [X19 + 0x168]
	0x03D1A624 BLR X9
	0x03D1A628 LDR X8, [X19]
	0x03D1A62C MOV X20, X0
	0x03D1A630 LDR W9, [X8 + 0xE0]
	0x03D1A634 CBNZ W9, 0x3D1A640
	0x03D1A638 MOV X0, X8
	0x03D1A63C BL 0x1C16DFC
	0x03D1A640 ADRP X21, 0x6CD000
	0x03D1A644 LDRB W8, [X21 + 0xAB3]
	0x03D1A648 CBNZ W8, 0x3D1A660
	0x03D1A64C ADRP X0, 0x44A000
	0x03D1A650 LDR X0, [X0 + 0x168]
	0x03D1A654 BL 0x1C16CF4
	0x03D1A658 MOVZ W8, 0x1
	0x03D1A65C STRB W8, [X21 + 0xAB3]
	0x03D1A660 LDR X0, [X19]
	0x03D1A664 LDR W8, [X0 + 0xE0]
	0x03D1A668 CBNZ W8, 0x3D1A674
	0x03D1A66C BL 0x1C16DFC
	0x03D1A670 LDR X0, [X19]
	0x03D1A674 LDR X8, [X0 + 0xB8]
	0x03D1A678 MOV X1, X31
	0x03D1A67C MOV X2, X31
	0x03D1A680 LDR X19, [X8 + 0x18]
	0x03D1A684 MOV X0, X19
	0x03D1A688 BL 0x33C5D2C
	0x03D1A68C TBZ X0, 0x0, 0x3D1A69C
	0x03D1A690 MOV X0, X19
	0x03D1A694 MOV X1, X31
	0x03D1A698 BL 0x3BFE970
	0x03D1A69C CBZ X20, 0x3D1A750
	0x03D1A6A0 ADRP X10, 0x44A000
	0x03D1A6A4 LDR X8, [X20]
	0x03D1A6A8 LDR X10, [X10 + 0x1A8]
	0x03D1A6AC LDRH W9, [X8 + 0x12E]
	0x03D1A6B0 LDR X1, [X10]
	0x03D1A6B4 CBZ X9, 0x3D1A6D8
	0x03D1A6B8 LDR X10, [X8 + 0xB0]
	0x03D1A6BC ADD X10, X10, 0x8
	0x03D1A6C0 LDUR X11, [X10 - 0x8]
	0x03D1A6C4 CMP X11, X1
	0x03D1A6C8 B.EQ 0x3D1A6E8
	0x03D1A6CC SUBS X9, X9, 0x1
	0x03D1A6D0 ADD X10, X10, 0x10
	0x03D1A6D4 B.NE 0x3D1A6C0
	0x03D1A6D8 MOVZ W2, 0x14
	0x03D1A6DC MOV X0, X20
	0x03D1A6E0 BL 0x1C5C788
	0x03D1A6E4 B 0x3D1A6F8
	0x03D1A6E8 LDR W9, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6CE000
	006 Move W8, [X20+2333]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x44B000
	013 Move X0, [X0+248]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2333], W8
	017 Move X20, [X19+16]
	018 Compare X20, 0
	019 JumpIfEqual {82}
	020 Move X21, 0x44B000
	021 Move X8, [X20]
	022 Move X21, [X21+248]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X1, [X21]
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move W2, 1
	034 Move X0, X20
	035 Call 0x1C5D788
	036 Move W9, [X10]
	037 Add W9, W9, 1
	038 Add X8, X8, W9
	039 Add X0, X8, 312
	040 Move X8, [X0]
	041 Move X1, [X0+8]
	042 Move X0, X20
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {65}
	048 Move X19, [X19+16]
	049 Compare X19, 0
	050 JumpIfEqual {82}
	051 Move X8, [X19]
	052 Move X1, [X21]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move W2, 3
	063 Move X0, X19
	064 Call 0x1C5D788
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Return 
	070 Move W9, [X10]
	071 Add W9, W9, 3
	072 Add X8, X8, W9
	073 Add X0, X8, 312
	074 Move X2, [X0]
	075 Move X1, [X0+8]
	076 Move X0, X19
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 CallNoReturn X2
	082 Call 0x1C17F20

Method: System.Void OnEnter(UnityEngine.UIElements.AttachToPanelEvent evt)

Disassembly:
	0x03D1A6EC ADD W9, W9, 0x14
	0x03D1A6F0 ADD X8, X8, W9, 0x4, SXTW
	0x03D1A6F4 ADD X0, X8, 0x138
	0x03D1A6F8 LDP X8, X1, [X0]

ISIL:
	001 Move W8, [X0+24]
	002 Compare W8, 0
	003 JumpIfEqual {6}
	004 Call VisualElementPanelActivator.SendActivation, X0
	005 Return 
	006 Return 

Method: System.Void OnLeave(UnityEngine.UIElements.DetachFromPanelEvent evt)

Disassembly:
	0x03D1A6FC MOV X0, X20
	0x03D1A700 BLR X8
	0x03D1A704 MOV X20, X31
	0x03D1A708 MOV X0, X19
	0x03D1A70C MOV X1, X31
	0x03D1A710 MOV X2, X31
	0x03D1A714 BL 0x33C5D2C
	0x03D1A718 TBZ X0, 0x0, 0x3D1A728
	0x03D1A71C MOV X0, X19
	0x03D1A720 MOV X1, X31
	0x03D1A724 BL 0x3BFEA0C
	0x03D1A728 CBNZ X20, 0x3D1A754
	0x03D1A72C LDP X20, X19, [X31 + 0x70]
	0x03D1A730 LDP X22, X21, [X31 + 0x60]
	0x03D1A734 LDP X24, X23, [X31 + 0x50]
	0x03D1A738 LDR X30, [X31 + 0x40]
	0x03D1A73C ADD X31, X31, 0x80
	0x03D1A740 RET
	0x03D1A744 MOV X23, X22
	0x03D1A748 BL 0x1C16F20
	0x03D1A74C BL 0x1C16F20
	0x03D1A750 BL 0x1C16F20
	0x03D1A754 MOV X0, X20
	0x03D1A758 BL 0x1C16F18
	0x03D1A75C CMP W1, 0x1
	0x03D1A760 MOV X21, X0
	0x03D1A764 B.NE 0x3D1A77C
	0x03D1A768 MOV X0, X21
	0x03D1A76C BL 0x3EB1AD0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+24]
	005 Compare W8, 0
	006 JumpIfEqual {12}
	007 Move X19, X0
	008 Move W8, 1
	009 Move [X0+25], W8
	010 Call VisualElementPanelActivator.SendDeactivation, X0
	011 Move [X19+25], W31
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Call 0x3EB2AD0
	018 Move X20, [X0]
	019 Call 0x3EB2AE0
	020 Move [X19+25], W31
	021 Compare X20, 0
	022 JumpIfEqual {12}
	023 Move X0, X20
	024 Call 0x1C17F18
	025 Move [X19+25], W31
	026 Move [X19+25], W31
	027 Compare X20, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1D2D690
	030 Move X0, X20
	031 Call 0x1C17F18
	032 Call 0x1991590

