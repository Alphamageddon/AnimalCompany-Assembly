Type: UnityEngine.UIElements.CommandEventBase`1

Method: System.String get_commandName()

Disassembly:
	0x02901038 LDR X8, [X20]
	0x0290103C LDR X1, [X23]
	0x02901040 LDRB W10, [X8 + 0x130]
	0x02901044 LDRB W9, [X1 + 0x130]
	0x02901048 CMP W10, W9
	0x0290104C B.CC 0x290134C
	0x02901050 LDR X8, [X8 + 0xC8]
	0x02901054 ADD X8, X8, X9, 0x3, LSL
	0x02901058 LDUR X8, [X8 - 0x8]
	0x0290105C CMP X8, X1
	0x02901060 B.NE 0x290134C
	0x02901064 LDR X0, [X19 + 0x20]
	0x02901068 LDRB W8, [X0 + 0x135]
	0x0290106C TBNZ X8, 0x0, 0x2901074
	0x02901070 BL 0x1C5C684
	0x02901074 LDR X8, [X0 + 0xC0]
	0x02901078 MOV X1, X31
	0x0290107C LDR X0, [X8 + 0x28]
	0x02901080 BL 0x338C698
	0x02901084 CBZ X0, 0x2901348

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+136]
	005 Compare X0, 0
	006 JumpIfEqual {10}
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, X19
	011 Move X1, X31
	012 Call EventBase.get_imguiEvent, X0
	013 Compare X0, 0
	014 JumpIfEqual {25}
	015 Move X0, X19
	016 Move X1, X31
	017 Call EventBase.get_imguiEvent, X0
	018 Compare X0, 0
	019 JumpIfEqual {26}
	020 Move X1, X31
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Call Event.get_commandName, X0
	024 Return X0
	025 Move X0, [X19+136]
	026 Call 0x1C17F20

Method: System.Void set_commandName(System.String value)

Disassembly:
	0x02901088 LDR X8, [X0]
	0x0290108C MOV X1, X20

ISIL:
	001 Move [X0+136], X1
	002 Return 

Method: System.Void Init()

Disassembly:
	0x02901090 LDR X9, [X8 + 0x2A8]
	0x02901094 LDR X2, [X8 + 0x2B0]
	0x02901098 BLR X9
	0x0290109C TBZ X0, 0x0, 0x290115C
	0x029010A0 ADRP X8, 0x181D000
	0x029010A4 LDR X0, [X24]
	0x029010A8 LDR X8, [X8 + 0x220]
	0x029010AC LDR W9, [X0 + 0xE0]
	0x029010B0 LDR X21, [X8]
	0x029010B4 CBNZ W9, 0x29010BC
	0x029010B8 BL 0x1C16DFC
	0x029010BC MOV X0, X21
	0x029010C0 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {16}
	005 Move X8, [X1+32]
	006 Move X19, X0
	007 Move X8, [X8+192]
	008 Move X1, [X8+8]
	009 Call 0x2D0E634, X0
	010 Move W8, 7
	011 Move [X19+48], W8
	012 Move [X19+136], X31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return 
	016 Call 0x1C17F20

Method: System.Void LocalInit()

Disassembly:
	0x029010C4 BL 0x338C698
	0x029010C8 LDR X8, [X23]
	0x029010CC MOV X21, X0
	0x029010D0 LDR W9, [X8 + 0xE0]
	0x029010D4 CBNZ W9, 0x29010E0
	0x029010D8 MOV X0, X8
	0x029010DC BL 0x1C16DFC
	0x029010E0 MOV X0, X21

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move W8, 7
	005 Move [X0+48], W8
	006 Move [X0+136], X31
	007 Move X30, [X31+16]
	008 Return 
	009 Call 0x1C17F20

Method: T GetPooled(UnityEngine.Event systemEvent)

Disassembly:
	0x029010E4 MOV X1, X20
	0x029010E8 MOV X2, X31
	0x029010EC BL 0x33BCFB0
	0x029010F0 LDR X8, [X19 + 0x20]
	0x029010F4 MOV X19, X0
	0x029010F8 LDRB W9, [X8 + 0x135]
	0x029010FC TBNZ X9, 0x0, 0x290110C
	0x02901100 MOV X0, X8
	0x02901104 BL 0x1C5C684
	0x02901108 MOV X8, X0
	0x0290110C LDR X8, [X8 + 0xC0]
	0x02901110 LDR X1, [X8]
	0x02901114 LDRB W8, [X1 + 0x135]
	0x02901118 TBNZ X8, 0x0, 0x2901128
	0x0290111C MOV X0, X1
	0x02901120 BL 0x1C5C684
	0x02901124 MOV X1, X0
	0x02901128 CBZ X19, 0x2901330
	0x0290112C LDR X8, [X19]
	0x02901130 LDRB W9, [X1 + 0x130]
	0x02901134 LDRB W10, [X8 + 0x130]
	0x02901138 CMP W10, W9
	0x0290113C B.CC 0x2901154
	0x02901140 LDR X8, [X8 + 0xC8]
	0x02901144 ADD X8, X8, X9, 0x3, LSL
	0x02901148 LDUR X8, [X8 - 0x8]
	0x0290114C CMP X8, X1
	0x02901150 B.EQ 0x2901330
	0x02901154 MOV X0, X19
	0x02901158 BL 0x1C171E0
	0x0290115C CBZ X20, 0x2901348
	0x02901160 LDR X8, [X20]
	0x02901164 MOV X0, X20
	0x02901168 LDR X9, [X8 + 0x3C8]
	0x0290116C LDR X1, [X8 + 0x3D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, X1
	006 Move X19, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, [X8+40]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, [X20+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X0, [X8+32]
	036 Call 0x2D0E6C4
	037 Compare X0, 0
	038 JumpIfEqual {48}
	039 Move X1, X19
	040 Move X2, X31
	041 Move X20, X0
	042 Call EventBase.set_imguiEvent, X0, X1
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return X0
	048 Call 0x1C17F20

Method: T GetPooled(System.String commandName)

Disassembly:
	0x02901170 BLR X9
	0x02901174 TBZ X0, 0x0, 0x29012DC
	0x02901178 LDR X8, [X20]
	0x0290117C MOV X0, X20
	0x02901180 LDR X9, [X8 + 0x448]
	0x02901184 LDR X1, [X8 + 0x450]
	0x02901188 BLR X9
	0x0290118C ADRP X9, 0x181D000
	0x02901190 LDR X8, [X24]
	0x02901194 LDR X9, [X9 + 0x238]
	0x02901198 MOV X21, X0
	0x0290119C LDR W10, [X8 + 0xE0]
	0x029011A0 LDR X22, [X9]
	0x029011A4 CBNZ W10, 0x29011B0
	0x029011A8 MOV X0, X8
	0x029011AC BL 0x1C16DFC
	0x029011B0 MOV X0, X22
	0x029011B4 MOV X1, X31
	0x029011B8 BL 0x338C698
	0x029011BC MOV X1, X0
	0x029011C0 MOV X0, X21
	0x029011C4 MOV X2, X31
	0x029011C8 BL 0x3395194
	0x029011CC TBZ X0, 0x0, 0x29012DC
	0x029011D0 LDR X8, [X20]
	0x029011D4 MOV X0, X20
	0x029011D8 LDR X9, [X8 + 0x468]
	0x029011DC LDR X1, [X8 + 0x470]
	0x029011E0 BLR X9
	0x029011E4 CBZ X0, 0x2901348
	0x029011E8 LDR W8, [X0 + 0x18]
	0x029011EC CBZ W8, 0x2901354
	0x029011F0 LDR X20, [X0 + 0x20]
	0x029011F4 CBZ X20, 0x2901224
	0x029011F8 LDR X8, [X20]
	0x029011FC LDR X1, [X23]
	0x02901200 LDRB W10, [X8 + 0x130]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X20, X1
	007 Move X19, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, [X8+40]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, [X20+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X0, [X8+32]
	037 Call 0x2D0E6C4
	038 Compare X0, 0
	039 JumpIfEqual {55}
	040 Move X21, X0
	041 Move X0, [X20+32]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move [X21+136], X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X0, X21
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return X0
	055 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x02901204 LDRB W9, [X1 + 0x130]
	0x02901208 CMP W10, W9
	0x0290120C B.CC 0x290134C
	0x02901210 LDR X8, [X8 + 0xC8]
	0x02901214 ADD X8, X8, X9, 0x3, LSL
	0x02901218 LDUR X8, [X8 - 0x8]
	0x0290121C CMP X8, X1
	0x02901220 B.NE 0x290134C
	0x02901224 ADRP X8, 0x181D000
	0x02901228 LDR X0, [X24]
	0x0290122C LDR X8, [X8 + 0x228]
	0x02901230 LDR W9, [X0 + 0xE0]
	0x02901234 LDR X21, [X8]
	0x02901238 CBNZ W9, 0x2901240
	0x0290123C BL 0x1C16DFC
	0x02901240 MOV X0, X21
	0x02901244 MOV X1, X31
	0x02901248 BL 0x338C698
	0x0290124C ADRP X8, 0x17FA000
	0x02901250 LDR X8, [X8 + 0xC60]
	0x02901254 MOV X21, X0
	0x02901258 MOVZ W1, 0x1
	0x0290125C LDR X8, [X8]
	0x02901260 MOV X0, X8
	0x02901264 BL 0x1C16D6C
	0x02901268 CBZ X0, 0x2901348
	0x0290126C MOV X22, X0
	0x02901270 CBZ X20, 0x2901288
	0x02901274 LDR X8, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, X1
	006 Move X19, X0
	007 Move X8, [X8+192]
	008 Move X8, [X8+40]
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move W9, [X8+224]
	018 Compare W9, 0
	019 JumpIfNotEqual {22}
	020 Move X0, X8
	021 Call 0x1C17DFC
	022 Move X8, [X20+32]
	023 Move X0, X19
	024 Move X8, [X8+192]
	025 Move X1, [X8+56]
	026 Call 0x2D0E54C, X0
	027 Compare X19, 0
	028 JumpIfEqual {36}
	029 Move W8, 7
	030 Move [X19+48], W8
	031 Move [X19+136], X31
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return 
	036 Call 0x1C17F20

