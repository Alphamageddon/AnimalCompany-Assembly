Type: UnityEngine.UIElements.VisualElement/Hierarchy

Method: UnityEngine.UIElements.VisualElement get_parent()

Disassembly:
	0x03DF98DC RET
	0x03DF98E0 BL 0x1C16F20
	0x03DF98E4 STP X30, X21, [X31 - 0x20]!
	0x03DF98E8 STP X20, X19, [X31 + 0x10]
	0x03DF98EC ADRP X21, 0x5EF000
	0x03DF98F0 LDRB W8, [X21 + 0x294]
	0x03DF98F4 MOV W19, W1

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+904]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> get_children()

Disassembly:
	0x03DF98F8 MOV X20, X0
	0x03DF98FC TBNZ X8, 0x0, 0x3DF9914
	0x03DF9900 ADRP X0, 0x323000
	0x03DF9904 LDR X0, [X0 + 0xF0]
	0x03DF9908 BL 0x1C16CF4
	0x03DF990C MOVZ W8, 0x1
	0x03DF9910 STRB W8, [X21 + 0x294]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+920]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void .ctor(UnityEngine.UIElements.VisualElement element)

Disassembly:
	0x03DF9914 LDR X8, [X20]
	0x03DF9918 CBZ X8, 0x3DF9940

ISIL:
	001 Move [X0], X1
	002 Return 

Method: System.Void Add(UnityEngine.UIElements.VisualElement child)

Disassembly:
	0x03DF991C LDR X0, [X8 + 0x398]
	0x03DF9920 CBZ X0, 0x3DF9940
	0x03DF9924 ADRP X8, 0x323000
	0x03DF9928 LDR X8, [X8 + 0xF0]
	0x03DF992C MOV W1, W19
	0x03DF9930 LDP X20, X19, [X31 + 0x10]
	0x03DF9934 LDR X2, [X8]
	0x03DF9938 LDP X30, X21, [X31], #0x20
	0x03DF993C B 0x301BCCC
	0x03DF9940 BL 0x1C16F20
	0x03DF9944 STP X30, X21, [X31 - 0x20]!
	0x03DF9948 STP X20, X19, [X31 + 0x10]
	0x03DF994C ADRP X21, 0x5EF000
	0x03DF9950 LDRB W8, [X21 + 0x295]
	0x03DF9954 MOV X19, X1
	0x03DF9958 MOV X20, X0
	0x03DF995C TBNZ X8, 0x0, 0x3DF9974
	0x03DF9960 ADRP X0, 0x370000
	0x03DF9964 LDR X0, [X0 + 0xBC0]
	0x03DF9968 BL 0x1C16CF4
	0x03DF996C MOVZ W8, 0x1
	0x03DF9970 STRB W8, [X21 + 0x295]
	0x03DF9974 LDR X8, [X20]
	0x03DF9978 CBZ X8, 0x3DF99A0
	0x03DF997C LDR X0, [X8 + 0x398]
	0x03DF9980 CBZ X0, 0x3DF99A0
	0x03DF9984 ADRP X8, 0x370000
	0x03DF9988 LDR X8, [X8 + 0xBC0]
	0x03DF998C MOV X1, X19
	0x03DF9990 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {17}
	006 Move X19, X1
	007 Move X20, X0
	008 Call Hierarchy.get_childCount, X0
	009 Move W1, W0
	010 Move X0, X20
	011 Move X2, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Call Hierarchy.Insert, X0, X1, X2
	016 Return 
	017 Move X0, 0x303000
	018 Move X0, [X0+1400]
	019 Call 0x1C17D08
	020 Call 0x1C17F10
	021 Move X19, X0
	022 Move X0, 0x371000
	023 Move X0, [X0+2944]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Move X2, X31
	028 Call ArgumentException..ctor, X0, X1
	029 Move X0, 0x371000
	030 Move X0, [X0+2952]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X19
	034 Call 0x1C17DEC

Method: System.Void Insert(System.Int32 index, UnityEngine.UIElements.VisualElement child)

Disassembly:
	0x03DF99E4 STP X20, X19, [X31 + 0x10]
	0x03DF99E8 ADRP X21, 0x5EF000
	0x03DF99EC LDRB W8, [X21 + 0x299]
	0x03DF99F0 MOV X20, X1
	0x03DF99F4 MOV X19, X0
	0x03DF99F8 TBNZ X8, 0x0, 0x3DF9A10
	0x03DF99FC ADRP X0, 0x370000
	0x03DF9A00 LDR X0, [X0 + 0xC00]
	0x03DF9A04 BL 0x1C16CF4
	0x03DF9A08 MOVZ W8, 0x1
	0x03DF9A0C STRB W8, [X21 + 0x299]
	0x03DF9A10 CBZ X20, 0x3DF9A2C
	0x03DF9A14 ADRP X8, 0x370000
	0x03DF9A18 LDR X8, [X8 + 0xC00]
	0x03DF9A1C LDR X9, [X20]
	0x03DF9A20 LDR X8, [X8]
	0x03DF9A24 CMP X9, X8
	0x03DF9A28 B.EQ 0x3DF9A34
	0x03DF9A2C MOV W0, W31
	0x03DF9A30 B 0x3DF9A4C
	0x03DF9A34 MOV X0, X20
	0x03DF9A38 BL 0x1C16E08
	0x03DF9A3C LDR X8, [X0]
	0x03DF9A40 LDR X9, [X19]
	0x03DF9A44 CMP X9, X8
	0x03DF9A48 CSET W0, EQ
	0x03DF9A4C LDP X20, X19, [X31 + 0x10]
	0x03DF9A50 LDP X30, X21, [X31], #0x20
	0x03DF9A54 RET
	0x03DF9A58 LDR X0, [X0]
	0x03DF9A5C CBZ X0, 0x3DF9A6C
	0x03DF9A60 LDR X8, [X0]
	0x03DF9A64 LDP X2, X1, [X8 + 0x158]
	0x03DF9A68 BR X2
	0x03DF9A6C RET
	0x03DF9A70 LDR X0, [X0 + 0x38]
	0x03DF9A74 RET
	0x03DF9A78 STR X1, [X0 + 0x38]
	0x03DF9A7C RET
	0x03DF9A80 STR X30, [X31 - 0x30]!
	0x03DF9A84 STP X22, X21, [X31 + 0x10]
	0x03DF9A88 STP X20, X19, [X31 + 0x20]
	0x03DF9A8C ADRP X22, 0x5EF000
	0x03DF9A90 ADRP X21, 0x370000
	0x03DF9A94 LDRB W8, [X22 + 0x29A]
	0x03DF9A98 LDR X21, [X21 + 0x5B8]
	0x03DF9A9C MOV X20, X1
	0x03DF9AA0 MOV X19, X0
	0x03DF9AA4 TBNZ X8, 0x0, 0x3DF9AC8
	0x03DF9AA8 ADRP X0, 0x370000
	0x03DF9AAC LDR X0, [X0 + 0x5B8]
	0x03DF9AB0 BL 0x1C16CF4
	0x03DF9AB4 ADRP X0, 0x370000
	0x03DF9AB8 LDR X0, [X0 + 0xC08]
	0x03DF9ABC BL 0x1C16CF4
	0x03DF9AC0 MOVZ W8, 0x1
	0x03DF9AC4 STRB W8, [X22 + 0x29A]
	0x03DF9AC8 STRB W31, [X19 + 0x40]
	0x03DF9ACC LDR X0, [X21]
	0x03DF9AD0 ADRP X21, 0x370000
	0x03DF9AD4 LDR W8, [X0 + 0xE0]
	0x03DF9AD8 LDR X21, [X21 + 0xC08]
	0x03DF9ADC CBNZ W8, 0x3DF9AE4
	0x03DF9AE0 BL 0x1C16DFC
	0x03DF9AE4 MOV X0, X19
	0x03DF9AE8 MOV X1, X31
	0x03DF9AEC BL 0x3DE1368
	0x03DF9AF0 STR X20, [X19 + 0x38]
	0x03DF9AF4 LDR X0, [X21]
	0x03DF9AF8 BL 0x1C16F10
	0x03DF9AFC MOV X1, X19
	0x03DF9B00 MOV X2, X31
	0x03DF9B04 MOV X20, X0
	0x03DF9B08 BL 0x3D1918C
	0x03DF9B0C STR X20, [X19 + 0x48]
	0x03DF9B10 LDP X20, X19, [X31 + 0x20]
	0x03DF9B14 LDP X22, X21, [X31 + 0x10]
	0x03DF9B18 LDR X30, [X31], #0x30
	0x03DF9B1C RET
	0x03DF9B20 STR X1, [X0 + 0x20]
	0x03DF9B24 RET
	0x03DF9B28 STR X30, [X31 - 0x30]!
	0x03DF9B2C STP X22, X21, [X31 + 0x10]
	0x03DF9B30 STP X20, X19, [X31 + 0x20]
	0x03DF9B34 ADRP X22, 0x5EF000
	0x03DF9B38 ADRP X21, 0x370000
	0x03DF9B3C LDRB W8, [X22 + 0x29B]
	0x03DF9B40 LDR X21, [X21 + 0x5B8]
	0x03DF9B44 MOV X20, X1
	0x03DF9B48 MOV X19, X0
	0x03DF9B4C TBNZ X8, 0x0, 0x3DF9B64
	0x03DF9B50 ADRP X0, 0x370000
	0x03DF9B54 LDR X0, [X0 + 0x5B8]
	0x03DF9B58 BL 0x1C16CF4
	0x03DF9B5C MOVZ W8, 0x1
	0x03DF9B60 STRB W8, [X22 + 0x29B]
	0x03DF9B64 STR X20, [X19 + 0x28]
	0x03DF9B68 LDR X0, [X21]
	0x03DF9B6C LDR X20, [X19 + 0x10]
	0x03DF9B70 LDR W8, [X0 + 0xE0]
	0x03DF9B74 CBNZ W8, 0x3DF9B80
	0x03DF9B78 BL 0x1C16DFC
	0x03DF9B7C LDR X0, [X21]
	0x03DF9B80 LDR X8, [X0 + 0xB8]
	0x03DF9B84 MOV X0, X20
	0x03DF9B88 MOV X2, X31
	0x03DF9B8C LDR X1, [X8]
	0x03DF9B90 BL 0x33C60F0
	0x03DF9B94 TBZ X0, 0x0, 0x3DF9BB8
	0x03DF9B98 LDR X0, [X21]
	0x03DF9B9C LDR W8, [X0 + 0xE0]
	0x03DF9BA0 CBNZ W8, 0x3DF9BAC
	0x03DF9BA4 BL 0x1C16DFC
	0x03DF9BA8 LDR X0, [X21]
	0x03DF9BAC LDR X8, [X0 + 0xB8]
	0x03DF9BB0 LDR X8, [X8 + 0x8]
	0x03DF9BB4 STR X8, [X19 + 0x10]
	0x03DF9BB8 MOV X0, X19
	0x03DF9BBC LDP X20, X19, [X31 + 0x20]
	0x03DF9BC0 LDP X22, X21, [X31 + 0x10]
	0x03DF9BC4 LDR X30, [X31], #0x30
	0x03DF9BC8 RET
	0x03DF9BCC STP X30, X19, [X31 - 0x10]!
	0x03DF9BD0 MOV X1, X31
	0x03DF9BD4 MOV X19, X0
	0x03DF9BD8 BL 0x3DE1438
	0x03DF9BDC LDR X0, [X19 + 0x48]
	0x03DF9BE0 STRB W31, [X19 + 0x40]
	0x03DF9BE4 CBZ X0, 0x3DF9C08
	0x03DF9BE8 LDRB W8, [X0 + 0x19]
	0x03DF9BEC CBZ W8, 0x3DF9BF8
	0x03DF9BF0 LDP X30, X19, [X31], #0x10
	0x03DF9BF4 RET
	0x03DF9BF8 MOV W1, W31
	0x03DF9BFC MOV X2, X31
	0x03DF9C00 LDP X30, X19, [X31], #0x10
	0x03DF9C04 B 0x3D1926C
	0x03DF9C08 BL 0x1C16F20
	0x03DF9C0C STR X30, [X31 - 0x10]!
	0x03DF9C10 LDR X0, [X0 + 0x48]
	0x03DF9C14 CBZ X0, 0x3DF9C28
	0x03DF9C18 MOVZ W1, 0x1
	0x03DF9C1C MOV X2, X31
	0x03DF9C20 LDR X30, [X31], #0x10
	0x03DF9C24 B 0x3D1926C
	0x03DF9C28 BL 0x1C16F20
	0x03DF9C2C STR X30, [X31 - 0x10]!
	0x03DF9C30 LDR X0, [X0 + 0x48]
	0x03DF9C34 CBZ X0, 0x3DF9C48
	0x03DF9C38 MOV W1, W31
	0x03DF9C3C MOV X2, X31
	0x03DF9C40 LDR X30, [X31], #0x10
	0x03DF9C44 B 0x3D1926C
	0x03DF9C48 BL 0x1C16F20
	0x03DF9C4C STR X30, [X31 - 0x20]!
	0x03DF9C50 STP X20, X19, [X31 + 0x10]
	0x03DF9C54 LDRB W8, [X0 + 0x40]
	0x03DF9C58 MOV X19, X0
	0x03DF9C5C MOV X20, X1
	0x03DF9C60 CBNZ W8, 0x3DF9C6C
	0x03DF9C64 MOV X0, X19
	0x03DF9C68 BL 0x3DF9C0C
	0x03DF9C6C MOV X0, X19
	0x03DF9C70 MOV X1, X31
	0x03DF9C74 BL 0x3DE13DC
	0x03DF9C78 STR X20, [X19 + 0x20]
	0x03DF9C7C LDP X20, X19, [X31 + 0x10]
	0x03DF9C80 LDR X30, [X31], #0x20
	0x03DF9C84 RET
	0x03DF9C88 STR X30, [X31 - 0x20]!
	0x03DF9C8C STP X20, X19, [X31 + 0x10]
	0x03DF9C90 ADRP X20, 0x5EF000
	0x03DF9C94 LDRB W8, [X20 + 0x29C]
	0x03DF9C98 MOV X19, X0
	0x03DF9C9C TBNZ X8, 0x0, 0x3DF9CB4
	0x03DF9CA0 ADRP X0, 0x36F000
	0x03DF9CA4 LDR X0, [X0 + 0xD18]
	0x03DF9CA8 BL 0x1C16CF4
	0x03DF9CAC MOVZ W8, 0x1
	0x03DF9CB0 STRB W8, [X20 + 0x29C]
	0x03DF9CB4 LDRB W8, [X19 + 0x40]
	0x03DF9CB8 CBZ W8, 0x3DF9CC8
	0x03DF9CBC LDP X20, X19, [X31 + 0x10]
	0x03DF9CC0 LDR X30, [X31], #0x20
	0x03DF9CC4 RET
	0x03DF9CC8 MOVZ W8, 0x1
	0x03DF9CCC MOV X0, X19
	0x03DF9CD0 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x5F0000
	009 Move W8, [X22+652]
	010 Move X20, X2
	011 Move W21, W1
	012 Move X19, X0
	013 Move [X31+12], W1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x324000
	019 Move X0, [X0+248]
	020 Call 0x1C17CF4
	021 Move X0, 0x323000
	022 Move X0, [X0+2200]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+652], W8
	026 Compare X20, 0
	027 JumpIfEqual {150}
	028 Move X0, X19
	029 Call Hierarchy.get_childCount, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X19]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Compare X8, 0
	034 JumpIfEqual {149}
	035 Move X8, [X8+928]
	036 Compare X8, 0
	037 JumpIfEqual {41}
	038 Move W8, [X8+76]
	039 Compare W8, 0
	040 JumpIfNotEqual {194}
	041 Move X0, X20
	042 Move X1, X31
	043 Call VisualElement.RemoveFromHierarchy, X0
	044 Move X8, [X19]
	045 Compare X8, 0
	046 JumpIfEqual {149}
	047 Move X23, 0x323000
	048 Move X23, [X23+2200]
	049 Move X22, [X8+920]
	050 Move X0, [X23]
	051 Move W9, [X0+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X23]
	056 Move X8, [X0+184]
	057 Move X8, [X8+72]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, 0x324000
	060 Move X8, [X8+248]
	061 Move X22, [X19]
	062 Move X0, [X8]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move W0, W31
	068 Move X1, X31
	069 Call VisualElementListPool.Get, X0
	070 Compare X22, 0
	071 JumpIfEqual {149}
	072 Move [X22+920], X0
	073 Move X8, [X19]
	074 Compare X8, 0
	075 JumpIfEqual {149}
	076 Move X0, [X8+696]
	077 Compare X0, 0
	078 JumpIfEqual {149}
	079 Move X1, X31
	080 Call YogaNode.get_IsMeasureDefined, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {90}
	085 Move X0, [X19]
	086 Compare X0, 0
	087 JumpIfEqual {149}
	088 Move X1, X31
	089 Call VisualElement.RemoveMeasureFunction, X0
	090 Move X0, X19
	091 Move X1, X20
	092 Move W2, W21
	093 Call Hierarchy.PutChildAtIndex, X0, X1, X2
	094 Move W8, [X20+808]
	095 Move W9, [X20+16]
	096 Add W1, W8, W9
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, [X19]
	099 Compare X0, 0
	100 JumpIfEqual {149}
	101 Move X2, X31
	102 Call VisualElement.ChangeIMGUIContainerCount, X0, X1
	103 Move X8, [X20+888]
	104 Add X0, X31, 0
	105 Move [X31], X8
	106 Move X1, [X19]
	107 Call Hierarchy.SetParent, X0, X1
	108 Move X0, [X19]
	109 Compare X0, 0
	110 JumpIfEqual {149}
	111 Move X1, X31
	112 Call VisualElement.get_enabledInHierarchy, X0
	113 And W1, W0, 1
	114 Move X0, X20
	115 Move X2, X31
	116 Call VisualElement.PropagateEnabledToChildren, X0, X1
	117 Move W8, [X20+816]
	118 Compare W8, 0
	119 JumpIfNotEqual {127}
	120 Move X8, [X19]
	121 Compare X8, 0
	122 JumpIfEqual {149}
	123 Move W1, [X8+820]
	124 Move X0, X20
	125 Move X2, X31
	126 Call VisualElement.set_localLanguageDirection, X0, X1
	127 Move X0, X20
	128 Move W1, W31
	129 Move X2, X31
	130 Call VisualElement.InvokeHierarchyChanged, X0, X1
	131 Move W1, 4
	132 Move X0, X20
	133 Move X2, X31
	134 Call VisualElement.IncrementVersion, X0, X1
	135 Move X0, [X19]
	136 Compare X0, 0
	137 JumpIfEqual {149}
	138 Move X20, [X31+48]
	139 Move X19, [X31+56]
	140 Move X22, [X31+32]
	141 Move X21, [X31+40]
	142 Move X30, [X31+16]
	143 Move X23, [X31+24]
	144 Move W1, 4
	145 Move X2, X31
	146 Add X31, X31, 64
	147 Call VisualElement.IncrementVersion, X0, X1
	148 Return 
	149 Call 0x1C17F20
	150 Move X0, 0x303000
	151 Move X0, [X0+1400]
	152 Call 0x1C17D08
	153 Call 0x1C17F10
	154 Move X19, X0
	155 Move X0, 0x371000
	156 Move X0, [X0+2960]
	157 Add X0, X31, 12
	158 Move X1, X31
	159 Call Int32.ToString, X0
	160 Move X19, X0
	161 Move X0, 0x371000
	162 Move X0, [X0+2968]
	163 Call 0x1C17D08
	164 Move X1, X19
	165 Move X2, X31
	166 Call String.Concat, X0, X1
	167 Move X19, X0
	168 Move X0, 0x303000
	169 Move X0, [X0+1888]
	170 Call 0x1C17D08
	171 Call 0x1C17F10
	172 Move X1, X19
	173 Move X2, X31
	174 Move X20, X0
	175 Call ArgumentOutOfRangeException..ctor, X0, X1
	176 Move X0, 0x371000
	177 Move X0, [X0+2976]
	178 Call 0x1C17D08
	179 Move X1, X0
	180 Move X0, X20
	181 Call 0x1C17DEC
	182 Move X0, 0x303000
	183 Move X0, [X0+1400]
	184 Call 0x1C17D08
	185 Call 0x1C17F10
	186 Move X19, X0
	187 Move X0, 0x371000
	188 Move X0, [X0+2984]
	189 Call 0x1C17D08
	190 Move X1, X0
	191 Move X0, X19
	192 Move X2, X31
	193 Call ArgumentException..ctor, X0, X1
	194 Move X0, 0x2FB000
	195 Move X0, [X0+1456]
	196 Call 0x1C17D08
	197 Call 0x1C17F10
	198 Move X19, X0
	199 Move X0, 0x371000
	200 Move X0, [X0+2992]
	201 Call 0x1C17D08
	202 Move X1, X0
	203 Move X0, X19
	204 Move X2, X31
	205 Call InvalidOperationException..ctor, X0, X1
	206 Move X0, 0x371000
	207 Move X0, [X0+2976]
	208 Call 0x1C17D08
	209 Move X1, X0
	210 Move X0, X19
	211 Call 0x1C17DEC

Method: System.Void Remove(UnityEngine.UIElements.VisualElement child)

Disassembly:
	0x03DF9E64 CBZ X0, 0x3DF9E88
	0x03DF9E68 LDR X8, [X0]
	0x03DF9E6C LDR X9, [X8 + 0x3C8]
	0x03DF9E70 LDR X1, [X8 + 0x3D0]
	0x03DF9E74 BLR X9
	0x03DF9E78 CMP X0, 0x0
	0x03DF9E7C CSET W0, NE
	0x03DF9E80 B 0x3DF9E88
	0x03DF9E84 MOV W0, W31
	0x03DF9E88 LDR X30, [X31], #0x10
	0x03DF9E8C RET
	0x03DF9E90 STP X30, X23, [X31 - 0x30]!
	0x03DF9E94 STP X22, X21, [X31 + 0x10]
	0x03DF9E98 STP X20, X19, [X31 + 0x20]
	0x03DF9E9C ADRP X22, 0x5EF000
	0x03DF9EA0 ADRP X23, 0x370000
	0x03DF9EA4 LDRB W8, [X22 + 0x29E]
	0x03DF9EA8 LDR X23, [X23 + 0xC10]
	0x03DF9EAC MOV X19, X2
	0x03DF9EB0 MOV X20, X1
	0x03DF9EB4 MOV X21, X0
	0x03DF9EB8 TBNZ X8, 0x0, 0x3DF9ED0
	0x03DF9EBC ADRP X0, 0x370000
	0x03DF9EC0 LDR X0, [X0 + 0xC10]
	0x03DF9EC4 BL 0x1C16CF4
	0x03DF9EC8 MOVZ W8, 0x1
	0x03DF9ECC STRB W8, [X22 + 0x29E]
	0x03DF9ED0 LDR X3, [X23]
	0x03DF9ED4 MOV X0, X21
	0x03DF9ED8 MOV X1, X20
	0x03DF9EDC MOV X2, X19
	0x03DF9EE0 LDP X20, X19, [X31 + 0x20]
	0x03DF9EE4 LDP X22, X21, [X31 + 0x10]
	0x03DF9EE8 LDP X30, X23, [X31], #0x30
	0x03DF9EEC B 0x2844E5C
	0x03DF9EF0 STR X30, [X31 - 0x10]!
	0x03DF9EF4 LDRB W8, [X0 + 0x40]
	0x03DF9EF8 CBZ W8, 0x3DF9F18
	0x03DF9EFC LDR X8, [X0 + 0x50]
	0x03DF9F00 CBZ X8, 0x3DF9F20
	0x03DF9F04 LDR X4, [X8 + 0x18]
	0x03DF9F08 LDR X0, [X8 + 0x40]
	0x03DF9F0C LDR X3, [X8 + 0x28]
	0x03DF9F10 LDR X30, [X31], #0x10
	0x03DF9F14 BR X4
	0x03DF9F18 LDR X30, [X31], #0x10
	0x03DF9F1C RET
	0x03DF9F20 BL 0x1C16F20
	0x03DF9F24 STP X30, X23, [X31 - 0x30]!
	0x03DF9F28 STP X22, X21, [X31 + 0x10]
	0x03DF9F2C STP X20, X19, [X31 + 0x20]
	0x03DF9F30 ADRP X22, 0x5EF000
	0x03DF9F34 ADRP X23, 0x370000
	0x03DF9F38 LDRB W8, [X22 + 0x29F]
	0x03DF9F3C LDR X23, [X23 + 0xC18]
	0x03DF9F40 MOV X19, X2
	0x03DF9F44 MOV X20, X1
	0x03DF9F48 MOV X21, X0
	0x03DF9F4C TBNZ X8, 0x0, 0x3DF9F64

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5F0000
	006 Move W8, [X21+653]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x371000
	014 Move X0, [X0+3008]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+653], W8
	018 Compare X20, 0
	019 JumpIfEqual {43}
	020 Move X8, [X20+888]
	021 Compare X8, 0
	022 JumpIfEqual {42}
	023 Move X9, [X8+904]
	024 Move X8, [X19]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Compare X8, 0
	027 JumpIfEqual {42}
	028 Move X0, [X8+920]
	029 Compare X0, 0
	030 JumpIfEqual {42}
	031 Move X8, 0x371000
	032 Move X8, [X8+3008]
	033 Move X1, X20
	034 Move X2, [X8]
	035 Call List`1<Object>.IndexOf, X0, X1
	036 Move W1, W0
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call 0x1C17F20
	043 Move X0, 0x303000
	044 Move X0, [X0+1400]
	045 Call 0x1C17D08
	046 Call 0x1C17F10
	047 Move X19, X0
	048 Move X0, 0x371000
	049 Move X0, [X0+3016]
	050 Move X0, 0x303000
	051 Move X0, [X0+1400]
	052 Call 0x1C17D08
	053 Call 0x1C17F10
	054 Move X19, X0
	055 Move X0, 0x371000
	056 Move X0, [X0+3024]
	057 Call 0x1C17D08
	058 Move X1, X0
	059 Move X0, X19
	060 Move X2, X31
	061 Call ArgumentException..ctor, X0, X1
	062 Move X0, 0x371000
	063 Move X0, [X0+3032]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X19
	067 Call 0x1C17DEC

Method: System.Void RemoveAt(System.Int32 index)

Disassembly:
	0x03DF9F50 ADRP X0, 0x370000
	0x03DF9F54 LDR X0, [X0 + 0xC18]
	0x03DF9F58 BL 0x1C16CF4
	0x03DF9F5C MOVZ W8, 0x1
	0x03DF9F60 STRB W8, [X22 + 0x29F]
	0x03DF9F64 LDR X3, [X23]
	0x03DF9F68 MOV X0, X21
	0x03DF9F6C MOV X1, X20
	0x03DF9F70 MOV X2, X19
	0x03DF9F74 LDP X20, X19, [X31 + 0x20]
	0x03DF9F78 LDP X22, X21, [X31 + 0x10]
	0x03DF9F7C LDP X30, X23, [X31], #0x30
	0x03DF9F80 B 0x2844E5C
	0x03DF9F84 STR X30, [X31 - 0x10]!
	0x03DF9F88 LDRB W8, [X0 + 0x40]
	0x03DF9F8C CBZ W8, 0x3DF9FAC
	0x03DF9F90 LDR X8, [X0 + 0x50]
	0x03DF9F94 CBZ X8, 0x3DF9FB4
	0x03DF9F98 LDR X2, [X8 + 0x18]
	0x03DF9F9C LDR X0, [X8 + 0x40]
	0x03DF9FA0 LDR X1, [X8 + 0x28]
	0x03DF9FA4 LDR X30, [X31], #0x10
	0x03DF9FA8 BR X2
	0x03DF9FAC LDR X30, [X31], #0x10
	0x03DF9FB0 RET
	0x03DF9FB4 BL 0x1C16F20
	0x03DF9FB8 STR X1, [X0 + 0x10]
	0x03DF9FBC STR S0, [X0 + 0x18]
	0x03DF9FC0 RET
	0x03DF9FC4 SUB X31, X31, 0x40
	0x03DF9FC8 STR X30, [X31 + 0x10]
	0x03DF9FCC STP X22, X21, [X31 + 0x20]
	0x03DF9FD0 STP X20, X19, [X31 + 0x30]
	0x03DF9FD4 ADRP X22, 0x5EF000
	0x03DF9FD8 LDRB W8, [X22 + 0x2A0]
	0x03DF9FDC MOV X19, X2
	0x03DF9FE0 MOV X20, X1
	0x03DF9FE4 MOV X21, X0
	0x03DF9FE8 TBNZ X8, 0x0, 0x3DFA000
	0x03DF9FEC ADRP X0, 0x370000
	0x03DF9FF0 LDR X0, [X0 + 0xC20]
	0x03DF9FF4 BL 0x1C16CF4
	0x03DF9FF8 MOVZ W8, 0x1
	0x03DF9FFC STRB W8, [X22 + 0x2A0]
	0x03DFA000 ADD X3, X31, 0x0
	0x03DFA004 MOVZ W2, 0x2
	0x03DFA008 MOV X0, X21
	0x03DFA00C MOV X1, X20
	0x03DFA010 STP X31, X31, [X31]
	0x03DFA014 BL 0x3DFA05C
	0x03DFA018 TBZ X0, 0x0, 0x3DFA03C
	0x03DFA01C LDR X0, [X31]
	0x03DFA020 CBZ X0, 0x3DFA058
	0x03DFA024 LDR X1, [X31 + 0x8]
	0x03DFA028 MOV X2, X19
	0x03DFA02C BL 0x3DFA0F8
	0x03DFA030 TBZ X0, 0x0, 0x3DFA03C
	0x03DFA034 MOVZ W0, 0x1
	0x03DFA038 B 0x3DFA044
	0x03DFA03C MOV W0, W31
	0x03DFA040 STR W31, [X19]
	0x03DFA044 LDP X20, X19, [X31 + 0x30]
	0x03DFA048 LDP X22, X21, [X31 + 0x20]
	0x03DFA04C LDR X30, [X31 + 0x10]
	0x03DFA050 ADD X31, X31, 0x40
	0x03DFA054 RET
	0x03DFA058 BL 0x1C16F20
	0x03DFA05C STP X30, X23, [X31 - 0x30]!
	0x03DFA060 STP X22, X21, [X31 + 0x10]
	0x03DFA064 STP X20, X19, [X31 + 0x20]
	0x03DFA068 ADRP X23, 0x5EE000
	0x03DFA06C LDRB W8, [X23 + 0x2A7]
	0x03DFA070 MOV X21, X3
	0x03DFA074 MOV W19, W2
	0x03DFA078 MOV X20, X1
	0x03DFA07C MOV X22, X0
	0x03DFA080 TBNZ X8, 0x0, 0x3DFA098
	0x03DFA084 ADRP X0, 0x36D000
	0x03DFA088 LDR X0, [X0 + 0x3E8]
	0x03DFA08C BL 0x1C16CF4
	0x03DFA090 MOVZ W8, 0x1
	0x03DFA094 STRB W8, [X23 + 0x2A7]
	0x03DFA098 STP X31, X31, [X21]
	0x03DFA09C LDR X0, [X22 + 0x10]
	0x03DFA0A0 CBZ X0, 0x3DFA0E8
	0x03DFA0A4 ADRP X8, 0x36D000
	0x03DFA0A8 LDR X8, [X8 + 0x3E8]
	0x03DFA0AC MOV X1, X20
	0x03DFA0B0 MOV X2, X21
	0x03DFA0B4 LDR X3, [X8]
	0x03DFA0B8 BL 0x2AB9534
	0x03DFA0BC TBZ X0, 0x0, 0x3DFA0E4
	0x03DFA0C0 LDR X3, [X21 + 0x8]
	0x03DFA0C4 CMP W3, W19
	0x03DFA0C8 B.NE 0x3DFA0D4
	0x03DFA0CC MOVZ W0, 0x1
	0x03DFA0D0 B 0x3DFA0E8
	0x03DFA0D4 LDR X2, [X21]
	0x03DFA0D8 MOV X0, X20
	0x03DFA0DC MOV W1, W19
	0x03DFA0E0 BL 0x3DFA418
	0x03DFA0E4 MOV W0, W31
	0x03DFA0E8 LDP X20, X19, [X31 + 0x20]
	0x03DFA0EC LDP X22, X21, [X31 + 0x10]
	0x03DFA0F0 LDP X30, X23, [X31], #0x30
	0x03DFA0F4 RET
	0x03DFA0F8 SUB X31, X31, 0x40
	0x03DFA0FC STP X30, X23, [X31 + 0x10]
	0x03DFA100 STP X22, X21, [X31 + 0x20]
	0x03DFA104 STP X20, X19, [X31 + 0x30]
	0x03DFA108 ADRP X23, 0x5EE000
	0x03DFA10C ADRP X22, 0x36F000
	0x03DFA110 LDRB W8, [X23 + 0x31B]
	0x03DFA114 LDR X22, [X22 + 0xC28]
	0x03DFA118 MOV X19, X2
	0x03DFA11C MOV X20, X1
	0x03DFA120 MOV X21, X0
	0x03DFA124 TBNZ X8, 0x0, 0x3DFA148
	0x03DFA128 ADRP X0, 0x36F000
	0x03DFA12C LDR X0, [X0 + 0xC30]
	0x03DFA130 BL 0x1C16CF4
	0x03DFA134 ADRP X0, 0x36F000
	0x03DFA138 LDR X0, [X0 + 0xC28]
	0x03DFA13C BL 0x1C16CF4
	0x03DFA140 MOVZ W8, 0x1
	0x03DFA144 STRB W8, [X23 + 0x31B]
	0x03DFA148 STR X31, [X31 + 0x8]
	0x03DFA14C LDR X1, [X21 + 0x30]
	0x03DFA150 LDR X5, [X22]
	0x03DFA154 MOVZ W2, 0x2
	0x03DFA158 MOV X0, X21
	0x03DFA15C MOV X3, X20
	0x03DFA160 MOV X4, X19
	0x03DFA164 BL 0x2294A88

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5F0000
	007 Move W8, [X20+654]
	008 Move W21, W1
	009 Move X19, X0
	010 Move [X31+12], W1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x324000
	016 Move X0, [X0+240]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+654], W8
	020 Move X8, [X19]
	021 Compare X8, 0
	022 JumpIfEqual {116}
	023 Move X8, [X8+928]
	024 Compare X8, 0
	025 JumpIfEqual {29}
	026 Move W8, [X8+76]
	027 Compare W8, 0
	028 JumpIfNotEqual {142}
	029 Move TEMP, X21
	030 And TEMP, TEMP, -2147483648
	031 Compare TEMP, -2147483648
	032 JumpIfEqual {117}
	033 Move X0, X19
	034 Call Hierarchy.get_childCount, X0
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X19]
	037 Compare X8, 0
	038 JumpIfEqual {116}
	039 Move X0, [X8+920]
	040 Compare X0, 0
	041 JumpIfEqual {116}
	042 Move X8, 0x324000
	043 Move X8, [X8+240]
	044 Move W1, W21
	045 Move X2, [X8]
	046 Call List`1<Object>.get_Item, X0, X1
	047 Compare X0, 0
	048 JumpIfEqual {116}
	049 Move W1, 1
	050 Move X2, X31
	051 Move X20, X0
	052 Call VisualElement.InvokeHierarchyChanged, X0, X1
	053 Move X0, X19
	054 Move W1, W21
	055 Call Hierarchy.RemoveChildAtIndex, X0, X1
	056 Move W8, [X20+808]
	057 Move W9, [X20+16]
	058 Add W8, W8, W9
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, [X19]
	061 Compare X0, 0
	062 JumpIfEqual {116}
	063 Subtract W1, W31, W8
	064 Move X2, X31
	065 Call VisualElement.ChangeIMGUIContainerCount, X0, X1
	066 Move X8, [X20+888]
	067 Add X0, X31, 0
	068 Move X1, X31
	069 Move [X31], X8
	070 Call Hierarchy.SetParent, X0, X1
	071 Move X0, X19
	072 Call Hierarchy.get_childCount, X0
	073 Compare W0, 0
	074 JumpIfNotEqual {91}
	075 Move X0, X19
	076 Call Hierarchy.ReleaseChildList, X0
	077 Move X0, [X19]
	078 Compare X0, 0
	079 JumpIfEqual {116}
	080 Move X1, X31
	081 Call VisualElement.get_requireMeasureFunction, X0
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {91}
	086 Move X0, [X19]
	087 Compare X0, 0
	088 JumpIfEqual {116}
	089 Move X1, X31
	090 Call VisualElement.AssignMeasureFunction, X0
	091 Move X0, [X19]
	092 Compare X0, 0
	093 JumpIfEqual {116}
	094 Move X8, [X0+928]
	095 Compare X8, 0
	096 JumpIfEqual {107}
	097 Move X9, [X8]
	098 Move W2, 4
	099 Move X0, X8
	100 Move X1, X20
	101 Move X10, [X9+824]
	102 Move X3, [X9+832]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X0, [X19]
	105 Compare X0, 0
	106 JumpIfEqual {116}
	107 Move X20, [X31+32]
	108 Move X19, [X31+40]
	109 Move X30, [X31+16]
	110 Move X21, [X31+24]
	111 Move W1, 4
	112 Move X2, X31
	113 Add X31, X31, 48
	114 Call VisualElement.IncrementVersion, X0, X1
	115 Return 
	116 Call 0x1C17F20
	117 Add X0, X31, 12
	118 Move X1, X31
	119 Call Int32.ToString, X0
	120 Move X19, X0
	121 Move X0, 0x370000
	122 Move X0, [X0+2968]
	123 Call 0x1C17D08
	124 Move X1, X19
	125 Move X2, X31
	126 Call String.Concat, X0, X1
	127 Move X19, X0
	128 Move X0, 0x302000
	129 Move X0, [X0+1888]
	130 Call 0x1C17D08
	131 Call 0x1C17F10
	132 Move X1, X19
	133 Move X2, X31
	134 Move X20, X0
	135 Call ArgumentOutOfRangeException..ctor, X0, X1
	136 Move X0, 0x370000
	137 Move X0, [X0+3040]
	138 Call 0x1C17D08
	139 Move X1, X0
	140 Move X0, X20
	141 Call 0x1C17DEC
	142 Move X0, 0x2FA000
	143 Move X0, [X0+1456]
	144 Call 0x1C17D08
	145 Call 0x1C17F10
	146 Move X19, X0
	147 Move X0, 0x370000
	148 Move X0, [X0+2992]
	149 Call 0x1C17D08
	150 Move X1, X0
	151 Move X0, X19
	152 Move X2, X31
	153 Call InvalidOperationException..ctor, X0, X1
	154 Move X0, 0x370000
	155 Move X0, [X0+3040]
	156 Call 0x1C17D08
	157 Move X1, X0
	158 Move X0, X19
	159 Call 0x1C17DEC

Method: System.Void Clear()

Disassembly:
	0x03DFA2C4 STRB W8, [X22 + 0x2A2]
	0x03DFA2C8 STP X31, X31, [X31]
	0x03DFA2CC LDR X0, [X21 + 0x10]
	0x03DFA2D0 CBZ X0, 0x3DFA384
	0x03DFA2D4 ADRP X8, 0x36D000
	0x03DFA2D8 LDR X8, [X8 + 0x3E8]
	0x03DFA2DC ADD X2, X31, 0x0
	0x03DFA2E0 MOV X1, X20
	0x03DFA2E4 LDR X3, [X8]
	0x03DFA2E8 BL 0x2AB9534
	0x03DFA2EC TBZ X0, 0x0, 0x3DFA384
	0x03DFA2F0 LDR X3, [X31 + 0x8]
	0x03DFA2F4 CMP W3, 0x4
	0x03DFA2F8 B.EQ 0x3DFA354
	0x03DFA2FC CMP W3, 0x7
	0x03DFA300 B.NE 0x3DFA374
	0x03DFA304 LDR X0, [X31]
	0x03DFA308 MOV X1, X3
	0x03DFA30C MOV X2, X31
	0x03DFA310 BL 0x3D552E8
	0x03DFA314 CBZ X0, 0x3DFA3A4
	0x03DFA318 MOV X1, X31
	0x03DFA31C BL 0x322B6E4
	0x03DFA320 ADRP X8, 0x36B000
	0x03DFA324 LDR X8, [X8 + 0x3D8]
	0x03DFA328 MOV X20, X0
	0x03DFA32C LDR X8, [X8]
	0x03DFA330 LDR W9, [X8 + 0xE0]
	0x03DFA334 CBNZ W9, 0x3DFA340
	0x03DFA338 MOV X0, X8
	0x03DFA33C BL 0x1C16DFC
	0x03DFA340 MOV X0, X20
	0x03DFA344 MOV X1, X19
	0x03DFA348 MOV X2, X31
	0x03DFA34C BL 0x3D4FF58
	0x03DFA350 B 0x3DFA38C
	0x03DFA354 LDR X0, [X31]
	0x03DFA358 CBZ X0, 0x3DFA3A4
	0x03DFA35C MOV X1, X3
	0x03DFA360 MOV X2, X19
	0x03DFA364 BL 0x3DFA3B0
	0x03DFA368 TBZ X0, 0x0, 0x3DFA384
	0x03DFA36C MOVZ W0, 0x1
	0x03DFA370 B 0x3DFA38C
	0x03DFA374 LDR X2, [X31]
	0x03DFA378 MOVZ W1, 0x4
	0x03DFA37C MOV X0, X20
	0x03DFA380 BL 0x3DFA418
	0x03DFA384 MOV W0, W31
	0x03DFA388 STP X31, X31, [X19]
	0x03DFA38C LDP X20, X19, [X31 + 0x30]
	0x03DFA390 LDP X22, X21, [X31 + 0x20]
	0x03DFA394 LDR X30, [X31 + 0x10]
	0x03DFA398 AND W0, W0, 0x1
	0x03DFA39C ADD X31, X31, 0x40
	0x03DFA3A0 RET
	0x03DFA3A4 BL 0x1C16F20
	0x03DFA3A8 LDR W0, [X0]
	0x03DFA3AC RET
	0x03DFA3B0 STP X30, X23, [X31 - 0x30]!
	0x03DFA3B4 STP X22, X21, [X31 + 0x10]
	0x03DFA3B8 STP X20, X19, [X31 + 0x20]
	0x03DFA3BC ADRP X23, 0x5EE000
	0x03DFA3C0 ADRP X22, 0x36F000
	0x03DFA3C4 LDRB W8, [X23 + 0x31F]
	0x03DFA3C8 LDR X22, [X22 + 0xC48]
	0x03DFA3CC MOV X19, X2
	0x03DFA3D0 MOV X20, X1
	0x03DFA3D4 MOV X21, X0
	0x03DFA3D8 TBNZ X8, 0x0, 0x3DFA3F0
	0x03DFA3DC ADRP X0, 0x36F000
	0x03DFA3E0 LDR X0, [X0 + 0xC48]
	0x03DFA3E4 BL 0x1C16CF4
	0x03DFA3E8 MOVZ W8, 0x1
	0x03DFA3EC STRB W8, [X23 + 0x31F]
	0x03DFA3F0 LDR X1, [X21 + 0x40]
	0x03DFA3F4 LDR X5, [X22]
	0x03DFA3F8 MOV X0, X21
	0x03DFA3FC MOV X3, X20
	0x03DFA400 MOV X4, X19
	0x03DFA404 LDP X20, X19, [X31 + 0x20]
	0x03DFA408 LDP X22, X21, [X31 + 0x10]
	0x03DFA40C MOVZ W2, 0x4
	0x03DFA410 LDP X30, X23, [X31], #0x30
	0x03DFA414 B 0x2294554
	0x03DFA418 SUB X31, X31, 0x50
	0x03DFA41C STP X30, X25, [X31 + 0x10]
	0x03DFA420 STP X24, X23, [X31 + 0x20]
	0x03DFA424 STP X22, X21, [X31 + 0x30]
	0x03DFA428 STP X20, X19, [X31 + 0x40]
	0x03DFA42C ADRP X25, 0x5EE000
	0x03DFA430 ADRP X24, 0x322000
	0x03DFA434 ADRP X23, 0x36F000
	0x03DFA438 ADRP X22, 0x2F9000
	0x03DFA43C LDRB W8, [X25 + 0x2A8]
	0x03DFA440 LDR X24, [X24 + 0x720]
	0x03DFA444 LDR X23, [X23 + 0xC50]
	0x03DFA448 LDR X22, [X22 + 0xA28]
	0x03DFA44C MOV X20, X3
	0x03DFA450 MOV W21, W1
	0x03DFA454 MOV X19, X0
	0x03DFA458 TBNZ X8, 0x0, 0x3DFA488
	0x03DFA45C ADRP X0, 0x2F9000
	0x03DFA460 LDR X0, [X0 + 0xA28]
	0x03DFA464 BL 0x1C16CF4
	0x03DFA468 ADRP X0, 0x322000
	0x03DFA46C LDR X0, [X0 + 0x720]
	0x03DFA470 BL 0x1C16CF4
	0x03DFA474 ADRP X0, 0x36F000
	0x03DFA478 LDR X0, [X0 + 0xC50]
	0x03DFA47C BL 0x1C16CF4
	0x03DFA480 MOVZ W8, 0x1
	0x03DFA484 STRB W8, [X25 + 0x2A8]
	0x03DFA488 LDR X0, [X24]
	0x03DFA48C ADD X1, X31, 0xC
	0x03DFA490 STR W21, [X31 + 0xC]
	0x03DFA494 BL 0x1C16E04
	0x03DFA498 MOV X21, X0
	0x03DFA49C LDR X0, [X24]
	0x03DFA4A0 ADD X1, X31, 0x8
	0x03DFA4A4 STR W20, [X31 + 0x8]
	0x03DFA4A8 BL 0x1C16E04
	0x03DFA4AC LDR X8, [X23]
	0x03DFA4B0 MOV X3, X0
	0x03DFA4B4 MOV X1, X19
	0x03DFA4B8 MOV X2, X21
	0x03DFA4BC MOV X0, X8
	0x03DFA4C0 MOV X4, X31
	0x03DFA4C4 BL 0x3227C18
	0x03DFA4C8 LDR X8, [X22]
	0x03DFA4CC MOV X19, X0
	0x03DFA4D0 LDR W9, [X8 + 0xE0]
	0x03DFA4D4 CBNZ W9, 0x3DFA4E0
	0x03DFA4D8 MOV X0, X8
	0x03DFA4DC BL 0x1C16DFC
	0x03DFA4E0 MOV X0, X19
	0x03DFA4E4 MOV X1, X31
	0x03DFA4E8 BL 0x3C06A04
	0x03DFA4EC LDP X20, X19, [X31 + 0x40]
	0x03DFA4F0 LDP X22, X21, [X31 + 0x30]
	0x03DFA4F4 LDP X24, X23, [X31 + 0x20]
	0x03DFA4F8 LDP X30, X25, [X31 + 0x10]
	0x03DFA4FC ADD X31, X31, 0x50
	0x03DFA500 RET
	0x03DFA504 SUB X31, X31, 0x60
	0x03DFA508 STR X30, [X31 + 0x30]
	0x03DFA50C STP X22, X21, [X31 + 0x40]
	0x03DFA510 STP X20, X19, [X31 + 0x50]
	0x03DFA514 ADRP X22, 0x5EE000
	0x03DFA518 LDRB W8, [X22 + 0x2A3]
	0x03DFA51C MOV X19, X2
	0x03DFA520 MOV X21, X1
	0x03DFA524 MOV X20, X0
	0x03DFA528 TBNZ X8, 0x0, 0x3DFA558
	0x03DFA52C ADRP X0, 0x36F000
	0x03DFA530 LDR X0, [X0 + 0xC58]
	0x03DFA534 BL 0x1C16CF4
	0x03DFA538 ADRP X0, 0x36D000
	0x03DFA53C LDR X0, [X0 + 0x3E8]
	0x03DFA540 BL 0x1C16CF4
	0x03DFA544 ADRP X0, 0x2F9000
	0x03DFA548 LDR X0, [X0 + 0x598]
	0x03DFA54C BL 0x1C16CF4
	0x03DFA550 MOVZ W8, 0x1
	0x03DFA554 STRB W8, [X22 + 0x2A3]
	0x03DFA558 MOVI V0.2D, 0x0
	0x03DFA55C STP X31, X31, [X31 + 0x20]
	0x03DFA560 STP V0, V0, [X31]
	0x03DFA564 LDR X0, [X20 + 0x10]
	0x03DFA568 CBZ X0, 0x3DFA5F0
	0x03DFA56C ADRP X8, 0x36D000
	0x03DFA570 LDR X8, [X8 + 0x3E8]
	0x03DFA574 ADD X2, X31, 0x20
	0x03DFA578 MOV X1, X21
	0x03DFA57C LDR X3, [X8]
	0x03DFA580 BL 0x2AB9534
	0x03DFA584 TBZ X0, 0x0, 0x3DFA5E4
	0x03DFA588 MOVI V0.2D, 0x0
	0x03DFA58C STP V0, V0, [X31]
	0x03DFA590 LDP X0, X1, [X31 + 0x20]
	0x03DFA594 LDR V0, [X20 + 0x18]
	0x03DFA598 ADD X2, X31, 0x0
	0x03DFA59C MOV X3, X31
	0x03DFA5A0 BL 0x3D50B08
	0x03DFA5A4 TBZ X0, 0x0, 0x3DFA5E4
	0x03DFA5A8 ADRP X8, 0x2F9000
	0x03DFA5AC LDR X8, [X8 + 0x598]
	0x03DFA5B0 LDR X20, [X31]
	0x03DFA5B4 LDR X0, [X8]
	0x03DFA5B8 LDR W8, [X0 + 0xE0]
	0x03DFA5BC CBNZ W8, 0x3DFA5C4
	0x03DFA5C0 BL 0x1C16DFC
	0x03DFA5C4 MOV X0, X20
	0x03DFA5C8 MOV X1, X31
	0x03DFA5CC MOV X2, X31
	0x03DFA5D0 BL 0x3C354F8
	0x03DFA5D4 TBZ X0, 0x0, 0x3DFA5E4
	0x03DFA5D8 LDR X8, [X31]
	0x03DFA5DC MOVZ W0, 0x1

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X20, 0x5EF000
	011 Move W8, [X20+655]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x36E000
	018 Move X0, [X0+3472]
	019 Call 0x1C17CF4
	020 Move X0, 0x36E000
	021 Move X0, [X0+3480]
	022 Call 0x1C17CF4
	023 Move X0, 0x36E000
	024 Move X0, [X0+3488]
	025 Call 0x1C17CF4
	026 Move X0, 0x36E000
	027 Move X0, [X0+3496]
	028 Call 0x1C17CF4
	029 Move X0, 0x323000
	030 Move X0, [X0+248]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+655], W8
	034 Move [X31+32], X31
	035 Move [X31+40], X31
	036 Move [X31+48], X31
	037 Move X8, [X19]
	038 Compare X8, 0
	039 JumpIfEqual {182}
	040 Move X8, [X8+928]
	041 Compare X8, 0
	042 JumpIfEqual {46}
	043 Move W8, [X8+76]
	044 Compare W8, 0
	045 JumpIfNotEqual {183}
	046 Move X0, X19
	047 Call Hierarchy.get_childCount, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X19]
	050 Compare X8, 0
	051 JumpIfEqual {182}
	052 Move X23, 0x323000
	053 Move X23, [X23+248]
	054 Move X20, [X8+920]
	055 Move X0, [X23]
	056 Move W9, [X0+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X20
	061 Move X1, X31
	062 Call VisualElementListPool.Copy, X0
	063 Move X20, X0
	064 Move X0, X19
	065 Call Hierarchy.ReleaseChildList, X0
	066 Move X8, [X19]
	067 Compare X8, 0
	068 JumpIfEqual {182}
	069 Move X0, [X8+696]
	070 Compare X0, 0
	071 JumpIfEqual {182}
	072 Move X1, X31
	073 Call YogaNode.Clear, X0
	074 Move X0, [X19]
	075 Compare X0, 0
	076 JumpIfEqual {182}
	077 Move X1, X31
	078 Call VisualElement.get_requireMeasureFunction, X0
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {88}
	083 Move X0, [X19]
	084 Compare X0, 0
	085 JumpIfEqual {182}
	086 Move X1, X31
	087 Call VisualElement.AssignMeasureFunction, X0
	088 Compare X20, 0
	089 JumpIfEqual {182}
	090 Move X8, 0x36E000
	091 Move X8, [X8+3496]
	092 Move X25, 0x36E000
	093 Move X24, 0x36E000
	094 Move X0, X20
	095 Move X1, [X8]
	096 Move X25, [X25+3480]
	097 Move X24, [X24+3472]
	098 Add X8, X31, 0
	099 Call List`1<Object>.GetEnumerator, X0
	100 Move V0, [X31]
	101 Move X8, [X31+16]
	102 Move X21, X31
	103 Move [X31+2], V0
	104 Move [X31+48], X8
	105 Move X1, [X25]
	106 Add X0, X31, 32
	107 Call Enumerator<Object>.MoveNext, X0
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {142}
	112 Move X22, [X31+48]
	113 Compare X22, 0
	114 JumpIfEqual {179}
	115 Move W1, 1
	116 Move X0, X22
	117 Move X2, X31
	118 Call VisualElement.InvokeHierarchyChanged, X0, X1
	119 Move X8, [X22+888]
	120 Move [X31+24], X8
	121 Add X0, X31, 24
	122 Move X1, X31
	123 Call Hierarchy.SetParent, X0, X1
	124 Move [X22+912], X31
	125 Move X8, [X19]
	126 Compare X8, 0
	127 JumpIfEqual {180}
	128 Move X8, [X8+928]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 NotImplemented "Instruction CSEL not yet implemented."
	131 Compare X8, 0
	132 JumpIfEqual {105}
	133 Compare X21, 0
	134 JumpIfEqual {181}
	135 Move X8, [X21]
	136 Move X9, [X8+824]
	137 Move X3, [X8+832]
	138 Move W2, 4
	139 Move X0, X21
	140 Move X1, X22
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Move X1, [X24]
	143 Add X0, X31, 32
	144 Call Enumerator<Object>.Dispose, X0
	145 Move X0, [X19]
	146 Compare X0, 0
	147 JumpIfEqual {182}
	148 Move W8, [X0+808]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move W9, [X0+16]
	151 Move X2, X31
	152 And W9, W9, 1
	153 Subtract W1, W9, W8
	154 Call VisualElement.ChangeIMGUIContainerCount, X0, X1
	155 Move X0, [X23]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X20
	161 Move X1, X31
	162 Call VisualElementListPool.Release, X0
	163 Move X0, [X19]
	164 Compare X0, 0
	165 JumpIfEqual {182}
	166 Move W1, 4
	167 Move X2, X31
	168 Call VisualElement.IncrementVersion, X0, X1
	169 Move X20, [X31+112]
	170 Move X19, [X31+120]
	171 Move X22, [X31+96]
	172 Move X21, [X31+104]
	173 Move X24, [X31+80]
	174 Move X23, [X31+88]
	175 Move X30, [X31+64]
	176 Move X25, [X31+72]
	177 Add X31, X31, 128
	178 Return 
	179 Call 0x1C17F20
	180 Call 0x1C17F20
	181 Call 0x1C17F20
	182 Call 0x1C17F20
	183 Move X0, 0x2FA000
	184 Move X0, [X0+1456]
	185 Call 0x1C17D08
	186 Call 0x1C17F10
	187 Move X19, X0
	188 Move X0, 0x370000
	189 Move X0, [X0+2992]
	190 Call 0x1C17D08
	191 Move X1, X0
	192 Move X0, X19
	193 Move X2, X31
	194 Call InvalidOperationException..ctor, X0, X1
	195 Move X0, 0x370000
	196 Move X0, [X0+3056]
	197 Call 0x1C17D08
	198 Move X1, X0
	199 Move X0, X19
	200 Call 0x1C17DEC
	201 Move X21, X0
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X0, X21
	204 Call 0x3EB2AD0
	205 Move X22, [X0]
	206 Call 0x3EB2AE0
	207 Move X1, [X24]
	208 Add X0, X31, 32
	209 Call Enumerator<Object>.Dispose, X0
	210 Compare X22, 0
	211 JumpIfEqual {145}
	212 Move X0, X22
	213 Call 0x1C17F18
	214 Move X22, X31
	215 Move X21, X0
	216 Move X1, [X24]
	217 Add X0, X31, 32
	218 Call Enumerator<Object>.Dispose, X0
	219 Compare X22, 0
	220 JumpIfNotEqual {223}
	221 Move X0, X21
	222 Call 0x1D2D690
	223 Move X0, X22
	224 Call 0x1C17F18
	225 Call 0x1991590

Method: System.Void BringToFront(UnityEngine.UIElements.VisualElement child)

Disassembly:
	0x03DFA5E0 B 0x3DFA5F4
	0x03DFA5E4 MOV X8, X31
	0x03DFA5E8 MOV W0, W31
	0x03DFA5EC B 0x3DFA5F4
	0x03DFA5F0 MOV X8, X31
	0x03DFA5F4 STR X8, [X19]
	0x03DFA5F8 LDP X20, X19, [X31 + 0x50]
	0x03DFA5FC LDP X22, X21, [X31 + 0x40]
	0x03DFA600 LDR X30, [X31 + 0x30]
	0x03DFA604 ADD X31, X31, 0x60
	0x03DFA608 RET
	0x03DFA60C SUB X31, X31, 0x60
	0x03DFA610 STR X30, [X31 + 0x30]
	0x03DFA614 STP X22, X21, [X31 + 0x40]
	0x03DFA618 STP X20, X19, [X31 + 0x50]
	0x03DFA61C ADRP X22, 0x5EE000
	0x03DFA620 LDRB W8, [X22 + 0x2A4]
	0x03DFA624 MOV X19, X2
	0x03DFA628 MOV X21, X1
	0x03DFA62C MOV X20, X0
	0x03DFA630 TBNZ X8, 0x0, 0x3DFA660
	0x03DFA634 ADRP X0, 0x36F000
	0x03DFA638 LDR X0, [X0 + 0xC60]
	0x03DFA63C BL 0x1C16CF4
	0x03DFA640 ADRP X0, 0x36D000
	0x03DFA644 LDR X0, [X0 + 0x3E8]
	0x03DFA648 BL 0x1C16CF4
	0x03DFA64C ADRP X0, 0x2F9000
	0x03DFA650 LDR X0, [X0 + 0x598]
	0x03DFA654 BL 0x1C16CF4
	0x03DFA658 MOVZ W8, 0x1
	0x03DFA65C STRB W8, [X22 + 0x2A4]
	0x03DFA660 MOVI V0.2D, 0x0
	0x03DFA664 STP X31, X31, [X31 + 0x20]
	0x03DFA668 STP V0, V0, [X31]
	0x03DFA66C LDR X0, [X20 + 0x10]
	0x03DFA670 CBZ X0, 0x3DFA6F8
	0x03DFA674 ADRP X8, 0x36D000
	0x03DFA678 LDR X8, [X8 + 0x3E8]
	0x03DFA67C ADD X2, X31, 0x20
	0x03DFA680 MOV X1, X21
	0x03DFA684 LDR X3, [X8]
	0x03DFA688 BL 0x2AB9534
	0x03DFA68C TBZ X0, 0x0, 0x3DFA6EC
	0x03DFA690 MOVI V0.2D, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5EF000
	006 Move W8, [X21+656]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x370000
	014 Move X0, [X0+3008]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+656], W8
	018 Move X0, X20
	019 Call Hierarchy.get_childCount, X0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, [X20]
	022 Compare X8, 0
	023 JumpIfEqual {56}
	024 Move X0, [X8+920]
	025 Compare X0, 0
	026 JumpIfEqual {56}
	027 Move X8, 0x370000
	028 Move X8, [X8+3008]
	029 Move X1, X19
	030 Move X2, [X8]
	031 Call List`1<Object>.IndexOf, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, -2147483648
	034 Compare TEMP, -2147483648
	035 JumpIfEqual {51}
	036 Move W21, W0
	037 Move X0, X20
	038 Call Hierarchy.get_childCount, X0
	039 Subtract W8, W0, 1
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, X20
	042 Call Hierarchy.get_childCount, X0
	043 Move W3, W0
	044 Move X0, X20
	045 Move X1, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move W2, W21
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return 
	056 Call 0x1C17F20

Method: System.Void SendToBack(UnityEngine.UIElements.VisualElement child)

Disassembly:
	0x03DFA774 LDR X0, [X20 + 0x10]
	0x03DFA778 CBZ X0, 0x3DFA800
	0x03DFA77C ADRP X8, 0x36D000
	0x03DFA780 LDR X8, [X8 + 0x3E8]
	0x03DFA784 ADD X2, X31, 0x20
	0x03DFA788 MOV X1, X21
	0x03DFA78C LDR X3, [X8]
	0x03DFA790 BL 0x2AB9534
	0x03DFA794 TBZ X0, 0x0, 0x3DFA7F4
	0x03DFA798 MOVI V0.2D, 0x0
	0x03DFA79C STP V0, V0, [X31]
	0x03DFA7A0 LDP X0, X1, [X31 + 0x20]
	0x03DFA7A4 LDR V0, [X20 + 0x18]
	0x03DFA7A8 ADD X2, X31, 0x0
	0x03DFA7AC MOV X3, X31
	0x03DFA7B0 BL 0x3D50B08
	0x03DFA7B4 TBZ X0, 0x0, 0x3DFA7F4
	0x03DFA7B8 ADRP X8, 0x2F9000
	0x03DFA7BC LDR X8, [X8 + 0x598]
	0x03DFA7C0 LDR X20, [X31 + 0x10]
	0x03DFA7C4 LDR X0, [X8]
	0x03DFA7C8 LDR W8, [X0 + 0xE0]
	0x03DFA7CC CBNZ W8, 0x3DFA7D4
	0x03DFA7D0 BL 0x1C16DFC
	0x03DFA7D4 MOV X0, X20
	0x03DFA7D8 MOV X1, X31
	0x03DFA7DC MOV X2, X31
	0x03DFA7E0 BL 0x3C354F8
	0x03DFA7E4 TBZ X0, 0x0, 0x3DFA7F4
	0x03DFA7E8 LDR X8, [X31 + 0x10]
	0x03DFA7EC MOVZ W0, 0x1
	0x03DFA7F0 B 0x3DFA804
	0x03DFA7F4 MOV X8, X31
	0x03DFA7F8 MOV W0, W31
	0x03DFA7FC B 0x3DFA804
	0x03DFA800 MOV X8, X31
	0x03DFA804 STR X8, [X19]
	0x03DFA808 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5EF000
	006 Move W8, [X21+657]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x370000
	014 Move X0, [X0+3008]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+657], W8
	018 Move X0, X20
	019 Call Hierarchy.get_childCount, X0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, [X20]
	022 Compare X8, 0
	023 JumpIfEqual {48}
	024 Move X0, [X8+920]
	025 Compare X0, 0
	026 JumpIfEqual {48}
	027 Move X8, 0x370000
	028 Move X8, [X8+3008]
	029 Move X1, X19
	030 Move X2, [X8]
	031 Call List`1<Object>.IndexOf, X0, X1
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W2, W0
	034 Move X0, X20
	035 Move X1, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move W3, W31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call Hierarchy.MoveChildElement, X0, X1, X2, X3
	042 Return 
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return 
	048 Call 0x1C17F20

Method: System.Void PlaceBehind(UnityEngine.UIElements.VisualElement child, UnityEngine.UIElements.VisualElement over)

Disassembly:
	0x03DFA80C LDP X22, X21, [X31 + 0x40]
	0x03DFA810 LDR X30, [X31 + 0x30]
	0x03DFA814 ADD X31, X31, 0x60
	0x03DFA818 RET
	0x03DFA81C SUB X31, X31, 0x40
	0x03DFA820 STR X30, [X31 + 0x10]
	0x03DFA824 STP X22, X21, [X31 + 0x20]
	0x03DFA828 STP X20, X19, [X31 + 0x30]
	0x03DFA82C ADRP X22, 0x5EE000
	0x03DFA830 LDRB W8, [X22 + 0x2A6]
	0x03DFA834 MOV X19, X2
	0x03DFA838 MOV X20, X1
	0x03DFA83C MOV X21, X0
	0x03DFA840 TBNZ X8, 0x0, 0x3DFA870
	0x03DFA844 ADRP X0, 0x36F000
	0x03DFA848 LDR X0, [X0 + 0xC70]
	0x03DFA84C BL 0x1C16CF4
	0x03DFA850 ADRP X0, 0x36D000
	0x03DFA854 LDR X0, [X0 + 0x3E8]
	0x03DFA858 BL 0x1C16CF4
	0x03DFA85C ADRP X0, 0x2FB000
	0x03DFA860 LDR X0, [X0 + 0x278]
	0x03DFA864 BL 0x1C16CF4
	0x03DFA868 MOVZ W8, 0x1
	0x03DFA86C STRB W8, [X22 + 0x2A6]
	0x03DFA870 STP X31, X31, [X31]
	0x03DFA874 LDR X0, [X21 + 0x10]
	0x03DFA878 CBZ X0, 0x3DFA8AC
	0x03DFA87C ADRP X8, 0x36D000
	0x03DFA880 LDR X8, [X8 + 0x3E8]
	0x03DFA884 ADD X2, X31, 0x0
	0x03DFA888 MOV X1, X20
	0x03DFA88C LDR X3, [X8]
	0x03DFA890 BL 0x2AB9534
	0x03DFA894 TBZ X0, 0x0, 0x3DFA8AC
	0x03DFA898 LDP X0, X1, [X31]
	0x03DFA89C MOV X2, X31
	0x03DFA8A0 BL 0x3D552E8
	0x03DFA8A4 MOVZ W8, 0x1
	0x03DFA8A8 B 0x3DFA8C4
	0x03DFA8AC ADRP X8, 0x2FB000
	0x03DFA8B0 LDR X8, [X8 + 0x278]
	0x03DFA8B4 LDR X8, [X8]
	0x03DFA8B8 LDR X8, [X8 + 0xB8]
	0x03DFA8BC LDR X0, [X8]
	0x03DFA8C0 MOV W8, W31
	0x03DFA8C4 STR X0, [X19]
	0x03DFA8C8 LDP X20, X19, [X31 + 0x30]
	0x03DFA8CC LDP X22, X21, [X31 + 0x20]
	0x03DFA8D0 LDR X30, [X31 + 0x10]
	0x03DFA8D4 MOV W0, W8
	0x03DFA8D8 ADD X31, X31, 0x40
	0x03DFA8DC RET
	0x03DFA8E0 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x5EF000
	008 Move W8, [X22+658]
	009 Move X21, X2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x370000
	017 Move X0, [X0+3008]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+658], W8
	021 Move X0, X20
	022 Call Hierarchy.get_childCount, X0
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, [X20]
	025 Compare X8, 0
	026 JumpIfEqual {73}
	027 Move X0, [X8+920]
	028 Compare X0, 0
	029 JumpIfEqual {73}
	030 Move X23, 0x370000
	031 Move X23, [X23+3008]
	032 Move X1, X19
	033 Move X2, [X23]
	034 Call List`1<Object>.IndexOf, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, -2147483648
	037 Compare TEMP, -2147483648
	038 JumpIfEqual {66}
	039 Move X8, [X20]
	040 Compare X8, 0
	041 JumpIfEqual {73}
	042 Move W22, W0
	043 Move X0, [X8+920]
	044 Compare X0, 0
	045 JumpIfEqual {73}
	046 Move X2, [X23]
	047 Move X1, X21
	048 Call List`1<Object>.IndexOf, X0, X1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSET not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSET not yet implemented."
	053 And W8, W8, W9
	054 Subtract W3, W0, W8
	055 Move X0, X20
	056 Move X1, X19
	057 Move W2, W22
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Move X23, [X31+56]
	064 Call Hierarchy.MoveChildElement, X0, X1, X2, X3
	065 Return 
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Return 
	073 Call 0x1C17F20

Method: System.Void MoveChildElement(UnityEngine.UIElements.VisualElement child, System.Int32 currentIndex, System.Int32 nextIndex)

Disassembly:
	0x03DFA694 STP V0, V0, [X31]
	0x03DFA698 LDP X0, X1, [X31 + 0x20]
	0x03DFA69C LDR V0, [X20 + 0x18]
	0x03DFA6A0 ADD X2, X31, 0x0
	0x03DFA6A4 MOV X3, X31
	0x03DFA6A8 BL 0x3D50B08
	0x03DFA6AC TBZ X0, 0x0, 0x3DFA6EC
	0x03DFA6B0 ADRP X8, 0x2F9000
	0x03DFA6B4 LDR X8, [X8 + 0x598]
	0x03DFA6B8 LDR X20, [X31 + 0x8]
	0x03DFA6BC LDR X0, [X8]
	0x03DFA6C0 LDR W8, [X0 + 0xE0]
	0x03DFA6C4 CBNZ W8, 0x3DFA6CC
	0x03DFA6C8 BL 0x1C16DFC
	0x03DFA6CC MOV X0, X20
	0x03DFA6D0 MOV X1, X31
	0x03DFA6D4 MOV X2, X31
	0x03DFA6D8 BL 0x3C354F8
	0x03DFA6DC TBZ X0, 0x0, 0x3DFA6EC
	0x03DFA6E0 LDR X8, [X31 + 0x8]
	0x03DFA6E4 MOVZ W0, 0x1
	0x03DFA6E8 B 0x3DFA6FC
	0x03DFA6EC MOV X8, X31
	0x03DFA6F0 MOV W0, W31
	0x03DFA6F4 B 0x3DFA6FC
	0x03DFA6F8 MOV X8, X31
	0x03DFA6FC STR X8, [X19]
	0x03DFA700 LDP X20, X19, [X31 + 0x50]
	0x03DFA704 LDP X22, X21, [X31 + 0x40]
	0x03DFA708 LDR X30, [X31 + 0x30]
	0x03DFA70C ADD X31, X31, 0x60
	0x03DFA710 RET
	0x03DFA714 SUB X31, X31, 0x60
	0x03DFA718 STR X30, [X31 + 0x30]
	0x03DFA71C STP X22, X21, [X31 + 0x40]
	0x03DFA720 STP X20, X19, [X31 + 0x50]
	0x03DFA724 ADRP X22, 0x5EE000
	0x03DFA728 LDRB W8, [X22 + 0x2A5]
	0x03DFA72C MOV X19, X2
	0x03DFA730 MOV X21, X1
	0x03DFA734 MOV X20, X0
	0x03DFA738 TBNZ X8, 0x0, 0x3DFA768
	0x03DFA73C ADRP X0, 0x36F000
	0x03DFA740 LDR X0, [X0 + 0xC68]
	0x03DFA744 BL 0x1C16CF4
	0x03DFA748 ADRP X0, 0x36D000
	0x03DFA74C LDR X0, [X0 + 0x3E8]
	0x03DFA750 BL 0x1C16CF4
	0x03DFA754 ADRP X0, 0x2F9000
	0x03DFA758 LDR X0, [X0 + 0x598]
	0x03DFA75C BL 0x1C16CF4
	0x03DFA760 MOVZ W8, 0x1
	0x03DFA764 STRB W8, [X22 + 0x2A5]
	0x03DFA768 MOVI V0.2D, 0x0
	0x03DFA76C STP X31, X31, [X31 + 0x20]
	0x03DFA770 STP V0, V0, [X31]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0]
	007 Compare X8, 0
	008 JumpIfEqual {48}
	009 Move X8, [X8+928]
	010 Move W21, W3
	011 Move W22, W2
	012 Move X19, X0
	013 Move X20, X1
	014 Compare X8, 0
	015 JumpIfEqual {19}
	016 Move W8, [X8+76]
	017 Compare W8, 0
	018 JumpIfNotEqual {49}
	019 Compare X20, 0
	020 JumpIfEqual {48}
	021 Move W1, 1
	022 Move X0, X20
	023 Move X2, X31
	024 Call VisualElement.InvokeHierarchyChanged, X0, X1
	025 Move X0, X19
	026 Move W1, W22
	027 Call Hierarchy.RemoveChildAtIndex, X0, X1
	028 Move X0, X19
	029 Move X1, X20
	030 Move W2, W21
	031 Call Hierarchy.PutChildAtIndex, X0, X1, X2
	032 Move X0, X20
	033 Move W1, W31
	034 Move X2, X31
	035 Call VisualElement.InvokeHierarchyChanged, X0, X1
	036 Move X0, [X19]
	037 Compare X0, 0
	038 JumpIfEqual {48}
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move W1, 4
	044 Move X2, X31
	045 Move X30, [X31+48]
	046 Call VisualElement.IncrementVersion, X0, X1
	047 Return 
	048 Call 0x1C17F20
	049 Move X0, 0x2FA000
	050 Move X0, [X0+1456]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0x370000
	055 Move X0, [X0+2992]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Move X2, X31
	060 Call InvalidOperationException..ctor, X0, X1
	061 Move X0, 0x370000
	062 Move X0, [X0+3064]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Call 0x1C17DEC

Method: System.Int32 get_childCount()

Disassembly:
	0x03DF9994 LDR X2, [X8]
	0x03DF9998 LDP X30, X21, [X31], #0x20
	0x03DF999C B 0x301CD00
	0x03DF99A0 BL 0x1C16F20
	0x03DF99A4 B 0x3DF98E4
	0x03DF99A8 STR X30, [X31 - 0x10]!
	0x03DF99AC LDR X8, [X0]
	0x03DF99B0 CBZ X8, 0x3DF99C0
	0x03DF99B4 LDR X0, [X8 + 0x398]
	0x03DF99B8 LDR X30, [X31], #0x10
	0x03DF99BC RET
	0x03DF99C0 BL 0x1C16F20
	0x03DF99C4 LDR X8, [X0]
	0x03DF99C8 CMP X8, X1
	0x03DF99CC CSET W0, EQ
	0x03DF99D0 RET
	0x03DF99D4 CMP X0, X1
	0x03DF99D8 CSET W0, EQ
	0x03DF99DC RET
	0x03DF99E0 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5F0000
	005 Move W8, [X20+659]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x324000
	012 Move X0, [X0+232]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+659], W8
	016 Move X8, [X19]
	017 Compare X8, 0
	018 JumpIfEqual {27}
	019 Move X8, [X8+920]
	020 Compare X8, 0
	021 JumpIfEqual {27}
	022 Move W0, [X8+24]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return X0
	027 Call 0x1C17F20

Method: UnityEngine.UIElements.VisualElement get_Item(System.Int32 key)

Disassembly:
	0x03DFA8E4 B 0x33BDD8C
	0x03DFA8E8 LDR X0, [X0 + 0x10]
	0x03DFA8EC RET
	0x03DFA8F0 STR X30, [X31 - 0x30]!
	0x03DFA8F4 STP X22, X21, [X31 + 0x10]
	0x03DFA8F8 STP X20, X19, [X31 + 0x20]
	0x03DFA8FC ADRP X21, 0x5EE000
	0x03DFA900 ADRP X22, 0x2FB000
	0x03DFA904 LDRB W8, [X21 + 0x2A9]
	0x03DFA908 LDR X22, [X22 + 0x278]
	0x03DFA90C MOV X19, X1
	0x03DFA910 MOV X20, X0
	0x03DFA914 TBNZ X8, 0x0, 0x3DFA92C
	0x03DFA918 ADRP X0, 0x2FB000
	0x03DFA91C LDR X0, [X0 + 0x278]
	0x03DFA920 BL 0x1C16CF4
	0x03DFA924 MOVZ W8, 0x1
	0x03DFA928 STRB W8, [X21 + 0x2A9]
	0x03DFA92C LDR X8, [X22]
	0x03DFA930 MOV X0, X20
	0x03DFA934 MOV X1, X31
	0x03DFA938 LDR X8, [X8 + 0xB8]
	0x03DFA93C LDR X8, [X8]
	0x03DFA940 STP X8, X8, [X20 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5EF000
	006 Move W8, [X21+660]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x323000
	014 Move X0, [X0+240]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+660], W8
	018 Move X8, [X20]
	019 Compare X8, 0
	020 JumpIfEqual {34}
	021 Move X0, [X8+920]
	022 Compare X0, 0
	023 JumpIfEqual {34}
	024 Move X8, 0x323000
	025 Move X8, [X8+240]
	026 Move W1, W19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X2, [X8]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call List`1<Object>.get_Item, X0, X1
	033 Return X0
	034 Call 0x1C17F20

Method: System.Int32 IndexOf(UnityEngine.UIElements.VisualElement element)

Disassembly:
	0x03DFA944 STR X8, [X20 + 0x28]
	0x03DFA948 BL 0x33BDD8C
	0x03DFA94C STR X19, [X20 + 0x10]
	0x03DFA950 LDP X20, X19, [X31 + 0x20]
	0x03DFA954 LDP X22, X21, [X31 + 0x10]
	0x03DFA958 LDR X30, [X31], #0x30
	0x03DFA95C RET
	0x03DFA960 STP X30, X19, [X31 - 0x10]!
	0x03DFA964 MOV X19, X0
	0x03DFA968 LDR X0, [X0 + 0x18]
	0x03DFA96C MOV X1, X31
	0x03DFA970 BL 0x32277A8
	0x03DFA974 TBZ X0, 0x0, 0x3DFA998
	0x03DFA978 LDR X0, [X19 + 0x10]
	0x03DFA97C CBZ X0, 0x3DFA9A4
	0x03DFA980 LDR X8, [X0]
	0x03DFA984 LDR X9, [X8 + 0x2E8]
	0x03DFA988 LDR X1, [X8 + 0x2F0]
	0x03DFA98C BLR X9
	0x03DFA990 STR X0, [X19 + 0x18]
	0x03DFA994 B 0x3DFA99C
	0x03DFA998 LDR X0, [X19 + 0x18]
	0x03DFA99C LDP X30, X19, [X31], #0x10
	0x03DFA9A0 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5EF000
	006 Move W8, [X21+661]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x370000
	014 Move X0, [X0+3008]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+661], W8
	018 Move X8, [X20]
	019 Compare X8, 0
	020 JumpIfEqual {34}
	021 Move X0, [X8+920]
	022 Compare X0, 0
	023 JumpIfEqual {34}
	024 Move X8, 0x370000
	025 Move X8, [X8+3008]
	026 Move X1, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X2, [X8]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call List`1<Object>.IndexOf, X0, X1
	033 Return X0
	034 Call 0x1C17F20

Method: UnityEngine.UIElements.VisualElement ElementAt(System.Int32 index)

Disassembly:
	0x03DFA9A4 BL 0x1C16F20

ISIL:
	001 Call Hierarchy.get_Item, X0, X1
	002 Return X0

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.UIElements.VisualElement> Children()

Disassembly:
	0x03DFA9A8 STR X30, [X31 - 0x20]!
	0x03DFA9AC STP X20, X19, [X31 + 0x10]
	0x03DFA9B0 MOV X19, X0
	0x03DFA9B4 LDR X0, [X0 + 0x20]
	0x03DFA9B8 MOV X1, X31
	0x03DFA9BC BL 0x32277A8
	0x03DFA9C0 TBZ X0, 0x0, 0x3DFAA2C

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+920]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void SetParent(UnityEngine.UIElements.VisualElement value)

Disassembly:
	0x03DF9E10 MOV X0, X20
	0x03DF9E14 MOV W2, W31
	0x03DF9E18 BL 0x1C5C788
	0x03DF9E1C B 0x3DF9E38
	0x03DF9E20 LDP X20, X19, [X31 + 0x10]
	0x03DF9E24 LDR X30, [X31], #0x20
	0x03DF9E28 RET
	0x03DF9E2C LDRSW X9, [X10]
	0x03DF9E30 ADD X8, X8, X9, 0x4, LSL
	0x03DF9E34 ADD X0, X8, 0x138
	0x03DF9E38 LDP X3, X2, [X0]
	0x03DF9E3C MOV X0, X20
	0x03DF9E40 MOV X1, X19
	0x03DF9E44 LDP X20, X19, [X31 + 0x10]
	0x03DF9E48 LDR X30, [X31], #0x20
	0x03DF9E4C BR X3
	0x03DF9E50 BL 0x1C16F20
	0x03DF9E54 STR X30, [X31 - 0x10]!
	0x03DF9E58 LDR X8, [X0 + 0x38]
	0x03DF9E5C CBZ X8, 0x3DF9E84
	0x03DF9E60 LDR X0, [X8 + 0x3A0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0]
	006 Compare X0, 0
	007 JumpIfEqual {28}
	008 Move X19, X1
	009 Move [X0+904], X1
	010 Move [X0+912], X1
	011 Move X1, X31
	012 Call VisualElement.DirtyNextParentWithEventCallback, X0
	013 Move X0, [X20]
	014 Compare X19, 0
	015 JumpIfEqual {25}
	016 Move X1, [X19+928]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X2, X31
	022 Move X30, [X31+32]
	023 Call VisualElement.SetPanel, X0, X1
	024 Return 
	025 Move X1, X31
	026 Compare X0, 0
	027 JumpIfNotEqual {19}
	028 Call 0x1C17F20

Method: System.Void PutChildAtIndex(UnityEngine.UIElements.VisualElement child, System.Int32 index)

Disassembly:
	0x03DF9CD4 STRB W8, [X19 + 0x40]
	0x03DF9CD8 BL 0x3DE13DC
	0x03DF9CDC LDR X8, [X19 + 0x38]
	0x03DF9CE0 CBZ X8, 0x3DF9D74
	0x03DF9CE4 LDR X0, [X8 + 0x3A0]
	0x03DF9CE8 CBZ X0, 0x3DF9D74
	0x03DF9CEC LDR X8, [X0]
	0x03DF9CF0 LDR X9, [X8 + 0x3C8]
	0x03DF9CF4 LDR X1, [X8 + 0x3D0]
	0x03DF9CF8 BLR X9
	0x03DF9CFC CBZ X0, 0x3DF9D74
	0x03DF9D00 ADRP X10, 0x36F000
	0x03DF9D04 LDR X8, [X0]
	0x03DF9D08 LDR X10, [X10 + 0xD18]
	0x03DF9D0C MOV X20, X0
	0x03DF9D10 LDRH W9, [X8 + 0x12E]
	0x03DF9D14 LDR X1, [X10]
	0x03DF9D18 CBZ X9, 0x3DF9D3C
	0x03DF9D1C LDR X10, [X8 + 0xB0]
	0x03DF9D20 ADD X10, X10, 0x8
	0x03DF9D24 LDUR X11, [X10 - 0x8]
	0x03DF9D28 CMP X11, X1
	0x03DF9D2C B.EQ 0x3DF9D4C
	0x03DF9D30 SUBS X9, X9, 0x1
	0x03DF9D34 ADD X10, X10, 0x10
	0x03DF9D38 B.NE 0x3DF9D24
	0x03DF9D3C MOVZ W2, 0x1
	0x03DF9D40 MOV X0, X20
	0x03DF9D44 BL 0x1C5C788
	0x03DF9D48 B 0x3DF9D5C
	0x03DF9D4C LDR W9, [X10]
	0x03DF9D50 ADD W9, W9, 0x1
	0x03DF9D54 ADD X8, X8, W9, 0x4, SXTW
	0x03DF9D58 ADD X0, X8, 0x138
	0x03DF9D5C LDP X3, X2, [X0]
	0x03DF9D60 MOV X0, X20
	0x03DF9D64 MOV X1, X19
	0x03DF9D68 LDP X20, X19, [X31 + 0x10]
	0x03DF9D6C LDR X30, [X31], #0x20
	0x03DF9D70 BR X3
	0x03DF9D74 BL 0x1C16F20
	0x03DF9D78 STR X30, [X31 - 0x20]!
	0x03DF9D7C STP X20, X19, [X31 + 0x10]
	0x03DF9D80 ADRP X20, 0x5EF000
	0x03DF9D84 LDRB W8, [X20 + 0x29D]
	0x03DF9D88 MOV X19, X0
	0x03DF9D8C TBNZ X8, 0x0, 0x3DF9DA4
	0x03DF9D90 ADRP X0, 0x36F000
	0x03DF9D94 LDR X0, [X0 + 0xD18]
	0x03DF9D98 BL 0x1C16CF4
	0x03DF9D9C MOVZ W8, 0x1
	0x03DF9DA0 STRB W8, [X20 + 0x29D]
	0x03DF9DA4 LDRB W8, [X19 + 0x40]
	0x03DF9DA8 CBZ W8, 0x3DF9E20
	0x03DF9DAC LDR X8, [X19 + 0x38]
	0x03DF9DB0 STRB W31, [X19 + 0x40]
	0x03DF9DB4 CBZ X8, 0x3DF9E50
	0x03DF9DB8 LDR X0, [X8 + 0x3A0]
	0x03DF9DBC CBZ X0, 0x3DF9E50
	0x03DF9DC0 LDR X8, [X0]
	0x03DF9DC4 LDR X9, [X8 + 0x3C8]
	0x03DF9DC8 LDR X1, [X8 + 0x3D0]
	0x03DF9DCC BLR X9
	0x03DF9DD0 CBZ X0, 0x3DF9E50
	0x03DF9DD4 ADRP X10, 0x36F000
	0x03DF9DD8 LDR X8, [X0]
	0x03DF9DDC LDR X10, [X10 + 0xD18]
	0x03DF9DE0 MOV X20, X0
	0x03DF9DE4 LDRH W9, [X8 + 0x12E]
	0x03DF9DE8 LDR X1, [X10]
	0x03DF9DEC CBZ X9, 0x3DF9E10
	0x03DF9DF0 LDR X10, [X8 + 0xB0]
	0x03DF9DF4 ADD X10, X10, 0x8
	0x03DF9DF8 LDUR X11, [X10 - 0x8]
	0x03DF9DFC CMP X11, X1
	0x03DF9E00 B.EQ 0x3DF9E2C
	0x03DF9E04 SUBS X9, X9, 0x1
	0x03DF9E08 ADD X10, X10, 0x10
	0x03DF9E0C B.NE 0x3DF9DF8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5F0000
	007 Move W8, [X22+662]
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x324000
	016 Move X0, [X0+224]
	017 Call 0x1C17CF4
	018 Move X0, 0x371000
	019 Move X0, [X0+3000]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+662], W8
	023 Move X0, X20
	024 Call Hierarchy.get_childCount, X0
	025 Move X9, [X20]
	026 Compare X9, 0
	027 JumpIfEqual {92}
	028 Move W8, W0
	029 Move X0, [X9+920]
	030 Compare X0, 0
	031 JumpIfEqual {92}
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, 0x371000
	034 Move X8, [X8+3000]
	035 Move W1, W21
	036 Move X2, X19
	037 Move X3, [X8]
	038 Call List`1<Object>.Insert, X0, X1, X2
	039 Move X8, [X20]
	040 Compare X8, 0
	041 JumpIfEqual {92}
	042 Compare X19, 0
	043 JumpIfEqual {92}
	044 Move X0, [X8+696]
	045 Compare X0, 0
	046 JumpIfEqual {92}
	047 Move X2, [X19+696]
	048 Move W1, W21
	049 Move X9, 0x324000
	050 Move X9, [X9+224]
	051 Move W10, [X0+28]
	052 Move X8, [X0+16]
	053 Move X9, [X9]
	054 Add W10, W10, 1
	055 Move [X0+28], W10
	056 Compare X8, 0
	057 JumpIfEqual {92}
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Move W11, [X8+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add W9, W10, 1
	062 Add X8, X8, X10
	063 Move [X0+24], W9
	064 Move [X8+32], X19
	065 Move X8, [X9+32]
	066 Move X1, X19
	067 Move X8, [X8+192]
	068 Move X2, [X8+112]
	069 Call List`1<Object>.AddWithResize, X0, X1
	070 Move X8, [X20]
	071 Compare X8, 0
	072 JumpIfEqual {92}
	073 Move X20, [X8+696]
	074 Compare X20, 0
	075 JumpIfEqual {92}
	076 Move X0, X20
	077 Move X1, X31
	078 Call YogaNode.get_Count, X0
	079 Compare X19, 0
	080 JumpIfEqual {92}
	081 Move X2, [X19+696]
	082 Move W1, W0
	083 Move X0, X20
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X3, X31
	089 Move X30, [X31+48]
	090 Call YogaNode.Insert, X0, X1, X2
	091 Return 
	092 Call 0x1C17F20

Method: System.Void RemoveChildAtIndex(System.Int32 index)

Disassembly:
	0x03DFA168 TBZ X0, 0x0, 0x3DFA174
	0x03DFA16C MOVZ W0, 0x1
	0x03DFA170 B 0x3DFA1A0
	0x03DFA174 ADRP X8, 0x36F000
	0x03DFA178 LDR X8, [X8 + 0xC30]
	0x03DFA17C LDR X1, [X21 + 0x38]
	0x03DFA180 ADD X4, X31, 0x8
	0x03DFA184 MOVZ W2, 0x2
	0x03DFA188 LDR X5, [X8]
	0x03DFA18C MOV X0, X21
	0x03DFA190 MOV X3, X20
	0x03DFA194 BL 0x2294710
	0x03DFA198 LDR V0, [X31 + 0xC]
	0x03DFA19C STR S0, [X19]
	0x03DFA1A0 LDP X20, X19, [X31 + 0x30]
	0x03DFA1A4 LDP X22, X21, [X31 + 0x20]
	0x03DFA1A8 LDP X30, X23, [X31 + 0x10]
	0x03DFA1AC AND W0, W0, 0x1
	0x03DFA1B0 ADD X31, X31, 0x40
	0x03DFA1B4 RET
	0x03DFA1B8 SUB X31, X31, 0x40
	0x03DFA1BC STR X30, [X31 + 0x10]
	0x03DFA1C0 STP X22, X21, [X31 + 0x20]
	0x03DFA1C4 STP X20, X19, [X31 + 0x30]
	0x03DFA1C8 ADRP X22, 0x5EE000
	0x03DFA1CC LDRB W8, [X22 + 0x2A1]
	0x03DFA1D0 MOV X19, X2
	0x03DFA1D4 MOV X20, X1
	0x03DFA1D8 MOV X21, X0
	0x03DFA1DC TBNZ X8, 0x0, 0x3DFA1F4
	0x03DFA1E0 ADRP X0, 0x36F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5EF000
	006 Move W8, [X21+663]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x370000
	014 Move X0, [X0+3048]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+663], W8
	018 Move X8, [X20]
	019 Compare X8, 0
	020 JumpIfEqual {43}
	021 Move X0, [X8+920]
	022 Compare X0, 0
	023 JumpIfEqual {43}
	024 Move X8, 0x370000
	025 Move X8, [X8+3048]
	026 Move W1, W19
	027 Move X2, [X8]
	028 Call List`1<Object>.RemoveAt, X0, X1
	029 Move X8, [X20]
	030 Compare X8, 0
	031 JumpIfEqual {43}
	032 Move X0, [X8+696]
	033 Compare X0, 0
	034 JumpIfEqual {43}
	035 Move W1, W19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X2, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call YogaNode.RemoveAt, X0, X1
	042 Return 
	043 Call 0x1C17F20

Method: System.Void ReleaseChildList()

Disassembly:
	0x03DFA1E4 LDR X0, [X0 + 0xC38]
	0x03DFA1E8 BL 0x1C16CF4
	0x03DFA1EC MOVZ W8, 0x1
	0x03DFA1F0 STRB W8, [X22 + 0x2A1]
	0x03DFA1F4 ADD X3, X31, 0x0
	0x03DFA1F8 MOVZ W2, 0x2
	0x03DFA1FC MOV X0, X21
	0x03DFA200 MOV X1, X20
	0x03DFA204 STP X31, X31, [X31]
	0x03DFA208 STR W31, [X31 + 0x1C]
	0x03DFA20C BL 0x3DFA05C
	0x03DFA210 TBZ X0, 0x0, 0x3DFA250
	0x03DFA214 LDR X0, [X31]
	0x03DFA218 CBZ X0, 0x3DFA270
	0x03DFA21C LDR X1, [X31 + 0x8]
	0x03DFA220 ADD X2, X31, 0x1C
	0x03DFA224 BL 0x3DFA0F8
	0x03DFA228 TBZ X0, 0x0, 0x3DFA250
	0x03DFA22C LDR V0, [X31 + 0x1C]
	0x03DFA230 MOVZ W8, 0x7F800000
	0x03DFA234 FMOV S1, W8
	0x03DFA238 MOVZ W9, 0x80000000
	0x03DFA23C FCVTZS W8, S0
	0x03DFA240 FCMP S0, S1
	0x03DFA244 CSEL W8, W9, W8, EQ
	0x03DFA248 MOVZ W0, 0x1
	0x03DFA24C B 0x3DFA258
	0x03DFA250 MOV W8, W31
	0x03DFA254 MOV W0, W31
	0x03DFA258 STR W8, [X19]
	0x03DFA25C LDP X20, X19, [X31 + 0x30]
	0x03DFA260 LDP X22, X21, [X31 + 0x20]
	0x03DFA264 LDR X30, [X31 + 0x10]
	0x03DFA268 ADD X31, X31, 0x40
	0x03DFA26C RET
	0x03DFA270 BL 0x1C16F20
	0x03DFA274 SUB X31, X31, 0x40
	0x03DFA278 STR X30, [X31 + 0x10]
	0x03DFA27C STP X22, X21, [X31 + 0x20]
	0x03DFA280 STP X20, X19, [X31 + 0x30]
	0x03DFA284 ADRP X22, 0x5EE000
	0x03DFA288 LDRB W8, [X22 + 0x2A2]
	0x03DFA28C MOV X19, X2
	0x03DFA290 MOV X20, X1
	0x03DFA294 MOV X21, X0
	0x03DFA298 TBNZ X8, 0x0, 0x3DFA2C8
	0x03DFA29C ADRP X0, 0x36F000
	0x03DFA2A0 LDR X0, [X0 + 0xC40]
	0x03DFA2A4 BL 0x1C16CF4
	0x03DFA2A8 ADRP X0, 0x36D000
	0x03DFA2AC LDR X0, [X0 + 0x3E8]
	0x03DFA2B0 BL 0x1C16CF4
	0x03DFA2B4 ADRP X0, 0x36B000
	0x03DFA2B8 LDR X0, [X0 + 0x3D8]
	0x03DFA2BC BL 0x1C16CF4
	0x03DFA2C0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5EF000
	007 Move W8, [X20+664]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x323000
	014 Move X0, [X0+248]
	015 Call 0x1C17CF4
	016 Move X0, 0x322000
	017 Move X0, [X0+2200]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+664], W8
	021 Move X8, [X19]
	022 Compare X8, 0
	023 JumpIfEqual {70}
	024 Move X20, 0x322000
	025 Move X20, [X20+2200]
	026 Move X21, [X8+920]
	027 Move X0, [X20]
	028 Move W9, [X0+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X8, [X0+184]
	034 Move X9, [X8+72]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X21, [X19]
	037 Compare X21, 0
	038 JumpIfEqual {70}
	039 Move X22, 0x323000
	040 Move W9, [X0+224]
	041 Move X19, [X21+920]
	042 Move X22, [X22+248]
	043 Compare W9, 0
	044 JumpIfNotEqual {48}
	045 Call 0x1C17DFC
	046 Move X8, [X20]
	047 Move X8, [X8+184]
	048 Move X8, [X8+72]
	049 Move [X21+920], X8
	050 Move X0, [X22]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X19
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X1, X31
	061 Move X30, [X31+48]
	062 Call VisualElementListPool.Release, X0
	063 Return 
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Return 
	070 Call 0x1C17F20

Method: System.Boolean Equals(UnityEngine.UIElements.VisualElement/Hierarchy other)

Disassembly:
	0x03DFA9C4 LDR X0, [X19 + 0x10]
	0x03DFA9C8 CBZ X0, 0x3DFAA3C
	0x03DFA9CC LDR X8, [X0]
	0x03DFA9D0 LDR X9, [X8 + 0x3C8]

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03DFA9E0 CBZ X8, 0x3DFAA3C
	0x03DFA9E4 LDR X9, [X8]
	0x03DFA9E8 MOV W20, W0
	0x03DFA9EC MOV X0, X8
	0x03DFA9F0 LDP X10, X1, [X9 + 0x1A8]
	0x03DFA9F4 BLR X10
	0x03DFA9F8 STR X0, [X19 + 0x20]
	0x03DFA9FC TBZ X20, 0x0, 0x3DFAA2C
	0x03DFAA00 CBZ X0, 0x3DFAA3C
	0x03DFAA04 MOVZ W1, 0x60
	0x03DFAA08 MOV X2, X31
	0x03DFAA0C BL 0x322BD98
	0x03DFAA10 TBNZ X0, 0x1F, 0x3DFAA2C
	0x03DFAA14 MOV W1, W0
	0x03DFAA18 LDR X0, [X19 + 0x20]
	0x03DFAA1C CBZ X0, 0x3DFAA3C
	0x03DFAA20 MOV X2, X31
	0x03DFAA24 BL 0x3228D2C
	0x03DFAA28 STR X0, [X19 + 0x20]
	0x03DFAA2C LDR X0, [X19 + 0x20]
	0x03DFAA30 LDP X20, X19, [X31 + 0x10]
	0x03DFAA34 LDR X30, [X31], #0x20
	0x03DFAA38 RET
	0x03DFAA3C BL 0x1C16F20
	0x03DFAA40 STP X30, X19, [X31 - 0x10]!
	0x03DFAA44 MOV X19, X0
	0x03DFAA48 LDR X0, [X0 + 0x28]
	0x03DFAA4C MOV X1, X31
	0x03DFAA50 BL 0x32277A8
	0x03DFAA54 TBZ X0, 0x0, 0x3DFAA78

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5EF000
	006 Move W8, [X21+665]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x370000
	014 Move X0, [X0+3072]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+665], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x370000
	021 Move X8, [X8+3072]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X0, X20
	027 Call 0x1C17E08
	028 Move X8, [X0]
	029 Move X9, [X19]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03DFAA58 LDR X0, [X19 + 0x10]
	0x03DFAA5C CBZ X0, 0x3DFAA84
	0x03DFAA60 LDR X8, [X0]
	0x03DFAA64 LDR X9, [X8 + 0x2C8]
	0x03DFAA68 LDR X1, [X8 + 0x2D0]
	0x03DFAA6C BLR X9

ISIL:
	001 Move X0, [X0]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0]
	005 Move X2, [X8+344]
	006 Move X1, [X8+352]
	007 CallNoReturn X2
	008 Return X0

Method: System.Boolean op_Equality(UnityEngine.UIElements.VisualElement/Hierarchy x, UnityEngine.UIElements.VisualElement/Hierarchy y)

Disassembly:
	0x03DFA9D4 LDR X1, [X8 + 0x3D0]
	0x03DFA9D8 BLR X9
	0x03DFA9DC LDR X8, [X19 + 0x10]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

