Type: UnityEngine.UIElements.CommandEventDispatchingStrategy

Method: System.Boolean CanDispatchEvent(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03D9E514 B.NE 0x3D9E500
	0x03D9E518 MOV X0, X20
	0x03D9E51C MOV W2, W31
	0x03D9E520 BL 0x1C5C788
	0x03D9E524 B 0x3D9E534
	0x03D9E528 LDRSW X9, [X10]
	0x03D9E52C ADD X8, X8, X9, 0x4, LSL
	0x03D9E530 ADD X0, X8, 0x138
	0x03D9E534 LDP X8, X1, [X0]
	0x03D9E538 MOV X0, X20
	0x03D9E53C BLR X8
	0x03D9E540 MOV X1, X19
	0x03D9E544 BL 0x3D9D984
	0x03D9E548 LDR W8, [X19 + 0x40]
	0x03D9E54C ORR W8, W8, 0x40
	0x03D9E550 STR W8, [X19 + 0x40]
	0x03D9E554 LDP X20, X19, [X31 + 0x10]
	0x03D9E558 LDP X30, X21, [X31], #0x20
	0x03D9E55C RET
	0x03D9E560 LDR W8, [X19 + 0x40]
	0x03D9E564 LDRB W9, [X21 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x64A000
	006 Move X21, 0x3CA000
	007 Move W8, [X20+3760]
	008 Move X21, [X21+3968]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3CA000
	015 Move X0, [X0+3968]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3760], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x1C17E00
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSET not yet implemented."
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return X0

Method: System.Void DispatchEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel)

Disassembly:
	0x03D9E568 MOV X0, X19
	0x03D9E56C AND W8, W8, 0xFFFFFF7F
	0x03D9E570 ORR W8, W8, W9, 0x7
	0x03D9E574 STR W8, [X19 + 0x40]
	0x03D9E578 BL 0x3D9DDD0
	0x03D9E57C B 0x3D9E548
	0x03D9E580 BL 0x1C16F20
	0x03D9E584 STR X30, [X31 - 0x10]!
	0x03D9E588 LDR X9, [X0 + 0x30]
	0x03D9E58C CBZ X9, 0x3D9E5F0
	0x03D9E590 LDR W8, [X9 + 0x18]
	0x03D9E594 CMP W8, W1
	0x03D9E598 B.LS 0x3D9E5F4
	0x03D9E59C SXTW X8, W1
	0x03D9E5A0 ADD X9, X9, X8, 0x3, LSL
	0x03D9E5A4 LDR V0, [X9 + 0x20]
	0x03D9E5A8 STR D0, [X2]
	0x03D9E5AC LDR X9, [X0 + 0x38]
	0x03D9E5B0 CBZ X9, 0x3D9E5F0
	0x03D9E5B4 LDR W10, [X9 + 0x18]
	0x03D9E5B8 CMP W10, W1
	0x03D9E5BC B.LS 0x3D9E5F4
	0x03D9E5C0 ADD X9, X9, X8
	0x03D9E5C4 LDRB W9, [X9 + 0x20]
	0x03D9E5C8 STRB W9, [X3]
	0x03D9E5CC LDR X9, [X0 + 0x10]
	0x03D9E5D0 CBZ X9, 0x3D9E5F0
	0x03D9E5D4 LDR W10, [X9 + 0x18]
	0x03D9E5D8 CMP W10, W1
	0x03D9E5DC B.LS 0x3D9E5F4
	0x03D9E5E0 ADD X8, X9, X8, 0x3, LSL
	0x03D9E5E4 LDR X0, [X8 + 0x20]
	0x03D9E5E8 LDR X30, [X31], #0x10
	0x03D9E5EC RET
	0x03D9E5F0 BL 0x1C16F20
	0x03D9E5F4 BL 0x1C16F28
	0x03D9E5F8 STR X30, [X31 - 0x10]!
	0x03D9E5FC LDR X8, [X0 + 0x10]
	0x03D9E600 CBZ X8, 0x3D9E620
	0x03D9E604 LDR W9, [X8 + 0x18]
	0x03D9E608 CMP W9, W1
	0x03D9E60C B.LS 0x3D9E624
	0x03D9E610 ADD X8, X8, W1, 0x3, SXTW
	0x03D9E614 LDR X0, [X8 + 0x20]
	0x03D9E618 LDR X30, [X31], #0x10
	0x03D9E61C RET
	0x03D9E620 BL 0x1C16F20
	0x03D9E624 BL 0x1C16F28
	0x03D9E628 STP D9, D8, [X31 - 0x40]!
	0x03D9E62C STP X30, X23, [X31 + 0x10]
	0x03D9E630 STP X22, X21, [X31 + 0x20]
	0x03D9E634 STP X20, X19, [X31 + 0x30]
	0x03D9E638 ADRP X22, 0x649000
	0x03D9E63C ADRP X23, 0x355000
	0x03D9E640 LDRB W8, [X22 + 0xEBC]
	0x03D9E644 LDR X23, [X23 + 0xA28]
	0x03D9E648 MOV V8.16B, V1.16B
	0x03D9E64C MOV V9.16B, V0.16B
	0x03D9E650 MOV W19, W2
	0x03D9E654 MOV X21, X1
	0x03D9E658 MOV X20, X0
	0x03D9E65C TBNZ X8, 0x0, 0x3D9E674
	0x03D9E660 ADRP X0, 0x355000
	0x03D9E664 LDR X0, [X0 + 0xA28]
	0x03D9E668 BL 0x1C16CF4
	0x03D9E66C MOVZ W8, 0x1
	0x03D9E670 STRB W8, [X22 + 0xEBC]
	0x03D9E674 LDR X0, [X23]
	0x03D9E678 LDR W8, [X0 + 0xE0]
	0x03D9E67C CBNZ W8, 0x3D9E684
	0x03D9E680 BL 0x1C16DFC
	0x03D9E684 ORN W8, W31, W19, 0x0
	0x03D9E688 UBFM W0, W8, 0x1F, 0x1F
	0x03D9E68C MOV X1, X31
	0x03D9E690 BL 0x3C06E58
	0x03D9E694 LDR X8, [X20 + 0x18]
	0x03D9E698 CBZ X8, 0x3D9E774
	0x03D9E69C LDR W9, [X8 + 0x18]
	0x03D9E6A0 CMP W9, W19
	0x03D9E6A4 B.LS 0x3D9E778
	0x03D9E6A8 LDR X9, [X20 + 0x38]
	0x03D9E6AC CBZ X9, 0x3D9E774
	0x03D9E6B0 LDR W10, [X9 + 0x18]
	0x03D9E6B4 CMP W10, W19
	0x03D9E6B8 B.LS 0x3D9E778
	0x03D9E6BC SXTW X22, W19
	0x03D9E6C0 ADD X8, X8, X22, 0x3, LSL
	0x03D9E6C4 ADD X9, X9, X22
	0x03D9E6C8 LDR X8, [X8 + 0x20]
	0x03D9E6CC STRB W31, [X9 + 0x20]
	0x03D9E6D0 LDR X9, [X20 + 0x30]
	0x03D9E6D4 CBZ X9, 0x3D9E774
	0x03D9E6D8 LDR W10, [X9 + 0x18]
	0x03D9E6DC CMP W10, W19
	0x03D9E6E0 B.LS 0x3D9E778
	0x03D9E6E4 ADD X9, X9, X22, 0x3, LSL
	0x03D9E6E8 CMP X8, X21
	0x03D9E6EC STP S9, S8, [X9 + 0x20]
	0x03D9E6F0 B.EQ 0x3D9E760
	0x03D9E6F4 LDR X23, [X20 + 0x10]
	0x03D9E6F8 CBZ X23, 0x3D9E774
	0x03D9E6FC CBZ X21, 0x3D9E714
	0x03D9E700 LDR X8, [X23]
	0x03D9E704 MOV X0, X21
	0x03D9E708 LDR X1, [X8 + 0x40]
	0x03D9E70C BL 0x1C16E00
	0x03D9E710 CBZ X0, 0x3D9E77C
	0x03D9E714 LDR W8, [X23 + 0x18]
	0x03D9E718 CMP W8, W19
	0x03D9E71C B.LS 0x3D9E778
	0x03D9E720 ADD X8, X23, X22, 0x3, LSL
	0x03D9E724 STR X21, [X8 + 0x20]
	0x03D9E728 LDR X8, [X20 + 0x20]
	0x03D9E72C CBZ X8, 0x3D9E774
	0x03D9E730 LDR W9, [X8 + 0x18]
	0x03D9E734 CMP W9, W19
	0x03D9E738 B.LS 0x3D9E778
	0x03D9E73C ADD X8, X8, X22, 0x3, LSL
	0x03D9E740 STR X31, [X8 + 0x20]
	0x03D9E744 LDR X8, [X20 + 0x28]
	0x03D9E748 CBZ X8, 0x3D9E774
	0x03D9E74C LDR W9, [X8 + 0x18]
	0x03D9E750 CMP W9, W19
	0x03D9E754 B.LS 0x3D9E778
	0x03D9E758 ADD X8, X8, X22, 0x3, LSL
	0x03D9E75C STR X31, [X8 + 0x20]
	0x03D9E760 LDP X20, X19, [X31 + 0x30]
	0x03D9E764 LDP X22, X21, [X31 + 0x20]
	0x03D9E768 LDP X30, X23, [X31 + 0x10]
	0x03D9E76C LDP D9, D8, [X31], #0x40
	0x03D9E770 RET
	0x03D9E774 BL 0x1C16F20
	0x03D9E778 BL 0x1C16F28
	0x03D9E77C BL 0x1C16F44
	0x03D9E780 MOV X1, X31
	0x03D9E784 BL 0x1C16DEC
	0x03D9E788 STR D8, [X31 - 0x30]!
	0x03D9E78C STP X30, X21, [X31 + 0x10]
	0x03D9E790 STP X20, X19, [X31 + 0x20]
	0x03D9E794 ADRP X19, 0x649000
	0x03D9E798 ADRP X21, 0x37E000
	0x03D9E79C LDRB W8, [X19 + 0xEBD]
	0x03D9E7A0 LDR X21, [X21 + 0xE78]
	0x03D9E7A4 MOV X20, X1
	0x03D9E7A8 TBNZ X8, 0x0, 0x3D9E7CC
	0x03D9E7AC ADRP X0, 0x380000
	0x03D9E7B0 LDR X0, [X0 + 0xD30]
	0x03D9E7B4 BL 0x1C16CF4
	0x03D9E7B8 ADRP X0, 0x37E000
	0x03D9E7BC LDR X0, [X0 + 0xE78]
	0x03D9E7C0 BL 0x1C16CF4
	0x03D9E7C4 MOVZ W8, 0x1
	0x03D9E7C8 STRB W8, [X19 + 0xEBD]
	0x03D9E7CC LDR X1, [X21]
	0x03D9E7D0 MOV X0, X20
	0x03D9E7D4 BL 0x1C16E00
	0x03D9E7D8 CBZ X0, 0x3D9E820
	0x03D9E7DC LDR X8, [X0]
	0x03D9E7E0 LDR X1, [X21]
	0x03D9E7E4 MOV X19, X0
	0x03D9E7E8 LDRH W9, [X8 + 0x12E]
	0x03D9E7EC CBZ X9, 0x3D9E810
	0x03D9E7F0 LDR X10, [X8 + 0xB0]
	0x03D9E7F4 ADD X10, X10, 0x8
	0x03D9E7F8 LDUR X11, [X10 - 0x8]
	0x03D9E7FC CMP X11, X1
	0x03D9E800 B.EQ 0x3D9E87C
	0x03D9E804 SUBS X9, X9, 0x1
	0x03D9E808 ADD X10, X10, 0x10
	0x03D9E80C B.NE 0x3D9E7F8
	0x03D9E810 MOVZ W2, 0x5
	0x03D9E814 MOV X0, X19
	0x03D9E818 BL 0x1C5C788
	0x03D9E81C B 0x3D9E88C
	0x03D9E820 ADRP X21, 0x380000
	0x03D9E824 LDR X21, [X21 + 0xD30]
	0x03D9E828 MOV X0, X20
	0x03D9E82C LDR X1, [X21]
	0x03D9E830 BL 0x1C16E00
	0x03D9E834 CBZ X0, 0x3D9E8FC
	0x03D9E838 LDR X8, [X0]
	0x03D9E83C LDR X1, [X21]
	0x03D9E840 MOV X19, X0
	0x03D9E844 LDRH W9, [X8 + 0x12E]
	0x03D9E848 CBZ X9, 0x3D9E86C
	0x03D9E84C LDR X10, [X8 + 0xB0]
	0x03D9E850 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x64A000
	007 Move W8, [X21+3761]
	008 Move X20, X2
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x3C7000
	015 Move X0, [X0+192]
	016 Call 0x1C17CF4
	017 Move X0, 0x37F000
	018 Move X0, [X0+3712]
	019 Call 0x1C17CF4
	020 Move X0, 0x3CA000
	021 Move X0, [X0+3976]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3761], W8
	025 Compare X20, 0
	026 JumpIfEqual {187}
	027 Move X22, 0x37F000
	028 Move X8, [X20]
	029 Move X22, [X22+3712]
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X1, [X22]
	032 Compare X9, 0
	033 JumpIfEqual {40}
	034 Move X10, [X8+176]
	035 Add X10, X10, 8
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract X9, X9, 1
	039 Add X10, X10, 16
	040 Move W2, 3
	041 Move X0, X20
	042 Call 0x1C5D788
	043 Move W9, [X10]
	044 Add W9, W9, 3
	045 Add X8, X8, W9
	046 Add X0, X8, 312
	047 Move X8, [X0]
	048 Move X1, [X0+8]
	049 Move X0, X20
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Compare X0, 0
	052 JumpIfEqual {199}
	053 Call FocusController.GetLeafFocusedElement, X0
	054 Compare X0, 0
	055 JumpIfEqual {124}
	056 Move W8, [X0+16]
	057 Move X21, X0
	058 Compare W8, 0
	059 JumpIfEqual {135}
	060 Move X9, 0x3C7000
	061 Move X9, [X9+192]
	062 Move X8, [X21]
	063 Move X1, [X9]
	064 Move W10, [X8+304]
	065 Move W9, [X1+304]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, [X8+200]
	068 Add X8, X8, X9
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Compare X19, 0
	072 JumpIfEqual {199}
	073 Move X0, X19
	074 Move X1, X21
	075 Call EventBase.Skip, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {101}
	080 Move W2, 1
	081 Move W3, 1
	082 Move X0, X21
	083 Move X1, X19
	084 Move X4, X31
	085 Call IMGUIContainer.SendEventToIMGUI, X0, X1, X2, X3
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {101}
	090 Move W8, [X19+64]
	091 Move W9, [X19+48]
	092 Or W10, W8, 1
	093 Move [X19+64], W10
	094 Move TEMP, X9
	095 And TEMP, TEMP, 4
	096 Compare TEMP, 4
	097 JumpIfNotEqual {101}
	098 Move W9, 5
	099 Or W8, W8, W9
	100 Move [X19+64], W8
	101 Move W8, [X19+64]
	102 Move W9, 129
	103 And W8, W8, W9
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, [X19+88]
	106 Compare X0, 0
	107 JumpIfEqual {199}
	108 Move X9, 0x3CA000
	109 Move X9, [X9+3976]
	110 Move W10, [X0+28]
	111 Move X8, [X0+16]
	112 Move X9, [X9]
	113 Add W10, W10, 1
	114 Move [X0+28], W10
	115 Compare X8, 0
	116 JumpIfEqual {199}
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Move W11, [X8+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Add W9, W10, 1
	121 Add X8, X8, X10
	122 Move [X0+24], W9
	123 Move [X8+32], X21
	124 Move X8, [X20]
	125 Move X1, [X22]
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Compare X9, 0
	128 JumpIfEqual {175}
	129 Move X10, [X8+176]
	130 Add X10, X10, 8
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract X9, X9, 1
	134 Add X10, X10, 16
	135 Compare X19, 0
	136 JumpIfEqual {199}
	137 Move X8, [X19+72]
	138 Move [X19+80], X21
	139 Compare X8, 0
	140 JumpIfNotEqual {142}
	141 Move [X19+72], X21
	142 Move X0, X19
	143 Call EventDispatchUtilities.PropagateEvent, X0
	144 Move W8, [X19+64]
	145 Move W9, 129
	146 And W8, W8, W9
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X8, [X20]
	149 Move X1, [X22]
	150 NotImplemented "Instruction LDRH not yet implemented."
	151 Compare X9, 0
	152 JumpIfEqual {175}
	153 Move X10, [X8+176]
	154 Add X10, X10, 8
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Subtract X9, X9, 1
	158 Add X10, X10, 16
	159 Move X8, [X9+32]
	160 Move X1, X21
	161 Move X8, [X8+192]
	162 Move X2, [X8+112]
	163 Call List`1<Object>.AddWithResize, X0, X1
	164 Move X8, [X20]
	165 Move X1, [X22]
	166 NotImplemented "Instruction LDRH not yet implemented."
	167 Compare X9, 0
	168 JumpIfEqual {175}
	169 Move X10, [X8+176]
	170 Add X10, X10, 8
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Subtract X9, X9, 1
	174 Add X10, X10, 16
	175 Move X0, X20
	176 Move W2, W31
	177 Call 0x1C5D788
	178 NotImplemented "Instruction LDRSW not yet implemented."
	179 Add X8, X8, X9
	180 Add X0, X8, 312
	181 Move X8, [X0]
	182 Move X1, [X0+8]
	183 Move X0, X20
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Move X1, X19
	186 Call EventDispatchUtilities.PropagateToIMGUIContainer, X0, X1
	187 Compare X19, 0
	188 JumpIfEqual {199}
	189 Move W8, [X19+64]
	190 Move X22, [X31+16]
	191 Move X21, [X31+24]
	192 And W8, W8, 0xFFFFFF3F
	193 Or W8, W8, 64
	194 Move [X19+64], W8
	195 Move X20, [X31+32]
	196 Move X19, [X31+40]
	197 Move X30, [X31+48]
	198 Return 
	199 Call 0x1C17F20
	200 Move X0, X21
	201 Call 0x1C181E0

Method: System.Void .ctor()

Disassembly:
	0x03D9DCB0 BL 0x24A6D20
	0x03D9DCB4 LDP X20, X19, [X31 + 0x70]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

