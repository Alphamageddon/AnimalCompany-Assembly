Type: UnityEngine.UIElements.BasePopupField`2

Method: UnityEngine.UIElements.TextElement get_textElement()

Disassembly:
	0x028B87CC LDR X21, [X21]
	0x028B87D0 STUR X21, [X29 - 0x10]

ISIL:
	001 Move X0, [X0+1096]
	002 Return X0

Method: System.String GetValueToDisplay()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.String GetListItemToDisplay(TValueType item)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void AddMenuItems(UnityEngine.UIElements.IGenericMenu menu)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void set_choices(System.Collections.Generic.List`1<TValueChoice> value)

Disassembly:
	0x028B87D4 LDR X8, [X1 + 0x10]
	0x028B87D8 SUB X3, X29, 0x10
	0x028B87DC MOV X2, X19
	0x028B87E0 MOV X4, X21
	0x028B87E4 BLR X8
	0x028B87E8 LDR X8, [X20 + 0x20]
	0x028B87EC MOV X0, X19
	0x028B87F0 LDR X8, [X8 + 0xC0]
	0x028B87F4 LDR X8, [X8]
	0x028B87F8 LDR X8, [X8 + 0x80]
	0x028B87FC ADD X1, X8, 0x20
	0x028B8800 BL 0x1C16D18
	0x028B8804 LDR X8, [X19]
	0x028B8808 LDR X20, [X0]
	0x028B880C MOV X0, X19
	0x028B8810 LDR X9, [X8 + 0x898]
	0x028B8814 LDR X1, [X8 + 0x8A0]
	0x028B8818 BLR X9
	0x028B881C CBZ X20, 0x28B88B4
	0x028B8820 ADRP X10, 0x1865000
	0x028B8824 LDR X8, [X20]
	0x028B8828 LDR X10, [X10 + 0x710]
	0x028B882C MOV X19, X0
	0x028B8830 LDRH W9, [X8 + 0x12E]
	0x028B8834 LDR X1, [X10]
	0x028B8838 CBZ X9, 0x28B885C
	0x028B883C LDR X10, [X8 + 0xB0]
	0x028B8840 ADD X10, X10, 0x8
	0x028B8844 LDUR X11, [X10 - 0x8]
	0x028B8848 CMP X11, X1
	0x028B884C B.EQ 0x28B886C
	0x028B8850 SUBS X9, X9, 0x1
	0x028B8854 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {21}
	006 Move [X0+1088], X1
	007 Move X8, [X2+32]
	008 Move X19, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8+16]
	011 Call BaseField`1<Object>.get_rawValue, X0
	012 Move X8, [X19]
	013 Move X1, X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X3, [X8+2184]
	018 Move X2, [X8+2192]
	019 Move X30, [X31+32]
	020 CallNoReturn X3
	021 Move X0, 0x1841000
	022 Move X0, [X0+1320]
	023 Move X19, X2
	024 Call 0x1C17D08
	025 Call 0x1C17F10
	026 Move X20, X0
	027 Move X0, 0x1846000
	028 Move X0, [X0+3784]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X20
	032 Move X2, X31
	033 Call ArgumentNullException..ctor, X0, X1
	034 Move X0, X20
	035 Move X1, X19
	036 Call 0x1C17DEC

Method: System.Void SetValueWithoutNotify(TValueType newValue)

Disassembly:
	0x028B8858 B.NE 0x28B8844
	0x028B885C MOVZ W2, 0x2
	0x028B8860 MOV X0, X20
	0x028B8864 BL 0x1C5C788
	0x028B8868 B 0x28B887C
	0x028B886C LDR W9, [X10]
	0x028B8870 ADD W9, W9, 0x2
	0x028B8874 ADD X8, X8, W9, 0x4, SXTW
	0x028B8878 ADD X0, X8, 0x138
	0x028B887C LDP X8, X2, [X0]
	0x028B8880 MOV X0, X20
	0x028B8884 MOV X1, X19
	0x028B8888 BLR X8
	0x028B888C LDR X8, [X23 + 0x28]
	0x028B8890 LDUR X9, [X29 - 0x8]
	0x028B8894 CMP X8, X9
	0x028B8898 B.NE 0x28B88B8
	0x028B889C ADD X31, X29, 0x0
	0x028B88A0 LDP X20, X19, [X31 + 0x30]
	0x028B88A4 LDP X22, X21, [X31 + 0x20]
	0x028B88A8 LDP X24, X23, [X31 + 0x10]
	0x028B88AC LDP X29, X30, [X31], #0x40
	0x028B88B0 RET
	0x028B88B4 BL 0x1C16F20
	0x028B88B8 BL 0x3EB1B20
	0x028B88BC STP X30, X25, [X31 - 0x40]!
	0x028B88C0 STP X24, X23, [X31 + 0x10]
	0x028B88C4 STP X22, X21, [X31 + 0x20]
	0x028B88C8 STP X20, X19, [X31 + 0x30]
	0x028B88CC ADRP X22, 0x1B22000
	0x028B88D0 LDRB W8, [X22 + 0xCB4]
	0x028B88D4 MOV X20, X2
	0x028B88D8 MOV X21, X1
	0x028B88DC MOV X19, X0
	0x028B88E0 TBNZ X8, 0x0, 0x28B8958
	0x028B88E4 ADRP X0, 0x1866000
	0x028B88E8 LDR X0, [X0 + 0x88]
	0x028B88EC BL 0x1C16CF4
	0x028B88F0 ADRP X0, 0x1866000
	0x028B88F4 LDR X0, [X0 + 0x90]
	0x028B88F8 BL 0x1C16CF4
	0x028B88FC ADRP X0, 0x1865000
	0x028B8900 LDR X0, [X0 + 0x770]
	0x028B8904 BL 0x1C16CF4
	0x028B8908 ADRP X0, 0x1866000
	0x028B890C LDR X0, [X0 + 0x98]
	0x028B8910 BL 0x1C16CF4
	0x028B8914 ADRP X0, 0x1866000
	0x028B8918 LDR X0, [X0 + 0xA0]
	0x028B891C BL 0x1C16CF4
	0x028B8920 ADRP X0, 0x1865000
	0x028B8924 LDR X0, [X0 + 0x780]
	0x028B8928 BL 0x1C16CF4
	0x028B892C ADRP X0, 0x1866000
	0x028B8930 LDR X0, [X0 + 0xA8]
	0x028B8934 BL 0x1C16CF4
	0x028B8938 ADRP X0, 0x1866000
	0x028B893C LDR X0, [X0 + 0xB0]
	0x028B8940 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1B23000
	007 Move W8, [X22+3245]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1866000
	016 Move X0, [X0+1808]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3245], W8
	020 Compare X20, 0
	021 JumpIfEqual {67}
	022 Move X8, [X21+32]
	023 Move X0, X20
	024 Move X1, X19
	025 Move X8, [X8+192]
	026 Move X2, [X8+40]
	027 Call BaseField`1<Object>.SetValueWithoutNotify, X0, X1
	028 Move X8, [X20]
	029 Move X19, [X20+1096]
	030 Move X0, X20
	031 Move X9, [X8+2200]
	032 Move X1, [X8+2208]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Compare X19, 0
	035 JumpIfEqual {67}
	036 Move X10, 0x1866000
	037 Move X8, [X19]
	038 Move X10, [X10+1808]
	039 Move X20, X0
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, [X10]
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move W2, 2
	051 Move X0, X19
	052 Call 0x1C5D788
	053 Move W9, [X10]
	054 Add W9, W9, 2
	055 Add X8, X8, W9
	056 Add X0, X8, 312
	057 Move X3, [X0]
	058 Move X2, [X0+8]
	059 Move X0, X19
	060 Move X1, X20
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 CallNoReturn X3
	067 Call 0x1C17F20

Method: System.Void .ctor(System.String label)

Disassembly:
	0x028B8944 ADRP X0, 0x1863000
	0x028B8948 LDR X0, [X0 + 0x898]
	0x028B894C BL 0x1C16CF4
	0x028B8950 MOVZ W8, 0x1
	0x028B8954 STRB W8, [X22 + 0xCB4]
	0x028B8958 LDR X8, [X20 + 0x20]!
	0x028B895C LDR X8, [X8 + 0xC0]
	0x028B8960 LDR X0, [X8 + 0x40]
	0x028B8964 LDRB W8, [X0 + 0x135]
	0x028B8968 TBNZ X8, 0x0, 0x28B8970
	0x028B896C BL 0x1C5C684
	0x028B8970 LDR W8, [X0 + 0xE0]
	0x028B8974 CBNZ W8, 0x28B897C
	0x028B8978 BL 0x1C16DFC
	0x028B897C LDR X8, [X20]
	0x028B8980 MOV X0, X19
	0x028B8984 MOV X1, X21
	0x028B8988 MOV X2, X31
	0x028B898C LDR X8, [X8 + 0xC0]
	0x028B8990 LDR X3, [X8 + 0x38]
	0x028B8994 LDR X8, [X3]
	0x028B8998 BLR X8
	0x028B899C LDR X8, [X20]
	0x028B89A0 LDR X8, [X8 + 0xC0]
	0x028B89A4 LDR X0, [X8 + 0x48]
	0x028B89A8 LDRB W8, [X0 + 0x135]
	0x028B89AC TBNZ X8, 0x0, 0x28B89B4
	0x028B89B0 BL 0x1C5C684
	0x028B89B4 LDR W8, [X0 + 0xE0]
	0x028B89B8 CBNZ W8, 0x28B89C0
	0x028B89BC BL 0x1C16DFC
	0x028B89C0 LDR X8, [X20]
	0x028B89C4 LDR X8, [X8 + 0xC0]
	0x028B89C8 LDR X0, [X8 + 0x48]
	0x028B89CC LDRB W8, [X0 + 0x135]
	0x028B89D0 TBNZ X8, 0x0, 0x28B89D8
	0x028B89D4 BL 0x1C5C684
	0x028B89D8 CBZ X19, 0x28B8F0C
	0x028B89DC LDR X8, [X0 + 0xB8]
	0x028B89E0 MOV X0, X19
	0x028B89E4 MOV X2, X31
	0x028B89E8 LDR X1, [X8]
	0x028B89EC BL 0x3DF1C70
	0x028B89F0 LDR X8, [X20]
	0x028B89F4 MOV X0, X19
	0x028B89F8 LDR X8, [X8 + 0xC0]
	0x028B89FC LDR X1, [X8 + 0x50]
	0x028B8A00 LDR X8, [X1]
	0x028B8A04 BLR X8
	0x028B8A08 LDR X8, [X20]
	0x028B8A0C MOV X21, X0
	0x028B8A10 LDR X8, [X8 + 0xC0]
	0x028B8A14 LDR X8, [X8 + 0x48]
	0x028B8A18 LDRB W9, [X8 + 0x135]
	0x028B8A1C TBNZ X9, 0x0, 0x28B8A2C
	0x028B8A20 MOV X0, X8
	0x028B8A24 BL 0x1C5C684
	0x028B8A28 MOV X8, X0
	0x028B8A2C CBZ X21, 0x28B8F0C
	0x028B8A30 LDR X8, [X8 + 0xB8]
	0x028B8A34 MOV X0, X21
	0x028B8A38 MOV X2, X31
	0x028B8A3C LDR X1, [X8 + 0x18]
	0x028B8A40 BL 0x3DF1C70
	0x028B8A44 LDR X8, [X20]
	0x028B8A48 LDR X8, [X8 + 0xC0]
	0x028B8A4C LDR X0, [X8 + 0x58]
	0x028B8A50 LDRB W8, [X0 + 0x135]
	0x028B8A54 TBNZ X8, 0x0, 0x28B8A5C
	0x028B8A58 BL 0x1C5C684
	0x028B8A5C BL 0x1C16F10
	0x028B8A60 LDR X8, [X20]
	0x028B8A64 MOV X21, X0
	0x028B8A68 LDR X8, [X8 + 0xC0]
	0x028B8A6C LDR X1, [X8 + 0x60]
	0x028B8A70 LDR X8, [X1]
	0x028B8A74 BLR X8
	0x028B8A78 CBZ X21, 0x28B8F0C
	0x028B8A7C MOVZ W1, 0x1
	0x028B8A80 MOV X0, X21
	0x028B8A84 MOV X2, X31
	0x028B8A88 BL 0x3DEF238
	0x028B8A8C LDR X8, [X20]
	0x028B8A90 MOVZ W1, 0x8
	0x028B8A94 LDR X8, [X8 + 0xC0]
	0x028B8A98 LDR X8, [X8]
	0x028B8A9C LDR X8, [X8 + 0x80]
	0x028B8AA0 ADD X22, X8, 0x20
	0x028B8AA4 MOV X0, X22
	0x028B8AA8 BL 0x1C16D14
	0x028B8AAC MOV X0, X19
	0x028B8AB0 MOV X1, X22
	0x028B8AB4 BL 0x1C16D18
	0x028B8AB8 STR X21, [X0]
	0x028B8ABC LDR X8, [X20]
	0x028B8AC0 MOV X0, X19
	0x028B8AC4 LDR X8, [X8 + 0xC0]
	0x028B8AC8 LDR X8, [X8]
	0x028B8ACC LDR X8, [X8 + 0x80]
	0x028B8AD0 ADD X1, X8, 0x20
	0x028B8AD4 BL 0x1C16D18
	0x028B8AD8 LDR X9, [X20]
	0x028B8ADC MOV X8, X0
	0x028B8AE0 LDR X21, [X8]
	0x028B8AE4 LDR X9, [X9 + 0xC0]
	0x028B8AE8 LDR X0, [X9 + 0x48]
	0x028B8AEC LDRB W9, [X0 + 0x135]
	0x028B8AF0 TBNZ X9, 0x0, 0x28B8AF8
	0x028B8AF4 BL 0x1C5C684
	0x028B8AF8 CBZ X21, 0x28B8F0C
	0x028B8AFC LDR X8, [X0 + 0xB8]
	0x028B8B00 MOV X0, X21
	0x028B8B04 MOV X2, X31
	0x028B8B08 LDR X1, [X8 + 0x8]
	0x028B8B0C BL 0x3DF1C70
	0x028B8B10 LDR X8, [X20]
	0x028B8B14 MOV X0, X19
	0x028B8B18 LDR X8, [X8 + 0xC0]
	0x028B8B1C LDR X1, [X8 + 0x68]
	0x028B8B20 LDR X8, [X1]
	0x028B8B24 BLR X8
	0x028B8B28 LDR X8, [X20]
	0x028B8B2C MOV X21, X0
	0x028B8B30 LDR X8, [X8 + 0xC0]
	0x028B8B34 LDR X8, [X8 + 0x48]
	0x028B8B38 LDRB W9, [X8 + 0x135]
	0x028B8B3C TBNZ X9, 0x0, 0x28B8B4C
	0x028B8B40 MOV X0, X8
	0x028B8B44 BL 0x1C5C684
	0x028B8B48 MOV X8, X0
	0x028B8B4C CBZ X21, 0x28B8F0C
	0x028B8B50 LDR X8, [X8 + 0xB8]
	0x028B8B54 MOV X0, X21
	0x028B8B58 MOV X2, X31
	0x028B8B5C LDR X1, [X8 + 0x20]
	0x028B8B60 BL 0x3DF1C70
	0x028B8B64 LDR X8, [X20]
	0x028B8B68 MOV X0, X19
	0x028B8B6C LDR X8, [X8 + 0xC0]
	0x028B8B70 LDR X1, [X8 + 0x68]
	0x028B8B74 LDR X8, [X1]
	0x028B8B78 BLR X8
	0x028B8B7C LDR X8, [X20]
	0x028B8B80 MOV X21, X0
	0x028B8B84 MOV X0, X19
	0x028B8B88 LDR X8, [X8 + 0xC0]
	0x028B8B8C LDR X8, [X8]
	0x028B8B90 LDR X8, [X8 + 0x80]
	0x028B8B94 ADD X1, X8, 0x20
	0x028B8B98 BL 0x1C16D18
	0x028B8B9C CBZ X21, 0x28B8F0C
	0x028B8BA0 LDR X1, [X0]
	0x028B8BA4 ADRP X22, 0x1863000
	0x028B8BA8 LDR X22, [X22 + 0x898]
	0x028B8BAC MOV X0, X21
	0x028B8BB0 MOV X2, X31
	0x028B8BB4 BL 0x3DF60E8
	0x028B8BB8 LDR X0, [X22]
	0x028B8BBC BL 0x1C16F10
	0x028B8BC0 MOV X1, X31
	0x028B8BC4 MOV X21, X0
	0x028B8BC8 BL 0x3DEF578
	0x028B8BCC LDR X8, [X20]
	0x028B8BD0 MOVZ W1, 0x8
	0x028B8BD4 LDR X8, [X8 + 0xC0]
	0x028B8BD8 LDR X8, [X8]
	0x028B8BDC LDR X8, [X8 + 0x80]
	0x028B8BE0 ADD X22, X8, 0x40
	0x028B8BE4 MOV X0, X22
	0x028B8BE8 BL 0x1C16D14
	0x028B8BEC MOV X0, X19
	0x028B8BF0 MOV X1, X22
	0x028B8BF4 BL 0x1C16D18
	0x028B8BF8 STR X21, [X0]
	0x028B8BFC LDR X8, [X20]
	0x028B8C00 MOV X0, X19
	0x028B8C04 LDR X8, [X8 + 0xC0]
	0x028B8C08 LDR X8, [X8]
	0x028B8C0C LDR X8, [X8 + 0x80]
	0x028B8C10 ADD X1, X8, 0x40
	0x028B8C14 BL 0x1C16D18
	0x028B8C18 LDR X9, [X20]
	0x028B8C1C MOV X8, X0
	0x028B8C20 LDR X21, [X8]
	0x028B8C24 LDR X9, [X9 + 0xC0]
	0x028B8C28 LDR X0, [X9 + 0x48]
	0x028B8C2C LDRB W9, [X0 + 0x135]
	0x028B8C30 TBNZ X9, 0x0, 0x28B8C38
	0x028B8C34 BL 0x1C5C684
	0x028B8C38 CBZ X21, 0x28B8F0C
	0x028B8C3C LDR X8, [X0 + 0xB8]
	0x028B8C40 MOV X0, X21
	0x028B8C44 MOV X2, X31
	0x028B8C48 LDR X1, [X8 + 0x10]
	0x028B8C4C BL 0x3DF1C70
	0x028B8C50 LDR X8, [X20]
	0x028B8C54 MOV X0, X19
	0x028B8C58 LDR X8, [X8 + 0xC0]
	0x028B8C5C LDR X8, [X8]
	0x028B8C60 LDR X8, [X8 + 0x80]
	0x028B8C64 ADD X1, X8, 0x40
	0x028B8C68 BL 0x1C16D18
	0x028B8C6C LDR X0, [X0]
	0x028B8C70 CBZ X0, 0x28B8F0C
	0x028B8C74 MOVZ W1, 0x1
	0x028B8C78 MOV X2, X31
	0x028B8C7C BL 0x3DEF238
	0x028B8C80 LDR X8, [X20]
	0x028B8C84 MOV X0, X19
	0x028B8C88 LDR X8, [X8 + 0xC0]
	0x028B8C8C LDR X1, [X8 + 0x68]
	0x028B8C90 LDR X8, [X1]
	0x028B8C94 BLR X8
	0x028B8C98 LDR X8, [X20]
	0x028B8C9C MOV X21, X0
	0x028B8CA0 MOV X0, X19
	0x028B8CA4 LDR X8, [X8 + 0xC0]
	0x028B8CA8 LDR X8, [X8]
	0x028B8CAC LDR X8, [X8 + 0x80]
	0x028B8CB0 ADD X1, X8, 0x40
	0x028B8CB4 BL 0x1C16D18
	0x028B8CB8 CBZ X21, 0x28B8F0C
	0x028B8CBC ADRP X25, 0x1865000
	0x028B8CC0 LDR X25, [X25 + 0x780]
	0x028B8CC4 LDR X1, [X0]
	0x028B8CC8 ADRP X24, 0x1865000
	0x028B8CCC ADRP X23, 0x1866000
	0x028B8CD0 ADRP X22, 0x1866000
	0x028B8CD4 LDR X24, [X24 + 0x770]
	0x028B8CD8 LDR X23, [X23 + 0xA0]
	0x028B8CDC LDR X22, [X22 + 0x98]
	0x028B8CE0 MOV X0, X21
	0x028B8CE4 MOV X2, X31
	0x028B8CE8 BL 0x3DF60E8
	0x028B8CEC LDR X8, [X20]
	0x028B8CF0 LDR X8, [X8 + 0xC0]
	0x028B8CF4 LDR X0, [X8 + 0x8]
	0x028B8CF8 LDRB W8, [X0 + 0x135]
	0x028B8CFC TBNZ X8, 0x0, 0x28B8D04
	0x028B8D00 BL 0x1C5C684
	0x028B8D04 BL 0x1C16F10
	0x028B8D08 LDR X8, [X20]
	0x028B8D0C MOV X21, X0
	0x028B8D10 LDR X8, [X8 + 0xC0]
	0x028B8D14 LDR X1, [X8 + 0x70]
	0x028B8D18 LDR X8, [X1]
	0x028B8D1C BLR X8
	0x028B8D20 LDR X8, [X19]
	0x028B8D24 MOV X0, X19
	0x028B8D28 MOV X1, X21
	0x028B8D2C LDR X9, [X8 + 0x8C8]
	0x028B8D30 LDR X2, [X8 + 0x8D0]
	0x028B8D34 BLR X9
	0x028B8D38 LDR X0, [X25]
	0x028B8D3C BL 0x1C16F10
	0x028B8D40 LDR X8, [X20]
	0x028B8D44 MOV X1, X19
	0x028B8D48 MOV X3, X31
	0x028B8D4C MOV X21, X0
	0x028B8D50 LDR X8, [X8 + 0xC0]
	0x028B8D54 LDR X2, [X8 + 0x80]
	0x028B8D58 BL 0x2D0E824
	0x028B8D5C LDR X3, [X24]
	0x028B8D60 MOV X0, X19
	0x028B8D64 MOV X1, X21
	0x028B8D68 MOV W2, W31
	0x028B8D6C BL 0x21A1534
	0x028B8D70 LDR X0, [X23]
	0x028B8D74 BL 0x1C16F10
	0x028B8D78 LDR X8, [X20]
	0x028B8D7C MOV X1, X19
	0x028B8D80 MOV X3, X31
	0x028B8D84 MOV X21, X0
	0x028B8D88 LDR X8, [X8 + 0xC0]
	0x028B8D8C LDR X2, [X8 + 0x88]
	0x028B8D90 BL 0x2D0E824
	0x028B8D94 LDR X3, [X22]
	0x028B8D98 MOV X0, X19
	0x028B8D9C MOV X1, X21
	0x028B8DA0 MOV W2, W31
	0x028B8DA4 BL 0x21A1534
	0x028B8DA8 LDR X8, [X20]
	0x028B8DAC LDR X8, [X8 + 0xC0]
	0x028B8DB0 LDR X0, [X8 + 0x98]
	0x028B8DB4 LDRB W8, [X0 + 0x135]
	0x028B8DB8 TBNZ X8, 0x0, 0x28B8DC0
	0x028B8DBC BL 0x1C5C684
	0x028B8DC0 LDR W8, [X0 + 0xE0]
	0x028B8DC4 CBNZ W8, 0x28B8DCC
	0x028B8DC8 BL 0x1C16DFC
	0x028B8DCC LDR X8, [X20]
	0x028B8DD0 LDR X8, [X8 + 0xC0]
	0x028B8DD4 LDR X0, [X8 + 0x98]
	0x028B8DD8 LDRB W8, [X0 + 0x135]
	0x028B8DDC TBNZ X8, 0x0, 0x28B8DE4
	0x028B8DE0 BL 0x1C5C684
	0x028B8DE4 LDR X8, [X0 + 0xB8]
	0x028B8DE8 ADRP X25, 0x1866000
	0x028B8DEC ADRP X24, 0x1866000
	0x028B8DF0 ADRP X23, 0x1866000
	0x028B8DF4 LDR X21, [X8 + 0x8]
	0x028B8DF8 LDR X25, [X25 + 0x88]
	0x028B8DFC LDR X24, [X24 + 0xA8]
	0x028B8E00 LDR X23, [X23 + 0x90]
	0x028B8E04 CBNZ X21, 0x28B8EB0
	0x028B8E08 LDR X8, [X20]
	0x028B8E0C LDR X8, [X8 + 0xC0]
	0x028B8E10 LDR X0, [X8 + 0x98]
	0x028B8E14 LDRB W8, [X0 + 0x135]
	0x028B8E18 TBNZ X8, 0x0, 0x28B8E20
	0x028B8E1C BL 0x1C5C684
	0x028B8E20 LDR W8, [X0 + 0xE0]
	0x028B8E24 CBNZ W8, 0x28B8E2C
	0x028B8E28 BL 0x1C16DFC
	0x028B8E2C LDR X8, [X20]
	0x028B8E30 LDR X8, [X8 + 0xC0]
	0x028B8E34 LDR X0, [X8 + 0x98]
	0x028B8E38 LDRB W8, [X0 + 0x135]
	0x028B8E3C TBNZ X8, 0x0, 0x28B8E44
	0x028B8E40 BL 0x1C5C684
	0x028B8E44 ADRP X9, 0x1866000
	0x028B8E48 LDR X8, [X0 + 0xB8]
	0x028B8E4C LDR X9, [X9 + 0xB0]
	0x028B8E50 LDR X22, [X8]
	0x028B8E54 LDR X0, [X9]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x1B23000
	010 Move W8, [X22+3246]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {47}
	018 Move X0, 0x1867000
	019 Move X0, [X0+136]
	020 Call 0x1C17CF4
	021 Move X0, 0x1867000
	022 Move X0, [X0+144]
	023 Call 0x1C17CF4
	024 Move X0, 0x1866000
	025 Move X0, [X0+1904]
	026 Call 0x1C17CF4
	027 Move X0, 0x1867000
	028 Move X0, [X0+152]
	029 Call 0x1C17CF4
	030 Move X0, 0x1867000
	031 Move X0, [X0+160]
	032 Call 0x1C17CF4
	033 Move X0, 0x1866000
	034 Move X0, [X0+1920]
	035 Call 0x1C17CF4
	036 Move X0, 0x1867000
	037 Move X0, [X0+168]
	038 Call 0x1C17CF4
	039 Move X0, 0x1867000
	040 Move X0, [X0+176]
	041 Call 0x1C17CF4
	042 Move X0, 0x1864000
	043 Move X0, [X0+2200]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X22+3246], W8
	047 Add X20, X20, 32
	048 Move X8, [X20]
	049 Move X8, [X8+192]
	050 Move X0, [X8+64]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X8, [X20]
	062 Move X0, X19
	063 Move X1, X21
	064 Move X2, X31
	065 Move X8, [X8+192]
	066 Move X3, [X8+56]
	067 Call BaseField`1<Object>..ctor, X0, X1, X2
	068 Move X8, [X20]
	069 Move X8, [X8+192]
	070 Move X0, [X8+72]
	071 Move W8, [X0+309]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {77}
	076 Call 0x1C5D684
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X8, [X20]
	082 Move X8, [X8+192]
	083 Move X0, [X8+72]
	084 Move W8, [X0+309]
	085 Move TEMP, X8
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {90}
	089 Call 0x1C5D684
	090 Compare X19, 0
	091 JumpIfEqual {396}
	092 Move X8, [X0+184]
	093 Move X0, X19
	094 Move X2, X31
	095 Move X1, [X8]
	096 Call VisualElement.AddToClassList, X0, X1
	097 Move X8, [X20]
	098 Move X21, [X19+1024]
	099 Move X8, [X8+192]
	100 Move X0, [X8+72]
	101 Move W8, [X0+309]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {107}
	106 Call 0x1C5D684
	107 Compare X21, 0
	108 JumpIfEqual {396}
	109 Move X8, [X0+184]
	110 Move X0, X21
	111 Move X2, X31
	112 Move X1, [X8+24]
	113 Call VisualElement.AddToClassList, X0, X1
	114 Move X8, [X20]
	115 Move X8, [X8+192]
	116 Move X0, [X8+88]
	117 Move W8, [X0+309]
	118 Move TEMP, X8
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {123}
	122 Call 0x1C5D684
	123 Call 0x1C17F10
	124 Move X8, [X20]
	125 Move X21, X0
	126 Move X8, [X8+192]
	127 Move X1, [X8+96]
	128 Call 0x24AA014, X0
	129 Compare X21, 0
	130 JumpIfEqual {396}
	131 Move W1, 1
	132 Move X0, X21
	133 Move X2, X31
	134 Call VisualElement.set_pickingMode, X0, X1
	135 Move [X19+1096], X21
	136 Move X8, [X20]
	137 Move X8, [X8+192]
	138 Move X0, [X8+72]
	139 Move W8, [X0+309]
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {145}
	144 Call 0x1C5D684
	145 Move X8, [X0+184]
	146 Move X0, X21
	147 Move X2, X31
	148 Move X1, [X8+8]
	149 Call VisualElement.AddToClassList, X0, X1
	150 Move X8, [X20]
	151 Move X0, X19
	152 Move X8, [X8+192]
	153 Move X1, [X8+104]
	154 Call BaseField`1<Object>.get_visualInput, X0
	155 Move X8, [X20]
	156 Move X21, X0
	157 Move X8, [X8+192]
	158 Move X8, [X8+72]
	159 Move W9, [X8+309]
	160 Move TEMP, X9
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {167}
	164 Move X0, X8
	165 Call 0x1C5D684
	166 Move X8, X0
	167 Compare X21, 0
	168 JumpIfEqual {396}
	169 Move X8, [X8+184]
	170 Move X0, X21
	171 Move X2, X31
	172 Move X1, [X8+32]
	173 Call VisualElement.AddToClassList, X0, X1
	174 Move X8, [X20]
	175 Move X0, X19
	176 Move X8, [X8+192]
	177 Move X1, [X8+104]
	178 Call BaseField`1<Object>.get_visualInput, X0
	179 Compare X0, 0
	180 JumpIfEqual {396}
	181 Move X1, [X19+1096]
	182 Move X21, 0x1864000
	183 Move X21, [X21+2200]
	184 Move X2, X31
	185 Call VisualElement.Add, X0, X1
	186 Move X0, [X21]
	187 Call 0x1C17F10
	188 Move X1, X31
	189 Move X21, X0
	190 Call VisualElement..ctor, X0
	191 Move [X19+1104], X21
	192 Move X8, [X20]
	193 Move X8, [X8+192]
	194 Move X0, [X8+72]
	195 Move W8, [X0+309]
	196 Move TEMP, X8
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfEqual {201}
	200 Call 0x1C5D684
	201 Compare X21, 0
	202 JumpIfEqual {396}
	203 Move X8, [X0+184]
	204 Move X0, X21
	205 Move X2, X31
	206 Move X1, [X8+16]
	207 Call VisualElement.AddToClassList, X0, X1
	208 Move X0, [X19+1104]
	209 Compare X0, 0
	210 JumpIfEqual {396}
	211 Move W1, 1
	212 Move X2, X31
	213 Call VisualElement.set_pickingMode, X0, X1
	214 Move X8, [X20]
	215 Move X0, X19
	216 Move X8, [X8+192]
	217 Move X1, [X8+104]
	218 Call BaseField`1<Object>.get_visualInput, X0
	219 Compare X0, 0
	220 JumpIfEqual {396}
	221 Move X25, 0x1866000
	222 Move X25, [X25+1920]
	223 Move X1, [X19+1104]
	224 Move X24, 0x1866000
	225 Move X23, 0x1867000
	226 Move X22, 0x1867000
	227 Move X24, [X24+1904]
	228 Move X23, [X23+160]
	229 Move X22, [X22+152]
	230 Move X2, X31
	231 Call VisualElement.Add, X0, X1
	232 Move X8, [X20]
	233 Move X8, [X8+192]
	234 Move X0, [X8+8]
	235 Move W8, [X0+309]
	236 Move TEMP, X8
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfEqual {241}
	240 Call 0x1C5D684
	241 Call 0x1C17F10
	242 Move X8, [X20]
	243 Move X21, X0
	244 Move X8, [X8+192]
	245 Move X1, [X8+112]
	246 Call List`1<Object>..ctor, X0
	247 Move X8, [X19]
	248 Move X0, X19
	249 Move X1, X21
	250 Move X9, [X8+2248]
	251 Move X2, [X8+2256]
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Move X0, [X25]
	254 Call 0x1C17F10
	255 Move X8, [X20]
	256 Move X1, X19
	257 Move X3, X31
	258 Move X21, X0
	259 Move X8, [X8+192]
	260 Move X2, [X8+128]
	261 Call 0x2D0F824, X0, X1, X2
	262 Move X3, [X24]
	263 Move X0, X19
	264 Move X1, X21
	265 Move W2, W31
	266 Call 0x21A2534, X0, X1, X2
	267 Move X0, [X23]
	268 Call 0x1C17F10
	269 Move X8, [X20]
	270 Move X1, X19
	271 Move X3, X31
	272 Move X21, X0
	273 Move X8, [X8+192]
	274 Move X2, [X8+136]
	275 Call 0x2D0F824, X0, X1, X2
	276 Move X3, [X22]
	277 Move X0, X19
	278 Move X1, X21
	279 Move W2, W31
	280 Call 0x21A2534, X0, X1, X2
	281 Move X8, [X20]
	282 Move X8, [X8+192]
	283 Move X0, [X8+152]
	284 Move W8, [X0+309]
	285 Move TEMP, X8
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfEqual {290}
	289 Call 0x1C5D684
	290 Move W8, [X0+224]
	291 Compare W8, 0
	292 JumpIfNotEqual {294}
	293 Call 0x1C17DFC
	294 Move X8, [X20]
	295 Move X8, [X8+192]
	296 Move X0, [X8+152]
	297 Move W8, [X0+309]
	298 Move TEMP, X8
	299 And TEMP, TEMP, 1
	300 Compare TEMP, 1
	301 JumpIfEqual {303}
	302 Call 0x1C5D684
	303 Move X8, [X0+184]
	304 Move X25, 0x1867000
	305 Move X24, 0x1867000
	306 Move X23, 0x1867000
	307 Move X21, [X8+8]
	308 Move X25, [X25+136]
	309 Move X24, [X24+168]
	310 Move X23, [X23+144]
	311 Compare X21, 0
	312 JumpIfNotEqual {368}
	313 Move X8, [X20]
	314 Move X8, [X8+192]
	315 Move X0, [X8+152]
	316 Move W8, [X0+309]
	317 Move TEMP, X8
	318 And TEMP, TEMP, 1
	319 Compare TEMP, 1
	320 JumpIfEqual {322}
	321 Call 0x1C5D684
	322 Move W8, [X0+224]
	323 Compare W8, 0
	324 JumpIfNotEqual {326}
	325 Call 0x1C17DFC
	326 Move X8, [X20]
	327 Move X8, [X8+192]
	328 Move X0, [X8+152]
	329 Move W8, [X0+309]
	330 Move TEMP, X8
	331 And TEMP, TEMP, 1
	332 Compare TEMP, 1
	333 JumpIfEqual {335}
	334 Call 0x1C5D684
	335 Move X9, 0x1867000
	336 Move X8, [X0+184]
	337 Move X9, [X9+176]
	338 Move X22, [X8]
	339 Move X0, [X9]
	340 Call 0x1C17F10
	341 Move X8, [X20]
	342 Move X1, X22
	343 Move X3, X31
	344 Move X21, X0
	345 Move X8, [X8+192]
	346 Move X2, [X8+160]
	347 Call 0x2D0F824, X0, X1, X2
	348 Move X8, [X20]
	349 Move X8, [X8+192]
	350 Move X0, [X8+152]
	351 Move W9, [X0+309]
	352 Move TEMP, X9
	353 And TEMP, TEMP, 1
	354 Compare TEMP, 1
	355 JumpIfEqual {359}
	356 Call 0x1C5D684
	357 Move X8, [X20]
	358 Move X8, [X8+192]
	359 Move X9, [X0+184]
	360 Move [X9+8], X21
	361 Move X0, [X8+152]
	362 Move W8, [X0+309]
	363 Move TEMP, X8
	364 And TEMP, TEMP, 1
	365 Compare TEMP, 1
	366 JumpIfEqual {368}
	367 Call 0x1C5D684
	368 Move X3, [X25]
	369 Move X0, X19
	370 Move X1, X21
	371 Move W2, W31
	372 Call 0x21A2534, X0, X1, X2
	373 Move X0, [X24]
	374 Call 0x1C17F10
	375 Move X8, [X20]
	376 Move X1, X19
	377 Move X3, X31
	378 Move X20, X0
	379 Move X8, [X8+192]
	380 Move X2, [X8+168]
	381 Call 0x2D0F824, X0, X1, X2
	382 Move X3, [X23]
	383 Move X0, X19
	384 Move X1, X20
	385 Move X20, [X31+48]
	386 Move X19, [X31+56]
	387 Move X22, [X31+32]
	388 Move X21, [X31+40]
	389 Move X24, [X31+16]
	390 Move X23, [X31+24]
	391 Move W2, W31
	392 Move X30, [X31+64]
	393 Move X25, [X31+72]
	394 Call 0x21A2534, X0, X1, X2
	395 Return 
	396 Call 0x1C17F20

Method: System.Void OnPointerDownEvent(UnityEngine.UIElements.PointerDownEvent evt)

Disassembly:
	0x028B8E58 BL 0x1C16F10
	0x028B8E5C LDR X8, [X20]
	0x028B8E60 MOV X1, X22
	0x028B8E64 MOV X3, X31

ISIL:
	001 Move X8, [X2+32]
	002 Move X8, [X8+192]
	003 Move X2, [X8+176]
	004 Call 0x212EDB4, X0, X1
	005 Return 

Method: System.Void OnPointerMoveEvent(UnityEngine.UIElements.PointerMoveEvent evt)

Disassembly:
	0x028B8E68 MOV X21, X0
	0x028B8E6C LDR X8, [X8 + 0xC0]
	0x028B8E70 LDR X2, [X8 + 0xA0]
	0x028B8E74 BL 0x2D0E824
	0x028B8E78 LDR X8, [X20]
	0x028B8E7C LDR X8, [X8 + 0xC0]
	0x028B8E80 LDR X0, [X8 + 0x98]
	0x028B8E84 LDRB W9, [X0 + 0x135]
	0x028B8E88 TBNZ X9, 0x0, 0x28B8E98
	0x028B8E8C BL 0x1C5C684
	0x028B8E90 LDR X8, [X20]
	0x028B8E94 LDR X8, [X8 + 0xC0]
	0x028B8E98 LDR X9, [X0 + 0xB8]
	0x028B8E9C STR X21, [X9 + 0x8]
	0x028B8EA0 LDR X0, [X8 + 0x98]
	0x028B8EA4 LDRB W8, [X0 + 0x135]
	0x028B8EA8 TBNZ X8, 0x0, 0x28B8EB0
	0x028B8EAC BL 0x1C5C684
	0x028B8EB0 LDR X3, [X25]
	0x028B8EB4 MOV X0, X19
	0x028B8EB8 MOV X1, X21
	0x028B8EBC MOV W2, W31
	0x028B8EC0 BL 0x21A1534
	0x028B8EC4 LDR X0, [X24]
	0x028B8EC8 BL 0x1C16F10
	0x028B8ECC LDR X8, [X20]
	0x028B8ED0 MOV X1, X19
	0x028B8ED4 MOV X3, X31
	0x028B8ED8 MOV X20, X0
	0x028B8EDC LDR X8, [X8 + 0xC0]
	0x028B8EE0 LDR X2, [X8 + 0xA8]
	0x028B8EE4 BL 0x2D0E824
	0x028B8EE8 LDR X3, [X23]
	0x028B8EEC MOV X0, X19
	0x028B8EF0 MOV X1, X20
	0x028B8EF4 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1B23000
	007 Move W8, [X22+3247]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x1867000
	016 Move X0, [X0+184]
	017 Call 0x1C17CF4
	018 Move X0, 0x1867000
	019 Move X0, [X0+192]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3247], W8
	023 Compare X19, 0
	024 JumpIfEqual {51}
	025 Move W8, [X19+172]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move W8, [X19+176]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {39}
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 
	039 Move X8, [X20+32]
	040 Move X0, X21
	041 Move X1, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X8, [X8+192]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X2, [X8+184]
	048 Move X30, [X31+48]
	049 Call 0x212EDB4, X0, X1
	050 Return 
	051 Call 0x1C17F20

Method: System.Boolean ContainsPointer(System.Int32 pointerId)

Disassembly:
	0x028B8EF8 LDP X22, X21, [X31 + 0x20]
	0x028B8EFC LDP X24, X23, [X31 + 0x10]
	0x028B8F00 MOV W2, W31
	0x028B8F04 LDP X30, X25, [X31], #0x40
	0x028B8F08 B 0x21A1534
	0x028B8F0C BL 0x1C16F20
	0x028B8F10 LDR X8, [X2 + 0x20]
	0x028B8F14 LDR X8, [X8 + 0xC0]
	0x028B8F18 LDR X2, [X8 + 0xB0]
	0x028B8F1C LDR X3, [X2]
	0x028B8F20 BR X3
	0x028B8F24 STR X30, [X31 - 0x30]!
	0x028B8F28 STP X22, X21, [X31 + 0x10]
	0x028B8F2C STP X20, X19, [X31 + 0x20]
	0x028B8F30 ADRP X22, 0x1B22000
	0x028B8F34 LDRB W8, [X22 + 0xCB5]
	0x028B8F38 MOV X20, X2
	0x028B8F3C MOV X19, X1
	0x028B8F40 MOV X21, X0
	0x028B8F44 TBNZ X8, 0x0, 0x28B8F68
	0x028B8F48 ADRP X0, 0x1866000
	0x028B8F4C LDR X0, [X0 + 0xB8]
	0x028B8F50 BL 0x1C16CF4
	0x028B8F54 ADRP X0, 0x1866000
	0x028B8F58 LDR X0, [X0 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {29}
	007 Move X19, X0
	008 Move X0, [X0+928]
	009 Compare X0, 0
	010 JumpIfEqual {29}
	011 Move X20, X2
	012 Move X2, X31
	013 Call BaseVisualElementPanel.GetTopElementUnderPointer, X0, X1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X8, [X20+32]
	016 Move X21, X0
	017 Move X0, X19
	018 Move X8, [X8+192]
	019 Move X1, [X8+104]
	020 Call BaseField`1<Object>.get_visualInput, X0
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSET not yet implemented."
	023 Move W0, 1
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return X0
	029 Call 0x1C17F20

Method: System.Void ProcessPointerDown(UnityEngine.UIElements.PointerEventBase`1<T> evt)

Disassembly:
	0x0212EDB4 STRB W8, [X21 + 0x827]
	0x0212EDB8 LDR X0, [X20 + 0x10]
	0x0212EDBC CBZ X0, 0x212EDE4
	0x0212EDC0 ADRP X8, 0x1FED000
	0x0212EDC4 LDR X8, [X8 + 0x688]
	0x0212EDC8 MOV X1, X19
	0x0212EDCC LDR X2, [X8]
	0x0212EDD0 BL 0x2DBEF30
	0x0212EDD4 MOV X0, X19
	0x0212EDD8 LDP X20, X19, [X31 + 0x10]
	0x0212EDDC LDP X30, X21, [X31], #0x20
	0x0212EDE0 RET
	0x0212EDE4 BL 0x1C16F20
	0x0212EDE8 STP X29, X30, [X31 - 0x60]!
	0x0212EDEC STP X28, X27, [X31 + 0x10]
	0x0212EDF0 STP X26, X25, [X31 + 0x20]
	0x0212EDF4 STP X24, X23, [X31 + 0x30]
	0x0212EDF8 STP X22, X21, [X31 + 0x40]
	0x0212EDFC STP X20, X19, [X31 + 0x50]
	0x0212EE00 ADD X29, X31, 0x0
	0x0212EE04 SUB X31, X31, 0x10
	0x0212EE08 MRS X26, 0xC000
	0x0212EE0C LDR X8, [X26 + 0x28]
	0x0212EE10 MOV X21, X3
	0x0212EE14 MOV X19, X2
	0x0212EE18 MOV X20, X1
	0x0212EE1C STUR X8, [X29 - 0x8]
	0x0212EE20 STUR X1, [X29 - 0x10]
	0x0212EE24 LDR X27, [X3 + 0x38]
	0x0212EE28 MOV X24, X0
	0x0212EE2C CBNZ X27, 0x212EE50
	0x0212EE30 ADRP X0, 0x1FED000
	0x0212EE34 LDR X0, [X0 + 0x688]
	0x0212EE38 BL 0x1C16CF4
	0x0212EE3C LDR X27, [X21 + 0x38]
	0x0212EE40 CBNZ X27, 0x212EE50
	0x0212EE44 MOV X0, X21
	0x0212EE48 BL 0x1C5C6E0
	0x0212EE4C LDR X27, [X21 + 0x38]
	0x0212EE50 LDR X8, [X27]
	0x0212EE54 ADD X9, X31, 0x0
	0x0212EE58 LDR W22, [X8 + 0xFC]
	0x0212EE5C ADD X10, X22, 0xF
	0x0212EE60 AND X10, X10, 0x1FFFFFFFF
	0x0212EE64 SUB X25, X9, X10
	0x0212EE68 ADD X31, X25, 0x0
	0x0212EE6C ADD X9, X31, 0x0
	0x0212EE70 SUB X23, X9, X10
	0x0212EE74 ADD X31, X23, 0x0
	0x0212EE78 LDR W8, [X8 + 0x28]
	0x0212EE7C LDR X24, [X24 + 0x10]
	0x0212EE80 SUB X28, X29, 0x10
	0x0212EE84 MOV X0, X25
	0x0212EE88 CMP W8, 0x0
	0x0212EE8C CSEL X1, X20, X28, LT
	0x0212EE90 MOV X2, X22
	0x0212EE94 BL 0x3EB1AC0
	0x0212EE98 LDR X0, [X27]
	0x0212EE9C MOV X1, X25
	0x0212EEA0 BL 0x1C16E04
	0x0212EEA4 CBZ X24, 0x212EF20
	0x0212EEA8 ADRP X8, 0x1FED000
	0x0212EEAC LDR X8, [X8 + 0x688]
	0x0212EEB0 MOV X1, X0
	0x0212EEB4 MOV X0, X24
	0x0212EEB8 LDR X2, [X8]
	0x0212EEBC BL 0x2DBEF30
	0x0212EEC0 LDR X8, [X21 + 0x38]
	0x0212EEC4 MOV X0, X23
	0x0212EEC8 MOV X2, X22
	0x0212EECC LDR X8, [X8]
	0x0212EED0 LDR W8, [X8 + 0x28]
	0x0212EED4 CMP W8, 0x0
	0x0212EED8 CSEL X1, X20, X28, LT
	0x0212EEDC BL 0x3EB1AC0
	0x0212EEE0 MOV X0, X19
	0x0212EEE4 MOV X1, X23
	0x0212EEE8 MOV X2, X22
	0x0212EEEC BL 0x3EB1AC0
	0x0212EEF0 LDR X8, [X26 + 0x28]
	0x0212EEF4 LDUR X9, [X29 - 0x8]
	0x0212EEF8 CMP X8, X9
	0x0212EEFC B.NE 0x212EF24

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X21, X2
	008 Move X19, X1
	009 Move X22, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {23}
	012 Move X0, 0x1FC7000
	013 Move X0, [X0+3696]
	014 Call 0x1C17CF4
	015 Move X0, 0x1FEE000
	016 Move X0, [X0+1664]
	017 Call 0x1C17CF4
	018 Move X8, [X21+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {23}
	021 Move X0, X21
	022 Call 0x1C5D6E0
	023 Compare X19, 0
	024 JumpIfEqual {98}
	025 Move W8, [X19+172]
	026 Compare W8, 0
	027 JumpIfNotEqual {74}
	028 Move X8, [X21+32]
	029 Move W1, [X19+156]
	030 Move X0, X22
	031 Move X8, [X8+192]
	032 Move X2, [X8+192]
	033 Call 0x28B8EF8, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {74}
	038 Compare X22, 0
	039 JumpIfEqual {98}
	040 Move X0, X22
	041 Move X1, X31
	042 Call VisualElement.get_schedule, X0
	043 Move X8, 0x1FC7000
	044 Move X8, [X8+3696]
	045 Move X20, X0
	046 Move X8, [X8]
	047 Move X0, X8
	048 Call 0x1C17F10
	049 Move X8, [X21+32]
	050 Move X1, X22
	051 Move X3, X31
	052 Move X21, X0
	053 Move X8, [X8+192]
	054 Move X2, [X8+200]
	055 Call Action..ctor, X0, X1, X2
	056 Compare X20, 0
	057 JumpIfEqual {98}
	058 Move X10, 0x1FEE000
	059 Move X8, [X20]
	060 Move X10, [X10+1664]
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X1, [X10]
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move W2, 1
	072 Move X0, X20
	073 Call 0x1C5D788
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Return 
	080 Move W9, [X10]
	081 Add W9, W9, 1
	082 Add X8, X8, W9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X2, [X0+8]
	086 Move X0, X20
	087 Move X1, X21
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X0, X19
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X1, X31
	095 Move X30, [X31+48]
	096 Call EventBase.StopPropagation, X0
	097 Return 
	098 Call 0x1C17F20

Method: System.Void OnNavigationSubmit(UnityEngine.UIElements.NavigationSubmitEvent evt)

Disassembly:
	0x028B8F5C BL 0x1C16CF4
	0x028B8F60 MOVZ W8, 0x1
	0x028B8F64 STRB W8, [X22 + 0xCB5]
	0x028B8F68 CBZ X19, 0x28B8FB4
	0x028B8F6C LDR W8, [X19 + 0xAC]
	0x028B8F70 CBNZ W8, 0x28B8F7C
	0x028B8F74 LDRB W8, [X19 + 0xB0]
	0x028B8F78 TBNZ X8, 0x0, 0x28B8F8C
	0x028B8F7C LDP X20, X19, [X31 + 0x20]
	0x028B8F80 LDP X22, X21, [X31 + 0x10]
	0x028B8F84 LDR X30, [X31], #0x30
	0x028B8F88 RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X2+32]
	004 Move X19, X1
	005 Move X8, [X8+192]
	006 Move X1, [X8+200]
	007 Call 0x28B8F8C, X0
	008 Compare X19, 0
	009 JumpIfEqual {16}
	010 Move X0, X19
	011 Move X1, X31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Call EventBase.StopPropagation, X0
	015 Return 
	016 Call 0x1C17F20

Method: System.Void ShowMenu()

Disassembly:
	0x028B8F8C LDR X8, [X20 + 0x20]
	0x028B8F90 MOV X0, X21
	0x028B8F94 MOV X1, X19
	0x028B8F98 LDP X20, X19, [X31 + 0x20]
	0x028B8F9C LDR X8, [X8 + 0xC0]
	0x028B8FA0 LDP X22, X21, [X31 + 0x10]
	0x028B8FA4 LDR X2, [X8 + 0xB8]
	0x028B8FA8 LDR X3, [X2]
	0x028B8FAC LDR X30, [X31], #0x30
	0x028B8FB0 BR X3
	0x028B8FB4 BL 0x1C16F20
	0x028B8FB8 STP X30, X21, [X31 - 0x20]!
	0x028B8FBC STP X20, X19, [X31 + 0x10]
	0x028B8FC0 CBZ X0, 0x28B901C
	0x028B8FC4 MOV X19, X0
	0x028B8FC8 LDR X0, [X0 + 0x3A0]
	0x028B8FCC CBZ X0, 0x28B901C
	0x028B8FD0 MOV X20, X2
	0x028B8FD4 MOV X2, X31
	0x028B8FD8 BL 0x3DBC148
	0x028B8FDC CMP X19, X0
	0x028B8FE0 B.EQ 0x28B900C
	0x028B8FE4 LDR X8, [X20 + 0x20]
	0x028B8FE8 MOV X21, X0
	0x028B8FEC MOV X0, X19
	0x028B8FF0 LDR X8, [X8 + 0xC0]
	0x028B8FF4 LDR X1, [X8 + 0x68]
	0x028B8FF8 LDR X8, [X1]
	0x028B8FFC BLR X8
	0x028B9000 CMP X0, X21
	0x028B9004 CSET W0, EQ
	0x028B9008 B 0x28B9010
	0x028B900C MOVZ W0, 0x1
	0x028B9010 LDP X20, X19, [X31 + 0x10]
	0x028B9014 LDP X30, X21, [X31], #0x20
	0x028B9018 RET
	0x028B901C BL 0x1C16F20
	0x028B9020 STP X30, X19, [X31 - 0x10]!
	0x028B9024 LDR X8, [X2 + 0x20]
	0x028B9028 MOV X19, X1
	0x028B902C LDR X8, [X8 + 0xC0]
	0x028B9030 LDR X1, [X8 + 0xC8]
	0x028B9034 LDR X8, [X1]
	0x028B9038 BLR X8
	0x028B903C CBZ X19, 0x28B9050
	0x028B9040 MOV X0, X19
	0x028B9044 MOV X1, X31
	0x028B9048 LDP X30, X19, [X31], #0x10
	0x028B904C B 0x3D9D950
	0x028B9050 BL 0x1C16F20
	0x028B9054 STP D11, D10, [X31 - 0x40]!
	0x028B9058 STP D9, D8, [X31 + 0x10]
	0x028B905C STP X30, X21, [X31 + 0x20]
	0x028B9060 STP X20, X19, [X31 + 0x30]
	0x028B9064 ADRP X20, 0x1B21000
	0x028B9068 LDRB W8, [X20 + 0xCB6]
	0x028B906C MOV X21, X1
	0x028B9070 MOV X19, X0
	0x028B9074 TBNZ X8, 0x0, 0x28B9098
	0x028B9078 ADRP X0, 0x1865000
	0x028B907C LDR X0, [X0 + 0xC8]
	0x028B9080 BL 0x1C16CF4
	0x028B9084 ADRP X0, 0x1863000
	0x028B9088 LDR X0, [X0 + 0xEA0]
	0x028B908C BL 0x1C16CF4
	0x028B9090 MOVZ W8, 0x1
	0x028B9094 STRB W8, [X20 + 0xCB6]
	0x028B9098 LDR X8, [X21 + 0x20]
	0x028B909C MOV X0, X19
	0x028B90A0 LDR X8, [X8 + 0xC0]
	0x028B90A4 LDR X8, [X8]
	0x028B90A8 LDR X8, [X8 + 0x80]
	0x028B90AC ADD X1, X8, 0xA0
	0x028B90B0 BL 0x1C16D18
	0x028B90B4 LDR X8, [X0]
	0x028B90B8 CBZ X8, 0x28B90F4
	0x028B90BC LDR X8, [X21 + 0x20]
	0x028B90C0 MOV X0, X19
	0x028B90C4 LDR X8, [X8 + 0xC0]
	0x028B90C8 LDR X8, [X8]
	0x028B90CC LDR X8, [X8 + 0x80]
	0x028B90D0 ADD X1, X8, 0xA0
	0x028B90D4 BL 0x1C16D18
	0x028B90D8 LDR X8, [X0]
	0x028B90DC CBZ X8, 0x28B921C
	0x028B90E0 LDR X9, [X8 + 0x18]
	0x028B90E4 LDR X0, [X8 + 0x40]
	0x028B90E8 LDR X1, [X8 + 0x28]
	0x028B90EC BLR X9
	0x028B90F0 B 0x28B911C
	0x028B90F4 CBZ X19, 0x28B921C
	0x028B90F8 LDR X0, [X19 + 0x3A0]
	0x028B90FC CBZ X0, 0x28B9114
	0x028B9100 LDR X8, [X0]
	0x028B9104 LDR X9, [X8 + 0x3F8]
	0x028B9108 LDR X1, [X8 + 0x400]
	0x028B910C BLR X9

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x1B23000
	010 Move W8, [X20+3248]
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x1867000
	018 Move X0, [X0+200]
	019 Call 0x1C17CF4
	020 Move X0, 0x1865000
	021 Move X0, [X0+3744]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3248], W8
	025 Move X8, [X19+1128]
	026 Compare X8, 0
	027 JumpIfEqual {32}
	028 Move X9, [X8+24]
	029 Move X0, [X8+64]
	030 Move X1, [X8+40]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X0, [X19+928]
	033 Compare X0, 0
	034 JumpIfEqual {41}
	035 Move X8, [X0]
	036 Move X9, [X8+1016]
	037 Move X1, [X8+1024]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Compare W0, 0
	040 JumpIfEqual {103}
	041 Move X0, X31
	042 Call DropdownUtility.CreateDropdown
	043 Move X20, X0
	044 Move X8, [X19]
	045 Move X0, X19
	046 Move X1, X20
	047 Move X9, [X8+2232]
	048 Move X2, [X8+2240]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X21+32]
	051 Move X0, X19
	052 Move X8, [X8+192]
	053 Move X1, [X8+104]
	054 Call BaseField`1<Object>.get_visualInput, X0
	055 Compare X0, 0
	056 JumpIfEqual {110}
	057 Move X1, X31
	058 Call VisualElement.get_worldBound, X0
	059 Compare X20, 0
	060 JumpIfEqual {110}
	061 Move X10, 0x1864000
	062 Move X8, [X20]
	063 Move X10, [X10+3744]
	064 Move V8, V0
	065 Move V9, V1
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Move X1, [X10]
	068 Move V10, V2
	069 Move V11, V3
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move W2, 2
	079 Move X0, X20
	080 Call 0x1C5D788
	081 Move W9, [X10]
	082 Add W9, W9, 2
	083 Add X8, X8, W9
	084 Add X0, X8, 312
	085 Move X4, [X0]
	086 Move X3, [X0+8]
	087 Move X0, X20
	088 Move V0, V8
	089 Move V1, V9
	090 Move X1, X19
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X30, [X31+32]
	094 Move X21, [X31+40]
	095 Move D9, [X31+16]
	096 Move D8, [X31+24]
	097 Move W2, 1
	098 Move V2, V10
	099 Move V3, V11
	100 Move D11, [X31+64]
	101 Move D10, [X31+72]
	102 CallNoReturn X4
	103 Move X8, 0x1866000
	104 Move X8, [X8+200]
	105 Move X0, [X8]
	106 Call 0x1C17F10
	107 Move X1, X31
	108 Move X20, X0
	109 Call GenericDropdownMenu..ctor, X0
	110 Call 0x1C17F20

Method: System.Void UpdateMixedValueContent()

Disassembly:
	0x028B9110 CBZ W0, 0x28B91FC
	0x028B9114 MOV X0, X31
	0x028B9118 BL 0x3D9B1A8
	0x028B911C MOV X20, X0
	0x028B9120 LDR X8, [X19]
	0x028B9124 MOV X0, X19
	0x028B9128 MOV X1, X20
	0x028B912C LDR X9, [X8 + 0x8B8]
	0x028B9130 LDR X2, [X8 + 0x8C0]
	0x028B9134 BLR X9
	0x028B9138 LDR X8, [X21 + 0x20]
	0x028B913C MOV X0, X19
	0x028B9140 LDR X8, [X8 + 0xC0]
	0x028B9144 LDR X1, [X8 + 0x68]
	0x028B9148 LDR X8, [X1]
	0x028B914C BLR X8
	0x028B9150 CBZ X0, 0x28B921C
	0x028B9154 MOV X1, X31
	0x028B9158 BL 0x3DEDC10
	0x028B915C CBZ X20, 0x28B921C
	0x028B9160 ADRP X10, 0x1863000
	0x028B9164 LDR X8, [X20]
	0x028B9168 LDR X10, [X10 + 0xEA0]
	0x028B916C MOV V8.16B, V0.16B
	0x028B9170 MOV V9.16B, V1.16B
	0x028B9174 LDRH W9, [X8 + 0x12E]
	0x028B9178 LDR X1, [X10]
	0x028B917C MOV V10.16B, V2.16B
	0x028B9180 MOV V11.16B, V3.16B
	0x028B9184 CBZ X9, 0x28B91A8
	0x028B9188 LDR X10, [X8 + 0xB0]
	0x028B918C ADD X10, X10, 0x8
	0x028B9190 LDUR X11, [X10 - 0x8]
	0x028B9194 CMP X11, X1
	0x028B9198 B.EQ 0x28B91B8
	0x028B919C SUBS X9, X9, 0x1
	0x028B91A0 ADD X10, X10, 0x10
	0x028B91A4 B.NE 0x28B9190
	0x028B91A8 MOVZ W2, 0x2
	0x028B91AC MOV X0, X20
	0x028B91B0 BL 0x1C5C788
	0x028B91B4 B 0x28B91C8
	0x028B91B8 LDR W9, [X10]
	0x028B91BC ADD W9, W9, 0x2
	0x028B91C0 ADD X8, X8, W9, 0x4, SXTW
	0x028B91C4 ADD X0, X8, 0x138
	0x028B91C8 LDP X4, X3, [X0]
	0x028B91CC MOV X0, X20
	0x028B91D0 MOV V0.16B, V8.16B
	0x028B91D4 MOV V1.16B, V9.16B
	0x028B91D8 MOV X1, X19
	0x028B91DC LDP X20, X19, [X31 + 0x30]
	0x028B91E0 LDP X30, X21, [X31 + 0x20]
	0x028B91E4 LDP D9, D8, [X31 + 0x10]
	0x028B91E8 MOVZ W2, 0x1
	0x028B91EC MOV V2.16B, V10.16B
	0x028B91F0 MOV V3.16B, V11.16B
	0x028B91F4 LDP D11, D10, [X31], #0x40
	0x028B91F8 BR X4
	0x028B91FC ADRP X8, 0x1865000
	0x028B9200 LDR X8, [X8 + 0xC8]
	0x028B9204 LDR X0, [X8]
	0x028B9208 BL 0x1C16F10
	0x028B920C MOV X1, X31
	0x028B9210 MOV X20, X0
	0x028B9214 BL 0x3D0D2E8
	0x028B9218 B 0x28B9120
	0x028B921C BL 0x1C16F20
	0x028B9220 STR X30, [X31 - 0x30]!
	0x028B9224 STP X22, X21, [X31 + 0x10]
	0x028B9228 STP X20, X19, [X31 + 0x20]
	0x028B922C ADRP X21, 0x1B21000
	0x028B9230 LDRB W8, [X21 + 0xCB7]
	0x028B9234 MOV X20, X1
	0x028B9238 MOV X19, X0
	0x028B923C TBNZ X8, 0x0, 0x28B9254
	0x028B9240 ADRP X0, 0x1864000
	0x028B9244 LDR X0, [X0 + 0x710]
	0x028B9248 BL 0x1C16CF4
	0x028B924C MOVZ W8, 0x1
	0x028B9250 STRB W8, [X21 + 0xCB7]
	0x028B9254 CBZ X19, 0x28B93F0
	0x028B9258 LDR X8, [X20 + 0x20]
	0x028B925C MOV X0, X19
	0x028B9260 LDR X8, [X8 + 0xC0]
	0x028B9264 LDR X1, [X8 + 0xD8]
	0x028B9268 LDR X8, [X1]
	0x028B926C BLR X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1B22000
	007 Move W8, [X21+3249]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1865000
	015 Move X0, [X0+1808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3249], W8
	019 Compare X19, 0
	020 JumpIfEqual {113}
	021 Move W8, [X19+1032]
	022 Compare W8, 0
	023 JumpIfEqual {76}
	024 Move X8, [X20+32]
	025 Move X21, [X19+1096]
	026 Move X8, [X8+192]
	027 Move X0, [X8+64]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X8, [X20+32]
	039 Move X8, [X8+192]
	040 Move X0, [X8+64]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Compare X21, 0
	048 JumpIfEqual {113}
	049 Move X10, 0x1865000
	050 Move X9, [X0+184]
	051 Move X8, [X21]
	052 Move X10, [X10+1808]
	053 Move X22, [X9+64]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X1, [X10]
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move W2, 2
	065 Move X0, X21
	066 Call 0x1C5D788
	067 Move W9, [X10]
	068 Add W9, W9, 2
	069 Add X8, X8, W9
	070 Add X0, X8, 312
	071 Move X8, [X0]
	072 Move X2, [X0+8]
	073 Move X0, X21
	074 Move X1, X22
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X8, [X20+32]
	077 Move X21, [X19+1096]
	078 Move X8, [X8+192]
	079 Move X0, [X8+64]
	080 Move W8, [X0+309]
	081 Move TEMP, X8
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {86}
	085 Call 0x1C5D684
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X8, [X20+32]
	091 Move X8, [X8+192]
	092 Move X0, [X8+64]
	093 Move W8, [X0+309]
	094 Move TEMP, X8
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {99}
	098 Call 0x1C5D684
	099 Compare X21, 0
	100 JumpIfEqual {113}
	101 Move X8, [X0+184]
	102 Move W2, [X19+1032]
	103 Move X0, X21
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X1, [X8+40]
	107 Move X22, [X31+16]
	108 Move X21, [X31+24]
	109 Move X3, X31
	110 Move X30, [X31+48]
	111 Call VisualElement.EnableInClassList, X0, X1, X2
	112 Return 
	113 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x028B9270 TBZ X0, 0x0, 0x28B9348
	0x028B9274 LDR X8, [X20 + 0x20]
	0x028B9278 MOV X0, X19
	0x028B927C LDR X8, [X8 + 0xC0]
	0x028B9280 LDR X8, [X8]
	0x028B9284 LDR X8, [X8 + 0x80]
	0x028B9288 ADD X1, X8, 0x20
	0x028B928C BL 0x1C16D18
	0x028B9290 LDR X9, [X20 + 0x20]
	0x028B9294 MOV X8, X0
	0x028B9298 LDR X21, [X8]
	0x028B929C LDR X9, [X9 + 0xC0]
	0x028B92A0 LDR X0, [X9 + 0x40]
	0x028B92A4 LDRB W9, [X0 + 0x135]
	0x028B92A8 TBNZ X9, 0x0, 0x28B92B0
	0x028B92AC BL 0x1C5C684
	0x028B92B0 LDR W8, [X0 + 0xE0]
	0x028B92B4 CBNZ W8, 0x28B92BC
	0x028B92B8 BL 0x1C16DFC
	0x028B92BC LDR X8, [X20 + 0x20]
	0x028B92C0 LDR X8, [X8 + 0xC0]
	0x028B92C4 LDR X0, [X8 + 0x40]
	0x028B92C8 LDRB W8, [X0 + 0x135]
	0x028B92CC TBNZ X8, 0x0, 0x28B92D4
	0x028B92D0 BL 0x1C5C684
	0x028B92D4 CBZ X21, 0x28B93F0
	0x028B92D8 ADRP X10, 0x1864000
	0x028B92DC LDR X9, [X0 + 0xB8]
	0x028B92E0 LDR X8, [X21]
	0x028B92E4 LDR X10, [X10 + 0x710]
	0x028B92E8 LDR X22, [X9 + 0x40]
	0x028B92EC LDRH W9, [X8 + 0x12E]
	0x028B92F0 LDR X1, [X10]
	0x028B92F4 CBZ X9, 0x28B9318
	0x028B92F8 LDR X10, [X8 + 0xB0]
	0x028B92FC ADD X10, X10, 0x8
	0x028B9300 LDUR X11, [X10 - 0x8]
	0x028B9304 CMP X11, X1
	0x028B9308 B.EQ 0x28B9328
	0x028B930C SUBS X9, X9, 0x1
	0x028B9310 ADD X10, X10, 0x10
	0x028B9314 B.NE 0x28B9300
	0x028B9318 MOVZ W2, 0x2
	0x028B931C MOV X0, X21
	0x028B9320 BL 0x1C5C788
	0x028B9324 B 0x28B9338
	0x028B9328 LDR W9, [X10]
	0x028B932C ADD W9, W9, 0x2
	0x028B9330 ADD X8, X8, W9, 0x4, SXTW
	0x028B9334 ADD X0, X8, 0x138
	0x028B9338 LDP X8, X2, [X0]
	0x028B933C MOV X0, X21
	0x028B9340 MOV X1, X22
	0x028B9344 BLR X8
	0x028B9348 LDR X8, [X20 + 0x20]
	0x028B934C MOV X0, X19
	0x028B9350 LDR X8, [X8 + 0xC0]
	0x028B9354 LDR X1, [X8 + 0xE0]
	0x028B9358 LDR X8, [X1]
	0x028B935C BLR X8
	0x028B9360 LDR X8, [X20 + 0x20]
	0x028B9364 MOV X21, X0
	0x028B9368 LDR X8, [X8 + 0xC0]
	0x028B936C LDR X8, [X8 + 0x40]
	0x028B9370 LDRB W9, [X8 + 0x135]
	0x028B9374 TBNZ X9, 0x0, 0x28B9384
	0x028B9378 MOV X0, X8
	0x028B937C BL 0x1C5C684
	0x028B9380 MOV X8, X0
	0x028B9384 LDR W9, [X8 + 0xE0]
	0x028B9388 CBNZ W9, 0x28B9394
	0x028B938C MOV X0, X8
	0x028B9390 BL 0x1C16DFC
	0x028B9394 LDR X8, [X20 + 0x20]
	0x028B9398 LDR X8, [X8 + 0xC0]
	0x028B939C LDR X0, [X8 + 0x40]
	0x028B93A0 LDRB W9, [X0 + 0x135]
	0x028B93A4 TBNZ X9, 0x0, 0x28B93B4
	0x028B93A8 BL 0x1C5C684
	0x028B93AC LDR X8, [X20 + 0x20]
	0x028B93B0 LDR X8, [X8 + 0xC0]
	0x028B93B4 LDR X1, [X8 + 0xD8]
	0x028B93B8 LDR X9, [X0 + 0xB8]
	0x028B93BC MOV X0, X19
	0x028B93C0 LDR X8, [X1]
	0x028B93C4 LDR X20, [X9 + 0x28]
	0x028B93C8 BLR X8
	0x028B93CC CBZ X21, 0x28B93F0
	0x028B93D0 AND W2, W0, 0x1
	0x028B93D4 MOV X0, X21
	0x028B93D8 MOV X1, X20
	0x028B93DC LDP X20, X19, [X31 + 0x20]
	0x028B93E0 LDP X22, X21, [X31 + 0x10]
	0x028B93E4 MOV X3, X31
	0x028B93E8 LDR X30, [X31], #0x30
	0x028B93EC B 0x3DF1E80
	0x028B93F0 BL 0x1C16F20
	0x028B93F4 STP X30, X21, [X31 - 0x20]!
	0x028B93F8 STP X20, X19, [X31 + 0x10]
	0x028B93FC ADRP X21, 0x1B21000
	0x028B9400 ADRP X20, 0x1865000
	0x028B9404 LDRB W8, [X21 + 0xCB8]
	0x028B9408 LDR X20, [X20 + 0xD0]
	0x028B940C MOV X19, X0
	0x028B9410 TBNZ X8, 0x0, 0x28B9458
	0x028B9414 ADRP X0, 0x1865000
	0x028B9418 LDR X0, [X0 + 0xD8]
	0x028B941C BL 0x1C16CF4
	0x028B9420 ADRP X0, 0x1863000
	0x028B9424 LDR X0, [X0 + 0xEB8]
	0x028B9428 BL 0x1C16CF4
	0x028B942C ADRP X0, 0x1865000
	0x028B9430 LDR X0, [X0 + 0xE0]
	0x028B9434 BL 0x1C16CF4
	0x028B9438 ADRP X0, 0x1865000
	0x028B943C LDR X0, [X0 + 0xD0]
	0x028B9440 BL 0x1C16CF4
	0x028B9444 ADRP X0, 0x1863000
	0x028B9448 LDR X0, [X0 + 0xEC0]
	0x028B944C BL 0x1C16CF4
	0x028B9450 MOVZ W8, 0x1
	0x028B9454 STRB W8, [X21 + 0xCB8]
	0x028B9458 LDR X0, [X19 + 0x20]
	0x028B945C LDR X20, [X20]
	0x028B9460 LDRB W8, [X0 + 0x135]
	0x028B9464 TBNZ X8, 0x0, 0x28B946C
	0x028B9468 BL 0x1C5C684
	0x028B946C LDR X8, [X0 + 0xC0]
	0x028B9470 LDR X0, [X8 + 0x48]
	0x028B9474 LDRB W8, [X0 + 0x135]
	0x028B9478 TBNZ X8, 0x0, 0x28B9480
	0x028B947C BL 0x1C5C684
	0x028B9480 LDR X8, [X0 + 0xB8]
	0x028B9484 STR X20, [X8]
	0x028B9488 LDR X0, [X19 + 0x20]
	0x028B948C LDRB W8, [X0 + 0x135]
	0x028B9490 TBNZ X8, 0x0, 0x28B9498
	0x028B9494 BL 0x1C5C684
	0x028B9498 LDR X8, [X0 + 0xC0]
	0x028B949C LDR X0, [X8 + 0x48]
	0x028B94A0 LDRB W8, [X0 + 0x135]
	0x028B94A4 TBNZ X8, 0x0, 0x28B94AC
	0x028B94A8 BL 0x1C5C684
	0x028B94AC LDR X0, [X19 + 0x20]
	0x028B94B0 LDRB W8, [X0 + 0x135]
	0x028B94B4 TBNZ X8, 0x0, 0x28B94BC
	0x028B94B8 BL 0x1C5C684
	0x028B94BC LDR X8, [X0 + 0xC0]
	0x028B94C0 ADRP X20, 0x1865000
	0x028B94C4 LDR X0, [X8 + 0x48]
	0x028B94C8 LDRB W8, [X0 + 0x135]
	0x028B94CC LDR X20, [X20 + 0xD8]
	0x028B94D0 TBNZ X8, 0x0, 0x28B94D8
	0x028B94D4 BL 0x1C5C684
	0x028B94D8 LDR X8, [X0 + 0xB8]
	0x028B94DC LDR X1, [X20]
	0x028B94E0 MOV X2, X31
	0x028B94E4 LDR X0, [X8]
	0x028B94E8 BL 0x321B938
	0x028B94EC LDR X8, [X19 + 0x20]
	0x028B94F0 MOV X20, X0
	0x028B94F4 LDRB W9, [X8 + 0x135]
	0x028B94F8 TBNZ X9, 0x0, 0x28B9508
	0x028B94FC MOV X0, X8
	0x028B9500 BL 0x1C5C684
	0x028B9504 MOV X8, X0
	0x028B9508 LDR X8, [X8 + 0xC0]
	0x028B950C LDR X0, [X8 + 0x48]
	0x028B9510 LDRB W8, [X0 + 0x135]
	0x028B9514 TBNZ X8, 0x0, 0x28B951C
	0x028B9518 BL 0x1C5C684
	0x028B951C LDR X8, [X0 + 0xB8]
	0x028B9520 STR X20, [X8 + 0x8]
	0x028B9524 LDR X0, [X19 + 0x20]
	0x028B9528 LDRB W8, [X0 + 0x135]
	0x028B952C TBNZ X8, 0x0, 0x28B9534
	0x028B9530 BL 0x1C5C684
	0x028B9534 LDR X8, [X0 + 0xC0]
	0x028B9538 LDR X0, [X8 + 0x48]
	0x028B953C LDRB W8, [X0 + 0x135]
	0x028B9540 TBNZ X8, 0x0, 0x28B9548
	0x028B9544 BL 0x1C5C684
	0x028B9548 LDR X0, [X19 + 0x20]
	0x028B954C LDRB W8, [X0 + 0x135]
	0x028B9550 TBNZ X8, 0x0, 0x28B9558
	0x028B9554 BL 0x1C5C684
	0x028B9558 LDR X8, [X0 + 0xC0]
	0x028B955C ADRP X20, 0x1865000
	0x028B9560 LDR X0, [X8 + 0x48]
	0x028B9564 LDRB W8, [X0 + 0x135]
	0x028B9568 LDR X20, [X20 + 0xE0]
	0x028B956C TBNZ X8, 0x0, 0x28B9574
	0x028B9570 BL 0x1C5C684
	0x028B9574 LDR X8, [X0 + 0xB8]
	0x028B9578 LDR X1, [X20]
	0x028B957C MOV X2, X31
	0x028B9580 LDR X0, [X8]
	0x028B9584 BL 0x321B938
	0x028B9588 LDR X8, [X19 + 0x20]
	0x028B958C MOV X20, X0
	0x028B9590 LDRB W9, [X8 + 0x135]
	0x028B9594 TBNZ X9, 0x0, 0x28B95A4
	0x028B9598 MOV X0, X8
	0x028B959C BL 0x1C5C684
	0x028B95A0 MOV X8, X0
	0x028B95A4 LDR X8, [X8 + 0xC0]
	0x028B95A8 LDR X0, [X8 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1B22000
	006 Move X20, 0x1866000
	007 Move W8, [X21+3250]
	008 Move X20, [X20+208]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x1866000
	015 Move X0, [X0+216]
	016 Call 0x1C17CF4
	017 Move X0, 0x1864000
	018 Move X0, [X0+3768]
	019 Call 0x1C17CF4
	020 Move X0, 0x1866000
	021 Move X0, [X0+224]
	022 Call 0x1C17CF4
	023 Move X0, 0x1866000
	024 Move X0, [X0+208]
	025 Call 0x1C17CF4
	026 Move X0, 0x1864000
	027 Move X0, [X0+3776]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3250], W8
	031 Move X0, [X19+32]
	032 Move X20, [X20]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X0+192]
	040 Move X0, [X8+72]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Move X8, [X0+184]
	048 Move [X8], X20
	049 Move X0, [X19+32]
	050 Move W8, [X0+309]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Move X8, [X0+192]
	057 Move X0, [X8+72]
	058 Move W8, [X0+309]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {64}
	063 Call 0x1C5D684
	064 Move X0, [X19+32]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Move X8, [X0+192]
	072 Move X20, 0x1866000
	073 Move X0, [X8+72]
	074 Move W8, [X0+309]
	075 Move X20, [X20+216]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {81}
	080 Call 0x1C5D684
	081 Move X8, [X0+184]
	082 Move X1, [X20]
	083 Move X2, X31
	084 Move X0, [X8]
	085 Call String.Concat, X0, X1
	086 Move X8, [X19+32]
	087 Move X20, X0
	088 Move W9, [X8+309]
	089 Move TEMP, X9
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {96}
	093 Move X0, X8
	094 Call 0x1C5D684
	095 Move X8, X0
	096 Move X8, [X8+192]
	097 Move X0, [X8+72]
	098 Move W8, [X0+309]
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {104}
	103 Call 0x1C5D684
	104 Move X8, [X0+184]
	105 Move [X8+8], X20
	106 Move X0, [X19+32]
	107 Move W8, [X0+309]
	108 Move TEMP, X8
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {113}
	112 Call 0x1C5D684
	113 Move X8, [X0+192]
	114 Move X0, [X8+72]
	115 Move W8, [X0+309]
	116 Move TEMP, X8
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {121}
	120 Call 0x1C5D684
	121 Move X0, [X19+32]
	122 Move W8, [X0+309]
	123 Move TEMP, X8
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {128}
	127 Call 0x1C5D684
	128 Move X8, [X0+192]
	129 Move X20, 0x1866000
	130 Move X0, [X8+72]
	131 Move W8, [X0+309]
	132 Move X20, [X20+224]
	133 Move TEMP, X8
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfEqual {138}
	137 Call 0x1C5D684
	138 Move X8, [X0+184]
	139 Move X1, [X20]
	140 Move X2, X31
	141 Move X0, [X8]
	142 Call String.Concat, X0, X1
	143 Move X8, [X19+32]
	144 Move X20, X0
	145 Move W9, [X8+309]
	146 Move TEMP, X9
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfEqual {153}
	150 Move X0, X8
	151 Call 0x1C5D684
	152 Move X8, X0
	153 Move X8, [X8+192]
	154 Move X0, [X8+72]
	155 Move W8, [X0+309]
	156 Move TEMP, X8
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {161}
	160 Call 0x1C5D684
	161 Move X8, [X0+184]
	162 Move [X8+16], X20
	163 Move X0, [X19+32]
	164 Move W8, [X0+309]
	165 Move TEMP, X8
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {170}
	169 Call 0x1C5D684
	170 Move X8, [X0+192]
	171 Move X0, [X8+72]
	172 Move W8, [X0+309]
	173 Move TEMP, X8
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfEqual {178}
	177 Call 0x1C5D684
	178 Move X0, [X19+32]
	179 Move W8, [X0+309]
	180 Move TEMP, X8
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfEqual {185}
	184 Call 0x1C5D684
	185 Move X8, [X0+192]
	186 Move X20, 0x1864000
	187 Move X0, [X8+72]
	188 Move W8, [X0+309]
	189 Move X20, [X20+3768]
	190 Move TEMP, X8
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfEqual {195}
	194 Call 0x1C5D684
	195 Move X8, [X0+184]
	196 Move X1, [X20]
	197 Move X2, X31
	198 Move X0, [X8]
	199 Call String.Concat, X0, X1
	200 Move X8, [X19+32]
	201 Move X20, X0
	202 Move W9, [X8+309]
	203 Move TEMP, X9
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfEqual {210}
	207 Move X0, X8
	208 Call 0x1C5D684
	209 Move X8, X0
	210 Move X8, [X8+192]
	211 Move X0, [X8+72]
	212 Move W8, [X0+309]
	213 Move TEMP, X8
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfEqual {218}
	217 Call 0x1C5D684
	218 Move X8, [X0+184]
	219 Move [X8+24], X20
	220 Move X0, [X19+32]
	221 Move W8, [X0+309]
	222 Move TEMP, X8
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfEqual {227}
	226 Call 0x1C5D684
	227 Move X8, [X0+192]
	228 Move X0, [X8+72]
	229 Move W8, [X0+309]
	230 Move TEMP, X8
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {235}
	234 Call 0x1C5D684
	235 Move X0, [X19+32]
	236 Move W8, [X0+309]
	237 Move TEMP, X8
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfEqual {242}
	241 Call 0x1C5D684
	242 Move X8, [X0+192]
	243 Move X20, 0x1864000
	244 Move X0, [X8+72]
	245 Move W8, [X0+309]
	246 Move X20, [X20+3776]
	247 Move TEMP, X8
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfEqual {252}
	251 Call 0x1C5D684
	252 Move X8, [X0+184]
	253 Move X1, [X20]
	254 Move X2, X31
	255 Move X0, [X8]
	256 Call String.Concat, X0, X1
	257 Move X8, [X19+32]
	258 Move X20, X0
	259 Move W9, [X8+309]
	260 Move TEMP, X9
	261 And TEMP, TEMP, 1
	262 Compare TEMP, 1
	263 JumpIfEqual {267}
	264 Move X0, X8
	265 Call 0x1C5D684
	266 Move X8, X0
	267 Move X8, [X8+192]
	268 Move X0, [X8+72]
	269 Move W8, [X0+309]
	270 Move TEMP, X8
	271 And TEMP, TEMP, 1
	272 Compare TEMP, 1
	273 JumpIfEqual {275}
	274 Call 0x1C5D684
	275 Move X8, [X0+184]
	276 Move [X8+32], X20
	277 Move X0, [X19+32]
	278 Move W8, [X0+309]
	279 Move TEMP, X8
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfEqual {284}
	283 Call 0x1C5D684
	284 Move X8, [X0+192]
	285 Move X0, [X8+72]
	286 Move W8, [X0+309]
	287 Move TEMP, X8
	288 And TEMP, TEMP, 1
	289 Compare TEMP, 1
	290 JumpIfEqual {297}
	291 Move X20, [X31+16]
	292 Move X19, [X31+24]
	293 Move X30, [X31+32]
	294 Move X21, [X31+40]
	295 Call 0x1C5D684
	296 Return 
	297 Move X20, [X31+16]
	298 Move X19, [X31+24]
	299 Move X30, [X31+32]
	300 Move X21, [X31+40]
	301 Return 

