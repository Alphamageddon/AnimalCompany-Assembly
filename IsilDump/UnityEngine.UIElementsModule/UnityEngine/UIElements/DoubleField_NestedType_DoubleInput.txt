Type: UnityEngine.UIElements.DoubleField/DoubleInput

Method: UnityEngine.UIElements.DoubleField get_parentDoubleField()

Disassembly:
	0x03D0CA1C LDR X8, [X8 + 0x9B0]
	0x03D0CA20 MOV X1, X21
	0x03D0CA24 MOV X3, X31
	0x03D0CA28 MOV X20, X0
	0x03D0CA2C LDR X2, [X8]
	0x03D0CA30 BL 0x2D0E824
	0x03D0CA34 LDR X8, [X22]
	0x03D0CA38 LDR X8, [X8 + 0xB8]
	0x03D0CA3C STR X20, [X8 + 0x8]
	0x03D0CA40 LDR X3, [X26]
	0x03D0CA44 MOV X0, X19
	0x03D0CA48 MOV X1, X20
	0x03D0CA4C MOV W2, W31
	0x03D0CA50 BL 0x21A1534
	0x03D0CA54 LDR X0, [X25]
	0x03D0CA58 BL 0x1C16F10
	0x03D0CA5C LDR X2, [X24]
	0x03D0CA60 MOV X1, X19
	0x03D0CA64 MOV X3, X31
	0x03D0CA68 MOV X20, X0
	0x03D0CA6C BL 0x2D0E824
	0x03D0CA70 LDR X3, [X23]
	0x03D0CA74 MOV X0, X19
	0x03D0CA78 MOV X1, X20
	0x03D0CA7C LDP X20, X19, [X31 + 0x40]
	0x03D0CA80 LDP X22, X21, [X31 + 0x30]
	0x03D0CA84 LDP X24, X23, [X31 + 0x20]
	0x03D0CA88 LDP X26, X25, [X31 + 0x10]
	0x03D0CA8C MOV W2, W31
	0x03D0CA90 LDP X30, X27, [X31], #0x50
	0x03D0CA94 B 0x21A1534
	0x03D0CA98 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6DC000
	005 Move W8, [X20+2171]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x458000
	012 Move X0, [X0+2200]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2171], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Call VisualElement.get_parent, X0
	019 Compare X0, 0
	020 JumpIfEqual {32}
	021 Move X9, 0x458000
	022 Move X9, [X9+2200]
	023 Move X8, [X0]
	024 Move X1, [X9]
	025 Move W10, [X8+304]
	026 Move W9, [X1+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, [X8+200]
	029 Add X8, X8, X9
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0
	036 Call 0x1C181E0

Method: System.Void .ctor()

Disassembly:
	0x03D0C7A8 BL 0x1C16CF4
	0x03D0C7AC ADRP X0, 0x457000
	0x03D0C7B0 LDR X0, [X0 + 0x980]
	0x03D0C7B4 BL 0x1C16CF4
	0x03D0C7B8 ADRP X0, 0x412000
	0x03D0C7BC LDR X0, [X0 + 0x88]
	0x03D0C7C0 BL 0x1C16CF4
	0x03D0C7C4 ADRP X0, 0x412000
	0x03D0C7C8 LDR X0, [X0 + 0x90]
	0x03D0C7CC BL 0x1C16CF4
	0x03D0C7D0 ADRP X0, 0x411000
	0x03D0C7D4 LDR X0, [X0 + 0x770]
	0x03D0C7D8 BL 0x1C16CF4
	0x03D0C7DC ADRP X0, 0x412000
	0x03D0C7E0 LDR X0, [X0 + 0x98]
	0x03D0C7E4 BL 0x1C16CF4
	0x03D0C7E8 ADRP X0, 0x457000
	0x03D0C7EC LDR X0, [X0 + 0x998]
	0x03D0C7F0 BL 0x1C16CF4
	0x03D0C7F4 ADRP X0, 0x457000
	0x03D0C7F8 LDR X0, [X0 + 0x9A0]
	0x03D0C7FC BL 0x1C16CF4
	0x03D0C800 ADRP X0, 0x457000
	0x03D0C804 LDR X0, [X0 + 0x9A8]
	0x03D0C808 BL 0x1C16CF4
	0x03D0C80C ADRP X0, 0x457000
	0x03D0C810 LDR X0, [X0 + 0x970]
	0x03D0C814 BL 0x1C16CF4
	0x03D0C818 ADRP X0, 0x412000
	0x03D0C81C LDR X0, [X0 + 0xA0]
	0x03D0C820 BL 0x1C16CF4
	0x03D0C824 ADRP X0, 0x411000
	0x03D0C828 LDR X0, [X0 + 0x780]
	0x03D0C82C BL 0x1C16CF4
	0x03D0C830 ADRP X0, 0x412000
	0x03D0C834 LDR X0, [X0 + 0xA8]
	0x03D0C838 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6DC000
	007 Move X22, 0x458000
	008 Move X20, 0x454000
	009 Move W8, [X21+2172]
	010 Move X22, [X22+2232]
	011 Move X20, [X20+1960]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x458000
	018 Move X0, [X0+2232]
	019 Call 0x1C17CF4
	020 Move X0, 0x458000
	021 Move X0, [X0+2240]
	022 Call 0x1C17CF4
	023 Move X0, 0x454000
	024 Move X0, [X0+1960]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2172], W8
	028 Move X1, [X22]
	029 Move X0, X19
	030 Call 0x26ED410, X0
	031 Move X0, [X20]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X20]
	037 Move X8, [X0+184]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X8, [X8+16]
	041 Move [X19+1024], X8
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X30, [X31+48]
	045 Return 

Method: System.String get_allowedCharacters()

Disassembly:
	0x03D0CA9C STR X30, [X31 - 0x30]!
	0x03D0CAA0 STP X22, X21, [X31 + 0x10]
	0x03D0CAA4 STP X20, X19, [X31 + 0x20]
	0x03D0CAA8 ADRP X22, 0x6DB000
	0x03D0CAAC LDRB W8, [X22 + 0x889]
	0x03D0CAB0 MOV W21, W2
	0x03D0CAB4 MOV X19, X1
	0x03D0CAB8 MOV X20, X0
	0x03D0CABC TBNZ X8, 0x0, 0x3D0CAD4
	0x03D0CAC0 ADRP X0, 0x457000
	0x03D0CAC4 LDR X0, [X0 + 0x9C0]
	0x03D0CAC8 BL 0x1C16CF4
	0x03D0CACC MOVZ W8, 0x1
	0x03D0CAD0 STRB W8, [X22 + 0x889]
	0x03D0CAD4 CBZ X19, 0x3D0CB58
	0x03D0CAD8 AND W8, W21, 0x1
	0x03D0CADC ADRP X21, 0x457000
	0x03D0CAE0 LDR X21, [X21 + 0x9C0]
	0x03D0CAE4 MOV X0, X19
	0x03D0CAE8 MOV X1, X31
	0x03D0CAEC STRB W8, [X20 + 0x448]
	0x03D0CAF0 BL 0x33BE520

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6DC000
	005 Move X19, 0x454000
	006 Move W8, [X20+2173]
	007 Move X19, [X19+1960]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x454000
	013 Move X0, [X0+1960]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2173], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, System.Double startValue)

Disassembly:
	0x03D0CAF4 MOV X1, X0
	0x03D0CAF8 MOV X0, X20
	0x03D0CAFC BL 0x3D0CBA0
	0x03D0CB00 LDR X1, [X21]
	0x03D0CB04 MOV X0, X20
	0x03D0CB08 BL 0x2899DFC
	0x03D0CB0C MOV X1, X19
	0x03D0CB10 MOV X2, X31
	0x03D0CB14 BL 0x33CB4B0
	0x03D0CB18 TBZ X0, 0x0, 0x3D0CB34
	0x03D0CB1C MOV X0, X20
	0x03D0CB20 MOV X1, X19
	0x03D0CB24 LDP X20, X19, [X31 + 0x20]
	0x03D0CB28 LDP X22, X21, [X31 + 0x10]
	0x03D0CB2C LDR X30, [X31], #0x30
	0x03D0CB30 B 0x3D0CC44
	0x03D0CB34 LDR X8, [X20]
	0x03D0CB38 MOV X0, X20
	0x03D0CB3C MOV X1, X19
	0x03D0CB40 LDP X20, X19, [X31 + 0x20]
	0x03D0CB44 LDR X3, [X8 + 0x888]
	0x03D0CB48 LDR X2, [X8 + 0x890]
	0x03D0CB4C LDP X22, X21, [X31 + 0x10]
	0x03D0CB50 LDR X30, [X31], #0x30
	0x03D0CB54 BR X3
	0x03D0CB58 ADRP X0, 0x3EC000
	0x03D0CB5C LDR X0, [X0 + 0x528]
	0x03D0CB60 BL 0x1C16D08
	0x03D0CB64 BL 0x1C16F10
	0x03D0CB68 MOV X19, X0
	0x03D0CB6C ADRP X0, 0x457000
	0x03D0CB70 LDR X0, [X0 + 0x9C8]
	0x03D0CB74 BL 0x1C16D08
	0x03D0CB78 MOV X1, X0
	0x03D0CB7C MOV X0, X19
	0x03D0CB80 MOV X2, X31
	0x03D0CB84 BL 0x330E100
	0x03D0CB88 ADRP X0, 0x457000
	0x03D0CB8C LDR X0, [X0 + 0x9D0]
	0x03D0CB90 BL 0x1C16D08
	0x03D0CB94 MOV X1, X0
	0x03D0CB98 MOV X0, X19
	0x03D0CB9C BL 0x1C16DEC
	0x03D0CBA0 SUB X31, X31, 0xB0
	0x03D0CBA4 STR X30, [X31 + 0x80]
	0x03D0CBA8 STP X22, X21, [X31 + 0x90]
	0x03D0CBAC STP X20, X19, [X31 + 0xA0]
	0x03D0CBB0 ADRP X22, 0x6DB000
	0x03D0CBB4 ADRP X21, 0x453000
	0x03D0CBB8 LDRB W8, [X22 + 0x88A]
	0x03D0CBBC LDR X21, [X21 + 0x418]
	0x03D0CBC0 MOV X20, X1
	0x03D0CBC4 MOV X19, X0
	0x03D0CBC8 TBNZ X8, 0x0, 0x3D0CBE0
	0x03D0CBCC ADRP X0, 0x453000
	0x03D0CBD0 LDR X0, [X0 + 0x418]
	0x03D0CBD4 BL 0x1C16CF4
	0x03D0CBD8 MOVZ W8, 0x1
	0x03D0CBDC STRB W8, [X22 + 0x88A]
	0x03D0CBE0 STR X20, [X19 + 0x440]
	0x03D0CBE4 LDR X0, [X21]
	0x03D0CBE8 LDRB W21, [X19 + 0x448]
	0x03D0CBEC LDR W8, [X0 + 0xE0]
	0x03D0CBF0 CBNZ W8, 0x3D0CBF8
	0x03D0CBF4 BL 0x1C16DFC
	0x03D0CBF8 ADD X8, X31, 0x0
	0x03D0CBFC MOV X0, X20
	0x03D0CC00 MOV W1, W21
	0x03D0CC04 MOV X2, X31
	0x03D0CC08 MOV X3, X31
	0x03D0CC0C BL 0x3C338DC
	0x03D0CC10 LDP V1, V0, [X31 + 0x20]
	0x03D0CC14 LDP V3, V2, [X31]
	0x03D0CC18 LDP X22, X21, [X31 + 0x90]
	0x03D0CC1C LDR X30, [X31 + 0x80]
	0x03D0CC20 STP V1, V0, [X31 + 0x60]
	0x03D0CC24 STP V3, V2, [X31 + 0x40]
	0x03D0CC28 STR V0, [X19 + 0x49]
	0x03D0CC2C STR V1, [X19 + 0x48]
	0x03D0CC30 STR V2, [X19 + 0x47]
	0x03D0CC34 STR V3, [X19 + 0x46]
	0x03D0CC38 LDP X20, X19, [X31 + 0xA0]
	0x03D0CC3C ADD X31, X31, 0xB0
	0x03D0CC40 RET
	0x03D0CC44 STR X30, [X31 - 0x30]!
	0x03D0CC48 STP X22, X21, [X31 + 0x10]
	0x03D0CC4C STP X20, X19, [X31 + 0x20]
	0x03D0CC50 ADRP X22, 0x6DB000
	0x03D0CC54 ADRP X21, 0x457000
	0x03D0CC58 LDRB W8, [X22 + 0x88C]
	0x03D0CC5C LDR X21, [X21 + 0x9D8]
	0x03D0CC60 MOV X20, X1
	0x03D0CC64 MOV X19, X0
	0x03D0CC68 TBNZ X8, 0x0, 0x3D0CC8C
	0x03D0CC6C ADRP X0, 0x457000
	0x03D0CC70 LDR X0, [X0 + 0x9D8]
	0x03D0CC74 BL 0x1C16CF4
	0x03D0CC78 ADRP X0, 0x3E9000
	0x03D0CC7C LDR X0, [X0 + 0x278]
	0x03D0CC80 BL 0x1C16CF4
	0x03D0CC84 MOVZ W8, 0x1

ISIL:
	001 Move [X31-80], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X30
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x6DC000
	012 Move X21, 0x458000
	013 Move W8, [X22+2174]
	014 Move X21, [X21+2272]
	015 Move V10, V3
	016 Move W20, W1
	017 Move V8, V1
	018 Move V9, V0
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0x458000
	025 Move X0, [X0+2280]
	026 Call 0x1C17CF4
	027 Move X0, 0x458000
	028 Move X0, [X0+2272]
	029 Call 0x1C17CF4
	030 Move X0, 0x458000
	031 Move X0, [X0+2288]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+2174], W8
	035 Move V0, V10
	036 Move X0, X31
	037 Call NumericFieldDraggerUtility.CalculateFloatDragSensitivity, V0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Move X2, X31
	043 Move V10, V0
	044 Call NumericFieldDraggerUtility.Acceleration, X0, X1
	045 Move X1, [X21]
	046 Move X0, X19
	047 Move V11, V0
	048 Call 0x26B2D90, X0
	049 Move X8, [X19]
	050 Move X1, X0
	051 Move X0, X19
	052 Move X9, [X8+1912]
	053 Move X2, [X8+1920]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move V12, V0
	056 Move V0, V9
	057 Move V1, V8
	058 Move V2, V11
	059 Move X0, X31
	060 Call NumericFieldDraggerUtility.NiceDelta, X0, V0
	061 NotImplemented "Instruction FCVT not yet implemented."
	062 Multiply D0, D10, D0
	063 Add D0, D12, D0
	064 Move V1, V10
	065 Move X0, X31
	066 Call Mathf.RoundBasedOnMinimumDifference, V0, V1
	067 Move X0, X19
	068 Move V8, V0
	069 Call DoubleInput.get_parentDoubleField, X0
	070 Compare X0, 0
	071 JumpIfEqual {122}
	072 Move X8, 0x458000
	073 Move X8, [X8+2280]
	074 Move X1, [X8]
	075 Call 0x26D3E9C, X0
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {103}
	080 Move X8, [X19]
	081 Move X0, X19
	082 Move V0, V8
	083 Move X9, [X8+2008]
	084 Move X1, [X8+2016]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X8, 0x458000
	087 Move X8, [X8+2288]
	088 Move X1, X0
	089 Move X0, X19
	090 Move X20, [X31+64]
	091 Move X19, [X31+72]
	092 Move X2, [X8]
	093 Move X22, [X31+48]
	094 Move X21, [X31+56]
	095 Move X30, [X31+40]
	096 Move D9, [X31+24]
	097 Move D8, [X31+32]
	098 Move D11, [X31+8]
	099 Move D10, [X31+16]
	100 Move V12, [X31+80]
	101 Call 0x26B2DB4, X0, X1
	102 Return 
	103 Move X0, X19
	104 Call DoubleInput.get_parentDoubleField, X0
	105 Compare X0, 0
	106 JumpIfEqual {122}
	107 Move X8, [X0]
	108 Move V0, V8
	109 Move X20, [X31+64]
	110 Move X19, [X31+72]
	111 Move X22, [X31+48]
	112 Move X21, [X31+56]
	113 Move X2, [X8+2040]
	114 Move X1, [X8+2048]
	115 Move X30, [X31+40]
	116 Move D9, [X31+24]
	117 Move D8, [X31+32]
	118 Move D11, [X31+8]
	119 Move D10, [X31+16]
	120 Move V12, [X31+80]
	121 CallNoReturn X2
	122 Call 0x1C17F20

Method: System.String ValueToString(System.Double v)

Disassembly:
	0x03D0CC88 STRB W8, [X22 + 0x88C]
	0x03D0CC8C LDR X0, [X19 + 0x460]
	0x03D0CC90 LDR X2, [X21]
	0x03D0CC94 MOV X1, X20
	0x03D0CC98 BL 0x22E75A0
	0x03D0CC9C LDR X9, [X19 + 0x460]
	0x03D0CCA0 CBZ X9, 0x3D0CD28
	0x03D0CCA4 LDR W9, [X9 + 0x18]
	0x03D0CCA8 MOV W8, W0
	0x03D0CCAC ORN W10, W31, W0, 0x0
	0x03D0CCB0 CMP W0, W9
	0x03D0CCB4 LDR X0, [X19 + 0x450]
	0x03D0CCB8 CSET W9, LT
	0x03D0CCBC ANDS W31, W9, W10, 0x1F
	0x03D0CCC0 B.EQ 0x3D0CCF4
	0x03D0CCC4 LDR X9, [X19 + 0x470]
	0x03D0CCC8 CBZ X9, 0x3D0CD28
	0x03D0CCCC LDR W10, [X9 + 0x18]
	0x03D0CCD0 CMP W8, W10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6DC000
	005 Move W8, [X20+2175]
	006 Move X19, X0
	007 Move [X31+8], D0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x458000
	013 Move X0, [X0+2296]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2175], W8
	017 Move X1, [X19+1024]
	018 Add X0, X31, 8
	019 Move X2, X31
	020 Call Double.ToString, X0, X1
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return X0

Method: System.Double StringToValue(System.String str)

Disassembly:
	0x03D0CCD4 B.CS 0x3D0CD2C
	0x03D0CCD8 CBZ X0, 0x3D0CD28
	0x03D0CCDC LDR X10, [X0]
	0x03D0CCE0 ADD X8, X9, W8, 0x3, SXTW
	0x03D0CCE4 LDR X1, [X8 + 0x20]
	0x03D0CCE8 LDR X3, [X10 + 0xB28]
	0x03D0CCEC LDR X2, [X10 + 0xB30]
	0x03D0CCF0 B 0x3D0CD18
	0x03D0CCF4 CBZ X0, 0x3D0CD28
	0x03D0CCF8 ADRP X8, 0x3E9000
	0x03D0CCFC LDR X8, [X8 + 0x278]
	0x03D0CD00 LDR X9, [X0]
	0x03D0CD04 LDR X8, [X8]
	0x03D0CD08 LDR X3, [X9 + 0xB28]
	0x03D0CD0C LDR X2, [X9 + 0xB30]
	0x03D0CD10 LDR X8, [X8 + 0xB8]
	0x03D0CD14 LDR X1, [X8]
	0x03D0CD18 LDP X20, X19, [X31 + 0x20]
	0x03D0CD1C LDP X22, X21, [X31 + 0x10]
	0x03D0CD20 LDR X30, [X31], #0x30
	0x03D0CD24 BR X3
	0x03D0CD28 BL 0x1C16F20
	0x03D0CD2C BL 0x1C16F28
	0x03D0CD30 STR X30, [X31 - 0x30]!
	0x03D0CD34 STP X22, X21, [X31 + 0x10]
	0x03D0CD38 STP X20, X19, [X31 + 0x20]
	0x03D0CD3C ADRP X21, 0x6DB000
	0x03D0CD40 ADRP X22, 0x457000
	0x03D0CD44 LDRB W8, [X21 + 0x88B]
	0x03D0CD48 LDR X22, [X22 + 0x9C0]
	0x03D0CD4C MOV X19, X1
	0x03D0CD50 MOV X20, X0
	0x03D0CD54 TBNZ X8, 0x0, 0x3D0CD84
	0x03D0CD58 ADRP X0, 0x457000
	0x03D0CD5C LDR X0, [X0 + 0x9E0]
	0x03D0CD60 BL 0x1C16CF4
	0x03D0CD64 ADRP X0, 0x457000
	0x03D0CD68 LDR X0, [X0 + 0x9C0]
	0x03D0CD6C BL 0x1C16CF4
	0x03D0CD70 ADRP X0, 0x3E7000
	0x03D0CD74 LDR X0, [X0 + 0x6C0]
	0x03D0CD78 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x6DC000
	009 Move X22, 0x458000
	010 Move X21, 0x454000
	011 Move W8, [X23+2176]
	012 Move X22, [X22+2184]
	013 Move X21, [X21+1960]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x458000
	021 Move X0, [X0+2184]
	022 Call 0x1C17CF4
	023 Move X0, 0x454000
	024 Move X0, [X0+1960]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+2176], W8
	028 Move X1, [X22]
	029 Move X0, X20
	030 Move [X31+8], X31
	031 Call 0x26B280C, X0
	032 Move X8, [X21]
	033 Move X20, X0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Add X2, X31, 8
	040 Move X0, X19
	041 Move X1, X20
	042 Move X3, X31
	043 Call UINumericFieldsUtils.TryConvertStringToDouble, X0, X1, X2
	044 Move V0, [X31+8]
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X30, [X31+16]
	050 Move X23, [X31+24]
	051 Add X31, X31, 64
	052 Return V0

