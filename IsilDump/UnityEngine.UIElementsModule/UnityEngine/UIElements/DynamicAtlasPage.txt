Type: UnityEngine.UIElements.DynamicAtlasPage

Method: UnityEngine.UIElements.TextureId get_textureId()

Disassembly:
	0x03DC2C34 BL 0x3D1BE30
	0x03DC2C38 CBZ X0, 0x3DC2C64

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_textureId(UnityEngine.UIElements.TextureId value)

Disassembly:
	0x03DC2C3C LDR X8, [X0]
	0x03DC2C40 LDR X9, [X8 + 0x228]

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: UnityEngine.RenderTexture get_atlas()

Disassembly:
	0x03DC2C44 LDR X1, [X8 + 0x230]
	0x03DC2C48 BLR X9

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_atlas(UnityEngine.RenderTexture value)

Disassembly:
	0x03DC2C4C CBZ X0, 0x3DC2C64
	0x03DC2C50 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: UnityEngine.RenderTextureFormat get_format()

Disassembly:
	0x03DC2C54 LDP X22, X21, [X31 + 0x10]
	0x03DC2C58 MOV X1, X31

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: UnityEngine.FilterMode get_filterMode()

Disassembly:
	0x03DC2C5C LDR X30, [X31], #0x30
	0x03DC2C60 B 0x3DB0AD4

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void .ctor(UnityEngine.RenderTextureFormat format, UnityEngine.FilterMode filterMode, UnityEngine.Vector2Int minSize, UnityEngine.Vector2Int maxSize)

Disassembly:
	0x03DC2C64 BL 0x1C16F20
	0x03DC2C68 SUB X31, X31, 0x150
	0x03DC2C6C STP D15, D14, [X31 + 0xB0]
	0x03DC2C70 STP D13, D12, [X31 + 0xC0]
	0x03DC2C74 STP D11, D10, [X31 + 0xD0]
	0x03DC2C78 STP D9, D8, [X31 + 0xE0]
	0x03DC2C7C STP X29, X30, [X31 + 0xF0]
	0x03DC2C80 STP X28, X27, [X31 + 0x100]
	0x03DC2C84 STP X26, X25, [X31 + 0x110]
	0x03DC2C88 STP X24, X23, [X31 + 0x120]
	0x03DC2C8C STP X22, X21, [X31 + 0x130]
	0x03DC2C90 STP X20, X19, [X31 + 0x140]
	0x03DC2C94 ADRP X23, 0x626000
	0x03DC2C98 LDRB W8, [X23 + 0x130]
	0x03DC2C9C MOV X20, X3
	0x03DC2CA0 MOV W22, W2
	0x03DC2CA4 MOV X19, X1
	0x03DC2CA8 MOV X21, X0
	0x03DC2CAC TBNZ X8, 0x0, 0x3DC2CE8
	0x03DC2CB0 ADRP X0, 0x35C000
	0x03DC2CB4 LDR X0, [X0 + 0x158]
	0x03DC2CB8 BL 0x1C16CF4
	0x03DC2CBC ADRP X0, 0x35A000
	0x03DC2CC0 LDR X0, [X0 + 0x120]
	0x03DC2CC4 BL 0x1C16CF4
	0x03DC2CC8 ADRP X0, 0x3A7000
	0x03DC2CCC LDR X0, [X0 + 0x180]
	0x03DC2CD0 BL 0x1C16CF4
	0x03DC2CD4 ADRP X0, 0x3A7000
	0x03DC2CD8 LDR X0, [X0 + 0x188]
	0x03DC2CDC BL 0x1C16CF4
	0x03DC2CE0 MOVZ W8, 0x1
	0x03DC2CE4 STRB W8, [X23 + 0x130]
	0x03DC2CE8 STR X31, [X31 + 0x68]
	0x03DC2CEC CBZ X19, 0x3DC3388
	0x03DC2CF0 LDR X0, [X19 + 0x2B8]
	0x03DC2CF4 CBZ X0, 0x3DC3388
	0x03DC2CF8 MOV X1, X31
	0x03DC2CFC BL 0x3CE7768
	0x03DC2D00 LDR X0, [X19 + 0x2B8]
	0x03DC2D04 CBZ X0, 0x3DC3388
	0x03DC2D08 MOV X1, X31
	0x03DC2D0C MOV V8.16B, V0.16B
	0x03DC2D10 BL 0x3CE77A4
	0x03DC2D14 LDR X0, [X19 + 0x2B8]
	0x03DC2D18 CBZ X0, 0x3DC3388
	0x03DC2D1C MOV X1, X31
	0x03DC2D20 MOV V9.16B, V0.16B
	0x03DC2D24 BL 0x3CE7858
	0x03DC2D28 LDR X0, [X19 + 0x2B8]
	0x03DC2D2C STR S0, [X31 + 0x4C]
	0x03DC2D30 CBZ X0, 0x3DC3388
	0x03DC2D34 MOV X1, X31
	0x03DC2D38 BL 0x3CE7894
	0x03DC2D3C LDR X0, [X19 + 0x2B8]
	0x03DC2D40 STR S0, [X31 + 0x48]
	0x03DC2D44 CBZ X0, 0x3DC3388
	0x03DC2D48 MOV X1, X31
	0x03DC2D4C BL 0x3CE6AD0
	0x03DC2D50 LDR X0, [X19 + 0x2B8]
	0x03DC2D54 CBZ X0, 0x3DC3388
	0x03DC2D58 MOV X1, X31
	0x03DC2D5C MOV V12.16B, V0.16B
	0x03DC2D60 BL 0x3CE6AD0
	0x03DC2D64 LDR X0, [X19 + 0x2B8]
	0x03DC2D68 STR S0, [X31 + 0x44]
	0x03DC2D6C CBZ X0, 0x3DC3388
	0x03DC2D70 MOV X1, X31
	0x03DC2D74 STP S9, S8, [X31 + 0x34]
	0x03DC2D78 BL 0x3CE6B50
	0x03DC2D7C LDR X0, [X19 + 0x2B8]
	0x03DC2D80 CBZ X0, 0x3DC3388
	0x03DC2D84 ADRP X25, 0x35A000
	0x03DC2D88 LDR X25, [X25 + 0x120]
	0x03DC2D8C MOV X1, X31
	0x03DC2D90 MOV V10.16B, V0.16B
	0x03DC2D94 BL 0x3CE6B90
	0x03DC2D98 LDR V3, [X19 + 0x64]
	0x03DC2D9C LDP S2, S8, [X19 + 0x68]
	0x03DC2DA0 LDR V13, [X31 + 0x44]
	0x03DC2DA4 FADD S1, S12, S10
	0x03DC2DA8 LDP S11, S10, [X31 + 0x48]
	0x03DC2DAC STP S3, S2, [X31 + 0x3C]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x627000
	010 Move X24, 0x3A1000
	011 Move W8, [X25+294]
	012 Move X24, [X24+1712]
	013 Move X20, X4
	014 Move X21, X3
	015 Move W22, W2
	016 Move W23, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x3A8000
	023 Move X0, [X0+336]
	024 Call 0x1C17CF4
	025 Move X0, 0x3A3000
	026 Move X0, [X0+2744]
	027 Call 0x1C17CF4
	028 Move X0, 0x3A1000
	029 Move X0, [X0+1712]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X25+294], W8
	033 Move X8, -53297152
	034 Move V0, [X8+1464]
	035 Move X0, X19
	036 Move X1, X31
	037 Move [X19+56], D0
	038 Call Object..ctor, X0
	039 Move X0, [X24]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X25, 0x626000
	045 Move W8, [X25+2021]
	046 Compare W8, 0
	047 JumpIfNotEqual {53}
	048 Move X0, 0x3A1000
	049 Move X0, [X0+1712]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X25+2021], W8
	053 Move X0, [X24]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X24]
	059 Move X8, [X0+184]
	060 Move X0, [X8]
	061 Compare X0, 0
	062 JumpIfEqual {100}
	063 Move X24, 0x3A8000
	064 Move X25, 0x3A3000
	065 Move X24, [X24+336]
	066 Move X25, [X25+2744]
	067 Move X1, X31
	068 Call TextureRegistry.AllocAndAcquireDynamic, X0
	069 Move [X19+16], W0
	070 Move [X19+32], W23
	071 Move [X19+36], W22
	072 Move [X19+40], X21
	073 Move [X19+48], X20
	074 Move X0, [X24]
	075 Move W22, [X19+60]
	076 Call 0x1C17F10
	077 Move X1, X21
	078 Move X2, X20
	079 Move W3, W22
	080 Move X4, X31
	081 Move X23, X0
	082 Call Allocator2D..ctor, X0, X1, X2, X3
	083 Move [X19+64], X23
	084 Move X0, [X25]
	085 Call 0x1C17F10
	086 Move W1, 64
	087 Move X2, X31
	088 Move X20, X0
	089 Call TextureBlitter..ctor, X0, X1
	090 Move [X19+72], X20
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X22, [X31+32]
	094 Move X21, [X31+40]
	095 Move X24, [X31+16]
	096 Move X23, [X31+24]
	097 Move X30, [X31+64]
	098 Move X25, [X31+72]
	099 Return 
	100 Call 0x1C17F20

Method: System.Boolean get_disposed()

Disassembly:
	0x03DC2DB0 LDP S9, S3, [X19 + 0x70]
	0x03DC2DB4 LDR V2, [X19 + 0x78]

ISIL:
	001 Move W0, [X0+88]
	002 Return X0

Method: System.Void set_disposed(System.Boolean value)

Disassembly:
	0x03DC2DB8 FADD S0, S13, S0
	0x03DC2DBC MOV X0, X19
	0x03DC2DC0 MOV X1, X31

ISIL:
	001 And W8, W1, 1
	002 Move [X0+88], W8
	003 Return 

Method: System.Void Dispose()

Disassembly:
	0x03DC2DC4 STP S2, S3, [X31 + 0x1C]
	0x03DC2DC8 LDR V3, [X19 + 0x7C]
	0x03DC2DCC LDR V2, [X19 + 0x80]
	0x03DC2DD0 FSUB S14, S10, S1
	0x03DC2DD4 FSUB S15, S11, S0
	0x03DC2DD8 STP S2, S3, [X31 + 0x14]
	0x03DC2DDC BL 0x3DEB948
	0x03DC2DE0 LDP S3, S2, [X31 + 0x14]
	0x03DC2DE4 FSUB S0, S8, S10
	0x03DC2DE8 FSUB S1, S9, S11
	0x03DC2DEC FMUL S0, S0, S0
	0x03DC2DF0 FSUB S2, S2, S14
	0x03DC2DF4 FSUB S3, S3, S15
	0x03DC2DF8 FMUL S1, S1, S1
	0x03DC2DFC FADD S10, S0, S1
	0x03DC2E00 FMUL S1, S2, S2
	0x03DC2E04 FMUL S2, S3, S3
	0x03DC2E08 STP S9, S8, [X31 + 0x8]
	0x03DC2E0C STR S15, [X31 + 0x18]
	0x03DC2E10 LDP S9, S0, [X31 + 0x38]
	0x03DC2E14 FADD S1, S1, S2
	0x03DC2E18 LDR V15, [X31 + 0x34]
	0x03DC2E1C LDR V2, [X31 + 0x40]
	0x03DC2E20 ADRP X8, 0xFFFFFFFFFCD27000
	0x03DC2E24 LDP S4, S3, [X31 + 0x1C]
	0x03DC2E28 LDR V11, [X8 + 0xF20]
	0x03DC2E2C FSUB S0, S9, S0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x627000
	006 Move X20, 0x339000
	007 Move W8, [X21+295]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x339000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+295], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+392]
	023 Move X2, [X8+400]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03DC2E30 FSUB S2, S15, S2
	0x03DC2E34 FSUB S3, S12, S3
	0x03DC2E38 FSUB S4, S13, S4
	0x03DC2E3C FMUL S0, S0, S0
	0x03DC2E40 FMUL S2, S2, S2
	0x03DC2E44 STR S14, [X31 + 0x10]
	0x03DC2E48 FADD S14, S0, S2
	0x03DC2E4C FMUL S0, S3, S3
	0x03DC2E50 FMUL S2, S4, S4
	0x03DC2E54 FCMP S1, S11
	0x03DC2E58 MOVZ W9, 0xC00
	0x03DC2E5C FADD S0, S0, S2
	0x03DC2E60 FCCMP S10, S11, 0x0, MI
	0x03DC2E64 CSEL W8, W9, W31, PL
	0x03DC2E68 FCMP S0, S11
	0x03DC2E6C FCCMP S14, S11, 0x0, MI
	0x03DC2E70 ORR W24, W8, 0x200
	0x03DC2E74 CSEL W26, W24, W8, PL
	0x03DC2E78 AND W8, W26, 0x600
	0x03DC2E7C MOV V8.16B, V12.16B
	0x03DC2E80 CMP W8, 0x400
	0x03DC2E84 MOV W23, W26
	0x03DC2E88 B.NE 0x3DC30F0
	0x03DC2E8C MOV X0, X19
	0x03DC2E90 MOV X1, X31
	0x03DC2E94 BL 0x3DE0F44
	0x03DC2E98 ADD X8, X31, 0x90
	0x03DC2E9C MOV X1, X31
	0x03DC2EA0 BL 0x3DC9B70
	0x03DC2EA4 LDR V0, [X31 + 0x90]
	0x03DC2EA8 MOV V12.16B, V10.16B
	0x03DC2EAC FCMP S0, 0x0
	0x03DC2EB0 B.NE 0x3DC2F40
	0x03DC2EB4 MOV X0, X19
	0x03DC2EB8 MOV X1, X31
	0x03DC2EBC BL 0x3DE0F44
	0x03DC2EC0 MOV X1, X31
	0x03DC2EC4 BL 0x3DC9BD8
	0x03DC2EC8 ADRP X27, 0x616000
	0x03DC2ECC LDRB W8, [X27 + 0x85B]
	0x03DC2ED0 UBFM X9, X0, 0x20, 0x3F
	0x03DC2ED4 FMOV S2, W9
	0x03DC2ED8 FMOV S10, W0
	0x03DC2EDC UNIMPLEMENTED
	0x03DC2EE0 CBNZ W8, 0x3DC2F00
	0x03DC2EE4 ADRP X0, 0x331000
	0x03DC2EE8 LDR X0, [X0 + 0x5A0]
	0x03DC2EEC STR V2, [X31 + 0x2]
	0x03DC2EF0 BL 0x1C16CF4
	0x03DC2EF4 LDR V2, [X31 + 0x2]
	0x03DC2EF8 MOVZ W8, 0x1
	0x03DC2EFC STRB W8, [X27 + 0x85B]
	0x03DC2F00 ADRP X8, 0x331000
	0x03DC2F04 LDR X8, [X8 + 0x5A0]
	0x03DC2F08 LDR X8, [X8]
	0x03DC2F0C LDR X8, [X8 + 0xB8]
	0x03DC2F10 LDR V0, [X8 + 0xC]
	0x03DC2F14 LDR V1, [X8 + 0x10]
	0x03DC2F18 FSUB S0, S10, S0
	0x03DC2F1C FSUB V1.2S, V2.2S, V1.2S
	0x03DC2F20 FMUL S0, S0, S0
	0x00000000 INVALID
	0x03DC2F28 FADD S0, S0, S1
	0x03DC2F2C MOV S1, V1.S[1]
	0x03DC2F30 FADD S0, S1, S0
	0x03DC2F34 FCMP S0, S11
	0x03DC2F38 MOV V10.16B, V12.16B
	0x03DC2F3C B.MI 0x3DC30F0
	0x03DC2F40 MOV X0, X19
	0x03DC2F44 MOV X1, X31
	0x03DC2F48 BL 0x3DE0EB8
	0x03DC2F4C CBZ X0, 0x3DC3388
	0x03DC2F50 LDR X8, [X0]
	0x03DC2F54 LDR X1, [X25]
	0x03DC2F58 MOV X23, X0
	0x03DC2F5C LDRH W9, [X8 + 0x12E]
	0x03DC2F60 CBZ X9, 0x3DC2F84
	0x03DC2F64 LDR X10, [X8 + 0xB0]
	0x03DC2F68 ADD X10, X10, 0x8
	0x03DC2F6C LDUR X11, [X10 - 0x8]
	0x03DC2F70 CMP X11, X1
	0x03DC2F74 B.EQ 0x3DC2F94
	0x03DC2F78 SUBS X9, X9, 0x1
	0x03DC2F7C ADD X10, X10, 0x10
	0x03DC2F80 B.NE 0x3DC2F6C
	0x03DC2F84 MOVZ W2, 0x23
	0x03DC2F88 MOV X0, X23
	0x03DC2F8C BL 0x1C5C788
	0x03DC2F90 B 0x3DC2FA4
	0x03DC2F94 LDR W9, [X10]
	0x03DC2F98 ADD W9, W9, 0x23
	0x03DC2F9C ADD X8, X8, W9, 0x4, SXTW
	0x03DC2FA0 ADD X0, X8, 0x138
	0x03DC2FA4 LDP X8, X1, [X0]
	0x03DC2FA8 MOV X0, X23
	0x03DC2FAC BLR X8
	0x03DC2FB0 ADRP X27, 0x617000
	0x03DC2FB4 LDRB W8, [X27 + 0x5AA]
	0x03DC2FB8 MOV V10.16B, V0.16B
	0x03DC2FBC CBNZ W8, 0x3DC2FD4
	0x03DC2FC0 ADRP X0, 0x338000
	0x03DC2FC4 LDR X0, [X0 + 0x4B8]
	0x03DC2FC8 BL 0x1C16CF4
	0x03DC2FCC MOVZ W8, 0x1
	0x03DC2FD0 STRB W8, [X27 + 0x5AA]
	0x03DC2FD4 ADRP X28, 0x338000
	0x03DC2FD8 LDR X28, [X28 + 0x4B8]
	0x03DC2FDC ADRP X9, 0xFFFFFFFFFCD28000
	0x03DC2FE0 LDR V13, [X9 + 0x240]
	0x03DC2FE4 FABS S0, S10
	0x03DC2FE8 LDR X8, [X28]
	0x03DC2FEC FMOV S1, W31
	0x03DC2FF0 FMOV S3, 8
	0x03DC2FF4 FMAXNM S0, S0, S1
	0x03DC2FF8 LDR X8, [X8 + 0xB8]
	0x03DC2FFC FMUL S0, S0, S13
	0x03DC3000 FABD S1, S1, S1
	0x03DC3004 MOV W23, W24
	0x03DC3008 LDR V2, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x627000
	008 Move W8, [X21+296]
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x332000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x35A000
	019 Move X0, [X0+1568]
	020 Call 0x1C17CF4
	021 Move X0, 0x3A1000
	022 Move X0, [X0+1712]
	023 Call 0x1C17CF4
	024 Move X0, 0x35C000
	025 Move X0, [X0+576]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+296], W8
	029 Move W8, [X19+88]
	030 Compare W8, 0
	031 JumpIfNotEqual {139}
	032 Move TEMP, X20
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {137}
	036 Move X8, 0x332000
	037 Move X8, [X8+1432]
	038 Move X20, [X19+24]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Inequality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {64}
	052 Move X8, 0x35C000
	053 Move X8, [X8+576]
	054 Move X20, [X19+24]
	055 Move X0, [X8]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X20
	061 Move X1, X31
	062 Call UIRUtility.Destroy, X0
	063 Move [X19+24], X31
	064 Move X8, [X19+64]
	065 Compare X8, 0
	066 JumpIfEqual {68}
	067 Move [X19+64], X31
	068 Move X0, [X19+72]
	069 Compare X0, 0
	070 JumpIfEqual {74}
	071 Move X1, X31
	072 Call TextureBlitter.Dispose, X0
	073 Move [X19+72], X31
	074 Move X20, 0x35A000
	075 Move X20, [X20+1568]
	076 Move W21, [X19+16]
	077 Move X0, [X20]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1C17DFC
	082 Move X0, [X20]
	083 Move X8, [X0+184]
	084 Move X23, 0x626000
	085 Move W9, [X23+2904]
	086 Move W22, [X8]
	087 Compare W9, 0
	088 JumpIfNotEqual {94}
	089 Move X0, X20
	090 Call 0x1C17CF4
	091 Move X0, [X20]
	092 Move W8, 1
	093 Move [X23+2904], W8
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X21, 0x3A1000
	100 Move X21, [X21+1712]
	101 Move X0, [X21]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X22, 0x626000
	107 Move W8, [X22+2021]
	108 Compare W8, 0
	109 JumpIfNotEqual {115}
	110 Move X0, 0x3A1000
	111 Move X0, [X0+1712]
	112 Call 0x1C17CF4
	113 Move W8, 1
	114 Move [X22+2021], W8
	115 Move X0, [X21]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {121}
	119 Call 0x1C17DFC
	120 Move X0, [X21]
	121 Move X8, [X0+184]
	122 Move X0, [X8]
	123 Compare X0, 0
	124 JumpIfEqual {146}
	125 Move W1, [X19+16]
	126 Move X2, X31
	127 Call TextureRegistry.Release, X0, X1
	128 Move X0, [X20]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {134}
	132 Call 0x1C17DFC
	133 Move X0, [X20]
	134 Move X8, [X0+184]
	135 Move W8, [X8]
	136 Move [X19+16], W8
	137 Move W8, 1
	138 Move [X19+88], W8
	139 Move X20, [X31+32]
	140 Move X19, [X31+40]
	141 Move X22, [X31+16]
	142 Move X21, [X31+24]
	143 Move X30, [X31+48]
	144 Move X23, [X31+56]
	145 Return 
	146 Call 0x1C17F20

Method: System.Boolean TryAdd(UnityEngine.Texture2D image, out UnityEngine.UIElements.UIR.Allocator2D/Alloc2D alloc, out UnityEngine.RectInt rect)

Disassembly:
	0x03DC300C MOV V10.16B, V12.16B
	0x03DC3010 FMUL S2, S2, S3
	0x03DC3014 FCMP S0, S2
	0x03DC3018 FCSEL S0, S0, S2, GT
	0x03DC301C FCMP S1, S0
	0x03DC3020 B.PL 0x3DC30F0
	0x03DC3024 MOV X0, X19
	0x03DC3028 MOV X1, X31
	0x03DC302C BL 0x3DE0EB8
	0x03DC3030 CBZ X0, 0x3DC3388
	0x03DC3034 LDR X8, [X0]
	0x03DC3038 LDR X1, [X25]
	0x03DC303C MOV X23, X0
	0x03DC3040 LDRH W9, [X8 + 0x12E]
	0x03DC3044 CBZ X9, 0x3DC3068
	0x03DC3048 LDR X10, [X8 + 0xB0]
	0x03DC304C ADD X10, X10, 0x8
	0x03DC3050 LDUR X11, [X10 - 0x8]
	0x03DC3054 CMP X11, X1
	0x03DC3058 B.EQ 0x3DC3078
	0x03DC305C SUBS X9, X9, 0x1
	0x03DC3060 ADD X10, X10, 0x10
	0x03DC3064 B.NE 0x3DC3050
	0x03DC3068 MOVZ W2, 0x23
	0x03DC306C MOV X0, X23
	0x03DC3070 BL 0x1C5C788
	0x03DC3074 B 0x3DC3088
	0x03DC3078 LDR W9, [X10]
	0x03DC307C ADD W9, W9, 0x23
	0x03DC3080 ADD X8, X8, W9, 0x4, SXTW
	0x03DC3084 ADD X0, X8, 0x138
	0x03DC3088 LDP X8, X1, [X0]
	0x03DC308C MOV X0, X23
	0x03DC3090 BLR X8
	0x03DC3094 LDRB W8, [X27 + 0x5AA]
	0x03DC3098 MOV V10.16B, V1.16B
	0x03DC309C CBNZ W8, 0x3DC30B4
	0x03DC30A0 ADRP X0, 0x337000
	0x03DC30A4 LDR X0, [X0 + 0x4B8]
	0x03DC30A8 BL 0x1C16CF4
	0x03DC30AC MOVZ W8, 0x1
	0x03DC30B0 STRB W8, [X27 + 0x5AA]
	0x03DC30B4 LDR X8, [X28]
	0x03DC30B8 FABS S0, S10
	0x03DC30BC FMOV S1, W31
	0x03DC30C0 FMOV S3, 8
	0x03DC30C4 LDR X8, [X8 + 0xB8]
	0x03DC30C8 FMAXNM S0, S0, S1
	0x03DC30CC FMUL S0, S0, S13
	0x03DC30D0 FABD S1, S1, S1
	0x03DC30D4 LDR V2, [X8]
	0x03DC30D8 MOV V10.16B, V12.16B
	0x03DC30DC FMUL S2, S2, S3
	0x03DC30E0 FCMP S0, S2
	0x03DC30E4 FCSEL S0, S0, S2, GT
	0x03DC30E8 FCMP S1, S0
	0x03DC30EC CSEL W23, W26, W24, MI
	0x03DC30F0 MOV X0, X19
	0x03DC30F4 MOV X1, X31
	0x03DC30F8 BL 0x3DE0EB8
	0x03DC30FC CBZ X0, 0x3DC3388
	0x03DC3100 LDR X8, [X0]
	0x03DC3104 LDR X1, [X25]
	0x03DC3108 MOV X24, X0
	0x03DC310C LDRH W9, [X8 + 0x12E]
	0x03DC3110 CBZ X9, 0x3DC3134
	0x03DC3114 LDR X10, [X8 + 0xB0]
	0x03DC3118 ADD X10, X10, 0x8
	0x03DC311C LDUR X11, [X10 - 0x8]
	0x03DC3120 CMP X11, X1
	0x03DC3124 B.EQ 0x3DC3144
	0x03DC3128 SUBS X9, X9, 0x1
	0x03DC312C ADD X10, X10, 0x10
	0x03DC3130 B.NE 0x3DC311C
	0x03DC3134 MOVZ W2, 0xF
	0x03DC3138 MOV X0, X24
	0x03DC313C BL 0x1C5C788
	0x03DC3140 B 0x3DC3154
	0x03DC3144 LDR W9, [X10]
	0x03DC3148 ADD W9, W9, 0xF
	0x03DC314C ADD X8, X8, W9, 0x4, SXTW
	0x03DC3150 ADD X0, X8, 0x138
	0x03DC3154 LDP X8, X1, [X0]
	0x03DC3158 MOV X0, X24
	0x03DC315C BLR X8
	0x03DC3160 CMP W0, 0x1
	0x03DC3164 CSET W8, NE
	0x03DC3168 AND W24, W8, W22, 0x0
	0x03DC316C MOV X0, X19
	0x03DC3170 MOV W1, W24
	0x03DC3174 MOV X2, X31
	0x03DC3178 BL 0x3DEB954
	0x03DC317C CBZ W23, 0x3DC3190
	0x03DC3180 MOV X0, X19
	0x03DC3184 MOV W1, W23
	0x03DC3188 MOV X2, X31
	0x03DC318C BL 0x3DE5048
	0x03DC3190 LDR V1, [X31 + 0x4C]
	0x03DC3194 LDR V0, [X31 + 0x48]
	0x03DC3198 LDR X0, [X19 + 0x2B8]
	0x03DC319C STP S9, S15, [X19 + 0x64]
	0x03DC31A0 STP S1, S0, [X19 + 0x6C]
	0x03DC31A4 LDR V0, [X31 + 0x44]
	0x03DC31A8 LDR V1, [X31 + 0x10]
	0x03DC31AC STP S8, S0, [X19 + 0x74]
	0x03DC31B0 LDR V0, [X31 + 0x18]
	0x03DC31B4 STP S1, S0, [X19 + 0x7C]
	0x03DC31B8 CBZ X0, 0x3DC3388
	0x03DC31BC MOV X1, X31
	0x03DC31C0 BL 0x3CE6F98
	0x03DC31C4 MOV W22, W0
	0x03DC31C8 TBZ X0, 0x0, 0x3DC3244
	0x03DC31CC LDR X8, [X19 + 0x378]
	0x03DC31D0 ADD X0, X31, 0x68
	0x03DC31D4 MOV X1, X31
	0x03DC31D8 STR X8, [X31 + 0x68]
	0x03DC31DC BL 0x3DF8994
	0x03DC31E0 CMP W0, 0x1
	0x03DC31E4 B.LT 0x3DC3244
	0x03DC31E8 MOV W23, W0
	0x03DC31EC MOV W25, W31
	0x03DC31F0 LDR X8, [X19 + 0x378]
	0x03DC31F4 ADD X0, X31, 0x68
	0x03DC31F8 MOV W1, W25
	0x03DC31FC MOV X2, X31
	0x03DC3200 STR X8, [X31 + 0x68]
	0x03DC3204 BL 0x3DF98E4
	0x03DC3208 CBZ X0, 0x3DC3388
	0x03DC320C MOV X26, X0
	0x03DC3210 LDR X0, [X0 + 0x2B8]
	0x03DC3214 CBZ X0, 0x3DC3388
	0x03DC3218 MOV X1, X31
	0x03DC321C BL 0x3CE6F98
	0x03DC3220 TBZ X0, 0x0, 0x3DC3238
	0x03DC3224 MOV X0, X21
	0x03DC3228 MOV X1, X26
	0x03DC322C MOV W2, W24
	0x03DC3230 MOV X3, X20
	0x03DC3234 BL 0x3DC2C68
	0x03DC3238 ADD W25, W25, 0x1
	0x03DC323C CMP W23, W25
	0x03DC3240 B.NE 0x3DC31F0
	0x03DC3244 FCMP S14, S11
	0x03DC3248 B.PL 0x3DC3254
	0x03DC324C FCMP S10, S11
	0x03DC3250 B.MI 0x3DC3314
	0x03DC3254 ADRP X21, 0x35B000
	0x03DC3258 LDR X21, [X21 + 0x158]
	0x03DC325C LDR X0, [X21]
	0x03DC3260 LDR W8, [X0 + 0xE0]
	0x03DC3264 CBNZ W8, 0x3DC3270
	0x03DC3268 BL 0x1C16DFC
	0x03DC326C LDR X0, [X21]
	0x03DC3270 LDR X8, [X0 + 0xB8]
	0x03DC3274 MOV X0, X19
	0x03DC3278 MOV X2, X31
	0x03DC327C LDR W1, [X8 + 0x10]
	0x03DC3280 BL 0x3DF169C
	0x03DC3284 TBZ X0, 0x0, 0x3DC3314
	0x03DC3288 ADRP X8, 0x3A6000
	0x03DC328C LDR X8, [X8 + 0x180]
	0x03DC3290 LDP S0, S1, [X31 + 0x3C]
	0x03DC3294 LDP S3, S2, [X31 + 0x8]
	0x03DC3298 ADD X0, X31, 0x50
	0x03DC329C LDR X2, [X8]
	0x03DC32A0 MOV X1, X19
	0x03DC32A4 STP X31, X31, [X31 + 0x50]
	0x03DC32A8 STR X31, [X31 + 0x60]
	0x03DC32AC BL 0x2EE42E4
	0x03DC32B0 CBZ X20, 0x3DC3388
	0x03DC32B4 LDR V0, [X31 + 0x5]
	0x03DC32B8 LDR X8, [X31 + 0x60]
	0x03DC32BC ADRP X9, 0x3A6000
	0x03DC32C0 LDR X9, [X9 + 0x188]
	0x03DC32C4 STR V0, [X31 + 0x7]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x626000
	011 Move W8, [X23+297]
	012 Move X19, X3
	013 Move X22, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x35B000
	021 Move X0, [X0+576]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+297], W8
	025 Move W8, [X21+88]
	026 Compare W8, 0
	027 JumpIfEqual {36}
	028 Move X0, X21
	029 Move X1, X31
	030 Call DisposeHelper.NotifyDisposedUsed, X0
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move W0, W31
	033 Move [X22+16], V0
	034 Move [X22+24], V0
	035 Move [X22], V0
	036 Compare X20, 0
	037 JumpIfEqual {208}
	038 Move X8, [X20]
	039 Move X23, [X21+64]
	040 Move X0, X20
	041 Move X9, [X8+392]
	042 Move X1, [X8+400]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X8, [X20]
	045 Move W25, [X21+60]
	046 Move W24, W0
	047 Move X0, X20
	048 Move X9, [X8+424]
	049 Move X1, [X8+432]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Compare X23, 0
	052 JumpIfEqual {208}
	053 Move W8, [X21+60]
	054 Add W1, W25, W24
	055 Move X3, X22
	056 Move X4, X31
	057 Add W2, W8, W0
	058 Move X0, X23
	059 Call Allocator2D.TryAllocate, X0, X1, X2, X3
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {195}
	064 Move X23, 0x622000
	065 Move W8, [X23+3469]
	066 Move W25, [X21+80]
	067 Compare W8, 0
	068 JumpIfNotEqual {74}
	069 Move X0, 0x331000
	070 Move X0, [X0+1448]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X23+3469], W8
	074 Move X24, 0x331000
	075 Move X24, [X24+1448]
	076 Move W23, [X22]
	077 Move W26, [X22+8]
	078 Move X0, [X24]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Add W1, W26, W23
	084 Move W0, W23
	085 Move X2, X31
	086 Call Math.Max, X0, X1
	087 Move X8, 0x35B000
	088 Move X8, [X8+576]
	089 Move W23, W0
	090 Move X8, [X8]
	091 Move W9, [X8+224]
	092 Compare W9, 0
	093 JumpIfNotEqual {96}
	094 Move X0, X8
	095 Call 0x1C17DFC
	096 Move W0, W23
	097 Move X1, X31
	098 Call UIRUtility.GetNextPow2, X0
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CSEL not yet implemented."
	101 Move [X21+80], W8
	102 Move X23, 0x622000
	103 Move W8, [X23+3470]
	104 Move W25, [X21+84]
	105 Compare W8, 0
	106 JumpIfNotEqual {112}
	107 Move X0, 0x331000
	108 Move X0, [X0+1448]
	109 Call 0x1C17CF4
	110 Move W8, 1
	111 Move [X23+3470], W8
	112 Move X0, [X24]
	113 Move W23, [X22+4]
	114 Move W26, [X22+12]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Add W1, W26, W23
	120 Move W0, W23
	121 Move X2, X31
	122 Call Math.Max, X0, X1
	123 Move X1, X31
	124 Call UIRUtility.GetNextPow2, X0
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CSEL not yet implemented."
	127 Move [X21+84], W8
	128 Move X23, 0x622000
	129 Move W8, [X23+3467]
	130 Compare W8, 0
	131 JumpIfNotEqual {137}
	132 Move X0, 0x331000
	133 Move X0, [X0+1448]
	134 Call 0x1C17CF4
	135 Move W8, 1
	136 Move [X23+3467], W8
	137 Move X0, [X24]
	138 Move W23, [X22]
	139 Move W25, [X22+8]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Add W1, W25, W23
	145 Move W0, W23
	146 Move X2, X31
	147 Call Math.Min, X0, X1
	148 Move X26, 0x622000
	149 Move W8, [X26+3468]
	150 Move W25, [X21+56]
	151 Move W23, W0
	152 Compare W8, 0
	153 JumpIfNotEqual {159}
	154 Move X0, 0x331000
	155 Move X0, [X0+1448]
	156 Call 0x1C17CF4
	157 Move W8, 1
	158 Move [X26+3468], W8
	159 Move X0, [X24]
	160 Move W24, [X22+4]
	161 Move W22, [X22+12]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Add W1, W22, W24
	167 Move W0, W24
	168 Move X2, X31
	169 Call Math.Min, X0, X1
	170 Move X8, [X20]
	171 Move W26, [X21+56]
	172 Move W22, W0
	173 Move X0, X20
	174 Move X9, [X8+392]
	175 Move X1, [X8+400]
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move X8, [X20]
	178 Move W24, W0
	179 Move X0, X20
	180 Move X9, [X8+424]
	181 Move X1, [X8+432]
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Add W8, W25, W23
	184 Add W9, W26, W22
	185 Move [X19+8], W24
	186 Move [X19+12], W0
	187 Move [X19], W8
	188 Move [X19+4], W9
	189 Move X2, [X19]
	190 Move X3, [X19+8]
	191 Move X0, X21
	192 Move X1, X20
	193 Call DynamicAtlasPage.Update, X0, X1, X2
	194 Move W0, 1
	195 Move W0, W31
	196 Move [X19], X31
	197 Move [X19+8], X31
	198 Move X20, [X31+64]
	199 Move X19, [X31+72]
	200 Move X22, [X31+48]
	201 Move X21, [X31+56]
	202 Move X24, [X31+32]
	203 Move X23, [X31+40]
	204 Move X26, [X31+16]
	205 Move X25, [X31+24]
	206 Move X30, [X31+80]
	207 Return X0
	208 Call 0x1C17F20

Method: System.Void Update(UnityEngine.Texture2D image, UnityEngine.RectInt rect)

Disassembly:
	0x03DC32C8 STR X8, [X31 + 0x80]
	0x03DC32CC LDR W11, [X20 + 0x1C]
	0x03DC32D0 LDR X8, [X20 + 0x10]
	0x03DC32D4 LDR X10, [X9]
	0x03DC32D8 ADD W9, W11, 0x1
	0x03DC32DC STR W9, [X20 + 0x1C]
	0x03DC32E0 CBZ X8, 0x3DC3388
	0x03DC32E4 LDRSW X9, [X20 + 0x18]
	0x03DC32E8 LDR W11, [X8 + 0x18]
	0x03DC32EC CMP W9, W11
	0x03DC32F0 B.CS 0x3DC3358
	0x03DC32F4 ADD W10, W9, 0x1
	0x03DC32F8 STR W10, [X20 + 0x18]
	0x03DC32FC LDR X10, [X31 + 0x80]
	0x03DC3300 LDR V0, [X31 + 0x7]
	0x03DC3304 MOVZ W11, 0x18
	0x03DC3308 MADD X8, X9, X11, X8
	0x03DC330C STR X10, [X8 + 0x30]
	0x03DC3310 STR V0, [X8 + 0x2]
	0x03DC3314 TBZ X22, 0x0, 0x3DC3328
	0x03DC3318 LDR X0, [X19 + 0x2B8]
	0x03DC331C CBZ X0, 0x3DC3388
	0x03DC3320 MOV X1, X31
	0x03DC3324 BL 0x3CE7960
	0x03DC3328 LDP X20, X19, [X31 + 0x140]
	0x03DC332C LDP X22, X21, [X31 + 0x130]
	0x03DC3330 LDP X24, X23, [X31 + 0x120]
	0x03DC3334 LDP X26, X25, [X31 + 0x110]
	0x03DC3338 LDP X28, X27, [X31 + 0x100]
	0x03DC333C LDP X29, X30, [X31 + 0xF0]
	0x03DC3340 LDP D9, D8, [X31 + 0xE0]
	0x03DC3344 LDP D11, D10, [X31 + 0xD0]
	0x03DC3348 LDP D13, D12, [X31 + 0xC0]
	0x03DC334C LDP D15, D14, [X31 + 0xB0]
	0x03DC3350 ADD X31, X31, 0x150
	0x03DC3354 RET
	0x03DC3358 LDR X8, [X10 + 0x20]
	0x03DC335C LDR V0, [X31 + 0x7]
	0x03DC3360 LDR X9, [X31 + 0x80]
	0x03DC3364 ADD X1, X31, 0x90
	0x03DC3368 LDR X8, [X8 + 0xC0]
	0x03DC336C MOV X0, X20
	0x03DC3370 LDR X2, [X8 + 0x70]
	0x03DC3374 STR V0, [X31 + 0x9]
	0x03DC3378 STR X9, [X31 + 0xA0]
	0x03DC337C BL 0x2F0C94C
	0x03DC3380 TBNZ X22, 0x0, 0x3DC3318
	0x03DC3384 B 0x3DC3328
	0x03DC3388 BL 0x1C16F20
	0x03DC338C SUB X31, X31, 0xF0
	0x03DC3390 STP D15, D14, [X31 + 0x70]
	0x03DC3394 STP D13, D12, [X31 + 0x80]
	0x03DC3398 STP D11, D10, [X31 + 0x90]
	0x03DC339C STP D9, D8, [X31 + 0xA0]
	0x03DC33A0 STP X30, X25, [X31 + 0xB0]
	0x03DC33A4 STP X24, X23, [X31 + 0xC0]
	0x03DC33A8 STP X22, X21, [X31 + 0xD0]
	0x03DC33AC STP X20, X19, [X31 + 0xE0]
	0x03DC33B0 ADRP X21, 0x625000
	0x03DC33B4 LDRB W8, [X21 + 0x131]
	0x03DC33B8 MOV W19, W2
	0x03DC33BC MOV X20, X1
	0x03DC33C0 TBNZ X8, 0x0, 0x3DC342C
	0x03DC33C4 ADRP X0, 0x3A6000
	0x03DC33C8 LDR X0, [X0 + 0x190]
	0x03DC33CC BL 0x1C16CF4
	0x03DC33D0 ADRP X0, 0x3A6000
	0x03DC33D4 LDR X0, [X0 + 0x198]
	0x03DC33D8 BL 0x1C16CF4
	0x03DC33DC ADRP X0, 0x3A6000
	0x03DC33E0 LDR X0, [X0 + 0x1A0]
	0x03DC33E4 BL 0x1C16CF4
	0x03DC33E8 ADRP X0, 0x35B000
	0x03DC33EC LDR X0, [X0 + 0x160]
	0x03DC33F0 BL 0x1C16CF4
	0x03DC33F4 ADRP X0, 0x330000
	0x03DC33F8 LDR X0, [X0 + 0xE00]
	0x03DC33FC BL 0x1C16CF4
	0x03DC3400 ADRP X0, 0x3A6000
	0x03DC3404 LDR X0, [X0 + 0x1A8]
	0x03DC3408 BL 0x1C16CF4
	0x03DC340C ADRP X0, 0x3A6000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x626000
	008 Move W8, [X23+298]
	009 Move X22, X3
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x331000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x331000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+298], W8
	025 Move W8, [X21+88]
	026 Compare W8, 0
	027 JumpIfEqual {38}
	028 Move X0, X21
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Call DisposeHelper.NotifyDisposedUsed, X0
	037 Return 
	038 Move X8, 0x331000
	039 Move X8, [X8+1432]
	040 Move X23, X22
	041 ShiftRight X23, 32
	042 And X23, X23, 0x7FFFFFFF
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X31
	050 Move X2, X31
	051 Call Object.op_Inequality, X0, X1
	052 Move X9, 0x331000
	053 Move X9, [X9+2600]
	054 Move W8, W0
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, [X9]
	057 NotImplemented "Instruction CSET not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSET not yet implemented."
	060 Move W10, [X0+224]
	061 And W8, W9, W8
	062 And W22, W11, W8
	063 Compare W10, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move W0, W22
	067 Move X1, X31
	068 Call Debug.Assert, X0
	069 Compare X20, 0
	070 JumpIfEqual {105}
	071 Move X8, [X20]
	072 Move X21, [X21+72]
	073 Move X0, X20
	074 Move X9, [X8+392]
	075 Move X1, [X8+400]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X8, [X20]
	078 Move W22, W0
	079 Move X0, X20
	080 Move X9, [X8+424]
	081 Move X1, [X8+432]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Compare X21, 0
	084 JumpIfEqual {105}
	085 Move W3, W22
	086 NotImplemented "Instruction BFM not yet implemented."
	087 Move X0, X21
	088 Move X1, X20
	089 Move X4, X19
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move S0, 1
	095 Move S1, 1
	096 Move S2, 1
	097 Move S3, 1
	098 Move W5, 1
	099 Move X2, X31
	100 Move X6, X31
	101 Move X30, [X31+48]
	102 Move X23, [X31+56]
	103 Call TextureBlitter.QueueBlit, X0, X1, X2, X3, X4, X5
	104 Return 
	105 Call 0x1C17F20

Method: System.Void Remove(UnityEngine.UIElements.UIR.Allocator2D/Alloc2D alloc)

Disassembly:
	0x03DC3410 LDR X0, [X0 + 0x1B0]
	0x03DC3414 BL 0x1C16CF4
	0x03DC3418 ADRP X0, 0x3A6000
	0x03DC341C LDR X0, [X0 + 0x1B8]
	0x03DC3420 BL 0x1C16CF4
	0x03DC3424 MOVZ W8, 0x1
	0x03DC3428 STRB W8, [X21 + 0x131]
	0x03DC342C MOVI V0.2D, 0x0
	0x03DC3430 STR X31, [X31 + 0x60]
	0x03DC3434 STP V0, V0, [X31 + 0x40]
	0x03DC3438 CBZ X20, 0x3DC3634
	0x03DC343C ADRP X8, 0x3A6000
	0x03DC3440 LDR X8, [X8 + 0x1B8]
	0x03DC3444 ADRP X24, 0x3A6000
	0x03DC3448 LDR X24, [X24 + 0x198]
	0x03DC344C ADRP X25, 0x35B000
	0x03DC3450 LDR X1, [X8]
	0x03DC3454 ADRP X23, 0x330000
	0x03DC3458 ADRP X22, 0x3A6000
	0x03DC345C LDR X25, [X25 + 0x160]
	0x03DC3460 LDR X23, [X23 + 0xE00]
	0x03DC3464 LDR X22, [X22 + 0x190]
	0x03DC3468 ADD X8, X31, 0x18
	0x03DC346C MOV X0, X20
	0x03DC3470 BL 0x2F0D7EC
	0x03DC3474 LDUR V0, [X31 + 0x18]
	0x03DC3478 LDUR V1, [X31 + 0x28]
	0x03DC347C LDR X8, [X31 + 0x38]
	0x03DC3480 STP V0, V1, [X31 + 0x40]
	0x03DC3484 STR X8, [X31 + 0x60]
	0x03DC3488 LDR X1, [X24]
	0x03DC348C ADD X0, X31, 0x40
	0x03DC3490 BL 0x2BB0CB0
	0x03DC3494 TBZ X0, 0x0, 0x3DC35AC
	0x03DC3498 LDR X21, [X31 + 0x60]
	0x03DC349C CBZ X21, 0x3DC35E8
	0x03DC34A0 LDR X0, [X25]
	0x03DC34A4 LDP S8, S9, [X31 + 0x50]
	0x03DC34A8 LDP S15, S14, [X31 + 0x58]
	0x03DC34AC LDP S13, S11, [X21 + 0x64]
	0x03DC34B0 LDR W8, [X0 + 0xE0]
	0x03DC34B4 LDP S12, S10, [X21 + 0x6C]
	0x03DC34B8 CBNZ W8, 0x3DC34C0
	0x03DC34BC BL 0x1C16DFC
	0x03DC34C0 MOV V0.16B, V8.16B
	0x03DC34C4 MOV V1.16B, V9.16B
	0x03DC34C8 MOV V2.16B, V15.16B
	0x03DC34CC MOV V3.16B, V14.16B
	0x03DC34D0 MOV V4.16B, V13.16B
	0x03DC34D4 MOV V5.16B, V11.16B
	0x03DC34D8 MOV V6.16B, V12.16B
	0x03DC34DC MOV V7.16B, V10.16B
	0x03DC34E0 MOV X0, X31
	0x03DC34E4 BL 0x3DA445C
	0x03DC34E8 MOV X20, X0
	0x03DC34EC CBZ X0, 0x3DC3578

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 Move X21, 0x626000
	007 Move W8, [X21+299]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x331000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+299], W8
	019 Move W8, [X20+88]
	020 Compare W8, 0
	021 JumpIfEqual {31}
	022 Move X0, X20
	023 Move X20, [X31+112]
	024 Move X19, [X31+120]
	025 Move X30, [X31+96]
	026 Move X21, [X31+104]
	027 Move X1, X31
	028 Add X31, X31, 128
	029 Call DisposeHelper.NotifyDisposedUsed, X0
	030 Return 
	031 Move W8, [X19+8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, [X19+12]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 Move W21, W31
	037 Move X8, 0x331000
	038 Move X8, [X8+2600]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move W0, W21
	045 Move X1, X31
	046 Call Debug.Assert, X0
	047 Move V2, [X19+16]
	048 Move V0, [X19+32]
	049 Move V1, [X19]
	050 Move X0, [X20+64]
	051 Move [X31+64], V2
	052 Move [X31+72], V0
	053 Move [X31+3], V1
	054 Compare X0, 0
	055 JumpIfEqual {71}
	056 Move V0, [X31+48]
	057 Move V1, [X31+64]
	058 Move V2, [X31+5]
	059 Add X1, X31, 0
	060 Move X2, X31
	061 Move [X31], V0
	062 Move [X31+8], V1
	063 Move [X31+2], V2
	064 Call Allocator2D.Free, X0, X1
	065 Move X20, [X31+112]
	066 Move X19, [X31+120]
	067 Move X30, [X31+96]
	068 Move X21, [X31+104]
	069 Add X31, X31, 128
	070 Return 
	071 Call 0x1C17F20

Method: System.Void Commit()

Disassembly:
	0x03DC34F0 STR W19, [X20 + 0xA4]
	0x03DC34F4 MOV X0, X20
	0x03DC34F8 MOV X1, X21
	0x03DC34FC MOV X2, X31
	0x03DC3500 BL 0x3D9C6C8
	0x03DC3504 MOV X0, X21
	0x03DC3508 MOV X1, X20
	0x03DC350C MOV X2, X31
	0x03DC3510 BL 0x3DA1680
	0x03DC3514 MOV X21, X31
	0x03DC3518 LDR X8, [X20]
	0x03DC351C LDR X1, [X23]
	0x03DC3520 LDRH W9, [X8 + 0x12E]
	0x03DC3524 CBZ X9, 0x3DC3548
	0x03DC3528 LDR X10, [X8 + 0xB0]
	0x03DC352C ADD X10, X10, 0x8
	0x03DC3530 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+88]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfEqual {13}
	007 Move X0, X19
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call DisposeHelper.NotifyDisposedUsed, X0
	012 Return 
	013 Move X0, X19
	014 Call DynamicAtlasPage.UpdateAtlasTexture, X0
	015 Move X0, [X19+72]
	016 Compare X0, 0
	017 JumpIfEqual {24}
	018 Move X1, [X19+24]
	019 Move X2, X31
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Call TextureBlitter.Commit, X0, X1
	023 Return 
	024 Call 0x1C17F20

Method: System.Void UpdateAtlasTexture()

Disassembly:
	0x03DC3534 CMP X11, X1
	0x03DC3538 B.EQ 0x3DC3558
	0x03DC353C SUBS X9, X9, 0x1
	0x03DC3540 ADD X10, X10, 0x10
	0x03DC3544 B.NE 0x3DC3530
	0x03DC3548 MOV X0, X20
	0x03DC354C MOV W2, W31
	0x03DC3550 BL 0x1C5C788
	0x03DC3554 B 0x3DC3564
	0x03DC3558 LDRSW X9, [X10]
	0x03DC355C ADD X8, X8, X9, 0x4, LSL
	0x03DC3560 ADD X0, X8, 0x138
	0x03DC3564 LDP X8, X1, [X0]
	0x03DC3568 MOV X0, X20
	0x03DC356C BLR X8
	0x03DC3570 CBZ X21, 0x3DC3488
	0x03DC3574 B 0x3DC35E0
	0x03DC3578 BL 0x1C16F20
	0x03DC357C B 0x3DC3660
	0x03DC3580 B 0x3DC3588
	0x03DC3584 B 0x3DC3588
	0x03DC3588 CMP W1, 0x1
	0x03DC358C STP X1, X0, [X31 + 0x8]
	0x03DC3590 B.NE 0x3DC35EC
	0x03DC3594 LDR X0, [X31 + 0x10]
	0x03DC3598 BL 0x3EB1AD0
	0x03DC359C LDR X21, [X0]
	0x03DC35A0 BL 0x3EB1AE0
	0x03DC35A4 CBNZ X20, 0x3DC3518
	0x03DC35A8 B 0x3DC3570
	0x03DC35AC LDR X1, [X22]
	0x03DC35B0 ADD X0, X31, 0x40
	0x03DC35B4 BL 0x2BB0CAC
	0x03DC35B8 LDP X20, X19, [X31 + 0xE0]
	0x03DC35BC LDP X22, X21, [X31 + 0xD0]
	0x03DC35C0 LDP X24, X23, [X31 + 0xC0]
	0x03DC35C4 LDP X30, X25, [X31 + 0xB0]
	0x03DC35C8 LDP D9, D8, [X31 + 0xA0]
	0x03DC35CC LDP D11, D10, [X31 + 0x90]
	0x03DC35D0 LDP D13, D12, [X31 + 0x80]
	0x03DC35D4 LDP D15, D14, [X31 + 0x70]
	0x03DC35D8 ADD X31, X31, 0xF0
	0x03DC35DC RET
	0x03DC35E0 MOV X0, X21
	0x03DC35E4 BL 0x1C16F18
	0x03DC35E8 BL 0x1C16F20
	0x03DC35EC MOV X21, X31
	0x03DC35F0 CBZ X20, 0x3DC3650
	0x03DC35F4 LDR X8, [X20]
	0x03DC35F8 LDR X1, [X23]
	0x03DC35FC LDRH W9, [X8 + 0x12E]
	0x03DC3600 CBZ X9, 0x3DC3624
	0x03DC3604 LDR X10, [X8 + 0xB0]
	0x03DC3608 ADD X10, X10, 0x8
	0x03DC360C LDUR X11, [X10 - 0x8]
	0x03DC3610 CMP X11, X1
	0x03DC3614 B.EQ 0x3DC3638
	0x03DC3618 SUBS X9, X9, 0x1
	0x03DC361C ADD X10, X10, 0x10
	0x03DC3620 B.NE 0x3DC360C
	0x03DC3624 MOV X0, X20
	0x03DC3628 MOV W2, W31
	0x03DC362C BL 0x1C5C788
	0x03DC3630 B 0x3DC3644
	0x03DC3634 BL 0x1C16F20
	0x03DC3638 LDRSW X9, [X10]
	0x03DC363C ADD X8, X8, X9, 0x4, LSL
	0x03DC3640 ADD X0, X8, 0x138
	0x03DC3644 LDP X8, X1, [X0]
	0x03DC3648 MOV X0, X20
	0x03DC364C BLR X8
	0x03DC3650 LDP X1, X0, [X31 + 0x8]
	0x03DC3654 CBZ X21, 0x3DC3680
	0x03DC3658 MOV X0, X21
	0x03DC365C BL 0x1C16F18
	0x03DC3660 STP X1, X0, [X31 + 0x8]
	0x03DC3664 CBNZ X20, 0x3DC35F4
	0x03DC3668 B 0x3DC3650
	0x03DC366C B 0x3DC3680
	0x03DC3670 B 0x3DC3680
	0x03DC3674 B 0x3DC3680
	0x03DC3678 B 0x3DC3680
	0x03DC367C B 0x3DC3680
	0x03DC3680 CMP W1, 0x1
	0x03DC3684 B.NE 0x3DC36AC
	0x03DC3688 BL 0x3EB1AD0
	0x03DC368C LDR X19, [X0]
	0x03DC3690 BL 0x3EB1AE0
	0x03DC3694 LDR X1, [X22]
	0x03DC3698 ADD X0, X31, 0x40
	0x03DC369C BL 0x2BB0CAC
	0x03DC36A0 CBZ X19, 0x3DC35B8
	0x03DC36A4 MOV X0, X19
	0x03DC36A8 BL 0x1C16F18
	0x03DC36AC MOV X20, X0
	0x03DC36B0 MOV X19, X31
	0x03DC36B4 B 0x3DC36BC
	0x03DC36B8 MOV X20, X0
	0x03DC36BC LDR X1, [X22]
	0x03DC36C0 ADD X0, X31, 0x40
	0x03DC36C4 BL 0x2BB0CAC
	0x03DC36C8 CBNZ X19, 0x3DC36D4
	0x03DC36CC MOV X0, X20
	0x03DC36D0 BL 0x1D2C690
	0x03DC36D4 MOV X0, X19
	0x03DC36D8 BL 0x1C16F18
	0x03DC36DC BL 0x1990590
	0x03DC36E0 STR X30, [X31 - 0x30]!
	0x03DC36E4 STP X22, X21, [X31 + 0x10]
	0x03DC36E8 STP X20, X19, [X31 + 0x20]
	0x03DC36EC ADRP X21, 0x625000
	0x03DC36F0 ADRP X22, 0x3A6000
	0x03DC36F4 ADRP X20, 0x3A6000
	0x03DC36F8 LDRB W8, [X21 + 0x132]
	0x03DC36FC LDR X22, [X22 + 0x1C0]
	0x03DC3700 LDR X20, [X20 + 0x1C8]
	0x03DC3704 MOV X19, X0
	0x03DC3708 TBNZ X8, 0x0, 0x3DC372C
	0x03DC370C ADRP X0, 0x3A6000
	0x03DC3710 LDR X0, [X0 + 0x1C8]
	0x03DC3714 BL 0x1C16CF4
	0x03DC3718 ADRP X0, 0x3A6000
	0x03DC371C LDR X0, [X0 + 0x1C0]
	0x03DC3720 BL 0x1C16CF4
	0x03DC3724 MOVZ W8, 0x1
	0x03DC3728 STRB W8, [X21 + 0x132]
	0x03DC372C LDR X0, [X22]
	0x03DC3730 BL 0x1C16F10
	0x03DC3734 LDR X1, [X20]
	0x03DC3738 MOV X20, X0
	0x03DC373C BL 0x2F0C0A8
	0x03DC3740 STR X20, [X19 + 0x20]
	0x03DC3744 MOV X0, X19
	0x03DC3748 LDP X20, X19, [X31 + 0x20]
	0x03DC374C LDP X22, X21, [X31 + 0x10]
	0x03DC3750 MOV X1, X31
	0x03DC3754 LDR X30, [X31], #0x30
	0x03DC3758 B 0x3D1A8F8
	0x03DC375C STP X30, X21, [X31 - 0x20]!
	0x03DC3760 STP X20, X19, [X31 + 0x10]
	0x03DC3764 ADRP X21, 0x625000
	0x03DC3768 ADRP X20, 0x3A6000
	0x03DC376C ADRP X19, 0x3A6000
	0x03DC3770 LDRB W8, [X21 + 0x133]
	0x03DC3774 LDR X20, [X20 + 0x1D0]
	0x03DC3778 LDR X19, [X19 + 0x168]
	0x03DC377C TBNZ X8, 0x0, 0x3DC37A0
	0x03DC3780 ADRP X0, 0x3A6000
	0x03DC3784 LDR X0, [X0 + 0x168]
	0x03DC3788 BL 0x1C16CF4
	0x03DC378C ADRP X0, 0x3A6000
	0x03DC3790 LDR X0, [X0 + 0x1D0]
	0x03DC3794 BL 0x1C16CF4
	0x03DC3798 MOVZ W8, 0x1
	0x03DC379C STRB W8, [X21 + 0x133]
	0x03DC37A0 LDR X8, [X19]
	0x03DC37A4 LDR X9, [X20]
	0x03DC37A8 MOVZ W1, 0x1
	0x03DC37AC MOV W2, W31
	0x03DC37B0 LDR X8, [X8 + 0xB8]
	0x03DC37B4 MOV W3, W31
	0x03DC37B8 MOV X4, X31
	0x03DC37BC STR X9, [X8]
	0x03DC37C0 LDR X8, [X19]
	0x03DC37C4 LDR X8, [X8 + 0xB8]
	0x03DC37C8 LDR X0, [X8]
	0x03DC37CC BL 0x3BFE7FC
	0x03DC37D0 LDR X8, [X19]
	0x03DC37D4 LDP X20, X19, [X31 + 0x10]
	0x03DC37D8 LDR X8, [X8 + 0xB8]
	0x03DC37DC STR X0, [X8 + 0x8]
	0x03DC37E0 LDP X30, X21, [X31], #0x20
	0x03DC37E4 RET
	0x03DC37E8 MOV X1, X31
	0x03DC37EC B 0x33BDD8C
	0x03DC37F0 STP X30, X21, [X31 - 0x20]!
	0x03DC37F4 STP X20, X19, [X31 + 0x10]
	0x03DC37F8 ADRP X21, 0x625000
	0x03DC37FC ADRP X20, 0x3A2000
	0x03DC3800 LDRB W8, [X21 + 0x134]
	0x03DC3804 LDR X20, [X20 + 0x148]
	0x03DC3808 MOV X19, X0
	0x03DC380C TBNZ X8, 0x0, 0x3DC3824
	0x03DC3810 ADRP X0, 0x3A2000
	0x03DC3814 LDR X0, [X0 + 0x148]
	0x03DC3818 BL 0x1C16CF4
	0x03DC381C MOVZ W8, 0x1
	0x03DC3820 STRB W8, [X21 + 0x134]
	0x03DC3824 LDR X1, [X20]
	0x03DC3828 ADD X0, X19, 0x10
	0x03DC382C LDP X20, X19, [X31 + 0x10]
	0x03DC3830 LDP X30, X21, [X31], #0x20
	0x03DC3834 B 0x2408B10
	0x03DC3838 STP X30, X21, [X31 - 0x20]!
	0x03DC383C STP X20, X19, [X31 + 0x10]
	0x03DC3840 ADRP X21, 0x625000
	0x03DC3844 ADRP X20, 0x3A1000
	0x03DC3848 LDRB W8, [X21 + 0x135]
	0x03DC384C LDR X20, [X20 + 0xFB8]
	0x03DC3850 MOV X19, X0
	0x03DC3854 TBNZ X8, 0x0, 0x3DC386C
	0x03DC3858 ADRP X0, 0x3A1000
	0x03DC385C LDR X0, [X0 + 0xFB8]
	0x03DC3860 BL 0x1C16CF4
	0x03DC3864 MOVZ W8, 0x1
	0x03DC3868 STRB W8, [X21 + 0x135]
	0x03DC386C LDR X1, [X20]
	0x03DC3870 ADD X0, X19, 0x20
	0x03DC3874 LDP X20, X19, [X31 + 0x10]
	0x03DC3878 LDP X30, X21, [X31], #0x20
	0x03DC387C B 0x2407134
	0x03DC3880 LDP S0, S1, [X0 + 0x30]
	0x03DC3884 LDP S2, S3, [X0 + 0x38]
	0x03DC3888 RET
	0x03DC388C SUB X31, X31, 0xB0
	0x03DC3890 STR X30, [X31 + 0x80]
	0x03DC3894 STP X22, X21, [X31 + 0x90]
	0x03DC3898 STP X20, X19, [X31 + 0xA0]
	0x03DC389C ADRP X22, 0x625000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x626000
	009 Move X21, 0x331000
	010 Move W8, [X20+300]
	011 Move X21, [X21+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x331000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x331000
	021 Move X0, [X0+1880]
	022 Call 0x1C17CF4
	023 Move X0, 0x331000
	024 Move X0, [X0+2512]
	025 Call 0x1C17CF4
	026 Move X0, 0x331000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0x35B000
	030 Move X0, [X0+576]
	031 Call 0x1C17CF4
	032 Move X0, 0x3A7000
	033 Move X0, [X0+344]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+300], W8
	037 Move X0, [X21]
	038 Move X20, [X19+24]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {54}
	051 Move X0, X19
	052 Call DynamicAtlasPage.CreateAtlasTexture, X0
	053 Move X20, X0
	054 Move X0, [X19+24]
	055 Compare X0, 0
	056 JumpIfEqual {250}
	057 Move X8, [X0]
	058 Move X9, [X8+392]
	059 Move X1, [X8+400]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move W8, [X19+80]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, [X19+24]
	064 Compare X0, 0
	065 JumpIfEqual {250}
	066 Move X8, [X0]
	067 Move X9, [X8+424]
	068 Move X1, [X8+432]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move W8, [X19+84]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, X19
	073 Call DynamicAtlasPage.CreateAtlasTexture, X0
	074 Move X8, [X21]
	075 Move X20, X0
	076 Move W9, [X8+224]
	077 Compare W9, 0
	078 JumpIfNotEqual {81}
	079 Move X0, X8
	080 Call 0x1C17DFC
	081 Move X0, X20
	082 Move X1, X31
	083 Move X2, X31
	084 Call Object.op_Equality, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {196}
	089 Move X8, 0x331000
	090 Move X8, [X8+2512]
	091 Move W1, 4
	092 Move X0, [X8]
	093 Call 0x1C17D6C
	094 Move X8, [X19+24]
	095 Compare X8, 0
	096 JumpIfEqual {250}
	097 Move X9, [X8]
	098 Move X21, X0
	099 Move X0, X8
	100 Move X10, [X9+392]
	101 Move X1, [X9+400]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X23, 0x331000
	104 Move X23, [X23+1880]
	105 Move [X31+12], W0
	106 Add X1, X31, 12
	107 Move X8, [X23]
	108 Move X0, X8
	109 Call 0x1C17E04
	110 Compare X21, 0
	111 JumpIfEqual {250}
	112 Move X22, X0
	113 Compare X0, 0
	114 JumpIfEqual {121}
	115 Move X8, [X21]
	116 Move X0, X22
	117 Move X1, [X8+64]
	118 Call 0x1C17E00
	119 Compare X0, 0
	120 JumpIfEqual {252}
	121 Move W8, [X21+24]
	122 Compare W8, 0
	123 JumpIfEqual {251}
	124 Move [X21+32], X22
	125 Move X0, [X19+24]
	126 Compare X0, 0
	127 JumpIfEqual {250}
	128 Move X8, [X0]
	129 Move X9, [X8+424]
	130 Move X1, [X8+432]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X8, [X23]
	133 Move [X31+8], W0
	134 Add X1, X31, 8
	135 Move X0, X8
	136 Call 0x1C17E04
	137 Move X22, X0
	138 Compare X0, 0
	139 JumpIfEqual {146}
	140 Move X8, [X21]
	141 Move X0, X22
	142 Move X1, [X8+64]
	143 Call 0x1C17E00
	144 Compare X0, 0
	145 JumpIfEqual {252}
	146 Move W8, [X21+24]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move [X21+40], X22
	149 Move W8, [X19+80]
	150 Move X0, [X23]
	151 Add X1, X31, 4
	152 Move [X31+4], W8
	153 Call 0x1C17E04
	154 Move X22, X0
	155 Compare X0, 0
	156 JumpIfEqual {163}
	157 Move X8, [X21]
	158 Move X0, X22
	159 Move X1, [X8+64]
	160 Call 0x1C17E00
	161 Compare X0, 0
	162 JumpIfEqual {252}
	163 Move W8, [X21+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move [X21+48], X22
	166 Move W8, [X19+84]
	167 Move X0, [X23]
	168 Add X1, X31, 0
	169 Move [X31], W8
	170 Call 0x1C17E04
	171 Move X22, X0
	172 Compare X0, 0
	173 JumpIfEqual {180}
	174 Move X8, [X21]
	175 Move X0, X22
	176 Move X1, [X8+64]
	177 Call 0x1C17E00
	178 Compare X0, 0
	179 JumpIfEqual {252}
	180 Move W8, [X21+24]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move [X21+56], X22
	183 Move X8, 0x331000
	184 Move X8, [X8+2600]
	185 Move X0, [X8]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Move X8, 0x3A7000
	191 Move X8, [X8+344]
	192 Move X1, X21
	193 Move X2, X31
	194 Move X0, [X8]
	195 Call Debug.LogErrorFormat, X0, X1
	196 Move X21, [X19+24]
	197 Compare X21, 0
	198 JumpIfEqual {250}
	199 Move X8, [X21]
	200 Move X22, [X19+72]
	201 Move X0, X21
	202 Move X9, [X8+392]
	203 Move X1, [X8+400]
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move X8, [X19+24]
	206 Compare X8, 0
	207 JumpIfEqual {250}
	208 Move X9, [X8]
	209 Move W23, W0
	210 Move X0, X8
	211 Move X10, [X9+424]
	212 Move X1, [X9+432]
	213 NotImplemented "Instruction BLR not yet implemented."
	214 Compare X22, 0
	215 JumpIfEqual {250}
	216 Move W4, W23
	217 NotImplemented "Instruction BFM not yet implemented."
	218 Move S0, 1
	219 Move S1, 1
	220 Move S2, 1
	221 Move S3, 1
	222 Move X0, X22
	223 Move X1, X20
	224 Move X2, X21
	225 Move X3, X31
	226 Move X5, X31
	227 Move W6, W31
	228 Move X7, X31
	229 Call TextureBlitter.BlitOneNow, X0, X1, X2, X3, X4, X5, X6
	230 Move X8, 0x35B000
	231 Move X8, [X8+576]
	232 Move X21, [X19+24]
	233 Move X0, [X8]
	234 Move W8, [X0+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {238}
	237 Call 0x1C17DFC
	238 Move X0, X21
	239 Move X1, X31
	240 Call UIRUtility.Destroy, X0
	241 Move [X19+24], X20
	242 Move X20, [X31+48]
	243 Move X19, [X31+56]
	244 Move X22, [X31+32]
	245 Move X21, [X31+40]
	246 Move X30, [X31+16]
	247 Move X23, [X31+24]
	248 Add X31, X31, 64
	249 Return 
	250 Call 0x1C17F20
	251 Call 0x1C17F28
	252 Call 0x1C17F44
	253 Move X1, X31
	254 Call 0x1C17DEC

Method: UnityEngine.RenderTexture CreateAtlasTexture()

Disassembly:
	0x03DC38A0 ADRP X21, 0x3A1000
	0x03DC38A4 LDRB W8, [X22 + 0x136]
	0x03DC38A8 LDR X21, [X21 + 0x610]
	0x03DC38AC MOV X19, X1
	0x03DC38B0 MOV X20, X0
	0x03DC38B4 TBNZ X8, 0x0, 0x3DC38CC
	0x03DC38B8 ADRP X0, 0x3A1000
	0x03DC38BC LDR X0, [X0 + 0x610]
	0x03DC38C0 BL 0x1C16CF4
	0x03DC38C4 MOVZ W8, 0x1
	0x03DC38C8 STRB W8, [X22 + 0x136]
	0x03DC38CC LDR W1, [X20 + 0x44]
	0x03DC38D0 ADD X0, X20, 0x10
	0x03DC38D4 ADD X2, X31, 0x40
	0x03DC38D8 ADD W8, W1, 0x1
	0x03DC38DC STR W8, [X20 + 0x44]
	0x03DC38E0 LDP V0, V1, [X19 + 0x20]
	0x03DC38E4 LDP V2, V3, [X19]
	0x03DC38E8 LDR X3, [X21]
	0x03DC38EC STP V0, V1, [X31 + 0x20]
	0x03DC38F0 STP V2, V3, [X31]
	0x03DC38F4 STP V2, V3, [X31 + 0x40]
	0x03DC38F8 STP V0, V1, [X31 + 0x60]
	0x03DC38FC BL 0x24088B0
	0x03DC3900 LDP X20, X19, [X31 + 0xA0]
	0x03DC3904 LDP X22, X21, [X31 + 0x90]
	0x03DC3908 LDR X30, [X31 + 0x80]
	0x03DC390C ADD X31, X31, 0xB0
	0x03DC3910 RET
	0x03DC3914 STR X30, [X31 - 0x30]!
	0x03DC3918 STP X22, X21, [X31 + 0x10]
	0x03DC391C STP X20, X19, [X31 + 0x20]
	0x03DC3920 ADRP X22, 0x625000
	0x03DC3924 ADRP X21, 0x3A1000
	0x03DC3928 LDRB W8, [X22 + 0x137]
	0x03DC392C LDR X21, [X21 + 0x618]
	0x03DC3930 MOV W19, W1
	0x03DC3934 MOV X20, X0
	0x03DC3938 TBNZ X8, 0x0, 0x3DC3950
	0x03DC393C ADRP X0, 0x3A1000
	0x03DC3940 LDR X0, [X0 + 0x618]
	0x03DC3944 BL 0x1C16CF4
	0x03DC3948 MOVZ W8, 0x1
	0x03DC394C STRB W8, [X22 + 0x137]
	0x03DC3950 LDR W1, [X20 + 0x40]
	0x03DC3954 ADD X0, X20, 0x20
	0x03DC3958 MOV W2, W19
	0x03DC395C ADD W8, W1, 0x1
	0x03DC3960 STR W8, [X20 + 0x40]
	0x03DC3964 LDR X3, [X21]
	0x03DC3968 LDP X20, X19, [X31 + 0x20]
	0x03DC396C LDP X22, X21, [X31 + 0x10]
	0x03DC3970 LDR X30, [X31], #0x30
	0x03DC3974 B 0x2406EF0
	0x03DC3978 STR X30, [X31 - 0x30]!
	0x03DC397C STP X22, X21, [X31 + 0x10]
	0x03DC3980 STP X20, X19, [X31 + 0x20]
	0x03DC3984 ADRP X21, 0x625000
	0x03DC3988 LDRB W8, [X21 + 0x138]
	0x03DC398C MOV X20, X1
	0x03DC3990 MOV X19, X0
	0x03DC3994 TBNZ X8, 0x0, 0x3DC39B8
	0x03DC3998 ADRP X0, 0x3A6000
	0x03DC399C LDR X0, [X0 + 0x1D8]
	0x03DC39A0 BL 0x1C16CF4
	0x03DC39A4 ADRP X0, 0x3A2000
	0x03DC39A8 LDR X0, [X0 + 0x148]
	0x03DC39AC BL 0x1C16CF4
	0x03DC39B0 MOVZ W8, 0x1
	0x03DC39B4 STRB W8, [X21 + 0x138]
	0x03DC39B8 LDR W8, [X19 + 0x44]
	0x03DC39BC CBNZ W8, 0x3DC3A04
	0x03DC39C0 ADRP X8, 0x3A6000
	0x03DC39C4 LDR X8, [X8 + 0x1D8]
	0x03DC39C8 ADRP X22, 0x3A2000
	0x03DC39CC ADD X21, X19, 0x10

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x626000
	009 Move W8, [X20+301]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x3A0000
	016 Move X0, [X0+1760]
	017 Call 0x1C17CF4
	018 Move X0, 0x333000
	019 Move X0, [X0+304]
	020 Call 0x1C17CF4
	021 Move X0, 0x3A7000
	022 Move X0, [X0+352]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+301], W8
	026 Move [X31+12], W31
	027 Move W21, [X19+80]
	028 Compare W21, 0
	029 JumpIfEqual {77}
	030 Move W22, [X19+84]
	031 Compare W22, 0
	032 JumpIfEqual {77}
	033 Move X8, 0x333000
	034 Move W23, [X19+32]
	035 Move X8, [X8+304]
	036 Move X0, [X8]
	037 Call 0x1C17F10
	038 Move W1, W21
	039 Move W2, W22
	040 Move W3, W31
	041 Move W4, W23
	042 Move X5, X31
	043 Move X20, X0
	044 Call RenderTexture..ctor, X0, X1, X2, X3, X4
	045 Compare X20, 0
	046 JumpIfEqual {87}
	047 Move W1, 61
	048 Move X0, X20
	049 Move X2, X31
	050 Call Object.set_hideFlags, X0, X1
	051 Move X8, 0x3A0000
	052 Move X8, [X8+1760]
	053 Add X0, X31, 12
	054 Move X1, X31
	055 Move X8, [X8]
	056 Move X8, [X8+184]
	057 Move W9, [X8]
	058 Add W10, W9, 1
	059 Move [X8], W10
	060 Move [X31+12], W9
	061 Call Int32.ToString, X0
	062 Move X8, 0x3A7000
	063 Move X8, [X8+352]
	064 Move X1, X0
	065 Move X2, X31
	066 Move X8, [X8]
	067 Move X0, X8
	068 Call String.Concat, X0, X1
	069 Move X1, X0
	070 Move X0, X20
	071 Move X2, X31
	072 Call Object.set_name, X0, X1
	073 Move W1, [X19+36]
	074 Move X0, X20
	075 Move X2, X31
	076 Call Texture.set_filterMode, X0, X1
	077 Move X20, X31
	078 Move X0, X20
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X30, [X31+16]
	084 Move X23, [X31+24]
	085 Add X31, X31, 64
	086 Return X0
	087 Call 0x1C17F20

