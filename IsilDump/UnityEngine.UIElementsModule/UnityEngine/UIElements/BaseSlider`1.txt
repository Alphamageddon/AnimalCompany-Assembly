Type: UnityEngine.UIElements.BaseSlider`1

Method: UnityEngine.UIElements.VisualElement get_dragContainer()

Disassembly:
	0x028BC644 FADD S2, S9, S1
	0x028BC648 MOV V1.16B, V0.16B

ISIL:
	001 Move X0, [X0+1088]
	002 Return X0

Method: System.Void set_dragContainer(UnityEngine.UIElements.VisualElement value)

Disassembly:
	0x028BC64C MOV V0.16B, V8.16B
	0x028BC650 B 0x28BC704

ISIL:
	001 Move [X0+1088], X1
	002 Return 

Method: UnityEngine.UIElements.VisualElement get_dragElement()

Disassembly:
	0x028BC654 LDR W9, [X10]
	0x028BC658 ADD W9, W9, 0x2C

ISIL:
	001 Move X0, [X0+1096]
	002 Return X0

Method: System.Void set_dragElement(UnityEngine.UIElements.VisualElement value)

Disassembly:
	0x028BC65C ADD X8, X8, W9, 0x4, SXTW
	0x028BC660 ADD X0, X8, 0x138

ISIL:
	001 Move [X0+1096], X1
	002 Return 

Method: UnityEngine.UIElements.VisualElement get_trackElement()

Disassembly:
	0x028BC664 LDP X8, X1, [X0]
	0x028BC668 MOV X0, X21

ISIL:
	001 Move X0, [X0+1104]
	002 Return X0

Method: System.Void set_trackElement(UnityEngine.UIElements.VisualElement value)

Disassembly:
	0x028BC66C BLR X8
	0x028BC670 LDR X0, [X19 + 0x448]

ISIL:
	001 Move [X0+1104], X1
	002 Return 

Method: UnityEngine.UIElements.VisualElement get_dragBorderElement()

Disassembly:
	0x028BC674 CBZ X0, 0x28BC71C
	0x028BC678 MOV X1, X31

ISIL:
	001 Move X0, [X0+1112]
	002 Return X0

Method: System.Void set_dragBorderElement(UnityEngine.UIElements.VisualElement value)

Disassembly:
	0x028BC67C MOV V9.16B, V0.16B
	0x028BC680 BL 0x3DE0EB8

ISIL:
	001 Move [X0+1112], X1
	002 Return 

Method: UnityEngine.UIElements.TextField get_inputTextField()

Disassembly:
	0x028BC684 CBZ X0, 0x28BC71C
	0x028BC688 LDR X8, [X0]

ISIL:
	001 Move X0, [X0+1120]
	002 Return X0

Method: System.Void set_inputTextField(UnityEngine.UIElements.TextField value)

Disassembly:
	0x028BC68C LDR X1, [X22]
	0x028BC690 MOV X21, X0

ISIL:
	001 Move [X0+1120], X1
	002 Return 

Method: TValueType get_lowValue()

Disassembly:
	0x028BC694 LDRH W9, [X8 + 0x12E]
	0x028BC698 CBZ X9, 0x28BC6BC

ISIL:
	001 Move W0, [X0+1132]
	002 Return X0

Method: System.Void set_lowValue(TValueType value)

Disassembly:
	0x028BC69C LDR X10, [X8 + 0xB0]
	0x028BC6A0 ADD X10, X10, 0x8
	0x028BC6A4 LDUR X11, [X10 - 0x8]
	0x028BC6A8 CMP X11, X1
	0x028BC6AC B.EQ 0x28BC6CC
	0x028BC6B0 SUBS X9, X9, 0x1
	0x028BC6B4 ADD X10, X10, 0x10
	0x028BC6B8 B.NE 0x28BC6A4
	0x028BC6BC MOVZ W2, 0x2C
	0x028BC6C0 MOV X0, X21
	0x028BC6C4 BL 0x1C5C788
	0x028BC6C8 B 0x28BC6DC
	0x028BC6CC LDR W9, [X10]
	0x028BC6D0 ADD W9, W9, 0x2C
	0x028BC6D4 ADD X8, X8, W9, 0x4, SXTW
	0x028BC6D8 ADD X0, X8, 0x138
	0x028BC6DC LDP X8, X1, [X0]
	0x028BC6E0 MOV X0, X21
	0x028BC6E4 BLR X8
	0x028BC6E8 LDR X8, [X20 + 0x20]
	0x028BC6EC LDR V1, [X19 + 0x488]
	0x028BC6F0 MOV X0, X19
	0x028BC6F4 LDR X8, [X8 + 0xC0]
	0x028BC6F8 FADD S2, S8, S1
	0x028BC6FC MOV V1.16B, V0.16B
	0x028BC700 MOV V0.16B, V9.16B
	0x028BC704 LDR X1, [X8 + 0x1C8]
	0x028BC708 LDP X20, X19, [X31 + 0x30]
	0x028BC70C LDP X22, X21, [X31 + 0x20]
	0x028BC710 LDP X30, X23, [X31 + 0x10]
	0x028BC714 LDP D9, D8, [X31], #0x40
	0x028BC718 B 0x28BC720
	0x028BC71C BL 0x1C16F20
	0x028BC720 STP X30, X19, [X31 - 0x10]!
	0x028BC724 ADRP X8, 0xFFFFFFFFFE22D000
	0x028BC728 LDR V3, [X8 + 0xF9C]
	0x028BC72C FABD S4, S0, S0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X0
	007 Move X20, X2
	008 Move W21, W1
	009 Move X8, [X8+192]
	010 Move X8, [X8+16]
	011 Move X0, X8
	012 Call 0x211B010
	013 Compare X0, 0
	014 JumpIfEqual {49}
	015 Move X8, [X0]
	016 Move W1, [X19+1132]
	017 Move W2, W21
	018 Move X9, [X8+440]
	019 Move X3, [X8+448]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {30}
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return 
	030 Move [X19+1132], W21
	031 Move X8, [X20+32]
	032 Move X0, X19
	033 Move X8, [X8+192]
	034 Move X1, [X8+48]
	035 Call 0x28BD410, X0
	036 Move X8, [X20+32]
	037 Move X0, X19
	038 Move X8, [X8+192]
	039 Move X1, [X8+56]
	040 Call 0x28BECBC, X0
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X1, X31
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call VisualElement.SaveViewData, X0
	048 Return 
	049 Call 0x1C17F20

Method: TValueType get_highValue()

Disassembly:
	0x028BC730 FCMP S4, S3
	0x028BC734 B.MI 0x28BC794

ISIL:
	001 Move W0, [X0+1136]
	002 Return X0

Method: System.Void set_highValue(TValueType value)

Disassembly:
	0x028BC738 LDR X8, [X1 + 0x20]
	0x028BC73C LDRB W9, [X0 + 0x479]
	0x028BC740 FSUB S0, S0, S1
	0x028BC744 FCMP S0, S2
	0x028BC748 LDR X8, [X8 + 0xC0]
	0x028BC74C FCSEL S1, S2, S0, GT
	0x028BC750 FMOV S3, W31
	0x028BC754 LDR W1, [X0 + 0x46C]
	0x028BC758 LDR W2, [X0 + 0x470]
	0x028BC75C LDR X3, [X8 + 0x1D0]
	0x028BC760 FMAX S1, S1, S3
	0x028BC764 CMP W9, 0x0
	0x028BC768 FCSEL S1, S2, S1, EQ
	0x028BC76C FDIV S0, S1, S0
	0x028BC770 MOV X19, X0
	0x028BC774 BL 0x28BC44C
	0x028BC778 LDR X8, [X19]
	0x028BC77C MOV W1, W0
	0x028BC780 MOV X0, X19
	0x028BC784 LDR X3, [X8 + 0x7F8]
	0x028BC788 LDR X2, [X8 + 0x800]
	0x028BC78C LDP X30, X19, [X31], #0x10
	0x028BC790 BR X3
	0x028BC794 LDP X30, X19, [X31], #0x10
	0x028BC798 RET
	0x028BC79C STP D13, D12, [X31 - 0x60]!
	0x028BC7A0 STP D11, D10, [X31 + 0x10]
	0x028BC7A4 STP D9, D8, [X31 + 0x20]
	0x028BC7A8 STP X30, X23, [X31 + 0x30]
	0x028BC7AC STP X22, X21, [X31 + 0x40]
	0x028BC7B0 STP X20, X19, [X31 + 0x50]
	0x028BC7B4 ADRP X21, 0x1B1E000
	0x028BC7B8 LDRB W8, [X21 + 0xCBE]
	0x028BC7BC MOV X20, X1
	0x028BC7C0 MOV X19, X0
	0x028BC7C4 TBNZ X8, 0x0, 0x28BC7E8
	0x028BC7C8 ADRP X0, 0x1860000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X0
	007 Move X20, X2
	008 Move W21, W1
	009 Move X8, [X8+192]
	010 Move X8, [X8+16]
	011 Move X0, X8
	012 Call 0x211B010
	013 Compare X0, 0
	014 JumpIfEqual {49}
	015 Move X8, [X0]
	016 Move W1, [X19+1136]
	017 Move W2, W21
	018 Move X9, [X8+440]
	019 Move X3, [X8+448]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {30}
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return 
	030 Move [X19+1136], W21
	031 Move X8, [X20+32]
	032 Move X0, X19
	033 Move X8, [X8+192]
	034 Move X1, [X8+48]
	035 Call 0x28BD410, X0
	036 Move X8, [X20+32]
	037 Move X0, X19
	038 Move X8, [X8+192]
	039 Move X1, [X8+56]
	040 Call 0x28BECBC, X0
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X1, X31
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call VisualElement.SaveViewData, X0
	048 Return 
	049 Call 0x1C17F20

Method: System.Void SetHighValueWithoutNotify(TValueType newHighValue)

Disassembly:
	0x028BC7CC LDR X0, [X0 + 0x120]
	0x028BC7D0 BL 0x1C16CF4
	0x028BC7D4 ADRP X0, 0x1861000
	0x028BC7D8 LDR X0, [X0 + 0x688]
	0x028BC7DC BL 0x1C16CF4
	0x028BC7E0 MOVZ W8, 0x1
	0x028BC7E4 STRB W8, [X21 + 0xCBE]
	0x028BC7E8 LDR X8, [X19 + 0x480]
	0x028BC7EC CBZ X8, 0x28BD31C
	0x028BC7F0 LDR W8, [X8 + 0x80]
	0x028BC7F4 CMP W8, 0x4
	0x028BC7F8 B.EQ 0x28BC8E8
	0x028BC7FC CBNZ W8, 0x28BCB2C
	0x028BC800 LDR X8, [X19]
	0x028BC804 MOV X0, X19
	0x028BC808 LDR X9, [X8 + 0x8E8]
	0x028BC80C LDR X1, [X8 + 0x8F0]
	0x028BC810 BLR X9
	0x028BC814 ADRP X21, 0x1B1D000
	0x028BC818 LDRB W8, [X21 + 0x5AA]
	0x028BC81C MOV V8.16B, V0.16B
	0x028BC820 CBNZ W8, 0x28BC838
	0x028BC824 ADRP X0, 0x183E000
	0x028BC828 LDR X0, [X0 + 0x4B8]
	0x028BC82C BL 0x1C16CF4
	0x028BC830 MOVZ W8, 0x1
	0x028BC834 STRB W8, [X21 + 0x5AA]
	0x028BC838 ADRP X8, 0x183E000
	0x028BC83C LDR X8, [X8 + 0x4B8]
	0x028BC840 ADRP X9, 0xFFFFFFFFFE22E000
	0x028BC844 LDR V0, [X9 + 0x240]
	0x028BC848 FABS S1, S8
	0x028BC84C LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move [X0+1136], W1
	007 Move W21, [X0+1145]
	008 Move X19, X0
	009 Move X9, [X8+2024]
	010 Move X1, [X8+2032]
	011 Move X20, X2
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move W1, W0
	014 Compare W21, 0
	015 JumpIfEqual {22}
	016 Move X8, [X20+32]
	017 Move X0, X19
	018 Move X8, [X8+192]
	019 Move X2, [X8+88]
	020 Call 0x28BC91C, X0, X1
	021 Move W1, W0
	022 Move X8, [X19]
	023 Move X0, X19
	024 Move X9, [X8+2184]
	025 Move X2, [X8+2192]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, [X20+32]
	028 Move X0, X19
	029 Move X8, [X8+192]
	030 Move X1, [X8+56]
	031 Call 0x28BECBC, X0
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X1, X31
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call VisualElement.SaveViewData, X0
	039 Return 

Method: System.Single get_pageSize()

Disassembly:
	0x028BC850 FMOV S2, W31
	0x028BC854 FMAXNM S1, S1, S2

ISIL:
	001 Move V0, [X0+1140]
	002 Return V0

Method: System.Void set_pageSize(System.Single value)

Disassembly:
	0x028BC858 FMUL S0, S1, S0
	0x028BC85C LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X0+1140], S0
	002 Return 

Method: System.Boolean get_showInputField()

Disassembly:
	0x028BC860 FMOV S1, 8
	0x028BC864 LDR V3, [X8]

ISIL:
	001 Move W0, [X0+1144]
	002 Return X0

Method: System.Void set_showInputField(System.Boolean value)

Disassembly:
	0x028BC868 FMUL S1, S3, S1
	0x028BC86C FCMP S0, S1
	0x028BC870 FCSEL S0, S0, S1, GT
	0x028BC874 FABD S1, S2, S2
	0x028BC878 FCMP S1, S0
	0x028BC87C B.PL 0x28BC904
	0x028BC880 LDR X0, [X19 + 0x440]
	0x028BC884 CBZ X0, 0x28BD31C
	0x028BC888 LDR W23, [X19 + 0x498]
	0x028BC88C MOV X1, X31

ISIL:
	001 Move W9, [X0+1144]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Return 
	005 Move [X0+1144], W8
	006 Move X8, [X2+32]
	007 Move X8, [X8+192]
	008 Move X1, [X8+104]
	009 Call 0x28BF470, X0
	010 Return 

Method: System.Boolean get_clamped()

Disassembly:
	0x028BC890 BL 0x3DE0EB8
	0x028BC894 CBZ X0, 0x28BD31C

ISIL:
	001 Move W0, [X0+1145]
	002 Return X0

Method: System.Void set_clamped(System.Boolean value)

Disassembly:
	0x028BC898 ADRP X22, 0x1860000
	0x028BC89C LDR X8, [X0]
	0x028BC8A0 LDR X22, [X22 + 0x120]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+1145], W8
	003 Return 

Method: UnityEngine.UIElements.ClampedDragger`1<TValueType> get_clampedDragger()

Disassembly:
	0x028BC8A4 MOV X21, X0
	0x028BC8A8 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move X0, [X0+1152]
	002 Return X0

Method: System.Void set_clampedDragger(UnityEngine.UIElements.ClampedDragger`1<TValueType> value)

Disassembly:
	0x028BC8AC LDR X1, [X22]
	0x028BC8B0 CBZ W23, 0x28BC964

ISIL:
	001 Move [X0+1152], X1
	002 Return 

Method: TValueType Clamp(TValueType value, TValueType lowBound, TValueType highBound)

Disassembly:
	0x028BC8B4 CBZ W9, 0x28BC8D8
	0x028BC8B8 LDR X10, [X8 + 0xB0]
	0x028BC8BC ADD X10, X10, 0x8
	0x028BC8C0 LDUR X11, [X10 - 0x8]
	0x028BC8C4 CMP X11, X1
	0x028BC8C8 B.EQ 0x28BCE44
	0x028BC8CC SUBS X9, X9, 0x1
	0x028BC8D0 ADD X10, X10, 0x10
	0x028BC8D4 B.NE 0x28BC8C0
	0x028BC8D8 MOVZ W2, 0x13
	0x028BC8DC MOV X0, X21
	0x028BC8E0 BL 0x1C5C788
	0x028BC8E4 B 0x28BCE54
	0x028BC8E8 LDP X20, X19, [X31 + 0x50]
	0x028BC8EC LDP X22, X21, [X31 + 0x40]
	0x028BC8F0 LDP X30, X23, [X31 + 0x30]
	0x028BC8F4 LDP D9, D8, [X31 + 0x20]
	0x028BC8F8 LDP D11, D10, [X31 + 0x10]
	0x028BC8FC LDP D13, D12, [X31], #0x60
	0x028BC900 RET
	0x028BC904 LDR X0, [X19 + 0x448]
	0x028BC908 CBZ X0, 0x28BD31C
	0x028BC90C MOV X1, X31
	0x028BC910 BL 0x3DEC1BC
	0x028BC914 CBZ X0, 0x28BD31C
	0x028BC918 ADRP X21, 0x1861000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X31+8], W3
	005 Move [X31+12], W2
	006 Move X8, [X4+32]
	007 Add X0, X31, 12
	008 Move X20, X4
	009 Move W19, W1
	010 Move X8, [X8+192]
	011 Move X2, [X8+128]
	012 Call Int32.CompareTo, X0, X1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W0, [X31+12]
	015 Move X8, [X20+32]
	016 Add X0, X31, 8
	017 Move W1, W19
	018 Move X8, [X8+192]
	019 Move X2, [X8+128]
	020 Call Int32.CompareTo, X0, X1
	021 Move W8, [X31+8]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSEL not yet implemented."
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

Method: TValueType GetClampedValue(TValueType newValue)

Disassembly:
	0x028BC91C LDR X8, [X0]
	0x028BC920 LDR X21, [X21 + 0x688]
	0x028BC924 MOV X20, X0
	0x028BC928 LDRH W9, [X8 + 0x12E]
	0x028BC92C LDR X1, [X21]
	0x028BC930 CBZ X9, 0x28BC954
	0x028BC934 LDR X10, [X8 + 0xB0]
	0x028BC938 ADD X10, X10, 0x8
	0x028BC93C LDUR X11, [X10 - 0x8]
	0x028BC940 CMP X11, X1
	0x028BC944 B.EQ 0x28BC998
	0x028BC948 SUBS X9, X9, 0x1
	0x028BC94C ADD X10, X10, 0x10
	0x028BC950 B.NE 0x28BC93C
	0x028BC954 MOV X0, X20
	0x028BC958 MOV W2, W31
	0x028BC95C BL 0x1C5C788
	0x028BC960 B 0x28BC9A4
	0x028BC964 CBZ W9, 0x28BC988
	0x028BC968 LDR X10, [X8 + 0xB0]
	0x028BC96C ADD X10, X10, 0x8
	0x028BC970 LDUR X11, [X10 - 0x8]
	0x028BC974 CMP X11, X1
	0x028BC978 B.EQ 0x28BCF8C
	0x028BC97C SUBS X9, X9, 0x1
	0x028BC980 ADD X10, X10, 0x10
	0x028BC984 B.NE 0x28BC970
	0x028BC988 MOVZ W2, 0x2C
	0x028BC98C MOV X0, X21
	0x028BC990 BL 0x1C5C788
	0x028BC994 B 0x28BCF9C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move W9, [X0+1132]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X8, [X8+192]
	011 Move [X31+12], W9
	012 Move W21, [X0+1136]
	013 Add X0, X31, 12
	014 Move X2, [X8+128]
	015 Move W1, W21
	016 Call Int32.CompareTo, X0, X1
	017 Move W3, [X31+12]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W2, W21
	020 Move [X31+12], W21
	021 Move W2, W3
	022 Move W3, W21
	023 Move X8, [X19+32]
	024 Move W1, W20
	025 Move X8, [X8+192]
	026 Move X4, [X8+152]
	027 Call 0x28BC8B4, X0, X1, X2, X3
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X21, [X31+24]
	032 Add X31, X31, 48
	033 Return X0

Method: TValueType get_value()

Disassembly:
	0x028BC998 LDRSW X9, [X10]
	0x028BC99C ADD X8, X8, X9, 0x4, LSL
	0x028BC9A0 ADD X0, X8, 0x138
	0x028BC9A4 LDP X8, X1, [X0]
	0x028BC9A8 MOV X0, X20
	0x028BC9AC BLR X8
	0x028BC9B0 LDR X0, [X19 + 0x448]
	0x028BC9B4 CBZ X0, 0x28BD31C

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {10}
	004 Move X8, [X1+32]
	005 Move X8, [X8+192]
	006 Move X1, [X8+80]
	007 Move X30, [X31+16]
	008 Call BaseField`1<Int32>.get_value, X0
	009 Return X0
	010 Call 0x1C17F20

Method: System.Void set_value(TValueType value)

Disassembly:
	0x028BC9B8 MOV X1, X31
	0x028BC9BC MOV V8.16B, V0.16B
	0x028BC9C0 BL 0x3DEC1BC
	0x028BC9C4 CBZ X0, 0x28BD31C
	0x028BC9C8 LDR X8, [X0]
	0x028BC9CC LDR X1, [X21]
	0x028BC9D0 MOV X20, X0
	0x028BC9D4 LDRH W9, [X8 + 0x12E]
	0x028BC9D8 CBZ X9, 0x28BC9FC
	0x028BC9DC LDR X10, [X8 + 0xB0]
	0x028BC9E0 ADD X10, X10, 0x8
	0x028BC9E4 LDUR X11, [X10 - 0x8]
	0x028BC9E8 CMP X11, X1
	0x028BC9EC B.EQ 0x28BCA0C
	0x028BC9F0 SUBS X9, X9, 0x1
	0x028BC9F4 ADD X10, X10, 0x10
	0x028BC9F8 B.NE 0x28BC9E4
	0x028BC9FC MOV X0, X20
	0x028BCA00 MOV W2, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+1145]
	005 Move X20, X2
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfEqual {15}
	009 Move X8, [X20+32]
	010 Move X0, X19
	011 Move X8, [X8+192]
	012 Move X2, [X8+88]
	013 Call 0x28BC91C, X0, X1
	014 Move W1, W0
	015 Move X8, [X20+32]
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X8, [X8+192]
	020 Move X2, [X8+160]
	021 Move X30, [X31+32]
	022 Call BaseField`1<Int32>.set_value, X0, X1
	023 Return 

Method: System.Void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, TValueType startValue)

Disassembly:
	0x028BCA04 BL 0x1C5C788

ISIL:
	001 Return 

Method: System.Void UnityEngine.UIElements.IValueField<TValueType>.StartDragging()

Disassembly:
	0x028BCA08 B 0x28BCA18

ISIL:
	001 Return 

Method: System.Void UnityEngine.UIElements.IValueField<TValueType>.StopDragging()

Disassembly:
	0x028BCA0C LDRSW X9, [X10]

ISIL:
	001 Return 

Method: System.Void SetValueWithoutNotify(TValueType newValue)

Disassembly:
	0x028BCA10 ADD X8, X8, X9, 0x4, LSL
	0x028BCA14 ADD X0, X8, 0x138
	0x028BCA18 LDP X8, X1, [X0]
	0x028BCA1C MOV X0, X20
	0x028BCA20 BLR X8
	0x028BCA24 LDR X0, [X19 + 0x448]
	0x028BCA28 CBZ X0, 0x28BD31C
	0x028BCA2C MOV X1, X31
	0x028BCA30 MOV V9.16B, V1.16B
	0x028BCA34 BL 0x3DE0EB8
	0x028BCA38 CBZ X0, 0x28BD31C
	0x028BCA3C ADRP X21, 0x1860000
	0x028BCA40 LDR X8, [X0]
	0x028BCA44 LDR X21, [X21 + 0x120]
	0x028BCA48 MOV X20, X0
	0x028BCA4C LDRH W9, [X8 + 0x12E]
	0x028BCA50 LDR X1, [X21]
	0x028BCA54 CBZ X9, 0x28BCA78
	0x028BCA58 LDR X10, [X8 + 0xB0]
	0x028BCA5C ADD X10, X10, 0x8
	0x028BCA60 LDUR X11, [X10 - 0x8]
	0x028BCA64 CMP X11, X1
	0x028BCA68 B.EQ 0x28BCA88
	0x028BCA6C SUBS X9, X9, 0x1
	0x028BCA70 ADD X10, X10, 0x10
	0x028BCA74 B.NE 0x28BCA60
	0x028BCA78 MOVZ W2, 0x2C
	0x028BCA7C MOV X0, X20
	0x028BCA80 BL 0x1C5C788

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+1145]
	005 Move X20, X2
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfEqual {15}
	009 Move X8, [X20+32]
	010 Move X0, X19
	011 Move X8, [X8+192]
	012 Move X2, [X8+88]
	013 Call 0x28BC91C, X0, X1
	014 Move W1, W0
	015 Move X8, [X20+32]
	016 Move X0, X19
	017 Move X8, [X8+192]
	018 Move X2, [X8+96]
	019 Call BaseField`1<Int32>.SetValueWithoutNotify, X0, X1
	020 Move X8, [X20+32]
	021 Move X0, X19
	022 Move X8, [X8+192]
	023 Move X1, [X8+56]
	024 Call 0x28BECBC, X0
	025 Move X8, [X20+32]
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X8, [X8+192]
	030 Move X1, [X8+168]
	031 Move X30, [X31+32]
	032 Call 0x28BF8F0, X0
	033 Return 

Method: UnityEngine.UIElements.SliderDirection get_direction()

Disassembly:
	0x028BCA84 B 0x28BCA98
	0x028BCA88 LDR W9, [X10]

ISIL:
	001 Move W0, [X0+1176]
	002 Return X0

Method: System.Void set_direction(UnityEngine.UIElements.SliderDirection value)

Disassembly:
	0x028BCA8C ADD W9, W9, 0x2C
	0x028BCA90 ADD X8, X8, W9, 0x4, SXTW
	0x028BCA94 ADD X0, X8, 0x138
	0x028BCA98 LDP X8, X1, [X0]
	0x028BCA9C MOV X0, X20
	0x028BCAA0 BLR X8
	0x028BCAA4 LDR X0, [X19 + 0x448]
	0x028BCAA8 CBZ X0, 0x28BD31C
	0x028BCAAC MOV X1, X31
	0x028BCAB0 MOV V10.16B, V0.16B
	0x028BCAB4 BL 0x3DE0EB8
	0x028BCAB8 CBZ X0, 0x28BD31C
	0x028BCABC LDR X8, [X0]
	0x028BCAC0 LDR X1, [X21]
	0x028BCAC4 MOV X20, X0
	0x028BCAC8 LDRH W9, [X8 + 0x12E]
	0x028BCACC CBZ X9, 0x28BCAF0
	0x028BCAD0 LDR X10, [X8 + 0xB0]
	0x028BCAD4 ADD X10, X10, 0x8
	0x028BCAD8 LDUR X11, [X10 - 0x8]
	0x028BCADC CMP X11, X1
	0x028BCAE0 B.EQ 0x28BCB00
	0x028BCAE4 SUBS X9, X9, 0x1
	0x028BCAE8 ADD X10, X10, 0x10
	0x028BCAEC B.NE 0x28BCAD8
	0x028BCAF0 MOVZ W2, 0x13
	0x028BCAF4 MOV X0, X20
	0x028BCAF8 BL 0x1C5C788
	0x028BCAFC B 0x28BCB10
	0x028BCB00 LDR W9, [X10]
	0x028BCB04 ADD W9, W9, 0x13
	0x028BCB08 ADD X8, X8, W9, 0x4, SXTW
	0x028BCB0C ADD X0, X8, 0x138
	0x028BCB10 LDP X8, X1, [X0]
	0x028BCB14 MOV X0, X20
	0x028BCB18 BLR X8
	0x028BCB1C STR S8, [X19 + 0x488]
	0x028BCB20 STR S9, [X19 + 0x48C]
	0x028BCB24 STR S10, [X19 + 0x490]
	0x028BCB28 STR S0, [X19 + 0x494]
	0x028BCB2C LDR X0, [X19 + 0x440]
	0x028BCB30 CBZ X0, 0x28BD31C
	0x028BCB34 LDR W22, [X19 + 0x498]
	0x028BCB38 MOV X1, X31
	0x028BCB3C BL 0x3DE0EB8
	0x028BCB40 CBZ X0, 0x28BD31C
	0x028BCB44 ADRP X21, 0x1860000
	0x028BCB48 LDR X8, [X0]
	0x028BCB4C LDR X21, [X21 + 0x120]
	0x028BCB50 MOV X20, X0
	0x028BCB54 LDRH W9, [X8 + 0x12E]
	0x028BCB58 LDR X1, [X21]
	0x028BCB5C CBZ W22, 0x28BCB94

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move [X0+1176], W1
	006 Move X8, [X2+32]
	007 Move X19, X0
	008 Move X20, X2
	009 Move W21, W1
	010 Move X8, [X8+192]
	011 Move X0, [X8+176]
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X8, [X20+32]
	023 Move X8, [X8+192]
	024 Move X0, [X8+176]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+184]
	032 Compare W21, 0
	033 JumpIfEqual {48}
	034 Move X1, [X8+24]
	035 Move X0, X19
	036 Move X2, X31
	037 Call VisualElement.RemoveFromClassList, X0, X1
	038 Move X8, [X20+32]
	039 Move X8, [X8+192]
	040 Move X0, [X8+176]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Move W8, 32
	048 Move X1, [X8+32]
	049 Move X0, X19
	050 Move X2, X31
	051 Call VisualElement.RemoveFromClassList, X0, X1
	052 Move X8, [X20+32]
	053 Move X8, [X8+192]
	054 Move X0, [X8+176]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move W8, 24
	062 Move X9, [X0+184]
	063 Move X0, X19
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X2, X31
	067 Move X1, [X9]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Call VisualElement.AddToClassList, X0, X1
	071 Return 

Method: System.Boolean get_inverted()

Disassembly:
	0x028BCB60 CBZ W9, 0x28BCB84
	0x028BCB64 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move W0, [X0+1180]
	002 Return X0

Method: System.Void set_inverted(System.Boolean value)

Disassembly:
	0x028BCB68 ADD X10, X10, 0x8
	0x028BCB6C LDUR X11, [X10 - 0x8]
	0x028BCB70 CMP X11, X1
	0x028BCB74 B.EQ 0x28BCBC8
	0x028BCB78 SUBS X9, X9, 0x1
	0x028BCB7C ADD X10, X10, 0x10
	0x028BCB80 B.NE 0x28BCB6C
	0x028BCB84 MOVZ W2, 0x13
	0x028BCB88 MOV X0, X20
	0x028BCB8C BL 0x1C5C788

ISIL:
	001 Move W9, [X0+1180]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Return 
	005 Move [X0+1180], W8
	006 Move X8, [X2+32]
	007 Move X8, [X8+192]
	008 Move X1, [X8+56]
	009 Call 0x28BECBC, X0
	010 Return 

Method: System.Void .ctor(System.String label, TValueType start, TValueType end, UnityEngine.UIElements.SliderDirection direction = 0, System.Single pageSize = 0)

Disassembly:
	0x028BCB90 B 0x28BCBD8
	0x028BCB94 CBZ W9, 0x28BCBB8
	0x028BCB98 LDR X10, [X8 + 0xB0]
	0x028BCB9C ADD X10, X10, 0x8
	0x028BCBA0 LDUR X11, [X10 - 0x8]
	0x028BCBA4 CMP X11, X1
	0x028BCBA8 B.EQ 0x28BCCF0
	0x028BCBAC SUBS X9, X9, 0x1
	0x028BCBB0 ADD X10, X10, 0x10
	0x028BCBB4 B.NE 0x28BCBA0
	0x028BCBB8 MOVZ W2, 0x2C
	0x028BCBBC MOV X0, X20
	0x028BCBC0 BL 0x1C5C788
	0x028BCBC4 B 0x28BCD00
	0x028BCBC8 LDR W9, [X10]
	0x028BCBCC ADD W9, W9, 0x13
	0x028BCBD0 ADD X8, X8, W9, 0x4, SXTW
	0x028BCBD4 ADD X0, X8, 0x138
	0x028BCBD8 LDP X8, X1, [X0]
	0x028BCBDC MOV X0, X20
	0x028BCBE0 BLR X8
	0x028BCBE4 LDR X0, [X19 + 0x448]
	0x028BCBE8 CBZ X0, 0x28BD31C
	0x028BCBEC MOV X1, X31
	0x028BCBF0 MOV V8.16B, V0.16B
	0x028BCBF4 BL 0x3DE0EB8
	0x028BCBF8 CBZ X0, 0x28BD31C
	0x028BCBFC LDR X8, [X0]
	0x028BCC00 LDR X1, [X21]
	0x028BCC04 MOV X20, X0
	0x028BCC08 LDRH W9, [X8 + 0x12E]
	0x028BCC0C CBZ X9, 0x28BCC30
	0x028BCC10 LDR X10, [X8 + 0xB0]
	0x028BCC14 ADD X10, X10, 0x8
	0x028BCC18 LDUR X11, [X10 - 0x8]
	0x028BCC1C CMP X11, X1
	0x028BCC20 B.EQ 0x28BCC40
	0x028BCC24 SUBS X9, X9, 0x1
	0x028BCC28 ADD X10, X10, 0x10
	0x028BCC2C B.NE 0x28BCC18
	0x028BCC30 MOVZ W2, 0x13
	0x028BCC34 MOV X0, X20
	0x028BCC38 BL 0x1C5C788
	0x028BCC3C B 0x28BCC50
	0x028BCC40 LDR W9, [X10]
	0x028BCC44 ADD W9, W9, 0x13
	0x028BCC48 ADD X8, X8, W9, 0x4, SXTW
	0x028BCC4C ADD X0, X8, 0x138
	0x028BCC50 LDP X8, X1, [X0]
	0x028BCC54 MOV X0, X20
	0x028BCC58 BLR X8
	0x028BCC5C LDR X0, [X19 + 0x448]
	0x028BCC60 CBZ X0, 0x28BD31C
	0x028BCC64 MOV X1, X31
	0x028BCC68 MOV V9.16B, V0.16B
	0x028BCC6C BL 0x3DEC1BC
	0x028BCC70 CBZ X0, 0x28BD31C
	0x028BCC74 ADRP X10, 0x1861000
	0x028BCC78 LDR X8, [X0]
	0x028BCC7C LDR X10, [X10 + 0x688]
	0x028BCC80 MOV X20, X0
	0x028BCC84 LDRH W9, [X8 + 0x12E]
	0x028BCC88 LDR X1, [X10]
	0x028BCC8C CBZ X9, 0x28BCCB0
	0x028BCC90 LDR X10, [X8 + 0xB0]
	0x028BCC94 ADD X10, X10, 0x8
	0x028BCC98 LDUR X11, [X10 - 0x8]
	0x028BCC9C CMP X11, X1
	0x028BCCA0 B.EQ 0x28BCCC0
	0x028BCCA4 SUBS X9, X9, 0x1
	0x028BCCA8 ADD X10, X10, 0x10
	0x028BCCAC B.NE 0x28BCC98
	0x028BCCB0 MOV X0, X20
	0x028BCCB4 MOV W2, W31
	0x028BCCB8 BL 0x1C5C788
	0x028BCCBC B 0x28BCCCC
	0x028BCCC0 LDRSW X9, [X10]
	0x028BCCC4 ADD X8, X8, X9, 0x4, LSL
	0x028BCCC8 ADD X0, X8, 0x138
	0x028BCCCC LDP X8, X1, [X0]
	0x028BCCD0 MOV X0, X20
	0x028BCCD4 BLR X8
	0x028BCCD8 LDR X8, [X19 + 0x480]
	0x028BCCDC CBZ X8, 0x28BD31C
	0x028BCCE0 LDR X9, [X19]
	0x028BCCE4 LDR V3, [X8 + 0x58]
	0x028BCCE8 MOV V2.16B, V1.16B
	0x028BCCEC B 0x28BCE14
	0x028BCCF0 LDR W9, [X10]
	0x028BCCF4 ADD W9, W9, 0x2C
	0x028BCCF8 ADD X8, X8, W9, 0x4, SXTW
	0x028BCCFC ADD X0, X8, 0x138
	0x028BCD00 LDP X8, X1, [X0]
	0x028BCD04 MOV X0, X20
	0x028BCD08 BLR X8
	0x028BCD0C LDR X0, [X19 + 0x448]
	0x028BCD10 CBZ X0, 0x28BD31C
	0x028BCD14 MOV X1, X31
	0x028BCD18 MOV V8.16B, V0.16B
	0x028BCD1C BL 0x3DE0EB8
	0x028BCD20 CBZ X0, 0x28BD31C
	0x028BCD24 LDR X8, [X0]
	0x028BCD28 LDR X1, [X21]
	0x028BCD2C MOV X20, X0
	0x028BCD30 LDRH W9, [X8 + 0x12E]
	0x028BCD34 CBZ X9, 0x28BCD58
	0x028BCD38 LDR X10, [X8 + 0xB0]
	0x028BCD3C ADD X10, X10, 0x8
	0x028BCD40 LDUR X11, [X10 - 0x8]
	0x028BCD44 CMP X11, X1
	0x028BCD48 B.EQ 0x28BCD68
	0x028BCD4C SUBS X9, X9, 0x1
	0x028BCD50 ADD X10, X10, 0x10
	0x028BCD54 B.NE 0x28BCD40
	0x028BCD58 MOVZ W2, 0x2C
	0x028BCD5C MOV X0, X20
	0x028BCD60 BL 0x1C5C788
	0x028BCD64 B 0x28BCD78
	0x028BCD68 LDR W9, [X10]
	0x028BCD6C ADD W9, W9, 0x2C
	0x028BCD70 ADD X8, X8, W9, 0x4, SXTW
	0x028BCD74 ADD X0, X8, 0x138
	0x028BCD78 LDP X8, X1, [X0]
	0x028BCD7C MOV X0, X20
	0x028BCD80 BLR X8
	0x028BCD84 LDR X0, [X19 + 0x448]
	0x028BCD88 CBZ X0, 0x28BD31C
	0x028BCD8C MOV X1, X31
	0x028BCD90 MOV V9.16B, V0.16B
	0x028BCD94 BL 0x3DEC1BC
	0x028BCD98 CBZ X0, 0x28BD31C
	0x028BCD9C ADRP X10, 0x1861000
	0x028BCDA0 LDR X8, [X0]
	0x028BCDA4 LDR X10, [X10 + 0x688]
	0x028BCDA8 MOV X20, X0
	0x028BCDAC LDRH W9, [X8 + 0x12E]
	0x028BCDB0 LDR X1, [X10]
	0x028BCDB4 CBZ X9, 0x28BCDD8
	0x028BCDB8 LDR X10, [X8 + 0xB0]
	0x028BCDBC ADD X10, X10, 0x8
	0x028BCDC0 LDUR X11, [X10 - 0x8]
	0x028BCDC4 CMP X11, X1
	0x028BCDC8 B.EQ 0x28BCDE8
	0x028BCDCC SUBS X9, X9, 0x1
	0x028BCDD0 ADD X10, X10, 0x10
	0x028BCDD4 B.NE 0x28BCDC0
	0x028BCDD8 MOV X0, X20
	0x028BCDDC MOV W2, W31
	0x028BCDE0 BL 0x1C5C788
	0x028BCDE4 B 0x28BCDF4
	0x028BCDE8 LDRSW X9, [X10]
	0x028BCDEC ADD X8, X8, X9, 0x4, LSL
	0x028BCDF0 ADD X0, X8, 0x138
	0x028BCDF4 LDP X8, X1, [X0]
	0x028BCDF8 MOV X0, X20
	0x028BCDFC BLR X8
	0x028BCE00 LDR X8, [X19 + 0x480]
	0x028BCE04 CBZ X8, 0x28BD31C
	0x028BCE08 LDR X9, [X19]
	0x028BCE0C LDR V3, [X8 + 0x54]
	0x028BCE10 MOV V2.16B, V0.16B
	0x028BCE14 LDR X2, [X9 + 0x978]
	0x028BCE18 LDR X1, [X9 + 0x980]
	0x028BCE1C MOV X0, X19
	0x028BCE20 MOV V0.16B, V8.16B
	0x028BCE24 MOV V1.16B, V9.16B
	0x028BCE28 LDP X20, X19, [X31 + 0x50]
	0x028BCE2C LDP X22, X21, [X31 + 0x40]
	0x028BCE30 LDP X30, X23, [X31 + 0x30]
	0x028BCE34 LDP D9, D8, [X31 + 0x20]
	0x028BCE38 LDP D11, D10, [X31 + 0x10]
	0x028BCE3C LDP D13, D12, [X31], #0x60
	0x028BCE40 BR X2
	0x028BCE44 LDR W9, [X10]
	0x028BCE48 ADD W9, W9, 0x13
	0x028BCE4C ADD X8, X8, W9, 0x4, SXTW
	0x028BCE50 ADD X0, X8, 0x138
	0x028BCE54 LDP X8, X1, [X0]
	0x028BCE58 MOV X0, X21
	0x028BCE5C BLR X8
	0x028BCE60 LDR X0, [X19 + 0x448]
	0x028BCE64 CBZ X0, 0x28BD31C
	0x028BCE68 MOV X1, X31
	0x028BCE6C MOV V8.16B, V0.16B
	0x028BCE70 BL 0x3DE0EB8
	0x028BCE74 CBZ X0, 0x28BD31C
	0x028BCE78 LDR X8, [X0]
	0x028BCE7C LDR X1, [X22]
	0x028BCE80 MOV X21, X0
	0x028BCE84 LDRH W9, [X8 + 0x12E]
	0x028BCE88 CBZ X9, 0x28BCEAC
	0x028BCE8C LDR X10, [X8 + 0xB0]
	0x028BCE90 ADD X10, X10, 0x8
	0x028BCE94 LDUR X11, [X10 - 0x8]
	0x028BCE98 CMP X11, X1
	0x028BCE9C B.EQ 0x28BCEBC
	0x028BCEA0 SUBS X9, X9, 0x1
	0x028BCEA4 ADD X10, X10, 0x10
	0x028BCEA8 B.NE 0x28BCE94
	0x028BCEAC MOVZ W2, 0x13
	0x028BCEB0 MOV X0, X21
	0x028BCEB4 BL 0x1C5C788
	0x028BCEB8 B 0x28BCECC
	0x028BCEBC LDR W9, [X10]
	0x028BCEC0 ADD W9, W9, 0x13
	0x028BCEC4 ADD X8, X8, W9, 0x4, SXTW
	0x028BCEC8 ADD X0, X8, 0x138
	0x028BCECC LDP X8, X1, [X0]
	0x028BCED0 MOV X0, X21
	0x028BCED4 BLR X8
	0x028BCED8 LDR X8, [X19 + 0x480]
	0x028BCEDC CBZ X8, 0x28BD31C
	0x028BCEE0 LDR X0, [X19 + 0x448]
	0x028BCEE4 CBZ X0, 0x28BD31C
	0x028BCEE8 LDR V11, [X8 + 0x94]
	0x028BCEEC MOV X1, X31
	0x028BCEF0 MOV V9.16B, V0.16B
	0x028BCEF4 BL 0x3DEC1BC
	0x028BCEF8 CBZ X0, 0x28BD31C
	0x028BCEFC ADRP X10, 0x1861000
	0x028BCF00 LDR X8, [X0]
	0x028BCF04 LDR X10, [X10 + 0x688]
	0x028BCF08 FMOV S0, -0.5
	0x028BCF0C FMUL S0, S9, S0
	0x028BCF10 LDRH W9, [X8 + 0x12E]
	0x028BCF14 LDR X1, [X10]
	0x028BCF18 MOV X21, X0
	0x028BCF1C FSUB S10, S8, S9
	0x028BCF20 FADD S12, S11, S0
	0x028BCF24 CBZ X9, 0x28BCF48
	0x028BCF28 LDR X10, [X8 + 0xB0]
	0x028BCF2C ADD X10, X10, 0x8
	0x028BCF30 LDUR X11, [X10 - 0x8]
	0x028BCF34 CMP X11, X1
	0x028BCF38 B.EQ 0x28BCF58
	0x028BCF3C SUBS X9, X9, 0x1
	0x028BCF40 ADD X10, X10, 0x10
	0x028BCF44 B.NE 0x28BCF30
	0x028BCF48 MOV X0, X21
	0x028BCF4C MOV W2, W31
	0x028BCF50 BL 0x1C5C788
	0x028BCF54 B 0x28BCF64
	0x028BCF58 LDRSW X9, [X10]
	0x028BCF5C ADD X8, X8, X9, 0x4, LSL
	0x028BCF60 ADD X0, X8, 0x138
	0x028BCF64 LDP X8, X1, [X0]
	0x028BCF68 MOV X0, X21
	0x028BCF6C BLR X8
	0x028BCF70 FCMP S12, S10
	0x028BCF74 MOV V11.16B, V0.16B
	0x028BCF78 FCSEL S0, S12, S10, MI
	0x028BCF7C FMOV S1, W31
	0x028BCF80 FMAX S10, S0, S1
	0x028BCF84 MOV V12.16B, V10.16B
	0x028BCF88 B 0x28BD0D0
	0x028BCF8C LDR W9, [X10]
	0x028BCF90 ADD W9, W9, 0x2C
	0x028BCF94 ADD X8, X8, W9, 0x4, SXTW
	0x028BCF98 ADD X0, X8, 0x138
	0x028BCF9C LDP X8, X1, [X0]
	0x028BCFA0 MOV X0, X21
	0x028BCFA4 BLR X8
	0x028BCFA8 LDR X0, [X19 + 0x448]
	0x028BCFAC CBZ X0, 0x28BD31C
	0x028BCFB0 MOV X1, X31
	0x028BCFB4 MOV V8.16B, V0.16B
	0x028BCFB8 BL 0x3DE0EB8
	0x028BCFBC CBZ X0, 0x28BD31C
	0x028BCFC0 LDR X8, [X0]
	0x028BCFC4 LDR X1, [X22]
	0x028BCFC8 MOV X21, X0
	0x028BCFCC LDRH W9, [X8 + 0x12E]
	0x028BCFD0 CBZ X9, 0x28BCFF4
	0x028BCFD4 LDR X10, [X8 + 0xB0]
	0x028BCFD8 ADD X10, X10, 0x8
	0x028BCFDC LDUR X11, [X10 - 0x8]
	0x028BCFE0 CMP X11, X1
	0x028BCFE4 B.EQ 0x28BD004
	0x028BCFE8 SUBS X9, X9, 0x1
	0x028BCFEC ADD X10, X10, 0x10
	0x028BCFF0 B.NE 0x28BCFDC
	0x028BCFF4 MOVZ W2, 0x2C
	0x028BCFF8 MOV X0, X21
	0x028BCFFC BL 0x1C5C788
	0x028BD000 B 0x28BD014
	0x028BD004 LDR W9, [X10]
	0x028BD008 ADD W9, W9, 0x2C
	0x028BD00C ADD X8, X8, W9, 0x4, SXTW
	0x028BD010 ADD X0, X8, 0x138
	0x028BD014 LDP X8, X1, [X0]
	0x028BD018 MOV X0, X21
	0x028BD01C BLR X8
	0x028BD020 LDR X8, [X19 + 0x480]
	0x028BD024 CBZ X8, 0x28BD31C
	0x028BD028 LDR V1, [X8 + 0x90]
	0x028BD02C MOV V9.16B, V0.16B
	0x028BD030 FMOV S2, -0.5
	0x028BD034 LDR X0, [X19 + 0x448]
	0x028BD038 FMUL S2, S9, S2
	0x028BD03C FSUB S0, S8, S0
	0x028BD040 FADD S1, S1, S2
	0x028BD044 FCMP S1, S0
	0x028BD048 FCSEL S10, S1, S0, MI
	0x028BD04C CBZ X0, 0x28BD31C
	0x028BD050 MOV X1, X31
	0x028BD054 BL 0x3DEC1BC
	0x028BD058 CBZ X0, 0x28BD31C
	0x028BD05C ADRP X10, 0x1860000
	0x028BD060 LDR X8, [X0]
	0x028BD064 LDR X10, [X10 + 0x688]
	0x028BD068 MOV X21, X0
	0x028BD06C FMOV S11, W31
	0x028BD070 LDRH W9, [X8 + 0x12E]
	0x028BD074 LDR X1, [X10]
	0x028BD078 CBZ X9, 0x28BD09C
	0x028BD07C LDR X10, [X8 + 0xB0]
	0x028BD080 ADD X10, X10, 0x8
	0x028BD084 LDUR X11, [X10 - 0x8]
	0x028BD088 CMP X11, X1
	0x028BD08C B.EQ 0x28BD0AC
	0x028BD090 SUBS X9, X9, 0x1
	0x028BD094 ADD X10, X10, 0x10
	0x028BD098 B.NE 0x28BD084
	0x028BD09C MOV X0, X21
	0x028BD0A0 MOV W2, W31
	0x028BD0A4 BL 0x1C5C788
	0x028BD0A8 B 0x28BD0B8
	0x028BD0AC LDRSW X9, [X10]
	0x028BD0B0 ADD X8, X8, X9, 0x4, LSL
	0x028BD0B4 ADD X0, X8, 0x138
	0x028BD0B8 LDP X8, X1, [X0]
	0x028BD0BC MOV X0, X21
	0x028BD0C0 FMAX S10, S10, S11
	0x028BD0C4 BLR X8
	0x028BD0C8 MOV V12.16B, V1.16B
	0x028BD0CC MOV V11.16B, V10.16B
	0x028BD0D0 LDR X0, [X19 + 0x448]
	0x028BD0D4 CBZ X0, 0x28BD31C
	0x028BD0D8 MOV X1, X31
	0x028BD0DC BL 0x3DEC1BC
	0x028BD0E0 CBZ X0, 0x28BD31C
	0x028BD0E4 ADRP X23, 0x1860000
	0x028BD0E8 LDR X8, [X0]
	0x028BD0EC LDR X23, [X23 + 0x688]
	0x028BD0F0 MOV X21, X0
	0x028BD0F4 LDRH W9, [X8 + 0x12E]
	0x028BD0F8 LDR X1, [X23]
	0x028BD0FC CBZ X9, 0x28BD120
	0x028BD100 LDR X10, [X8 + 0xB0]
	0x028BD104 ADD X10, X10, 0x8
	0x028BD108 LDUR X11, [X10 - 0x8]
	0x028BD10C CMP X11, X1
	0x028BD110 B.EQ 0x28BD130
	0x028BD114 SUBS X9, X9, 0x1
	0x028BD118 ADD X10, X10, 0x10
	0x028BD11C B.NE 0x28BD108
	0x028BD120 MOVZ W2, 0x1
	0x028BD124 MOV X0, X21
	0x028BD128 BL 0x1C5C788
	0x028BD12C B 0x28BD140
	0x028BD130 LDR W9, [X10]
	0x028BD134 ADD W9, W9, 0x1
	0x028BD138 ADD X8, X8, W9, 0x4, SXTW
	0x028BD13C ADD X0, X8, 0x138
	0x028BD140 LDP X8, X1, [X0]
	0x028BD144 FMOV S2, W31
	0x028BD148 MOV X0, X21
	0x028BD14C MOV V0.16B, V11.16B
	0x028BD150 MOV V1.16B, V12.16B
	0x028BD154 BLR X8
	0x028BD158 LDR X0, [X19 + 0x458]
	0x028BD15C CBZ X0, 0x28BD31C
	0x028BD160 MOV X1, X31
	0x028BD164 BL 0x3DEC1BC
	0x028BD168 CBZ X0, 0x28BD31C
	0x028BD16C LDR X8, [X0]
	0x028BD170 LDR X1, [X23]
	0x028BD174 MOV X21, X0
	0x028BD178 LDRH W9, [X8 + 0x12E]
	0x028BD17C CBZ X9, 0x28BD1A0
	0x028BD180 LDR X10, [X8 + 0xB0]
	0x028BD184 ADD X10, X10, 0x8
	0x028BD188 LDUR X11, [X10 - 0x8]
	0x028BD18C CMP X11, X1
	0x028BD190 B.EQ 0x28BD1B0
	0x028BD194 SUBS X9, X9, 0x1
	0x028BD198 ADD X10, X10, 0x10
	0x028BD19C B.NE 0x28BD188
	0x028BD1A0 MOVZ W2, 0x1
	0x028BD1A4 MOV X0, X21
	0x028BD1A8 BL 0x1C5C788
	0x028BD1AC B 0x28BD1C0
	0x028BD1B0 LDR W9, [X10]
	0x028BD1B4 ADD W9, W9, 0x1
	0x028BD1B8 ADD X8, X8, W9, 0x4, SXTW
	0x028BD1BC ADD X0, X8, 0x138
	0x028BD1C0 LDP X8, X1, [X0]
	0x028BD1C4 FMOV S2, W31
	0x028BD1C8 MOV X0, X21
	0x028BD1CC MOV V0.16B, V11.16B
	0x028BD1D0 MOV V1.16B, V12.16B
	0x028BD1D4 BLR X8
	0x028BD1D8 LDR X0, [X19 + 0x448]
	0x028BD1DC CBZ X0, 0x28BD31C
	0x028BD1E0 MOV X1, X31
	0x028BD1E4 BL 0x3DE0EB8
	0x028BD1E8 CBZ X0, 0x28BD31C
	0x028BD1EC LDR X8, [X0]
	0x028BD1F0 LDR X1, [X22]
	0x028BD1F4 MOV X21, X0
	0x028BD1F8 LDRH W9, [X8 + 0x12E]
	0x028BD1FC CBZ X9, 0x28BD220
	0x028BD200 LDR X10, [X8 + 0xB0]
	0x028BD204 ADD X10, X10, 0x8
	0x028BD208 LDUR X11, [X10 - 0x8]
	0x028BD20C CMP X11, X1
	0x028BD210 B.EQ 0x28BD230
	0x028BD214 SUBS X9, X9, 0x1
	0x028BD218 ADD X10, X10, 0x10
	0x028BD21C B.NE 0x28BD208
	0x028BD220 MOVZ W2, 0x2C
	0x028BD224 MOV X0, X21
	0x028BD228 BL 0x1C5C788
	0x028BD22C B 0x28BD240
	0x028BD230 LDR W9, [X10]
	0x028BD234 ADD W9, W9, 0x2C
	0x028BD238 ADD X8, X8, W9, 0x4, SXTW
	0x028BD23C ADD X0, X8, 0x138
	0x028BD240 LDP X8, X1, [X0]
	0x028BD244 MOV X0, X21
	0x028BD248 BLR X8
	0x028BD24C LDR X0, [X19 + 0x448]
	0x028BD250 CBZ X0, 0x28BD31C
	0x028BD254 MOV X1, X31
	0x028BD258 MOV V13.16B, V0.16B
	0x028BD25C BL 0x3DE0EB8
	0x028BD260 CBZ X0, 0x28BD31C
	0x028BD264 LDR X8, [X0]
	0x028BD268 LDR X1, [X22]
	0x028BD26C MOV X21, X0
	0x028BD270 LDRH W9, [X8 + 0x12E]
	0x028BD274 CBZ X9, 0x28BD298

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x1B1F000
	011 Move W8, [X25+3260]
	012 Move X19, X5
	013 Move V8, V0
	014 Move W23, W4
	015 Move W21, W3
	016 Move W22, W2
	017 Move X24, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {61}
	023 Move X0, 0x1839000
	024 Move X0, [X0+3696]
	025 Call 0x1C17CF4
	026 Move X0, 0x1862000
	027 Move X0, [X0+1624]
	028 Call 0x1C17CF4
	029 Move X0, 0x1863000
	030 Move X0, [X0+240]
	031 Call 0x1C17CF4
	032 Move X0, 0x1863000
	033 Move X0, [X0+248]
	034 Call 0x1C17CF4
	035 Move X0, 0x1862000
	036 Move X0, [X0+1632]
	037 Call 0x1C17CF4
	038 Move X0, 0x1863000
	039 Move X0, [X0+256]
	040 Call 0x1C17CF4
	041 Move X0, 0x1863000
	042 Move X0, [X0+264]
	043 Call 0x1C17CF4
	044 Move X0, 0x1860000
	045 Move X0, [X0+2200]
	046 Call 0x1C17CF4
	047 Move X0, 0x1863000
	048 Move X0, [X0+272]
	049 Call 0x1C17CF4
	050 Move X0, 0x1863000
	051 Move X0, [X0+280]
	052 Call 0x1C17CF4
	053 Move X0, 0x1863000
	054 Move X0, [X0+288]
	055 Call 0x1C17CF4
	056 Move X0, 0x1863000
	057 Move X0, [X0+296]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X25+3260], W8
	061 Move W8, 256
	062 NotImplemented "Instruction STRH not yet implemented."
	063 Move [X20+1180], W31
	064 Add X19, X19, 32
	065 Move X8, [X19]
	066 Move X8, [X8+192]
	067 Move X0, [X8+184]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X8, [X19]
	079 Move X0, X20
	080 Move X1, X24
	081 Move X2, X31
	082 Move X8, [X8+192]
	083 Move X3, [X8+192]
	084 Call BaseField`1<Int32>..ctor, X0, X1, X2
	085 Move X8, [X19]
	086 Move X8, [X8+192]
	087 Move X0, [X8+176]
	088 Move W8, [X0+309]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X8, [X19]
	099 Move X8, [X8+192]
	100 Move X0, [X8+176]
	101 Move W8, [X0+309]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {107}
	106 Call 0x1C5D684
	107 Move X8, [X0+184]
	108 Move X0, X20
	109 Move X2, X31
	110 Move X1, [X8]
	111 Call VisualElement.AddToClassList, X0, X1
	112 Move X8, [X19]
	113 Move X24, [X20+1024]
	114 Move X8, [X8+192]
	115 Move X0, [X8+176]
	116 Move W8, [X0+309]
	117 Move TEMP, X8
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {122}
	121 Call 0x1C5D684
	122 Compare X24, 0
	123 JumpIfEqual {508}
	124 Move X8, [X0+184]
	125 Move X0, X24
	126 Move X2, X31
	127 Move X1, [X8+8]
	128 Call VisualElement.AddToClassList, X0, X1
	129 Move X8, [X19]
	130 Move X0, X20
	131 Move X8, [X8+192]
	132 Move X1, [X8+208]
	133 Call BaseField`1<Int32>.get_visualInput, X0
	134 Move X8, [X19]
	135 Move X24, X0
	136 Move X8, [X8+192]
	137 Move X8, [X8+176]
	138 Move W9, [X8+309]
	139 Move TEMP, X9
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {146}
	143 Move X0, X8
	144 Call 0x1C5D684
	145 Move X8, X0
	146 Compare X24, 0
	147 JumpIfEqual {508}
	148 Move X8, [X8+184]
	149 Move X25, 0x1860000
	150 Move X0, X24
	151 Move X2, X31
	152 Move X1, [X8+16]
	153 Move X25, [X25+2200]
	154 Call VisualElement.AddToClassList, X0, X1
	155 Move X8, [X19]
	156 Move X0, X20
	157 Move W1, W23
	158 Move X8, [X8+192]
	159 Move X2, [X8+216]
	160 Call 0x28BCA8C, X0, X1
	161 Move X8, [X20]
	162 Move X0, X20
	163 Move V0, V8
	164 Move X9, [X8+2296]
	165 Move X1, [X8+2304]
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move X8, [X19]
	168 Move X0, X20
	169 Move W1, W22
	170 Move X8, [X8+192]
	171 Move X2, [X8+232]
	172 Call 0x28BC69C, X0, X1
	173 Move X8, [X19]
	174 Move X0, X20
	175 Move W1, W21
	176 Move X8, [X8+192]
	177 Move X2, [X8+240]
	178 Call 0x28BC738, X0, X1
	179 Move W1, 1
	180 Move X0, X20
	181 Move X2, X31
	182 Call VisualElement.set_pickingMode, X0, X1
	183 Move X0, [X25]
	184 Call 0x1C17F10
	185 Move X1, X31
	186 Move X21, X0
	187 Call VisualElement..ctor, X0
	188 Compare X21, 0
	189 JumpIfEqual {508}
	190 Move X8, 0x1863000
	191 Move X8, [X8+288]
	192 Move X23, 0x1862000
	193 Move X0, X21
	194 Move X2, X31
	195 Move X1, [X8]
	196 Move X23, [X23+1632]
	197 Call VisualElement.set_name, X0, X1
	198 Move X8, [X19]
	199 Move X8, [X8+192]
	200 Move [X20+1088], X21
	201 Move X0, [X8+176]
	202 Move W8, [X0+309]
	203 Move TEMP, X8
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfEqual {208}
	207 Call 0x1C5D684
	208 Move X8, [X0+184]
	209 Move X0, X21
	210 Move X2, X31
	211 Move X1, [X8+40]
	212 Call VisualElement.AddToClassList, X0, X1
	213 Move X0, [X23]
	214 Move X21, [X20+1088]
	215 Call 0x1C17F10
	216 Move X8, [X19]
	217 Move X1, X20
	218 Move X3, X31
	219 Move X22, X0
	220 Move X8, [X8+192]
	221 Move X2, [X8+264]
	222 Call 0x2D0F824, X0, X1, X2
	223 Compare X21, 0
	224 JumpIfEqual {508}
	225 Move X24, 0x1862000
	226 Move X24, [X24+1624]
	227 Move X0, X21
	228 Move X1, X22
	229 Move W2, W31
	230 Move X3, [X24]
	231 Call 0x21A2534, X0, X1, X2
	232 Move X8, [X19]
	233 Move X0, X20
	234 Move X8, [X8+192]
	235 Move X1, [X8+208]
	236 Call BaseField`1<Int32>.get_visualInput, X0
	237 Compare X0, 0
	238 JumpIfEqual {508}
	239 Move X1, [X20+1088]
	240 Move X2, X31
	241 Call VisualElement.Add, X0, X1
	242 Move X0, [X25]
	243 Call 0x1C17F10
	244 Move X1, X31
	245 Move X21, X0
	246 Call VisualElement..ctor, X0
	247 Compare X21, 0
	248 JumpIfEqual {508}
	249 Move X8, 0x1863000
	250 Move X8, [X8+296]
	251 Move X0, X21
	252 Move X2, X31
	253 Move X1, [X8]
	254 Call VisualElement.set_name, X0, X1
	255 Move W1, 8
	256 Move X0, X21
	257 Move X2, X31
	258 Call VisualElement.set_usageHints, X0, X1
	259 Move X8, [X19]
	260 Move X8, [X8+192]
	261 Move [X20+1104], X21
	262 Move X0, [X8+176]
	263 Move W8, [X0+309]
	264 Move TEMP, X8
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfEqual {269}
	268 Call 0x1C5D684
	269 Move X8, [X0+184]
	270 Move X0, X21
	271 Move X2, X31
	272 Move X1, [X8+48]
	273 Call VisualElement.AddToClassList, X0, X1
	274 Move X0, [X20+1088]
	275 Compare X0, 0
	276 JumpIfEqual {508}
	277 Move X1, [X20+1104]
	278 Move X2, X31
	279 Call VisualElement.Add, X0, X1
	280 Move X0, [X25]
	281 Call 0x1C17F10
	282 Move X1, X31
	283 Move X21, X0
	284 Call VisualElement..ctor, X0
	285 Compare X21, 0
	286 JumpIfEqual {508}
	287 Move X8, 0x1863000
	288 Move X8, [X8+272]
	289 Move X0, X21
	290 Move X2, X31
	291 Move X1, [X8]
	292 Call VisualElement.set_name, X0, X1
	293 Move X8, [X19]
	294 Move X8, [X8+192]
	295 Move [X20+1112], X21
	296 Move X0, [X8+176]
	297 Move W8, [X0+309]
	298 Move TEMP, X8
	299 And TEMP, TEMP, 1
	300 Compare TEMP, 1
	301 JumpIfEqual {303}
	302 Call 0x1C5D684
	303 Move X8, [X0+184]
	304 Move X0, X21
	305 Move X2, X31
	306 Move X1, [X8+64]
	307 Call VisualElement.AddToClassList, X0, X1
	308 Move X0, [X20+1088]
	309 Compare X0, 0
	310 JumpIfEqual {508}
	311 Move X1, [X20+1112]
	312 Move X2, X31
	313 Call VisualElement.Add, X0, X1
	314 Move X0, [X25]
	315 Call 0x1C17F10
	316 Move X1, X31
	317 Move X21, X0
	318 Call VisualElement..ctor, X0
	319 Compare X21, 0
	320 JumpIfEqual {508}
	321 Move X8, 0x1863000
	322 Move X8, [X8+280]
	323 Move X0, X21
	324 Move X2, X31
	325 Move X1, [X8]
	326 Call VisualElement.set_name, X0, X1
	327 Move W1, 1
	328 Move X0, X21
	329 Move X2, X31
	330 Call VisualElement.set_usageHints, X0, X1
	331 Move [X20+1096], X21
	332 Move X0, [X23]
	333 Call 0x1C17F10
	334 Move X8, [X19]
	335 Move X1, X20
	336 Move X3, X31
	337 Move X22, X0
	338 Move X8, [X8+192]
	339 Move X2, [X8+264]
	340 Call 0x2D0F824, X0, X1, X2
	341 Move X3, [X24]
	342 Move X0, X21
	343 Move X1, X22
	344 Move W2, W31
	345 Call 0x21A2534, X0, X1, X2
	346 Move X8, [X19]
	347 Move X21, [X20+1096]
	348 Move X8, [X8+192]
	349 Move X0, [X8+176]
	350 Move W8, [X0+309]
	351 Move TEMP, X8
	352 And TEMP, TEMP, 1
	353 Compare TEMP, 1
	354 JumpIfEqual {356}
	355 Call 0x1C5D684
	356 Compare X21, 0
	357 JumpIfEqual {508}
	358 Move X8, [X0+184]
	359 Move X0, X21
	360 Move X2, X31
	361 Move X1, [X8+56]
	362 Call VisualElement.AddToClassList, X0, X1
	363 Move X0, [X20+1088]
	364 Compare X0, 0
	365 JumpIfEqual {508}
	366 Move X1, [X20+1096]
	367 Move X22, 0x1838000
	368 Move X22, [X22+3696]
	369 Move X2, X31
	370 Call VisualElement.Add, X0, X1
	371 Move X0, [X22]
	372 Call 0x1C17F10
	373 Move X8, [X19]
	374 Move X1, X20
	375 Move X3, X31
	376 Move X21, X0
	377 Move X8, [X8+192]
	378 Move X2, [X8+320]
	379 Call Action..ctor, X0, X1, X2
	380 Move X0, [X22]
	381 Call 0x1C17F10
	382 Move X8, [X19]
	383 Move X1, X20
	384 Move X3, X31
	385 Move X22, X0
	386 Move X8, [X8+192]
	387 Move X2, [X8+328]
	388 Call Action..ctor, X0, X1, X2
	389 Move X8, [X19]
	390 Move X8, [X8+192]
	391 Move X0, [X8+112]
	392 Move W8, [X0+309]
	393 Move TEMP, X8
	394 And TEMP, TEMP, 1
	395 Compare TEMP, 1
	396 JumpIfEqual {398}
	397 Call 0x1C5D684
	398 Call 0x1C17F10
	399 Move X8, [X19]
	400 Move X1, X20
	401 Move X2, X21
	402 Move X3, X22
	403 Move X8, [X8+192]
	404 Move X23, X0
	405 Move X4, [X8+336]
	406 Call 0x28F82F4, X0, X1, X2, X3
	407 Move X0, [X20+1088]
	408 Move [X20+1152], X23
	409 Compare X0, 0
	410 JumpIfEqual {508}
	411 Move X21, 0x1862000
	412 Move X22, 0x1862000
	413 Move X23, 0x1862000
	414 Move X24, 0x1862000
	415 Move X21, [X21+256]
	416 Move X22, [X22+240]
	417 Move X23, [X23+264]
	418 Move X24, [X24+248]
	419 Move W1, W31
	420 Move X2, X31
	421 Call VisualElement.set_pickingMode, X0, X1
	422 Move X0, [X20+1088]
	423 Move X1, [X20+1152]
	424 Move X2, X31
	425 Call VisualElementExtensions.AddManipulator, X0, X1
	426 Move X0, [X21]
	427 Call 0x1C17F10
	428 Move X8, [X19]
	429 Move X1, X20
	430 Move X3, X31
	431 Move X21, X0
	432 Move X8, [X8+192]
	433 Move X2, [X8+360]
	434 Call 0x2D0F824, X0, X1, X2
	435 Move X3, [X22]
	436 Move X0, X20
	437 Move X1, X21
	438 Move W2, W31
	439 Call 0x21A2534, X0, X1, X2
	440 Move X0, [X23]
	441 Call 0x1C17F10
	442 Move X8, [X19]
	443 Move X1, X20
	444 Move X3, X31
	445 Move X21, X0
	446 Move X8, [X8+192]
	447 Move X2, [X8+368]
	448 Call 0x2D0F824, X0, X1, X2
	449 Move X3, [X24]
	450 Move X0, X20
	451 Move X1, X21
	452 Move W2, W31
	453 Call 0x21A2534, X0, X1, X2
	454 Move X8, [X19]
	455 Move X0, X20
	456 Move X8, [X8+192]
	457 Move X1, [X8+104]
	458 Call 0x28BF470, X0
	459 Move X8, [X19]
	460 Move X8, [X8+192]
	461 Move X0, [X8+376]
	462 Move W8, [X0+309]
	463 Move TEMP, X8
	464 And TEMP, TEMP, 1
	465 Compare TEMP, 1
	466 JumpIfEqual {468}
	467 Call 0x1C5D684
	468 Call 0x1C17F10
	469 Move X8, [X19]
	470 Move X1, X20
	471 Move X21, X0
	472 Move X8, [X8+192]
	473 Move X2, [X8+384]
	474 Call FieldMouseDragger`1<Int32>..ctor, X0, X1
	475 Compare X21, 0
	476 JumpIfEqual {508}
	477 Move X1, [X20+1024]
	478 Move X0, X21
	479 Move X2, X31
	480 Call BaseFieldMouseDragger.SetDragZone, X0, X1
	481 Move X8, [X19]
	482 Move X19, [X20+1024]
	483 Move X8, [X8+192]
	484 Move X0, [X8+184]
	485 Move W8, [X0+309]
	486 Move TEMP, X8
	487 And TEMP, TEMP, 1
	488 Compare TEMP, 1
	489 JumpIfEqual {491}
	490 Call 0x1C5D684
	491 Compare X19, 0
	492 JumpIfEqual {508}
	493 Move X8, [X0+184]
	494 Move X0, X19
	495 Move X20, [X31+64]
	496 Move X19, [X31+72]
	497 Move X22, [X31+48]
	498 Move X21, [X31+56]
	499 Move X1, [X8+32]
	500 Move X24, [X31+32]
	501 Move X23, [X31+40]
	502 Move X30, [X31+16]
	503 Move X25, [X31+24]
	504 Move X2, X31
	505 Move V8, [X31+80]
	506 Call VisualElement.AddToClassList, X0, X1
	507 Return 
	508 Call 0x1C17F20

Method: System.Single GetClosestPowerOfTen(System.Single positiveNumber)

Disassembly:
	0x028BD278 LDR X10, [X8 + 0xB0]
	0x028BD27C ADD X10, X10, 0x8
	0x028BD280 LDUR X11, [X10 - 0x8]
	0x028BD284 CMP X11, X1
	0x028BD288 B.EQ 0x28BD2A8
	0x028BD28C SUBS X9, X9, 0x1
	0x028BD290 ADD X10, X10, 0x10
	0x028BD294 B.NE 0x28BD280
	0x028BD298 MOVZ W2, 0x13
	0x028BD29C MOV X0, X21
	0x028BD2A0 BL 0x1C5C788
	0x028BD2A4 B 0x28BD2B8
	0x028BD2A8 LDR W9, [X10]
	0x028BD2AC ADD W9, W9, 0x13
	0x028BD2B0 ADD X8, X8, W9, 0x4, SXTW
	0x028BD2B4 ADD X0, X8, 0x138
	0x028BD2B8 LDP X8, X1, [X0]
	0x028BD2BC MOV X0, X21
	0x028BD2C0 BLR X8
	0x028BD2C4 LDR X8, [X19 + 0x480]
	0x028BD2C8 STR S11, [X19 + 0x488]
	0x028BD2CC STR S12, [X19 + 0x48C]
	0x028BD2D0 STR S13, [X19 + 0x490]
	0x028BD2D4 STR S0, [X19 + 0x494]
	0x028BD2D8 CBZ X8, 0x28BD31C
	0x028BD2DC LDR X9, [X20 + 0x20]
	0x028BD2E0 MOVZ W10, 0x4
	0x028BD2E4 MOV X0, X19
	0x028BD2E8 MOV V0.16B, V8.16B
	0x028BD2EC LDR X9, [X9 + 0xC0]
	0x028BD2F0 STR W10, [X8 + 0x80]
	0x028BD2F4 MOV V1.16B, V9.16B
	0x028BD2F8 MOV V2.16B, V10.16B
	0x028BD2FC LDR X1, [X9 + 0x1C8]
	0x028BD300 LDP X20, X19, [X31 + 0x50]
	0x028BD304 LDP X22, X21, [X31 + 0x40]
	0x028BD308 LDP X30, X23, [X31 + 0x30]
	0x028BD30C LDP D9, D8, [X31 + 0x20]
	0x028BD310 LDP D11, D10, [X31 + 0x10]
	0x028BD314 LDP D13, D12, [X31], #0x60
	0x028BD318 B 0x28BC720
	0x028BD31C BL 0x1C16F20
	0x028BD320 STP X30, X21, [X31 - 0x20]!
	0x028BD324 STP X20, X19, [X31 + 0x10]
	0x028BD328 ADRP X21, 0x1B1D000
	0x028BD32C LDRB W8, [X21 + 0xCBF]
	0x028BD330 MOV X19, X1
	0x028BD334 MOV X20, X0
	0x028BD338 TBNZ X8, 0x0, 0x28BD35C
	0x028BD33C ADRP X0, 0x1861000
	0x028BD340 LDR X0, [X0 + 0x130]
	0x028BD344 BL 0x1C16CF4
	0x028BD348 ADRP X0, 0x1861000
	0x028BD34C LDR X0, [X0 + 0x138]
	0x028BD350 BL 0x1C16CF4
	0x028BD354 MOVZ W8, 0x1
	0x028BD358 STRB W8, [X21 + 0xCBF]
	0x028BD35C LDR W8, [X20 + 0x498]
	0x028BD360 CBZ W8, 0x28BD390
	0x028BD364 CBZ X19, 0x28BD45C
	0x028BD368 LDR W8, [X19 + 0x8C]
	0x028BD36C SUB W8, W8, 0x116
	0x028BD370 CMP W8, 0x3

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 Subtract X31, X31, 48
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Call 0x3EB2C50
	008 Move X19, 0x1B1D000
	009 Move W8, [X19+1495]
	010 Move V8, V0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0x1837000
	014 Move X0, [X0+1448]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X19+1495], W8
	018 Move X8, 0x1837000
	019 Move X8, [X8+1448]
	020 Move X0, [X8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 NotImplemented "Instruction FCVT not yet implemented."
	026 Add X0, X31, 8
	027 Move V0, V9
	028 Call 0x3EB2C00
	029 NotImplemented "Instruction FCMP not yet implemented."
	030 Move D1, -0.5
	031 NotImplemented "Instruction FCMP not yet implemented."
	032 Move V0, [X31+8]
	033 Move D1, -1
	034 Move S0, 1
	035 Return V0
	036 Move D1, 0.5
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move V0, [X31+8]
	039 Move D1, 1
	040 NotImplemented "Instruction FCVTZS not yet implemented."
	041 Add D1, D0, D1
	042 And X31, X8, 1
	043 NotImplemented "Instruction FCSEL not yet implemented."
	044 Add D0, D9, D1
	045 NotImplemented "Instruction FRINTP not yet implemented."
	046 Add D0, D9, D1
	047 NotImplemented "Instruction FRINTM not yet implemented."
	048 Move X9, 0x7FF00000
	049 Move X30, [X31+32]
	050 Move X19, [X31+40]
	051 Move D9, [X31+16]
	052 Move D8, [X31+24]
	053 NotImplemented "Instruction FCVTZS not yet implemented."
	054 Move W10, 0xCF000000
	055 Move D2, X9
	056 NotImplemented "Instruction SCVTF not yet implemented."
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 Move S0, W10
	059 NotImplemented "Instruction FCSEL not yet implemented."
	060 Move S0, 10
	061 Add X31, X31, 48
	062 Call 0x3EB2B50
	063 Return V0

Method: System.Single RoundToMultipleOf(System.Single value, System.Single roundingValue)

Disassembly:
	0x028BD374 B.HI 0x28BD450
	0x028BD378 ADRP X9, 0xFFFFFFFFFE270000
	0x028BD37C ADD X9, X9, 0xD74
	0x028BD380 ADR X10, 0x3C
	0x028BD384 LDRB W11, [X9, X8, LSL]
	0x028BD388 ADD X10, X10, X11, 0x2, LSL
	0x028BD38C BR X10
	0x028BD390 CBZ X19, 0x28BD45C
	0x028BD394 LDR W8, [X19 + 0x8C]
	0x028BD398 SUB W8, W8, 0x116
	0x028BD39C CMP W8, 0x3
	0x028BD3A0 B.HI 0x28BD450
	0x028BD3A4 ADRP X9, 0xFFFFFFFFFE270000
	0x028BD3A8 ADD X9, X9, 0xD78
	0x028BD3AC ADR X10, 0x10
	0x028BD3B0 LDRB W11, [X9, X8, LSL]
	0x028BD3B4 ADD X10, X10, X11, 0x2, LSL
	0x028BD3B8 BR X10
	0x028BD3BC LDRB W8, [X20 + 0x49C]
	0x028BD3C0 CMP W8, 0x0
	0x028BD3C4 MOVZ W8, 0x6
	0x028BD3C8 CSINC W21, W8, W31, NE
	0x028BD3CC B 0x28BD40C
	0x028BD3D0 LDRB W8, [X20 + 0x49C]
	0x028BD3D4 CMP W8, 0x0
	0x028BD3D8 MOVZ W8, 0x6
	0x028BD3DC CSINC W21, W8, W31, EQ
	0x028BD3E0 B 0x28BD40C
	0x028BD3E4 LDRB W8, [X20 + 0x49C]
	0x028BD3E8 MOVZ W9, 0x5
	0x028BD3EC CMP W8, 0x0
	0x028BD3F0 MOVZ W8, 0x2
	0x028BD3F4 B 0x28BD408
	0x028BD3F8 LDRB W8, [X20 + 0x49C]
	0x028BD3FC MOVZ W9, 0x2
	0x028BD400 CMP W8, 0x0
	0x028BD404 MOVZ W8, 0x5
	0x028BD408 CSEL W21, W8, W9, EQ
	0x028BD40C ADRP X8, 0x1861000

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 Move [X31-32], D9
	003 Move [X31-24], D8
	004 Move [X31+16], X30
	005 NotImplemented "Instruction FDIV not yet implemented."
	006 NotImplemented "Instruction FCVT not yet implemented."
	007 Add X0, X31, 24
	008 Move V8, V1
	009 Call 0x3EB2C00
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 Move D1, -0.5
	012 NotImplemented "Instruction FCMP not yet implemented."
	013 Move V0, [X31+24]
	014 Move S1, -1
	015 Move D1, 0.5
	016 NotImplemented "Instruction FCMP not yet implemented."
	017 Move V0, [X31+24]
	018 Move S1, 1
	019 NotImplemented "Instruction FCVTZS not yet implemented."
	020 NotImplemented "Instruction INVALID not yet implemented."
	021 Add S1, S0, S1
	022 And X31, X8, 1
	023 NotImplemented "Instruction FCSEL not yet implemented."
	024 Move S0, -0.5
	025 Add S0, S9, S0
	026 NotImplemented "Instruction FRINTP not yet implemented."
	027 Move S0, 0.5
	028 Add S0, S9, S0
	029 NotImplemented "Instruction FRINTM not yet implemented."
	030 Move X30, [X31+16]
	031 Multiply S0, S0, S8
	032 Move D9, [X31+32]
	033 Move D8, [X31+40]
	034 Return V0

Method: System.Void ClampValue()

Disassembly:
	0x028BD410 LDR X8, [X8 + 0x138]
	0x028BD414 MOV X0, X19
	0x028BD418 LDR X1, [X8]
	0x028BD41C BL 0x2EE6C18
	0x028BD420 LDR X8, [X20]
	0x028BD424 AND W2, W0, 0x1
	0x028BD428 MOV X0, X20
	0x028BD42C MOV W1, W21
	0x028BD430 LDR X9, [X8 + 0x968]
	0x028BD434 LDR X3, [X8 + 0x970]
	0x028BD438 BLR X9
	0x028BD43C MOV X0, X19
	0x028BD440 LDP X20, X19, [X31 + 0x10]
	0x028BD444 MOV X1, X31
	0x028BD448 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {18}
	005 Move X8, [X1+32]
	006 Move X19, X0
	007 Move X8, [X8+192]
	008 Move X1, [X8+400]
	009 Call BaseField`1<Int32>.get_rawValue, X0
	010 Move X8, [X19]
	011 Move W1, W0
	012 Move X0, X19
	013 Move X3, [X8+2040]
	014 Move X2, [X8+2048]
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 CallNoReturn X3
	018 Call 0x1C17F20

Method: TValueType SliderLerpUnclamped(TValueType a, TValueType b, System.Single interpolant)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Single SliderNormalizeValue(TValueType currentValue, TValueType lowerValue, TValueType higherValue)

Disassembly:
	

ISIL:
No ISIL was generated
Method: TValueType ParseStringToValue(System.String previousValue, System.String newValue)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void ComputeValueFromKey(UnityEngine.UIElements.BaseSlider`1/SliderKey<TValueType> sliderKey, System.Boolean isShift)

Disassembly:
	

ISIL:
No ISIL was generated
Method: TValueType SliderLerpDirectionalUnclamped(TValueType a, TValueType b, System.Single positionInterpolant)

Disassembly:
	0x028BD44C B 0x3D9D950
	0x028BD450 LDP X20, X19, [X31 + 0x10]
	0x028BD454 LDP X30, X21, [X31], #0x20
	0x028BD458 RET
	0x028BD45C BL 0x1C16F20
	0x028BD460 STP X30, X21, [X31 - 0x20]!
	0x028BD464 STP X20, X19, [X31 + 0x10]
	0x028BD468 ADRP X21, 0x1B1D000
	0x028BD46C LDRB W8, [X21 + 0xCC0]
	0x028BD470 MOV X19, X1
	0x028BD474 MOV X20, X0
	0x028BD478 TBNZ X8, 0x0, 0x28BD490
	0x028BD47C ADRP X0, 0x1861000
	0x028BD480 LDR X0, [X0 + 0x140]
	0x028BD484 BL 0x1C16CF4
	0x028BD488 MOVZ W8, 0x1

ISIL:
	001 Move X9, [X0]
	002 Move W10, [X0+1176]
	003 Move W11, [X0+1180]
	004 Move S1, 1
	005 Move X4, [X9+2360]
	006 Move X3, [X9+2368]
	007 Subtract S1, S1, S0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W8, W1
	010 NotImplemented "Instruction FCSEL not yet implemented."
	011 Compare W11, 0
	012 JumpIfEqual {16}
	013 Move W1, W2
	014 Move W2, W8
	015 CallNoReturn X4
	016 Move W1, W8
	017 CallNoReturn X4

Method: System.Void SetSliderValueFromDrag()

Disassembly:
	0x028BD48C STRB W8, [X21 + 0xCC0]
	0x028BD490 CBZ X19, 0x28BD538
	0x028BD494 LDR W9, [X20 + 0x498]
	0x028BD498 LDR W8, [X19 + 0x8C]
	0x028BD49C MOVZ W10, 0x4
	0x028BD4A0 CMP W9, 0x0
	0x028BD4A4 CSINC W10, W10, W31, NE
	0x028BD4A8 CMP W8, W10
	0x028BD4AC B.NE 0x28BD4C4
	0x028BD4B0 LDRB W8, [X20 + 0x49C]
	0x028BD4B4 CMP W8, 0x0
	0x028BD4B8 MOVZ W8, 0x3
	0x028BD4BC CINC W21, W8, NE
	0x028BD4C0 B 0x28BD4E8
	0x028BD4C4 CMP W9, 0x0
	0x028BD4C8 MOVZ W9, 0x2
	0x028BD4CC CINC W9, W9, EQ
	0x028BD4D0 CMP W8, W9
	0x028BD4D4 B.NE 0x28BD52C
	0x028BD4D8 LDRB W8, [X20 + 0x49C]
	0x028BD4DC CMP W8, 0x0
	0x028BD4E0 MOVZ W8, 0x3
	0x028BD4E4 CINC W21, W8, EQ
	0x028BD4E8 ADRP X8, 0x1861000
	0x028BD4EC LDR X8, [X8 + 0x140]
	0x028BD4F0 MOV X0, X19
	0x028BD4F4 LDR X1, [X8]
	0x028BD4F8 BL 0x2409990
	0x028BD4FC LDR X8, [X20]
	0x028BD500 AND W2, W0, 0x1
	0x028BD504 MOV X0, X20
	0x028BD508 MOV W1, W21
	0x028BD50C LDR X9, [X8 + 0x968]
	0x028BD510 LDR X3, [X8 + 0x970]
	0x028BD514 BLR X9
	0x028BD518 MOV X0, X19
	0x028BD51C LDP X20, X19, [X31 + 0x10]
	0x028BD520 MOV X1, X31
	0x028BD524 LDP X30, X21, [X31], #0x20
	0x028BD528 B 0x3D9D950
	0x028BD52C LDP X20, X19, [X31 + 0x10]
	0x028BD530 LDP X30, X21, [X31], #0x20
	0x028BD534 RET
	0x028BD538 BL 0x1C16F20
	0x028BD53C STP D9, D8, [X31 - 0x40]!
	0x028BD540 STP X30, X23, [X31 + 0x10]
	0x028BD544 STP X22, X21, [X31 + 0x20]
	0x028BD548 STP X20, X19, [X31 + 0x30]
	0x028BD54C ADRP X8, 0xFFFFFFFFFE22C000
	0x028BD550 MOV V8.16B, V2.16B
	0x028BD554 LDR V2, [X8 + 0xF9C]
	0x028BD558 FABD S4, S0, S0
	0x028BD55C FCMP S4, S2
	0x028BD560 B.MI 0x28BD5E0
	0x028BD564 LDR X8, [X0]
	0x028BD568 MOV X20, X1
	0x028BD56C LDRB W21, [X0 + 0x49C]
	0x028BD570 FSUB S9, S0, S1
	0x028BD574 LDR X9, [X8 + 0x8E8]
	0x028BD578 LDR X1, [X8 + 0x8F0]
	0x028BD57C FCMP S3, S8
	0x028BD580 FADD S0, S1, S8
	0x028BD584 CSET W22, MI
	0x028BD588 FCMP S0, S3
	0x028BD58C MOV X19, X0
	0x028BD590 CSET W23, MI
	0x028BD594 BLR X9
	0x028BD598 CMP W21, 0x0
	0x028BD59C FNEG S1, S0
	0x028BD5A0 CSEL W9, W22, W23, EQ
	0x028BD5A4 CSEL W8, W23, W22, EQ
	0x028BD5A8 FCSEL S0, S0, S1, EQ
	0x028BD5AC CMP W9, 0x1
	0x028BD5B0 B.NE 0x28BD5C8
	0x028BD5B4 LDR X9, [X19 + 0x480]
	0x028BD5B8 CBZ X9, 0x28BD680
	0x028BD5BC LDR W10, [X9 + 0x80]
	0x028BD5C0 CMP W10, 0x1
	0x028BD5C4 B.NE 0x28BD5F4
	0x028BD5C8 CBZ W8, 0x28BD5E0
	0x028BD5CC LDR X8, [X19 + 0x480]
	0x028BD5D0 CBZ X8, 0x28BD680
	0x028BD5D4 LDR W9, [X8 + 0x80]
	0x028BD5D8 CMP W9, 0x2
	0x028BD5DC B.NE 0x28BD61C
	0x028BD5E0 LDP X20, X19, [X31 + 0x30]
	0x028BD5E4 LDP X22, X21, [X31 + 0x20]
	0x028BD5E8 LDP X30, X23, [X31 + 0x10]
	0x028BD5EC LDP D9, D8, [X31], #0x40
	0x028BD5F0 RET
	0x028BD5F4 LDR X8, [X20 + 0x20]
	0x028BD5F8 MOVZ W10, 0x2
	0x028BD5FC FSUB S0, S8, S0
	0x028BD600 FCMP S0, S9
	0x028BD604 LDR X8, [X8 + 0xC0]
	0x028BD608 STR W10, [X9 + 0x80]
	0x028BD60C LDR W1, [X19 + 0x46C]
	0x028BD610 LDR W2, [X19 + 0x470]
	0x028BD614 LDR X3, [X8 + 0x1D0]
	0x028BD618 B 0x28BD640
	0x028BD61C LDR X9, [X20 + 0x20]
	0x028BD620 MOVZ W10, 0x1
	0x028BD624 FADD S0, S0, S8
	0x028BD628 FCMP S0, S9
	0x028BD62C LDR X9, [X9 + 0xC0]
	0x028BD630 STR W10, [X8 + 0x80]
	0x028BD634 LDR W1, [X19 + 0x46C]
	0x028BD638 LDR W2, [X19 + 0x470]
	0x028BD63C LDR X3, [X9 + 0x1D0]
	0x028BD640 FCSEL S0, S0, S9, MI
	0x028BD644 FMOV S1, W31
	0x028BD648 FMAX S0, S0, S1
	0x028BD64C FDIV S0, S0, S9
	0x028BD650 MOV X0, X19
	0x028BD654 BL 0x28BC44C
	0x028BD658 LDR X8, [X19]
	0x028BD65C MOV W1, W0
	0x028BD660 MOV X0, X19
	0x028BD664 LDP X20, X19, [X31 + 0x30]
	0x028BD668 LDR X3, [X8 + 0x7F8]
	0x028BD66C LDR X2, [X8 + 0x800]
	0x028BD670 LDP X22, X21, [X31 + 0x20]
	0x028BD674 LDP X30, X23, [X31 + 0x10]
	0x028BD678 LDP D9, D8, [X31], #0x40
	0x028BD67C BR X3
	0x028BD680 BL 0x1C16F20
	0x028BD684 SUB X31, X31, 0x60
	0x028BD688 STP D9, D8, [X31 + 0x10]
	0x028BD68C STR X30, [X31 + 0x20]
	0x028BD690 STP X24, X23, [X31 + 0x30]
	0x028BD694 STP X22, X21, [X31 + 0x40]
	0x028BD698 STP X20, X19, [X31 + 0x50]
	0x028BD69C ADRP X20, 0x1B1D000
	0x028BD6A0 LDRB W8, [X20 + 0xCC1]
	0x028BD6A4 MOV V8.16B, V0.16B
	0x028BD6A8 MOV X19, X0
	0x028BD6AC TBNZ X8, 0x0, 0x28BD6DC
	0x028BD6B0 ADRP X0, 0x185F000
	0x028BD6B4 LDR X0, [X0 + 0x120]
	0x028BD6B8 BL 0x1C16CF4
	0x028BD6BC ADRP X0, 0x185F000
	0x028BD6C0 LDR X0, [X0 + 0x128]
	0x028BD6C4 BL 0x1C16CF4
	0x028BD6C8 ADRP X0, 0x1861000
	0x028BD6CC LDR X0, [X0 + 0x148]
	0x028BD6D0 BL 0x1C16CF4
	0x028BD6D4 MOVZ W8, 0x1
	0x028BD6D8 STRB W8, [X20 + 0xCC1]
	0x028BD6DC STR X31, [X31 + 0x8]
	0x028BD6E0 LDR X0, [X19 + 0x448]
	0x028BD6E4 CBZ X0, 0x28BDC18
	0x028BD6E8 FMOV S9, 1
	0x028BD6EC FCMP S8, S9
	0x028BD6F0 CSET W1, MI
	0x028BD6F4 MOV X2, X31
	0x028BD6F8 BL 0x3DF2050
	0x028BD6FC FCMP S8, S9
	0x028BD700 B.PL 0x28BDBD4
	0x028BD704 LDR X0, [X19 + 0x448]
	0x028BD708 CBZ X0, 0x28BDC18
	0x028BD70C MOV X1, X31
	0x028BD710 BL 0x3DE7EEC
	0x028BD714 LDR X8, [X19 + 0x448]
	0x028BD718 CBZ X8, 0x28BDC18
	0x028BD71C MOV X20, X0

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x1B1E000
	010 Move W8, [X21+3261]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x1860000
	018 Move X0, [X0+288]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3261], W8
	022 Move X0, [X19+1152]
	023 Compare X0, 0
	024 JumpIfEqual {181}
	025 Move W8, [X0+128]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X20+32]
	028 Move X8, [X8+192]
	029 Move X1, [X8+448]
	030 Call 0x28F82D0, X0
	031 Move X0, [X19+1088]
	032 Compare X0, 0
	033 JumpIfEqual {181}
	034 Move W23, [X19+1176]
	035 Move X1, X31
	036 Move V8, V0
	037 Move V9, V1
	038 Call VisualElement.get_resolvedStyle, X0
	039 Compare X0, 0
	040 JumpIfEqual {181}
	041 Move X22, 0x1860000
	042 Move X8, [X0]
	043 Move X22, [X22+288]
	044 Move X21, X0
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X22]
	047 Compare W23, 0
	048 JumpIfEqual {69}
	049 Compare W9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move W2, 19
	058 Move X0, X21
	059 Call 0x1C5D788
	060 Move X20, [X31+48]
	061 Move X19, [X31+56]
	062 Move X22, [X31+32]
	063 Move X21, [X31+40]
	064 Move X30, [X31+16]
	065 Move X23, [X31+24]
	066 Move D9, [X31+64]
	067 Move D8, [X31+72]
	068 Return 
	069 Compare W9, 0
	070 JumpIfEqual {77}
	071 Move X10, [X8+176]
	072 Add X10, X10, 8
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Subtract X9, X9, 1
	076 Add X10, X10, 16
	077 Move W2, 44
	078 Move X0, X21
	079 Call 0x1C5D788
	080 Move W9, [X10]
	081 Add W9, W9, 19
	082 Add X8, X8, W9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X1, [X0+8]
	086 Move X0, X21
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X0, [X19+1096]
	089 Compare X0, 0
	090 JumpIfEqual {181}
	091 Move X1, X31
	092 Move V8, V0
	093 Call VisualElement.get_resolvedStyle, X0
	094 Compare X0, 0
	095 JumpIfEqual {181}
	096 Move X8, [X0]
	097 Move X1, [X22]
	098 Move X21, X0
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move W2, 19
	109 Move X0, X21
	110 Call 0x1C5D788
	111 Move W9, [X10]
	112 Add W9, W9, 19
	113 Add X8, X8, W9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X21
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X8, [X20+32]
	120 Move V1, [X19+1164]
	121 Move X0, X19
	122 Move X8, [X8+192]
	123 Add S2, S9, S1
	124 Move V1, V0
	125 Move V0, V8
	126 Move W9, [X10]
	127 Add W9, W9, 44
	128 Add X8, X8, W9
	129 Add X0, X8, 312
	130 Move X8, [X0]
	131 Move X1, [X0+8]
	132 Move X0, X21
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move X0, [X19+1096]
	135 Compare X0, 0
	136 JumpIfEqual {181}
	137 Move X1, X31
	138 Move V9, V0
	139 Call VisualElement.get_resolvedStyle, X0
	140 Compare X0, 0
	141 JumpIfEqual {181}
	142 Move X8, [X0]
	143 Move X1, [X22]
	144 Move X21, X0
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move W2, 44
	155 Move X0, X21
	156 Call 0x1C5D788
	157 Move W9, [X10]
	158 Add W9, W9, 44
	159 Add X8, X8, W9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, X21
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X8, [X20+32]
	166 Move V1, [X19+1160]
	167 Move X0, X19
	168 Move X8, [X8+192]
	169 Add S2, S8, S1
	170 Move V1, V0
	171 Move V0, V9
	172 Move X1, [X8+456]
	173 Move X20, [X31+48]
	174 Move X19, [X31+56]
	175 Move X22, [X31+32]
	176 Move X21, [X31+40]
	177 Move X30, [X31+16]
	178 Move X23, [X31+24]
	179 Move D9, [X31+64]
	180 Move D8, [X31+72]
	181 Call 0x1C17F20

Method: System.Void ComputeValueAndDirectionFromDrag(System.Single sliderLength, System.Single dragElementLength, System.Single dragElementPos)

Disassembly:
	0x028BD720 MOV X0, X8
	0x028BD724 MOV X1, X31
	0x028BD728 BL 0x3DE7EEC
	0x028BD72C ADRP X8, 0x1861000
	0x028BD730 LDR X8, [X8 + 0x148]
	0x028BD734 MOV X21, X0
	0x028BD738 MOVZ W0, 0x1
	0x028BD73C LDR X1, [X8]
	0x028BD740 BL 0x266EA88
	0x028BD744 CBZ X21, 0x28BDC18
	0x028BD748 ADRP X23, 0x185F000
	0x028BD74C LDR X8, [X21]
	0x028BD750 LDR X23, [X23 + 0x128]
	0x028BD754 MOV X22, X0
	0x028BD758 LDRH W9, [X8 + 0x12E]
	0x028BD75C LDR X1, [X23]
	0x028BD760 CBZ X9, 0x28BD784
	0x028BD764 LDR X10, [X8 + 0xB0]
	0x028BD768 ADD X10, X10, 0x8
	0x028BD76C LDUR X11, [X10 - 0x8]
	0x028BD770 CMP X11, X1
	0x028BD774 B.EQ 0x28BD794
	0x028BD778 SUBS X9, X9, 0x1
	0x028BD77C ADD X10, X10, 0x10
	0x028BD780 B.NE 0x28BD76C
	0x028BD784 MOVZ W2, 0x34
	0x028BD788 MOV X0, X21
	0x028BD78C BL 0x1C5C788
	0x028BD790 B 0x28BD7A4
	0x028BD794 LDR W9, [X10]
	0x028BD798 ADD W9, W9, 0x34

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, -31272960
	004 Move V3, [X8+3996]
	005 NotImplemented "Instruction FABD not yet implemented."
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 Move X8, [X1+32]
	008 Move W9, [X0+1145]
	009 Subtract S0, S0, S1
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 Move X8, [X8+192]
	012 NotImplemented "Instruction FCSEL not yet implemented."
	013 Move S3, W31
	014 Move W1, [X0+1132]
	015 Move W2, [X0+1136]
	016 Move X3, [X8+464]
	017 NotImplemented "Instruction FMAX not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction FCSEL not yet implemented."
	020 NotImplemented "Instruction FDIV not yet implemented."
	021 Move X19, X0
	022 Call 0x28BD44C, X0, X1, X2, V0
	023 Move X8, [X19]
	024 Move W1, W0
	025 Move X0, X19
	026 Move X3, [X8+2040]
	027 Move X2, [X8+2048]
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 CallNoReturn X3
	031 Move X30, [X31+16]
	032 Move X19, [X31+24]
	033 Return 

Method: System.Void SetSliderValueFromClick()

Disassembly:
	0x028BD79C ADD X8, X8, W9, 0x4, SXTW
	0x028BD7A0 ADD X0, X8, 0x138
	0x028BD7A4 LDP X8, X2, [X0]
	0x028BD7A8 MOV X0, X21
	0x028BD7AC MOV X1, X22
	0x028BD7B0 BLR X8
	0x028BD7B4 LDR W24, [X19 + 0x498]
	0x028BD7B8 MOV X0, X19
	0x028BD7BC MOV X1, X31
	0x028BD7C0 BL 0x3DE0EB8
	0x028BD7C4 CBZ X0, 0x28BDC18
	0x028BD7C8 ADRP X22, 0x185F000
	0x028BD7CC LDR X8, [X0]
	0x028BD7D0 LDR X22, [X22 + 0x120]
	0x028BD7D4 MOV X21, X0
	0x028BD7D8 LDRH W9, [X8 + 0x12E]
	0x028BD7DC LDR X1, [X22]
	0x028BD7E0 CBZ W24, 0x28BD818
	0x028BD7E4 CBZ W9, 0x28BD808
	0x028BD7E8 LDR X10, [X8 + 0xB0]
	0x028BD7EC ADD X10, X10, 0x8
	0x028BD7F0 LDUR X11, [X10 - 0x8]
	0x028BD7F4 CMP X11, X1
	0x028BD7F8 B.EQ 0x28BD84C
	0x028BD7FC SUBS X9, X9, 0x1
	0x028BD800 ADD X10, X10, 0x10
	0x028BD804 B.NE 0x28BD7F0
	0x028BD808 MOVZ W2, 0x19
	0x028BD80C MOV X0, X21
	0x028BD810 BL 0x1C5C788
	0x028BD814 B 0x28BD85C
	0x028BD818 CBZ W9, 0x28BD83C
	0x028BD81C LDR X10, [X8 + 0xB0]
	0x028BD820 ADD X10, X10, 0x8
	0x028BD824 LDUR X11, [X10 - 0x8]
	0x028BD828 CMP X11, X1
	0x028BD82C B.EQ 0x28BD8E4
	0x028BD830 SUBS X9, X9, 0x1
	0x028BD834 ADD X10, X10, 0x10
	0x028BD838 B.NE 0x28BD824
	0x028BD83C MOVZ W2, 0x1A
	0x028BD840 MOV X0, X21
	0x028BD844 BL 0x1C5C788
	0x028BD848 B 0x28BD8F4
	0x028BD84C LDR W9, [X10]
	0x028BD850 ADD W9, W9, 0x19
	0x028BD854 ADD X8, X8, W9, 0x4, SXTW
	0x028BD858 ADD X0, X8, 0x138
	0x028BD85C LDP X8, X1, [X0]
	0x028BD860 MOV X0, X21
	0x028BD864 BLR X8
	0x028BD868 MOV X21, X0
	0x028BD86C MOVZ W0, 0x2
	0x028BD870 MOV X1, X31
	0x028BD874 BL 0x3DFD120
	0x028BD878 MOV X1, X0
	0x028BD87C MOV X0, X21
	0x028BD880 MOV X2, X31
	0x028BD884 BL 0x3DFE630
	0x028BD888 FMOV S9, W31
	0x028BD88C TBNZ X0, 0x0, 0x28BD9AC
	0x028BD890 MOV X0, X19
	0x028BD894 MOV X1, X31
	0x028BD898 BL 0x3DE0EB8
	0x028BD89C CBZ X0, 0x28BDC18
	0x028BD8A0 LDR X8, [X0]
	0x028BD8A4 LDR X1, [X22]
	0x028BD8A8 MOV X21, X0
	0x028BD8AC LDRH W9, [X8 + 0x12E]
	0x028BD8B0 CBZ X9, 0x28BD8D4
	0x028BD8B4 LDR X10, [X8 + 0xB0]
	0x028BD8B8 ADD X10, X10, 0x8
	0x028BD8BC LDUR X11, [X10 - 0x8]
	0x028BD8C0 CMP X11, X1
	0x028BD8C4 B.EQ 0x28BD97C
	0x028BD8C8 SUBS X9, X9, 0x1
	0x028BD8CC ADD X10, X10, 0x10
	0x028BD8D0 B.NE 0x28BD8BC
	0x028BD8D4 MOVZ W2, 0x19
	0x028BD8D8 MOV X0, X21
	0x028BD8DC BL 0x1C5C788
	0x028BD8E0 B 0x28BD98C
	0x028BD8E4 LDR W9, [X10]
	0x028BD8E8 ADD W9, W9, 0x1A
	0x028BD8EC ADD X8, X8, W9, 0x4, SXTW
	0x028BD8F0 ADD X0, X8, 0x138
	0x028BD8F4 LDP X8, X1, [X0]
	0x028BD8F8 MOV X0, X21
	0x028BD8FC BLR X8
	0x028BD900 MOV X21, X0
	0x028BD904 MOVZ W0, 0x2
	0x028BD908 MOV X1, X31
	0x028BD90C BL 0x3DFD120
	0x028BD910 MOV X1, X0
	0x028BD914 MOV X0, X21
	0x028BD918 MOV X2, X31
	0x028BD91C BL 0x3DFE630
	0x028BD920 FMOV S9, W31
	0x028BD924 TBNZ X0, 0x0, 0x28BDAC8
	0x028BD928 MOV X0, X19
	0x028BD92C MOV X1, X31
	0x028BD930 BL 0x3DE0EB8
	0x028BD934 CBZ X0, 0x28BDC18
	0x028BD938 LDR X8, [X0]
	0x028BD93C LDR X1, [X22]
	0x028BD940 MOV X21, X0
	0x028BD944 LDRH W9, [X8 + 0x12E]
	0x028BD948 CBZ X9, 0x28BD96C
	0x028BD94C LDR X10, [X8 + 0xB0]
	0x028BD950 ADD X10, X10, 0x8
	0x028BD954 LDUR X11, [X10 - 0x8]
	0x028BD958 CMP X11, X1
	0x028BD95C B.EQ 0x28BDA98
	0x028BD960 SUBS X9, X9, 0x1
	0x028BD964 ADD X10, X10, 0x10
	0x028BD968 B.NE 0x28BD954
	0x028BD96C MOVZ W2, 0x1A
	0x028BD970 MOV X0, X21
	0x028BD974 BL 0x1C5C788
	0x028BD978 B 0x28BDAA8
	0x028BD97C LDR W9, [X10]
	0x028BD980 ADD W9, W9, 0x19
	0x028BD984 ADD X8, X8, W9, 0x4, SXTW
	0x028BD988 ADD X0, X8, 0x138
	0x028BD98C LDP X8, X1, [X0]
	0x028BD990 MOV X0, X21
	0x028BD994 BLR X8
	0x028BD998 STR X0, [X31 + 0x8]
	0x028BD99C ADD X0, X31, 0x8
	0x028BD9A0 MOV X1, X31
	0x028BD9A4 BL 0x3DFE5FC
	0x028BD9A8 MOV V9.16B, V0.16B
	0x028BD9AC LDR X0, [X19 + 0x440]
	0x028BD9B0 CBZ X0, 0x28BDC18
	0x028BD9B4 MOV X1, X31
	0x028BD9B8 BL 0x3DEC528
	0x028BD9BC FMUL S0, S3, S8
	0x028BD9C0 FCMP S0, S9
	0x028BD9C4 FCSEL S8, S0, S9, GT
	0x028BD9C8 FCVT S0, S8
	0x028BD9CC ADD X0, X31, 0x28
	0x028BD9D0 BL 0x3EB1C00
	0x028BD9D4 FCMP S8, 0x0
	0x028BD9D8 B.GE 0x28BD9F4
	0x028BD9DC FMOV D1, -0.5
	0x028BD9E0 FCMP D0, D1
	0x028BD9E4 B.NE 0x28BDA20
	0x028BD9E8 LDR V0, [X31 + 0x28]
	0x028BD9EC FMOV S1, -1
	0x028BD9F0 B 0x28BDA08
	0x028BD9F4 FMOV D1, 0.5
	0x028BD9F8 FCMP D0, D1
	0x028BD9FC B.NE 0x28BDA30
	0x028BDA00 LDR V0, [X31 + 0x28]
	0x028BDA04 FMOV S1, 1
	0x028BDA08 FCVTZS X8, D0
	0x00000000 INVALID
	0x028BDA10 FADD S1, S0, S1
	0x028BDA14 ANDS X31, X8, 0x1
	0x028BDA18 FCSEL S0, S0, S1, EQ
	0x028BDA1C B 0x28BDA3C
	0x028BDA20 FMOV S0, -0.5
	0x028BDA24 FADD S0, S8, S0
	0x028BDA28 FRINTP S0, S0
	0x028BDA2C B 0x28BDA3C
	0x028BDA30 FMOV S0, 0.5
	0x028BDA34 FADD S0, S8, S0
	0x028BDA38 FRINTM S0, S0
	0x028BDA3C MOV X0, X31
	0x028BDA40 BL 0x3DFED98
	0x028BDA44 CBZ X20, 0x28BDC18
	0x028BDA48 LDR X9, [X20]
	0x028BDA4C MOV X8, X1
	0x028BDA50 LDR X1, [X23]
	0x028BDA54 MOV X21, X0
	0x028BDA58 LDRH W10, [X9 + 0x12E]
	0x028BDA5C AND X22, X8, 0x0
	0x028BDA60 CBZ X10, 0x28BDA84
	0x028BDA64 LDR X8, [X9 + 0xB0]
	0x028BDA68 ADD X8, X8, 0x8
	0x028BDA6C LDUR X11, [X8 - 0x8]
	0x028BDA70 CMP X11, X1
	0x028BDA74 B.EQ 0x28BDA8C
	0x028BDA78 SUBS X10, X10, 0x1
	0x028BDA7C ADD X8, X8, 0x10
	0x028BDA80 B.NE 0x28BDA6C
	0x028BDA84 MOVZ W2, 0x18
	0x028BDA88 B 0x28BDBA4
	0x028BDA8C LDR W8, [X8]
	0x028BDA90 ADD W8, W8, 0x18
	0x028BDA94 B 0x28BDBB8
	0x028BDA98 LDR W9, [X10]
	0x028BDA9C ADD W9, W9, 0x1A
	0x028BDAA0 ADD X8, X8, W9, 0x4, SXTW
	0x028BDAA4 ADD X0, X8, 0x138
	0x028BDAA8 LDP X8, X1, [X0]
	0x028BDAAC MOV X0, X21
	0x028BDAB0 BLR X8
	0x028BDAB4 STR X0, [X31 + 0x8]
	0x028BDAB8 ADD X0, X31, 0x8
	0x028BDABC MOV X1, X31
	0x028BDAC0 BL 0x3DFE5FC
	0x028BDAC4 MOV V9.16B, V0.16B
	0x028BDAC8 LDR X0, [X19 + 0x440]
	0x028BDACC CBZ X0, 0x28BDC18
	0x028BDAD0 MOV X1, X31
	0x028BDAD4 BL 0x3DEC528
	0x028BDAD8 FMUL S0, S2, S8
	0x028BDADC FCMP S0, S9
	0x028BDAE0 FCSEL S8, S0, S9, GT
	0x028BDAE4 FCVT S0, S8
	0x028BDAE8 ADD X0, X31, 0x28
	0x028BDAEC BL 0x3EB1C00
	0x028BDAF0 FCMP S8, 0x0
	0x028BDAF4 B.GE 0x28BDB10
	0x028BDAF8 FMOV D1, -0.5
	0x028BDAFC FCMP D0, D1
	0x028BDB00 B.NE 0x28BDB3C
	0x028BDB04 LDR V0, [X31 + 0x28]
	0x028BDB08 FMOV S1, -1
	0x028BDB0C B 0x28BDB24
	0x028BDB10 FMOV D1, 0.5
	0x028BDB14 FCMP D0, D1
	0x028BDB18 B.NE 0x28BDB4C
	0x028BDB1C LDR V0, [X31 + 0x28]
	0x028BDB20 FMOV S1, 1
	0x028BDB24 FCVTZS X8, D0
	0x00000000 INVALID
	0x028BDB2C FADD S1, S0, S1
	0x028BDB30 ANDS X31, X8, 0x1
	0x028BDB34 FCSEL S0, S0, S1, EQ
	0x028BDB38 B 0x28BDB58
	0x028BDB3C FMOV S0, -0.5
	0x028BDB40 FADD S0, S8, S0
	0x028BDB44 FRINTP S0, S0
	0x028BDB48 B 0x28BDB58
	0x028BDB4C FMOV S0, 0.5
	0x028BDB50 FADD S0, S8, S0
	0x028BDB54 FRINTM S0, S0
	0x028BDB58 MOV X0, X31
	0x028BDB5C BL 0x3DFED98
	0x028BDB60 CBZ X20, 0x28BDC18
	0x028BDB64 LDR X9, [X20]
	0x028BDB68 MOV X8, X1
	0x028BDB6C LDR X1, [X23]
	0x028BDB70 MOV X21, X0
	0x028BDB74 LDRH W10, [X9 + 0x12E]
	0x028BDB78 AND X22, X8, 0x0
	0x028BDB7C CBZ X10, 0x28BDBA0
	0x028BDB80 LDR X8, [X9 + 0xB0]
	0x028BDB84 ADD X8, X8, 0x8
	0x028BDB88 LDUR X11, [X8 - 0x8]
	0x028BDB8C CMP X11, X1
	0x028BDB90 B.EQ 0x28BDBB0
	0x028BDB94 SUBS X10, X10, 0x1
	0x028BDB98 ADD X8, X8, 0x10
	0x028BDB9C B.NE 0x28BDB88
	0x028BDBA0 MOVZ W2, 0x36
	0x028BDBA4 MOV X0, X20
	0x028BDBA8 BL 0x1C5C788
	0x028BDBAC B 0x28BDBC0
	0x028BDBB0 LDR W8, [X8]
	0x028BDBB4 ADD W8, W8, 0x36
	0x028BDBB8 ADD X8, X9, W8, 0x4, SXTW
	0x028BDBBC ADD X0, X8, 0x138
	0x028BDBC0 LDP X8, X3, [X0]
	0x028BDBC4 MOV X0, X20
	0x028BDBC8 MOV X1, X21
	0x028BDBCC MOV X2, X22
	0x028BDBD0 BLR X8
	0x028BDBD4 LDR X0, [X19 + 0x448]
	0x028BDBD8 CBZ X0, 0x28BDC18
	0x028BDBDC LDR X19, [X19 + 0x458]
	0x028BDBE0 MOV X1, X31
	0x028BDBE4 BL 0x3DEBF60
	0x028BDBE8 CBZ X19, 0x28BDC18
	0x028BDBEC AND W1, W0, 0x1
	0x028BDBF0 MOV X0, X19
	0x028BDBF4 MOV X2, X31
	0x028BDBF8 BL 0x3DF2050
	0x028BDBFC LDP X20, X19, [X31 + 0x50]
	0x028BDC00 LDP X22, X21, [X31 + 0x40]
	0x028BDC04 LDP X24, X23, [X31 + 0x30]
	0x028BDC08 LDR X30, [X31 + 0x20]
	0x028BDC0C LDP D9, D8, [X31 + 0x10]
	0x028BDC10 ADD X31, X31, 0x60
	0x028BDC14 RET
	0x028BDC18 BL 0x1C16F20
	0x028BDC1C STR X30, [X31 - 0x10]!
	0x028BDC20 CBZ X1, 0x28BDC64
	0x028BDC24 LDUR V0, [X1 + 0x8C]
	0x028BDC28 LDUR V1, [X1 + 0x9C]
	0x028BDC2C ADRP X8, 0xFFFFFFFFFE22C000
	0x028BDC30 LDR V2, [X8 + 0xF20]
	0x028BDC34 FSUB V0.2S, V0.2S, V1.2S
	0x00000000 INVALID
	0x028BDC3C FADDP S0, V0.2S
	0x028BDC40 FCMP S0, S2
	0x028BDC44 B.MI 0x28BDC5C
	0x028BDC48 LDR X8, [X2 + 0x20]
	0x028BDC4C LDR X8, [X8 + 0xC0]
	0x028BDC50 LDR X1, [X8 + 0x38]
	0x028BDC54 LDR X30, [X31], #0x10
	0x028BDC58 B 0x28BDCBC
	0x028BDC5C LDR X30, [X31], #0x10
	0x028BDC60 RET
	0x028BDC64 BL 0x1C16F20
	0x028BDC68 STR X30, [X31 - 0x20]!
	0x028BDC6C STP X20, X19, [X31 + 0x10]
	0x028BDC70 CBZ X0, 0x28BDCA8
	0x028BDC74 LDR X8, [X1 + 0x20]
	0x028BDC78 MOV X20, X1
	0x028BDC7C MOV X19, X0
	0x028BDC80 LDR X8, [X8 + 0xC0]
	0x028BDC84 LDR X1, [X8 + 0x208]
	0x028BDC88 BL 0x2780A14
	0x028BDC8C LDR X8, [X20 + 0x20]
	0x028BDC90 MOV X0, X19
	0x028BDC94 LDP X20, X19, [X31 + 0x10]
	0x028BDC98 LDR X8, [X8 + 0xC0]
	0x028BDC9C LDR X1, [X8 + 0x38]
	0x028BDCA0 LDR X30, [X31], #0x20
	0x028BDCA4 B 0x28BDCBC
	0x028BDCA8 BL 0x1C16F20
	0x028BDCAC FABD S0, S1, S1
	0x028BDCB0 FCMP S0, S2
	0x028BDCB4 CSET W0, MI
	0x028BDCB8 RET
	0x028BDCBC STP D11, D10, [X31 - 0x50]!
	0x028BDCC0 STP D9, D8, [X31 + 0x10]
	0x028BDCC4 STR X30, [X31 + 0x20]
	0x028BDCC8 STP X22, X21, [X31 + 0x30]
	0x028BDCCC STP X20, X19, [X31 + 0x40]
	0x028BDCD0 ADRP X20, 0x1B1D000
	0x028BDCD4 LDRB W8, [X20 + 0xCC2]
	0x028BDCD8 MOV X19, X0
	0x028BDCDC TBNZ X8, 0x0, 0x28BDD00
	0x028BDCE0 ADRP X0, 0x185F000
	0x028BDCE4 LDR X0, [X0 + 0x120]
	0x028BDCE8 BL 0x1C16CF4
	0x028BDCEC ADRP X0, 0x1860000
	0x028BDCF0 LDR X0, [X0 + 0x688]
	0x028BDCF4 BL 0x1C16CF4
	0x028BDCF8 MOVZ W8, 0x1
	0x028BDCFC STRB W8, [X20 + 0xCC2]
	0x028BDD00 CBZ X19, 0x28BE348
	0x028BDD04 MOV X0, X19
	0x028BDD08 MOV X1, X31
	0x028BDD0C BL 0x3DEC0CC
	0x028BDD10 CBZ X0, 0x28BE1CC
	0x028BDD14 LDR X8, [X19]
	0x028BDD18 MOV X0, X19
	0x028BDD1C LDR X9, [X8 + 0x7E8]
	0x028BDD20 LDR X1, [X8 + 0x7F0]
	0x028BDD24 BLR X9
	0x028BDD28 LDR X8, [X19]
	0x028BDD2C LDR W2, [X19 + 0x46C]
	0x028BDD30 LDR W3, [X19 + 0x470]
	0x028BDD34 MOV W1, W0
	0x028BDD38 LDR X9, [X8 + 0x948]
	0x028BDD3C LDR X4, [X8 + 0x950]
	0x028BDD40 MOV X0, X19
	0x028BDD44 BLR X9
	0x028BDD48 LDRB W8, [X19 + 0x49C]
	0x028BDD4C FMOV S1, 1
	0x028BDD50 FSUB S1, S1, S0
	0x028BDD54 MOV X0, X19
	0x028BDD58 CMP W8, 0x0
	0x028BDD5C MOV X1, X31
	0x028BDD60 FCSEL S11, S0, S1, EQ
	0x028BDD64 BL 0x3DEC4BC
	0x028BDD68 LDR X0, [X19 + 0x448]
	0x028BDD6C CBZ X0, 0x28BE348
	0x028BDD70 LDR W22, [X19 + 0x498]
	0x028BDD74 MOV X1, X31
	0x028BDD78 MOV V8.16B, V0.16B
	0x028BDD7C BL 0x3DE0EB8
	0x028BDD80 CBZ X0, 0x28BE348
	0x028BDD84 ADRP X21, 0x185F000
	0x028BDD88 LDR X8, [X0]
	0x028BDD8C LDR X21, [X21 + 0x120]
	0x028BDD90 FMOV S0, 0.5
	0x028BDD94 MOV X20, X0
	0x028BDD98 LDRH W9, [X8 + 0x12E]
	0x028BDD9C LDR X1, [X21]
	0x028BDDA0 FMUL S10, S8, S0
	0x028BDDA4 CBZ W22, 0x28BDDDC
	0x028BDDA8 CBZ W9, 0x28BDDCC
	0x028BDDAC LDR X10, [X8 + 0xB0]
	0x028BDDB0 ADD X10, X10, 0x8
	0x028BDDB4 LDUR X11, [X10 - 0x8]
	0x028BDDB8 CMP X11, X1
	0x028BDDBC B.EQ 0x28BDE10
	0x028BDDC0 SUBS X9, X9, 0x1
	0x028BDDC4 ADD X10, X10, 0x10
	0x028BDDC8 B.NE 0x28BDDB4
	0x028BDDCC MOVZ W2, 0x13
	0x028BDDD0 MOV X0, X20
	0x028BDDD4 BL 0x1C5C788
	0x028BDDD8 B 0x28BDE20
	0x028BDDDC CBZ W9, 0x28BDE00
	0x028BDDE0 LDR X10, [X8 + 0xB0]
	0x028BDDE4 ADD X10, X10, 0x8
	0x028BDDE8 LDUR X11, [X10 - 0x8]
	0x028BDDEC CMP X11, X1
	0x028BDDF0 B.EQ 0x28BDF2C
	0x028BDDF4 SUBS X9, X9, 0x1
	0x028BDDF8 ADD X10, X10, 0x10
	0x028BDDFC B.NE 0x28BDDE8
	0x028BDE00 MOVZ W2, 0x2C
	0x028BDE04 MOV X0, X20
	0x028BDE08 BL 0x1C5C788
	0x028BDE0C B 0x28BDF3C
	0x028BDE10 LDR W9, [X10]
	0x028BDE14 ADD W9, W9, 0x13
	0x028BDE18 ADD X8, X8, W9, 0x4, SXTW
	0x028BDE1C ADD X0, X8, 0x138
	0x028BDE20 LDP X8, X1, [X0]
	0x028BDE24 MOV X0, X20
	0x028BDE28 BLR X8
	0x028BDE2C LDR X0, [X19 + 0x440]
	0x028BDE30 CBZ X0, 0x28BE348
	0x028BDE34 MOV X1, X31
	0x028BDE38 MOV V8.16B, V0.16B
	0x028BDE3C BL 0x3DE0EB8
	0x028BDE40 CBZ X0, 0x28BE348
	0x028BDE44 LDR X8, [X0]
	0x028BDE48 LDR X1, [X21]
	0x028BDE4C MOV X20, X0
	0x028BDE50 LDRH W9, [X8 + 0x12E]
	0x028BDE54 CBZ X9, 0x28BDE78
	0x028BDE58 LDR X10, [X8 + 0xB0]
	0x028BDE5C ADD X10, X10, 0x8
	0x028BDE60 LDUR X11, [X10 - 0x8]
	0x028BDE64 CMP X11, X1
	0x028BDE68 B.EQ 0x28BDE88
	0x028BDE6C SUBS X9, X9, 0x1
	0x028BDE70 ADD X10, X10, 0x10
	0x028BDE74 B.NE 0x28BDE60
	0x028BDE78 MOVZ W2, 0x13
	0x028BDE7C MOV X0, X20
	0x028BDE80 BL 0x1C5C788
	0x028BDE84 B 0x28BDE98
	0x028BDE88 LDR W9, [X10]
	0x028BDE8C ADD W9, W9, 0x13
	0x028BDE90 ADD X8, X8, W9, 0x4, SXTW
	0x028BDE94 ADD X0, X8, 0x138
	0x028BDE98 LDP X8, X1, [X0]
	0x028BDE9C MOV X0, X20
	0x028BDEA0 BLR X8
	0x028BDEA4 FMOV S1, 1
	0x028BDEA8 FSUB S0, S0, S8
	0x028BDEAC FSUB S1, S1, S11
	0x028BDEB0 FMUL S8, S1, S0
	0x028BDEB4 FMOV W8, S8
	0x028BDEB8 MOVZ W9, 0x1
	0x028BDEBC AND W8, W8, 0x7FFFFFFF
	0x028BDEC0 MOVK W9, 0x7F800000
	0x028BDEC4 CMP W8, W9
	0x028BDEC8 B.CS 0x28BE1CC
	0x028BDECC LDR X0, [X19 + 0x448]
	0x028BDED0 CBZ X0, 0x28BE348
	0x028BDED4 MOV X1, X31
	0x028BDED8 BL 0x3DEC1BC
	0x028BDEDC CBZ X0, 0x28BE348
	0x028BDEE0 ADRP X21, 0x1860000
	0x028BDEE4 LDR X8, [X0]
	0x028BDEE8 LDR X21, [X21 + 0x688]
	0x028BDEEC MOV X20, X0
	0x028BDEF0 LDRH W9, [X8 + 0x12E]
	0x028BDEF4 LDR X1, [X21]
	0x028BDEF8 CBZ X9, 0x28BDF1C
	0x028BDEFC LDR X10, [X8 + 0xB0]
	0x028BDF00 ADD X10, X10, 0x8
	0x028BDF04 LDUR X11, [X10 - 0x8]
	0x028BDF08 CMP X11, X1
	0x028BDF0C B.EQ 0x28BE0D4
	0x028BDF10 SUBS X9, X9, 0x1
	0x028BDF14 ADD X10, X10, 0x10
	0x028BDF18 B.NE 0x28BDF04
	0x028BDF1C MOV X0, X20
	0x028BDF20 MOV W2, W31
	0x028BDF24 BL 0x1C5C788
	0x028BDF28 B 0x28BE0E0
	0x028BDF2C LDR W9, [X10]
	0x028BDF30 ADD W9, W9, 0x2C
	0x028BDF34 ADD X8, X8, W9, 0x4, SXTW
	0x028BDF38 ADD X0, X8, 0x138
	0x028BDF3C LDP X8, X1, [X0]
	0x028BDF40 MOV X0, X20
	0x028BDF44 BLR X8
	0x028BDF48 LDR X0, [X19 + 0x448]
	0x028BDF4C CBZ X0, 0x28BE348
	0x028BDF50 MOV X1, X31
	0x028BDF54 MOV V8.16B, V0.16B
	0x028BDF58 BL 0x3DE0EB8
	0x028BDF5C CBZ X0, 0x28BE348
	0x028BDF60 LDR X8, [X0]
	0x028BDF64 LDR X1, [X21]
	0x028BDF68 MOV X20, X0
	0x028BDF6C LDRH W9, [X8 + 0x12E]
	0x028BDF70 CBZ X9, 0x28BDF94
	0x028BDF74 LDR X10, [X8 + 0xB0]
	0x028BDF78 ADD X10, X10, 0x8
	0x028BDF7C LDUR X11, [X10 - 0x8]
	0x028BDF80 CMP X11, X1
	0x028BDF84 B.EQ 0x28BDFA4
	0x028BDF88 SUBS X9, X9, 0x1
	0x028BDF8C ADD X10, X10, 0x10
	0x028BDF90 B.NE 0x28BDF7C
	0x028BDF94 MOVZ W2, 0x16
	0x028BDF98 MOV X0, X20
	0x028BDF9C BL 0x1C5C788
	0x028BDFA0 B 0x28BDFB4
	0x028BDFA4 LDR W9, [X10]
	0x028BDFA8 ADD W9, W9, 0x16
	0x028BDFAC ADD X8, X8, W9, 0x4, SXTW
	0x028BDFB0 ADD X0, X8, 0x138
	0x028BDFB4 LDP X8, X1, [X0]
	0x028BDFB8 MOV X0, X20
	0x028BDFBC BLR X8
	0x028BDFC0 LDR X0, [X19 + 0x448]
	0x028BDFC4 CBZ X0, 0x28BE348
	0x028BDFC8 MOV X1, X31
	0x028BDFCC MOV V9.16B, V0.16B
	0x028BDFD0 BL 0x3DE0EB8
	0x028BDFD4 CBZ X0, 0x28BE348
	0x028BDFD8 LDR X8, [X0]
	0x028BDFDC LDR X1, [X21]
	0x028BDFE0 MOV X20, X0
	0x028BDFE4 LDRH W9, [X8 + 0x12E]
	0x028BDFE8 CBZ X9, 0x28BE00C
	0x028BDFEC LDR X10, [X8 + 0xB0]
	0x028BDFF0 ADD X10, X10, 0x8
	0x028BDFF4 LDUR X11, [X10 - 0x8]
	0x028BDFF8 CMP X11, X1
	0x028BDFFC B.EQ 0x28BE01C
	0x028BE000 SUBS X9, X9, 0x1
	0x028BE004 ADD X10, X10, 0x10
	0x028BE008 B.NE 0x28BDFF4
	0x028BE00C MOVZ W2, 0x17
	0x028BE010 MOV X0, X20
	0x028BE014 BL 0x1C5C788
	0x028BE018 B 0x28BE02C
	0x028BE01C LDR W9, [X10]
	0x028BE020 ADD W9, W9, 0x17
	0x028BE024 ADD X8, X8, W9, 0x4, SXTW
	0x028BE028 ADD X0, X8, 0x138
	0x028BE02C LDP X8, X1, [X0]
	0x028BE030 MOV X0, X20
	0x028BE034 BLR X8
	0x028BE038 LDR X0, [X19 + 0x440]
	0x028BE03C CBZ X0, 0x28BE348
	0x028BE040 FNEG S1, S9
	0x028BE044 MOV X1, X31
	0x028BE048 FSUB S9, S1, S0
	0x028BE04C BL 0x3DEC528
	0x028BE050 FSUB S0, S2, S8
	0x028BE054 FADD S0, S9, S0
	0x028BE058 FMUL S8, S11, S0
	0x028BE05C FMOV W8, S8
	0x028BE060 MOVZ W9, 0x1
	0x028BE064 AND W8, W8, 0x7FFFFFFF
	0x028BE068 MOVK W9, 0x7F800000
	0x028BE06C CMP W8, W9
	0x028BE070 B.CS 0x28BE1CC
	0x028BE074 LDR X0, [X19 + 0x448]
	0x028BE078 CBZ X0, 0x28BE348
	0x028BE07C MOV X1, X31
	0x028BE080 BL 0x3DEC1BC
	0x028BE084 CBZ X0, 0x28BE348
	0x028BE088 ADRP X21, 0x185F000
	0x028BE08C LDR X8, [X0]
	0x028BE090 LDR X21, [X21 + 0x688]
	0x028BE094 MOV X20, X0
	0x028BE098 LDRH W9, [X8 + 0x12E]
	0x028BE09C LDR X1, [X21]
	0x028BE0A0 CBZ X9, 0x28BE0C4
	0x028BE0A4 LDR X10, [X8 + 0xB0]
	0x028BE0A8 ADD X10, X10, 0x8
	0x028BE0AC LDUR X11, [X10 - 0x8]
	0x028BE0B0 CMP X11, X1
	0x028BE0B4 B.EQ 0x28BE150
	0x028BE0B8 SUBS X9, X9, 0x1
	0x028BE0BC ADD X10, X10, 0x10
	0x028BE0C0 B.NE 0x28BE0AC
	0x028BE0C4 MOV X0, X20
	0x028BE0C8 MOV W2, W31
	0x028BE0CC BL 0x1C5C788
	0x028BE0D0 B 0x28BE15C
	0x028BE0D4 LDRSW X9, [X10]
	0x028BE0D8 ADD X8, X8, X9, 0x4, LSL
	0x028BE0DC ADD X0, X8, 0x138
	0x028BE0E0 LDP X8, X1, [X0]
	0x028BE0E4 MOV X0, X20
	0x028BE0E8 BLR X8
	0x028BE0EC FABD S0, S8, S8
	0x028BE0F0 FCMP S0, S10
	0x028BE0F4 B.MI 0x28BE1CC
	0x028BE0F8 LDR X0, [X19 + 0x448]
	0x028BE0FC CBZ X0, 0x28BE348
	0x028BE100 MOV X1, X31
	0x028BE104 BL 0x3DEC1BC
	0x028BE108 CBZ X0, 0x28BE348
	0x028BE10C LDR X8, [X0]
	0x028BE110 LDR X1, [X21]
	0x028BE114 MOV X20, X0
	0x028BE118 LDRH W9, [X8 + 0x12E]
	0x028BE11C CBZ X9, 0x28BE140
	0x028BE120 LDR X10, [X8 + 0xB0]
	0x028BE124 ADD X10, X10, 0x8
	0x028BE128 LDUR X11, [X10 - 0x8]
	0x028BE12C CMP X11, X1
	0x028BE130 B.EQ 0x28BE1E4
	0x028BE134 SUBS X9, X9, 0x1
	0x028BE138 ADD X10, X10, 0x10
	0x028BE13C B.NE 0x28BE128
	0x028BE140 MOVZ W2, 0x1
	0x028BE144 MOV X0, X20
	0x028BE148 BL 0x1C5C788
	0x028BE14C B 0x28BE1F4
	0x028BE150 LDRSW X9, [X10]
	0x028BE154 ADD X8, X8, X9, 0x4, LSL
	0x028BE158 ADD X0, X8, 0x138
	0x028BE15C LDP X8, X1, [X0]
	0x028BE160 MOV X0, X20
	0x028BE164 BLR X8
	0x028BE168 FABD S0, S8, S8
	0x028BE16C FCMP S0, S10
	0x028BE170 B.MI 0x28BE1CC
	0x028BE174 LDR X0, [X19 + 0x448]
	0x028BE178 CBZ X0, 0x28BE348
	0x028BE17C MOV X1, X31
	0x028BE180 BL 0x3DEC1BC
	0x028BE184 CBZ X0, 0x28BE348
	0x028BE188 LDR X8, [X0]
	0x028BE18C LDR X1, [X21]
	0x028BE190 MOV X20, X0
	0x028BE194 LDRH W9, [X8 + 0x12E]
	0x028BE198 CBZ X9, 0x28BE1BC
	0x028BE19C LDR X10, [X8 + 0xB0]
	0x028BE1A0 ADD X10, X10, 0x8
	0x028BE1A4 LDUR X11, [X10 - 0x8]
	0x028BE1A8 CMP X11, X1
	0x028BE1AC B.EQ 0x28BE28C
	0x028BE1B0 SUBS X9, X9, 0x1
	0x028BE1B4 ADD X10, X10, 0x10
	0x028BE1B8 B.NE 0x28BE1A4
	0x028BE1BC MOVZ W2, 0x1
	0x028BE1C0 MOV X0, X20
	0x028BE1C4 BL 0x1C5C788
	0x028BE1C8 B 0x28BE29C
	0x028BE1CC LDP X20, X19, [X31 + 0x40]
	0x028BE1D0 LDP X22, X21, [X31 + 0x30]
	0x028BE1D4 LDR X30, [X31 + 0x20]
	0x028BE1D8 LDP D9, D8, [X31 + 0x10]
	0x028BE1DC LDP D11, D10, [X31], #0x50
	0x028BE1E0 RET
	0x028BE1E4 LDR W9, [X10]
	0x028BE1E8 ADD W9, W9, 0x1
	0x028BE1EC ADD X8, X8, W9, 0x4, SXTW
	0x028BE1F0 ADD X0, X8, 0x138
	0x028BE1F4 LDP X8, X1, [X0]
	0x028BE1F8 FMOV S0, W31
	0x028BE1FC FMOV S2, W31
	0x028BE200 MOV X0, X20
	0x028BE204 MOV V1.16B, V8.16B
	0x028BE208 BLR X8
	0x028BE20C LDR X0, [X19 + 0x458]
	0x028BE210 CBZ X0, 0x28BE348
	0x028BE214 MOV X1, X31
	0x028BE218 BL 0x3DEC1BC
	0x028BE21C CBZ X0, 0x28BE348
	0x028BE220 LDR X8, [X0]
	0x028BE224 LDR X1, [X21]
	0x028BE228 MOV X19, X0
	0x028BE22C LDRH W9, [X8 + 0x12E]
	0x028BE230 CBZ X9, 0x28BE254
	0x028BE234 LDR X10, [X8 + 0xB0]
	0x028BE238 ADD X10, X10, 0x8
	0x028BE23C LDUR X11, [X10 - 0x8]
	0x028BE240 CMP X11, X1
	0x028BE244 B.EQ 0x28BE264
	0x028BE248 SUBS X9, X9, 0x1
	0x028BE24C ADD X10, X10, 0x10
	0x028BE250 B.NE 0x28BE23C
	0x028BE254 MOVZ W2, 0x1
	0x028BE258 MOV X0, X19
	0x028BE25C BL 0x1C5C788
	0x028BE260 B 0x28BE274
	0x028BE264 LDR W9, [X10]
	0x028BE268 ADD W9, W9, 0x1
	0x028BE26C ADD X8, X8, W9, 0x4, SXTW
	0x028BE270 ADD X0, X8, 0x138
	0x028BE274 LDP X2, X1, [X0]
	0x028BE278 FMOV S0, W31
	0x028BE27C FMOV S2, W31
	0x028BE280 MOV X0, X19
	0x028BE284 MOV V1.16B, V8.16B
	0x028BE288 B 0x28BE330
	0x028BE28C LDR W9, [X10]
	0x028BE290 ADD W9, W9, 0x1
	0x028BE294 ADD X8, X8, W9, 0x4, SXTW
	0x028BE298 ADD X0, X8, 0x138
	0x028BE29C LDP X8, X1, [X0]
	0x028BE2A0 FMOV S1, W31
	0x028BE2A4 FMOV S2, W31
	0x028BE2A8 MOV X0, X20
	0x028BE2AC MOV V0.16B, V8.16B
	0x028BE2B0 BLR X8
	0x028BE2B4 LDR X0, [X19 + 0x458]
	0x028BE2B8 CBZ X0, 0x28BE348
	0x028BE2BC MOV X1, X31
	0x028BE2C0 BL 0x3DEC1BC
	0x028BE2C4 CBZ X0, 0x28BE348
	0x028BE2C8 LDR X8, [X0]
	0x028BE2CC LDR X1, [X21]
	0x028BE2D0 MOV X19, X0
	0x028BE2D4 LDRH W9, [X8 + 0x12E]
	0x028BE2D8 CBZ X9, 0x28BE2FC
	0x028BE2DC LDR X10, [X8 + 0xB0]
	0x028BE2E0 ADD X10, X10, 0x8
	0x028BE2E4 LDUR X11, [X10 - 0x8]
	0x028BE2E8 CMP X11, X1
	0x028BE2EC B.EQ 0x28BE30C
	0x028BE2F0 SUBS X9, X9, 0x1
	0x028BE2F4 ADD X10, X10, 0x10
	0x028BE2F8 B.NE 0x28BE2E4
	0x028BE2FC MOVZ W2, 0x1
	0x028BE300 MOV X0, X19
	0x028BE304 BL 0x1C5C788
	0x028BE308 B 0x28BE31C
	0x028BE30C LDR W9, [X10]
	0x028BE310 ADD W9, W9, 0x1
	0x028BE314 ADD X8, X8, W9, 0x4, SXTW
	0x028BE318 ADD X0, X8, 0x138
	0x028BE31C LDP X2, X1, [X0]

ISIL:
	001 Move [X31-96], D13
	002 Move [X31-88], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x1B1E000
	014 Move W8, [X21+3262]
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x1860000
	022 Move X0, [X0+288]
	023 Call 0x1C17CF4
	024 Move X0, 0x1861000
	025 Move X0, [X0+1672]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3262], W8
	029 Move X8, [X19+1152]
	030 Compare X8, 0
	031 JumpIfEqual {787}
	032 Move W8, [X8+128]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Compare W8, 0
	035 JumpIfNotEqual {248}
	036 Move X8, [X19]
	037 Move X0, X19
	038 Move X9, [X8+2280]
	039 Move X1, [X8+2288]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X21, 0x1B1D000
	042 Move W8, [X21+1450]
	043 Move V8, V0
	044 Compare W8, 0
	045 JumpIfNotEqual {51}
	046 Move X0, 0x183E000
	047 Move X0, [X0+1208]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X21+1450], W8
	051 Move X8, 0x183E000
	052 Move X8, [X8+1208]
	053 Move X9, -31268864
	054 Move V0, [X9+576]
	055 NotImplemented "Instruction FABS not yet implemented."
	056 Move X8, [X8]
	057 Move S2, W31
	058 NotImplemented "Instruction FMAXNM not yet implemented."
	059 Multiply S0, S1, S0
	060 Move X8, [X8+184]
	061 Move S1, 8
	062 Move V3, [X8]
	063 Multiply S1, S3, S1
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 NotImplemented "Instruction FCSEL not yet implemented."
	066 NotImplemented "Instruction FABD not yet implemented."
	067 NotImplemented "Instruction FCMP not yet implemented."
	068 Move X0, [X19+1088]
	069 Compare X0, 0
	070 JumpIfEqual {787}
	071 Move W23, [X19+1176]
	072 Move X1, X31
	073 Call VisualElement.get_resolvedStyle, X0
	074 Compare X0, 0
	075 JumpIfEqual {787}
	076 Move X22, 0x1860000
	077 Move X8, [X0]
	078 Move X22, [X22+288]
	079 Move X21, X0
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Move X1, [X22]
	082 Compare W23, 0
	083 JumpIfEqual {132}
	084 Compare W9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move W2, 19
	093 Move X0, X21
	094 Call 0x1C5D788
	095 Move X20, [X31+80]
	096 Move X19, [X31+88]
	097 Move X22, [X31+64]
	098 Move X21, [X31+72]
	099 Move X30, [X31+48]
	100 Move X23, [X31+56]
	101 Move D9, [X31+32]
	102 Move D8, [X31+40]
	103 Move D11, [X31+16]
	104 Move D10, [X31+24]
	105 Move D13, [X31+96]
	106 Move D12, [X31+104]
	107 Return 
	108 Move X0, [X19+1096]
	109 Compare X0, 0
	110 JumpIfEqual {787}
	111 Move X1, X31
	112 Call VisualElement.get_transform, X0
	113 Compare X0, 0
	114 JumpIfEqual {787}
	115 Move X21, 0x1861000
	116 Move X8, [X0]
	117 Move X21, [X21+1672]
	118 Move X20, X0
	119 NotImplemented "Instruction LDRH not yet implemented."
	120 Move X1, [X21]
	121 Compare X9, 0
	122 JumpIfEqual {129}
	123 Move X10, [X8+176]
	124 Add X10, X10, 8
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Subtract X9, X9, 1
	128 Add X10, X10, 16
	129 Move X0, X20
	130 Move W2, W31
	131 Call 0x1C5D788
	132 Compare W9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move W2, 44
	141 Move X0, X21
	142 Call 0x1C5D788
	143 NotImplemented "Instruction LDRSW not yet implemented."
	144 Add X8, X8, X9
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X1, [X0+8]
	148 Move X0, X20
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X0, [X19+1096]
	151 Compare X0, 0
	152 JumpIfEqual {787}
	153 Move X1, X31
	154 Move V8, V0
	155 Call VisualElement.get_transform, X0
	156 Compare X0, 0
	157 JumpIfEqual {787}
	158 Move X8, [X0]
	159 Move X1, [X21]
	160 Move X20, X0
	161 NotImplemented "Instruction LDRH not yet implemented."
	162 Compare X9, 0
	163 JumpIfEqual {170}
	164 Move X10, [X8+176]
	165 Add X10, X10, 8
	166 NotImplemented "Instruction LDUR not yet implemented."
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Subtract X9, X9, 1
	169 Add X10, X10, 16
	170 Move X0, X20
	171 Move W2, W31
	172 Call 0x1C5D788
	173 NotImplemented "Instruction LDRSW not yet implemented."
	174 Add X8, X8, X9
	175 Add X0, X8, 312
	176 Move X8, [X0]
	177 Move X1, [X0+8]
	178 Move X0, X20
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Move X0, [X19+1096]
	181 Compare X0, 0
	182 JumpIfEqual {787}
	183 Move X1, X31
	184 Move V9, V1
	185 Call VisualElement.get_resolvedStyle, X0
	186 Compare X0, 0
	187 JumpIfEqual {787}
	188 Move X21, 0x1860000
	189 Move X8, [X0]
	190 Move X21, [X21+288]
	191 Move X20, X0
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Move X1, [X21]
	194 Compare X9, 0
	195 JumpIfEqual {202}
	196 Move X10, [X8+176]
	197 Add X10, X10, 8
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Subtract X9, X9, 1
	201 Add X10, X10, 16
	202 Move W2, 44
	203 Move X0, X20
	204 Call 0x1C5D788
	205 Move W9, [X10]
	206 Add W9, W9, 44
	207 Add X8, X8, W9
	208 Add X0, X8, 312
	209 Move X8, [X0]
	210 Move X1, [X0+8]
	211 Move X0, X20
	212 NotImplemented "Instruction BLR not yet implemented."
	213 Move X0, [X19+1096]
	214 Compare X0, 0
	215 JumpIfEqual {787}
	216 Move X1, X31
	217 Move V10, V0
	218 Call VisualElement.get_resolvedStyle, X0
	219 Compare X0, 0
	220 JumpIfEqual {787}
	221 Move X8, [X0]
	222 Move X1, [X21]
	223 Move X20, X0
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 Compare X9, 0
	226 JumpIfEqual {233}
	227 Move X10, [X8+176]
	228 Add X10, X10, 8
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Subtract X9, X9, 1
	232 Add X10, X10, 16
	233 Move W2, 19
	234 Move X0, X20
	235 Call 0x1C5D788
	236 Move W9, [X10]
	237 Add W9, W9, 19
	238 Add X8, X8, W9
	239 Add X0, X8, 312
	240 Move X8, [X0]
	241 Move X1, [X0+8]
	242 Move X0, X20
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Move [X19+1160], S8
	245 Move [X19+1164], S9
	246 Move [X19+1168], S10
	247 Move [X19+1172], S0
	248 Move X0, [X19+1088]
	249 Compare X0, 0
	250 JumpIfEqual {787}
	251 Move W22, [X19+1176]
	252 Move X1, X31
	253 Call VisualElement.get_resolvedStyle, X0
	254 Compare X0, 0
	255 JumpIfEqual {787}
	256 Move X21, 0x1860000
	257 Move X8, [X0]
	258 Move X21, [X21+288]
	259 Move X20, X0
	260 NotImplemented "Instruction LDRH not yet implemented."
	261 Move X1, [X21]
	262 Compare W22, 0
	263 JumpIfEqual {275}
	264 Compare W9, 0
	265 JumpIfEqual {272}
	266 Move X10, [X8+176]
	267 Add X10, X10, 8
	268 NotImplemented "Instruction LDUR not yet implemented."
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Subtract X9, X9, 1
	271 Add X10, X10, 16
	272 Move W2, 19
	273 Move X0, X20
	274 Call 0x1C5D788
	275 Compare W9, 0
	276 JumpIfEqual {283}
	277 Move X10, [X8+176]
	278 Add X10, X10, 8
	279 NotImplemented "Instruction LDUR not yet implemented."
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Subtract X9, X9, 1
	282 Add X10, X10, 16
	283 Move W2, 44
	284 Move X0, X20
	285 Call 0x1C5D788
	286 Move W9, [X10]
	287 Add W9, W9, 19
	288 Add X8, X8, W9
	289 Add X0, X8, 312
	290 Move X8, [X0]
	291 Move X1, [X0+8]
	292 Move X0, X20
	293 NotImplemented "Instruction BLR not yet implemented."
	294 Move X0, [X19+1096]
	295 Compare X0, 0
	296 JumpIfEqual {787}
	297 Move X1, X31
	298 Move V8, V0
	299 Call VisualElement.get_resolvedStyle, X0
	300 Compare X0, 0
	301 JumpIfEqual {787}
	302 Move X8, [X0]
	303 Move X1, [X21]
	304 Move X20, X0
	305 NotImplemented "Instruction LDRH not yet implemented."
	306 Compare X9, 0
	307 JumpIfEqual {314}
	308 Move X10, [X8+176]
	309 Add X10, X10, 8
	310 NotImplemented "Instruction LDUR not yet implemented."
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Subtract X9, X9, 1
	313 Add X10, X10, 16
	314 Move W2, 19
	315 Move X0, X20
	316 Call 0x1C5D788
	317 Move W9, [X10]
	318 Add W9, W9, 19
	319 Add X8, X8, W9
	320 Add X0, X8, 312
	321 Move X8, [X0]
	322 Move X1, [X0+8]
	323 Move X0, X20
	324 NotImplemented "Instruction BLR not yet implemented."
	325 Move X0, [X19+1096]
	326 Compare X0, 0
	327 JumpIfEqual {787}
	328 Move X1, X31
	329 Move V9, V0
	330 Call VisualElement.get_transform, X0
	331 Compare X0, 0
	332 JumpIfEqual {787}
	333 Move X10, 0x1861000
	334 Move X8, [X0]
	335 Move X10, [X10+1672]
	336 Move X20, X0
	337 NotImplemented "Instruction LDRH not yet implemented."
	338 Move X1, [X10]
	339 Compare X9, 0
	340 JumpIfEqual {347}
	341 Move X10, [X8+176]
	342 Add X10, X10, 8
	343 NotImplemented "Instruction LDUR not yet implemented."
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Subtract X9, X9, 1
	346 Add X10, X10, 16
	347 Move X0, X20
	348 Move W2, W31
	349 Call 0x1C5D788
	350 NotImplemented "Instruction LDRSW not yet implemented."
	351 Add X8, X8, X9
	352 Add X0, X8, 312
	353 Move X8, [X0]
	354 Move X1, [X0+8]
	355 Move X0, X20
	356 NotImplemented "Instruction BLR not yet implemented."
	357 Move X8, [X19+1152]
	358 Compare X8, 0
	359 JumpIfEqual {787}
	360 Move X9, [X19]
	361 Move V3, [X8+88]
	362 Move V2, V1
	363 Move W9, [X10]
	364 Add W9, W9, 44
	365 Add X8, X8, W9
	366 Add X0, X8, 312
	367 Move X8, [X0]
	368 Move X1, [X0+8]
	369 Move X0, X20
	370 NotImplemented "Instruction BLR not yet implemented."
	371 Move X0, [X19+1096]
	372 Compare X0, 0
	373 JumpIfEqual {787}
	374 Move X1, X31
	375 Move V8, V0
	376 Call VisualElement.get_resolvedStyle, X0
	377 Compare X0, 0
	378 JumpIfEqual {787}
	379 Move X8, [X0]
	380 Move X1, [X21]
	381 Move X20, X0
	382 NotImplemented "Instruction LDRH not yet implemented."
	383 Compare X9, 0
	384 JumpIfEqual {391}
	385 Move X10, [X8+176]
	386 Add X10, X10, 8
	387 NotImplemented "Instruction LDUR not yet implemented."
	388 NotImplemented "Instruction CMP not yet implemented."
	389 Subtract X9, X9, 1
	390 Add X10, X10, 16
	391 Move W2, 44
	392 Move X0, X20
	393 Call 0x1C5D788
	394 Move W9, [X10]
	395 Add W9, W9, 44
	396 Add X8, X8, W9
	397 Add X0, X8, 312
	398 Move X8, [X0]
	399 Move X1, [X0+8]
	400 Move X0, X20
	401 NotImplemented "Instruction BLR not yet implemented."
	402 Move X0, [X19+1096]
	403 Compare X0, 0
	404 JumpIfEqual {787}
	405 Move X1, X31
	406 Move V9, V0
	407 Call VisualElement.get_transform, X0
	408 Compare X0, 0
	409 JumpIfEqual {787}
	410 Move X10, 0x1861000
	411 Move X8, [X0]
	412 Move X10, [X10+1672]
	413 Move X20, X0
	414 NotImplemented "Instruction LDRH not yet implemented."
	415 Move X1, [X10]
	416 Compare X9, 0
	417 JumpIfEqual {424}
	418 Move X10, [X8+176]
	419 Add X10, X10, 8
	420 NotImplemented "Instruction LDUR not yet implemented."
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Subtract X9, X9, 1
	423 Add X10, X10, 16
	424 Move X0, X20
	425 Move W2, W31
	426 Call 0x1C5D788
	427 NotImplemented "Instruction LDRSW not yet implemented."
	428 Add X8, X8, X9
	429 Add X0, X8, 312
	430 Move X8, [X0]
	431 Move X1, [X0+8]
	432 Move X0, X20
	433 NotImplemented "Instruction BLR not yet implemented."
	434 Move X8, [X19+1152]
	435 Compare X8, 0
	436 JumpIfEqual {787}
	437 Move X9, [X19]
	438 Move V3, [X8+84]
	439 Move V2, V0
	440 Move X2, [X9+2424]
	441 Move X1, [X9+2432]
	442 Move X0, X19
	443 Move V0, V8
	444 Move V1, V9
	445 Move X20, [X31+80]
	446 Move X19, [X31+88]
	447 Move X22, [X31+64]
	448 Move X21, [X31+72]
	449 Move X30, [X31+48]
	450 Move X23, [X31+56]
	451 Move D9, [X31+32]
	452 Move D8, [X31+40]
	453 Move D11, [X31+16]
	454 Move D10, [X31+24]
	455 Move D13, [X31+96]
	456 Move D12, [X31+104]
	457 CallNoReturn X2
	458 Move W9, [X10]
	459 Add W9, W9, 19
	460 Add X8, X8, W9
	461 Add X0, X8, 312
	462 Move X8, [X0]
	463 Move X1, [X0+8]
	464 Move X0, X21
	465 NotImplemented "Instruction BLR not yet implemented."
	466 Move X0, [X19+1096]
	467 Compare X0, 0
	468 JumpIfEqual {787}
	469 Move X1, X31
	470 Move V8, V0
	471 Call VisualElement.get_resolvedStyle, X0
	472 Compare X0, 0
	473 JumpIfEqual {787}
	474 Move X8, [X0]
	475 Move X1, [X22]
	476 Move X21, X0
	477 NotImplemented "Instruction LDRH not yet implemented."
	478 Compare X9, 0
	479 JumpIfEqual {486}
	480 Move X10, [X8+176]
	481 Add X10, X10, 8
	482 NotImplemented "Instruction LDUR not yet implemented."
	483 NotImplemented "Instruction CMP not yet implemented."
	484 Subtract X9, X9, 1
	485 Add X10, X10, 16
	486 Move W2, 19
	487 Move X0, X21
	488 Call 0x1C5D788
	489 Move W9, [X10]
	490 Add W9, W9, 19
	491 Add X8, X8, W9
	492 Add X0, X8, 312
	493 Move X8, [X0]
	494 Move X1, [X0+8]
	495 Move X0, X21
	496 NotImplemented "Instruction BLR not yet implemented."
	497 Move X8, [X19+1152]
	498 Compare X8, 0
	499 JumpIfEqual {787}
	500 Move X0, [X19+1096]
	501 Compare X0, 0
	502 JumpIfEqual {787}
	503 Move V11, [X8+148]
	504 Move X1, X31
	505 Move V9, V0
	506 Call VisualElement.get_transform, X0
	507 Compare X0, 0
	508 JumpIfEqual {787}
	509 Move X10, 0x1861000
	510 Move X8, [X0]
	511 Move X10, [X10+1672]
	512 Move S0, -0.5
	513 Multiply S0, S9, S0
	514 NotImplemented "Instruction LDRH not yet implemented."
	515 Move X1, [X10]
	516 Move X21, X0
	517 Subtract S10, S8, S9
	518 Add S12, S11, S0
	519 Compare X9, 0
	520 JumpIfEqual {527}
	521 Move X10, [X8+176]
	522 Add X10, X10, 8
	523 NotImplemented "Instruction LDUR not yet implemented."
	524 NotImplemented "Instruction CMP not yet implemented."
	525 Subtract X9, X9, 1
	526 Add X10, X10, 16
	527 Move X0, X21
	528 Move W2, W31
	529 Call 0x1C5D788
	530 NotImplemented "Instruction LDRSW not yet implemented."
	531 Add X8, X8, X9
	532 Add X0, X8, 312
	533 Move X8, [X0]
	534 Move X1, [X0+8]
	535 Move X0, X21
	536 NotImplemented "Instruction BLR not yet implemented."
	537 NotImplemented "Instruction FCMP not yet implemented."
	538 Move V11, V0
	539 NotImplemented "Instruction FCSEL not yet implemented."
	540 Move S1, W31
	541 NotImplemented "Instruction FMAX not yet implemented."
	542 Move V12, V10
	543 Move W9, [X10]
	544 Add W9, W9, 44
	545 Add X8, X8, W9
	546 Add X0, X8, 312
	547 Move X8, [X0]
	548 Move X1, [X0+8]
	549 Move X0, X21
	550 NotImplemented "Instruction BLR not yet implemented."
	551 Move X0, [X19+1096]
	552 Compare X0, 0
	553 JumpIfEqual {787}
	554 Move X1, X31
	555 Move V8, V0
	556 Call VisualElement.get_resolvedStyle, X0
	557 Compare X0, 0
	558 JumpIfEqual {787}
	559 Move X8, [X0]
	560 Move X1, [X22]
	561 Move X21, X0
	562 NotImplemented "Instruction LDRH not yet implemented."
	563 Compare X9, 0
	564 JumpIfEqual {571}
	565 Move X10, [X8+176]
	566 Add X10, X10, 8
	567 NotImplemented "Instruction LDUR not yet implemented."
	568 NotImplemented "Instruction CMP not yet implemented."
	569 Subtract X9, X9, 1
	570 Add X10, X10, 16
	571 Move W2, 44
	572 Move X0, X21
	573 Call 0x1C5D788
	574 Move W9, [X10]
	575 Add W9, W9, 44
	576 Add X8, X8, W9
	577 Add X0, X8, 312
	578 Move X8, [X0]
	579 Move X1, [X0+8]
	580 Move X0, X21
	581 NotImplemented "Instruction BLR not yet implemented."
	582 Move X8, [X19+1152]
	583 Compare X8, 0
	584 JumpIfEqual {787}
	585 Move V1, [X8+144]
	586 Move V9, V0
	587 Move S2, -0.5
	588 Move X0, [X19+1096]
	589 Multiply S2, S9, S2
	590 Subtract S0, S8, S0
	591 Add S1, S1, S2
	592 NotImplemented "Instruction FCMP not yet implemented."
	593 NotImplemented "Instruction FCSEL not yet implemented."
	594 Compare X0, 0
	595 JumpIfEqual {787}
	596 Move X1, X31
	597 Call VisualElement.get_transform, X0
	598 Compare X0, 0
	599 JumpIfEqual {787}
	600 Move X10, 0x1860000
	601 Move X8, [X0]
	602 Move X10, [X10+1672]
	603 Move X21, X0
	604 Move S11, W31
	605 NotImplemented "Instruction LDRH not yet implemented."
	606 Move X1, [X10]
	607 Compare X9, 0
	608 JumpIfEqual {615}
	609 Move X10, [X8+176]
	610 Add X10, X10, 8
	611 NotImplemented "Instruction LDUR not yet implemented."
	612 NotImplemented "Instruction CMP not yet implemented."
	613 Subtract X9, X9, 1
	614 Add X10, X10, 16
	615 Move X0, X21
	616 Move W2, W31
	617 Call 0x1C5D788
	618 NotImplemented "Instruction LDRSW not yet implemented."
	619 Add X8, X8, X9
	620 Add X0, X8, 312
	621 Move X8, [X0]
	622 Move X1, [X0+8]
	623 Move X0, X21
	624 NotImplemented "Instruction FMAX not yet implemented."
	625 NotImplemented "Instruction BLR not yet implemented."
	626 Move V12, V1
	627 Move V11, V10
	628 Move X0, [X19+1096]
	629 Compare X0, 0
	630 JumpIfEqual {787}
	631 Move X1, X31
	632 Call VisualElement.get_transform, X0
	633 Compare X0, 0
	634 JumpIfEqual {787}
	635 Move X23, 0x1860000
	636 Move X8, [X0]
	637 Move X23, [X23+1672]
	638 Move X21, X0
	639 NotImplemented "Instruction LDRH not yet implemented."
	640 Move X1, [X23]
	641 Compare X9, 0
	642 JumpIfEqual {649}
	643 Move X10, [X8+176]
	644 Add X10, X10, 8
	645 NotImplemented "Instruction LDUR not yet implemented."
	646 NotImplemented "Instruction CMP not yet implemented."
	647 Subtract X9, X9, 1
	648 Add X10, X10, 16
	649 Move W2, 1
	650 Move X0, X21
	651 Call 0x1C5D788
	652 Move W9, [X10]
	653 Add W9, W9, 1
	654 Add X8, X8, W9
	655 Add X0, X8, 312
	656 Move X8, [X0]
	657 Move X1, [X0+8]
	658 Move S2, W31
	659 Move X0, X21
	660 Move V0, V11
	661 Move V1, V12
	662 NotImplemented "Instruction BLR not yet implemented."
	663 Move X0, [X19+1112]
	664 Compare X0, 0
	665 JumpIfEqual {787}
	666 Move X1, X31
	667 Call VisualElement.get_transform, X0
	668 Compare X0, 0
	669 JumpIfEqual {787}
	670 Move X8, [X0]
	671 Move X1, [X23]
	672 Move X21, X0
	673 NotImplemented "Instruction LDRH not yet implemented."
	674 Compare X9, 0
	675 JumpIfEqual {682}
	676 Move X10, [X8+176]
	677 Add X10, X10, 8
	678 NotImplemented "Instruction LDUR not yet implemented."
	679 NotImplemented "Instruction CMP not yet implemented."
	680 Subtract X9, X9, 1
	681 Add X10, X10, 16
	682 Move W2, 1
	683 Move X0, X21
	684 Call 0x1C5D788
	685 Move W9, [X10]
	686 Add W9, W9, 1
	687 Add X8, X8, W9
	688 Add X0, X8, 312
	689 Move X8, [X0]
	690 Move X1, [X0+8]
	691 Move S2, W31
	692 Move X0, X21
	693 Move V0, V11
	694 Move V1, V12
	695 NotImplemented "Instruction BLR not yet implemented."
	696 Move X0, [X19+1096]
	697 Compare X0, 0
	698 JumpIfEqual {787}
	699 Move X1, X31
	700 Call VisualElement.get_resolvedStyle, X0
	701 Compare X0, 0
	702 JumpIfEqual {787}
	703 Move X8, [X0]
	704 Move X1, [X22]
	705 Move X21, X0
	706 NotImplemented "Instruction LDRH not yet implemented."
	707 Compare X9, 0
	708 JumpIfEqual {715}
	709 Move X10, [X8+176]
	710 Add X10, X10, 8
	711 NotImplemented "Instruction LDUR not yet implemented."
	712 NotImplemented "Instruction CMP not yet implemented."
	713 Subtract X9, X9, 1
	714 Add X10, X10, 16
	715 Move W2, 44
	716 Move X0, X21
	717 Call 0x1C5D788
	718 Move W9, [X10]
	719 Add W9, W9, 44
	720 Add X8, X8, W9
	721 Add X0, X8, 312
	722 Move X8, [X0]
	723 Move X1, [X0+8]
	724 Move X0, X21
	725 NotImplemented "Instruction BLR not yet implemented."
	726 Move X0, [X19+1096]
	727 Compare X0, 0
	728 JumpIfEqual {787}
	729 Move X1, X31
	730 Move V13, V0
	731 Call VisualElement.get_resolvedStyle, X0
	732 Compare X0, 0
	733 JumpIfEqual {787}
	734 Move X8, [X0]
	735 Move X1, [X22]
	736 Move X21, X0
	737 NotImplemented "Instruction LDRH not yet implemented."
	738 Compare X9, 0
	739 JumpIfEqual {746}
	740 Move X10, [X8+176]
	741 Add X10, X10, 8
	742 NotImplemented "Instruction LDUR not yet implemented."
	743 NotImplemented "Instruction CMP not yet implemented."
	744 Subtract X9, X9, 1
	745 Add X10, X10, 16
	746 Move W2, 19
	747 Move X0, X21
	748 Call 0x1C5D788
	749 Move W9, [X10]
	750 Add W9, W9, 19
	751 Add X8, X8, W9
	752 Add X0, X8, 312
	753 Move X8, [X0]
	754 Move X1, [X0+8]
	755 Move X0, X21
	756 NotImplemented "Instruction BLR not yet implemented."
	757 Move X8, [X19+1152]
	758 Move [X19+1160], S11
	759 Move [X19+1164], S12
	760 Move [X19+1168], S13
	761 Move [X19+1172], S0
	762 Compare X8, 0
	763 JumpIfEqual {787}
	764 Move X9, [X20+32]
	765 Move W10, 4
	766 Move X0, X19
	767 Move V0, V8
	768 Move X9, [X9+192]
	769 Move [X8+128], W10
	770 Move V1, V9
	771 Move V2, V10
	772 Move X1, [X9+456]
	773 Move X20, [X31+80]
	774 Move X19, [X31+88]
	775 Move X22, [X31+64]
	776 Move X21, [X31+72]
	777 Move X30, [X31+48]
	778 Move X23, [X31+56]
	779 Move D9, [X31+32]
	780 Move D8, [X31+40]
	781 Move D11, [X31+16]
	782 Move D10, [X31+24]
	783 Move D13, [X31+96]
	784 Move D12, [X31+104]
	785 Call 0x28BD720, X0, V0, V1, V2
	786 Return 
	787 Call 0x1C17F20

Method: System.Void OnKeyDown(UnityEngine.UIElements.KeyDownEvent evt)

Disassembly:
	0x028BE320 FMOV S1, W31
	0x028BE324 FMOV S2, W31
	0x028BE328 MOV X0, X19
	0x028BE32C MOV V0.16B, V8.16B
	0x028BE330 LDP X20, X19, [X31 + 0x40]
	0x028BE334 LDP X22, X21, [X31 + 0x30]
	0x028BE338 LDR X30, [X31 + 0x20]
	0x028BE33C LDP D9, D8, [X31 + 0x10]
	0x028BE340 LDP D11, D10, [X31], #0x50
	0x028BE344 BR X2
	0x028BE348 BL 0x1C16F20
	0x028BE34C STP X30, X23, [X31 - 0x30]!
	0x028BE350 STP X22, X21, [X31 + 0x10]
	0x028BE354 STP X20, X19, [X31 + 0x20]
	0x028BE358 ADRP X22, 0x1B1C000
	0x028BE35C LDRB W8, [X22 + 0xCC3]
	0x028BE360 MOV X20, X2
	0x028BE364 MOV X19, X1
	0x028BE368 MOV X21, X0
	0x028BE36C TBNZ X8, 0x0, 0x28BE39C
	0x028BE370 ADRP X0, 0x1860000
	0x028BE374 LDR X0, [X0 + 0x150]
	0x028BE378 BL 0x1C16CF4
	0x028BE37C ADRP X0, 0x1860000
	0x028BE380 LDR X0, [X0 + 0x158]
	0x028BE384 BL 0x1C16CF4
	0x028BE388 ADRP X0, 0x1860000
	0x028BE38C LDR X0, [X0 + 0x160]
	0x028BE390 BL 0x1C16CF4
	0x028BE394 MOVZ W8, 0x1
	0x028BE398 STRB W8, [X22 + 0xCC3]
	0x028BE39C CBZ X21, 0x28BE464
	0x028BE3A0 MOV X0, X21
	0x028BE3A4 MOV X1, X19
	0x028BE3A8 MOV X2, X31
	0x028BE3AC BL 0x3DEF858
	0x028BE3B0 CBZ X19, 0x28BE454
	0x028BE3B4 LDR X8, [X19]
	0x028BE3B8 ADRP X22, 0x1860000
	0x028BE3BC ADRP X23, 0x1860000
	0x028BE3C0 MOV X0, X19
	0x028BE3C4 LDP X9, X1, [X8 + 0x188]
	0x028BE3C8 LDR X22, [X22 + 0x158]
	0x028BE3CC LDR X23, [X23 + 0x150]
	0x028BE3D0 BLR X9
	0x028BE3D4 LDR X8, [X22]
	0x028BE3D8 MOV X22, X0
	0x028BE3DC LDR W9, [X8 + 0xE0]
	0x028BE3E0 CBNZ W9, 0x28BE3EC
	0x028BE3E4 MOV X0, X8
	0x028BE3E8 BL 0x1C16DFC
	0x028BE3EC LDR X0, [X23]
	0x028BE3F0 BL 0x2D0D5C8
	0x028BE3F4 CMP X22, X0
	0x028BE3F8 B.NE 0x28BE454
	0x028BE3FC ADRP X9, 0x1860000
	0x028BE400 LDR X9, [X9 + 0x160]
	0x028BE404 LDR X8, [X19]
	0x028BE408 LDR X1, [X9]
	0x028BE40C LDRB W10, [X8 + 0x130]
	0x028BE410 LDRB W9, [X1 + 0x130]
	0x028BE414 CMP W10, W9
	0x028BE418 B.CC 0x28BE468
	0x028BE41C LDR X8, [X8 + 0xC8]
	0x028BE420 ADD X8, X8, X9, 0x3, LSL
	0x028BE424 LDUR X8, [X8 - 0x8]
	0x028BE428 CMP X8, X1
	0x028BE42C B.NE 0x28BE468
	0x028BE430 LDR X8, [X20 + 0x20]
	0x028BE434 MOV X0, X21
	0x028BE438 MOV X1, X19
	0x028BE43C LDP X20, X19, [X31 + 0x20]
	0x028BE440 LDR X8, [X8 + 0xC0]
	0x028BE444 LDP X22, X21, [X31 + 0x10]
	0x028BE448 LDR X2, [X8 + 0x108]
	0x028BE44C LDP X30, X23, [X31], #0x30
	0x028BE450 B 0x28BDC1C
	0x028BE454 LDP X20, X19, [X31 + 0x20]
	0x028BE458 LDP X22, X21, [X31 + 0x10]
	0x028BE45C LDP X30, X23, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1B1D000
	006 Move W8, [X21+3263]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x1861000
	014 Move X0, [X0+304]
	015 Call 0x1C17CF4
	016 Move X0, 0x1861000
	017 Move X0, [X0+312]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3263], W8
	021 Move W8, [X20+1176]
	022 Compare W8, 0
	023 JumpIfEqual {35}
	024 Compare X19, 0
	025 JumpIfEqual {88}
	026 Move W8, [X19+140]
	027 Subtract W8, W8, 278
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, -30998528
	030 Add X9, X9, 3444
	031 NotImplemented "Instruction ADR not yet implemented."
	032 Move W11, [X9]
	033 Add X10, X10, X11
	034 CallNoReturn X10
	035 Compare X19, 0
	036 JumpIfEqual {88}
	037 Move W8, [X19+140]
	038 Subtract W8, W8, 278
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X9, -30998528
	041 Add X9, X9, 3448
	042 NotImplemented "Instruction ADR not yet implemented."
	043 Move W11, [X9]
	044 Add X10, X10, X11
	045 CallNoReturn X10
	046 Move W8, [X20+1180]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W8, 6
	049 NotImplemented "Instruction CSINC not yet implemented."
	050 Move W8, [X20+1180]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W8, 6
	053 NotImplemented "Instruction CSINC not yet implemented."
	054 Move W8, [X20+1180]
	055 Move W9, 5
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W8, 2
	058 Move W8, [X20+1180]
	059 Move W9, 2
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W8, 5
	062 NotImplemented "Instruction CSEL not yet implemented."
	063 Move X8, 0x1861000
	064 Move X8, [X8+312]
	065 Move X0, X19
	066 Move X1, [X8]
	067 Call 0x2EE7C18, X0
	068 Move X8, [X20]
	069 And W2, W0, 1
	070 Move X0, X20
	071 Move W1, W21
	072 Move X9, [X8+2408]
	073 Move X3, [X8+2416]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X0, X19
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X1, X31
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Call EventBase.StopPropagation, X0
	082 Return 
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move X30, [X31+32]
	086 Move X21, [X31+40]
	087 Return 
	088 Call 0x1C17F20

Method: System.Void OnNavigationMove(UnityEngine.UIElements.NavigationMoveEvent evt)

Disassembly:
	0x028BE460 RET
	0x028BE464 BL 0x1C16F20
	0x028BE468 MOV X0, X19
	0x028BE46C BL 0x1C171E0
	0x028BE470 STR X30, [X31 - 0x30]!
	0x028BE474 STP X22, X21, [X31 + 0x10]
	0x028BE478 STP X20, X19, [X31 + 0x20]
	0x028BE47C ADRP X21, 0x1B1C000
	0x028BE480 LDRB W8, [X21 + 0xCC4]
	0x028BE484 MOV X20, X1
	0x028BE488 MOV X19, X0
	0x028BE48C TBNZ X8, 0x0, 0x28BE540
	0x028BE490 ADRP X0, 0x185F000
	0x028BE494 LDR X0, [X0 + 0xDA0]
	0x028BE498 BL 0x1C16CF4
	0x028BE49C ADRP X0, 0x185F000
	0x028BE4A0 LDR X0, [X0 + 0xDA8]
	0x028BE4A4 BL 0x1C16CF4
	0x028BE4A8 ADRP X0, 0x1860000
	0x028BE4AC LDR X0, [X0 + 0xF8]
	0x028BE4B0 BL 0x1C16CF4
	0x028BE4B4 ADRP X0, 0x185F000
	0x028BE4B8 LDR X0, [X0 + 0xDB8]
	0x028BE4BC BL 0x1C16CF4
	0x028BE4C0 ADRP X0, 0x185F000
	0x028BE4C4 LDR X0, [X0 + 0xDC0]
	0x028BE4C8 BL 0x1C16CF4
	0x028BE4CC ADRP X0, 0x1860000
	0x028BE4D0 LDR X0, [X0 + 0x168]
	0x028BE4D4 BL 0x1C16CF4
	0x028BE4D8 ADRP X0, 0x185F000
	0x028BE4DC LDR X0, [X0 + 0xD98]
	0x028BE4E0 BL 0x1C16CF4
	0x028BE4E4 ADRP X0, 0x185F000
	0x028BE4E8 LDR X0, [X0 + 0xDB0]
	0x028BE4EC BL 0x1C16CF4
	0x028BE4F0 ADRP X0, 0x1860000
	0x028BE4F4 LDR X0, [X0 + 0x170]
	0x028BE4F8 BL 0x1C16CF4
	0x028BE4FC ADRP X0, 0x1860000
	0x028BE500 LDR X0, [X0 + 0x108]
	0x028BE504 BL 0x1C16CF4
	0x028BE508 ADRP X0, 0x1860000
	0x028BE50C LDR X0, [X0 + 0x178]
	0x028BE510 BL 0x1C16CF4
	0x028BE514 ADRP X0, 0x1860000
	0x028BE518 LDR X0, [X0 + 0x180]
	0x028BE51C BL 0x1C16CF4
	0x028BE520 ADRP X0, 0x1860000
	0x028BE524 LDR X0, [X0 + 0x188]
	0x028BE528 BL 0x1C16CF4
	0x028BE52C ADRP X0, 0x1860000
	0x028BE530 LDR X0, [X0 + 0x190]
	0x028BE534 BL 0x1C16CF4
	0x028BE538 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1B1D000
	006 Move W8, [X21+3264]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1861000
	014 Move X0, [X0+320]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3264], W8
	018 Compare X19, 0
	019 JumpIfEqual {63}
	020 Move W9, [X20+1176]
	021 Move W8, [X19+140]
	022 Move W10, 4
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSINC not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W8, [X20+1180]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W8, 3
	029 NotImplemented "Instruction CINC not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W9, 2
	032 NotImplemented "Instruction CINC not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, [X20+1180]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, 3
	037 NotImplemented "Instruction CINC not yet implemented."
	038 Move X8, 0x1861000
	039 Move X8, [X8+320]
	040 Move X0, X19
	041 Move X1, [X8]
	042 Call 0x240A990, X0
	043 Move X8, [X20]
	044 And W2, W0, 1
	045 Move X0, X20
	046 Move W1, W21
	047 Move X9, [X8+2408]
	048 Move X3, [X8+2416]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X0, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X1, X31
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Call EventBase.StopPropagation, X0
	057 Return 
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return 
	063 Call 0x1C17F20

Method: System.Void ComputeValueAndDirectionFromClick(System.Single sliderLength, System.Single dragElementLength, System.Single dragElementPos, System.Single dragElementLastPos)

Disassembly:
	0x028BE53C STRB W8, [X21 + 0xCC4]
	0x028BE540 LDR X8, [X19]
	0x028BE544 MOV X0, X19
	0x028BE548 LDR X9, [X8 + 0x908]
	0x028BE54C LDR X1, [X8 + 0x910]
	0x028BE550 BLR X9
	0x028BE554 LDR X8, [X19 + 0x460]
	0x028BE558 TBZ X0, 0x0, 0x28BE768
	0x028BE55C CBNZ X8, 0x28BE8DC
	0x028BE560 ADRP X8, 0x1860000
	0x028BE564 LDR X8, [X8 + 0x188]
	0x028BE568 LDR X0, [X8]
	0x028BE56C BL 0x1C16F10
	0x028BE570 MOV X1, X31
	0x028BE574 MOV X21, X0
	0x028BE578 BL 0x3D682EC
	0x028BE57C CBZ X21, 0x28BE8EC
	0x028BE580 ADRP X8, 0x1860000
	0x028BE584 LDR X8, [X8 + 0x190]
	0x028BE588 MOV X0, X21
	0x028BE58C MOV X2, X31
	0x028BE590 LDR X1, [X8]
	0x028BE594 BL 0x3DEF278
	0x028BE598 LDR X8, [X20 + 0x20]
	0x028BE59C LDR X8, [X8 + 0xC0]
	0x028BE5A0 STR X21, [X19 + 0x460]
	0x028BE5A4 LDR X0, [X8 + 0xB0]
	0x028BE5A8 LDRB W8, [X0 + 0x135]
	0x028BE5AC TBNZ X8, 0x0, 0x28BE5B4
	0x028BE5B0 BL 0x1C5C684
	0x028BE5B4 LDR W8, [X0 + 0xE0]
	0x028BE5B8 CBNZ W8, 0x28BE5C0
	0x028BE5BC BL 0x1C16DFC
	0x028BE5C0 LDR X8, [X20 + 0x20]
	0x028BE5C4 LDR X8, [X8 + 0xC0]
	0x028BE5C8 LDR X0, [X8 + 0xB0]
	0x028BE5CC LDRB W8, [X0 + 0x135]
	0x028BE5D0 TBNZ X8, 0x0, 0x28BE5D8
	0x028BE5D4 BL 0x1C5C684
	0x028BE5D8 LDR X8, [X0 + 0xB8]
	0x028BE5DC MOV X0, X21
	0x028BE5E0 MOV X2, X31
	0x028BE5E4 LDR X1, [X8 + 0x48]
	0x028BE5E8 BL 0x3DF1C70
	0x028BE5EC ADRP X8, 0x1860000
	0x028BE5F0 LDR X21, [X19 + 0x460]
	0x028BE5F4 LDR X8, [X8 + 0x108]
	0x028BE5F8 LDR X0, [X8]
	0x028BE5FC BL 0x1C16F10
	0x028BE600 LDR X8, [X20 + 0x20]
	0x028BE604 MOV X1, X19
	0x028BE608 MOV X3, X31
	0x028BE60C MOV X22, X0
	0x028BE610 LDR X8, [X8 + 0xC0]
	0x028BE614 LDR X2, [X8 + 0x238]
	0x028BE618 BL 0x2D0E824
	0x028BE61C CBZ X21, 0x28BE8EC
	0x028BE620 ADRP X8, 0x1860000
	0x028BE624 LDR X8, [X8 + 0xF8]
	0x028BE628 MOVZ W2, 0x1
	0x028BE62C MOV X0, X21
	0x028BE630 MOV X1, X22
	0x028BE634 LDR X3, [X8]
	0x028BE638 BL 0x21A1534
	0x028BE63C ADRP X8, 0x1860000
	0x028BE640 LDR X21, [X19 + 0x460]
	0x028BE644 LDR X8, [X8 + 0x170]
	0x028BE648 LDR X0, [X8]
	0x028BE64C BL 0x1C16F10
	0x028BE650 LDR X8, [X20 + 0x20]
	0x028BE654 MOV X1, X19
	0x028BE658 MOV X3, X31
	0x028BE65C MOV X22, X0
	0x028BE660 LDR X8, [X8 + 0xC0]
	0x028BE664 LDR X2, [X8 + 0x240]
	0x028BE668 BL 0x2D0E824
	0x028BE66C ADRP X8, 0x1860000
	0x028BE670 LDR X8, [X8 + 0x178]
	0x028BE674 MOV X0, X21
	0x028BE678 MOV X1, X22
	0x028BE67C LDR X2, [X8]
	0x028BE680 BL 0x21EF268

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, -31277056
	010 Move V8, V2
	011 Move V2, [X8+3996]
	012 NotImplemented "Instruction FABD not yet implemented."
	013 NotImplemented "Instruction FCMP not yet implemented."
	014 Move X8, [X0]
	015 Move X20, X1
	016 Move W21, [X0+1180]
	017 Subtract S9, S0, S1
	018 Move X9, [X8+2280]
	019 Move X1, [X8+2288]
	020 NotImplemented "Instruction FCMP not yet implemented."
	021 Add S0, S1, S8
	022 NotImplemented "Instruction CSET not yet implemented."
	023 NotImplemented "Instruction FCMP not yet implemented."
	024 Move X19, X0
	025 NotImplemented "Instruction CSET not yet implemented."
	026 NotImplemented "Instruction BLR not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction FNEG not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 NotImplemented "Instruction FCSEL not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X9, [X19+1152]
	034 Compare X9, 0
	035 JumpIfEqual {92}
	036 Move W10, [X9+128]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Compare W8, 0
	039 JumpIfEqual {45}
	040 Move X8, [X19+1152]
	041 Compare X8, 0
	042 JumpIfEqual {92}
	043 Move W9, [X8+128]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X30, [X31+16]
	050 Move X23, [X31+24]
	051 Move D9, [X31+64]
	052 Move D8, [X31+72]
	053 Return 
	054 Move X8, [X20+32]
	055 Move W10, 2
	056 Subtract S0, S8, S0
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 Move X8, [X8+192]
	059 Move [X9+128], W10
	060 Move W1, [X19+1132]
	061 Move W2, [X19+1136]
	062 Move X3, [X8+464]
	063 Move X9, [X20+32]
	064 Move W10, 1
	065 Add S0, S0, S8
	066 NotImplemented "Instruction FCMP not yet implemented."
	067 Move X9, [X9+192]
	068 Move [X8+128], W10
	069 Move W1, [X19+1132]
	070 Move W2, [X19+1136]
	071 Move X3, [X9+464]
	072 NotImplemented "Instruction FCSEL not yet implemented."
	073 Move S1, W31
	074 NotImplemented "Instruction FMAX not yet implemented."
	075 NotImplemented "Instruction FDIV not yet implemented."
	076 Move X0, X19
	077 Call 0x28BD44C, X0, X1, X2, V0
	078 Move X8, [X19]
	079 Move W1, W0
	080 Move X0, X19
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X3, [X8+2040]
	084 Move X2, [X8+2048]
	085 Move X22, [X31+32]
	086 Move X21, [X31+40]
	087 Move X30, [X31+16]
	088 Move X23, [X31+24]
	089 Move D9, [X31+64]
	090 Move D8, [X31+72]
	091 CallNoReturn X3
	092 Call 0x1C17F20

Method: System.Void AdjustDragElement(System.Single factor)

Disassembly:
	0x028BE684 ADRP X8, 0x185F000
	0x028BE688 LDR X21, [X19 + 0x460]
	0x028BE68C LDR X8, [X8 + 0xD98]
	0x028BE690 LDR X0, [X8]
	0x028BE694 BL 0x1C16F10
	0x028BE698 LDR X8, [X20 + 0x20]
	0x028BE69C MOV X1, X19
	0x028BE6A0 MOV X3, X31
	0x028BE6A4 MOV X22, X0
	0x028BE6A8 LDR X8, [X8 + 0xC0]
	0x028BE6AC LDR X2, [X8 + 0x248]
	0x028BE6B0 BL 0x2D0E824
	0x028BE6B4 CBZ X21, 0x28BE8EC
	0x028BE6B8 ADRP X8, 0x185F000
	0x028BE6BC LDR X8, [X8 + 0xDA0]
	0x028BE6C0 MOV X0, X21
	0x028BE6C4 MOV X1, X22
	0x028BE6C8 MOV W2, W31
	0x028BE6CC LDR X3, [X8]
	0x028BE6D0 BL 0x21A1534
	0x028BE6D4 ADRP X8, 0x185F000
	0x028BE6D8 LDR X21, [X19 + 0x460]
	0x028BE6DC LDR X8, [X8 + 0xDB0]
	0x028BE6E0 LDR X0, [X8]
	0x028BE6E4 BL 0x1C16F10
	0x028BE6E8 LDR X8, [X20 + 0x20]
	0x028BE6EC MOV X1, X19
	0x028BE6F0 MOV X3, X31
	0x028BE6F4 MOV X22, X0
	0x028BE6F8 LDR X8, [X8 + 0xC0]
	0x028BE6FC LDR X2, [X8 + 0x250]
	0x028BE700 BL 0x2D0E824
	0x028BE704 CBZ X21, 0x28BE8EC
	0x028BE708 ADRP X8, 0x185F000
	0x028BE70C LDR X8, [X8 + 0xDA8]
	0x028BE710 MOV X0, X21
	0x028BE714 MOV X1, X22
	0x028BE718 MOV W2, W31
	0x028BE71C LDR X3, [X8]
	0x028BE720 BL 0x21A1534
	0x028BE724 LDR X8, [X20 + 0x20]
	0x028BE728 MOV X0, X19
	0x028BE72C LDR X8, [X8 + 0xC0]
	0x028BE730 LDR X1, [X8 + 0xD0]
	0x028BE734 BL 0x277EF20
	0x028BE738 CBZ X0, 0x28BE8EC
	0x028BE73C LDR X1, [X19 + 0x460]
	0x028BE740 MOV X2, X31
	0x028BE744 BL 0x3DF60E8
	0x028BE748 LDR X8, [X20 + 0x20]
	0x028BE74C MOV X0, X19
	0x028BE750 LDP X20, X19, [X31 + 0x20]
	0x028BE754 LDP X22, X21, [X31 + 0x10]
	0x028BE758 LDR X8, [X8 + 0xC0]
	0x028BE75C LDR X1, [X8 + 0xA8]
	0x028BE760 LDR X30, [X31], #0x30
	0x028BE764 B 0x28BE8F0
	0x028BE768 CBZ X8, 0x28BE8DC
	0x028BE76C MOV X0, X8
	0x028BE770 MOV X1, X31
	0x028BE774 BL 0x3DEC0CC
	0x028BE778 CBZ X0, 0x28BE8DC
	0x028BE77C LDR X0, [X19 + 0x460]
	0x028BE780 CBZ X0, 0x28BE8EC
	0x028BE784 MOV X1, X31
	0x028BE788 BL 0x3DEC0CC
	0x028BE78C CBZ X0, 0x28BE7A0
	0x028BE790 LDR X0, [X19 + 0x460]
	0x028BE794 CBZ X0, 0x28BE8EC
	0x028BE798 MOV X1, X31
	0x028BE79C BL 0x3DF6948
	0x028BE7A0 ADRP X8, 0x1860000
	0x028BE7A4 LDR X21, [X19 + 0x460]
	0x028BE7A8 LDR X8, [X8 + 0x108]
	0x028BE7AC LDR X0, [X8]
	0x028BE7B0 BL 0x1C16F10
	0x028BE7B4 LDR X8, [X20 + 0x20]
	0x028BE7B8 MOV X1, X19
	0x028BE7BC MOV X3, X31
	0x028BE7C0 MOV X22, X0
	0x028BE7C4 LDR X8, [X8 + 0xC0]
	0x028BE7C8 LDR X2, [X8 + 0x238]
	0x028BE7CC BL 0x2D0E824
	0x028BE7D0 CBZ X21, 0x28BE8EC
	0x028BE7D4 ADRP X8, 0x1860000
	0x028BE7D8 LDR X8, [X8 + 0x168]
	0x028BE7DC MOV X0, X21
	0x028BE7E0 MOV X1, X22
	0x028BE7E4 MOV W2, W31
	0x028BE7E8 LDR X3, [X8]
	0x028BE7EC BL 0x21A18B4
	0x028BE7F0 ADRP X8, 0x1860000
	0x028BE7F4 LDR X21, [X19 + 0x460]
	0x028BE7F8 LDR X8, [X8 + 0x170]
	0x028BE7FC LDR X0, [X8]
	0x028BE800 BL 0x1C16F10
	0x028BE804 LDR X8, [X20 + 0x20]
	0x028BE808 MOV X1, X19
	0x028BE80C MOV X3, X31
	0x028BE810 MOV X22, X0
	0x028BE814 LDR X8, [X8 + 0xC0]
	0x028BE818 LDR X2, [X8 + 0x240]
	0x028BE81C BL 0x2D0E824
	0x028BE820 ADRP X8, 0x1860000
	0x028BE824 LDR X8, [X8 + 0x180]
	0x028BE828 MOV X0, X21
	0x028BE82C MOV X1, X22
	0x028BE830 LDR X2, [X8]
	0x028BE834 BL 0x21EF674
	0x028BE838 ADRP X8, 0x185F000
	0x028BE83C LDR X21, [X19 + 0x460]
	0x028BE840 LDR X8, [X8 + 0xD98]
	0x028BE844 LDR X0, [X8]
	0x028BE848 BL 0x1C16F10
	0x028BE84C LDR X8, [X20 + 0x20]
	0x028BE850 MOV X1, X19
	0x028BE854 MOV X3, X31
	0x028BE858 MOV X22, X0
	0x028BE85C LDR X8, [X8 + 0xC0]
	0x028BE860 LDR X2, [X8 + 0x248]
	0x028BE864 BL 0x2D0E824
	0x028BE868 CBZ X21, 0x28BE8EC
	0x028BE86C ADRP X8, 0x185F000
	0x028BE870 LDR X8, [X8 + 0xDB8]
	0x028BE874 MOV X0, X21
	0x028BE878 MOV X1, X22
	0x028BE87C MOV W2, W31
	0x028BE880 LDR X3, [X8]
	0x028BE884 BL 0x21A18B4
	0x028BE888 ADRP X8, 0x185F000
	0x028BE88C LDR X21, [X19 + 0x460]
	0x028BE890 LDR X8, [X8 + 0xDB0]
	0x028BE894 LDR X0, [X8]
	0x028BE898 BL 0x1C16F10
	0x028BE89C LDR X8, [X20 + 0x20]
	0x028BE8A0 MOV X1, X19
	0x028BE8A4 MOV X3, X31
	0x028BE8A8 MOV X20, X0
	0x028BE8AC LDR X8, [X8 + 0xC0]
	0x028BE8B0 LDR X2, [X8 + 0x250]
	0x028BE8B4 BL 0x2D0E824
	0x028BE8B8 CBZ X21, 0x28BE8EC
	0x028BE8BC ADRP X8, 0x185F000
	0x028BE8C0 LDR X8, [X8 + 0xDC0]
	0x028BE8C4 MOV X0, X21
	0x028BE8C8 MOV X1, X20
	0x028BE8CC MOV W2, W31
	0x028BE8D0 LDR X3, [X8]
	0x028BE8D4 BL 0x21A18B4
	0x028BE8D8 STR X31, [X19 + 0x460]
	0x028BE8DC LDP X20, X19, [X31 + 0x20]
	0x028BE8E0 LDP X22, X21, [X31 + 0x10]
	0x028BE8E4 LDR X30, [X31], #0x30
	0x028BE8E8 RET
	0x028BE8EC BL 0x1C16F20
	0x028BE8F0 STR X30, [X31 - 0x30]!
	0x028BE8F4 STP X22, X21, [X31 + 0x10]
	0x028BE8F8 STP X20, X19, [X31 + 0x20]
	0x028BE8FC ADRP X19, 0x1B1C000
	0x028BE900 LDRB W8, [X19 + 0xCC5]
	0x028BE904 MOV X20, X1
	0x028BE908 MOV X21, X0
	0x028BE90C TBNZ X8, 0x0, 0x28BE930
	0x028BE910 ADRP X0, 0x1837000
	0x028BE914 LDR X0, [X0 + 0xC48]
	0x028BE918 BL 0x1C16CF4
	0x028BE91C ADRP X0, 0x1860000
	0x028BE920 LDR X0, [X0 + 0x198]
	0x028BE924 BL 0x1C16CF4
	0x028BE928 MOVZ W8, 0x1
	0x028BE92C STRB W8, [X19 + 0xCC5]
	0x028BE930 LDR X19, [X21 + 0x460]
	0x028BE934 CBZ X19, 0x28BE9C4
	0x028BE938 LDRB W8, [X21 + 0x468]
	0x028BE93C CBNZ W8, 0x28BE9C4
	0x028BE940 ADRP X8, 0x1837000
	0x028BE944 LDR X8, [X8 + 0xC48]
	0x028BE948 LDR X0, [X8]
	0x028BE94C LDR W8, [X0 + 0xE0]
	0x028BE950 CBNZ W8, 0x28BE958
	0x028BE954 BL 0x1C16DFC
	0x028BE958 MOV X0, X31
	0x028BE95C BL 0x3338524
	0x028BE960 LDR X8, [X21]
	0x028BE964 MOV X22, X0
	0x028BE968 MOV X0, X21
	0x028BE96C LDR X9, [X8 + 0x7E8]
	0x028BE970 LDR X1, [X8 + 0x7F0]
	0x028BE974 BLR X9
	0x028BE978 STR W0, [X31 + 0xC]
	0x028BE97C LDR X8, [X20 + 0x20]
	0x028BE980 ADD X1, X31, 0xC
	0x028BE984 LDR X8, [X8 + 0xC0]
	0x028BE988 LDR X0, [X8 + 0x8]
	0x028BE98C BL 0x1C16E04
	0x028BE990 ADRP X8, 0x1860000
	0x028BE994 LDR X8, [X8 + 0x198]
	0x028BE998 MOV X2, X0
	0x028BE99C MOV X0, X22
	0x028BE9A0 MOV X3, X31
	0x028BE9A4 LDR X1, [X8]
	0x028BE9A8 BL 0x3227D04
	0x028BE9AC LDR X8, [X19]
	0x028BE9B0 MOV X1, X0
	0x028BE9B4 MOV X0, X19
	0x028BE9B8 LDR X9, [X8 + 0x888]
	0x028BE9BC LDR X2, [X8 + 0x890]
	0x028BE9C0 BLR X9
	0x028BE9C4 LDP X20, X19, [X31 + 0x20]
	0x028BE9C8 LDP X22, X21, [X31 + 0x10]
	0x028BE9CC LDR X30, [X31], #0x30
	0x028BE9D0 RET
	0x028BE9D4 MOVZ W8, 0x1
	0x028BE9D8 STRB W8, [X0 + 0x468]
	0x028BE9DC RET
	0x028BE9E0 STRB W31, [X0 + 0x468]
	0x028BE9E4 LDR X8, [X2 + 0x20]
	0x028BE9E8 LDR X8, [X8 + 0xC0]
	0x028BE9EC LDR X1, [X8 + 0xA8]
	0x028BE9F0 B 0x28BE8F0
	0x028BE9F4 CBZ X1, 0x28BEA04
	0x028BE9F8 MOV X0, X1
	0x028BE9FC MOV X1, X31
	0x028BEA00 B 0x3D9D950
	0x028BEA04 STR X30, [X31 - 0x10]!
	0x028BEA08 BL 0x1C16F20
	0x028BEA0C STR X30, [X31 - 0x30]!
	0x028BEA10 STP X22, X21, [X31 + 0x10]
	0x028BEA14 STP X20, X19, [X31 + 0x20]
	0x028BEA18 ADRP X22, 0x1B1C000
	0x028BEA1C LDRB W8, [X22 + 0xCC6]
	0x028BEA20 MOV X21, X2
	0x028BEA24 MOV X20, X1
	0x028BEA28 MOV X19, X0
	0x028BEA2C TBNZ X8, 0x0, 0x28BEA50
	0x028BEA30 ADRP X0, 0x1860000
	0x028BEA34 LDR X0, [X0 + 0x1A0]
	0x028BEA38 BL 0x1C16CF4
	0x028BEA3C ADRP X0, 0x1860000
	0x028BEA40 LDR X0, [X0 + 0x1A8]
	0x028BEA44 BL 0x1C16CF4
	0x028BEA48 MOVZ W8, 0x1
	0x028BEA4C STRB W8, [X22 + 0xCC6]
	0x028BEA50 CBZ X20, 0x28BEB30
	0x028BEA54 LDR X8, [X19]
	0x028BEA58 LDP X1, X2, [X20 + 0x88]
	0x028BEA5C MOV X0, X19
	0x028BEA60 LDR X9, [X8 + 0x958]
	0x028BEA64 LDR X3, [X8 + 0x960]
	0x028BEA68 BLR X9
	0x028BEA6C LDR X8, [X21 + 0x20]
	0x028BEA70 MOV W1, W0
	0x028BEA74 MOV X0, X19
	0x028BEA78 LDR X8, [X8 + 0xC0]
	0x028BEA7C LDR X2, [X8 + 0x58]
	0x028BEA80 BL 0x28BB91C
	0x028BEA84 LDR X8, [X21 + 0x20]
	0x028BEA88 MOV W21, W0
	0x028BEA8C LDR X8, [X8 + 0xC0]
	0x028BEA90 LDR X8, [X8 + 0x10]
	0x028BEA94 MOV X0, X8
	0x028BEA98 BL 0x211A010
	0x028BEA9C LDR X8, [X19]
	0x028BEAA0 MOV X22, X0
	0x028BEAA4 MOV X0, X19
	0x028BEAA8 LDR X9, [X8 + 0x7E8]
	0x028BEAAC LDR X1, [X8 + 0x7F0]
	0x028BEAB0 BLR X9
	0x028BEAB4 CBZ X22, 0x28BEB30
	0x028BEAB8 LDR X8, [X22]
	0x028BEABC MOV W2, W0
	0x028BEAC0 MOV X0, X22
	0x028BEAC4 MOV W1, W21
	0x028BEAC8 LDP X9, X3, [X8 + 0x1B8]
	0x028BEACC BLR X9
	0x028BEAD0 TBNZ X0, 0x0, 0x28BEB20
	0x028BEAD4 LDR X8, [X19]
	0x028BEAD8 MOV X0, X19
	0x028BEADC MOV W1, W21
	0x028BEAE0 LDR X9, [X8 + 0x7F8]
	0x028BEAE4 LDR X2, [X8 + 0x800]
	0x028BEAE8 BLR X9
	0x028BEAEC MOV X0, X20
	0x028BEAF0 MOV X1, X31
	0x028BEAF4 BL 0x3D9D950
	0x028BEAF8 LDR X8, [X19 + 0x3A0]
	0x028BEAFC CBZ X8, 0x28BEB20
	0x028BEB00 LDR X8, [X19]
	0x028BEB04 MOV X0, X19
	0x028BEB08 LDP X20, X19, [X31 + 0x20]
	0x028BEB0C LDP X22, X21, [X31 + 0x10]
	0x028BEB10 LDR X2, [X8 + 0x738]
	0x028BEB14 LDR X1, [X8 + 0x740]
	0x028BEB18 LDR X30, [X31], #0x30
	0x028BEB1C BR X2
	0x028BEB20 LDP X20, X19, [X31 + 0x20]
	0x028BEB24 LDP X22, X21, [X31 + 0x10]
	0x028BEB28 LDR X30, [X31], #0x30
	0x028BEB2C RET
	0x028BEB30 BL 0x1C16F20
	0x028BEB34 STR X30, [X31 - 0x10]!
	0x028BEB38 CBZ X0, 0x28BEB7C
	0x028BEB3C LDRB W8, [X0 + 0x408]
	0x028BEB40 CBZ W8, 0x28BEB58
	0x028BEB44 LDR X0, [X0 + 0x448]
	0x028BEB48 CBZ X0, 0x28BEB74
	0x028BEB4C MOV X1, X31
	0x028BEB50 LDR X30, [X31], #0x10
	0x028BEB54 B 0x3DF6948
	0x028BEB58 LDR X8, [X0 + 0x440]
	0x028BEB5C CBZ X8, 0x28BEB7C
	0x028BEB60 LDR X1, [X0 + 0x448]
	0x028BEB64 MOV X0, X8
	0x028BEB68 MOV X2, X31
	0x028BEB6C LDR X30, [X31], #0x10
	0x028BEB70 B 0x3DF60E8
	0x028BEB74 LDR X30, [X31], #0x10
	0x028BEB78 RET
	0x028BEB7C BL 0x1C16F20
	0x028BEB80 STR X30, [X31 - 0x40]!
	0x028BEB84 STP X24, X23, [X31 + 0x10]
	0x028BEB88 STP X22, X21, [X31 + 0x20]
	0x028BEB8C STP X20, X19, [X31 + 0x30]
	0x028BEB90 ADRP X21, 0x1B1C000
	0x028BEB94 LDRB W8, [X21 + 0xCC7]
	0x028BEB98 MOV X20, X1
	0x028BEB9C MOV X19, X0
	0x028BEBA0 TBNZ X8, 0x0, 0x28BEBDC
	0x028BEBA4 ADRP X0, 0x185F000
	0x028BEBA8 LDR X0, [X0 + 0x770]
	0x028BEBAC BL 0x1C16CF4
	0x028BEBB0 ADRP X0, 0x185F000
	0x028BEBB4 LDR X0, [X0 + 0x778]
	0x028BEBB8 BL 0x1C16CF4
	0x028BEBBC ADRP X0, 0x185F000
	0x028BEBC0 LDR X0, [X0 + 0x780]
	0x028BEBC4 BL 0x1C16CF4
	0x028BEBC8 ADRP X0, 0x185F000
	0x028BEBCC LDR X0, [X0 + 0x788]
	0x028BEBD0 BL 0x1C16CF4
	0x028BEBD4 MOVZ W8, 0x1
	0x028BEBD8 STRB W8, [X21 + 0xCC7]
	0x028BEBDC CBZ X19, 0x28BECD0
	0x028BEBE0 ADRP X24, 0x185F000
	0x028BEBE4 LDR X24, [X24 + 0x780]
	0x028BEBE8 LDR X21, [X19 + 0x400]
	0x028BEBEC LDR X0, [X24]
	0x028BEBF0 BL 0x1C16F10
	0x028BEBF4 LDR X8, [X20 + 0x20]
	0x028BEBF8 MOV X1, X19
	0x028BEBFC MOV X3, X31
	0x028BEC00 MOV X22, X0
	0x028BEC04 LDR X8, [X8 + 0xC0]
	0x028BEC08 LDR X2, [X8 + 0x268]
	0x028BEC0C BL 0x2D0E824
	0x028BEC10 CBZ X21, 0x28BECD0
	0x028BEC14 ADRP X23, 0x185F000
	0x028BEC18 LDR X23, [X23 + 0x770]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X20, 0x1B1D000
	012 Move W8, [X20+3265]
	013 Move V8, V0
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x185F000
	020 Move X0, [X0+288]
	021 Call 0x1C17CF4
	022 Move X0, 0x185F000
	023 Move X0, [X0+296]
	024 Call 0x1C17CF4
	025 Move X0, 0x1861000
	026 Move X0, [X0+328]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3265], W8
	030 Move [X31+8], X31
	031 Move X0, [X19+1096]
	032 Compare X0, 0
	033 JumpIfEqual {367}
	034 Move S9, 1
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move X2, X31
	038 Call VisualElement.set_visible, X0, X1
	039 NotImplemented "Instruction FCMP not yet implemented."
	040 Move X0, [X19+1096]
	041 Compare X0, 0
	042 JumpIfEqual {367}
	043 Move X1, X31
	044 Call VisualElement.get_style, X0
	045 Move X8, [X19+1096]
	046 Compare X8, 0
	047 JumpIfEqual {367}
	048 Move X20, X0
	049 Move X0, X8
	050 Move X1, X31
	051 Call VisualElement.get_style, X0
	052 Move X8, 0x1861000
	053 Move X8, [X8+328]
	054 Move X21, X0
	055 Move W0, 1
	056 Move X1, [X8]
	057 Call 0x266FA88, X0
	058 Compare X21, 0
	059 JumpIfEqual {367}
	060 Move X23, 0x185F000
	061 Move X8, [X21]
	062 Move X23, [X23+296]
	063 Move X22, X0
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move X1, [X23]
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move W2, 52
	075 Move X0, X21
	076 Call 0x1C5D788
	077 Move W9, [X10]
	078 Add W9, W9, 52
	079 Add X8, X8, W9
	080 Add X0, X8, 312
	081 Move X8, [X0]
	082 Move X2, [X0+8]
	083 Move X0, X21
	084 Move X1, X22
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move W24, [X19+1176]
	087 Move X0, X19
	088 Move X1, X31
	089 Call VisualElement.get_resolvedStyle, X0
	090 Compare X0, 0
	091 JumpIfEqual {367}
	092 Move X22, 0x185F000
	093 Move X8, [X0]
	094 Move X22, [X22+288]
	095 Move X21, X0
	096 NotImplemented "Instruction LDRH not yet implemented."
	097 Move X1, [X22]
	098 Compare W24, 0
	099 JumpIfEqual {111}
	100 Compare W9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move W2, 25
	109 Move X0, X21
	110 Call 0x1C5D788
	111 Compare W9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move W2, 26
	120 Move X0, X21
	121 Call 0x1C5D788
	122 Move W9, [X10]
	123 Add W9, W9, 25
	124 Add X8, X8, W9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X1, [X0+8]
	128 Move X0, X21
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X21, X0
	131 Move W0, 2
	132 Move X1, X31
	133 Call StyleFloat.op_Implicit, X0
	134 Move X1, X0
	135 Move X0, X21
	136 Move X2, X31
	137 Call StyleFloat.op_Equality, X0, X1
	138 Move S9, W31
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {217}
	143 Move X0, X19
	144 Move X1, X31
	145 Call VisualElement.get_resolvedStyle, X0
	146 Compare X0, 0
	147 JumpIfEqual {367}
	148 Move X8, [X0]
	149 Move X1, [X22]
	150 Move X21, X0
	151 NotImplemented "Instruction LDRH not yet implemented."
	152 Compare X9, 0
	153 JumpIfEqual {160}
	154 Move X10, [X8+176]
	155 Add X10, X10, 8
	156 NotImplemented "Instruction LDUR not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Subtract X9, X9, 1
	159 Add X10, X10, 16
	160 Move W2, 25
	161 Move X0, X21
	162 Call 0x1C5D788
	163 Move W9, [X10]
	164 Add W9, W9, 26
	165 Add X8, X8, W9
	166 Add X0, X8, 312
	167 Move X8, [X0]
	168 Move X1, [X0+8]
	169 Move X0, X21
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Move X21, X0
	172 Move W0, 2
	173 Move X1, X31
	174 Call StyleFloat.op_Implicit, X0
	175 Move X1, X0
	176 Move X0, X21
	177 Move X2, X31
	178 Call StyleFloat.op_Equality, X0, X1
	179 Move S9, W31
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfEqual {282}
	184 Move X0, X19
	185 Move X1, X31
	186 Call VisualElement.get_resolvedStyle, X0
	187 Compare X0, 0
	188 JumpIfEqual {367}
	189 Move X8, [X0]
	190 Move X1, [X22]
	191 Move X21, X0
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 26
	202 Move X0, X21
	203 Call 0x1C5D788
	204 Move W9, [X10]
	205 Add W9, W9, 25
	206 Add X8, X8, W9
	207 Add X0, X8, 312
	208 Move X8, [X0]
	209 Move X1, [X0+8]
	210 Move X0, X21
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Move [X31+8], X0
	213 Add X0, X31, 8
	214 Move X1, X31
	215 Call StyleFloat.get_value, X0
	216 Move V9, V0
	217 Move X0, [X19+1088]
	218 Compare X0, 0
	219 JumpIfEqual {367}
	220 Move X1, X31
	221 Call VisualElement.get_layout, X0
	222 Multiply S0, S3, S8
	223 NotImplemented "Instruction FCMP not yet implemented."
	224 NotImplemented "Instruction FCSEL not yet implemented."
	225 NotImplemented "Instruction FCVT not yet implemented."
	226 Add X0, X31, 40
	227 Call 0x3EB2C00
	228 NotImplemented "Instruction FCMP not yet implemented."
	229 Move D1, -0.5
	230 NotImplemented "Instruction FCMP not yet implemented."
	231 Move V0, [X31+40]
	232 Move S1, -1
	233 Move D1, 0.5
	234 NotImplemented "Instruction FCMP not yet implemented."
	235 Move V0, [X31+40]
	236 Move S1, 1
	237 NotImplemented "Instruction FCVTZS not yet implemented."
	238 NotImplemented "Instruction INVALID not yet implemented."
	239 Add S1, S0, S1
	240 And X31, X8, 1
	241 NotImplemented "Instruction FCSEL not yet implemented."
	242 Move S0, -0.5
	243 Add S0, S8, S0
	244 NotImplemented "Instruction FRINTP not yet implemented."
	245 Move S0, 0.5
	246 Add S0, S8, S0
	247 NotImplemented "Instruction FRINTM not yet implemented."
	248 Move X0, X31
	249 Call StyleLength.op_Implicit, V0
	250 Compare X20, 0
	251 JumpIfEqual {367}
	252 Move X9, [X20]
	253 Move X8, X1
	254 Move X1, [X23]
	255 Move X21, X0
	256 NotImplemented "Instruction LDRH not yet implemented."
	257 And X22, X8, 0
	258 Compare X10, 0
	259 JumpIfEqual {266}
	260 Move X8, [X9+176]
	261 Add X8, X8, 8
	262 NotImplemented "Instruction LDUR not yet implemented."
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Subtract X10, X10, 1
	265 Add X8, X8, 16
	266 Move W2, 24
	267 Move W8, [X8]
	268 Add W8, W8, 24
	269 Move W9, [X10]
	270 Add W9, W9, 26
	271 Add X8, X8, W9
	272 Add X0, X8, 312
	273 Move X8, [X0]
	274 Move X1, [X0+8]
	275 Move X0, X21
	276 NotImplemented "Instruction BLR not yet implemented."
	277 Move [X31+8], X0
	278 Add X0, X31, 8
	279 Move X1, X31
	280 Call StyleFloat.get_value, X0
	281 Move V9, V0
	282 Move X0, [X19+1088]
	283 Compare X0, 0
	284 JumpIfEqual {367}
	285 Move X1, X31
	286 Call VisualElement.get_layout, X0
	287 Multiply S0, S2, S8
	288 NotImplemented "Instruction FCMP not yet implemented."
	289 NotImplemented "Instruction FCSEL not yet implemented."
	290 NotImplemented "Instruction FCVT not yet implemented."
	291 Add X0, X31, 40
	292 Call 0x3EB2C00
	293 NotImplemented "Instruction FCMP not yet implemented."
	294 Move D1, -0.5
	295 NotImplemented "Instruction FCMP not yet implemented."
	296 Move V0, [X31+40]
	297 Move S1, -1
	298 Move D1, 0.5
	299 NotImplemented "Instruction FCMP not yet implemented."
	300 Move V0, [X31+40]
	301 Move S1, 1
	302 NotImplemented "Instruction FCVTZS not yet implemented."
	303 NotImplemented "Instruction INVALID not yet implemented."
	304 Add S1, S0, S1
	305 And X31, X8, 1
	306 NotImplemented "Instruction FCSEL not yet implemented."
	307 Move S0, -0.5
	308 Add S0, S8, S0
	309 NotImplemented "Instruction FRINTP not yet implemented."
	310 Move S0, 0.5
	311 Add S0, S8, S0
	312 NotImplemented "Instruction FRINTM not yet implemented."
	313 Move X0, X31
	314 Call StyleLength.op_Implicit, V0
	315 Compare X20, 0
	316 JumpIfEqual {367}
	317 Move X9, [X20]
	318 Move X8, X1
	319 Move X1, [X23]
	320 Move X21, X0
	321 NotImplemented "Instruction LDRH not yet implemented."
	322 And X22, X8, 0
	323 Compare X10, 0
	324 JumpIfEqual {331}
	325 Move X8, [X9+176]
	326 Add X8, X8, 8
	327 NotImplemented "Instruction LDUR not yet implemented."
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Subtract X10, X10, 1
	330 Add X8, X8, 16
	331 Move W2, 54
	332 Move X0, X20
	333 Call 0x1C5D788
	334 Move W8, [X8]
	335 Add W8, W8, 54
	336 Add X8, X9, W8
	337 Add X0, X8, 312
	338 Move X8, [X0]
	339 Move X3, [X0+8]
	340 Move X0, X20
	341 Move X1, X21
	342 Move X2, X22
	343 NotImplemented "Instruction BLR not yet implemented."
	344 Move X0, [X19+1096]
	345 Compare X0, 0
	346 JumpIfEqual {367}
	347 Move X19, [X19+1112]
	348 Move X1, X31
	349 Call VisualElement.get_visible, X0
	350 Compare X19, 0
	351 JumpIfEqual {367}
	352 And W1, W0, 1
	353 Move X0, X19
	354 Move X2, X31
	355 Call VisualElement.set_visible, X0, X1
	356 Move X20, [X31+80]
	357 Move X19, [X31+88]
	358 Move X22, [X31+64]
	359 Move X21, [X31+72]
	360 Move X24, [X31+48]
	361 Move X23, [X31+56]
	362 Move X30, [X31+32]
	363 Move D9, [X31+16]
	364 Move D8, [X31+24]
	365 Add X31, X31, 96
	366 Return 
	367 Call 0x1C17F20

Method: System.Void UpdateDragElementPosition(UnityEngine.UIElements.GeometryChangedEvent evt)

Disassembly:
	0x028BEC1C MOVZ W2, 0x1
	0x028BEC20 MOV X0, X21
	0x028BEC24 MOV X1, X22
	0x028BEC28 LDR X3, [X23]
	0x028BEC2C BL 0x21A1534
	0x028BEC30 LDR X0, [X24]
	0x028BEC34 LDR X21, [X19 + 0x440]
	0x028BEC38 BL 0x1C16F10
	0x028BEC3C LDR X8, [X20 + 0x20]
	0x028BEC40 MOV X1, X19
	0x028BEC44 MOV X3, X31
	0x028BEC48 MOV X22, X0
	0x028BEC4C LDR X8, [X8 + 0xC0]
	0x028BEC50 LDR X2, [X8 + 0x268]
	0x028BEC54 BL 0x2D0E824
	0x028BEC58 CBZ X21, 0x28BECD0
	0x028BEC5C LDR X3, [X23]
	0x028BEC60 ADRP X23, 0x185F000
	0x028BEC64 LDR X23, [X23 + 0x788]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {20}
	004 NotImplemented "Instruction LDUR not yet implemented."
	005 NotImplemented "Instruction LDUR not yet implemented."
	006 Move X8, -31277056
	007 Move V2, [X8+3872]
	008 Subtract V0, V0, V1
	009 NotImplemented "Instruction INVALID not yet implemented."
	010 NotImplemented "Instruction FADDP not yet implemented."
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 Move X8, [X2+32]
	013 Move X8, [X8+192]
	014 Move X1, [X8+56]
	015 Move X30, [X31+16]
	016 Call 0x28BECBC, X0
	017 Return 
	018 Move X30, [X31+16]
	019 Return 
	020 Call 0x1C17F20

Method: System.Void OnViewDataReady()

Disassembly:
	0x028BEC68 MOVZ W2, 0x1
	0x028BEC6C MOV X0, X21
	0x028BEC70 MOV X1, X22
	0x028BEC74 BL 0x21A1534
	0x028BEC78 LDR X0, [X23]
	0x028BEC7C LDR X21, [X19 + 0x440]
	0x028BEC80 BL 0x1C16F10
	0x028BEC84 LDR X8, [X20 + 0x20]
	0x028BEC88 MOV X1, X19
	0x028BEC8C MOV X3, X31
	0x028BEC90 MOV X20, X0
	0x028BEC94 LDR X8, [X8 + 0xC0]
	0x028BEC98 LDR X2, [X8 + 0x270]
	0x028BEC9C BL 0x2D0E824
	0x028BECA0 CBZ X21, 0x28BECD0
	0x028BECA4 ADRP X8, 0x185F000
	0x028BECA8 LDR X8, [X8 + 0x778]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {21}
	006 Move X8, [X1+32]
	007 Move X20, X1
	008 Move X19, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8+520]
	011 Call BaseField`1<Int32>.OnViewDataReady, X0
	012 Move X8, [X20+32]
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X8, [X8+192]
	017 Move X1, [X8+56]
	018 Move X30, [X31+32]
	019 Call 0x28BECBC, X0
	020 Return 
	021 Call 0x1C17F20

Method: System.Boolean SameValues(System.Single a, System.Single b, System.Single epsilon)

Disassembly:
	0x028BECAC MOV X0, X21
	0x028BECB0 MOV X1, X20
	0x028BECB4 LDP X20, X19, [X31 + 0x30]
	0x028BECB8 LDR X3, [X8]

ISIL:
	001 NotImplemented "Instruction FABD not yet implemented."
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void UpdateDragElementPosition()

Disassembly:
	0x028BECBC LDP X22, X21, [X31 + 0x20]
	0x028BECC0 LDP X24, X23, [X31 + 0x10]
	0x028BECC4 MOV W2, W31
	0x028BECC8 LDR X30, [X31], #0x40
	0x028BECCC B 0x21A1534
	0x028BECD0 BL 0x1C16F20
	0x028BECD4 STR X30, [X31 - 0x40]!
	0x028BECD8 STP X24, X23, [X31 + 0x10]
	0x028BECDC STP X22, X21, [X31 + 0x20]
	0x028BECE0 STP X20, X19, [X31 + 0x30]
	0x028BECE4 ADRP X21, 0x1B1C000
	0x028BECE8 LDRB W8, [X21 + 0xCC8]
	0x028BECEC MOV X20, X1
	0x028BECF0 MOV X19, X0
	0x028BECF4 TBNZ X8, 0x0, 0x28BED30
	0x028BECF8 ADRP X0, 0x185F000
	0x028BECFC LDR X0, [X0 + 0x790]
	0x028BED00 BL 0x1C16CF4
	0x028BED04 ADRP X0, 0x185F000
	0x028BED08 LDR X0, [X0 + 0x798]
	0x028BED0C BL 0x1C16CF4
	0x028BED10 ADRP X0, 0x185F000
	0x028BED14 LDR X0, [X0 + 0x780]
	0x028BED18 BL 0x1C16CF4
	0x028BED1C ADRP X0, 0x185F000
	0x028BED20 LDR X0, [X0 + 0x788]
	0x028BED24 BL 0x1C16CF4
	0x028BED28 MOVZ W8, 0x1
	0x028BED2C STRB W8, [X21 + 0xCC8]
	0x028BED30 CBZ X19, 0x28BEE24
	0x028BED34 ADRP X24, 0x185F000
	0x028BED38 LDR X24, [X24 + 0x780]
	0x028BED3C LDR X21, [X19 + 0x400]
	0x028BED40 LDR X0, [X24]
	0x028BED44 BL 0x1C16F10
	0x028BED48 LDR X8, [X20 + 0x20]
	0x028BED4C MOV X1, X19
	0x028BED50 MOV X3, X31
	0x028BED54 MOV X22, X0
	0x028BED58 LDR X8, [X8 + 0xC0]
	0x028BED5C LDR X2, [X8 + 0x268]
	0x028BED60 BL 0x2D0E824
	0x028BED64 CBZ X21, 0x28BEE24
	0x028BED68 ADRP X23, 0x185F000
	0x028BED6C LDR X23, [X23 + 0x790]
	0x028BED70 MOVZ W2, 0x1
	0x028BED74 MOV X0, X21
	0x028BED78 MOV X1, X22
	0x028BED7C LDR X3, [X23]
	0x028BED80 BL 0x21A18B4
	0x028BED84 LDR X0, [X24]
	0x028BED88 LDR X21, [X19 + 0x440]
	0x028BED8C BL 0x1C16F10
	0x028BED90 LDR X8, [X20 + 0x20]
	0x028BED94 MOV X1, X19
	0x028BED98 MOV X3, X31
	0x028BED9C MOV X22, X0
	0x028BEDA0 LDR X8, [X8 + 0xC0]
	0x028BEDA4 LDR X2, [X8 + 0x268]
	0x028BEDA8 BL 0x2D0E824
	0x028BEDAC CBZ X21, 0x28BEE24
	0x028BEDB0 LDR X3, [X23]
	0x028BEDB4 ADRP X23, 0x185F000
	0x028BEDB8 LDR X23, [X23 + 0x788]
	0x028BEDBC MOVZ W2, 0x1
	0x028BEDC0 MOV X0, X21
	0x028BEDC4 MOV X1, X22
	0x028BEDC8 BL 0x21A18B4
	0x028BEDCC LDR X0, [X23]
	0x028BEDD0 LDR X21, [X19 + 0x440]
	0x028BEDD4 BL 0x1C16F10
	0x028BEDD8 LDR X8, [X20 + 0x20]
	0x028BEDDC MOV X1, X19
	0x028BEDE0 MOV X3, X31
	0x028BEDE4 MOV X20, X0
	0x028BEDE8 LDR X8, [X8 + 0xC0]
	0x028BEDEC LDR X2, [X8 + 0x270]
	0x028BEDF0 BL 0x2D0E824
	0x028BEDF4 CBZ X21, 0x28BEE24
	0x028BEDF8 ADRP X8, 0x185F000
	0x028BEDFC LDR X8, [X8 + 0x798]
	0x028BEE00 MOV X0, X21
	0x028BEE04 MOV X1, X20
	0x028BEE08 LDP X20, X19, [X31 + 0x30]
	0x028BEE0C LDR X3, [X8]
	0x028BEE10 LDP X22, X21, [X31 + 0x20]
	0x028BEE14 LDP X24, X23, [X31 + 0x10]
	0x028BEE18 MOV W2, W31
	0x028BEE1C LDR X30, [X31], #0x40
	0x028BEE20 B 0x21A18B4
	0x028BEE24 BL 0x1C16F20
	0x028BEE28 STP X30, X21, [X31 - 0x20]!
	0x028BEE2C STP X20, X19, [X31 + 0x10]
	0x028BEE30 ADRP X20, 0x1B1C000
	0x028BEE34 ADRP X21, 0x1860000
	0x028BEE38 LDRB W8, [X20 + 0xCC9]
	0x028BEE3C LDR X21, [X21 + 0x1B0]
	0x028BEE40 MOV X19, X0
	0x028BEE44 TBNZ X8, 0x0, 0x28BEEC8
	0x028BEE48 ADRP X0, 0x1860000
	0x028BEE4C LDR X0, [X0 + 0x1B8]
	0x028BEE50 BL 0x1C16CF4
	0x028BEE54 ADRP X0, 0x1860000
	0x028BEE58 LDR X0, [X0 + 0x1C0]
	0x028BEE5C BL 0x1C16CF4
	0x028BEE60 ADRP X0, 0x185F000
	0x028BEE64 LDR X0, [X0 + 0x6B0]
	0x028BEE68 BL 0x1C16CF4
	0x028BEE6C ADRP X0, 0x1860000
	0x028BEE70 LDR X0, [X0 + 0x1C8]
	0x028BEE74 BL 0x1C16CF4
	0x028BEE78 ADRP X0, 0x1860000
	0x028BEE7C LDR X0, [X0 + 0x1D0]
	0x028BEE80 BL 0x1C16CF4
	0x028BEE84 ADRP X0, 0x185F000
	0x028BEE88 LDR X0, [X0 + 0x6C0]
	0x028BEE8C BL 0x1C16CF4
	0x028BEE90 ADRP X0, 0x1860000
	0x028BEE94 LDR X0, [X0 + 0x1B0]
	0x028BEE98 BL 0x1C16CF4
	0x028BEE9C ADRP X0, 0x185E000
	0x028BEEA0 LDR X0, [X0 + 0xEB8]
	0x028BEEA4 BL 0x1C16CF4
	0x028BEEA8 ADRP X0, 0x1860000
	0x028BEEAC LDR X0, [X0 + 0x1D8]
	0x028BEEB0 BL 0x1C16CF4
	0x028BEEB4 ADRP X0, 0x185E000
	0x028BEEB8 LDR X0, [X0 + 0xEC0]
	0x028BEEBC BL 0x1C16CF4
	0x028BEEC0 MOVZ W8, 0x1
	0x028BEEC4 STRB W8, [X20 + 0xCC9]
	0x028BEEC8 LDR X20, [X21]
	0x028BEECC LDR X0, [X19 + 0x20]!
	0x028BEED0 LDRB W8, [X0 + 0x135]
	0x028BEED4 TBNZ X8, 0x0, 0x28BEEDC
	0x028BEED8 BL 0x1C5C684
	0x028BEEDC LDR X8, [X0 + 0xC0]
	0x028BEEE0 LDR X0, [X8 + 0xB0]
	0x028BEEE4 LDRB W8, [X0 + 0x135]
	0x028BEEE8 TBNZ X8, 0x0, 0x28BEEF0
	0x028BEEEC BL 0x1C5C684
	0x028BEEF0 LDR X8, [X0 + 0xB8]
	0x028BEEF4 STR X20, [X8]
	0x028BEEF8 LDR X0, [X19]
	0x028BEEFC LDRB W8, [X0 + 0x135]
	0x028BEF00 TBNZ X8, 0x0, 0x28BEF08
	0x028BEF04 BL 0x1C5C684
	0x028BEF08 LDR X8, [X0 + 0xC0]
	0x028BEF0C LDR X0, [X8 + 0xB0]
	0x028BEF10 LDRB W8, [X0 + 0x135]
	0x028BEF14 TBNZ X8, 0x0, 0x28BEF1C
	0x028BEF18 BL 0x1C5C684
	0x028BEF1C LDR X0, [X19]
	0x028BEF20 LDRB W8, [X0 + 0x135]
	0x028BEF24 TBNZ X8, 0x0, 0x28BEF2C
	0x028BEF28 BL 0x1C5C684
	0x028BEF2C LDR X8, [X0 + 0xC0]
	0x028BEF30 ADRP X20, 0x185E000
	0x028BEF34 LDR X0, [X8 + 0xB0]
	0x028BEF38 LDRB W8, [X0 + 0x135]
	0x028BEF3C LDR X20, [X20 + 0xEB8]
	0x028BEF40 TBNZ X8, 0x0, 0x28BEF48
	0x028BEF44 BL 0x1C5C684
	0x028BEF48 LDR X8, [X0 + 0xB8]
	0x028BEF4C LDR X1, [X20]
	0x028BEF50 MOV X2, X31
	0x028BEF54 LDR X0, [X8]
	0x028BEF58 BL 0x321B938
	0x028BEF5C LDR X8, [X19]
	0x028BEF60 MOV X20, X0
	0x028BEF64 LDRB W9, [X8 + 0x135]
	0x028BEF68 TBNZ X9, 0x0, 0x28BEF78
	0x028BEF6C MOV X0, X8
	0x028BEF70 BL 0x1C5C684
	0x028BEF74 MOV X8, X0
	0x028BEF78 LDR X8, [X8 + 0xC0]
	0x028BEF7C LDR X0, [X8 + 0xB0]
	0x028BEF80 LDRB W8, [X0 + 0x135]
	0x028BEF84 TBNZ X8, 0x0, 0x28BEF8C
	0x028BEF88 BL 0x1C5C684
	0x028BEF8C LDR X8, [X0 + 0xB8]
	0x028BEF90 STR X20, [X8 + 0x8]
	0x028BEF94 LDR X0, [X19]
	0x028BEF98 LDRB W8, [X0 + 0x135]
	0x028BEF9C TBNZ X8, 0x0, 0x28BEFA4
	0x028BEFA0 BL 0x1C5C684
	0x028BEFA4 LDR X8, [X0 + 0xC0]
	0x028BEFA8 LDR X0, [X8 + 0xB0]
	0x028BEFAC LDRB W8, [X0 + 0x135]
	0x028BEFB0 TBNZ X8, 0x0, 0x28BEFB8
	0x028BEFB4 BL 0x1C5C684
	0x028BEFB8 LDR X0, [X19]
	0x028BEFBC LDRB W8, [X0 + 0x135]
	0x028BEFC0 TBNZ X8, 0x0, 0x28BEFC8
	0x028BEFC4 BL 0x1C5C684
	0x028BEFC8 LDR X8, [X0 + 0xC0]
	0x028BEFCC ADRP X20, 0x185E000
	0x028BEFD0 LDR X0, [X8 + 0xB0]
	0x028BEFD4 LDRB W8, [X0 + 0x135]
	0x028BEFD8 LDR X20, [X20 + 0xEC0]
	0x028BEFDC TBNZ X8, 0x0, 0x28BEFE4
	0x028BEFE0 BL 0x1C5C684
	0x028BEFE4 LDR X8, [X0 + 0xB8]
	0x028BEFE8 LDR X1, [X20]
	0x028BEFEC MOV X2, X31
	0x028BEFF0 LDR X0, [X8]
	0x028BEFF4 BL 0x321B938
	0x028BEFF8 LDR X8, [X19]
	0x028BEFFC MOV X20, X0
	0x028BF000 LDRB W9, [X8 + 0x135]
	0x028BF004 TBNZ X9, 0x0, 0x28BF014
	0x028BF008 MOV X0, X8
	0x028BF00C BL 0x1C5C684
	0x028BF010 MOV X8, X0
	0x028BF014 LDR X8, [X8 + 0xC0]
	0x028BF018 LDR X0, [X8 + 0xB0]
	0x028BF01C LDRB W8, [X0 + 0x135]
	0x028BF020 TBNZ X8, 0x0, 0x28BF028
	0x028BF024 BL 0x1C5C684
	0x028BF028 LDR X8, [X0 + 0xB8]
	0x028BF02C STR X20, [X8 + 0x10]
	0x028BF030 LDR X0, [X19]
	0x028BF034 LDRB W8, [X0 + 0x135]
	0x028BF038 TBNZ X8, 0x0, 0x28BF040
	0x028BF03C BL 0x1C5C684
	0x028BF040 LDR X8, [X0 + 0xC0]
	0x028BF044 LDR X0, [X8 + 0xB0]
	0x028BF048 LDRB W8, [X0 + 0x135]
	0x028BF04C TBNZ X8, 0x0, 0x28BF054
	0x028BF050 BL 0x1C5C684
	0x028BF054 LDR X0, [X19]
	0x028BF058 LDRB W8, [X0 + 0x135]
	0x028BF05C TBNZ X8, 0x0, 0x28BF064
	0x028BF060 BL 0x1C5C684
	0x028BF064 LDR X8, [X0 + 0xC0]
	0x028BF068 ADRP X20, 0x185E000
	0x028BF06C LDR X0, [X8 + 0xB0]
	0x028BF070 LDRB W8, [X0 + 0x135]
	0x028BF074 LDR X20, [X20 + 0x6B0]
	0x028BF078 TBNZ X8, 0x0, 0x28BF080
	0x028BF07C BL 0x1C5C684
	0x028BF080 LDR X8, [X0 + 0xB8]
	0x028BF084 LDR X1, [X20]
	0x028BF088 MOV X2, X31
	0x028BF08C LDR X0, [X8]
	0x028BF090 BL 0x321B938
	0x028BF094 LDR X8, [X19]
	0x028BF098 MOV X20, X0
	0x028BF09C LDRB W9, [X8 + 0x135]
	0x028BF0A0 TBNZ X9, 0x0, 0x28BF0B0
	0x028BF0A4 MOV X0, X8
	0x028BF0A8 BL 0x1C5C684
	0x028BF0AC MOV X8, X0
	0x028BF0B0 LDR X8, [X8 + 0xC0]
	0x028BF0B4 LDR X0, [X8 + 0xB0]
	0x028BF0B8 LDRB W8, [X0 + 0x135]
	0x028BF0BC TBNZ X8, 0x0, 0x28BF0C4
	0x028BF0C0 BL 0x1C5C684
	0x028BF0C4 LDR X8, [X0 + 0xB8]
	0x028BF0C8 STR X20, [X8 + 0x18]
	0x028BF0CC LDR X0, [X19]
	0x028BF0D0 LDRB W8, [X0 + 0x135]
	0x028BF0D4 TBNZ X8, 0x0, 0x28BF0DC
	0x028BF0D8 BL 0x1C5C684
	0x028BF0DC LDR X8, [X0 + 0xC0]
	0x028BF0E0 LDR X0, [X8 + 0xB0]
	0x028BF0E4 LDRB W8, [X0 + 0x135]
	0x028BF0E8 TBNZ X8, 0x0, 0x28BF0F0
	0x028BF0EC BL 0x1C5C684
	0x028BF0F0 LDR X0, [X19]
	0x028BF0F4 LDRB W8, [X0 + 0x135]
	0x028BF0F8 TBNZ X8, 0x0, 0x28BF100
	0x028BF0FC BL 0x1C5C684
	0x028BF100 LDR X8, [X0 + 0xC0]
	0x028BF104 ADRP X20, 0x185E000
	0x028BF108 LDR X0, [X8 + 0xB0]
	0x028BF10C LDRB W8, [X0 + 0x135]
	0x028BF110 LDR X20, [X20 + 0x6C0]
	0x028BF114 TBNZ X8, 0x0, 0x28BF11C
	0x028BF118 BL 0x1C5C684
	0x028BF11C LDR X8, [X0 + 0xB8]
	0x028BF120 LDR X1, [X20]
	0x028BF124 MOV X2, X31
	0x028BF128 LDR X0, [X8]
	0x028BF12C BL 0x321B938
	0x028BF130 LDR X8, [X19]
	0x028BF134 MOV X20, X0
	0x028BF138 LDRB W9, [X8 + 0x135]
	0x028BF13C TBNZ X9, 0x0, 0x28BF14C
	0x028BF140 MOV X0, X8
	0x028BF144 BL 0x1C5C684
	0x028BF148 MOV X8, X0
	0x028BF14C LDR X8, [X8 + 0xC0]
	0x028BF150 LDR X0, [X8 + 0xB0]
	0x028BF154 LDRB W8, [X0 + 0x135]
	0x028BF158 TBNZ X8, 0x0, 0x28BF160
	0x028BF15C BL 0x1C5C684
	0x028BF160 LDR X8, [X0 + 0xB8]
	0x028BF164 STR X20, [X8 + 0x20]
	0x028BF168 LDR X0, [X19]
	0x028BF16C LDRB W8, [X0 + 0x135]
	0x028BF170 TBNZ X8, 0x0, 0x28BF178
	0x028BF174 BL 0x1C5C684
	0x028BF178 LDR X8, [X0 + 0xC0]
	0x028BF17C LDR X0, [X8 + 0xB0]
	0x028BF180 LDRB W8, [X0 + 0x135]
	0x028BF184 TBNZ X8, 0x0, 0x28BF18C
	0x028BF188 BL 0x1C5C684
	0x028BF18C LDR X0, [X19]
	0x028BF190 LDRB W8, [X0 + 0x135]
	0x028BF194 TBNZ X8, 0x0, 0x28BF19C
	0x028BF198 BL 0x1C5C684
	0x028BF19C LDR X8, [X0 + 0xC0]
	0x028BF1A0 ADRP X20, 0x185F000
	0x028BF1A4 LDR X0, [X8 + 0xB0]
	0x028BF1A8 LDRB W8, [X0 + 0x135]
	0x028BF1AC LDR X20, [X20 + 0x1D8]
	0x028BF1B0 TBNZ X8, 0x0, 0x28BF1B8
	0x028BF1B4 BL 0x1C5C684
	0x028BF1B8 LDR X8, [X0 + 0xB8]
	0x028BF1BC LDR X1, [X20]
	0x028BF1C0 MOV X2, X31
	0x028BF1C4 LDR X0, [X8]
	0x028BF1C8 BL 0x321B938
	0x028BF1CC LDR X8, [X19]
	0x028BF1D0 MOV X20, X0
	0x028BF1D4 LDRB W9, [X8 + 0x135]
	0x028BF1D8 TBNZ X9, 0x0, 0x28BF1E8
	0x028BF1DC MOV X0, X8
	0x028BF1E0 BL 0x1C5C684
	0x028BF1E4 MOV X8, X0
	0x028BF1E8 LDR X8, [X8 + 0xC0]
	0x028BF1EC LDR X0, [X8 + 0xB0]
	0x028BF1F0 LDRB W8, [X0 + 0x135]
	0x028BF1F4 TBNZ X8, 0x0, 0x28BF1FC
	0x028BF1F8 BL 0x1C5C684
	0x028BF1FC LDR X8, [X0 + 0xB8]
	0x028BF200 STR X20, [X8 + 0x28]
	0x028BF204 LDR X0, [X19]
	0x028BF208 LDRB W8, [X0 + 0x135]
	0x028BF20C TBNZ X8, 0x0, 0x28BF214
	0x028BF210 BL 0x1C5C684
	0x028BF214 LDR X8, [X0 + 0xC0]
	0x028BF218 LDR X0, [X8 + 0xB0]
	0x028BF21C LDRB W8, [X0 + 0x135]
	0x028BF220 TBNZ X8, 0x0, 0x28BF228
	0x028BF224 BL 0x1C5C684
	0x028BF228 LDR X0, [X19]
	0x028BF22C LDRB W8, [X0 + 0x135]
	0x028BF230 TBNZ X8, 0x0, 0x28BF238
	0x028BF234 BL 0x1C5C684
	0x028BF238 LDR X8, [X0 + 0xC0]
	0x028BF23C ADRP X20, 0x185F000
	0x028BF240 LDR X0, [X8 + 0xB0]
	0x028BF244 LDRB W8, [X0 + 0x135]
	0x028BF248 LDR X20, [X20 + 0x1C8]
	0x028BF24C TBNZ X8, 0x0, 0x28BF254
	0x028BF250 BL 0x1C5C684
	0x028BF254 LDR X8, [X0 + 0xB8]
	0x028BF258 LDR X1, [X20]
	0x028BF25C MOV X2, X31
	0x028BF260 LDR X0, [X8]
	0x028BF264 BL 0x321B938
	0x028BF268 LDR X8, [X19]
	0x028BF26C MOV X20, X0
	0x028BF270 LDRB W9, [X8 + 0x135]
	0x028BF274 TBNZ X9, 0x0, 0x28BF284
	0x028BF278 MOV X0, X8
	0x028BF27C BL 0x1C5C684
	0x028BF280 MOV X8, X0
	0x028BF284 LDR X8, [X8 + 0xC0]
	0x028BF288 LDR X0, [X8 + 0xB0]
	0x028BF28C LDRB W8, [X0 + 0x135]
	0x028BF290 TBNZ X8, 0x0, 0x28BF298
	0x028BF294 BL 0x1C5C684
	0x028BF298 LDR X8, [X0 + 0xB8]
	0x028BF29C STR X20, [X8 + 0x30]
	0x028BF2A0 LDR X0, [X19]
	0x028BF2A4 LDRB W8, [X0 + 0x135]
	0x028BF2A8 TBNZ X8, 0x0, 0x28BF2B0
	0x028BF2AC BL 0x1C5C684
	0x028BF2B0 LDR X8, [X0 + 0xC0]
	0x028BF2B4 LDR X0, [X8 + 0xB0]
	0x028BF2B8 LDRB W8, [X0 + 0x135]
	0x028BF2BC TBNZ X8, 0x0, 0x28BF2C4
	0x028BF2C0 BL 0x1C5C684
	0x028BF2C4 LDR X0, [X19]
	0x028BF2C8 LDRB W8, [X0 + 0x135]
	0x028BF2CC TBNZ X8, 0x0, 0x28BF2D4
	0x028BF2D0 BL 0x1C5C684
	0x028BF2D4 LDR X8, [X0 + 0xC0]
	0x028BF2D8 ADRP X20, 0x185F000
	0x028BF2DC LDR X0, [X8 + 0xB0]
	0x028BF2E0 LDRB W8, [X0 + 0x135]
	0x028BF2E4 LDR X20, [X20 + 0x1B8]
	0x028BF2E8 TBNZ X8, 0x0, 0x28BF2F0
	0x028BF2EC BL 0x1C5C684
	0x028BF2F0 LDR X8, [X0 + 0xB8]
	0x028BF2F4 LDR X1, [X20]
	0x028BF2F8 MOV X2, X31
	0x028BF2FC LDR X0, [X8]
	0x028BF300 BL 0x321B938
	0x028BF304 LDR X8, [X19]
	0x028BF308 MOV X20, X0
	0x028BF30C LDRB W9, [X8 + 0x135]
	0x028BF310 TBNZ X9, 0x0, 0x28BF320
	0x028BF314 MOV X0, X8
	0x028BF318 BL 0x1C5C684
	0x028BF31C MOV X8, X0
	0x028BF320 LDR X8, [X8 + 0xC0]
	0x028BF324 LDR X0, [X8 + 0xB0]
	0x028BF328 LDRB W8, [X0 + 0x135]
	0x028BF32C TBNZ X8, 0x0, 0x28BF334
	0x028BF330 BL 0x1C5C684
	0x028BF334 LDR X8, [X0 + 0xB8]
	0x028BF338 STR X20, [X8 + 0x38]
	0x028BF33C LDR X0, [X19]
	0x028BF340 LDRB W8, [X0 + 0x135]
	0x028BF344 TBNZ X8, 0x0, 0x28BF34C
	0x028BF348 BL 0x1C5C684

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x1B1D000
	011 Move W8, [X20+3266]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x185F000
	018 Move X0, [X0+288]
	019 Call 0x1C17CF4
	020 Move X0, 0x1860000
	021 Move X0, [X0+1672]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3266], W8
	025 Compare X19, 0
	026 JumpIfEqual {443}
	027 Move X0, X19
	028 Move X1, X31
	029 Call VisualElement.get_panel, X0
	030 Compare X0, 0
	031 JumpIfEqual {337}
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+2024]
	035 Move X1, [X8+2032]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X8, [X19]
	038 Move W2, [X19+1132]
	039 Move W3, [X19+1136]
	040 Move W1, W0
	041 Move X9, [X8+2376]
	042 Move X4, [X8+2384]
	043 Move X0, X19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move W8, [X19+1180]
	046 Move S1, 1
	047 Subtract S1, S1, S0
	048 Move X0, X19
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X1, X31
	051 NotImplemented "Instruction FCSEL not yet implemented."
	052 Call VisualElement.get_scaledPixelsPerPoint, X0
	053 Move X0, [X19+1096]
	054 Compare X0, 0
	055 JumpIfEqual {443}
	056 Move W22, [X19+1176]
	057 Move X1, X31
	058 Move V8, V0
	059 Call VisualElement.get_resolvedStyle, X0
	060 Compare X0, 0
	061 JumpIfEqual {443}
	062 Move X21, 0x185F000
	063 Move X8, [X0]
	064 Move X21, [X21+288]
	065 Move S0, 0.5
	066 Move X20, X0
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Move X1, [X21]
	069 Multiply S10, S8, S0
	070 Compare W22, 0
	071 JumpIfEqual {83}
	072 Compare W9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move W2, 19
	081 Move X0, X20
	082 Call 0x1C5D788
	083 Compare W9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move W2, 44
	092 Move X0, X20
	093 Call 0x1C5D788
	094 Move W9, [X10]
	095 Add W9, W9, 19
	096 Add X8, X8, W9
	097 Add X0, X8, 312
	098 Move X8, [X0]
	099 Move X1, [X0+8]
	100 Move X0, X20
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X0, [X19+1088]
	103 Compare X0, 0
	104 JumpIfEqual {443}
	105 Move X1, X31
	106 Move V8, V0
	107 Call VisualElement.get_resolvedStyle, X0
	108 Compare X0, 0
	109 JumpIfEqual {443}
	110 Move X8, [X0]
	111 Move X1, [X21]
	112 Move X20, X0
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move W2, 19
	123 Move X0, X20
	124 Call 0x1C5D788
	125 Move W9, [X10]
	126 Add W9, W9, 19
	127 Add X8, X8, W9
	128 Add X0, X8, 312
	129 Move X8, [X0]
	130 Move X1, [X0+8]
	131 Move X0, X20
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move S1, 1
	134 Subtract S0, S0, S8
	135 Subtract S1, S1, S11
	136 Multiply S8, S1, S0
	137 Move W8, S8
	138 Move W9, 1
	139 And W8, W8, 0x7FFFFFFF
	140 NotImplemented "Instruction MOVK not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X0, [X19+1096]
	143 Compare X0, 0
	144 JumpIfEqual {443}
	145 Move X1, X31
	146 Call VisualElement.get_transform, X0
	147 Compare X0, 0
	148 JumpIfEqual {443}
	149 Move X21, 0x1860000
	150 Move X8, [X0]
	151 Move X21, [X21+1672]
	152 Move X20, X0
	153 NotImplemented "Instruction LDRH not yet implemented."
	154 Move X1, [X21]
	155 Compare X9, 0
	156 JumpIfEqual {163}
	157 Move X10, [X8+176]
	158 Add X10, X10, 8
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Subtract X9, X9, 1
	162 Add X10, X10, 16
	163 Move X0, X20
	164 Move W2, W31
	165 Call 0x1C5D788
	166 Move W9, [X10]
	167 Add W9, W9, 44
	168 Add X8, X8, W9
	169 Add X0, X8, 312
	170 Move X8, [X0]
	171 Move X1, [X0+8]
	172 Move X0, X20
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Move X0, [X19+1096]
	175 Compare X0, 0
	176 JumpIfEqual {443}
	177 Move X1, X31
	178 Move V8, V0
	179 Call VisualElement.get_resolvedStyle, X0
	180 Compare X0, 0
	181 JumpIfEqual {443}
	182 Move X8, [X0]
	183 Move X1, [X21]
	184 Move X20, X0
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Compare X9, 0
	187 JumpIfEqual {194}
	188 Move X10, [X8+176]
	189 Add X10, X10, 8
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Subtract X9, X9, 1
	193 Add X10, X10, 16
	194 Move W2, 22
	195 Move X0, X20
	196 Call 0x1C5D788
	197 Move W9, [X10]
	198 Add W9, W9, 22
	199 Add X8, X8, W9
	200 Add X0, X8, 312
	201 Move X8, [X0]
	202 Move X1, [X0+8]
	203 Move X0, X20
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move X0, [X19+1096]
	206 Compare X0, 0
	207 JumpIfEqual {443}
	208 Move X1, X31
	209 Move V9, V0
	210 Call VisualElement.get_resolvedStyle, X0
	211 Compare X0, 0
	212 JumpIfEqual {443}
	213 Move X8, [X0]
	214 Move X1, [X21]
	215 Move X20, X0
	216 NotImplemented "Instruction LDRH not yet implemented."
	217 Compare X9, 0
	218 JumpIfEqual {225}
	219 Move X10, [X8+176]
	220 Add X10, X10, 8
	221 NotImplemented "Instruction LDUR not yet implemented."
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Subtract X9, X9, 1
	224 Add X10, X10, 16
	225 Move W2, 23
	226 Move X0, X20
	227 Call 0x1C5D788
	228 Move W9, [X10]
	229 Add W9, W9, 23
	230 Add X8, X8, W9
	231 Add X0, X8, 312
	232 Move X8, [X0]
	233 Move X1, [X0+8]
	234 Move X0, X20
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Move X0, [X19+1088]
	237 Compare X0, 0
	238 JumpIfEqual {443}
	239 NotImplemented "Instruction FNEG not yet implemented."
	240 Move X1, X31
	241 Subtract S9, S1, S0
	242 Call VisualElement.get_layout, X0
	243 Subtract S0, S2, S8
	244 Add S0, S9, S0
	245 Multiply S8, S11, S0
	246 Move W8, S8
	247 Move W9, 1
	248 And W8, W8, 0x7FFFFFFF
	249 NotImplemented "Instruction MOVK not yet implemented."
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X0, [X19+1096]
	252 Compare X0, 0
	253 JumpIfEqual {443}
	254 Move X1, X31
	255 Call VisualElement.get_transform, X0
	256 Compare X0, 0
	257 JumpIfEqual {443}
	258 Move X21, 0x185F000
	259 Move X8, [X0]
	260 Move X21, [X21+1672]
	261 Move X20, X0
	262 NotImplemented "Instruction LDRH not yet implemented."
	263 Move X1, [X21]
	264 Compare X9, 0
	265 JumpIfEqual {272}
	266 Move X10, [X8+176]
	267 Add X10, X10, 8
	268 NotImplemented "Instruction LDUR not yet implemented."
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Subtract X9, X9, 1
	271 Add X10, X10, 16
	272 Move X0, X20
	273 Move W2, W31
	274 Call 0x1C5D788
	275 NotImplemented "Instruction LDRSW not yet implemented."
	276 Add X8, X8, X9
	277 Add X0, X8, 312
	278 Move X8, [X0]
	279 Move X1, [X0+8]
	280 Move X0, X20
	281 NotImplemented "Instruction BLR not yet implemented."
	282 NotImplemented "Instruction FABD not yet implemented."
	283 NotImplemented "Instruction FCMP not yet implemented."
	284 Move X0, [X19+1096]
	285 Compare X0, 0
	286 JumpIfEqual {443}
	287 Move X1, X31
	288 Call VisualElement.get_transform, X0
	289 Compare X0, 0
	290 JumpIfEqual {443}
	291 Move X8, [X0]
	292 Move X1, [X21]
	293 Move X20, X0
	294 NotImplemented "Instruction LDRH not yet implemented."
	295 Compare X9, 0
	296 JumpIfEqual {303}
	297 Move X10, [X8+176]
	298 Add X10, X10, 8
	299 NotImplemented "Instruction LDUR not yet implemented."
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Subtract X9, X9, 1
	302 Add X10, X10, 16
	303 Move W2, 1
	304 Move X0, X20
	305 Call 0x1C5D788
	306 NotImplemented "Instruction LDRSW not yet implemented."
	307 Add X8, X8, X9
	308 Add X0, X8, 312
	309 Move X8, [X0]
	310 Move X1, [X0+8]
	311 Move X0, X20
	312 NotImplemented "Instruction BLR not yet implemented."
	313 NotImplemented "Instruction FABD not yet implemented."
	314 NotImplemented "Instruction FCMP not yet implemented."
	315 Move X0, [X19+1096]
	316 Compare X0, 0
	317 JumpIfEqual {443}
	318 Move X1, X31
	319 Call VisualElement.get_transform, X0
	320 Compare X0, 0
	321 JumpIfEqual {443}
	322 Move X8, [X0]
	323 Move X1, [X21]
	324 Move X20, X0
	325 NotImplemented "Instruction LDRH not yet implemented."
	326 Compare X9, 0
	327 JumpIfEqual {334}
	328 Move X10, [X8+176]
	329 Add X10, X10, 8
	330 NotImplemented "Instruction LDUR not yet implemented."
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Subtract X9, X9, 1
	333 Add X10, X10, 16
	334 Move W2, 1
	335 Move X0, X20
	336 Call 0x1C5D788
	337 Move X20, [X31+64]
	338 Move X19, [X31+72]
	339 Move X22, [X31+48]
	340 Move X21, [X31+56]
	341 Move X30, [X31+32]
	342 Move D9, [X31+16]
	343 Move D8, [X31+24]
	344 Move D11, [X31+80]
	345 Move D10, [X31+88]
	346 Return 
	347 Move W9, [X10]
	348 Add W9, W9, 1
	349 Add X8, X8, W9
	350 Add X0, X8, 312
	351 Move X8, [X0]
	352 Move X1, [X0+8]
	353 Move S0, W31
	354 Move S2, W31
	355 Move X0, X20
	356 Move V1, V8
	357 NotImplemented "Instruction BLR not yet implemented."
	358 Move X0, [X19+1112]
	359 Compare X0, 0
	360 JumpIfEqual {443}
	361 Move X1, X31
	362 Call VisualElement.get_transform, X0
	363 Compare X0, 0
	364 JumpIfEqual {443}
	365 Move X8, [X0]
	366 Move X1, [X21]
	367 Move X19, X0
	368 NotImplemented "Instruction LDRH not yet implemented."
	369 Compare X9, 0
	370 JumpIfEqual {377}
	371 Move X10, [X8+176]
	372 Add X10, X10, 8
	373 NotImplemented "Instruction LDUR not yet implemented."
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Subtract X9, X9, 1
	376 Add X10, X10, 16
	377 Move W2, 1
	378 Move X0, X19
	379 Call 0x1C5D788
	380 Move W9, [X10]
	381 Add W9, W9, 1
	382 Add X8, X8, W9
	383 Add X0, X8, 312
	384 Move X2, [X0]
	385 Move X1, [X0+8]
	386 Move S0, W31
	387 Move S2, W31
	388 Move X0, X19
	389 Move V1, V8
	390 Move W9, [X10]
	391 Add W9, W9, 1
	392 Add X8, X8, W9
	393 Add X0, X8, 312
	394 Move X8, [X0]
	395 Move X1, [X0+8]
	396 Move S1, W31
	397 Move S2, W31
	398 Move X0, X20
	399 Move V0, V8
	400 NotImplemented "Instruction BLR not yet implemented."
	401 Move X0, [X19+1112]
	402 Compare X0, 0
	403 JumpIfEqual {443}
	404 Move X1, X31
	405 Call VisualElement.get_transform, X0
	406 Compare X0, 0
	407 JumpIfEqual {443}
	408 Move X8, [X0]
	409 Move X1, [X21]
	410 Move X19, X0
	411 NotImplemented "Instruction LDRH not yet implemented."
	412 Compare X9, 0
	413 JumpIfEqual {420}
	414 Move X10, [X8+176]
	415 Add X10, X10, 8
	416 NotImplemented "Instruction LDUR not yet implemented."
	417 NotImplemented "Instruction CMP not yet implemented."
	418 Subtract X9, X9, 1
	419 Add X10, X10, 16
	420 Move W2, 1
	421 Move X0, X19
	422 Call 0x1C5D788
	423 Move W9, [X10]
	424 Add W9, W9, 1
	425 Add X8, X8, W9
	426 Add X0, X8, 312
	427 Move X2, [X0]
	428 Move X1, [X0+8]
	429 Move S1, W31
	430 Move S2, W31
	431 Move X0, X19
	432 Move V0, V8
	433 Move X20, [X31+64]
	434 Move X19, [X31+72]
	435 Move X22, [X31+48]
	436 Move X21, [X31+56]
	437 Move X30, [X31+32]
	438 Move D9, [X31+16]
	439 Move D8, [X31+24]
	440 Move D11, [X31+80]
	441 Move D10, [X31+88]
	442 CallNoReturn X2
	443 Call 0x1C17F20

Method: System.Void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x028BF34C LDR X8, [X0 + 0xC0]
	0x028BF350 LDR X0, [X8 + 0xB0]
	0x028BF354 LDRB W8, [X0 + 0x135]
	0x028BF358 TBNZ X8, 0x0, 0x28BF360
	0x028BF35C BL 0x1C5C684
	0x028BF360 LDR X0, [X19]
	0x028BF364 LDRB W8, [X0 + 0x135]
	0x028BF368 TBNZ X8, 0x0, 0x28BF370
	0x028BF36C BL 0x1C5C684
	0x028BF370 LDR X8, [X0 + 0xC0]
	0x028BF374 ADRP X20, 0x185F000
	0x028BF378 LDR X0, [X8 + 0xB0]
	0x028BF37C LDRB W8, [X0 + 0x135]
	0x028BF380 LDR X20, [X20 + 0x1C0]
	0x028BF384 TBNZ X8, 0x0, 0x28BF38C
	0x028BF388 BL 0x1C5C684
	0x028BF38C LDR X8, [X0 + 0xB8]
	0x028BF390 LDR X1, [X20]
	0x028BF394 MOV X2, X31
	0x028BF398 LDR X0, [X8]
	0x028BF39C BL 0x321B938
	0x028BF3A0 LDR X8, [X19]
	0x028BF3A4 MOV X20, X0
	0x028BF3A8 LDRB W9, [X8 + 0x135]
	0x028BF3AC TBNZ X9, 0x0, 0x28BF3BC
	0x028BF3B0 MOV X0, X8
	0x028BF3B4 BL 0x1C5C684
	0x028BF3B8 MOV X8, X0
	0x028BF3BC LDR X8, [X8 + 0xC0]
	0x028BF3C0 LDR X0, [X8 + 0xB0]
	0x028BF3C4 LDRB W8, [X0 + 0x135]
	0x028BF3C8 TBNZ X8, 0x0, 0x28BF3D0
	0x028BF3CC BL 0x1C5C684
	0x028BF3D0 LDR X8, [X0 + 0xB8]
	0x028BF3D4 STR X20, [X8 + 0x40]
	0x028BF3D8 LDR X0, [X19]
	0x028BF3DC LDRB W8, [X0 + 0x135]
	0x028BF3E0 TBNZ X8, 0x0, 0x28BF3E8
	0x028BF3E4 BL 0x1C5C684
	0x028BF3E8 LDR X8, [X0 + 0xC0]
	0x028BF3EC LDR X0, [X8 + 0xB0]
	0x028BF3F0 LDRB W8, [X0 + 0x135]
	0x028BF3F4 TBNZ X8, 0x0, 0x28BF3FC
	0x028BF3F8 BL 0x1C5C684
	0x028BF3FC LDR X0, [X19]
	0x028BF400 LDRB W8, [X0 + 0x135]
	0x028BF404 TBNZ X8, 0x0, 0x28BF40C
	0x028BF408 BL 0x1C5C684
	0x028BF40C LDR X8, [X0 + 0xC0]
	0x028BF410 ADRP X20, 0x185F000
	0x028BF414 LDR X0, [X8 + 0xB0]
	0x028BF418 LDRB W8, [X0 + 0x135]
	0x028BF41C LDR X20, [X20 + 0x1D0]
	0x028BF420 TBNZ X8, 0x0, 0x28BF428
	0x028BF424 BL 0x1C5C684
	0x028BF428 LDR X8, [X0 + 0xB8]
	0x028BF42C LDR X1, [X20]
	0x028BF430 MOV X2, X31
	0x028BF434 LDR X0, [X8]
	0x028BF438 BL 0x321B938
	0x028BF43C LDR X8, [X19]
	0x028BF440 MOV X20, X0
	0x028BF444 LDRB W9, [X8 + 0x135]
	0x028BF448 TBNZ X9, 0x0, 0x28BF458
	0x028BF44C MOV X0, X8
	0x028BF450 BL 0x1C5C684
	0x028BF454 MOV X8, X0
	0x028BF458 LDR X8, [X8 + 0xC0]
	0x028BF45C LDR X0, [X8 + 0xB0]
	0x028BF460 LDRB W8, [X0 + 0x135]
	0x028BF464 TBNZ X8, 0x0, 0x28BF46C
	0x028BF468 BL 0x1C5C684
	0x028BF46C LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1B1C000
	008 Move W8, [X22+3267]
	009 Move X20, X2
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x1860000
	017 Move X0, [X0+336]
	018 Call 0x1C17CF4
	019 Move X0, 0x1860000
	020 Move X0, [X0+344]
	021 Call 0x1C17CF4
	022 Move X0, 0x1860000
	023 Move X0, [X0+352]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3267], W8
	027 Compare X21, 0
	028 JumpIfEqual {85}
	029 Move X0, X21
	030 Move X1, X19
	031 Move X2, X31
	032 Call VisualElement.ExecuteDefaultAction, X0, X1
	033 Compare X19, 0
	034 JumpIfEqual {78}
	035 Move X8, [X19]
	036 Move X22, 0x1860000
	037 Move X23, 0x1860000
	038 Move X0, X19
	039 Move X9, [X8+392]
	040 Move X1, [X8+400]
	041 Move X22, [X22+344]
	042 Move X23, [X23+336]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X8, [X22]
	045 Move X22, X0
	046 Move W9, [X8+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Move X0, [X23]
	052 Call 0x2D0E5C8
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X9, 0x1860000
	055 Move X9, [X9+352]
	056 Move X8, [X19]
	057 Move X1, [X9]
	058 Move W10, [X8+304]
	059 Move W9, [X1+304]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, [X8+200]
	062 Add X8, X8, X9
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X20+32]
	066 Move X0, X21
	067 Move X1, X19
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X8, [X8+192]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X2, [X8+264]
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Call 0x28BEC1C, X0, X1
	077 Return 
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Move X23, [X31+56]
	084 Return 
	085 Call 0x1C17F20
	086 Move X0, X19
	087 Call 0x1C181E0

Method: System.Void UpdateTextFieldVisibility()

Disassembly:
	0x028BF470 STR X20, [X8 + 0x48]
	0x028BF474 LDR X0, [X19]
	0x028BF478 LDRB W8, [X0 + 0x135]
	0x028BF47C TBNZ X8, 0x0, 0x28BF484
	0x028BF480 BL 0x1C5C684
	0x028BF484 LDR X8, [X0 + 0xC0]
	0x028BF488 LDR X0, [X8 + 0xB0]
	0x028BF48C LDRB W8, [X0 + 0x135]
	0x028BF490 TBNZ X8, 0x0, 0x28BF4A0
	0x028BF494 LDP X20, X19, [X31 + 0x10]
	0x028BF498 LDP X30, X21, [X31], #0x20
	0x028BF49C B 0x1C5C684
	0x028BF4A0 LDP X20, X19, [X31 + 0x10]
	0x028BF4A4 LDP X30, X21, [X31], #0x20
	0x028BF4A8 RET
	0x028BF4AC LDR X0, [X0 + 0x440]
	0x028BF4B0 RET
	0x028BF4B4 STR X1, [X0 + 0x440]
	0x028BF4B8 RET
	0x028BF4BC LDR X0, [X0 + 0x448]
	0x028BF4C0 RET
	0x028BF4C4 STR X1, [X0 + 0x448]
	0x028BF4C8 RET
	0x028BF4CC LDR X0, [X0 + 0x450]
	0x028BF4D0 RET
	0x028BF4D4 STR X1, [X0 + 0x450]
	0x028BF4D8 RET
	0x028BF4DC LDR X0, [X0 + 0x458]
	0x028BF4E0 RET
	0x028BF4E4 STR X1, [X0 + 0x458]
	0x028BF4E8 RET
	0x028BF4EC LDR X0, [X0 + 0x460]
	0x028BF4F0 RET
	0x028BF4F4 STR X1, [X0 + 0x460]
	0x028BF4F8 RET
	0x028BF4FC LDR V0, [X0 + 0x46C]
	0x028BF500 RET
	0x028BF504 STR D8, [X31 - 0x20]!
	0x028BF508 STR X30, [X31 + 0x8]
	0x028BF50C STP X20, X19, [X31 + 0x10]
	0x028BF510 LDR X8, [X1 + 0x20]
	0x028BF514 MOV X19, X0
	0x028BF518 MOV X20, X1
	0x028BF51C MOV V8.16B, V0.16B
	0x028BF520 LDR X8, [X8 + 0xC0]
	0x028BF524 LDR X8, [X8 + 0x10]
	0x028BF528 MOV X0, X8
	0x028BF52C BL 0x211C348
	0x028BF530 CBZ X0, 0x28BF5A0
	0x028BF534 LDR X8, [X0]
	0x028BF538 LDR V0, [X19 + 0x46C]
	0x028BF53C MOV V1.16B, V8.16B
	0x028BF540 LDP X9, X1, [X8 + 0x1B8]
	0x028BF544 BLR X9
	0x028BF548 TBZ X0, 0x0, 0x28BF55C
	0x028BF54C LDP X20, X19, [X31 + 0x10]
	0x028BF550 LDR X30, [X31 + 0x8]
	0x028BF554 LDR V8, [X31], #0x20
	0x028BF558 RET
	0x028BF55C STR S8, [X19 + 0x46C]
	0x028BF560 LDR X8, [X20 + 0x20]
	0x028BF564 MOV X0, X19
	0x028BF568 LDR X8, [X8 + 0xC0]
	0x028BF56C LDR X1, [X8 + 0x30]
	0x028BF570 BL 0x28C028C
	0x028BF574 LDR X8, [X20 + 0x20]
	0x028BF578 MOV X0, X19
	0x028BF57C LDR X8, [X8 + 0xC0]
	0x028BF580 LDR X1, [X8 + 0x38]
	0x028BF584 BL 0x28C1B30
	0x028BF588 MOV X0, X19
	0x028BF58C LDP X20, X19, [X31 + 0x10]
	0x028BF590 LDR X30, [X31 + 0x8]
	0x028BF594 MOV X1, X31
	0x028BF598 LDR V8, [X31], #0x20
	0x028BF59C B 0x3DF276C
	0x028BF5A0 BL 0x1C16F20
	0x028BF5A4 LDR V0, [X0 + 0x470]
	0x028BF5A8 RET
	0x028BF5AC STR D8, [X31 - 0x20]!
	0x028BF5B0 STR X30, [X31 + 0x8]
	0x028BF5B4 STP X20, X19, [X31 + 0x10]
	0x028BF5B8 LDR X8, [X1 + 0x20]
	0x028BF5BC MOV X19, X0
	0x028BF5C0 MOV X20, X1
	0x028BF5C4 MOV V8.16B, V0.16B
	0x028BF5C8 LDR X8, [X8 + 0xC0]
	0x028BF5CC LDR X8, [X8 + 0x10]
	0x028BF5D0 MOV X0, X8
	0x028BF5D4 BL 0x211C348
	0x028BF5D8 CBZ X0, 0x28BF648
	0x028BF5DC LDR X8, [X0]
	0x028BF5E0 LDR V0, [X19 + 0x470]
	0x028BF5E4 MOV V1.16B, V8.16B
	0x028BF5E8 LDP X9, X1, [X8 + 0x1B8]
	0x028BF5EC BLR X9
	0x028BF5F0 TBZ X0, 0x0, 0x28BF604
	0x028BF5F4 LDP X20, X19, [X31 + 0x10]
	0x028BF5F8 LDR X30, [X31 + 0x8]
	0x028BF5FC LDR V8, [X31], #0x20
	0x028BF600 RET
	0x028BF604 STR S8, [X19 + 0x470]
	0x028BF608 LDR X8, [X20 + 0x20]
	0x028BF60C MOV X0, X19
	0x028BF610 LDR X8, [X8 + 0xC0]
	0x028BF614 LDR X1, [X8 + 0x30]
	0x028BF618 BL 0x28C028C
	0x028BF61C LDR X8, [X20 + 0x20]
	0x028BF620 MOV X0, X19
	0x028BF624 LDR X8, [X8 + 0xC0]
	0x028BF628 LDR X1, [X8 + 0x38]
	0x028BF62C BL 0x28C1B30
	0x028BF630 MOV X0, X19
	0x028BF634 LDP X20, X19, [X31 + 0x10]
	0x028BF638 LDR X30, [X31 + 0x8]
	0x028BF63C MOV X1, X31
	0x028BF640 LDR V8, [X31], #0x20
	0x028BF644 B 0x3DF276C
	0x028BF648 BL 0x1C16F20
	0x028BF64C STP X30, X21, [X31 - 0x20]!
	0x028BF650 STP X20, X19, [X31 + 0x10]
	0x028BF654 LDR X8, [X0]
	0x028BF658 STR S0, [X0 + 0x470]
	0x028BF65C LDRB W21, [X0 + 0x479]
	0x028BF660 MOV X20, X1
	0x028BF664 LDR X9, [X8 + 0x7E8]
	0x028BF668 LDR X8, [X8 + 0x7F0]
	0x028BF66C MOV X19, X0
	0x028BF670 MOV X1, X8
	0x028BF674 BLR X9
	0x028BF678 CBZ W21, 0x28BF690
	0x028BF67C LDR X8, [X20 + 0x20]
	0x028BF680 MOV X0, X19
	0x028BF684 LDR X8, [X8 + 0xC0]
	0x028BF688 LDR X1, [X8 + 0x58]
	0x028BF68C BL 0x28BF798
	0x028BF690 LDR X8, [X19]
	0x028BF694 MOV X0, X19
	0x028BF698 LDR X9, [X8 + 0x888]
	0x028BF69C LDR X1, [X8 + 0x890]
	0x028BF6A0 BLR X9
	0x028BF6A4 LDR X8, [X20 + 0x20]
	0x028BF6A8 MOV X0, X19
	0x028BF6AC LDR X8, [X8 + 0xC0]
	0x028BF6B0 LDR X1, [X8 + 0x38]
	0x028BF6B4 BL 0x28C1B30
	0x028BF6B8 MOV X0, X19
	0x028BF6BC LDP X20, X19, [X31 + 0x10]
	0x028BF6C0 MOV X1, X31
	0x028BF6C4 LDP X30, X21, [X31], #0x20
	0x028BF6C8 B 0x3DF276C
	0x028BF6CC LDR V0, [X0 + 0x474]
	0x028BF6D0 RET
	0x028BF6D4 STR S0, [X0 + 0x474]
	0x028BF6D8 RET
	0x028BF6DC LDRB W0, [X0 + 0x478]
	0x028BF6E0 RET
	0x028BF6E4 LDRB W9, [X0 + 0x478]
	0x028BF6E8 AND W8, W1, 0x1
	0x028BF6EC CMP W9, W8
	0x028BF6F0 B.NE 0x28BF6F8
	0x028BF6F4 RET
	0x028BF6F8 STRB W8, [X0 + 0x478]
	0x028BF6FC LDR X8, [X2 + 0x20]
	0x028BF700 LDR X8, [X8 + 0xC0]
	0x028BF704 LDR X1, [X8 + 0x68]
	0x028BF708 B 0x28C22E0
	0x028BF70C LDRB W0, [X0 + 0x479]
	0x028BF710 RET
	0x028BF714 AND W8, W1, 0x1
	0x028BF718 STRB W8, [X0 + 0x479]
	0x028BF71C RET
	0x028BF720 LDR X0, [X0 + 0x480]
	0x028BF724 RET
	0x028BF728 STR X1, [X0 + 0x480]
	0x028BF72C RET
	0x028BF730 STR D8, [X31 - 0x20]!
	0x028BF734 STP X30, X19, [X31 + 0x10]
	0x028BF738 STP S2, S1, [X31 + 0x8]
	0x028BF73C LDR X8, [X1 + 0x20]
	0x028BF740 MOV X19, X1
	0x028BF744 ADD X0, X31, 0xC
	0x028BF748 MOV V8.16B, V0.16B
	0x028BF74C LDR X8, [X8 + 0xC0]
	0x028BF750 LDR X1, [X8 + 0x80]
	0x028BF754 BL 0x338FCB8
	0x028BF758 CMP W0, 0x1
	0x028BF75C B.LT 0x28BF768
	0x028BF760 LDR V0, [X31 + 0xC]
	0x028BF764 B 0x28BF78C
	0x028BF768 LDR X8, [X19 + 0x20]
	0x028BF76C ADD X0, X31, 0x8
	0x028BF770 MOV V0.16B, V8.16B
	0x028BF774 LDR X8, [X8 + 0xC0]
	0x028BF778 LDR X1, [X8 + 0x80]
	0x028BF77C BL 0x338FCB8
	0x028BF780 LDR V0, [X31 + 0x8]
	0x028BF784 CMP W0, 0x0
	0x028BF788 FCSEL S0, S0, S8, LT
	0x028BF78C LDP X30, X19, [X31 + 0x10]
	0x028BF790 LDR V8, [X31], #0x20
	0x028BF794 RET
	0x028BF798 SUB X31, X31, 0x30
	0x028BF79C STP D9, D8, [X31 + 0x10]
	0x028BF7A0 STP X30, X19, [X31 + 0x20]
	0x028BF7A4 LDR X8, [X1 + 0x20]
	0x028BF7A8 LDR V1, [X0 + 0x46C]
	0x028BF7AC MOV X19, X1
	0x028BF7B0 MOV V8.16B, V0.16B
	0x028BF7B4 LDR X8, [X8 + 0xC0]
	0x028BF7B8 STR S1, [X31 + 0xC]
	0x028BF7BC LDR V9, [X0 + 0x470]
	0x028BF7C0 ADD X0, X31, 0xC
	0x028BF7C4 LDR X1, [X8 + 0x80]
	0x028BF7C8 MOV V0.16B, V9.16B
	0x028BF7CC BL 0x338FCB8
	0x028BF7D0 LDR V2, [X31 + 0xC]
	0x028BF7D4 CMP W0, 0x1
	0x028BF7D8 B.LT 0x28BF7E8
	0x028BF7DC MOV V1.16B, V9.16B
	0x028BF7E0 STR S9, [X31 + 0xC]
	0x028BF7E4 B 0x28BF7F0
	0x028BF7E8 MOV V1.16B, V2.16B
	0x028BF7EC MOV V2.16B, V9.16B
	0x028BF7F0 LDR X8, [X19 + 0x20]
	0x028BF7F4 MOV V0.16B, V8.16B
	0x028BF7F8 LDR X8, [X8 + 0xC0]
	0x028BF7FC LDR X1, [X8 + 0x98]
	0x028BF800 BL 0x28BF730
	0x028BF804 LDP X30, X19, [X31 + 0x20]
	0x028BF808 LDP D9, D8, [X31 + 0x10]
	0x028BF80C ADD X31, X31, 0x30
	0x028BF810 RET
	0x028BF814 STR X30, [X31 - 0x10]!
	0x028BF818 CBZ X0, 0x28BF830
	0x028BF81C LDR X8, [X1 + 0x20]
	0x028BF820 LDR X8, [X8 + 0xC0]
	0x028BF824 LDR X1, [X8 + 0x50]
	0x028BF828 LDR X30, [X31], #0x10
	0x028BF82C B 0x28A1204
	0x028BF830 BL 0x1C16F20
	0x028BF834 STR X30, [X31 - 0x20]!
	0x028BF838 STP X20, X19, [X31 + 0x10]
	0x028BF83C LDRB W8, [X0 + 0x479]
	0x028BF840 MOV X20, X1
	0x028BF844 MOV X19, X0
	0x028BF848 CBZ W8, 0x28BF860
	0x028BF84C LDR X8, [X20 + 0x20]
	0x028BF850 MOV X0, X19
	0x028BF854 LDR X8, [X8 + 0xC0]
	0x028BF858 LDR X1, [X8 + 0x58]
	0x028BF85C BL 0x28BF798
	0x028BF860 LDR X8, [X20 + 0x20]
	0x028BF864 MOV X0, X19
	0x028BF868 LDP X20, X19, [X31 + 0x10]
	0x028BF86C LDR X8, [X8 + 0xC0]
	0x028BF870 LDR X1, [X8 + 0xA0]
	0x028BF874 LDR X30, [X31], #0x20
	0x028BF878 B 0x28A120C
	0x028BF87C RET
	0x028BF880 RET
	0x028BF884 RET
	0x028BF888 STR X30, [X31 - 0x20]!
	0x028BF88C STP X20, X19, [X31 + 0x10]
	0x028BF890 LDRB W8, [X0 + 0x479]
	0x028BF894 MOV X20, X1
	0x028BF898 MOV X19, X0
	0x028BF89C CBZ W8, 0x28BF8B4
	0x028BF8A0 LDR X8, [X20 + 0x20]
	0x028BF8A4 MOV X0, X19
	0x028BF8A8 LDR X8, [X8 + 0xC0]
	0x028BF8AC LDR X1, [X8 + 0x58]
	0x028BF8B0 BL 0x28BF798
	0x028BF8B4 LDR X8, [X20 + 0x20]
	0x028BF8B8 MOV X0, X19
	0x028BF8BC LDR X8, [X8 + 0xC0]
	0x028BF8C0 LDR X1, [X8 + 0x60]
	0x028BF8C4 BL 0x28A29FC
	0x028BF8C8 LDR X8, [X20 + 0x20]
	0x028BF8CC MOV X0, X19
	0x028BF8D0 LDR X8, [X8 + 0xC0]
	0x028BF8D4 LDR X1, [X8 + 0x38]
	0x028BF8D8 BL 0x28C1B30
	0x028BF8DC LDR X8, [X20 + 0x20]
	0x028BF8E0 MOV X0, X19
	0x028BF8E4 LDP X20, X19, [X31 + 0x10]
	0x028BF8E8 LDR X8, [X8 + 0xC0]
	0x028BF8EC LDR X1, [X8 + 0xA8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1B1C000
	007 Move W8, [X21+3268]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {58}
	014 Move X0, 0x185F000
	015 Move X0, [X0+3488]
	016 Call 0x1C17CF4
	017 Move X0, 0x185F000
	018 Move X0, [X0+3496]
	019 Call 0x1C17CF4
	020 Move X0, 0x1860000
	021 Move X0, [X0+248]
	022 Call 0x1C17CF4
	023 Move X0, 0x185F000
	024 Move X0, [X0+3512]
	025 Call 0x1C17CF4
	026 Move X0, 0x185F000
	027 Move X0, [X0+3520]
	028 Call 0x1C17CF4
	029 Move X0, 0x1860000
	030 Move X0, [X0+360]
	031 Call 0x1C17CF4
	032 Move X0, 0x185F000
	033 Move X0, [X0+3480]
	034 Call 0x1C17CF4
	035 Move X0, 0x185F000
	036 Move X0, [X0+3504]
	037 Call 0x1C17CF4
	038 Move X0, 0x1860000
	039 Move X0, [X0+368]
	040 Call 0x1C17CF4
	041 Move X0, 0x1860000
	042 Move X0, [X0+264]
	043 Call 0x1C17CF4
	044 Move X0, 0x1860000
	045 Move X0, [X0+376]
	046 Call 0x1C17CF4
	047 Move X0, 0x1860000
	048 Move X0, [X0+384]
	049 Call 0x1C17CF4
	050 Move X0, 0x1860000
	051 Move X0, [X0+392]
	052 Call 0x1C17CF4
	053 Move X0, 0x1860000
	054 Move X0, [X0+400]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X21+3268], W8
	058 Move X8, [X19]
	059 Move X0, X19
	060 Move X9, [X8+2312]
	061 Move X1, [X8+2320]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X8, [X19+1120]
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {213}
	068 Compare X8, 0
	069 JumpIfNotEqual {314}
	070 Move X8, 0x1860000
	071 Move X8, [X8+392]
	072 Move X0, [X8]
	073 Call 0x1C17F10
	074 Move X1, X31
	075 Move X21, X0
	076 Call TextField..ctor, X0
	077 Compare X21, 0
	078 JumpIfEqual {320}
	079 Move X8, 0x1860000
	080 Move X8, [X8+400]
	081 Move X0, X21
	082 Move X2, X31
	083 Move X1, [X8]
	084 Call VisualElement.set_name, X0, X1
	085 Move X8, [X20+32]
	086 Move X8, [X8+192]
	087 Move [X19+1120], X21
	088 Move X0, [X8+176]
	089 Move W8, [X0+309]
	090 Move TEMP, X8
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {95}
	094 Call 0x1C5D684
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X8, [X20+32]
	100 Move X8, [X8+192]
	101 Move X0, [X8+176]
	102 Move W8, [X0+309]
	103 Move TEMP, X8
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {108}
	107 Call 0x1C5D684
	108 Move X8, [X0+184]
	109 Move X0, X21
	110 Move X2, X31
	111 Move X1, [X8+72]
	112 Call VisualElement.AddToClassList, X0, X1
	113 Move X8, 0x1860000
	114 Move X21, [X19+1120]
	115 Move X8, [X8+264]
	116 Move X0, [X8]
	117 Call 0x1C17F10
	118 Move X8, [X20+32]
	119 Move X1, X19
	120 Move X3, X31
	121 Move X22, X0
	122 Move X8, [X8+192]
	123 Move X2, [X8+568]
	124 Call 0x2D0F824, X0, X1, X2
	125 Compare X21, 0
	126 JumpIfEqual {320}
	127 Move X8, 0x1860000
	128 Move X8, [X8+248]
	129 Move W2, 1
	130 Move X0, X21
	131 Move X1, X22
	132 Move X3, [X8]
	133 Call 0x21A2534, X0, X1, X2
	134 Move X8, 0x1860000
	135 Move X21, [X19+1120]
	136 Move X8, [X8+368]
	137 Move X0, [X8]
	138 Call 0x1C17F10
	139 Move X8, [X20+32]
	140 Move X1, X19
	141 Move X3, X31
	142 Move X22, X0
	143 Move X8, [X8+192]
	144 Move X2, [X8+576]
	145 Call 0x2D0F824, X0, X1, X2
	146 Move X8, 0x1860000
	147 Move X8, [X8+376]
	148 Move X0, X21
	149 Move X1, X22
	150 Move X2, [X8]
	151 Call INotifyValueChangedExtensions.RegisterValueChangedCallback, X0, X1
	152 Move X8, 0x185F000
	153 Move X21, [X19+1120]
	154 Move X8, [X8+3480]
	155 Move X0, [X8]
	156 Call 0x1C17F10
	157 Move X8, [X20+32]
	158 Move X1, X19
	159 Move X3, X31
	160 Move X22, X0
	161 Move X8, [X8+192]
	162 Move X2, [X8+584]
	163 Call 0x2D0F824, X0, X1, X2
	164 Compare X21, 0
	165 JumpIfEqual {320}
	166 Move X8, 0x185F000
	167 Move X8, [X8+3488]
	168 Move X0, X21
	169 Move X1, X22
	170 Move W2, W31
	171 Move X3, [X8]
	172 Call 0x21A2534, X0, X1, X2
	173 Move X8, 0x185F000
	174 Move X21, [X19+1120]
	175 Move X8, [X8+3504]
	176 Move X0, [X8]
	177 Call 0x1C17F10
	178 Move X8, [X20+32]
	179 Move X1, X19
	180 Move X3, X31
	181 Move X22, X0
	182 Move X8, [X8+192]
	183 Move X2, [X8+592]
	184 Call 0x2D0F824, X0, X1, X2
	185 Compare X21, 0
	186 JumpIfEqual {320}
	187 Move X8, 0x185F000
	188 Move X8, [X8+3496]
	189 Move X0, X21
	190 Move X1, X22
	191 Move W2, W31
	192 Move X3, [X8]
	193 Call 0x21A2534, X0, X1, X2
	194 Move X8, [X20+32]
	195 Move X0, X19
	196 Move X8, [X8+192]
	197 Move X1, [X8+208]
	198 Call BaseField`1<Int32>.get_visualInput, X0
	199 Compare X0, 0
	200 JumpIfEqual {320}
	201 Move X1, [X19+1120]
	202 Move X2, X31
	203 Call VisualElement.Add, X0, X1
	204 Move X8, [X20+32]
	205 Move X0, X19
	206 Move X20, [X31+32]
	207 Move X19, [X31+40]
	208 Move X22, [X31+16]
	209 Move X21, [X31+24]
	210 Move X8, [X8+192]
	211 Move X1, [X8+168]
	212 Move X30, [X31+48]
	213 Compare X8, 0
	214 JumpIfEqual {314}
	215 Move X0, X8
	216 Move X1, X31
	217 Call VisualElement.get_panel, X0
	218 Compare X0, 0
	219 JumpIfEqual {314}
	220 Move X0, [X19+1120]
	221 Compare X0, 0
	222 JumpIfEqual {320}
	223 Move X1, X31
	224 Call VisualElement.get_panel, X0
	225 Compare X0, 0
	226 JumpIfEqual {232}
	227 Move X0, [X19+1120]
	228 Compare X0, 0
	229 JumpIfEqual {320}
	230 Move X1, X31
	231 Call VisualElement.RemoveFromHierarchy, X0
	232 Move X8, 0x1860000
	233 Move X21, [X19+1120]
	234 Move X8, [X8+264]
	235 Move X0, [X8]
	236 Call 0x1C17F10
	237 Move X8, [X20+32]
	238 Move X1, X19
	239 Move X3, X31
	240 Move X22, X0
	241 Move X8, [X8+192]
	242 Move X2, [X8+568]
	243 Call 0x2D0F824, X0, X1, X2
	244 Compare X21, 0
	245 JumpIfEqual {320}
	246 Move X8, 0x1860000
	247 Move X8, [X8+360]
	248 Move X0, X21
	249 Move X1, X22
	250 Move W2, W31
	251 Move X3, [X8]
	252 Call 0x21A28B4, X0, X1, X2
	253 Move X8, 0x1860000
	254 Move X21, [X19+1120]
	255 Move X8, [X8+368]
	256 Move X0, [X8]
	257 Call 0x1C17F10
	258 Move X8, [X20+32]
	259 Move X1, X19
	260 Move X3, X31
	261 Move X22, X0
	262 Move X8, [X8+192]
	263 Move X2, [X8+576]
	264 Call 0x2D0F824, X0, X1, X2
	265 Move X8, 0x1860000
	266 Move X8, [X8+384]
	267 Move X0, X21
	268 Move X1, X22
	269 Move X2, [X8]
	270 Call INotifyValueChangedExtensions.UnregisterValueChangedCallback, X0, X1
	271 Move X8, 0x185F000
	272 Move X21, [X19+1120]
	273 Move X8, [X8+3480]
	274 Move X0, [X8]
	275 Call 0x1C17F10
	276 Move X8, [X20+32]
	277 Move X1, X19
	278 Move X3, X31
	279 Move X22, X0
	280 Move X8, [X8+192]
	281 Move X2, [X8+584]
	282 Call 0x2D0F824, X0, X1, X2
	283 Compare X21, 0
	284 JumpIfEqual {320}
	285 Move X8, 0x185F000
	286 Move X8, [X8+3512]
	287 Move X0, X21
	288 Move X1, X22
	289 Move W2, W31
	290 Move X3, [X8]
	291 Call 0x21A28B4, X0, X1, X2
	292 Move X8, 0x185F000
	293 Move X21, [X19+1120]
	294 Move X8, [X8+3504]
	295 Move X0, [X8]
	296 Call 0x1C17F10
	297 Move X8, [X20+32]
	298 Move X1, X19
	299 Move X3, X31
	300 Move X20, X0
	301 Move X8, [X8+192]
	302 Move X2, [X8+592]
	303 Call 0x2D0F824, X0, X1, X2
	304 Compare X21, 0
	305 JumpIfEqual {320}
	306 Move X8, 0x185F000
	307 Move X8, [X8+3520]
	308 Move X0, X21
	309 Move X1, X20
	310 Move W2, W31
	311 Move X3, [X8]
	312 Call 0x21A28B4, X0, X1, X2
	313 Move [X19+1120], X31
	314 Move X20, [X31+32]
	315 Move X19, [X31+40]
	316 Move X22, [X31+16]
	317 Move X21, [X31+24]
	318 Move X30, [X31+48]
	319 Return 
	320 Call 0x1C17F20

Method: System.Void UpdateTextFieldValue()

Disassembly:
	0x028BF8F0 LDR X30, [X31], #0x20
	0x028BF8F4 B 0x28C2760
	0x028BF8F8 LDR W0, [X0 + 0x498]
	0x028BF8FC RET
	0x028BF900 STP X30, X21, [X31 - 0x20]!
	0x028BF904 STP X20, X19, [X31 + 0x10]
	0x028BF908 STR W1, [X0 + 0x498]
	0x028BF90C LDR X8, [X2 + 0x20]
	0x028BF910 MOV X19, X0
	0x028BF914 MOV X20, X2
	0x028BF918 MOV W21, W1
	0x028BF91C LDR X8, [X8 + 0xC0]
	0x028BF920 LDR X0, [X8 + 0xB0]
	0x028BF924 LDRB W8, [X0 + 0x135]
	0x028BF928 TBNZ X8, 0x0, 0x28BF930
	0x028BF92C BL 0x1C5C684
	0x028BF930 LDR W8, [X0 + 0xE0]
	0x028BF934 CBNZ W8, 0x28BF93C
	0x028BF938 BL 0x1C16DFC
	0x028BF93C LDR X8, [X20 + 0x20]
	0x028BF940 LDR X8, [X8 + 0xC0]
	0x028BF944 LDR X0, [X8 + 0xB0]
	0x028BF948 LDRB W8, [X0 + 0x135]
	0x028BF94C TBNZ X8, 0x0, 0x28BF954
	0x028BF950 BL 0x1C5C684
	0x028BF954 LDR X8, [X0 + 0xB8]
	0x028BF958 CBZ W21, 0x28BF98C
	0x028BF95C LDR X1, [X8 + 0x18]
	0x028BF960 MOV X0, X19
	0x028BF964 MOV X2, X31
	0x028BF968 BL 0x3DF1B54
	0x028BF96C LDR X8, [X20 + 0x20]
	0x028BF970 LDR X8, [X8 + 0xC0]
	0x028BF974 LDR X0, [X8 + 0xB0]
	0x028BF978 LDRB W8, [X0 + 0x135]
	0x028BF97C TBNZ X8, 0x0, 0x28BF984
	0x028BF980 BL 0x1C5C684
	0x028BF984 MOVZ W8, 0x20
	0x028BF988 B 0x28BF9B8
	0x028BF98C LDR X1, [X8 + 0x20]
	0x028BF990 MOV X0, X19
	0x028BF994 MOV X2, X31
	0x028BF998 BL 0x3DF1B54
	0x028BF99C LDR X8, [X20 + 0x20]
	0x028BF9A0 LDR X8, [X8 + 0xC0]
	0x028BF9A4 LDR X0, [X8 + 0xB0]
	0x028BF9A8 LDRB W8, [X0 + 0x135]
	0x028BF9AC TBNZ X8, 0x0, 0x28BF9B4
	0x028BF9B0 BL 0x1C5C684
	0x028BF9B4 MOVZ W8, 0x18
	0x028BF9B8 LDR X9, [X0 + 0xB8]
	0x028BF9BC MOV X0, X19
	0x028BF9C0 LDP X20, X19, [X31 + 0x10]
	0x028BF9C4 MOV X2, X31
	0x028BF9C8 LDR X1, [X9, X8, LSL]
	0x028BF9CC LDP X30, X21, [X31], #0x20
	0x028BF9D0 B 0x3DF1C70

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x1B1C000
	007 Move W8, [X19+3269]
	008 Move X20, X1
	009 Move X21, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x1837000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move X0, 0x1860000
	018 Move X0, [X0+408]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+3269], W8
	022 Move X19, [X21+1120]
	023 Compare X19, 0
	024 JumpIfEqual {62}
	025 Move W8, [X21+1128]
	026 Compare W8, 0
	027 JumpIfNotEqual {62}
	028 Move X8, 0x1837000
	029 Move X8, [X8+3144]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X31
	036 Call CultureInfo.get_InvariantCulture
	037 Move X8, [X21]
	038 Move X22, X0
	039 Move X0, X21
	040 Move X9, [X8+2024]
	041 Move X1, [X8+2032]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move [X31+12], W0
	044 Move X8, [X20+32]
	045 Add X1, X31, 12
	046 Move X8, [X8+192]
	047 Move X0, [X8+8]
	048 Call 0x1C17E04
	049 Move X8, 0x1860000
	050 Move X8, [X8+408]
	051 Move X2, X0
	052 Move X0, X22
	053 Move X3, X31
	054 Move X1, [X8]
	055 Call String.Format, X0, X1, X2
	056 Move X8, [X19]
	057 Move X1, X0
	058 Move X0, X19
	059 Move X9, [X8+2184]
	060 Move X2, [X8+2192]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return 

Method: System.Void OnTextFieldFocusIn(UnityEngine.UIElements.FocusInEvent evt)

Disassembly:
	0x028BF9D4 LDRB W0, [X0 + 0x49C]
	0x028BF9D8 RET
	0x028BF9DC LDRB W9, [X0 + 0x49C]

ISIL:
	001 Move W8, 1
	002 Move [X0+1128], W8
	003 Return 

Method: System.Void OnTextFieldFocusOut(UnityEngine.UIElements.FocusOutEvent evt)

Disassembly:
	0x028BF9E0 AND W8, W1, 0x1
	0x028BF9E4 CMP W9, W8
	0x028BF9E8 B.NE 0x28BF9F0
	0x028BF9EC RET
	0x028BF9F0 STRB W8, [X0 + 0x49C]

ISIL:
	001 Move [X0+1128], W31
	002 Move X8, [X2+32]
	003 Move X8, [X8+192]
	004 Move X1, [X8+168]
	005 Call 0x28BF8F0, X0
	006 Return 

Method: System.Void OnInputNavigationMoveEvent(UnityEngine.UIElements.NavigationMoveEvent evt)

Disassembly:
	0x028BF9F4 LDR X8, [X2 + 0x20]
	0x028BF9F8 LDR X8, [X8 + 0xC0]
	0x028BF9FC LDR X1, [X8 + 0x38]
	0x028BFA00 B 0x28C1B30
	0x028BFA04 STR D10, [X31 - 0x60]!
	0x028BFA08 STP D9, D8, [X31 + 0x10]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {7}
	003 Move X0, X1
	004 Move X1, X31
	005 Call EventBase.StopPropagation, X0
	006 Return 
	007 Move [X31-16], X30
	008 Call 0x1C17F20

Method: System.Void OnTextFieldValueChange(UnityEngine.UIElements.ChangeEvent`1<System.String> evt)

Disassembly:
	0x028BFA0C STP X30, X25, [X31 + 0x20]
	0x028BFA10 STP X24, X23, [X31 + 0x30]
	0x028BFA14 STP X22, X21, [X31 + 0x40]
	0x028BFA18 STP X20, X19, [X31 + 0x50]
	0x028BFA1C ADRP X23, 0x1B1B000
	0x028BFA20 LDRB W8, [X23 + 0xCCA]
	0x028BFA24 MOV X19, X3
	0x028BFA28 MOV V10.16B, V2.16B
	0x028BFA2C MOV W21, W2
	0x028BFA30 MOV V8.16B, V1.16B
	0x028BFA34 MOV V9.16B, V0.16B
	0x028BFA38 MOV X22, X1
	0x028BFA3C MOV X20, X0
	0x028BFA40 TBNZ X8, 0x0, 0x28BFADC
	0x028BFA44 ADRP X0, 0x1835000
	0x028BFA48 LDR X0, [X0 + 0xE70]
	0x028BFA4C BL 0x1C16CF4
	0x028BFA50 ADRP X0, 0x185E000
	0x028BFA54 LDR X0, [X0 + 0x658]
	0x028BFA58 BL 0x1C16CF4
	0x028BFA5C ADRP X0, 0x185F000
	0x028BFA60 LDR X0, [X0 + 0xF0]
	0x028BFA64 BL 0x1C16CF4
	0x028BFA68 ADRP X0, 0x185F000
	0x028BFA6C LDR X0, [X0 + 0xF8]
	0x028BFA70 BL 0x1C16CF4
	0x028BFA74 ADRP X0, 0x185E000
	0x028BFA78 LDR X0, [X0 + 0x660]
	0x028BFA7C BL 0x1C16CF4
	0x028BFA80 ADRP X0, 0x185F000
	0x028BFA84 LDR X0, [X0 + 0x100]
	0x028BFA88 BL 0x1C16CF4
	0x028BFA8C ADRP X0, 0x185F000
	0x028BFA90 LDR X0, [X0 + 0x108]
	0x028BFA94 BL 0x1C16CF4
	0x028BFA98 ADRP X0, 0x185C000
	0x028BFA9C LDR X0, [X0 + 0x898]
	0x028BFAA0 BL 0x1C16CF4
	0x028BFAA4 ADRP X0, 0x185F000
	0x028BFAA8 LDR X0, [X0 + 0x110]
	0x028BFAAC BL 0x1C16CF4
	0x028BFAB0 ADRP X0, 0x185F000
	0x028BFAB4 LDR X0, [X0 + 0x118]
	0x028BFAB8 BL 0x1C16CF4
	0x028BFABC ADRP X0, 0x185F000
	0x028BFAC0 LDR X0, [X0 + 0x120]
	0x028BFAC4 BL 0x1C16CF4
	0x028BFAC8 ADRP X0, 0x185F000
	0x028BFACC LDR X0, [X0 + 0x128]
	0x028BFAD0 BL 0x1C16CF4
	0x028BFAD4 MOVZ W8, 0x1
	0x028BFAD8 STRB W8, [X23 + 0xCCA]
	0x028BFADC MOVZ W8, 0x100
	0x028BFAE0 STRH W8, [X20 + 0x478]
	0x028BFAE4 STRB W31, [X20 + 0x49C]
	0x028BFAE8 LDR X8, [X19 + 0x20]!
	0x028BFAEC LDR X8, [X8 + 0xC0]
	0x028BFAF0 LDR X0, [X8 + 0xB8]
	0x028BFAF4 LDRB W8, [X0 + 0x135]
	0x028BFAF8 TBNZ X8, 0x0, 0x28BFB00
	0x028BFAFC BL 0x1C5C684
	0x028BFB00 LDR W8, [X0 + 0xE0]
	0x028BFB04 CBNZ W8, 0x28BFB0C
	0x028BFB08 BL 0x1C16DFC
	0x028BFB0C LDR X8, [X19]
	0x028BFB10 MOV X0, X20
	0x028BFB14 MOV X1, X22
	0x028BFB18 MOV X2, X31
	0x028BFB1C LDR X8, [X8 + 0xC0]
	0x028BFB20 LDR X3, [X8 + 0xC0]
	0x028BFB24 BL 0x28A1A28
	0x028BFB28 LDR X8, [X19]
	0x028BFB2C LDR X8, [X8 + 0xC0]
	0x028BFB30 LDR X0, [X8 + 0xB0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1B1C000
	007 Move W8, [X22+3270]
	008 Move X21, X2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x1860000
	016 Move X0, [X0+416]
	017 Call 0x1C17CF4
	018 Move X0, 0x1860000
	019 Move X0, [X0+424]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3270], W8
	023 Compare X20, 0
	024 JumpIfEqual {91}
	025 Move X8, [X19]
	026 Move X1, [X20+136]
	027 Move X2, [X20+144]
	028 Move X0, X19
	029 Move X9, [X8+2392]
	030 Move X3, [X8+2400]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X8, [X21+32]
	033 Move W1, W0
	034 Move X0, X19
	035 Move X8, [X8+192]
	036 Move X2, [X8+88]
	037 Call 0x28BC91C, X0, X1
	038 Move X8, [X21+32]
	039 Move W21, W0
	040 Move X8, [X8+192]
	041 Move X8, [X8+16]
	042 Move X0, X8
	043 Call 0x211B010
	044 Move X8, [X19]
	045 Move X22, X0
	046 Move X0, X19
	047 Move X9, [X8+2024]
	048 Move X1, [X8+2032]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Compare X22, 0
	051 JumpIfEqual {91}
	052 Move X8, [X22]
	053 Move W2, W0
	054 Move X0, X22
	055 Move W1, W21
	056 Move X9, [X8+440]
	057 Move X3, [X8+448]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {85}
	063 Move X8, [X19]
	064 Move X0, X19
	065 Move W1, W21
	066 Move X9, [X8+2040]
	067 Move X2, [X8+2048]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X0, X20
	070 Move X1, X31
	071 Call EventBase.StopPropagation, X0
	072 Move X8, [X19+928]
	073 Compare X8, 0
	074 JumpIfEqual {85}
	075 Move X8, [X19]
	076 Move X0, X19
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X2, [X8+1848]
	082 Move X1, [X8+1856]
	083 Move X30, [X31+48]
	084 CallNoReturn X2
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X30, [X31+48]
	090 Return 
	091 Call 0x1C17F20

Method: System.Void UpdateMixedValueContent()

Disassembly:
	0x028BFB34 LDRB W8, [X0 + 0x135]
	0x028BFB38 TBNZ X8, 0x0, 0x28BFB40
	0x028BFB3C BL 0x1C5C684
	0x028BFB40 LDR W8, [X0 + 0xE0]
	0x028BFB44 CBNZ W8, 0x28BFB4C
	0x028BFB48 BL 0x1C16DFC
	0x028BFB4C LDR X8, [X19]
	0x028BFB50 LDR X8, [X8 + 0xC0]
	0x028BFB54 LDR X0, [X8 + 0xB0]
	0x028BFB58 LDRB W8, [X0 + 0x135]
	0x028BFB5C TBNZ X8, 0x0, 0x28BFB64
	0x028BFB60 BL 0x1C5C684
	0x028BFB64 LDR X8, [X0 + 0xB8]
	0x028BFB68 MOV X0, X20
	0x028BFB6C MOV X2, X31
	0x028BFB70 LDR X1, [X8]
	0x028BFB74 BL 0x3DF1C70
	0x028BFB78 LDR X8, [X19]
	0x028BFB7C LDR X22, [X20 + 0x400]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {25}
	004 Move W8, [X0+1032]
	005 Compare W8, 0
	006 JumpIfEqual {14}
	007 Move X0, [X0+1096]
	008 Compare X0, 0
	009 JumpIfEqual {23}
	010 Move X1, X31
	011 Move X30, [X31+16]
	012 Call VisualElement.RemoveFromHierarchy, X0
	013 Return 
	014 Move X8, [X0+1088]
	015 Compare X8, 0
	016 JumpIfEqual {25}
	017 Move X1, [X0+1096]
	018 Move X0, X8
	019 Move X2, X31
	020 Move X30, [X31+16]
	021 Call VisualElement.Add, X0, X1
	022 Return 
	023 Move X30, [X31+16]
	024 Return 
	025 Call 0x1C17F20

Method: System.Void RegisterEditingCallbacks()

Disassembly:
	0x028BFB80 LDR X8, [X8 + 0xC0]
	0x028BFB84 LDR X0, [X8 + 0xB0]
	0x028BFB88 LDRB W8, [X0 + 0x135]
	0x028BFB8C TBNZ X8, 0x0, 0x28BFB94
	0x028BFB90 BL 0x1C5C684
	0x028BFB94 CBZ X22, 0x28C00F0
	0x028BFB98 LDR X8, [X0 + 0xB8]
	0x028BFB9C MOV X0, X22
	0x028BFBA0 MOV X2, X31
	0x028BFBA4 LDR X1, [X8 + 0x8]
	0x028BFBA8 BL 0x3DF1C70
	0x028BFBAC LDR X8, [X19]
	0x028BFBB0 MOV X0, X20
	0x028BFBB4 LDR X8, [X8 + 0xC0]
	0x028BFBB8 LDR X1, [X8 + 0xD0]
	0x028BFBBC BL 0x28A0F80
	0x028BFBC0 LDR X8, [X19]
	0x028BFBC4 MOV X22, X0
	0x028BFBC8 LDR X8, [X8 + 0xC0]
	0x028BFBCC LDR X8, [X8 + 0xB0]
	0x028BFBD0 LDRB W9, [X8 + 0x135]
	0x028BFBD4 TBNZ X9, 0x0, 0x28BFBE4
	0x028BFBD8 MOV X0, X8
	0x028BFBDC BL 0x1C5C684
	0x028BFBE0 MOV X8, X0
	0x028BFBE4 CBZ X22, 0x28C00F0
	0x028BFBE8 LDR X8, [X8 + 0xB8]
	0x028BFBEC ADRP X23, 0x185C000
	0x028BFBF0 MOV X0, X22
	0x028BFBF4 MOV X2, X31
	0x028BFBF8 LDR X1, [X8 + 0x10]
	0x028BFBFC LDR X23, [X23 + 0x898]
	0x028BFC00 BL 0x3DF1C70
	0x028BFC04 LDR X8, [X19]
	0x028BFC08 MOV X0, X20
	0x028BFC0C MOV W1, W21
	0x028BFC10 LDR X8, [X8 + 0xC0]
	0x028BFC14 LDR X2, [X8 + 0xD8]
	0x028BFC18 BL 0x28BF900
	0x028BFC1C LDR X8, [X20]
	0x028BFC20 MOV X0, X20
	0x028BFC24 MOV V0.16B, V10.16B
	0x028BFC28 LDR X9, [X8 + 0x8F8]
	0x028BFC2C LDR X1, [X8 + 0x900]
	0x028BFC30 BLR X9
	0x028BFC34 LDR X8, [X19]
	0x028BFC38 MOV X0, X20
	0x028BFC3C MOV V0.16B, V9.16B
	0x028BFC40 LDR X8, [X8 + 0xC0]
	0x028BFC44 LDR X1, [X8 + 0xE8]
	0x028BFC48 BL 0x28BF504
	0x028BFC4C LDR X8, [X19]
	0x028BFC50 MOV X0, X20
	0x028BFC54 MOV V0.16B, V8.16B
	0x028BFC58 LDR X8, [X8 + 0xC0]
	0x028BFC5C LDR X1, [X8 + 0xF0]
	0x028BFC60 BL 0x28BF5AC
	0x028BFC64 MOVZ W1, 0x1
	0x028BFC68 MOV X0, X20
	0x028BFC6C MOV X2, X31
	0x028BFC70 BL 0x3DEF238
	0x028BFC74 LDR X0, [X23]
	0x028BFC78 BL 0x1C16F10
	0x028BFC7C MOV X1, X31
	0x028BFC80 MOV X21, X0
	0x028BFC84 BL 0x3DEF578
	0x028BFC88 CBZ X21, 0x28C00F0
	0x028BFC8C ADRP X8, 0x185F000
	0x028BFC90 LDR X8, [X8 + 0x120]
	0x028BFC94 ADRP X24, 0x185E000
	0x028BFC98 MOV X0, X21
	0x028BFC9C MOV X2, X31
	0x028BFCA0 LDR X1, [X8]
	0x028BFCA4 LDR X24, [X24 + 0x660]
	0x028BFCA8 BL 0x3DEF278
	0x028BFCAC LDR X8, [X19]
	0x028BFCB0 LDR X8, [X8 + 0xC0]
	0x028BFCB4 STR X21, [X20 + 0x440]
	0x028BFCB8 LDR X0, [X8 + 0xB0]
	0x028BFCBC LDRB W8, [X0 + 0x135]
	0x028BFCC0 TBNZ X8, 0x0, 0x28BFCC8
	0x028BFCC4 BL 0x1C5C684
	0x028BFCC8 LDR X8, [X0 + 0xB8]
	0x028BFCCC MOV X0, X21
	0x028BFCD0 MOV X2, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1B1C000
	009 Move W8, [X21+3271]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x185F000
	017 Move X0, [X0+1904]
	018 Call 0x1C17CF4
	019 Move X0, 0x185F000
	020 Move X0, [X0+1912]
	021 Call 0x1C17CF4
	022 Move X0, 0x185F000
	023 Move X0, [X0+1920]
	024 Call 0x1C17CF4
	025 Move X0, 0x185F000
	026 Move X0, [X0+1928]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3271], W8
	030 Compare X19, 0
	031 JumpIfEqual {99}
	032 Move X24, 0x185F000
	033 Move X24, [X24+1920]
	034 Move X21, [X19+1024]
	035 Move X0, [X24]
	036 Call 0x1C17F10
	037 Move X8, [X20+32]
	038 Move X1, X19
	039 Move X3, X31
	040 Move X22, X0
	041 Move X8, [X8+192]
	042 Move X2, [X8+616]
	043 Call 0x2D0F824, X0, X1, X2
	044 Compare X21, 0
	045 JumpIfEqual {99}
	046 Move X23, 0x185F000
	047 Move X23, [X23+1904]
	048 Move W2, 1
	049 Move X0, X21
	050 Move X1, X22
	051 Move X3, [X23]
	052 Call 0x21A2534, X0, X1, X2
	053 Move X0, [X24]
	054 Move X21, [X19+1088]
	055 Call 0x1C17F10
	056 Move X8, [X20+32]
	057 Move X1, X19
	058 Move X3, X31
	059 Move X22, X0
	060 Move X8, [X8+192]
	061 Move X2, [X8+616]
	062 Call 0x2D0F824, X0, X1, X2
	063 Compare X21, 0
	064 JumpIfEqual {99}
	065 Move X3, [X23]
	066 Move X23, 0x185F000
	067 Move X23, [X23+1928]
	068 Move W2, 1
	069 Move X0, X21
	070 Move X1, X22
	071 Call 0x21A2534, X0, X1, X2
	072 Move X0, [X23]
	073 Move X21, [X19+1088]
	074 Call 0x1C17F10
	075 Move X8, [X20+32]
	076 Move X1, X19
	077 Move X3, X31
	078 Move X20, X0
	079 Move X8, [X8+192]
	080 Move X2, [X8+624]
	081 Call 0x2D0F824, X0, X1, X2
	082 Compare X21, 0
	083 JumpIfEqual {99}
	084 Move X8, 0x185F000
	085 Move X8, [X8+1912]
	086 Move X0, X21
	087 Move X1, X20
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X3, [X8]
	091 Move X22, [X31+32]
	092 Move X21, [X31+40]
	093 Move X24, [X31+16]
	094 Move X23, [X31+24]
	095 Move W2, W31
	096 Move X30, [X31+64]
	097 Call 0x21A2534, X0, X1, X2
	098 Return 
	099 Call 0x1C17F20

Method: System.Void UnregisterEditingCallbacks()

Disassembly:
	0x028BFCD4 LDR X1, [X8 + 0x28]
	0x028BFCD8 BL 0x3DF1C70
	0x028BFCDC LDR X0, [X24]
	0x028BFCE0 LDR X21, [X20 + 0x440]
	0x028BFCE4 BL 0x1C16F10
	0x028BFCE8 LDR X8, [X19]
	0x028BFCEC MOV X1, X20
	0x028BFCF0 MOV X3, X31
	0x028BFCF4 MOV X22, X0
	0x028BFCF8 LDR X8, [X8 + 0xC0]
	0x028BFCFC LDR X2, [X8 + 0x108]
	0x028BFD00 BL 0x2D0E824
	0x028BFD04 CBZ X21, 0x28C00F0
	0x028BFD08 ADRP X25, 0x185E000
	0x028BFD0C LDR X25, [X25 + 0x658]
	0x028BFD10 MOV X0, X21
	0x028BFD14 MOV X1, X22
	0x028BFD18 MOV W2, W31
	0x028BFD1C LDR X3, [X25]
	0x028BFD20 BL 0x21A1534
	0x028BFD24 LDR X8, [X19]
	0x028BFD28 MOV X0, X20
	0x028BFD2C LDR X8, [X8 + 0xC0]
	0x028BFD30 LDR X1, [X8 + 0xD0]
	0x028BFD34 BL 0x28A0F80
	0x028BFD38 CBZ X0, 0x28C00F0
	0x028BFD3C LDR X1, [X20 + 0x440]
	0x028BFD40 MOV X2, X31
	0x028BFD44 BL 0x3DF60E8
	0x028BFD48 LDR X0, [X23]
	0x028BFD4C BL 0x1C16F10
	0x028BFD50 MOV X1, X31
	0x028BFD54 MOV X21, X0
	0x028BFD58 BL 0x3DEF578
	0x028BFD5C CBZ X21, 0x28C00F0
	0x028BFD60 ADRP X8, 0x185F000
	0x028BFD64 LDR X8, [X8 + 0x128]
	0x028BFD68 MOV X0, X21
	0x028BFD6C MOV X2, X31
	0x028BFD70 LDR X1, [X8]
	0x028BFD74 BL 0x3DEF278
	0x028BFD78 MOVZ W1, 0x8
	0x028BFD7C MOV X0, X21
	0x028BFD80 MOV X2, X31
	0x028BFD84 BL 0x3DEC0FC
	0x028BFD88 LDR X8, [X19]
	0x028BFD8C LDR X8, [X8 + 0xC0]
	0x028BFD90 STR X21, [X20 + 0x450]
	0x028BFD94 LDR X0, [X8 + 0xB0]
	0x028BFD98 LDRB W8, [X0 + 0x135]
	0x028BFD9C TBNZ X8, 0x0, 0x28BFDA4
	0x028BFDA0 BL 0x1C5C684
	0x028BFDA4 LDR X8, [X0 + 0xB8]
	0x028BFDA8 MOV X0, X21
	0x028BFDAC MOV X2, X31
	0x028BFDB0 LDR X1, [X8 + 0x30]
	0x028BFDB4 BL 0x3DF1C70
	0x028BFDB8 LDR X0, [X20 + 0x440]
	0x028BFDBC CBZ X0, 0x28C00F0
	0x028BFDC0 LDR X1, [X20 + 0x450]
	0x028BFDC4 MOV X2, X31
	0x028BFDC8 BL 0x3DF60E8
	0x028BFDCC LDR X0, [X23]
	0x028BFDD0 BL 0x1C16F10
	0x028BFDD4 MOV X1, X31
	0x028BFDD8 MOV X21, X0
	0x028BFDDC BL 0x3DEF578
	0x028BFDE0 CBZ X21, 0x28C00F0
	0x028BFDE4 ADRP X8, 0x185F000
	0x028BFDE8 LDR X8, [X8 + 0x110]
	0x028BFDEC MOV X0, X21
	0x028BFDF0 MOV X2, X31
	0x028BFDF4 LDR X1, [X8]
	0x028BFDF8 BL 0x3DEF278
	0x028BFDFC LDR X8, [X19]
	0x028BFE00 LDR X8, [X8 + 0xC0]
	0x028BFE04 STR X21, [X20 + 0x458]
	0x028BFE08 LDR X0, [X8 + 0xB0]
	0x028BFE0C LDRB W8, [X0 + 0x135]
	0x028BFE10 TBNZ X8, 0x0, 0x28BFE18
	0x028BFE14 BL 0x1C5C684
	0x028BFE18 LDR X8, [X0 + 0xB8]
	0x028BFE1C MOV X0, X21
	0x028BFE20 MOV X2, X31
	0x028BFE24 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1B1C000
	009 Move W8, [X21+3272]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x185F000
	017 Move X0, [X0+1936]
	018 Call 0x1C17CF4
	019 Move X0, 0x185F000
	020 Move X0, [X0+1944]
	021 Call 0x1C17CF4
	022 Move X0, 0x185F000
	023 Move X0, [X0+1920]
	024 Call 0x1C17CF4
	025 Move X0, 0x185F000
	026 Move X0, [X0+1928]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3272], W8
	030 Compare X19, 0
	031 JumpIfEqual {99}
	032 Move X24, 0x185F000
	033 Move X24, [X24+1920]
	034 Move X21, [X19+1024]
	035 Move X0, [X24]
	036 Call 0x1C17F10
	037 Move X8, [X20+32]
	038 Move X1, X19
	039 Move X3, X31
	040 Move X22, X0
	041 Move X8, [X8+192]
	042 Move X2, [X8+616]
	043 Call 0x2D0F824, X0, X1, X2
	044 Compare X21, 0
	045 JumpIfEqual {99}
	046 Move X23, 0x185F000
	047 Move X23, [X23+1936]
	048 Move W2, 1
	049 Move X0, X21
	050 Move X1, X22
	051 Move X3, [X23]
	052 Call 0x21A28B4, X0, X1, X2
	053 Move X0, [X24]
	054 Move X21, [X19+1088]
	055 Call 0x1C17F10
	056 Move X8, [X20+32]
	057 Move X1, X19
	058 Move X3, X31
	059 Move X22, X0
	060 Move X8, [X8+192]
	061 Move X2, [X8+616]
	062 Call 0x2D0F824, X0, X1, X2
	063 Compare X21, 0
	064 JumpIfEqual {99}
	065 Move X3, [X23]
	066 Move X23, 0x185F000
	067 Move X23, [X23+1928]
	068 Move W2, 1
	069 Move X0, X21
	070 Move X1, X22
	071 Call 0x21A28B4, X0, X1, X2
	072 Move X0, [X23]
	073 Move X21, [X19+1088]
	074 Call 0x1C17F10
	075 Move X8, [X20+32]
	076 Move X1, X19
	077 Move X3, X31
	078 Move X20, X0
	079 Move X8, [X8+192]
	080 Move X2, [X8+624]
	081 Call 0x2D0F824, X0, X1, X2
	082 Compare X21, 0
	083 JumpIfEqual {99}
	084 Move X8, 0x185F000
	085 Move X8, [X8+1944]
	086 Move X0, X21
	087 Move X1, X20
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X3, [X8]
	091 Move X22, [X31+32]
	092 Move X21, [X31+40]
	093 Move X24, [X31+16]
	094 Move X23, [X31+24]
	095 Move W2, W31
	096 Move X30, [X31+64]
	097 Call 0x21A28B4, X0, X1, X2
	098 Return 
	099 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x028BFE28 BL 0x3DF1C70
	0x028BFE2C LDR X0, [X20 + 0x440]
	0x028BFE30 CBZ X0, 0x28C00F0
	0x028BFE34 LDR X1, [X20 + 0x458]
	0x028BFE38 MOV X2, X31
	0x028BFE3C BL 0x3DF60E8
	0x028BFE40 LDR X0, [X23]
	0x028BFE44 BL 0x1C16F10
	0x028BFE48 MOV X1, X31
	0x028BFE4C MOV X21, X0
	0x028BFE50 BL 0x3DEF578
	0x028BFE54 CBZ X21, 0x28C00F0
	0x028BFE58 ADRP X8, 0x185F000
	0x028BFE5C LDR X8, [X8 + 0x118]
	0x028BFE60 MOV X0, X21
	0x028BFE64 MOV X2, X31
	0x028BFE68 LDR X1, [X8]
	0x028BFE6C BL 0x3DEF278
	0x028BFE70 MOVZ W1, 0x1
	0x028BFE74 MOV X0, X21
	0x028BFE78 MOV X2, X31
	0x028BFE7C BL 0x3DEC0FC
	0x028BFE80 STR X21, [X20 + 0x448]
	0x028BFE84 LDR X0, [X24]
	0x028BFE88 BL 0x1C16F10
	0x028BFE8C LDR X8, [X19]
	0x028BFE90 MOV X1, X20
	0x028BFE94 MOV X3, X31
	0x028BFE98 MOV X22, X0
	0x028BFE9C LDR X8, [X8 + 0xC0]
	0x028BFEA0 LDR X2, [X8 + 0x108]
	0x028BFEA4 BL 0x2D0E824
	0x028BFEA8 LDR X3, [X25]
	0x028BFEAC MOV X0, X21
	0x028BFEB0 MOV X1, X22
	0x028BFEB4 MOV W2, W31
	0x028BFEB8 BL 0x21A1534
	0x028BFEBC LDR X8, [X19]
	0x028BFEC0 LDR X21, [X20 + 0x448]
	0x028BFEC4 LDR X8, [X8 + 0xC0]
	0x028BFEC8 LDR X0, [X8 + 0xB0]
	0x028BFECC LDRB W8, [X0 + 0x135]
	0x028BFED0 TBNZ X8, 0x0, 0x28BFED8
	0x028BFED4 BL 0x1C5C684
	0x028BFED8 CBZ X21, 0x28C00F0
	0x028BFEDC LDR X8, [X0 + 0xB8]
	0x028BFEE0 MOV X0, X21
	0x028BFEE4 MOV X2, X31
	0x028BFEE8 LDR X1, [X8 + 0x38]
	0x028BFEEC BL 0x3DF1C70
	0x028BFEF0 LDR X0, [X20 + 0x440]
	0x028BFEF4 CBZ X0, 0x28C00F0
	0x028BFEF8 LDR X1, [X20 + 0x448]
	0x028BFEFC ADRP X22, 0x1835000
	0x028BFF00 LDR X22, [X22 + 0xE70]
	0x028BFF04 MOV X2, X31
	0x028BFF08 BL 0x3DF60E8
	0x028BFF0C LDR X0, [X22]
	0x028BFF10 BL 0x1C16F10
	0x028BFF14 LDR X8, [X19]
	0x028BFF18 MOV X1, X20
	0x028BFF1C MOV X3, X31
	0x028BFF20 MOV X21, X0
	0x028BFF24 LDR X8, [X8 + 0xC0]
	0x028BFF28 LDR X2, [X8 + 0x140]
	0x028BFF2C BL 0x3314368
	0x028BFF30 LDR X0, [X22]
	0x028BFF34 BL 0x1C16F10
	0x028BFF38 LDR X8, [X19]
	0x028BFF3C MOV X1, X20
	0x028BFF40 MOV X3, X31
	0x028BFF44 MOV X22, X0
	0x028BFF48 LDR X8, [X8 + 0xC0]
	0x028BFF4C LDR X2, [X8 + 0x148]
	0x028BFF50 BL 0x3314368
	0x028BFF54 LDR X8, [X19]
	0x028BFF58 LDR X8, [X8 + 0xC0]
	0x028BFF5C LDR X0, [X8 + 0x70]
	0x028BFF60 LDRB W8, [X0 + 0x135]
	0x028BFF64 TBNZ X8, 0x0, 0x28BFF6C
	0x028BFF68 BL 0x1C5C684
	0x028BFF6C BL 0x1C16F10
	0x028BFF70 LDR X8, [X19]
	0x028BFF74 MOV X1, X20
	0x028BFF78 MOV X2, X21
	0x028BFF7C MOV X3, X22
	0x028BFF80 LDR X8, [X8 + 0xC0]
	0x028BFF84 MOV X23, X0
	0x028BFF88 LDR X4, [X8 + 0x150]
	0x028BFF8C BL 0x28F77F8
	0x028BFF90 LDR X0, [X20 + 0x440]
	0x028BFF94 STR X23, [X20 + 0x480]
	0x028BFF98 CBZ X0, 0x28C00F0
	0x028BFF9C ADRP X21, 0x185F000
	0x028BFFA0 ADRP X22, 0x185F000
	0x028BFFA4 ADRP X23, 0x185F000
	0x028BFFA8 ADRP X24, 0x185F000
	0x028BFFAC LDR X21, [X21 + 0x100]
	0x028BFFB0 LDR X22, [X22 + 0xF0]
	0x028BFFB4 LDR X23, [X23 + 0x108]
	0x028BFFB8 LDR X24, [X24 + 0xF8]
	0x028BFFBC MOV W1, W31
	0x028BFFC0 MOV X2, X31
	0x028BFFC4 BL 0x3DEF238
	0x028BFFC8 LDR X0, [X20 + 0x440]
	0x028BFFCC LDR X1, [X20 + 0x480]
	0x028BFFD0 MOV X2, X31
	0x028BFFD4 BL 0x3D16A80
	0x028BFFD8 LDR X0, [X21]
	0x028BFFDC BL 0x1C16F10
	0x028BFFE0 LDR X8, [X19]
	0x028BFFE4 MOV X1, X20
	0x028BFFE8 MOV X3, X31
	0x028BFFEC MOV X21, X0
	0x028BFFF0 LDR X8, [X8 + 0xC0]
	0x028BFFF4 LDR X2, [X8 + 0x168]
	0x028BFFF8 BL 0x2D0E824
	0x028BFFFC LDR X3, [X22]
	0x028C0000 MOV X0, X20
	0x028C0004 MOV X1, X21
	0x028C0008 MOV W2, W31
	0x028C000C BL 0x21A1534
	0x028C0010 LDR X0, [X23]
	0x028C0014 BL 0x1C16F10
	0x028C0018 LDR X8, [X19]
	0x028C001C MOV X1, X20
	0x028C0020 MOV X3, X31
	0x028C0024 MOV X21, X0
	0x028C0028 LDR X8, [X8 + 0xC0]
	0x028C002C LDR X2, [X8 + 0x170]
	0x028C0030 BL 0x2D0E824
	0x028C0034 LDR X3, [X24]
	0x028C0038 MOV X0, X20
	0x028C003C MOV X1, X21
	0x028C0040 MOV W2, W31
	0x028C0044 BL 0x21A1534
	0x028C0048 LDR X8, [X19]
	0x028C004C MOV X0, X20
	0x028C0050 LDR X8, [X8 + 0xC0]
	0x028C0054 LDR X1, [X8 + 0x68]
	0x028C0058 BL 0x28C22E0
	0x028C005C LDR X8, [X19]
	0x028C0060 LDR X8, [X8 + 0xC0]
	0x028C0064 LDR X0, [X8 + 0x178]
	0x028C0068 LDRB W8, [X0 + 0x135]
	0x028C006C TBNZ X8, 0x0, 0x28C0074
	0x028C0070 BL 0x1C5C684
	0x028C0074 BL 0x1C16F10
	0x028C0078 LDR X8, [X19]
	0x028C007C MOV X1, X20
	0x028C0080 MOV X21, X0
	0x028C0084 LDR X8, [X8 + 0xC0]
	0x028C0088 LDR X2, [X8 + 0x180]
	0x028C008C BL 0x2D155B0
	0x028C0090 CBZ X21, 0x28C00F0
	0x028C0094 LDR X1, [X20 + 0x400]
	0x028C0098 MOV X0, X21
	0x028C009C MOV X2, X31
	0x028C00A0 BL 0x3DAED08
	0x028C00A4 LDR X8, [X19]
	0x028C00A8 LDR X19, [X20 + 0x400]
	0x028C00AC LDR X8, [X8 + 0xC0]
	0x028C00B0 LDR X0, [X8 + 0xB8]
	0x028C00B4 LDRB W8, [X0 + 0x135]
	0x028C00B8 TBNZ X8, 0x0, 0x28C00C0
	0x028C00BC BL 0x1C5C684
	0x028C00C0 CBZ X19, 0x28C00F0
	0x028C00C4 LDR X8, [X0 + 0xB8]
	0x028C00C8 MOV X0, X19
	0x028C00CC LDP X20, X19, [X31 + 0x50]
	0x028C00D0 LDP X22, X21, [X31 + 0x40]
	0x028C00D4 LDR X1, [X8 + 0x20]
	0x028C00D8 LDP X24, X23, [X31 + 0x30]
	0x028C00DC LDP X30, X25, [X31 + 0x20]
	0x028C00E0 LDP D9, D8, [X31 + 0x10]
	0x028C00E4 MOV X2, X31
	0x028C00E8 LDR V10, [X31], #0x60
	0x028C00EC B 0x3DF1C70
	0x028C00F0 BL 0x1C16F20
	0x028C00F4 FCMP S0, 0x0
	0x028C00F8 B.LS 0x28C0178
	0x028C00FC SUB X31, X31, 0x30
	0x028C0100 STP D9, D8, [X31 + 0x10]
	0x028C0104 STP X30, X19, [X31 + 0x20]
	0x028C0108 BL 0x3EB1C50
	0x028C010C ADRP X19, 0x1B19000
	0x028C0110 LDRB W8, [X19 + 0x5D7]
	0x028C0114 MOV V8.16B, V0.16B
	0x028C0118 CBNZ W8, 0x28C0130
	0x028C011C ADRP X0, 0x1833000
	0x028C0120 LDR X0, [X0 + 0x5A8]
	0x028C0124 BL 0x1C16CF4
	0x028C0128 MOVZ W8, 0x1
	0x028C012C STRB W8, [X19 + 0x5D7]
	0x028C0130 ADRP X8, 0x1833000
	0x028C0134 LDR X8, [X8 + 0x5A8]
	0x028C0138 LDR X0, [X8]
	0x028C013C LDR W8, [X0 + 0xE0]
	0x028C0140 CBNZ W8, 0x28C0148
	0x028C0144 BL 0x1C16DFC
	0x028C0148 FCVT S9, S8
	0x028C014C ADD X0, X31, 0x8
	0x028C0150 MOV V0.16B, V9.16B
	0x028C0154 BL 0x3EB1C00
	0x028C0158 FCMP S8, 0x0
	0x028C015C B.GE 0x28C0180
	0x028C0160 FMOV D1, -0.5
	0x028C0164 FCMP D0, D1
	0x028C0168 B.NE 0x28C01A8
	0x028C016C LDR V0, [X31 + 0x8]
	0x028C0170 FMOV D1, -1
	0x028C0174 B 0x28C0194
	0x028C0178 FMOV S0, 1
	0x028C017C RET
	0x028C0180 FMOV D1, 0.5
	0x028C0184 FCMP D0, D1
	0x028C0188 B.NE 0x28C01B4
	0x028C018C LDR V0, [X31 + 0x8]
	0x028C0190 FMOV D1, 1
	0x028C0194 FCVTZS X8, D0
	0x028C0198 FADD D1, D0, D1
	0x028C019C ANDS X31, X8, 0x1
	0x028C01A0 FCSEL D0, D0, D1, EQ
	0x028C01A4 B 0x28C01BC
	0x028C01A8 FADD D0, D9, D1
	0x028C01AC FRINTP D0, D0
	0x028C01B0 B 0x28C01BC
	0x028C01B4 FADD D0, D9, D1
	0x028C01B8 FRINTM D0, D0
	0x028C01BC MOVZ X9, 0x7FF00000
	0x028C01C0 LDP X30, X19, [X31 + 0x20]
	0x028C01C4 LDP D9, D8, [X31 + 0x10]
	0x028C01C8 FCVTZS W8, D0
	0x028C01CC MOVZ W10, 0xCF000000
	0x028C01D0 FMOV D2, X9
	0x028C01D4 SCVTF S1, W8
	0x028C01D8 FCMP D0, D2
	0x028C01DC FMOV S0, W10
	0x028C01E0 FCSEL S1, S0, S1, EQ
	0x028C01E4 FMOV S0, 10
	0x028C01E8 ADD X31, X31, 0x30
	0x028C01EC B 0x3EB1B50
	0x028C01F0 FCMP S1, 0x0
	0x028C01F4 B.EQ 0x28C0288
	0x028C01F8 STP D9, D8, [X31 - 0x20]!
	0x028C01FC STR X30, [X31 + 0x10]
	0x028C0200 FDIV S9, S0, S1
	0x028C0204 FCVT S0, S9
	0x028C0208 ADD X0, X31, 0x18
	0x028C020C MOV V8.16B, V1.16B
	0x028C0210 BL 0x3EB1C00
	0x028C0214 FCMP S9, 0x0
	0x028C0218 B.GE 0x28C0234
	0x028C021C FMOV D1, -0.5
	0x028C0220 FCMP D0, D1
	0x028C0224 B.NE 0x28C0260
	0x028C0228 LDR V0, [X31 + 0x18]
	0x028C022C FMOV S1, -1
	0x028C0230 B 0x28C0248
	0x028C0234 FMOV D1, 0.5
	0x028C0238 FCMP D0, D1
	0x028C023C B.NE 0x28C0270
	0x028C0240 LDR V0, [X31 + 0x18]
	0x028C0244 FMOV S1, 1
	0x028C0248 FCVTZS X8, D0
	0x00000000 INVALID
	0x028C0250 FADD S1, S0, S1
	0x028C0254 ANDS X31, X8, 0x1
	0x028C0258 FCSEL S0, S0, S1, EQ
	0x028C025C B 0x28C027C
	0x028C0260 FMOV S0, -0.5
	0x028C0264 FADD S0, S9, S0
	0x028C0268 FRINTP S0, S0
	0x028C026C B 0x28C027C
	0x028C0270 FMOV S0, 0.5
	0x028C0274 FADD S0, S9, S0
	0x028C0278 FRINTM S0, S0
	0x028C027C LDR X30, [X31 + 0x10]
	0x028C0280 FMUL S0, S0, S8
	0x028C0284 LDP D9, D8, [X31], #0x20
	0x028C0288 RET
	0x028C028C STP X30, X19, [X31 - 0x10]!
	0x028C0290 CBZ X0, 0x28C02C0
	0x028C0294 LDR X8, [X1 + 0x20]
	0x028C0298 MOV X19, X0
	0x028C029C LDR X8, [X8 + 0xC0]
	0x028C02A0 LDR X1, [X8 + 0x190]
	0x028C02A4 BL 0x28A109C
	0x028C02A8 LDR X8, [X19]
	0x028C02AC MOV X0, X19
	0x028C02B0 LDR X2, [X8 + 0x7F8]
	0x028C02B4 LDR X1, [X8 + 0x800]
	0x028C02B8 LDP X30, X19, [X31], #0x10
	0x028C02BC BR X2
	0x028C02C0 BL 0x1C16F20
	0x028C02C4 LDR X8, [X0]
	0x028C02C8 LDR W9, [X0 + 0x498]
	0x028C02CC LDRB W10, [X0 + 0x49C]
	0x028C02D0 MOV V3.16B, V0.16B
	0x028C02D4 LDR X2, [X8 + 0x938]
	0x028C02D8 LDR X1, [X8 + 0x940]
	0x028C02DC FMOV S0, 1
	0x028C02E0 FSUB S0, S0, S2
	0x028C02E4 CMP W9, 0x1
	0x028C02E8 FCSEL S2, S0, S2, EQ
	0x028C02EC CBZ W10, 0x28C02FC
	0x028C02F0 MOV V0.16B, V1.16B
	0x028C02F4 MOV V1.16B, V3.16B
	0x028C02F8 BR X2
	0x028C02FC MOV V0.16B, V3.16B
	0x028C0300 BR X2
	0x028C0304 STP D9, D8, [X31 - 0x40]!
	0x028C0308 STP X30, X23, [X31 + 0x10]
	0x028C030C STP X22, X21, [X31 + 0x20]
	0x028C0310 STP X20, X19, [X31 + 0x30]
	0x028C0314 ADRP X21, 0x1B1A000
	0x028C0318 LDRB W8, [X21 + 0xCCB]
	0x028C031C MOV X20, X1
	0x028C0320 MOV X19, X0
	0x028C0324 TBNZ X8, 0x0, 0x28C033C
	0x028C0328 ADRP X0, 0x185C000
	0x028C032C LDR X0, [X0 + 0x120]
	0x028C0330 BL 0x1C16CF4
	0x028C0334 MOVZ W8, 0x1
	0x028C0338 STRB W8, [X21 + 0xCCB]
	0x028C033C LDR X0, [X19 + 0x480]
	0x028C0340 CBZ X0, 0x28C0594
	0x028C0344 LDR W8, [X0 + 0x80]
	0x028C0348 CMP W8, 0x4
	0x028C034C B.NE 0x28C03D0
	0x028C0350 LDR X8, [X20 + 0x20]
	0x028C0354 LDR X8, [X8 + 0xC0]
	0x028C0358 LDR X1, [X8 + 0x1C0]
	0x028C035C BL 0x28F77D4
	0x028C0360 LDR X0, [X19 + 0x440]
	0x028C0364 CBZ X0, 0x28C0594
	0x028C0368 LDR W23, [X19 + 0x498]
	0x028C036C MOV X1, X31
	0x028C0370 MOV V8.16B, V0.16B
	0x028C0374 MOV V9.16B, V1.16B
	0x028C0378 BL 0x3DE0EB8
	0x028C037C CBZ X0, 0x28C0594
	0x028C0380 ADRP X22, 0x185C000
	0x028C0384 LDR X8, [X0]
	0x028C0388 LDR X22, [X22 + 0x120]
	0x028C038C MOV X21, X0
	0x028C0390 LDRH W9, [X8 + 0x12E]
	0x028C0394 LDR X1, [X22]
	0x028C0398 CBZ W23, 0x28C03E4
	0x028C039C CBZ W9, 0x28C03C0
	0x028C03A0 LDR X10, [X8 + 0xB0]
	0x028C03A4 ADD X10, X10, 0x8
	0x028C03A8 LDUR X11, [X10 - 0x8]
	0x028C03AC CMP X11, X1
	0x028C03B0 B.EQ 0x28C0418
	0x028C03B4 SUBS X9, X9, 0x1
	0x028C03B8 ADD X10, X10, 0x10
	0x028C03BC B.NE 0x28C03A8
	0x028C03C0 MOVZ W2, 0x13
	0x028C03C4 MOV X0, X21
	0x028C03C8 BL 0x1C5C788
	0x028C03CC B 0x28C0428
	0x028C03D0 LDP X20, X19, [X31 + 0x30]
	0x028C03D4 LDP X22, X21, [X31 + 0x20]
	0x028C03D8 LDP X30, X23, [X31 + 0x10]
	0x028C03DC LDP D9, D8, [X31], #0x40
	0x028C03E0 RET
	0x028C03E4 CBZ W9, 0x28C0408
	0x028C03E8 LDR X10, [X8 + 0xB0]
	0x028C03EC ADD X10, X10, 0x8
	0x028C03F0 LDUR X11, [X10 - 0x8]
	0x028C03F4 CMP X11, X1
	0x028C03F8 B.EQ 0x28C04CC
	0x028C03FC SUBS X9, X9, 0x1
	0x028C0400 ADD X10, X10, 0x10
	0x028C0404 B.NE 0x28C03F0
	0x028C0408 MOVZ W2, 0x2C
	0x028C040C MOV X0, X21
	0x028C0410 BL 0x1C5C788
	0x028C0414 B 0x28C04DC
	0x028C0418 LDR W9, [X10]
	0x028C041C ADD W9, W9, 0x13
	0x028C0420 ADD X8, X8, W9, 0x4, SXTW
	0x028C0424 ADD X0, X8, 0x138
	0x028C0428 LDP X8, X1, [X0]
	0x028C042C MOV X0, X21
	0x028C0430 BLR X8
	0x028C0434 LDR X0, [X19 + 0x448]
	0x028C0438 CBZ X0, 0x28C0594
	0x028C043C MOV X1, X31
	0x028C0440 MOV V8.16B, V0.16B
	0x028C0444 BL 0x3DE0EB8
	0x028C0448 CBZ X0, 0x28C0594
	0x028C044C LDR X8, [X0]
	0x028C0450 LDR X1, [X22]
	0x028C0454 MOV X21, X0
	0x028C0458 LDRH W9, [X8 + 0x12E]
	0x028C045C CBZ X9, 0x28C0480
	0x028C0460 LDR X10, [X8 + 0xB0]
	0x028C0464 ADD X10, X10, 0x8
	0x028C0468 LDUR X11, [X10 - 0x8]
	0x028C046C CMP X11, X1
	0x028C0470 B.EQ 0x28C0490
	0x028C0474 SUBS X9, X9, 0x1
	0x028C0478 ADD X10, X10, 0x10
	0x028C047C B.NE 0x28C0468
	0x028C0480 MOVZ W2, 0x13
	0x028C0484 MOV X0, X21
	0x028C0488 BL 0x1C5C788
	0x028C048C B 0x28C04A0
	0x028C0490 LDR W9, [X10]
	0x028C0494 ADD W9, W9, 0x13
	0x028C0498 ADD X8, X8, W9, 0x4, SXTW
	0x028C049C ADD X0, X8, 0x138
	0x028C04A0 LDP X8, X1, [X0]
	0x028C04A4 MOV X0, X21
	0x028C04A8 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1B1C000
	006 Move X21, 0x1860000
	007 Move W8, [X20+3273]
	008 Move X21, [X21+432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {46}
	014 Move X0, 0x1860000
	015 Move X0, [X0+440]
	016 Call 0x1C17CF4
	017 Move X0, 0x1860000
	018 Move X0, [X0+448]
	019 Call 0x1C17CF4
	020 Move X0, 0x185F000
	021 Move X0, [X0+1712]
	022 Call 0x1C17CF4
	023 Move X0, 0x1860000
	024 Move X0, [X0+456]
	025 Call 0x1C17CF4
	026 Move X0, 0x1860000
	027 Move X0, [X0+464]
	028 Call 0x1C17CF4
	029 Move X0, 0x185F000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0x1860000
	033 Move X0, [X0+432]
	034 Call 0x1C17CF4
	035 Move X0, 0x185E000
	036 Move X0, [X0+3768]
	037 Call 0x1C17CF4
	038 Move X0, 0x1860000
	039 Move X0, [X0+472]
	040 Call 0x1C17CF4
	041 Move X0, 0x185E000
	042 Move X0, [X0+3776]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+3273], W8
	046 Move X20, [X21]
	047 Add X19, X19, 32
	048 Move X0, [X19]
	049 Move W8, [X0+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {55}
	054 Call 0x1C5D684
	055 Move X8, [X0+192]
	056 Move X0, [X8+176]
	057 Move W8, [X0+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move X8, [X0+184]
	064 Move [X8], X20
	065 Move X0, [X19]
	066 Move W8, [X0+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {72}
	071 Call 0x1C5D684
	072 Move X8, [X0+192]
	073 Move X0, [X8+176]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move X0, [X19]
	081 Move W8, [X0+309]
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {87}
	086 Call 0x1C5D684
	087 Move X8, [X0+192]
	088 Move X20, 0x185E000
	089 Move X0, [X8+176]
	090 Move W8, [X0+309]
	091 Move X20, [X20+3768]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {97}
	096 Call 0x1C5D684
	097 Move X8, [X0+184]
	098 Move X1, [X20]
	099 Move X2, X31
	100 Move X0, [X8]
	101 Call String.Concat, X0, X1
	102 Move X8, [X19]
	103 Move X20, X0
	104 Move W9, [X8+309]
	105 Move TEMP, X9
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {112}
	109 Move X0, X8
	110 Call 0x1C5D684
	111 Move X8, X0
	112 Move X8, [X8+192]
	113 Move X0, [X8+176]
	114 Move W8, [X0+309]
	115 Move TEMP, X8
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {120}
	119 Call 0x1C5D684
	120 Move X8, [X0+184]
	121 Move [X8+8], X20
	122 Move X0, [X19]
	123 Move W8, [X0+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {129}
	128 Call 0x1C5D684
	129 Move X8, [X0+192]
	130 Move X0, [X8+176]
	131 Move W8, [X0+309]
	132 Move TEMP, X8
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {137}
	136 Call 0x1C5D684
	137 Move X0, [X19]
	138 Move W8, [X0+309]
	139 Move TEMP, X8
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {144}
	143 Call 0x1C5D684
	144 Move X8, [X0+192]
	145 Move X20, 0x185E000
	146 Move X0, [X8+176]
	147 Move W8, [X0+309]
	148 Move X20, [X20+3776]
	149 Move TEMP, X8
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {154}
	153 Call 0x1C5D684
	154 Move X8, [X0+184]
	155 Move X1, [X20]
	156 Move X2, X31
	157 Move X0, [X8]
	158 Call String.Concat, X0, X1
	159 Move X8, [X19]
	160 Move X20, X0
	161 Move W9, [X8+309]
	162 Move TEMP, X9
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {169}
	166 Move X0, X8
	167 Call 0x1C5D684
	168 Move X8, X0
	169 Move X8, [X8+192]
	170 Move X0, [X8+176]
	171 Move W8, [X0+309]
	172 Move TEMP, X8
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {177}
	176 Call 0x1C5D684
	177 Move X8, [X0+184]
	178 Move [X8+16], X20
	179 Move X0, [X19]
	180 Move W8, [X0+309]
	181 Move TEMP, X8
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfEqual {186}
	185 Call 0x1C5D684
	186 Move X8, [X0+192]
	187 Move X0, [X8+176]
	188 Move W8, [X0+309]
	189 Move TEMP, X8
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfEqual {194}
	193 Call 0x1C5D684
	194 Move X0, [X19]
	195 Move W8, [X0+309]
	196 Move TEMP, X8
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfEqual {201}
	200 Call 0x1C5D684
	201 Move X8, [X0+192]
	202 Move X20, 0x185E000
	203 Move X0, [X8+176]
	204 Move W8, [X0+309]
	205 Move X20, [X20+1712]
	206 Move TEMP, X8
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfEqual {211}
	210 Call 0x1C5D684
	211 Move X8, [X0+184]
	212 Move X1, [X20]
	213 Move X2, X31
	214 Move X0, [X8]
	215 Call String.Concat, X0, X1
	216 Move X8, [X19]
	217 Move X20, X0
	218 Move W9, [X8+309]
	219 Move TEMP, X9
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfEqual {226}
	223 Move X0, X8
	224 Call 0x1C5D684
	225 Move X8, X0
	226 Move X8, [X8+192]
	227 Move X0, [X8+176]
	228 Move W8, [X0+309]
	229 Move TEMP, X8
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {234}
	233 Call 0x1C5D684
	234 Move X8, [X0+184]
	235 Move [X8+24], X20
	236 Move X0, [X19]
	237 Move W8, [X0+309]
	238 Move TEMP, X8
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfEqual {243}
	242 Call 0x1C5D684
	243 Move X8, [X0+192]
	244 Move X0, [X8+176]
	245 Move W8, [X0+309]
	246 Move TEMP, X8
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfEqual {251}
	250 Call 0x1C5D684
	251 Move X0, [X19]
	252 Move W8, [X0+309]
	253 Move TEMP, X8
	254 And TEMP, TEMP, 1
	255 Compare TEMP, 1
	256 JumpIfEqual {258}
	257 Call 0x1C5D684
	258 Move X8, [X0+192]
	259 Move X20, 0x185E000
	260 Move X0, [X8+176]
	261 Move W8, [X0+309]
	262 Move X20, [X20+1728]
	263 Move TEMP, X8
	264 And TEMP, TEMP, 1
	265 Compare TEMP, 1
	266 JumpIfEqual {268}
	267 Call 0x1C5D684
	268 Move X8, [X0+184]
	269 Move X1, [X20]
	270 Move X2, X31
	271 Move X0, [X8]
	272 Call String.Concat, X0, X1
	273 Move X8, [X19]
	274 Move X20, X0
	275 Move W9, [X8+309]
	276 Move TEMP, X9
	277 And TEMP, TEMP, 1
	278 Compare TEMP, 1
	279 JumpIfEqual {283}
	280 Move X0, X8
	281 Call 0x1C5D684
	282 Move X8, X0
	283 Move X8, [X8+192]
	284 Move X0, [X8+176]
	285 Move W8, [X0+309]
	286 Move TEMP, X8
	287 And TEMP, TEMP, 1
	288 Compare TEMP, 1
	289 JumpIfEqual {291}
	290 Call 0x1C5D684
	291 Move X8, [X0+184]
	292 Move [X8+32], X20
	293 Move X0, [X19]
	294 Move W8, [X0+309]
	295 Move TEMP, X8
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfEqual {300}
	299 Call 0x1C5D684
	300 Move X8, [X0+192]
	301 Move X0, [X8+176]
	302 Move W8, [X0+309]
	303 Move TEMP, X8
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfEqual {308}
	307 Call 0x1C5D684
	308 Move X0, [X19]
	309 Move W8, [X0+309]
	310 Move TEMP, X8
	311 And TEMP, TEMP, 1
	312 Compare TEMP, 1
	313 JumpIfEqual {315}
	314 Call 0x1C5D684
	315 Move X8, [X0+192]
	316 Move X20, 0x185F000
	317 Move X0, [X8+176]
	318 Move W8, [X0+309]
	319 Move X20, [X20+472]
	320 Move TEMP, X8
	321 And TEMP, TEMP, 1
	322 Compare TEMP, 1
	323 JumpIfEqual {325}
	324 Call 0x1C5D684
	325 Move X8, [X0+184]
	326 Move X1, [X20]
	327 Move X2, X31
	328 Move X0, [X8]
	329 Call String.Concat, X0, X1
	330 Move X8, [X19]
	331 Move X20, X0
	332 Move W9, [X8+309]
	333 Move TEMP, X9
	334 And TEMP, TEMP, 1
	335 Compare TEMP, 1
	336 JumpIfEqual {340}
	337 Move X0, X8
	338 Call 0x1C5D684
	339 Move X8, X0
	340 Move X8, [X8+192]
	341 Move X0, [X8+176]
	342 Move W8, [X0+309]
	343 Move TEMP, X8
	344 And TEMP, TEMP, 1
	345 Compare TEMP, 1
	346 JumpIfEqual {348}
	347 Call 0x1C5D684
	348 Move X8, [X0+184]
	349 Move [X8+40], X20
	350 Move X0, [X19]
	351 Move W8, [X0+309]
	352 Move TEMP, X8
	353 And TEMP, TEMP, 1
	354 Compare TEMP, 1
	355 JumpIfEqual {357}
	356 Call 0x1C5D684
	357 Move X8, [X0+192]
	358 Move X0, [X8+176]
	359 Move W8, [X0+309]
	360 Move TEMP, X8
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfEqual {365}
	364 Call 0x1C5D684
	365 Move X0, [X19]
	366 Move W8, [X0+309]
	367 Move TEMP, X8
	368 And TEMP, TEMP, 1
	369 Compare TEMP, 1
	370 JumpIfEqual {372}
	371 Call 0x1C5D684
	372 Move X8, [X0+192]
	373 Move X20, 0x185F000
	374 Move X0, [X8+176]
	375 Move W8, [X0+309]
	376 Move X20, [X20+456]
	377 Move TEMP, X8
	378 And TEMP, TEMP, 1
	379 Compare TEMP, 1
	380 JumpIfEqual {382}
	381 Call 0x1C5D684
	382 Move X8, [X0+184]
	383 Move X1, [X20]
	384 Move X2, X31
	385 Move X0, [X8]
	386 Call String.Concat, X0, X1
	387 Move X8, [X19]
	388 Move X20, X0
	389 Move W9, [X8+309]
	390 Move TEMP, X9
	391 And TEMP, TEMP, 1
	392 Compare TEMP, 1
	393 JumpIfEqual {397}
	394 Move X0, X8
	395 Call 0x1C5D684
	396 Move X8, X0
	397 Move X8, [X8+192]
	398 Move X0, [X8+176]
	399 Move W8, [X0+309]
	400 Move TEMP, X8
	401 And TEMP, TEMP, 1
	402 Compare TEMP, 1
	403 JumpIfEqual {405}
	404 Call 0x1C5D684
	405 Move X8, [X0+184]
	406 Move [X8+48], X20
	407 Move X0, [X19]
	408 Move W8, [X0+309]
	409 Move TEMP, X8
	410 And TEMP, TEMP, 1
	411 Compare TEMP, 1
	412 JumpIfEqual {414}
	413 Call 0x1C5D684
	414 Move X8, [X0+192]
	415 Move X0, [X8+176]
	416 Move W8, [X0+309]
	417 Move TEMP, X8
	418 And TEMP, TEMP, 1
	419 Compare TEMP, 1
	420 JumpIfEqual {422}
	421 Call 0x1C5D684
	422 Move X0, [X19]
	423 Move W8, [X0+309]
	424 Move TEMP, X8
	425 And TEMP, TEMP, 1
	426 Compare TEMP, 1
	427 JumpIfEqual {429}
	428 Call 0x1C5D684
	429 Move X8, [X0+192]
	430 Move X20, 0x185F000
	431 Move X0, [X8+176]
	432 Move W8, [X0+309]
	433 Move X20, [X20+440]
	434 Move TEMP, X8
	435 And TEMP, TEMP, 1
	436 Compare TEMP, 1
	437 JumpIfEqual {439}
	438 Call 0x1C5D684
	439 Move X8, [X0+184]
	440 Move X1, [X20]
	441 Move X2, X31
	442 Move X0, [X8]
	443 Call String.Concat, X0, X1
	444 Move X8, [X19]
	445 Move X20, X0
	446 Move W9, [X8+309]
	447 Move TEMP, X9
	448 And TEMP, TEMP, 1
	449 Compare TEMP, 1
	450 JumpIfEqual {454}
	451 Move X0, X8
	452 Call 0x1C5D684
	453 Move X8, X0
	454 Move X8, [X8+192]
	455 Move X0, [X8+176]
	456 Move W8, [X0+309]
	457 Move TEMP, X8
	458 And TEMP, TEMP, 1
	459 Compare TEMP, 1
	460 JumpIfEqual {462}
	461 Call 0x1C5D684
	462 Move X8, [X0+184]
	463 Move [X8+56], X20
	464 Move X0, [X19]
	465 Move W8, [X0+309]
	466 Move TEMP, X8
	467 And TEMP, TEMP, 1
	468 Compare TEMP, 1
	469 JumpIfEqual {471}
	470 Call 0x1C5D684
	471 Move X8, [X0+192]
	472 Move X0, [X8+176]
	473 Move W8, [X0+309]
	474 Move TEMP, X8
	475 And TEMP, TEMP, 1
	476 Compare TEMP, 1
	477 JumpIfEqual {479}
	478 Call 0x1C5D684
	479 Move X0, [X19]
	480 Move W8, [X0+309]
	481 Move TEMP, X8
	482 And TEMP, TEMP, 1
	483 Compare TEMP, 1
	484 JumpIfEqual {486}
	485 Call 0x1C5D684
	486 Move X8, [X0+192]
	487 Move X20, 0x185F000
	488 Move X0, [X8+176]
	489 Move W8, [X0+309]
	490 Move X20, [X20+448]
	491 Move TEMP, X8
	492 And TEMP, TEMP, 1
	493 Compare TEMP, 1
	494 JumpIfEqual {496}
	495 Call 0x1C5D684
	496 Move X8, [X0+184]
	497 Move X1, [X20]
	498 Move X2, X31
	499 Move X0, [X8]
	500 Call String.Concat, X0, X1
	501 Move X8, [X19]
	502 Move X20, X0
	503 Move W9, [X8+309]
	504 Move TEMP, X9
	505 And TEMP, TEMP, 1
	506 Compare TEMP, 1
	507 JumpIfEqual {511}
	508 Move X0, X8
	509 Call 0x1C5D684
	510 Move X8, X0
	511 Move X8, [X8+192]
	512 Move X0, [X8+176]
	513 Move W8, [X0+309]
	514 Move TEMP, X8
	515 And TEMP, TEMP, 1
	516 Compare TEMP, 1
	517 JumpIfEqual {519}
	518 Call 0x1C5D684
	519 Move X8, [X0+184]
	520 Move [X8+64], X20
	521 Move X0, [X19]
	522 Move W8, [X0+309]
	523 Move TEMP, X8
	524 And TEMP, TEMP, 1
	525 Compare TEMP, 1
	526 JumpIfEqual {528}
	527 Call 0x1C5D684
	528 Move X8, [X0+192]
	529 Move X0, [X8+176]
	530 Move W8, [X0+309]
	531 Move TEMP, X8
	532 And TEMP, TEMP, 1
	533 Compare TEMP, 1
	534 JumpIfEqual {536}
	535 Call 0x1C5D684
	536 Move X0, [X19]
	537 Move W8, [X0+309]
	538 Move TEMP, X8
	539 And TEMP, TEMP, 1
	540 Compare TEMP, 1
	541 JumpIfEqual {543}
	542 Call 0x1C5D684
	543 Move X8, [X0+192]
	544 Move X20, 0x185F000
	545 Move X0, [X8+176]
	546 Move W8, [X0+309]
	547 Move X20, [X20+464]
	548 Move TEMP, X8
	549 And TEMP, TEMP, 1
	550 Compare TEMP, 1
	551 JumpIfEqual {553}
	552 Call 0x1C5D684
	553 Move X8, [X0+184]
	554 Move X1, [X20]
	555 Move X2, X31
	556 Move X0, [X8]
	557 Call String.Concat, X0, X1
	558 Move X8, [X19]
	559 Move X20, X0
	560 Move W9, [X8+309]
	561 Move TEMP, X9
	562 And TEMP, TEMP, 1
	563 Compare TEMP, 1
	564 JumpIfEqual {568}
	565 Move X0, X8
	566 Call 0x1C5D684
	567 Move X8, X0
	568 Move X8, [X8+192]
	569 Move X0, [X8+176]
	570 Move W8, [X0+309]
	571 Move TEMP, X8
	572 And TEMP, TEMP, 1
	573 Compare TEMP, 1
	574 JumpIfEqual {576}
	575 Call 0x1C5D684
	576 Move X8, [X0+184]
	577 Move [X8+72], X20
	578 Move X0, [X19]
	579 Move W8, [X0+309]
	580 Move TEMP, X8
	581 And TEMP, TEMP, 1
	582 Compare TEMP, 1
	583 JumpIfEqual {585}
	584 Call 0x1C5D684
	585 Move X8, [X0+192]
	586 Move X0, [X8+176]
	587 Move W8, [X0+309]
	588 Move TEMP, X8
	589 And TEMP, TEMP, 1
	590 Compare TEMP, 1
	591 JumpIfEqual {598}
	592 Move X20, [X31+16]
	593 Move X19, [X31+24]
	594 Move X30, [X31+32]
	595 Move X21, [X31+40]
	596 Call 0x1C5D684
	597 Return 
	598 Move X20, [X31+16]
	599 Move X19, [X31+24]
	600 Move X30, [X31+32]
	601 Move X21, [X31+40]
	602 Return 

