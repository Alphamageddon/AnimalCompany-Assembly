Type: UnityEngine.UIElements.CreationContext

Method: UnityEngine.UIElements.VisualElement get_target()

Disassembly:
	0x03D16E18 MOV X0, X19
	0x03D16E1C MOV V2.16B, V9.16B

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void set_target(UnityEngine.UIElements.VisualElement value)

Disassembly:
	0x03D16E20 MOV V3.16B, V8.16B
	0x03D16E24 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X0], X1
	002 Return 

Method: UnityEngine.UIElements.VisualTreeAsset get_visualTreeAsset()

Disassembly:
	0x03D16E28 LDR X30, [X31 + 0x20]
	0x03D16E2C LDP D9, D8, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+8]
	002 Return X0

Method: System.Void set_visualTreeAsset(UnityEngine.UIElements.VisualTreeAsset value)

Disassembly:
	0x03D16E30 MOV V0.16B, V11.16B
	0x03D16E34 MOV V1.16B, V10.16B

ISIL:
	001 Move [X0+8], X1
	002 Return 

Method: System.Collections.Generic.Dictionary`2<System.String, UnityEngine.UIElements.VisualElement> get_slotInsertionPoints()

Disassembly:
	0x03D16E38 MOV X1, X31
	0x03D16E3C LDP D11, D10, [X31], #0x40

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_slotInsertionPoints(System.Collections.Generic.Dictionary`2<System.String, UnityEngine.UIElements.VisualElement> value)

Disassembly:
	0x03D16E40 B 0x3DF7298
	0x03D16E44 ADRP X0, 0x3E2000

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.List`1<UnityEngine.UIElements.TemplateAsset/AttributeOverride> get_attributeOverrides()

Disassembly:
	0x03D16E48 LDR X0, [X0 + 0x528]
	0x03D16E4C BL 0x1C16D08

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_attributeOverrides(System.Collections.Generic.List`1<UnityEngine.UIElements.TemplateAsset/AttributeOverride> value)

Disassembly:
	0x03D16E50 BL 0x1C16F10
	0x03D16E54 MOV X19, X0

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Void .ctor(System.Collections.Generic.Dictionary`2<System.String, UnityEngine.UIElements.VisualElement> slotInsertionPoints, UnityEngine.UIElements.VisualTreeAsset vta, UnityEngine.UIElements.VisualElement target)

Disassembly:
	0x03D16E58 ADRP X0, 0x44D000
	0x03D16E5C LDR X0, [X0 + 0xF38]
	0x03D16E60 BL 0x1C16D08
	0x03D16E64 MOV X1, X0
	0x03D16E68 MOV X0, X19
	0x03D16E6C MOV X2, X31
	0x03D16E70 BL 0x330E100
	0x03D16E74 ADRP X0, 0x44D000
	0x03D16E78 LDR X0, [X0 + 0xF50]
	0x03D16E7C BL 0x1C16D08
	0x03D16E80 MOV X1, X0
	0x03D16E84 MOV X0, X19
	0x03D16E88 BL 0x1C16DEC
	0x03D16E8C STP X30, X19, [X31 - 0x10]!
	0x03D16E90 MOV X19, X1
	0x03D16E94 BL 0x3D16CBC
	0x03D16E98 MOV X0, X19
	0x03D16E9C LDP X30, X19, [X31], #0x10
	0x03D16EA0 B 0x3D16BD4
	0x03D16EA4 SUB X31, X31, 0x50
	0x03D16EA8 STP X30, X25, [X31 + 0x10]
	0x03D16EAC STP X24, X23, [X31 + 0x20]
	0x03D16EB0 STP X22, X21, [X31 + 0x30]
	0x03D16EB4 STP X20, X19, [X31 + 0x40]
	0x03D16EB8 ADRP X22, 0x6D1000
	0x03D16EBC ADRP X24, 0x408000
	0x03D16EC0 LDRB W8, [X22 + 0x903]
	0x03D16EC4 LDR X24, [X24 + 0xCC0]
	0x03D16EC8 MOV X19, X2
	0x03D16ECC MOV X20, X1
	0x03D16ED0 MOV X21, X0
	0x03D16ED4 TBNZ X8, 0x0, 0x3D16F40

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x6D2000
	009 Move X24, 0x408000
	010 Move W8, [X23+2289]
	011 Move X24, [X24+2816]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x408000
	021 Move X0, [X0+2816]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2289], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move X1, X21
	032 Move X3, X20
	033 Move X4, X19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X2, X31
	041 Move X30, [X31+64]

Method: System.Void .ctor(System.Collections.Generic.Dictionary`2<System.String, UnityEngine.UIElements.VisualElement> slotInsertionPoints, System.Collections.Generic.List`1<UnityEngine.UIElements.TemplateAsset/AttributeOverride> attributeOverrides, UnityEngine.UIElements.VisualTreeAsset vta, UnityEngine.UIElements.VisualElement target)

Disassembly:
	0x03D16ED8 ADRP X0, 0x44D000
	0x03D16EDC LDR X0, [X0 + 0xF58]
	0x03D16EE0 BL 0x1C16CF4
	0x03D16EE4 ADRP X0, 0x44D000
	0x03D16EE8 LDR X0, [X0 + 0xF60]
	0x03D16EEC BL 0x1C16CF4
	0x03D16EF0 ADRP X0, 0x408000
	0x03D16EF4 LDR X0, [X0 + 0xCC0]
	0x03D16EF8 BL 0x1C16CF4
	0x03D16EFC ADRP X0, 0x3DD000
	0x03D16F00 LDR X0, [X0 + 0x6C0]
	0x03D16F04 BL 0x1C16CF4
	0x03D16F08 ADRP X0, 0x44D000
	0x03D16F0C LDR X0, [X0 + 0xF68]
	0x03D16F10 BL 0x1C16CF4
	0x03D16F14 ADRP X0, 0x44D000
	0x03D16F18 LDR X0, [X0 + 0xF70]
	0x03D16F1C BL 0x1C16CF4
	0x03D16F20 ADRP X0, 0x44D000
	0x03D16F24 LDR X0, [X0 + 0xF78]
	0x03D16F28 BL 0x1C16CF4
	0x03D16F2C ADRP X0, 0x44D000
	0x03D16F30 LDR X0, [X0 + 0xF80]
	0x03D16F34 BL 0x1C16CF4
	0x03D16F38 MOVZ W8, 0x1
	0x03D16F3C STRB W8, [X22 + 0x903]
	0x03D16F40 LDR X0, [X24]
	0x03D16F44 STR X31, [X31 + 0x8]
	0x03D16F48 LDR W8, [X0 + 0xE0]
	0x03D16F4C CBNZ W8, 0x3D16F58

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x6D2000
	010 Move X25, 0x408000
	011 Move W8, [X24+2290]
	012 Move X25, [X25+2816]
	013 Move X19, X4
	014 Move X20, X3
	015 Move X21, X2
	016 Move X23, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x408000
	023 Move X0, [X0+2816]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+2290], W8
	027 Move X0, [X25]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move [X22+16], X23
	033 Move [X22+24], X21
	034 Move [X22], X19
	035 Move [X22+8], X20
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X24, [X31+16]
	041 Move X23, [X31+24]
	042 Move X30, [X31+64]
	043 Move X25, [X31+72]
	044 Return 

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03D16F50 BL 0x1C16DFC
	0x03D16F54 LDR X0, [X24]
	0x03D16F58 LDR X8, [X0 + 0xB8]
	0x03D16F5C LDR X0, [X8]
	0x03D16F60 CBZ X0, 0x3D170CC
	0x03D16F64 ADRP X8, 0x44D000
	0x03D16F68 LDR X8, [X8 + 0xF60]
	0x03D16F6C ADD X2, X31, 0x8
	0x03D16F70 MOV X1, X21
	0x03D16F74 LDR X3, [X8]
	0x03D16F78 BL 0x2AC8ABC
	0x03D16F7C TBNZ X0, 0x0, 0x3D170A4
	0x03D16F80 CBZ X21, 0x3D170CC
	0x03D16F84 LDR X8, [X21]
	0x03D16F88 MOV X0, X21
	0x03D16F8C LDR X9, [X8 + 0x818]
	0x03D16F90 LDR X1, [X8 + 0x820]
	0x03D16F94 BLR X9
	0x03D16F98 ADRP X8, 0x3DD000
	0x03D16F9C LDR X8, [X8 + 0x6C0]
	0x03D16FA0 MOV X22, X0
	0x03D16FA4 LDR X8, [X8]
	0x03D16FA8 LDR W9, [X8 + 0xE0]
	0x03D16FAC CBNZ W9, 0x3D16FB8
	0x03D16FB0 MOV X0, X8
	0x03D16FB4 BL 0x1C16DFC
	0x03D16FB8 MOV X0, X22
	0x03D16FBC MOV X1, X31
	0x03D16FC0 MOV X2, X31
	0x03D16FC4 BL 0x3395F0C
	0x03D16FC8 TBZ X0, 0x0, 0x3D16FF4
	0x03D16FCC LDR X0, [X24]
	0x03D16FD0 ADD X9, X31, 0x8
	0x03D16FD4 ORR X23, X9, 0x7
	0x03D16FD8 LDR W8, [X0 + 0xE0]
	0x03D16FDC CBNZ W8, 0x3D16FE4
	0x03D16FE0 BL 0x1C16DFC
	0x03D16FE4 ADD X1, X31, 0x8
	0x03D16FE8 MOV X0, X22
	0x03D16FEC MOV X2, X23
	0x03D16FF0 BL 0x3D16EA4
	0x03D16FF4 LDR X0, [X24]
	0x03D16FF8 LDR W23, [X31 + 0x8]
	0x03D16FFC LDR W8, [X0 + 0xE0]
	0x03D17000 CBNZ W8, 0x3D17008
	0x03D17004 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x6D2000
	007 Move W8, [X21+2291]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x408000
	015 Move X0, [X0+2816]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2291], W8
	019 Compare X20, 0
	020 JumpIfEqual {26}
	021 Move X21, 0x408000
	022 Move X21, [X21+2816]
	023 Move X8, [X20]
	024 Move X0, [X21]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfEqual {31}
	030 Move X1, X0
	031 Call 0x1C17DFC
	032 Move X1, [X21]
	033 Move X0, [X20]
	034 Move X8, [X0+64]
	035 Move X9, [X1+64]
	036 Move X0, X20
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Call 0x1C17E08
	039 Move V0, [X0]
	040 Move V1, [X0+16]
	041 Add X1, X31, 0
	042 Move X0, X19
	043 Move [X31], V0
	044 Move [X31+8], V1
	045 Call CreationContext.Equals, X0, X1
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 And W0, W0, 1
	051 Add X31, X31, 64
	052 Return X0
	053 Call 0x1C181E0

Method: System.Boolean Equals(UnityEngine.UIElements.CreationContext other)

Disassembly:
	0x03D17008 ADRP X8, 0x44C000
	0x03D1700C LDR X8, [X8 + 0xF78]
	0x03D17010 MOV X0, X21
	0x03D17014 LDR X1, [X8]
	0x03D17018 BL 0x3D170D0
	0x03D1701C ADRP X8, 0x44C000
	0x03D17020 LDR X8, [X8 + 0xF80]
	0x03D17024 MOV W22, W0
	0x03D17028 MOV X0, X21
	0x03D1702C LDR X1, [X8]
	0x03D17030 BL 0x3D170D0
	0x03D17034 ADRP X8, 0x44C000
	0x03D17038 LDR W25, [X31 + 0xC]
	0x03D1703C LDR X8, [X8 + 0xF68]
	0x03D17040 LDR X1, [X8]
	0x03D17044 ORR W8, W22, W23, 0x0
	0x03D17048 ORR W8, W8, W0, 0x0
	0x03D1704C MOV X0, X21
	0x03D17050 STR W8, [X31 + 0x8]
	0x03D17054 BL 0x3D170D0
	0x03D17058 ADRP X8, 0x44C000
	0x03D1705C LDR X8, [X8 + 0xF70]
	0x03D17060 MOV W22, W0
	0x03D17064 MOV X0, X21
	0x03D17068 LDR X1, [X8]
	0x03D1706C BL 0x3D170D0
	0x03D17070 LDR X8, [X24]
	0x03D17074 ORR W9, W22, W25, 0x0
	0x03D17078 ORR W9, W9, W0, 0x0
	0x03D1707C STR W9, [X31 + 0xC]
	0x03D17080 LDR X8, [X8 + 0xB8]
	0x03D17084 LDR X0, [X8]
	0x03D17088 CBZ X0, 0x3D170CC
	0x03D1708C ADRP X8, 0x44C000
	0x03D17090 LDR X2, [X31 + 0x8]
	0x03D17094 LDR X8, [X8 + 0xF58]
	0x03D17098 MOV X1, X21
	0x03D1709C LDR X3, [X8]
	0x03D170A0 BL 0x2AC706C
	0x03D170A4 LDR W8, [X31 + 0x8]
	0x03D170A8 LDP X22, X21, [X31 + 0x30]
	0x03D170AC LDP X24, X23, [X31 + 0x20]
	0x03D170B0 LDP X30, X25, [X31 + 0x10]
	0x03D170B4 STR W8, [X20]
	0x03D170B8 LDR W8, [X31 + 0xC]
	0x03D170BC STR W8, [X19]
	0x03D170C0 LDP X20, X19, [X31 + 0x40]
	0x03D170C4 ADD X31, X31, 0x50
	0x03D170C8 RET
	0x03D170CC BL 0x1C16F20
	0x03D170D0 STP X29, X30, [X31 - 0x60]!
	0x03D170D4 STP X28, X27, [X31 + 0x10]
	0x03D170D8 STP X26, X25, [X31 + 0x20]
	0x03D170DC STP X24, X23, [X31 + 0x30]
	0x03D170E0 STP X22, X21, [X31 + 0x40]
	0x03D170E4 STP X20, X19, [X31 + 0x50]
	0x03D170E8 ADRP X21, 0x6D0000
	0x03D170EC LDRB W8, [X21 + 0x904]
	0x03D170F0 MOV X19, X1
	0x03D170F4 MOV X20, X0
	0x03D170F8 TBNZ X8, 0x0, 0x3D17134
	0x03D170FC ADRP X0, 0x44C000
	0x03D17100 LDR X0, [X0 + 0xF88]
	0x03D17104 BL 0x1C16CF4
	0x03D17108 ADRP X0, 0x44C000
	0x03D1710C LDR X0, [X0 + 0xF90]
	0x03D17110 BL 0x1C16CF4
	0x03D17114 ADRP X0, 0x407000
	0x03D17118 LDR X0, [X0 + 0xCC0]
	0x03D1711C BL 0x1C16CF4
	0x03D17120 ADRP X0, 0x3DC000
	0x03D17124 LDR X0, [X0 + 0x6C0]
	0x03D17128 BL 0x1C16CF4
	0x03D1712C MOVZ W8, 0x1
	0x03D17130 STRB W8, [X21 + 0x904]
	0x03D17134 CBZ X20, 0x3D172D0
	0x03D17138 MOVZ W2, 0x36
	0x03D1713C MOV X0, X20
	0x03D17140 MOV X1, X19
	0x03D17144 MOV X3, X31
	0x03D17148 BL 0x3397600
	0x03D1714C MOV X1, X31
	0x03D17150 MOV X2, X31
	0x03D17154 MOV X19, X0
	0x03D17158 BL 0x32C2354
	0x03D1715C TBZ X0, 0x0, 0x3D17168

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x6D1000
	008 Move X23, 0x407000
	009 Move X22, 0x407000
	010 Move W8, [X21+2292]
	011 Move X23, [X23+2656]
	012 Move X22, [X22+2816]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x407000
	020 Move X0, [X0+2816]
	021 Call 0x1C17CF4
	022 Move X0, 0x407000
	023 Move X0, [X0+2656]
	024 Call 0x1C17CF4
	025 Move X0, 0x44D000
	026 Move X0, [X0+3752]
	027 Call 0x1C17CF4
	028 Move X0, 0x44D000
	029 Move X0, [X0+3760]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2292], W8
	033 Move X0, [X23]
	034 Call 0x211C0E8
	035 Move X8, [X22]
	036 Move X21, X0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Compare X21, 0
	043 JumpIfEqual {113}
	044 Move X8, [X21]
	045 Move X2, [X19]
	046 Move X1, [X20]
	047 Move X0, X21
	048 Move X9, [X8+440]
	049 Move X3, [X8+448]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {105}
	055 Move X8, 0x44D000
	056 Move X8, [X8+3752]
	057 Move X0, [X8]
	058 Call 0x211C0E8
	059 Move X8, [X22]
	060 Move X21, X0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Compare X21, 0
	067 JumpIfEqual {113}
	068 Move X8, [X21]
	069 Move X2, [X19+8]
	070 Move X1, [X20+8]
	071 Move X0, X21
	072 Move X9, [X8+440]
	073 Move X3, [X8+448]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {105}
	079 Move X8, 0x44D000
	080 Move X8, [X8+3760]
	081 Move X0, [X8]
	082 Call 0x211C0E8
	083 Move X8, [X22]
	084 Move X21, X0
	085 Move W9, [X8+224]
	086 Compare W9, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X8
	089 Call 0x1C17DFC
	090 Compare X21, 0
	091 JumpIfEqual {113}
	092 Move X8, [X21]
	093 Move X2, [X19+16]
	094 Move X1, [X20+16]
	095 Move X0, X21
	096 Move X4, [X8+440]
	097 Move X3, [X8+448]
	098 Move X20, [X31+32]
	099 Move X19, [X31+40]
	100 Move X22, [X31+16]
	101 Move X21, [X31+24]
	102 Move X30, [X31+48]
	103 Move X23, [X31+56]
	104 CallNoReturn X4
	105 Move X20, [X31+32]
	106 Move X19, [X31+40]
	107 Move X22, [X31+16]
	108 Move X21, [X31+24]
	109 Move W0, W31
	110 Move X30, [X31+48]
	111 Move X23, [X31+56]
	112 Return X0
	113 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03D17160 MOV W20, W31
	0x03D17164 B 0x3D172A4
	0x03D17168 ADRP X8, 0x3DC000
	0x03D1716C LDR X8, [X8 + 0x6C0]
	0x03D17170 LDR X0, [X8]
	0x03D17174 ADRP X8, 0x44C000
	0x03D17178 LDR X8, [X8 + 0xF88]
	0x03D1717C LDR W9, [X0 + 0xE0]
	0x03D17180 LDR X20, [X8]
	0x03D17184 CBNZ W9, 0x3D1718C
	0x03D17188 BL 0x1C16DFC
	0x03D1718C MOV X0, X20
	0x03D17190 MOV X1, X31
	0x03D17194 BL 0x338C698
	0x03D17198 CBZ X19, 0x3D172D0
	0x03D1719C LDR X8, [X19]
	0x03D171A0 MOV X1, X0
	0x03D171A4 MOV X0, X19
	0x03D171A8 MOV W2, W31
	0x03D171AC LDR X9, [X8 + 0x208]
	0x03D171B0 LDR X3, [X8 + 0x210]
	0x03D171B4 BLR X9
	0x03D171B8 CBZ X0, 0x3D172D0
	0x03D171BC LDR W8, [X0 + 0x18]
	0x03D171C0 MOV X19, X0
	0x03D171C4 CMP W8, 0x1
	0x03D171C8 B.LT 0x3D172A0
	0x03D171CC ADRP X24, 0x44C000
	0x03D171D0 ADRP X25, 0x407000
	0x03D171D4 LDR X24, [X24 + 0xF90]
	0x03D171D8 LDR X25, [X25 + 0xCC0]
	0x03D171DC MOV W23, W31
	0x03D171E0 MOV W20, W31
	0x03D171E4 MOVZ W26, 0x1
	0x03D171E8 CMP W23, W8
	0x03D171EC B.CS 0x3D172C4
	0x03D171F0 ADD X8, X19, W23, 0x3, SXTW
	0x03D171F4 LDR X21, [X8 + 0x20]
	0x03D171F8 CBZ X21, 0x3D172D0
	0x03D171FC LDR X8, [X21]
	0x03D17200 LDR X1, [X24]
	0x03D17204 LDRB W10, [X8 + 0x130]
	0x03D17208 LDRB W9, [X1 + 0x130]
	0x03D1720C CMP W10, W9
	0x03D17210 B.CC 0x3D172C8
	0x03D17214 LDR X8, [X8 + 0xC8]
	0x03D17218 ADD X8, X8, X9, 0x3, LSL
	0x03D1721C LDUR X8, [X8 - 0x8]
	0x03D17220 CMP X8, X1
	0x03D17224 B.NE 0x3D172C8
	0x03D17228 LDR X27, [X21 + 0x10]
	0x03D1722C CBZ X27, 0x3D17284
	0x03D17230 LDR X8, [X27 + 0x18]
	0x03D17234 CMP W8, 0x1
	0x03D17238 B.LT 0x3D17284
	0x03D1723C MOV X28, X31
	0x03D17240 AND X8, X8, 0x0
	0x03D17244 ADD X29, X27, 0x20
	0x03D17248 CMP X28, W8, UXTW
	0x03D1724C B.CS 0x3D172C4
	0x03D17250 LDR X0, [X25]
	0x03D17254 LDR X22, [X29, X28, LSL #3]
	0x03D17258 LDR W8, [X0 + 0xE0]
	0x03D1725C CBNZ W8, 0x3D17264
	0x03D17260 BL 0x1C16DFC
	0x03D17264 MOV X0, X22
	0x03D17268 BL 0x3D172D4
	0x03D1726C LDR W8, [X27 + 0x18]
	0x03D17270 LSLV W9, W26, W0
	0x03D17274 ADD X28, X28, 0x1
	0x03D17278 ORR W20, W9, W20, 0x0
	0x03D1727C CMP X28, W8, SXTW
	0x03D17280 B.LT 0x3D17248
	0x03D17284 LDR W8, [X19 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6D1000
	007 Move X22, 0x407000
	008 Move X20, 0x407000
	009 Move W8, [X21+2293]
	010 Move X22, [X22+2656]
	011 Move X20, [X20+2816]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x407000
	018 Move X0, [X0+2816]
	019 Call 0x1C17CF4
	020 Move X0, 0x407000
	021 Move X0, [X0+2656]
	022 Call 0x1C17CF4
	023 Move X0, 0x44D000
	024 Move X0, [X0+3752]
	025 Call 0x1C17CF4
	026 Move X0, 0x44D000
	027 Move X0, [X0+3760]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2293], W8
	031 Move X0, [X22]
	032 Call 0x211C0E8
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Compare X20, 0
	041 JumpIfEqual {88}
	042 Move X8, [X20]
	043 Move X1, [X19]
	044 Move X21, 0x44D000
	045 Move X0, X20
	046 Move X9, [X8+456]
	047 Move X2, [X8+464]
	048 Move X21, [X21+3752]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X21]
	051 Move W20, W0
	052 Move X0, X8
	053 Call 0x211C0E8
	054 Compare X0, 0
	055 JumpIfEqual {88}
	056 Move X8, [X0]
	057 Move X1, [X19+8]
	058 Move X21, 0x44D000
	059 Move X9, [X8+456]
	060 Move X2, [X8+464]
	061 Move X21, [X21+3760]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X8, [X21]
	064 Move W21, W0
	065 Move X0, X8
	066 Call 0x211C0E8
	067 Compare X0, 0
	068 JumpIfEqual {88}
	069 Move X8, [X0]
	070 Move X1, [X19+16]
	071 Move W19, 0x5529
	072 NotImplemented "Instruction MOVK not yet implemented."
	073 Move X9, [X8+456]
	074 Move X2, [X8+464]
	075 NotImplemented "Instruction MADD not yet implemented."
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move W8, 0xE79C
	078 NotImplemented "Instruction MOVK not yet implemented."
	079 Multiply W8, W8, W19
	080 NotImplemented "Instruction MADD not yet implemented."
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Add W0, W0, W8
	086 Move X30, [X31+48]
	087 Return X0
	088 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D17288 LDR W9, [X21 + 0x18]
	0x03D1728C ADD W23, W23, 0x1
	0x03D17290 CMP W23, W8
	0x03D17294 ORR W20, W9, W20, 0x0
	0x03D17298 B.LT 0x3D171E8
	0x03D1729C B 0x3D172A4
	0x03D172A0 MOVN W20, 0x0
	0x03D172A4 MOV W0, W20
	0x03D172A8 LDP X20, X19, [X31 + 0x50]
	0x03D172AC LDP X22, X21, [X31 + 0x40]
	0x03D172B0 LDP X24, X23, [X31 + 0x30]
	0x03D172B4 LDP X26, X25, [X31 + 0x20]
	0x03D172B8 LDP X28, X27, [X31 + 0x10]
	0x03D172BC LDP X29, X30, [X31], #0x60
	0x03D172C0 RET
	0x03D172C4 BL 0x1C16F28
	0x03D172C8 MOV X0, X21
	0x03D172CC BL 0x1C171E0
	0x03D172D0 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x6D1000
	005 Move X20, 0x407000
	006 Move W8, [X19+2294]
	007 Move X20, [X20+2816]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x407000
	013 Move X0, [X0+2816]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2294], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 NotImplemented "Instruction MOVI not yet implemented."
	021 Move X8, [X8+184]
	022 Move [X8], V0
	023 Move [X8+8], V0
	024 Move X30, [X31+32]
	025 Return 

