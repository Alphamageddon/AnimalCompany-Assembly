Type: UnityEngine.UIElements.ReusableListViewItem

Method: UnityEngine.UIElements.VisualElement get_rootElement()

Disassembly:
	0x03CF85D4 ADRP X20, 0x6EF000
	0x03CF85D8 LDRB W8, [X20 + 0x7C2]
	0x03CF85DC MOV X19, X0
	0x03CF85E0 TBNZ X8, 0x0, 0x3CF8604
	0x03CF85E4 ADRP X0, 0x424000
	0x03CF85E8 LDR X0, [X0 + 0x120]

ISIL:
	001 Move X8, X0
	002 Move X0, [X0+72]
	003 Compare X0, 0
	004 JumpIfEqual {6}
	005 Return X0
	006 Move X0, [X8+16]
	007 Return X0

Method: System.Void Init(UnityEngine.UIElements.VisualElement item, System.Boolean usesAnimatedDragger)

Disassembly:
	0x03CF02AC BLR X9
	0x03CF02B0 CBZ X0, 0x3CF0344
	0x03CF02B4 LDR X8, [X19]
	0x03CF02B8 MOV X0, X19
	0x03CF02BC LDP X9, X1, [X8 + 0x188]
	0x03CF02C0 BLR X9
	0x03CF02C4 CBZ X0, 0x3CF038C
	0x03CF02C8 ADRP X10, 0x40A000
	0x03CF02CC LDR X8, [X0]
	0x03CF02D0 LDR X10, [X10 + 0x2F8]
	0x03CF02D4 MOV X19, X0
	0x03CF02D8 LDRH W9, [X8 + 0x12E]
	0x03CF02DC LDR X1, [X10]
	0x03CF02E0 CBZ X9, 0x3CF0304
	0x03CF02E4 LDR X10, [X8 + 0xB0]
	0x03CF02E8 ADD X10, X10, 0x8
	0x03CF02EC LDUR X11, [X10 - 0x8]
	0x03CF02F0 CMP X11, X1
	0x03CF02F4 B.EQ 0x3CF0314
	0x03CF02F8 SUBS X9, X9, 0x1
	0x03CF02FC ADD X10, X10, 0x10
	0x03CF0300 B.NE 0x3CF02EC
	0x03CF0304 MOVZ W2, 0x6
	0x03CF0308 MOV X0, X19
	0x03CF030C BL 0x1C5C788
	0x03CF0310 B 0x3CF0324
	0x03CF0314 LDR W9, [X10]
	0x03CF0318 ADD W9, W9, 0x6
	0x03CF031C ADD X8, X8, W9, 0x4, SXTW
	0x03CF0320 ADD X0, X8, 0x138
	0x03CF0324 LDP X8, X1, [X0]
	0x03CF0328 MOV X0, X19
	0x03CF032C BLR X8
	0x03CF0330 CBZ W20, 0x3CF0338
	0x03CF0334 TBNZ X0, 0x0, 0x3CF0344
	0x03CF0338 LDP X20, X19, [X31 + 0x10]
	0x03CF033C LDR X30, [X31], #0x20
	0x03CF0340 RET
	0x03CF0344 ADRP X0, 0x403000
	0x03CF0348 LDR X0, [X0 + 0x5B0]
	0x03CF034C BL 0x1C16D08
	0x03CF0350 BL 0x1C16F10
	0x03CF0354 MOV X19, X0
	0x03CF0358 ADRP X0, 0x472000
	0x03CF035C LDR X0, [X0 + 0xAC0]
	0x03CF0360 BL 0x1C16D08
	0x03CF0364 MOV X1, X0
	0x03CF0368 MOV X0, X19
	0x03CF036C MOV X2, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x6F8000
	009 Move X23, 0x42C000
	010 Move X22, 0x473000
	011 Move W8, [X24+1969]
	012 Move X23, [X23+2200]
	013 Move X22, [X22+2712]
	014 Move W19, W2
	015 Move X21, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x473000
	022 Move X0, [X0+2712]
	023 Call 0x1C17CF4
	024 Move X0, 0x42C000
	025 Move X0, [X0+2200]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+1969], W8
	029 Move [X20+16], X21
	030 Move X0, [X23]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X21, X0
	034 Call VisualElement..ctor, X0
	035 Move X0, [X22]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Compare X21, 0
	041 JumpIfEqual {61}
	042 Move X8, [X22]
	043 Move X0, X21
	044 Move X2, X31
	045 Move X8, [X8+184]
	046 Move X1, [X8+48]
	047 Call VisualElement.set_name, X0, X1
	048 Move X2, [X20+16]
	049 And W3, W19, 1
	050 Move X0, X20
	051 Move X1, X21
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X22, [X31+32]
	055 Move X21, [X31+40]
	056 Move X24, [X31+16]
	057 Move X23, [X31+24]
	058 Move X30, [X31+64]
	059 Call ReusableListViewItem.UpdateHierarchy, X0, X1, X2, X3
	060 Return 
	061 Call 0x1C17F20

Method: System.Void UpdateHierarchy(UnityEngine.UIElements.VisualElement root, UnityEngine.UIElements.VisualElement item, System.Boolean usesAnimatedDragger)

Disassembly:
	0x03CF85EC BL 0x1C16CF4
	0x03CF85F0 ADRP X0, 0x3FB000
	0x03CF85F4 LDR X0, [X0 + 0x5A8]
	0x03CF85F8 BL 0x1C16CF4
	0x03CF85FC MOVZ W8, 0x1
	0x03CF8600 STRB W8, [X20 + 0x7C2]
	0x03CF8604 LDR X0, [X19 + 0x68]
	0x03CF8608 CBZ X0, 0x3CF87D8
	0x03CF860C MOV X1, X31
	0x03CF8610 BL 0x3DE0EB8
	0x03CF8614 CBZ X0, 0x3CF87D8
	0x03CF8618 ADRP X21, 0x424000
	0x03CF861C LDR X8, [X0]
	0x03CF8620 LDR X21, [X21 + 0x120]
	0x03CF8624 MOV X20, X0
	0x03CF8628 LDRH W9, [X8 + 0x12E]
	0x03CF862C LDR X1, [X21]
	0x03CF8630 CBZ X9, 0x3CF8654
	0x03CF8634 LDR X10, [X8 + 0xB0]
	0x03CF8638 ADD X10, X10, 0x8
	0x03CF863C LDUR X11, [X10 - 0x8]
	0x03CF8640 CMP X11, X1
	0x03CF8644 B.EQ 0x3CF8664
	0x03CF8648 SUBS X9, X9, 0x1
	0x03CF864C ADD X10, X10, 0x10
	0x03CF8650 B.NE 0x3CF863C
	0x03CF8654 MOVZ W2, 0x2C
	0x03CF8658 MOV X0, X20
	0x03CF865C BL 0x1C5C788
	0x03CF8660 B 0x3CF8674
	0x03CF8664 LDR W9, [X10]
	0x03CF8668 ADD W9, W9, 0x2C
	0x03CF866C ADD X8, X8, W9, 0x4, SXTW
	0x03CF8670 ADD X0, X8, 0x138
	0x03CF8674 LDP X8, X1, [X0]
	0x03CF8678 MOV X0, X20
	0x03CF867C BLR X8
	0x03CF8680 LDR X0, [X19 + 0x68]
	0x03CF8684 CBZ X0, 0x3CF87D8
	0x03CF8688 MOV X1, X31
	0x03CF868C MOV V8.16B, V0.16B
	0x03CF8690 BL 0x3DE0EB8
	0x03CF8694 CBZ X0, 0x3CF87D8
	0x03CF8698 LDR X8, [X0]
	0x03CF869C LDR X1, [X21]
	0x03CF86A0 MOV X20, X0
	0x03CF86A4 LDRH W9, [X8 + 0x12E]
	0x03CF86A8 CBZ X9, 0x3CF86CC
	0x03CF86AC LDR X10, [X8 + 0xB0]
	0x03CF86B0 ADD X10, X10, 0x8
	0x03CF86B4 LDUR X11, [X10 - 0x8]
	0x03CF86B8 CMP X11, X1
	0x03CF86BC B.EQ 0x3CF86DC
	0x03CF86C0 SUBS X9, X9, 0x1
	0x03CF86C4 ADD X10, X10, 0x10
	0x03CF86C8 B.NE 0x3CF86B4
	0x03CF86CC MOVZ W2, 0x16
	0x03CF86D0 MOV X0, X20
	0x03CF86D4 BL 0x1C5C788
	0x03CF86D8 B 0x3CF86EC
	0x03CF86DC LDR W9, [X10]
	0x03CF86E0 ADD W9, W9, 0x16
	0x03CF86E4 ADD X8, X8, W9, 0x4, SXTW
	0x03CF86E8 ADD X0, X8, 0x138
	0x03CF86EC LDP X8, X1, [X0]
	0x03CF86F0 MOV X0, X20
	0x03CF86F4 BLR X8
	0x03CF86F8 LDR X0, [X19 + 0x68]
	0x03CF86FC CBZ X0, 0x3CF87D8
	0x03CF8700 MOV X1, X31
	0x03CF8704 MOV V9.16B, V0.16B
	0x03CF8708 BL 0x3DE0EB8
	0x03CF870C CBZ X0, 0x3CF87D8
	0x03CF8710 LDR X8, [X0]
	0x03CF8714 LDR X1, [X21]
	0x03CF8718 ADRP X21, 0x3FB000
	0x03CF871C MOV X20, X0
	0x03CF8720 LDRH W9, [X8 + 0x12E]
	0x03CF8724 LDR X21, [X21 + 0x5A8]
	0x03CF8728 CBZ X9, 0x3CF874C
	0x03CF872C LDR X10, [X8 + 0xB0]
	0x03CF8730 ADD X10, X10, 0x8
	0x03CF8734 LDUR X11, [X10 - 0x8]
	0x03CF8738 CMP X11, X1
	0x03CF873C B.EQ 0x3CF875C
	0x03CF8740 SUBS X9, X9, 0x1
	0x03CF8744 ADD X10, X10, 0x10
	0x03CF8748 B.NE 0x3CF8734
	0x03CF874C MOVZ W2, 0x17
	0x03CF8750 MOV X0, X20
	0x03CF8754 BL 0x1C5C788
	0x03CF8758 B 0x3CF876C
	0x03CF875C LDR W9, [X10]
	0x03CF8760 ADD W9, W9, 0x17
	0x03CF8764 ADD X8, X8, W9, 0x4, SXTW
	0x03CF8768 ADD X0, X8, 0x138
	0x03CF876C LDP X8, X1, [X0]
	0x03CF8770 MOV X0, X20
	0x03CF8774 BLR X8
	0x03CF8778 LDR X0, [X21]
	0x03CF877C LDR V10, [X19 + 0x84]
	0x03CF8780 FADD S1, S8, S9
	0x03CF8784 FADD S8, S1, S0
	0x03CF8788 LDR W8, [X0 + 0xE0]
	0x03CF878C CBNZ W8, 0x3CF8794
	0x03CF8790 BL 0x1C16DFC
	0x03CF8794 MOVZ W8, 0x1
	0x03CF8798 FABD S0, S8, S8
	0x03CF879C FMOV S1, W8
	0x03CF87A0 FCMP S0, S1
	0x03CF87A4 B.MI 0x3CF87C4
	0x03CF87A8 STR S8, [X19 + 0x84]
	0x03CF87AC MOV X0, X19
	0x03CF87B0 LDP X20, X19, [X31 + 0x30]
	0x03CF87B4 LDP X30, X21, [X31 + 0x20]
	0x03CF87B8 LDP D9, D8, [X31 + 0x10]
	0x03CF87BC LDR V10, [X31], #0x40
	0x03CF87C0 B 0x3CF8490
	0x03CF87C4 LDP X20, X19, [X31 + 0x30]
	0x03CF87C8 LDP X30, X21, [X31 + 0x20]
	0x03CF87CC LDP D9, D8, [X31 + 0x10]
	0x03CF87D0 LDR V10, [X31], #0x40
	0x03CF87D4 RET
	0x03CF87D8 BL 0x1C16F20
	0x03CF87DC LDR X8, [X0 + 0x70]
	0x03CF87E0 CBZ X8, 0x3CF87F4
	0x03CF87E4 LDR X3, [X8 + 0x18]
	0x03CF87E8 LDR X0, [X8 + 0x40]
	0x03CF87EC LDR X2, [X8 + 0x28]
	0x03CF87F0 BR X3
	0x03CF87F4 RET
	0x03CF87F8 LDR X8, [X0 + 0x78]
	0x03CF87FC CBZ X8, 0x3CF8810
	0x03CF8800 LDR X3, [X8 + 0x18]
	0x03CF8804 LDR X0, [X8 + 0x40]
	0x03CF8808 LDR X2, [X8 + 0x28]
	0x03CF880C BR X3
	0x03CF8810 RET
	0x03CF8814 LDRB W0, [X0 + 0x10]
	0x03CF8818 RET
	0x03CF881C AND W8, W1, 0x1
	0x03CF8820 STRB W8, [X0 + 0x10]
	0x03CF8824 RET
	0x03CF8828 STP X30, X25, [X31 - 0x40]!
	0x03CF882C STP X24, X23, [X31 + 0x10]
	0x03CF8830 STP X22, X21, [X31 + 0x20]
	0x03CF8834 STP X20, X19, [X31 + 0x30]
	0x03CF8838 ADRP X24, 0x6EF000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x6F0000
	008 Move W8, [X23+1970]
	009 Move W22, W3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x46B000
	018 Move X0, [X0+2712]
	019 Call 0x1C17CF4
	020 Move X0, 0x424000
	021 Move X0, [X0+2200]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1970], W8
	025 Move X0, [X19+72]
	026 Move TEMP, X22
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {165}
	030 Compare X0, 0
	031 JumpIfNotEqual {170}
	032 Move [X19+72], X21
	033 Move X22, 0x46B000
	034 Move X22, [X22+2712]
	035 Move X0, [X22]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Compare X21, 0
	041 JumpIfEqual {177}
	042 Move X8, [X22]
	043 Move X0, X21
	044 Move X2, X31
	045 Move X8, [X8+184]
	046 Move X1, [X8+48]
	047 Call VisualElement.AddToClassList, X0, X1
	048 Move X23, 0x424000
	049 Move X23, [X23+2200]
	050 Move X0, [X23]
	051 Call 0x1C17F10
	052 Move X1, X31
	053 Move X21, X0
	054 Call VisualElement..ctor, X0
	055 Compare X21, 0
	056 JumpIfEqual {177}
	057 Move X8, [X22]
	058 Move X0, X21
	059 Move X2, X31
	060 Move X8, [X8+184]
	061 Move X1, [X8+64]
	062 Call VisualElement.set_name, X0, X1
	063 Move [X19+80], X21
	064 Move X8, [X22]
	065 Move X0, X21
	066 Move X2, X31
	067 Move X8, [X8+184]
	068 Move X1, [X8+64]
	069 Call VisualElement.AddToClassList, X0, X1
	070 Move X0, [X23]
	071 Call 0x1C17F10
	072 Move X1, X31
	073 Move X21, X0
	074 Call VisualElement..ctor, X0
	075 Compare X21, 0
	076 JumpIfEqual {177}
	077 Move X8, [X22]
	078 Move X0, X21
	079 Move X2, X31
	080 Move X8, [X8+184]
	081 Move X1, [X8+72]
	082 Call VisualElement.set_name, X0, X1
	083 Move X8, [X22]
	084 Move X0, X21
	085 Move X2, X31
	086 Move X8, [X8+184]
	087 Move X1, [X8+72]
	088 Call VisualElement.AddToClassList, X0, X1
	089 Move X0, [X19+80]
	090 Compare X0, 0
	091 JumpIfEqual {177}
	092 Move X1, X21
	093 Move X2, X31
	094 Call VisualElement.Add, X0, X1
	095 Move X0, [X23]
	096 Call 0x1C17F10
	097 Move X1, X31
	098 Move X21, X0
	099 Call VisualElement..ctor, X0
	100 Compare X21, 0
	101 JumpIfEqual {177}
	102 Move X8, [X22]
	103 Move X0, X21
	104 Move X2, X31
	105 Move X8, [X8+184]
	106 Move X1, [X8+72]
	107 Call VisualElement.set_name, X0, X1
	108 Move X8, [X22]
	109 Move X0, X21
	110 Move X2, X31
	111 Move X8, [X8+184]
	112 Move X1, [X8+72]
	113 Call VisualElement.AddToClassList, X0, X1
	114 Move X0, [X19+80]
	115 Compare X0, 0
	116 JumpIfEqual {177}
	117 Move X1, X21
	118 Move X2, X31
	119 Call VisualElement.Add, X0, X1
	120 Move X0, [X23]
	121 Call 0x1C17F10
	122 Move X1, X31
	123 Move X21, X0
	124 Call VisualElement..ctor, X0
	125 Compare X21, 0
	126 JumpIfEqual {177}
	127 Move X8, [X22]
	128 Move X0, X21
	129 Move X2, X31
	130 Move X8, [X8+184]
	131 Move X1, [X8+56]
	132 Call VisualElement.set_name, X0, X1
	133 Move [X19+88], X21
	134 Move X8, [X22]
	135 Move X0, X21
	136 Move X2, X31
	137 Move X8, [X8+184]
	138 Move X1, [X8+56]
	139 Call VisualElement.AddToClassList, X0, X1
	140 Move X0, [X19+88]
	141 Compare X0, 0
	142 JumpIfEqual {177}
	143 Move X1, X20
	144 Move X2, X31
	145 Call VisualElement.Add, X0, X1
	146 Move X0, [X19+72]
	147 Compare X0, 0
	148 JumpIfEqual {177}
	149 Move X1, [X19+80]
	150 Move X2, X31
	151 Call VisualElement.Add, X0, X1
	152 Move X0, [X19+72]
	153 Compare X0, 0
	154 JumpIfEqual {177}
	155 Move X1, [X19+88]
	156 Move X20, [X31+32]
	157 Move X19, [X31+40]
	158 Move X22, [X31+16]
	159 Move X21, [X31+24]
	160 Move X2, X31
	161 Move X30, [X31+48]
	162 Move X23, [X31+56]
	163 Call VisualElement.Add, X0, X1
	164 Return 
	165 Compare X0, 0
	166 JumpIfEqual {170}
	167 Move X1, X31
	168 Call VisualElement.RemoveFromHierarchy, X0
	169 Move [X19+72], X31
	170 Move X20, [X31+32]
	171 Move X19, [X31+40]
	172 Move X22, [X31+16]
	173 Move X21, [X31+24]
	174 Move X30, [X31+48]
	175 Move X23, [X31+56]
	176 Return 
	177 Call 0x1C17F20

Method: System.Void UpdateDragHandle(System.Boolean needsDragHandle)

Disassembly:
	0x03CF08A4 CBZ X8, 0x3CF08B8
	0x03CF08A8 LDR X4, [X8 + 0x18]
	0x03CF08AC LDR X0, [X8 + 0x40]
	0x03CF08B0 LDR X3, [X8 + 0x28]
	0x03CF08B4 BR X4
	0x03CF08B8 RET
	0x03CF08BC SUB X31, X31, 0x40
	0x03CF08C0 STR X30, [X31 + 0x10]
	0x03CF08C4 STP X22, X21, [X31 + 0x20]
	0x03CF08C8 STP X20, X19, [X31 + 0x30]
	0x03CF08CC ADRP X22, 0x6F7000
	0x03CF08D0 ADRP X21, 0x42D000
	0x03CF08D4 LDRB W8, [X22 + 0x76C]
	0x03CF08D8 LDR X21, [X21 + 0x8E0]
	0x03CF08DC MOV W20, W1
	0x03CF08E0 MOV X19, X0
	0x03CF08E4 TBNZ X8, 0x0, 0x3CF0920
	0x03CF08E8 ADRP X0, 0x472000
	0x03CF08EC LDR X0, [X0 + 0xAE0]
	0x03CF08F0 BL 0x1C16CF4
	0x03CF08F4 ADRP X0, 0x42D000
	0x03CF08F8 LDR X0, [X0 + 0x8E0]
	0x03CF08FC BL 0x1C16CF4
	0x03CF0900 ADRP X0, 0x404000
	0x03CF0904 LDR X0, [X0 + 0xE10]
	0x03CF0908 BL 0x1C16CF4
	0x03CF090C ADRP X0, 0x472000
	0x03CF0910 LDR X0, [X0 + 0xAE8]
	0x03CF0914 BL 0x1C16CF4
	0x03CF0918 MOVZ W8, 0x1
	0x03CF091C STRB W8, [X22 + 0x76C]
	0x03CF0920 LDR X0, [X21]
	0x03CF0924 STR X31, [X31 + 0x18]
	0x03CF0928 STP X31, X31, [X31]
	0x03CF092C ADRP X21, 0x472000
	0x03CF0930 LDR W8, [X0 + 0xE0]
	0x03CF0934 LDR X21, [X21 + 0xAE0]
	0x03CF0938 CBNZ W8, 0x3CF0940
	0x03CF093C BL 0x1C16DFC
	0x03CF0940 LDR X1, [X21]
	0x03CF0944 ADRP X21, 0x472000
	0x03CF0948 LDR X21, [X21 + 0xAE8]
	0x03CF094C ADD X0, X31, 0x18
	0x03CF0950 BL 0x28F94E0
	0x03CF0954 MOV X8, X1
	0x03CF0958 LDR X1, [X31 + 0x18]
	0x03CF095C STP X0, X8, [X31]
	0x03CF0960 CBZ X1, 0x3CF09F8
	0x03CF0964 ADRP X9, 0x404000
	0x03CF0968 LDR X9, [X9 + 0xE10]
	0x03CF096C LDR W10, [X1 + 0x1C]
	0x03CF0970 LDR X8, [X1 + 0x10]
	0x03CF0974 LDR X9, [X9]
	0x03CF0978 ADD W10, W10, 0x1
	0x03CF097C STR W10, [X1 + 0x1C]
	0x03CF0980 CBZ X8, 0x3CF09FC
	0x03CF0984 LDRSW X10, [X1 + 0x18]
	0x03CF0988 LDR W11, [X8 + 0x18]
	0x03CF098C CMP W10, W11
	0x03CF0990 B.CS 0x3CF09A8
	0x03CF0994 ADD W9, W10, 0x1
	0x03CF0998 ADD X8, X8, X10, 0x2, LSL
	0x03CF099C STR W9, [X1 + 0x18]
	0x03CF09A0 STR W20, [X8 + 0x20]
	0x03CF09A4 B 0x3CF09C4
	0x03CF09A8 LDR X8, [X9 + 0x20]
	0x03CF09AC LDR X8, [X8 + 0xC0]
	0x03CF09B0 LDR X2, [X8 + 0x70]
	0x03CF09B4 MOV X0, X1
	0x03CF09B8 MOV W1, W20
	0x03CF09BC BL 0x2FDC70C
	0x03CF09C0 LDR X1, [X31 + 0x18]
	0x03CF09C4 LDR X8, [X19]
	0x03CF09C8 LDR X9, [X8 + 0x2D8]
	0x03CF09CC LDR X2, [X8 + 0x2E0]
	0x03CF09D0 MOV X0, X19
	0x03CF09D4 BLR X9
	0x03CF09D8 LDR X1, [X21]
	0x03CF09DC ADD X0, X31, 0x0
	0x03CF09E0 BL 0x24A6D20
	0x03CF09E4 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6F8000
	006 Move W8, [X21+1971]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x473000
	014 Move X0, [X0+2712]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1971], W8
	018 Move X0, [X19+80]
	019 Move TEMP, X20
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {67}
	023 Compare X0, 0
	024 JumpIfEqual {110}
	025 Move X1, X31
	026 Call VisualElement.get_parent, X0
	027 Compare X0, 0
	028 JumpIfNotEqual {105}
	029 Move X8, [X19]
	030 Move X0, X19
	031 Move X9, [X8+376]
	032 Move X1, [X8+384]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Compare X0, 0
	035 JumpIfEqual {110}
	036 Move X2, [X19+80]
	037 Move W1, W31
	038 Move X3, X31
	039 Call VisualElement.Insert, X0, X1, X2
	040 Move X8, [X19]
	041 Move X0, X19
	042 Move X9, [X8+376]
	043 Move X1, [X8+384]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X20, 0x473000
	046 Move X20, [X20+2712]
	047 Move X19, X0
	048 Move X8, [X20]
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Compare X19, 0
	055 JumpIfEqual {110}
	056 Move X8, [X20]
	057 Move X0, X19
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X2, X31
	061 Move X8, [X8+184]
	062 Move X1, [X8+48]
	063 Move X30, [X31+32]
	064 Move X21, [X31+40]
	065 Call VisualElement.AddToClassList, X0, X1
	066 Return 
	067 Compare X0, 0
	068 JumpIfEqual {105}
	069 Move X1, X31
	070 Call VisualElement.get_parent, X0
	071 Compare X0, 0
	072 JumpIfEqual {105}
	073 Move X0, [X19+80]
	074 Compare X0, 0
	075 JumpIfEqual {110}
	076 Move X1, X31
	077 Call VisualElement.RemoveFromHierarchy, X0
	078 Move X8, [X19]
	079 Move X0, X19
	080 Move X9, [X8+376]
	081 Move X1, [X8+384]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X20, 0x473000
	084 Move X20, [X20+2712]
	085 Move X19, X0
	086 Move X8, [X20]
	087 Move W9, [X8+224]
	088 Compare W9, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Compare X19, 0
	093 JumpIfEqual {110}
	094 Move X8, [X20]
	095 Move X0, X19
	096 Move X20, [X31+16]
	097 Move X19, [X31+24]
	098 Move X2, X31
	099 Move X8, [X8+184]
	100 Move X1, [X8+48]
	101 Move X30, [X31+32]
	102 Move X21, [X31+40]
	103 Call VisualElement.RemoveFromClassList, X0, X1
	104 Return 
	105 Move X20, [X31+16]
	106 Move X19, [X31+24]
	107 Move X30, [X31+32]
	108 Move X21, [X31+40]
	109 Return 
	110 Call 0x1C17F20

Method: System.Void PreAttachElement()

Disassembly:
	0x03CF883C ADRP X20, 0x46A000
	0x03CF8840 ADRP X22, 0x46A000
	0x03CF8844 LDRB W8, [X24 + 0x7C4]
	0x03CF8848 LDR X20, [X20 + 0xCC8]
	0x03CF884C LDR X22, [X22 + 0xCD0]
	0x03CF8850 MOV X23, X2
	0x03CF8854 MOV X21, X1
	0x03CF8858 MOV X19, X0
	0x03CF885C TBNZ X8, 0x0, 0x3CF88D4
	0x03CF8860 ADRP X0, 0x3FB000
	0x03CF8864 LDR X0, [X0 + 0x970]
	0x03CF8868 BL 0x1C16CF4
	0x03CF886C ADRP X0, 0x46A000
	0x03CF8870 LDR X0, [X0 + 0xCD0]
	0x03CF8874 BL 0x1C16CF4
	0x03CF8878 ADRP X0, 0x46A000
	0x03CF887C LDR X0, [X0 + 0xCC8]
	0x03CF8880 BL 0x1C16CF4
	0x03CF8884 ADRP X0, 0x3FB000
	0x03CF8888 LDR X0, [X0 + 0xE00]
	0x03CF888C BL 0x1C16CF4
	0x03CF8890 ADRP X0, 0x46A000
	0x03CF8894 LDR X0, [X0 + 0xCD8]
	0x03CF8898 BL 0x1C16CF4
	0x03CF889C ADRP X0, 0x424000
	0x03CF88A0 LDR X0, [X0 + 0xE78]
	0x03CF88A4 BL 0x1C16CF4
	0x03CF88A8 ADRP X0, 0x46A000
	0x03CF88AC LDR X0, [X0 + 0xCE0]
	0x03CF88B0 BL 0x1C16CF4
	0x03CF88B4 ADRP X0, 0x423000
	0x03CF88B8 LDR X0, [X0 + 0x958]
	0x03CF88BC BL 0x1C16CF4
	0x03CF88C0 ADRP X0, 0x424000
	0x03CF88C4 LDR X0, [X0 + 0xE50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6F0000
	006 Move X20, 0x46B000
	007 Move W8, [X21+1972]
	008 Move X20, [X20+2712]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x46B000
	015 Move X0, [X0+2712]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1972], W8
	019 Move X0, X19
	020 Call ReusableCollectionItem.PreAttachElement, X0
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X9, [X8+376]
	024 Move X1, [X8+384]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X8, [X20]
	027 Move X19, X0
	028 Move W9, [X8+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X8
	032 Call 0x1C17DFC
	033 Compare X19, 0
	034 JumpIfEqual {46}
	035 Move X8, [X20]
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X2, X31
	040 Move X8, [X8+184]
	041 Move X1, [X8+16]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call VisualElement.AddToClassList, X0, X1
	045 Return 
	046 Call 0x1C17F20

Method: System.Void DetachElement()

Disassembly:
	0x03CF88C8 BL 0x1C16CF4
	0x03CF88CC MOVZ W8, 0x1
	0x03CF88D0 STRB W8, [X24 + 0x7C4]
	0x03CF88D4 LDR X0, [X20]
	0x03CF88D8 ADRP X24, 0x424000
	0x03CF88DC LDR X24, [X24 + 0xE78]
	0x03CF88E0 BL 0x1C16F10
	0x03CF88E4 MOV X1, X31
	0x03CF88E8 MOV X20, X0
	0x03CF88EC BL 0x3D9B124
	0x03CF88F0 LDR X0, [X22]
	0x03CF88F4 LDR W8, [X0 + 0xE0]
	0x03CF88F8 CBNZ W8, 0x3CF8900
	0x03CF88FC BL 0x1C16DFC
	0x03CF8900 ADRP X25, 0x3FB000
	0x03CF8904 LDR X25, [X25 + 0xE00]
	0x03CF8908 MOV X0, X21
	0x03CF890C MOV X1, X20
	0x03CF8910 MOV X2, X23
	0x03CF8914 MOV X3, X19
	0x03CF8918 MOV X4, X31
	0x03CF891C BL 0x3DA7C48
	0x03CF8920 LDR X1, [X24]
	0x03CF8924 MOV X20, X0
	0x03CF8928 MOV X0, X21
	0x03CF892C BL 0x1C16E00
	0x03CF8930 MOV X21, X0
	0x03CF8934 CBZ X0, 0x3CF8978
	0x03CF8938 LDR X8, [X21]
	0x03CF893C LDR X1, [X24]
	0x03CF8940 LDRH W9, [X8 + 0x12E]
	0x03CF8944 CBZ X9, 0x3CF8968
	0x03CF8948 LDR X10, [X8 + 0xB0]
	0x03CF894C ADD X10, X10, 0x8
	0x03CF8950 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6F0000
	006 Move X20, 0x46B000
	007 Move W8, [X21+1973]
	008 Move X20, [X20+2712]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x46B000
	015 Move X0, [X0+2712]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1973], W8
	019 Move X0, X19
	020 Call ReusableCollectionItem.DetachElement, X0
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X9, [X8+376]
	024 Move X1, [X8+384]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X8, [X20]
	027 Move X19, X0
	028 Move W9, [X8+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X8
	032 Call 0x1C17DFC
	033 Compare X19, 0
	034 JumpIfEqual {46}
	035 Move X8, [X20]
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X2, X31
	040 Move X8, [X8+184]
	041 Move X1, [X8+16]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call VisualElement.RemoveFromClassList, X0, X1
	045 Return 
	046 Call 0x1C17F20

Method: System.Void SetDragGhost(System.Boolean dragGhost)

Disassembly:
	0x03CF8954 CMP X11, X1
	0x03CF8958 B.EQ 0x3CF89A0
	0x03CF895C SUBS X9, X9, 0x1
	0x03CF8960 ADD X10, X10, 0x10
	0x03CF8964 B.NE 0x3CF8950
	0x03CF8968 MOV X0, X21
	0x03CF896C MOV W2, W31
	0x03CF8970 BL 0x1C5C788
	0x03CF8974 B 0x3CF89AC
	0x03CF8978 ADRP X21, 0x424000
	0x03CF897C LDR X21, [X21 + 0xE50]
	0x03CF8980 LDR X0, [X21]
	0x03CF8984 LDR W8, [X0 + 0xE0]
	0x03CF8988 CBNZ W8, 0x3CF8994
	0x03CF898C BL 0x1C16DFC
	0x03CF8990 LDR X0, [X21]
	0x03CF8994 LDR X8, [X0 + 0xB8]
	0x03CF8998 LDR W21, [X8 + 0x8]
	0x03CF899C B 0x3CF89BC
	0x03CF89A0 LDRSW X9, [X10]
	0x03CF89A4 ADD X8, X8, X9, 0x4, LSL
	0x03CF89A8 ADD X0, X8, 0x138
	0x03CF89AC LDP X8, X1, [X0]
	0x03CF89B0 MOV X0, X21
	0x03CF89B4 BLR X8
	0x03CF89B8 MOV W21, W0
	0x03CF89BC CBZ X20, 0x3CF8B4C
	0x03CF89C0 LDR W22, [X20 + 0xA4]
	0x03CF89C4 CBZ X23, 0x3CF8A10
	0x03CF89C8 ADRP X10, 0x46A000
	0x03CF89CC LDR X8, [X23]
	0x03CF89D0 LDR X10, [X10 + 0xCD8]
	0x03CF89D4 LDRH W9, [X8 + 0x12E]
	0x03CF89D8 LDR X1, [X10]
	0x03CF89DC CBZ X9, 0x3CF8A00
	0x03CF89E0 LDR X10, [X8 + 0xB0]
	0x03CF89E4 ADD X10, X10, 0x8
	0x03CF89E8 LDUR X11, [X10 - 0x8]
	0x03CF89EC CMP X11, X1
	0x03CF89F0 B.EQ 0x3CF8A18
	0x03CF89F4 SUBS X9, X9, 0x1
	0x03CF89F8 ADD X10, X10, 0x10
	0x03CF89FC B.NE 0x3CF89E8
	0x03CF8A00 MOV X0, X23
	0x03CF8A04 MOV W2, W31
	0x03CF8A08 BL 0x1C5C788
	0x03CF8A0C B 0x3CF8A24
	0x03CF8A10 MOVZ W24, 0x6
	0x03CF8A14 B 0x3CF8A40
	0x03CF8A18 LDRSW X9, [X10]
	0x03CF8A1C ADD X8, X8, X9, 0x4, LSL
	0x03CF8A20 ADD X0, X8, 0x138
	0x03CF8A24 LDP X8, X2, [X0]
	0x03CF8A28 MOV X0, X23
	0x03CF8A2C MOV X1, X20
	0x03CF8A30 BLR X8
	0x03CF8A34 MOV X23, X31
	0x03CF8A38 MOVZ W24, 0x6
	0x03CF8A3C CBZ X20, 0x3CF8A98
	0x03CF8A40 LDR X8, [X20]
	0x03CF8A44 LDR X1, [X25]
	0x03CF8A48 LDRH W9, [X8 + 0x12E]
	0x03CF8A4C CBZ X9, 0x3CF8A70

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6F0000
	006 Move W8, [X21+1974]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x425000
	014 Move X0, [X0+296]
	015 Call 0x1C17CF4
	016 Move X0, 0x426000
	017 Move X0, [X0+3856]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1974], W8
	021 And W1, W20, 1
	022 Move X0, X19
	023 Call ReusableCollectionItem.SetDragGhost, X0, X1
	024 Move X0, [X19+80]
	025 Compare X0, 0
	026 JumpIfEqual {55}
	027 Move X20, 0x426000
	028 Move X20, [X20+3856]
	029 Move X1, X31
	030 Call VisualElement.get_style, X0
	031 Move W8, [X19+40]
	032 Move X1, [X20]
	033 Move X19, X0
	034 Move W0, W8
	035 Call 0x266FACC, X0
	036 Compare X19, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x425000
	039 Move X8, [X19]
	040 Move X10, [X10+296]
	041 Move X20, X0
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move X1, [X10]
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move W2, 18
	053 Move X0, X19
	054 Call 0x1C5D788
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return 
	060 Move W9, [X10]
	061 Add W9, W9, 18
	062 Add X8, X8, W9
	063 Add X0, X8, 312
	064 Move X3, [X0]
	065 Move X2, [X0+8]
	066 Move X0, X19
	067 Move X1, X20
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 CallNoReturn X3
	073 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03CF8A50 LDR X10, [X8 + 0xB0]

ISIL:
	001 Call ReusableCollectionItem..ctor, X0
	002 Return 

