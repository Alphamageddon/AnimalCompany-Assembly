Type: UnityEngine.UIElements.CallbackEventHandler

Method: System.Void RegisterCallback(UnityEngine.UIElements.EventCallback`1<TEventType> callback, UnityEngine.UIElements.TrickleDown useTrickleDown = 0)

Disassembly:
	0x021A2534 LDRSW X9, [X10]
	0x021A2538 ADD X8, X8, X9, 0x4, LSL
	0x021A253C ADD X0, X8, 0x138
	0x021A2540 LDP X8, X1, [X0]
	0x021A2544 MOV X0, X20
	0x021A2548 BLR X8
	0x021A254C LDR X8, [X19 + 0x38]
	0x021A2550 MOV W24, W0
	0x021A2554 LDR X1, [X8 + 0x10]
	0x021A2558 LDRB W8, [X1 + 0x135]
	0x021A255C TBNZ X8, 0x0, 0x21A256C
	0x021A2560 MOV X0, X1
	0x021A2564 BL 0x1C5C684
	0x021A2568 MOV X1, X0
	0x021A256C LDR X8, [X20]
	0x021A2570 LDRH W9, [X8 + 0x12E]
	0x021A2574 CBZ X9, 0x21A2598
	0x021A2578 LDR X10, [X8 + 0xB0]
	0x021A257C ADD X10, X10, 0x8
	0x021A2580 LDUR X11, [X10 - 0x8]
	0x021A2584 CMP X11, X1
	0x021A2588 B.EQ 0x21A25A8
	0x021A258C SUBS X9, X9, 0x1
	0x021A2590 ADD X10, X10, 0x10
	0x021A2594 B.NE 0x21A2580
	0x021A2598 MOV X0, X20
	0x021A259C MOV W2, W31
	0x021A25A0 BL 0x1C5C788
	0x021A25A4 B 0x21A25B4
	0x021A25A8 LDRSW X9, [X10]
	0x021A25AC ADD X8, X8, X9, 0x4, LSL
	0x021A25B0 ADD X0, X8, 0x138
	0x021A25B4 LDP X8, X1, [X0]
	0x021A25B8 MOV X0, X20
	0x021A25BC STUR X25, [X29 - 0x18]
	0x021A25C0 BLR X8
	0x021A25C4 MOV X20, X0
	0x021A25C8 CBZ X0, 0x21A282C
	0x021A25CC ADRP X27, 0x1F51000
	0x021A25D0 LDR X27, [X27 + 0xE18]
	0x021A25D4 MOV W28, W31
	0x021A25D8 SUB W26, W24, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+56]
	008 Move X19, X3
	009 Move W21, W2
	010 Move X22, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {22}
	014 Move X0, 0x1F7A000
	015 Move X0, [X0+2208]
	016 Call 0x1C17CF4
	017 Move X8, [X19+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {22}
	020 Move X0, X19
	021 Call 0x1C5D6E0
	022 Move X23, [X20+24]
	023 Compare X23, 0
	024 JumpIfNotEqual {33}
	025 Move X8, 0x1F7A000
	026 Move X8, [X8+2208]
	027 Move X0, [X8]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X23, X0
	031 Call EventCallbackRegistry..ctor, X0
	032 Move [X20+24], X23
	033 Compare X23, 0
	034 JumpIfEqual {53}
	035 Move X8, [X19+56]
	036 Move X0, X23
	037 Move X1, X22
	038 Move W2, W21
	039 Move X4, [X8+8]
	040 Move W3, W31
	041 Call 0x21DD870, X0, X1, X2, X3
	042 Move X8, [X19+56]
	043 Move X0, X20
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X1, [X8+16]
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call 0x21A2454, X0
	052 Return 
	053 Call 0x1C17F20

Method: System.Void AddEventCategories()

Disassembly:
	0x021A2454 BL 0x1C16CF4
	0x021A2458 LDR X8, [X19 + 0x38]
	0x021A245C CBNZ X8, 0x21A246C
	0x021A2460 MOV X0, X19
	0x021A2464 BL 0x1C5C6E0
	0x021A2468 LDR X8, [X19 + 0x38]
	0x021A246C LDR X8, [X8 + 0x30]
	0x021A2470 LDR W21, [X8 + 0xFC]
	0x021A2474 ADD X8, X31, 0x0
	0x021A2478 ADD X9, X21, 0xF
	0x021A247C AND X9, X9, 0x1FFFFFFFF
	0x021A2480 SUB X22, X8, X9
	0x021A2484 ADD X31, X22, 0x0
	0x021A2488 ADD X8, X31, 0x0
	0x021A248C SUB X23, X8, X9
	0x021A2490 ADD X31, X23, 0x0
	0x021A2494 MOV X0, X23
	0x021A2498 MOV W1, W31
	0x021A249C MOV X2, X21
	0x021A24A0 BL 0x3EB1B10
	0x021A24A4 ADRP X24, 0x1F79000
	0x021A24A8 LDR X24, [X24 + 0x8B8]
	0x021A24AC LDR X0, [X24]
	0x021A24B0 LDR W8, [X0 + 0xE0]
	0x021A24B4 CBNZ W8, 0x21A24C0
	0x021A24B8 BL 0x1C16DFC
	0x021A24BC LDR X0, [X24]
	0x021A24C0 LDR X8, [X0 + 0xB8]
	0x021A24C4 LDR X0, [X8]
	0x021A24C8 CBZ X0, 0x21A2828
	0x021A24CC MOV W1, W31
	0x021A24D0 MOV X2, X31
	0x021A24D4 BL 0x3232ADC
	0x021A24D8 CBZ X20, 0x21A2828
	0x021A24DC LDR X8, [X19 + 0x38]
	0x021A24E0 LDR X1, [X8]
	0x021A24E4 LDRB W8, [X1 + 0x135]
	0x021A24E8 TBNZ X8, 0x0, 0x21A24F8
	0x021A24EC MOV X0, X1
	0x021A24F0 BL 0x1C5C684
	0x021A24F4 MOV X1, X0
	0x021A24F8 LDR X8, [X20]
	0x021A24FC LDRH W9, [X8 + 0x12E]
	0x021A2500 CBZ X9, 0x21A2524
	0x021A2504 LDR X10, [X8 + 0xB0]
	0x021A2508 ADD X10, X10, 0x8
	0x021A250C LDUR X11, [X10 - 0x8]
	0x021A2510 CMP X11, X1
	0x021A2514 B.EQ 0x21A2534
	0x021A2518 SUBS X9, X9, 0x1
	0x021A251C ADD X10, X10, 0x10
	0x021A2520 B.NE 0x21A250C
	0x021A2524 MOV X0, X20
	0x021A2528 MOV W2, W31
	0x021A252C BL 0x1C5C788
	0x021A2530 B 0x21A2540

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {16}
	010 Move X0, 0x1F7A000
	011 Move X0, [X0+2200]
	012 Call 0x1C17CF4
	013 Move X8, [X19+56]
	014 Compare X8, 0
	015 JumpIfEqual {66}
	016 Compare X20, 0
	017 JumpIfEqual {70}
	018 Move X8, 0x1F7A000
	019 Move X8, [X8+2200]
	020 Move X9, [X20]
	021 Move X8, [X8]
	022 Move W11, [X9+304]
	023 Move W10, [X8+304]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X9, [X9+200]
	026 Add X9, X9, X10
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Compare X20, 0
	031 JumpIfEqual {70}
	032 Move X8, [X19+56]
	033 Move W21, [X20+872]
	034 Move X0, [X8+8]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X8, [X19+56]
	046 Move X0, [X8+8]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+184]
	054 Move X0, X20
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move W9, 1
	058 Move W8, [X8+16]
	059 Move X2, X31
	060 NotImplemented "Instruction LSLV not yet implemented."
	061 Or W1, W8, W21
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Call VisualElement.set_eventCallbackCategories, X0, X1
	065 Return 
	066 Move X0, X19
	067 Call 0x1C5D6E0
	068 Compare X20, 0
	069 JumpIfNotEqual {18}
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Return 

Method: System.Void RegisterCallback(UnityEngine.UIElements.EventCallback`2<TEventType, TUserArgsType> callback, TUserArgsType userArgs, UnityEngine.UIElements.TrickleDown useTrickleDown = 0)

Disassembly:
	0x021A2690 BL 0x1C5C788
	0x021A2694 B 0x21A26A4
	0x021A2698 LDRSW X9, [X10]
	0x021A269C ADD X8, X8, X9, 0x4, LSL
	0x021A26A0 ADD X0, X8, 0x138
	0x021A26A4 STUR X22, [X29 - 0x10]
	0x021A26A8 LDR X1, [X0 + 0x8]
	0x021A26AC LDP X0, X8, [X1 + 0x8]
	0x021A26B0 SUB X3, X29, 0x10
	0x021A26B4 MOV X2, X20
	0x021A26B8 MOV X4, X22
	0x021A26BC BLR X8
	0x021A26C0 MOV X0, X23
	0x021A26C4 MOV X1, X22
	0x021A26C8 MOV X2, X21
	0x021A26CC BL 0x3EB1AC0
	0x021A26D0 LDR X0, [X24]
	0x021A26D4 LDR W8, [X0 + 0xE0]
	0x021A26D8 CBNZ W8, 0x21A26E4
	0x021A26DC BL 0x1C16DFC
	0x021A26E0 LDR X0, [X24]
	0x021A26E4 ADRP X9, 0x1F55000
	0x021A26E8 ADRP X10, 0x1F79000
	0x021A26EC LDR X8, [X0 + 0xB8]
	0x021A26F0 LDR X9, [X9 + 0x110]
	0x021A26F4 LDR X10, [X10 + 0x8C0]
	0x021A26F8 CMP W28, W26
	0x021A26FC LDR X25, [X8]
	0x021A2700 MOV X0, X22
	0x021A2704 CSEL X9, X9, X10, EQ
	0x021A2708 LDR X24, [X9]
	0x021A270C MOV X1, X23
	0x021A2710 MOV X2, X21
	0x021A2714 BL 0x3EB1AC0
	0x021A2718 LDR X8, [X19 + 0x38]
	0x021A271C LDR X0, [X8 + 0x30]
	0x021A2720 MOV X1, X22
	0x021A2724 BL 0x1C16E04
	0x021A2728 CBZ X25, 0x21A2824
	0x021A272C ADD W28, W28, 0x1
	0x021A2730 MOV X2, X0
	0x021A2734 MOV X0, X25
	0x021A2738 MOV X1, X24
	0x021A273C MOV X3, X31
	0x021A2740 BL 0x3234224
	0x021A2744 B 0x21A25DC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+56]
	009 Move X19, X4
	010 Move W21, W3
	011 Move X22, X2
	012 Move X23, X1
	013 Move X20, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {24}
	016 Move X0, 0x1F7A000
	017 Move X0, [X0+2208]
	018 Call 0x1C17CF4
	019 Move X8, [X19+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X19
	023 Call 0x1C5D6E0
	024 Move X24, [X20+24]
	025 Compare X24, 0
	026 JumpIfNotEqual {35}
	027 Move X8, 0x1F7A000
	028 Move X8, [X8+2208]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X24, X0
	033 Call EventCallbackRegistry..ctor, X0
	034 Move [X20+24], X24
	035 Compare X24, 0
	036 JumpIfEqual {57}
	037 Move X8, [X19+56]
	038 Move X0, X24
	039 Move X1, X23
	040 Move X2, X22
	041 Move X5, [X8+16]
	042 Move W3, W21
	043 Move W4, W31
	044 Call 0x21DD9D4, X0, X1, X2, X3, X4
	045 Move X8, [X19+56]
	046 Move X0, X20
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X1, [X8+24]
	052 Move X24, [X31+16]
	053 Move X23, [X31+24]
	054 Move X30, [X31+64]
	055 Call 0x21A2454, X0
	056 Return 
	057 Call 0x1C17F20

Method: System.Void RegisterCallback(UnityEngine.UIElements.EventCallback`1<TEventType> callback, UnityEngine.UIElements.InvokePolicy invokePolicy, UnityEngine.UIElements.TrickleDown useTrickleDown = 0)

Disassembly:
	0x021A25DC LDR X8, [X20]
	0x021A25E0 ADRP X24, 0x1F79000
	0x021A25E4 LDR X1, [X27]
	0x021A25E8 LDRH W9, [X8 + 0x12E]
	0x021A25EC LDR X24, [X24 + 0x8B8]
	0x021A25F0 CBZ X9, 0x21A2614
	0x021A25F4 LDR X10, [X8 + 0xB0]
	0x021A25F8 ADD X10, X10, 0x8
	0x021A25FC LDUR X11, [X10 - 0x8]
	0x021A2600 CMP X11, X1
	0x021A2604 B.EQ 0x21A2624
	0x021A2608 SUBS X9, X9, 0x1
	0x021A260C ADD X10, X10, 0x10
	0x021A2610 B.NE 0x21A25FC
	0x021A2614 MOV X0, X20
	0x021A2618 MOV W2, W31
	0x021A261C BL 0x1C5C788
	0x021A2620 B 0x21A2630
	0x021A2624 LDRSW X9, [X10]
	0x021A2628 ADD X8, X8, X9, 0x4, LSL
	0x021A262C ADD X0, X8, 0x138
	0x021A2630 LDP X8, X1, [X0]
	0x021A2634 MOV X0, X20
	0x021A2638 BLR X8
	0x021A263C TBZ X0, 0x0, 0x21A2748
	0x021A2640 LDR X8, [X19 + 0x38]
	0x021A2644 LDR X1, [X8 + 0x20]
	0x021A2648 LDRB W8, [X1 + 0x135]
	0x021A264C TBNZ X8, 0x0, 0x21A265C
	0x021A2650 MOV X0, X1
	0x021A2654 BL 0x1C5C684
	0x021A2658 MOV X1, X0
	0x021A265C LDR X8, [X20]
	0x021A2660 LDRH W9, [X8 + 0x12E]
	0x021A2664 CBZ X9, 0x21A2688
	0x021A2668 LDR X10, [X8 + 0xB0]
	0x021A266C ADD X10, X10, 0x8
	0x021A2670 LDUR X11, [X10 - 0x8]
	0x021A2674 CMP X11, X1
	0x021A2678 B.EQ 0x21A2698
	0x021A267C SUBS X9, X9, 0x1
	0x021A2680 ADD X10, X10, 0x10
	0x021A2684 B.NE 0x21A2670
	0x021A2688 MOV X0, X20
	0x021A268C MOV W2, W31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+56]
	009 Move X19, X4
	010 Move W22, W3
	011 Move W21, W2
	012 Move X23, X1
	013 Move X20, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {24}
	016 Move X0, 0x1F7A000
	017 Move X0, [X0+2208]
	018 Call 0x1C17CF4
	019 Move X8, [X19+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X19
	023 Call 0x1C5D6E0
	024 Move X24, [X20+24]
	025 Compare X24, 0
	026 JumpIfNotEqual {35}
	027 Move X8, 0x1F7A000
	028 Move X8, [X8+2208]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X24, X0
	033 Call EventCallbackRegistry..ctor, X0
	034 Move [X20+24], X24
	035 Compare X24, 0
	036 JumpIfEqual {56}
	037 Move X8, [X19+56]
	038 Move X0, X24
	039 Move X1, X23
	040 Move W2, W22
	041 Move X4, [X8+8]
	042 Move W3, W21
	043 Call 0x21DD870, X0, X1, X2, X3
	044 Move X8, [X19+56]
	045 Move X0, X20
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X1, [X8+16]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Call 0x21A2454, X0
	055 Return 
	056 Call 0x1C17F20

Method: System.Void UnregisterCallback(UnityEngine.UIElements.EventCallback`1<TEventType> callback, UnityEngine.UIElements.TrickleDown useTrickleDown = 0)

Disassembly:
	0x021A28B4 ADD X10, X10, 0x8
	0x021A28B8 LDUR X11, [X10 - 0x8]
	0x021A28BC CMP X11, X1
	0x021A28C0 B.EQ 0x21A28E0
	0x021A28C4 SUBS X9, X9, 0x1
	0x021A28C8 ADD X10, X10, 0x10
	0x021A28CC B.NE 0x21A28B8
	0x021A28D0 MOV X0, X20
	0x021A28D4 MOV W2, W31
	0x021A28D8 BL 0x1C5C788
	0x021A28DC B 0x21A28EC
	0x021A28E0 LDRSW X9, [X10]
	0x021A28E4 ADD X8, X8, X9, 0x4, LSL
	0x021A28E8 ADD X0, X8, 0x138
	0x021A28EC LDP X8, X1, [X0]
	0x021A28F0 MOV X0, X20
	0x021A28F4 BLR X8
	0x021A28F8 CBNZ X19, 0x21A2904
	0x021A28FC MOV X0, X21
	0x021A2900 BL 0x1D2C690
	0x021A2904 MOV X0, X19
	0x021A2908 BL 0x1C16F18
	0x021A290C BL 0x1990590
	0x021A2910 SUB X31, X31, 0x60
	0x021A2914 STP X30, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X21, X3
	008 Move W19, W2
	009 Move X20, X1
	010 Move X22, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X21
	014 Call 0x1C5D6E0
	015 Move X0, [X22+24]
	016 Compare X0, 0
	017 JumpIfEqual {29}
	018 Move X8, [X21+56]
	019 Move X1, X20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X3, [X8+8]
	024 Move X22, [X31+16]
	025 Move X21, [X31+24]
	026 Move X30, [X31+48]
	027 Call 0x21DDE20, X0, X1, X2
	028 Return 
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Return 

Method: System.Void SendEvent(UnityEngine.UIElements.EventBase e)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void SendEvent(UnityEngine.UIElements.EventBase e, UnityEngine.UIElements.DispatchMode dispatchMode)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void HandleEventAtTargetPhase(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03DA2608 LDR X1, [X28]
	0x03DA260C LDR X26, [X26 + 0xD98]
	0x03DA2610 LDR X25, [X25 + 0xD90]
	0x03DA2614 BL 0x301CB58
	0x03DA2618 LDUR V0, [X31 + 0x8]
	0x03DA261C LDR X8, [X31 + 0x18]
	0x03DA2620 STR V0, [X31 + 0x6]
	0x03DA2624 STR X8, [X31 + 0x70]
	0x03DA2628 LDR X1, [X26]
	0x03DA262C ADD X0, X31, 0x60
	0x03DA2630 BL 0x2BC4350
	0x03DA2634 TBZ X0, 0x0, 0x3DA2704
	0x03DA2638 LDR X22, [X31 + 0x70]
	0x03DA263C MOV X0, X19
	0x03DA2640 MOV X1, X22
	0x03DA2644 BL 0x3D9D8F8
	0x03DA2648 TBNZ X0, 0x0, 0x3DA2628
	0x03DA264C CBZ X22, 0x3DA2980
	0x03DA2650 MOV X0, X22
	0x03DA2654 MOV X1, X31
	0x03DA2658 BL 0x3DEC0CC
	0x03DA265C CMP X0, X20
	0x03DA2660 B.NE 0x3DA2628
	0x03DA2664 LDR X8, [X19 + 0x48]
	0x03DA2668 STR X22, [X19 + 0x50]
	0x03DA266C CBNZ X8, 0x3DA2674
	0x03DA2670 STR X22, [X19 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {33}
	006 Move X8, [X1]
	007 Move X19, X1
	008 Move X1, [X1+80]
	009 Move X20, X0
	010 Move X9, [X8+488]
	011 Move X2, [X8+496]
	012 Move X0, X19
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move W8, 2
	015 Move [X19+96], W8
	016 Move X8, [X20]
	017 Move X0, X20
	018 Move X1, X19
	019 Move X9, [X8+440]
	020 Move X2, [X8+448]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move W8, 5
	023 Move [X19+96], W8
	024 Move X8, [X20]
	025 Move X0, X20
	026 Move X1, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X3, [X8+440]
	030 Move X2, [X8+448]
	031 Move X30, [X31+32]
	032 CallNoReturn X3
	033 Call 0x1C17F20

Method: System.Void HandleEventAtTargetAndDefaultPhase(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03DA2680 MOV X1, X22
	0x03DA2684 BLR X9
	0x03DA2688 LDR X8, [X19]
	0x03DA268C LDP X9, X1, [X8 + 0x1D8]
	0x03DA2690 MOV X0, X19
	0x03DA2694 BLR X9
	0x03DA2698 MOV X22, X0
	0x03DA269C CBZ X0, 0x3DA2990
	0x03DA26A0 LDR X8, [X22]
	0x03DA26A4 LDR X1, [X24]
	0x03DA26A8 LDRH W9, [X8 + 0x12E]
	0x03DA26AC CBZ X9, 0x3DA26D0
	0x03DA26B0 LDR X10, [X8 + 0xB0]
	0x03DA26B4 ADD X10, X10, 0x8
	0x03DA26B8 LDUR X11, [X10 - 0x8]
	0x03DA26BC CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call CallbackEventHandler.HandleEventAtTargetPhase, X0, X1
	007 Compare X19, 0
	008 JumpIfEqual {20}
	009 Move W8, 4
	010 Move [X19+96], W8
	011 Move X8, [X20]
	012 Move X0, X20
	013 Move X1, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X3, [X8+440]
	017 Move X2, [X8+448]
	018 Move X30, [X31+32]
	019 CallNoReturn X3
	020 Call 0x1C17F20

Method: System.Void HandleEventAtCurrentTargetAndPhase(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03DA2674 LDR X8, [X19]
	0x03DA2678 LDP X9, X2, [X8 + 0x1E8]
	0x03DA267C MOV X0, X19

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+440]
	003 Move X2, [X8+448]
	004 CallNoReturn X3

Method: System.Void UnityEngine.UIElements.IEventHandler.HandleEvent(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03DA26C0 B.EQ 0x3DA26E0
	0x03DA26C4 SUBS X9, X9, 0x1
	0x03DA26C8 ADD X10, X10, 0x10

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+440]
	003 Move X2, [X8+448]
	004 CallNoReturn X3

Method: System.Void HandleEvent(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03DA26CC B.NE 0x3DA26B8
	0x03DA26D0 MOVZ W2, 0x1
	0x03DA26D4 MOV X0, X22
	0x03DA26D8 BL 0x1C5C788
	0x03DA26DC B 0x3DA26F0
	0x03DA26E0 LDR W9, [X10]
	0x03DA26E4 ADD W9, W9, 0x1
	0x03DA26E8 ADD X8, X8, W9, 0x4, SXTW
	0x03DA26EC ADD X0, X8, 0x138
	0x03DA26F0 LDP X8, X2, [X0]
	0x03DA26F4 MOV X0, X22
	0x03DA26F8 MOV X1, X19
	0x03DA26FC BLR X8
	0x03DA2700 B 0x3DA2628
	0x03DA2704 LDR X1, [X25]
	0x03DA2708 ADD X0, X31, 0x60
	0x03DA270C BL 0x2BC434C
	0x03DA2710 MOVZ W8, 0x5
	0x03DA2714 STR W8, [X27]
	0x03DA2718 LDR X0, [X21 + 0x18]
	0x03DA271C CBZ X0, 0x3DA2988
	0x03DA2720 LDR X1, [X28]
	0x03DA2724 ADD X8, X31, 0x8
	0x03DA2728 BL 0x301CB58
	0x03DA272C LDUR V0, [X31 + 0x8]
	0x03DA2730 LDR X8, [X31 + 0x18]
	0x03DA2734 STR V0, [X31 + 0x4]
	0x03DA2738 STR X8, [X31 + 0x50]
	0x03DA273C LDR X1, [X26]
	0x03DA2740 ADD X0, X31, 0x40
	0x03DA2744 BL 0x2BC4350
	0x03DA2748 TBZ X0, 0x0, 0x3DA2818
	0x03DA274C LDR X22, [X31 + 0x50]
	0x03DA2750 MOV X0, X19
	0x03DA2754 MOV X1, X22
	0x03DA2758 BL 0x3D9D8F8
	0x03DA275C TBNZ X0, 0x0, 0x3DA273C
	0x03DA2760 CBZ X22, 0x3DA2984
	0x03DA2764 MOV X0, X22
	0x03DA2768 MOV X1, X31
	0x03DA276C BL 0x3DEC0CC
	0x03DA2770 CMP X0, X20
	0x03DA2774 B.NE 0x3DA273C
	0x03DA2778 LDR X8, [X19 + 0x48]
	0x03DA277C STR X22, [X19 + 0x50]
	0x03DA2780 CBNZ X8, 0x3DA2788
	0x03DA2784 STR X22, [X19 + 0x48]
	0x03DA2788 LDR X8, [X19]
	0x03DA278C LDP X9, X2, [X8 + 0x1E8]
	0x03DA2790 MOV X0, X19
	0x03DA2794 MOV X1, X22
	0x03DA2798 BLR X9
	0x03DA279C LDR X8, [X19]
	0x03DA27A0 LDP X9, X1, [X8 + 0x1D8]
	0x03DA27A4 MOV X0, X19
	0x03DA27A8 BLR X9
	0x03DA27AC MOV X22, X0
	0x03DA27B0 CBZ X0, 0x3DA2994
	0x03DA27B4 LDR X8, [X22]
	0x03DA27B8 LDR X1, [X24]
	0x03DA27BC LDRH W9, [X8 + 0x12E]
	0x03DA27C0 CBZ X9, 0x3DA27E4
	0x03DA27C4 LDR X10, [X8 + 0xB0]
	0x03DA27C8 ADD X10, X10, 0x8
	0x03DA27CC LDUR X11, [X10 - 0x8]
	0x03DA27D0 CMP X11, X1
	0x03DA27D4 B.EQ 0x3DA27F4
	0x03DA27D8 SUBS X9, X9, 0x1
	0x03DA27DC ADD X10, X10, 0x10
	0x03DA27E0 B.NE 0x3DA27CC
	0x03DA27E4 MOVZ W2, 0x1
	0x03DA27E8 MOV X0, X22
	0x03DA27EC BL 0x1C5C788
	0x03DA27F0 B 0x3DA2804
	0x03DA27F4 LDR W9, [X10]
	0x03DA27F8 ADD W9, W9, 0x1
	0x03DA27FC ADD X8, X8, W9, 0x4, SXTW
	0x03DA2800 ADD X0, X8, 0x138
	0x03DA2804 LDP X8, X2, [X0]
	0x03DA2808 MOV X0, X22
	0x03DA280C MOV X1, X19
	0x03DA2810 BLR X8
	0x03DA2814 B 0x3DA273C
	0x03DA2818 LDR X1, [X25]
	0x03DA281C ADD X0, X31, 0x40
	0x03DA2820 BL 0x2BC434C
	0x03DA2824 LDR X8, [X19 + 0x48]
	0x03DA2828 LDRB W9, [X19 + 0x30]
	0x03DA282C STR X8, [X19 + 0x50]
	0x03DA2830 TBZ X9, 0x0, 0x3DA2938
	0x03DA2834 MOVZ W8, 0x3
	0x03DA2838 STR W8, [X27]
	0x03DA283C LDR X0, [X21 + 0x20]
	0x03DA2840 CBZ X0, 0x3DA2988
	0x03DA2844 LDR X1, [X28]
	0x03DA2848 ADD X8, X31, 0x8
	0x03DA284C BL 0x301CB58
	0x03DA2850 LDUR V0, [X31 + 0x8]
	0x03DA2854 LDR X8, [X31 + 0x18]
	0x03DA2858 STR V0, [X31 + 0x2]
	0x03DA285C STR X8, [X31 + 0x30]
	0x03DA2860 LDR X1, [X26]
	0x03DA2864 ADD X0, X31, 0x20
	0x03DA2868 BL 0x2BC4350
	0x03DA286C TBZ X0, 0x0, 0x3DA292C
	0x03DA2870 LDR X21, [X31 + 0x30]
	0x03DA2874 MOV X0, X19
	0x03DA2878 MOV X1, X21
	0x03DA287C BL 0x3D9D8F8
	0x03DA2880 TBNZ X0, 0x0, 0x3DA2860
	0x03DA2884 CBZ X21, 0x3DA298C
	0x03DA2888 MOV X0, X21
	0x03DA288C MOV X1, X31
	0x03DA2890 BL 0x3DEC0CC
	0x03DA2894 CMP X0, X20
	0x03DA2898 B.NE 0x3DA2860
	0x03DA289C LDR X8, [X19]
	0x03DA28A0 LDP X9, X2, [X8 + 0x1E8]
	0x03DA28A4 MOV X0, X19
	0x03DA28A8 MOV X1, X21
	0x03DA28AC BLR X9
	0x03DA28B0 LDR X8, [X19]
	0x03DA28B4 LDP X9, X1, [X8 + 0x1D8]
	0x03DA28B8 MOV X0, X19
	0x03DA28BC BLR X9
	0x03DA28C0 MOV X21, X0
	0x03DA28C4 CBZ X0, 0x3DA2998
	0x03DA28C8 LDR X8, [X21]
	0x03DA28CC LDR X1, [X24]
	0x03DA28D0 LDRH W9, [X8 + 0x12E]
	0x03DA28D4 CBZ X9, 0x3DA28F8
	0x03DA28D8 LDR X10, [X8 + 0xB0]
	0x03DA28DC ADD X10, X10, 0x8
	0x03DA28E0 LDUR X11, [X10 - 0x8]
	0x03DA28E4 CMP X11, X1
	0x03DA28E8 B.EQ 0x3DA2908
	0x03DA28EC SUBS X9, X9, 0x1
	0x03DA28F0 ADD X10, X10, 0x10
	0x03DA28F4 B.NE 0x3DA28E0
	0x03DA28F8 MOVZ W2, 0x1
	0x03DA28FC MOV X0, X21
	0x03DA2900 BL 0x1C5C788
	0x03DA2904 B 0x3DA2918
	0x03DA2908 LDR W9, [X10]
	0x03DA290C ADD W9, W9, 0x1
	0x03DA2910 ADD X8, X8, W9, 0x4, SXTW
	0x03DA2914 ADD X0, X8, 0x138
	0x03DA2918 LDP X8, X2, [X0]
	0x03DA291C MOV X0, X21
	0x03DA2920 MOV X1, X19
	0x03DA2924 BLR X8
	0x03DA2928 B 0x3DA2860
	0x03DA292C LDR X1, [X25]
	0x03DA2930 ADD X0, X31, 0x20
	0x03DA2934 BL 0x2BC434C
	0x03DA2938 LDR X8, [X19]
	0x03DA293C STR W31, [X19 + 0x60]
	0x03DA2940 MOV X0, X19
	0x03DA2944 MOV X1, X31
	0x03DA2948 LDP X9, X2, [X8 + 0x1E8]
	0x03DA294C BLR X9
	0x03DA2950 LDP X20, X19, [X31 + 0xD0]
	0x03DA2954 LDP X22, X21, [X31 + 0xC0]
	0x03DA2958 LDP X24, X23, [X31 + 0xB0]
	0x03DA295C LDP X26, X25, [X31 + 0xA0]
	0x03DA2960 LDP X28, X27, [X31 + 0x90]
	0x03DA2964 LDR X30, [X31 + 0x80]
	0x03DA2968 ADD X31, X31, 0xE0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x646000
	006 Move W8, [X21+3801]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x3C3000
	014 Move X0, [X0+192]
	015 Call 0x1C17CF4
	016 Move X0, 0x37A000
	017 Move X0, [X0+2200]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3801], W8
	021 Compare X19, 0
	022 JumpIfEqual {162}
	023 Move W2, [X19+96]
	024 Subtract W8, W2, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X9, -52465664
	027 Add X9, X9, 77
	028 NotImplemented "Instruction ADR not yet implemented."
	029 Move W11, [X9]
	030 Add X10, X10, X11
	031 CallNoReturn X10
	032 Move W8, [X19+64]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {98}
	037 Move X0, [X20+24]
	038 Compare X0, 0
	039 JumpIfNotEqual {96}
	040 Move W8, [X19+64]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 4
	043 Compare TEMP, 4
	044 JumpIfEqual {162}
	045 Move W8, [X19+48]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 8
	048 Compare TEMP, 8
	049 JumpIfNotEqual {70}
	050 Compare X20, 0
	051 JumpIfEqual {70}
	052 Move X8, 0x37A000
	053 Move X8, [X8+2200]
	054 Move X9, [X20]
	055 Move X8, [X8]
	056 Move W11, [X9+304]
	057 Move W10, [X8+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X9, [X9+200]
	060 Add X9, X9, X10
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X20
	064 Move X1, X31
	065 Call VisualElement.get_enabledInHierarchy, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {167}
	070 Move X8, [X20]
	071 Move X9, [X8+488]
	072 Move X2, [X8+496]
	073 Move X0, X20
	074 Move X1, X19
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move W8, [X19+64]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {88}
	081 Move X0, [X20+24]
	082 Compare X0, 0
	083 JumpIfEqual {88}
	084 Move W2, 1
	085 Move X1, X19
	086 Call EventCallbackRegistry.InvokeCallbacks, X0, X1, X2
	087 Move W8, [X19+64]
	088 Move TEMP, X8
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {98}
	092 Move X0, [X20+24]
	093 Compare X0, 0
	094 JumpIfEqual {98}
	095 Move W2, 3
	096 Move X1, X19
	097 Call EventCallbackRegistry.InvokeCallbacks, X0, X1, X2
	098 Move W8, [X20+16]
	099 Compare W8, 0
	100 JumpIfEqual {162}
	101 Move W8, [X19+64]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {162}
	106 Move X9, 0x3C3000
	107 Move X9, [X9+192]
	108 Move X8, [X20]
	109 Move X1, [X9]
	110 Move W10, [X8+304]
	111 Move W9, [X1+304]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X8, [X8+200]
	114 Add X8, X8, X9
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, X20
	118 Move X1, X19
	119 Move X20, [X31+16]
	120 Move X19, [X31+24]
	121 Move X2, X31
	122 Move X30, [X31+32]
	123 Move X21, [X31+40]
	124 Call IMGUIContainer.ProcessEvent, X0, X1
	125 Return 
	126 Move W8, [X19+64]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 4
	129 Compare TEMP, 4
	130 JumpIfEqual {162}
	131 Move W8, [X19+48]
	132 Move TEMP, X8
	133 And TEMP, TEMP, 8
	134 Compare TEMP, 8
	135 JumpIfNotEqual {156}
	136 Compare X20, 0
	137 JumpIfEqual {156}
	138 Move X8, 0x37A000
	139 Move X8, [X8+2200]
	140 Move X9, [X20]
	141 Move X8, [X8]
	142 Move W11, [X9+304]
	143 Move W10, [X8+304]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X9, [X9+200]
	146 Add X9, X9, X10
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X0, X20
	150 Move X1, X31
	151 Call VisualElement.get_enabledInHierarchy, X0
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {173}
	156 Move X8, [X20]
	157 Move X9, [X8+504]
	158 Move X2, [X8+512]
	159 Move X0, X20
	160 Move X1, X19
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X20, [X31+16]
	163 Move X19, [X31+24]
	164 Move X30, [X31+32]
	165 Move X21, [X31+40]
	166 Return 
	167 Move X8, [X20]
	168 Move X9, [X8+520]
	169 Move X2, [X8+528]
	170 Move X0, X20
	171 Move X1, X19
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X8, [X20]
	174 Move X9, [X8+536]
	175 Move X2, [X8+544]
	176 Move X0, X20
	177 Move X1, X19
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Move X0, X20
	180 Call 0x1C181E0
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Call 0x3EB2AD0
	183 Move X19, [X0]
	184 Call 0x3EB2AE0
	185 Compare X19, 0
	186 JumpIfEqual {199}
	187 Move X0, X19
	188 Call 0x1C17F18
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Call 0x3EB2AD0
	191 Move X19, [X0]
	192 Call 0x3EB2AE0
	193 Compare X19, 0
	194 JumpIfEqual {162}
	195 Move X0, X19
	196 Call 0x1C17F18
	197 Compare X19, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1D2D690
	200 Move X0, X19
	201 Call 0x1C17F18
	202 Call 0x1991590

Method: System.Boolean HasTrickleDownHandlers()

Disassembly:
	0x03DA296C RET
	0x03DA2970 MOVZ W8, 0x2
	0x03DA2974 MOV X27, X19
	0x03DA2978 STR W8, [X27 + 0x60]!
	0x03DA297C B 0x3DA25EC
	0x03DA2980 BL 0x1C16F20
	0x03DA2984 BL 0x1C16F20
	0x03DA2988 BL 0x1C16F20
	0x03DA298C BL 0x1C16F20
	0x03DA2990 BL 0x1C16F20

ISIL:
	001 Move X8, [X0+24]
	002 Compare X8, 0
	003 JumpIfEqual {11}
	004 Move X8, [X8+16]
	005 Compare X8, 0
	006 JumpIfEqual {11}
	007 Move W8, [X8+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Return X0
	011 Move W0, W31
	012 Return X0

Method: System.Boolean HasBubbleUpHandlers()

Disassembly:
	0x03DA2994 BL 0x1C16F20
	0x03DA2998 BL 0x1C16F20
	0x03DA299C MOV X0, X20
	0x03DA29A0 BL 0x1C171E0
	0x03DA29A4 B 0x3DA29F0
	0x03DA29A8 B 0x3DA29F0
	0x03DA29AC B 0x3DA29F0
	0x03DA29B0 B 0x3DA29F0
	0x03DA29B4 B 0x3DA2A50
	0x03DA29B8 B 0x3DA2A50

ISIL:
	001 Move X8, [X0+24]
	002 Compare X8, 0
	003 JumpIfEqual {11}
	004 Move X8, [X8+16]
	005 Compare X8, 0
	006 JumpIfEqual {11}
	007 Move W8, [X8+28]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Return X0
	011 Move W0, W31
	012 Return X0

Method: System.Void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03DA29BC B 0x3DA2A50

ISIL:
	001 Return 

Method: System.Void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03DA29C0 B 0x3DA2AA4

ISIL:
	001 Return 

Method: System.Void ExecuteDefaultActionDisabledAtTarget(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03DA29C4 B 0x3DA2AA4

ISIL:
	001 Return 

Method: System.Void ExecuteDefaultActionDisabled(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03DA29C8 B 0x3DA2AA4

ISIL:
	001 Return 

Method: System.Void .ctor()

Disassembly:
	0x03DA29CC B 0x3DA29F0
	0x03DA29D0 B 0x3DA29F0
	0x03DA29D4 B 0x3DA2A50

ISIL:
	001 Move X1, X31
	002 Move [X0+16], W31
	003 Call Object..ctor, X0
	004 Return 

