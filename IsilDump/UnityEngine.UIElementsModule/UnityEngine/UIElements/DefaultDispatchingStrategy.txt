Type: UnityEngine.UIElements.DefaultDispatchingStrategy

Method: System.Boolean CanDispatchEvent(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03D9F308 CBNZ W9, 0x3D9F314
	0x03D9F30C MOV X0, X8
	0x03D9F310 BL 0x1C16DFC
	0x03D9F314 ADRP X8, 0x3C9000
	0x03D9F318 LDR X8, [X8 + 0x58]
	0x03D9F31C LDR X0, [X8]
	0x03D9F320 BL 0x2D0D5C8
	0x03D9F324 CMP X26, X0
	0x03D9F328 B.EQ 0x3D9F404
	0x03D9F32C LDR X8, [X25]
	0x03D9F330 MOV X0, X25
	0x03D9F334 LDP X9, X1, [X8 + 0x188]
	0x03D9F338 BLR X9
	0x03D9F33C ADRP X8, 0x3C9000
	0x03D9F340 LDR X8, [X8 + 0x68]
	0x03D9F344 MOV X26, X0
	0x03D9F348 LDR X8, [X8]
	0x03D9F34C LDR W9, [X8 + 0xE0]
	0x03D9F350 CBNZ W9, 0x3D9F35C
	0x03D9F354 MOV X0, X8
	0x03D9F358 BL 0x1C16DFC
	0x03D9F35C ADRP X8, 0x3C9000
	0x03D9F360 LDR X8, [X8 + 0x50]
	0x03D9F364 LDR X0, [X8]
	0x03D9F368 BL 0x2D0D5C8
	0x03D9F36C CMP X26, X0
	0x03D9F370 B.EQ 0x3D9F404
	0x03D9F374 LDR X8, [X25]
	0x03D9F378 MOV X0, X25
	0x03D9F37C LDP X9, X1, [X8 + 0x188]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x649000
	005 Move W8, [X20+3770]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3CA000
	012 Move X0, [X0+40]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3770], W8
	016 Compare X19, 0
	017 JumpIfEqual {25}
	018 Move X8, 0x3CA000
	019 Move X8, [X8+40]
	020 Move X9, [X19]
	021 Move X8, [X8]
	022 Move W11, [X9+304]
	023 Move W10, [X8+304]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, 1
	026 Move X9, [X9+200]
	027 Add X9, X9, X10
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0

Method: System.Void DispatchEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel)

Disassembly:
	0x03D9F380 BLR X9
	0x03D9F384 ADRP X8, 0x3C3000
	0x03D9F388 LDR X8, [X8 + 0xDA0]
	0x03D9F38C MOV X26, X0
	0x03D9F390 LDR X8, [X8]
	0x03D9F394 LDR W9, [X8 + 0xE0]
	0x03D9F398 CBNZ W9, 0x3D9F3A4
	0x03D9F39C MOV X0, X8
	0x03D9F3A0 BL 0x1C16DFC
	0x03D9F3A4 ADRP X8, 0x3C3000
	0x03D9F3A8 LDR X8, [X8 + 0xD88]
	0x03D9F3AC LDR X0, [X8]
	0x03D9F3B0 BL 0x2D0D5C8
	0x03D9F3B4 CMP X26, X0
	0x03D9F3B8 B.EQ 0x3D9F404
	0x03D9F3BC LDR X8, [X25]
	0x03D9F3C0 MOV X0, X25
	0x03D9F3C4 LDP X9, X1, [X8 + 0x188]
	0x03D9F3C8 BLR X9
	0x03D9F3CC ADRP X8, 0x3C9000
	0x03D9F3D0 LDR X8, [X8 + 0x70]
	0x03D9F3D4 MOV X26, X0
	0x03D9F3D8 LDR X8, [X8]
	0x03D9F3DC LDR W9, [X8 + 0xE0]
	0x03D9F3E0 CBNZ W9, 0x3D9F3EC
	0x03D9F3E4 MOV X0, X8
	0x03D9F3E8 BL 0x1C16DFC
	0x03D9F3EC ADRP X8, 0x3C9000
	0x03D9F3F0 LDR X8, [X8 + 0x60]
	0x03D9F3F4 LDR X0, [X8]
	0x03D9F3F8 BL 0x2D0D5C8
	0x03D9F3FC CMP X26, X0
	0x03D9F400 B.NE 0x3D9F50C
	0x03D9F404 ADD X0, X31, 0x18
	0x03D9F408 MOV X1, X20
	0x03D9F40C BL 0x3D9B238
	0x03D9F410 MOV X0, X23
	0x03D9F414 MOV X1, X24
	0x03D9F418 MOV X2, X25
	0x03D9F41C MOV V0.16B, V8.16B
	0x03D9F420 MOV V1.16B, V9.16B
	0x03D9F424 BL 0x3D9FC44
	0x03D9F428 ADRP X8, 0x3C9000
	0x03D9F42C LDR X8, [X8 + 0x80]
	0x03D9F430 LDR X3, [X8]
	0x03D9F434 MOV X0, X23
	0x03D9F438 MOV X1, X24
	0x03D9F43C MOV X2, X25
	0x03D9F440 MOV V0.16B, V8.16B
	0x03D9F444 MOV V1.16B, V9.16B
	0x03D9F448 BL 0x221FA20
	0x03D9F44C MOV X23, X31
	0x03D9F450 MOVZ W19, 0x19
	0x03D9F454 LDR X0, [X31 + 0x18]
	0x03D9F458 CBZ X0, 0x3D9F780
	0x03D9F45C BL 0x3D9B2C8
	0x03D9F460 CBNZ X23, 0x3D9F798
	0x03D9F464 CBZ W19, 0x3D9F470
	0x03D9F468 CMP W19, 0x19
	0x03D9F46C B.NE 0x3D9F758
	0x03D9F470 LDR X8, [X21 + 0x28]
	0x03D9F474 CBZ X8, 0x3D9F780
	0x03D9F478 LDR W9, [X8 + 0x18]
	0x03D9F47C CMP X22, X9
	0x03D9F480 B.CS 0x3D9F77C
	0x03D9F484 ADD X8, X8, X22, 0x3, LSL
	0x03D9F488 STR X31, [X8 + 0x20]
	0x03D9F48C B 0x3D9F4FC
	0x03D9F490 LDR W9, [X10]
	0x03D9F494 ADD W9, W9, 0x5
	0x03D9F498 ADD X8, X8, W9, 0x4, SXTW
	0x03D9F49C ADD X0, X8, 0x138
	0x03D9F4A0 LDP X8, X1, [X0]
	0x03D9F4A4 MOV X0, X25
	0x03D9F4A8 BLR X8
	0x03D9F4AC LDR X8, [X21 + 0x30]
	0x03D9F4B0 CBZ X8, 0x3D9F780
	0x03D9F4B4 LDR W9, [X8 + 0x18]
	0x03D9F4B8 CMP X22, X9
	0x03D9F4BC B.CS 0x3D9F77C
	0x03D9F4C0 ADD X8, X8, X22, 0x3, LSL
	0x03D9F4C4 B 0x3D9F4F8
	0x03D9F4C8 LDR W9, [X10]
	0x03D9F4CC ADD W9, W9, 0x1
	0x03D9F4D0 ADD X8, X8, W9, 0x4, SXTW
	0x03D9F4D4 ADD X0, X8, 0x138
	0x03D9F4D8 LDP X8, X1, [X0]
	0x03D9F4DC MOV X0, X23
	0x03D9F4E0 BLR X8
	0x03D9F4E4 CBZ X24, 0x3D9F780
	0x03D9F4E8 LDR W8, [X24 + 0x18]
	0x03D9F4EC CMP X22, X8
	0x03D9F4F0 B.CS 0x3D9F77C
	0x03D9F4F4 ADD X8, X24, X22, 0x3, LSL
	0x03D9F4F8 STP S0, S1, [X8 + 0x20]
	0x03D9F4FC LDR X26, [X21 + 0x18]
	0x03D9F500 ADD X22, X22, 0x1
	0x03D9F504 CBNZ X26, 0x3D9ED4C
	0x03D9F508 B 0x3D9F780
	0x03D9F50C LDR X8, [X25]
	0x03D9F510 MOV X0, X25
	0x03D9F514 LDP X9, X1, [X8 + 0x188]
	0x03D9F518 BLR X9
	0x03D9F51C ADRP X8, 0x3C9000
	0x03D9F520 LDR X8, [X8 + 0x40]
	0x03D9F524 MOV X26, X0
	0x03D9F528 LDR X8, [X8]
	0x03D9F52C LDR W9, [X8 + 0xE0]
	0x03D9F530 CBNZ W9, 0x3D9F53C
	0x03D9F534 MOV X0, X8
	0x03D9F538 BL 0x1C16DFC
	0x03D9F53C ADRP X8, 0x3C9000
	0x03D9F540 LDR X8, [X8 + 0x38]
	0x03D9F544 LDR X0, [X8]
	0x03D9F548 BL 0x2D0D5C8
	0x03D9F54C CMP X26, X0
	0x03D9F550 B.EQ 0x3D9F59C
	0x03D9F554 LDR X8, [X25]
	0x03D9F558 MOV X0, X25
	0x03D9F55C LDP X9, X1, [X8 + 0x188]
	0x03D9F560 BLR X9
	0x03D9F564 ADRP X8, 0x3C9000
	0x03D9F568 LDR X8, [X8 + 0x48]
	0x03D9F56C MOV X26, X0
	0x03D9F570 LDR X8, [X8]
	0x03D9F574 LDR W9, [X8 + 0xE0]
	0x03D9F578 CBNZ W9, 0x3D9F584
	0x03D9F57C MOV X0, X8
	0x03D9F580 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x649000
	006 Move W8, [X21+3771]
	007 Move X20, X2
	008 Move X19, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x3CA000
	014 Move X0, [X0+48]
	015 Call 0x1C17CF4
	016 Move X0, 0x3CA000
	017 Move X0, [X0+56]
	018 Call 0x1C17CF4
	019 Move X0, 0x3CA000
	020 Move X0, [X0+64]
	021 Call 0x1C17CF4
	022 Move X0, 0x3CA000
	023 Move X0, [X0+72]
	024 Call 0x1C17CF4
	025 Move X0, 0x37E000
	026 Move X0, [X0+3712]
	027 Call 0x1C17CF4
	028 Move X0, 0x37D000
	029 Move X0, [X0+2200]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3771], W8
	033 Compare X19, 0
	034 JumpIfEqual {142}
	035 Move X21, [X19+80]
	036 Compare X21, 0
	037 JumpIfEqual {53}
	038 Move X8, 0x37D000
	039 Move X8, [X8+2200]
	040 Move X9, [X21]
	041 Move X8, [X8]
	042 Move W11, [X9+304]
	043 Move W10, [X8+304]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X9, [X9+200]
	046 Add X9, X9, X10
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, X21
	050 Move X1, X31
	051 Call VisualElement.get_panel, X0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare X20, 0
	054 JumpIfEqual {127}
	055 Move W8, [X19+64]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {127}
	060 Move TEMP, X8
	061 And TEMP, TEMP, 128
	062 Compare TEMP, 128
	063 JumpIfEqual {102}
	064 Move X8, [X19]
	065 Move X0, X19
	066 Move X9, [X8+392]
	067 Move X1, [X8+400]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X8, 0x3CA000
	070 Move X8, [X8+64]
	071 Move X21, X0
	072 Move X8, [X8]
	073 Move W9, [X8+224]
	074 Compare W9, 0
	075 JumpIfNotEqual {78}
	076 Move X0, X8
	077 Call 0x1C17DFC
	078 Move X8, 0x3CA000
	079 Move X8, [X8+56]
	080 Move X0, [X8]
	081 Call 0x2D0E5C8
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, [X19]
	084 Move X0, X19
	085 Move X9, [X8+392]
	086 Move X1, [X8+400]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X8, 0x3CA000
	089 Move X8, [X8+72]
	090 Move X21, X0
	091 Move X8, [X8]
	092 Move W9, [X8+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move X8, 0x3CA000
	098 Move X8, [X8+48]
	099 Move X0, [X8]
	100 Call 0x2D0E5C8
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X10, 0x37E000
	103 Move X8, [X20]
	104 Move X10, [X10+3712]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Move X1, [X10]
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X20
	116 Move W2, W31
	117 Call 0x1C5D788
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Add X8, X8, X9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X20
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X1, X19
	126 Call EventDispatchUtilities.PropagateToIMGUIContainer, X0, X1
	127 Move W8, [X19+64]
	128 Or W8, W8, 64
	129 Move [X19+64], W8
	130 Move X20, [X31+16]
	131 Move X19, [X31+24]
	132 Move X30, [X31+32]
	133 Move X21, [X31+40]
	134 Return 
	135 Move W8, [X19+64]
	136 Move W9, [X21+16]
	137 Move X0, X19
	138 And W8, W8, 0xFFFFFF7F
	139 Or W8, W8, W9
	140 Move [X19+64], W8
	141 Call EventDispatchUtilities.PropagateEvent, X0
	142 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03D9DCC0 ADD X31, X31, 0x80
	0x03D9DCC4 RET

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

