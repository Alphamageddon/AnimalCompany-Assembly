Type: UnityEngine.UIElements.Toggle

Method: System.Void .ctor()

Disassembly:
	0x03D87FE4 CBZ X0, 0x3D890AC
	0x03D87FE8 LDR V8, [X19, X8, LSL]

ISIL:
	001 Move X1, X31

Method: System.Void .ctor(System.String label)

Disassembly:
	0x03D87FEC MOV W1, W31
	0x03D87FF0 MOV X2, X31
	0x03D87FF4 BL 0x3DF6294
	0x03D87FF8 LDR W8, [X19 + 0x414]
	0x03D87FFC MOVZ W9, 0x3E0
	0x03D88000 STR X0, [X19 + 0x3C8]
	0x03D88004 CMP W8, 0x0
	0x03D88008 MOVZ W8, 0x3D8
	0x03D8800C CSEL X8, X8, X9, EQ
	0x03D88010 STR X0, [X19, X8, LSL]
	0x03D88014 LDR X0, [X19 + 0x408]
	0x03D88018 CBZ X0, 0x3D890AC
	0x03D8801C MOVZ W1, 0x1
	0x03D88020 MOV X2, X31
	0x03D88024 BL 0x3DF6294
	0x03D88028 LDR W8, [X19 + 0x414]
	0x03D8802C STR X0, [X19 + 0x3D0]
	0x03D88030 CMP W8, 0x1
	0x03D88034 B.NE 0x3D8807C
	0x03D88038 STR X0, [X19 + 0x3D8]
	0x03D8803C B 0x3D88084
	0x03D88040 ADRP X8, 0x36B000
	0x03D88044 LDR X8, [X8 + 0xA28]
	0x03D88048 LDR X0, [X8]
	0x03D8804C LDR W8, [X0 + 0xE0]
	0x03D88050 CBNZ W8, 0x3D88058
	0x03D88054 BL 0x1C16DFC
	0x03D88058 ADRP X8, 0x3DF000
	0x03D8805C LDR X8, [X8 + 0x770]
	0x03D88060 LDP X20, X19, [X31 + 0x30]
	0x03D88064 LDP X22, X21, [X31 + 0x20]
	0x03D88068 LDP X30, X23, [X31 + 0x10]
	0x03D8806C LDR X0, [X8]
	0x03D88070 MOV X1, X31
	0x03D88074 LDP D9, D8, [X31], #0x40
	0x03D88078 B 0x3C0649C
	0x03D8807C STR X0, [X19 + 0x3E0]
	0x03D88080 LDR X0, [X19 + 0x3D8]
	0x03D88084 CBZ X0, 0x3D890AC
	0x03D88088 MOV X1, X31
	0x03D8808C BL 0x3DE7EEC
	0x03D88090 MOV X20, X0
	0x03D88094 MOVZ W0, 0x1
	0x03D88098 MOV X1, X31
	0x03D8809C BL 0x3DFD0B0
	0x03D880A0 CBZ X20, 0x3D890AC
	0x03D880A4 ADRP X23, 0x394000
	0x03D880A8 LDR X9, [X20]
	0x03D880AC LDR X23, [X23 + 0x128]
	0x03D880B0 MOV X8, X1
	0x03D880B4 MOV X21, X0
	0x03D880B8 LDRH W10, [X9 + 0x12E]
	0x03D880BC LDR X1, [X23]
	0x03D880C0 AND X22, X8, 0x0
	0x03D880C4 CBZ X10, 0x3D880E8
	0x03D880C8 LDR X8, [X9 + 0xB0]
	0x03D880CC ADD X8, X8, 0x8
	0x03D880D0 LDUR X11, [X8 - 0x8]
	0x03D880D4 CMP X11, X1
	0x03D880D8 B.EQ 0x3D880F8
	0x03D880DC SUBS X10, X10, 0x1
	0x03D880E0 ADD X8, X8, 0x10
	0x03D880E4 B.NE 0x3D880D0
	0x03D880E8 MOVZ W2, 0x13

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x661000
	007 Move X21, 0x3DC000
	008 Move W8, [X22+3576]
	009 Call 0x3EB2A14
	010 Return 
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x3E0000
	018 Move X0, [X0+400]
	019 Call 0x1C17CF4
	020 Move X0, 0x3DB000
	021 Move X0, [X0+3200]
	022 Call 0x1C17CF4
	023 Move X0, 0x3DB000
	024 Move X0, [X0+2944]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+3576], W8
	028 Move X22, 0x3DB000
	029 Move X22, [X22+3200]
	030 Move X0, X19
	031 Move X1, X20
	032 Move X2, X31
	033 Call BaseBoolField..ctor, X0, X1
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X21]
	040 Move X8, [X0+184]
	041 Move X0, X19
	042 Move X2, X31
	043 Move X1, [X8]
	044 Call VisualElement.AddToClassList, X0, X1
	045 Move X1, [X22]
	046 Move X0, X19
	047 Call 0x2773DDC, X0
	048 Compare X0, 0
	049 JumpIfEqual {77}
	050 Move X8, [X21]
	051 Move X2, X31
	052 Move X8, [X8+184]
	053 Move X1, [X8+16]
	054 Call VisualElement.AddToClassList, X0, X1
	055 Move X0, [X19+1024]
	056 Compare X0, 0
	057 JumpIfEqual {77}
	058 Move X8, [X21]
	059 Move X2, X31
	060 Move X8, [X8+184]
	061 Move X1, [X8+8]
	062 Call VisualElement.AddToClassList, X0, X1
	063 Move X0, [X19+1096]
	064 Compare X0, 0
	065 JumpIfEqual {77}
	066 Move X8, [X21]
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X2, X31
	072 Move X8, [X8+184]
	073 Move X1, [X8+32]
	074 Move X30, [X31+48]
	075 Call VisualElement.AddToClassList, X0, X1
	076 Return 
	077 Call 0x1C17F20

Method: System.Void InitLabel()

Disassembly:
	0x03D880EC MOV X0, X20
	0x03D880F0 BL 0x1C5C788
	0x03D880F4 B 0x3D88108
	0x03D880F8 LDR W8, [X8]
	0x03D880FC ADD W8, W8, 0x13
	0x03D88100 ADD X8, X9, W8, 0x4, SXTW
	0x03D88104 ADD X0, X8, 0x138
	0x03D88108 LDP X8, X3, [X0]
	0x03D8810C MOV X0, X20
	0x03D88110 MOV X1, X21
	0x03D88114 MOV X2, X22
	0x03D88118 BLR X8
	0x03D8811C LDR X0, [X19 + 0x3D8]
	0x03D88120 CBZ X0, 0x3D890AC
	0x03D88124 MOV X1, X31
	0x03D88128 BL 0x3DE7EEC
	0x03D8812C MOV X20, X0
	0x03D88130 MOVZ W0, 0x1
	0x03D88134 MOV X1, X31
	0x03D88138 BL 0x3DFD120
	0x03D8813C CBZ X20, 0x3D890AC
	0x03D88140 LDR X8, [X20]
	0x03D88144 LDR X1, [X23]
	0x03D88148 MOV X21, X0
	0x03D8814C LDRH W9, [X8 + 0x12E]
	0x03D88150 CBZ X9, 0x3D88174
	0x03D88154 LDR X10, [X8 + 0xB0]
	0x03D88158 ADD X10, X10, 0x8
	0x03D8815C LDUR X11, [X10 - 0x8]
	0x03D88160 CMP X11, X1
	0x03D88164 B.EQ 0x3D88184

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x660000
	006 Move X20, 0x3DB000
	007 Move W8, [X21+3577]
	008 Move X20, [X20+2944]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3DB000
	015 Move X0, [X0+2944]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3577], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call BaseBoolField.InitLabel, X0
	022 Move X0, [X20]
	023 Move X19, [X19+1088]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Compare X19, 0
	029 JumpIfEqual {41}
	030 Move X8, [X20]
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X2, X31
	035 Move X8, [X8+184]
	036 Move X1, [X8+40]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call VisualElement.AddToClassList, X0, X1
	040 Return 
	041 Call 0x1C17F20

Method: System.Void UpdateMixedValueContent()

Disassembly:
	0x03D88168 SUBS X9, X9, 0x1
	0x03D8816C ADD X10, X10, 0x10
	0x03D88170 B.NE 0x3D8815C
	0x03D88174 MOVZ W2, 0x16
	0x03D88178 MOV X0, X20
	0x03D8817C BL 0x1C5C788
	0x03D88180 B 0x3D88194
	0x03D88184 LDR W9, [X10]
	0x03D88188 ADD W9, W9, 0x16
	0x03D8818C ADD X8, X8, W9, 0x4, SXTW
	0x03D88190 ADD X0, X8, 0x138
	0x03D88194 LDP X8, X2, [X0]
	0x03D88198 MOV X0, X20
	0x03D8819C MOV X1, X21
	0x03D881A0 BLR X8
	0x03D881A4 LDR X0, [X19 + 0x3D8]
	0x03D881A8 CBZ X0, 0x3D890AC
	0x03D881AC MOV X1, X31
	0x03D881B0 BL 0x3DE7EEC
	0x03D881B4 MOV X20, X0
	0x03D881B8 MOVZ W0, 0x1
	0x03D881BC MOV X1, X31
	0x03D881C0 BL 0x3DFD120
	0x03D881C4 CBZ X20, 0x3D890AC
	0x03D881C8 LDR X8, [X20]
	0x03D881CC LDR X1, [X23]
	0x03D881D0 MOV X21, X0
	0x03D881D4 LDRH W9, [X8 + 0x12E]
	0x03D881D8 CBZ X9, 0x3D881FC
	0x03D881DC LDR X10, [X8 + 0xB0]
	0x03D881E0 ADD X10, X10, 0x8
	0x03D881E4 LDUR X11, [X10 - 0x8]
	0x03D881E8 CMP X11, X1
	0x03D881EC B.EQ 0x3D8820C
	0x03D881F0 SUBS X9, X9, 0x1
	0x03D881F4 ADD X10, X10, 0x10
	0x03D881F8 B.NE 0x3D881E4
	0x03D881FC MOVZ W2, 0x15
	0x03D88200 MOV X0, X20
	0x03D88204 BL 0x1C5C788
	0x03D88208 B 0x3D8821C
	0x03D8820C LDR W9, [X10]
	0x03D88210 ADD W9, W9, 0x15
	0x03D88214 ADD X8, X8, W9, 0x4, SXTW
	0x03D88218 ADD X0, X8, 0x138
	0x03D8821C LDP X8, X2, [X0]
	0x03D88220 MOV X0, X20
	0x03D88224 MOV X1, X21
	0x03D88228 BLR X8
	0x03D8822C LDR X0, [X19 + 0x3E0]
	0x03D88230 CBZ X0, 0x3D890AC
	0x03D88234 MOV X1, X31
	0x03D88238 BL 0x3DE7EEC
	0x03D8823C MOV X20, X0
	0x03D88240 MOVZ W0, 0x1
	0x03D88244 MOV X1, X31
	0x03D88248 BL 0x3DFD120
	0x03D8824C CBZ X20, 0x3D890AC
	0x03D88250 LDR X8, [X20]
	0x03D88254 LDR X1, [X23]
	0x03D88258 MOV X21, X0
	0x03D8825C LDRH W9, [X8 + 0x12E]
	0x03D88260 CBZ X9, 0x3D88284
	0x03D88264 LDR X10, [X8 + 0xB0]
	0x03D88268 ADD X10, X10, 0x8
	0x03D8826C LDUR X11, [X10 - 0x8]
	0x03D88270 CMP X11, X1
	0x03D88274 B.EQ 0x3D88294
	0x03D88278 SUBS X9, X9, 0x1
	0x03D8827C ADD X10, X10, 0x10
	0x03D88280 B.NE 0x3D8826C
	0x03D88284 MOVZ W2, 0x15
	0x03D88288 MOV X0, X20
	0x03D8828C BL 0x1C5C788
	0x03D88290 B 0x3D882A4
	0x03D88294 LDR W9, [X10]
	0x03D88298 ADD W9, W9, 0x15
	0x03D8829C ADD X8, X8, W9, 0x4, SXTW
	0x03D882A0 ADD X0, X8, 0x138
	0x03D882A4 LDP X8, X2, [X0]
	0x03D882A8 MOV X0, X20
	0x03D882AC MOV X1, X21
	0x03D882B0 BLR X8
	0x03D882B4 LDR X0, [X19 + 0x3E0]
	0x03D882B8 CBZ X0, 0x3D890AC
	0x03D882BC MOV X1, X31
	0x03D882C0 BL 0x3DE7EEC
	0x03D882C4 MOV X20, X0
	0x03D882C8 MOVZ W0, 0x1
	0x03D882CC MOV X1, X31
	0x03D882D0 BL 0x3DFD120
	0x03D882D4 CBZ X20, 0x3D890AC
	0x03D882D8 LDR X8, [X20]
	0x03D882DC LDR X1, [X23]
	0x03D882E0 MOV X21, X0
	0x03D882E4 LDRH W9, [X8 + 0x12E]
	0x03D882E8 CBZ X9, 0x3D8830C
	0x03D882EC LDR X10, [X8 + 0xB0]
	0x03D882F0 ADD X10, X10, 0x8
	0x03D882F4 LDUR X11, [X10 - 0x8]
	0x03D882F8 CMP X11, X1
	0x03D882FC B.EQ 0x3D8831C
	0x03D88300 SUBS X9, X9, 0x1
	0x03D88304 ADD X10, X10, 0x10
	0x03D88308 B.NE 0x3D882F4
	0x03D8830C MOVZ W2, 0x16
	0x03D88310 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x660000
	007 Move W8, [X20+3578]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x3DB000
	014 Move X0, [X0+3504]
	015 Call 0x1C17CF4
	016 Move X0, 0x3DB000
	017 Move X0, [X0+3200]
	018 Call 0x1C17CF4
	019 Move X0, 0x3DB000
	020 Move X0, [X0+2944]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3578], W8
	024 Move X22, 0x3DB000
	025 Move X21, 0x3DB000
	026 Move W8, [X19+1032]
	027 Move X22, [X22+3200]
	028 Move X21, [X21+2944]
	029 Compare W8, 0
	030 JumpIfEqual {70}
	031 Move X1, [X22]
	032 Move X0, X19
	033 Call 0x2773DDC, X0
	034 Compare X0, 0
	035 JumpIfEqual {127}
	036 Move X1, X31
	037 Move X20, X0
	038 Call VisualElement.get_pseudoStates, X0
	039 And W1, W0, 0xFFFFFFF7
	040 Move X0, X20
	041 Move X2, X31
	042 Call VisualElement.set_pseudoStates, X0, X1
	043 Move X0, X19
	044 Move X1, X31
	045 Call VisualElement.get_pseudoStates, X0
	046 And W1, W0, 0xFFFFFFF7
	047 Move X0, X19
	048 Move X2, X31
	049 Call VisualElement.set_pseudoStates, X0, X1
	050 Move X0, [X21]
	051 Move X19, [X19+1096]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Compare X19, 0
	057 JumpIfEqual {127}
	058 Move X8, [X21]
	059 Move X0, X19
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X8, [X8+184]
	065 Move X2, X31
	066 Move X1, [X8+48]
	067 Move X30, [X31+48]
	068 Call VisualElement.AddToClassList, X0, X1
	069 Return 
	070 Move X0, [X21]
	071 Move X20, [X19+1096]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Compare X20, 0
	077 JumpIfEqual {127}
	078 Move X8, [X21]
	079 Move X0, X20
	080 Move X2, X31
	081 Move X8, [X8+184]
	082 Move X1, [X8+48]
	083 Call VisualElement.RemoveFromClassList, X0, X1
	084 Move X8, [X19]
	085 Move X0, X19
	086 Move X9, [X8+2024]
	087 Move X1, [X8+2032]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X1, [X22]
	090 Move W21, W0
	091 Move X0, X19
	092 Call 0x2773DDC, X0
	093 Compare X0, 0
	094 JumpIfEqual {127}
	095 Move X1, X31
	096 Move X20, X0
	097 Call VisualElement.get_pseudoStates, X0
	098 Move TEMP, X21
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {110}
	102 Or W1, W0, 8
	103 Move X0, X20
	104 Move X2, X31
	105 Call VisualElement.set_pseudoStates, X0, X1
	106 Move X0, X19
	107 Move X1, X31
	108 Call VisualElement.get_pseudoStates, X0
	109 Or W1, W0, 8
	110 And W1, W0, 0xFFFFFFF7
	111 Move X0, X20
	112 Move X2, X31
	113 Call VisualElement.set_pseudoStates, X0, X1
	114 Move X0, X19
	115 Move X1, X31
	116 Call VisualElement.get_pseudoStates, X0
	117 And W1, W0, 0xFFFFFFF7
	118 Move X0, X19
	119 Move X20, [X31+32]
	120 Move X19, [X31+40]
	121 Move X22, [X31+16]
	122 Move X21, [X31+24]
	123 Move X2, X31
	124 Move X30, [X31+48]
	125 Call VisualElement.set_pseudoStates, X0, X1
	126 Return 
	127 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D88314 BL 0x1C5C788
	0x03D88318 B 0x3D8832C
	0x03D8831C LDR W9, [X10]
	0x03D88320 ADD W9, W9, 0x16
	0x03D88324 ADD X8, X8, W9, 0x4, SXTW
	0x03D88328 ADD X0, X8, 0x138
	0x03D8832C LDP X8, X2, [X0]
	0x03D88330 MOV X0, X20
	0x03D88334 MOV X1, X21
	0x03D88338 BLR X8
	0x03D8833C LDR X0, [X19 + 0x3E0]
	0x03D88340 CBZ X0, 0x3D890AC
	0x03D88344 MOV X1, X31
	0x03D88348 BL 0x3DE7EEC
	0x03D8834C MOV X20, X0
	0x03D88350 MOVZ W0, 0x1
	0x03D88354 MOV X1, X31
	0x03D88358 BL 0x3DFD0B0
	0x03D8835C CBZ X20, 0x3D890AC
	0x03D88360 LDR X9, [X20]
	0x03D88364 MOV X8, X1
	0x03D88368 LDR X1, [X23]
	0x03D8836C MOV X21, X0
	0x03D88370 LDRH W10, [X9 + 0x12E]
	0x03D88374 AND X22, X8, 0x0
	0x03D88378 CBZ X10, 0x3D8839C
	0x03D8837C LDR X8, [X9 + 0xB0]
	0x03D88380 ADD X8, X8, 0x8
	0x03D88384 LDUR X11, [X8 - 0x8]
	0x03D88388 CMP X11, X1
	0x03D8838C B.EQ 0x3D883AC
	0x03D88390 SUBS X10, X10, 0x1
	0x03D88394 ADD X8, X8, 0x10
	0x03D88398 B.NE 0x3D88384
	0x03D8839C MOVZ W2, 0x13
	0x03D883A0 MOV X0, X20
	0x03D883A4 BL 0x1C5C788
	0x03D883A8 B 0x3D883BC
	0x03D883AC LDR W8, [X8]
	0x03D883B0 ADD W8, W8, 0x13
	0x03D883B4 ADD X8, X9, W8, 0x4, SXTW
	0x03D883B8 ADD X0, X8, 0x138
	0x03D883BC LDP X8, X3, [X0]
	0x03D883C0 MOV X0, X20
	0x03D883C4 MOV X1, X21
	0x03D883C8 MOV X2, X22
	0x03D883CC BLR X8
	0x03D883D0 LDR X0, [X19 + 0x3D8]
	0x03D883D4 CBZ X0, 0x3D890AC
	0x03D883D8 MOV X1, X31
	0x03D883DC BL 0x3DE7EEC
	0x03D883E0 MOV X20, X0
	0x03D883E4 MOVZ W0, 0x1
	0x03D883E8 MOV X1, X31
	0x03D883EC BL 0x3DFD0B0
	0x03D883F0 CBZ X20, 0x3D890AC
	0x03D883F4 LDR X9, [X20]
	0x03D883F8 MOV X8, X1
	0x03D883FC LDR X1, [X23]
	0x03D88400 MOV X21, X0
	0x03D88404 LDRH W10, [X9 + 0x12E]
	0x03D88408 AND X22, X8, 0x0
	0x03D8840C CBZ X10, 0x3D88430
	0x03D88410 LDR X8, [X9 + 0xB0]
	0x03D88414 ADD X8, X8, 0x8
	0x03D88418 LDUR X11, [X8 - 0x8]
	0x03D8841C CMP X11, X1
	0x03D88420 B.EQ 0x3D88440
	0x03D88424 SUBS X10, X10, 0x1
	0x03D88428 ADD X8, X8, 0x10
	0x03D8842C B.NE 0x3D88418
	0x03D88430 MOVZ W2, 0x36
	0x03D88434 MOV X0, X20
	0x03D88438 BL 0x1C5C788
	0x03D8843C B 0x3D88450
	0x03D88440 LDR W8, [X8]
	0x03D88444 ADD W8, W8, 0x36
	0x03D88448 ADD X8, X9, W8, 0x4, SXTW
	0x03D8844C ADD X0, X8, 0x138
	0x03D88450 LDP X8, X3, [X0]
	0x03D88454 MOV X0, X20
	0x03D88458 MOV X1, X21
	0x03D8845C MOV X2, X22
	0x03D88460 BLR X8
	0x03D88464 LDR X0, [X19 + 0x3D8]
	0x03D88468 CBZ X0, 0x3D890AC
	0x03D8846C MOV X1, X31
	0x03D88470 BL 0x3DE7EEC
	0x03D88474 MOV X20, X0
	0x03D88478 MOVZ W0, 0x1
	0x03D8847C MOV X1, X31
	0x03D88480 BL 0x3DFD0B0
	0x03D88484 CBZ X20, 0x3D890AC
	0x03D88488 LDR X9, [X20]
	0x03D8848C MOV X8, X1
	0x03D88490 LDR X1, [X23]
	0x03D88494 MOV X21, X0
	0x03D88498 LDRH W10, [X9 + 0x12E]
	0x03D8849C AND X22, X8, 0x0
	0x03D884A0 CBZ X10, 0x3D884C4
	0x03D884A4 LDR X8, [X9 + 0xB0]
	0x03D884A8 ADD X8, X8, 0x8
	0x03D884AC LDUR X11, [X8 - 0x8]
	0x03D884B0 CMP X11, X1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x660000
	012 Move X26, 0x3E0000
	013 Move X19, 0x3DB000
	014 Move X25, 0x395000
	015 Move X24, 0x395000
	016 Move X23, 0x3E0000
	017 Move X22, 0x3DC000
	018 Move X21, 0x397000
	019 Move X20, 0x3E0000
	020 Move X26, [X26+1800]
	021 Move X19, [X19+2944]
	022 Move X25, [X25+3768]
	023 Move W8, [X27+3579]
	024 Move X24, [X24+3776]
	025 Move X23, [X23+1808]
	026 Move X22, [X22+2880]
	027 Move X21, [X21+216]
	028 Move X20, [X20+1816]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {59}
	033 Move X0, 0x3DB000
	034 Move X0, [X0+2944]
	035 Call 0x1C17CF4
	036 Move X0, 0x3DC000
	037 Move X0, [X0+2880]
	038 Call 0x1C17CF4
	039 Move X0, 0x3E0000
	040 Move X0, [X0+1816]
	041 Call 0x1C17CF4
	042 Move X0, 0x397000
	043 Move X0, [X0+216]
	044 Call 0x1C17CF4
	045 Move X0, 0x395000
	046 Move X0, [X0+3768]
	047 Call 0x1C17CF4
	048 Move X0, 0x395000
	049 Move X0, [X0+3776]
	050 Call 0x1C17CF4
	051 Move X0, 0x3E0000
	052 Move X0, [X0+1808]
	053 Call 0x1C17CF4
	054 Move X0, 0x3E0000
	055 Move X0, [X0+1800]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X27+3579], W8
	059 Move X8, [X19]
	060 Move X9, [X26]
	061 Move X2, X31
	062 Move X8, [X8+184]
	063 Move [X8], X9
	064 Move X8, [X19]
	065 Move X1, [X25]
	066 Move X8, [X8+184]
	067 Move X0, [X8]
	068 Call String.Concat, X0, X1
	069 Move X8, [X19]
	070 Move X2, X31
	071 Move X8, [X8+184]
	072 Move [X8+8], X0
	073 Move X0, [X8]
	074 Move X1, [X24]
	075 Call String.Concat, X0, X1
	076 Move X8, [X19]
	077 Move X2, X31
	078 Move X8, [X8+184]
	079 Move [X8+16], X0
	080 Move X0, [X8]
	081 Move X1, [X23]
	082 Call String.Concat, X0, X1
	083 Move X8, [X19]
	084 Move X2, X31
	085 Move X8, [X8+184]
	086 Move [X8+24], X0
	087 Move X0, [X8]
	088 Move X1, [X22]
	089 Call String.Concat, X0, X1
	090 Move X8, [X19]
	091 Move X2, X31
	092 Move X8, [X8+184]
	093 Move [X8+32], X0
	094 Move X0, [X8]
	095 Move X1, [X21]
	096 Call String.Concat, X0, X1
	097 Move X8, [X19]
	098 Move X2, X31
	099 Move X8, [X8+184]
	100 Move [X8+40], X0
	101 Move X0, [X8]
	102 Move X1, [X20]
	103 Call String.Concat, X0, X1
	104 Move X8, [X19]
	105 Move X20, [X31+64]
	106 Move X19, [X31+72]
	107 Move X22, [X31+48]
	108 Move X21, [X31+56]
	109 Move X24, [X31+32]
	110 Move X23, [X31+40]
	111 Move X8, [X8+184]
	112 Move X26, [X31+16]
	113 Move X25, [X31+24]
	114 Move [X8+48], X0
	115 Move X30, [X31+80]
	116 Move X27, [X31+88]
	117 Return 

