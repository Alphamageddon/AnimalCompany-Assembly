Type: UnityEngine.UIElements.VisualTreeAsset/<get_stylesheets>d__23

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x03D15E78 MOV X19, X3
	0x03D15E7C MOV X20, X2
	0x03D15E80 MOV X21, X1
	0x03D15E84 MOV X22, X0
	0x03D15E88 TBNZ X8, 0x0, 0x3D15EA0
	0x03D15E8C ADRP X0, 0x408000
	0x03D15E90 LDR X0, [X0 + 0xB00]
	0x03D15E94 BL 0x1C16CF4
	0x03D15E98 MOVZ W8, 0x1
	0x03D15E9C STRB W8, [X23 + 0x8F1]
	0x03D15EA0 LDR X0, [X24]
	0x03D15EA4 LDR W8, [X0 + 0xE0]
	0x03D15EA8 CBNZ W8, 0x3D15EB0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03D15EAC BL 0x1C16DFC
	0x03D15EB0 MOV X0, X22
	0x03D15EB4 MOV X1, X21
	0x03D15EB8 MOV X3, X20
	0x03D15EBC MOV X4, X19
	0x03D15EC0 LDP X20, X19, [X31 + 0x30]
	0x03D15EC4 LDP X22, X21, [X31 + 0x20]
	0x03D15EC8 LDP X24, X23, [X31 + 0x10]
	0x03D15ECC MOV X2, X31
	0x03D15ED0 LDR X30, [X31], #0x40
	0x03D15ED4 B 0x3D15ED8
	0x03D15ED8 STP X30, X25, [X31 - 0x40]!
	0x03D15EDC STP X24, X23, [X31 + 0x10]
	0x03D15EE0 STP X22, X21, [X31 + 0x20]
	0x03D15EE4 STP X20, X19, [X31 + 0x30]
	0x03D15EE8 ADRP X24, 0x6D2000
	0x03D15EEC ADRP X25, 0x408000
	0x03D15EF0 LDRB W8, [X24 + 0x8F2]
	0x03D15EF4 LDR X25, [X25 + 0xB00]
	0x03D15EF8 MOV X19, X4
	0x03D15EFC MOV X20, X3
	0x03D15F00 MOV X21, X2
	0x03D15F04 MOV X23, X1
	0x03D15F08 MOV X22, X0
	0x03D15F0C TBNZ X8, 0x0, 0x3D15F24
	0x03D15F10 ADRP X0, 0x408000
	0x03D15F14 LDR X0, [X0 + 0xB00]
	0x03D15F18 BL 0x1C16CF4
	0x03D15F1C MOVZ W8, 0x1
	0x03D15F20 STRB W8, [X24 + 0x8F2]
	0x03D15F24 LDR X0, [X25]
	0x03D15F28 LDR W8, [X0 + 0xE0]
	0x03D15F2C CBNZ W8, 0x3D15F34
	0x03D15F30 BL 0x1C16DFC
	0x03D15F34 STP X23, X21, [X22 + 0x10]
	0x03D15F38 STP X19, X20, [X22]
	0x03D15F3C LDP X20, X19, [X31 + 0x30]
	0x03D15F40 LDP X22, X21, [X31 + 0x20]
	0x03D15F44 LDP X24, X23, [X31 + 0x10]
	0x03D15F48 LDP X30, X25, [X31], #0x40
	0x03D15F4C RET
	0x03D15F50 SUB X31, X31, 0x40
	0x03D15F54 STP X30, X21, [X31 + 0x20]
	0x03D15F58 STP X20, X19, [X31 + 0x30]
	0x03D15F5C ADRP X21, 0x6D2000
	0x03D15F60 LDRB W8, [X21 + 0x8F3]
	0x03D15F64 MOV X20, X1
	0x03D15F68 MOV X19, X0
	0x03D15F6C TBNZ X8, 0x0, 0x3D15F84
	0x03D15F70 ADRP X0, 0x408000
	0x03D15F74 LDR X0, [X0 + 0xB00]
	0x03D15F78 BL 0x1C16CF4
	0x03D15F7C MOVZ W8, 0x1
	0x03D15F80 STRB W8, [X21 + 0x8F3]
	0x03D15F84 CBZ X20, 0x3D15FA0
	0x03D15F88 ADRP X21, 0x408000
	0x03D15F8C LDR X21, [X21 + 0xB00]
	0x03D15F90 LDR X8, [X20]
	0x03D15F94 LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+16]
	006 Add W9, W8, 5
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W10, 1
	009 NotImplemented "Instruction LSLV not yet implemented."
	010 Move W10, 199
	011 And W31, W9, W10
	012 Move X19, X0
	013 Add W31, W8, 4
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add W31, W8, 5
	017 Add W31, W8, 4
	018 Move X0, X19
	019 Call <get_stylesheets>d__23.<>m__Finally2, X0
	020 Move X0, X19
	021 Call <get_stylesheets>d__23.<>m__Finally3, X0
	022 Move X0, X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Call <get_stylesheets>d__23.<>m__Finally1, X0
	028 Return 
	029 Move X20, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X20
	032 Call 0x3EB2AD0
	033 Move X21, [X0]
	034 Call 0x3EB2AE0
	035 Move X0, X19
	036 Call <get_stylesheets>d__23.<>m__Finally1, X0
	037 Compare X21, 0
	038 JumpIfNotEqual {45}
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 
	044 Move X21, X31
	045 Move X0, X21
	046 Call 0x1C17F18
	047 Move X20, X0
	048 Move X0, X19
	049 Call <get_stylesheets>d__23.<>m__Finally1, X0
	050 Compare X21, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X20
	053 Call 0x1D2D690
	054 Move X0, X21
	055 Call 0x1C17F18
	056 Call 0x1991590

Method: System.Boolean MoveNext()

Disassembly:
	0x03D15F98 CMP X8, X0
	0x03D15F9C B.EQ 0x3D15FA8
	0x03D15FA0 MOV W0, W31
	0x03D15FA4 B 0x3D15FF0
	0x03D15FA8 LDR W8, [X0 + 0xE0]
	0x03D15FAC CBZ W8, 0x3D15FB8
	0x03D15FB0 MOV X1, X0
	0x03D15FB4 B 0x3D15FC4
	0x03D15FB8 BL 0x1C16DFC
	0x03D15FBC LDR X1, [X21]
	0x03D15FC0 LDR X0, [X20]
	0x03D15FC4 LDR X8, [X0 + 0x40]
	0x03D15FC8 LDR X9, [X1 + 0x40]
	0x03D15FCC MOV X0, X20
	0x03D15FD0 CMP X8, X9
	0x03D15FD4 B.NE 0x3D16004
	0x03D15FD8 BL 0x1C16E08
	0x03D15FDC LDP V0, V1, [X0]
	0x03D15FE0 ADD X1, X31, 0x0
	0x03D15FE4 MOV X0, X19
	0x03D15FE8 STP V0, V1, [X31]
	0x03D15FEC BL 0x3D16008
	0x03D15FF0 LDP X20, X19, [X31 + 0x30]
	0x03D15FF4 LDP X30, X21, [X31 + 0x20]
	0x03D15FF8 AND W0, W0, 0x1
	0x03D15FFC ADD X31, X31, 0x40
	0x03D16000 RET
	0x03D16004 BL 0x1C171E0
	0x03D16008 STP X30, X23, [X31 - 0x30]!
	0x03D1600C STP X22, X21, [X31 + 0x10]
	0x03D16010 STP X20, X19, [X31 + 0x20]
	0x03D16014 ADRP X21, 0x6D1000
	0x03D16018 ADRP X23, 0x407000
	0x03D1601C ADRP X22, 0x407000
	0x03D16020 LDRB W8, [X21 + 0x8F4]
	0x03D16024 LDR X23, [X23 + 0xA60]
	0x03D16028 LDR X22, [X22 + 0xB00]
	0x03D1602C MOV X19, X1
	0x03D16030 MOV X20, X0
	0x03D16034 TBNZ X8, 0x0, 0x3D16070
	0x03D16038 ADRP X0, 0x407000
	0x03D1603C LDR X0, [X0 + 0xB00]
	0x03D16040 BL 0x1C16CF4
	0x03D16044 ADRP X0, 0x407000
	0x03D16048 LDR X0, [X0 + 0xA60]
	0x03D1604C BL 0x1C16CF4
	0x03D16050 ADRP X0, 0x44D000
	0x03D16054 LDR X0, [X0 + 0xEA8]
	0x03D16058 BL 0x1C16CF4
	0x03D1605C ADRP X0, 0x44D000
	0x03D16060 LDR X0, [X0 + 0xEB0]
	0x03D16064 BL 0x1C16CF4
	0x03D16068 MOVZ W8, 0x1
	0x03D1606C STRB W8, [X21 + 0x8F4]
	0x03D16070 LDR X0, [X23]
	0x03D16074 BL 0x211B0E8
	0x03D16078 LDR X8, [X22]
	0x03D1607C MOV X21, X0
	0x03D16080 LDR W9, [X8 + 0xE0]
	0x03D16084 CBNZ W9, 0x3D16090
	0x03D16088 MOV X0, X8
	0x03D1608C BL 0x1C16DFC
	0x03D16090 CBZ X21, 0x3D1615C
	0x03D16094 LDR X8, [X21]
	0x03D16098 LDR X2, [X19]
	0x03D1609C LDR X1, [X20]
	0x03D160A0 MOV X0, X21
	0x03D160A4 LDP X9, X3, [X8 + 0x1B8]
	0x03D160A8 BLR X9
	0x03D160AC TBZ X0, 0x0, 0x3D16148
	0x03D160B0 ADRP X8, 0x44D000
	0x03D160B4 LDR X8, [X8 + 0xEA8]
	0x03D160B8 LDR X0, [X8]
	0x03D160BC BL 0x211B0E8
	0x03D160C0 LDR X8, [X22]
	0x03D160C4 MOV X21, X0
	0x03D160C8 LDR W9, [X8 + 0xE0]
	0x03D160CC CBNZ W9, 0x3D160D8
	0x03D160D0 MOV X0, X8
	0x03D160D4 BL 0x1C16DFC
	0x03D160D8 CBZ X21, 0x3D1615C
	0x03D160DC LDR X8, [X21]
	0x03D160E0 LDR X2, [X19 + 0x8]
	0x03D160E4 LDR X1, [X20 + 0x8]
	0x03D160E8 MOV X0, X21
	0x03D160EC LDP X9, X3, [X8 + 0x1B8]
	0x03D160F0 BLR X9
	0x03D160F4 TBZ X0, 0x0, 0x3D16148
	0x03D160F8 ADRP X8, 0x44D000
	0x03D160FC LDR X8, [X8 + 0xEB0]
	0x03D16100 LDR X0, [X8]
	0x03D16104 BL 0x211B0E8
	0x03D16108 LDR X8, [X22]
	0x03D1610C MOV X21, X0
	0x03D16110 LDR W9, [X8 + 0xE0]
	0x03D16114 CBNZ W9, 0x3D16120
	0x03D16118 MOV X0, X8
	0x03D1611C BL 0x1C16DFC
	0x03D16120 CBZ X21, 0x3D1615C
	0x03D16124 LDR X8, [X21]
	0x03D16128 LDR X2, [X19 + 0x10]
	0x03D1612C LDR X1, [X20 + 0x10]
	0x03D16130 MOV X0, X21
	0x03D16134 LDP X4, X3, [X8 + 0x1B8]
	0x03D16138 LDP X20, X19, [X31 + 0x20]
	0x03D1613C LDP X22, X21, [X31 + 0x10]
	0x03D16140 LDP X30, X23, [X31], #0x30
	0x03D16144 BR X4
	0x03D16148 LDP X20, X19, [X31 + 0x20]
	0x03D1614C LDP X22, X21, [X31 + 0x10]
	0x03D16150 MOV W0, W31
	0x03D16154 LDP X30, X23, [X31], #0x30
	0x03D16158 RET
	0x03D1615C BL 0x1C16F20
	0x03D16160 STR X30, [X31 - 0x30]!
	0x03D16164 STP X22, X21, [X31 + 0x10]
	0x03D16168 STP X20, X19, [X31 + 0x20]
	0x03D1616C ADRP X21, 0x6D1000
	0x03D16170 ADRP X22, 0x407000
	0x03D16174 ADRP X20, 0x407000
	0x03D16178 LDRB W8, [X21 + 0x8F5]
	0x03D1617C LDR X22, [X22 + 0xA60]
	0x03D16180 LDR X20, [X20 + 0xB00]
	0x03D16184 MOV X19, X0
	0x03D16188 TBNZ X8, 0x0, 0x3D161C4
	0x03D1618C ADRP X0, 0x407000
	0x03D16190 LDR X0, [X0 + 0xB00]
	0x03D16194 BL 0x1C16CF4
	0x03D16198 ADRP X0, 0x407000
	0x03D1619C LDR X0, [X0 + 0xA60]
	0x03D161A0 BL 0x1C16CF4
	0x03D161A4 ADRP X0, 0x44D000
	0x03D161A8 LDR X0, [X0 + 0xEA8]
	0x03D161AC BL 0x1C16CF4
	0x03D161B0 ADRP X0, 0x44D000
	0x03D161B4 LDR X0, [X0 + 0xEB0]
	0x03D161B8 BL 0x1C16CF4
	0x03D161BC MOVZ W8, 0x1
	0x03D161C0 STRB W8, [X21 + 0x8F5]
	0x03D161C4 LDR X0, [X22]
	0x03D161C8 BL 0x211B0E8
	0x03D161CC LDR X8, [X20]
	0x03D161D0 MOV X20, X0
	0x03D161D4 LDR W9, [X8 + 0xE0]
	0x03D161D8 CBNZ W9, 0x3D161E4
	0x03D161DC MOV X0, X8
	0x03D161E0 BL 0x1C16DFC
	0x03D161E4 CBZ X20, 0x3D16284
	0x03D161E8 LDR X8, [X20]
	0x03D161EC LDR X1, [X19]
	0x03D161F0 ADRP X21, 0x44D000
	0x03D161F4 MOV X0, X20
	0x03D161F8 LDP X9, X2, [X8 + 0x1C8]
	0x03D161FC LDR X21, [X21 + 0xEA8]
	0x03D16200 BLR X9
	0x03D16204 LDR X8, [X21]
	0x03D16208 MOV W20, W0
	0x03D1620C MOV X0, X8
	0x03D16210 BL 0x211B0E8
	0x03D16214 CBZ X0, 0x3D16284
	0x03D16218 LDR X8, [X0]
	0x03D1621C LDR X1, [X19 + 0x8]
	0x03D16220 ADRP X21, 0x44D000
	0x03D16224 LDP X9, X2, [X8 + 0x1C8]
	0x03D16228 LDR X21, [X21 + 0xEB0]
	0x03D1622C BLR X9
	0x03D16230 LDR X8, [X21]
	0x03D16234 MOV W21, W0
	0x03D16238 MOV X0, X8
	0x03D1623C BL 0x211B0E8
	0x03D16240 CBZ X0, 0x3D16284
	0x03D16244 LDR X8, [X0]
	0x03D16248 LDR X1, [X19 + 0x10]
	0x03D1624C MOVZ W19, 0x5529
	0x03D16250 MOVK W19, 0xA5550000
	0x03D16254 LDP X9, X2, [X8 + 0x1C8]
	0x03D16258 MADD W20, W20, W19, W21
	0x03D1625C BLR X9
	0x03D16260 MOVZ W8, 0xE79C
	0x03D16264 MOVK W8, 0xA66E0000
	0x03D16268 MUL W8, W8, W19
	0x03D1626C MADD W8, W20, W19, W8
	0x03D16270 LDP X20, X19, [X31 + 0x20]
	0x03D16274 LDP X22, X21, [X31 + 0x10]
	0x03D16278 ADD W0, W0, W8
	0x03D1627C LDR X30, [X31], #0x30
	0x03D16280 RET
	0x03D16284 BL 0x1C16F20
	0x03D16288 STR X30, [X31 - 0x20]!
	0x03D1628C STP X20, X19, [X31 + 0x10]
	0x03D16290 ADRP X19, 0x6D1000
	0x03D16294 ADRP X20, 0x407000
	0x03D16298 LDRB W8, [X19 + 0x8F6]
	0x03D1629C LDR X20, [X20 + 0xB00]
	0x03D162A0 TBNZ X8, 0x0, 0x3D162B8
	0x03D162A4 ADRP X0, 0x407000
	0x03D162A8 LDR X0, [X0 + 0xB00]
	0x03D162AC BL 0x1C16CF4
	0x03D162B0 MOVZ W8, 0x1
	0x03D162B4 STRB W8, [X19 + 0x8F6]
	0x03D162B8 LDR X8, [X20]
	0x03D162BC LDP X20, X19, [X31 + 0x10]
	0x03D162C0 MOVI V0.2D, 0x0
	0x03D162C4 LDR X8, [X8 + 0xB8]
	0x03D162C8 STP V0, V0, [X8]
	0x03D162CC LDR X30, [X31], #0x20
	0x03D162D0 RET
	0x03D162D4 LDR V0, [X0 + 0x40]
	0x03D162D8 RET
	0x03D162DC LDR V0, [X0 + 0x44]
	0x03D162E0 RET
	0x03D162E4 STR X30, [X31 - 0x20]!
	0x03D162E8 STP X20, X19, [X31 + 0x10]
	0x03D162EC MOVI V0.2D, 0x0
	0x03D162F0 STR W31, [X0 + 0x18]
	0x03D162F4 STP V0, V0, [X0 + 0x20]
	0x03D162F8 ADRP X20, 0x6C3000
	0x03D162FC LDRB W8, [X20 + 0x78F]
	0x03D16300 MOV X19, X0
	0x03D16304 CBNZ W8, 0x3D1631C
	0x03D16308 ADRP X0, 0x3E5000
	0x03D1630C LDR X0, [X0 + 0xF08]
	0x03D16310 BL 0x1C16CF4
	0x03D16314 MOVZ W8, 0x1
	0x03D16318 STRB W8, [X20 + 0x78F]
	0x03D1631C ADRP X8, 0x3E5000
	0x03D16320 LDR X8, [X8 + 0xF08]
	0x03D16324 MOV X0, X19
	0x03D16328 MOV X1, X31
	0x03D1632C LDR X8, [X8]
	0x03D16330 LDR X8, [X8 + 0xB8]
	0x03D16334 LDR V0, [X8]
	0x03D16338 STR D0, [X19 + 0x40]
	0x03D1633C LDP X20, X19, [X31 + 0x10]
	0x03D16340 LDR X30, [X31], #0x20
	0x03D16344 B 0x3C36D2C
	0x03D16348 STP X30, X21, [X31 - 0x20]!
	0x03D1634C STP X20, X19, [X31 + 0x10]
	0x03D16350 ADRP X21, 0x6D1000
	0x03D16354 ADRP X20, 0x406000
	0x03D16358 LDRB W8, [X21 + 0x8F7]
	0x03D1635C LDR X20, [X20 + 0xF8]
	0x03D16360 MOV X19, X0
	0x03D16364 TBNZ X8, 0x0, 0x3D16394
	0x03D16368 ADRP X0, 0x44D000
	0x03D1636C LDR X0, [X0 + 0xEB8]
	0x03D16370 BL 0x1C16CF4
	0x03D16374 ADRP X0, 0x44D000
	0x03D16378 LDR X0, [X0 + 0xEC0]
	0x03D1637C BL 0x1C16CF4
	0x03D16380 ADRP X0, 0x406000
	0x03D16384 LDR X0, [X0 + 0xF8]
	0x03D16388 BL 0x1C16CF4
	0x03D1638C MOVZ W8, 0x1
	0x03D16390 STRB W8, [X21 + 0x8F7]
	0x03D16394 LDR X0, [X20]
	0x03D16398 LDR W8, [X0 + 0xE0]
	0x03D1639C CBNZ W8, 0x3D163A8
	0x03D163A0 BL 0x1C16DFC
	0x03D163A4 LDR X0, [X20]
	0x03D163A8 LDR X8, [X0 + 0xB8]
	0x03D163AC LDR X0, [X8]
	0x03D163B0 CBZ X0, 0x3D163F0
	0x03D163B4 ADRP X8, 0x44D000
	0x03D163B8 LDR X8, [X8 + 0xEC0]
	0x03D163BC LDR X1, [X8]
	0x03D163C0 BL 0x249468C
	0x03D163C4 CBZ X0, 0x3D163F0
	0x03D163C8 ADRP X8, 0x44D000
	0x03D163CC LDR X8, [X8 + 0xEB8]
	0x03D163D0 MOV X1, X19
	0x03D163D4 MOV X20, X0
	0x03D163D8 LDR X2, [X8]
	0x03D163DC BL 0x301C194
	0x03D163E0 MOV X0, X20
	0x03D163E4 LDP X20, X19, [X31 + 0x10]
	0x03D163E8 LDP X30, X21, [X31], #0x20
	0x03D163EC RET
	0x03D163F0 BL 0x1C16F20
	0x03D163F4 STP X30, X21, [X31 - 0x20]!
	0x03D163F8 STP X20, X19, [X31 + 0x10]
	0x03D163FC ADRP X21, 0x6D1000
	0x03D16400 ADRP X20, 0x406000
	0x03D16404 LDRB W8, [X21 + 0x8F8]
	0x03D16408 LDR X20, [X20 + 0xF8]
	0x03D1640C MOV W19, W0
	0x03D16410 TBNZ X8, 0x0, 0x3D1644C
	0x03D16414 ADRP X0, 0x44D000
	0x03D16418 LDR X0, [X0 + 0xEC8]
	0x03D1641C BL 0x1C16CF4
	0x03D16420 ADRP X0, 0x44D000
	0x03D16424 LDR X0, [X0 + 0xED0]
	0x03D16428 BL 0x1C16CF4
	0x03D1642C ADRP X0, 0x44D000
	0x03D16430 LDR X0, [X0 + 0xEC0]
	0x03D16434 BL 0x1C16CF4
	0x03D16438 ADRP X0, 0x406000
	0x03D1643C LDR X0, [X0 + 0xF8]
	0x03D16440 BL 0x1C16CF4
	0x03D16444 MOVZ W8, 0x1
	0x03D16448 STRB W8, [X21 + 0x8F8]
	0x03D1644C LDR X0, [X20]
	0x03D16450 LDR W8, [X0 + 0xE0]
	0x03D16454 CBNZ W8, 0x3D16460
	0x03D16458 BL 0x1C16DFC
	0x03D1645C LDR X0, [X20]
	0x03D16460 LDR X8, [X0 + 0xB8]
	0x03D16464 LDR X0, [X8]
	0x03D16468 CBZ X0, 0x3D164D0
	0x03D1646C ADRP X8, 0x44D000
	0x03D16470 LDR X8, [X8 + 0xEC0]
	0x03D16474 LDR X1, [X8]
	0x03D16478 BL 0x249468C
	0x03D1647C CMP W19, 0x1
	0x03D16480 MOV X20, X0
	0x03D16484 B.LT 0x3D164C0
	0x03D16488 CBZ X20, 0x3D164D0
	0x03D1648C ADRP X8, 0x44D000
	0x03D16490 LDR X8, [X8 + 0xEC8]
	0x03D16494 MOV X0, X20
	0x03D16498 LDR X1, [X8]
	0x03D1649C BL 0x301BB2C
	0x03D164A0 CMP W0, W19
	0x03D164A4 B.GE 0x3D164C0
	0x03D164A8 ADRP X8, 0x44D000
	0x03D164AC LDR X8, [X8 + 0xED0]
	0x03D164B0 MOV X0, X20
	0x03D164B4 MOV W1, W19
	0x03D164B8 LDR X2, [X8]
	0x03D164BC BL 0x301BB48
	0x03D164C0 MOV X0, X20
	0x03D164C4 LDP X20, X19, [X31 + 0x10]
	0x03D164C8 LDP X30, X21, [X31], #0x20
	0x03D164CC RET
	0x03D164D0 BL 0x1C16F20
	0x03D164D4 STR X30, [X31 - 0x20]!
	0x03D164D8 STP X20, X19, [X31 + 0x10]
	0x03D164DC ADRP X20, 0x6D1000
	0x03D164E0 LDRB W8, [X20 + 0x8F9]
	0x03D164E4 MOV X19, X0
	0x03D164E8 TBNZ X8, 0x0, 0x3D16518
	0x03D164EC ADRP X0, 0x44D000
	0x03D164F0 LDR X0, [X0 + 0xED8]
	0x03D164F4 BL 0x1C16CF4
	0x03D164F8 ADRP X0, 0x44D000
	0x03D164FC LDR X0, [X0 + 0xEE0]
	0x03D16500 BL 0x1C16CF4
	0x03D16504 ADRP X0, 0x406000
	0x03D16508 LDR X0, [X0 + 0xF8]
	0x03D1650C BL 0x1C16CF4
	0x03D16510 MOVZ W8, 0x1
	0x03D16514 STRB W8, [X20 + 0x8F9]
	0x03D16518 CBZ X19, 0x3D16584
	0x03D1651C LDP W2, W8, [X19 + 0x18]
	0x03D16520 ADRP X20, 0x406000
	0x03D16524 LDR X20, [X20 + 0xF8]
	0x03D16528 ADD W8, W8, 0x1
	0x03D1652C CMP W2, 0x1
	0x03D16530 STP W31, W8, [X19 + 0x18]
	0x03D16534 B.LT 0x3D16548
	0x03D16538 LDR X0, [X19 + 0x10]
	0x03D1653C MOV W1, W31
	0x03D16540 MOV X3, X31
	0x03D16544 BL 0x339FA34
	0x03D16548 LDR X0, [X20]
	0x03D1654C LDR W8, [X0 + 0xE0]
	0x03D16550 CBNZ W8, 0x3D1655C
	0x03D16554 BL 0x1C16DFC
	0x03D16558 LDR X0, [X20]
	0x03D1655C LDR X8, [X0 + 0xB8]
	0x03D16560 LDR X0, [X8]
	0x03D16564 CBZ X0, 0x3D16584
	0x03D16568 ADRP X8, 0x44D000
	0x03D1656C LDR X8, [X8 + 0xEE0]
	0x03D16570 MOV X1, X19
	0x03D16574 LDP X20, X19, [X31 + 0x10]
	0x03D16578 LDR X2, [X8]
	0x03D1657C LDR X30, [X31], #0x20
	0x03D16580 B 0x24946D8
	0x03D16584 BL 0x1C16F20
	0x03D16588 STR X30, [X31 - 0x40]!
	0x03D1658C STP X24, X23, [X31 + 0x10]
	0x03D16590 STP X22, X21, [X31 + 0x20]
	0x03D16594 STP X20, X19, [X31 + 0x30]
	0x03D16598 ADRP X20, 0x6D1000
	0x03D1659C ADRP X19, 0x44D000
	0x03D165A0 LDRB W8, [X20 + 0x8FA]
	0x03D165A4 LDR X19, [X19 + 0xEE8]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], D8
	003 Move [X31+96], X30
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X20, 0x6D3000
	008 Move W8, [X20+2281]
	009 Move X19, X0
	010 Move [X31+88], X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {74}
	015 Move X0, 0x44F000
	016 Move X0, [X0+3520]
	017 Call 0x1C17CF4
	018 Move X0, 0x406000
	019 Move X0, [X0+4048]
	020 Call 0x1C17CF4
	021 Move X0, 0x44F000
	022 Move X0, [X0+3528]
	023 Call 0x1C17CF4
	024 Move X0, 0x44F000
	025 Move X0, [X0+3536]
	026 Call 0x1C17CF4
	027 Move X0, 0x406000
	028 Move X0, [X0+4056]
	029 Call 0x1C17CF4
	030 Move X0, 0x44F000
	031 Move X0, [X0+3544]
	032 Call 0x1C17CF4
	033 Move X0, 0x40A000
	034 Move X0, [X0+1480]
	035 Call 0x1C17CF4
	036 Move X0, 0x44E000
	037 Move X0, [X0+3552]
	038 Call 0x1C17CF4
	039 Move X0, 0x44E000
	040 Move X0, [X0+3560]
	041 Call 0x1C17CF4
	042 Move X0, 0x44E000
	043 Move X0, [X0+3568]
	044 Call 0x1C17CF4
	045 Move X0, 0x44E000
	046 Move X0, [X0+3576]
	047 Call 0x1C17CF4
	048 Move X0, 0x44E000
	049 Move X0, [X0+3584]
	050 Call 0x1C17CF4
	051 Move X0, 0x405000
	052 Move X0, [X0+4064]
	053 Call 0x1C17CF4
	054 Move X0, 0x44E000
	055 Move X0, [X0+3592]
	056 Call 0x1C17CF4
	057 Move X0, 0x3DE000
	058 Move X0, [X0+1432]
	059 Call 0x1C17CF4
	060 Move X0, 0x408000
	061 Move X0, [X0+3336]
	062 Call 0x1C17CF4
	063 Move X0, 0x44E000
	064 Move X0, [X0+3600]
	065 Call 0x1C17CF4
	066 Move X0, 0x44E000
	067 Move X0, [X0+3608]
	068 Call 0x1C17CF4
	069 Move X0, 0x3DE000
	070 Move X0, [X0+1728]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X20+2281], W8
	074 Add X8, X31, 88
	075 Move [X31+64], X31
	076 Move [X31+72], X8
	077 Move W8, [X19+16]
	078 Move X21, 0x44E000
	079 Move X21, [X21+3560]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Compare W8, 0
	083 JumpIfNotEqual {131}
	084 Move TEMP, 0
	085 Not TEMP
	086 Move W8, TEMP
	087 Move [X19+16], W8
	088 Move X8, 0x44E000
	089 Move X8, [X8+3576]
	090 Move X0, [X8]
	091 Call 0x1C17F10
	092 Move X8, 0x44E000
	093 Move X8, [X8+3568]
	094 Move X19, X0
	095 Move X1, [X8]
	096 Call HashSet`1<Object>..ctor, X0
	097 Move X9, [X31+88]
	098 Move X8, [X9+40]
	099 Move [X9+48], X19
	100 Compare X8, 0
	101 JumpIfEqual {129}
	102 Move X0, [X8+48]
	103 Compare X0, 0
	104 JumpIfEqual {130}
	105 Move X8, 0x44E000
	106 Move X8, [X8+3584]
	107 Move X1, [X8]
	108 Add X8, X31, 8
	109 Call List`1<Object>.GetEnumerator, X0
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 Move X9, [X31+24]
	112 Move X8, [X31+88]
	113 Move TEMP, 2
	114 Not TEMP
	115 Move W10, TEMP
	116 Move [X31+2], V0
	117 Move [X31+48], X9
	118 Move [X8+72], X9
	119 Move [X8+56], V0
	120 Move [X8+16], W10
	121 Move TEMP, 3
	122 Not TEMP
	123 Move W8, TEMP
	124 Move [X19+16], W8
	125 Move TEMP, 4
	126 Not TEMP
	127 Move W8, TEMP
	128 Move [X19+16], W8
	129 Call 0x1C17F20
	130 Call 0x1C17F20
	131 Move W0, W31
	132 Move X8, [X0+72]
	133 Move [X0+80], X8
	134 Compare X8, 0
	135 JumpIfEqual {167}
	136 Move X0, X8
	137 Move X1, X31
	138 Call VisualElementAsset.get_hasStylesheets, X0
	139 Move X8, [X31+88]
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {200}
	144 Move X0, [X8+80]
	145 Compare X0, 0
	146 JumpIfEqual {168}
	147 Move X1, X31
	148 Call VisualElementAsset.get_stylesheets, X0
	149 Compare X0, 0
	150 JumpIfEqual {169}
	151 Move X8, 0x44E000
	152 Move X8, [X8+3592]
	153 Move X1, [X8]
	154 Add X8, X31, 8
	155 Call List`1<Object>.GetEnumerator, X0
	156 NotImplemented "Instruction LDUR not yet implemented."
	157 Move X8, [X31+24]
	158 Move X19, [X31+88]
	159 Move TEMP, 3
	160 Not TEMP
	161 Move W9, TEMP
	162 Move [X31+2], V0
	163 Move [X31+48], X8
	164 Move [X19+104], X8
	165 Move [X19+88], V0
	166 Move [X19+16], W9
	167 Call 0x1C17F20
	168 Call 0x1C17F20
	169 Call 0x1C17F20
	170 Move X1, [X0+104]
	171 Move X8, [X0+48]
	172 Move [X0+112], X1
	173 Compare X8, 0
	174 JumpIfEqual {246}
	175 Move X2, [X21]
	176 Move X0, X8
	177 Call HashSet`1<Object>.Contains, X0, X1
	178 Move X19, [X31+88]
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {233}
	183 Move [X19+112], X31
	184 Move X8, 0x44E000
	185 Move X8, [X8+3528]
	186 Add X0, X19, 88
	187 Move X1, [X8]
	188 Call Enumerator<Object>.MoveNext, X0
	189 Move W8, W0
	190 Move X0, [X31+88]
	191 Move TEMP, X8
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfEqual {170}
	195 Call <get_stylesheets>d__23.<>m__Finally2, X0
	196 Move X8, [X31+88]
	197 Move [X8+88], X31
	198 Move [X8+96], X31
	199 Move [X8+104], X31
	200 Move X0, [X8+80]
	201 Compare X0, 0
	202 JumpIfEqual {245}
	203 Move X1, X31
	204 Call VisualElementAsset.get_hasStylesheetPaths, X0
	205 Move X8, [X31+88]
	206 Move TEMP, X0
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfNotEqual {351}
	210 Move X0, [X8+80]
	211 Compare X0, 0
	212 JumpIfEqual {247}
	213 Move X1, X31
	214 Call VisualElementAsset.get_stylesheetPaths, X0
	215 Compare X0, 0
	216 JumpIfEqual {248}
	217 Move X8, 0x405000
	218 Move X8, [X8+4064]
	219 Move X1, [X8]
	220 Add X8, X31, 8
	221 Call List`1<Object>.GetEnumerator, X0
	222 NotImplemented "Instruction LDUR not yet implemented."
	223 Move X9, [X31+24]
	224 Move X8, [X31+88]
	225 Move TEMP, 4
	226 Not TEMP
	227 Move W10, TEMP
	228 Move [X31+2], V0
	229 Move [X31+48], X9
	230 Move [X8+136], X9
	231 Move [X8+120], V0
	232 Move [X8+16], W10
	233 Move X0, [X19+48]
	234 Compare X0, 0
	235 JumpIfEqual {249}
	236 Move X8, 0x44E000
	237 Move X1, [X19+112]
	238 Move X8, [X8+3552]
	239 Move X2, [X8]
	240 Call HashSet`1<Object>.Add, X0, X1
	241 Move X8, [X31+88]
	242 Move W0, 1
	243 Move X9, [X8+112]
	244 Move [X8+16], W0
	245 Call 0x1C17F20
	246 Call 0x1C17F20
	247 Call 0x1C17F20
	248 Call 0x1C17F20
	249 Call 0x1C17F20
	250 Move [X8+24], X9
	251 Move X19, [X0+136]
	252 Move X8, 0x3DE000
	253 Move X8, [X8+1728]
	254 Move [X0+144], X19
	255 Move X0, [X8]
	256 Move X8, 0x44E000
	257 Move X8, [X8+3600]
	258 Move W9, [X0+224]
	259 Move X20, [X8]
	260 Compare W9, 0
	261 JumpIfNotEqual {263}
	262 Call 0x1C17DFC
	263 Move X0, X20
	264 Move X1, X31
	265 Call Type.GetTypeFromHandle, X0
	266 Move X8, 0x40A000
	267 Move X8, [X8+1480]
	268 Move X20, X0
	269 Move X0, [X8]
	270 Move W8, [X0+224]
	271 Compare W8, 0
	272 JumpIfNotEqual {274}
	273 Call 0x1C17DFC
	274 Move X0, X31
	275 Call GUIUtility.get_pixelsPerPoint
	276 Move X8, 0x408000
	277 Move X8, [X8+3336]
	278 Move V8, V0
	279 Move X0, [X8]
	280 Move W8, [X0+224]
	281 Compare W8, 0
	282 JumpIfNotEqual {284}
	283 Call 0x1C17DFC
	284 Move X0, X19
	285 Move X1, X20
	286 Move V0, V8
	287 Move X2, X31
	288 Call Panel.LoadResource, X0, X1, V0
	289 Move X8, 0x3DE000
	290 Move X8, [X8+1432]
	291 Compare X0, 0
	292 JumpIfEqual {300}
	293 Move X9, 0x44E000
	294 Move X9, [X9+3608]
	295 Move X10, [X0]
	296 Move X9, [X9]
	297 Move W12, [X10+304]
	298 Move W11, [X9+304]
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move X19, X31
	301 Move X10, [X10+200]
	302 Add X10, X10, X11
	303 NotImplemented "Instruction LDUR not yet implemented."
	304 NotImplemented "Instruction CMP not yet implemented."
	305 NotImplemented "Instruction CSEL not yet implemented."
	306 Move X9, [X31+88]
	307 Move [X9+152], X19
	308 Move X0, [X8]
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move X0, X19
	314 Move X1, X31
	315 Move X2, X31
	316 Call Object.op_Inequality, X0, X1
	317 Move TEMP, X0
	318 And TEMP, TEMP, 1
	319 Compare TEMP, 1
	320 JumpIfNotEqual {332}
	321 Move X8, [X31+88]
	322 Move X0, [X8+48]
	323 Compare X0, 0
	324 JumpIfEqual {390}
	325 Move X1, [X8+152]
	326 Move X2, [X21]
	327 Call HashSet`1<Object>.Contains, X0, X1
	328 Move TEMP, X0
	329 And TEMP, TEMP, 1
	330 Compare TEMP, 1
	331 JumpIfNotEqual {376}
	332 Move X8, [X31+88]
	333 Move [X8+144], X31
	334 Move [X8+152], X31
	335 Move X9, 0x405000
	336 Move X9, [X9+4048]
	337 Add X0, X8, 120
	338 Move X1, [X9]
	339 Call Enumerator<Object>.MoveNext, X0
	340 Move W8, W0
	341 Move X0, [X31+88]
	342 Move TEMP, X8
	343 And TEMP, TEMP, 1
	344 Compare TEMP, 1
	345 JumpIfEqual {251}
	346 Call <get_stylesheets>d__23.<>m__Finally3, X0
	347 Move X8, [X31+88]
	348 Move [X8+120], X31
	349 Move [X8+128], X31
	350 Move [X8+136], X31
	351 Move [X8+80], X31
	352 Move X9, 0x44E000
	353 Move X9, [X9+3520]
	354 Add X0, X8, 56
	355 Move X1, [X9]
	356 Call Enumerator<Object>.MoveNext, X0
	357 Move W8, W0
	358 Move X0, [X31+88]
	359 Move TEMP, X8
	360 And TEMP, TEMP, 1
	361 Compare TEMP, 1
	362 JumpIfEqual {132}
	363 Call <get_stylesheets>d__23.<>m__Finally1, X0
	364 Move X8, [X31+88]
	365 Move W0, W31
	366 Move [X8+56], X31
	367 Move [X8+64], X31
	368 Move [X8+72], X31
	369 Move X20, [X31+112]
	370 Move X19, [X31+120]
	371 Move X30, [X31+96]
	372 Move X21, [X31+104]
	373 Move V8, [X31+80]
	374 Add X31, X31, 128
	375 Return X0
	376 Move X8, [X31+88]
	377 Move X0, [X8+48]
	378 Compare X0, 0
	379 JumpIfEqual {391}
	380 Move X1, [X8+152]
	381 Move X8, 0x44E000
	382 Move X8, [X8+3552]
	383 Move X2, [X8]
	384 Call HashSet`1<Object>.Add, X0, X1
	385 Move X8, [X31+88]
	386 Move W10, 2
	387 Move W0, 1
	388 Move X9, [X8+152]
	389 Move [X8+16], W10
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 NotImplemented "Instruction CMP not yet implemented."
	393 Call 0x3EB2AD0
	394 Move X19, [X0]
	395 Move [X31+64], X19
	396 Call 0x3EB2AE0
	397 Compare X19, 0
	398 JumpIfEqual {131}
	399 Add X8, X31, 64
	400 Add X0, X8, 8
	401 Call 0x1C10C88
	402 Move X0, X19
	403 Call 0x1C17F18
	404 Compare X19, 0
	405 JumpIfNotEqual {407}
	406 Call 0x1D2D690
	407 Move X0, [X31+88]
	408 Call <get_stylesheets>d__23.System.IDisposable.Dispose, X0
	409 Move X0, X19
	410 Call 0x1C17F18
	411 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x03D16648 LDR X2, [X20]
	0x03D1664C MOV X1, X19
	0x03D16650 MOV X3, X31
	0x03D16654 MOV X20, X0
	0x03D16658 BL 0x2D27AA8
	0x03D1665C LDR X0, [X23]
	0x03D16660 BL 0x1C16F10
	0x03D16664 LDR X3, [X22]
	0x03D16668 MOVZ W2, 0x14
	0x03D1666C MOV X1, X20
	0x03D16670 MOV X19, X0
	0x03D16674 BL 0x24944D4
	0x03D16678 LDR X8, [X21]
	0x03D1667C LDP X22, X21, [X31 + 0x20]
	0x03D16680 LDP X24, X23, [X31 + 0x10]
	0x03D16684 LDR X8, [X8 + 0xB8]
	0x03D16688 STR X19, [X8]
	0x03D1668C LDP X20, X19, [X31 + 0x30]
	0x03D16690 LDR X30, [X31], #0x40
	0x03D16694 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6D2000
	006 Move X20, 0x44E000
	007 Move W8, [X21+2282]
	008 Move X20, [X20+3624]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x44E000
	015 Move X0, [X0+3624]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2282], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 56
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<Object>.Dispose, X0
	030 Return 

Method: System.Void <>m__Finally2()

Disassembly:
	0x03D165A8 TBNZ X8, 0x0, 0x3D165FC
	0x03D165AC ADRP X0, 0x44D000
	0x03D165B0 LDR X0, [X0 + 0xEF0]
	0x03D165B4 BL 0x1C16CF4
	0x03D165B8 ADRP X0, 0x44D000
	0x03D165BC LDR X0, [X0 + 0xEF8]
	0x03D165C0 BL 0x1C16CF4
	0x03D165C4 ADRP X0, 0x44D000
	0x03D165C8 LDR X0, [X0 + 0xF00]
	0x03D165CC BL 0x1C16CF4
	0x03D165D0 ADRP X0, 0x44D000
	0x03D165D4 LDR X0, [X0 + 0xF08]
	0x03D165D8 BL 0x1C16CF4
	0x03D165DC ADRP X0, 0x44D000
	0x03D165E0 LDR X0, [X0 + 0xEE8]
	0x03D165E4 BL 0x1C16CF4
	0x03D165E8 ADRP X0, 0x406000
	0x03D165EC LDR X0, [X0 + 0xF8]
	0x03D165F0 BL 0x1C16CF4
	0x03D165F4 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6D2000
	006 Move X20, 0x44E000
	007 Move W8, [X21+2283]
	008 Move X20, [X20+3616]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x44E000
	015 Move X0, [X0+3616]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2283], W8
	019 Move TEMP, 2
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 88
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<Object>.Dispose, X0
	030 Return 

Method: System.Void <>m__Finally3()

Disassembly:
	0x03D165F8 STRB W8, [X20 + 0x8FA]
	0x03D165FC LDR X0, [X19]
	0x03D16600 ADRP X24, 0x44D000
	0x03D16604 ADRP X20, 0x44D000
	0x03D16608 ADRP X23, 0x44D000
	0x03D1660C ADRP X22, 0x44D000
	0x03D16610 ADRP X21, 0x406000
	0x03D16614 LDR X24, [X24 + 0xEF0]
	0x03D16618 LDR W8, [X0 + 0xE0]
	0x03D1661C LDR X20, [X20 + 0xF08]
	0x03D16620 LDR X23, [X23 + 0xF00]
	0x03D16624 LDR X22, [X22 + 0xEF8]
	0x03D16628 LDR X21, [X21 + 0xF8]
	0x03D1662C CBNZ W8, 0x3D16638
	0x03D16630 BL 0x1C16DFC
	0x03D16634 LDR X0, [X19]
	0x03D16638 LDR X8, [X0 + 0xB8]
	0x03D1663C LDR X0, [X24]
	0x03D16640 LDR X19, [X8]
	0x03D16644 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6D2000
	006 Move X20, 0x405000
	007 Move W8, [X21+2284]
	008 Move X20, [X20+4040]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x405000
	015 Move X0, [X0+4040]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2284], W8
	019 Move TEMP, 2
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 120
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<Object>.Dispose, X0
	030 Return 

Method: UnityEngine.UIElements.StyleSheet System.Collections.Generic.IEnumerator<UnityEngine.UIElements.StyleSheet>.get_Current()

Disassembly:
	0x03D16698 STR X30, [X31 - 0x20]!
	0x03D1669C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x03D166A0 ADRP X19, 0x6D1000
	0x03D166A4 ADRP X20, 0x44D000
	0x03D166A8 LDRB W8, [X19 + 0x8FB]
	0x03D166AC LDR X20, [X20 + 0xEE8]
	0x03D166B0 TBNZ X8, 0x0, 0x3D166C8
	0x03D166B4 ADRP X0, 0x44D000
	0x03D166B8 LDR X0, [X0 + 0xEE8]
	0x03D166BC BL 0x1C16CF4
	0x03D166C0 MOVZ W8, 0x1
	0x03D166C4 STRB W8, [X19 + 0x8FB]
	0x03D166C8 LDR X0, [X20]
	0x03D166CC BL 0x1C16F10
	0x03D166D0 MOV X1, X31
	0x03D166D4 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x3DE000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x44E000
	011 Move X0, [X0+3632]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03D166D8 BL 0x33BDD8C
	0x03D166DC LDR X8, [X20]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<UnityEngine.UIElements.StyleSheet> System.Collections.Generic.IEnumerable<UnityEngine.UIElements.StyleSheet>.GetEnumerator()

Disassembly:
	0x03D166E0 LDR X8, [X8 + 0xB8]
	0x03D166E4 STR X19, [X8]
	0x03D166E8 LDP X20, X19, [X31 + 0x10]
	0x03D166EC LDR X30, [X31], #0x20
	0x03D166F0 RET
	0x03D166F4 MOV X1, X31
	0x03D166F8 B 0x33BDD8C
	0x03D166FC STP X30, X21, [X31 - 0x20]!
	0x03D16700 STP X20, X19, [X31 + 0x10]
	0x03D16704 ADRP X20, 0x6D1000
	0x03D16708 ADRP X21, 0x44D000
	0x03D1670C ADRP X19, 0x44D000
	0x03D16710 LDRB W8, [X20 + 0x8FC]
	0x03D16714 LDR X21, [X21 + 0xF10]
	0x03D16718 LDR X19, [X19 + 0xF18]
	0x03D1671C TBNZ X8, 0x0, 0x3D16740
	0x03D16720 ADRP X0, 0x44D000
	0x03D16724 LDR X0, [X0 + 0xF18]
	0x03D16728 BL 0x1C16CF4
	0x03D1672C ADRP X0, 0x44D000
	0x03D16730 LDR X0, [X0 + 0xF10]
	0x03D16734 BL 0x1C16CF4
	0x03D16738 MOVZ W8, 0x1
	0x03D1673C STRB W8, [X20 + 0x8FC]
	0x03D16740 LDR X0, [X21]
	0x03D16744 BL 0x1C16F10
	0x03D16748 LDR X1, [X19]
	0x03D1674C MOV X19, X0
	0x03D16750 BL 0x301B7C4
	0x03D16754 MOV X0, X19
	0x03D16758 LDP X20, X19, [X31 + 0x10]
	0x03D1675C LDP X30, X21, [X31], #0x20
	0x03D16760 RET
	0x03D16764 STR X30, [X31 - 0x30]!
	0x03D16768 STP X22, X21, [X31 + 0x10]
	0x03D1676C STP X20, X19, [X31 + 0x20]
	0x03D16770 ADRP X20, 0x6D1000
	0x03D16774 LDRB W8, [X20 + 0x8FD]
	0x03D16778 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6D2000
	005 Move W8, [X20+2285]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x44E000
	012 Move X0, [X0+3640]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2285], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X8, 0x44E000
	024 Move X8, [X8+3640]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call Object..ctor, X0
	030 Move X0, X31
	031 Move [X20+16], W31
	032 Call Environment.get_CurrentManagedThreadId
	033 Move [X20+32], W0
	034 Move X8, [X19+40]
	035 Move X19, X20
	036 Move [X20+40], X8
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03D1677C TBNZ X8, 0x0, 0x3D167A0

ISIL:
	001 Call <get_stylesheets>d__23.System.Collections.Generic.IEnumerable<UnityEngine.UIElements.StyleSheet>.GetEnumerator, X0
	002 Return X0

