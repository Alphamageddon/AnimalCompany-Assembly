Type: UnityEngine.UIElements.ComputedTransitionUtils

Method: System.Void UpdateComputedTransitions(ref UnityEngine.UIElements.ComputedStyle computedStyle)

Disassembly:
	0x03DE3B24 BL 0x1C16CF4
	0x03DE3B28 ADRP X0, 0x386000
	0x03DE3B2C LDR X0, [X0 + 0x7B0]
	0x03DE3B30 BL 0x1C16CF4
	0x03DE3B34 ADRP X0, 0x386000
	0x03DE3B38 LDR X0, [X0 + 0x7B8]
	0x03DE3B3C BL 0x1C16CF4
	0x03DE3B40 ADRP X0, 0x386000
	0x03DE3B44 LDR X0, [X0 + 0x7C0]
	0x03DE3B48 BL 0x1C16CF4
	0x03DE3B4C ADRP X0, 0x386000
	0x03DE3B50 LDR X0, [X0 + 0x7C8]
	0x03DE3B54 BL 0x1C16CF4
	0x03DE3B58 ADRP X0, 0x386000
	0x03DE3B5C LDR X0, [X0 + 0x7D0]
	0x03DE3B60 BL 0x1C16CF4
	0x03DE3B64 ADRP X0, 0x386000
	0x03DE3B68 LDR X0, [X0 + 0x7D8]
	0x03DE3B6C BL 0x1C16CF4
	0x03DE3B70 ADRP X0, 0x386000
	0x03DE3B74 LDR X0, [X0 + 0x7E0]
	0x03DE3B78 BL 0x1C16CF4
	0x03DE3B7C ADRP X0, 0x386000
	0x03DE3B80 LDR X0, [X0 + 0x7E8]
	0x03DE3B84 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x606000
	005 Move W8, [X20+502]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x382000
	012 Move X0, [X0+616]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+502], W8
	016 Move X8, [X19+80]
	017 Compare X8, 0
	018 JumpIfNotEqual {29}
	019 Move X8, 0x382000
	020 Move X8, [X8+616]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Call ComputedTransitionUtils.GetOrComputeTransitionPropertyData, X0
	028 Move [X19+80], X0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return 

Method: System.Boolean HasTransitionProperty(ref UnityEngine.UIElements.ComputedStyle computedStyle, UnityEngine.UIElements.StyleSheets.StylePropertyId id)

Disassembly:
	0x03DE3D2C LDR X20, [X8]
	0x03DE3D30 LDR X0, [X9]
	0x03DE3D34 BL 0x1C16F10
	0x03DE3D38 ADRP X8, 0x386000
	0x03DE3D3C LDR X8, [X8 + 0x7D0]
	0x03DE3D40 MOV X1, X20
	0x03DE3D44 MOV X3, X31
	0x03DE3D48 MOV X19, X0
	0x03DE3D4C LDR X2, [X8]
	0x03DE3D50 BL 0x2D32CC4
	0x03DE3D54 LDR X8, [X21]
	0x03DE3D58 LDR X8, [X8 + 0xB8]
	0x03DE3D5C STR X19, [X8 + 0x18]
	0x03DE3D60 B 0x3DE4710
	0x03DE3D64 ADRP X21, 0x386000
	0x03DE3D68 LDR X21, [X21 + 0x810]
	0x03DE3D6C LDR X0, [X21]
	0x03DE3D70 LDR W8, [X0 + 0xE0]
	0x03DE3D74 CBNZ W8, 0x3DE3D80
	0x03DE3D78 BL 0x1C16DFC
	0x03DE3D7C LDR X0, [X21]
	0x03DE3D80 LDR X8, [X0 + 0xB8]
	0x03DE3D84 LDR X19, [X8 + 0x20]
	0x03DE3D88 CBNZ X19, 0x3DE4710
	0x03DE3D8C LDR W8, [X0 + 0xE0]
	0x03DE3D90 CBNZ W8, 0x3DE3D9C
	0x03DE3D94 BL 0x1C16DFC
	0x03DE3D98 LDR X0, [X21]
	0x03DE3D9C ADRP X9, 0x33A000
	0x03DE3DA0 LDR X8, [X0 + 0xB8]
	0x03DE3DA4 LDR X9, [X9 + 0xD10]
	0x03DE3DA8 LDR X20, [X8]
	0x03DE3DAC LDR X0, [X9]
	0x03DE3DB0 BL 0x1C16F10
	0x03DE3DB4 ADRP X8, 0x386000
	0x03DE3DB8 LDR X8, [X8 + 0x7D8]
	0x03DE3DBC MOV X1, X20
	0x03DE3DC0 MOV X3, X31
	0x03DE3DC4 MOV X19, X0
	0x03DE3DC8 LDR X2, [X8]
	0x03DE3DCC BL 0x2D32CC4
	0x03DE3DD0 LDR X8, [X21]
	0x03DE3DD4 LDR X8, [X8 + 0xB8]
	0x03DE3DD8 STR X19, [X8 + 0x20]
	0x03DE3DDC B 0x3DE4710
	0x03DE3DE0 ADRP X21, 0x386000
	0x03DE3DE4 LDR X21, [X21 + 0x810]
	0x03DE3DE8 LDR X0, [X21]
	0x03DE3DEC LDR W8, [X0 + 0xE0]
	0x03DE3DF0 CBNZ W8, 0x3DE3DFC
	0x03DE3DF4 BL 0x1C16DFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x606000
	009 Move W8, [X21+503]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x381000
	017 Move X0, [X0+3432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+503], W8
	021 Move X8, [X20+80]
	022 Compare X8, 0
	023 JumpIfEqual {65}
	024 Move W8, [X8+24]
	025 Move X22, 0x381000
	026 Move X22, [X22+3432]
	027 Move W24, 24
	028 Subtract W23, W8, 1
	029 Move TEMP, X23
	030 And TEMP, TEMP, -2147483648
	031 Compare TEMP, -2147483648
	032 JumpIfEqual {56}
	033 Move X8, [X20+80]
	034 Compare X8, 0
	035 JumpIfEqual {65}
	036 Move W9, [X8+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction UMADDL not yet implemented."
	039 Move W21, [X8+32]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, [X22]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move W0, W21
	047 Move W1, W19
	048 Move X2, X31
	049 Call StylePropertyUtil.IsMatchingShorthand, X0, X1
	050 Subtract W23, W23, 1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {29}
	055 Move W0, 1
	056 Move W0, W31
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X22, [X31+32]
	060 Move X21, [X31+40]
	061 Move X24, [X31+16]
	062 Move X23, [X31+24]
	063 Move X30, [X31+64]
	064 Return X0
	065 Call 0x1C17F20
	066 Call 0x1C17F28

Method: System.Boolean GetTransitionProperty(ref UnityEngine.UIElements.ComputedStyle computedStyle, UnityEngine.UIElements.StyleSheets.StylePropertyId id, out UnityEngine.UIElements.ComputedTransitionProperty result)

Disassembly:
	0x03DE3DF8 LDR X0, [X21]
	0x03DE3DFC LDR X8, [X0 + 0xB8]
	0x03DE3E00 LDR X19, [X8 + 0x28]
	0x03DE3E04 CBNZ X19, 0x3DE4710
	0x03DE3E08 LDR W8, [X0 + 0xE0]
	0x03DE3E0C CBNZ W8, 0x3DE3E18
	0x03DE3E10 BL 0x1C16DFC
	0x03DE3E14 LDR X0, [X21]
	0x03DE3E18 ADRP X9, 0x33A000
	0x03DE3E1C LDR X8, [X0 + 0xB8]
	0x03DE3E20 LDR X9, [X9 + 0xD10]
	0x03DE3E24 LDR X20, [X8]
	0x03DE3E28 LDR X0, [X9]
	0x03DE3E2C BL 0x1C16F10
	0x03DE3E30 ADRP X8, 0x386000
	0x03DE3E34 LDR X8, [X8 + 0x7E0]
	0x03DE3E38 MOV X1, X20
	0x03DE3E3C MOV X3, X31
	0x03DE3E40 MOV X19, X0
	0x03DE3E44 LDR X2, [X8]
	0x03DE3E48 BL 0x2D32CC4
	0x03DE3E4C LDR X8, [X21]
	0x03DE3E50 LDR X8, [X8 + 0xB8]
	0x03DE3E54 STR X19, [X8 + 0x28]
	0x03DE3E58 B 0x3DE4710
	0x03DE3E5C ADRP X21, 0x386000
	0x03DE3E60 LDR X21, [X21 + 0x810]
	0x03DE3E64 LDR X0, [X21]
	0x03DE3E68 LDR W8, [X0 + 0xE0]
	0x03DE3E6C CBNZ W8, 0x3DE3E78
	0x03DE3E70 BL 0x1C16DFC
	0x03DE3E74 LDR X0, [X21]
	0x03DE3E78 LDR X8, [X0 + 0xB8]
	0x03DE3E7C LDR X19, [X8 + 0x30]
	0x03DE3E80 CBNZ X19, 0x3DE4710
	0x03DE3E84 LDR W8, [X0 + 0xE0]
	0x03DE3E88 CBNZ W8, 0x3DE3E94
	0x03DE3E8C BL 0x1C16DFC
	0x03DE3E90 LDR X0, [X21]
	0x03DE3E94 ADRP X9, 0x33A000
	0x03DE3E98 LDR X8, [X0 + 0xB8]
	0x03DE3E9C LDR X9, [X9 + 0xD10]
	0x03DE3EA0 LDR X20, [X8]
	0x03DE3EA4 LDR X0, [X9]
	0x03DE3EA8 BL 0x1C16F10
	0x03DE3EAC ADRP X8, 0x386000
	0x03DE3EB0 LDR X8, [X8 + 0x7E8]
	0x03DE3EB4 MOV X1, X20
	0x03DE3EB8 MOV X3, X31
	0x03DE3EBC MOV X19, X0
	0x03DE3EC0 LDR X2, [X8]
	0x03DE3EC4 BL 0x2D32CC4
	0x03DE3EC8 LDR X8, [X21]
	0x03DE3ECC LDR X8, [X8 + 0xB8]
	0x03DE3ED0 STR X19, [X8 + 0x30]
	0x03DE3ED4 B 0x3DE4710
	0x03DE3ED8 ADRP X21, 0x386000
	0x03DE3EDC LDR X21, [X21 + 0x810]
	0x03DE3EE0 LDR X0, [X21]
	0x03DE3EE4 LDR W8, [X0 + 0xE0]
	0x03DE3EE8 CBNZ W8, 0x3DE3EF4
	0x03DE3EEC BL 0x1C16DFC
	0x03DE3EF0 LDR X0, [X21]
	0x03DE3EF4 LDR X8, [X0 + 0xB8]
	0x03DE3EF8 LDR X19, [X8 + 0x38]
	0x03DE3EFC CBNZ X19, 0x3DE4710
	0x03DE3F00 LDR W8, [X0 + 0xE0]
	0x03DE3F04 CBNZ W8, 0x3DE3F10
	0x03DE3F08 BL 0x1C16DFC
	0x03DE3F0C LDR X0, [X21]
	0x03DE3F10 ADRP X9, 0x33A000
	0x03DE3F14 LDR X8, [X0 + 0xB8]
	0x03DE3F18 LDR X9, [X9 + 0xD10]
	0x03DE3F1C LDR X20, [X8]
	0x03DE3F20 LDR X0, [X9]
	0x03DE3F24 BL 0x1C16F10
	0x03DE3F28 ADRP X8, 0x386000
	0x03DE3F2C LDR X8, [X8 + 0x7F0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X23+40]
	013 Move X22, 0x606000
	014 Move X19, X2
	015 Move W20, W1
	016 Move [X31+24], X8
	017 Move W8, [X22+504]
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x381000
	024 Move X0, [X0+3432]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+504], W8
	028 Move X8, [X21+80]
	029 Compare X8, 0
	030 JumpIfEqual {94}
	031 Move W8, [X8+24]
	032 Move X25, 0x381000
	033 Move X25, [X25+3432]
	034 Move W26, 24
	035 Subtract W8, W8, 1
	036 Move W24, W8
	037 Move TEMP, X8
	038 And TEMP, TEMP, -2147483648
	039 Compare TEMP, -2147483648
	040 JumpIfEqual {67}
	041 Move X8, [X21+80]
	042 Compare X8, 0
	043 JumpIfEqual {94}
	044 Move W9, [X8+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction UMADDL not yet implemented."
	047 Move W22, [X8+32]
	048 Move W9, [X8+52]
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move [X31+16], W9
	052 Move [X31], V0
	053 Move X0, [X25]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move W0, W22
	059 Move W1, W20
	060 Move X2, X31
	061 Call StylePropertyUtil.IsMatchingShorthand, X0, X1
	062 Subtract W8, W24, 1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {36}
	067 Move [X19], X31
	068 Move [X19+8], X31
	069 Move [X19+16], X31
	070 Move W22, W20
	071 Move [X19], W22
	072 Move W8, [X31+16]
	073 Move V0, [X31]
	074 Move [X19+20], W8
	075 Move [X19+4], V0
	076 Move X8, [X23+40]
	077 Move X9, [X31+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction ORN not yet implemented."
	080 Move X20, [X31+96]
	081 Move X19, [X31+104]
	082 Move X22, [X31+80]
	083 Move X21, [X31+88]
	084 Move X24, [X31+64]
	085 Move X23, [X31+72]
	086 Move X26, [X31+48]
	087 Move X25, [X31+56]
	088 Move X30, [X31+32]
	089 Move W0, W8
	090 ShiftRight W0, 31
	091 And W0, W0, 0x7FFFFFFF
	092 Add X31, X31, 112
	093 Return X0
	094 Call 0x1C17F20
	095 Call 0x1C17F28
	096 Call 0x3EB2B20

Method: UnityEngine.UIElements.ComputedTransitionProperty[] GetOrComputeTransitionPropertyData(ref UnityEngine.UIElements.ComputedStyle computedStyle)

Disassembly:
	0x03DE3B88 ADRP X0, 0x386000
	0x03DE3B8C LDR X0, [X0 + 0x7F0]
	0x03DE3B90 BL 0x1C16CF4
	0x03DE3B94 ADRP X0, 0x386000
	0x03DE3B98 LDR X0, [X0 + 0x7F8]
	0x03DE3B9C BL 0x1C16CF4
	0x03DE3BA0 ADRP X0, 0x386000
	0x03DE3BA4 LDR X0, [X0 + 0x800]
	0x03DE3BA8 BL 0x1C16CF4
	0x03DE3BAC ADRP X0, 0x386000
	0x03DE3BB0 LDR X0, [X0 + 0x808]
	0x03DE3BB4 BL 0x1C16CF4
	0x03DE3BB8 ADRP X0, 0x386000
	0x03DE3BBC LDR X0, [X0 + 0x810]
	0x03DE3BC0 BL 0x1C16CF4
	0x03DE3BC4 MOVZ W8, 0x1
	0x03DE3BC8 STRB W8, [X20 + 0x1FF]
	0x03DE3BCC SUB W8, W19, 0x1
	0x03DE3BD0 CMP W8, 0x15
	0x03DE3BD4 B.HI 0x3DE3C6C
	0x03DE3BD8 ADRP X9, 0xFFFFFFFFFCDB5000
	0x03DE3BDC ADD X9, X9, 0x4CE
	0x03DE3BE0 ADR X10, 0x10
	0x03DE3BE4 LDRH W11, [X9, X8, LSL #1]
	0x03DE3BE8 ADD X10, X10, X11, 0x2, LSL
	0x03DE3BEC BR X10
	0x03DE3BF0 ADRP X21, 0x386000
	0x03DE3BF4 LDR X21, [X21 + 0x810]
	0x03DE3BF8 LDR X0, [X21]
	0x03DE3BFC LDR W8, [X0 + 0xE0]
	0x03DE3C00 CBNZ W8, 0x3DE3C0C
	0x03DE3C04 BL 0x1C16DFC
	0x03DE3C08 LDR X0, [X21]
	0x03DE3C0C LDR X8, [X0 + 0xB8]
	0x03DE3C10 LDR X19, [X8 + 0x10]
	0x03DE3C14 CBNZ X19, 0x3DE4710
	0x03DE3C18 LDR W8, [X0 + 0xE0]
	0x03DE3C1C CBNZ W8, 0x3DE3C28
	0x03DE3C20 BL 0x1C16DFC
	0x03DE3C24 LDR X0, [X21]
	0x03DE3C28 ADRP X9, 0x33A000
	0x03DE3C2C LDR X8, [X0 + 0xB8]
	0x03DE3C30 LDR X9, [X9 + 0xD10]
	0x03DE3C34 LDR X20, [X8]
	0x03DE3C38 LDR X0, [X9]
	0x03DE3C3C BL 0x1C16F10
	0x03DE3C40 ADRP X8, 0x386000
	0x03DE3C44 LDR X8, [X8 + 0x7B0]
	0x03DE3C48 MOV X1, X20
	0x03DE3C4C MOV X3, X31
	0x03DE3C50 MOV X19, X0
	0x03DE3C54 LDR X2, [X8]
	0x03DE3C58 BL 0x2D32CC4
	0x03DE3C5C LDR X8, [X21]
	0x03DE3C60 LDR X8, [X8 + 0xB8]
	0x03DE3C64 STR X19, [X8 + 0x10]
	0x03DE3C68 B 0x3DE4710
	0x03DE3C6C ADRP X21, 0x386000
	0x03DE3C70 LDR X21, [X21 + 0x810]
	0x03DE3C74 LDR X0, [X21]
	0x03DE3C78 LDR W8, [X0 + 0xE0]
	0x03DE3C7C CBNZ W8, 0x3DE3C88
	0x03DE3C80 BL 0x1C16DFC
	0x03DE3C84 LDR X0, [X21]
	0x03DE3C88 LDR X8, [X0 + 0xB8]
	0x03DE3C8C LDR X19, [X8 + 0x8]
	0x03DE3C90 CBNZ X19, 0x3DE4710
	0x03DE3C94 LDR W8, [X0 + 0xE0]
	0x03DE3C98 CBNZ W8, 0x3DE3CA4
	0x03DE3C9C BL 0x1C16DFC
	0x03DE3CA0 LDR X0, [X21]
	0x03DE3CA4 ADRP X9, 0x33A000
	0x03DE3CA8 LDR X8, [X0 + 0xB8]
	0x03DE3CAC LDR X9, [X9 + 0xD10]
	0x03DE3CB0 LDR X20, [X8]
	0x03DE3CB4 LDR X0, [X9]
	0x03DE3CB8 BL 0x1C16F10
	0x03DE3CBC ADRP X8, 0x386000
	0x03DE3CC0 LDR X8, [X8 + 0x758]
	0x03DE3CC4 MOV X1, X20
	0x03DE3CC8 MOV X3, X31
	0x03DE3CCC MOV X19, X0
	0x03DE3CD0 LDR X2, [X8]
	0x03DE3CD4 BL 0x2D32CC4
	0x03DE3CD8 LDR X8, [X21]
	0x03DE3CDC LDR X8, [X8 + 0xB8]
	0x03DE3CE0 STR X19, [X8 + 0x8]
	0x03DE3CE4 B 0x3DE4710
	0x03DE3CE8 ADRP X21, 0x386000
	0x03DE3CEC LDR X21, [X21 + 0x810]
	0x03DE3CF0 LDR X0, [X21]
	0x03DE3CF4 LDR W8, [X0 + 0xE0]
	0x03DE3CF8 CBNZ W8, 0x3DE3D04
	0x03DE3CFC BL 0x1C16DFC
	0x03DE3D00 LDR X0, [X21]
	0x03DE3D04 LDR X8, [X0 + 0xB8]
	0x03DE3D08 LDR X19, [X8 + 0x18]
	0x03DE3D0C CBNZ X19, 0x3DE4710
	0x03DE3D10 LDR W8, [X0 + 0xE0]
	0x03DE3D14 CBNZ W8, 0x3DE3D20
	0x03DE3D18 BL 0x1C16DFC
	0x03DE3D1C LDR X0, [X21]
	0x03DE3D20 ADRP X9, 0x33A000
	0x03DE3D24 LDR X8, [X0 + 0xB8]
	0x03DE3D28 LDR X9, [X9 + 0xD10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x606000
	007 Move X21, 0x382000
	008 Move W8, [X19+505]
	009 Move X21, [X21+616]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x387000
	016 Move X0, [X0+1744]
	017 Call 0x1C17CF4
	018 Move X0, 0x382000
	019 Move X0, [X0+616]
	020 Call 0x1C17CF4
	021 Move X0, 0x387000
	022 Move X0, [X0+1752]
	023 Call 0x1C17CF4
	024 Move X0, 0x387000
	025 Move X0, [X0+1760]
	026 Call 0x1C17CF4
	027 Move X0, 0x387000
	028 Move X0, [X0+1768]
	029 Call 0x1C17CF4
	030 Move X0, 0x382000
	031 Move X0, [X0+504]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X19+505], W8
	035 Move X0, [X21]
	036 Move [X31+8], X31
	037 Move X22, 0x382000
	038 Move W8, [X0+224]
	039 Move X22, [X22+504]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Call ComputedTransitionUtils.GetTransitionHashCode, X0
	045 Move X8, [X22]
	046 Move W19, W0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Add X1, X31, 8
	053 Move W0, W19
	054 Move X2, X31
	055 Call StyleCache.TryGetValue, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {116}
	060 Move X0, [X21]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X21]
	066 Move X8, [X0+184]
	067 Move X0, X20
	068 Move X1, [X8]
	069 Call ComputedTransitionUtils.ComputeTransitionPropertyData, X0, X1
	070 Move X8, [X21]
	071 Move X8, [X8+184]
	072 Move X8, [X8]
	073 Compare X8, 0
	074 JumpIfEqual {123}
	075 Move W1, [X8+24]
	076 Move X8, 0x387000
	077 Move X8, [X8+1744]
	078 Move X0, [X8]
	079 Call 0x1C17D6C
	080 Move X8, [X21]
	081 Move [X31+8], X0
	082 Move X1, X0
	083 Move X8, [X8+184]
	084 Move X0, [X8]
	085 Compare X0, 0
	086 JumpIfEqual {123}
	087 Move X8, 0x387000
	088 Move X8, [X8+1760]
	089 Move X2, [X8]
	090 Call List`1<ComputedTransitionProperty>.CopyTo, X0, X1
	091 Move X8, [X21]
	092 Move X8, [X8+184]
	093 Move X8, [X8]
	094 Compare X8, 0
	095 JumpIfEqual {123}
	096 Move W2, [X8+24]
	097 Move W9, [X8+28]
	098 Add W9, W9, 1
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move [X8+24], W31
	101 Move [X8+28], W9
	102 Move X0, [X8+16]
	103 Move W1, W31
	104 Move X3, X31
	105 Call Array.Clear, X0, X1, X2
	106 Move X0, [X22]
	107 Move X20, [X31+8]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move W0, W19
	113 Move X1, X20
	114 Move X2, X31
	115 Call StyleCache.SetValue, X0, X1
	116 Move X0, [X31+8]
	117 Move X20, [X31+32]
	118 Move X19, [X31+40]
	119 Move X22, [X31+16]
	120 Move X21, [X31+24]
	121 Move X30, [X31+48]
	122 Return X0
	123 Call 0x1C17F20

Method: System.Int32 GetTransitionHashCode(ref UnityEngine.UIElements.ComputedStyle cs)

Disassembly:
	0x03DE3F30 MOV X1, X20
	0x03DE3F34 MOV X3, X31
	0x03DE3F38 MOV X19, X0
	0x03DE3F3C LDR X2, [X8]
	0x03DE3F40 BL 0x2D32CC4
	0x03DE3F44 LDR X8, [X21]
	0x03DE3F48 LDR X8, [X8 + 0xB8]
	0x03DE3F4C STR X19, [X8 + 0x38]
	0x03DE3F50 B 0x3DE4710
	0x03DE3F54 ADRP X21, 0x386000
	0x03DE3F58 LDR X21, [X21 + 0x810]
	0x03DE3F5C LDR X0, [X21]
	0x03DE3F60 LDR W8, [X0 + 0xE0]
	0x03DE3F64 CBNZ W8, 0x3DE3F70
	0x03DE3F68 BL 0x1C16DFC
	0x03DE3F6C LDR X0, [X21]
	0x03DE3F70 LDR X8, [X0 + 0xB8]
	0x03DE3F74 LDR X19, [X8 + 0x40]
	0x03DE3F78 CBNZ X19, 0x3DE4710
	0x03DE3F7C LDR W8, [X0 + 0xE0]
	0x03DE3F80 CBNZ W8, 0x3DE3F8C
	0x03DE3F84 BL 0x1C16DFC
	0x03DE3F88 LDR X0, [X21]
	0x03DE3F8C ADRP X9, 0x33A000
	0x03DE3F90 LDR X8, [X0 + 0xB8]
	0x03DE3F94 LDR X9, [X9 + 0xD10]
	0x03DE3F98 LDR X20, [X8]
	0x03DE3F9C LDR X0, [X9]
	0x03DE3FA0 BL 0x1C16F10
	0x03DE3FA4 ADRP X8, 0x386000
	0x03DE3FA8 LDR X8, [X8 + 0x7F8]
	0x03DE3FAC MOV X1, X20
	0x03DE3FB0 MOV X3, X31
	0x03DE3FB4 MOV X19, X0
	0x03DE3FB8 LDR X2, [X8]
	0x03DE3FBC BL 0x2D32CC4
	0x03DE3FC0 LDR X8, [X21]
	0x03DE3FC4 LDR X8, [X8 + 0xB8]
	0x03DE3FC8 STR X19, [X8 + 0x40]
	0x03DE3FCC B 0x3DE4710
	0x03DE3FD0 ADRP X21, 0x386000
	0x03DE3FD4 LDR X21, [X21 + 0x810]
	0x03DE3FD8 LDR X0, [X21]
	0x03DE3FDC LDR W8, [X0 + 0xE0]
	0x03DE3FE0 CBNZ W8, 0x3DE3FEC
	0x03DE3FE4 BL 0x1C16DFC
	0x03DE3FE8 LDR X0, [X21]
	0x03DE3FEC LDR X8, [X0 + 0xB8]
	0x03DE3FF0 LDR X19, [X8 + 0x48]
	0x03DE3FF4 CBNZ X19, 0x3DE4710
	0x03DE3FF8 LDR W8, [X0 + 0xE0]
	0x03DE3FFC CBNZ W8, 0x3DE4008
	0x03DE4000 BL 0x1C16DFC
	0x03DE4004 LDR X0, [X21]
	0x03DE4008 ADRP X9, 0x339000
	0x03DE400C LDR X8, [X0 + 0xB8]
	0x03DE4010 LDR X9, [X9 + 0xD10]
	0x03DE4014 LDR X20, [X8]
	0x03DE4018 LDR X0, [X9]
	0x03DE401C BL 0x1C16F10
	0x03DE4020 ADRP X8, 0x385000
	0x03DE4024 LDR X8, [X8 + 0x800]
	0x03DE4028 MOV X1, X20
	0x03DE402C MOV X3, X31
	0x03DE4030 MOV X19, X0
	0x03DE4034 LDR X2, [X8]
	0x03DE4038 BL 0x2D32CC4
	0x03DE403C LDR X8, [X21]
	0x03DE4040 LDR X8, [X8 + 0xB8]
	0x03DE4044 STR X19, [X8 + 0x48]
	0x03DE4048 B 0x3DE4710
	0x03DE404C ADRP X21, 0x385000
	0x03DE4050 LDR X21, [X21 + 0x810]
	0x03DE4054 LDR X0, [X21]
	0x03DE4058 LDR W8, [X0 + 0xE0]
	0x03DE405C CBNZ W8, 0x3DE4068
	0x03DE4060 BL 0x1C16DFC
	0x03DE4064 LDR X0, [X21]
	0x03DE4068 LDR X8, [X0 + 0xB8]
	0x03DE406C LDR X19, [X8 + 0x50]
	0x03DE4070 CBNZ X19, 0x3DE4710
	0x03DE4074 LDR W8, [X0 + 0xE0]
	0x03DE4078 CBNZ W8, 0x3DE4084
	0x03DE407C BL 0x1C16DFC
	0x03DE4080 LDR X0, [X21]
	0x03DE4084 ADRP X9, 0x339000
	0x03DE4088 LDR X8, [X0 + 0xB8]
	0x03DE408C LDR X9, [X9 + 0xD10]
	0x03DE4090 LDR X20, [X8]
	0x03DE4094 LDR X0, [X9]
	0x03DE4098 BL 0x1C16F10
	0x03DE409C ADRP X8, 0x385000
	0x03DE40A0 LDR X8, [X8 + 0x808]
	0x03DE40A4 MOV X1, X20
	0x03DE40A8 MOV X3, X31
	0x03DE40AC MOV X19, X0
	0x03DE40B0 LDR X2, [X8]
	0x03DE40B4 BL 0x2D32CC4
	0x03DE40B8 LDR X8, [X21]
	0x03DE40BC LDR X8, [X8 + 0xB8]
	0x03DE40C0 STR X19, [X8 + 0x50]
	0x03DE40C4 B 0x3DE4710
	0x03DE40C8 ADRP X21, 0x385000
	0x03DE40CC LDR X21, [X21 + 0x810]
	0x03DE40D0 LDR X0, [X21]
	0x03DE40D4 LDR W8, [X0 + 0xE0]
	0x03DE40D8 CBNZ W8, 0x3DE40E4
	0x03DE40DC BL 0x1C16DFC
	0x03DE40E0 LDR X0, [X21]
	0x03DE40E4 LDR X8, [X0 + 0xB8]
	0x03DE40E8 LDR X19, [X8 + 0x58]
	0x03DE40EC CBNZ X19, 0x3DE4710
	0x03DE40F0 LDR W8, [X0 + 0xE0]
	0x03DE40F4 CBNZ W8, 0x3DE4100
	0x03DE40F8 BL 0x1C16DFC
	0x03DE40FC LDR X0, [X21]
	0x03DE4100 ADRP X9, 0x339000
	0x03DE4104 LDR X8, [X0 + 0xB8]
	0x03DE4108 LDR X9, [X9 + 0xD10]
	0x03DE410C LDR X20, [X8]
	0x03DE4110 LDR X0, [X9]
	0x03DE4114 BL 0x1C16F10
	0x03DE4118 ADRP X8, 0x385000
	0x03DE411C LDR X8, [X8 + 0x760]
	0x03DE4120 MOV X1, X20
	0x03DE4124 MOV X3, X31
	0x03DE4128 MOV X19, X0
	0x03DE412C LDR X2, [X8]
	0x03DE4130 BL 0x2D32CC4
	0x03DE4134 LDR X8, [X21]
	0x03DE4138 LDR X8, [X8 + 0xB8]
	0x03DE413C STR X19, [X8 + 0x58]
	0x03DE4140 B 0x3DE4710
	0x03DE4144 ADRP X21, 0x385000
	0x03DE4148 LDR X21, [X21 + 0x810]
	0x03DE414C LDR X0, [X21]
	0x03DE4150 LDR W8, [X0 + 0xE0]
	0x03DE4154 CBNZ W8, 0x3DE4160
	0x03DE4158 BL 0x1C16DFC
	0x03DE415C LDR X0, [X21]
	0x03DE4160 LDR X8, [X0 + 0xB8]
	0x03DE4164 LDR X19, [X8 + 0x60]
	0x03DE4168 CBNZ X19, 0x3DE4710
	0x03DE416C LDR W8, [X0 + 0xE0]
	0x03DE4170 CBNZ W8, 0x3DE417C
	0x03DE4174 BL 0x1C16DFC
	0x03DE4178 LDR X0, [X21]
	0x03DE417C ADRP X9, 0x339000
	0x03DE4180 LDR X8, [X0 + 0xB8]
	0x03DE4184 LDR X9, [X9 + 0xD10]
	0x03DE4188 LDR X20, [X8]
	0x03DE418C LDR X0, [X9]
	0x03DE4190 BL 0x1C16F10
	0x03DE4194 ADRP X8, 0x385000
	0x03DE4198 LDR X8, [X8 + 0x768]
	0x03DE419C MOV X1, X20
	0x03DE41A0 MOV X3, X31
	0x03DE41A4 MOV X19, X0
	0x03DE41A8 LDR X2, [X8]
	0x03DE41AC BL 0x2D32CC4
	0x03DE41B0 LDR X8, [X21]
	0x03DE41B4 LDR X8, [X8 + 0xB8]
	0x03DE41B8 STR X19, [X8 + 0x60]
	0x03DE41BC B 0x3DE4710
	0x03DE41C0 ADRP X21, 0x385000
	0x03DE41C4 LDR X21, [X21 + 0x810]
	0x03DE41C8 LDR X0, [X21]
	0x03DE41CC LDR W8, [X0 + 0xE0]
	0x03DE41D0 CBNZ W8, 0x3DE41DC
	0x03DE41D4 BL 0x1C16DFC
	0x03DE41D8 LDR X0, [X21]
	0x03DE41DC LDR X8, [X0 + 0xB8]
	0x03DE41E0 LDR X19, [X8 + 0x68]
	0x03DE41E4 CBNZ X19, 0x3DE4710
	0x03DE41E8 LDR W8, [X0 + 0xE0]
	0x03DE41EC CBNZ W8, 0x3DE41F8
	0x03DE41F0 BL 0x1C16DFC
	0x03DE41F4 LDR X0, [X21]
	0x03DE41F8 ADRP X9, 0x339000
	0x03DE41FC LDR X8, [X0 + 0xB8]
	0x03DE4200 LDR X9, [X9 + 0xD10]
	0x03DE4204 LDR X20, [X8]
	0x03DE4208 LDR X0, [X9]
	0x03DE420C BL 0x1C16F10
	0x03DE4210 ADRP X8, 0x385000
	0x03DE4214 LDR X8, [X8 + 0x770]
	0x03DE4218 MOV X1, X20
	0x03DE421C MOV X3, X31
	0x03DE4220 MOV X19, X0
	0x03DE4224 LDR X2, [X8]
	0x03DE4228 BL 0x2D32CC4
	0x03DE422C LDR X8, [X21]
	0x03DE4230 LDR X8, [X8 + 0xB8]
	0x03DE4234 STR X19, [X8 + 0x68]
	0x03DE4238 B 0x3DE4710
	0x03DE423C ADRP X21, 0x385000
	0x03DE4240 LDR X21, [X21 + 0x810]
	0x03DE4244 LDR X0, [X21]
	0x03DE4248 LDR W8, [X0 + 0xE0]
	0x03DE424C CBNZ W8, 0x3DE4258
	0x03DE4250 BL 0x1C16DFC
	0x03DE4254 LDR X0, [X21]
	0x03DE4258 LDR X8, [X0 + 0xB8]
	0x03DE425C LDR X19, [X8 + 0x70]
	0x03DE4260 CBNZ X19, 0x3DE4710
	0x03DE4264 LDR W8, [X0 + 0xE0]
	0x03DE4268 CBNZ W8, 0x3DE4274
	0x03DE426C BL 0x1C16DFC
	0x03DE4270 LDR X0, [X21]
	0x03DE4274 ADRP X9, 0x339000
	0x03DE4278 LDR X8, [X0 + 0xB8]
	0x03DE427C LDR X9, [X9 + 0xD10]
	0x03DE4280 LDR X20, [X8]
	0x03DE4284 LDR X0, [X9]
	0x03DE4288 BL 0x1C16F10
	0x03DE428C ADRP X8, 0x385000
	0x03DE4290 LDR X8, [X8 + 0x778]
	0x03DE4294 MOV X1, X20
	0x03DE4298 MOV X3, X31
	0x03DE429C MOV X19, X0
	0x03DE42A0 LDR X2, [X8]
	0x03DE42A4 BL 0x2D32CC4
	0x03DE42A8 LDR X8, [X21]
	0x03DE42AC LDR X8, [X8 + 0xB8]
	0x03DE42B0 STR X19, [X8 + 0x70]
	0x03DE42B4 B 0x3DE4710
	0x03DE42B8 ADRP X21, 0x385000
	0x03DE42BC LDR X21, [X21 + 0x810]
	0x03DE42C0 LDR X0, [X21]
	0x03DE42C4 LDR W8, [X0 + 0xE0]
	0x03DE42C8 CBNZ W8, 0x3DE42D4
	0x03DE42CC BL 0x1C16DFC
	0x03DE42D0 LDR X0, [X21]
	0x03DE42D4 LDR X8, [X0 + 0xB8]
	0x03DE42D8 LDR X19, [X8 + 0x78]
	0x03DE42DC CBNZ X19, 0x3DE4710
	0x03DE42E0 LDR W8, [X0 + 0xE0]
	0x03DE42E4 CBNZ W8, 0x3DE42F0
	0x03DE42E8 BL 0x1C16DFC
	0x03DE42EC LDR X0, [X21]
	0x03DE42F0 ADRP X9, 0x339000
	0x03DE42F4 LDR X8, [X0 + 0xB8]
	0x03DE42F8 LDR X9, [X9 + 0xD10]
	0x03DE42FC LDR X20, [X8]
	0x03DE4300 LDR X0, [X9]
	0x03DE4304 BL 0x1C16F10
	0x03DE4308 ADRP X8, 0x385000
	0x03DE430C LDR X8, [X8 + 0x780]
	0x03DE4310 MOV X1, X20
	0x03DE4314 MOV X3, X31
	0x03DE4318 MOV X19, X0
	0x03DE431C LDR X2, [X8]
	0x03DE4320 BL 0x2D32CC4
	0x03DE4324 LDR X8, [X21]
	0x03DE4328 LDR X8, [X8 + 0xB8]
	0x03DE432C STR X19, [X8 + 0x78]
	0x03DE4330 B 0x3DE4710
	0x03DE4334 ADRP X21, 0x385000
	0x03DE4338 LDR X21, [X21 + 0x810]
	0x03DE433C LDR X0, [X21]
	0x03DE4340 LDR W8, [X0 + 0xE0]
	0x03DE4344 CBNZ W8, 0x3DE4350
	0x03DE4348 BL 0x1C16DFC
	0x03DE434C LDR X0, [X21]
	0x03DE4350 LDR X8, [X0 + 0xB8]
	0x03DE4354 LDR X19, [X8 + 0x80]
	0x03DE4358 CBNZ X19, 0x3DE4710
	0x03DE435C LDR W8, [X0 + 0xE0]
	0x03DE4360 CBNZ W8, 0x3DE436C
	0x03DE4364 BL 0x1C16DFC
	0x03DE4368 LDR X0, [X21]
	0x03DE436C ADRP X9, 0x339000
	0x03DE4370 LDR X8, [X0 + 0xB8]
	0x03DE4374 LDR X9, [X9 + 0xD10]
	0x03DE4378 LDR X20, [X8]
	0x03DE437C LDR X0, [X9]
	0x03DE4380 BL 0x1C16F10
	0x03DE4384 ADRP X8, 0x385000
	0x03DE4388 LDR X8, [X8 + 0x788]
	0x03DE438C MOV X1, X20
	0x03DE4390 MOV X3, X31
	0x03DE4394 MOV X19, X0
	0x03DE4398 LDR X2, [X8]
	0x03DE439C BL 0x2D32CC4
	0x03DE43A0 LDR X8, [X21]
	0x03DE43A4 LDR X8, [X8 + 0xB8]
	0x03DE43A8 STR X19, [X8 + 0x80]
	0x03DE43AC B 0x3DE4710
	0x03DE43B0 ADRP X21, 0x385000
	0x03DE43B4 LDR X21, [X21 + 0x810]

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X28
	005 Move [X31+232], X27
	006 Move [X31+240], X26
	007 Move [X31+248], X25
	008 Move [X31+256], X24
	009 Move [X31+264], X23
	010 Move [X31+272], X22
	011 Move [X31+280], X21
	012 Move [X31+288], X20
	013 Move [X31+296], X19
	014 Move X20, 0x606000
	015 Move W8, [X20+506]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {59}
	021 Move X0, 0x387000
	022 Move X0, [X0+1776]
	023 Call 0x1C17CF4
	024 Move X0, 0x386000
	025 Move X0, [X0+2792]
	026 Call 0x1C17CF4
	027 Move X0, 0x387000
	028 Move X0, [X0+1784]
	029 Call 0x1C17CF4
	030 Move X0, 0x387000
	031 Move X0, [X0+1792]
	032 Call 0x1C17CF4
	033 Move X0, 0x387000
	034 Move X0, [X0+1800]
	035 Call 0x1C17CF4
	036 Move X0, 0x386000
	037 Move X0, [X0+2776]
	038 Call 0x1C17CF4
	039 Move X0, 0x387000
	040 Move X0, [X0+1808]
	041 Call 0x1C17CF4
	042 Move X0, 0x386000
	043 Move X0, [X0+2784]
	044 Call 0x1C17CF4
	045 Move X0, 0x387000
	046 Move X0, [X0+1816]
	047 Call 0x1C17CF4
	048 Move X0, 0x386000
	049 Move X0, [X0+2760]
	050 Call 0x1C17CF4
	051 Move X0, 0x387000
	052 Move X0, [X0+1824]
	053 Call 0x1C17CF4
	054 Move X0, 0x387000
	055 Move X0, [X0+1832]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+506], W8
	059 NotImplemented "Instruction MOVI not yet implemented."
	060 Move X0, X19
	061 Move X1, X31
	062 Move [X31+176], X31
	063 Move [X31+184], X31
	064 Move [X31+192], X31
	065 Move [X31+160], X31
	066 Move [X31+168], X31
	067 Move [X31+144], X31
	068 Move [X31+152], X31
	069 Move [X31+136], X31
	070 Move [X31+80], X31
	071 Move [X31+88], X31
	072 Move [X31+48], X31
	073 Move [X31+56], X31
	074 Move [X31+96], V0
	075 Move [X31+104], V0
	076 Move [X31+64], X31
	077 Call ComputedStyle.get_transitionDelay, X0
	078 Compare X0, 0
	079 JumpIfEqual {225}
	080 Move X21, 0x386000
	081 Move X21, [X21+1832]
	082 Move X22, 0x386000
	083 Move X28, 0x385000
	084 Move X27, 0x385000
	085 Move X25, 0x386000
	086 Move X24, 0x386000
	087 Move X22, [X22+1792]
	088 Move X28, [X28+2760]
	089 Move X27, [X27+2776]
	090 Move X25, [X25+1824]
	091 Move X24, [X24+1800]
	092 Move X1, [X21]
	093 Move X26, 0x385000
	094 Move X29, 0x386000
	095 Move X26, [X26+2792]
	096 Move X29, [X29+1784]
	097 Add X8, X31, 16
	098 Call List`1<TimeValue>.GetEnumerator, X0
	099 Move V0, [X31+1]
	100 Move X8, [X31+32]
	101 Move W20, W31
	102 Move W23, 397
	103 Move [X31+11], V0
	104 Move [X31+192], X8
	105 Move X1, [X22]
	106 Add X0, X31, 176
	107 Call Enumerator<TimeValue>.MoveNext, X0
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {119}
	112 Move X8, [X31+192]
	113 Move [X31+168], X8
	114 Add X0, X31, 168
	115 Move X1, X31
	116 Call TimeValue.GetHashCode, X0
	117 Multiply W8, W20, W23
	118 Xor W20, W0, W8
	119 Move X1, [X29]
	120 Add X0, X31, 176
	121 Call Enumerator<TimeValue>.Dispose, X0
	122 Move X0, X19
	123 Move X1, X31
	124 Call ComputedStyle.get_transitionDuration, X0
	125 Compare X0, 0
	126 JumpIfEqual {225}
	127 Move X1, [X21]
	128 Add X8, X31, 16
	129 Call List`1<TimeValue>.GetEnumerator, X0
	130 Move V0, [X31+1]
	131 Move X8, [X31+32]
	132 Move W21, 397
	133 Move [X31+9], V0
	134 Move [X31+160], X8
	135 Move X1, [X22]
	136 Add X0, X31, 144
	137 Call Enumerator<TimeValue>.MoveNext, X0
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {149}
	142 Move X8, [X31+160]
	143 Move [X31+136], X8
	144 Add X0, X31, 136
	145 Move X1, X31
	146 Call TimeValue.GetHashCode, X0
	147 Multiply W8, W20, W21
	148 Xor W20, W0, W8
	149 Move X1, [X29]
	150 Add X0, X31, 144
	151 Call Enumerator<TimeValue>.Dispose, X0
	152 Move X0, X19
	153 Move X1, X31
	154 Call ComputedStyle.get_transitionProperty, X0
	155 Compare X0, 0
	156 JumpIfEqual {225}
	157 Move X1, [X28]
	158 Add X8, X31, 16
	159 Call List`1<StylePropertyName>.GetEnumerator, X0
	160 Move V0, [X31+16]
	161 Move V1, [X31+32]
	162 Move W21, 397
	163 Move [X31+96], V0
	164 Move [X31+104], V1
	165 Move X1, [X27]
	166 Add X0, X31, 96
	167 Call Enumerator<StylePropertyName>.MoveNext, X0
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfNotEqual {179}
	172 Move V0, [X31+7]
	173 Move [X31+5], V0
	174 Add X0, X31, 80
	175 Move X1, X31
	176 Call StylePropertyName.GetHashCode, X0
	177 Multiply W8, W20, W21
	178 Xor W20, W0, W8
	179 Move X1, [X26]
	180 Add X0, X31, 96
	181 Call Enumerator<StylePropertyName>.Dispose, X0
	182 Move X0, X19
	183 Move X1, X31
	184 Call ComputedStyle.get_transitionTimingFunction, X0
	185 Compare X0, 0
	186 JumpIfEqual {225}
	187 Move X1, [X25]
	188 Add X8, X31, 16
	189 Call List`1<EasingFunction>.GetEnumerator, X0
	190 Move V0, [X31+1]
	191 Move X8, [X31+32]
	192 Move W19, 397
	193 Move [X31+3], V0
	194 Move [X31+64], X8
	195 Move X1, [X24]
	196 Add X0, X31, 48
	197 Call Enumerator<EasingFunction>.MoveNext, X0
	198 Move TEMP, X0
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfNotEqual {205}
	202 Move W8, [X31+64]
	203 Multiply W9, W20, W19
	204 Xor W20, W8, W9
	205 Move X8, 0x386000
	206 Move X8, [X8+1776]
	207 Add X0, X31, 48
	208 Move X1, [X8]
	209 Call Enumerator<EasingFunction>.Dispose, X0
	210 Move W0, W20
	211 Move X20, [X31+288]
	212 Move X19, [X31+296]
	213 Move X22, [X31+272]
	214 Move X21, [X31+280]
	215 Move X24, [X31+256]
	216 Move X23, [X31+264]
	217 Move X26, [X31+240]
	218 Move X25, [X31+248]
	219 Move X28, [X31+224]
	220 Move X27, [X31+232]
	221 Move X29, [X31+208]
	222 Move X30, [X31+216]
	223 Add X31, X31, 304
	224 Return X0
	225 Call 0x1C17F20
	226 Move X23, X0
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X0, X23
	229 Call 0x3EB2AD0
	230 Move X22, [X0]
	231 Call 0x3EB2AE0
	232 Move X1, [X26]
	233 Add X0, X31, 96
	234 Call Enumerator<StylePropertyName>.Dispose, X0
	235 Compare X22, 0
	236 JumpIfEqual {182}
	237 Move X22, X31
	238 Move X23, X0
	239 Move X1, [X26]
	240 Add X0, X31, 96
	241 Call Enumerator<StylePropertyName>.Dispose, X0
	242 Compare X22, 0
	243 JumpIfEqual {317}
	244 Move X0, X22
	245 Call 0x1C17F18
	246 Move X23, X0
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move X0, X23
	249 Call 0x3EB2AD0
	250 Move X22, [X0]
	251 Call 0x3EB2AE0
	252 Move X1, [X29]
	253 Add X0, X31, 144
	254 Call Enumerator<TimeValue>.Dispose, X0
	255 Compare X22, 0
	256 JumpIfEqual {152}
	257 Move X0, X22
	258 Call 0x1C17F18
	259 Move X22, X31
	260 Move X23, X0
	261 Move X1, [X29]
	262 Add X0, X31, 144
	263 Call Enumerator<TimeValue>.Dispose, X0
	264 Compare X22, 0
	265 JumpIfEqual {317}
	266 Move X0, X22
	267 Call 0x1C17F18
	268 Move X23, X0
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move X0, X23
	271 Call 0x3EB2AD0
	272 Move X8, [X0]
	273 Move [X31+8], X8
	274 Call 0x3EB2AE0
	275 Move X1, [X29]
	276 Add X0, X31, 176
	277 Call Enumerator<TimeValue>.Dispose, X0
	278 Move X8, [X31+8]
	279 Compare X8, 0
	280 JumpIfEqual {122}
	281 Move X0, [X31+8]
	282 Call 0x1C17F18
	283 Move [X31+8], X31
	284 Move X23, X0
	285 Move X1, [X29]
	286 Add X0, X31, 176
	287 Call Enumerator<TimeValue>.Dispose, X0
	288 Move X8, [X31+8]
	289 Compare X8, 0
	290 JumpIfEqual {317}
	291 Move X0, [X31+8]
	292 Call 0x1C17F18
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X23, X0
	295 Move X0, X23
	296 Call 0x3EB2AD0
	297 Move X19, [X0]
	298 Call 0x3EB2AE0
	299 Move X8, 0x386000
	300 Move X8, [X8+1776]
	301 Add X0, X31, 48
	302 Move X1, [X8]
	303 Call Enumerator<EasingFunction>.Dispose, X0
	304 Compare X19, 0
	305 JumpIfEqual {210}
	306 Move X0, X19
	307 Call 0x1C17F18
	308 Move X19, X31
	309 Move X23, X0
	310 Move X8, 0x386000
	311 Move X8, [X8+1776]
	312 Move X1, [X8]
	313 Add X0, X31, 48
	314 Call Enumerator<EasingFunction>.Dispose, X0
	315 Compare X19, 0
	316 JumpIfNotEqual {319}
	317 Move X0, X23
	318 Call 0x1D2D690
	319 Move X0, X19
	320 Call 0x1C17F18
	321 Call 0x1991590

Method: System.Boolean SameTransitionProperty(ref UnityEngine.UIElements.ComputedStyle x, ref UnityEngine.UIElements.ComputedStyle y)

Disassembly:
	0x03DE4660 LDR X20, [X8]
	0x03DE4664 LDR X0, [X9]
	0x03DE4668 BL 0x1C16F10
	0x03DE466C ADRP X8, 0x385000
	0x03DE4670 LDR X8, [X8 + 0x7C0]
	0x03DE4674 MOV X1, X20
	0x03DE4678 MOV X3, X31
	0x03DE467C MOV X19, X0
	0x03DE4680 LDR X2, [X8]
	0x03DE4684 BL 0x2D32CC4
	0x03DE4688 LDR X8, [X21]
	0x03DE468C LDR X8, [X8 + 0xB8]
	0x03DE4690 STR X19, [X8 + 0xB0]
	0x03DE4694 B 0x3DE4710
	0x03DE4698 ADRP X21, 0x385000
	0x03DE469C LDR X21, [X21 + 0x810]
	0x03DE46A0 LDR X0, [X21]
	0x03DE46A4 LDR W8, [X0 + 0xE0]
	0x03DE46A8 CBNZ W8, 0x3DE46B4
	0x03DE46AC BL 0x1C16DFC
	0x03DE46B0 LDR X0, [X21]
	0x03DE46B4 LDR X8, [X0 + 0xB8]
	0x03DE46B8 LDR X19, [X8 + 0xB8]
	0x03DE46BC CBNZ X19, 0x3DE4710
	0x03DE46C0 LDR W8, [X0 + 0xE0]
	0x03DE46C4 CBNZ W8, 0x3DE46D0
	0x03DE46C8 BL 0x1C16DFC
	0x03DE46CC LDR X0, [X21]
	0x03DE46D0 ADRP X9, 0x339000
	0x03DE46D4 LDR X8, [X0 + 0xB8]
	0x03DE46D8 LDR X9, [X9 + 0xD10]
	0x03DE46DC LDR X20, [X8]
	0x03DE46E0 LDR X0, [X9]
	0x03DE46E4 BL 0x1C16F10
	0x03DE46E8 ADRP X8, 0x385000
	0x03DE46EC LDR X8, [X8 + 0x7C8]
	0x03DE46F0 MOV X1, X20
	0x03DE46F4 MOV X3, X31
	0x03DE46F8 MOV X19, X0
	0x03DE46FC LDR X2, [X8]
	0x03DE4700 BL 0x2D32CC4
	0x03DE4704 LDR X8, [X21]
	0x03DE4708 LDR X8, [X8 + 0xB8]
	0x03DE470C STR X19, [X8 + 0xB8]
	0x03DE4710 MOV X0, X19
	0x03DE4714 LDP X20, X19, [X31 + 0x10]
	0x03DE4718 LDP X30, X21, [X31], #0x20
	0x03DE471C RET
	0x03DE4720 STR X30, [X31 - 0x30]!
	0x03DE4724 STP X22, X21, [X31 + 0x10]
	0x03DE4728 STP X20, X19, [X31 + 0x20]
	0x03DE472C ADRP X21, 0x604000
	0x03DE4730 ADRP X22, 0x385000
	0x03DE4734 ADRP X19, 0x385000
	0x03DE4738 ADRP X20, 0x380000
	0x03DE473C LDRB W8, [X21 + 0x200]
	0x03DE4740 LDR X22, [X22 + 0x818]
	0x03DE4744 LDR X19, [X19 + 0x820]
	0x03DE4748 LDR X20, [X20 + 0x268]
	0x03DE474C TBNZ X8, 0x0, 0x3DE477C
	0x03DE4750 ADRP X0, 0x380000
	0x03DE4754 LDR X0, [X0 + 0x268]
	0x03DE4758 BL 0x1C16CF4
	0x03DE475C ADRP X0, 0x385000
	0x03DE4760 LDR X0, [X0 + 0x820]
	0x03DE4764 BL 0x1C16CF4
	0x03DE4768 ADRP X0, 0x385000
	0x03DE476C LDR X0, [X0 + 0x818]
	0x03DE4770 BL 0x1C16CF4
	0x03DE4774 MOVZ W8, 0x1
	0x03DE4778 STRB W8, [X21 + 0x200]
	0x03DE477C LDR X0, [X22]
	0x03DE4780 BL 0x1C16F10
	0x03DE4784 LDR X1, [X19]
	0x03DE4788 MOV X19, X0
	0x03DE478C BL 0x2F755D0
	0x03DE4790 LDR X8, [X20]
	0x03DE4794 LDP X22, X21, [X31 + 0x10]
	0x03DE4798 LDR X8, [X8 + 0xB8]
	0x03DE479C STR X19, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x605000
	008 Move W8, [X21+507]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x381000
	016 Move X0, [X0+616]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+507], W8
	020 Move X8, [X20+80]
	021 Compare X8, 0
	022 JumpIfEqual {26}
	023 Move X9, [X19+80]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, 1
	026 Move X23, 0x381000
	027 Move X23, [X23+616]
	028 Move X0, X20
	029 Move X1, X31
	030 Call ComputedStyle.get_transitionProperty, X0
	031 Move X21, X0
	032 Move X0, X19
	033 Move X1, X31
	034 Call ComputedStyle.get_transitionProperty, X0
	035 Move X8, [X23]
	036 Move X22, X0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X22
	044 Call ComputedTransitionUtils.SameTransitionProperty, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {94}
	049 Move X0, X20
	050 Move X1, X31
	051 Call ComputedStyle.get_transitionDuration, X0
	052 Move X21, X0
	053 Move X0, X19
	054 Move X1, X31
	055 Call ComputedStyle.get_transitionDuration, X0
	056 Move X8, [X23]
	057 Move X22, X0
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move X1, X22
	065 Call ComputedTransitionUtils.SameTransitionProperty, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {94}
	070 Move X0, X20
	071 Move X1, X31
	072 Call ComputedStyle.get_transitionDelay, X0
	073 Move X20, X0
	074 Move X0, X19
	075 Move X1, X31
	076 Call ComputedStyle.get_transitionDelay, X0
	077 Move X8, [X23]
	078 Move X19, X0
	079 Move W9, [X8+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X8
	083 Call 0x1C17DFC
	084 Move X0, X20
	085 Move X1, X19
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X22, [X31+16]
	089 Move X21, [X31+24]
	090 Move X30, [X31+48]
	091 Move X23, [X31+56]
	092 Call ComputedTransitionUtils.SameTransitionProperty, X0, X1
	093 Return X0
	094 Move W0, W31
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 Move X23, [X31+56]
	101 Return X0

Method: System.Boolean SameTransitionProperty(System.Collections.Generic.List`1<UnityEngine.UIElements.StylePropertyName> a, System.Collections.Generic.List`1<UnityEngine.UIElements.StylePropertyName> b)

Disassembly:
	0x03DE47A0 LDP X20, X19, [X31 + 0x20]
	0x03DE47A4 LDR X30, [X31], #0x30
	0x03DE47A8 RET
	0x03DE47AC STR X30, [X31 - 0x20]!
	0x03DE47B0 STP X20, X19, [X31 + 0x10]
	0x03DE47B4 ADRP X19, 0x604000
	0x03DE47B8 ADRP X20, 0x385000
	0x03DE47BC LDRB W8, [X19 + 0x201]
	0x03DE47C0 LDR X20, [X20 + 0x810]
	0x03DE47C4 TBNZ X8, 0x0, 0x3DE47DC
	0x03DE47C8 ADRP X0, 0x385000
	0x03DE47CC LDR X0, [X0 + 0x810]
	0x03DE47D0 BL 0x1C16CF4
	0x03DE47D4 MOVZ W8, 0x1
	0x03DE47D8 STRB W8, [X19 + 0x201]
	0x03DE47DC LDR X0, [X20]
	0x03DE47E0 BL 0x1C16F10
	0x03DE47E4 MOV X1, X31
	0x03DE47E8 MOV X19, X0
	0x03DE47EC BL 0x33BDD8C
	0x03DE47F0 LDR X8, [X20]
	0x03DE47F4 LDR X8, [X8 + 0xB8]
	0x03DE47F8 STR X19, [X8]
	0x03DE47FC LDP X20, X19, [X31 + 0x10]
	0x03DE4800 LDR X30, [X31], #0x20
	0x03DE4804 RET
	0x03DE4808 MOV X1, X31
	0x03DE480C B 0x33BDD8C
	0x03DE4810 ADRP X8, 0xFFFFFFFFFCD06000
	0x03DE4814 LDR V1, [X8 + 0x2CC]
	0x03DE4818 ADRP X8, 0xFFFFFFFFFCD06000
	0x03DE481C LDR V2, [X8 + 0x308]
	0x03DE4820 ADRP X8, 0xFFFFFFFFFCD05000
	0x03DE4824 LDR V3, [X8 + 0xFEC]
	0x03DE4828 FMUL S1, S0, S1
	0x03DE482C FADD S1, S1, S2
	0x03DE4830 FMUL S1, S1, S0
	0x03DE4834 FADD S1, S1, S3
	0x03DE4838 FMUL S0, S1, S0
	0x03DE483C RET
	0x03DE4840 MOV X0, X31
	0x03DE4844 B 0x3D597DC
	0x03DE4848 MOV X0, X31
	0x03DE484C B 0x3D597E4
	0x03DE4850 MOV X0, X31
	0x03DE4854 B 0x3D597F4
	0x03DE4858 MOV X0, X31
	0x03DE485C B 0x3D59768
	0x03DE4860 MOV X0, X31
	0x03DE4864 B 0x3D5976C
	0x03DE4868 MOV X0, X31
	0x03DE486C B 0x3D59798
	0x03DE4870 MOV X0, X31
	0x03DE4874 B 0x3D597A8
	0x03DE4878 MOV X0, X31
	0x03DE487C B 0x3D59834
	0x03DE4880 MOV X0, X31
	0x03DE4884 B 0x3D59844
	0x03DE4888 MOV X0, X31
	0x03DE488C B 0x3D598A0
	0x03DE4890 MOV X0, X31
	0x03DE4894 B 0x3D59D44

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x605000
	010 Move W8, [X21+508]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x386000
	018 Move X0, [X0+1864]
	019 Call 0x1C17CF4
	020 Move X0, 0x382000
	021 Move X0, [X0+952]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+508], W8
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W8, W31
	027 Compare X20, 0
	028 JumpIfEqual {63}
	029 Compare X19, 0
	030 JumpIfEqual {63}
	031 Move W8, [X20+24]
	032 Move W9, [X19+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract W24, W8, 1
	035 Move X25, 0x382000
	036 Move X25, [X25+952]
	037 Move W21, W31
	038 Move X2, [X25]
	039 Move X0, X20
	040 Move W1, W21
	041 Call List`1<StylePropertyName>.get_Item, X0, X1
	042 Move X2, [X25]
	043 Move X22, X0
	044 Move X23, X1
	045 Move X0, X19
	046 Move W1, W21
	047 Call List`1<StylePropertyName>.get_Item, X0, X1
	048 Move X2, X0
	049 Move X3, X1
	050 Move X0, X22
	051 Move X1, X23
	052 Move X4, X31
	053 Call StylePropertyName.op_Inequality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {60}
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add W21, W21, 1
	060 Xor W8, W0, 1
	061 Move W8, 1
	062 Move W8, W31
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 And W0, W8, 1
	070 Move X30, [X31+64]
	071 Move X25, [X31+72]
	072 Return X0

Method: System.Boolean SameTransitionProperty(System.Collections.Generic.List`1<UnityEngine.UIElements.TimeValue> a, System.Collections.Generic.List`1<UnityEngine.UIElements.TimeValue> b)

Disassembly:
	0x03DE4898 MOV X0, X31
	0x03DE489C B 0x3D59D64
	0x03DE48A0 MOV X0, X31
	0x03DE48A4 B 0x3D59D80
	0x03DE48A8 MOV X0, X31
	0x03DE48AC B 0x3D59A80
	0x03DE48B0 MOV X0, X31
	0x03DE48B4 B 0x3D59AF8
	0x03DE48B8 MOV X0, X31
	0x03DE48BC B 0x3D59B70
	0x03DE48C0 MOV X0, X31
	0x03DE48C4 B 0x3D59C74
	0x03DE48C8 MOV X0, X31
	0x03DE48CC B 0x3D59C98
	0x03DE48D0 MOV X0, X31
	0x03DE48D4 B 0x3D59CC8
	0x03DE48D8 MOV X0, X31
	0x03DE48DC B 0x3D59950
	0x03DE48E0 MOV X0, X31
	0x03DE48E4 B 0x3D59974
	0x03DE48E8 MOV X0, X31
	0x03DE48EC B 0x3D59A2C
	0x03DE48F0 LDR W0, [X0]
	0x03DE48F4 RET
	0x03DE48F8 STR W1, [X0]
	0x03DE48FC RET
	0x03DE4900 CMP W0, W1
	0x03DE4904 CSET W0, EQ
	0x03DE4908 RET
	0x03DE490C LDR W8, [X0]
	0x03DE4910 CMP W8, W1
	0x03DE4914 CSET W0, EQ
	0x03DE4918 RET
	0x03DE491C STP X30, X21, [X31 - 0x20]!
	0x03DE4920 STP X20, X19, [X31 + 0x10]
	0x03DE4924 ADRP X21, 0x604000
	0x03DE4928 LDRB W8, [X21 + 0x202]
	0x03DE492C MOV X20, X1
	0x03DE4930 MOV X19, X0
	0x03DE4934 TBNZ X8, 0x0, 0x3DE494C
	0x03DE4938 ADRP X0, 0x33A000
	0x03DE493C LDR X0, [X0 + 0x4B0]
	0x03DE4940 BL 0x1C16CF4
	0x03DE4944 MOVZ W8, 0x1
	0x03DE4948 STRB W8, [X21 + 0x202]
	0x03DE494C CBZ X20, 0x3DE4968
	0x03DE4950 ADRP X8, 0x33A000
	0x03DE4954 LDR X8, [X8 + 0x4B0]
	0x03DE4958 LDR X9, [X20]
	0x03DE495C LDR X8, [X8]
	0x03DE4960 CMP X9, X8
	0x03DE4964 B.EQ 0x3DE4970
	0x03DE4968 MOV W0, W31
	0x03DE496C B 0x3DE4988
	0x03DE4970 MOV X0, X20
	0x03DE4974 BL 0x1C16E08
	0x03DE4978 LDR W8, [X0]
	0x03DE497C LDR W9, [X19]
	0x03DE4980 CMP W9, W8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x605000
	009 Move W8, [X21+509]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x386000
	017 Move X0, [X0+1872]
	018 Call 0x1C17CF4
	019 Move X0, 0x382000
	020 Move X0, [X0+960]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+509], W8
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, W31
	026 Compare X20, 0
	027 JumpIfEqual {59}
	028 Compare X19, 0
	029 JumpIfEqual {59}
	030 Move W8, [X20+24]
	031 Move W9, [X19+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract W23, W8, 1
	034 Move X24, 0x382000
	035 Move X24, [X24+960]
	036 Move W21, W31
	037 Move X2, [X24]
	038 Move X0, X20
	039 Move W1, W21
	040 Call List`1<TimeValue>.get_Item, X0, X1
	041 Move X2, [X24]
	042 Move X22, X0
	043 Move X0, X19
	044 Move W1, W21
	045 Call List`1<TimeValue>.get_Item, X0, X1
	046 Move X1, X0
	047 Move X0, X22
	048 Move X2, X31
	049 Call TimeValue.op_Inequality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {56}
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add W21, W21, 1
	056 Xor W8, W0, 1
	057 Move W8, 1
	058 Move W8, W31
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X24, [X31+16]
	064 Move X23, [X31+24]
	065 And W0, W8, 1
	066 Move X30, [X31+64]
	067 Return X0

Method: System.Void ComputeTransitionPropertyData(ref UnityEngine.UIElements.ComputedStyle computedStyle, System.Collections.Generic.List`1<UnityEngine.UIElements.ComputedTransitionProperty> outData)

Disassembly:
	0x03DE43B8 LDR X0, [X21]
	0x03DE43BC LDR W8, [X0 + 0xE0]
	0x03DE43C0 CBNZ W8, 0x3DE43CC
	0x03DE43C4 BL 0x1C16DFC
	0x03DE43C8 LDR X0, [X21]
	0x03DE43CC LDR X8, [X0 + 0xB8]
	0x03DE43D0 LDR X19, [X8 + 0x88]
	0x03DE43D4 CBNZ X19, 0x3DE4710
	0x03DE43D8 LDR W8, [X0 + 0xE0]
	0x03DE43DC CBNZ W8, 0x3DE43E8
	0x03DE43E0 BL 0x1C16DFC
	0x03DE43E4 LDR X0, [X21]
	0x03DE43E8 ADRP X9, 0x339000
	0x03DE43EC LDR X8, [X0 + 0xB8]
	0x03DE43F0 LDR X9, [X9 + 0xD10]
	0x03DE43F4 LDR X20, [X8]
	0x03DE43F8 LDR X0, [X9]
	0x03DE43FC BL 0x1C16F10
	0x03DE4400 ADRP X8, 0x385000
	0x03DE4404 LDR X8, [X8 + 0x790]
	0x03DE4408 MOV X1, X20
	0x03DE440C MOV X3, X31
	0x03DE4410 MOV X19, X0
	0x03DE4414 LDR X2, [X8]
	0x03DE4418 BL 0x2D32CC4
	0x03DE441C LDR X8, [X21]
	0x03DE4420 LDR X8, [X8 + 0xB8]
	0x03DE4424 STR X19, [X8 + 0x88]
	0x03DE4428 B 0x3DE4710
	0x03DE442C ADRP X21, 0x385000
	0x03DE4430 LDR X21, [X21 + 0x810]
	0x03DE4434 LDR X0, [X21]
	0x03DE4438 LDR W8, [X0 + 0xE0]
	0x03DE443C CBNZ W8, 0x3DE4448
	0x03DE4440 BL 0x1C16DFC
	0x03DE4444 LDR X0, [X21]
	0x03DE4448 LDR X8, [X0 + 0xB8]
	0x03DE444C LDR X19, [X8 + 0x90]
	0x03DE4450 CBNZ X19, 0x3DE4710
	0x03DE4454 LDR W8, [X0 + 0xE0]
	0x03DE4458 CBNZ W8, 0x3DE4464
	0x03DE445C BL 0x1C16DFC
	0x03DE4460 LDR X0, [X21]
	0x03DE4464 ADRP X9, 0x339000
	0x03DE4468 LDR X8, [X0 + 0xB8]
	0x03DE446C LDR X9, [X9 + 0xD10]
	0x03DE4470 LDR X20, [X8]
	0x03DE4474 LDR X0, [X9]
	0x03DE4478 BL 0x1C16F10
	0x03DE447C ADRP X8, 0x385000
	0x03DE4480 LDR X8, [X8 + 0x798]
	0x03DE4484 MOV X1, X20
	0x03DE4488 MOV X3, X31
	0x03DE448C MOV X19, X0
	0x03DE4490 LDR X2, [X8]
	0x03DE4494 BL 0x2D32CC4
	0x03DE4498 LDR X8, [X21]
	0x03DE449C LDR X8, [X8 + 0xB8]
	0x03DE44A0 STR X19, [X8 + 0x90]
	0x03DE44A4 B 0x3DE4710
	0x03DE44A8 ADRP X21, 0x385000
	0x03DE44AC LDR X21, [X21 + 0x810]
	0x03DE44B0 LDR X0, [X21]
	0x03DE44B4 LDR W8, [X0 + 0xE0]
	0x03DE44B8 CBNZ W8, 0x3DE44C4
	0x03DE44BC BL 0x1C16DFC
	0x03DE44C0 LDR X0, [X21]
	0x03DE44C4 LDR X8, [X0 + 0xB8]
	0x03DE44C8 LDR X19, [X8 + 0x98]
	0x03DE44CC CBNZ X19, 0x3DE4710
	0x03DE44D0 LDR W8, [X0 + 0xE0]
	0x03DE44D4 CBNZ W8, 0x3DE44E0
	0x03DE44D8 BL 0x1C16DFC
	0x03DE44DC LDR X0, [X21]
	0x03DE44E0 ADRP X9, 0x339000
	0x03DE44E4 LDR X8, [X0 + 0xB8]
	0x03DE44E8 LDR X9, [X9 + 0xD10]
	0x03DE44EC LDR X20, [X8]
	0x03DE44F0 LDR X0, [X9]
	0x03DE44F4 BL 0x1C16F10
	0x03DE44F8 ADRP X8, 0x385000
	0x03DE44FC LDR X8, [X8 + 0x7A0]
	0x03DE4500 MOV X1, X20
	0x03DE4504 MOV X3, X31
	0x03DE4508 MOV X19, X0
	0x03DE450C LDR X2, [X8]
	0x03DE4510 BL 0x2D32CC4
	0x03DE4514 LDR X8, [X21]
	0x03DE4518 LDR X8, [X8 + 0xB8]
	0x03DE451C STR X19, [X8 + 0x98]
	0x03DE4520 B 0x3DE4710
	0x03DE4524 ADRP X21, 0x385000
	0x03DE4528 LDR X21, [X21 + 0x810]
	0x03DE452C LDR X0, [X21]
	0x03DE4530 LDR W8, [X0 + 0xE0]
	0x03DE4534 CBNZ W8, 0x3DE4540
	0x03DE4538 BL 0x1C16DFC
	0x03DE453C LDR X0, [X21]
	0x03DE4540 LDR X8, [X0 + 0xB8]
	0x03DE4544 LDR X19, [X8 + 0xA0]
	0x03DE4548 CBNZ X19, 0x3DE4710
	0x03DE454C LDR W8, [X0 + 0xE0]
	0x03DE4550 CBNZ W8, 0x3DE455C
	0x03DE4554 BL 0x1C16DFC
	0x03DE4558 LDR X0, [X21]
	0x03DE455C ADRP X9, 0x339000
	0x03DE4560 LDR X8, [X0 + 0xB8]
	0x03DE4564 LDR X9, [X9 + 0xD10]
	0x03DE4568 LDR X20, [X8]
	0x03DE456C LDR X0, [X9]
	0x03DE4570 BL 0x1C16F10
	0x03DE4574 ADRP X8, 0x385000
	0x03DE4578 LDR X8, [X8 + 0x7A8]
	0x03DE457C MOV X1, X20
	0x03DE4580 MOV X3, X31
	0x03DE4584 MOV X19, X0
	0x03DE4588 LDR X2, [X8]
	0x03DE458C BL 0x2D32CC4
	0x03DE4590 LDR X8, [X21]
	0x03DE4594 LDR X8, [X8 + 0xB8]
	0x03DE4598 STR X19, [X8 + 0xA0]
	0x03DE459C B 0x3DE4710
	0x03DE45A0 ADRP X21, 0x385000
	0x03DE45A4 LDR X21, [X21 + 0x810]
	0x03DE45A8 LDR X0, [X21]
	0x03DE45AC LDR W8, [X0 + 0xE0]
	0x03DE45B0 CBNZ W8, 0x3DE45BC
	0x03DE45B4 BL 0x1C16DFC
	0x03DE45B8 LDR X0, [X21]
	0x03DE45BC LDR X8, [X0 + 0xB8]
	0x03DE45C0 LDR X19, [X8 + 0xA8]
	0x03DE45C4 CBNZ X19, 0x3DE4710
	0x03DE45C8 LDR W8, [X0 + 0xE0]
	0x03DE45CC CBNZ W8, 0x3DE45D8
	0x03DE45D0 BL 0x1C16DFC
	0x03DE45D4 LDR X0, [X21]
	0x03DE45D8 ADRP X9, 0x339000
	0x03DE45DC LDR X8, [X0 + 0xB8]
	0x03DE45E0 LDR X9, [X9 + 0xD10]
	0x03DE45E4 LDR X20, [X8]
	0x03DE45E8 LDR X0, [X9]
	0x03DE45EC BL 0x1C16F10
	0x03DE45F0 ADRP X8, 0x385000
	0x03DE45F4 LDR X8, [X8 + 0x7B8]
	0x03DE45F8 MOV X1, X20
	0x03DE45FC MOV X3, X31
	0x03DE4600 MOV X19, X0
	0x03DE4604 LDR X2, [X8]
	0x03DE4608 BL 0x2D32CC4
	0x03DE460C LDR X8, [X21]
	0x03DE4610 LDR X8, [X8 + 0xB8]
	0x03DE4614 STR X19, [X8 + 0xA8]
	0x03DE4618 B 0x3DE4710
	0x03DE461C ADRP X21, 0x385000
	0x03DE4620 LDR X21, [X21 + 0x810]
	0x03DE4624 LDR X0, [X21]
	0x03DE4628 LDR W8, [X0 + 0xE0]
	0x03DE462C CBNZ W8, 0x3DE4638
	0x03DE4630 BL 0x1C16DFC
	0x03DE4634 LDR X0, [X21]
	0x03DE4638 LDR X8, [X0 + 0xB8]
	0x03DE463C LDR X19, [X8 + 0xB0]
	0x03DE4640 CBNZ X19, 0x3DE4710
	0x03DE4644 LDR W8, [X0 + 0xE0]
	0x03DE4648 CBNZ W8, 0x3DE4654
	0x03DE464C BL 0x1C16DFC
	0x03DE4650 LDR X0, [X21]
	0x03DE4654 ADRP X9, 0x339000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0x605000
	015 Move W8, [X20+510]
	016 Move X19, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {45}
	022 Move X0, 0x386000
	023 Move X0, [X0+1840]
	024 Call 0x1C17CF4
	025 Move X0, 0x386000
	026 Move X0, [X0+1848]
	027 Call 0x1C17CF4
	028 Move X0, 0x381000
	029 Move X0, [X0+616]
	030 Call 0x1C17CF4
	031 Move X0, 0x386000
	032 Move X0, [X0+1856]
	033 Call 0x1C17CF4
	034 Move X0, 0x386000
	035 Move X0, [X0+1864]
	036 Call 0x1C17CF4
	037 Move X0, 0x382000
	038 Move X0, [X0+952]
	039 Call 0x1C17CF4
	040 Move X0, 0x380000
	041 Move X0, [X0+3432]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+510], W8
	045 Move X0, X23
	046 Move X1, X31
	047 Call ComputedStyle.get_transitionProperty, X0
	048 Compare X0, 0
	049 JumpIfEqual {179}
	050 Move W8, [X0+24]
	051 Move X20, X0
	052 Compare W8, 0
	053 JumpIfEqual {179}
	054 Move X0, X23
	055 Move X1, X31
	056 Call ComputedStyle.get_transitionDuration, X0
	057 Move X21, X0
	058 Move X0, X23
	059 Move X1, X31
	060 Call ComputedStyle.get_transitionDelay, X0
	061 Move X22, X0
	062 Move X0, X23
	063 Move X1, X31
	064 Call ComputedStyle.get_transitionTimingFunction, X0
	065 Move W28, [X20+24]
	066 Move [X31+8], X0
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X29, 0x382000
	069 Move X23, 0x386000
	070 Move X29, [X29+952]
	071 Move X23, [X23+1848]
	072 Move W24, W31
	073 Move X2, [X29]
	074 Move X0, X20
	075 Move W1, W24
	076 Call List`1<StylePropertyName>.get_Item, X0, X1
	077 Move X25, X0
	078 Compare W25, 0
	079 JumpIfEqual {177}
	080 Move X8, 0x380000
	081 Move X8, [X8+3432]
	082 Move X0, [X8]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move W0, W25
	088 Move X1, X31
	089 Call StylePropertyUtil.IsAnimatable, X0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {177}
	094 Add X0, X31, 24
	095 Move S0, W31
	096 Move X1, X31
	097 Move [X31+24], X31
	098 Call TimeValue..ctor, X0, V0
	099 Move X8, 0x381000
	100 Move X8, [X8+616]
	101 Move X0, [X8]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X2, [X31+24]
	107 Move X3, [X23]
	108 Move X0, X21
	109 Move W1, W24
	110 Call ComputedTransitionUtils.GetWrappingTransitionData, X0, X1, X2
	111 Call ComputedTransitionUtils.ConvertTransitionTime, X0
	112 Move W26, W0
	113 Add X0, X31, 16
	114 Move S0, W31
	115 Move X1, X31
	116 Move [X31+16], X31
	117 Call TimeValue..ctor, X0, V0
	118 Move X2, [X31+16]
	119 Move X3, [X23]
	120 Move X0, X22
	121 Move W1, W24
	122 Call ComputedTransitionUtils.GetWrappingTransitionData, X0, X1, X2
	123 Call ComputedTransitionUtils.ConvertTransitionTime, X0
	124 NotImplemented "Instruction BIC not yet implemented."
	125 Add W8, W0, W8
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X8, 0x381000
	128 Move X8, [X8+616]
	129 Move W27, W0
	130 Move X0, [X8]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X8, 0x386000
	136 Move X8, [X8+1840]
	137 Move X0, [X31+8]
	138 Move W1, W24
	139 Move X2, X31
	140 Move X3, [X8]
	141 Call 0x21A5C18, X0, X1, X2
	142 Call ComputedTransitionUtils.ConvertTransitionFunction, X0
	143 Compare X19, 0
	144 JumpIfEqual {193}
	145 Move X9, 0x386000
	146 Move W10, [X19+28]
	147 Move X8, [X19+16]
	148 Move X9, [X9+1856]
	149 Add W10, W10, 1
	150 Move X9, [X9]
	151 Move [X19+28], W10
	152 Compare X8, 0
	153 JumpIfEqual {193}
	154 NotImplemented "Instruction LDRSW not yet implemented."
	155 Move W11, [X8+24]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move W11, 24
	158 Add W9, W10, 1
	159 NotImplemented "Instruction MADD not yet implemented."
	160 Move [X19+24], W9
	161 Move [X8+32], W25
	162 Move [X8+36], W26
	163 Move [X8+40], W27
	164 Move [X8+44], W31
	165 Move [X8+48], X0
	166 Move X8, [X9+32]
	167 Add X1, X31, 24
	168 Move X8, [X8+192]
	169 Move X2, [X8+112]
	170 Move [X31+40], X0
	171 Move X0, X19
	172 Move [X31+24], W25
	173 Move [X31+28], W26
	174 Move [X31+32], W27
	175 Move [X31+36], W31
	176 Call List`1<ComputedTransitionProperty>.AddWithResize, X0, X1
	177 Add W24, W24, 1
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X20, [X31+128]
	180 Move X19, [X31+136]
	181 Move X22, [X31+112]
	182 Move X21, [X31+120]
	183 Move X24, [X31+96]
	184 Move X23, [X31+104]
	185 Move X26, [X31+80]
	186 Move X25, [X31+88]
	187 Move X28, [X31+64]
	188 Move X27, [X31+72]
	189 Move X29, [X31+48]
	190 Move X30, [X31+56]
	191 Add X31, X31, 144
	192 Return 
	193 Call 0x1C17F20

Method: T GetWrappingTransitionData(System.Collections.Generic.List`1<T> list, System.Int32 i, T defaultValue)

Disassembly:
	0x021A5C18 LDP X8, X1, [X0]
	0x021A5C1C MOV X0, X19
	0x021A5C20 BLR X8
	0x021A5C24 MOV X19, X0
	0x021A5C28 CBZ X0, 0x21A5E74
	0x021A5C2C ADRP X28, 0x1F4E000
	0x021A5C30 LDR X28, [X28 + 0xE18]
	0x021A5C34 LDR X8, [X19]
	0x021A5C38 LDR X1, [X28]
	0x021A5C3C LDRH W9, [X8 + 0x12E]
	0x021A5C40 CBZ X9, 0x21A5C64
	0x021A5C44 LDR X10, [X8 + 0xB0]
	0x021A5C48 ADD X10, X10, 0x8
	0x021A5C4C LDUR X11, [X10 - 0x8]
	0x021A5C50 CMP X11, X1
	0x021A5C54 B.EQ 0x21A5C74
	0x021A5C58 SUBS X9, X9, 0x1
	0x021A5C5C ADD X10, X10, 0x10
	0x021A5C60 B.NE 0x21A5C4C
	0x021A5C64 MOV X0, X19
	0x021A5C68 MOV W2, W31
	0x021A5C6C BL 0x1C5C788
	0x021A5C70 B 0x21A5C80
	0x021A5C74 LDRSW X9, [X10]
	0x021A5C78 ADD X8, X8, X9, 0x4, LSL
	0x021A5C7C ADD X0, X8, 0x138
	0x021A5C80 LDP X8, X1, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X22, X3
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X22
	014 Call 0x1C5D6E0
	015 Compare X21, 0
	016 JumpIfEqual {34}
	017 Move W8, [X21+24]
	018 Compare W8, 0
	019 JumpIfEqual {27}
	020 Move X9, [X22+56]
	021 Move X0, X21
	022 Move X2, [X9+16]
	023 NotImplemented "Instruction SDIV not yet implemented."
	024 NotImplemented "Instruction MSUB not yet implemented."
	025 Call List`1<EasingFunction>.get_Item, X0, X1
	026 And X19, X0, 0
	027 And X0, X19, 0
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0
	034 Call 0x1C17F20

Method: System.Int32 ConvertTransitionTime(UnityEngine.UIElements.TimeValue time)

Disassembly:
	0x03DE4984 CSET W0, EQ
	0x03DE4988 LDP X20, X19, [X31 + 0x10]
	0x03DE498C LDP X30, X21, [X31], #0x20
	0x03DE4990 RET
	0x03DE4994 SUB X31, X31, 0x40
	0x03DE4998 STP X30, X21, [X31 + 0x20]
	0x03DE499C STP X20, X19, [X31 + 0x30]
	0x03DE49A0 ADRP X20, 0x604000
	0x03DE49A4 ADRP X21, 0x385000
	0x03DE49A8 LDRB W8, [X20 + 0x203]
	0x03DE49AC LDR X21, [X21 + 0x828]
	0x03DE49B0 MOV X19, X0
	0x03DE49B4 TBNZ X8, 0x0, 0x3DE49CC
	0x03DE49B8 ADRP X0, 0x385000
	0x03DE49BC LDR X0, [X0 + 0x828]
	0x03DE49C0 BL 0x1C16CF4
	0x03DE49C4 MOVZ W8, 0x1
	0x03DE49C8 STRB W8, [X20 + 0x203]
	0x03DE49CC LDR X8, [X21]
	0x03DE49D0 MOVN X9, 0x0
	0x03DE49D4 ADD X0, X31, 0x8
	0x03DE49D8 MOV X1, X31
	0x03DE49DC STP X8, X9, [X31 + 0x8]
	0x03DE49E0 LDR W8, [X19]
	0x03DE49E4 STR W8, [X31 + 0x18]
	0x03DE49E8 BL 0x33B162C
	0x03DE49EC LDP X20, X19, [X31 + 0x30]
	0x03DE49F0 LDP X30, X21, [X31 + 0x20]
	0x03DE49F4 ADD X31, X31, 0x40
	0x03DE49F8 RET
	0x03DE49FC LDR X0, [X0]
	0x03DE4A00 RET
	0x03DE4A04 LDR X0, [X0 + 0x8]
	0x03DE4A08 RET
	0x03DE4A0C MOV X1, X31
	0x03DE4A10 RET
	0x03DE4A14 MOV X1, X0
	0x03DE4A18 MOV X0, X31
	0x03DE4A1C RET
	0x03DE4A20 STP X30, X21, [X31 - 0x20]!
	0x03DE4A24 STP X20, X19, [X31 + 0x10]
	0x03DE4A28 ADRP X20, 0x604000
	0x03DE4A2C LDRB W8, [X20 + 0x204]
	0x03DE4A30 MOV X19, X0
	0x03DE4A34 TBNZ X8, 0x0, 0x3DE4A64
	0x03DE4A38 ADRP X0, 0x37D000
	0x03DE4A3C LDR X0, [X0 + 0x258]
	0x03DE4A40 BL 0x1C16CF4
	0x03DE4A44 ADRP X0, 0x37D000
	0x03DE4A48 LDR X0, [X0 + 0xFE8]
	0x03DE4A4C BL 0x1C16CF4
	0x03DE4A50 ADRP X0, 0x30F000
	0x03DE4A54 LDR X0, [X0 + 0x598]
	0x03DE4A58 BL 0x1C16CF4
	0x03DE4A5C MOVZ W8, 0x1
	0x03DE4A60 STRB W8, [X20 + 0x204]
	0x03DE4A64 ADRP X21, 0x30F000
	0x03DE4A68 LDR X21, [X21 + 0x598]
	0x03DE4A6C CBZ X19, 0x3DE4A8C
	0x03DE4A70 ADRP X8, 0x37D000
	0x03DE4A74 LDR X8, [X8 + 0xFE8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X19
	006 Move X19, 0x5F6000
	007 Move W8, 0x447A0000
	008 Move W9, [X19+1495]
	009 Move X10, X0
	010 ShiftRight X10, 32
	011 And X10, X10, 0x7FFFFFFF
	012 Move S0, W0
	013 Move S1, W8
	014 Multiply S1, S0, S1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction FCSEL not yet implemented."
	017 Compare W9, 0
	018 JumpIfNotEqual {24}
	019 Move X0, 0x310000
	020 Move X0, [X0+1448]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+1495], W8
	024 Move X8, 0x310000
	025 Move X8, [X8+1448]
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 NotImplemented "Instruction FCVT not yet implemented."
	032 Add X0, X31, 8
	033 Move V0, V8
	034 Call 0x3EB2C00
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 Move D1, -0.5
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move V0, [X31+8]
	039 Move D1, -1
	040 Move D1, 0.5
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 Move V0, [X31+8]
	043 Move D1, 1
	044 NotImplemented "Instruction FCVTZS not yet implemented."
	045 Add D1, D0, D1
	046 And X31, X8, 1
	047 NotImplemented "Instruction FCSEL not yet implemented."
	048 Add D0, D8, D1
	049 NotImplemented "Instruction FRINTP not yet implemented."
	050 Add D0, D8, D1
	051 NotImplemented "Instruction FRINTM not yet implemented."
	052 Move X8, 0x7FF00000
	053 Move X30, [X31+32]
	054 Move X19, [X31+40]
	055 Move D9, [X31+16]
	056 Move D8, [X31+24]
	057 Move D1, X8
	058 NotImplemented "Instruction FCVTZS not yet implemented."
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Move W8, 0x80000000
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Add X31, X31, 48
	063 Return X0

Method: System.Func`2<System.Single, System.Single> ConvertTransitionFunction(UnityEngine.UIElements.EasingMode mode)

Disassembly:
	0x03DE4A80 CMP X9, X8
	0x03DE4A84 CSEL X20, X19, X31, EQ
	0x03DE4A88 B 0x3DE4A90
	0x03DE4A8C MOV X20, X31
	0x03DE4A90 LDR X0, [X21]
	0x03DE4A94 LDR W8, [X0 + 0xE0]
	0x03DE4A98 CBNZ W8, 0x3DE4AA0
	0x03DE4A9C BL 0x1C16DFC
	0x03DE4AA0 MOV X0, X20
	0x03DE4AA4 MOV X1, X31
	0x03DE4AA8 MOV X2, X31
	0x03DE4AAC BL 0x3C354F8
	0x03DE4AB0 TBZ X0, 0x0, 0x3DE4ABC
	0x03DE4AB4 MOV X1, X31
	0x03DE4AB8 B 0x3DE4B28
	0x03DE4ABC CBZ X19, 0x3DE4AFC
	0x03DE4AC0 ADRP X8, 0x37D000
	0x03DE4AC4 LDR X8, [X8 + 0x258]
	0x03DE4AC8 LDR X9, [X19]
	0x03DE4ACC LDR X8, [X8]
	0x03DE4AD0 LDRB W11, [X9 + 0x130]
	0x03DE4AD4 LDRB W10, [X8 + 0x130]
	0x03DE4AD8 CMP W11, W10
	0x03DE4ADC B.CS 0x3DE4AE8
	0x03DE4AE0 MOV X19, X31
	0x03DE4AE4 B 0x3DE4AFC
	0x03DE4AE8 LDR X9, [X9 + 0xC8]
	0x03DE4AEC ADD X9, X9, X10, 0x3, LSL
	0x03DE4AF0 LDUR X9, [X9 - 0x8]
	0x03DE4AF4 CMP X9, X8
	0x03DE4AF8 CSEL X19, X19, X31, EQ
	0x03DE4AFC LDR X0, [X21]
	0x03DE4B00 LDR W8, [X0 + 0xE0]
	0x03DE4B04 CBNZ W8, 0x3DE4B0C
	0x03DE4B08 BL 0x1C16DFC
	0x03DE4B0C MOV X0, X19
	0x03DE4B10 MOV X1, X31
	0x03DE4B14 MOV X2, X31
	0x03DE4B18 BL 0x3C354F8
	0x03DE4B1C ANDS W31, W0, 0x1
	0x03DE4B20 MOV X20, X31
	0x03DE4B24 CSEL X1, X19, X31, NE
	0x03DE4B28 MOV X0, X20
	0x03DE4B2C LDP X20, X19, [X31 + 0x10]
	0x03DE4B30 LDP X30, X21, [X31], #0x20
	0x03DE4B34 RET
	0x03DE4B38 STP X30, X21, [X31 - 0x20]!
	0x03DE4B3C STP X20, X19, [X31 + 0x10]
	0x03DE4B40 ADRP X20, 0x604000
	0x03DE4B44 ADRP X21, 0x30F000
	0x03DE4B48 LDRB W8, [X20 + 0x205]
	0x03DE4B4C LDR X21, [X21 + 0x598]
	0x03DE4B50 MOV X19, X0
	0x03DE4B54 TBNZ X8, 0x0, 0x3DE4B6C
	0x03DE4B58 ADRP X0, 0x30F000
	0x03DE4B5C LDR X0, [X0 + 0x598]
	0x03DE4B60 BL 0x1C16CF4
	0x03DE4B64 MOVZ W8, 0x1
	0x03DE4B68 STRB W8, [X20 + 0x205]
	0x03DE4B6C LDR X0, [X21]
	0x03DE4B70 LDR X20, [X19]
	0x03DE4B74 LDR W8, [X0 + 0xE0]
	0x03DE4B78 CBNZ W8, 0x3DE4B80
	0x03DE4B7C BL 0x1C16DFC
	0x03DE4B80 MOV X0, X20
	0x03DE4B84 MOV X1, X31
	0x03DE4B88 MOV X2, X31
	0x03DE4B8C BL 0x3C3883C
	0x03DE4B90 TBZ X0, 0x0, 0x3DE4BC0
	0x03DE4B94 LDR X0, [X21]
	0x03DE4B98 LDR X19, [X19 + 0x8]
	0x03DE4B9C LDR W8, [X0 + 0xE0]
	0x03DE4BA0 CBNZ W8, 0x3DE4BA8
	0x03DE4BA4 BL 0x1C16DFC
	0x03DE4BA8 MOV X0, X19
	0x03DE4BAC LDP X20, X19, [X31 + 0x10]
	0x03DE4BB0 MOV X1, X31
	0x03DE4BB4 MOV X2, X31
	0x03DE4BB8 LDP X30, X21, [X31], #0x20
	0x03DE4BBC B 0x3C3883C
	0x03DE4BC0 LDP X20, X19, [X31 + 0x10]
	0x03DE4BC4 MOV W0, W31
	0x03DE4BC8 LDP X30, X21, [X31], #0x20
	0x03DE4BCC RET
	0x03DE4BD0 STP X30, X21, [X31 - 0x20]!
	0x03DE4BD4 STP X20, X19, [X31 + 0x10]
	0x03DE4BD8 ADRP X21, 0x604000
	0x03DE4BDC ADRP X20, 0x30F000
	0x03DE4BE0 LDRB W8, [X21 + 0x206]
	0x03DE4BE4 LDR X20, [X20 + 0x598]
	0x03DE4BE8 MOV X19, X0
	0x03DE4BEC TBNZ X8, 0x0, 0x3DE4C10
	0x03DE4BF0 ADRP X0, 0x30F000
	0x03DE4BF4 LDR X0, [X0 + 0x598]
	0x03DE4BF8 BL 0x1C16CF4
	0x03DE4BFC ADRP X0, 0x313000
	0x03DE4C00 LDR X0, [X0 + 0x110]
	0x03DE4C04 BL 0x1C16CF4
	0x03DE4C08 MOVZ W8, 0x1
	0x03DE4C0C STRB W8, [X21 + 0x206]
	0x03DE4C10 LDR X0, [X20]
	0x03DE4C14 LDR X20, [X19]
	0x03DE4C18 LDR W8, [X0 + 0xE0]
	0x03DE4C1C CBNZ W8, 0x3DE4C24
	0x03DE4C20 BL 0x1C16DFC
	0x03DE4C24 MOV X0, X20
	0x03DE4C28 MOV X1, X31
	0x03DE4C2C MOV X2, X31
	0x03DE4C30 BL 0x3C354F8
	0x03DE4C34 TBZ X0, 0x0, 0x3DE4C40
	0x03DE4C38 LDR X1, [X19]
	0x03DE4C3C B 0x3DE4C44
	0x03DE4C40 LDR X1, [X19 + 0x8]
	0x03DE4C44 ADRP X8, 0x313000
	0x03DE4C48 LDR X8, [X8 + 0x110]
	0x03DE4C4C LDP X20, X19, [X31 + 0x10]
	0x03DE4C50 MOV X2, X31
	0x03DE4C54 LDR X0, [X8]
	0x03DE4C58 LDP X30, X21, [X31], #0x20
	0x03DE4C5C B 0x321EFD0
	0x03DE4C60 STR X30, [X31 - 0x20]!
	0x03DE4C64 STP X20, X19, [X31 + 0x10]
	0x03DE4C68 MOV X20, X0
	0x03DE4C6C LDR X0, [X0]
	0x03DE4C70 MOV X19, X2
	0x03DE4C74 MOV X2, X31
	0x03DE4C78 BL 0x33CB4B0
	0x03DE4C7C TBZ X0, 0x0, 0x3DE4C98
	0x03DE4C80 LDR X0, [X20 + 0x8]
	0x03DE4C84 MOV X1, X19
	0x03DE4C88 LDP X20, X19, [X31 + 0x10]
	0x03DE4C8C MOV X2, X31
	0x03DE4C90 LDR X30, [X31], #0x20
	0x03DE4C94 B 0x33CB4B0
	0x03DE4C98 LDP X20, X19, [X31 + 0x10]
	0x03DE4C9C MOV W0, W31
	0x03DE4CA0 LDR X30, [X31], #0x20
	0x03DE4CA4 RET
	0x03DE4CA8 STP X30, X21, [X31 - 0x20]!
	0x03DE4CAC STP X20, X19, [X31 + 0x10]
	0x03DE4CB0 ADRP X21, 0x604000
	0x03DE4CB4 LDRB W8, [X21 + 0x207]
	0x03DE4CB8 MOV X20, X1
	0x03DE4CBC MOV X19, X0
	0x03DE4CC0 TBNZ X8, 0x0, 0x3DE4CD8
	0x03DE4CC4 ADRP X0, 0x33A000
	0x03DE4CC8 LDR X0, [X0 + 0xE00]
	0x03DE4CCC BL 0x1C16CF4
	0x03DE4CD0 MOVZ W8, 0x1
	0x03DE4CD4 STRB W8, [X21 + 0x207]
	0x03DE4CD8 CBZ X20, 0x3DE4CF4
	0x03DE4CDC ADRP X8, 0x33A000
	0x03DE4CE0 LDR X8, [X8 + 0xE00]
	0x03DE4CE4 LDR X9, [X20]
	0x03DE4CE8 LDR X8, [X8]
	0x03DE4CEC CMP X9, X8
	0x03DE4CF0 B.EQ 0x3DE4D04
	0x03DE4CF4 LDP X20, X19, [X31 + 0x10]
	0x03DE4CF8 MOV W0, W31
	0x03DE4CFC LDP X30, X21, [X31], #0x20
	0x03DE4D00 RET
	0x03DE4D04 MOV X0, X20
	0x03DE4D08 BL 0x1C16E08
	0x03DE4D0C LDP X1, X2, [X0]
	0x03DE4D10 MOV X0, X19
	0x03DE4D14 LDP X20, X19, [X31 + 0x10]
	0x03DE4D18 LDP X30, X21, [X31], #0x20
	0x03DE4D1C B 0x3DE4C60
	0x03DE4D20 STR X30, [X31 - 0x30]!
	0x03DE4D24 STP X22, X21, [X31 + 0x10]
	0x03DE4D28 STP X20, X19, [X31 + 0x20]
	0x03DE4D2C ADRP X20, 0x604000
	0x03DE4D30 ADRP X21, 0x30F000
	0x03DE4D34 LDRB W8, [X20 + 0x208]
	0x03DE4D38 LDR X21, [X21 + 0x598]
	0x03DE4D3C MOV X19, X0
	0x03DE4D40 TBNZ X8, 0x0, 0x3DE4D58
	0x03DE4D44 ADRP X0, 0x30F000
	0x03DE4D48 LDR X0, [X0 + 0x598]
	0x03DE4D4C BL 0x1C16CF4
	0x03DE4D50 MOVZ W8, 0x1
	0x03DE4D54 STRB W8, [X20 + 0x208]
	0x03DE4D58 LDR X0, [X21]
	0x03DE4D5C LDR X20, [X19]
	0x03DE4D60 LDR W8, [X0 + 0xE0]
	0x03DE4D64 CBNZ W8, 0x3DE4D6C
	0x03DE4D68 BL 0x1C16DFC
	0x03DE4D6C MOV X0, X20
	0x03DE4D70 MOV X1, X31
	0x03DE4D74 MOV X2, X31
	0x03DE4D78 BL 0x3C354F8
	0x03DE4D7C TBZ X0, 0x0, 0x3DE4DA0
	0x03DE4D80 LDR X0, [X19]
	0x03DE4D84 CBZ X0, 0x3DE4DFC
	0x03DE4D88 LDR X8, [X0]
	0x03DE4D8C LDP X9, X1, [X8 + 0x158]
	0x03DE4D90 BLR X9
	0x03DE4D94 MOVZ W8, 0x18D
	0x03DE4D98 MUL W22, W0, W8
	0x03DE4D9C B 0x3DE4DA4
	0x03DE4DA0 MOV W22, W31
	0x03DE4DA4 LDR X0, [X21]
	0x03DE4DA8 LDR X20, [X19 + 0x8]
	0x03DE4DAC LDR W8, [X0 + 0xE0]
	0x03DE4DB0 CBNZ W8, 0x3DE4DB8
	0x03DE4DB4 BL 0x1C16DFC
	0x03DE4DB8 MOV X0, X20
	0x03DE4DBC MOV X1, X31
	0x03DE4DC0 MOV X2, X31
	0x03DE4DC4 BL 0x3C354F8
	0x03DE4DC8 TBZ X0, 0x0, 0x3DE4DE4
	0x03DE4DCC LDR X0, [X19 + 0x8]
	0x03DE4DD0 CBZ X0, 0x3DE4DFC
	0x03DE4DD4 LDR X8, [X0]
	0x03DE4DD8 LDP X9, X1, [X8 + 0x158]
	0x03DE4DDC BLR X9
	0x03DE4DE0 B 0x3DE4DE8
	0x03DE4DE4 MOV W0, W31
	0x03DE4DE8 EOR W0, W0, W22, 0x0
	0x03DE4DEC LDP X20, X19, [X31 + 0x20]
	0x03DE4DF0 LDP X22, X21, [X31 + 0x10]
	0x03DE4DF4 LDR X30, [X31], #0x30
	0x03DE4DF8 RET
	0x03DE4DFC BL 0x1C16F20
	0x03DE4E00 SUB X31, X31, 0x20
	0x03DE4E04 STP X1, X30, [X31 + 0x8]
	0x03DE4E08 STR X0, [X31]
	0x03DE4E0C ADD X0, X31, 0x0
	0x03DE4E10 MOV X1, X2
	0x03DE4E14 MOV X2, X3
	0x03DE4E18 BL 0x3DE4C60
	0x03DE4E1C LDR X30, [X31 + 0x10]
	0x03DE4E20 AND W0, W0, 0x1
	0x03DE4E24 ADD X31, X31, 0x20
	0x03DE4E28 RET
	0x03DE4E2C SUB X31, X31, 0x20
	0x03DE4E30 STP X1, X30, [X31 + 0x8]
	0x03DE4E34 STR X0, [X31]
	0x03DE4E38 ADD X0, X31, 0x0
	0x03DE4E3C MOV X1, X2
	0x03DE4E40 MOV X2, X3
	0x03DE4E44 BL 0x3DE4C60
	0x03DE4E48 LDR X30, [X31 + 0x10]
	0x03DE4E4C ORN W8, W31, W0, 0x0
	0x03DE4E50 AND W0, W8, 0x1
	0x03DE4E54 ADD X31, X31, 0x20
	0x03DE4E58 RET
	0x03DE4E5C SUB X31, X31, 0x30
	0x03DE4E60 STP X30, X19, [X31 + 0x20]
	0x03DE4E64 LDR W8, [X1 + 0x10]
	0x03DE4E68 LDR V0, [X1]
	0x03DE4E6C ADD X2, X31, 0x0
	0x03DE4E70 MOVZ W1, 0x70000
	0x03DE4E74 MOV X19, X0
	0x03DE4E78 STR W8, [X31 + 0x10]
	0x03DE4E7C STR V0, [X31]
	0x03DE4E80 BL 0x3DE4EBC
	0x03DE4E84 TBZ X0, 0x0, 0x3DE4EAC
	0x03DE4E88 LDR X1, [X19 + 0x20]
	0x03DE4E8C CBZ X1, 0x3DE4EB8
	0x03DE4E90 LDR X0, [X1 + 0x3A0]
	0x03DE4E94 CBZ X0, 0x3DE4EAC
	0x03DE4E98 LDR X8, [X0]
	0x03DE4E9C MOVZ W2, 0x2020
	0x03DE4EA0 LDR X9, [X8 + 0x338]
	0x03DE4EA4 LDR X3, [X8 + 0x340]
	0x03DE4EA8 BLR X9
	0x03DE4EAC LDP X30, X19, [X31 + 0x20]
	0x03DE4EB0 ADD X31, X31, 0x30
	0x03DE4EB4 RET
	0x03DE4EB8 BL 0x1C16F20
	0x03DE4EBC SUB X31, X31, 0xB0
	0x03DE4EC0 STP D11, D10, [X31 + 0x60]
	0x03DE4EC4 STP D9, D8, [X31 + 0x70]
	0x03DE4EC8 STP X30, X23, [X31 + 0x80]
	0x03DE4ECC STP X22, X21, [X31 + 0x90]
	0x03DE4ED0 STP X20, X19, [X31 + 0xA0]
	0x03DE4ED4 MRS X22, 0xC000
	0x03DE4ED8 LDR X8, [X22 + 0x28]
	0x03DE4EDC MOV X21, X2
	0x03DE4EE0 ADD X2, X31, 0x40
	0x03DE4EE4 MOV X3, X31
	0x03DE4EE8 MOV W20, W1
	0x03DE4EEC MOV X19, X0
	0x03DE4EF0 STR X8, [X31 + 0x58]
	0x03DE4EF4 STP X31, X31, [X31 + 0x40]
	0x03DE4EF8 STR X31, [X31 + 0x50]
	0x03DE4EFC BL 0x3DFCED8
	0x03DE4F00 TBZ X0, 0x0, 0x3DE4FD8
	0x03DE4F04 LDP S8, S9, [X31 + 0x48]
	0x03DE4F08 LDP S10, S11, [X31 + 0x50]
	0x03DE4F0C MOV X0, X21
	0x03DE4F10 MOV X1, X31
	0x03DE4F14 BL 0x3DFE0AC
	0x03DE4F18 FSUB S0, S8, S0
	0x03DE4F1C FSUB S1, S9, S1
	0x03DE4F20 ADRP X8, 0xFFFFFFFFFCD05000
	0x03DE4F24 FSUB S2, S10, S2
	0x03DE4F28 FMUL S0, S0, S0
	0x03DE4F2C FMUL S1, S1, S1
	0x03DE4F30 LDR V4, [X8 + 0xF20]
	0x03DE4F34 FSUB S3, S11, S3
	0x03DE4F38 FMUL S2, S2, S2
	0x03DE4F3C FADD S0, S0, S1
	0x03DE4F40 FADD S0, S2, S0
	0x03DE4F44 FMUL S1, S3, S3
	0x03DE4F48 FADD S0, S1, S0
	0x03DE4F4C FCMP S0, S4
	0x03DE4F50 B.PL 0x3DE4F6C
	0x03DE4F54 LDR W23, [X31 + 0x44]
	0x03DE4F58 MOV X0, X21
	0x03DE4F5C MOV X1, X31
	0x03DE4F60 BL 0x3DFE0D4
	0x03DE4F64 CMP W23, W0
	0x03DE4F68 B.EQ 0x3DE4FEC
	0x03DE4F6C MOV X0, X21
	0x03DE4F70 MOV X1, X31
	0x03DE4F74 STR W20, [X31 + 0x40]
	0x03DE4F78 BL 0x3DFE0D4
	0x03DE4F7C STR W0, [X31 + 0x44]
	0x03DE4F80 MOV X0, X21
	0x03DE4F84 MOV X1, X31
	0x03DE4F88 BL 0x3DFE0AC
	0x03DE4F8C STP S0, S1, [X31 + 0x48]
	0x03DE4F90 STP S2, S3, [X31 + 0x50]
	0x03DE4F94 LDR V0, [X31 + 0x4]
	0x03DE4F98 LDR X8, [X31 + 0x50]
	0x03DE4F9C ADD X1, X31, 0x20
	0x03DE4FA0 MOV X0, X19
	0x03DE4FA4 MOV X2, X31
	0x03DE4FA8 STR V0, [X31 + 0x2]
	0x03DE4FAC STR X8, [X31 + 0x30]
	0x03DE4FB0 BL 0x3DFD1AC
	0x03DE4FB4 MOV X0, X21
	0x03DE4FB8 MOV X1, X31
	0x03DE4FBC BL 0x3DFE0D4
	0x03DE4FC0 CMP W0, 0x1
	0x03DE4FC4 B.NE 0x3DE4FF4
	0x03DE4FC8 MOV X0, X19
	0x03DE4FCC MOV W1, W20
	0x03DE4FD0 BL 0x3DE849C
	0x03DE4FD4 B 0x3DE5014
	0x03DE4FD8 MOV X0, X21
	0x03DE4FDC MOV X1, X31
	0x03DE4FE0 BL 0x3DFE0D4
	0x03DE4FE4 CMP W0, 0x1
	0x03DE4FE8 B.NE 0x3DE4F6C
	0x03DE4FEC MOV W0, W31
	0x03DE4FF0 B 0x3DE5014
	0x03DE4FF4 LDR V0, [X31 + 0x4]
	0x03DE4FF8 LDR X8, [X31 + 0x50]
	0x03DE4FFC ADD X1, X31, 0x0
	0x03DE5000 MOV X0, X19
	0x03DE5004 STR V0, [X31]
	0x03DE5008 STR X8, [X31 + 0x10]
	0x03DE500C BL 0x3DE8584
	0x03DE5010 MOVZ W0, 0x1
	0x03DE5014 LDR X8, [X22 + 0x28]
	0x03DE5018 LDR X9, [X31 + 0x58]
	0x03DE501C CMP X8, X9
	0x03DE5020 B.NE 0x3DE5044
	0x03DE5024 LDP X20, X19, [X31 + 0xA0]
	0x03DE5028 LDP X22, X21, [X31 + 0x90]
	0x03DE502C LDP X30, X23, [X31 + 0x80]
	0x03DE5030 LDP D9, D8, [X31 + 0x70]
	0x03DE5034 LDP D11, D10, [X31 + 0x60]
	0x03DE5038 AND W0, W0, 0x1
	0x03DE503C ADD X31, X31, 0xB0
	0x03DE5040 RET
	0x03DE5044 BL 0x3EB1B20
	0x03DE5048 MOV X8, X0
	0x03DE504C LDR X0, [X0 + 0x3A0]
	0x03DE5050 CBZ X0, 0x3DE506C
	0x03DE5054 LDR X9, [X0]
	0x03DE5058 MOV W2, W1
	0x03DE505C MOV X1, X8
	0x03DE5060 LDR X4, [X9 + 0x338]
	0x03DE5064 LDR X3, [X9 + 0x340]
	0x03DE5068 BR X4
	0x03DE506C RET
	0x03DE5070 SUB X31, X31, 0x30
	0x03DE5074 STP X30, X19, [X31 + 0x20]
	0x03DE5078 LDR W8, [X1 + 0x10]
	0x03DE507C LDR V0, [X1]
	0x03DE5080 MOVZ W1, 0x6
	0x03DE5084 ADD X2, X31, 0x0
	0x03DE5088 MOVK W1, 0x70000
	0x03DE508C MOV X19, X0
	0x03DE5090 STR W8, [X31 + 0x10]
	0x03DE5094 STR V0, [X31]
	0x03DE5098 BL 0x3DE4EBC
	0x03DE509C TBZ X0, 0x0, 0x3DE50C4
	0x03DE50A0 LDR X1, [X19 + 0x20]
	0x03DE50A4 CBZ X1, 0x3DE50D0
	0x03DE50A8 LDR X0, [X1 + 0x3A0]
	0x03DE50AC CBZ X0, 0x3DE50C4
	0x03DE50B0 LDR X8, [X0]
	0x03DE50B4 MOVZ W2, 0x2020
	0x03DE50B8 LDR X9, [X8 + 0x338]
	0x03DE50BC LDR X3, [X8 + 0x340]
	0x03DE50C0 BLR X9
	0x03DE50C4 LDP X30, X19, [X31 + 0x20]
	0x03DE50C8 ADD X31, X31, 0x30
	0x03DE50CC RET
	0x03DE50D0 BL 0x1C16F20
	0x03DE50D4 STP X30, X19, [X31 - 0x10]!
	0x03DE50D8 MOV X8, X1
	0x03DE50DC AND X3, X2, 0x0
	0x03DE50E0 ORR W1, W31, 0x70007
	0x03DE50E4 MOV X2, X8
	0x03DE50E8 MOV X19, X0
	0x03DE50EC BL 0x3DE5128
	0x03DE50F0 TBZ X0, 0x0, 0x3DE511C
	0x03DE50F4 LDR X1, [X19 + 0x20]
	0x03DE50F8 CBZ X1, 0x3DE5124
	0x03DE50FC LDR X0, [X1 + 0x3A0]
	0x03DE5100 CBZ X0, 0x3DE511C
	0x03DE5104 LDR X8, [X0]
	0x03DE5108 MOVZ W2, 0x8A0
	0x03DE510C LDR X4, [X8 + 0x338]
	0x03DE5110 LDR X3, [X8 + 0x340]
	0x03DE5114 LDP X30, X19, [X31], #0x10
	0x03DE5118 BR X4
	0x03DE511C LDP X30, X19, [X31], #0x10
	0x03DE5120 RET
	0x03DE5124 BL 0x1C16F20
	0x03DE5128 SUB X31, X31, 0xB0
	0x03DE512C STR X30, [X31 + 0x70]
	0x03DE5130 STP X24, X23, [X31 + 0x80]
	0x03DE5134 STP X22, X21, [X31 + 0x90]
	0x03DE5138 STP X20, X19, [X31 + 0xA0]
	0x03DE513C MRS X24, 0xC000
	0x03DE5140 LDR X8, [X24 + 0x28]
	0x03DE5144 MOV X22, X3
	0x03DE5148 MOV X21, X2
	0x03DE514C MOV X3, X31
	0x03DE5150 STR X8, [X31 + 0x68]
	0x03DE5154 STR X2, [X31]
	0x03DE5158 ADD X2, X31, 0x50
	0x03DE515C MOV W20, W1
	0x03DE5160 MOV X19, X0
	0x03DE5164 STR W22, [X31 + 0x8]
	0x03DE5168 STP X31, X31, [X31 + 0x50]
	0x03DE516C STR X31, [X31 + 0x60]
	0x03DE5170 BL 0x3DFCED8
	0x03DE5174 TBZ X0, 0x0, 0x3DE5228
	0x03DE5178 LDR X23, [X31 + 0x58]
	0x03DE517C AND X1, X22, 0x0
	0x03DE5180 MOV X0, X21
	0x03DE5184 MOV X2, X31
	0x03DE5188 BL 0x3E00518
	0x03DE518C MOV X1, X0
	0x03DE5190 MOV X0, X23
	0x03DE5194 MOV X2, X31
	0x03DE5198 BL 0x3DFAD2C
	0x03DE519C TBZ X0, 0x0, 0x3DE51B8
	0x03DE51A0 LDR W21, [X31 + 0x54]
	0x03DE51A4 ADD X0, X31, 0x0
	0x03DE51A8 MOV X1, X31
	0x03DE51AC BL 0x3DFED00
	0x03DE51B0 CMP W21, W0
	0x03DE51B4 B.EQ 0x3DE523C
	0x03DE51B8 ADD X0, X31, 0x0
	0x03DE51BC MOV X1, X31
	0x03DE51C0 STR W20, [X31 + 0x50]
	0x03DE51C4 BL 0x3DFED00
	0x03DE51C8 LDR X8, [X31]
	0x03DE51CC LDR W1, [X31 + 0x8]
	0x03DE51D0 STR W0, [X31 + 0x54]
	0x03DE51D4 MOV X2, X31
	0x03DE51D8 MOV X0, X8
	0x03DE51DC BL 0x3E00518
	0x03DE51E0 STR X0, [X31 + 0x58]
	0x03DE51E4 LDR X8, [X31 + 0x60]
	0x03DE51E8 LDR V0, [X31 + 0x5]
	0x03DE51EC ADD X1, X31, 0x30
	0x03DE51F0 MOV X0, X19
	0x03DE51F4 MOV X2, X31
	0x03DE51F8 STR X8, [X31 + 0x40]
	0x03DE51FC STR V0, [X31 + 0x3]
	0x03DE5200 BL 0x3DFD1AC
	0x03DE5204 ADD X0, X31, 0x0
	0x03DE5208 MOV X1, X31
	0x03DE520C BL 0x3DFED00
	0x03DE5210 CMP W0, 0x1
	0x03DE5214 B.NE 0x3DE5244
	0x03DE5218 MOV X0, X19
	0x03DE521C MOV W1, W20
	0x03DE5220 BL 0x3DE849C
	0x03DE5224 B 0x3DE5264
	0x03DE5228 ADD X0, X31, 0x0
	0x03DE522C MOV X1, X31
	0x03DE5230 BL 0x3DFED00
	0x03DE5234 CMP W0, 0x1
	0x03DE5238 B.NE 0x3DE51B8
	0x03DE523C MOV W0, W31
	0x03DE5240 B 0x3DE5264
	0x03DE5244 LDR V0, [X31 + 0x5]
	0x03DE5248 LDR X8, [X31 + 0x60]
	0x03DE524C ADD X1, X31, 0x10
	0x03DE5250 MOV X0, X19
	0x03DE5254 STR V0, [X31 + 0x1]
	0x03DE5258 STR X8, [X31 + 0x20]
	0x03DE525C BL 0x3DE8584
	0x03DE5260 MOVZ W0, 0x1
	0x03DE5264 LDR X8, [X24 + 0x28]
	0x03DE5268 LDR X9, [X31 + 0x68]
	0x03DE526C CMP X8, X9
	0x03DE5270 B.NE 0x3DE5290
	0x03DE5274 LDP X20, X19, [X31 + 0xA0]
	0x03DE5278 LDP X22, X21, [X31 + 0x90]
	0x03DE527C LDP X24, X23, [X31 + 0x80]
	0x03DE5280 LDR X30, [X31 + 0x70]
	0x03DE5284 AND W0, W0, 0x1
	0x03DE5288 ADD X31, X31, 0xB0
	0x03DE528C RET
	0x03DE5290 BL 0x3EB1B20
	0x03DE5294 STP X30, X19, [X31 - 0x10]!
	0x03DE5298 MOV X8, X1
	0x03DE529C MOVZ W1, 0x8
	0x03DE52A0 AND X3, X2, 0x0
	0x03DE52A4 MOVK W1, 0x70000
	0x03DE52A8 MOV X2, X8
	0x03DE52AC MOV X19, X0
	0x03DE52B0 BL 0x3DE5128
	0x03DE52B4 TBZ X0, 0x0, 0x3DE52E0
	0x03DE52B8 LDR X1, [X19 + 0x20]
	0x03DE52BC CBZ X1, 0x3DE52E8
	0x03DE52C0 LDR X0, [X1 + 0x3A0]
	0x03DE52C4 CBZ X0, 0x3DE52E0
	0x03DE52C8 LDR X8, [X0]
	0x03DE52CC MOVZ W2, 0x8A0
	0x03DE52D0 LDR X4, [X8 + 0x338]
	0x03DE52D4 LDR X3, [X8 + 0x340]
	0x03DE52D8 LDP X30, X19, [X31], #0x10
	0x03DE52DC BR X4
	0x03DE52E0 LDP X30, X19, [X31], #0x10
	0x03DE52E4 RET
	0x03DE52E8 BL 0x1C16F20
	0x03DE52EC STP X30, X19, [X31 - 0x10]!
	0x03DE52F0 MOV X2, X1
	0x03DE52F4 MOVZ W1, 0x3
	0x03DE52F8 MOVK W1, 0x20000
	0x03DE52FC MOV X19, X0
	0x03DE5300 BL 0x3DE5364
	0x03DE5304 TBZ X0, 0x0, 0x3DE5358
	0x03DE5308 LDR X1, [X19 + 0x20]
	0x03DE530C CBZ X1, 0x3DE5360
	0x03DE5310 LDR X0, [X1 + 0x3A0]
	0x03DE5314 CBZ X0, 0x3DE5334
	0x03DE5318 LDR X8, [X0]
	0x03DE531C MOVZ W2, 0x928
	0x03DE5320 LDR X9, [X8 + 0x338]
	0x03DE5324 LDR X3, [X8 + 0x340]
	0x03DE5328 BLR X9
	0x03DE532C LDR X1, [X19 + 0x20]
	0x03DE5330 CBZ X1, 0x3DE5360
	0x03DE5334 LDR X19, [X1 + 0x2B8]
	0x03DE5338 ADD X0, X1, 0x2C0
	0x03DE533C MOV X1, X31
	0x03DE5340 BL 0x3DC6BB4
	0x03DE5344 CBZ X19, 0x3DE5360
	0x03DE5348 MOV X0, X19
	0x03DE534C MOV X1, X31
	0x03DE5350 LDP X30, X19, [X31], #0x10
	0x03DE5354 B 0x3CE6980
	0x03DE5358 LDP X30, X19, [X31], #0x10
	0x03DE535C RET
	0x03DE5360 BL 0x1C16F20
	0x03DE5364 SUB X31, X31, 0xA0
	0x03DE5368 STR D8, [X31 + 0x70]
	0x03DE536C STR X30, [X31 + 0x78]
	0x03DE5370 STP X22, X21, [X31 + 0x80]
	0x03DE5374 STP X20, X19, [X31 + 0x90]
	0x03DE5378 MRS X21, 0xC000
	0x03DE537C LDR X8, [X21 + 0x28]
	0x03DE5380 MOV X3, X31
	0x03DE5384 MOV W20, W1
	0x03DE5388 MOV X19, X0
	0x03DE538C STR X8, [X31 + 0x68]
	0x03DE5390 STR X2, [X31 + 0x8]
	0x03DE5394 ADD X2, X31, 0x50
	0x03DE5398 STP X31, X31, [X31 + 0x50]
	0x03DE539C STR X31, [X31 + 0x60]
	0x03DE53A0 BL 0x3DFCED8
	0x03DE53A4 TBZ X0, 0x0, 0x3DE5440
	0x03DE53A8 LDR V8, [X31 + 0x58]
	0x03DE53AC ADD X0, X31, 0x8
	0x03DE53B0 MOV X1, X31
	0x03DE53B4 BL 0x3DFE5FC
	0x03DE53B8 FCMP S8, S0
	0x03DE53BC B.NE 0x3DE53D8
	0x03DE53C0 LDR W22, [X31 + 0x54]
	0x03DE53C4 ADD X0, X31, 0x8
	0x03DE53C8 MOV X1, X31
	0x03DE53CC BL 0x3DFE614
	0x03DE53D0 CMP W22, W0
	0x03DE53D4 B.EQ 0x3DE5454
	0x03DE53D8 ADD X0, X31, 0x8
	0x03DE53DC MOV X1, X31
	0x03DE53E0 STR W20, [X31 + 0x50]
	0x03DE53E4 BL 0x3DFE614
	0x03DE53E8 STR W0, [X31 + 0x54]
	0x03DE53EC ADD X0, X31, 0x8
	0x03DE53F0 MOV X1, X31
	0x03DE53F4 BL 0x3DFE5FC
	0x03DE53F8 STR S0, [X31 + 0x58]
	0x03DE53FC LDR X8, [X31 + 0x60]
	0x03DE5400 LDR V0, [X31 + 0x5]
	0x03DE5404 ADD X1, X31, 0x30
	0x03DE5408 MOV X0, X19
	0x03DE540C MOV X2, X31
	0x03DE5410 STR X8, [X31 + 0x40]
	0x03DE5414 STR V0, [X31 + 0x3]
	0x03DE5418 BL 0x3DFD1AC
	0x03DE541C ADD X0, X31, 0x8
	0x03DE5420 MOV X1, X31
	0x03DE5424 BL 0x3DFE614
	0x03DE5428 CMP W0, 0x1
	0x03DE542C B.NE 0x3DE545C
	0x03DE5430 MOV X0, X19
	0x03DE5434 MOV W1, W20
	0x03DE5438 BL 0x3DE849C
	0x03DE543C B 0x3DE547C
	0x03DE5440 ADD X0, X31, 0x8
	0x03DE5444 MOV X1, X31
	0x03DE5448 BL 0x3DFE614
	0x03DE544C CMP W0, 0x1
	0x03DE5450 B.NE 0x3DE53D8
	0x03DE5454 MOV W0, W31
	0x03DE5458 B 0x3DE547C
	0x03DE545C LDR V0, [X31 + 0x5]
	0x03DE5460 LDR X8, [X31 + 0x60]
	0x03DE5464 ADD X1, X31, 0x10
	0x03DE5468 MOV X0, X19
	0x03DE546C STR V0, [X31 + 0x1]
	0x03DE5470 STR X8, [X31 + 0x20]
	0x03DE5474 BL 0x3DE8584
	0x03DE5478 MOVZ W0, 0x1
	0x03DE547C LDR X8, [X21 + 0x28]
	0x03DE5480 LDR X9, [X31 + 0x68]
	0x03DE5484 CMP X8, X9
	0x03DE5488 B.NE 0x3DE54A8
	0x03DE548C LDP X20, X19, [X31 + 0x90]
	0x03DE5490 LDP X22, X21, [X31 + 0x80]
	0x03DE5494 LDR X30, [X31 + 0x78]
	0x03DE5498 LDR V8, [X31 + 0x70]
	0x03DE549C AND W0, W0, 0x1
	0x03DE54A0 ADD X31, X31, 0xA0
	0x03DE54A4 RET
	0x03DE54A8 BL 0x3EB1B20
	0x03DE54AC SUB X31, X31, 0x30
	0x03DE54B0 STP X30, X19, [X31 + 0x20]
	0x03DE54B4 LDR W8, [X1 + 0x10]
	0x03DE54B8 LDR V0, [X1]
	0x03DE54BC MOVZ W1, 0x9
	0x03DE54C0 ADD X2, X31, 0x0
	0x03DE54C4 MOVK W1, 0x70000
	0x03DE54C8 MOV X19, X0
	0x03DE54CC STR W8, [X31 + 0x10]
	0x03DE54D0 STR V0, [X31]
	0x03DE54D4 BL 0x3DE4EBC
	0x03DE54D8 TBZ X0, 0x0, 0x3DE5500
	0x03DE54DC LDR X1, [X19 + 0x20]
	0x03DE54E0 CBZ X1, 0x3DE550C
	0x03DE54E4 LDR X0, [X1 + 0x3A0]
	0x03DE54E8 CBZ X0, 0x3DE5500
	0x03DE54EC LDR X8, [X0]
	0x03DE54F0 MOVZ W2, 0x2020
	0x03DE54F4 LDR X9, [X8 + 0x338]
	0x03DE54F8 LDR X3, [X8 + 0x340]
	0x03DE54FC BLR X9
	0x03DE5500 LDP X30, X19, [X31 + 0x20]
	0x03DE5504 ADD X31, X31, 0x30
	0x03DE5508 RET
	0x03DE550C BL 0x1C16F20
	0x03DE5510 STP X30, X19, [X31 - 0x10]!
	0x03DE5514 MOV X2, X1
	0x03DE5518 MOVZ W1, 0x4
	0x03DE551C MOVK W1, 0x20000
	0x03DE5520 MOV X19, X0
	0x03DE5524 BL 0x3DE5364
	0x03DE5528 TBZ X0, 0x0, 0x3DE557C
	0x03DE552C LDR X1, [X19 + 0x20]
	0x03DE5530 CBZ X1, 0x3DE5584
	0x03DE5534 LDR X0, [X1 + 0x3A0]
	0x03DE5538 CBZ X0, 0x3DE5558
	0x03DE553C LDR X8, [X0]
	0x03DE5540 MOVZ W2, 0x928
	0x03DE5544 LDR X9, [X8 + 0x338]
	0x03DE5548 LDR X3, [X8 + 0x340]
	0x03DE554C BLR X9
	0x03DE5550 LDR X1, [X19 + 0x20]
	0x03DE5554 CBZ X1, 0x3DE5584
	0x03DE5558 LDR X19, [X1 + 0x2B8]
	0x03DE555C ADD X0, X1, 0x2C0
	0x03DE5560 MOV X1, X31
	0x03DE5564 BL 0x3DC6AC4
	0x03DE5568 CBZ X19, 0x3DE5584
	0x03DE556C MOV X0, X19
	0x03DE5570 MOV X1, X31
	0x03DE5574 LDP X30, X19, [X31], #0x10
	0x03DE5578 B 0x3CE6890
	0x03DE557C LDP X30, X19, [X31], #0x10
	0x03DE5580 RET
	0x03DE5584 BL 0x1C16F20
	0x03DE5588 SUB X31, X31, 0x30
	0x03DE558C STP X30, X19, [X31 + 0x20]
	0x03DE5590 LDR W8, [X1 + 0x10]
	0x03DE5594 LDR V0, [X1]
	0x03DE5598 MOVZ W1, 0xA
	0x03DE559C ADD X2, X31, 0x0
	0x03DE55A0 MOVK W1, 0x70000
	0x03DE55A4 MOV X19, X0
	0x03DE55A8 STR W8, [X31 + 0x10]
	0x03DE55AC STR V0, [X31]
	0x03DE55B0 BL 0x3DE4EBC
	0x03DE55B4 TBZ X0, 0x0, 0x3DE55DC
	0x03DE55B8 LDR X1, [X19 + 0x20]
	0x03DE55BC CBZ X1, 0x3DE55E8
	0x03DE55C0 LDR X0, [X1 + 0x3A0]
	0x03DE55C4 CBZ X0, 0x3DE55DC
	0x03DE55C8 LDR X8, [X0]
	0x03DE55CC MOVZ W2, 0x2020
	0x03DE55D0 LDR X9, [X8 + 0x338]
	0x03DE55D4 LDR X3, [X8 + 0x340]
	0x03DE55D8 BLR X9
	0x03DE55DC LDP X30, X19, [X31 + 0x20]
	0x03DE55E0 ADD X31, X31, 0x30
	0x03DE55E4 RET
	0x03DE55E8 BL 0x1C16F20
	0x03DE55EC STP X30, X19, [X31 - 0x10]!
	0x03DE55F0 MOV X2, X1
	0x03DE55F4 MOVZ W1, 0x5
	0x03DE55F8 MOVK W1, 0x20000
	0x03DE55FC MOV X19, X0
	0x03DE5600 BL 0x3DE5364
	0x03DE5604 TBZ X0, 0x0, 0x3DE5658
	0x03DE5608 LDR X1, [X19 + 0x20]
	0x03DE560C CBZ X1, 0x3DE5660
	0x03DE5610 LDR X0, [X1 + 0x3A0]
	0x03DE5614 CBZ X0, 0x3DE5634
	0x03DE5618 LDR X8, [X0]
	0x03DE561C MOVZ W2, 0x928
	0x03DE5620 LDR X9, [X8 + 0x338]
	0x03DE5624 LDR X3, [X8 + 0x340]
	0x03DE5628 BLR X9
	0x03DE562C LDR X1, [X19 + 0x20]
	0x03DE5630 CBZ X1, 0x3DE5660
	0x03DE5634 LDR X19, [X1 + 0x2B8]
	0x03DE5638 ADD X0, X1, 0x2C0
	0x03DE563C MOV X1, X31
	0x03DE5640 BL 0x3DC6B64
	0x03DE5644 CBZ X19, 0x3DE5660
	0x03DE5648 MOV X0, X19
	0x03DE564C MOV X1, X31
	0x03DE5650 LDP X30, X19, [X31], #0x10
	0x03DE5654 B 0x3CE6930
	0x03DE5658 LDP X30, X19, [X31], #0x10
	0x03DE565C RET
	0x03DE5660 BL 0x1C16F20
	0x03DE5664 SUB X31, X31, 0x30
	0x03DE5668 STP X30, X19, [X31 + 0x20]
	0x03DE566C LDR W8, [X1 + 0x10]
	0x03DE5670 LDR V0, [X1]
	0x03DE5674 MOVZ W1, 0xB
	0x03DE5678 ADD X2, X31, 0x0
	0x03DE567C MOVK W1, 0x70000
	0x03DE5680 MOV X19, X0
	0x03DE5684 STR W8, [X31 + 0x10]
	0x03DE5688 STR V0, [X31]
	0x03DE568C BL 0x3DE4EBC
	0x03DE5690 TBZ X0, 0x0, 0x3DE56B8
	0x03DE5694 LDR X1, [X19 + 0x20]
	0x03DE5698 CBZ X1, 0x3DE56C4
	0x03DE569C LDR X0, [X1 + 0x3A0]
	0x03DE56A0 CBZ X0, 0x3DE56B8
	0x03DE56A4 LDR X8, [X0]
	0x03DE56A8 MOVZ W2, 0x2020
	0x03DE56AC LDR X9, [X8 + 0x338]
	0x03DE56B0 LDR X3, [X8 + 0x340]
	0x03DE56B4 BLR X9
	0x03DE56B8 LDP X30, X19, [X31 + 0x20]
	0x03DE56BC ADD X31, X31, 0x30
	0x03DE56C0 RET
	0x03DE56C4 BL 0x1C16F20
	0x03DE56C8 STP X30, X19, [X31 - 0x10]!
	0x03DE56CC MOV X8, X1
	0x03DE56D0 MOVZ W1, 0xC
	0x03DE56D4 AND X3, X2, 0x0
	0x03DE56D8 MOVK W1, 0x70000
	0x03DE56DC MOV X2, X8
	0x03DE56E0 MOV X19, X0
	0x03DE56E4 BL 0x3DE5128
	0x03DE56E8 TBZ X0, 0x0, 0x3DE5714
	0x03DE56EC LDR X1, [X19 + 0x20]
	0x03DE56F0 CBZ X1, 0x3DE571C
	0x03DE56F4 LDR X0, [X1 + 0x3A0]
	0x03DE56F8 CBZ X0, 0x3DE5714
	0x03DE56FC LDR X8, [X0]
	0x03DE5700 MOVZ W2, 0x8A0
	0x03DE5704 LDR X4, [X8 + 0x338]
	0x03DE5708 LDR X3, [X8 + 0x340]
	0x03DE570C LDP X30, X19, [X31], #0x10
	0x03DE5710 BR X4
	0x03DE5714 LDP X30, X19, [X31], #0x10
	0x03DE5718 RET
	0x03DE571C BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x605000
	006 Move W8, [X20+511]
	007 Move W19, W0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {89}
	012 Move X0, 0x33A000
	013 Move X0, [X0+3344]
	014 Call 0x1C17CF4
	015 Move X0, 0x386000
	016 Move X0, [X0+1880]
	017 Call 0x1C17CF4
	018 Move X0, 0x386000
	019 Move X0, [X0+1888]
	020 Call 0x1C17CF4
	021 Move X0, 0x386000
	022 Move X0, [X0+1896]
	023 Call 0x1C17CF4
	024 Move X0, 0x386000
	025 Move X0, [X0+1904]
	026 Call 0x1C17CF4
	027 Move X0, 0x386000
	028 Move X0, [X0+1912]
	029 Call 0x1C17CF4
	030 Move X0, 0x386000
	031 Move X0, [X0+1920]
	032 Call 0x1C17CF4
	033 Move X0, 0x386000
	034 Move X0, [X0+1928]
	035 Call 0x1C17CF4
	036 Move X0, 0x386000
	037 Move X0, [X0+1936]
	038 Call 0x1C17CF4
	039 Move X0, 0x386000
	040 Move X0, [X0+1944]
	041 Call 0x1C17CF4
	042 Move X0, 0x386000
	043 Move X0, [X0+1952]
	044 Call 0x1C17CF4
	045 Move X0, 0x386000
	046 Move X0, [X0+1960]
	047 Call 0x1C17CF4
	048 Move X0, 0x386000
	049 Move X0, [X0+1968]
	050 Call 0x1C17CF4
	051 Move X0, 0x386000
	052 Move X0, [X0+1976]
	053 Call 0x1C17CF4
	054 Move X0, 0x386000
	055 Move X0, [X0+1984]
	056 Call 0x1C17CF4
	057 Move X0, 0x386000
	058 Move X0, [X0+1992]
	059 Call 0x1C17CF4
	060 Move X0, 0x386000
	061 Move X0, [X0+2000]
	062 Call 0x1C17CF4
	063 Move X0, 0x386000
	064 Move X0, [X0+2008]
	065 Call 0x1C17CF4
	066 Move X0, 0x386000
	067 Move X0, [X0+2016]
	068 Call 0x1C17CF4
	069 Move X0, 0x386000
	070 Move X0, [X0+2024]
	071 Call 0x1C17CF4
	072 Move X0, 0x386000
	073 Move X0, [X0+2032]
	074 Call 0x1C17CF4
	075 Move X0, 0x386000
	076 Move X0, [X0+2040]
	077 Call 0x1C17CF4
	078 Move X0, 0x386000
	079 Move X0, [X0+2048]
	080 Call 0x1C17CF4
	081 Move X0, 0x386000
	082 Move X0, [X0+2056]
	083 Call 0x1C17CF4
	084 Move X0, 0x386000
	085 Move X0, [X0+2064]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X20+511], W8
	089 Subtract W8, W19, 1
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X9, -52736000
	092 Add X9, X9, 1230
	093 NotImplemented "Instruction ADR not yet implemented."
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Add X10, X10, X11
	096 CallNoReturn X10
	097 Move X21, 0x386000
	098 Move X21, [X21+2064]
	099 Move X0, [X21]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X21]
	105 Move X8, [X0+184]
	106 Move X19, [X8+16]
	107 Compare X19, 0
	108 JumpIfNotEqual {856}
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X21]
	114 Move X9, 0x33A000
	115 Move X8, [X0+184]
	116 Move X9, [X9+3344]
	117 Move X20, [X8]
	118 Move X0, [X9]
	119 Call 0x1C17F10
	120 Move X8, 0x386000
	121 Move X8, [X8+1968]
	122 Move X1, X20
	123 Move X3, X31
	124 Move X19, X0
	125 Move X2, [X8]
	126 Call Func`2<Single, Single>..ctor, X0, X1, X2
	127 Move X8, [X21]
	128 Move X8, [X8+184]
	129 Move [X8+16], X19
	130 Move X21, 0x386000
	131 Move X21, [X21+2064]
	132 Move X0, [X21]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {138}
	136 Call 0x1C17DFC
	137 Move X0, [X21]
	138 Move X8, [X0+184]
	139 Move X19, [X8+8]
	140 Compare X19, 0
	141 JumpIfNotEqual {856}
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {147}
	145 Call 0x1C17DFC
	146 Move X0, [X21]
	147 Move X9, 0x33A000
	148 Move X8, [X0+184]
	149 Move X9, [X9+3344]
	150 Move X20, [X8]
	151 Move X0, [X9]
	152 Call 0x1C17F10
	153 Move X8, 0x386000
	154 Move X8, [X8+1880]
	155 Move X1, X20
	156 Move X3, X31
	157 Move X19, X0
	158 Move X2, [X8]
	159 Call Func`2<Single, Single>..ctor, X0, X1, X2
	160 Move X8, [X21]
	161 Move X8, [X8+184]
	162 Move [X8+8], X19
	163 Move X21, 0x386000
	164 Move X21, [X21+2064]
	165 Move X0, [X21]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {171}
	169 Call 0x1C17DFC
	170 Move X0, [X21]
	171 Move X8, [X0+184]
	172 Move X19, [X8+24]
	173 Compare X19, 0
	174 JumpIfNotEqual {856}
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {180}
	178 Call 0x1C17DFC
	179 Move X0, [X21]
	180 Move X9, 0x33A000
	181 Move X8, [X0+184]
	182 Move X9, [X9+3344]
	183 Move X20, [X8]
	184 Move X0, [X9]
	185 Call 0x1C17F10
	186 Move X8, 0x386000
	187 Move X8, [X8+2000]
	188 Move X1, X20
	189 Move X3, X31
	190 Move X19, X0
	191 Move X2, [X8]
	192 Call Func`2<Single, Single>..ctor, X0, X1, X2
	193 Move X8, [X21]
	194 Move X8, [X8+184]
	195 Move [X8+24], X19
	196 Move X21, 0x386000
	197 Move X21, [X21+2064]
	198 Move X0, [X21]
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {204}
	202 Call 0x1C17DFC
	203 Move X0, [X21]
	204 Move X8, [X0+184]
	205 Move X19, [X8+32]
	206 Compare X19, 0
	207 JumpIfNotEqual {856}
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {213}
	211 Call 0x1C17DFC
	212 Move X0, [X21]
	213 Move X9, 0x33A000
	214 Move X8, [X0+184]
	215 Move X9, [X9+3344]
	216 Move X20, [X8]
	217 Move X0, [X9]
	218 Call 0x1C17F10
	219 Move X8, 0x386000
	220 Move X8, [X8+2008]
	221 Move X1, X20
	222 Move X3, X31
	223 Move X19, X0
	224 Move X2, [X8]
	225 Call Func`2<Single, Single>..ctor, X0, X1, X2
	226 Move X8, [X21]
	227 Move X8, [X8+184]
	228 Move [X8+32], X19
	229 Move X21, 0x386000
	230 Move X21, [X21+2064]
	231 Move X0, [X21]
	232 Move W8, [X0+224]
	233 Compare W8, 0
	234 JumpIfNotEqual {237}
	235 Call 0x1C17DFC
	236 Move X0, [X21]
	237 Move X8, [X0+184]
	238 Move X19, [X8+40]
	239 Compare X19, 0
	240 JumpIfNotEqual {856}
	241 Move W8, [X0+224]
	242 Compare W8, 0
	243 JumpIfNotEqual {246}
	244 Call 0x1C17DFC
	245 Move X0, [X21]
	246 Move X9, 0x33A000
	247 Move X8, [X0+184]
	248 Move X9, [X9+3344]
	249 Move X20, [X8]
	250 Move X0, [X9]
	251 Call 0x1C17F10
	252 Move X8, 0x386000
	253 Move X8, [X8+2016]
	254 Move X1, X20
	255 Move X3, X31
	256 Move X19, X0
	257 Move X2, [X8]
	258 Call Func`2<Single, Single>..ctor, X0, X1, X2
	259 Move X8, [X21]
	260 Move X8, [X8+184]
	261 Move [X8+40], X19
	262 Move X21, 0x386000
	263 Move X21, [X21+2064]
	264 Move X0, [X21]
	265 Move W8, [X0+224]
	266 Compare W8, 0
	267 JumpIfNotEqual {270}
	268 Call 0x1C17DFC
	269 Move X0, [X21]
	270 Move X8, [X0+184]
	271 Move X19, [X8+48]
	272 Compare X19, 0
	273 JumpIfNotEqual {856}
	274 Move W8, [X0+224]
	275 Compare W8, 0
	276 JumpIfNotEqual {279}
	277 Call 0x1C17DFC
	278 Move X0, [X21]
	279 Move X9, 0x33A000
	280 Move X8, [X0+184]
	281 Move X9, [X9+3344]
	282 Move X20, [X8]
	283 Move X0, [X9]
	284 Call 0x1C17F10
	285 Move X8, 0x386000
	286 Move X8, [X8+2024]
	287 Move X1, X20
	288 Move X3, X31
	289 Move X19, X0
	290 Move X2, [X8]
	291 Call Func`2<Single, Single>..ctor, X0, X1, X2
	292 Move X8, [X21]
	293 Move X8, [X8+184]
	294 Move [X8+48], X19
	295 Move X21, 0x386000
	296 Move X21, [X21+2064]
	297 Move X0, [X21]
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {303}
	301 Call 0x1C17DFC
	302 Move X0, [X21]
	303 Move X8, [X0+184]
	304 Move X19, [X8+56]
	305 Compare X19, 0
	306 JumpIfNotEqual {856}
	307 Move W8, [X0+224]
	308 Compare W8, 0
	309 JumpIfNotEqual {312}
	310 Call 0x1C17DFC
	311 Move X0, [X21]
	312 Move X9, 0x33A000
	313 Move X8, [X0+184]
	314 Move X9, [X9+3344]
	315 Move X20, [X8]
	316 Move X0, [X9]
	317 Call 0x1C17F10
	318 Move X8, 0x386000
	319 Move X8, [X8+2032]
	320 Move X1, X20
	321 Move X3, X31
	322 Move X19, X0
	323 Move X2, [X8]
	324 Call Func`2<Single, Single>..ctor, X0, X1, X2
	325 Move X8, [X21]
	326 Move X8, [X8+184]
	327 Move [X8+56], X19
	328 Move X21, 0x386000
	329 Move X21, [X21+2064]
	330 Move X0, [X21]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {336}
	334 Call 0x1C17DFC
	335 Move X0, [X21]
	336 Move X8, [X0+184]
	337 Move X19, [X8+64]
	338 Compare X19, 0
	339 JumpIfNotEqual {856}
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {345}
	343 Call 0x1C17DFC
	344 Move X0, [X21]
	345 Move X9, 0x33A000
	346 Move X8, [X0+184]
	347 Move X9, [X9+3344]
	348 Move X20, [X8]
	349 Move X0, [X9]
	350 Call 0x1C17F10
	351 Move X8, 0x386000
	352 Move X8, [X8+2040]
	353 Move X1, X20
	354 Move X3, X31
	355 Move X19, X0
	356 Move X2, [X8]
	357 Call Func`2<Single, Single>..ctor, X0, X1, X2
	358 Move X8, [X21]
	359 Move X8, [X8+184]
	360 Move [X8+64], X19
	361 Move X21, 0x386000
	362 Move X21, [X21+2064]
	363 Move X0, [X21]
	364 Move W8, [X0+224]
	365 Compare W8, 0
	366 JumpIfNotEqual {369}
	367 Call 0x1C17DFC
	368 Move X0, [X21]
	369 Move X8, [X0+184]
	370 Move X19, [X8+72]
	371 Compare X19, 0
	372 JumpIfNotEqual {856}
	373 Move W8, [X0+224]
	374 Compare W8, 0
	375 JumpIfNotEqual {378}
	376 Call 0x1C17DFC
	377 Move X0, [X21]
	378 Move X9, 0x339000
	379 Move X8, [X0+184]
	380 Move X9, [X9+3344]
	381 Move X20, [X8]
	382 Move X0, [X9]
	383 Call 0x1C17F10
	384 Move X8, 0x385000
	385 Move X8, [X8+2048]
	386 Move X1, X20
	387 Move X3, X31
	388 Move X19, X0
	389 Move X2, [X8]
	390 Call Func`2<Single, Single>..ctor, X0, X1, X2
	391 Move X8, [X21]
	392 Move X8, [X8+184]
	393 Move [X8+72], X19
	394 Move X21, 0x385000
	395 Move X21, [X21+2064]
	396 Move X0, [X21]
	397 Move W8, [X0+224]
	398 Compare W8, 0
	399 JumpIfNotEqual {402}
	400 Call 0x1C17DFC
	401 Move X0, [X21]
	402 Move X8, [X0+184]
	403 Move X19, [X8+80]
	404 Compare X19, 0
	405 JumpIfNotEqual {856}
	406 Move W8, [X0+224]
	407 Compare W8, 0
	408 JumpIfNotEqual {411}
	409 Call 0x1C17DFC
	410 Move X0, [X21]
	411 Move X9, 0x339000
	412 Move X8, [X0+184]
	413 Move X9, [X9+3344]
	414 Move X20, [X8]
	415 Move X0, [X9]
	416 Call 0x1C17F10
	417 Move X8, 0x385000
	418 Move X8, [X8+2056]
	419 Move X1, X20
	420 Move X3, X31
	421 Move X19, X0
	422 Move X2, [X8]
	423 Call Func`2<Single, Single>..ctor, X0, X1, X2
	424 Move X8, [X21]
	425 Move X8, [X8+184]
	426 Move [X8+80], X19
	427 Move X21, 0x385000
	428 Move X21, [X21+2064]
	429 Move X0, [X21]
	430 Move W8, [X0+224]
	431 Compare W8, 0
	432 JumpIfNotEqual {435}
	433 Call 0x1C17DFC
	434 Move X0, [X21]
	435 Move X8, [X0+184]
	436 Move X19, [X8+88]
	437 Compare X19, 0
	438 JumpIfNotEqual {856}
	439 Move W8, [X0+224]
	440 Compare W8, 0
	441 JumpIfNotEqual {444}
	442 Call 0x1C17DFC
	443 Move X0, [X21]
	444 Move X9, 0x339000
	445 Move X8, [X0+184]
	446 Move X9, [X9+3344]
	447 Move X20, [X8]
	448 Move X0, [X9]
	449 Call 0x1C17F10
	450 Move X8, 0x385000
	451 Move X8, [X8+1888]
	452 Move X1, X20
	453 Move X3, X31
	454 Move X19, X0
	455 Move X2, [X8]
	456 Call Func`2<Single, Single>..ctor, X0, X1, X2
	457 Move X8, [X21]
	458 Move X8, [X8+184]
	459 Move [X8+88], X19
	460 Move X21, 0x385000
	461 Move X21, [X21+2064]
	462 Move X0, [X21]
	463 Move W8, [X0+224]
	464 Compare W8, 0
	465 JumpIfNotEqual {468}
	466 Call 0x1C17DFC
	467 Move X0, [X21]
	468 Move X8, [X0+184]
	469 Move X19, [X8+96]
	470 Compare X19, 0
	471 JumpIfNotEqual {856}
	472 Move W8, [X0+224]
	473 Compare W8, 0
	474 JumpIfNotEqual {477}
	475 Call 0x1C17DFC
	476 Move X0, [X21]
	477 Move X9, 0x339000
	478 Move X8, [X0+184]
	479 Move X9, [X9+3344]
	480 Move X20, [X8]
	481 Move X0, [X9]
	482 Call 0x1C17F10
	483 Move X8, 0x385000
	484 Move X8, [X8+1896]
	485 Move X1, X20
	486 Move X3, X31
	487 Move X19, X0
	488 Move X2, [X8]
	489 Call Func`2<Single, Single>..ctor, X0, X1, X2
	490 Move X8, [X21]
	491 Move X8, [X8+184]
	492 Move [X8+96], X19
	493 Move X21, 0x385000
	494 Move X21, [X21+2064]
	495 Move X0, [X21]
	496 Move W8, [X0+224]
	497 Compare W8, 0
	498 JumpIfNotEqual {501}
	499 Call 0x1C17DFC
	500 Move X0, [X21]
	501 Move X8, [X0+184]
	502 Move X19, [X8+104]
	503 Compare X19, 0
	504 JumpIfNotEqual {856}
	505 Move W8, [X0+224]
	506 Compare W8, 0
	507 JumpIfNotEqual {510}
	508 Call 0x1C17DFC
	509 Move X0, [X21]
	510 Move X9, 0x339000
	511 Move X8, [X0+184]
	512 Move X9, [X9+3344]
	513 Move X20, [X8]
	514 Move X0, [X9]
	515 Call 0x1C17F10
	516 Move X8, 0x385000
	517 Move X8, [X8+1904]
	518 Move X1, X20
	519 Move X3, X31
	520 Move X19, X0
	521 Move X2, [X8]
	522 Call Func`2<Single, Single>..ctor, X0, X1, X2
	523 Move X8, [X21]
	524 Move X8, [X8+184]
	525 Move [X8+104], X19
	526 Move X21, 0x385000
	527 Move X21, [X21+2064]
	528 Move X0, [X21]
	529 Move W8, [X0+224]
	530 Compare W8, 0
	531 JumpIfNotEqual {534}
	532 Call 0x1C17DFC
	533 Move X0, [X21]
	534 Move X8, [X0+184]
	535 Move X19, [X8+112]
	536 Compare X19, 0
	537 JumpIfNotEqual {856}
	538 Move W8, [X0+224]
	539 Compare W8, 0
	540 JumpIfNotEqual {543}
	541 Call 0x1C17DFC
	542 Move X0, [X21]
	543 Move X9, 0x339000
	544 Move X8, [X0+184]
	545 Move X9, [X9+3344]
	546 Move X20, [X8]
	547 Move X0, [X9]
	548 Call 0x1C17F10
	549 Move X8, 0x385000
	550 Move X8, [X8+1912]
	551 Move X1, X20
	552 Move X3, X31
	553 Move X19, X0
	554 Move X2, [X8]
	555 Call Func`2<Single, Single>..ctor, X0, X1, X2
	556 Move X8, [X21]
	557 Move X8, [X8+184]
	558 Move [X8+112], X19
	559 Move X21, 0x385000
	560 Move X21, [X21+2064]
	561 Move X0, [X21]
	562 Move W8, [X0+224]
	563 Compare W8, 0
	564 JumpIfNotEqual {567}
	565 Call 0x1C17DFC
	566 Move X0, [X21]
	567 Move X8, [X0+184]
	568 Move X19, [X8+120]
	569 Compare X19, 0
	570 JumpIfNotEqual {856}
	571 Move W8, [X0+224]
	572 Compare W8, 0
	573 JumpIfNotEqual {576}
	574 Call 0x1C17DFC
	575 Move X0, [X21]
	576 Move X9, 0x339000
	577 Move X8, [X0+184]
	578 Move X9, [X9+3344]
	579 Move X20, [X8]
	580 Move X0, [X9]
	581 Call 0x1C17F10
	582 Move X8, 0x385000
	583 Move X8, [X8+1920]
	584 Move X1, X20
	585 Move X3, X31
	586 Move X19, X0
	587 Move X2, [X8]
	588 Call Func`2<Single, Single>..ctor, X0, X1, X2
	589 Move X8, [X21]
	590 Move X8, [X8+184]
	591 Move [X8+120], X19
	592 Move X21, 0x385000
	593 Move X21, [X21+2064]
	594 Move X0, [X21]
	595 Move W8, [X0+224]
	596 Compare W8, 0
	597 JumpIfNotEqual {600}
	598 Call 0x1C17DFC
	599 Move X0, [X21]
	600 Move X8, [X0+184]
	601 Move X19, [X8+128]
	602 Compare X19, 0
	603 JumpIfNotEqual {856}
	604 Move W8, [X0+224]
	605 Compare W8, 0
	606 JumpIfNotEqual {609}
	607 Call 0x1C17DFC
	608 Move X0, [X21]
	609 Move X9, 0x339000
	610 Move X8, [X0+184]
	611 Move X9, [X9+3344]
	612 Move X20, [X8]
	613 Move X0, [X9]
	614 Call 0x1C17F10
	615 Move X8, 0x385000
	616 Move X8, [X8+1928]
	617 Move X1, X20
	618 Move X3, X31
	619 Move X19, X0
	620 Move X2, [X8]
	621 Call Func`2<Single, Single>..ctor, X0, X1, X2
	622 Move X8, [X21]
	623 Move X8, [X8+184]
	624 Move [X8+128], X19
	625 Move X21, 0x385000
	626 Move X21, [X21+2064]
	627 Move X0, [X21]
	628 Move W8, [X0+224]
	629 Compare W8, 0
	630 JumpIfNotEqual {633}
	631 Call 0x1C17DFC
	632 Move X0, [X21]
	633 Move X8, [X0+184]
	634 Move X19, [X8+136]
	635 Compare X19, 0
	636 JumpIfNotEqual {856}
	637 Move W8, [X0+224]
	638 Compare W8, 0
	639 JumpIfNotEqual {642}
	640 Call 0x1C17DFC
	641 Move X0, [X21]
	642 Move X9, 0x339000
	643 Move X8, [X0+184]
	644 Move X9, [X9+3344]
	645 Move X20, [X8]
	646 Move X0, [X9]
	647 Call 0x1C17F10
	648 Move X8, 0x385000
	649 Move X8, [X8+1936]
	650 Move X1, X20
	651 Move X3, X31
	652 Move X19, X0
	653 Move X2, [X8]
	654 Call Func`2<Single, Single>..ctor, X0, X1, X2
	655 Move X8, [X21]
	656 Move X8, [X8+184]
	657 Move [X8+136], X19
	658 Move X21, 0x385000
	659 Move X21, [X21+2064]
	660 Move X0, [X21]
	661 Move W8, [X0+224]
	662 Compare W8, 0
	663 JumpIfNotEqual {666}
	664 Call 0x1C17DFC
	665 Move X0, [X21]
	666 Move X8, [X0+184]
	667 Move X19, [X8+144]
	668 Compare X19, 0
	669 JumpIfNotEqual {856}
	670 Move W8, [X0+224]
	671 Compare W8, 0
	672 JumpIfNotEqual {675}
	673 Call 0x1C17DFC
	674 Move X0, [X21]
	675 Move X9, 0x339000
	676 Move X8, [X0+184]
	677 Move X9, [X9+3344]
	678 Move X20, [X8]
	679 Move X0, [X9]
	680 Call 0x1C17F10
	681 Move X8, 0x385000
	682 Move X8, [X8+1944]
	683 Move X1, X20
	684 Move X3, X31
	685 Move X19, X0
	686 Move X2, [X8]
	687 Call Func`2<Single, Single>..ctor, X0, X1, X2
	688 Move X8, [X21]
	689 Move X8, [X8+184]
	690 Move [X8+144], X19
	691 Move X21, 0x385000
	692 Move X21, [X21+2064]
	693 Move X0, [X21]
	694 Move W8, [X0+224]
	695 Compare W8, 0
	696 JumpIfNotEqual {699}
	697 Call 0x1C17DFC
	698 Move X0, [X21]
	699 Move X8, [X0+184]
	700 Move X19, [X8+152]
	701 Compare X19, 0
	702 JumpIfNotEqual {856}
	703 Move W8, [X0+224]
	704 Compare W8, 0
	705 JumpIfNotEqual {708}
	706 Call 0x1C17DFC
	707 Move X0, [X21]
	708 Move X9, 0x339000
	709 Move X8, [X0+184]
	710 Move X9, [X9+3344]
	711 Move X20, [X8]
	712 Move X0, [X9]
	713 Call 0x1C17F10
	714 Move X8, 0x385000
	715 Move X8, [X8+1952]
	716 Move X1, X20
	717 Move X3, X31
	718 Move X19, X0
	719 Move X2, [X8]
	720 Call Func`2<Single, Single>..ctor, X0, X1, X2
	721 Move X8, [X21]
	722 Move X8, [X8+184]
	723 Move [X8+152], X19
	724 Move X21, 0x385000
	725 Move X21, [X21+2064]
	726 Move X0, [X21]
	727 Move W8, [X0+224]
	728 Compare W8, 0
	729 JumpIfNotEqual {732}
	730 Call 0x1C17DFC
	731 Move X0, [X21]
	732 Move X8, [X0+184]
	733 Move X19, [X8+160]
	734 Compare X19, 0
	735 JumpIfNotEqual {856}
	736 Move W8, [X0+224]
	737 Compare W8, 0
	738 JumpIfNotEqual {741}
	739 Call 0x1C17DFC
	740 Move X0, [X21]
	741 Move X9, 0x339000
	742 Move X8, [X0+184]
	743 Move X9, [X9+3344]
	744 Move X20, [X8]
	745 Move X0, [X9]
	746 Call 0x1C17F10
	747 Move X8, 0x385000
	748 Move X8, [X8+1960]
	749 Move X1, X20
	750 Move X3, X31
	751 Move X19, X0
	752 Move X2, [X8]
	753 Call Func`2<Single, Single>..ctor, X0, X1, X2
	754 Move X8, [X21]
	755 Move X8, [X8+184]
	756 Move [X8+160], X19
	757 Move X21, 0x385000
	758 Move X21, [X21+2064]
	759 Move X0, [X21]
	760 Move W8, [X0+224]
	761 Compare W8, 0
	762 JumpIfNotEqual {765}
	763 Call 0x1C17DFC
	764 Move X0, [X21]
	765 Move X8, [X0+184]
	766 Move X19, [X8+168]
	767 Compare X19, 0
	768 JumpIfNotEqual {856}
	769 Move W8, [X0+224]
	770 Compare W8, 0
	771 JumpIfNotEqual {774}
	772 Call 0x1C17DFC
	773 Move X0, [X21]
	774 Move X9, 0x339000
	775 Move X8, [X0+184]
	776 Move X9, [X9+3344]
	777 Move X20, [X8]
	778 Move X0, [X9]
	779 Call 0x1C17F10
	780 Move X8, 0x385000
	781 Move X8, [X8+1976]
	782 Move X1, X20
	783 Move X3, X31
	784 Move X19, X0
	785 Move X2, [X8]
	786 Call Func`2<Single, Single>..ctor, X0, X1, X2
	787 Move X8, [X21]
	788 Move X8, [X8+184]
	789 Move [X8+168], X19
	790 Move X21, 0x385000
	791 Move X21, [X21+2064]
	792 Move X0, [X21]
	793 Move W8, [X0+224]
	794 Compare W8, 0
	795 JumpIfNotEqual {798}
	796 Call 0x1C17DFC
	797 Move X0, [X21]
	798 Move X8, [X0+184]
	799 Move X19, [X8+176]
	800 Compare X19, 0
	801 JumpIfNotEqual {856}
	802 Move W8, [X0+224]
	803 Compare W8, 0
	804 JumpIfNotEqual {807}
	805 Call 0x1C17DFC
	806 Move X0, [X21]
	807 Move X9, 0x339000
	808 Move X8, [X0+184]
	809 Move X9, [X9+3344]
	810 Move X20, [X8]
	811 Move X0, [X9]
	812 Call 0x1C17F10
	813 Move X8, 0x385000
	814 Move X8, [X8+1984]
	815 Move X1, X20
	816 Move X3, X31
	817 Move X19, X0
	818 Move X2, [X8]
	819 Call Func`2<Single, Single>..ctor, X0, X1, X2
	820 Move X8, [X21]
	821 Move X8, [X8+184]
	822 Move [X8+176], X19
	823 Move X21, 0x385000
	824 Move X21, [X21+2064]
	825 Move X0, [X21]
	826 Move W8, [X0+224]
	827 Compare W8, 0
	828 JumpIfNotEqual {831}
	829 Call 0x1C17DFC
	830 Move X0, [X21]
	831 Move X8, [X0+184]
	832 Move X19, [X8+184]
	833 Compare X19, 0
	834 JumpIfNotEqual {856}
	835 Move W8, [X0+224]
	836 Compare W8, 0
	837 JumpIfNotEqual {840}
	838 Call 0x1C17DFC
	839 Move X0, [X21]
	840 Move X9, 0x339000
	841 Move X8, [X0+184]
	842 Move X9, [X9+3344]
	843 Move X20, [X8]
	844 Move X0, [X9]
	845 Call 0x1C17F10
	846 Move X8, 0x385000
	847 Move X8, [X8+1992]
	848 Move X1, X20
	849 Move X3, X31
	850 Move X19, X0
	851 Move X2, [X8]
	852 Call Func`2<Single, Single>..ctor, X0, X1, X2
	853 Move X8, [X21]
	854 Move X8, [X8+184]
	855 Move [X8+184], X19
	856 Move X0, X19
	857 Move X20, [X31+16]
	858 Move X19, [X31+24]
	859 Move X30, [X31+32]
	860 Move X21, [X31+40]
	861 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03DE5720 STP X30, X19, [X31 - 0x10]!
	0x03DE5724 MOV X8, X1
	0x03DE5728 MOVZ W1, 0xD
	0x03DE572C AND X3, X2, 0x0
	0x03DE5730 MOVK W1, 0x70000
	0x03DE5734 MOV X2, X8
	0x03DE5738 MOV X19, X0
	0x03DE573C BL 0x3DE5128
	0x03DE5740 TBZ X0, 0x0, 0x3DE576C
	0x03DE5744 LDR X1, [X19 + 0x20]
	0x03DE5748 CBZ X1, 0x3DE5774
	0x03DE574C LDR X0, [X1 + 0x3A0]
	0x03DE5750 CBZ X0, 0x3DE576C
	0x03DE5754 LDR X8, [X0]
	0x03DE5758 MOVZ W2, 0x8A0
	0x03DE575C LDR X4, [X8 + 0x338]
	0x03DE5760 LDR X3, [X8 + 0x340]
	0x03DE5764 LDP X30, X19, [X31], #0x10
	0x03DE5768 BR X4
	0x03DE576C LDP X30, X19, [X31], #0x10
	0x03DE5770 RET
	0x03DE5774 BL 0x1C16F20
	0x03DE5778 STP X30, X19, [X31 - 0x10]!
	0x03DE577C MOV X2, X1
	0x03DE5780 MOVZ W1, 0x6
	0x03DE5784 MOVK W1, 0x20000
	0x03DE5788 MOV X19, X0
	0x03DE578C BL 0x3DE5364
	0x03DE5790 TBZ X0, 0x0, 0x3DE57E4
	0x03DE5794 LDR X1, [X19 + 0x20]
	0x03DE5798 CBZ X1, 0x3DE57EC
	0x03DE579C LDR X0, [X1 + 0x3A0]
	0x03DE57A0 CBZ X0, 0x3DE57C0
	0x03DE57A4 LDR X8, [X0]
	0x03DE57A8 MOVZ W2, 0x928

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x604000
	007 Move X22, 0x385000
	008 Move X19, 0x385000
	009 Move X20, 0x380000
	010 Move W8, [X21+512]
	011 Move X22, [X22+2072]
	012 Move X19, [X19+2080]
	013 Move X20, [X20+616]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x380000
	019 Move X0, [X0+616]
	020 Call 0x1C17CF4
	021 Move X0, 0x385000
	022 Move X0, [X0+2080]
	023 Call 0x1C17CF4
	024 Move X0, 0x385000
	025 Move X0, [X0+2072]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+512], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call List`1<ComputedTransitionProperty>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

