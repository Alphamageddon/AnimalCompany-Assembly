Type: UnityEngine.UIElements.BaseRuntimePanel

Method: UnityEngine.GameObject get_selectableGameObject()

Disassembly:
	0x03DBF464 BL 0x1C16F20
	0x03DBF468 BL 0x1C16F28

ISIL:
	001 Move X0, [X0+352]
	002 Return X0

Method: System.Void set_selectableGameObject(UnityEngine.GameObject value)

Disassembly:
	0x03DBF46C STP X30, X23, [X31 - 0x30]!
	0x03DBF470 STP X22, X21, [X31 + 0x10]
	0x03DBF474 STP X20, X19, [X31 + 0x20]
	0x03DBF478 ADRP X23, 0x629000
	0x03DBF47C ADRP X22, 0x35D000
	0x03DBF480 LDRB W8, [X23 + 0x110]
	0x03DBF484 LDR X22, [X22 + 0xE50]
	0x03DBF488 MOV W20, W2
	0x03DBF48C MOV X19, X1
	0x03DBF490 MOV X21, X0
	0x03DBF494 TBNZ X8, 0x0, 0x3DBF4B8
	0x03DBF498 ADRP X0, 0x360000
	0x03DBF49C LDR X0, [X0 + 0x5C8]
	0x03DBF4A0 BL 0x1C16CF4
	0x03DBF4A4 ADRP X0, 0x35D000
	0x03DBF4A8 LDR X0, [X0 + 0xE50]
	0x03DBF4AC BL 0x1C16CF4
	0x03DBF4B0 MOVZ W8, 0x1
	0x03DBF4B4 STRB W8, [X23 + 0x110]
	0x03DBF4B8 LDR X0, [X22]
	0x03DBF4BC LDR W8, [X0 + 0xE0]
	0x03DBF4C0 CBNZ W8, 0x3DBF4CC
	0x03DBF4C4 BL 0x1C16DFC
	0x03DBF4C8 LDR X0, [X22]
	0x03DBF4CC LDR X8, [X0 + 0xB8]
	0x03DBF4D0 LDR W8, [X8 + 0x8]
	0x03DBF4D4 CMP W8, W20
	0x03DBF4D8 B.NE 0x3DBF540
	0x03DBF4DC LDR X8, [X21 + 0x10]
	0x03DBF4E0 CBZ X8, 0x3DBF584
	0x03DBF4E4 LDR W9, [X8 + 0x18]
	0x03DBF4E8 CMP W9, W20
	0x03DBF4EC B.LS 0x3DBF588
	0x03DBF4F0 ADD X8, X8, W20, 0x3, SXTW
	0x03DBF4F4 LDR X8, [X8 + 0x20]
	0x03DBF4F8 CMP X8, X19
	0x03DBF4FC B.EQ 0x3DBF540
	0x03DBF500 ADRP X22, 0x360000
	0x03DBF504 LDR X22, [X22 + 0x5C8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x62A000
	007 Move X21, 0x335000
	008 Move W8, [X22+247]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x335000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+247], W8
	021 Move X0, [X21]
	022 Move X21, [X19+352]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X20
	029 Move X2, X31
	030 Call Object.op_Inequality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {46}
	035 Move X0, X19
	036 Move X1, X31
	037 Call BaseRuntimePanel.AssignPanelToComponents, X0, X1
	038 Move [X19+352], X20
	039 Move X0, X19
	040 Move X1, X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Return 

Method: System.Single get_sortingPriority()

Disassembly:
	0x03DBF83C LDP X30, X21, [X31], #0x20
	0x03DBF840 B 0x3DBF854

ISIL:
	001 Move V0, [X0+364]
	002 Return V0

Method: System.Void set_sortingPriority(System.Single value)

Disassembly:
	0x03DB43CC LDR X10, [X10]
	0x03DB43D0 ADD W11, W11, 0x1
	0x03DB43D4 STR W11, [X0 + 0x1C]
	0x03DB43D8 CBZ X9, 0x3DB4484
	0x03DB43DC LDR W11, [X9 + 0x18]
	0x03DB43E0 CMP W8, W11
	0x03DB43E4 B.CS 0x3DB4400
	0x03DB43E8 ADD W10, W8, 0x1
	0x03DB43EC ADD X8, X9, X8, 0x3, LSL
	0x03DB43F0 STR W10, [X0 + 0x18]
	0x03DB43F4 STR X20, [X8 + 0x20]
	0x03DB43F8 CBNZ X19, 0x3DB4418
	0x03DB43FC B 0x3DB4464
	0x03DB4400 LDR X8, [X10 + 0x20]
	0x03DB4404 MOV X1, X20
	0x03DB4408 LDR X8, [X8 + 0xC0]
	0x03DB440C LDR X2, [X8 + 0x70]
	0x03DB4410 BL 0x301BF90
	0x03DB4414 CBZ X19, 0x3DB4464
	0x03DB4418 CBZ X20, 0x3DB4484
	0x03DB441C LDR X8, [X20 + 0x58]
	0x03DB4420 CBZ X8, 0x3DB4464
	0x03DB4424 MOV X0, X19
	0x03DB4428 MOV X1, X31
	0x03DB442C ADD W21, W23, W21
	0x03DB4430 BL 0x3DF630C
	0x03DB4434 LDR X2, [X20 + 0x58]
	0x03DB4438 CMP W21, W0
	0x03DB443C B.GE 0x3DB4454
	0x03DB4440 MOV X0, X19
	0x03DB4444 MOV W1, W21
	0x03DB4448 MOV X3, X31
	0x03DB444C BL 0x3DF6198
	0x03DB4450 B 0x3DB4464
	0x03DB4454 MOV X0, X19
	0x03DB4458 MOV X1, X2
	0x03DB445C MOV X2, X31
	0x03DB4460 BL 0x3DF60E8
	0x03DB4464 LDP X20, X19, [X31 + 0x70]
	0x03DB4468 LDP X22, X21, [X31 + 0x60]
	0x03DB446C LDP X24, X23, [X31 + 0x50]
	0x03DB4470 LDP X30, X25, [X31 + 0x40]
	0x03DB4474 ADD X31, X31, 0x80
	0x03DB4478 RET
	0x03DB447C BL 0x1C16F20
	0x03DB4480 BL 0x1C16F20
	0x03DB4484 BL 0x1C16F20
	0x03DB4488 B 0x3DB4498
	0x03DB448C MOV X24, X0
	0x03DB4490 MOV W23, W31
	0x03DB4494 B 0x3DB449C
	0x03DB4498 MOV X24, X0
	0x03DB449C CMP W1, 0x1
	0x03DB44A0 B.NE 0x3DB44D4
	0x03DB44A4 MOV X0, X24
	0x03DB44A8 BL 0x3EB1AD0
	0x03DB44AC LDR X25, [X0]
	0x03DB44B0 BL 0x3EB1AE0
	0x03DB44B4 ADRP X8, 0x3B4000
	0x03DB44B8 LDR X8, [X8 + 0xD28]
	0x03DB44BC ADD X0, X31, 0x20
	0x03DB44C0 LDR X1, [X8]
	0x03DB44C4 BL 0x2BC434C

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x635000
	007 Move W8, [X20+248]
	008 Move V8, V0
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x368000
	015 Move X0, [X0+2352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+248], W8
	019 Move X20, 0x626000
	020 Move W8, [X20+1450]
	021 Move V9, [X19+364]
	022 Compare W8, 0
	023 JumpIfNotEqual {29}
	024 Move X0, 0x347000
	025 Move X0, [X0+1208]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1450], W8
	029 Move X8, 0x347000
	030 Move X8, [X8+1208]
	031 Move X9, -53252096
	032 Move V0, [X9+576]
	033 NotImplemented "Instruction FABS not yet implemented."
	034 Move X8, [X8]
	035 NotImplemented "Instruction FABS not yet implemented."
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 NotImplemented "Instruction FCSEL not yet implemented."
	038 Move X8, [X8+184]
	039 Multiply S0, S1, S0
	040 Move S1, 8
	041 Move V3, [X8]
	042 Multiply S1, S3, S1
	043 NotImplemented "Instruction FCMP not yet implemented."
	044 NotImplemented "Instruction FCSEL not yet implemented."
	045 NotImplemented "Instruction FABD not yet implemented."
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 Move X8, [X19]
	048 Move [X19+364], S8
	049 Move X0, X19
	050 Move X9, [X8+1016]
	051 Move X1, [X8+1024]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Compare W0, 0
	054 JumpIfEqual {61}
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+16]
	058 Move D9, [X31+48]
	059 Move D8, [X31+56]
	060 Return 
	061 Move X8, 0x368000
	062 Move X8, [X8+2352]
	063 Move X0, [X8]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X30, [X31+16]
	071 Move X0, X31
	072 Move D9, [X31+48]
	073 Move D8, [X31+56]
	074 Call UIElementsRuntimeUtility.SetPanelOrderingDirty
	075 Return 

Method: System.Void add_destroyed(System.Action value)

Disassembly:
	0x03DBF844 LDP X20, X19, [X31 + 0x10]
	0x03DBF848 LDP X30, X21, [X31], #0x20
	0x03DBF84C RET
	0x03DBF850 BL 0x1C16F20
	0x03DBF854 STR X30, [X31 - 0x10]!
	0x03DBF858 LDR X8, [X0 + 0x20]
	0x03DBF85C CBZ X8, 0x3DBF880
	0x03DBF860 LDR W9, [X8 + 0x18]
	0x03DBF864 CMP W9, W1
	0x03DBF868 B.LS 0x3DBF884
	0x03DBF86C ADD X8, X8, W1, SXTW
	0x03DBF870 MOVZ W9, 0x1
	0x03DBF874 STRB W9, [X8 + 0x20]
	0x03DBF878 LDR X30, [X31], #0x10
	0x03DBF87C RET
	0x03DBF880 BL 0x1C16F20
	0x03DBF884 BL 0x1C16F28
	0x03DBF888 STP X30, X21, [X31 - 0x20]!
	0x03DBF88C STP X20, X19, [X31 + 0x10]
	0x03DBF890 ADRP X21, 0x629000
	0x03DBF894 LDRB W8, [X21 + 0x10C]
	0x03DBF898 MOV W19, W1
	0x03DBF89C MOV X20, X0
	0x03DBF8A0 TBNZ X8, 0x0, 0x3DBF8B8
	0x03DBF8A4 ADRP X0, 0x35D000
	0x03DBF8A8 LDR X0, [X0 + 0xE80]
	0x03DBF8AC BL 0x1C16CF4
	0x03DBF8B0 MOVZ W8, 0x1
	0x03DBF8B4 STRB W8, [X21 + 0x10C]
	0x03DBF8B8 CBZ X20, 0x3DBF93C
	0x03DBF8BC ADRP X10, 0x35D000
	0x03DBF8C0 LDR X8, [X20]
	0x03DBF8C4 LDR X10, [X10 + 0xE80]
	0x03DBF8C8 LDRH W9, [X8 + 0x12E]
	0x03DBF8CC LDR X1, [X10]
	0x03DBF8D0 CBZ X9, 0x3DBF8F4
	0x03DBF8D4 LDR X10, [X8 + 0xB0]
	0x03DBF8D8 ADD X10, X10, 0x8
	0x03DBF8DC LDUR X11, [X10 - 0x8]
	0x03DBF8E0 CMP X11, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x62A000
	007 Move W8, [X21+249]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x336000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+249], W8
	019 Move X22, 0x336000
	020 Move X21, [X20+376]
	021 Move X22, [X22+3696]
	022 Add X20, X20, 376
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Combine, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void remove_destroyed(System.Action value)

Disassembly:
	0x03DBF8E4 B.EQ 0x3DBF904
	0x03DBF8E8 SUBS X9, X9, 0x1
	0x03DBF8EC ADD X10, X10, 0x10
	0x03DBF8F0 B.NE 0x3DBF8DC
	0x03DBF8F4 MOVZ W2, 0x1
	0x03DBF8F8 MOV X0, X20
	0x03DBF8FC BL 0x1C5C788
	0x03DBF900 B 0x3DBF914
	0x03DBF904 LDR W9, [X10]
	0x03DBF908 ADD W9, W9, 0x1
	0x03DBF90C ADD X8, X8, W9, 0x4, SXTW
	0x03DBF910 ADD X0, X8, 0x138
	0x03DBF914 LDP X8, X1, [X0]
	0x03DBF918 MOV X0, X20
	0x03DBF91C BLR X8
	0x03DBF920 CBZ X0, 0x3DBF93C
	0x03DBF924 LDR X0, [X0 + 0x28]
	0x03DBF928 CBZ X0, 0x3DBF948
	0x03DBF92C MOV W1, W19
	0x03DBF930 LDP X20, X19, [X31 + 0x10]
	0x03DBF934 LDP X30, X21, [X31], #0x20
	0x03DBF938 B 0x3DBF94C
	0x03DBF93C LDP X20, X19, [X31 + 0x10]
	0x03DBF940 LDP X30, X21, [X31], #0x20
	0x03DBF944 RET
	0x03DBF948 BL 0x1C16F20
	0x03DBF94C STR X30, [X31 - 0x10]!
	0x03DBF950 LDR X8, [X0 + 0x20]
	0x03DBF954 CBZ X8, 0x3DBF974
	0x03DBF958 LDR W9, [X8 + 0x18]
	0x03DBF95C CMP W9, W1
	0x03DBF960 B.LS 0x3DBF978
	0x03DBF964 ADD X8, X8, W1, SXTW
	0x03DBF968 STRB W31, [X8 + 0x20]
	0x03DBF96C LDR X30, [X31], #0x10
	0x03DBF970 RET
	0x03DBF974 BL 0x1C16F20
	0x03DBF978 BL 0x1C16F28
	0x03DBF97C SUB X31, X31, 0x30
	0x03DBF980 STP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x62A000
	007 Move W8, [X21+250]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x336000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+250], W8
	019 Move X22, 0x336000
	020 Move X21, [X20+376]
	021 Move X22, [X22+3696]
	022 Add X20, X20, 376
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Remove, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void .ctor(UnityEngine.ScriptableObject ownerObject, UnityEngine.UIElements.EventDispatcher dispatcher = null)

Disassembly:
	0x03DB4D78 ADRP X20, 0x3B4000
	0x03DB4D7C LDRB W8, [X21 + 0x3A]
	0x03DB4D80 LDR X20, [X20 + 0xDA8]
	0x03DB4D84 MOV X19, X0
	0x03DB4D88 TBNZ X8, 0x0, 0x3DB4DA0
	0x03DB4D8C ADRP X0, 0x3B4000
	0x03DB4D90 LDR X0, [X0 + 0xDA8]
	0x03DB4D94 BL 0x1C16CF4
	0x03DB4D98 MOVZ W8, 0x1
	0x03DB4D9C STRB W8, [X21 + 0x3A]
	0x03DB4DA0 MOV X0, X19
	0x03DB4DA4 MOV X1, X31
	0x03DB4DA8 STR X31, [X19 + 0x30]
	0x03DB4DAC STR W31, [X19 + 0x64]
	0x03DB4DB0 STP X31, X31, [X19 + 0x40]
	0x03DB4DB4 BL 0x3C36C30
	0x03DB4DB8 LDR X8, [X20]
	0x03DB4DBC LDR X8, [X8 + 0xB8]
	0x03DB4DC0 LDR W9, [X8]
	0x03DB4DC4 ADD W10, W9, 0x1
	0x03DB4DC8 STR W10, [X8]
	0x03DB4DCC STR W9, [X19 + 0x20]
	0x03DB4DD0 LDP X20, X19, [X31 + 0x10]
	0x03DB4DD4 LDP X30, X21, [X31], #0x20
	0x03DB4DD8 RET
	0x03DB4DDC B 0x3DB4DE0
	0x03DB4DE0 STP X30, X21, [X31 - 0x20]!
	0x03DB4DE4 STP X20, X19, [X31 + 0x10]
	0x03DB4DE8 ADRP X21, 0x634000
	0x03DB4DEC ADRP X20, 0x33F000
	0x03DB4DF0 LDRB W8, [X21 + 0x3C]
	0x03DB4DF4 LDR X20, [X20 + 0x598]
	0x03DB4DF8 MOV X19, X0
	0x03DB4DFC TBNZ X8, 0x0, 0x3DB4E14
	0x03DB4E00 ADRP X0, 0x33F000
	0x03DB4E04 LDR X0, [X0 + 0x598]
	0x03DB4E08 BL 0x1C16CF4
	0x03DB4E0C MOVZ W8, 0x1
	0x03DB4E10 STRB W8, [X21 + 0x3C]
	0x03DB4E14 LDR X0, [X20]
	0x03DB4E18 LDR X20, [X19 + 0x38]
	0x03DB4E1C LDR W8, [X0 + 0xE0]
	0x03DB4E20 CBNZ W8, 0x3DB4E28
	0x03DB4E24 BL 0x1C16DFC
	0x03DB4E28 MOV X0, X20
	0x03DB4E2C MOV X1, X31
	0x03DB4E30 MOV X2, X31
	0x03DB4E34 BL 0x3C354F8
	0x03DB4E38 TBZ X0, 0x0, 0x3DB4E54
	0x03DB4E3C LDR X8, [X19 + 0x38]
	0x03DB4E40 CBZ X8, 0x3DB4E6C
	0x03DB4E44 LDR X0, [X8 + 0x40]
	0x03DB4E48 CBZ X0, 0x3DB4E54
	0x03DB4E4C MOV X1, X19
	0x03DB4E50 BL 0x3DB4154
	0x03DB4E54 MOV X0, X19
	0x03DB4E58 BL 0x3DB4F40
	0x03DB4E5C STR X0, [X19 + 0x38]
	0x03DB4E60 LDP X20, X19, [X31 + 0x10]
	0x03DB4E64 LDP X30, X21, [X31], #0x20
	0x03DB4E68 RET
	0x03DB4E6C BL 0x1C16F20
	0x03DB4E70 STP X30, X21, [X31 - 0x20]!
	0x03DB4E74 STP X20, X19, [X31 + 0x10]
	0x03DB4E78 ADRP X20, 0x634000
	0x03DB4E7C ADRP X21, 0x33F000
	0x03DB4E80 LDRB W8, [X20 + 0x3B]
	0x03DB4E84 LDR X21, [X21 + 0x598]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x635000
	008 Move W8, [X22+251]
	009 Move X20, X2
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x368000
	017 Move X0, [X0+2328]
	018 Call 0x1C17CF4
	019 Move X0, 0x36A000
	020 Move X0, [X0+3336]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+251], W8
	024 Add X8, X19, 364
	025 Move [X8], X31
	026 Move [X19+400], X31
	027 Move X23, 0x625000
	028 Move X22, 0x368000
	029 Move W8, [X23+2752]
	030 Move X22, [X22+2328]
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x344000
	034 Move X0, [X0+624]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+2752], W8
	038 Move X8, 0x344000
	039 Move X8, [X8+624]
	040 Move X23, 0x36A000
	041 Move X8, [X8]
	042 Move X8, [X8+184]
	043 Move V0, [X8+96]
	044 Move V1, [X8+112]
	045 Move V2, [X8+64]
	046 Move V3, [X8+80]
	047 Add X8, X19, 408
	048 Move [X8+32], V0
	049 Move [X8+40], V1
	050 Move [X8], V2
	051 Move [X8+8], V3
	052 Move X0, [X22]
	053 Move W8, [X0+224]
	054 Move X23, [X23+3336]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X22]
	059 Move X8, [X0+184]
	060 Move X8, [X8+8]
	061 Move [X19+480], X8
	062 Move X0, [X23]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X19
	068 Move X1, X21
	069 Move W2, W31
	070 Move X3, X20
	071 Call Panel..ctor, X0, X1, X2, X3
	072 Move X8, [X22]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X8, [X8+184]
	076 Move W9, [X8]
	077 Add W10, W9, 1
	078 Move [X8], W10
	079 Move [X19+360], W9
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X30, [X31+48]
	083 Move X23, [X31+56]
	084 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03DBF984 STP X20, X19, [X31 + 0x20]
	0x03DBF988 ADRP X21, 0x629000
	0x03DBF98C LDRB W8, [X21 + 0x10D]
	0x03DBF990 MOV X19, X1
	0x03DBF994 MOV X20, X0
	0x03DBF998 TBNZ X8, 0x0, 0x3DBF9D4
	0x03DBF99C ADRP X0, 0x35D000
	0x03DBF9A0 LDR X0, [X0 + 0xE80]
	0x03DBF9A4 BL 0x1C16CF4
	0x03DBF9A8 ADRP X0, 0x33E000
	0x03DBF9AC LDR X0, [X0 + 0x170]
	0x03DBF9B0 BL 0x1C16CF4
	0x03DBF9B4 ADRP X0, 0x338000
	0x03DBF9B8 LDR X0, [X0 + 0xFD8]
	0x03DBF9BC BL 0x1C16CF4
	0x03DBF9C0 ADRP X0, 0x338000
	0x03DBF9C4 LDR X0, [X0 + 0xBF0]
	0x03DBF9C8 BL 0x1C16CF4
	0x03DBF9CC MOVZ W8, 0x1
	0x03DBF9D0 STRB W8, [X21 + 0x10D]
	0x03DBF9D4 CBZ X20, 0x3DBFA88

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+104]
	005 Compare W8, 0
	006 JumpIfEqual {11}
	007 Move X20, [X31+16]
	008 Move X19, [X31+24]
	009 Move X30, [X31+32]
	010 Return 
	011 Move X19, X0
	012 Move W20, W1
	013 Move TEMP, X1
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {24}
	017 Move X8, [X19+376]
	018 Compare X8, 0
	019 JumpIfEqual {24}
	020 Move X9, [X8+24]
	021 Move X0, [X8+64]
	022 Move X1, [X8+40]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 And W1, W20, 1
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Call Panel.Dispose, X0, X1
	030 Return 

Method: UnityEngine.Shader get_standardWorldSpaceShader()

Disassembly:
	0x03DBF9D8 ADRP X10, 0x35D000
	0x03DBF9DC LDR X8, [X20]

ISIL:
	001 Move X0, [X0+384]
	002 Return X0

Method: System.Boolean get_drawToCameras()

Disassembly:
	0x03DBF9E0 LDR X10, [X10 + 0xE80]
	0x03DBF9E4 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move W0, [X0+392]
	002 Return X0

Method: System.Void set_drawToCameras(System.Boolean value)

Disassembly:
	0x03DBF9E8 LDR X1, [X10]
	0x03DBF9EC CBZ X9, 0x3DBFA10
	0x03DBF9F0 LDR X10, [X8 + 0xB0]
	0x03DBF9F4 ADD X10, X10, 0x8
	0x03DBF9F8 LDUR X11, [X10 - 0x8]
	0x03DBF9FC CMP X11, X1
	0x03DBFA00 B.EQ 0x3DBFA20
	0x03DBFA04 SUBS X9, X9, 0x1
	0x03DBFA08 ADD X10, X10, 0x10
	0x03DBFA0C B.NE 0x3DBF9F8
	0x03DBFA10 MOVZ W2, 0x1
	0x03DBFA14 MOV X0, X20
	0x03DBFA18 BL 0x1C5C788
	0x03DBFA1C B 0x3DBFA30
	0x03DBFA20 LDR W9, [X10]
	0x03DBFA24 ADD W9, W9, 0x1
	0x03DBFA28 ADD X8, X8, W9, 0x4, SXTW
	0x03DBFA2C ADD X0, X8, 0x138
	0x03DBFA30 LDP X8, X1, [X0]
	0x03DBFA34 MOV X0, X20
	0x03DBFA38 BLR X8
	0x03DBFA3C CBZ X0, 0x3DBFA88
	0x03DBFA40 LDR X0, [X0 + 0x28]
	0x03DBFA44 CBZ X0, 0x3DBFA9C
	0x03DBFA48 MOV X1, X19
	0x03DBFA4C BL 0x3DBFAA0
	0x03DBFA50 ADRP X8, 0x338000
	0x03DBFA54 LDR X8, [X8 + 0xFD8]
	0x03DBFA58 AND W1, W0, 0x1
	0x03DBFA5C ADD X0, X31, 0xC
	0x03DBFA60 STRH W31, [X31 + 0xC]
	0x03DBFA64 LDR X2, [X8]
	0x03DBFA68 BL 0x242D570
	0x03DBFA6C LDRH W8, [X31 + 0xC]
	0x03DBFA70 ANDS W31, W8, 0xFF
	0x03DBFA74 CSET W9, EQ
	0x03DBFA78 CMP W8, 0xFF
	0x03DBFA7C CSET W8, HI
	0x03DBFA80 ORR W0, W9, W8, 0x0
	0x03DBFA84 B 0x3DBFA8C
	0x03DBFA88 MOVZ W0, 0x1
	0x03DBFA8C LDP X20, X19, [X31 + 0x20]
	0x03DBFA90 LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x62A000
	006 Move W8, [X21+252]
	007 Move X19, X0
	008 And W20, W1, 1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3A4000
	014 Move X0, [X0+1704]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+252], W8
	018 Move W8, [X19+392]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, [X19]
	021 Move [X19+392], W20
	022 Move W1, 6
	023 Move X0, X19
	024 Move X9, [X8+1080]
	025 Move X2, [X8+1088]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Compare X0, 0
	028 JumpIfEqual {40}
	029 Move X8, 0x3A4000
	030 Move X8, [X8+1704]
	031 Move X9, [X0]
	032 Move X8, [X8]
	033 Move W11, [X9+304]
	034 Move W10, [X8+304]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X9, [X9+200]
	037 Add X9, X9, X10
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call UIRRepaintUpdater.DestroyRenderChain, X0
	051 Return 

Method: System.Int32 get_targetDisplay()

Disassembly:
	0x03DBFA94 ADD X31, X31, 0x30
	0x03DBFA98 RET

ISIL:
	001 Move W0, [X0+472]
	002 Return X0

Method: System.Void set_targetDisplay(System.Int32 value)

Disassembly:
	0x03DBFA9C BL 0x1C16F20
	0x03DBFAA0 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X0+472], W1
	002 Return 

Method: System.Int32 get_screenRenderingWidth()

Disassembly:
	0x03DBFAA4 STP X20, X19, [X31 + 0x10]
	0x03DBFAA8 ADRP X21, 0x629000
	0x03DBFAAC LDRB W8, [X21 + 0x112]
	0x03DBFAB0 MOV X19, X1
	0x03DBFAB4 MOV X20, X0
	0x03DBFAB8 TBNZ X8, 0x0, 0x3DBFAD0
	0x03DBFABC ADRP X0, 0x35D000
	0x03DBFAC0 LDR X0, [X0 + 0xE78]
	0x03DBFAC4 BL 0x1C16CF4
	0x03DBFAC8 MOVZ W8, 0x1
	0x03DBFACC STRB W8, [X21 + 0x112]
	0x03DBFAD0 CBZ X19, 0x3DBFBCC
	0x03DBFAD4 ADRP X21, 0x35D000
	0x03DBFAD8 LDR X8, [X19]
	0x03DBFADC LDR X21, [X21 + 0xE78]
	0x03DBFAE0 LDRH W9, [X8 + 0x12E]
	0x03DBFAE4 LDR X1, [X21]
	0x03DBFAE8 CBZ X9, 0x3DBFB0C
	0x03DBFAEC LDR X10, [X8 + 0xB0]
	0x03DBFAF0 ADD X10, X10, 0x8
	0x03DBFAF4 LDUR X11, [X10 - 0x8]
	0x03DBFAF8 CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x62A000
	006 Move X20, 0x35D000
	007 Move W8, [X21+253]
	008 Move X20, [X20+2328]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x35D000
	015 Move X0, [X0+2328]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+253], W8
	019 Move X0, [X20]
	020 Move W19, [X19+472]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]

Method: System.Int32 get_screenRenderingHeight()

Disassembly:
	0x03DBFBBC CSET W0, NE
	0x03DBFBC0 LDP X20, X19, [X31 + 0x10]
	0x03DBFBC4 LDP X30, X21, [X31], #0x20
	0x03DBFBC8 RET
	0x03DBFBCC BL 0x1C16F20
	0x03DBFBD0 BL 0x1C16F28
	0x03DBFBD4 STR X30, [X31 - 0x40]!
	0x03DBFBD8 STP X24, X23, [X31 + 0x10]
	0x03DBFBDC STP X22, X21, [X31 + 0x20]
	0x03DBFBE0 STP X20, X19, [X31 + 0x30]
	0x03DBFBE4 ADRP X21, 0x629000
	0x03DBFBE8 LDRB W8, [X21 + 0x111]
	0x03DBFBEC MOV W19, W1
	0x03DBFBF0 MOV X20, X0
	0x03DBFBF4 TBNZ X8, 0x0, 0x3DBFC54
	0x03DBFBF8 ADRP X0, 0x334000
	0x03DBFBFC LDR X0, [X0 + 0xE00]
	0x03DBFC00 BL 0x1C16CF4
	0x03DBFC04 ADRP X0, 0x3A3000
	0x03DBFC08 LDR X0, [X0 + 0xCD8]
	0x03DBFC0C BL 0x1C16CF4
	0x03DBFC10 ADRP X0, 0x3AA000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x62A000
	006 Move X20, 0x35D000
	007 Move W8, [X21+254]
	008 Move X20, [X20+2328]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x35D000
	015 Move X0, [X0+2328]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+254], W8
	019 Move X0, [X20]
	020 Move W19, [X19+472]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]

Method: System.Int32 getScreenRenderingHeight(System.Int32 display)

Disassembly:
	0x03DBFC14 LDR X0, [X0 + 0x88]
	0x03DBFC18 BL 0x1C16CF4
	0x03DBFC1C ADRP X0, 0x3AA000
	0x03DBFC20 LDR X0, [X0 + 0x90]
	0x03DBFC24 BL 0x1C16CF4
	0x03DBFC28 ADRP X0, 0x3AA000
	0x03DBFC2C LDR X0, [X0 + 0x98]
	0x03DBFC30 BL 0x1C16CF4
	0x03DBFC34 ADRP X0, 0x3AA000
	0x03DBFC38 LDR X0, [X0 + 0xA0]
	0x03DBFC3C BL 0x1C16CF4
	0x03DBFC40 ADRP X0, 0x35D000
	0x03DBFC44 LDR X0, [X0 + 0xE50]
	0x03DBFC48 BL 0x1C16CF4
	0x03DBFC4C MOVZ W8, 0x1
	0x03DBFC50 STRB W8, [X21 + 0x111]
	0x03DBFC54 LDR X8, [X20 + 0x18]
	0x03DBFC58 CBZ X8, 0x3DC0264
	0x03DBFC5C LDR W9, [X8 + 0x18]
	0x03DBFC60 CMP W9, W19
	0x03DBFC64 B.LS 0x3DC0268
	0x03DBFC68 LDR X9, [X20 + 0x10]
	0x03DBFC6C CBZ X9, 0x3DC0264
	0x03DBFC70 LDR W10, [X9 + 0x18]
	0x03DBFC74 CMP W10, W19
	0x03DBFC78 B.LS 0x3DC0268
	0x03DBFC7C SXTW X24, W19
	0x03DBFC80 ADD X8, X8, X24, 0x3, LSL
	0x03DBFC84 ADD X9, X9, X24, 0x3, LSL
	0x03DBFC88 LDR X0, [X8 + 0x20]
	0x03DBFC8C LDR X1, [X9 + 0x20]
	0x03DBFC90 CMP X0, X1
	0x03DBFC94 B.EQ 0x3DC0250
	0x03DBFC98 CBZ X0, 0x3DBFF30
	0x03DBFC9C ADRP X8, 0x3AA000
	0x03DBFCA0 LDR X8, [X8 + 0x98]
	0x03DBFCA4 MOV W2, W19
	0x03DBFCA8 LDR X3, [X8]
	0x03DBFCAC BL 0x24A2D74
	0x03DBFCB0 LDR X8, [X20 + 0x18]
	0x03DBFCB4 MOV X22, X0
	0x03DBFCB8 CBZ X8, 0x3DC0274
	0x03DBFCBC LDR W9, [X8 + 0x18]
	0x03DBFCC0 CMP W9, W19
	0x03DBFCC4 B.LS 0x3DC0278
	0x03DBFCC8 ADD X8, X8, X24, 0x3, LSL
	0x03DBFCCC LDR X21, [X8 + 0x20]
	0x03DBFCD0 CBZ X21, 0x3DC027C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x62A000
	005 Move W8, [X20+255]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x399000
	012 Move X0, [X0+1096]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+255], W8
	016 Move TEMP, X19
	017 And TEMP, TEMP, -2147483648
	018 Compare TEMP, -2147483648
	019 JumpIfEqual {55}
	020 Move X20, 0x399000
	021 Move X20, [X20+1096]
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X8, [X8]
	030 Compare X8, 0
	031 JumpIfEqual {61}
	032 Move W9, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W9, [X0+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {43}
	037 Call 0x1C17DFC
	038 Move X8, [X20]
	039 Move X8, [X8+184]
	040 Move X8, [X8]
	041 Compare X8, 0
	042 JumpIfEqual {61}
	043 Move W9, [X8+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X8, X8, W19
	046 Move X0, [X8+32]
	047 Compare X0, 0
	048 JumpIfEqual {61}
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X1, X31
	052 Move X30, [X31+32]
	053 Call Display.get_renderingHeight, X0
	054 Return X0
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X0, X31
	058 Move X30, [X31+32]
	059 Call Screen.get_height
	060 Return X0
	061 Call 0x1C17F20
	062 Call 0x1C17F28

Method: System.Int32 getScreenRenderingWidth(System.Int32 display)

Disassembly:
	0x03DBFAFC B.EQ 0x3DBFB1C
	0x03DBFB00 SUBS X9, X9, 0x1
	0x03DBFB04 ADD X10, X10, 0x10
	0x03DBFB08 B.NE 0x3DBFAF4
	0x03DBFB0C MOVZ W2, 0x2
	0x03DBFB10 MOV X0, X19
	0x03DBFB14 BL 0x1C5C788
	0x03DBFB18 B 0x3DBFB2C
	0x03DBFB1C LDR W9, [X10]
	0x03DBFB20 ADD W9, W9, 0x2
	0x03DBFB24 ADD X8, X8, W9, 0x4, SXTW
	0x03DBFB28 ADD X0, X8, 0x138
	0x03DBFB2C LDP X8, X1, [X0]
	0x03DBFB30 MOV X0, X19
	0x03DBFB34 BLR X8
	0x03DBFB38 TBZ X0, 0x0, 0x3DBFB80
	0x03DBFB3C LDR X8, [X19]
	0x03DBFB40 LDR X20, [X20 + 0x20]
	0x03DBFB44 LDR X1, [X21]
	0x03DBFB48 LDRH W9, [X8 + 0x12E]
	0x03DBFB4C CBZ X9, 0x3DBFB70
	0x03DBFB50 LDR X10, [X8 + 0xB0]
	0x03DBFB54 ADD X10, X10, 0x8
	0x03DBFB58 LDUR X11, [X10 - 0x8]
	0x03DBFB5C CMP X11, X1
	0x03DBFB60 B.EQ 0x3DBFB88
	0x03DBFB64 SUBS X9, X9, 0x1
	0x03DBFB68 ADD X10, X10, 0x10
	0x03DBFB6C B.NE 0x3DBFB58
	0x03DBFB70 MOV X0, X19
	0x03DBFB74 MOV W2, W31
	0x03DBFB78 BL 0x1C5C788
	0x03DBFB7C B 0x3DBFB94
	0x03DBFB80 MOV W0, W31
	0x03DBFB84 B 0x3DBFBC0
	0x03DBFB88 LDRSW X9, [X10]
	0x03DBFB8C ADD X8, X8, X9, 0x4, LSL
	0x03DBFB90 ADD X0, X8, 0x138
	0x03DBFB94 LDP X8, X1, [X0]
	0x03DBFB98 MOV X0, X19
	0x03DBFB9C BLR X8
	0x03DBFBA0 CBZ X20, 0x3DBFBCC
	0x03DBFBA4 LDR W8, [X20 + 0x18]
	0x03DBFBA8 CMP W0, W8
	0x03DBFBAC B.CS 0x3DBFBD0
	0x03DBFBB0 ADD X8, X20, W0, SXTW
	0x03DBFBB4 LDRB W8, [X8 + 0x20]
	0x03DBFBB8 CMP W8, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x62A000
	005 Move W8, [X20+256]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x399000
	012 Move X0, [X0+1096]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+256], W8
	016 Move TEMP, X19
	017 And TEMP, TEMP, -2147483648
	018 Compare TEMP, -2147483648
	019 JumpIfEqual {55}
	020 Move X20, 0x399000
	021 Move X20, [X20+1096]
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X8, [X8]
	030 Compare X8, 0
	031 JumpIfEqual {61}
	032 Move W9, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W9, [X0+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {43}
	037 Call 0x1C17DFC
	038 Move X8, [X20]
	039 Move X8, [X8+184]
	040 Move X8, [X8]
	041 Compare X8, 0
	042 JumpIfEqual {61}
	043 Move W9, [X8+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X8, X8, W19
	046 Move X0, [X8+32]
	047 Compare X0, 0
	048 JumpIfEqual {61}
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X1, X31
	052 Move X30, [X31+32]
	053 Call Display.get_renderingWidth, X0
	054 Return X0
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X0, X31
	058 Move X30, [X31+32]
	059 Call Screen.get_width
	060 Return X0
	061 Call 0x1C17F20
	062 Call 0x1C17F28

Method: System.Void Repaint(UnityEngine.Event e)

Disassembly:
	0x03DBFCD4 ADRP X10, 0x3A3000
	0x03DBFCD8 LDR X8, [X21]
	0x03DBFCDC LDR X10, [X10 + 0xCD8]
	0x03DBFCE0 LDRH W9, [X8 + 0x12E]
	0x03DBFCE4 LDR X1, [X10]
	0x03DBFCE8 CBZ X9, 0x3DBFD0C
	0x03DBFCEC LDR X10, [X8 + 0xB0]
	0x03DBFCF0 ADD X10, X10, 0x8
	0x03DBFCF4 LDUR X11, [X10 - 0x8]
	0x03DBFCF8 CMP X11, X1
	0x03DBFCFC B.EQ 0x3DBFD1C
	0x03DBFD00 SUBS X9, X9, 0x1
	0x03DBFD04 ADD X10, X10, 0x10
	0x03DBFD08 B.NE 0x3DBFCF4
	0x03DBFD0C MOV X0, X21
	0x03DBFD10 MOV W2, W31
	0x03DBFD14 BL 0x1C5C788
	0x03DBFD18 B 0x3DBFD28
	0x03DBFD1C LDRSW X9, [X10]
	0x03DBFD20 ADD X8, X8, X9, 0x4, LSL
	0x03DBFD24 ADD X0, X8, 0x138
	0x03DBFD28 LDP X8, X2, [X0]
	0x03DBFD2C MOV X0, X21
	0x03DBFD30 MOV X1, X22
	0x03DBFD34 BLR X8
	0x03DBFD38 MOV X21, X31
	0x03DBFD3C MOVZ W23, 0x5
	0x03DBFD40 CBZ X22, 0x3DBFDA4
	0x03DBFD44 ADRP X10, 0x334000
	0x03DBFD48 LDR X8, [X22]
	0x03DBFD4C LDR X10, [X10 + 0xE00]
	0x03DBFD50 LDRH W9, [X8 + 0x12E]
	0x03DBFD54 LDR X1, [X10]
	0x03DBFD58 CBZ X9, 0x3DBFD7C
	0x03DBFD5C LDR X10, [X8 + 0xB0]
	0x03DBFD60 ADD X10, X10, 0x8
	0x03DBFD64 LDUR X11, [X10 - 0x8]
	0x03DBFD68 CMP X11, X1
	0x03DBFD6C B.EQ 0x3DBFD8C
	0x03DBFD70 SUBS X9, X9, 0x1
	0x03DBFD74 ADD X10, X10, 0x10
	0x03DBFD78 B.NE 0x3DBFD64
	0x03DBFD7C MOV X0, X22
	0x03DBFD80 MOV W2, W31
	0x03DBFD84 BL 0x1C5C788
	0x03DBFD88 B 0x3DBFD98
	0x03DBFD8C LDRSW X9, [X10]
	0x03DBFD90 ADD X8, X8, X9, 0x4, LSL
	0x03DBFD94 ADD X0, X8, 0x138
	0x03DBFD98 LDP X8, X1, [X0]
	0x03DBFD9C MOV X0, X22
	0x03DBFDA0 BLR X8
	0x03DBFDA4 CBNZ X21, 0x3DC026C
	0x03DBFDA8 CMP W23, 0x5
	0x03DBFDAC B.EQ 0x3DBFDB4
	0x03DBFDB0 CBNZ W23, 0x3DC0250
	0x03DBFDB4 ADRP X21, 0x35D000
	0x03DBFDB8 LDR X21, [X21 + 0xE50]
	0x03DBFDBC LDR X0, [X21]
	0x03DBFDC0 LDR W8, [X0 + 0xE0]
	0x03DBFDC4 CBNZ W8, 0x3DBFDD0
	0x03DBFDC8 BL 0x1C16DFC
	0x03DBFDCC LDR X0, [X21]
	0x03DBFDD0 LDR X8, [X0 + 0xB8]
	0x03DBFDD4 LDR W8, [X8 + 0x8]
	0x03DBFDD8 CMP W8, W19
	0x03DBFDDC B.NE 0x3DBFF30
	0x03DBFDE0 LDR X8, [X20 + 0x18]
	0x03DBFDE4 CBZ X8, 0x3DC0264
	0x03DBFDE8 LDR W9, [X8 + 0x18]
	0x03DBFDEC CMP W9, W19
	0x03DBFDF0 B.LS 0x3DC0268
	0x03DBFDF4 LDR X9, [X20 + 0x10]
	0x03DBFDF8 CBZ X9, 0x3DC0264
	0x03DBFDFC LDR W10, [X9 + 0x18]
	0x03DBFE00 CMP W10, W19
	0x03DBFE04 B.LS 0x3DC0268
	0x03DBFE08 ADRP X10, 0x3AA000
	0x03DBFE0C LDR X10, [X10 + 0x90]
	0x03DBFE10 ADD X8, X8, X24, 0x3, LSL
	0x03DBFE14 ADD X9, X9, X24, 0x3, LSL
	0x03DBFE18 LDR X0, [X8 + 0x20]
	0x03DBFE1C LDR X1, [X9 + 0x20]
	0x03DBFE20 LDR X3, [X10]
	0x03DBFE24 MOV W2, W19
	0x03DBFE28 BL 0x24A2D74
	0x03DBFE2C LDR X8, [X20 + 0x18]
	0x03DBFE30 MOV X22, X0
	0x03DBFE34 CBZ X8, 0x3DC0298
	0x03DBFE38 LDR W9, [X8 + 0x18]
	0x03DBFE3C CMP W9, W19
	0x03DBFE40 B.LS 0x3DC029C
	0x03DBFE44 ADD X8, X8, X24, 0x3, LSL
	0x03DBFE48 LDR X21, [X8 + 0x20]
	0x03DBFE4C CBZ X21, 0x3DC02A0
	0x03DBFE50 ADRP X10, 0x3A3000
	0x03DBFE54 LDR X8, [X21]
	0x03DBFE58 LDR X10, [X10 + 0xCD8]
	0x03DBFE5C LDRH W9, [X8 + 0x12E]
	0x03DBFE60 LDR X1, [X10]
	0x03DBFE64 CBZ X9, 0x3DBFE88
	0x03DBFE68 LDR X10, [X8 + 0xB0]
	0x03DBFE6C ADD X10, X10, 0x8
	0x03DBFE70 LDUR X11, [X10 - 0x8]
	0x03DBFE74 CMP X11, X1
	0x03DBFE78 B.EQ 0x3DBFE98
	0x03DBFE7C SUBS X9, X9, 0x1
	0x03DBFE80 ADD X10, X10, 0x10
	0x03DBFE84 B.NE 0x3DBFE70
	0x03DBFE88 MOV X0, X21
	0x03DBFE8C MOV W2, W31
	0x03DBFE90 BL 0x1C5C788
	0x03DBFE94 B 0x3DBFEA4
	0x03DBFE98 LDRSW X9, [X10]
	0x03DBFE9C ADD X8, X8, X9, 0x4, LSL
	0x03DBFEA0 ADD X0, X8, 0x138
	0x03DBFEA4 LDP X8, X2, [X0]
	0x03DBFEA8 MOV X0, X21
	0x03DBFEAC MOV X1, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x62A000
	008 Move X23, 0x335000
	009 Move W8, [X21+257]
	010 Move X23, [X23+1432]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x335000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+257], W8
	022 Move X0, [X23]
	023 Move X21, [X20+400]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {60}
	036 Move X0, X31
	037 Call RenderTexture.get_active
	038 Move X8, [X23]
	039 Move X21, X0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X0, X21
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Inequality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {110}
	053 Compare X21, 0
	054 JumpIfEqual {151}
	055 Move X8, [X21]
	056 Move X0, X21
	057 Move X9, [X8+392]
	058 Move X1, [X8+400]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X0, X31
	061 Call Camera.get_current
	062 Move X21, X0
	063 Move X0, X31
	064 Call RenderTexture.get_active
	065 Move X22, X0
	066 Move X0, X31
	067 Move X1, X31
	068 Call Camera.SetupCurrent, X0
	069 Move X0, [X20+400]
	070 Move X1, X31
	071 Call RenderTexture.set_active, X0
	072 Move X0, [X20+400]
	073 Compare X0, 0
	074 JumpIfEqual {151}
	075 Move X8, [X0]
	076 Move X9, [X8+392]
	077 Move X1, [X8+400]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X8, [X20+400]
	080 Compare X8, 0
	081 JumpIfEqual {151}
	082 Move X9, [X8]
	083 Move W23, W0
	084 Move X0, X8
	085 Move X10, [X9+424]
	086 Move X1, [X9+432]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 NotImplemented "Instruction SCVTF not yet implemented."
	089 NotImplemented "Instruction SCVTF not yet implemented."
	090 Move S0, W31
	091 Move S1, W31
	092 Move X0, X31
	093 Call GL.Viewport, X0
	094 Move X0, X20
	095 Move X1, X19
	096 Call Panel.Repaint, X0, X1
	097 Move X0, X21
	098 Move X1, X31
	099 Call Camera.SetupCurrent, X0
	100 Move X0, X22
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X1, X31
	106 Move X30, [X31+48]
	107 Move X23, [X31+56]
	108 Call RenderTexture.set_active, X0
	109 Return 
	110 Move X0, X20
	111 Call BaseRuntimePanel.get_screenRenderingWidth, X0
	112 Move W22, W0
	113 Move X0, [X23]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move X0, X21
	119 Move X1, X31
	120 Move X2, X31
	121 Call Object.op_Inequality, X0, X1
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {133}
	126 Compare X21, 0
	127 JumpIfEqual {151}
	128 Move X8, [X21]
	129 Move X0, X21
	130 Move X9, [X8+424]
	131 Move X1, [X8+432]
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X0, X20
	134 Call BaseRuntimePanel.get_screenRenderingHeight, X0
	135 NotImplemented "Instruction SCVTF not yet implemented."
	136 NotImplemented "Instruction SCVTF not yet implemented."
	137 Move S0, W31
	138 Move S1, W31
	139 Move X0, X31
	140 Call GL.Viewport, X0
	141 Move X0, X20
	142 Move X1, X19
	143 Move X20, [X31+32]
	144 Move X19, [X31+40]
	145 Move X22, [X31+16]
	146 Move X21, [X31+24]
	147 Move X30, [X31+48]
	148 Move X23, [X31+56]
	149 Call Panel.Repaint, X0, X1
	150 Return 
	151 Call 0x1C17F20

Method: System.Func`2<UnityEngine.Vector2, UnityEngine.Vector2> get_screenToPanelSpace()

Disassembly:
	0x03DBFEB0 BLR X8
	0x03DBFEB4 MOV X21, X31

ISIL:
	001 Move X0, [X0+480]
	002 Return X0

Method: System.Void set_screenToPanelSpace(System.Func`2<UnityEngine.Vector2, UnityEngine.Vector2> value)

Disassembly:
	0x03DBFEB8 MOVZ W23, 0x7
	0x03DBFEBC CBZ X22, 0x3DBFF20
	0x03DBFEC0 ADRP X10, 0x334000
	0x03DBFEC4 LDR X8, [X22]
	0x03DBFEC8 LDR X10, [X10 + 0xE00]
	0x03DBFECC LDRH W9, [X8 + 0x12E]
	0x03DBFED0 LDR X1, [X10]
	0x03DBFED4 CBZ X9, 0x3DBFEF8
	0x03DBFED8 LDR X10, [X8 + 0xB0]
	0x03DBFEDC ADD X10, X10, 0x8
	0x03DBFEE0 LDUR X11, [X10 - 0x8]
	0x03DBFEE4 CMP X11, X1
	0x03DBFEE8 B.EQ 0x3DBFF08
	0x03DBFEEC SUBS X9, X9, 0x1
	0x03DBFEF0 ADD X10, X10, 0x10
	0x03DBFEF4 B.NE 0x3DBFEE0
	0x03DBFEF8 MOV X0, X22
	0x03DBFEFC MOV W2, W31
	0x03DBFF00 BL 0x1C5C788
	0x03DBFF04 B 0x3DBFF14
	0x03DBFF08 LDRSW X9, [X10]
	0x03DBFF0C ADD X8, X8, X9, 0x4, LSL
	0x03DBFF10 ADD X0, X8, 0x138
	0x03DBFF14 LDP X8, X1, [X0]
	0x03DBFF18 MOV X0, X22
	0x03DBFF1C BLR X8
	0x03DBFF20 CBNZ X21, 0x3DC026C
	0x03DBFF24 CMP W23, 0x7
	0x03DBFF28 B.EQ 0x3DBFF30
	0x03DBFF2C CBNZ W23, 0x3DC0250

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x62A000
	006 Move W8, [X21+258]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {23}
	013 Compare X20, 0
	014 JumpIfEqual {30}
	015 Compare X19, 0
	016 JumpIfEqual {42}
	017 Move [X19+480], X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Return 
	023 Move X0, 0x35D000
	024 Move X0, [X0+2328]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+258], W8
	028 Compare X20, 0
	029 JumpIfNotEqual {15}
	030 Move X20, 0x35D000
	031 Move X20, [X20+2328]
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X8, [X0+184]
	039 Move X20, [X8+8]
	040 Compare X19, 0
	041 JumpIfNotEqual {17}
	042 Call 0x1C17F20

Method: UnityEngine.Vector2 ScreenToPanel(UnityEngine.Vector2 screen)

Disassembly:
	0x03DBFF30 LDR X8, [X20 + 0x10]
	0x03DBFF34 CBZ X8, 0x3DC0264
	0x03DBFF38 LDR W9, [X8 + 0x18]
	0x03DBFF3C CMP W9, W19
	0x03DBFF40 B.LS 0x3DC0268
	0x03DBFF44 ADD X8, X8, X24, 0x3, LSL
	0x03DBFF48 LDR X0, [X8 + 0x20]
	0x03DBFF4C CBZ X0, 0x3DC0200
	0x03DBFF50 LDR X8, [X20 + 0x18]
	0x03DBFF54 CBZ X8, 0x3DC0264
	0x03DBFF58 LDR W9, [X8 + 0x18]
	0x03DBFF5C CMP W9, W19
	0x03DBFF60 B.LS 0x3DC0268
	0x03DBFF64 ADRP X9, 0x3AA000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+480]
	004 Compare X8, 0
	005 JumpIfEqual {17}
	006 Move X19, X0
	007 Move X9, [X8+24]
	008 Move X0, [X8+64]
	009 Move X1, [X8+40]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move V2, [X19+32]
	012 NotImplemented "Instruction FDIV not yet implemented."
	013 NotImplemented "Instruction FDIV not yet implemented."
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return X0
	017 Call 0x1C17F20

Method: System.Boolean ScreenToPanel(UnityEngine.Vector2 screenPosition, UnityEngine.Vector2 screenDelta, out UnityEngine.Vector2 panelPosition, out UnityEngine.Vector2 panelDelta, System.Boolean allowOutside = False)

Disassembly:
	0x03DBFF68 LDR X9, [X9 + 0x88]
	0x03DBFF6C ADD X8, X8, X24, 0x3, LSL
	0x03DBFF70 LDR X1, [X8 + 0x20]
	0x03DBFF74 MOV W2, W19
	0x03DBFF78 LDR X3, [X9]
	0x03DBFF7C BL 0x24A2D74
	0x03DBFF80 LDR X8, [X20 + 0x10]
	0x03DBFF84 MOV X22, X0
	0x03DBFF88 CBZ X8, 0x3DC0280
	0x03DBFF8C LDR W9, [X8 + 0x18]
	0x03DBFF90 CMP W9, W19
	0x03DBFF94 B.LS 0x3DC0284
	0x03DBFF98 ADD X8, X8, X24, 0x3, LSL
	0x03DBFF9C LDR X21, [X8 + 0x20]
	0x03DBFFA0 CBZ X21, 0x3DC0288
	0x03DBFFA4 ADRP X10, 0x3A3000
	0x03DBFFA8 LDR X8, [X21]
	0x03DBFFAC LDR X10, [X10 + 0xCD8]
	0x03DBFFB0 LDRH W9, [X8 + 0x12E]
	0x03DBFFB4 LDR X1, [X10]
	0x03DBFFB8 CBZ X9, 0x3DBFFDC
	0x03DBFFBC LDR X10, [X8 + 0xB0]
	0x03DBFFC0 ADD X10, X10, 0x8
	0x03DBFFC4 LDUR X11, [X10 - 0x8]
	0x03DBFFC8 CMP X11, X1
	0x03DBFFCC B.EQ 0x3DBFFEC
	0x03DBFFD0 SUBS X9, X9, 0x1
	0x03DBFFD4 ADD X10, X10, 0x10
	0x03DBFFD8 B.NE 0x3DBFFC4
	0x03DBFFDC MOV X0, X21
	0x03DBFFE0 MOV W2, W31
	0x03DBFFE4 BL 0x1C5C788
	0x03DBFFE8 B 0x3DBFFF8
	0x03DBFFEC LDRSW X9, [X10]
	0x03DBFFF0 ADD X8, X8, X9, 0x4, LSL
	0x03DBFFF4 ADD X0, X8, 0x138
	0x03DBFFF8 LDP X8, X2, [X0]
	0x03DBFFFC MOV X0, X21
	0x03DC0000 MOV X1, X22
	0x03DC0004 BLR X8
	0x03DC0008 MOV X21, X31
	0x03DC000C MOVZ W23, 0x9
	0x03DC0010 CBZ X22, 0x3DC0074
	0x03DC0014 ADRP X10, 0x333000
	0x03DC0018 LDR X8, [X22]
	0x03DC001C LDR X10, [X10 + 0xE00]
	0x03DC0020 LDRH W9, [X8 + 0x12E]
	0x03DC0024 LDR X1, [X10]
	0x03DC0028 CBZ X9, 0x3DC004C
	0x03DC002C LDR X10, [X8 + 0xB0]
	0x03DC0030 ADD X10, X10, 0x8
	0x03DC0034 LDUR X11, [X10 - 0x8]
	0x03DC0038 CMP X11, X1
	0x03DC003C B.EQ 0x3DC005C
	0x03DC0040 SUBS X9, X9, 0x1
	0x03DC0044 ADD X10, X10, 0x10
	0x03DC0048 B.NE 0x3DC0034
	0x03DC004C MOV X0, X22
	0x03DC0050 MOV W2, W31
	0x03DC0054 BL 0x1C5C788
	0x03DC0058 B 0x3DC0068
	0x03DC005C LDRSW X9, [X10]
	0x03DC0060 ADD X8, X8, X9, 0x4, LSL
	0x03DC0064 ADD X0, X8, 0x138
	0x03DC0068 LDP X8, X1, [X0]
	0x03DC006C MOV X0, X22
	0x03DC0070 BLR X8
	0x03DC0074 CBNZ X21, 0x3DC026C
	0x03DC0078 CMP W23, 0x9
	0x03DC007C B.EQ 0x3DC0084
	0x03DC0080 CBNZ W23, 0x3DC0250
	0x03DC0084 ADRP X21, 0x35C000
	0x03DC0088 LDR X21, [X21 + 0xE50]

ISIL:
	001 Move [X31-112], D15
	002 Move [X31-104], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move W22, W3
	015 Move X19, X2
	016 Move X20, X1
	017 Move V8, V3
	018 Move V9, V2
	019 Move V10, V1
	020 Move V11, V0
	021 Move X21, X0
	022 Call BaseRuntimePanel.ScreenToPanel, X0, X1
	023 Move [X20], S0
	024 Move [X20+8], S1
	025 Move TEMP, X22
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {54}
	029 Subtract S0, S11, S9
	030 Subtract S1, S10, S8
	031 Move X0, X21
	032 Call BaseRuntimePanel.ScreenToPanel, X0, X1
	033 Move S2, [X20]
	034 Move S3, [X20+4]
	035 Move W0, 1
	036 Subtract S9, S2, S0
	037 Subtract S8, S3, S1
	038 Move [X19], S9
	039 Move [X19+8], S8
	040 Move X20, [X31+96]
	041 Move X19, [X31+104]
	042 Move X22, [X31+80]
	043 Move X21, [X31+88]
	044 Move X30, [X31+64]
	045 Move D9, [X31+48]
	046 Move D8, [X31+56]
	047 Move D11, [X31+32]
	048 Move D10, [X31+40]
	049 Move D13, [X31+16]
	050 Move D12, [X31+24]
	051 Move D15, [X31+112]
	052 Move D14, [X31+120]
	053 Return X0
	054 Move X8, [X21]
	055 Move X0, X21
	056 Move X9, [X8+920]
	057 Move X1, [X8+928]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Compare X0, 0
	060 JumpIfEqual {83}
	061 Move X1, X31
	062 Call VisualElement.get_layout, X0
	063 Move V12, V0
	064 Move V0, [X20+4]
	065 Add S14, S1, S3
	066 Move W0, W31
	067 NotImplemented "Instruction FCMP not yet implemented."
	068 Move V13, V1
	069 NotImplemented "Instruction FCMP not yet implemented."
	070 Move V0, [X20]
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 Add S15, S12, S2
	073 NotImplemented "Instruction FCMP not yet implemented."
	074 Subtract S0, S11, S9
	075 Subtract S1, S10, S8
	076 Move X0, X21
	077 Call BaseRuntimePanel.ScreenToPanel, X0, X1
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 Move W0, 1
	080 NotImplemented "Instruction FCMP not yet implemented."
	081 NotImplemented "Instruction FCMP not yet implemented."
	082 NotImplemented "Instruction FCMP not yet implemented."
	083 Call 0x1C17F20

Method: System.Void AssignPanelToComponents(UnityEngine.UIElements.BaseRuntimePanel panel)

Disassembly:
	0x03DBF508 LDR X0, [X22]
	0x03DBF50C LDR W8, [X0 + 0xE0]
	0x03DBF510 CBNZ W8, 0x3DBF518
	0x03DBF514 BL 0x1C16DFC
	0x03DBF518 MOV X0, X31
	0x03DBF51C BL 0x3C6AB88
	0x03DBF520 CBZ W0, 0x3DBF540
	0x03DBF524 LDR X0, [X22]
	0x03DBF528 LDR W8, [X0 + 0xE0]
	0x03DBF52C CBNZ W8, 0x3DBF534
	0x03DBF530 BL 0x1C16DFC
	0x03DBF534 MOV W0, W31
	0x03DBF538 MOV X1, X31
	0x03DBF53C BL 0x3C6AA0C
	0x03DBF540 LDR X21, [X21 + 0x10]
	0x03DBF544 CBZ X21, 0x3DBF584
	0x03DBF548 CBZ X19, 0x3DBF560
	0x03DBF54C LDR X8, [X21]
	0x03DBF550 MOV X0, X19
	0x03DBF554 LDR X1, [X8 + 0x40]
	0x03DBF558 BL 0x1C16E00
	0x03DBF55C CBZ X0, 0x3DBF58C
	0x03DBF560 LDR W8, [X21 + 0x18]
	0x03DBF564 CMP W8, W20
	0x03DBF568 B.LS 0x3DBF588
	0x03DBF56C ADD X8, X21, W20, 0x3, SXTW
	0x03DBF570 STR X19, [X8 + 0x20]
	0x03DBF574 LDP X20, X19, [X31 + 0x20]
	0x03DBF578 LDP X22, X21, [X31 + 0x10]
	0x03DBF57C LDP X30, X23, [X31], #0x30
	0x03DBF580 RET
	0x03DBF584 BL 0x1C16F20
	0x03DBF588 BL 0x1C16F28
	0x03DBF58C BL 0x1C16F44
	0x03DBF590 MOV X1, X31
	0x03DBF594 BL 0x1C16DEC
	0x03DBF598 STR X30, [X31 - 0x10]!
	0x03DBF59C LDR X8, [X0 + 0x10]
	0x03DBF5A0 CBZ X8, 0x3DBF5CC
	0x03DBF5A4 LDR W9, [X8 + 0x18]
	0x03DBF5A8 CMP W9, W2
	0x03DBF5AC B.LS 0x3DBF5D0
	0x03DBF5B0 ADD X8, X8, W2, 0x3, SXTW
	0x03DBF5B4 LDR X9, [X8 + 0x20]!
	0x03DBF5B8 CMP X9, X1
	0x03DBF5BC B.NE 0x3DBF5C4
	0x03DBF5C0 STR X31, [X8]
	0x03DBF5C4 LDR X30, [X31], #0x10
	0x03DBF5C8 RET
	0x03DBF5CC BL 0x1C16F20
	0x03DBF5D0 BL 0x1C16F28
	0x03DBF5D4 STP X30, X21, [X31 - 0x20]!
	0x03DBF5D8 STP X20, X19, [X31 + 0x10]
	0x03DBF5DC ADRP X21, 0x629000
	0x03DBF5E0 LDRB W8, [X21 + 0x109]
	0x03DBF5E4 MOV W19, W1
	0x03DBF5E8 MOV X20, X0
	0x03DBF5EC TBNZ X8, 0x0, 0x3DBF604
	0x03DBF5F0 ADRP X0, 0x35D000
	0x03DBF5F4 LDR X0, [X0 + 0xE80]
	0x03DBF5F8 BL 0x1C16CF4
	0x03DBF5FC MOVZ W8, 0x1
	0x03DBF600 STRB W8, [X21 + 0x109]
	0x03DBF604 CBZ X20, 0x3DBF688
	0x03DBF608 ADRP X10, 0x35D000
	0x03DBF60C LDR X8, [X20]
	0x03DBF610 LDR X10, [X10 + 0xE80]
	0x03DBF614 LDRH W9, [X8 + 0x12E]
	0x03DBF618 LDR X1, [X10]
	0x03DBF61C CBZ X9, 0x3DBF640
	0x03DBF620 LDR X10, [X8 + 0xB0]
	0x03DBF624 ADD X10, X10, 0x8
	0x03DBF628 LDUR X11, [X10 - 0x8]
	0x03DBF62C CMP X11, X1
	0x03DBF630 B.EQ 0x3DBF650
	0x03DBF634 SUBS X9, X9, 0x1
	0x03DBF638 ADD X10, X10, 0x10
	0x03DBF63C B.NE 0x3DBF628
	0x03DBF640 MOVZ W2, 0x1
	0x03DBF644 MOV X0, X20
	0x03DBF648 BL 0x1C5C788
	0x03DBF64C B 0x3DBF660
	0x03DBF650 LDR W9, [X10]
	0x03DBF654 ADD W9, W9, 0x1
	0x03DBF658 ADD X8, X8, W9, 0x4, SXTW
	0x03DBF65C ADD X0, X8, 0x138
	0x03DBF660 LDP X8, X1, [X0]
	0x03DBF664 MOV X0, X20
	0x03DBF668 BLR X8
	0x03DBF66C CBZ X0, 0x3DBF688
	0x03DBF670 LDR X0, [X0 + 0x28]
	0x03DBF674 CBZ X0, 0x3DBF698
	0x03DBF678 MOV W1, W19
	0x03DBF67C LDP X20, X19, [X31 + 0x10]
	0x03DBF680 LDP X30, X21, [X31], #0x20
	0x03DBF684 B 0x3DB90F4
	0x03DBF688 LDP X20, X19, [X31 + 0x10]
	0x03DBF68C MOV X0, X31
	0x03DBF690 LDP X30, X21, [X31], #0x20
	0x03DBF694 RET
	0x03DBF698 BL 0x1C16F20
	0x03DBF69C STP X30, X21, [X31 - 0x20]!
	0x03DBF6A0 STP X20, X19, [X31 + 0x10]
	0x03DBF6A4 ADRP X21, 0x629000
	0x03DBF6A8 LDRB W8, [X21 + 0x10A]
	0x03DBF6AC MOV W19, W1
	0x03DBF6B0 MOV X20, X0
	0x03DBF6B4 TBNZ X8, 0x0, 0x3DBF6CC
	0x03DBF6B8 ADRP X0, 0x35D000
	0x03DBF6BC LDR X0, [X0 + 0xE80]
	0x03DBF6C0 BL 0x1C16CF4
	0x03DBF6C4 MOVZ W8, 0x1
	0x03DBF6C8 STRB W8, [X21 + 0x10A]
	0x03DBF6CC CBZ X20, 0x3DBF750
	0x03DBF6D0 ADRP X10, 0x35D000
	0x03DBF6D4 LDR X8, [X20]
	0x03DBF6D8 LDR X10, [X10 + 0xE80]
	0x03DBF6DC LDRH W9, [X8 + 0x12E]
	0x03DBF6E0 LDR X1, [X10]
	0x03DBF6E4 CBZ X9, 0x3DBF708
	0x03DBF6E8 LDR X10, [X8 + 0xB0]
	0x03DBF6EC ADD X10, X10, 0x8
	0x03DBF6F0 LDUR X11, [X10 - 0x8]
	0x03DBF6F4 CMP X11, X1
	0x03DBF6F8 B.EQ 0x3DBF718
	0x03DBF6FC SUBS X9, X9, 0x1
	0x03DBF700 ADD X10, X10, 0x10
	0x03DBF704 B.NE 0x3DBF6F0
	0x03DBF708 MOVZ W2, 0x1
	0x03DBF70C MOV X0, X20
	0x03DBF710 BL 0x1C5C788
	0x03DBF714 B 0x3DBF728
	0x03DBF718 LDR W9, [X10]
	0x03DBF71C ADD W9, W9, 0x1
	0x03DBF720 ADD X8, X8, W9, 0x4, SXTW
	0x03DBF724 ADD X0, X8, 0x138
	0x03DBF728 LDP X8, X1, [X0]
	0x03DBF72C MOV X0, X20
	0x03DBF730 BLR X8
	0x03DBF734 CBZ X0, 0x3DBF750
	0x03DBF738 LDR X0, [X0 + 0x28]
	0x03DBF73C CBZ X0, 0x3DBF75C
	0x03DBF740 MOV W1, W19
	0x03DBF744 LDP X20, X19, [X31 + 0x10]
	0x03DBF748 LDP X30, X21, [X31], #0x20
	0x03DBF74C B 0x3DBF760
	0x03DBF750 LDP X20, X19, [X31 + 0x10]
	0x03DBF754 LDP X30, X21, [X31], #0x20
	0x03DBF758 RET
	0x03DBF75C BL 0x1C16F20
	0x03DBF760 STR X30, [X31 - 0x10]!
	0x03DBF764 LDR X8, [X0 + 0x10]
	0x03DBF768 CBZ X8, 0x3DBF788
	0x03DBF76C LDR W9, [X8 + 0x18]
	0x03DBF770 CMP W9, W1
	0x03DBF774 B.LS 0x3DBF78C
	0x03DBF778 ADD X8, X8, W1, 0x3, SXTW
	0x03DBF77C STR X31, [X8 + 0x20]
	0x03DBF780 LDR X30, [X31], #0x10
	0x03DBF784 RET
	0x03DBF788 BL 0x1C16F20
	0x03DBF78C BL 0x1C16F28
	0x03DBF790 STP X30, X21, [X31 - 0x20]!
	0x03DBF794 STP X20, X19, [X31 + 0x10]
	0x03DBF798 ADRP X21, 0x629000
	0x03DBF79C LDRB W8, [X21 + 0x10B]
	0x03DBF7A0 MOV W19, W1
	0x03DBF7A4 MOV X20, X0
	0x03DBF7A8 TBNZ X8, 0x0, 0x3DBF7C0
	0x03DBF7AC ADRP X0, 0x35D000
	0x03DBF7B0 LDR X0, [X0 + 0xE80]
	0x03DBF7B4 BL 0x1C16CF4
	0x03DBF7B8 MOVZ W8, 0x1
	0x03DBF7BC STRB W8, [X21 + 0x10B]
	0x03DBF7C0 CBZ X20, 0x3DBF844
	0x03DBF7C4 ADRP X10, 0x35D000
	0x03DBF7C8 LDR X8, [X20]
	0x03DBF7CC LDR X10, [X10 + 0xE80]
	0x03DBF7D0 LDRH W9, [X8 + 0x12E]
	0x03DBF7D4 LDR X1, [X10]
	0x03DBF7D8 CBZ X9, 0x3DBF7FC
	0x03DBF7DC LDR X10, [X8 + 0xB0]
	0x03DBF7E0 ADD X10, X10, 0x8
	0x03DBF7E4 LDUR X11, [X10 - 0x8]
	0x03DBF7E8 CMP X11, X1
	0x03DBF7EC B.EQ 0x3DBF80C
	0x03DBF7F0 SUBS X9, X9, 0x1
	0x03DBF7F4 ADD X10, X10, 0x10
	0x03DBF7F8 B.NE 0x3DBF7E4
	0x03DBF7FC MOVZ W2, 0x1
	0x03DBF800 MOV X0, X20
	0x03DBF804 BL 0x1C5C788
	0x03DBF808 B 0x3DBF81C
	0x03DBF80C LDR W9, [X10]
	0x03DBF810 ADD W9, W9, 0x1
	0x03DBF814 ADD X8, X8, W9, 0x4, SXTW
	0x03DBF818 ADD X0, X8, 0x138
	0x03DBF81C LDP X8, X1, [X0]
	0x03DBF820 MOV X0, X20
	0x03DBF824 BLR X8
	0x03DBF828 CBZ X0, 0x3DBF844
	0x03DBF82C LDR X0, [X0 + 0x28]
	0x03DBF830 CBZ X0, 0x3DBF850
	0x03DBF834 MOV W1, W19
	0x03DBF838 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X22, 0x62A000
	010 Move X21, 0x335000
	011 Move W8, [X22+259]
	012 Move X21, [X21+1432]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {51}
	019 Move X0, 0x3AB000
	020 Move X0, [X0+40]
	021 Call 0x1C17CF4
	022 Move X0, 0x3AB000
	023 Move X0, [X0+48]
	024 Call 0x1C17CF4
	025 Move X0, 0x3AB000
	026 Move X0, [X0+56]
	027 Call 0x1C17CF4
	028 Move X0, 0x3AB000
	029 Move X0, [X0+64]
	030 Call 0x1C17CF4
	031 Move X0, 0x3AB000
	032 Move X0, [X0+72]
	033 Call 0x1C17CF4
	034 Move X0, 0x3AB000
	035 Move X0, [X0+80]
	036 Call 0x1C17CF4
	037 Move X0, 0x3AB000
	038 Move X0, [X0+88]
	039 Call 0x1C17CF4
	040 Move X0, 0x3AB000
	041 Move X0, [X0+96]
	042 Call 0x1C17CF4
	043 Move X0, 0x3AB000
	044 Move X0, [X0+104]
	045 Call 0x1C17CF4
	046 Move X0, 0x335000
	047 Move X0, [X0+1432]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X22+259], W8
	051 Move X0, [X21]
	052 Move [X31+32], X31
	053 Move [X31+40], X31
	054 Move [X31+48], X31
	055 Move X21, [X19+352]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X21
	061 Move X1, X31
	062 Move X2, X31
	063 Call Object.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {158}
	068 Move X23, 0x3AB000
	069 Move X23, [X23+104]
	070 Move X21, 0x3AB000
	071 Move X0, [X23]
	072 Move W8, [X0+224]
	073 Move X21, [X21+88]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, [X21]
	078 Call 0x2492CF8
	079 Move X8, [X19+352]
	080 Move X19, X0
	081 Compare X8, 0
	082 JumpIfEqual {168}
	083 Move X9, 0x3AB000
	084 Move X9, [X9+64]
	085 Move X2, [X9]
	086 Move X0, X8
	087 Move X1, X19
	088 Call 0x21E6DE8, X0, X1
	089 Compare X19, 0
	090 JumpIfEqual {171}
	091 Move X8, 0x3AB000
	092 Move X8, [X8+80]
	093 Move X1, [X8]
	094 Add X8, X31, 8
	095 Move X0, X19
	096 Call List`1<Object>.GetEnumerator, X0
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 Move X8, [X31+24]
	099 Move X22, 0x3AB000
	100 Move X22, [X22+48]
	101 Move [X31+2], V0
	102 Move [X31+48], X8
	103 Move X24, 0x3AB000
	104 Move X24, [X24+72]
	105 Move X1, [X22]
	106 Add X0, X31, 32
	107 Call Enumerator<Object>.MoveNext, X0
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {137}
	112 Move X21, [X31+48]
	113 Compare X21, 0
	114 JumpIfEqual {167}
	115 Move X8, [X21]
	116 Move X1, [X24]
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Compare X9, 0
	119 JumpIfEqual {126}
	120 Move X10, [X8+176]
	121 Add X10, X10, 8
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Subtract X9, X9, 1
	125 Add X10, X10, 16
	126 Move X0, X21
	127 Move W2, W31
	128 Call 0x1C5D788
	129 NotImplemented "Instruction LDRSW not yet implemented."
	130 Add X8, X8, X9
	131 Add X0, X8, 312
	132 Move X8, [X0]
	133 Move X2, [X0+8]
	134 Move X0, X21
	135 Move X1, X20
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move X20, X31
	138 Move X8, 0x3AB000
	139 Move X8, [X8+40]
	140 Move X1, [X8]
	141 Add X0, X31, 32
	142 Call Enumerator<Object>.Dispose, X0
	143 Compare X20, 0
	144 JumpIfNotEqual {172}
	145 Move X21, X31
	146 Move X0, [X23]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X8, 0x3AB000
	152 Move X8, [X8+96]
	153 Move X0, X19
	154 Move X1, [X8]
	155 Call 0x2492D90, X0
	156 Compare X21, 0
	157 JumpIfNotEqual {169}
	158 Move X20, [X31+112]
	159 Move X19, [X31+120]
	160 Move X22, [X31+96]
	161 Move X21, [X31+104]
	162 Move X24, [X31+80]
	163 Move X23, [X31+88]
	164 Move X30, [X31+64]
	165 Add X31, X31, 128
	166 Return 
	167 Call 0x1C17F20
	168 Call 0x1C17F20
	169 Move X0, X21
	170 Call 0x1C17F18
	171 Call 0x1C17F20
	172 Move X0, X20
	173 Call 0x1C17F18
	174 Move X21, X1
	175 Move X22, X0
	176 Move X21, X1
	177 Move X22, X0
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, X22
	180 Call 0x3EB2AD0
	181 Move X20, [X0]
	182 Call 0x3EB2AE0
	183 Move X20, X31
	184 Move X8, 0x3AB000
	185 Move X8, [X8+40]
	186 Move X1, [X8]
	187 Add X0, X31, 32
	188 Call Enumerator<Object>.Dispose, X0
	189 Compare X20, 0
	190 JumpIfNotEqual {197}
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X0, X22
	193 Call 0x3EB2AD0
	194 Move X21, [X0]
	195 Call 0x3EB2AE0
	196 Move X21, X31
	197 Move X0, X20
	198 Call 0x1C17F18
	199 Move X21, X1
	200 Move X22, X0
	201 Move X22, X0
	202 Move X0, [X23]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X8, 0x3AB000
	208 Move X8, [X8+96]
	209 Move X1, [X8]
	210 Move X0, X19
	211 Call 0x2492D90, X0
	212 Compare X21, 0
	213 JumpIfNotEqual {216}
	214 Move X0, X22
	215 Call 0x1D2D690
	216 Move X0, X21
	217 Call 0x1C17F18
	218 Call 0x1991590

Method: System.Void PointerLeavesPanel(System.Int32 pointerId, UnityEngine.Vector2 position)

Disassembly:
	0x03DC008C LDR X0, [X21]
	0x03DC0090 LDR W8, [X0 + 0xE0]
	0x03DC0094 CBNZ W8, 0x3DC00A0
	0x03DC0098 BL 0x1C16DFC
	0x03DC009C LDR X0, [X21]
	0x03DC00A0 LDR X8, [X0 + 0xB8]
	0x03DC00A4 LDR W8, [X8 + 0x8]
	0x03DC00A8 CMP W8, W19
	0x03DC00AC B.NE 0x3DC0200
	0x03DC00B0 LDR X8, [X20 + 0x10]
	0x03DC00B4 CBZ X8, 0x3DC0264
	0x03DC00B8 LDR W9, [X8 + 0x18]
	0x03DC00BC CMP W9, W19
	0x03DC00C0 B.LS 0x3DC0268
	0x03DC00C4 LDR X9, [X20 + 0x18]
	0x03DC00C8 CBZ X9, 0x3DC0264
	0x03DC00CC LDR W10, [X9 + 0x18]
	0x03DC00D0 CMP W10, W19
	0x03DC00D4 B.LS 0x3DC0268
	0x03DC00D8 ADRP X10, 0x3A9000
	0x03DC00DC LDR X10, [X10 + 0xA0]
	0x03DC00E0 ADD X8, X8, X24, 0x3, LSL
	0x03DC00E4 ADD X9, X9, X24, 0x3, LSL
	0x03DC00E8 LDR X0, [X8 + 0x20]
	0x03DC00EC LDR X1, [X9 + 0x20]
	0x03DC00F0 LDR X3, [X10]
	0x03DC00F4 MOV W2, W19
	0x03DC00F8 BL 0x24A2D74
	0x03DC00FC LDR X8, [X20 + 0x10]
	0x03DC0100 MOV X22, X0
	0x03DC0104 CBZ X8, 0x3DC02A4
	0x03DC0108 LDR W9, [X8 + 0x18]
	0x03DC010C CMP W9, W19
	0x03DC0110 B.LS 0x3DC02A8
	0x03DC0114 ADD X8, X8, X24, 0x3, LSL
	0x03DC0118 LDR X21, [X8 + 0x20]
	0x03DC011C CBZ X21, 0x3DC02AC
	0x03DC0120 ADRP X10, 0x3A2000
	0x03DC0124 LDR X8, [X21]
	0x03DC0128 LDR X10, [X10 + 0xCD8]
	0x03DC012C LDRH W9, [X8 + 0x12E]
	0x03DC0130 LDR X1, [X10]
	0x03DC0134 CBZ X9, 0x3DC0158
	0x03DC0138 LDR X10, [X8 + 0xB0]
	0x03DC013C ADD X10, X10, 0x8
	0x03DC0140 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x629000
	009 Move X21, 0x35C000
	010 Move W8, [X22+260]
	011 Move X21, [X21+2392]
	012 Move V8, V1
	013 Move V9, V0
	014 Move W19, W1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x35C000
	021 Move X0, [X0+2392]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+260], W8
	025 Move X0, X20
	026 Move W1, W19
	027 Move X2, X31
	028 Call BaseVisualElementPanel.ClearCachedElementUnderPointer, X0, X1, X2
	029 Move X0, X20
	030 Call BaseVisualElementPanel.CommitElementUnderPointers, X0
	031 Move X8, [X20]
	032 Move X0, X20
	033 Move X9, [X8+1016]
	034 Move X1, [X8+1024]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X8, [X21]
	037 Move W20, W0
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move W0, W19
	044 Move W2, W20
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X30, [X31+16]
	050 Move V0, V9
	051 Move V1, V8
	052 Move X1, X31
	053 Move X3, X31
	054 Move D9, [X31+64]
	055 Move D8, [X31+72]
	056 Call PointerDeviceState.SavePointerPosition, X0, X1, X2, X3
	057 Return 

Method: System.Void PointerEntersPanel(System.Int32 pointerId, UnityEngine.Vector2 position)

Disassembly:
	0x03DC0144 CMP X11, X1
	0x03DC0148 B.EQ 0x3DC0168
	0x03DC014C SUBS X9, X9, 0x1
	0x03DC0150 ADD X10, X10, 0x10
	0x03DC0154 B.NE 0x3DC0140
	0x03DC0158 MOV X0, X21
	0x03DC015C MOV W2, W31
	0x03DC0160 BL 0x1C5C788
	0x03DC0164 B 0x3DC0174
	0x03DC0168 LDRSW X9, [X10]
	0x03DC016C ADD X8, X8, X9, 0x4, LSL
	0x03DC0170 ADD X0, X8, 0x138
	0x03DC0174 LDP X8, X2, [X0]
	0x03DC0178 MOV X0, X21
	0x03DC017C MOV X1, X22
	0x03DC0180 BLR X8
	0x03DC0184 MOV X21, X31
	0x03DC0188 MOVZ W23, 0xB
	0x03DC018C CBZ X22, 0x3DC01F0
	0x03DC0190 ADRP X10, 0x333000
	0x03DC0194 LDR X8, [X22]
	0x03DC0198 LDR X10, [X10 + 0xE00]
	0x03DC019C LDRH W9, [X8 + 0x12E]
	0x03DC01A0 LDR X1, [X10]
	0x03DC01A4 CBZ X9, 0x3DC01C8
	0x03DC01A8 LDR X10, [X8 + 0xB0]
	0x03DC01AC ADD X10, X10, 0x8
	0x03DC01B0 LDUR X11, [X10 - 0x8]
	0x03DC01B4 CMP X11, X1
	0x03DC01B8 B.EQ 0x3DC01D8
	0x03DC01BC SUBS X9, X9, 0x1
	0x03DC01C0 ADD X10, X10, 0x10
	0x03DC01C4 B.NE 0x3DC01B0
	0x03DC01C8 MOV X0, X22
	0x03DC01CC MOV W2, W31
	0x03DC01D0 BL 0x1C5C788
	0x03DC01D4 B 0x3DC01E4
	0x03DC01D8 LDRSW X9, [X10]
	0x03DC01DC ADD X8, X8, X9, 0x4, LSL
	0x03DC01E0 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x629000
	009 Move X21, 0x35C000
	010 Move W8, [X22+261]
	011 Move X21, [X21+2392]
	012 Move V8, V1
	013 Move V9, V0
	014 Move W20, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x35C000
	021 Move X0, [X0+2392]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+261], W8
	025 Move X8, [X19]
	026 Move X0, X19
	027 Move X9, [X8+1016]
	028 Move X1, [X8+1024]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X8, [X21]
	031 Move W21, W0
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Move W0, W20
	038 Move X1, X19
	039 Move W2, W21
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X22, [X31+32]
	043 Move X21, [X31+40]
	044 Move X30, [X31+16]
	045 Move V0, V9
	046 Move V1, V8
	047 Move X3, X31
	048 Move D9, [X31+64]
	049 Move D8, [X31+72]
	050 Call PointerDeviceState.SavePointerPosition, X0, X1, X2, X3
	051 Return 

Method: System.Void .cctor()

Disassembly:
	0x03DC01E4 LDP X8, X1, [X0]
	0x03DC01E8 MOV X0, X22
	0x03DC01EC BLR X8
	0x03DC01F0 CBNZ X21, 0x3DC026C
	0x03DC01F4 CMP W23, 0xB
	0x03DC01F8 B.EQ 0x3DC0200
	0x03DC01FC CBNZ W23, 0x3DC0250
	0x03DC0200 LDR X8, [X20 + 0x10]
	0x03DC0204 CBZ X8, 0x3DC0264
	0x03DC0208 LDR W9, [X8 + 0x18]
	0x03DC020C CMP W9, W19
	0x03DC0210 B.LS 0x3DC0268
	0x03DC0214 LDR X21, [X20 + 0x18]
	0x03DC0218 CBZ X21, 0x3DC0264
	0x03DC021C ADD X8, X8, X24, 0x3, LSL
	0x03DC0220 LDR X20, [X8 + 0x20]
	0x03DC0224 CBZ X20, 0x3DC023C
	0x03DC0228 LDR X8, [X21]
	0x03DC022C MOV X0, X20
	0x03DC0230 LDR X1, [X8 + 0x40]
	0x03DC0234 BL 0x1C16E00
	0x03DC0238 CBZ X0, 0x3DC028C
	0x03DC023C LDR W8, [X21 + 0x18]
	0x03DC0240 CMP W8, W19
	0x03DC0244 B.LS 0x3DC0268
	0x03DC0248 ADD X8, X21, X24, 0x3, LSL
	0x03DC024C STR X20, [X8 + 0x20]
	0x03DC0250 LDP X20, X19, [X31 + 0x30]
	0x03DC0254 LDP X22, X21, [X31 + 0x20]
	0x03DC0258 LDP X24, X23, [X31 + 0x10]
	0x03DC025C LDR X30, [X31], #0x40
	0x03DC0260 RET
	0x03DC0264 BL 0x1C16F20
	0x03DC0268 BL 0x1C16F28
	0x03DC026C MOV X0, X21
	0x03DC0270 BL 0x1C16F18
	0x03DC0274 BL 0x1C16F20
	0x03DC0278 BL 0x1C16F28
	0x03DC027C BL 0x1C16F20
	0x03DC0280 BL 0x1C16F20
	0x03DC0284 BL 0x1C16F28
	0x03DC0288 BL 0x1C16F20
	0x03DC028C BL 0x1C16F44
	0x03DC0290 MOV X1, X31
	0x03DC0294 BL 0x1C16DEC
	0x03DC0298 BL 0x1C16F20
	0x03DC029C BL 0x1C16F28
	0x03DC02A0 BL 0x1C16F20
	0x03DC02A4 BL 0x1C16F20
	0x03DC02A8 BL 0x1C16F28
	0x03DC02AC BL 0x1C16F20
	0x03DC02B0 B 0x3DC02C0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x629000
	007 Move X21, 0x35C000
	008 Move X19, 0x3AA000
	009 Move W8, [X20+262]
	010 Move X21, [X21+2328]
	011 Move X19, [X19+112]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x35C000
	017 Move X0, [X0+2328]
	018 Call 0x1C17CF4
	019 Move X0, 0x3AA000
	020 Move X0, [X0+120]
	021 Call 0x1C17CF4
	022 Move X0, 0x3AA000
	023 Move X0, [X0+128]
	024 Call 0x1C17CF4
	025 Move X0, 0x3AA000
	026 Move X0, [X0+112]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+262], W8
	030 Move X8, [X21]
	031 Move X22, 0x3AA000
	032 Move X20, 0x3AA000
	033 Move X8, [X8+184]
	034 Move [X8], W31
	035 Move X0, [X19]
	036 Move W8, [X0+224]
	037 Move X22, [X22+120]
	038 Move X20, [X20+128]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X19]
	043 Move X8, [X0+184]
	044 Move X0, [X22]
	045 Move X19, [X8]
	046 Call 0x1C17F10
	047 Move X2, [X20]
	048 Move X1, X19
	049 Move X3, X31
	050 Move X20, X0
	051 Call Func`2<Vector2, Vector2>..ctor, X0, X1, X2
	052 Move X8, [X21]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X8, [X8+184]
	056 Move [X8+8], X20
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+48]
	060 Return 

