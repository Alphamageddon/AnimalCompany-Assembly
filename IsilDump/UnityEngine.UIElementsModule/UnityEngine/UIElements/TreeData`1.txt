Type: UnityEngine.UIElements.TreeData`1

Method: System.Collections.Generic.IEnumerable`1<System.Int32> get_rootItemIds()

Disassembly:
	0x026FD29C LDR X8, [X0 + 0xC0]
	0x026FD2A0 LDR X1, [X8 + 0xC8]

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void .ctor(System.Collections.Generic.IList`1<UnityEngine.UIElements.TreeViewItemData`1<T>> rootItems)

Disassembly:
	0x026FD2A4 LDRB W8, [X1 + 0x135]
	0x026FD2A8 TBNZ X8, 0x0, 0x26FD2B8
	0x026FD2AC MOV X0, X1
	0x026FD2B0 BL 0x1C5C684
	0x026FD2B4 MOV X1, X0
	0x026FD2B8 LDR X8, [X19]
	0x026FD2BC LDRH W9, [X8 + 0x12E]
	0x026FD2C0 CBZ X9, 0x26FD2E4
	0x026FD2C4 LDR X10, [X8 + 0xB0]
	0x026FD2C8 ADD X10, X10, 0x8
	0x026FD2CC LDUR X11, [X10 - 0x8]
	0x026FD2D0 CMP X11, X1
	0x026FD2D4 B.EQ 0x26FD2F4
	0x026FD2D8 SUBS X9, X9, 0x1
	0x026FD2DC ADD X10, X10, 0x10
	0x026FD2E0 B.NE 0x26FD2CC
	0x026FD2E4 MOV X0, X19
	0x026FD2E8 MOV W2, W31
	0x026FD2EC BL 0x1C5C788
	0x026FD2F0 B 0x26FD300
	0x026FD2F4 LDRSW X9, [X10]
	0x026FD2F8 ADD X8, X8, X9, 0x4, LSL
	0x026FD2FC ADD X0, X8, 0x138
	0x026FD300 LDP X9, X1, [X0]
	0x026FD304 ADD X8, X31, 0x20
	0x026FD308 MOV X0, X19
	0x026FD30C BLR X9
	0x026FD310 LDR X9, [X31 + 0x10]
	0x026FD314 LDR W24, [X31 + 0x20]
	0x026FD318 LDR X23, [X31 + 0x30]
	0x026FD31C LDR X8, [X9]
	0x026FD320 LDR W9, [X9 + 0x8]
	0x026FD324 STR X8, [X31 + 0x58]
	0x026FD328 STR W9, [X31 + 0x60]
	0x026FD32C LDR X0, [X20 + 0x20]
	0x026FD330 LDR X25, [X22 + 0x8]
	0x026FD334 LDRB W8, [X0 + 0x135]
	0x026FD338 TBNZ X8, 0x0, 0x26FD340
	0x026FD33C BL 0x1C5C684
	0x026FD340 LDR X8, [X31 + 0x58]
	0x026FD344 LDR W9, [X31 + 0x60]
	0x026FD348 STR X8, [X31 + 0x48]
	0x026FD34C STR W9, [X31 + 0x50]
	0x026FD350 CBZ X25, 0x26FD960
	0x026FD354 LDR X8, [X31 + 0x48]
	0x026FD358 LDR W9, [X31 + 0x50]
	0x026FD35C STR X8, [X31 + 0x38]
	0x026FD360 STR W9, [X31 + 0x40]
	0x026FD364 LDR X0, [X20 + 0x20]
	0x026FD368 LDRB W8, [X0 + 0x135]
	0x026FD36C TBNZ X8, 0x0, 0x26FD374
	0x026FD370 BL 0x1C5C684
	0x026FD374 LDR X8, [X0 + 0xC0]
	0x026FD378 LDR W9, [X31 + 0x40]
	0x026FD37C LDR X10, [X31 + 0x38]
	0x026FD380 LDR X3, [X8 + 0xD8]
	0x026FD384 LDR X8, [X31 + 0x10]
	0x026FD388 STR W24, [X31 + 0x20]
	0x026FD38C STR W9, [X8 + 0x8]
	0x026FD390 STR X10, [X8]
	0x026FD394 STR X23, [X31 + 0x30]
	0x026FD398 ADD X2, X31, 0x20
	0x026FD39C MOV X0, X25
	0x026FD3A0 MOV W1, W24
	0x026FD3A4 BL 0x29F7C50
	0x026FD3A8 LDR W8, [X31 + 0xC]
	0x026FD3AC TBZ X8, 0x0, 0x26FD430
	0x026FD3B0 LDR X0, [X20 + 0x20]
	0x026FD3B4 LDR X25, [X22]
	0x026FD3B8 LDRB W8, [X0 + 0x135]
	0x026FD3BC TBNZ X8, 0x0, 0x26FD3C4
	0x026FD3C0 BL 0x1C5C684
	0x026FD3C4 CBZ X25, 0x26FD970
	0x026FD3C8 LDR X8, [X25]
	0x026FD3CC ADRP X10, 0x1A1E000
	0x026FD3D0 LDRH W9, [X8 + 0x12E]
	0x026FD3D4 LDR X10, [X10 + 0x7A0]
	0x026FD3D8 LDR X1, [X10]
	0x026FD3DC CBZ X9, 0x26FD400
	0x026FD3E0 LDR X10, [X8 + 0xB0]
	0x026FD3E4 ADD X10, X10, 0x8
	0x026FD3E8 LDUR X11, [X10 - 0x8]
	0x026FD3EC CMP X11, X1
	0x026FD3F0 B.EQ 0x26FD410
	0x026FD3F4 SUBS X9, X9, 0x1
	0x026FD3F8 ADD X10, X10, 0x10
	0x026FD3FC B.NE 0x26FD3E8
	0x026FD400 MOVZ W2, 0x2
	0x026FD404 MOV X0, X25
	0x026FD408 BL 0x1C5C788
	0x026FD40C B 0x26FD420
	0x026FD410 LDR W9, [X10]
	0x026FD414 ADD W9, W9, 0x2
	0x026FD418 ADD X8, X8, W9, 0x4, SXTW
	0x026FD41C ADD X0, X8, 0x138
	0x026FD420 LDP X8, X2, [X0]
	0x026FD424 MOV X0, X25

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x1CDE000
	011 Move X24, 0x19F8000
	012 Move X22, 0x19FB000
	013 Move W8, [X23+1437]
	014 Move X24, [X24+3632]
	015 Move X22, [X22+2928]
	016 Move X21, X2
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {43}
	023 Move X0, 0x1A01000
	024 Move X0, [X0+2192]
	025 Call 0x1C17CF4
	026 Move X0, 0x1A21000
	027 Move X0, [X0+2200]
	028 Call 0x1C17CF4
	029 Move X0, 0x1A21000
	030 Move X0, [X0+2208]
	031 Call 0x1C17CF4
	032 Move X0, 0x1A01000
	033 Move X0, [X0+2184]
	034 Call 0x1C17CF4
	035 Move X0, 0x19FB000
	036 Move X0, [X0+2928]
	037 Call 0x1C17CF4
	038 Move X0, 0x19F8000
	039 Move X0, [X0+3632]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X23+1437], W8
	043 Move X0, [X24]
	044 Call 0x1C17F10
	045 Move X1, [X22]
	046 Move X22, X0
	047 Call List`1<Int32>..ctor, X0
	048 Move [X20], X22
	049 Move X0, [X21+32]
	050 Move W8, [X0+309]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Move X8, [X0+192]
	057 Move X0, [X8+8]
	058 Move W8, [X0+309]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {64}
	063 Call 0x1C5D684
	064 Move X26, 0x1A01000
	065 Move X25, 0x1A01000
	066 Move X24, 0x1A21000
	067 Move X23, 0x1A21000
	068 Move X26, [X26+2184]
	069 Move X25, [X25+2192]
	070 Move X24, [X24+2208]
	071 Move X23, [X23+2200]
	072 Call 0x1C17F10
	073 Move X8, [X21+32]
	074 Move X22, X0
	075 Move W9, [X8+309]
	076 Move TEMP, X9
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {83}
	080 Move X0, X8
	081 Call 0x1C5D684
	082 Move X8, X0
	083 Move X8, [X8+192]
	084 Move X0, X22
	085 Move X1, [X8+16]
	086 Call Dictionary`2<Int32, TreeViewItemData`1<Object>>..ctor, X0
	087 Move [X20+8], X22
	088 Move X0, [X26]
	089 Call 0x1C17F10
	090 Move X1, [X25]
	091 Move X22, X0
	092 Call Dictionary`2<Int32, Int32>..ctor, X0
	093 Move [X20+16], X22
	094 Move X0, [X24]
	095 Call 0x1C17F10
	096 Move X1, [X23]
	097 Move X22, X0
	098 Call Dictionary`2<Int32, Object>..ctor, X0
	099 Move [X20+24], X22
	100 Move X0, [X21+32]
	101 Move W8, [X0+309]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {107}
	106 Call 0x1C5D684
	107 Move X8, [X0+192]
	108 Move X0, X20
	109 Move X1, X19
	110 Move X20, [X31+64]
	111 Move X19, [X31+72]
	112 Move X2, [X8+32]
	113 Move X22, [X31+48]
	114 Move X21, [X31+56]
	115 Move X24, [X31+32]
	116 Move X23, [X31+40]
	117 Move X26, [X31+16]
	118 Move X25, [X31+24]
	119 Move X30, [X31+80]
	120 Call 0x26FDF74, X0, X1
	121 Return 

Method: UnityEngine.UIElements.TreeViewItemData`1<T> GetDataForId(System.Int32 id)

Disassembly:
	0x026FD428 MOV W1, W24
	0x026FD42C BLR X8
	0x026FD430 LDR X0, [X20 + 0x20]
	0x026FD434 LDRB W8, [X0 + 0x135]
	0x026FD438 TBNZ X8, 0x0, 0x26FD440
	0x026FD43C BL 0x1C5C684
	0x026FD440 CBZ X23, 0x26FD230
	0x026FD444 LDR X0, [X20 + 0x20]
	0x026FD448 LDR X25, [X22 + 0x18]
	0x026FD44C LDRB W8, [X0 + 0x135]
	0x026FD450 TBNZ X8, 0x0, 0x26FD458
	0x026FD454 BL 0x1C5C684
	0x026FD458 CBZ X25, 0x26FD964
	0x026FD45C ADRP X8, 0x1A20000
	0x026FD460 LDR X8, [X8 + 0x8B8]
	0x026FD464 LDR X3, [X8]
	0x026FD468 ADD X2, X31, 0x18
	0x026FD46C MOV X0, X25
	0x026FD470 MOV W1, W24
	0x026FD474 BL 0x2A150AC
	0x026FD478 TBNZ X0, 0x0, 0x26FD4DC
	0x026FD47C LDR X0, [X20 + 0x20]
	0x026FD480 LDR X25, [X22 + 0x18]
	0x026FD484 LDRB W8, [X0 + 0x135]
	0x026FD488 TBNZ X8, 0x0, 0x26FD490
	0x026FD48C BL 0x1C5C684
	0x026FD490 ADRP X8, 0x1A20000
	0x026FD494 LDR X8, [X8 + 0x8E0]
	0x026FD498 LDR X0, [X8]
	0x026FD49C LDR W8, [X0 + 0xE0]
	0x026FD4A0 CBNZ W8, 0x26FD4A8
	0x026FD4A4 BL 0x1C16DFC
	0x026FD4A8 ADRP X8, 0x1A20000
	0x026FD4AC LDR X8, [X8 + 0x8D8]
	0x026FD4B0 LDR X0, [X8]
	0x026FD4B4 BL 0x28F9448

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move [X31+24], X31
	007 Move [X31+32], X31
	008 Move [X31+40], X31
	009 Move X21, [X0+8]
	010 Compare X21, 0
	011 JumpIfEqual {48}
	012 Move X0, [X2+32]
	013 Move X19, X8
	014 Move W20, W1
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Move X8, [X0+192]
	022 Add X2, X31, 24
	023 Move X0, X21
	024 Move W1, W20
	025 Move X3, [X8+48]
	026 Call Dictionary`2<Int32, TreeViewItemData`1<Object>>.TryGetValue, X0, X1, X2
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {35}
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 Move X8, [X31+40]
	033 Move [X31], V0
	034 Move [X31+16], X8
	035 Move [X31], X31
	036 Move [X31+8], X31
	037 Move [X31+16], X31
	038 Move X8, [X31+16]
	039 Move V0, [X31]
	040 Move X30, [X31+48]
	041 Move X21, [X31+56]
	042 Move [X19+16], X8
	043 Move [X19], V0
	044 Move X20, [X31+64]
	045 Move X19, [X31+72]
	046 Add X31, X31, 80
	047 Return X0
	048 Call 0x1C17F20

Method: System.Int32 GetParentId(System.Int32 id)

Disassembly:
	0x026FD4B8 MOV X2, X0
	0x026FD4BC STR X0, [X31 + 0x18]
	0x026FD4C0 CBZ X25, 0x26FD974
	0x026FD4C4 ADRP X8, 0x1A20000
	0x026FD4C8 LDR X8, [X8 + 0x8E8]
	0x026FD4CC LDR X3, [X8]
	0x026FD4D0 MOV X0, X25
	0x026FD4D4 MOV W1, W24
	0x026FD4D8 BL 0x2A1368C
	0x026FD4DC LDR X0, [X20 + 0x20]
	0x026FD4E0 ADD X8, X0, 0x135
	0x026FD4E4 LDRH W8, [X8]
	0x026FD4E8 TBNZ X8, 0x0, 0x26FD4FC
	0x026FD4EC BL 0x1C5C684
	0x026FD4F0 LDR X0, [X20 + 0x20]
	0x026FD4F4 ADD X8, X0, 0x135
	0x026FD4F8 LDRH W8, [X8]
	0x026FD4FC TBNZ X8, 0x0, 0x26FD504
	0x026FD500 BL 0x1C5C684
	0x026FD504 LDR X8, [X0 + 0xC0]
	0x026FD508 LDR X1, [X8 + 0xB8]
	0x026FD50C LDRB W8, [X1 + 0x135]
	0x026FD510 TBNZ X8, 0x0, 0x26FD520
	0x026FD514 MOV X0, X1
	0x026FD518 BL 0x1C5C684
	0x026FD51C MOV X1, X0
	0x026FD520 LDR X8, [X23]
	0x026FD524 LDRH W9, [X8 + 0x12E]
	0x026FD528 CBZ X9, 0x26FD54C
	0x026FD52C LDR X10, [X8 + 0xB0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1CDE000
	007 Move W8, [X21+1438]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1A01000
	015 Move X0, [X0+2160]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1438], W8
	019 Move [X31+12], W31
	020 Move X0, [X20+16]
	021 Compare X0, 0
	022 JumpIfEqual {38}
	023 Move X8, 0x1A01000
	024 Move X8, [X8+2160]
	025 Add X2, X31, 12
	026 Move W1, W19
	027 Move X3, [X8]
	028 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	029 Move W8, [X31+12]
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 And W31, W0, 1
	035 NotImplemented "Instruction CSINV not yet implemented."
	036 Add X31, X31, 48
	037 Return X0
	038 Call 0x1C17F20

Method: System.Void Move(System.Int32 id, System.Int32 newParentId, System.Int32 childIndex)

Disassembly:
	0x026FD530 ADD X10, X10, 0x8
	0x026FD534 LDUR X11, [X10 - 0x8]
	0x026FD538 CMP X11, X1
	0x026FD53C B.EQ 0x26FD55C
	0x026FD540 SUBS X9, X9, 0x1
	0x026FD544 ADD X10, X10, 0x10
	0x026FD548 B.NE 0x26FD534
	0x026FD54C MOV X0, X23
	0x026FD550 MOV W2, W31
	0x026FD554 BL 0x1C5C788
	0x026FD558 B 0x26FD568
	0x026FD55C LDRSW X9, [X10]
	0x026FD560 ADD X8, X8, X9, 0x4, LSL
	0x026FD564 ADD X0, X8, 0x138
	0x026FD568 LDP X8, X1, [X0]
	0x026FD56C MOV X0, X23
	0x026FD570 BLR X8
	0x026FD574 MOV X25, X0
	0x026FD578 CBZ X0, 0x26FD7EC
	0x026FD57C LDR X8, [X25]
	0x026FD580 LDR X1, [X28]
	0x026FD584 LDRH W9, [X8 + 0x12E]
	0x026FD588 CBZ X9, 0x26FD5AC
	0x026FD58C LDR X10, [X8 + 0xB0]
	0x026FD590 ADD X10, X10, 0x8
	0x026FD594 LDUR X11, [X10 - 0x8]
	0x026FD598 CMP X11, X1
	0x026FD59C B.EQ 0x26FD5BC
	0x026FD5A0 SUBS X9, X9, 0x1
	0x026FD5A4 ADD X10, X10, 0x10
	0x026FD5A8 B.NE 0x26FD594
	0x026FD5AC MOV X0, X25
	0x026FD5B0 MOV W2, W31
	0x026FD5B4 BL 0x1C5C788
	0x026FD5B8 B 0x26FD5C8
	0x026FD5BC LDRSW X9, [X10]
	0x026FD5C0 ADD X8, X8, X9, 0x4, LSL
	0x026FD5C4 ADD X0, X8, 0x138
	0x026FD5C8 LDP X8, X1, [X0]
	0x026FD5CC MOV X0, X25
	0x026FD5D0 BLR X8
	0x026FD5D4 TBZ X0, 0x0, 0x26FD714
	0x026FD5D8 LDR X0, [X20 + 0x20]
	0x026FD5DC LDRB W8, [X0 + 0x135]
	0x026FD5E0 TBNZ X8, 0x0, 0x26FD5E8
	0x026FD5E4 BL 0x1C5C684
	0x026FD5E8 LDR X8, [X0 + 0xC0]
	0x026FD5EC LDR X1, [X8 + 0xC8]
	0x026FD5F0 LDRB W8, [X1 + 0x135]
	0x026FD5F4 TBNZ X8, 0x0, 0x26FD604
	0x026FD5F8 MOV X0, X1
	0x026FD5FC BL 0x1C5C684
	0x026FD600 MOV X1, X0
	0x026FD604 LDR X8, [X25]
	0x026FD608 LDRH W9, [X8 + 0x12E]
	0x026FD60C CBZ X9, 0x26FD630
	0x026FD610 LDR X10, [X8 + 0xB0]
	0x026FD614 ADD X10, X10, 0x8
	0x026FD618 LDUR X11, [X10 - 0x8]
	0x026FD61C CMP X11, X1
	0x026FD620 B.EQ 0x26FD640
	0x026FD624 SUBS X9, X9, 0x1
	0x026FD628 ADD X10, X10, 0x10
	0x026FD62C B.NE 0x26FD618
	0x026FD630 MOV X0, X25
	0x026FD634 MOV W2, W31
	0x026FD638 BL 0x1C5C788
	0x026FD63C B 0x26FD64C
	0x026FD640 LDRSW X9, [X10]
	0x026FD644 ADD X8, X8, X9, 0x4, LSL
	0x026FD648 ADD X0, X8, 0x138
	0x026FD64C LDP X9, X1, [X0]
	0x026FD650 ADD X8, X31, 0x20
	0x026FD654 MOV X0, X25
	0x026FD658 BLR X9
	0x026FD65C LDR X0, [X20 + 0x20]
	0x026FD660 LDR W26, [X31 + 0x20]
	0x026FD664 LDR X27, [X22 + 0x10]
	0x026FD668 ADD X8, X0, 0x135
	0x026FD66C LDRH W8, [X8]
	0x026FD670 TBNZ X8, 0x0, 0x26FD684
	0x026FD674 BL 0x1C5C684
	0x026FD678 LDR X0, [X20 + 0x20]
	0x026FD67C ADD X8, X0, 0x135
	0x026FD680 LDRH W8, [X8]
	0x026FD684 TBNZ X8, 0x0, 0x26FD68C
	0x026FD688 BL 0x1C5C684
	0x026FD68C CBZ X27, 0x26FD7DC
	0x026FD690 LDR X3, [X29]
	0x026FD694 MOV X0, X27
	0x026FD698 MOV W1, W26
	0x026FD69C MOV W2, W24
	0x026FD6A0 BL 0x2A0A344
	0x026FD6A4 LDR X0, [X20 + 0x20]
	0x026FD6A8 LDR X27, [X31 + 0x18]
	0x026FD6AC LDRB W8, [X0 + 0x135]
	0x026FD6B0 TBNZ X8, 0x0, 0x26FD6B8
	0x026FD6B4 BL 0x1C5C684
	0x026FD6B8 CBZ X27, 0x26FD7E4
	0x026FD6BC LDR W10, [X27 + 0x1C]
	0x026FD6C0 LDR X8, [X27 + 0x10]
	0x026FD6C4 LDR X9, [X21]
	0x026FD6C8 ADD W10, W10, 0x1
	0x026FD6CC STR W10, [X27 + 0x1C]
	0x026FD6D0 CBZ X8, 0x26FD7D4
	0x026FD6D4 LDRSW X10, [X27 + 0x18]
	0x026FD6D8 LDR W11, [X8 + 0x18]
	0x026FD6DC CMP W10, W11
	0x026FD6E0 B.CS 0x26FD6F8
	0x026FD6E4 ADD W9, W10, 0x1
	0x026FD6E8 ADD X8, X8, X10, 0x2, LSL
	0x026FD6EC STR W9, [X27 + 0x18]
	0x026FD6F0 STR W26, [X8 + 0x20]
	0x026FD6F4 B 0x26FD57C
	0x026FD6F8 LDR X8, [X9 + 0x20]
	0x026FD6FC LDR X8, [X8 + 0xC0]
	0x026FD700 LDR X2, [X8 + 0x70]
	0x026FD704 MOV X0, X27
	0x026FD708 MOV W1, W26
	0x026FD70C BL 0x2FDC70C
	0x026FD710 B 0x26FD57C
	0x026FD714 MOV X26, X31
	0x026FD718 MOVZ W24, 0xB
	0x026FD71C CBZ X25, 0x26FD780
	0x026FD720 LDR X8, [X25]
	0x026FD724 ADRP X10, 0x19F6000
	0x026FD728 LDRH W9, [X8 + 0x12E]
	0x026FD72C LDR X10, [X10 + 0xE00]
	0x026FD730 LDR X1, [X10]
	0x026FD734 CBZ X9, 0x26FD758
	0x026FD738 LDR X10, [X8 + 0xB0]
	0x026FD73C ADD X10, X10, 0x8
	0x026FD740 LDUR X11, [X10 - 0x8]
	0x026FD744 CMP X11, X1
	0x026FD748 B.EQ 0x26FD768
	0x026FD74C SUBS X9, X9, 0x1
	0x026FD750 ADD X10, X10, 0x10
	0x026FD754 B.NE 0x26FD740
	0x026FD758 MOV X0, X25
	0x026FD75C MOV W2, W31
	0x026FD760 BL 0x1C5C788
	0x026FD764 B 0x26FD774
	0x026FD768 LDRSW X9, [X10]
	0x026FD76C ADD X8, X8, X9, 0x4, LSL
	0x026FD770 ADD X0, X8, 0x138
	0x026FD774 LDP X8, X1, [X0]
	0x026FD778 MOV X0, X25
	0x026FD77C BLR X8
	0x026FD780 CBNZ X26, 0x26FD968
	0x026FD784 CMP W24, 0xB
	0x026FD788 B.EQ 0x26FD790
	0x026FD78C CBNZ W24, 0x26FD838
	0x026FD790 LDR X0, [X20 + 0x20]
	0x026FD794 ADD X8, X0, 0x135
	0x026FD798 LDRH W8, [X8]
	0x026FD79C TBNZ X8, 0x0, 0x26FD7B0
	0x026FD7A0 BL 0x1C5C684
	0x026FD7A4 LDR X0, [X20 + 0x20]
	0x026FD7A8 ADD X8, X0, 0x135
	0x026FD7AC LDRH W8, [X8]
	0x026FD7B0 TBNZ X8, 0x0, 0x26FD7B8
	0x026FD7B4 BL 0x1C5C684
	0x026FD7B8 LDR X8, [X0 + 0xC0]
	0x026FD7BC LDR X3, [X8 + 0xB0]
	0x026FD7C0 MOV X0, X22
	0x026FD7C4 MOV X1, X23
	0x026FD7C8 MOV W2, W31
	0x026FD7CC BL 0x26FD0C0
	0x026FD7D0 B 0x26FD230
	0x026FD7D4 BL 0x1C16F20
	0x026FD7D8 B 0x26FD984
	0x026FD7DC BL 0x1C16F20
	0x026FD7E0 B 0x26FD984
	0x026FD7E4 BL 0x1C16F20
	0x026FD7E8 B 0x26FD984
	0x026FD7EC BL 0x1C16F20
	0x026FD7F0 B 0x26FD988
	0x026FD7F4 B 0x26FD810
	0x026FD7F8 B 0x26FD810
	0x026FD7FC B 0x26FD810
	0x026FD800 B 0x26FD810
	0x026FD804 B 0x26FD810
	0x026FD808 B 0x26FD810
	0x026FD80C B 0x26FD810
	0x026FD810 MOV X24, X0
	0x026FD814 CMP W1, 0x1
	0x026FD818 B.NE 0x26FD8DC

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0x1CDE000
	010 Move W8, [X24+1439]
	011 Move X22, X4
	012 Move W19, W3
	013 Move W20, W2
	014 Move W23, W1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x1A01000
	021 Move X0, [X0+2160]
	022 Call 0x1C17CF4
	023 Move X0, 0x1A1F000
	024 Move X0, [X0+1952]
	025 Call 0x1C17CF4
	026 Move X0, 0x1A1F000
	027 Move X0, [X0+1960]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+1439], W8
	031 Move [X31+56], X31
	032 Move [X31+64], X31
	033 Move [X31+72], X31
	034 Move [X31+124], W31
	035 Move X24, [X21+8]
	036 Compare X24, 0
	037 JumpIfEqual {222}
	038 Move X0, [X22+32]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Move X8, [X0+192]
	046 Add X2, X31, 56
	047 Move X0, X24
	048 Move W1, W23
	049 Move X3, [X8+48]
	050 Call Dictionary`2<Int32, TreeViewItemData`1<Object>>.TryGetValue, X0, X1, X2
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {213}
	055 Move X0, [X21+16]
	056 Compare X0, 0
	057 JumpIfEqual {222}
	058 Move X8, 0x1A01000
	059 Move X8, [X8+2160]
	060 Add X2, X31, 124
	061 Move W1, W23
	062 Move X3, [X8]
	063 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {129}
	068 Move W8, [X31+124]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X24, [X21+8]
	071 Compare X24, 0
	072 JumpIfEqual {222}
	073 Move X0, [X22+32]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move X8, [X0+192]
	081 Move X0, X24
	082 Move W1, W20
	083 Move X2, [X8+72]
	084 Add X8, X31, 80
	085 Call Dictionary`2<Int32, TreeViewItemData`1<Object>>.get_Item, X0, X1
	086 Move V0, [X31+5]
	087 Move X8, [X31+96]
	088 Move [X31+2], V0
	089 Move [X31+48], X8
	090 Move X0, [X22+32]
	091 Move W8, [X0+309]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {97}
	096 Call 0x1C5D684
	097 Move X8, [X0+192]
	098 Add X0, X31, 32
	099 Move W1, W23
	100 Move X2, [X8+80]
	101 Call 0x27015A4, X0, X1
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction CSET not yet implemented."
	104 Subtract W19, W19, W8
	105 Move X0, [X22+32]
	106 Add X8, X0, 309
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Move TEMP, X8
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {116}
	112 Call 0x1C5D684
	113 Move X0, [X22+32]
	114 Add X8, X0, 309
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Move W23, [X31+56]
	117 Move W24, [X31+124]
	118 Move TEMP, X8
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {123}
	122 Call 0x1C5D684
	123 Move X8, [X0+192]
	124 Move X0, X21
	125 Move W1, W23
	126 Move W2, W24
	127 Move X3, [X8+104]
	128 Call 0x26FDC2C, X0, X1, X2
	129 Move X24, [X21]
	130 Compare X24, 0
	131 JumpIfEqual {222}
	132 Move X10, 0x1A1F000
	133 Move X8, [X24]
	134 Move X10, [X10+1960]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Move X1, [X10]
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move W2, 2
	146 Move X0, X24
	147 Call 0x1C5D788
	148 Move W9, [X10]
	149 Add W9, W9, 2
	150 Add X8, X8, W9
	151 Add X0, X8, 312
	152 Move X8, [X0]
	153 Move X2, [X0+8]
	154 Move X0, X24
	155 Move W1, W23
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move X24, [X21]
	158 Add W31, W20, 1
	159 NotImplemented "Instruction CSET not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 NotImplemented "Instruction CSET not yet implemented."
	162 Compare X24, 0
	163 JumpIfEqual {222}
	164 Move X12, 0x1A1F000
	165 Move X8, [X24]
	166 Move X12, [X12+1952]
	167 And W10, W10, W11
	168 Subtract W19, W19, W10
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 Move X1, [X12]
	171 Compare X9, 0
	172 JumpIfEqual {179}
	173 Move X10, [X8+176]
	174 Add X10, X10, 8
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Subtract X9, X9, 1
	178 Add X10, X10, 16
	179 Move W2, 6
	180 Move X0, X24
	181 Call 0x1C5D788
	182 Move W9, [X10]
	183 Add W9, W9, 6
	184 Add X8, X8, W9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X2, [X0+8]
	188 Move X0, X24
	189 Move W1, W23
	190 NotImplemented "Instruction BLR not yet implemented."
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 Move X8, [X31+72]
	193 Move [X31], V0
	194 Move [X31+16], X8
	195 Move X0, [X22+32]
	196 Move W8, [X0+309]
	197 Move TEMP, X8
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfEqual {202}
	201 Call 0x1C5D684
	202 Move X8, [X0+192]
	203 Move V0, [X31]
	204 Move X9, [X31+16]
	205 Add X1, X31, 80
	206 Move X4, [X8+112]
	207 Move X0, X21
	208 Move W2, W20
	209 Move W3, W19
	210 Move [X31+5], V0
	211 Move [X31+96], X9
	212 Call 0x26FD894, X0, X1, X2, X3
	213 Move X20, [X31+160]
	214 Move X19, [X31+168]
	215 Move X22, [X31+144]
	216 Move X21, [X31+152]
	217 Move X24, [X31+128]
	218 Move X23, [X31+136]
	219 Move X30, [X31+112]
	220 Add X31, X31, 176
	221 Return 
	222 Call 0x1C17F20

Method: System.Boolean HasAncestor(System.Int32 childId, System.Int32 ancestorId)

Disassembly:
	0x026FD81C MOV X0, X24
	0x026FD820 BL 0x3EB1AD0
	0x026FD824 LDR X26, [X0]
	0x026FD828 BL 0x3EB1AE0
	0x026FD82C MOV W24, W31
	0x026FD830 CBNZ X25, 0x26FD720
	0x026FD834 B 0x26FD780
	0x026FD838 LDR X23, [X31]
	0x026FD83C MOV X20, X31
	0x026FD840 MOV X21, X19
	0x026FD844 CBZ X21, 0x26FD8A8
	0x026FD848 LDR X8, [X21]
	0x026FD84C ADRP X10, 0x19F6000
	0x026FD850 LDRH W9, [X8 + 0x12E]
	0x026FD854 LDR X10, [X10 + 0xE00]
	0x026FD858 LDR X1, [X10]
	0x026FD85C CBZ X9, 0x26FD880
	0x026FD860 LDR X10, [X8 + 0xB0]
	0x026FD864 ADD X10, X10, 0x8
	0x026FD868 LDUR X11, [X10 - 0x8]
	0x026FD86C CMP X11, X1
	0x026FD870 B.EQ 0x26FD890
	0x026FD874 SUBS X9, X9, 0x1
	0x026FD878 ADD X10, X10, 0x10
	0x026FD87C B.NE 0x26FD868
	0x026FD880 MOV X0, X21
	0x026FD884 MOV W2, W31
	0x026FD888 BL 0x1C5C788
	0x026FD88C B 0x26FD89C
	0x026FD890 LDRSW X9, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X0
	007 Add W31, W1, 1
	008 Move W0, W31
	009 Move W20, W2
	010 Add W31, W2, 1
	011 Move X19, X3
	012 Move W22, W1
	013 Move X0, [X19+32]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Move X0, X21
	021 Move W1, W22
	022 Call 0x26FD4B8, X0, X1
	023 Move W22, W0
	024 Add W31, W0, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Add W31, W22, 1
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: System.Void AddItemToParent(UnityEngine.UIElements.TreeViewItemData`1<T> item, System.Int32 parentId, System.Int32 childIndex)

Disassembly:
	0x026FD894 ADD X8, X8, X9, 0x4, LSL
	0x026FD898 ADD X0, X8, 0x138
	0x026FD89C LDP X8, X1, [X0]
	0x026FD8A0 MOV X0, X21
	0x026FD8A4 BLR X8
	0x026FD8A8 CBNZ X20, 0x26FD97C
	0x026FD8AC LDR X8, [X23 + 0x28]
	0x026FD8B0 LDR X9, [X31 + 0x68]
	0x026FD8B4 CMP X8, X9
	0x026FD8B8 B.NE 0x26FD984
	0x026FD8BC LDP X20, X19, [X31 + 0xC0]
	0x026FD8C0 LDP X22, X21, [X31 + 0xB0]
	0x026FD8C4 LDP X24, X23, [X31 + 0xA0]
	0x026FD8C8 LDP X26, X25, [X31 + 0x90]
	0x026FD8CC LDP X28, X27, [X31 + 0x80]
	0x026FD8D0 LDP X29, X30, [X31 + 0x70]
	0x026FD8D4 ADD X31, X31, 0xD0
	0x026FD8D8 RET
	0x026FD8DC MOV X20, X1
	0x026FD8E0 MOV X26, X31
	0x026FD8E4 CBZ X25, 0x26FD948
	0x026FD8E8 LDR X8, [X25]
	0x026FD8EC ADRP X10, 0x19F6000
	0x026FD8F0 LDRH W9, [X8 + 0x12E]
	0x026FD8F4 LDR X10, [X10 + 0xE00]
	0x026FD8F8 LDR X1, [X10]
	0x026FD8FC CBZ X9, 0x26FD920
	0x026FD900 LDR X10, [X8 + 0xB0]
	0x026FD904 ADD X10, X10, 0x8
	0x026FD908 LDUR X11, [X10 - 0x8]
	0x026FD90C CMP X11, X1
	0x026FD910 B.EQ 0x26FD930
	0x026FD914 SUBS X9, X9, 0x1
	0x026FD918 ADD X10, X10, 0x10
	0x026FD91C B.NE 0x26FD908
	0x026FD920 MOV X0, X25
	0x026FD924 MOV W2, W31
	0x026FD928 BL 0x1C5C788
	0x026FD92C B 0x26FD93C
	0x026FD930 LDRSW X9, [X10]
	0x026FD934 ADD X8, X8, X9, 0x4, LSL
	0x026FD938 ADD X0, X8, 0x138
	0x026FD93C LDP X8, X1, [X0]
	0x026FD940 MOV X0, X25
	0x026FD944 BLR X8
	0x026FD948 LDR X23, [X31]
	0x026FD94C MOV X1, X20
	0x026FD950 MOV X21, X19
	0x026FD954 CBZ X26, 0x26FD9F4
	0x026FD958 MOV X0, X26
	0x026FD95C BL 0x1C16F18
	0x026FD960 BL 0x1C16F20
	0x026FD964 BL 0x1C16F20
	0x026FD968 MOV X0, X26
	0x026FD96C BL 0x1C16F18
	0x026FD970 BL 0x1C16F20
	0x026FD974 BL 0x1C16F20
	0x026FD978 BL 0x1C16F20
	0x026FD97C MOV X0, X20
	0x026FD980 BL 0x1C16F18
	0x026FD984 BL 0x3EB1B20
	0x026FD988 MOV X20, X1
	0x026FD98C MOV X24, X0
	0x026FD990 CBNZ X25, 0x26FD8E8
	0x026FD994 B 0x26FD948
	0x026FD998 B 0x26FD9E8
	0x026FD99C B 0x26FD9E8
	0x026FD9A0 B 0x26FD9E8
	0x026FD9A4 B 0x26FD9E8
	0x026FD9A8 B 0x26FD9E8
	0x026FD9AC B 0x26FD9E8
	0x026FD9B0 B 0x26FD9E8
	0x026FD9B4 B 0x26FD9E8
	0x026FD9B8 B 0x26FD9E8
	0x026FD9BC B 0x26FD9E8
	0x026FD9C0 B 0x26FD9E8
	0x026FD9C4 B 0x26FD9E8
	0x026FD9C8 B 0x26FD9E8
	0x026FD9CC B 0x26FD9E8
	0x026FD9D0 B 0x26FD9E8
	0x026FD9D4 B 0x26FD9E8
	0x026FD9D8 B 0x26FD9E8
	0x026FD9DC B 0x26FD9E8
	0x026FD9E0 B 0x26FD9E8
	0x026FD9E4 B 0x26FD9E8
	0x026FD9E8 LDR X23, [X31]
	0x026FD9EC MOV X24, X0
	0x026FD9F0 MOV X21, X19
	0x026FD9F4 CMP W1, 0x1
	0x026FD9F8 B.NE 0x26FDA10
	0x026FD9FC MOV X0, X24
	0x026FDA00 BL 0x3EB1AD0
	0x026FDA04 LDR X20, [X0]
	0x026FDA08 BL 0x3EB1AE0
	0x026FDA0C B 0x26FD844
	0x026FDA10 MOV X20, X31
	0x026FDA14 B 0x26FDA1C
	0x026FDA18 MOV X24, X0
	0x026FDA1C CBZ X19, 0x26FDA80
	0x026FDA20 LDR X8, [X19]
	0x026FDA24 ADRP X10, 0x19F6000
	0x026FDA28 LDRH W9, [X8 + 0x12E]
	0x026FDA2C LDR X10, [X10 + 0xE00]
	0x026FDA30 LDR X1, [X10]
	0x026FDA34 CBZ X9, 0x26FDA58
	0x026FDA38 LDR X10, [X8 + 0xB0]
	0x026FDA3C ADD X10, X10, 0x8
	0x026FDA40 LDUR X11, [X10 - 0x8]
	0x026FDA44 CMP X11, X1
	0x026FDA48 B.EQ 0x26FDA68
	0x026FDA4C SUBS X9, X9, 0x1
	0x026FDA50 ADD X10, X10, 0x10
	0x026FDA54 B.NE 0x26FDA40
	0x026FDA58 MOV X0, X19
	0x026FDA5C MOV W2, W31
	0x026FDA60 BL 0x1C5C788
	0x026FDA64 B 0x26FDA74
	0x026FDA68 LDRSW X9, [X10]
	0x026FDA6C ADD X8, X8, X9, 0x4, LSL
	0x026FDA70 ADD X0, X8, 0x138
	0x026FDA74 LDP X8, X1, [X0]
	0x026FDA78 MOV X0, X19
	0x026FDA7C BLR X8
	0x026FDA80 CBNZ X20, 0x26FDA8C
	0x026FDA84 MOV X0, X24
	0x026FDA88 BL 0x1D2C690
	0x026FDA8C MOV X0, X20
	0x026FDA90 BL 0x1C16F18
	0x026FDA94 BL 0x1990590
	0x026FDA98 LDR X0, [X0]
	0x026FDA9C RET
	0x026FDAA0 SUB X31, X31, 0x60
	0x026FDAA4 STP X30, X27, [X31 + 0x10]
	0x026FDAA8 STP X26, X25, [X31 + 0x20]
	0x026FDAAC STP X24, X23, [X31 + 0x30]
	0x026FDAB0 STP X22, X21, [X31 + 0x40]
	0x026FDAB4 STP X20, X19, [X31 + 0x50]
	0x026FDAB8 ADRP X23, 0x1CDD000
	0x026FDABC ADRP X24, 0x19F7000
	0x026FDAC0 ADRP X22, 0x19FA000
	0x026FDAC4 LDRB W8, [X23 + 0x5A5]
	0x026FDAC8 LDR X24, [X24 + 0xE30]
	0x026FDACC LDR X22, [X22 + 0xB70]
	0x026FDAD0 MOV X21, X2
	0x026FDAD4 MOV X19, X1
	0x026FDAD8 MOV X20, X0
	0x026FDADC TBNZ X8, 0x0, 0x26FDB30
	0x026FDAE0 ADRP X0, 0x1A00000
	0x026FDAE4 LDR X0, [X0 + 0x890]
	0x026FDAE8 BL 0x1C16CF4
	0x026FDAEC ADRP X0, 0x1A20000
	0x026FDAF0 LDR X0, [X0 + 0x898]
	0x026FDAF4 BL 0x1C16CF4
	0x026FDAF8 ADRP X0, 0x1A20000
	0x026FDAFC LDR X0, [X0 + 0x8A0]
	0x026FDB00 BL 0x1C16CF4
	0x026FDB04 ADRP X0, 0x1A00000
	0x026FDB08 LDR X0, [X0 + 0x888]
	0x026FDB0C BL 0x1C16CF4
	0x026FDB10 ADRP X0, 0x19FA000
	0x026FDB14 LDR X0, [X0 + 0xB70]
	0x026FDB18 BL 0x1C16CF4
	0x026FDB1C ADRP X0, 0x19F7000
	0x026FDB20 LDR X0, [X0 + 0xE30]
	0x026FDB24 BL 0x1C16CF4
	0x026FDB28 MOVZ W8, 0x1
	0x026FDB2C STRB W8, [X23 + 0x5A5]
	0x026FDB30 LDR X0, [X24]
	0x026FDB34 BL 0x1C16F10
	0x026FDB38 LDR X1, [X22]
	0x026FDB3C MOV X22, X0
	0x026FDB40 BL 0x2FDBF14
	0x026FDB44 STR X22, [X20]
	0x026FDB48 LDR X0, [X21 + 0x20]
	0x026FDB4C LDRB W8, [X0 + 0x135]
	0x026FDB50 TBNZ X8, 0x0, 0x26FDB58
	0x026FDB54 BL 0x1C5C684
	0x026FDB58 LDR X8, [X0 + 0xC0]
	0x026FDB5C LDR X0, [X8 + 0x8]
	0x026FDB60 LDRB W8, [X0 + 0x135]
	0x026FDB64 TBNZ X8, 0x0, 0x26FDB6C
	0x026FDB68 BL 0x1C5C684
	0x026FDB6C BL 0x1C16F10
	0x026FDB70 LDR X8, [X21 + 0x20]
	0x026FDB74 MOV X22, X0
	0x026FDB78 ADD X9, X8, 0x135
	0x026FDB7C LDRH W9, [X9]
	0x026FDB80 TBNZ X9, 0x0, 0x26FDB9C
	0x026FDB84 MOV X0, X8
	0x026FDB88 BL 0x1C5C684
	0x026FDB8C LDR X8, [X21 + 0x20]
	0x026FDB90 ADD X9, X8, 0x135
	0x026FDB94 LDRH W9, [X9]
	0x026FDB98 B 0x26FDBA0
	0x026FDB9C MOV X0, X8
	0x026FDBA0 LDR X10, [X0 + 0xC0]
	0x026FDBA4 ADRP X26, 0x1A00000
	0x026FDBA8 ADRP X25, 0x1A00000
	0x026FDBAC ADRP X24, 0x1A20000
	0x026FDBB0 LDR X10, [X10 + 0x10]
	0x026FDBB4 ADRP X23, 0x1A20000
	0x026FDBB8 LDR X26, [X26 + 0x888]
	0x026FDBBC LDR X27, [X10]
	0x026FDBC0 LDR X25, [X25 + 0x890]
	0x026FDBC4 LDR X24, [X24 + 0x8A0]
	0x026FDBC8 LDR X23, [X23 + 0x898]
	0x026FDBCC TBNZ X9, 0x0, 0x26FDBDC
	0x026FDBD0 MOV X0, X8
	0x026FDBD4 BL 0x1C5C684
	0x026FDBD8 MOV X8, X0
	0x026FDBDC LDR X8, [X8 + 0xC0]
	0x026FDBE0 MOV X0, X22
	0x026FDBE4 LDR X1, [X8 + 0x10]
	0x026FDBE8 BLR X27
	0x026FDBEC STR X22, [X20 + 0x8]
	0x026FDBF0 LDR X0, [X26]
	0x026FDBF4 BL 0x1C16F10
	0x026FDBF8 LDR X1, [X25]
	0x026FDBFC MOV X22, X0
	0x026FDC00 BL 0x2A09A9C
	0x026FDC04 STR X22, [X20 + 0x10]
	0x026FDC08 LDR X0, [X24]
	0x026FDC0C BL 0x1C16F10
	0x026FDC10 LDR X1, [X23]
	0x026FDC14 MOV X22, X0
	0x026FDC18 BL 0x2A12DD4
	0x026FDC1C STR X22, [X20 + 0x18]
	0x026FDC20 LDR X8, [X21 + 0x20]
	0x026FDC24 ADD X9, X8, 0x135
	0x026FDC28 LDRH W9, [X9]

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+192], X30
	003 Move [X31+208], X24
	004 Move [X31+216], X23
	005 Move [X31+224], X22
	006 Move [X31+232], X21
	007 Move [X31+240], X20
	008 Move [X31+248], X19
	009 Move X24, 0x1CDE000
	010 Move W8, [X24+1440]
	011 Move X20, X4
	012 Move W22, W3
	013 Move W23, W2
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x1A21000
	021 Move X0, [X0+2216]
	022 Call 0x1C17CF4
	023 Move X0, 0x1A21000
	024 Move X0, [X0+2224]
	025 Call 0x1C17CF4
	026 Move X0, 0x1A1F000
	027 Move X0, [X0+1952]
	028 Call 0x1C17CF4
	029 Move X0, 0x1A1F000
	030 Move X0, [X0+1960]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X24+1440], W8
	034 Add W31, W23, 1
	035 Move X24, [X19+8]
	036 Compare X24, 0
	037 JumpIfEqual {265}
	038 Move X0, [X20+32]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Move X8, [X0+192]
	046 Move X0, X24
	047 Move W1, W23
	048 Move X2, [X8+72]
	049 Add X8, X31, 160
	050 Call Dictionary`2<Int32, TreeViewItemData`1<Object>>.get_Item, X0, X1
	051 Move V0, [X31+10]
	052 Move X8, [X31+176]
	053 Move [X31+8], V0
	054 Move [X31+144], X8
	055 Move X8, [X21+16]
	056 Move V0, [X21]
	057 Move [X31+112], X8
	058 Move [X31+6], V0
	059 Move X0, [X20+32]
	060 Move W8, [X0+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {66}
	065 Call 0x1C5D684
	066 Move X8, [X0+192]
	067 Move V0, [X31+6]
	068 Move X9, [X31+112]
	069 Add X0, X31, 128
	070 Move X3, [X8+128]
	071 Add X1, X31, 160
	072 Move W2, W22
	073 Move [X31+10], V0
	074 Move [X31+176], X9
	075 Call 0x2701138, X0, X1, X2
	076 Move X22, [X19+8]
	077 Move V0, [X31+8]
	078 Move X8, [X31+144]
	079 Move [X31+4], V0
	080 Move [X31+80], X8
	081 Compare X22, 0
	082 JumpIfEqual {265}
	083 Move V0, [X31+4]
	084 Move X8, [X31+80]
	085 Move [X31+2], V0
	086 Move [X31+48], X8
	087 Move X0, [X20+32]
	088 Move W8, [X0+309]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Move X8, [X0+192]
	095 Move V0, [X31+2]
	096 Move X9, [X31+48]
	097 Add X2, X31, 160
	098 Move X3, [X8+136]
	099 Move X0, X22
	100 Move W1, W23
	101 Move [X31+10], V0
	102 Move [X31+176], X9
	103 Call Dictionary`2<Int32, TreeViewItemData`1<Object>>.set_Item, X0, X1, X2
	104 Move X0, [X20+32]
	105 Move X22, [X19+16]
	106 Move W8, [X0+309]
	107 Move TEMP, X8
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {112}
	111 Call 0x1C5D684
	112 Compare X22, 0
	113 JumpIfEqual {265}
	114 Move X8, 0x1A21000
	115 Move X8, [X8+2224]
	116 Move W1, [X21]
	117 Move X0, X22
	118 Move W2, W23
	119 Move X3, [X8]
	120 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	121 Move X8, [X31+144]
	122 Move V0, [X31+8]
	123 Move [X31+16], X8
	124 Move [X31], V0
	125 Move X0, [X20+32]
	126 Move W8, [X0+309]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {132}
	131 Call 0x1C5D684
	132 Move X8, [X0+192]
	133 Move V0, [X31]
	134 Move X9, [X31+16]
	135 Add X1, X31, 160
	136 Move X2, [X8+144]
	137 Move X0, X19
	138 Move [X31+10], V0
	139 Move [X31+176], X9
	140 Call 0x26FDDDC, X0, X1
	141 Move X0, [X20+32]
	142 Move X23, [X19+16]
	143 Move W8, [X0+309]
	144 Move TEMP, X8
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfEqual {149}
	148 Call 0x1C5D684
	149 Compare X23, 0
	150 JumpIfEqual {265}
	151 Move X8, 0x1A21000
	152 Move W1, [X21]
	153 Move X8, [X8+2216]
	154 Move X0, X23
	155 Move X2, [X8]
	156 Call Dictionary`2<Int32, Int32>.Remove, X0, X1
	157 Move TEMP, X22
	158 And TEMP, TEMP, -2147483648
	159 Compare TEMP, -2147483648
	160 JumpIfEqual {180}
	161 Move X23, [X19]
	162 Compare X23, 0
	163 JumpIfEqual {265}
	164 Move X10, 0x1A1F000
	165 Move X8, [X23]
	166 Move X10, [X10+1952]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Move X1, [X10]
	169 Compare X9, 0
	170 JumpIfEqual {177}
	171 Move X10, [X8+176]
	172 Add X10, X10, 8
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Subtract X9, X9, 1
	176 Add X10, X10, 16
	177 Move X0, X23
	178 Move W2, W31
	179 Call 0x1C5D788
	180 Move W23, W31
	181 NotImplemented "Instruction LDRSW not yet implemented."
	182 Add X8, X8, X9
	183 Add X0, X8, 312
	184 Move X8, [X0]
	185 Move X1, [X0+8]
	186 Move X0, X23
	187 NotImplemented "Instruction BLR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 NotImplemented "Instruction CSET not yet implemented."
	190 Move X0, [X20+32]
	191 Move X19, [X19]
	192 Move W8, [X0+309]
	193 Move TEMP, X8
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfEqual {198}
	197 Call 0x1C5D684
	198 Compare X19, 0
	199 JumpIfEqual {265}
	200 Move W20, [X21]
	201 Move TEMP, X23
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {221}
	205 Move X10, 0x1A1F000
	206 Move X8, [X19]
	207 Move X10, [X10+1960]
	208 NotImplemented "Instruction LDRH not yet implemented."
	209 Move X1, [X10]
	210 Compare X9, 0
	211 JumpIfEqual {218}
	212 Move X10, [X8+176]
	213 Add X10, X10, 8
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract X9, X9, 1
	217 Add X10, X10, 16
	218 Move W2, 3
	219 Move X0, X19
	220 Call 0x1C5D788
	221 Move X10, 0x1A1F000
	222 Move X8, [X19]
	223 Move X10, [X10+1952]
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 Move X1, [X10]
	226 Compare X9, 0
	227 JumpIfEqual {234}
	228 Move X10, [X8+176]
	229 Add X10, X10, 8
	230 NotImplemented "Instruction LDUR not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Subtract X9, X9, 1
	233 Add X10, X10, 16
	234 Move W2, 2
	235 Move X0, X19
	236 Call 0x1C5D788
	237 Move W9, [X10]
	238 Add W9, W9, 3
	239 Add X8, X8, W9
	240 Add X0, X8, 312
	241 Move X8, [X0]
	242 Move X3, [X0+8]
	243 Move X0, X19
	244 Move W1, W22
	245 Move W2, W20
	246 NotImplemented "Instruction BLR not yet implemented."
	247 Move W9, [X10]
	248 Add W9, W9, 2
	249 Add X8, X8, W9
	250 Add X0, X8, 312
	251 Move X8, [X0]
	252 Move X2, [X0+8]
	253 Move X0, X19
	254 Move W1, W20
	255 NotImplemented "Instruction BLR not yet implemented."
	256 Move X20, [X31+240]
	257 Move X19, [X31+248]
	258 Move X22, [X31+224]
	259 Move X21, [X31+232]
	260 Move X24, [X31+208]
	261 Move X23, [X31+216]
	262 Move X30, [X31+192]
	263 Add X31, X31, 256
	264 Return 
	265 Call 0x1C17F20

Method: System.Void RemoveFromParent(System.Int32 id, System.Int32 parentId)

Disassembly:
	0x026FDC2C TBNZ X9, 0x0, 0x26FDC48
	0x026FDC30 MOV X0, X8
	0x026FDC34 BL 0x1C5C684
	0x026FDC38 LDR X8, [X21 + 0x20]
	0x026FDC3C ADD X9, X8, 0x135
	0x026FDC40 LDRH W9, [X9]
	0x026FDC44 B 0x26FDC4C
	0x026FDC48 MOV X0, X8
	0x026FDC4C LDR X10, [X0 + 0xC0]
	0x026FDC50 LDR X10, [X10 + 0x20]
	0x026FDC54 LDR X3, [X10]
	0x026FDC58 TBNZ X9, 0x0, 0x26FDC70
	0x026FDC5C MOV X0, X8
	0x026FDC60 STR X3, [X31 + 0x8]
	0x026FDC64 BL 0x1C5C684
	0x026FDC68 LDR X3, [X31 + 0x8]
	0x026FDC6C MOV X8, X0
	0x026FDC70 LDR X8, [X8 + 0xC0]
	0x026FDC74 MOV X0, X20
	0x026FDC78 MOV X1, X19
	0x026FDC7C LDP X20, X19, [X31 + 0x50]
	0x026FDC80 LDR X2, [X8 + 0x20]
	0x026FDC84 LDP X22, X21, [X31 + 0x40]
	0x026FDC88 LDP X24, X23, [X31 + 0x30]
	0x026FDC8C LDP X26, X25, [X31 + 0x20]
	0x026FDC90 LDP X30, X27, [X31 + 0x10]
	0x026FDC94 ADD X31, X31, 0x60
	0x026FDC98 BR X3
	0x026FDC9C STP X29, X30, [X31 - 0x60]!
	0x026FDCA0 STP X28, X27, [X31 + 0x10]
	0x026FDCA4 STP X26, X25, [X31 + 0x20]
	0x026FDCA8 STP X24, X23, [X31 + 0x30]
	0x026FDCAC STP X22, X21, [X31 + 0x40]
	0x026FDCB0 STP X20, X19, [X31 + 0x50]
	0x026FDCB4 ADD X29, X31, 0x0
	0x026FDCB8 SUB X31, X31, 0x20
	0x026FDCBC MRS X28, 0xC000
	0x026FDCC0 LDR X8, [X28 + 0x28]
	0x026FDCC4 MOV X26, X3
	0x026FDCC8 MOV X19, X2
	0x026FDCCC MOV W22, W1
	0x026FDCD0 STUR X8, [X29 - 0x8]
	0x026FDCD4 LDR X8, [X3 + 0x20]
	0x026FDCD8 MOV X27, X0
	0x026FDCDC LDRB W9, [X8 + 0x135]
	0x026FDCE0 TBNZ X9, 0x0, 0x26FDCF0
	0x026FDCE4 MOV X0, X8
	0x026FDCE8 BL 0x1C5C684
	0x026FDCEC MOV X8, X0
	0x026FDCF0 LDR X8, [X8 + 0xC0]
	0x026FDCF4 LDR X8, [X8 + 0x40]
	0x026FDCF8 LDR W20, [X8 + 0xFC]
	0x026FDCFC ADD X8, X31, 0x0
	0x026FDD00 ADD X9, X20, 0xF
	0x026FDD04 AND X25, X9, 0x1FFFFFFFF
	0x026FDD08 SUB X21, X8, X25
	0x026FDD0C ADD X31, X21, 0x0
	0x026FDD10 ADD X8, X31, 0x0
	0x026FDD14 SUB X24, X8, X25
	0x026FDD18 ADD X31, X24, 0x0
	0x026FDD1C MOV X0, X24
	0x026FDD20 MOV W1, W31
	0x026FDD24 MOV X2, X20
	0x026FDD28 BL 0x3EB1B10
	0x026FDD2C ADD X8, X31, 0x0
	0x026FDD30 SUB X23, X8, X25
	0x026FDD34 ADD X31, X23, 0x0
	0x026FDD38 MOV X0, X23
	0x026FDD3C MOV W1, W31
	0x026FDD40 MOV X2, X20
	0x026FDD44 BL 0x3EB1B10
	0x026FDD48 ADD X8, X31, 0x0
	0x026FDD4C SUB X25, X8, X25
	0x026FDD50 ADD X31, X25, 0x0
	0x026FDD54 MOV X0, X25
	0x026FDD58 MOV W1, W31
	0x026FDD5C MOV X2, X20
	0x026FDD60 BL 0x3EB1B10
	0x026FDD64 LDR X27, [X27 + 0x8]
	0x026FDD68 CBZ X27, 0x26FDE6C
	0x026FDD6C LDR X8, [X26 + 0x20]
	0x026FDD70 ADD X9, X8, 0x135
	0x026FDD74 LDRH W9, [X9]
	0x026FDD78 TBNZ X9, 0x0, 0x26FDD94
	0x026FDD7C MOV X0, X8
	0x026FDD80 BL 0x1C5C684
	0x026FDD84 LDR X8, [X26 + 0x20]
	0x026FDD88 ADD X9, X8, 0x135
	0x026FDD8C LDRH W9, [X9]
	0x026FDD90 B 0x26FDD98
	0x026FDD94 MOV X0, X8
	0x026FDD98 LDR X10, [X0 + 0xC0]
	0x026FDD9C LDR X10, [X10 + 0x30]
	0x026FDDA0 LDR X26, [X10]
	0x026FDDA4 TBNZ X9, 0x0, 0x26FDDB4
	0x026FDDA8 MOV X0, X8
	0x026FDDAC BL 0x1C5C684
	0x026FDDB0 MOV X8, X0
	0x026FDDB4 LDR X8, [X8 + 0xC0]
	0x026FDDB8 SUB X3, X29, 0x20
	0x026FDDBC SUB X4, X29, 0x10
	0x026FDDC0 MOV X0, X26
	0x026FDDC4 LDR X1, [X8 + 0x30]
	0x026FDDC8 SUB X8, X29, 0xC
	0x026FDDCC STUR W22, [X29 - 0xC]
	0x026FDDD0 STP X8, X24, [X29 - 0x20]
	0x026FDDD4 LDR X8, [X1 + 0x10]
	0x026FDDD8 MOV X2, X27

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+160], X30
	003 Move [X31+168], X23
	004 Move [X31+176], X22
	005 Move [X31+184], X21
	006 Move [X31+192], X20
	007 Move [X31+200], X19
	008 Move X23, 0x1CDE000
	009 Move W8, [X23+1441]
	010 Move X20, X3
	011 Move W22, W2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x1A21000
	019 Move X0, [X0+2232]
	020 Call 0x1C17CF4
	021 Move X0, 0x1A21000
	022 Move X0, [X0+2240]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1441], W8
	026 Move [X31+88], X31
	027 Move X23, [X19+8]
	028 Compare X23, 0
	029 JumpIfEqual {136}
	030 Move X0, [X20+32]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move X8, [X0+192]
	038 Move X0, X23
	039 Move W1, W22
	040 Move X2, [X8+72]
	041 Add X8, X31, 128
	042 Call Dictionary`2<Int32, TreeViewItemData`1<Object>>.get_Item, X0, X1
	043 Move V0, [X31+8]
	044 Move X8, [X31+144]
	045 Move [X31+6], V0
	046 Move [X31+112], X8
	047 Move X0, [X20+32]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move X8, [X0+192]
	055 Add X0, X31, 96
	056 Move W1, W21
	057 Move X2, [X8+152]
	058 Call 0x2701390, X0, X1
	059 Move X23, [X19+8]
	060 Move V0, [X31+6]
	061 Move X8, [X31+112]
	062 Move [X31+4], V0
	063 Move [X31+80], X8
	064 Compare X23, 0
	065 JumpIfEqual {136}
	066 Move V0, [X31+4]
	067 Move X8, [X31+80]
	068 Move [X31+2], V0
	069 Move [X31+48], X8
	070 Move X0, [X20+32]
	071 Move W8, [X0+309]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {77}
	076 Call 0x1C5D684
	077 Move X8, [X0+192]
	078 Move V0, [X31+2]
	079 Move X9, [X31+48]
	080 Add X2, X31, 128
	081 Move X3, [X8+136]
	082 Move X0, X23
	083 Move W1, W22
	084 Move [X31+8], V0
	085 Move [X31+144], X9
	086 Call Dictionary`2<Int32, TreeViewItemData`1<Object>>.set_Item, X0, X1, X2
	087 Move X0, [X19+24]
	088 Compare X0, 0
	089 JumpIfEqual {136}
	090 Move X8, 0x1A21000
	091 Move X8, [X8+2232]
	092 Add X2, X31, 88
	093 Move W1, W22
	094 Move X3, [X8]
	095 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {108}
	100 Move X0, [X31+88]
	101 Compare X0, 0
	102 JumpIfEqual {136}
	103 Move X8, 0x1A21000
	104 Move X8, [X8+2240]
	105 Move W1, W21
	106 Move X2, [X8]
	107 Call List`1<Int32>.Remove, X0, X1
	108 Move V0, [X31+6]
	109 Move X8, [X31+112]
	110 Move [X31], V0
	111 Move [X31+16], X8
	112 Move X0, [X20+32]
	113 Move W8, [X0+309]
	114 Move TEMP, X8
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {119}
	118 Call 0x1C5D684
	119 Move X8, [X0+192]
	120 Move V0, [X31]
	121 Move X9, [X31+16]
	122 Add X1, X31, 128
	123 Move X2, [X8+144]
	124 Move X0, X19
	125 Move [X31+8], V0
	126 Move [X31+144], X9
	127 Call 0x26FDDDC, X0, X1
	128 Move X20, [X31+192]
	129 Move X19, [X31+200]
	130 Move X22, [X31+176]
	131 Move X21, [X31+184]
	132 Move X30, [X31+160]
	133 Move X23, [X31+168]
	134 Add X31, X31, 208
	135 Return 
	136 Call 0x1C17F20

Method: System.Void UpdateParentTree(UnityEngine.UIElements.TreeViewItemData`1<T> current)

Disassembly:
	0x026FDDDC BLR X8
	0x026FDDE0 LDURB W8, [X29 - 0x10]
	0x026FDDE4 CBNZ W8, 0x26FDDFC
	0x026FDDE8 MOV X0, X25
	0x026FDDEC MOV W1, W31
	0x026FDDF0 MOV X2, X20
	0x026FDDF4 BL 0x3EB1B10
	0x026FDDF8 MOV X24, X25
	0x026FDDFC MOV X0, X21
	0x026FDE00 MOV X1, X24
	0x026FDE04 MOV X2, X20
	0x026FDE08 BL 0x3EB1AC0
	0x026FDE0C MOV X0, X23
	0x026FDE10 MOV X1, X21
	0x026FDE14 MOV X2, X20
	0x026FDE18 BL 0x3EB1AC0
	0x026FDE1C MOV X0, X21
	0x026FDE20 MOV X1, X23
	0x026FDE24 MOV X2, X20
	0x026FDE28 BL 0x3EB1AC0
	0x026FDE2C MOV X0, X19
	0x026FDE30 MOV X1, X21
	0x026FDE34 MOV X2, X20
	0x026FDE38 BL 0x3EB1AC0
	0x026FDE3C LDR X8, [X28 + 0x28]
	0x026FDE40 LDUR X9, [X29 - 0x8]
	0x026FDE44 CMP X8, X9
	0x026FDE48 B.NE 0x26FDE70
	0x026FDE4C ADD X31, X29, 0x0
	0x026FDE50 LDP X20, X19, [X31 + 0x50]
	0x026FDE54 LDP X22, X21, [X31 + 0x40]
	0x026FDE58 LDP X24, X23, [X31 + 0x30]
	0x026FDE5C LDP X26, X25, [X31 + 0x20]
	0x026FDE60 LDP X28, X27, [X31 + 0x10]
	0x026FDE64 LDP X29, X30, [X31], #0x60
	0x026FDE68 RET
	0x026FDE6C BL 0x1C16F20
	0x026FDE70 BL 0x3EB1B20
	0x026FDE74 SUB X31, X31, 0x30
	0x026FDE78 STP X30, X21, [X31 + 0x10]
	0x026FDE7C STP X20, X19, [X31 + 0x20]
	0x026FDE80 ADRP X21, 0x1CDD000
	0x026FDE84 LDRB W8, [X21 + 0x5A6]
	0x026FDE88 MOV W19, W1
	0x026FDE8C MOV X20, X0
	0x026FDE90 TBNZ X8, 0x0, 0x26FDEA8
	0x026FDE94 ADRP X0, 0x1A00000
	0x026FDE98 LDR X0, [X0 + 0x870]
	0x026FDE9C BL 0x1C16CF4
	0x026FDEA0 MOVZ W8, 0x1
	0x026FDEA4 STRB W8, [X21 + 0x5A6]
	0x026FDEA8 STR W31, [X31 + 0xC]
	0x026FDEAC LDR X0, [X20 + 0x10]
	0x026FDEB0 CBZ X0, 0x26FDEE8
	0x026FDEB4 ADRP X8, 0x1A00000
	0x026FDEB8 LDR X8, [X8 + 0x870]
	0x026FDEBC ADD X2, X31, 0xC
	0x026FDEC0 MOV W1, W19
	0x026FDEC4 LDR X3, [X8]
	0x026FDEC8 BL 0x2A0BC68
	0x026FDECC LDR W8, [X31 + 0xC]
	0x026FDED0 LDP X20, X19, [X31 + 0x20]
	0x026FDED4 LDP X30, X21, [X31 + 0x10]
	0x026FDED8 ANDS W31, W0, 0x1
	0x026FDEDC CSINV W0, W8, W31, NE
	0x026FDEE0 ADD X31, X31, 0x30
	0x026FDEE4 RET
	0x026FDEE8 BL 0x1C16F20
	0x026FDEEC STP X29, X30, [X31 - 0x60]!
	0x026FDEF0 STP X28, X27, [X31 + 0x10]
	0x026FDEF4 STP X26, X25, [X31 + 0x20]
	0x026FDEF8 STP X24, X23, [X31 + 0x30]
	0x026FDEFC STP X22, X21, [X31 + 0x40]
	0x026FDF00 STP X20, X19, [X31 + 0x50]
	0x026FDF04 ADD X29, X31, 0x0
	0x026FDF08 SUB X31, X31, 0x40
	0x026FDF0C STUR W3, [X29 - 0x3C]
	0x026FDF10 MRS X8, 0xC000
	0x026FDF14 STUR X8, [X29 - 0x38]
	0x026FDF18 LDR X8, [X8 + 0x28]
	0x026FDF1C ADRP X21, 0x1CDD000
	0x026FDF20 MOV X22, X4
	0x026FDF24 MOV W23, W2
	0x026FDF28 STUR X8, [X29 - 0x8]
	0x026FDF2C LDRB W8, [X21 + 0x5A7]
	0x026FDF30 MOV W26, W1
	0x026FDF34 MOV X19, X0
	0x026FDF38 TBNZ X8, 0x0, 0x26FDF68
	0x026FDF3C ADRP X0, 0x1A00000
	0x026FDF40 LDR X0, [X0 + 0x870]
	0x026FDF44 BL 0x1C16CF4
	0x026FDF48 ADRP X0, 0x1A1E000
	0x026FDF4C LDR X0, [X0 + 0x7A0]
	0x026FDF50 BL 0x1C16CF4
	0x026FDF54 ADRP X0, 0x1A1E000
	0x026FDF58 LDR X0, [X0 + 0x7A8]
	0x026FDF5C BL 0x1C16CF4
	0x026FDF60 MOVZ W8, 0x1
	0x026FDF64 STRB W8, [X21 + 0x5A7]
	0x026FDF68 LDR X0, [X22 + 0x20]
	0x026FDF6C LDRB W8, [X0 + 0x135]
	0x026FDF70 TBNZ X8, 0x0, 0x26FDF78

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+160], X30
	003 Move [X31+176], X24
	004 Move [X31+184], X23
	005 Move [X31+192], X22
	006 Move [X31+200], X21
	007 Move [X31+208], X20
	008 Move [X31+216], X19
	009 Move X22, 0x1CDE000
	010 Move W8, [X22+1442]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1A01000
	019 Move X0, [X0+2160]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1442], W8
	023 Move X24, 0x1A01000
	024 Move X24, [X24+2160]
	025 Move [X31+172], W31
	026 Move X0, [X19+32]
	027 Move X22, [X21+16]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Compare X22, 0
	035 JumpIfEqual {128}
	036 Move W1, [X20]
	037 Move X3, [X24]
	038 Add X2, X31, 172
	039 Move X0, X22
	040 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {119}
	045 Move X22, [X21+8]
	046 Compare X22, 0
	047 JumpIfEqual {128}
	048 Move X0, [X19+32]
	049 Move W23, [X31+172]
	050 Move W8, [X0+309]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Move X8, [X0+192]
	057 Move X0, X22
	058 Move W1, W23
	059 Move X2, [X8+72]
	060 Add X8, X31, 128
	061 Call Dictionary`2<Int32, TreeViewItemData`1<Object>>.get_Item, X0, X1
	062 Move V0, [X31+8]
	063 Move X8, [X31+144]
	064 Move [X31+6], V0
	065 Move [X31+112], X8
	066 Move X8, [X20+16]
	067 Move V0, [X20]
	068 Move [X31+80], X8
	069 Move [X31+4], V0
	070 Move X0, [X19+32]
	071 Move W8, [X0+309]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {77}
	076 Call 0x1C5D684
	077 Move X8, [X0+192]
	078 Move V0, [X31+4]
	079 Move X9, [X31+80]
	080 Add X0, X31, 96
	081 Move X2, [X8+160]
	082 Add X1, X31, 128
	083 Move [X31+8], V0
	084 Move [X31+144], X9
	085 Call 0x2701908, X0, X1
	086 Move X22, [X21+8]
	087 Move V0, [X31+6]
	088 Move X8, [X31+112]
	089 Move W23, [X31+172]
	090 Move [X31+2], V0
	091 Move [X31+48], X8
	092 Compare X22, 0
	093 JumpIfEqual {128}
	094 Move V0, [X31+2]
	095 Move X8, [X31+48]
	096 Move [X31], V0
	097 Move [X31+16], X8
	098 Move X0, [X19+32]
	099 Move W8, [X0+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Call 0x1C5D684
	105 Move X8, [X0+192]
	106 Move V0, [X31]
	107 Move X9, [X31+16]
	108 Add X2, X31, 128
	109 Move X3, [X8+136]
	110 Move X0, X22
	111 Move W1, W23
	112 Move [X31+8], V0
	113 Move [X31+144], X9
	114 Call Dictionary`2<Int32, TreeViewItemData`1<Object>>.set_Item, X0, X1, X2
	115 Move X8, [X31+112]
	116 Move V0, [X31+6]
	117 Move [X20+16], X8
	118 Move [X20], V0
	119 Move X20, [X31+208]
	120 Move X19, [X31+216]
	121 Move X22, [X31+192]
	122 Move X21, [X31+200]
	123 Move X24, [X31+176]
	124 Move X23, [X31+184]
	125 Move X30, [X31+160]
	126 Add X31, X31, 224
	127 Return 
	128 Call 0x1C17F20

Method: System.Void RefreshTree(System.Collections.Generic.IList`1<UnityEngine.UIElements.TreeViewItemData`1<T>> rootItems)

Disassembly:
	0x026FDF74 BL 0x1C5C684
	0x026FDF78 LDR X8, [X0 + 0xC0]
	0x026FDF7C LDR X8, [X8 + 0x40]
	0x026FDF80 LDR W24, [X8 + 0xFC]
	0x026FDF84 ADD X8, X31, 0x0
	0x026FDF88 ADD X9, X24, 0xF
	0x026FDF8C AND X21, X9, 0x1FFFFFFFF
	0x026FDF90 SUB X20, X8, X21
	0x026FDF94 ADD X31, X20, 0x0
	0x026FDF98 ADD X8, X31, 0x0
	0x026FDF9C SUB X25, X8, X21
	0x026FDFA0 ADD X31, X25, 0x0
	0x026FDFA4 MOV X0, X25
	0x026FDFA8 MOV W1, W31
	0x026FDFAC MOV X2, X24
	0x026FDFB0 BL 0x3EB1B10
	0x026FDFB4 ADD X8, X31, 0x0
	0x026FDFB8 SUB X27, X8, X21
	0x026FDFBC STUR W31, [X29 - 0x2C]
	0x026FDFC0 ADD X31, X27, 0x0
	0x026FDFC4 MOV X0, X27
	0x026FDFC8 MOV W1, W31
	0x026FDFCC MOV X2, X24
	0x026FDFD0 BL 0x3EB1B10
	0x026FDFD4 LDR X28, [X19 + 0x8]
	0x026FDFD8 CBZ X28, 0x26FE410
	0x026FDFDC LDR X8, [X22 + 0x20]
	0x026FDFE0 ADD X9, X8, 0x135
	0x026FDFE4 LDRH W9, [X9]
	0x026FDFE8 TBNZ X9, 0x0, 0x26FE004
	0x026FDFEC MOV X0, X8
	0x026FDFF0 BL 0x1C5C684
	0x026FDFF4 LDR X8, [X22 + 0x20]
	0x026FDFF8 ADD X9, X8, 0x135
	0x026FDFFC LDRH W9, [X9]
	0x026FE000 B 0x26FE008
	0x026FE004 MOV X0, X8
	0x026FE008 LDR X10, [X0 + 0xC0]
	0x026FE00C LDR X10, [X10 + 0x30]
	0x026FE010 LDR X21, [X10]
	0x026FE014 TBNZ X9, 0x0, 0x26FE024
	0x026FE018 MOV X0, X8
	0x026FE01C BL 0x1C5C684
	0x026FE020 MOV X8, X0
	0x026FE024 LDR X8, [X8 + 0xC0]
	0x026FE028 SUB X3, X29, 0x28
	0x026FE02C SUB X4, X29, 0x10
	0x026FE030 MOV X0, X21
	0x026FE034 LDR X1, [X8 + 0x30]
	0x026FE038 SUB X8, X29, 0xC
	0x026FE03C STUR W26, [X29 - 0xC]
	0x026FE040 STP X8, X25, [X29 - 0x28]
	0x026FE044 LDR X8, [X1 + 0x10]
	0x026FE048 MOV X2, X28
	0x026FE04C BLR X8
	0x026FE050 LDURB W8, [X29 - 0x10]
	0x026FE054 CBZ W8, 0x26FE3DC
	0x026FE058 LDR X0, [X19 + 0x10]
	0x026FE05C CBZ X0, 0x26FE410
	0x026FE060 ADRP X8, 0x19FF000
	0x026FE064 LDR X8, [X8 + 0x870]
	0x026FE068 SUB X2, X29, 0x2C
	0x026FE06C MOV W1, W26
	0x026FE070 LDR X3, [X8]
	0x026FE074 BL 0x2A0BC68
	0x026FE078 MOV W28, W23
	0x026FE07C TBZ X0, 0x0, 0x26FE0BC
	0x026FE080 LDUR W8, [X29 - 0x2C]
	0x026FE084 CMP W8, W28
	0x026FE088 B.NE 0x26FE110
	0x026FE08C LDR X28, [X19 + 0x8]
	0x026FE090 CBZ X28, 0x26FE410
	0x026FE094 LDR X8, [X22 + 0x20]
	0x026FE098 ADD X9, X8, 0x135
	0x026FE09C LDRH W9, [X9]
	0x026FE0A0 TBNZ X9, 0x0, 0x26FE1C4
	0x026FE0A4 MOV X0, X8
	0x026FE0A8 BL 0x1C5C684
	0x026FE0AC LDR X8, [X22 + 0x20]
	0x026FE0B0 ADD X9, X8, 0x135
	0x026FE0B4 LDRH W9, [X9]
	0x026FE0B8 B 0x26FE1C8
	0x026FE0BC LDR X27, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1CDE000
	007 Move W8, [X22+1443]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x1A21000
	016 Move X0, [X0+2248]
	017 Call 0x1C17CF4
	018 Move X0, 0x1A21000
	019 Move X0, [X0+2256]
	020 Call 0x1C17CF4
	021 Move X0, 0x1A1F000
	022 Move X0, [X0+1952]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1443], W8
	026 Move X22, [X20+8]
	027 Compare X22, 0
	028 JumpIfEqual {98}
	029 Move X0, [X21+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X0+192]
	037 Move X0, X22
	038 Move X1, [X8+168]
	039 Call Dictionary`2<Int32, TreeViewItemData`1<Object>>.Clear, X0
	040 Move X0, [X20+16]
	041 Compare X0, 0
	042 JumpIfEqual {98}
	043 Move X8, 0x1A21000
	044 Move X8, [X8+2256]
	045 Move X1, [X8]
	046 Call Dictionary`2<Int32, Int32>.Clear, X0
	047 Move X0, [X20+24]
	048 Compare X0, 0
	049 JumpIfEqual {98}
	050 Move X8, 0x1A20000
	051 Move X8, [X8+2248]
	052 Move X1, [X8]
	053 Call Dictionary`2<Int32, Object>.Clear, X0
	054 Move X22, [X20]
	055 Compare X22, 0
	056 JumpIfEqual {98}
	057 Move X10, 0x1A1E000
	058 Move X8, [X22]
	059 Move X10, [X10+1952]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move X1, [X10]
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move W2, 3
	071 Move X0, X22
	072 Call 0x1C5D788
	073 Move W9, [X10]
	074 Add W9, W9, 3
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X1, [X0+8]
	079 Move X0, X22
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move X0, [X21+32]
	082 Move W8, [X0+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {88}
	087 Call 0x1C5D684
	088 Move X8, [X0+192]
	089 Move X0, X20
	090 Move X1, X19
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X3, [X8+176]
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 Move W2, 1
	097 Move X30, [X31+48]
	098 Call 0x1C17F20

Method: System.Void BuildTree(System.Collections.Generic.IEnumerable`1<UnityEngine.UIElements.TreeViewItemData`1<T>> items, System.Boolean isRoot)

Disassembly:
	0x026FE0C0 CBZ X27, 0x26FE410
	0x026FE0C4 ADRP X10, 0x1A1D000
	0x026FE0C8 LDR X8, [X27]
	0x026FE0CC LDR X10, [X10 + 0x7A8]
	0x026FE0D0 LDUR W23, [X29 - 0x3C]
	0x026FE0D4 LDRH W9, [X8 + 0x12E]
	0x026FE0D8 LDR X1, [X10]
	0x026FE0DC CBZ X9, 0x26FE100
	0x026FE0E0 LDR X10, [X8 + 0xB0]
	0x026FE0E4 ADD X10, X10, 0x8
	0x026FE0E8 LDUR X11, [X10 - 0x8]
	0x026FE0EC CMP X11, X1
	0x026FE0F0 B.EQ 0x26FE118
	0x026FE0F4 SUBS X9, X9, 0x1
	0x026FE0F8 ADD X10, X10, 0x10
	0x026FE0FC B.NE 0x26FE0E8
	0x026FE100 MOVZ W2, 0x2
	0x026FE104 MOV X0, X27
	0x026FE108 BL 0x1C5C788
	0x026FE10C B 0x26FE128
	0x026FE110 LDUR W23, [X29 - 0x3C]
	0x026FE114 B 0x26FE290
	0x026FE118 LDR W9, [X10]
	0x026FE11C ADD W9, W9, 0x2
	0x026FE120 ADD X8, X8, W9, 0x4, SXTW
	0x026FE124 ADD X0, X8, 0x138
	0x026FE128 LDP X8, X2, [X0]
	0x026FE12C MOV X0, X27
	0x026FE130 MOV W1, W26
	0x026FE134 BLR X8
	0x026FE138 LDR X27, [X19]
	0x026FE13C ADDS W31, W28, 0x1
	0x026FE140 CSET W10, EQ
	0x026FE144 CMP W0, W23
	0x026FE148 CSET W11, LT
	0x026FE14C CBZ X27, 0x26FE410
	0x026FE150 ADRP X12, 0x1A1D000
	0x026FE154 LDR X8, [X27]
	0x026FE158 LDR X12, [X12 + 0x7A0]
	0x026FE15C AND W10, W10, W11, 0x0
	0x026FE160 SUB W23, W23, W10
	0x026FE164 LDRH W9, [X8 + 0x12E]
	0x026FE168 LDR X1, [X12]
	0x026FE16C CBZ X9, 0x26FE190
	0x026FE170 LDR X10, [X8 + 0xB0]
	0x026FE174 ADD X10, X10, 0x8
	0x026FE178 LDUR X11, [X10 - 0x8]
	0x026FE17C CMP X11, X1
	0x026FE180 B.EQ 0x26FE1A0
	0x026FE184 SUBS X9, X9, 0x1
	0x026FE188 ADD X10, X10, 0x10
	0x026FE18C B.NE 0x26FE178
	0x026FE190 MOVZ W2, 0x6
	0x026FE194 MOV X0, X27
	0x026FE198 BL 0x1C5C788
	0x026FE19C B 0x26FE1B0
	0x026FE1A0 LDR W9, [X10]
	0x026FE1A4 ADD W9, W9, 0x6
	0x026FE1A8 ADD X8, X8, W9, 0x4, SXTW
	0x026FE1AC ADD X0, X8, 0x138
	0x026FE1B0 LDP X8, X2, [X0]
	0x026FE1B4 MOV X0, X27
	0x026FE1B8 MOV W1, W26
	0x026FE1BC BLR X8
	0x026FE1C0 B 0x26FE350
	0x026FE1C4 MOV X0, X8
	0x026FE1C8 LDR X10, [X0 + 0xC0]
	0x026FE1CC LDR X10, [X10 + 0x48]
	0x026FE1D0 LDR X21, [X10]
	0x026FE1D4 TBNZ X9, 0x0, 0x26FE1E4
	0x026FE1D8 MOV X0, X8
	0x026FE1DC BL 0x1C5C684
	0x026FE1E0 MOV X8, X0
	0x026FE1E4 LDR X8, [X8 + 0xC0]
	0x026FE1E8 SUB X3, X29, 0x28
	0x026FE1EC MOV X0, X21
	0x026FE1F0 MOV X2, X28
	0x026FE1F4 LDR X1, [X8 + 0x48]
	0x026FE1F8 SUB X8, X29, 0xC
	0x026FE1FC STUR W23, [X29 - 0xC]
	0x026FE200 STP X8, X20, [X29 - 0x28]
	0x026FE204 LDR X8, [X1 + 0x10]
	0x026FE208 MOV X4, X20
	0x026FE20C BLR X8
	0x026FE210 MOV X0, X27
	0x026FE214 MOV X1, X20
	0x026FE218 MOV X2, X24
	0x026FE21C BL 0x3EB1AC0
	0x026FE220 LDR X8, [X22 + 0x20]
	0x026FE224 ADD X9, X8, 0x135
	0x026FE228 LDRH W9, [X9]
	0x026FE22C TBNZ X9, 0x0, 0x26FE248
	0x026FE230 MOV X0, X8
	0x026FE234 BL 0x1C5C684
	0x026FE238 LDR X8, [X22 + 0x20]
	0x026FE23C ADD X9, X8, 0x135
	0x026FE240 LDRH W9, [X9]
	0x026FE244 B 0x26FE24C
	0x026FE248 MOV X0, X8
	0x026FE24C LDR X10, [X0 + 0xC0]
	0x026FE250 MOV W28, W23
	0x026FE254 LDR X10, [X10 + 0x50]
	0x026FE258 LDR X21, [X10]
	0x026FE25C TBNZ X9, 0x0, 0x26FE26C
	0x026FE260 MOV X0, X8
	0x026FE264 BL 0x1C5C684
	0x026FE268 MOV X8, X0
	0x026FE26C LDR X8, [X8 + 0xC0]
	0x026FE270 LDUR W23, [X29 - 0x3C]
	0x026FE274 MOV X0, X27
	0x026FE278 MOV W1, W26
	0x026FE27C LDR X2, [X8 + 0x50]
	0x026FE280 BLR X21
	0x026FE284 CMP W0, W23
	0x026FE288 CSET W8, LT
	0x026FE28C SUB W23, W23, W8
	0x026FE290 LDR X8, [X22 + 0x20]
	0x026FE294 ADD X9, X8, 0x135
	0x026FE298 LDRH W9, [X9]
	0x026FE29C TBNZ X9, 0x0, 0x26FE2B8
	0x026FE2A0 MOV X0, X8
	0x026FE2A4 BL 0x1C5C684
	0x026FE2A8 LDR X8, [X22 + 0x20]
	0x026FE2AC ADD X9, X8, 0x135
	0x026FE2B0 LDRH W9, [X9]
	0x026FE2B4 B 0x26FE2BC
	0x026FE2B8 MOV X0, X8
	0x026FE2BC LDR X10, [X0 + 0xC0]
	0x026FE2C0 LDR X10, [X10 + 0x60]
	0x026FE2C4 LDR X21, [X10]
	0x026FE2C8 TBNZ X9, 0x0, 0x26FE2D8
	0x026FE2CC MOV X0, X8
	0x026FE2D0 BL 0x1C5C684
	0x026FE2D4 MOV X8, X0
	0x026FE2D8 LDR X8, [X8 + 0xC0]
	0x026FE2DC MOV X0, X25
	0x026FE2E0 LDR X1, [X8 + 0x60]
	0x026FE2E4 BLR X21
	0x026FE2E8 LDR X8, [X22 + 0x20]
	0x026FE2EC LDUR W26, [X29 - 0x2C]
	0x026FE2F0 MOV W27, W0
	0x026FE2F4 ADD X9, X8, 0x135
	0x026FE2F8 LDRH W9, [X9]
	0x026FE2FC TBNZ X9, 0x0, 0x26FE318
	0x026FE300 MOV X0, X8
	0x026FE304 BL 0x1C5C684
	0x026FE308 LDR X8, [X22 + 0x20]
	0x026FE30C ADD X9, X8, 0x135
	0x026FE310 LDRH W9, [X9]
	0x026FE314 B 0x26FE31C
	0x026FE318 MOV X0, X8
	0x026FE31C LDR X10, [X0 + 0xC0]
	0x026FE320 LDR X10, [X10 + 0x68]
	0x026FE324 LDR X21, [X10]
	0x026FE328 TBNZ X9, 0x0, 0x26FE338
	0x026FE32C MOV X0, X8
	0x026FE330 BL 0x1C5C684
	0x026FE334 MOV X8, X0
	0x026FE338 LDR X8, [X8 + 0xC0]
	0x026FE33C MOV X0, X19
	0x026FE340 MOV W1, W27
	0x026FE344 MOV W2, W26
	0x026FE348 LDR X3, [X8 + 0x68]
	0x026FE34C BLR X21
	0x026FE350 MOV X0, X20
	0x026FE354 MOV X1, X25
	0x026FE358 MOV X2, X24
	0x026FE35C BL 0x3EB1AC0
	0x026FE360 LDR X8, [X22 + 0x20]
	0x026FE364 ADD X9, X8, 0x135
	0x026FE368 LDRH W9, [X9]
	0x026FE36C TBNZ X9, 0x0, 0x26FE388
	0x026FE370 MOV X0, X8
	0x026FE374 BL 0x1C5C684
	0x026FE378 LDR X8, [X22 + 0x20]
	0x026FE37C ADD X9, X8, 0x135
	0x026FE380 LDRH W9, [X9]
	0x026FE384 B 0x26FE38C
	0x026FE388 MOV X0, X8
	0x026FE38C LDR X10, [X0 + 0xC0]
	0x026FE390 LDR X10, [X10 + 0x70]
	0x026FE394 LDR X22, [X10]
	0x026FE398 TBNZ X9, 0x0, 0x26FE3A8
	0x026FE39C MOV X0, X8
	0x026FE3A0 BL 0x1C5C684
	0x026FE3A4 MOV X8, X0
	0x026FE3A8 LDR X8, [X8 + 0xC0]
	0x026FE3AC SUB X9, X29, 0xC
	0x026FE3B0 SUB X3, X29, 0x28
	0x026FE3B4 SUB X4, X29, 0x10
	0x026FE3B8 LDR X1, [X8 + 0x70]
	0x026FE3BC SUB X8, X29, 0x10
	0x026FE3C0 STP W23, W28, [X29 - 0x10]
	0x026FE3C4 STP X20, X9, [X29 - 0x28]
	0x026FE3C8 STUR X8, [X29 - 0x18]
	0x026FE3CC LDR X8, [X1 + 0x10]
	0x026FE3D0 MOV X0, X22
	0x026FE3D4 MOV X2, X19
	0x026FE3D8 BLR X8
	0x026FE3DC LDUR X8, [X29 - 0x38]
	0x026FE3E0 LDR X8, [X8 + 0x28]
	0x026FE3E4 LDUR X9, [X29 - 0x8]
	0x026FE3E8 CMP X8, X9
	0x026FE3EC B.NE 0x26FE414
	0x026FE3F0 ADD X31, X29, 0x0
	0x026FE3F4 LDP X20, X19, [X31 + 0x50]
	0x026FE3F8 LDP X22, X21, [X31 + 0x40]
	0x026FE3FC LDP X24, X23, [X31 + 0x30]
	0x026FE400 LDP X26, X25, [X31 + 0x20]
	0x026FE404 LDP X28, X27, [X31 + 0x10]
	0x026FE408 LDP X29, X30, [X31], #0x60
	0x026FE40C RET
	0x026FE410 BL 0x1C16F20
	0x026FE414 BL 0x3EB1B20
	0x026FE418 STP X30, X23, [X31 - 0x30]!
	0x026FE41C STP X22, X21, [X31 + 0x10]
	0x026FE420 STP X20, X19, [X31 + 0x20]
	0x026FE424 MOV X21, X0
	0x026FE428 ADDS W31, W1, 0x1
	0x026FE42C MOV W0, W31
	0x026FE430 B.EQ 0x26FE4C0
	0x026FE434 MOV W20, W2
	0x026FE438 ADDS W31, W2, 0x1
	0x026FE43C B.EQ 0x26FE4C0
	0x026FE440 MOV X19, X3
	0x026FE444 MOV W22, W1
	0x026FE448 LDR X8, [X19 + 0x20]
	0x026FE44C ADD X9, X8, 0x135
	0x026FE450 LDRH W9, [X9]
	0x026FE454 TBNZ X9, 0x0, 0x26FE470
	0x026FE458 MOV X0, X8
	0x026FE45C BL 0x1C5C684
	0x026FE460 LDR X8, [X19 + 0x20]
	0x026FE464 ADD X9, X8, 0x135
	0x026FE468 LDRH W9, [X9]
	0x026FE46C B 0x26FE474
	0x026FE470 MOV X0, X8
	0x026FE474 LDR X10, [X0 + 0xC0]
	0x026FE478 LDR X10, [X10 + 0x78]
	0x026FE47C LDR X23, [X10]
	0x026FE480 TBNZ X9, 0x0, 0x26FE490
	0x026FE484 MOV X0, X8
	0x026FE488 BL 0x1C5C684
	0x026FE48C MOV X8, X0
	0x026FE490 LDR X8, [X8 + 0xC0]
	0x026FE494 MOV X0, X21
	0x026FE498 MOV W1, W22
	0x026FE49C LDR X2, [X8 + 0x78]
	0x026FE4A0 BLR X23
	0x026FE4A4 MOV W22, W0
	0x026FE4A8 ADDS W31, W0, 0x1
	0x026FE4AC B.EQ 0x26FE4B8
	0x026FE4B0 CMP W22, W20
	0x026FE4B4 B.NE 0x26FE448
	0x026FE4B8 ADDS W31, W22, 0x1
	0x026FE4BC CSET W0, NE
	0x026FE4C0 LDP X20, X19, [X31 + 0x20]
	0x026FE4C4 LDP X22, X21, [X31 + 0x10]
	0x026FE4C8 LDP X30, X23, [X31], #0x30
	0x026FE4CC RET
	0x026FE4D0 STP X29, X30, [X31 - 0x60]!
	0x026FE4D4 STP X28, X27, [X31 + 0x10]
	0x026FE4D8 STP X26, X25, [X31 + 0x20]
	0x026FE4DC STP X24, X23, [X31 + 0x30]
	0x026FE4E0 STP X22, X21, [X31 + 0x40]
	0x026FE4E4 STP X20, X19, [X31 + 0x50]
	0x026FE4E8 ADD X29, X31, 0x0
	0x026FE4EC SUB X31, X31, 0x40
	0x026FE4F0 STUR W2, [X29 - 0x24]
	0x026FE4F4 STUR X1, [X29 - 0x30]
	0x026FE4F8 MRS X8, 0xC000
	0x026FE4FC STUR X8, [X29 - 0x40]
	0x026FE500 LDR X8, [X8 + 0x28]
	0x026FE504 ADRP X19, 0x1CDC000
	0x026FE508 MOV X20, X4
	0x026FE50C MOV W22, W3
	0x026FE510 STUR X8, [X29 - 0x8]
	0x026FE514 LDRB W8, [X19 + 0x5A8]
	0x026FE518 MOV X23, X0
	0x026FE51C TBNZ X8, 0x0, 0x26FE558
	0x026FE520 ADRP X0, 0x1A1F000
	0x026FE524 LDR X0, [X0 + 0x8A8]
	0x026FE528 BL 0x1C16CF4
	0x026FE52C ADRP X0, 0x1A1F000
	0x026FE530 LDR X0, [X0 + 0x8B0]
	0x026FE534 BL 0x1C16CF4
	0x026FE538 ADRP X0, 0x1A1D000
	0x026FE53C LDR X0, [X0 + 0x7A0]
	0x026FE540 BL 0x1C16CF4
	0x026FE544 ADRP X0, 0x1A1D000
	0x026FE548 LDR X0, [X0 + 0x7A8]
	0x026FE54C BL 0x1C16CF4
	0x026FE550 MOVZ W8, 0x1
	0x026FE554 STRB W8, [X19 + 0x5A8]
	0x026FE558 LDR X0, [X20 + 0x20]
	0x026FE55C STUR W22, [X29 - 0x34]
	0x026FE560 LDRB W8, [X0 + 0x135]
	0x026FE564 TBNZ X8, 0x0, 0x26FE56C
	0x026FE568 BL 0x1C5C684
	0x026FE56C LDR X8, [X0 + 0xC0]
	0x026FE570 LDR X8, [X8 + 0x40]
	0x026FE574 LDR W25, [X8 + 0xFC]
	0x026FE578 ADD X8, X31, 0x0
	0x026FE57C ADD X9, X25, 0xF
	0x026FE580 AND X9, X9, 0x1FFFFFFFF
	0x026FE584 SUB X22, X8, X9
	0x026FE588 ADD X31, X22, 0x0
	0x026FE58C ADD X8, X31, 0x0
	0x026FE590 SUB X28, X8, X9
	0x026FE594 ADD X31, X28, 0x0
	0x026FE598 ADD X8, X31, 0x0
	0x026FE59C SUB X27, X8, X9
	0x026FE5A0 ADD X31, X27, 0x0
	0x026FE5A4 ADD X8, X31, 0x0
	0x026FE5A8 SUB X24, X8, X9
	0x026FE5AC ADD X31, X24, 0x0
	0x026FE5B0 ADD X8, X31, 0x0
	0x026FE5B4 SUB X26, X8, X9
	0x026FE5B8 ADD X31, X26, 0x0
	0x026FE5BC MOV X0, X26
	0x026FE5C0 MOV W1, W31
	0x026FE5C4 MOV X2, X25
	0x026FE5C8 BL 0x3EB1B10
	0x026FE5CC LDUR W8, [X29 - 0x24]
	0x026FE5D0 ADDS W31, W8, 0x1
	0x026FE5D4 B.EQ 0x26FE608
	0x026FE5D8 LDR X21, [X23 + 0x8]
	0x026FE5DC CBZ X21, 0x26FEAF0
	0x026FE5E0 LDR X8, [X20 + 0x20]
	0x026FE5E4 ADD X9, X8, 0x135
	0x026FE5E8 LDRH W9, [X9]
	0x026FE5EC TBNZ X9, 0x0, 0x26FE634
	0x026FE5F0 MOV X0, X8
	0x026FE5F4 BL 0x1C5C684
	0x026FE5F8 LDR X8, [X20 + 0x20]
	0x026FE5FC ADD X9, X8, 0x135
	0x026FE600 LDRH W9, [X9]
	0x026FE604 B 0x26FE638
	0x026FE608 LDR X8, [X20 + 0x20]
	0x026FE60C LDR X21, [X23 + 0x10]
	0x026FE610 ADD X9, X8, 0x135
	0x026FE614 LDRH W9, [X9]
	0x026FE618 TBNZ X9, 0x0, 0x26FE8B0
	0x026FE61C MOV X0, X8
	0x026FE620 BL 0x1C5C684
	0x026FE624 LDR X8, [X20 + 0x20]
	0x026FE628 ADD X9, X8, 0x135
	0x026FE62C LDRH W9, [X9]
	0x026FE630 B 0x26FE8B4
	0x026FE634 MOV X0, X8
	0x026FE638 LDR X10, [X0 + 0xC0]
	0x026FE63C LDR X10, [X10 + 0x48]
	0x026FE640 LDR X19, [X10]
	0x026FE644 TBNZ X9, 0x0, 0x26FE654
	0x026FE648 MOV X0, X8
	0x026FE64C BL 0x1C5C684
	0x026FE650 MOV X8, X0
	0x026FE654 LDR X8, [X8 + 0xC0]
	0x026FE658 SUB X3, X29, 0x20
	0x026FE65C MOV X0, X19
	0x026FE660 MOV X2, X21
	0x026FE664 LDR X1, [X8 + 0x48]
	0x026FE668 LDUR W8, [X29 - 0x24]
	0x026FE66C MOV X4, X22
	0x026FE670 STUR W8, [X29 - 0xC]
	0x026FE674 SUB X8, X29, 0xC
	0x026FE678 STP X8, X22, [X29 - 0x20]
	0x026FE67C LDR X8, [X1 + 0x10]
	0x026FE680 BLR X8
	0x026FE684 MOV X0, X26
	0x026FE688 MOV X1, X22
	0x026FE68C MOV X2, X25
	0x026FE690 BL 0x3EB1AC0
	0x026FE694 LDUR X1, [X29 - 0x30]
	0x026FE698 MOV X0, X28
	0x026FE69C MOV X2, X25
	0x026FE6A0 BL 0x3EB1AC0
	0x026FE6A4 LDR X8, [X20 + 0x20]
	0x026FE6A8 ADD X9, X8, 0x135
	0x026FE6AC LDRH W9, [X9]
	0x026FE6B0 TBNZ X9, 0x0, 0x26FE6CC
	0x026FE6B4 MOV X0, X8
	0x026FE6B8 BL 0x1C5C684
	0x026FE6BC LDR X8, [X20 + 0x20]
	0x026FE6C0 ADD X9, X8, 0x135
	0x026FE6C4 LDRH W9, [X9]
	0x026FE6C8 B 0x26FE6D0
	0x026FE6CC MOV X0, X8
	0x026FE6D0 LDR X10, [X0 + 0xC0]
	0x026FE6D4 LDUR W19, [X29 - 0x34]
	0x026FE6D8 LDR X10, [X10 + 0x80]
	0x026FE6DC LDR X21, [X10]
	0x026FE6E0 TBNZ X9, 0x0, 0x26FE6F0
	0x026FE6E4 MOV X0, X8
	0x026FE6E8 BL 0x1C5C684
	0x026FE6EC MOV X8, X0
	0x026FE6F0 LDR X8, [X8 + 0xC0]
	0x026FE6F4 SUB X3, X29, 0x20
	0x026FE6F8 SUB X4, X29, 0xC
	0x026FE6FC MOV X0, X21
	0x026FE700 LDR X1, [X8 + 0x80]
	0x026FE704 SUB X8, X29, 0xC
	0x026FE708 STUR W19, [X29 - 0xC]
	0x026FE70C STP X28, X8, [X29 - 0x20]
	0x026FE710 LDR X8, [X1 + 0x10]
	0x026FE714 MOV X2, X26
	0x026FE718 BLR X8
	0x026FE71C LDR X22, [X23 + 0x8]
	0x026FE720 MOV X0, X27
	0x026FE724 MOV X1, X26
	0x026FE728 MOV X2, X25
	0x026FE72C BL 0x3EB1AC0
	0x026FE730 CBZ X22, 0x26FEAF0
	0x026FE734 LDR X8, [X20 + 0x20]
	0x026FE738 ADD X9, X8, 0x135
	0x026FE73C LDRH W9, [X9]
	0x026FE740 TBNZ X9, 0x0, 0x26FE75C
	0x026FE744 MOV X0, X8
	0x026FE748 BL 0x1C5C684
	0x026FE74C LDR X8, [X20 + 0x20]
	0x026FE750 ADD X9, X8, 0x135
	0x026FE754 LDRH W9, [X9]
	0x026FE758 B 0x26FE760
	0x026FE75C MOV X0, X8
	0x026FE760 LDR X10, [X0 + 0xC0]
	0x026FE764 LDR X10, [X10 + 0x88]
	0x026FE768 LDR X19, [X10]
	0x026FE76C TBNZ X9, 0x0, 0x26FE77C
	0x026FE770 MOV X0, X8
	0x026FE774 BL 0x1C5C684
	0x026FE778 MOV X8, X0
	0x026FE77C LDR X8, [X8 + 0xC0]
	0x026FE780 SUB X3, X29, 0x20
	0x026FE784 MOV X0, X19
	0x026FE788 MOV X2, X22
	0x026FE78C LDR X1, [X8 + 0x88]
	0x026FE790 LDUR W8, [X29 - 0x24]
	0x026FE794 MOV X4, X27
	0x026FE798 STUR W8, [X29 - 0xC]
	0x026FE79C SUB X8, X29, 0xC
	0x026FE7A0 STP X8, X27, [X29 - 0x20]
	0x026FE7A4 LDR X8, [X1 + 0x10]
	0x026FE7A8 BLR X8
	0x026FE7AC LDR X8, [X20 + 0x20]
	0x026FE7B0 LDR X21, [X23 + 0x10]
	0x026FE7B4 ADD X9, X8, 0x135
	0x026FE7B8 LDRH W9, [X9]
	0x026FE7BC TBNZ X9, 0x0, 0x26FE7D8
	0x026FE7C0 MOV X0, X8
	0x026FE7C4 BL 0x1C5C684
	0x026FE7C8 LDR X8, [X20 + 0x20]
	0x026FE7CC ADD X9, X8, 0x135
	0x026FE7D0 LDRH W9, [X9]
	0x026FE7D4 B 0x26FE7DC
	0x026FE7D8 MOV X0, X8
	0x026FE7DC LDR X10, [X0 + 0xC0]
	0x026FE7E0 LDR X10, [X10 + 0x60]
	0x026FE7E4 LDR X19, [X10]
	0x026FE7E8 TBNZ X9, 0x0, 0x26FE7F8
	0x026FE7EC MOV X0, X8
	0x026FE7F0 BL 0x1C5C684
	0x026FE7F4 MOV X8, X0
	0x026FE7F8 LDR X8, [X8 + 0xC0]
	0x026FE7FC LDUR X0, [X29 - 0x30]
	0x026FE800 LDR X1, [X8 + 0x60]
	0x026FE804 BLR X19
	0x026FE808 CBZ X21, 0x26FEAF0
	0x026FE80C ADRP X8, 0x1A1F000
	0x026FE810 LDR X8, [X8 + 0x8B0]
	0x026FE814 LDUR W2, [X29 - 0x24]
	0x026FE818 MOV W1, W0
	0x026FE81C MOV X0, X21
	0x026FE820 LDR X3, [X8]
	0x026FE824 BL 0x2A0A330
	0x026FE828 MOV X0, X24
	0x026FE82C MOV X1, X26
	0x026FE830 MOV X2, X25
	0x026FE834 BL 0x3EB1AC0
	0x026FE838 LDR X8, [X20 + 0x20]
	0x026FE83C ADD X9, X8, 0x135
	0x026FE840 LDRH W9, [X9]
	0x026FE844 TBNZ X9, 0x0, 0x26FE860
	0x026FE848 MOV X0, X8
	0x026FE84C BL 0x1C5C684
	0x026FE850 LDR X8, [X20 + 0x20]
	0x026FE854 ADD X9, X8, 0x135
	0x026FE858 LDRH W9, [X9]
	0x026FE85C B 0x26FE864
	0x026FE860 MOV X0, X8
	0x026FE864 LDR X10, [X0 + 0xC0]
	0x026FE868 LDUR X20, [X29 - 0x40]
	0x026FE86C LDR X10, [X10 + 0x90]
	0x026FE870 LDR X19, [X10]
	0x026FE874 TBNZ X9, 0x0, 0x26FE884
	0x026FE878 MOV X0, X8
	0x026FE87C BL 0x1C5C684
	0x026FE880 MOV X8, X0
	0x026FE884 LDR X8, [X8 + 0xC0]
	0x026FE888 SUB X3, X29, 0x20
	0x026FE88C MOV X0, X19
	0x026FE890 MOV X2, X23
	0x026FE894 LDR X1, [X8 + 0x90]
	0x026FE898 STUR X24, [X29 - 0x20]
	0x026FE89C MOV X4, X24
	0x026FE8A0 LDR X8, [X1 + 0x10]
	0x026FE8A4 BLR X8
	0x026FE8A8 LDR X8, [X20 + 0x28]
	0x026FE8AC B 0x26FEAC4
	0x026FE8B0 MOV X0, X8
	0x026FE8B4 LDR X10, [X0 + 0xC0]
	0x026FE8B8 LDUR W22, [X29 - 0x34]
	0x026FE8BC LDR X10, [X10 + 0x60]
	0x026FE8C0 LDR X19, [X10]
	0x026FE8C4 TBNZ X9, 0x0, 0x26FE8D4
	0x026FE8C8 MOV X0, X8
	0x026FE8CC BL 0x1C5C684
	0x026FE8D0 MOV X8, X0
	0x026FE8D4 LDR X8, [X8 + 0xC0]
	0x026FE8D8 LDUR X0, [X29 - 0x30]
	0x026FE8DC LDR X1, [X8 + 0x60]
	0x026FE8E0 BLR X19
	0x026FE8E4 CBZ X21, 0x26FEAF0
	0x026FE8E8 ADRP X8, 0x1A1F000
	0x026FE8EC LDR X8, [X8 + 0x8A8]
	0x026FE8F0 MOV W1, W0
	0x026FE8F4 MOV X0, X21
	0x026FE8F8 LDR X2, [X8]
	0x026FE8FC BL 0x2A0B690
	0x026FE900 TBNZ X22, 0x1F, 0x26FE954
	0x026FE904 LDR X21, [X23]
	0x026FE908 CBZ X21, 0x26FEAF0
	0x026FE90C ADRP X10, 0x1A1D000
	0x026FE910 LDR X8, [X21]
	0x026FE914 LDR X10, [X10 + 0x7A0]
	0x026FE918 LDRH W9, [X8 + 0x12E]
	0x026FE91C LDR X1, [X10]
	0x026FE920 CBZ X9, 0x26FE944
	0x026FE924 LDR X10, [X8 + 0xB0]
	0x026FE928 ADD X10, X10, 0x8
	0x026FE92C LDUR X11, [X10 - 0x8]
	0x026FE930 CMP X11, X1
	0x026FE934 B.EQ 0x26FE95C
	0x026FE938 SUBS X9, X9, 0x1
	0x026FE93C ADD X10, X10, 0x10
	0x026FE940 B.NE 0x26FE92C
	0x026FE944 MOV X0, X21
	0x026FE948 MOV W2, W31
	0x026FE94C BL 0x1C5C788
	0x026FE950 B 0x26FE968
	0x026FE954 MOV W21, W31
	0x026FE958 B 0x26FE97C
	0x026FE95C LDRSW X9, [X10]
	0x026FE960 ADD X8, X8, X9, 0x4, LSL
	0x026FE964 ADD X0, X8, 0x138
	0x026FE968 LDP X8, X1, [X0]
	0x026FE96C MOV X0, X21
	0x026FE970 BLR X8
	0x026FE974 CMP W0, W22
	0x026FE978 CSET W21, GT
	0x026FE97C LDR X8, [X20 + 0x20]
	0x026FE980 LDR X19, [X23]
	0x026FE984 ADD X9, X8, 0x135
	0x026FE988 LDRH W9, [X9]
	0x026FE98C TBNZ X9, 0x0, 0x26FE9A8
	0x026FE990 MOV X0, X8
	0x026FE994 BL 0x1C5C684
	0x026FE998 LDR X8, [X20 + 0x20]
	0x026FE99C ADD X9, X8, 0x135
	0x026FE9A0 LDRH W9, [X9]
	0x026FE9A4 B 0x26FE9AC
	0x026FE9A8 MOV X0, X8
	0x026FE9AC LDR X10, [X0 + 0xC0]
	0x026FE9B0 LDR X10, [X10 + 0x60]
	0x026FE9B4 LDR X20, [X10]
	0x026FE9B8 TBNZ X9, 0x0, 0x26FE9C8
	0x026FE9BC MOV X0, X8
	0x026FE9C0 BL 0x1C5C684
	0x026FE9C4 MOV X8, X0
	0x026FE9C8 LDR X8, [X8 + 0xC0]
	0x026FE9CC LDUR X0, [X29 - 0x30]
	0x026FE9D0 LDR X1, [X8 + 0x60]
	0x026FE9D4 BLR X20
	0x026FE9D8 CBZ X19, 0x26FEAF0
	0x026FE9DC MOV W20, W0
	0x026FE9E0 TBZ X21, 0x0, 0x26FEA2C
	0x026FE9E4 ADRP X10, 0x1A1D000
	0x026FE9E8 LDR X8, [X19]
	0x026FE9EC LDR X10, [X10 + 0x7A8]
	0x026FE9F0 LDRH W9, [X8 + 0x12E]
	0x026FE9F4 LDR X1, [X10]
	0x026FE9F8 CBZ X9, 0x26FEA1C
	0x026FE9FC LDR X10, [X8 + 0xB0]
	0x026FEA00 ADD X10, X10, 0x8
	0x026FEA04 LDUR X11, [X10 - 0x8]
	0x026FEA08 CMP X11, X1
	0x026FEA0C B.EQ 0x26FEA74
	0x026FEA10 SUBS X9, X9, 0x1
	0x026FEA14 ADD X10, X10, 0x10
	0x026FEA18 B.NE 0x26FEA04
	0x026FEA1C MOVZ W2, 0x3
	0x026FEA20 MOV X0, X19
	0x026FEA24 BL 0x1C5C788
	0x026FEA28 B 0x26FEA84
	0x026FEA2C ADRP X10, 0x1A1D000
	0x026FEA30 LDR X8, [X19]
	0x026FEA34 LDR X10, [X10 + 0x7A0]
	0x026FEA38 LDRH W9, [X8 + 0x12E]
	0x026FEA3C LDR X1, [X10]
	0x026FEA40 CBZ X9, 0x26FEA64
	0x026FEA44 LDR X10, [X8 + 0xB0]
	0x026FEA48 ADD X10, X10, 0x8
	0x026FEA4C LDUR X11, [X10 - 0x8]
	0x026FEA50 CMP X11, X1
	0x026FEA54 B.EQ 0x26FEA9C
	0x026FEA58 SUBS X9, X9, 0x1
	0x026FEA5C ADD X10, X10, 0x10
	0x026FEA60 B.NE 0x26FEA4C
	0x026FEA64 MOVZ W2, 0x2
	0x026FEA68 MOV X0, X19
	0x026FEA6C BL 0x1C5C788
	0x026FEA70 B 0x26FEAAC
	0x026FEA74 LDR W9, [X10]
	0x026FEA78 ADD W9, W9, 0x3
	0x026FEA7C ADD X8, X8, W9, 0x4, SXTW
	0x026FEA80 ADD X0, X8, 0x138
	0x026FEA84 LDP X8, X3, [X0]
	0x026FEA88 MOV X0, X19
	0x026FEA8C MOV W1, W22
	0x026FEA90 MOV W2, W20
	0x026FEA94 BLR X8

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move [X31+12], W2
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X23+40]
	017 Move X21, 0x1CDD000
	018 Move X20, X3
	019 Move X19, X1
	020 Move [X31+104], X8
	021 Move W8, [X21+1444]
	022 Move X22, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {56}
	027 Move X0, 0x1A20000
	028 Move X0, [X0+2264]
	029 Call 0x1C17CF4
	030 Move X0, 0x1A20000
	031 Move X0, [X0+2272]
	032 Call 0x1C17CF4
	033 Move X0, 0x1A20000
	034 Move X0, [X0+2280]
	035 Call 0x1C17CF4
	036 Move X0, 0x1A00000
	037 Move X0, [X0+2136]
	038 Call 0x1C17CF4
	039 Move X0, 0x1A20000
	040 Move X0, [X0+2232]
	041 Call 0x1C17CF4
	042 Move X0, 0x1A1E000
	043 Move X0, [X0+1952]
	044 Call 0x1C17CF4
	045 Move X0, 0x19F6000
	046 Move X0, [X0+3584]
	047 Call 0x1C17CF4
	048 Move X0, 0x19F6000
	049 Move X0, [X0+3608]
	050 Call 0x1C17CF4
	051 Move X0, 0x19F7000
	052 Move X0, [X0+3600]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X21+1444], W8
	056 Move [X31+24], X31
	057 Compare X19, 0
	058 JumpIfEqual {580}
	059 Move X0, [X20+32]
	060 Move W8, [X0+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {66}
	065 Call 0x1C5D684
	066 Move X8, [X0+192]
	067 Move X1, [X8+184]
	068 Move W8, [X1+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {76}
	073 Move X0, X1
	074 Call 0x1C5D684
	075 Move X1, X0
	076 Move X8, [X19]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move X0, X19
	087 Move W2, W31
	088 Call 0x1C5D788
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Add X8, X8, X9
	091 Add X0, X8, 312
	092 Move X8, [X0]
	093 Move X1, [X0+8]
	094 Move X0, X19
	095 Move [X31], X23
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X19, X0
	098 Compare X0, 0
	099 JumpIfEqual {637}
	100 Move X28, 0x19F6000
	101 Move X29, 0x1A00000
	102 Move X21, 0x19F7000
	103 Move X28, [X28+3608]
	104 Move X29, [X29+2136]
	105 Move X21, [X21+3600]
	106 Add X8, X31, 32
	107 Or X8, X8, 7
	108 Move [X31+16], X8
	109 Move X8, [X19]
	110 Move X1, [X28]
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Compare X9, 0
	113 JumpIfEqual {120}
	114 Move X10, [X8+176]
	115 Add X10, X10, 8
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Subtract X9, X9, 1
	119 Add X10, X10, 16
	120 Move X0, X19
	121 Move W2, W31
	122 Call 0x1C5D788
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Add X8, X8, X9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X1, [X0+8]
	128 Move X0, X19
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {550}
	134 Move X0, [X20+32]
	135 Move W8, [X0+309]
	136 Move TEMP, X8
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {141}
	140 Call 0x1C5D684
	141 Move X8, [X0+192]
	142 Move X1, [X8+200]
	143 Move W8, [X1+309]
	144 Move TEMP, X8
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfEqual {151}
	148 Move X0, X1
	149 Call 0x1C5D684
	150 Move X1, X0
	151 Move X8, [X19]
	152 NotImplemented "Instruction LDRH not yet implemented."
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move X0, X19
	162 Move W2, W31
	163 Call 0x1C5D788
	164 NotImplemented "Instruction LDRSW not yet implemented."
	165 Add X8, X8, X9
	166 Add X0, X8, 312
	167 Move X9, [X0]
	168 Move X1, [X0+8]
	169 Add X8, X31, 32
	170 Move X0, X19
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X9, [X31+16]
	173 Move W24, [X31+32]
	174 Move X23, [X31+48]
	175 Move X8, [X9]
	176 Move W9, [X9+8]
	177 Move [X31+88], X8
	178 Move [X31+96], W9
	179 Move X0, [X20+32]
	180 Move X25, [X22+8]
	181 Move W8, [X0+309]
	182 Move TEMP, X8
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfEqual {187}
	186 Call 0x1C5D684
	187 Move X8, [X31+88]
	188 Move W9, [X31+96]
	189 Move [X31+72], X8
	190 Move [X31+80], W9
	191 Compare X25, 0
	192 JumpIfEqual {631}
	193 Move X8, [X31+72]
	194 Move W9, [X31+80]
	195 Move [X31+56], X8
	196 Move [X31+64], W9
	197 Move X0, [X20+32]
	198 Move W8, [X0+309]
	199 Move TEMP, X8
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfEqual {204}
	203 Call 0x1C5D684
	204 Move X8, [X0+192]
	205 Move W9, [X31+64]
	206 Move X10, [X31+56]
	207 Move X3, [X8+216]
	208 Move X8, [X31+16]
	209 Move [X31+32], W24
	210 Move [X8+8], W9
	211 Move [X8], X10
	212 Move [X31+48], X23
	213 Add X2, X31, 32
	214 Move X0, X25
	215 Move W1, W24
	216 Call Dictionary`2<Int32, TreeViewItemData`1<Object>>.Add, X0, X1, X2
	217 Move W8, [X31+12]
	218 Move TEMP, X8
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfNotEqual {257}
	222 Move X0, [X20+32]
	223 Move X25, [X22]
	224 Move W8, [X0+309]
	225 Move TEMP, X8
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfEqual {230}
	229 Call 0x1C5D684
	230 Compare X25, 0
	231 JumpIfEqual {635}
	232 Move X8, [X25]
	233 Move X10, 0x1A1E000
	234 NotImplemented "Instruction LDRH not yet implemented."
	235 Move X10, [X10+1952]
	236 Move X1, [X10]
	237 Compare X9, 0
	238 JumpIfEqual {245}
	239 Move X10, [X8+176]
	240 Add X10, X10, 8
	241 NotImplemented "Instruction LDUR not yet implemented."
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Subtract X9, X9, 1
	244 Add X10, X10, 16
	245 Move W2, 2
	246 Move X0, X25
	247 Call 0x1C5D788
	248 Move W9, [X10]
	249 Add W9, W9, 2
	250 Add X8, X8, W9
	251 Add X0, X8, 312
	252 Move X8, [X0]
	253 Move X2, [X0+8]
	254 Move X0, X25
	255 Move W1, W24
	256 NotImplemented "Instruction BLR not yet implemented."
	257 Move X0, [X20+32]
	258 Move W8, [X0+309]
	259 Move TEMP, X8
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfEqual {264}
	263 Call 0x1C5D684
	264 Compare X23, 0
	265 JumpIfEqual {109}
	266 Move X0, [X20+32]
	267 Move X25, [X22+24]
	268 Move W8, [X0+309]
	269 Move TEMP, X8
	270 And TEMP, TEMP, 1
	271 Compare TEMP, 1
	272 JumpIfEqual {274}
	273 Call 0x1C5D684
	274 Compare X25, 0
	275 JumpIfEqual {632}
	276 Move X8, 0x1A20000
	277 Move X8, [X8+2232]
	278 Move X3, [X8]
	279 Add X2, X31, 24
	280 Move X0, X25
	281 Move W1, W24
	282 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	283 Move TEMP, X0
	284 And TEMP, TEMP, 1
	285 Compare TEMP, 1
	286 JumpIfEqual {316}
	287 Move X0, [X20+32]
	288 Move X25, [X22+24]
	289 Move W8, [X0+309]
	290 Move TEMP, X8
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfEqual {295}
	294 Call 0x1C5D684
	295 Move X8, 0x1A20000
	296 Move X8, [X8+2272]
	297 Move X0, [X8]
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {302}
	301 Call 0x1C17DFC
	302 Move X8, 0x1A20000
	303 Move X8, [X8+2264]
	304 Move X0, [X8]
	305 Call CollectionPool`2<Object, Int32>.Get
	306 Move X2, X0
	307 Move [X31+24], X0
	308 Compare X25, 0
	309 JumpIfEqual {636}
	310 Move X8, 0x1A20000
	311 Move X8, [X8+2280]
	312 Move X3, [X8]
	313 Move X0, X25
	314 Move W1, W24
	315 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	316 Move X0, [X20+32]
	317 Add X8, X0, 309
	318 NotImplemented "Instruction LDRH not yet implemented."
	319 Move TEMP, X8
	320 And TEMP, TEMP, 1
	321 Compare TEMP, 1
	322 JumpIfEqual {327}
	323 Call 0x1C5D684
	324 Move X0, [X20+32]
	325 Add X8, X0, 309
	326 NotImplemented "Instruction LDRH not yet implemented."
	327 Move TEMP, X8
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfEqual {332}
	331 Call 0x1C5D684
	332 Move X8, [X0+192]
	333 Move X1, [X8+184]
	334 Move W8, [X1+309]
	335 Move TEMP, X8
	336 And TEMP, TEMP, 1
	337 Compare TEMP, 1
	338 JumpIfEqual {342}
	339 Move X0, X1
	340 Call 0x1C5D684
	341 Move X1, X0
	342 Move X8, [X23]
	343 NotImplemented "Instruction LDRH not yet implemented."
	344 Compare X9, 0
	345 JumpIfEqual {352}
	346 Move X10, [X8+176]
	347 Add X10, X10, 8
	348 NotImplemented "Instruction LDUR not yet implemented."
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Subtract X9, X9, 1
	351 Add X10, X10, 16
	352 Move X0, X23
	353 Move W2, W31
	354 Call 0x1C5D788
	355 NotImplemented "Instruction LDRSW not yet implemented."
	356 Add X8, X8, X9
	357 Add X0, X8, 312
	358 Move X8, [X0]
	359 Move X1, [X0+8]
	360 Move X0, X23
	361 NotImplemented "Instruction BLR not yet implemented."
	362 Move X25, X0
	363 Compare X0, 0
	364 JumpIfEqual {540}
	365 Move X8, [X25]
	366 Move X1, [X28]
	367 NotImplemented "Instruction LDRH not yet implemented."
	368 Compare X9, 0
	369 JumpIfEqual {376}
	370 Move X10, [X8+176]
	371 Add X10, X10, 8
	372 NotImplemented "Instruction LDUR not yet implemented."
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Subtract X9, X9, 1
	375 Add X10, X10, 16
	376 Move X0, X25
	377 Move W2, W31
	378 Call 0x1C5D788
	379 NotImplemented "Instruction LDRSW not yet implemented."
	380 Add X8, X8, X9
	381 Add X0, X8, 312
	382 Move X8, [X0]
	383 Move X1, [X0+8]
	384 Move X0, X25
	385 NotImplemented "Instruction BLR not yet implemented."
	386 Move TEMP, X0
	387 And TEMP, TEMP, 1
	388 Compare TEMP, 1
	389 JumpIfNotEqual {483}
	390 Move X0, [X20+32]
	391 Move W8, [X0+309]
	392 Move TEMP, X8
	393 And TEMP, TEMP, 1
	394 Compare TEMP, 1
	395 JumpIfEqual {397}
	396 Call 0x1C5D684
	397 Move X8, [X0+192]
	398 Move X1, [X8+200]
	399 Move W8, [X1+309]
	400 Move TEMP, X8
	401 And TEMP, TEMP, 1
	402 Compare TEMP, 1
	403 JumpIfEqual {407}
	404 Move X0, X1
	405 Call 0x1C5D684
	406 Move X1, X0
	407 Move X8, [X25]
	408 NotImplemented "Instruction LDRH not yet implemented."
	409 Compare X9, 0
	410 JumpIfEqual {417}
	411 Move X10, [X8+176]
	412 Add X10, X10, 8
	413 NotImplemented "Instruction LDUR not yet implemented."
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Subtract X9, X9, 1
	416 Add X10, X10, 16
	417 Move X0, X25
	418 Move W2, W31
	419 Call 0x1C5D788
	420 NotImplemented "Instruction LDRSW not yet implemented."
	421 Add X8, X8, X9
	422 Add X0, X8, 312
	423 Move X9, [X0]
	424 Move X1, [X0+8]
	425 Add X8, X31, 32
	426 Move X0, X25
	427 NotImplemented "Instruction BLR not yet implemented."
	428 Move X0, [X20+32]
	429 Move W26, [X31+32]
	430 Move X27, [X22+16]
	431 Add X8, X0, 309
	432 NotImplemented "Instruction LDRH not yet implemented."
	433 Move TEMP, X8
	434 And TEMP, TEMP, 1
	435 Compare TEMP, 1
	436 JumpIfEqual {441}
	437 Call 0x1C5D684
	438 Move X0, [X20+32]
	439 Add X8, X0, 309
	440 NotImplemented "Instruction LDRH not yet implemented."
	441 Move TEMP, X8
	442 And TEMP, TEMP, 1
	443 Compare TEMP, 1
	444 JumpIfEqual {446}
	445 Call 0x1C5D684
	446 Compare X27, 0
	447 JumpIfEqual {538}
	448 Move X3, [X29]
	449 Move X0, X27
	450 Move W1, W26
	451 Move W2, W24
	452 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	453 Move X0, [X20+32]
	454 Move X27, [X31+24]
	455 Move W8, [X0+309]
	456 Move TEMP, X8
	457 And TEMP, TEMP, 1
	458 Compare TEMP, 1
	459 JumpIfEqual {461}
	460 Call 0x1C5D684
	461 Compare X27, 0
	462 JumpIfEqual {539}
	463 Move W10, [X27+28]
	464 Move X8, [X27+16]
	465 Move X9, [X21]
	466 Add W10, W10, 1
	467 Move [X27+28], W10
	468 Compare X8, 0
	469 JumpIfEqual {537}
	470 NotImplemented "Instruction LDRSW not yet implemented."
	471 Move W11, [X8+24]
	472 NotImplemented "Instruction CMP not yet implemented."
	473 Add W9, W10, 1
	474 Add X8, X8, X10
	475 Move [X27+24], W9
	476 Move [X8+32], W26
	477 Move X8, [X9+32]
	478 Move X8, [X8+192]
	479 Move X2, [X8+112]
	480 Move X0, X27
	481 Move W1, W26
	482 Call List`1<Int32>.AddWithResize, X0, X1
	483 Move X26, X31
	484 Move W24, 11
	485 Compare X25, 0
	486 JumpIfEqual {510}
	487 Move X8, [X25]
	488 Move X10, 0x19F6000
	489 NotImplemented "Instruction LDRH not yet implemented."
	490 Move X10, [X10+3584]
	491 Move X1, [X10]
	492 Compare X9, 0
	493 JumpIfEqual {500}
	494 Move X10, [X8+176]
	495 Add X10, X10, 8
	496 NotImplemented "Instruction LDUR not yet implemented."
	497 NotImplemented "Instruction CMP not yet implemented."
	498 Subtract X9, X9, 1
	499 Add X10, X10, 16
	500 Move X0, X25
	501 Move W2, W31
	502 Call 0x1C5D788
	503 NotImplemented "Instruction LDRSW not yet implemented."
	504 Add X8, X8, X9
	505 Add X0, X8, 312
	506 Move X8, [X0]
	507 Move X1, [X0+8]
	508 Move X0, X25
	509 NotImplemented "Instruction BLR not yet implemented."
	510 Compare X26, 0
	511 JumpIfNotEqual {633}
	512 NotImplemented "Instruction CMP not yet implemented."
	513 Compare W24, 0
	514 JumpIfNotEqual {550}
	515 Move X0, [X20+32]
	516 Add X8, X0, 309
	517 NotImplemented "Instruction LDRH not yet implemented."
	518 Move TEMP, X8
	519 And TEMP, TEMP, 1
	520 Compare TEMP, 1
	521 JumpIfEqual {526}
	522 Call 0x1C5D684
	523 Move X0, [X20+32]
	524 Add X8, X0, 309
	525 NotImplemented "Instruction LDRH not yet implemented."
	526 Move TEMP, X8
	527 And TEMP, TEMP, 1
	528 Compare TEMP, 1
	529 JumpIfEqual {531}
	530 Call 0x1C5D684
	531 Move X8, [X0+192]
	532 Move X3, [X8+176]
	533 Move X0, X22
	534 Move X1, X23
	535 Move W2, W31
	536 Call 0x26FE0C0, X0, X1, X2
	537 Call 0x1C17F20
	538 Call 0x1C17F20
	539 Call 0x1C17F20
	540 Call 0x1C17F20
	541 Move X24, X0
	542 NotImplemented "Instruction CMP not yet implemented."
	543 Move X0, X24
	544 Call 0x3EB2AD0
	545 Move X26, [X0]
	546 Call 0x3EB2AE0
	547 Move W24, W31
	548 Compare X25, 0
	549 JumpIfNotEqual {487}
	550 Move X23, [X31]
	551 Move X20, X31
	552 Move X21, X19
	553 Compare X21, 0
	554 JumpIfEqual {578}
	555 Move X8, [X21]
	556 Move X10, 0x19F6000
	557 NotImplemented "Instruction LDRH not yet implemented."
	558 Move X10, [X10+3584]
	559 Move X1, [X10]
	560 Compare X9, 0
	561 JumpIfEqual {568}
	562 Move X10, [X8+176]
	563 Add X10, X10, 8
	564 NotImplemented "Instruction LDUR not yet implemented."
	565 NotImplemented "Instruction CMP not yet implemented."
	566 Subtract X9, X9, 1
	567 Add X10, X10, 16
	568 Move X0, X21
	569 Move W2, W31
	570 Call 0x1C5D788
	571 NotImplemented "Instruction LDRSW not yet implemented."
	572 Add X8, X8, X9
	573 Add X0, X8, 312
	574 Move X8, [X0]
	575 Move X1, [X0+8]
	576 Move X0, X21
	577 NotImplemented "Instruction BLR not yet implemented."
	578 Compare X20, 0
	579 JumpIfNotEqual {638}
	580 Move X8, [X23+40]
	581 Move X9, [X31+104]
	582 NotImplemented "Instruction CMP not yet implemented."
	583 Move X20, [X31+192]
	584 Move X19, [X31+200]
	585 Move X22, [X31+176]
	586 Move X21, [X31+184]
	587 Move X24, [X31+160]
	588 Move X23, [X31+168]
	589 Move X26, [X31+144]
	590 Move X25, [X31+152]
	591 Move X28, [X31+128]
	592 Move X27, [X31+136]
	593 Move X29, [X31+112]
	594 Move X30, [X31+120]
	595 Add X31, X31, 208
	596 Return 
	597 Move X20, X1
	598 Move X26, X31
	599 Compare X25, 0
	600 JumpIfEqual {624}
	601 Move X8, [X25]
	602 Move X10, 0x19F6000
	603 NotImplemented "Instruction LDRH not yet implemented."
	604 Move X10, [X10+3584]
	605 Move X1, [X10]
	606 Compare X9, 0
	607 JumpIfEqual {614}
	608 Move X10, [X8+176]
	609 Add X10, X10, 8
	610 NotImplemented "Instruction LDUR not yet implemented."
	611 NotImplemented "Instruction CMP not yet implemented."
	612 Subtract X9, X9, 1
	613 Add X10, X10, 16
	614 Move X0, X25
	615 Move W2, W31
	616 Call 0x1C5D788
	617 NotImplemented "Instruction LDRSW not yet implemented."
	618 Add X8, X8, X9
	619 Add X0, X8, 312
	620 Move X8, [X0]
	621 Move X1, [X0+8]
	622 Move X0, X25
	623 NotImplemented "Instruction BLR not yet implemented."
	624 Move X23, [X31]
	625 Move X1, X20
	626 Move X21, X19
	627 Compare X26, 0
	628 JumpIfEqual {648}
	629 Move X0, X26
	630 Call 0x1C17F18
	631 Call 0x1C17F20
	632 Call 0x1C17F20
	633 Move X0, X26
	634 Call 0x1C17F18
	635 Call 0x1C17F20
	636 Call 0x1C17F20
	637 Call 0x1C17F20
	638 Move X0, X20
	639 Call 0x1C17F18
	640 Call 0x3EB2B20
	641 Move X20, X1
	642 Move X24, X0
	643 Compare X25, 0
	644 JumpIfNotEqual {601}
	645 Move X23, [X31]
	646 Move X24, X0
	647 Move X21, X19
	648 NotImplemented "Instruction CMP not yet implemented."
	649 Move X0, X24
	650 Call 0x3EB2AD0
	651 Move X20, [X0]
	652 Call 0x3EB2AE0
	653 Move X20, X31
	654 Move X24, X0
	655 Compare X19, 0
	656 JumpIfEqual {680}
	657 Move X8, [X19]
	658 Move X10, 0x19F6000
	659 NotImplemented "Instruction LDRH not yet implemented."
	660 Move X10, [X10+3584]
	661 Move X1, [X10]
	662 Compare X9, 0
	663 JumpIfEqual {670}
	664 Move X10, [X8+176]
	665 Add X10, X10, 8
	666 NotImplemented "Instruction LDUR not yet implemented."
	667 NotImplemented "Instruction CMP not yet implemented."
	668 Subtract X9, X9, 1
	669 Add X10, X10, 16
	670 Move X0, X19
	671 Move W2, W31
	672 Call 0x1C5D788
	673 NotImplemented "Instruction LDRSW not yet implemented."
	674 Add X8, X8, X9
	675 Add X0, X8, 312
	676 Move X8, [X0]
	677 Move X1, [X0+8]
	678 Move X0, X19
	679 NotImplemented "Instruction BLR not yet implemented."
	680 Compare X20, 0
	681 JumpIfNotEqual {684}
	682 Move X0, X24
	683 Call 0x1D2D690
	684 Move X0, X20
	685 Call 0x1C17F18
	686 Call 0x1991590

