Type: UnityEngine.UIElements.UxmlLongAttributeDescription

Method: System.Void .ctor()

Disassembly:
	0x03E1D690 LDP X24, X23, [X31 + 0x30]
	0x03E1D694 LDP X26, X25, [X31 + 0x20]
	0x03E1D698 LDP X28, X27, [X31 + 0x10]
	0x03E1D69C LDP X29, X30, [X31], #0x60
	0x03E1D6A0 RET
	0x03E1D6A4 BL 0x1C16F20
	0x03E1D6A8 BL 0x1C16F28
	0x03E1D6AC MOV X0, X22
	0x03E1D6B0 MOV X1, X23
	0x03E1D6B4 BL 0x1C171E0
	0x03E1D6B8 SUB X31, X31, 0x70
	0x03E1D6BC STP X30, X23, [X31 + 0x40]
	0x03E1D6C0 STP X22, X21, [X31 + 0x50]
	0x03E1D6C4 STP X20, X19, [X31 + 0x60]
	0x03E1D6C8 ADRP X20, 0x5CB000
	0x03E1D6CC LDRB W8, [X20 + 0x426]
	0x03E1D6D0 MOV X19, X0
	0x03E1D6D4 TBNZ X8, 0x0, 0x3E1D764
	0x03E1D6D8 ADRP X0, 0x34D000
	0x03E1D6DC LDR X0, [X0 + 0xB10]
	0x03E1D6E0 BL 0x1C16CF4
	0x03E1D6E4 ADRP X0, 0x34D000
	0x03E1D6E8 LDR X0, [X0 + 0xB18]
	0x03E1D6EC BL 0x1C16CF4
	0x03E1D6F0 ADRP X0, 0x34D000
	0x03E1D6F4 LDR X0, [X0 + 0xB20]
	0x03E1D6F8 BL 0x1C16CF4
	0x03E1D6FC ADRP X0, 0x34D000
	0x03E1D700 LDR X0, [X0 + 0xB28]
	0x03E1D704 BL 0x1C16CF4
	0x03E1D708 ADRP X0, 0x34D000
	0x03E1D70C LDR X0, [X0 + 0xB30]
	0x03E1D710 BL 0x1C16CF4
	0x03E1D714 ADRP X0, 0x34D000
	0x03E1D718 LDR X0, [X0 + 0xB38]
	0x03E1D71C BL 0x1C16CF4
	0x03E1D720 ADRP X0, 0x34D000
	0x03E1D724 LDR X0, [X0 + 0xB40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x5CC000
	008 Move X23, 0x34E000
	009 Move X21, 0x32A000
	010 Move X20, 0x301000
	011 Move W8, [X22+1049]
	012 Move X23, [X23+2552]
	013 Move X21, [X21+1576]
	014 Move X20, [X20+2752]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x34E000
	021 Move X0, [X0+2552]
	022 Call 0x1C17CF4
	023 Move X0, 0x34B000
	024 Move X0, [X0+1168]
	025 Call 0x1C17CF4
	026 Move X0, 0x32A000
	027 Move X0, [X0+1576]
	028 Call 0x1C17CF4
	029 Move X0, 0x301000
	030 Move X0, [X0+2752]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+1049], W8
	034 Move X1, [X23]
	035 Move X0, X19
	036 Call TypedUxmlAttributeDescription`1<Int64>..ctor, X0
	037 Move X9, [X21]
	038 Move X8, [X20]
	039 Move [X19+64], X31
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move [X19+32], X9
	043 Move [X19+40], X8
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return 

Method: System.Int64 GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc)

Disassembly:
	0x03E1D728 BL 0x1C16CF4
	0x03E1D72C ADRP X0, 0x34D000
	0x03E1D730 LDR X0, [X0 + 0xB48]
	0x03E1D734 BL 0x1C16CF4
	0x03E1D738 ADRP X0, 0x34D000
	0x03E1D73C LDR X0, [X0 + 0xB50]
	0x03E1D740 BL 0x1C16CF4
	0x03E1D744 ADRP X0, 0x34D000
	0x03E1D748 LDR X0, [X0 + 0xB58]
	0x03E1D74C BL 0x1C16CF4
	0x03E1D750 ADRP X0, 0x2D6000
	0x03E1D754 LDR X0, [X0 + 0x6C0]
	0x03E1D758 BL 0x1C16CF4
	0x03E1D75C MOVZ W8, 0x1
	0x03E1D760 STRB W8, [X20 + 0x426]
	0x03E1D764 STP X31, X31, [X31 + 0x30]
	0x03E1D768 STP X31, X31, [X31 + 0x20]
	0x03E1D76C BL 0x3E1D110
	0x03E1D770 CBZ X19, 0x3E1DA3C
	0x03E1D774 ADRP X21, 0x34D000
	0x03E1D778 LDR X8, [X19]
	0x03E1D77C LDR X21, [X21 + 0xB38]
	0x03E1D780 MOV X20, X0
	0x03E1D784 LDRH W9, [X8 + 0x12E]
	0x03E1D788 LDR X1, [X21]
	0x03E1D78C CBZ X9, 0x3E1D7B0
	0x03E1D790 LDR X10, [X8 + 0xB0]
	0x03E1D794 ADD X10, X10, 0x8
	0x03E1D798 LDUR X11, [X10 - 0x8]
	0x03E1D79C CMP X11, X1
	0x03E1D7A0 B.EQ 0x3E1D7C0
	0x03E1D7A4 SUBS X9, X9, 0x1
	0x03E1D7A8 ADD X10, X10, 0x10
	0x03E1D7AC B.NE 0x3E1D798
	0x03E1D7B0 MOV X0, X19
	0x03E1D7B4 MOV W2, W31
	0x03E1D7B8 BL 0x1C5C788
	0x03E1D7BC B 0x3E1D7CC
	0x03E1D7C0 LDRSW X9, [X10]
	0x03E1D7C4 ADD X8, X8, X9, 0x4, LSL
	0x03E1D7C8 ADD X0, X8, 0x138
	0x03E1D7CC LDP X8, X1, [X0]
	0x03E1D7D0 MOV X0, X19
	0x03E1D7D4 BLR X8
	0x03E1D7D8 CBZ X20, 0x3E1DA3C
	0x03E1D7DC ADRP X8, 0x34D000
	0x03E1D7E0 LDR X8, [X8 + 0xB18]
	0x03E1D7E4 MOV X1, X0
	0x03E1D7E8 ADD X2, X31, 0x38
	0x03E1D7EC MOV X0, X20
	0x03E1D7F0 LDR X3, [X8]
	0x03E1D7F4 BL 0x2AA6B2C
	0x03E1D7F8 TBZ X0, 0x0, 0x3E1D8A4
	0x03E1D7FC LDR X0, [X31 + 0x38]
	0x03E1D800 CBZ X0, 0x3E1DA3C
	0x03E1D804 ADRP X8, 0x34D000
	0x03E1D808 LDR X8, [X8 + 0xB48]
	0x03E1D80C LDR X1, [X8]
	0x03E1D810 ADD X8, X31, 0x8
	0x03E1D814 BL 0x301CB58
	0x03E1D818 LDUR V0, [X31 + 0x8]
	0x03E1D81C LDR X8, [X31 + 0x18]
	0x03E1D820 ADRP X22, 0x34D000
	0x03E1D824 LDR X22, [X22 + 0xB28]
	0x03E1D828 STR V0, [X31 + 0x2]
	0x03E1D82C STR X8, [X31 + 0x30]
	0x03E1D830 ADRP X23, 0x2D6000
	0x03E1D834 LDR X23, [X23 + 0x6C0]
	0x03E1D838 LDR X1, [X22]
	0x03E1D83C ADD X0, X31, 0x20
	0x03E1D840 BL 0x2BC4350
	0x03E1D844 TBZ X0, 0x0, 0x3E1D910
	0x03E1D848 LDR X0, [X31 + 0x30]
	0x03E1D84C CBZ X0, 0x3E1DA38
	0x03E1D850 MOV X1, X31
	0x03E1D854 BL 0x33BE520
	0x03E1D858 MOV X20, X0
	0x03E1D85C MOV X0, X19
	0x03E1D860 MOV X1, X31
	0x03E1D864 BL 0x33BE520
	0x03E1D868 MOV X21, X0
	0x03E1D86C LDR X0, [X23]
	0x03E1D870 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X22, 0x5CC000
	009 Move X23, 0x34E000
	010 Move W8, [X22+1050]
	011 Move X23, [X23+2560]
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x34E000
	020 Move X0, [X0+2568]
	021 Call 0x1C17CF4
	022 Move X0, 0x34E000
	023 Move X0, [X0+2576]
	024 Call 0x1C17CF4
	025 Move X0, 0x34E000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move X0, 0x34E000
	029 Move X0, [X0+2560]
	030 Call 0x1C17CF4
	031 Move X0, 0x34E000
	032 Move X0, [X0+2592]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+1050], W8
	036 Move V1, [X21]
	037 Move V0, [X21+16]
	038 Move X0, [X23]
	039 Move [X31+64], V1
	040 Move [X31+72], V0
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X23]
	046 Move X8, [X0+184]
	047 Move X21, [X8+8]
	048 Compare X21, 0
	049 JumpIfEqual {52}
	050 Move V0, [X31+64]
	051 Move V1, [X31+80]
	052 Move V0, [X31+64]
	053 Move V1, [X31+80]
	054 Move [X31], V0
	055 Move [X31+8], V1
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X23]
	061 Move X9, 0x34E000
	062 Move X8, [X0+184]
	063 Move X9, [X9+2568]
	064 Move X22, [X8]
	065 Move X0, [X9]
	066 Call 0x1C17F10
	067 Move X8, 0x34E000
	068 Move X8, [X8+2584]
	069 Move X1, X22
	070 Move X3, X31
	071 Move X21, X0
	072 Move X2, [X8]
	073 Call Func`3<Object, Int64, Int64>..ctor, X0, X1, X2
	074 Move X8, [X23]
	075 Move X8, [X8+184]
	076 Move [X8+8], X21
	077 Move V0, [X31]
	078 Move V1, [X31+16]
	079 Move [X31+32], V0
	080 Move [X31+40], V1
	081 Compare X20, 0
	082 JumpIfEqual {104}
	083 Move X8, 0x34E000
	084 Move X8, [X8+2592]
	085 Move X4, [X20+64]
	086 Move V0, [X31+32]
	087 Move V1, [X31+48]
	088 Add X2, X31, 64
	089 Move X5, [X8]
	090 Move X0, X20
	091 Move X1, X19
	092 Move X3, X21
	093 Move [X31+64], V0
	094 Move [X31+72], V1
	095 Call UxmlAttributeDescription.GetValueFromBag, X0, X1, X2, X3, X4
	096 Move X20, [X31+128]
	097 Move X19, [X31+136]
	098 Move X22, [X31+112]
	099 Move X21, [X31+120]
	100 Move X30, [X31+96]
	101 Move X23, [X31+104]
	102 Add X31, X31, 144
	103 Return X0
	104 Call 0x1C17F20

Method: System.Int64 ConvertValueToLong(System.String v, System.Int64 defaultValue)

Disassembly:
	0x03E1D874 CBNZ W8, 0x3E1D87C
	0x03E1D878 BL 0x1C16DFC
	0x03E1D87C MOV X0, X20
	0x03E1D880 MOV X1, X21
	0x03E1D884 MOV X2, X31
	0x03E1D888 BL 0x3395194
	0x03E1D88C TBZ X0, 0x0, 0x3E1D838
	0x03E1D890 MOV X0, X19
	0x03E1D894 MOV X1, X31
	0x03E1D898 BL 0x33BE520
	0x03E1D89C CBNZ X0, 0x3E1DA40
	0x03E1D8A0 BL 0x1C16F20
	0x03E1D8A4 ADRP X8, 0x34D000
	0x03E1D8A8 LDR X8, [X8 + 0xB58]
	0x03E1D8AC LDR X0, [X8]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move [X31+8], X31
	006 Compare X0, 0
	007 JumpIfEqual {14}
	008 Add X1, X31, 8
	009 Move X2, X31
	010 Call Int64.TryParse, X0, X1
	011 Move X8, [X31+8]
	012 And W31, W0, 1
	013 NotImplemented "Instruction CSEL not yet implemented."
	014 Move X0, X19
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Add X31, X31, 32
	018 Return X0

