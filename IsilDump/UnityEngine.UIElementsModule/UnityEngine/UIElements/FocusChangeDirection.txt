Type: UnityEngine.UIElements.FocusChangeDirection

Method: UnityEngine.UIElements.FocusChangeDirection get_unspecified()

Disassembly:
	0x03DB0530 LDUR X11, [X10 - 0x8]
	0x03DB0534 CMP X11, X1
	0x03DB0538 B.EQ 0x3DB0558
	0x03DB053C SUBS X9, X9, 0x1
	0x03DB0540 ADD X10, X10, 0x10
	0x03DB0544 B.NE 0x3DB0530
	0x03DB0548 MOV X0, X19
	0x03DB054C MOV W2, W31
	0x03DB0550 BL 0x1C5C788
	0x03DB0554 B 0x3DB0564
	0x03DB0558 LDRSW X9, [X10]
	0x03DB055C ADD X8, X8, X9, 0x4, LSL
	0x03DB0560 ADD X0, X8, 0x138
	0x03DB0564 LDP X8, X1, [X0]
	0x03DB0568 MOV X0, X19
	0x03DB056C BLR X8
	0x03DB0570 CBNZ X20, 0x3DB057C
	0x03DB0574 MOV X0, X21
	0x03DB0578 BL 0x1D2C690
	0x03DB057C MOV X0, X20
	0x03DB0580 BL 0x1C16F18
	0x03DB0584 BL 0x1990590

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x638000
	005 Move X19, 0x36F000
	006 Move W8, [X20+4095]
	007 Move X19, [X19+3504]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x36F000
	013 Move X0, [X0+3504]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+4095], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.UIElements.FocusChangeDirection get_none()

Disassembly:
	0x03DB0588 STP X30, X25, [X31 - 0x40]!
	0x03DB058C STP X24, X23, [X31 + 0x10]
	0x03DB0590 STP X22, X21, [X31 + 0x20]
	0x03DB0594 STP X20, X19, [X31 + 0x30]
	0x03DB0598 ADRP X25, 0x638000
	0x03DB059C ADRP X24, 0x3B8000
	0x03DB05A0 LDRB W8, [X25 + 0xE]
	0x03DB05A4 LDR X24, [X24 + 0xC60]
	0x03DB05A8 MOV W20, W4
	0x03DB05AC MOV X19, X3
	0x03DB05B0 MOV X23, X2
	0x03DB05B4 MOV X21, X1
	0x03DB05B8 MOV X22, X0
	0x03DB05BC TBNZ X8, 0x0, 0x3DB05E0
	0x03DB05C0 ADRP X0, 0x3B8000
	0x03DB05C4 LDR X0, [X0 + 0xC60]
	0x03DB05C8 BL 0x1C16CF4
	0x03DB05CC ADRP X0, 0x343000
	0x03DB05D0 LDR X0, [X0 + 0xE00]
	0x03DB05D4 BL 0x1C16CF4
	0x03DB05D8 MOVZ W8, 0x1
	0x03DB05DC STRB W8, [X25 + 0xE]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x639000
	005 Move X19, 0x36F000
	006 Move W8, [X20]
	007 Move X19, [X19+3504]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x36F000
	013 Move X0, [X0+3504]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.UIElements.FocusChangeDirection get_lastValue()

Disassembly:
	0x03DB05E0 LDR X5, [X24]
	0x03DB05E4 ADRP X24, 0x343000
	0x03DB05E8 LDR X24, [X24 + 0xE00]
	0x03DB05EC MOV X0, X21
	0x03DB05F0 MOV X1, X23
	0x03DB05F4 MOV X2, X19
	0x03DB05F8 MOV X3, X22
	0x03DB05FC MOV W4, W31
	0x03DB0600 BL 0x2D234C0
	0x03DB0604 MOV X19, X0
	0x03DB0608 CBZ X21, 0x3DB069C
	0x03DB060C LDR X8, [X21]
	0x03DB0610 LDP X9, X3, [X8 + 0x1A8]
	0x03DB0614 MOV X0, X21
	0x03DB0618 MOV X1, X19
	0x03DB061C MOV W2, W20
	0x03DB0620 BLR X9
	0x03DB0624 MOV X20, X31
	0x03DB0628 CBZ X19, 0x3DB0684
	0x03DB062C LDR X8, [X19]
	0x03DB0630 LDR X1, [X24]
	0x03DB0634 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x639000
	005 Move X19, 0x36F000
	006 Move W8, [X20+1]
	007 Move X19, [X19+3504]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x36F000
	013 Move X0, [X0+3504]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+16]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void .ctor(System.Int32 value)

Disassembly:
	0x03DB0638 CBZ X9, 0x3DB065C
	0x03DB063C LDR X10, [X8 + 0xB0]
	0x03DB0640 ADD X10, X10, 0x8
	0x03DB0644 LDUR X11, [X10 - 0x8]
	0x03DB0648 CMP X11, X1
	0x03DB064C B.EQ 0x3DB066C
	0x03DB0650 SUBS X9, X9, 0x1
	0x03DB0654 ADD X10, X10, 0x10
	0x03DB0658 B.NE 0x3DB0644
	0x03DB065C MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Int32 op_Implicit(UnityEngine.UIElements.FocusChangeDirection fcd)

Disassembly:
	0x03DB0660 MOV W2, W31
	0x03DB0664 BL 0x1C5C788
	0x03DB0668 B 0x3DB0678

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {4}
	003 Move W0, [X0+16]
	004 Return X0

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03DB066C LDRSW X9, [X10]
	0x03DB0670 ADD X8, X8, X9, 0x4, LSL
	0x03DB0674 ADD X0, X8, 0x138

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+392]
	003 Move X1, [X8+400]
	004 CallNoReturn X2

Method: System.Void Dispose()

Disassembly:
	0x03DB0678 LDP X8, X1, [X0]

ISIL:
	001 Return 

Method: System.Void ApplyTo(UnityEngine.UIElements.FocusController focusController, UnityEngine.UIElements.Focusable f)

Disassembly:
	0x03DB067C MOV X0, X19
	0x03DB0680 BLR X8
	0x03DB0684 CBNZ X20, 0x3DB06A0
	0x03DB0688 LDP X20, X19, [X31 + 0x30]
	0x03DB068C LDP X22, X21, [X31 + 0x20]
	0x03DB0690 LDP X24, X23, [X31 + 0x10]
	0x03DB0694 LDP X30, X25, [X31], #0x40
	0x03DB0698 RET
	0x03DB069C BL 0x1C16F20
	0x03DB06A0 MOV X0, X20

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {9}
	003 Move X8, X0
	004 Move W4, 1
	005 Move X0, X1
	006 Move X1, X2
	007 Move X2, X8
	008 Move W3, W31
	009 Move [X31-16], X30
	010 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03DB0938 MOV X23, X2
	0x03DB093C MOV X21, X1
	0x03DB0940 MOV X22, X0
	0x03DB0944 TBNZ X8, 0x0, 0x3DB0968
	0x03DB0948 ADRP X0, 0x3B8000
	0x03DB094C LDR X0, [X0 + 0xC70]
	0x03DB0950 BL 0x1C16CF4
	0x03DB0954 ADRP X0, 0x343000
	0x03DB0958 LDR X0, [X0 + 0xE00]
	0x03DB095C BL 0x1C16CF4
	0x03DB0960 MOVZ W8, 0x1
	0x03DB0964 STRB W8, [X26 + 0x10]
	0x03DB0968 LDR X5, [X25]
	0x03DB096C ADRP X25, 0x343000
	0x03DB0970 LDR X25, [X25 + 0xE00]
	0x03DB0974 AND W4, W24, 0x1
	0x03DB0978 MOV X0, X21
	0x03DB097C MOV X1, X23
	0x03DB0980 MOV X2, X19
	0x03DB0984 MOV X3, X22
	0x03DB0988 BL 0x2D234C0
	0x03DB098C MOV X19, X0
	0x03DB0990 CBZ X21, 0x3DB0A28
	0x03DB0994 LDR X8, [X21]
	0x03DB0998 LDP X9, X3, [X8 + 0x1A8]
	0x03DB099C MOV X0, X21
	0x03DB09A0 MOV X1, X19
	0x03DB09A4 MOV W2, W20
	0x03DB09A8 BLR X9
	0x03DB09AC MOV X20, X31
	0x03DB09B0 CBZ X19, 0x3DB0A0C
	0x03DB09B4 LDR X8, [X19]
	0x03DB09B8 LDR X1, [X25]
	0x03DB09BC LDRH W9, [X8 + 0x12E]
	0x03DB09C0 CBZ X9, 0x3DB09E4
	0x03DB09C4 LDR X10, [X8 + 0xB0]
	0x03DB09C8 ADD X10, X10, 0x8
	0x03DB09CC LDUR X11, [X10 - 0x8]
	0x03DB09D0 CMP X11, X1
	0x03DB09D4 B.EQ 0x3DB09F4
	0x03DB09D8 SUBS X9, X9, 0x1
	0x03DB09DC ADD X10, X10, 0x10
	0x03DB09E0 B.NE 0x3DB09CC
	0x03DB09E4 MOV X0, X19
	0x03DB09E8 MOV W2, W31
	0x03DB09EC BL 0x1C5C788
	0x03DB09F0 B 0x3DB0A00
	0x03DB09F4 LDRSW X9, [X10]
	0x03DB09F8 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x639000
	005 Move X19, 0x36F000
	006 Move W8, [X20+2]
	007 Move X19, [X19+3504]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x36F000
	013 Move X0, [X0+3504]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2], W8
	017 Move X0, [X19]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X20, X0
	021 Call Object..ctor, X0
	022 Move TEMP, 0
	023 Not TEMP
	024 Move W8, TEMP
	025 Move [X20+16], W8
	026 Move X8, [X19]
	027 Move X8, [X8+184]
	028 Move [X8], X20
	029 Move X0, [X19]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X20, X0
	033 Call Object..ctor, X0
	034 Move [X20+16], W31
	035 Move X0, [X19]
	036 Move X8, [X0+184]
	037 Move [X8+8], X20
	038 Move X20, 0x638000
	039 Move W8, [X20+2736]
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, X19
	043 Call 0x1C17CF4
	044 Move X0, [X19]
	045 Move W8, 1
	046 Move [X20+2736], W8
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X19]
	052 Move X8, [X0+184]
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X9, [X8+8]
	056 Move [X8+16], X9
	057 Move X30, [X31+32]
	058 Return 

