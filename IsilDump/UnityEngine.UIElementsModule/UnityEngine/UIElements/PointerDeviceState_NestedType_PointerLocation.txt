Type: UnityEngine.UIElements.PointerDeviceState/PointerLocation

Method: UnityEngine.Vector2 get_Position()

Disassembly:
	0x03DAB1B0 ADRP X0, 0x3BD000
	0x03DAB1B4 LDR X0, [X0 + 0x7D0]

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Return X0

Method: System.Void set_Position(UnityEngine.Vector2 value)

Disassembly:
	0x03DAB1B8 BL 0x1C16CF4
	0x03DAB1BC MOVZ W8, 0x1

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Return 

Method: UnityEngine.UIElements.IPanel get_Panel()

Disassembly:
	0x03DAB1C0 STRB W8, [X19 + 0xF9A]
	0x03DAB1C4 LDR X0, [X20]

ISIL:
	001 Move X0, [X0+8]
	002 Return X0

Method: System.Void set_Panel(UnityEngine.UIElements.IPanel value)

Disassembly:
	0x03DAB1C8 BL 0x1C16F10
	0x03DAB1CC MOV X1, X31

ISIL:
	001 Move [X0+8], X1
	002 Return 

Method: UnityEngine.UIElements.PointerDeviceState/LocationFlag get_Flags()

Disassembly:
	0x03DAB1D0 MOV X19, X0
	0x03DAB1D4 BL 0x33BDD8C

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_Flags(UnityEngine.UIElements.PointerDeviceState/LocationFlag value)

Disassembly:
	0x03DAB1D8 LDR X8, [X20]
	0x03DAB1DC LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: System.Void SetLocation(UnityEngine.Vector2 position, UnityEngine.UIElements.IPanel panel)

Disassembly:
	0x03DAABA0 LDR X9, [X0 + 0xB8]
	0x03DAABA4 LDR X8, [X8]
	0x03DAABA8 LDR W23, [X9 + 0x8]
	0x03DAABAC LDR W10, [X8 + 0xE0]
	0x03DAABB0 CBNZ W10, 0x3DAABBC
	0x03DAABB4 MOV X0, X8
	0x03DAABB8 BL 0x1C16DFC
	0x03DAABBC MOV W0, W23
	0x03DAABC0 MOV W1, W21
	0x03DAABC4 BL 0x3DA9EEC
	0x03DAABC8 TBNZ X0, 0x0, 0x3DAAC2C
	0x03DAABCC ADRP X8, 0x3BE000
	0x03DAABD0 LDR X8, [X8 + 0x7C0]
	0x03DAABD4 MOV W22, W31
	0x03DAABD8 B 0x3DAAC34
	0x03DAABDC ADRP X23, 0x372000
	0x03DAABE0 LDR X23, [X23 + 0xE50]
	0x03DAABE4 LDR X0, [X23]
	0x03DAABE8 LDR W8, [X0 + 0xE0]
	0x03DAABEC CBNZ W8, 0x3DAABF8
	0x03DAABF0 BL 0x1C16DFC
	0x03DAABF4 LDR X0, [X23]
	0x03DAABF8 ADRP X8, 0x371000
	0x03DAABFC LDR X8, [X8 + 0x958]
	0x03DAAC00 LDR X9, [X0 + 0xB8]
	0x03DAAC04 LDR X8, [X8]
	0x03DAAC08 LDR W23, [X9 + 0x8]
	0x03DAAC0C LDR W10, [X8 + 0xE0]
	0x03DAAC10 CBNZ W10, 0x3DAAC1C
	0x03DAAC14 MOV X0, X8
	0x03DAAC18 BL 0x1C16DFC
	0x03DAAC1C MOV W0, W23
	0x03DAAC20 MOV W1, W21
	0x03DAAC24 BL 0x3DA9EEC
	0x03DAAC28 TBZ X0, 0x0, 0x3DAAC78
	0x03DAAC2C ADRP X8, 0x3BD000
	0x03DAAC30 LDR X8, [X8 + 0xAD0]
	0x03DAAC34 LDR X4, [X8]
	0x03DAAC38 MOV W0, W22
	0x03DAAC3C MOV V1.16B, V11.16B
	0x03DAAC40 MOV V2.16B, V10.16B
	0x03DAAC44 MOV V3.16B, V9.16B
	0x03DAAC48 MOV V4.16B, V8.16B
	0x03DAAC4C MOV W1, W21
	0x03DAAC50 MOV W2, W20
	0x03DAAC54 MOV W3, W19
	0x03DAAC58 LDP X20, X19, [X31 + 0x50]
	0x03DAAC5C LDP X22, X21, [X31 + 0x40]
	0x03DAAC60 LDP X30, X23, [X31 + 0x30]
	0x03DAAC64 LDP D9, D8, [X31 + 0x20]
	0x03DAAC68 LDP D11, D10, [X31 + 0x10]
	0x03DAAC6C MOV V0.16B, V12.16B
	0x03DAAC70 LDR V12, [X31], #0x60
	0x03DAAC74 B 0x24A4154
	0x03DAAC78 ADRP X8, 0x3BE000
	0x03DAAC7C LDR X8, [X8 + 0x7C8]
	0x03DAAC80 MOVZ W22, 0x1
	0x03DAAC84 B 0x3DAAC34
	0x03DAAC88 STP X30, X23, [X31 - 0x30]!
	0x03DAAC8C STP X22, X21, [X31 + 0x10]
	0x03DAAC90 STP X20, X19, [X31 + 0x20]
	0x03DAAC94 ADRP X20, 0x63D000
	0x03DAAC98 ADRP X19, 0x3BE000
	0x03DAAC9C LDRB W8, [X20 + 0xF95]
	0x03DAACA0 LDR X19, [X19 + 0x7D0]
	0x03DAACA4 TBNZ X8, 0x0, 0x3DAACEC

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x63E000
	008 Move W8, [X21+3979]
	009 Move X20, X1
	010 Move V9, V1
	011 Move V8, V0
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x373000
	018 Move X0, [X0+3712]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3979], W8
	022 Move [X19], S8
	023 Move [X19+8], S9
	024 Move [X19+8], X20
	025 Move [X19+16], W31
	026 Compare X20, 0
	027 JumpIfEqual {44}
	028 Move X10, 0x373000
	029 Move X8, [X20]
	030 Move X10, [X10+3712]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move X0, X20
	042 Move W2, W31
	043 Call 0x1C5D788
	044 Move W8, 1
	045 NotImplemented "Instruction LDRSW not yet implemented."
	046 Add X8, X8, X9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X1, [X0+8]
	050 Move X0, X20
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X0, 0
	053 JumpIfEqual {72}
	054 Move X1, X31
	055 Call VisualElement.get_layout, X0
	056 Add S3, S1, S3
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Add S0, S0, S2
	061 NotImplemented "Instruction FCMP not yet implemented."
	062 Move W8, [X19+16]
	063 Or W8, W8, 1
	064 Move [X19+16], W8
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X30, [X31+16]
	068 Move X21, [X31+24]
	069 Move D9, [X31+48]
	070 Move D8, [X31+56]
	071 Return 
	072 Call 0x1C17F20

