Type: UnityEngine.UIElements.FieldMouseDragger`1

Method: System.Void .ctor(UnityEngine.UIElements.IValueField`1<T> drivenField)

Disassembly:
	0x02D13A90 LDR X8, [X8 + 0xC0]
	0x02D13A94 LDR X2, [X8 + 0x28]
	0x02D13A98 BL 0x2D0E824
	0x02D13A9C CBZ X22, 0x2D13C24
	0x02D13AA0 ADRP X8, 0x140A000
	0x02D13AA4 LDR X8, [X8 + 0x798]
	0x02D13AA8 MOV X0, X22
	0x02D13AAC MOV X1, X23
	0x02D13AB0 MOV W2, W31
	0x02D13AB4 LDR X3, [X8]
	0x02D13AB8 BL 0x21A18B4
	0x02D13ABC LDR X0, [X24]
	0x02D13AC0 LDR X22, [X20 + 0x18]
	0x02D13AC4 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call BaseFieldMouseDragger..ctor, X0
	008 Move V0, 0
	009 Move [X20+24], X31
	010 Move [X20+32], X31
	011 Move [X20+16], X19
	012 Move [X20+40], D0
	013 Move [X20+48], W31
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return 

Method: System.Boolean get_dragging()

Disassembly:
	0x02D13AC8 LDR X8, [X19 + 0x20]
	0x02D13ACC MOV X1, X20

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_dragging(System.Boolean value)

Disassembly:
	0x02D13AD0 MOV X3, X31
	0x02D13AD4 MOV X23, X0
	0x02D13AD8 LDR X8, [X8 + 0xC0]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+48], W8
	003 Return 

Method: T get_startValue()

Disassembly:
	0x02D13ADC LDR X2, [X8 + 0x30]
	0x02D13AE0 BL 0x2D0E824

ISIL:
	001 Move V0, [X0+56]
	002 Return X0

Method: System.Void set_startValue(T value)

Disassembly:
	0x02D13AE4 CBZ X22, 0x2D13C24
	0x02D13AE8 ADRP X8, 0x140B000

ISIL:
	001 Move [X0+56], D0
	002 Return 

Method: System.Void SetDragZone(UnityEngine.UIElements.VisualElement dragElement, UnityEngine.Rect hotZone)

Disassembly:
	0x02D13AEC LDR X8, [X8 + 0xCE0]
	0x02D13AF0 MOV X0, X22
	0x02D13AF4 MOV X1, X23
	0x02D13AF8 MOV W2, W31
	0x02D13AFC LDR X3, [X8]
	0x02D13B00 BL 0x21A18B4
	0x02D13B04 STR X21, [X20 + 0x18]
	0x02D13B08 STP S11, S10, [X20 + 0x20]
	0x02D13B0C STP S9, S8, [X20 + 0x28]
	0x02D13B10 CBZ X21, 0x2D13C04
	0x02D13B14 STRB W31, [X20 + 0x30]
	0x02D13B18 LDR X0, [X26]
	0x02D13B1C ADRP X23, 0x140A000
	0x02D13B20 LDR X23, [X23 + 0x770]
	0x02D13B24 BL 0x1C16F10
	0x02D13B28 LDR X8, [X19 + 0x20]
	0x02D13B2C MOV X1, X20
	0x02D13B30 MOV X3, X31
	0x02D13B34 MOV X22, X0
	0x02D13B38 LDR X8, [X8 + 0xC0]
	0x02D13B3C LDR X2, [X8 + 0x20]
	0x02D13B40 BL 0x2D0E824
	0x02D13B44 LDR X3, [X23]
	0x02D13B48 MOV X0, X21
	0x02D13B4C MOV X1, X22
	0x02D13B50 MOV W2, W31
	0x02D13B54 BL 0x21A1534
	0x02D13B58 LDR X0, [X25]
	0x02D13B5C LDR X21, [X20 + 0x18]
	0x02D13B60 BL 0x1C16F10
	0x02D13B64 LDR X8, [X19 + 0x20]
	0x02D13B68 MOV X1, X20
	0x02D13B6C MOV X3, X31
	0x02D13B70 MOV X22, X0
	0x02D13B74 LDR X8, [X8 + 0xC0]
	0x02D13B78 LDR X2, [X8 + 0x28]
	0x02D13B7C BL 0x2D0E824
	0x02D13B80 CBZ X21, 0x2D13C24
	0x02D13B84 ADRP X8, 0x140A000
	0x02D13B88 LDR X8, [X8 + 0x778]
	0x02D13B8C MOV X0, X21
	0x02D13B90 MOV X1, X22
	0x02D13B94 MOV W2, W31
	0x02D13B98 LDR X3, [X8]
	0x02D13B9C BL 0x21A1534
	0x02D13BA0 LDR X0, [X24]
	0x02D13BA4 LDR X21, [X20 + 0x18]
	0x02D13BA8 BL 0x1C16F10
	0x02D13BAC LDR X8, [X19 + 0x20]
	0x02D13BB0 MOV X1, X20
	0x02D13BB4 MOV X3, X31
	0x02D13BB8 MOV X19, X0
	0x02D13BBC LDR X8, [X8 + 0xC0]
	0x02D13BC0 LDR X2, [X8 + 0x30]
	0x02D13BC4 BL 0x2D0E824
	0x02D13BC8 CBZ X21, 0x2D13C24
	0x02D13BCC ADRP X8, 0x140B000
	0x02D13BD0 LDR X8, [X8 + 0xF0]
	0x02D13BD4 MOV X0, X21
	0x02D13BD8 MOV X1, X19
	0x02D13BDC LDP X20, X19, [X31 + 0x60]
	0x02D13BE0 LDR X3, [X8]
	0x02D13BE4 LDP X22, X21, [X31 + 0x50]
	0x02D13BE8 LDP X24, X23, [X31 + 0x40]
	0x02D13BEC LDP X26, X25, [X31 + 0x30]
	0x02D13BF0 LDP X30, X27, [X31 + 0x20]
	0x02D13BF4 LDP D9, D8, [X31 + 0x10]
	0x02D13BF8 MOV W2, W31
	0x02D13BFC LDP D11, D10, [X31], #0x70
	0x02D13C00 B 0x21A1534
	0x02D13C04 LDP X20, X19, [X31 + 0x60]
	0x02D13C08 LDP X22, X21, [X31 + 0x50]
	0x02D13C0C LDP X24, X23, [X31 + 0x40]
	0x02D13C10 LDP X26, X25, [X31 + 0x30]
	0x02D13C14 LDP X30, X27, [X31 + 0x20]
	0x02D13C18 LDP D9, D8, [X31 + 0x10]
	0x02D13C1C LDP D11, D10, [X31], #0x70
	0x02D13C20 RET
	0x02D13C24 BL 0x1C16F20
	0x02D13C28 STP X30, X19, [X31 - 0x10]!
	0x02D13C2C CBZ W1, 0x2D13C38
	0x02D13C30 MOV W0, W31
	0x02D13C34 B 0x2D13C58
	0x02D13C38 LDR V2, [X0 + 0x28]
	0x02D13C3C MOV X19, X0
	0x02D13C40 FCMP S2, 0x0
	0x02D13C44 B.MI 0x2D13C54
	0x02D13C48 LDR V2, [X19 + 0x2C]
	0x02D13C4C FCMP S2, 0x0
	0x02D13C50 B.PL 0x2D13C60
	0x02D13C54 MOVZ W0, 0x1
	0x02D13C58 LDP X30, X19, [X31], #0x10
	0x02D13C5C RET
	0x02D13C60 LDR X0, [X19 + 0x18]
	0x02D13C64 MOV X1, X31
	0x02D13C68 BL 0x3D16BD4
	0x02D13C6C LDR V2, [X19 + 0x20]
	0x02D13C70 FCMP S0, S2
	0x02D13C74 B.LT 0x2D13C30
	0x02D13C78 LDR V3, [X19 + 0x28]
	0x02D13C7C FADD S2, S2, S3
	0x02D13C80 FCMP S0, S2
	0x02D13C84 B.PL 0x2D13C30
	0x02D13C88 LDR V0, [X19 + 0x24]
	0x02D13C8C FCMP S1, S0
	0x02D13C90 B.LT 0x2D13C30
	0x02D13C94 LDR V2, [X19 + 0x2C]
	0x02D13C98 FADD S0, S0, S2
	0x02D13C9C FCMP S1, S0
	0x02D13CA0 CSET W0, MI
	0x02D13CA4 B 0x2D13C58
	0x02D13CA8 STP X30, X23, [X31 - 0x30]!
	0x02D13CAC STP X22, X21, [X31 + 0x10]
	0x02D13CB0 STP X20, X19, [X31 + 0x20]
	0x02D13CB4 ADRP X22, 0x16C8000
	0x02D13CB8 LDRB W8, [X22 + 0x79E]
	0x02D13CBC MOV X21, X2
	0x02D13CC0 MOV X19, X1
	0x02D13CC4 MOV X20, X0
	0x02D13CC8 TBNZ X8, 0x0, 0x2D13D1C
	0x02D13CCC ADRP X0, 0x1409000
	0x02D13CD0 LDR X0, [X0 + 0xE80]
	0x02D13CD4 BL 0x1C16CF4
	0x02D13CD8 ADRP X0, 0x140B000
	0x02D13CDC LDR X0, [X0 + 0xCE8]
	0x02D13CE0 BL 0x1C16CF4
	0x02D13CE4 ADRP X0, 0x140B000
	0x02D13CE8 LDR X0, [X0 + 0xCF0]
	0x02D13CEC BL 0x1C16CF4
	0x02D13CF0 ADRP X0, 0x140B000
	0x02D13CF4 LDR X0, [X0 + 0xCF8]
	0x02D13CF8 BL 0x1C16CF4
	0x02D13CFC ADRP X0, 0x140B000
	0x02D13D00 LDR X0, [X0 + 0xD00]
	0x02D13D04 BL 0x1C16CF4
	0x02D13D08 ADRP X0, 0x1409000
	0x02D13D0C LDR X0, [X0 + 0xE58]
	0x02D13D10 BL 0x1C16CF4
	0x02D13D14 MOVZ W8, 0x1
	0x02D13D18 STRB W8, [X22 + 0x79E]
	0x02D13D1C CBZ X19, 0x2D13E50
	0x02D13D20 LDR W1, [X19 + 0xAC]
	0x02D13D24 LDP S0, S1, [X19 + 0xC0]
	0x02D13D28 MOV X0, X20
	0x02D13D2C BL 0x2D13C28
	0x02D13D30 TBZ X0, 0x0, 0x2D13E40
	0x02D13D34 ADRP X23, 0x1409000
	0x02D13D38 LDR X23, [X23 + 0xE58]
	0x02D13D3C LDR X22, [X19 + 0xA0]
	0x02D13D40 LDR X0, [X23]
	0x02D13D44 LDR W8, [X0 + 0xE0]
	0x02D13D48 CBNZ W8, 0x2D13D54
	0x02D13D4C BL 0x1C16DFC
	0x02D13D50 LDR X0, [X23]
	0x02D13D54 LDR X8, [X0 + 0xB8]
	0x02D13D58 MOV X0, X22
	0x02D13D5C MOV X2, X31
	0x02D13D60 LDR X1, [X8]
	0x02D13D64 BL 0x321BA08
	0x02D13D68 TBZ X0, 0x0, 0x2D13D7C
	0x02D13D6C LDR X0, [X20 + 0x18]
	0x02D13D70 MOV X1, X31
	0x02D13D74 BL 0x3DBAB88
	0x02D13D78 B 0x2D13E1C
	0x02D13D7C LDR X0, [X20 + 0x18]
	0x02D13D80 CBZ X0, 0x2D13E50
	0x02D13D84 MOV X1, X31
	0x02D13D88 BL 0x3DEC0CC
	0x02D13D8C CBZ X0, 0x2D13E50
	0x02D13D90 ADRP X10, 0x1409000
	0x02D13D94 LDR X8, [X0]
	0x02D13D98 LDR X10, [X10 + 0xE80]
	0x02D13D9C MOV X22, X0
	0x02D13DA0 LDRH W9, [X8 + 0x12E]
	0x02D13DA4 LDR X1, [X10]
	0x02D13DA8 CBZ X9, 0x2D13DCC
	0x02D13DAC LDR X10, [X8 + 0xB0]
	0x02D13DB0 ADD X10, X10, 0x8
	0x02D13DB4 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-112], D11
	002 Move [X31-104], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X22, 0x16C9000
	016 Move W8, [X22+1942]
	017 Move X19, X2
	018 Move V8, V3
	019 Move V9, V2
	020 Move V10, V1
	021 Move V11, V0
	022 Move X21, X1
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {57}
	028 Move X0, 0x140C000
	029 Move X0, [X0+240]
	030 Call 0x1C17CF4
	031 Move X0, 0x140B000
	032 Move X0, [X0+1904]
	033 Call 0x1C17CF4
	034 Move X0, 0x140B000
	035 Move X0, [X0+1912]
	036 Call 0x1C17CF4
	037 Move X0, 0x140C000
	038 Move X0, [X0+3296]
	039 Call 0x1C17CF4
	040 Move X0, 0x140B000
	041 Move X0, [X0+1936]
	042 Call 0x1C17CF4
	043 Move X0, 0x140B000
	044 Move X0, [X0+1944]
	045 Call 0x1C17CF4
	046 Move X0, 0x140B000
	047 Move X0, [X0+1920]
	048 Call 0x1C17CF4
	049 Move X0, 0x140B000
	050 Move X0, [X0+1928]
	051 Call 0x1C17CF4
	052 Move X0, 0x140C000
	053 Move X0, [X0+256]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X22+1942], W8
	057 Move X26, 0x140B000
	058 Move X25, 0x140B000
	059 Move X24, 0x140C000
	060 Move X22, [X20+24]
	061 Move X26, [X26+1920]
	062 Move X25, [X25+1928]
	063 Move X24, [X24+256]
	064 Compare X22, 0
	065 JumpIfEqual {120}
	066 Move X0, [X26]
	067 Move X27, 0x140B000
	068 Move X27, [X27+1936]
	069 Call 0x1C17F10
	070 Move X8, [X19+32]
	071 Move X1, X20
	072 Move X3, X31
	073 Move X23, X0
	074 Move X8, [X8+192]
	075 Move X2, [X8+32]
	076 Call 0x2D0F824, X0, X1, X2
	077 Move X3, [X27]
	078 Move X0, X22
	079 Move X1, X23
	080 Move W2, W31
	081 Call 0x21A28B4, X0, X1, X2
	082 Move X0, [X25]
	083 Move X22, [X20+24]
	084 Call 0x1C17F10
	085 Move X8, [X19+32]
	086 Move X1, X20
	087 Move X3, X31
	088 Move X23, X0
	089 Move X8, [X8+192]
	090 Move X2, [X8+40]
	091 Call 0x2D0F824, X0, X1, X2
	092 Compare X22, 0
	093 JumpIfEqual {212}
	094 Move X8, 0x140B000
	095 Move X8, [X8+1944]
	096 Move X0, X22
	097 Move X1, X23
	098 Move W2, W31
	099 Move X3, [X8]
	100 Call 0x21A28B4, X0, X1, X2
	101 Move X0, [X24]
	102 Move X22, [X20+24]
	103 Call 0x1C17F10
	104 Move X8, [X19+32]
	105 Move X1, X20
	106 Move X3, X31
	107 Move X23, X0
	108 Move X8, [X8+192]
	109 Move X2, [X8+48]
	110 Call 0x2D0F824, X0, X1, X2
	111 Compare X22, 0
	112 JumpIfEqual {212}
	113 Move X8, 0x140C000
	114 Move X8, [X8+3296]
	115 Move X0, X22
	116 Move X1, X23
	117 Move W2, W31
	118 Move X3, [X8]
	119 Call 0x21A28B4, X0, X1, X2
	120 Move [X20+24], X21
	121 Move [X20+32], S11
	122 Move [X20+40], S10
	123 Move [X20+40], S9
	124 Move [X20+48], S8
	125 Compare X21, 0
	126 JumpIfEqual {197}
	127 Move [X20+48], W31
	128 Move X0, [X26]
	129 Move X23, 0x140B000
	130 Move X23, [X23+1904]
	131 Call 0x1C17F10
	132 Move X8, [X19+32]
	133 Move X1, X20
	134 Move X3, X31
	135 Move X22, X0
	136 Move X8, [X8+192]
	137 Move X2, [X8+32]
	138 Call 0x2D0F824, X0, X1, X2
	139 Move X3, [X23]
	140 Move X0, X21
	141 Move X1, X22
	142 Move W2, W31
	143 Call 0x21A2534, X0, X1, X2
	144 Move X0, [X25]
	145 Move X21, [X20+24]
	146 Call 0x1C17F10
	147 Move X8, [X19+32]
	148 Move X1, X20
	149 Move X3, X31
	150 Move X22, X0
	151 Move X8, [X8+192]
	152 Move X2, [X8+40]
	153 Call 0x2D0F824, X0, X1, X2
	154 Compare X21, 0
	155 JumpIfEqual {212}
	156 Move X8, 0x140B000
	157 Move X8, [X8+1912]
	158 Move X0, X21
	159 Move X1, X22
	160 Move W2, W31
	161 Move X3, [X8]
	162 Call 0x21A2534, X0, X1, X2
	163 Move X0, [X24]
	164 Move X21, [X20+24]
	165 Call 0x1C17F10
	166 Move X8, [X19+32]
	167 Move X1, X20
	168 Move X3, X31
	169 Move X19, X0
	170 Move X8, [X8+192]
	171 Move X2, [X8+48]
	172 Call 0x2D0F824, X0, X1, X2
	173 Compare X21, 0
	174 JumpIfEqual {212}
	175 Move X8, 0x140C000
	176 Move X8, [X8+240]
	177 Move X0, X21
	178 Move X1, X19
	179 Move X20, [X31+96]
	180 Move X19, [X31+104]
	181 Move X3, [X8]
	182 Move X22, [X31+80]
	183 Move X21, [X31+88]
	184 Move X24, [X31+64]
	185 Move X23, [X31+72]
	186 Move X26, [X31+48]
	187 Move X25, [X31+56]
	188 Move X30, [X31+32]
	189 Move X27, [X31+40]
	190 Move D9, [X31+16]
	191 Move D8, [X31+24]
	192 Move W2, W31
	193 Move D11, [X31+112]
	194 Move D10, [X31+120]
	195 Call 0x21A2534, X0, X1, X2
	196 Return 
	197 Move X20, [X31+96]
	198 Move X19, [X31+104]
	199 Move X22, [X31+80]
	200 Move X21, [X31+88]
	201 Move X24, [X31+64]
	202 Move X23, [X31+72]
	203 Move X26, [X31+48]
	204 Move X25, [X31+56]
	205 Move X30, [X31+32]
	206 Move X27, [X31+40]
	207 Move D9, [X31+16]
	208 Move D8, [X31+24]
	209 Move D11, [X31+112]
	210 Move D10, [X31+120]
	211 Return 
	212 Call 0x1C17F20

Method: System.Boolean CanStartDrag(System.Int32 button, UnityEngine.Vector2 localPosition)

Disassembly:
	0x02D13DB8 CMP X11, X1
	0x02D13DBC B.EQ 0x2D13DDC
	0x02D13DC0 SUBS X9, X9, 0x1
	0x02D13DC4 ADD X10, X10, 0x10
	0x02D13DC8 B.NE 0x2D13DB4
	0x02D13DCC MOVZ W2, 0x2
	0x02D13DD0 MOV X0, X22
	0x02D13DD4 BL 0x1C5C788
	0x02D13DD8 B 0x2D13DEC
	0x02D13DDC LDR W9, [X10]
	0x02D13DE0 ADD W9, W9, 0x2
	0x02D13DE4 ADD X8, X8, W9, 0x4, SXTW
	0x02D13DE8 ADD X0, X8, 0x138
	0x02D13DEC LDP X8, X1, [X0]
	0x02D13DF0 MOV X0, X22
	0x02D13DF4 BLR X8
	0x02D13DF8 CMP W0, 0x1
	0x02D13DFC B.NE 0x2D13E40
	0x02D13E00 MOV X0, X19
	0x02D13E04 MOV X1, X31
	0x02D13E08 BL 0x3D9D960
	0x02D13E0C LDR X0, [X20 + 0x18]
	0x02D13E10 LDR W1, [X19 + 0x9C]
	0x02D13E14 MOV X2, X31
	0x02D13E18 BL 0x3DBAC60
	0x02D13E1C LDR X8, [X21 + 0x20]
	0x02D13E20 MOV X0, X20
	0x02D13E24 MOV X1, X19
	0x02D13E28 LDP X20, X19, [X31 + 0x20]
	0x02D13E2C LDR X8, [X8 + 0xC0]
	0x02D13E30 LDP X22, X21, [X31 + 0x10]
	0x02D13E34 LDR X2, [X8 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare W1, 0
	004 JumpIfEqual {6}
	005 Move W0, W31
	006 Move V2, [X0+40]
	007 Move X19, X0
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 Move V2, [X19+44]
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 Move W0, 1
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0
	015 Move X0, [X19+24]
	016 Move X1, X31
	017 Call VisualElementExtensions.WorldToLocal, X0, X1
	018 Move V2, [X19+32]
	019 NotImplemented "Instruction FCMP not yet implemented."
	020 Move V3, [X19+40]
	021 Add S2, S2, S3
	022 NotImplemented "Instruction FCMP not yet implemented."
	023 Move V0, [X19+36]
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 Move V2, [X19+44]
	026 Add S0, S0, S2
	027 NotImplemented "Instruction FCMP not yet implemented."
	028 NotImplemented "Instruction CSET not yet implemented."

Method: System.Void UpdateValueOnPointerDown(UnityEngine.UIElements.PointerDownEvent evt)

Disassembly:
	0x02D13E38 LDP X30, X23, [X31], #0x30
	0x02D13E3C B 0x2D13E54
	0x02D13E40 LDP X20, X19, [X31 + 0x20]
	0x02D13E44 LDP X22, X21, [X31 + 0x10]
	0x02D13E48 LDP X30, X23, [X31], #0x30
	0x02D13E4C RET
	0x02D13E50 BL 0x1C16F20
	0x02D13E54 STR X30, [X31 - 0x30]!
	0x02D13E58 STP X22, X21, [X31 + 0x10]
	0x02D13E5C STP X20, X19, [X31 + 0x20]
	0x02D13E60 ADRP X22, 0x16C8000
	0x02D13E64 LDRB W8, [X22 + 0x79F]
	0x02D13E68 MOV X20, X2
	0x02D13E6C MOV X21, X1
	0x02D13E70 MOV X19, X0
	0x02D13E74 TBNZ X8, 0x0, 0x2D13EA4
	0x02D13E78 ADRP X0, 0x1409000
	0x02D13E7C LDR X0, [X0 + 0xE88]
	0x02D13E80 BL 0x1C16CF4
	0x02D13E84 ADRP X0, 0x140B000
	0x02D13E88 LDR X0, [X0 + 0x98]
	0x02D13E8C BL 0x1C16CF4
	0x02D13E90 ADRP X0, 0x140B000
	0x02D13E94 LDR X0, [X0 + 0xA0]
	0x02D13E98 BL 0x1C16CF4
	0x02D13E9C MOVZ W8, 0x1
	0x02D13EA0 STRB W8, [X22 + 0x79F]
	0x02D13EA4 CBZ X21, 0x2D1408C
	0x02D13EA8 ADRP X22, 0x140B000
	0x02D13EAC LDR X22, [X22 + 0xA0]
	0x02D13EB0 MOV X0, X21
	0x02D13EB4 MOV X1, X31
	0x02D13EB8 BL 0x3D9D950
	0x02D13EBC MOVZ W8, 0x1
	0x02D13EC0 STRB W8, [X19 + 0x30]
	0x02D13EC4 LDR X0, [X22]
	0x02D13EC8 LDR X21, [X19 + 0x18]
	0x02D13ECC BL 0x1C16F10
	0x02D13ED0 LDR X8, [X20 + 0x20]
	0x02D13ED4 MOV X1, X19
	0x02D13ED8 MOV X3, X31
	0x02D13EDC MOV X22, X0
	0x02D13EE0 LDR X8, [X8 + 0xC0]
	0x02D13EE4 LDR X2, [X8 + 0x48]
	0x02D13EE8 BL 0x2D0E824
	0x02D13EEC CBZ X21, 0x2D1408C
	0x02D13EF0 ADRP X8, 0x140B000
	0x02D13EF4 LDR X8, [X8 + 0x98]
	0x02D13EF8 MOV X0, X21
	0x02D13EFC MOV X1, X22
	0x02D13F00 MOV W2, W31
	0x02D13F04 LDR X3, [X8]
	0x02D13F08 BL 0x21A1534
	0x02D13F0C LDR X21, [X19 + 0x10]
	0x02D13F10 CBZ X21, 0x2D1408C
	0x02D13F14 LDR X8, [X20 + 0x20]
	0x02D13F18 LDR X8, [X8 + 0xC0]
	0x02D13F1C LDR X1, [X8]
	0x02D13F20 LDRB W8, [X1 + 0x135]
	0x02D13F24 TBNZ X8, 0x0, 0x2D13F34
	0x02D13F28 MOV X0, X1
	0x02D13F2C BL 0x1C5C684
	0x02D13F30 MOV X1, X0
	0x02D13F34 LDR X8, [X21]
	0x02D13F38 LDRH W9, [X8 + 0x12E]
	0x02D13F3C CBZ X9, 0x2D13F60
	0x02D13F40 LDR X10, [X8 + 0xB0]
	0x02D13F44 ADD X10, X10, 0x8
	0x02D13F48 LDUR X11, [X10 - 0x8]
	0x02D13F4C CMP X11, X1
	0x02D13F50 B.EQ 0x2D13F70
	0x02D13F54 SUBS X9, X9, 0x1
	0x02D13F58 ADD X10, X10, 0x10
	0x02D13F5C B.NE 0x2D13F48
	0x02D13F60 MOV X0, X21
	0x02D13F64 MOV W2, W31
	0x02D13F68 BL 0x1C5C788
	0x02D13F6C B 0x2D13F7C
	0x02D13F70 LDRSW X9, [X10]
	0x02D13F74 ADD X8, X8, X9, 0x4, LSL
	0x02D13F78 ADD X0, X8, 0x138
	0x02D13F7C LDP X8, X1, [X0]
	0x02D13F80 MOV X0, X21
	0x02D13F84 BLR X8
	0x02D13F88 LDR X8, [X20 + 0x20]
	0x02D13F8C LDR X20, [X19 + 0x10]
	0x02D13F90 LDR X8, [X8 + 0xC0]
	0x02D13F94 STR W0, [X19 + 0x34]
	0x02D13F98 CBZ X20, 0x2D1408C
	0x02D13F9C LDR X1, [X8]
	0x02D13FA0 LDRB W8, [X1 + 0x135]
	0x02D13FA4 TBNZ X8, 0x0, 0x2D13FB4
	0x02D13FA8 MOV X0, X1
	0x02D13FAC BL 0x1C5C684
	0x02D13FB0 MOV X1, X0
	0x02D13FB4 LDR X8, [X20]
	0x02D13FB8 LDRH W9, [X8 + 0x12E]
	0x02D13FBC CBZ X9, 0x2D13FE0
	0x02D13FC0 LDR X10, [X8 + 0xB0]
	0x02D13FC4 ADD X10, X10, 0x8
	0x02D13FC8 LDUR X11, [X10 - 0x8]
	0x02D13FCC CMP X11, X1
	0x02D13FD0 B.EQ 0x2D13FF0
	0x02D13FD4 SUBS X9, X9, 0x1
	0x02D13FD8 ADD X10, X10, 0x10
	0x02D13FDC B.NE 0x2D13FC8
	0x02D13FE0 MOVZ W2, 0x3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x16C9000
	008 Move W8, [X22+1943]
	009 Move X21, X2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x140A000
	017 Move X0, [X0+3712]
	018 Call 0x1C17CF4
	019 Move X0, 0x140C000
	020 Move X0, [X0+3304]
	021 Call 0x1C17CF4
	022 Move X0, 0x140C000
	023 Move X0, [X0+3312]
	024 Call 0x1C17CF4
	025 Move X0, 0x140C000
	026 Move X0, [X0+3320]
	027 Call 0x1C17CF4
	028 Move X0, 0x140C000
	029 Move X0, [X0+3328]
	030 Call 0x1C17CF4
	031 Move X0, 0x140A000
	032 Move X0, [X0+3672]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+1943], W8
	036 Compare X19, 0
	037 JumpIfEqual {126}
	038 Move W1, [X19+172]
	039 Move S0, [X19+192]
	040 Move S1, [X19+196]
	041 Move X0, X20
	042 Call 0x2D13DB8, X0, X1, X2
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {119}
	047 Move X23, 0x140A000
	048 Move X23, [X23+3672]
	049 Move X22, [X19+160]
	050 Move X0, [X23]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X23]
	056 Move X8, [X0+184]
	057 Move X0, X22
	058 Move X2, X31
	059 Move X1, [X8]
	060 Call String.op_Equality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {68}
	065 Move X0, [X20+24]
	066 Move X1, X31
	067 Call MouseCaptureController.CaptureMouse, X0
	068 Move X0, [X20+24]
	069 Compare X0, 0
	070 JumpIfEqual {126}
	071 Move X1, X31
	072 Call VisualElement.get_panel, X0
	073 Compare X0, 0
	074 JumpIfEqual {126}
	075 Move X10, 0x140A000
	076 Move X8, [X0]
	077 Move X10, [X10+3712]
	078 Move X22, X0
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Move X1, [X10]
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move W2, 2
	090 Move X0, X22
	091 Call 0x1C5D788
	092 Move W9, [X10]
	093 Add W9, W9, 2
	094 Add X8, X8, W9
	095 Add X0, X8, 312
	096 Move X8, [X0]
	097 Move X1, [X0+8]
	098 Move X0, X22
	099 NotImplemented "Instruction BLR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, X19
	102 Move X1, X31
	103 Call EventBase.PreventDefault, X0
	104 Move X0, [X20+24]
	105 Move W1, [X19+156]
	106 Move X2, X31
	107 Call PointerCaptureHelper.CapturePointer, X0, X1
	108 Move X8, [X21+32]
	109 Move X0, X20
	110 Move X1, X19
	111 Move X20, [X31+32]
	112 Move X19, [X31+40]
	113 Move X8, [X8+192]
	114 Move X22, [X31+16]
	115 Move X21, [X31+24]
	116 Move X2, [X8+64]
	117 Move X30, [X31+48]
	118 Move X23, [X31+56]
	119 Move X20, [X31+32]
	120 Move X19, [X31+40]
	121 Move X22, [X31+16]
	122 Move X21, [X31+24]
	123 Move X30, [X31+48]
	124 Move X23, [X31+56]
	125 Return 
	126 Call 0x1C17F20

Method: System.Void ProcessDownEvent(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x02D13FE4 MOV X0, X20
	0x02D13FE8 BL 0x1C5C788
	0x02D13FEC B 0x2D14000
	0x02D13FF0 LDR W9, [X10]
	0x02D13FF4 ADD W9, W9, 0x3
	0x02D13FF8 ADD X8, X8, W9, 0x4, SXTW
	0x02D13FFC ADD X0, X8, 0x138
	0x02D14000 LDP X8, X1, [X0]
	0x02D14004 MOV X0, X20
	0x02D14008 BLR X8
	0x02D1400C LDR X0, [X19 + 0x18]
	0x02D14010 CBZ X0, 0x2D1408C
	0x02D14014 MOV X1, X31
	0x02D14018 BL 0x3DEC0CC
	0x02D1401C CBZ X0, 0x2D14054
	0x02D14020 ADRP X8, 0x1408000
	0x02D14024 LDR X8, [X8 + 0xE88]
	0x02D14028 LDR X9, [X0]
	0x02D1402C LDR X8, [X8]
	0x02D14030 LDRB W11, [X9 + 0x130]
	0x02D14034 LDRB W10, [X8 + 0x130]
	0x02D14038 CMP W11, W10
	0x02D1403C B.CC 0x2D14054
	0x02D14040 LDR X9, [X9 + 0xC8]
	0x02D14044 ADD X9, X9, X10, 0x3, LSL
	0x02D14048 LDUR X9, [X9 - 0x8]
	0x02D1404C CMP X9, X8
	0x02D14050 B.EQ 0x2D14064
	0x02D14054 LDP X20, X19, [X31 + 0x20]
	0x02D14058 LDP X22, X21, [X31 + 0x10]
	0x02D1405C LDR X30, [X31], #0x30
	0x02D14060 RET
	0x02D14064 MOV X1, X31
	0x02D14068 BL 0x3DBBA8C
	0x02D1406C CBZ X0, 0x2D14054
	0x02D14070 LDR X8, [X0]
	0x02D14074 LDP X20, X19, [X31 + 0x20]
	0x02D14078 LDP X22, X21, [X31 + 0x10]
	0x02D1407C MOVZ W1, 0x1
	0x02D14080 LDP X3, X2, [X8 + 0x178]
	0x02D14084 LDR X30, [X31], #0x30
	0x02D14088 BR X3
	0x02D1408C BL 0x1C16F20
	0x02D14090 STR X30, [X31 - 0x30]!
	0x02D14094 STP X22, X21, [X31 + 0x10]
	0x02D14098 STP X20, X19, [X31 + 0x20]
	0x02D1409C ADRP X22, 0x16C7000
	0x02D140A0 LDRB W8, [X22 + 0x7A0]
	0x02D140A4 MOV X21, X2
	0x02D140A8 MOV X20, X1
	0x02D140AC MOV X19, X0
	0x02D140B0 TBNZ X8, 0x0, 0x2D140E0
	0x02D140B4 ADRP X0, 0x140A000
	0x02D140B8 LDR X0, [X0 + 0xD08]
	0x02D140BC BL 0x1C16CF4
	0x02D140C0 ADRP X0, 0x140A000
	0x02D140C4 LDR X0, [X0 + 0xD10]
	0x02D140C8 BL 0x1C16CF4
	0x02D140CC ADRP X0, 0x140A000
	0x02D140D0 LDR X0, [X0 + 0xD18]
	0x02D140D4 BL 0x1C16CF4
	0x02D140D8 MOVZ W8, 0x1
	0x02D140DC STRB W8, [X22 + 0x7A0]
	0x02D140E0 CBZ X20, 0x2D1413C
	0x02D140E4 ADRP X8, 0x140A000
	0x02D140E8 LDR X8, [X8 + 0xD18]
	0x02D140EC ADRP X22, 0x140A000
	0x02D140F0 MOV X0, X20
	0x02D140F4 LDR X1, [X8]
	0x02D140F8 LDR X22, [X22 + 0xD08]
	0x02D140FC BL 0x24A3190
	0x02D14100 LDR X1, [X22]
	0x02D14104 MOV W22, W0
	0x02D14108 MOV X0, X20
	0x02D1410C BL 0x24A31B4
	0x02D14110 LDR X8, [X21 + 0x20]
	0x02D14114 LDP S0, S1, [X20 + 0xCC]
	0x02D14118 AND W1, W22, 0x1
	0x02D1411C AND W2, W0, 0x1
	0x02D14120 LDR X8, [X8 + 0xC0]
	0x02D14124 MOV X0, X19
	0x02D14128 LDP X20, X19, [X31 + 0x20]
	0x02D1412C LDP X22, X21, [X31 + 0x10]
	0x02D14130 LDR X3, [X8 + 0x68]
	0x02D14134 LDR X30, [X31], #0x30
	0x02D14138 B 0x2D14140
	0x02D1413C BL 0x1C16F20
	0x02D14140 STP D9, D8, [X31 - 0x30]!
	0x02D14144 STP X30, X21, [X31 + 0x10]
	0x02D14148 STP X20, X19, [X31 + 0x20]
	0x02D1414C LDRB W8, [X0 + 0x30]
	0x02D14150 CBZ W8, 0x2D141D8
	0x02D14154 LDR X20, [X0 + 0x10]
	0x02D14158 ANDS W31, W2, 0x1
	0x02D1415C MOVZ W8, 0x1
	0x02D14160 CINC W8, W8, NE
	0x02D14164 ANDS W31, W1, 0x1
	0x02D14168 CSEL W19, W31, W8, NE
	0x02D1416C CBZ X20, 0x2D14224
	0x02D14170 LDR X8, [X3 + 0x20]
	0x02D14174 LDR W21, [X0 + 0x34]
	0x02D14178 MOV V8.16B, V1.16B
	0x02D1417C MOV V9.16B, V0.16B
	0x02D14180 LDR X8, [X8 + 0xC0]
	0x02D14184 LDR X1, [X8]
	0x02D14188 LDRB W8, [X1 + 0x135]
	0x02D1418C TBNZ X8, 0x0, 0x2D1419C
	0x02D14190 MOV X0, X1
	0x02D14194 BL 0x1C5C684
	0x02D14198 MOV X1, X0
	0x02D1419C LDR X8, [X20]
	0x02D141A0 LDRH W9, [X8 + 0x12E]
	0x02D141A4 CBZ X9, 0x2D141C8
	0x02D141A8 LDR X10, [X8 + 0xB0]
	0x02D141AC ADD X10, X10, 0x8
	0x02D141B0 LDUR X11, [X10 - 0x8]
	0x02D141B4 CMP X11, X1
	0x02D141B8 B.EQ 0x2D141E8
	0x02D141BC SUBS X9, X9, 0x1
	0x02D141C0 ADD X10, X10, 0x10
	0x02D141C4 B.NE 0x2D141B0
	0x02D141C8 MOVZ W2, 0x2
	0x02D141CC MOV X0, X20
	0x02D141D0 BL 0x1C5C788
	0x02D141D4 B 0x2D141F8
	0x02D141D8 LDP X20, X19, [X31 + 0x20]
	0x02D141DC LDP X30, X21, [X31 + 0x10]
	0x02D141E0 LDP D9, D8, [X31], #0x30
	0x02D141E4 RET
	0x02D141E8 LDR W9, [X10]
	0x02D141EC ADD W9, W9, 0x2
	0x02D141F0 ADD X8, X8, W9, 0x4, SXTW
	0x02D141F4 ADD X0, X8, 0x138
	0x02D141F8 LDP X4, X3, [X0]
	0x02D141FC MOV X0, X20
	0x02D14200 MOV W1, W19
	0x02D14204 MOV W2, W21
	0x02D14208 LDP X20, X19, [X31 + 0x20]
	0x02D1420C LDP X30, X21, [X31 + 0x10]
	0x02D14210 FMOV S2, W31
	0x02D14214 MOV V0.16B, V9.16B
	0x02D14218 MOV V1.16B, V8.16B
	0x02D1421C LDP D9, D8, [X31], #0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x16C9000
	007 Move W8, [X22+1944]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x1409000
	016 Move X0, [X0+3720]
	017 Call 0x1C17CF4
	018 Move X0, 0x140B000
	019 Move X0, [X0+152]
	020 Call 0x1C17CF4
	021 Move X0, 0x140B000
	022 Move X0, [X0+160]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1944], W8
	026 Compare X21, 0
	027 JumpIfEqual {162}
	028 Move X22, 0x140B000
	029 Move X22, [X22+160]
	030 Move X0, X21
	031 Move X1, X31
	032 Call EventBase.StopPropagation, X0
	033 Move W8, 1
	034 Move [X19+48], W8
	035 Move X0, [X22]
	036 Move X21, [X19+24]
	037 Call 0x1C17F10
	038 Move X8, [X20+32]
	039 Move X1, X19
	040 Move X3, X31
	041 Move X22, X0
	042 Move X8, [X8+192]
	043 Move X2, [X8+72]
	044 Call 0x2D0F824, X0, X1, X2
	045 Compare X21, 0
	046 JumpIfEqual {162}
	047 Move X8, 0x140B000
	048 Move X8, [X8+152]
	049 Move X0, X21
	050 Move X1, X22
	051 Move W2, W31
	052 Move X3, [X8]
	053 Call 0x21A2534, X0, X1, X2
	054 Move X21, [X19+16]
	055 Compare X21, 0
	056 JumpIfEqual {162}
	057 Move X8, [X20+32]
	058 Move X8, [X8+192]
	059 Move X1, [X8]
	060 Move W8, [X1+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {68}
	065 Move X0, X1
	066 Call 0x1C5D684
	067 Move X1, X0
	068 Move X8, [X21]
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move X0, X21
	079 Move W2, W31
	080 Call 0x1C5D788
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Add X8, X8, X9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X1, [X0+8]
	086 Move X0, X21
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X8, [X20+32]
	089 Move X20, [X19+16]
	090 Move X8, [X8+192]
	091 Move [X19+56], D0
	092 Compare X20, 0
	093 JumpIfEqual {162}
	094 Move X1, [X8]
	095 Move W8, [X1+309]
	096 Move TEMP, X8
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {103}
	100 Move X0, X1
	101 Call 0x1C5D684
	102 Move X1, X0
	103 Move X8, [X20]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move W2, 3
	114 Move X0, X20
	115 Call 0x1C5D788
	116 Move W9, [X10]
	117 Add W9, W9, 3
	118 Add X8, X8, W9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X1, [X0+8]
	122 Move X0, X20
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X0, [X19+24]
	125 Compare X0, 0
	126 JumpIfEqual {162}
	127 Move X1, X31
	128 Call VisualElement.get_panel, X0
	129 Compare X0, 0
	130 JumpIfEqual {142}
	131 Move X8, 0x1409000
	132 Move X8, [X8+3720]
	133 Move X9, [X0]
	134 Move X8, [X8]
	135 Move W11, [X9+304]
	136 Move W10, [X8+304]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X9, [X9+200]
	139 Add X9, X9, X10
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X20, [X31+32]
	143 Move X19, [X31+40]
	144 Move X22, [X31+16]
	145 Move X21, [X31+24]
	146 Move X30, [X31+48]
	147 Return 
	148 Move X1, X31
	149 Call BaseVisualElementPanel.get_uiElementsBridge, X0
	150 Compare X0, 0
	151 JumpIfEqual {142}
	152 Move X8, [X0]
	153 Move X20, [X31+32]
	154 Move X19, [X31+40]
	155 Move X22, [X31+16]
	156 Move X21, [X31+24]
	157 Move W1, 1
	158 Move X3, [X8+376]
	159 Move X2, [X8+384]
	160 Move X30, [X31+48]
	161 CallNoReturn X3
	162 Call 0x1C17F20

Method: System.Void UpdateValueOnPointerMove(UnityEngine.UIElements.PointerMoveEvent evt)

Disassembly:
	0x02D14220 BR X4
	0x02D14224 BL 0x1C16F20
	0x02D14228 STR X30, [X31 - 0x30]!
	0x02D1422C STP X22, X21, [X31 + 0x10]
	0x02D14230 STP X20, X19, [X31 + 0x20]
	0x02D14234 ADRP X22, 0x16C7000
	0x02D14238 LDRB W8, [X22 + 0x7A1]
	0x02D1423C MOV X20, X2
	0x02D14240 MOV X19, X1
	0x02D14244 MOV X21, X0
	0x02D14248 TBNZ X8, 0x0, 0x2D14260
	0x02D1424C ADRP X0, 0x140A000
	0x02D14250 LDR X0, [X0 + 0xD20]
	0x02D14254 BL 0x1C16CF4
	0x02D14258 MOVZ W8, 0x1
	0x02D1425C STRB W8, [X22 + 0x7A1]
	0x02D14260 CBZ X19, 0x2D1428C
	0x02D14264 LDR X8, [X20 + 0x20]
	0x02D14268 LDR W2, [X19 + 0x9C]
	0x02D1426C MOV X0, X21
	0x02D14270 MOV X1, X19
	0x02D14274 LDR X8, [X8 + 0xC0]
	0x02D14278 LDP X20, X19, [X31 + 0x20]
	0x02D1427C LDP X22, X21, [X31 + 0x10]
	0x02D14280 LDR X3, [X8 + 0x88]
	0x02D14284 LDR X30, [X31], #0x30
	0x02D14288 B 0x2D14290
	0x02D1428C BL 0x1C16F20
	0x02D14290 STP X30, X25, [X31 - 0x40]!
	0x02D14294 STP X24, X23, [X31 + 0x10]
	0x02D14298 STP X22, X21, [X31 + 0x20]
	0x02D1429C STP X20, X19, [X31 + 0x30]
	0x02D142A0 ADRP X23, 0x16C7000
	0x02D142A4 LDRB W8, [X23 + 0x7A2]
	0x02D142A8 MOV X19, X3
	0x02D142AC MOV W22, W2
	0x02D142B0 MOV X21, X1
	0x02D142B4 MOV X20, X0
	0x02D142B8 TBNZ X8, 0x0, 0x2D14300
	0x02D142BC ADRP X0, 0x1408000
	0x02D142C0 LDR X0, [X0 + 0xE88]
	0x02D142C4 BL 0x1C16CF4
	0x02D142C8 ADRP X0, 0x140A000
	0x02D142CC LDR X0, [X0 + 0xD28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x16C8000
	007 Move W8, [X22+1945]
	008 Move X21, X2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x140B000
	016 Move X0, [X0+3336]
	017 Call 0x1C17CF4
	018 Move X0, 0x140B000
	019 Move X0, [X0+3344]
	020 Call 0x1C17CF4
	021 Move X0, 0x140B000
	022 Move X0, [X0+3352]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1945], W8
	026 Compare X20, 0
	027 JumpIfEqual {52}
	028 Move X8, 0x140B000
	029 Move X8, [X8+3352]
	030 Move X22, 0x140B000
	031 Move X0, X20
	032 Move X1, [X8]
	033 Move X22, [X22+3336]
	034 Call 0x24A4190, X0
	035 Move X1, [X22]
	036 Move W22, W0
	037 Move X0, X20
	038 Call 0x24A41B4, X0
	039 Move X8, [X21+32]
	040 Move S0, [X20+204]
	041 Move S1, [X20+208]
	042 And W1, W22, 1
	043 And W2, W0, 1
	044 Move X8, [X8+192]
	045 Move X0, X19
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X3, [X8+104]
	051 Move X30, [X31+48]
	052 Call 0x1C17F20

Method: System.Void ProcessMoveEvent(System.Boolean shiftKey, System.Boolean altKey, UnityEngine.Vector2 deltaPosition)

Disassembly:
	0x02D142D0 BL 0x1C16CF4
	0x02D142D4 ADRP X0, 0x140A000
	0x02D142D8 LDR X0, [X0 + 0xA0]
	0x02D142DC BL 0x1C16CF4
	0x02D142E0 ADRP X0, 0x140A000
	0x02D142E4 LDR X0, [X0 + 0xD30]
	0x02D142E8 BL 0x1C16CF4
	0x02D142EC ADRP X0, 0x1408000
	0x02D142F0 LDR X0, [X0 + 0xE50]
	0x02D142F4 BL 0x1C16CF4
	0x02D142F8 MOVZ W8, 0x1
	0x02D142FC STRB W8, [X23 + 0x7A2]
	0x02D14300 LDRB W8, [X20 + 0x30]
	0x02D14304 CBZ W8, 0x2D14494
	0x02D14308 ADRP X8, 0x140A000
	0x02D1430C LDR X8, [X8 + 0xA0]
	0x02D14310 STRB W31, [X20 + 0x30]
	0x02D14314 LDR X23, [X20 + 0x18]
	0x02D14318 LDR X0, [X8]
	0x02D1431C BL 0x1C16F10
	0x02D14320 LDR X8, [X19 + 0x20]
	0x02D14324 MOV X1, X20
	0x02D14328 MOV X3, X31
	0x02D1432C MOV X24, X0
	0x02D14330 LDR X8, [X8 + 0xC0]
	0x02D14334 LDR X2, [X8 + 0x48]
	0x02D14338 BL 0x2D0E824
	0x02D1433C CBZ X23, 0x2D144D4
	0x02D14340 ADRP X8, 0x140A000
	0x02D14344 LDR X8, [X8 + 0xD28]
	0x02D14348 ADRP X25, 0x140A000
	0x02D1434C MOV X0, X23
	0x02D14350 MOV X1, X24
	0x02D14354 LDR X3, [X8]
	0x02D14358 LDR X25, [X25 + 0xD30]
	0x02D1435C MOV W2, W31
	0x02D14360 BL 0x21A18B4
	0x02D14364 LDR X0, [X20 + 0x18]
	0x02D14368 MOV W1, W22
	0x02D1436C MOV X2, X31
	0x02D14370 BL 0x3DBAE34
	0x02D14374 LDR X1, [X25]
	0x02D14378 MOV X0, X21
	0x02D1437C BL 0x1C16E00
	0x02D14380 CBZ X0, 0x2D143CC
	0x02D14384 LDR X0, [X20 + 0x18]
	0x02D14388 CBZ X0, 0x2D144D4
	0x02D1438C MOV X1, X31
	0x02D14390 BL 0x3DEC0CC
	0x02D14394 ADRP X22, 0x1408000
	0x02D14398 LDR X22, [X22 + 0xE50]
	0x02D1439C MOV X21, X0
	0x02D143A0 LDR X8, [X22]
	0x02D143A4 LDR W9, [X8 + 0xE0]
	0x02D143A8 CBNZ W9, 0x2D143B8
	0x02D143AC MOV X0, X8
	0x02D143B0 BL 0x1C16DFC
	0x02D143B4 LDR X8, [X22]
	0x02D143B8 LDR X8, [X8 + 0xB8]
	0x02D143BC MOV X0, X21
	0x02D143C0 MOV X2, X31

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W8, [X0+48]
	008 Compare W8, 0
	009 JumpIfEqual {45}
	010 Move X20, [X0+16]
	011 And W31, W2, 1
	012 Move W8, 1
	013 NotImplemented "Instruction CINC not yet implemented."
	014 And W31, W1, 1
	015 NotImplemented "Instruction CSEL not yet implemented."
	016 Compare X20, 0
	017 JumpIfEqual {71}
	018 Move X8, [X3+32]
	019 Move V10, [X0+56]
	020 Move V8, V1
	021 Move V9, V0
	022 Move X8, [X8+192]
	023 Move X1, [X8]
	024 Move W8, [X1+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {32}
	029 Move X0, X1
	030 Call 0x1C5D684
	031 Move X1, X0
	032 Move X8, [X20]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move W2, 2
	043 Move X0, X20
	044 Call 0x1C5D788
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X30, [X31+24]
	048 Move D9, [X31+8]
	049 Move D8, [X31+16]
	050 Move V10, [X31+48]
	051 Return 
	052 Move W9, [X10]
	053 Add W9, W9, 2
	054 Add X8, X8, W9
	055 Add X0, X8, 312
	056 Move X3, [X0]
	057 Move X2, [X0+8]
	058 Move X0, X20
	059 Move V0, V9
	060 Move V1, V8
	061 Move W1, W19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X30, [X31+24]
	065 Move D9, [X31+8]
	066 Move D8, [X31+16]
	067 Move S2, W31
	068 Move V3, V10
	069 Move V10, [X31+48]
	070 CallNoReturn X3
	071 Call 0x1C17F20

Method: System.Void UpdateValueOnPointerUp(UnityEngine.UIElements.PointerUpEvent evt)

Disassembly:
	0x02D143C4 LDR W1, [X8 + 0x8]
	0x02D143C8 BL 0x3DBAC98
	0x02D143CC LDR X0, [X20 + 0x18]
	0x02D143D0 CBZ X0, 0x2D144D4
	0x02D143D4 MOV X1, X31
	0x02D143D8 BL 0x3DEC0CC
	0x02D143DC CBZ X0, 0x2D14430
	0x02D143E0 ADRP X8, 0x1408000
	0x02D143E4 LDR X8, [X8 + 0xE88]
	0x02D143E8 LDR X9, [X0]
	0x02D143EC LDR X8, [X8]
	0x02D143F0 LDRB W11, [X9 + 0x130]
	0x02D143F4 LDRB W10, [X8 + 0x130]
	0x02D143F8 CMP W11, W10
	0x02D143FC B.CC 0x2D14430
	0x02D14400 LDR X9, [X9 + 0xC8]
	0x02D14404 ADD X9, X9, X10, 0x3, LSL
	0x02D14408 LDUR X9, [X9 - 0x8]
	0x02D1440C CMP X9, X8
	0x02D14410 B.NE 0x2D14430
	0x02D14414 MOV X1, X31
	0x02D14418 BL 0x3DBBA8C
	0x02D1441C CBZ X0, 0x2D14430
	0x02D14420 LDR X8, [X0]
	0x02D14424 MOV W1, W31
	0x02D14428 LDP X9, X2, [X8 + 0x178]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x16C8000
	007 Move W8, [X22+1946]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x140B000
	016 Move X0, [X0+3360]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1946], W8
	020 Compare X19, 0
	021 JumpIfEqual {33}
	022 Move X8, [X20+32]
	023 Move W2, [X19+156]
	024 Move X0, X21
	025 Move X1, X19
	026 Move X8, [X8+192]
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X3, [X8+136]
	032 Move X30, [X31+48]
	033 Call 0x1C17F20

Method: System.Void ProcessUpEvent(UnityEngine.UIElements.EventBase evt, System.Int32 pointerId)

Disassembly:
	0x02D1442C BLR X9
	0x02D14430 LDR X20, [X20 + 0x10]
	0x02D14434 CBZ X20, 0x2D144D4
	0x02D14438 LDR X8, [X19 + 0x20]
	0x02D1443C LDR X8, [X8 + 0xC0]
	0x02D14440 LDR X1, [X8]
	0x02D14444 LDRB W8, [X1 + 0x135]
	0x02D14448 TBNZ X8, 0x0, 0x2D14458
	0x02D1444C MOV X0, X1
	0x02D14450 BL 0x1C5C684
	0x02D14454 MOV X1, X0
	0x02D14458 LDR X8, [X20]
	0x02D1445C LDRH W9, [X8 + 0x12E]
	0x02D14460 CBZ X9, 0x2D14484
	0x02D14464 LDR X10, [X8 + 0xB0]
	0x02D14468 ADD X10, X10, 0x8
	0x02D1446C LDUR X11, [X10 - 0x8]
	0x02D14470 CMP X11, X1
	0x02D14474 B.EQ 0x2D144A8
	0x02D14478 SUBS X9, X9, 0x1
	0x02D1447C ADD X10, X10, 0x10
	0x02D14480 B.NE 0x2D1446C
	0x02D14484 MOVZ W2, 0x4
	0x02D14488 MOV X0, X20
	0x02D1448C BL 0x1C5C788
	0x02D14490 B 0x2D144B8
	0x02D14494 LDP X20, X19, [X31 + 0x30]
	0x02D14498 LDP X22, X21, [X31 + 0x20]
	0x02D1449C LDP X24, X23, [X31 + 0x10]
	0x02D144A0 LDP X30, X25, [X31], #0x40
	0x02D144A4 RET
	0x02D144A8 LDR W9, [X10]
	0x02D144AC ADD W9, W9, 0x4
	0x02D144B0 ADD X8, X8, W9, 0x4, SXTW
	0x02D144B4 ADD X0, X8, 0x138
	0x02D144B8 LDP X2, X1, [X0]
	0x02D144BC MOV X0, X20
	0x02D144C0 LDP X20, X19, [X31 + 0x30]
	0x02D144C4 LDP X22, X21, [X31 + 0x20]
	0x02D144C8 LDP X24, X23, [X31 + 0x10]
	0x02D144CC LDP X30, X25, [X31], #0x40
	0x02D144D0 BR X2
	0x02D144D4 BL 0x1C16F20
	0x02D144D8 STP X30, X23, [X31 - 0x30]!
	0x02D144DC STP X22, X21, [X31 + 0x10]
	0x02D144E0 STP X20, X19, [X31 + 0x20]
	0x02D144E4 ADRP X22, 0x16C7000
	0x02D144E8 LDRB W8, [X22 + 0x7A3]
	0x02D144EC MOV X20, X2
	0x02D144F0 MOV X19, X1
	0x02D144F4 MOV X21, X0
	0x02D144F8 TBNZ X8, 0x0, 0x2D14534
	0x02D144FC ADRP X0, 0x1408000
	0x02D14500 LDR X0, [X0 + 0xE88]
	0x02D14504 BL 0x1C16CF4
	0x02D14508 ADRP X0, 0x140A000
	0x02D1450C LDR X0, [X0 + 0x130]
	0x02D14510 BL 0x1C16CF4
	0x02D14514 ADRP X0, 0x1408000
	0x02D14518 LDR X0, [X0 + 0xE50]
	0x02D1451C BL 0x1C16CF4
	0x02D14520 ADRP X0, 0x1407000
	0x02D14524 LDR X0, [X0 + 0x898]
	0x02D14528 BL 0x1C16CF4
	0x02D1452C MOVZ W8, 0x1
	0x02D14530 STRB W8, [X22 + 0x7A3]
	0x02D14534 LDRB W8, [X21 + 0x30]
	0x02D14538 CBZ W8, 0x2D14708
	0x02D1453C CBZ X19, 0x2D14754
	0x02D14540 LDR W8, [X19 + 0x8C]
	0x02D14544 CMP W8, 0x1B
	0x02D14548 B.NE 0x2D14708
	0x02D1454C LDR X8, [X20 + 0x20]
	0x02D14550 LDR X22, [X21 + 0x10]
	0x02D14554 LDR X8, [X8 + 0xC0]
	0x02D14558 STRB W31, [X21 + 0x30]
	0x02D1455C CBZ X22, 0x2D14754
	0x02D14560 LDR X1, [X8]
	0x02D14564 LDR W23, [X21 + 0x34]
	0x02D14568 LDRB W8, [X1 + 0x135]
	0x02D1456C TBNZ X8, 0x0, 0x2D1457C
	0x02D14570 MOV X0, X1
	0x02D14574 BL 0x1C5C684
	0x02D14578 MOV X1, X0
	0x02D1457C LDR X8, [X22]
	0x02D14580 LDRH W9, [X8 + 0x12E]
	0x02D14584 CBZ X9, 0x2D145A8
	0x02D14588 LDR X10, [X8 + 0xB0]
	0x02D1458C ADD X10, X10, 0x8
	0x02D14590 LDUR X11, [X10 - 0x8]
	0x02D14594 CMP X11, X1
	0x02D14598 B.EQ 0x2D145B8
	0x02D1459C SUBS X9, X9, 0x1
	0x02D145A0 ADD X10, X10, 0x10
	0x02D145A4 B.NE 0x2D14590
	0x02D145A8 MOVZ W2, 0x1
	0x02D145AC MOV X0, X22
	0x02D145B0 BL 0x1C5C788
	0x02D145B4 B 0x2D145C8
	0x02D145B8 LDR W9, [X10]
	0x02D145BC ADD W9, W9, 0x1
	0x02D145C0 ADD X8, X8, W9, 0x4, SXTW
	0x02D145C4 ADD X0, X8, 0x138
	0x02D145C8 LDP X8, X2, [X0]
	0x02D145CC MOV X0, X22
	0x02D145D0 MOV W1, W23
	0x02D145D4 BLR X8
	0x02D145D8 LDR X21, [X21 + 0x10]
	0x02D145DC CBZ X21, 0x2D14754
	0x02D145E0 LDR X8, [X20 + 0x20]
	0x02D145E4 LDR X8, [X8 + 0xC0]
	0x02D145E8 LDR X1, [X8]
	0x02D145EC LDRB W8, [X1 + 0x135]
	0x02D145F0 TBNZ X8, 0x0, 0x2D14600
	0x02D145F4 MOV X0, X1
	0x02D145F8 BL 0x1C5C684
	0x02D145FC MOV X1, X0
	0x02D14600 LDR X8, [X21]
	0x02D14604 LDRH W9, [X8 + 0x12E]
	0x02D14608 CBZ X9, 0x2D1462C
	0x02D1460C LDR X10, [X8 + 0xB0]
	0x02D14610 ADD X10, X10, 0x8
	0x02D14614 LDUR X11, [X10 - 0x8]
	0x02D14618 CMP X11, X1
	0x02D1461C B.EQ 0x2D1463C
	0x02D14620 SUBS X9, X9, 0x1
	0x02D14624 ADD X10, X10, 0x10
	0x02D14628 B.NE 0x2D14614
	0x02D1462C MOVZ W2, 0x4
	0x02D14630 MOV X0, X21
	0x02D14634 BL 0x1C5C788
	0x02D14638 B 0x2D1464C
	0x02D1463C LDR W9, [X10]
	0x02D14640 ADD W9, W9, 0x4
	0x02D14644 ADD X8, X8, W9, 0x4, SXTW
	0x02D14648 ADD X0, X8, 0x138
	0x02D1464C LDP X8, X1, [X0]
	0x02D14650 MOV X0, X21
	0x02D14654 BLR X8
	0x02D14658 MOV X0, X19
	0x02D1465C MOV X1, X31
	0x02D14660 BL 0x3D9C848
	0x02D14664 CBZ X0, 0x2D1469C
	0x02D14668 ADRP X8, 0x1407000
	0x02D1466C LDR X8, [X8 + 0x898]
	0x02D14670 LDR X9, [X0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x16C8000
	010 Move W8, [X23+1947]
	011 Move X19, X3
	012 Move W22, W2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x1409000
	020 Move X0, [X0+3720]
	021 Call 0x1C17CF4
	022 Move X0, 0x140B000
	023 Move X0, [X0+3368]
	024 Call 0x1C17CF4
	025 Move X0, 0x140B000
	026 Move X0, [X0+160]
	027 Call 0x1C17CF4
	028 Move X0, 0x140B000
	029 Move X0, [X0+3376]
	030 Call 0x1C17CF4
	031 Move X0, 0x1409000
	032 Move X0, [X0+3664]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X23+1947], W8
	036 Move W8, [X20+48]
	037 Compare W8, 0
	038 JumpIfEqual {146}
	039 Move X8, 0x140B000
	040 Move X8, [X8+160]
	041 Move [X20+48], W31
	042 Move X23, [X20+24]
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X8, [X19+32]
	046 Move X1, X20
	047 Move X3, X31
	048 Move X24, X0
	049 Move X8, [X8+192]
	050 Move X2, [X8+72]
	051 Call 0x2D0F824, X0, X1, X2
	052 Compare X23, 0
	053 JumpIfEqual {171}
	054 Move X8, 0x140B000
	055 Move X8, [X8+3368]
	056 Move X25, 0x140B000
	057 Move X0, X23
	058 Move X1, X24
	059 Move X3, [X8]
	060 Move X25, [X25+3376]
	061 Move W2, W31
	062 Call 0x21A28B4, X0, X1, X2
	063 Move X0, [X20+24]
	064 Move W1, W22
	065 Move X2, X31
	066 Call PointerCaptureHelper.ReleasePointer, X0, X1
	067 Move X1, [X25]
	068 Move X0, X21
	069 Call 0x1C17E00
	070 Compare X0, 0
	071 JumpIfEqual {92}
	072 Move X0, [X20+24]
	073 Compare X0, 0
	074 JumpIfEqual {171}
	075 Move X1, X31
	076 Call VisualElement.get_panel, X0
	077 Move X22, 0x1409000
	078 Move X22, [X22+3664]
	079 Move X21, X0
	080 Move X8, [X22]
	081 Move W9, [X8+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {87}
	084 Move X0, X8
	085 Call 0x1C17DFC
	086 Move X8, [X22]
	087 Move X8, [X8+184]
	088 Move X0, X21
	089 Move X2, X31
	090 Move W1, [X8+8]
	091 Call PointerCaptureHelper.ProcessPointerCapture, X0, X1
	092 Move X0, [X20+24]
	093 Compare X0, 0
	094 JumpIfEqual {171}
	095 Move X1, X31
	096 Call VisualElement.get_panel, X0
	097 Compare X0, 0
	098 JumpIfEqual {119}
	099 Move X8, 0x1409000
	100 Move X8, [X8+3720]
	101 Move X9, [X0]
	102 Move X8, [X8]
	103 Move W11, [X9+304]
	104 Move W10, [X8+304]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X9, [X9+200]
	107 Add X9, X9, X10
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X1, X31
	111 Call BaseVisualElementPanel.get_uiElementsBridge, X0
	112 Compare X0, 0
	113 JumpIfEqual {119}
	114 Move X8, [X0]
	115 Move W1, W31
	116 Move X9, [X8+376]
	117 Move X2, [X8+384]
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X20, [X20+16]
	120 Compare X20, 0
	121 JumpIfEqual {171}
	122 Move X8, [X19+32]
	123 Move X8, [X8+192]
	124 Move X1, [X8]
	125 Move W8, [X1+309]
	126 Move TEMP, X8
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {133}
	130 Move X0, X1
	131 Call 0x1C5D684
	132 Move X1, X0
	133 Move X8, [X20]
	134 NotImplemented "Instruction LDRH not yet implemented."
	135 Compare X9, 0
	136 JumpIfEqual {143}
	137 Move X10, [X8+176]
	138 Add X10, X10, 8
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Subtract X9, X9, 1
	142 Add X10, X10, 16
	143 Move W2, 4
	144 Move X0, X20
	145 Call 0x1C5D788
	146 Move X20, [X31+48]
	147 Move X19, [X31+56]
	148 Move X22, [X31+32]
	149 Move X21, [X31+40]
	150 Move X24, [X31+16]
	151 Move X23, [X31+24]
	152 Move X30, [X31+64]
	153 Move X25, [X31+72]
	154 Return 
	155 Move W9, [X10]
	156 Add W9, W9, 4
	157 Add X8, X8, W9
	158 Add X0, X8, 312
	159 Move X2, [X0]
	160 Move X1, [X0+8]
	161 Move X0, X20
	162 Move X20, [X31+48]
	163 Move X19, [X31+56]
	164 Move X22, [X31+32]
	165 Move X21, [X31+40]
	166 Move X24, [X31+16]
	167 Move X23, [X31+24]
	168 Move X30, [X31+64]
	169 Move X25, [X31+72]
	170 CallNoReturn X2
	171 Call 0x1C17F20

Method: System.Void UpdateValueOnKeyDown(UnityEngine.UIElements.KeyDownEvent evt)

Disassembly:
	0x02D14674 LDR X8, [X8]
	0x02D14678 LDRB W11, [X9 + 0x130]
	0x02D1467C LDRB W10, [X8 + 0x130]
	0x02D14680 CMP W11, W10
	0x02D14684 B.CC 0x2D1469C
	0x02D14688 LDR X9, [X9 + 0xC8]
	0x02D1468C ADD X9, X9, X10, 0x3, LSL
	0x02D14690 LDUR X9, [X9 - 0x8]
	0x02D14694 CMP X9, X8
	0x02D14698 B.EQ 0x2D14718
	0x02D1469C MOV X19, X31
	0x02D146A0 ADRP X20, 0x1408000
	0x02D146A4 LDR X20, [X20 + 0xE50]
	0x02D146A8 LDR X0, [X20]
	0x02D146AC LDR W8, [X0 + 0xE0]
	0x02D146B0 CBNZ W8, 0x2D146BC
	0x02D146B4 BL 0x1C16DFC
	0x02D146B8 LDR X0, [X20]
	0x02D146BC LDR X8, [X0 + 0xB8]
	0x02D146C0 MOV X0, X19
	0x02D146C4 MOV X2, X31
	0x02D146C8 LDR W1, [X8 + 0x8]
	0x02D146CC BL 0x3DBF69C
	0x02D146D0 CBZ X19, 0x2D14708
	0x02D146D4 ADRP X8, 0x1408000
	0x02D146D8 LDR X8, [X8 + 0xE88]
	0x02D146DC LDR X9, [X19]
	0x02D146E0 LDR X8, [X8]
	0x02D146E4 LDRB W11, [X9 + 0x130]
	0x02D146E8 LDRB W10, [X8 + 0x130]
	0x02D146EC CMP W11, W10
	0x02D146F0 B.CC 0x2D14708
	0x02D146F4 LDR X9, [X9 + 0xC8]
	0x02D146F8 ADD X9, X9, X10, 0x3, LSL
	0x02D146FC LDUR X9, [X9 - 0x8]
	0x02D14700 CMP X9, X8
	0x02D14704 B.EQ 0x2D14728
	0x02D14708 LDP X20, X19, [X31 + 0x20]
	0x02D1470C LDP X22, X21, [X31 + 0x10]
	0x02D14710 LDP X30, X23, [X31], #0x30
	0x02D14714 RET
	0x02D14718 MOV X1, X31
	0x02D1471C BL 0x3DEC0CC
	0x02D14720 MOV X19, X0
	0x02D14724 B 0x2D146A0
	0x02D14728 MOV X0, X19
	0x02D1472C MOV X1, X31
	0x02D14730 BL 0x3DBBA8C
	0x02D14734 CBZ X0, 0x2D14708
	0x02D14738 LDR X8, [X0]
	0x02D1473C LDP X20, X19, [X31 + 0x20]
	0x02D14740 LDP X22, X21, [X31 + 0x10]
	0x02D14744 MOV W1, W31
	0x02D14748 LDP X3, X2, [X8 + 0x178]
	0x02D1474C LDP X30, X23, [X31], #0x30
	0x02D14750 BR X3
	0x02D14754 BL 0x1C16F20
	0x02D14758 STR X30, [X31 - 0x20]!
	0x02D1475C STP X20, X19, [X31 + 0x10]
	0x02D14760 MOV X19, X1
	0x02D14764 MOV X1, X31
	0x02D14768 MOV X20, X0
	0x02D1476C BL 0x3DAED24
	0x02D14770 FMOV V0.2S, 0x0
	0x02D14774 STP X31, X31, [X20 + 0x18]
	0x02D14778 STR X19, [X20 + 0x10]
	0x02D1477C STR D0, [X20 + 0x28]
	0x02D14780 STRB W31, [X20 + 0x30]
	0x02D14784 LDP X20, X19, [X31 + 0x10]
	0x02D14788 LDR X30, [X31], #0x20
	0x02D1478C RET
	0x02D14790 LDRB W0, [X0 + 0x30]
	0x02D14794 RET
	0x02D14798 AND W8, W1, 0x1
	0x02D1479C STRB W8, [X0 + 0x30]
	0x02D147A0 RET
	0x02D147A4 LDR X0, [X0 + 0x38]
	0x02D147A8 RET
	0x02D147AC STR X1, [X0 + 0x38]
	0x02D147B0 RET
	0x02D147B4 STP D11, D10, [X31 - 0x70]!
	0x02D147B8 STP D9, D8, [X31 + 0x10]
	0x02D147BC STP X30, X27, [X31 + 0x20]
	0x02D147C0 STP X26, X25, [X31 + 0x30]
	0x02D147C4 STP X24, X23, [X31 + 0x40]
	0x02D147C8 STP X22, X21, [X31 + 0x50]
	0x02D147CC STP X20, X19, [X31 + 0x60]
	0x02D147D0 ADRP X22, 0x16C7000
	0x02D147D4 LDRB W8, [X22 + 0x7A4]
	0x02D147D8 MOV X19, X2
	0x02D147DC MOV V8.16B, V3.16B
	0x02D147E0 MOV V9.16B, V2.16B
	0x02D147E4 MOV V10.16B, V1.16B
	0x02D147E8 MOV V11.16B, V0.16B
	0x02D147EC MOV X21, X1
	0x02D147F0 MOV X20, X0
	0x02D147F4 TBNZ X8, 0x0, 0x2D1486C
	0x02D147F8 ADRP X0, 0x140A000
	0x02D147FC LDR X0, [X0 + 0xF0]
	0x02D14800 BL 0x1C16CF4
	0x02D14804 ADRP X0, 0x1409000
	0x02D14808 LDR X0, [X0 + 0x770]
	0x02D1480C BL 0x1C16CF4
	0x02D14810 ADRP X0, 0x1409000
	0x02D14814 LDR X0, [X0 + 0x778]
	0x02D14818 BL 0x1C16CF4
	0x02D1481C ADRP X0, 0x140A000
	0x02D14820 LDR X0, [X0 + 0xCE0]
	0x02D14824 BL 0x1C16CF4
	0x02D14828 ADRP X0, 0x1409000
	0x02D1482C LDR X0, [X0 + 0x790]
	0x02D14830 BL 0x1C16CF4
	0x02D14834 ADRP X0, 0x1409000
	0x02D14838 LDR X0, [X0 + 0x798]
	0x02D1483C BL 0x1C16CF4
	0x02D14840 ADRP X0, 0x1409000
	0x02D14844 LDR X0, [X0 + 0x780]
	0x02D14848 BL 0x1C16CF4
	0x02D1484C ADRP X0, 0x1409000
	0x02D14850 LDR X0, [X0 + 0x788]
	0x02D14854 BL 0x1C16CF4
	0x02D14858 ADRP X0, 0x140A000
	0x02D1485C LDR X0, [X0 + 0x100]
	0x02D14860 BL 0x1C16CF4
	0x02D14864 MOVZ W8, 0x1
	0x02D14868 STRB W8, [X22 + 0x7A4]
	0x02D1486C ADRP X26, 0x1409000
	0x02D14870 ADRP X25, 0x1409000
	0x02D14874 ADRP X24, 0x140A000
	0x02D14878 LDR X22, [X20 + 0x18]
	0x02D1487C LDR X26, [X26 + 0x780]
	0x02D14880 LDR X25, [X25 + 0x788]
	0x02D14884 LDR X24, [X24 + 0x100]
	0x02D14888 CBZ X22, 0x2D1495C
	0x02D1488C LDR X0, [X26]
	0x02D14890 ADRP X27, 0x1409000
	0x02D14894 LDR X27, [X27 + 0x790]
	0x02D14898 BL 0x1C16F10
	0x02D1489C LDR X8, [X19 + 0x20]
	0x02D148A0 MOV X1, X20
	0x02D148A4 MOV X3, X31
	0x02D148A8 MOV X23, X0
	0x02D148AC LDR X8, [X8 + 0xC0]
	0x02D148B0 LDR X2, [X8 + 0x20]
	0x02D148B4 BL 0x2D0E824
	0x02D148B8 LDR X3, [X27]
	0x02D148BC MOV X0, X22
	0x02D148C0 MOV X1, X23
	0x02D148C4 MOV W2, W31
	0x02D148C8 BL 0x21A18B4
	0x02D148CC LDR X0, [X25]
	0x02D148D0 LDR X22, [X20 + 0x18]
	0x02D148D4 BL 0x1C16F10
	0x02D148D8 LDR X8, [X19 + 0x20]
	0x02D148DC MOV X1, X20
	0x02D148E0 MOV X3, X31
	0x02D148E4 MOV X23, X0
	0x02D148E8 LDR X8, [X8 + 0xC0]
	0x02D148EC LDR X2, [X8 + 0x28]
	0x02D148F0 BL 0x2D0E824
	0x02D148F4 CBZ X22, 0x2D14A7C
	0x02D148F8 ADRP X8, 0x1409000
	0x02D148FC LDR X8, [X8 + 0x798]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x16C8000
	008 Move W8, [X22+1948]
	009 Move X20, X2
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x1409000
	017 Move X0, [X0+3720]
	018 Call 0x1C17CF4
	019 Move X0, 0x140B000
	020 Move X0, [X0+304]
	021 Call 0x1C17CF4
	022 Move X0, 0x1409000
	023 Move X0, [X0+3664]
	024 Call 0x1C17CF4
	025 Move X0, 0x1408000
	026 Move X0, [X0+2200]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+1948], W8
	030 Move W8, [X21+48]
	031 Compare W8, 0
	032 JumpIfEqual {153}
	033 Compare X19, 0
	034 JumpIfEqual {179}
	035 Move W8, [X19+140]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, [X20+32]
	038 Move X22, [X21+16]
	039 Move X8, [X8+192]
	040 Move [X21+48], W31
	041 Compare X22, 0
	042 JumpIfEqual {179}
	043 Move X1, [X8]
	044 Move V8, [X21+56]
	045 Move W8, [X1+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {53}
	050 Move X0, X1
	051 Call 0x1C5D684
	052 Move X1, X0
	053 Move X8, [X22]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move W2, 1
	064 Move X0, X22
	065 Call 0x1C5D788
	066 Move W9, [X10]
	067 Add W9, W9, 1
	068 Add X8, X8, W9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X1, [X0+8]
	072 Move X0, X22
	073 Move V0, V8
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X21, [X21+16]
	076 Compare X21, 0
	077 JumpIfEqual {179}
	078 Move X8, [X20+32]
	079 Move X8, [X8+192]
	080 Move X1, [X8]
	081 Move W8, [X1+309]
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {89}
	086 Move X0, X1
	087 Call 0x1C5D684
	088 Move X1, X0
	089 Move X8, [X21]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move W2, 4
	100 Move X0, X21
	101 Call 0x1C5D788
	102 Move W9, [X10]
	103 Add W9, W9, 4
	104 Add X8, X8, W9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X21
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X0, X19
	111 Move X1, X31
	112 Call EventBase.get_target, X0
	113 Compare X0, 0
	114 JumpIfEqual {126}
	115 Move X8, 0x1408000
	116 Move X8, [X8+2200]
	117 Move X9, [X0]
	118 Move X8, [X8]
	119 Move W11, [X9+304]
	120 Move W10, [X8+304]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X9, [X9+200]
	123 Add X9, X9, X10
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X19, X31
	127 Move X20, 0x1409000
	128 Move X20, [X20+3664]
	129 Move X0, [X20]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {135}
	133 Call 0x1C17DFC
	134 Move X0, [X20]
	135 Move X8, [X0+184]
	136 Move X0, X19
	137 Move X2, X31
	138 Move W1, [X8+8]
	139 Call PointerCaptureHelper.ReleasePointer, X0, X1
	140 Compare X19, 0
	141 JumpIfEqual {153}
	142 Move X8, 0x1409000
	143 Move X8, [X8+3720]
	144 Move X9, [X19]
	145 Move X8, [X8]
	146 Move W11, [X9+304]
	147 Move W10, [X8+304]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X9, [X9+200]
	150 Add X9, X9, X10
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X20, [X31+32]
	154 Move X19, [X31+40]
	155 Move X22, [X31+16]
	156 Move X21, [X31+24]
	157 Move X30, [X31+8]
	158 Move V8, [X31+48]
	159 Return 
	160 Move X1, X31
	161 Call VisualElement.get_panel, X0
	162 Move X19, X0
	163 Move X0, X19
	164 Move X1, X31
	165 Call BaseVisualElementPanel.get_uiElementsBridge, X0
	166 Compare X0, 0
	167 JumpIfEqual {153}
	168 Move X8, [X0]
	169 Move X20, [X31+32]
	170 Move X19, [X31+40]
	171 Move X22, [X31+16]
	172 Move X21, [X31+24]
	173 Move X30, [X31+8]
	174 Move X3, [X8+376]
	175 Move X2, [X8+384]
	176 Move W1, W31
	177 Move V8, [X31+48]
	178 CallNoReturn X3
	179 Call 0x1C17F20

