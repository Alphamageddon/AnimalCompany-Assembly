Type: UnityEngine.UIElements.Column/UxmlObjectTraits`1

Method: UnityEngine.UIElements.Length ParseLength(System.String str, UnityEngine.UIElements.Length defaultValue)

Disassembly:
	0x02738320 LDP X22, X21, [X31 + 0x10]
	0x02738324 MOV X1, X31
	0x02738328 LDR X30, [X31], #0x30
	0x0273832C B 0x3E1CDF4
	0x02738330 BL 0x1C16F20
	0x02738334 SUB X31, X31, 0xB0
	0x02738338 STP X30, X23, [X31 + 0x80]
	0x0273833C STP X22, X21, [X31 + 0x90]
	0x02738340 STP X20, X19, [X31 + 0xA0]
	0x02738344 CBZ X0, 0x2738460
	0x02738348 MOV X23, X0
	0x0273834C LDP V0, V1, [X3]
	0x02738350 LDR X0, [X0 + 0x18]
	0x02738354 MOV X22, X3
	0x02738358 STP V0, V1, [X31 + 0x40]
	0x0273835C CBZ X0, 0x2738460
	0x02738360 LDR X8, [X0]
	0x02738364 LDP V0, V1, [X31 + 0x40]
	0x02738368 MOV X21, X2
	0x0273836C MOV X20, X1
	0x02738370 LDR X9, [X8 + 0x178]
	0x02738374 STP V0, V1, [X31 + 0x60]
	0x02738378 LDR X3, [X8 + 0x180]
	0x0273837C ADD X2, X31, 0x60
	0x02738380 MOV X1, X21
	0x02738384 MOV X19, X4
	0x02738388 BLR X9
	0x0273838C LDR X8, [X20]
	0x02738390 CBZ X8, 0x2738460
	0x02738394 LDR X9, [X19 + 0x20]
	0x02738398 MOV X1, X0
	0x0273839C MOV X0, X8
	0x027383A0 LDR X9, [X9 + 0xC0]
	0x027383A4 LDR X2, [X9 + 0x20]
	0x027383A8 BL 0x3D79D24
	0x027383AC LDP V0, V1, [X22]
	0x027383B0 LDR X0, [X23 + 0x20]
	0x027383B4 STP V0, V1, [X31 + 0x20]
	0x027383B8 CBZ X0, 0x2738460
	0x027383BC LDR X8, [X0]
	0x027383C0 LDP V0, V1, [X31 + 0x20]
	0x027383C4 ADD X2, X31, 0x60
	0x027383C8 MOV X1, X21
	0x027383CC LDR X9, [X8 + 0x178]
	0x027383D0 STP V0, V1, [X31 + 0x60]
	0x027383D4 LDR X3, [X8 + 0x180]
	0x027383D8 BLR X9
	0x027383DC LDR X8, [X20]
	0x027383E0 CBZ X8, 0x2738460
	0x027383E4 LDR X9, [X19 + 0x20]
	0x027383E8 MOV W1, W0
	0x027383EC MOV X0, X8
	0x027383F0 LDR X9, [X9 + 0xC0]
	0x027383F4 LDR X2, [X9 + 0x28]
	0x027383F8 BL 0x3D79D80
	0x027383FC LDP V0, V1, [X22]
	0x02738400 LDR X0, [X23 + 0x28]
	0x02738404 STP V0, V1, [X31]
	0x02738408 CBZ X0, 0x2738460
	0x0273840C LDR X8, [X0]
	0x02738410 LDP V0, V1, [X31]
	0x02738414 ADD X2, X31, 0x60
	0x02738418 MOV X1, X21
	0x0273841C LDR X9, [X8 + 0x178]
	0x02738420 STP V0, V1, [X31 + 0x60]
	0x02738424 LDR X3, [X8 + 0x180]
	0x02738428 BLR X9
	0x0273842C LDR X8, [X20]
	0x02738430 CBZ X8, 0x2738460
	0x02738434 LDR X9, [X19 + 0x20]
	0x02738438 MOV W1, W0
	0x0273843C MOV X0, X8
	0x02738440 LDR X9, [X9 + 0xC0]
	0x02738444 LDR X2, [X9 + 0x30]
	0x02738448 BL 0x3D79DCC
	0x0273844C LDP X20, X19, [X31 + 0xA0]
	0x02738450 LDP X22, X21, [X31 + 0x90]
	0x02738454 LDP X30, X23, [X31 + 0x80]
	0x02738458 ADD X31, X31, 0xB0
	0x0273845C RET
	0x02738460 BL 0x1C16F20
	0x02738464 STP X30, X21, [X31 - 0x20]!
	0x02738468 STP X20, X19, [X31 + 0x10]
	0x0273846C ADRP X20, 0x1CA2000
	0x02738470 ADRP X21, 0x19E5000
	0x02738474 LDRB W8, [X20 + 0x6A6]
	0x02738478 LDR X21, [X21 + 0xB20]
	0x0273847C MOV X19, X0
	0x02738480 TBNZ X8, 0x0, 0x27384F8
	0x02738484 ADRP X0, 0x19E5000
	0x02738488 LDR X0, [X0 + 0xBE8]
	0x0273848C BL 0x1C16CF4
	0x02738490 ADRP X0, 0x19E5000
	0x02738494 LDR X0, [X0 + 0xBF0]
	0x02738498 BL 0x1C16CF4
	0x0273849C ADRP X0, 0x19E5000
	0x027384A0 LDR X0, [X0 + 0xBF8]
	0x027384A4 BL 0x1C16CF4
	0x027384A8 ADRP X0, 0x19E5000
	0x027384AC LDR X0, [X0 + 0xC00]
	0x027384B0 BL 0x1C16CF4
	0x027384B4 ADRP X0, 0x19E5000
	0x027384B8 LDR X0, [X0 + 0xC08]
	0x027384BC BL 0x1C16CF4
	0x027384C0 ADRP X0, 0x19E5000
	0x027384C4 LDR X0, [X0 + 0xB20]
	0x027384C8 BL 0x1C16CF4
	0x027384CC ADRP X0, 0x19E5000
	0x027384D0 LDR X0, [X0 + 0xC10]
	0x027384D4 BL 0x1C16CF4
	0x027384D8 ADRP X0, 0x19E5000
	0x027384DC LDR X0, [X0 + 0xC18]
	0x027384E0 BL 0x1C16CF4
	0x027384E4 ADRP X0, 0x19E5000
	0x027384E8 LDR X0, [X0 + 0xC20]
	0x027384EC BL 0x1C16CF4
	0x027384F0 MOVZ W8, 0x1
	0x027384F4 STRB W8, [X20 + 0x6A6]
	0x027384F8 LDR X0, [X21]
	0x027384FC BL 0x1C16F10
	0x02738500 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D8
	003 Move [X31+32], X30
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X21, 0x1CA3000
	010 Move W8, [X21+1697]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x19BE000
	018 Move X0, [X0+368]
	019 Call 0x1C17CF4
	020 Move X0, 0x19BE000
	021 Move X0, [X0+632]
	022 Call 0x1C17CF4
	023 Move X0, 0x19E6000
	024 Move X0, [X0+2824]
	025 Call 0x1C17CF4
	026 Move X0, 0x19E6000
	027 Move X0, [X0+2832]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+1697], W8
	031 Move [X31+28], W31
	032 Compare X20, 0
	033 JumpIfEqual {135}
	034 Move W8, [X20+16]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X23, 0x19BE000
	037 Move X23, [X23+368]
	038 Move W21, W31
	039 Move X0, X20
	040 Move W1, W21
	041 Move X2, X31
	042 Call String.get_Chars, X0, X1
	043 Move X8, [X23]
	044 Move W22, W0
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move W0, W22
	051 Move X1, X31
	052 Call Char.IsLetter, X0
	053 And W8, W22, 0xFFFF
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {66}
	059 Move W8, [X20+16]
	060 Add W21, W21, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W21, W31
	063 Move TEMP, 0
	064 Not TEMP
	065 Move W22, TEMP
	066 Move W22, W21
	067 Move X0, X20
	068 Move W1, W31
	069 Move W2, W21
	070 Move X3, X31
	071 Call String.Substring, X0, X1, X2
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X21, X0
	074 Move W8, [X20+16]
	075 Move X0, X20
	076 Move W1, W22
	077 Move X3, X31
	078 Subtract W2, W8, W22
	079 Call String.Substring, X0, X1, X2
	080 Compare X0, 0
	081 JumpIfEqual {135}
	082 Move X1, X31
	083 Call String.ToLowerInvariant, X0
	084 Move X20, X0
	085 Move X8, 0x19BE000
	086 Move X8, [X8+632]
	087 Move X8, [X8]
	088 Move X8, [X8+184]
	089 Move X20, [X8]
	090 Move X22, 0x19E6000
	091 Move X22, [X22+2832]
	092 Add X1, X31, 28
	093 Move X0, X21
	094 Move X2, X31
	095 Call Single.TryParse, X0, X1
	096 Move X1, [X22]
	097 Move V8, [X31+28]
	098 Move W21, W0
	099 Move X0, X20
	100 Move X2, X31
	101 Call String.op_Equality, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {107}
	106 Move W1, W31
	107 Move X8, 0x19E6000
	108 Move X8, [X8+2824]
	109 Move X0, X20
	110 Move X2, X31
	111 Move X22, X19
	112 ShiftRight X22, 32
	113 And X22, X22, 0x7FFFFFFF
	114 Move X1, [X8]
	115 Call String.op_Equality, X0, X1
	116 And W31, W0, 1
	117 NotImplemented "Instruction CSINC not yet implemented."
	118 Move S0, W19
	119 And W31, W21, 1
	120 NotImplemented "Instruction FCSEL not yet implemented."
	121 Add X0, X31, 8
	122 Move X2, X31
	123 Move [X31+8], X31
	124 Call Length..ctor, X0, V0, X1
	125 Move X0, [X31+8]
	126 Move X20, [X31+64]
	127 Move X19, [X31+72]
	128 Move X22, [X31+48]
	129 Move X21, [X31+56]
	130 Move X30, [X31+32]
	131 Move X23, [X31+40]
	132 Move V8, [X31+16]
	133 Add X31, X31, 80
	134 Return X0
	135 Call 0x1C17F20

Method: System.Void Init(ref T obj, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc)

Disassembly:
	0x02738504 MOV X20, X0
	0x02738508 BL 0x3E0A2F4
	0x0273850C CBZ X20, 0x27385B4
	0x02738510 ADRP X8, 0x19E5000
	0x02738514 LDR X8, [X8 + 0xC10]
	0x02738518 ADRP X9, 0x19E5000
	0x0273851C LDR X8, [X8]
	0x02738520 LDR X9, [X9 + 0xC08]
	0x02738524 STR X8, [X20 + 0x10]
	0x02738528 STR X20, [X19 + 0x18]
	0x0273852C LDR X0, [X9]
	0x02738530 BL 0x1C16F10
	0x02738534 MOV X1, X31
	0x02738538 MOV X20, X0
	0x0273853C BL 0x3E1BCA4
	0x02738540 CBZ X20, 0x27385B4
	0x02738544 ADRP X8, 0x19E5000
	0x02738548 LDR X8, [X8 + 0xC18]
	0x0273854C ADRP X9, 0x19E5000
	0x02738550 MOVN W10, 0x0
	0x02738554 LDR X8, [X8]
	0x02738558 LDR X9, [X9 + 0xC00]
	0x0273855C STR W10, [X20 + 0x40]
	0x02738560 STR X8, [X20 + 0x10]
	0x02738564 STR X20, [X19 + 0x20]
	0x02738568 LDR X0, [X9]
	0x0273856C ADRP X20, 0x19E5000
	0x02738570 LDR X20, [X20 + 0xBF8]
	0x02738574 BL 0x1C16F10
	0x02738578 LDR X1, [X20]
	0x0273857C MOV X20, X0
	0x02738580 BL 0x2734B10
	0x02738584 CBZ X20, 0x27385B4
	0x02738588 ADRP X8, 0x19E5000
	0x0273858C LDR X8, [X8 + 0xC20]
	0x02738590 MOV X0, X19
	0x02738594 MOV X1, X31
	0x02738598 LDR X8, [X8]
	0x0273859C STR W31, [X20 + 0x40]
	0x027385A0 STR X8, [X20 + 0x10]
	0x027385A4 STR X20, [X19 + 0x28]
	0x027385A8 LDP X20, X19, [X31 + 0x10]
	0x027385AC LDP X30, X21, [X31], #0x20
	0x027385B0 B 0x3E1CDF4
	0x027385B4 BL 0x1C16F20
	0x027385B8 SUB X31, X31, 0xA0
	0x027385BC STR X30, [X31 + 0x60]
	0x027385C0 STP X24, X23, [X31 + 0x70]
	0x027385C4 STP X22, X21, [X31 + 0x80]
	0x027385C8 STP X20, X19, [X31 + 0x90]
	0x027385CC ADRP X24, 0x1CA2000
	0x027385D0 LDRB W8, [X24 + 0x6A7]
	0x027385D4 MOV X19, X4
	0x027385D8 MOV X22, X3
	0x027385DC MOV X21, X2
	0x027385E0 MOV X20, X1
	0x027385E4 MOV X23, X0
	0x027385E8 TBNZ X8, 0x0, 0x2738624
	0x027385EC ADRP X0, 0x19E5000
	0x027385F0 LDR X0, [X0 + 0xC28]
	0x027385F4 BL 0x1C16CF4
	0x027385F8 ADRP X0, 0x19E5000
	0x027385FC LDR X0, [X0 + 0xC30]
	0x02738600 BL 0x1C16CF4
	0x02738604 ADRP X0, 0x19E5000
	0x02738608 LDR X0, [X0 + 0xC38]
	0x0273860C BL 0x1C16CF4
	0x02738610 ADRP X0, 0x19E5000
	0x02738614 LDR X0, [X0 + 0xC40]
	0x02738618 BL 0x1C16CF4
	0x0273861C MOVZ W8, 0x1
	0x02738620 STRB W8, [X24 + 0x6A7]
	0x02738624 STP X31, X31, [X31 + 0x28]
	0x02738628 STR X31, [X31 + 0x38]
	0x0273862C CBZ X23, 0x27386E0
	0x02738630 LDP V0, V1, [X22]
	0x02738634 LDR X0, [X23 + 0x18]
	0x02738638 STP V0, V1, [X31]
	0x0273863C CBZ X0, 0x27386E0
	0x02738640 LDR X8, [X0]
	0x02738644 LDP V0, V1, [X31]
	0x02738648 ADD X2, X31, 0x40
	0x0273864C MOV X1, X21
	0x02738650 LDR X9, [X8 + 0x178]
	0x02738654 STP V0, V1, [X31 + 0x40]
	0x02738658 LDR X3, [X8 + 0x180]
	0x0273865C BLR X9
	0x02738660 CBZ X0, 0x27386C4
	0x02738664 ADRP X8, 0x19E5000
	0x02738668 LDR X8, [X8 + 0xC40]
	0x0273866C ADRP X22, 0x19E5000
	0x02738670 ADRP X21, 0x19E5000
	0x02738674 LDR X1, [X8]
	0x02738678 LDR X22, [X22 + 0xC30]
	0x0273867C LDR X21, [X21 + 0xC28]
	0x02738680 ADD X8, X31, 0x28
	0x02738684 BL 0x301CB58
	0x02738688 LDR X1, [X22]
	0x0273868C ADD X0, X31, 0x28
	0x02738690 BL 0x2BC4350
	0x02738694 TBZ X0, 0x0, 0x27386B8
	0x02738698 LDR X0, [X20]
	0x0273869C CBZ X0, 0x27386DC
	0x027386A0 LDR X8, [X19 + 0x20]
	0x027386A4 LDR X1, [X31 + 0x38]
	0x027386A8 LDR X8, [X8 + 0xC0]
	0x027386AC LDR X2, [X8 + 0x20]
	0x027386B0 BL 0x3D7A24C
	0x027386B4 B 0x2738688
	0x027386B8 LDR X1, [X21]
	0x027386BC ADD X0, X31, 0x28
	0x027386C0 BL 0x2BC434C
	0x027386C4 LDP X20, X19, [X31 + 0x90]
	0x027386C8 LDP X22, X21, [X31 + 0x80]
	0x027386CC LDP X24, X23, [X31 + 0x70]
	0x027386D0 LDR X30, [X31 + 0x60]
	0x027386D4 ADD X31, X31, 0xA0
	0x027386D8 RET
	0x027386DC BL 0x1C16F20
	0x027386E0 BL 0x1C16F20
	0x027386E4 B 0x27386EC
	0x027386E8 B 0x27386EC
	0x027386EC MOV X19, X0
	0x027386F0 CMP W1, 0x1
	0x027386F4 B.NE 0x2738720
	0x027386F8 MOV X0, X19
	0x027386FC BL 0x3EB1AD0
	0x02738700 LDR X20, [X0]
	0x02738704 BL 0x3EB1AE0
	0x02738708 LDR X1, [X21]
	0x0273870C ADD X0, X31, 0x28
	0x02738710 BL 0x2BC434C
	0x02738714 CBZ X20, 0x27386C4
	0x02738718 MOV X0, X20
	0x0273871C BL 0x1C16F18
	0x02738720 MOV X20, X31
	0x02738724 B 0x273872C
	0x02738728 MOV X19, X0
	0x0273872C LDR X1, [X21]
	0x02738730 ADD X0, X31, 0x28
	0x02738734 BL 0x2BC434C
	0x02738738 CBNZ X20, 0x2738744
	0x0273873C MOV X0, X19
	0x02738740 BL 0x1D2C690
	0x02738744 MOV X0, X20
	0x02738748 BL 0x1C16F18
	0x0273874C BL 0x1990590
	0x02738750 STP X30, X21, [X31 - 0x20]!
	0x02738754 STP X20, X19, [X31 + 0x10]
	0x02738758 ADRP X20, 0x1CA2000
	0x0273875C ADRP X21, 0x19E5000
	0x02738760 LDRB W8, [X20 + 0x6A8]
	0x02738764 LDR X21, [X21 + 0xC48]
	0x02738768 MOV X19, X0
	0x0273876C TBNZ X8, 0x0, 0x2738790
	0x02738770 ADRP X0, 0x19E5000
	0x02738774 LDR X0, [X0 + 0xC50]
	0x02738778 BL 0x1C16CF4
	0x0273877C ADRP X0, 0x19E5000
	0x02738780 LDR X0, [X0 + 0xC48]
	0x02738784 BL 0x1C16CF4
	0x02738788 MOVZ W8, 0x1
	0x0273878C STRB W8, [X20 + 0x6A8]
	0x02738790 LDR X0, [X21]
	0x02738794 BL 0x1C16F10
	0x02738798 MOV X1, X31
	0x0273879C MOV X20, X0
	0x027387A0 BL 0x33BDD8C
	0x027387A4 STR X20, [X19 + 0x18]
	0x027387A8 MOV X0, X19
	0x027387AC LDP X20, X19, [X31 + 0x10]
	0x027387B0 MOV X1, X31
	0x027387B4 LDP X30, X21, [X31], #0x20
	0x027387B8 B 0x3E1CDF4
	0x027387BC RET
	0x027387C0 MOV X1, X31
	0x027387C4 B 0x3E1CDF4
	0x027387C8 RET
	0x027387CC MOV X1, X31
	0x027387D0 B 0x3E1CDF4
	0x027387D4 STP X30, X21, [X31 - 0x20]!
	0x027387D8 STP X20, X19, [X31 + 0x10]
	0x027387DC ADRP X20, 0x1CA2000
	0x027387E0 ADRP X21, 0x19E5000
	0x027387E4 LDRB W8, [X20 + 0x6A9]
	0x027387E8 LDR X21, [X21 + 0xB20]
	0x027387EC MOV X19, X0
	0x027387F0 TBNZ X8, 0x0, 0x273882C
	0x027387F4 ADRP X0, 0x19E5000
	0x027387F8 LDR X0, [X0 + 0xB28]
	0x027387FC BL 0x1C16CF4
	0x02738800 ADRP X0, 0x19E5000
	0x02738804 LDR X0, [X0 + 0xBF0]
	0x02738808 BL 0x1C16CF4
	0x0273880C ADRP X0, 0x19E5000
	0x02738810 LDR X0, [X0 + 0xB20]
	0x02738814 BL 0x1C16CF4
	0x02738818 ADRP X0, 0x19E5000
	0x0273881C LDR X0, [X0 + 0xC58]
	0x02738820 BL 0x1C16CF4
	0x02738824 MOVZ W8, 0x1
	0x02738828 STRB W8, [X20 + 0x6A9]
	0x0273882C LDR X0, [X21]
	0x02738830 BL 0x1C16F10
	0x02738834 MOV X1, X31
	0x02738838 MOV X20, X0
	0x0273883C BL 0x3E0A2F4
	0x02738840 CBZ X20, 0x273888C
	0x02738844 ADRP X8, 0x19E5000
	0x02738848 LDR X8, [X8 + 0xC58]
	0x0273884C MOV X0, X19
	0x02738850 MOV X1, X31
	0x02738854 LDR X8, [X8]
	0x02738858 STR X8, [X20 + 0x10]
	0x0273885C STR X20, [X19 + 0x78]
	0x02738860 BL 0x3CEA004
	0x02738864 LDR X8, [X19 + 0x40]
	0x02738868 CBZ X8, 0x273888C
	0x0273886C STR W31, [X8 + 0x40]
	0x02738870 LDR X8, [X19 + 0x50]
	0x02738874 CBZ X8, 0x273888C
	0x02738878 LDP X20, X19, [X31 + 0x10]
	0x0273887C MOVZ W9, 0x1
	0x02738880 STRB W9, [X8 + 0x40]
	0x02738884 LDP X30, X21, [X31], #0x20
	0x02738888 RET
	0x0273888C BL 0x1C16F20
	0x02738890 SUB X31, X31, 0xB0
	0x02738894 STP X30, X23, [X31 + 0x80]
	0x02738898 STP X22, X21, [X31 + 0x90]
	0x0273889C STP X20, X19, [X31 + 0xA0]
	0x027388A0 LDP V1, V0, [X3]
	0x027388A4 STP V1, V0, [X31 + 0x40]
	0x027388A8 CBZ X0, 0x27389D0
	0x027388AC LDP V0, V1, [X31 + 0x40]
	0x027388B0 MOV X20, X4
	0x027388B4 MOV X22, X3
	0x027388B8 ADD X3, X31, 0x20
	0x027388BC MOV X4, X31
	0x027388C0 MOV X21, X2
	0x027388C4 MOV X19, X1
	0x027388C8 MOV X23, X0
	0x027388CC STP V0, V1, [X31 + 0x20]
	0x027388D0 BL 0x3CEA08C
	0x027388D4 LDP V0, V1, [X22]
	0x027388D8 LDR X0, [X23 + 0x78]
	0x027388DC STP V0, V1, [X31]
	0x027388E0 CBZ X0, 0x27389D0
	0x027388E4 LDR X8, [X0]
	0x027388E8 LDP V0, V1, [X31]
	0x027388EC ADD X2, X31, 0x60
	0x027388F0 MOV X1, X21
	0x027388F4 LDR X9, [X8 + 0x178]
	0x027388F8 STP V0, V1, [X31 + 0x60]
	0x027388FC LDR X3, [X8 + 0x180]
	0x02738900 BLR X9
	0x02738904 LDR X8, [X20 + 0x20]
	0x02738908 MOV X21, X0
	0x0273890C LDR X8, [X8 + 0xC0]
	0x02738910 LDR X1, [X8 + 0x8]
	0x02738914 LDRB W8, [X1 + 0x135]
	0x02738918 TBNZ X8, 0x0, 0x2738928
	0x0273891C MOV X0, X1
	0x02738920 BL 0x1C5C684
	0x02738924 MOV X1, X0
	0x02738928 CBZ X19, 0x27389D0
	0x0273892C LDR X8, [X19]
	0x02738930 LDRB W9, [X1 + 0x130]
	0x02738934 LDRB W10, [X8 + 0x130]
	0x02738938 CMP W10, W9
	0x0273893C B.CC 0x27389C8
	0x02738940 LDR X8, [X8 + 0xC8]
	0x02738944 ADD X8, X8, X9, 0x3, LSL
	0x02738948 LDUR X8, [X8 - 0x8]
	0x0273894C CMP X8, X1
	0x02738950 B.NE 0x27389C8
	0x02738954 LDR X8, [X20 + 0x20]
	0x02738958 LDR X8, [X8 + 0xC0]
	0x0273895C LDR X1, [X8 + 0x8]
	0x02738960 LDRB W8, [X1 + 0x135]
	0x02738964 TBNZ X8, 0x0, 0x2738974
	0x02738968 MOV X0, X1
	0x0273896C BL 0x1C5C684
	0x02738970 MOV X1, X0
	0x02738974 LDR X8, [X19]
	0x02738978 LDRB W9, [X1 + 0x130]
	0x0273897C LDRB W10, [X8 + 0x130]
	0x02738980 CMP W10, W9
	0x02738984 B.CC 0x27389C8
	0x02738988 LDR X8, [X8 + 0xC8]
	0x0273898C ADD X8, X8, X9, 0x3, LSL
	0x02738990 LDUR X8, [X8 - 0x8]
	0x02738994 CMP X8, X1
	0x02738998 B.NE 0x27389C8
	0x0273899C LDR X8, [X20 + 0x20]
	0x027389A0 MOV X0, X19
	0x027389A4 MOV X1, X21
	0x027389A8 LDR X8, [X8 + 0xC0]
	0x027389AC LDR X2, [X8 + 0x10]
	0x027389B0 BL 0x2773314
	0x027389B4 LDP X20, X19, [X31 + 0xA0]
	0x027389B8 LDP X22, X21, [X31 + 0x90]
	0x027389BC LDP X30, X23, [X31 + 0x80]
	0x027389C0 ADD X31, X31, 0xB0
	0x027389C4 RET
	0x027389C8 MOV X0, X19
	0x027389CC BL 0x1C171E0
	0x027389D0 BL 0x1C16F20
	0x027389D4 STP X30, X23, [X31 - 0x30]!
	0x027389D8 STP X22, X21, [X31 + 0x10]
	0x027389DC STP X20, X19, [X31 + 0x20]
	0x027389E0 ADRP X20, 0x1CA2000
	0x027389E4 LDRB W8, [X20 + 0x6AA]
	0x027389E8 MOV X19, X0
	0x027389EC TBNZ X8, 0x0, 0x2738A1C
	0x027389F0 ADRP X0, 0x19BC000
	0x027389F4 LDR X0, [X0 + 0x1B8]
	0x027389F8 BL 0x1C16CF4
	0x027389FC ADRP X0, 0x19BC000
	0x02738A00 LDR X0, [X0 + 0x1C0]
	0x02738A04 BL 0x1C16CF4
	0x02738A08 ADRP X0, 0x19BC000
	0x02738A0C LDR X0, [X0 + 0x1D0]
	0x02738A10 BL 0x1C16CF4
	0x02738A14 MOVZ W8, 0x1
	0x02738A18 STRB W8, [X20 + 0x6AA]
	0x02738A1C CBZ X19, 0x2738B3C
	0x02738A20 MOV X0, X19
	0x02738A24 MOV X1, X31
	0x02738A28 BL 0x322B8DC
	0x02738A2C MOV X1, X31
	0x02738A30 BL 0x32277A8
	0x02738A34 MOV X20, X31
	0x02738A38 TBNZ X0, 0x0, 0x2738B28
	0x02738A3C MOVZ W1, 0x2C
	0x02738A40 MOV X0, X19
	0x02738A44 MOV W2, W31
	0x02738A48 MOV X3, X31
	0x02738A4C BL 0x3229AE8
	0x02738A50 CBZ X0, 0x2738B3C
	0x02738A54 LDR W8, [X0 + 0x18]
	0x02738A58 MOV X19, X0
	0x02738A5C CBZ W8, 0x2738B24
	0x02738A60 ADRP X8, 0x19BC000
	0x02738A64 LDR X8, [X8 + 0x1D0]
	0x02738A68 LDR X0, [X8]
	0x02738A6C BL 0x1C16F10
	0x02738A70 ADRP X8, 0x19BC000
	0x02738A74 LDR X8, [X8 + 0x1C0]
	0x02738A78 MOV X20, X0
	0x02738A7C LDR X1, [X8]
	0x02738A80 BL 0x301B7C4
	0x02738A84 LDR W8, [X19 + 0x18]
	0x02738A88 CMP W8, 0x1
	0x02738A8C B.LT 0x2738B28
	0x02738A90 ADRP X23, 0x19BC000
	0x02738A94 LDR X23, [X23 + 0x1B8]
	0x02738A98 MOV X21, X31
	0x02738A9C ADD X22, X19, 0x20
	0x02738AA0 CMP W21, W8
	0x02738AA4 B.CS 0x2738B40
	0x02738AA8 LDR X0, [X22, X21, LSL #3]
	0x02738AAC CBZ X0, 0x2738B3C
	0x02738AB0 MOV X1, X31
	0x02738AB4 BL 0x322B8DC
	0x02738AB8 CBZ X20, 0x2738B3C
	0x02738ABC LDR W10, [X20 + 0x1C]
	0x02738AC0 LDR X8, [X20 + 0x10]
	0x02738AC4 LDR X9, [X23]
	0x02738AC8 ADD W10, W10, 0x1
	0x02738ACC STR W10, [X20 + 0x1C]

ISIL:
	001 Subtract X31, X31, 480
	002 Move [X31+400], X29
	003 Move [X31+416], X30
	004 Move [X31+424], X25
	005 Move [X31+432], X24
	006 Move [X31+440], X23
	007 Move [X31+448], X22
	008 Move [X31+456], X21
	009 Move [X31+464], X20
	010 Move [X31+472], X19
	011 Move X24, 0x1CA3000
	012 Move W8, [X24+1698]
	013 Move X19, X4
	014 Move X21, X3
	015 Move X22, X2
	016 Move X20, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x19E6000
	023 Move X0, [X0+2816]
	024 Call 0x1C17CF4
	025 Move X0, 0x19E6000
	026 Move X0, [X0+2840]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+1698], W8
	030 Compare X23, 0
	031 JumpIfEqual {473}
	032 Move V0, [X21]
	033 Move V1, [X21+16]
	034 Move X0, [X23+24]
	035 Move [X31+336], V0
	036 Move [X31+344], V1
	037 Compare X0, 0
	038 JumpIfEqual {473}
	039 Move X8, [X0]
	040 Move V0, [X31+336]
	041 Move V1, [X31+352]
	042 Add X2, X31, 368
	043 Move X1, X22
	044 Move X9, [X8+376]
	045 Move [X31+368], V0
	046 Move [X31+376], V1
	047 Move X3, [X8+384]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X8, [X20]
	050 Compare X8, 0
	051 JumpIfEqual {473}
	052 Move X9, [X19+32]
	053 Move X1, X0
	054 Move X0, X8
	055 Move X9, [X9+192]
	056 Move X2, [X9+32]
	057 Call Column.set_name, X0, X1
	058 Move V0, [X21]
	059 Move V1, [X21+16]
	060 Move X0, [X23+32]
	061 Move [X31+304], V0
	062 Move [X31+312], V1
	063 Compare X0, 0
	064 JumpIfEqual {473}
	065 Move X8, [X0]
	066 Move V0, [X31+304]
	067 Move V1, [X31+320]
	068 Add X2, X31, 368
	069 Move X1, X22
	070 Move X9, [X8+376]
	071 Move [X31+368], V0
	072 Move [X31+376], V1
	073 Move X3, [X8+384]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X8, [X20]
	076 Compare X8, 0
	077 JumpIfEqual {473}
	078 Move X9, [X19+32]
	079 Move X1, X0
	080 Move X0, X8
	081 Move X9, [X9+192]
	082 Move X2, [X9+40]
	083 Call Column.set_title, X0, X1
	084 Move V0, [X21]
	085 Move V1, [X21+16]
	086 Move X0, [X23+40]
	087 Move [X31+272], V0
	088 Move [X31+280], V1
	089 Compare X0, 0
	090 JumpIfEqual {473}
	091 Move X8, [X0]
	092 Move V0, [X31+272]
	093 Move V1, [X31+288]
	094 Add X2, X31, 368
	095 Move X1, X22
	096 Move X9, [X8+376]
	097 Move [X31+368], V0
	098 Move [X31+376], V1
	099 Move X3, [X8+384]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X8, [X20]
	102 Compare X8, 0
	103 JumpIfEqual {473}
	104 Move X9, [X19+32]
	105 And W1, W0, 1
	106 Move X0, X8
	107 Move X9, [X9+192]
	108 Move X2, [X9+48]
	109 Call Column.set_visible, X0, X1
	110 Move V0, [X21]
	111 Move V1, [X21+16]
	112 Move X0, [X23+48]
	113 Move [X31+240], V0
	114 Move [X31+248], V1
	115 Compare X0, 0
	116 JumpIfEqual {473}
	117 Move X8, [X0]
	118 Move V0, [X31+240]
	119 Move V1, [X31+256]
	120 Add X2, X31, 368
	121 Move X1, X22
	122 Move X9, [X8+376]
	123 Move [X31+368], V0
	124 Move [X31+376], V1
	125 Move X3, [X8+384]
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X1, X31
	128 Call 0x2738320, X0, X1
	129 Move X8, [X20]
	130 Compare X8, 0
	131 JumpIfEqual {473}
	132 Move X9, [X19+32]
	133 Move X1, X0
	134 Move X0, X8
	135 Move X9, [X9+192]
	136 Move X2, [X9+80]
	137 Call Column.set_width, X0, X1
	138 Move V0, [X21]
	139 Move V1, [X21+16]
	140 Move X0, [X23+64]
	141 Move [X31+208], V0
	142 Move [X31+216], V1
	143 Compare X0, 0
	144 JumpIfEqual {473}
	145 Move X8, [X0]
	146 Move V0, [X31+208]
	147 Move V1, [X31+224]
	148 Add X2, X31, 368
	149 Move X1, X22
	150 Move X9, [X8+376]
	151 Move [X31+368], V0
	152 Move [X31+376], V1
	153 Move X3, [X8+384]
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move W8, 0x4B000000
	156 Move X24, X0
	157 Add X0, X31, 408
	158 Move S0, W8
	159 Move X1, X31
	160 Move [X31+408], X31
	161 Call Length..ctor, X0, V0
	162 Move X1, [X31+408]
	163 Move X0, X24
	164 Call 0x2738320, X0, X1
	165 Move X8, [X20]
	166 Compare X8, 0
	167 JumpIfEqual {473}
	168 Move X9, [X19+32]
	169 Move X1, X0
	170 Move X0, X8
	171 Move X9, [X9+192]
	172 Move X2, [X9+88]
	173 Call Column.set_maxWidth, X0, X1
	174 Move V0, [X21]
	175 Move V1, [X21+16]
	176 Move X0, [X23+56]
	177 Move [X31+176], V0
	178 Move [X31+184], V1
	179 Compare X0, 0
	180 JumpIfEqual {473}
	181 Move X8, [X0]
	182 Move V0, [X31+176]
	183 Move V1, [X31+192]
	184 Add X2, X31, 368
	185 Move X1, X22
	186 Move X9, [X8+376]
	187 Move [X31+368], V0
	188 Move [X31+376], V1
	189 Move X3, [X8+384]
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Move W8, 0x420C0000
	192 Move X24, X0
	193 Add X0, X31, 168
	194 Move S0, W8
	195 Move X1, X31
	196 Move [X31+168], X31
	197 Call Length..ctor, X0, V0
	198 Move X1, [X31+168]
	199 Move X0, X24
	200 Call 0x2738320, X0, X1
	201 Move X8, [X20]
	202 Compare X8, 0
	203 JumpIfEqual {473}
	204 Move X9, [X19+32]
	205 Move X1, X0
	206 Move X0, X8
	207 Move X9, [X9+192]
	208 Move X2, [X9+96]
	209 Call Column.set_minWidth, X0, X1
	210 Move V0, [X21]
	211 Move V1, [X21+16]
	212 Move X0, [X23+80]
	213 Move [X31+128], V0
	214 Move [X31+136], V1
	215 Compare X0, 0
	216 JumpIfEqual {473}
	217 Move X8, [X0]
	218 Move V0, [X31+128]
	219 Move V1, [X31+144]
	220 Add X2, X31, 368
	221 Move X1, X22
	222 Move X9, [X8+376]
	223 Move [X31+368], V0
	224 Move [X31+376], V1
	225 Move X3, [X8+384]
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Move X8, [X20]
	228 Compare X8, 0
	229 JumpIfEqual {473}
	230 Move X9, [X19+32]
	231 And W1, W0, 1
	232 Move X0, X8
	233 Move X9, [X9+192]
	234 Move X2, [X9+104]
	235 Call Column.set_sortable, X0, X1
	236 Move V0, [X21]
	237 Move V1, [X21+16]
	238 Move X0, [X23+72]
	239 Move [X31+96], V0
	240 Move [X31+104], V1
	241 Compare X0, 0
	242 JumpIfEqual {473}
	243 Move X8, [X0]
	244 Move V0, [X31+96]
	245 Move V1, [X31+112]
	246 Add X2, X31, 368
	247 Move X1, X22
	248 Move X9, [X8+376]
	249 Move [X31+368], V0
	250 Move [X31+376], V1
	251 Move X3, [X8+384]
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Move X8, [X20]
	254 Compare X8, 0
	255 JumpIfEqual {473}
	256 Move X9, [X19+32]
	257 And W1, W0, 1
	258 Move X0, X8
	259 Move X9, [X9+192]
	260 Move X2, [X9+112]
	261 Call Column.set_stretchable, X0, X1
	262 Move V0, [X21]
	263 Move V1, [X21+16]
	264 Move X0, [X23+88]
	265 Move [X31+64], V0
	266 Move [X31+72], V1
	267 Compare X0, 0
	268 JumpIfEqual {473}
	269 Move X8, [X0]
	270 Move V0, [X31+64]
	271 Move V1, [X31+80]
	272 Add X2, X31, 368
	273 Move X1, X22
	274 Move X9, [X8+376]
	275 Move [X31+368], V0
	276 Move [X31+376], V1
	277 Move X3, [X8+384]
	278 NotImplemented "Instruction BLR not yet implemented."
	279 Move X8, [X20]
	280 Compare X8, 0
	281 JumpIfEqual {473}
	282 Move X9, [X19+32]
	283 And W1, W0, 1
	284 Move X0, X8
	285 Move X9, [X9+192]
	286 Move X2, [X9+120]
	287 Call Column.set_optional, X0, X1
	288 Move V0, [X21]
	289 Move V1, [X21+16]
	290 Move X0, [X23+96]
	291 Move [X31+32], V0
	292 Move [X31+40], V1
	293 Compare X0, 0
	294 JumpIfEqual {473}
	295 Move X8, [X0]
	296 Move V0, [X31+32]
	297 Move V1, [X31+48]
	298 Add X2, X31, 368
	299 Move X1, X22
	300 Move X9, [X8+376]
	301 Move [X31+368], V0
	302 Move [X31+376], V1
	303 Move X3, [X8+384]
	304 NotImplemented "Instruction BLR not yet implemented."
	305 Move X8, [X20]
	306 Compare X8, 0
	307 JumpIfEqual {473}
	308 Move X9, [X19+32]
	309 And W1, W0, 1
	310 Move X0, X8
	311 Move X9, [X9+192]
	312 Move X2, [X9+128]
	313 Call Column.set_resizable, X0, X1
	314 Move V0, [X21]
	315 Move V1, [X21+16]
	316 Move X0, [X23+104]
	317 Move [X31], V0
	318 Move [X31+8], V1
	319 Compare X0, 0
	320 JumpIfEqual {473}
	321 Move X8, [X0]
	322 Move V0, [X31]
	323 Move V1, [X31+16]
	324 Add X2, X31, 368
	325 Move X1, X22
	326 Move X9, [X8+376]
	327 Move [X31+368], V0
	328 Move [X31+376], V1
	329 Move X3, [X8+384]
	330 NotImplemented "Instruction BLR not yet implemented."
	331 Move X1, X31
	332 Move X24, X0
	333 Call String.IsNullOrEmpty, X0
	334 Move TEMP, X0
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfEqual {388}
	338 Move X8, [X19+32]
	339 Move X8, [X8+192]
	340 Move X0, [X8+136]
	341 Move W8, [X0+309]
	342 Move TEMP, X8
	343 And TEMP, TEMP, 1
	344 Compare TEMP, 1
	345 JumpIfEqual {347}
	346 Call 0x1C5D684
	347 Call 0x1C17F10
	348 Move X8, [X19+32]
	349 Move X25, X0
	350 Move X8, [X8+192]
	351 Move X1, [X8+144]
	352 Call 0x2373BC4, X0
	353 Move X8, 0x19E6000
	354 Move X8, [X8+2816]
	355 Move X0, [X8]
	356 Move W8, [X0+224]
	357 Compare W8, 0
	358 JumpIfNotEqual {360}
	359 Call 0x1C17DFC
	360 Move X0, [X21+8]
	361 Compare X0, 0
	362 JumpIfEqual {366}
	363 Move X1, X24
	364 Move X2, X31
	365 Call VisualTreeAsset.ResolveTemplate, X0, X1
	366 Compare X25, 0
	367 JumpIfEqual {473}
	368 Move [X25+16], X0
	369 Move X8, 0x19E6000
	370 Move X8, [X8+2840]
	371 Move X0, [X8]
	372 Call 0x1C17F10
	373 Move X8, [X19+32]
	374 Move X1, X25
	375 Move X3, X31
	376 Move X24, X0
	377 Move X8, [X8+192]
	378 Move X2, [X8+152]
	379 Call Func`1<Object>..ctor, X0, X1, X2
	380 Move X0, [X20]
	381 Compare X0, 0
	382 JumpIfEqual {473}
	383 Move X8, [X19+32]
	384 Move X1, X24
	385 Move X8, [X8+192]
	386 Move X2, [X8+160]
	387 Call Column.set_makeHeader, X0, X1
	388 Move V0, [X21]
	389 Move V1, [X21+16]
	390 Move X0, [X23+112]
	391 Move [X31+336], V0
	392 Move [X31+344], V1
	393 Compare X0, 0
	394 JumpIfEqual {473}
	395 Move X8, [X0]
	396 Move V0, [X31+336]
	397 Move V1, [X31+352]
	398 Add X2, X31, 368
	399 Move X1, X22
	400 Move X9, [X8+376]
	401 Move [X31+368], V0
	402 Move [X31+376], V1
	403 Move X3, [X8+384]
	404 NotImplemented "Instruction BLR not yet implemented."
	405 Move X1, X31
	406 Move X22, X0
	407 Call String.IsNullOrEmpty, X0
	408 Move TEMP, X0
	409 And TEMP, TEMP, 1
	410 Compare TEMP, 1
	411 JumpIfEqual {462}
	412 Move X8, [X19+32]
	413 Move X8, [X8+192]
	414 Move X0, [X8+168]
	415 Move W8, [X0+309]
	416 Move TEMP, X8
	417 And TEMP, TEMP, 1
	418 Compare TEMP, 1
	419 JumpIfEqual {421}
	420 Call 0x1C5D684
	421 Call 0x1C17F10
	422 Move X8, [X19+32]
	423 Move X23, X0
	424 Move X8, [X8+192]
	425 Move X1, [X8+176]
	426 Call 0x2373E30, X0
	427 Move X8, 0x19E6000
	428 Move X8, [X8+2816]
	429 Move X0, [X8]
	430 Move W8, [X0+224]
	431 Compare W8, 0
	432 JumpIfNotEqual {434}
	433 Call 0x1C17DFC
	434 Move X0, [X21+8]
	435 Compare X0, 0
	436 JumpIfEqual {440}
	437 Move X1, X22
	438 Move X2, X31
	439 Call VisualTreeAsset.ResolveTemplate, X0, X1
	440 Compare X23, 0
	441 JumpIfEqual {473}
	442 Move [X23+16], X0
	443 Move X8, 0x19E6000
	444 Move X8, [X8+2840]
	445 Move X0, [X8]
	446 Call 0x1C17F10
	447 Move X8, [X19+32]
	448 Move X1, X23
	449 Move X3, X31
	450 Move X21, X0
	451 Move X8, [X8+192]
	452 Move X2, [X8+184]
	453 Call Func`1<Object>..ctor, X0, X1, X2
	454 Move X0, [X20]
	455 Compare X0, 0
	456 JumpIfEqual {473}
	457 Move X8, [X19+32]
	458 Move X1, X21
	459 Move X8, [X8+192]
	460 Move X2, [X8+192]
	461 Call Column.set_makeCell, X0, X1
	462 Move X20, [X31+464]
	463 Move X19, [X31+472]
	464 Move X22, [X31+448]
	465 Move X21, [X31+456]
	466 Move X24, [X31+432]
	467 Move X23, [X31+440]
	468 Move X30, [X31+416]
	469 Move X25, [X31+424]
	470 Move X29, [X31+400]
	471 Add X31, X31, 480
	472 Return 
	473 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x02738AD0 CBZ X8, 0x2738B3C
	0x02738AD4 LDRSW X10, [X20 + 0x18]
	0x02738AD8 LDR W11, [X8 + 0x18]
	0x02738ADC MOV X1, X0
	0x02738AE0 CMP W10, W11
	0x02738AE4 B.CS 0x2738AFC
	0x02738AE8 ADD W9, W10, 0x1
	0x02738AEC ADD X8, X8, X10, 0x3, LSL
	0x02738AF0 STR W9, [X20 + 0x18]
	0x02738AF4 STR X1, [X8 + 0x20]
	0x02738AF8 B 0x2738B10
	0x02738AFC LDR X8, [X9 + 0x20]
	0x02738B00 MOV X0, X20
	0x02738B04 LDR X8, [X8 + 0xC0]
	0x02738B08 LDR X2, [X8 + 0x70]
	0x02738B0C BL 0x301BF90
	0x02738B10 LDR W8, [X19 + 0x18]
	0x02738B14 ADD X21, X21, 0x1
	0x02738B18 CMP W21, W8
	0x02738B1C B.LT 0x2738AA0
	0x02738B20 B 0x2738B28
	0x02738B24 MOV X20, X31
	0x02738B28 MOV X0, X20
	0x02738B2C LDP X20, X19, [X31 + 0x20]
	0x02738B30 LDP X22, X21, [X31 + 0x10]
	0x02738B34 LDP X30, X23, [X31], #0x30
	0x02738B38 RET
	0x02738B3C BL 0x1C16F20
	0x02738B40 BL 0x1C16F28
	0x02738B44 STP X30, X21, [X31 - 0x20]!
	0x02738B48 STP X20, X19, [X31 + 0x10]
	0x02738B4C ADRP X20, 0x1CA2000
	0x02738B50 ADRP X21, 0x19E5000
	0x02738B54 LDRB W8, [X20 + 0x6AB]
	0x02738B58 LDR X21, [X21 + 0xB20]
	0x02738B5C MOV X19, X0
	0x02738B60 TBNZ X8, 0x0, 0x2738B9C
	0x02738B64 ADRP X0, 0x19E5000
	0x02738B68 LDR X0, [X0 + 0xB28]
	0x02738B6C BL 0x1C16CF4
	0x02738B70 ADRP X0, 0x19E5000
	0x02738B74 LDR X0, [X0 + 0xBF0]
	0x02738B78 BL 0x1C16CF4
	0x02738B7C ADRP X0, 0x19E5000
	0x02738B80 LDR X0, [X0 + 0xB20]
	0x02738B84 BL 0x1C16CF4
	0x02738B88 ADRP X0, 0x19E5000
	0x02738B8C LDR X0, [X0 + 0xC58]
	0x02738B90 BL 0x1C16CF4
	0x02738B94 MOVZ W8, 0x1
	0x02738B98 STRB W8, [X20 + 0x6AB]
	0x02738B9C LDR X0, [X21]
	0x02738BA0 BL 0x1C16F10
	0x02738BA4 MOV X1, X31
	0x02738BA8 MOV X20, X0
	0x02738BAC BL 0x3E0A2F4
	0x02738BB0 CBZ X20, 0x2738BFC
	0x02738BB4 ADRP X8, 0x19E5000
	0x02738BB8 LDR X8, [X8 + 0xC58]
	0x02738BBC MOV X0, X19
	0x02738BC0 MOV X1, X31
	0x02738BC4 LDR X8, [X8]
	0x02738BC8 STR X8, [X20 + 0x10]
	0x02738BCC STR X20, [X19 + 0x78]
	0x02738BD0 BL 0x3CEA004
	0x02738BD4 LDR X8, [X19 + 0x40]
	0x02738BD8 CBZ X8, 0x2738BFC
	0x02738BDC STR W31, [X8 + 0x40]
	0x02738BE0 LDR X8, [X19 + 0x50]
	0x02738BE4 CBZ X8, 0x2738BFC
	0x02738BE8 LDP X20, X19, [X31 + 0x10]
	0x02738BEC MOVZ W9, 0x1
	0x02738BF0 STRB W9, [X8 + 0x40]
	0x02738BF4 LDP X30, X21, [X31], #0x20
	0x02738BF8 RET
	0x02738BFC BL 0x1C16F20
	0x02738C00 SUB X31, X31, 0xB0
	0x02738C04 STP X30, X23, [X31 + 0x80]
	0x02738C08 STP X22, X21, [X31 + 0x90]
	0x02738C0C STP X20, X19, [X31 + 0xA0]
	0x02738C10 LDP V1, V0, [X3]
	0x02738C14 STP V1, V0, [X31 + 0x40]
	0x02738C18 CBZ X0, 0x2738D40
	0x02738C1C LDP V0, V1, [X31 + 0x40]
	0x02738C20 MOV X20, X4
	0x02738C24 MOV X22, X3
	0x02738C28 ADD X3, X31, 0x20
	0x02738C2C MOV X4, X31
	0x02738C30 MOV X21, X2
	0x02738C34 MOV X19, X1
	0x02738C38 MOV X23, X0
	0x02738C3C STP V0, V1, [X31 + 0x20]
	0x02738C40 BL 0x3CEA08C
	0x02738C44 LDP V0, V1, [X22]
	0x02738C48 LDR X0, [X23 + 0x78]
	0x02738C4C STP V0, V1, [X31]
	0x02738C50 CBZ X0, 0x2738D40
	0x02738C54 LDR X8, [X0]
	0x02738C58 LDP V0, V1, [X31]
	0x02738C5C ADD X2, X31, 0x60
	0x02738C60 MOV X1, X21
	0x02738C64 LDR X9, [X8 + 0x178]
	0x02738C68 STP V0, V1, [X31 + 0x60]
	0x02738C6C LDR X3, [X8 + 0x180]
	0x02738C70 BLR X9
	0x02738C74 LDR X8, [X20 + 0x20]
	0x02738C78 MOV X21, X0
	0x02738C7C LDR X8, [X8 + 0xC0]
	0x02738C80 LDR X1, [X8 + 0x8]
	0x02738C84 LDRB W8, [X1 + 0x135]
	0x02738C88 TBNZ X8, 0x0, 0x2738C98
	0x02738C8C MOV X0, X1
	0x02738C90 BL 0x1C5C684
	0x02738C94 MOV X1, X0
	0x02738C98 CBZ X19, 0x2738D40
	0x02738C9C LDR X8, [X19]
	0x02738CA0 LDRB W9, [X1 + 0x130]
	0x02738CA4 LDRB W10, [X8 + 0x130]
	0x02738CA8 CMP W10, W9
	0x02738CAC B.CC 0x2738D38
	0x02738CB0 LDR X8, [X8 + 0xC8]
	0x02738CB4 ADD X8, X8, X9, 0x3, LSL
	0x02738CB8 LDUR X8, [X8 - 0x8]
	0x02738CBC CMP X8, X1
	0x02738CC0 B.NE 0x2738D38
	0x02738CC4 LDR X8, [X20 + 0x20]
	0x02738CC8 LDR X8, [X8 + 0xC0]
	0x02738CCC LDR X1, [X8 + 0x8]
	0x02738CD0 LDRB W8, [X1 + 0x135]
	0x02738CD4 TBNZ X8, 0x0, 0x2738CE4
	0x02738CD8 MOV X0, X1
	0x02738CDC BL 0x1C5C684
	0x02738CE0 MOV X1, X0
	0x02738CE4 LDR X8, [X19]
	0x02738CE8 LDRB W9, [X1 + 0x130]
	0x02738CEC LDRB W10, [X8 + 0x130]
	0x02738CF0 CMP W10, W9
	0x02738CF4 B.CC 0x2738D38
	0x02738CF8 LDR X8, [X8 + 0xC8]
	0x02738CFC ADD X8, X8, X9, 0x3, LSL
	0x02738D00 LDUR X8, [X8 - 0x8]
	0x02738D04 CMP X8, X1
	0x02738D08 B.NE 0x2738D38
	0x02738D0C LDR X8, [X20 + 0x20]
	0x02738D10 MOV X0, X19
	0x02738D14 MOV X1, X21
	0x02738D18 LDR X8, [X8 + 0xC0]
	0x02738D1C LDR X2, [X8 + 0x10]
	0x02738D20 BL 0x2775978
	0x02738D24 LDP X20, X19, [X31 + 0xA0]
	0x02738D28 LDP X22, X21, [X31 + 0x90]
	0x02738D2C LDP X30, X23, [X31 + 0x80]
	0x02738D30 ADD X31, X31, 0xB0
	0x02738D34 RET
	0x02738D38 MOV X0, X19
	0x02738D3C BL 0x1C171E0
	0x02738D40 BL 0x1C16F20
	0x02738D44 STP X30, X23, [X31 - 0x30]!
	0x02738D48 STP X22, X21, [X31 + 0x10]
	0x02738D4C STP X20, X19, [X31 + 0x20]
	0x02738D50 ADRP X20, 0x1CA2000
	0x02738D54 LDRB W8, [X20 + 0x6AC]
	0x02738D58 MOV X19, X0
	0x02738D5C TBNZ X8, 0x0, 0x2738D8C
	0x02738D60 ADRP X0, 0x19BC000
	0x02738D64 LDR X0, [X0 + 0x1B8]
	0x02738D68 BL 0x1C16CF4
	0x02738D6C ADRP X0, 0x19BC000
	0x02738D70 LDR X0, [X0 + 0x1C0]
	0x02738D74 BL 0x1C16CF4
	0x02738D78 ADRP X0, 0x19BC000
	0x02738D7C LDR X0, [X0 + 0x1D0]
	0x02738D80 BL 0x1C16CF4
	0x02738D84 MOVZ W8, 0x1
	0x02738D88 STRB W8, [X20 + 0x6AC]
	0x02738D8C CBZ X19, 0x2738EAC
	0x02738D90 MOV X0, X19
	0x02738D94 MOV X1, X31
	0x02738D98 BL 0x322B8DC
	0x02738D9C MOV X1, X31
	0x02738DA0 BL 0x32277A8
	0x02738DA4 MOV X20, X31
	0x02738DA8 TBNZ X0, 0x0, 0x2738E98
	0x02738DAC MOVZ W1, 0x2C
	0x02738DB0 MOV X0, X19
	0x02738DB4 MOV W2, W31
	0x02738DB8 MOV X3, X31
	0x02738DBC BL 0x3229AE8
	0x02738DC0 CBZ X0, 0x2738EAC
	0x02738DC4 LDR W8, [X0 + 0x18]
	0x02738DC8 MOV X19, X0
	0x02738DCC CBZ W8, 0x2738E94
	0x02738DD0 ADRP X8, 0x19BC000
	0x02738DD4 LDR X8, [X8 + 0x1D0]
	0x02738DD8 LDR X0, [X8]
	0x02738DDC BL 0x1C16F10
	0x02738DE0 ADRP X8, 0x19BC000
	0x02738DE4 LDR X8, [X8 + 0x1C0]
	0x02738DE8 MOV X20, X0
	0x02738DEC LDR X1, [X8]
	0x02738DF0 BL 0x301B7C4
	0x02738DF4 LDR W8, [X19 + 0x18]
	0x02738DF8 CMP W8, 0x1
	0x02738DFC B.LT 0x2738E98

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x1CA3000
	008 Move X21, 0x19E6000
	009 Move W8, [X20+1699]
	010 Move X21, [X21+2848]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {63}
	016 Move X0, 0x19E6000
	017 Move X0, [X0+2856]
	018 Call 0x1C17CF4
	019 Move X0, 0x19E6000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0x19E6000
	023 Move X0, [X0+2848]
	024 Call 0x1C17CF4
	025 Move X0, 0x19E6000
	026 Move X0, [X0+2864]
	027 Call 0x1C17CF4
	028 Move X0, 0x19E6000
	029 Move X0, [X0+2872]
	030 Call 0x1C17CF4
	031 Move X0, 0x19E6000
	032 Move X0, [X0+2880]
	033 Call 0x1C17CF4
	034 Move X0, 0x19E6000
	035 Move X0, [X0+2888]
	036 Call 0x1C17CF4
	037 Move X0, 0x19E6000
	038 Move X0, [X0+2896]
	039 Call 0x1C17CF4
	040 Move X0, 0x19E6000
	041 Move X0, [X0+2904]
	042 Call 0x1C17CF4
	043 Move X0, 0x19C5000
	044 Move X0, [X0+2608]
	045 Call 0x1C17CF4
	046 Move X0, 0x19E6000
	047 Move X0, [X0+2912]
	048 Call 0x1C17CF4
	049 Move X0, 0x19E6000
	050 Move X0, [X0+2920]
	051 Call 0x1C17CF4
	052 Move X0, 0x19C4000
	053 Move X0, [X0+1416]
	054 Call 0x1C17CF4
	055 Move X0, 0x19E6000
	056 Move X0, [X0+2928]
	057 Call 0x1C17CF4
	058 Move X0, 0x19E6000
	059 Move X0, [X0+2936]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X20+1699], W8
	063 Move X0, [X21]
	064 Call 0x1C17F10
	065 Move X1, X31
	066 Move X20, X0
	067 Call UxmlStringAttributeDescription..ctor, X0
	068 Compare X20, 0
	069 JumpIfEqual {226}
	070 Move X8, 0x19C4000
	071 Move X8, [X8+1416]
	072 Move X8, [X8]
	073 Move [X20+16], X8
	074 Move [X19+24], X20
	075 Move X0, [X21]
	076 Call 0x1C17F10
	077 Move X1, X31
	078 Move X20, X0
	079 Call UxmlStringAttributeDescription..ctor, X0
	080 Compare X20, 0
	081 JumpIfEqual {226}
	082 Move X8, 0x19E6000
	083 Move X8, [X8+2920]
	084 Move X22, 0x19E6000
	085 Move X8, [X8]
	086 Move X22, [X22+1880]
	087 Move [X20+16], X8
	088 Move [X19+32], X20
	089 Move X0, [X22]
	090 Call 0x1C17F10
	091 Move X1, X31
	092 Move X20, X0
	093 Call UxmlBoolAttributeDescription..ctor, X0
	094 Compare X20, 0
	095 JumpIfEqual {226}
	096 Move X8, 0x19C5000
	097 Move X8, [X8+2608]
	098 Move W9, 1
	099 Move X8, [X8]
	100 Move [X20+64], W9
	101 Move [X20+16], X8
	102 Move [X19+40], X20
	103 Move X0, [X21]
	104 Call 0x1C17F10
	105 Move X1, X31
	106 Move X20, X0
	107 Call UxmlStringAttributeDescription..ctor, X0
	108 Compare X20, 0
	109 JumpIfEqual {226}
	110 Move X8, 0x19E6000
	111 Move X8, [X8+2928]
	112 Move X8, [X8]
	113 Move [X20+16], X8
	114 Move [X19+48], X20
	115 Move X0, [X21]
	116 Call 0x1C17F10
	117 Move X1, X31
	118 Move X20, X0
	119 Call UxmlStringAttributeDescription..ctor, X0
	120 Compare X20, 0
	121 JumpIfEqual {226}
	122 Move X8, 0x19E6000
	123 Move X8, [X8+2880]
	124 Move X8, [X8]
	125 Move [X20+16], X8
	126 Move [X19+56], X20
	127 Move X0, [X21]
	128 Call 0x1C17F10
	129 Move X1, X31
	130 Move X20, X0
	131 Call UxmlStringAttributeDescription..ctor, X0
	132 Compare X20, 0
	133 JumpIfEqual {226}
	134 Move X8, 0x19E6000
	135 Move X8, [X8+2872]
	136 Move X8, [X8]
	137 Move [X20+16], X8
	138 Move [X19+64], X20
	139 Move X0, [X22]
	140 Call 0x1C17F10
	141 Move X1, X31
	142 Move X20, X0
	143 Call UxmlBoolAttributeDescription..ctor, X0
	144 Compare X20, 0
	145 JumpIfEqual {226}
	146 Move X8, 0x19E6000
	147 Move X8, [X8+2904]
	148 Move X8, [X8]
	149 Move [X20+16], X8
	150 Move [X19+72], X20
	151 Move X0, [X22]
	152 Call 0x1C17F10
	153 Move X1, X31
	154 Move X20, X0
	155 Call UxmlBoolAttributeDescription..ctor, X0
	156 Compare X20, 0
	157 JumpIfEqual {226}
	158 Move X8, 0x19E6000
	159 Move X8, [X8+2912]
	160 Move W23, 1
	161 Move X8, [X8]
	162 Move [X20+64], W23
	163 Move [X20+16], X8
	164 Move [X19+80], X20
	165 Move X0, [X22]
	166 Call 0x1C17F10
	167 Move X1, X31
	168 Move X20, X0
	169 Call UxmlBoolAttributeDescription..ctor, X0
	170 Compare X20, 0
	171 JumpIfEqual {226}
	172 Move X8, 0x19E6000
	173 Move X8, [X8+2864]
	174 Move X8, [X8]
	175 Move [X20+64], W23
	176 Move [X20+16], X8
	177 Move [X19+88], X20
	178 Move X0, [X22]
	179 Call 0x1C17F10
	180 Move X1, X31
	181 Move X20, X0
	182 Call UxmlBoolAttributeDescription..ctor, X0
	183 Compare X20, 0
	184 JumpIfEqual {226}
	185 Move X8, 0x19E6000
	186 Move X8, [X8+2896]
	187 Move W9, 1
	188 Move X8, [X8]
	189 Move [X20+64], W9
	190 Move [X20+16], X8
	191 Move [X19+96], X20
	192 Move X0, [X21]
	193 Call 0x1C17F10
	194 Move X1, X31
	195 Move X20, X0
	196 Call UxmlStringAttributeDescription..ctor, X0
	197 Compare X20, 0
	198 JumpIfEqual {226}
	199 Move X8, 0x19E6000
	200 Move X8, [X8+2888]
	201 Move X8, [X8]
	202 Move [X20+16], X8
	203 Move [X19+104], X20
	204 Move X0, [X21]
	205 Call 0x1C17F10
	206 Move X1, X31
	207 Move X20, X0
	208 Call UxmlStringAttributeDescription..ctor, X0
	209 Compare X20, 0
	210 JumpIfEqual {226}
	211 Move X8, 0x19E6000
	212 Move X8, [X8+2936]
	213 Move X0, X19
	214 Move X22, [X31+16]
	215 Move X21, [X31+24]
	216 Move X1, X31
	217 Move X8, [X8]
	218 Move [X20+16], X8
	219 Move [X19+112], X20
	220 Move X20, [X31+32]
	221 Move X19, [X31+40]
	222 Move X30, [X31+48]
	223 Move X23, [X31+56]
	224 Call BaseUxmlTraits..ctor, X0
	225 Return 
	226 Call 0x1C17F20

