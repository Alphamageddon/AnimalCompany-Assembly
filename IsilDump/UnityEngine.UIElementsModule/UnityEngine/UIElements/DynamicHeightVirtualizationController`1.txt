Type: UnityEngine.UIElements.DynamicHeightVirtualizationController`1

Method: System.Single get_defaultExpectedHeight()

Disassembly:
	0x02B4408C MOV X1, X31
	0x02B44090 BL 0x3DEC528
	0x02B44094 LDR X8, [X20 + 0x20]
	0x02B44098 MOV X0, X19
	0x02B4409C MOV V8.16B, V3.16B
	0x02B440A0 LDR X8, [X8 + 0xC0]
	0x02B440A4 LDR X1, [X8 + 0x98]
	0x02B440A8 BL 0x2B4327C
	0x02B440AC LDR X8, [X20 + 0x20]
	0x02B440B0 MOV X0, X19
	0x02B440B4 MOV V9.16B, V0.16B
	0x02B440B8 LDR X8, [X8 + 0xC0]
	0x02B440BC LDR X1, [X8 + 0x10]
	0x02B440C0 BL 0x2842CF4
	0x02B440C4 CBZ X0, 0x2B44170
	0x02B440C8 LDR V1, [X0 + 0x14]
	0x02B440CC FSUB S0, S9, S8
	0x02B440D0 LDR X8, [X19 + 0x10]
	0x02B440D4 FMOV S2, W31
	0x02B440D8 FMAX S0, S0, S2
	0x02B440DC FCMP S1, S0
	0x02B440E0 FCSEL S8, S1, S0, MI
	0x02B440E4 CBZ X8, 0x2B44170
	0x02B440E8 LDR X8, [X8 + 0x428]
	0x02B440EC CBZ X8, 0x2B44170
	0x02B440F0 LDR X0, [X8 + 0x3D0]
	0x02B440F4 CBZ X0, 0x2B44170
	0x02B440F8 ADRP X8, 0x15DA000
	0x02B440FC LDR X8, [X8 + 0xAA8]
	0x02B44100 LDR X1, [X8]
	0x02B44104 BL 0x28BF64C
	0x02B44108 LDR X8, [X19 + 0x10]
	0x02B4410C CBZ X8, 0x2B44170
	0x02B44110 LDR X8, [X8 + 0x428]
	0x02B44114 CBZ X8, 0x2B44170

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1898000
	005 Move W8, [X20+1270]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x15DA000
	012 Move X0, [X0+3864]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1270], W8
	016 Move V0, [X19+160]
	017 NotImplemented "Instruction FCMP not yet implemented."
	018 Move X8, [X19+32]
	019 Compare X8, 0
	020 JumpIfEqual {41}
	021 Move W9, [X8+1080]
	022 Compare W9, 0
	023 JumpIfEqual {26}
	024 Move V0, [X8+1076]
	025 NotImplemented "Instruction FCMP not yet implemented."
	026 Move X19, 0x15DA000
	027 Move X19, [X19+3864]
	028 Move X0, [X19]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X19]
	034 Move X8, [X0+184]
	035 Move V0, [X8+24]
	036 NotImplemented "Instruction SCVTF not yet implemented."
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return V0
	041 Call 0x1C17F20

Method: System.Single get_contentPadding()

Disassembly:
	0x02B44118 LDR X0, [X8 + 0x3D0]
	0x02B4411C CBZ X0, 0x2B44170
	0x02B44120 LDR X8, [X0]
	0x02B44124 MOV V0.16B, V8.16B
	0x02B44128 LDR X9, [X8 + 0x888]
	0x02B4412C LDR X1, [X8 + 0x890]
	0x02B44130 BLR X9
	0x02B44134 LDR X8, [X20 + 0x20]
	0x02B44138 MOV X0, X19
	0x02B4413C LDR X8, [X8 + 0xC0]
	0x02B44140 LDR X1, [X8 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move X8, [X1+32]
	005 Move X8, [X8+192]
	006 Move X1, [X8+16]
	007 Call 0x2843CF4, X0
	008 Compare X0, 0
	009 JumpIfEqual {13}
	010 Move V0, [X0+28]
	011 Move X30, [X31+16]
	012 Return V0
	013 Call 0x1C17F20

Method: System.Void set_contentPadding(System.Single value)

Disassembly:
	0x02B44144 BL 0x2842CF4
	0x02B44148 CBZ X0, 0x2B44170
	0x02B4414C LDR X8, [X19 + 0x10]
	0x02B44150 CBZ X8, 0x2B44170
	0x02B44154 MOV X20, X0
	0x02B44158 LDR X0, [X8 + 0x428]
	0x02B4415C CBZ X0, 0x2B44170
	0x02B44160 MOV X1, X31
	0x02B44164 BL 0x3D83EEC
	0x02B44168 STR S0, [X20 + 0x14]
	0x02B4416C B 0x2B43FB0
	0x02B44170 BL 0x1C16F20
	0x02B44174 STR D10, [X31 - 0x40]!
	0x02B44178 STP D9, D8, [X31 + 0x10]
	0x02B4417C STP X30, X21, [X31 + 0x20]
	0x02B44180 STP X20, X19, [X31 + 0x30]
	0x02B44184 ADRP X21, 0x1897000
	0x02B44188 LDRB W8, [X21 + 0x4FE]
	0x02B4418C MOV X20, X1
	0x02B44190 MOV X19, X0
	0x02B44194 TBNZ X8, 0x0, 0x2B441AC
	0x02B44198 ADRP X0, 0x15AF000
	0x02B4419C LDR X0, [X0 + 0x5A8]
	0x02B441A0 BL 0x1C16CF4
	0x02B441A4 MOVZ W8, 0x1
	0x02B441A8 STRB W8, [X21 + 0x4FE]
	0x02B441AC LDR V9, [X19 + 0x98]
	0x02B441B0 MOVZ W8, 0xFF800000
	0x02B441B4 FMOV S0, W8
	0x02B441B8 FCMP S9, S0
	0x02B441BC B.NE 0x2B441E4
	0x02B441C0 LDR X8, [X20 + 0x20]
	0x02B441C4 MOV X0, X19
	0x02B441C8 LDR X8, [X8 + 0xC0]
	0x02B441CC LDR X1, [X8 + 0x10]
	0x02B441D0 BL 0x2842CF4
	0x02B441D4 CBZ X0, 0x2B4446C
	0x02B441D8 LDR V9, [X0 + 0x14]
	0x02B441DC ADD X8, X0, 0x10
	0x02B441E0 B 0x2B441E8
	0x02B441E4 ADD X8, X19, 0x94
	0x02B441E8 LDR X9, [X19 + 0x10]
	0x02B441EC CBZ X9, 0x2B4446C
	0x02B441F0 LDR X0, [X9 + 0x418]
	0x02B441F4 CBZ X0, 0x2B4446C
	0x02B441F8 LDR V10, [X8]
	0x02B441FC MOV X1, X31
	0x02B44200 BL 0x3DEC528
	0x02B44204 FMOV W8, S3
	0x02B44208 AND W9, W8, 0x7FFFFFFF
	0x02B4420C MOVZ W8, 0x7F800000
	0x02B44210 CMP W9, W8
	0x02B44214 B.HI 0x2B44458
	0x02B44218 FMOV W9, S9
	0x02B4421C AND W9, W9, 0x7FFFFFFF
	0x02B44220 CMP W9, W8
	0x02B44224 B.HI 0x2B44458
	0x02B44228 LDR X8, [X19]
	0x02B4422C MOVZ W21, 0x2
	0x02B44230 STR W21, [X19 + 0x8C]
	0x02B44234 MOV X0, X19
	0x02B44238 LDR X9, [X8 + 0x208]
	0x02B4423C LDR X1, [X8 + 0x210]
	0x02B44240 BLR X9
	0x02B44244 LDR X8, [X20 + 0x20]
	0x02B44248 MOV X0, X19
	0x02B4424C MOV V8.16B, V0.16B
	0x02B44250 LDR X8, [X8 + 0xC0]
	0x02B44254 LDR X1, [X8 + 0x98]
	0x02B44258 BL 0x2B4327C
	0x02B4425C LDR X8, [X20 + 0x20]
	0x02B44260 FCMP S8, S0
	0x02B44264 FCSEL S0, S8, S0, GT
	0x02B44268 MOV X0, X19
	0x02B4426C LDR X8, [X8 + 0xC0]
	0x02B44270 LDR X1, [X8 + 0x90]
	0x02B44274 BL 0x2B432A8
	0x02B44278 LDR X8, [X20 + 0x20]

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1898000
	009 Move W8, [X21+1271]
	010 Move X20, X1
	011 Move V8, V0
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x15D9000
	018 Move X0, [X0+296]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1271], W8
	022 Move X8, [X19+32]
	023 Compare X8, 0
	024 JumpIfEqual {94}
	025 Move X0, [X8+1088]
	026 Compare X0, 0
	027 JumpIfEqual {94}
	028 Move X8, [X0]
	029 Move X9, [X8+1896]
	030 Move X1, [X8+1904]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Compare X0, 0
	033 JumpIfEqual {94}
	034 Move X1, X31
	035 Call VisualElement.get_style, X0
	036 Move X21, X0
	037 Move V0, V8
	038 Move X0, X31
	039 Call StyleLength.op_Implicit, V0
	040 Compare X21, 0
	041 JumpIfEqual {94}
	042 Move X11, 0x15D9000
	043 Move X9, [X21]
	044 Move X11, [X11+296]
	045 Move X8, X1
	046 Move X22, X0
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X11]
	049 And X23, X8, 0
	050 Compare X10, 0
	051 JumpIfEqual {58}
	052 Move X8, [X9+176]
	053 Add X8, X8, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X10, X10, 1
	057 Add X8, X8, 16
	058 Move W2, 39
	059 Move X0, X21
	060 Call 0x1C5D788
	061 Move W8, [X8]
	062 Add W8, W8, 39
	063 Add X8, X9, W8
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X3, [X0+8]
	067 Move X0, X21
	068 Move X1, X22
	069 Move X2, X23
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Compare X19, 0
	072 JumpIfEqual {94}
	073 Move X8, [X20+32]
	074 Move X0, X19
	075 Move X8, [X8+192]
	076 Move X1, [X8+16]
	077 Call 0x2843CF4, X0
	078 Compare X0, 0
	079 JumpIfEqual {94}
	080 Move [X0+28], S8
	081 Move X0, [X19+32]
	082 Compare X0, 0
	083 JumpIfEqual {94}
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X30, [X31+16]
	089 Move X23, [X31+24]
	090 Move X1, X31
	091 Move V8, [X31+64]
	092 Call VisualElement.SaveViewData, X0
	093 Return 
	094 Call 0x1C17F20

Method: System.Single get_contentHeight()

Disassembly:
	0x02B4427C MOV X0, X19
	0x02B44280 LDR X8, [X8 + 0xC0]
	0x02B44284 LDR X1, [X8 + 0x10]
	0x02B44288 BL 0x2842CF4
	0x02B4428C CBZ X0, 0x2B4446C
	0x02B44290 LDR V0, [X0 + 0x14]
	0x02B44294 MOV X0, X19
	0x02B44298 FCMP S9, S0
	0x02B4429C CSINC W8, W21, W31, PL
	0x02B442A0 STR W8, [X19 + 0x90]
	0x02B442A4 LDR X8, [X20 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move X8, [X1+32]
	005 Move X8, [X8+192]
	006 Move X1, [X8+16]
	007 Call 0x2843CF4, X0
	008 Compare X0, 0
	009 JumpIfEqual {13}
	010 Move V0, [X0+32]
	011 Move X30, [X31+16]
	012 Return V0
	013 Call 0x1C17F20

Method: System.Void set_contentHeight(System.Single value)

Disassembly:
	0x02B442A8 LDR X8, [X8 + 0xC0]
	0x02B442AC LDR X1, [X8 + 0x98]
	0x02B442B0 BL 0x2B4327C
	0x02B442B4 LDR X8, [X19 + 0x10]
	0x02B442B8 CBZ X8, 0x2B4446C
	0x02B442BC LDR X0, [X8 + 0x418]
	0x02B442C0 CBZ X0, 0x2B4446C
	0x02B442C4 MOV X1, X31
	0x02B442C8 MOV V8.16B, V0.16B
	0x02B442CC BL 0x3DEC528
	0x02B442D0 FSUB S0, S8, S3
	0x02B442D4 FMOV S1, W31
	0x02B442D8 FCMP S9, 0x0
	0x02B442DC FMAX S0, S0, S1
	0x02B442E0 B.HI 0x2B442E8
	0x02B442E4 STR W31, [X19 + 0x80]
	0x02B442E8 FCMP S0, 0x0
	0x02B442EC B.LE 0x2B4433C
	0x02B442F0 LDR X8, [X19 + 0x10]
	0x02B442F4 CBZ X8, 0x2B4446C
	0x02B442F8 LDR X0, [X8 + 0x428]
	0x02B442FC CBZ X0, 0x2B4446C
	0x02B44300 MOV X1, X31
	0x02B44304 BL 0x3D83FE4
	0x02B44308 ADRP X8, 0x15AF000
	0x02B4430C LDR X8, [X8 + 0x5A8]
	0x02B44310 MOV V8.16B, V0.16B
	0x02B44314 LDR X0, [X8]
	0x02B44318 LDR W8, [X0 + 0xE0]
	0x02B4431C CBNZ W8, 0x2B44324
	0x02B44320 BL 0x1C16DFC
	0x02B44324 MOVZ W8, 0x1
	0x02B44328 FABD S0, S9, S9
	0x02B4432C FMOV S1, W8
	0x02B44330 FCMP S0, S1
	0x02B44334 CSET W8, MI
	0x02B44338 B 0x2B44340
	0x02B4433C MOV W8, W31
	0x02B44340 STRB W8, [X19 + 0x88]
	0x02B44344 LDR X8, [X20 + 0x20]
	0x02B44348 MOV X0, X19
	0x02B4434C LDR X8, [X8 + 0xC0]
	0x02B44350 LDR X1, [X8 + 0x10]
	0x02B44354 BL 0x2842CF4
	0x02B44358 CBZ X0, 0x2B4446C
	0x02B4435C STP S10, S9, [X0 + 0x10]
	0x02B44360 LDR X0, [X19 + 0x20]
	0x02B44364 CBZ X0, 0x2B4446C
	0x02B44368 MOV X1, X31
	0x02B4436C BL 0x3DF276C
	0x02B44370 LDR W21, [X19 + 0x80]
	0x02B44374 ADDS W31, W21, 0x1
	0x02B44378 B.NE 0x2B443A4
	0x02B4437C LDR X8, [X20 + 0x20]
	0x02B44380 MOV X0, X19
	0x02B44384 LDR X8, [X8 + 0xC0]
	0x02B44388 LDR X1, [X8 + 0x10]
	0x02B4438C BL 0x2842CF4
	0x02B44390 CBZ X0, 0x2B4446C
	0x02B44394 LDR V0, [X0 + 0x14]
	0x02B44398 MOV X0, X19
	0x02B4439C BL 0x2B461C8
	0x02B443A0 MOV W21, W0
	0x02B443A4 LDR X8, [X20 + 0x20]
	0x02B443A8 SUB W1, W21, 0x1
	0x02B443AC MOV X0, X19
	0x02B443B0 LDR X8, [X8 + 0xC0]
	0x02B443B4 LDR X2, [X8 + 0xB0]
	0x02B443B8 BL 0x2B462D8
	0x02B443BC LDR X8, [X20 + 0x20]
	0x02B443C0 MOV X0, X19
	0x02B443C4 LDR X8, [X8 + 0xC0]
	0x02B443C8 LDR X1, [X8 + 0x110]
	0x02B443CC BL 0x2B43144
	0x02B443D0 LDR X8, [X19]
	0x02B443D4 MOVN W9, 0x0
	0x02B443D8 STR W9, [X19 + 0x80]
	0x02B443DC MOV X0, X19

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1898000
	009 Move W8, [X21+1272]
	010 Move X20, X1
	011 Move V8, V0
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x15D9000
	018 Move X0, [X0+296]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1272], W8
	022 Move X8, [X19+32]
	023 Compare X8, 0
	024 JumpIfEqual {94}
	025 Move X0, [X8+1088]
	026 Compare X0, 0
	027 JumpIfEqual {94}
	028 Move X8, [X0]
	029 Move X9, [X8+1896]
	030 Move X1, [X8+1904]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Compare X0, 0
	033 JumpIfEqual {94}
	034 Move X1, X31
	035 Call VisualElement.get_style, X0
	036 Move X21, X0
	037 Move V0, V8
	038 Move X0, X31
	039 Call StyleLength.op_Implicit, V0
	040 Compare X21, 0
	041 JumpIfEqual {94}
	042 Move X11, 0x15D9000
	043 Move X9, [X21]
	044 Move X11, [X11+296]
	045 Move X8, X1
	046 Move X22, X0
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X11]
	049 And X23, X8, 0
	050 Compare X10, 0
	051 JumpIfEqual {58}
	052 Move X8, [X9+176]
	053 Add X8, X8, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X10, X10, 1
	057 Add X8, X8, 16
	058 Move W2, 24
	059 Move X0, X21
	060 Call 0x1C5D788
	061 Move W8, [X8]
	062 Add W8, W8, 24
	063 Add X8, X9, W8
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X3, [X0+8]
	067 Move X0, X21
	068 Move X1, X22
	069 Move X2, X23
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Compare X19, 0
	072 JumpIfEqual {94}
	073 Move X8, [X20+32]
	074 Move X0, X19
	075 Move X8, [X8+192]
	076 Move X1, [X8+16]
	077 Call 0x2843CF4, X0
	078 Compare X0, 0
	079 JumpIfEqual {94}
	080 Move [X0+32], S8
	081 Move X0, [X19+32]
	082 Compare X0, 0
	083 JumpIfEqual {94}
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X30, [X31+16]
	089 Move X23, [X31+24]
	090 Move X1, X31
	091 Move V8, [X31+64]
	092 Call VisualElement.SaveViewData, X0
	093 Return 
	094 Call 0x1C17F20

Method: System.Int32 get_anchoredIndex()

Disassembly:
	0x02B443E0 LDP X9, X1, [X8 + 0x178]
	0x02B443E4 BLR X9
	0x02B443E8 LDR X8, [X20 + 0x20]
	0x02B443EC CMP W21, W0
	0x02B443F0 LDR X8, [X8 + 0xC0]
	0x02B443F4 B.NE 0x2B44408
	0x02B443F8 LDR X1, [X8 + 0x38]
	0x02B443FC MOV X0, X19
	0x02B44400 BL 0x2B44C14
	0x02B44404 B 0x2B44418
	0x02B44408 LDR X2, [X8 + 0x118]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move X8, [X1+32]
	005 Move X8, [X8+192]
	006 Move X1, [X8+16]
	007 Call 0x2843CF4, X0
	008 Compare X0, 0
	009 JumpIfEqual {13}
	010 Move W0, [X0+36]
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1C17F20

Method: System.Void set_anchoredIndex(System.Int32 value)

Disassembly:
	0x02B4440C MOV X0, X19
	0x02B44410 MOV W1, W21
	0x02B44414 BL 0x2B44470
	0x02B44418 MOV X0, X19
	0x02B4441C BL 0x2B45EB8
	0x02B44420 ADRP X20, 0x1897000
	0x02B44424 LDRB W8, [X20 + 0x510]
	0x02B44428 CBNZ W8, 0x2B44440
	0x02B4442C ADRP X0, 0x15B7000
	0x02B44430 LDR X0, [X0 + 0xF08]
	0x02B44434 BL 0x1C16CF4
	0x02B44438 MOVZ W8, 0x1
	0x02B4443C STRB W8, [X20 + 0x510]
	0x02B44440 ADRP X8, 0x15B7000
	0x02B44444 LDR X8, [X8 + 0xF08]
	0x02B44448 LDR X8, [X8]
	0x02B4444C LDR X8, [X8 + 0xB8]
	0x02B44450 LDR V0, [X8 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {24}
	006 Move X8, [X2+32]
	007 Move W20, W1
	008 Move X19, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8+16]
	011 Call 0x2843CF4, X0
	012 Compare X0, 0
	013 JumpIfEqual {24}
	014 Move [X0+36], W20
	015 Move X0, [X19+32]
	016 Compare X0, 0
	017 JumpIfEqual {24}
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X1, X31
	021 Move X30, [X31+32]
	022 Call VisualElement.SaveViewData, X0
	023 Return 
	024 Call 0x1C17F20

Method: System.Single get_anchorOffset()

Disassembly:
	0x02B44454 STUR D0, [X19 + 0x94]
	0x02B44458 LDP X20, X19, [X31 + 0x30]
	0x02B4445C LDP X30, X21, [X31 + 0x20]
	0x02B44460 LDP D9, D8, [X31 + 0x10]
	0x02B44464 LDR V10, [X31], #0x40
	0x02B44468 RET
	0x02B4446C BL 0x1C16F20
	0x02B44470 STR D8, [X31 - 0x70]!
	0x02B44474 STP X29, X30, [X31 + 0x10]
	0x02B44478 STP X28, X27, [X31 + 0x20]
	0x02B4447C STP X26, X25, [X31 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move X8, [X1+32]
	005 Move X8, [X8+192]
	006 Move X1, [X8+16]
	007 Call 0x2843CF4, X0
	008 Compare X0, 0
	009 JumpIfEqual {13}
	010 Move V0, [X0+40]
	011 Move X30, [X31+16]
	012 Return V0
	013 Call 0x1C17F20

Method: System.Void set_anchorOffset(System.Single value)

Disassembly:
	0x02B44480 STP X24, X23, [X31 + 0x40]
	0x02B44484 STP X22, X21, [X31 + 0x50]
	0x02B44488 STP X20, X19, [X31 + 0x60]
	0x02B4448C ADRP X21, 0x1897000
	0x02B44490 LDRB W8, [X21 + 0x4FF]
	0x02B44494 MOV X20, X2
	0x02B44498 MOV W22, W1
	0x02B4449C MOV X19, X0
	0x02B444A0 TBNZ X8, 0x0, 0x2B444DC
	0x02B444A4 ADRP X0, 0x15BC000
	0x02B444A8 LDR X0, [X0 + 0x5A0]
	0x02B444AC BL 0x1C16CF4
	0x02B444B0 ADRP X0, 0x15D8000
	0x02B444B4 LDR X0, [X0 + 0x128]
	0x02B444B8 BL 0x1C16CF4
	0x02B444BC ADRP X0, 0x15D9000
	0x02B444C0 LDR X0, [X0 + 0xF08]
	0x02B444C4 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {24}
	006 Move X8, [X1+32]
	007 Move V8, V0
	008 Move X19, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8+16]
	011 Call 0x2843CF4, X0
	012 Compare X0, 0
	013 JumpIfEqual {24}
	014 Move [X0+40], S8
	015 Move X0, [X19+32]
	016 Compare X0, 0
	017 JumpIfEqual {24}
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Move X1, X31
	021 Move V8, [X31+32]
	022 Call VisualElement.SaveViewData, X0
	023 Return 
	024 Call 0x1C17F20

Method: System.Single get_viewportMaxOffset()

Disassembly:
	0x02B444C8 ADRP X0, 0x15D9000
	0x02B444CC LDR X0, [X0 + 0xF10]
	0x02B444D0 BL 0x1C16CF4
	0x02B444D4 MOVZ W8, 0x1
	0x02B444D8 STRB W8, [X21 + 0x4FF]
	0x02B444DC CBZ X19, 0x2B44A58
	0x02B444E0 LDR X8, [X19]
	0x02B444E4 MOV X0, X19
	0x02B444E8 LDP X9, X1, [X8 + 0x178]
	0x02B444EC BLR X9
	0x02B444F0 CMP W0, W22
	0x02B444F4 B.NE 0x2B44518
	0x02B444F8 LDP X20, X19, [X31 + 0x60]
	0x02B444FC LDP X22, X21, [X31 + 0x50]
	0x02B44500 LDP X24, X23, [X31 + 0x40]
	0x02B44504 LDP X26, X25, [X31 + 0x30]
	0x02B44508 LDP X28, X27, [X31 + 0x20]
	0x02B4450C LDP X29, X30, [X31 + 0x10]
	0x02B44510 LDR V8, [X31], #0x70
	0x02B44514 RET
	0x02B44518 LDR X8, [X20 + 0x20]
	0x02B4451C MOV X0, X19

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {28}
	006 Move X8, [X1+32]
	007 Move X19, X0
	008 Move X8, [X8+192]
	009 Move X1, [X8+16]
	010 Call 0x2843CF4, X0
	011 Compare X0, 0
	012 JumpIfEqual {28}
	013 Move X8, [X19+16]
	014 Compare X8, 0
	015 JumpIfEqual {28}
	016 Move X8, [X8+1048]
	017 Compare X8, 0
	018 JumpIfEqual {28}
	019 Move V8, [X0+20]
	020 Move X0, X8
	021 Move X1, X31
	022 Call VisualElement.get_layout, X0
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Add S0, S8, S3
	026 Move V8, [X31+32]
	027 Return V0
	028 Call 0x1C17F20

Method: System.Boolean get_alwaysRebindOnRefresh()

Disassembly:
	0x02B44520 LDR X8, [X8 + 0xC0]
	0x02B44524 LDR X1, [X8 + 0x120]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void .ctor(UnityEngine.UIElements.BaseVerticalCollectionView collectionView)

Disassembly:
	0x02B44528 BL 0x2842CA0
	0x02B4452C LDR X8, [X20 + 0x20]
	0x02B44530 MOV X21, X0
	0x02B44534 SUB W1, W22, 0x1
	0x02B44538 MOV X0, X19
	0x02B4453C LDR X8, [X8 + 0xC0]
	0x02B44540 LDR X2, [X8 + 0xB0]
	0x02B44544 BL 0x2B462D8
	0x02B44548 LDR X8, [X20 + 0x20]
	0x02B4454C MOV X0, X19
	0x02B44550 LDR X8, [X8 + 0xC0]
	0x02B44554 LDR X1, [X8 + 0x110]
	0x02B44558 BL 0x2B43144
	0x02B4455C LDR X8, [X19]
	0x02B44560 MOV X0, X19
	0x02B44564 MOV W1, W22
	0x02B44568 LDP X9, X2, [X8 + 0x188]
	0x02B4456C BLR X9
	0x02B44570 LDR X8, [X19 + 0x28]
	0x02B44574 CBZ X8, 0x2B44A58
	0x02B44578 LDR W23, [X8 + 0x18]
	0x02B4457C CMP W23, 0x1
	0x02B44580 B.LT 0x2B44A5C
	0x02B44584 CBZ X21, 0x2B44850
	0x02B44588 LDR X8, [X19]
	0x02B4458C MOV X0, X19
	0x02B44590 LDP X9, X1, [X8 + 0x178]
	0x02B44594 BLR X9
	0x02B44598 ADRP X25, 0x1897000
	0x02B4459C LDRB W8, [X25 + 0x511]
	0x02B445A0 LDR W24, [X21 + 0x20]
	0x02B445A4 MOV W22, W0
	0x02B445A8 CBNZ W8, 0x2B445C0
	0x02B445AC ADRP X0, 0x15AF000
	0x02B445B0 LDR X0, [X0 + 0x5A8]
	0x02B445B4 BL 0x1C16CF4
	0x02B445B8 MOVZ W8, 0x1
	0x02B445BC STRB W8, [X25 + 0x511]
	0x02B445C0 ADRP X8, 0x15AF000
	0x02B445C4 LDR X8, [X8 + 0x5A8]
	0x02B445C8 SUB W22, W22, W24
	0x02B445CC LDR X0, [X8]
	0x02B445D0 LDR W8, [X0 + 0xE0]
	0x02B445D4 CBNZ W8, 0x2B445DC
	0x02B445D8 BL 0x1C16DFC
	0x02B445DC CMP W22, 0x0
	0x02B445E0 CSNEG W8, W22, W22, PL
	0x02B445E4 CMP W23, W8
	0x02B445E8 B.LE 0x2B44850
	0x02B445EC LDR X8, [X19]
	0x02B445F0 MOV X0, X19
	0x02B445F4 LDP X9, X1, [X8 + 0x178]
	0x02B445F8 BLR X9
	0x02B445FC LDR W22, [X21 + 0x20]
	0x02B44600 CMP W0, W22
	0x02B44604 B.GE 0x2B446C4
	0x02B44608 LDR X8, [X19]
	0x02B4460C MOV X0, X19
	0x02B44610 LDP X9, X1, [X8 + 0x178]
	0x02B44614 BLR X9
	0x02B44618 LDR X8, [X19 + 0x28]
	0x02B4461C CBZ X8, 0x2B44A58
	0x02B44620 LDR X21, [X19 + 0x50]
	0x02B44624 SUB W9, W22, W0
	0x02B44628 BIC W9, W9, W9, 0x1F
	0x02B4462C ADD W23, W9, 0x1
	0x02B44630 SUBS W23, W23, 0x1
	0x02B44634 B.EQ 0x2B447D8
	0x02B44638 LDR X9, [X20 + 0x20]
	0x02B4463C LDR W10, [X8 + 0x18]
	0x02B44640 MOV X0, X8
	0x02B44644 LDR X9, [X9 + 0xC0]
	0x02B44648 SUB W1, W10, 0x1
	0x02B4464C LDR X2, [X9 + 0x128]
	0x02B44650 BL 0x301BCCC
	0x02B44654 CBZ X21, 0x2B44A58
	0x02B44658 LDR X8, [X20 + 0x20]
	0x02B4465C MOV X22, X0
	0x02B44660 MOV X0, X21
	0x02B44664 MOV W1, W31
	0x02B44668 LDR X8, [X8 + 0xC0]
	0x02B4466C MOV X2, X22
	0x02B44670 LDR X3, [X8 + 0x130]
	0x02B44674 BL 0x301CEEC
	0x02B44678 LDR X0, [X19 + 0x28]
	0x02B4467C CBZ X0, 0x2B44A58
	0x02B44680 LDR X8, [X20 + 0x20]
	0x02B44684 LDR W9, [X0 + 0x18]
	0x02B44688 LDR X8, [X8 + 0xC0]
	0x02B4468C SUB W1, W9, 0x1
	0x02B44690 LDR X2, [X8 + 0x138]
	0x02B44694 BL 0x301DA48
	0x02B44698 CBZ X22, 0x2B44A58
	0x02B4469C LDR X8, [X22]
	0x02B446A0 MOV X0, X22
	0x02B446A4 LDP X9, X1, [X8 + 0x178]
	0x02B446A8 BLR X9
	0x02B446AC CBZ X0, 0x2B44A58
	0x02B446B0 MOV X1, X31
	0x02B446B4 BL 0x3DF67BC
	0x02B446B8 LDR X8, [X19 + 0x28]
	0x02B446BC CBNZ X8, 0x2B44630
	0x02B446C0 B 0x2B44A58
	0x02B446C4 LDR X8, [X19]
	0x02B446C8 LDR X21, [X19 + 0x50]
	0x02B446CC MOV X0, X19
	0x02B446D0 LDP X9, X1, [X8 + 0x178]
	0x02B446D4 BLR X9
	0x02B446D8 LDR X8, [X19 + 0x28]
	0x02B446DC CBZ X8, 0x2B44A58
	0x02B446E0 MOV W23, W0
	0x02B446E4 MOV W22, W31
	0x02B446E8 LDR X9, [X20 + 0x20]
	0x02B446EC MOV X0, X8
	0x02B446F0 MOV W1, W22
	0x02B446F4 LDR X9, [X9 + 0xC0]
	0x02B446F8 LDR X2, [X9 + 0x128]
	0x02B446FC BL 0x301BCCC
	0x02B44700 CBZ X0, 0x2B44A58
	0x02B44704 MOV X8, X0
	0x02B44708 LDR X0, [X19 + 0x28]
	0x02B4470C CBZ X0, 0x2B44A58
	0x02B44710 LDR X9, [X20 + 0x20]
	0x02B44714 LDR W10, [X8 + 0x20]
	0x02B44718 LDR X8, [X9 + 0xC0]
	0x02B4471C CMP W23, W10
	0x02B44720 B.LE 0x2B447F8
	0x02B44724 LDR X2, [X8 + 0x128]
	0x02B44728 MOV W1, W22
	0x02B4472C BL 0x301BCCC
	0x02B44730 CBZ X21, 0x2B44A58
	0x02B44734 LDR X8, [X20 + 0x20]
	0x02B44738 LDR W10, [X21 + 0x1C]
	0x02B4473C LDR X9, [X8 + 0xC0]
	0x02B44740 LDR X8, [X21 + 0x10]
	0x02B44744 ADD W10, W10, 0x1
	0x02B44748 LDR X9, [X9 + 0x158]
	0x02B4474C STR W10, [X21 + 0x1C]
	0x02B44750 CBZ X8, 0x2B44A58
	0x02B44754 LDRSW X10, [X21 + 0x18]
	0x02B44758 LDR W11, [X8 + 0x18]
	0x02B4475C MOV X23, X0
	0x02B44760 CMP W10, W11
	0x02B44764 B.CS 0x2B4477C
	0x02B44768 ADD W9, W10, 0x1
	0x02B4476C ADD X8, X8, X10, 0x3, LSL
	0x02B44770 STR W9, [X21 + 0x18]
	0x02B44774 STR X23, [X8 + 0x20]
	0x02B44778 B 0x2B44794
	0x02B4477C LDR X8, [X9 + 0x20]
	0x02B44780 MOV X0, X21
	0x02B44784 MOV X1, X23
	0x02B44788 LDR X8, [X8 + 0xC0]
	0x02B4478C LDR X2, [X8 + 0x70]
	0x02B44790 BL 0x301BF90
	0x02B44794 CBZ X23, 0x2B44A58
	0x02B44798 LDR X8, [X23]
	0x02B4479C MOV X0, X23

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X24, 0x1898000
	012 Move X23, 0x15DB000
	013 Move X22, 0x15DB000
	014 Move W8, [X24+1273]
	015 Move X23, [X23+2704]
	016 Move X22, [X22+2712]
	017 Move X20, X2
	018 Move X21, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {47}
	024 Move X0, 0x15DA000
	025 Move X0, [X0+3904]
	026 Call 0x1C17CF4
	027 Move X0, 0x15B1000
	028 Move X0, [X0+3696]
	029 Call 0x1C17CF4
	030 Move X0, 0x15DB000
	031 Move X0, [X0+2712]
	032 Call 0x1C17CF4
	033 Move X0, 0x15DB000
	034 Move X0, [X0+2704]
	035 Call 0x1C17CF4
	036 Move X0, 0x15B2000
	037 Move X0, [X0+2528]
	038 Call 0x1C17CF4
	039 Move X0, 0x15B1000
	040 Move X0, [X0+3592]
	041 Call 0x1C17CF4
	042 Move X0, 0x15DB000
	043 Move X0, [X0+2720]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X24+1273], W8
	047 Move TEMP, 0
	048 Not TEMP
	049 Move W8, TEMP
	050 Move [X19+96], W8
	051 Move X0, [X23]
	052 Move X27, 0x15B1000
	053 Move X26, 0x15B2000
	054 Move X27, [X27+3592]
	055 Move X26, [X26+2528]
	056 Call 0x1C17F10
	057 Move X2, [X22]
	058 Move W1, 32
	059 Move X22, X0
	060 Call Dictionary`2<Int32, Single>..ctor, X0, X1
	061 Move [X19+104], X22
	062 Move X8, [X20+32]
	063 Move X8, [X8+192]
	064 Move X0, [X8+24]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Move X23, 0x15B1000
	072 Move X25, 0x15DA000
	073 Move X24, 0x15DB000
	074 Move X23, [X23+3696]
	075 Move X25, [X25+3904]
	076 Move X24, [X24+2720]
	077 Call 0x1C17F10
	078 Move X8, [X20+32]
	079 Move W1, 32
	080 Move X22, X0
	081 Move X8, [X8+192]
	082 Move X2, [X8+32]
	083 Call Dictionary`2<Int32, ContentHeightCacheInfo<Object>>..ctor, X0, X1
	084 Move [X19+112], X22
	085 Move X0, [X27]
	086 Call 0x1C17F10
	087 Move X2, [X26]
	088 Move W1, 32
	089 Move X22, X0
	090 Call HashSet`1<Int32>..ctor, X0, X1
	091 NotImplemented "Instruction MOVI not yet implemented."
	092 Move [X19+120], X22
	093 Move [X19+128], D0
	094 Move X22, 0x1898000
	095 Move W8, [X22+1296]
	096 Compare W8, 0
	097 JumpIfNotEqual {103}
	098 Move X0, 0x15B8000
	099 Move X0, [X0+3848]
	100 Call 0x1C17CF4
	101 Move W8, 1
	102 Move [X22+1296], W8
	103 Move X8, 0x15B8000
	104 Move X8, [X8+3848]
	105 Move X0, X19
	106 Move X1, X21
	107 Move X8, [X8]
	108 Move X8, [X8+184]
	109 Move V0, [X8+56]
	110 Move W8, 0xBF800000
	111 Move [X19+160], W8
	112 Move [X19+148], D0
	113 Move X8, [X20+32]
	114 Move X8, [X8+192]
	115 Move X2, [X8+40]
	116 Call 0x2843DA4, X0, X1
	117 Move X0, [X23]
	118 Call 0x1C17F10
	119 Move X8, [X20+32]
	120 Move X1, X19
	121 Move X3, X31
	122 Move X21, X0
	123 Move X8, [X8+192]
	124 Move X2, [X8+56]
	125 Call Action..ctor, X0, X1, X2
	126 Move [X19+168], X21
	127 Move X0, [X23]
	128 Call 0x1C17F10
	129 Move X8, [X20+32]
	130 Move X1, X19
	131 Move X3, X31
	132 Move X21, X0
	133 Move X8, [X8+192]
	134 Move X2, [X8+64]
	135 Call Action..ctor, X0, X1, X2
	136 Move [X19+176], X21
	137 Move X0, [X25]
	138 Call 0x1C17F10
	139 Move X8, [X20+32]
	140 Move X1, X19
	141 Move X3, X31
	142 Move X21, X0
	143 Move X8, [X8+192]
	144 Move X2, [X8+72]
	145 Call Action`1<Object>..ctor, X0, X1, X2
	146 Move [X19+192], X21
	147 Move X0, [X24]
	148 Call 0x1C17F10
	149 Move X8, [X20+32]
	150 Move X1, X19
	151 Move X3, X31
	152 Move X21, X0
	153 Move X8, [X8+192]
	154 Move X2, [X8+80]
	155 Call Predicate`1<Int32>..ctor, X0, X1, X2
	156 Move [X19+224], X21
	157 Move X0, [X23]
	158 Call 0x1C17F10
	159 Move X8, [X20+32]
	160 Move X1, X19
	161 Move X3, X31
	162 Move X20, X0
	163 Move X8, [X8+192]
	164 Move X2, [X8+88]
	165 Call Action..ctor, X0, X1, X2
	166 Move [X19+184], X20
	167 Move X20, [X31+64]
	168 Move X19, [X31+72]
	169 Move X22, [X31+48]
	170 Move X21, [X31+56]
	171 Move X24, [X31+32]
	172 Move X23, [X31+40]
	173 Move X26, [X31+16]
	174 Move X25, [X31+24]
	175 Move X30, [X31+80]
	176 Move X27, [X31+88]
	177 Return 

Method: System.Void Refresh(System.Boolean rebuild)

Disassembly:
	0x02B447A0 LDP X9, X1, [X8 + 0x178]
	0x02B447A4 BLR X9
	0x02B447A8 CBZ X0, 0x2B44A58
	0x02B447AC MOV X1, X31
	0x02B447B0 ADD W22, W22, 0x1
	0x02B447B4 BL 0x3DF6758
	0x02B447B8 LDR X8, [X19]
	0x02B447BC MOV X0, X19
	0x02B447C0 LDP X9, X1, [X8 + 0x178]
	0x02B447C4 BLR X9
	0x02B447C8 LDR X8, [X19 + 0x28]
	0x02B447CC MOV W23, W0
	0x02B447D0 CBNZ X8, 0x2B446E8
	0x02B447D4 B 0x2B44A58
	0x02B447D8 LDR X9, [X20 + 0x20]
	0x02B447DC MOV X0, X8
	0x02B447E0 MOV W1, W31
	0x02B447E4 MOV X2, X21
	0x02B447E8 LDR X9, [X9 + 0xC0]
	0x02B447EC LDR X3, [X9 + 0x140]
	0x02B447F0 BL 0x301D118
	0x02B447F4 B 0x2B44824
	0x02B447F8 LDR X3, [X8 + 0x160]
	0x02B447FC MOV W1, W31
	0x02B44800 MOV W2, W22
	0x02B44804 BL 0x301DAD8
	0x02B44808 LDR X0, [X19 + 0x28]
	0x02B4480C CBZ X0, 0x2B44A58
	0x02B44810 LDR X8, [X20 + 0x20]
	0x02B44814 MOV X1, X21
	0x02B44818 LDR X8, [X8 + 0xC0]
	0x02B4481C LDR X2, [X8 + 0x168]
	0x02B44820 BL 0x301C194
	0x02B44824 LDR X8, [X19 + 0x50]
	0x02B44828 CBZ X8, 0x2B44A58
	0x02B4482C LDP W2, W9, [X8 + 0x18]
	0x02B44830 ADD W9, W9, 0x1
	0x02B44834 CMP W2, 0x1
	0x02B44838 STP W31, W9, [X8 + 0x18]
	0x02B4483C B.LT 0x2B44850
	0x02B44840 LDR X0, [X8 + 0x10]
	0x02B44844 MOV W1, W31
	0x02B44848 MOV X3, X31
	0x02B4484C BL 0x339FA34
	0x02B44850 LDR X8, [X20 + 0x20]
	0x02B44854 MOV X0, X19
	0x02B44858 LDR X8, [X8 + 0xC0]
	0x02B4485C LDR X1, [X8 + 0xB8]
	0x02B44860 BL 0x2B43118
	0x02B44864 LDR X0, [X19 + 0x28]
	0x02B44868 CBZ X0, 0x2B44A58
	0x02B4486C ADRP X26, 0x15D8000
	0x02B44870 ADRP X27, 0x15D9000
	0x02B44874 ADRP X28, 0x15D9000
	0x02B44878 ADRP X29, 0x15BC000
	0x02B4487C LDR X26, [X26 + 0x128]
	0x02B44880 LDR X27, [X27 + 0xF10]
	0x02B44884 LDR X28, [X28 + 0xF08]
	0x02B44888 LDR X29, [X29 + 0x5A0]
	0x02B4488C MOV V8.16B, V0.16B
	0x02B44890 MOV W21, W31
	0x02B44894 LDR W8, [X0 + 0x18]
	0x02B44898 CMP W21, W8
	0x02B4489C B.GE 0x2B44A5C
	0x02B448A0 LDR X8, [X20 + 0x20]
	0x02B448A4 MOV W1, W21
	0x02B448A8 LDR X8, [X8 + 0xC0]
	0x02B448AC LDR X2, [X8 + 0x128]
	0x02B448B0 BL 0x301BCCC
	0x02B448B4 LDR X8, [X19]
	0x02B448B8 MOV X22, X0
	0x02B448BC MOV X0, X19
	0x02B448C0 LDP X9, X1, [X8 + 0x178]
	0x02B448C4 BLR X9
	0x02B448C8 CBZ X22, 0x2B44A58
	0x02B448CC LDR X8, [X22]
	0x02B448D0 LDR W23, [X22 + 0x20]
	0x02B448D4 MOV W24, W0
	0x02B448D8 MOV X0, X22
	0x02B448DC LDP X9, X1, [X8 + 0x178]
	0x02B448E0 BLR X9
	0x02B448E4 CBZ X0, 0x2B44A58
	0x02B448E8 MOV X1, X31
	0x02B448EC BL 0x3DE7EEC
	0x02B448F0 CBZ X0, 0x2B44A58
	0x02B448F4 LDR X8, [X0]
	0x02B448F8 LDR X1, [X26]
	0x02B448FC MOV X25, X0
	0x02B44900 LDRH W9, [X8 + 0x12E]
	0x02B44904 CBZ X9, 0x2B44928
	0x02B44908 LDR X10, [X8 + 0xB0]
	0x02B4490C ADD X10, X10, 0x8
	0x02B44910 LDUR X11, [X10 - 0x8]
	0x02B44914 CMP X11, X1
	0x02B44918 B.EQ 0x2B44938
	0x02B4491C SUBS X9, X9, 0x1
	0x02B44920 ADD X10, X10, 0x10
	0x02B44924 B.NE 0x2B44910
	0x02B44928 MOVZ W2, 0x11
	0x02B4492C MOV X0, X25
	0x02B44930 BL 0x1C5C788
	0x02B44934 B 0x2B44948
	0x02B44938 LDR W9, [X10]
	0x02B4493C ADD W9, W9, 0x11
	0x02B44940 ADD X8, X8, W9, 0x4, SXTW
	0x02B44944 ADD X0, X8, 0x138
	0x02B44948 LDP X8, X1, [X0]
	0x02B4494C MOV X0, X25
	0x02B44950 BLR X8
	0x02B44954 LDR X1, [X27]
	0x02B44958 MOV X25, X0
	0x02B4495C MOV W0, W31
	0x02B44960 BL 0x266EACC
	0x02B44964 LDR X2, [X28]
	0x02B44968 MOV X1, X0
	0x02B4496C MOV X0, X25
	0x02B44970 BL 0x266E9D0
	0x02B44974 LDR X8, [X19 + 0x78]
	0x02B44978 CBZ X8, 0x2B44A58
	0x02B4497C LDR X2, [X29]
	0x02B44980 MOV W25, W0
	0x02B44984 MOV X0, X8
	0x02B44988 MOV W1, W23
	0x02B4498C ADD W24, W24, W21
	0x02B44990 BL 0x2DAA770
	0x02B44994 LDR X8, [X20 + 0x20]
	0x02B44998 MOV X0, X19
	0x02B4499C MOV W1, W24
	0x02B449A0 LDR X8, [X8 + 0xC0]
	0x02B449A4 LDR X2, [X8 + 0x50]
	0x02B449A8 BL 0x2B47930
	0x02B449AC LDR X8, [X20 + 0x20]
	0x02B449B0 LDR X8, [X8 + 0xC0]
	0x02B449B4 TBZ X0, 0x0, 0x2B449CC
	0x02B449B8 LDR X2, [X8 + 0xE0]
	0x02B449BC MOV X0, X19
	0x02B449C0 MOV W1, W21
	0x02B449C4 BL 0x2B4773C
	0x02B449C8 B 0x2B44A4C
	0x02B449CC LDR X3, [X8 + 0xE8]
	0x02B449D0 MOV X0, X19

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1898000
	009 Move W8, [X22+1274]
	010 Move X20, X2
	011 Move W21, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x15DB000
	018 Move X0, [X0+2728]
	019 Call 0x1C17CF4
	020 Move X0, 0x15B7000
	021 Move X0, [X0+1656]
	022 Call 0x1C17CF4
	023 Move X0, 0x15DB000
	024 Move X0, [X0+2736]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+1274], W8
	028 Move X8, [X20+32]
	029 Move X0, X19
	030 Move X8, [X8+192]
	031 Move X1, [X8+96]
	032 Call 0x2B47A04, X0
	033 Move X8, [X19+40]
	034 Compare X8, 0
	035 JumpIfEqual {178}
	036 Move W22, [X8+24]
	037 Move X0, [X19+120]
	038 Move TEMP, X21
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {49}
	042 Compare X0, 0
	043 JumpIfEqual {178}
	044 Move X8, 0x15B7000
	045 Move X8, [X8+1656]
	046 Move X1, [X8]
	047 Call HashSet`1<Int32>.Clear, X0
	048 Move W23, W31
	049 Compare X0, 0
	050 JumpIfEqual {178}
	051 Move X8, 0x15DB000
	052 Move X1, [X19+224]
	053 Move X8, [X8+2736]
	054 Move X2, [X8]
	055 Call HashSet`1<Int32>.RemoveWhere, X0, X1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CSET not yet implemented."
	058 Move X8, [X20+32]
	059 And W1, W21, 1
	060 Move X0, X19
	061 Move X8, [X8+192]
	062 Move X2, [X8+120]
	063 Call 0x2844284, X0, X1
	064 Move X0, [X19+32]
	065 Move [X19+140], W31
	066 Move [X19+144], W31
	067 Compare X0, 0
	068 JumpIfEqual {178}
	069 Move X8, [X0]
	070 Move X9, [X8+2056]
	071 Move X1, [X8+2064]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {170}
	077 Move TEMP, X23
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {86}
	081 Move X8, [X19+40]
	082 Compare X8, 0
	083 JumpIfEqual {178}
	084 Move W8, [X8+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19]
	087 Move X0, X19
	088 Move X9, [X8+520]
	089 Move X1, [X8+528]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X8, [X20+32]
	092 Move X0, X19
	093 Move X8, [X8+192]
	094 Move X1, [X8+144]
	095 Call 0x2B442A8, X0, V0
	096 Move X8, [X20+32]
	097 Move X0, X19
	098 Move X8, [X8+192]
	099 Move X1, [X8+152]
	100 Call 0x2B4427C, X0
	101 Move X8, [X19+16]
	102 Compare X8, 0
	103 JumpIfEqual {178}
	104 Move X0, [X8+1048]
	105 Compare X0, 0
	106 JumpIfEqual {178}
	107 Move X1, X31
	108 Move V8, V0
	109 Call VisualElement.get_layout, X0
	110 Move X8, [X19+16]
	111 Compare X8, 0
	112 JumpIfEqual {178}
	113 Move X8, [X8+1064]
	114 Compare X8, 0
	115 JumpIfEqual {178}
	116 Move X0, [X8+976]
	117 Compare X0, 0
	118 JumpIfEqual {178}
	119 Move X8, 0x15DB000
	120 Move X8, [X8+2728]
	121 Subtract S0, S8, S3
	122 Move S1, W31
	123 NotImplemented "Instruction FMAX not yet implemented."
	124 Move X1, [X8]
	125 Call BaseSlider`1<Single>.SetHighValueWithoutNotify, X0, V0
	126 Move X8, [X19+16]
	127 Compare X8, 0
	128 JumpIfEqual {178}
	129 Move X9, [X20+32]
	130 Move X21, [X8+1064]
	131 Move X0, X19
	132 Move X9, [X9+192]
	133 Move X1, [X9+16]
	134 Call 0x2843CF4, X0
	135 Compare X0, 0
	136 JumpIfEqual {178}
	137 Compare X21, 0
	138 JumpIfEqual {178}
	139 Move V0, [X0+20]
	140 Move X0, X21
	141 Move X1, X31
	142 Call Scroller.set_value, X0, V0
	143 Move X8, [X20+32]
	144 Move X0, X19
	145 Move X8, [X8+192]
	146 Move X1, [X8+16]
	147 Call 0x2843CF4, X0
	148 Compare X0, 0
	149 JumpIfEqual {178}
	150 Move X8, [X19+16]
	151 Compare X8, 0
	152 JumpIfEqual {178}
	153 Move X20, X0
	154 Move X0, [X8+1064]
	155 Compare X0, 0
	156 JumpIfEqual {178}
	157 Move X1, X31
	158 Call Scroller.get_value, X0
	159 Move [X20+20], S0
	160 Move X0, X19
	161 Move X20, [X31+48]
	162 Move X19, [X31+56]
	163 Move X22, [X31+32]
	164 Move X21, [X31+40]
	165 Move X30, [X31+16]
	166 Move X23, [X31+24]
	167 Move V8, [X31+64]
	168 Call 0x2B46B70, X0
	169 Return 
	170 Move X20, [X31+48]
	171 Move X19, [X31+56]
	172 Move X22, [X31+32]
	173 Move X21, [X31+40]
	174 Move X30, [X31+16]
	175 Move X23, [X31+24]
	176 Move V8, [X31+64]
	177 Return 
	178 Call 0x1C17F20

Method: System.Void ScrollToItem(System.Int32 index)

Disassembly:
	0x02B449D4 MOV X1, X22
	0x02B449D8 MOV W2, W24
	0x02B449DC BL 0x28435B8
	0x02B449E0 LDR X8, [X20 + 0x20]
	0x02B449E4 MOV X0, X19
	0x02B449E8 LDR X8, [X8 + 0xC0]
	0x02B449EC LDR X1, [X8 + 0x170]
	0x02B449F0 BL 0x2B434C8
	0x02B449F4 FCMP S8, S0
	0x02B449F8 B.LE 0x2B44A18
	0x02B449FC LDR X8, [X20 + 0x20]
	0x02B44A00 MOV X0, X19
	0x02B44A04 MOV W1, W21
	0x02B44A08 LDR X8, [X8 + 0xC0]
	0x02B44A0C LDR X2, [X8 + 0xE0]
	0x02B44A10 BL 0x2B4773C
	0x02B44A14 B 0x2B44A34
	0x02B44A18 CMP W24, W23
	0x02B44A1C CSET W8, EQ
	0x02B44A20 AND W8, W8, W25, 0x0
	0x02B44A24 TBNZ X8, 0x0, 0x2B44A34
	0x02B44A28 MOV X0, X19
	0x02B44A2C MOV X1, X22
	0x02B44A30 BL 0x2B4787C
	0x02B44A34 LDR X8, [X19]
	0x02B44A38 MOV X0, X19
	0x02B44A3C MOV W1, W24
	0x02B44A40 LDP X9, X2, [X8 + 0x1F8]
	0x02B44A44 BLR X9
	0x02B44A48 FADD S8, S8, S0
	0x02B44A4C LDR X0, [X19 + 0x28]
	0x02B44A50 ADD W21, W21, 0x1
	0x02B44A54 CBNZ X0, 0x2B44894
	0x02B44A58 BL 0x1C16F20
	0x02B44A5C LDR W8, [X19 + 0x8C]
	0x02B44A60 CMP W8, 0x1
	0x02B44A64 B.EQ 0x2B44A7C
	0x02B44A68 LDR X8, [X20 + 0x20]
	0x02B44A6C MOV X0, X19
	0x02B44A70 LDR X8, [X8 + 0xC0]
	0x02B44A74 LDR X1, [X8 + 0x178]
	0x02B44A78 BL 0x2B45ADC
	0x02B44A7C MOV X0, X19
	0x02B44A80 LDP X20, X19, [X31 + 0x60]
	0x02B44A84 LDP X22, X21, [X31 + 0x50]
	0x02B44A88 LDP X24, X23, [X31 + 0x40]
	0x02B44A8C LDP X26, X25, [X31 + 0x30]
	0x02B44A90 LDP X28, X27, [X31 + 0x20]
	0x02B44A94 LDP X29, X30, [X31 + 0x10]
	0x02B44A98 LDR V8, [X31], #0x70
	0x02B44A9C B 0x2B45B70
	0x02B44AA0 STR D8, [X31 - 0x30]!
	0x02B44AA4 STR X30, [X31 + 0x8]
	0x02B44AA8 STP X22, X21, [X31 + 0x10]
	0x02B44AAC STP X20, X19, [X31 + 0x20]
	0x02B44AB0 LDR W8, [X0 + 0x8C]
	0x02B44AB4 CBZ W8, 0x2B44AD0
	0x02B44AB8 MOV W0, W31
	0x02B44ABC LDP X20, X19, [X31 + 0x20]
	0x02B44AC0 LDP X22, X21, [X31 + 0x10]
	0x02B44AC4 LDR X30, [X31 + 0x8]
	0x02B44AC8 LDR V8, [X31], #0x30
	0x02B44ACC RET
	0x02B44AD0 LDR X8, [X1 + 0x20]
	0x02B44AD4 MOV X20, X1
	0x02B44AD8 MOV X19, X0
	0x02B44ADC LDR X8, [X8 + 0xC0]
	0x02B44AE0 LDR X1, [X8 + 0x180]
	0x02B44AE4 BL 0x2B433E0
	0x02B44AE8 TBNZ X0, 0x1F, 0x2B44AB8
	0x02B44AEC LDR X8, [X20 + 0x20]
	0x02B44AF0 MOV X0, X19
	0x02B44AF4 LDR X8, [X8 + 0xC0]
	0x02B44AF8 LDR X1, [X8 + 0x188]
	0x02B44AFC BL 0x2842CBC
	0x02B44B00 CBZ X0, 0x2B44B0C
	0x02B44B04 LDR W22, [X0 + 0x20]
	0x02B44B08 B 0x2B44B10
	0x02B44B0C MOVN W22, 0x0
	0x02B44B10 LDR X8, [X20 + 0x20]
	0x02B44B14 MOV X0, X19
	0x02B44B18 LDR X8, [X8 + 0xC0]
	0x02B44B1C LDR X1, [X8 + 0xB8]
	0x02B44B20 BL 0x2B43118
	0x02B44B24 LDR X8, [X20 + 0x20]
	0x02B44B28 MOV X0, X19
	0x02B44B2C MOV V8.16B, V0.16B
	0x02B44B30 LDR X8, [X8 + 0xC0]
	0x02B44B34 LDR X1, [X8 + 0x10]
	0x02B44B38 BL 0x2842CF4
	0x02B44B3C CBZ X0, 0x2B44C10
	0x02B44B40 LDR V0, [X0 + 0x14]
	0x02B44B44 FCMP S8, S0
	0x02B44B48 B.GT 0x2B44C08
	0x02B44B4C LDR X8, [X19]
	0x02B44B50 MOV X0, X19
	0x02B44B54 LDP X9, X1, [X8 + 0x178]
	0x02B44B58 BLR X9
	0x02B44B5C LDR X8, [X20 + 0x20]
	0x02B44B60 MOV W21, W0
	0x02B44B64 MOV X0, X19
	0x02B44B68 LDR X8, [X8 + 0xC0]
	0x02B44B6C LDR X1, [X8 + 0xA8]
	0x02B44B70 BL 0x2842AE0
	0x02B44B74 CMP W21, W0
	0x02B44B78 B.GE 0x2B44AB8
	0x02B44B7C LDR X8, [X20 + 0x20]
	0x02B44B80 MOV X0, X19
	0x02B44B84 LDR X8, [X8 + 0xC0]
	0x02B44B88 LDR X1, [X8 + 0x170]
	0x02B44B8C BL 0x2B434C8
	0x02B44B90 FCMP S8, S0
	0x02B44B94 B.GT 0x2B44AB8
	0x02B44B98 LDR X8, [X20 + 0x20]
	0x02B44B9C MOV X0, X19
	0x02B44BA0 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1898000
	009 Move W8, [X22+1275]
	010 Move X21, X2
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x15DA000
	018 Move X0, [X0+3864]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+1275], W8
	022 Add W31, W20, 1
	023 Move X0, [X19+16]
	024 Compare X0, 0
	025 JumpIfEqual {141}
	026 Move X8, [X0]
	027 Move X9, [X8+1896]
	028 Move X1, [X8+1904]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Compare X0, 0
	031 JumpIfEqual {141}
	032 Move X1, X31
	033 Call VisualElement.get_layout, X0
	034 Move X8, [X19+16]
	035 Compare X8, 0
	036 JumpIfEqual {141}
	037 Move X0, [X8+1048]
	038 Compare X0, 0
	039 JumpIfEqual {141}
	040 Move X1, X31
	041 Move V9, V3
	042 Call VisualElement.get_layout, X0
	043 Add W31, W20, 1
	044 Move V8, V3
	045 Move X8, [X19]
	046 Move X0, X19
	047 Move X9, [X8+376]
	048 Move X1, [X8+384]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, [X21+32]
	052 Move X0, X19
	053 Move W1, W20
	054 Move X8, [X8+192]
	055 Move X2, [X8+176]
	056 Call 0x2B472D8, X0, X1
	057 Move X8, [X21+32]
	058 Move X0, X19
	059 Move V9, V0
	060 Move X8, [X8+192]
	061 Move X1, [X8+184]
	062 Call 0x2B44118, X0
	063 Add S0, S8, S0
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 Move X21, 0x15DA000
	066 Move X21, [X21+3864]
	067 Move X0, [X21]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X21]
	073 Move X8, [X0+184]
	074 Move X0, [X19+16]
	075 Move TEMP, 0
	076 Not TEMP
	077 Move W9, TEMP
	078 Move W8, [X8+24]
	079 Move [X19+128], W9
	080 Move [X19+132], W20
	081 Compare X0, 0
	082 JumpIfEqual {141}
	083 Subtract S0, S9, S8
	084 NotImplemented "Instruction SCVTF not yet implemented."
	085 Add S1, S0, S1
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X22, [X31+32]
	089 Move X21, [X31+40]
	090 Move X30, [X31+16]
	091 Move D9, [X31+64]
	092 Move D8, [X31+72]
	093 Return 
	094 Move X8, [X21+32]
	095 Move X0, X19
	096 Move X8, [X8+192]
	097 Move X1, [X8+168]
	098 Call 0x2843AE0, X0
	099 Subtract W8, W0, 1
	100 Move X0, [X19+16]
	101 Move TEMP, 0
	102 Not TEMP
	103 Move W9, TEMP
	104 Move [X19+128], W9
	105 Move [X19+132], W8
	106 Move W8, 1
	107 Move [X19+136], W8
	108 Compare X0, 0
	109 JumpIfEqual {141}
	110 NotImplemented "Instruction FCMP not yet implemented."
	111 Move S0, W31
	112 NotImplemented "Instruction FCSEL not yet implemented."
	113 Move S0, W31
	114 Move TEMP, 0
	115 Not TEMP
	116 Move W8, TEMP
	117 Move [X19+128], W20
	118 Move [X19+132], W8
	119 Move X8, [X21+32]
	120 Move X21, [X19+16]
	121 Subtract W1, W20, 1
	122 Move X0, X19
	123 Move X8, [X8+192]
	124 Move X2, [X8+176]
	125 Call 0x2B472D8, X0, X1
	126 Compare X21, 0
	127 JumpIfEqual {141}
	128 Move V1, V0
	129 Move S0, W31
	130 Move X0, X21
	131 Move X20, [X31+48]
	132 Move X19, [X31+56]
	133 Move X22, [X31+32]
	134 Move X21, [X31+40]
	135 Move X30, [X31+16]
	136 Move X1, X31
	137 Move D9, [X31+64]
	138 Move D8, [X31+72]
	139 Call ScrollView.set_scrollOffset, X0, X1
	140 Return 
	141 Call 0x1C17F20

Method: System.Void Resize(UnityEngine.Vector2 size)

Disassembly:
	0x02B44BA4 LDR X1, [X8 + 0x170]
	0x02B44BA8 BL 0x2B434C8
	0x02B44BAC FCMP S8, S0
	0x02B44BB0 B.NE 0x2B44BC0
	0x02B44BB4 LDRB W8, [X19 + 0x88]
	0x02B44BB8 CMP W8, 0x1
	0x02B44BBC B.NE 0x2B44AB8
	0x02B44BC0 LDR X8, [X19]
	0x02B44BC4 MOV X0, X19
	0x02B44BC8 MOV W1, W21
	0x02B44BCC LDP X9, X2, [X8 + 0x1F8]
	0x02B44BD0 BLR X9
	0x02B44BD4 CMP W21, W22
	0x02B44BD8 B.GT 0x2B44C08
	0x02B44BDC LDR X8, [X20 + 0x20]
	0x02B44BE0 MOV X0, X19
	0x02B44BE4 FADD S8, S8, S0
	0x02B44BE8 ADD W21, W21, 0x1
	0x02B44BEC LDR X8, [X8 + 0xC0]
	0x02B44BF0 LDR X1, [X8 + 0xA8]
	0x02B44BF4 BL 0x2842AE0
	0x02B44BF8 CMP W21, W0
	0x02B44BFC MOV W0, W31
	0x02B44C00 B.LT 0x2B44B7C
	0x02B44C04 B 0x2B44ABC
	0x02B44C08 MOVZ W0, 0x1
	0x02B44C0C B 0x2B44ABC
	0x02B44C10 BL 0x1C16F20
	0x02B44C14 STR D10, [X31 - 0x70]!
	0x02B44C18 STP D9, D8, [X31 + 0x10]
	0x02B44C1C STP X30, X27, [X31 + 0x20]
	0x02B44C20 STP X26, X25, [X31 + 0x30]
	0x02B44C24 STP X24, X23, [X31 + 0x40]
	0x02B44C28 STP X22, X21, [X31 + 0x50]
	0x02B44C2C STP X20, X19, [X31 + 0x60]
	0x02B44C30 ADRP X21, 0x1897000
	0x02B44C34 LDRB W8, [X21 + 0x500]
	0x02B44C38 MOV X20, X1
	0x02B44C3C MOV X19, X0
	0x02B44C40 TBNZ X8, 0x0, 0x2B44C7C
	0x02B44C44 ADRP X0, 0x15B6000
	0x02B44C48 LDR X0, [X0 + 0x850]
	0x02B44C4C BL 0x1C16CF4
	0x02B44C50 ADRP X0, 0x15D8000
	0x02B44C54 LDR X0, [X0 + 0x128]
	0x02B44C58 BL 0x1C16CF4
	0x02B44C5C ADRP X0, 0x15D9000
	0x02B44C60 LDR X0, [X0 + 0xF08]
	0x02B44C64 BL 0x1C16CF4
	0x02B44C68 ADRP X0, 0x15D9000
	0x02B44C6C LDR X0, [X0 + 0xF10]
	0x02B44C70 BL 0x1C16CF4
	0x02B44C74 MOVZ W8, 0x1
	0x02B44C78 STRB W8, [X21 + 0x500]
	0x02B44C7C LDR X0, [X19 + 0x20]
	0x02B44C80 CBZ X0, 0x2B45234
	0x02B44C84 LDR X8, [X0]
	0x02B44C88 LDR X9, [X8 + 0x808]
	0x02B44C8C LDR X1, [X8 + 0x810]
	0x02B44C90 BLR X9
	0x02B44C94 TBZ X0, 0x0, 0x2B451CC
	0x02B44C98 LDR X8, [X19 + 0x28]
	0x02B44C9C CBZ X8, 0x2B45234
	0x02B44CA0 LDR X9, [X20 + 0x20]!
	0x02B44CA4 LDR W10, [X8 + 0x18]
	0x02B44CA8 LDR X8, [X9 + 0xC0]
	0x02B44CAC CBZ W10, 0x2B44D24
	0x02B44CB0 LDR X1, [X8 + 0x180]
	0x02B44CB4 MOV X0, X19
	0x02B44CB8 BL 0x2B433E0
	0x02B44CBC TBNZ X0, 0x1F, 0x2B451CC
	0x02B44CC0 LDR X8, [X20]
	0x02B44CC4 MOV X0, X19
	0x02B44CC8 LDR X8, [X8 + 0xC0]
	0x02B44CCC LDR X1, [X8 + 0xB8]
	0x02B44CD0 BL 0x2B43118
	0x02B44CD4 LDR X8, [X20]
	0x02B44CD8 MOV X0, X19
	0x02B44CDC MOV V8.16B, V0.16B
	0x02B44CE0 LDR X8, [X8 + 0xC0]
	0x02B44CE4 LDR X1, [X8 + 0x98]
	0x02B44CE8 BL 0x2B4327C
	0x02B44CEC LDR X8, [X20]
	0x02B44CF0 FCMP S8, S0
	0x02B44CF4 LDR X8, [X8 + 0xC0]
	0x02B44CF8 B.LE 0x2B44D68
	0x02B44CFC LDR X1, [X8 + 0x40]
	0x02B44D00 MOV X0, X19
	0x02B44D04 LDP X20, X19, [X31 + 0x60]
	0x02B44D08 LDP X22, X21, [X31 + 0x50]
	0x02B44D0C LDP X24, X23, [X31 + 0x40]
	0x02B44D10 LDP X26, X25, [X31 + 0x30]
	0x02B44D14 LDP X30, X27, [X31 + 0x20]
	0x02B44D18 LDP D9, D8, [X31 + 0x10]
	0x02B44D1C LDR V10, [X31], #0x70
	0x02B44D20 B 0x2B44174
	0x02B44D24 LDR X1, [X8 + 0x90]
	0x02B44D28 FMOV S0, W31
	0x02B44D2C MOV X0, X19
	0x02B44D30 BL 0x2B432A8
	0x02B44D34 LDR X8, [X20]
	0x02B44D38 MOV X0, X19
	0x02B44D3C LDP X20, X19, [X31 + 0x60]
	0x02B44D40 LDP X22, X21, [X31 + 0x50]
	0x02B44D44 LDR X8, [X8 + 0xC0]
	0x02B44D48 LDP X24, X23, [X31 + 0x40]
	0x02B44D4C LDP X26, X25, [X31 + 0x30]
	0x02B44D50 LDP X30, X27, [X31 + 0x20]
	0x02B44D54 LDR X1, [X8 + 0x110]
	0x02B44D58 LDP D9, D8, [X31 + 0x10]
	0x02B44D5C FMOV S0, W31
	0x02B44D60 LDR V10, [X31], #0x70
	0x02B44D64 B 0x2B43144
	0x02B44D68 LDR X1, [X8 + 0xB8]
	0x02B44D6C MOV X0, X19
	0x02B44D70 BL 0x2B43118
	0x02B44D74 LDR X8, [X20]
	0x02B44D78 MOV X0, X19
	0x02B44D7C MOV V8.16B, V0.16B
	0x02B44D80 LDR X8, [X8 + 0xC0]
	0x02B44D84 LDR X1, [X8 + 0xB8]
	0x02B44D88 BL 0x2B43118
	0x02B44D8C LDR X8, [X19]
	0x02B44D90 MOV X0, X19
	0x02B44D94 MOV V9.16B, V0.16B
	0x02B44D98 LDP X9, X1, [X8 + 0x178]
	0x02B44D9C BLR X9
	0x02B44DA0 LDR X8, [X20]
	0x02B44DA4 MOV W22, W0
	0x02B44DA8 MOV X0, X19
	0x02B44DAC LDR X8, [X8 + 0xC0]
	0x02B44DB0 LDR X1, [X8 + 0xA8]
	0x02B44DB4 BL 0x2842AE0
	0x02B44DB8 CMP W22, W0
	0x02B44DBC B.GE 0x2B44F74
	0x02B44DC0 ADRP X25, 0x15D8000
	0x02B44DC4 ADRP X26, 0x15D9000
	0x02B44DC8 ADRP X27, 0x15D9000
	0x02B44DCC LDR X25, [X25 + 0x128]
	0x02B44DD0 LDR X26, [X26 + 0xF10]
	0x02B44DD4 LDR X27, [X27 + 0xF08]
	0x02B44DD8 MOV W21, W31
	0x02B44DDC LDR X8, [X20]
	0x02B44DE0 MOV X0, X19
	0x02B44DE4 LDR X8, [X8 + 0xC0]
	0x02B44DE8 LDR X1, [X8 + 0x170]
	0x02B44DEC BL 0x2B434C8
	0x02B44DF0 FCMP S9, S0
	0x02B44DF4 B.GT 0x2B44F78
	0x02B44DF8 LDR X8, [X20]
	0x02B44DFC MOV X0, X19
	0x02B44E00 LDR X8, [X8 + 0xC0]
	0x02B44E04 LDR X1, [X8 + 0x170]
	0x02B44E08 BL 0x2B434C8
	0x02B44E0C FCMP S9, S0
	0x02B44E10 B.NE 0x2B44E20
	0x02B44E14 LDRB W8, [X19 + 0x88]
	0x02B44E18 CMP W8, 0x1
	0x02B44E1C B.NE 0x2B44F78
	0x02B44E20 LDR X8, [X19]
	0x02B44E24 MOV X0, X19
	0x02B44E28 MOV W1, W22
	0x02B44E2C LDP X9, X2, [X8 + 0x1F8]
	0x02B44E30 BLR X9
	0x02B44E34 LDR X0, [X19 + 0x28]
	0x02B44E38 CBZ X0, 0x2B45234
	0x02B44E3C LDR X8, [X20]
	0x02B44E40 MOV W1, W21
	0x02B44E44 MOV V10.16B, V0.16B
	0x02B44E48 LDR X8, [X8 + 0xC0]
	0x02B44E4C LDR X2, [X8 + 0x128]
	0x02B44E50 BL 0x301BCCC
	0x02B44E54 CBZ X0, 0x2B45234
	0x02B44E58 LDR W8, [X0 + 0x20]
	0x02B44E5C MOV X23, X0
	0x02B44E60 CMP W8, W22
	0x02B44E64 B.NE 0x2B44F0C
	0x02B44E68 LDR X8, [X23]
	0x02B44E6C MOV X0, X23
	0x02B44E70 LDP X9, X1, [X8 + 0x178]
	0x02B44E74 BLR X9
	0x02B44E78 CBZ X0, 0x2B45234
	0x02B44E7C MOV X1, X31
	0x02B44E80 BL 0x3DE7EEC
	0x02B44E84 CBZ X0, 0x2B45234
	0x02B44E88 LDR X8, [X0]
	0x02B44E8C LDR X1, [X25]
	0x02B44E90 MOV X24, X0
	0x02B44E94 LDRH W9, [X8 + 0x12E]
	0x02B44E98 CBZ X9, 0x2B44EBC
	0x02B44E9C LDR X10, [X8 + 0xB0]
	0x02B44EA0 ADD X10, X10, 0x8
	0x02B44EA4 LDUR X11, [X10 - 0x8]
	0x02B44EA8 CMP X11, X1
	0x02B44EAC B.EQ 0x2B44ECC
	0x02B44EB0 SUBS X9, X9, 0x1
	0x02B44EB4 ADD X10, X10, 0x10
	0x02B44EB8 B.NE 0x2B44EA4
	0x02B44EBC MOVZ W2, 0x11
	0x02B44EC0 MOV X0, X24
	0x02B44EC4 BL 0x1C5C788
	0x02B44EC8 B 0x2B44EDC
	0x02B44ECC LDR W9, [X10]
	0x02B44ED0 ADD W9, W9, 0x11
	0x02B44ED4 ADD X8, X8, W9, 0x4, SXTW
	0x02B44ED8 ADD X0, X8, 0x138
	0x02B44EDC LDP X8, X1, [X0]
	0x02B44EE0 MOV X0, X24
	0x02B44EE4 BLR X8
	0x02B44EE8 LDR X1, [X26]
	0x02B44EEC MOV X24, X0
	0x02B44EF0 MOVZ W0, 0x1
	0x02B44EF4 BL 0x266EACC
	0x02B44EF8 LDR X2, [X27]
	0x02B44EFC MOV X1, X0
	0x02B44F00 MOV X0, X24

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x1898000
	012 Move W8, [X21+1276]
	013 Move X20, X1
	014 Move V8, V1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x15DB000
	021 Move X0, [X0+2728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1276], W8
	025 Compare X19, 0
	026 JumpIfEqual {177}
	027 Move X8, [X19]
	028 Move X0, X19
	029 Move X9, [X8+520]
	030 Move X1, [X8+528]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X8, [X20+32]
	033 Move X0, X19
	034 Move V9, V0
	035 Move X8, [X8+192]
	036 Move X1, [X8+152]
	037 Call 0x2B4427C, X0
	038 Move X8, [X20+32]
	039 NotImplemented "Instruction FCMP not yet implemented."
	040 NotImplemented "Instruction FCSEL not yet implemented."
	041 Move X0, X19
	042 Move X8, [X8+192]
	043 Move X1, [X8+144]
	044 Call 0x2B442A8, X0, V0
	045 Move X8, [X19+16]
	046 Compare X8, 0
	047 JumpIfEqual {177}
	048 Move X0, [X8+1048]
	049 Compare X0, 0
	050 JumpIfEqual {177}
	051 Move X1, X31
	052 Call VisualElement.get_layout, X0
	053 Move X8, [X20+32]
	054 Move X0, X19
	055 Move V9, V3
	056 Move X8, [X8+192]
	057 Move X1, [X8+152]
	058 Call 0x2B4427C, X0
	059 Move X8, [X20+32]
	060 Move X0, X19
	061 Move V10, V0
	062 Move X8, [X8+192]
	063 Move X1, [X8+16]
	064 Call 0x2843CF4, X0
	065 Compare X0, 0
	066 JumpIfEqual {177}
	067 Move V1, [X0+20]
	068 Subtract S0, S10, S9
	069 Move X8, [X19+16]
	070 Move S2, W31
	071 NotImplemented "Instruction FMAX not yet implemented."
	072 NotImplemented "Instruction FCMP not yet implemented."
	073 NotImplemented "Instruction FCSEL not yet implemented."
	074 Compare X8, 0
	075 JumpIfEqual {177}
	076 Move X8, [X8+1064]
	077 Compare X8, 0
	078 JumpIfEqual {177}
	079 Move X0, [X8+976]
	080 Compare X0, 0
	081 JumpIfEqual {177}
	082 Move X8, 0x15DB000
	083 Move X8, [X8+2728]
	084 Move X1, [X8]
	085 Call BaseSlider`1<Single>.SetHighValueWithoutNotify, X0, V0
	086 Move X8, [X19+16]
	087 Compare X8, 0
	088 JumpIfEqual {177}
	089 Move X8, [X8+1064]
	090 Compare X8, 0
	091 JumpIfEqual {177}
	092 Move X0, [X8+976]
	093 Compare X0, 0
	094 JumpIfEqual {177}
	095 Move X8, [X0]
	096 Move V0, V9
	097 Move X9, [X8+2184]
	098 Move X1, [X8+2192]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X8, [X20+32]
	101 Move X0, X19
	102 Move X8, [X8+192]
	103 Move X1, [X8+16]
	104 Call 0x2843CF4, X0
	105 Compare X0, 0
	106 JumpIfEqual {177}
	107 Move X8, [X19+16]
	108 Compare X8, 0
	109 JumpIfEqual {177}
	110 Move X21, X0
	111 Move X0, [X8+1064]
	112 Compare X0, 0
	113 JumpIfEqual {177}
	114 Move X1, X31
	115 Call Scroller.get_value, X0
	116 Move [X21+20], S0
	117 Move X0, [X19+32]
	118 Compare X0, 0
	119 JumpIfEqual {177}
	120 Move V0, V8
	121 Move X1, X31
	122 Call BaseVerticalCollectionView.ResolveItemHeight, X0, V0
	123 Move X0, X19
	124 Move V8, V0
	125 Call 0x2B4408C, X0
	126 Move X21, 0x1895000
	127 Move W8, [X21+2750]
	128 Move V9, V0
	129 Compare W8, 0
	130 JumpIfNotEqual {136}
	131 Move X0, 0x15B0000
	132 Move X0, [X0+1448]
	133 Call 0x1C17CF4
	134 Move W8, 1
	135 Move [X21+2750], W8
	136 Move X8, 0x15B0000
	137 Move X8, [X8+1448]
	138 NotImplemented "Instruction FDIV not yet implemented."
	139 Move X0, [X8]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move W8, 0x7F800000
	145 NotImplemented "Instruction FRINTP not yet implemented."
	146 Move S1, W8
	147 NotImplemented "Instruction FCVTPS not yet implemented."
	148 NotImplemented "Instruction FCMP not yet implemented."
	149 Move W8, 0x80000000
	150 NotImplemented "Instruction CSEL not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X9, [X20+32]
	153 Move X0, X19
	154 Add W21, W8, 2
	155 Move X9, [X9+192]
	156 Move X1, [X9+168]
	157 Call 0x2843AE0, X0
	158 Move X8, [X19+40]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 NotImplemented "Instruction CSEL not yet implemented."
	161 Compare X8, 0
	162 JumpIfEqual {177}
	163 Move W24, [X8+24]
	164 Subtract W21, W24, W23
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X9, [X19]
	167 Move W8, [X8+24]
	168 Move X0, X19
	169 Move X10, [X9+680]
	170 Move X2, [X9+688]
	171 Subtract W1, W8, 1
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Subtract W21, W21, 1
	174 Move X8, [X19+40]
	175 Compare X8, 0
	176 JumpIfNotEqual {166}
	177 Call 0x1C17F20
	178 Subtract W8, W23, W24
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X8, [X19]
	181 Move X0, X19
	182 Move X9, [X8+376]
	183 Move X1, [X8+384]
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Move X8, [X19]
	186 Add W21, W0, W24
	187 Move TEMP, 0
	188 Not TEMP
	189 Move W1, TEMP
	190 Move TEMP, 0
	191 Not TEMP
	192 Move W2, TEMP
	193 Move X9, [X8+664]
	194 Move X3, [X8+672]
	195 Move X0, X19
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move X8, [X20+32]
	198 Move X22, X0
	199 Move X0, X19
	200 Move W1, W21
	201 Move X8, [X8+192]
	202 Move X2, [X8+80]
	203 Call 0x2B48930, X0, X1
	204 Move TEMP, X0
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfNotEqual {218}
	208 Move X8, [X19+40]
	209 Compare X8, 0
	210 JumpIfEqual {177}
	211 Move X9, [X20+32]
	212 Move W8, [X8+24]
	213 Move X0, X19
	214 Move X9, [X9+192]
	215 Subtract W1, W8, 1
	216 Move X2, [X9+224]
	217 Call 0x2B4873C, X0, X1
	218 Move X8, [X20+32]
	219 Move X0, X19
	220 Move X1, X22
	221 Move W2, W21
	222 Move X8, [X8+192]
	223 Move X3, [X8+232]
	224 Call 0x28445B8, X0, X1, X2
	225 Move X0, X19
	226 Move X1, X22
	227 Call 0x2B4887C, X0, X1
	228 Add W24, W24, 1
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X0, X19
	231 Call 0x2B46B70, X0
	232 Move X0, X19
	233 Call 0x2B46EB8, X0
	234 Move W8, 1
	235 Move [X19+140], W8
	236 Move X20, [X31+64]
	237 Move X19, [X31+72]
	238 Move X22, [X31+48]
	239 Move X21, [X31+56]
	240 Move X24, [X31+32]
	241 Move X23, [X31+40]
	242 Move X30, [X31+24]
	243 Move D9, [X31+8]
	244 Move D8, [X31+16]
	245 Move V10, [X31+80]
	246 Return 

Method: System.Void OnScroll(UnityEngine.Vector2 scrollOffset)

Disassembly:
	0x02B44F04 BL 0x266E9D0
	0x02B44F08 TBZ X0, 0x0, 0x2B44F34
	0x02B44F0C LDR X8, [X20]
	0x02B44F10 MOV X0, X19
	0x02B44F14 MOV X1, X23
	0x02B44F18 MOV W2, W22
	0x02B44F1C LDR X8, [X8 + 0xC0]
	0x02B44F20 LDR X3, [X8 + 0xE8]
	0x02B44F24 BL 0x28435B8
	0x02B44F28 MOV X0, X19
	0x02B44F2C MOV X1, X23
	0x02B44F30 BL 0x2B4787C
	0x02B44F34 LDR X8, [X19 + 0x28]
	0x02B44F38 CBZ X8, 0x2B45234
	0x02B44F3C LDR W8, [X8 + 0x18]
	0x02B44F40 ADD W21, W21, 0x1
	0x02B44F44 CMP W21, W8
	0x02B44F48 B.GE 0x2B44F78
	0x02B44F4C LDR X8, [X20]
	0x02B44F50 MOV X0, X19
	0x02B44F54 FADD S9, S9, S10
	0x02B44F58 ADD W22, W22, 0x1
	0x02B44F5C LDR X8, [X8 + 0xC0]
	0x02B44F60 LDR X1, [X8 + 0xA8]
	0x02B44F64 BL 0x2842AE0
	0x02B44F68 CMP W22, W0
	0x02B44F6C B.LT 0x2B44DDC
	0x02B44F70 B 0x2B44F78
	0x02B44F74 MOV W21, W31
	0x02B44F78 LDR X8, [X19]
	0x02B44F7C MOV X0, X19
	0x02B44F80 LDP X9, X1, [X8 + 0x178]
	0x02B44F84 BLR X9
	0x02B44F88 CMP W0, 0x1
	0x02B44F8C B.LT 0x2B4515C
	0x02B44F90 LDR X8, [X20]
	0x02B44F94 MOV X0, X19
	0x02B44F98 LDR X8, [X8 + 0xC0]
	0x02B44F9C LDR X1, [X8 + 0xB8]
	0x02B44FA0 BL 0x2B43118
	0x02B44FA4 LDR X8, [X20]
	0x02B44FA8 MOV X0, X19
	0x02B44FAC MOV V9.16B, V0.16B
	0x02B44FB0 LDR X8, [X8 + 0xC0]
	0x02B44FB4 LDR X1, [X8 + 0x10]
	0x02B44FB8 BL 0x2842CF4
	0x02B44FBC CBZ X0, 0x2B45234
	0x02B44FC0 LDR V0, [X0 + 0x14]
	0x02B44FC4 FCMP S9, S0
	0x02B44FC8 B.LE 0x2B4515C
	0x02B44FCC LDR X8, [X19 + 0x28]
	0x02B44FD0 CBZ X8, 0x2B45234
	0x02B44FD4 LDR W8, [X8 + 0x18]
	0x02B44FD8 LDR X22, [X19 + 0x50]
	0x02B44FDC SUB W23, W8, 0x1
	0x02B44FE0 CMP W23, W21
	0x02B44FE4 B.LT 0x2B45110
	0x02B44FE8 LDR X8, [X19]
	0x02B44FEC MOV X0, X19
	0x02B44FF0 LDP X9, X1, [X8 + 0x178]
	0x02B44FF4 BLR X9
	0x02B44FF8 CBZ W0, 0x2B45110
	0x02B44FFC LDR X0, [X19 + 0x28]
	0x02B45000 CBZ X0, 0x2B45234
	0x02B45004 LDR X8, [X20]
	0x02B45008 MOV W1, W23
	0x02B4500C LDR X8, [X8 + 0xC0]
	0x02B45010 LDR X2, [X8 + 0x128]
	0x02B45014 BL 0x301BCCC
	0x02B45018 CBZ X22, 0x2B45234
	0x02B4501C LDR X8, [X20]
	0x02B45020 MOV X24, X0
	0x02B45024 MOV X0, X22
	0x02B45028 MOV W1, W31
	0x02B4502C LDR X8, [X8 + 0xC0]
	0x02B45030 MOV X2, X24
	0x02B45034 LDR X3, [X8 + 0x130]
	0x02B45038 BL 0x301CEEC
	0x02B4503C LDR X0, [X19 + 0x28]
	0x02B45040 CBZ X0, 0x2B45234
	0x02B45044 LDR X8, [X20]
	0x02B45048 LDR W9, [X0 + 0x18]
	0x02B4504C LDR X8, [X8 + 0xC0]
	0x02B45050 SUB W1, W9, 0x1
	0x02B45054 LDR X2, [X8 + 0x138]
	0x02B45058 BL 0x301DA48
	0x02B4505C CBZ X24, 0x2B45234
	0x02B45060 LDR X8, [X24]
	0x02B45064 MOV X0, X24
	0x02B45068 LDP X9, X1, [X8 + 0x178]
	0x02B4506C BLR X9
	0x02B45070 CBZ X0, 0x2B45234
	0x02B45074 MOV X1, X31
	0x02B45078 BL 0x3DF67BC
	0x02B4507C LDR X8, [X19]
	0x02B45080 MOV X0, X19
	0x02B45084 LDP X9, X1, [X8 + 0x178]
	0x02B45088 BLR X9
	0x02B4508C LDR X8, [X19]
	0x02B45090 SUB W25, W0, 0x1
	0x02B45094 MOV X0, X19
	0x02B45098 MOV W1, W25
	0x02B4509C LDP X9, X2, [X8 + 0x188]
	0x02B450A0 BLR X9
	0x02B450A4 LDR X8, [X20]
	0x02B450A8 MOV X0, X19
	0x02B450AC MOV X1, X24
	0x02B450B0 MOV W2, W25
	0x02B450B4 LDR X8, [X8 + 0xC0]
	0x02B450B8 LDR X3, [X8 + 0xE8]
	0x02B450BC BL 0x28435B8
	0x02B450C0 MOV X0, X19
	0x02B450C4 MOV X1, X24
	0x02B450C8 BL 0x2B4787C
	0x02B450CC LDR X8, [X19]
	0x02B450D0 MOV X0, X19
	0x02B450D4 MOV W1, W25
	0x02B450D8 LDP X9, X2, [X8 + 0x1F8]
	0x02B450DC BLR X9
	0x02B450E0 LDR X8, [X20]
	0x02B450E4 MOV X0, X19
	0x02B450E8 MOV V9.16B, V0.16B
	0x02B450EC LDR X8, [X8 + 0xC0]
	0x02B450F0 LDR X1, [X8 + 0x10]
	0x02B450F4 BL 0x2842CF4
	0x02B450F8 CBZ X0, 0x2B45234
	0x02B450FC LDR V0, [X0 + 0x14]
	0x02B45100 FSUB S8, S8, S9
	0x02B45104 SUB W23, W23, 0x1
	0x02B45108 FCMP S8, S0
	0x02B4510C B.PL 0x2B44FE0
	0x02B45110 LDR X0, [X19 + 0x28]
	0x02B45114 CBZ X0, 0x2B45234
	0x02B45118 LDR X8, [X20]
	0x02B4511C MOV W1, W31
	0x02B45120 MOV X2, X22
	0x02B45124 LDR X8, [X8 + 0xC0]
	0x02B45128 LDR X3, [X8 + 0x140]
	0x02B4512C BL 0x301D118
	0x02B45130 LDR X8, [X19 + 0x50]
	0x02B45134 CBZ X8, 0x2B45234
	0x02B45138 LDP W2, W9, [X8 + 0x18]
	0x02B4513C ADD W9, W9, 0x1
	0x02B45140 CMP W2, 0x1
	0x02B45144 STP W31, W9, [X8 + 0x18]
	0x02B45148 B.LT 0x2B4515C
	0x02B4514C LDR X0, [X8 + 0x10]
	0x02B45150 MOV W1, W31
	0x02B45154 MOV X3, X31
	0x02B45158 BL 0x339FA34
	0x02B4515C LDR X8, [X20]
	0x02B45160 MOV X0, X19
	0x02B45164 MOV V0.16B, V8.16B
	0x02B45168 LDR X8, [X8 + 0xC0]
	0x02B4516C LDR X1, [X8 + 0x110]
	0x02B45170 BL 0x2B43144

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1898000
	009 Move W8, [X21+1277]
	010 Move X20, X1
	011 Move V8, V1
	012 Move V9, V0
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x15DB000
	019 Move X0, [X0+2728]
	020 Call 0x1C17CF4
	021 Move X0, 0x15D8000
	022 Move X0, [X0+1664]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1277], W8
	026 Move S0, [X19+148]
	027 Move S1, [X19+152]
	028 Move X8, -33923072
	029 Move V2, [X8+3872]
	030 Subtract S0, S0, S9
	031 Subtract S1, S1, S8
	032 Multiply S0, S0, S0
	033 Multiply S1, S1, S1
	034 Add S0, S0, S1
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 Move W8, [X19+128]
	037 Move [X19+148], S9
	038 Move [X19+156], S8
	039 Add W31, W8, 1
	040 Move W8, [X19+132]
	041 Add W31, W8, 1
	042 Move X8, [X20+32]
	043 Move X0, X19
	044 Move X8, [X8+192]
	045 Move X1, [X8+64]
	046 Call 0x2B45174, X0
	047 Move W8, 3
	048 Move [X19+140], W8
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X30, [X31+16]
	054 Move D9, [X31+64]
	055 Move D8, [X31+72]
	056 Return 
	057 Move X8, [X19+200]
	058 Compare X8, 0
	059 JumpIfNotEqual {88}
	060 Move W8, [X19+140]
	061 And W8, W8, 0xFFFFFFFD
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, [X19+32]
	064 Compare X0, 0
	065 JumpIfEqual {180}
	066 Move X1, X31
	067 Call VisualElement.get_schedule, X0
	068 Compare X0, 0
	069 JumpIfEqual {180}
	070 Move X10, 0x15D8000
	071 Move X8, [X0]
	072 Move X22, [X19+168]
	073 Move X10, [X10+1664]
	074 Move X21, X0
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Move X1, [X10]
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move W2, 1
	086 Move X0, X21
	087 Call 0x1C5D788
	088 Move X0, X19
	089 Move X20, [X31+48]
	090 Move X19, [X31+56]
	091 Move X22, [X31+32]
	092 Move X21, [X31+40]
	093 Move X30, [X31+16]
	094 Move D9, [X31+64]
	095 Move D8, [X31+72]
	096 Call 0x2B46D14, X0
	097 Return 
	098 Move W9, [X10]
	099 Add W9, W9, 1
	100 Add X8, X8, W9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X2, [X0+8]
	104 Move X0, X21
	105 Move X1, X22
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X8, [X19+16]
	108 Move [X19+200], X0
	109 Compare X8, 0
	110 JumpIfEqual {180}
	111 Move X0, [X8+1048]
	112 Compare X0, 0
	113 JumpIfEqual {180}
	114 Move X1, X31
	115 Call VisualElement.get_layout, X0
	116 Move X8, [X20+32]
	117 Move X0, X19
	118 Move V8, V3
	119 Move X8, [X8+192]
	120 Move X1, [X8+152]
	121 Call 0x2B4427C, X0
	122 Move X8, [X20+32]
	123 Move X0, X19
	124 Move V9, V0
	125 Move X8, [X8+192]
	126 Move X1, [X8+16]
	127 Call 0x2843CF4, X0
	128 Compare X0, 0
	129 JumpIfEqual {180}
	130 Move V1, [X0+20]
	131 Subtract S0, S9, S8
	132 Move X8, [X19+16]
	133 Move S2, W31
	134 NotImplemented "Instruction FMAX not yet implemented."
	135 NotImplemented "Instruction FCMP not yet implemented."
	136 NotImplemented "Instruction FCSEL not yet implemented."
	137 Compare X8, 0
	138 JumpIfEqual {180}
	139 Move X8, [X8+1064]
	140 Compare X8, 0
	141 JumpIfEqual {180}
	142 Move X0, [X8+976]
	143 Compare X0, 0
	144 JumpIfEqual {180}
	145 Move X8, 0x15DA000
	146 Move X8, [X8+2728]
	147 Move X1, [X8]
	148 Call BaseSlider`1<Single>.SetHighValueWithoutNotify, X0, V0
	149 Move X8, [X19+16]
	150 Compare X8, 0
	151 JumpIfEqual {180}
	152 Move X8, [X8+1064]
	153 Compare X8, 0
	154 JumpIfEqual {180}
	155 Move X0, [X8+976]
	156 Compare X0, 0
	157 JumpIfEqual {180}
	158 Move X8, [X0]
	159 Move V0, V8
	160 Move X9, [X8+2184]
	161 Move X1, [X8+2192]
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move X8, [X20+32]
	164 Move X0, X19
	165 Move X8, [X8+192]
	166 Move X1, [X8+16]
	167 Call 0x2843CF4, X0
	168 Compare X0, 0
	169 JumpIfEqual {180}
	170 Move X8, [X19+16]
	171 Compare X8, 0
	172 JumpIfEqual {180}
	173 Move X20, X0
	174 Move X0, [X8+1064]
	175 Compare X0, 0
	176 JumpIfEqual {180}
	177 Move X1, X31
	178 Call Scroller.get_value, X0
	179 Move [X20+20], S0
	180 Call 0x1C17F20

Method: System.Void OnScrollUpdate()

Disassembly:
	0x02B45174 LDR X8, [X19]
	0x02B45178 MOV X0, X19
	0x02B4517C LDR X9, [X8 + 0x208]
	0x02B45180 LDR X1, [X8 + 0x210]
	0x02B45184 BLR X9
	0x02B45188 LDR X8, [X20]
	0x02B4518C MOV X0, X19
	0x02B45190 LDR X8, [X8 + 0xC0]
	0x02B45194 LDR X1, [X8 + 0x90]
	0x02B45198 BL 0x2B432A8
	0x02B4519C LDR W8, [X19 + 0x8C]
	0x02B451A0 CMP W8, 0x1
	0x02B451A4 B.EQ 0x2B451BC
	0x02B451A8 LDR X8, [X20]
	0x02B451AC MOV X0, X19
	0x02B451B0 LDR X8, [X8 + 0xC0]
	0x02B451B4 LDR X1, [X8 + 0x178]
	0x02B451B8 BL 0x2B45ADC
	0x02B451BC LDR X8, [X19 + 0x78]
	0x02B451C0 CBZ X8, 0x2B45234
	0x02B451C4 LDR W8, [X8 + 0x20]
	0x02B451C8 CBZ W8, 0x2B451EC
	0x02B451CC LDP X20, X19, [X31 + 0x60]
	0x02B451D0 LDP X22, X21, [X31 + 0x50]
	0x02B451D4 LDP X24, X23, [X31 + 0x40]
	0x02B451D8 LDP X26, X25, [X31 + 0x30]
	0x02B451DC LDP X30, X27, [X31 + 0x20]
	0x02B451E0 LDP D9, D8, [X31 + 0x10]
	0x02B451E4 LDR V10, [X31], #0x70
	0x02B451E8 RET
	0x02B451EC LDR X8, [X20]
	0x02B451F0 MOV X0, X19
	0x02B451F4 LDR X8, [X8 + 0xC0]
	0x02B451F8 LDR X1, [X8 + 0x58]
	0x02B451FC BL 0x2B4605C
	0x02B45200 LDR X8, [X20]
	0x02B45204 MOV X0, X19
	0x02B45208 LDP X20, X19, [X31 + 0x60]
	0x02B4520C LDP X22, X21, [X31 + 0x50]
	0x02B45210 LDR X8, [X8 + 0xC0]
	0x02B45214 LDP X24, X23, [X31 + 0x40]
	0x02B45218 LDP X26, X25, [X31 + 0x30]
	0x02B4521C LDP X30, X27, [X31 + 0x20]
	0x02B45220 LDR X2, [X8 + 0x190]
	0x02B45224 LDP D9, D8, [X31 + 0x10]
	0x02B45228 MOVZ W1, 0x1
	0x02B4522C LDR V10, [X31], #0x70
	0x02B45230 B 0x2B45354
	0x02B45234 BL 0x1C16F20
	0x02B45238 STP D9, D8, [X31 - 0x30]!
	0x02B4523C STP X30, X21, [X31 + 0x10]
	0x02B45240 STP X20, X19, [X31 + 0x20]
	0x02B45244 ADRP X21, 0x1896000
	0x02B45248 LDRB W8, [X21 + 0x501]
	0x02B4524C MOV X20, X1
	0x02B45250 MOV V8.16B, V1.16B
	0x02B45254 MOV V9.16B, V0.16B
	0x02B45258 MOV X19, X0
	0x02B4525C TBNZ X8, 0x0, 0x2B45274
	0x02B45260 ADRP X0, 0x15D8000
	0x02B45264 LDR X0, [X0 + 0xF18]
	0x02B45268 BL 0x1C16CF4
	0x02B4526C MOVZ W8, 0x1
	0x02B45270 STRB W8, [X21 + 0x501]
	0x02B45274 LDRB W8, [X19 + 0x88]
	0x02B45278 CBNZ W8, 0x2B45340
	0x02B4527C LDR W1, [X19 + 0x84]
	0x02B45280 TBNZ X1, 0x1F, 0x2B4530C
	0x02B45284 LDR X8, [X20 + 0x20]
	0x02B45288 MOV X0, X19
	0x02B4528C LDR X8, [X8 + 0xC0]
	0x02B45290 LDR X2, [X8 + 0xB0]
	0x02B45294 BL 0x2B462D8
	0x02B45298 LDR X8, [X20 + 0x20]
	0x02B4529C MOV X0, X19
	0x02B452A0 MOV V8.16B, V0.16B
	0x02B452A4 LDR X8, [X8 + 0xC0]
	0x02B452A8 LDR X1, [X8 + 0x10]
	0x02B452AC BL 0x2842CF4
	0x02B452B0 CBZ X0, 0x2B45350
	0x02B452B4 ADRP X21, 0x15D8000
	0x02B452B8 LDR X21, [X21 + 0xF18]
	0x02B452BC MOV X20, X0
	0x02B452C0 LDR X0, [X21]
	0x02B452C4 LDR W8, [X0 + 0xE0]
	0x02B452C8 CBNZ W8, 0x2B452D4
	0x02B452CC BL 0x1C16DFC
	0x02B452D0 LDR X0, [X21]
	0x02B452D4 LDR X8, [X19 + 0x10]
	0x02B452D8 CBZ X8, 0x2B45350
	0x02B452DC LDR X8, [X8 + 0x418]
	0x02B452E0 CBZ X8, 0x2B45350
	0x02B452E4 LDR X9, [X0 + 0xB8]
	0x02B452E8 MOV X0, X8
	0x02B452EC MOV X1, X31
	0x02B452F0 LDR W19, [X9 + 0x18]
	0x02B452F4 BL 0x3DEC528
	0x02B452F8 SCVTF S0, W19
	0x02B452FC FADD S0, S8, S0
	0x02B45300 FSUB S0, S0, S3
	0x02B45304 STR S0, [X20 + 0x14]
	0x02B45308 B 0x2B45340
	0x02B4530C LDR W8, [X19 + 0x90]
	0x02B45310 CMP W8, 0x1
	0x02B45314 B.NE 0x2B45340
	0x02B45318 LDR X8, [X20 + 0x20]
	0x02B4531C MOV X0, X19
	0x02B45320 LDR X8, [X8 + 0xC0]
	0x02B45324 LDR X1, [X8 + 0x10]
	0x02B45328 BL 0x2842CF4
	0x02B4532C CBZ X0, 0x2B45350
	0x02B45330 LDR V0, [X0 + 0x14]
	0x02B45334 FSUB S1, S8, S9
	0x02B45338 FADD S0, S1, S0
	0x02B4533C STR S0, [X0 + 0x14]
	0x02B45340 LDP X20, X19, [X31 + 0x20]
	0x02B45344 LDP X30, X21, [X31 + 0x10]
	0x02B45348 LDP D9, D8, [X31], #0x30
	0x02B4534C RET
	0x02B45350 BL 0x1C16F20
	0x02B45354 STR D10, [X31 - 0x80]!
	0x02B45358 STP D9, D8, [X31 + 0x10]
	0x02B4535C STP X29, X30, [X31 + 0x20]
	0x02B45360 STP X28, X27, [X31 + 0x30]
	0x02B45364 STP X26, X25, [X31 + 0x40]
	0x02B45368 STP X24, X23, [X31 + 0x50]
	0x02B4536C STP X22, X21, [X31 + 0x60]
	0x02B45370 STP X20, X19, [X31 + 0x70]
	0x02B45374 ADRP X22, 0x1896000
	0x02B45378 LDRB W8, [X22 + 0x502]
	0x02B4537C MOV X20, X2
	0x02B45380 MOV W21, W1
	0x02B45384 MOV X19, X0
	0x02B45388 TBNZ X8, 0x0, 0x2B453D0
	0x02B4538C ADRP X0, 0x15D9000
	0x02B45390 LDR X0, [X0 + 0xAA8]
	0x02B45394 BL 0x1C16CF4
	0x02B45398 ADRP X0, 0x15D8000
	0x02B4539C LDR X0, [X0 + 0xF18]
	0x02B453A0 BL 0x1C16CF4
	0x02B453A4 ADRP X0, 0x15D7000
	0x02B453A8 LDR X0, [X0 + 0x128]
	0x02B453AC BL 0x1C16CF4
	0x02B453B0 ADRP X0, 0x15D8000
	0x02B453B4 LDR X0, [X0 + 0xF08]
	0x02B453B8 BL 0x1C16CF4
	0x02B453BC ADRP X0, 0x15D8000
	0x02B453C0 LDR X0, [X0 + 0xF10]
	0x02B453C4 BL 0x1C16CF4
	0x02B453C8 MOVZ W8, 0x1
	0x02B453CC STRB W8, [X22 + 0x502]
	0x02B453D0 LDR X8, [X20 + 0x20]!
	0x02B453D4 MOV X0, X19
	0x02B453D8 LDR X8, [X8 + 0xC0]
	0x02B453DC LDR X1, [X8 + 0xB8]
	0x02B453E0 BL 0x2B43118
	0x02B453E4 CBZ X19, 0x2B45AD8
	0x02B453E8 LDR X8, [X20]
	0x02B453EC MOV X0, X19
	0x02B453F0 MOV V8.16B, V0.16B
	0x02B453F4 LDR X8, [X8 + 0xC0]
	0x02B453F8 LDR X1, [X8 + 0x10]
	0x02B453FC BL 0x2842CF4
	0x02B45400 CBZ X0, 0x2B45AD8
	0x02B45404 LDR X8, [X20]
	0x02B45408 LDR V9, [X0 + 0x14]
	0x02B4540C MOV X0, X19
	0x02B45410 LDR X8, [X8 + 0xC0]
	0x02B45414 LDR X1, [X8 + 0x180]
	0x02B45418 BL 0x2B433E0
	0x02B4541C TBNZ X0, 0x1F, 0x2B454C8
	0x02B45420 LDR X8, [X19]
	0x02B45424 MOV X0, X19
	0x02B45428 LDP X9, X1, [X8 + 0x178]
	0x02B4542C BLR X9
	0x02B45430 LDR X8, [X20]
	0x02B45434 MOV W22, W0
	0x02B45438 MOV X0, X19
	0x02B4543C LDR X8, [X8 + 0xC0]
	0x02B45440 LDR X1, [X8 + 0x180]
	0x02B45444 BL 0x2B433E0
	0x02B45448 CMP W22, W0
	0x02B4544C B.EQ 0x2B45484
	0x02B45450 LDR X8, [X20]
	0x02B45454 MOV X0, X19
	0x02B45458 LDR X8, [X8 + 0xC0]
	0x02B4545C LDR X1, [X8 + 0x180]
	0x02B45460 BL 0x2B433E0
	0x02B45464 LDR X8, [X20]
	0x02B45468 MOV W1, W0
	0x02B4546C MOV X0, X19

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1897000
	009 Move W8, [X21+1278]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x15AF000
	017 Move X0, [X0+1448]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1278], W8
	021 Move V9, [X19+152]
	022 Move W8, 0xFF800000
	023 Move S0, W8
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 Move X8, [X20+32]
	026 Move X0, X19
	027 Move X8, [X8+192]
	028 Move X1, [X8+16]
	029 Call 0x2843CF4, X0
	030 Compare X0, 0
	031 JumpIfEqual {207}
	032 Move V9, [X0+20]
	033 Add X8, X0, 16
	034 Add X8, X19, 148
	035 Move X9, [X19+16]
	036 Compare X9, 0
	037 JumpIfEqual {207}
	038 Move X0, [X9+1048]
	039 Compare X0, 0
	040 JumpIfEqual {207}
	041 Move V10, [X8]
	042 Move X1, X31
	043 Call VisualElement.get_layout, X0
	044 Move W8, S3
	045 And W9, W8, 0x7FFFFFFF
	046 Move W8, 0x7F800000
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W9, S9
	049 And W9, W9, 0x7FFFFFFF
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, [X19]
	052 Move W21, 2
	053 Move [X19+140], W21
	054 Move X0, X19
	055 Move X9, [X8+520]
	056 Move X1, [X8+528]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X8, [X20+32]
	059 Move X0, X19
	060 Move V8, V0
	061 Move X8, [X8+192]
	062 Move X1, [X8+152]
	063 Call 0x2B4427C, X0
	064 Move X8, [X20+32]
	065 NotImplemented "Instruction FCMP not yet implemented."
	066 NotImplemented "Instruction FCSEL not yet implemented."
	067 Move X0, X19
	068 Move X8, [X8+192]
	069 Move X1, [X8+144]
	070 Call 0x2B442A8, X0, V0
	071 Move X8, [X20+32]
	072 Move X0, X19
	073 Move X8, [X8+192]
	074 Move X1, [X8+16]
	075 Call 0x2843CF4, X0
	076 Compare X0, 0
	077 JumpIfEqual {207}
	078 Move V0, [X0+20]
	079 Move X0, X19
	080 NotImplemented "Instruction FCMP not yet implemented."
	081 NotImplemented "Instruction CSINC not yet implemented."
	082 Move [X19+144], W8
	083 Move X8, [X20+32]
	084 Move X8, [X8+192]
	085 Move X1, [X8+152]
	086 Call 0x2B4427C, X0
	087 Move X8, [X19+16]
	088 Compare X8, 0
	089 JumpIfEqual {207}
	090 Move X0, [X8+1048]
	091 Compare X0, 0
	092 JumpIfEqual {207}
	093 Move X1, X31
	094 Move V8, V0
	095 Call VisualElement.get_layout, X0
	096 Subtract S0, S8, S3
	097 Move S1, W31
	098 NotImplemented "Instruction FCMP not yet implemented."
	099 NotImplemented "Instruction FMAX not yet implemented."
	100 Move [X19+128], W31
	101 NotImplemented "Instruction FCMP not yet implemented."
	102 Move X8, [X19+16]
	103 Compare X8, 0
	104 JumpIfEqual {207}
	105 Move X0, [X8+1064]
	106 Compare X0, 0
	107 JumpIfEqual {207}
	108 Move X1, X31
	109 Call Scroller.get_highValue, X0
	110 Move X8, 0x15AF000
	111 Move X8, [X8+1448]
	112 Move V8, V0
	113 Move X0, [X8]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move W8, 1
	119 NotImplemented "Instruction FABD not yet implemented."
	120 Move S1, W8
	121 NotImplemented "Instruction FCMP not yet implemented."
	122 NotImplemented "Instruction CSET not yet implemented."
	123 Move W8, W31
	124 Move [X19+136], W8
	125 Move X8, [X20+32]
	126 Move X0, X19
	127 Move X8, [X8+192]
	128 Move X1, [X8+16]
	129 Call 0x2843CF4, X0
	130 Compare X0, 0
	131 JumpIfEqual {207}
	132 Move [X0+16], S10
	133 Move [X0+24], S9
	134 Move X0, [X19+32]
	135 Compare X0, 0
	136 JumpIfEqual {207}
	137 Move X1, X31
	138 Call VisualElement.SaveViewData, X0
	139 Move W21, [X19+128]
	140 Add W31, W21, 1
	141 Move X8, [X20+32]
	142 Move X0, X19
	143 Move X8, [X8+192]
	144 Move X1, [X8+16]
	145 Call 0x2843CF4, X0
	146 Compare X0, 0
	147 JumpIfEqual {207}
	148 Move V0, [X0+20]
	149 Move X0, X19
	150 Call 0x2B471C8, X0, V0
	151 Move W21, W0
	152 Move X8, [X20+32]
	153 Subtract W1, W21, 1
	154 Move X0, X19
	155 Move X8, [X8+192]
	156 Move X2, [X8+176]
	157 Call 0x2B472D8, X0, X1
	158 Move X8, [X20+32]
	159 Move X0, X19
	160 Move X8, [X8+192]
	161 Move X1, [X8+272]
	162 Call 0x2B44144, X0, V0
	163 Move X8, [X19]
	164 Move TEMP, 0
	165 Not TEMP
	166 Move W9, TEMP
	167 Move [X19+128], W9
	168 Move X0, X19
	169 Move X9, [X8+376]
	170 Move X1, [X8+384]
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X8, [X20+32]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X8, [X8+192]
	175 Move X1, [X8+56]
	176 Move X0, X19
	177 Call 0x2B45C14, X0
	178 Move X2, [X8+280]
	179 Move X0, X19
	180 Move W1, W21
	181 Call 0x2B45470, X0, X1
	182 Move X0, X19
	183 Call 0x2B46EB8, X0
	184 Move X20, 0x1897000
	185 Move W8, [X20+1296]
	186 Compare W8, 0
	187 JumpIfNotEqual {193}
	188 Move X0, 0x15B7000
	189 Move X0, [X0+3848]
	190 Call 0x1C17CF4
	191 Move W8, 1
	192 Move [X20+1296], W8
	193 Move X8, 0x15B7000
	194 Move X8, [X8+3848]
	195 Move X8, [X8]
	196 Move X8, [X8+184]
	197 Move V0, [X8+56]
	198 Move [X19+148], D0
	199 Move X20, [X31+48]
	200 Move X19, [X31+56]
	201 Move X30, [X31+32]
	202 Move X21, [X31+40]
	203 Move D9, [X31+16]
	204 Move D8, [X31+24]
	205 Move V10, [X31+64]
	206 Return 
	207 Call 0x1C17F20

Method: System.Void CycleItems(System.Int32 firstIndex)

Disassembly:
	0x02B45470 LDR X8, [X8 + 0xC0]
	0x02B45474 LDR X2, [X8 + 0x118]
	0x02B45478 BL 0x2B44470
	0x02B4547C MOV X0, X19
	0x02B45480 BL 0x2B45B70
	0x02B45484 LDR X8, [X20]
	0x02B45488 MOV X0, X19
	0x02B4548C LDR X8, [X8 + 0xC0]
	0x02B45490 LDR X1, [X8 + 0x180]
	0x02B45494 BL 0x2B433E0
	0x02B45498 LDR X8, [X19]
	0x02B4549C MOV W1, W0
	0x02B454A0 MOV X0, X19
	0x02B454A4 LDP X9, X2, [X8 + 0x188]
	0x02B454A8 BLR X9
	0x02B454AC LDR X8, [X20]
	0x02B454B0 MOV X0, X19
	0x02B454B4 LDR X8, [X8 + 0xC0]
	0x02B454B8 LDR X1, [X8 + 0x198]
	0x02B454BC BL 0x2B43454
	0x02B454C0 MOV V9.16B, V0.16B
	0x02B454C4 B 0x2B454CC
	0x02B454C8 FSUB S9, S9, S8
	0x02B454CC LDR X8, [X19]
	0x02B454D0 MOV X0, X19
	0x02B454D4 LDR X9, [X8 + 0x208]
	0x02B454D8 LDR X1, [X8 + 0x210]
	0x02B454DC BLR X9
	0x02B454E0 LDR X8, [X20]
	0x02B454E4 MOV X0, X19
	0x02B454E8 MOV V8.16B, V0.16B
	0x02B454EC LDR X8, [X8 + 0xC0]
	0x02B454F0 LDR X1, [X8 + 0x90]
	0x02B454F4 BL 0x2B432A8
	0x02B454F8 LDR X8, [X19]
	0x02B454FC MOV X0, X19
	0x02B45500 LDP X9, X1, [X8 + 0x178]
	0x02B45504 BLR X9
	0x02B45508 LDR X8, [X20]
	0x02B4550C SUB W1, W0, 0x1
	0x02B45510 MOV X0, X19
	0x02B45514 LDR X8, [X8 + 0xC0]
	0x02B45518 LDR X2, [X8 + 0xB0]
	0x02B4551C BL 0x2B462D8
	0x02B45520 LDR X8, [X20]
	0x02B45524 MOV X0, X19
	0x02B45528 LDR X8, [X8 + 0xC0]
	0x02B4552C LDR X1, [X8 + 0x110]
	0x02B45530 BL 0x2B43144
	0x02B45534 LDR X8, [X19 + 0x10]
	0x02B45538 CBZ X8, 0x2B45AD8
	0x02B4553C LDR X0, [X8 + 0x418]
	0x02B45540 CBZ X0, 0x2B45AD8
	0x02B45544 MOV X1, X31
	0x02B45548 BL 0x3DEC528
	0x02B4554C LDR X8, [X20]
	0x02B45550 FSUB S0, S8, S3
	0x02B45554 FMOV S1, W31
	0x02B45558 MOV X0, X19
	0x02B4555C LDR X8, [X8 + 0xC0]
	0x02B45560 FMAX S8, S0, S1
	0x02B45564 LDR X1, [X8 + 0xB8]
	0x02B45568 BL 0x2B43118
	0x02B4556C FCMP S8, 0x0
	0x02B45570 B.LE 0x2B45580
	0x02B45574 LDRB W8, [X19 + 0x88]
	0x02B45578 MOV V10.16B, V8.16B
	0x02B4557C CBNZ W8, 0x2B455FC
	0x02B45580 LDR W1, [X19 + 0x84]
	0x02B45584 FADD S0, S9, S0
	0x02B45588 FCMP S0, S8
	0x02B4558C FCSEL S10, S0, S8, MI
	0x02B45590 ADDS W31, W1, 0x1
	0x02B45594 B.EQ 0x2B455FC
	0x02B45598 LDR X8, [X20]
	0x02B4559C MOV X0, X19
	0x02B455A0 LDR X8, [X8 + 0xC0]
	0x02B455A4 LDR X2, [X8 + 0xB0]
	0x02B455A8 BL 0x2B462D8
	0x02B455AC ADRP X22, 0x15D8000
	0x02B455B0 LDR X22, [X22 + 0xF18]
	0x02B455B4 MOV V9.16B, V0.16B
	0x02B455B8 LDR X0, [X22]
	0x02B455BC LDR W8, [X0 + 0xE0]
	0x02B455C0 CBNZ W8, 0x2B455CC
	0x02B455C4 BL 0x1C16DFC
	0x02B455C8 LDR X0, [X22]
	0x02B455CC LDR X8, [X19 + 0x10]
	0x02B455D0 CBZ X8, 0x2B45AD8
	0x02B455D4 LDR X8, [X8 + 0x418]
	0x02B455D8 CBZ X8, 0x2B45AD8
	0x02B455DC LDR X9, [X0 + 0xB8]
	0x02B455E0 MOV X0, X8
	0x02B455E4 MOV X1, X31
	0x02B455E8 LDR W22, [X9 + 0x18]
	0x02B455EC BL 0x3DEC528
	0x02B455F0 SCVTF S0, W22
	0x02B455F4 FADD S0, S9, S0
	0x02B455F8 FSUB S10, S0, S3
	0x02B455FC LDR X8, [X19 + 0x10]
	0x02B45600 CBZ X8, 0x2B45AD8
	0x02B45604 LDR X8, [X8 + 0x428]
	0x02B45608 CBZ X8, 0x2B45AD8
	0x02B4560C LDR X0, [X8 + 0x3D0]
	0x02B45610 CBZ X0, 0x2B45AD8
	0x02B45614 ADRP X8, 0x15D9000
	0x02B45618 LDR X8, [X8 + 0xAA8]
	0x02B4561C MOV V0.16B, V8.16B
	0x02B45620 LDR X1, [X8]
	0x02B45624 BL 0x28BF64C
	0x02B45628 LDR X8, [X19 + 0x10]
	0x02B4562C CBZ X8, 0x2B45AD8
	0x02B45630 LDR X8, [X8 + 0x428]
	0x02B45634 CBZ X8, 0x2B45AD8
	0x02B45638 LDR X0, [X8 + 0x3D0]
	0x02B4563C CBZ X0, 0x2B45AD8
	0x02B45640 LDR X8, [X0]
	0x02B45644 MOV V0.16B, V10.16B
	0x02B45648 LDR X9, [X8 + 0x888]
	0x02B4564C LDR X1, [X8 + 0x890]
	0x02B45650 BLR X9
	0x02B45654 LDR X8, [X20]
	0x02B45658 MOV X0, X19
	0x02B4565C LDR X8, [X8 + 0xC0]
	0x02B45660 LDR X1, [X8 + 0x10]
	0x02B45664 BL 0x2842CF4
	0x02B45668 CBZ X0, 0x2B45AD8
	0x02B4566C LDR X8, [X19 + 0x10]
	0x02B45670 CBZ X8, 0x2B45AD8
	0x02B45674 LDR X8, [X8 + 0x428]
	0x02B45678 CBZ X8, 0x2B45AD8
	0x02B4567C MOV X22, X0
	0x02B45680 LDR X0, [X8 + 0x3D0]
	0x02B45684 CBZ X0, 0x2B45AD8
	0x02B45688 LDR X8, [X0]
	0x02B4568C LDR X9, [X8 + 0x7E8]
	0x02B45690 LDR X1, [X8 + 0x7F0]
	0x02B45694 BLR X9
	0x02B45698 STR S0, [X22 + 0x14]
	0x02B4569C TBNZ X21, 0x0, 0x2B456AC
	0x02B456A0 LDR W8, [X19 + 0x8C]
	0x02B456A4 CMP W8, 0x1
	0x02B456A8 B.NE 0x2B456D4
	0x02B456AC MOV X0, X19
	0x02B456B0 LDP X20, X19, [X31 + 0x70]
	0x02B456B4 LDP X22, X21, [X31 + 0x60]
	0x02B456B8 LDP X24, X23, [X31 + 0x50]
	0x02B456BC LDP X26, X25, [X31 + 0x40]
	0x02B456C0 LDP X28, X27, [X31 + 0x30]
	0x02B456C4 LDP X29, X30, [X31 + 0x20]
	0x02B456C8 LDP D9, D8, [X31 + 0x10]
	0x02B456CC LDR V10, [X31], #0x80
	0x02B456D0 B 0x2B45EB8
	0x02B456D4 LDR X8, [X20]
	0x02B456D8 MOV X0, X19
	0x02B456DC LDR X8, [X8 + 0xC0]
	0x02B456E0 LDR X1, [X8 + 0x1A0]
	0x02B456E4 BL 0x2B44AA0
	0x02B456E8 LDR X8, [X20]
	0x02B456EC LDR X8, [X8 + 0xC0]
	0x02B456F0 TBZ X0, 0x0, 0x2B45720
	0x02B456F4 LDR X1, [X8 + 0x38]
	0x02B456F8 MOV X0, X19
	0x02B456FC LDP X20, X19, [X31 + 0x70]
	0x02B45700 LDP X22, X21, [X31 + 0x60]
	0x02B45704 LDP X24, X23, [X31 + 0x50]
	0x02B45708 LDP X26, X25, [X31 + 0x40]
	0x02B4570C LDP X28, X27, [X31 + 0x30]
	0x02B45710 LDP X29, X30, [X31 + 0x20]
	0x02B45714 LDP D9, D8, [X31 + 0x10]
	0x02B45718 LDR V10, [X31], #0x80
	0x02B4571C B 0x2B44C14
	0x02B45720 LDR X1, [X8 + 0xB8]
	0x02B45724 MOV X0, X19
	0x02B45728 BL 0x2B43118
	0x02B4572C LDR X8, [X19]
	0x02B45730 MOV X0, X19
	0x02B45734 MOV V8.16B, V0.16B
	0x02B45738 LDP X9, X1, [X8 + 0x178]
	0x02B4573C BLR X9
	0x02B45740 LDR X8, [X19 + 0x28]
	0x02B45744 STR W0, [X31 + 0xC]
	0x02B45748 CBZ X8, 0x2B45AD8
	0x02B4574C ADRP X28, 0x15D7000
	0x02B45750 ADRP X29, 0x15D8000
	0x02B45754 ADRP X21, 0x15D8000
	0x02B45758 LDR X22, [X19 + 0x50]
	0x02B4575C LDR X28, [X28 + 0x128]
	0x02B45760 LDR X29, [X29 + 0xF10]
	0x02B45764 LDR X21, [X21 + 0xF08]
	0x02B45768 MOV W23, W31
	0x02B4576C MOV W24, W31
	0x02B45770 LDR W9, [X8 + 0x18]
	0x02B45774 CMP W24, W9
	0x02B45778 B.GE 0x2B459C8
	0x02B4577C LDR X9, [X20]
	0x02B45780 MOV X0, X8
	0x02B45784 MOV W1, W24
	0x02B45788 LDR X9, [X9 + 0xC0]
	0x02B4578C LDR X2, [X9 + 0x128]
	0x02B45790 BL 0x301BCCC
	0x02B45794 CBZ X0, 0x2B45AD8
	0x02B45798 LDR W25, [X0 + 0x20]
	0x02B4579C MOV X26, X0
	0x02B457A0 TBNZ X25, 0x1F, 0x2B459C0
	0x02B457A4 LDR X8, [X19]
	0x02B457A8 MOV X0, X19
	0x02B457AC MOV W1, W25
	0x02B457B0 LDP X9, X2, [X8 + 0x1F8]
	0x02B457B4 BLR X9
	0x02B457B8 LDR X0, [X19 + 0x28]
	0x02B457BC CBZ X0, 0x2B45AD8
	0x02B457C0 LDR X8, [X20]
	0x02B457C4 MOV W1, W24
	0x02B457C8 MOV V9.16B, V0.16B
	0x02B457CC LDR X8, [X8 + 0xC0]
	0x02B457D0 LDR X2, [X8 + 0x128]
	0x02B457D4 BL 0x301BCCC
	0x02B457D8 CBZ X0, 0x2B45AD8
	0x02B457DC LDR X8, [X0]
	0x02B457E0 LDP X9, X1, [X8 + 0x178]
	0x02B457E4 BLR X9
	0x02B457E8 CBZ X0, 0x2B45AD8
	0x02B457EC MOV X1, X31
	0x02B457F0 BL 0x3DE7EEC
	0x02B457F4 CBZ X0, 0x2B45AD8
	0x02B457F8 LDR X8, [X0]
	0x02B457FC LDR X1, [X28]
	0x02B45800 MOV X27, X0
	0x02B45804 LDRH W9, [X8 + 0x12E]
	0x02B45808 CBZ X9, 0x2B4582C
	0x02B4580C LDR X10, [X8 + 0xB0]
	0x02B45810 ADD X10, X10, 0x8
	0x02B45814 LDUR X11, [X10 - 0x8]
	0x02B45818 CMP X11, X1
	0x02B4581C B.EQ 0x2B4583C
	0x02B45820 SUBS X9, X9, 0x1
	0x02B45824 ADD X10, X10, 0x10
	0x02B45828 B.NE 0x2B45814
	0x02B4582C MOVZ W2, 0x11
	0x02B45830 MOV X0, X27
	0x02B45834 BL 0x1C5C788
	0x02B45838 B 0x2B4584C
	0x02B4583C LDR W9, [X10]
	0x02B45840 ADD W9, W9, 0x11
	0x02B45844 ADD X8, X8, W9, 0x4, SXTW
	0x02B45848 ADD X0, X8, 0x138
	0x02B4584C LDP X8, X1, [X0]
	0x02B45850 MOV X0, X27
	0x02B45854 BLR X8
	0x02B45858 LDR X1, [X29]
	0x02B4585C MOV X27, X0
	0x02B45860 MOV W0, W31
	0x02B45864 BL 0x266EACC
	0x02B45868 LDR X2, [X21]
	0x02B4586C MOV X1, X0
	0x02B45870 MOV X0, X27
	0x02B45874 BL 0x266E9D0
	0x02B45878 TBZ X0, 0x0, 0x2B45998
	0x02B4587C LDR X8, [X20]
	0x02B45880 MOV X0, X19
	0x02B45884 LDR X8, [X8 + 0xC0]
	0x02B45888 LDR X1, [X8 + 0x10]
	0x02B4588C BL 0x2842CF4
	0x02B45890 CBZ X0, 0x2B45AD8
	0x02B45894 LDR V0, [X0 + 0x14]
	0x02B45898 FADD S1, S8, S9
	0x02B4589C FCMP S1, S0
	0x02B458A0 B.LS 0x2B458DC
	0x02B458A4 LDR X8, [X20]
	0x02B458A8 MOV X0, X19
	0x02B458AC LDR X8, [X8 + 0xC0]
	0x02B458B0 LDR X1, [X8 + 0x170]
	0x02B458B4 BL 0x2B434C8
	0x02B458B8 FCMP S8, S0
	0x02B458BC B.LE 0x2B45998
	0x02B458C0 LDR X8, [X20]
	0x02B458C4 MOV X0, X19
	0x02B458C8 MOV W1, W24
	0x02B458CC LDR X8, [X8 + 0xC0]
	0x02B458D0 LDR X2, [X8 + 0xE0]
	0x02B458D4 BL 0x2B4773C
	0x02B458D8 B 0x2B45998
	0x02B458DC LDR X8, [X26]
	0x02B458E0 MOV X0, X26
	0x02B458E4 LDP X9, X1, [X8 + 0x178]
	0x02B458E8 BLR X9
	0x02B458EC CBZ X0, 0x2B45AD8
	0x02B458F0 MOV X1, X31
	0x02B458F4 BL 0x3DF6758
	0x02B458F8 LDR X8, [X20]
	0x02B458FC MOV X0, X19
	0x02B45900 MOV W1, W24
	0x02B45904 LDR X8, [X8 + 0xC0]
	0x02B45908 LDR X2, [X8 + 0xE0]
	0x02B4590C BL 0x2B4773C
	0x02B45910 CBZ X22, 0x2B45AD8
	0x02B45914 LDR X8, [X20]
	0x02B45918 LDR W10, [X22 + 0x1C]
	0x02B4591C LDR X9, [X8 + 0xC0]
	0x02B45920 LDR X8, [X22 + 0x10]
	0x02B45924 ADD W10, W10, 0x1
	0x02B45928 LDR X9, [X9 + 0x158]
	0x02B4592C STR W10, [X22 + 0x1C]
	0x02B45930 CBZ X8, 0x2B45AD8
	0x02B45934 LDRSW X10, [X22 + 0x18]
	0x02B45938 LDR W11, [X8 + 0x18]
	0x02B4593C CMP W10, W11
	0x02B45940 B.CS 0x2B45958
	0x02B45944 ADD W9, W10, 0x1
	0x02B45948 ADD X8, X8, X10, 0x3, LSL
	0x02B4594C STR W9, [X22 + 0x18]
	0x02B45950 STR X26, [X8 + 0x20]
	0x02B45954 B 0x2B45970
	0x02B45958 LDR X8, [X9 + 0x20]
	0x02B4595C MOV X0, X22
	0x02B45960 MOV X1, X26
	0x02B45964 LDR X8, [X8 + 0xC0]
	0x02B45968 LDR X2, [X8 + 0x70]
	0x02B4596C BL 0x301BF90
	0x02B45970 LDR X8, [X19]
	0x02B45974 MOV X0, X19
	0x02B45978 ADD W23, W23, 0x1
	0x02B4597C LDP X9, X1, [X8 + 0x178]
	0x02B45980 BLR X9
	0x02B45984 LDR X8, [X19]
	0x02B45988 ADD W1, W0, 0x1
	0x02B4598C MOV X0, X19
	0x02B45990 LDP X9, X2, [X8 + 0x188]
	0x02B45994 BLR X9
	0x02B45998 LDR X8, [X19]
	0x02B4599C MOV X0, X19
	0x02B459A0 MOV W1, W25
	0x02B459A4 LDP X9, X2, [X8 + 0x1F8]
	0x02B459A8 BLR X9
	0x02B459AC LDR X8, [X19 + 0x28]
	0x02B459B0 FADD S8, S8, S0
	0x02B459B4 ADD W24, W24, 0x1
	0x02B459B8 CBNZ X8, 0x2B45770
	0x02B459BC B 0x2B45AD8
	0x02B459C0 LDR X8, [X19 + 0x28]
	0x02B459C4 CBZ X8, 0x2B45AD8
	0x02B459C8 LDR X9, [X20]
	0x02B459CC MOV X0, X8
	0x02B459D0 MOV W1, W31
	0x02B459D4 MOV W2, W23
	0x02B459D8 LDR X9, [X9 + 0xC0]
	0x02B459DC LDR X3, [X9 + 0x160]
	0x02B459E0 BL 0x301DAD8
	0x02B459E4 LDR X0, [X19 + 0x28]
	0x02B459E8 CBZ X0, 0x2B45AD8
	0x02B459EC LDR X8, [X20]
	0x02B459F0 MOV X1, X22
	0x02B459F4 LDR X8, [X8 + 0xC0]
	0x02B459F8 LDR X2, [X8 + 0x168]
	0x02B459FC BL 0x301C194
	0x02B45A00 LDR X8, [X19 + 0x50]
	0x02B45A04 CBZ X8, 0x2B45AD8
	0x02B45A08 LDP W2, W9, [X8 + 0x18]
	0x02B45A0C ADD W9, W9, 0x1
	0x02B45A10 CMP W2, 0x1
	0x02B45A14 STP W31, W9, [X8 + 0x18]
	0x02B45A18 B.LT 0x2B45A2C
	0x02B45A1C LDR X0, [X8 + 0x10]
	0x02B45A20 MOV W1, W31
	0x02B45A24 MOV X3, X31
	0x02B45A28 BL 0x339FA34
	0x02B45A2C LDR X8, [X19]
	0x02B45A30 MOV X0, X19
	0x02B45A34 LDP X9, X1, [X8 + 0x178]
	0x02B45A38 BLR X9
	0x02B45A3C LDR W8, [X31 + 0xC]
	0x02B45A40 CMP W0, W8
	0x02B45A44 B.EQ 0x2B45A98
	0x02B45A48 LDR X8, [X19]
	0x02B45A4C MOV X0, X19
	0x02B45A50 LDP X9, X1, [X8 + 0x178]
	0x02B45A54 BLR X9
	0x02B45A58 LDR X8, [X20]
	0x02B45A5C SUB W1, W0, 0x1
	0x02B45A60 MOV X0, X19
	0x02B45A64 LDR X8, [X8 + 0xC0]
	0x02B45A68 LDR X2, [X8 + 0xB0]
	0x02B45A6C BL 0x2B462D8
	0x02B45A70 LDR X8, [X20]
	0x02B45A74 MOV X0, X19
	0x02B45A78 LDR X8, [X8 + 0xC0]
	0x02B45A7C LDR X1, [X8 + 0x110]
	0x02B45A80 BL 0x2B43144
	0x02B45A84 LDR X8, [X20]
	0x02B45A88 MOV X0, X19
	0x02B45A8C LDR X8, [X8 + 0xC0]
	0x02B45A90 LDR X1, [X8 + 0x178]
	0x02B45A94 BL 0x2B45ADC
	0x02B45A98 MOV X0, X19
	0x02B45A9C BL 0x2B45EB8

ISIL:
	001 Move [X31-112], D8
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x1897000
	015 Move W8, [X21+1279]
	016 Move X20, X2
	017 Move W22, W1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x15BC000
	024 Move X0, [X0+1440]
	025 Call 0x1C17CF4
	026 Move X0, 0x15D8000
	027 Move X0, [X0+296]
	028 Call 0x1C17CF4
	029 Move X0, 0x15D9000
	030 Move X0, [X0+3848]
	031 Call 0x1C17CF4
	032 Move X0, 0x15D9000
	033 Move X0, [X0+3856]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+1279], W8
	037 Compare X19, 0
	038 JumpIfEqual {424}
	039 Move X8, [X19]
	040 Move X0, X19
	041 Move X9, [X8+376]
	042 Move X1, [X8+384]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X20, [X31+96]
	046 Move X19, [X31+104]
	047 Move X22, [X31+80]
	048 Move X21, [X31+88]
	049 Move X24, [X31+64]
	050 Move X23, [X31+72]
	051 Move X26, [X31+48]
	052 Move X25, [X31+56]
	053 Move X28, [X31+32]
	054 Move X27, [X31+40]
	055 Move X29, [X31+16]
	056 Move X30, [X31+24]
	057 Move V8, [X31+112]
	058 Return 
	059 Move X8, [X20+32]
	060 Move X0, X19
	061 Move X8, [X8+192]
	062 Move X1, [X8+288]
	063 Call 0x2843CA0, X0
	064 Move X8, [X20+32]
	065 Move X21, X0
	066 Subtract W1, W22, 1
	067 Move X0, X19
	068 Move X8, [X8+192]
	069 Move X2, [X8+176]
	070 Call 0x2B472D8, X0, X1
	071 Move X8, [X20+32]
	072 Move X0, X19
	073 Move X8, [X8+192]
	074 Move X1, [X8+272]
	075 Call 0x2B44144, X0, V0
	076 Move X8, [X19]
	077 Move X0, X19
	078 Move W1, W22
	079 Move X9, [X8+392]
	080 Move X2, [X8+400]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X8, [X19+40]
	083 Compare X8, 0
	084 JumpIfEqual {424}
	085 Move W23, [X8+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Compare X21, 0
	088 JumpIfEqual {284}
	089 Move X8, [X19]
	090 Move X0, X19
	091 Move X9, [X8+376]
	092 Move X1, [X8+384]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X25, 0x1897000
	095 Move W8, [X25+1297]
	096 Move W24, [X21+32]
	097 Move W22, W0
	098 Compare W8, 0
	099 JumpIfNotEqual {105}
	100 Move X0, 0x15AF000
	101 Move X0, [X0+1448]
	102 Call 0x1C17CF4
	103 Move W8, 1
	104 Move [X25+1297], W8
	105 Move X8, 0x15AF000
	106 Move X8, [X8+1448]
	107 Subtract W22, W22, W24
	108 Move X0, [X8]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CSNEG not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X8, [X19]
	117 Move X0, X19
	118 Move X9, [X8+376]
	119 Move X1, [X8+384]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move W22, [X21+32]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X8, [X19]
	124 Move X0, X19
	125 Move X9, [X8+376]
	126 Move X1, [X8+384]
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X8, [X19+40]
	129 Compare X8, 0
	130 JumpIfEqual {424}
	131 Move X21, [X19+80]
	132 Subtract W9, W22, W0
	133 NotImplemented "Instruction BIC not yet implemented."
	134 Add W23, W9, 1
	135 Subtract W23, W23, 1
	136 Move X9, [X20+32]
	137 Move W10, [X8+24]
	138 Move X0, X8
	139 Move X9, [X9+192]
	140 Subtract W1, W10, 1
	141 Move X2, [X9+296]
	142 Call List`1<Object>.get_Item, X0, X1
	143 Compare X21, 0
	144 JumpIfEqual {424}
	145 Move X8, [X20+32]
	146 Move X22, X0
	147 Move X0, X21
	148 Move W1, W31
	149 Move X8, [X8+192]
	150 Move X2, X22
	151 Move X3, [X8+304]
	152 Call List`1<Object>.Insert, X0, X1, X2
	153 Move X0, [X19+40]
	154 Compare X0, 0
	155 JumpIfEqual {424}
	156 Move X8, [X20+32]
	157 Move W9, [X0+24]
	158 Move X8, [X8+192]
	159 Subtract W1, W9, 1
	160 Move X2, [X8+312]
	161 Call List`1<Object>.RemoveAt, X0, X1
	162 Compare X22, 0
	163 JumpIfEqual {424}
	164 Move X8, [X22]
	165 Move X0, X22
	166 Move X9, [X8+376]
	167 Move X1, [X8+384]
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Compare X0, 0
	170 JumpIfEqual {424}
	171 Move X1, X31
	172 Call VisualElement.SendToBack, X0
	173 Move X8, [X19+40]
	174 Compare X8, 0
	175 JumpIfNotEqual {135}
	176 Move X8, [X19]
	177 Move X21, [X19+80]
	178 Move X0, X19
	179 Move X9, [X8+376]
	180 Move X1, [X8+384]
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Move X8, [X19+40]
	183 Compare X8, 0
	184 JumpIfEqual {424}
	185 Move W23, W0
	186 Move W22, W31
	187 Move X9, [X20+32]
	188 Move X0, X8
	189 Move W1, W22
	190 Move X9, [X9+192]
	191 Move X2, [X9+296]
	192 Call List`1<Object>.get_Item, X0, X1
	193 Compare X0, 0
	194 JumpIfEqual {424}
	195 Move X8, X0
	196 Move X0, [X19+40]
	197 Compare X0, 0
	198 JumpIfEqual {424}
	199 Move X9, [X20+32]
	200 Move W10, [X8+32]
	201 Move X8, [X9+192]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X2, [X8+296]
	204 Move W1, W22
	205 Call List`1<Object>.get_Item, X0, X1
	206 Compare X21, 0
	207 JumpIfEqual {424}
	208 Move X8, [X20+32]
	209 Move W10, [X21+28]
	210 Move X9, [X8+192]
	211 Move X8, [X21+16]
	212 Add W10, W10, 1
	213 Move X9, [X9+344]
	214 Move [X21+28], W10
	215 Compare X8, 0
	216 JumpIfEqual {424}
	217 NotImplemented "Instruction LDRSW not yet implemented."
	218 Move W11, [X8+24]
	219 Move X23, X0
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Add W9, W10, 1
	222 Add X8, X8, X10
	223 Move [X21+24], W9
	224 Move [X8+32], X23
	225 Move X8, [X9+32]
	226 Move X0, X21
	227 Move X1, X23
	228 Move X8, [X8+192]
	229 Move X2, [X8+112]
	230 Call List`1<Object>.AddWithResize, X0, X1
	231 Compare X23, 0
	232 JumpIfEqual {424}
	233 Move X8, [X23]
	234 Move X0, X23
	235 Move X9, [X8+376]
	236 Move X1, [X8+384]
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Compare X0, 0
	239 JumpIfEqual {424}
	240 Move X1, X31
	241 Add W22, W22, 1
	242 Call VisualElement.BringToFront, X0
	243 Move X8, [X19]
	244 Move X0, X19
	245 Move X9, [X8+376]
	246 Move X1, [X8+384]
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Move X8, [X19+40]
	249 Move W23, W0
	250 Compare X8, 0
	251 JumpIfNotEqual {187}
	252 Move X9, [X20+32]
	253 Move X0, X8
	254 Move W1, W31
	255 Move X2, X21
	256 Move X9, [X9+192]
	257 Move X3, [X9+320]
	258 Call List`1<Object>.InsertRange, X0, X1, X2
	259 Move X3, [X8+352]
	260 Move W1, W31
	261 Move W2, W22
	262 Call List`1<Object>.RemoveRange, X0, X1, X2
	263 Move X0, [X19+40]
	264 Compare X0, 0
	265 JumpIfEqual {424}
	266 Move X8, [X20+32]
	267 Move X1, X21
	268 Move X8, [X8+192]
	269 Move X2, [X8+360]
	270 Call List`1<Object>.AddRange, X0, X1
	271 Move X8, [X19+80]
	272 Compare X8, 0
	273 JumpIfEqual {424}
	274 Move W2, [X8+24]
	275 Move W9, [X8+28]
	276 Add W9, W9, 1
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move [X8+24], W31
	279 Move [X8+28], W9
	280 Move X0, [X8+16]
	281 Move W1, W31
	282 Move X3, X31
	283 Call Array.Clear, X0, X1, X2
	284 Move X8, [X20+32]
	285 Move X0, X19
	286 Move X8, [X8+192]
	287 Move X1, [X8+184]
	288 Call 0x2B44118, X0
	289 Move X0, [X19+40]
	290 Compare X0, 0
	291 JumpIfEqual {424}
	292 Move X26, 0x15D8000
	293 Move X27, 0x15D9000
	294 Move X28, 0x15D9000
	295 Move X29, 0x15BC000
	296 Move X26, [X26+296]
	297 Move X27, [X27+3856]
	298 Move X28, [X28+3848]
	299 Move X29, [X29+1440]
	300 Move V8, V0
	301 Move W21, W31
	302 Move W8, [X0+24]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move X8, [X20+32]
	305 Move W1, W21
	306 Move X8, [X8+192]
	307 Move X2, [X8+296]
	308 Call List`1<Object>.get_Item, X0, X1
	309 Move X8, [X19]
	310 Move X22, X0
	311 Move X0, X19
	312 Move X9, [X8+376]
	313 Move X1, [X8+384]
	314 NotImplemented "Instruction BLR not yet implemented."
	315 Compare X22, 0
	316 JumpIfEqual {424}
	317 Move X8, [X22]
	318 Move W23, [X22+32]
	319 Move W24, W0
	320 Move X0, X22
	321 Move X9, [X8+376]
	322 Move X1, [X8+384]
	323 NotImplemented "Instruction BLR not yet implemented."
	324 Compare X0, 0
	325 JumpIfEqual {424}
	326 Move X1, X31
	327 Call VisualElement.get_style, X0
	328 Compare X0, 0
	329 JumpIfEqual {424}
	330 Move X8, [X0]
	331 Move X1, [X26]
	332 Move X25, X0
	333 NotImplemented "Instruction LDRH not yet implemented."
	334 Compare X9, 0
	335 JumpIfEqual {342}
	336 Move X10, [X8+176]
	337 Add X10, X10, 8
	338 NotImplemented "Instruction LDUR not yet implemented."
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Subtract X9, X9, 1
	341 Add X10, X10, 16
	342 Move W2, 17
	343 Move X0, X25
	344 Call 0x1C5D788
	345 Move W9, [X10]
	346 Add W9, W9, 17
	347 Add X8, X8, W9
	348 Add X0, X8, 312
	349 Move X8, [X0]
	350 Move X1, [X0+8]
	351 Move X0, X25
	352 NotImplemented "Instruction BLR not yet implemented."
	353 Move X1, [X27]
	354 Move X25, X0
	355 Move W0, W31
	356 Call 0x266FACC, X0
	357 Move X2, [X28]
	358 Move X1, X0
	359 Move X0, X25
	360 Call 0x266F9D0, X0, X1
	361 Move X8, [X19+120]
	362 Compare X8, 0
	363 JumpIfEqual {424}
	364 Move X2, [X29]
	365 Move W25, W0
	366 Move X0, X8
	367 Move W1, W23
	368 Add W24, W24, W21
	369 Call HashSet`1<Int32>.Remove, X0, X1
	370 Move X8, [X20+32]
	371 Move X0, X19
	372 Move W1, W24
	373 Move X8, [X8+192]
	374 Move X2, [X8+80]
	375 Call 0x2B48930, X0, X1
	376 Move X8, [X20+32]
	377 Move X8, [X8+192]
	378 Move TEMP, X0
	379 And TEMP, TEMP, 1
	380 Compare TEMP, 1
	381 JumpIfNotEqual {386}
	382 Move X2, [X8+224]
	383 Move X0, X19
	384 Move W1, W21
	385 Call 0x2B4873C, X0, X1
	386 Move X3, [X8+232]
	387 Move X0, X19
	388 Move X1, X22
	389 Move W2, W24
	390 Call 0x28445B8, X0, X1, X2
	391 Move X8, [X20+32]
	392 Move X0, X19
	393 Move X8, [X8+192]
	394 Move X1, [X8+368]
	395 Call 0x2B444C8, X0
	396 NotImplemented "Instruction FCMP not yet implemented."
	397 Move X8, [X20+32]
	398 Move X0, X19
	399 Move W1, W21
	400 Move X8, [X8+192]
	401 Move X2, [X8+224]
	402 Call 0x2B4873C, X0, X1
	403 NotImplemented "Instruction CMP not yet implemented."
	404 NotImplemented "Instruction CSET not yet implemented."
	405 And W8, W8, W25
	406 Move TEMP, X8
	407 And TEMP, TEMP, 1
	408 Compare TEMP, 1
	409 JumpIfEqual {413}
	410 Move X0, X19
	411 Move X1, X22
	412 Call 0x2B4887C, X0, X1
	413 Move X8, [X19]
	414 Move X0, X19
	415 Move W1, W24
	416 Move X9, [X8+504]
	417 Move X2, [X8+512]
	418 NotImplemented "Instruction BLR not yet implemented."
	419 Add S8, S8, S0
	420 Move X0, [X19+40]
	421 Add W21, W21, 1
	422 Compare X0, 0
	423 JumpIfNotEqual {302}
	424 Call 0x1C17F20
	425 Move W8, [X19+140]
	426 NotImplemented "Instruction CMP not yet implemented."
	427 Move X8, [X20+32]
	428 Move X0, X19
	429 Move X8, [X8+192]
	430 Move X1, [X8+376]
	431 Call 0x2B46ADC, X0
	432 Move X0, X19
	433 Move X20, [X31+96]
	434 Move X19, [X31+104]
	435 Move X22, [X31+80]
	436 Move X21, [X31+88]
	437 Move X24, [X31+64]
	438 Move X23, [X31+72]
	439 Move X26, [X31+48]
	440 Move X25, [X31+56]
	441 Move X28, [X31+32]
	442 Move X27, [X31+40]
	443 Move X29, [X31+16]
	444 Move X30, [X31+24]
	445 Move V8, [X31+112]
	446 Call 0x2B46B70, X0
	447 Return 

Method: System.Boolean NeedsFill()

Disassembly:
	0x02B45AA0 LDR X0, [X19 + 0x20]
	0x02B45AA4 MOVN W8, 0x0
	0x02B45AA8 STR W8, [X19 + 0x84]
	0x02B45AAC CBZ X0, 0x2B45AD8
	0x02B45AB0 LDP X20, X19, [X31 + 0x70]
	0x02B45AB4 LDP X22, X21, [X31 + 0x60]
	0x02B45AB8 LDP X24, X23, [X31 + 0x50]
	0x02B45ABC LDP X26, X25, [X31 + 0x40]
	0x02B45AC0 LDP X28, X27, [X31 + 0x30]
	0x02B45AC4 LDP X29, X30, [X31 + 0x20]
	0x02B45AC8 LDP D9, D8, [X31 + 0x10]
	0x02B45ACC MOV X1, X31
	0x02B45AD0 LDR V10, [X31], #0x80
	0x02B45AD4 B 0x3DF276C
	0x02B45AD8 BL 0x1C16F20
	0x02B45ADC STR D8, [X31 - 0x20]!
	0x02B45AE0 STR X30, [X31 + 0x8]
	0x02B45AE4 STP X20, X19, [X31 + 0x10]
	0x02B45AE8 CBZ X0, 0x2B45B6C
	0x02B45AEC LDR X8, [X0]
	0x02B45AF0 MOV X20, X1
	0x02B45AF4 MOV X19, X0
	0x02B45AF8 LDP X9, X1, [X8 + 0x178]
	0x02B45AFC BLR X9
	0x02B45B00 LDR X8, [X20 + 0x20]
	0x02B45B04 MOV W1, W0
	0x02B45B08 MOV X0, X19
	0x02B45B0C LDR X8, [X8 + 0xC0]
	0x02B45B10 LDR X2, [X8 + 0x1A8]
	0x02B45B14 BL 0x2B4340C
	0x02B45B18 LDR X8, [X20 + 0x20]
	0x02B45B1C MOV X0, X19
	0x02B45B20 LDR X8, [X8 + 0xC0]
	0x02B45B24 LDR X1, [X8 + 0x10]
	0x02B45B28 BL 0x2842CF4
	0x02B45B2C CBZ X0, 0x2B45B6C
	0x02B45B30 LDR X8, [X20 + 0x20]
	0x02B45B34 LDR V8, [X0 + 0x14]
	0x02B45B38 MOV X0, X19
	0x02B45B3C LDR X8, [X8 + 0xC0]
	0x02B45B40 LDR X1, [X8 + 0xB8]
	0x02B45B44 BL 0x2B43118
	0x02B45B48 LDR X8, [X20 + 0x20]
	0x02B45B4C MOV X0, X19
	0x02B45B50 LDP X20, X19, [X31 + 0x10]
	0x02B45B54 LDR X30, [X31 + 0x8]
	0x02B45B58 LDR X8, [X8 + 0xC0]
	0x02B45B5C FSUB S0, S8, S0
	0x02B45B60 LDR X1, [X8 + 0x1B0]
	0x02B45B64 LDR V8, [X31], #0x20
	0x02B45B68 B 0x2B43480
	0x02B45B6C BL 0x1C16F20
	0x02B45B70 STP X30, X21, [X31 - 0x20]!
	0x02B45B74 STP X20, X19, [X31 + 0x10]
	0x02B45B78 ADRP X20, 0x1896000
	0x02B45B7C LDRB W8, [X20 + 0x503]
	0x02B45B80 MOV X19, X0
	0x02B45B84 TBNZ X8, 0x0, 0x2B45BA8
	0x02B45B88 ADRP X0, 0x15D9000
	0x02B45B8C LDR X0, [X0 + 0xAB8]
	0x02B45B90 BL 0x1C16CF4
	0x02B45B94 ADRP X0, 0x15D6000
	0x02B45B98 LDR X0, [X0 + 0x680]
	0x02B45B9C BL 0x1C16CF4
	0x02B45BA0 MOVZ W8, 0x1
	0x02B45BA4 STRB W8, [X20 + 0x503]
	0x02B45BA8 LDR X20, [X19 + 0xC8]
	0x02B45BAC CBZ X20, 0x2B45BF8
	0x02B45BB0 ADRP X21, 0x15D9000
	0x02B45BB4 LDR X8, [X20]
	0x02B45BB8 LDR X21, [X21 + 0xAB8]
	0x02B45BBC LDRH W9, [X8 + 0x12E]
	0x02B45BC0 LDR X1, [X21]
	0x02B45BC4 CBZ X9, 0x2B45BE8
	0x02B45BC8 LDR X10, [X8 + 0xB0]
	0x02B45BCC ADD X10, X10, 0x8
	0x02B45BD0 LDUR X11, [X10 - 0x8]
	0x02B45BD4 CMP X11, X1
	0x02B45BD8 B.EQ 0x2B45C5C
	0x02B45BDC SUBS X9, X9, 0x1
	0x02B45BE0 ADD X10, X10, 0x10
	0x02B45BE4 B.NE 0x2B45BD0
	0x02B45BE8 MOVZ W2, 0x1
	0x02B45BEC MOV X0, X20
	0x02B45BF0 BL 0x1C5C788
	0x02B45BF4 B 0x2B45C6C
	0x02B45BF8 LDR X0, [X19 + 0x20]
	0x02B45BFC CBZ X0, 0x2B45D10
	0x02B45C00 MOV X1, X31
	0x02B45C04 BL 0x3DF7724
	0x02B45C08 CBZ X0, 0x2B45D10
	0x02B45C0C ADRP X10, 0x15D6000
	0x02B45C10 LDR X8, [X0]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W8, [X0+140]
	008 Compare W8, 0
	009 JumpIfEqual {18}
	010 Move W0, W31
	011 Move X20, [X31+32]
	012 Move X19, [X31+40]
	013 Move X22, [X31+16]
	014 Move X21, [X31+24]
	015 Move X30, [X31+8]
	016 Move V8, [X31+48]
	017 Return X0
	018 Move X8, [X1+32]
	019 Move X20, X1
	020 Move X19, X0
	021 Move X8, [X8+192]
	022 Move X1, [X8+384]
	023 Call 0x2B443E0, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {10}
	028 Move X8, [X20+32]
	029 Move X0, X19
	030 Move X8, [X8+192]
	031 Move X1, [X8+392]
	032 Call 0x2843CBC, X0
	033 Compare X0, 0
	034 JumpIfEqual {36}
	035 Move W22, [X0+32]
	036 Move TEMP, 0
	037 Not TEMP
	038 Move W22, TEMP
	039 Move X8, [X20+32]
	040 Move X0, X19
	041 Move X8, [X8+192]
	042 Move X1, [X8+184]
	043 Call 0x2B44118, X0
	044 Move X8, [X20+32]
	045 Move X0, X19
	046 Move V8, V0
	047 Move X8, [X8+192]
	048 Move X1, [X8+16]
	049 Call 0x2843CF4, X0
	050 Compare X0, 0
	051 JumpIfEqual {97}
	052 Move V0, [X0+20]
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 Move X8, [X19]
	055 Move X0, X19
	056 Move X9, [X8+376]
	057 Move X1, [X8+384]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X20+32]
	060 Move W21, W0
	061 Move X0, X19
	062 Move X8, [X8+192]
	063 Move X1, [X8+168]
	064 Call 0x2843AE0, X0
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X8, [X20+32]
	067 Move X0, X19
	068 Move X8, [X8+192]
	069 Move X1, [X8+368]
	070 Call 0x2B444C8, X0
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 Move X8, [X20+32]
	073 Move X0, X19
	074 Move X8, [X8+192]
	075 Move X1, [X8+368]
	076 Call 0x2B444C8, X0
	077 NotImplemented "Instruction FCMP not yet implemented."
	078 Move W8, [X19+136]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X8, [X19]
	081 Move X0, X19
	082 Move W1, W21
	083 Move X9, [X8+504]
	084 Move X2, [X8+512]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, [X20+32]
	088 Move X0, X19
	089 Add S8, S8, S0
	090 Add W21, W21, 1
	091 Move X8, [X8+192]
	092 Move X1, [X8+168]
	093 Call 0x2843AE0, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move W0, W31
	096 Move W0, 1
	097 Call 0x1C17F20

Method: System.Void Fill()

Disassembly:
	0x02B45C14 LDR X21, [X19 + 0xA8]
	0x02B45C18 LDR X10, [X10 + 0x680]
	0x02B45C1C MOV X20, X0
	0x02B45C20 LDRH W9, [X8 + 0x12E]
	0x02B45C24 LDR X1, [X10]
	0x02B45C28 CBZ X9, 0x2B45C4C
	0x02B45C2C LDR X10, [X8 + 0xB0]
	0x02B45C30 ADD X10, X10, 0x8
	0x02B45C34 LDUR X11, [X10 - 0x8]
	0x02B45C38 CMP X11, X1
	0x02B45C3C B.EQ 0x2B45CE0
	0x02B45C40 SUBS X9, X9, 0x1
	0x02B45C44 ADD X10, X10, 0x10
	0x02B45C48 B.NE 0x2B45C34
	0x02B45C4C MOVZ W2, 0x1
	0x02B45C50 MOV X0, X20
	0x02B45C54 BL 0x1C5C788
	0x02B45C58 B 0x2B45CF0
	0x02B45C5C LDR W9, [X10]
	0x02B45C60 ADD W9, W9, 0x1
	0x02B45C64 ADD X8, X8, W9, 0x4, SXTW
	0x02B45C68 ADD X0, X8, 0x138
	0x02B45C6C LDP X8, X1, [X0]
	0x02B45C70 MOV X0, X20
	0x02B45C74 BLR X8
	0x02B45C78 LDR X19, [X19 + 0xC8]
	0x02B45C7C CBZ X19, 0x2B45D10
	0x02B45C80 LDR X8, [X19]
	0x02B45C84 LDR X1, [X21]
	0x02B45C88 LDRH W9, [X8 + 0x12E]
	0x02B45C8C CBZ X9, 0x2B45CB0
	0x02B45C90 LDR X10, [X8 + 0xB0]
	0x02B45C94 ADD X10, X10, 0x8
	0x02B45C98 LDUR X11, [X10 - 0x8]
	0x02B45C9C CMP X11, X1
	0x02B45CA0 B.EQ 0x2B45CC0
	0x02B45CA4 SUBS X9, X9, 0x1
	0x02B45CA8 ADD X10, X10, 0x10
	0x02B45CAC B.NE 0x2B45C98
	0x02B45CB0 MOV X0, X19
	0x02B45CB4 MOV W2, W31
	0x02B45CB8 BL 0x1C5C788
	0x02B45CBC B 0x2B45CCC
	0x02B45CC0 LDRSW X9, [X10]
	0x02B45CC4 ADD X8, X8, X9, 0x4, LSL
	0x02B45CC8 ADD X0, X8, 0x138
	0x02B45CCC LDP X2, X1, [X0]
	0x02B45CD0 MOV X0, X19
	0x02B45CD4 LDP X20, X19, [X31 + 0x10]
	0x02B45CD8 LDP X30, X21, [X31], #0x20
	0x02B45CDC BR X2
	0x02B45CE0 LDR W9, [X10]
	0x02B45CE4 ADD W9, W9, 0x1
	0x02B45CE8 ADD X8, X8, W9, 0x4, SXTW
	0x02B45CEC ADD X0, X8, 0x138
	0x02B45CF0 LDP X8, X2, [X0]
	0x02B45CF4 MOV X0, X20
	0x02B45CF8 MOV X1, X21
	0x02B45CFC BLR X8
	0x02B45D00 STR X0, [X19 + 0xC8]
	0x02B45D04 LDP X20, X19, [X31 + 0x10]
	0x02B45D08 LDP X30, X21, [X31], #0x20
	0x02B45D0C RET
	0x02B45D10 BL 0x1C16F20
	0x02B45D14 STP X30, X21, [X31 - 0x20]!
	0x02B45D18 STP X20, X19, [X31 + 0x10]
	0x02B45D1C ADRP X20, 0x1896000
	0x02B45D20 LDRB W8, [X20 + 0x504]
	0x02B45D24 MOV X19, X0
	0x02B45D28 TBNZ X8, 0x0, 0x2B45D4C
	0x02B45D2C ADRP X0, 0x15D9000
	0x02B45D30 LDR X0, [X0 + 0xAB8]
	0x02B45D34 BL 0x1C16CF4
	0x02B45D38 ADRP X0, 0x15D6000
	0x02B45D3C LDR X0, [X0 + 0x680]
	0x02B45D40 BL 0x1C16CF4
	0x02B45D44 MOVZ W8, 0x1
	0x02B45D48 STRB W8, [X20 + 0x504]
	0x02B45D4C LDR X20, [X19 + 0xD0]
	0x02B45D50 CBZ X20, 0x2B45D9C
	0x02B45D54 ADRP X21, 0x15D9000
	0x02B45D58 LDR X8, [X20]
	0x02B45D5C LDR X21, [X21 + 0xAB8]
	0x02B45D60 LDRH W9, [X8 + 0x12E]
	0x02B45D64 LDR X1, [X21]
	0x02B45D68 CBZ X9, 0x2B45D8C
	0x02B45D6C LDR X10, [X8 + 0xB0]
	0x02B45D70 ADD X10, X10, 0x8
	0x02B45D74 LDUR X11, [X10 - 0x8]
	0x02B45D78 CMP X11, X1
	0x02B45D7C B.EQ 0x2B45E00
	0x02B45D80 SUBS X9, X9, 0x1
	0x02B45D84 ADD X10, X10, 0x10
	0x02B45D88 B.NE 0x2B45D74
	0x02B45D8C MOVZ W2, 0x1
	0x02B45D90 MOV X0, X20
	0x02B45D94 BL 0x1C5C788
	0x02B45D98 B 0x2B45E10
	0x02B45D9C LDR X0, [X19 + 0x20]
	0x02B45DA0 CBZ X0, 0x2B45EB4
	0x02B45DA4 MOV X1, X31
	0x02B45DA8 BL 0x3DF7724
	0x02B45DAC CBZ X0, 0x2B45EB4
	0x02B45DB0 ADRP X10, 0x15D6000
	0x02B45DB4 LDR X8, [X0]
	0x02B45DB8 LDR X21, [X19 + 0xB0]
	0x02B45DBC LDR X10, [X10 + 0x680]
	0x02B45DC0 MOV X20, X0
	0x02B45DC4 LDRH W9, [X8 + 0x12E]
	0x02B45DC8 LDR X1, [X10]
	0x02B45DCC CBZ X9, 0x2B45DF0
	0x02B45DD0 LDR X10, [X8 + 0xB0]
	0x02B45DD4 ADD X10, X10, 0x8
	0x02B45DD8 LDUR X11, [X10 - 0x8]
	0x02B45DDC CMP X11, X1
	0x02B45DE0 B.EQ 0x2B45E84
	0x02B45DE4 SUBS X9, X9, 0x1
	0x02B45DE8 ADD X10, X10, 0x10
	0x02B45DEC B.NE 0x2B45DD8
	0x02B45DF0 MOVZ W2, 0x1
	0x02B45DF4 MOV X0, X20
	0x02B45DF8 BL 0x1C5C788
	0x02B45DFC B 0x2B45E94
	0x02B45E00 LDR W9, [X10]
	0x02B45E04 ADD W9, W9, 0x1
	0x02B45E08 ADD X8, X8, W9, 0x4, SXTW
	0x02B45E0C ADD X0, X8, 0x138
	0x02B45E10 LDP X8, X1, [X0]
	0x02B45E14 MOV X0, X20
	0x02B45E18 BLR X8
	0x02B45E1C LDR X19, [X19 + 0xD0]
	0x02B45E20 CBZ X19, 0x2B45EB4
	0x02B45E24 LDR X8, [X19]
	0x02B45E28 LDR X1, [X21]
	0x02B45E2C LDRH W9, [X8 + 0x12E]
	0x02B45E30 CBZ X9, 0x2B45E54
	0x02B45E34 LDR X10, [X8 + 0xB0]
	0x02B45E38 ADD X10, X10, 0x8
	0x02B45E3C LDUR X11, [X10 - 0x8]
	0x02B45E40 CMP X11, X1
	0x02B45E44 B.EQ 0x2B45E64
	0x02B45E48 SUBS X9, X9, 0x1
	0x02B45E4C ADD X10, X10, 0x10
	0x02B45E50 B.NE 0x2B45E3C
	0x02B45E54 MOV X0, X19
	0x02B45E58 MOV W2, W31
	0x02B45E5C BL 0x1C5C788
	0x02B45E60 B 0x2B45E70
	0x02B45E64 LDRSW X9, [X10]
	0x02B45E68 ADD X8, X8, X9, 0x4, LSL
	0x02B45E6C ADD X0, X8, 0x138
	0x02B45E70 LDP X2, X1, [X0]
	0x02B45E74 MOV X0, X19
	0x02B45E78 LDP X20, X19, [X31 + 0x10]
	0x02B45E7C LDP X30, X21, [X31], #0x20
	0x02B45E80 BR X2
	0x02B45E84 LDR W9, [X10]
	0x02B45E88 ADD W9, W9, 0x1
	0x02B45E8C ADD X8, X8, W9, 0x4, SXTW
	0x02B45E90 ADD X0, X8, 0x138
	0x02B45E94 LDP X8, X2, [X0]
	0x02B45E98 MOV X0, X20
	0x02B45E9C MOV X1, X21
	0x02B45EA0 BLR X8
	0x02B45EA4 STR X0, [X19 + 0xD0]
	0x02B45EA8 LDP X20, X19, [X31 + 0x10]
	0x02B45EAC LDP X30, X21, [X31], #0x20
	0x02B45EB0 RET
	0x02B45EB4 BL 0x1C16F20
	0x02B45EB8 STP X30, X21, [X31 - 0x20]!
	0x02B45EBC STP X20, X19, [X31 + 0x10]
	0x02B45EC0 ADRP X20, 0x1896000
	0x02B45EC4 LDRB W8, [X20 + 0x505]
	0x02B45EC8 MOV X19, X0
	0x02B45ECC TBNZ X8, 0x0, 0x2B45EF0
	0x02B45ED0 ADRP X0, 0x15D9000
	0x02B45ED4 LDR X0, [X0 + 0xAB8]
	0x02B45ED8 BL 0x1C16CF4
	0x02B45EDC ADRP X0, 0x15D6000
	0x02B45EE0 LDR X0, [X0 + 0x680]
	0x02B45EE4 BL 0x1C16CF4
	0x02B45EE8 MOVZ W8, 0x1
	0x02B45EEC STRB W8, [X20 + 0x505]
	0x02B45EF0 LDR X20, [X19 + 0xD8]
	0x02B45EF4 CBZ X20, 0x2B45F40
	0x02B45EF8 ADRP X21, 0x15D9000
	0x02B45EFC LDR X8, [X20]
	0x02B45F00 LDR X21, [X21 + 0xAB8]
	0x02B45F04 LDRH W9, [X8 + 0x12E]
	0x02B45F08 LDR X1, [X21]
	0x02B45F0C CBZ X9, 0x2B45F30
	0x02B45F10 LDR X10, [X8 + 0xB0]
	0x02B45F14 ADD X10, X10, 0x8
	0x02B45F18 LDUR X11, [X10 - 0x8]
	0x02B45F1C CMP X11, X1
	0x02B45F20 B.EQ 0x2B45FA4
	0x02B45F24 SUBS X9, X9, 0x1
	0x02B45F28 ADD X10, X10, 0x10
	0x02B45F2C B.NE 0x2B45F18
	0x02B45F30 MOVZ W2, 0x1
	0x02B45F34 MOV X0, X20
	0x02B45F38 BL 0x1C5C788
	0x02B45F3C B 0x2B45FB4
	0x02B45F40 LDR X0, [X19 + 0x20]
	0x02B45F44 CBZ X0, 0x2B46058
	0x02B45F48 MOV X1, X31
	0x02B45F4C BL 0x3DF7724
	0x02B45F50 CBZ X0, 0x2B46058
	0x02B45F54 ADRP X10, 0x15D6000
	0x02B45F58 LDR X8, [X0]
	0x02B45F5C LDR X21, [X19 + 0xB8]
	0x02B45F60 LDR X10, [X10 + 0x680]
	0x02B45F64 MOV X20, X0
	0x02B45F68 LDRH W9, [X8 + 0x12E]
	0x02B45F6C LDR X1, [X10]
	0x02B45F70 CBZ X9, 0x2B45F94
	0x02B45F74 LDR X10, [X8 + 0xB0]
	0x02B45F78 ADD X10, X10, 0x8
	0x02B45F7C LDUR X11, [X10 - 0x8]
	0x02B45F80 CMP X11, X1
	0x02B45F84 B.EQ 0x2B46028
	0x02B45F88 SUBS X9, X9, 0x1
	0x02B45F8C ADD X10, X10, 0x10
	0x02B45F90 B.NE 0x2B45F7C
	0x02B45F94 MOVZ W2, 0x1
	0x02B45F98 MOV X0, X20
	0x02B45F9C BL 0x1C5C788
	0x02B45FA0 B 0x2B46038
	0x02B45FA4 LDR W9, [X10]
	0x02B45FA8 ADD W9, W9, 0x1
	0x02B45FAC ADD X8, X8, W9, 0x4, SXTW
	0x02B45FB0 ADD X0, X8, 0x138
	0x02B45FB4 LDP X8, X1, [X0]
	0x02B45FB8 MOV X0, X20
	0x02B45FBC BLR X8
	0x02B45FC0 LDR X19, [X19 + 0xD8]
	0x02B45FC4 CBZ X19, 0x2B46058
	0x02B45FC8 LDR X8, [X19]
	0x02B45FCC LDR X1, [X21]
	0x02B45FD0 LDRH W9, [X8 + 0x12E]
	0x02B45FD4 CBZ X9, 0x2B45FF8
	0x02B45FD8 LDR X10, [X8 + 0xB0]
	0x02B45FDC ADD X10, X10, 0x8
	0x02B45FE0 LDUR X11, [X10 - 0x8]
	0x02B45FE4 CMP X11, X1
	0x02B45FE8 B.EQ 0x2B46008
	0x02B45FEC SUBS X9, X9, 0x1
	0x02B45FF0 ADD X10, X10, 0x10
	0x02B45FF4 B.NE 0x2B45FE0
	0x02B45FF8 MOV X0, X19
	0x02B45FFC MOV W2, W31
	0x02B46000 BL 0x1C5C788
	0x02B46004 B 0x2B46014
	0x02B46008 LDRSW X9, [X10]
	0x02B4600C ADD X8, X8, X9, 0x4, LSL
	0x02B46010 ADD X0, X8, 0x138
	0x02B46014 LDP X2, X1, [X0]
	0x02B46018 MOV X0, X19
	0x02B4601C LDP X20, X19, [X31 + 0x10]
	0x02B46020 LDP X30, X21, [X31], #0x20
	0x02B46024 BR X2
	0x02B46028 LDR W9, [X10]
	0x02B4602C ADD W9, W9, 0x1
	0x02B46030 ADD X8, X8, W9, 0x4, SXTW
	0x02B46034 ADD X0, X8, 0x138
	0x02B46038 LDP X8, X2, [X0]
	0x02B4603C MOV X0, X20
	0x02B46040 MOV X1, X21
	0x02B46044 BLR X8
	0x02B46048 STR X0, [X19 + 0xD8]
	0x02B4604C LDP X20, X19, [X31 + 0x10]
	0x02B46050 LDP X30, X21, [X31], #0x20
	0x02B46054 RET
	0x02B46058 BL 0x1C16F20
	0x02B4605C STR X30, [X31 - 0x20]!
	0x02B46060 STP X20, X19, [X31 + 0x10]
	0x02B46064 MOV X19, X0
	0x02B46068 LDR X0, [X0 + 0x10]
	0x02B4606C STP W31, W31, [X19 + 0x8C]
	0x02B46070 CBZ X0, 0x2B460AC
	0x02B46074 MOV X20, X1
	0x02B46078 MOV X1, X31
	0x02B4607C BL 0x3D7E314
	0x02B46080 LDR X8, [X20 + 0x20]
	0x02B46084 MOV X0, X19
	0x02B46088 LDR X8, [X8 + 0xC0]
	0x02B4608C LDR X1, [X8 + 0x178]
	0x02B46090 BL 0x2B45ADC
	0x02B46094 LDR X0, [X19 + 0x20]
	0x02B46098 CBZ X0, 0x2B460AC
	0x02B4609C LDP X20, X19, [X31 + 0x10]
	0x02B460A0 MOV X1, X31
	0x02B460A4 LDR X30, [X31], #0x20
	0x02B460A8 B 0x3DF276C
	0x02B460AC BL 0x1C16F20
	0x02B460B0 STP D9, D8, [X31 - 0x30]!
	0x02B460B4 STR X30, [X31 + 0x10]
	0x02B460B8 STP X20, X19, [X31 + 0x20]
	0x02B460BC FCMP S1, 0x0
	0x02B460C0 B.LE 0x2B46100
	0x02B460C4 MOV X19, X0
	0x02B460C8 CBZ X0, 0x2B46118
	0x02B460CC MOV V8.16B, V1.16B
	0x02B460D0 FMOV S9, W31
	0x02B460D4 MOVN W20, 0x0
	0x02B460D8 LDR X8, [X19]
	0x02B460DC ADD W20, W20, 0x1
	0x02B460E0 MOV X0, X19
	0x02B460E4 MOV W1, W20
	0x02B460E8 LDP X9, X2, [X8 + 0x1F8]
	0x02B460EC BLR X9
	0x02B460F0 FADD S9, S9, S0
	0x02B460F4 FCMP S9, S8
	0x02B460F8 B.MI 0x2B460D8
	0x02B460FC B 0x2B46104
	0x02B46100 MOVN W20, 0x0
	0x02B46104 MOV W0, W20
	0x02B46108 LDP X20, X19, [X31 + 0x20]
	0x02B4610C LDR X30, [X31 + 0x10]
	0x02B46110 LDP D9, D8, [X31], #0x30
	0x02B46114 RET
	0x02B46118 BL 0x1C16F20
	0x02B4611C STR X30, [X31 - 0x30]!
	0x02B46120 STP X22, X21, [X31 + 0x10]
	0x02B46124 STP X20, X19, [X31 + 0x20]
	0x02B46128 ADRP X22, 0x1895000
	0x02B4612C LDRB W8, [X22 + 0x506]
	0x02B46130 MOV X21, X2
	0x02B46134 MOV W20, W1
	0x02B46138 MOV X19, X0
	0x02B4613C TBNZ X8, 0x0, 0x2B46154
	0x02B46140 ADRP X0, 0x15D8000
	0x02B46144 LDR X0, [X0 + 0xAC0]
	0x02B46148 BL 0x1C16CF4
	0x02B4614C MOVZ W8, 0x1
	0x02B46150 STRB W8, [X22 + 0x506]
	0x02B46154 STR W31, [X31 + 0xC]
	0x02B46158 CBZ X19, 0x2B461C4
	0x02B4615C LDR X8, [X21 + 0x20]
	0x02B46160 MOV X0, X19
	0x02B46164 LDR X8, [X8 + 0xC0]
	0x02B46168 LDR X1, [X8 + 0x1B8]
	0x02B4616C BL 0x2844DC0
	0x02B46170 TBNZ X0, 0x1F, 0x2B46180
	0x02B46174 CMP W0, W20
	0x02B46178 FMOV S0, W31
	0x02B4617C B.EQ 0x2B461B4
	0x02B46180 LDR X0, [X19 + 0x68]
	0x02B46184 CBZ X0, 0x2B461C4
	0x02B46188 ADRP X8, 0x15D8000
	0x02B4618C LDR X8, [X8 + 0xAC0]
	0x02B46190 ADD X2, X31, 0xC
	0x02B46194 MOV W1, W20
	0x02B46198 LDR X3, [X8]
	0x02B4619C BL 0x2A1B0D4
	0x02B461A0 TBZ X0, 0x0, 0x2B461AC
	0x02B461A4 LDR V0, [X31 + 0xC]
	0x02B461A8 B 0x2B461B4
	0x02B461AC MOV X0, X19
	0x02B461B0 BL 0x2B4308C
	0x02B461B4 LDP X20, X19, [X31 + 0x20]
	0x02B461B8 LDP X22, X21, [X31 + 0x10]
	0x02B461BC LDR X30, [X31], #0x30
	0x02B461C0 RET
	0x02B461C4 BL 0x1C16F20
	0x02B461C8 STR D8, [X31 - 0x20]!
	0x02B461CC STR X30, [X31 + 0x8]
	0x02B461D0 STP X20, X19, [X31 + 0x10]
	0x02B461D4 FCMP S0, 0x0
	0x02B461D8 B.LS 0x2B46218
	0x02B461DC B.LE 0x2B46220
	0x02B461E0 MOV X20, X0
	0x02B461E4 CBZ X0, 0x2B46238
	0x02B461E8 MOV V8.16B, V0.16B
	0x02B461EC MOVN W19, 0x0
	0x02B461F0 LDR X8, [X20]
	0x02B461F4 ADD W19, W19, 0x1
	0x02B461F8 MOV X0, X20
	0x02B461FC MOV W1, W19
	0x02B46200 LDP X9, X2, [X8 + 0x1F8]
	0x02B46204 BLR X9
	0x02B46208 FSUB S8, S8, S0
	0x02B4620C FCMP S8, 0x0
	0x02B46210 B.GT 0x2B461F0
	0x02B46214 B 0x2B46224
	0x02B46218 MOV W19, W31
	0x02B4621C B 0x2B46224
	0x02B46220 MOVN W19, 0x0
	0x02B46224 MOV W0, W19
	0x02B46228 LDP X20, X19, [X31 + 0x10]
	0x02B4622C LDR X30, [X31 + 0x8]
	0x02B46230 LDR V8, [X31], #0x20
	0x02B46234 RET

ISIL:
	001 Move [X31-112], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x1897000
	015 Move W8, [X21+1280]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0x15B6000
	023 Move X0, [X0+2128]
	024 Call 0x1C17CF4
	025 Move X0, 0x15D8000
	026 Move X0, [X0+296]
	027 Call 0x1C17CF4
	028 Move X0, 0x15D9000
	029 Move X0, [X0+3848]
	030 Call 0x1C17CF4
	031 Move X0, 0x15D9000
	032 Move X0, [X0+3856]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+1280], W8
	036 Move X0, [X19+32]
	037 Compare X0, 0
	038 JumpIfEqual {455}
	039 Move X8, [X0]
	040 Move X9, [X8+2056]
	041 Move X1, [X8+2064]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {416}
	047 Move X8, [X19+40]
	048 Compare X8, 0
	049 JumpIfEqual {455}
	050 Add X20, X20, 32
	051 Move X9, [X20]
	052 Move W10, [X8+24]
	053 Move X8, [X9+192]
	054 Compare W10, 0
	055 JumpIfEqual {94}
	056 Move X1, [X8+384]
	057 Move X0, X19
	058 Call 0x2B443E0, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, -2147483648
	061 Compare TEMP, -2147483648
	062 JumpIfEqual {416}
	063 Move X8, [X20]
	064 Move X0, X19
	065 Move X8, [X8+192]
	066 Move X1, [X8+184]
	067 Call 0x2B44118, X0
	068 Move X8, [X20]
	069 Move X0, X19
	070 Move V8, V0
	071 Move X8, [X8+192]
	072 Move X1, [X8+152]
	073 Call 0x2B4427C, X0
	074 Move X8, [X20]
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 Move X8, [X8+192]
	077 Move X1, [X8+64]
	078 Move X0, X19
	079 Move X20, [X31+96]
	080 Move X19, [X31+104]
	081 Move X22, [X31+80]
	082 Move X21, [X31+88]
	083 Move X24, [X31+64]
	084 Move X23, [X31+72]
	085 Move X26, [X31+48]
	086 Move X25, [X31+56]
	087 Move X30, [X31+32]
	088 Move X27, [X31+40]
	089 Move D9, [X31+16]
	090 Move D8, [X31+24]
	091 Move V10, [X31+112]
	092 Call 0x2B45174, X0
	093 Return 
	094 Move X1, [X8+144]
	095 Move S0, W31
	096 Move X0, X19
	097 Call 0x2B442A8, X0, V0
	098 Move X8, [X20]
	099 Move X0, X19
	100 Move X20, [X31+96]
	101 Move X19, [X31+104]
	102 Move X22, [X31+80]
	103 Move X21, [X31+88]
	104 Move X8, [X8+192]
	105 Move X24, [X31+64]
	106 Move X23, [X31+72]
	107 Move X26, [X31+48]
	108 Move X25, [X31+56]
	109 Move X30, [X31+32]
	110 Move X27, [X31+40]
	111 Move X1, [X8+272]
	112 Move D9, [X31+16]
	113 Move D8, [X31+24]
	114 Move S0, W31
	115 Move V10, [X31+112]
	116 Call 0x2B44144, X0, V0
	117 Return 
	118 Move X1, [X8+184]
	119 Move X0, X19
	120 Call 0x2B44118, X0
	121 Move X8, [X20]
	122 Move X0, X19
	123 Move V8, V0
	124 Move X8, [X8+192]
	125 Move X1, [X8+184]
	126 Call 0x2B44118, X0
	127 Move X8, [X19]
	128 Move X0, X19
	129 Move V9, V0
	130 Move X9, [X8+376]
	131 Move X1, [X8+384]
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X8, [X20]
	134 Move W22, W0
	135 Move X0, X19
	136 Move X8, [X8+192]
	137 Move X1, [X8+168]
	138 Call 0x2843AE0, X0
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X25, 0x15D8000
	141 Move X26, 0x15D9000
	142 Move X27, 0x15D9000
	143 Move X25, [X25+296]
	144 Move X26, [X26+3856]
	145 Move X27, [X27+3848]
	146 Move W21, W31
	147 Move X8, [X20]
	148 Move X0, X19
	149 Move X8, [X8+192]
	150 Move X1, [X8+368]
	151 Call 0x2B444C8, X0
	152 NotImplemented "Instruction FCMP not yet implemented."
	153 Move X8, [X20]
	154 Move X0, X19
	155 Move X8, [X8+192]
	156 Move X1, [X8+368]
	157 Call 0x2B444C8, X0
	158 NotImplemented "Instruction FCMP not yet implemented."
	159 Move W8, [X19+136]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X8, [X19]
	162 Move X0, X19
	163 Move W1, W22
	164 Move X9, [X8+504]
	165 Move X2, [X8+512]
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move X0, [X19+40]
	168 Compare X0, 0
	169 JumpIfEqual {455}
	170 Move X8, [X20]
	171 Move W1, W21
	172 Move V10, V0
	173 Move X8, [X8+192]
	174 Move X2, [X8+296]
	175 Call List`1<Object>.get_Item, X0, X1
	176 Compare X0, 0
	177 JumpIfEqual {455}
	178 Move W8, [X0+32]
	179 Move X23, X0
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X8, [X23]
	182 Move X0, X23
	183 Move X9, [X8+376]
	184 Move X1, [X8+384]
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Compare X0, 0
	187 JumpIfEqual {455}
	188 Move X1, X31
	189 Call VisualElement.get_style, X0
	190 Compare X0, 0
	191 JumpIfEqual {455}
	192 Move X8, [X0]
	193 Move X1, [X25]
	194 Move X24, X0
	195 NotImplemented "Instruction LDRH not yet implemented."
	196 Compare X9, 0
	197 JumpIfEqual {204}
	198 Move X10, [X8+176]
	199 Add X10, X10, 8
	200 NotImplemented "Instruction LDUR not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Subtract X9, X9, 1
	203 Add X10, X10, 16
	204 Move W2, 17
	205 Move X0, X24
	206 Call 0x1C5D788
	207 Move W9, [X10]
	208 Add W9, W9, 17
	209 Add X8, X8, W9
	210 Add X0, X8, 312
	211 Move X8, [X0]
	212 Move X1, [X0+8]
	213 Move X0, X24
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Move X1, [X26]
	216 Move X24, X0
	217 Move W0, 1
	218 Call 0x266FACC, X0
	219 Move X2, [X27]
	220 Move X1, X0
	221 Move X0, X24
	222 Call 0x266F9D0, X0, X1
	223 Move TEMP, X0
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfNotEqual {237}
	227 Move X8, [X20]
	228 Move X0, X19
	229 Move X1, X23
	230 Move W2, W22
	231 Move X8, [X8+192]
	232 Move X3, [X8+232]
	233 Call 0x28445B8, X0, X1, X2
	234 Move X0, X19
	235 Move X1, X23
	236 Call 0x2B4887C, X0, X1
	237 Move X8, [X19+40]
	238 Compare X8, 0
	239 JumpIfEqual {455}
	240 Move W8, [X8+24]
	241 Add W21, W21, 1
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X8, [X20]
	244 Move X0, X19
	245 Add S9, S9, S10
	246 Add W22, W22, 1
	247 Move X8, [X8+192]
	248 Move X1, [X8+168]
	249 Call 0x2843AE0, X0
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move W21, W31
	252 Move X8, [X19]
	253 Move X0, X19
	254 Move X9, [X8+376]
	255 Move X1, [X8+384]
	256 NotImplemented "Instruction BLR not yet implemented."
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Move X8, [X20]
	259 Move X0, X19
	260 Move X8, [X8+192]
	261 Move X1, [X8+184]
	262 Call 0x2B44118, X0
	263 Move X8, [X20]
	264 Move X0, X19
	265 Move V9, V0
	266 Move X8, [X8+192]
	267 Move X1, [X8+16]
	268 Call 0x2843CF4, X0
	269 Compare X0, 0
	270 JumpIfEqual {455}
	271 Move V0, [X0+20]
	272 NotImplemented "Instruction FCMP not yet implemented."
	273 Move X8, [X19+40]
	274 Compare X8, 0
	275 JumpIfEqual {455}
	276 Move W8, [X8+24]
	277 Move X22, [X19+80]
	278 Subtract W23, W8, 1
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X8, [X19]
	281 Move X0, X19
	282 Move X9, [X8+376]
	283 Move X1, [X8+384]
	284 NotImplemented "Instruction BLR not yet implemented."
	285 Compare W0, 0
	286 JumpIfEqual {365}
	287 Move X0, [X19+40]
	288 Compare X0, 0
	289 JumpIfEqual {455}
	290 Move X8, [X20]
	291 Move W1, W23
	292 Move X8, [X8+192]
	293 Move X2, [X8+296]
	294 Call List`1<Object>.get_Item, X0, X1
	295 Compare X22, 0
	296 JumpIfEqual {455}
	297 Move X8, [X20]
	298 Move X24, X0
	299 Move X0, X22
	300 Move W1, W31
	301 Move X8, [X8+192]
	302 Move X2, X24
	303 Move X3, [X8+304]
	304 Call List`1<Object>.Insert, X0, X1, X2
	305 Move X0, [X19+40]
	306 Compare X0, 0
	307 JumpIfEqual {455}
	308 Move X8, [X20]
	309 Move W9, [X0+24]
	310 Move X8, [X8+192]
	311 Subtract W1, W9, 1
	312 Move X2, [X8+312]
	313 Call List`1<Object>.RemoveAt, X0, X1
	314 Compare X24, 0
	315 JumpIfEqual {455}
	316 Move X8, [X24]
	317 Move X0, X24
	318 Move X9, [X8+376]
	319 Move X1, [X8+384]
	320 NotImplemented "Instruction BLR not yet implemented."
	321 Compare X0, 0
	322 JumpIfEqual {455}
	323 Move X1, X31
	324 Call VisualElement.SendToBack, X0
	325 Move X8, [X19]
	326 Move X0, X19
	327 Move X9, [X8+376]
	328 Move X1, [X8+384]
	329 NotImplemented "Instruction BLR not yet implemented."
	330 Move X8, [X19]
	331 Subtract W25, W0, 1
	332 Move X0, X19
	333 Move W1, W25
	334 Move X9, [X8+392]
	335 Move X2, [X8+400]
	336 NotImplemented "Instruction BLR not yet implemented."
	337 Move X8, [X20]
	338 Move X0, X19
	339 Move X1, X24
	340 Move W2, W25
	341 Move X8, [X8+192]
	342 Move X3, [X8+232]
	343 Call 0x28445B8, X0, X1, X2
	344 Move X0, X19
	345 Move X1, X24
	346 Call 0x2B4887C, X0, X1
	347 Move X8, [X19]
	348 Move X0, X19
	349 Move W1, W25
	350 Move X9, [X8+504]
	351 Move X2, [X8+512]
	352 NotImplemented "Instruction BLR not yet implemented."
	353 Move X8, [X20]
	354 Move X0, X19
	355 Move V9, V0
	356 Move X8, [X8+192]
	357 Move X1, [X8+16]
	358 Call 0x2843CF4, X0
	359 Compare X0, 0
	360 JumpIfEqual {455}
	361 Move V0, [X0+20]
	362 Subtract S8, S8, S9
	363 Subtract W23, W23, 1
	364 NotImplemented "Instruction FCMP not yet implemented."
	365 Move X0, [X19+40]
	366 Compare X0, 0
	367 JumpIfEqual {455}
	368 Move X8, [X20]
	369 Move W1, W31
	370 Move X2, X22
	371 Move X8, [X8+192]
	372 Move X3, [X8+320]
	373 Call List`1<Object>.InsertRange, X0, X1, X2
	374 Move X8, [X19+80]
	375 Compare X8, 0
	376 JumpIfEqual {455}
	377 Move W2, [X8+24]
	378 Move W9, [X8+28]
	379 Add W9, W9, 1
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move [X8+24], W31
	382 Move [X8+28], W9
	383 Move X0, [X8+16]
	384 Move W1, W31
	385 Move X3, X31
	386 Call Array.Clear, X0, X1, X2
	387 Move X8, [X20]
	388 Move X0, X19
	389 Move V0, V8
	390 Move X8, [X8+192]
	391 Move X1, [X8+272]
	392 Call 0x2B44144, X0, V0
	393 Move X8, [X19]
	394 Move X0, X19
	395 Move X9, [X8+520]
	396 Move X1, [X8+528]
	397 NotImplemented "Instruction BLR not yet implemented."
	398 Move X8, [X20]
	399 Move X0, X19
	400 Move X8, [X8+192]
	401 Move X1, [X8+144]
	402 Call 0x2B442A8, X0, V0
	403 Move W8, [X19+140]
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Move X8, [X20]
	406 Move X0, X19
	407 Move X8, [X8+192]
	408 Move X1, [X8+376]
	409 Call 0x2B46ADC, X0
	410 Move X8, [X19+120]
	411 Compare X8, 0
	412 JumpIfEqual {455}
	413 Move W8, [X8+32]
	414 Compare W8, 0
	415 JumpIfEqual {430}
	416 Move X20, [X31+96]
	417 Move X19, [X31+104]
	418 Move X22, [X31+80]
	419 Move X21, [X31+88]
	420 Move X24, [X31+64]
	421 Move X23, [X31+72]
	422 Move X26, [X31+48]
	423 Move X25, [X31+56]
	424 Move X30, [X31+32]
	425 Move X27, [X31+40]
	426 Move D9, [X31+16]
	427 Move D8, [X31+24]
	428 Move V10, [X31+112]
	429 Return 
	430 Move X8, [X20]
	431 Move X0, X19
	432 Move X8, [X8+192]
	433 Move X1, [X8+88]
	434 Call 0x2B4705C, X0
	435 Move X8, [X20]
	436 Move X0, X19
	437 Move X20, [X31+96]
	438 Move X19, [X31+104]
	439 Move X22, [X31+80]
	440 Move X21, [X31+88]
	441 Move X8, [X8+192]
	442 Move X24, [X31+64]
	443 Move X23, [X31+72]
	444 Move X26, [X31+48]
	445 Move X25, [X31+56]
	446 Move X30, [X31+32]
	447 Move X27, [X31+40]
	448 Move X2, [X8+400]
	449 Move D9, [X31+16]
	450 Move D8, [X31+24]
	451 Move W1, 1
	452 Move V10, [X31+112]
	453 Call 0x2B46354, X0, X1
	454 Return 
	455 Call 0x1C17F20

Method: System.Void UpdateScrollViewContainer(System.Single previousHeight, System.Single newHeight)

Disassembly:
	0x02B46238 BL 0x1C16F20
	0x02B4623C STR D8, [X31 - 0x30]!
	0x02B46240 STP X30, X21, [X31 + 0x10]
	0x02B46244 STP X20, X19, [X31 + 0x20]
	0x02B46248 ADRP X21, 0x1895000
	0x02B4624C LDRB W8, [X21 + 0x507]
	0x02B46250 MOV X20, X1
	0x02B46254 MOV X19, X0
	0x02B46258 TBNZ X8, 0x0, 0x2B46270
	0x02B4625C ADRP X0, 0x15D8000
	0x02B46260 LDR X0, [X0 + 0xAC8]
	0x02B46264 BL 0x1C16CF4
	0x02B46268 MOVZ W8, 0x1
	0x02B4626C STRB W8, [X21 + 0x507]
	0x02B46270 LDR X8, [X20 + 0x20]
	0x02B46274 LDR V8, [X19 + 0x9C]
	0x02B46278 MOV X0, X19
	0x02B4627C LDR X8, [X8 + 0xC0]
	0x02B46280 LDR X1, [X8 + 0xA8]
	0x02B46284 BL 0x2842AE0
	0x02B46288 LDR X8, [X19 + 0x68]
	0x02B4628C CBZ X8, 0x2B462D4
	0x02B46290 ADRP X9, 0x15D8000
	0x02B46294 LDR X9, [X9 + 0xAC8]
	0x02B46298 MOV W20, W0
	0x02B4629C MOV X0, X8
	0x02B462A0 LDR X1, [X9]
	0x02B462A4 BL 0x2A19570
	0x02B462A8 MOV W21, W0
	0x02B462AC MOV X0, X19
	0x02B462B0 BL 0x2B4308C
	0x02B462B4 SUB W8, W20, W21
	0x02B462B8 LDP X20, X19, [X31 + 0x20]
	0x02B462BC LDP X30, X21, [X31 + 0x10]
	0x02B462C0 SCVTF S1, W8
	0x02B462C4 FMUL S0, S0, S1
	0x02B462C8 FADD S0, S8, S0
	0x02B462CC LDR V8, [X31], #0x30
	0x02B462D0 RET
	0x02B462D4 BL 0x1C16F20
	0x02B462D8 STP D9, D8, [X31 - 0x40]!
	0x02B462DC STP X30, X31, [X31 + 0x10]
	0x02B462E0 STP X22, X21, [X31 + 0x20]
	0x02B462E4 STP X20, X19, [X31 + 0x30]
	0x02B462E8 TBNZ X1, 0x1F, 0x2B4638C
	0x02B462EC MOV X20, X0
	0x02B462F0 LDR X0, [X0 + 0x70]
	0x02B462F4 CBZ X0, 0x2B463F4
	0x02B462F8 LDR X8, [X2 + 0x20]
	0x02B462FC MOV X21, X2
	0x02B46300 ADD X2, X31, 0x18
	0x02B46304 MOV W19, W1
	0x02B46308 LDR X8, [X8 + 0xC0]
	0x02B4630C LDR X3, [X8 + 0x1C0]
	0x02B46310 BL 0x29F32A8
	0x02B46314 TBZ X0, 0x0, 0x2B46394
	0x02B46318 LDR X8, [X21 + 0x20]
	0x02B4631C MOV X0, X20
	0x02B46320 LDR X8, [X8 + 0xC0]
	0x02B46324 LDR X1, [X8 + 0x1B8]
	0x02B46328 BL 0x2844DC0
	0x02B4632C LDR V9, [X31 + 0x18]
	0x02B46330 LDR W22, [X31 + 0x1C]
	0x02B46334 MOV W21, W0
	0x02B46338 MOV X0, X20
	0x02B4633C BL 0x2B4308C
	0x02B46340 MOV V8.16B, V0.16B
	0x02B46344 TBNZ X21, 0x1F, 0x2B463CC
	0x02B46348 CMP W21, W19
	0x02B4634C B.GT 0x2B463CC
	0x02B46350 LDR X0, [X20 + 0x30]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1896000
	008 Move W8, [X21+1281]
	009 Move X20, X1
	010 Move V8, V1
	011 Move V9, V0
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x15D8000
	018 Move X0, [X0+3864]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1281], W8
	022 Move W8, [X19+136]
	023 Compare W8, 0
	024 JumpIfNotEqual {80}
	025 Move W1, [X19+132]
	026 Move TEMP, X1
	027 And TEMP, TEMP, -2147483648
	028 Compare TEMP, -2147483648
	029 JumpIfEqual {67}
	030 Move X8, [X20+32]
	031 Move X0, X19
	032 Move X8, [X8+192]
	033 Move X2, [X8+176]
	034 Call 0x2B472D8, X0, X1
	035 Move X8, [X20+32]
	036 Move X0, X19
	037 Move V8, V0
	038 Move X8, [X8+192]
	039 Move X1, [X8+16]
	040 Call 0x2843CF4, X0
	041 Compare X0, 0
	042 JumpIfEqual {87}
	043 Move X21, 0x15D8000
	044 Move X21, [X21+3864]
	045 Move X20, X0
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X21]
	052 Move X8, [X19+16]
	053 Compare X8, 0
	054 JumpIfEqual {87}
	055 Move X8, [X8+1048]
	056 Compare X8, 0
	057 JumpIfEqual {87}
	058 Move X9, [X0+184]
	059 Move X0, X8
	060 Move X1, X31
	061 Move W19, [X9+24]
	062 Call VisualElement.get_layout, X0
	063 NotImplemented "Instruction SCVTF not yet implemented."
	064 Add S0, S8, S0
	065 Subtract S0, S0, S3
	066 Move [X20+20], S0
	067 Move W8, [X19+144]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X8, [X20+32]
	070 Move X0, X19
	071 Move X8, [X8+192]
	072 Move X1, [X8+16]
	073 Call 0x2843CF4, X0
	074 Compare X0, 0
	075 JumpIfEqual {87}
	076 Move V0, [X0+20]
	077 Subtract S1, S8, S9
	078 Add S0, S1, S0
	079 Move [X0+20], S0
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X30, [X31+16]
	083 Move X21, [X31+24]
	084 Move D9, [X31+48]
	085 Move D8, [X31+56]
	086 Return 
	087 Call 0x1C17F20

Method: System.Void ApplyScrollViewUpdate(System.Boolean dimensionsOnly = False)

Disassembly:
	0x02B46354 CBZ X0, 0x2B463F4
	0x02B46358 LDR X8, [X0]
	0x02B4635C LDP X9, X1, [X8 + 0x178]
	0x02B46360 BLR X9
	0x02B46364 CBZ X0, 0x2B463F4
	0x02B46368 MOV X1, X31
	0x02B4636C BL 0x3DEC528
	0x02B46370 SUB W8, W19, W22
	0x02B46374 ADD W8, W8, 0x1
	0x02B46378 SCVTF S0, W8
	0x02B4637C FMUL S0, S8, S0
	0x02B46380 FADD S0, S9, S0
	0x02B46384 FSUB S0, S0, S3
	0x02B46388 B 0x2B463E0
	0x02B4638C FMOV S0, W31
	0x02B46390 B 0x2B463E0
	0x02B46394 LDR X8, [X21 + 0x20]
	0x02B46398 SUB W1, W19, 0x1
	0x02B4639C MOV X0, X20
	0x02B463A0 LDR X8, [X8 + 0xC0]
	0x02B463A4 LDR X2, [X8 + 0xB0]
	0x02B463A8 BL 0x2B462D8
	0x02B463AC LDR X8, [X20]
	0x02B463B0 MOV X0, X20
	0x02B463B4 MOV W1, W19
	0x02B463B8 MOV V8.16B, V0.16B
	0x02B463BC LDP X9, X2, [X8 + 0x1F8]
	0x02B463C0 BLR X9
	0x02B463C4 FADD S0, S8, S0
	0x02B463C8 B 0x2B463E0
	0x02B463CC SUB W8, W19, W22
	0x02B463D0 ADD W8, W8, 0x1
	0x02B463D4 SCVTF S0, W8
	0x02B463D8 FMUL S0, S8, S0
	0x02B463DC FADD S0, S9, S0
	0x02B463E0 LDP X20, X19, [X31 + 0x30]
	0x02B463E4 LDP X22, X21, [X31 + 0x20]
	0x02B463E8 LDR X30, [X31 + 0x10]
	0x02B463EC LDP D9, D8, [X31], #0x40
	0x02B463F0 RET
	0x02B463F4 BL 0x1C16F20
	0x02B463F8 SUB X31, X31, 0x30
	0x02B463FC STP X30, X21, [X31 + 0x10]
	0x02B46400 STP X20, X19, [X31 + 0x20]
	0x02B46404 STR X31, [X31 + 0x8]
	0x02B46408 TBNZ X1, 0x1F, 0x2B46448
	0x02B4640C MOV X19, X2
	0x02B46410 MOV W20, W1
	0x02B46414 MOV X21, X0
	0x02B46418 LDR X0, [X21 + 0x70]
	0x02B4641C CBZ X0, 0x2B46464
	0x02B46420 LDR X8, [X19 + 0x20]
	0x02B46424 ADD X2, X31, 0x8
	0x02B46428 MOV W1, W20
	0x02B4642C LDR X8, [X8 + 0xC0]
	0x02B46430 LDR X3, [X8 + 0x1C0]
	0x02B46434 BL 0x29F32A8
	0x02B46438 TBNZ X0, 0x0, 0x2B46450
	0x02B4643C CMP W20, 0x0
	0x02B46440 SUB W20, W20, 0x1
	0x02B46444 B.GT 0x2B46418
	0x02B46448 MOV X0, X31
	0x02B4644C B 0x2B46454
	0x02B46450 LDR X0, [X31 + 0x8]
	0x02B46454 LDP X20, X19, [X31 + 0x20]
	0x02B46458 LDP X30, X21, [X31 + 0x10]
	0x02B4645C ADD X31, X31, 0x30
	0x02B46460 RET
	0x02B46464 BL 0x1C16F20
	0x02B46468 SUB X31, X31, 0xB0
	0x02B4646C STP D9, D8, [X31 + 0x60]
	0x02B46470 STP X30, X25, [X31 + 0x70]
	0x02B46474 STP X24, X23, [X31 + 0x80]
	0x02B46478 STP X22, X21, [X31 + 0x90]
	0x02B4647C STP X20, X19, [X31 + 0xA0]
	0x02B46480 ADRP X22, 0x1895000
	0x02B46484 LDRB W8, [X22 + 0x508]
	0x02B46488 MOV X19, X2
	0x02B4648C MOV V8.16B, V0.16B
	0x02B46490 MOV W20, W1
	0x02B46494 MOV X21, X0
	0x02B46498 TBNZ X8, 0x0, 0x2B464F8
	0x02B4649C ADRP X0, 0x15D8000
	0x02B464A0 LDR X0, [X0 + 0xAD0]
	0x02B464A4 BL 0x1C16CF4
	0x02B464A8 ADRP X0, 0x15D8000
	0x02B464AC LDR X0, [X0 + 0xAC0]
	0x02B464B0 BL 0x1C16CF4
	0x02B464B4 ADRP X0, 0x15D8000
	0x02B464B8 LDR X0, [X0 + 0xAD8]
	0x02B464BC BL 0x1C16CF4
	0x02B464C0 ADRP X0, 0x15D8000
	0x02B464C4 LDR X0, [X0 + 0xAE0]
	0x02B464C8 BL 0x1C16CF4
	0x02B464CC ADRP X0, 0x15D8000
	0x02B464D0 LDR X0, [X0 + 0xAE8]
	0x02B464D4 BL 0x1C16CF4
	0x02B464D8 ADRP X0, 0x15D8000
	0x02B464DC LDR X0, [X0 + 0xAF0]
	0x02B464E0 BL 0x1C16CF4
	0x02B464E4 ADRP X0, 0x15D8000
	0x02B464E8 LDR X0, [X0 + 0xAF8]
	0x02B464EC BL 0x1C16CF4
	0x02B464F0 MOVZ W8, 0x1
	0x02B464F4 STRB W8, [X22 + 0x508]
	0x02B464F8 MOVI V0.2D, 0x0
	0x02B464FC FCMP S8, 0x0
	0x02B46500 STR W31, [X31 + 0x5C]
	0x02B46504 STP V0, V0, [X31 + 0x30]
	0x02B46508 B.LS 0x2B466D4
	0x02B4650C LDR X0, [X21 + 0x20]
	0x02B46510 CBZ X0, 0x2B466F8
	0x02B46514 MOV V0.16B, V8.16B
	0x02B46518 MOV X1, X31
	0x02B4651C BL 0x3CFECF8
	0x02B46520 LDR X0, [X21 + 0x68]
	0x02B46524 CBZ X0, 0x2B466F8
	0x02B46528 ADRP X8, 0x15D8000
	0x02B4652C LDR X8, [X8 + 0xAC0]
	0x02B46530 ADD X2, X31, 0x5C
	0x02B46534 MOV W1, W20
	0x02B46538 MOV V8.16B, V0.16B
	0x02B4653C LDR X3, [X8]
	0x02B46540 BL 0x2A1B0D4
	0x02B46544 LDR V0, [X21 + 0x9C]
	0x02B46548 TBZ X0, 0x0, 0x2B46558
	0x02B4654C LDR V1, [X31 + 0x5C]
	0x02B46550 FSUB S0, S0, S1
	0x02B46554 STR S0, [X21 + 0x9C]
	0x02B46558 LDR X0, [X21 + 0x68]
	0x02B4655C FADD S0, S8, S0
	0x02B46560 STR S0, [X21 + 0x9C]
	0x02B46564 CBZ X0, 0x2B466F8
	0x02B46568 ADRP X8, 0x15D8000
	0x02B4656C LDR X8, [X8 + 0xAD8]
	0x02B46570 MOV W1, W20
	0x02B46574 MOV V0.16B, V8.16B
	0x02B46578 LDR X2, [X8]
	0x02B4657C BL 0x2A19788
	0x02B46580 LDR W8, [X21 + 0x60]
	0x02B46584 CMP W8, W20
	0x02B46588 B.GE 0x2B46590
	0x02B4658C STR W20, [X21 + 0x60]
	0x02B46590 LDR X8, [X19 + 0x20]
	0x02B46594 LDR V9, [X31 + 0x5C]
	0x02B46598 SUB W1, W20, 0x1
	0x02B4659C MOV X0, X21
	0x02B465A0 LDR X8, [X8 + 0xC0]
	0x02B465A4 LDR X2, [X8 + 0x1D8]
	0x02B465A8 BL 0x2B463F8
	0x02B465AC LDR X22, [X21 + 0x70]
	0x02B465B0 STR X31, [X31 + 0x28]
	0x02B465B4 LDR X8, [X19 + 0x20]
	0x02B465B8 FMOV S0, W0
	0x02B465BC FADD S0, S8, S0
	0x02B465C0 LDR X8, [X8 + 0xC0]
	0x02B465C4 LDR X2, [X8 + 0x1E0]
	0x02B465C8 UBFM X8, X0, 0x20, 0x3F
	0x02B465CC ADD W1, W8, 0x1
	0x02B465D0 ADD X0, X31, 0x28
	0x02B465D4 BL 0x29A00F8
	0x02B465D8 CBZ X22, 0x2B466F8
	0x02B465DC LDR X8, [X19 + 0x20]
	0x02B465E0 LDR X2, [X31 + 0x28]
	0x02B465E4 MOV X0, X22
	0x02B465E8 MOV W1, W20
	0x02B465EC LDR X8, [X8 + 0xC0]
	0x02B465F0 LDR X3, [X8 + 0x1E8]
	0x02B465F4 BL 0x29F1894
	0x02B465F8 LDR X0, [X21 + 0x68]
	0x02B465FC CBZ X0, 0x2B466F8
	0x02B46600 ADRP X8, 0x15D8000
	0x02B46604 LDR X8, [X8 + 0xAD0]
	0x02B46608 FCMP S9, 0x0
	0x02B4660C CSET W24, EQ
	0x02B46610 LDR X1, [X8]
	0x02B46614 ADD X8, X31, 0x8
	0x02B46618 BL 0x2A19B84
	0x02B4661C LDUR V0, [X31 + 0x8]
	0x02B46620 LDUR V1, [X31 + 0x18]
	0x02B46624 ADRP X25, 0x15D8000
	0x02B46628 STP V0, V1, [X31 + 0x30]
	0x02B4662C LDR X25, [X25 + 0xAE8]
	0x02B46630 LDR X1, [X25]
	0x02B46634 ADD X0, X31, 0x30
	0x02B46638 BL 0x2BF6960
	0x02B4663C TBZ X0, 0x0, 0x2B466C0
	0x02B46640 LDR W22, [X31 + 0x40]
	0x02B46644 CMP W22, W20
	0x02B46648 B.LE 0x2B46630
	0x02B4664C LDR X0, [X21 + 0x70]
	0x02B46650 CBZ X0, 0x2B466F0
	0x02B46654 LDR X8, [X19 + 0x20]
	0x02B46658 LDR X8, [X8 + 0xC0]
	0x02B4665C LDR X2, [X8 + 0x1F0]
	0x02B46660 MOV W1, W22
	0x02B46664 BL 0x29F1808
	0x02B46668 LDR X23, [X21 + 0x70]
	0x02B4666C STR X31, [X31 + 0x8]
	0x02B46670 LDR X8, [X19 + 0x20]
	0x02B46674 LDR V0, [X31 + 0x5C]
	0x02B46678 UBFM X9, X0, 0x20, 0x3F
	0x02B4667C FMOV S1, W0
	0x02B46680 LDR X8, [X8 + 0xC0]
	0x02B46684 FSUB S0, S1, S0
	0x02B46688 ADD W1, W9, W24
	0x02B4668C FADD S0, S8, S0
	0x02B46690 LDR X2, [X8 + 0x1E0]
	0x02B46694 ADD X0, X31, 0x8
	0x02B46698 BL 0x29A00F8
	0x02B4669C CBZ X23, 0x2B466F4
	0x02B466A0 LDR X8, [X19 + 0x20]
	0x02B466A4 LDR X2, [X31 + 0x8]
	0x02B466A8 LDR X8, [X8 + 0xC0]
	0x02B466AC LDR X3, [X8 + 0x1E8]
	0x02B466B0 MOV X0, X23
	0x02B466B4 MOV W1, W22
	0x02B466B8 BL 0x29F1894
	0x02B466BC B 0x2B46630
	0x02B466C0 ADRP X8, 0x15D8000
	0x02B466C4 LDR X8, [X8 + 0xAE0]
	0x02B466C8 ADD X0, X31, 0x30
	0x02B466CC LDR X1, [X8]
	0x02B466D0 BL 0x2BF6A64
	0x02B466D4 LDP X20, X19, [X31 + 0xA0]
	0x02B466D8 LDP X22, X21, [X31 + 0x90]
	0x02B466DC LDP X24, X23, [X31 + 0x80]
	0x02B466E0 LDP X30, X25, [X31 + 0x70]
	0x02B466E4 LDP D9, D8, [X31 + 0x60]
	0x02B466E8 ADD X31, X31, 0xB0
	0x02B466EC RET
	0x02B466F0 BL 0x1C16F20
	0x02B466F4 BL 0x1C16F20
	0x02B466F8 BL 0x1C16F20
	0x02B466FC B 0x2B4670C
	0x02B46700 B 0x2B4670C
	0x02B46704 B 0x2B4670C
	0x02B46708 B 0x2B4670C
	0x02B4670C MOV X19, X0
	0x02B46710 CMP W1, 0x1
	0x02B46714 B.NE 0x2B46748
	0x02B46718 MOV X0, X19
	0x02B4671C BL 0x3EB1AD0
	0x02B46720 LDR X20, [X0]
	0x02B46724 BL 0x3EB1AE0
	0x02B46728 ADRP X8, 0x15D8000
	0x02B4672C LDR X8, [X8 + 0xAE0]
	0x02B46730 ADD X0, X31, 0x30
	0x02B46734 LDR X1, [X8]
	0x02B46738 BL 0x2BF6A64
	0x02B4673C CBZ X20, 0x2B466D4
	0x02B46740 MOV X0, X20
	0x02B46744 BL 0x1C16F18
	0x02B46748 MOV X20, X31
	0x02B4674C B 0x2B46754
	0x02B46750 MOV X19, X0
	0x02B46754 ADRP X8, 0x15D8000
	0x02B46758 LDR X8, [X8 + 0xAE0]
	0x02B4675C LDR X1, [X8]
	0x02B46760 ADD X0, X31, 0x30
	0x02B46764 BL 0x2BF6A64
	0x02B46768 CBNZ X20, 0x2B46774
	0x02B4676C MOV X0, X19
	0x02B46770 BL 0x1D2C690
	0x02B46774 MOV X0, X20
	0x02B46778 BL 0x1C16F18
	0x02B4677C BL 0x1990590
	0x02B46780 SUB X31, X31, 0x90
	0x02B46784 STP X30, X25, [X31 + 0x50]
	0x02B46788 STP X24, X23, [X31 + 0x60]
	0x02B4678C STP X22, X21, [X31 + 0x70]
	0x02B46790 STP X20, X19, [X31 + 0x80]
	0x02B46794 ADRP X22, 0x1895000
	0x02B46798 LDRB W8, [X22 + 0x509]
	0x02B4679C MOV X20, X2
	0x02B467A0 MOV W21, W1
	0x02B467A4 MOV X19, X0
	0x02B467A8 TBNZ X8, 0x0, 0x2B46808
	0x02B467AC ADRP X0, 0x15D8000
	0x02B467B0 LDR X0, [X0 + 0xAD0]
	0x02B467B4 BL 0x1C16CF4
	0x02B467B8 ADRP X0, 0x15D8000
	0x02B467BC LDR X0, [X0 + 0xB00]
	0x02B467C0 BL 0x1C16CF4
	0x02B467C4 ADRP X0, 0x15D8000
	0x02B467C8 LDR X0, [X0 + 0xAC0]
	0x02B467CC BL 0x1C16CF4
	0x02B467D0 ADRP X0, 0x15D8000
	0x02B467D4 LDR X0, [X0 + 0xAE0]
	0x02B467D8 BL 0x1C16CF4
	0x02B467DC ADRP X0, 0x15D8000
	0x02B467E0 LDR X0, [X0 + 0xAE8]
	0x02B467E4 BL 0x1C16CF4
	0x02B467E8 ADRP X0, 0x15D8000
	0x02B467EC LDR X0, [X0 + 0xAF0]
	0x02B467F0 BL 0x1C16CF4
	0x02B467F4 ADRP X0, 0x15D8000
	0x02B467F8 LDR X0, [X0 + 0xAF8]
	0x02B467FC BL 0x1C16CF4
	0x02B46800 MOVZ W8, 0x1
	0x02B46804 STRB W8, [X22 + 0x509]
	0x02B46808 MOVI V0.2D, 0x0
	0x02B4680C STR W31, [X31 + 0x4C]
	0x02B46810 STP V0, V0, [X31 + 0x20]
	0x02B46814 LDR X0, [X19 + 0x68]
	0x02B46818 CBZ X0, 0x2B4697C
	0x02B4681C ADRP X8, 0x15D8000
	0x02B46820 LDR X8, [X8 + 0xAC0]
	0x02B46824 ADD X2, X31, 0x4C
	0x02B46828 MOV W1, W21
	0x02B4682C LDR X3, [X8]
	0x02B46830 BL 0x2A1B0D4
	0x02B46834 TBZ X0, 0x0, 0x2B4695C
	0x02B46838 LDR V0, [X19 + 0x9C]
	0x02B4683C LDR V1, [X31 + 0x4C]
	0x02B46840 LDR X0, [X19 + 0x68]
	0x02B46844 FSUB S0, S0, S1
	0x02B46848 STR S0, [X19 + 0x9C]
	0x02B4684C CBZ X0, 0x2B4697C
	0x02B46850 ADRP X8, 0x15D8000
	0x02B46854 LDR X8, [X8 + 0xB00]
	0x02B46858 MOV W1, W21
	0x02B4685C LDR X2, [X8]
	0x02B46860 BL 0x2A1AAFC
	0x02B46864 LDR X0, [X19 + 0x70]
	0x02B46868 CBZ X0, 0x2B4697C
	0x02B4686C LDR X8, [X20 + 0x20]
	0x02B46870 MOV W1, W21
	0x02B46874 LDR X8, [X8 + 0xC0]
	0x02B46878 LDR X2, [X8 + 0x1F8]
	0x02B4687C BL 0x29F2C8C
	0x02B46880 LDR X0, [X19 + 0x68]
	0x02B46884 CBZ X0, 0x2B4697C
	0x02B46888 ADRP X8, 0x15D8000
	0x02B4688C LDR X8, [X8 + 0xAD0]
	0x02B46890 LDR X1, [X8]
	0x02B46894 ADD X8, X31, 0x0
	0x02B46898 BL 0x2A19B84
	0x02B4689C LDP V0, V1, [X31]
	0x02B468A0 ADRP X25, 0x15D8000
	0x02B468A4 MOVN W24, 0x0
	0x02B468A8 STP V0, V1, [X31 + 0x20]
	0x02B468AC LDR X25, [X25 + 0xAE8]
	0x02B468B0 LDR X1, [X25]
	0x02B468B4 ADD X0, X31, 0x20
	0x02B468B8 BL 0x2BF6960
	0x02B468BC TBZ X0, 0x0, 0x2B46944
	0x02B468C0 LDR W22, [X31 + 0x30]
	0x02B468C4 CMP W22, W21
	0x02B468C8 B.LE 0x2B46938
	0x02B468CC LDR X0, [X19 + 0x70]
	0x02B468D0 CBZ X0, 0x2B46974
	0x02B468D4 LDR X8, [X20 + 0x20]
	0x02B468D8 LDR X8, [X8 + 0xC0]
	0x02B468DC LDR X2, [X8 + 0x1F0]
	0x02B468E0 MOV W1, W22
	0x02B468E4 BL 0x29F1808
	0x02B468E8 LDR X23, [X19 + 0x70]
	0x02B468EC STR X31, [X31]
	0x02B468F0 LDR X8, [X20 + 0x20]
	0x02B468F4 LDR V0, [X31 + 0x4C]
	0x02B468F8 FMOV S1, W0
	0x02B468FC LDR X8, [X8 + 0xC0]
	0x02B46900 FSUB S0, S1, S0
	0x02B46904 LDR X2, [X8 + 0x1E0]
	0x02B46908 UBFM X8, X0, 0x20, 0x3F
	0x02B4690C SUB W1, W8, 0x1
	0x02B46910 ADD X0, X31, 0x0
	0x02B46914 BL 0x29A00F8
	0x02B46918 CBZ X23, 0x2B46978
	0x02B4691C LDR X8, [X20 + 0x20]
	0x02B46920 LDR X2, [X31]
	0x02B46924 LDR X8, [X8 + 0xC0]
	0x02B46928 LDR X3, [X8 + 0x1E8]
	0x02B4692C MOV X0, X23
	0x02B46930 MOV W1, W22
	0x02B46934 BL 0x29F1894
	0x02B46938 CMP W24, W22
	0x02B4693C CSEL W24, W22, W24, LT
	0x02B46940 B 0x2B468B0
	0x02B46944 ADRP X8, 0x15D8000
	0x02B46948 LDR X8, [X8 + 0xAE0]
	0x02B4694C ADD X0, X31, 0x20
	0x02B46950 LDR X1, [X8]
	0x02B46954 BL 0x2BF6A64
	0x02B46958 STR W24, [X19 + 0x60]
	0x02B4695C LDP X20, X19, [X31 + 0x80]
	0x02B46960 LDP X22, X21, [X31 + 0x70]
	0x02B46964 LDP X24, X23, [X31 + 0x60]
	0x02B46968 LDP X30, X25, [X31 + 0x50]
	0x02B4696C ADD X31, X31, 0x90
	0x02B46970 RET
	0x02B46974 BL 0x1C16F20
	0x02B46978 BL 0x1C16F20
	0x02B4697C BL 0x1C16F20
	0x02B46980 B 0x2B46990
	0x02B46984 B 0x2B46990
	0x02B46988 B 0x2B46990
	0x02B4698C B 0x2B46990
	0x02B46990 MOV X20, X0
	0x02B46994 CMP W1, 0x1
	0x02B46998 B.NE 0x2B469CC
	0x02B4699C MOV X0, X20
	0x02B469A0 BL 0x3EB1AD0
	0x02B469A4 LDR X21, [X0]
	0x02B469A8 BL 0x3EB1AE0
	0x02B469AC ADRP X8, 0x15D8000
	0x02B469B0 LDR X8, [X8 + 0xAE0]
	0x02B469B4 ADD X0, X31, 0x20
	0x02B469B8 LDR X1, [X8]
	0x02B469BC BL 0x2BF6A64
	0x02B469C0 CBZ X21, 0x2B46958
	0x02B469C4 MOV X0, X21
	0x02B469C8 BL 0x1C16F18
	0x02B469CC MOV X21, X31
	0x02B469D0 B 0x2B469D8
	0x02B469D4 MOV X20, X0
	0x02B469D8 ADRP X8, 0x15D8000
	0x02B469DC LDR X8, [X8 + 0xAE0]
	0x02B469E0 LDR X1, [X8]
	0x02B469E4 ADD X0, X31, 0x20
	0x02B469E8 BL 0x2BF6A64
	0x02B469EC CBNZ X21, 0x2B469F8
	0x02B469F0 MOV X0, X20
	0x02B469F4 BL 0x1D2C690
	0x02B469F8 MOV X0, X21
	0x02B469FC BL 0x1C16F18
	0x02B46A00 BL 0x1990590
	0x02B46A04 SUB X31, X31, 0xA0
	0x02B46A08 STP X30, X25, [X31 + 0x60]
	0x02B46A0C STP X24, X23, [X31 + 0x70]
	0x02B46A10 STP X22, X21, [X31 + 0x80]
	0x02B46A14 STP X20, X19, [X31 + 0x90]
	0x02B46A18 ADRP X20, 0x1895000
	0x02B46A1C LDRB W8, [X20 + 0x50A]
	0x02B46A20 MOV X21, X1
	0x02B46A24 MOV X19, X0
	0x02B46A28 TBNZ X8, 0x0, 0x2B46AD0
	0x02B46A2C ADRP X0, 0x15D7000
	0x02B46A30 LDR X0, [X0 + 0x8D8]
	0x02B46A34 BL 0x1C16CF4
	0x02B46A38 ADRP X0, 0x15D8000
	0x02B46A3C LDR X0, [X0 + 0xB08]
	0x02B46A40 BL 0x1C16CF4
	0x02B46A44 ADRP X0, 0x15D7000
	0x02B46A48 LDR X0, [X0 + 0x8E0]
	0x02B46A4C BL 0x1C16CF4
	0x02B46A50 ADRP X0, 0x15D8000
	0x02B46A54 LDR X0, [X0 + 0xB10]
	0x02B46A58 BL 0x1C16CF4
	0x02B46A5C ADRP X0, 0x15D8000
	0x02B46A60 LDR X0, [X0 + 0xB18]
	0x02B46A64 BL 0x1C16CF4
	0x02B46A68 ADRP X0, 0x15D8000
	0x02B46A6C LDR X0, [X0 + 0xB20]
	0x02B46A70 BL 0x1C16CF4
	0x02B46A74 ADRP X0, 0x15D8000
	0x02B46A78 LDR X0, [X0 + 0xB28]
	0x02B46A7C BL 0x1C16CF4
	0x02B46A80 ADRP X0, 0x15D8000
	0x02B46A84 LDR X0, [X0 + 0xB30]
	0x02B46A88 BL 0x1C16CF4
	0x02B46A8C ADRP X0, 0x15D8000
	0x02B46A90 LDR X0, [X0 + 0xB38]
	0x02B46A94 BL 0x1C16CF4
	0x02B46A98 ADRP X0, 0x15D8000
	0x02B46A9C LDR X0, [X0 + 0xB40]
	0x02B46AA0 BL 0x1C16CF4
	0x02B46AA4 ADRP X0, 0x15D8000
	0x02B46AA8 LDR X0, [X0 + 0xB48]
	0x02B46AAC BL 0x1C16CF4
	0x02B46AB0 ADRP X0, 0x15AE000
	0x02B46AB4 LDR X0, [X0 + 0xE10]
	0x02B46AB8 BL 0x1C16CF4
	0x02B46ABC ADRP X0, 0x15D8000
	0x02B46AC0 LDR X0, [X0 + 0xB50]
	0x02B46AC4 BL 0x1C16CF4
	0x02B46AC8 MOVZ W8, 0x1
	0x02B46ACC STRB W8, [X20 + 0x50A]
	0x02B46AD0 STP X31, X31, [X31 + 0x40]
	0x02B46AD4 STR X31, [X31 + 0x50]
	0x02B46AD8 STP X31, X31, [X31 + 0x20]

ISIL:
	001 Move [X31-128], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X29
	005 Move [X31+40], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X22, 0x1896000
	017 Move W8, [X22+1282]
	018 Move X20, X2
	019 Move W21, W1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {42}
	025 Move X0, 0x15D9000
	026 Move X0, [X0+2728]
	027 Call 0x1C17CF4
	028 Move X0, 0x15D8000
	029 Move X0, [X0+3864]
	030 Call 0x1C17CF4
	031 Move X0, 0x15D7000
	032 Move X0, [X0+296]
	033 Call 0x1C17CF4
	034 Move X0, 0x15D8000
	035 Move X0, [X0+3848]
	036 Call 0x1C17CF4
	037 Move X0, 0x15D8000
	038 Move X0, [X0+3856]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+1282], W8
	042 Add X20, X20, 32
	043 Move X8, [X20]
	044 Move X0, X19
	045 Move X8, [X8+192]
	046 Move X1, [X8+184]
	047 Call 0x2B44118, X0
	048 Compare X19, 0
	049 JumpIfEqual {566}
	050 Move X8, [X20]
	051 Move X0, X19
	052 Move V8, V0
	053 Move X8, [X8+192]
	054 Move X1, [X8+16]
	055 Call 0x2843CF4, X0
	056 Compare X0, 0
	057 JumpIfEqual {566}
	058 Move X8, [X20]
	059 Move V9, [X0+20]
	060 Move X0, X19
	061 Move X8, [X8+192]
	062 Move X1, [X8+384]
	063 Call 0x2B443E0, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, -2147483648
	066 Compare TEMP, -2147483648
	067 JumpIfEqual {110}
	068 Move X8, [X19]
	069 Move X0, X19
	070 Move X9, [X8+376]
	071 Move X1, [X8+384]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X8, [X20]
	074 Move W22, W0
	075 Move X0, X19
	076 Move X8, [X8+192]
	077 Move X1, [X8+384]
	078 Call 0x2B443E0, X0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X8, [X20]
	081 Move X0, X19
	082 Move X8, [X8+192]
	083 Move X1, [X8+384]
	084 Call 0x2B443E0, X0
	085 Move X8, [X20]
	086 Move W1, W0
	087 Move X0, X19
	088 Move X8, [X8+192]
	089 Move X2, [X8+280]
	090 Call 0x2B45470, X0, X1
	091 Move X0, X19
	092 Call 0x2B46B70, X0
	093 Move X8, [X20]
	094 Move X0, X19
	095 Move X8, [X8+192]
	096 Move X1, [X8+384]
	097 Call 0x2B443E0, X0
	098 Move X8, [X19]
	099 Move W1, W0
	100 Move X0, X19
	101 Move X9, [X8+392]
	102 Move X2, [X8+400]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X8, [X20]
	105 Move X0, X19
	106 Move X8, [X8+192]
	107 Move X1, [X8+408]
	108 Call 0x2B44454, X0
	109 Move V9, V0
	110 Subtract S9, S9, S8
	111 Move X8, [X19]
	112 Move X0, X19
	113 Move X9, [X8+520]
	114 Move X1, [X8+528]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X8, [X20]
	117 Move X0, X19
	118 Move V8, V0
	119 Move X8, [X8+192]
	120 Move X1, [X8+144]
	121 Call 0x2B442A8, X0, V0
	122 Move X8, [X19]
	123 Move X0, X19
	124 Move X9, [X8+376]
	125 Move X1, [X8+384]
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X8, [X20]
	128 Subtract W1, W0, 1
	129 Move X0, X19
	130 Move X8, [X8+192]
	131 Move X2, [X8+176]
	132 Call 0x2B472D8, X0, X1
	133 Move X8, [X20]
	134 Move X0, X19
	135 Move X8, [X8+192]
	136 Move X1, [X8+272]
	137 Call 0x2B44144, X0, V0
	138 Move X8, [X19+16]
	139 Compare X8, 0
	140 JumpIfEqual {566}
	141 Move X0, [X8+1048]
	142 Compare X0, 0
	143 JumpIfEqual {566}
	144 Move X1, X31
	145 Call VisualElement.get_layout, X0
	146 Move X8, [X20]
	147 Subtract S0, S8, S3
	148 Move S1, W31
	149 Move X0, X19
	150 Move X8, [X8+192]
	151 NotImplemented "Instruction FMAX not yet implemented."
	152 Move X1, [X8+184]
	153 Call 0x2B44118, X0
	154 NotImplemented "Instruction FCMP not yet implemented."
	155 Move W8, [X19+136]
	156 Move V10, V8
	157 Compare W8, 0
	158 JumpIfNotEqual {192}
	159 Move W1, [X19+132]
	160 Add S0, S9, S0
	161 NotImplemented "Instruction FCMP not yet implemented."
	162 NotImplemented "Instruction FCSEL not yet implemented."
	163 Add W31, W1, 1
	164 Move X8, [X20]
	165 Move X0, X19
	166 Move X8, [X8+192]
	167 Move X2, [X8+176]
	168 Call 0x2B472D8, X0, X1
	169 Move X22, 0x15D8000
	170 Move X22, [X22+3864]
	171 Move V9, V0
	172 Move X0, [X22]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {178}
	176 Call 0x1C17DFC
	177 Move X0, [X22]
	178 Move X8, [X19+16]
	179 Compare X8, 0
	180 JumpIfEqual {566}
	181 Move X8, [X8+1048]
	182 Compare X8, 0
	183 JumpIfEqual {566}
	184 Move X9, [X0+184]
	185 Move X0, X8
	186 Move X1, X31
	187 Move W22, [X9+24]
	188 Call VisualElement.get_layout, X0
	189 NotImplemented "Instruction SCVTF not yet implemented."
	190 Add S0, S9, S0
	191 Subtract S10, S0, S3
	192 Move X8, [X19+16]
	193 Compare X8, 0
	194 JumpIfEqual {566}
	195 Move X8, [X8+1064]
	196 Compare X8, 0
	197 JumpIfEqual {566}
	198 Move X0, [X8+976]
	199 Compare X0, 0
	200 JumpIfEqual {566}
	201 Move X8, 0x15D9000
	202 Move X8, [X8+2728]
	203 Move V0, V8
	204 Move X1, [X8]
	205 Call BaseSlider`1<Single>.SetHighValueWithoutNotify, X0, V0
	206 Move X8, [X19+16]
	207 Compare X8, 0
	208 JumpIfEqual {566}
	209 Move X8, [X8+1064]
	210 Compare X8, 0
	211 JumpIfEqual {566}
	212 Move X0, [X8+976]
	213 Compare X0, 0
	214 JumpIfEqual {566}
	215 Move X8, [X0]
	216 Move V0, V10
	217 Move X9, [X8+2184]
	218 Move X1, [X8+2192]
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move X8, [X20]
	221 Move X0, X19
	222 Move X8, [X8+192]
	223 Move X1, [X8+16]
	224 Call 0x2843CF4, X0
	225 Compare X0, 0
	226 JumpIfEqual {566}
	227 Move X8, [X19+16]
	228 Compare X8, 0
	229 JumpIfEqual {566}
	230 Move X8, [X8+1064]
	231 Compare X8, 0
	232 JumpIfEqual {566}
	233 Move X22, X0
	234 Move X0, [X8+976]
	235 Compare X0, 0
	236 JumpIfEqual {566}
	237 Move X8, [X0]
	238 Move X9, [X8+2024]
	239 Move X1, [X8+2032]
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Move [X22+20], S0
	242 Move TEMP, X21
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfEqual {248}
	246 Move W8, [X19+140]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move X0, X19
	249 Move X20, [X31+112]
	250 Move X19, [X31+120]
	251 Move X22, [X31+96]
	252 Move X21, [X31+104]
	253 Move X24, [X31+80]
	254 Move X23, [X31+88]
	255 Move X26, [X31+64]
	256 Move X25, [X31+72]
	257 Move X28, [X31+48]
	258 Move X27, [X31+56]
	259 Move X29, [X31+32]
	260 Move X30, [X31+40]
	261 Move D9, [X31+16]
	262 Move D8, [X31+24]
	263 Move V10, [X31+128]
	264 Call 0x2B46EB8, X0
	265 Return 
	266 Move X8, [X20]
	267 Move X0, X19
	268 Move X8, [X8+192]
	269 Move X1, [X8+416]
	270 Call 0x2B45AA0, X0
	271 Move X8, [X20]
	272 Move X8, [X8+192]
	273 Move TEMP, X0
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfNotEqual {296}
	277 Move X1, [X8+56]
	278 Move X0, X19
	279 Move X20, [X31+112]
	280 Move X19, [X31+120]
	281 Move X22, [X31+96]
	282 Move X21, [X31+104]
	283 Move X24, [X31+80]
	284 Move X23, [X31+88]
	285 Move X26, [X31+64]
	286 Move X25, [X31+72]
	287 Move X28, [X31+48]
	288 Move X27, [X31+56]
	289 Move X29, [X31+32]
	290 Move X30, [X31+40]
	291 Move D9, [X31+16]
	292 Move D8, [X31+24]
	293 Move V10, [X31+128]
	294 Call 0x2B45C14, X0
	295 Return 
	296 Move X1, [X8+184]
	297 Move X0, X19
	298 Call 0x2B44118, X0
	299 Move X8, [X19]
	300 Move X0, X19
	301 Move V8, V0
	302 Move X9, [X8+376]
	303 Move X1, [X8+384]
	304 NotImplemented "Instruction BLR not yet implemented."
	305 Move X8, [X19+40]
	306 Move [X31+12], W0
	307 Compare X8, 0
	308 JumpIfEqual {566}
	309 Move X28, 0x15D7000
	310 Move X29, 0x15D8000
	311 Move X21, 0x15D8000
	312 Move X22, [X19+80]
	313 Move X28, [X28+296]
	314 Move X29, [X29+3856]
	315 Move X21, [X21+3848]
	316 Move W23, W31
	317 Move W24, W31
	318 Move W9, [X8+24]
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Move X9, [X20]
	321 Move X0, X8
	322 Move W1, W24
	323 Move X9, [X9+192]
	324 Move X2, [X9+296]
	325 Call List`1<Object>.get_Item, X0, X1
	326 Compare X0, 0
	327 JumpIfEqual {566}
	328 Move W25, [X0+32]
	329 Move X26, X0
	330 Move TEMP, X25
	331 And TEMP, TEMP, -2147483648
	332 Compare TEMP, -2147483648
	333 JumpIfEqual {480}
	334 Move X8, [X19]
	335 Move X0, X19
	336 Move W1, W25
	337 Move X9, [X8+504]
	338 Move X2, [X8+512]
	339 NotImplemented "Instruction BLR not yet implemented."
	340 Move X0, [X19+40]
	341 Compare X0, 0
	342 JumpIfEqual {566}
	343 Move X8, [X20]
	344 Move W1, W24
	345 Move V9, V0
	346 Move X8, [X8+192]
	347 Move X2, [X8+296]
	348 Call List`1<Object>.get_Item, X0, X1
	349 Compare X0, 0
	350 JumpIfEqual {566}
	351 Move X8, [X0]
	352 Move X9, [X8+376]
	353 Move X1, [X8+384]
	354 NotImplemented "Instruction BLR not yet implemented."
	355 Compare X0, 0
	356 JumpIfEqual {566}
	357 Move X1, X31
	358 Call VisualElement.get_style, X0
	359 Compare X0, 0
	360 JumpIfEqual {566}
	361 Move X8, [X0]
	362 Move X1, [X28]
	363 Move X27, X0
	364 NotImplemented "Instruction LDRH not yet implemented."
	365 Compare X9, 0
	366 JumpIfEqual {373}
	367 Move X10, [X8+176]
	368 Add X10, X10, 8
	369 NotImplemented "Instruction LDUR not yet implemented."
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Subtract X9, X9, 1
	372 Add X10, X10, 16
	373 Move W2, 17
	374 Move X0, X27
	375 Call 0x1C5D788
	376 Move W9, [X10]
	377 Add W9, W9, 17
	378 Add X8, X8, W9
	379 Add X0, X8, 312
	380 Move X8, [X0]
	381 Move X1, [X0+8]
	382 Move X0, X27
	383 NotImplemented "Instruction BLR not yet implemented."
	384 Move X1, [X29]
	385 Move X27, X0
	386 Move W0, W31
	387 Call 0x266FACC, X0
	388 Move X2, [X21]
	389 Move X1, X0
	390 Move X0, X27
	391 Call 0x266F9D0, X0, X1
	392 Move TEMP, X0
	393 And TEMP, TEMP, 1
	394 Compare TEMP, 1
	395 JumpIfNotEqual {469}
	396 Move X8, [X20]
	397 Move X0, X19
	398 Move X8, [X8+192]
	399 Move X1, [X8+16]
	400 Call 0x2843CF4, X0
	401 Compare X0, 0
	402 JumpIfEqual {566}
	403 Move V0, [X0+20]
	404 Add S1, S8, S9
	405 NotImplemented "Instruction FCMP not yet implemented."
	406 Move X8, [X20]
	407 Move X0, X19
	408 Move X8, [X8+192]
	409 Move X1, [X8+368]
	410 Call 0x2B444C8, X0
	411 NotImplemented "Instruction FCMP not yet implemented."
	412 Move X8, [X20]
	413 Move X0, X19
	414 Move W1, W24
	415 Move X8, [X8+192]
	416 Move X2, [X8+224]
	417 Call 0x2B4873C, X0, X1
	418 Move X8, [X26]
	419 Move X0, X26
	420 Move X9, [X8+376]
	421 Move X1, [X8+384]
	422 NotImplemented "Instruction BLR not yet implemented."
	423 Compare X0, 0
	424 JumpIfEqual {566}
	425 Move X1, X31
	426 Call VisualElement.BringToFront, X0
	427 Move X8, [X20]
	428 Move X0, X19
	429 Move W1, W24
	430 Move X8, [X8+192]
	431 Move X2, [X8+224]
	432 Call 0x2B4873C, X0, X1
	433 Compare X22, 0
	434 JumpIfEqual {566}
	435 Move X8, [X20]
	436 Move W10, [X22+28]
	437 Move X9, [X8+192]
	438 Move X8, [X22+16]
	439 Add W10, W10, 1
	440 Move X9, [X9+344]
	441 Move [X22+28], W10
	442 Compare X8, 0
	443 JumpIfEqual {566}
	444 NotImplemented "Instruction LDRSW not yet implemented."
	445 Move W11, [X8+24]
	446 NotImplemented "Instruction CMP not yet implemented."
	447 Add W9, W10, 1
	448 Add X8, X8, X10
	449 Move [X22+24], W9
	450 Move [X8+32], X26
	451 Move X8, [X9+32]
	452 Move X0, X22
	453 Move X1, X26
	454 Move X8, [X8+192]
	455 Move X2, [X8+112]
	456 Call List`1<Object>.AddWithResize, X0, X1
	457 Move X8, [X19]
	458 Move X0, X19
	459 Add W23, W23, 1
	460 Move X9, [X8+376]
	461 Move X1, [X8+384]
	462 NotImplemented "Instruction BLR not yet implemented."
	463 Move X8, [X19]
	464 Add W1, W0, 1
	465 Move X0, X19
	466 Move X9, [X8+392]
	467 Move X2, [X8+400]
	468 NotImplemented "Instruction BLR not yet implemented."
	469 Move X8, [X19]
	470 Move X0, X19
	471 Move W1, W25
	472 Move X9, [X8+504]
	473 Move X2, [X8+512]
	474 NotImplemented "Instruction BLR not yet implemented."
	475 Move X8, [X19+40]
	476 Add S8, S8, S0
	477 Add W24, W24, 1
	478 Compare X8, 0
	479 JumpIfNotEqual {318}
	480 Move X8, [X19+40]
	481 Compare X8, 0
	482 JumpIfEqual {566}
	483 Move X9, [X20]
	484 Move X0, X8
	485 Move W1, W31
	486 Move W2, W23
	487 Move X9, [X9+192]
	488 Move X3, [X9+352]
	489 Call List`1<Object>.RemoveRange, X0, X1, X2
	490 Move X0, [X19+40]
	491 Compare X0, 0
	492 JumpIfEqual {566}
	493 Move X8, [X20]
	494 Move X1, X22
	495 Move X8, [X8+192]
	496 Move X2, [X8+360]
	497 Call List`1<Object>.AddRange, X0, X1
	498 Move X8, [X19+80]
	499 Compare X8, 0
	500 JumpIfEqual {566}
	501 Move W2, [X8+24]
	502 Move W9, [X8+28]
	503 Add W9, W9, 1
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Move [X8+24], W31
	506 Move [X8+28], W9
	507 Move X0, [X8+16]
	508 Move W1, W31
	509 Move X3, X31
	510 Call Array.Clear, X0, X1, X2
	511 Move X8, [X19]
	512 Move X0, X19
	513 Move X9, [X8+376]
	514 Move X1, [X8+384]
	515 NotImplemented "Instruction BLR not yet implemented."
	516 Move W8, [X31+12]
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Move X8, [X19]
	519 Move X0, X19
	520 Move X9, [X8+376]
	521 Move X1, [X8+384]
	522 NotImplemented "Instruction BLR not yet implemented."
	523 Move X8, [X20]
	524 Subtract W1, W0, 1
	525 Move X0, X19
	526 Move X8, [X8+192]
	527 Move X2, [X8+176]
	528 Call 0x2B472D8, X0, X1
	529 Move X8, [X20]
	530 Move X0, X19
	531 Move X8, [X8+192]
	532 Move X1, [X8+272]
	533 Call 0x2B44144, X0, V0
	534 Move X8, [X20]
	535 Move X0, X19
	536 Move X8, [X8+192]
	537 Move X1, [X8+376]
	538 Call 0x2B46ADC, X0
	539 Move X0, X19
	540 Call 0x2B46EB8, X0
	541 Move X0, [X19+32]
	542 Move TEMP, 0
	543 Not TEMP
	544 Move W8, TEMP
	545 Move [X19+132], W8
	546 Compare X0, 0
	547 JumpIfEqual {566}
	548 Move X20, [X31+112]
	549 Move X19, [X31+120]
	550 Move X22, [X31+96]
	551 Move X21, [X31+104]
	552 Move X24, [X31+80]
	553 Move X23, [X31+88]
	554 Move X26, [X31+64]
	555 Move X25, [X31+72]
	556 Move X28, [X31+48]
	557 Move X27, [X31+56]
	558 Move X29, [X31+32]
	559 Move X30, [X31+40]
	560 Move D9, [X31+16]
	561 Move D8, [X31+24]
	562 Move X1, X31
	563 Move V10, [X31+128]
	564 Call VisualElement.SaveViewData, X0
	565 Return 
	566 Call 0x1C17F20

Method: System.Void UpdateAnchor()

Disassembly:
	0x02B46ADC STR X31, [X31 + 0x30]
	0x02B46AE0 LDR X8, [X21 + 0x20]
	0x02B46AE4 LDR W1, [X19 + 0x60]
	0x02B46AE8 MOV X0, X19
	0x02B46AEC LDR X8, [X8 + 0xC0]
	0x02B46AF0 LDR X2, [X8 + 0x50]
	0x02B46AF4 BL 0x2B47930
	0x02B46AF8 TBZ X0, 0x0, 0x2B46D0C
	0x02B46AFC ADRP X25, 0x15D7000
	0x02B46B00 LDR X25, [X25 + 0x8E0]
	0x02B46B04 LDR X0, [X25]
	0x02B46B08 LDR W8, [X0 + 0xE0]
	0x02B46B0C CBNZ W8, 0x2B46B14
	0x02B46B10 BL 0x1C16DFC
	0x02B46B14 ADRP X8, 0x15D7000
	0x02B46B18 LDR X8, [X8 + 0x8D8]
	0x02B46B1C LDR X0, [X8]
	0x02B46B20 BL 0x28F9448
	0x02B46B24 LDR X8, [X19 + 0x68]
	0x02B46B28 MOV X20, X0
	0x02B46B2C CBZ X8, 0x2B46D2C
	0x02B46B30 ADRP X9, 0x15D8000
	0x02B46B34 LDR X9, [X9 + 0xB10]
	0x02B46B38 LDR X1, [X9]
	0x02B46B3C MOV X0, X8
	0x02B46B40 BL 0x2A19580
	0x02B46B44 CBZ X0, 0x2B46D38
	0x02B46B48 ADRP X8, 0x15D8000
	0x02B46B4C LDR X8, [X8 + 0xB48]
	0x02B46B50 LDR X1, [X8]
	0x02B46B54 ADD X8, X31, 0x8
	0x02B46B58 BL 0x2EB8A88
	0x02B46B5C LDUR V0, [X31 + 0x8]
	0x02B46B60 LDR X8, [X31 + 0x18]
	0x02B46B64 ADRP X23, 0x15D8000
	0x02B46B68 LDR X23, [X23 + 0xB30]
	0x02B46B6C STR V0, [X31 + 0x4]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {43}
	007 Move X8, [X0]
	008 Move X20, X1
	009 Move X19, X0
	010 Move X9, [X8+376]
	011 Move X1, [X8+384]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X8, [X20+32]
	014 Move W1, W0
	015 Move X0, X19
	016 Move X8, [X8+192]
	017 Move X2, [X8+424]
	018 Call 0x2B4440C, X0, X1
	019 Move X8, [X20+32]
	020 Move X0, X19
	021 Move X8, [X8+192]
	022 Move X1, [X8+16]
	023 Call 0x2843CF4, X0
	024 Compare X0, 0
	025 JumpIfEqual {43}
	026 Move X8, [X20+32]
	027 Move V8, [X0+20]
	028 Move X0, X19
	029 Move X8, [X8+192]
	030 Move X1, [X8+184]
	031 Call 0x2B44118, X0
	032 Move X8, [X20+32]
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+8]
	037 Move X8, [X8+192]
	038 Subtract S0, S8, S0
	039 Move X1, [X8+432]
	040 Move V8, [X31+32]
	041 Call 0x2B44480, X0, V0
	042 Return 
	043 Call 0x1C17F20

Method: System.Void ScheduleFill()

Disassembly:
	0x02B46B70 STR X8, [X31 + 0x50]
	0x02B46B74 ADRP X24, 0x15AE000
	0x02B46B78 LDR X24, [X24 + 0xE10]
	0x02B46B7C LDR X1, [X23]
	0x02B46B80 ADD X0, X31, 0x40
	0x02B46B84 BL 0x2BF6E8C
	0x02B46B88 TBZ X0, 0x0, 0x2B46C08
	0x02B46B8C LDR X8, [X21 + 0x20]
	0x02B46B90 LDR W22, [X31 + 0x50]
	0x02B46B94 LDR X8, [X8 + 0xC0]
	0x02B46B98 LDR X2, [X8 + 0x50]
	0x02B46B9C MOV X0, X19
	0x02B46BA0 MOV W1, W22
	0x02B46BA4 BL 0x2B47930
	0x02B46BA8 TBZ X0, 0x0, 0x2B46B7C
	0x02B46BAC CBZ X20, 0x2B46D24
	0x02B46BB0 LDR W10, [X20 + 0x1C]
	0x02B46BB4 LDR X8, [X20 + 0x10]
	0x02B46BB8 LDR X9, [X24]
	0x02B46BBC ADD W10, W10, 0x1
	0x02B46BC0 STR W10, [X20 + 0x1C]
	0x02B46BC4 CBZ X8, 0x2B46D28
	0x02B46BC8 LDRSW X10, [X20 + 0x18]
	0x02B46BCC LDR W11, [X8 + 0x18]
	0x02B46BD0 CMP W10, W11
	0x02B46BD4 B.CS 0x2B46BEC
	0x02B46BD8 ADD W9, W10, 0x1
	0x02B46BDC ADD X8, X8, X10, 0x2, LSL
	0x02B46BE0 STR W9, [X20 + 0x18]
	0x02B46BE4 STR W22, [X8 + 0x20]
	0x02B46BE8 B 0x2B46B7C
	0x02B46BEC LDR X8, [X9 + 0x20]
	0x02B46BF0 LDR X8, [X8 + 0xC0]
	0x02B46BF4 LDR X2, [X8 + 0x70]
	0x02B46BF8 MOV X0, X20
	0x02B46BFC MOV W1, W22
	0x02B46C00 BL 0x2FDC70C
	0x02B46C04 B 0x2B46B7C
	0x02B46C08 MOV X22, X31
	0x02B46C0C MOVZ W23, 0x7
	0x02B46C10 ADRP X8, 0x15D8000
	0x02B46C14 LDR X8, [X8 + 0xB20]
	0x02B46C18 LDR X1, [X8]
	0x02B46C1C ADD X0, X31, 0x40
	0x02B46C20 BL 0x2BF6E88
	0x02B46C24 CBNZ X22, 0x2B46D3C
	0x02B46C28 CMP W23, 0x7
	0x02B46C2C B.EQ 0x2B46C34
	0x02B46C30 CBNZ W23, 0x2B46CCC
	0x02B46C34 CBZ X20, 0x2B46D44
	0x02B46C38 ADRP X8, 0x15D8000
	0x02B46C3C LDR X8, [X8 + 0xB50]
	0x02B46C40 LDR X1, [X8]
	0x02B46C44 ADD X8, X31, 0x8
	0x02B46C48 MOV X0, X20
	0x02B46C4C BL 0x2FDD2BC
	0x02B46C50 LDUR V0, [X31 + 0x8]
	0x02B46C54 LDR X8, [X31 + 0x18]
	0x02B46C58 ADRP X22, 0x15D8000
	0x02B46C5C STR V0, [X31 + 0x2]
	0x02B46C60 STR X8, [X31 + 0x30]
	0x02B46C64 LDR X22, [X22 + 0xB28]
	0x02B46C68 LDR X1, [X22]
	0x02B46C6C ADD X0, X31, 0x20
	0x02B46C70 BL 0x2BBDDA0
	0x02B46C74 TBZ X0, 0x0, 0x2B46C94
	0x02B46C78 LDR X8, [X21 + 0x20]
	0x02B46C7C LDR W1, [X31 + 0x30]
	0x02B46C80 LDR X8, [X8 + 0xC0]
	0x02B46C84 LDR X2, [X8 + 0x200]
	0x02B46C88 MOV X0, X19
	0x02B46C8C BL 0x2B46780
	0x02B46C90 B 0x2B46C68
	0x02B46C94 MOV X21, X31
	0x02B46C98 MOVZ W23, 0xA
	0x02B46C9C ADRP X8, 0x15D8000
	0x02B46CA0 LDR X8, [X8 + 0xB18]
	0x02B46CA4 LDR X1, [X8]
	0x02B46CA8 ADD X0, X31, 0x20
	0x02B46CAC BL 0x2BBDD9C
	0x02B46CB0 CBNZ X21, 0x2B46D48
	0x02B46CB4 CMP W23, 0xA
	0x02B46CB8 B.EQ 0x2B46CC0
	0x02B46CBC CBNZ W23, 0x2B46CCC
	0x02B46CC0 MOV X21, X31
	0x02B46CC4 MOVZ W23, 0xB
	0x02B46CC8 B 0x2B46CD0
	0x02B46CCC MOV X21, X31
	0x02B46CD0 LDR X0, [X25]
	0x02B46CD4 LDR W8, [X0 + 0xE0]
	0x02B46CD8 CBNZ W8, 0x2B46CE0
	0x02B46CDC BL 0x1C16DFC
	0x02B46CE0 ADRP X8, 0x15D8000
	0x02B46CE4 LDR X8, [X8 + 0xB08]
	0x02B46CE8 MOV X0, X20
	0x02B46CEC LDR X1, [X8]
	0x02B46CF0 BL 0x28F9588
	0x02B46CF4 CBNZ X21, 0x2B46D30
	0x02B46CF8 CMP W23, 0xB
	0x02B46CFC B.EQ 0x2B46D04
	0x02B46D00 CBNZ W23, 0x2B46D0C
	0x02B46D04 MOVZ W8, 0xBF800000
	0x02B46D08 STR W8, [X19 + 0xA0]
	0x02B46D0C LDP X20, X19, [X31 + 0x90]
	0x02B46D10 LDP X22, X21, [X31 + 0x80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1896000
	006 Move W8, [X20+1283]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x15D9000
	013 Move X0, [X0+2744]
	014 Call 0x1C17CF4
	015 Move X0, 0x15D6000
	016 Move X0, [X0+1664]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1283], W8
	020 Move X20, [X19+200]
	021 Compare X20, 0
	022 JumpIfEqual {39}
	023 Move X21, 0x15D9000
	024 Move X8, [X20]
	025 Move X21, [X21+2744]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X21]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 1
	037 Move X0, X20
	038 Call 0x1C5D788
	039 Move X0, [X19+32]
	040 Compare X0, 0
	041 JumpIfEqual {115}
	042 Move X1, X31
	043 Call VisualElement.get_schedule, X0
	044 Compare X0, 0
	045 JumpIfEqual {115}
	046 Move X10, 0x15D6000
	047 Move X8, [X0]
	048 Move X21, [X19+168]
	049 Move X10, [X10+1664]
	050 Move X20, X0
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 1
	062 Move X0, X20
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 1
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X1, [X0+8]
	070 Move X0, X20
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X19, [X19+200]
	073 Compare X19, 0
	074 JumpIfEqual {115}
	075 Move X8, [X19]
	076 Move X1, [X21]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move X0, X19
	087 Move W2, W31
	088 Call 0x1C5D788
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Add X8, X8, X9
	091 Add X0, X8, 312
	092 Move X2, [X0]
	093 Move X1, [X0+8]
	094 Move X0, X19
	095 Move X20, [X31+16]
	096 Move X19, [X31+24]
	097 Move X30, [X31+32]
	098 Move X21, [X31+40]
	099 CallNoReturn X2
	100 Move W9, [X10]
	101 Add W9, W9, 1
	102 Add X8, X8, W9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X2, [X0+8]
	106 Move X0, X20
	107 Move X1, X21
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move [X19+200], X0
	110 Move X20, [X31+16]
	111 Move X19, [X31+24]
	112 Move X30, [X31+32]
	113 Move X21, [X31+40]
	114 Return 
	115 Call 0x1C17F20

Method: System.Void ScheduleScroll()

Disassembly:
	0x02B46D14 LDP X24, X23, [X31 + 0x70]
	0x02B46D18 LDP X30, X25, [X31 + 0x60]
	0x02B46D1C ADD X31, X31, 0xA0
	0x02B46D20 RET
	0x02B46D24 BL 0x1C16F20
	0x02B46D28 BL 0x1C16F20
	0x02B46D2C BL 0x1C16F20
	0x02B46D30 MOV X0, X21
	0x02B46D34 BL 0x1C16F18
	0x02B46D38 BL 0x1C16F20
	0x02B46D3C MOV X0, X22
	0x02B46D40 BL 0x1C16F18
	0x02B46D44 BL 0x1C16F20
	0x02B46D48 MOV X0, X21
	0x02B46D4C BL 0x1C16F18
	0x02B46D50 B 0x2B46D68
	0x02B46D54 B 0x2B46D68
	0x02B46D58 B 0x2B46D68
	0x02B46D5C B 0x2B46D68
	0x02B46D60 B 0x2B46D68
	0x02B46D64 B 0x2B46D68
	0x02B46D68 MOV X23, X1
	0x02B46D6C MOV X24, X0
	0x02B46D70 B 0x2B46E20
	0x02B46D74 B 0x2B46DDC
	0x02B46D78 B 0x2B46D7C
	0x02B46D7C MOV X23, X1
	0x02B46D80 MOV X24, X0
	0x02B46D84 CMP W23, 0x1
	0x02B46D88 B.NE 0x2B46DA4
	0x02B46D8C MOV X0, X24
	0x02B46D90 BL 0x3EB1AD0
	0x02B46D94 LDR X21, [X0]
	0x02B46D98 BL 0x3EB1AE0
	0x02B46D9C MOV W23, W31
	0x02B46DA0 B 0x2B46C9C
	0x02B46DA4 MOV X21, X31
	0x02B46DA8 ADRP X8, 0x15D8000
	0x02B46DAC LDR X8, [X8 + 0xB18]
	0x02B46DB0 LDR X1, [X8]
	0x02B46DB4 ADD X0, X31, 0x20
	0x02B46DB8 BL 0x2BBDD9C
	0x02B46DBC CBZ X21, 0x2B46E20
	0x02B46DC0 MOV X0, X21
	0x02B46DC4 BL 0x1C16F18
	0x02B46DC8 MOV X23, X1
	0x02B46DCC MOV X24, X0
	0x02B46DD0 B 0x2B46DA8
	0x02B46DD4 B 0x2B46DDC
	0x02B46DD8 B 0x2B46DDC
	0x02B46DDC MOV X23, X1
	0x02B46DE0 MOV X24, X0
	0x02B46DE4 CMP W23, 0x1
	0x02B46DE8 B.NE 0x2B46E04
	0x02B46DEC MOV X0, X24
	0x02B46DF0 BL 0x3EB1AD0
	0x02B46DF4 LDR X22, [X0]
	0x02B46DF8 BL 0x3EB1AE0
	0x02B46DFC MOV W23, W31
	0x02B46E00 B 0x2B46C10
	0x02B46E04 MOV X22, X31
	0x02B46E08 ADRP X8, 0x15D8000
	0x02B46E0C LDR X8, [X8 + 0xB20]
	0x02B46E10 LDR X1, [X8]
	0x02B46E14 ADD X0, X31, 0x40
	0x02B46E18 BL 0x2BF6E88
	0x02B46E1C CBNZ X22, 0x2B46E48
	0x02B46E20 CMP W23, 0x1
	0x02B46E24 B.NE 0x2B46E40
	0x02B46E28 MOV X0, X24
	0x02B46E2C BL 0x3EB1AD0
	0x02B46E30 LDR X21, [X0]
	0x02B46E34 BL 0x3EB1AE0
	0x02B46E38 MOV W23, W31
	0x02B46E3C B 0x2B46CD0
	0x02B46E40 MOV X21, X31
	0x02B46E44 B 0x2B46E60
	0x02B46E48 MOV X0, X22
	0x02B46E4C BL 0x1C16F18
	0x02B46E50 MOV X23, X1
	0x02B46E54 MOV X24, X0
	0x02B46E58 B 0x2B46E08
	0x02B46E5C MOV X24, X0
	0x02B46E60 LDR X0, [X25]
	0x02B46E64 LDR W8, [X0 + 0xE0]
	0x02B46E68 CBNZ W8, 0x2B46E70
	0x02B46E6C BL 0x1C16DFC
	0x02B46E70 ADRP X8, 0x15D8000
	0x02B46E74 LDR X8, [X8 + 0xB08]
	0x02B46E78 LDR X1, [X8]
	0x02B46E7C MOV X0, X20
	0x02B46E80 BL 0x28F9588
	0x02B46E84 CBNZ X21, 0x2B46E90
	0x02B46E88 MOV X0, X24
	0x02B46E8C BL 0x1D2C690
	0x02B46E90 MOV X0, X21
	0x02B46E94 BL 0x1C16F18
	0x02B46E98 BL 0x1990590
	0x02B46E9C STP X30, X21, [X31 - 0x20]!
	0x02B46EA0 STP X20, X19, [X31 + 0x10]
	0x02B46EA4 CBZ X1, 0x2B46F64
	0x02B46EA8 LDR W8, [X1 + 0x20]
	0x02B46EAC MOV X21, X1
	0x02B46EB0 ADDS W31, W8, 0x1
	0x02B46EB4 B.EQ 0x2B46F58

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1896000
	006 Move W8, [X20+1284]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x15D9000
	013 Move X0, [X0+2744]
	014 Call 0x1C17CF4
	015 Move X0, 0x15D6000
	016 Move X0, [X0+1664]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1284], W8
	020 Move X20, [X19+208]
	021 Compare X20, 0
	022 JumpIfEqual {39}
	023 Move X21, 0x15D9000
	024 Move X8, [X20]
	025 Move X21, [X21+2744]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X21]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 1
	037 Move X0, X20
	038 Call 0x1C5D788
	039 Move X0, [X19+32]
	040 Compare X0, 0
	041 JumpIfEqual {115}
	042 Move X1, X31
	043 Call VisualElement.get_schedule, X0
	044 Compare X0, 0
	045 JumpIfEqual {115}
	046 Move X10, 0x15D6000
	047 Move X8, [X0]
	048 Move X21, [X19+176]
	049 Move X10, [X10+1664]
	050 Move X20, X0
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 1
	062 Move X0, X20
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 1
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X1, [X0+8]
	070 Move X0, X20
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X19, [X19+208]
	073 Compare X19, 0
	074 JumpIfEqual {115}
	075 Move X8, [X19]
	076 Move X1, [X21]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move X0, X19
	087 Move W2, W31
	088 Call 0x1C5D788
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Add X8, X8, X9
	091 Add X0, X8, 312
	092 Move X2, [X0]
	093 Move X1, [X0+8]
	094 Move X0, X19
	095 Move X20, [X31+16]
	096 Move X19, [X31+24]
	097 Move X30, [X31+32]
	098 Move X21, [X31+40]
	099 CallNoReturn X2
	100 Move W9, [X10]
	101 Add W9, W9, 1
	102 Add X8, X8, W9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X2, [X0+8]
	106 Move X0, X20
	107 Move X1, X21
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move [X19+208], X0
	110 Move X20, [X31+16]
	111 Move X19, [X31+24]
	112 Move X30, [X31+32]
	113 Move X21, [X31+40]
	114 Return 
	115 Call 0x1C17F20

Method: System.Void ScheduleScrollDirectionReset()

Disassembly:
	0x02B46EB8 LDRB W8, [X21 + 0x28]
	0x02B46EBC CBNZ W8, 0x2B46F58
	0x02B46EC0 LDR X8, [X21]
	0x02B46EC4 MOV X19, X0
	0x02B46EC8 MOV X0, X21
	0x02B46ECC MOV X20, X2
	0x02B46ED0 LDP X9, X1, [X8 + 0x178]
	0x02B46ED4 BLR X9
	0x02B46ED8 CBZ X0, 0x2B46F64
	0x02B46EDC MOV X1, X31
	0x02B46EE0 BL 0x3DEC528
	0x02B46EE4 FMOV W8, S3
	0x02B46EE8 AND W8, W8, 0x7FFFFFFF
	0x02B46EEC MOVZ W9, 0x7F800000
	0x02B46EF0 CMP W8, W9
	0x02B46EF4 B.HI 0x2B46F58
	0x02B46EF8 LDR X8, [X21]
	0x02B46EFC MOV X0, X21
	0x02B46F00 LDP X9, X1, [X8 + 0x178]
	0x02B46F04 BLR X9
	0x02B46F08 CBZ X0, 0x2B46F64
	0x02B46F0C MOV X1, X31
	0x02B46F10 BL 0x3DEC528
	0x02B46F14 FCMP S3, 0x0
	0x02B46F18 B.EQ 0x2B46F58
	0x02B46F1C LDR X8, [X20 + 0x20]
	0x02B46F20 MOV X0, X19
	0x02B46F24 MOV X1, X21
	0x02B46F28 LDR X8, [X8 + 0xC0]
	0x02B46F2C LDR X2, [X8 + 0x208]
	0x02B46F30 BL 0x2B46F68
	0x02B46F34 TBZ X0, 0x0, 0x2B46F58
	0x02B46F38 LDR X8, [X20 + 0x20]
	0x02B46F3C MOV X0, X19
	0x02B46F40 LDP X20, X19, [X31 + 0x10]
	0x02B46F44 MOV W1, W31
	0x02B46F48 LDR X8, [X8 + 0xC0]
	0x02B46F4C LDR X2, [X8 + 0x190]
	0x02B46F50 LDP X30, X21, [X31], #0x20
	0x02B46F54 B 0x2B45354
	0x02B46F58 LDP X20, X19, [X31 + 0x10]
	0x02B46F5C LDP X30, X21, [X31], #0x20
	0x02B46F60 RET
	0x02B46F64 BL 0x1C16F20
	0x02B46F68 STP D11, D10, [X31 - 0x50]!
	0x02B46F6C STP D9, D8, [X31 + 0x10]
	0x02B46F70 STR X30, [X31 + 0x20]
	0x02B46F74 STP X22, X21, [X31 + 0x30]
	0x02B46F78 STP X20, X19, [X31 + 0x40]
	0x02B46F7C ADRP X22, 0x1895000
	0x02B46F80 LDRB W8, [X22 + 0x50B]
	0x02B46F84 MOV X21, X2
	0x02B46F88 MOV X20, X1
	0x02B46F8C MOV X19, X0
	0x02B46F90 TBNZ X8, 0x0, 0x2B46FCC
	0x02B46F94 ADRP X0, 0x15D8000
	0x02B46F98 LDR X0, [X0 + 0xAC0]
	0x02B46F9C BL 0x1C16CF4
	0x02B46FA0 ADRP X0, 0x15BA000
	0x02B46FA4 LDR X0, [X0 + 0x5A0]
	0x02B46FA8 BL 0x1C16CF4
	0x02B46FAC ADRP X0, 0x15B4000
	0x02B46FB0 LDR X0, [X0 + 0x850]
	0x02B46FB4 BL 0x1C16CF4
	0x02B46FB8 ADRP X0, 0x15D6000
	0x02B46FBC LDR X0, [X0 + 0x120]
	0x02B46FC0 BL 0x1C16CF4
	0x02B46FC4 MOVZ W8, 0x1
	0x02B46FC8 STRB W8, [X22 + 0x50B]
	0x02B46FCC STR W31, [X31 + 0x2C]
	0x02B46FD0 CBZ X20, 0x2B47384
	0x02B46FD4 LDR W8, [X20 + 0x20]
	0x02B46FD8 ADDS W31, W8, 0x1
	0x02B46FDC B.EQ 0x2B47360
	0x02B46FE0 LDRB W8, [X20 + 0x28]
	0x02B46FE4 CBNZ W8, 0x2B47360
	0x02B46FE8 LDR X8, [X20]
	0x02B46FEC MOV X0, X20
	0x02B46FF0 LDP X9, X1, [X8 + 0x178]
	0x02B46FF4 BLR X9
	0x02B46FF8 CBZ X0, 0x2B47384
	0x02B46FFC MOV X1, X31
	0x02B47000 BL 0x3DEC528
	0x02B47004 FMOV W8, S3
	0x02B47008 AND W8, W8, 0x7FFFFFFF
	0x02B4700C MOVZ W9, 0x7F800000
	0x02B47010 CMP W8, W9
	0x02B47014 B.HI 0x2B47360
	0x02B47018 LDR X8, [X20]
	0x02B4701C MOV X0, X20
	0x02B47020 LDP X9, X1, [X8 + 0x178]
	0x02B47024 BLR X9
	0x02B47028 CBZ X0, 0x2B47384
	0x02B4702C MOV X1, X31
	0x02B47030 BL 0x3DEC528
	0x02B47034 FCMP S3, 0x0
	0x02B47038 B.EQ 0x2B47360
	0x02B4703C LDR X8, [X20]
	0x02B47040 MOV X0, X20
	0x02B47044 LDP X9, X1, [X8 + 0x178]
	0x02B47048 BLR X9
	0x02B4704C CBZ X0, 0x2B47384
	0x02B47050 MOV X1, X31
	0x02B47054 BL 0x3DEC528
	0x02B47058 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1896000
	006 Move W8, [X20+1285]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x15D9000
	013 Move X0, [X0+2744]
	014 Call 0x1C17CF4
	015 Move X0, 0x15D6000
	016 Move X0, [X0+1664]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1285], W8
	020 Move X20, [X19+216]
	021 Compare X20, 0
	022 JumpIfEqual {39}
	023 Move X21, 0x15D9000
	024 Move X8, [X20]
	025 Move X21, [X21+2744]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X21]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 1
	037 Move X0, X20
	038 Call 0x1C5D788
	039 Move X0, [X19+32]
	040 Compare X0, 0
	041 JumpIfEqual {115}
	042 Move X1, X31
	043 Call VisualElement.get_schedule, X0
	044 Compare X0, 0
	045 JumpIfEqual {115}
	046 Move X10, 0x15D6000
	047 Move X8, [X0]
	048 Move X21, [X19+184]
	049 Move X10, [X10+1664]
	050 Move X20, X0
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 1
	062 Move X0, X20
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 1
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X1, [X0+8]
	070 Move X0, X20
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X19, [X19+216]
	073 Compare X19, 0
	074 JumpIfEqual {115}
	075 Move X8, [X19]
	076 Move X1, [X21]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move X0, X19
	087 Move W2, W31
	088 Call 0x1C5D788
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Add X8, X8, X9
	091 Add X0, X8, 312
	092 Move X2, [X0]
	093 Move X1, [X0+8]
	094 Move X0, X19
	095 Move X20, [X31+16]
	096 Move X19, [X31+24]
	097 Move X30, [X31+32]
	098 Move X21, [X31+40]
	099 CallNoReturn X2
	100 Move W9, [X10]
	101 Add W9, W9, 1
	102 Add X8, X8, W9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X2, [X0+8]
	106 Move X0, X20
	107 Move X1, X21
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move [X19+216], X0
	110 Move X20, [X31+16]
	111 Move X19, [X31+24]
	112 Move X30, [X31+32]
	113 Move X21, [X31+40]
	114 Return 
	115 Call 0x1C17F20

Method: System.Void ResetScroll()

Disassembly:
	0x02B4705C MOV V8.16B, V3.16B
	0x02B47060 BL 0x2B4308C
	0x02B47064 FCMP S8, S0
	0x02B47068 B.PL 0x2B470B4
	0x02B4706C LDR X8, [X20]
	0x02B47070 MOV X0, X20
	0x02B47074 LDP X9, X1, [X8 + 0x178]
	0x02B47078 BLR X9
	0x02B4707C CBZ X0, 0x2B47384
	0x02B47080 MOV X1, X31
	0x02B47084 BL 0x3DEC528
	0x02B47088 LDR X0, [X19 + 0x10]
	0x02B4708C STR S3, [X19 + 0xA0]
	0x02B47090 CBZ X0, 0x2B47384
	0x02B47094 MOV X1, X31
	0x02B47098 BL 0x3DEC528
	0x02B4709C LDR X8, [X19]
	0x02B470A0 MOV V0.16B, V2.16B
	0x02B470A4 MOV V1.16B, V3.16B
	0x02B470A8 MOV X0, X19
	0x02B470AC LDP X9, X1, [X8 + 0x1C8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+16]
	006 Move [X19+140], W31
	007 Move [X19+144], W31
	008 Compare X0, 0
	009 JumpIfEqual {27}
	010 Move X20, X1
	011 Move X1, X31
	012 Call ScrollView.UpdateContentViewTransform, X0
	013 Move X8, [X20+32]
	014 Move X0, X19
	015 Move X8, [X8+192]
	016 Move X1, [X8+376]
	017 Call 0x2B46ADC, X0
	018 Move X0, [X19+32]
	019 Compare X0, 0
	020 JumpIfEqual {27}
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, X31
	024 Move X30, [X31+32]
	025 Call VisualElement.SaveViewData, X0
	026 Return 
	027 Call 0x1C17F20

Method: System.Int32 GetIndexFromPosition(UnityEngine.Vector2 position)

Disassembly:
	0x02B470B0 BLR X9
	0x02B470B4 LDR X8, [X20]
	0x02B470B8 MOV X0, X20
	0x02B470BC LDP X9, X1, [X8 + 0x178]
	0x02B470C0 BLR X9
	0x02B470C4 CBZ X0, 0x2B47384
	0x02B470C8 MOV X1, X31
	0x02B470CC BL 0x3DEC528
	0x02B470D0 LDR X8, [X20]
	0x02B470D4 MOV X0, X20
	0x02B470D8 MOV V9.16B, V3.16B
	0x02B470DC LDP X9, X1, [X8 + 0x178]
	0x02B470E0 BLR X9
	0x02B470E4 CBZ X0, 0x2B47384
	0x02B470E8 MOV X1, X31
	0x02B470EC BL 0x3DE0EB8
	0x02B470F0 CBZ X0, 0x2B47384
	0x02B470F4 ADRP X10, 0x15D5000
	0x02B470F8 LDR X8, [X0]
	0x02B470FC LDR X10, [X10 + 0x120]
	0x02B47100 MOV X22, X0
	0x02B47104 LDRH W9, [X8 + 0x12E]
	0x02B47108 LDR X1, [X10]
	0x02B4710C CBZ X9, 0x2B47130
	0x02B47110 LDR X10, [X8 + 0xB0]
	0x02B47114 ADD X10, X10, 0x8
	0x02B47118 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 Move X19, X0
	008 Compare X0, 0
	009 JumpIfEqual {34}
	010 Move V8, V1
	011 Move S9, W31
	012 Move TEMP, 0
	013 Not TEMP
	014 Move W20, TEMP
	015 Move X8, [X19]
	016 Add W20, W20, 1
	017 Move X0, X19
	018 Move W1, W20
	019 Move X9, [X8+504]
	020 Move X2, [X8+512]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Add S9, S9, S0
	023 NotImplemented "Instruction FCMP not yet implemented."
	024 Move TEMP, 0
	025 Not TEMP
	026 Move W20, TEMP
	027 Move W0, W20
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move D9, [X31+48]
	032 Move D8, [X31+56]
	033 Return X0
	034 Call 0x1C17F20

Method: System.Single GetExpectedItemHeight(System.Int32 index)

Disassembly:
	0x02B4711C CMP X11, X1
	0x02B47120 B.EQ 0x2B47140
	0x02B47124 SUBS X9, X9, 0x1
	0x02B47128 ADD X10, X10, 0x10
	0x02B4712C B.NE 0x2B47118
	0x02B47130 MOVZ W2, 0x1F
	0x02B47134 MOV X0, X22
	0x02B47138 BL 0x1C5C788
	0x02B4713C B 0x2B47150
	0x02B47140 LDR W9, [X10]
	0x02B47144 ADD W9, W9, 0x1F
	0x02B47148 ADD X8, X8, W9, 0x4, SXTW
	0x02B4714C ADD X0, X8, 0x138
	0x02B47150 LDP X8, X1, [X0]
	0x02B47154 MOV X0, X22
	0x02B47158 BLR X8
	0x02B4715C LDR X0, [X19 + 0x68]
	0x02B47160 CBZ X0, 0x2B47384
	0x02B47164 ADRP X8, 0x15D7000
	0x02B47168 LDR W1, [X20 + 0x20]
	0x02B4716C LDR X8, [X8 + 0xAC0]
	0x02B47170 ADD X2, X31, 0x2C
	0x02B47174 MOV V10.16B, V0.16B
	0x02B47178 LDR X3, [X8]
	0x02B4717C BL 0x2A1B0D4
	0x02B47180 MOV W22, W0
	0x02B47184 TBZ X0, 0x0, 0x2B471A0
	0x02B47188 LDR X8, [X19]
	0x02B4718C LDR W1, [X20 + 0x20]
	0x02B47190 MOV X0, X19
	0x02B47194 LDP X9, X2, [X8 + 0x1F8]
	0x02B47198 BLR X9
	0x02B4719C B 0x2B471A8
	0x02B471A0 MOV X0, X19
	0x02B471A4 BL 0x2B4308C
	0x02B471A8 LDR X8, [X19 + 0x78]
	0x02B471AC MOV V8.16B, V0.16B
	0x02B471B0 CBZ X8, 0x2B47384
	0x02B471B4 LDR W8, [X8 + 0x20]
	0x02B471B8 FSUB S9, S9, S10
	0x02B471BC CBNZ W8, 0x2B47268
	0x02B471C0 FCMP S9, S8
	0x02B471C4 B.LE 0x2B471D0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1895000
	007 Move W8, [X22+1286]
	008 Move X21, X2
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x15D8000
	016 Move X0, [X0+2752]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1286], W8
	020 Move [X31+12], W31
	021 Compare X19, 0
	022 JumpIfEqual {56}
	023 Move X8, [X21+32]
	024 Move X0, X19
	025 Move X8, [X8+192]
	026 Move X1, [X8+440]
	027 Call 0x2845DC0, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, -2147483648
	030 Compare TEMP, -2147483648
	031 JumpIfEqual {34}
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move S0, W31
	034 Move X0, [X19+104]
	035 Compare X0, 0
	036 JumpIfEqual {56}
	037 Move X8, 0x15D8000
	038 Move X8, [X8+2752]
	039 Add X2, X31, 12
	040 Move W1, W20
	041 Move X3, [X8]
	042 Call Dictionary`2<Int32, Single>.TryGetValue, X0, X1, X2
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {48}
	047 Move V0, [X31+12]
	048 Move X0, X19
	049 Call 0x2B4408C, X0
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return V0
	056 Call 0x1C17F20

Method: System.Int32 GetFirstVisibleItem(System.Single offset)

Disassembly:
	0x02B471C8 STRB W31, [X19 + 0x88]
	0x02B471CC B 0x2B47268
	0x02B471D0 LDR X8, [X21 + 0x20]
	0x02B471D4 MOV X0, X19
	0x02B471D8 LDR X8, [X8 + 0xC0]
	0x02B471DC LDR X1, [X8 + 0x98]
	0x02B471E0 BL 0x2B4327C
	0x02B471E4 LDR X8, [X19 + 0x10]
	0x02B471E8 CBZ X8, 0x2B47384
	0x02B471EC LDR X0, [X8 + 0x418]
	0x02B471F0 CBZ X0, 0x2B47384
	0x02B471F4 MOV X1, X31
	0x02B471F8 MOV V10.16B, V0.16B
	0x02B471FC BL 0x3DEC528
	0x02B47200 FSUB S0, S10, S3
	0x02B47204 FMOV S1, W31
	0x02B47208 FMAX S0, S0, S1
	0x02B4720C FCMP S0, 0x0
	0x02B47210 B.LE 0x2B47260
	0x02B47214 LDR X8, [X21 + 0x20]
	0x02B47218 MOV X0, X19
	0x02B4721C LDR X8, [X8 + 0xC0]
	0x02B47220 LDR X1, [X8 + 0x10]
	0x02B47224 BL 0x2842CF4
	0x02B47228 CBZ X0, 0x2B47384
	0x02B4722C LDR X8, [X19 + 0x10]
	0x02B47230 CBZ X8, 0x2B47384
	0x02B47234 LDR X8, [X8 + 0x428]
	0x02B47238 CBZ X8, 0x2B47384

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X20, X0
	007 Compare X0, 0
	008 JumpIfEqual {32}
	009 Move V8, V0
	010 Move TEMP, 0
	011 Not TEMP
	012 Move W19, TEMP
	013 Move X8, [X20]
	014 Add W19, W19, 1
	015 Move X0, X20
	016 Move W1, W19
	017 Move X9, [X8+504]
	018 Move X2, [X8+512]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Subtract S8, S8, S0
	021 NotImplemented "Instruction FCMP not yet implemented."
	022 Move W19, W31
	023 Move TEMP, 0
	024 Not TEMP
	025 Move W19, TEMP
	026 Move W0, W19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+8]
	030 Move V8, [X31+32]
	031 Return X0
	032 Call 0x1C17F20

Method: System.Single GetExpectedContentHeight()

Disassembly:
	0x02B4723C LDR V10, [X0 + 0x14]
	0x02B47240 MOV X0, X8
	0x02B47244 MOV X1, X31
	0x02B47248 FSUB S11, S9, S8
	0x02B4724C BL 0x3D83FE4
	0x02B47250 FADD S0, S11, S0
	0x02B47254 FCMP S10, S0
	0x02B47258 CSET W8, GE
	0x02B4725C B 0x2B47264
	0x02B47260 MOV W8, W31
	0x02B47264 STRB W8, [X19 + 0x88]
	0x02B47268 TBZ X22, 0x0, 0x2B472E8
	0x02B4726C ADRP X22, 0x1892000
	0x02B47270 LDRB W8, [X22 + 0x5AA]
	0x02B47274 LDR V10, [X31 + 0x2C]
	0x02B47278 CBNZ W8, 0x2B47290
	0x02B4727C ADRP X0, 0x15B3000
	0x02B47280 LDR X0, [X0 + 0x4B8]
	0x02B47284 BL 0x1C16CF4
	0x02B47288 MOVZ W8, 0x1
	0x02B4728C STRB W8, [X22 + 0x5AA]
	0x02B47290 ADRP X8, 0x15B3000
	0x02B47294 LDR X8, [X8 + 0x4B8]
	0x02B47298 ADRP X9, 0xFFFFFFFFFDFA3000
	0x02B4729C LDR V0, [X9 + 0x240]
	0x02B472A0 FABS S1, S9
	0x02B472A4 LDR X8, [X8]
	0x02B472A8 FABS S2, S10
	0x02B472AC FCMP S1, S2
	0x02B472B0 FCSEL S1, S1, S2, GT
	0x02B472B4 LDR X8, [X8 + 0xB8]
	0x02B472B8 FMUL S0, S1, S0
	0x02B472BC FMOV S1, 8
	0x02B472C0 LDR V3, [X8]
	0x02B472C4 FMUL S1, S3, S1
	0x02B472C8 FCMP S0, S1
	0x02B472CC FCSEL S0, S0, S1, GT
	0x02B472D0 FABD S1, S10, S10
	0x02B472D4 FCMP S1, S0

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1895000
	007 Move W8, [X21+1287]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x15D8000
	015 Move X0, [X0+2760]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1287], W8
	019 Move X8, [X20+32]
	020 Move V8, [X19+156]
	021 Move X0, X19
	022 Move X8, [X8+192]
	023 Move X1, [X8+168]
	024 Call 0x2843AE0, X0
	025 Move X8, [X19+104]
	026 Compare X8, 0
	027 JumpIfEqual {47}
	028 Move X9, 0x15D8000
	029 Move X9, [X9+2760]
	030 Move W20, W0
	031 Move X0, X8
	032 Move X1, [X9]
	033 Call Dictionary`2<Int32, Single>.get_Count, X0
	034 Move W21, W0
	035 Move X0, X19
	036 Call 0x2B4408C, X0
	037 Subtract W8, W20, W21
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Move X21, [X31+24]
	042 NotImplemented "Instruction SCVTF not yet implemented."
	043 Multiply S0, S0, S1
	044 Add S0, S8, S0
	045 Move V8, [X31+48]
	046 Return V0
	047 Call 0x1C17F20

Method: System.Single GetContentHeightForIndex(System.Int32 lastIndex)

Disassembly:
	0x02B472D8 B.PL 0x2B472E8
	0x02B472DC LDR X0, [X19 + 0x78]
	0x02B472E0 CBNZ X0, 0x2B47330
	0x02B472E4 B 0x2B47384
	0x02B472E8 LDR X8, [X21 + 0x20]
	0x02B472EC LDR W1, [X20 + 0x20]
	0x02B472F0 MOV X0, X19
	0x02B472F4 MOV V0.16B, V9.16B
	0x02B472F8 LDR X8, [X8 + 0xC0]
	0x02B472FC LDR X2, [X8 + 0x210]
	0x02B47300 BL 0x2B46468
	0x02B47304 LDR X8, [X21 + 0x20]
	0x02B47308 MOV X0, X19
	0x02B4730C MOV V0.16B, V8.16B
	0x02B47310 MOV V1.16B, V9.16B
	0x02B47314 LDR X8, [X8 + 0xC0]
	0x02B47318 LDR X1, [X8 + 0x218]
	0x02B4731C BL 0x2B45238
	0x02B47320 LDR X0, [X19 + 0x78]
	0x02B47324 CBZ X0, 0x2B47384
	0x02B47328 LDR W8, [X0 + 0x20]
	0x02B4732C CBZ W8, 0x2B4737C
	0x02B47330 ADRP X8, 0x15B9000
	0x02B47334 LDR W1, [X20 + 0x20]
	0x02B47338 LDR X8, [X8 + 0x5A0]
	0x02B4733C LDR X2, [X8]
	0x02B47340 BL 0x2DAA770
	0x02B47344 TBZ X0, 0x0, 0x2B47360
	0x02B47348 LDR X8, [X19 + 0x78]
	0x02B4734C CBZ X8, 0x2B47384
	0x02B47350 LDR W8, [X8 + 0x20]
	0x02B47354 CMP W8, 0x0
	0x02B47358 CSET W0, EQ
	0x02B4735C B 0x2B47364
	0x02B47360 MOV W0, W31
	0x02B47364 LDP X20, X19, [X31 + 0x40]
	0x02B47368 LDP X22, X21, [X31 + 0x30]
	0x02B4736C LDR X30, [X31 + 0x20]
	0x02B47370 LDP D9, D8, [X31 + 0x10]
	0x02B47374 LDP D11, D10, [X31], #0x50
	0x02B47378 RET
	0x02B4737C MOVZ W0, 0x1
	0x02B47380 B 0x2B47364
	0x02B47384 BL 0x1C16F20
	0x02B47388 STR X30, [X31 - 0x20]!
	0x02B4738C STP X20, X19, [X31 + 0x10]
	0x02B47390 CBZ X0, 0x2B473CC
	0x02B47394 LDR X8, [X3 + 0x20]
	0x02B47398 MOV X19, X0
	0x02B4739C LDR X8, [X8 + 0xC0]
	0x02B473A0 LDR X3, [X8 + 0xD0]
	0x02B473A4 BL 0x2844AB4
	0x02B473A8 CBZ X0, 0x2B473CC
	0x02B473AC LDR X1, [X19 + 0xC0]
	0x02B473B0 MOV X2, X31
	0x02B473B4 MOV X20, X0
	0x02B473B8 BL 0x3CF6DE4
	0x02B473BC MOV X0, X20
	0x02B473C0 LDP X20, X19, [X31 + 0x10]
	0x02B473C4 LDR X30, [X31], #0x20
	0x02B473C8 RET
	0x02B473CC BL 0x1C16F20
	0x02B473D0 STR X30, [X31 - 0x30]!
	0x02B473D4 STP X22, X21, [X31 + 0x10]
	0x02B473D8 STP X20, X19, [X31 + 0x20]
	0x02B473DC ADRP X22, 0x1894000
	0x02B473E0 LDRB W8, [X22 + 0x50C]
	0x02B473E4 MOV X21, X2
	0x02B473E8 MOV W20, W1
	0x02B473EC MOV X19, X0
	0x02B473F0 TBNZ X8, 0x0, 0x2B47408
	0x02B473F4 ADRP X0, 0x15B9000

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X31
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move TEMP, X1
	010 And TEMP, TEMP, -2147483648
	011 Compare TEMP, -2147483648
	012 JumpIfEqual {61}
	013 Move X20, X0
	014 Move X0, [X0+112]
	015 Compare X0, 0
	016 JumpIfEqual {89}
	017 Move X8, [X2+32]
	018 Move X21, X2
	019 Add X2, X31, 24
	020 Move W19, W1
	021 Move X8, [X8+192]
	022 Move X3, [X8+448]
	023 Call Dictionary`2<Int32, ContentHeightCacheInfo<Object>>.TryGetValue, X0, X1, X2
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {62}
	028 Move X8, [X21+32]
	029 Move X0, X20
	030 Move X8, [X8+192]
	031 Move X1, [X8+440]
	032 Call 0x2845DC0, X0
	033 Move V9, [X31+24]
	034 Move W22, [X31+28]
	035 Move W21, W0
	036 Move X0, X20
	037 Call 0x2B4408C, X0
	038 Move V8, V0
	039 Move TEMP, X21
	040 And TEMP, TEMP, -2147483648
	041 Compare TEMP, -2147483648
	042 JumpIfEqual {76}
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X20+48]
	045 Compare X0, 0
	046 JumpIfEqual {89}
	047 Move X8, [X0]
	048 Move X9, [X8+376]
	049 Move X1, [X8+384]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Compare X0, 0
	052 JumpIfEqual {89}
	053 Move X1, X31
	054 Call VisualElement.get_layout, X0
	055 Subtract W8, W19, W22
	056 Add W8, W8, 1
	057 NotImplemented "Instruction SCVTF not yet implemented."
	058 Multiply S0, S8, S0
	059 Add S0, S9, S0
	060 Subtract S0, S0, S3
	061 Move S0, W31
	062 Move X8, [X21+32]
	063 Subtract W1, W19, 1
	064 Move X0, X20
	065 Move X8, [X8+192]
	066 Move X2, [X8+176]
	067 Call 0x2B472D8, X0, X1
	068 Move X8, [X20]
	069 Move X0, X20
	070 Move W1, W19
	071 Move V8, V0
	072 Move X9, [X8+504]
	073 Move X2, [X8+512]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Add S0, S8, S0
	076 Subtract W8, W19, W22
	077 Add W8, W8, 1
	078 NotImplemented "Instruction SCVTF not yet implemented."
	079 Multiply S0, S8, S0
	080 Add S0, S9, S0
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X30, [X31+16]
	086 Move D9, [X31+64]
	087 Move D8, [X31+72]
	088 Return V0
	089 Call 0x1C17F20

Method: UnityEngine.UIElements.DynamicHeightVirtualizationController`1/ContentHeightCacheInfo<T> GetCachedContentHeight(System.Int32 index)

Disassembly:
	0x02B473F8 LDR X0, [X0 + 0x5A0]
	0x02B473FC BL 0x1C16CF4
	0x02B47400 MOVZ W8, 0x1
	0x02B47404 STRB W8, [X22 + 0x50C]
	0x02B47408 LDR X0, [X19 + 0x28]
	0x02B4740C CBZ X0, 0x2B47494
	0x02B47410 LDR X8, [X21 + 0x20]
	0x02B47414 MOV W1, W20
	0x02B47418 LDR X8, [X8 + 0xC0]
	0x02B4741C LDR X2, [X8 + 0x128]
	0x02B47420 BL 0x301BCCC
	0x02B47424 CBZ X0, 0x2B47494
	0x02B47428 LDR X1, [X19 + 0xC0]
	0x02B4742C MOV X2, X31
	0x02B47430 MOV X22, X0
	0x02B47434 BL 0x3CF6E94
	0x02B47438 LDR X8, [X21 + 0x20]
	0x02B4743C LDR W22, [X22 + 0x20]
	0x02B47440 MOV X0, X19
	0x02B47444 LDR X8, [X8 + 0xC0]
	0x02B47448 MOV W1, W22
	0x02B4744C LDR X2, [X8 + 0x200]
	0x02B47450 BL 0x2B46780
	0x02B47454 LDR X8, [X21 + 0x20]
	0x02B47458 MOV X0, X19
	0x02B4745C MOV W1, W20
	0x02B47460 LDR X8, [X8 + 0xC0]
	0x02B47464 LDR X2, [X8 + 0xC8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+8], X31
	007 Move TEMP, X1
	008 And TEMP, TEMP, -2147483648
	009 Compare TEMP, -2147483648
	010 JumpIfEqual {29}
	011 Move X19, X2
	012 Move W20, W1
	013 Move X21, X0
	014 Move X0, [X21+112]
	015 Compare X0, 0
	016 JumpIfEqual {37}
	017 Move X8, [X19+32]
	018 Add X2, X31, 8
	019 Move W1, W20
	020 Move X8, [X8+192]
	021 Move X3, [X8+448]
	022 Call Dictionary`2<Int32, ContentHeightCacheInfo<Object>>.TryGetValue, X0, X1, X2
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {30}
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Subtract W20, W20, 1
	029 Move X0, X31
	030 Move X0, [X31+8]
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X30, [X31+16]
	034 Move X21, [X31+24]
	035 Add X31, X31, 48
	036 Return X0
	037 Call 0x1C17F20

Method: System.Void RegisterItemHeight(System.Int32 index, System.Single height)

Disassembly:
	0x02B47468 BL 0x2844C70
	0x02B4746C LDR X0, [X19 + 0x78]
	0x02B47470 CBZ X0, 0x2B47494
	0x02B47474 ADRP X8, 0x15B9000
	0x02B47478 LDR X8, [X8 + 0x5A0]
	0x02B4747C MOV W1, W22
	0x02B47480 LDP X20, X19, [X31 + 0x20]
	0x02B47484 LDP X22, X21, [X31 + 0x10]
	0x02B47488 LDR X2, [X8]
	0x02B4748C LDR X30, [X31], #0x30
	0x02B47490 B 0x2DAA770
	0x02B47494 BL 0x1C16F20
	0x02B47498 STR X30, [X31 - 0x30]!
	0x02B4749C STP X22, X21, [X31 + 0x10]
	0x02B474A0 STP X20, X19, [X31 + 0x20]
	0x02B474A4 ADRP X22, 0x1894000
	0x02B474A8 LDRB W8, [X22 + 0x50D]
	0x02B474AC MOV X21, X2
	0x02B474B0 MOV X20, X1
	0x02B474B4 MOV X19, X0
	0x02B474B8 TBNZ X8, 0x0, 0x2B474D0
	0x02B474BC ADRP X0, 0x15B9000
	0x02B474C0 LDR X0, [X0 + 0x5A0]
	0x02B474C4 BL 0x1C16CF4
	0x02B474C8 MOVZ W8, 0x1
	0x02B474CC STRB W8, [X22 + 0x50D]
	0x02B474D0 CBZ X20, 0x2B47528
	0x02B474D4 LDR X0, [X19 + 0x78]
	0x02B474D8 CBZ X0, 0x2B47528
	0x02B474DC ADRP X8, 0x15B9000
	0x02B474E0 LDR X8, [X8 + 0x5A0]
	0x02B474E4 LDR W1, [X20 + 0x20]
	0x02B474E8 LDR X2, [X8]
	0x02B474EC BL 0x2DAA770
	0x02B474F0 LDR X8, [X21 + 0x20]
	0x02B474F4 MOV X0, X19
	0x02B474F8 MOV X1, X20
	0x02B474FC LDR X8, [X8 + 0xC0]
	0x02B47500 LDR X2, [X8 + 0x220]
	0x02B47504 BL 0x28445F4
	0x02B47508 LDR X0, [X19 + 0x30]
	0x02B4750C CBZ X0, 0x2B47528
	0x02B47510 LDR X1, [X19 + 0xC0]
	0x02B47514 LDP X20, X19, [X31 + 0x20]
	0x02B47518 LDP X22, X21, [X31 + 0x10]
	0x02B4751C MOV X2, X31
	0x02B47520 LDR X30, [X31], #0x30
	0x02B47524 B 0x3CF6E94
	0x02B47528 BL 0x1C16F20
	0x02B4752C STR D12, [X31 - 0x80]!
	0x02B47530 STP D11, D10, [X31 + 0x8]
	0x02B47534 STP D9, D8, [X31 + 0x18]
	0x02B47538 STR X30, [X31 + 0x28]
	0x02B4753C STP X28, X27, [X31 + 0x30]
	0x02B47540 STP X26, X25, [X31 + 0x40]
	0x02B47544 STP X24, X23, [X31 + 0x50]
	0x02B47548 STP X22, X21, [X31 + 0x60]
	0x02B4754C STP X20, X19, [X31 + 0x70]
	0x02B47550 LDR X8, [X0 + 0x30]
	0x02B47554 CBZ X8, 0x2B47738
	0x02B47558 LDR X9, [X0]
	0x02B4755C LDR W22, [X8 + 0x20]
	0x02B47560 MOV X21, X2
	0x02B47564 MOV W20, W1
	0x02B47568 LDP X8, X2, [X9 + 0x1F8]
	0x02B4756C MOV W1, W22
	0x02B47570 MOV X19, X0
	0x02B47574 BLR X8
	0x02B47578 CMP W22, W20
	0x02B4757C MOVZ W26, 0x1
	0x02B47580 MOV V8.16B, V0.16B
	0x02B47584 CSNEG W27, W26, W26, LT
	0x02B47588 B.EQ 0x2B47650
	0x02B4758C ADRP X8, 0xFFFFFFFFFDFA3000
	0x02B47590 ADRP X23, 0x15B3000
	0x02B47594 LDR V11, [X8 + 0x240]
	0x02B47598 LDR X23, [X23 + 0x4B8]
	0x02B4759C ADRP X28, 0x1892000
	0x02B475A0 FMOV S12, 8
	0x02B475A4 MOV W24, W22
	0x02B475A8 LDR X8, [X19]
	0x02B475AC MOV X0, X19
	0x02B475B0 MOV W1, W24
	0x02B475B4 LDP X9, X2, [X8 + 0x1F8]
	0x02B475B8 BLR X9
	0x02B475BC LDR X8, [X19]
	0x02B475C0 ADD W25, W24, W27
	0x02B475C4 MOV X0, X19
	0x02B475C8 MOV W1, W25
	0x02B475CC LDP X9, X2, [X8 + 0x1F8]
	0x02B475D0 MOV V9.16B, V0.16B
	0x02B475D4 BLR X9
	0x02B475D8 LDRB W8, [X28 + 0x5AA]
	0x02B475DC MOV V10.16B, V0.16B
	0x02B475E0 CBNZ W8, 0x2B475F0
	0x02B475E4 MOV X0, X23
	0x02B475E8 BL 0x1C16CF4
	0x02B475EC STRB W26, [X28 + 0x5AA]
	0x02B475F0 LDR X8, [X23]
	0x02B475F4 FABS S0, S9
	0x02B475F8 FABS S1, S10
	0x02B475FC FCMP S0, S1
	0x02B47600 LDR X8, [X8 + 0xB8]
	0x02B47604 FCSEL S0, S0, S1, GT
	0x02B47608 FMUL S0, S0, S11
	0x02B4760C LDR V2, [X8]
	0x02B47610 FMUL S1, S2, S12
	0x02B47614 FCMP S0, S1
	0x02B47618 FCSEL S0, S0, S1, GT
	0x02B4761C FABD S1, S10, S10
	0x02B47620 FCMP S1, S0
	0x02B47624 B.MI 0x2B47644
	0x02B47628 LDR X8, [X21 + 0x20]
	0x02B4762C MOV X0, X19
	0x02B47630 MOV W1, W24
	0x02B47634 MOV V0.16B, V10.16B
	0x02B47638 LDR X8, [X8 + 0xC0]
	0x02B4763C LDR X2, [X8 + 0x210]
	0x02B47640 BL 0x2B46468
	0x02B47644 CMP W20, W25
	0x02B47648 MOV W24, W25
	0x02B4764C B.NE 0x2B475A8
	0x02B47650 LDR X8, [X21 + 0x20]
	0x02B47654 CMP W22, W20
	0x02B47658 MOV X0, X19
	0x02B4765C MOV V0.16B, V8.16B
	0x02B47660 LDR X8, [X8 + 0xC0]
	0x02B47664 LDR X2, [X8 + 0x210]
	0x02B47668 CSET W8, LT
	0x02B4766C SUB W1, W20, W8
	0x02B47670 BL 0x2B46468
	0x02B47674 LDR X8, [X19]
	0x02B47678 MOV X0, X19
	0x02B4767C LDP X9, X1, [X8 + 0x178]
	0x02B47680 BLR X9
	0x02B47684 LDR X8, [X19 + 0x30]
	0x02B47688 CBZ X8, 0x2B47738
	0x02B4768C LDR W9, [X8 + 0x20]
	0x02B47690 CMP W0, W9
	0x02B47694 B.LE 0x2B476EC
	0x02B47698 LDR X8, [X21 + 0x20]
	0x02B4769C MOV X0, X19
	0x02B476A0 LDR X8, [X8 + 0xC0]
	0x02B476A4 LDR X1, [X8 + 0x10]
	0x02B476A8 BL 0x2842CF4
	0x02B476AC CBZ X0, 0x2B47738
	0x02B476B0 LDR V0, [X0 + 0x14]
	0x02B476B4 MOV X0, X19
	0x02B476B8 BL 0x2B461C8
	0x02B476BC LDR X8, [X19]
	0x02B476C0 MOV W1, W0
	0x02B476C4 MOV X0, X19
	0x02B476C8 LDP X9, X2, [X8 + 0x188]
	0x02B476CC BLR X9
	0x02B476D0 LDR X8, [X21 + 0x20]
	0x02B476D4 MOV X0, X19
	0x02B476D8 LDR X8, [X8 + 0xC0]
	0x02B476DC LDR X1, [X8 + 0x178]
	0x02B476E0 BL 0x2B45ADC
	0x02B476E4 LDR X8, [X19 + 0x30]
	0x02B476E8 CBZ X8, 0x2B47738
	0x02B476EC LDR X1, [X19 + 0xC0]
	0x02B476F0 MOV X0, X8
	0x02B476F4 MOV X2, X31
	0x02B476F8 BL 0x3CF6DE4
	0x02B476FC LDR X8, [X21 + 0x20]
	0x02B47700 MOV X0, X19
	0x02B47704 MOV W1, W20
	0x02B47708 LDP X20, X19, [X31 + 0x70]
	0x02B4770C LDR X8, [X8 + 0xC0]
	0x02B47710 LDP X22, X21, [X31 + 0x60]
	0x02B47714 LDP X24, X23, [X31 + 0x50]
	0x02B47718 LDP X26, X25, [X31 + 0x40]
	0x02B4771C LDR X2, [X8 + 0x228]
	0x02B47720 LDP X28, X27, [X31 + 0x30]
	0x02B47724 LDR X30, [X31 + 0x28]
	0x02B47728 LDP D9, D8, [X31 + 0x18]
	0x02B4772C LDP D11, D10, [X31 + 0x8]
	0x02B47730 LDR V12, [X31], #0x80
	0x02B47734 B 0x284477C
	0x02B47738 BL 0x1C16F20
	0x02B4773C STR X30, [X31 - 0x30]!
	0x02B47740 STP X22, X21, [X31 + 0x10]
	0x02B47744 STP X20, X19, [X31 + 0x20]
	0x02B47748 ADRP X22, 0x1894000
	0x02B4774C LDRB W8, [X22 + 0x50E]
	0x02B47750 MOV X21, X2
	0x02B47754 MOV W20, W1
	0x02B47758 MOV X19, X0
	0x02B4775C TBNZ X8, 0x0, 0x2B4778C
	0x02B47760 ADRP X0, 0x15B9000
	0x02B47764 LDR X0, [X0 + 0x5A0]
	0x02B47768 BL 0x1C16CF4
	0x02B4776C ADRP X0, 0x15D5000
	0x02B47770 LDR X0, [X0 + 0x128]
	0x02B47774 BL 0x1C16CF4
	0x02B47778 ADRP X0, 0x15D6000
	0x02B4777C LDR X0, [X0 + 0xF10]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], D9
	003 Move [X31+104], D8
	004 Move [X31+112], X30
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X22, 0x1895000
	013 Move W8, [X22+1288]
	014 Move X19, X2
	015 Move V8, V0
	016 Move W20, W1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {45}
	022 Move X0, 0x15D8000
	023 Move X0, [X0+2768]
	024 Call 0x1C17CF4
	025 Move X0, 0x15D8000
	026 Move X0, [X0+2752]
	027 Call 0x1C17CF4
	028 Move X0, 0x15D8000
	029 Move X0, [X0+2776]
	030 Call 0x1C17CF4
	031 Move X0, 0x15D8000
	032 Move X0, [X0+2784]
	033 Call 0x1C17CF4
	034 Move X0, 0x15D8000
	035 Move X0, [X0+2792]
	036 Call 0x1C17CF4
	037 Move X0, 0x15D8000
	038 Move X0, [X0+2800]
	039 Call 0x1C17CF4
	040 Move X0, 0x15D8000
	041 Move X0, [X0+2808]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X22+1288], W8
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 Move [X31+92], W31
	048 Move [X31+48], V0
	049 Move [X31+56], V0
	050 Move X0, [X21+32]
	051 Compare X0, 0
	052 JumpIfEqual {193}
	053 Move V0, V8
	054 Move X1, X31
	055 Call BaseVerticalCollectionView.ResolveItemHeight, X0, V0
	056 Move X0, [X21+104]
	057 Compare X0, 0
	058 JumpIfEqual {193}
	059 Move X8, 0x15D8000
	060 Move X8, [X8+2752]
	061 Add X2, X31, 92
	062 Move W1, W20
	063 Move V8, V0
	064 Move X3, [X8]
	065 Call Dictionary`2<Int32, Single>.TryGetValue, X0, X1, X2
	066 Move V0, [X21+156]
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {74}
	071 Move V1, [X31+92]
	072 Subtract S0, S0, S1
	073 Move [X21+156], S0
	074 Move X0, [X21+104]
	075 Add S0, S8, S0
	076 Move [X21+156], S0
	077 Compare X0, 0
	078 JumpIfEqual {193}
	079 Move X8, 0x15D8000
	080 Move X8, [X8+2776]
	081 Move W1, W20
	082 Move V0, V8
	083 Move X2, [X8]
	084 Call Dictionary`2<Int32, Single>.set_Item, X0, X1, V0
	085 Move W8, [X21+96]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move [X21+96], W20
	088 Move X8, [X19+32]
	089 Move V9, [X31+92]
	090 Subtract W1, W20, 1
	091 Move X0, X21
	092 Move X8, [X8+192]
	093 Move X2, [X8+472]
	094 Call 0x2B473F8, X0, X1
	095 Move X22, [X21+112]
	096 Move [X31+40], X31
	097 Move X8, [X19+32]
	098 Move S0, W0
	099 Add S0, S8, S0
	100 Move X8, [X8+192]
	101 Move X2, [X8+480]
	102 Move X8, X0
	103 ShiftRight X8, 32
	104 And X8, X8, 0x7FFFFFFF
	105 Add W1, W8, 1
	106 Add X0, X31, 40
	107 Call 0x29A10F8, X0, V0, X1
	108 Compare X22, 0
	109 JumpIfEqual {193}
	110 Move X8, [X19+32]
	111 Move X2, [X31+40]
	112 Move X0, X22
	113 Move W1, W20
	114 Move X8, [X8+192]
	115 Move X3, [X8+488]
	116 Call Dictionary`2<Int32, ContentHeightCacheInfo<Object>>.set_Item, X0, X1, X2
	117 Move X0, [X21+104]
	118 Compare X0, 0
	119 JumpIfEqual {193}
	120 Move X8, 0x15D8000
	121 Move X8, [X8+2768]
	122 NotImplemented "Instruction FCMP not yet implemented."
	123 NotImplemented "Instruction CSET not yet implemented."
	124 Move X1, [X8]
	125 Add X8, X31, 8
	126 Call Dictionary`2<Int32, Single>.GetEnumerator, X0
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 Move X25, 0x15D8000
	130 Move [X31+48], V0
	131 Move [X31+56], V1
	132 Move X25, [X25+2792]
	133 Move X1, [X25]
	134 Add X0, X31, 48
	135 Call Enumerator<Int32, Single>.MoveNext, X0
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {174}
	140 Move W22, [X31+64]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X0, [X21+112]
	143 Compare X0, 0
	144 JumpIfEqual {191}
	145 Move X8, [X19+32]
	146 Move X8, [X8+192]
	147 Move X2, [X8+496]
	148 Move W1, W22
	149 Call Dictionary`2<Int32, ContentHeightCacheInfo<Object>>.get_Item, X0, X1
	150 Move X23, [X21+112]
	151 Move [X31+8], X31
	152 Move X8, [X19+32]
	153 Move V0, [X31+92]
	154 Move X9, X0
	155 ShiftRight X9, 32
	156 And X9, X9, 0x7FFFFFFF
	157 Move S1, W0
	158 Move X8, [X8+192]
	159 Subtract S0, S1, S0
	160 Add W1, W9, W24
	161 Add S0, S8, S0
	162 Move X2, [X8+480]
	163 Add X0, X31, 8
	164 Call 0x29A10F8, X0, V0, X1
	165 Compare X23, 0
	166 JumpIfEqual {192}
	167 Move X8, [X19+32]
	168 Move X2, [X31+8]
	169 Move X8, [X8+192]
	170 Move X3, [X8+488]
	171 Move X0, X23
	172 Move W1, W22
	173 Call Dictionary`2<Int32, ContentHeightCacheInfo<Object>>.set_Item, X0, X1, X2
	174 Move X8, 0x15D8000
	175 Move X8, [X8+2784]
	176 Add X0, X31, 48
	177 Move X1, [X8]
	178 Call Enumerator<Int32, Single>.Dispose, X0
	179 Move X20, [X31+160]
	180 Move X19, [X31+168]
	181 Move X22, [X31+144]
	182 Move X21, [X31+152]
	183 Move X24, [X31+128]
	184 Move X23, [X31+136]
	185 Move X30, [X31+112]
	186 Move X25, [X31+120]
	187 Move D9, [X31+96]
	188 Move D8, [X31+104]
	189 Add X31, X31, 176
	190 Return 
	191 Call 0x1C17F20
	192 Call 0x1C17F20
	193 Call 0x1C17F20
	194 Move X19, X0
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X0, X19
	197 Call 0x3EB2AD0
	198 Move X20, [X0]
	199 Call 0x3EB2AE0
	200 Move X8, 0x15D8000
	201 Move X8, [X8+2784]
	202 Add X0, X31, 48
	203 Move X1, [X8]
	204 Call Enumerator<Int32, Single>.Dispose, X0
	205 Compare X20, 0
	206 JumpIfEqual {179}
	207 Move X0, X20
	208 Call 0x1C17F18
	209 Move X20, X31
	210 Move X19, X0
	211 Move X8, 0x15D8000
	212 Move X8, [X8+2784]
	213 Move X1, [X8]
	214 Add X0, X31, 48
	215 Call Enumerator<Int32, Single>.Dispose, X0
	216 Compare X20, 0
	217 JumpIfNotEqual {220}
	218 Move X0, X19
	219 Call 0x1D2D690
	220 Move X0, X20
	221 Call 0x1C17F18
	222 Call 0x1991590

Method: System.Void UnregisterItemHeight(System.Int32 index)

Disassembly:
	0x02B47780 BL 0x1C16CF4
	0x02B47784 MOVZ W8, 0x1
	0x02B47788 STRB W8, [X22 + 0x50E]
	0x02B4778C LDR X0, [X19 + 0x28]
	0x02B47790 CBZ X0, 0x2B47878
	0x02B47794 LDR X8, [X21 + 0x20]
	0x02B47798 MOV W1, W20
	0x02B4779C LDR X8, [X8 + 0xC0]
	0x02B477A0 LDR X2, [X8 + 0x128]
	0x02B477A4 BL 0x301BCCC
	0x02B477A8 CBZ X0, 0x2B47878
	0x02B477AC LDR X8, [X0]
	0x02B477B0 MOV X20, X0
	0x02B477B4 LDP X9, X1, [X8 + 0x178]
	0x02B477B8 BLR X9
	0x02B477BC CBZ X0, 0x2B47878
	0x02B477C0 ADRP X21, 0x15D6000
	0x02B477C4 LDR X21, [X21 + 0xF10]
	0x02B477C8 MOV X1, X31
	0x02B477CC BL 0x3DE7EEC
	0x02B477D0 LDR X1, [X21]
	0x02B477D4 MOV X21, X0
	0x02B477D8 MOVZ W0, 0x1
	0x02B477DC BL 0x266EACC
	0x02B477E0 CBZ X21, 0x2B47878
	0x02B477E4 ADRP X10, 0x15D5000
	0x02B477E8 LDR X8, [X21]
	0x02B477EC LDR X10, [X10 + 0x128]
	0x02B477F0 MOV X22, X0
	0x02B477F4 LDRH W9, [X8 + 0x12E]
	0x02B477F8 LDR X1, [X10]
	0x02B477FC CBZ X9, 0x2B47820
	0x02B47800 LDR X10, [X8 + 0xB0]
	0x02B47804 ADD X10, X10, 0x8
	0x02B47808 LDUR X11, [X10 - 0x8]
	0x02B4780C CMP X11, X1
	0x02B47810 B.EQ 0x2B47830
	0x02B47814 SUBS X9, X9, 0x1
	0x02B47818 ADD X10, X10, 0x10
	0x02B4781C B.NE 0x2B47808
	0x02B47820 MOVZ W2, 0x12
	0x02B47824 MOV X0, X21
	0x02B47828 BL 0x1C5C788
	0x02B4782C B 0x2B47840
	0x02B47830 LDR W9, [X10]
	0x02B47834 ADD W9, W9, 0x12
	0x02B47838 ADD X8, X8, W9, 0x4, SXTW
	0x02B4783C ADD X0, X8, 0x138
	0x02B47840 LDP X8, X2, [X0]
	0x02B47844 MOV X0, X21
	0x02B47848 MOV X1, X22
	0x02B4784C BLR X8
	0x02B47850 LDR X0, [X19 + 0x78]
	0x02B47854 CBZ X0, 0x2B47878
	0x02B47858 ADRP X8, 0x15B9000
	0x02B4785C LDR X8, [X8 + 0x5A0]
	0x02B47860 LDR W1, [X20 + 0x20]
	0x02B47864 LDP X20, X19, [X31 + 0x20]
	0x02B47868 LDP X22, X21, [X31 + 0x10]
	0x02B4786C LDR X2, [X8]
	0x02B47870 LDR X30, [X31], #0x30
	0x02B47874 B 0x2DAA770
	0x02B47878 BL 0x1C16F20
	0x02B4787C STP X30, X21, [X31 - 0x20]!
	0x02B47880 STP X20, X19, [X31 + 0x10]
	0x02B47884 ADRP X21, 0x1894000
	0x02B47888 LDRB W8, [X21 + 0x50F]
	0x02B4788C MOV X19, X1
	0x02B47890 MOV X20, X0
	0x02B47894 TBNZ X8, 0x0, 0x2B478AC
	0x02B47898 ADRP X0, 0x15AE000
	0x02B4789C LDR X0, [X0 + 0x9D8]
	0x02B478A0 BL 0x1C16CF4
	0x02B478A4 MOVZ W8, 0x1
	0x02B478A8 STRB W8, [X21 + 0x50F]
	0x02B478AC CBZ X19, 0x2B4792C
	0x02B478B0 LDRB W8, [X19 + 0x28]
	0x02B478B4 CBZ W8, 0x2B478C4
	0x02B478B8 LDP X20, X19, [X31 + 0x10]
	0x02B478BC LDP X30, X21, [X31], #0x20
	0x02B478C0 RET
	0x02B478C4 LDR X0, [X20 + 0x78]
	0x02B478C8 CBZ X0, 0x2B4792C
	0x02B478CC ADRP X8, 0x15AE000
	0x02B478D0 LDR W1, [X19 + 0x20]
	0x02B478D4 LDR X8, [X8 + 0x9D8]
	0x02B478D8 LDR X2, [X8]
	0x02B478DC BL 0x2DAB03C
	0x02B478E0 LDR X8, [X19]
	0x02B478E4 MOV X0, X19
	0x02B478E8 LDP X9, X1, [X8 + 0x178]
	0x02B478EC BLR X9
	0x02B478F0 MOV X20, X0
	0x02B478F4 MOV X0, X31
	0x02B478F8 BL 0x3C0B398
	0x02B478FC CBZ X20, 0x2B4792C
	0x02B47900 STP S0, S1, [X20 + 0x64]
	0x02B47904 STP S2, S3, [X20 + 0x6C]
	0x02B47908 LDR X8, [X19]
	0x02B4790C MOV X0, X19
	0x02B47910 LDP X9, X1, [X8 + 0x178]
	0x02B47914 BLR X9
	0x02B47918 CBZ X0, 0x2B4792C
	0x02B4791C LDP X20, X19, [X31 + 0x10]
	0x02B47920 MOV X1, X31
	0x02B47924 LDP X30, X21, [X31], #0x20
	0x02B47928 B 0x3DF2134
	0x02B4792C BL 0x1C16F20
	0x02B47930 STP X30, X21, [X31 - 0x20]!
	0x02B47934 STP X20, X19, [X31 + 0x10]
	0x02B47938 MOV X20, X0
	0x02B4793C LDR X0, [X0 + 0x20]
	0x02B47940 CBZ X0, 0x2B47988
	0x02B47944 MOV W19, W1
	0x02B47948 MOV X1, X31
	0x02B4794C MOV X21, X2
	0x02B47950 BL 0x3CFE9FC
	0x02B47954 CBZ X0, 0x2B47978
	0x02B47958 LDR X8, [X21 + 0x20]
	0x02B4795C MOV X0, X20
	0x02B47960 LDR X8, [X8 + 0xC0]
	0x02B47964 LDR X1, [X8 + 0xA8]
	0x02B47968 BL 0x2842AE0
	0x02B4796C CMP W0, W19
	0x02B47970 CSET W0, LE
	0x02B47974 B 0x2B4797C
	0x02B47978 MOVZ W0, 0x1
	0x02B4797C LDP X20, X19, [X31 + 0x10]
	0x02B47980 LDP X30, X21, [X31], #0x20
	0x02B47984 RET
	0x02B47988 BL 0x1C16F20
	0x02B4798C STR X30, [X31 - 0x20]!
	0x02B47990 STP X20, X19, [X31 + 0x10]
	0x02B47994 MOV X19, X0
	0x02B47998 LDR X0, [X0 + 0x20]
	0x02B4799C LDRB W8, [X0 + 0x135]
	0x02B479A0 TBNZ X8, 0x0, 0x2B479A8
	0x02B479A4 BL 0x1C5C684
	0x02B479A8 LDR X8, [X0 + 0xC0]
	0x02B479AC LDR X0, [X8 + 0x10]
	0x02B479B0 LDRB W8, [X0 + 0x135]
	0x02B479B4 TBNZ X8, 0x0, 0x2B479BC
	0x02B479B8 BL 0x1C5C684
	0x02B479BC LDR X8, [X0 + 0xB8]
	0x02B479C0 LDR X20, [X8]
	0x02B479C4 BL 0x1C16D44
	0x02B479C8 CBNZ X20, 0x2B47A40
	0x02B479CC LDR X0, [X19 + 0x20]
	0x02B479D0 LDRB W8, [X0 + 0x135]
	0x02B479D4 TBNZ X8, 0x0, 0x2B479DC
	0x02B479D8 BL 0x1C5C684
	0x02B479DC LDR X8, [X0 + 0xC0]
	0x02B479E0 LDR X0, [X8 + 0x18]
	0x02B479E4 BL 0x2CF2488
	0x02B479E8 MOV X20, X0
	0x02B479EC BL 0x1C16D44
	0x02B479F0 LDR X0, [X19 + 0x20]
	0x02B479F4 LDRB W8, [X0 + 0x135]
	0x02B479F8 TBNZ X8, 0x0, 0x2B47A00
	0x02B479FC BL 0x1C5C684
	0x02B47A00 LDR X8, [X0 + 0xC0]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X22, 0x1895000
	011 Move W8, [X22+1289]
	012 Move X20, X2
	013 Move W21, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0x15D8000
	020 Move X0, [X0+2768]
	021 Call 0x1C17CF4
	022 Move X0, 0x15D8000
	023 Move X0, [X0+2816]
	024 Call 0x1C17CF4
	025 Move X0, 0x15D8000
	026 Move X0, [X0+2752]
	027 Call 0x1C17CF4
	028 Move X0, 0x15D8000
	029 Move X0, [X0+2784]
	030 Call 0x1C17CF4
	031 Move X0, 0x15D8000
	032 Move X0, [X0+2792]
	033 Call 0x1C17CF4
	034 Move X0, 0x15D8000
	035 Move X0, [X0+2800]
	036 Call 0x1C17CF4
	037 Move X0, 0x15D8000
	038 Move X0, [X0+2808]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+1289], W8
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Move [X31+76], W31
	044 Move [X31+32], V0
	045 Move [X31+40], V0
	046 Move X0, [X19+104]
	047 Compare X0, 0
	048 JumpIfEqual {156}
	049 Move X8, 0x15D8000
	050 Move X8, [X8+2752]
	051 Add X2, X31, 76
	052 Move W1, W21
	053 Move X3, [X8]
	054 Call Dictionary`2<Int32, Single>.TryGetValue, X0, X1, X2
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {144}
	059 Move V0, [X19+156]
	060 Move V1, [X31+76]
	061 Move X0, [X19+104]
	062 Subtract S0, S0, S1
	063 Move [X19+156], S0
	064 Compare X0, 0
	065 JumpIfEqual {156}
	066 Move X8, 0x15D8000
	067 Move X8, [X8+2816]
	068 Move W1, W21
	069 Move X2, [X8]
	070 Call Dictionary`2<Int32, Single>.Remove, X0, X1
	071 Move X0, [X19+112]
	072 Compare X0, 0
	073 JumpIfEqual {156}
	074 Move X8, [X20+32]
	075 Move W1, W21
	076 Move X8, [X8+192]
	077 Move X2, [X8+504]
	078 Call Dictionary`2<Int32, ContentHeightCacheInfo<Object>>.Remove, X0, X1
	079 Move X0, [X19+104]
	080 Compare X0, 0
	081 JumpIfEqual {156}
	082 Move X8, 0x15D8000
	083 Move X8, [X8+2768]
	084 Move X1, [X8]
	085 Add X8, X31, 0
	086 Call Dictionary`2<Int32, Single>.GetEnumerator, X0
	087 Move V0, [X31]
	088 Move V1, [X31+16]
	089 Move X25, 0x15D8000
	090 Move TEMP, 0
	091 Not TEMP
	092 Move W24, TEMP
	093 Move [X31+32], V0
	094 Move [X31+40], V1
	095 Move X25, [X25+2792]
	096 Move X1, [X25]
	097 Add X0, X31, 32
	098 Call Enumerator<Int32, Single>.MoveNext, X0
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {138}
	103 Move W22, [X31+48]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, [X19+112]
	106 Compare X0, 0
	107 JumpIfEqual {154}
	108 Move X8, [X20+32]
	109 Move X8, [X8+192]
	110 Move X2, [X8+496]
	111 Move W1, W22
	112 Call Dictionary`2<Int32, ContentHeightCacheInfo<Object>>.get_Item, X0, X1
	113 Move X23, [X19+112]
	114 Move [X31], X31
	115 Move X8, [X20+32]
	116 Move V0, [X31+76]
	117 Move S1, W0
	118 Move X8, [X8+192]
	119 Subtract S0, S1, S0
	120 Move X2, [X8+480]
	121 Move X8, X0
	122 ShiftRight X8, 32
	123 And X8, X8, 0x7FFFFFFF
	124 Subtract W1, W8, 1
	125 Add X0, X31, 0
	126 Call 0x29A10F8, X0, V0, X1
	127 Compare X23, 0
	128 JumpIfEqual {155}
	129 Move X8, [X20+32]
	130 Move X2, [X31]
	131 Move X8, [X8+192]
	132 Move X3, [X8+488]
	133 Move X0, X23
	134 Move W1, W22
	135 Call Dictionary`2<Int32, ContentHeightCacheInfo<Object>>.set_Item, X0, X1, X2
	136 NotImplemented "Instruction CMP not yet implemented."
	137 NotImplemented "Instruction CSEL not yet implemented."
	138 Move X8, 0x15D8000
	139 Move X8, [X8+2784]
	140 Add X0, X31, 32
	141 Move X1, [X8]
	142 Call Enumerator<Int32, Single>.Dispose, X0
	143 Move [X19+96], W24
	144 Move X20, [X31+128]
	145 Move X19, [X31+136]
	146 Move X22, [X31+112]
	147 Move X21, [X31+120]
	148 Move X24, [X31+96]
	149 Move X23, [X31+104]
	150 Move X30, [X31+80]
	151 Move X25, [X31+88]
	152 Add X31, X31, 144
	153 Return 
	154 Call 0x1C17F20
	155 Call 0x1C17F20
	156 Call 0x1C17F20
	157 Move X20, X0
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X0, X20
	160 Call 0x3EB2AD0
	161 Move X21, [X0]
	162 Call 0x3EB2AE0
	163 Move X8, 0x15D8000
	164 Move X8, [X8+2784]
	165 Add X0, X31, 32
	166 Move X1, [X8]
	167 Call Enumerator<Int32, Single>.Dispose, X0
	168 Compare X21, 0
	169 JumpIfEqual {143}
	170 Move X0, X21
	171 Call 0x1C17F18
	172 Move X21, X31
	173 Move X20, X0
	174 Move X8, 0x15D8000
	175 Move X8, [X8+2784]
	176 Move X1, [X8]
	177 Add X0, X31, 32
	178 Call Enumerator<Int32, Single>.Dispose, X0
	179 Compare X21, 0
	180 JumpIfNotEqual {183}
	181 Move X0, X20
	182 Call 0x1D2D690
	183 Move X0, X21
	184 Call 0x1C17F18
	185 Call 0x1991590

Method: System.Void CleanItemHeightCache()

Disassembly:
	0x02B47A04 LDR X0, [X8 + 0x10]
	0x02B47A08 LDRB W8, [X0 + 0x135]
	0x02B47A0C TBNZ X8, 0x0, 0x2B47A14
	0x02B47A10 BL 0x1C5C684
	0x02B47A14 LDR X8, [X0 + 0xB8]
	0x02B47A18 STR X20, [X8]
	0x02B47A1C LDR X0, [X19 + 0x20]
	0x02B47A20 LDRB W8, [X0 + 0x135]
	0x02B47A24 TBNZ X8, 0x0, 0x2B47A2C
	0x02B47A28 BL 0x1C5C684
	0x02B47A2C LDR X8, [X0 + 0xC0]
	0x02B47A30 LDR X0, [X8 + 0x10]
	0x02B47A34 LDRB W8, [X0 + 0x135]
	0x02B47A38 TBNZ X8, 0x0, 0x2B47A40
	0x02B47A3C BL 0x1C5C684
	0x02B47A40 MOV X0, X20
	0x02B47A44 LDP X20, X19, [X31 + 0x10]
	0x02B47A48 LDR X30, [X31], #0x20
	0x02B47A4C RET
	0x02B47A50 STR X30, [X31 - 0x20]!
	0x02B47A54 STP X20, X19, [X31 + 0x10]
	0x02B47A58 MOV X19, X0
	0x02B47A5C LDR X0, [X0 + 0x20]
	0x02B47A60 LDRB W8, [X0 + 0x135]
	0x02B47A64 TBNZ X8, 0x0, 0x2B47A6C
	0x02B47A68 BL 0x1C5C684
	0x02B47A6C LDR X8, [X0 + 0xC0]
	0x02B47A70 LDR X0, [X8 + 0x10]
	0x02B47A74 LDRB W8, [X0 + 0x135]
	0x02B47A78 TBNZ X8, 0x0, 0x2B47A80
	0x02B47A7C BL 0x1C5C684
	0x02B47A80 LDR X8, [X0 + 0xB8]
	0x02B47A84 LDR X20, [X8]
	0x02B47A88 BL 0x1C16D44
	0x02B47A8C CBNZ X20, 0x2B47B04
	0x02B47A90 LDR X0, [X19 + 0x20]
	0x02B47A94 LDRB W8, [X0 + 0x135]
	0x02B47A98 TBNZ X8, 0x0, 0x2B47AA0
	0x02B47A9C BL 0x1C5C684
	0x02B47AA0 LDR X8, [X0 + 0xC0]
	0x02B47AA4 LDR X0, [X8 + 0x18]
	0x02B47AA8 BL 0x2CF7BA4
	0x02B47AAC MOV X20, X0
	0x02B47AB0 BL 0x1C16D44
	0x02B47AB4 LDR X0, [X19 + 0x20]
	0x02B47AB8 LDRB W8, [X0 + 0x135]
	0x02B47ABC TBNZ X8, 0x0, 0x2B47AC4
	0x02B47AC0 BL 0x1C5C684
	0x02B47AC4 LDR X8, [X0 + 0xC0]
	0x02B47AC8 LDR X0, [X8 + 0x10]
	0x02B47ACC LDRB W8, [X0 + 0x135]
	0x02B47AD0 TBNZ X8, 0x0, 0x2B47AD8
	0x02B47AD4 BL 0x1C5C684
	0x02B47AD8 LDR X8, [X0 + 0xB8]
	0x02B47ADC STR X20, [X8]
	0x02B47AE0 LDR X0, [X19 + 0x20]
	0x02B47AE4 LDRB W8, [X0 + 0x135]
	0x02B47AE8 TBNZ X8, 0x0, 0x2B47AF0
	0x02B47AEC BL 0x1C5C684
	0x02B47AF0 LDR X8, [X0 + 0xC0]
	0x02B47AF4 LDR X0, [X8 + 0x10]
	0x02B47AF8 LDRB W8, [X0 + 0x135]
	0x02B47AFC TBNZ X8, 0x0, 0x2B47B04
	0x02B47B00 BL 0x1C5C684
	0x02B47B04 MOV X0, X20
	0x02B47B08 LDP X20, X19, [X31 + 0x10]
	0x02B47B0C LDR X30, [X31], #0x20
	0x02B47B10 RET
	0x02B47B14 STR X30, [X31 - 0x20]!
	0x02B47B18 STP X20, X19, [X31 + 0x10]
	0x02B47B1C MOV X19, X0
	0x02B47B20 LDR X0, [X0 + 0x20]
	0x02B47B24 LDRB W8, [X0 + 0x135]
	0x02B47B28 TBNZ X8, 0x0, 0x2B47B30
	0x02B47B2C BL 0x1C5C684
	0x02B47B30 LDR X8, [X0 + 0xC0]
	0x02B47B34 LDR X0, [X8 + 0x10]
	0x02B47B38 LDRB W8, [X0 + 0x135]
	0x02B47B3C TBNZ X8, 0x0, 0x2B47B44
	0x02B47B40 BL 0x1C5C684
	0x02B47B44 LDR X8, [X0 + 0xB8]
	0x02B47B48 LDR X20, [X8]
	0x02B47B4C BL 0x1C16D44
	0x02B47B50 CBNZ X20, 0x2B47BC8
	0x02B47B54 LDR X0, [X19 + 0x20]
	0x02B47B58 LDRB W8, [X0 + 0x135]
	0x02B47B5C TBNZ X8, 0x0, 0x2B47B64
	0x02B47B60 BL 0x1C5C684
	0x02B47B64 LDR X8, [X0 + 0xC0]
	0x02B47B68 LDR X0, [X8 + 0x18]
	0x02B47B6C BL 0x2CF85FC
	0x02B47B70 MOV X20, X0
	0x02B47B74 BL 0x1C16D44
	0x02B47B78 LDR X0, [X19 + 0x20]
	0x02B47B7C LDRB W8, [X0 + 0x135]
	0x02B47B80 TBNZ X8, 0x0, 0x2B47B88
	0x02B47B84 BL 0x1C5C684
	0x02B47B88 LDR X8, [X0 + 0xC0]
	0x02B47B8C LDR X0, [X8 + 0x10]
	0x02B47B90 LDRB W8, [X0 + 0x135]
	0x02B47B94 TBNZ X8, 0x0, 0x2B47B9C
	0x02B47B98 BL 0x1C5C684
	0x02B47B9C LDR X8, [X0 + 0xB8]
	0x02B47BA0 STR X20, [X8]
	0x02B47BA4 LDR X0, [X19 + 0x20]
	0x02B47BA8 LDRB W8, [X0 + 0x135]
	0x02B47BAC TBNZ X8, 0x0, 0x2B47BB4
	0x02B47BB0 BL 0x1C5C684
	0x02B47BB4 LDR X8, [X0 + 0xC0]
	0x02B47BB8 LDR X0, [X8 + 0x10]
	0x02B47BBC LDRB W8, [X0 + 0x135]
	0x02B47BC0 TBNZ X8, 0x0, 0x2B47BC8
	0x02B47BC4 BL 0x1C5C684
	0x02B47BC8 MOV X0, X20
	0x02B47BCC LDP X20, X19, [X31 + 0x10]
	0x02B47BD0 LDR X30, [X31], #0x20
	0x02B47BD4 RET
	0x02B47BD8 STP X29, X30, [X31 - 0x40]!
	0x02B47BDC STP X24, X23, [X31 + 0x10]
	0x02B47BE0 STP X22, X21, [X31 + 0x20]
	0x02B47BE4 STP X20, X19, [X31 + 0x30]
	0x02B47BE8 ADD X29, X31, 0x0
	0x02B47BEC SUB X31, X31, 0x10
	0x02B47BF0 MRS X24, 0xC000
	0x02B47BF4 LDR X8, [X24 + 0x28]
	0x02B47BF8 MOV X21, X1
	0x02B47BFC MOV X19, X0
	0x02B47C00 STUR X8, [X29 - 0x8]
	0x02B47C04 LDR X20, [X2 + 0x20]
	0x02B47C08 LDRB W8, [X20 + 0x135]
	0x02B47C0C TBNZ X8, 0x0, 0x2B47C24
	0x02B47C10 MOV X0, X20
	0x02B47C14 MOV X22, X2
	0x02B47C18 BL 0x1C5C684
	0x02B47C1C LDR X20, [X22 + 0x20]
	0x02B47C20 B 0x2B47C28
	0x02B47C24 MOV X0, X20
	0x02B47C28 LDR X8, [X0 + 0xC0]
	0x02B47C2C LDR X8, [X8]
	0x02B47C30 LDR W22, [X8 + 0xFC]
	0x02B47C34 ADD X8, X31, 0x0
	0x02B47C38 ADD X9, X22, 0xF
	0x02B47C3C AND X9, X9, 0x1FFFFFFFF
	0x02B47C40 SUB X23, X8, X9
	0x02B47C44 ADD X31, X23, 0x0
	0x02B47C48 MOV X0, X23
	0x02B47C4C MOV X1, X21
	0x02B47C50 MOV X2, X22
	0x02B47C54 BL 0x3EB1AC0
	0x02B47C58 LDRB W8, [X20 + 0x135]
	0x02B47C5C TBNZ X8, 0x0, 0x2B47C6C
	0x02B47C60 MOV X0, X20
	0x02B47C64 BL 0x1C5C684
	0x02B47C68 MOV X20, X0
	0x02B47C6C LDR X8, [X20 + 0xC0]
	0x02B47C70 MOV X0, X19
	0x02B47C74 MOV X2, X23
	0x02B47C78 MOV W3, W22
	0x02B47C7C LDR X8, [X8 + 0x8]
	0x02B47C80 LDR X1, [X8 + 0x80]
	0x02B47C84 BL 0x1C16D1C
	0x02B47C88 LDR X8, [X24 + 0x28]
	0x02B47C8C LDUR X9, [X29 - 0x8]
	0x02B47C90 CMP X8, X9
	0x02B47C94 B.NE 0x2B47CB0
	0x02B47C98 ADD X31, X29, 0x0
	0x02B47C9C LDP X20, X19, [X31 + 0x30]
	0x02B47CA0 LDP X22, X21, [X31 + 0x20]
	0x02B47CA4 LDP X24, X23, [X31 + 0x10]
	0x02B47CA8 LDP X29, X30, [X31], #0x40
	0x02B47CAC RET
	0x02B47CB0 BL 0x3EB1B20
	0x02B47CB4 STR X30, [X31 - 0x30]!
	0x02B47CB8 STP X22, X21, [X31 + 0x10]
	0x02B47CBC STP X20, X19, [X31 + 0x20]
	0x02B47CC0 LDR X8, [X2 + 0x8]
	0x02B47CC4 STP X1, X2, [X0 + 0x20]
	0x02B47CC8 MOV X19, X0
	0x02B47CCC MOV X20, X2
	0x02B47CD0 STR X8, [X0 + 0x10]
	0x02B47CD4 LDRB W22, [X2 + 0x52]
	0x02B47CD8 STR X0, [X0 + 0x40]
	0x02B47CDC MOV X0, X2
	0x02B47CE0 MOV X21, X1
	0x02B47CE4 BL 0x1C16D84
	0x02B47CE8 TBZ X0, 0x0, 0x2B47D00
	0x02B47CEC CMP W22, 0x3
	0x02B47CF0 B.NE 0x2B47D3C
	0x02B47CF4 ADRP X8, 0xFFFFFFFFFEE9A000
	0x02B47CF8 ADD X8, X8, 0xD78
	0x02B47CFC B 0x2B47D80
	0x02B47D00 CMP W22, 0x2
	0x02B47D04 B.NE 0x2B47D38
	0x02B47D08 LDRB W8, [X19 + 0x70]
	0x02B47D0C CBZ W8, 0x2B47D50
	0x02B47D10 MOV X0, X20
	0x02B47D14 BL 0x1C16D7C
	0x02B47D18 MOV W21, W0
	0x02B47D1C MOV X0, X20
	0x02B47D20 BL 0x1C17238
	0x02B47D24 TBZ X21, 0x0, 0x2B47D5C
	0x02B47D28 TBZ X0, 0x0, 0x2B47D6C
	0x02B47D2C ADRP X8, 0xFFFFFFFFFEE9A000
	0x02B47D30 ADD X8, X8, 0xEB4
	0x02B47D34 B 0x2B47D80
	0x02B47D38 CBZ X21, 0x2B47DA0
	0x02B47D3C LDR X8, [X19 + 0x10]
	0x02B47D40 LDR X9, [X19 + 0x20]
	0x02B47D44 STR X8, [X19 + 0x18]
	0x02B47D48 STR X9, [X19 + 0x40]
	0x02B47D4C B 0x2B47D84
	0x02B47D50 ADRP X8, 0xFFFFFFFFFEE9A000
	0x02B47D54 ADD X8, X8, 0xD50
	0x02B47D58 B 0x2B47D80
	0x02B47D5C TBZ X0, 0x0, 0x2B47D78
	0x02B47D60 ADRP X8, 0xFFFFFFFFFEE9A000
	0x02B47D64 ADD X8, X8, 0xDC4
	0x02B47D68 B 0x2B47D80
	0x02B47D6C ADRP X8, 0xFFFFFFFFFEE9A000
	0x02B47D70 ADD X8, X8, 0xE60
	0x02B47D74 B 0x2B47D80
	0x02B47D78 ADRP X8, 0xFFFFFFFFFEE9A000
	0x02B47D7C ADD X8, X8, 0xD90
	0x02B47D80 STR X8, [X19 + 0x18]
	0x02B47D84 ADRP X8, 0xFFFFFFFFFEE9A000
	0x02B47D88 ADD X8, X8, 0xCE4
	0x02B47D8C STR X8, [X19 + 0x38]
	0x02B47D90 LDP X20, X19, [X31 + 0x20]
	0x02B47D94 LDP X22, X21, [X31 + 0x10]
	0x02B47D98 LDR X30, [X31], #0x30
	0x02B47D9C RET
	0x02B47DA0 ADRP X1, 0xFFFFFFFFFDFD4000
	0x02B47DA4 ADD X1, X1, 0xEE3
	0x02B47DA8 MOV X0, X31
	0x02B47DAC BL 0x1C16F3C
	0x02B47DB0 MOV X1, X31
	0x02B47DB4 BL 0x1C16DEC
	0x02B47DB8 LDR X8, [X0 + 0x40]
	0x02B47DBC LDR X5, [X0 + 0x18]
	0x02B47DC0 LDR X4, [X0 + 0x28]
	0x02B47DC4 MOV X0, X8
	0x02B47DC8 BR X5
	0x02B47DCC STR X30, [X31 - 0x30]!
	0x02B47DD0 STP X22, X21, [X31 + 0x10]
	0x02B47DD4 STP X20, X19, [X31 + 0x20]
	0x02B47DD8 LDR X8, [X2 + 0x8]
	0x02B47DDC STP X1, X2, [X0 + 0x20]
	0x02B47DE0 MOV X19, X0
	0x02B47DE4 MOV X20, X2
	0x02B47DE8 STR X8, [X0 + 0x10]
	0x02B47DEC LDRB W22, [X2 + 0x52]
	0x02B47DF0 STR X0, [X0 + 0x40]
	0x02B47DF4 MOV X0, X2
	0x02B47DF8 MOV X21, X1
	0x02B47DFC BL 0x1C16D84
	0x02B47E00 TBZ X0, 0x0, 0x2B47E18
	0x02B47E04 CMP W22, 0x3
	0x02B47E08 B.NE 0x2B47E54
	0x02B47E0C ADRP X8, 0xFFFFFFFFFEE9A000
	0x02B47E10 ADD X8, X8, 0xFEC
	0x02B47E14 B 0x2B47E98
	0x02B47E18 CMP W22, 0x2
	0x02B47E1C B.NE 0x2B47E50
	0x02B47E20 LDRB W8, [X19 + 0x70]
	0x02B47E24 CBZ W8, 0x2B47E68
	0x02B47E28 MOV X0, X20
	0x02B47E2C BL 0x1C16D7C
	0x02B47E30 MOV W21, W0
	0x02B47E34 MOV X0, X20
	0x02B47E38 BL 0x1C17238
	0x02B47E3C TBZ X21, 0x0, 0x2B47E74
	0x02B47E40 TBZ X0, 0x0, 0x2B47E84
	0x02B47E44 ADRP X8, 0xFFFFFFFFFEE9B000
	0x02B47E48 ADD X8, X8, 0x128
	0x02B47E4C B 0x2B47E98
	0x02B47E50 CBZ X21, 0x2B47EB8
	0x02B47E54 LDR X8, [X19 + 0x10]
	0x02B47E58 LDR X9, [X19 + 0x20]
	0x02B47E5C STR X8, [X19 + 0x18]
	0x02B47E60 STR X9, [X19 + 0x40]
	0x02B47E64 B 0x2B47E9C
	0x02B47E68 ADRP X8, 0xFFFFFFFFFEE9A000
	0x02B47E6C ADD X8, X8, 0xFC4
	0x02B47E70 B 0x2B47E98
	0x02B47E74 TBZ X0, 0x0, 0x2B47E90
	0x02B47E78 ADRP X8, 0xFFFFFFFFFEE9B000
	0x02B47E7C ADD X8, X8, 0x38
	0x02B47E80 B 0x2B47E98
	0x02B47E84 ADRP X8, 0xFFFFFFFFFEE9B000
	0x02B47E88 ADD X8, X8, 0xD4
	0x02B47E8C B 0x2B47E98
	0x02B47E90 ADRP X8, 0xFFFFFFFFFEE9B000
	0x02B47E94 ADD X8, X8, 0x4
	0x02B47E98 STR X8, [X19 + 0x18]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+104], X25
	004 Move [X31+112], X24
	005 Move [X31+120], X23
	006 Move [X31+128], X22
	007 Move [X31+136], X21
	008 Move [X31+144], X20
	009 Move [X31+152], X19
	010 Move X20, 0x1895000
	011 Move W8, [X20+1290]
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {59}
	018 Move X0, 0x15D7000
	019 Move X0, [X0+2264]
	020 Call 0x1C17CF4
	021 Move X0, 0x15D8000
	022 Move X0, [X0+2824]
	023 Call 0x1C17CF4
	024 Move X0, 0x15D7000
	025 Move X0, [X0+2272]
	026 Call 0x1C17CF4
	027 Move X0, 0x15D8000
	028 Move X0, [X0+2832]
	029 Call 0x1C17CF4
	030 Move X0, 0x15D8000
	031 Move X0, [X0+2840]
	032 Call 0x1C17CF4
	033 Move X0, 0x15D8000
	034 Move X0, [X0+2848]
	035 Call 0x1C17CF4
	036 Move X0, 0x15D8000
	037 Move X0, [X0+2856]
	038 Call 0x1C17CF4
	039 Move X0, 0x15D8000
	040 Move X0, [X0+2864]
	041 Call 0x1C17CF4
	042 Move X0, 0x15D8000
	043 Move X0, [X0+2872]
	044 Call 0x1C17CF4
	045 Move X0, 0x15D8000
	046 Move X0, [X0+2880]
	047 Call 0x1C17CF4
	048 Move X0, 0x15D8000
	049 Move X0, [X0+2888]
	050 Call 0x1C17CF4
	051 Move X0, 0x15AE000
	052 Move X0, [X0+3600]
	053 Call 0x1C17CF4
	054 Move X0, 0x15D8000
	055 Move X0, [X0+2896]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+1290], W8
	059 Move [X31+64], X31
	060 Move [X31+72], X31
	061 Move [X31+80], X31
	062 Move [X31+32], X31
	063 Move [X31+40], X31
	064 Move [X31+48], X31
	065 Move X8, [X21+32]
	066 Move W1, [X19+96]
	067 Move X0, X19
	068 Move X8, [X8+192]
	069 Move X2, [X8+80]
	070 Call 0x2B48930, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {221}
	075 Move X25, 0x15D7000
	076 Move X25, [X25+2272]
	077 Move X0, [X25]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X8, 0x15D7000
	083 Move X8, [X8+2264]
	084 Move X0, [X8]
	085 Call CollectionPool`2<Object, Int32>.Get
	086 Move X8, [X19+104]
	087 Move X20, X0
	088 Compare X8, 0
	089 JumpIfEqual {233}
	090 Move X9, 0x15D8000
	091 Move X9, [X9+2832]
	092 Move X1, [X9]
	093 Move X0, X8
	094 Call Dictionary`2<Int32, Single>.get_Keys, X0
	095 Compare X0, 0
	096 JumpIfEqual {236}
	097 Move X8, 0x15D8000
	098 Move X8, [X8+2888]
	099 Move X1, [X8]
	100 Add X8, X31, 8
	101 Call KeyCollection<Int32, Single>.GetEnumerator, X0
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 Move X8, [X31+24]
	104 Move X23, 0x15D8000
	105 Move X23, [X23+2864]
	106 Move [X31+4], V0
	107 Move [X31+80], X8
	108 Move X24, 0x15AE000
	109 Move X24, [X24+3600]
	110 Move X1, [X23]
	111 Add X0, X31, 64
	112 Call Enumerator<Int32, Single>.MoveNext, X0
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {150}
	117 Move X8, [X21+32]
	118 Move W22, [X31+80]
	119 Move X8, [X8+192]
	120 Move X2, [X8+80]
	121 Move X0, X19
	122 Move W1, W22
	123 Call 0x2B48930, X0, X1
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {110}
	128 Compare X20, 0
	129 JumpIfEqual {231}
	130 Move W10, [X20+28]
	131 Move X8, [X20+16]
	132 Move X9, [X24]
	133 Add W10, W10, 1
	134 Move [X20+28], W10
	135 Compare X8, 0
	136 JumpIfEqual {232}
	137 NotImplemented "Instruction LDRSW not yet implemented."
	138 Move W11, [X8+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Add W9, W10, 1
	141 Add X8, X8, X10
	142 Move [X20+24], W9
	143 Move [X8+32], W22
	144 Move X8, [X9+32]
	145 Move X8, [X8+192]
	146 Move X2, [X8+112]
	147 Move X0, X20
	148 Move W1, W22
	149 Call List`1<Int32>.AddWithResize, X0, X1
	150 Move X22, X31
	151 Move W23, 7
	152 Move X8, 0x15D8000
	153 Move X8, [X8+2848]
	154 Move X1, [X8]
	155 Add X0, X31, 64
	156 Call Enumerator<Int32, Single>.Dispose, X0
	157 Compare X22, 0
	158 JumpIfNotEqual {237}
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Compare W23, 0
	161 JumpIfNotEqual {203}
	162 Compare X20, 0
	163 JumpIfEqual {239}
	164 Move X8, 0x15D8000
	165 Move X8, [X8+2896]
	166 Move X1, [X8]
	167 Add X8, X31, 8
	168 Move X0, X20
	169 Call List`1<Int32>.GetEnumerator, X0
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 Move X8, [X31+24]
	172 Move X22, 0x15D8000
	173 Move [X31+2], V0
	174 Move [X31+48], X8
	175 Move X22, [X22+2856]
	176 Move X1, [X22]
	177 Add X0, X31, 32
	178 Call Enumerator<Int32>.MoveNext, X0
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {189}
	183 Move X8, [X21+32]
	184 Move W1, [X31+48]
	185 Move X8, [X8+192]
	186 Move X2, [X8+512]
	187 Move X0, X19
	188 Call 0x2B47780, X0, X1
	189 Move X21, X31
	190 Move W23, 10
	191 Move X8, 0x15D8000
	192 Move X8, [X8+2840]
	193 Move X1, [X8]
	194 Add X0, X31, 32
	195 Call Enumerator<Int32>.Dispose, X0
	196 Compare X21, 0
	197 JumpIfNotEqual {240}
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Compare W23, 0
	200 JumpIfNotEqual {203}
	201 Move X21, X31
	202 Move W23, 11
	203 Move X21, X31
	204 Move X0, [X25]
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Move X8, 0x15D8000
	210 Move X8, [X8+2824]
	211 Move X0, X20
	212 Move X1, [X8]
	213 Call CollectionPool`2<Object, Int32>.Release, X0
	214 Compare X21, 0
	215 JumpIfNotEqual {234}
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Compare W23, 0
	218 JumpIfNotEqual {221}
	219 Move W8, 0xBF800000
	220 Move [X19+160], W8
	221 Move X20, [X31+144]
	222 Move X19, [X31+152]
	223 Move X22, [X31+128]
	224 Move X21, [X31+136]
	225 Move X24, [X31+112]
	226 Move X23, [X31+120]
	227 Move X30, [X31+96]
	228 Move X25, [X31+104]
	229 Add X31, X31, 160
	230 Return 
	231 Call 0x1C17F20
	232 Call 0x1C17F20
	233 Call 0x1C17F20
	234 Move X0, X21
	235 Call 0x1C17F18
	236 Call 0x1C17F20
	237 Move X0, X22
	238 Call 0x1C17F18
	239 Call 0x1C17F20
	240 Move X0, X21
	241 Call 0x1C17F18
	242 Move X23, X1
	243 Move X24, X0
	244 Move X23, X1
	245 Move X24, X0
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X0, X24
	248 Call 0x3EB2AD0
	249 Move X21, [X0]
	250 Call 0x3EB2AE0
	251 Move W23, W31
	252 Move X21, X31
	253 Move X8, 0x15D8000
	254 Move X8, [X8+2840]
	255 Move X1, [X8]
	256 Add X0, X31, 32
	257 Call Enumerator<Int32>.Dispose, X0
	258 Compare X21, 0
	259 JumpIfEqual {280}
	260 Move X0, X21
	261 Call 0x1C17F18
	262 Move X23, X1
	263 Move X24, X0
	264 Move X23, X1
	265 Move X24, X0
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move X0, X24
	268 Call 0x3EB2AD0
	269 Move X22, [X0]
	270 Call 0x3EB2AE0
	271 Move W23, W31
	272 Move X22, X31
	273 Move X8, 0x15D8000
	274 Move X8, [X8+2848]
	275 Move X1, [X8]
	276 Add X0, X31, 64
	277 Call Enumerator<Int32, Single>.Dispose, X0
	278 Compare X22, 0
	279 JumpIfNotEqual {287}
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move X0, X24
	282 Call 0x3EB2AD0
	283 Move X21, [X0]
	284 Call 0x3EB2AE0
	285 Move W23, W31
	286 Move X21, X31
	287 Move X0, X22
	288 Call 0x1C17F18
	289 Move X23, X1
	290 Move X24, X0
	291 Move X24, X0
	292 Move X0, [X25]
	293 Move W8, [X0+224]
	294 Compare W8, 0
	295 JumpIfNotEqual {297}
	296 Call 0x1C17DFC
	297 Move X8, 0x15D8000
	298 Move X8, [X8+2824]
	299 Move X1, [X8]
	300 Move X0, X20
	301 Call CollectionPool`2<Object, Int32>.Release, X0
	302 Compare X21, 0
	303 JumpIfNotEqual {306}
	304 Move X0, X24
	305 Call 0x1D2D690
	306 Move X0, X21
	307 Call 0x1C17F18
	308 Call 0x1991590

Method: System.Void OnRecycledItemGeometryChanged(UnityEngine.UIElements.ReusableCollectionItem item)

Disassembly:
	0x02B47E9C ADRP X8, 0xFFFFFFFFFEE9A000
	0x02B47EA0 ADD X8, X8, 0xF58
	0x02B47EA4 STR X8, [X19 + 0x38]
	0x02B47EA8 LDP X20, X19, [X31 + 0x20]
	0x02B47EAC LDP X22, X21, [X31 + 0x10]
	0x02B47EB0 LDR X30, [X31], #0x30
	0x02B47EB4 RET
	0x02B47EB8 ADRP X1, 0xFFFFFFFFFDFD4000
	0x02B47EBC ADD X1, X1, 0xEE3
	0x02B47EC0 MOV X0, X31
	0x02B47EC4 BL 0x1C16F3C
	0x02B47EC8 MOV X1, X31
	0x02B47ECC BL 0x1C16DEC
	0x02B47ED0 LDR X8, [X0 + 0x40]
	0x02B47ED4 LDR X5, [X0 + 0x18]
	0x02B47ED8 LDR X4, [X0 + 0x28]
	0x02B47EDC MOV X0, X8
	0x02B47EE0 BR X5
	0x02B47EE4 STR X30, [X31 - 0x20]!
	0x02B47EE8 STP X20, X19, [X31 + 0x10]
	0x02B47EEC MOV X19, X0
	0x02B47EF0 LDR X0, [X0 + 0x20]
	0x02B47EF4 LDRB W8, [X0 + 0x135]
	0x02B47EF8 TBNZ X8, 0x0, 0x2B47F00
	0x02B47EFC BL 0x1C5C684
	0x02B47F00 LDR X8, [X0 + 0xC0]
	0x02B47F04 LDR X0, [X8]
	0x02B47F08 LDRB W8, [X0 + 0x135]
	0x02B47F0C TBNZ X8, 0x0, 0x2B47F14
	0x02B47F10 BL 0x1C5C684
	0x02B47F14 MOV W1, W31
	0x02B47F18 BL 0x1C16D6C
	0x02B47F1C LDR X8, [X19 + 0x20]
	0x02B47F20 MOV X20, X0
	0x02B47F24 LDRB W9, [X8 + 0x135]
	0x02B47F28 TBNZ X9, 0x0, 0x2B47F38
	0x02B47F2C MOV X0, X8
	0x02B47F30 BL 0x1C5C684
	0x02B47F34 MOV X8, X0
	0x02B47F38 LDR X8, [X8 + 0xC0]
	0x02B47F3C LDR X0, [X8 + 0x18]
	0x02B47F40 LDRB W8, [X0 + 0x135]
	0x02B47F44 TBNZ X8, 0x0, 0x2B47F4C
	0x02B47F48 BL 0x1C5C684
	0x02B47F4C LDR X8, [X0 + 0xB8]
	0x02B47F50 STR X20, [X8]
	0x02B47F54 LDR X0, [X19 + 0x20]
	0x02B47F58 LDRB W8, [X0 + 0x135]
	0x02B47F5C TBNZ X8, 0x0, 0x2B47F64
	0x02B47F60 BL 0x1C5C684
	0x02B47F64 LDR X8, [X0 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {64}
	007 Move W8, [X1+32]
	008 Move X21, X1
	009 Add W31, W8, 1
	010 Move W8, [X21+40]
	011 Compare W8, 0
	012 JumpIfNotEqual {59}
	013 Move X8, [X21]
	014 Move X19, X0
	015 Move X0, X21
	016 Move X20, X2
	017 Move X9, [X8+376]
	018 Move X1, [X8+384]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Compare X0, 0
	021 JumpIfEqual {64}
	022 Move X1, X31
	023 Call VisualElement.get_layout, X0
	024 Move W8, S3
	025 And W8, W8, 0x7FFFFFFF
	026 Move W9, 0x7F800000
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, [X21]
	029 Move X0, X21
	030 Move X9, [X8+376]
	031 Move X1, [X8+384]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Compare X0, 0
	034 JumpIfEqual {64}
	035 Move X1, X31
	036 Call VisualElement.get_layout, X0
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move X8, [X20+32]
	039 Move X0, X19
	040 Move X1, X21
	041 Move X8, [X8+192]
	042 Move X2, [X8+520]
	043 Call 0x2B47F68, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {59}
	048 Move X8, [X20+32]
	049 Move X0, X19
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move W1, W31
	053 Move X8, [X8+192]
	054 Move X2, [X8+400]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call 0x2B46354, X0, X1
	058 Return 
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Return 
	064 Call 0x1C17F20

Method: System.Boolean UpdateRegisteredHeight(UnityEngine.UIElements.ReusableCollectionItem item)

Disassembly:
	0x02B47F68 LDR X0, [X8 + 0x18]
	0x02B47F6C LDRB W8, [X0 + 0x135]
	0x02B47F70 TBNZ X8, 0x0, 0x2B47F80
	0x02B47F74 LDP X20, X19, [X31 + 0x10]
	0x02B47F78 LDR X30, [X31], #0x20
	0x02B47F7C B 0x1C5C684
	0x02B47F80 LDP X20, X19, [X31 + 0x10]
	0x02B47F84 LDR X30, [X31], #0x20
	0x02B47F88 RET
	0x02B47F8C STR X30, [X31 - 0x20]!
	0x02B47F90 STP X20, X19, [X31 + 0x10]
	0x02B47F94 MOV X19, X0
	0x02B47F98 LDR X0, [X0 + 0x20]
	0x02B47F9C LDRB W8, [X0 + 0x135]
	0x02B47FA0 TBNZ X8, 0x0, 0x2B47FA8
	0x02B47FA4 BL 0x1C5C684
	0x02B47FA8 LDR X8, [X0 + 0xC0]
	0x02B47FAC LDR X0, [X8]
	0x02B47FB0 LDRB W8, [X0 + 0x135]
	0x02B47FB4 TBNZ X8, 0x0, 0x2B47FBC
	0x02B47FB8 BL 0x1C5C684
	0x02B47FBC MOV W1, W31
	0x02B47FC0 BL 0x1C16D6C
	0x02B47FC4 LDR X8, [X19 + 0x20]
	0x02B47FC8 MOV X20, X0
	0x02B47FCC LDRB W9, [X8 + 0x135]
	0x02B47FD0 TBNZ X9, 0x0, 0x2B47FE0
	0x02B47FD4 MOV X0, X8
	0x02B47FD8 BL 0x1C5C684
	0x02B47FDC MOV X8, X0
	0x02B47FE0 LDR X8, [X8 + 0xC0]
	0x02B47FE4 LDR X0, [X8 + 0x18]
	0x02B47FE8 LDRB W8, [X0 + 0x135]
	0x02B47FEC TBNZ X8, 0x0, 0x2B47FF4
	0x02B47FF0 BL 0x1C5C684
	0x02B47FF4 LDR X8, [X0 + 0xB8]
	0x02B47FF8 STR X20, [X8]
	0x02B47FFC LDR X0, [X19 + 0x20]
	0x02B48000 LDRB W8, [X0 + 0x135]
	0x02B48004 TBNZ X8, 0x0, 0x2B4800C
	0x02B48008 BL 0x1C5C684
	0x02B4800C LDR X8, [X0 + 0xC0]
	0x02B48010 LDR X0, [X8 + 0x18]
	0x02B48014 LDRB W8, [X0 + 0x135]
	0x02B48018 TBNZ X8, 0x0, 0x2B48028
	0x02B4801C LDP X20, X19, [X31 + 0x10]
	0x02B48020 LDR X30, [X31], #0x20
	0x02B48024 B 0x1C5C684
	0x02B48028 LDP X20, X19, [X31 + 0x10]
	0x02B4802C LDR X30, [X31], #0x20
	0x02B48030 RET
	0x02B48034 STR X30, [X31 - 0x20]!
	0x02B48038 STP X20, X19, [X31 + 0x10]
	0x02B4803C MOV X19, X0
	0x02B48040 LDR X0, [X0 + 0x20]
	0x02B48044 LDRB W8, [X0 + 0x135]
	0x02B48048 TBNZ X8, 0x0, 0x2B48050
	0x02B4804C BL 0x1C5C684
	0x02B48050 LDR X8, [X0 + 0xC0]
	0x02B48054 LDR X0, [X8]
	0x02B48058 LDRB W8, [X0 + 0x135]
	0x02B4805C TBNZ X8, 0x0, 0x2B48064
	0x02B48060 BL 0x1C5C684
	0x02B48064 MOV W1, W31
	0x02B48068 BL 0x1C16D6C
	0x02B4806C LDR X8, [X19 + 0x20]
	0x02B48070 MOV X20, X0
	0x02B48074 LDRB W9, [X8 + 0x135]
	0x02B48078 TBNZ X9, 0x0, 0x2B48088
	0x02B4807C MOV X0, X8
	0x02B48080 BL 0x1C5C684
	0x02B48084 MOV X8, X0
	0x02B48088 LDR X8, [X8 + 0xC0]
	0x02B4808C LDR X0, [X8 + 0x18]
	0x02B48090 LDRB W8, [X0 + 0x135]
	0x02B48094 TBNZ X8, 0x0, 0x2B4809C
	0x02B48098 BL 0x1C5C684
	0x02B4809C LDR X8, [X0 + 0xB8]
	0x02B480A0 STR X20, [X8]
	0x02B480A4 LDR X0, [X19 + 0x20]
	0x02B480A8 LDRB W8, [X0 + 0x135]
	0x02B480AC TBNZ X8, 0x0, 0x2B480B4
	0x02B480B0 BL 0x1C5C684
	0x02B480B4 LDR X8, [X0 + 0xC0]
	0x02B480B8 LDR X0, [X8 + 0x18]
	0x02B480BC LDRB W8, [X0 + 0x135]
	0x02B480C0 TBNZ X8, 0x0, 0x2B480D0
	0x02B480C4 LDP X20, X19, [X31 + 0x10]
	0x02B480C8 LDR X30, [X31], #0x20
	0x02B480CC B 0x1C5C684
	0x02B480D0 LDP X20, X19, [X31 + 0x10]
	0x02B480D4 LDR X30, [X31], #0x20
	0x02B480D8 RET
	0x02B480DC STR X30, [X31 - 0x20]!
	0x02B480E0 STP X20, X19, [X31 + 0x10]
	0x02B480E4 MOV X19, X0
	0x02B480E8 LDR X0, [X0 + 0x20]
	0x02B480EC LDRB W8, [X0 + 0x135]
	0x02B480F0 TBNZ X8, 0x0, 0x2B480F8
	0x02B480F4 BL 0x1C5C684
	0x02B480F8 LDR X8, [X0 + 0xC0]
	0x02B480FC LDR X0, [X8]
	0x02B48100 LDRB W8, [X0 + 0x135]
	0x02B48104 TBNZ X8, 0x0, 0x2B4810C
	0x02B48108 BL 0x1C5C684
	0x02B4810C MOV W1, W31
	0x02B48110 BL 0x1C16D6C
	0x02B48114 LDR X8, [X19 + 0x20]
	0x02B48118 MOV X20, X0
	0x02B4811C LDRB W9, [X8 + 0x135]
	0x02B48120 TBNZ X9, 0x0, 0x2B48130
	0x02B48124 MOV X0, X8
	0x02B48128 BL 0x1C5C684
	0x02B4812C MOV X8, X0
	0x02B48130 LDR X8, [X8 + 0xC0]
	0x02B48134 LDR X0, [X8 + 0x18]
	0x02B48138 LDRB W8, [X0 + 0x135]
	0x02B4813C TBNZ X8, 0x0, 0x2B48144
	0x02B48140 BL 0x1C5C684
	0x02B48144 LDR X8, [X0 + 0xB8]
	0x02B48148 STR X20, [X8]
	0x02B4814C LDR X0, [X19 + 0x20]
	0x02B48150 LDRB W8, [X0 + 0x135]
	0x02B48154 TBNZ X8, 0x0, 0x2B4815C
	0x02B48158 BL 0x1C5C684
	0x02B4815C LDR X8, [X0 + 0xC0]
	0x02B48160 LDR X0, [X8 + 0x18]
	0x02B48164 LDRB W8, [X0 + 0x135]
	0x02B48168 TBNZ X8, 0x0, 0x2B48178
	0x02B4816C LDP X20, X19, [X31 + 0x10]
	0x02B48170 LDR X30, [X31], #0x20
	0x02B48174 B 0x1C5C684
	0x02B48178 LDP X20, X19, [X31 + 0x10]
	0x02B4817C LDR X30, [X31], #0x20
	0x02B48180 RET
	0x02B48184 STR X30, [X31 - 0x20]!
	0x02B48188 STP X20, X19, [X31 + 0x10]
	0x02B4818C MOV X19, X0
	0x02B48190 LDR X0, [X0 + 0x20]
	0x02B48194 LDRB W8, [X0 + 0x135]
	0x02B48198 TBNZ X8, 0x0, 0x2B481A0
	0x02B4819C BL 0x1C5C684
	0x02B481A0 LDR X8, [X0 + 0xC0]
	0x02B481A4 LDR X0, [X8]
	0x02B481A8 LDRB W8, [X0 + 0x135]
	0x02B481AC TBNZ X8, 0x0, 0x2B481B4
	0x02B481B0 BL 0x1C5C684
	0x02B481B4 MOV W1, W31
	0x02B481B8 BL 0x1C16D6C
	0x02B481BC LDR X8, [X19 + 0x20]
	0x02B481C0 MOV X20, X0
	0x02B481C4 LDRB W9, [X8 + 0x135]
	0x02B481C8 TBNZ X9, 0x0, 0x2B481D8
	0x02B481CC MOV X0, X8
	0x02B481D0 BL 0x1C5C684
	0x02B481D4 MOV X8, X0
	0x02B481D8 LDR X8, [X8 + 0xC0]
	0x02B481DC LDR X0, [X8 + 0x18]
	0x02B481E0 LDRB W8, [X0 + 0x135]
	0x02B481E4 TBNZ X8, 0x0, 0x2B481EC
	0x02B481E8 BL 0x1C5C684
	0x02B481EC LDR X8, [X0 + 0xB8]
	0x02B481F0 STR X20, [X8]
	0x02B481F4 LDR X0, [X19 + 0x20]
	0x02B481F8 LDRB W8, [X0 + 0x135]
	0x02B481FC TBNZ X8, 0x0, 0x2B48204
	0x02B48200 BL 0x1C5C684
	0x02B48204 LDR X8, [X0 + 0xC0]
	0x02B48208 LDR X0, [X8 + 0x18]
	0x02B4820C LDRB W8, [X0 + 0x135]
	0x02B48210 TBNZ X8, 0x0, 0x2B48220
	0x02B48214 LDP X20, X19, [X31 + 0x10]
	0x02B48218 LDR X30, [X31], #0x20
	0x02B4821C B 0x1C5C684
	0x02B48220 LDP X20, X19, [X31 + 0x10]
	0x02B48224 LDR X30, [X31], #0x20
	0x02B48228 RET
	0x02B4822C STR X30, [X31 - 0x20]!
	0x02B48230 STP X20, X19, [X31 + 0x10]
	0x02B48234 MOV X19, X0
	0x02B48238 LDR X0, [X0 + 0x20]
	0x02B4823C LDRB W8, [X0 + 0x135]
	0x02B48240 TBNZ X8, 0x0, 0x2B48248
	0x02B48244 BL 0x1C5C684
	0x02B48248 LDR X8, [X0 + 0xC0]
	0x02B4824C LDR X0, [X8]
	0x02B48250 LDRB W8, [X0 + 0x135]
	0x02B48254 TBNZ X8, 0x0, 0x2B4825C
	0x02B48258 BL 0x1C5C684
	0x02B4825C MOV W1, W31
	0x02B48260 BL 0x1C16D6C
	0x02B48264 LDR X8, [X19 + 0x20]
	0x02B48268 MOV X20, X0
	0x02B4826C LDRB W9, [X8 + 0x135]
	0x02B48270 TBNZ X9, 0x0, 0x2B48280
	0x02B48274 MOV X0, X8
	0x02B48278 BL 0x1C5C684
	0x02B4827C MOV X8, X0
	0x02B48280 LDR X8, [X8 + 0xC0]
	0x02B48284 LDR X0, [X8 + 0x18]
	0x02B48288 LDRB W8, [X0 + 0x135]
	0x02B4828C TBNZ X8, 0x0, 0x2B48294
	0x02B48290 BL 0x1C5C684
	0x02B48294 LDR X8, [X0 + 0xB8]
	0x02B48298 STR X20, [X8]
	0x02B4829C LDR X0, [X19 + 0x20]
	0x02B482A0 LDRB W8, [X0 + 0x135]
	0x02B482A4 TBNZ X8, 0x0, 0x2B482AC
	0x02B482A8 BL 0x1C5C684
	0x02B482AC LDR X8, [X0 + 0xC0]
	0x02B482B0 LDR X0, [X8 + 0x18]
	0x02B482B4 LDRB W8, [X0 + 0x135]
	0x02B482B8 TBNZ X8, 0x0, 0x2B482C8
	0x02B482BC LDP X20, X19, [X31 + 0x10]
	0x02B482C0 LDR X30, [X31], #0x20
	0x02B482C4 B 0x1C5C684
	0x02B482C8 LDP X20, X19, [X31 + 0x10]
	0x02B482CC LDR X30, [X31], #0x20
	0x02B482D0 RET
	0x02B482D4 STR X30, [X31 - 0x20]!
	0x02B482D8 STP X20, X19, [X31 + 0x10]
	0x02B482DC MOV X19, X0
	0x02B482E0 LDR X0, [X0 + 0x20]
	0x02B482E4 LDRB W8, [X0 + 0x135]
	0x02B482E8 TBNZ X8, 0x0, 0x2B482F0
	0x02B482EC BL 0x1C5C684
	0x02B482F0 LDR X8, [X0 + 0xC0]
	0x02B482F4 LDR X0, [X8]
	0x02B482F8 LDRB W8, [X0 + 0x135]
	0x02B482FC TBNZ X8, 0x0, 0x2B48304
	0x02B48300 BL 0x1C5C684
	0x02B48304 MOV W1, W31
	0x02B48308 BL 0x1C16D6C
	0x02B4830C LDR X8, [X19 + 0x20]
	0x02B48310 MOV X20, X0
	0x02B48314 LDRB W9, [X8 + 0x135]
	0x02B48318 TBNZ X9, 0x0, 0x2B48328
	0x02B4831C MOV X0, X8
	0x02B48320 BL 0x1C5C684
	0x02B48324 MOV X8, X0
	0x02B48328 LDR X8, [X8 + 0xC0]
	0x02B4832C LDR X0, [X8 + 0x18]
	0x02B48330 LDRB W8, [X0 + 0x135]
	0x02B48334 TBNZ X8, 0x0, 0x2B4833C
	0x02B48338 BL 0x1C5C684
	0x02B4833C LDR X8, [X0 + 0xB8]
	0x02B48340 STR X20, [X8]
	0x02B48344 LDR X0, [X19 + 0x20]
	0x02B48348 LDRB W8, [X0 + 0x135]
	0x02B4834C TBNZ X8, 0x0, 0x2B48354
	0x02B48350 BL 0x1C5C684
	0x02B48354 LDR X8, [X0 + 0xC0]
	0x02B48358 LDR X0, [X8 + 0x18]
	0x02B4835C LDRB W8, [X0 + 0x135]
	0x02B48360 TBNZ X8, 0x0, 0x2B48370
	0x02B48364 LDP X20, X19, [X31 + 0x10]
	0x02B48368 LDR X30, [X31], #0x20
	0x02B4836C B 0x1C5C684
	0x02B48370 LDP X20, X19, [X31 + 0x10]
	0x02B48374 LDR X30, [X31], #0x20
	0x02B48378 RET
	0x02B4837C STR X30, [X31 - 0x20]!
	0x02B48380 STP X20, X19, [X31 + 0x10]
	0x02B48384 MOV X19, X0

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1895000
	011 Move W8, [X22+1291]
	012 Move X21, X2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x15D8000
	020 Move X0, [X0+2752]
	021 Call 0x1C17CF4
	022 Move X0, 0x15BA000
	023 Move X0, [X0+1440]
	024 Call 0x1C17CF4
	025 Move X0, 0x15B4000
	026 Move X0, [X0+2128]
	027 Call 0x1C17CF4
	028 Move X0, 0x15D6000
	029 Move X0, [X0+288]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+1291], W8
	033 Move [X31+44], W31
	034 Compare X20, 0
	035 JumpIfEqual {301}
	036 Move W8, [X20+32]
	037 Add W31, W8, 1
	038 Move W8, [X20+40]
	039 Compare W8, 0
	040 JumpIfNotEqual {289}
	041 Move X8, [X20]
	042 Move X0, X20
	043 Move X9, [X8+376]
	044 Move X1, [X8+384]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Compare X0, 0
	047 JumpIfEqual {301}
	048 Move X1, X31
	049 Call VisualElement.get_layout, X0
	050 Move W8, S3
	051 And W8, W8, 0x7FFFFFFF
	052 Move W9, 0x7F800000
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, [X20]
	055 Move X0, X20
	056 Move X9, [X8+376]
	057 Move X1, [X8+384]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Compare X0, 0
	060 JumpIfEqual {301}
	061 Move X1, X31
	062 Call VisualElement.get_layout, X0
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 Move X8, [X20]
	065 Move X0, X20
	066 Move X9, [X8+376]
	067 Move X1, [X8+384]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Compare X0, 0
	070 JumpIfEqual {301}
	071 Move X1, X31
	072 Call VisualElement.get_layout, X0
	073 Move X0, X19
	074 Move V8, V3
	075 Call 0x2B4408C, X0
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 Move X8, [X20]
	078 Move X0, X20
	079 Move X9, [X8+376]
	080 Move X1, [X8+384]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Compare X0, 0
	083 JumpIfEqual {301}
	084 Move X1, X31
	085 Call VisualElement.get_layout, X0
	086 Move X0, [X19+16]
	087 Move [X19+160], S3
	088 Compare X0, 0
	089 JumpIfEqual {301}
	090 Move X1, X31
	091 Call VisualElement.get_layout, X0
	092 Move X8, [X19]
	093 Move V0, V2
	094 Move V1, V3
	095 Move X0, X19
	096 Move X9, [X8+456]
	097 Move X1, [X8+464]
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X8, [X20]
	100 Move X0, X20
	101 Move X9, [X8+376]
	102 Move X1, [X8+384]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Compare X0, 0
	105 JumpIfEqual {301}
	106 Move X1, X31
	107 Call VisualElement.get_layout, X0
	108 Move X8, [X20]
	109 Move X0, X20
	110 Move V9, V3
	111 Move X9, [X8+376]
	112 Move X1, [X8+384]
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Compare X0, 0
	115 JumpIfEqual {301}
	116 Move X1, X31
	117 Call VisualElement.get_resolvedStyle, X0
	118 Compare X0, 0
	119 JumpIfEqual {301}
	120 Move X10, 0x15D5000
	121 Move X8, [X0]
	122 Move X10, [X10+288]
	123 Move X22, X0
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Move X1, [X10]
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move W2, 31
	135 Move X0, X22
	136 Call 0x1C5D788
	137 Move W9, [X10]
	138 Add W9, W9, 31
	139 Add X8, X8, W9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X1, [X0+8]
	143 Move X0, X22
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X0, [X19+104]
	146 Compare X0, 0
	147 JumpIfEqual {301}
	148 Move X8, 0x15D7000
	149 Move W1, [X20+32]
	150 Move X8, [X8+2752]
	151 Add X2, X31, 44
	152 Move V10, V0
	153 Move X3, [X8]
	154 Call Dictionary`2<Int32, Single>.TryGetValue, X0, X1, X2
	155 Move W22, W0
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {166}
	160 Move X8, [X19]
	161 Move W1, [X20+32]
	162 Move X0, X19
	163 Move X9, [X8+504]
	164 Move X2, [X8+512]
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Move X0, X19
	167 Call 0x2B4408C, X0
	168 Move X8, [X19+120]
	169 Move V8, V0
	170 Compare X8, 0
	171 JumpIfEqual {301}
	172 Move W8, [X8+32]
	173 Subtract S9, S9, S10
	174 Compare W8, 0
	175 JumpIfNotEqual {219}
	176 NotImplemented "Instruction FCMP not yet implemented."
	177 Move [X19+136], W31
	178 Move X8, [X21+32]
	179 Move X0, X19
	180 Move X8, [X8+192]
	181 Move X1, [X8+152]
	182 Call 0x2B4427C, X0
	183 Move X8, [X19+16]
	184 Compare X8, 0
	185 JumpIfEqual {301}
	186 Move X0, [X8+1048]
	187 Compare X0, 0
	188 JumpIfEqual {301}
	189 Move X1, X31
	190 Move V10, V0
	191 Call VisualElement.get_layout, X0
	192 Subtract S0, S10, S3
	193 Move S1, W31
	194 NotImplemented "Instruction FMAX not yet implemented."
	195 NotImplemented "Instruction FCMP not yet implemented."
	196 Move X8, [X21+32]
	197 Move X0, X19
	198 Move X8, [X8+192]
	199 Move X1, [X8+16]
	200 Call 0x2843CF4, X0
	201 Compare X0, 0
	202 JumpIfEqual {301}
	203 Move X8, [X19+16]
	204 Compare X8, 0
	205 JumpIfEqual {301}
	206 Move X8, [X8+1064]
	207 Compare X8, 0
	208 JumpIfEqual {301}
	209 Move V10, [X0+20]
	210 Move X0, X8
	211 Move X1, X31
	212 Subtract S11, S9, S8
	213 Call Scroller.get_highValue, X0
	214 Add S0, S11, S0
	215 NotImplemented "Instruction FCMP not yet implemented."
	216 NotImplemented "Instruction CSET not yet implemented."
	217 Move W8, W31
	218 Move [X19+136], W8
	219 Move TEMP, X22
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfNotEqual {254}
	223 Move X22, 0x1892000
	224 Move W8, [X22+1450]
	225 Move V10, [X31+44]
	226 Compare W8, 0
	227 JumpIfNotEqual {233}
	228 Move X0, 0x15B3000
	229 Move X0, [X0+1208]
	230 Call 0x1C17CF4
	231 Move W8, 1
	232 Move [X22+1450], W8
	233 Move X8, 0x15B3000
	234 Move X8, [X8+1208]
	235 Move X9, -33935360
	236 Move V0, [X9+576]
	237 NotImplemented "Instruction FABS not yet implemented."
	238 Move X8, [X8]
	239 NotImplemented "Instruction FABS not yet implemented."
	240 NotImplemented "Instruction FCMP not yet implemented."
	241 NotImplemented "Instruction FCSEL not yet implemented."
	242 Move X8, [X8+184]
	243 Multiply S0, S1, S0
	244 Move S1, 8
	245 Move V3, [X8]
	246 Multiply S1, S3, S1
	247 NotImplemented "Instruction FCMP not yet implemented."
	248 NotImplemented "Instruction FCSEL not yet implemented."
	249 NotImplemented "Instruction FABD not yet implemented."
	250 NotImplemented "Instruction FCMP not yet implemented."
	251 Move X0, [X19+120]
	252 Compare X0, 0
	253 JumpIfNotEqual {274}
	254 Move X8, [X21+32]
	255 Move W1, [X20+32]
	256 Move X0, X19
	257 Move V0, V9
	258 Move X8, [X8+192]
	259 Move X2, [X8+528]
	260 Call 0x2B47468, X0, X1, V0
	261 Move X8, [X21+32]
	262 Move X0, X19
	263 Move V0, V8
	264 Move V1, V9
	265 Move X8, [X8+192]
	266 Move X1, [X8+536]
	267 Call 0x2B46238, X0, V0, V1
	268 Move X0, [X19+120]
	269 Compare X0, 0
	270 JumpIfEqual {301}
	271 Move W8, [X0+32]
	272 Compare W8, 0
	273 JumpIfEqual {300}
	274 Move X8, 0x15B9000
	275 Move W1, [X20+32]
	276 Move X8, [X8+1440]
	277 Move X2, [X8]
	278 Call HashSet`1<Int32>.Remove, X0, X1
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {289}
	283 Move X8, [X19+120]
	284 Compare X8, 0
	285 JumpIfEqual {301}
	286 Move W8, [X8+32]
	287 NotImplemented "Instruction CMP not yet implemented."
	288 NotImplemented "Instruction CSET not yet implemented."
	289 Move W0, W31
	290 Move X20, [X31+64]
	291 Move X19, [X31+72]
	292 Move X22, [X31+48]
	293 Move X21, [X31+56]
	294 Move X30, [X31+32]
	295 Move D9, [X31+16]
	296 Move D8, [X31+24]
	297 Move D11, [X31+80]
	298 Move D10, [X31+88]
	299 Return X0
	300 Move W0, 1
	301 Call 0x1C17F20

Method: T GetOrMakeItemAtIndex(System.Int32 activeItemIndex = -1, System.Int32 scrollViewIndex = -1)

Disassembly:
	0x02B48388 LDR X0, [X0 + 0x20]
	0x02B4838C LDRB W8, [X0 + 0x135]
	0x02B48390 TBNZ X8, 0x0, 0x2B48398
	0x02B48394 BL 0x1C5C684
	0x02B48398 LDR X8, [X0 + 0xC0]
	0x02B4839C LDR X0, [X8]
	0x02B483A0 LDRB W8, [X0 + 0x135]
	0x02B483A4 TBNZ X8, 0x0, 0x2B483AC
	0x02B483A8 BL 0x1C5C684
	0x02B483AC MOV W1, W31
	0x02B483B0 BL 0x1C16D6C
	0x02B483B4 LDR X8, [X19 + 0x20]
	0x02B483B8 MOV X20, X0
	0x02B483BC LDRB W9, [X8 + 0x135]
	0x02B483C0 TBNZ X9, 0x0, 0x2B483D0
	0x02B483C4 MOV X0, X8
	0x02B483C8 BL 0x1C5C684
	0x02B483CC MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {22}
	006 Move X8, [X3+32]
	007 Move X19, X0
	008 Move X8, [X8+192]
	009 Move X3, [X8+208]
	010 Call 0x2845AB4, X0, X1, X2
	011 Compare X0, 0
	012 JumpIfEqual {22}
	013 Move X1, [X19+192]
	014 Move X2, X31
	015 Move X20, X0
	016 Call ReusableCollectionItem.add_onGeometryChanged, X0, X1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0
	022 Call 0x1C17F20

Method: System.Void ReleaseItem(System.Int32 activeItemsIndex)

Disassembly:
	0x02B483D0 LDR X8, [X8 + 0xC0]
	0x02B483D4 LDR X0, [X8 + 0x18]
	0x02B483D8 LDRB W8, [X0 + 0x135]
	0x02B483DC TBNZ X8, 0x0, 0x2B483E4
	0x02B483E0 BL 0x1C5C684
	0x02B483E4 LDR X8, [X0 + 0xB8]
	0x02B483E8 STR X20, [X8]
	0x02B483EC LDR X0, [X19 + 0x20]
	0x02B483F0 LDRB W8, [X0 + 0x135]
	0x02B483F4 TBNZ X8, 0x0, 0x2B483FC
	0x02B483F8 BL 0x1C5C684
	0x02B483FC LDR X8, [X0 + 0xC0]
	0x02B48400 LDR X0, [X8 + 0x18]
	0x02B48404 LDRB W8, [X0 + 0x135]
	0x02B48408 TBNZ X8, 0x0, 0x2B48418
	0x02B4840C LDP X20, X19, [X31 + 0x10]
	0x02B48410 LDR X30, [X31], #0x20
	0x02B48414 B 0x1C5C684
	0x02B48418 LDP X20, X19, [X31 + 0x10]
	0x02B4841C LDR X30, [X31], #0x20
	0x02B48420 RET
	0x02B48424 STR X30, [X31 - 0x20]!
	0x02B48428 STP X20, X19, [X31 + 0x10]
	0x02B4842C MOV X19, X0
	0x02B48430 LDR X0, [X0 + 0x20]
	0x02B48434 LDRB W8, [X0 + 0x135]
	0x02B48438 TBNZ X8, 0x0, 0x2B48440
	0x02B4843C BL 0x1C5C684
	0x02B48440 LDR X8, [X0 + 0xC0]
	0x02B48444 LDR X0, [X8]
	0x02B48448 LDRB W8, [X0 + 0x135]
	0x02B4844C TBNZ X8, 0x0, 0x2B48454
	0x02B48450 BL 0x1C5C684
	0x02B48454 MOV W1, W31
	0x02B48458 BL 0x1C16D6C
	0x02B4845C LDR X8, [X19 + 0x20]
	0x02B48460 MOV X20, X0
	0x02B48464 LDRB W9, [X8 + 0x135]
	0x02B48468 TBNZ X9, 0x0, 0x2B48478
	0x02B4846C MOV X0, X8
	0x02B48470 BL 0x1C5C684
	0x02B48474 MOV X8, X0
	0x02B48478 LDR X8, [X8 + 0xC0]
	0x02B4847C LDR X0, [X8 + 0x18]
	0x02B48480 LDRB W8, [X0 + 0x135]
	0x02B48484 TBNZ X8, 0x0, 0x2B4848C
	0x02B48488 BL 0x1C5C684
	0x02B4848C LDR X8, [X0 + 0xB8]
	0x02B48490 STR X20, [X8]
	0x02B48494 LDR X0, [X19 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1894000
	007 Move W8, [X22+1292]
	008 Move X21, X2
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x15B9000
	016 Move X0, [X0+1440]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1292], W8
	020 Move X0, [X19+40]
	021 Compare X0, 0
	022 JumpIfEqual {61}
	023 Move X8, [X21+32]
	024 Move W1, W20
	025 Move X8, [X8+192]
	026 Move X2, [X8+296]
	027 Call List`1<Object>.get_Item, X0, X1
	028 Compare X0, 0
	029 JumpIfEqual {61}
	030 Move X1, [X19+192]
	031 Move X2, X31
	032 Move X22, X0
	033 Call ReusableCollectionItem.remove_onGeometryChanged, X0, X1
	034 Move X8, [X21+32]
	035 Move W22, [X22+32]
	036 Move X0, X19
	037 Move X8, [X8+192]
	038 Move W1, W22
	039 Move X2, [X8+512]
	040 Call 0x2B47780, X0, X1
	041 Move X8, [X21+32]
	042 Move X0, X19
	043 Move W1, W20
	044 Move X8, [X8+192]
	045 Move X2, [X8+200]
	046 Call 0x2845C70, X0, X1
	047 Move X0, [X19+120]
	048 Compare X0, 0
	049 JumpIfEqual {61}
	050 Move X8, 0x15B9000
	051 Move X8, [X8+1440]
	052 Move W1, W22
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X2, [X8]
	058 Move X30, [X31+48]
	059 Call HashSet`1<Int32>.Remove, X0, X1
	060 Return 
	061 Call 0x1C17F20

Method: System.Void StartDragItem(UnityEngine.UIElements.ReusableCollectionItem item)

Disassembly:
	0x02B48498 LDRB W8, [X0 + 0x135]
	0x02B4849C TBNZ X8, 0x0, 0x2B484A4
	0x02B484A0 BL 0x1C5C684
	0x02B484A4 LDR X8, [X0 + 0xC0]
	0x02B484A8 LDR X0, [X8 + 0x18]
	0x02B484AC LDRB W8, [X0 + 0x135]
	0x02B484B0 TBNZ X8, 0x0, 0x2B484C0
	0x02B484B4 LDP X20, X19, [X31 + 0x10]
	0x02B484B8 LDR X30, [X31], #0x20
	0x02B484BC B 0x1C5C684
	0x02B484C0 LDP X20, X19, [X31 + 0x10]
	0x02B484C4 LDR X30, [X31], #0x20
	0x02B484C8 RET
	0x02B484CC STR X30, [X31 - 0x20]!
	0x02B484D0 STP X20, X19, [X31 + 0x10]
	0x02B484D4 MOV X19, X0
	0x02B484D8 LDR X0, [X0 + 0x20]
	0x02B484DC LDRB W8, [X0 + 0x135]
	0x02B484E0 TBNZ X8, 0x0, 0x2B484E8
	0x02B484E4 BL 0x1C5C684
	0x02B484E8 LDR X8, [X0 + 0xC0]
	0x02B484EC LDR X0, [X8]
	0x02B484F0 LDRB W8, [X0 + 0x135]
	0x02B484F4 TBNZ X8, 0x0, 0x2B484FC
	0x02B484F8 BL 0x1C5C684
	0x02B484FC MOV W1, W31
	0x02B48500 BL 0x1C16D6C
	0x02B48504 LDR X8, [X19 + 0x20]
	0x02B48508 MOV X20, X0
	0x02B4850C LDRB W9, [X8 + 0x135]
	0x02B48510 TBNZ X9, 0x0, 0x2B48520
	0x02B48514 MOV X0, X8
	0x02B48518 BL 0x1C5C684
	0x02B4851C MOV X8, X0
	0x02B48520 LDR X8, [X8 + 0xC0]
	0x02B48524 LDR X0, [X8 + 0x18]
	0x02B48528 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1894000
	007 Move W8, [X22+1293]
	008 Move X21, X2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x15B9000
	016 Move X0, [X0+1440]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1293], W8
	020 Compare X20, 0
	021 JumpIfEqual {48}
	022 Move X0, [X19+120]
	023 Compare X0, 0
	024 JumpIfEqual {48}
	025 Move X8, 0x15B9000
	026 Move X8, [X8+1440]
	027 Move W1, [X20+32]
	028 Move X2, [X8]
	029 Call HashSet`1<Int32>.Remove, X0, X1
	030 Move X8, [X21+32]
	031 Move X0, X19
	032 Move X1, X20
	033 Move X8, [X8+192]
	034 Move X2, [X8+544]
	035 Call 0x28455F4, X0, X1
	036 Move X0, [X19+48]
	037 Compare X0, 0
	038 JumpIfEqual {48}
	039 Move X1, [X19+192]
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X2, X31
	045 Move X30, [X31+48]
	046 Call ReusableCollectionItem.remove_onGeometryChanged, X0, X1
	047 Return 
	048 Call 0x1C17F20

Method: System.Void EndDrag(System.Int32 dropIndex)

Disassembly:
	0x02B4852C TBNZ X8, 0x0, 0x2B48534
	0x02B48530 BL 0x1C5C684
	0x02B48534 LDR X8, [X0 + 0xB8]
	0x02B48538 STR X20, [X8]
	0x02B4853C LDR X0, [X19 + 0x20]
	0x02B48540 LDRB W8, [X0 + 0x135]
	0x02B48544 TBNZ X8, 0x0, 0x2B4854C
	0x02B48548 BL 0x1C5C684
	0x02B4854C LDR X8, [X0 + 0xC0]
	0x02B48550 LDR X0, [X8 + 0x18]
	0x02B48554 LDRB W8, [X0 + 0x135]
	0x02B48558 TBNZ X8, 0x0, 0x2B48568
	0x02B4855C LDP X20, X19, [X31 + 0x10]
	0x02B48560 LDR X30, [X31], #0x20
	0x02B48564 B 0x1C5C684
	0x02B48568 LDP X20, X19, [X31 + 0x10]
	0x02B4856C LDR X30, [X31], #0x20
	0x02B48570 RET
	0x02B48574 STR X30, [X31 - 0x20]!
	0x02B48578 STP X20, X19, [X31 + 0x10]
	0x02B4857C MOV X19, X0
	0x02B48580 LDR X0, [X0 + 0x20]
	0x02B48584 LDRB W8, [X0 + 0x135]
	0x02B48588 TBNZ X8, 0x0, 0x2B48590
	0x02B4858C BL 0x1C5C684
	0x02B48590 LDR X8, [X0 + 0xC0]
	0x02B48594 LDR X0, [X8]
	0x02B48598 LDRB W8, [X0 + 0x135]
	0x02B4859C TBNZ X8, 0x0, 0x2B485A4
	0x02B485A0 BL 0x1C5C684
	0x02B485A4 MOV W1, W31
	0x02B485A8 BL 0x1C16D6C
	0x02B485AC LDR X8, [X19 + 0x20]
	0x02B485B0 MOV X20, X0
	0x02B485B4 LDRB W9, [X8 + 0x135]
	0x02B485B8 TBNZ X9, 0x0, 0x2B485C8
	0x02B485BC MOV X0, X8
	0x02B485C0 BL 0x1C5C684
	0x02B485C4 MOV X8, X0
	0x02B485C8 LDR X8, [X8 + 0xC0]
	0x02B485CC LDR X0, [X8 + 0x18]
	0x02B485D0 LDRB W8, [X0 + 0x135]
	0x02B485D4 TBNZ X8, 0x0, 0x2B485DC
	0x02B485D8 BL 0x1C5C684
	0x02B485DC LDR X8, [X0 + 0xB8]
	0x02B485E0 STR X20, [X8]
	0x02B485E4 LDR X0, [X19 + 0x20]
	0x02B485E8 LDRB W8, [X0 + 0x135]
	0x02B485EC TBNZ X8, 0x0, 0x2B485F4
	0x02B485F0 BL 0x1C5C684
	0x02B485F4 LDR X8, [X0 + 0xC0]
	0x02B485F8 LDR X0, [X8 + 0x18]
	0x02B485FC LDRB W8, [X0 + 0x135]
	0x02B48600 TBNZ X8, 0x0, 0x2B48610
	0x02B48604 LDP X20, X19, [X31 + 0x10]
	0x02B48608 LDR X30, [X31], #0x20
	0x02B4860C B 0x1C5C684
	0x02B48610 LDP X20, X19, [X31 + 0x10]
	0x02B48614 LDR X30, [X31], #0x20
	0x02B48618 RET
	0x02B4861C STR X30, [X31 - 0x20]!
	0x02B48620 STP X20, X19, [X31 + 0x10]
	0x02B48624 MOV X19, X0
	0x02B48628 LDR X0, [X0 + 0x20]
	0x02B4862C LDRB W8, [X0 + 0x135]
	0x02B48630 TBNZ X8, 0x0, 0x2B48638
	0x02B48634 BL 0x1C5C684
	0x02B48638 LDR X8, [X0 + 0xC0]
	0x02B4863C LDR X0, [X8]
	0x02B48640 LDRB W8, [X0 + 0x135]
	0x02B48644 TBNZ X8, 0x0, 0x2B4864C
	0x02B48648 BL 0x1C5C684
	0x02B4864C MOV W1, W31
	0x02B48650 BL 0x1C16D6C
	0x02B48654 LDR X8, [X19 + 0x20]
	0x02B48658 MOV X20, X0
	0x02B4865C LDRB W9, [X8 + 0x135]
	0x02B48660 TBNZ X9, 0x0, 0x2B48670
	0x02B48664 MOV X0, X8
	0x02B48668 BL 0x1C5C684
	0x02B4866C MOV X8, X0
	0x02B48670 LDR X8, [X8 + 0xC0]
	0x02B48674 LDR X0, [X8 + 0x18]
	0x02B48678 LDRB W8, [X0 + 0x135]
	0x02B4867C TBNZ X8, 0x0, 0x2B48684
	0x02B48680 BL 0x1C5C684
	0x02B48684 LDR X8, [X0 + 0xB8]
	0x02B48688 STR X20, [X8]
	0x02B4868C LDR X0, [X19 + 0x20]
	0x02B48690 LDRB W8, [X0 + 0x135]
	0x02B48694 TBNZ X8, 0x0, 0x2B4869C
	0x02B48698 BL 0x1C5C684
	0x02B4869C LDR X8, [X0 + 0xC0]
	0x02B486A0 LDR X0, [X8 + 0x18]
	0x02B486A4 LDRB W8, [X0 + 0x135]
	0x02B486A8 TBNZ X8, 0x0, 0x2B486B8
	0x02B486AC LDP X20, X19, [X31 + 0x10]
	0x02B486B0 LDR X30, [X31], #0x20
	0x02B486B4 B 0x1C5C684
	0x02B486B8 LDP X20, X19, [X31 + 0x10]
	0x02B486BC LDR X30, [X31], #0x20
	0x02B486C0 RET
	0x02B486C4 STR X30, [X31 - 0x20]!
	0x02B486C8 STP X20, X19, [X31 + 0x10]
	0x02B486CC MOV X19, X0
	0x02B486D0 LDR X0, [X0 + 0x20]
	0x02B486D4 LDRB W8, [X0 + 0x135]
	0x02B486D8 TBNZ X8, 0x0, 0x2B486E0
	0x02B486DC BL 0x1C5C684
	0x02B486E0 LDR X8, [X0 + 0xC0]
	0x02B486E4 LDR X0, [X8]
	0x02B486E8 LDRB W8, [X0 + 0x135]
	0x02B486EC TBNZ X8, 0x0, 0x2B486F4
	0x02B486F0 BL 0x1C5C684
	0x02B486F4 MOV W1, W31
	0x02B486F8 BL 0x1C16D6C
	0x02B486FC LDR X8, [X19 + 0x20]
	0x02B48700 MOV X20, X0
	0x02B48704 LDRB W9, [X8 + 0x135]
	0x02B48708 TBNZ X9, 0x0, 0x2B48718
	0x02B4870C MOV X0, X8
	0x02B48710 BL 0x1C5C684
	0x02B48714 MOV X8, X0
	0x02B48718 LDR X8, [X8 + 0xC0]
	0x02B4871C LDR X0, [X8 + 0x18]
	0x02B48720 LDRB W8, [X0 + 0x135]
	0x02B48724 TBNZ X8, 0x0, 0x2B4872C
	0x02B48728 BL 0x1C5C684
	0x02B4872C LDR X8, [X0 + 0xB8]
	0x02B48730 STR X20, [X8]
	0x02B48734 LDR X0, [X19 + 0x20]
	0x02B48738 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-128], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X30
	007 Move [X31+48], X28
	008 Move [X31+56], X27
	009 Move [X31+64], X26
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Move X8, [X0+48]
	018 Compare X8, 0
	019 JumpIfEqual {153}
	020 Move X9, [X0]
	021 Move W22, [X8+32]
	022 Move X21, X2
	023 Move W20, W1
	024 Move X8, [X9+504]
	025 Move X2, [X9+512]
	026 Move W1, W22
	027 Move X19, X0
	028 NotImplemented "Instruction BLR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W26, 1
	031 Move V8, V0
	032 NotImplemented "Instruction CSNEG not yet implemented."
	033 Move X8, -33935360
	034 Move X23, 0x15B3000
	035 Move V11, [X8+576]
	036 Move X23, [X23+1208]
	037 Move X28, 0x1892000
	038 Move S12, 8
	039 Move W24, W22
	040 Move X8, [X19]
	041 Move X0, X19
	042 Move W1, W24
	043 Move X9, [X8+504]
	044 Move X2, [X8+512]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X8, [X19]
	047 Add W25, W24, W27
	048 Move X0, X19
	049 Move W1, W25
	050 Move X9, [X8+504]
	051 Move X2, [X8+512]
	052 Move V9, V0
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move W8, [X28+1450]
	055 Move V10, V0
	056 Compare W8, 0
	057 JumpIfNotEqual {61}
	058 Move X0, X23
	059 Call 0x1C17CF4
	060 Move [X28+1450], W26
	061 Move X8, [X23]
	062 NotImplemented "Instruction FABS not yet implemented."
	063 NotImplemented "Instruction FABS not yet implemented."
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 Move X8, [X8+184]
	066 NotImplemented "Instruction FCSEL not yet implemented."
	067 Multiply S0, S0, S11
	068 Move V2, [X8]
	069 Multiply S1, S2, S12
	070 NotImplemented "Instruction FCMP not yet implemented."
	071 NotImplemented "Instruction FCSEL not yet implemented."
	072 NotImplemented "Instruction FABD not yet implemented."
	073 NotImplemented "Instruction FCMP not yet implemented."
	074 Move X8, [X21+32]
	075 Move X0, X19
	076 Move W1, W24
	077 Move V0, V10
	078 Move X8, [X8+192]
	079 Move X2, [X8+528]
	080 Call 0x2B47468, X0, X1, V0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W24, W25
	083 Move X8, [X21+32]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, X19
	086 Move V0, V8
	087 Move X8, [X8+192]
	088 Move X2, [X8+528]
	089 NotImplemented "Instruction CSET not yet implemented."
	090 Subtract W1, W20, W8
	091 Call 0x2B47468, X0, X1, V0
	092 Move X8, [X19]
	093 Move X0, X19
	094 Move X9, [X8+376]
	095 Move X1, [X8+384]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X8, [X19+48]
	098 Compare X8, 0
	099 JumpIfEqual {153}
	100 Move W9, [X8+32]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, [X21+32]
	103 Move X0, X19
	104 Move X8, [X8+192]
	105 Move X1, [X8+16]
	106 Call 0x2843CF4, X0
	107 Compare X0, 0
	108 JumpIfEqual {153}
	109 Move V0, [X0+20]
	110 Move X0, X19
	111 Call 0x2B471C8, X0, V0
	112 Move X8, [X19]
	113 Move W1, W0
	114 Move X0, X19
	115 Move X9, [X8+392]
	116 Move X2, [X8+400]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X8, [X21+32]
	119 Move X0, X19
	120 Move X8, [X8+192]
	121 Move X1, [X8+376]
	122 Call 0x2B46ADC, X0
	123 Move X8, [X19+48]
	124 Compare X8, 0
	125 JumpIfEqual {153}
	126 Move X1, [X19+192]
	127 Move X0, X8
	128 Move X2, X31
	129 Call ReusableCollectionItem.add_onGeometryChanged, X0, X1
	130 Move X8, [X21+32]
	131 Move X0, X19
	132 Move W1, W20
	133 Move X20, [X31+112]
	134 Move X19, [X31+120]
	135 Move X8, [X8+192]
	136 Move X22, [X31+96]
	137 Move X21, [X31+104]
	138 Move X24, [X31+80]
	139 Move X23, [X31+88]
	140 Move X26, [X31+64]
	141 Move X25, [X31+72]
	142 Move X2, [X8+552]
	143 Move X28, [X31+48]
	144 Move X27, [X31+56]
	145 Move X30, [X31+40]
	146 Move D9, [X31+24]
	147 Move D8, [X31+32]
	148 Move D11, [X31+8]
	149 Move D10, [X31+16]
	150 Move V12, [X31+128]
	151 Call 0x284577C, X0, X1
	152 Return 
	153 Call 0x1C17F20

Method: System.Void HideItem(System.Int32 activeItemsIndex)

Disassembly:
	0x02B4873C TBNZ X8, 0x0, 0x2B48744
	0x02B48740 BL 0x1C5C684
	0x02B48744 LDR X8, [X0 + 0xC0]
	0x02B48748 LDR X0, [X8 + 0x18]
	0x02B4874C LDRB W8, [X0 + 0x135]
	0x02B48750 TBNZ X8, 0x0, 0x2B48760
	0x02B48754 LDP X20, X19, [X31 + 0x10]
	0x02B48758 LDR X30, [X31], #0x20
	0x02B4875C B 0x1C5C684
	0x02B48760 LDP X20, X19, [X31 + 0x10]
	0x02B48764 LDR X30, [X31], #0x20
	0x02B48768 RET
	0x02B4876C STR X30, [X31 - 0x20]!
	0x02B48770 STP X20, X19, [X31 + 0x10]
	0x02B48774 MOV X19, X0
	0x02B48778 LDR X0, [X0 + 0x20]
	0x02B4877C LDRB W8, [X0 + 0x135]
	0x02B48780 TBNZ X8, 0x0, 0x2B48788
	0x02B48784 BL 0x1C5C684
	0x02B48788 LDR X8, [X0 + 0xC0]
	0x02B4878C LDR X0, [X8]
	0x02B48790 LDRB W8, [X0 + 0x135]
	0x02B48794 TBNZ X8, 0x0, 0x2B4879C
	0x02B48798 BL 0x1C5C684
	0x02B4879C MOV W1, W31
	0x02B487A0 BL 0x1C16D6C
	0x02B487A4 LDR X8, [X19 + 0x20]
	0x02B487A8 MOV X20, X0
	0x02B487AC LDRB W9, [X8 + 0x135]
	0x02B487B0 TBNZ X9, 0x0, 0x2B487C0
	0x02B487B4 MOV X0, X8
	0x02B487B8 BL 0x1C5C684
	0x02B487BC MOV X8, X0
	0x02B487C0 LDR X8, [X8 + 0xC0]
	0x02B487C4 LDR X0, [X8 + 0x18]
	0x02B487C8 LDRB W8, [X0 + 0x135]
	0x02B487CC TBNZ X8, 0x0, 0x2B487D4
	0x02B487D0 BL 0x1C5C684
	0x02B487D4 LDR X8, [X0 + 0xB8]
	0x02B487D8 STR X20, [X8]
	0x02B487DC LDR X0, [X19 + 0x20]
	0x02B487E0 LDRB W8, [X0 + 0x135]
	0x02B487E4 TBNZ X8, 0x0, 0x2B487EC
	0x02B487E8 BL 0x1C5C684
	0x02B487EC LDR X8, [X0 + 0xC0]
	0x02B487F0 LDR X0, [X8 + 0x18]
	0x02B487F4 LDRB W8, [X0 + 0x135]
	0x02B487F8 TBNZ X8, 0x0, 0x2B48808
	0x02B487FC LDP X20, X19, [X31 + 0x10]
	0x02B48800 LDR X30, [X31], #0x20
	0x02B48804 B 0x1C5C684
	0x02B48808 LDP X20, X19, [X31 + 0x10]
	0x02B4880C LDR X30, [X31], #0x20
	0x02B48810 RET
	0x02B48814 STR X30, [X31 - 0x20]!
	0x02B48818 STP X20, X19, [X31 + 0x10]
	0x02B4881C MOV X19, X0
	0x02B48820 LDR X0, [X0 + 0x20]
	0x02B48824 LDRB W8, [X0 + 0x135]
	0x02B48828 TBNZ X8, 0x0, 0x2B48830
	0x02B4882C BL 0x1C5C684
	0x02B48830 LDR X8, [X0 + 0xC0]
	0x02B48834 LDR X0, [X8]
	0x02B48838 LDRB W8, [X0 + 0x135]
	0x02B4883C TBNZ X8, 0x0, 0x2B48844
	0x02B48840 BL 0x1C5C684
	0x02B48844 MOV W1, W31
	0x02B48848 BL 0x1C16D6C
	0x02B4884C LDR X8, [X19 + 0x20]
	0x02B48850 MOV X20, X0
	0x02B48854 LDRB W9, [X8 + 0x135]
	0x02B48858 TBNZ X9, 0x0, 0x2B48868
	0x02B4885C MOV X0, X8
	0x02B48860 BL 0x1C5C684
	0x02B48864 MOV X8, X0
	0x02B48868 LDR X8, [X8 + 0xC0]
	0x02B4886C LDR X0, [X8 + 0x18]
	0x02B48870 LDRB W8, [X0 + 0x135]
	0x02B48874 TBNZ X8, 0x0, 0x2B4887C
	0x02B48878 BL 0x1C5C684

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1894000
	007 Move W8, [X22+1294]
	008 Move X21, X2
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x15B9000
	016 Move X0, [X0+1440]
	017 Call 0x1C17CF4
	018 Move X0, 0x15D5000
	019 Move X0, [X0+296]
	020 Call 0x1C17CF4
	021 Move X0, 0x15D6000
	022 Move X0, [X0+3856]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1294], W8
	026 Move X0, [X19+40]
	027 Compare X0, 0
	028 JumpIfEqual {93}
	029 Move X8, [X21+32]
	030 Move W1, W20
	031 Move X8, [X8+192]
	032 Move X2, [X8+296]
	033 Call List`1<Object>.get_Item, X0, X1
	034 Compare X0, 0
	035 JumpIfEqual {93}
	036 Move X8, [X0]
	037 Move X20, X0
	038 Move X9, [X8+376]
	039 Move X1, [X8+384]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Compare X0, 0
	042 JumpIfEqual {93}
	043 Move X21, 0x15D6000
	044 Move X21, [X21+3856]
	045 Move X1, X31
	046 Call VisualElement.get_style, X0
	047 Move X1, [X21]
	048 Move X21, X0
	049 Move W0, 1
	050 Call 0x266FACC, X0
	051 Compare X21, 0
	052 JumpIfEqual {93}
	053 Move X10, 0x15D5000
	054 Move X8, [X21]
	055 Move X10, [X10+296]
	056 Move X22, X0
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Move X1, [X10]
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move W2, 18
	068 Move X0, X21
	069 Call 0x1C5D788
	070 Move W9, [X10]
	071 Add W9, W9, 18
	072 Add X8, X8, W9
	073 Add X0, X8, 312
	074 Move X8, [X0]
	075 Move X2, [X0+8]
	076 Move X0, X21
	077 Move X1, X22
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X0, [X19+120]
	080 Compare X0, 0
	081 JumpIfEqual {93}
	082 Move X8, 0x15B9000
	083 Move X8, [X8+1440]
	084 Move W1, [X20+32]
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X2, [X8]
	090 Move X30, [X31+48]
	091 Call HashSet`1<Int32>.Remove, X0, X1
	092 Return 
	093 Call 0x1C17F20

Method: System.Void MarkWaitingForLayout(T item)

Disassembly:
	0x02B4887C LDR X8, [X0 + 0xB8]
	0x02B48880 STR X20, [X8]
	0x02B48884 LDR X0, [X19 + 0x20]
	0x02B48888 LDRB W8, [X0 + 0x135]
	0x02B4888C TBNZ X8, 0x0, 0x2B48894
	0x02B48890 BL 0x1C5C684
	0x02B48894 LDR X8, [X0 + 0xC0]
	0x02B48898 LDR X0, [X8 + 0x18]
	0x02B4889C LDRB W8, [X0 + 0x135]
	0x02B488A0 TBNZ X8, 0x0, 0x2B488B0
	0x02B488A4 LDP X20, X19, [X31 + 0x10]
	0x02B488A8 LDR X30, [X31], #0x20
	0x02B488AC B 0x1C5C684
	0x02B488B0 LDP X20, X19, [X31 + 0x10]
	0x02B488B4 LDR X30, [X31], #0x20
	0x02B488B8 RET
	0x02B488BC STR X30, [X31 - 0x20]!
	0x02B488C0 STP X20, X19, [X31 + 0x10]
	0x02B488C4 MOV X19, X0
	0x02B488C8 LDR X0, [X0 + 0x20]
	0x02B488CC LDRB W8, [X0 + 0x135]
	0x02B488D0 TBNZ X8, 0x0, 0x2B488D8
	0x02B488D4 BL 0x1C5C684
	0x02B488D8 LDR X8, [X0 + 0xC0]
	0x02B488DC LDR X0, [X8]
	0x02B488E0 LDRB W8, [X0 + 0x135]
	0x02B488E4 TBNZ X8, 0x0, 0x2B488EC
	0x02B488E8 BL 0x1C5C684
	0x02B488EC MOV W1, W31
	0x02B488F0 BL 0x1C16D6C
	0x02B488F4 LDR X8, [X19 + 0x20]
	0x02B488F8 MOV X20, X0
	0x02B488FC LDRB W9, [X8 + 0x135]
	0x02B48900 TBNZ X9, 0x0, 0x2B48910
	0x02B48904 MOV X0, X8
	0x02B48908 BL 0x1C5C684
	0x02B4890C MOV X8, X0
	0x02B48910 LDR X8, [X8 + 0xC0]
	0x02B48914 LDR X0, [X8 + 0x18]
	0x02B48918 LDRB W8, [X0 + 0x135]
	0x02B4891C TBNZ X8, 0x0, 0x2B48924
	0x02B48920 BL 0x1C5C684
	0x02B48924 LDR X8, [X0 + 0xB8]
	0x02B48928 STR X20, [X8]
	0x02B4892C LDR X0, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1894000
	006 Move W8, [X21+1295]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x15AE000
	014 Move X0, [X0+2520]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1295], W8
	018 Compare X19, 0
	019 JumpIfEqual {64}
	020 Move W8, [X19+40]
	021 Compare W8, 0
	022 JumpIfEqual {28}
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 
	028 Move X0, [X20+120]
	029 Compare X0, 0
	030 JumpIfEqual {64}
	031 Move X8, 0x15AE000
	032 Move W1, [X19+32]
	033 Move X8, [X8+2520]
	034 Move X2, [X8]
	035 Call HashSet`1<Int32>.Add, X0, X1
	036 Move X8, [X19]
	037 Move X0, X19
	038 Move X9, [X8+376]
	039 Move X1, [X8+384]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X20, X0
	042 Move X0, X31
	043 Call Rect.get_zero
	044 Compare X20, 0
	045 JumpIfEqual {64}
	046 Move [X20+100], S0
	047 Move [X20+108], S1
	048 Move [X20+108], S2
	049 Move [X20+116], S3
	050 Move X8, [X19]
	051 Move X0, X19
	052 Move X9, [X8+376]
	053 Move X1, [X8+384]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Compare X0, 0
	056 JumpIfEqual {64}
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X1, X31
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call VisualElement.MarkDirtyRepaint, X0
	063 Return 
	064 Call 0x1C17F20

Method: System.Boolean IsIndexOutOfBounds(System.Int32 i)

Disassembly:
	0x02B48930 LDRB W8, [X0 + 0x135]
	0x02B48934 TBNZ X8, 0x0, 0x2B4893C
	0x02B48938 BL 0x1C5C684
	0x02B4893C LDR X8, [X0 + 0xC0]
	0x02B48940 LDR X0, [X8 + 0x18]
	0x02B48944 LDRB W8, [X0 + 0x135]
	0x02B48948 TBNZ X8, 0x0, 0x2B48958
	0x02B4894C LDP X20, X19, [X31 + 0x10]
	0x02B48950 LDR X30, [X31], #0x20
	0x02B48954 B 0x1C5C684
	0x02B48958 LDP X20, X19, [X31 + 0x10]
	0x02B4895C LDR X30, [X31], #0x20
	0x02B48960 RET
	0x02B48964 STR X30, [X31 - 0x20]!
	0x02B48968 STP X20, X19, [X31 + 0x10]
	0x02B4896C MOV X19, X0
	0x02B48970 LDR X0, [X0 + 0x20]
	0x02B48974 LDRB W8, [X0 + 0x135]
	0x02B48978 TBNZ X8, 0x0, 0x2B48980
	0x02B4897C BL 0x1C5C684
	0x02B48980 LDR X8, [X0 + 0xC0]
	0x02B48984 LDR X0, [X8]
	0x02B48988 LDRB W8, [X0 + 0x135]
	0x02B4898C TBNZ X8, 0x0, 0x2B48994
	0x02B48990 BL 0x1C5C684
	0x02B48994 MOV W1, W31
	0x02B48998 BL 0x1C16D6C
	0x02B4899C LDR X8, [X19 + 0x20]
	0x02B489A0 MOV X20, X0
	0x02B489A4 LDRB W9, [X8 + 0x135]
	0x02B489A8 TBNZ X9, 0x0, 0x2B489B8
	0x02B489AC MOV X0, X8
	0x02B489B0 BL 0x1C5C684
	0x02B489B4 MOV X8, X0
	0x02B489B8 LDR X8, [X8 + 0xC0]
	0x02B489BC LDR X0, [X8 + 0x18]
	0x02B489C0 LDRB W8, [X0 + 0x135]
	0x02B489C4 TBNZ X8, 0x0, 0x2B489CC
	0x02B489C8 BL 0x1C5C684
	0x02B489CC LDR X8, [X0 + 0xB8]
	0x02B489D0 STR X20, [X8]
	0x02B489D4 LDR X0, [X19 + 0x20]
	0x02B489D8 LDRB W8, [X0 + 0x135]
	0x02B489DC TBNZ X8, 0x0, 0x2B489E4
	0x02B489E0 BL 0x1C5C684
	0x02B489E4 LDR X8, [X0 + 0xC0]
	0x02B489E8 LDR X0, [X8 + 0x18]
	0x02B489EC LDRB W8, [X0 + 0x135]
	0x02B489F0 TBNZ X8, 0x0, 0x2B48A00
	0x02B489F4 LDP X20, X19, [X31 + 0x10]
	0x02B489F8 LDR X30, [X31], #0x20
	0x02B489FC B 0x1C5C684
	0x02B48A00 LDP X20, X19, [X31 + 0x10]
	0x02B48A04 LDR X30, [X31], #0x20
	0x02B48A08 RET
	0x02B48A0C STR X30, [X31 - 0x20]!
	0x02B48A10 STP X20, X19, [X31 + 0x10]
	0x02B48A14 MOV X19, X0
	0x02B48A18 LDR X0, [X0 + 0x20]
	0x02B48A1C LDRB W8, [X0 + 0x135]
	0x02B48A20 TBNZ X8, 0x0, 0x2B48A28
	0x02B48A24 BL 0x1C5C684
	0x02B48A28 LDR X8, [X0 + 0xC0]
	0x02B48A2C LDR X0, [X8]
	0x02B48A30 LDRB W8, [X0 + 0x135]
	0x02B48A34 TBNZ X8, 0x0, 0x2B48A3C
	0x02B48A38 BL 0x1C5C684
	0x02B48A3C MOV W1, W31
	0x02B48A40 BL 0x1C16D6C
	0x02B48A44 LDR X8, [X19 + 0x20]
	0x02B48A48 MOV X20, X0
	0x02B48A4C LDRB W9, [X8 + 0x135]
	0x02B48A50 TBNZ X9, 0x0, 0x2B48A60
	0x02B48A54 MOV X0, X8
	0x02B48A58 BL 0x1C5C684
	0x02B48A5C MOV X8, X0
	0x02B48A60 LDR X8, [X8 + 0xC0]
	0x02B48A64 LDR X0, [X8 + 0x18]
	0x02B48A68 LDRB W8, [X0 + 0x135]
	0x02B48A6C TBNZ X8, 0x0, 0x2B48A74
	0x02B48A70 BL 0x1C5C684
	0x02B48A74 LDR X8, [X0 + 0xB8]
	0x02B48A78 STR X20, [X8]
	0x02B48A7C LDR X0, [X19 + 0x20]
	0x02B48A80 LDRB W8, [X0 + 0x135]
	0x02B48A84 TBNZ X8, 0x0, 0x2B48A8C
	0x02B48A88 BL 0x1C5C684
	0x02B48A8C LDR X8, [X0 + 0xC0]
	0x02B48A90 LDR X0, [X8 + 0x18]
	0x02B48A94 LDRB W8, [X0 + 0x135]
	0x02B48A98 TBNZ X8, 0x0, 0x2B48AA8
	0x02B48A9C LDP X20, X19, [X31 + 0x10]
	0x02B48AA0 LDR X30, [X31], #0x20
	0x02B48AA4 B 0x1C5C684
	0x02B48AA8 LDP X20, X19, [X31 + 0x10]
	0x02B48AAC LDR X30, [X31], #0x20
	0x02B48AB0 RET
	0x02B48AB4 STR X30, [X31 - 0x20]!
	0x02B48AB8 STP X20, X19, [X31 + 0x10]
	0x02B48ABC MOV X19, X0
	0x02B48AC0 LDR X0, [X0 + 0x20]
	0x02B48AC4 LDRB W8, [X0 + 0x135]
	0x02B48AC8 TBNZ X8, 0x0, 0x2B48AD0
	0x02B48ACC BL 0x1C5C684
	0x02B48AD0 LDR X8, [X0 + 0xC0]
	0x02B48AD4 LDR X0, [X8]
	0x02B48AD8 LDRB W8, [X0 + 0x135]
	0x02B48ADC TBNZ X8, 0x0, 0x2B48AE4
	0x02B48AE0 BL 0x1C5C684
	0x02B48AE4 MOV W1, W31
	0x02B48AE8 BL 0x1C16D6C
	0x02B48AEC LDR X8, [X19 + 0x20]
	0x02B48AF0 MOV X20, X0
	0x02B48AF4 LDRB W9, [X8 + 0x135]
	0x02B48AF8 TBNZ X9, 0x0, 0x2B48B08
	0x02B48AFC MOV X0, X8
	0x02B48B00 BL 0x1C5C684
	0x02B48B04 MOV X8, X0
	0x02B48B08 LDR X8, [X8 + 0xC0]
	0x02B48B0C LDR X0, [X8 + 0x18]
	0x02B48B10 LDRB W8, [X0 + 0x135]
	0x02B48B14 TBNZ X8, 0x0, 0x2B48B1C
	0x02B48B18 BL 0x1C5C684
	0x02B48B1C LDR X8, [X0 + 0xB8]
	0x02B48B20 STR X20, [X8]
	0x02B48B24 LDR X0, [X19 + 0x20]
	0x02B48B28 LDRB W8, [X0 + 0x135]
	0x02B48B2C TBNZ X8, 0x0, 0x2B48B34
	0x02B48B30 BL 0x1C5C684
	0x02B48B34 LDR X8, [X0 + 0xC0]
	0x02B48B38 LDR X0, [X8 + 0x18]
	0x02B48B3C LDRB W8, [X0 + 0x135]
	0x02B48B40 TBNZ X8, 0x0, 0x2B48B50
	0x02B48B44 LDP X20, X19, [X31 + 0x10]
	0x02B48B48 LDR X30, [X31], #0x20
	0x02B48B4C B 0x1C5C684
	0x02B48B50 LDP X20, X19, [X31 + 0x10]
	0x02B48B54 LDR X30, [X31], #0x20
	0x02B48B58 RET
	0x02B48B5C STR X30, [X31 - 0x20]!
	0x02B48B60 STP X20, X19, [X31 + 0x10]
	0x02B48B64 MOV X19, X0
	0x02B48B68 LDR X0, [X0 + 0x20]
	0x02B48B6C LDRB W8, [X0 + 0x135]
	0x02B48B70 TBNZ X8, 0x0, 0x2B48B78
	0x02B48B74 BL 0x1C5C684
	0x02B48B78 LDR X8, [X0 + 0xC0]
	0x02B48B7C LDR X0, [X8]
	0x02B48B80 LDRB W8, [X0 + 0x135]
	0x02B48B84 TBNZ X8, 0x0, 0x2B48B8C
	0x02B48B88 BL 0x1C5C684
	0x02B48B8C MOV W1, W31
	0x02B48B90 BL 0x1C16D6C
	0x02B48B94 LDR X8, [X19 + 0x20]
	0x02B48B98 MOV X20, X0
	0x02B48B9C LDRB W9, [X8 + 0x135]
	0x02B48BA0 TBNZ X9, 0x0, 0x2B48BB0
	0x02B48BA4 MOV X0, X8
	0x02B48BA8 BL 0x1C5C684
	0x02B48BAC MOV X8, X0
	0x02B48BB0 LDR X8, [X8 + 0xC0]
	0x02B48BB4 LDR X0, [X8 + 0x18]
	0x02B48BB8 LDRB W8, [X0 + 0x135]
	0x02B48BBC TBNZ X8, 0x0, 0x2B48BC4
	0x02B48BC0 BL 0x1C5C684
	0x02B48BC4 LDR X8, [X0 + 0xB8]
	0x02B48BC8 STR X20, [X8]
	0x02B48BCC LDR X0, [X19 + 0x20]
	0x02B48BD0 LDRB W8, [X0 + 0x135]
	0x02B48BD4 TBNZ X8, 0x0, 0x2B48BDC
	0x02B48BD8 BL 0x1C5C684
	0x02B48BDC LDR X8, [X0 + 0xC0]
	0x02B48BE0 LDR X0, [X8 + 0x18]
	0x02B48BE4 LDRB W8, [X0 + 0x135]
	0x02B48BE8 TBNZ X8, 0x0, 0x2B48BF8
	0x02B48BEC LDP X20, X19, [X31 + 0x10]
	0x02B48BF0 LDR X30, [X31], #0x20
	0x02B48BF4 B 0x1C5C684
	0x02B48BF8 LDP X20, X19, [X31 + 0x10]
	0x02B48BFC LDR X30, [X31], #0x20
	0x02B48C00 RET
	0x02B48C04 STR X30, [X31 - 0x20]!
	0x02B48C08 STP X20, X19, [X31 + 0x10]
	0x02B48C0C MOV X19, X0
	0x02B48C10 LDR X0, [X0 + 0x20]
	0x02B48C14 LDRB W8, [X0 + 0x135]
	0x02B48C18 TBNZ X8, 0x0, 0x2B48C20
	0x02B48C1C BL 0x1C5C684
	0x02B48C20 LDR X8, [X0 + 0xC0]
	0x02B48C24 LDR X0, [X8]
	0x02B48C28 LDRB W8, [X0 + 0x135]
	0x02B48C2C TBNZ X8, 0x0, 0x2B48C34
	0x02B48C30 BL 0x1C5C684
	0x02B48C34 MOV W1, W31
	0x02B48C38 BL 0x1C16D6C
	0x02B48C3C LDR X8, [X19 + 0x20]
	0x02B48C40 MOV X20, X0
	0x02B48C44 LDRB W9, [X8 + 0x135]
	0x02B48C48 TBNZ X9, 0x0, 0x2B48C58
	0x02B48C4C MOV X0, X8
	0x02B48C50 BL 0x1C5C684
	0x02B48C54 MOV X8, X0
	0x02B48C58 LDR X8, [X8 + 0xC0]
	0x02B48C5C LDR X0, [X8 + 0x18]
	0x02B48C60 LDRB W8, [X0 + 0x135]
	0x02B48C64 TBNZ X8, 0x0, 0x2B48C6C
	0x02B48C68 BL 0x1C5C684
	0x02B48C6C LDR X8, [X0 + 0xB8]
	0x02B48C70 STR X20, [X8]
	0x02B48C74 LDR X0, [X19 + 0x20]
	0x02B48C78 LDRB W8, [X0 + 0x135]
	0x02B48C7C TBNZ X8, 0x0, 0x2B48C84
	0x02B48C80 BL 0x1C5C684
	0x02B48C84 LDR X8, [X0 + 0xC0]
	0x02B48C88 LDR X0, [X8 + 0x18]
	0x02B48C8C LDRB W8, [X0 + 0x135]
	0x02B48C90 TBNZ X8, 0x0, 0x2B48CA0
	0x02B48C94 LDP X20, X19, [X31 + 0x10]
	0x02B48C98 LDR X30, [X31], #0x20
	0x02B48C9C B 0x1C5C684
	0x02B48CA0 LDP X20, X19, [X31 + 0x10]
	0x02B48CA4 LDR X30, [X31], #0x20
	0x02B48CA8 RET
	0x02B48CAC STR X30, [X31 - 0x20]!
	0x02B48CB0 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X0
	006 Move X0, [X0+32]
	007 Compare X0, 0
	008 JumpIfEqual {28}
	009 Move W19, W1
	010 Move X1, X31
	011 Move X21, X2
	012 Call BaseVerticalCollectionView.get_itemsSource, X0
	013 Compare X0, 0
	014 JumpIfEqual {22}
	015 Move X8, [X21+32]
	016 Move X0, X20
	017 Move X8, [X8+192]
	018 Move X1, [X8+168]
	019 Call 0x2843AE0, X0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CSET not yet implemented."
	022 Move W0, 1
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0
	028 Call 0x1C17F20
	029 Move [X31-32], X30
	030 Move [X31+16], X20
	031 Move [X31+24], X19
	032 Move X19, X0
	033 Move X0, [X0+32]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X0, [X8+16]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+184]
	049 Move X20, [X8]
	050 Call 0x1C17D44
	051 Compare X20, 0
	052 JumpIfNotEqual {97}
	053 Move X0, [X19+32]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Move X8, [X0+192]
	061 Move X0, [X8+24]
	062 Call EqualityComparer`1<CachedCodeEntryKey>.CreateComparer
	063 Move X20, X0
	064 Call 0x1C17D44
	065 Move X0, [X19+32]
	066 Move W8, [X0+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {72}
	071 Call 0x1C5D684
	072 Move X8, [X0+192]
	073 Move X0, [X8+16]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move X8, [X0+184]
	081 Move [X8], X20
	082 Move X0, [X19+32]
	083 Move W8, [X0+309]
	084 Move TEMP, X8
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {89}
	088 Call 0x1C5D684
	089 Move X8, [X0+192]
	090 Move X0, [X8+16]
	091 Move W8, [X0+309]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {97}
	096 Call 0x1C5D684
	097 Move X0, X20
	098 Move X20, [X31+16]
	099 Move X19, [X31+24]
	100 Move X30, [X31+32]
	101 Return X0
	102 Move [X31-32], X30
	103 Move [X31+16], X20
	104 Move [X31+24], X19
	105 Move X19, X0
	106 Move X0, [X0+32]
	107 Move W8, [X0+309]
	108 Move TEMP, X8
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {113}
	112 Call 0x1C5D684
	113 Move X8, [X0+192]
	114 Move X0, [X8+16]
	115 Move W8, [X0+309]
	116 Move TEMP, X8
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {121}
	120 Call 0x1C5D684
	121 Move X8, [X0+184]
	122 Move X20, [X8]
	123 Call 0x1C17D44
	124 Compare X20, 0
	125 JumpIfNotEqual {170}
	126 Move X0, [X19+32]
	127 Move W8, [X0+309]
	128 Move TEMP, X8
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {133}
	132 Call 0x1C5D684
	133 Move X8, [X0+192]
	134 Move X0, [X8+24]
	135 Call EqualityComparer`1<ElementPropertyPair>.CreateComparer
	136 Move X20, X0
	137 Call 0x1C17D44
	138 Move X0, [X19+32]
	139 Move W8, [X0+309]
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {145}
	144 Call 0x1C5D684
	145 Move X8, [X0+192]
	146 Move X0, [X8+16]
	147 Move W8, [X0+309]
	148 Move TEMP, X8
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {153}
	152 Call 0x1C5D684
	153 Move X8, [X0+184]
	154 Move [X8], X20
	155 Move X0, [X19+32]
	156 Move W8, [X0+309]
	157 Move TEMP, X8
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {162}
	161 Call 0x1C5D684
	162 Move X8, [X0+192]
	163 Move X0, [X8+16]
	164 Move W8, [X0+309]
	165 Move TEMP, X8
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {170}
	169 Call 0x1C5D684
	170 Move X0, X20
	171 Move X20, [X31+16]
	172 Move X19, [X31+24]
	173 Move X30, [X31+32]
	174 Return X0
	175 Move [X31-32], X30
	176 Move [X31+16], X20
	177 Move [X31+24], X19
	178 Move X19, X0
	179 Move X0, [X0+32]
	180 Move W8, [X0+309]
	181 Move TEMP, X8
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfEqual {186}
	185 Call 0x1C5D684
	186 Move X8, [X0+192]
	187 Move X0, [X8+16]
	188 Move W8, [X0+309]
	189 Move TEMP, X8
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfEqual {194}
	193 Call 0x1C5D684
	194 Move X8, [X0+184]
	195 Move X20, [X8]
	196 Call 0x1C17D44
	197 Compare X20, 0
	198 JumpIfNotEqual {243}
	199 Move X0, [X19+32]
	200 Move W8, [X0+309]
	201 Move TEMP, X8
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfEqual {206}
	205 Call 0x1C5D684
	206 Move X8, [X0+192]
	207 Move X0, [X8+24]
	208 Call EqualityComparer`1<SheetHandleKey>.CreateComparer
	209 Move X20, X0
	210 Call 0x1C17D44
	211 Move X0, [X19+32]
	212 Move W8, [X0+309]
	213 Move TEMP, X8
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfEqual {218}
	217 Call 0x1C5D684
	218 Move X8, [X0+192]
	219 Move X0, [X8+16]
	220 Move W8, [X0+309]
	221 Move TEMP, X8
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfEqual {226}
	225 Call 0x1C5D684
	226 Move X8, [X0+184]
	227 Move [X8], X20
	228 Move X0, [X19+32]
	229 Move W8, [X0+309]
	230 Move TEMP, X8
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {235}
	234 Call 0x1C5D684
	235 Move X8, [X0+192]
	236 Move X0, [X8+16]
	237 Move W8, [X0+309]
	238 Move TEMP, X8
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfEqual {243}
	242 Call 0x1C5D684
	243 Move X0, X20
	244 Move X20, [X31+16]
	245 Move X19, [X31+24]
	246 Move X30, [X31+32]
	247 Return X0
	248 Move [X31-64], X29
	249 Move [X31-56], X30
	250 Move [X31+16], X24
	251 Move [X31+24], X23
	252 Move [X31+32], X22
	253 Move [X31+40], X21
	254 Move [X31+48], X20
	255 Move [X31+56], X19
	256 Add X29, X31, 0
	257 Subtract X31, X31, 16
	258 NotImplemented "Instruction MRS not yet implemented."
	259 Move X8, [X24+40]
	260 Move X21, X1
	261 Move X19, X0
	262 Move [X29-8], X8
	263 Move X20, [X2+32]
	264 Move W8, [X20+309]
	265 Move TEMP, X8
	266 And TEMP, TEMP, 1
	267 Compare TEMP, 1
	268 JumpIfEqual {273}
	269 Move X0, X20
	270 Move X22, X2
	271 Call 0x1C5D684
	272 Move X20, [X22+32]
	273 Move X0, X20
	274 Move X8, [X0+192]
	275 Move X8, [X8]
	276 Move W22, [X8+252]
	277 Add X8, X31, 0
	278 Add X9, X22, 15
	279 And X9, X9, 0x1FFFFFFFF
	280 Subtract X23, X8, X9
	281 Add X31, X23, 0
	282 Move X0, X23
	283 Move X1, X21
	284 Move X2, X22
	285 Call 0x3EB2AC0
	286 Move W8, [X20+309]
	287 Move TEMP, X8
	288 And TEMP, TEMP, 1
	289 Compare TEMP, 1
	290 JumpIfEqual {294}
	291 Move X0, X20
	292 Call 0x1C5D684
	293 Move X20, X0
	294 Move X8, [X20+192]
	295 Move X0, X19
	296 Move X2, X23
	297 Move W3, W22
	298 Move X8, [X8+8]
	299 Move X1, [X8+128]
	300 Call 0x1C17D1C
	301 Move X8, [X24+40]
	302 NotImplemented "Instruction LDUR not yet implemented."
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Add X31, X29, 0
	305 Move X20, [X31+48]
	306 Move X19, [X31+56]
	307 Move X22, [X31+32]
	308 Move X21, [X31+40]
	309 Move X24, [X31+16]
	310 Move X23, [X31+24]
	311 Move X29, [X31+64]
	312 Move X30, [X31+72]
	313 Return X0
	314 Call 0x3EB2B20

