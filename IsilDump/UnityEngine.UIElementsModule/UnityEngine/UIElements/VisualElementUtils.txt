Type: UnityEngine.UIElements.VisualElementUtils

Method: System.String GetUniqueName(System.String nameBase)

Disassembly:
	0x03D1AB0C SUB X31, X31, 0x50
	0x03D1AB10 STP X30, X25, [X31 + 0x10]
	0x03D1AB14 STP X24, X23, [X31 + 0x20]
	0x03D1AB18 STP X22, X21, [X31 + 0x30]
	0x03D1AB1C STP X20, X19, [X31 + 0x40]
	0x03D1AB20 ADRP X21, 0x6CD000
	0x03D1AB24 LDRB W8, [X21 + 0x932]
	0x03D1AB28 MOV W19, W1
	0x03D1AB2C MOV X20, X0
	0x03D1AB30 TBNZ X8, 0x0, 0x3D1AB48
	0x03D1AB34 ADRP X0, 0x44A000
	0x03D1AB38 LDR X0, [X0 + 0x1E8]
	0x03D1AB3C BL 0x1C16CF4
	0x03D1AB40 MOVZ W8, 0x1
	0x03D1AB44 STRB W8, [X21 + 0x932]
	0x03D1AB48 CBZ X20, 0x3D1ABF0
	0x03D1AB4C LDR W8, [X20 + 0x50]
	0x03D1AB50 LDR X9, [X20 + 0x378]
	0x03D1AB54 ADD X0, X31, 0x8
	0x03D1AB58 MOV X1, X31
	0x03D1AB5C ORR W8, W8, W19, 0x0
	0x03D1AB60 STR W8, [X20 + 0x50]
	0x03D1AB64 STR X9, [X31 + 0x8]
	0x03D1AB68 BL 0x3DF8994
	0x03D1AB6C CMP W0, 0x1
	0x03D1AB70 B.LT 0x3D1ABD8
	0x03D1AB74 ADRP X25, 0x44A000
	0x03D1AB78 LDR X25, [X25 + 0x1E8]
	0x03D1AB7C MOV W21, W0
	0x03D1AB80 MOV W22, W31
	0x03D1AB84 LDR X8, [X20 + 0x378]
	0x03D1AB88 ADD X0, X31, 0x8
	0x03D1AB8C MOV W1, W22
	0x03D1AB90 MOV X2, X31
	0x03D1AB94 STR X8, [X31 + 0x8]
	0x03D1AB98 BL 0x3DF98E4
	0x03D1AB9C CBZ X0, 0x3D1ABF0
	0x03D1ABA0 LDR W8, [X0 + 0x50]
	0x03D1ABA4 MOV X23, X0
	0x03D1ABA8 BICS W24, W19, W8, 0x0
	0x03D1ABAC B.EQ 0x3D1ABCC
	0x03D1ABB0 LDR X0, [X25]
	0x03D1ABB4 LDR W8, [X0 + 0xE0]
	0x03D1ABB8 CBNZ W8, 0x3D1ABC0
	0x03D1ABBC BL 0x1C16DFC
	0x03D1ABC0 MOV X0, X23
	0x03D1ABC4 MOV W1, W24
	0x03D1ABC8 BL 0x3D1AB0C
	0x03D1ABCC ADD W22, W22, 0x1
	0x03D1ABD0 CMP W21, W22
	0x03D1ABD4 B.NE 0x3D1AB84
	0x03D1ABD8 LDP X20, X19, [X31 + 0x40]
	0x03D1ABDC LDP X22, X21, [X31 + 0x30]
	0x03D1ABE0 LDP X24, X23, [X31 + 0x20]
	0x03D1ABE4 LDP X30, X25, [X31 + 0x10]
	0x03D1ABE8 ADD X31, X31, 0x50
	0x03D1ABEC RET
	0x03D1ABF0 BL 0x1C16F20
	0x03D1ABF4 SUB X31, X31, 0x20
	0x03D1ABF8 STP X30, X19, [X31 + 0x10]
	0x03D1ABFC CBZ X0, 0x3D1AC94
	0x03D1AC00 MOVZ W1, 0x1
	0x03D1AC04 MOV X2, X31
	0x03D1AC08 MOV X19, X0
	0x03D1AC0C BL 0x3DED790
	0x03D1AC10 MOVZ W1, 0x1
	0x03D1AC14 MOV X0, X19
	0x03D1AC18 MOV X2, X31
	0x03D1AC1C BL 0x3DED7C0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x6CE000
	009 Move W8, [X20+2337]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x3DB000
	016 Move X0, [X0+3104]
	017 Call 0x1C17CF4
	018 Move X0, 0x41F000
	019 Move X0, [X0+3304]
	020 Call 0x1C17CF4
	021 Move X0, 0x44A000
	022 Move X0, [X0+2840]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2337], W8
	026 Move X22, 0x44A000
	027 Move X23, 0x41F000
	028 Move X21, 0x3DB000
	029 Move X22, [X22+2840]
	030 Move X23, [X23+3304]
	031 Move X21, [X21+3104]
	032 Move W8, 2
	033 Move X20, X19
	034 Move X0, [X22]
	035 Move [X31+12], W8
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X22]
	041 Move X8, [X0+184]
	042 Move X0, [X8]
	043 Compare X0, 0
	044 JumpIfEqual {84}
	045 Move X2, [X23]
	046 Move X1, X20
	047 Call HashSet`1<Object>.Contains, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {62}
	052 Add X0, X31, 12
	053 Move X1, X31
	054 Call Int32.ToString, X0
	055 Move X1, X0
	056 Move X0, X19
	057 Move X2, X31
	058 Call String.Concat, X0, X1
	059 Move W8, [X31+12]
	060 Move X20, X0
	061 Add W8, W8, 1
	062 Move X0, [X22]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X22]
	068 Move X8, [X0+184]
	069 Move X0, [X8]
	070 Compare X0, 0
	071 JumpIfEqual {84}
	072 Move X2, [X21]
	073 Move X1, X20
	074 Call HashSet`1<Object>.Add, X0, X1
	075 Move X0, X20
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X30, [X31+16]
	081 Move X23, [X31+24]
	082 Add X31, X31, 64
	083 Return X0
	084 Call 0x1C17F20

Method: System.Int32 GetFoldoutDepth(UnityEngine.UIElements.VisualElement element)

Disassembly:
	0x03D1AC20 LDR X8, [X19 + 0x378]
	0x03D1AC24 ADD X0, X31, 0x8
	0x03D1AC28 MOV X1, X31
	0x03D1AC2C STR X8, [X31 + 0x8]
	0x03D1AC30 BL 0x3DF88DC
	0x03D1AC34 CBZ X0, 0x3D1AC88
	0x03D1AC38 MOV X19, X0
	0x03D1AC3C MOV X0, X19
	0x03D1AC40 MOV X1, X31
	0x03D1AC44 BL 0x3DED784
	0x03D1AC48 TBNZ X0, 0x0, 0x3D1AC88
	0x03D1AC4C MOVZ W1, 0x1
	0x03D1AC50 MOV X0, X19
	0x03D1AC54 MOV X2, X31
	0x03D1AC58 BL 0x3DED790
	0x03D1AC5C MOVZ W1, 0x1
	0x03D1AC60 MOV X0, X19
	0x03D1AC64 MOV X2, X31
	0x03D1AC68 BL 0x3DED7C0
	0x03D1AC6C LDR X8, [X19 + 0x378]
	0x03D1AC70 ADD X0, X31, 0x8
	0x03D1AC74 MOV X1, X31
	0x03D1AC78 STR X8, [X31 + 0x8]
	0x03D1AC7C BL 0x3DF88DC
	0x03D1AC80 MOV X19, X0
	0x03D1AC84 CBNZ X0, 0x3D1AC3C
	0x03D1AC88 LDP X30, X19, [X31 + 0x10]
	0x03D1AC8C ADD X31, X31, 0x20
	0x03D1AC90 RET
	0x03D1AC94 BL 0x1C16F20
	0x03D1AC98 STP X30, X19, [X31 - 0x10]!
	0x03D1AC9C LDP W8, W9, [X0 + 0x20]
	0x03D1ACA0 CMP W8, W9
	0x03D1ACA4 B.NE 0x3D1ACB0
	0x03D1ACA8 LDP X30, X19, [X31], #0x10
	0x03D1ACAC RET
	0x03D1ACB0 MOV X19, X0
	0x03D1ACB4 LDR X0, [X0 + 0x18]
	0x03D1ACB8 STR W8, [X19 + 0x24]
	0x03D1ACBC CBZ X0, 0x3D1ACF0
	0x03D1ACC0 MOV X1, X31
	0x03D1ACC4 BL 0x3DBC878
	0x03D1ACC8 LDR X0, [X19 + 0x18]
	0x03D1ACCC CBZ X0, 0x3D1ACF0
	0x03D1ACD0 LDR X8, [X0]
	0x03D1ACD4 LDR X9, [X8 + 0x398]
	0x03D1ACD8 LDR X1, [X8 + 0x3A0]
	0x03D1ACDC BLR X9
	0x03D1ACE0 CBZ X0, 0x3D1ACF0
	0x03D1ACE4 MOV X1, X31
	0x03D1ACE8 LDP X30, X19, [X31], #0x10
	0x03D1ACEC B 0x3DED840
	0x03D1ACF0 BL 0x1C16F20
	0x03D1ACF4 MOV X1, X31
	0x03D1ACF8 STR X31, [X0 + 0x20]
	0x03D1ACFC B 0x33BDD8C
	0x03D1AD00 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x6CE000
	007 Move W8, [X20+2338]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x44A000
	014 Move X0, [X0+2840]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2338], W8
	018 Compare X19, 0
	019 JumpIfEqual {69}
	020 Move X0, X19
	021 Move X1, X31
	022 Call VisualElement.get_parent, X0
	023 Compare X0, 0
	024 JumpIfEqual {61}
	025 Move X0, X19
	026 Move X1, X31
	027 Call VisualElement.get_parent, X0
	028 Compare X0, 0
	029 JumpIfEqual {61}
	030 Move X22, 0x44A000
	031 Move X22, [X22+2840]
	032 Move X20, X0
	033 Move W19, W31
	034 Move X0, [X22]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X22]
	040 Move X8, [X0+184]
	041 Move X0, X20
	042 Move X1, X31
	043 Move X21, [X8+8]
	044 Call "il2cpp_vm_object_is_inst", X0
	045 Compare X21, 0
	046 JumpIfEqual {69}
	047 Move X8, [X21]
	048 Move X1, X0
	049 Move X0, X21
	050 Move X9, [X8+680]
	051 Move X2, [X8+688]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 And W8, W0, 1
	054 Move X0, X20
	055 Move X1, X31
	056 Add W19, W19, W8
	057 Call VisualElement.get_parent, X0
	058 Move X20, X0
	059 Compare X0, 0
	060 JumpIfNotEqual {34}
	061 Move W19, W31
	062 Move W0, W19
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Return X0
	069 Call 0x1C17F20

Method: System.Void AssignInspectorStyleIfNecessary(UnityEngine.UIElements.VisualElement element, System.String classNameToEnable)

Disassembly:
	0x03D1AD04 STP X20, X19, [X31 + 0x10]
	0x03D1AD08 ADRP X21, 0x6CD000
	0x03D1AD0C ADRP X20, 0x44A000
	0x03D1AD10 ADRP X19, 0x44A000
	0x03D1AD14 LDRB W8, [X21 + 0x933]
	0x03D1AD18 LDR X20, [X20 + 0x1F0]
	0x03D1AD1C LDR X19, [X19 + 0x1E8]
	0x03D1AD20 TBNZ X8, 0x0, 0x3D1AD44
	0x03D1AD24 ADRP X0, 0x44A000
	0x03D1AD28 LDR X0, [X0 + 0x1E8]
	0x03D1AD2C BL 0x1C16CF4
	0x03D1AD30 ADRP X0, 0x44A000
	0x03D1AD34 LDR X0, [X0 + 0x1F0]
	0x03D1AD38 BL 0x1C16CF4
	0x03D1AD3C MOVZ W8, 0x1
	0x03D1AD40 STRB W8, [X21 + 0x933]
	0x03D1AD44 LDR X8, [X19]
	0x03D1AD48 LDR X9, [X20]
	0x03D1AD4C MOVZ W1, 0x1
	0x03D1AD50 MOV W2, W31
	0x03D1AD54 LDR X8, [X8 + 0xB8]
	0x03D1AD58 MOV W3, W31
	0x03D1AD5C MOV X4, X31
	0x03D1AD60 STR X9, [X8]
	0x03D1AD64 LDR X8, [X19]
	0x03D1AD68 LDR X8, [X8 + 0xB8]
	0x03D1AD6C LDR X0, [X8]
	0x03D1AD70 BL 0x3BFE7FC
	0x03D1AD74 LDR X8, [X19]
	0x03D1AD78 LDP X20, X19, [X31 + 0x10]
	0x03D1AD7C LDR X8, [X8 + 0xB8]
	0x03D1AD80 STR X0, [X8 + 0x8]
	0x03D1AD84 LDP X30, X21, [X31], #0x20
	0x03D1AD88 RET
	0x03D1AD8C TBZ X2, 0x2, 0x3D1ADAC
	0x03D1AD90 LDR W8, [X0 + 0x20]
	0x03D1AD94 CMP W8, 0x2
	0x03D1AD98 B.EQ 0x3D1ADB0
	0x03D1AD9C CMP W8, 0x1
	0x03D1ADA0 B.EQ 0x3D1ADB4
	0x03D1ADA4 CBNZ W8, 0x3D1ADAC
	0x03D1ADA8 B 0x3D1ADB8
	0x03D1ADAC RET
	0x03D1ADB0 B 0x3D1AE3C
	0x03D1ADB4 B 0x3D1AEA0
	0x03D1ADB8 STR X30, [X31 - 0x20]!
	0x03D1ADBC STP X20, X19, [X31 + 0x10]
	0x03D1ADC0 STR X1, [X0 + 0x28]
	0x03D1ADC4 CBZ X1, 0x3D1AE38
	0x03D1ADC8 MOV X20, X1
	0x03D1ADCC MOV X19, X0
	0x03D1ADD0 MOV X0, X1
	0x03D1ADD4 MOV X1, X31
	0x03D1ADD8 BL 0x3DEBF58
	0x03D1ADDC STR X0, [X19 + 0x30]
	0x03D1ADE0 CBZ X0, 0x3D1ADF8
	0x03D1ADE4 LDR X8, [X19 + 0x30]
	0x03D1ADE8 CMP X8, 0x0
	0x03D1ADEC MOVZ W8, 0x1
	0x03D1ADF0 CINC W8, W8, EQ
	0x03D1ADF4 B 0x3D1AE28
	0x03D1ADF8 MOV X0, X20
	0x03D1ADFC MOV X1, X31
	0x03D1AE00 BL 0x3DEC0CC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x6CE000
	008 Move X23, 0x44B000
	009 Move W8, [X21+2339]
	010 Move X23, [X23+328]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x44B000
	018 Move X0, [X0+336]
	019 Call 0x1C17CF4
	020 Move X0, 0x44B000
	021 Move X0, [X0+344]
	022 Call 0x1C17CF4
	023 Move X0, 0x44B000
	024 Move X0, [X0+328]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2339], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X21, [X8+8]
	036 Compare X21, 0
	037 JumpIfNotEqual {59}
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X23]
	043 Move X9, 0x44B000
	044 Move X8, [X0+184]
	045 Move X9, [X9+336]
	046 Move X22, [X8]
	047 Move X0, [X9]
	048 Call 0x1C17F10
	049 Move X8, 0x44B000
	050 Move X8, [X8+344]
	051 Move X1, X22
	052 Move X3, X31
	053 Move X21, X0
	054 Move X2, [X8]
	055 Call Predicate`1<Object>..ctor, X0, X1, X2
	056 Move X8, [X23]
	057 Move X8, [X8+184]
	058 Move [X8+8], X21
	059 Compare X20, 0
	060 JumpIfEqual {78}
	061 Move X0, X20
	062 Move X1, X21
	063 Move X2, X31
	064 Call VisualElement.GetFirstAncestorWhere, X0, X1
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, X20
	067 Move X1, X19
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 NotImplemented "Instruction CSET not yet implemented."
	073 Move X3, X31
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Call VisualElement.EnableInClassList, X0, X1, X2
	077 Return 
	078 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D1AE04 CBZ X0, 0x3D1ADE4
	0x03D1AE08 LDR X8, [X19]
	0x03D1AE0C LDR X1, [X19 + 0x28]
	0x03D1AE10 MOVZ W2, 0x2
	0x03D1AE14 MOV X0, X19
	0x03D1AE18 LDR X9, [X8 + 0x218]
	0x03D1AE1C LDR X3, [X8 + 0x220]
	0x03D1AE20 BLR X9
	0x03D1AE24 MOV W8, W31
	0x03D1AE28 STR W8, [X19 + 0x20]
	0x03D1AE2C LDP X20, X19, [X31 + 0x10]
	0x03D1AE30 LDR X30, [X31], #0x20
	0x03D1AE34 RET
	0x03D1AE38 BL 0x1C16F20
	0x03D1AE3C STP X30, X21, [X31 - 0x20]!
	0x03D1AE40 STP X20, X19, [X31 + 0x10]
	0x03D1AE44 MOV X21, X0
	0x03D1AE48 LDR X8, [X21 + 0x28]!
	0x03D1AE4C LDR X9, [X0]
	0x03D1AE50 MOV X20, X1
	0x03D1AE54 MOVZ W2, 0x1
	0x03D1AE58 MOV X1, X8
	0x03D1AE5C LDR X10, [X9 + 0x218]
	0x03D1AE60 LDR X3, [X9 + 0x220]
	0x03D1AE64 MOV X19, X0
	0x03D1AE68 BLR X10
	0x03D1AE6C CBZ X20, 0x3D1AE9C
	0x03D1AE70 MOV X0, X20
	0x03D1AE74 MOV X1, X31
	0x03D1AE78 BL 0x3DEC0CC
	0x03D1AE7C CBZ X0, 0x3D1AE8C
	0x03D1AE80 STR W31, [X19 + 0x20]
	0x03D1AE84 STP X31, X31, [X21]
	0x03D1AE88 B 0x3D1AE90
	0x03D1AE8C STR X20, [X21]
	0x03D1AE90 LDP X20, X19, [X31 + 0x10]
	0x03D1AE94 LDP X30, X21, [X31], #0x20
	0x03D1AE98 RET
	0x03D1AE9C BL 0x1C16F20
	0x03D1AEA0 STR X30, [X31 - 0x30]!
	0x03D1AEA4 STP X22, X21, [X31 + 0x10]
	0x03D1AEA8 STP X20, X19, [X31 + 0x20]
	0x03D1AEAC ADRP X22, 0x6CD000
	0x03D1AEB0 ADRP X21, 0x3D9000
	0x03D1AEB4 LDRB W8, [X22 + 0x935]
	0x03D1AEB8 LDR X21, [X21 + 0xA28]
	0x03D1AEBC MOV X20, X1
	0x03D1AEC0 MOV X19, X0
	0x03D1AEC4 TBNZ X8, 0x0, 0x3D1AEDC
	0x03D1AEC8 ADRP X0, 0x3D9000
	0x03D1AECC LDR X0, [X0 + 0xA28]
	0x03D1AED0 BL 0x1C16CF4
	0x03D1AED4 MOVZ W8, 0x1
	0x03D1AED8 STRB W8, [X22 + 0x935]
	0x03D1AEDC LDR X0, [X21]
	0x03D1AEE0 LDR X21, [X19 + 0x30]
	0x03D1AEE4 LDR W8, [X0 + 0xE0]
	0x03D1AEE8 CBNZ W8, 0x3D1AEF0
	0x03D1AEEC BL 0x1C16DFC
	0x03D1AEF0 CMP X21, 0x0
	0x03D1AEF4 CSET W0, NE
	0x03D1AEF8 MOV X1, X31
	0x03D1AEFC BL 0x3C06E58
	0x03D1AF00 LDR X9, [X19]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x6CE000
	009 Move X23, 0x3DB000
	010 Move X19, 0x3DB000
	011 Move X20, 0x44A000
	012 Move X21, 0x44B000
	013 Move X22, 0x3DA000
	014 Move W8, [X24+2340]
	015 Move X23, [X23+3120]
	016 Move X19, [X19+3112]
	017 Move X20, [X20+2840]
	018 Move X21, [X21+352]
	019 Move X22, [X22+1728]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0x44B000
	025 Move X0, [X0+352]
	026 Call 0x1C17CF4
	027 Move X0, 0x3DB000
	028 Move X0, [X0+3112]
	029 Call 0x1C17CF4
	030 Move X0, 0x3DB000
	031 Move X0, [X0+3120]
	032 Call 0x1C17CF4
	033 Move X0, 0x3DA000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move X0, 0x44A000
	037 Move X0, [X0+2840]
	038 Call 0x1C17CF4
	039 Move X0, 0x404000
	040 Move X0, [X0+3464]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X24+2340], W8
	044 Move X0, [X23]
	045 Move X23, 0x404000
	046 Move X23, [X23+3464]
	047 Call 0x1C17F10
	048 Move X1, [X19]
	049 Move X19, X0
	050 Call HashSet`1<Object>..ctor, X0
	051 Move X8, [X20]
	052 Move X8, [X8+184]
	053 Move [X8], X19
	054 Move X0, [X22]
	055 Move X19, [X21]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X19
	061 Move X1, X31
	062 Call Type.GetTypeFromHandle, X0
	063 Move X8, [X20]
	064 Move X9, [X23]
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X8, [X8+184]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move [X8+8], X0
	073 Move [X8+16], X9
	074 Move X30, [X31+64]
	075 Return 

