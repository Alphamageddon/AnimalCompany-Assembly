Type: UnityEngine.UIElements.RectField

Method: UnityEngine.UIElements.BaseCompositeField`3/FieldDescription<UnityEngine.Rect, UnityEngine.UIElements.FloatField, System.Single>[] DescribeFields()

Disassembly:
	0x03D07B7C MOV X1, X21
	0x03D07B80 MOV X2, X20
	0x03D07B84 MOV X3, X22
	0x03D07B88 MOV X4, X23
	0x03D07B8C STP V0, V0, [X31 + 0x80]
	0x03D07B90 BL 0x2D12A3C
	0x03D07B94 LDP V1, V0, [X31 + 0x80]
	0x03D07B98 STP V1, V0, [X31 + 0x40]
	0x03D07B9C LDR W8, [X19 + 0x18]
	0x03D07BA0 CMP W8, 0x1
	0x03D07BA4 B.LS 0x3D07E38
	0x03D07BA8 LDP V1, V0, [X31 + 0x40]
	0x03D07BAC ADRP X20, 0x45C000
	0x03D07BB0 ADRP X21, 0x433000
	0x03D07BB4 STP V1, V0, [X19 + 0x40]
	0x03D07BB8 LDR X0, [X25]
	0x03D07BBC LDR W8, [X0 + 0xE0]
	0x03D07BC0 LDR X20, [X20 + 0x480]
	0x03D07BC4 LDR X21, [X21 + 0x6A0]
	0x03D07BC8 CBNZ W8, 0x3D07BD4
	0x03D07BCC BL 0x1C16DFC
	0x03D07BD0 LDR X0, [X25]
	0x03D07BD4 LDR X8, [X0 + 0xB8]
	0x03D07BD8 LDR X20, [X20]
	0x03D07BDC LDR X21, [X21]
	0x03D07BE0 LDR X22, [X8 + 0x28]
	0x03D07BE4 CBNZ X22, 0x3D07C38
	0x03D07BE8 LDR W8, [X0 + 0xE0]
	0x03D07BEC CBNZ W8, 0x3D07BF8
	0x03D07BF0 BL 0x1C16DFC
	0x03D07BF4 LDR X0, [X25]
	0x03D07BF8 ADRP X9, 0x45C000
	0x03D07BFC LDR X8, [X0 + 0xB8]
	0x03D07C00 LDR X9, [X9 + 0x500]
	0x03D07C04 LDR X23, [X8]
	0x03D07C08 LDR X0, [X9]
	0x03D07C0C BL 0x1C16F10
	0x03D07C10 ADRP X8, 0x45C000
	0x03D07C14 LDR X8, [X8 + 0x528]
	0x03D07C18 MOV X1, X23
	0x03D07C1C MOV X3, X31
	0x03D07C20 MOV X22, X0
	0x03D07C24 LDR X2, [X8]
	0x03D07C28 BL 0x2D32794
	0x03D07C2C LDR X0, [X25]
	0x03D07C30 LDR X8, [X0 + 0xB8]
	0x03D07C34 STR X22, [X8 + 0x28]
	0x03D07C38 LDR W8, [X0 + 0xE0]
	0x03D07C3C CBNZ W8, 0x3D07C48
	0x03D07C40 BL 0x1C16DFC
	0x03D07C44 LDR X0, [X25]
	0x03D07C48 LDR X8, [X0 + 0xB8]
	0x03D07C4C LDR X23, [X8 + 0x30]
	0x03D07C50 CBNZ X23, 0x3D07CA4
	0x03D07C54 LDR W8, [X0 + 0xE0]
	0x03D07C58 CBNZ W8, 0x3D07C64
	0x03D07C5C BL 0x1C16DFC
	0x03D07C60 LDR X0, [X25]
	0x03D07C64 ADRP X9, 0x45C000
	0x03D07C68 LDR X8, [X0 + 0xB8]
	0x03D07C6C LDR X9, [X9 + 0x548]
	0x03D07C70 LDR X24, [X8]
	0x03D07C74 LDR X0, [X9]
	0x03D07C78 BL 0x1C16F10
	0x03D07C7C ADRP X8, 0x45C000
	0x03D07C80 LDR X8, [X8 + 0x530]
	0x03D07C84 MOV X1, X24
	0x03D07C88 MOV X3, X31
	0x03D07C8C MOV X23, X0
	0x03D07C90 LDR X2, [X8]
	0x03D07C94 BL 0x28997F4
	0x03D07C98 LDR X8, [X25]
	0x03D07C9C LDR X8, [X8 + 0xB8]
	0x03D07CA0 STR X23, [X8 + 0x30]
	0x03D07CA4 LDR X5, [X26]
	0x03D07CA8 MOVI V0.2D, 0x0
	0x03D07CAC ADD X0, X31, 0x80
	0x03D07CB0 MOV X1, X21
	0x03D07CB4 MOV X2, X20
	0x03D07CB8 MOV X3, X22
	0x03D07CBC MOV X4, X23
	0x03D07CC0 STP V0, V0, [X31 + 0x80]
	0x03D07CC4 BL 0x2D12A3C
	0x03D07CC8 LDP V1, V0, [X31 + 0x80]
	0x03D07CCC STP V1, V0, [X31 + 0x20]
	0x03D07CD0 LDR W8, [X19 + 0x18]
	0x03D07CD4 CMP W8, 0x2
	0x03D07CD8 B.LS 0x3D07E38
	0x03D07CDC LDP V1, V0, [X31 + 0x20]
	0x03D07CE0 ADRP X20, 0x45C000
	0x03D07CE4 ADRP X21, 0x41D000
	0x03D07CE8 STP V1, V0, [X19 + 0x60]
	0x03D07CEC LDR X0, [X25]
	0x03D07CF0 LDR W8, [X0 + 0xE0]
	0x03D07CF4 LDR X20, [X20 + 0x488]
	0x03D07CF8 LDR X21, [X21 + 0x1D8]
	0x03D07CFC CBNZ W8, 0x3D07D08
	0x03D07D00 BL 0x1C16DFC
	0x03D07D04 LDR X0, [X25]
	0x03D07D08 LDR X8, [X0 + 0xB8]
	0x03D07D0C LDR X20, [X20]
	0x03D07D10 LDR X21, [X21]
	0x03D07D14 LDR X22, [X8 + 0x38]
	0x03D07D18 CBNZ X22, 0x3D07D6C
	0x03D07D1C LDR W8, [X0 + 0xE0]
	0x03D07D20 CBNZ W8, 0x3D07D2C
	0x03D07D24 BL 0x1C16DFC
	0x03D07D28 LDR X0, [X25]
	0x03D07D2C ADRP X9, 0x45C000
	0x03D07D30 LDR X8, [X0 + 0xB8]
	0x03D07D34 LDR X9, [X9 + 0x500]
	0x03D07D38 LDR X23, [X8]
	0x03D07D3C LDR X0, [X9]
	0x03D07D40 BL 0x1C16F10
	0x03D07D44 ADRP X8, 0x45C000
	0x03D07D48 LDR X8, [X8 + 0x538]
	0x03D07D4C MOV X1, X23
	0x03D07D50 MOV X3, X31
	0x03D07D54 MOV X22, X0
	0x03D07D58 LDR X2, [X8]
	0x03D07D5C BL 0x2D32794
	0x03D07D60 LDR X0, [X25]
	0x03D07D64 LDR X8, [X0 + 0xB8]
	0x03D07D68 STR X22, [X8 + 0x38]
	0x03D07D6C LDR W8, [X0 + 0xE0]
	0x03D07D70 CBNZ W8, 0x3D07D7C
	0x03D07D74 BL 0x1C16DFC
	0x03D07D78 LDR X0, [X25]
	0x03D07D7C LDR X8, [X0 + 0xB8]
	0x03D07D80 LDR X23, [X8 + 0x40]
	0x03D07D84 CBNZ X23, 0x3D07DD8
	0x03D07D88 LDR W8, [X0 + 0xE0]
	0x03D07D8C CBNZ W8, 0x3D07D98
	0x03D07D90 BL 0x1C16DFC
	0x03D07D94 LDR X0, [X25]
	0x03D07D98 ADRP X9, 0x45C000
	0x03D07D9C LDR X8, [X0 + 0xB8]
	0x03D07DA0 LDR X9, [X9 + 0x548]
	0x03D07DA4 LDR X24, [X8]
	0x03D07DA8 LDR X0, [X9]
	0x03D07DAC BL 0x1C16F10
	0x03D07DB0 ADRP X8, 0x45C000
	0x03D07DB4 LDR X8, [X8 + 0x540]
	0x03D07DB8 MOV X1, X24
	0x03D07DBC MOV X3, X31
	0x03D07DC0 MOV X23, X0
	0x03D07DC4 LDR X2, [X8]
	0x03D07DC8 BL 0x28997F4
	0x03D07DCC LDR X8, [X25]
	0x03D07DD0 LDR X8, [X8 + 0xB8]
	0x03D07DD4 STR X23, [X8 + 0x40]
	0x03D07DD8 LDR X5, [X26]
	0x03D07DDC MOVI V0.2D, 0x0
	0x03D07DE0 ADD X0, X31, 0x80
	0x03D07DE4 MOV X1, X21
	0x03D07DE8 MOV X2, X20
	0x03D07DEC MOV X3, X22
	0x03D07DF0 MOV X4, X23
	0x03D07DF4 STP V0, V0, [X31 + 0x80]
	0x03D07DF8 BL 0x2D12A3C
	0x03D07DFC LDP V1, V0, [X31 + 0x80]
	0x03D07E00 STP V1, V0, [X31]
	0x03D07E04 LDR W8, [X19 + 0x18]
	0x03D07E08 CMP W8, 0x3
	0x03D07E0C B.LS 0x3D07E38
	0x03D07E10 LDP V1, V0, [X31]
	0x03D07E14 MOV X0, X19
	0x03D07E18 LDP X22, X21, [X31 + 0xD0]
	0x03D07E1C LDP X24, X23, [X31 + 0xC0]
	0x03D07E20 STP V1, V0, [X19 + 0x80]
	0x03D07E24 LDP X20, X19, [X31 + 0xE0]
	0x03D07E28 LDP X26, X25, [X31 + 0xB0]
	0x03D07E2C LDR X30, [X31 + 0xA0]
	0x03D07E30 ADD X31, X31, 0xF0
	0x03D07E34 RET
	0x03D07E38 BL 0x1C16F28
	0x03D07E3C BL 0x1C16F20
	0x03D07E40 MOV X1, X31
	0x03D07E44 B 0x3D07E48
	0x03D07E48 STP X30, X23, [X31 - 0x30]!
	0x03D07E4C STP X22, X21, [X31 + 0x10]
	0x03D07E50 STP X20, X19, [X31 + 0x20]
	0x03D07E54 ADRP X21, 0x6E0000
	0x03D07E58 ADRP X22, 0x45C000
	0x03D07E5C LDRB W8, [X21 + 0x84B]
	0x03D07E60 LDR X22, [X22 + 0x550]
	0x03D07E64 MOV X20, X1
	0x03D07E68 MOV X19, X0
	0x03D07E6C TBNZ X8, 0x0, 0x3D07EB4
	0x03D07E70 ADRP X0, 0x45C000
	0x03D07E74 LDR X0, [X0 + 0x558]
	0x03D07E78 BL 0x1C16CF4
	0x03D07E7C ADRP X0, 0x45C000
	0x03D07E80 LDR X0, [X0 + 0x550]
	0x03D07E84 BL 0x1C16CF4
	0x03D07E88 ADRP X0, 0x45C000
	0x03D07E8C LDR X0, [X0 + 0x560]
	0x03D07E90 BL 0x1C16CF4
	0x03D07E94 ADRP X0, 0x45C000
	0x03D07E98 LDR X0, [X0 + 0x568]
	0x03D07E9C BL 0x1C16CF4
	0x03D07EA0 ADRP X0, 0x45C000
	0x03D07EA4 LDR X0, [X0 + 0x570]
	0x03D07EA8 BL 0x1C16CF4
	0x03D07EAC MOVZ W8, 0x1
	0x03D07EB0 STRB W8, [X21 + 0x84B]
	0x03D07EB4 LDR X0, [X22]
	0x03D07EB8 ADRP X23, 0x45C000
	0x03D07EBC ADRP X21, 0x45C000
	0x03D07EC0 LDR W8, [X0 + 0xE0]
	0x03D07EC4 LDR X23, [X23 + 0x558]
	0x03D07EC8 LDR X21, [X21 + 0x570]
	0x03D07ECC CBNZ W8, 0x3D07ED4
	0x03D07ED0 BL 0x1C16DFC
	0x03D07ED4 LDR X3, [X23]
	0x03D07ED8 MOVZ W2, 0x2
	0x03D07EDC MOV X0, X19
	0x03D07EE0 MOV X1, X20
	0x03D07EE4 BL 0x2769B3C
	0x03D07EE8 LDR X0, [X21]
	0x03D07EEC LDR W8, [X0 + 0xE0]
	0x03D07EF0 CBNZ W8, 0x3D07EFC
	0x03D07EF4 BL 0x1C16DFC
	0x03D07EF8 LDR X0, [X21]
	0x03D07EFC LDR X8, [X0 + 0xB8]
	0x03D07F00 MOV X0, X19
	0x03D07F04 MOV X2, X31
	0x03D07F08 LDR X1, [X8]
	0x03D07F0C BL 0x3DF1C70
	0x03D07F10 LDR X8, [X22]
	0x03D07F14 MOV X0, X19
	0x03D07F18 MOV X2, X31
	0x03D07F1C LDR X8, [X8 + 0xB8]
	0x03D07F20 LDR X1, [X8 + 0x40]
	0x03D07F24 BL 0x3DF1C70
	0x03D07F28 LDR X0, [X19 + 0x408]
	0x03D07F2C CBZ X0, 0x3D07F7C
	0x03D07F30 LDR X8, [X21]
	0x03D07F34 ADRP X20, 0x45C000
	0x03D07F38 MOV X2, X31
	0x03D07F3C LDR X8, [X8 + 0xB8]
	0x03D07F40 LDR X1, [X8 + 0x8]
	0x03D07F44 LDR X20, [X20 + 0x568]
	0x03D07F48 BL 0x3DF1C70
	0x03D07F4C LDR X1, [X20]
	0x03D07F50 MOV X0, X19
	0x03D07F54 BL 0x289E964
	0x03D07F58 CBZ X0, 0x3D07F7C
	0x03D07F5C LDR X8, [X21]
	0x03D07F60 LDP X20, X19, [X31 + 0x20]
	0x03D07F64 LDP X22, X21, [X31 + 0x10]
	0x03D07F68 MOV X2, X31
	0x03D07F6C LDR X8, [X8 + 0xB8]
	0x03D07F70 LDR X1, [X8 + 0x10]
	0x03D07F74 LDP X30, X23, [X31], #0x30
	0x03D07F78 B 0x3DF1C70
	0x03D07F7C BL 0x1C16F20
	0x03D07F80 STP X30, X23, [X31 - 0x30]!
	0x03D07F84 STP X22, X21, [X31 + 0x10]
	0x03D07F88 STP X20, X19, [X31 + 0x20]
	0x03D07F8C ADRP X23, 0x6E0000
	0x03D07F90 ADRP X22, 0x45C000
	0x03D07F94 ADRP X19, 0x45C000
	0x03D07F98 ADRP X21, 0x415000
	0x03D07F9C ADRP X20, 0x415000
	0x03D07FA0 LDRB W8, [X23 + 0x84C]
	0x03D07FA4 LDR X22, [X22 + 0x578]
	0x03D07FA8 LDR X19, [X19 + 0x570]
	0x03D07FAC LDR X21, [X21 + 0xEB8]
	0x03D07FB0 LDR X20, [X20 + 0xEC0]
	0x03D07FB4 TBNZ X8, 0x0, 0x3D07FF0
	0x03D07FB8 ADRP X0, 0x45C000
	0x03D07FBC LDR X0, [X0 + 0x570]
	0x03D07FC0 BL 0x1C16CF4
	0x03D07FC4 ADRP X0, 0x45C000
	0x03D07FC8 LDR X0, [X0 + 0x578]
	0x03D07FCC BL 0x1C16CF4
	0x03D07FD0 ADRP X0, 0x415000
	0x03D07FD4 LDR X0, [X0 + 0xEB8]
	0x03D07FD8 BL 0x1C16CF4
	0x03D07FDC ADRP X0, 0x415000
	0x03D07FE0 LDR X0, [X0 + 0xEC0]
	0x03D07FE4 BL 0x1C16CF4
	0x03D07FE8 MOVZ W8, 0x1
	0x03D07FEC STRB W8, [X23 + 0x84C]
	0x03D07FF0 LDR X8, [X19]
	0x03D07FF4 LDR X9, [X22]
	0x03D07FF8 MOV X2, X31
	0x03D07FFC LDR X8, [X8 + 0xB8]
	0x03D08000 STR X9, [X8]
	0x03D08004 LDR X8, [X19]
	0x03D08008 LDR X1, [X21]
	0x03D0800C LDR X8, [X8 + 0xB8]
	0x03D08010 LDR X0, [X8]
	0x03D08014 BL 0x321B938
	0x03D08018 LDR X8, [X19]
	0x03D0801C MOV X2, X31
	0x03D08020 LDR X8, [X8 + 0xB8]
	0x03D08024 STR X0, [X8 + 0x8]
	0x03D08028 LDR X0, [X8]
	0x03D0802C LDR X1, [X20]
	0x03D08030 BL 0x321B938
	0x03D08034 LDR X8, [X19]
	0x03D08038 LDP X20, X19, [X31 + 0x20]
	0x03D0803C LDP X22, X21, [X31 + 0x10]
	0x03D08040 LDR X8, [X8 + 0xB8]
	0x03D08044 STR X0, [X8 + 0x10]
	0x03D08048 LDP X30, X23, [X31], #0x30
	0x03D0804C RET
	0x03D08050 STP X30, X21, [X31 - 0x20]!
	0x03D08054 STP X20, X19, [X31 + 0x10]
	0x03D08058 ADRP X20, 0x6DF000
	0x03D0805C ADRP X21, 0x45B000
	0x03D08060 LDRB W8, [X20 + 0x84D]
	0x03D08064 LDR X21, [X21 + 0x580]
	0x03D08068 MOV X19, X0
	0x03D0806C TBNZ X8, 0x0, 0x3D08084
	0x03D08070 ADRP X0, 0x45B000
	0x03D08074 LDR X0, [X0 + 0x580]
	0x03D08078 BL 0x1C16CF4
	0x03D0807C MOVZ W8, 0x1
	0x03D08080 STRB W8, [X20 + 0x84D]
	0x03D08084 LDR X1, [X21]
	0x03D08088 MOV X0, X19
	0x03D0808C LDP X20, X19, [X31 + 0x10]
	0x03D08090 LDP X30, X21, [X31], #0x20
	0x03D08094 B 0x2736468
	0x03D08098 SUB X31, X31, 0x110
	0x03D0809C STR X29, [X31 + 0xC0]
	0x03D080A0 STP X30, X25, [X31 + 0xD0]
	0x03D080A4 STP X24, X23, [X31 + 0xE0]
	0x03D080A8 STP X22, X21, [X31 + 0xF0]
	0x03D080AC STP X20, X19, [X31 + 0x100]
	0x03D080B0 ADRP X24, 0x6DF000
	0x03D080B4 ADRP X23, 0x45B000
	0x03D080B8 LDRB W8, [X24 + 0x84E]
	0x03D080BC LDR X23, [X23 + 0x588]
	0x03D080C0 MOV X21, X3
	0x03D080C4 MOV X20, X2
	0x03D080C8 MOV X19, X1
	0x03D080CC MOV X22, X0
	0x03D080D0 TBNZ X8, 0x0, 0x3D080F4
	0x03D080D4 ADRP X0, 0x45B000
	0x03D080D8 LDR X0, [X0 + 0x570]
	0x03D080DC BL 0x1C16CF4
	0x03D080E0 ADRP X0, 0x45B000
	0x03D080E4 LDR X0, [X0 + 0x588]
	0x03D080E8 BL 0x1C16CF4
	0x03D080EC MOVZ W8, 0x1
	0x03D080F0 STRB W8, [X24 + 0x84E]
	0x03D080F4 LDP V1, V0, [X21]
	0x03D080F8 LDR X4, [X23]
	0x03D080FC ADD X3, X31, 0xA0
	0x03D08100 MOV X0, X22
	0x03D08104 MOV X1, X19
	0x03D08108 MOV X2, X20
	0x03D0810C STP V1, V0, [X31 + 0x80]
	0x03D08110 STP V1, V0, [X31 + 0xA0]
	0x03D08114 BL 0x273AEAC
	0x03D08118 CBZ X19, 0x3D08150
	0x03D0811C ADRP X9, 0x45B000
	0x03D08120 LDR X9, [X9 + 0x570]
	0x03D08124 LDR X8, [X19]
	0x03D08128 LDR X1, [X9]
	0x03D0812C LDRB W10, [X8 + 0x130]
	0x03D08130 LDRB W9, [X1 + 0x130]
	0x03D08134 CMP W10, W9
	0x03D08138 B.CC 0x3D08264
	0x03D0813C LDR X8, [X8 + 0xC8]
	0x03D08140 ADD X8, X8, X9, 0x3, LSL
	0x03D08144 LDUR X8, [X8 - 0x8]
	0x03D08148 CMP X8, X1
	0x03D0814C B.NE 0x3D08264
	0x03D08150 LDP V0, V1, [X21]
	0x03D08154 LDR X0, [X22 + 0x80]
	0x03D08158 STP V0, V1, [X31 + 0x60]
	0x03D0815C CBZ X0, 0x3D08260
	0x03D08160 LDR X8, [X0]
	0x03D08164 LDP V0, V1, [X31 + 0x60]
	0x03D08168 ADD X2, X31, 0xA0
	0x03D0816C MOV X1, X20
	0x03D08170 LDR X9, [X8 + 0x178]
	0x03D08174 STP V0, V1, [X31 + 0xA0]
	0x03D08178 LDR X3, [X8 + 0x180]
	0x03D0817C BLR X9
	0x03D08180 MOV W23, W0
	0x03D08184 LDP V0, V1, [X21]
	0x03D08188 LDR X0, [X22 + 0x88]
	0x03D0818C STP V0, V1, [X31 + 0x40]
	0x03D08190 CBZ X0, 0x3D08260
	0x03D08194 LDR X8, [X0]
	0x03D08198 LDP V0, V1, [X31 + 0x40]
	0x03D0819C ADD X2, X31, 0xA0
	0x03D081A0 MOV X1, X20
	0x03D081A4 LDR X9, [X8 + 0x178]
	0x03D081A8 STP V0, V1, [X31 + 0xA0]
	0x03D081AC LDR X3, [X8 + 0x180]
	0x03D081B0 BLR X9
	0x03D081B4 MOV W24, W0
	0x03D081B8 LDP V0, V1, [X21]
	0x03D081BC LDR X0, [X22 + 0x90]
	0x03D081C0 STP V0, V1, [X31 + 0x20]
	0x03D081C4 CBZ X0, 0x3D08260
	0x03D081C8 LDR X8, [X0]
	0x03D081CC LDP V0, V1, [X31 + 0x20]
	0x03D081D0 ADD X2, X31, 0xA0

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+160], X30
	003 Move [X31+176], X26
	004 Move [X31+184], X25
	005 Move [X31+192], X24
	006 Move [X31+200], X23
	007 Move [X31+208], X22
	008 Move [X31+216], X21
	009 Move [X31+224], X20
	010 Move [X31+232], X19
	011 Move X20, 0x6E1000
	012 Move X19, 0x45D000
	013 Move X25, 0x45D000
	014 Move W8, [X20+2115]
	015 Move X19, [X19+1048]
	016 Move X25, [X25+1056]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {86}
	021 Move X0, 0x45D000
	022 Move X0, [X0+1048]
	023 Call 0x1C17CF4
	024 Move X0, 0x45D000
	025 Move X0, [X0+1064]
	026 Call 0x1C17CF4
	027 Move X0, 0x45D000
	028 Move X0, [X0+1072]
	029 Call 0x1C17CF4
	030 Move X0, 0x45D000
	031 Move X0, [X0+1080]
	032 Call 0x1C17CF4
	033 Move X0, 0x45D000
	034 Move X0, [X0+1088]
	035 Call 0x1C17CF4
	036 Move X0, 0x45D000
	037 Move X0, [X0+1096]
	038 Call 0x1C17CF4
	039 Move X0, 0x45D000
	040 Move X0, [X0+1104]
	041 Call 0x1C17CF4
	042 Move X0, 0x45D000
	043 Move X0, [X0+1112]
	044 Call 0x1C17CF4
	045 Move X0, 0x45D000
	046 Move X0, [X0+1120]
	047 Call 0x1C17CF4
	048 Move X0, 0x45D000
	049 Move X0, [X0+1128]
	050 Call 0x1C17CF4
	051 Move X0, 0x45D000
	052 Move X0, [X0+1136]
	053 Call 0x1C17CF4
	054 Move X0, 0x45D000
	055 Move X0, [X0+1056]
	056 Call 0x1C17CF4
	057 Move X0, 0x45D000
	058 Move X0, [X0+1144]
	059 Call 0x1C17CF4
	060 Move X0, 0x45D000
	061 Move X0, [X0+1152]
	062 Call 0x1C17CF4
	063 Move X0, 0x434000
	064 Move X0, [X0+1696]
	065 Call 0x1C17CF4
	066 Move X0, 0x45D000
	067 Move X0, [X0+1160]
	068 Call 0x1C17CF4
	069 Move X0, 0x41E000
	070 Move X0, [X0+472]
	071 Call 0x1C17CF4
	072 Move X0, 0x45D000
	073 Move X0, [X0+1168]
	074 Call 0x1C17CF4
	075 Move X0, 0x41C000
	076 Move X0, [X0+4008]
	077 Call 0x1C17CF4
	078 Move X0, 0x414000
	079 Move X0, [X0+2312]
	080 Call 0x1C17CF4
	081 Move X0, 0x45D000
	082 Move X0, [X0+1176]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X20+2115], W8
	086 Move X0, [X19]
	087 Move X20, 0x45D000
	088 Move X21, 0x414000
	089 Move X20, [X20+1176]
	090 Move X21, [X21+2312]
	091 Move W1, 4
	092 Call 0x1C17D6C
	093 Move X8, [X25]
	094 Move X19, X0
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {101}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move X8, [X25]
	101 Move X9, [X8+184]
	102 Move X20, [X20]
	103 Move X21, [X21]
	104 Move X22, [X9+8]
	105 Compare X22, 0
	106 JumpIfNotEqual {129}
	107 Move W9, [X8+224]
	108 Compare W9, 0
	109 JumpIfNotEqual {113}
	110 Move X0, X8
	111 Call 0x1C17DFC
	112 Move X8, [X25]
	113 Move X9, 0x45D000
	114 Move X8, [X8+184]
	115 Move X9, [X9+1072]
	116 Move X23, [X8]
	117 Move X0, [X9]
	118 Call 0x1C17F10
	119 Move X8, 0x45D000
	120 Move X8, [X8+1080]
	121 Move X1, X23
	122 Move X3, X31
	123 Move X22, X0
	124 Move X2, [X8]
	125 Call Func`2<Rect, Single>..ctor, X0, X1, X2
	126 Move X8, [X25]
	127 Move X9, [X8+184]
	128 Move [X9+8], X22
	129 Move W9, [X8+224]
	130 Compare W9, 0
	131 JumpIfNotEqual {135}
	132 Move X0, X8
	133 Call 0x1C17DFC
	134 Move X8, [X25]
	135 Move X9, [X8+184]
	136 Move X26, 0x45D000
	137 Move X23, [X9+16]
	138 Move X26, [X26+1064]
	139 Compare X23, 0
	140 JumpIfNotEqual {163}
	141 Move W9, [X8+224]
	142 Compare W9, 0
	143 JumpIfNotEqual {147}
	144 Move X0, X8
	145 Call 0x1C17DFC
	146 Move X8, [X25]
	147 Move X9, 0x45D000
	148 Move X8, [X8+184]
	149 Move X9, [X9+1144]
	150 Move X24, [X8]
	151 Move X0, [X9]
	152 Call 0x1C17F10
	153 Move X8, 0x45D000
	154 Move X8, [X8+1088]
	155 Move X1, X24
	156 Move X3, X31
	157 Move X23, X0
	158 Move X2, [X8]
	159 Call 0x289A740, X0, X1, X2
	160 Move X8, [X25]
	161 Move X8, [X8+184]
	162 Move [X8+16], X23
	163 Move X5, [X26]
	164 NotImplemented "Instruction MOVI not yet implemented."
	165 Add X0, X31, 128
	166 Move X1, X21
	167 Move X2, X20
	168 Move X3, X22
	169 Move X4, X23
	170 Move [X31+128], V0
	171 Move [X31+136], V0
	172 Call 0x2D13A30, X0, X1, X2, X3, X4
	173 Compare X19, 0
	174 JumpIfEqual {461}
	175 Move V0, [X31+128]
	176 Move V1, [X31+144]
	177 Move [X31+96], V0
	178 Move [X31+104], V1
	179 Move W8, [X19+24]
	180 Compare W8, 0
	181 JumpIfEqual {460}
	182 Move V1, [X31+96]
	183 Move V0, [X31+112]
	184 Move X20, 0x45D000
	185 Move X21, 0x41C000
	186 Move [X19+32], V1
	187 Move [X19+40], V0
	188 Move X0, [X25]
	189 Move W8, [X0+224]
	190 Move X20, [X20+1168]
	191 Move X21, [X21+4008]
	192 Compare W8, 0
	193 JumpIfNotEqual {196}
	194 Call 0x1C17DFC
	195 Move X0, [X25]
	196 Move X8, [X0+184]
	197 Move X20, [X20]
	198 Move X21, [X21]
	199 Move X22, [X8+24]
	200 Compare X22, 0
	201 JumpIfNotEqual {223}
	202 Move W8, [X0+224]
	203 Compare W8, 0
	204 JumpIfNotEqual {207}
	205 Call 0x1C17DFC
	206 Move X0, [X25]
	207 Move X9, 0x45D000
	208 Move X8, [X0+184]
	209 Move X9, [X9+1072]
	210 Move X23, [X8]
	211 Move X0, [X9]
	212 Call 0x1C17F10
	213 Move X8, 0x45D000
	214 Move X8, [X8+1096]
	215 Move X1, X23
	216 Move X3, X31
	217 Move X22, X0
	218 Move X2, [X8]
	219 Call Func`2<Rect, Single>..ctor, X0, X1, X2
	220 Move X0, [X25]
	221 Move X8, [X0+184]
	222 Move [X8+24], X22
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {228}
	226 Call 0x1C17DFC
	227 Move X0, [X25]
	228 Move X8, [X0+184]
	229 Move X23, [X8+32]
	230 Compare X23, 0
	231 JumpIfNotEqual {253}
	232 Move W8, [X0+224]
	233 Compare W8, 0
	234 JumpIfNotEqual {237}
	235 Call 0x1C17DFC
	236 Move X0, [X25]
	237 Move X9, 0x45D000
	238 Move X8, [X0+184]
	239 Move X9, [X9+1144]
	240 Move X24, [X8]
	241 Move X0, [X9]
	242 Call 0x1C17F10
	243 Move X8, 0x45D000
	244 Move X8, [X8+1104]
	245 Move X1, X24
	246 Move X3, X31
	247 Move X23, X0
	248 Move X2, [X8]
	249 Call 0x289A740, X0, X1, X2
	250 Move X8, [X25]
	251 Move X8, [X8+184]
	252 Move [X8+32], X23
	253 Move X5, [X26]
	254 NotImplemented "Instruction MOVI not yet implemented."
	255 Add X0, X31, 128
	256 Move X1, X21
	257 Move X2, X20
	258 Move X3, X22
	259 Move X4, X23
	260 Move [X31+128], V0
	261 Move [X31+136], V0
	262 Call 0x2D13A30, X0, X1, X2, X3, X4
	263 Move V1, [X31+128]
	264 Move V0, [X31+144]
	265 Move [X31+64], V1
	266 Move [X31+72], V0
	267 Move W8, [X19+24]
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move V1, [X31+64]
	270 Move V0, [X31+80]
	271 Move X20, 0x45D000
	272 Move X21, 0x434000
	273 Move [X19+64], V1
	274 Move [X19+72], V0
	275 Move X0, [X25]
	276 Move W8, [X0+224]
	277 Move X20, [X20+1152]
	278 Move X21, [X21+1696]
	279 Compare W8, 0
	280 JumpIfNotEqual {283}
	281 Call 0x1C17DFC
	282 Move X0, [X25]
	283 Move X8, [X0+184]
	284 Move X20, [X20]
	285 Move X21, [X21]
	286 Move X22, [X8+40]
	287 Compare X22, 0
	288 JumpIfNotEqual {310}
	289 Move W8, [X0+224]
	290 Compare W8, 0
	291 JumpIfNotEqual {294}
	292 Call 0x1C17DFC
	293 Move X0, [X25]
	294 Move X9, 0x45D000
	295 Move X8, [X0+184]
	296 Move X9, [X9+1072]
	297 Move X23, [X8]
	298 Move X0, [X9]
	299 Call 0x1C17F10
	300 Move X8, 0x45D000
	301 Move X8, [X8+1112]
	302 Move X1, X23
	303 Move X3, X31
	304 Move X22, X0
	305 Move X2, [X8]
	306 Call Func`2<Rect, Single>..ctor, X0, X1, X2
	307 Move X0, [X25]
	308 Move X8, [X0+184]
	309 Move [X8+40], X22
	310 Move W8, [X0+224]
	311 Compare W8, 0
	312 JumpIfNotEqual {315}
	313 Call 0x1C17DFC
	314 Move X0, [X25]
	315 Move X8, [X0+184]
	316 Move X23, [X8+48]
	317 Compare X23, 0
	318 JumpIfNotEqual {341}
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {324}
	322 Call 0x1C17DFC
	323 Move X0, [X25]
	324 Move X9, 0x45D000
	325 Move X8, [X0+184]
	326 Call 0x3EB29EC
	327 Return X0
	328 Move X24, [X8]
	329 Move X0, [X9]
	330 Call 0x1C17F10
	331 Move X8, 0x45C000
	332 Move X8, [X8+1120]
	333 Move X1, X24
	334 Move X3, X31
	335 Move X23, X0
	336 Move X2, [X8]
	337 Call 0x289A740, X0, X1, X2
	338 Move X8, [X25]
	339 Move X8, [X8+184]
	340 Move [X8+48], X23
	341 Move X5, [X26]
	342 NotImplemented "Instruction MOVI not yet implemented."
	343 Add X0, X31, 128
	344 Move X1, X21
	345 Move X2, X20
	346 Move X3, X22
	347 Move X4, X23
	348 Move [X31+128], V0
	349 Move [X31+136], V0
	350 Call 0x2D13A30, X0, X1, X2, X3, X4
	351 Move V1, [X31+128]
	352 Move V0, [X31+144]
	353 Move [X31+32], V1
	354 Move [X31+40], V0
	355 Move W8, [X19+24]
	356 NotImplemented "Instruction CMP not yet implemented."
	357 Move V1, [X31+32]
	358 Move V0, [X31+48]
	359 Move X20, 0x45C000
	360 Move X21, 0x41D000
	361 Move [X19+96], V1
	362 Move [X19+104], V0
	363 Move X0, [X25]
	364 Move W8, [X0+224]
	365 Move X20, [X20+1160]
	366 Move X21, [X21+472]
	367 Compare W8, 0
	368 JumpIfNotEqual {371}
	369 Call 0x1C17DFC
	370 Move X0, [X25]
	371 Move X8, [X0+184]
	372 Move X20, [X20]
	373 Move X21, [X21]
	374 Move X22, [X8+56]
	375 Compare X22, 0
	376 JumpIfNotEqual {398}
	377 Move W8, [X0+224]
	378 Compare W8, 0
	379 JumpIfNotEqual {382}
	380 Call 0x1C17DFC
	381 Move X0, [X25]
	382 Move X9, 0x45C000
	383 Move X8, [X0+184]
	384 Move X9, [X9+1072]
	385 Move X23, [X8]
	386 Move X0, [X9]
	387 Call 0x1C17F10
	388 Move X8, 0x45C000
	389 Move X8, [X8+1128]
	390 Move X1, X23
	391 Move X3, X31
	392 Move X22, X0
	393 Move X2, [X8]
	394 Call Func`2<Rect, Single>..ctor, X0, X1, X2
	395 Move X0, [X25]
	396 Move X8, [X0+184]
	397 Move [X8+56], X22
	398 Move W8, [X0+224]
	399 Compare W8, 0
	400 JumpIfNotEqual {403}
	401 Call 0x1C17DFC
	402 Move X0, [X25]
	403 Move X8, [X0+184]
	404 Move X23, [X8+64]
	405 Compare X23, 0
	406 JumpIfNotEqual {428}
	407 Move W8, [X0+224]
	408 Compare W8, 0
	409 JumpIfNotEqual {412}
	410 Call 0x1C17DFC
	411 Move X0, [X25]
	412 Move X9, 0x45C000
	413 Move X8, [X0+184]
	414 Move X9, [X9+1144]
	415 Move X24, [X8]
	416 Move X0, [X9]
	417 Call 0x1C17F10
	418 Move X8, 0x45C000
	419 Move X8, [X8+1136]
	420 Move X1, X24
	421 Move X3, X31
	422 Move X23, X0
	423 Move X2, [X8]
	424 Call 0x289A740, X0, X1, X2
	425 Move X8, [X25]
	426 Move X8, [X8+184]
	427 Move [X8+64], X23
	428 Move X5, [X26]
	429 NotImplemented "Instruction MOVI not yet implemented."
	430 Add X0, X31, 128
	431 Move X1, X21
	432 Move X2, X20
	433 Move X3, X22
	434 Move X4, X23
	435 Move [X31+128], V0
	436 Move [X31+136], V0
	437 Call 0x2D13A30, X0, X1, X2, X3, X4
	438 Move V1, [X31+128]
	439 Move V0, [X31+144]
	440 Move [X31], V1
	441 Move [X31+8], V0
	442 Move W8, [X19+24]
	443 NotImplemented "Instruction CMP not yet implemented."
	444 Move V1, [X31]
	445 Move V0, [X31+16]
	446 Move X0, X19
	447 Move X22, [X31+208]
	448 Move X21, [X31+216]
	449 Move X24, [X31+192]
	450 Move X23, [X31+200]
	451 Move [X19+128], V1
	452 Move [X19+136], V0
	453 Move X20, [X31+224]
	454 Move X19, [X31+232]
	455 Move X26, [X31+176]
	456 Move X25, [X31+184]
	457 Move X30, [X31+160]
	458 Add X31, X31, 240
	459 Return X0
	460 Call 0x1C17F28
	461 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03D081D4 MOV X1, X20
	0x03D081D8 LDR X9, [X8 + 0x178]

ISIL:
	001 Move X1, X31

Method: System.Void .ctor(System.String label)

Disassembly:
	0x03D081DC STP V0, V1, [X31 + 0xA0]
	0x03D081E0 LDR X3, [X8 + 0x180]
	0x03D081E4 BLR X9
	0x03D081E8 MOV W25, W0
	0x03D081EC LDP V0, V1, [X21]
	0x03D081F0 LDR X0, [X22 + 0x98]
	0x03D081F4 STP V0, V1, [X31]
	0x03D081F8 CBZ X0, 0x3D08260
	0x03D081FC LDR X8, [X0]
	0x03D08200 LDP V0, V1, [X31]
	0x03D08204 ADD X2, X31, 0xA0
	0x03D08208 MOV X1, X20
	0x03D0820C LDR X9, [X8 + 0x178]
	0x03D08210 STP V0, V1, [X31 + 0xA0]
	0x03D08214 LDR X3, [X8 + 0x180]
	0x03D08218 BLR X9
	0x03D0821C CBZ X19, 0x3D08260
	0x03D08220 LDR X8, [X19]
	0x03D08224 MOV W2, W25
	0x03D08228 MOV W1, W23
	0x03D0822C BFM X2, X0, 0x20, 0x1F
	0x03D08230 LDR X9, [X8 + 0x888]
	0x03D08234 LDR X3, [X8 + 0x890]
	0x03D08238 BFM X1, X24, 0x20, 0x1F
	0x03D0823C MOV X0, X19
	0x03D08240 BLR X9
	0x03D08244 LDP X20, X19, [X31 + 0x100]
	0x03D08248 LDP X22, X21, [X31 + 0xF0]
	0x03D0824C LDP X24, X23, [X31 + 0xE0]
	0x03D08250 LDP X30, X25, [X31 + 0xD0]
	0x03D08254 LDR X29, [X31 + 0xC0]
	0x03D08258 ADD X31, X31, 0x110
	0x03D0825C RET
	0x03D08260 BL 0x1C16F20
	0x03D08264 MOV X0, X19
	0x03D08268 BL 0x1C171E0
	0x03D0826C STP X30, X21, [X31 - 0x20]!
	0x03D08270 STP X20, X19, [X31 + 0x10]
	0x03D08274 ADRP X20, 0x6DF000
	0x03D08278 ADRP X21, 0x415000
	0x03D0827C LDRB W8, [X20 + 0x84F]
	0x03D08280 LDR X21, [X21 + 0xC08]
	0x03D08284 MOV X19, X0
	0x03D08288 TBNZ X8, 0x0, 0x3D082DC
	0x03D0828C ADRP X0, 0x415000
	0x03D08290 LDR X0, [X0 + 0xC08]
	0x03D08294 BL 0x1C16CF4
	0x03D08298 ADRP X0, 0x45B000
	0x03D0829C LDR X0, [X0 + 0x590]
	0x03D082A0 BL 0x1C16CF4
	0x03D082A4 ADRP X0, 0x413000
	0x03D082A8 LDR X0, [X0 + 0x780]
	0x03D082AC BL 0x1C16CF4
	0x03D082B0 ADRP X0, 0x43F000
	0x03D082B4 LDR X0, [X0 + 0x110]
	0x03D082B8 BL 0x1C16CF4
	0x03D082BC ADRP X0, 0x413000
	0x03D082C0 LDR X0, [X0 + 0x788]
	0x03D082C4 BL 0x1C16CF4
	0x03D082C8 ADRP X0, 0x418000
	0x03D082CC LDR X0, [X0 + 0x3D8]
	0x03D082D0 BL 0x1C16CF4
	0x03D082D4 MOVZ W8, 0x1
	0x03D082D8 STRB W8, [X20 + 0x84F]
	0x03D082DC LDR X0, [X21]
	0x03D082E0 BL 0x1C16F10
	0x03D082E4 MOV X1, X31
	0x03D082E8 MOV X20, X0
	0x03D082EC BL 0x3E1BCA4
	0x03D082F0 CBZ X20, 0x3D083A8
	0x03D082F4 ADRP X8, 0x413000
	0x03D082F8 LDR X8, [X8 + 0x780]
	0x03D082FC LDR X8, [X8]
	0x03D08300 STR X8, [X20 + 0x10]
	0x03D08304 STR X20, [X19 + 0x80]
	0x03D08308 LDR X0, [X21]
	0x03D0830C BL 0x1C16F10
	0x03D08310 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x6E0000
	008 Move X22, 0x45C000
	009 Move W8, [X21+2116]
	010 Move X22, [X22+1184]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x45C000
	018 Move X0, [X0+1192]
	019 Call 0x1C17CF4
	020 Move X0, 0x45C000
	021 Move X0, [X0+1184]
	022 Call 0x1C17CF4
	023 Move X0, 0x45C000
	024 Move X0, [X0+1200]
	025 Call 0x1C17CF4
	026 Move X0, 0x45C000
	027 Move X0, [X0+1208]
	028 Call 0x1C17CF4
	029 Move X0, 0x45C000
	030 Move X0, [X0+1216]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+2116], W8
	034 Move X0, [X22]
	035 Move X23, 0x45C000
	036 Move X21, 0x45C000
	037 Move W8, [X0+224]
	038 Move X23, [X23+1192]
	039 Move X21, [X21+1216]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X3, [X23]
	044 Move W2, 2
	045 Move X0, X19
	046 Move X1, X20
	047 Call 0x27699E4, X0, X1, X2
	048 Move X0, [X21]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X21]
	054 Move X8, [X0+184]
	055 Move X0, X19
	056 Move X2, X31
	057 Move X1, [X8]
	058 Call VisualElement.AddToClassList, X0, X1
	059 Move X8, [X22]
	060 Move X0, X19
	061 Move X2, X31
	062 Move X8, [X8+184]
	063 Move X1, [X8+64]
	064 Call VisualElement.AddToClassList, X0, X1
	065 Move X0, [X19+1032]
	066 Compare X0, 0
	067 JumpIfEqual {92}
	068 Move X8, [X21]
	069 Move X20, 0x45C000
	070 Move X2, X31
	071 Move X8, [X8+184]
	072 Move X1, [X8+8]
	073 Move X20, [X20+1208]
	074 Call VisualElement.AddToClassList, X0, X1
	075 Move X1, [X20]
	076 Move X0, X19
	077 Call BaseField`1<Rect>.get_visualInput, X0
	078 Compare X0, 0
	079 JumpIfEqual {92}
	080 Move X8, [X21]
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X2, X31
	086 Move X8, [X8+184]
	087 Move X1, [X8+16]
	088 Move X30, [X31+48]
	089 Move X23, [X31+56]
	090 Call VisualElement.AddToClassList, X0, X1
	091 Return 
	092 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D08314 MOV X20, X0
	0x03D08318 BL 0x3E1BCA4
	0x03D0831C CBZ X20, 0x3D083A8
	0x03D08320 ADRP X8, 0x413000
	0x03D08324 LDR X8, [X8 + 0x788]
	0x03D08328 LDR X8, [X8]
	0x03D0832C STR X8, [X20 + 0x10]
	0x03D08330 STR X20, [X19 + 0x88]
	0x03D08334 LDR X0, [X21]
	0x03D08338 BL 0x1C16F10
	0x03D0833C MOV X1, X31
	0x03D08340 MOV X20, X0
	0x03D08344 BL 0x3E1BCA4
	0x03D08348 CBZ X20, 0x3D083A8
	0x03D0834C ADRP X8, 0x418000
	0x03D08350 LDR X8, [X8 + 0x3D8]
	0x03D08354 LDR X8, [X8]
	0x03D08358 STR X8, [X20 + 0x10]
	0x03D0835C STR X20, [X19 + 0x90]
	0x03D08360 LDR X0, [X21]
	0x03D08364 BL 0x1C16F10
	0x03D08368 MOV X1, X31
	0x03D0836C MOV X20, X0
	0x03D08370 BL 0x3E1BCA4
	0x03D08374 CBZ X20, 0x3D083A8
	0x03D08378 ADRP X8, 0x43F000
	0x03D0837C LDR X8, [X8 + 0x110]
	0x03D08380 ADRP X9, 0x45B000
	0x03D08384 MOV X0, X19
	0x03D08388 LDR X8, [X8]
	0x03D0838C LDR X9, [X9 + 0x590]
	0x03D08390 STR X8, [X20 + 0x10]
	0x03D08394 STR X20, [X19 + 0x98]
	0x03D08398 LDR X1, [X9]
	0x03D0839C LDP X20, X19, [X31 + 0x10]
	0x03D083A0 LDP X30, X21, [X31], #0x20
	0x03D083A4 B 0x273ADF0
	0x03D083A8 BL 0x1C16F20
	0x03D083AC STR X30, [X31 - 0x20]!
	0x03D083B0 STP X20, X19, [X31 + 0x10]
	0x03D083B4 ADRP X19, 0x6DF000
	0x03D083B8 ADRP X20, 0x45B000
	0x03D083BC LDRB W8, [X19 + 0x850]
	0x03D083C0 LDR X20, [X20 + 0x4F0]
	0x03D083C4 TBNZ X8, 0x0, 0x3D083DC
	0x03D083C8 ADRP X0, 0x45B000
	0x03D083CC LDR X0, [X0 + 0x4F0]
	0x03D083D0 BL 0x1C16CF4
	0x03D083D4 MOVZ W8, 0x1
	0x03D083D8 STRB W8, [X19 + 0x850]
	0x03D083DC LDR X0, [X20]
	0x03D083E0 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x6E0000
	008 Move X22, 0x45C000
	009 Move X19, 0x45C000
	010 Move X21, 0x415000
	011 Move X20, 0x415000
	012 Move W8, [X23+2117]
	013 Move X22, [X22+1224]
	014 Move X19, [X19+1216]
	015 Move X21, [X21+3768]
	016 Move X20, [X20+3776]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x45C000
	022 Move X0, [X0+1216]
	023 Call 0x1C17CF4
	024 Move X0, 0x415000
	025 Move X0, [X0+3768]
	026 Call 0x1C17CF4
	027 Move X0, 0x45C000
	028 Move X0, [X0+1224]
	029 Call 0x1C17CF4
	030 Move X0, 0x415000
	031 Move X0, [X0+3776]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+2117], W8
	035 Move X8, [X19]
	036 Move X9, [X22]
	037 Move X2, X31
	038 Move X8, [X8+184]
	039 Move [X8], X9
	040 Move X8, [X19]
	041 Move X1, [X21]
	042 Move X8, [X8+184]
	043 Move X0, [X8]
	044 Call String.Concat, X0, X1
	045 Move X8, [X19]
	046 Move X2, X31
	047 Move X8, [X8+184]
	048 Move [X8+8], X0
	049 Move X0, [X8]
	050 Move X1, [X20]
	051 Call String.Concat, X0, X1
	052 Move X8, [X19]
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X8, [X8+184]
	058 Move [X8+16], X0
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return 

