Type: UnityEngine.UIElements.UIElementsRuntimeUtility

Method: System.Void add_onCreatePanel(System.Action`1<UnityEngine.UIElements.BaseRuntimePanel> value)

Disassembly:
	0x03E156FC ADRP X0, 0x355000
	0x03E15700 LDR X0, [X0 + 0x678]
	0x03E15704 BL 0x1C16CF4
	0x03E15708 ADRP X0, 0x307000
	0x03E1570C LDR X0, [X0 + 0xE98]
	0x03E15710 BL 0x1C16CF4
	0x03E15714 MOVZ W8, 0x1
	0x03E15718 STRB W8, [X22 + 0x3E5]
	0x03E1571C LDR X0, [X21]
	0x03E15720 MOVI V0.2D, 0x0
	0x03E15724 STR X31, [X31 + 0x20]
	0x03E15728 STP V0, V0, [X31]
	0x03E1572C ADRP X21, 0x34F000
	0x03E15730 LDR W8, [X0 + 0xE0]
	0x03E15734 LDR X21, [X21 + 0x950]
	0x03E15738 CBNZ W8, 0x3E15740
	0x03E1573C BL 0x1C16DFC
	0x03E15740 ADD X8, X31, 0x0
	0x03E15744 BL 0x3E194D0
	0x03E15748 LDR X1, [X21]
	0x03E1574C ADD X0, X31, 0x0
	0x03E15750 BL 0x2BF5330
	0x03E15754 TBZ X0, 0x0, 0x3E157E8
	0x03E15758 ADRP X22, 0x355000
	0x03E1575C LDR X22, [X22 + 0x678]
	0x03E15760 LDR X0, [X31 + 0x18]
	0x03E15764 CBZ X0, 0x3E157FC
	0x03E15768 LDR X8, [X0]
	0x03E1576C LDR X9, [X8 + 0x3F8]
	0x03E15770 LDR X1, [X8 + 0x400]
	0x03E15774 BLR X9
	0x03E15778 CMP W0, W19
	0x03E1577C B.NE 0x3E157D8
	0x03E15780 CBZ X20, 0x3E157FC
	0x03E15784 LDR W10, [X20 + 0x1C]
	0x03E15788 LDR X1, [X31 + 0x18]
	0x03E1578C LDR X8, [X20 + 0x10]
	0x03E15790 LDR X9, [X22]
	0x03E15794 ADD W10, W10, 0x1
	0x03E15798 STR W10, [X20 + 0x1C]
	0x03E1579C CBZ X8, 0x3E157FC
	0x03E157A0 LDRSW X10, [X20 + 0x18]
	0x03E157A4 LDR W11, [X8 + 0x18]
	0x03E157A8 CMP W10, W11
	0x03E157AC B.CS 0x3E157C4
	0x03E157B0 ADD W9, W10, 0x1
	0x03E157B4 ADD X8, X8, X10, 0x3, LSL
	0x03E157B8 STR W9, [X20 + 0x18]
	0x03E157BC STR X1, [X8 + 0x20]
	0x03E157C0 B 0x3E157D8
	0x03E157C4 LDR X8, [X9 + 0x20]
	0x03E157C8 MOV X0, X20
	0x03E157CC LDR X8, [X8 + 0xC0]
	0x03E157D0 LDR X2, [X8 + 0x70]
	0x03E157D4 BL 0x301BF90
	0x03E157D8 LDR X1, [X21]
	0x03E157DC ADD X0, X31, 0x0
	0x03E157E0 BL 0x2BF5330
	0x03E157E4 TBNZ X0, 0x0, 0x3E15760
	0x03E157E8 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x5D4000
	010 Move X24, 0x307000
	011 Move W8, [X20+935]
	012 Move X24, [X24+2352]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x356000
	019 Move X0, [X0+1448]
	020 Call 0x1C17CF4
	021 Move X0, 0x307000
	022 Move X0, [X0+2352]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+935], W8
	026 Move X0, [X24]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X24]
	032 Move X8, [X0+184]
	033 Move X25, 0x356000
	034 Move X20, [X8]
	035 Move X25, [X25+1448]
	036 Move X0, X20
	037 Move X1, X19
	038 Move X2, X31
	039 Call Delegate.Combine, X0, X1
	040 Compare X0, 0
	041 JumpIfEqual {49}
	042 Move X23, [X25]
	043 Move X22, X0
	044 Move X1, X23
	045 Call 0x1C17E00
	046 Move X21, X0
	047 Compare X0, 0
	048 JumpIfNotEqual {50}
	049 Move X21, X31
	050 Move X0, [X24]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Move X0, [X0+184]
	057 Move X1, X21
	058 Move X2, X20
	059 Call 0x1C25138
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X20, X0
	062 Move X20, [X31+48]
	063 Move X19, [X31+56]
	064 Move X22, [X31+32]
	065 Move X21, [X31+40]
	066 Move X24, [X31+16]
	067 Move X23, [X31+24]
	068 Move X30, [X31+64]
	069 Move X25, [X31+72]
	070 Return 
	071 Move X0, X22
	072 Move X1, X23
	073 Call 0x1C181E0

Method: System.Void remove_onCreatePanel(System.Action`1<UnityEngine.UIElements.BaseRuntimePanel> value)

Disassembly:
	0x03E157EC LDP X22, X21, [X31 + 0x40]
	0x03E157F0 LDR X30, [X31 + 0x30]
	0x03E157F4 ADD X31, X31, 0x60
	0x03E157F8 RET
	0x03E157FC BL 0x1C16F20
	0x03E15800 STR X30, [X31 - 0x20]!
	0x03E15804 STP X20, X19, [X31 + 0x10]
	0x03E15808 ADRP X20, 0x5D3000
	0x03E1580C ADRP X19, 0x353000
	0x03E15810 LDRB W8, [X20 + 0x3BE]
	0x03E15814 LDR X19, [X19 + 0xF68]
	0x03E15818 TBNZ X8, 0x0, 0x3E15830
	0x03E1581C ADRP X0, 0x353000
	0x03E15820 LDR X0, [X0 + 0xF68]
	0x03E15824 BL 0x1C16CF4
	0x03E15828 MOVZ W8, 0x1
	0x03E1582C STRB W8, [X20 + 0x3BE]
	0x03E15830 MOV X0, X31
	0x03E15834 BL 0x3DBB894
	0x03E15838 LDR X8, [X19]
	0x03E1583C LDP X20, X19, [X31 + 0x10]
	0x03E15840 LDR X8, [X8 + 0xB8]
	0x03E15844 STR X31, [X8 + 0x8]
	0x03E15848 LDR X30, [X31], #0x20
	0x03E1584C RET
	0x03E15850 SUB X31, X31, 0x80
	0x03E15854 STP X30, X25, [X31 + 0x40]
	0x03E15858 STP X24, X23, [X31 + 0x50]
	0x03E1585C STP X22, X21, [X31 + 0x60]
	0x03E15860 STP X20, X19, [X31 + 0x70]
	0x03E15864 ADRP X19, 0x5D3000
	0x03E15868 ADRP X22, 0x306000
	0x03E1586C LDRB W8, [X19 + 0x3AF]
	0x03E15870 LDR X22, [X22 + 0x930]
	0x03E15874 TBNZ X8, 0x0, 0x3E158D4
	0x03E15878 ADRP X0, 0x306000
	0x03E1587C LDR X0, [X0 + 0x918]
	0x03E15880 BL 0x1C16CF4
	0x03E15884 ADRP X0, 0x355000
	0x03E15888 LDR X0, [X0 + 0x680]
	0x03E1588C BL 0x1C16CF4
	0x03E15890 ADRP X0, 0x355000
	0x03E15894 LDR X0, [X0 + 0x688]
	0x03E15898 BL 0x1C16CF4
	0x03E1589C ADRP X0, 0x355000
	0x03E158A0 LDR X0, [X0 + 0x690]
	0x03E158A4 BL 0x1C16CF4
	0x03E158A8 ADRP X0, 0x355000
	0x03E158AC LDR X0, [X0 + 0x698]
	0x03E158B0 BL 0x1C16CF4
	0x03E158B4 ADRP X0, 0x2DE000
	0x03E158B8 LDR X0, [X0 + 0x598]
	0x03E158BC BL 0x1C16CF4
	0x03E158C0 ADRP X0, 0x306000
	0x03E158C4 LDR X0, [X0 + 0x930]
	0x03E158C8 BL 0x1C16CF4
	0x03E158CC MOVZ W8, 0x1
	0x03E158D0 STRB W8, [X19 + 0x3AF]
	0x03E158D4 LDR X0, [X22]
	0x03E158D8 STP X31, X31, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x5D4000
	010 Move X24, 0x307000
	011 Move W8, [X20+936]
	012 Move X24, [X24+2352]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x356000
	019 Move X0, [X0+1448]
	020 Call 0x1C17CF4
	021 Move X0, 0x307000
	022 Move X0, [X0+2352]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+936], W8
	026 Move X0, [X24]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X24]
	032 Move X8, [X0+184]
	033 Move X25, 0x356000
	034 Move X20, [X8]
	035 Move X25, [X25+1448]
	036 Move X0, X20
	037 Move X1, X19
	038 Move X2, X31
	039 Call Delegate.Remove, X0, X1
	040 Compare X0, 0
	041 JumpIfEqual {49}
	042 Move X23, [X25]
	043 Move X22, X0
	044 Move X1, X23
	045 Call 0x1C17E00
	046 Move X21, X0
	047 Compare X0, 0
	048 JumpIfNotEqual {50}
	049 Move X21, X31
	050 Move X0, [X24]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Move X0, [X0+184]
	057 Move X1, X21
	058 Move X2, X20
	059 Call 0x1C25138
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X20, X0
	062 Move X20, [X31+48]
	063 Move X19, [X31+56]
	064 Move X22, [X31+32]
	065 Move X21, [X31+40]
	066 Move X24, [X31+16]
	067 Move X23, [X31+24]
	068 Move X30, [X31+64]
	069 Move X25, [X31+72]
	070 Return 
	071 Move X0, X22
	072 Move X1, X23
	073 Call 0x1C181E0

Method: System.Void .cctor()

Disassembly:
	0x03E158DC STR X31, [X31 + 0x30]
	0x03E158E0 LDR W8, [X0 + 0xE0]
	0x03E158E4 CBNZ W8, 0x3E158EC
	0x03E158E8 BL 0x1C16DFC
	0x03E158EC BL 0x3E15A6C
	0x03E158F0 CBZ X0, 0x3E159F0
	0x03E158F4 ADRP X8, 0x355000
	0x03E158F8 LDR X8, [X8 + 0x698]
	0x03E158FC ADRP X23, 0x355000
	0x03E15900 LDR X23, [X23 + 0x688]
	0x03E15904 ADRP X24, 0x306000
	0x03E15908 LDR X1, [X8]
	0x03E1590C ADRP X25, 0x2DE000
	0x03E15910 ADRP X21, 0x355000
	0x03E15914 LDR X24, [X24 + 0x918]
	0x03E15918 LDR X25, [X25 + 0x598]
	0x03E1591C LDR X21, [X21 + 0x680]
	0x03E15920 ADD X8, X31, 0x8
	0x03E15924 BL 0x301CB58
	0x03E15928 LDUR V0, [X31 + 0x8]
	0x03E1592C LDR X8, [X31 + 0x18]
	0x03E15930 STR V0, [X31 + 0x2]
	0x03E15934 STR X8, [X31 + 0x30]
	0x03E15938 LDR X1, [X23]
	0x03E1593C ADD X0, X31, 0x20
	0x03E15940 BL 0x2BC4350
	0x03E15944 TBZ X0, 0x0, 0x3E159C0
	0x03E15948 LDR X19, [X31 + 0x30]
	0x03E1594C CBZ X19, 0x3E159EC
	0x03E15950 LDR X8, [X19]
	0x03E15954 LDR X1, [X24]
	0x03E15958 LDRB W10, [X8 + 0x130]
	0x03E1595C LDRB W9, [X1 + 0x130]
	0x03E15960 CMP W10, W9
	0x03E15964 B.CC 0x3E159E4
	0x03E15968 LDR X8, [X8 + 0xC8]
	0x03E1596C ADD X8, X8, X9, 0x3, LSL
	0x03E15970 LDUR X8, [X8 - 0x8]
	0x03E15974 CMP X8, X1
	0x03E15978 B.NE 0x3E159E4
	0x03E1597C LDR X0, [X25]
	0x03E15980 LDR X20, [X19 + 0x190]
	0x03E15984 LDR W8, [X0 + 0xE0]
	0x03E15988 CBNZ W8, 0x3E15990
	0x03E1598C BL 0x1C16DFC
	0x03E15990 MOV X0, X20
	0x03E15994 MOV X1, X31
	0x03E15998 MOV X2, X31
	0x03E1599C BL 0x3C354F8
	0x03E159A0 TBZ X0, 0x0, 0x3E15938
	0x03E159A4 LDR X0, [X22]
	0x03E159A8 LDR W8, [X0 + 0xE0]
	0x03E159AC CBNZ W8, 0x3E159B4
	0x03E159B0 BL 0x1C16DFC
	0x03E159B4 MOV X0, X19
	0x03E159B8 BL 0x3E15AF4
	0x03E159BC B 0x3E15938
	0x03E159C0 LDR X1, [X21]
	0x03E159C4 ADD X0, X31, 0x20
	0x03E159C8 BL 0x2BC434C
	0x03E159CC LDP X20, X19, [X31 + 0x70]
	0x03E159D0 LDP X22, X21, [X31 + 0x60]
	0x03E159D4 LDP X24, X23, [X31 + 0x50]
	0x03E159D8 LDP X30, X25, [X31 + 0x40]
	0x03E159DC ADD X31, X31, 0x80
	0x03E159E0 RET
	0x03E159E4 MOV X0, X19
	0x03E159E8 BL 0x1C171E0
	0x03E159EC BL 0x1C16F20
	0x03E159F0 BL 0x1C16F20
	0x03E159F4 B 0x3E15A08
	0x03E159F8 B 0x3E15A08
	0x03E159FC B 0x3E15A08
	0x03E15A00 B 0x3E15A08
	0x03E15A04 B 0x3E15A08
	0x03E15A08 MOV X19, X0
	0x03E15A0C CMP W1, 0x1
	0x03E15A10 B.NE 0x3E15A3C
	0x03E15A14 MOV X0, X19
	0x03E15A18 BL 0x3EB1AD0
	0x03E15A1C LDR X20, [X0]
	0x03E15A20 BL 0x3EB1AE0
	0x03E15A24 LDR X1, [X21]
	0x03E15A28 ADD X0, X31, 0x20
	0x03E15A2C BL 0x2BC434C
	0x03E15A30 CBZ X20, 0x3E159CC
	0x03E15A34 MOV X0, X20
	0x03E15A38 BL 0x1C16F18
	0x03E15A3C MOV X20, X31
	0x03E15A40 B 0x3E15A48
	0x03E15A44 MOV X19, X0
	0x03E15A48 LDR X1, [X21]
	0x03E15A4C ADD X0, X31, 0x20
	0x03E15A50 BL 0x2BC434C
	0x03E15A54 CBNZ X20, 0x3E15A60
	0x03E15A58 MOV X0, X19
	0x03E15A5C BL 0x1D2C690
	0x03E15A60 MOV X0, X20
	0x03E15A64 BL 0x1C16F18
	0x03E15A68 BL 0x1990590
	0x03E15A6C STR X30, [X31 - 0x20]!
	0x03E15A70 STP X20, X19, [X31 + 0x10]
	0x03E15A74 ADRP X20, 0x5D3000
	0x03E15A78 ADRP X19, 0x306000
	0x03E15A7C LDRB W8, [X20 + 0x3C0]
	0x03E15A80 LDR X19, [X19 + 0x930]
	0x03E15A84 TBNZ X8, 0x0, 0x3E15A9C
	0x03E15A88 ADRP X0, 0x306000
	0x03E15A8C LDR X0, [X0 + 0x930]
	0x03E15A90 BL 0x1C16CF4
	0x03E15A94 MOVZ W8, 0x1
	0x03E15A98 STRB W8, [X20 + 0x3C0]
	0x03E15A9C LDR X0, [X19]
	0x03E15AA0 LDR W8, [X0 + 0xE0]
	0x03E15AA4 CBNZ W8, 0x3E15AB0
	0x03E15AA8 BL 0x1C16DFC
	0x03E15AAC LDR X0, [X19]
	0x03E15AB0 LDR X8, [X0 + 0xB8]
	0x03E15AB4 LDRB W8, [X8 + 0x18]
	0x03E15AB8 CBZ W8, 0x3E15AD0
	0x03E15ABC LDR W8, [X0 + 0xE0]
	0x03E15AC0 CBNZ W8, 0x3E15AC8
	0x03E15AC4 BL 0x1C16DFC
	0x03E15AC8 BL 0x3E169BC
	0x03E15ACC LDR X0, [X19]
	0x03E15AD0 LDR W8, [X0 + 0xE0]
	0x03E15AD4 CBNZ W8, 0x3E15AE0
	0x03E15AD8 BL 0x1C16DFC
	0x03E15ADC LDR X0, [X19]
	0x03E15AE0 LDR X8, [X0 + 0xB8]
	0x03E15AE4 LDP X20, X19, [X31 + 0x10]
	0x03E15AE8 LDR X0, [X8 + 0x10]
	0x03E15AEC LDR X30, [X31], #0x20
	0x03E15AF0 RET
	0x03E15AF4 STP X30, X23, [X31 - 0x30]!
	0x03E15AF8 STP X22, X21, [X31 + 0x10]
	0x03E15AFC STP X20, X19, [X31 + 0x20]
	0x03E15B00 ADRP X19, 0x5D3000
	0x03E15B04 ADRP X20, 0x306000
	0x03E15B08 LDRB W8, [X19 + 0x3B0]
	0x03E15B0C LDR X20, [X20 + 0x930]
	0x03E15B10 MOV X22, X0
	0x03E15B14 TBNZ X8, 0x0, 0x3E15B2C
	0x03E15B18 ADRP X0, 0x306000
	0x03E15B1C LDR X0, [X0 + 0x930]
	0x03E15B20 BL 0x1C16CF4
	0x03E15B24 MOVZ W8, 0x1
	0x03E15B28 STRB W8, [X19 + 0x3B0]
	0x03E15B2C MOV X0, X31
	0x03E15B30 BL 0x3C04820
	0x03E15B34 MOV X19, X0
	0x03E15B38 MOV X0, X31
	0x03E15B3C BL 0x3C20834
	0x03E15B40 LDR X8, [X20]
	0x03E15B44 MOV X21, X0
	0x03E15B48 LDR W9, [X8 + 0xE0]
	0x03E15B4C CBNZ W9, 0x3E15B5C
	0x03E15B50 MOV X0, X8
	0x03E15B54 BL 0x1C16DFC
	0x03E15B58 LDR X8, [X20]
	0x03E15B5C LDR X8, [X8 + 0xB8]
	0x03E15B60 MOV X1, X31
	0x03E15B64 MOV X2, X31
	0x03E15B68 LDR X20, [X8 + 0x28]
	0x03E15B6C MOV X0, X20
	0x03E15B70 BL 0x33C5D2C
	0x03E15B74 TBZ X0, 0x0, 0x3E15B84
	0x03E15B78 MOV X0, X20
	0x03E15B7C MOV X1, X31
	0x03E15B80 BL 0x3BFE970
	0x03E15B84 MOV X0, X31
	0x03E15B88 BL 0x3C63934
	0x03E15B8C MOV X1, X0
	0x03E15B90 CBZ X22, 0x3E15BFC
	0x03E15B94 LDR X8, [X22]
	0x03E15B98 LDR X9, [X8 + 0x2B8]
	0x03E15B9C LDR X2, [X8 + 0x2C0]
	0x03E15BA0 MOV X0, X22
	0x03E15BA4 BLR X9
	0x03E15BA8 MOV X22, X31
	0x03E15BAC MOV X0, X20
	0x03E15BB0 MOV X1, X31
	0x03E15BB4 MOV X2, X31
	0x03E15BB8 BL 0x33C5D2C
	0x03E15BBC TBZ X0, 0x0, 0x3E15BCC
	0x03E15BC0 MOV X0, X20
	0x03E15BC4 MOV X1, X31
	0x03E15BC8 BL 0x3BFEA0C
	0x03E15BCC CBNZ X22, 0x3E15BF4
	0x03E15BD0 MOV X0, X19
	0x03E15BD4 MOV X1, X31
	0x03E15BD8 BL 0x3C04D1C
	0x03E15BDC MOV X0, X21
	0x03E15BE0 LDP X20, X19, [X31 + 0x20]
	0x03E15BE4 LDP X22, X21, [X31 + 0x10]
	0x03E15BE8 MOV X1, X31
	0x03E15BEC LDP X30, X23, [X31], #0x30
	0x03E15BF0 B 0x3C2085C
	0x03E15BF4 MOV X0, X22
	0x03E15BF8 BL 0x1C16F18
	0x03E15BFC BL 0x1C16F20
	0x03E15C00 CMP W1, 0x1
	0x03E15C04 MOV X23, X0
	0x03E15C08 B.NE 0x3E15C20
	0x03E15C0C MOV X0, X23
	0x03E15C10 BL 0x3EB1AD0
	0x03E15C14 LDR X22, [X0]
	0x03E15C18 BL 0x3EB1AE0
	0x03E15C1C B 0x3E15BAC
	0x03E15C20 MOV X22, X31
	0x03E15C24 B 0x3E15C2C
	0x03E15C28 MOV X23, X0
	0x03E15C2C MOV X0, X20
	0x03E15C30 MOV X1, X31
	0x03E15C34 MOV X2, X31
	0x03E15C38 BL 0x33C5D2C
	0x03E15C3C TBZ X0, 0x0, 0x3E15C4C
	0x03E15C40 MOV X0, X20

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X26, 0x5D4000
	014 Move X20, 0x307000
	015 Move X22, 0x356000
	016 Move X19, 0x356000
	017 Move X25, 0x356000
	018 Move X24, 0x356000
	019 Move X21, 0x356000
	020 Move X20, [X20+2352]
	021 Move X22, [X22+1456]
	022 Move W8, [X26+937]
	023 Move X19, [X19+1464]
	024 Move X25, [X25+1472]
	025 Move X24, [X24+1480]
	026 Move X21, [X21+1488]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {81}
	031 Move X0, 0x2E3000
	032 Move X0, [X0+2816]
	033 Call 0x1C17CF4
	034 Move X0, 0x34E000
	035 Move X0, [X0+3056]
	036 Call 0x1C17CF4
	037 Move X0, 0x2E0000
	038 Move X0, [X0+3696]
	039 Call 0x1C17CF4
	040 Move X0, 0x356000
	041 Move X0, [X0+1464]
	042 Call 0x1C17CF4
	043 Move X0, 0x356000
	044 Move X0, [X0+1496]
	045 Call 0x1C17CF4
	046 Move X0, 0x356000
	047 Move X0, [X0+1456]
	048 Call 0x1C17CF4
	049 Move X0, 0x356000
	050 Move X0, [X0+1480]
	051 Call 0x1C17CF4
	052 Move X0, 0x356000
	053 Move X0, [X0+1504]
	054 Call 0x1C17CF4
	055 Move X0, 0x356000
	056 Move X0, [X0+1512]
	057 Call 0x1C17CF4
	058 Move X0, 0x356000
	059 Move X0, [X0+1488]
	060 Call 0x1C17CF4
	061 Move X0, 0x354000
	062 Move X0, [X0+3944]
	063 Call 0x1C17CF4
	064 Move X0, 0x356000
	065 Move X0, [X0+1520]
	066 Call 0x1C17CF4
	067 Move X0, 0x356000
	068 Move X0, [X0+1528]
	069 Call 0x1C17CF4
	070 Move X0, 0x356000
	071 Move X0, [X0+1536]
	072 Call 0x1C17CF4
	073 Move X0, 0x307000
	074 Move X0, [X0+2352]
	075 Call 0x1C17CF4
	076 Move X0, 0x356000
	077 Move X0, [X0+1472]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X26+937], W8
	081 Move X8, [X20]
	082 Move X29, 0x2E0000
	083 Move X23, 0x356000
	084 Move X27, 0x354000
	085 Move X8, [X8+184]
	086 Move X29, [X29+3696]
	087 Move X23, [X23+1504]
	088 Move X27, [X27+3944]
	089 Move [X8+8], W31
	090 Move X0, [X22]
	091 Move X28, 0x356000
	092 Move X22, 0x2E3000
	093 Move X26, 0x356000
	094 Move X28, [X28+1536]
	095 Move X22, [X22+2816]
	096 Move X26, [X26+1520]
	097 Call 0x1C17F10
	098 Move X1, [X19]
	099 Move X19, X0
	100 Call List`1<Object>..ctor, X0
	101 Move X8, [X20]
	102 Move W9, 1
	103 Move W1, 1
	104 Move W2, W31
	105 Move X8, [X8+184]
	106 Move W3, W31
	107 Move X4, X31
	108 Move [X8+16], X19
	109 Move [X8+24], W9
	110 Move [X8+28], W31
	111 Move X0, [X25]
	112 Move [X8+32], X0
	113 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	114 Move X8, [X20]
	115 Move TEMP, 0
	116 Not TEMP
	117 Move W9, TEMP
	118 Move X8, [X8+184]
	119 Move [X8+40], X0
	120 Move [X8+48], W9
	121 Move X0, [X24]
	122 Call 0x1C17F10
	123 Move X8, 0x356000
	124 Move X8, [X8+1496]
	125 Move X19, X0
	126 Move X1, [X8]
	127 Call List`1<Object>..ctor, X0
	128 Move X8, [X20]
	129 Move X8, [X8+184]
	130 Move [X8+72], X19
	131 Move X0, [X21]
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {137}
	135 Call 0x1C17DFC
	136 Move X0, [X21]
	137 Move X8, [X0+184]
	138 Move X0, [X29]
	139 Move X25, 0x34E000
	140 Move X24, 0x356000
	141 Move X19, [X8]
	142 Move X25, [X25+3056]
	143 Move X24, [X24+1512]
	144 Call 0x1C17F10
	145 Move X2, [X23]
	146 Move X1, X19
	147 Move X3, X31
	148 Move X20, X0
	149 Call Action..ctor, X0, X1, X2
	150 Move X8, [X27]
	151 Move X8, [X8+184]
	152 Move [X8], X20
	153 Move X0, [X29]
	154 Call 0x1C17F10
	155 Move X2, [X28]
	156 Move X1, X31
	157 Move X3, X31
	158 Move X19, X0
	159 Call Action..ctor, X0, X1, X2
	160 Move X8, [X27]
	161 Move X8, [X8+184]
	162 Move [X8+16], X19
	163 Move X0, [X22]
	164 Call 0x1C17F10
	165 Move X2, [X26]
	166 Move X1, X31
	167 Move X3, X31
	168 Move X19, X0
	169 Call Action`1<Int32>..ctor, X0, X1, X2
	170 Move X20, 0x5D4000
	171 Move W8, [X20+1099]
	172 Compare W8, 0
	173 JumpIfNotEqual {179}
	174 Move X0, 0x34E000
	175 Move X0, [X0+1192]
	176 Call 0x1C17CF4
	177 Move W8, 1
	178 Move [X20+1099], W8
	179 Move X23, 0x34E000
	180 Move X23, [X23+1192]
	181 Move X8, [X23]
	182 Move X8, [X8+184]
	183 Move [X8+16], X19
	184 Move X8, [X21]
	185 Move X0, [X25]
	186 Move X21, 0x356000
	187 Move X8, [X8+184]
	188 Move X20, [X8]
	189 Move X21, [X21+1528]
	190 Call 0x1C17F10
	191 Move X2, [X24]
	192 Move X1, X20
	193 Move X3, X31
	194 Move X19, X0
	195 Call Action`2<Int32, Int32>..ctor, X0, X1, X2
	196 Move X20, 0x5D4000
	197 Move W8, [X20+1100]
	198 Compare W8, 0
	199 JumpIfNotEqual {205}
	200 Move X0, 0x34E000
	201 Move X0, [X0+1192]
	202 Call 0x1C17CF4
	203 Move W8, 1
	204 Move [X20+1100], W8
	205 Move X8, [X23]
	206 Move X8, [X8+184]
	207 Move [X8+24], X19
	208 Move X0, [X22]
	209 Call 0x1C17F10
	210 Move X2, [X21]
	211 Move X1, X31
	212 Move X3, X31
	213 Move X19, X0
	214 Call Action`1<Int32>..ctor, X0, X1, X2
	215 Move X20, 0x5D4000
	216 Move W8, [X20+1101]
	217 Compare W8, 0
	218 JumpIfNotEqual {224}
	219 Move X0, 0x34E000
	220 Move X0, [X0+1192]
	221 Call 0x1C17CF4
	222 Move W8, 1
	223 Move [X20+1101], W8
	224 Move X8, [X23]
	225 Move X22, [X31+64]
	226 Move X21, [X31+72]
	227 Move X24, [X31+48]
	228 Move X23, [X31+56]
	229 Move X26, [X31+32]
	230 Move X25, [X31+40]
	231 Move X8, [X8+184]
	232 Move X28, [X31+16]
	233 Move X27, [X31+24]
	234 Move [X8+32], X19
	235 Move X20, [X31+80]
	236 Move X19, [X31+88]
	237 Move X29, [X31+96]
	238 Move X30, [X31+104]
	239 Return 

Method: UnityEngine.UIElements.EventBase CreateEvent(UnityEngine.Event systemEvent)

Disassembly:
	0x03E15C44 MOV X1, X31
	0x03E15C48 BL 0x3BFEA0C
	0x03E15C4C CBNZ X22, 0x3E15C58
	0x03E15C50 MOV X0, X23
	0x03E15C54 BL 0x1D2C690
	0x03E15C58 MOV X0, X22
	0x03E15C5C BL 0x1C16F18
	0x03E15C60 BL 0x1990590
	0x03E15C64 STR X30, [X31 - 0x20]!
	0x03E15C68 STP X20, X19, [X31 + 0x10]
	0x03E15C6C ADRP X20, 0x5D3000
	0x03E15C70 ADRP X19, 0x306000
	0x03E15C74 LDRB W8, [X20 + 0x3B1]
	0x03E15C78 LDR X19, [X19 + 0x930]
	0x03E15C7C TBNZ X8, 0x0, 0x3E15C94
	0x03E15C80 ADRP X0, 0x306000
	0x03E15C84 LDR X0, [X0 + 0x930]
	0x03E15C88 BL 0x1C16CF4
	0x03E15C8C MOVZ W8, 0x1
	0x03E15C90 STRB W8, [X20 + 0x3B1]
	0x03E15C94 LDR X0, [X19]
	0x03E15C98 LDR W8, [X0 + 0xE0]
	0x03E15C9C CBNZ W8, 0x3E15CA8
	0x03E15CA0 BL 0x1C16DFC
	0x03E15CA4 LDR X0, [X19]
	0x03E15CA8 LDR X8, [X0 + 0xB8]
	0x03E15CAC LDP X20, X19, [X31 + 0x10]
	0x03E15CB0 STR W31, [X8 + 0x30]
	0x03E15CB4 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D4000
	005 Move W8, [X20+938]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x308000
	012 Move X0, [X0+3736]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+938], W8
	016 Compare X19, 0
	017 JumpIfEqual {35}
	018 Move X20, 0x308000
	019 Move X20, [X20+3736]
	020 Move X0, X19
	021 Move X1, X31
	022 Call Event.get_rawType, X0
	023 Move X8, [X20]
	024 Move W20, W0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move W1, W20
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call 0x1C17F20

Method: UnityEngine.UIElements.BaseRuntimePanel FindOrCreateRuntimePanel(UnityEngine.ScriptableObject ownerObject, UnityEngine.UIElements.UIElementsRuntimeUtility/CreateRuntimePanelDelegate createDelegate)

Disassembly:
	0x03E15FAC ADRP X0, 0x2DE000
	0x03E15FB0 LDR X0, [X0 + 0x598]
	0x03E15FB4 BL 0x1C16CF4
	0x03E15FB8 ADRP X0, 0x306000
	0x03E15FBC LDR X0, [X0 + 0x930]
	0x03E15FC0 BL 0x1C16CF4
	0x03E15FC4 MOVZ W8, 0x1
	0x03E15FC8 STRB W8, [X20 + 0x3B6]
	0x03E15FCC LDR X0, [X19]
	0x03E15FD0 LDR W8, [X0 + 0xE0]
	0x03E15FD4 CBNZ W8, 0x3E15FDC
	0x03E15FD8 BL 0x1C16DFC
	0x03E15FDC ADRP X20, 0x5D3000
	0x03E15FE0 LDRB W8, [X20 + 0x44E]
	0x03E15FE4 CBNZ W8, 0x3E15FFC
	0x03E15FE8 ADRP X0, 0x306000
	0x03E15FEC LDR X0, [X0 + 0x930]
	0x03E15FF0 BL 0x1C16CF4
	0x03E15FF4 MOVZ W8, 0x1
	0x03E15FF8 STRB W8, [X20 + 0x44E]
	0x03E15FFC LDR X0, [X19]
	0x03E16000 ADRP X20, 0x2DD000
	0x03E16004 LDR W8, [X0 + 0xE0]
	0x03E16008 B 0x3EB179C
	0x03E1600C CBNZ W8, 0x3E16018
	0x03E16010 BL 0x1C16DFC
	0x03E16014 LDR X0, [X19]
	0x03E16018 LDR X8, [X20]
	0x03E1601C LDR X9, [X0 + 0xB8]
	0x03E16020 LDR W10, [X8 + 0xE0]
	0x03E16024 LDR X19, [X9 + 0x38]
	0x03E16028 CBNZ W10, 0x3E16034
	0x03E1602C MOV X0, X8
	0x03E16030 BL 0x1C16DFC
	0x03E16034 MOV X0, X19
	0x03E16038 LDP X20, X19, [X31 + 0x10]
	0x03E1603C MOV X1, X31
	0x03E16040 MOV X2, X31
	0x03E16044 LDR X30, [X31], #0x20
	0x03E16048 B 0x3C3883C
	0x03E1604C STP X30, X23, [X31 - 0x30]!
	0x03E16050 STP X22, X21, [X31 + 0x10]
	0x03E16054 STP X20, X19, [X31 + 0x20]
	0x03E16058 ADRP X20, 0x5D2000
	0x03E1605C ADRP X21, 0x305000
	0x03E16060 LDRB W8, [X20 + 0x3B7]
	0x03E16064 LDR X21, [X21 + 0x930]
	0x03E16068 MOV X19, X0
	0x03E1606C TBNZ X8, 0x0, 0x3E160B4
	0x03E16070 ADRP X0, 0x2DD000
	0x03E16074 LDR X0, [X0 + 0xA28]
	0x03E16078 BL 0x1C16CF4
	0x03E1607C ADRP X0, 0x2DD000
	0x03E16080 LDR X0, [X0 + 0x598]
	0x03E16084 BL 0x1C16CF4
	0x03E16088 ADRP X0, 0x305000
	0x03E1608C LDR X0, [X0 + 0x930]
	0x03E16090 BL 0x1C16CF4
	0x03E16094 ADRP X0, 0x304000
	0x03E16098 LDR X0, [X0 + 0x5A8]
	0x03E1609C BL 0x1C16CF4
	0x03E160A0 ADRP X0, 0x354000
	0x03E160A4 LDR X0, [X0 + 0x6A0]
	0x03E160A8 BL 0x1C16CF4
	0x03E160AC MOVZ W8, 0x1
	0x03E160B0 STRB W8, [X20 + 0x3B7]
	0x03E160B4 LDR X0, [X21]
	0x03E160B8 LDR W8, [X0 + 0xE0]
	0x03E160BC CBNZ W8, 0x3E160C4
	0x03E160C0 BL 0x1C16DFC
	0x03E160C4 ADRP X23, 0x5D2000
	0x03E160C8 LDRB W8, [X23 + 0x44E]
	0x03E160CC CBNZ W8, 0x3E160E4
	0x03E160D0 ADRP X0, 0x305000
	0x03E160D4 LDR X0, [X0 + 0x930]
	0x03E160D8 BL 0x1C16CF4
	0x03E160DC MOVZ W8, 0x1
	0x03E160E0 STRB W8, [X23 + 0x44E]
	0x03E160E4 LDR X0, [X21]
	0x03E160E8 ADRP X22, 0x2DD000
	0x03E160EC LDR W8, [X0 + 0xE0]
	0x03E160F0 LDR X22, [X22 + 0x598]
	0x03E160F4 CBNZ W8, 0x3E16100
	0x03E160F8 BL 0x1C16DFC
	0x03E160FC LDR X0, [X21]
	0x03E16100 LDR X8, [X22]
	0x03E16104 LDR X9, [X0 + 0xB8]
	0x03E16108 LDR W10, [X8 + 0xE0]
	0x03E1610C LDR X20, [X9 + 0x38]
	0x03E16110 CBNZ W10, 0x3E1611C
	0x03E16114 MOV X0, X8
	0x03E16118 BL 0x1C16DFC
	0x03E1611C MOV X0, X20
	0x03E16120 MOV X1, X31
	0x03E16124 MOV X2, X31
	0x03E16128 BL 0x3C354F8
	0x03E1612C TBZ X0, 0x0, 0x3E16204
	0x03E16130 LDR X0, [X21]
	0x03E16134 LDR W8, [X0 + 0xE0]
	0x03E16138 CBNZ W8, 0x3E16140
	0x03E1613C BL 0x1C16DFC
	0x03E16140 LDRB W8, [X23 + 0x44E]
	0x03E16144 CBNZ W8, 0x3E1615C
	0x03E16148 ADRP X0, 0x305000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5D4000
	007 Move W8, [X21+939]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x307000
	015 Move X0, [X0+2328]
	016 Call 0x1C17CF4
	017 Move X0, 0x307000
	018 Move X0, [X0+2352]
	019 Call 0x1C17CF4
	020 Move X0, 0x308000
	021 Move X0, [X0+3736]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+939], W8
	025 Move [X31+8], X31
	026 Compare X19, 0
	027 JumpIfEqual {120}
	028 Move X21, 0x307000
	029 Move X21, [X21+3736]
	030 Move X0, X19
	031 Move X1, X31
	032 Call Object.GetInstanceID, X0
	033 Move X8, [X21]
	034 Move W21, W0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X22, 0x306000
	041 Move X22, [X22+2352]
	042 Add X1, X31, 8
	043 Move W0, W21
	044 Call UIElementsUtility.TryGetPanel, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {75}
	049 Move X21, [X31+8]
	050 Compare X21, 0
	051 JumpIfEqual {63}
	052 Move X8, 0x306000
	053 Move X8, [X8+2328]
	054 Move X9, [X21]
	055 Move X8, [X8]
	056 Move W11, [X9+304]
	057 Move W10, [X8+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X9, [X9+200]
	060 Add X9, X9, X10
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X19
	064 Move X1, X31
	065 Call Object.GetInstanceID, X0
	066 Move X8, [X22]
	067 Move W21, W0
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move W0, W21
	074 Call UIElementsRuntimeUtility.RemoveCachedPanelInternal, X0
	075 Compare X20, 0
	076 JumpIfEqual {120}
	077 Move X8, [X20+24]
	078 Move X0, [X20+64]
	079 Move X2, [X20+40]
	080 Move X1, X19
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Compare X0, 0
	083 JumpIfEqual {120}
	084 Move X8, [X0]
	085 Move W1, 257
	086 Move X21, X0
	087 Move X9, [X8+520]
	088 Move X2, [X8+528]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X0, X19
	091 Move X1, X31
	092 Call Object.GetInstanceID, X0
	093 Move X8, [X22]
	094 Move W19, W0
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move W0, W19
	101 Move X1, X21
	102 Call UIElementsRuntimeUtility.RegisterCachedPanelInternal, X0, X1
	103 Move X8, [X22]
	104 Move X8, [X8+184]
	105 Move X8, [X8]
	106 Compare X8, 0
	107 JumpIfEqual {113}
	108 Move X9, [X8+24]
	109 Move X0, [X8+64]
	110 Move X2, [X8+40]
	111 Move X1, X21
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move X0, X21
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X22, [X31+16]
	117 Move X21, [X31+24]
	118 Move X30, [X31+48]
	119 Return X0
	120 Call 0x1C17F20

Method: System.Void DisposeRuntimePanel(UnityEngine.ScriptableObject ownerObject)

Disassembly:
	0x03E16430 ADRP X19, 0x305000
	0x03E16434 LDRB W8, [X20 + 0x3BA]
	0x03E16438 LDR X19, [X19 + 0x930]
	0x03E1643C TBNZ X8, 0x0, 0x3E1649C
	0x03E16440 ADRP X0, 0x2DD000
	0x03E16444 LDR X0, [X0 + 0x970]
	0x03E16448 BL 0x1C16CF4
	0x03E1644C ADRP X0, 0x305000
	0x03E16450 LDR X0, [X0 + 0x918]
	0x03E16454 BL 0x1C16CF4
	0x03E16458 ADRP X0, 0x354000
	0x03E1645C LDR X0, [X0 + 0x680]
	0x03E16460 BL 0x1C16CF4
	0x03E16464 ADRP X0, 0x354000
	0x03E16468 LDR X0, [X0 + 0x688]
	0x03E1646C BL 0x1C16CF4
	0x03E16470 ADRP X0, 0x354000
	0x03E16474 LDR X0, [X0 + 0x690]
	0x03E16478 BL 0x1C16CF4
	0x03E1647C ADRP X0, 0x354000
	0x03E16480 LDR X0, [X0 + 0x698]
	0x03E16484 BL 0x1C16CF4
	0x03E16488 ADRP X0, 0x305000
	0x03E1648C LDR X0, [X0 + 0x930]
	0x03E16490 BL 0x1C16CF4
	0x03E16494 MOVZ W8, 0x1
	0x03E16498 STRB W8, [X20 + 0x3BA]
	0x03E1649C LDR X0, [X19]
	0x03E164A0 STP X31, X31, [X31 + 0x30]
	0x03E164A4 STR X31, [X31 + 0x40]
	0x03E164A8 LDR W8, [X0 + 0xE0]
	0x03E164AC CBNZ W8, 0x3E164B4
	0x03E164B0 BL 0x1C16DFC
	0x03E164B4 BL 0x3E1664C
	0x03E164B8 BL 0x3E15A6C
	0x03E164BC CBZ X0, 0x3E165D8
	0x03E164C0 ADRP X8, 0x354000
	0x03E164C4 LDR X8, [X8 + 0x698]
	0x03E164C8 ADRP X22, 0x354000
	0x03E164CC LDR X22, [X22 + 0x688]
	0x03E164D0 ADRP X23, 0x305000
	0x03E164D4 LDR X1, [X8]
	0x03E164D8 ADRP X20, 0x2DD000
	0x03E164DC ADRP X21, 0x354000
	0x03E164E0 LDR X23, [X23 + 0x918]
	0x03E164E4 LDR X20, [X20 + 0x970]
	0x03E164E8 LDR X21, [X21 + 0x680]
	0x03E164EC ADD X8, X31, 0x18
	0x03E164F0 BL 0x301CB58
	0x03E164F4 LDUR V0, [X31 + 0x18]
	0x03E164F8 LDR X8, [X31 + 0x28]
	0x03E164FC STR V0, [X31 + 0x3]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D3000
	005 Move W8, [X20+940]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x306000
	012 Move X0, [X0+2352]
	013 Call 0x1C17CF4
	014 Move X0, 0x307000
	015 Move X0, [X0+3736]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+940], W8
	019 Move [X31+8], X31
	020 Compare X19, 0
	021 JumpIfEqual {64}
	022 Move X20, 0x307000
	023 Move X20, [X20+3736]
	024 Move X0, X19
	025 Move X1, X31
	026 Call Object.GetInstanceID, X0
	027 Move X8, [X20]
	028 Move W20, W0
	029 Move W9, [X8+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X8
	033 Call 0x1C17DFC
	034 Add X1, X31, 8
	035 Move W0, W20
	036 Call UIElementsUtility.TryGetPanel, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {60}
	041 Move X0, [X31+8]
	042 Compare X0, 0
	043 JumpIfEqual {64}
	044 Move X1, X31
	045 Call BaseVisualElementPanel.Dispose, X0
	046 Move X0, X19
	047 Move X1, X31
	048 Call Object.GetInstanceID, X0
	049 Move X8, 0x306000
	050 Move X8, [X8+2352]
	051 Move W19, W0
	052 Move X8, [X8]
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {58}
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Move W0, W19
	059 Call UIElementsRuntimeUtility.RemoveCachedPanelInternal, X0
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Return 
	064 Call 0x1C17F20

Method: System.Void RegisterCachedPanelInternal(System.Int32 instanceID, UnityEngine.UIElements.IPanel panel)

Disassembly:
	0x03E1630C MOV X0, X20
	0x03E16310 MOV X1, X19
	0x03E16314 MOV X2, X31
	0x03E16318 BL 0x3C3883C
	0x03E1631C TBZ X0, 0x0, 0x3E1636C
	0x03E16320 LDR X0, [X21]
	0x03E16324 LDR W8, [X0 + 0xE0]
	0x03E16328 CBNZ W8, 0x3E16330
	0x03E1632C BL 0x1C16DFC
	0x03E16330 ADRP X19, 0x5D2000
	0x03E16334 LDRB W8, [X19 + 0x44F]
	0x03E16338 CBNZ W8, 0x3E16350
	0x03E1633C ADRP X0, 0x305000
	0x03E16340 LDR X0, [X0 + 0x930]
	0x03E16344 BL 0x1C16CF4
	0x03E16348 MOVZ W8, 0x1
	0x03E1634C STRB W8, [X19 + 0x44F]
	0x03E16350 LDR X0, [X21]
	0x03E16354 LDR W8, [X0 + 0xE0]
	0x03E16358 CBNZ W8, 0x3E16364
	0x03E1635C BL 0x1C16DFC
	0x03E16360 LDR X0, [X21]
	0x03E16364 LDR X8, [X0 + 0xB8]
	0x03E16368 STR X31, [X8 + 0x38]
	0x03E1636C LDP X20, X19, [X31 + 0x10]
	0x03E16370 LDP X30, X21, [X31], #0x20
	0x03E16374 RET
	0x03E16378 STR X30, [X31 - 0x20]!
	0x03E1637C STP X20, X19, [X31 + 0x10]
	0x03E16380 ADRP X19, 0x5D2000
	0x03E16384 ADRP X20, 0x305000
	0x03E16388 LDRB W8, [X19 + 0x3B9]
	0x03E1638C LDR X20, [X20 + 0x930]
	0x03E16390 TBNZ X8, 0x0, 0x3E163B4
	0x03E16394 ADRP X0, 0x351000
	0x03E16398 LDR X0, [X0 + 0xAB8]
	0x03E1639C BL 0x1C16CF4
	0x03E163A0 ADRP X0, 0x305000
	0x03E163A4 LDR X0, [X0 + 0x930]
	0x03E163A8 BL 0x1C16CF4
	0x03E163AC MOVZ W8, 0x1
	0x03E163B0 STRB W8, [X19 + 0x3B9]
	0x03E163B4 LDR X0, [X20]
	0x03E163B8 LDR W8, [X0 + 0xE0]
	0x03E163BC CBNZ W8, 0x3E163C8
	0x03E163C0 BL 0x1C16DFC
	0x03E163C4 LDR X0, [X20]
	0x03E163C8 LDR X8, [X0 + 0xB8]
	0x03E163CC LDR X19, [X8 + 0x40]
	0x03E163D0 CBNZ X19, 0x3E1640C
	0x03E163D4 ADRP X8, 0x351000
	0x03E163D8 LDR X8, [X8 + 0xAB8]
	0x03E163DC LDR X0, [X8]
	0x03E163E0 BL 0x1C16F10
	0x03E163E4 MOV X1, X31
	0x03E163E8 MOV X19, X0
	0x03E163EC BL 0x3D8FECC
	0x03E163F0 LDR X0, [X20]
	0x03E163F4 LDR W8, [X0 + 0xE0]
	0x03E163F8 CBNZ W8, 0x3E16404
	0x03E163FC BL 0x1C16DFC
	0x03E16400 LDR X0, [X20]
	0x03E16404 LDR X8, [X0 + 0xB8]
	0x03E16408 STR X19, [X8 + 0x40]
	0x03E1640C MOV X0, X19
	0x03E16410 LDP X20, X19, [X31 + 0x10]
	0x03E16414 LDR X30, [X31], #0x20
	0x03E16418 RET
	0x03E1641C SUB X31, X31, 0x80
	0x03E16420 STP X30, X23, [X31 + 0x50]
	0x03E16424 STP X22, X21, [X31 + 0x60]
	0x03E16428 STP X20, X19, [X31 + 0x70]
	0x03E1642C ADRP X20, 0x5D2000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5D3000
	007 Move X22, 0x307000
	008 Move W8, [X21+941]
	009 Move X22, [X22+3736]
	010 Move X20, X1
	011 Move W19, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x308000
	017 Move X0, [X0+3336]
	018 Call 0x1C17CF4
	019 Move X0, 0x306000
	020 Move X0, [X0+2352]
	021 Call 0x1C17CF4
	022 Move X0, 0x307000
	023 Move X0, [X0+3736]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+941], W8
	027 Move X0, [X22]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X21, 0x306000
	033 Move X21, [X21+2352]
	034 Compare X20, 0
	035 JumpIfEqual {43}
	036 Move X8, 0x308000
	037 Move X8, [X8+3336]
	038 Move X9, [X20]
	039 Move X8, [X8]
	040 Move W11, [X9+304]
	041 Move W10, [X8+304]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X1, X31
	044 Move X9, [X9+200]
	045 Add X9, X9, X10
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 Move W0, W19
	050 Call UIElementsUtility.RegisterCachedPanel, X0, X1
	051 Move X0, [X21]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X21]
	057 Move X8, [X0+184]
	058 Move W10, 1
	059 Move W9, [X8+8]
	060 Move [X8+24], W10
	061 Compare W9, 0
	062 JumpIfEqual {69}
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Return 
	069 Move W9, [X0+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {75}
	072 Call 0x1C17DFC
	073 Move X8, [X21]
	074 Move X8, [X8+184]
	075 Move W9, 1
	076 Move [X8+8], W9
	077 Call UIElementsRuntimeUtility.RegisterPlayerloopCallback
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move W0, 1
	083 Move X1, X31
	084 Move X30, [X31+48]
	085 Call Canvas.SetExternalCanvasEnabled, X0
	086 Return 

Method: System.Void RemoveCachedPanelInternal(System.Int32 instanceID)

Disassembly:
	0x03E161DC LDR X8, [X8 + 0xA28]
	0x03E161E0 LDR X0, [X8]
	0x03E161E4 LDR W8, [X0 + 0xE0]
	0x03E161E8 CBNZ W8, 0x3E161F0
	0x03E161EC BL 0x1C16DFC
	0x03E161F0 ADRP X8, 0x354000
	0x03E161F4 LDR X8, [X8 + 0x6A0]
	0x03E161F8 MOV X1, X31
	0x03E161FC LDR X0, [X8]
	0x03E16200 BL 0x3C06A04
	0x03E16204 LDR X0, [X21]
	0x03E16208 LDR W8, [X0 + 0xE0]
	0x03E1620C CBNZ W8, 0x3E16214
	0x03E16210 BL 0x1C16DFC
	0x03E16214 ADRP X20, 0x5D2000
	0x03E16218 LDRB W8, [X20 + 0x44F]
	0x03E1621C CBNZ W8, 0x3E16234
	0x03E16220 ADRP X0, 0x305000
	0x03E16224 LDR X0, [X0 + 0x930]
	0x03E16228 BL 0x1C16CF4
	0x03E1622C MOVZ W8, 0x1
	0x03E16230 STRB W8, [X20 + 0x44F]
	0x03E16234 LDR X0, [X21]
	0x03E16238 LDR W8, [X0 + 0xE0]
	0x03E1623C CBNZ W8, 0x3E16248
	0x03E16240 BL 0x1C16DFC
	0x03E16244 LDR X0, [X21]
	0x03E16248 LDR X8, [X0 + 0xB8]
	0x03E1624C LDP X22, X21, [X31 + 0x10]
	0x03E16250 STR X19, [X8 + 0x38]
	0x03E16254 LDP X20, X19, [X31 + 0x20]
	0x03E16258 LDP X30, X23, [X31], #0x30
	0x03E1625C RET
	0x03E16260 BL 0x1C16F20
	0x03E16264 STP X30, X21, [X31 - 0x20]!
	0x03E16268 STP X20, X19, [X31 + 0x10]
	0x03E1626C ADRP X20, 0x5D2000
	0x03E16270 ADRP X21, 0x305000
	0x03E16274 LDRB W8, [X20 + 0x3B8]
	0x03E16278 LDR X21, [X21 + 0x930]
	0x03E1627C MOV X19, X0
	0x03E16280 TBNZ X8, 0x0, 0x3E162A4
	0x03E16284 ADRP X0, 0x2DD000
	0x03E16288 LDR X0, [X0 + 0x598]
	0x03E1628C BL 0x1C16CF4
	0x03E16290 ADRP X0, 0x305000
	0x03E16294 LDR X0, [X0 + 0x930]
	0x03E16298 BL 0x1C16CF4
	0x03E1629C MOVZ W8, 0x1
	0x03E162A0 STRB W8, [X20 + 0x3B8]
	0x03E162A4 LDR X0, [X21]
	0x03E162A8 LDR W8, [X0 + 0xE0]
	0x03E162AC CBNZ W8, 0x3E162B4
	0x03E162B0 BL 0x1C16DFC
	0x03E162B4 ADRP X20, 0x5D2000
	0x03E162B8 LDRB W8, [X20 + 0x44E]
	0x03E162BC CBNZ W8, 0x3E162D4
	0x03E162C0 ADRP X0, 0x305000
	0x03E162C4 LDR X0, [X0 + 0x930]
	0x03E162C8 BL 0x1C16CF4
	0x03E162CC MOVZ W8, 0x1
	0x03E162D0 STRB W8, [X20 + 0x44E]
	0x03E162D4 LDR X0, [X21]
	0x03E162D8 ADRP X20, 0x2DD000
	0x03E162DC LDR W8, [X0 + 0xE0]
	0x03E162E0 LDR X20, [X20 + 0x598]
	0x03E162E4 CBNZ W8, 0x3E162F0
	0x03E162E8 BL 0x1C16DFC
	0x03E162EC LDR X0, [X21]
	0x03E162F0 LDR X8, [X20]
	0x03E162F4 LDR X9, [X0 + 0xB8]
	0x03E162F8 LDR W10, [X8 + 0xE0]
	0x03E162FC LDR X20, [X9 + 0x38]
	0x03E16300 CBNZ W10, 0x3E1630C
	0x03E16304 MOV X0, X8
	0x03E16308 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5D3000
	006 Move X20, 0x307000
	007 Move W8, [X21+942]
	008 Move X20, [X20+3736]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x355000
	015 Move X0, [X0+1624]
	016 Call 0x1C17CF4
	017 Move X0, 0x306000
	018 Move X0, [X0+2336]
	019 Call 0x1C17CF4
	020 Move X0, 0x306000
	021 Move X0, [X0+2352]
	022 Call 0x1C17CF4
	023 Move X0, 0x307000
	024 Move X0, [X0+3736]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+942], W8
	028 Move X0, [X20]
	029 Move X20, 0x306000
	030 Move W8, [X0+224]
	031 Move X20, [X20+2352]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move W0, W19
	036 Call UIElementsUtility.RemoveCachedPanel, X0
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X20]
	043 Move X8, [X0+184]
	044 Move W9, 1
	045 Move X0, [X8+16]
	046 Move [X8+24], W9
	047 Compare X0, 0
	048 JumpIfEqual {93}
	049 Move W2, [X0+24]
	050 Move W8, [X0+28]
	051 Add W8, W8, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move [X0+24], W31
	054 Move [X0+28], W8
	055 Move X0, [X0+16]
	056 Move W1, W31
	057 Move X3, X31
	058 Call Array.Clear, X0, X1, X2
	059 Move X8, [X20]
	060 Move X8, [X8+184]
	061 Move X0, [X8+16]
	062 Move W1, W31
	063 Call UIElementsUtility.GetAllPanels, X0, X1
	064 Move X0, [X20]
	065 Move X8, [X0+184]
	066 Move X9, [X8+16]
	067 Compare X9, 0
	068 JumpIfEqual {93}
	069 Move W9, [X9+24]
	070 Compare W9, 0
	071 JumpIfEqual {77}
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Return 
	077 Move W9, [X0+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {83}
	080 Call 0x1C17DFC
	081 Move X8, [X20]
	082 Move X8, [X8+184]
	083 Move [X8+8], W31
	084 Call UIElementsRuntimeUtility.UnregisterPlayerloopCallback
	085 Move X20, [X31+16]
	086 Move X19, [X31+24]
	087 Move W0, W31
	088 Move X1, X31
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Call Canvas.SetExternalCanvasEnabled, X0
	092 Return 
	093 Call 0x1C17F20

Method: System.Void RepaintOffscreenPanels()

Disassembly:
	0x03E16850 STP X30, X21, [X31 - 0x20]!
	0x03E16854 STP X20, X19, [X31 + 0x10]
	0x03E16858 ADRP X21, 0x5D2000
	0x03E1685C ADRP X20, 0x305000
	0x03E16860 LDRB W8, [X21 + 0x3BB]
	0x03E16864 LDR X20, [X20 + 0x930]
	0x03E16868 MOV X19, X0
	0x03E1686C TBNZ X8, 0x0, 0x3E1689C
	0x03E16870 ADRP X0, 0x354000
	0x03E16874 LDR X0, [X0 + 0x6D0]
	0x03E16878 BL 0x1C16CF4
	0x03E1687C ADRP X0, 0x354000
	0x03E16880 LDR X0, [X0 + 0x6D8]
	0x03E16884 BL 0x1C16CF4
	0x03E16888 ADRP X0, 0x305000
	0x03E1688C LDR X0, [X0 + 0x930]
	0x03E16890 BL 0x1C16CF4
	0x03E16894 MOVZ W8, 0x1
	0x03E16898 STRB W8, [X21 + 0x3BB]
	0x03E1689C LDR X0, [X20]
	0x03E168A0 LDR W8, [X0 + 0xE0]
	0x03E168A4 CBNZ W8, 0x3E168B0
	0x03E168A8 BL 0x1C16DFC
	0x03E168AC LDR X0, [X20]
	0x03E168B0 LDR X8, [X0 + 0xB8]
	0x03E168B4 LDR X0, [X8 + 0x48]
	0x03E168B8 CBZ X0, 0x3E1695C
	0x03E168BC ADRP X8, 0x354000
	0x03E168C0 LDR X8, [X8 + 0x6D8]
	0x03E168C4 MOV X1, X19
	0x03E168C8 LDR X2, [X8]
	0x03E168CC BL 0x301C318
	0x03E168D0 TBNZ X0, 0x0, 0x3E16934
	0x03E168D4 LDR X0, [X20]
	0x03E168D8 LDR W8, [X0 + 0xE0]
	0x03E168DC CBNZ W8, 0x3E168E8
	0x03E168E0 BL 0x1C16DFC
	0x03E168E4 LDR X0, [X20]
	0x03E168E8 LDR X8, [X0 + 0xB8]
	0x03E168EC LDR X0, [X8 + 0x48]
	0x03E168F0 CBZ X0, 0x3E1695C
	0x03E168F4 ADRP X9, 0x354000
	0x03E168F8 LDR X9, [X9 + 0x6D0]
	0x03E168FC LDR W10, [X0 + 0x1C]
	0x03E16900 LDR X8, [X0 + 0x10]
	0x03E16904 LDR X9, [X9]
	0x03E16908 ADD W10, W10, 0x1
	0x03E1690C STR W10, [X0 + 0x1C]
	0x03E16910 CBZ X8, 0x3E1695C
	0x03E16914 LDRSW X10, [X0 + 0x18]
	0x03E16918 LDR W11, [X8 + 0x18]
	0x03E1691C CMP W10, W11
	0x03E16920 B.CS 0x3E16940
	0x03E16924 ADD W9, W10, 0x1
	0x03E16928 ADD X8, X8, X10, 0x3, LSL
	0x03E1692C STR W9, [X0 + 0x18]
	0x03E16930 STR X19, [X8 + 0x20]
	0x03E16934 LDP X20, X19, [X31 + 0x10]
	0x03E16938 LDP X30, X21, [X31], #0x20
	0x03E1693C RET
	0x03E16940 LDR X8, [X9 + 0x20]
	0x03E16944 MOV X1, X19
	0x03E16948 LDP X20, X19, [X31 + 0x10]
	0x03E1694C LDR X8, [X8 + 0xC0]
	0x03E16950 LDR X2, [X8 + 0x70]
	0x03E16954 LDP X30, X21, [X31], #0x20
	0x03E16958 B 0x301BF90
	0x03E1695C BL 0x1C16F20
	0x03E16960 STR X30, [X31 - 0x20]!
	0x03E16964 STP X20, X19, [X31 + 0x10]
	0x03E16968 ADRP X20, 0x5D2000
	0x03E1696C ADRP X19, 0x305000
	0x03E16970 LDRB W8, [X20 + 0x3BF]
	0x03E16974 LDR X19, [X19 + 0x930]
	0x03E16978 TBNZ X8, 0x0, 0x3E16990
	0x03E1697C ADRP X0, 0x305000
	0x03E16980 LDR X0, [X0 + 0x930]
	0x03E16984 BL 0x1C16CF4
	0x03E16988 MOVZ W8, 0x1
	0x03E1698C STRB W8, [X20 + 0x3BF]
	0x03E16990 LDR X0, [X19]
	0x03E16994 LDR W8, [X0 + 0xE0]
	0x03E16998 CBNZ W8, 0x3E169A4
	0x03E1699C BL 0x1C16DFC
	0x03E169A0 LDR X0, [X19]
	0x03E169A4 LDR X8, [X0 + 0xB8]
	0x03E169A8 LDP X20, X19, [X31 + 0x10]
	0x03E169AC MOVZ W9, 0x1
	0x03E169B0 STRB W9, [X8 + 0x18]
	0x03E169B4 LDR X30, [X31], #0x20
	0x03E169B8 RET
	0x03E169BC STP X30, X23, [X31 - 0x30]!
	0x03E169C0 STP X22, X21, [X31 + 0x10]
	0x03E169C4 STP X20, X19, [X31 + 0x20]
	0x03E169C8 ADRP X19, 0x5D2000
	0x03E169CC ADRP X22, 0x305000
	0x03E169D0 LDRB W8, [X19 + 0x3C1]
	0x03E169D4 LDR X22, [X22 + 0x930]
	0x03E169D8 TBNZ X8, 0x0, 0x3E16A5C
	0x03E169DC ADRP X0, 0x305000
	0x03E169E0 LDR X0, [X0 + 0x918]
	0x03E169E4 BL 0x1C16CF4
	0x03E169E8 ADRP X0, 0x354000
	0x03E169EC LDR X0, [X0 + 0x6E0]
	0x03E169F0 BL 0x1C16CF4
	0x03E169F4 ADRP X0, 0x354000
	0x03E169F8 LDR X0, [X0 + 0x658]
	0x03E169FC BL 0x1C16CF4
	0x03E16A00 ADRP X0, 0x354000
	0x03E16A04 LDR X0, [X0 + 0x6E8]
	0x03E16A08 BL 0x1C16CF4
	0x03E16A0C ADRP X0, 0x305000
	0x03E16A10 LDR X0, [X0 + 0x920]
	0x03E16A14 BL 0x1C16CF4
	0x03E16A18 ADRP X0, 0x305000
	0x03E16A1C LDR X0, [X0 + 0x928]
	0x03E16A20 BL 0x1C16CF4
	0x03E16A24 ADRP X0, 0x354000
	0x03E16A28 LDR X0, [X0 + 0x6F0]
	0x03E16A2C BL 0x1C16CF4
	0x03E16A30 ADRP X0, 0x354000
	0x03E16A34 LDR X0, [X0 + 0x5D0]
	0x03E16A38 BL 0x1C16CF4
	0x03E16A3C ADRP X0, 0x305000
	0x03E16A40 LDR X0, [X0 + 0x930]
	0x03E16A44 BL 0x1C16CF4
	0x03E16A48 ADRP X0, 0x306000
	0x03E16A4C LDR X0, [X0 + 0xE98]
	0x03E16A50 BL 0x1C16CF4
	0x03E16A54 MOVZ W8, 0x1
	0x03E16A58 STRB W8, [X19 + 0x3C1]
	0x03E16A5C LDR X0, [X22]
	0x03E16A60 LDR W8, [X0 + 0xE0]
	0x03E16A64 CBNZ W8, 0x3E16A70
	0x03E16A68 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X19, 0x5D3000
	011 Move X22, 0x306000
	012 Move W8, [X19+943]
	013 Move X22, [X22+2352]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x306000
	019 Move X0, [X0+2328]
	020 Call 0x1C17CF4
	021 Move X0, 0x355000
	022 Move X0, [X0+1664]
	023 Call 0x1C17CF4
	024 Move X0, 0x355000
	025 Move X0, [X0+1672]
	026 Call 0x1C17CF4
	027 Move X0, 0x355000
	028 Move X0, [X0+1680]
	029 Call 0x1C17CF4
	030 Move X0, 0x355000
	031 Move X0, [X0+1688]
	032 Call 0x1C17CF4
	033 Move X0, 0x2DE000
	034 Move X0, [X0+1432]
	035 Call 0x1C17CF4
	036 Move X0, 0x306000
	037 Move X0, [X0+2352]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X19+943], W8
	041 Move X0, [X22]
	042 Move [X31+32], X31
	043 Move [X31+40], X31
	044 Move [X31+48], X31
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Call UIElementsRuntimeUtility.GetSortedPlayerPanels
	050 Compare X0, 0
	051 JumpIfEqual {125}
	052 Move X8, 0x355000
	053 Move X8, [X8+1688]
	054 Move X23, 0x355000
	055 Move X23, [X23+1672]
	056 Move X24, 0x306000
	057 Move X1, [X8]
	058 Move X25, 0x2DE000
	059 Move X21, 0x355000
	060 Move X24, [X24+2328]
	061 Move X25, [X25+1432]
	062 Move X21, [X21+1664]
	063 Add X8, X31, 8
	064 Call List`1<Object>.GetEnumerator, X0
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Move X8, [X31+24]
	067 Move [X31+2], V0
	068 Move [X31+48], X8
	069 Move X1, [X23]
	070 Add X0, X31, 32
	071 Call Enumerator<Object>.MoveNext, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {109}
	076 Move X19, [X31+48]
	077 Compare X19, 0
	078 JumpIfEqual {124}
	079 Move X8, [X19]
	080 Move X1, [X24]
	081 Move W10, [X8+304]
	082 Move W9, [X1+304]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X8, [X8+200]
	085 Add X8, X8, X9
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, [X25]
	089 Move X20, [X19+400]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X20
	095 Move X1, X31
	096 Move X2, X31
	097 Call Object.op_Inequality, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {69}
	102 Move X0, [X22]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X0, X19
	108 Call UIElementsRuntimeUtility.RepaintOverlayPanel, X0
	109 Move X1, [X21]
	110 Add X0, X31, 32
	111 Call Enumerator<Object>.Dispose, X0
	112 Move X20, [X31+112]
	113 Move X19, [X31+120]
	114 Move X22, [X31+96]
	115 Move X21, [X31+104]
	116 Move X24, [X31+80]
	117 Move X23, [X31+88]
	118 Move X30, [X31+64]
	119 Move X25, [X31+72]
	120 Add X31, X31, 128
	121 Return 
	122 Move X0, X19
	123 Call 0x1C181E0
	124 Call 0x1C17F20
	125 Call 0x1C17F20
	126 Move X19, X0
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X0, X19
	129 Call 0x3EB2AD0
	130 Move X20, [X0]
	131 Call 0x3EB2AE0
	132 Move X1, [X21]
	133 Add X0, X31, 32
	134 Call Enumerator<Object>.Dispose, X0
	135 Compare X20, 0
	136 JumpIfEqual {112}
	137 Move X0, X20
	138 Call 0x1C17F18
	139 Move X20, X31
	140 Move X19, X0
	141 Move X1, [X21]
	142 Add X0, X31, 32
	143 Call Enumerator<Object>.Dispose, X0
	144 Compare X20, 0
	145 JumpIfNotEqual {148}
	146 Move X0, X19
	147 Call 0x1D2D690
	148 Move X0, X20
	149 Call 0x1C17F18
	150 Call 0x1991590

Method: System.Void RepaintOverlayPanel(UnityEngine.UIElements.BaseRuntimePanel panel)

Disassembly:
	0x03E16AF4 LDR X0, [X23]
	0x03E16AF8 LDR X8, [X0 + 0xB8]
	0x03E16AFC LDR X20, [X8 + 0x8]
	0x03E16B00 CBNZ X20, 0x3E16B54
	0x03E16B04 LDR W8, [X0 + 0xE0]
	0x03E16B08 CBNZ W8, 0x3E16B14
	0x03E16B0C BL 0x1C16DFC
	0x03E16B10 LDR X0, [X23]
	0x03E16B14 ADRP X9, 0x354000
	0x03E16B18 LDR X8, [X0 + 0xB8]
	0x03E16B1C LDR X9, [X9 + 0x6E0]
	0x03E16B20 LDR X21, [X8]
	0x03E16B24 LDR X0, [X9]
	0x03E16B28 BL 0x1C16F10
	0x03E16B2C ADRP X8, 0x354000
	0x03E16B30 LDR X8, [X8 + 0x6F0]
	0x03E16B34 MOV X1, X21
	0x03E16B38 MOV X3, X31
	0x03E16B3C MOV X20, X0
	0x03E16B40 LDR X2, [X8]
	0x03E16B44 BL 0x295A080
	0x03E16B48 LDR X8, [X23]
	0x03E16B4C LDR X8, [X8 + 0xB8]
	0x03E16B50 STR X20, [X8 + 0x8]
	0x03E16B54 CBZ X19, 0x3E16C3C
	0x03E16B58 ADRP X8, 0x354000
	0x03E16B5C LDR X8, [X8 + 0x6E8]
	0x03E16B60 ADRP X21, 0x305000
	0x03E16B64 ADRP X23, 0x305000
	0x03E16B68 MOV X0, X19
	0x03E16B6C LDR X2, [X8]
	0x03E16B70 LDR X21, [X21 + 0x928]
	0x03E16B74 LDR X23, [X23 + 0x918]
	0x03E16B78 MOV X1, X20
	0x03E16B7C BL 0x301DD30
	0x03E16B80 MOV W19, W31
	0x03E16B84 LDR X8, [X22]
	0x03E16B88 LDR W9, [X8 + 0xE0]
	0x03E16B8C CBNZ W9, 0x3E16B9C
	0x03E16B90 MOV X0, X8
	0x03E16B94 BL 0x1C16DFC
	0x03E16B98 LDR X8, [X22]
	0x03E16B9C LDR X9, [X8 + 0xB8]
	0x03E16BA0 LDR X0, [X9 + 0x10]
	0x03E16BA4 CBZ X0, 0x3E16C3C
	0x03E16BA8 LDR W10, [X8 + 0xE0]
	0x03E16BAC LDR W20, [X0 + 0x18]
	0x03E16BB0 CBNZ W10, 0x3E16BCC
	0x03E16BB4 MOV X0, X8
	0x03E16BB8 BL 0x1C16DFC
	0x03E16BBC LDR X8, [X22]
	0x03E16BC0 LDR X9, [X8 + 0xB8]
	0x03E16BC4 LDR X0, [X9 + 0x10]
	0x03E16BC8 CBZ X0, 0x3E16C3C
	0x03E16BCC CMP W19, W20
	0x03E16BD0 B.GE 0x3E16C1C
	0x03E16BD4 LDR X2, [X21]
	0x03E16BD8 MOV W1, W19
	0x03E16BDC BL 0x301BCCC
	0x03E16BE0 CBZ X0, 0x3E16C14
	0x03E16BE4 LDR X9, [X0]
	0x03E16BE8 LDR X8, [X23]
	0x03E16BEC LDRB W11, [X9 + 0x130]
	0x03E16BF0 LDRB W10, [X8 + 0x130]
	0x03E16BF4 CMP W11, W10
	0x03E16BF8 B.CC 0x3E16C14
	0x03E16BFC LDR X9, [X9 + 0xC8]
	0x03E16C00 ADD X9, X9, X10, 0x3, LSL
	0x03E16C04 LDUR X9, [X9 - 0x8]
	0x03E16C08 CMP X9, X8
	0x03E16C0C B.NE 0x3E16C14
	0x03E16C10 STR W19, [X0 + 0x170]
	0x03E16C14 ADD W19, W19, 0x1
	0x03E16C18 B 0x3E16B84
	0x03E16C1C LDR W8, [X0 + 0x18]
	0x03E16C20 LDP X20, X19, [X31 + 0x20]
	0x03E16C24 LDP X22, X21, [X31 + 0x10]
	0x03E16C28 STRB W31, [X9 + 0x18]
	0x03E16C2C SUB W8, W8, 0x1
	0x03E16C30 STR W8, [X9 + 0x1C]
	0x03E16C34 LDP X30, X23, [X31], #0x30
	0x03E16C38 RET
	0x03E16C3C BL 0x1C16F20
	0x03E16C40 STP D9, D8, [X31 - 0x30]!
	0x03E16C44 STP X30, X21, [X31 + 0x10]
	0x03E16C48 STP X20, X19, [X31 + 0x20]
	0x03E16C4C ADRP X21, 0x5D2000
	0x03E16C50 ADRP X20, 0x305000
	0x03E16C54 LDRB W8, [X21 + 0x3C2]
	0x03E16C58 LDR X20, [X20 + 0x930]
	0x03E16C5C MOV X19, X0
	0x03E16C60 MOV V8.16B, V1.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x5D3000
	008 Move X20, 0x306000
	009 Move W8, [X19+944]
	010 Move X20, [X20+2352]
	011 Move X22, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x306000
	017 Move X0, [X0+2352]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+944], W8
	021 Move X0, X31
	022 Call Camera.get_current
	023 Move X19, X0
	024 Move X0, X31
	025 Call RenderTexture.get_active
	026 Move X8, [X20]
	027 Move X21, X0
	028 Move W9, [X8+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {34}
	031 Move X0, X8
	032 Call 0x1C17DFC
	033 Move X8, [X20]
	034 Move X8, [X8+184]
	035 Move X1, X31
	036 Move X2, X31
	037 Move X20, [X8+40]
	038 Move X0, X20
	039 Call IntPtr.op_Inequality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {47}
	044 Move X0, X20
	045 Move X1, X31
	046 Call ProfilerUnsafeUtility.BeginSample, X0
	047 Move X0, X31
	048 Call Event.get_current
	049 Move X1, X0
	050 Compare X22, 0
	051 JumpIfEqual {86}
	052 Move X8, [X22]
	053 Move X9, [X8+696]
	054 Move X2, [X8+704]
	055 Move X0, X22
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X22, X31
	058 Move X0, X20
	059 Move X1, X31
	060 Move X2, X31
	061 Call IntPtr.op_Inequality, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {69}
	066 Move X0, X20
	067 Move X1, X31
	068 Call ProfilerUnsafeUtility.EndSample, X0
	069 Compare X22, 0
	070 JumpIfNotEqual {84}
	071 Move X0, X19
	072 Move X1, X31
	073 Call Camera.SetupCurrent, X0
	074 Move X0, X21
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X1, X31
	080 Move X30, [X31+48]
	081 Move X23, [X31+56]
	082 Call RenderTexture.set_active, X0
	083 Return 
	084 Move X0, X22
	085 Call 0x1C17F18
	086 Call 0x1C17F20
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X23, X0
	089 Move X0, X23
	090 Call 0x3EB2AD0
	091 Move X22, [X0]
	092 Call 0x3EB2AE0
	093 Move X22, X31
	094 Move X23, X0
	095 Move X0, X20
	096 Move X1, X31
	097 Move X2, X31
	098 Call IntPtr.op_Inequality, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {106}
	103 Move X0, X20
	104 Move X1, X31
	105 Call ProfilerUnsafeUtility.EndSample, X0
	106 Compare X22, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X23
	109 Call 0x1D2D690
	110 Move X0, X22
	111 Call 0x1C17F18
	112 Call 0x1991590

Method: System.Void BeginRenderOverlays(System.Int32 displayIndex)

Disassembly:
	0x03E16C64 MOV V9.16B, V0.16B
	0x03E16C68 TBNZ X8, 0x0, 0x3E16C8C
	0x03E16C6C ADRP X0, 0x2E4000
	0x03E16C70 LDR X0, [X0 + 0x5F0]
	0x03E16C74 BL 0x1C16CF4
	0x03E16C78 ADRP X0, 0x305000
	0x03E16C7C LDR X0, [X0 + 0x930]
	0x03E16C80 BL 0x1C16CF4
	0x03E16C84 MOVZ W8, 0x1
	0x03E16C88 STRB W8, [X21 + 0x3C2]
	0x03E16C8C LDR X0, [X20]
	0x03E16C90 LDR W8, [X0 + 0xE0]
	0x03E16C94 CBNZ W8, 0x3E16C9C
	0x03E16C98 BL 0x1C16DFC
	0x03E16C9C MOV V0.16B, V9.16B
	0x03E16CA0 MOV V1.16B, V8.16B
	0x03E16CA4 MOV X0, X19
	0x03E16CA8 BL 0x3E16CC0
	0x03E16CAC LDR W0, [X19 + 0x4]
	0x03E16CB0 LDP X20, X19, [X31 + 0x20]
	0x03E16CB4 LDP X30, X21, [X31 + 0x10]
	0x03E16CB8 LDP D9, D8, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D3000
	005 Move X19, 0x306000
	006 Move W8, [X20+945]
	007 Move X19, [X19+2352]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x306000
	013 Move X0, [X0+2352]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+945], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move [X8+48], W31
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void RenderOverlaysBeforePriority(System.Int32 displayIndex, System.Single maxPriority)

Disassembly:
	0x03E16CBC B 0x3E16E14
	0x03E16CC0 STR D12, [X31 - 0x50]!
	0x03E16CC4 STP D11, D10, [X31 + 0x10]
	0x03E16CC8 STP D9, D8, [X31 + 0x20]
	0x03E16CCC STP X30, X21, [X31 + 0x30]
	0x03E16CD0 STP X20, X19, [X31 + 0x40]
	0x03E16CD4 ADRP X21, 0x5D2000
	0x03E16CD8 ADRP X20, 0x341000
	0x03E16CDC LDRB W8, [X21 + 0x3C3]
	0x03E16CE0 LDR X20, [X20 + 0x448]
	0x03E16CE4 MOV X19, X0
	0x03E16CE8 MOV V8.16B, V1.16B
	0x03E16CEC MOV V9.16B, V0.16B
	0x03E16CF0 TBNZ X8, 0x0, 0x3E16D14
	0x03E16CF4 ADRP X0, 0x341000
	0x03E16CF8 LDR X0, [X0 + 0x448]
	0x03E16CFC BL 0x1C16CF4
	0x03E16D00 ADRP X0, 0x2DE000
	0x03E16D04 LDR X0, [X0 + 0x470]
	0x03E16D08 BL 0x1C16CF4
	0x03E16D0C MOVZ W8, 0x1
	0x03E16D10 STRB W8, [X21 + 0x3C3]
	0x03E16D14 LDR X0, [X20]
	0x03E16D18 LDR W8, [X0 + 0xE0]
	0x03E16D1C CBNZ W8, 0x3E16D24
	0x03E16D20 BL 0x1C16DFC
	0x03E16D24 FMOV S2, W31
	0x03E16D28 MOV V0.16B, V9.16B
	0x03E16D2C MOV V1.16B, V8.16B
	0x03E16D30 MOV X0, X31
	0x03E16D34 BL 0x3C0DA7C
	0x03E16D38 ADRP X20, 0x5C2000
	0x03E16D3C LDRB W8, [X20 + 0x783]
	0x03E16D40 MOV V10.16B, V0.16B
	0x03E16D44 MOV V11.16B, V1.16B
	0x03E16D48 MOV V12.16B, V2.16B
	0x03E16D4C CBNZ W8, 0x3E16D64
	0x03E16D50 ADRP X0, 0x2DD000
	0x03E16D54 LDR X0, [X0 + 0x5A0]
	0x03E16D58 BL 0x1C16CF4
	0x03E16D5C MOVZ W8, 0x1
	0x03E16D60 STRB W8, [X20 + 0x783]
	0x03E16D64 ADRP X8, 0x2DD000
	0x03E16D68 LDR X8, [X8 + 0x5A0]
	0x03E16D6C LDR X8, [X8]
	0x03E16D70 LDR X8, [X8 + 0xB8]
	0x03E16D74 LDP S0, S1, [X8]
	0x03E16D78 LDR V2, [X8 + 0x8]
	0x03E16D7C ADRP X8, 0xFFFFFFFFFCCD3000
	0x03E16D80 FSUB S0, S10, S0
	0x03E16D84 FSUB S1, S11, S1
	0x03E16D88 FMUL S0, S0, S0
	0x03E16D8C FMUL S1, S1, S1
	0x03E16D90 FADD S0, S0, S1
	0x03E16D94 LDR V1, [X8 + 0xF20]
	0x03E16D98 FSUB S2, S12, S2
	0x03E16D9C FMUL S2, S2, S2
	0x03E16DA0 FADD S0, S2, S0
	0x03E16DA4 FCMP S0, S1
	0x03E16DA8 B.MI 0x3E16DF0
	0x03E16DAC STR X31, [X31 + 0x8]
	0x03E16DB0 ADRP X10, 0x2DE000
	0x03E16DB4 LDR X10, [X10 + 0x470]
	0x03E16DB8 MOVZ W9, 0x7F800000
	0x03E16DBC FMOV S0, W9
	0x03E16DC0 FCVTZS W8, S12
	0x03E16DC4 LDR X2, [X10]
	0x03E16DC8 FCMP S12, S0
	0x03E16DCC MOVZ W9, 0x80000000
	0x03E16DD0 CSEL W1, W9, W8, EQ
	0x03E16DD4 ADD X0, X31, 0x8
	0x03E16DD8 BL 0x24341FC
	0x03E16DDC LDR X8, [X31 + 0x8]
	0x03E16DE0 MOV V9.16B, V10.16B
	0x03E16DE4 MOV V8.16B, V11.16B
	0x03E16DE8 STR X8, [X19]
	0x03E16DEC B 0x3E16DF4
	0x03E16DF0 STR X31, [X19]
	0x03E16DF4 MOV V0.16B, V9.16B
	0x03E16DF8 MOV V1.16B, V8.16B
	0x03E16DFC LDP X20, X19, [X31 + 0x40]
	0x03E16E00 LDP X30, X21, [X31 + 0x30]
	0x03E16E04 LDP D9, D8, [X31 + 0x20]
	0x03E16E08 LDP D11, D10, [X31 + 0x10]
	0x03E16E0C LDR V12, [X31], #0x50
	0x03E16E10 RET
	0x03E16E14 STP D9, D8, [X31 - 0x30]!
	0x03E16E18 STP X30, X21, [X31 + 0x10]
	0x03E16E1C STP X20, X19, [X31 + 0x20]
	0x03E16E20 ADRP X20, 0x5D2000
	0x03E16E24 LDRB W8, [X20 + 0x3C4]
	0x03E16E28 MOV W19, W0
	0x03E16E2C MOV V8.16B, V1.16B
	0x03E16E30 MOV V9.16B, V0.16B
	0x03E16E34 TBNZ X8, 0x0, 0x3E16E4C
	0x03E16E38 ADRP X0, 0x341000
	0x03E16E3C LDR X0, [X0 + 0x448]
	0x03E16E40 BL 0x1C16CF4
	0x03E16E44 MOVZ W8, 0x1
	0x03E16E48 STRB W8, [X20 + 0x3C4]
	0x03E16E4C MOV X0, X31
	0x03E16E50 BL 0x3C0E0D8
	0x03E16E54 CMP W19, 0x1
	0x03E16E58 MOV W20, W0
	0x03E16E5C B.LT 0x3E16ED4
	0x03E16E60 ADRP X21, 0x341000
	0x03E16E64 LDR X21, [X21 + 0x448]
	0x03E16E68 LDR X0, [X21]

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x5D3000
	010 Move X22, 0x306000
	011 Move W8, [X20+946]
	012 Move X22, [X22+2352]
	013 Move V8, V0
	014 Move W19, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x306000
	020 Move X0, [X0+2328]
	021 Call 0x1C17CF4
	022 Move X0, 0x306000
	023 Move X0, [X0+2336]
	024 Call 0x1C17CF4
	025 Move X0, 0x306000
	026 Move X0, [X0+2344]
	027 Call 0x1C17CF4
	028 Move X0, 0x306000
	029 Move X0, [X0+2352]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+946], W8
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X22]
	039 Move X8, [X0+184]
	040 Move W8, [X8+48]
	041 Move TEMP, X8
	042 And TEMP, TEMP, -2147483648
	043 Compare TEMP, -2147483648
	044 JumpIfEqual {113}
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X23, 0x306000
	050 Move X24, 0x306000
	051 Move X23, [X23+2344]
	052 Move X24, [X24+2328]
	053 Call UIElementsRuntimeUtility.GetSortedPlayerPanels
	054 Move X8, [X22]
	055 Move X20, X0
	056 Move W9, [X8+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {62}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 Move X8, [X22]
	062 Compare X20, 0
	063 JumpIfEqual {122}
	064 Move X9, [X8+184]
	065 Move W1, [X9+48]
	066 Move W9, [X20+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {76}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move X8, [X22]
	074 Move X8, [X8+184]
	075 Move W1, [X8+48]
	076 Move X2, [X23]
	077 Move X0, X20
	078 Call List`1<Object>.get_Item, X0, X1
	079 Compare X0, 0
	080 JumpIfEqual {102}
	081 Move X9, [X0]
	082 Move X8, [X24]
	083 Move X21, X0
	084 Move W11, [X9+304]
	085 Move W10, [X8+304]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X9, [X9+200]
	088 Add X9, X9, X10
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move V0, [X21+364]
	092 NotImplemented "Instruction FCMP not yet implemented."
	093 Move W8, [X21+472]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, [X22]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X21
	101 Call UIElementsRuntimeUtility.RepaintOverlayPanel, X0
	102 Move X8, [X22]
	103 Move W9, [X8+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {109}
	106 Move X0, X8
	107 Call 0x1C17DFC
	108 Move X8, [X22]
	109 Move X9, [X8+184]
	110 Move W10, [X9+48]
	111 Add W10, W10, 1
	112 Move [X9+48], W10
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X22, [X31+32]
	116 Move X21, [X31+40]
	117 Move X24, [X31+16]
	118 Move X23, [X31+24]
	119 Move X30, [X31+8]
	120 Move V8, [X31+64]
	121 Return 
	122 Call 0x1C17F20

Method: System.Void EndRenderOverlays(System.Int32 displayIndex)

Disassembly:
	0x03E16E6C LDR W8, [X0 + 0xE0]
	0x03E16E70 CBNZ W8, 0x3E16E7C
	0x03E16E74 BL 0x1C16DFC
	0x03E16E78 LDR X0, [X21]
	0x03E16E7C LDR X8, [X0 + 0xB8]
	0x03E16E80 LDR X8, [X8]
	0x03E16E84 CBZ X8, 0x3E16EF0
	0x03E16E88 LDR W9, [X8 + 0x18]
	0x03E16E8C CMP W9, W19
	0x03E16E90 B.LE 0x3E16ED4
	0x03E16E94 LDR W9, [X0 + 0xE0]
	0x03E16E98 CBNZ W9, 0x3E16EB0
	0x03E16E9C BL 0x1C16DFC
	0x03E16EA0 LDR X8, [X21]
	0x03E16EA4 LDR X8, [X8 + 0xB8]
	0x03E16EA8 LDR X8, [X8]
	0x03E16EAC CBZ X8, 0x3E16EF0
	0x03E16EB0 LDR W9, [X8 + 0x18]
	0x03E16EB4 CMP W9, W19
	0x03E16EB8 B.LS 0x3E16EF4
	0x03E16EBC ADD X8, X8, W19, 0x3, UXTW
	0x03E16EC0 LDR X0, [X8 + 0x20]
	0x03E16EC4 CBZ X0, 0x3E16EF0
	0x03E16EC8 MOV X1, X31
	0x03E16ECC BL 0x3C0D934
	0x03E16ED0 MOV W20, W0
	0x03E16ED4 SCVTF S0, W20
	0x03E16ED8 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5D3000
	006 Move X20, 0x306000
	007 Move W8, [X21+947]
	008 Move X20, [X20+2352]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x306000
	015 Move X0, [X0+2352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+947], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move TEMP, 0x80800000
	025 Not TEMP
	026 Move W8, TEMP
	027 Move S0, W8
	028 Move W0, W19
	029 Call UIElementsRuntimeUtility.RenderOverlaysBeforePriority, X0, V0
	030 Move X8, [X20]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move TEMP, 0
	034 Not TEMP
	035 Move W9, TEMP
	036 Move X8, [X8+184]
	037 Move [X8+48], W9
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 

Method: UnityEngine.Object get_activeEventSystem()

Disassembly:
	0x03E16EDC LDP X30, X21, [X31 + 0x10]
	0x03E16EE0 FSUB S1, S0, S8
	0x03E16EE4 MOV V0.16B, V9.16B
	0x03E16EE8 LDP D9, D8, [X31], #0x30
	0x03E16EEC RET
	0x03E16EF0 BL 0x1C16F20
	0x03E16EF4 BL 0x1C16F28
	0x03E16EF8 FNEG S1, S1
	0x03E16EFC RET
	0x03E16F00 STR X30, [X31 - 0x30]!
	0x03E16F04 STP X22, X21, [X31 + 0x10]
	0x03E16F08 STP X20, X19, [X31 + 0x20]
	0x03E16F0C LDR X8, [X2 + 0x8]
	0x03E16F10 STP X1, X2, [X0 + 0x20]
	0x03E16F14 MOV X19, X0
	0x03E16F18 MOV X20, X2
	0x03E16F1C STR X8, [X0 + 0x10]
	0x03E16F20 LDRB W22, [X2 + 0x52]
	0x03E16F24 STR X0, [X0 + 0x40]
	0x03E16F28 MOV X0, X2
	0x03E16F2C MOV X21, X1
	0x03E16F30 BL 0x1C16D84

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D3000
	005 Move X19, 0x306000
	006 Move W8, [X20+948]
	007 Move X19, [X19+2352]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x306000
	013 Move X0, [X0+2352]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+948], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+56]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_activeEventSystem(UnityEngine.Object value)

Disassembly:
	0x03E16F34 TBZ X0, 0x0, 0x3E16F4C
	0x03E16F38 CMP W22, 0x1
	0x03E16F3C B.NE 0x3E16F54
	0x03E16F40 ADRP X8, 0xFFFFFFFFFDDFE000
	0x03E16F44 ADD X8, X8, 0xD78
	0x03E16F48 B 0x3E16FC8
	0x03E16F4C CBZ W22, 0x3E16F68
	0x03E16F50 CBZ X21, 0x3E16FE8
	0x03E16F54 LDR X8, [X19 + 0x10]
	0x03E16F58 LDR X9, [X19 + 0x20]
	0x03E16F5C STR X8, [X19 + 0x18]
	0x03E16F60 STR X9, [X19 + 0x40]
	0x03E16F64 B 0x3E16FCC
	0x03E16F68 LDRB W8, [X19 + 0x70]
	0x03E16F6C CBZ W8, 0x3E16F98
	0x03E16F70 MOV X0, X20
	0x03E16F74 BL 0x1C16D7C
	0x03E16F78 MOV W21, W0
	0x03E16F7C MOV X0, X20
	0x03E16F80 BL 0x1C17238
	0x03E16F84 TBZ X21, 0x0, 0x3E16FA4
	0x03E16F88 TBZ X0, 0x0, 0x3E16FB4
	0x03E16F8C ADRP X8, 0xFFFFFFFFFDDFE000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5D3000
	006 Move X20, 0x306000
	007 Move W8, [X21+949]
	008 Move X20, [X20+2352]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x306000
	015 Move X0, [X0+2352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+949], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8+56], X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Boolean get_useDefaultEventSystem()

Disassembly:
	0x03E16F90 ADD X8, X8, 0xE74
	0x03E16F94 B 0x3E16FC8
	0x03E16F98 ADRP X8, 0xFFFFFFFFFDDFE000
	0x03E16F9C ADD X8, X8, 0xD58
	0x03E16FA0 B 0x3E16FC8
	0x03E16FA4 TBZ X0, 0x0, 0x3E16FC0
	0x03E16FA8 ADRP X8, 0xFFFFFFFFFDDFE000
	0x03E16FAC ADD X8, X8, 0xDB4
	0x03E16FB0 B 0x3E16FC8
	0x03E16FB4 ADRP X8, 0xFFFFFFFFFDDFE000
	0x03E16FB8 ADD X8, X8, 0xE38
	0x03E16FBC B 0x3E16FC8
	0x03E16FC0 ADRP X8, 0xFFFFFFFFFDDFE000
	0x03E16FC4 ADD X8, X8, 0xD88
	0x03E16FC8 STR X8, [X19 + 0x18]
	0x03E16FCC ADRP X8, 0xFFFFFFFFFDDFE000
	0x03E16FD0 ADD X8, X8, 0xD08
	0x03E16FD4 STR X8, [X19 + 0x38]
	0x03E16FD8 LDP X20, X19, [X31 + 0x20]
	0x03E16FDC LDP X22, X21, [X31 + 0x10]
	0x03E16FE0 LDR X30, [X31], #0x30
	0x03E16FE4 RET
	0x03E16FE8 ADRP X1, 0xFFFFFFFFFCD05000
	0x03E16FEC ADD X1, X1, 0xEE3
	0x03E16FF0 MOV X0, X31
	0x03E16FF4 BL 0x1C16F3C
	0x03E16FF8 MOV X1, X31
	0x03E16FFC BL 0x1C16DEC
	0x03E17000 LDR X8, [X0 + 0x40]
	0x03E17004 LDR X3, [X0 + 0x18]
	0x03E17008 LDR X2, [X0 + 0x28]
	0x03E1700C MOV X0, X8
	0x03E17010 BR X3
	0x03E17014 STR X30, [X31 - 0x20]!
	0x03E17018 STP X20, X19, [X31 + 0x10]
	0x03E1701C ADRP X19, 0x5D1000
	0x03E17020 ADRP X20, 0x353000
	0x03E17024 LDRB W8, [X19 + 0x3C5]
	0x03E17028 LDR X20, [X20 + 0x5D0]
	0x03E1702C TBNZ X8, 0x0, 0x3E17044
	0x03E17030 ADRP X0, 0x353000
	0x03E17034 LDR X0, [X0 + 0x5D0]
	0x03E17038 BL 0x1C16CF4
	0x03E1703C MOVZ W8, 0x1
	0x03E17040 STRB W8, [X19 + 0x3C5]
	0x03E17044 LDR X0, [X20]
	0x03E17048 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D3000
	005 Move X19, 0x306000
	006 Move W8, [X20+950]
	007 Move X19, [X19+2352]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x2DE000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move X0, 0x306000
	016 Move X0, [X0+2352]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+950], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0x5D3000
	026 Move W8, [X20+1102]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x306000
	030 Move X0, [X0+2352]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+1102], W8
	034 Move X0, [X19]
	035 Move X20, 0x2DD000
	036 Move W8, [X0+224]
	037 Call 0x3EB279C
	038 Return X0
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X19]
	043 Move X8, [X20]
	044 Move X9, [X0+184]
	045 Move W10, [X8+224]
	046 Move X19, [X9+56]
	047 Compare W10, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X1, X31
	055 Move X2, X31
	056 Move X30, [X31+32]
	057 Call Object.op_Equality, X0, X1
	058 Return X0

Method: System.Void RegisterEventSystem(UnityEngine.Object eventSystem)

Disassembly:
	0x03E1704C MOV X1, X31
	0x03E17050 MOV X19, X0
	0x03E17054 BL 0x33BDD8C
	0x03E17058 LDR X8, [X20]
	0x03E1705C LDR X8, [X8 + 0xB8]
	0x03E17060 STR X19, [X8]
	0x03E17064 LDP X20, X19, [X31 + 0x10]
	0x03E17068 LDR X30, [X31], #0x20
	0x03E1706C RET
	0x03E17070 MOV X1, X31
	0x03E17074 B 0x33BDD8C
	0x03E17078 RET
	0x03E1707C STR X30, [X31 - 0x30]!
	0x03E17080 STP X22, X21, [X31 + 0x10]
	0x03E17084 STP X20, X19, [X31 + 0x20]
	0x03E17088 ADRP X21, 0x5D1000
	0x03E1708C ADRP X22, 0x304000
	0x03E17090 LDRB W8, [X21 + 0x3C6]
	0x03E17094 LDR X22, [X22 + 0x930]
	0x03E17098 MOV W20, W2
	0x03E1709C MOV W19, W1
	0x03E170A0 TBNZ X8, 0x0, 0x3E170B8
	0x03E170A4 ADRP X0, 0x304000
	0x03E170A8 LDR X0, [X0 + 0x930]
	0x03E170AC BL 0x1C16CF4
	0x03E170B0 MOVZ W8, 0x1
	0x03E170B4 STRB W8, [X21 + 0x3C6]
	0x03E170B8 LDR X0, [X22]
	0x03E170BC LDR W8, [X0 + 0xE0]
	0x03E170C0 CBNZ W8, 0x3E170C8
	0x03E170C4 BL 0x1C16DFC
	0x03E170C8 SCVTF S0, W20
	0x03E170CC MOV W0, W19
	0x03E170D0 LDP X20, X19, [X31 + 0x20]
	0x03E170D4 LDP X22, X21, [X31 + 0x10]
	0x03E170D8 LDR X30, [X31], #0x30
	0x03E170DC B 0x3E15CBC
	0x03E170E0 STR D8, [X31 - 0x30]!
	0x03E170E4 STR X30, [X31 + 0x8]
	0x03E170E8 STP X22, X21, [X31 + 0x10]
	0x03E170EC STP X20, X19, [X31 + 0x20]
	0x03E170F0 ADRP X21, 0x5D1000
	0x03E170F4 ADRP X22, 0x304000
	0x03E170F8 LDRB W8, [X21 + 0x3C7]
	0x03E170FC LDR X22, [X22 + 0x918]
	0x03E17100 MOV X19, X2
	0x03E17104 MOV X20, X1
	0x03E17108 TBNZ X8, 0x0, 0x3E17120
	0x03E1710C ADRP X0, 0x304000
	0x03E17110 LDR X0, [X0 + 0x918]
	0x03E17114 BL 0x1C16CF4
	0x03E17118 MOVZ W8, 0x1
	0x03E1711C STRB W8, [X21 + 0x3C7]
	0x03E17120 LDR X8, [X22]
	0x03E17124 CBZ X20, 0x3E17140
	0x03E17128 LDR X9, [X20]
	0x03E1712C LDRB W10, [X8 + 0x130]
	0x03E17130 LDRB W11, [X9 + 0x130]
	0x03E17134 CMP W11, W10
	0x03E17138 B.CS 0x3E17148
	0x03E1713C MOV X20, X31
	0x03E17140 CBNZ X19, 0x3E17160
	0x03E17144 B 0x3E17174
	0x03E17148 LDR X9, [X9 + 0xC8]
	0x03E1714C ADD X9, X9, X10, 0x3, LSL
	0x03E17150 LDUR X9, [X9 - 0x8]
	0x03E17154 CMP X9, X8
	0x03E17158 CSEL X20, X20, X31, EQ
	0x03E1715C CBZ X19, 0x3E17174
	0x03E17160 LDR X9, [X19]
	0x03E17164 LDRB W10, [X8 + 0x130]
	0x03E17168 LDRB W11, [X9 + 0x130]
	0x03E1716C CMP W11, W10
	0x03E17170 B.CS 0x3E1718C
	0x03E17174 MOV W0, W31
	0x03E17178 LDP X20, X19, [X31 + 0x20]
	0x03E1717C LDP X22, X21, [X31 + 0x10]
	0x03E17180 LDR X30, [X31 + 0x8]
	0x03E17184 LDR V8, [X31], #0x30
	0x03E17188 RET
	0x03E1718C LDR X9, [X9 + 0xC8]
	0x03E17190 ADD X9, X9, X10, 0x3, LSL
	0x03E17194 LDUR X9, [X9 - 0x8]
	0x03E17198 CMP X9, X8
	0x03E1719C CSEL X19, X19, X31, EQ
	0x03E171A0 CBZ X20, 0x3E17174
	0x03E171A4 CBZ X19, 0x3E17174
	0x03E171A8 LDR V0, [X20 + 0x16C]
	0x03E171AC LDR V1, [X19 + 0x16C]
	0x03E171B0 ADRP X21, 0x5C2000
	0x03E171B4 LDRB W8, [X21 + 0x5AA]
	0x03E171B8 FSUB S8, S0, S1
	0x03E171BC CBNZ W8, 0x3E171D4
	0x03E171C0 ADRP X0, 0x2E3000
	0x03E171C4 LDR X0, [X0 + 0x4B8]
	0x03E171C8 BL 0x1C16CF4
	0x03E171CC MOVZ W8, 0x1
	0x03E171D0 STRB W8, [X21 + 0x5AA]
	0x03E171D4 ADRP X8, 0x2E3000
	0x03E171D8 LDR X8, [X8 + 0x4B8]
	0x03E171DC ADRP X9, 0xFFFFFFFFFCCD3000
	0x03E171E0 LDR V0, [X9 + 0x240]
	0x03E171E4 FABS S2, S8
	0x03E171E8 LDR X8, [X8]
	0x03E171EC FMOV S3, 8
	0x03E171F0 FMUL S0, S2, S0
	0x03E171F4 LDR X8, [X8 + 0xB8]
	0x03E171F8 LDR V1, [X8]
	0x03E171FC FMUL S1, S1, S3
	0x03E17200 FCMP S0, S1
	0x03E17204 FCSEL S0, S0, S1, GT
	0x03E17208 FCMP S2, S0
	0x03E1720C B.PL 0x3E17230
	0x03E17210 LDR W1, [X19 + 0x168]
	0x03E17214 ADD X0, X20, 0x168
	0x03E17218 LDP X20, X19, [X31 + 0x20]
	0x03E1721C LDP X22, X21, [X31 + 0x10]
	0x03E17220 LDR X30, [X31 + 0x8]
	0x03E17224 MOV X2, X31
	0x03E17228 LDR V8, [X31], #0x30
	0x03E1722C B 0x337B634
	0x03E17230 FCMP S8, 0x0
	0x03E17234 MOVN W8, 0x0
	0x03E17238 CSINC W0, W8, W31, MI
	0x03E1723C B 0x3E17178
	0x03E17240 STP X30, X25, [X31 - 0x40]!
	0x03E17244 STP X24, X23, [X31 + 0x10]
	0x03E17248 STP X22, X21, [X31 + 0x20]
	0x03E1724C STP X20, X19, [X31 + 0x30]
	0x03E17250 ADRP X23, 0x5D1000
	0x03E17254 ADRP X21, 0x353000
	0x03E17258 ADRP X19, 0x353000
	0x03E1725C ADRP X20, 0x353000
	0x03E17260 ADRP X22, 0x308000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x5D2000
	008 Move X21, 0x305000
	009 Move W8, [X20+951]
	010 Move X21, [X21+2352]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x2DD000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x2DD000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x305000
	023 Move X0, [X0+2352]
	024 Call 0x1C17CF4
	025 Move X0, 0x304000
	026 Move X0, [X0+1448]
	027 Call 0x1C17CF4
	028 Move X0, 0x354000
	029 Move X0, [X0+1696]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+951], W8
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X23, 0x5D2000
	039 Move W8, [X23+1102]
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, 0x305000
	043 Move X0, [X0+2352]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X23+1102], W8
	047 Move X0, [X21]
	048 Move X22, 0x2DD000
	049 Move W8, [X0+224]
	050 Move X22, [X22+1432]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X21]
	055 Move X8, [X22]
	056 Move X9, [X0+184]
	057 Move W10, [X8+224]
	058 Move X20, [X9+56]
	059 Compare W10, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Move X0, X20
	064 Move X1, X31
	065 Move X2, X31
	066 Call Object.op_Inequality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {138}
	071 Move X0, [X21]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move W8, [X23+1102]
	077 Compare W8, 0
	078 JumpIfNotEqual {84}
	079 Move X0, 0x305000
	080 Move X0, [X0+2352]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X23+1102], W8
	084 Move X0, [X21]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {90}
	088 Call 0x1C17DFC
	089 Move X0, [X21]
	090 Move X8, [X22]
	091 Move X9, [X0+184]
	092 Move W10, [X8+224]
	093 Move X20, [X9+56]
	094 Compare W10, 0
	095 JumpIfNotEqual {98}
	096 Move X0, X8
	097 Call 0x1C17DFC
	098 Move X0, X20
	099 Move X1, X19
	100 Move X2, X31
	101 Call Object.op_Inequality, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {138}
	106 Compare X19, 0
	107 JumpIfEqual {167}
	108 Move X0, X19
	109 Move X1, X31
	110 Call "il2cpp_vm_object_is_inst", X0
	111 Compare X0, 0
	112 JumpIfEqual {167}
	113 Move X8, [X0]
	114 Move X9, [X8+424]
	115 Move X1, [X8+432]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X8, 0x304000
	118 Move X8, [X8+1448]
	119 Move X2, X31
	120 Move X1, [X8]
	121 Call String.op_Equality, X0, X1
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {138}
	126 Move X8, 0x2DD000
	127 Move X8, [X8+2600]
	128 Move X0, [X8]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X8, 0x354000
	134 Move X8, [X8+1696]
	135 Move X1, X31
	136 Move X0, [X8]
	137 Call Debug.LogWarning, X0
	138 Move X0, [X21]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X20, 0x5D2000
	144 Move W8, [X20+1103]
	145 Compare W8, 0
	146 JumpIfNotEqual {152}
	147 Move X0, 0x305000
	148 Move X0, [X0+2352]
	149 Call 0x1C17CF4
	150 Move W8, 1
	151 Move [X20+1103], W8
	152 Move X0, [X21]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {158}
	156 Call 0x1C17DFC
	157 Move X0, [X21]
	158 Move X8, [X0+184]
	159 Move X22, [X31+16]
	160 Move X21, [X31+24]
	161 Move [X8+56], X19
	162 Move X20, [X31+32]
	163 Move X19, [X31+40]
	164 Move X30, [X31+48]
	165 Move X23, [X31+56]
	166 Return 
	167 Call 0x1C17F20

Method: System.Void UnregisterEventSystem(UnityEngine.Object eventSystem)

Disassembly:
	0x03E17264 LDRB W8, [X23 + 0x3C8]
	0x03E17268 LDR X21, [X21 + 0x6F8]
	0x03E1726C LDR X19, [X19 + 0x700]
	0x03E17270 LDR X20, [X20 + 0x708]
	0x03E17274 LDR X22, [X22 + 0x5C8]
	0x03E17278 TBNZ X8, 0x0, 0x3E1732C
	0x03E1727C ADRP X0, 0x2DD000
	0x03E17280 LDR X0, [X0 + 0xE70]
	0x03E17284 BL 0x1C16CF4
	0x03E17288 ADRP X0, 0x353000
	0x03E1728C LDR X0, [X0 + 0x710]
	0x03E17290 BL 0x1C16CF4
	0x03E17294 ADRP X0, 0x353000
	0x03E17298 LDR X0, [X0 + 0x718]
	0x03E1729C BL 0x1C16CF4
	0x03E172A0 ADRP X0, 0x308000
	0x03E172A4 LDR X0, [X0 + 0x5C8]
	0x03E172A8 BL 0x1C16CF4
	0x03E172AC ADRP X0, 0x353000
	0x03E172B0 LDR X0, [X0 + 0x700]
	0x03E172B4 BL 0x1C16CF4
	0x03E172B8 ADRP X0, 0x353000
	0x03E172BC LDR X0, [X0 + 0x6F8]
	0x03E172C0 BL 0x1C16CF4
	0x03E172C4 ADRP X0, 0x353000
	0x03E172C8 LDR X0, [X0 + 0x720]
	0x03E172CC BL 0x1C16CF4
	0x03E172D0 ADRP X0, 0x353000
	0x03E172D4 LDR X0, [X0 + 0x728]
	0x03E172D8 BL 0x1C16CF4
	0x03E172DC ADRP X0, 0x353000
	0x03E172E0 LDR X0, [X0 + 0x730]
	0x03E172E4 BL 0x1C16CF4
	0x03E172E8 ADRP X0, 0x353000
	0x03E172EC LDR X0, [X0 + 0x738]
	0x03E172F0 BL 0x1C16CF4
	0x03E172F4 ADRP X0, 0x353000
	0x03E172F8 LDR X0, [X0 + 0x740]
	0x03E172FC BL 0x1C16CF4
	0x03E17300 ADRP X0, 0x353000
	0x03E17304 LDR X0, [X0 + 0x748]
	0x03E17308 BL 0x1C16CF4
	0x03E1730C ADRP X0, 0x353000
	0x03E17310 LDR X0, [X0 + 0x750]
	0x03E17314 BL 0x1C16CF4
	0x03E17318 ADRP X0, 0x353000
	0x03E1731C LDR X0, [X0 + 0x708]
	0x03E17320 BL 0x1C16CF4
	0x03E17324 MOVZ W8, 0x1
	0x03E17328 STRB W8, [X23 + 0x3C8]
	0x03E1732C LDR X0, [X21]
	0x03E17330 ADRP X23, 0x353000
	0x03E17334 LDR X23, [X23 + 0x750]
	0x03E17338 BL 0x1C16F10
	0x03E1733C LDR X1, [X19]
	0x03E17340 MOV X19, X0
	0x03E17344 BL 0x301B7C4
	0x03E17348 LDR X8, [X20]
	0x03E1734C LDR X8, [X8 + 0xB8]
	0x03E17350 STR X19, [X8]
	0x03E17354 LDR X0, [X22]
	0x03E17358 LDR W8, [X0 + 0xE0]
	0x03E1735C CBNZ W8, 0x3E17368
	0x03E17360 BL 0x1C16DFC
	0x03E17364 LDR X0, [X22]
	0x03E17368 LDR X8, [X23]
	0x03E1736C LDR X9, [X0 + 0xB8]
	0x03E17370 ADRP X24, 0x2DD000
	0x03E17374 ADRP X21, 0x353000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5D2000
	006 Move X21, 0x305000
	007 Move W8, [X20+952]
	008 Move X21, [X21+2352]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2DD000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x305000
	018 Move X0, [X0+2352]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+952], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X20, 0x5D2000
	028 Move W8, [X20+1102]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x305000
	032 Move X0, [X0+2352]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+1102], W8
	036 Move X0, [X21]
	037 Move X20, 0x2DD000
	038 Move W8, [X0+224]
	039 Move X20, [X20+1432]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X21]
	044 Move X8, [X20]
	045 Move X9, [X0+184]
	046 Move W10, [X8+224]
	047 Move X20, [X9+56]
	048 Compare W10, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X19
	054 Move X2, X31
	055 Call Object.op_Equality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {82}
	060 Move X0, [X21]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X19, 0x5D2000
	066 Move W8, [X19+1103]
	067 Compare W8, 0
	068 JumpIfNotEqual {74}
	069 Move X0, 0x305000
	070 Move X0, [X0+2352]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X19+1103], W8
	074 Move X0, [X21]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X21]
	080 Move X8, [X0+184]
	081 Move [X8+56], X31
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 Return 

Method: UnityEngine.UIElements.DefaultEventSystem get_defaultEventSystem()

Disassembly:
	0x03E17378 LDR W10, [X8 + 0xE0]
	0x03E1737C LDR X19, [X9 + 0x10]
	0x03E17380 LDR X24, [X24 + 0xE70]
	0x03E17384 LDR X21, [X21 + 0x720]
	0x03E17388 CBNZ W10, 0x3E17398
	0x03E1738C MOV X0, X8
	0x03E17390 BL 0x1C16DFC
	0x03E17394 LDR X8, [X23]
	0x03E17398 LDR X8, [X8 + 0xB8]
	0x03E1739C LDR X0, [X24]
	0x03E173A0 LDR X20, [X8]
	0x03E173A4 BL 0x1C16F10
	0x03E173A8 LDR X2, [X21]
	0x03E173AC MOV X1, X20
	0x03E173B0 MOV X3, X31
	0x03E173B4 MOV X21, X0
	0x03E173B8 BL 0x3314368
	0x03E173BC MOV X0, X19
	0x03E173C0 MOV X1, X21
	0x03E173C4 MOV X2, X31
	0x03E173C8 BL 0x33C0DE4
	0x03E173CC LDR X1, [X24]
	0x03E173D0 CBZ X0, 0x3E173FC
	0x03E173D4 LDR X8, [X0]
	0x03E173D8 CMP X8, X1
	0x03E173DC B.NE 0x3E176B0
	0x03E173E0 LDR X8, [X22]
	0x03E173E4 LDR X8, [X8 + 0xB8]
	0x03E173E8 STR X0, [X8 + 0x10]
	0x03E173EC LDR X9, [X0]
	0x03E173F0 CMP X9, X1
	0x03E173F4 B.EQ 0x3E17408
	0x03E173F8 B 0x3E176B0
	0x03E173FC LDR X8, [X22]
	0x03E17400 LDR X8, [X8 + 0xB8]
	0x03E17404 STR X0, [X8 + 0x10]
	0x03E17408 LDR X9, [X23]
	0x03E1740C ADRP X21, 0x353000
	0x03E17410 LDR X19, [X8 + 0x18]
	0x03E17414 MOV X0, X1
	0x03E17418 LDR X9, [X9 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x5D2000
	005 Move X20, 0x305000
	006 Move W8, [X19+953]
	007 Move X20, [X20+2352]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x351000
	013 Move X0, [X0+2744]
	014 Call 0x1C17CF4
	015 Move X0, 0x305000
	016 Move X0, [X0+2352]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+953], W8
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X20]
	026 Move X8, [X0+184]
	027 Move X19, [X8+64]
	028 Compare X19, 0
	029 JumpIfNotEqual {45}
	030 Move X8, 0x351000
	031 Move X8, [X8+2744]
	032 Move X0, [X8]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X19, X0
	036 Call DefaultEventSystem..ctor, X0
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X20]
	043 Move X8, [X0+184]
	044 Move [X8+64], X19
	045 Move X0, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Return X0

Method: System.Void UpdateRuntimePanels()

Disassembly:
	0x03E1741C LDR X20, [X9]
	0x03E17420 LDR X21, [X21 + 0x728]
	0x03E17424 BL 0x1C16F10
	0x03E17428 LDR X2, [X21]
	0x03E1742C MOV X1, X20
	0x03E17430 MOV X3, X31
	0x03E17434 MOV X21, X0
	0x03E17438 BL 0x3314368
	0x03E1743C MOV X0, X19
	0x03E17440 MOV X1, X21
	0x03E17444 MOV X2, X31
	0x03E17448 BL 0x33C0DE4
	0x03E1744C CBZ X0, 0x3E1747C
	0x03E17450 LDR X1, [X24]
	0x03E17454 LDR X8, [X0]
	0x03E17458 CMP X8, X1
	0x03E1745C B.NE 0x3E176B0
	0x03E17460 LDR X8, [X22]
	0x03E17464 LDR X8, [X8 + 0xB8]
	0x03E17468 STR X0, [X8 + 0x18]
	0x03E1746C LDR X9, [X0]
	0x03E17470 CMP X9, X1
	0x03E17474 B.EQ 0x3E17488
	0x03E17478 B 0x3E176B0
	0x03E1747C LDR X8, [X22]
	0x03E17480 LDR X8, [X8 + 0xB8]
	0x03E17484 STR X0, [X8 + 0x18]
	0x03E17488 LDR X9, [X23]
	0x03E1748C ADRP X25, 0x353000
	0x03E17490 ADRP X21, 0x353000
	0x03E17494 LDR X9, [X9 + 0xB8]
	0x03E17498 LDR X25, [X25 + 0x718]
	0x03E1749C LDR X19, [X8 + 0x20]
	0x03E174A0 LDR X20, [X9]
	0x03E174A4 LDR X0, [X25]
	0x03E174A8 LDR X21, [X21 + 0x730]
	0x03E174AC BL 0x1C16F10
	0x03E174B0 LDR X2, [X21]
	0x03E174B4 MOV X1, X20
	0x03E174B8 MOV X3, X31
	0x03E174BC MOV X21, X0
	0x03E174C0 BL 0x2D3855C
	0x03E174C4 MOV X0, X19
	0x03E174C8 MOV X1, X21
	0x03E174CC MOV X2, X31
	0x03E174D0 BL 0x33C0DE4
	0x03E174D4 CBZ X0, 0x3E17518
	0x03E174D8 LDR X20, [X25]
	0x03E174DC MOV X19, X0
	0x03E174E0 MOV X1, X20
	0x03E174E4 BL 0x1C16E00
	0x03E174E8 CBZ X0, 0x3E176D4
	0x03E174EC LDR X8, [X22]
	0x03E174F0 LDR X8, [X8 + 0xB8]
	0x03E174F4 STR X0, [X8 + 0x20]
	0x03E174F8 LDR X20, [X25]
	0x03E174FC MOV X0, X19
	0x03E17500 MOV X1, X20
	0x03E17504 BL 0x1C16E00
	0x03E17508 CBZ X0, 0x3E176D4
	0x03E1750C LDR X8, [X22]
	0x03E17510 LDR X8, [X8 + 0xB8]
	0x03E17514 B 0x3E17524
	0x03E17518 LDR X8, [X22]
	0x03E1751C LDR X8, [X8 + 0xB8]
	0x03E17520 STR X31, [X8 + 0x20]
	0x03E17524 LDR X9, [X23]
	0x03E17528 LDR X0, [X24]
	0x03E1752C ADRP X21, 0x353000
	0x03E17530 LDR X19, [X8 + 0x28]
	0x03E17534 LDR X9, [X9 + 0xB8]
	0x03E17538 LDR X20, [X9]
	0x03E1753C LDR X21, [X21 + 0x738]
	0x03E17540 BL 0x1C16F10
	0x03E17544 LDR X2, [X21]
	0x03E17548 MOV X1, X20
	0x03E1754C MOV X3, X31
	0x03E17550 MOV X21, X0
	0x03E17554 BL 0x3314368
	0x03E17558 MOV X0, X19
	0x03E1755C MOV X1, X21
	0x03E17560 MOV X2, X31
	0x03E17564 BL 0x33C0DE4
	0x03E17568 CBZ X0, 0x3E17598
	0x03E1756C LDR X1, [X24]
	0x03E17570 LDR X8, [X0]
	0x03E17574 CMP X8, X1
	0x03E17578 B.NE 0x3E176B0
	0x03E1757C LDR X8, [X22]
	0x03E17580 LDR X8, [X8 + 0xB8]
	0x03E17584 STR X0, [X8 + 0x28]
	0x03E17588 LDR X9, [X0]
	0x03E1758C CMP X9, X1
	0x03E17590 B.EQ 0x3E175A4
	0x03E17594 B 0x3E176B0
	0x03E17598 LDR X8, [X22]
	0x03E1759C LDR X8, [X8 + 0xB8]
	0x03E175A0 STR X0, [X8 + 0x28]
	0x03E175A4 LDR X9, [X23]
	0x03E175A8 ADRP X25, 0x353000
	0x03E175AC ADRP X21, 0x353000
	0x03E175B0 LDR X9, [X9 + 0xB8]
	0x03E175B4 LDR X25, [X25 + 0x710]
	0x03E175B8 LDR X19, [X8 + 0x30]
	0x03E175BC LDR X20, [X9]
	0x03E175C0 LDR X0, [X25]
	0x03E175C4 LDR X21, [X21 + 0x740]
	0x03E175C8 BL 0x1C16F10
	0x03E175CC LDR X2, [X21]
	0x03E175D0 MOV X1, X20
	0x03E175D4 MOV X3, X31
	0x03E175D8 MOV X21, X0
	0x03E175DC BL 0x2D2F428
	0x03E175E0 MOV X0, X19
	0x03E175E4 MOV X1, X21
	0x03E175E8 MOV X2, X31
	0x03E175EC BL 0x33C0DE4
	0x03E175F0 CBZ X0, 0x3E17634
	0x03E175F4 LDR X20, [X25]
	0x03E175F8 MOV X19, X0
	0x03E175FC MOV X1, X20
	0x03E17600 BL 0x1C16E00
	0x03E17604 CBZ X0, 0x3E176D4
	0x03E17608 LDR X8, [X22]
	0x03E1760C LDR X8, [X8 + 0xB8]
	0x03E17610 STR X0, [X8 + 0x30]
	0x03E17614 LDR X20, [X25]
	0x03E17618 MOV X0, X19
	0x03E1761C MOV X1, X20
	0x03E17620 BL 0x1C16E00
	0x03E17624 CBZ X0, 0x3E176D4
	0x03E17628 LDR X8, [X22]
	0x03E1762C LDR X8, [X8 + 0xB8]
	0x03E17630 B 0x3E17640
	0x03E17634 LDR X8, [X22]
	0x03E17638 LDR X8, [X8 + 0xB8]
	0x03E1763C STR X31, [X8 + 0x30]
	0x03E17640 LDR X9, [X23]
	0x03E17644 LDR X0, [X24]
	0x03E17648 ADRP X21, 0x353000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+88], X23
	004 Move [X31+96], X22
	005 Move [X31+104], X21
	006 Move [X31+112], X20
	007 Move [X31+120], X19
	008 Move X20, 0x5D2000
	009 Move X19, 0x305000
	010 Move W8, [X20+954]
	011 Move X19, [X19+2352]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x2DD000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move X0, 0x305000
	020 Move X0, [X0+2328]
	021 Call 0x1C17CF4
	022 Move X0, 0x354000
	023 Move X0, [X0+1664]
	024 Call 0x1C17CF4
	025 Move X0, 0x354000
	026 Move X0, [X0+1672]
	027 Call 0x1C17CF4
	028 Move X0, 0x354000
	029 Move X0, [X0+1680]
	030 Call 0x1C17CF4
	031 Move X0, 0x354000
	032 Move X0, [X0+1688]
	033 Call 0x1C17CF4
	034 Move X0, 0x305000
	035 Move X0, [X0+2352]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+954], W8
	039 Move X0, [X19]
	040 Move [X31+48], X31
	041 Move [X31+56], X31
	042 Move [X31+64], X31
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Call UIElementsRuntimeUtility.RemoveUnusedPanels
	048 Call UIElementsRuntimeUtility.GetSortedPlayerPanels
	049 Compare X0, 0
	050 JumpIfEqual {135}
	051 Move X8, 0x354000
	052 Move X8, [X8+1688]
	053 Move X22, 0x354000
	054 Move X22, [X22+1672]
	055 Move X23, 0x305000
	056 Move X1, [X8]
	057 Move X20, 0x2DD000
	058 Move X21, 0x354000
	059 Move X23, [X23+2328]
	060 Move X20, [X20+2416]
	061 Move X21, [X21+1664]
	062 Add X8, X31, 24
	063 Call List`1<Object>.GetEnumerator, X0
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 Move X8, [X31+40]
	066 Move [X31+3], V0
	067 Move [X31+64], X8
	068 Move X1, [X22]
	069 Add X0, X31, 48
	070 Call Enumerator<Object>.MoveNext, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {90}
	075 Move X0, [X31+64]
	076 Compare X0, 0
	077 JumpIfEqual {134}
	078 Move X8, [X0]
	079 Move X1, [X23]
	080 Move W10, [X8+304]
	081 Move W9, [X1+304]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X10, [X8+200]
	084 Add X9, X10, X9
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X1, [X8+1168]
	088 Move X9, [X8+1160]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X1, [X21]
	091 Add X0, X31, 48
	092 Call Enumerator<Object>.Dispose, X0
	093 Move X0, [X20]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X31
	099 Call Application.get_isPlaying
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {125}
	104 Move X0, [X19]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Call UIElementsRuntimeUtility.get_useDefaultEventSystem
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {125}
	114 Move X0, [X19]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Call UIElementsRuntimeUtility.get_defaultEventSystem
	120 Compare X0, 0
	121 JumpIfEqual {135}
	122 Move W1, 1
	123 Move X2, X31
	124 Call DefaultEventSystem.Update, X0, X1
	125 Move X20, [X31+112]
	126 Move X19, [X31+120]
	127 Move X22, [X31+96]
	128 Move X21, [X31+104]
	129 Move X30, [X31+80]
	130 Move X23, [X31+88]
	131 Add X31, X31, 128
	132 Return 
	133 Call 0x1C181E0
	134 Call 0x1C17F20
	135 Call 0x1C17F20
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Call 0x3EB2AD0
	138 Move X8, [X0]
	139 Move [X31+16], X8
	140 Call 0x3EB2AE0
	141 Move X1, [X21]
	142 Add X0, X31, 48
	143 Call Enumerator<Object>.Dispose, X0
	144 Move X0, [X31+16]
	145 Compare X0, 0
	146 JumpIfEqual {93}
	147 Call 0x1C17F18
	148 Move [X31+8], X0
	149 Move [X31+16], X31
	150 Move [X31+8], X0
	151 Move X1, [X21]
	152 Add X0, X31, 48
	153 Call Enumerator<Object>.Dispose, X0
	154 Move X8, [X31+16]
	155 Compare X8, 0
	156 JumpIfNotEqual {159}
	157 Move X0, [X31+8]
	158 Call 0x1D2D690
	159 Move X0, [X31+16]
	160 Call 0x1C17F18
	161 Call 0x1991590

Method: System.Void MarkPotentiallyEmpty(UnityEngine.UIElements.PanelSettings settings)

Disassembly:
	0x03E17850 CBZ X9, 0x3E17874
	0x03E17854 LDR X10, [X8 + 0xB0]
	0x03E17858 ADD X10, X10, 0x8
	0x03E1785C LDUR X11, [X10 - 0x8]
	0x03E17860 CMP X11, X1
	0x03E17864 B.EQ 0x3E17884
	0x03E17868 SUBS X9, X9, 0x1
	0x03E1786C ADD X10, X10, 0x10
	0x03E17870 B.NE 0x3E1785C
	0x03E17874 MOV X0, X19
	0x03E17878 MOV W2, W31
	0x03E1787C BL 0x1C5C788
	0x03E17880 B 0x3E17890
	0x03E17884 LDRSW X9, [X10]
	0x03E17888 ADD X8, X8, X9, 0x4, LSL
	0x03E1788C ADD X0, X8, 0x138
	0x03E17890 LDP X8, X1, [X0]
	0x03E17894 MOV X0, X19
	0x03E17898 BLR X8
	0x03E1789C TBZ X0, 0x0, 0x3E1782C
	0x03E178A0 LDR X1, [X20]
	0x03E178A4 ADD X0, X31, 0x8
	0x03E178A8 BL 0x2BC434C
	0x03E178AC LDP X20, X19, [X31 + 0x40]
	0x03E178B0 LDP X22, X21, [X31 + 0x30]
	0x03E178B4 LDR X30, [X31 + 0x20]
	0x03E178B8 ADD X31, X31, 0x50
	0x03E178BC RET
	0x03E178C0 MOV X21, X20
	0x03E178C4 BL 0x1C16F20
	0x03E178C8 BL 0x1C16F20
	0x03E178CC B 0x3E178D8
	0x03E178D0 B 0x3E178D4
	0x03E178D4 MOV X21, X20
	0x03E178D8 MOV X19, X0
	0x03E178DC CMP W1, 0x1
	0x03E178E0 B.NE 0x3E1790C
	0x03E178E4 MOV X0, X19
	0x03E178E8 BL 0x3EB1AD0
	0x03E178EC LDR X20, [X0]
	0x03E178F0 BL 0x3EB1AE0
	0x03E178F4 LDR X1, [X21]
	0x03E178F8 ADD X0, X31, 0x8
	0x03E178FC BL 0x2BC434C
	0x03E17900 CBZ X20, 0x3E178AC
	0x03E17904 MOV X0, X20
	0x03E17908 BL 0x1C16F18
	0x03E1790C MOV X20, X31
	0x03E17910 B 0x3E17918
	0x03E17914 MOV X19, X0
	0x03E17918 LDR X1, [X21]
	0x03E1791C ADD X0, X31, 0x8
	0x03E17920 BL 0x2BC434C
	0x03E17924 CBNZ X20, 0x3E17930
	0x03E17928 MOV X0, X19
	0x03E1792C BL 0x1D2C690
	0x03E17930 MOV X0, X20
	0x03E17934 BL 0x1C16F18
	0x03E17938 BL 0x1990590
	0x03E1793C SUB X31, X31, 0x50
	0x03E17940 STR X30, [X31 + 0x20]
	0x03E17944 STP X22, X21, [X31 + 0x30]
	0x03E17948 STP X20, X19, [X31 + 0x40]
	0x03E1794C ADRP X20, 0x5D1000
	0x03E17950 ADRP X19, 0x353000
	0x03E17954 LDRB W8, [X20 + 0x3CB]
	0x03E17958 LDR X19, [X19 + 0x708]
	0x03E1795C TBNZ X8, 0x0, 0x3E179B0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5D2000
	006 Move X20, 0x305000
	007 Move W8, [X21+955]
	008 Move X20, [X20+2352]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x354000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move X0, 0x354000
	018 Move X0, [X0+1752]
	019 Call 0x1C17CF4
	020 Move X0, 0x305000
	021 Move X0, [X0+2352]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+955], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X20]
	031 Move X8, [X0+184]
	032 Move X0, [X8+72]
	033 Compare X0, 0
	034 JumpIfEqual {85}
	035 Move X8, 0x354000
	036 Move X8, [X8+1752]
	037 Move X1, X19
	038 Move X2, [X8]
	039 Call List`1<Object>.Contains, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {70}
	044 Move X0, [X20]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X20]
	050 Move X8, [X0+184]
	051 Move X0, [X8+72]
	052 Compare X0, 0
	053 JumpIfEqual {85}
	054 Move X9, 0x354000
	055 Move X9, [X9+1744]
	056 Move W10, [X0+28]
	057 Move X8, [X0+16]
	058 Move X9, [X9]
	059 Add W10, W10, 1
	060 Move [X0+28], W10
	061 Compare X8, 0
	062 JumpIfEqual {85}
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Move W11, [X8+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add W9, W10, 1
	067 Add X8, X8, X10
	068 Move [X0+24], W9
	069 Move [X8+32], X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Return 
	075 Move X8, [X9+32]
	076 Move X1, X19
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X8, [X8+192]
	080 Move X2, [X8+112]
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 Call List`1<Object>.AddWithResize, X0, X1
	084 Return 
	085 Call 0x1C17F20

Method: System.Void RemoveUnusedPanels()

Disassembly:
	0x03E1764C LDR X19, [X8 + 0x38]
	0x03E17650 LDR X9, [X9 + 0xB8]
	0x03E17654 LDR X20, [X9]
	0x03E17658 LDR X21, [X21 + 0x748]
	0x03E1765C BL 0x1C16F10
	0x03E17660 LDR X2, [X21]
	0x03E17664 MOV X1, X20
	0x03E17668 MOV X3, X31
	0x03E1766C MOV X21, X0
	0x03E17670 BL 0x3314368
	0x03E17674 MOV X0, X19
	0x03E17678 MOV X1, X21
	0x03E1767C MOV X2, X31
	0x03E17680 BL 0x33C0DE4
	0x03E17684 CBZ X0, 0x3E176B4
	0x03E17688 LDR X1, [X24]
	0x03E1768C LDR X8, [X0]
	0x03E17690 CMP X8, X1
	0x03E17694 B.NE 0x3E176B0
	0x03E17698 LDR X8, [X22]
	0x03E1769C LDR X8, [X8 + 0xB8]
	0x03E176A0 STR X0, [X8 + 0x38]
	0x03E176A4 LDR X8, [X0]
	0x03E176A8 CMP X8, X1
	0x03E176AC B.EQ 0x3E176C0
	0x03E176B0 BL 0x1C171E0
	0x03E176B4 LDR X8, [X22]
	0x03E176B8 LDR X8, [X8 + 0xB8]
	0x03E176BC STR X0, [X8 + 0x38]
	0x03E176C0 LDP X20, X19, [X31 + 0x30]
	0x03E176C4 LDP X22, X21, [X31 + 0x20]
	0x03E176C8 LDP X24, X23, [X31 + 0x10]
	0x03E176CC LDP X30, X25, [X31], #0x40
	0x03E176D0 RET
	0x03E176D4 MOV X0, X19
	0x03E176D8 MOV X1, X20
	0x03E176DC BL 0x1C171E0
	0x03E176E0 STP X30, X21, [X31 - 0x20]!
	0x03E176E4 STP X20, X19, [X31 + 0x10]
	0x03E176E8 ADRP X21, 0x5D1000
	0x03E176EC ADRP X20, 0x353000
	0x03E176F0 LDRB W8, [X21 + 0x3C9]
	0x03E176F4 LDR X20, [X20 + 0x708]
	0x03E176F8 MOV X19, X0
	0x03E176FC TBNZ X8, 0x0, 0x3E17720
	0x03E17700 ADRP X0, 0x353000
	0x03E17704 LDR X0, [X0 + 0x758]
	0x03E17708 BL 0x1C16CF4
	0x03E1770C ADRP X0, 0x353000
	0x03E17710 LDR X0, [X0 + 0x708]
	0x03E17714 BL 0x1C16CF4
	0x03E17718 MOVZ W8, 0x1
	0x03E1771C STRB W8, [X21 + 0x3C9]
	0x03E17720 LDR X0, [X20]
	0x03E17724 LDR W8, [X0 + 0xE0]
	0x03E17728 CBNZ W8, 0x3E17734
	0x03E1772C BL 0x1C16DFC
	0x03E17730 LDR X0, [X20]
	0x03E17734 LDR X8, [X0 + 0xB8]
	0x03E17738 LDR X0, [X8]
	0x03E1773C CBZ X0, 0x3E17760
	0x03E17740 ADRP X8, 0x353000
	0x03E17744 LDR X8, [X8 + 0x758]
	0x03E17748 MOV X2, X19
	0x03E1774C LDP X20, X19, [X31 + 0x10]
	0x03E17750 MOV W1, W31
	0x03E17754 LDR X3, [X8]
	0x03E17758 LDP X30, X21, [X31], #0x20
	0x03E1775C B 0x301CEEC
	0x03E17760 BL 0x1C16F20
	0x03E17764 SUB X31, X31, 0x50
	0x03E17768 STR X30, [X31 + 0x20]
	0x03E1776C STP X22, X21, [X31 + 0x30]
	0x03E17770 STP X20, X19, [X31 + 0x40]
	0x03E17774 ADRP X20, 0x5D1000
	0x03E17778 ADRP X19, 0x353000
	0x03E1777C LDRB W8, [X20 + 0x3CA]
	0x03E17780 LDR X19, [X19 + 0x708]
	0x03E17784 TBNZ X8, 0x0, 0x3E177D8
	0x03E17788 ADRP X0, 0x353000
	0x03E1778C LDR X0, [X0 + 0x760]
	0x03E17790 BL 0x1C16CF4
	0x03E17794 ADRP X0, 0x353000
	0x03E17798 LDR X0, [X0 + 0x768]
	0x03E1779C BL 0x1C16CF4
	0x03E177A0 ADRP X0, 0x353000
	0x03E177A4 LDR X0, [X0 + 0x770]
	0x03E177A8 BL 0x1C16CF4
	0x03E177AC ADRP X0, 0x353000
	0x03E177B0 LDR X0, [X0 + 0x778]
	0x03E177B4 BL 0x1C16CF4
	0x03E177B8 ADRP X0, 0x353000
	0x03E177BC LDR X0, [X0 + 0x780]
	0x03E177C0 BL 0x1C16CF4
	0x03E177C4 ADRP X0, 0x353000
	0x03E177C8 LDR X0, [X0 + 0x708]
	0x03E177CC BL 0x1C16CF4
	0x03E177D0 MOVZ W8, 0x1
	0x03E177D4 STRB W8, [X20 + 0x3CA]
	0x03E177D8 LDR X0, [X19]
	0x03E177DC STP X31, X31, [X31 + 0x8]
	0x03E177E0 STR X31, [X31 + 0x18]
	0x03E177E4 LDR W8, [X0 + 0xE0]
	0x03E177E8 CBNZ W8, 0x3E177F4
	0x03E177EC BL 0x1C16DFC
	0x03E177F0 LDR X0, [X19]
	0x03E177F4 LDR X8, [X0 + 0xB8]
	0x03E177F8 LDR X0, [X8]
	0x03E177FC CBZ X0, 0x3E178C8
	0x03E17800 ADRP X8, 0x353000
	0x03E17804 LDR X8, [X8 + 0x780]
	0x03E17808 ADRP X21, 0x353000
	0x03E1780C ADRP X22, 0x353000
	0x03E17810 ADRP X20, 0x353000
	0x03E17814 LDR X1, [X8]
	0x03E17818 LDR X21, [X21 + 0x768]
	0x03E1781C LDR X22, [X22 + 0x778]
	0x03E17820 LDR X20, [X20 + 0x760]
	0x03E17824 ADD X8, X31, 0x8
	0x03E17828 BL 0x301CB58
	0x03E1782C LDR X1, [X21]
	0x03E17830 ADD X0, X31, 0x8
	0x03E17834 BL 0x2BC4350
	0x03E17838 TBZ X0, 0x0, 0x3E178A0
	0x03E1783C LDR X19, [X31 + 0x18]
	0x03E17840 CBZ X19, 0x3E178C0
	0x03E17844 LDR X8, [X19]
	0x03E17848 LDR X1, [X22]
	0x03E1784C LDRH W9, [X8 + 0x12E]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X19, 0x5D2000
	007 Move X21, 0x305000
	008 Move W8, [X19+956]
	009 Move X21, [X21+2352]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {37}
	014 Move X0, 0x354000
	015 Move X0, [X0+1704]
	016 Call 0x1C17CF4
	017 Move X0, 0x354000
	018 Move X0, [X0+1712]
	019 Call 0x1C17CF4
	020 Move X0, 0x354000
	021 Move X0, [X0+1720]
	022 Call 0x1C17CF4
	023 Move X0, 0x354000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move X0, 0x354000
	027 Move X0, [X0+1736]
	028 Call 0x1C17CF4
	029 Move X0, 0x352000
	030 Move X0, [X0+3264]
	031 Call 0x1C17CF4
	032 Move X0, 0x305000
	033 Move X0, [X0+2352]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+956], W8
	037 Move X0, [X21]
	038 Move [X31+32], X31
	039 Move [X31+40], X31
	040 Move [X31+48], X31
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X21]
	046 Move X8, [X0+184]
	047 Move X0, [X8+72]
	048 Compare X0, 0
	049 JumpIfEqual {116}
	050 Move X8, 0x354000
	051 Move X8, [X8+1736]
	052 Move X20, 0x354000
	053 Move X19, 0x354000
	054 Move X1, [X8]
	055 Move X20, [X20+1712]
	056 Move X19, [X19+1704]
	057 Add X8, X31, 8
	058 Call List`1<Object>.GetEnumerator, X0
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move X8, [X31+24]
	061 Move [X31+2], V0
	062 Move [X31+48], X8
	063 Move X1, [X20]
	064 Add X0, X31, 32
	065 Call Enumerator<Object>.MoveNext, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {85}
	070 Move X8, [X31+48]
	071 Compare X8, 0
	072 JumpIfEqual {114}
	073 Move X9, [X8+112]
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X9, [X9+16]
	077 Compare X9, 0
	078 JumpIfEqual {115}
	079 Move W9, [X9+24]
	080 Compare W9, 0
	081 JumpIfNotEqual {63}
	082 Move X0, X8
	083 Move X1, X31
	084 Call PanelSettings.DisposePanel, X0
	085 Move X1, [X19]
	086 Add X0, X31, 32
	087 Call Enumerator<Object>.Dispose, X0
	088 Move X0, [X21]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {94}
	092 Call 0x1C17DFC
	093 Move X0, [X21]
	094 Move X8, [X0+184]
	095 Move X8, [X8+72]
	096 Compare X8, 0
	097 JumpIfEqual {116}
	098 Move W2, [X8+24]
	099 Move W9, [X8+28]
	100 Add W9, W9, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move [X8+24], W31
	103 Move [X8+28], W9
	104 Move X0, [X8+16]
	105 Move W1, W31
	106 Move X3, X31
	107 Call Array.Clear, X0, X1, X2
	108 Move X20, [X31+80]
	109 Move X19, [X31+88]
	110 Move X30, [X31+64]
	111 Move X21, [X31+72]
	112 Add X31, X31, 96
	113 Return 
	114 Call 0x1C17F20
	115 Call 0x1C17F20
	116 Call 0x1C17F20
	117 Move X19, X0
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X0, X19
	120 Call 0x3EB2AD0
	121 Move X20, [X0]
	122 Call 0x3EB2AE0
	123 Move X8, 0x354000
	124 Move X8, [X8+1704]
	125 Add X0, X31, 32
	126 Move X1, [X8]
	127 Call Enumerator<Object>.Dispose, X0
	128 Compare X20, 0
	129 JumpIfEqual {88}
	130 Move X0, X20
	131 Call 0x1C17F18
	132 Move X20, X31
	133 Move X19, X0
	134 Move X8, 0x354000
	135 Move X8, [X8+1704]
	136 Move X1, [X8]
	137 Add X0, X31, 32
	138 Call Enumerator<Object>.Dispose, X0
	139 Compare X20, 0
	140 JumpIfNotEqual {143}
	141 Move X0, X19
	142 Call 0x1D2D690
	143 Move X0, X20
	144 Call 0x1C17F18
	145 Call 0x1991590

Method: System.Void RegisterPlayerloopCallback()

Disassembly:
	0x03E16590 BL 0x3E15F90
	0x03E16594 TBZ X0, 0x0, 0x3E165BC
	0x03E16598 LDR X0, [X19]
	0x03E1659C LDR W8, [X0 + 0xE0]
	0x03E165A0 CBNZ W8, 0x3E165A8
	0x03E165A4 BL 0x1C16DFC
	0x03E165A8 BL 0x3E16378
	0x03E165AC CBZ X0, 0x3E165D8
	0x03E165B0 MOVZ W1, 0x1
	0x03E165B4 MOV X2, X31
	0x03E165B8 BL 0x3D8D778
	0x03E165BC LDP X20, X19, [X31 + 0x70]
	0x03E165C0 LDP X22, X21, [X31 + 0x60]
	0x03E165C4 LDP X30, X23, [X31 + 0x50]
	0x03E165C8 ADD X31, X31, 0x80
	0x03E165CC RET
	0x03E165D0 BL 0x1C171E0
	0x03E165D4 BL 0x1C16F20
	0x03E165D8 BL 0x1C16F20
	0x03E165DC B 0x3E165E8
	0x03E165E0 B 0x3E165E8
	0x03E165E4 B 0x3E165E8
	0x03E165E8 CMP W1, 0x1
	0x03E165EC B.NE 0x3E16618
	0x03E165F0 BL 0x3EB1AD0
	0x03E165F4 LDR X8, [X0]
	0x03E165F8 STR X8, [X31 + 0x10]
	0x03E165FC BL 0x3EB1AE0
	0x03E16600 LDR X1, [X21]
	0x03E16604 ADD X0, X31, 0x30
	0x03E16608 BL 0x2BC434C
	0x03E1660C LDR X0, [X31 + 0x10]
	0x03E16610 CBZ X0, 0x3E16564
	0x03E16614 BL 0x1C16F18
	0x03E16618 STP X0, X31, [X31 + 0x8]
	0x03E1661C B 0x3E16624
	0x03E16620 STR X0, [X31 + 0x8]
	0x03E16624 LDR X1, [X21]
	0x03E16628 ADD X0, X31, 0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5D3000
	007 Move X21, 0x2DF000
	008 Move X19, 0x355000
	009 Move X20, 0x353000
	010 Move W8, [X22+957]
	011 Move X21, [X21+3696]
	012 Move X19, [X19+1640]
	013 Move X20, [X20+3944]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2DF000
	019 Move X0, [X0+3696]
	020 Call 0x1C17CF4
	021 Move X0, 0x353000
	022 Move X0, [X0+3944]
	023 Call 0x1C17CF4
	024 Move X0, 0x355000
	025 Move X0, [X0+1640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+957], W8
	029 Move X0, X31
	030 Call UIElementsRuntimeUtilityNative.RegisterPlayerloopCallback
	031 Move X0, [X21]
	032 Call 0x1C17F10
	033 Move X2, [X19]
	034 Move X1, X31
	035 Move X3, X31
	036 Move X19, X0
	037 Call Action..ctor, X0, X1, X2
	038 Move X8, [X20]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X8, [X8+184]
	042 Move [X8+8], X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+48]
	046 Return 

Method: System.Void UnregisterPlayerloopCallback()

Disassembly:
	0x03E16800 ADD X0, X31, 0x20
	0x03E16804 LDR X1, [X8]
	0x03E16808 BL 0x2BC434C
	0x03E1680C CBZ X20, 0x3E16770
	0x03E16810 MOV X0, X20
	0x03E16814 BL 0x1C16F18
	0x03E16818 MOV X20, X31
	0x03E1681C B 0x3E16824
	0x03E16820 MOV X19, X0
	0x03E16824 ADRP X8, 0x354000
	0x03E16828 LDR X8, [X8 + 0x6A8]
	0x03E1682C LDR X1, [X8]
	0x03E16830 ADD X0, X31, 0x20
	0x03E16834 BL 0x2BC434C
	0x03E16838 CBNZ X20, 0x3E16844
	0x03E1683C MOV X0, X19
	0x03E16840 BL 0x1D2C690
	0x03E16844 MOV X0, X20
	0x03E16848 BL 0x1C16F18
	0x03E1684C BL 0x1990590

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D3000
	005 Move X19, 0x353000
	006 Move W8, [X20+958]
	007 Move X19, [X19+3944]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x353000
	013 Move X0, [X0+3944]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+958], W8
	017 Move X0, X31
	018 Call UIElementsRuntimeUtilityNative.UnregisterPlayerloopCallback
	019 Move X8, [X19]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X8, [X8+184]
	023 Move [X8+8], X31
	024 Move X30, [X31+32]
	025 Return 

Method: System.Void SetPanelOrderingDirty()

Disassembly:
	0x03E17960 ADRP X0, 0x353000
	0x03E17964 LDR X0, [X0 + 0x760]
	0x03E17968 BL 0x1C16CF4
	0x03E1796C ADRP X0, 0x353000
	0x03E17970 LDR X0, [X0 + 0x768]
	0x03E17974 BL 0x1C16CF4
	0x03E17978 ADRP X0, 0x353000
	0x03E1797C LDR X0, [X0 + 0x770]
	0x03E17980 BL 0x1C16CF4
	0x03E17984 ADRP X0, 0x353000
	0x03E17988 LDR X0, [X0 + 0x778]
	0x03E1798C BL 0x1C16CF4
	0x03E17990 ADRP X0, 0x353000
	0x03E17994 LDR X0, [X0 + 0x780]
	0x03E17998 BL 0x1C16CF4
	0x03E1799C ADRP X0, 0x353000
	0x03E179A0 LDR X0, [X0 + 0x708]
	0x03E179A4 BL 0x1C16CF4
	0x03E179A8 MOVZ W8, 0x1
	0x03E179AC STRB W8, [X20 + 0x3CB]
	0x03E179B0 LDR X0, [X19]
	0x03E179B4 STP X31, X31, [X31 + 0x8]
	0x03E179B8 STR X31, [X31 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D2000
	005 Move X19, 0x305000
	006 Move W8, [X20+959]
	007 Move X19, [X19+2352]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x305000
	013 Move X0, [X0+2352]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+959], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, 1
	027 Move [X8+24], W9
	028 Move X30, [X31+32]
	029 Return 

Method: System.Collections.Generic.List`1<UnityEngine.UIElements.Panel> GetSortedPlayerPanels()

Disassembly:
	0x03E16A6C LDR X0, [X22]
	0x03E16A70 LDR X8, [X0 + 0xB8]
	0x03E16A74 LDR X19, [X8 + 0x10]
	0x03E16A78 CBZ X19, 0x3E16C3C
	0x03E16A7C LDP W2, W8, [X19 + 0x18]
	0x03E16A80 ADRP X20, 0x306000
	0x03E16A84 LDR X20, [X20 + 0xE98]
	0x03E16A88 ADD W8, W8, 0x1
	0x03E16A8C CMP W2, 0x1
	0x03E16A90 STP W31, W8, [X19 + 0x18]
	0x03E16A94 B.LT 0x3E16AB4
	0x03E16A98 LDR X0, [X19 + 0x10]
	0x03E16A9C MOV W1, W31
	0x03E16AA0 MOV X3, X31
	0x03E16AA4 BL 0x339FA34
	0x03E16AA8 LDR X8, [X22]
	0x03E16AAC LDR X8, [X8 + 0xB8]
	0x03E16AB0 LDR X19, [X8 + 0x10]
	0x03E16AB4 LDR X0, [X20]
	0x03E16AB8 ADRP X23, 0x354000
	0x03E16ABC LDR W8, [X0 + 0xE0]
	0x03E16AC0 LDR X23, [X23 + 0x5D0]
	0x03E16AC4 CBNZ W8, 0x3E16ACC
	0x03E16AC8 BL 0x1C16DFC
	0x03E16ACC MOV X0, X19
	0x03E16AD0 MOV W1, W31
	0x03E16AD4 BL 0x3E156AC
	0x03E16AD8 LDR X8, [X22]
	0x03E16ADC LDR X0, [X23]
	0x03E16AE0 LDR X8, [X8 + 0xB8]
	0x03E16AE4 LDR W9, [X0 + 0xE0]
	0x03E16AE8 LDR X19, [X8 + 0x10]
	0x03E16AEC CBNZ W9, 0x3E16AF8
	0x03E16AF0 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D3000
	005 Move X19, 0x306000
	006 Move W8, [X20+960]
	007 Move X19, [X19+2352]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x306000
	013 Move X0, [X0+2352]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+960], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move W8, [X8+24]
	025 Compare W8, 0
	026 JumpIfEqual {33}
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Call UIElementsRuntimeUtility.SortPanels
	032 Move X0, [X19]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X19]
	038 Move X8, [X0+184]
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X0, [X8+16]
	042 Move X30, [X31+32]
	043 Return X0

Method: System.Void SortPanels()

Disassembly:
	0x03E179BC LDR W8, [X0 + 0xE0]
	0x03E179C0 CBNZ W8, 0x3E179CC
	0x03E179C4 BL 0x1C16DFC
	0x03E179C8 LDR X0, [X19]
	0x03E179CC LDR X8, [X0 + 0xB8]
	0x03E179D0 LDR X0, [X8]
	0x03E179D4 CBZ X0, 0x3E17AA4
	0x03E179D8 ADRP X8, 0x353000
	0x03E179DC LDR X8, [X8 + 0x780]
	0x03E179E0 ADRP X21, 0x353000
	0x03E179E4 ADRP X22, 0x353000
	0x03E179E8 ADRP X20, 0x353000
	0x03E179EC LDR X1, [X8]
	0x03E179F0 LDR X21, [X21 + 0x768]
	0x03E179F4 LDR X22, [X22 + 0x778]
	0x03E179F8 LDR X20, [X20 + 0x760]
	0x03E179FC ADD X8, X31, 0x8
	0x03E17A00 BL 0x301CB58
	0x03E17A04 LDR X1, [X21]
	0x03E17A08 ADD X0, X31, 0x8
	0x03E17A0C BL 0x2BC4350
	0x03E17A10 TBZ X0, 0x0, 0x3E17A7C
	0x03E17A14 LDR X19, [X31 + 0x18]
	0x03E17A18 CBZ X19, 0x3E17A9C
	0x03E17A1C LDR X8, [X19]
	0x03E17A20 LDR X1, [X22]
	0x03E17A24 LDRH W9, [X8 + 0x12E]
	0x03E17A28 CBZ X9, 0x3E17A4C
	0x03E17A2C LDR X10, [X8 + 0xB0]
	0x03E17A30 ADD X10, X10, 0x8
	0x03E17A34 LDUR X11, [X10 - 0x8]
	0x03E17A38 CMP X11, X1
	0x03E17A3C B.EQ 0x3E17A5C
	0x03E17A40 SUBS X9, X9, 0x1
	0x03E17A44 ADD X10, X10, 0x10
	0x03E17A48 B.NE 0x3E17A34
	0x03E17A4C MOVZ W2, 0x1
	0x03E17A50 MOV X0, X19
	0x03E17A54 BL 0x1C5C788
	0x03E17A58 B 0x3E17A6C
	0x03E17A5C LDR W9, [X10]
	0x03E17A60 ADD W9, W9, 0x1
	0x03E17A64 ADD X8, X8, W9, 0x4, SXTW
	0x03E17A68 ADD X0, X8, 0x138
	0x03E17A6C LDP X8, X1, [X0]
	0x03E17A70 MOV X0, X19
	0x03E17A74 BLR X8
	0x03E17A78 TBZ X0, 0x0, 0x3E17A04
	0x03E17A7C LDR X1, [X20]
	0x03E17A80 ADD X0, X31, 0x8
	0x03E17A84 BL 0x2BC434C
	0x03E17A88 LDP X20, X19, [X31 + 0x40]
	0x03E17A8C LDP X22, X21, [X31 + 0x30]
	0x03E17A90 LDR X30, [X31 + 0x20]
	0x03E17A94 ADD X31, X31, 0x50
	0x03E17A98 RET
	0x03E17A9C MOV X21, X20
	0x03E17AA0 BL 0x1C16F20
	0x03E17AA4 BL 0x1C16F20
	0x03E17AA8 B 0x3E17AB4
	0x03E17AAC B 0x3E17AB0
	0x03E17AB0 MOV X21, X20
	0x03E17AB4 MOV X19, X0
	0x03E17AB8 CMP W1, 0x1
	0x03E17ABC B.NE 0x3E17AE8
	0x03E17AC0 MOV X0, X19
	0x03E17AC4 BL 0x3EB1AD0
	0x03E17AC8 LDR X20, [X0]
	0x03E17ACC BL 0x3EB1AE0
	0x03E17AD0 LDR X1, [X21]
	0x03E17AD4 ADD X0, X31, 0x8
	0x03E17AD8 BL 0x2BC434C
	0x03E17ADC CBZ X20, 0x3E17A88
	0x03E17AE0 MOV X0, X20
	0x03E17AE4 BL 0x1C16F18
	0x03E17AE8 MOV X20, X31
	0x03E17AEC B 0x3E17AF4
	0x03E17AF0 MOV X19, X0
	0x03E17AF4 LDR X1, [X21]
	0x03E17AF8 ADD X0, X31, 0x8
	0x03E17AFC BL 0x2BC434C
	0x03E17B00 CBNZ X20, 0x3E17B0C
	0x03E17B04 MOV X0, X19
	0x03E17B08 BL 0x1D2C690
	0x03E17B0C MOV X0, X20
	0x03E17B10 BL 0x1C16F18
	0x03E17B14 BL 0x1990590
	0x03E17B18 SUB X31, X31, 0x80
	0x03E17B1C STR X30, [X31 + 0x40]
	0x03E17B20 STP X24, X23, [X31 + 0x50]
	0x03E17B24 STP X22, X21, [X31 + 0x60]
	0x03E17B28 STP X20, X19, [X31 + 0x70]
	0x03E17B2C ADRP X21, 0x5D1000
	0x03E17B30 ADRP X20, 0x353000
	0x03E17B34 LDRB W8, [X21 + 0x3CC]
	0x03E17B38 LDR X20, [X20 + 0x708]
	0x03E17B3C MOV X19, X0
	0x03E17B40 TBNZ X8, 0x0, 0x3E17BA0
	0x03E17B44 ADRP X0, 0x353000
	0x03E17B48 LDR X0, [X0 + 0x760]
	0x03E17B4C BL 0x1C16CF4
	0x03E17B50 ADRP X0, 0x353000
	0x03E17B54 LDR X0, [X0 + 0x768]
	0x03E17B58 BL 0x1C16CF4
	0x03E17B5C ADRP X0, 0x353000
	0x03E17B60 LDR X0, [X0 + 0x770]
	0x03E17B64 BL 0x1C16CF4
	0x03E17B68 ADRP X0, 0x308000
	0x03E17B6C LDR X0, [X0 + 0x5C8]
	0x03E17B70 BL 0x1C16CF4
	0x03E17B74 ADRP X0, 0x353000
	0x03E17B78 LDR X0, [X0 + 0x778]
	0x03E17B7C BL 0x1C16CF4
	0x03E17B80 ADRP X0, 0x353000
	0x03E17B84 LDR X0, [X0 + 0x780]
	0x03E17B88 BL 0x1C16CF4
	0x03E17B8C ADRP X0, 0x353000
	0x03E17B90 LDR X0, [X0 + 0x708]
	0x03E17B94 BL 0x1C16CF4
	0x03E17B98 MOVZ W8, 0x1
	0x03E17B9C STRB W8, [X21 + 0x3CC]
	0x03E17BA0 LDR X0, [X20]
	0x03E17BA4 STP X31, X31, [X31 + 0x20]
	0x03E17BA8 STR X31, [X31 + 0x30]
	0x03E17BAC LDR W8, [X0 + 0xE0]
	0x03E17BB0 CBNZ W8, 0x3E17BBC
	0x03E17BB4 BL 0x1C16DFC
	0x03E17BB8 LDR X0, [X20]
	0x03E17BBC LDR X8, [X0 + 0xB8]
	0x03E17BC0 LDR X0, [X8]
	0x03E17BC4 CBZ X0, 0x3E17CE8
	0x03E17BC8 ADRP X8, 0x353000
	0x03E17BCC LDR X8, [X8 + 0x780]
	0x03E17BD0 ADRP X23, 0x353000
	0x03E17BD4 LDR X23, [X23 + 0x768]
	0x03E17BD8 ADRP X24, 0x353000
	0x03E17BDC LDR X1, [X8]
	0x03E17BE0 ADRP X22, 0x308000
	0x03E17BE4 ADRP X21, 0x353000
	0x03E17BE8 LDR X24, [X24 + 0x778]
	0x03E17BEC LDR X22, [X22 + 0x5C8]
	0x03E17BF0 LDR X21, [X21 + 0x760]
	0x03E17BF4 ADD X8, X31, 0x8
	0x03E17BF8 BL 0x301CB58
	0x03E17BFC LDUR V0, [X31 + 0x8]
	0x03E17C00 LDR X8, [X31 + 0x18]
	0x03E17C04 STR V0, [X31 + 0x2]
	0x03E17C08 STR X8, [X31 + 0x30]
	0x03E17C0C LDR X1, [X23]
	0x03E17C10 ADD X0, X31, 0x20
	0x03E17C14 BL 0x2BC4350
	0x03E17C18 TBZ X0, 0x0, 0x3E17C9C
	0x03E17C1C LDR X20, [X31 + 0x30]
	0x03E17C20 CBZ X20, 0x3E17CE0
	0x03E17C24 LDR X8, [X20]
	0x03E17C28 LDR X1, [X24]
	0x03E17C2C LDRH W9, [X8 + 0x12E]
	0x03E17C30 CBZ X9, 0x3E17C54
	0x03E17C34 LDR X10, [X8 + 0xB0]
	0x03E17C38 ADD X10, X10, 0x8
	0x03E17C3C LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x5D2000
	008 Move X22, 0x305000
	009 Move W8, [X19+961]
	010 Move X22, [X22+2352]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0x305000
	016 Move X0, [X0+2328]
	017 Call 0x1C17CF4
	018 Move X0, 0x354000
	019 Move X0, [X0+1760]
	020 Call 0x1C17CF4
	021 Move X0, 0x354000
	022 Move X0, [X0+1624]
	023 Call 0x1C17CF4
	024 Move X0, 0x354000
	025 Move X0, [X0+1768]
	026 Call 0x1C17CF4
	027 Move X0, 0x305000
	028 Move X0, [X0+2336]
	029 Call 0x1C17CF4
	030 Move X0, 0x305000
	031 Move X0, [X0+2344]
	032 Call 0x1C17CF4
	033 Move X0, 0x354000
	034 Move X0, [X0+1776]
	035 Call 0x1C17CF4
	036 Move X0, 0x354000
	037 Move X0, [X0+1488]
	038 Call 0x1C17CF4
	039 Move X0, 0x305000
	040 Move X0, [X0+2352]
	041 Call 0x1C17CF4
	042 Move X0, 0x306000
	043 Move X0, [X0+3736]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X19+961], W8
	047 Move X0, [X22]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X22]
	053 Move X8, [X0+184]
	054 Move X19, [X8+16]
	055 Compare X19, 0
	056 JumpIfEqual {179}
	057 Move W2, [X19+24]
	058 Move W8, [X19+28]
	059 Move X20, 0x306000
	060 Move X20, [X20+3736]
	061 Add W8, W8, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move [X19+24], W31
	064 Move [X19+28], W8
	065 Move X0, [X19+16]
	066 Move W1, W31
	067 Move X3, X31
	068 Call Array.Clear, X0, X1, X2
	069 Move X8, [X22]
	070 Move X8, [X8+184]
	071 Move X19, [X8+16]
	072 Move X0, [X20]
	073 Move X23, 0x354000
	074 Move W8, [X0+224]
	075 Move X23, [X23+1488]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X19
	080 Move W1, W31
	081 Call UIElementsUtility.GetAllPanels, X0, X1
	082 Move X8, [X22]
	083 Move X0, [X23]
	084 Move X8, [X8+184]
	085 Move W9, [X0+224]
	086 Move X19, [X8+16]
	087 Compare W9, 0
	088 JumpIfNotEqual {91}
	089 Call 0x1C17DFC
	090 Move X0, [X23]
	091 Move X8, [X0+184]
	092 Move X20, [X8+8]
	093 Compare X20, 0
	094 JumpIfNotEqual {116}
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {100}
	098 Call 0x1C17DFC
	099 Move X0, [X23]
	100 Move X9, 0x354000
	101 Move X8, [X0+184]
	102 Move X9, [X9+1760]
	103 Move X21, [X8]
	104 Move X0, [X9]
	105 Call 0x1C17F10
	106 Move X8, 0x354000
	107 Move X8, [X8+1776]
	108 Move X1, X21
	109 Move X3, X31
	110 Move X20, X0
	111 Move X2, [X8]
	112 Call Comparison`1<Object>..ctor, X0, X1, X2
	113 Move X8, [X23]
	114 Move X8, [X8+184]
	115 Move [X8+8], X20
	116 Compare X19, 0
	117 JumpIfEqual {179}
	118 Move X8, 0x354000
	119 Move X8, [X8+1768]
	120 Move X21, 0x305000
	121 Move X23, 0x305000
	122 Move X0, X19
	123 Move X2, [X8]
	124 Move X21, [X21+2344]
	125 Move X23, [X23+2328]
	126 Move X1, X20
	127 Call List`1<Object>.Sort, X0, X1
	128 Move W19, W31
	129 Move X8, [X22]
	130 Move W9, [X8+224]
	131 Compare W9, 0
	132 JumpIfNotEqual {136}
	133 Move X0, X8
	134 Call 0x1C17DFC
	135 Move X8, [X22]
	136 Move X9, [X8+184]
	137 Move X0, [X9+16]
	138 Compare X0, 0
	139 JumpIfEqual {179}
	140 Move W10, [X8+224]
	141 Move W20, [X0+24]
	142 Compare W10, 0
	143 JumpIfNotEqual {151}
	144 Move X0, X8
	145 Call 0x1C17DFC
	146 Move X8, [X22]
	147 Move X9, [X8+184]
	148 Move X0, [X9+16]
	149 Compare X0, 0
	150 JumpIfEqual {179}
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X2, [X21]
	153 Move W1, W19
	154 Call List`1<Object>.get_Item, X0, X1
	155 Compare X0, 0
	156 JumpIfEqual {167}
	157 Move X9, [X0]
	158 Move X8, [X23]
	159 Move W11, [X9+304]
	160 Move W10, [X8+304]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X9, [X9+200]
	163 Add X9, X9, X10
	164 NotImplemented "Instruction LDUR not yet implemented."
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move [X0+368], W19
	167 Add W19, W19, 1
	168 Move W8, [X0+24]
	169 Move X20, [X31+32]
	170 Move X19, [X31+40]
	171 Move X22, [X31+16]
	172 Move X21, [X31+24]
	173 Move [X9+24], W31
	174 Subtract W8, W8, 1
	175 Move [X9+28], W8
	176 Move X30, [X31+48]
	177 Move X23, [X31+56]
	178 Return 
	179 Call 0x1C17F20

Method: UnityEngine.Vector2 MultiDisplayBottomLeftToPanelPosition(UnityEngine.Vector2 position, out System.Nullable`1<System.Int32> targetDisplay)

Disassembly:
	0x03E17C40 CMP X11, X1
	0x03E17C44 B.EQ 0x3E17C64
	0x03E17C48 SUBS X9, X9, 0x1
	0x03E17C4C ADD X10, X10, 0x10
	0x03E17C50 B.NE 0x3E17C3C
	0x03E17C54 MOVZ W2, 0x4
	0x03E17C58 MOV X0, X20
	0x03E17C5C BL 0x1C5C788
	0x03E17C60 B 0x3E17C74
	0x03E17C64 LDR W9, [X10]
	0x03E17C68 ADD W9, W9, 0x4
	0x03E17C6C ADD X8, X8, W9, 0x4, SXTW
	0x03E17C70 ADD X0, X8, 0x138
	0x03E17C74 LDP X8, X2, [X0]
	0x03E17C78 MOV X0, X20
	0x03E17C7C MOV X1, X19
	0x03E17C80 BLR X8
	0x03E17C84 TBZ X0, 0x0, 0x3E17C0C
	0x03E17C88 LDR X1, [X21]
	0x03E17C8C ADD X0, X31, 0x20
	0x03E17C90 BL 0x2BC434C
	0x03E17C94 MOVZ W0, 0x1
	0x03E17C98 B 0x3E17CC4
	0x03E17C9C LDR X1, [X21]
	0x03E17CA0 ADD X0, X31, 0x20
	0x03E17CA4 BL 0x2BC434C
	0x03E17CA8 LDR X0, [X22]
	0x03E17CAC LDR W8, [X0 + 0xE0]
	0x03E17CB0 CBNZ W8, 0x3E17CB8
	0x03E17CB4 BL 0x1C16DFC
	0x03E17CB8 MOV X0, X19
	0x03E17CBC MOV X1, X31

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x5D2000
	008 Move X20, 0x305000
	009 Move W8, [X21+962]
	010 Move X20, [X20+2352]
	011 Move X19, X0
	012 Move V8, V1
	013 Move V9, V0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x2E4000
	019 Move X0, [X0+1520]
	020 Call 0x1C17CF4
	021 Move X0, 0x305000
	022 Move X0, [X0+2352]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+962], W8
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move V0, V9
	032 Move V1, V8
	033 Move X0, X19
	034 Call UIElementsRuntimeUtility.MultiDisplayToLocalScreenPosition, X0, X1
	035 Move W0, [X19+4]
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Move X21, [X31+24]
	040 Move D9, [X31+48]
	041 Move D8, [X31+56]
	042 Call UIElementsRuntimeUtility.ScreenBottomLeftToPanelPosition, X0, X1
	043 Return X0

Method: UnityEngine.Vector2 MultiDisplayToLocalScreenPosition(UnityEngine.Vector2 position, out System.Nullable`1<System.Int32> targetDisplay)

Disassembly:
	0x03E17CC0 BL 0x3C76370
	0x03E17CC4 LDP X20, X19, [X31 + 0x70]
	0x03E17CC8 LDP X22, X21, [X31 + 0x60]
	0x03E17CCC LDP X24, X23, [X31 + 0x50]
	0x03E17CD0 LDR X30, [X31 + 0x40]
	0x03E17CD4 AND W0, W0, 0x1
	0x03E17CD8 ADD X31, X31, 0x80
	0x03E17CDC RET
	0x03E17CE0 MOV X23, X21
	0x03E17CE4 BL 0x1C16F20
	0x03E17CE8 BL 0x1C16F20
	0x03E17CEC B 0x3E17CF8
	0x03E17CF0 B 0x3E17CF4
	0x03E17CF4 MOV X23, X21
	0x03E17CF8 MOV X20, X0
	0x03E17CFC CMP W1, 0x1
	0x03E17D00 B.NE 0x3E17D2C
	0x03E17D04 MOV X0, X20
	0x03E17D08 BL 0x3EB1AD0
	0x03E17D0C LDR X21, [X0]
	0x03E17D10 BL 0x3EB1AE0
	0x03E17D14 LDR X1, [X23]
	0x03E17D18 ADD X0, X31, 0x20
	0x03E17D1C BL 0x2BC434C
	0x03E17D20 CBZ X21, 0x3E17CA8
	0x03E17D24 MOV X0, X21
	0x03E17D28 BL 0x1C16F18
	0x03E17D2C MOV X21, X31
	0x03E17D30 B 0x3E17D38
	0x03E17D34 MOV X20, X0
	0x03E17D38 LDR X1, [X23]
	0x03E17D3C ADD X0, X31, 0x20
	0x03E17D40 BL 0x2BC434C
	0x03E17D44 CBNZ X21, 0x3E17D50
	0x03E17D48 MOV X0, X20
	0x03E17D4C BL 0x1D2C690
	0x03E17D50 MOV X0, X21
	0x03E17D54 BL 0x1C16F18
	0x03E17D58 BL 0x1990590
	0x03E17D5C SUB X31, X31, 0x60
	0x03E17D60 STR X30, [X31 + 0x20]
	0x03E17D64 STP X24, X23, [X31 + 0x30]
	0x03E17D68 STP X22, X21, [X31 + 0x40]
	0x03E17D6C STP X20, X19, [X31 + 0x50]
	0x03E17D70 ADRP X22, 0x5D1000
	0x03E17D74 ADRP X21, 0x353000
	0x03E17D78 LDRB W8, [X22 + 0x3CD]
	0x03E17D7C LDR X21, [X21 + 0x708]
	0x03E17D80 MOV X19, X1
	0x03E17D84 MOV W20, W0
	0x03E17D88 TBNZ X8, 0x0, 0x3E17DDC
	0x03E17D8C ADRP X0, 0x353000
	0x03E17D90 LDR X0, [X0 + 0x760]
	0x03E17D94 BL 0x1C16CF4
	0x03E17D98 ADRP X0, 0x353000
	0x03E17D9C LDR X0, [X0 + 0x768]
	0x03E17DA0 BL 0x1C16CF4
	0x03E17DA4 ADRP X0, 0x353000
	0x03E17DA8 LDR X0, [X0 + 0x770]
	0x03E17DAC BL 0x1C16CF4
	0x03E17DB0 ADRP X0, 0x353000
	0x03E17DB4 LDR X0, [X0 + 0x778]
	0x03E17DB8 BL 0x1C16CF4
	0x03E17DBC ADRP X0, 0x353000
	0x03E17DC0 LDR X0, [X0 + 0x780]
	0x03E17DC4 BL 0x1C16CF4
	0x03E17DC8 ADRP X0, 0x353000
	0x03E17DCC LDR X0, [X0 + 0x708]
	0x03E17DD0 BL 0x1C16CF4
	0x03E17DD4 MOVZ W8, 0x1
	0x03E17DD8 STRB W8, [X22 + 0x3CD]
	0x03E17DDC LDR X0, [X21]
	0x03E17DE0 STP X31, X31, [X31 + 0x8]
	0x03E17DE4 STR X31, [X31 + 0x18]
	0x03E17DE8 STRB W31, [X31 + 0x2C]
	0x03E17DEC LDR W8, [X0 + 0xE0]
	0x03E17DF0 CBNZ W8, 0x3E17DFC
	0x03E17DF4 BL 0x1C16DFC
	0x03E17DF8 LDR X0, [X21]
	0x03E17DFC LDR X8, [X0 + 0xB8]
	0x03E17E00 LDR X0, [X8]
	0x03E17E04 CBZ X0, 0x3E17EF8
	0x03E17E08 ADRP X8, 0x353000
	0x03E17E0C LDR X8, [X8 + 0x780]
	0x03E17E10 ADRP X23, 0x353000

ISIL:
	001 Move [X31-80], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x5D2000
	011 Move X20, 0x341000
	012 Move W8, [X21+963]
	013 Move X20, [X20+1096]
	014 Move X19, X0
	015 Move V8, V1
	016 Move V9, V0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x341000
	022 Move X0, [X0+1096]
	023 Call 0x1C17CF4
	024 Move X0, 0x2DE000
	025 Move X0, [X0+1136]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+963], W8
	029 Move X0, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move S2, W31
	035 Move V0, V9
	036 Move V1, V8
	037 Move X0, X31
	038 Call Display.RelativeMouseAt, X0
	039 Move X20, 0x5C2000
	040 Move W8, [X20+1923]
	041 Move V10, V0
	042 Move V11, V1
	043 Move V12, V2
	044 Compare W8, 0
	045 JumpIfNotEqual {51}
	046 Move X0, 0x2DD000
	047 Move X0, [X0+1440]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X20+1923], W8
	051 Move X8, 0x2DD000
	052 Move X8, [X8+1440]
	053 Move X8, [X8]
	054 Move X8, [X8+184]
	055 Move S0, [X8]
	056 Move S1, [X8+4]
	057 Move V2, [X8+8]
	058 Move X8, -53661696
	059 Subtract S0, S10, S0
	060 Subtract S1, S11, S1
	061 Multiply S0, S0, S0
	062 Multiply S1, S1, S1
	063 Add S0, S0, S1
	064 Move V1, [X8+3872]
	065 Subtract S2, S12, S2
	066 Multiply S2, S2, S2
	067 Add S0, S2, S0
	068 NotImplemented "Instruction FCMP not yet implemented."
	069 Move [X31+8], X31
	070 Move X10, 0x2DE000
	071 Move X10, [X10+1136]
	072 Move W9, 0x7F800000
	073 Move S0, W9
	074 NotImplemented "Instruction FCVTZS not yet implemented."
	075 Move X2, [X10]
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 Move W9, 0x80000000
	078 NotImplemented "Instruction CSEL not yet implemented."
	079 Add X0, X31, 8
	080 Call Nullable`1<Int32>..ctor, X0, X1
	081 Move X8, [X31+8]
	082 Move V9, V10
	083 Move V8, V11
	084 Move [X19], X8
	085 Move [X19], X31
	086 Move V0, V9
	087 Move V1, V8
	088 Move X20, [X31+64]
	089 Move X19, [X31+72]
	090 Move X30, [X31+48]
	091 Move X21, [X31+56]
	092 Move D9, [X31+32]
	093 Move D8, [X31+40]
	094 Move D11, [X31+16]
	095 Move D10, [X31+24]
	096 Move V12, [X31+80]
	097 Return X0

Method: UnityEngine.Vector2 ScreenBottomLeftToPanelPosition(UnityEngine.Vector2 position, System.Int32 targetDisplay)

Disassembly:
	0x03E17E14 ADRP X24, 0x353000
	0x03E17E18 ADRP X22, 0x353000
	0x03E17E1C LDR X1, [X8]
	0x03E17E20 LDR X23, [X23 + 0x768]
	0x03E17E24 LDR X24, [X24 + 0x778]
	0x03E17E28 LDR X22, [X22 + 0x760]
	0x03E17E2C ADD X8, X31, 0x8
	0x03E17E30 BL 0x301CB58
	0x03E17E34 LDR X1, [X23]
	0x03E17E38 ADD X0, X31, 0x8
	0x03E17E3C BL 0x2BC4350
	0x03E17E40 TBZ X0, 0x0, 0x3E17EC8
	0x03E17E44 LDR X21, [X31 + 0x18]
	0x03E17E48 CBZ X21, 0x3E17EF4
	0x03E17E4C LDR X8, [X21]
	0x03E17E50 LDR X1, [X24]
	0x03E17E54 LDRH W9, [X8 + 0x12E]
	0x03E17E58 CBZ X9, 0x3E17E7C
	0x03E17E5C LDR X10, [X8 + 0xB0]
	0x03E17E60 ADD X10, X10, 0x8
	0x03E17E64 LDUR X11, [X10 - 0x8]
	0x03E17E68 CMP X11, X1
	0x03E17E6C B.EQ 0x3E17E8C
	0x03E17E70 SUBS X9, X9, 0x1
	0x03E17E74 ADD X10, X10, 0x10
	0x03E17E78 B.NE 0x3E17E64
	0x03E17E7C MOVZ W2, 0x2
	0x03E17E80 MOV X0, X21
	0x03E17E84 BL 0x1C5C788
	0x03E17E88 B 0x3E17E9C
	0x03E17E8C LDR W9, [X10]
	0x03E17E90 ADD W9, W9, 0x2
	0x03E17E94 ADD X8, X8, W9, 0x4, SXTW
	0x03E17E98 ADD X0, X8, 0x138
	0x03E17E9C LDP X8, X4, [X0]
	0x03E17EA0 ADD X3, X31, 0x2C
	0x03E17EA4 MOV X0, X21
	0x03E17EA8 MOV W1, W20
	0x03E17EAC MOV X2, X19
	0x03E17EB0 BLR X8
	0x03E17EB4 TBZ X0, 0x0, 0x3E17E34
	0x03E17EB8 LDRB W8, [X31 + 0x2C]
	0x03E17EBC CMP W8, 0x0
	0x03E17EC0 CSET W19, NE
	0x03E17EC4 B 0x3E17ECC
	0x03E17EC8 MOV W19, W31
	0x03E17ECC LDR X1, [X22]
	0x03E17ED0 ADD X0, X31, 0x8
	0x03E17ED4 BL 0x2BC434C
	0x03E17ED8 MOV W0, W19
	0x03E17EDC LDP X20, X19, [X31 + 0x50]
	0x03E17EE0 LDP X22, X21, [X31 + 0x40]
	0x03E17EE4 LDP X24, X23, [X31 + 0x30]
	0x03E17EE8 LDR X30, [X31 + 0x20]
	0x03E17EEC ADD X31, X31, 0x60
	0x03E17EF0 RET
	0x03E17EF4 BL 0x1C16F20

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x5D2000
	008 Move W8, [X20+964]
	009 Move W19, W0
	010 Move V8, V1
	011 Move V9, V0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x341000
	017 Move X0, [X0+1096]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+964], W8
	021 Move X0, X31
	022 Call Screen.get_height
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W20, W0
	025 Move X21, 0x341000
	026 Move X21, [X21+1096]
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X21]
	033 Move X8, [X0+184]
	034 Move X8, [X8]
	035 Compare X8, 0
	036 JumpIfEqual {67}
	037 Move W9, [X8+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W9, [X0+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {48}
	042 Call 0x1C17DFC
	043 Move X8, [X21]
	044 Move X8, [X8+184]
	045 Move X8, [X8]
	046 Compare X8, 0
	047 JumpIfEqual {67}
	048 Move W9, [X8+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X8, X8, W19
	051 Move X0, [X8+32]
	052 Compare X0, 0
	053 JumpIfEqual {67}
	054 Move X1, X31
	055 Call Display.get_systemHeight, X0
	056 Move W20, W0
	057 NotImplemented "Instruction SCVTF not yet implemented."
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X30, [X31+16]
	061 Move X21, [X31+24]
	062 Subtract S1, S0, S8
	063 Move V0, V9
	064 Move D9, [X31+48]
	065 Move D8, [X31+56]
	066 Return X0
	067 Call 0x1C17F20
	068 Call 0x1C17F28

Method: UnityEngine.Vector2 ScreenBottomLeftToPanelDelta(UnityEngine.Vector2 delta)

Disassembly:
	0x03E17EF8 BL 0x1C16F20
	0x03E17EFC B 0x3E17F04

ISIL:
	001 NotImplemented "Instruction FNEG not yet implemented."
	002 Return X0

