Type: UnityEngine.UIElements.BaseTreeView

Method: System.Collections.IList get_itemsSource()

Disassembly:
	0x03CFDE5C CBZ X0, 0x3CFDE84
	0x03CFDE60 LDR X8, [X0]
	0x03CFDE64 MOV W1, W19
	0x03CFDE68 LDP X20, X19, [X31 + 0x10]
	0x03CFDE6C LDP X3, X2, [X8 + 0x1B8]
	0x03CFDE70 LDR X30, [X31], #0x20
	0x03CFDE74 BR X3
	0x03CFDE78 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Call BaseTreeView.get_viewController, X0
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+392]
	007 Move X1, [X8+400]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: UnityEngine.UIElements.BaseTreeViewController get_viewController()

Disassembly:
	0x03CFDE7C LDR X30, [X31], #0x20
	0x03CFDE80 RET
	0x03CFDE84 BL 0x1C16F20
	0x03CFDE88 MOVZ W2, 0x1
	0x03CFDE8C B 0x3CFDE90
	0x03CFDE90 STR X30, [X31 - 0x40]!
	0x03CFDE94 STP X24, X23, [X31 + 0x10]
	0x03CFDE98 STP X22, X21, [X31 + 0x20]
	0x03CFDE9C STP X20, X19, [X31 + 0x30]
	0x03CFDEA0 ADRP X22, 0x6EA000
	0x03CFDEA4 LDRB W8, [X22 + 0x7F2]
	0x03CFDEA8 MOV W19, W2
	0x03CFDEAC MOV X21, X1
	0x03CFDEB0 MOV X20, X0
	0x03CFDEB4 TBNZ X8, 0x0, 0x3CFDEF0
	0x03CFDEB8 ADRP X0, 0x465000
	0x03CFDEBC LDR X0, [X0 + 0xFC0]
	0x03CFDEC0 BL 0x1C16CF4
	0x03CFDEC4 ADRP X0, 0x451000
	0x03CFDEC8 LDR X0, [X0 + 0x808]
	0x03CFDECC BL 0x1C16CF4
	0x03CFDED0 ADRP X0, 0x451000
	0x03CFDED4 LDR X0, [X0 + 0x2A8]
	0x03CFDED8 BL 0x1C16CF4
	0x03CFDEDC ADRP X0, 0x3F8000
	0x03CFDEE0 LDR X0, [X0 + 0x9D0]
	0x03CFDEE4 BL 0x1C16CF4
	0x03CFDEE8 MOVZ W8, 0x1
	0x03CFDEEC STRB W8, [X22 + 0x7F2]
	0x03CFDEF0 CBZ X21, 0x3CFDF68
	0x03CFDEF4 ADRP X8, 0x3F8000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6EB000
	005 Move W8, [X20+2027]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x466000
	012 Move X0, [X0+2968]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2027], W8
	016 Move X8, [X19+1096]
	017 Compare X8, 0
	018 JumpIfEqual {26}
	019 Move X9, 0x466000
	020 Move X9, [X9+2968]
	021 Move X10, [X8]
	022 Move X9, [X9]
	023 Move W12, [X10+304]
	024 Move W11, [X9+304]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, X31
	027 Move X10, [X10+200]
	028 Add X10, X10, X11
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Void CreateVirtualizationController()

Disassembly:
	0x03CFDEF8 LDR X8, [X8 + 0x9D0]
	0x03CFDEFC ADRP X22, 0x465000
	0x03CFDF00 ADRP X23, 0x451000
	0x03CFDF04 ADRP X24, 0x451000
	0x03CFDF08 LDR X0, [X8]
	0x03CFDF0C LDR X22, [X22 + 0xFC0]
	0x03CFDF10 LDR X23, [X23 + 0x808]
	0x03CFDF14 LDR X24, [X24 + 0x2A8]
	0x03CFDF18 BL 0x1C16F10
	0x03CFDF1C LDR X2, [X22]
	0x03CFDF20 MOV X1, X20
	0x03CFDF24 MOV X3, X31
	0x03CFDF28 MOV X22, X0
	0x03CFDF2C BL 0x2D2CF74
	0x03CFDF30 LDR X2, [X23]
	0x03CFDF34 MOV X0, X21
	0x03CFDF38 MOV X1, X22
	0x03CFDF3C BL 0x21CD49C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6EB000
	006 Move X21, 0x466000
	007 Move W8, [X20+2028]
	008 Move X21, [X21+4000]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x466000
	015 Move X0, [X0+4000]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2028], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x21A0CE8, X0
	026 Return 

Method: System.Void SetViewController(UnityEngine.UIElements.CollectionViewController controller)

Disassembly:
	0x03CFDF40 LDR X1, [X24]
	0x03CFDF44 BL 0x21D7880
	0x03CFDF48 AND W2, W19, 0x1
	0x03CFDF4C MOV X1, X0
	0x03CFDF50 MOV X0, X20
	0x03CFDF54 LDP X20, X19, [X31 + 0x30]
	0x03CFDF58 LDP X22, X21, [X31 + 0x20]
	0x03CFDF5C LDP X24, X23, [X31 + 0x10]
	0x03CFDF60 LDR X30, [X31], #0x40
	0x03CFDF64 B 0x3CFDF7C
	0x03CFDF68 LDP X20, X19, [X31 + 0x30]
	0x03CFDF6C LDP X22, X21, [X31 + 0x20]
	0x03CFDF70 LDP X24, X23, [X31 + 0x10]
	0x03CFDF74 LDR X30, [X31], #0x40
	0x03CFDF78 RET
	0x03CFDF7C STP X30, X23, [X31 - 0x30]!
	0x03CFDF80 STP X22, X21, [X31 + 0x10]
	0x03CFDF84 STP X20, X19, [X31 + 0x20]
	0x03CFDF88 ADRP X22, 0x6EA000
	0x03CFDF8C LDRB W8, [X22 + 0x819]
	0x03CFDF90 MOV W20, W2
	0x03CFDF94 MOV X21, X1
	0x03CFDF98 MOV X19, X0
	0x03CFDF9C TBNZ X8, 0x0, 0x3CFDFD8
	0x03CFDFA0 ADRP X0, 0x3F6000
	0x03CFDFA4 LDR X0, [X0 + 0xE00]
	0x03CFDFA8 BL 0x1C16CF4
	0x03CFDFAC ADRP X0, 0x41E000
	0x03CFDFB0 LDR X0, [X0 + 0x7B8]
	0x03CFDFB4 BL 0x1C16CF4
	0x03CFDFB8 ADRP X0, 0x41E000
	0x03CFDFBC LDR X0, [X0 + 0x7C0]
	0x03CFDFC0 BL 0x1C16CF4
	0x03CFDFC4 ADRP X0, 0x3F6000
	0x03CFDFC8 LDR X0, [X0 + 0xE18]
	0x03CFDFCC BL 0x1C16CF4
	0x03CFDFD0 MOVZ W8, 0x1
	0x03CFDFD4 STRB W8, [X22 + 0x819]
	0x03CFDFD8 LDR X8, [X19]
	0x03CFDFDC MOV X0, X19
	0x03CFDFE0 LDR X9, [X8 + 0x808]
	0x03CFDFE4 LDR X1, [X8 + 0x810]
	0x03CFDFE8 BLR X9
	0x03CFDFEC CBZ X21, 0x3CFE1E8
	0x03CFDFF0 TBZ X0, 0x0, 0x3CFE1E8
	0x03CFDFF4 MOV X0, X19
	0x03CFDFF8 MOV X1, X21
	0x03CFDFFC BL 0x3D03E44
	0x03CFE000 TBNZ X0, 0x0, 0x3CFE1E8
	0x03CFE004 MOV X0, X19
	0x03CFE008 BL 0x3D02E24
	0x03CFE00C ADRP X10, 0x41D000
	0x03CFE010 LDR X8, [X21]
	0x03CFE014 LDR X10, [X10 + 0x7B8]
	0x03CFE018 LDRH W9, [X8 + 0x12E]
	0x03CFE01C LDR X1, [X10]
	0x03CFE020 CBZ X9, 0x3CFE044
	0x03CFE024 LDR X10, [X8 + 0xB0]
	0x03CFE028 ADD X10, X10, 0x8
	0x03CFE02C LDUR X11, [X10 - 0x8]
	0x03CFE030 CMP X11, X1
	0x03CFE034 B.EQ 0x3CFE054
	0x03CFE038 SUBS X9, X9, 0x1
	0x03CFE03C ADD X10, X10, 0x10
	0x03CFE040 B.NE 0x3CFE02C
	0x03CFE044 MOV X0, X21
	0x03CFE048 MOV W2, W31
	0x03CFE04C BL 0x1C5C788
	0x03CFE050 B 0x3CFE060
	0x03CFE054 LDRSW X9, [X10]
	0x03CFE058 ADD X8, X8, X9, 0x4, LSL
	0x03CFE05C ADD X0, X8, 0x138

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6EB000
	009 Move W8, [X21+2029]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x466000
	017 Move X0, [X0+3056]
	018 Call 0x1C17CF4
	019 Move X0, 0x466000
	020 Move X0, [X0+4008]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2029], W8
	024 Move X24, 0x466000
	025 Move X23, 0x466000
	026 Move X24, [X24+3056]
	027 Move X23, [X23+4008]
	028 Move X0, X19
	029 Call BaseTreeView.get_viewController, X0
	030 Compare X0, 0
	031 JumpIfEqual {49}
	032 Move X0, X19
	033 Call BaseTreeView.get_viewController, X0
	034 Move X8, [X24]
	035 Move X21, X0
	036 Move X0, X8
	037 Call 0x1C17F10
	038 Move X2, [X23]
	039 Move X1, X19
	040 Move X3, X31
	041 Move X22, X0
	042 Call Action`2<Int32, Int32>..ctor, X0, X1, X2
	043 Compare X21, 0
	044 JumpIfEqual {89}
	045 Move X0, X21
	046 Move X1, X22
	047 Move X2, X31
	048 Call CollectionViewController.remove_itemIndexChanged, X0, X1
	049 Move X0, X19
	050 Move X1, X20
	051 Call BaseVerticalCollectionView.SetViewController, X0, X1
	052 Move X0, X19
	053 Call BaseTreeView.get_viewController, X0
	054 Compare X0, 0
	055 JumpIfEqual {81}
	056 Move X0, X19
	057 Call BaseTreeView.get_viewController, X0
	058 Move X8, [X24]
	059 Move X20, X0
	060 Move X0, X8
	061 Call 0x1C17F10
	062 Move X2, [X23]
	063 Move X1, X19
	064 Move X3, X31
	065 Move X21, X0
	066 Call Action`2<Int32, Int32>..ctor, X0, X1, X2
	067 Compare X20, 0
	068 JumpIfEqual {89}
	069 Move X0, X20
	070 Move X1, X21
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X22, [X31+32]
	074 Move X21, [X31+40]
	075 Move X24, [X31+16]
	076 Move X23, [X31+24]
	077 Move X2, X31
	078 Move X30, [X31+64]
	079 Call CollectionViewController.add_itemIndexChanged, X0, X1
	080 Return 
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Return 
	089 Call 0x1C17F20

Method: System.Void OnItemIndexChanged(System.Int32 srcIndex, System.Int32 dstIndex)

Disassembly:
	0x03CFE104 SUBS X9, X9, 0x1

ISIL:
No ISIL was generated
Method: UnityEngine.UIElements.ICollectionDragAndDropController CreateDragAndDropController()

Disassembly:
	0x03CFE278 ADD X10, X10, 0x10
	0x03CFE27C B.NE 0x3CFE268
	0x03CFE280 MOV X0, X21
	0x03CFE284 MOV W2, W31
	0x03CFE288 BL 0x1C5C788
	0x03CFE28C B 0x3CFE29C
	0x03CFE290 LDRSW X9, [X10]
	0x03CFE294 ADD X8, X8, X9, 0x4, LSL
	0x03CFE298 ADD X0, X8, 0x138
	0x03CFE29C LDP X8, X1, [X0]
	0x03CFE2A0 MOV X0, X21
	0x03CFE2A4 BLR X8
	0x03CFE2A8 CBNZ X22, 0x3CFE2B4
	0x03CFE2AC MOV X0, X23
	0x03CFE2B0 BL 0x1D2C690
	0x03CFE2B4 MOV X0, X22
	0x03CFE2B8 BL 0x1C16F18
	0x03CFE2BC BL 0x1990590
	0x03CFE2C0 STR X30, [X31 - 0x30]!
	0x03CFE2C4 STP X22, X21, [X31 + 0x10]
	0x03CFE2C8 STP X20, X19, [X31 + 0x20]
	0x03CFE2CC ADRP X22, 0x6E9000
	0x03CFE2D0 LDRB W8, [X22 + 0x7F3]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6EA000
	006 Move X21, 0x465000
	007 Move W8, [X20+2030]
	008 Move X21, [X21+4016]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x465000
	015 Move X0, [X0+4016]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2030], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X2, X31
	023 Move X20, X0
	024 Call TreeViewReorderableDragAndDropController..ctor, X0, X1
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Boolean get_autoExpand()

Disassembly:
	0x03CFE2D4 MOV W21, W2
	0x03CFE2D8 MOV W19, W1

ISIL:
	001 Move W0, [X0+1196]
	002 Return X0

Method: System.Void set_autoExpand(System.Boolean value)

Disassembly:
	0x03CFE2DC MOV X20, X0
	0x03CFE2E0 TBNZ X8, 0x0, 0x3CFE2F8
	0x03CFE2E4 ADRP X0, 0x3F9000
	0x03CFE2E8 LDR X0, [X0 + 0xB68]
	0x03CFE2EC BL 0x1C16CF4
	0x03CFE2F0 MOVZ W8, 0x1
	0x03CFE2F4 STRB W8, [X22 + 0x7F3]
	0x03CFE2F8 TBZ X21, 0x0, 0x3CFE394
	0x03CFE2FC MOV X0, X20
	0x03CFE300 BL 0x3CFCE7C
	0x03CFE304 CBZ X0, 0x3CFE3BC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 And W8, W1, 1
	004 Move X19, X0
	005 Move [X0+1196], W8
	006 Call BaseTreeView.get_viewController, X0
	007 Compare X0, 0
	008 JumpIfEqual {11}
	009 Move X1, X31
	010 Call BaseTreeViewController.RegenerateWrappers, X0
	011 Move X0, X19
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Call BaseVerticalCollectionView.RefreshItems, X0
	015 Return 

Method: System.Collections.Generic.List`1<System.Int32> get_expandedItemIds()

Disassembly:
	0x03CFE308 LDR X8, [X0]
	0x03CFE30C MOV W1, W19

ISIL:
	001 Move X0, [X0+1200]
	002 Return X0

Method: System.Void set_expandedItemIds(System.Collections.Generic.List`1<System.Int32> value)

Disassembly:
	0x03CFE310 LDR X9, [X8 + 0x2A8]
	0x03CFE314 LDR X2, [X8 + 0x2B0]

ISIL:
	001 Move [X0+1200], X1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x03CFE318 BLR X9
	0x03CFE31C ADDS W31, W0, 0x1

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W1, TEMP

Method: System.Void .ctor(System.Int32 itemHeight)

Disassembly:
	0x03CFE320 B.EQ 0x3CFE394
	0x03CFE324 ADRP X22, 0x3F9000
	0x03CFE328 LDR X22, [X22 + 0xB68]
	0x03CFE32C MOV W21, W0
	0x03CFE330 LDR X0, [X20 + 0x4B0]
	0x03CFE334 CBZ X0, 0x3CFE3BC
	0x03CFE338 LDR X2, [X22]
	0x03CFE33C MOV W1, W21
	0x03CFE340 BL 0x2FDCA84
	0x03CFE344 TBNZ X0, 0x0, 0x3CFE368
	0x03CFE348 MOV X0, X20
	0x03CFE34C BL 0x3CFCE7C
	0x03CFE350 CBZ X0, 0x3CFE3BC
	0x03CFE354 MOVZ W3, 0x1
	0x03CFE358 MOV W1, W21
	0x03CFE35C MOV W2, W31
	0x03CFE360 MOV X4, X31
	0x03CFE364 BL 0x3CF48CC
	0x03CFE368 MOV X0, X20
	0x03CFE36C BL 0x3CFCE7C
	0x03CFE370 CBZ X0, 0x3CFE3BC
	0x03CFE374 LDR X8, [X0]
	0x03CFE378 MOV W1, W21
	0x03CFE37C LDR X9, [X8 + 0x2A8]
	0x03CFE380 LDR X2, [X8 + 0x2B0]
	0x03CFE384 BLR X9
	0x03CFE388 MOV W21, W0
	0x03CFE38C ADDS W31, W0, 0x1
	0x03CFE390 B.NE 0x3CFE330
	0x03CFE394 MOV X0, X20
	0x03CFE398 BL 0x3CFCE7C
	0x03CFE39C CBZ X0, 0x3CFE3BC
	0x03CFE3A0 LDR X8, [X0]
	0x03CFE3A4 MOV W1, W19
	0x03CFE3A8 LDP X20, X19, [X31 + 0x20]
	0x03CFE3AC LDP X22, X21, [X31 + 0x10]
	0x03CFE3B0 LDP X3, X2, [X8 + 0x1E8]
	0x03CFE3B4 LDR X30, [X31], #0x30
	0x03CFE3B8 BR X3
	0x03CFE3BC BL 0x1C16F20
	0x03CFE3C0 STP X30, X19, [X31 - 0x10]!
	0x03CFE3C4 MOV W19, W1
	0x03CFE3C8 BL 0x3CFCE7C
	0x03CFE3CC CBZ X0, 0x3CFE3E0
	0x03CFE3D0 MOV W1, W19
	0x03CFE3D4 MOV X2, X31
	0x03CFE3D8 LDP X30, X19, [X31], #0x10
	0x03CFE3DC B 0x3CF4238
	0x03CFE3E0 BL 0x1C16F20
	0x03CFE3E4 STP X30, X21, [X31 - 0x20]!
	0x03CFE3E8 STP X20, X19, [X31 + 0x10]
	0x03CFE3EC MOV W21, W2
	0x03CFE3F0 MOV W20, W1
	0x03CFE3F4 MOV X19, X0
	0x03CFE3F8 BL 0x3CFCE7C
	0x03CFE3FC CBZ X0, 0x3CFE420
	0x03CFE400 AND W2, W21, 0x1
	0x03CFE404 MOV W1, W20
	0x03CFE408 MOV X3, X31
	0x03CFE40C BL 0x3CF4AB4
	0x03CFE410 MOV X0, X19
	0x03CFE414 LDP X20, X19, [X31 + 0x10]
	0x03CFE418 LDP X30, X21, [X31], #0x20
	0x03CFE41C B 0x3CFD108
	0x03CFE420 BL 0x1C16F20
	0x03CFE424 STR X30, [X31 - 0x20]!
	0x03CFE428 STP X20, X19, [X31 + 0x10]
	0x03CFE42C MOV W20, W2
	0x03CFE430 MOV W19, W1
	0x03CFE434 BL 0x3CFCE7C
	0x03CFE438 CBZ X0, 0x3CFE458
	0x03CFE43C AND W2, W20, 0x1
	0x03CFE440 MOV W1, W19
	0x03CFE444 LDP X20, X19, [X31 + 0x10]
	0x03CFE448 MOVZ W3, 0x1
	0x03CFE44C MOV X4, X31
	0x03CFE450 LDR X30, [X31], #0x20
	0x03CFE454 B 0x3CF48CC
	0x03CFE458 BL 0x1C16F20
	0x03CFE45C STR X30, [X31 - 0x10]!
	0x03CFE460 LDR X0, [X0 + 0x440]
	0x03CFE464 CBZ X0, 0x3CFE490
	0x03CFE468 LDR X8, [X0]
	0x03CFE46C LDR X9, [X8 + 0x768]
	0x03CFE470 LDR X1, [X8 + 0x770]
	0x03CFE474 BLR X9
	0x03CFE478 CBZ X0, 0x3CFE490
	0x03CFE47C LDR X8, [X0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x6EA000
	011 Move X21, 0x420000
	012 Move W8, [X22+2031]
	013 Move X21, [X21+3864]
	014 Move W20, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0x465000
	021 Move X0, [X0+4024]
	022 Call 0x1C17CF4
	023 Move X0, 0x465000
	024 Move X0, [X0+2816]
	025 Call 0x1C17CF4
	026 Move X0, 0x420000
	027 Move X0, [X0+3864]
	028 Call 0x1C17CF4
	029 Move X0, 0x420000
	030 Move X0, [X0+1912]
	031 Call 0x1C17CF4
	032 Move X0, 0x420000
	033 Move X0, [X0+1928]
	034 Call 0x1C17CF4
	035 Move X0, 0x3FA000
	036 Move X0, [X0+2928]
	037 Call 0x1C17CF4
	038 Move X0, 0x3F7000
	039 Move X0, [X0+3632]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X22+2031], W8
	043 Move X0, [X21]
	044 Move X26, 0x3F7000
	045 Move X25, 0x3FA000
	046 Move X24, 0x465000
	047 Move W8, [X0+224]
	048 Move X26, [X26+3632]
	049 Move X25, [X25+2928]
	050 Move X24, [X24+2816]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X23, 0x420000
	055 Move X22, 0x465000
	056 Move X21, 0x420000
	057 Move X23, [X23+1928]
	058 Move X22, [X22+4024]
	059 Move X21, [X21+1912]
	060 NotImplemented "Instruction SCVTF not yet implemented."
	061 Move X0, X19
	062 Move X1, X31
	063 Call BaseVerticalCollectionView..ctor, X0, X1, V0
	064 Move X0, [X26]
	065 Call 0x1C17F10
	066 Move X1, [X25]
	067 Move X20, X0
	068 Call List`1<Int32>..ctor, X0
	069 Move [X19+1200], X20
	070 Move X0, [X24]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {76}
	074 Call 0x1C17DFC
	075 Move X0, [X24]
	076 Move X8, [X0+184]
	077 Move X0, X19
	078 Move X2, X31
	079 Move X1, [X8]
	080 Call VisualElement.AddToClassList, X0, X1
	081 Move X0, [X23]
	082 Call 0x1C17F10
	083 Move X2, [X22]
	084 Move X1, X19
	085 Move X3, X31
	086 Move X20, X0
	087 Call 0x2D0F824, X0, X1, X2
	088 Move X3, [X21]
	089 Move X0, X19
	090 Move X1, X20
	091 Move X20, [X31+64]
	092 Move X19, [X31+72]
	093 Move X22, [X31+48]
	094 Move X21, [X31+56]
	095 Move X24, [X31+32]
	096 Move X23, [X31+40]
	097 Move X26, [X31+16]
	098 Move X25, [X31+24]
	099 Move W2, 1
	100 Move X30, [X31+80]
	101 Call 0x21A2534, X0, X1, X2
	102 Return 

Method: System.Void OnViewDataReady()

Disassembly:
	0x03CFE534 ADRP X0, 0x464000
	0x03CFE538 LDR X0, [X0 + 0xFD0]
	0x03CFE53C BL 0x1C16CF4
	0x03CFE540 MOVZ W8, 0x1
	0x03CFE544 STRB W8, [X26 + 0x7F4]
	0x03CFE548 LDR X8, [X19]
	0x03CFE54C LDR X9, [X25]
	0x03CFE550 MOV X2, X31
	0x03CFE554 LDR X8, [X8 + 0xB8]
	0x03CFE558 STR X9, [X8]
	0x03CFE55C LDR X8, [X19]
	0x03CFE560 LDR X1, [X24]
	0x03CFE564 LDR X8, [X8 + 0xB8]
	0x03CFE568 LDR X0, [X8]
	0x03CFE56C BL 0x321B938
	0x03CFE570 LDR X8, [X19]
	0x03CFE574 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call BaseVerticalCollectionView.OnViewDataReady, X0
	005 Move X0, X19
	006 Call BaseTreeView.get_viewController, X0
	007 Compare X0, 0
	008 JumpIfEqual {20}
	009 Move X0, X19
	010 Call BaseTreeView.get_viewController, X0
	011 Compare X0, 0
	012 JumpIfEqual {23}
	013 Move X1, X31
	014 Call BaseTreeViewController.RebuildTree, X0
	015 Move X0, X19
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call BaseVerticalCollectionView.RefreshItems, X0
	019 Return 
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return 
	023 Call 0x1C17F20

Method: System.Boolean HandleItemNavigation(System.Boolean moveIn, System.Boolean altPressed)

Disassembly:
	0x03CFE5C0 BL 0x321B938
	0x03CFE5C4 LDR X8, [X19]
	0x03CFE5C8 MOV X2, X31
	0x03CFE5CC LDR X8, [X8 + 0xB8]
	0x03CFE5D0 STR X0, [X8 + 0x20]
	0x03CFE5D4 LDR X0, [X8]
	0x03CFE5D8 LDR X1, [X20]
	0x03CFE5DC BL 0x321B938
	0x03CFE5E0 LDR X8, [X19]
	0x03CFE5E4 LDP X20, X19, [X31 + 0x40]
	0x03CFE5E8 LDP X22, X21, [X31 + 0x30]
	0x03CFE5EC LDP X24, X23, [X31 + 0x20]
	0x03CFE5F0 LDR X8, [X8 + 0xB8]
	0x03CFE5F4 LDP X26, X25, [X31 + 0x10]
	0x03CFE5F8 STR X0, [X8 + 0x28]
	0x03CFE5FC LDR X30, [X31], #0x50
	0x03CFE600 RET
	0x03CFE604 MOVZ W2, 0x1
	0x03CFE608 B 0x3CFE2C0
	0x03CFE60C SUB X31, X31, 0x90
	0x03CFE610 STP X30, X23, [X31 + 0x60]
	0x03CFE614 STP X22, X21, [X31 + 0x70]
	0x03CFE618 STP X20, X19, [X31 + 0x80]
	0x03CFE61C ADRP X23, 0x6E9000
	0x03CFE620 LDRB W8, [X23 + 0x7F5]
	0x03CFE624 MOV X21, X3
	0x03CFE628 MOV X20, X2
	0x03CFE62C MOV X19, X1
	0x03CFE630 MOV X22, X0
	0x03CFE634 TBNZ X8, 0x0, 0x3CFE64C
	0x03CFE638 ADRP X0, 0x464000
	0x03CFE63C LDR X0, [X0 + 0xB00]
	0x03CFE640 BL 0x1C16CF4
	0x03CFE644 MOVZ W8, 0x1
	0x03CFE648 STRB W8, [X23 + 0x7F5]
	0x03CFE64C LDP V1, V0, [X21]
	0x03CFE650 ADD X3, X31, 0x20
	0x03CFE654 MOV X0, X22
	0x03CFE658 MOV X1, X19
	0x03CFE65C MOV X2, X20
	0x03CFE660 STP V1, V0, [X31 + 0x20]
	0x03CFE664 BL 0x3CFC644
	0x03CFE668 CBZ X19, 0x3CFE6A0
	0x03CFE66C ADRP X9, 0x464000
	0x03CFE670 LDR X9, [X9 + 0xB00]
	0x03CFE674 LDR X8, [X19]
	0x03CFE678 LDR X1, [X9]
	0x03CFE67C LDRB W10, [X8 + 0x130]
	0x03CFE680 LDRB W9, [X1 + 0x130]
	0x03CFE684 CMP W10, W9
	0x03CFE688 B.CC 0x3CFE6F8
	0x03CFE68C LDR X8, [X8 + 0xC8]
	0x03CFE690 ADD X8, X8, X9, 0x3, LSL
	0x03CFE694 LDUR X8, [X8 - 0x8]
	0x03CFE698 CMP X8, X1
	0x03CFE69C B.NE 0x3CFE6F8
	0x03CFE6A0 LDP V0, V1, [X21]
	0x03CFE6A4 LDR X0, [X22 + 0xB0]
	0x03CFE6A8 STP V0, V1, [X31]
	0x03CFE6AC CBZ X0, 0x3CFE6F4
	0x03CFE6B0 LDR X8, [X0]
	0x03CFE6B4 LDP V0, V1, [X31]
	0x03CFE6B8 ADD X2, X31, 0x40
	0x03CFE6BC MOV X1, X20
	0x03CFE6C0 LDR X9, [X8 + 0x178]
	0x03CFE6C4 STP V0, V1, [X31 + 0x40]
	0x03CFE6C8 LDR X3, [X8 + 0x180]
	0x03CFE6CC BLR X9
	0x03CFE6D0 CBZ X19, 0x3CFE6F4
	0x03CFE6D4 AND W1, W0, 0x1
	0x03CFE6D8 MOV X0, X19
	0x03CFE6DC BL 0x3CFD2DC
	0x03CFE6E0 LDP X20, X19, [X31 + 0x80]
	0x03CFE6E4 LDP X22, X21, [X31 + 0x70]
	0x03CFE6E8 LDP X30, X23, [X31 + 0x60]
	0x03CFE6EC ADD X31, X31, 0x90
	0x03CFE6F0 RET
	0x03CFE6F4 BL 0x1C16F20
	0x03CFE6F8 MOV X0, X19
	0x03CFE6FC BL 0x1C171E0
	0x03CFE700 STP X30, X21, [X31 - 0x20]!
	0x03CFE704 STP X20, X19, [X31 + 0x10]
	0x03CFE708 ADRP X20, 0x6E9000
	0x03CFE70C ADRP X21, 0x41F000
	0x03CFE710 LDRB W8, [X20 + 0x7F6]
	0x03CFE714 LDR X21, [X21 + 0x758]
	0x03CFE718 MOV X19, X0
	0x03CFE71C TBNZ X8, 0x0, 0x3CFE74C
	0x03CFE720 ADRP X0, 0x41F000
	0x03CFE724 LDR X0, [X0 + 0xB28]
	0x03CFE728 BL 0x1C16CF4
	0x03CFE72C ADRP X0, 0x41F000
	0x03CFE730 LDR X0, [X0 + 0x758]
	0x03CFE734 BL 0x1C16CF4
	0x03CFE738 ADRP X0, 0x464000
	0x03CFE73C LDR X0, [X0 + 0xFF0]
	0x03CFE740 BL 0x1C16CF4
	0x03CFE744 MOVZ W8, 0x1
	0x03CFE748 STRB W8, [X20 + 0x7F6]
	0x03CFE74C LDR X0, [X21]
	0x03CFE750 BL 0x1C16F10
	0x03CFE754 MOV X1, X31
	0x03CFE758 MOV X20, X0
	0x03CFE75C BL 0x3E13BD4
	0x03CFE760 CBZ X20, 0x3CFE78C
	0x03CFE764 ADRP X8, 0x464000
	0x03CFE768 LDR X8, [X8 + 0xFF0]
	0x03CFE76C MOV X0, X19
	0x03CFE770 LDR X8, [X8]
	0x03CFE774 STRB W31, [X20 + 0x40]
	0x03CFE778 STR X8, [X20 + 0x10]
	0x03CFE77C STR X20, [X19 + 0xB0]
	0x03CFE780 LDP X20, X19, [X31 + 0x10]
	0x03CFE784 LDP X30, X21, [X31], #0x20
	0x03CFE788 B 0x3CFCAF8
	0x03CFE78C BL 0x1C16F20
	0x03CFE790 MOV X1, X31
	0x03CFE794 B 0x33BDD8C
	0x03CFE798 LDR X8, [X0 + 0x408]
	0x03CFE79C CMP X8, 0x0
	0x03CFE7A0 CSET W0, NE
	0x03CFE7A4 RET
	0x03CFE7A8 SUB X31, X31, 0x60
	0x03CFE7AC STP X30, X21, [X31 + 0x40]
	0x03CFE7B0 STP X20, X19, [X31 + 0x50]
	0x03CFE7B4 LDR X21, [X0 + 0x408]
	0x03CFE7B8 CBZ X21, 0x3CFE7E4
	0x03CFE7BC MOV X19, X2
	0x03CFE7C0 MOV X20, X1
	0x03CFE7C4 CBZ X1, 0x3CFE7EC
	0x03CFE7C8 LDR X8, [X20]
	0x03CFE7CC MOV X0, X20
	0x03CFE7D0 LDP X9, X1, [X8 + 0x178]
	0x03CFE7D4 BLR X9
	0x03CFE7D8 LDR W2, [X20 + 0x24]
	0x03CFE7DC MOV X1, X0
	0x03CFE7E0 B 0x3CFE7F4
	0x03CFE7E4 MOVZ W0, 0x1
	0x03CFE7E8 B 0x3CFE830
	0x03CFE7EC MOV X1, X31
	0x03CFE7F0 MOVN W2, 0x0
	0x03CFE7F4 ADD X0, X31, 0x8
	0x03CFE7F8 MOV X3, X19
	0x03CFE7FC MOV X4, X31
	0x03CFE800 STP X31, X31, [X31 + 0x8]
	0x03CFE804 STR X31, [X31 + 0x18]
	0x03CFE808 BL 0x3D93338
	0x03CFE80C LDUR V0, [X31 + 0x8]
	0x03CFE810 LDR X8, [X31 + 0x18]
	0x03CFE814 LDR X9, [X21 + 0x18]
	0x03CFE818 LDR X0, [X21 + 0x40]
	0x03CFE81C STR V0, [X31 + 0x2]
	0x03CFE820 STR X8, [X31 + 0x30]
	0x03CFE824 LDR X2, [X21 + 0x28]
	0x03CFE828 ADD X1, X31, 0x20
	0x03CFE82C BLR X9
	0x03CFE830 LDP X20, X19, [X31 + 0x50]
	0x03CFE834 LDP X30, X21, [X31 + 0x40]
	0x03CFE838 AND W0, W0, 0x1
	0x03CFE83C ADD X31, X31, 0x60
	0x03CFE840 RET
	0x03CFE844 SUB X31, X31, 0x100
	0x03CFE848 STR X30, [X31 + 0xD0]
	0x03CFE84C STP X22, X21, [X31 + 0xE0]
	0x03CFE850 STP X20, X19, [X31 + 0xF0]
	0x03CFE854 LDR X22, [X0 + 0x410]
	0x03CFE858 MOV X21, X3
	0x03CFE85C MOV X19, X8
	0x03CFE860 CBZ X22, 0x3CFE8F0
	0x03CFE864 MOV X20, X2
	0x03CFE868 CBZ X1, 0x3CFE884
	0x03CFE86C LDR X8, [X1]
	0x03CFE870 MOV X0, X1
	0x03CFE874 LDP X9, X8, [X8 + 0x178]
	0x03CFE878 MOV X1, X8
	0x03CFE87C BLR X9
	0x03CFE880 MOV X1, X0
	0x03CFE884 LDP V1, V0, [X21]
	0x03CFE888 MOVI V2.2D, 0x0
	0x03CFE88C ADD X0, X31, 0x40
	0x03CFE890 ADD X3, X31, 0x20
	0x03CFE894 MOV X2, X20
	0x03CFE898 MOV X4, X31
	0x03CFE89C STP V2, V2, [X31 + 0x50]
	0x03CFE8A0 STP V1, V0, [X31 + 0x20]
	0x03CFE8A4 STR V2, [X31 + 0x4]
	0x03CFE8A8 BL 0x3D93348
	0x03CFE8AC LDP V1, V0, [X31 + 0x50]
	0x03CFE8B0 LDR V2, [X31 + 0x4]
	0x03CFE8B4 ADD X8, X31, 0x0
	0x03CFE8B8 ADD X1, X31, 0xA0
	0x03CFE8BC STP V1, V0, [X31 + 0x80]
	0x03CFE8C0 STR V2, [X31 + 0x7]
	0x03CFE8C4 LDP V0, V1, [X31 + 0x70]
	0x03CFE8C8 LDR V2, [X31 + 0x9]
	0x03CFE8CC LDR X9, [X22 + 0x18]
	0x03CFE8D0 LDR X0, [X22 + 0x40]
	0x03CFE8D4 STP V0, V1, [X31 + 0xA0]
	0x03CFE8D8 STR V2, [X31 + 0xC]
	0x03CFE8DC LDR X2, [X22 + 0x28]
	0x03CFE8E0 BLR X9
	0x03CFE8E4 LDP V0, V1, [X31]
	0x03CFE8E8 STP V0, V1, [X31 + 0xA0]
	0x03CFE8EC B 0x3CFE8F8
	0x03CFE8F0 LDP V1, V0, [X21]
	0x03CFE8F4 STP V1, V0, [X31 + 0xA0]
	0x03CFE8F8 LDP V1, V0, [X31 + 0xA0]
	0x03CFE8FC LDP X22, X21, [X31 + 0xE0]
	0x03CFE900 LDR X30, [X31 + 0xD0]
	0x03CFE904 STP V1, V0, [X19]
	0x03CFE908 LDP X20, X19, [X31 + 0xF0]
	0x03CFE90C ADD X31, X31, 0x100
	0x03CFE910 RET
	0x03CFE914 SUB X31, X31, 0xC0
	0x03CFE918 STP X30, X19, [X31 + 0xB0]
	0x03CFE91C LDR X19, [X0 + 0x418]
	0x03CFE920 CBZ X19, 0x3CFE978
	0x03CFE924 LDP V3, V2, [X1]
	0x03CFE928 MOVI V4.2D, 0x0
	0x03CFE92C ADD X0, X31, 0x20
	0x03CFE930 ADD X1, X31, 0x0
	0x03CFE934 MOV X2, X31
	0x03CFE938 STR X31, [X31 + 0x40]
	0x03CFE93C STP V3, V2, [X31]
	0x03CFE940 STP V4, V4, [X31 + 0x20]
	0x03CFE944 BL 0x3D93358
	0x03CFE948 LDR X8, [X31 + 0x40]
	0x03CFE94C LDP V1, V0, [X31 + 0x20]
	0x03CFE950 ADD X1, X31, 0x80
	0x03CFE954 STR X8, [X31 + 0x70]
	0x03CFE958 STP V1, V0, [X31 + 0x50]
	0x03CFE95C LDR X9, [X19 + 0x18]
	0x03CFE960 LDR X0, [X19 + 0x40]
	0x03CFE964 STP V1, V0, [X31 + 0x80]
	0x03CFE968 STR X8, [X31 + 0xA0]
	0x03CFE96C LDR X2, [X19 + 0x28]
	0x03CFE970 BLR X9
	0x03CFE974 B 0x3CFE97C
	0x03CFE978 MOV W0, W31
	0x03CFE97C LDP X30, X19, [X31 + 0xB0]
	0x03CFE980 ADD X31, X31, 0xC0
	0x03CFE984 RET
	0x03CFE988 SUB X31, X31, 0xC0
	0x03CFE98C STP X30, X19, [X31 + 0xB0]
	0x03CFE990 LDR X19, [X0 + 0x420]
	0x03CFE994 CBZ X19, 0x3CFE9EC
	0x03CFE998 LDP V3, V2, [X1]
	0x03CFE99C MOVI V4.2D, 0x0
	0x03CFE9A0 ADD X0, X31, 0x20
	0x03CFE9A4 ADD X1, X31, 0x0
	0x03CFE9A8 MOV X2, X31
	0x03CFE9AC STR X31, [X31 + 0x40]
	0x03CFE9B0 STP V3, V2, [X31]
	0x03CFE9B4 STP V4, V4, [X31 + 0x20]
	0x03CFE9B8 BL 0x3D93358
	0x03CFE9BC LDR X8, [X31 + 0x40]
	0x03CFE9C0 LDP V1, V0, [X31 + 0x20]
	0x03CFE9C4 ADD X1, X31, 0x80
	0x03CFE9C8 STR X8, [X31 + 0x70]
	0x03CFE9CC STP V1, V0, [X31 + 0x50]
	0x03CFE9D0 LDR X9, [X19 + 0x18]
	0x03CFE9D4 LDR X0, [X19 + 0x40]
	0x03CFE9D8 STP V1, V0, [X31 + 0x80]
	0x03CFE9DC STR X8, [X31 + 0xA0]
	0x03CFE9E0 LDR X2, [X19 + 0x28]
	0x03CFE9E4 BLR X9
	0x03CFE9E8 B 0x3CFE9F0
	0x03CFE9EC MOV W0, W31
	0x03CFE9F0 LDP X30, X19, [X31 + 0xB0]
	0x03CFE9F4 ADD X31, X31, 0xC0
	0x03CFE9F8 RET
	0x03CFE9FC LDR X0, [X0 + 0x448]
	0x03CFEA00 CBZ X0, 0x3CFEA10
	0x03CFEA04 LDR X8, [X0]
	0x03CFEA08 LDP X2, X1, [X8 + 0x188]
	0x03CFEA0C BR X2
	0x03CFEA10 RET
	0x03CFEA14 STR X30, [X31 - 0x20]!
	0x03CFEA18 STP X20, X19, [X31 + 0x10]
	0x03CFEA1C MOV X20, X0
	0x03CFEA20 LDR X0, [X0 + 0x448]
	0x03CFEA24 MOV X19, X1
	0x03CFEA28 CBNZ X0, 0x3CFEA5C
	0x03CFEA2C LDR X8, [X20]
	0x03CFEA30 MOV X0, X20
	0x03CFEA34 LDR X9, [X8 + 0x7C8]
	0x03CFEA38 LDR X1, [X8 + 0x7D0]
	0x03CFEA3C BLR X9
	0x03CFEA40 LDR X8, [X20]
	0x03CFEA44 MOV X1, X0
	0x03CFEA48 MOV X0, X20
	0x03CFEA4C LDR X9, [X8 + 0x7D8]
	0x03CFEA50 LDR X2, [X8 + 0x7E0]
	0x03CFEA54 BLR X9
	0x03CFEA58 LDR X0, [X20 + 0x448]
	0x03CFEA5C CBZ X0, 0x3CFEA78
	0x03CFEA60 LDR X8, [X0]
	0x03CFEA64 MOV X1, X19
	0x03CFEA68 LDP X20, X19, [X31 + 0x10]
	0x03CFEA6C LDP X3, X2, [X8 + 0x198]
	0x03CFEA70 LDR X30, [X31], #0x20
	0x03CFEA74 BR X3
	0x03CFEA78 BL 0x1C16F20
	0x03CFEA7C STP X30, X19, [X31 - 0x10]!
	0x03CFEA80 MOV X19, X0
	0x03CFEA84 LDR X0, [X0 + 0x448]
	0x03CFEA88 CBNZ X0, 0x3CFEABC
	0x03CFEA8C LDR X8, [X19]
	0x03CFEA90 MOV X0, X19
	0x03CFEA94 LDR X9, [X8 + 0x7C8]
	0x03CFEA98 LDR X1, [X8 + 0x7D0]
	0x03CFEA9C BLR X9
	0x03CFEAA0 LDR X8, [X19]
	0x03CFEAA4 MOV X1, X0
	0x03CFEAA8 MOV X0, X19
	0x03CFEAAC LDR X9, [X8 + 0x7D8]
	0x03CFEAB0 LDR X2, [X8 + 0x7E0]
	0x03CFEAB4 BLR X9
	0x03CFEAB8 LDR X0, [X19 + 0x448]
	0x03CFEABC LDP X30, X19, [X31], #0x10
	0x03CFEAC0 RET
	0x03CFEAC4 MOV X0, X31
	0x03CFEAC8 RET
	0x03CFEACC LDR W0, [X0 + 0x428]
	0x03CFEAD0 RET
	0x03CFEAD4 STP X30, X21, [X31 - 0x20]!
	0x03CFEAD8 STP X20, X19, [X31 + 0x10]
	0x03CFEADC ADRP X21, 0x6E9000
	0x03CFEAE0 LDRB W8, [X21 + 0x7F7]
	0x03CFEAE4 MOV W20, W1
	0x03CFEAE8 MOV X19, X0
	0x03CFEAEC TBNZ X8, 0x0, 0x3CFEB10
	0x03CFEAF0 ADRP X0, 0x44F000
	0x03CFEAF4 LDR X0, [X0 + 0xAA8]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x6EA000
	013 Move W8, [X21+2032]
	014 Move W22, W2
	015 Move W20, W1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x3FD000
	022 Move X0, [X0+752]
	023 Call 0x1C17CF4
	024 Move X0, 0x3F6000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0x41E000
	028 Move X0, [X0+1976]
	029 Call 0x1C17CF4
	030 Move X0, 0x41E000
	031 Move X0, [X0+1984]
	032 Call 0x1C17CF4
	033 Move X0, 0x3F6000
	034 Move X0, [X0+3608]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+2032], W8
	038 Move X21, [X19+1128]
	039 Compare X21, 0
	040 JumpIfEqual {320}
	041 Move X10, 0x41E000
	042 Move X8, [X21]
	043 Move X10, [X10+1976]
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Move X1, [X10]
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move X0, X21
	055 Move W2, W31
	056 Call 0x1C5D788
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Add X8, X8, X9
	059 Add X0, X8, 312
	060 Move X8, [X0]
	061 Move X1, [X0+8]
	062 Move X25, 0x3F6000
	063 Move X25, [X25+3584]
	064 Move X0, X21
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X21, X0
	067 Compare X0, 0
	068 JumpIfEqual {321}
	069 Move X26, 0x3F6000
	070 Move X27, 0x41E000
	071 Move X26, [X26+3608]
	072 Move X27, [X27+1984]
	073 Move W28, W31
	074 Move W24, W28
	075 Move X8, [X21]
	076 Move X1, [X26]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move X0, X21
	087 Move W2, W31
	088 Call 0x1C5D788
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Add X8, X8, X9
	091 Add X0, X8, 312
	092 Move X8, [X0]
	093 Move X1, [X0+8]
	094 Move X0, X21
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {171}
	100 Move X8, [X21]
	101 Move X1, [X27]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Compare X9, 0
	104 JumpIfEqual {111}
	105 Move X10, [X8+176]
	106 Add X10, X10, 8
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Subtract X9, X9, 1
	110 Add X10, X10, 16
	111 Move X0, X21
	112 Move W2, W31
	113 Call 0x1C5D788
	114 NotImplemented "Instruction LDRSW not yet implemented."
	115 Add X8, X8, X9
	116 Add X0, X8, 312
	117 Move X8, [X0]
	118 Move X1, [X0+8]
	119 Move X0, X21
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move W23, W0
	122 Move X0, X19
	123 Call BaseTreeView.get_viewController, X0
	124 Compare X0, 0
	125 JumpIfEqual {318}
	126 Move X8, [X0]
	127 Move X9, [X8+488]
	128 Move X2, [X8+496]
	129 Move W1, W23
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move W23, W0
	132 Move X0, X19
	133 Call BaseTreeView.get_viewController, X0
	134 Compare X0, 0
	135 JumpIfEqual {319}
	136 Move W1, W23
	137 Move X2, X31
	138 Call BaseTreeViewController.HasChildrenByIndex, X0, X1
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {171}
	143 Move TEMP, X20
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {154}
	147 Move X0, X19
	148 Move W1, W23
	149 Call BaseTreeView.IsExpandedByIndex, X0, X1
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {75}
	154 Move X0, X19
	155 Move W1, W23
	156 Call BaseTreeView.IsExpandedByIndex, X0, X1
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {75}
	161 Move W28, 1
	162 And W2, W22, 1
	163 Move X0, X19
	164 Move W1, W23
	165 Call BaseTreeView.CollapseItemByIndex, X0, X1, X2
	166 Move W28, 1
	167 And W2, W22, 1
	168 Move X0, X19
	169 Move W1, W23
	170 Call BaseTreeView.ExpandItemByIndex, X0, X1, X2
	171 Move X22, X31
	172 Move W23, 12
	173 Compare X21, 0
	174 JumpIfEqual {196}
	175 Move X8, [X21]
	176 Move X1, [X25]
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 Compare X9, 0
	179 JumpIfEqual {186}
	180 Move X10, [X8+176]
	181 Add X10, X10, 8
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Subtract X9, X9, 1
	185 Add X10, X10, 16
	186 Move X0, X21
	187 Move W2, W31
	188 Call 0x1C5D788
	189 NotImplemented "Instruction LDRSW not yet implemented."
	190 Add X8, X8, X9
	191 Add X0, X8, 312
	192 Move X8, [X0]
	193 Move X1, [X0+8]
	194 Move X0, X21
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Compare X22, 0
	197 JumpIfNotEqual {322}
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Compare W23, 0
	200 JumpIfNotEqual {305}
	201 Move TEMP, X24
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfEqual {303}
	205 Move TEMP, X20
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {210}
	209 Move W22, 1
	210 Move X0, X19
	211 Call BaseTreeView.get_viewController, X0
	212 Move X20, X0
	213 Move X0, X19
	214 Call BaseVerticalCollectionView.get_selectedIndex, X0
	215 Compare X20, 0
	216 JumpIfEqual {320}
	217 Move X8, [X20]
	218 Move W1, W0
	219 Move X0, X20
	220 Move X9, [X8+504]
	221 Move X2, [X8+512]
	222 NotImplemented "Instruction BLR not yet implemented."
	223 Move W20, W0
	224 Move X0, X19
	225 Call BaseTreeView.get_viewController, X0
	226 Compare X0, 0
	227 JumpIfEqual {320}
	228 Move X8, [X0]
	229 Move W1, W20
	230 Move X9, [X8+680]
	231 Move X2, [X8+688]
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Add W31, W0, 1
	234 Move W20, W0
	235 Move X0, X19
	236 Move W1, W20
	237 Call BaseTreeView.SetSelectionById, X0, X1
	238 Move X0, X19
	239 Move W1, W20
	240 Call BaseVerticalCollectionView.ScrollToItemById, X0, X1
	241 Move TEMP, 0
	242 Not TEMP
	243 Move W22, TEMP
	244 Move X0, X19
	245 Call BaseVerticalCollectionView.get_selectedIndex, X0
	246 Move X23, 0x3FD000
	247 Move X23, [X23+752]
	248 Move W20, W0
	249 Move X0, X19
	250 Call BaseTreeView.get_viewController, X0
	251 Compare X0, 0
	252 JumpIfEqual {320}
	253 Add W20, W20, W22
	254 Move W1, W20
	255 Move X2, X31
	256 Call BaseTreeViewController.HasChildrenByIndex, X0, X1
	257 Move TEMP, X20
	258 And TEMP, TEMP, -2147483648
	259 Compare TEMP, -2147483648
	260 JumpIfEqual {293}
	261 Move TEMP, X0
	262 And TEMP, TEMP, 1
	263 Compare TEMP, 1
	264 JumpIfEqual {293}
	265 Move X0, X19
	266 Call BaseTreeView.get_itemsSource, X0
	267 Compare X0, 0
	268 JumpIfEqual {320}
	269 Move X8, [X0]
	270 Move X1, [X23]
	271 Move X21, X0
	272 NotImplemented "Instruction LDRH not yet implemented."
	273 Compare X9, 0
	274 JumpIfEqual {281}
	275 Move X10, [X8+176]
	276 Add X10, X10, 8
	277 NotImplemented "Instruction LDUR not yet implemented."
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Subtract X9, X9, 1
	280 Add X10, X10, 16
	281 Move W2, 1
	282 Move X0, X21
	283 Call 0x1C5D788
	284 Move W9, [X10]
	285 Add W9, W9, 1
	286 Add X8, X8, W9
	287 Add X0, X8, 312
	288 Move X8, [X0]
	289 Move X1, [X0+8]
	290 Move X0, X21
	291 NotImplemented "Instruction BLR not yet implemented."
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Move TEMP, X0
	294 And TEMP, TEMP, 1
	295 Compare TEMP, 1
	296 JumpIfNotEqual {304}
	297 Move X0, X19
	298 Move W1, W20
	299 Call BaseVerticalCollectionView.SetSelection, X0, X1
	300 Move X0, X19
	301 Move W1, W20
	302 Call BaseVerticalCollectionView.ScrollToItem, X0, X1
	303 Move W8, 1
	304 Move W8, W31
	305 Move X20, [X31+80]
	306 Move X19, [X31+88]
	307 Move X22, [X31+64]
	308 Move X21, [X31+72]
	309 Move X24, [X31+48]
	310 Move X23, [X31+56]
	311 Move X26, [X31+32]
	312 Move X25, [X31+40]
	313 Move X28, [X31+16]
	314 Move X27, [X31+24]
	315 And W0, W8, 1
	316 Move X30, [X31+96]
	317 Return X0
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Move X0, X22
	323 Call 0x1C17F18
	324 Move W24, W31
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Call 0x3EB2AD0
	327 Move X22, [X0]
	328 Call 0x3EB2AE0
	329 Move W23, W31
	330 Compare X21, 0
	331 JumpIfNotEqual {175}
	332 Move X19, X0
	333 Move X22, X31
	334 Move X19, X0
	335 Compare X21, 0
	336 JumpIfEqual {358}
	337 Move X8, [X21]
	338 Move X1, [X25]
	339 NotImplemented "Instruction LDRH not yet implemented."
	340 Compare X9, 0
	341 JumpIfEqual {348}
	342 Move X10, [X8+176]
	343 Add X10, X10, 8
	344 NotImplemented "Instruction LDUR not yet implemented."
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Subtract X9, X9, 1
	347 Add X10, X10, 16
	348 Move X0, X21
	349 Move W2, W31
	350 Call 0x1C5D788
	351 NotImplemented "Instruction LDRSW not yet implemented."
	352 Add X8, X8, X9
	353 Add X0, X8, 312
	354 Move X8, [X0]
	355 Move X1, [X0+8]
	356 Move X0, X21
	357 NotImplemented "Instruction BLR not yet implemented."
	358 Compare X22, 0
	359 JumpIfNotEqual {362}
	360 Move X0, X19
	361 Call 0x1D2D690
	362 Move X0, X22
	363 Call 0x1C17F18
	364 Call 0x1991590

Method: System.Void SetSelectionById(System.Int32 id)

Disassembly:
	0x03CFEC7C RET
	0x03CFEC80 LDR X0, [X0 + 0x440]
	0x03CFEC84 RET
	0x03CFEC88 LDR X0, [X0 + 0x488]
	0x03CFEC8C RET
	0x03CFEC90 STP X30, X19, [X31 - 0x10]!
	0x03CFEC94 MOV X19, X0
	0x03CFEC98 LDR X0, [X0 + 0x450]
	0x03CFEC9C CBNZ X0, 0x3CFECB8
	0x03CFECA0 LDR X8, [X19]
	0x03CFECA4 MOV X0, X19
	0x03CFECA8 LDR X9, [X8 + 0x7B8]
	0x03CFECAC LDR X1, [X8 + 0x7C0]
	0x03CFECB0 BLR X9
	0x03CFECB4 LDR X0, [X19 + 0x450]
	0x03CFECB8 LDP X30, X19, [X31], #0x10
	0x03CFECBC RET
	0x03CFECC0 STP X30, X19, [X31 - 0x10]!
	0x03CFECC4 MOV X19, X0
	0x03CFECC8 LDR X0, [X0 + 0x450]
	0x03CFECCC CBNZ X0, 0x3CFECE8
	0x03CFECD0 LDR X8, [X19]
	0x03CFECD4 MOV X0, X19
	0x03CFECD8 LDR X9, [X8 + 0x7B8]
	0x03CFECDC LDR X1, [X8 + 0x7C0]
	0x03CFECE0 BLR X9
	0x03CFECE4 LDR X0, [X19 + 0x450]
	0x03CFECE8 LDP X30, X19, [X31], #0x10
	0x03CFECEC RET
	0x03CFECF0 LDR X0, [X0 + 0x448]
	0x03CFECF4 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6EA000
	007 Move X22, 0x3F7000
	008 Move W8, [X21+2033]
	009 Move X22, [X22+3672]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F7000
	017 Move X0, [X0+3672]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2033], W8
	021 Move X0, [X22]
	022 Move W1, 1
	023 Call 0x1C17D6C
	024 Compare X0, 0
	025 JumpIfEqual {40}
	026 Move W8, [X0+24]
	027 Move X1, X0
	028 Compare W8, 0
	029 JumpIfEqual {41}
	030 Move [X1+32], W19
	031 Move X0, X20
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move W2, 1
	037 Move X30, [X31+48]
	038 Call BaseTreeView.SetSelectionInternalById, X0, X1, X2
	039 Return 
	040 Call 0x1C17F20
	041 Call 0x1C17F28

Method: System.Void SetSelectionById(System.Collections.Generic.IEnumerable`1<System.Int32> ids)

Disassembly:
	0x03CFEE88 LDR X8, [X19]
	0x03CFEE8C LDR X10, [X10 + 0xFF8]

ISIL:
	001 Move W2, 1

Method: System.Void SetSelectionInternalById(System.Collections.Generic.IEnumerable`1<System.Int32> ids, System.Boolean sendNotification)

Disassembly:
	0x03CFEE90 LDRH W9, [X8 + 0x12E]
	0x03CFEE94 LDR X1, [X10]
	0x03CFEE98 CBZ X9, 0x3CFEEBC
	0x03CFEE9C LDR X10, [X8 + 0xB0]
	0x03CFEEA0 ADD X10, X10, 0x8
	0x03CFEEA4 LDUR X11, [X10 - 0x8]
	0x03CFEEA8 CMP X11, X1
	0x03CFEEAC B.EQ 0x3CFEED4
	0x03CFEEB0 SUBS X9, X9, 0x1
	0x03CFEEB4 ADD X10, X10, 0x10
	0x03CFEEB8 B.NE 0x3CFEEA4
	0x03CFEEBC MOV X0, X19
	0x03CFEEC0 MOV W2, W31
	0x03CFEEC4 BL 0x1C5C788
	0x03CFEEC8 B 0x3CFEEE0
	0x03CFEECC MOV W0, W31
	0x03CFEED0 B 0x3CFEF14
	0x03CFEED4 LDRSW X9, [X10]
	0x03CFEED8 ADD X8, X8, X9, 0x4, LSL
	0x03CFEEDC ADD X0, X8, 0x138
	0x03CFEEE0 LDP X8, X1, [X0]
	0x03CFEEE4 MOV X0, X19
	0x03CFEEE8 BLR X8
	0x03CFEEEC ADRP X8, 0x3F9000
	0x03CFEEF0 LDR X8, [X8 + 0xFD8]
	0x03CFEEF4 AND W1, W0, 0x1
	0x03CFEEF8 ADD X0, X31, 0xC
	0x03CFEEFC STRH W31, [X31 + 0xC]
	0x03CFEF00 LDR X2, [X8]
	0x03CFEF04 BL 0x242D570
	0x03CFEF08 LDRH W8, [X31 + 0xC]
	0x03CFEF0C CMP W8, 0xFF
	0x03CFEF10 CSET W0, HI
	0x03CFEF14 LDP X20, X19, [X31 + 0x10]
	0x03CFEF18 LDR X30, [X31], #0x20
	0x03CFEF1C RET
	0x03CFEF20 STR X30, [X31 - 0x30]!
	0x03CFEF24 STP X22, X21, [X31 + 0x10]
	0x03CFEF28 STP X20, X19, [X31 + 0x20]
	0x03CFEF2C ADRP X21, 0x6E9000
	0x03CFEF30 LDRB W8, [X21 + 0x7FC]
	0x03CFEF34 MOV W20, W1
	0x03CFEF38 MOV X19, X0
	0x03CFEF3C TBNZ X8, 0x0, 0x3CFEF54
	0x03CFEF40 ADRP X0, 0x464000
	0x03CFEF44 LDR X0, [X0 + 0xFF8]
	0x03CFEF48 BL 0x1C16CF4
	0x03CFEF4C MOVZ W8, 0x1
	0x03CFEF50 STRB W8, [X21 + 0x7FC]
	0x03CFEF54 LDR X8, [X19 + 0x488]
	0x03CFEF58 CBZ X8, 0x3CFF058
	0x03CFEF5C LDR X21, [X8 + 0x70]
	0x03CFEF60 CBZ X21, 0x3CFF014
	0x03CFEF64 ADRP X22, 0x464000
	0x03CFEF68 LDR X8, [X21]
	0x03CFEF6C LDR X22, [X22 + 0xFF8]
	0x03CFEF70 LDRH W9, [X8 + 0x12E]
	0x03CFEF74 LDR X1, [X22]
	0x03CFEF78 CBZ X9, 0x3CFEF9C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x6EA000
	009 Move W8, [X22+2034]
	010 Move W19, W2
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x465000
	018 Move X0, [X0+4032]
	019 Call 0x1C17CF4
	020 Move X0, 0x451000
	021 Move X0, [X0+2056]
	022 Call 0x1C17CF4
	023 Move X0, 0x451000
	024 Move X0, [X0+680]
	025 Call 0x1C17CF4
	026 Move X0, 0x3F8000
	027 Move X0, [X0+2512]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2034], W8
	031 Compare X21, 0
	032 JumpIfEqual {64}
	033 Move X8, 0x3F8000
	034 Move X8, [X8+2512]
	035 Move X22, 0x465000
	036 Move X23, 0x451000
	037 Move X24, 0x451000
	038 Move X0, [X8]
	039 Move X22, [X22+4032]
	040 Move X23, [X23+2056]
	041 Move X24, [X24+680]
	042 Call 0x1C17F10
	043 Move X2, [X22]
	044 Move X1, X20
	045 Move X3, X31
	046 Move X22, X0
	047 Call Func`2<Int32, Int32>..ctor, X0, X1, X2
	048 Move X2, [X23]
	049 Move X0, X21
	050 Move X1, X22
	051 Call Enumerable.Select, X0, X1
	052 Move X1, [X24]
	053 Call Enumerable.ToList, X0
	054 And W2, W19, 1
	055 Move X1, X0
	056 Move X0, X20
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X22, [X31+32]
	060 Move X21, [X31+40]
	061 Move X24, [X31+16]
	062 Move X23, [X31+24]
	063 Move X30, [X31+64]
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X24, [X31+16]
	069 Move X23, [X31+24]
	070 Move X30, [X31+64]
	071 Return 

Method: System.Int32 GetItemIndex(System.Int32 id, System.Boolean expand = False)

Disassembly:
	0x03CFF2C0 MOV X19, X0
	0x03CFF2C4 TBNZ X8, 0x0, 0x3CFF2DC
	0x03CFF2C8 ADRP X0, 0x3F4000
	0x03CFF2CC LDR X0, [X0 + 0x5A8]
	0x03CFF2D0 BL 0x1C16CF4
	0x03CFF2D4 MOVZ W8, 0x1
	0x03CFF2D8 STRB W8, [X20 + 0x7FD]
	0x03CFF2DC FCMP S8, 0x0
	0x03CFF2E0 B.MI 0x3CFF344
	0x03CFF2E4 ADRP X8, 0x3F4000
	0x03CFF2E8 LDR X8, [X8 + 0x5A8]
	0x03CFF2EC MOVZ W9, 0x1
	0x03CFF2F0 STRB W9, [X19 + 0x438]
	0x03CFF2F4 LDR V9, [X19 + 0x434]
	0x03CFF2F8 LDR X0, [X8]
	0x03CFF2FC LDR W8, [X0 + 0xE0]
	0x03CFF300 CBNZ W8, 0x3CFF308
	0x03CFF304 BL 0x1C16DFC
	0x03CFF308 MOVZ W8, 0x1
	0x03CFF30C FABD S0, S9, S9
	0x03CFF310 FMOV S1, W8
	0x03CFF314 FCMP S0, S1
	0x03CFF318 B.LE 0x3CFF334
	0x03CFF31C STR S8, [X19 + 0x434]
	0x03CFF320 MOV X0, X19
	0x03CFF324 LDP X20, X19, [X31 + 0x20]
	0x03CFF328 LDR X30, [X31 + 0x10]
	0x03CFF32C LDP D9, D8, [X31], #0x30
	0x03CFF330 B 0x3CFD108
	0x03CFF334 LDP X20, X19, [X31 + 0x20]
	0x03CFF338 LDR X30, [X31 + 0x10]
	0x03CFF33C LDP D9, D8, [X31], #0x30
	0x03CFF340 RET
	0x03CFF344 ADRP X0, 0x3FC000
	0x03CFF348 LDR X0, [X0 + 0x760]
	0x03CFF34C BL 0x1C16D08
	0x03CFF350 BL 0x1C16F10
	0x03CFF354 MOV X19, X0
	0x03CFF358 ADRP X0, 0x464000
	0x03CFF35C LDR X0, [X0]
	0x03CFF360 BL 0x1C16D08
	0x03CFF364 MOV X20, X0
	0x03CFF368 ADRP X0, 0x464000
	0x03CFF36C LDR X0, [X0 + 0x8]
	0x03CFF370 BL 0x1C16D08
	0x03CFF374 MOV X2, X0
	0x03CFF378 MOV X0, X19
	0x03CFF37C MOV X1, X20
	0x03CFF380 MOV X3, X31
	0x03CFF384 BL 0x3311888
	0x03CFF388 ADRP X0, 0x464000
	0x03CFF38C LDR X0, [X0 + 0x10]
	0x03CFF390 BL 0x1C16D08
	0x03CFF394 MOV X1, X0
	0x03CFF398 MOV X0, X19
	0x03CFF39C BL 0x1C16DEC
	0x03CFF3A0 LDR V0, [X0 + 0x480]
	0x03CFF3A4 RET
	0x03CFF3A8 STP X30, X21, [X31 - 0x20]!
	0x03CFF3AC STP X20, X19, [X31 + 0x10]
	0x03CFF3B0 ADRP X20, 0x6E8000
	0x03CFF3B4 ADRP X21, 0x464000
	0x03CFF3B8 LDRB W8, [X20 + 0x7FE]
	0x03CFF3BC LDR X21, [X21 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6E9000
	007 Move W8, [X22+2035]
	008 Move W21, W2
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x3F9000
	016 Move X0, [X0+2920]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2035], W8
	020 Move TEMP, X21
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {67}
	024 Move X0, X20
	025 Call BaseTreeView.get_viewController, X0
	026 Compare X0, 0
	027 JumpIfEqual {81}
	028 Move X8, [X0]
	029 Move W1, W19
	030 Move X9, [X8+680]
	031 Move X2, [X8+688]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Add W31, W0, 1
	034 Move X22, 0x3F9000
	035 Move X22, [X22+2920]
	036 Move W21, W0
	037 Move X0, [X20+1200]
	038 Compare X0, 0
	039 JumpIfEqual {81}
	040 Move X2, [X22]
	041 Move W1, W21
	042 Call List`1<Int32>.Contains, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {56}
	047 Move X0, X20
	048 Call BaseTreeView.get_viewController, X0
	049 Compare X0, 0
	050 JumpIfEqual {81}
	051 Move W3, 1
	052 Move W1, W21
	053 Move W2, W31
	054 Move X4, X31
	055 Call BaseTreeViewController.ExpandItem, X0, X1, X2, X3
	056 Move X0, X20
	057 Call BaseTreeView.get_viewController, X0
	058 Compare X0, 0
	059 JumpIfEqual {81}
	060 Move X8, [X0]
	061 Move W1, W21
	062 Move X9, [X8+680]
	063 Move X2, [X8+688]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move W21, W0
	066 Add W31, W0, 1
	067 Move X0, X20
	068 Call BaseTreeView.get_viewController, X0
	069 Compare X0, 0
	070 JumpIfEqual {81}
	071 Move X8, [X0]
	072 Move W1, W19
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X3, [X8+488]
	078 Move X2, [X8+496]
	079 Move X30, [X31+48]
	080 CallNoReturn X3
	081 Call 0x1C17F20

Method: System.Boolean IsExpanded(System.Int32 id)

Disassembly:
	0x03CFF3C0 MOV X19, X0
	0x03CFF3C4 TBNZ X8, 0x0, 0x3CFF3DC
	0x03CFF3C8 ADRP X0, 0x464000
	0x03CFF3CC LDR X0, [X0 + 0x18]
	0x03CFF3D0 BL 0x1C16CF4
	0x03CFF3D4 MOVZ W8, 0x1
	0x03CFF3D8 STRB W8, [X20 + 0x7FE]
	0x03CFF3DC LDR X1, [X21]
	0x03CFF3E0 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W19, W1
	004 Call BaseTreeView.get_viewController, X0
	005 Compare X0, 0
	006 JumpIfEqual {13}
	007 Move W1, W19
	008 Move X2, X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call BaseTreeViewController.IsExpanded, X0, X1
	012 Return X0
	013 Call 0x1C17F20

Method: System.Void CollapseItem(System.Int32 id, System.Boolean collapseAllChildren = False)

Disassembly:
	0x03CFF3E4 LDP X20, X19, [X31 + 0x10]
	0x03CFF3E8 LDP X30, X21, [X31], #0x20
	0x03CFF3EC B 0x219FCE8
	0x03CFF3F0 STP X30, X21, [X31 - 0x20]!
	0x03CFF3F4 STP X20, X19, [X31 + 0x10]
	0x03CFF3F8 ADRP X20, 0x6E8000
	0x03CFF3FC ADRP X21, 0x463000
	0x03CFF400 LDRB W8, [X20 + 0x7FF]
	0x03CFF404 LDR X21, [X21 + 0xE40]
	0x03CFF408 MOV X19, X0
	0x03CFF40C TBNZ X8, 0x0, 0x3CFF424
	0x03CFF410 ADRP X0, 0x463000
	0x03CFF414 LDR X0, [X0 + 0xE40]
	0x03CFF418 BL 0x1C16CF4
	0x03CFF41C MOVZ W8, 0x1
	0x03CFF420 STRB W8, [X20 + 0x7FF]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, W2
	006 Move W20, W1
	007 Move X19, X0
	008 Call BaseTreeView.get_viewController, X0
	009 Compare X0, 0
	010 JumpIfEqual {22}
	011 And W2, W21, 1
	012 Move W1, W20
	013 Move X3, X31
	014 Call BaseTreeViewController.CollapseItem, X0, X1, X2
	015 Move X0, X19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Move X21, [X31+40]
	020 Call BaseVerticalCollectionView.RefreshItems, X0
	021 Return 
	022 Call 0x1C17F20

Method: System.Void ExpandItem(System.Int32 id, System.Boolean expandAllChildren = False)

Disassembly:
	0x03CFF424 LDR X0, [X21]
	0x03CFF428 BL 0x1C16F10
	0x03CFF42C MOV X1, X19
	0x03CFF430 MOV X2, X31
	0x03CFF434 MOV X20, X0
	0x03CFF438 BL 0x3D934D0
	0x03CFF43C MOV X0, X20
	0x03CFF440 LDP X20, X19, [X31 + 0x10]
	0x03CFF444 LDP X30, X21, [X31], #0x20
	0x03CFF448 RET
	0x03CFF44C STP X30, X21, [X31 - 0x20]!
	0x03CFF450 STP X20, X19, [X31 + 0x10]
	0x03CFF454 ADRP X21, 0x6E8000
	0x03CFF458 LDRB W8, [X21 + 0x800]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W2
	005 Move W19, W1
	006 Call BaseTreeView.get_viewController, X0
	007 Compare X0, 0
	008 JumpIfEqual {18}
	009 And W2, W20, 1
	010 Move W1, W19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move W3, 1
	014 Move X4, X31
	015 Move X30, [X31+32]
	016 Call BaseTreeViewController.ExpandItem, X0, X1, X2, X3
	017 Return 
	018 Call 0x1C17F20

Method: System.Void OnTreeViewPointerUp(UnityEngine.UIElements.PointerUpEvent evt)

Disassembly:
	0x03CFF45C MOV W19, W1
	0x03CFF460 MOV X20, X0
	0x03CFF464 TBNZ X8, 0x0, 0x3CFF47C
	0x03CFF468 ADRP X0, 0x463000
	0x03CFF46C LDR X0, [X0 + 0xFF8]
	0x03CFF470 BL 0x1C16CF4
	0x03CFF474 MOVZ W8, 0x1
	0x03CFF478 STRB W8, [X21 + 0x800]
	0x03CFF47C LDR X0, [X20 + 0x488]
	0x03CFF480 CBZ X0, 0x3CFF4A0
	0x03CFF484 MOVZ W1, 0x1
	0x03CFF488 MOV X2, X31
	0x03CFF48C BL 0x3D9257C
	0x03CFF490 LDR X8, [X20 + 0x488]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+1088]
	003 Compare X0, 0
	004 JumpIfEqual {16}
	005 Move X8, [X0]
	006 Move X9, [X8+1896]
	007 Move X1, [X8+1904]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Compare X0, 0
	010 JumpIfEqual {16}
	011 Move X8, [X0]
	012 Move X2, [X8+584]
	013 Move X1, [X8+592]
	014 Move X30, [X31+16]
	015 CallNoReturn X2
	016 Call 0x1C17F20

Method: System.Boolean IsExpandedByIndex(System.Int32 index)

Disassembly:
	0x03CFEAF8 BL 0x1C16CF4
	0x03CFEAFC ADRP X0, 0x3F6000
	0x03CFEB00 LDR X0, [X0 + 0xE28]
	0x03CFEB04 BL 0x1C16CF4
	0x03CFEB08 MOVZ W8, 0x1
	0x03CFEB0C STRB W8, [X21 + 0x7F7]
	0x03CFEB10 CMP W20, 0x1
	0x03CFEB14 STR W20, [X19 + 0x428]
	0x03CFEB18 B.EQ 0x3CFEB30

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W19, W1
	004 Call BaseTreeView.get_viewController, X0
	005 Compare X0, 0
	006 JumpIfEqual {13}
	007 Move W1, W19
	008 Move X2, X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call BaseTreeViewController.IsExpandedByIndex, X0, X1
	012 Return X0
	013 Call 0x1C17F20

Method: System.Void CollapseItemByIndex(System.Int32 index, System.Boolean collapseAll)

Disassembly:
	0x03CFEB94 LDR X0, [X0 + 0xE28]
	0x03CFEB98 BL 0x1C16CF4
	0x03CFEB9C MOVZ W8, 0x1
	0x03CFEBA0 STRB W8, [X20 + 0x81B]
	0x03CFEBA4 LDR X8, [X19]
	0x03CFEBA8 MOV X0, X19
	0x03CFEBAC LDR X9, [X8 + 0x808]
	0x03CFEBB0 LDR X1, [X8 + 0x810]
	0x03CFEBB4 BLR X9
	0x03CFEBB8 TBZ X0, 0x0, 0x3CFEBE4
	0x03CFEBBC LDR X8, [X19 + 0x468]
	0x03CFEBC0 CBZ X8, 0x3CFEBF0
	0x03CFEBC4 LDR W8, [X8 + 0x18]
	0x03CFEBC8 CBZ W8, 0x3CFEBE4
	0x03CFEBCC MOV X0, X19
	0x03CFEBD0 BL 0x3D02E24
	0x03CFEBD4 MOV X0, X19
	0x03CFEBD8 LDP X20, X19, [X31 + 0x10]
	0x03CFEBDC LDR X30, [X31], #0x20
	0x03CFEBE0 B 0x3D034FC
	0x03CFEBE4 LDP X20, X19, [X31 + 0x10]
	0x03CFEBE8 LDR X30, [X31], #0x20
	0x03CFEBEC RET
	0x03CFEBF0 BL 0x1C16F20
	0x03CFEBF4 B 0x3CFDD8C
	0x03CFEBF8 LDR X0, [X0 + 0x470]
	0x03CFEBFC RET
	0x03CFEC00 LDR X0, [X0 + 0x468]
	0x03CFEC04 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, W2
	006 Move W20, W1
	007 Move X19, X0
	008 Call BaseTreeView.get_viewController, X0
	009 Compare X0, 0
	010 JumpIfEqual {41}
	011 Move W1, W20
	012 Move X2, X31
	013 Call BaseTreeViewController.HasChildrenByIndex, X0, X1
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {36}
	018 Move X0, X19
	019 Call BaseTreeView.get_viewController, X0
	020 Compare X0, 0
	021 JumpIfEqual {41}
	022 And W2, W21, 1
	023 Move W1, W20
	024 Move X3, X31
	025 Call BaseTreeViewController.CollapseItemByIndex, X0, X1, X2
	026 Move X0, X19
	027 Call BaseVerticalCollectionView.RefreshItems, X0
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X1, X31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call VisualElement.SaveViewData, X0
	035 Return 
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Call 0x1C17F20

Method: System.Void ExpandItemByIndex(System.Int32 index, System.Boolean expandAll)

Disassembly:
	0x03CFEB1C CBNZ W20, 0x3CFEB68
	0x03CFEB20 MOV X0, X19
	0x03CFEB24 LDP X20, X19, [X31 + 0x10]
	0x03CFEB28 LDP X30, X21, [X31], #0x20
	0x03CFEB2C B 0x3CFEB78
	0x03CFEB30 LDR X0, [X19 + 0x470]
	0x03CFEB34 CBZ X0, 0x3CFEB74
	0x03CFEB38 LDR W8, [X0 + 0x18]
	0x03CFEB3C CMP W8, 0x2
	0x03CFEB40 B.LT 0x3CFEB68
	0x03CFEB44 ADRP X8, 0x44F000
	0x03CFEB48 LDR X8, [X8 + 0xAA8]
	0x03CFEB4C LDR X1, [X8]
	0x03CFEB50 BL 0x21C2B84
	0x03CFEB54 MOV W1, W0
	0x03CFEB58 MOV X0, X19
	0x03CFEB5C LDP X20, X19, [X31 + 0x10]
	0x03CFEB60 LDP X30, X21, [X31], #0x20
	0x03CFEB64 B 0x3CFDD8C
	0x03CFEB68 LDP X20, X19, [X31 + 0x10]
	0x03CFEB6C LDP X30, X21, [X31], #0x20
	0x03CFEB70 RET
	0x03CFEB74 BL 0x1C16F20
	0x03CFEB78 STR X30, [X31 - 0x20]!
	0x03CFEB7C STP X20, X19, [X31 + 0x10]
	0x03CFEB80 ADRP X20, 0x6E9000
	0x03CFEB84 LDRB W8, [X20 + 0x81B]
	0x03CFEB88 MOV X19, X0
	0x03CFEB8C TBNZ X8, 0x0, 0x3CFEBA4
	0x03CFEB90 ADRP X0, 0x3F6000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, W2
	006 Move W20, W1
	007 Move X19, X0
	008 Call BaseTreeView.get_viewController, X0
	009 Compare X0, 0
	010 JumpIfEqual {42}
	011 Move W1, W20
	012 Move X2, X31
	013 Call BaseTreeViewController.HasChildrenByIndex, X0, X1
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {37}
	018 Move X0, X19
	019 Call BaseTreeView.get_viewController, X0
	020 Compare X0, 0
	021 JumpIfEqual {42}
	022 And W2, W21, 1
	023 Move W3, 1
	024 Move W1, W20
	025 Move X4, X31
	026 Call BaseTreeViewController.ExpandItemByIndex, X0, X1, X2, X3
	027 Move X0, X19
	028 Call BaseVerticalCollectionView.RefreshItems, X0
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X1, X31
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call VisualElement.SaveViewData, X0
	036 Return 
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03CFF494 CBZ X8, 0x3CFF564
	0x03CFF498 STR X31, [X8 + 0x70]
	0x03CFF49C STR X31, [X20 + 0x488]
	0x03CFF4A0 LDR X8, [X20]
	0x03CFF4A4 MOV X0, X20
	0x03CFF4A8 LDR X9, [X8 + 0x7E8]
	0x03CFF4AC LDR X1, [X8 + 0x7F0]
	0x03CFF4B0 BLR X9
	0x03CFF4B4 LDR X8, [X20]
	0x03CFF4B8 STR X0, [X20 + 0x488]
	0x03CFF4BC MOV X21, X0
	0x03CFF4C0 MOV X0, X20
	0x03CFF4C4 LDR X9, [X8 + 0x7F8]
	0x03CFF4C8 LDR X1, [X8 + 0x800]
	0x03CFF4CC BLR X9
	0x03CFF4D0 CBZ X21, 0x3CFF564
	0x03CFF4D4 STR X0, [X21 + 0x70]
	0x03CFF4D8 LDR X8, [X20 + 0x488]
	0x03CFF4DC CBZ X8, 0x3CFF564
	0x03CFF4E0 LDR X20, [X8 + 0x70]
	0x03CFF4E4 CBZ X20, 0x3CFF530
	0x03CFF4E8 ADRP X10, 0x463000
	0x03CFF4EC LDR X8, [X20]
	0x03CFF4F0 LDR X10, [X10 + 0xFF8]
	0x03CFF4F4 LDRH W9, [X8 + 0x12E]
	0x03CFF4F8 LDR X1, [X10]
	0x03CFF4FC CBZ X9, 0x3CFF520
	0x03CFF500 LDR X10, [X8 + 0xB0]
	0x03CFF504 ADD X10, X10, 0x8
	0x03CFF508 LDUR X11, [X10 - 0x8]
	0x03CFF50C CMP X11, X1
	0x03CFF510 B.EQ 0x3CFF53C
	0x03CFF514 SUBS X9, X9, 0x1
	0x03CFF518 ADD X10, X10, 0x10
	0x03CFF51C B.NE 0x3CFF508
	0x03CFF520 MOVZ W2, 0x1
	0x03CFF524 MOV X0, X20
	0x03CFF528 BL 0x1C5C788
	0x03CFF52C B 0x3CFF54C
	0x03CFF530 LDP X20, X19, [X31 + 0x10]
	0x03CFF534 LDP X30, X21, [X31], #0x20
	0x03CFF538 RET
	0x03CFF53C LDR W9, [X10]
	0x03CFF540 ADD W9, W9, 0x1
	0x03CFF544 ADD X8, X8, W9, 0x4, SXTW
	0x03CFF548 ADD X0, X8, 0x138
	0x03CFF54C LDP X3, X2, [X0]
	0x03CFF550 AND W1, W19, 0x1
	0x03CFF554 MOV X0, X20
	0x03CFF558 LDP X20, X19, [X31 + 0x10]
	0x03CFF55C LDP X30, X21, [X31], #0x20
	0x03CFF560 BR X3
	0x03CFF564 BL 0x1C16F20
	0x03CFF568 STR X30, [X31 - 0x50]!
	0x03CFF56C STP X26, X25, [X31 + 0x10]
	0x03CFF570 STP X24, X23, [X31 + 0x20]
	0x03CFF574 STP X22, X21, [X31 + 0x30]
	0x03CFF578 STP X20, X19, [X31 + 0x40]
	0x03CFF57C ADRP X20, 0x6E8000
	0x03CFF580 ADRP X21, 0x41E000
	0x03CFF584 LDRB W8, [X20 + 0x801]
	0x03CFF588 LDR X21, [X21 + 0xF18]
	0x03CFF58C MOV X19, X0
	0x03CFF590 TBNZ X8, 0x0, 0x3CFF6D4
	0x03CFF594 ADRP X0, 0x3F6000
	0x03CFF598 LDR X0, [X0 + 0x5B0]
	0x03CFF59C BL 0x1C16CF4
	0x03CFF5A0 ADRP X0, 0x463000
	0x03CFF5A4 LDR X0, [X0 + 0xBF0]
	0x03CFF5A8 BL 0x1C16CF4
	0x03CFF5AC ADRP X0, 0x3F5000
	0x03CFF5B0 LDR X0, [X0 + 0xE70]
	0x03CFF5B4 BL 0x1C16CF4
	0x03CFF5B8 ADRP X0, 0x464000
	0x03CFF5BC LDR X0, [X0 + 0x20]
	0x03CFF5C0 BL 0x1C16CF4
	0x03CFF5C4 ADRP X0, 0x464000
	0x03CFF5C8 LDR X0, [X0 + 0x28]
	0x03CFF5CC BL 0x1C16CF4
	0x03CFF5D0 ADRP X0, 0x464000
	0x03CFF5D4 LDR X0, [X0 + 0x30]
	0x03CFF5D8 BL 0x1C16CF4
	0x03CFF5DC ADRP X0, 0x464000
	0x03CFF5E0 LDR X0, [X0 + 0x38]
	0x03CFF5E4 BL 0x1C16CF4
	0x03CFF5E8 ADRP X0, 0x464000
	0x03CFF5EC LDR X0, [X0 + 0x40]
	0x03CFF5F0 BL 0x1C16CF4
	0x03CFF5F4 ADRP X0, 0x464000
	0x03CFF5F8 LDR X0, [X0 + 0x48]
	0x03CFF5FC BL 0x1C16CF4
	0x03CFF600 ADRP X0, 0x464000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x6E9000
	011 Move X25, 0x464000
	012 Move X19, 0x464000
	013 Move X24, 0x464000
	014 Move X23, 0x464000
	015 Move X22, 0x464000
	016 Move X21, 0x464000
	017 Move X20, 0x464000
	018 Move X25, [X25+4040]
	019 Move X19, [X19+2816]
	020 Move W8, [X26+2036]
	021 Move X24, [X24+3680]
	022 Move X23, [X23+4048]
	023 Move X22, [X22+4056]
	024 Move X21, [X21+4064]
	025 Move X20, [X20+4072]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {53}
	030 Move X0, 0x464000
	031 Move X0, [X0+2816]
	032 Call 0x1C17CF4
	033 Move X0, 0x464000
	034 Move X0, [X0+4072]
	035 Call 0x1C17CF4
	036 Move X0, 0x464000
	037 Move X0, [X0+4064]
	038 Call 0x1C17CF4
	039 Move X0, 0x464000
	040 Move X0, [X0+3680]
	041 Call 0x1C17CF4
	042 Move X0, 0x464000
	043 Move X0, [X0+4056]
	044 Call 0x1C17CF4
	045 Move X0, 0x464000
	046 Move X0, [X0+4040]
	047 Call 0x1C17CF4
	048 Move X0, 0x464000
	049 Move X0, [X0+4048]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X26+2036], W8
	053 Move X8, [X19]
	054 Move X9, [X25]
	055 Move X2, X31
	056 Move X8, [X8+184]
	057 Move [X8], X9
	058 Move X8, [X19]
	059 Move X1, [X24]
	060 Move X8, [X8+184]
	061 Move X0, [X8]
	062 Call String.Concat, X0, X1
	063 Move X8, [X19]
	064 Move X2, X31
	065 Move X8, [X8+184]
	066 Move [X8+8], X0
	067 Move X0, [X8]
	068 Move X1, [X23]
	069 Call String.Concat, X0, X1
	070 Move X8, [X19]
	071 Move X2, X31
	072 Move X8, [X8+184]
	073 Move [X8+16], X0
	074 Move X0, [X8]
	075 Move X1, [X22]
	076 Call String.Concat, X0, X1
	077 Move X8, [X19]
	078 Move X2, X31
	079 Move X8, [X8+184]
	080 Move [X8+24], X0
	081 Move X0, [X8]
	082 Move X1, [X21]
	083 Call String.Concat, X0, X1
	084 Move X8, [X19]
	085 Move X2, X31
	086 Move X8, [X8+184]
	087 Move [X8+32], X0
	088 Move X0, [X8]
	089 Move X1, [X20]
	090 Call String.Concat, X0, X1
	091 Move X8, [X19]
	092 Move X20, [X31+64]
	093 Move X19, [X31+72]
	094 Move X22, [X31+48]
	095 Move X21, [X31+56]
	096 Move X24, [X31+32]
	097 Move X23, [X31+40]
	098 Move X8, [X8+184]
	099 Move X26, [X31+16]
	100 Move X25, [X31+24]
	101 Move [X8+40], X0
	102 Move X30, [X31+80]
	103 Return 

Method: System.Int32 <SetSelectionInternalById>b__47_0(System.Int32 id)

Disassembly:
	0x03CFF604 LDR X0, [X0 + 0x50]
	0x03CFF608 BL 0x1C16CF4

ISIL:
	001 Move W2, 1
	002 Call BaseTreeView.GetItemIndex, X0, X1, X2
	003 Return X0

