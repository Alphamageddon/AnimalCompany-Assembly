Type: UnityEngine.UIElements.Columns

Method: System.String get_primaryColumnName()

Disassembly:
	0x03D75540 ADD X0, X8, 0x138
	0x03D75544 LDP X8, X2, [X0]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_primaryColumnName(System.String value)

Disassembly:
	0x03D75548 MOV X0, X21
	0x03D7554C MOV X1, X19
	0x03D75550 BLR X8
	0x03D75554 TBZ X0, 0x0, 0x3D75628
	0x03D75558 LDR X0, [X20 + 0x18]
	0x03D7555C CBZ X0, 0x3D75574
	0x03D75560 ADRP X8, 0x3F1000
	0x03D75564 LDR X8, [X8 + 0xF20]
	0x03D75568 MOV X1, X19
	0x03D7556C LDR X2, [X8]
	0x03D75570 BL 0x301D7A8
	0x03D75574 LDR X0, [X20 + 0x20]
	0x03D75578 CBZ X0, 0x3D75590
	0x03D7557C ADRP X8, 0x3F1000
	0x03D75580 LDR X8, [X8 + 0xF20]
	0x03D75584 MOV X1, X19
	0x03D75588 LDR X2, [X8]
	0x03D7558C BL 0x301D7A8
	0x03D75590 STR X31, [X19 + 0xA8]
	0x03D75594 ADRP X8, 0x3F1000
	0x03D75598 LDR X8, [X8 + 0x658]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+56]
	006 Move X2, X31
	007 Move X20, X1
	008 Call String.op_Equality, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {25}
	013 Move X8, [X19+64]
	014 Move [X19+56], X20
	015 Compare X8, 0
	016 JumpIfEqual {25}
	017 Move X3, [X8+24]
	018 Move X0, [X8+64]
	019 Move X2, [X8+40]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move W1, W31
	023 Move X30, [X31+32]
	024 CallNoReturn X3
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Boolean get_reorderable()

Disassembly:
	0x03D755B8 LDR X2, [X8]
	0x03D755BC BL 0x2A769B4

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_reorderable(System.Boolean value)

Disassembly:
	0x03D755C0 MOV X0, X19
	0x03D755C4 MOV X1, X21
	0x03D755C8 BL 0x3D6FD74
	0x03D755CC ADRP X8, 0x3F1000
	0x03D755D0 LDR X8, [X8 + 0x650]
	0x03D755D4 LDR X0, [X8]
	0x03D755D8 BL 0x1C16F10
	0x03D755DC ADRP X8, 0x3F1000
	0x03D755E0 LDR X8, [X8 + 0xEF8]
	0x03D755E4 MOV X1, X20
	0x03D755E8 MOV X3, X31
	0x03D755EC MOV X21, X0
	0x03D755F0 LDR X2, [X8]

ISIL:
	001 Move W9, [X0+48]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, [X0+64]
	005 Move [X0+48], W8
	006 Compare X9, 0
	007 JumpIfEqual {13}
	008 Move X3, [X9+24]
	009 Move X0, [X9+64]
	010 Move X2, [X9+40]
	011 Move W1, 2
	012 CallNoReturn X3
	013 Return 

Method: System.Boolean get_resizable()

Disassembly:
	0x03D755F4 BL 0x2A6B948
	0x03D755F8 MOV X0, X19

ISIL:
	001 Move W0, [X0+49]
	002 Return X0

Method: System.Void set_resizable(System.Boolean value)

Disassembly:
	0x03D755FC MOV X1, X21
	0x03D75600 BL 0x3D6FED4
	0x03D75604 LDR X8, [X20 + 0x50]
	0x03D75608 CBZ X8, 0x3D75620
	0x03D7560C LDR X9, [X8 + 0x18]
	0x03D75610 LDR X0, [X8 + 0x40]
	0x03D75614 LDR X2, [X8 + 0x28]
	0x03D75618 MOV X1, X19
	0x03D7561C BLR X9
	0x03D75620 MOVZ W0, 0x1
	0x03D75624 B 0x3D7562C
	0x03D75628 MOV W0, W31
	0x03D7562C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move W9, [X0+49]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, [X0+64]
	005 Move [X0+49], W8
	006 Compare X9, 0
	007 JumpIfEqual {13}
	008 Move X3, [X9+24]
	009 Move X0, [X9+64]
	010 Move X2, [X9+40]
	011 Move W1, 3
	012 CallNoReturn X3
	013 Return 

Method: System.Boolean get_resizePreview()

Disassembly:
	0x03D75630 LDP X30, X21, [X31], #0x20
	0x03D75634 RET

ISIL:
	001 Move W0, [X0+50]
	002 Return X0

Method: System.Void set_resizePreview(System.Boolean value)

Disassembly:
	0x03D75638 ADRP X0, 0x386000
	0x03D7563C LDR X0, [X0 + 0x578]
	0x03D75640 BL 0x1C16D08
	0x03D75644 BL 0x1C16F10
	0x03D75648 MOV X19, X0
	0x03D7564C ADRP X0, 0x3F1000
	0x03D75650 LDR X0, [X0 + 0xF28]
	0x03D75654 BL 0x1C16D08
	0x03D75658 MOV X1, X0
	0x03D7565C MOV X0, X19
	0x03D75660 MOV X2, X31
	0x03D75664 BL 0x3314A68
	0x03D75668 ADRP X0, 0x3F1000

ISIL:
	001 Move W9, [X0+50]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, [X0+64]
	005 Move [X0+50], W8
	006 Compare X9, 0
	007 JumpIfEqual {13}
	008 Move X3, [X9+24]
	009 Move X0, [X9+64]
	010 Move X2, [X9+40]
	011 Move W1, 4
	012 CallNoReturn X3
	013 Return 

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.UIElements.Column> get_displayList()

Disassembly:
	0x03D70814 BL 0x1C16F10
	0x03D70818 LDR X2, [X24]
	0x03D7081C MOV X1, X20
	0x03D70820 MOV X3, X31
	0x03D70824 MOV X21, X0
	0x03D70828 BL 0x2A6B948

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Columns.InitOrderColumns, X0
	005 Move X0, [X19+24]
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return X0

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.UIElements.Column> get_visibleList()

Disassembly:
	0x03D708DC SUBS X9, X9, 0x1
	0x03D708E0 ADD X10, X10, 0x10
	0x03D708E4 B.NE 0x3D708D0
	0x03D708E8 MOV X0, X20
	0x03D708EC MOV W2, W31
	0x03D708F0 BL 0x1C5C788

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Columns.UpdateVisibleColumns, X0
	005 Move X0, [X19+32]
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return X0

Method: System.Void add_changed(System.Action`1<UnityEngine.UIElements.ColumnsDataType> value)

Disassembly:
	0x03D758F0 B 0x3D7595C
	0x03D758F4 MOV X20, X31
	0x03D758F8 MOV W21, W31
	0x03D758FC MOVZ W23, 0x6
	0x03D75900 CBZ X19, 0x3D7595C
	0x03D75904 LDR X8, [X19]
	0x03D75908 LDR X1, [X22]
	0x03D7590C LDRH W9, [X8 + 0x12E]
	0x03D75910 CBZ X9, 0x3D75934
	0x03D75914 LDR X10, [X8 + 0xB0]
	0x03D75918 ADD X10, X10, 0x8
	0x03D7591C LDUR X11, [X10 - 0x8]
	0x03D75920 CMP X11, X1
	0x03D75924 B.EQ 0x3D75944
	0x03D75928 SUBS X9, X9, 0x1
	0x03D7592C ADD X10, X10, 0x10
	0x03D75930 B.NE 0x3D7591C
	0x03D75934 MOV X0, X19
	0x03D75938 MOV W2, W31
	0x03D7593C BL 0x1C5C788
	0x03D75940 B 0x3D75950
	0x03D75944 LDRSW X9, [X10]
	0x03D75948 ADD X8, X8, X9, 0x4, LSL
	0x03D7594C ADD X0, X8, 0x138
	0x03D75950 LDP X8, X1, [X0]
	0x03D75954 MOV X0, X19
	0x03D75958 BLR X8
	0x03D7595C CBNZ X20, 0x3D75994
	0x03D75960 CMP W23, 0x6
	0x03D75964 B.EQ 0x3D7596C
	0x03D75968 CBNZ W23, 0x3D75970
	0x03D7596C MOV W21, W31
	0x03D75970 AND W0, W21, 0x1
	0x03D75974 LDP X20, X19, [X31 + 0x30]
	0x03D75978 LDP X22, X21, [X31 + 0x20]
	0x03D7597C LDP X24, X23, [X31 + 0x10]
	0x03D75980 LDR X30, [X31], #0x40
	0x03D75984 RET
	0x03D75988 BL 0x1C16F20
	0x03D7598C BL 0x1C16F20
	0x03D75990 BL 0x1C16F20
	0x03D75994 MOV X0, X20
	0x03D75998 BL 0x1C16F18
	0x03D7599C B 0x3D759AC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x673000
	009 Move W8, [X21+3390]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F2000
	017 Move X0, [X0+3816]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3390], W8
	021 Move X24, 0x3F2000
	022 Add X20, X20, 64
	023 Move X21, [X20]
	024 Move X24, [X24+3816]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_changed(System.Action`1<UnityEngine.UIElements.ColumnsDataType> value)

Disassembly:
	0x03D759A0 B 0x3D759AC
	0x03D759A4 B 0x3D759AC
	0x03D759A8 B 0x3D759AC
	0x03D759AC MOV X21, X0
	0x03D759B0 CMP W1, 0x1
	0x03D759B4 B.NE 0x3D759D8
	0x03D759B8 MOV X0, X21
	0x03D759BC BL 0x3EB1AD0
	0x03D759C0 LDR X20, [X0]
	0x03D759C4 BL 0x3EB1AE0
	0x03D759C8 MOV W23, W31
	0x03D759CC MOV W21, W31
	0x03D759D0 CBNZ X19, 0x3D75904
	0x03D759D4 B 0x3D7595C
	0x03D759D8 MOV X20, X31
	0x03D759DC B 0x3D759E4
	0x03D759E0 MOV X21, X0
	0x03D759E4 CBZ X19, 0x3D75A40
	0x03D759E8 LDR X8, [X19]
	0x03D759EC LDR X1, [X22]
	0x03D759F0 LDRH W9, [X8 + 0x12E]
	0x03D759F4 CBZ X9, 0x3D75A18
	0x03D759F8 LDR X10, [X8 + 0xB0]
	0x03D759FC ADD X10, X10, 0x8
	0x03D75A00 LDUR X11, [X10 - 0x8]
	0x03D75A04 CMP X11, X1
	0x03D75A08 B.EQ 0x3D75A28
	0x03D75A0C SUBS X9, X9, 0x1
	0x03D75A10 ADD X10, X10, 0x10
	0x03D75A14 B.NE 0x3D75A00
	0x03D75A18 MOV X0, X19
	0x03D75A1C MOV W2, W31
	0x03D75A20 BL 0x1C5C788
	0x03D75A24 B 0x3D75A34
	0x03D75A28 LDRSW X9, [X10]
	0x03D75A2C ADD X8, X8, X9, 0x4, LSL
	0x03D75A30 ADD X0, X8, 0x138
	0x03D75A34 LDP X8, X1, [X0]
	0x03D75A38 MOV X0, X19
	0x03D75A3C BLR X8
	0x03D75A40 CBNZ X20, 0x3D75A4C
	0x03D75A44 MOV X0, X21
	0x03D75A48 BL 0x1D2C690
	0x03D75A4C MOV X0, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x673000
	009 Move W8, [X21+3391]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F2000
	017 Move X0, [X0+3816]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3391], W8
	021 Move X24, 0x3F2000
	022 Add X20, X20, 64
	023 Move X21, [X20]
	024 Move X24, [X24+3816]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: UnityEngine.UIElements.Columns/StretchMode get_stretchMode()

Disassembly:
	0x03D75A50 BL 0x1C16F18
	0x03D75A54 BL 0x1990590

ISIL:
	001 Move W0, [X0+44]
	002 Return X0

Method: System.Void set_stretchMode(UnityEngine.UIElements.Columns/StretchMode value)

Disassembly:
	0x03D75A58 STR X30, [X31 - 0x30]!
	0x03D75A5C STP X22, X21, [X31 + 0x10]
	0x03D75A60 STP X20, X19, [X31 + 0x20]
	0x03D75A64 ADRP X22, 0x672000
	0x03D75A68 LDRB W8, [X22 + 0xD4F]
	0x03D75A6C MOV W19, W2
	0x03D75A70 MOV X20, X1
	0x03D75A74 MOV X21, X0
	0x03D75A78 TBNZ X8, 0x0, 0x3D75A90
	0x03D75A7C ADRP X0, 0x3F1000
	0x03D75A80 LDR X0, [X0 + 0xDA8]
	0x03D75A84 BL 0x1C16CF4

ISIL:
	001 Move W8, [X0+44]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X8, [X0+64]
	004 Move [X0+44], W1
	005 Compare X8, 0
	006 JumpIfEqual {12}
	007 Move X3, [X8+24]
	008 Move X0, [X8+64]
	009 Move X2, [X8+40]
	010 Move W1, 1
	011 CallNoReturn X3
	012 Return 

Method: System.Void add_columnAdded(System.Action`2<UnityEngine.UIElements.Column, System.Int32> value)

Disassembly:
	0x03D71AA4 MOV X22, X31
	0x03D71AA8 ADRP X8, 0x3F5000
	0x03D71AAC LDR X8, [X8 + 0xDF8]
	0x03D71AB0 LDR X1, [X8]
	0x03D71AB4 ADD X0, X31, 0x40
	0x03D71AB8 BL 0x24A6D20
	0x03D71ABC CBNZ X22, 0x3D71B04
	0x03D71AC0 CMP W20, 0x1
	0x03D71AC4 B.NE 0x3D71AF4
	0x03D71AC8 MOV X0, X21
	0x03D71ACC BL 0x3EB1AD0
	0x03D71AD0 LDR X20, [X0]
	0x03D71AD4 BL 0x3EB1AE0
	0x03D71AD8 ADRP X8, 0x3F5000
	0x03D71ADC LDR X8, [X8 + 0xDF8]
	0x03D71AE0 ADD X0, X31, 0x58
	0x03D71AE4 LDR X1, [X8]
	0x03D71AE8 BL 0x24A6D20
	0x03D71AEC CBZ X20, 0x3D71960
	0x03D71AF0 B 0x3D71BBC
	0x03D71AF4 MOV X20, X31
	0x03D71AF8 B 0x3D71B28
	0x03D71AFC MOV X0, X22
	0x03D71B00 BL 0x1C16F18
	0x03D71B04 MOV X0, X22
	0x03D71B08 BL 0x1C16F18
	0x03D71B0C MOV X20, X1
	0x03D71B10 MOV X21, X0
	0x03D71B14 B 0x3D71AA8
	0x03D71B18 MOV X20, X1
	0x03D71B1C MOV X21, X0
	0x03D71B20 B 0x3D71A6C
	0x03D71B24 MOV X21, X0
	0x03D71B28 ADRP X8, 0x3F5000
	0x03D71B2C LDR X8, [X8 + 0xDF8]
	0x03D71B30 LDR X1, [X8]
	0x03D71B34 ADD X0, X31, 0x58
	0x03D71B38 BL 0x24A6D20
	0x03D71B3C CBZ X20, 0x3D71D00
	0x03D71B40 MOV X0, X20
	0x03D71B44 BL 0x1C16F18
	0x03D71B48 B 0x3D71C68
	0x03D71B4C B 0x3D71C68
	0x03D71B50 B 0x3D71C68

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x677000
	009 Move W8, [X21+3392]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F6000
	017 Move X0, [X0+1632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3392], W8
	021 Move X24, 0x3F6000
	022 Add X20, X20, 72
	023 Move X21, [X20]
	024 Move X24, [X24+1632]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_columnAdded(System.Action`2<UnityEngine.UIElements.Column, System.Int32> value)

Disassembly:
	0x03D75A88 MOVZ W8, 0x1
	0x03D75A8C STRB W8, [X22 + 0xD4F]
	0x03D75A90 LDR X21, [X21 + 0x10]
	0x03D75A94 CBZ X21, 0x3D75B10
	0x03D75A98 ADRP X10, 0x3F1000
	0x03D75A9C LDR X8, [X21]
	0x03D75AA0 LDR X10, [X10 + 0xDA8]
	0x03D75AA4 LDRH W9, [X8 + 0x12E]
	0x03D75AA8 LDR X1, [X10]
	0x03D75AAC CBZ X9, 0x3D75AD0
	0x03D75AB0 LDR X10, [X8 + 0xB0]
	0x03D75AB4 ADD X10, X10, 0x8
	0x03D75AB8 LDUR X11, [X10 - 0x8]
	0x03D75ABC CMP X11, X1
	0x03D75AC0 B.EQ 0x3D75AE0
	0x03D75AC4 SUBS X9, X9, 0x1
	0x03D75AC8 ADD X10, X10, 0x10
	0x03D75ACC B.NE 0x3D75AB8
	0x03D75AD0 MOVZ W2, 0x5
	0x03D75AD4 MOV X0, X21
	0x03D75AD8 BL 0x1C5C788
	0x03D75ADC B 0x3D75AF0
	0x03D75AE0 LDR W9, [X10]
	0x03D75AE4 ADD W9, W9, 0x5
	0x03D75AE8 ADD X8, X8, W9, 0x4, SXTW
	0x03D75AEC ADD X0, X8, 0x138
	0x03D75AF0 LDP X4, X3, [X0]
	0x03D75AF4 MOV X0, X21
	0x03D75AF8 MOV X1, X20
	0x03D75AFC MOV W2, W19
	0x03D75B00 LDP X20, X19, [X31 + 0x20]
	0x03D75B04 LDP X22, X21, [X31 + 0x10]
	0x03D75B08 LDR X30, [X31], #0x30
	0x03D75B0C BR X4
	0x03D75B10 BL 0x1C16F20
	0x03D75B14 STP X30, X21, [X31 - 0x20]!
	0x03D75B18 STP X20, X19, [X31 + 0x10]
	0x03D75B1C MOV W19, W2
	0x03D75B20 MOV X20, X1
	0x03D75B24 CMP W2, 0x3
	0x03D75B28 MOV X21, X0
	0x03D75B2C B.NE 0x3D75B38
	0x03D75B30 MOV X0, X21
	0x03D75B34 BL 0x3D75B6C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x673000
	009 Move W8, [X21+3393]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F2000
	017 Move X0, [X0+1632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3393], W8
	021 Move X24, 0x3F2000
	022 Add X20, X20, 72
	023 Move X21, [X20]
	024 Move X24, [X24+1632]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_columnRemoved(System.Action`1<UnityEngine.UIElements.Column> value)

Disassembly:
	0x03D71B54 FMOV S9, W31
	0x03D71B58 FMOV S11, W31
	0x03D71B5C B 0x3D71C68
	0x03D71B60 B 0x3D71B88
	0x03D71B64 B 0x3D71BF0
	0x03D71B68 B 0x3D71B88
	0x03D71B6C B 0x3D71BF0
	0x03D71B70 B 0x3D71C68
	0x03D71B74 B 0x3D71B88
	0x03D71B78 B 0x3D71B88
	0x03D71B7C B 0x3D71B88
	0x03D71B80 B 0x3D71BF0
	0x03D71B84 B 0x3D71BF0
	0x03D71B88 MOV X21, X0
	0x03D71B8C CMP W1, 0x1
	0x03D71B90 B.NE 0x3D71BC4
	0x03D71B94 MOV X0, X21
	0x03D71B98 BL 0x3EB1AD0
	0x03D71B9C LDR X20, [X0]
	0x03D71BA0 BL 0x3EB1AE0
	0x03D71BA4 ADRP X8, 0x3AC000
	0x03D71BA8 LDR X8, [X8 + 0xB80]
	0x03D71BAC ADD X0, X31, 0x70
	0x03D71BB0 LDR X1, [X8]
	0x03D71BB4 BL 0x2BC434C
	0x03D71BB8 CBZ X20, 0x3D71788
	0x03D71BBC MOV X0, X20
	0x03D71BC0 BL 0x1C16F18
	0x03D71BC4 MOV X20, X31
	0x03D71BC8 B 0x3D71BD0
	0x03D71BCC MOV X21, X0
	0x03D71BD0 ADRP X8, 0x3AC000
	0x03D71BD4 LDR X8, [X8 + 0xB80]
	0x03D71BD8 LDR X1, [X8]
	0x03D71BDC ADD X0, X31, 0x70
	0x03D71BE0 BL 0x2BC434C
	0x03D71BE4 CBZ X20, 0x3D71D00
	0x03D71BE8 MOV X0, X20
	0x03D71BEC BL 0x1C16F18
	0x03D71BF0 MOV X21, X0
	0x03D71BF4 CMP W1, 0x1
	0x03D71BF8 B.NE 0x3D71C2C
	0x03D71BFC MOV X0, X21
	0x03D71C00 BL 0x3EB1AD0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x677000
	009 Move W8, [X21+3394]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F6000
	017 Move X0, [X0+1616]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3394], W8
	021 Move X24, 0x3F6000
	022 Add X20, X20, 80
	023 Move X21, [X20]
	024 Move X24, [X24+1616]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_columnRemoved(System.Action`1<UnityEngine.UIElements.Column> value)

Disassembly:
	0x03D75B38 LDR X8, [X21 + 0x58]
	0x03D75B3C CBZ X8, 0x3D75B60
	0x03D75B40 LDR X4, [X8 + 0x18]
	0x03D75B44 LDR X0, [X8 + 0x40]
	0x03D75B48 LDR X3, [X8 + 0x28]
	0x03D75B4C MOV X1, X20
	0x03D75B50 MOV W2, W19
	0x03D75B54 LDP X20, X19, [X31 + 0x10]
	0x03D75B58 LDP X30, X21, [X31], #0x20
	0x03D75B5C BR X4
	0x03D75B60 LDP X20, X19, [X31 + 0x10]
	0x03D75B64 LDP X30, X21, [X31], #0x20
	0x03D75B68 RET
	0x03D75B6C STR X30, [X31 - 0x20]!
	0x03D75B70 STP X20, X19, [X31 + 0x10]
	0x03D75B74 ADRP X20, 0x672000
	0x03D75B78 LDRB W8, [X20 + 0xD59]
	0x03D75B7C MOV X19, X0
	0x03D75B80 TBNZ X8, 0x0, 0x3D75B98
	0x03D75B84 ADRP X0, 0x3F1000
	0x03D75B88 LDR X0, [X0 + 0xDB0]
	0x03D75B8C BL 0x1C16CF4
	0x03D75B90 MOVZ W8, 0x1
	0x03D75B94 STRB W8, [X20 + 0xD59]
	0x03D75B98 LDR X8, [X19 + 0x20]
	0x03D75B9C MOVZ W9, 0x1
	0x03D75BA0 STRB W9, [X19 + 0x28]
	0x03D75BA4 CBZ X8, 0x3D75BD4
	0x03D75BA8 LDP W2, W9, [X8 + 0x18]
	0x03D75BAC ADD W9, W9, 0x1
	0x03D75BB0 CMP W2, 0x1
	0x03D75BB4 STP W31, W9, [X8 + 0x18]
	0x03D75BB8 B.LT 0x3D75BD4
	0x03D75BBC LDR X0, [X8 + 0x10]
	0x03D75BC0 LDP X20, X19, [X31 + 0x10]
	0x03D75BC4 MOV W1, W31
	0x03D75BC8 MOV X3, X31
	0x03D75BCC LDR X30, [X31], #0x20
	0x03D75BD0 B 0x339FA34
	0x03D75BD4 LDP X20, X19, [X31 + 0x10]
	0x03D75BD8 LDR X30, [X31], #0x20
	0x03D75BDC RET
	0x03D75BE0 LDR X8, [X0 + 0x60]
	0x03D75BE4 CBZ X8, 0x3D75BF8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x673000
	009 Move W8, [X21+3395]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F2000
	017 Move X0, [X0+1616]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3395], W8
	021 Move X24, 0x3F2000
	022 Add X20, X20, 80
	023 Move X21, [X20]
	024 Move X24, [X24+1616]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_columnChanged(System.Action`2<UnityEngine.UIElements.Column, UnityEngine.UIElements.ColumnDataType> value)

Disassembly:
	0x03D75BE8 LDR X3, [X8 + 0x18]
	0x03D75BEC LDR X0, [X8 + 0x40]
	0x03D75BF0 LDR X2, [X8 + 0x28]
	0x03D75BF4 BR X3
	0x03D75BF8 RET
	0x03D75BFC STR X30, [X31 - 0x20]!
	0x03D75C00 STP X20, X19, [X31 + 0x10]
	0x03D75C04 ADRP X20, 0x672000
	0x03D75C08 LDRB W8, [X20 + 0xD52]
	0x03D75C0C MOV X19, X0
	0x03D75C10 TBNZ X8, 0x0, 0x3D75C28
	0x03D75C14 ADRP X0, 0x3F1000
	0x03D75C18 LDR X0, [X0 + 0xDA8]
	0x03D75C1C BL 0x1C16CF4
	0x03D75C20 MOVZ W8, 0x1
	0x03D75C24 STRB W8, [X20 + 0xD52]
	0x03D75C28 LDR X19, [X19 + 0x10]
	0x03D75C2C CBZ X19, 0x3D75C9C
	0x03D75C30 ADRP X10, 0x3F1000
	0x03D75C34 LDR X8, [X19]
	0x03D75C38 LDR X10, [X10 + 0xDA8]
	0x03D75C3C LDRH W9, [X8 + 0x12E]
	0x03D75C40 LDR X1, [X10]
	0x03D75C44 CBZ X9, 0x3D75C68
	0x03D75C48 LDR X10, [X8 + 0xB0]
	0x03D75C4C ADD X10, X10, 0x8
	0x03D75C50 LDUR X11, [X10 - 0x8]
	0x03D75C54 CMP X11, X1
	0x03D75C58 B.EQ 0x3D75C78
	0x03D75C5C SUBS X9, X9, 0x1
	0x03D75C60 ADD X10, X10, 0x10
	0x03D75C64 B.NE 0x3D75C50
	0x03D75C68 MOVZ W2, 0x1
	0x03D75C6C MOV X0, X19
	0x03D75C70 BL 0x1C5C788
	0x03D75C74 B 0x3D75C88
	0x03D75C78 LDR W9, [X10]
	0x03D75C7C ADD W9, W9, 0x1
	0x03D75C80 ADD X8, X8, W9, 0x4, SXTW
	0x03D75C84 ADD X0, X8, 0x138
	0x03D75C88 LDP X2, X1, [X0]
	0x03D75C8C MOV X0, X19
	0x03D75C90 LDP X20, X19, [X31 + 0x10]
	0x03D75C94 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x673000
	009 Move W8, [X21+3396]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F2000
	017 Move X0, [X0+1624]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3396], W8
	021 Move X24, 0x3F2000
	022 Add X20, X20, 88
	023 Move X21, [X20]
	024 Move X24, [X24+1624]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_columnChanged(System.Action`2<UnityEngine.UIElements.Column, UnityEngine.UIElements.ColumnDataType> value)

Disassembly:
	0x03D75C98 BR X2
	0x03D75C9C BL 0x1C16F20
	0x03D75CA0 STR X30, [X31 - 0x40]!
	0x03D75CA4 STP X24, X23, [X31 + 0x10]
	0x03D75CA8 STP X22, X21, [X31 + 0x20]
	0x03D75CAC STP X20, X19, [X31 + 0x30]
	0x03D75CB0 ADRP X21, 0x672000
	0x03D75CB4 LDRB W8, [X21 + 0xD56]
	0x03D75CB8 MOV X20, X1
	0x03D75CBC MOV X19, X0
	0x03D75CC0 TBNZ X8, 0x0, 0x3D75CFC
	0x03D75CC4 ADRP X0, 0x37E000
	0x03D75CC8 LDR X0, [X0 + 0xE00]
	0x03D75CCC BL 0x1C16CF4
	0x03D75CD0 ADRP X0, 0x3A7000
	0x03D75CD4 LDR X0, [X0 + 0x110]
	0x03D75CD8 BL 0x1C16CF4
	0x03D75CDC ADRP X0, 0x3A7000
	0x03D75CE0 LDR X0, [X0 + 0x118]
	0x03D75CE4 BL 0x1C16CF4
	0x03D75CE8 ADRP X0, 0x37E000
	0x03D75CEC LDR X0, [X0 + 0xE18]
	0x03D75CF0 BL 0x1C16CF4
	0x03D75CF4 MOVZ W8, 0x1
	0x03D75CF8 STRB W8, [X21 + 0xD56]
	0x03D75CFC LDR X19, [X19 + 0x10]
	0x03D75D00 CBZ X19, 0x3D75EFC
	0x03D75D04 ADRP X10, 0x3A7000
	0x03D75D08 LDR X8, [X19]
	0x03D75D0C LDR X10, [X10 + 0x110]
	0x03D75D10 LDRH W9, [X8 + 0x12E]
	0x03D75D14 LDR X1, [X10]
	0x03D75D18 CBZ X9, 0x3D75D3C
	0x03D75D1C LDR X10, [X8 + 0xB0]
	0x03D75D20 ADD X10, X10, 0x8
	0x03D75D24 LDUR X11, [X10 - 0x8]
	0x03D75D28 CMP X11, X1
	0x03D75D2C B.EQ 0x3D75D4C
	0x03D75D30 SUBS X9, X9, 0x1
	0x03D75D34 ADD X10, X10, 0x10
	0x03D75D38 B.NE 0x3D75D24
	0x03D75D3C MOV X0, X19
	0x03D75D40 MOV W2, W31
	0x03D75D44 BL 0x1C5C788

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x673000
	009 Move W8, [X21+3397]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F2000
	017 Move X0, [X0+1624]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3397], W8
	021 Move X24, 0x3F2000
	022 Add X20, X20, 88
	023 Move X21, [X20]
	024 Move X24, [X24+1624]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_columnResized(System.Action`1<UnityEngine.UIElements.Column> value)

Disassembly:
	0x03D75D48 B 0x3D75D58
	0x03D75D4C LDRSW X9, [X10]
	0x03D75D50 ADD X8, X8, X9, 0x4, LSL
	0x03D75D54 ADD X0, X8, 0x138
	0x03D75D58 LDP X8, X1, [X0]
	0x03D75D5C ADRP X22, 0x37E000
	0x03D75D60 LDR X22, [X22 + 0xE00]
	0x03D75D64 MOV X0, X19
	0x03D75D68 BLR X8
	0x03D75D6C MOV X19, X0
	0x03D75D70 CBZ X0, 0x3D75F00
	0x03D75D74 ADRP X23, 0x37E000
	0x03D75D78 ADRP X24, 0x3A7000
	0x03D75D7C LDR X23, [X23 + 0xE18]
	0x03D75D80 LDR X24, [X24 + 0x118]
	0x03D75D84 LDR X8, [X19]
	0x03D75D88 LDR X1, [X23]
	0x03D75D8C LDRH W9, [X8 + 0x12E]
	0x03D75D90 CBZ X9, 0x3D75DB4
	0x03D75D94 LDR X10, [X8 + 0xB0]
	0x03D75D98 ADD X10, X10, 0x8
	0x03D75D9C LDUR X11, [X10 - 0x8]
	0x03D75DA0 CMP X11, X1
	0x03D75DA4 B.EQ 0x3D75DC4
	0x03D75DA8 SUBS X9, X9, 0x1
	0x03D75DAC ADD X10, X10, 0x10
	0x03D75DB0 B.NE 0x3D75D9C
	0x03D75DB4 MOV X0, X19
	0x03D75DB8 MOV W2, W31
	0x03D75DBC BL 0x1C5C788
	0x03D75DC0 B 0x3D75DD0
	0x03D75DC4 LDRSW X9, [X10]
	0x03D75DC8 ADD X8, X8, X9, 0x4, LSL
	0x03D75DCC ADD X0, X8, 0x138
	0x03D75DD0 LDP X8, X1, [X0]
	0x03D75DD4 MOV X0, X19
	0x03D75DD8 BLR X8
	0x03D75DDC TBZ X0, 0x0, 0x3D75E64
	0x03D75DE0 LDR X8, [X19]
	0x03D75DE4 LDR X1, [X24]
	0x03D75DE8 LDRH W9, [X8 + 0x12E]
	0x03D75DEC CBZ X9, 0x3D75E10
	0x03D75DF0 LDR X10, [X8 + 0xB0]
	0x03D75DF4 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x673000
	009 Move W8, [X21+3398]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F2000
	017 Move X0, [X0+1616]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3398], W8
	021 Move X24, 0x3F2000
	022 Add X20, X20, 96
	023 Move X21, [X20]
	024 Move X24, [X24+1616]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_columnResized(System.Action`1<UnityEngine.UIElements.Column> value)

Disassembly:
	0x03D75DF8 LDUR X11, [X10 - 0x8]
	0x03D75DFC CMP X11, X1
	0x03D75E00 B.EQ 0x3D75E20
	0x03D75E04 SUBS X9, X9, 0x1
	0x03D75E08 ADD X10, X10, 0x10
	0x03D75E0C B.NE 0x3D75DF8
	0x03D75E10 MOV X0, X19
	0x03D75E14 MOV W2, W31
	0x03D75E18 BL 0x1C5C788
	0x03D75E1C B 0x3D75E2C
	0x03D75E20 LDRSW X9, [X10]
	0x03D75E24 ADD X8, X8, X9, 0x4, LSL
	0x03D75E28 ADD X0, X8, 0x138
	0x03D75E2C LDP X8, X1, [X0]
	0x03D75E30 MOV X0, X19
	0x03D75E34 BLR X8
	0x03D75E38 MOV X21, X0
	0x03D75E3C CBZ X0, 0x3D75EF8
	0x03D75E40 LDR X0, [X21 + 0x10]
	0x03D75E44 MOV X1, X20
	0x03D75E48 MOV X2, X31
	0x03D75E4C BL 0x321BA08
	0x03D75E50 TBZ X0, 0x0, 0x3D75D84
	0x03D75E54 MOV X20, X31
	0x03D75E58 MOVZ W23, 0x5
	0x03D75E5C CBNZ X19, 0x3D75E74
	0x03D75E60 B 0x3D75ECC
	0x03D75E64 MOV X20, X31
	0x03D75E68 MOV X21, X31
	0x03D75E6C MOVZ W23, 0x6
	0x03D75E70 CBZ X19, 0x3D75ECC
	0x03D75E74 LDR X8, [X19]
	0x03D75E78 LDR X1, [X22]
	0x03D75E7C LDRH W9, [X8 + 0x12E]
	0x03D75E80 CBZ X9, 0x3D75EA4
	0x03D75E84 LDR X10, [X8 + 0xB0]
	0x03D75E88 ADD X10, X10, 0x8
	0x03D75E8C LDUR X11, [X10 - 0x8]
	0x03D75E90 CMP X11, X1
	0x03D75E94 B.EQ 0x3D75EB4
	0x03D75E98 SUBS X9, X9, 0x1
	0x03D75E9C ADD X10, X10, 0x10
	0x03D75EA0 B.NE 0x3D75E8C
	0x03D75EA4 MOV X0, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x673000
	009 Move W8, [X21+3399]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F2000
	017 Move X0, [X0+1616]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3399], W8
	021 Move X24, 0x3F2000
	022 Add X20, X20, 96
	023 Move X21, [X20]
	024 Move X24, [X24+1616]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_columnReordered(System.Action`3<UnityEngine.UIElements.Column, System.Int32, System.Int32> value)

Disassembly:
	0x03D71C04 LDR X22, [X0]
	0x03D71C08 BL 0x3EB1AE0
	0x03D71C0C ADRP X8, 0x3AC000
	0x03D71C10 LDR X8, [X8 + 0xB80]
	0x03D71C14 ADD X0, X31, 0x90
	0x03D71C18 LDR X1, [X8]
	0x03D71C1C BL 0x2BC434C
	0x03D71C20 CBZ X22, 0x3D71644
	0x03D71C24 MOV X0, X22
	0x03D71C28 BL 0x1C16F18
	0x03D71C2C MOV X22, X31
	0x03D71C30 B 0x3D71C38
	0x03D71C34 MOV X21, X0
	0x03D71C38 ADRP X8, 0x3AC000
	0x03D71C3C LDR X8, [X8 + 0xB80]
	0x03D71C40 LDR X1, [X8]
	0x03D71C44 ADD X0, X31, 0x90
	0x03D71C48 BL 0x2BC434C
	0x03D71C4C CBZ X22, 0x3D71D00
	0x03D71C50 MOV X0, X22
	0x03D71C54 BL 0x1C16F18
	0x03D71C58 B 0x3D71C68
	0x03D71C5C B 0x3D71C68
	0x03D71C60 B 0x3D71C68
	0x03D71C64 B 0x3D71C68
	0x03D71C68 CMP W1, 0x1
	0x03D71C6C B.NE 0x3D71C88
	0x03D71C70 BL 0x3EB1AD0
	0x03D71C74 LDR X23, [X0]
	0x03D71C78 BL 0x3EB1AE0
	0x03D71C7C MOV W24, W31
	0x03D71C80 CBNZ X22, 0x3D7143C
	0x03D71C84 B 0x3D7149C
	0x03D71C88 MOV X21, X0
	0x03D71C8C MOV X23, X31
	0x03D71C90 B 0x3D71C98
	0x03D71C94 MOV X21, X0
	0x03D71C98 CBZ X22, 0x3D71CFC
	0x03D71C9C LDR X8, [X22]
	0x03D71CA0 ADRP X10, 0x382000
	0x03D71CA4 LDRH W9, [X8 + 0x12E]
	0x03D71CA8 LDR X10, [X10 + 0xE00]
	0x03D71CAC LDR X1, [X10]
	0x03D71CB0 CBZ X9, 0x3D71CD4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x677000
	009 Move W8, [X21+3400]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F6000
	017 Move X0, [X0+1640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3400], W8
	021 Move X24, 0x3F6000
	022 Add X20, X20, 104
	023 Move X21, [X20]
	024 Move X24, [X24+1640]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_columnReordered(System.Action`3<UnityEngine.UIElements.Column, System.Int32, System.Int32> value)

Disassembly:
	0x03D75EA8 MOV W2, W31
	0x03D75EAC BL 0x1C5C788
	0x03D75EB0 B 0x3D75EC0
	0x03D75EB4 LDRSW X9, [X10]
	0x03D75EB8 ADD X8, X8, X9, 0x4, LSL
	0x03D75EBC ADD X0, X8, 0x138
	0x03D75EC0 LDP X8, X1, [X0]
	0x03D75EC4 MOV X0, X19
	0x03D75EC8 BLR X8
	0x03D75ECC CBNZ X20, 0x3D75F04
	0x03D75ED0 CMP W23, 0x6
	0x03D75ED4 B.EQ 0x3D75EDC
	0x03D75ED8 CBNZ W23, 0x3D75EE0
	0x03D75EDC MOV X21, X31
	0x03D75EE0 MOV X0, X21
	0x03D75EE4 LDP X20, X19, [X31 + 0x30]
	0x03D75EE8 LDP X22, X21, [X31 + 0x20]
	0x03D75EEC LDP X24, X23, [X31 + 0x10]
	0x03D75EF0 LDR X30, [X31], #0x40
	0x03D75EF4 RET
	0x03D75EF8 BL 0x1C16F20
	0x03D75EFC BL 0x1C16F20
	0x03D75F00 BL 0x1C16F20
	0x03D75F04 MOV X0, X20
	0x03D75F08 BL 0x1C16F18
	0x03D75F0C B 0x3D75F1C
	0x03D75F10 B 0x3D75F1C
	0x03D75F14 B 0x3D75F1C
	0x03D75F18 B 0x3D75F1C
	0x03D75F1C MOV X21, X0
	0x03D75F20 CMP W1, 0x1
	0x03D75F24 B.NE 0x3D75F48
	0x03D75F28 MOV X0, X21
	0x03D75F2C BL 0x3EB1AD0
	0x03D75F30 LDR X20, [X0]
	0x03D75F34 BL 0x3EB1AE0
	0x03D75F38 MOV W23, W31
	0x03D75F3C MOV X21, X31
	0x03D75F40 CBNZ X19, 0x3D75E74
	0x03D75F44 B 0x3D75ECC
	0x03D75F48 MOV X20, X31
	0x03D75F4C B 0x3D75F54
	0x03D75F50 MOV X21, X0
	0x03D75F54 CBZ X19, 0x3D75FB0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x673000
	009 Move W8, [X21+3401]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F2000
	017 Move X0, [X0+1640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3401], W8
	021 Move X24, 0x3F2000
	022 Add X20, X20, 104
	023 Move X21, [X20]
	024 Move X24, [X24+1640]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Boolean IsPrimary(UnityEngine.UIElements.Column column)

Disassembly:
	0x03D75F58 LDR X8, [X19]
	0x03D75F5C LDR X1, [X22]
	0x03D75F60 LDRH W9, [X8 + 0x12E]
	0x03D75F64 CBZ X9, 0x3D75F88
	0x03D75F68 LDR X10, [X8 + 0xB0]
	0x03D75F6C ADD X10, X10, 0x8
	0x03D75F70 LDUR X11, [X10 - 0x8]
	0x03D75F74 CMP X11, X1
	0x03D75F78 B.EQ 0x3D75F98
	0x03D75F7C SUBS X9, X9, 0x1
	0x03D75F80 ADD X10, X10, 0x10
	0x03D75F84 B.NE 0x3D75F70
	0x03D75F88 MOV X0, X19
	0x03D75F8C MOV W2, W31
	0x03D75F90 BL 0x1C5C788
	0x03D75F94 B 0x3D75FA4
	0x03D75F98 LDRSW X9, [X10]
	0x03D75F9C ADD X8, X8, X9, 0x4, LSL
	0x03D75FA0 ADD X0, X8, 0x138
	0x03D75FA4 LDP X8, X1, [X0]
	0x03D75FA8 MOV X0, X19
	0x03D75FAC BLR X8
	0x03D75FB0 CBNZ X20, 0x3D75FBC
	0x03D75FB4 MOV X0, X21
	0x03D75FB8 BL 0x1D2C690
	0x03D75FBC MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {33}
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0+56]
	009 Move X1, [X1+16]
	010 Move X2, X31
	011 Call String.op_Equality, X0, X1
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {17}
	016 Move W0, 1
	017 Move X0, [X20+56]
	018 Move X1, X31
	019 Call String.IsNullOrEmpty, X0
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {28}
	024 Move X0, X19
	025 Call Column.get_visibleIndex, X0
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Move W0, W31
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0
	033 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<UnityEngine.UIElements.Column> GetEnumerator()

Disassembly:
	0x03D73594 STP X30, X23, [X31 + 0x20]
	0x03D73598 STP X22, X21, [X31 + 0x30]
	0x03D7359C STP X20, X19, [X31 + 0x40]
	0x03D735A0 ADRP X23, 0x674000
	0x03D735A4 LDRB W8, [X23 + 0xD31]
	0x03D735A8 MOV W21, W3
	0x03D735AC MOV W20, W2
	0x03D735B0 MOV V8.16B, V0.16B
	0x03D735B4 MOV X19, X1
	0x03D735B8 MOV X22, X0
	0x03D735BC TBNZ X8, 0x0, 0x3D735D4
	0x03D735C0 ADRP X0, 0x380000
	0x03D735C4 LDR X0, [X0 + 0x5A8]
	0x03D735C8 BL 0x1C16CF4
	0x03D735CC MOVZ W8, 0x1
	0x03D735D0 STRB W8, [X23 + 0xD31]
	0x03D735D4 CBZ X19, 0x3D7373C
	0x03D735D8 LDR V1, [X22 + 0x50]
	0x03D735DC LDR W8, [X19 + 0x48]
	0x03D735E0 LDR V0, [X19 + 0x44]
	0x03D735E4 CBZ W8, 0x3D735F8
	0x03D735E8 MOVZ W8, 0x42C80000
	0x03D735EC FMUL S0, S1, S0
	0x03D735F0 FMOV S2, W8
	0x03D735F4 FDIV S0, S0, S2
	0x03D735F8 LDR W8, [X19 + 0x50]
	0x03D735FC LDR V2, [X19 + 0x4C]
	0x03D73600 CBZ W8, 0x3D73614
	0x03D73604 MOVZ W8, 0x42C80000
	0x03D73608 FMUL S2, S1, S2
	0x03D7360C FMOV S3, W8
	0x03D73610 FDIV S2, S2, S3
	0x03D73614 LDR W8, [X19 + 0x58]
	0x03D73618 LDR V3, [X19 + 0x54]
	0x03D7361C CBZ W8, 0x3D73630
	0x03D73620 MOVZ W8, 0x42C80000
	0x03D73624 FMUL S1, S1, S3
	0x03D73628 FMOV S3, W8
	0x03D7362C FDIV S3, S1, S3
	0x03D73630 FCMP S0, S3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x675000
	005 Move W8, [X20+3402]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3AA000
	012 Move X0, [X0+272]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3402], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {45}
	019 Move X10, 0x3AA000
	020 Move X8, [X19]
	021 Move X10, [X10+272]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X19
	033 Move W2, W31
	034 Call 0x1C5D788
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X8, X8, X9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03D75FC0 BL 0x1C16F18

ISIL:
	001 Call Columns.GetEnumerator, X0
	002 Return X0

Method: System.Void Add(UnityEngine.UIElements.Column item)

Disassembly:
	0x03D75FC4 BL 0x1990590
	0x03D75FC8 STR X30, [X31 - 0x30]!
	0x03D75FCC STP X22, X21, [X31 + 0x10]
	0x03D75FD0 STP X20, X19, [X31 + 0x20]
	0x03D75FD4 ADRP X22, 0x672000
	0x03D75FD8 LDRB W8, [X22 + 0xD57]
	0x03D75FDC MOV W19, W2
	0x03D75FE0 MOV W20, W1
	0x03D75FE4 MOV X21, X0
	0x03D75FE8 TBNZ X8, 0x0, 0x3D76018
	0x03D75FEC ADRP X0, 0x3F1000
	0x03D75FF0 LDR X0, [X0 + 0xF00]
	0x03D75FF4 BL 0x1C16CF4
	0x03D75FF8 ADRP X0, 0x3F1000
	0x03D75FFC LDR X0, [X0 + 0xF38]
	0x03D76000 BL 0x1C16CF4
	0x03D76004 ADRP X0, 0x3F0000
	0x03D76008 LDR X0, [X0 + 0xE10]
	0x03D7600C BL 0x1C16CF4
	0x03D76010 MOVZ W8, 0x1
	0x03D76014 STRB W8, [X22 + 0xD57]
	0x03D76018 MOV X0, X21
	0x03D7601C BL 0x3D7466C
	0x03D76020 LDR X0, [X21 + 0x18]
	0x03D76024 CBZ X0, 0x3D760C8
	0x03D76028 ADRP X8, 0x3F0000
	0x03D7602C LDR X8, [X8 + 0xE10]
	0x03D76030 MOV W1, W20
	0x03D76034 LDR X2, [X8]
	0x03D76038 BL 0x301BCCC
	0x03D7603C LDR X8, [X21 + 0x18]
	0x03D76040 CBZ X8, 0x3D760C8
	0x03D76044 ADRP X9, 0x3F0000
	0x03D76048 LDR X9, [X9 + 0xF38]
	0x03D7604C MOV X22, X0
	0x03D76050 MOV X0, X8
	0x03D76054 MOV W1, W20
	0x03D76058 LDR X2, [X9]
	0x03D7605C BL 0x301DA48
	0x03D76060 LDR X0, [X21 + 0x18]
	0x03D76064 CBZ X0, 0x3D760C8
	0x03D76068 ADRP X8, 0x3F0000
	0x03D7606C LDR X8, [X8 + 0xF00]
	0x03D76070 MOV W1, W19
	0x03D76074 MOV X2, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x673000
	006 Move W8, [X21+3403]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3F2000
	014 Move X0, [X0+3496]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3403], W8
	018 Move X21, [X20+16]
	019 Compare X21, 0
	020 JumpIfEqual {52}
	021 Move X10, 0x3F2000
	022 Move X8, [X21]
	023 Call 0x3EB2A0C
	024 Return 
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move X0, X21
	036 Move W2, W31
	037 Call 0x1C5D788
	038 NotImplemented "Instruction LDRSW not yet implemented."
	039 Add X8, X8, X9
	040 Add X0, X8, 312
	041 Move X8, [X0]
	042 Move X1, [X0+8]
	043 Move X0, X21
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move W1, W0
	046 Move X0, X20
	047 Move X2, X19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x03D762D8 B.NE 0x3D76308
	0x03D762DC MOV X0, X20
	0x03D762E0 MOV X1, X8
	0x03D762E4 MOV X2, X21
	0x03D762E8 BL 0x1C24138
	0x03D762EC CMP X21, X0
	0x03D762F0 MOV X21, X0
	0x03D762F4 B.NE 0x3D762B4
	0x03D762F8 LDP X20, X19, [X31 + 0x20]
	0x03D762FC LDP X22, X21, [X31 + 0x10]
	0x03D76300 LDR X30, [X31], #0x30
	0x03D76304 RET
	0x03D76308 MOV X0, X8
	0x03D7630C BL 0x1C171E0
	0x03D76310 STR X30, [X31 - 0x40]!
	0x03D76314 STP X24, X23, [X31 + 0x10]
	0x03D76318 STP X22, X21, [X31 + 0x20]
	0x03D7631C STP X20, X19, [X31 + 0x30]
	0x03D76320 ADRP X21, 0x671000
	0x03D76324 LDRB W8, [X21 + 0xD5F]
	0x03D76328 MOV X19, X1
	0x03D7632C MOV X20, X0
	0x03D76330 TBNZ X8, 0x0, 0x3D76348
	0x03D76334 ADRP X0, 0x3F0000
	0x03D76338 LDR X0, [X0 + 0x620]
	0x03D7633C BL 0x1C16CF4
	0x03D76340 MOVZ W8, 0x1
	0x03D76344 STRB W8, [X21 + 0xD5F]
	0x03D76348 ADRP X24, 0x3F0000
	0x03D7634C LDR X21, [X20 + 0x18]!
	0x03D76350 LDR X24, [X24 + 0x620]
	0x03D76354 MOV X0, X21
	0x03D76358 MOV X1, X19
	0x03D7635C MOV X2, X31
	0x03D76360 BL 0x33C0DE4
	0x03D76364 CBZ X0, 0x3D76384
	0x03D76368 LDR X23, [X24]
	0x03D7636C MOV X22, X0
	0x03D76370 MOV X1, X23
	0x03D76374 BL 0x1C16E00
	0x03D76378 MOV X1, X0
	0x03D7637C CBNZ X0, 0x3D76388
	0x03D76380 B 0x3D763B4
	0x03D76384 MOV X1, X31
	0x03D76388 MOV X0, X20
	0x03D7638C MOV X2, X21
	0x03D76390 BL 0x1C24138
	0x03D76394 CMP X21, X0
	0x03D76398 MOV X21, X0
	0x03D7639C B.NE 0x3D76354
	0x03D763A0 LDP X20, X19, [X31 + 0x30]
	0x03D763A4 LDP X22, X21, [X31 + 0x20]
	0x03D763A8 LDP X24, X23, [X31 + 0x10]
	0x03D763AC LDR X30, [X31], #0x40
	0x03D763B0 RET
	0x03D763B4 MOV X0, X22
	0x03D763B8 MOV X1, X23
	0x03D763BC BL 0x1C171E0
	0x03D763C0 STR X30, [X31 - 0x40]!
	0x03D763C4 STP X24, X23, [X31 + 0x10]
	0x03D763C8 STP X22, X21, [X31 + 0x20]
	0x03D763CC STP X20, X19, [X31 + 0x30]
	0x03D763D0 ADRP X21, 0x671000
	0x03D763D4 LDRB W8, [X21 + 0xD60]
	0x03D763D8 MOV X19, X1
	0x03D763DC MOV X20, X0
	0x03D763E0 TBNZ X8, 0x0, 0x3D763F8
	0x03D763E4 ADRP X0, 0x3F0000
	0x03D763E8 LDR X0, [X0 + 0x620]
	0x03D763EC BL 0x1C16CF4
	0x03D763F0 MOVZ W8, 0x1
	0x03D763F4 STRB W8, [X21 + 0xD60]
	0x03D763F8 ADRP X24, 0x3F0000
	0x03D763FC LDR X21, [X20 + 0x18]!
	0x03D76400 LDR X24, [X24 + 0x620]
	0x03D76404 MOV X0, X21
	0x03D76408 MOV X1, X19
	0x03D7640C MOV X2, X31
	0x03D76410 BL 0x33C0FDC
	0x03D76414 CBZ X0, 0x3D76434
	0x03D76418 LDR X23, [X24]
	0x03D7641C MOV X22, X0
	0x03D76420 MOV X1, X23
	0x03D76424 BL 0x1C16E00
	0x03D76428 MOV X1, X0
	0x03D7642C CBNZ X0, 0x3D76438
	0x03D76430 B 0x3D76464
	0x03D76434 MOV X1, X31
	0x03D76438 MOV X0, X20
	0x03D7643C MOV X2, X21
	0x03D76440 BL 0x1C24138
	0x03D76444 CMP X21, X0
	0x03D76448 MOV X21, X0
	0x03D7644C B.NE 0x3D76404
	0x03D76450 LDP X20, X19, [X31 + 0x30]
	0x03D76454 LDP X22, X21, [X31 + 0x20]
	0x03D76458 LDP X24, X23, [X31 + 0x10]
	0x03D7645C LDR X30, [X31], #0x40
	0x03D76460 RET
	0x03D76464 MOV X0, X22
	0x03D76468 MOV X1, X23
	0x03D7646C BL 0x1C171E0
	0x03D76470 LDR X0, [X0 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x672000
	008 Move W8, [X20+3404]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x3F1000
	015 Move X0, [X0+3496]
	016 Call 0x1C17CF4
	017 Move X0, 0x3F1000
	018 Move X0, [X0+3416]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3404], W8
	022 Move X20, [X19+16]
	023 Compare X20, 0
	024 JumpIfEqual {104}
	025 Move X22, 0x3F1000
	026 Move X23, 0x3F1000
	027 Move X22, [X22+3496]
	028 Move X23, [X23+3416]
	029 Move X8, [X20]
	030 Move X1, [X22]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Compare X9, 0
	033 JumpIfEqual {40}
	034 Move X10, [X8+176]
	035 Add X10, X10, 8
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract X9, X9, 1
	039 Add X10, X10, 16
	040 Move X0, X20
	041 Move W2, W31
	042 Call 0x1C5D788
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X8, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X20
	049 NotImplemented "Instruction BLR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X20, [X19+16]
	052 Compare X20, 0
	053 JumpIfEqual {104}
	054 Move X8, [X20]
	055 Move X1, [X22]
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Compare X9, 0
	058 JumpIfEqual {65}
	059 Move X10, [X8+176]
	060 Add X10, X10, 8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract X9, X9, 1
	064 Add X10, X10, 16
	065 Move X0, X20
	066 Move W2, W31
	067 Call 0x1C5D788
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Add X8, X8, X9
	070 Add X0, X8, 312
	071 Move X8, [X0]
	072 Move X1, [X0+8]
	073 Move X0, X20
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X8, [X20]
	076 Move X1, [X23]
	077 Subtract W21, W0, 1
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move X0, X20
	088 Move W2, W31
	089 Call 0x1C5D788
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 Add X8, X8, X9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X2, [X0+8]
	095 Move X0, X20
	096 Move W1, W21
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X1, X0
	099 Move X0, X19
	100 Call Columns.Remove, X0, X1
	101 Move X20, [X19+16]
	102 Compare X20, 0
	103 JumpIfNotEqual {29}
	104 Call 0x1C17F20
	105 Move X20, [X31+32]
	106 Move X19, [X31+40]
	107 Move X22, [X31+16]
	108 Move X21, [X31+24]
	109 Move X30, [X31+48]
	110 Move X23, [X31+56]
	111 Return 

Method: System.Boolean Contains(UnityEngine.UIElements.Column item)

Disassembly:
	0x03D76684 MOV X2, X31
	0x03D76688 BL 0x3D5FB14
	0x03D7668C LDR X0, [X23]
	0x03D76690 LDR X20, [X19 + 0x30]
	0x03D76694 BL 0x1C16F10
	0x03D76698 LDR X2, [X24]
	0x03D7669C MOV X1, X19
	0x03D766A0 MOV X3, X31
	0x03D766A4 MOV X21, X0
	0x03D766A8 BL 0x2A76110
	0x03D766AC CBZ X20, 0x3D76874
	0x03D766B0 ADRP X23, 0x3F0000
	0x03D766B4 LDR X23, [X23 + 0xF80]
	0x03D766B8 MOV X0, X20
	0x03D766BC MOV X1, X21
	0x03D766C0 MOV X2, X31
	0x03D766C4 BL 0x3D5F86C
	0x03D766C8 LDR X0, [X22]
	0x03D766CC LDR X20, [X19 + 0x30]
	0x03D766D0 BL 0x1C16F10
	0x03D766D4 LDR X2, [X23]
	0x03D766D8 MOV X1, X19
	0x03D766DC MOV X3, X31
	0x03D766E0 MOV X21, X0
	0x03D766E4 BL 0x3314368
	0x03D766E8 CBZ X20, 0x3D76874
	0x03D766EC MOV X0, X20
	0x03D766F0 MOV X1, X21
	0x03D766F4 MOV X2, X31
	0x03D766F8 BL 0x3D5FC7C
	0x03D766FC LDR X8, [X19 + 0x30]
	0x03D76700 CBZ X8, 0x3D76874
	0x03D76704 ADRP X9, 0x3F0000
	0x03D76708 LDR X9, [X9 + 0x660]
	0x03D7670C ADRP X21, 0x3F0000
	0x03D76710 LDR X20, [X8 + 0x420]
	0x03D76714 LDR X0, [X9]
	0x03D76718 LDR X21, [X21 + 0xF40]
	0x03D7671C BL 0x1C16F10
	0x03D76720 LDR X2, [X21]
	0x03D76724 MOV X1, X19
	0x03D76728 MOV X3, X31
	0x03D7672C MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x672000
	006 Move W8, [X21+3405]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3F1000
	014 Move X0, [X0+3496]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3405], W8
	018 Move X20, [X20+16]
	019 Compare X20, 0
	020 JumpIfEqual {50}
	021 Move X10, 0x3F1000
	022 Move X8, [X20]
	023 Move X10, [X10+3496]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X10]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move W2, 4
	035 Move X0, X20
	036 Call 0x1C5D788
	037 Move W9, [X10]
	038 Add W9, W9, 4
	039 Add X8, X8, W9
	040 Add X0, X8, 312
	041 Move X3, [X0]
	042 Move X2, [X0+8]
	043 Move X0, X20
	044 Move X1, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 CallNoReturn X3
	050 Call 0x1C17F20

Method: System.Boolean Contains(System.String name)

Disassembly:
	0x03D76730 BL 0x2A7689C
	0x03D76734 CBZ X20, 0x3D76874
	0x03D76738 MOV X0, X20
	0x03D7673C MOV X1, X21
	0x03D76740 BL 0x3D70AA4
	0x03D76744 LDR X8, [X19 + 0x30]
	0x03D76748 CBZ X8, 0x3D76874
	0x03D7674C ADRP X9, 0x3F0000
	0x03D76750 LDR X9, [X9 + 0x650]
	0x03D76754 ADRP X21, 0x3F0000
	0x03D76758 LDR X20, [X8 + 0x420]
	0x03D7675C LDR X0, [X9]
	0x03D76760 LDR X21, [X21 + 0xF50]
	0x03D76764 BL 0x1C16F10
	0x03D76768 LDR X2, [X21]
	0x03D7676C MOV X1, X19
	0x03D76770 MOV X3, X31
	0x03D76774 MOV X21, X0
	0x03D76778 BL 0x2A6B948
	0x03D7677C CBZ X20, 0x3D76874
	0x03D76780 MOV X0, X20
	0x03D76784 MOV X1, X21
	0x03D76788 BL 0x3D70B54
	0x03D7678C LDR X8, [X19 + 0x30]
	0x03D76790 CBZ X8, 0x3D76874
	0x03D76794 ADRP X9, 0x3F0000
	0x03D76798 LDR X9, [X9 + 0x668]
	0x03D7679C ADRP X21, 0x3F0000
	0x03D767A0 LDR X20, [X8 + 0x420]
	0x03D767A4 LDR X0, [X9]
	0x03D767A8 LDR X21, [X21 + 0xF58]
	0x03D767AC BL 0x1C16F10
	0x03D767B0 LDR X2, [X21]
	0x03D767B4 MOV X1, X19
	0x03D767B8 MOV X3, X31
	0x03D767BC MOV X21, X0
	0x03D767C0 BL 0x2A782C0
	0x03D767C4 CBZ X20, 0x3D76874
	0x03D767C8 MOV X0, X20
	0x03D767CC MOV X1, X21
	0x03D767D0 BL 0x3D70C04
	0x03D767D4 LDR X8, [X19 + 0x30]
	0x03D767D8 CBZ X8, 0x3D76874
	0x03D767DC ADRP X9, 0x3F0000
	0x03D767E0 LDR X9, [X9 + 0x658]
	0x03D767E4 ADRP X21, 0x3F0000
	0x03D767E8 LDR X20, [X8 + 0x420]
	0x03D767EC LDR X0, [X9]
	0x03D767F0 LDR X21, [X21 + 0xF70]
	0x03D767F4 BL 0x1C16F10
	0x03D767F8 LDR X2, [X21]
	0x03D767FC MOV X1, X19
	0x03D76800 MOV X3, X31
	0x03D76804 MOV X21, X0
	0x03D76808 BL 0x2A769B4
	0x03D7680C CBZ X20, 0x3D76874
	0x03D76810 MOV X0, X20
	0x03D76814 MOV X1, X21
	0x03D76818 BL 0x3D74BE8
	0x03D7681C LDR X8, [X19 + 0x30]
	0x03D76820 CBZ X8, 0x3D76874
	0x03D76824 ADRP X9, 0x3F0000
	0x03D76828 LDR X9, [X9 + 0xEE8]
	0x03D7682C ADRP X21, 0x3F0000
	0x03D76830 LDR X20, [X8 + 0x420]
	0x03D76834 LDR X0, [X9]
	0x03D76838 LDR X21, [X21 + 0xF48]
	0x03D7683C BL 0x1C16F10
	0x03D76840 LDR X2, [X21]
	0x03D76844 MOV X1, X19
	0x03D76848 MOV X3, X31
	0x03D7684C MOV X21, X0
	0x03D76850 BL 0x2984034
	0x03D76854 CBZ X20, 0x3D76874
	0x03D76858 MOV X0, X20
	0x03D7685C MOV X1, X21
	0x03D76860 LDP X20, X19, [X31 + 0x30]
	0x03D76864 LDP X22, X21, [X31 + 0x20]
	0x03D76868 LDP X24, X23, [X31 + 0x10]
	0x03D7686C LDP X30, X25, [X31], #0x40
	0x03D76870 B 0x3D748F0
	0x03D76874 BL 0x1C16F20
	0x03D76878 STR X30, [X31 - 0x10]!
	0x03D7687C CBZ X2, 0x3D768B0
	0x03D76880 LDR X9, [X2 + 0x98]
	0x03D76884 CBZ X9, 0x3D768A8
	0x03D76888 MOV W8, W1
	0x03D7688C MOV X1, X0
	0x03D76890 LDR X4, [X9 + 0x18]
	0x03D76894 LDR X0, [X9 + 0x40]
	0x03D76898 LDR X3, [X9 + 0x28]
	0x03D7689C MOV W2, W8
	0x03D768A0 LDR X30, [X31], #0x10
	0x03D768A4 BR X4
	0x03D768A8 LDR X30, [X31], #0x10
	0x03D768AC RET
	0x03D768B0 BL 0x1C16F20
	0x03D768B4 STP X30, X21, [X31 - 0x20]!
	0x03D768B8 STP X20, X19, [X31 + 0x10]
	0x03D768BC ADRP X19, 0x671000
	0x03D768C0 ADRP X21, 0x3A6000
	0x03D768C4 ADRP X20, 0x3A6000
	0x03D768C8 LDRB W8, [X19 + 0xD62]
	0x03D768CC LDR X21, [X21 + 0x130]
	0x03D768D0 LDR X20, [X20 + 0x100]
	0x03D768D4 TBNZ X8, 0x0, 0x3D768F8
	0x03D768D8 ADRP X0, 0x3A6000
	0x03D768DC LDR X0, [X0 + 0x130]
	0x03D768E0 BL 0x1C16CF4
	0x03D768E4 ADRP X0, 0x3A6000
	0x03D768E8 LDR X0, [X0 + 0x100]
	0x03D768EC BL 0x1C16CF4
	0x03D768F0 MOVZ W8, 0x1
	0x03D768F4 STRB W8, [X19 + 0xD62]
	0x03D768F8 LDR X0, [X21]
	0x03D768FC BL 0x1C16F10
	0x03D76900 MOV X19, X0
	0x03D76904 BL 0x3D6B60C
	0x03D76908 LDR X0, [X20]
	0x03D7690C LDR W8, [X0 + 0xE0]
	0x03D76910 CBNZ W8, 0x3D76918
	0x03D76914 BL 0x1C16DFC
	0x03D76918 CBZ X19, 0x3D76944
	0x03D7691C LDR X8, [X20]
	0x03D76920 MOV X0, X19
	0x03D76924 MOV X2, X31
	0x03D76928 LDR X8, [X8 + 0xB8]
	0x03D7692C LDR X1, [X8 + 0x30]
	0x03D76930 BL 0x3DF1C70
	0x03D76934 MOV X0, X19
	0x03D76938 LDP X20, X19, [X31 + 0x10]
	0x03D7693C LDP X30, X21, [X31], #0x20
	0x03D76940 RET
	0x03D76944 BL 0x1C16F20
	0x03D76948 STR X30, [X31 - 0x60]!
	0x03D7694C STP X28, X27, [X31 + 0x10]
	0x03D76950 STP X26, X25, [X31 + 0x20]
	0x03D76954 STP X24, X23, [X31 + 0x30]
	0x03D76958 STP X22, X21, [X31 + 0x40]
	0x03D7695C STP X20, X19, [X31 + 0x50]
	0x03D76960 ADRP X19, 0x671000
	0x03D76964 ADRP X24, 0x3A5000
	0x03D76968 ADRP X25, 0x3A6000
	0x03D7696C LDRB W8, [X19 + 0xD63]
	0x03D76970 LDR X24, [X24 + 0x898]
	0x03D76974 LDR X25, [X25 + 0x100]
	0x03D76978 MOV X20, X0
	0x03D7697C TBNZ X8, 0x0, 0x3D769D0
	0x03D76980 ADRP X0, 0x37D000
	0x03D76984 LDR X0, [X0 + 0xE00]
	0x03D76988 BL 0x1C16CF4
	0x03D7698C ADRP X0, 0x3A6000
	0x03D76990 LDR X0, [X0 + 0x110]
	0x03D76994 BL 0x1C16CF4
	0x03D76998 ADRP X0, 0x3A6000
	0x03D7699C LDR X0, [X0 + 0x118]
	0x03D769A0 BL 0x1C16CF4
	0x03D769A4 ADRP X0, 0x37D000
	0x03D769A8 LDR X0, [X0 + 0xE18]
	0x03D769AC BL 0x1C16CF4
	0x03D769B0 ADRP X0, 0x3A6000
	0x03D769B4 LDR X0, [X0 + 0x100]
	0x03D769B8 BL 0x1C16CF4
	0x03D769BC ADRP X0, 0x3A5000
	0x03D769C0 LDR X0, [X0 + 0x898]
	0x03D769C4 BL 0x1C16CF4
	0x03D769C8 MOVZ W8, 0x1
	0x03D769CC STRB W8, [X19 + 0xD63]
	0x03D769D0 LDR X0, [X24]
	0x03D769D4 BL 0x1C16F10
	0x03D769D8 MOV X1, X31
	0x03D769DC MOV X19, X0
	0x03D769E0 BL 0x3DEF578
	0x03D769E4 LDR X0, [X25]
	0x03D769E8 LDR W8, [X0 + 0xE0]
	0x03D769EC CBNZ W8, 0x3D769F4
	0x03D769F0 BL 0x1C16DFC
	0x03D769F4 CBZ X19, 0x3D76CEC
	0x03D769F8 LDR X8, [X25]
	0x03D769FC MOV X0, X19
	0x03D76A00 MOV X2, X31
	0x03D76A04 LDR X8, [X8 + 0xB8]
	0x03D76A08 LDR X1, [X8 + 0x20]
	0x03D76A0C BL 0x3DEF278
	0x03D76A10 LDR X8, [X25]
	0x03D76A14 MOV X0, X19
	0x03D76A18 MOV X2, X31
	0x03D76A1C LDR X8, [X8 + 0xB8]
	0x03D76A20 LDR X1, [X8 + 0x20]
	0x03D76A24 BL 0x3DF1C70
	0x03D76A28 LDR X8, [X20 + 0x30]
	0x03D76A2C CBZ X8, 0x3D76CEC
	0x03D76A30 LDR X20, [X8 + 0x420]
	0x03D76A34 CBZ X20, 0x3D76CEC
	0x03D76A38 MOV X0, X20
	0x03D76A3C BL 0x3D746E4
	0x03D76A40 LDR X20, [X20 + 0x20]
	0x03D76A44 CBZ X20, 0x3D76CEC
	0x03D76A48 ADRP X10, 0x3A6000
	0x03D76A4C LDR X8, [X20]
	0x03D76A50 LDR X10, [X10 + 0x110]
	0x03D76A54 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x672000
	009 Move W8, [X21+3406]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x37E000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x3A7000
	020 Move X0, [X0+272]
	021 Call 0x1C17CF4
	022 Move X0, 0x3A7000
	023 Move X0, [X0+280]
	024 Call 0x1C17CF4
	025 Move X0, 0x37E000
	026 Move X0, [X0+3608]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3406], W8
	030 Move X19, [X19+16]
	031 Compare X19, 0
	032 JumpIfEqual {168}
	033 Move X10, 0x3A7000
	034 Move X8, [X19]
	035 Move X10, [X10+272]
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X1, [X10]
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move X0, X19
	047 Move W2, W31
	048 Call 0x1C5D788
	049 NotImplemented "Instruction LDRSW not yet implemented."
	050 Add X8, X8, X9
	051 Add X0, X8, 312
	052 Move X8, [X0]
	053 Move X1, [X0+8]
	054 Move X22, 0x37E000
	055 Move X22, [X22+3584]
	056 Move X0, X19
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X19, X0
	059 Compare X0, 0
	060 JumpIfEqual {169}
	061 Move X23, 0x37E000
	062 Move X24, 0x3A7000
	063 Move X23, [X23+3608]
	064 Move X24, [X24+280]
	065 Move X8, [X19]
	066 Move X1, [X23]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X19
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X1, [X0+8]
	084 Move X0, X19
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move W21, W0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {126}
	091 Move X8, [X19]
	092 Move X1, [X24]
	093 NotImplemented "Instruction LDRH not yet implemented."
	094 Compare X9, 0
	095 JumpIfEqual {102}
	096 Move X10, [X8+176]
	097 Add X10, X10, 8
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Subtract X9, X9, 1
	101 Add X10, X10, 16
	102 Move X0, X19
	103 Move W2, W31
	104 Call 0x1C5D788
	105 NotImplemented "Instruction LDRSW not yet implemented."
	106 Add X8, X8, X9
	107 Add X0, X8, 312
	108 Move X8, [X0]
	109 Move X1, [X0+8]
	110 Move X0, X19
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Compare X0, 0
	113 JumpIfEqual {167}
	114 Move X0, [X0+16]
	115 Move X1, X20
	116 Move X2, X31
	117 Call String.op_Equality, X0, X1
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {65}
	122 Move X20, X31
	123 Move W23, 5
	124 Compare X19, 0
	125 JumpIfNotEqual {131}
	126 Move X20, X31
	127 Move W21, W31
	128 Move W23, 6
	129 Compare X19, 0
	130 JumpIfEqual {152}
	131 Move X8, [X19]
	132 Move X1, [X22]
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Compare X9, 0
	135 JumpIfEqual {142}
	136 Move X10, [X8+176]
	137 Add X10, X10, 8
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Subtract X9, X9, 1
	141 Add X10, X10, 16
	142 Move X0, X19
	143 Move W2, W31
	144 Call 0x1C5D788
	145 NotImplemented "Instruction LDRSW not yet implemented."
	146 Add X8, X8, X9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X1, [X0+8]
	150 Move X0, X19
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Compare X20, 0
	153 JumpIfNotEqual {170}
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Compare W23, 0
	156 JumpIfNotEqual {158}
	157 Move W21, W31
	158 And W0, W21, 1
	159 Move X20, [X31+48]
	160 Move X19, [X31+56]
	161 Move X22, [X31+32]
	162 Move X21, [X31+40]
	163 Move X24, [X31+16]
	164 Move X23, [X31+24]
	165 Move X30, [X31+64]
	166 Return X0
	167 Call 0x1C17F20
	168 Call 0x1C17F20
	169 Call 0x1C17F20
	170 Move X0, X20
	171 Call 0x1C17F18
	172 Move X21, X0
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X0, X21
	175 Call 0x3EB2AD0
	176 Move X20, [X0]
	177 Call 0x3EB2AE0
	178 Move W23, W31
	179 Move W21, W31
	180 Compare X19, 0
	181 JumpIfNotEqual {131}
	182 Move X20, X31
	183 Move X21, X0
	184 Compare X19, 0
	185 JumpIfEqual {207}
	186 Move X8, [X19]
	187 Move X1, [X22]
	188 NotImplemented "Instruction LDRH not yet implemented."
	189 Compare X9, 0
	190 JumpIfEqual {197}
	191 Move X10, [X8+176]
	192 Add X10, X10, 8
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Subtract X9, X9, 1
	196 Add X10, X10, 16
	197 Move X0, X19
	198 Move W2, W31
	199 Call 0x1C5D788
	200 NotImplemented "Instruction LDRSW not yet implemented."
	201 Add X8, X8, X9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X1, [X0+8]
	205 Move X0, X19
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Compare X20, 0
	208 JumpIfNotEqual {211}
	209 Move X0, X21
	210 Call 0x1D2D690
	211 Move X0, X20
	212 Call 0x1C17F18
	213 Call 0x1991590

Method: System.Void CopyTo(UnityEngine.UIElements.Column[] array, System.Int32 arrayIndex)

Disassembly:
	0x03D76A58 LDR X1, [X10]
	0x03D76A5C CBZ X9, 0x3D76A80
	0x03D76A60 LDR X10, [X8 + 0xB0]
	0x03D76A64 ADD X10, X10, 0x8
	0x03D76A68 LDUR X11, [X10 - 0x8]
	0x03D76A6C CMP X11, X1
	0x03D76A70 B.EQ 0x3D76A90
	0x03D76A74 SUBS X9, X9, 0x1
	0x03D76A78 ADD X10, X10, 0x10
	0x03D76A7C B.NE 0x3D76A68
	0x03D76A80 MOV X0, X20
	0x03D76A84 MOV W2, W31
	0x03D76A88 BL 0x1C5C788
	0x03D76A8C B 0x3D76A9C
	0x03D76A90 LDRSW X9, [X10]
	0x03D76A94 ADD X8, X8, X9, 0x4, LSL
	0x03D76A98 ADD X0, X8, 0x138
	0x03D76A9C LDP X8, X1, [X0]
	0x03D76AA0 ADRP X23, 0x37D000
	0x03D76AA4 LDR X23, [X23 + 0xE00]
	0x03D76AA8 MOV X0, X20
	0x03D76AAC BLR X8
	0x03D76AB0 MOV X20, X0
	0x03D76AB4 CBZ X0, 0x3D76CF0
	0x03D76AB8 ADRP X27, 0x37D000
	0x03D76ABC ADRP X28, 0x3A6000
	0x03D76AC0 LDR X27, [X27 + 0xE18]
	0x03D76AC4 LDR X28, [X28 + 0x118]
	0x03D76AC8 MOV X26, X31
	0x03D76ACC LDR X8, [X20]
	0x03D76AD0 LDR X1, [X27]
	0x03D76AD4 LDRH W9, [X8 + 0x12E]
	0x03D76AD8 CBZ X9, 0x3D76AFC
	0x03D76ADC LDR X10, [X8 + 0xB0]
	0x03D76AE0 ADD X10, X10, 0x8
	0x03D76AE4 LDUR X11, [X10 - 0x8]
	0x03D76AE8 CMP X11, X1
	0x03D76AEC B.EQ 0x3D76B0C
	0x03D76AF0 SUBS X9, X9, 0x1
	0x03D76AF4 ADD X10, X10, 0x10
	0x03D76AF8 B.NE 0x3D76AE4
	0x03D76AFC MOV X0, X20
	0x03D76B00 MOV W2, W31
	0x03D76B04 BL 0x1C5C788
	0x03D76B08 B 0x3D76B18
	0x03D76B0C LDRSW X9, [X10]
	0x03D76B10 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x672000
	007 Move W8, [X22+3407]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x3F1000
	016 Move X0, [X0+3496]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3407], W8
	020 Move X21, [X21+16]
	021 Compare X21, 0
	022 JumpIfEqual {54}
	023 Move X10, 0x3F1000
	024 Move X8, [X21]
	025 Move X10, [X10+3496]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 5
	037 Move X0, X21
	038 Call 0x1C5D788
	039 Move W9, [X10]
	040 Add W9, W9, 5
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X4, [X0]
	044 Move X3, [X0+8]
	045 Move X0, X21
	046 Move X1, X20
	047 Move W2, W19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 CallNoReturn X4
	054 Call 0x1C17F20

Method: System.Boolean Remove(UnityEngine.UIElements.Column column)

Disassembly:
	0x03D76474 RET
	0x03D76478 STP X30, X25, [X31 - 0x40]!
	0x03D7647C STP X24, X23, [X31 + 0x10]
	0x03D76480 STP X22, X21, [X31 + 0x20]
	0x03D76484 STP X20, X19, [X31 + 0x30]
	0x03D76488 ADRP X25, 0x671000
	0x03D7648C ADRP X23, 0x3EC000
	0x03D76490 ADRP X24, 0x3A6000
	0x03D76494 LDRB W8, [X25 + 0xD61]
	0x03D76498 LDR X23, [X23 + 0xC50]
	0x03D7649C LDR X24, [X24 + 0x100]
	0x03D764A0 MOV X20, X3
	0x03D764A4 MOV X21, X2
	0x03D764A8 MOV X22, X1
	0x03D764AC MOV X19, X0
	0x03D764B0 TBNZ X8, 0x0, 0x3D765A0
	0x03D764B4 ADRP X0, 0x3F0000
	0x03D764B8 LDR X0, [X0 + 0x650]
	0x03D764BC BL 0x1C16CF4
	0x03D764C0 ADRP X0, 0x3F0000
	0x03D764C4 LDR X0, [X0 + 0xEE8]
	0x03D764C8 BL 0x1C16CF4
	0x03D764CC ADRP X0, 0x3F0000
	0x03D764D0 LDR X0, [X0 + 0x658]
	0x03D764D4 BL 0x1C16CF4
	0x03D764D8 ADRP X0, 0x3F0000
	0x03D764DC LDR X0, [X0 + 0x618]
	0x03D764E0 BL 0x1C16CF4
	0x03D764E4 ADRP X0, 0x3F0000
	0x03D764E8 LDR X0, [X0 + 0x660]
	0x03D764EC BL 0x1C16CF4
	0x03D764F0 ADRP X0, 0x3F0000
	0x03D764F4 LDR X0, [X0 + 0x620]
	0x03D764F8 BL 0x1C16CF4
	0x03D764FC ADRP X0, 0x3F0000
	0x03D76500 LDR X0, [X0 + 0x668]
	0x03D76504 BL 0x1C16CF4
	0x03D76508 ADRP X0, 0x37E000
	0x03D7650C LDR X0, [X0 + 0xE70]
	0x03D76510 BL 0x1C16CF4
	0x03D76514 ADRP X0, 0x3EC000
	0x03D76518 LDR X0, [X0 + 0xC50]
	0x03D7651C BL 0x1C16CF4
	0x03D76520 ADRP X0, 0x3F0000
	0x03D76524 LDR X0, [X0 + 0xF40]
	0x03D76528 BL 0x1C16CF4
	0x03D7652C ADRP X0, 0x3F0000
	0x03D76530 LDR X0, [X0 + 0xF48]
	0x03D76534 BL 0x1C16CF4
	0x03D76538 ADRP X0, 0x3F0000
	0x03D7653C LDR X0, [X0 + 0xF50]
	0x03D76540 BL 0x1C16CF4
	0x03D76544 ADRP X0, 0x3F0000
	0x03D76548 LDR X0, [X0 + 0xF58]
	0x03D7654C BL 0x1C16CF4
	0x03D76550 ADRP X0, 0x3F0000
	0x03D76554 LDR X0, [X0 + 0xF60]
	0x03D76558 BL 0x1C16CF4
	0x03D7655C ADRP X0, 0x3F0000
	0x03D76560 LDR X0, [X0 + 0xF68]
	0x03D76564 BL 0x1C16CF4
	0x03D76568 ADRP X0, 0x3F0000
	0x03D7656C LDR X0, [X0 + 0xF70]
	0x03D76570 BL 0x1C16CF4
	0x03D76574 ADRP X0, 0x3F0000
	0x03D76578 LDR X0, [X0 + 0xF78]
	0x03D7657C BL 0x1C16CF4
	0x03D76580 ADRP X0, 0x3F0000
	0x03D76584 LDR X0, [X0 + 0xF80]
	0x03D76588 BL 0x1C16CF4
	0x03D7658C ADRP X0, 0x3A6000
	0x03D76590 LDR X0, [X0 + 0x100]
	0x03D76594 BL 0x1C16CF4
	0x03D76598 MOVZ W8, 0x1
	0x03D7659C STRB W8, [X25 + 0xD61]
	0x03D765A0 MOV X0, X19
	0x03D765A4 MOV X1, X31
	0x03D765A8 BL 0x33BDD8C
	0x03D765AC LDR X0, [X23]
	0x03D765B0 BL 0x1C16F10
	0x03D765B4 MOV X1, X22
	0x03D765B8 MOV X2, X21
	0x03D765BC MOV X3, X20
	0x03D765C0 MOV X4, X31
	0x03D765C4 MOV X23, X0
	0x03D765C8 BL 0x3D5FDBC
	0x03D765CC LDR X0, [X24]
	0x03D765D0 LDR W8, [X0 + 0xE0]
	0x03D765D4 CBNZ W8, 0x3D765DC
	0x03D765D8 BL 0x1C16DFC
	0x03D765DC CBZ X23, 0x3D76874
	0x03D765E0 LDR X8, [X24]
	0x03D765E4 ADRP X22, 0x37E000
	0x03D765E8 ADRP X20, 0x3F0000
	0x03D765EC ADRP X21, 0x3F0000
	0x03D765F0 LDR X8, [X8 + 0xB8]
	0x03D765F4 LDR X22, [X22 + 0xE70]
	0x03D765F8 ADRP X24, 0x3F0000
	0x03D765FC MOV X0, X23
	0x03D76600 LDR X1, [X8 + 0x38]
	0x03D76604 LDR X20, [X20 + 0xF68]
	0x03D76608 LDR X21, [X21 + 0x620]
	0x03D7660C LDR X24, [X24 + 0xF78]
	0x03D76610 MOV X2, X31
	0x03D76614 BL 0x3DEB98C
	0x03D76618 STR X23, [X19 + 0x30]
	0x03D7661C LDR X0, [X22]
	0x03D76620 BL 0x1C16F10
	0x03D76624 LDR X2, [X20]
	0x03D76628 MOV X1, X19
	0x03D7662C MOV X3, X31
	0x03D76630 MOV X20, X0
	0x03D76634 BL 0x3314368
	0x03D76638 MOV X0, X23
	0x03D7663C MOV X1, X20
	0x03D76640 MOV X2, X31
	0x03D76644 BL 0x3D5F9D4
	0x03D76648 LDR X0, [X21]
	0x03D7664C LDR X20, [X19 + 0x30]
	0x03D76650 BL 0x1C16F10
	0x03D76654 LDR X2, [X24]
	0x03D76658 MOV X1, X19
	0x03D7665C MOV X3, X31
	0x03D76660 MOV X21, X0
	0x03D76664 BL 0x2A76D00
	0x03D76668 CBZ X20, 0x3D76874
	0x03D7666C ADRP X23, 0x3F0000
	0x03D76670 ADRP X24, 0x3F0000
	0x03D76674 LDR X23, [X23 + 0x618]
	0x03D76678 LDR X24, [X24 + 0xF60]
	0x03D7667C MOV X0, X20
	0x03D76680 MOV X1, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x672000
	006 Move W8, [X21+3408]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x3F1000
	014 Move X0, [X0+1616]
	015 Call 0x1C17CF4
	016 Move X0, 0x3F1000
	017 Move X0, [X0+1624]
	018 Call 0x1C17CF4
	019 Move X0, 0x3F1000
	020 Move X0, [X0+3824]
	021 Call 0x1C17CF4
	022 Move X0, 0x3F1000
	023 Move X0, [X0+3832]
	024 Call 0x1C17CF4
	025 Move X0, 0x3F1000
	026 Move X0, [X0+3496]
	027 Call 0x1C17CF4
	028 Move X0, 0x3F1000
	029 Move X0, [X0+3872]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3408], W8
	033 Compare X19, 0
	034 JumpIfEqual {127}
	035 Move X21, [X20+16]
	036 Compare X21, 0
	037 JumpIfEqual {145}
	038 Move X10, 0x3F1000
	039 Move X8, [X21]
	040 Move X10, [X10+3496]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 6
	052 Move X0, X21
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 6
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X2, [X0+8]
	060 Move X0, X21
	061 Move X1, X19
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {121}
	067 Move X0, [X20+24]
	068 Compare X0, 0
	069 JumpIfEqual {75}
	070 Move X8, 0x3F1000
	071 Move X8, [X8+3872]
	072 Move X1, X19
	073 Move X2, [X8]
	074 Call List`1<Object>.Remove, X0, X1
	075 Move X0, [X20+32]
	076 Compare X0, 0
	077 JumpIfEqual {83}
	078 Move X8, 0x3F1000
	079 Move X8, [X8+3872]
	080 Move X1, X19
	081 Move X2, [X8]
	082 Call List`1<Object>.Remove, X0, X1
	083 Move [X19+168], X31
	084 Move X8, 0x3F1000
	085 Move X8, [X8+1624]
	086 Move X0, [X8]
	087 Call 0x1C17F10
	088 Move X8, 0x3F1000
	089 Move X8, [X8+3824]
	090 Move X1, X20
	091 Move X3, X31
	092 Move X21, X0
	093 Move X2, [X8]
	094 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	095 Move X0, X19
	096 Move X1, X21
	097 Call Column.remove_changed, X0, X1
	098 Move X8, 0x3F1000
	099 Move X8, [X8+1616]
	100 Move X0, [X8]
	101 Call 0x1C17F10
	102 Move X8, 0x3F1000
	103 Move X8, [X8+3832]
	104 Move X1, X20
	105 Move X3, X31
	106 Move X21, X0
	107 Move X2, [X8]
	108 Call Action`1<Object>..ctor, X0, X1, X2
	109 Move X0, X19
	110 Move X1, X21
	111 Call Column.remove_resized, X0, X1
	112 Move X8, [X20+80]
	113 Compare X8, 0
	114 JumpIfEqual {120}
	115 Move X9, [X8+24]
	116 Move X0, [X8+64]
	117 Move X2, [X8+40]
	118 Move X1, X19
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move W0, 1
	121 Move W0, W31
	122 Move X20, [X31+16]
	123 Move X19, [X31+24]
	124 Move X30, [X31+32]
	125 Move X21, [X31+40]
	126 Return X0
	127 Move X0, 0x386000
	128 Move X0, [X0+1400]
	129 Call 0x1C17D08
	130 Call 0x1C17F10
	131 Move X19, X0
	132 Move X0, 0x3F1000
	133 Move X0, [X0+3880]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X19
	137 Move X2, X31
	138 Call ArgumentException..ctor, X0, X1
	139 Move X0, 0x3F1000
	140 Move X0, [X0+3888]
	141 Call 0x1C17D08
	142 Move X1, X0
	143 Move X0, X19
	144 Call 0x1C17DEC
	145 Call 0x1C17F20

Method: System.Void OnColumnChanged(UnityEngine.UIElements.Column column, UnityEngine.UIElements.ColumnDataType type)

Disassembly:
	0x03D76B14 ADD X0, X8, 0x138
	0x03D76B18 LDP X8, X1, [X0]
	0x03D76B1C MOV X0, X20
	0x03D76B20 BLR X8
	0x03D76B24 TBZ X0, 0x0, 0x3D76C5C
	0x03D76B28 LDR X8, [X20]
	0x03D76B2C LDR X1, [X28]
	0x03D76B30 LDRH W9, [X8 + 0x12E]
	0x03D76B34 CBZ X9, 0x3D76B58
	0x03D76B38 LDR X10, [X8 + 0xB0]
	0x03D76B3C ADD X10, X10, 0x8
	0x03D76B40 LDUR X11, [X10 - 0x8]
	0x03D76B44 CMP X11, X1
	0x03D76B48 B.EQ 0x3D76B68
	0x03D76B4C SUBS X9, X9, 0x1
	0x03D76B50 ADD X10, X10, 0x10
	0x03D76B54 B.NE 0x3D76B40
	0x03D76B58 MOV X0, X20
	0x03D76B5C MOV W2, W31
	0x03D76B60 BL 0x1C5C788
	0x03D76B64 B 0x3D76B74
	0x03D76B68 LDRSW X9, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W19, W2
	006 Move X20, X1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X21, X0
	009 Move X0, X21
	010 Call Columns.DirtyVisibleColumns, X0
	011 Move X8, [X21+88]
	012 Compare X8, 0
	013 JumpIfEqual {24}
	014 Move X4, [X8+24]
	015 Move X0, [X8+64]
	016 Move X3, [X8+40]
	017 Move X1, X20
	018 Move W2, W19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 CallNoReturn X4
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return 

Method: System.Void OnColumnResized(UnityEngine.UIElements.Column column)

Disassembly:
	0x03D76BE0 LDR X1, [X26 + 0x28]
	0x03D76BE4 LDR X8, [X26 + 0x18]
	0x03D76BE8 BLR X8
	0x03D76BEC MOV X22, X0
	0x03D76BF0 CBNZ X0, 0x3D76C0C
	0x03D76BF4 LDR X0, [X25]
	0x03D76BF8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X8, [X0+96]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X3, [X8+24]
	005 Move X0, [X8+64]
	006 Move X2, [X8+40]
	007 CallNoReturn X3
	008 Return 

Method: System.Int32 get_Count()

Disassembly:
	0x03D71A04 B 0x3D71C68
	0x03D71A08 B 0x3D71C68
	0x03D71A0C B 0x3D71C68
	0x03D71A10 B 0x3D71A40
	0x03D71A14 B 0x3D71A24
	0x03D71A18 B 0x3D71A30
	0x03D71A1C B 0x3D71C68
	0x03D71A20 B 0x3D71A40
	0x03D71A24 MOV X20, X1
	0x03D71A28 MOV X21, X0
	0x03D71A2C B 0x3D71A84
	0x03D71A30 MOV X20, X1
	0x03D71A34 MOV X21, X0
	0x03D71A38 B 0x3D71AC0
	0x03D71A3C B 0x3D71A40
	0x03D71A40 MOV X20, X1
	0x03D71A44 MOV X21, X0
	0x03D71A48 CMP W20, 0x1
	0x03D71A4C B.NE 0x3D71A68
	0x03D71A50 MOV X0, X21
	0x03D71A54 BL 0x3EB1AD0
	0x03D71A58 LDR X22, [X0]
	0x03D71A5C BL 0x3EB1AE0
	0x03D71A60 MOV W20, W31
	0x03D71A64 B 0x3D718FC
	0x03D71A68 MOV X22, X31
	0x03D71A6C ADRP X8, 0x3F5000
	0x03D71A70 LDR X8, [X8 + 0xDF8]
	0x03D71A74 LDR X1, [X8]
	0x03D71A78 ADD X0, X31, 0x28
	0x03D71A7C BL 0x24A6D20
	0x03D71A80 CBNZ X22, 0x3D71AFC
	0x03D71A84 CMP W20, 0x1
	0x03D71A88 B.NE 0x3D71AA4
	0x03D71A8C MOV X0, X21
	0x03D71A90 BL 0x3EB1AD0
	0x03D71A94 LDR X22, [X0]
	0x03D71A98 BL 0x3EB1AE0
	0x03D71A9C MOV W20, W31
	0x03D71AA0 B 0x3D71930

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x677000
	005 Move W8, [X20+3409]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3F6000
	012 Move X0, [X0+3496]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3409], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {45}
	019 Move X10, 0x3F6000
	020 Move X8, [X19]
	021 Move X10, [X10+3496]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X19
	033 Move W2, W31
	034 Call 0x1C5D788
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X8, X8, X9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.Boolean get_IsReadOnly()

Disassembly:
	0x03D76BFC CBNZ W8, 0x3D76C04
	0x03D76C00 BL 0x1C16DFC
	0x03D76C04 BL 0x3D768B4
	0x03D76C08 MOV X22, X0
	0x03D76C0C LDR X0, [X25]
	0x03D76C10 LDR W8, [X0 + 0xE0]
	0x03D76C14 CBNZ W8, 0x3D76C20
	0x03D76C18 BL 0x1C16DFC
	0x03D76C1C LDR X0, [X25]
	0x03D76C20 LDR X8, [X0 + 0xB8]
	0x03D76C24 LDR W1, [X8 + 0x4]
	0x03D76C28 MOV X0, X21
	0x03D76C2C MOV X2, X22
	0x03D76C30 MOV X3, X31
	0x03D76C34 BL 0x3DF31F4
	0x03D76C38 MOV X0, X21
	0x03D76C3C MOV X1, X22
	0x03D76C40 MOV X2, X31
	0x03D76C44 BL 0x3DF60E8
	0x03D76C48 MOV X0, X19
	0x03D76C4C MOV X1, X21
	0x03D76C50 MOV X2, X31
	0x03D76C54 BL 0x3DF60E8
	0x03D76C58 B 0x3D76ACC
	0x03D76C5C MOV X21, X31
	0x03D76C60 CBZ X20, 0x3D76CBC
	0x03D76C64 LDR X8, [X20]
	0x03D76C68 LDR X1, [X23]
	0x03D76C6C LDRH W9, [X8 + 0x12E]
	0x03D76C70 CBZ X9, 0x3D76C94
	0x03D76C74 LDR X10, [X8 + 0xB0]
	0x03D76C78 ADD X10, X10, 0x8
	0x03D76C7C LDUR X11, [X10 - 0x8]
	0x03D76C80 CMP X11, X1
	0x03D76C84 B.EQ 0x3D76CA4
	0x03D76C88 SUBS X9, X9, 0x1
	0x03D76C8C ADD X10, X10, 0x10
	0x03D76C90 B.NE 0x3D76C7C
	0x03D76C94 MOV X0, X20
	0x03D76C98 MOV W2, W31
	0x03D76C9C BL 0x1C5C788

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x672000
	005 Move W8, [X20+3410]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3F1000
	012 Move X0, [X0+3496]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3410], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0x3F1000
	020 Move X8, [X19]
	021 Move X10, [X10+3496]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 1
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 1
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

Method: System.Int32 IndexOf(UnityEngine.UIElements.Column column)

Disassembly:
	0x03D706B8 LDR X1, [X22]
	0x03D706BC MOV X21, X0
	0x03D706C0 BL 0x301B7C4
	0x03D706C4 STR X21, [X20 + 0x18]
	0x03D706C8 LDR X0, [X23]
	0x03D706CC BL 0x1C16F10
	0x03D706D0 LDR X1, [X22]
	0x03D706D4 MOV X21, X0
	0x03D706D8 BL 0x301B7C4
	0x03D706DC STR X21, [X20 + 0x20]
	0x03D706E0 LDR X0, [X23]
	0x03D706E4 BL 0x1C16F10
	0x03D706E8 LDR X1, [X22]
	0x03D706EC MOV X21, X0
	0x03D706F0 BL 0x301B7C4
	0x03D706F4 MOVZ W9, 0x7FC00000
	0x03D706F8 MOVZ W8, 0x1
	0x03D706FC UNIMPLEMENTED
	0x03D70700 STR X21, [X20 + 0x28]
	0x03D70704 STR W31, [X20 + 0x38]
	0x03D70708 STR X31, [X20 + 0x40]
	0x03D7070C STRB W31, [X20 + 0x48]
	0x03D70710 STRB W8, [X20 + 0x3C]
	0x03D70714 STUR D0, [X20 + 0x4C]
	0x03D70718 STRB W31, [X20 + 0x55]
	0x03D7071C LDR X0, [X23]
	0x03D70720 BL 0x1C16F10
	0x03D70724 LDR X1, [X22]
	0x03D70728 MOV X21, X0
	0x03D7072C BL 0x301B7C4
	0x03D70730 STR X21, [X20 + 0x68]
	0x03D70734 LDR X0, [X23]
	0x03D70738 BL 0x1C16F10
	0x03D7073C LDR X1, [X22]
	0x03D70740 MOV X21, X0
	0x03D70744 BL 0x301B7C4
	0x03D70748 STR X21, [X20 + 0x70]
	0x03D7074C LDR X0, [X23]
	0x03D70750 BL 0x1C16F10
	0x03D70754 LDR X1, [X22]
	0x03D70758 MOV X21, X0
	0x03D7075C BL 0x301B7C4
	0x03D70760 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x678000
	006 Move W8, [X21+3411]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3F7000
	014 Move X0, [X0+3416]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3411], W8
	018 Move X20, [X20+16]
	019 Compare X20, 0
	020 JumpIfEqual {50}
	021 Move X10, 0x3F7000
	022 Move X8, [X20]
	023 Move X10, [X10+3416]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X10]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move W2, 2
	035 Move X0, X20
	036 Call 0x1C5D788
	037 Move W9, [X10]
	038 Add W9, W9, 2
	039 Add X8, X8, W9
	040 Add X0, X8, 312
	041 Move X3, [X0]
	042 Move X2, [X0+8]
	043 Move X0, X20
	044 Move X1, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 CallNoReturn X3
	050 Call 0x1C17F20

Method: System.Void Insert(System.Int32 index, UnityEngine.UIElements.Column column)

Disassembly:
	0x03D76078 LDR X3, [X8]
	0x03D7607C BL 0x301CEEC
	0x03D76080 MOV X0, X21
	0x03D76084 BL 0x3D75B6C
	0x03D76088 LDR X8, [X21 + 0x68]
	0x03D7608C CBZ X8, 0x3D760B8
	0x03D76090 LDR X5, [X8 + 0x18]
	0x03D76094 LDR X0, [X8 + 0x40]
	0x03D76098 LDR X4, [X8 + 0x28]
	0x03D7609C MOV X1, X22
	0x03D760A0 MOV W2, W20
	0x03D760A4 MOV W3, W19
	0x03D760A8 LDP X20, X19, [X31 + 0x20]
	0x03D760AC LDP X22, X21, [X31 + 0x10]
	0x03D760B0 LDR X30, [X31], #0x30
	0x03D760B4 BR X5
	0x03D760B8 LDP X20, X19, [X31 + 0x20]
	0x03D760BC LDP X22, X21, [X31 + 0x10]
	0x03D760C0 LDR X30, [X31], #0x30
	0x03D760C4 RET
	0x03D760C8 BL 0x1C16F20
	0x03D760CC STR X30, [X31 - 0x30]!
	0x03D760D0 STP X22, X21, [X31 + 0x10]
	0x03D760D4 STP X20, X19, [X31 + 0x20]
	0x03D760D8 ADRP X21, 0x671000
	0x03D760DC ADRP X22, 0x3F0000
	0x03D760E0 ADRP X20, 0x3F0000
	0x03D760E4 LDRB W8, [X21 + 0xD5B]
	0x03D760E8 LDR X22, [X22 + 0xD68]
	0x03D760EC LDR X20, [X20 + 0xD78]
	0x03D760F0 MOV X19, X0
	0x03D760F4 TBNZ X8, 0x0, 0x3D76118
	0x03D760F8 ADRP X0, 0x3F0000
	0x03D760FC LDR X0, [X0 + 0xD78]
	0x03D76100 BL 0x1C16CF4
	0x03D76104 ADRP X0, 0x3F0000
	0x03D76108 LDR X0, [X0 + 0xD68]
	0x03D7610C BL 0x1C16CF4
	0x03D76110 MOVZ W8, 0x1
	0x03D76114 STRB W8, [X21 + 0xD5B]
	0x03D76118 LDR X0, [X22]
	0x03D7611C BL 0x1C16F10
	0x03D76120 LDR X1, [X20]
	0x03D76124 MOV X20, X0
	0x03D76128 BL 0x301B7C4
	0x03D7612C MOVZ W8, 0x1
	0x03D76130 MOVZ W9, 0x101
	0x03D76134 STR X20, [X19 + 0x10]
	0x03D76138 STRB W8, [X19 + 0x28]
	0x03D7613C STR W8, [X19 + 0x2C]
	0x03D76140 STRH W9, [X19 + 0x30]
	0x03D76144 MOV X0, X19
	0x03D76148 LDP X20, X19, [X31 + 0x20]
	0x03D7614C LDP X22, X21, [X31 + 0x10]
	0x03D76150 MOV X1, X31
	0x03D76154 LDR X30, [X31], #0x30
	0x03D76158 B 0x33BDD8C
	0x03D7615C STR X30, [X31 - 0x20]!
	0x03D76160 STP X20, X19, [X31 + 0x10]
	0x03D76164 ADRP X19, 0x671000
	0x03D76168 ADRP X20, 0x3F0000
	0x03D7616C LDRB W8, [X19 + 0xD5C]
	0x03D76170 LDR X20, [X20 + 0xEE0]
	0x03D76174 TBNZ X8, 0x0, 0x3D7618C
	0x03D76178 ADRP X0, 0x3F0000
	0x03D7617C LDR X0, [X0 + 0xEE0]
	0x03D76180 BL 0x1C16CF4
	0x03D76184 MOVZ W8, 0x1
	0x03D76188 STRB W8, [X19 + 0xD5C]
	0x03D7618C LDR X0, [X20]
	0x03D76190 BL 0x1C16F10
	0x03D76194 MOV X1, X31
	0x03D76198 MOV X19, X0
	0x03D7619C BL 0x33BDD8C
	0x03D761A0 LDR X8, [X20]
	0x03D761A4 LDR X8, [X8 + 0xB8]
	0x03D761A8 STR X19, [X8]
	0x03D761AC LDP X20, X19, [X31 + 0x10]
	0x03D761B0 LDR X30, [X31], #0x20
	0x03D761B4 RET
	0x03D761B8 MOV X1, X31
	0x03D761BC B 0x33BDD8C
	0x03D761C0 STR X30, [X31 - 0x10]!
	0x03D761C4 CBZ X1, 0x3D761D4
	0x03D761C8 LDRB W0, [X1 + 0x40]
	0x03D761CC LDR X30, [X31], #0x10
	0x03D761D0 RET
	0x03D761D4 BL 0x1C16F20
	0x03D761D8 STR X30, [X31 - 0x30]!
	0x03D761DC STP X22, X21, [X31 + 0x10]
	0x03D761E0 STP X20, X19, [X31 + 0x20]
	0x03D761E4 ADRP X21, 0x671000
	0x03D761E8 LDRB W8, [X21 + 0xD5D]
	0x03D761EC MOV X19, X1
	0x03D761F0 MOV X20, X0
	0x03D761F4 TBNZ X8, 0x0, 0x3D7620C
	0x03D761F8 ADRP X0, 0x37E000
	0x03D761FC LDR X0, [X0 + 0xE70]
	0x03D76200 BL 0x1C16CF4
	0x03D76204 MOVZ W8, 0x1
	0x03D76208 STRB W8, [X21 + 0xD5D]
	0x03D7620C ADRP X22, 0x37E000
	0x03D76210 LDR X21, [X20 + 0x10]!
	0x03D76214 LDR X22, [X22 + 0xE70]
	0x03D76218 MOV X0, X21
	0x03D7621C MOV X1, X19
	0x03D76220 MOV X2, X31
	0x03D76224 BL 0x33C0DE4
	0x03D76228 MOV X8, X0
	0x03D7622C CBZ X0, 0x3D76240
	0x03D76230 LDR X1, [X22]
	0x03D76234 LDR X9, [X8]
	0x03D76238 CMP X9, X1
	0x03D7623C B.NE 0x3D7626C
	0x03D76240 MOV X0, X20
	0x03D76244 MOV X1, X8
	0x03D76248 MOV X2, X21
	0x03D7624C BL 0x1C24138
	0x03D76250 CMP X21, X0
	0x03D76254 MOV X21, X0
	0x03D76258 B.NE 0x3D76218
	0x03D7625C LDP X20, X19, [X31 + 0x20]
	0x03D76260 LDP X22, X21, [X31 + 0x10]
	0x03D76264 LDR X30, [X31], #0x30
	0x03D76268 RET
	0x03D7626C MOV X0, X8
	0x03D76270 BL 0x1C171E0
	0x03D76274 STR X30, [X31 - 0x30]!
	0x03D76278 STP X22, X21, [X31 + 0x10]
	0x03D7627C STP X20, X19, [X31 + 0x20]
	0x03D76280 ADRP X21, 0x671000
	0x03D76284 LDRB W8, [X21 + 0xD5E]
	0x03D76288 MOV X19, X1
	0x03D7628C MOV X20, X0
	0x03D76290 TBNZ X8, 0x0, 0x3D762A8
	0x03D76294 ADRP X0, 0x37E000
	0x03D76298 LDR X0, [X0 + 0xE70]
	0x03D7629C BL 0x1C16CF4
	0x03D762A0 MOVZ W8, 0x1
	0x03D762A4 STRB W8, [X21 + 0xD5E]
	0x03D762A8 ADRP X22, 0x37E000
	0x03D762AC LDR X21, [X20 + 0x10]!
	0x03D762B0 LDR X22, [X22 + 0xE70]
	0x03D762B4 MOV X0, X21
	0x03D762B8 MOV X1, X19
	0x03D762BC MOV X2, X31
	0x03D762C0 BL 0x33C0FDC
	0x03D762C4 MOV X8, X0
	0x03D762C8 CBZ X0, 0x3D762DC
	0x03D762CC LDR X1, [X22]
	0x03D762D0 LDR X9, [X8]
	0x03D762D4 CMP X9, X1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x672000
	011 Move W8, [X22+3412]
	012 Move X20, X2
	013 Move W19, W1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x3F1000
	020 Move X0, [X0+1616]
	021 Call 0x1C17CF4
	022 Move X0, 0x3F1000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x3F1000
	026 Move X0, [X0+3824]
	027 Call 0x1C17CF4
	028 Move X0, 0x3F1000
	029 Move X0, [X0+3832]
	030 Call 0x1C17CF4
	031 Move X0, 0x3F1000
	032 Move X0, [X0+3416]
	033 Call 0x1C17CF4
	034 Move X0, 0x3F1000
	035 Move X0, [X0+3840]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+3412], W8
	039 Compare X20, 0
	040 JumpIfEqual {144}
	041 Move X0, [X20+168]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Compare X0, 0
	044 JumpIfEqual {47}
	045 Move X1, X20
	046 Call Columns.Remove, X0, X1
	047 Move X22, [X21+16]
	048 Compare X22, 0
	049 JumpIfEqual {169}
	050 Move X10, 0x3F1000
	051 Move X8, [X22]
	052 Move X10, [X10+3416]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move W2, 3
	064 Move X0, X22
	065 Call 0x1C5D788
	066 Move W9, [X10]
	067 Add W9, W9, 3
	068 Add X8, X8, W9
	069 Add X0, X8, 312
	070 Move X26, 0x3F1000
	071 Move X26, [X26+1624]
	072 Move X8, [X0]
	073 Move X3, [X0+8]
	074 Move X25, 0x3F1000
	075 Move X24, 0x3F1000
	076 Move X23, 0x3F1000
	077 Move X25, [X25+3824]
	078 Move X24, [X24+1616]
	079 Move X23, [X23+3832]
	080 Move X0, X22
	081 Move W1, W19
	082 Move X2, X20
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X0, [X21+24]
	085 Compare X0, 0
	086 JumpIfEqual {95}
	087 Move X8, 0x3F1000
	088 Move X8, [X8+3840]
	089 Move W1, W19
	090 Move X2, X20
	091 Move X3, [X8]
	092 Call List`1<Object>.Insert, X0, X1, X2
	093 Move X0, X21
	094 Call Columns.DirtyVisibleColumns, X0
	095 Move [X20+168], X21
	096 Move X0, [X26]
	097 Call 0x1C17F10
	098 Move X2, [X25]
	099 Move X1, X21
	100 Move X3, X31
	101 Move X22, X0
	102 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	103 Move X0, X20
	104 Move X1, X22
	105 Call Column.add_changed, X0, X1
	106 Move X0, [X24]
	107 Call 0x1C17F10
	108 Move X2, [X23]
	109 Move X1, X21
	110 Move X3, X31
	111 Move X22, X0
	112 Call Action`1<Object>..ctor, X0, X1, X2
	113 Move X0, X20
	114 Move X1, X22
	115 Call Column.add_resized, X0, X1
	116 Move X8, [X21+72]
	117 Compare X8, 0
	118 JumpIfEqual {134}
	119 Move X4, [X8+24]
	120 Move X0, [X8+64]
	121 Move X3, [X8+40]
	122 Move X1, X20
	123 Move W2, W19
	124 Move X20, [X31+64]
	125 Move X19, [X31+72]
	126 Move X22, [X31+48]
	127 Move X21, [X31+56]
	128 Move X24, [X31+32]
	129 Move X23, [X31+40]
	130 Move X26, [X31+16]
	131 Move X25, [X31+24]
	132 Move X30, [X31+80]
	133 CallNoReturn X4
	134 Move X20, [X31+64]
	135 Move X19, [X31+72]
	136 Move X22, [X31+48]
	137 Move X21, [X31+56]
	138 Move X24, [X31+32]
	139 Move X23, [X31+40]
	140 Move X26, [X31+16]
	141 Move X25, [X31+24]
	142 Move X30, [X31+80]
	143 Return 
	144 Move X0, 0x386000
	145 Move X0, [X0+1400]
	146 Call 0x1C17D08
	147 Call 0x1C17F10
	148 Move X19, X0
	149 Move X0, 0x3F1000
	150 Move X0, [X0+3848]
	151 Move X0, 0x386000
	152 Move X0, [X0+1400]
	153 Call 0x1C17D08
	154 Call 0x1C17F10
	155 Move X19, X0
	156 Move X0, 0x3F1000
	157 Move X0, [X0+3856]
	158 Call 0x1C17D08
	159 Move X1, X0
	160 Move X0, X19
	161 Move X2, X31
	162 Call ArgumentException..ctor, X0, X1
	163 Move X0, 0x3F1000
	164 Move X0, [X0+3864]
	165 Call 0x1C17D08
	166 Move X1, X0
	167 Move X0, X19
	168 Call 0x1C17DEC
	169 Call 0x1C17F20

Method: UnityEngine.UIElements.Column get_Item(System.Int32 index)

Disassembly:
	0x03D71878 BL 0x1C16DFC
	0x03D7187C LDR X1, [X20]
	0x03D71880 ADD X0, X31, 0x20
	0x03D71884 BL 0x28F996C
	0x03D71888 MOV X8, X0
	0x03D7188C LDR X0, [X31 + 0x50]
	0x03D71890 STP X8, X1, [X31 + 0x28]
	0x03D71894 CBZ X0, 0x3D719D4
	0x03D71898 ADRP X20, 0x3F5000
	0x03D7189C LDR X1, [X19 + 0x10]
	0x03D718A0 LDR X20, [X20 + 0xDE0]
	0x03D718A4 LDR X2, [X20]
	0x03D718A8 BL 0x301C194
	0x03D718AC LDR X0, [X31 + 0x38]
	0x03D718B0 CBZ X0, 0x3D719D8
	0x03D718B4 LDR X1, [X19 + 0x18]
	0x03D718B8 LDR X2, [X20]
	0x03D718BC BL 0x301C194
	0x03D718C0 LDR X0, [X31 + 0x20]
	0x03D718C4 CBZ X0, 0x3D719E4
	0x03D718C8 LDR X1, [X19 + 0x20]
	0x03D718CC LDR X2, [X20]
	0x03D718D0 BL 0x301C194
	0x03D718D4 LDR X1, [X31 + 0x50]
	0x03D718D8 LDR X2, [X31 + 0x38]
	0x03D718DC LDR X3, [X31 + 0x20]
	0x03D718E0 ADD X4, X31, 0x6C
	0x03D718E4 MOV X0, X19
	0x03D718E8 MOV W5, W31
	0x03D718EC MOV W6, W31
	0x03D718F0 BL 0x3D726D4
	0x03D718F4 MOV X22, X31
	0x03D718F8 MOVZ W20, 0x25
	0x03D718FC ADRP X8, 0x3F5000
	0x03D71900 LDR X8, [X8 + 0xDF8]
	0x03D71904 LDR X1, [X8]
	0x03D71908 ADD X0, X31, 0x28
	0x03D7190C BL 0x24A6D20
	0x03D71910 CBNZ X22, 0x3D719E8
	0x03D71914 CMP W20, 0x25
	0x03D71918 B.EQ 0x3D71920
	0x03D7191C CBNZ W20, 0x3D7192C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x677000
	006 Move W8, [X21+3413]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3F6000
	014 Move X0, [X0+3416]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3413], W8
	018 Move X20, [X20+16]
	019 Compare X20, 0
	020 JumpIfEqual {49}
	021 Move X10, 0x3F6000
	022 Move X8, [X20]
	023 Move X10, [X10+3416]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X10]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move X0, X20
	035 Move W2, W31
	036 Call 0x1C5D788
	037 NotImplemented "Instruction LDRSW not yet implemented."
	038 Add X8, X8, X9
	039 Add X0, X8, 312
	040 Move X3, [X0]
	041 Move X2, [X0+8]
	042 Move X0, X20
	043 Move W1, W19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 CallNoReturn X3
	049 Call 0x1C17F20

Method: UnityEngine.UIElements.Column get_Item(System.String name)

Disassembly:
	0x03D76CA0 B 0x3D76CB0
	0x03D76CA4 LDRSW X9, [X10]
	0x03D76CA8 ADD X8, X8, X9, 0x4, LSL
	0x03D76CAC ADD X0, X8, 0x138
	0x03D76CB0 LDP X8, X1, [X0]
	0x03D76CB4 MOV X0, X20
	0x03D76CB8 BLR X8
	0x03D76CBC CBNZ X21, 0x3D76CF4
	0x03D76CC0 MOV X0, X19
	0x03D76CC4 LDP X20, X19, [X31 + 0x50]
	0x03D76CC8 LDP X22, X21, [X31 + 0x40]
	0x03D76CCC LDP X24, X23, [X31 + 0x30]
	0x03D76CD0 LDP X26, X25, [X31 + 0x20]
	0x03D76CD4 LDP X28, X27, [X31 + 0x10]
	0x03D76CD8 LDR X30, [X31], #0x60
	0x03D76CDC RET
	0x03D76CE0 BL 0x1C16F20
	0x03D76CE4 BL 0x1C16F20
	0x03D76CE8 BL 0x1C16F20
	0x03D76CEC BL 0x1C16F20
	0x03D76CF0 BL 0x1C16F20
	0x03D76CF4 MOV X0, X21
	0x03D76CF8 BL 0x1C16F18
	0x03D76CFC B 0x3D76D38
	0x03D76D00 B 0x3D76D38
	0x03D76D04 B 0x3D76D38
	0x03D76D08 B 0x3D76D38
	0x03D76D0C B 0x3D76D38
	0x03D76D10 B 0x3D76D38
	0x03D76D14 B 0x3D76D38
	0x03D76D18 B 0x3D76D38
	0x03D76D1C B 0x3D76D38
	0x03D76D20 B 0x3D76D38
	0x03D76D24 B 0x3D76D38
	0x03D76D28 B 0x3D76D38
	0x03D76D2C B 0x3D76D38
	0x03D76D30 B 0x3D76D38
	0x03D76D34 B 0x3D76D38
	0x03D76D38 CMP W1, 0x1
	0x03D76D3C B.NE 0x3D76D50
	0x03D76D40 BL 0x3EB1AD0
	0x03D76D44 LDR X21, [X0]
	0x03D76D48 BL 0x3EB1AE0
	0x03D76D4C B 0x3D76C60
	0x03D76D50 MOV X19, X0
	0x03D76D54 MOV X21, X31
	0x03D76D58 B 0x3D76D60
	0x03D76D5C MOV X19, X0
	0x03D76D60 CBZ X20, 0x3D76DBC
	0x03D76D64 LDR X8, [X20]
	0x03D76D68 LDR X1, [X23]
	0x03D76D6C LDRH W9, [X8 + 0x12E]
	0x03D76D70 CBZ X9, 0x3D76D94
	0x03D76D74 LDR X10, [X8 + 0xB0]
	0x03D76D78 ADD X10, X10, 0x8
	0x03D76D7C LDUR X11, [X10 - 0x8]
	0x03D76D80 CMP X11, X1
	0x03D76D84 B.EQ 0x3D76DA4
	0x03D76D88 SUBS X9, X9, 0x1
	0x03D76D8C ADD X10, X10, 0x10
	0x03D76D90 B.NE 0x3D76D7C
	0x03D76D94 MOV X0, X20
	0x03D76D98 MOV W2, W31
	0x03D76D9C BL 0x1C5C788
	0x03D76DA0 B 0x3D76DB0
	0x03D76DA4 LDRSW X9, [X10]
	0x03D76DA8 ADD X8, X8, X9, 0x4, LSL
	0x03D76DAC ADD X0, X8, 0x138
	0x03D76DB0 LDP X8, X1, [X0]
	0x03D76DB4 MOV X0, X20
	0x03D76DB8 BLR X8
	0x03D76DBC CBNZ X21, 0x3D76DC8
	0x03D76DC0 MOV X0, X19
	0x03D76DC4 BL 0x1D2C690
	0x03D76DC8 MOV X0, X21
	0x03D76DCC BL 0x1C16F18
	0x03D76DD0 BL 0x1990590
	0x03D76DD4 STR X30, [X31 - 0x60]!
	0x03D76DD8 STP X28, X27, [X31 + 0x10]
	0x03D76DDC STP X26, X25, [X31 + 0x20]
	0x03D76DE0 STP X24, X23, [X31 + 0x30]
	0x03D76DE4 STP X22, X21, [X31 + 0x40]
	0x03D76DE8 STP X20, X19, [X31 + 0x50]
	0x03D76DEC ADRP X21, 0x671000
	0x03D76DF0 LDRB W8, [X21 + 0xD64]
	0x03D76DF4 MOV W20, W2
	0x03D76DF8 MOV X19, X1
	0x03D76DFC TBNZ X8, 0x0, 0x3D76E5C
	0x03D76E00 ADRP X0, 0x3A6000
	0x03D76E04 LDR X0, [X0 + 0xB68]
	0x03D76E08 BL 0x1C16CF4
	0x03D76E0C ADRP X0, 0x37D000
	0x03D76E10 LDR X0, [X0 + 0xE00]
	0x03D76E14 BL 0x1C16CF4
	0x03D76E18 ADRP X0, 0x3F0000
	0x03D76E1C LDR X0, [X0 + 0xF88]
	0x03D76E20 BL 0x1C16CF4
	0x03D76E24 ADRP X0, 0x3F0000
	0x03D76E28 LDR X0, [X0 + 0xF90]
	0x03D76E2C BL 0x1C16CF4
	0x03D76E30 ADRP X0, 0x37D000
	0x03D76E34 LDR X0, [X0 + 0xE18]
	0x03D76E38 BL 0x1C16CF4
	0x03D76E3C ADRP X0, 0x3A6000
	0x03D76E40 LDR X0, [X0 + 0x100]
	0x03D76E44 BL 0x1C16CF4
	0x03D76E48 ADRP X0, 0x3A5000
	0x03D76E4C LDR X0, [X0 + 0x898]
	0x03D76E50 BL 0x1C16CF4
	0x03D76E54 MOVZ W8, 0x1
	0x03D76E58 STRB W8, [X21 + 0xD64]
	0x03D76E5C CBZ X19, 0x3D77128
	0x03D76E60 MOV X0, X19
	0x03D76E64 MOV X1, X31
	0x03D76E68 BL 0x3DF66A4
	0x03D76E6C CBZ X0, 0x3D77128
	0x03D76E70 ADRP X10, 0x3F0000
	0x03D76E74 LDR X8, [X0]
	0x03D76E78 LDR X10, [X10 + 0xF88]
	0x03D76E7C MOV X19, X0
	0x03D76E80 LDRH W9, [X8 + 0x12E]
	0x03D76E84 LDR X1, [X10]
	0x03D76E88 CBZ X9, 0x3D76EAC
	0x03D76E8C LDR X10, [X8 + 0xB0]
	0x03D76E90 ADD X10, X10, 0x8
	0x03D76E94 LDUR X11, [X10 - 0x8]
	0x03D76E98 CMP X11, X1
	0x03D76E9C B.EQ 0x3D76EBC
	0x03D76EA0 SUBS X9, X9, 0x1
	0x03D76EA4 ADD X10, X10, 0x10
	0x03D76EA8 B.NE 0x3D76E94
	0x03D76EAC MOV X0, X19
	0x03D76EB0 MOV W2, W31
	0x03D76EB4 BL 0x1C5C788
	0x03D76EB8 B 0x3D76EC8
	0x03D76EBC LDRSW X9, [X10]
	0x03D76EC0 ADD X8, X8, X9, 0x4, LSL
	0x03D76EC4 ADD X0, X8, 0x138
	0x03D76EC8 LDP X8, X1, [X0]
	0x03D76ECC ADRP X23, 0x37D000
	0x03D76ED0 LDR X23, [X23 + 0xE00]
	0x03D76ED4 MOV X0, X19
	0x03D76ED8 BLR X8
	0x03D76EDC MOV X19, X0
	0x03D76EE0 CBZ X0, 0x3D7712C
	0x03D76EE4 ADRP X24, 0x37D000
	0x03D76EE8 ADRP X25, 0x3F0000
	0x03D76EEC ADRP X26, 0x3A6000
	0x03D76EF0 ADRP X27, 0x3A6000
	0x03D76EF4 ADRP X28, 0x3A5000
	0x03D76EF8 LDR X24, [X24 + 0xE18]
	0x03D76EFC LDR X25, [X25 + 0xF90]
	0x03D76F00 LDR X26, [X26 + 0x100]
	0x03D76F04 LDR X27, [X27 + 0xB68]
	0x03D76F08 LDR X28, [X28 + 0x898]
	0x03D76F0C LDR X8, [X19]
	0x03D76F10 LDR X1, [X24]
	0x03D76F14 LDRH W9, [X8 + 0x12E]
	0x03D76F18 CBZ X9, 0x3D76F3C
	0x03D76F1C LDR X10, [X8 + 0xB0]
	0x03D76F20 ADD X10, X10, 0x8
	0x03D76F24 LDUR X11, [X10 - 0x8]
	0x03D76F28 CMP X11, X1
	0x03D76F2C B.EQ 0x3D76F4C
	0x03D76F30 SUBS X9, X9, 0x1
	0x03D76F34 ADD X10, X10, 0x10
	0x03D76F38 B.NE 0x3D76F24
	0x03D76F3C MOV X0, X19
	0x03D76F40 MOV W2, W31
	0x03D76F44 BL 0x1C5C788
	0x03D76F48 B 0x3D76F58
	0x03D76F4C LDRSW X9, [X10]
	0x03D76F50 ADD X8, X8, X9, 0x4, LSL
	0x03D76F54 ADD X0, X8, 0x138
	0x03D76F58 LDP X8, X1, [X0]
	0x03D76F5C MOV X0, X19
	0x03D76F60 BLR X8
	0x03D76F64 TBZ X0, 0x0, 0x3D770A4
	0x03D76F68 LDR X8, [X19]
	0x03D76F6C LDR X1, [X25]
	0x03D76F70 LDRH W9, [X8 + 0x12E]
	0x03D76F74 CBZ X9, 0x3D76F98
	0x03D76F78 LDR X10, [X8 + 0xB0]
	0x03D76F7C ADD X10, X10, 0x8
	0x03D76F80 LDUR X11, [X10 - 0x8]
	0x03D76F84 CMP X11, X1
	0x03D76F88 B.EQ 0x3D76FA8
	0x03D76F8C SUBS X9, X9, 0x1
	0x03D76F90 ADD X10, X10, 0x10
	0x03D76F94 B.NE 0x3D76F80
	0x03D76F98 MOV X0, X19
	0x03D76F9C MOV W2, W31
	0x03D76FA0 BL 0x1C5C788
	0x03D76FA4 B 0x3D76FB4
	0x03D76FA8 LDRSW X9, [X10]
	0x03D76FAC ADD X8, X8, X9, 0x4, LSL
	0x03D76FB0 ADD X0, X8, 0x138
	0x03D76FB4 LDP X8, X1, [X0]
	0x03D76FB8 MOV X0, X19
	0x03D76FBC BLR X8
	0x03D76FC0 MOV X22, X0
	0x03D76FC4 LDR X0, [X26]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x672000
	009 Move W8, [X21+3414]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x37E000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x3A7000
	020 Move X0, [X0+272]
	021 Call 0x1C17CF4
	022 Move X0, 0x3A7000
	023 Move X0, [X0+280]
	024 Call 0x1C17CF4
	025 Move X0, 0x37E000
	026 Move X0, [X0+3608]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3414], W8
	030 Move X19, [X19+16]
	031 Compare X19, 0
	032 JumpIfEqual {168}
	033 Move X10, 0x3A7000
	034 Move X8, [X19]
	035 Move X10, [X10+272]
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X1, [X10]
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move X0, X19
	047 Move W2, W31
	048 Call 0x1C5D788
	049 NotImplemented "Instruction LDRSW not yet implemented."
	050 Add X8, X8, X9
	051 Add X0, X8, 312
	052 Move X8, [X0]
	053 Move X1, [X0+8]
	054 Move X22, 0x37E000
	055 Move X22, [X22+3584]
	056 Move X0, X19
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X19, X0
	059 Compare X0, 0
	060 JumpIfEqual {169}
	061 Move X23, 0x37E000
	062 Move X24, 0x3A7000
	063 Move X23, [X23+3608]
	064 Move X24, [X24+280]
	065 Move X8, [X19]
	066 Move X1, [X23]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X19
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X1, [X0+8]
	084 Move X0, X19
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {126}
	090 Move X8, [X19]
	091 Move X1, [X24]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move X0, X19
	102 Move W2, W31
	103 Call 0x1C5D788
	104 NotImplemented "Instruction LDRSW not yet implemented."
	105 Add X8, X8, X9
	106 Add X0, X8, 312
	107 Move X8, [X0]
	108 Move X1, [X0+8]
	109 Move X0, X19
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X21, X0
	112 Compare X0, 0
	113 JumpIfEqual {167}
	114 Move X0, [X21+16]
	115 Move X1, X20
	116 Move X2, X31
	117 Call String.op_Equality, X0, X1
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {65}
	122 Move X20, X31
	123 Move W23, 5
	124 Compare X19, 0
	125 JumpIfNotEqual {131}
	126 Move X20, X31
	127 Move X21, X31
	128 Move W23, 6
	129 Compare X19, 0
	130 JumpIfEqual {152}
	131 Move X8, [X19]
	132 Move X1, [X22]
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Compare X9, 0
	135 JumpIfEqual {142}
	136 Move X10, [X8+176]
	137 Add X10, X10, 8
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Subtract X9, X9, 1
	141 Add X10, X10, 16
	142 Move X0, X19
	143 Move W2, W31
	144 Call 0x1C5D788
	145 NotImplemented "Instruction LDRSW not yet implemented."
	146 Add X8, X8, X9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X1, [X0+8]
	150 Move X0, X19
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Compare X20, 0
	153 JumpIfNotEqual {170}
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Compare W23, 0
	156 JumpIfNotEqual {158}
	157 Move X21, X31
	158 Move X0, X21
	159 Move X20, [X31+48]
	160 Move X19, [X31+56]
	161 Move X22, [X31+32]
	162 Move X21, [X31+40]
	163 Move X24, [X31+16]
	164 Move X23, [X31+24]
	165 Move X30, [X31+64]
	166 Return X0
	167 Call 0x1C17F20
	168 Call 0x1C17F20
	169 Call 0x1C17F20
	170 Move X0, X20
	171 Call 0x1C17F18
	172 Move X21, X0
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X0, X21
	175 Call 0x3EB2AD0
	176 Move X20, [X0]
	177 Call 0x3EB2AE0
	178 Move W23, W31
	179 Move X21, X31
	180 Compare X19, 0
	181 JumpIfNotEqual {131}
	182 Move X20, X31
	183 Move X21, X0
	184 Compare X19, 0
	185 JumpIfEqual {207}
	186 Move X8, [X19]
	187 Move X1, [X22]
	188 NotImplemented "Instruction LDRH not yet implemented."
	189 Compare X9, 0
	190 JumpIfEqual {197}
	191 Move X10, [X8+176]
	192 Add X10, X10, 8
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Subtract X9, X9, 1
	196 Add X10, X10, 16
	197 Move X0, X19
	198 Move W2, W31
	199 Call 0x1C5D788
	200 NotImplemented "Instruction LDRSW not yet implemented."
	201 Add X8, X8, X9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X1, [X0+8]
	205 Move X0, X19
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Compare X20, 0
	208 JumpIfNotEqual {211}
	209 Move X0, X21
	210 Call 0x1D2D690
	211 Move X0, X20
	212 Call 0x1C17F18
	213 Call 0x1991590

Method: System.Void ReorderDisplay(System.Int32 from, System.Int32 to)

Disassembly:
	0x03D76FC8 LDR W8, [X0 + 0xE0]
	0x03D76FCC CBNZ W8, 0x3D76FD4
	0x03D76FD0 BL 0x1C16DFC
	0x03D76FD4 CBZ X22, 0x3D77124
	0x03D76FD8 LDR X8, [X26]
	0x03D76FDC LDR X8, [X8 + 0xB8]
	0x03D76FE0 LDR W1, [X8]
	0x03D76FE4 MOV X0, X22
	0x03D76FE8 MOV X2, X31
	0x03D76FEC BL 0x3DF3018
	0x03D76FF0 MOV X21, X0
	0x03D76FF4 CBZ X0, 0x3D76F0C
	0x03D76FF8 LDR X9, [X21]
	0x03D76FFC LDR X8, [X27]
	0x03D77000 LDRB W11, [X9 + 0x130]
	0x03D77004 LDRB W10, [X8 + 0x130]
	0x03D77008 CMP W11, W10
	0x03D7700C B.CC 0x3D76F0C
	0x03D77010 LDR X9, [X9 + 0xC8]
	0x03D77014 ADD X9, X9, X10, 0x3, LSL
	0x03D77018 LDUR X9, [X9 - 0x8]
	0x03D7701C CMP X9, X8
	0x03D77020 B.NE 0x3D76F0C
	0x03D77024 LDR X0, [X26]
	0x03D77028 LDR W8, [X0 + 0xE0]
	0x03D7702C CBNZ W8, 0x3D77038
	0x03D77030 BL 0x1C16DFC
	0x03D77034 LDR X0, [X26]
	0x03D77038 LDR X8, [X0 + 0xB8]
	0x03D7703C LDR W1, [X8 + 0x4]
	0x03D77040 MOV X0, X22
	0x03D77044 MOV X2, X31
	0x03D77048 BL 0x3DF3018
	0x03D7704C CBZ X0, 0x3D77068
	0x03D77050 LDR X9, [X0]
	0x03D77054 LDR X8, [X28]
	0x03D77058 LDRB W11, [X9 + 0x130]
	0x03D7705C LDRB W10, [X8 + 0x130]
	0x03D77060 CMP W11, W10
	0x03D77064 B.CS 0x3D77070
	0x03D77068 MOV X1, X31
	0x03D7706C B 0x3D77084
	0x03D77070 LDR X9, [X9 + 0xC8]
	0x03D77074 ADD X9, X9, X10, 0x3, LSL
	0x03D77078 LDUR X9, [X9 - 0x8]
	0x03D7707C CMP X9, X8
	0x03D77080 CSEL X1, X0, X31, EQ
	0x03D77084 LDR X8, [X21 + 0x98]
	0x03D77088 CBZ X8, 0x3D76F0C
	0x03D7708C LDR X0, [X8 + 0x40]
	0x03D77090 LDR X9, [X8 + 0x18]
	0x03D77094 LDR X3, [X8 + 0x28]
	0x03D77098 MOV W2, W20
	0x03D7709C BLR X9
	0x03D770A0 B 0x3D76F0C
	0x03D770A4 MOV X20, X31
	0x03D770A8 CBZ X19, 0x3D77104
	0x03D770AC LDR X8, [X19]
	0x03D770B0 LDR X1, [X23]
	0x03D770B4 LDRH W9, [X8 + 0x12E]
	0x03D770B8 CBZ X9, 0x3D770DC
	0x03D770BC LDR X10, [X8 + 0xB0]
	0x03D770C0 ADD X10, X10, 0x8
	0x03D770C4 LDUR X11, [X10 - 0x8]
	0x03D770C8 CMP X11, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x672000
	007 Move W8, [X22+3415]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x3F1000
	016 Move X0, [X0+3840]
	017 Call 0x1C17CF4
	018 Move X0, 0x3F1000
	019 Move X0, [X0+3896]
	020 Call 0x1C17CF4
	021 Move X0, 0x3F0000
	022 Move X0, [X0+3600]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3415], W8
	026 Move X0, X21
	027 Call Columns.InitOrderColumns, X0
	028 Move X0, [X21+24]
	029 Compare X0, 0
	030 JumpIfEqual {78}
	031 Move X8, 0x3F0000
	032 Move X8, [X8+3600]
	033 Move W1, W20
	034 Move X2, [X8]
	035 Call List`1<Object>.get_Item, X0, X1
	036 Move X8, [X21+24]
	037 Compare X8, 0
	038 JumpIfEqual {78}
	039 Move X9, 0x3F0000
	040 Move X9, [X9+3896]
	041 Move X22, X0
	042 Move X0, X8
	043 Move W1, W20
	044 Move X2, [X9]
	045 Call List`1<Object>.RemoveAt, X0, X1
	046 Move X0, [X21+24]
	047 Compare X0, 0
	048 JumpIfEqual {78}
	049 Move X8, 0x3F0000
	050 Move X8, [X8+3840]
	051 Move W1, W19
	052 Move X2, X22
	053 Move X3, [X8]
	054 Call List`1<Object>.Insert, X0, X1, X2
	055 Move X0, X21
	056 Call Columns.DirtyVisibleColumns, X0
	057 Move X8, [X21+104]
	058 Compare X8, 0
	059 JumpIfEqual {72}
	060 Move X5, [X8+24]
	061 Move X0, [X8+64]
	062 Move X4, [X8+40]
	063 Move X1, X22
	064 Move W2, W20
	065 Move W3, W19
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 CallNoReturn X5
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return 
	078 Call 0x1C17F20

Method: System.Void InitOrderColumns()

Disassembly:
	0x03D7566C LDR X0, [X0 + 0xF30]
	0x03D75670 BL 0x1C16D08
	0x03D75674 MOV X1, X0
	0x03D75678 MOV X0, X19
	0x03D7567C BL 0x1C16DEC
	0x03D75680 BL 0x1C16F20
	0x03D75684 STP X30, X21, [X31 - 0x20]!
	0x03D75688 STP X20, X19, [X31 + 0x10]
	0x03D7568C ADRP X21, 0x672000
	0x03D75690 LDRB W8, [X21 + 0xD4D]
	0x03D75694 MOV X19, X1
	0x03D75698 MOV X20, X0
	0x03D7569C TBNZ X8, 0x0, 0x3D756B4
	0x03D756A0 ADRP X0, 0x3F1000
	0x03D756A4 LDR X0, [X0 + 0xDA8]
	0x03D756A8 BL 0x1C16CF4
	0x03D756AC MOVZ W8, 0x1
	0x03D756B0 STRB W8, [X21 + 0xD4D]
	0x03D756B4 LDR X20, [X20 + 0x10]
	0x03D756B8 CBZ X20, 0x3D7572C
	0x03D756BC ADRP X10, 0x3F1000
	0x03D756C0 LDR X8, [X20]
	0x03D756C4 LDR X10, [X10 + 0xDA8]
	0x03D756C8 LDRH W9, [X8 + 0x12E]
	0x03D756CC LDR X1, [X10]
	0x03D756D0 CBZ X9, 0x3D756F4
	0x03D756D4 LDR X10, [X8 + 0xB0]
	0x03D756D8 ADD X10, X10, 0x8
	0x03D756DC LDUR X11, [X10 - 0x8]
	0x03D756E0 CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x673000
	005 Move W8, [X20+3416]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x3F2000
	012 Move X0, [X0+3768]
	013 Call 0x1C17CF4
	014 Move X0, 0x3F2000
	015 Move X0, [X0+3432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3416], W8
	019 Move X8, [X19+24]
	020 Compare X8, 0
	021 JumpIfNotEqual {33}
	022 Move X8, 0x3F2000
	023 Move X8, [X8+3432]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0x3F2000
	027 Move X8, [X8+3768]
	028 Move X1, X19
	029 Move X20, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move [X19+24], X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Void DirtyVisibleColumns()

Disassembly:
	0x03D76B6C ADD X8, X8, X9, 0x4, LSL
	0x03D76B70 ADD X0, X8, 0x138
	0x03D76B74 LDP X8, X1, [X0]
	0x03D76B78 MOV X0, X20
	0x03D76B7C BLR X8
	0x03D76B80 MOV X22, X0
	0x03D76B84 LDR X0, [X24]
	0x03D76B88 BL 0x1C16F10
	0x03D76B8C MOV X21, X0
	0x03D76B90 MOV X1, X31
	0x03D76B94 BL 0x3DEF578
	0x03D76B98 LDR X0, [X25]
	0x03D76B9C LDR W8, [X0 + 0xE0]
	0x03D76BA0 CBNZ W8, 0x3D76BA8
	0x03D76BA4 BL 0x1C16DFC
	0x03D76BA8 CBZ X21, 0x3D76CE0
	0x03D76BAC LDR X8, [X25]
	0x03D76BB0 LDR X8, [X8 + 0xB8]
	0x03D76BB4 LDR X1, [X8 + 0x28]
	0x03D76BB8 MOV X0, X21
	0x03D76BBC MOV X2, X31
	0x03D76BC0 BL 0x3DF1C70
	0x03D76BC4 CBZ X22, 0x3D76CE4
	0x03D76BC8 LDR X8, [X22 + 0x88]
	0x03D76BCC CMP X8, 0x0
	0x03D76BD0 CSEL X26, X26, X8, EQ
	0x03D76BD4 CBZ X8, 0x3D76BF4
	0x03D76BD8 CBZ X26, 0x3D76CE8
	0x03D76BDC LDR X0, [X26 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x672000
	005 Move W8, [X20+3417]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3F1000
	012 Move X0, [X0+3504]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3417], W8
	016 Move X8, [X19+32]
	017 Move W9, 1
	018 Move [X19+40], W9
	019 Compare X8, 0
	020 JumpIfEqual {35}
	021 Move W2, [X8+24]
	022 Move W9, [X8+28]
	023 Add W9, W9, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move [X8+24], W31
	026 Move [X8+28], W9
	027 Move X0, [X8+16]
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move W1, W31
	031 Move X3, X31
	032 Move X30, [X31+32]
	033 Call Array.Clear, X0, X1, X2
	034 Return 
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return 

Method: System.Void UpdateVisibleColumns()

Disassembly:
	0x03D756E4 B.EQ 0x3D75704
	0x03D756E8 SUBS X9, X9, 0x1
	0x03D756EC ADD X10, X10, 0x10
	0x03D756F0 B.NE 0x3D756DC
	0x03D756F4 MOVZ W2, 0x4
	0x03D756F8 MOV X0, X20
	0x03D756FC BL 0x1C5C788
	0x03D75700 B 0x3D75714
	0x03D75704 LDR W9, [X10]
	0x03D75708 ADD W9, W9, 0x4
	0x03D7570C ADD X8, X8, W9, 0x4, SXTW
	0x03D75710 ADD X0, X8, 0x138
	0x03D75714 LDP X3, X2, [X0]
	0x03D75718 MOV X0, X20
	0x03D7571C MOV X1, X19
	0x03D75720 LDP X20, X19, [X31 + 0x10]
	0x03D75724 LDP X30, X21, [X31], #0x20
	0x03D75728 BR X3
	0x03D7572C BL 0x1C16F20
	0x03D75730 STR X30, [X31 - 0x40]!
	0x03D75734 STP X24, X23, [X31 + 0x10]
	0x03D75738 STP X22, X21, [X31 + 0x20]
	0x03D7573C STP X20, X19, [X31 + 0x30]
	0x03D75740 ADRP X21, 0x672000
	0x03D75744 LDRB W8, [X21 + 0xD4E]
	0x03D75748 MOV X20, X1
	0x03D7574C MOV X19, X0
	0x03D75750 TBNZ X8, 0x0, 0x3D7578C
	0x03D75754 ADRP X0, 0x37E000
	0x03D75758 LDR X0, [X0 + 0xE00]
	0x03D7575C BL 0x1C16CF4
	0x03D75760 ADRP X0, 0x3A7000
	0x03D75764 LDR X0, [X0 + 0x110]
	0x03D75768 BL 0x1C16CF4
	0x03D7576C ADRP X0, 0x3A7000
	0x03D75770 LDR X0, [X0 + 0x118]
	0x03D75774 BL 0x1C16CF4
	0x03D75778 ADRP X0, 0x37E000
	0x03D7577C LDR X0, [X0 + 0xE18]
	0x03D75780 BL 0x1C16CF4
	0x03D75784 MOVZ W8, 0x1
	0x03D75788 STRB W8, [X21 + 0xD4E]
	0x03D7578C LDR X19, [X19 + 0x10]
	0x03D75790 CBZ X19, 0x3D7598C
	0x03D75794 ADRP X10, 0x3A7000
	0x03D75798 LDR X8, [X19]
	0x03D7579C LDR X10, [X10 + 0x110]
	0x03D757A0 LDRH W9, [X8 + 0x12E]
	0x03D757A4 LDR X1, [X10]
	0x03D757A8 CBZ X9, 0x3D757CC
	0x03D757AC LDR X10, [X8 + 0xB0]
	0x03D757B0 ADD X10, X10, 0x8
	0x03D757B4 LDUR X11, [X10 - 0x8]
	0x03D757B8 CMP X11, X1
	0x03D757BC B.EQ 0x3D757DC
	0x03D757C0 SUBS X9, X9, 0x1
	0x03D757C4 ADD X10, X10, 0x10
	0x03D757C8 B.NE 0x3D757B4
	0x03D757CC MOV X0, X19
	0x03D757D0 MOV W2, W31
	0x03D757D4 BL 0x1C5C788
	0x03D757D8 B 0x3D757E8
	0x03D757DC LDRSW X9, [X10]
	0x03D757E0 ADD X8, X8, X9, 0x4, LSL
	0x03D757E4 ADD X0, X8, 0x138
	0x03D757E8 LDP X8, X1, [X0]
	0x03D757EC ADRP X22, 0x37E000
	0x03D757F0 LDR X22, [X22 + 0xE00]
	0x03D757F4 MOV X0, X19
	0x03D757F8 BLR X8
	0x03D757FC MOV X19, X0
	0x03D75800 CBZ X0, 0x3D75990
	0x03D75804 ADRP X23, 0x37E000
	0x03D75808 ADRP X24, 0x3A7000
	0x03D7580C LDR X23, [X23 + 0xE18]
	0x03D75810 LDR X24, [X24 + 0x118]
	0x03D75814 LDR X8, [X19]
	0x03D75818 LDR X1, [X23]
	0x03D7581C LDRH W9, [X8 + 0x12E]
	0x03D75820 CBZ X9, 0x3D75844
	0x03D75824 LDR X10, [X8 + 0xB0]
	0x03D75828 ADD X10, X10, 0x8
	0x03D7582C LDUR X11, [X10 - 0x8]
	0x03D75830 CMP X11, X1
	0x03D75834 B.EQ 0x3D75854
	0x03D75838 SUBS X9, X9, 0x1
	0x03D7583C ADD X10, X10, 0x10
	0x03D75840 B.NE 0x3D7582C
	0x03D75844 MOV X0, X19
	0x03D75848 MOV W2, W31
	0x03D7584C BL 0x1C5C788
	0x03D75850 B 0x3D75860
	0x03D75854 LDRSW X9, [X10]
	0x03D75858 ADD X8, X8, X9, 0x4, LSL
	0x03D7585C ADD X0, X8, 0x138
	0x03D75860 LDP X8, X1, [X0]
	0x03D75864 MOV X0, X19
	0x03D75868 BLR X8
	0x03D7586C MOV W21, W0
	0x03D75870 TBZ X0, 0x0, 0x3D758F4
	0x03D75874 LDR X8, [X19]
	0x03D75878 LDR X1, [X24]
	0x03D7587C LDRH W9, [X8 + 0x12E]
	0x03D75880 CBZ X9, 0x3D758A4
	0x03D75884 LDR X10, [X8 + 0xB0]
	0x03D75888 ADD X10, X10, 0x8
	0x03D7588C LDUR X11, [X10 - 0x8]
	0x03D75890 CMP X11, X1
	0x03D75894 B.EQ 0x3D758B4
	0x03D75898 SUBS X9, X9, 0x1
	0x03D7589C ADD X10, X10, 0x10
	0x03D758A0 B.NE 0x3D7588C
	0x03D758A4 MOV X0, X19
	0x03D758A8 MOV W2, W31
	0x03D758AC BL 0x1C5C788
	0x03D758B0 B 0x3D758C0
	0x03D758B4 LDRSW X9, [X10]
	0x03D758B8 ADD X8, X8, X9, 0x4, LSL
	0x03D758BC ADD X0, X8, 0x138
	0x03D758C0 LDP X8, X1, [X0]
	0x03D758C4 MOV X0, X19
	0x03D758C8 BLR X8
	0x03D758CC CBZ X0, 0x3D75988
	0x03D758D0 LDR X0, [X0 + 0x10]
	0x03D758D4 MOV X1, X20
	0x03D758D8 MOV X2, X31
	0x03D758DC BL 0x321BA08
	0x03D758E0 TBZ X0, 0x0, 0x3D75814
	0x03D758E4 MOV X20, X31
	0x03D758E8 MOVZ W23, 0x5
	0x03D758EC CBNZ X19, 0x3D75904

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x673000
	009 Move W8, [X20+3418]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {41}
	015 Move X0, 0x3F2000
	016 Move X0, [X0+3496]
	017 Call 0x1C17CF4
	018 Move X0, 0x3F2000
	019 Move X0, [X0+3552]
	020 Call 0x1C17CF4
	021 Move X0, 0x3F2000
	022 Move X0, [X0+3776]
	023 Call 0x1C17CF4
	024 Move X0, 0x3F2000
	025 Move X0, [X0+3784]
	026 Call 0x1C17CF4
	027 Move X0, 0x3F2000
	028 Move X0, [X0+3432]
	029 Call 0x1C17CF4
	030 Move X0, 0x3F2000
	031 Move X0, [X0+3792]
	032 Call 0x1C17CF4
	033 Move X0, 0x3F2000
	034 Move X0, [X0+3800]
	035 Call 0x1C17CF4
	036 Move X0, 0x3F2000
	037 Move X0, [X0+3808]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+3418], W8
	041 Move W8, [X19+40]
	042 Compare W8, 0
	043 JumpIfEqual {139}
	044 Move X0, X19
	045 Call Columns.InitOrderColumns, X0
	046 Move X20, [X19+32]
	047 Compare X20, 0
	048 JumpIfNotEqual {88}
	049 Move X20, [X19+16]
	050 Compare X20, 0
	051 JumpIfEqual {147}
	052 Move X10, 0x3F2000
	053 Move X8, [X20]
	054 Move X10, [X10+3496]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Move X1, [X10]
	057 Compare X9, 0
	058 JumpIfEqual {65}
	059 Move X10, [X8+176]
	060 Add X10, X10, 8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract X9, X9, 1
	064 Add X10, X10, 16
	065 Move X0, X20
	066 Move W2, W31
	067 Call 0x1C5D788
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Add X8, X8, X9
	070 Add X0, X8, 312
	071 Move X8, [X0]
	072 Move X1, [X0+8]
	073 Move X0, X20
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X8, 0x3F2000
	076 Move X8, [X8+3432]
	077 Move W21, W0
	078 Move X8, [X8]
	079 Move X0, X8
	080 Call 0x1C17F10
	081 Move X8, 0x3F2000
	082 Move X8, [X8+3784]
	083 Move W1, W21
	084 Move X20, X0
	085 Move X2, [X8]
	086 Call List`1<Object>..ctor, X0, X1
	087 Move [X19+32], X20
	088 Move X24, 0x3F2000
	089 Move X24, [X24+3808]
	090 Move X21, [X19+24]
	091 Move X0, [X24]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move X0, [X24]
	097 Move X8, [X0+184]
	098 Move X22, [X8+8]
	099 Compare X22, 0
	100 JumpIfNotEqual {122}
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {106}
	104 Call 0x1C17DFC
	105 Move X0, [X24]
	106 Move X9, 0x3F2000
	107 Move X8, [X0+184]
	108 Move X9, [X9+3792]
	109 Move X23, [X8]
	110 Move X0, [X9]
	111 Call 0x1C17F10
	112 Move X8, 0x3F2000
	113 Move X8, [X8+3800]
	114 Move X1, X23
	115 Move X3, X31
	116 Move X22, X0
	117 Move X2, [X8]
	118 Call Predicate`1<Object>..ctor, X0, X1, X2
	119 Move X8, [X24]
	120 Move X8, [X8+184]
	121 Move [X8+8], X22
	122 Compare X21, 0
	123 JumpIfEqual {147}
	124 Move X8, 0x3F2000
	125 Move X8, [X8+3776]
	126 Move X0, X21
	127 Move X1, X22
	128 Move X2, [X8]
	129 Call List`1<Object>.FindAll, X0, X1
	130 Compare X20, 0
	131 JumpIfEqual {147}
	132 Move X8, 0x3F2000
	133 Move X8, [X8+3552]
	134 Move X1, X0
	135 Move X0, X20
	136 Move X2, [X8]
	137 Call List`1<Object>.AddRange, X0, X1
	138 Move [X19+40], W31
	139 Move X20, [X31+48]
	140 Move X19, [X31+56]
	141 Move X22, [X31+32]
	142 Move X21, [X31+40]
	143 Move X24, [X31+16]
	144 Move X23, [X31+24]
	145 Move X30, [X31+64]
	146 Return 
	147 Call 0x1C17F20

Method: System.Void NotifyChange(UnityEngine.UIElements.ColumnsDataType type)

Disassembly:
	0x03D7559C LDR X0, [X8]
	0x03D755A0 BL 0x1C16F10
	0x03D755A4 ADRP X8, 0x3F1000
	0x03D755A8 LDR X8, [X8 + 0xEF0]
	0x03D755AC MOV X1, X20
	0x03D755B0 MOV X3, X31
	0x03D755B4 MOV X21, X0

ISIL:
	001 Move X8, [X0+64]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X3, [X8+24]
	005 Move X0, [X8+64]
	006 Move X2, [X8+40]
	007 CallNoReturn X3
	008 Return 

Method: System.Void .ctor()

Disassembly:
	0x03D770CC B.EQ 0x3D770EC
	0x03D770D0 SUBS X9, X9, 0x1
	0x03D770D4 ADD X10, X10, 0x10
	0x03D770D8 B.NE 0x3D770C4
	0x03D770DC MOV X0, X19
	0x03D770E0 MOV W2, W31
	0x03D770E4 BL 0x1C5C788
	0x03D770E8 B 0x3D770F8
	0x03D770EC LDRSW X9, [X10]
	0x03D770F0 ADD X8, X8, X9, 0x4, LSL
	0x03D770F4 ADD X0, X8, 0x138
	0x03D770F8 LDP X8, X1, [X0]
	0x03D770FC MOV X0, X19
	0x03D77100 BLR X8
	0x03D77104 CBNZ X20, 0x3D77130
	0x03D77108 LDP X20, X19, [X31 + 0x50]
	0x03D7710C LDP X22, X21, [X31 + 0x40]
	0x03D77110 LDP X24, X23, [X31 + 0x30]
	0x03D77114 LDP X26, X25, [X31 + 0x20]
	0x03D77118 LDP X28, X27, [X31 + 0x10]
	0x03D7711C LDR X30, [X31], #0x60
	0x03D77120 RET
	0x03D77124 BL 0x1C16F20
	0x03D77128 BL 0x1C16F20
	0x03D7712C BL 0x1C16F20
	0x03D77130 MOV X0, X20
	0x03D77134 BL 0x1C16F18
	0x03D77138 B 0x3D77158
	0x03D7713C B 0x3D77158
	0x03D77140 B 0x3D77158
	0x03D77144 B 0x3D77158
	0x03D77148 B 0x3D77158
	0x03D7714C B 0x3D77158
	0x03D77150 B 0x3D77158
	0x03D77154 B 0x3D77158
	0x03D77158 CMP W1, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x671000
	007 Move X22, 0x3F0000
	008 Move X20, 0x3F0000
	009 Move W8, [X21+3419]
	010 Move X22, [X22+3432]
	011 Move X20, [X20+3448]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x3F0000
	018 Move X0, [X0+3448]
	019 Call 0x1C17CF4
	020 Move X0, 0x3F0000
	021 Move X0, [X0+3432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3419], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move W8, 1
	031 Move W9, 257
	032 Move [X19+16], X20
	033 Move [X19+40], W8
	034 Move [X19+44], W8
	035 NotImplemented "Instruction STRH not yet implemented."
	036 Move X0, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X1, X31
	042 Move X30, [X31+48]
	043 Call Object..ctor, X0
	044 Return 

