Type: UnityEngine.UIElements.BaseCompositeField`3

Method: UnityEngine.UIElements.VisualElement GetSpacer()

Disassembly:
	0x02769920 LDRB W8, [X0 + 0x135]
	0x02769924 TBNZ X8, 0x0, 0x276992C
	0x02769928 BL 0x1C5C684
	0x0276992C LDR X0, [X19]
	0x02769930 LDRB W8, [X0 + 0x135]
	0x02769934 TBNZ X8, 0x0, 0x276993C
	0x02769938 BL 0x1C5C684
	0x0276993C LDR X8, [X0 + 0xC0]
	0x02769940 ADRP X20, 0x19B4000
	0x02769944 LDR X0, [X8 + 0x8]
	0x02769948 LDRB W8, [X0 + 0x135]
	0x0276994C LDR X20, [X20 + 0xD40]
	0x02769950 TBNZ X8, 0x0, 0x2769958
	0x02769954 BL 0x1C5C684
	0x02769958 LDR X8, [X0 + 0xB8]
	0x0276995C LDR X1, [X20]
	0x02769960 MOV X2, X31
	0x02769964 LDR X0, [X8 + 0x30]
	0x02769968 BL 0x321B938
	0x0276996C LDR X8, [X19]
	0x02769970 MOV X20, X0
	0x02769974 LDRB W9, [X8 + 0x135]
	0x02769978 TBNZ X9, 0x0, 0x2769988
	0x0276997C MOV X0, X8
	0x02769980 BL 0x1C5C684
	0x02769984 MOV X8, X0
	0x02769988 LDR X8, [X8 + 0xC0]
	0x0276998C LDR X0, [X8 + 0x8]
	0x02769990 LDRB W8, [X0 + 0x135]
	0x02769994 TBNZ X8, 0x0, 0x276999C
	0x02769998 BL 0x1C5C684
	0x0276999C LDR X8, [X0 + 0xB8]
	0x027699A0 STR X20, [X8 + 0x38]
	0x027699A4 LDR X0, [X19]
	0x027699A8 LDRB W8, [X0 + 0x135]
	0x027699AC TBNZ X8, 0x0, 0x27699B4
	0x027699B0 BL 0x1C5C684
	0x027699B4 LDR X8, [X0 + 0xC0]
	0x027699B8 LDR X0, [X8 + 0x8]
	0x027699BC LDRB W8, [X0 + 0x135]
	0x027699C0 TBNZ X8, 0x0, 0x27699C8
	0x027699C4 BL 0x1C5C684
	0x027699C8 LDR X0, [X19]
	0x027699CC LDRB W8, [X0 + 0x135]
	0x027699D0 TBNZ X8, 0x0, 0x27699D8
	0x027699D4 BL 0x1C5C684
	0x027699D8 LDR X8, [X0 + 0xC0]
	0x027699DC ADRP X20, 0x19B4000
	0x027699E0 LDR X0, [X8 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1C72000
	006 Move X21, 0x19B3000
	007 Move W8, [X19+1966]
	008 Move X21, [X21+2200]
	009 Move X20, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x19B3000
	015 Move X0, [X0+2200]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+1966], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X19, X0
	023 Call VisualElement..ctor, X0
	024 Move X8, [X20+32]
	025 Move X8, [X8+192]
	026 Move X0, [X8+8]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X8, [X20+32]
	038 Move X8, [X8+192]
	039 Move X0, [X8+8]
	040 Move W8, [X0+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {46}
	045 Call 0x1C5D684
	046 Compare X19, 0
	047 JumpIfEqual {64}
	048 Move X8, [X0+184]
	049 Move X0, X19
	050 Move X2, X31
	051 Move X1, [X8+24]
	052 Call VisualElement.AddToClassList, X0, X1
	053 Move X0, X19
	054 Move W1, W31
	055 Move X2, X31
	056 Call VisualElement.set_visible, X0, X1
	057 Move [X19+32], W31
	058 Move X0, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Return X0
	064 Call 0x1C17F20

Method: UnityEngine.UIElements.BaseCompositeField`3/FieldDescription<TValueType, TField, TFieldValue>[] DescribeFields()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void .ctor(System.String label, System.Int32 fieldsByLine)

Disassembly:
	0x027699E4 LDRB W8, [X0 + 0x135]
	0x027699E8 LDR X20, [X20 + 0xD48]
	0x027699EC TBNZ X8, 0x0, 0x27699F4
	0x027699F0 BL 0x1C5C684
	0x027699F4 LDR X8, [X0 + 0xB8]
	0x027699F8 LDR X1, [X20]
	0x027699FC MOV X2, X31
	0x02769A00 LDR X0, [X8]
	0x02769A04 BL 0x321B938
	0x02769A08 LDR X8, [X19]
	0x02769A0C MOV X20, X0
	0x02769A10 LDRB W9, [X8 + 0x135]
	0x02769A14 TBNZ X9, 0x0, 0x2769A24
	0x02769A18 MOV X0, X8
	0x02769A1C BL 0x1C5C684
	0x02769A20 MOV X8, X0
	0x02769A24 LDR X8, [X8 + 0xC0]
	0x02769A28 LDR X0, [X8 + 0x8]
	0x02769A2C LDRB W8, [X0 + 0x135]
	0x02769A30 TBNZ X8, 0x0, 0x2769A38
	0x02769A34 BL 0x1C5C684
	0x02769A38 LDR X8, [X0 + 0xB8]
	0x02769A3C STR X20, [X8 + 0x40]
	0x02769A40 LDR X0, [X19]
	0x02769A44 LDRB W8, [X0 + 0x135]
	0x02769A48 TBNZ X8, 0x0, 0x2769A50
	0x02769A4C BL 0x1C5C684
	0x02769A50 LDR X8, [X0 + 0xC0]
	0x02769A54 LDR X0, [X8 + 0x8]
	0x02769A58 LDRB W8, [X0 + 0x135]
	0x02769A5C TBNZ X8, 0x0, 0x2769A6C
	0x02769A60 LDP X20, X19, [X31 + 0x10]
	0x02769A64 LDP X30, X21, [X31], #0x20
	0x02769A68 B 0x1C5C684
	0x02769A6C LDP X20, X19, [X31 + 0x10]
	0x02769A70 LDP X30, X21, [X31], #0x20
	0x02769A74 RET
	0x02769A78 STP X30, X21, [X31 - 0x20]!
	0x02769A7C STP X20, X19, [X31 + 0x10]
	0x02769A80 ADRP X19, 0x1C71000
	0x02769A84 ADRP X21, 0x19B2000
	0x02769A88 LDRB W8, [X19 + 0x7B1]
	0x02769A8C LDR X21, [X21 + 0x898]
	0x02769A90 MOV X20, X1
	0x02769A94 TBNZ X8, 0x0, 0x2769AAC
	0x02769A98 ADRP X0, 0x19B2000
	0x02769A9C LDR X0, [X0 + 0x898]
	0x02769AA0 BL 0x1C16CF4
	0x02769AA4 MOVZ W8, 0x1
	0x02769AA8 STRB W8, [X19 + 0x7B1]
	0x02769AAC LDR X0, [X21]
	0x02769AB0 BL 0x1C16F10
	0x02769AB4 MOV X1, X31
	0x02769AB8 MOV X19, X0
	0x02769ABC BL 0x3DEF578
	0x02769AC0 LDR X8, [X20 + 0x20]
	0x02769AC4 LDR X8, [X8 + 0xC0]
	0x02769AC8 LDR X0, [X8 + 0x8]
	0x02769ACC LDRB W8, [X0 + 0x135]
	0x02769AD0 TBNZ X8, 0x0, 0x2769AD8
	0x02769AD4 BL 0x1C5C684
	0x02769AD8 LDR W8, [X0 + 0xE0]
	0x02769ADC CBNZ W8, 0x2769AE4
	0x02769AE0 BL 0x1C16DFC
	0x02769AE4 LDR X8, [X20 + 0x20]
	0x02769AE8 LDR X8, [X8 + 0xC0]
	0x02769AEC LDR X0, [X8 + 0x8]
	0x02769AF0 LDRB W8, [X0 + 0x135]
	0x02769AF4 TBNZ X8, 0x0, 0x2769AFC
	0x02769AF8 BL 0x1C5C684
	0x02769AFC CBZ X19, 0x2769B38
	0x02769B00 LDR X8, [X0 + 0xB8]
	0x02769B04 MOV X0, X19
	0x02769B08 MOV X2, X31
	0x02769B0C LDR X1, [X8 + 0x18]
	0x02769B10 BL 0x3DF1C70
	0x02769B14 MOV X0, X19
	0x02769B18 MOV W1, W31
	0x02769B1C MOV X2, X31
	0x02769B20 BL 0x3DF2050
	0x02769B24 STRB W31, [X19 + 0x20]
	0x02769B28 MOV X0, X19
	0x02769B2C LDP X20, X19, [X31 + 0x10]
	0x02769B30 LDP X30, X21, [X31], #0x20
	0x02769B34 RET
	0x02769B38 BL 0x1C16F20
	0x02769B3C SUB X31, X31, 0x90
	0x02769B40 STP X29, X30, [X31 + 0x30]
	0x02769B44 STP X28, X27, [X31 + 0x40]
	0x02769B48 STP X26, X25, [X31 + 0x50]
	0x02769B4C STP X24, X23, [X31 + 0x60]
	0x02769B50 STP X22, X21, [X31 + 0x70]
	0x02769B54 STP X20, X19, [X31 + 0x80]
	0x02769B58 ADRP X21, 0x1C71000
	0x02769B5C LDRB W8, [X21 + 0x7B2]
	0x02769B60 MOV X19, X3
	0x02769B64 MOV X22, X1
	0x02769B68 MOV X20, X0
	0x02769B6C STR W2, [X31 + 0x24]
	0x02769B70 TBNZ X8, 0x0, 0x2769B88
	0x02769B74 ADRP X0, 0x19B2000
	0x02769B78 LDR X0, [X0 + 0x898]
	0x02769B7C BL 0x1C16CF4
	0x02769B80 MOVZ W8, 0x1
	0x02769B84 STRB W8, [X21 + 0x7B2]
	0x02769B88 STR X31, [X31 + 0x28]
	0x02769B8C LDR X8, [X19 + 0x20]!
	0x02769B90 LDR X8, [X8 + 0xC0]
	0x02769B94 LDR X0, [X8 + 0x10]
	0x02769B98 LDRB W8, [X0 + 0x135]
	0x02769B9C TBNZ X8, 0x0, 0x2769BA4
	0x02769BA0 BL 0x1C5C684
	0x02769BA4 LDR W8, [X0 + 0xE0]
	0x02769BA8 CBNZ W8, 0x2769BB0
	0x02769BAC BL 0x1C16DFC
	0x02769BB0 LDR X8, [X19]
	0x02769BB4 MOV X0, X20
	0x02769BB8 MOV X1, X22
	0x02769BBC MOV X2, X31
	0x02769BC0 LDR X8, [X8 + 0xC0]
	0x02769BC4 LDR X3, [X8 + 0x18]
	0x02769BC8 BL 0x289F440
	0x02769BCC CBZ X20, 0x276A2D8
	0x02769BD0 MOV X0, X20
	0x02769BD4 MOV W1, W31
	0x02769BD8 MOV X2, X31
	0x02769BDC BL 0x3DAED80
	0x02769BE0 LDR X8, [X19]
	0x02769BE4 MOV X0, X20
	0x02769BE8 LDR X8, [X8 + 0xC0]
	0x02769BEC LDR X1, [X8 + 0x20]
	0x02769BF0 BL 0x289E964
	0x02769BF4 CBZ X0, 0x276A2D8
	0x02769BF8 STRB W31, [X0 + 0x20]
	0x02769BFC LDR X8, [X19]
	0x02769C00 LDR X8, [X8 + 0xC0]
	0x02769C04 LDR X0, [X8 + 0x8]
	0x02769C08 LDRB W8, [X0 + 0x135]
	0x02769C0C TBNZ X8, 0x0, 0x2769C14
	0x02769C10 BL 0x1C5C684
	0x02769C14 LDR W8, [X0 + 0xE0]
	0x02769C18 CBNZ W8, 0x2769C20
	0x02769C1C BL 0x1C16DFC
	0x02769C20 LDR X8, [X19]
	0x02769C24 LDR X8, [X8 + 0xC0]
	0x02769C28 LDR X0, [X8 + 0x8]
	0x02769C2C LDRB W8, [X0 + 0x135]
	0x02769C30 TBNZ X8, 0x0, 0x2769C38
	0x02769C34 BL 0x1C5C684
	0x02769C38 LDR X8, [X0 + 0xB8]
	0x02769C3C MOV X0, X20
	0x02769C40 MOV X2, X31
	0x02769C44 LDR X1, [X8]
	0x02769C48 BL 0x3DF1C70
	0x02769C4C LDR X8, [X19]
	0x02769C50 LDR X22, [X20 + 0x408]
	0x02769C54 LDR X8, [X8 + 0xC0]
	0x02769C58 LDR X0, [X8 + 0x8]
	0x02769C5C LDRB W8, [X0 + 0x135]
	0x02769C60 TBNZ X8, 0x0, 0x2769C68
	0x02769C64 BL 0x1C5C684
	0x02769C68 CBZ X22, 0x276A2D8
	0x02769C6C LDR X8, [X0 + 0xB8]
	0x02769C70 MOV X0, X22
	0x02769C74 MOV X2, X31
	0x02769C78 LDR X1, [X8 + 0x8]
	0x02769C7C BL 0x3DF1C70
	0x02769C80 LDR X8, [X19]
	0x02769C84 MOV X0, X20
	0x02769C88 LDR X8, [X8 + 0xC0]
	0x02769C8C LDR X1, [X8 + 0x20]
	0x02769C90 BL 0x289E964
	0x02769C94 LDR X8, [X19]
	0x02769C98 MOV X22, X0
	0x02769C9C LDR X8, [X8 + 0xC0]
	0x02769CA0 LDR X8, [X8 + 0x8]
	0x02769CA4 LDRB W9, [X8 + 0x135]
	0x02769CA8 TBNZ X9, 0x0, 0x2769CB8
	0x02769CAC MOV X0, X8
	0x02769CB0 BL 0x1C5C684
	0x02769CB4 MOV X8, X0
	0x02769CB8 CBZ X22, 0x276A2D8
	0x02769CBC LDR X8, [X8 + 0xB8]
	0x02769CC0 MOV X0, X22
	0x02769CC4 MOV X2, X31
	0x02769CC8 LDR X1, [X8 + 0x10]
	0x02769CCC BL 0x3DF1C70
	0x02769CD0 MOVZ W8, 0x1
	0x02769CD4 STRB W8, [X20 + 0x450]
	0x02769CD8 LDR X8, [X19]
	0x02769CDC LDR X8, [X8 + 0xC0]
	0x02769CE0 LDR X0, [X8 + 0x30]
	0x02769CE4 LDRB W8, [X0 + 0x135]
	0x02769CE8 TBNZ X8, 0x0, 0x2769CF0
	0x02769CEC BL 0x1C5C684
	0x02769CF0 BL 0x1C16F10
	0x02769CF4 LDR X8, [X19]
	0x02769CF8 MOV X22, X0
	0x02769CFC LDR X8, [X8 + 0xC0]
	0x02769D00 LDR X1, [X8 + 0x38]
	0x02769D04 BL 0x301B7C4
	0x02769D08 LDR X8, [X20]
	0x02769D0C STR X22, [X20 + 0x448]
	0x02769D10 MOV X0, X20
	0x02769D14 LDR X9, [X8 + 0x898]
	0x02769D18 LDR X1, [X8 + 0x8A0]
	0x02769D1C BLR X9
	0x02769D20 LDR W8, [X31 + 0x24]
	0x02769D24 MOV X22, X0
	0x02769D28 CMP W8, 0x1
	0x02769D2C CSET W27, GT
	0x02769D30 CMP W8, 0x2
	0x02769D34 B.LT 0x2769DA4
	0x02769D38 CBZ X22, 0x276A2D8
	0x02769D3C LDR W8, [X22 + 0x18]
	0x02769D40 LDR W9, [X31 + 0x24]
	0x02769D44 SDIV W21, W8, W9
	0x02769D48 CMP W21, 0x2
	0x02769D4C B.LT 0x276A2C4
	0x02769D50 LDR X8, [X19]
	0x02769D54 LDR X8, [X8 + 0xC0]
	0x02769D58 LDR X0, [X8 + 0x8]
	0x02769D5C LDRB W8, [X0 + 0x135]
	0x02769D60 TBNZ X8, 0x0, 0x2769D68
	0x02769D64 BL 0x1C5C684
	0x02769D68 LDR W8, [X0 + 0xE0]
	0x02769D6C CBNZ W8, 0x2769D74
	0x02769D70 BL 0x1C16DFC
	0x02769D74 LDR X8, [X19]
	0x02769D78 LDR X8, [X8 + 0xC0]
	0x02769D7C LDR X0, [X8 + 0x8]
	0x02769D80 LDRB W8, [X0 + 0x135]
	0x02769D84 TBNZ X8, 0x0, 0x2769D8C
	0x02769D88 BL 0x1C5C684
	0x02769D8C LDR X8, [X0 + 0xB8]
	0x02769D90 MOV X0, X20
	0x02769D94 MOV X2, X31
	0x02769D98 LDR X1, [X8 + 0x20]
	0x02769D9C BL 0x3DF1C70
	0x02769DA0 B 0x2769DA8
	0x02769DA4 MOVZ W21, 0x1
	0x02769DA8 STR W31, [X20 + 0x454]
	0x02769DAC LDR W10, [X31 + 0x24]
	0x02769DB0 MOVZ W8, 0x3
	0x02769DB4 ADD X9, X22, 0x20
	0x02769DB8 STR X9, [X31 + 0x10]
	0x02769DBC CMP W10, 0x2
	0x02769DC0 SUB W8, W8, W10
	0x02769DC4 CSET W9, GT
	0x02769DC8 CMP W8, 0x1
	0x02769DCC CSET W8, LT
	0x02769DD0 ORR W8, W9, W8, 0x0
	0x02769DD4 MOV W29, W31
	0x02769DD8 MOV W24, W31
	0x02769DDC STP W21, W8, [X31 + 0x18]
	0x02769DE0 SUB W8, W10, 0x3
	0x02769DE4 STR W8, [X31 + 0xC]
	0x02769DE8 CBZ W27, 0x2769E60
	0x02769DEC ADRP X8, 0x19B2000
	0x02769DF0 LDR X8, [X8 + 0x898]
	0x02769DF4 LDR X0, [X8]
	0x02769DF8 BL 0x1C16F10
	0x02769DFC MOV X1, X31
	0x02769E00 MOV X23, X0
	0x02769E04 BL 0x3DEF578
	0x02769E08 LDR X8, [X19]
	0x02769E0C LDR X8, [X8 + 0xC0]
	0x02769E10 LDR X0, [X8 + 0x8]
	0x02769E14 LDRB W8, [X0 + 0x135]
	0x02769E18 TBNZ X8, 0x0, 0x2769E20
	0x02769E1C BL 0x1C5C684
	0x02769E20 LDR W8, [X0 + 0xE0]
	0x02769E24 CBNZ W8, 0x2769E2C
	0x02769E28 BL 0x1C16DFC
	0x02769E2C LDR X8, [X19]
	0x02769E30 LDR X8, [X8 + 0xC0]
	0x02769E34 LDR X0, [X8 + 0x8]
	0x02769E38 LDRB W8, [X0 + 0x135]
	0x02769E3C TBNZ X8, 0x0, 0x2769E44
	0x02769E40 BL 0x1C5C684
	0x02769E44 CBZ X23, 0x276A2D8
	0x02769E48 LDR X8, [X0 + 0xB8]
	0x02769E4C MOV X0, X23
	0x02769E50 MOV X2, X31
	0x02769E54 LDR X1, [X8 + 0x28]
	0x02769E58 BL 0x3DF1C70
	0x02769E5C B 0x2769E64
	0x02769E60 MOV X23, X31
	0x02769E64 LDR W9, [X31 + 0x24]
	0x02769E68 STR W24, [X31 + 0x20]
	0x02769E6C MUL W8, W24, W9
	0x02769E70 ADD W9, W8, W9
	0x02769E74 CMP W8, W9
	0x02769E78 B.GE 0x276A180
	0x02769E7C LDR X9, [X31 + 0x10]
	0x02769E80 SXTW X8, W29
	0x02769E84 MOV W28, W31
	0x02769E88 MOVZ W26, 0x1
	0x02769E8C ADD X21, X9, X8, 0x5, LSL
	0x02769E90 LDR X8, [X19]
	0x02769E94 LDR X8, [X8 + 0xC0]
	0x02769E98 LDR X0, [X8 + 0x50]
	0x02769E9C LDRB W8, [X0 + 0x135]
	0x02769EA0 TBNZ X8, 0x0, 0x2769EA8
	0x02769EA4 BL 0x1C5C684
	0x02769EA8 BL 0x1C16F10
	0x02769EAC LDR X8, [X19]
	0x02769EB0 MOV X24, X0
	0x02769EB4 LDR X8, [X8 + 0xC0]
	0x02769EB8 LDR X1, [X8 + 0x58]
	0x02769EBC BL 0x237357C
	0x02769EC0 CBZ X24, 0x276A2D8
	0x02769EC4 STR X20, [X24 + 0x38]
	0x02769EC8 CBZ X22, 0x276A2D8
	0x02769ECC LDR W8, [X22 + 0x18]
	0x02769ED0 ADD W9, W29, W28
	0x02769ED4 CMP W9, W8
	0x02769ED8 B.CS 0x276A2DC
	0x02769EDC LDP V1, V0, [X21]
	0x02769EE0 STP V1, V0, [X24 + 0x10]
	0x02769EE4 LDR X8, [X19]
	0x02769EE8 LDR X8, [X8 + 0xC0]
	0x02769EEC LDR X0, [X8 + 0x68]
	0x02769EF0 BL 0x2278924
	0x02769EF4 CBZ X0, 0x276A2D8
	0x02769EF8 LDR X1, [X24 + 0x18]
	0x02769EFC MOV X2, X31
	0x02769F00 MOV X25, X0
	0x02769F04 BL 0x3DEF278
	0x02769F08 MOVZ W1, 0x1
	0x02769F0C MOV X0, X25
	0x02769F10 MOV X2, X31
	0x02769F14 STR X25, [X24 + 0x30]
	0x02769F18 BL 0x3DAED80
	0x02769F1C LDR X8, [X19]
	0x02769F20 LDR X25, [X24 + 0x30]
	0x02769F24 LDR X8, [X8 + 0xC0]
	0x02769F28 LDR X0, [X8 + 0x8]
	0x02769F2C LDRB W8, [X0 + 0x135]
	0x02769F30 TBNZ X8, 0x0, 0x2769F38
	0x02769F34 BL 0x1C5C684
	0x02769F38 LDR W8, [X0 + 0xE0]
	0x02769F3C CBNZ W8, 0x2769F44
	0x02769F40 BL 0x1C16DFC
	0x02769F44 LDR X8, [X19]
	0x02769F48 LDR X8, [X8 + 0xC0]
	0x02769F4C LDR X0, [X8 + 0x8]
	0x02769F50 LDRB W8, [X0 + 0x135]
	0x02769F54 TBNZ X8, 0x0, 0x2769F5C
	0x02769F58 BL 0x1C5C684
	0x02769F5C CBZ X25, 0x276A2D8
	0x02769F60 LDR X8, [X0 + 0xB8]
	0x02769F64 MOV X0, X25
	0x02769F68 MOV X2, X31
	0x02769F6C LDR X1, [X8 + 0x30]
	0x02769F70 BL 0x3DF1C70
	0x02769F74 TBZ X26, 0x0, 0x2769FD0
	0x02769F78 LDR X8, [X19]
	0x02769F7C LDR X25, [X24 + 0x30]
	0x02769F80 LDR X8, [X8 + 0xC0]
	0x02769F84 LDR X0, [X8 + 0x8]
	0x02769F88 LDRB W8, [X0 + 0x135]
	0x02769F8C TBNZ X8, 0x0, 0x2769F94
	0x02769F90 BL 0x1C5C684
	0x02769F94 LDR W8, [X0 + 0xE0]
	0x02769F98 CBNZ W8, 0x2769FA0
	0x02769F9C BL 0x1C16DFC
	0x02769FA0 LDR X8, [X19]
	0x02769FA4 LDR X8, [X8 + 0xC0]
	0x02769FA8 LDR X0, [X8 + 0x8]
	0x02769FAC LDRB W8, [X0 + 0x135]
	0x02769FB0 TBNZ X8, 0x0, 0x2769FB8
	0x02769FB4 BL 0x1C5C684
	0x02769FB8 CBZ X25, 0x276A2D8
	0x02769FBC LDR X8, [X0 + 0xB8]
	0x02769FC0 MOV X0, X25
	0x02769FC4 MOV X2, X31
	0x02769FC8 LDR X1, [X8 + 0x38]
	0x02769FCC BL 0x3DF1C70
	0x02769FD0 LDR X0, [X24 + 0x30]
	0x02769FD4 CBZ X0, 0x276A2D8
	0x02769FD8 LDR X8, [X19]
	0x02769FDC LDR X1, [X24 + 0x10]
	0x02769FE0 LDR X8, [X8 + 0xC0]
	0x02769FE4 LDR X2, [X8 + 0x80]
	0x02769FE8 BL 0x277F44C
	0x02769FEC LDR X8, [X19]
	0x02769FF0 LDR X25, [X24 + 0x30]
	0x02769FF4 LDR X8, [X8 + 0xC0]
	0x02769FF8 LDR X0, [X8 + 0x90]
	0x02769FFC LDRB W8, [X0 + 0x135]
	0x0276A000 TBNZ X8, 0x0, 0x276A008
	0x0276A004 BL 0x1C5C684
	0x0276A008 BL 0x1C16F10
	0x0276A00C LDR X8, [X19]
	0x0276A010 MOV X1, X24
	0x0276A014 MOV X26, X0
	0x0276A018 LDR X8, [X8 + 0xC0]
	0x0276A01C LDR X2, [X8 + 0x88]
	0x0276A020 LDR X3, [X8 + 0x98]
	0x0276A024 BL 0x2D2CF74
	0x0276A028 CBZ X25, 0x276A2D8
	0x0276A02C LDR X8, [X19]
	0x0276A030 MOV X0, X25
	0x0276A034 MOV X1, X26
	0x0276A038 LDR X8, [X8 + 0xC0]
	0x0276A03C LDR X2, [X8 + 0xA0]
	0x0276A040 BL 0x277F04C
	0x0276A044 LDR X8, [X19]
	0x0276A048 LDR X25, [X24 + 0x30]
	0x0276A04C LDR X8, [X8 + 0xC0]
	0x0276A050 LDR X0, [X8 + 0xB0]
	0x0276A054 LDRB W8, [X0 + 0x135]
	0x0276A058 TBNZ X8, 0x0, 0x276A060
	0x0276A05C BL 0x1C5C684
	0x0276A060 BL 0x1C16F10
	0x0276A064 LDR X8, [X19]
	0x0276A068 MOV X1, X24
	0x0276A06C MOV X26, X0
	0x0276A070 LDR X8, [X8 + 0xC0]
	0x0276A074 LDR X2, [X8 + 0xA8]
	0x0276A078 LDR X3, [X8 + 0xB8]
	0x0276A07C BL 0x2D0E824
	0x0276A080 LDR X8, [X19]
	0x0276A084 MOV X0, X25
	0x0276A088 MOV X1, X26
	0x0276A08C LDR X8, [X8 + 0xC0]
	0x0276A090 LDR X2, [X8 + 0xC0]
	0x0276A094 BL 0x21EF1BC
	0x0276A098 LDR X0, [X20 + 0x448]
	0x0276A09C CBZ X0, 0x276A2D8
	0x0276A0A0 LDR X8, [X19]
	0x0276A0A4 LDR W10, [X0 + 0x1C]
	0x0276A0A8 LDR X1, [X24 + 0x30]
	0x0276A0AC LDR X9, [X8 + 0xC0]
	0x0276A0B0 LDR X8, [X0 + 0x10]
	0x0276A0B4 ADD W10, W10, 0x1
	0x0276A0B8 LDR X9, [X9 + 0xD0]
	0x0276A0BC STR W10, [X0 + 0x1C]
	0x0276A0C0 CBZ X8, 0x276A2D8
	0x0276A0C4 LDRSW X10, [X0 + 0x18]
	0x0276A0C8 LDR W11, [X8 + 0x18]
	0x0276A0CC CMP W10, W11
	0x0276A0D0 B.CS 0x276A140
	0x0276A0D4 ADD W9, W10, 0x1
	0x0276A0D8 ADD X8, X8, X10, 0x3, LSL
	0x0276A0DC STR W9, [X0 + 0x18]
	0x0276A0E0 STR X1, [X8 + 0x20]
	0x0276A0E4 CBNZ W27, 0x276A154
	0x0276A0E8 LDR X8, [X19]
	0x0276A0EC LDR X8, [X8 + 0xC0]
	0x0276A0F0 LDR X0, [X8 + 0x10]
	0x0276A0F4 LDRB W8, [X0 + 0x135]
	0x0276A0F8 TBNZ X8, 0x0, 0x276A100
	0x0276A0FC BL 0x1C5C684
	0x0276A100 LDR W8, [X0 + 0xE0]
	0x0276A104 CBNZ W8, 0x276A10C
	0x0276A108 BL 0x1C16DFC
	0x0276A10C LDR X8, [X19]
	0x0276A110 MOV X0, X20
	0x0276A114 LDR X8, [X8 + 0xC0]
	0x0276A118 LDR X1, [X8 + 0x20]
	0x0276A11C BL 0x289E964
	0x0276A120 CBZ X0, 0x276A2D8
	0x0276A124 LDR X8, [X0 + 0x378]
	0x0276A128 ADD X0, X31, 0x28
	0x0276A12C MOV X2, X31
	0x0276A130 STR X8, [X31 + 0x28]
	0x0276A134 LDR X1, [X24 + 0x30]
	0x0276A138 BL 0x3DF891C
	0x0276A13C B 0x276A168
	0x0276A140 LDR X8, [X9 + 0x20]
	0x0276A144 LDR X8, [X8 + 0xC0]
	0x0276A148 LDR X2, [X8 + 0x70]
	0x0276A14C BL 0x301BF90
	0x0276A150 CBZ W27, 0x276A0E8
	0x0276A154 CBZ X23, 0x276A2D8
	0x0276A158 LDR X1, [X24 + 0x30]
	0x0276A15C MOV X0, X23
	0x0276A160 MOV X2, X31
	0x0276A164 BL 0x3DF60E8
	0x0276A168 LDR W8, [X31 + 0x24]
	0x0276A16C ADD W28, W28, 0x1
	0x0276A170 MOV W26, W31
	0x0276A174 ADD X21, X21, 0x20
	0x0276A178 CMP W8, W28
	0x0276A17C B.NE 0x2769E90
	0x0276A180 LDR W8, [X31 + 0x1C]
	0x0276A184 TBNZ X8, 0x0, 0x276A21C

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X21, 0x1C72000
	015 Move W8, [X21+1967]
	016 Move X19, X3
	017 Move X22, X1
	018 Move X20, X0
	019 Move [X31+36], W2
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x19B3000
	025 Move X0, [X0+2200]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1967], W8
	029 Move [X31+40], X31
	030 Add X19, X19, 32
	031 Move X8, [X19]
	032 Move X8, [X8+192]
	033 Move X0, [X8+16]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X8, [X19]
	045 Move X0, X20
	046 Move X1, X22
	047 Move X2, X31
	048 Move X8, [X8+192]
	049 Move X3, [X8+24]
	050 Call BaseField`1<Rect>..ctor, X0, X1, X2
	051 Compare X20, 0
	052 JumpIfEqual {593}
	053 Move X0, X20
	054 Move W1, W31
	055 Move X2, X31
	056 Call Focusable.set_delegatesFocus, X0, X1
	057 Move X8, [X19]
	058 Move X0, X20
	059 Move X8, [X8+192]
	060 Move X1, [X8+32]
	061 Call BaseField`1<Rect>.get_visualInput, X0
	062 Compare X0, 0
	063 JumpIfEqual {593}
	064 Move [X0+32], W31
	065 Move X8, [X19]
	066 Move X8, [X8+192]
	067 Move X0, [X8+8]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X8, [X19]
	079 Move X8, [X8+192]
	080 Move X0, [X8+8]
	081 Move W8, [X0+309]
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {87}
	086 Call 0x1C5D684
	087 Move X8, [X0+184]
	088 Move X0, X20
	089 Move X2, X31
	090 Move X1, [X8]
	091 Call VisualElement.AddToClassList, X0, X1
	092 Move X8, [X19]
	093 Move X22, [X20+1032]
	094 Move X8, [X8+192]
	095 Move X0, [X8+8]
	096 Move W8, [X0+309]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {102}
	101 Call 0x1C5D684
	102 Compare X22, 0
	103 JumpIfEqual {593}
	104 Move X8, [X0+184]
	105 Move X0, X22
	106 Move X2, X31
	107 Move X1, [X8+8]
	108 Call VisualElement.AddToClassList, X0, X1
	109 Move X8, [X19]
	110 Move X0, X20
	111 Move X8, [X8+192]
	112 Move X1, [X8+32]
	113 Call BaseField`1<Rect>.get_visualInput, X0
	114 Move X8, [X19]
	115 Move X22, X0
	116 Move X8, [X8+192]
	117 Move X8, [X8+8]
	118 Move W9, [X8+309]
	119 Move TEMP, X9
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {126}
	123 Move X0, X8
	124 Call 0x1C5D684
	125 Move X8, X0
	126 Compare X22, 0
	127 JumpIfEqual {593}
	128 Move X8, [X8+184]
	129 Move X0, X22
	130 Move X2, X31
	131 Move X1, [X8+16]
	132 Call VisualElement.AddToClassList, X0, X1
	133 Move W8, 1
	134 Move [X20+1104], W8
	135 Move X8, [X19]
	136 Move X8, [X8+192]
	137 Move X0, [X8+48]
	138 Move W8, [X0+309]
	139 Move TEMP, X8
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {144}
	143 Call 0x1C5D684
	144 Call 0x1C17F10
	145 Move X8, [X19]
	146 Move X22, X0
	147 Move X8, [X8+192]
	148 Move X1, [X8+56]
	149 Call List`1<Object>..ctor, X0
	150 Move X8, [X20]
	151 Move [X20+1096], X22
	152 Move X0, X20
	153 Move X9, [X8+2200]
	154 Move X1, [X8+2208]
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move W8, [X31+36]
	157 Move X22, X0
	158 NotImplemented "Instruction CMP not yet implemented."
	159 NotImplemented "Instruction CSET not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Compare X22, 0
	162 JumpIfEqual {593}
	163 Move W8, [X22+24]
	164 Move W9, [X31+36]
	165 NotImplemented "Instruction SDIV not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X8, [X19]
	168 Move X8, [X8+192]
	169 Move X0, [X8+8]
	170 Move W8, [X0+309]
	171 Move TEMP, X8
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfEqual {176}
	175 Call 0x1C5D684
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move X8, [X19]
	181 Move X8, [X8+192]
	182 Move X0, [X8+8]
	183 Move W8, [X0+309]
	184 Move TEMP, X8
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfEqual {189}
	188 Call 0x1C5D684
	189 Move X8, [X0+184]
	190 Move X0, X20
	191 Move X2, X31
	192 Move X1, [X8+32]
	193 Call VisualElement.AddToClassList, X0, X1
	194 Move W21, 1
	195 Move [X20+1108], W31
	196 Move W10, [X31+36]
	197 Move W8, 3
	198 Add X9, X22, 32
	199 Move [X31+16], X9
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Subtract W8, W8, W10
	202 NotImplemented "Instruction CSET not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 NotImplemented "Instruction CSET not yet implemented."
	205 Or W8, W9, W8
	206 Move W29, W31
	207 Move W24, W31
	208 Move [X31+24], W21
	209 Move [X31+28], W8
	210 Subtract W8, W10, 3
	211 Move [X31+12], W8
	212 Compare W27, 0
	213 JumpIfEqual {250}
	214 Move X8, 0x19B3000
	215 Move X8, [X8+2200]
	216 Move X0, [X8]
	217 Call 0x1C17F10
	218 Move X1, X31
	219 Move X23, X0
	220 Call VisualElement..ctor, X0
	221 Move X8, [X19]
	222 Move X8, [X8+192]
	223 Move X0, [X8+8]
	224 Move W8, [X0+309]
	225 Move TEMP, X8
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfEqual {230}
	229 Call 0x1C5D684
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {234}
	233 Call 0x1C17DFC
	234 Move X8, [X19]
	235 Move X8, [X8+192]
	236 Move X0, [X8+8]
	237 Move W8, [X0+309]
	238 Move TEMP, X8
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfEqual {243}
	242 Call 0x1C5D684
	243 Compare X23, 0
	244 JumpIfEqual {593}
	245 Move X8, [X0+184]
	246 Move X0, X23
	247 Move X2, X31
	248 Move X1, [X8+40]
	249 Call VisualElement.AddToClassList, X0, X1
	250 Move X23, X31
	251 Move W9, [X31+36]
	252 Move [X31+32], W24
	253 Multiply W8, W24, W9
	254 Add W9, W8, W9
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X9, [X31+16]
	257 Move X8, W29
	258 Move W28, W31
	259 Move W26, 1
	260 Add X21, X9, X8
	261 Move X8, [X19]
	262 Move X8, [X8+192]
	263 Move X0, [X8+80]
	264 Move W8, [X0+309]
	265 Move TEMP, X8
	266 And TEMP, TEMP, 1
	267 Compare TEMP, 1
	268 JumpIfEqual {270}
	269 Call 0x1C5D684
	270 Call 0x1C17F10
	271 Move X8, [X19]
	272 Move X24, X0
	273 Move X8, [X8+192]
	274 Move X1, [X8+88]
	275 Call 0x2374318, X0
	276 Compare X24, 0
	277 JumpIfEqual {593}
	278 Move [X24+56], X20
	279 Compare X22, 0
	280 JumpIfEqual {593}
	281 Move W8, [X22+24]
	282 Add W9, W29, W28
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move V1, [X21]
	285 Move V0, [X21+16]
	286 Move [X24+16], V1
	287 Move [X24+24], V0
	288 Move X8, [X19]
	289 Move X8, [X8+192]
	290 Move X0, [X8+104]
	291 Call Activator.CreateInstance
	292 Compare X0, 0
	293 JumpIfEqual {593}
	294 Move X1, [X24+24]
	295 Move X2, X31
	296 Move X25, X0
	297 Call VisualElement.set_name, X0, X1
	298 Move W1, 1
	299 Move X0, X25
	300 Move X2, X31
	301 Move [X24+48], X25
	302 Call Focusable.set_delegatesFocus, X0, X1
	303 Move X8, [X19]
	304 Move X25, [X24+48]
	305 Move X8, [X8+192]
	306 Move X0, [X8+8]
	307 Move W8, [X0+309]
	308 Move TEMP, X8
	309 And TEMP, TEMP, 1
	310 Compare TEMP, 1
	311 JumpIfEqual {313}
	312 Call 0x1C5D684
	313 Move W8, [X0+224]
	314 Compare W8, 0
	315 JumpIfNotEqual {317}
	316 Call 0x1C17DFC
	317 Move X8, [X19]
	318 Move X8, [X8+192]
	319 Move X0, [X8+8]
	320 Move W8, [X0+309]
	321 Move TEMP, X8
	322 And TEMP, TEMP, 1
	323 Compare TEMP, 1
	324 JumpIfEqual {326}
	325 Call 0x1C5D684
	326 Compare X25, 0
	327 JumpIfEqual {593}
	328 Move X8, [X0+184]
	329 Move X0, X25
	330 Move X2, X31
	331 Move X1, [X8+48]
	332 Call VisualElement.AddToClassList, X0, X1
	333 Move TEMP, X26
	334 And TEMP, TEMP, 1
	335 Compare TEMP, 1
	336 JumpIfNotEqual {367}
	337 Move X8, [X19]
	338 Move X25, [X24+48]
	339 Move X8, [X8+192]
	340 Move X0, [X8+8]
	341 Move W8, [X0+309]
	342 Move TEMP, X8
	343 And TEMP, TEMP, 1
	344 Compare TEMP, 1
	345 JumpIfEqual {347}
	346 Call 0x1C5D684
	347 Move W8, [X0+224]
	348 Compare W8, 0
	349 JumpIfNotEqual {351}
	350 Call 0x1C17DFC
	351 Move X8, [X19]
	352 Move X8, [X8+192]
	353 Move X0, [X8+8]
	354 Move W8, [X0+309]
	355 Move TEMP, X8
	356 And TEMP, TEMP, 1
	357 Compare TEMP, 1
	358 JumpIfEqual {360}
	359 Call 0x1C5D684
	360 Compare X25, 0
	361 JumpIfEqual {593}
	362 Move X8, [X0+184]
	363 Move X0, X25
	364 Move X2, X31
	365 Move X1, [X8+56]
	366 Call VisualElement.AddToClassList, X0, X1
	367 Move X0, [X24+48]
	368 Compare X0, 0
	369 JumpIfEqual {593}
	370 Move X8, [X19]
	371 Move X1, [X24+16]
	372 Move X8, [X8+192]
	373 Move X2, [X8+128]
	374 Call BaseField`1<Single>.set_label, X0, X1
	375 Move X8, [X19]
	376 Move X25, [X24+48]
	377 Move X8, [X8+192]
	378 Move X0, [X8+144]
	379 Move W8, [X0+309]
	380 Move TEMP, X8
	381 And TEMP, TEMP, 1
	382 Compare TEMP, 1
	383 JumpIfEqual {385}
	384 Call 0x1C5D684
	385 Call 0x1C17F10
	386 Move X8, [X19]
	387 Move X1, X24
	388 Move X26, X0
	389 Move X8, [X8+192]
	390 Move X2, [X8+136]
	391 Move X3, [X8+152]
	392 Call Func`2<Single, Single>..ctor, X0, X1, X2
	393 Compare X25, 0
	394 JumpIfEqual {593}
	395 Move X8, [X19]
	396 Move X0, X25
	397 Move X1, X26
	398 Move X8, [X8+192]
	399 Move X2, [X8+160]
	400 Call BaseField`1<Single>.add_onValidateValue, X0, X1
	401 Move X8, [X19]
	402 Move X25, [X24+48]
	403 Move X8, [X8+192]
	404 Move X0, [X8+176]
	405 Move W8, [X0+309]
	406 Move TEMP, X8
	407 And TEMP, TEMP, 1
	408 Compare TEMP, 1
	409 JumpIfEqual {411}
	410 Call 0x1C5D684
	411 Call 0x1C17F10
	412 Move X8, [X19]
	413 Move X1, X24
	414 Move X26, X0
	415 Move X8, [X8+192]
	416 Move X2, [X8+168]
	417 Move X3, [X8+184]
	418 Call 0x2D0F824, X0, X1, X2
	419 Move X8, [X19]
	420 Move X0, X25
	421 Move X1, X26
	422 Move X8, [X8+192]
	423 Move X2, [X8+192]
	424 Call INotifyValueChangedExtensions.RegisterValueChangedCallback, X0, X1
	425 Move X0, [X20+1096]
	426 Compare X0, 0
	427 JumpIfEqual {593}
	428 Move X8, [X19]
	429 Move W10, [X0+28]
	430 Move X1, [X24+48]
	431 Move X9, [X8+192]
	432 Move X8, [X0+16]
	433 Add W10, W10, 1
	434 Move X9, [X9+208]
	435 Move [X0+28], W10
	436 Compare X8, 0
	437 JumpIfEqual {593}
	438 NotImplemented "Instruction LDRSW not yet implemented."
	439 Move W11, [X8+24]
	440 NotImplemented "Instruction CMP not yet implemented."
	441 Add W9, W10, 1
	442 Add X8, X8, X10
	443 Move [X0+24], W9
	444 Move [X8+32], X1
	445 Compare W27, 0
	446 JumpIfNotEqual {479}
	447 Move X8, [X19]
	448 Move X8, [X8+192]
	449 Move X0, [X8+16]
	450 Move W8, [X0+309]
	451 Move TEMP, X8
	452 And TEMP, TEMP, 1
	453 Compare TEMP, 1
	454 JumpIfEqual {456}
	455 Call 0x1C5D684
	456 Move W8, [X0+224]
	457 Compare W8, 0
	458 JumpIfNotEqual {460}
	459 Call 0x1C17DFC
	460 Move X8, [X19]
	461 Move X0, X20
	462 Move X8, [X8+192]
	463 Move X1, [X8+32]
	464 Call BaseField`1<Rect>.get_visualInput, X0
	465 Compare X0, 0
	466 JumpIfEqual {593}
	467 Move X8, [X0+888]
	468 Add X0, X31, 40
	469 Move X2, X31
	470 Move [X31+40], X8
	471 Move X1, [X24+48]
	472 Call Hierarchy.Add, X0, X1
	473 Move X8, [X9+32]
	474 Move X8, [X8+192]
	475 Move X2, [X8+112]
	476 Call List`1<Object>.AddWithResize, X0, X1
	477 Compare W27, 0
	478 JumpIfEqual {447}
	479 Compare X23, 0
	480 JumpIfEqual {593}
	481 Move X1, [X24+48]
	482 Move X0, X23
	483 Move X2, X31
	484 Call VisualElement.Add, X0, X1
	485 Move W8, [X31+36]
	486 Add W28, W28, 1
	487 Move W26, W31
	488 Add X21, X21, 32
	489 NotImplemented "Instruction CMP not yet implemented."
	490 Move W8, [X31+28]
	491 Move TEMP, X8
	492 And TEMP, TEMP, 1
	493 Compare TEMP, 1
	494 JumpIfEqual {537}
	495 Move W21, [X31+12]
	496 Move X8, [X19]
	497 Move X8, [X8+192]
	498 Compare W27, 0
	499 JumpIfEqual {508}
	500 Move X1, [X8+216]
	501 Call 0x2769920, X0
	502 Compare X23, 0
	503 JumpIfEqual {593}
	504 Move X1, X0
	505 Move X0, X23
	506 Move X2, X31
	507 Call VisualElement.Add, X0, X1
	508 Move X0, [X8+16]
	509 Move W8, [X0+309]
	510 Move TEMP, X8
	511 And TEMP, TEMP, 1
	512 Compare TEMP, 1
	513 JumpIfEqual {515}
	514 Call 0x1C5D684
	515 Move W8, [X0+224]
	516 Compare W8, 0
	517 JumpIfNotEqual {519}
	518 Call 0x1C17DFC
	519 Move X8, [X19]
	520 Move X0, X20
	521 Move X8, [X8+192]
	522 Move X1, [X8+32]
	523 Call BaseField`1<Rect>.get_visualInput, X0
	524 Compare X0, 0
	525 JumpIfEqual {593}
	526 Move X8, [X0+888]
	527 Move [X31+40], X8
	528 Move X8, [X19]
	529 Move X8, [X8+192]
	530 Move X1, [X8+216]
	531 Call 0x2769920, X0
	532 Move X1, X0
	533 Add X0, X31, 40
	534 Move X2, X31
	535 Call Hierarchy.Add, X0, X1
	536 Add W21, W21, 1
	537 Move W21, [X31+24]
	538 Move W24, [X31+32]
	539 Compare W27, 0
	540 JumpIfEqual {567}
	541 Move X8, [X19]
	542 Move X8, [X8+192]
	543 Move X0, [X8+16]
	544 Move W8, [X0+309]
	545 Move TEMP, X8
	546 And TEMP, TEMP, 1
	547 Compare TEMP, 1
	548 JumpIfEqual {550}
	549 Call 0x1C5D684
	550 Move W8, [X0+224]
	551 Compare W8, 0
	552 JumpIfNotEqual {554}
	553 Call 0x1C17DFC
	554 Move X8, [X19]
	555 Move X0, X20
	556 Move X8, [X8+192]
	557 Move X1, [X8+32]
	558 Call BaseField`1<Rect>.get_visualInput, X0
	559 Compare X0, 0
	560 JumpIfEqual {593}
	561 Move X8, [X0+888]
	562 Add X0, X31, 40
	563 Move X1, X23
	564 Move X2, X31
	565 Move [X31+40], X8
	566 Call Hierarchy.Add, X0, X1
	567 Move W8, [X31+36]
	568 Add W24, W24, 1
	569 NotImplemented "Instruction CMP not yet implemented."
	570 Add W29, W29, W8
	571 Move X8, [X19]
	572 Move X0, X20
	573 Move X8, [X8+192]
	574 Move X1, [X8+224]
	575 Call 0x276A188, X0
	576 Move X20, [X31+128]
	577 Move X19, [X31+136]
	578 Move X22, [X31+112]
	579 Move X21, [X31+120]
	580 Move X24, [X31+96]
	581 Move X23, [X31+104]
	582 Move X26, [X31+80]
	583 Move X25, [X31+88]
	584 Move X28, [X31+64]
	585 Move X27, [X31+72]
	586 Move X29, [X31+48]
	587 Move X30, [X31+56]
	588 Add X31, X31, 144
	589 Return 
	590 NotImplemented "Instruction CMP not yet implemented."
	591 Move [X20+1108], W31
	592 Move W27, W31
	593 Call 0x1C17F20
	594 Call 0x1C17F28

Method: System.Void UpdateDisplay()

Disassembly:
	0x0276A188 LDR W21, [X31 + 0xC]
	0x0276A18C LDR X8, [X19]
	0x0276A190 LDR X8, [X8 + 0xC0]
	0x0276A194 CBZ W27, 0x276A1B8
	0x0276A198 LDR X1, [X8 + 0xD8]
	0x0276A19C BL 0x2769A78
	0x0276A1A0 CBZ X23, 0x276A2D8
	0x0276A1A4 MOV X1, X0
	0x0276A1A8 MOV X0, X23
	0x0276A1AC MOV X2, X31
	0x0276A1B0 BL 0x3DF60E8
	0x0276A1B4 B 0x276A214
	0x0276A1B8 LDR X0, [X8 + 0x10]
	0x0276A1BC LDRB W8, [X0 + 0x135]
	0x0276A1C0 TBNZ X8, 0x0, 0x276A1C8
	0x0276A1C4 BL 0x1C5C684
	0x0276A1C8 LDR W8, [X0 + 0xE0]
	0x0276A1CC CBNZ W8, 0x276A1D4
	0x0276A1D0 BL 0x1C16DFC
	0x0276A1D4 LDR X8, [X19]
	0x0276A1D8 MOV X0, X20
	0x0276A1DC LDR X8, [X8 + 0xC0]
	0x0276A1E0 LDR X1, [X8 + 0x20]
	0x0276A1E4 BL 0x289E964
	0x0276A1E8 CBZ X0, 0x276A2D8
	0x0276A1EC LDR X8, [X0 + 0x378]
	0x0276A1F0 STR X8, [X31 + 0x28]
	0x0276A1F4 LDR X8, [X19]
	0x0276A1F8 LDR X8, [X8 + 0xC0]
	0x0276A1FC LDR X1, [X8 + 0xD8]
	0x0276A200 BL 0x2769A78
	0x0276A204 MOV X1, X0
	0x0276A208 ADD X0, X31, 0x28
	0x0276A20C MOV X2, X31
	0x0276A210 BL 0x3DF891C
	0x0276A214 ADDS W21, W21, 0x1
	0x0276A218 B.CC 0x276A18C
	0x0276A21C LDR W21, [X31 + 0x18]
	0x0276A220 LDR W24, [X31 + 0x20]
	0x0276A224 CBZ W27, 0x276A27C
	0x0276A228 LDR X8, [X19]
	0x0276A22C LDR X8, [X8 + 0xC0]
	0x0276A230 LDR X0, [X8 + 0x10]
	0x0276A234 LDRB W8, [X0 + 0x135]
	0x0276A238 TBNZ X8, 0x0, 0x276A240
	0x0276A23C BL 0x1C5C684
	0x0276A240 LDR W8, [X0 + 0xE0]
	0x0276A244 CBNZ W8, 0x276A24C
	0x0276A248 BL 0x1C16DFC
	0x0276A24C LDR X8, [X19]
	0x0276A250 MOV X0, X20
	0x0276A254 LDR X8, [X8 + 0xC0]
	0x0276A258 LDR X1, [X8 + 0x20]
	0x0276A25C BL 0x289E964
	0x0276A260 CBZ X0, 0x276A2D8
	0x0276A264 LDR X8, [X0 + 0x378]
	0x0276A268 ADD X0, X31, 0x28
	0x0276A26C MOV X1, X23
	0x0276A270 MOV X2, X31
	0x0276A274 STR X8, [X31 + 0x28]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X0+1096]
	009 Compare X8, 0
	010 JumpIfEqual {68}
	011 Move W8, [X8+24]
	012 Compare W8, 0
	013 JumpIfEqual {60}
	014 Move X8, [X0]
	015 Move X20, X1
	016 Move X19, X0
	017 Move X9, [X8+2200]
	018 Move X1, [X8+2208]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Compare X0, 0
	021 JumpIfEqual {68}
	022 Move W8, [X0+24]
	023 Move X21, X0
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W22, W31
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, [X19+1096]
	028 Compare X0, 0
	029 JumpIfEqual {68}
	030 Move X8, [X20+32]
	031 Move X9, W22
	032 Add X9, X21, X9
	033 Move X24, [X9+48]
	034 Move X8, [X8+192]
	035 Move W1, W22
	036 Move X2, [X8+240]
	037 Call List`1<Object>.get_Item, X0, X1
	038 Move X8, [X20+32]
	039 Move X23, X0
	040 Move X0, X19
	041 Move X8, [X8+192]
	042 Move X1, [X8+256]
	043 Call BaseField`1<Rect>.get_rawValue, X0
	044 Compare X24, 0
	045 JumpIfEqual {68}
	046 Move X8, [X24+24]
	047 Move X0, [X24+64]
	048 Move X1, [X24+40]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Compare X23, 0
	051 JumpIfEqual {68}
	052 Move X8, [X23]
	053 Move X0, X23
	054 Move X9, [X8+2184]
	055 Move X1, [X8+2192]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move W8, [X21+24]
	058 Add W22, W22, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X20, [X31+48]
	061 Move X19, [X31+56]
	062 Move X22, [X31+32]
	063 Move X21, [X31+40]
	064 Move X24, [X31+16]
	065 Move X23, [X31+24]
	066 Move X30, [X31+64]
	067 Return 
	068 Call 0x1C17F20
	069 Call 0x1C17F28

Method: System.Void SetValueWithoutNotify(TValueType newValue)

Disassembly:
	0x0276A278 BL 0x3DF891C
	0x0276A27C LDR W8, [X31 + 0x24]
	0x0276A280 ADD W24, W24, 0x1
	0x0276A284 CMP W24, W21
	0x0276A288 ADD W29, W29, W8
	0x0276A28C B.NE 0x2769DE8
	0x0276A290 LDR X8, [X19]
	0x0276A294 MOV X0, X20
	0x0276A298 LDR X8, [X8 + 0xC0]
	0x0276A29C LDR X1, [X8 + 0xE0]
	0x0276A2A0 BL 0x276A2E0
	0x0276A2A4 LDP X20, X19, [X31 + 0x80]
	0x0276A2A8 LDP X22, X21, [X31 + 0x70]
	0x0276A2AC LDP X24, X23, [X31 + 0x60]
	0x0276A2B0 LDP X26, X25, [X31 + 0x50]
	0x0276A2B4 LDP X28, X27, [X31 + 0x40]
	0x0276A2B8 LDP X29, X30, [X31 + 0x30]
	0x0276A2BC ADD X31, X31, 0x90
	0x0276A2C0 RET
	0x0276A2C4 CMP W21, 0x1
	0x0276A2C8 STR W31, [X20 + 0x454]
	0x0276A2CC B.NE 0x276A290
	0x0276A2D0 MOV W27, W31
	0x0276A2D4 B 0x2769DAC
	0x0276A2D8 BL 0x1C16F20
	0x0276A2DC BL 0x1C16F28
	0x0276A2E0 STR X30, [X31 - 0x40]!
	0x0276A2E4 STP X24, X23, [X31 + 0x10]
	0x0276A2E8 STP X22, X21, [X31 + 0x20]
	0x0276A2EC STP X20, X19, [X31 + 0x30]
	0x0276A2F0 LDR X8, [X0 + 0x448]
	0x0276A2F4 CBZ X8, 0x276A3DC
	0x0276A2F8 LDR W8, [X8 + 0x18]
	0x0276A2FC CBZ W8, 0x276A3C8
	0x0276A300 LDR X8, [X0]
	0x0276A304 MOV X20, X1
	0x0276A308 MOV X19, X0
	0x0276A30C LDR X9, [X8 + 0x898]
	0x0276A310 LDR X1, [X8 + 0x8A0]
	0x0276A314 BLR X9
	0x0276A318 CBZ X0, 0x276A3DC
	0x0276A31C LDR W8, [X0 + 0x18]
	0x0276A320 MOV X21, X0
	0x0276A324 CMP W8, 0x1
	0x0276A328 B.LT 0x276A3C8
	0x0276A32C MOV W22, W31
	0x0276A330 CMP W22, W8
	0x0276A334 B.CS 0x276A3E0
	0x0276A338 LDR X0, [X19 + 0x448]
	0x0276A33C CBZ X0, 0x276A3DC
	0x0276A340 LDR X8, [X20 + 0x20]
	0x0276A344 SXTW X9, W22
	0x0276A348 ADD X9, X21, X9, 0x5, LSL
	0x0276A34C LDR X24, [X9 + 0x30]
	0x0276A350 LDR X8, [X8 + 0xC0]
	0x0276A354 MOV W1, W22
	0x0276A358 LDR X2, [X8 + 0xF0]
	0x0276A35C BL 0x301BCCC
	0x0276A360 LDR X8, [X20 + 0x20]
	0x0276A364 MOV X23, X0

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move W8, [X0+1105]
	010 Move X20, X1
	011 Move V8, V3
	012 Move V9, V2
	013 Move V10, V1
	014 Move X19, X0
	015 Move V11, V0
	016 Compare W8, 0
	017 JumpIfEqual {19}
	018 Move W21, W31
	019 Move W8, [X19+1104]
	020 Compare W8, 0
	021 JumpIfEqual {44}
	022 Move X8, [X20+32]
	023 Move X8, [X8+192]
	024 Move X0, [X8+296]
	025 Call 0x211C890
	026 Move X8, [X20+32]
	027 Move X21, X0
	028 Move X0, X19
	029 Move X8, [X8+192]
	030 Move X1, [X8+256]
	031 Call BaseField`1<Rect>.get_rawValue, X0
	032 Compare X21, 0
	033 JumpIfEqual {73}
	034 Move X8, [X21]
	035 Move X0, X21
	036 Move V4, V11
	037 Move V5, V10
	038 Move X9, [X8+440]
	039 Move X1, [X8+448]
	040 Move V6, V9
	041 Move V7, V8
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move W21, W0
	044 Move W21, 1
	045 Move X8, [X20+32]
	046 Move X0, X19
	047 Move V0, V11
	048 Move V1, V10
	049 Move X8, [X8+192]
	050 Move V2, V9
	051 Move V3, V8
	052 Move X1, [X8+328]
	053 Call BaseField`1<Rect>.SetValueWithoutNotify, X0, X1
	054 Move TEMP, X21
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {63}
	058 Move X8, [X20+32]
	059 Move X0, X19
	060 Move X8, [X8+192]
	061 Move X1, [X8+224]
	062 Call 0x276A188, X0
	063 Move [X19+1105], W31
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Move D9, [X31+16]
	069 Move D8, [X31+24]
	070 Move D11, [X31+64]
	071 Move D10, [X31+72]
	072 Return 
	073 Call 0x1C17F20

Method: System.Void OnViewDataReady()

Disassembly:
	0x0276A368 MOV X0, X19
	0x0276A36C LDR X8, [X8 + 0xC0]
	0x0276A370 LDR X1, [X8 + 0x100]
	0x0276A374 BL 0x289EA80
	0x0276A378 CBZ X24, 0x276A3DC
	0x0276A37C MOV X2, X0

ISIL:
	001 Move W8, 1
	002 Move [X0+1105], W8
	003 Move X8, [X1+32]
	004 Move X8, [X8+192]
	005 Move X1, [X8+336]
	006 Call BaseField`1<Rect>.OnViewDataReady, X0
	007 Return 

Method: System.Void UpdateMixedValueContent()

Disassembly:
	0x0276A380 LDR X8, [X24 + 0x18]
	0x0276A384 LDR X0, [X24 + 0x40]
	0x0276A388 LDR X3, [X24 + 0x28]
	0x0276A38C MOV X4, X1
	0x0276A390 MOV X1, X2
	0x0276A394 MOV X2, X4
	0x0276A398 BLR X8
	0x0276A39C CBZ X23, 0x276A3DC
	0x0276A3A0 LDR X8, [X23]
	0x0276A3A4 MOV W1, W0
	0x0276A3A8 MOV X0, X23
	0x0276A3AC LDR X9, [X8 + 0x888]
	0x0276A3B0 LDR X2, [X8 + 0x890]
	0x0276A3B4 BLR X9
	0x0276A3B8 LDR W8, [X21 + 0x18]
	0x0276A3BC ADD W22, W22, 0x1
	0x0276A3C0 CMP W22, W8
	0x0276A3C4 B.LT 0x276A330
	0x0276A3C8 LDP X20, X19, [X31 + 0x30]
	0x0276A3CC LDP X22, X21, [X31 + 0x20]
	0x0276A3D0 LDP X24, X23, [X31 + 0x10]
	0x0276A3D4 LDR X30, [X31], #0x40
	0x0276A3D8 RET
	0x0276A3DC BL 0x1C16F20
	0x0276A3E0 BL 0x1C16F28
	0x0276A3E4 STP X30, X23, [X31 - 0x30]!
	0x0276A3E8 STP X22, X21, [X31 + 0x10]
	0x0276A3EC STP X20, X19, [X31 + 0x20]
	0x0276A3F0 LDRB W8, [X0 + 0x451]
	0x0276A3F4 MOV X20, X3
	0x0276A3F8 MOV X21, X2
	0x0276A3FC MOV X19, X0
	0x0276A400 MOV X22, X1
	0x0276A404 CBZ W8, 0x276A410
	0x0276A408 MOV W23, W31
	0x0276A40C B 0x276A478
	0x0276A410 LDRB W8, [X19 + 0x450]
	0x0276A414 CBZ W8, 0x276A474
	0x0276A418 LDR X8, [X20 + 0x20]
	0x0276A41C LDR X8, [X8 + 0xC0]
	0x0276A420 LDR X0, [X8 + 0x128]
	0x0276A424 BL 0x211B954
	0x0276A428 LDR X8, [X20 + 0x20]
	0x0276A42C MOV X23, X0
	0x0276A430 MOV X0, X19
	0x0276A434 LDR X8, [X8 + 0xC0]
	0x0276A438 LDR X1, [X8 + 0x100]
	0x0276A43C BL 0x289EA80
	0x0276A440 CBZ X23, 0x276A4C0
	0x0276A444 LDR X8, [X23]
	0x0276A448 MOV X2, X0
	0x0276A44C MOV X3, X1
	0x0276A450 MOV X0, X23
	0x0276A454 LDP X9, X5, [X8 + 0x1B8]
	0x0276A458 MOV X1, X2
	0x0276A45C MOV X2, X3
	0x0276A460 MOV X3, X22
	0x0276A464 MOV X4, X21
	0x0276A468 BLR X9
	0x0276A46C MOV W23, W0
	0x0276A470 B 0x276A478
	0x0276A474 MOVZ W23, 0x1
	0x0276A478 LDR X8, [X20 + 0x20]
	0x0276A47C MOV X0, X19
	0x0276A480 MOV X1, X22
	0x0276A484 MOV X2, X21
	0x0276A488 LDR X8, [X8 + 0xC0]
	0x0276A48C LDR X3, [X8 + 0x148]
	0x0276A490 BL 0x28A0428
	0x0276A494 TBNZ X23, 0x0, 0x276A4AC
	0x0276A498 LDR X8, [X20 + 0x20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move [X31+32], X31
	007 Move [X31+40], X31
	008 Move [X31+48], X31
	009 Move X20, X0
	010 Move X0, [X0+1096]
	011 Compare X0, 0
	012 JumpIfEqual {55}
	013 Move X8, [X1+32]
	014 Move X19, X1
	015 Move X8, [X8+192]
	016 Move X1, [X8+344]
	017 Add X8, X31, 8
	018 Call List`1<Object>.GetEnumerator, X0
	019 NotImplemented "Instruction LDUR not yet implemented."
	020 Move X8, [X31+24]
	021 Move [X31+2], V0
	022 Move [X31+48], X8
	023 Move X8, [X19+32]
	024 Move X8, [X8+192]
	025 Move X1, [X8+392]
	026 Add X0, X31, 32
	027 Call Enumerator<Object>.MoveNext, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {40}
	032 Move X0, [X31+48]
	033 Compare X0, 0
	034 JumpIfEqual {54}
	035 Move X8, [X19+32]
	036 Move W1, [X20+1040]
	037 Move X8, [X8+192]
	038 Move X2, [X8+384]
	039 Call BaseField`1<Single>.set_showMixedValue, X0, X1
	040 Move X20, X31
	041 Move X8, [X19+32]
	042 Add X0, X31, 32
	043 Move X8, [X8+192]
	044 Move X1, [X8+400]
	045 Call Enumerator<Object>.Dispose, X0
	046 Compare X20, 0
	047 JumpIfNotEqual {56}
	048 Move X20, [X31+80]
	049 Move X19, [X31+88]
	050 Move X30, [X31+64]
	051 Move X21, [X31+72]
	052 Add X31, X31, 96
	053 Return 
	054 Call 0x1C17F20
	055 Call 0x1C17F20
	056 Move X0, X20
	057 Call 0x1C17F18
	058 Move X21, X0
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, X21
	061 Call 0x3EB2AD0
	062 Move X20, [X0]
	063 Call 0x3EB2AE0
	064 Move X20, X31
	065 Move X21, X0
	066 Move X8, [X19+32]
	067 Move X8, [X8+192]
	068 Move X1, [X8+400]
	069 Add X0, X31, 32
	070 Call Enumerator<Object>.Dispose, X0
	071 Compare X20, 0
	072 JumpIfNotEqual {75}
	073 Move X0, X21
	074 Call 0x1D2D690
	075 Move X0, X20
	076 Call 0x1C17F18
	077 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x0276A49C MOV X0, X19
	0x0276A4A0 LDR X8, [X8 + 0xC0]
	0x0276A4A4 LDR X1, [X8 + 0xE0]
	0x0276A4A8 BL 0x276A2E0
	0x0276A4AC STRB W31, [X19 + 0x451]
	0x0276A4B0 LDP X20, X19, [X31 + 0x20]
	0x0276A4B4 LDP X22, X21, [X31 + 0x10]
	0x0276A4B8 LDP X30, X23, [X31], #0x30
	0x0276A4BC RET
	0x0276A4C0 BL 0x1C16F20
	0x0276A4C4 MOVZ W8, 0x1
	0x0276A4C8 STRB W8, [X0 + 0x451]
	0x0276A4CC LDR X8, [X1 + 0x20]
	0x0276A4D0 LDR X8, [X8 + 0xC0]
	0x0276A4D4 LDR X1, [X8 + 0x150]
	0x0276A4D8 B 0x28A04B8
	0x0276A4DC SUB X31, X31, 0x60
	0x0276A4E0 STP X30, X21, [X31 + 0x40]
	0x0276A4E4 STP X20, X19, [X31 + 0x50]
	0x0276A4E8 STP X31, X31, [X31 + 0x20]
	0x0276A4EC STR X31, [X31 + 0x30]
	0x0276A4F0 MOV X20, X0
	0x0276A4F4 LDR X0, [X0 + 0x448]
	0x0276A4F8 CBZ X0, 0x276A59C
	0x0276A4FC LDR X8, [X1 + 0x20]
	0x0276A500 MOV X19, X1
	0x0276A504 LDR X8, [X8 + 0xC0]
	0x0276A508 LDR X1, [X8 + 0x158]
	0x0276A50C ADD X8, X31, 0x8
	0x0276A510 BL 0x301CB58
	0x0276A514 LDUR V0, [X31 + 0x8]
	0x0276A518 LDR X8, [X31 + 0x18]
	0x0276A51C STR V0, [X31 + 0x2]
	0x0276A520 STR X8, [X31 + 0x30]
	0x0276A524 LDR X8, [X19 + 0x20]
	0x0276A528 LDR X8, [X8 + 0xC0]
	0x0276A52C LDR X1, [X8 + 0x188]
	0x0276A530 ADD X0, X31, 0x20
	0x0276A534 BL 0x2BC4350
	0x0276A538 TBZ X0, 0x0, 0x276A56C
	0x0276A53C LDR X0, [X31 + 0x30]
	0x0276A540 CBZ X0, 0x276A598
	0x0276A544 LDRB W8, [X20 + 0x410]
	0x0276A548 LDRB W9, [X0 + 0x408]
	0x0276A54C CMP W9, W8
	0x0276A550 B.EQ 0x276A524
	0x0276A554 LDR X9, [X0]
	0x0276A558 STRB W8, [X0 + 0x408]
	0x0276A55C LDR X1, [X9 + 0x880]
	0x0276A560 LDR X8, [X9 + 0x878]
	0x0276A564 BLR X8
	0x0276A568 B 0x276A524
	0x0276A56C MOV X20, X31
	0x0276A570 LDR X8, [X19 + 0x20]
	0x0276A574 ADD X0, X31, 0x20
	0x0276A578 LDR X8, [X8 + 0xC0]
	0x0276A57C LDR X1, [X8 + 0x190]
	0x0276A580 BL 0x2BC434C
	0x0276A584 CBNZ X20, 0x276A5A0
	0x0276A588 LDP X20, X19, [X31 + 0x50]
	0x0276A58C LDP X30, X21, [X31 + 0x40]
	0x0276A590 ADD X31, X31, 0x60
	0x0276A594 RET
	0x0276A598 BL 0x1C16F20
	0x0276A59C BL 0x1C16F20
	0x0276A5A0 MOV X0, X20
	0x0276A5A4 BL 0x1C16F18
	0x0276A5A8 B 0x276A5B0
	0x0276A5AC B 0x276A5B0
	0x0276A5B0 MOV X21, X0
	0x0276A5B4 CMP W1, 0x1
	0x0276A5B8 B.NE 0x276A5D0
	0x0276A5BC MOV X0, X21
	0x0276A5C0 BL 0x3EB1AD0
	0x0276A5C4 LDR X20, [X0]
	0x0276A5C8 BL 0x3EB1AE0
	0x0276A5CC B 0x276A570
	0x0276A5D0 MOV X20, X31
	0x0276A5D4 B 0x276A5DC
	0x0276A5D8 MOV X21, X0
	0x0276A5DC LDR X8, [X19 + 0x20]
	0x0276A5E0 LDR X8, [X8 + 0xC0]
	0x0276A5E4 LDR X1, [X8 + 0x190]
	0x0276A5E8 ADD X0, X31, 0x20
	0x0276A5EC BL 0x2BC434C
	0x0276A5F0 CBNZ X20, 0x276A5FC
	0x0276A5F4 MOV X0, X21
	0x0276A5F8 BL 0x1D2C690
	0x0276A5FC MOV X0, X20
	0x0276A600 BL 0x1C16F18
	0x0276A604 BL 0x1990590
	0x0276A608 STP X30, X21, [X31 - 0x20]!
	0x0276A60C STP X20, X19, [X31 + 0x10]
	0x0276A610 ADRP X20, 0x1C70000
	0x0276A614 ADRP X21, 0x19B3000
	0x0276A618 LDRB W8, [X20 + 0x7B3]
	0x0276A61C LDR X21, [X21 + 0xD28]
	0x0276A620 MOV X19, X0
	0x0276A624 TBNZ X8, 0x0, 0x276A69C
	0x0276A628 ADRP X0, 0x19B3000
	0x0276A62C LDR X0, [X0 + 0xD30]
	0x0276A630 BL 0x1C16CF4
	0x0276A634 ADRP X0, 0x19B3000
	0x0276A638 LDR X0, [X0 + 0xD38]
	0x0276A63C BL 0x1C16CF4
	0x0276A640 ADRP X0, 0x19B3000
	0x0276A644 LDR X0, [X0 + 0xD40]
	0x0276A648 BL 0x1C16CF4
	0x0276A64C ADRP X0, 0x19B2000
	0x0276A650 LDR X0, [X0 + 0xEB8]
	0x0276A654 BL 0x1C16CF4
	0x0276A658 ADRP X0, 0x19B3000
	0x0276A65C LDR X0, [X0 + 0xD48]
	0x0276A660 BL 0x1C16CF4
	0x0276A664 ADRP X0, 0x19B3000
	0x0276A668 LDR X0, [X0 + 0xD50]
	0x0276A66C BL 0x1C16CF4
	0x0276A670 ADRP X0, 0x19B3000
	0x0276A674 LDR X0, [X0 + 0xD28]
	0x0276A678 BL 0x1C16CF4
	0x0276A67C ADRP X0, 0x19B3000
	0x0276A680 LDR X0, [X0 + 0xD58]
	0x0276A684 BL 0x1C16CF4
	0x0276A688 ADRP X0, 0x19B2000
	0x0276A68C LDR X0, [X0 + 0xEC0]
	0x0276A690 BL 0x1C16CF4
	0x0276A694 MOVZ W8, 0x1
	0x0276A698 STRB W8, [X20 + 0x7B3]
	0x0276A69C LDR X20, [X21]
	0x0276A6A0 LDR X0, [X19 + 0x20]!
	0x0276A6A4 LDRB W8, [X0 + 0x135]
	0x0276A6A8 TBNZ X8, 0x0, 0x276A6B0
	0x0276A6AC BL 0x1C5C684
	0x0276A6B0 LDR X8, [X0 + 0xC0]
	0x0276A6B4 LDR X0, [X8 + 0x8]
	0x0276A6B8 LDRB W8, [X0 + 0x135]
	0x0276A6BC TBNZ X8, 0x0, 0x276A6C4
	0x0276A6C0 BL 0x1C5C684
	0x0276A6C4 LDR X8, [X0 + 0xB8]
	0x0276A6C8 STR X20, [X8]
	0x0276A6CC LDR X0, [X19]
	0x0276A6D0 LDRB W8, [X0 + 0x135]
	0x0276A6D4 TBNZ X8, 0x0, 0x276A6DC
	0x0276A6D8 BL 0x1C5C684
	0x0276A6DC LDR X8, [X0 + 0xC0]
	0x0276A6E0 LDR X0, [X8 + 0x8]
	0x0276A6E4 LDRB W8, [X0 + 0x135]
	0x0276A6E8 TBNZ X8, 0x0, 0x276A6F0
	0x0276A6EC BL 0x1C5C684
	0x0276A6F0 LDR X0, [X19]
	0x0276A6F4 LDRB W8, [X0 + 0x135]
	0x0276A6F8 TBNZ X8, 0x0, 0x276A700
	0x0276A6FC BL 0x1C5C684
	0x0276A700 LDR X8, [X0 + 0xC0]
	0x0276A704 ADRP X20, 0x19B2000
	0x0276A708 LDR X0, [X8 + 0x8]
	0x0276A70C LDRB W8, [X0 + 0x135]
	0x0276A710 LDR X20, [X20 + 0xEB8]
	0x0276A714 TBNZ X8, 0x0, 0x276A71C
	0x0276A718 BL 0x1C5C684
	0x0276A71C LDR X8, [X0 + 0xB8]
	0x0276A720 LDR X1, [X20]
	0x0276A724 MOV X2, X31
	0x0276A728 LDR X0, [X8]
	0x0276A72C BL 0x321B938
	0x0276A730 LDR X8, [X19]
	0x0276A734 MOV X20, X0
	0x0276A738 LDRB W9, [X8 + 0x135]
	0x0276A73C TBNZ X9, 0x0, 0x276A74C
	0x0276A740 MOV X0, X8
	0x0276A744 BL 0x1C5C684
	0x0276A748 MOV X8, X0
	0x0276A74C LDR X8, [X8 + 0xC0]
	0x0276A750 LDR X0, [X8 + 0x8]
	0x0276A754 LDRB W8, [X0 + 0x135]
	0x0276A758 TBNZ X8, 0x0, 0x276A760
	0x0276A75C BL 0x1C5C684
	0x0276A760 LDR X8, [X0 + 0xB8]
	0x0276A764 STR X20, [X8 + 0x8]
	0x0276A768 LDR X0, [X19]
	0x0276A76C LDRB W8, [X0 + 0x135]
	0x0276A770 TBNZ X8, 0x0, 0x276A778
	0x0276A774 BL 0x1C5C684
	0x0276A778 LDR X8, [X0 + 0xC0]
	0x0276A77C LDR X0, [X8 + 0x8]
	0x0276A780 LDRB W8, [X0 + 0x135]
	0x0276A784 TBNZ X8, 0x0, 0x276A78C
	0x0276A788 BL 0x1C5C684
	0x0276A78C LDR X0, [X19]
	0x0276A790 LDRB W8, [X0 + 0x135]
	0x0276A794 TBNZ X8, 0x0, 0x276A79C
	0x0276A798 BL 0x1C5C684
	0x0276A79C LDR X8, [X0 + 0xC0]
	0x0276A7A0 ADRP X20, 0x19B2000
	0x0276A7A4 LDR X0, [X8 + 0x8]
	0x0276A7A8 LDRB W8, [X0 + 0x135]
	0x0276A7AC LDR X20, [X20 + 0xEC0]
	0x0276A7B0 TBNZ X8, 0x0, 0x276A7B8
	0x0276A7B4 BL 0x1C5C684
	0x0276A7B8 LDR X8, [X0 + 0xB8]
	0x0276A7BC LDR X1, [X20]
	0x0276A7C0 MOV X2, X31
	0x0276A7C4 LDR X0, [X8]
	0x0276A7C8 BL 0x321B938
	0x0276A7CC LDR X8, [X19]
	0x0276A7D0 MOV X20, X0
	0x0276A7D4 LDRB W9, [X8 + 0x135]
	0x0276A7D8 TBNZ X9, 0x0, 0x276A7E8
	0x0276A7DC MOV X0, X8
	0x0276A7E0 BL 0x1C5C684
	0x0276A7E4 MOV X8, X0
	0x0276A7E8 LDR X8, [X8 + 0xC0]
	0x0276A7EC LDR X0, [X8 + 0x8]
	0x0276A7F0 LDRB W8, [X0 + 0x135]
	0x0276A7F4 TBNZ X8, 0x0, 0x276A7FC
	0x0276A7F8 BL 0x1C5C684
	0x0276A7FC LDR X8, [X0 + 0xB8]
	0x0276A800 STR X20, [X8 + 0x10]
	0x0276A804 LDR X0, [X19]
	0x0276A808 LDRB W8, [X0 + 0x135]
	0x0276A80C TBNZ X8, 0x0, 0x276A814
	0x0276A810 BL 0x1C5C684
	0x0276A814 LDR X8, [X0 + 0xC0]
	0x0276A818 LDR X0, [X8 + 0x8]
	0x0276A81C LDRB W8, [X0 + 0x135]
	0x0276A820 TBNZ X8, 0x0, 0x276A828
	0x0276A824 BL 0x1C5C684
	0x0276A828 LDR X0, [X19]
	0x0276A82C LDRB W8, [X0 + 0x135]
	0x0276A830 TBNZ X8, 0x0, 0x276A838
	0x0276A834 BL 0x1C5C684
	0x0276A838 LDR X8, [X0 + 0xC0]
	0x0276A83C ADRP X20, 0x19B3000
	0x0276A840 LDR X0, [X8 + 0x8]
	0x0276A844 LDRB W8, [X0 + 0x135]
	0x0276A848 LDR X20, [X20 + 0xD58]
	0x0276A84C TBNZ X8, 0x0, 0x276A854
	0x0276A850 BL 0x1C5C684
	0x0276A854 LDR X8, [X0 + 0xB8]
	0x0276A858 LDR X1, [X20]
	0x0276A85C MOV X2, X31
	0x0276A860 LDR X0, [X8]
	0x0276A864 BL 0x321B938
	0x0276A868 LDR X8, [X19]
	0x0276A86C MOV X20, X0
	0x0276A870 LDRB W9, [X8 + 0x135]
	0x0276A874 TBNZ X9, 0x0, 0x276A884
	0x0276A878 MOV X0, X8
	0x0276A87C BL 0x1C5C684
	0x0276A880 MOV X8, X0
	0x0276A884 LDR X8, [X8 + 0xC0]
	0x0276A888 LDR X0, [X8 + 0x8]
	0x0276A88C LDRB W8, [X0 + 0x135]
	0x0276A890 TBNZ X8, 0x0, 0x276A898
	0x0276A894 BL 0x1C5C684
	0x0276A898 LDR X8, [X0 + 0xB8]
	0x0276A89C STR X20, [X8 + 0x18]
	0x0276A8A0 LDR X0, [X19]
	0x0276A8A4 LDRB W8, [X0 + 0x135]
	0x0276A8A8 TBNZ X8, 0x0, 0x276A8B0
	0x0276A8AC BL 0x1C5C684
	0x0276A8B0 LDR X8, [X0 + 0xC0]
	0x0276A8B4 LDR X0, [X8 + 0x8]
	0x0276A8B8 LDRB W8, [X0 + 0x135]
	0x0276A8BC TBNZ X8, 0x0, 0x276A8C4
	0x0276A8C0 BL 0x1C5C684
	0x0276A8C4 LDR X0, [X19]
	0x0276A8C8 LDRB W8, [X0 + 0x135]
	0x0276A8CC TBNZ X8, 0x0, 0x276A8D4
	0x0276A8D0 BL 0x1C5C684
	0x0276A8D4 LDR X8, [X0 + 0xC0]
	0x0276A8D8 ADRP X20, 0x19B3000
	0x0276A8DC LDR X0, [X8 + 0x8]
	0x0276A8E0 LDRB W8, [X0 + 0x135]
	0x0276A8E4 LDR X20, [X20 + 0xD50]
	0x0276A8E8 TBNZ X8, 0x0, 0x276A8F0
	0x0276A8EC BL 0x1C5C684
	0x0276A8F0 LDR X8, [X0 + 0xB8]
	0x0276A8F4 LDR X1, [X20]
	0x0276A8F8 MOV X2, X31
	0x0276A8FC LDR X0, [X8]
	0x0276A900 BL 0x321B938
	0x0276A904 LDR X8, [X19]
	0x0276A908 MOV X20, X0
	0x0276A90C LDRB W9, [X8 + 0x135]
	0x0276A910 TBNZ X9, 0x0, 0x276A920
	0x0276A914 MOV X0, X8
	0x0276A918 BL 0x1C5C684
	0x0276A91C MOV X8, X0
	0x0276A920 LDR X8, [X8 + 0xC0]
	0x0276A924 LDR X0, [X8 + 0x8]
	0x0276A928 LDRB W8, [X0 + 0x135]
	0x0276A92C TBNZ X8, 0x0, 0x276A934
	0x0276A930 BL 0x1C5C684
	0x0276A934 LDR X8, [X0 + 0xB8]
	0x0276A938 STR X20, [X8 + 0x20]
	0x0276A93C LDR X0, [X19]
	0x0276A940 LDRB W8, [X0 + 0x135]
	0x0276A944 TBNZ X8, 0x0, 0x276A94C
	0x0276A948 BL 0x1C5C684
	0x0276A94C LDR X8, [X0 + 0xC0]
	0x0276A950 LDR X0, [X8 + 0x8]
	0x0276A954 LDRB W8, [X0 + 0x135]
	0x0276A958 TBNZ X8, 0x0, 0x276A960
	0x0276A95C BL 0x1C5C684
	0x0276A960 LDR X0, [X19]
	0x0276A964 LDRB W8, [X0 + 0x135]
	0x0276A968 TBNZ X8, 0x0, 0x276A970
	0x0276A96C BL 0x1C5C684
	0x0276A970 LDR X8, [X0 + 0xC0]
	0x0276A974 ADRP X20, 0x19B3000
	0x0276A978 LDR X0, [X8 + 0x8]
	0x0276A97C LDRB W8, [X0 + 0x135]
	0x0276A980 LDR X20, [X20 + 0xD30]
	0x0276A984 TBNZ X8, 0x0, 0x276A98C
	0x0276A988 BL 0x1C5C684
	0x0276A98C LDR X8, [X0 + 0xB8]
	0x0276A990 LDR X1, [X20]
	0x0276A994 MOV X2, X31
	0x0276A998 LDR X0, [X8]
	0x0276A99C BL 0x321B938
	0x0276A9A0 LDR X8, [X19]
	0x0276A9A4 MOV X20, X0
	0x0276A9A8 LDRB W9, [X8 + 0x135]
	0x0276A9AC TBNZ X9, 0x0, 0x276A9BC
	0x0276A9B0 MOV X0, X8
	0x0276A9B4 BL 0x1C5C684
	0x0276A9B8 MOV X8, X0
	0x0276A9BC LDR X8, [X8 + 0xC0]
	0x0276A9C0 LDR X0, [X8 + 0x8]
	0x0276A9C4 LDRB W8, [X0 + 0x135]
	0x0276A9C8 TBNZ X8, 0x0, 0x276A9D0
	0x0276A9CC BL 0x1C5C684
	0x0276A9D0 LDR X8, [X0 + 0xB8]
	0x0276A9D4 STR X20, [X8 + 0x28]
	0x0276A9D8 LDR X0, [X19]
	0x0276A9DC LDRB W8, [X0 + 0x135]
	0x0276A9E0 TBNZ X8, 0x0, 0x276A9E8
	0x0276A9E4 BL 0x1C5C684
	0x0276A9E8 LDR X8, [X0 + 0xC0]
	0x0276A9EC LDR X0, [X8 + 0x8]
	0x0276A9F0 LDRB W8, [X0 + 0x135]
	0x0276A9F4 TBNZ X8, 0x0, 0x276A9FC
	0x0276A9F8 BL 0x1C5C684
	0x0276A9FC LDR X0, [X19]
	0x0276AA00 LDRB W8, [X0 + 0x135]
	0x0276AA04 TBNZ X8, 0x0, 0x276AA0C
	0x0276AA08 BL 0x1C5C684
	0x0276AA0C LDR X8, [X0 + 0xC0]
	0x0276AA10 ADRP X20, 0x19B3000
	0x0276AA14 LDR X0, [X8 + 0x8]
	0x0276AA18 LDRB W8, [X0 + 0x135]
	0x0276AA1C LDR X20, [X20 + 0xD38]
	0x0276AA20 TBNZ X8, 0x0, 0x276AA28
	0x0276AA24 BL 0x1C5C684
	0x0276AA28 LDR X8, [X0 + 0xB8]
	0x0276AA2C LDR X1, [X20]
	0x0276AA30 MOV X2, X31
	0x0276AA34 LDR X0, [X8]
	0x0276AA38 BL 0x321B938
	0x0276AA3C LDR X8, [X19]
	0x0276AA40 MOV X20, X0
	0x0276AA44 LDRB W9, [X8 + 0x135]
	0x0276AA48 TBNZ X9, 0x0, 0x276AA58
	0x0276AA4C MOV X0, X8
	0x0276AA50 BL 0x1C5C684
	0x0276AA54 MOV X8, X0
	0x0276AA58 LDR X8, [X8 + 0xC0]
	0x0276AA5C LDR X0, [X8 + 0x8]
	0x0276AA60 LDRB W8, [X0 + 0x135]
	0x0276AA64 TBNZ X8, 0x0, 0x276AA6C
	0x0276AA68 BL 0x1C5C684
	0x0276AA6C LDR X8, [X0 + 0xB8]
	0x0276AA70 STR X20, [X8 + 0x30]
	0x0276AA74 LDR X0, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1C71000
	006 Move X21, 0x19B4000
	007 Move W8, [X20+1968]
	008 Move X21, [X21+3368]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {43}
	014 Move X0, 0x19B4000
	015 Move X0, [X0+3376]
	016 Call 0x1C17CF4
	017 Move X0, 0x19B4000
	018 Move X0, [X0+3384]
	019 Call 0x1C17CF4
	020 Move X0, 0x19B4000
	021 Move X0, [X0+3392]
	022 Call 0x1C17CF4
	023 Move X0, 0x19B3000
	024 Move X0, [X0+3768]
	025 Call 0x1C17CF4
	026 Move X0, 0x19B4000
	027 Move X0, [X0+3400]
	028 Call 0x1C17CF4
	029 Move X0, 0x19B4000
	030 Move X0, [X0+3408]
	031 Call 0x1C17CF4
	032 Move X0, 0x19B4000
	033 Move X0, [X0+3368]
	034 Call 0x1C17CF4
	035 Move X0, 0x19B4000
	036 Move X0, [X0+3416]
	037 Call 0x1C17CF4
	038 Move X0, 0x19B3000
	039 Move X0, [X0+3776]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+1968], W8
	043 Move X20, [X21]
	044 Add X19, X19, 32
	045 Move X0, [X19]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move X8, [X0+192]
	053 Move X0, [X8+8]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Move X8, [X0+184]
	061 Move [X8], X20
	062 Move X0, [X19]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move X8, [X0+192]
	070 Move X0, [X8+8]
	071 Move W8, [X0+309]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {77}
	076 Call 0x1C5D684
	077 Move X0, [X19]
	078 Move W8, [X0+309]
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {84}
	083 Call 0x1C5D684
	084 Move X8, [X0+192]
	085 Move X20, 0x19B3000
	086 Move X0, [X8+8]
	087 Move W8, [X0+309]
	088 Move X20, [X20+3768]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Move X8, [X0+184]
	095 Move X1, [X20]
	096 Move X2, X31
	097 Move X0, [X8]
	098 Call String.Concat, X0, X1
	099 Move X8, [X19]
	100 Move X20, X0
	101 Move W9, [X8+309]
	102 Move TEMP, X9
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {109}
	106 Move X0, X8
	107 Call 0x1C5D684
	108 Move X8, X0
	109 Move X8, [X8+192]
	110 Move X0, [X8+8]
	111 Move W8, [X0+309]
	112 Move TEMP, X8
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {117}
	116 Call 0x1C5D684
	117 Move X8, [X0+184]
	118 Move [X8+8], X20
	119 Move X0, [X19]
	120 Move W8, [X0+309]
	121 Move TEMP, X8
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {126}
	125 Call 0x1C5D684
	126 Move X8, [X0+192]
	127 Move X0, [X8+8]
	128 Move W8, [X0+309]
	129 Move TEMP, X8
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {134}
	133 Call 0x1C5D684
	134 Move X0, [X19]
	135 Move W8, [X0+309]
	136 Move TEMP, X8
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {141}
	140 Call 0x1C5D684
	141 Move X8, [X0+192]
	142 Move X20, 0x19B3000
	143 Move X0, [X8+8]
	144 Move W8, [X0+309]
	145 Move X20, [X20+3776]
	146 Move TEMP, X8
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfEqual {151}
	150 Call 0x1C5D684
	151 Move X8, [X0+184]
	152 Move X1, [X20]
	153 Move X2, X31
	154 Move X0, [X8]
	155 Call String.Concat, X0, X1
	156 Move X8, [X19]
	157 Move X20, X0
	158 Move W9, [X8+309]
	159 Move TEMP, X9
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {166}
	163 Move X0, X8
	164 Call 0x1C5D684
	165 Move X8, X0
	166 Move X8, [X8+192]
	167 Move X0, [X8+8]
	168 Move W8, [X0+309]
	169 Move TEMP, X8
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfEqual {174}
	173 Call 0x1C5D684
	174 Move X8, [X0+184]
	175 Move [X8+16], X20
	176 Move X0, [X19]
	177 Move W8, [X0+309]
	178 Move TEMP, X8
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfEqual {183}
	182 Call 0x1C5D684
	183 Move X8, [X0+192]
	184 Move X0, [X8+8]
	185 Move W8, [X0+309]
	186 Move TEMP, X8
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfEqual {191}
	190 Call 0x1C5D684
	191 Move X0, [X19]
	192 Move W8, [X0+309]
	193 Move TEMP, X8
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfEqual {198}
	197 Call 0x1C5D684
	198 Move X8, [X0+192]
	199 Move X20, 0x19B4000
	200 Move X0, [X8+8]
	201 Move W8, [X0+309]
	202 Move X20, [X20+3416]
	203 Move TEMP, X8
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfEqual {208}
	207 Call 0x1C5D684
	208 Move X8, [X0+184]
	209 Move X1, [X20]
	210 Move X2, X31
	211 Move X0, [X8]
	212 Call String.Concat, X0, X1
	213 Move X8, [X19]
	214 Move X20, X0
	215 Move W9, [X8+309]
	216 Move TEMP, X9
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfEqual {223}
	220 Move X0, X8
	221 Call 0x1C5D684
	222 Move X8, X0
	223 Move X8, [X8+192]
	224 Move X0, [X8+8]
	225 Move W8, [X0+309]
	226 Move TEMP, X8
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfEqual {231}
	230 Call 0x1C5D684
	231 Move X8, [X0+184]
	232 Move [X8+24], X20
	233 Move X0, [X19]
	234 Move W8, [X0+309]
	235 Move TEMP, X8
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfEqual {240}
	239 Call 0x1C5D684
	240 Move X8, [X0+192]
	241 Move X0, [X8+8]
	242 Move W8, [X0+309]
	243 Move TEMP, X8
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfEqual {248}
	247 Call 0x1C5D684
	248 Move X0, [X19]
	249 Move W8, [X0+309]
	250 Move TEMP, X8
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfEqual {255}
	254 Call 0x1C5D684
	255 Move X8, [X0+192]
	256 Move X20, 0x19B4000
	257 Move X0, [X8+8]
	258 Move W8, [X0+309]
	259 Move X20, [X20+3408]
	260 Move TEMP, X8
	261 And TEMP, TEMP, 1
	262 Compare TEMP, 1
	263 JumpIfEqual {265}
	264 Call 0x1C5D684
	265 Move X8, [X0+184]
	266 Move X1, [X20]
	267 Move X2, X31
	268 Move X0, [X8]
	269 Call String.Concat, X0, X1
	270 Move X8, [X19]
	271 Move X20, X0
	272 Move W9, [X8+309]
	273 Move TEMP, X9
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfEqual {280}
	277 Move X0, X8
	278 Call 0x1C5D684
	279 Move X8, X0
	280 Move X8, [X8+192]
	281 Move X0, [X8+8]
	282 Move W8, [X0+309]
	283 Move TEMP, X8
	284 And TEMP, TEMP, 1
	285 Compare TEMP, 1
	286 JumpIfEqual {288}
	287 Call 0x1C5D684
	288 Move X8, [X0+184]
	289 Move [X8+32], X20
	290 Move X0, [X19]
	291 Move W8, [X0+309]
	292 Move TEMP, X8
	293 And TEMP, TEMP, 1
	294 Compare TEMP, 1
	295 JumpIfEqual {297}
	296 Call 0x1C5D684
	297 Move X8, [X0+192]
	298 Move X0, [X8+8]
	299 Move W8, [X0+309]
	300 Move TEMP, X8
	301 And TEMP, TEMP, 1
	302 Compare TEMP, 1
	303 JumpIfEqual {305}
	304 Call 0x1C5D684
	305 Move X0, [X19]
	306 Move W8, [X0+309]
	307 Move TEMP, X8
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfEqual {312}
	311 Call 0x1C5D684
	312 Move X8, [X0+192]
	313 Move X20, 0x19B4000
	314 Move X0, [X8+8]
	315 Move W8, [X0+309]
	316 Move X20, [X20+3376]
	317 Move TEMP, X8
	318 And TEMP, TEMP, 1
	319 Compare TEMP, 1
	320 JumpIfEqual {322}
	321 Call 0x1C5D684
	322 Move X8, [X0+184]
	323 Move X1, [X20]
	324 Move X2, X31
	325 Move X0, [X8]
	326 Call String.Concat, X0, X1
	327 Move X8, [X19]
	328 Move X20, X0
	329 Move W9, [X8+309]
	330 Move TEMP, X9
	331 And TEMP, TEMP, 1
	332 Compare TEMP, 1
	333 JumpIfEqual {337}
	334 Move X0, X8
	335 Call 0x1C5D684
	336 Move X8, X0
	337 Move X8, [X8+192]
	338 Move X0, [X8+8]
	339 Move W8, [X0+309]
	340 Move TEMP, X8
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfEqual {345}
	344 Call 0x1C5D684
	345 Move X8, [X0+184]
	346 Move [X8+40], X20
	347 Move X0, [X19]
	348 Move W8, [X0+309]
	349 Move TEMP, X8
	350 And TEMP, TEMP, 1
	351 Compare TEMP, 1
	352 JumpIfEqual {354}
	353 Call 0x1C5D684
	354 Move X8, [X0+192]
	355 Move X0, [X8+8]
	356 Move W8, [X0+309]
	357 Move TEMP, X8
	358 And TEMP, TEMP, 1
	359 Compare TEMP, 1
	360 JumpIfEqual {362}
	361 Call 0x1C5D684
	362 Move X0, [X19]
	363 Move W8, [X0+309]
	364 Move TEMP, X8
	365 And TEMP, TEMP, 1
	366 Compare TEMP, 1
	367 JumpIfEqual {369}
	368 Call 0x1C5D684
	369 Move X8, [X0+192]
	370 Move X20, 0x19B4000
	371 Move X0, [X8+8]
	372 Move W8, [X0+309]
	373 Move X20, [X20+3384]
	374 Move TEMP, X8
	375 And TEMP, TEMP, 1
	376 Compare TEMP, 1
	377 JumpIfEqual {379}
	378 Call 0x1C5D684
	379 Move X8, [X0+184]
	380 Move X1, [X20]
	381 Move X2, X31
	382 Move X0, [X8]
	383 Call String.Concat, X0, X1
	384 Move X8, [X19]
	385 Move X20, X0
	386 Move W9, [X8+309]
	387 Move TEMP, X9
	388 And TEMP, TEMP, 1
	389 Compare TEMP, 1
	390 JumpIfEqual {394}
	391 Move X0, X8
	392 Call 0x1C5D684
	393 Move X8, X0
	394 Move X8, [X8+192]
	395 Move X0, [X8+8]
	396 Move W8, [X0+309]
	397 Move TEMP, X8
	398 And TEMP, TEMP, 1
	399 Compare TEMP, 1
	400 JumpIfEqual {402}
	401 Call 0x1C5D684
	402 Move X8, [X0+184]
	403 Move [X8+48], X20
	404 Move X0, [X19]
	405 Move W8, [X0+309]
	406 Move TEMP, X8
	407 And TEMP, TEMP, 1
	408 Compare TEMP, 1
	409 JumpIfEqual {411}
	410 Call 0x1C5D684
	411 Move X8, [X0+192]
	412 Move X0, [X8+8]
	413 Move W8, [X0+309]
	414 Move TEMP, X8
	415 And TEMP, TEMP, 1
	416 Compare TEMP, 1
	417 JumpIfEqual {419}
	418 Call 0x1C5D684
	419 Move X0, [X19]
	420 Move W8, [X0+309]
	421 Move TEMP, X8
	422 And TEMP, TEMP, 1
	423 Compare TEMP, 1
	424 JumpIfEqual {426}
	425 Call 0x1C5D684
	426 Move X8, [X0+192]
	427 Move X20, 0x19B4000
	428 Move X0, [X8+8]
	429 Move W8, [X0+309]
	430 Move X20, [X20+3392]
	431 Move TEMP, X8
	432 And TEMP, TEMP, 1
	433 Compare TEMP, 1
	434 JumpIfEqual {436}
	435 Call 0x1C5D684
	436 Move X8, [X0+184]
	437 Move X1, [X20]
	438 Move X2, X31
	439 Move X0, [X8+48]
	440 Call String.Concat, X0, X1
	441 Move X8, [X19]
	442 Move X20, X0
	443 Move W9, [X8+309]
	444 Move TEMP, X9
	445 And TEMP, TEMP, 1
	446 Compare TEMP, 1
	447 JumpIfEqual {451}
	448 Move X0, X8
	449 Call 0x1C5D684
	450 Move X8, X0
	451 Move X8, [X8+192]
	452 Move X0, [X8+8]
	453 Move W8, [X0+309]
	454 Move TEMP, X8
	455 And TEMP, TEMP, 1
	456 Compare TEMP, 1
	457 JumpIfEqual {459}
	458 Call 0x1C5D684
	459 Move X8, [X0+184]
	460 Move [X8+56], X20
	461 Move X0, [X19]
	462 Move W8, [X0+309]
	463 Move TEMP, X8
	464 And TEMP, TEMP, 1
	465 Compare TEMP, 1
	466 JumpIfEqual {468}
	467 Call 0x1C5D684
	468 Move X8, [X0+192]
	469 Move X0, [X8+8]
	470 Move W8, [X0+309]
	471 Move TEMP, X8
	472 And TEMP, TEMP, 1
	473 Compare TEMP, 1
	474 JumpIfEqual {476}
	475 Call 0x1C5D684
	476 Move X0, [X19]
	477 Move W8, [X0+309]
	478 Move TEMP, X8
	479 And TEMP, TEMP, 1
	480 Compare TEMP, 1
	481 JumpIfEqual {483}
	482 Call 0x1C5D684
	483 Move X8, [X0+192]
	484 Move X20, 0x19B4000
	485 Move X0, [X8+8]
	486 Move W8, [X0+309]
	487 Move X20, [X20+3400]
	488 Move TEMP, X8
	489 And TEMP, TEMP, 1
	490 Compare TEMP, 1
	491 JumpIfEqual {493}
	492 Call 0x1C5D684
	493 Move X8, [X0+184]
	494 Move X1, [X20]
	495 Move X2, X31
	496 Move X0, [X8]
	497 Call String.Concat, X0, X1
	498 Move X8, [X19]
	499 Move X20, X0
	500 Move W9, [X8+309]
	501 Move TEMP, X9
	502 And TEMP, TEMP, 1
	503 Compare TEMP, 1
	504 JumpIfEqual {508}
	505 Move X0, X8
	506 Call 0x1C5D684
	507 Move X8, X0
	508 Move X8, [X8+192]
	509 Move X0, [X8+8]
	510 Move W8, [X0+309]
	511 Move TEMP, X8
	512 And TEMP, TEMP, 1
	513 Compare TEMP, 1
	514 JumpIfEqual {516}
	515 Call 0x1C5D684
	516 Move X8, [X0+184]
	517 Move [X8+64], X20
	518 Move X0, [X19]
	519 Move W8, [X0+309]
	520 Move TEMP, X8
	521 And TEMP, TEMP, 1
	522 Compare TEMP, 1
	523 JumpIfEqual {525}
	524 Call 0x1C5D684
	525 Move X8, [X0+192]
	526 Move X0, [X8+8]
	527 Move W8, [X0+309]
	528 Move TEMP, X8
	529 And TEMP, TEMP, 1
	530 Compare TEMP, 1
	531 JumpIfEqual {538}
	532 Move X20, [X31+16]
	533 Move X19, [X31+24]
	534 Move X30, [X31+32]
	535 Move X21, [X31+40]
	536 Call 0x1C5D684
	537 Return 
	538 Move X20, [X31+16]
	539 Move X19, [X31+24]
	540 Move X30, [X31+32]
	541 Move X21, [X31+40]
	542 Return 

