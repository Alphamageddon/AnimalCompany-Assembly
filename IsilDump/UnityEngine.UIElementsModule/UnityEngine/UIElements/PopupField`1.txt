Type: UnityEngine.UIElements.PopupField`1

Method: System.String GetValueToDisplay()

Disassembly:
	0x024A8074 LDR X8, [X26 + 0xC0]
	0x024A8078 LDR X8, [X8 + 0x20]
	0x024A807C LDR W8, [X8 + 0x28]
	0x024A8080 CMP W8, 0x0
	0x024A8084 SUB X8, X29, 0x20
	0x024A8088 CSEL X1, X21, X8, LT
	0x024A808C BL 0x3EB1AC0
	0x024A8090 LDR X8, [X26 + 0xC0]
	0x024A8094 LDR X9, [X8 + 0x20]
	0x024A8098 LDR X1, [X8 + 0x48]
	0x024A809C MOV X8, X20
	0x024A80A0 LDR W9, [X9 + 0x28]
	0x024A80A4 LDR X0, [X1]
	0x024A80A8 TBNZ X9, 0x1F, 0x24A80B0
	0x024A80AC LDR X8, [X20]
	0x024A80B0 STUR X8, [X29 - 0x18]
	0x024A80B4 LDR X8, [X1 + 0x10]
	0x024A80B8 SUB X3, X29, 0x18
	0x024A80BC SUB X4, X29, 0xC
	0x024A80C0 MOV X2, X24
	0x024A80C4 BLR X8
	0x024A80C8 LDUR W26, [X29 - 0xC]
	0x024A80CC CBZ X19, 0x24A818C
	0x024A80D0 LDR X8, [X23 + 0x20]
	0x024A80D4 MOVZ W1, 0x4
	0x024A80D8 LDR X8, [X8 + 0xC0]
	0x024A80DC LDR X8, [X8 + 0x50]
	0x024A80E0 LDR X24, [X8 + 0x80]
	0x024A80E4 MOV X0, X24
	0x024A80E8 BL 0x1C16D14
	0x024A80EC MOV X0, X19
	0x024A80F0 MOV X1, X24
	0x024A80F4 BL 0x1C16D18
	0x024A80F8 STR W26, [X0]
	0x024A80FC LDR X23, [X23 + 0x20]
	0x024A8100 MOV X0, X20
	0x024A8104 MOV X2, X22
	0x024A8108 LDR X8, [X23 + 0xC0]
	0x024A810C LDR X8, [X8 + 0x20]
	0x024A8110 LDR W8, [X8 + 0x28]
	0x024A8114 CMP W8, 0x0
	0x024A8118 SUB X8, X29, 0x20
	0x024A811C CSEL X1, X21, X8, LT
	0x024A8120 BL 0x3EB1AC0
	0x024A8124 LDR X8, [X23 + 0xC0]
	0x024A8128 LDR X9, [X8 + 0x20]
	0x024A812C LDR X1, [X8 + 0x58]
	0x024A8130 LDR W8, [X9 + 0x28]
	0x024A8134 LDR X0, [X1]
	0x024A8138 TBNZ X8, 0x1F, 0x24A8140
	0x024A813C LDR X20, [X20]
	0x024A8140 STUR X20, [X29 - 0x18]
	0x024A8144 LDR X8, [X1 + 0x10]
	0x024A8148 SUB X3, X29, 0x18
	0x024A814C MOV X2, X19
	0x024A8150 MOV X4, X20
	0x024A8154 BLR X8
	0x024A8158 LDR X8, [X25 + 0x28]
	0x024A815C LDUR X9, [X29 - 0x8]
	0x024A8160 CMP X8, X9
	0x024A8164 B.NE 0x24A8190
	0x024A8168 ADD X31, X29, 0x0
	0x024A816C LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1F32000
	005 Move W8, [X20+3015]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x1C4E000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move X0, 0x1C75000
	015 Move X0, [X0+3736]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3015], W8
	019 Move X9, [X19]
	020 Move X20, [X19+1112]
	021 Move X8, [X9+2024]
	022 Move X1, [X9+2032]
	023 Compare X20, 0
	024 JumpIfEqual {36}
	025 Move X0, X19
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, [X20+64]
	028 Move X3, [X20+24]
	029 Move X2, [X20+40]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X1, X0
	033 Move X0, X8
	034 Move X30, [X31+32]
	035 CallNoReturn X3
	036 Move X0, X19
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Compare X0, 0
	039 JumpIfEqual {67}
	040 Move X8, [X19]
	041 Move X0, X19
	042 Move X9, [X8+2024]
	043 Move X1, [X8+2032]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Compare X0, 0
	046 JumpIfEqual {76}
	047 Move X8, [X0]
	048 Move X9, [X8+360]
	049 Move X1, [X8+368]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X8, 0x1C75000
	052 Move X8, [X8+3736]
	053 Move X19, X0
	054 Move X8, [X8]
	055 Move W9, [X8+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {60}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Move X0, X19
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X1, X31
	064 Move X30, [X31+32]
	065 Call UIElementsUtility.ParseMenuName, X0
	066 Return X0
	067 Move X8, 0x1C4E000
	068 Move X8, [X8+632]
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X8, [X8]
	072 Move X8, [X8+184]
	073 Move X0, [X8]
	074 Move X30, [X31+32]
	075 Return X0
	076 Call 0x1C17F20

Method: System.String GetListItemToDisplay(T value)

Disassembly:
	0x024A8170 LDP X22, X21, [X31 + 0x30]
	0x024A8174 LDP X24, X23, [X31 + 0x20]
	0x024A8178 LDP X26, X25, [X31 + 0x10]
	0x024A817C LDP X29, X30, [X31], #0x50
	0x024A8180 RET
	0x024A8184 MOVN W26, 0x0
	0x024A8188 CBNZ X19, 0x24A80D0
	0x024A818C BL 0x1C16F20
	0x024A8190 BL 0x3EB1B20
	0x024A8194 STP X29, X30, [X31 - 0x50]!
	0x024A8198 STP X26, X25, [X31 + 0x10]
	0x024A819C STP X24, X23, [X31 + 0x20]
	0x024A81A0 STP X22, X21, [X31 + 0x30]
	0x024A81A4 STP X20, X19, [X31 + 0x40]
	0x024A81A8 ADD X29, X31, 0x0
	0x024A81AC SUB X31, X31, 0x20
	0x024A81B0 MRS X25, 0xC000
	0x024A81B4 LDR X8, [X25 + 0x28]
	0x024A81B8 MOV X23, X2
	0x024A81BC MOV X21, X1
	0x024A81C0 MOV X19, X0
	0x024A81C4 STUR X8, [X29 - 0x8]
	0x024A81C8 STUR X1, [X29 - 0x20]
	0x024A81CC LDR X8, [X2 + 0x20]
	0x024A81D0 LDR X8, [X8 + 0xC0]
	0x024A81D4 LDR X9, [X8 + 0x20]
	0x024A81D8 LDR W22, [X9 + 0xFC]
	0x024A81DC ADD X9, X31, 0x0
	0x024A81E0 ADD X10, X22, 0xF
	0x024A81E4 AND X10, X10, 0x1FFFFFFFF
	0x024A81E8 SUB X20, X9, X10
	0x024A81EC ADD X31, X20, 0x0
	0x024A81F0 LDR X8, [X8]
	0x024A81F4 LDR X1, [X8 + 0x80]
	0x024A81F8 BL 0x1C16D18
	0x024A81FC LDR X24, [X0]
	0x024A8200 CBZ X24, 0x24A8320
	0x024A8204 LDR X26, [X23 + 0x20]
	0x024A8208 MOV X0, X20
	0x024A820C MOV X2, X22
	0x024A8210 LDR X8, [X26 + 0xC0]
	0x024A8214 LDR X8, [X8 + 0x20]
	0x024A8218 LDR W8, [X8 + 0x28]
	0x024A821C CMP W8, 0x0
	0x024A8220 SUB X8, X29, 0x20
	0x024A8224 CSEL X1, X21, X8, LT
	0x024A8228 BL 0x3EB1AC0
	0x024A822C LDR X8, [X26 + 0xC0]
	0x024A8230 LDR X9, [X8 + 0x20]
	0x024A8234 LDR X1, [X8 + 0x48]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1F32000
	007 Move W8, [X22+3016]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1C4E000
	016 Move X0, [X0+632]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3016], W8
	020 Move X8, [X21+1120]
	021 Compare X8, 0
	022 JumpIfEqual {33}
	023 Move X3, [X8+24]
	024 Move X0, [X8+64]
	025 Move X2, [X8+40]
	026 Move X1, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 CallNoReturn X3
	033 Compare X19, 0
	034 JumpIfEqual {57}
	035 Move X0, [X21+1088]
	036 Compare X0, 0
	037 JumpIfEqual {68}
	038 Move X8, [X20+32]
	039 Move X1, X19
	040 Move X8, [X8+192]
	041 Move X2, [X8+64]
	042 Call List`1<Object>.Contains, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {57}
	047 Move X8, [X19]
	048 Move X0, X19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X2, [X8+360]
	054 Move X1, [X8+368]
	055 Move X30, [X31+48]
	056 CallNoReturn X2
	057 Move X8, 0x1C4E000
	058 Move X8, [X8+632]
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X8, [X8]
	064 Move X8, [X8+184]
	065 Move X0, [X8]
	066 Move X30, [X31+48]
	067 Return X0
	068 Call 0x1C17F20

Method: T get_value()

Disassembly:
	0x024A8238 MOV X8, X20
	0x024A823C LDR W9, [X9 + 0x28]
	0x024A8240 LDR X0, [X1]
	0x024A8244 TBNZ X9, 0x1F, 0x24A824C
	0x024A8248 LDR X8, [X20]
	0x024A824C STUR X8, [X29 - 0x18]
	0x024A8250 LDR X8, [X1 + 0x10]
	0x024A8254 SUB X3, X29, 0x18

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {10}
	004 Move X8, [X1+32]
	005 Move X8, [X8+192]
	006 Move X1, [X8+24]
	007 Move X30, [X31+16]
	008 Call BaseField`1<Object>.get_value, X0
	009 Return X0
	010 Call 0x1C17F20

Method: System.Void set_value(T value)

Disassembly:
	0x024A8258 SUB X4, X29, 0xC
	0x024A825C MOV X2, X24
	0x024A8260 BLR X8
	0x024A8264 LDUR W26, [X29 - 0xC]
	0x024A8268 CBZ X19, 0x24A8328
	0x024A826C LDR X8, [X23 + 0x20]
	0x024A8270 MOVZ W1, 0x4
	0x024A8274 LDR X8, [X8 + 0xC0]
	0x024A8278 LDR X8, [X8 + 0x50]
	0x024A827C LDR X24, [X8 + 0x80]
	0x024A8280 MOV X0, X24
	0x024A8284 BL 0x1C16D14
	0x024A8288 MOV X0, X19
	0x024A828C MOV X1, X24
	0x024A8290 BL 0x1C16D18
	0x024A8294 STR W26, [X0]
	0x024A8298 LDR X23, [X23 + 0x20]
	0x024A829C MOV X0, X20
	0x024A82A0 MOV X2, X22
	0x024A82A4 LDR X8, [X23 + 0xC0]
	0x024A82A8 LDR X8, [X8 + 0x20]
	0x024A82AC LDR W8, [X8 + 0x28]
	0x024A82B0 CMP W8, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+1088]
	007 Move X21, X2
	008 Move X20, X1
	009 Compare X0, 0
	010 JumpIfEqual {16}
	011 Move X8, [X21+32]
	012 Move X1, X20
	013 Move X8, [X8+192]
	014 Move X2, [X8+72]
	015 Call List`1<Object>.IndexOf, X0, X1
	016 Move TEMP, 0
	017 Not TEMP
	018 Move W0, TEMP
	019 Move [X19+1136], W0
	020 Move X8, [X21+32]
	021 Move X0, X19
	022 Move X1, X20
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X8, [X8+192]
	026 Move X2, [X8+88]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call BaseField`1<Object>.set_value, X0, X1
	030 Return 

Method: System.Void SetValueWithoutNotify(T newValue)

Disassembly:
	0x024A82B4 SUB X8, X29, 0x20
	0x024A82B8 CSEL X1, X21, X8, LT
	0x024A82BC BL 0x3EB1AC0
	0x024A82C0 LDR X8, [X23 + 0xC0]
	0x024A82C4 LDR X9, [X8 + 0x20]
	0x024A82C8 LDR X1, [X8 + 0x60]
	0x024A82CC LDR W8, [X9 + 0x28]
	0x024A82D0 LDR X0, [X1]
	0x024A82D4 TBNZ X8, 0x1F, 0x24A82DC
	0x024A82D8 LDR X20, [X20]
	0x024A82DC STUR X20, [X29 - 0x18]
	0x024A82E0 LDR X8, [X1 + 0x10]
	0x024A82E4 SUB X3, X29, 0x18
	0x024A82E8 MOV X2, X19
	0x024A82EC MOV X4, X20
	0x024A82F0 BLR X8
	0x024A82F4 LDR X8, [X25 + 0x28]
	0x024A82F8 LDUR X9, [X29 - 0x8]
	0x024A82FC CMP X8, X9
	0x024A8300 B.NE 0x24A832C
	0x024A8304 ADD X31, X29, 0x0
	0x024A8308 LDP X20, X19, [X31 + 0x40]
	0x024A830C LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+1088]
	007 Move X21, X2
	008 Move X20, X1
	009 Compare X0, 0
	010 JumpIfEqual {16}
	011 Move X8, [X21+32]
	012 Move X1, X20
	013 Move X8, [X8+192]
	014 Move X2, [X8+72]
	015 Call List`1<Object>.IndexOf, X0, X1
	016 Move TEMP, 0
	017 Not TEMP
	018 Move W0, TEMP
	019 Move [X19+1136], W0
	020 Move X8, [X21+32]
	021 Move X0, X19
	022 Move X1, X20
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X8, [X8+192]
	026 Move X2, [X8+96]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x28B8858, X0, X1
	030 Return 

Method: System.Void set_index(System.Int32 value)

Disassembly:
	0x024A8310 LDP X24, X23, [X31 + 0x20]
	0x024A8314 LDP X26, X25, [X31 + 0x10]
	0x024A8318 LDP X29, X30, [X31], #0x50
	0x024A831C RET
	0x024A8320 MOVN W26, 0x0
	0x024A8324 CBNZ X19, 0x24A826C
	0x024A8328 BL 0x1C16F20
	0x024A832C BL 0x3EB1B20
	0x024A8330 STP X29, X30, [X31 - 0x50]!
	0x024A8334 STP X26, X25, [X31 + 0x10]
	0x024A8338 STP X24, X23, [X31 + 0x20]
	0x024A833C STP X22, X21, [X31 + 0x30]
	0x024A8340 STP X20, X19, [X31 + 0x40]
	0x024A8344 ADD X29, X31, 0x0
	0x024A8348 SUB X31, X31, 0x20
	0x024A834C MRS X26, 0xC000
	0x024A8350 LDR X8, [X26 + 0x28]
	0x024A8354 MOV X21, X2
	0x024A8358 MOV W24, W1
	0x024A835C MOV X19, X0
	0x024A8360 STUR X8, [X29 - 0x8]
	0x024A8364 LDR X8, [X2 + 0x20]
	0x024A8368 LDR X25, [X8 + 0xC0]
	0x024A836C LDR X8, [X25 + 0x20]
	0x024A8370 LDR W22, [X8 + 0xFC]
	0x024A8374 ADD X8, X31, 0x0
	0x024A8378 ADD X9, X22, 0xF
	0x024A837C AND X9, X9, 0x1FFFFFFFF
	0x024A8380 SUB X20, X8, X9
	0x024A8384 ADD X31, X20, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+1136]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X30, [X31+16]
	006 Move X19, [X31+24]
	007 Return 
	008 Move X19, X0
	009 Move [X0+1136], W1
	010 Move TEMP, X1
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {26}
	014 Move X0, [X19+1088]
	015 Compare X0, 0
	016 JumpIfEqual {34}
	017 Move W8, [X0+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X8, [X2+32]
	020 Move X8, [X8+192]
	021 Move X2, [X8+112]
	022 Call List`1<Object>.get_Item, X0, X1
	023 Move X8, [X19]
	024 Move X1, X0
	025 Move X0, X19
	026 Move X8, [X19]
	027 Move X0, X19
	028 Move X1, X31
	029 Move X3, [X8+2040]
	030 Move X2, [X8+2048]
	031 Move X30, [X31+16]
	032 Move X19, [X31+24]
	033 CallNoReturn X3
	034 Call 0x1C17F20

Method: System.Void .ctor(System.String label = null)

Disassembly:
	0x024A8388 ADD X8, X31, 0x0
	0x024A838C SUB X23, X8, X9
	0x024A8390 ADD X31, X23, 0x0
	0x024A8394 MOV X0, X23
	0x024A8398 MOV W1, W31
	0x024A839C MOV X2, X22
	0x024A83A0 BL 0x3EB1B10
	0x024A83A4 LDR X8, [X25 + 0x50]
	0x024A83A8 MOV X0, X19
	0x024A83AC LDR X1, [X8 + 0x80]
	0x024A83B0 BL 0x1C16D18
	0x024A83B4 LDR W8, [X0]
	0x024A83B8 CMP W8, W24
	0x024A83BC B.EQ 0x24A8534
	0x024A83C0 LDR X8, [X21 + 0x20]
	0x024A83C4 MOVZ W1, 0x4
	0x024A83C8 LDR X8, [X8 + 0xC0]
	0x024A83CC LDR X8, [X8 + 0x50]
	0x024A83D0 LDR X25, [X8 + 0x80]
	0x024A83D4 MOV X0, X25
	0x024A83D8 BL 0x1C16D14
	0x024A83DC MOV X0, X19
	0x024A83E0 MOV X1, X25
	0x024A83E4 BL 0x1C16D18
	0x024A83E8 STR W24, [X0]
	0x024A83EC LDR X8, [X21 + 0x20]
	0x024A83F0 MOV X0, X19
	0x024A83F4 LDR X8, [X8 + 0xC0]
	0x024A83F8 LDR X8, [X8 + 0x50]
	0x024A83FC LDR X1, [X8 + 0x80]
	0x024A8400 BL 0x1C16D18
	0x024A8404 LDR W8, [X0]
	0x024A8408 TBNZ X8, 0x1F, 0x24A84D8
	0x024A840C LDR X8, [X21 + 0x20]
	0x024A8410 MOV X0, X19
	0x024A8414 LDR X8, [X8 + 0xC0]
	0x024A8418 LDR X8, [X8 + 0x50]
	0x024A841C LDR X1, [X8 + 0x80]
	0x024A8420 BL 0x1C16D18
	0x024A8424 LDR X8, [X21 + 0x20]
	0x024A8428 LDR W24, [X0]
	0x024A842C MOV X0, X19
	0x024A8430 LDR X8, [X8 + 0xC0]
	0x024A8434 LDR X8, [X8]
	0x024A8438 LDR X1, [X8 + 0x80]
	0x024A843C BL 0x1C16D18
	0x024A8440 LDR X0, [X0]
	0x024A8444 CBZ X0, 0x24A84D4
	0x024A8448 LDR X8, [X21 + 0x20]
	0x024A844C LDR X8, [X8 + 0xC0]
	0x024A8450 LDR X1, [X8 + 0x68]
	0x024A8454 LDR X8, [X1]
	0x024A8458 BLR X8
	0x024A845C CMP W24, W0
	0x024A8460 B.GE 0x24A84D8
	0x024A8464 LDR X8, [X21 + 0x20]
	0x024A8468 MOV X0, X19
	0x024A846C LDR X8, [X8 + 0xC0]
	0x024A8470 LDR X8, [X8]
	0x024A8474 LDR X1, [X8 + 0x80]
	0x024A8478 BL 0x1C16D18
	0x024A847C LDR X8, [X21 + 0x20]
	0x024A8480 LDR X22, [X0]
	0x024A8484 MOV X0, X19
	0x024A8488 LDR X8, [X8 + 0xC0]
	0x024A848C LDR X8, [X8 + 0x50]
	0x024A8490 LDR X1, [X8 + 0x80]
	0x024A8494 BL 0x1C16D18
	0x024A8498 CBZ X22, 0x24A84D4
	0x024A849C LDR X8, [X21 + 0x20]
	0x024A84A0 SUB X9, X29, 0xC
	0x024A84A4 SUB X3, X29, 0x20
	0x024A84A8 MOV X2, X22
	0x024A84AC LDR X8, [X8 + 0xC0]
	0x024A84B0 MOV X4, X20
	0x024A84B4 LDR X1, [X8 + 0x70]
	0x024A84B8 LDR W8, [X0]
	0x024A84BC LDR X0, [X1]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W8, TEMP
	008 Move [X0+1136], W8
	009 Move X8, [X2+32]
	010 Move X20, X0
	011 Move X19, X2
	012 Move X21, X1
	013 Move X8, [X8+192]
	014 Move X0, [X8+128]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X8, [X19+32]
	026 Move X0, X20
	027 Move X1, X21
	028 Move X8, [X8+192]
	029 Move X2, [X8+120]
	030 Call 0x28B8944, X0, X1
	031 Move X8, [X19+32]
	032 Move X8, [X8+192]
	033 Move X0, [X8+144]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X8, [X19+32]
	045 Move X8, [X8+192]
	046 Move X0, [X8+144]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+184]
	054 Move X0, X20
	055 Move X2, X31
	056 Move X1, [X8]
	057 Call VisualElement.AddToClassList, X0, X1
	058 Move X8, [X19+32]
	059 Move X21, [X20+1024]
	060 Move X8, [X8+192]
	061 Move X0, [X8+144]
	062 Move W8, [X0+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {68}
	067 Call 0x1C5D684
	068 Compare X21, 0
	069 JumpIfEqual {104}
	070 Move X8, [X0+184]
	071 Move X0, X21
	072 Move X2, X31
	073 Move X1, [X8+8]
	074 Call VisualElement.AddToClassList, X0, X1
	075 Move X8, [X19+32]
	076 Move X0, X20
	077 Move X8, [X8+192]
	078 Move X1, [X8+160]
	079 Call BaseField`1<Object>.get_visualInput, X0
	080 Move X8, [X19+32]
	081 Move X19, X0
	082 Move X8, [X8+192]
	083 Move X8, [X8+144]
	084 Move W9, [X8+309]
	085 Move TEMP, X9
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {92}
	089 Move X0, X8
	090 Call 0x1C5D684
	091 Move X8, X0
	092 Compare X19, 0
	093 JumpIfEqual {104}
	094 Move X8, [X8+184]
	095 Move X0, X19
	096 Move X20, [X31+16]
	097 Move X19, [X31+24]
	098 Move X2, X31
	099 Move X1, [X8+16]
	100 Move X30, [X31+32]
	101 Move X21, [X31+40]
	102 Call VisualElement.AddToClassList, X0, X1
	103 Return 
	104 Call 0x1C17F20

Method: System.Void AddMenuItems(UnityEngine.UIElements.IGenericMenu menu)

Disassembly:
	0x024A84C0 STUR W8, [X29 - 0xC]
	0x024A84C4 STP X9, X20, [X29 - 0x20]
	0x024A84C8 LDR X8, [X1 + 0x10]
	0x024A84CC BLR X8
	0x024A84D0 CBNZ X19, 0x24A84FC
	0x024A84D4 BL 0x1C16F20
	0x024A84D8 MOV X0, X23
	0x024A84DC MOV W1, W31
	0x024A84E0 MOV X2, X22
	0x024A84E4 BL 0x3EB1B10
	0x024A84E8 MOV X0, X20
	0x024A84EC MOV X1, X23
	0x024A84F0 MOV X2, X22
	0x024A84F4 BL 0x3EB1AC0
	0x024A84F8 CBZ X19, 0x24A84D4
	0x024A84FC LDR X8, [X21 + 0x20]
	0x024A8500 LDR X8, [X8 + 0xC0]
	0x024A8504 LDR X8, [X8 + 0x20]
	0x024A8508 LDR W8, [X8 + 0x28]
	0x024A850C TBNZ X8, 0x1F, 0x24A8514
	0x024A8510 LDR X20, [X20]
	0x024A8514 LDR X8, [X19]
	0x024A8518 STUR X20, [X29 - 0x20]
	0x024A851C SUB X3, X29, 0x20
	0x024A8520 MOV X2, X19
	0x024A8524 LDR X1, [X8 + 0x800]
	0x024A8528 MOV X4, X20
	0x024A852C LDP X0, X8, [X1 + 0x8]
	0x024A8530 BLR X8
	0x024A8534 LDR X8, [X26 + 0x28]
	0x024A8538 LDUR X9, [X29 - 0x8]
	0x024A853C CMP X8, X9
	0x024A8540 B.NE 0x24A8560
	0x024A8544 ADD X31, X29, 0x0
	0x024A8548 LDP X20, X19, [X31 + 0x40]
	0x024A854C LDP X22, X21, [X31 + 0x30]
	0x024A8550 LDP X24, X23, [X31 + 0x20]
	0x024A8554 LDP X26, X25, [X31 + 0x10]
	0x024A8558 LDP X29, X30, [X31], #0x50
	0x024A855C RET
	0x024A8560 BL 0x3EB1B20
	0x024A8564 STR X30, [X31 - 0x30]!
	0x024A8568 STP X22, X21, [X31 + 0x10]
	0x024A856C STP X20, X19, [X31 + 0x20]
	0x024A8570 LDR X8, [X2 + 0x20]
	0x024A8574 MOV X21, X1
	0x024A8578 MOV X20, X0
	0x024A857C MOVZ W1, 0x4
	0x024A8580 LDR X8, [X8 + 0xC0]
	0x024A8584 MOV X19, X2
	0x024A8588 LDR X8, [X8 + 0x50]
	0x024A858C LDR X22, [X8 + 0x80]
	0x024A8590 MOV X0, X22
	0x024A8594 BL 0x1C16D14
	0x024A8598 MOV X0, X20
	0x024A859C MOV X1, X22
	0x024A85A0 BL 0x1C16D18
	0x024A85A4 MOVN W8, 0x0
	0x024A85A8 STR W8, [X0]
	0x024A85AC LDR X8, [X19 + 0x20]
	0x024A85B0 LDR X8, [X8 + 0xC0]
	0x024A85B4 LDR X0, [X8 + 0x80]
	0x024A85B8 LDRB W8, [X0 + 0x135]
	0x024A85BC TBNZ X8, 0x0, 0x24A85C4
	0x024A85C0 BL 0x1C5C684
	0x024A85C4 LDR W8, [X0 + 0xE0]
	0x024A85C8 CBNZ W8, 0x24A85D0
	0x024A85CC BL 0x1C16DFC
	0x024A85D0 LDR X8, [X19 + 0x20]
	0x024A85D4 MOV X0, X20
	0x024A85D8 MOV X1, X21
	0x024A85DC LDR X8, [X8 + 0xC0]
	0x024A85E0 LDR X2, [X8 + 0x78]
	0x024A85E4 LDR X8, [X2]
	0x024A85E8 BLR X8
	0x024A85EC LDR X8, [X19 + 0x20]
	0x024A85F0 LDR X8, [X8 + 0xC0]
	0x024A85F4 LDR X0, [X8 + 0x90]
	0x024A85F8 LDRB W8, [X0 + 0x135]
	0x024A85FC TBNZ X8, 0x0, 0x24A8604
	0x024A8600 BL 0x1C5C684
	0x024A8604 LDR W8, [X0 + 0xE0]
	0x024A8608 CBNZ W8, 0x24A8610
	0x024A860C BL 0x1C16DFC
	0x024A8610 LDR X8, [X19 + 0x20]
	0x024A8614 LDR X8, [X8 + 0xC0]
	0x024A8618 LDR X0, [X8 + 0x90]
	0x024A861C LDRB W8, [X0 + 0x135]
	0x024A8620 TBNZ X8, 0x0, 0x24A8628
	0x024A8624 BL 0x1C5C684
	0x024A8628 CBZ X20, 0x24A86F4
	0x024A862C LDR X8, [X0 + 0xB8]
	0x024A8630 MOV X0, X20
	0x024A8634 MOV X2, X31
	0x024A8638 LDR X1, [X8]
	0x024A863C BL 0x3DF1C70
	0x024A8640 LDR X8, [X19 + 0x20]
	0x024A8644 MOV X0, X20
	0x024A8648 LDR X8, [X8 + 0xC0]
	0x024A864C LDR X1, [X8 + 0x98]
	0x024A8650 LDR X8, [X1]
	0x024A8654 BLR X8
	0x024A8658 LDR X8, [X19 + 0x20]
	0x024A865C MOV X21, X0
	0x024A8660 LDR X8, [X8 + 0xC0]
	0x024A8664 LDR X8, [X8 + 0x90]
	0x024A8668 LDRB W9, [X8 + 0x135]
	0x024A866C TBNZ X9, 0x0, 0x24A867C
	0x024A8670 MOV X0, X8
	0x024A8674 BL 0x1C5C684
	0x024A8678 MOV X8, X0
	0x024A867C CBZ X21, 0x24A86F4
	0x024A8680 LDR X8, [X8 + 0xB8]
	0x024A8684 MOV X0, X21
	0x024A8688 MOV X2, X31
	0x024A868C LDR X1, [X8 + 0x8]
	0x024A8690 BL 0x3DF1C70
	0x024A8694 LDR X8, [X19 + 0x20]
	0x024A8698 MOV X0, X20
	0x024A869C LDR X8, [X8 + 0xC0]
	0x024A86A0 LDR X1, [X8 + 0xA0]
	0x024A86A4 LDR X8, [X1]
	0x024A86A8 BLR X8
	0x024A86AC LDR X8, [X19 + 0x20]
	0x024A86B0 MOV X19, X0
	0x024A86B4 LDR X8, [X8 + 0xC0]
	0x024A86B8 LDR X8, [X8 + 0x90]
	0x024A86BC LDRB W9, [X8 + 0x135]
	0x024A86C0 TBNZ X9, 0x0, 0x24A86D0
	0x024A86C4 MOV X0, X8
	0x024A86C8 BL 0x1C5C684
	0x024A86CC MOV X8, X0
	0x024A86D0 CBZ X19, 0x24A86F4
	0x024A86D4 LDR X8, [X8 + 0xB8]
	0x024A86D8 MOV X0, X19
	0x024A86DC LDP X20, X19, [X31 + 0x20]
	0x024A86E0 LDP X22, X21, [X31 + 0x10]
	0x024A86E4 LDR X1, [X8 + 0x10]
	0x024A86E8 MOV X2, X31
	0x024A86EC LDR X30, [X31], #0x30
	0x024A86F0 B 0x3DF1C70
	0x024A86F4 BL 0x1C16F20
	0x024A86F8 STP X29, X30, [X31 - 0x60]!
	0x024A86FC STP X28, X27, [X31 + 0x10]
	0x024A8700 STP X26, X25, [X31 + 0x20]
	0x024A8704 STP X24, X23, [X31 + 0x30]
	0x024A8708 STP X22, X21, [X31 + 0x40]
	0x024A870C STP X20, X19, [X31 + 0x50]
	0x024A8710 ADD X29, X31, 0x0
	0x024A8714 SUB X31, X31, 0x40
	0x024A8718 STUR X1, [X29 - 0x28]
	0x024A871C MRS X8, 0xC000
	0x024A8720 STUR X8, [X29 - 0x38]
	0x024A8724 LDR X8, [X8 + 0x28]
	0x024A8728 ADRP X19, 0x1F31000
	0x024A872C MOV X27, X2
	0x024A8730 MOV X22, X0
	0x024A8734 STUR X8, [X29 - 0x8]
	0x024A8738 LDRB W8, [X19 + 0xBCD]
	0x024A873C TBNZ X8, 0x0, 0x24A8760
	0x024A8740 ADRP X0, 0x1C4C000
	0x024A8744 LDR X0, [X0 + 0xE70]
	0x024A8748 BL 0x1C16CF4
	0x024A874C ADRP X0, 0x1C74000
	0x024A8750 LDR X0, [X0 + 0xEA0]
	0x024A8754 BL 0x1C16CF4
	0x024A8758 MOVZ W8, 0x1
	0x024A875C STRB W8, [X19 + 0xBCD]
	0x024A8760 MOV X21, X27
	0x024A8764 LDR X20, [X21 + 0x20]!
	0x024A8768 LDR X8, [X20 + 0xC0]
	0x024A876C LDR X0, [X8 + 0xB0]
	0x024A8770 LDRB W9, [X0 + 0x135]
	0x024A8774 LDR W28, [X0 + 0xFC]
	0x024A8778 TBNZ X9, 0x0, 0x24A8790
	0x024A877C BL 0x1C5C684
	0x024A8780 LDR X20, [X21]
	0x024A8784 LDR W9, [X0 + 0xFC]
	0x024A8788 LDR X8, [X20 + 0xC0]
	0x024A878C B 0x24A8794
	0x024A8790 MOV W9, W28
	0x024A8794 ADD W9, W9, 0x10
	0x024A8798 ADD X9, X9, 0xF
	0x024A879C ADD X10, X31, 0x0
	0x024A87A0 AND X9, X9, 0x1FFFFFFFF
	0x024A87A4 SUB X9, X10, X9
	0x024A87A8 STUR X9, [X29 - 0x40]
	0x024A87AC ADD X31, X9, 0x0
	0x024A87B0 LDR X8, [X8 + 0x20]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+72], X27
	004 Move [X31+80], X26
	005 Move [X31+88], X25
	006 Move [X31+96], X24
	007 Move [X31+104], X23
	008 Move [X31+112], X22
	009 Move [X31+120], X21
	010 Move [X31+128], X20
	011 Move [X31+136], X19
	012 Move X22, 0x1F32000
	013 Move W8, [X22+3017]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x1C4D000
	022 Move X0, [X0+3696]
	023 Call 0x1C17CF4
	024 Move X0, 0x1C75000
	025 Move X0, [X0+3744]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+3017], W8
	029 Move [X31+32], X31
	030 Move [X31+40], X31
	031 Move [X31+48], X31
	032 Compare X20, 0
	033 JumpIfEqual {169}
	034 Move X0, [X21+1088]
	035 Compare X0, 0
	036 JumpIfEqual {155}
	037 Move X8, [X19+32]
	038 Move X25, 0x1C4D000
	039 Move X26, 0x1C75000
	040 Move X8, [X8+192]
	041 Move X1, [X8+168]
	042 Move X25, [X25+3696]
	043 Move X26, [X26+3744]
	044 Add X8, X31, 8
	045 Call List`1<Object>.GetEnumerator, X0
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 Move X8, [X31+24]
	048 Move [X31+2], V0
	049 Move [X31+48], X8
	050 Move X8, [X19+32]
	051 Move X8, [X8+192]
	052 Move X1, [X8+272]
	053 Add X0, X31, 32
	054 Call Enumerator<Object>.MoveNext, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {147}
	059 Move X8, [X19+32]
	060 Move X8, [X8+192]
	061 Move X0, [X8+184]
	062 Move W8, [X0+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {68}
	067 Call 0x1C5D684
	068 Call 0x1C17F10
	069 Move X8, [X19+32]
	070 Move X22, X0
	071 Move X8, [X8+192]
	072 Move X1, [X8+192]
	073 Call 0x2375A80, X0
	074 Compare X22, 0
	075 JumpIfEqual {167}
	076 Move [X22+24], X21
	077 Move X8, [X19+32]
	078 Move X9, [X31+48]
	079 Move X8, [X8+192]
	080 Move [X22+16], X9
	081 Move X0, [X8+216]
	082 Call 0x211C0E8
	083 Move X8, [X21]
	084 Move X24, [X22+16]
	085 Move X23, X0
	086 Move X1, [X8+2032]
	087 Move X9, [X8+2024]
	088 Move X0, X21
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Compare X23, 0
	091 JumpIfEqual {168}
	092 Move X8, [X23]
	093 Move X2, X0
	094 Move X9, [X8+440]
	095 Move X3, [X8+448]
	096 Move X0, X23
	097 Move X1, X24
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {105}
	103 Move W8, [X21+1032]
	104 Xor W27, W8, 1
	105 Move W27, W31
	106 Move X8, [X21]
	107 Move X1, [X22+16]
	108 Move X9, [X8+2216]
	109 Move X2, [X8+2224]
	110 Move X0, X21
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Move X23, X0
	113 Move X0, [X25]
	114 Call 0x1C17F10
	115 Move X8, [X19+32]
	116 Move X24, X0
	117 Move X8, [X8+192]
	118 Move X2, [X8+264]
	119 Move X1, X22
	120 Move X3, X31
	121 Call Action..ctor, X0, X1, X2
	122 Move X8, [X20]
	123 Move X1, [X26]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Compare X9, 0
	126 JumpIfEqual {133}
	127 Move X10, [X8+176]
	128 Add X10, X10, 8
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Subtract X9, X9, 1
	132 Add X10, X10, 16
	133 Move X0, X20
	134 Move W2, W31
	135 Call 0x1C5D788
	136 NotImplemented "Instruction LDRSW not yet implemented."
	137 Add X8, X8, X9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X4, [X0+8]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 NotImplemented "Instruction CSET not yet implemented."
	143 Move X0, X20
	144 Move X1, X23
	145 Move X3, X24
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X21, X31
	148 Move X8, [X19+32]
	149 Add X0, X31, 32
	150 Move X8, [X8+192]
	151 Move X1, [X8+280]
	152 Call Enumerator<Object>.Dispose, X0
	153 Compare X21, 0
	154 JumpIfNotEqual {184}
	155 Move X20, [X31+128]
	156 Move X19, [X31+136]
	157 Move X22, [X31+112]
	158 Move X21, [X31+120]
	159 Move X24, [X31+96]
	160 Move X23, [X31+104]
	161 Move X26, [X31+80]
	162 Move X25, [X31+88]
	163 Move X30, [X31+64]
	164 Move X27, [X31+72]
	165 Add X31, X31, 144
	166 Return 
	167 Call 0x1C17F20
	168 Call 0x1C17F20
	169 Move X0, 0x1C51000
	170 Move X0, [X0+1320]
	171 Call 0x1C17D08
	172 Call 0x1C17F10
	173 Move X20, X0
	174 Move X0, 0x1C75000
	175 Move X0, [X0+3752]
	176 Call 0x1C17D08
	177 Move X1, X0
	178 Move X0, X20
	179 Move X2, X31
	180 Call ArgumentNullException..ctor, X0, X1
	181 Move X0, X20
	182 Move X1, X19
	183 Call 0x1C17DEC
	184 Move X0, X21
	185 Call 0x1C17F18
	186 Move X20, X0
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X0, X20
	189 Call 0x3EB2AD0
	190 Move X21, [X0]
	191 Call 0x3EB2AE0
	192 Move X21, X31
	193 Move X20, X0
	194 Move X8, [X19+32]
	195 Move X8, [X8+192]
	196 Move X1, [X8+280]
	197 Add X0, X31, 32
	198 Call Enumerator<Object>.Dispose, X0
	199 Compare X21, 0
	200 JumpIfNotEqual {203}
	201 Move X0, X20
	202 Call 0x1D2D690
	203 Move X0, X21
	204 Call 0x1C17F18
	205 Call 0x1991590

Method: System.Void ChangeValueFromMenu(T menuItem)

Disassembly:
	0x024A87B4 LDR W23, [X8 + 0xFC]
	0x024A87B8 ADD X8, X31, 0x0
	0x024A87BC ADD X9, X23, 0xF
	0x024A87C0 AND X9, X9, 0x1FFFFFFFF
	0x024A87C4 SUB X24, X8, X9
	0x024A87C8 ADD X31, X24, 0x0
	0x024A87CC ADD X8, X31, 0x0
	0x024A87D0 SUB X25, X8, X9

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X3, [X8+2040]
	006 Move X2, [X8+2048]
	007 Move X30, [X31+16]
	008 CallNoReturn X3
	009 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x024A87D4 ADD X31, X25, 0x0
	0x024A87D8 ADD X8, X31, 0x0
	0x024A87DC SUB X26, X8, X9
	0x024A87E0 ADD X31, X26, 0x0
	0x024A87E4 ADD X9, X28, 0xF
	0x024A87E8 ADD X8, X31, 0x0
	0x024A87EC AND X9, X9, 0x1FFFFFFFF
	0x024A87F0 SUB X19, X8, X9
	0x024A87F4 ADD X31, X19, 0x0
	0x024A87F8 ADD X8, X31, 0x0
	0x024A87FC SUB X0, X8, X9
	0x024A8800 ADD X31, X0, 0x0
	0x024A8804 MOV W1, W31
	0x024A8808 MOV X2, X28
	0x024A880C STUR X0, [X29 - 0x30]
	0x024A8810 BL 0x3EB1B10
	0x024A8814 LDUR X8, [X29 - 0x28]
	0x024A8818 CBZ X8, 0x24A8BBC
	0x024A881C LDR X8, [X20 + 0xC0]
	0x024A8820 MOV X0, X22
	0x024A8824 LDR X8, [X8]
	0x024A8828 LDR X1, [X8 + 0x80]
	0x024A882C BL 0x1C16D18
	0x024A8830 LDR X8, [X0]
	0x024A8834 CBZ X8, 0x24A8B7C
	0x024A8838 LDR X8, [X21]
	0x024A883C MOV X0, X22
	0x024A8840 LDR X8, [X8 + 0xC0]
	0x024A8844 LDR X8, [X8]
	0x024A8848 LDR X1, [X8 + 0x80]
	0x024A884C BL 0x1C16D18
	0x024A8850 LDR X2, [X0]
	0x024A8854 CBZ X2, 0x24A8BF8
	0x024A8858 LDR X8, [X21]
	0x024A885C SUB X3, X29, 0x20
	0x024A8860 MOV X4, X19
	0x024A8864 LDR X8, [X8 + 0xC0]
	0x024A8868 LDR X1, [X8 + 0xA8]
	0x024A886C LDR X0, [X1]
	0x024A8870 STUR X19, [X29 - 0x20]
	0x024A8874 LDR X8, [X1 + 0x10]
	0x024A8878 BLR X8
	0x024A887C LDUR X0, [X29 - 0x30]
	0x024A8880 MOV X1, X19
	0x024A8884 MOV X2, X28
	0x024A8888 BL 0x3EB1AC0
	0x024A888C LDR X8, [X21]
	0x024A8890 LDR X8, [X8 + 0xC0]
	0x024A8894 LDR X1, [X8 + 0x110]
	0x024A8898 LDR X8, [X1]
	0x024A889C LDUR X0, [X29 - 0x30]
	0x024A88A0 BLR X8
	0x024A88A4 TBZ X0, 0x0, 0x24A8B3C
	0x024A88A8 LDR X8, [X21]
	0x024A88AC LDR X8, [X8 + 0xC0]
	0x024A88B0 LDR X0, [X8 + 0xB8]
	0x024A88B4 LDRB W8, [X0 + 0x135]
	0x024A88B8 TBNZ X8, 0x0, 0x24A88C0
	0x024A88BC BL 0x1C5C684
	0x024A88C0 BL 0x1C16F10
	0x024A88C4 LDR X8, [X21]
	0x024A88C8 MOV X27, X0
	0x024A88CC LDR X8, [X8 + 0xC0]
	0x024A88D0 LDR X1, [X8 + 0xC0]
	0x024A88D4 LDR X8, [X1]
	0x024A88D8 BLR X8
	0x024A88DC CBZ X27, 0x24A8BB4
	0x024A88E0 LDR X8, [X21]
	0x024A88E4 LDR X8, [X8 + 0xC0]
	0x024A88E8 LDR X8, [X8 + 0xB8]
	0x024A88EC LDR X8, [X8 + 0x80]
	0x024A88F0 ADD X19, X8, 0x20
	0x024A88F4 MOVZ W1, 0x8
	0x024A88F8 MOV X0, X19
	0x024A88FC BL 0x1C16D14
	0x024A8900 MOV X0, X27
	0x024A8904 MOV X1, X19
	0x024A8908 BL 0x1C16D18
	0x024A890C STR X22, [X0]
	0x024A8910 LDR X8, [X21]
	0x024A8914 LDR X8, [X8 + 0xC0]
	0x024A8918 LDR X1, [X8 + 0xC8]
	0x024A891C LDR X0, [X1]
	0x024A8920 STUR X24, [X29 - 0x20]
	0x024A8924 LDR X8, [X1 + 0x10]
	0x024A8928 LDUR X2, [X29 - 0x30]
	0x024A892C SUB X3, X29, 0x20
	0x024A8930 MOV X4, X24
	0x024A8934 BLR X8
	0x024A8938 LDR X8, [X21]
	0x024A893C LDR X8, [X8 + 0xC0]
	0x024A8940 LDR X8, [X8 + 0xB8]
	0x024A8944 LDR X1, [X8 + 0x80]
	0x024A8948 MOV X0, X27
	0x024A894C MOV X2, X24
	0x024A8950 MOV W3, W23
	0x024A8954 BL 0x1C16D1C
	0x024A8958 LDR X8, [X21]
	0x024A895C LDR X8, [X8 + 0xC0]
	0x024A8960 LDR X0, [X8 + 0xD8]
	0x024A8964 LDR X8, [X0]
	0x024A8968 BLR X8
	0x024A896C LDR X8, [X21]
	0x024A8970 MOV X19, X0
	0x024A8974 LDR X8, [X8 + 0xC0]
	0x024A8978 LDR X8, [X8 + 0xB8]
	0x024A897C LDR X1, [X8 + 0x80]
	0x024A8980 MOV X0, X27
	0x024A8984 BL 0x1C16D18
	0x024A8988 MOV X1, X0
	0x024A898C MOV X0, X25
	0x024A8990 MOV X2, X23
	0x024A8994 BL 0x3EB1AC0
	0x024A8998 CBZ X22, 0x24A8BB8
	0x024A899C LDR X8, [X22]
	0x024A89A0 STUR X26, [X29 - 0x20]
	0x024A89A4 LDR X1, [X8 + 0x7F0]
	0x024A89A8 LDP X0, X8, [X1 + 0x8]
	0x024A89AC SUB X3, X29, 0x20
	0x024A89B0 MOV X2, X22
	0x024A89B4 MOV X4, X26
	0x024A89B8 BLR X8
	0x024A89BC CBZ X19, 0x24A8BB0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1F32000
	006 Move X20, 0x1C75000
	007 Move W8, [X21+3018]
	008 Move X20, [X20+3760]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x1C75000
	015 Move X0, [X0+3768]
	016 Call 0x1C17CF4
	017 Move X0, 0x1C75000
	018 Move X0, [X0+3776]
	019 Call 0x1C17CF4
	020 Move X0, 0x1C75000
	021 Move X0, [X0+3760]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3018], W8
	025 Move X0, [X19+32]
	026 Move X20, [X20]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Move X8, [X0+192]
	034 Move X0, [X8+144]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move X8, [X0+184]
	042 Move [X8], X20
	043 Move X0, [X19+32]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+192]
	051 Move X0, [X8+144]
	052 Move W8, [X0+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {58}
	057 Call 0x1C5D684
	058 Move X0, [X19+32]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+192]
	066 Move X20, 0x1C75000
	067 Move X0, [X8+144]
	068 Move W8, [X0+309]
	069 Move X20, [X20+3768]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {75}
	074 Call 0x1C5D684
	075 Move X8, [X0+184]
	076 Move X1, [X20]
	077 Move X2, X31
	078 Move X0, [X8]
	079 Call String.Concat, X0, X1
	080 Move X8, [X19+32]
	081 Move X20, X0
	082 Move W9, [X8+309]
	083 Move TEMP, X9
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {90}
	087 Move X0, X8
	088 Call 0x1C5D684
	089 Move X8, X0
	090 Move X8, [X8+192]
	091 Move X0, [X8+144]
	092 Move W8, [X0+309]
	093 Move TEMP, X8
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {98}
	097 Call 0x1C5D684
	098 Move X8, [X0+184]
	099 Move [X8+8], X20
	100 Move X0, [X19+32]
	101 Move W8, [X0+309]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {107}
	106 Call 0x1C5D684
	107 Move X8, [X0+192]
	108 Move X0, [X8+144]
	109 Move W8, [X0+309]
	110 Move TEMP, X8
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {115}
	114 Call 0x1C5D684
	115 Move X0, [X19+32]
	116 Move W8, [X0+309]
	117 Move TEMP, X8
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {122}
	121 Call 0x1C5D684
	122 Move X8, [X0+192]
	123 Move X20, 0x1C75000
	124 Move X0, [X8+144]
	125 Move W8, [X0+309]
	126 Move X20, [X20+3776]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {132}
	131 Call 0x1C5D684
	132 Move X8, [X0+184]
	133 Move X1, [X20]
	134 Move X2, X31
	135 Move X0, [X8]
	136 Call String.Concat, X0, X1
	137 Move X8, [X19+32]
	138 Move X20, X0
	139 Move W9, [X8+309]
	140 Move TEMP, X9
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {147}
	144 Move X0, X8
	145 Call 0x1C5D684
	146 Move X8, X0
	147 Move X8, [X8+192]
	148 Move X0, [X8+144]
	149 Move W8, [X0+309]
	150 Move TEMP, X8
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {155}
	154 Call 0x1C5D684
	155 Move X8, [X0+184]
	156 Move [X8+16], X20
	157 Move X0, [X19+32]
	158 Move W8, [X0+309]
	159 Move TEMP, X8
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {164}
	163 Call 0x1C5D684
	164 Move X8, [X0+192]
	165 Move X0, [X8+144]
	166 Move W8, [X0+309]
	167 Move TEMP, X8
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfEqual {177}
	171 Move X20, [X31+16]
	172 Move X19, [X31+24]
	173 Move X30, [X31+32]
	174 Move X21, [X31+40]
	175 Call 0x1C5D684
	176 Return 
	177 Move X20, [X31+16]
	178 Move X19, [X31+24]
	179 Move X30, [X31+32]
	180 Move X21, [X31+40]
	181 Return 

