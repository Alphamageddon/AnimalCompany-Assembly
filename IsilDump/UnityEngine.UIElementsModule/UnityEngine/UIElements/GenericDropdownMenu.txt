Type: UnityEngine.UIElements.GenericDropdownMenu

Method: System.Boolean get_isSingleSelectionDropdown()

Disassembly:
	0x03D105AC MOV X20, X0
	0x03D105B0 TBNZ X8, 0x0, 0x3D105E0

ISIL:
	001 Move W0, [X0+88]
	002 Return X0

Method: System.Void set_isSingleSelectionDropdown(System.Boolean value)

Disassembly:
	0x03D105B4 ADRP X0, 0x453000
	0x03D105B8 LDR X0, [X0 + 0xBA0]
	0x03D105BC BL 0x1C16CF4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+88], W8
	003 Return 

Method: System.Boolean get_closeOnParentResize()

Disassembly:
	0x03D105C0 ADRP X0, 0x40E000
	0x03D105C4 LDR X0, [X0 + 0xD20]

ISIL:
	001 Move W0, [X0+89]
	002 Return X0

Method: System.Void set_closeOnParentResize(System.Boolean value)

Disassembly:
	0x03D105C8 BL 0x1C16CF4
	0x03D105CC ADRP X0, 0x40C000
	0x03D105D0 LDR X0, [X0 + 0xE50]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+89], W8
	003 Return 

Method: UnityEngine.UIElements.VisualElement get_contentContainer()

Disassembly:
	0x03D105D4 BL 0x1C16CF4
	0x03D105D8 MOVZ W8, 0x1
	0x03D105DC STRB W8, [X21 + 0x8B5]
	0x03D105E0 MOV X0, X20
	0x03D105E4 BL 0x3D10008
	0x03D105E8 ADDS W31, W0, 0x1
	0x03D105EC B.EQ 0x3D10670
	0x03D105F0 MOV W1, W0
	0x03D105F4 LDR X0, [X20 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+1896]
	007 Move X1, [X8+1904]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03D0E2E8 LDRB W8, [X20 + 0x8A2]
	0x03D0E2EC LDR X19, [X19 + 0x7A8]
	0x03D0E2F0 TBNZ X8, 0x0, 0x3D0E308
	0x03D0E2F4 ADRP X0, 0x451000
	0x03D0E2F8 LDR X0, [X0 + 0x7A8]
	0x03D0E2FC BL 0x1C16CF4
	0x03D0E300 MOVZ W8, 0x1
	0x03D0E304 STRB W8, [X20 + 0x8A2]
	0x03D0E308 LDR X0, [X19]
	0x03D0E30C LDR W8, [X0 + 0xE0]
	0x03D0E310 CBNZ W8, 0x3D0E31C
	0x03D0E314 BL 0x1C16DFC
	0x03D0E318 LDR X0, [X19]
	0x03D0E31C LDR X8, [X0 + 0xB8]
	0x03D0E320 LDP X20, X19, [X31 + 0x10]
	0x03D0E324 LDR X0, [X8]
	0x03D0E328 LDR X30, [X31], #0x20
	0x03D0E32C RET
	0x03D0E330 STR D12, [X31 - 0x50]!
	0x03D0E334 STP D11, D10, [X31 + 0x8]
	0x03D0E338 STP D9, D8, [X31 + 0x18]
	0x03D0E33C STR X30, [X31 + 0x28]
	0x03D0E340 STP X22, X21, [X31 + 0x30]
	0x03D0E344 STP X20, X19, [X31 + 0x40]
	0x03D0E348 ADRP X22, 0x6D9000
	0x03D0E34C ADRP X21, 0x455000
	0x03D0E350 LDRB W8, [X22 + 0x8A3]
	0x03D0E354 LDR X21, [X21 + 0xAC0]
	0x03D0E358 MOV V10.16B, V3.16B
	0x03D0E35C MOV W20, W1
	0x03D0E360 MOV V8.16B, V1.16B
	0x03D0E364 MOV V9.16B, V0.16B
	0x03D0E368 MOV X19, X0
	0x03D0E36C TBNZ X8, 0x0, 0x3D0E39C
	0x03D0E370 ADRP X0, 0x455000
	0x03D0E374 LDR X0, [X0 + 0xAC8]
	0x03D0E378 BL 0x1C16CF4
	0x03D0E37C ADRP X0, 0x455000
	0x03D0E380 LDR X0, [X0 + 0xAC0]
	0x03D0E384 BL 0x1C16CF4
	0x03D0E388 ADRP X0, 0x455000
	0x03D0E38C LDR X0, [X0 + 0xAD0]
	0x03D0E390 BL 0x1C16CF4
	0x03D0E394 MOVZ W8, 0x1
	0x03D0E398 STRB W8, [X22 + 0x8A3]
	0x03D0E39C FCVT S0, S10
	0x03D0E3A0 MOV X0, X31
	0x03D0E3A4 BL 0x3C2F70C
	0x03D0E3A8 CMP W20, 0x0
	0x03D0E3AC CSET W0, EQ
	0x03D0E3B0 CMP W20, 0x2
	0x03D0E3B4 CSET W1, EQ
	0x03D0E3B8 MOV X2, X31
	0x03D0E3BC MOV V10.16B, V0.16B
	0x03D0E3C0 BL 0x3C2F590
	0x03D0E3C4 LDR X1, [X21]
	0x03D0E3C8 MOV X0, X19
	0x03D0E3CC MOV V11.16B, V0.16B
	0x03D0E3D0 BL 0x26C4094
	0x03D0E3D4 LDR X8, [X19]
	0x03D0E3D8 MOV X1, X0
	0x03D0E3DC MOV X0, X19
	0x03D0E3E0 LDR X9, [X8 + 0x778]
	0x03D0E3E4 LDR X2, [X8 + 0x780]
	0x03D0E3E8 BLR X9
	0x03D0E3EC FCVT S12, S0
	0x03D0E3F0 MOV V0.16B, V9.16B
	0x03D0E3F4 MOV V1.16B, V8.16B
	0x03D0E3F8 MOV V2.16B, V11.16B
	0x03D0E3FC MOV X0, X31
	0x03D0E400 BL 0x3C2F5B4
	0x03D0E404 FCVT S0, S0
	0x03D0E408 FMUL D0, D10, D0
	0x03D0E40C FADD D0, D0, D12
	0x03D0E410 MOV V1.16B, V10.16B
	0x03D0E414 MOV X0, X31
	0x03D0E418 BL 0x3C2C2D0
	0x03D0E41C MOV X0, X19
	0x03D0E420 MOV V8.16B, V0.16B
	0x03D0E424 BL 0x3D0E258
	0x03D0E428 CBZ X0, 0x3D0E4D8
	0x03D0E42C ADRP X8, 0x455000
	0x03D0E430 LDR X8, [X8 + 0xAC8]
	0x03D0E434 LDR X1, [X8]
	0x03D0E438 BL 0x26DABB4
	0x03D0E43C TBZ X0, 0x0, 0x3D0E490
	0x03D0E440 MOV V0.16B, V8.16B
	0x03D0E444 MOV X0, X31
	0x03D0E448 BL 0x3C2C194
	0x03D0E44C LDR X8, [X19]
	0x03D0E450 MOV X0, X19
	0x03D0E454 LDR X9, [X8 + 0x7D8]
	0x03D0E458 LDR X1, [X8 + 0x7E0]
	0x03D0E45C BLR X9
	0x03D0E460 ADRP X8, 0x455000
	0x03D0E464 LDR X8, [X8 + 0xAD0]
	0x03D0E468 MOV X1, X0
	0x03D0E46C MOV X0, X19
	0x03D0E470 LDP X20, X19, [X31 + 0x40]
	0x03D0E474 LDR X2, [X8]
	0x03D0E478 LDP X22, X21, [X31 + 0x30]
	0x03D0E47C LDR X30, [X31 + 0x28]
	0x03D0E480 LDP D9, D8, [X31 + 0x18]
	0x03D0E484 LDP D11, D10, [X31 + 0x8]
	0x03D0E488 LDR V12, [X31], #0x50
	0x03D0E48C B 0x26C40B8
	0x03D0E490 MOV X0, X19
	0x03D0E494 BL 0x3D0E258
	0x03D0E498 MOV X19, X0
	0x03D0E49C MOV V0.16B, V8.16B
	0x03D0E4A0 MOV X0, X31
	0x03D0E4A4 BL 0x3C2C194
	0x03D0E4A8 CBZ X19, 0x3D0E4D8
	0x03D0E4AC LDR X8, [X19]
	0x03D0E4B0 MOV X0, X19
	0x03D0E4B4 LDP X20, X19, [X31 + 0x40]
	0x03D0E4B8 LDP X22, X21, [X31 + 0x30]
	0x03D0E4BC LDR X2, [X8 + 0x7F8]
	0x03D0E4C0 LDR X1, [X8 + 0x800]
	0x03D0E4C4 LDR X30, [X31 + 0x28]
	0x03D0E4C8 LDP D9, D8, [X31 + 0x18]
	0x03D0E4CC LDP D11, D10, [X31 + 0x8]
	0x03D0E4D0 LDR V12, [X31], #0x50
	0x03D0E4D4 BR X2
	0x03D0E4D8 BL 0x1C16F20
	0x03D0E4DC STR X30, [X31 - 0x20]!
	0x03D0E4E0 STP X20, X19, [X31 + 0x10]
	0x03D0E4E4 ADRP X20, 0x6D9000
	0x03D0E4E8 LDRB W8, [X20 + 0x8A4]
	0x03D0E4EC MOV X19, X0
	0x03D0E4F0 STR S0, [X31 + 0xC]
	0x03D0E4F4 TBNZ X8, 0x0, 0x3D0E50C
	0x03D0E4F8 ADRP X0, 0x455000
	0x03D0E4FC LDR X0, [X0 + 0xAD8]
	0x03D0E500 BL 0x1C16CF4
	0x03D0E504 MOVZ W8, 0x1
	0x03D0E508 STRB W8, [X20 + 0x8A4]
	0x03D0E50C LDR X1, [X19 + 0x400]
	0x03D0E510 ADD X0, X31, 0xC
	0x03D0E514 MOV X2, X31
	0x03D0E518 BL 0x338FF2C
	0x03D0E51C LDP X20, X19, [X31 + 0x10]
	0x03D0E520 LDR X30, [X31], #0x20
	0x03D0E524 RET
	0x03D0E528 SUB X31, X31, 0x40
	0x03D0E52C STP X30, X23, [X31 + 0x10]
	0x03D0E530 STP X22, X21, [X31 + 0x20]
	0x03D0E534 STP X20, X19, [X31 + 0x30]
	0x03D0E538 ADRP X23, 0x6D9000
	0x03D0E53C ADRP X22, 0x455000
	0x03D0E540 ADRP X21, 0x451000
	0x03D0E544 LDRB W8, [X23 + 0x8A5]
	0x03D0E548 LDR X22, [X22 + 0xA68]
	0x03D0E54C LDR X21, [X21 + 0x7A8]
	0x03D0E550 MOV X19, X1
	0x03D0E554 MOV X20, X0
	0x03D0E558 TBNZ X8, 0x0, 0x3D0E57C
	0x03D0E55C ADRP X0, 0x455000
	0x03D0E560 LDR X0, [X0 + 0xA68]
	0x03D0E564 BL 0x1C16CF4
	0x03D0E568 ADRP X0, 0x451000
	0x03D0E56C LDR X0, [X0 + 0x7A8]
	0x03D0E570 BL 0x1C16CF4
	0x03D0E574 MOVZ W8, 0x1
	0x03D0E578 STRB W8, [X23 + 0x8A5]
	0x03D0E57C LDR X1, [X22]
	0x03D0E580 MOV X0, X20
	0x03D0E584 STR W31, [X31 + 0xC]
	0x03D0E588 BL 0x26C3B10
	0x03D0E58C LDR X8, [X21]
	0x03D0E590 MOV X20, X0
	0x03D0E594 LDR W9, [X8 + 0xE0]
	0x03D0E598 CBNZ W9, 0x3D0E5A4
	0x03D0E59C MOV X0, X8
	0x03D0E5A0 BL 0x1C16DFC
	0x03D0E5A4 ADD X2, X31, 0xC
	0x03D0E5A8 MOV X0, X19
	0x03D0E5AC MOV X1, X20
	0x03D0E5B0 MOV X3, X31
	0x03D0E5B4 BL 0x3C3D5B0
	0x03D0E5B8 LDR V0, [X31 + 0xC]
	0x03D0E5BC LDP X20, X19, [X31 + 0x30]
	0x03D0E5C0 LDP X22, X21, [X31 + 0x20]
	0x03D0E5C4 LDP X30, X23, [X31 + 0x10]
	0x03D0E5C8 ADD X31, X31, 0x40
	0x03D0E5CC RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x6DA000
	009 Move X23, 0x456000
	010 Move X20, 0x456000
	011 Move X22, 0x40E000
	012 Move X21, 0x411000
	013 Move W8, [X24+2223]
	014 Move X23, [X23+2560]
	015 Move X20, [X20+2568]
	016 Move X22, [X22+2200]
	017 Move X21, [X21+200]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {58}
	023 Move X0, 0x410000
	024 Move X0, [X0+3424]
	025 Call 0x1C17CF4
	026 Move X0, 0x410000
	027 Move X0, [X0+3432]
	028 Call 0x1C17CF4
	029 Move X0, 0x410000
	030 Move X0, [X0+3440]
	031 Call 0x1C17CF4
	032 Move X0, 0x410000
	033 Move X0, [X0+3448]
	034 Call 0x1C17CF4
	035 Move X0, 0x456000
	036 Move X0, [X0+2576]
	037 Call 0x1C17CF4
	038 Move X0, 0x456000
	039 Move X0, [X0+2584]
	040 Call 0x1C17CF4
	041 Move X0, 0x411000
	042 Move X0, [X0+200]
	043 Call 0x1C17CF4
	044 Move X0, 0x456000
	045 Move X0, [X0+2568]
	046 Call 0x1C17CF4
	047 Move X0, 0x456000
	048 Move X0, [X0+2560]
	049 Call 0x1C17CF4
	050 Move X0, 0x410000
	051 Move X0, [X0+1656]
	052 Call 0x1C17CF4
	053 Move X0, 0x40E000
	054 Move X0, [X0+2200]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X24+2223], W8
	058 Move X0, [X23]
	059 Move [X31+8], X31
	060 Call 0x1C17F10
	061 Move X1, [X20]
	062 Move X20, X0
	063 Call List`1<Object>..ctor, X0
	064 Move X0, X19
	065 Move X1, X31
	066 Move [X19+16], X20
	067 Call Object..ctor, X0
	068 Move X0, [X22]
	069 Call 0x1C17F10
	070 Move X1, X31
	071 Move X20, X0
	072 Call VisualElement..ctor, X0
	073 Move [X19+24], X20
	074 Move X0, [X21]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Compare X20, 0
	080 JumpIfEqual {207}
	081 Move X8, [X21]
	082 Move X0, X20
	083 Move X2, X31
	084 Move X8, [X8+184]
	085 Move X1, [X8]
	086 Call VisualElement.AddToClassList, X0, X1
	087 Move X0, [X22]
	088 Call 0x1C17F10
	089 Move X1, X31
	090 Move X20, X0
	091 Call VisualElement..ctor, X0
	092 Move [X19+32], X20
	093 Compare X20, 0
	094 JumpIfEqual {207}
	095 Move X8, [X21]
	096 Move X0, X20
	097 Move X2, X31
	098 Move X8, [X8+184]
	099 Move X1, [X8+32]
	100 Call VisualElement.AddToClassList, X0, X1
	101 Move X0, [X19+24]
	102 Compare X0, 0
	103 JumpIfEqual {207}
	104 Move X1, [X19+32]
	105 Move X20, 0x410000
	106 Move X20, [X20+1656]
	107 Move X2, X31
	108 Call VisualElement.Add, X0, X1
	109 Move X0, [X20]
	110 Call 0x1C17F10
	111 Move X1, X31
	112 Move X20, X0
	113 Call ScrollView..ctor, X0
	114 Move [X19+40], X20
	115 Compare X20, 0
	116 JumpIfEqual {207}
	117 Move X8, [X21]
	118 Move X0, X20
	119 Move X2, X31
	120 Move X8, [X8+184]
	121 Move X1, [X8+24]
	122 Call VisualElement.AddToClassList, X0, X1
	123 Move X0, [X19+40]
	124 Compare X0, 0
	125 JumpIfEqual {207}
	126 Move W1, W31
	127 Move X2, X31
	128 Call VisualElement.set_pickingMode, X0, X1
	129 Move X0, [X19+40]
	130 Compare X0, 0
	131 JumpIfEqual {207}
	132 Move X8, [X0]
	133 Move X9, [X8+1896]
	134 Move X1, [X8+1904]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Compare X0, 0
	137 JumpIfEqual {207}
	138 Move W8, 1
	139 Move [X0+32], W8
	140 Move X0, [X19+40]
	141 Compare X0, 0
	142 JumpIfEqual {207}
	143 Move W1, 2
	144 Move X2, X31
	145 Call ScrollView.set_touchScrollBehavior, X0, X1
	146 Move X8, [X19+32]
	147 Compare X8, 0
	148 JumpIfEqual {207}
	149 Move X8, [X8+888]
	150 Move X21, 0x410000
	151 Move X22, 0x456000
	152 Add X0, X31, 8
	153 Move [X31+8], X8
	154 Move X1, [X19+40]
	155 Move X21, [X21+3440]
	156 Move X22, [X22+2576]
	157 Move X2, X31
	158 Call Hierarchy.Add, X0, X1
	159 Move X0, [X21]
	160 Move X20, [X19+24]
	161 Call 0x1C17F10
	162 Move X2, [X22]
	163 Move X1, X19
	164 Move X3, X31
	165 Move X21, X0
	166 Call 0x2D0F824, X0, X1, X2
	167 Compare X20, 0
	168 JumpIfEqual {207}
	169 Move X8, 0x410000
	170 Move X8, [X8+3424]
	171 Move X22, 0x410000
	172 Move X23, 0x456000
	173 Move X0, X20
	174 Move X3, [X8]
	175 Move X22, [X22+3448]
	176 Move X23, [X23+2584]
	177 Move X1, X21
	178 Move W2, W31
	179 Call 0x21A2534, X0, X1, X2
	180 Move X0, [X22]
	181 Move X20, [X19+24]
	182 Call 0x1C17F10
	183 Move X2, [X23]
	184 Move X1, X19
	185 Move X3, X31
	186 Move X21, X0
	187 Call 0x2D0F824, X0, X1, X2
	188 Compare X20, 0
	189 JumpIfEqual {207}
	190 Move X8, 0x410000
	191 Move X8, [X8+3432]
	192 Move X0, X20
	193 Move X1, X21
	194 Move W2, W31
	195 Move X3, [X8]
	196 Call 0x21A2534, X0, X1, X2
	197 Move W8, 257
	198 NotImplemented "Instruction STRH not yet implemented."
	199 Move X20, [X31+48]
	200 Move X19, [X31+56]
	201 Move X22, [X31+32]
	202 Move X21, [X31+40]
	203 Move X24, [X31+16]
	204 Move X23, [X31+24]
	205 Move X30, [X31+64]
	206 Return 
	207 Call 0x1C17F20

Method: System.Void OnAttachToPanel(UnityEngine.UIElements.AttachToPanelEvent evt)

Disassembly:
	0x03D105F8 CBZ X0, 0x3D106D8
	0x03D105FC ADRP X8, 0x453000
	0x03D10600 LDR X8, [X8 + 0xBA0]
	0x03D10604 LDR X2, [X8]
	0x03D10608 BL 0x301BCCC
	0x03D1060C CBZ X0, 0x3D106D8
	0x03D10610 LDR X8, [X0 + 0x20]
	0x03D10614 MOV X21, X0
	0x03D10618 CBZ X8, 0x3D1062C
	0x03D1061C LDR X9, [X8 + 0x18]
	0x03D10620 LDR X0, [X8 + 0x40]
	0x03D10624 LDR X1, [X8 + 0x28]
	0x03D10628 BLR X9
	0x03D1062C LDR X22, [X21 + 0x28]
	0x03D10630 CBZ X22, 0x3D1065C
	0x03D10634 LDR X0, [X21 + 0x18]
	0x03D10638 CBZ X0, 0x3D106D8
	0x03D1063C MOV X1, X31
	0x03D10640 BL 0x3DEBA30
	0x03D10644 LDR X8, [X22 + 0x40]
	0x03D10648 LDR X9, [X22 + 0x18]
	0x03D1064C LDR X2, [X22 + 0x28]
	0x03D10650 MOV X1, X0
	0x03D10654 MOV X0, X8
	0x03D10658 BLR X9
	0x03D1065C LDRB W8, [X20 + 0x58]
	0x03D10660 CBZ W8, 0x3D10670
	0x03D10664 MOVZ W1, 0x1
	0x03D10668 MOV X0, X20
	0x03D1066C BL 0x3D0FDA8
	0x03D10670 CBZ X19, 0x3D106D8
	0x03D10674 ADRP X22, 0x40C000
	0x03D10678 LDR X22, [X22 + 0xE50]
	0x03D1067C LDR W21, [X19 + 0x9C]
	0x03D10680 LDR X0, [X22]
	0x03D10684 LDR W8, [X0 + 0xE0]
	0x03D10688 CBNZ W8, 0x3D10694
	0x03D1068C BL 0x1C16DFC
	0x03D10690 LDR X0, [X22]
	0x03D10694 LDR X8, [X0 + 0xB8]
	0x03D10698 LDR W8, [X8 + 0x8]
	0x03D1069C CMP W21, W8
	0x03D106A0 B.EQ 0x3D106C0
	0x03D106A4 LDR X0, [X20 + 0x18]
	0x03D106A8 CBZ X0, 0x3D106D8
	0x03D106AC MOV X1, X31
	0x03D106B0 BL 0x3DEC0CC
	0x03D106B4 LDR W1, [X19 + 0x9C]
	0x03D106B8 MOV X2, X31
	0x03D106BC BL 0x3DBF888
	0x03D106C0 MOV X0, X19
	0x03D106C4 LDP X20, X19, [X31 + 0x20]
	0x03D106C8 LDP X22, X21, [X31 + 0x10]
	0x03D106CC MOV X1, X31
	0x03D106D0 LDR X30, [X31], #0x30
	0x03D106D4 B 0x3D9D950
	0x03D106D8 BL 0x1C16F20
	0x03D106DC STP X30, X21, [X31 - 0x20]!
	0x03D106E0 STP X20, X19, [X31 + 0x10]
	0x03D106E4 ADRP X20, 0x6D7000
	0x03D106E8 LDRB W8, [X20 + 0x8B6]
	0x03D106EC MOV X19, X0
	0x03D106F0 TBNZ X8, 0x0, 0x3D10714
	0x03D106F4 ADRP X0, 0x3E4000
	0x03D106F8 LDR X0, [X0 + 0xE70]
	0x03D106FC BL 0x1C16CF4
	0x03D10700 ADRP X0, 0x40B000
	0x03D10704 LDR X0, [X0 + 0x680]
	0x03D10708 BL 0x1C16CF4
	0x03D1070C MOVZ W8, 0x1
	0x03D10710 STRB W8, [X20 + 0x8B6]
	0x03D10714 LDR X0, [X19 + 0x28]
	0x03D10718 CBZ X0, 0x3D10820
	0x03D1071C LDR X8, [X0]
	0x03D10720 LDP S0, S1, [X19 + 0x5C]
	0x03D10724 LDR X9, [X8 + 0x748]
	0x03D10728 LDR X1, [X8 + 0x750]
	0x03D1072C BLR X9
	0x03D10730 TBZ X0, 0x0, 0x3D107E4
	0x03D10734 LDR X0, [X19 + 0x18]
	0x03D10738 CBZ X0, 0x3D10820
	0x03D1073C MOV X1, X31
	0x03D10740 BL 0x3DF7724
	0x03D10744 LDR X8, [X19 + 0x28]
	0x03D10748 CBZ X8, 0x3D10820
	0x03D1074C LDR X9, [X8]
	0x03D10750 MOV X19, X0
	0x03D10754 MOV X0, X8
	0x03D10758 LDR X10, [X9 + 0x768]
	0x03D1075C LDR X1, [X9 + 0x770]
	0x03D10760 BLR X10
	0x03D10764 ADRP X8, 0x3E4000
	0x03D10768 LDR X8, [X8 + 0xE70]
	0x03D1076C MOV X21, X0
	0x03D10770 LDR X8, [X8]
	0x03D10774 MOV X0, X8
	0x03D10778 BL 0x1C16F10
	0x03D1077C CBZ X21, 0x3D10820
	0x03D10780 LDR X8, [X21]
	0x03D10784 MOV X1, X21
	0x03D10788 MOV X3, X31
	0x03D1078C MOV X20, X0
	0x03D10790 LDR X2, [X8 + 0x250]
	0x03D10794 BL 0x3314368
	0x03D10798 CBZ X19, 0x3D10820
	0x03D1079C ADRP X10, 0x40B000
	0x03D107A0 LDR X8, [X19]
	0x03D107A4 LDR X10, [X10 + 0x680]
	0x03D107A8 LDRH W9, [X8 + 0x12E]
	0x03D107AC LDR X1, [X10]
	0x03D107B0 CBZ X9, 0x3D107D4
	0x03D107B4 LDR X10, [X8 + 0xB0]
	0x03D107B8 ADD X10, X10, 0x8
	0x03D107BC LDUR X11, [X10 - 0x8]
	0x03D107C0 CMP X11, X1
	0x03D107C4 B.EQ 0x3D107F8
	0x03D107C8 SUBS X9, X9, 0x1
	0x03D107CC ADD X10, X10, 0x10
	0x03D107D0 B.NE 0x3D107BC
	0x03D107D4 MOVZ W2, 0x1
	0x03D107D8 MOV X0, X19
	0x03D107DC BL 0x1C5C788
	0x03D107E0 B 0x3D10808
	0x03D107E4 MOV X0, X19
	0x03D107E8 LDP X20, X19, [X31 + 0x10]
	0x03D107EC MOV W1, W31
	0x03D107F0 LDP X30, X21, [X31], #0x20
	0x03D107F4 B 0x3D0FDA8
	0x03D107F8 LDR W9, [X10]
	0x03D107FC ADD W9, W9, 0x1
	0x03D10800 ADD X8, X8, W9, 0x4, SXTW
	0x03D10804 ADD X0, X8, 0x138
	0x03D10808 LDP X3, X2, [X0]
	0x03D1080C MOV X0, X19
	0x03D10810 MOV X1, X20
	0x03D10814 LDP X20, X19, [X31 + 0x10]
	0x03D10818 LDP X30, X21, [X31], #0x20
	0x03D1081C BR X3
	0x03D10820 BL 0x1C16F20
	0x03D10824 LDRB W8, [X0 + 0x59]
	0x03D10828 CBZ W8, 0x3D10834
	0x03D1082C MOVZ W1, 0x1
	0x03D10830 B 0x3D0FDA8
	0x03D10834 RET
	0x03D10838 STR X30, [X31 - 0x30]!
	0x03D1083C STP X22, X21, [X31 + 0x10]
	0x03D10840 STP X20, X19, [X31 + 0x20]
	0x03D10844 ADRP X22, 0x6D7000
	0x03D10848 LDRB W8, [X22 + 0x8B8]
	0x03D1084C MOV W21, W2
	0x03D10850 MOV W19, W1
	0x03D10854 MOV X20, X0
	0x03D10858 TBNZ X8, 0x0, 0x3D1087C
	0x03D1085C ADRP X0, 0x453000
	0x03D10860 LDR X0, [X0 + 0xB98]
	0x03D10864 BL 0x1C16CF4
	0x03D10868 ADRP X0, 0x453000
	0x03D1086C LDR X0, [X0 + 0xBA0]
	0x03D10870 BL 0x1C16CF4
	0x03D10874 MOVZ W8, 0x1
	0x03D10878 STRB W8, [X22 + 0x8B8]
	0x03D1087C TBNZ X21, 0x1F, 0x3D108D0
	0x03D10880 LDR X0, [X20 + 0x10]
	0x03D10884 CBZ X0, 0x3D10970
	0x03D10888 LDR W8, [X0 + 0x18]
	0x03D1088C CMP W8, W21
	0x03D10890 B.LE 0x3D108D0
	0x03D10894 ADRP X8, 0x453000
	0x03D10898 LDR X8, [X8 + 0xBA0]
	0x03D1089C MOV W1, W21
	0x03D108A0 LDR X2, [X8]
	0x03D108A4 BL 0x301BCCC
	0x03D108A8 CBZ X0, 0x3D10970
	0x03D108AC LDR X21, [X0 + 0x18]
	0x03D108B0 CBZ X21, 0x3D10970
	0x03D108B4 MOV X0, X21
	0x03D108B8 MOV X1, X31
	0x03D108BC BL 0x3DEEF88
	0x03D108C0 AND W1, W0, 0xFFFFFFFD
	0x03D108C4 MOV X0, X21
	0x03D108C8 MOV X2, X31
	0x03D108CC BL 0x3DEEF90
	0x03D108D0 TBNZ X19, 0x1F, 0x3D10960
	0x03D108D4 LDR X0, [X20 + 0x10]
	0x03D108D8 CBZ X0, 0x3D10970
	0x03D108DC LDR W8, [X0 + 0x18]
	0x03D108E0 CMP W8, W19
	0x03D108E4 B.LE 0x3D10960
	0x03D108E8 ADRP X22, 0x453000
	0x03D108EC LDR X22, [X22 + 0xBA0]
	0x03D108F0 MOV W1, W19
	0x03D108F4 LDR X2, [X22]
	0x03D108F8 BL 0x301BCCC
	0x03D108FC CBZ X0, 0x3D10970
	0x03D10900 LDR X21, [X0 + 0x18]
	0x03D10904 CBZ X21, 0x3D10970
	0x03D10908 MOV X0, X21
	0x03D1090C MOV X1, X31
	0x03D10910 BL 0x3DEEF88
	0x03D10914 ORR W1, W0, 0x2
	0x03D10918 MOV X0, X21
	0x03D1091C MOV X2, X31
	0x03D10920 BL 0x3DEEF90
	0x03D10924 LDR X0, [X20 + 0x10]
	0x03D10928 CBZ X0, 0x3D10970
	0x03D1092C LDR X2, [X22]
	0x03D10930 LDR X20, [X20 + 0x28]
	0x03D10934 MOV W1, W19
	0x03D10938 BL 0x301BCCC
	0x03D1093C CBZ X0, 0x3D10970
	0x03D10940 CBZ X20, 0x3D10970
	0x03D10944 LDR X1, [X0 + 0x18]
	0x03D10948 MOV X0, X20
	0x03D1094C LDP X20, X19, [X31 + 0x20]
	0x03D10950 LDP X22, X21, [X31 + 0x10]
	0x03D10954 MOV X2, X31
	0x03D10958 LDR X30, [X31], #0x30
	0x03D1095C B 0x3D7ED64
	0x03D10960 LDP X20, X19, [X31 + 0x20]
	0x03D10964 LDP X22, X21, [X31 + 0x10]
	0x03D10968 LDR X30, [X31], #0x30
	0x03D1096C RET
	0x03D10970 BL 0x1C16F20
	0x03D10974 STP X30, X19, [X31 - 0x10]!
	0x03D10978 MOV X19, X3
	0x03D1097C AND W2, W2, 0x1
	0x03D10980 MOVZ W3, 0x1
	0x03D10984 MOV X4, X31
	0x03D10988 BL 0x3D1099C
	0x03D1098C CBZ X0, 0x3D10994
	0x03D10990 STR X19, [X0 + 0x20]
	0x03D10994 LDP X30, X19, [X31], #0x10
	0x03D10998 RET
	0x03D1099C STR X30, [X31 - 0x50]!
	0x03D109A0 STP X26, X25, [X31 + 0x10]
	0x03D109A4 STP X24, X23, [X31 + 0x20]
	0x03D109A8 STP X22, X21, [X31 + 0x30]
	0x03D109AC STP X20, X19, [X31 + 0x40]
	0x03D109B0 ADRP X22, 0x6D7000
	0x03D109B4 LDRB W8, [X22 + 0x8BB]
	0x03D109B8 MOV X23, X4
	0x03D109BC MOV W24, W3
	0x03D109C0 MOV W21, W2
	0x03D109C4 MOV X20, X1
	0x03D109C8 MOV X19, X0
	0x03D109CC TBNZ X8, 0x0, 0x3D10A38
	0x03D109D0 ADRP X0, 0x40E000
	0x03D109D4 LDR X0, [X0 + 0xC8]
	0x03D109D8 BL 0x1C16CF4
	0x03D109DC ADRP X0, 0x40C000
	0x03D109E0 LDR X0, [X0 + 0x130]
	0x03D109E4 BL 0x1C16CF4
	0x03D109E8 ADRP X0, 0x453000
	0x03D109EC LDR X0, [X0 + 0xBB8]
	0x03D109F0 BL 0x1C16CF4
	0x03D109F4 ADRP X0, 0x453000
	0x03D109F8 LDR X0, [X0 + 0xB98]
	0x03D109FC BL 0x1C16CF4
	0x03D10A00 ADRP X0, 0x453000
	0x03D10A04 LDR X0, [X0 + 0xBA0]
	0x03D10A08 BL 0x1C16CF4
	0x03D10A0C ADRP X0, 0x453000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x6D8000
	010 Move W8, [X21+2224]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {82}
	017 Move X0, 0x454000
	018 Move X0, [X0+136]
	019 Call 0x1C17CF4
	020 Move X0, 0x40E000
	021 Move X0, [X0+3496]
	022 Call 0x1C17CF4
	023 Move X0, 0x40E000
	024 Move X0, [X0+1624]
	025 Call 0x1C17CF4
	026 Move X0, 0x40E000
	027 Move X0, [X0+1904]
	028 Call 0x1C17CF4
	029 Move X0, 0x40F000
	030 Move X0, [X0+152]
	031 Call 0x1C17CF4
	032 Move X0, 0x40E000
	033 Move X0, [X0+1912]
	034 Call 0x1C17CF4
	035 Move X0, 0x40E000
	036 Move X0, [X0+1632]
	037 Call 0x1C17CF4
	038 Move X0, 0x40F000
	039 Move X0, [X0+160]
	040 Call 0x1C17CF4
	041 Move X0, 0x40E000
	042 Move X0, [X0+3504]
	043 Call 0x1C17CF4
	044 Move X0, 0x40E000
	045 Move X0, [X0+1920]
	046 Call 0x1C17CF4
	047 Move X0, 0x40E000
	048 Move X0, [X0+1928]
	049 Call 0x1C17CF4
	050 Move X0, 0x454000
	051 Move X0, [X0+2912]
	052 Call 0x1C17CF4
	053 Move X0, 0x454000
	054 Move X0, [X0+2920]
	055 Call 0x1C17CF4
	056 Move X0, 0x454000
	057 Move X0, [X0+2928]
	058 Call 0x1C17CF4
	059 Move X0, 0x454000
	060 Move X0, [X0+2936]
	061 Call 0x1C17CF4
	062 Move X0, 0x454000
	063 Move X0, [X0+2944]
	064 Call 0x1C17CF4
	065 Move X0, 0x454000
	066 Move X0, [X0+2952]
	067 Call 0x1C17CF4
	068 Move X0, 0x454000
	069 Move X0, [X0+2960]
	070 Call 0x1C17CF4
	071 Move X0, 0x40D000
	072 Move X0, [X0+3712]
	073 Call 0x1C17CF4
	074 Move X0, 0x454000
	075 Move X0, [X0+192]
	076 Call 0x1C17CF4
	077 Move X0, 0x40E000
	078 Move X0, [X0+3456]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X21+2224], W8
	082 Compare X20, 0
	083 JumpIfEqual {287}
	084 Move X8, [X20+144]
	085 Compare X8, 0
	086 JumpIfEqual {206}
	087 Move X0, [X19+40]
	088 Compare X0, 0
	089 JumpIfEqual {287}
	090 Move X8, [X0]
	091 Move X21, 0x454000
	092 Move X22, 0x454000
	093 Move X21, [X21+136]
	094 Move X22, [X22+2912]
	095 Move X9, [X8+1896]
	096 Move X1, [X8+1904]
	097 Move X23, 0x454000
	098 Move X24, 0x40E000
	099 Move X25, 0x454000
	100 Move X23, [X23+192]
	101 Move X24, [X24+1920]
	102 Move X25, [X25+2944]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X8, [X21]
	105 Move X21, X0
	106 Move X0, X8
	107 Call 0x1C17F10
	108 Move X2, [X22]
	109 Move X1, X19
	110 Move X3, X31
	111 Move X22, X0
	112 Call Action`2<Int32Enum, Object>..ctor, X0, X1, X2
	113 Move X0, [X23]
	114 Call 0x1C17F10
	115 Move X1, X22
	116 Move X2, X31
	117 Move X23, X0
	118 Call KeyboardNavigationManipulator..ctor, X0, X1
	119 Move X0, X21
	120 Move X1, X23
	121 Move X2, X31
	122 Move [X19+80], X23
	123 Call VisualElementExtensions.AddManipulator, X0, X1
	124 Move X0, [X24]
	125 Move X21, [X19+24]
	126 Call 0x1C17F10
	127 Move X2, [X25]
	128 Move X1, X19
	129 Move X3, X31
	130 Move X22, X0
	131 Call 0x2D0F824, X0, X1, X2
	132 Compare X21, 0
	133 JumpIfEqual {287}
	134 Move X8, 0x40E000
	135 Move X8, [X8+1904]
	136 Move X23, 0x40F000
	137 Move X24, 0x454000
	138 Move X0, X21
	139 Move X3, [X8]
	140 Move X23, [X23+160]
	141 Move X24, [X24+2952]
	142 Move X1, X22
	143 Move W2, W31
	144 Call 0x21A2534, X0, X1, X2
	145 Move X0, [X23]
	146 Move X21, [X19+24]
	147 Call 0x1C17F10
	148 Move X2, [X24]
	149 Move X1, X19
	150 Move X3, X31
	151 Move X22, X0
	152 Call 0x2D0F824, X0, X1, X2
	153 Compare X21, 0
	154 JumpIfEqual {287}
	155 Move X8, 0x40F000
	156 Move X8, [X8+152]
	157 Move X23, 0x40E000
	158 Move X24, 0x454000
	159 Move X0, X21
	160 Move X3, [X8]
	161 Move X23, [X23+1928]
	162 Move X24, [X24+2960]
	163 Move X1, X22
	164 Move W2, W31
	165 Call 0x21A2534, X0, X1, X2
	166 Move X0, [X23]
	167 Move X21, [X19+24]
	168 Call 0x1C17F10
	169 Move X2, [X24]
	170 Move X1, X19
	171 Move X3, X31
	172 Move X22, X0
	173 Call 0x2D0F824, X0, X1, X2
	174 Compare X21, 0
	175 JumpIfEqual {287}
	176 Move X8, 0x40E000
	177 Move X8, [X8+1912]
	178 Move X0, X21
	179 Move X1, X22
	180 Move W2, W31
	181 Move X3, [X8]
	182 Call 0x21A2534, X0, X1, X2
	183 Move X20, [X20+144]
	184 Compare X20, 0
	185 JumpIfEqual {287}
	186 Move X10, 0x40D000
	187 Move X8, [X20]
	188 Move X10, [X10+3712]
	189 Move X22, 0x40E000
	190 Move X21, 0x454000
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X1, [X10]
	193 Move X22, [X22+1632]
	194 Move X21, [X21+2936]
	195 Compare X9, 0
	196 JumpIfEqual {203}
	197 Move X10, [X8+176]
	198 Add X10, X10, 8
	199 NotImplemented "Instruction LDUR not yet implemented."
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Subtract X9, X9, 1
	202 Add X10, X10, 16
	203 Move X0, X20
	204 Move W2, W31
	205 Call 0x1C5D788
	206 Move X20, [X31+48]
	207 Move X19, [X31+56]
	208 Move X22, [X31+32]
	209 Move X21, [X31+40]
	210 Move X24, [X31+16]
	211 Move X23, [X31+24]
	212 Move X30, [X31+64]
	213 Move X25, [X31+72]
	214 Return 
	215 NotImplemented "Instruction LDRSW not yet implemented."
	216 Add X8, X8, X9
	217 Add X0, X8, 312
	218 Move X8, [X0]
	219 Move X1, [X0+8]
	220 Move X0, X20
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move X8, [X22]
	223 Move X20, X0
	224 Move X0, X8
	225 Call 0x1C17F10
	226 Move X2, [X21]
	227 Move X1, X19
	228 Move X3, X31
	229 Move X21, X0
	230 Call 0x2D0F824, X0, X1, X2
	231 Compare X20, 0
	232 JumpIfEqual {287}
	233 Move X23, 0x40E000
	234 Move X23, [X23+1624]
	235 Move X24, 0x454000
	236 Move X0, X20
	237 Move X1, X21
	238 Move X3, [X23]
	239 Move X24, [X24+2920]
	240 Move W2, W31
	241 Call 0x21A2534, X0, X1, X2
	242 Move X0, [X22]
	243 Move X20, [X19+40]
	244 Call 0x1C17F10
	245 Move X2, [X24]
	246 Move X1, X19
	247 Move X3, X31
	248 Move X21, X0
	249 Call 0x2D0F824, X0, X1, X2
	250 Compare X20, 0
	251 JumpIfEqual {287}
	252 Move X3, [X23]
	253 Move X22, 0x40E000
	254 Move X23, 0x454000
	255 Move X22, [X22+3504]
	256 Move X23, [X23+2928]
	257 Move X0, X20
	258 Move X1, X21
	259 Move W2, W31
	260 Call 0x21A2534, X0, X1, X2
	261 Move X0, [X22]
	262 Move X20, [X19+40]
	263 Call 0x1C17F10
	264 Move X2, [X23]
	265 Move X1, X19
	266 Move X3, X31
	267 Move X21, X0
	268 Call 0x2D0F824, X0, X1, X2
	269 Compare X20, 0
	270 JumpIfEqual {287}
	271 Move X8, 0x40E000
	272 Move X8, [X8+3496]
	273 Move X0, X20
	274 Move X1, X21
	275 Move X20, [X31+48]
	276 Move X19, [X31+56]
	277 Move X3, [X8]
	278 Move X22, [X31+32]
	279 Move X21, [X31+40]
	280 Move X24, [X31+16]
	281 Move X23, [X31+24]
	282 Move W2, W31
	283 Move X30, [X31+64]
	284 Move X25, [X31+72]
	285 Call 0x21A2534, X0, X1, X2
	286 Return 
	287 Call 0x1C17F20

Method: System.Void OnDetachFromPanel(UnityEngine.UIElements.DetachFromPanelEvent evt)

Disassembly:
	0x03D10A10 LDR X0, [X0 + 0xBC0]
	0x03D10A14 BL 0x1C16CF4
	0x03D10A18 ADRP X0, 0x40B000
	0x03D10A1C LDR X0, [X0 + 0x898]
	0x03D10A20 BL 0x1C16CF4
	0x03D10A24 ADRP X0, 0x3E4000
	0x03D10A28 LDR X0, [X0 + 0xEC8]
	0x03D10A2C BL 0x1C16CF4
	0x03D10A30 MOVZ W8, 0x1
	0x03D10A34 STRB W8, [X22 + 0x8BB]
	0x03D10A38 MOV X0, X20
	0x03D10A3C MOV X1, X31
	0x03D10A40 BL 0x32277A8
	0x03D10A44 TBNZ X0, 0x0, 0x3D10A68
	0x03D10A48 CBZ X20, 0x3D10CCC
	0x03D10A4C ADRP X8, 0x3E4000
	0x03D10A50 LDR X8, [X8 + 0xEC8]
	0x03D10A54 MOV X0, X20
	0x03D10A58 MOV X2, X31
	0x03D10A5C LDR X1, [X8]
	0x03D10A60 BL 0x3226588
	0x03D10A64 TBZ X0, 0x0, 0x3D10A90
	0x03D10A68 MOV X0, X19
	0x03D10A6C BL 0x3D10CF4
	0x03D10A70 MOV X21, X31
	0x03D10A74 MOV X0, X21
	0x03D10A78 LDP X20, X19, [X31 + 0x40]
	0x03D10A7C LDP X22, X21, [X31 + 0x30]
	0x03D10A80 LDP X24, X23, [X31 + 0x20]
	0x03D10A84 LDP X26, X25, [X31 + 0x10]
	0x03D10A88 LDR X30, [X31], #0x50
	0x03D10A8C RET
	0x03D10A90 LDR X0, [X19 + 0x10]
	0x03D10A94 CBZ X0, 0x3D10CCC
	0x03D10A98 ADRP X25, 0x453000
	0x03D10A9C LDR X25, [X25 + 0xBA0]
	0x03D10AA0 MOV W22, W31
	0x03D10AA4 LDR W8, [X0 + 0x18]
	0x03D10AA8 CMP W22, W8
	0x03D10AAC B.GE 0x3D10AE4
	0x03D10AB0 LDR X2, [X25]
	0x03D10AB4 MOV W1, W22
	0x03D10AB8 BL 0x301BCCC
	0x03D10ABC CBZ X0, 0x3D10CCC
	0x03D10AC0 LDR X1, [X0 + 0x10]
	0x03D10AC4 MOV X0, X20
	0x03D10AC8 MOV X2, X31
	0x03D10ACC BL 0x321BA08
	0x03D10AD0 TBNZ X0, 0x0, 0x3D10A70
	0x03D10AD4 LDR X0, [X19 + 0x10]
	0x03D10AD8 ADD W22, W22, 0x1
	0x03D10ADC CBNZ X0, 0x3D10AA4
	0x03D10AE0 B 0x3D10CCC
	0x03D10AE4 ADRP X26, 0x40B000
	0x03D10AE8 LDR X26, [X26 + 0x898]
	0x03D10AEC LDR X0, [X26]
	0x03D10AF0 BL 0x1C16F10
	0x03D10AF4 MOV X1, X31
	0x03D10AF8 MOV X22, X0
	0x03D10AFC BL 0x3DEF578
	0x03D10B00 ADRP X25, 0x40E000
	0x03D10B04 LDR X25, [X25 + 0xC8]
	0x03D10B08 LDR X0, [X25]
	0x03D10B0C LDR W8, [X0 + 0xE0]
	0x03D10B10 CBNZ W8, 0x3D10B18
	0x03D10B14 BL 0x1C16DFC
	0x03D10B18 CBZ X22, 0x3D10CCC
	0x03D10B1C LDR X8, [X25]
	0x03D10B20 MOV X0, X22
	0x03D10B24 MOV X2, X31
	0x03D10B28 LDR X8, [X8 + 0xB8]
	0x03D10B2C LDR X1, [X8 + 0x8]
	0x03D10B30 BL 0x3DF1C70
	0x03D10B34 AND W1, W24, 0x1
	0x03D10B38 MOV X0, X22
	0x03D10B3C MOV X2, X31
	0x03D10B40 BL 0x3DEF834
	0x03D10B44 MOV X0, X22
	0x03D10B48 MOV X1, X23
	0x03D10B4C MOV X2, X31
	0x03D10B50 BL 0x3DEBB90
	0x03D10B54 LDR X0, [X26]
	0x03D10B58 BL 0x1C16F10
	0x03D10B5C MOV X1, X31
	0x03D10B60 MOV X23, X0
	0x03D10B64 BL 0x3DEF578
	0x03D10B68 CBZ X23, 0x3D10CCC
	0x03D10B6C LDR X8, [X25]
	0x03D10B70 MOV X0, X23
	0x03D10B74 MOV X2, X31
	0x03D10B78 LDR X8, [X8 + 0xB8]
	0x03D10B7C LDR X1, [X8 + 0x28]
	0x03D10B80 BL 0x3DF1C70
	0x03D10B84 MOVZ W1, 0x1
	0x03D10B88 MOV X0, X23
	0x03D10B8C MOV X2, X31
	0x03D10B90 BL 0x3DEF238
	0x03D10B94 MOV X0, X22
	0x03D10B98 MOV X1, X23
	0x03D10B9C MOV X2, X31
	0x03D10BA0 BL 0x3DF60E8
	0x03D10BA4 TBZ X21, 0x0, 0x3D10BC4
	0x03D10BA8 MOV X0, X22
	0x03D10BAC MOV X1, X31
	0x03D10BB0 BL 0x3DEEF88
	0x03D10BB4 ORR W1, W0, 0x8
	0x03D10BB8 MOV X0, X22
	0x03D10BBC MOV X2, X31
	0x03D10BC0 BL 0x3DEEF90
	0x03D10BC4 ADRP X8, 0x40C000
	0x03D10BC8 LDR X8, [X8 + 0x130]
	0x03D10BCC LDR X0, [X8]
	0x03D10BD0 BL 0x1C16F10
	0x03D10BD4 MOV X1, X20
	0x03D10BD8 MOV X2, X31
	0x03D10BDC MOV X21, X0
	0x03D10BE0 BL 0x3D6B65C
	0x03D10BE4 LDR X0, [X25]
	0x03D10BE8 LDR W8, [X0 + 0xE0]
	0x03D10BEC CBNZ W8, 0x3D10BF4
	0x03D10BF0 BL 0x1C16DFC
	0x03D10BF4 CBZ X21, 0x3D10CCC
	0x03D10BF8 LDR X8, [X25]
	0x03D10BFC MOV X0, X21
	0x03D10C00 MOV X2, X31
	0x03D10C04 LDR X8, [X8 + 0xB8]
	0x03D10C08 LDR X1, [X8 + 0x10]
	0x03D10C0C BL 0x3DF1C70
	0x03D10C10 MOVZ W1, 0x1
	0x03D10C14 MOV X0, X21
	0x03D10C18 MOV X2, X31
	0x03D10C1C BL 0x3DEF238
	0x03D10C20 MOV X0, X22
	0x03D10C24 MOV X1, X21
	0x03D10C28 MOV X2, X31
	0x03D10C2C BL 0x3DF60E8
	0x03D10C30 LDR X0, [X19 + 0x28]
	0x03D10C34 CBZ X0, 0x3D10CCC
	0x03D10C38 MOV X1, X22
	0x03D10C3C MOV X2, X31
	0x03D10C40 BL 0x3DF60E8
	0x03D10C44 ADRP X8, 0x453000
	0x03D10C48 LDR X8, [X8 + 0xBC0]
	0x03D10C4C LDR X0, [X8]
	0x03D10C50 BL 0x1C16F10
	0x03D10C54 MOV X1, X31
	0x03D10C58 MOV X21, X0
	0x03D10C5C BL 0x33BDD8C
	0x03D10C60 CBZ X21, 0x3D10CCC
	0x03D10C64 STP X20, X22, [X21 + 0x10]
	0x03D10C68 LDR X0, [X19 + 0x10]
	0x03D10C6C CBZ X0, 0x3D10CCC
	0x03D10C70 ADRP X9, 0x453000
	0x03D10C74 LDR X9, [X9 + 0xBB8]
	0x03D10C78 LDR W10, [X0 + 0x1C]
	0x03D10C7C LDR X8, [X0 + 0x10]
	0x03D10C80 LDR X9, [X9]
	0x03D10C84 ADD W10, W10, 0x1
	0x03D10C88 STR W10, [X0 + 0x1C]
	0x03D10C8C CBZ X8, 0x3D10CCC
	0x03D10C90 LDRSW X10, [X0 + 0x18]
	0x03D10C94 LDR W11, [X8 + 0x18]
	0x03D10C98 CMP W10, W11
	0x03D10C9C B.CS 0x3D10CB4
	0x03D10CA0 ADD W9, W10, 0x1
	0x03D10CA4 ADD X8, X8, X10, 0x3, LSL
	0x03D10CA8 STR W9, [X0 + 0x18]
	0x03D10CAC STR X21, [X8 + 0x20]
	0x03D10CB0 B 0x3D10A74
	0x03D10CB4 LDR X8, [X9 + 0x20]
	0x03D10CB8 MOV X1, X21
	0x03D10CBC LDR X8, [X8 + 0xC0]
	0x03D10CC0 LDR X2, [X8 + 0x70]
	0x03D10CC4 BL 0x301BF90
	0x03D10CC8 B 0x3D10A74
	0x03D10CCC BL 0x1C16F20
	0x03D10CD0 STP X30, X19, [X31 - 0x10]!
	0x03D10CD4 MOV X19, X3
	0x03D10CD8 AND W2, W2, 0x1
	0x03D10CDC MOVZ W3, 0x1
	0x03D10CE0 BL 0x3D1099C
	0x03D10CE4 CBZ X0, 0x3D10CEC
	0x03D10CE8 STR X19, [X0 + 0x28]
	0x03D10CEC LDP X30, X19, [X31], #0x10
	0x03D10CF0 RET
	0x03D10CF4 STR X30, [X31 - 0x30]!
	0x03D10CF8 STP X22, X21, [X31 + 0x10]
	0x03D10CFC STP X20, X19, [X31 + 0x20]
	0x03D10D00 ADRP X20, 0x6D7000
	0x03D10D04 ADRP X22, 0x40B000
	0x03D10D08 ADRP X21, 0x40E000
	0x03D10D0C LDRB W8, [X20 + 0x8BA]
	0x03D10D10 LDR X22, [X22 + 0x898]
	0x03D10D14 LDR X21, [X21 + 0xC8]
	0x03D10D18 MOV X19, X0
	0x03D10D1C TBNZ X8, 0x0, 0x3D10D40
	0x03D10D20 ADRP X0, 0x40E000
	0x03D10D24 LDR X0, [X0 + 0xC8]
	0x03D10D28 BL 0x1C16CF4
	0x03D10D2C ADRP X0, 0x40B000
	0x03D10D30 LDR X0, [X0 + 0x898]
	0x03D10D34 BL 0x1C16CF4
	0x03D10D38 MOVZ W8, 0x1
	0x03D10D3C STRB W8, [X20 + 0x8BA]
	0x03D10D40 LDR X0, [X22]
	0x03D10D44 BL 0x1C16F10
	0x03D10D48 MOV X1, X31
	0x03D10D4C MOV X20, X0
	0x03D10D50 BL 0x3DEF578
	0x03D10D54 LDR X0, [X21]
	0x03D10D58 LDR W8, [X0 + 0xE0]
	0x03D10D5C CBNZ W8, 0x3D10D64
	0x03D10D60 BL 0x1C16DFC
	0x03D10D64 CBZ X20, 0x3D10DB0
	0x03D10D68 LDR X8, [X21]
	0x03D10D6C MOV X0, X20
	0x03D10D70 MOV X2, X31
	0x03D10D74 LDR X8, [X8 + 0xB8]
	0x03D10D78 LDR X1, [X8 + 0x30]
	0x03D10D7C BL 0x3DF1C70
	0x03D10D80 MOVZ W1, 0x1
	0x03D10D84 MOV X0, X20
	0x03D10D88 MOV X2, X31
	0x03D10D8C BL 0x3DEF238
	0x03D10D90 LDR X0, [X19 + 0x28]
	0x03D10D94 CBZ X0, 0x3D10DB0
	0x03D10D98 MOV X1, X20
	0x03D10D9C LDP X20, X19, [X31 + 0x20]
	0x03D10DA0 LDP X22, X21, [X31 + 0x10]
	0x03D10DA4 MOV X2, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6D8000
	009 Move W8, [X21+2225]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {72}
	016 Move X0, 0x40E000
	017 Move X0, [X0+3520]
	018 Call 0x1C17CF4
	019 Move X0, 0x40E000
	020 Move X0, [X0+1688]
	021 Call 0x1C17CF4
	022 Move X0, 0x40E000
	023 Move X0, [X0+1936]
	024 Call 0x1C17CF4
	025 Move X0, 0x40F000
	026 Move X0, [X0+3368]
	027 Call 0x1C17CF4
	028 Move X0, 0x40E000
	029 Move X0, [X0+1944]
	030 Call 0x1C17CF4
	031 Move X0, 0x40E000
	032 Move X0, [X0+1632]
	033 Call 0x1C17CF4
	034 Move X0, 0x40F000
	035 Move X0, [X0+160]
	036 Call 0x1C17CF4
	037 Move X0, 0x40E000
	038 Move X0, [X0+3504]
	039 Call 0x1C17CF4
	040 Move X0, 0x40E000
	041 Move X0, [X0+1920]
	042 Call 0x1C17CF4
	043 Move X0, 0x40E000
	044 Move X0, [X0+1928]
	045 Call 0x1C17CF4
	046 Move X0, 0x454000
	047 Move X0, [X0+2920]
	048 Call 0x1C17CF4
	049 Move X0, 0x454000
	050 Move X0, [X0+2928]
	051 Call 0x1C17CF4
	052 Move X0, 0x454000
	053 Move X0, [X0+2936]
	054 Call 0x1C17CF4
	055 Move X0, 0x454000
	056 Move X0, [X0+2944]
	057 Call 0x1C17CF4
	058 Move X0, 0x454000
	059 Move X0, [X0+2952]
	060 Call 0x1C17CF4
	061 Move X0, 0x454000
	062 Move X0, [X0+2960]
	063 Call 0x1C17CF4
	064 Move X0, 0x40D000
	065 Move X0, [X0+3712]
	066 Call 0x1C17CF4
	067 Move X0, 0x454000
	068 Move X0, [X0+200]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X21+2225], W8
	072 Compare X20, 0
	073 JumpIfEqual {252}
	074 Move X8, [X20+136]
	075 Compare X8, 0
	076 JumpIfEqual {173}
	077 Move X0, [X19+40]
	078 Compare X0, 0
	079 JumpIfEqual {252}
	080 Move X8, [X0]
	081 Move X22, 0x40E000
	082 Move X23, 0x454000
	083 Move X9, [X8+1896]
	084 Move X1, [X8+1904]
	085 Move X22, [X22+1920]
	086 Move X23, [X23+2944]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X1, [X19+80]
	089 Move X2, X31
	090 Call VisualElementExtensions.RemoveManipulator, X0, X1
	091 Move X0, [X22]
	092 Move X21, [X19+24]
	093 Call 0x1C17F10
	094 Move X2, [X23]
	095 Move X1, X19
	096 Move X3, X31
	097 Move X22, X0
	098 Call 0x2D0F824, X0, X1, X2
	099 Compare X21, 0
	100 JumpIfEqual {252}
	101 Move X8, 0x40E000
	102 Move X8, [X8+1936]
	103 Move X23, 0x40F000
	104 Move X24, 0x454000
	105 Move X0, X21
	106 Move X3, [X8]
	107 Move X23, [X23+160]
	108 Move X24, [X24+2952]
	109 Move X1, X22
	110 Move W2, W31
	111 Call 0x21A28B4, X0, X1, X2
	112 Move X0, [X23]
	113 Move X21, [X19+24]
	114 Call 0x1C17F10
	115 Move X2, [X24]
	116 Move X1, X19
	117 Move X3, X31
	118 Move X22, X0
	119 Call 0x2D0F824, X0, X1, X2
	120 Compare X21, 0
	121 JumpIfEqual {252}
	122 Move X8, 0x40F000
	123 Move X8, [X8+3368]
	124 Move X23, 0x40E000
	125 Move X24, 0x454000
	126 Move X0, X21
	127 Move X3, [X8]
	128 Move X23, [X23+1928]
	129 Move X24, [X24+2960]
	130 Move X1, X22
	131 Move W2, W31
	132 Call 0x21A28B4, X0, X1, X2
	133 Move X0, [X23]
	134 Move X21, [X19+24]
	135 Call 0x1C17F10
	136 Move X2, [X24]
	137 Move X1, X19
	138 Move X3, X31
	139 Move X22, X0
	140 Call 0x2D0F824, X0, X1, X2
	141 Compare X21, 0
	142 JumpIfEqual {252}
	143 Move X8, 0x40E000
	144 Move X8, [X8+1944]
	145 Move X0, X21
	146 Move X1, X22
	147 Move W2, W31
	148 Move X3, [X8]
	149 Call 0x21A28B4, X0, X1, X2
	150 Move X20, [X20+136]
	151 Compare X20, 0
	152 JumpIfEqual {252}
	153 Move X10, 0x40D000
	154 Move X8, [X20]
	155 Move X10, [X10+3712]
	156 Move X22, 0x40E000
	157 Move X21, 0x454000
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Move X1, [X10]
	160 Move X22, [X22+1632]
	161 Move X21, [X21+2936]
	162 Compare X9, 0
	163 JumpIfEqual {170}
	164 Move X10, [X8+176]
	165 Add X10, X10, 8
	166 NotImplemented "Instruction LDUR not yet implemented."
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Subtract X9, X9, 1
	169 Add X10, X10, 16
	170 Move X0, X20
	171 Move W2, W31
	172 Call 0x1C5D788
	173 Move X20, [X31+48]
	174 Move X19, [X31+56]
	175 Move X22, [X31+32]
	176 Move X21, [X31+40]
	177 Move X24, [X31+16]
	178 Move X23, [X31+24]
	179 Move X30, [X31+64]
	180 Return 
	181 NotImplemented "Instruction LDRSW not yet implemented."
	182 Add X8, X8, X9
	183 Add X0, X8, 312
	184 Move X8, [X0]
	185 Move X1, [X0+8]
	186 Move X0, X20
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Move X8, [X22]
	189 Move X20, X0
	190 Move X0, X8
	191 Call 0x1C17F10
	192 Move X2, [X21]
	193 Move X1, X19
	194 Move X3, X31
	195 Move X21, X0
	196 Call 0x2D0F824, X0, X1, X2
	197 Compare X20, 0
	198 JumpIfEqual {252}
	199 Move X23, 0x40E000
	200 Move X23, [X23+1688]
	201 Move X24, 0x454000
	202 Move X0, X20
	203 Move X1, X21
	204 Move X3, [X23]
	205 Move X24, [X24+2920]
	206 Move W2, W31
	207 Call 0x21A28B4, X0, X1, X2
	208 Move X0, [X22]
	209 Move X20, [X19+40]
	210 Call 0x1C17F10
	211 Move X2, [X24]
	212 Move X1, X19
	213 Move X3, X31
	214 Move X21, X0
	215 Call 0x2D0F824, X0, X1, X2
	216 Compare X20, 0
	217 JumpIfEqual {252}
	218 Move X3, [X23]
	219 Move X22, 0x40E000
	220 Move X23, 0x454000
	221 Move X22, [X22+3504]
	222 Move X23, [X23+2928]
	223 Move X0, X20
	224 Move X1, X21
	225 Move W2, W31
	226 Call 0x21A28B4, X0, X1, X2
	227 Move X0, [X22]
	228 Move X20, [X19+40]
	229 Call 0x1C17F10
	230 Move X2, [X23]
	231 Move X1, X19
	232 Move X3, X31
	233 Move X21, X0
	234 Call 0x2D0F824, X0, X1, X2
	235 Compare X20, 0
	236 JumpIfEqual {252}
	237 Move X8, 0x40E000
	238 Move X8, [X8+3520]
	239 Move X0, X20
	240 Move X1, X21
	241 Move X20, [X31+48]
	242 Move X19, [X31+56]
	243 Move X3, [X8]
	244 Move X22, [X31+32]
	245 Move X21, [X31+40]
	246 Move X24, [X31+16]
	247 Move X23, [X31+24]
	248 Move W2, W31
	249 Move X30, [X31+64]
	250 Call 0x21A28B4, X0, X1, X2
	251 Return 
	252 Call 0x1C17F20

Method: System.Void Hide(System.Boolean giveFocusBack = False)

Disassembly:
	0x03D10DA8 LDR X30, [X31], #0x30
	0x03D10DAC B 0x3DF60E8
	0x03D10DB0 BL 0x1C16F20
	0x03D10DB4 MOV X1, X31
	0x03D10DB8 B 0x33BDD8C
	0x03D10DBC SUB X31, X31, 0xD0
	0x03D10DC0 STP D13, D12, [X31 + 0x60]
	0x03D10DC4 STP D11, D10, [X31 + 0x70]
	0x03D10DC8 STP D9, D8, [X31 + 0x80]
	0x03D10DCC STP X30, X25, [X31 + 0x90]
	0x03D10DD0 STP X24, X23, [X31 + 0xA0]
	0x03D10DD4 STP X22, X21, [X31 + 0xB0]
	0x03D10DD8 STP X20, X19, [X31 + 0xC0]
	0x03D10DDC ADRP X22, 0x6D7000
	0x03D10DE0 LDRB W8, [X22 + 0x8BC]
	0x03D10DE4 MOV W21, W2
	0x03D10DE8 MOV X19, X1
	0x03D10DEC MOV V8.16B, V3.16B
	0x03D10DF0 MOV V9.16B, V2.16B
	0x03D10DF4 MOV V10.16B, V1.16B
	0x03D10DF8 MOV V11.16B, V0.16B
	0x03D10DFC MOV X20, X0
	0x03D10E00 TBNZ X8, 0x0, 0x3D10E78
	0x03D10E04 ADRP X0, 0x3E4000
	0x03D10E08 LDR X0, [X0 + 0xE70]
	0x03D10E0C BL 0x1C16CF4
	0x03D10E10 ADRP X0, 0x40D000
	0x03D10E14 LDR X0, [X0 + 0xD68]
	0x03D10E18 BL 0x1C16CF4
	0x03D10E1C ADRP X0, 0x3E3000
	0x03D10E20 LDR X0, [X0 + 0xA28]
	0x03D10E24 BL 0x1C16CF4
	0x03D10E28 ADRP X0, 0x40D000
	0x03D10E2C LDR X0, [X0 + 0xD78]
	0x03D10E30 BL 0x1C16CF4
	0x03D10E34 ADRP X0, 0x453000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+24]
	007 Compare X0, 0
	008 JumpIfEqual {50}
	009 Move W20, W1
	010 Move X1, X31
	011 Call VisualElement.RemoveFromHierarchy, X0
	012 Move X21, [X19+56]
	013 Compare X21, 0
	014 JumpIfEqual {44}
	015 Move X0, X21
	016 Move X1, X31
	017 Call VisualElement.get_pseudoStates, X0
	018 Xor W1, W0, 1
	019 Move X0, X21
	020 Move X2, X31
	021 Call VisualElement.set_pseudoStates, X0, X1
	022 Move TEMP, X20
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {44}
	026 Move X0, [X19+56]
	027 Compare X0, 0
	028 JumpIfEqual {50}
	029 Move X8, [X0]
	030 Move X9, [X8+568]
	031 Move X1, [X8+576]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {44}
	037 Move X0, [X19+56]
	038 Compare X0, 0
	039 JumpIfEqual {50}
	040 Move X8, [X0]
	041 Move X9, [X8+584]
	042 Move X1, [X8+592]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move [X19+56], X31
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return 
	050 Call 0x1C17F20

Method: System.Void Apply(UnityEngine.UIElements.KeyboardNavigationOperation op, UnityEngine.UIElements.EventBase sourceEvent)

Disassembly:
	0x03D10E38 LDR X0, [X0 + 0xBC8]
	0x03D10E3C BL 0x1C16CF4
	0x03D10E40 ADRP X0, 0x40C000
	0x03D10E44 LDR X0, [X0 + 0x128]
	0x03D10E48 BL 0x1C16CF4
	0x03D10E4C ADRP X0, 0x40B000
	0x03D10E50 LDR X0, [X0 + 0x680]
	0x03D10E54 BL 0x1C16CF4
	0x03D10E58 ADRP X0, 0x453000
	0x03D10E5C LDR X0, [X0 + 0xBD0]
	0x03D10E60 BL 0x1C16CF4
	0x03D10E64 ADRP X0, 0x453000
	0x03D10E68 LDR X0, [X0 + 0xBD8]
	0x03D10E6C BL 0x1C16CF4
	0x03D10E70 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X2
	004 Call GenericDropdownMenu.Apply, X0, X1
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {20}
	009 Compare X19, 0
	010 JumpIfEqual {23}
	011 Move X0, X19
	012 Move X1, X31
	013 Call EventBase.StopPropagation, X0
	014 Move X0, X19
	015 Move X1, X31
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call EventBase.PreventDefault, X0
	019 Return 
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return 
	023 Call 0x1C17F20

Method: System.Boolean Apply(UnityEngine.UIElements.KeyboardNavigationOperation op)

Disassembly:
	0x03D10E74 STRB W8, [X22 + 0x8BC]
	0x03D10E78 CBZ X19, 0x3D10F74
	0x03D10E7C ADRP X8, 0x40D000
	0x03D10E80 LDR X8, [X8 + 0xD78]
	0x03D10E84 STR X19, [X20 + 0x38]
	0x03D10E88 ADRP X22, 0x453000
	0x03D10E8C ADRP X23, 0x40D000
	0x03D10E90 LDR X0, [X8]
	0x03D10E94 LDR X22, [X22 + 0xBC8]
	0x03D10E98 LDR X23, [X23 + 0xD68]
	0x03D10E9C BL 0x1C16F10
	0x03D10EA0 LDR X2, [X22]
	0x03D10EA4 MOV X1, X20
	0x03D10EA8 MOV X3, X31
	0x03D10EAC MOV X22, X0
	0x03D10EB0 BL 0x2D0E824
	0x03D10EB4 LDR X3, [X23]
	0x03D10EB8 MOV X0, X19
	0x03D10EBC MOV X1, X22
	0x03D10EC0 MOV W2, W31
	0x03D10EC4 BL 0x21A1534
	0x03D10EC8 LDR X0, [X20 + 0x38]
	0x03D10ECC CBZ X0, 0x3D116E0
	0x03D10ED0 MOV X1, X31
	0x03D10ED4 BL 0x3DF6C64
	0x03D10ED8 STR X0, [X20 + 0x30]
	0x03D10EDC CBZ X0, 0x3D10F98
	0x03D10EE0 LDR X1, [X20 + 0x18]
	0x03D10EE4 MOV X2, X31
	0x03D10EE8 BL 0x3DF60E8
	0x03D10EEC LDR X0, [X20 + 0x18]
	0x03D10EF0 CBZ X0, 0x3D116E0
	0x03D10EF4 MOV X1, X31
	0x03D10EF8 BL 0x3DE7EEC
	0x03D10EFC LDR X8, [X20 + 0x30]
	0x03D10F00 CBZ X8, 0x3D116E0
	0x03D10F04 MOV X22, X0
	0x03D10F08 MOV X0, X8
	0x03D10F0C MOV X1, X31
	0x03D10F10 BL 0x3DEC528
	0x03D10F14 MOV X0, X31
	0x03D10F18 BL 0x3DFED98
	0x03D10F1C CBZ X22, 0x3D116E0
	0x03D10F20 ADRP X25, 0x40C000
	0x03D10F24 LDR X9, [X22]
	0x03D10F28 LDR X25, [X25 + 0x128]
	0x03D10F2C MOV X8, X1
	0x03D10F30 MOV X23, X0
	0x03D10F34 LDRH W10, [X9 + 0x12E]
	0x03D10F38 LDR X1, [X25]
	0x03D10F3C AND X24, X8, 0x0
	0x03D10F40 CBZ X10, 0x3D10F64
	0x03D10F44 LDR X8, [X9 + 0xB0]
	0x03D10F48 ADD X8, X8, 0x8
	0x03D10F4C LDUR X11, [X8 - 0x8]
	0x03D10F50 CMP X11, X1
	0x03D10F54 B.EQ 0x3D10FE4
	0x03D10F58 SUBS X10, X10, 0x1
	0x03D10F5C ADD X8, X8, 0x10
	0x03D10F60 B.NE 0x3D10F4C
	0x03D10F64 MOVZ W2, 0x19
	0x03D10F68 MOV X0, X22
	0x03D10F6C BL 0x1C5C788
	0x03D10F70 B 0x3D10FF4
	0x03D10F74 ADRP X8, 0x3E3000
	0x03D10F78 LDR X8, [X8 + 0xA28]
	0x03D10F7C LDR X0, [X8]
	0x03D10F80 LDR W8, [X0 + 0xE0]
	0x03D10F84 CBNZ W8, 0x3D10F8C
	0x03D10F88 BL 0x1C16DFC
	0x03D10F8C ADRP X8, 0x453000
	0x03D10F90 LDR X8, [X8 + 0xBD8]
	0x03D10F94 B 0x3D10FB8
	0x03D10F98 ADRP X8, 0x3E3000
	0x03D10F9C LDR X8, [X8 + 0xA28]
	0x03D10FA0 LDR X0, [X8]
	0x03D10FA4 LDR W8, [X0 + 0xE0]
	0x03D10FA8 CBNZ W8, 0x3D10FB0
	0x03D10FAC BL 0x1C16DFC
	0x03D10FB0 ADRP X8, 0x453000
	0x03D10FB4 LDR X8, [X8 + 0xBD0]
	0x03D10FB8 LDR X0, [X8]
	0x03D10FBC LDP X20, X19, [X31 + 0xC0]
	0x03D10FC0 LDP X22, X21, [X31 + 0xB0]
	0x03D10FC4 LDP X24, X23, [X31 + 0xA0]
	0x03D10FC8 LDP X30, X25, [X31 + 0x90]
	0x03D10FCC LDP D9, D8, [X31 + 0x80]
	0x03D10FD0 LDP D11, D10, [X31 + 0x70]
	0x03D10FD4 LDP D13, D12, [X31 + 0x60]
	0x03D10FD8 MOV X1, X31
	0x03D10FDC ADD X31, X31, 0xD0
	0x03D10FE0 B 0x3C0649C
	0x03D10FE4 LDR W8, [X8]
	0x03D10FE8 ADD W8, W8, 0x19
	0x03D10FEC ADD X8, X9, W8, 0x4, SXTW
	0x03D10FF0 ADD X0, X8, 0x138
	0x03D10FF4 LDP X8, X3, [X0]
	0x03D10FF8 MOV X0, X22
	0x03D10FFC MOV X1, X23
	0x03D11000 MOV X2, X24
	0x03D11004 BLR X8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0x6D8000
	008 Move W8, [X20+2226]
	009 Move W22, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x454000
	016 Move X0, [X0+2968]
	017 Call 0x1C17CF4
	018 Move X0, 0x454000
	019 Move X0, [X0+2976]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2226], W8
	023 Move X0, X19
	024 Move [X31], X19
	025 Move [X31+8], X31
	026 Call GenericDropdownMenu.GetSelectedIndex, X0
	027 Subtract W8, W22, 2
	028 Move W20, W31
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X31+8], W0
	031 Move X9, -51871744
	032 Add X9, X9, 3972
	033 NotImplemented "Instruction ADR not yet implemented."
	034 Move W11, [X9]
	035 Add X10, X10, X11
	036 Move W21, W0
	037 CallNoReturn X10
	038 Add X2, X31, 0
	039 Move X0, X19
	040 Move W1, W31
	041 Move X8, [X19+16]
	042 Compare X8, 0
	043 JumpIfEqual {119}
	044 Move W8, [X8+24]
	045 Subtract W1, W8, 1
	046 Move X0, [X19+16]
	047 Compare X0, 0
	048 JumpIfEqual {119}
	049 Move X8, 0x454000
	050 Move X8, [X8+2976]
	051 Move W1, W21
	052 Move X2, [X8]
	053 Call List`1<Object>.get_Item, X0, X1
	054 Move TEMP, X21
	055 And TEMP, TEMP, -2147483648
	056 Compare TEMP, -2147483648
	057 JumpIfEqual {88}
	058 Move X20, X0
	059 Compare X0, 0
	060 JumpIfEqual {119}
	061 Move X8, [X20+24]
	062 Compare X8, 0
	063 JumpIfEqual {119}
	064 Move W8, [X8+812]
	065 Compare W8, 0
	066 JumpIfEqual {88}
	067 Move X8, [X20+32]
	068 Compare X8, 0
	069 JumpIfEqual {74}
	070 Move X9, [X8+24]
	071 Move X0, [X8+64]
	072 Move X1, [X8+40]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X21, [X20+40]
	075 Compare X21, 0
	076 JumpIfEqual {88}
	077 Move X0, [X20+24]
	078 Compare X0, 0
	079 JumpIfEqual {119}
	080 Move X1, X31
	081 Call VisualElement.get_userData, X0
	082 Move X8, [X21+64]
	083 Move X9, [X21+24]
	084 Move X2, [X21+40]
	085 Move X1, X0
	086 Move X0, X8
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move W1, 1
	089 Move X0, X19
	090 Move W20, 1
	091 Call GenericDropdownMenu.Hide, X0, X1
	092 Move TEMP, X21
	093 And TEMP, TEMP, -2147483648
	094 Compare TEMP, -2147483648
	095 JumpIfEqual {102}
	096 Compare X19, 0
	097 JumpIfNotEqual {106}
	098 Add W1, W21, 1
	099 Add X2, X31, 0
	100 Move X0, X19
	101 Call GenericDropdownMenu.<Apply>g__UpdateSelectionDown|39_0, X0, X1, X2
	102 Move X8, [X19+16]
	103 Compare X8, 0
	104 JumpIfEqual {119}
	105 Move W21, [X8+24]
	106 Subtract W1, W21, 1
	107 Add X2, X31, 0
	108 Move X0, X19
	109 Call GenericDropdownMenu.<Apply>g__UpdateSelectionUp|39_1, X0, X1, X2
	110 Move W20, 1
	111 Move W0, W20
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X30, [X31+16]
	117 Add X31, X31, 64
	118 Return X0
	119 Call 0x1C17F20

Method: System.Void OnPointerDown(UnityEngine.UIElements.PointerDownEvent evt)

Disassembly:
	0x03D1120C BL 0x3DE7EEC
	0x03D11210 LDR X8, [X20 + 0x38]
	0x03D11214 CBZ X8, 0x3D116E0
	0x03D11218 MOV X22, X0
	0x03D1121C MOV X0, X8
	0x03D11220 MOV X1, X31
	0x03D11224 BL 0x3DE0F44
	0x03D11228 MOV X1, X31
	0x03D1122C BL 0x3DC61E0
	0x03D11230 MOV X1, X31
	0x03D11234 BL 0x3DFEDC0
	0x03D11238 CBZ X22, 0x3D116E0
	0x03D1123C LDR X9, [X22]
	0x03D11240 MOV X8, X1
	0x03D11244 LDR X1, [X25]
	0x03D11248 MOV X23, X0
	0x03D1124C LDRH W10, [X9 + 0x12E]
	0x03D11250 AND X24, X8, 0x0
	0x03D11254 CBZ X10, 0x3D11278
	0x03D11258 LDR X8, [X9 + 0xB0]
	0x03D1125C ADD X8, X8, 0x8
	0x03D11260 LDUR X11, [X8 - 0x8]
	0x03D11264 CMP X11, X1
	0x03D11268 B.EQ 0x3D11288
	0x03D1126C SUBS X10, X10, 0x1
	0x03D11270 ADD X8, X8, 0x10
	0x03D11274 B.NE 0x3D11260
	0x03D11278 MOVZ W2, 0x17
	0x03D1127C MOV X0, X22
	0x03D11280 BL 0x1C5C788
	0x03D11284 B 0x3D11298
	0x03D11288 LDR W8, [X8]
	0x03D1128C ADD W8, W8, 0x17
	0x03D11290 ADD X8, X9, W8, 0x4, SXTW
	0x03D11294 ADD X0, X8, 0x138
	0x03D11298 LDP X8, X3, [X0]
	0x03D1129C MOV X0, X22
	0x03D112A0 MOV X1, X23
	0x03D112A4 MOV X2, X24
	0x03D112A8 BLR X8
	0x03D112AC LDR X0, [X20 + 0x18]
	0x03D112B0 CBZ X0, 0x3D116E0
	0x03D112B4 MOV X1, X31
	0x03D112B8 BL 0x3DE7EEC
	0x03D112BC LDR X8, [X20 + 0x38]
	0x03D112C0 CBZ X8, 0x3D116E0
	0x03D112C4 MOV X22, X0
	0x03D112C8 MOV X0, X8
	0x03D112CC MOV X1, X31
	0x03D112D0 BL 0x3DE0F44
	0x03D112D4 MOV X1, X31
	0x03D112D8 BL 0x3DC9F48
	0x03D112DC MOV X1, X31
	0x03D112E0 BL 0x3DFE878
	0x03D112E4 CBZ X22, 0x3D116E0
	0x03D112E8 LDR X8, [X22]
	0x03D112EC MOV X24, X1
	0x03D112F0 LDR X1, [X25]
	0x03D112F4 MOV X23, X0
	0x03D112F8 LDRH W9, [X8 + 0x12E]
	0x03D112FC CBZ X9, 0x3D11320
	0x03D11300 LDR X10, [X8 + 0xB0]
	0x03D11304 ADD X10, X10, 0x8
	0x03D11308 LDUR X11, [X10 - 0x8]
	0x03D1130C CMP X11, X1
	0x03D11310 B.EQ 0x3D11330
	0x03D11314 SUBS X9, X9, 0x1
	0x03D11318 ADD X10, X10, 0x10
	0x03D1131C B.NE 0x3D11308
	0x03D11320 MOVZ W2, 0x32
	0x03D11324 MOV X0, X22
	0x03D11328 BL 0x1C5C788
	0x03D1132C B 0x3D11340
	0x03D11330 LDR W9, [X10]
	0x03D11334 ADD W9, W9, 0x32

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6D7000
	007 Move W8, [X21+2227]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x40E000
	015 Move X0, [X0+3320]
	016 Call 0x1C17CF4
	017 Move X0, 0x453000
	018 Move X0, [X0+2984]
	019 Call 0x1C17CF4
	020 Move X0, 0x40C000
	021 Move X0, [X0+3664]
	022 Call 0x1C17CF4
	023 Move X0, 0x40B000
	024 Move X0, [X0+2200]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2227], W8
	028 Compare X19, 0
	029 JumpIfEqual {86}
	030 Move X0, [X20+40]
	031 Move S0, [X19+180]
	032 Move S1, [X19+184]
	033 Move X21, 0x40C000
	034 Move X21, [X21+3664]
	035 Move X1, X31
	036 Call VisualElementExtensions.WorldToLocal, X0, X1
	037 Move X0, X19
	038 Move X1, X31
	039 Move [X20+92], S0
	040 Move [X20+100], S1
	041 Call EventBase.get_target, X0
	042 Compare X0, 0
	043 JumpIfEqual {51}
	044 Move X8, 0x40B000
	045 Move X8, [X8+2200]
	046 Move X9, [X0]
	047 Move X8, [X8]
	048 Move W11, [X9+304]
	049 Move W10, [X8+304]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X1, X31
	052 Move X9, [X9+200]
	053 Add X9, X9, X10
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSEL not yet implemented."
	057 Move X0, X20
	058 Call GenericDropdownMenu.UpdateSelection, X0, X1
	059 Move X0, [X21]
	060 Move W22, [X19+156]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X21]
	066 Move X8, [X0+184]
	067 Move W8, [X8+8]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, [X20+24]
	070 Compare X0, 0
	071 JumpIfEqual {86}
	072 Move X1, X31
	073 Call VisualElement.get_panel, X0
	074 Move W1, [X19+156]
	075 Move X2, X31
	076 Call PointerCaptureHelper.PreventCompatibilityMouseEvents, X0, X1
	077 Move X0, X19
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X1, X31
	083 Move X30, [X31+48]
	084 Call EventBase.StopPropagation, X0
	085 Return 
	086 Call 0x1C17F20

Method: System.Void OnPointerMove(UnityEngine.UIElements.PointerMoveEvent evt)

Disassembly:
	0x03D11468 MOV X0, X8
	0x03D1146C MOV X1, X31
	0x03D11470 BL 0x3DEC528
	0x03D11474 FSUB S0, S13, S0
	0x03D11478 MOV X0, X31
	0x03D1147C BL 0x3DFED98
	0x03D11480 CBZ X22, 0x3D116E0
	0x03D11484 LDR X9, [X22]
	0x03D11488 MOV X8, X1
	0x03D1148C LDR X1, [X25]
	0x03D11490 MOV X23, X0
	0x03D11494 LDRH W10, [X9 + 0x12E]
	0x03D11498 AND X24, X8, 0x0
	0x03D1149C CBZ X10, 0x3D114C0
	0x03D114A0 LDR X8, [X9 + 0xB0]
	0x03D114A4 ADD X8, X8, 0x8
	0x03D114A8 LDUR X11, [X8 - 0x8]
	0x03D114AC CMP X11, X1
	0x03D114B0 B.EQ 0x3D114D0
	0x03D114B4 SUBS X10, X10, 0x1
	0x03D114B8 ADD X8, X8, 0x10
	0x03D114BC B.NE 0x3D114A8
	0x03D114C0 MOVZ W2, 0x19
	0x03D114C4 MOV X0, X22
	0x03D114C8 BL 0x1C5C788
	0x03D114CC B 0x3D114E0
	0x03D114D0 LDR W8, [X8]
	0x03D114D4 ADD W8, W8, 0x19
	0x03D114D8 ADD X8, X9, W8, 0x4, SXTW
	0x03D114DC ADD X0, X8, 0x138
	0x03D114E0 LDP X8, X3, [X0]
	0x03D114E4 MOV X0, X22
	0x03D114E8 MOV X1, X23
	0x03D114EC MOV X2, X24
	0x03D114F0 BLR X8
	0x03D114F4 LDR X0, [X20 + 0x20]
	0x03D114F8 CBZ X0, 0x3D116E0
	0x03D114FC MOV X1, X31
	0x03D11500 BL 0x3DE7EEC
	0x03D11504 LDR X8, [X20 + 0x30]
	0x03D11508 CBZ X8, 0x3D116E0
	0x03D1150C MOV X22, X0
	0x03D11510 MOV X0, X8
	0x03D11514 MOV X1, X31
	0x03D11518 BL 0x3DEC528
	0x03D1151C FADD S0, S8, S12
	0x03D11520 FSUB S0, S0, S1
	0x03D11524 MOV X0, X31
	0x03D11528 BL 0x3DFED98
	0x03D1152C CBZ X22, 0x3D116E0
	0x03D11530 LDR X9, [X22]
	0x03D11534 MOV X8, X1
	0x03D11538 LDR X1, [X25]
	0x03D1153C MOV X23, X0
	0x03D11540 LDRH W10, [X9 + 0x12E]
	0x03D11544 AND X24, X8, 0x0
	0x03D11548 CBZ X10, 0x3D1156C
	0x03D1154C LDR X8, [X9 + 0xB0]
	0x03D11550 ADD X8, X8, 0x8
	0x03D11554 LDUR X11, [X8 - 0x8]
	0x03D11558 CMP X11, X1
	0x03D1155C B.EQ 0x3D1157C
	0x03D11560 SUBS X10, X10, 0x1
	0x03D11564 ADD X8, X8, 0x10
	0x03D11568 B.NE 0x3D11554
	0x03D1156C MOVZ W2, 0x2D
	0x03D11570 MOV X0, X22
	0x03D11574 BL 0x1C5C788
	0x03D11578 B 0x3D1158C
	0x03D1157C LDR W8, [X8]
	0x03D11580 ADD W8, W8, 0x2D
	0x03D11584 ADD X8, X9, W8, 0x4, SXTW
	0x03D11588 ADD X0, X8, 0x138
	0x03D1158C LDP X8, X3, [X0]
	0x03D11590 MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6D7000
	007 Move W8, [X21+2228]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x40E000
	015 Move X0, [X0+528]
	016 Call 0x1C17CF4
	017 Move X0, 0x453000
	018 Move X0, [X0+2992]
	019 Call 0x1C17CF4
	020 Move X0, 0x40C000
	021 Move X0, [X0+3664]
	022 Call 0x1C17CF4
	023 Move X0, 0x40B000
	024 Move X0, [X0+2200]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2228], W8
	028 Compare X19, 0
	029 JumpIfEqual {86}
	030 Move X0, [X20+40]
	031 Move S0, [X19+180]
	032 Move S1, [X19+184]
	033 Move X21, 0x40C000
	034 Move X21, [X21+3664]
	035 Move X1, X31
	036 Call VisualElementExtensions.WorldToLocal, X0, X1
	037 Move X0, X19
	038 Move X1, X31
	039 Move [X20+92], S0
	040 Move [X20+100], S1
	041 Call EventBase.get_target, X0
	042 Compare X0, 0
	043 JumpIfEqual {51}
	044 Move X8, 0x40B000
	045 Move X8, [X8+2200]
	046 Move X9, [X0]
	047 Move X8, [X8]
	048 Move W11, [X9+304]
	049 Move W10, [X8+304]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X1, X31
	052 Move X9, [X9+200]
	053 Add X9, X9, X10
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSEL not yet implemented."
	057 Move X0, X20
	058 Call GenericDropdownMenu.UpdateSelection, X0, X1
	059 Move X0, [X21]
	060 Move W22, [X19+156]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X21]
	066 Move X8, [X0+184]
	067 Move W8, [X8+8]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, [X20+24]
	070 Compare X0, 0
	071 JumpIfEqual {86}
	072 Move X1, X31
	073 Call VisualElement.get_panel, X0
	074 Move W1, [X19+156]
	075 Move X2, X31
	076 Call PointerCaptureHelper.PreventCompatibilityMouseEvents, X0, X1
	077 Move X0, X19
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X1, X31
	083 Move X30, [X31+48]
	084 Call EventBase.StopPropagation, X0
	085 Return 
	086 Call 0x1C17F20

Method: System.Void OnPointerUp(UnityEngine.UIElements.PointerUpEvent evt)

Disassembly:
	0x03D11594 MOV X1, X23
	0x03D11598 MOV X2, X24
	0x03D1159C BLR X8
	0x03D115A0 TBNZ X21, 0x0, 0x3D115BC
	0x03D115A4 MOV X0, X31
	0x03D115A8 BL 0x3C0B398
	0x03D115AC MOV V11.16B, V0.16B
	0x03D115B0 MOV V10.16B, V1.16B
	0x03D115B4 MOV V9.16B, V2.16B
	0x03D115B8 MOV V8.16B, V3.16B
	0x03D115BC CBZ X20, 0x3D116E0
	0x03D115C0 LDR X0, [X20 + 0x18]
	0x03D115C4 STP S11, S10, [X20 + 0x40]
	0x03D115C8 STP S9, S8, [X20 + 0x48]
	0x03D115CC CBZ X0, 0x3D116E0
	0x03D115D0 MOV X1, X31
	0x03D115D4 BL 0x3DF7724
	0x03D115D8 LDR X8, [X20 + 0x28]
	0x03D115DC CBZ X8, 0x3D116E0
	0x03D115E0 LDR X9, [X8]
	0x03D115E4 MOV X21, X0
	0x03D115E8 MOV X0, X8
	0x03D115EC LDR X10, [X9 + 0x768]
	0x03D115F0 LDR X1, [X9 + 0x770]
	0x03D115F4 BLR X10
	0x03D115F8 ADRP X8, 0x3E3000
	0x03D115FC LDR X8, [X8 + 0xE70]
	0x03D11600 MOV X23, X0
	0x03D11604 LDR X8, [X8]
	0x03D11608 MOV X0, X8
	0x03D1160C BL 0x1C16F10
	0x03D11610 CBZ X23, 0x3D116E0
	0x03D11614 LDR X8, [X23]
	0x03D11618 MOV X1, X23
	0x03D1161C MOV X3, X31
	0x03D11620 MOV X22, X0
	0x03D11624 LDR X2, [X8 + 0x250]
	0x03D11628 BL 0x3314368
	0x03D1162C CBZ X21, 0x3D116E0
	0x03D11630 ADRP X10, 0x40A000
	0x03D11634 LDR X8, [X21]
	0x03D11638 LDR X10, [X10 + 0x680]
	0x03D1163C LDRH W9, [X8 + 0x12E]
	0x03D11640 LDR X1, [X10]
	0x03D11644 CBZ X9, 0x3D11668
	0x03D11648 LDR X10, [X8 + 0xB0]
	0x03D1164C ADD X10, X10, 0x8
	0x03D11650 LDUR X11, [X10 - 0x8]
	0x03D11654 CMP X11, X1
	0x03D11658 B.EQ 0x3D11678
	0x03D1165C SUBS X9, X9, 0x1
	0x03D11660 ADD X10, X10, 0x10
	0x03D11664 B.NE 0x3D11650
	0x03D11668 MOVZ W2, 0x1
	0x03D1166C MOV X0, X21
	0x03D11670 BL 0x1C5C788
	0x03D11674 B 0x3D11688
	0x03D11678 LDR W9, [X10]
	0x03D1167C ADD W9, W9, 0x1
	0x03D11680 ADD X8, X8, W9, 0x4, SXTW
	0x03D11684 ADD X0, X8, 0x138
	0x03D11688 LDP X8, X2, [X0]
	0x03D1168C MOV X0, X21
	0x03D11690 MOV X1, X22
	0x03D11694 BLR X8
	0x03D11698 MOV X0, X20
	0x03D1169C BL 0x3D116E4
	0x03D116A0 MOV X0, X19
	0x03D116A4 MOV X1, X31
	0x03D116A8 BL 0x3DEEF88
	0x03D116AC ORR W1, W0, 0x1
	0x03D116B0 MOV X0, X19
	0x03D116B4 MOV X2, X31
	0x03D116B8 BL 0x3DEEF90
	0x03D116BC LDP X20, X19, [X31 + 0xC0]
	0x03D116C0 LDP X22, X21, [X31 + 0xB0]
	0x03D116C4 LDP X24, X23, [X31 + 0xA0]
	0x03D116C8 LDP X30, X25, [X31 + 0x90]
	0x03D116CC LDP D9, D8, [X31 + 0x80]
	0x03D116D0 LDP D11, D10, [X31 + 0x70]
	0x03D116D4 LDP D13, D12, [X31 + 0x60]
	0x03D116D8 ADD X31, X31, 0xD0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6D7000
	007 Move W8, [X21+2229]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x453000
	015 Move X0, [X0+2976]
	016 Call 0x1C17CF4
	017 Move X0, 0x40E000
	018 Move X0, [X0+3360]
	019 Call 0x1C17CF4
	020 Move X0, 0x40C000
	021 Move X0, [X0+3664]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2229], W8
	025 Move X0, X20
	026 Call GenericDropdownMenu.GetSelectedIndex, X0
	027 Add W31, W0, 1
	028 Move W1, W0
	029 Move X0, [X20+16]
	030 Compare X0, 0
	031 JumpIfEqual {97}
	032 Move X8, 0x453000
	033 Move X8, [X8+2976]
	034 Move X2, [X8]
	035 Call List`1<Object>.get_Item, X0, X1
	036 Compare X0, 0
	037 JumpIfEqual {97}
	038 Move X8, [X0+32]
	039 Move X21, X0
	040 Compare X8, 0
	041 JumpIfEqual {46}
	042 Move X9, [X8+24]
	043 Move X0, [X8+64]
	044 Move X1, [X8+40]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X22, [X21+40]
	047 Compare X22, 0
	048 JumpIfEqual {60}
	049 Move X0, [X21+24]
	050 Compare X0, 0
	051 JumpIfEqual {97}
	052 Move X1, X31
	053 Call VisualElement.get_userData, X0
	054 Move X8, [X22+64]
	055 Move X9, [X22+24]
	056 Move X2, [X22+40]
	057 Move X1, X0
	058 Move X0, X8
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move W8, [X20+88]
	061 Compare W8, 0
	062 JumpIfEqual {66}
	063 Move W1, 1
	064 Move X0, X20
	065 Call GenericDropdownMenu.Hide, X0, X1
	066 Compare X19, 0
	067 JumpIfEqual {97}
	068 Move X22, 0x40C000
	069 Move X22, [X22+3664]
	070 Move W21, [X19+156]
	071 Move X0, [X22]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1C17DFC
	076 Move X0, [X22]
	077 Move X8, [X0+184]
	078 Move W8, [X8+8]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, [X20+24]
	081 Compare X0, 0
	082 JumpIfEqual {97}
	083 Move X1, X31
	084 Call VisualElement.get_panel, X0
	085 Move W1, [X19+156]
	086 Move X2, X31
	087 Call PointerCaptureHelper.PreventCompatibilityMouseEvents, X0, X1
	088 Move X0, X19
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X1, X31
	094 Move X30, [X31+48]
	095 Call EventBase.StopPropagation, X0
	096 Return 
	097 Call 0x1C17F20

Method: System.Void OnFocusOut(UnityEngine.UIElements.FocusOutEvent evt)

Disassembly:
	0x03D116DC RET
	0x03D116E0 BL 0x1C16F20
	0x03D116E4 STR D12, [X31 - 0x60]!
	0x03D116E8 STP D11, D10, [X31 + 0x10]
	0x03D116EC STP D9, D8, [X31 + 0x20]
	0x03D116F0 STP X30, X23, [X31 + 0x30]
	0x03D116F4 STP X22, X21, [X31 + 0x40]
	0x03D116F8 STP X20, X19, [X31 + 0x50]
	0x03D116FC ADRP X20, 0x6D6000
	0x03D11700 LDRB W8, [X20 + 0x8BD]
	0x03D11704 MOV X19, X0
	0x03D11708 TBNZ X8, 0x0, 0x3D1172C
	0x03D1170C ADRP X0, 0x40B000
	0x03D11710 LDR X0, [X0 + 0x120]
	0x03D11714 BL 0x1C16CF4
	0x03D11718 ADRP X0, 0x40B000
	0x03D1171C LDR X0, [X0 + 0x128]
	0x03D11720 BL 0x1C16CF4
	0x03D11724 MOVZ W8, 0x1
	0x03D11728 STRB W8, [X20 + 0x8BD]
	0x03D1172C LDR X8, [X19 + 0x30]
	0x03D11730 CBZ X8, 0x3D11B94
	0x03D11734 LDR X0, [X19 + 0x20]
	0x03D11738 CBZ X0, 0x3D11C5C
	0x03D1173C MOV X1, X31
	0x03D11740 BL 0x3DEC528
	0x03D11744 FMOV W8, S2
	0x03D11748 AND W8, W8, 0x7FFFFFFF
	0x03D1174C MOVZ W9, 0x7F800000
	0x03D11750 CMP W8, W9
	0x03D11754 B.HI 0x3D11B94
	0x03D11758 LDR X0, [X19 + 0x20]
	0x03D1175C CBZ X0, 0x3D11C5C
	0x03D11760 MOV X1, X31
	0x03D11764 BL 0x3DEC528
	0x03D11768 FMOV W8, S3
	0x03D1176C AND W8, W8, 0x7FFFFFFF
	0x03D11770 MOVZ W9, 0x7F800000
	0x03D11774 CMP W8, W9
	0x03D11778 B.HI 0x3D11B94
	0x03D1177C LDP S11, S9, [X19 + 0x40]
	0x03D11780 LDP S8, S10, [X19 + 0x48]
	0x03D11784 MOV X0, X31
	0x03D11788 BL 0x3C0B398
	0x03D1178C FCMP S11, S0
	0x03D11790 B.NE 0x3D1196C
	0x03D11794 FCMP S10, S3
	0x03D11798 B.NE 0x3D1196C
	0x03D1179C FCMP S9, S1
	0x03D117A0 B.NE 0x3D1196C
	0x03D117A4 FCMP S8, S2
	0x03D117A8 B.NE 0x3D1196C
	0x03D117AC LDR X0, [X19 + 0x20]
	0x03D117B0 CBZ X0, 0x3D11C5C
	0x03D117B4 MOV X1, X31
	0x03D117B8 BL 0x3DEC528
	0x03D117BC LDR X0, [X19 + 0x30]
	0x03D117C0 CBZ X0, 0x3D11C5C
	0x03D117C4 MOV X1, X31
	0x03D117C8 MOV V8.16B, V0.16B
	0x03D117CC BL 0x3DEC528
	0x03D117D0 LDR X0, [X19 + 0x20]
	0x03D117D4 CBZ X0, 0x3D11C5C
	0x03D117D8 MOV X1, X31
	0x03D117DC MOV V9.16B, V2.16B
	0x03D117E0 BL 0x3DEC528
	0x03D117E4 LDR X0, [X19 + 0x20]
	0x03D117E8 FSUB S0, S9, S2
	0x03D117EC FCMP S8, S0
	0x03D117F0 FCSEL S9, S8, S0, MI
	0x03D117F4 CBZ X0, 0x3D11C5C
	0x03D117F8 MOV X1, X31
	0x03D117FC BL 0x3DEC528
	0x03D11800 LDR X0, [X19 + 0x30]
	0x03D11804 CBZ X0, 0x3D11C5C
	0x03D11808 MOV X1, X31
	0x03D1180C MOV V8.16B, V1.16B
	0x03D11810 BL 0x3DEC528
	0x03D11814 LDR X0, [X19 + 0x20]
	0x03D11818 CBZ X0, 0x3D11C5C
	0x03D1181C MOV X1, X31
	0x03D11820 MOV V10.16B, V3.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6D7000
	006 Move W8, [X20+2230]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x3E4000
	013 Move X0, [X0+3696]
	014 Call 0x1C17CF4
	015 Move X0, 0x40B000
	016 Move X0, [X0+1664]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2230], W8
	020 Move X0, [X19+40]
	021 Compare X0, 0
	022 JumpIfEqual {100}
	023 Move X8, [X0]
	024 Move S0, [X19+92]
	025 Move S1, [X19+96]
	026 Move X9, [X8+1864]
	027 Move X1, [X8+1872]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {79}
	033 Move X0, [X19+24]
	034 Compare X0, 0
	035 JumpIfEqual {100}
	036 Move X1, X31
	037 Call VisualElement.get_schedule, X0
	038 Move X8, [X19+40]
	039 Compare X8, 0
	040 JumpIfEqual {100}
	041 Move X9, [X8]
	042 Move X19, X0
	043 Move X0, X8
	044 Move X10, [X9+1896]
	045 Move X1, [X9+1904]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, 0x3E4000
	048 Move X8, [X8+3696]
	049 Move X21, X0
	050 Move X8, [X8]
	051 Move X0, X8
	052 Call 0x1C17F10
	053 Compare X21, 0
	054 JumpIfEqual {100}
	055 Move X8, [X21]
	056 Move X1, X21
	057 Move X3, X31
	058 Move X20, X0
	059 Move X2, [X8+592]
	060 Call Action..ctor, X0, X1, X2
	061 Compare X19, 0
	062 JumpIfEqual {100}
	063 Move X10, 0x40B000
	064 Move X8, [X19]
	065 Move X10, [X10+1664]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Move X1, [X10]
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move W2, 1
	077 Move X0, X19
	078 Call 0x1C5D788
	079 Move X0, X19
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move W1, W31
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Call GenericDropdownMenu.Hide, X0, X1
	086 Return 
	087 Move W9, [X10]
	088 Add W9, W9, 1
	089 Add X8, X8, W9
	090 Add X0, X8, 312
	091 Move X3, [X0]
	092 Move X2, [X0+8]
	093 Move X0, X19
	094 Move X1, X20
	095 Move X20, [X31+16]
	096 Move X19, [X31+24]
	097 Move X30, [X31+32]
	098 Move X21, [X31+40]
	099 CallNoReturn X3
	100 Call 0x1C17F20

Method: System.Void OnParentResized(UnityEngine.UIElements.GeometryChangedEvent evt)

Disassembly:
	0x03D11824 BL 0x3DEC528
	0x03D11828 FSUB S0, S10, S3
	0x03D1182C LDR X0, [X19 + 0x20]
	0x03D11830 FMOV S1, W31
	0x03D11834 FMAX S0, S0, S1

ISIL:
	001 Move W8, [X0+89]
	002 Compare W8, 0
	003 JumpIfEqual {7}
	004 Move W1, 1
	005 Call GenericDropdownMenu.Hide, X0, X1
	006 Return 
	007 Return 

Method: System.Void UpdateSelection(UnityEngine.UIElements.VisualElement target)

Disassembly:
	0x03D11338 ADD X8, X8, W9, 0x4, SXTW
	0x03D1133C ADD X0, X8, 0x138
	0x03D11340 LDP X8, X3, [X0]
	0x03D11344 MOV X0, X22
	0x03D11348 MOV X1, X23
	0x03D1134C MOV X2, X24
	0x03D11350 BLR X8
	0x03D11354 LDR X0, [X20 + 0x18]
	0x03D11358 CBZ X0, 0x3D116E0
	0x03D1135C MOV X1, X31
	0x03D11360 BL 0x3DE7EEC
	0x03D11364 LDR X8, [X20 + 0x38]
	0x03D11368 CBZ X8, 0x3D116E0
	0x03D1136C MOV X22, X0
	0x03D11370 MOV X0, X8
	0x03D11374 MOV X1, X31
	0x03D11378 BL 0x3DE0F44
	0x03D1137C MOV X1, X31
	0x03D11380 BL 0x3DC9F98
	0x03D11384 ADD X8, X31, 0x40
	0x03D11388 MOV X2, X31
	0x03D1138C BL 0x3DFEA7C
	0x03D11390 LDR V0, [X31 + 0x4]
	0x03D11394 LDR X8, [X31 + 0x50]
	0x03D11398 STR V0, [X31 + 0x2]
	0x03D1139C STR X8, [X31 + 0x30]
	0x03D113A0 CBZ X22, 0x3D116E0
	0x03D113A4 LDR V0, [X31 + 0x2]
	0x03D113A8 LDR X8, [X31 + 0x30]
	0x03D113AC LDR X1, [X25]
	0x03D113B0 STR V0, [X31]
	0x03D113B4 STR X8, [X31 + 0x10]
	0x03D113B8 LDR X8, [X22]
	0x03D113BC LDRH W9, [X8 + 0x12E]
	0x03D113C0 CBZ X9, 0x3D113E4
	0x03D113C4 LDR X10, [X8 + 0xB0]
	0x03D113C8 ADD X10, X10, 0x8
	0x03D113CC LDUR X11, [X10 - 0x8]
	0x03D113D0 CMP X11, X1
	0x03D113D4 B.EQ 0x3D113F4
	0x03D113D8 SUBS X9, X9, 0x1
	0x03D113DC ADD X10, X10, 0x10
	0x03D113E0 B.NE 0x3D113CC
	0x03D113E4 MOVZ W2, 0x33
	0x03D113E8 MOV X0, X22
	0x03D113EC BL 0x1C5C788
	0x03D113F0 B 0x3D11404
	0x03D113F4 LDR W9, [X10]
	0x03D113F8 ADD W9, W9, 0x33
	0x03D113FC ADD X8, X8, W9, 0x4, SXTW
	0x03D11400 ADD X0, X8, 0x138
	0x03D11404 LDR V0, [X31]
	0x03D11408 LDR X8, [X31 + 0x10]
	0x03D1140C LDR X9, [X0]
	0x03D11410 ADD X1, X31, 0x40
	0x03D11414 STR V0, [X31 + 0x4]
	0x03D11418 STR X8, [X31 + 0x50]
	0x03D1141C LDR X2, [X0 + 0x8]
	0x03D11420 MOV X0, X22
	0x03D11424 BLR X9
	0x03D11428 LDR X0, [X20 + 0x30]
	0x03D1142C MOV V0.16B, V11.16B
	0x03D11430 MOV V1.16B, V10.16B
	0x03D11434 MOV V2.16B, V9.16B
	0x03D11438 MOV V3.16B, V8.16B
	0x03D1143C MOV X1, X31
	0x03D11440 BL 0x3D16DA4
	0x03D11444 LDR X0, [X20 + 0x20]
	0x03D11448 CBZ X0, 0x3D116E0
	0x03D1144C MOV X1, X31
	0x03D11450 MOV V13.16B, V0.16B
	0x03D11454 MOV V12.16B, V1.16B
	0x03D11458 BL 0x3DE7EEC
	0x03D1145C LDR X8, [X20 + 0x30]
	0x03D11460 CBZ X8, 0x3D116E0
	0x03D11464 MOV X22, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6D7000
	006 Move W8, [X21+2231]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x453000
	014 Move X0, [X0+2976]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2231], W8
	018 Move X0, [X20+40]
	019 Compare X0, 0
	020 JumpIfEqual {106}
	021 Move X8, [X0]
	022 Move S0, [X20+92]
	023 Move S1, [X20+96]
	024 Move X9, [X8+1864]
	025 Move X1, [X8+1872]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {70}
	031 Compare X19, 0
	032 JumpIfEqual {101}
	033 Move X0, X19
	034 Move X1, X31
	035 Call VisualElement.get_pseudoStates, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 2
	038 Compare TEMP, 2
	039 JumpIfEqual {101}
	040 Move X0, X20
	041 Call GenericDropdownMenu.GetSelectedIndex, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, -2147483648
	044 Compare TEMP, -2147483648
	045 JumpIfEqual {66}
	046 Move W1, W0
	047 Move X0, [X20+16]
	048 Compare X0, 0
	049 JumpIfEqual {106}
	050 Move X8, 0x453000
	051 Move X8, [X8+2976]
	052 Move X2, [X8]
	053 Call List`1<Object>.get_Item, X0, X1
	054 Compare X0, 0
	055 JumpIfEqual {106}
	056 Move X20, [X0+24]
	057 Compare X20, 0
	058 JumpIfEqual {106}
	059 Move X0, X20
	060 Move X1, X31
	061 Call VisualElement.get_pseudoStates, X0
	062 And W1, W0, 0xFFFFFFFD
	063 Move X0, X20
	064 Move X2, X31
	065 Call VisualElement.set_pseudoStates, X0, X1
	066 Move X0, X19
	067 Move X1, X31
	068 Call VisualElement.get_pseudoStates, X0
	069 Or W1, W0, 2
	070 Move X0, X20
	071 Call GenericDropdownMenu.GetSelectedIndex, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, -2147483648
	074 Compare TEMP, -2147483648
	075 JumpIfEqual {101}
	076 Move W1, W0
	077 Move X0, [X20+16]
	078 Compare X0, 0
	079 JumpIfEqual {106}
	080 Move X8, 0x453000
	081 Move X8, [X8+2976]
	082 Move X2, [X8]
	083 Call List`1<Object>.get_Item, X0, X1
	084 Compare X0, 0
	085 JumpIfEqual {106}
	086 Move X19, [X0+24]
	087 Compare X19, 0
	088 JumpIfEqual {106}
	089 Move X0, X19
	090 Move X1, X31
	091 Call VisualElement.get_pseudoStates, X0
	092 And W1, W0, 0xFFFFFFFD
	093 Move X0, X19
	094 Move X20, [X31+16]
	095 Move X19, [X31+24]
	096 Move X2, X31
	097 Move X30, [X31+32]
	098 Move X21, [X31+40]
	099 Call VisualElement.set_pseudoStates, X0, X1
	100 Return 
	101 Move X20, [X31+16]
	102 Move X19, [X31+24]
	103 Move X30, [X31+32]
	104 Move X21, [X31+40]
	105 Return 
	106 Call 0x1C17F20

Method: System.Void ChangeSelectedIndex(System.Int32 newIndex, System.Int32 previousIndex)

Disassembly:
	0x03D11838 FCMP S8, S0
	0x03D1183C FCSEL S8, S8, S0, MI
	0x03D11840 CBZ X0, 0x3D11C5C
	0x03D11844 MOV X1, X31
	0x03D11848 BL 0x3DE7EEC
	0x03D1184C MOV X20, X0
	0x03D11850 MOV V0.16B, V9.16B
	0x03D11854 MOV X0, X31
	0x03D11858 BL 0x3DFED98
	0x03D1185C CBZ X20, 0x3D11C5C
	0x03D11860 ADRP X23, 0x40B000
	0x03D11864 LDR X9, [X20]
	0x03D11868 LDR X23, [X23 + 0x128]
	0x03D1186C MOV X8, X1
	0x03D11870 MOV X21, X0
	0x03D11874 LDRH W10, [X9 + 0x12E]
	0x03D11878 LDR X1, [X23]
	0x03D1187C AND X22, X8, 0x0
	0x03D11880 CBZ X10, 0x3D118A4
	0x03D11884 LDR X8, [X9 + 0xB0]
	0x03D11888 ADD X8, X8, 0x8
	0x03D1188C LDUR X11, [X8 - 0x8]
	0x03D11890 CMP X11, X1
	0x03D11894 B.EQ 0x3D118B4
	0x03D11898 SUBS X10, X10, 0x1
	0x03D1189C ADD X8, X8, 0x10
	0x03D118A0 B.NE 0x3D1188C
	0x03D118A4 MOVZ W2, 0x19
	0x03D118A8 MOV X0, X20
	0x03D118AC BL 0x1C5C788
	0x03D118B0 B 0x3D118C4
	0x03D118B4 LDR W8, [X8]
	0x03D118B8 ADD W8, W8, 0x19
	0x03D118BC ADD X8, X9, W8, 0x4, SXTW
	0x03D118C0 ADD X0, X8, 0x138
	0x03D118C4 LDP X8, X3, [X0]
	0x03D118C8 MOV X0, X20
	0x03D118CC MOV X1, X21
	0x03D118D0 MOV X2, X22
	0x03D118D4 BLR X8
	0x03D118D8 LDR X0, [X19 + 0x20]
	0x03D118DC CBZ X0, 0x3D11C5C
	0x03D118E0 MOV X1, X31
	0x03D118E4 BL 0x3DE7EEC
	0x03D118E8 MOV X20, X0
	0x03D118EC MOV V0.16B, V8.16B
	0x03D118F0 MOV X0, X31
	0x03D118F4 BL 0x3DFED98
	0x03D118F8 CBZ X20, 0x3D11C5C
	0x03D118FC LDR X9, [X20]
	0x03D11900 MOV X8, X1
	0x03D11904 LDR X1, [X23]
	0x03D11908 MOV X21, X0
	0x03D1190C LDRH W10, [X9 + 0x12E]
	0x03D11910 AND X22, X8, 0x0
	0x03D11914 CBZ X10, 0x3D11938
	0x03D11918 LDR X8, [X9 + 0xB0]
	0x03D1191C ADD X8, X8, 0x8
	0x03D11920 LDUR X11, [X8 - 0x8]
	0x03D11924 CMP X11, X1
	0x03D11928 B.EQ 0x3D11948
	0x03D1192C SUBS X10, X10, 0x1
	0x03D11930 ADD X8, X8, 0x10
	0x03D11934 B.NE 0x3D11920
	0x03D11938 MOVZ W2, 0x2D
	0x03D1193C MOV X0, X20
	0x03D11940 BL 0x1C5C788
	0x03D11944 B 0x3D11958
	0x03D11948 LDR W8, [X8]
	0x03D1194C ADD W8, W8, 0x2D
	0x03D11950 ADD X8, X9, W8, 0x4, SXTW
	0x03D11954 ADD X0, X8, 0x138
	0x03D11958 LDP X8, X3, [X0]
	0x03D1195C MOV X0, X20
	0x03D11960 MOV X1, X21
	0x03D11964 MOV X2, X22
	0x03D11968 BLR X8
	0x03D1196C LDR X0, [X19 + 0x20]
	0x03D11970 CBZ X0, 0x3D11C5C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6D7000
	007 Move W8, [X22+2232]
	008 Move W21, W2
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x453000
	016 Move X0, [X0+2968]
	017 Call 0x1C17CF4
	018 Move X0, 0x453000
	019 Move X0, [X0+2976]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2232], W8
	023 Move TEMP, X21
	024 And TEMP, TEMP, -2147483648
	025 Compare TEMP, -2147483648
	026 JumpIfEqual {49}
	027 Move X0, [X20+16]
	028 Compare X0, 0
	029 JumpIfEqual {102}
	030 Move W8, [X0+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, 0x453000
	033 Move X8, [X8+2976]
	034 Move W1, W21
	035 Move X2, [X8]
	036 Call List`1<Object>.get_Item, X0, X1
	037 Compare X0, 0
	038 JumpIfEqual {102}
	039 Move X21, [X0+24]
	040 Compare X21, 0
	041 JumpIfEqual {102}
	042 Move X0, X21
	043 Move X1, X31
	044 Call VisualElement.get_pseudoStates, X0
	045 And W1, W0, 0xFFFFFFFD
	046 Move X0, X21
	047 Move X2, X31
	048 Call VisualElement.set_pseudoStates, X0, X1
	049 Move TEMP, X19
	050 And TEMP, TEMP, -2147483648
	051 Compare TEMP, -2147483648
	052 JumpIfEqual {96}
	053 Move X0, [X20+16]
	054 Compare X0, 0
	055 JumpIfEqual {102}
	056 Move W8, [X0+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X22, 0x453000
	059 Move X22, [X22+2976]
	060 Move W1, W19
	061 Move X2, [X22]
	062 Call List`1<Object>.get_Item, X0, X1
	063 Compare X0, 0
	064 JumpIfEqual {102}
	065 Move X21, [X0+24]
	066 Compare X21, 0
	067 JumpIfEqual {102}
	068 Move X0, X21
	069 Move X1, X31
	070 Call VisualElement.get_pseudoStates, X0
	071 Or W1, W0, 2
	072 Move X0, X21
	073 Move X2, X31
	074 Call VisualElement.set_pseudoStates, X0, X1
	075 Move X0, [X20+16]
	076 Compare X0, 0
	077 JumpIfEqual {102}
	078 Move X2, [X22]
	079 Move X20, [X20+40]
	080 Move W1, W19
	081 Call List`1<Object>.get_Item, X0, X1
	082 Compare X0, 0
	083 JumpIfEqual {102}
	084 Compare X20, 0
	085 JumpIfEqual {102}
	086 Move X1, [X0+24]
	087 Move X0, X20
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X2, X31
	093 Move X30, [X31+48]
	094 Call ScrollView.ScrollTo, X0, X1
	095 Return 
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X30, [X31+48]
	101 Return 
	102 Call 0x1C17F20

Method: System.Int32 GetSelectedIndex()

Disassembly:
	0x03D11008 LDR X0, [X20 + 0x18]
	0x03D1100C CBZ X0, 0x3D116E0
	0x03D11010 MOV X1, X31
	0x03D11014 BL 0x3DE7EEC
	0x03D11018 LDR X8, [X20 + 0x30]
	0x03D1101C CBZ X8, 0x3D116E0
	0x03D11020 MOV X22, X0
	0x03D11024 MOV X0, X8
	0x03D11028 MOV X1, X31
	0x03D1102C BL 0x3DEC528
	0x03D11030 MOV V0.16B, V1.16B
	0x03D11034 MOV X0, X31
	0x03D11038 BL 0x3DFED98
	0x03D1103C CBZ X22, 0x3D116E0
	0x03D11040 LDR X9, [X22]
	0x03D11044 MOV X8, X1
	0x03D11048 LDR X1, [X25]
	0x03D1104C MOV X23, X0
	0x03D11050 LDRH W10, [X9 + 0x12E]
	0x03D11054 AND X24, X8, 0x0
	0x03D11058 CBZ X10, 0x3D1107C
	0x03D1105C LDR X8, [X9 + 0xB0]
	0x03D11060 ADD X8, X8, 0x8
	0x03D11064 LDUR X11, [X8 - 0x8]
	0x03D11068 CMP X11, X1
	0x03D1106C B.EQ 0x3D1108C
	0x03D11070 SUBS X10, X10, 0x1
	0x03D11074 ADD X8, X8, 0x10
	0x03D11078 B.NE 0x3D11064
	0x03D1107C MOVZ W2, 0x2D
	0x03D11080 MOV X0, X22
	0x03D11084 BL 0x1C5C788
	0x03D11088 B 0x3D1109C
	0x03D1108C LDR W8, [X8]
	0x03D11090 ADD W8, W8, 0x2D
	0x03D11094 ADD X8, X9, W8, 0x4, SXTW
	0x03D11098 ADD X0, X8, 0x138
	0x03D1109C LDP X8, X3, [X0]
	0x03D110A0 MOV X0, X22
	0x03D110A4 MOV X1, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6D7000
	006 Move W8, [X20+2233]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x453000
	013 Move X0, [X0+2968]
	014 Call 0x1C17CF4
	015 Move X0, 0x453000
	016 Move X0, [X0+2976]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2233], W8
	020 Move X0, [X19+16]
	021 Compare X0, 0
	022 JumpIfEqual {46}
	023 Move X21, 0x453000
	024 Move X21, [X21+2976]
	025 Move W20, W31
	026 Move W8, [X0+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X2, [X21]
	029 Move W1, W20
	030 Call List`1<Object>.get_Item, X0, X1
	031 Compare X0, 0
	032 JumpIfEqual {46}
	033 Move X0, [X0+24]
	034 Compare X0, 0
	035 JumpIfEqual {46}
	036 Move X1, X31
	037 Call VisualElement.get_pseudoStates, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 2
	040 Compare TEMP, 2
	041 JumpIfEqual {50}
	042 Move X0, [X19+16]
	043 Add W20, W20, 1
	044 Compare X0, 0
	045 JumpIfNotEqual {26}
	046 Call 0x1C17F20
	047 Move TEMP, 0
	048 Not TEMP
	049 Move W20, TEMP
	050 Move W0, W20
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0

Method: System.Void AddItem(System.String itemName, System.Boolean isChecked, System.Action action)

Disassembly:
	0x03D11974 MOV X1, X31
	0x03D11978 BL 0x3DE7EEC
	0x03D1197C LDR X8, [X19 + 0x18]
	0x03D11980 CBZ X8, 0x3D11C5C
	0x03D11984 MOV X20, X0
	0x03D11988 MOV X0, X8
	0x03D1198C MOV X1, X31
	0x03D11990 BL 0x3DEC528
	0x03D11994 LDR X0, [X19 + 0x18]
	0x03D11998 CBZ X0, 0x3D11C5C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X3
	004 And W2, W2, 1
	005 Move W3, 1
	006 Move X4, X31
	007 Call GenericDropdownMenu.AddItem, X0, X1, X2, X3, X4
	008 Compare X0, 0
	009 JumpIfEqual {11}
	010 Move [X0+32], X19
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 

Method: System.Void AddItem(System.String itemName, System.Boolean isChecked, System.Action`1<System.Object> action, System.Object data)

Disassembly:
	0x03D11CD0 LDR X0, [X0 + 0xC8]
	0x03D11CD4 BL 0x1C16CF4
	0x03D11CD8 ADRP X0, 0x452000
	0x03D11CDC LDR X0, [X0 + 0xBE8]
	0x03D11CE0 BL 0x1C16CF4
	0x03D11CE4 ADRP X0, 0x452000
	0x03D11CE8 LDR X0, [X0 + 0xBE0]
	0x03D11CEC BL 0x1C16CF4
	0x03D11CF0 ADRP X0, 0x451000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X3
	004 And W2, W2, 1
	005 Move W3, 1
	006 Call GenericDropdownMenu.AddItem, X0, X1, X2, X3, X4
	007 Compare X0, 0
	008 JumpIfEqual {10}
	009 Move [X0+40], X19
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 

Method: System.Void AddSeparator(System.String path)

Disassembly:
	0x03D11CF4 LDR X0, [X0 + 0xE60]
	0x03D11CF8 BL 0x1C16CF4
	0x03D11CFC ADRP X0, 0x452000
	0x03D11D00 LDR X0, [X0 + 0xBF8]
	0x03D11D04 BL 0x1C16CF4
	0x03D11D08 ADRP X0, 0x452000
	0x03D11D0C LDR X0, [X0 + 0xBF0]
	0x03D11D10 BL 0x1C16CF4
	0x03D11D14 ADRP X0, 0x452000
	0x03D11D18 LDR X0, [X0 + 0xB40]
	0x03D11D1C BL 0x1C16CF4
	0x03D11D20 ADRP X0, 0x40B000
	0x03D11D24 LDR X0, [X0 + 0xEB8]
	0x03D11D28 BL 0x1C16CF4
	0x03D11D2C MOVZ W8, 0x1
	0x03D11D30 STRB W8, [X27 + 0x8BE]
	0x03D11D34 LDR X8, [X19]
	0x03D11D38 LDR X9, [X26]
	0x03D11D3C MOV X2, X31
	0x03D11D40 LDR X8, [X8 + 0xB8]
	0x03D11D44 STR X9, [X8]
	0x03D11D48 LDR X8, [X19]
	0x03D11D4C LDR X1, [X25]
	0x03D11D50 LDR X8, [X8 + 0xB8]
	0x03D11D54 LDR X0, [X8]
	0x03D11D58 BL 0x321B938
	0x03D11D5C LDR X8, [X19]
	0x03D11D60 MOV X2, X31
	0x03D11D64 LDR X8, [X8 + 0xB8]
	0x03D11D68 STR X0, [X8 + 0x8]
	0x03D11D6C LDR X0, [X8]
	0x03D11D70 LDR X1, [X24]
	0x03D11D74 BL 0x321B938
	0x03D11D78 LDR X8, [X19]
	0x03D11D7C MOV X2, X31
	0x03D11D80 LDR X8, [X8 + 0xB8]
	0x03D11D84 STR X0, [X8 + 0x10]
	0x03D11D88 LDR X0, [X8]
	0x03D11D8C LDR X1, [X23]
	0x03D11D90 BL 0x321B938
	0x03D11D94 LDR X8, [X19]
	0x03D11D98 MOV X2, X31
	0x03D11D9C LDR X8, [X8 + 0xB8]
	0x03D11DA0 STR X0, [X8 + 0x18]
	0x03D11DA4 LDR X0, [X8]
	0x03D11DA8 LDR X1, [X22]
	0x03D11DAC BL 0x321B938
	0x03D11DB0 LDR X8, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x6D7000
	007 Move X22, 0x40B000
	008 Move X21, 0x40E000
	009 Move W8, [X20+2234]
	010 Move X22, [X22+2200]
	011 Move X21, [X21+200]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x40E000
	018 Move X0, [X0+200]
	019 Call 0x1C17CF4
	020 Move X0, 0x40B000
	021 Move X0, [X0+2200]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2234], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call VisualElement..ctor, X0
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Compare X20, 0
	036 JumpIfEqual {59}
	037 Move X8, [X21]
	038 Move X0, X20
	039 Move X2, X31
	040 Move X8, [X8+184]
	041 Move X1, [X8+48]
	042 Call VisualElement.AddToClassList, X0, X1
	043 Move W1, 1
	044 Move X0, X20
	045 Move X2, X31
	046 Call VisualElement.set_pickingMode, X0, X1
	047 Move X0, [X19+40]
	048 Compare X0, 0
	049 JumpIfEqual {59}
	050 Move X1, X20
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X2, X31
	056 Move X30, [X31+48]
	057 Call VisualElement.Add, X0, X1
	058 Return 
	059 Call 0x1C17F20

Method: UnityEngine.UIElements.GenericDropdownMenu/MenuItem AddItem(System.String itemName, System.Boolean isChecked, System.Boolean isEnabled, System.Object data = null)

Disassembly:
	0x03D1199C MOV X1, X31
	0x03D119A0 MOV V8.16B, V3.16B
	0x03D119A4 BL 0x3DEC528
	0x03D119A8 LDR X0, [X19 + 0x20]
	0x03D119AC CBZ X0, 0x3D11C5C
	0x03D119B0 MOV X1, X31
	0x03D119B4 MOV V9.16B, V1.16B
	0x03D119B8 BL 0x3DEC528
	0x03D119BC LDR X0, [X19 + 0x28]
	0x03D119C0 CBZ X0, 0x3D11C5C
	0x03D119C4 MOV X1, X31
	0x03D119C8 MOV V10.16B, V1.16B
	0x03D119CC BL 0x3DEC528
	0x03D119D0 LDR X0, [X19 + 0x20]
	0x03D119D4 CBZ X0, 0x3D11C5C
	0x03D119D8 MOV X1, X31
	0x03D119DC MOV V11.16B, V3.16B
	0x03D119E0 BL 0x3DE0EB8
	0x03D119E4 CBZ X0, 0x3D11C5C
	0x03D119E8 ADRP X22, 0x40B000
	0x03D119EC LDR X8, [X0]
	0x03D119F0 LDR X22, [X22 + 0x120]
	0x03D119F4 MOV X21, X0
	0x03D119F8 LDRH W9, [X8 + 0x12E]
	0x03D119FC LDR X1, [X22]
	0x03D11A00 CBZ X9, 0x3D11A24
	0x03D11A04 LDR X10, [X8 + 0xB0]
	0x03D11A08 ADD X10, X10, 0x8
	0x03D11A0C LDUR X11, [X10 - 0x8]
	0x03D11A10 CMP X11, X1
	0x03D11A14 B.EQ 0x3D11A34
	0x03D11A18 SUBS X9, X9, 0x1
	0x03D11A1C ADD X10, X10, 0x10
	0x03D11A20 B.NE 0x3D11A0C
	0x03D11A24 MOVZ W2, 0x4
	0x03D11A28 MOV X0, X21
	0x03D11A2C BL 0x1C5C788
	0x03D11A30 B 0x3D11A44
	0x03D11A34 LDR W9, [X10]
	0x03D11A38 ADD W9, W9, 0x4
	0x03D11A3C ADD X8, X8, W9, 0x4, SXTW
	0x03D11A40 ADD X0, X8, 0x138
	0x03D11A44 LDP X8, X1, [X0]
	0x03D11A48 MOV X0, X21
	0x03D11A4C BLR X8
	0x03D11A50 LDR X0, [X19 + 0x20]
	0x03D11A54 CBZ X0, 0x3D11C5C
	0x03D11A58 MOV X1, X31
	0x03D11A5C MOV V12.16B, V0.16B
	0x03D11A60 BL 0x3DE0EB8
	0x03D11A64 CBZ X0, 0x3D11C5C
	0x03D11A68 LDR X8, [X0]
	0x03D11A6C LDR X1, [X22]
	0x03D11A70 MOV X21, X0
	0x03D11A74 LDRH W9, [X8 + 0x12E]
	0x03D11A78 CBZ X9, 0x3D11A9C
	0x03D11A7C LDR X10, [X8 + 0xB0]
	0x03D11A80 ADD X10, X10, 0x8
	0x03D11A84 LDUR X11, [X10 - 0x8]
	0x03D11A88 CMP X11, X1
	0x03D11A8C B.EQ 0x3D11AAC
	0x03D11A90 SUBS X9, X9, 0x1
	0x03D11A94 ADD X10, X10, 0x10
	0x03D11A98 B.NE 0x3D11A84
	0x03D11A9C MOVZ W2, 0xC
	0x03D11AA0 MOV X0, X21
	0x03D11AA4 BL 0x1C5C788
	0x03D11AA8 B 0x3D11ABC
	0x03D11AAC LDR W9, [X10]
	0x03D11AB0 ADD W9, W9, 0xC
	0x03D11AB4 ADD X8, X8, W9, 0x4, SXTW
	0x03D11AB8 ADD X0, X8, 0x138
	0x03D11ABC LDP X8, X1, [X0]
	0x03D11AC0 MOV X0, X21
	0x03D11AC4 BLR X8
	0x03D11AC8 FSUB S1, S8, S9
	0x03D11ACC FADD S2, S11, S12
	0x03D11AD0 FSUB S1, S1, S10
	0x03D11AD4 FADD S0, S2, S0
	0x03D11AD8 FCMP S1, S0
	0x03D11ADC FCSEL S0, S1, S0, MI
	0x03D11AE0 MOV X0, X31
	0x03D11AE4 BL 0x3DFED98
	0x03D11AE8 CBZ X20, 0x3D11C5C
	0x03D11AEC ADRP X23, 0x40B000
	0x03D11AF0 LDR X9, [X20]
	0x03D11AF4 LDR X23, [X23 + 0x128]
	0x03D11AF8 MOV X8, X1
	0x03D11AFC MOV X21, X0
	0x03D11B00 LDRH W10, [X9 + 0x12E]
	0x03D11B04 LDR X1, [X23]
	0x03D11B08 AND X22, X8, 0x0
	0x03D11B0C CBZ X10, 0x3D11B30
	0x03D11B10 LDR X8, [X9 + 0xB0]
	0x03D11B14 ADD X8, X8, 0x8
	0x03D11B18 LDUR X11, [X8 - 0x8]
	0x03D11B1C CMP X11, X1
	0x03D11B20 B.EQ 0x3D11B40
	0x03D11B24 SUBS X10, X10, 0x1
	0x03D11B28 ADD X8, X8, 0x10
	0x03D11B2C B.NE 0x3D11B18
	0x03D11B30 MOVZ W2, 0x18
	0x03D11B34 MOV X0, X20
	0x03D11B38 BL 0x1C5C788
	0x03D11B3C B 0x3D11B50
	0x03D11B40 LDR W8, [X8]
	0x03D11B44 ADD W8, W8, 0x18
	0x03D11B48 ADD X8, X9, W8, 0x4, SXTW
	0x03D11B4C ADD X0, X8, 0x138
	0x03D11B50 LDP X8, X3, [X0]
	0x03D11B54 MOV X0, X20
	0x03D11B58 MOV X1, X21
	0x03D11B5C MOV X2, X22
	0x03D11B60 BLR X8
	0x03D11B64 LDP S11, S9, [X19 + 0x40]
	0x03D11B68 LDP S8, S10, [X19 + 0x48]
	0x03D11B6C MOV X0, X31
	0x03D11B70 BL 0x3C0B398
	0x03D11B74 FCMP S11, S0
	0x03D11B78 B.NE 0x3D11BB0
	0x03D11B7C FCMP S10, S3
	0x03D11B80 B.NE 0x3D11BB0
	0x03D11B84 FCMP S9, S1
	0x03D11B88 B.NE 0x3D11BB0
	0x03D11B8C FCMP S8, S2
	0x03D11B90 B.NE 0x3D11BB0
	0x03D11B94 LDP X20, X19, [X31 + 0x50]
	0x03D11B98 LDP X22, X21, [X31 + 0x40]
	0x03D11B9C LDP X30, X23, [X31 + 0x30]
	0x03D11BA0 LDP D9, D8, [X31 + 0x20]
	0x03D11BA4 LDP D11, D10, [X31 + 0x10]
	0x03D11BA8 LDR V12, [X31], #0x60
	0x03D11BAC RET
	0x03D11BB0 LDR X0, [X19 + 0x20]
	0x03D11BB4 CBZ X0, 0x3D11C5C
	0x03D11BB8 MOV X1, X31
	0x03D11BBC BL 0x3DE7EEC
	0x03D11BC0 LDR V0, [X19 + 0x48]
	0x03D11BC4 MOV X19, X0
	0x03D11BC8 MOV X0, X31
	0x03D11BCC BL 0x3DFED98
	0x03D11BD0 CBZ X19, 0x3D11C5C
	0x03D11BD4 LDR X9, [X19]
	0x03D11BD8 MOV X8, X1
	0x03D11BDC LDR X1, [X23]
	0x03D11BE0 MOV X20, X0
	0x03D11BE4 LDRH W10, [X9 + 0x12E]
	0x03D11BE8 AND X21, X8, 0x0
	0x03D11BEC CBZ X10, 0x3D11C10
	0x03D11BF0 LDR X8, [X9 + 0xB0]
	0x03D11BF4 ADD X8, X8, 0x8
	0x03D11BF8 LDUR X11, [X8 - 0x8]
	0x03D11BFC CMP X11, X1
	0x03D11C00 B.EQ 0x3D11C20
	0x03D11C04 SUBS X10, X10, 0x1
	0x03D11C08 ADD X8, X8, 0x10
	0x03D11C0C B.NE 0x3D11BF8
	0x03D11C10 MOVZ W2, 0x36
	0x03D11C14 MOV X0, X19
	0x03D11C18 BL 0x1C5C788
	0x03D11C1C B 0x3D11C30
	0x03D11C20 LDR W8, [X8]
	0x03D11C24 ADD W8, W8, 0x36
	0x03D11C28 ADD X8, X9, W8, 0x4, SXTW
	0x03D11C2C ADD X0, X8, 0x138
	0x03D11C30 LDP X4, X3, [X0]
	0x03D11C34 MOV X0, X19
	0x03D11C38 MOV X1, X20
	0x03D11C3C MOV X2, X21
	0x03D11C40 LDP X20, X19, [X31 + 0x50]
	0x03D11C44 LDP X22, X21, [X31 + 0x40]
	0x03D11C48 LDP X30, X23, [X31 + 0x30]
	0x03D11C4C LDP D9, D8, [X31 + 0x20]
	0x03D11C50 LDP D11, D10, [X31 + 0x10]
	0x03D11C54 LDR V12, [X31], #0x60
	0x03D11C58 BR X4
	0x03D11C5C BL 0x1C16F20
	0x03D11C60 MOV W1, W31
	0x03D11C64 B 0x3D0FDA8
	0x03D11C68 B 0x3D116E4
	0x03D11C6C STP X30, X27, [X31 - 0x50]!
	0x03D11C70 STP X26, X25, [X31 + 0x10]
	0x03D11C74 STP X24, X23, [X31 + 0x20]
	0x03D11C78 STP X22, X21, [X31 + 0x30]
	0x03D11C7C STP X20, X19, [X31 + 0x40]
	0x03D11C80 ADRP X27, 0x6D6000
	0x03D11C84 ADRP X26, 0x452000
	0x03D11C88 ADRP X19, 0x40D000
	0x03D11C8C ADRP X25, 0x451000
	0x03D11C90 ADRP X24, 0x40B000
	0x03D11C94 ADRP X23, 0x452000
	0x03D11C98 ADRP X22, 0x452000
	0x03D11C9C ADRP X21, 0x452000
	0x03D11CA0 ADRP X20, 0x452000
	0x03D11CA4 LDR X26, [X26 + 0xBE0]
	0x03D11CA8 LDR X19, [X19 + 0xC8]
	0x03D11CAC LDR X25, [X25 + 0xE60]
	0x03D11CB0 LDRB W8, [X27 + 0x8BE]
	0x03D11CB4 LDR X24, [X24 + 0xEB8]
	0x03D11CB8 LDR X23, [X23 + 0xBE8]
	0x03D11CBC LDR X22, [X22 + 0xBF0]
	0x03D11CC0 LDR X21, [X21 + 0xB40]
	0x03D11CC4 LDR X20, [X20 + 0xBF8]
	0x03D11CC8 TBNZ X8, 0x0, 0x3D11D34
	0x03D11CCC ADRP X0, 0x40D000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x6D7000
	011 Move W8, [X22+2235]
	012 Move X23, X4
	013 Move W24, W3
	014 Move W21, W2
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {47}
	021 Move X0, 0x40E000
	022 Move X0, [X0+200]
	023 Call 0x1C17CF4
	024 Move X0, 0x40C000
	025 Move X0, [X0+304]
	026 Call 0x1C17CF4
	027 Move X0, 0x453000
	028 Move X0, [X0+3000]
	029 Call 0x1C17CF4
	030 Move X0, 0x453000
	031 Move X0, [X0+2968]
	032 Call 0x1C17CF4
	033 Move X0, 0x453000
	034 Move X0, [X0+2976]
	035 Call 0x1C17CF4
	036 Move X0, 0x453000
	037 Move X0, [X0+3008]
	038 Call 0x1C17CF4
	039 Move X0, 0x40B000
	040 Move X0, [X0+2200]
	041 Call 0x1C17CF4
	042 Move X0, 0x3E4000
	043 Move X0, [X0+3784]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X22+2235], W8
	047 Move X0, X20
	048 Move X1, X31
	049 Call String.IsNullOrEmpty, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {66}
	054 Compare X20, 0
	055 JumpIfEqual {237}
	056 Move X8, 0x3E4000
	057 Move X8, [X8+3784]
	058 Move X0, X20
	059 Move X2, X31
	060 Move X1, [X8]
	061 Call String.EndsWith, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {80}
	066 Move X0, X19
	067 Call GenericDropdownMenu.AddSeparator, X0, X1
	068 Move X21, X31
	069 Move X0, X21
	070 Move X20, [X31+64]
	071 Move X19, [X31+72]
	072 Move X22, [X31+48]
	073 Move X21, [X31+56]
	074 Move X24, [X31+32]
	075 Move X23, [X31+40]
	076 Move X26, [X31+16]
	077 Move X25, [X31+24]
	078 Move X30, [X31+80]
	079 Return X0
	080 Move X0, [X19+16]
	081 Compare X0, 0
	082 JumpIfEqual {237}
	083 Move X25, 0x453000
	084 Move X25, [X25+2976]
	085 Move W22, W31
	086 Move W8, [X0+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X2, [X25]
	089 Move W1, W22
	090 Call List`1<Object>.get_Item, X0, X1
	091 Compare X0, 0
	092 JumpIfEqual {237}
	093 Move X1, [X0+16]
	094 Move X0, X20
	095 Move X2, X31
	096 Call String.op_Equality, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {68}
	101 Move X0, [X19+16]
	102 Add W22, W22, 1
	103 Compare X0, 0
	104 JumpIfNotEqual {86}
	105 Move X26, 0x40B000
	106 Move X26, [X26+2200]
	107 Move X0, [X26]
	108 Call 0x1C17F10
	109 Move X1, X31
	110 Move X22, X0
	111 Call VisualElement..ctor, X0
	112 Move X25, 0x40E000
	113 Move X25, [X25+200]
	114 Move X0, [X25]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Compare X22, 0
	120 JumpIfEqual {237}
	121 Move X8, [X25]
	122 Move X0, X22
	123 Move X2, X31
	124 Move X8, [X8+184]
	125 Move X1, [X8+8]
	126 Call VisualElement.AddToClassList, X0, X1
	127 And W1, W24, 1
	128 Move X0, X22
	129 Move X2, X31
	130 Call VisualElement.SetEnabled, X0, X1
	131 Move X0, X22
	132 Move X1, X23
	133 Move X2, X31
	134 Call VisualElement.set_userData, X0, X1
	135 Move X0, [X26]
	136 Call 0x1C17F10
	137 Move X1, X31
	138 Move X23, X0
	139 Call VisualElement..ctor, X0
	140 Compare X23, 0
	141 JumpIfEqual {237}
	142 Move X8, [X25]
	143 Move X0, X23
	144 Move X2, X31
	145 Move X8, [X8+184]
	146 Move X1, [X8+40]
	147 Call VisualElement.AddToClassList, X0, X1
	148 Move W1, 1
	149 Move X0, X23
	150 Move X2, X31
	151 Call VisualElement.set_pickingMode, X0, X1
	152 Move X0, X22
	153 Move X1, X23
	154 Move X2, X31
	155 Call VisualElement.Add, X0, X1
	156 Move TEMP, X21
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {167}
	160 Move X0, X22
	161 Move X1, X31
	162 Call VisualElement.get_pseudoStates, X0
	163 Or W1, W0, 8
	164 Move X0, X22
	165 Move X2, X31
	166 Call VisualElement.set_pseudoStates, X0, X1
	167 Move X8, 0x40C000
	168 Move X8, [X8+304]
	169 Move X0, [X8]
	170 Call 0x1C17F10
	171 Move X1, X20
	172 Move X2, X31
	173 Move X21, X0
	174 Call Label..ctor, X0, X1
	175 Move X0, [X25]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Compare X21, 0
	181 JumpIfEqual {237}
	182 Move X8, [X25]
	183 Move X0, X21
	184 Move X2, X31
	185 Move X8, [X8+184]
	186 Move X1, [X8+16]
	187 Call VisualElement.AddToClassList, X0, X1
	188 Move W1, 1
	189 Move X0, X21
	190 Move X2, X31
	191 Call VisualElement.set_pickingMode, X0, X1
	192 Move X0, X22
	193 Move X1, X21
	194 Move X2, X31
	195 Call VisualElement.Add, X0, X1
	196 Move X0, [X19+40]
	197 Compare X0, 0
	198 JumpIfEqual {237}
	199 Move X1, X22
	200 Move X2, X31
	201 Call VisualElement.Add, X0, X1
	202 Move X8, 0x453000
	203 Move X8, [X8+3008]
	204 Move X0, [X8]
	205 Call 0x1C17F10
	206 Move X1, X31
	207 Move X21, X0
	208 Call Object..ctor, X0
	209 Compare X21, 0
	210 JumpIfEqual {237}
	211 Move [X21+16], X20
	212 Move [X21+24], X22
	213 Move X0, [X19+16]
	214 Compare X0, 0
	215 JumpIfEqual {237}
	216 Move X9, 0x453000
	217 Move X9, [X9+3000]
	218 Move W10, [X0+28]
	219 Move X8, [X0+16]
	220 Move X9, [X9]
	221 Add W10, W10, 1
	222 Move [X0+28], W10
	223 Compare X8, 0
	224 JumpIfEqual {237}
	225 NotImplemented "Instruction LDRSW not yet implemented."
	226 Move W11, [X8+24]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Add W9, W10, 1
	229 Add X8, X8, X10
	230 Move [X0+24], W9
	231 Move [X8+32], X21
	232 Move X8, [X9+32]
	233 Move X1, X21
	234 Move X8, [X8+192]
	235 Move X2, [X8+112]
	236 Call List`1<Object>.AddWithResize, X0, X1
	237 Call 0x1C17F20

Method: System.Void DropDown(UnityEngine.Rect position, UnityEngine.UIElements.VisualElement targetElement = null, System.Boolean anchored = False)

Disassembly:
	0x03D11DBC STR X0, [X8 + 0x20]
	0x03D11DC0 LDR X0, [X8]
	0x03D11DC4 LDR X1, [X21]
	0x03D11DC8 BL 0x321B938
	0x03D11DCC LDR X8, [X19]
	0x03D11DD0 MOV X2, X31
	0x03D11DD4 LDR X8, [X8 + 0xB8]
	0x03D11DD8 STR X0, [X8 + 0x28]
	0x03D11DDC LDR X0, [X8]
	0x03D11DE0 LDR X1, [X20]
	0x03D11DE4 BL 0x321B938
	0x03D11DE8 LDR X8, [X19]
	0x03D11DEC LDP X20, X19, [X31 + 0x40]
	0x03D11DF0 LDP X22, X21, [X31 + 0x30]
	0x03D11DF4 LDP X24, X23, [X31 + 0x20]
	0x03D11DF8 LDR X8, [X8 + 0xB8]
	0x03D11DFC LDP X26, X25, [X31 + 0x10]
	0x03D11E00 STR X0, [X8 + 0x30]
	0x03D11E04 LDP X30, X27, [X31], #0x50
	0x03D11E08 RET
	0x03D11E0C STR X30, [X31 - 0x30]!
	0x03D11E10 STP X22, X21, [X31 + 0x10]
	0x03D11E14 STP X20, X19, [X31 + 0x20]
	0x03D11E18 ADRP X21, 0x6D6000
	0x03D11E1C LDRB W8, [X21 + 0x8C1]
	0x03D11E20 MOV X19, X1
	0x03D11E24 MOV X20, X0
	0x03D11E28 TBNZ X8, 0x0, 0x3D11E4C
	0x03D11E2C ADRP X0, 0x452000
	0x03D11E30 LDR X0, [X0 + 0xC00]
	0x03D11E34 BL 0x1C16CF4
	0x03D11E38 ADRP X0, 0x40B000
	0x03D11E3C LDR X0, [X0 + 0x130]
	0x03D11E40 BL 0x1C16CF4
	0x03D11E44 MOVZ W8, 0x1
	0x03D11E48 STRB W8, [X21 + 0x8C1]
	0x03D11E4C MOV X0, X19
	0x03D11E50 MOV X1, X31
	0x03D11E54 BL 0x32277A8
	0x03D11E58 LDR X8, [X20 + 0x3D8]
	0x03D11E5C TBZ X0, 0x0, 0x3D11E84
	0x03D11E60 CBZ X8, 0x3D11E74
	0x03D11E64 MOV X0, X8
	0x03D11E68 MOV X1, X31
	0x03D11E6C BL 0x3DF6948
	0x03D11E70 STR X31, [X20 + 0x3D8]
	0x03D11E74 LDP X20, X19, [X31 + 0x20]
	0x03D11E78 LDP X22, X21, [X31 + 0x10]
	0x03D11E7C LDR X30, [X31], #0x30
	0x03D11E80 RET
	0x03D11E84 CBNZ X8, 0x3D11EF8
	0x03D11E88 ADRP X8, 0x40B000
	0x03D11E8C LDR X8, [X8 + 0x130]
	0x03D11E90 LDR X0, [X8]
	0x03D11E94 BL 0x1C16F10
	0x03D11E98 MOV X1, X19
	0x03D11E9C MOV X2, X31
	0x03D11EA0 MOV X21, X0
	0x03D11EA4 BL 0x3D6B65C
	0x03D11EA8 STR X21, [X20 + 0x3D8]
	0x03D11EAC ADRP X22, 0x452000
	0x03D11EB0 LDR X22, [X22 + 0xC00]
	0x03D11EB4 LDR X0, [X22]
	0x03D11EB8 LDR W8, [X0 + 0xE0]
	0x03D11EBC CBNZ W8, 0x3D11EC4
	0x03D11EC0 BL 0x1C16DFC
	0x03D11EC4 CBZ X21, 0x3D11F20
	0x03D11EC8 LDR X8, [X22]
	0x03D11ECC MOV X0, X21
	0x03D11ED0 MOV X2, X31
	0x03D11ED4 LDR X8, [X8 + 0xB8]
	0x03D11ED8 LDR X1, [X8 + 0x8]
	0x03D11EDC BL 0x3DF1C70
	0x03D11EE0 LDR X2, [X20 + 0x3D8]
	0x03D11EE4 MOV X0, X20
	0x03D11EE8 MOV W1, W31
	0x03D11EEC MOV X3, X31
	0x03D11EF0 BL 0x3DF6198
	0x03D11EF4 LDR X8, [X20 + 0x3D8]
	0x03D11EF8 CBZ X8, 0x3D11F20
	0x03D11EFC LDR X9, [X8]
	0x03D11F00 MOV X1, X19
	0x03D11F04 LDP X20, X19, [X31 + 0x20]
	0x03D11F08 LDP X22, X21, [X31 + 0x10]
	0x03D11F0C LDR X3, [X9 + 0xB28]
	0x03D11F10 LDR X2, [X9 + 0xB30]
	0x03D11F14 MOV X0, X8
	0x03D11F18 LDR X30, [X31], #0x30
	0x03D11F1C BR X3
	0x03D11F20 BL 0x1C16F20
	0x03D11F24 MOV X1, X31
	0x03D11F28 B 0x3D11F2C
	0x03D11F2C STR X30, [X31 - 0x30]!
	0x03D11F30 STP X22, X21, [X31 + 0x10]
	0x03D11F34 STP X20, X19, [X31 + 0x20]
	0x03D11F38 ADRP X22, 0x6D6000
	0x03D11F3C ADRP X21, 0x452000
	0x03D11F40 LDRB W8, [X22 + 0x8C2]
	0x03D11F44 LDR X21, [X21 + 0xC00]
	0x03D11F48 MOV X19, X1
	0x03D11F4C MOV X20, X0
	0x03D11F50 TBNZ X8, 0x0, 0x3D11F68
	0x03D11F54 ADRP X0, 0x452000
	0x03D11F58 LDR X0, [X0 + 0xC00]
	0x03D11F5C BL 0x1C16CF4
	0x03D11F60 MOVZ W8, 0x1
	0x03D11F64 STRB W8, [X22 + 0x8C2]
	0x03D11F68 MOV X0, X20
	0x03D11F6C MOV X1, X31
	0x03D11F70 BL 0x3CE9F64
	0x03D11F74 LDR X0, [X21]
	0x03D11F78 LDR W8, [X0 + 0xE0]
	0x03D11F7C CBNZ W8, 0x3D11F88
	0x03D11F80 BL 0x1C16DFC
	0x03D11F84 LDR X0, [X21]
	0x03D11F88 LDR X8, [X0 + 0xB8]
	0x03D11F8C MOV X0, X20
	0x03D11F90 MOV X2, X31
	0x03D11F94 LDR X1, [X8]
	0x03D11F98 BL 0x3DF1C70
	0x03D11F9C MOV X0, X20
	0x03D11FA0 MOV X1, X19
	0x03D11FA4 LDP X20, X19, [X31 + 0x20]
	0x03D11FA8 LDP X22, X21, [X31 + 0x10]
	0x03D11FAC LDR X30, [X31], #0x30
	0x03D11FB0 B 0x3D11E0C
	0x03D11FB4 RET
	0x03D11FB8 RET
	0x03D11FBC STR X30, [X31 - 0x30]!
	0x03D11FC0 STP X22, X21, [X31 + 0x10]
	0x03D11FC4 STP X20, X19, [X31 + 0x20]
	0x03D11FC8 ADRP X22, 0x6D6000
	0x03D11FCC ADRP X21, 0x452000
	0x03D11FD0 ADRP X19, 0x452000
	0x03D11FD4 ADRP X20, 0x40B000
	0x03D11FD8 LDRB W8, [X22 + 0x8C3]
	0x03D11FDC LDR X21, [X21 + 0xC08]
	0x03D11FE0 LDR X19, [X19 + 0xC00]
	0x03D11FE4 LDR X20, [X20 + 0xEB8]
	0x03D11FE8 TBNZ X8, 0x0, 0x3D12018
	0x03D11FEC ADRP X0, 0x452000
	0x03D11FF0 LDR X0, [X0 + 0xC00]
	0x03D11FF4 BL 0x1C16CF4
	0x03D11FF8 ADRP X0, 0x452000
	0x03D11FFC LDR X0, [X0 + 0xC08]
	0x03D12000 BL 0x1C16CF4
	0x03D12004 ADRP X0, 0x40A000
	0x03D12008 LDR X0, [X0 + 0xEB8]
	0x03D1200C BL 0x1C16CF4
	0x03D12010 MOVZ W8, 0x1
	0x03D12014 STRB W8, [X22 + 0x8C3]
	0x03D12018 LDR X8, [X19]
	0x03D1201C LDR X9, [X21]
	0x03D12020 MOV X2, X31
	0x03D12024 LDR X8, [X8 + 0xB8]
	0x03D12028 STR X9, [X8]
	0x03D1202C LDR X8, [X19]
	0x03D12030 LDR X1, [X20]
	0x03D12034 LDR X8, [X8 + 0xB8]
	0x03D12038 LDR X0, [X8]
	0x03D1203C BL 0x321B938
	0x03D12040 LDR X8, [X19]
	0x03D12044 LDP X20, X19, [X31 + 0x20]
	0x03D12048 LDP X22, X21, [X31 + 0x10]
	0x03D1204C LDR X8, [X8 + 0xB8]
	0x03D12050 STR X0, [X8 + 0x8]
	0x03D12054 LDR X30, [X31], #0x30
	0x03D12058 RET
	0x03D1205C STP X30, X21, [X31 - 0x20]!
	0x03D12060 STP X20, X19, [X31 + 0x10]
	0x03D12064 ADRP X20, 0x6D5000
	0x03D12068 ADRP X21, 0x451000
	0x03D1206C LDRB W8, [X20 + 0x8C4]
	0x03D12070 LDR X21, [X21 + 0xC10]
	0x03D12074 MOV X19, X0
	0x03D12078 TBNZ X8, 0x0, 0x3D12090
	0x03D1207C ADRP X0, 0x451000
	0x03D12080 LDR X0, [X0 + 0xC10]
	0x03D12084 BL 0x1C16CF4
	0x03D12088 MOVZ W8, 0x1
	0x03D1208C STRB W8, [X20 + 0x8C4]
	0x03D12090 LDR X1, [X21]
	0x03D12094 MOV X0, X19
	0x03D12098 LDP X20, X19, [X31 + 0x10]
	0x03D1209C LDP X30, X21, [X31], #0x20
	0x03D120A0 B 0x2736468
	0x03D120A4 SUB X31, X31, 0x90
	0x03D120A8 STP X30, X23, [X31 + 0x60]
	0x03D120AC STP X22, X21, [X31 + 0x70]
	0x03D120B0 STP X20, X19, [X31 + 0x80]
	0x03D120B4 ADRP X23, 0x6D5000
	0x03D120B8 LDRB W8, [X23 + 0x8C5]
	0x03D120BC MOV X21, X3
	0x03D120C0 MOV X20, X2
	0x03D120C4 MOV X19, X1
	0x03D120C8 MOV X22, X0
	0x03D120CC TBNZ X8, 0x0, 0x3D120E4
	0x03D120D0 ADRP X0, 0x451000
	0x03D120D4 LDR X0, [X0 + 0xC00]
	0x03D120D8 BL 0x1C16CF4
	0x03D120DC MOVZ W8, 0x1
	0x03D120E0 STRB W8, [X23 + 0x8C5]
	0x03D120E4 LDP V1, V0, [X21]
	0x03D120E8 ADD X3, X31, 0x20
	0x03D120EC MOV X0, X22
	0x03D120F0 MOV X1, X19
	0x03D120F4 MOV X2, X20
	0x03D120F8 MOV X4, X31
	0x03D120FC STP V1, V0, [X31 + 0x20]
	0x03D12100 BL 0x3CEA08C
	0x03D12104 LDP V0, V1, [X21]
	0x03D12108 LDR X0, [X22 + 0x78]
	0x03D1210C STP V0, V1, [X31]
	0x03D12110 CBZ X0, 0x3D12190
	0x03D12114 LDR X8, [X0]
	0x03D12118 LDP V0, V1, [X31]
	0x03D1211C ADD X2, X31, 0x40
	0x03D12120 MOV X1, X20
	0x03D12124 LDR X9, [X8 + 0x178]
	0x03D12128 STP V0, V1, [X31 + 0x40]
	0x03D1212C LDR X3, [X8 + 0x180]
	0x03D12130 BLR X9
	0x03D12134 CBZ X19, 0x3D12190
	0x03D12138 ADRP X9, 0x451000
	0x03D1213C LDR X9, [X9 + 0xC00]
	0x03D12140 LDR X8, [X19]
	0x03D12144 LDR X1, [X9]
	0x03D12148 LDRB W10, [X8 + 0x130]
	0x03D1214C LDRB W9, [X1 + 0x130]
	0x03D12150 CMP W10, W9
	0x03D12154 B.CC 0x3D12194
	0x03D12158 LDR X8, [X8 + 0xC8]
	0x03D1215C ADD X8, X8, X9, 0x3, LSL
	0x03D12160 LDUR X8, [X8 - 0x8]
	0x03D12164 CMP X8, X1
	0x03D12168 B.NE 0x3D12194
	0x03D1216C MOV X2, X0
	0x03D12170 MOV X0, X19
	0x03D12174 MOV X1, X2
	0x03D12178 BL 0x3D11E0C
	0x03D1217C LDP X20, X19, [X31 + 0x80]
	0x03D12180 LDP X22, X21, [X31 + 0x70]
	0x03D12184 LDP X30, X23, [X31 + 0x60]
	0x03D12188 ADD X31, X31, 0x90
	0x03D1218C RET
	0x03D12190 BL 0x1C16F20
	0x03D12194 MOV X0, X19
	0x03D12198 BL 0x1C171E0
	0x03D1219C STP X30, X21, [X31 - 0x20]!
	0x03D121A0 STP X20, X19, [X31 + 0x10]
	0x03D121A4 ADRP X20, 0x6D5000
	0x03D121A8 ADRP X21, 0x40B000
	0x03D121AC LDRB W8, [X20 + 0x8C6]
	0x03D121B0 LDR X21, [X21 + 0xB20]
	0x03D121B4 MOV X19, X0
	0x03D121B8 TBNZ X8, 0x0, 0x3D121DC
	0x03D121BC ADRP X0, 0x40B000
	0x03D121C0 LDR X0, [X0 + 0xB20]
	0x03D121C4 BL 0x1C16CF4
	0x03D121C8 ADRP X0, 0x434000
	0x03D121CC LDR X0, [X0 + 0x3E0]
	0x03D121D0 BL 0x1C16CF4
	0x03D121D4 MOVZ W8, 0x1
	0x03D121D8 STRB W8, [X20 + 0x8C6]
	0x03D121DC LDR X0, [X21]
	0x03D121E0 BL 0x1C16F10
	0x03D121E4 MOV X1, X31
	0x03D121E8 MOV X20, X0
	0x03D121EC BL 0x3E0A2F4
	0x03D121F0 CBZ X20, 0x3D1221C
	0x03D121F4 ADRP X8, 0x434000
	0x03D121F8 LDR X8, [X8 + 0x3E0]
	0x03D121FC MOV X0, X19
	0x03D12200 MOV X1, X31
	0x03D12204 LDR X8, [X8]
	0x03D12208 STR X8, [X20 + 0x10]
	0x03D1220C STR X20, [X19 + 0x78]
	0x03D12210 LDP X20, X19, [X31 + 0x10]
	0x03D12214 LDP X30, X21, [X31], #0x20
	0x03D12218 B 0x3CEA004
	0x03D1221C BL 0x1C16F20
	0x03D12220 MOVN W2, 0x0
	0x03D12224 MOV X1, X31
	0x03D12228 B 0x3D1222C
	0x03D1222C STP X30, X25, [X31 - 0x40]!
	0x03D12230 STP X24, X23, [X31 + 0x10]
	0x03D12234 STP X22, X21, [X31 + 0x20]
	0x03D12238 STP X20, X19, [X31 + 0x30]
	0x03D1223C ADRP X23, 0x6D5000
	0x03D12240 ADRP X22, 0x451000
	0x03D12244 ADRP X24, 0x451000
	0x03D12248 LDRB W8, [X23 + 0x8C7]
	0x03D1224C LDR X22, [X22 + 0xC18]
	0x03D12250 LDR X24, [X24 + 0xC20]
	0x03D12254 MOV W20, W2
	0x03D12258 MOV X21, X1
	0x03D1225C MOV X19, X0
	0x03D12260 TBNZ X8, 0x0, 0x3D122B4
	0x03D12264 ADRP X0, 0x451000
	0x03D12268 LDR X0, [X0 + 0xC28]
	0x03D1226C BL 0x1C16CF4
	0x03D12270 ADRP X0, 0x451000
	0x03D12274 LDR X0, [X0 + 0xC30]
	0x03D12278 BL 0x1C16CF4
	0x03D1227C ADRP X0, 0x451000
	0x03D12280 LDR X0, [X0 + 0xC38]
	0x03D12284 BL 0x1C16CF4
	0x03D12288 ADRP X0, 0x451000
	0x03D1228C LDR X0, [X0 + 0xC18]
	0x03D12290 BL 0x1C16CF4
	0x03D12294 ADRP X0, 0x451000
	0x03D12298 LDR X0, [X0 + 0xC40]
	0x03D1229C BL 0x1C16CF4
	0x03D122A0 ADRP X0, 0x451000
	0x03D122A4 LDR X0, [X0 + 0xC20]
	0x03D122A8 BL 0x1C16CF4
	0x03D122AC MOVZ W8, 0x1
	0x03D122B0 STRB W8, [X23 + 0x8C7]
	0x03D122B4 LDR X0, [X22]
	0x03D122B8 ADRP X25, 0x451000
	0x03D122BC ADRP X23, 0x451000
	0x03D122C0 LDR X25, [X25 + 0xC40]
	0x03D122C4 LDR X23, [X23 + 0xC38]
	0x03D122C8 BL 0x1C16F10
	0x03D122CC MOV X22, X0
	0x03D122D0 BL 0x3D123A8
	0x03D122D4 LDR X0, [X24]
	0x03D122D8 LDR W8, [X0 + 0xE0]
	0x03D122DC CBNZ W8, 0x3D122E4
	0x03D122E0 BL 0x1C16DFC
	0x03D122E4 LDR X5, [X25]
	0x03D122E8 MOV X0, X19
	0x03D122EC MOV X1, X21
	0x03D122F0 MOV W2, W20
	0x03D122F4 MOV W3, W31
	0x03D122F8 MOV X4, X22
	0x03D122FC BL 0x26D49EC
	0x03D12300 LDR X8, [X19]
	0x03D12304 MOVZ W9, 0x1
	0x03D12308 STRB W9, [X19 + 0x460]
	0x03D1230C MOV X0, X19
	0x03D12310 LDR X9, [X8 + 0x888]
	0x03D12314 LDR X3, [X8 + 0x890]
	0x03D12318 MOV X1, X31
	0x03D1231C MOV X2, X31
	0x03D12320 BLR X9
	0x03D12324 LDR X0, [X23]
	0x03D12328 LDR W8, [X0 + 0xE0]
	0x03D1232C CBNZ W8, 0x3D12338
	0x03D12330 BL 0x1C16DFC
	0x03D12334 LDR X0, [X23]
	0x03D12338 LDR X8, [X0 + 0xB8]
	0x03D1233C MOV X0, X19
	0x03D12340 MOV X2, X31
	0x03D12344 LDR X1, [X8]
	0x03D12348 BL 0x3DF1C70
	0x03D1234C LDR X0, [X19 + 0x408]
	0x03D12350 CBZ X0, 0x3D123A4
	0x03D12354 LDR X8, [X23]
	0x03D12358 ADRP X20, 0x451000
	0x03D1235C MOV X2, X31
	0x03D12360 LDR X8, [X8 + 0xB8]
	0x03D12364 LDR X1, [X8 + 0x8]
	0x03D12368 LDR X20, [X20 + 0xC30]
	0x03D1236C BL 0x3DF1C70
	0x03D12370 LDR X1, [X20]
	0x03D12374 MOV X0, X19
	0x03D12378 BL 0x277C904
	0x03D1237C CBZ X0, 0x3D123A4
	0x03D12380 LDR X8, [X23]
	0x03D12384 LDP X20, X19, [X31 + 0x30]
	0x03D12388 LDP X22, X21, [X31 + 0x20]
	0x03D1238C LDP X24, X23, [X31 + 0x10]
	0x03D12390 LDR X8, [X8 + 0xB8]
	0x03D12394 MOV X2, X31
	0x03D12398 LDR X1, [X8 + 0x10]
	0x03D1239C LDP X30, X25, [X31], #0x40
	0x03D123A0 B 0x3DF1C70
	0x03D123A4 BL 0x1C16F20
	0x03D123A8 STR X30, [X31 - 0x30]!
	0x03D123AC STP X22, X21, [X31 + 0x10]
	0x03D123B0 STP X20, X19, [X31 + 0x20]
	0x03D123B4 ADRP X21, 0x6D5000
	0x03D123B8 ADRP X19, 0x451000
	0x03D123BC LDRB W8, [X21 + 0x8D1]
	0x03D123C0 LDR X19, [X19 + 0xC48]
	0x03D123C4 MOV X20, X0
	0x03D123C8 TBNZ X8, 0x0, 0x3D12410
	0x03D123CC ADRP X0, 0x40B000
	0x03D123D0 LDR X0, [X0 + 0x648]
	0x03D123D4 BL 0x1C16CF4
	0x03D123D8 ADRP X0, 0x40B000
	0x03D123DC LDR X0, [X0 + 0x630]
	0x03D123E0 BL 0x1C16CF4
	0x03D123E4 ADRP X0, 0x451000
	0x03D123E8 LDR X0, [X0 + 0xC50]
	0x03D123EC BL 0x1C16CF4
	0x03D123F0 ADRP X0, 0x451000
	0x03D123F4 LDR X0, [X0 + 0xC58]
	0x03D123F8 BL 0x1C16CF4
	0x03D123FC ADRP X0, 0x451000
	0x03D12400 LDR X0, [X0 + 0xC48]
	0x03D12404 BL 0x1C16CF4
	0x03D12408 MOVZ W8, 0x1
	0x03D1240C STRB W8, [X21 + 0x8D1]
	0x03D12410 LDR X0, [X19]
	0x03D12414 ADRP X22, 0x451000
	0x03D12418 ADRP X21, 0x451000
	0x03D1241C ADRP X19, 0x40B000
	0x03D12420 LDR W8, [X0 + 0xE0]
	0x03D12424 LDR X22, [X22 + 0xC50]
	0x03D12428 LDR X21, [X21 + 0xC58]
	0x03D1242C LDR X19, [X19 + 0x648]
	0x03D12430 CBNZ W8, 0x3D12438
	0x03D12434 BL 0x1C16DFC
	0x03D12438 LDR X1, [X22]
	0x03D1243C MOV X0, X20
	0x03D12440 BL 0x26B5854
	0x03D12444 LDR X1, [X21]
	0x03D12448 MOV X0, X20
	0x03D1244C BL 0x26B50BC
	0x03D12450 LDR X8, [X19]
	0x03D12454 MOV X19, X0
	0x03D12458 MOV X0, X8
	0x03D1245C BL 0x1C16F10
	0x03D12460 CBZ X20, 0x3D124F4
	0x03D12464 LDR X8, [X20]
	0x03D12468 MOV X1, X20
	0x03D1246C MOV X3, X31
	0x03D12470 MOV X21, X0
	0x03D12474 LDR X2, [X8 + 0x7B0]
	0x03D12478 BL 0x2D2BA94
	0x03D1247C CBZ X19, 0x3D124F4
	0x03D12480 ADRP X10, 0x40B000
	0x03D12484 LDR X8, [X19]
	0x03D12488 LDR X10, [X10 + 0x630]
	0x03D1248C LDRH W9, [X8 + 0x12E]
	0x03D12490 LDR X1, [X10]
	0x03D12494 CBZ X9, 0x3D124B8
	0x03D12498 LDR X10, [X8 + 0xB0]
	0x03D1249C ADD X10, X10, 0x8
	0x03D124A0 LDUR X11, [X10 - 0x8]
	0x03D124A4 CMP X11, X1
	0x03D124A8 B.EQ 0x3D124C8
	0x03D124AC SUBS X9, X9, 0x1
	0x03D124B0 ADD X10, X10, 0x10
	0x03D124B4 B.NE 0x3D124A0
	0x03D124B8 MOVZ W2, 0xB
	0x03D124BC MOV X0, X19
	0x03D124C0 BL 0x1C5C788
	0x03D124C4 B 0x3D124D8
	0x03D124C8 LDR W9, [X10]
	0x03D124CC ADD W9, W9, 0xB
	0x03D124D0 ADD X8, X8, W9, 0x4, SXTW
	0x03D124D4 ADD X0, X8, 0x138
	0x03D124D8 LDP X3, X2, [X0]
	0x03D124DC MOV X0, X19
	0x03D124E0 MOV X1, X21
	0x03D124E4 LDP X20, X19, [X31 + 0x20]
	0x03D124E8 LDP X22, X21, [X31 + 0x10]
	0x03D124EC LDR X30, [X31], #0x30
	0x03D124F0 BR X3
	0x03D124F4 BL 0x1C16F20
	0x03D124F8 STP X30, X21, [X31 - 0x20]!
	0x03D124FC STP X20, X19, [X31 + 0x10]
	0x03D12500 ADRP X20, 0x6D5000
	0x03D12504 ADRP X21, 0x451000
	0x03D12508 LDRB W8, [X20 + 0x8C8]
	0x03D1250C LDR X21, [X21 + 0xC60]
	0x03D12510 MOV X19, X0
	0x03D12514 TBNZ X8, 0x0, 0x3D1252C
	0x03D12518 ADRP X0, 0x451000
	0x03D1251C LDR X0, [X0 + 0xC60]
	0x03D12520 BL 0x1C16CF4
	0x03D12524 MOVZ W8, 0x1
	0x03D12528 STRB W8, [X20 + 0x8C8]
	0x03D1252C LDR X1, [X21]
	0x03D12530 MOV X0, X19
	0x03D12534 LDP X20, X19, [X31 + 0x10]
	0x03D12538 LDP X30, X21, [X31], #0x20
	0x03D1253C B 0x277CB94
	0x03D12540 SUB X31, X31, 0x40
	0x03D12544 STP X30, X23, [X31 + 0x10]
	0x03D12548 STP X22, X21, [X31 + 0x20]
	0x03D1254C STP X20, X19, [X31 + 0x30]
	0x03D12550 ADRP X22, 0x6D5000
	0x03D12554 ADRP X23, 0x451000
	0x03D12558 LDRB W8, [X22 + 0x8C9]
	0x03D1255C LDR X23, [X23 + 0xC68]
	0x03D12560 MOV X20, X2
	0x03D12564 MOV X21, X1
	0x03D12568 MOV X19, X0
	0x03D1256C TBNZ X8, 0x0, 0x3D1259C
	0x03D12570 ADRP X0, 0x451000
	0x03D12574 LDR X0, [X0 + 0xC70]
	0x03D12578 BL 0x1C16CF4
	0x03D1257C ADRP X0, 0x451000
	0x03D12580 LDR X0, [X0 + 0xC68]
	0x03D12584 BL 0x1C16CF4
	0x03D12588 ADRP X0, 0x451000
	0x03D1258C LDR X0, [X0 + 0xC78]
	0x03D12590 BL 0x1C16CF4
	0x03D12594 MOVZ W8, 0x1
	0x03D12598 STRB W8, [X22 + 0x8C9]
	0x03D1259C LDR X3, [X23]
	0x03D125A0 MOV X0, X19
	0x03D125A4 MOV X1, X21
	0x03D125A8 MOV X2, X20
	0x03D125AC BL 0x277CBA4
	0x03D125B0 LDRB W8, [X19 + 0x460]
	0x03D125B4 CBZ W8, 0x3D125F4
	0x03D125B8 ADRP X8, 0x451000
	0x03D125BC LDR X8, [X8 + 0xC70]
	0x03D125C0 ADRP X20, 0x451000
	0x03D125C4 MOV X0, X19
	0x03D125C8 LDR X1, [X8]
	0x03D125CC LDR X20, [X20 + 0xC78]
	0x03D125D0 BL 0x277CA20
	0x03D125D4 STP X0, X1, [X31]
	0x03D125D8 ADD X0, X31, 0x0
	0x03D125DC MOV X1, X31
	0x03D125E0 BL 0x3C22C90
	0x03D125E4 LDR X2, [X20]
	0x03D125E8 MOV X1, X0
	0x03D125EC MOV X0, X19
	0x03D125F0 BL 0x26D4080
	0x03D125F4 LDP X20, X19, [X31 + 0x30]
	0x03D125F8 LDP X22, X21, [X31 + 0x20]
	0x03D125FC LDP X30, X23, [X31 + 0x10]
	0x03D12600 ADD X31, X31, 0x40
	0x03D12604 RET
	0x03D12608 STP X30, X21, [X31 - 0x20]!
	0x03D1260C STP X20, X19, [X31 + 0x10]
	0x03D12610 ADRP X21, 0x6D5000
	0x03D12614 ADRP X20, 0x451000
	0x03D12618 LDRB W8, [X21 + 0x8CA]
	0x03D1261C LDR X20, [X20 + 0xC80]
	0x03D12620 MOV X19, X0
	0x03D12624 TBNZ X8, 0x0, 0x3D1263C
	0x03D12628 ADRP X0, 0x451000
	0x03D1262C LDR X0, [X0 + 0xC80]
	0x03D12630 BL 0x1C16CF4
	0x03D12634 MOVZ W8, 0x1
	0x03D12638 STRB W8, [X21 + 0x8CA]
	0x03D1263C STRB W31, [X19 + 0x460]
	0x03D12640 LDR X1, [X20]
	0x03D12644 MOV X0, X19
	0x03D12648 BL 0x26D405C
	0x03D1264C MOV X1, X0
	0x03D12650 LDR X8, [X19]
	0x03D12654 LDR X9, [X8 + 0x8A8]
	0x03D12658 LDR X2, [X8 + 0x8B0]
	0x03D1265C MOV X0, X19
	0x03D12660 BLR X9
	0x03D12664 LDR X8, [X19]
	0x03D12668 MOV X2, X0
	0x03D1266C MOV X4, X1
	0x03D12670 LDR X9, [X8 + 0x7F8]
	0x03D12674 LDR X3, [X8 + 0x800]
	0x03D12678 MOV X0, X19
	0x03D1267C MOV X1, X2
	0x03D12680 MOV X2, X4
	0x03D12684 BLR X9
	0x03D12688 MOVZ W8, 0x1
	0x03D1268C STRB W8, [X19 + 0x460]
	0x03D12690 LDP X20, X19, [X31 + 0x10]
	0x03D12694 LDP X30, X21, [X31], #0x20
	0x03D12698 RET
	0x03D1269C B 0x3D126A4
	0x03D126A0 B 0x3D126A4
	0x03D126A4 CMP W1, 0x1
	0x03D126A8 B.NE 0x3D126CC
	0x03D126AC BL 0x3EB1AD0
	0x03D126B0 LDR X20, [X0]
	0x03D126B4 BL 0x3EB1AE0
	0x03D126B8 MOVZ W8, 0x1
	0x03D126BC STRB W8, [X19 + 0x460]
	0x03D126C0 CBZ X20, 0x3D12690
	0x03D126C4 MOV X0, X20
	0x03D126C8 BL 0x1C16F18
	0x03D126CC MOVZ W8, 0x1
	0x03D126D0 STRB W8, [X19 + 0x460]
	0x03D126D4 B 0x3D126E4
	0x03D126D8 MOVZ W8, 0x1
	0x03D126DC STRB W8, [X19 + 0x460]
	0x03D126E0 CBNZ X20, 0x3D126E8

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+96], D13
	003 Move [X31+104], D12
	004 Move [X31+112], D11
	005 Move [X31+120], D10
	006 Move [X31+128], D9
	007 Move [X31+136], D8
	008 Move [X31+144], X30
	009 Move [X31+152], X25
	010 Move [X31+160], X24
	011 Move [X31+168], X23
	012 Move [X31+176], X22
	013 Move [X31+184], X21
	014 Move [X31+192], X20
	015 Move [X31+200], X19
	016 Move X22, 0x6D7000
	017 Move W8, [X22+2236]
	018 Move W21, W2
	019 Move X19, X1
	020 Move V8, V3
	021 Move V9, V2
	022 Move V10, V1
	023 Move V11, V0
	024 Move X20, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {58}
	029 Move X0, 0x3E4000
	030 Move X0, [X0+3696]
	031 Call 0x1C17CF4
	032 Move X0, 0x40D000
	033 Move X0, [X0+3432]
	034 Call 0x1C17CF4
	035 Move X0, 0x3E3000
	036 Move X0, [X0+2600]
	037 Call 0x1C17CF4
	038 Move X0, 0x40D000
	039 Move X0, [X0+3448]
	040 Call 0x1C17CF4
	041 Move X0, 0x453000
	042 Move X0, [X0+3016]
	043 Call 0x1C17CF4
	044 Move X0, 0x40C000
	045 Move X0, [X0+296]
	046 Call 0x1C17CF4
	047 Move X0, 0x40B000
	048 Move X0, [X0+1664]
	049 Call 0x1C17CF4
	050 Move X0, 0x453000
	051 Move X0, [X0+3024]
	052 Call 0x1C17CF4
	053 Move X0, 0x453000
	054 Move X0, [X0+3032]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X22+2236], W8
	058 Compare X19, 0
	059 JumpIfEqual {125}
	060 Move X8, 0x40D000
	061 Move X8, [X8+3448]
	062 Move [X20+56], X19
	063 Move X22, 0x453000
	064 Move X23, 0x40D000
	065 Move X0, [X8]
	066 Move X22, [X22+3016]
	067 Move X23, [X23+3432]
	068 Call 0x1C17F10
	069 Move X2, [X22]
	070 Move X1, X20
	071 Move X3, X31
	072 Move X22, X0
	073 Call 0x2D0F824, X0, X1, X2
	074 Move X3, [X23]
	075 Move X0, X19
	076 Move X1, X22
	077 Move W2, W31
	078 Call 0x21A2534, X0, X1, X2
	079 Move X0, [X20+56]
	080 Compare X0, 0
	081 JumpIfEqual {641}
	082 Move X1, X31
	083 Call VisualElement.GetRootVisualContainer, X0
	084 Move [X20+48], X0
	085 Compare X0, 0
	086 JumpIfEqual {134}
	087 Move X1, [X20+24]
	088 Move X2, X31
	089 Call VisualElement.Add, X0, X1
	090 Move X0, [X20+24]
	091 Compare X0, 0
	092 JumpIfEqual {641}
	093 Move X1, X31
	094 Call VisualElement.get_style, X0
	095 Move X8, [X20+48]
	096 Compare X8, 0
	097 JumpIfEqual {641}
	098 Move X22, X0
	099 Move X0, X8
	100 Move X1, X31
	101 Call VisualElement.get_layout, X0
	102 Move X0, X31
	103 Call StyleLength.op_Implicit, V0
	104 Compare X22, 0
	105 JumpIfEqual {641}
	106 Move X25, 0x40C000
	107 Move X9, [X22]
	108 Move X25, [X25+296]
	109 Move X8, X1
	110 Move X23, X0
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Move X1, [X25]
	113 And X24, X8, 0
	114 Compare X10, 0
	115 JumpIfEqual {122}
	116 Move X8, [X9+176]
	117 Add X8, X8, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X10, X10, 1
	121 Add X8, X8, 16
	122 Move W2, 25
	123 Move X0, X22
	124 Call 0x1C5D788
	125 Move X8, 0x3E3000
	126 Move X8, [X8+2600]
	127 Move X0, [X8]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X8, 0x453000
	133 Move X8, [X8+3032]
	134 Move X8, 0x3E3000
	135 Move X8, [X8+2600]
	136 Move X0, [X8]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move X8, 0x453000
	142 Move X8, [X8+3024]
	143 Move X0, [X8]
	144 Move X20, [X31+192]
	145 Move X19, [X31+200]
	146 Move X22, [X31+176]
	147 Move X21, [X31+184]
	148 Move X24, [X31+160]
	149 Move X23, [X31+168]
	150 Move X30, [X31+144]
	151 Move X25, [X31+152]
	152 Move D9, [X31+128]
	153 Move D8, [X31+136]
	154 Move D11, [X31+112]
	155 Move D10, [X31+120]
	156 Move D13, [X31+96]
	157 Move D12, [X31+104]
	158 Move X1, X31
	159 Add X31, X31, 208
	160 Call Debug.LogError, X0
	161 Return 
	162 Move W8, [X8]
	163 Add W8, W8, 25
	164 Add X8, X9, W8
	165 Add X0, X8, 312
	166 Move X8, [X0]
	167 Move X3, [X0+8]
	168 Move X0, X22
	169 Move X1, X23
	170 Move X2, X24
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X0, [X20+24]
	173 Compare X0, 0
	174 JumpIfEqual {641}
	175 Move X1, X31
	176 Call VisualElement.get_style, X0
	177 Move X8, [X20+48]
	178 Compare X8, 0
	179 JumpIfEqual {641}
	180 Move X22, X0
	181 Move X0, X8
	182 Move X1, X31
	183 Call VisualElement.get_layout, X0
	184 Move V0, V1
	185 Move X0, X31
	186 Call StyleLength.op_Implicit, V0
	187 Compare X22, 0
	188 JumpIfEqual {641}
	189 Move X9, [X22]
	190 Move X8, X1
	191 Move X1, [X25]
	192 Move X23, X0
	193 NotImplemented "Instruction LDRH not yet implemented."
	194 And X24, X8, 0
	195 Compare X10, 0
	196 JumpIfEqual {203}
	197 Move X8, [X9+176]
	198 Add X8, X8, 8
	199 NotImplemented "Instruction LDUR not yet implemented."
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Subtract X10, X10, 1
	202 Add X8, X8, 16
	203 Move W2, 45
	204 Move X0, X22
	205 Call 0x1C5D788
	206 Move W8, [X8]
	207 Add W8, W8, 45
	208 Add X8, X9, W8
	209 Add X0, X8, 312
	210 Move X8, [X0]
	211 Move X3, [X0+8]
	212 Move X0, X22
	213 Move X1, X23
	214 Move X2, X24
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Move X0, [X20+24]
	217 Compare X0, 0
	218 JumpIfEqual {641}
	219 Move X1, X31
	220 Call VisualElement.get_style, X0
	221 Move X8, [X20+48]
	222 Compare X8, 0
	223 JumpIfEqual {641}
	224 Move X22, X0
	225 Move X0, X8
	226 Move X1, X31
	227 Call VisualElement.get_layout, X0
	228 Move V0, V2
	229 Move X0, X31
	230 Call StyleLength.op_Implicit, V0
	231 Compare X22, 0
	232 JumpIfEqual {641}
	233 Move X9, [X22]
	234 Move X8, X1
	235 Move X1, [X25]
	236 Move X23, X0
	237 NotImplemented "Instruction LDRH not yet implemented."
	238 And X24, X8, 0
	239 Compare X10, 0
	240 JumpIfEqual {247}
	241 Move X8, [X9+176]
	242 Add X8, X8, 8
	243 NotImplemented "Instruction LDUR not yet implemented."
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Subtract X10, X10, 1
	246 Add X8, X8, 16
	247 Move W2, 54
	248 Move X0, X22
	249 Call 0x1C5D788
	250 Move W8, [X8]
	251 Add W8, W8, 54
	252 Add X8, X9, W8
	253 Add X0, X8, 312
	254 Move X8, [X0]
	255 Move X3, [X0+8]
	256 Move X0, X22
	257 Move X1, X23
	258 Move X2, X24
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Move X0, [X20+24]
	261 Compare X0, 0
	262 JumpIfEqual {641}
	263 Move X1, X31
	264 Call VisualElement.get_style, X0
	265 Move X8, [X20+48]
	266 Compare X8, 0
	267 JumpIfEqual {641}
	268 Move X22, X0
	269 Move X0, X8
	270 Move X1, X31
	271 Call VisualElement.get_layout, X0
	272 Move V0, V3
	273 Move X0, X31
	274 Call StyleLength.op_Implicit, V0
	275 Compare X22, 0
	276 JumpIfEqual {641}
	277 Move X9, [X22]
	278 Move X8, X1
	279 Move X1, [X25]
	280 Move X23, X0
	281 NotImplemented "Instruction LDRH not yet implemented."
	282 And X24, X8, 0
	283 Compare X10, 0
	284 JumpIfEqual {291}
	285 Move X8, [X9+176]
	286 Add X8, X8, 8
	287 NotImplemented "Instruction LDUR not yet implemented."
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Subtract X10, X10, 1
	290 Add X8, X8, 16
	291 Move W2, 24
	292 Move X0, X22
	293 Call 0x1C5D788
	294 Move W8, [X8]
	295 Add W8, W8, 24
	296 Add X8, X9, W8
	297 Add X0, X8, 312
	298 Move X8, [X0]
	299 Move X3, [X0+8]
	300 Move X0, X22
	301 Move X1, X23
	302 Move X2, X24
	303 NotImplemented "Instruction BLR not yet implemented."
	304 Move X0, [X20+24]
	305 Compare X0, 0
	306 JumpIfEqual {641}
	307 Move X1, X31
	308 Call VisualElement.get_style, X0
	309 Move X8, [X20+56]
	310 Compare X8, 0
	311 JumpIfEqual {641}
	312 Move X22, X0
	313 Move X0, X8
	314 Move X1, X31
	315 Call VisualElement.get_computedStyle, X0
	316 Move X1, X31
	317 Call ComputedStyle.get_fontSize, X0
	318 Move X1, X31
	319 Call StyleLength.op_Implicit, X0
	320 Compare X22, 0
	321 JumpIfEqual {641}
	322 Move X9, [X22]
	323 Move X8, X1
	324 Move X1, [X25]
	325 Move X23, X0
	326 NotImplemented "Instruction LDRH not yet implemented."
	327 And X24, X8, 0
	328 Compare X10, 0
	329 JumpIfEqual {336}
	330 Move X8, [X9+176]
	331 Add X8, X8, 8
	332 NotImplemented "Instruction LDUR not yet implemented."
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Subtract X10, X10, 1
	335 Add X8, X8, 16
	336 Move W2, 23
	337 Move X0, X22
	338 Call 0x1C5D788
	339 Move W8, [X8]
	340 Add W8, W8, 23
	341 Add X8, X9, W8
	342 Add X0, X8, 312
	343 Move X8, [X0]
	344 Move X3, [X0+8]
	345 Move X0, X22
	346 Move X1, X23
	347 Move X2, X24
	348 NotImplemented "Instruction BLR not yet implemented."
	349 Move X0, [X20+24]
	350 Compare X0, 0
	351 JumpIfEqual {641}
	352 Move X1, X31
	353 Call VisualElement.get_style, X0
	354 Move X8, [X20+56]
	355 Compare X8, 0
	356 JumpIfEqual {641}
	357 Move X22, X0
	358 Move X0, X8
	359 Move X1, X31
	360 Call VisualElement.get_computedStyle, X0
	361 Move X1, X31
	362 Call ComputedStyle.get_unityFont, X0
	363 Move X1, X31
	364 Call StyleFont.op_Implicit, X0
	365 Compare X22, 0
	366 JumpIfEqual {641}
	367 Move X8, [X22]
	368 Move X24, X1
	369 Move X1, [X25]
	370 Move X23, X0
	371 NotImplemented "Instruction LDRH not yet implemented."
	372 Compare X9, 0
	373 JumpIfEqual {380}
	374 Move X10, [X8+176]
	375 Add X10, X10, 8
	376 NotImplemented "Instruction LDUR not yet implemented."
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Subtract X9, X9, 1
	379 Add X10, X10, 16
	380 Move W2, 50
	381 Move X0, X22
	382 Call 0x1C5D788
	383 Move W9, [X10]
	384 Add W9, W9, 50
	385 Add X8, X8, W9
	386 Add X0, X8, 312
	387 Move X8, [X0]
	388 Move X3, [X0+8]
	389 Move X0, X22
	390 Move X1, X23
	391 Move X2, X24
	392 NotImplemented "Instruction BLR not yet implemented."
	393 Move X0, [X20+24]
	394 Compare X0, 0
	395 JumpIfEqual {641}
	396 Move X1, X31
	397 Call VisualElement.get_style, X0
	398 Move X8, [X20+56]
	399 Compare X8, 0
	400 JumpIfEqual {641}
	401 Move X22, X0
	402 Move X0, X8
	403 Move X1, X31
	404 Call VisualElement.get_computedStyle, X0
	405 Move X1, X31
	406 Call ComputedStyle.get_unityFontDefinition, X0
	407 Add X8, X31, 64
	408 Move X2, X31
	409 Call StyleFontDefinition.op_Implicit, X0
	410 Move V0, [X31+4]
	411 Move X8, [X31+80]
	412 Move [X31+2], V0
	413 Move [X31+48], X8
	414 Compare X22, 0
	415 JumpIfEqual {641}
	416 Move V0, [X31+2]
	417 Move X8, [X31+48]
	418 Move X1, [X25]
	419 Move [X31], V0
	420 Move [X31+16], X8
	421 Move X8, [X22]
	422 NotImplemented "Instruction LDRH not yet implemented."
	423 Compare X9, 0
	424 JumpIfEqual {431}
	425 Move X10, [X8+176]
	426 Add X10, X10, 8
	427 NotImplemented "Instruction LDUR not yet implemented."
	428 NotImplemented "Instruction CMP not yet implemented."
	429 Subtract X9, X9, 1
	430 Add X10, X10, 16
	431 Move W2, 51
	432 Move X0, X22
	433 Call 0x1C5D788
	434 Move W9, [X10]
	435 Add W9, W9, 51
	436 Add X8, X8, W9
	437 Add X0, X8, 312
	438 Move V0, [X31]
	439 Move X8, [X31+16]
	440 Move X9, [X0]
	441 Add X1, X31, 64
	442 Move [X31+4], V0
	443 Move [X31+80], X8
	444 Move X2, [X0+8]
	445 Move X0, X22
	446 NotImplemented "Instruction BLR not yet implemented."
	447 Move X0, [X20+48]
	448 Move V0, V11
	449 Move V1, V10
	450 Move V2, V9
	451 Move V3, V8
	452 Move X1, X31
	453 Call VisualElementExtensions.WorldToLocal, X0, X1
	454 Move X0, [X20+32]
	455 Compare X0, 0
	456 JumpIfEqual {641}
	457 Move X1, X31
	458 Move V13, V0
	459 Move V12, V1
	460 Call VisualElement.get_style, X0
	461 Move X8, [X20+48]
	462 Compare X8, 0
	463 JumpIfEqual {641}
	464 Move X22, X0
	465 Move X0, X8
	466 Move X1, X31
	467 Call VisualElement.get_layout, X0
	468 Subtract S0, S13, S0
	469 Move X0, X31
	470 Call StyleLength.op_Implicit, V0
	471 Compare X22, 0
	472 JumpIfEqual {641}
	473 Move X9, [X22]
	474 Move X8, X1
	475 Move X1, [X25]
	476 Move X23, X0
	477 NotImplemented "Instruction LDRH not yet implemented."
	478 And X24, X8, 0
	479 Compare X10, 0
	480 JumpIfEqual {487}
	481 Move X8, [X9+176]
	482 Add X8, X8, 8
	483 NotImplemented "Instruction LDUR not yet implemented."
	484 NotImplemented "Instruction CMP not yet implemented."
	485 Subtract X10, X10, 1
	486 Add X8, X8, 16
	487 Move W2, 25
	488 Move X0, X22
	489 Call 0x1C5D788
	490 Move W8, [X8]
	491 Add W8, W8, 25
	492 Add X8, X9, W8
	493 Add X0, X8, 312
	494 Move X8, [X0]
	495 Move X3, [X0+8]
	496 Move X0, X22
	497 Move X1, X23
	498 Move X2, X24
	499 NotImplemented "Instruction BLR not yet implemented."
	500 Move X0, [X20+32]
	501 Compare X0, 0
	502 JumpIfEqual {641}
	503 Move X1, X31
	504 Call VisualElement.get_style, X0
	505 Move X8, [X20+48]
	506 Compare X8, 0
	507 JumpIfEqual {641}
	508 Move X22, X0
	509 Move X0, X8
	510 Move X1, X31
	511 Call VisualElement.get_layout, X0
	512 Add S0, S8, S12
	513 Subtract S0, S0, S1
	514 Move X0, X31
	515 Call StyleLength.op_Implicit, V0
	516 Compare X22, 0
	517 JumpIfEqual {641}
	518 Move X9, [X22]
	519 Move X8, X1
	520 Move X1, [X25]
	521 Move X23, X0
	522 NotImplemented "Instruction LDRH not yet implemented."
	523 And X24, X8, 0
	524 Compare X10, 0
	525 JumpIfEqual {532}
	526 Move X8, [X9+176]
	527 Add X8, X8, 8
	528 NotImplemented "Instruction LDUR not yet implemented."
	529 NotImplemented "Instruction CMP not yet implemented."
	530 Subtract X10, X10, 1
	531 Add X8, X8, 16
	532 Move W2, 45
	533 Move X0, X22
	534 Call 0x1C5D788
	535 Move W8, [X8]
	536 Add W8, W8, 45
	537 Add X8, X9, W8
	538 Add X0, X8, 312
	539 Move X8, [X0]
	540 Move X3, [X0+8]
	541 Move X0, X22
	542 Move X1, X23
	543 Move X2, X24
	544 NotImplemented "Instruction BLR not yet implemented."
	545 Move TEMP, X21
	546 And TEMP, TEMP, 1
	547 Compare TEMP, 1
	548 JumpIfEqual {555}
	549 Move X0, X31
	550 Call Rect.get_zero
	551 Move V11, V0
	552 Move V10, V1
	553 Move V9, V2
	554 Move V8, V3
	555 Compare X20, 0
	556 JumpIfEqual {641}
	557 Move X0, [X20+24]
	558 Move [X20+64], S11
	559 Move [X20+72], S10
	560 Move [X20+72], S9
	561 Move [X20+80], S8
	562 Compare X0, 0
	563 JumpIfEqual {641}
	564 Move X1, X31
	565 Call VisualElement.get_schedule, X0
	566 Move X8, [X20+40]
	567 Compare X8, 0
	568 JumpIfEqual {641}
	569 Move X9, [X8]
	570 Move X21, X0
	571 Move X0, X8
	572 Move X10, [X9+1896]
	573 Move X1, [X9+1904]
	574 NotImplemented "Instruction BLR not yet implemented."
	575 Move X8, 0x3E3000
	576 Move X8, [X8+3696]
	577 Move X23, X0
	578 Move X8, [X8]
	579 Move X0, X8
	580 Call 0x1C17F10
	581 Compare X23, 0
	582 JumpIfEqual {641}
	583 Move X8, [X23]
	584 Move X1, X23
	585 Move X3, X31
	586 Move X22, X0
	587 Move X2, [X8+592]
	588 Call Action..ctor, X0, X1, X2
	589 Compare X21, 0
	590 JumpIfEqual {641}
	591 Move X10, 0x40A000
	592 Move X8, [X21]
	593 Move X10, [X10+1664]
	594 NotImplemented "Instruction LDRH not yet implemented."
	595 Move X1, [X10]
	596 Compare X9, 0
	597 JumpIfEqual {604}
	598 Move X10, [X8+176]
	599 Add X10, X10, 8
	600 NotImplemented "Instruction LDUR not yet implemented."
	601 NotImplemented "Instruction CMP not yet implemented."
	602 Subtract X9, X9, 1
	603 Add X10, X10, 16
	604 Move W2, 1
	605 Move X0, X21
	606 Call 0x1C5D788
	607 Move W9, [X10]
	608 Add W9, W9, 1
	609 Add X8, X8, W9
	610 Add X0, X8, 312
	611 Move X8, [X0]
	612 Move X2, [X0+8]
	613 Move X0, X21
	614 Move X1, X22
	615 NotImplemented "Instruction BLR not yet implemented."
	616 Move X0, X20
	617 Call GenericDropdownMenu.EnsureVisibilityInParent, X0
	618 Move X0, X19
	619 Move X1, X31
	620 Call VisualElement.get_pseudoStates, X0
	621 Or W1, W0, 1
	622 Move X0, X19
	623 Move X2, X31
	624 Call VisualElement.set_pseudoStates, X0, X1
	625 Move X20, [X31+192]
	626 Move X19, [X31+200]
	627 Move X22, [X31+176]
	628 Move X21, [X31+184]
	629 Move X24, [X31+160]
	630 Move X23, [X31+168]
	631 Move X30, [X31+144]
	632 Move X25, [X31+152]
	633 Move D9, [X31+128]
	634 Move D8, [X31+136]
	635 Move D11, [X31+112]
	636 Move D10, [X31+120]
	637 Move D13, [X31+96]
	638 Move D12, [X31+104]
	639 Add X31, X31, 208
	640 Return 
	641 Call 0x1C17F20

Method: System.Void OnTargetElementDetachFromPanel(UnityEngine.UIElements.DetachFromPanelEvent evt)

Disassembly:
	0x03D12C60 LDR X0, [X0 + 0xCC8]
	0x03D12C64 BL 0x1C16CF4

ISIL:
	001 Move W1, W31
	002 Call GenericDropdownMenu.Hide, X0, X1
	003 Return 

Method: System.Void OnContainerGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent evt)

Disassembly:
	0x03D12C68 MOVZ W8, 0x1

ISIL:
	001 Call GenericDropdownMenu.EnsureVisibilityInParent, X0
	002 Return 

Method: System.Void EnsureVisibilityInParent()

Disassembly:
	0x03D126E4 BL 0x1D2C690
	0x03D126E8 MOV X0, X20
	0x03D126EC BL 0x1C16F18
	0x03D126F0 BL 0x1990590
	0x03D126F4 STR X30, [X31 - 0x30]!
	0x03D126F8 STP X22, X21, [X31 + 0x10]
	0x03D126FC STP X20, X19, [X31 + 0x20]
	0x03D12700 ADRP X21, 0x6D5000
	0x03D12704 ADRP X22, 0x451000
	0x03D12708 ADRP X20, 0x451000
	0x03D1270C LDRB W8, [X21 + 0x8CB]
	0x03D12710 LDR X22, [X22 + 0xC70]
	0x03D12714 LDR X20, [X20 + 0xC78]
	0x03D12718 MOV X19, X0
	0x03D1271C TBNZ X8, 0x0, 0x3D12740
	0x03D12720 ADRP X0, 0x451000
	0x03D12724 LDR X0, [X0 + 0xC70]
	0x03D12728 BL 0x1C16CF4
	0x03D1272C ADRP X0, 0x451000
	0x03D12730 LDR X0, [X0 + 0xC78]
	0x03D12734 BL 0x1C16CF4
	0x03D12738 MOVZ W8, 0x1
	0x03D1273C STRB W8, [X21 + 0x8CB]
	0x03D12740 LDR X1, [X22]
	0x03D12744 MOV X0, X19
	0x03D12748 BL 0x277CA20
	0x03D1274C LDR X8, [X19]
	0x03D12750 MOV X2, X0
	0x03D12754 MOV X4, X1
	0x03D12758 MOV X0, X19
	0x03D1275C LDR X9, [X8 + 0x898]
	0x03D12760 LDR X3, [X8 + 0x8A0]
	0x03D12764 MOV X1, X2
	0x03D12768 MOV X2, X4
	0x03D1276C BLR X9
	0x03D12770 LDR X2, [X20]
	0x03D12774 MOV X1, X0
	0x03D12778 MOV X0, X19
	0x03D1277C LDP X20, X19, [X31 + 0x20]
	0x03D12780 LDP X22, X21, [X31 + 0x10]
	0x03D12784 LDR X30, [X31], #0x30
	0x03D12788 B 0x26D4080
	0x03D1278C SUB X31, X31, 0x40
	0x03D12790 STP X30, X23, [X31 + 0x10]
	0x03D12794 STP X22, X21, [X31 + 0x20]
	0x03D12798 STP X20, X19, [X31 + 0x30]
	0x03D1279C ADRP X22, 0x6D5000
	0x03D127A0 ADRP X23, 0x451000
	0x03D127A4 LDRB W8, [X22 + 0x8CC]
	0x03D127A8 LDR X23, [X23 + 0xC88]
	0x03D127AC MOV X20, X2
	0x03D127B0 MOV X21, X1
	0x03D127B4 MOV X19, X0
	0x03D127B8 TBNZ X8, 0x0, 0x3D127E8
	0x03D127BC ADRP X0, 0x451000
	0x03D127C0 LDR X0, [X0 + 0xC88]
	0x03D127C4 BL 0x1C16CF4
	0x03D127C8 ADRP X0, 0x451000
	0x03D127CC LDR X0, [X0 + 0xC70]
	0x03D127D0 BL 0x1C16CF4
	0x03D127D4 ADRP X0, 0x451000
	0x03D127D8 LDR X0, [X0 + 0xC78]
	0x03D127DC BL 0x1C16CF4
	0x03D127E0 MOVZ W8, 0x1
	0x03D127E4 STRB W8, [X22 + 0x8CC]
	0x03D127E8 LDR X3, [X23]
	0x03D127EC MOV X0, X19
	0x03D127F0 MOV X1, X21
	0x03D127F4 MOV X2, X20
	0x03D127F8 BL 0x277E3C8
	0x03D127FC LDRB W8, [X19 + 0x460]
	0x03D12800 CBZ W8, 0x3D12840
	0x03D12804 ADRP X8, 0x451000
	0x03D12808 LDR X8, [X8 + 0xC70]
	0x03D1280C ADRP X20, 0x451000
	0x03D12810 MOV X0, X19
	0x03D12814 LDR X1, [X8]
	0x03D12818 LDR X20, [X20 + 0xC78]
	0x03D1281C BL 0x277CA20
	0x03D12820 STP X0, X1, [X31]
	0x03D12824 ADD X0, X31, 0x0
	0x03D12828 MOV X1, X31
	0x03D1282C BL 0x3C22C90
	0x03D12830 LDR X2, [X20]
	0x03D12834 MOV X1, X0
	0x03D12838 MOV X0, X19
	0x03D1283C BL 0x26D4080
	0x03D12840 LDP X20, X19, [X31 + 0x30]
	0x03D12844 LDP X22, X21, [X31 + 0x20]
	0x03D12848 LDP X30, X23, [X31 + 0x10]
	0x03D1284C ADD X31, X31, 0x40
	0x03D12850 RET
	0x03D12854 SUB X31, X31, 0x20
	0x03D12858 STP X2, X30, [X31 + 0x8]
	0x03D1285C STR X1, [X31]
	0x03D12860 ADD X0, X31, 0x0
	0x03D12864 MOV X1, X31
	0x03D12868 BL 0x3C22C90
	0x03D1286C LDR X30, [X31 + 0x10]
	0x03D12870 ADD X31, X31, 0x20
	0x03D12874 RET
	0x03D12878 MOV X0, X1
	0x03D1287C B 0x3D12880
	0x03D12880 SUB X31, X31, 0x30
	0x03D12884 STP X30, X19, [X31 + 0x20]
	0x03D12888 STR X31, [X31 + 0x18]
	0x03D1288C CBZ X0, 0x3D128EC
	0x03D12890 LDR W8, [X0 + 0x10]
	0x03D12894 MOV X19, X0
	0x03D12898 CMP W8, 0x1
	0x03D1289C B.NE 0x3D128D4
	0x03D128A0 ADD X1, X31, 0x18
	0x03D128A4 MOV X0, X19
	0x03D128A8 MOV X2, X31
	0x03D128AC BL 0x339AEF8
	0x03D128B0 TBZ X0, 0x0, 0x3D128D4
	0x03D128B4 LDR X1, [X31 + 0x18]
	0x03D128B8 ADD X0, X31, 0x8
	0x03D128BC MOV X2, X31
	0x03D128C0 MOV X3, X31
	0x03D128C4 STP X31, X31, [X31 + 0x8]
	0x03D128C8 BL 0x3C22BE0
	0x03D128CC LDP X0, X1, [X31 + 0x8]
	0x03D128D0 B 0x3D128E0
	0x03D128D4 MOV X0, X19
	0x03D128D8 MOV X1, X31
	0x03D128DC BL 0x3C22CDC
	0x03D128E0 LDP X30, X19, [X31 + 0x20]
	0x03D128E4 ADD X31, X31, 0x30
	0x03D128E8 RET
	0x03D128EC BL 0x1C16F20
	0x03D128F0 STP X30, X21, [X31 - 0x20]!
	0x03D128F4 STP X20, X19, [X31 + 0x10]
	0x03D128F8 ADRP X21, 0x6D5000
	0x03D128FC LDRB W8, [X21 + 0x8CD]
	0x03D12900 MOV X20, X1
	0x03D12904 MOV X19, X0
	0x03D12908 TBNZ X8, 0x0, 0x3D12974
	0x03D1290C ADRP X0, 0x40B000
	0x03D12910 LDR X0, [X0 + 0x6E8]
	0x03D12914 BL 0x1C16CF4
	0x03D12918 ADRP X0, 0x40B000
	0x03D1291C LDR X0, [X0 + 0x6F8]
	0x03D12920 BL 0x1C16CF4
	0x03D12924 ADRP X0, 0x40B000
	0x03D12928 LDR X0, [X0 + 0x630]
	0x03D1292C BL 0x1C16CF4
	0x03D12930 ADRP X0, 0x451000
	0x03D12934 LDR X0, [X0 + 0xC90]
	0x03D12938 BL 0x1C16CF4
	0x03D1293C ADRP X0, 0x451000
	0x03D12940 LDR X0, [X0 + 0xC98]
	0x03D12944 BL 0x1C16CF4
	0x03D12948 ADRP X0, 0x451000
	0x03D1294C LDR X0, [X0 + 0xC80]
	0x03D12950 BL 0x1C16CF4
	0x03D12954 ADRP X0, 0x451000
	0x03D12958 LDR X0, [X0 + 0xCA0]
	0x03D1295C BL 0x1C16CF4
	0x03D12960 ADRP X0, 0x451000
	0x03D12964 LDR X0, [X0 + 0xCA8]
	0x03D12968 BL 0x1C16CF4
	0x03D1296C MOVZ W8, 0x1
	0x03D12970 STRB W8, [X21 + 0x8CD]
	0x03D12974 MOV X0, X19
	0x03D12978 MOV X1, X20
	0x03D1297C MOV X2, X31
	0x03D12980 BL 0x3DEF858
	0x03D12984 CBZ X20, 0x3D12A98
	0x03D12988 ADRP X8, 0x451000
	0x03D1298C LDR X8, [X8 + 0xC90]
	0x03D12990 MOV X0, X19
	0x03D12994 LDR X1, [X8]
	0x03D12998 BL 0x26D46A8
	0x03D1299C CBZ X0, 0x3D12ADC
	0x03D129A0 ADRP X10, 0x40B000
	0x03D129A4 LDR X8, [X0]
	0x03D129A8 LDR X10, [X10 + 0x630]
	0x03D129AC MOV X21, X0
	0x03D129B0 LDRH W9, [X8 + 0x12E]
	0x03D129B4 LDR X1, [X10]
	0x03D129B8 CBZ X9, 0x3D129DC
	0x03D129BC LDR X10, [X8 + 0xB0]
	0x03D129C0 ADD X10, X10, 0x8
	0x03D129C4 LDUR X11, [X10 - 0x8]
	0x03D129C8 CMP X11, X1
	0x03D129CC B.EQ 0x3D129EC
	0x03D129D0 SUBS X9, X9, 0x1
	0x03D129D4 ADD X10, X10, 0x10
	0x03D129D8 B.NE 0x3D129C4
	0x03D129DC MOVZ W2, 0x2
	0x03D129E0 MOV X0, X21
	0x03D129E4 BL 0x1C5C788
	0x03D129E8 B 0x3D129FC
	0x03D129EC LDR W9, [X10]
	0x03D129F0 ADD W9, W9, 0x2
	0x03D129F4 ADD X8, X8, W9, 0x4, SXTW
	0x03D129F8 ADD X0, X8, 0x138
	0x03D129FC LDP X8, X1, [X0]
	0x03D12A00 MOV X0, X21
	0x03D12A04 BLR X8
	0x03D12A08 TBNZ X0, 0x0, 0x3D12A98
	0x03D12A0C LDR X8, [X20]
	0x03D12A10 MOV X0, X20
	0x03D12A14 LDP X9, X1, [X8 + 0x188]
	0x03D12A18 BLR X9
	0x03D12A1C ADRP X8, 0x40B000
	0x03D12A20 LDR X8, [X8 + 0x6F8]
	0x03D12A24 MOV X20, X0
	0x03D12A28 LDR X8, [X8]
	0x03D12A2C LDR W9, [X8 + 0xE0]
	0x03D12A30 CBNZ W9, 0x3D12A3C
	0x03D12A34 MOV X0, X8
	0x03D12A38 BL 0x1C16DFC
	0x03D12A3C ADRP X8, 0x40B000
	0x03D12A40 LDR X8, [X8 + 0x6E8]
	0x03D12A44 LDR X0, [X8]
	0x03D12A48 BL 0x2D0D5C8
	0x03D12A4C CMP X20, X0
	0x03D12A50 B.NE 0x3D12A98
	0x03D12A54 ADRP X8, 0x451000
	0x03D12A58 LDR X8, [X8 + 0xC80]
	0x03D12A5C MOV X0, X19
	0x03D12A60 LDR X1, [X8]
	0x03D12A64 BL 0x26D405C
	0x03D12A68 MOV X1, X31
	0x03D12A6C BL 0x32277A8
	0x03D12A70 TBZ X0, 0x0, 0x3D12AA4
	0x03D12A74 LDR X8, [X19]
	0x03D12A78 MOV X0, X19
	0x03D12A7C LDP X20, X19, [X31 + 0x10]
	0x03D12A80 MOV X1, X31
	0x03D12A84 LDR X4, [X8 + 0x7F8]
	0x03D12A88 LDR X3, [X8 + 0x800]
	0x03D12A8C MOV X2, X31
	0x03D12A90 LDP X30, X21, [X31], #0x20
	0x03D12A94 BR X4
	0x03D12A98 LDP X20, X19, [X31 + 0x10]
	0x03D12A9C LDP X30, X21, [X31], #0x20
	0x03D12AA0 RET
	0x03D12AA4 LDR X0, [X19 + 0x450]
	0x03D12AA8 CBZ X0, 0x3D12ADC
	0x03D12AAC ADRP X8, 0x451000
	0x03D12AB0 LDR X8, [X8 + 0xCA8]
	0x03D12AB4 LDR X1, [X8]
	0x03D12AB8 BL 0x26B5290
	0x03D12ABC LDR X0, [X19 + 0x450]
	0x03D12AC0 CBZ X0, 0x3D12ADC
	0x03D12AC4 ADRP X8, 0x451000
	0x03D12AC8 LDR X8, [X8 + 0xCA0]
	0x03D12ACC LDP X20, X19, [X31 + 0x10]
	0x03D12AD0 LDR X1, [X8]
	0x03D12AD4 LDP X30, X21, [X31], #0x20
	0x03D12AD8 B 0x26B5314
	0x03D12ADC BL 0x1C16F20
	0x03D12AE0 STP X30, X23, [X31 - 0x30]!
	0x03D12AE4 STP X22, X21, [X31 + 0x10]
	0x03D12AE8 STP X20, X19, [X31 + 0x20]
	0x03D12AEC ADRP X23, 0x6D5000
	0x03D12AF0 ADRP X22, 0x451000
	0x03D12AF4 ADRP X19, 0x451000
	0x03D12AF8 ADRP X21, 0x40A000
	0x03D12AFC ADRP X20, 0x40A000
	0x03D12B00 LDRB W8, [X23 + 0x8CE]
	0x03D12B04 LDR X22, [X22 + 0xCB0]
	0x03D12B08 LDR X19, [X19 + 0xC38]
	0x03D12B0C LDR X21, [X21 + 0xEB8]
	0x03D12B10 LDR X20, [X20 + 0xEC0]
	0x03D12B14 TBNZ X8, 0x0, 0x3D12B50
	0x03D12B18 ADRP X0, 0x451000
	0x03D12B1C LDR X0, [X0 + 0xC38]
	0x03D12B20 BL 0x1C16CF4
	0x03D12B24 ADRP X0, 0x451000
	0x03D12B28 LDR X0, [X0 + 0xCB0]
	0x03D12B2C BL 0x1C16CF4
	0x03D12B30 ADRP X0, 0x40A000
	0x03D12B34 LDR X0, [X0 + 0xEB8]
	0x03D12B38 BL 0x1C16CF4
	0x03D12B3C ADRP X0, 0x40A000
	0x03D12B40 LDR X0, [X0 + 0xEC0]
	0x03D12B44 BL 0x1C16CF4
	0x03D12B48 MOVZ W8, 0x1
	0x03D12B4C STRB W8, [X23 + 0x8CE]
	0x03D12B50 LDR X8, [X19]
	0x03D12B54 LDR X9, [X22]
	0x03D12B58 MOV X2, X31
	0x03D12B5C LDR X8, [X8 + 0xB8]
	0x03D12B60 STR X9, [X8]
	0x03D12B64 LDR X8, [X19]
	0x03D12B68 LDR X1, [X21]
	0x03D12B6C LDR X8, [X8 + 0xB8]
	0x03D12B70 LDR X0, [X8]
	0x03D12B74 BL 0x321B938
	0x03D12B78 LDR X8, [X19]
	0x03D12B7C MOV X2, X31
	0x03D12B80 LDR X8, [X8 + 0xB8]
	0x03D12B84 STR X0, [X8 + 0x8]
	0x03D12B88 LDR X0, [X8]
	0x03D12B8C LDR X1, [X20]
	0x03D12B90 BL 0x321B938
	0x03D12B94 LDR X8, [X19]
	0x03D12B98 LDP X20, X19, [X31 + 0x20]
	0x03D12B9C LDP X22, X21, [X31 + 0x10]
	0x03D12BA0 LDR X8, [X8 + 0xB8]
	0x03D12BA4 STR X0, [X8 + 0x10]
	0x03D12BA8 LDP X30, X23, [X31], #0x30
	0x03D12BAC RET
	0x03D12BB0 STP X30, X21, [X31 - 0x20]!
	0x03D12BB4 STP X20, X19, [X31 + 0x10]
	0x03D12BB8 ADRP X20, 0x6D5000
	0x03D12BBC ADRP X21, 0x451000
	0x03D12BC0 LDRB W8, [X20 + 0x8CF]
	0x03D12BC4 LDR X21, [X21 + 0xCB8]
	0x03D12BC8 MOV X19, X0
	0x03D12BCC TBNZ X8, 0x0, 0x3D12BE4
	0x03D12BD0 ADRP X0, 0x451000
	0x03D12BD4 LDR X0, [X0 + 0xCB8]
	0x03D12BD8 BL 0x1C16CF4
	0x03D12BDC MOVZ W8, 0x1
	0x03D12BE0 STRB W8, [X20 + 0x8CF]
	0x03D12BE4 LDR X1, [X21]
	0x03D12BE8 MOV X0, X19
	0x03D12BEC LDP X20, X19, [X31 + 0x10]
	0x03D12BF0 LDP X30, X21, [X31], #0x20
	0x03D12BF4 B 0x2736468
	0x03D12BF8 STP X30, X21, [X31 - 0x20]!
	0x03D12BFC STP X20, X19, [X31 + 0x10]
	0x03D12C00 ADRP X20, 0x6D5000
	0x03D12C04 ADRP X21, 0x451000
	0x03D12C08 LDRB W8, [X20 + 0x8D0]
	0x03D12C0C LDR X21, [X21 + 0xCC0]
	0x03D12C10 MOV X19, X0
	0x03D12C14 TBNZ X8, 0x0, 0x3D12C2C
	0x03D12C18 ADRP X0, 0x451000
	0x03D12C1C LDR X0, [X0 + 0xCC0]
	0x03D12C20 BL 0x1C16CF4
	0x03D12C24 MOVZ W8, 0x1
	0x03D12C28 STRB W8, [X20 + 0x8D0]
	0x03D12C2C LDR X1, [X21]
	0x03D12C30 MOV X0, X19
	0x03D12C34 LDP X20, X19, [X31 + 0x10]
	0x03D12C38 LDP X30, X21, [X31], #0x20
	0x03D12C3C B 0x26E6278
	0x03D12C40 STR X30, [X31 - 0x20]!
	0x03D12C44 STP X20, X19, [X31 + 0x10]
	0x03D12C48 ADRP X19, 0x6D5000
	0x03D12C4C ADRP X20, 0x451000
	0x03D12C50 LDRB W8, [X19 + 0x8D2]
	0x03D12C54 LDR X20, [X20 + 0xCC8]
	0x03D12C58 TBNZ X8, 0x0, 0x3D12C70
	0x03D12C5C ADRP X0, 0x451000

ISIL:
	001 Move [X31-96], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x6D6000
	013 Move W8, [X20+2237]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x40B000
	020 Move X0, [X0+288]
	021 Call 0x1C17CF4
	022 Move X0, 0x40B000
	023 Move X0, [X0+296]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2237], W8
	027 Move X8, [X19+48]
	028 Compare X8, 0
	029 JumpIfEqual {321}
	030 Move X0, [X19+32]
	031 Compare X0, 0
	032 JumpIfEqual {382}
	033 Move X1, X31
	034 Call VisualElement.get_layout, X0
	035 Move W8, S2
	036 And W8, W8, 0x7FFFFFFF
	037 Move W9, 0x7F800000
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, [X19+32]
	040 Compare X0, 0
	041 JumpIfEqual {382}
	042 Move X1, X31
	043 Call VisualElement.get_layout, X0
	044 Move W8, S3
	045 And W8, W8, 0x7FFFFFFF
	046 Move W9, 0x7F800000
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move S11, [X19+64]
	049 Move S9, [X19+68]
	050 Move S8, [X19+72]
	051 Move S10, [X19+76]
	052 Move X0, X31
	053 Call Rect.get_zero
	054 NotImplemented "Instruction FCMP not yet implemented."
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 Move X0, [X19+32]
	059 Compare X0, 0
	060 JumpIfEqual {382}
	061 Move X1, X31
	062 Call VisualElement.get_layout, X0
	063 Move X0, [X19+48]
	064 Compare X0, 0
	065 JumpIfEqual {382}
	066 Move X1, X31
	067 Move V8, V0
	068 Call VisualElement.get_layout, X0
	069 Move X0, [X19+32]
	070 Compare X0, 0
	071 JumpIfEqual {382}
	072 Move X1, X31
	073 Move V9, V2
	074 Call VisualElement.get_layout, X0
	075 Move X0, [X19+32]
	076 Subtract S0, S9, S2
	077 NotImplemented "Instruction FCMP not yet implemented."
	078 NotImplemented "Instruction FCSEL not yet implemented."
	079 Compare X0, 0
	080 JumpIfEqual {382}
	081 Move X1, X31
	082 Call VisualElement.get_layout, X0
	083 Move X0, [X19+48]
	084 Compare X0, 0
	085 JumpIfEqual {382}
	086 Move X1, X31
	087 Move V8, V1
	088 Call VisualElement.get_layout, X0
	089 Move X0, [X19+32]
	090 Compare X0, 0
	091 JumpIfEqual {382}
	092 Move X1, X31
	093 Move V10, V3
	094 Call VisualElement.get_layout, X0
	095 Subtract S0, S10, S3
	096 Move X0, [X19+32]
	097 Move S1, W31
	098 NotImplemented "Instruction FMAX not yet implemented."
	099 NotImplemented "Instruction FCMP not yet implemented."
	100 NotImplemented "Instruction FCSEL not yet implemented."
	101 Compare X0, 0
	102 JumpIfEqual {382}
	103 Move X1, X31
	104 Call VisualElement.get_style, X0
	105 Move X20, X0
	106 Move V0, V9
	107 Move X0, X31
	108 Call StyleLength.op_Implicit, V0
	109 Compare X20, 0
	110 JumpIfEqual {382}
	111 Move X23, 0x40B000
	112 Move X9, [X20]
	113 Move X23, [X23+296]
	114 Move X8, X1
	115 Move X21, X0
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Move X1, [X23]
	118 And X22, X8, 0
	119 Compare X10, 0
	120 JumpIfEqual {127}
	121 Move X8, [X9+176]
	122 Add X8, X8, 8
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Subtract X10, X10, 1
	126 Add X8, X8, 16
	127 Move W2, 25
	128 Move X0, X20
	129 Call 0x1C5D788
	130 Move W8, [X8]
	131 Add W8, W8, 25
	132 Add X8, X9, W8
	133 Add X0, X8, 312
	134 Move X8, [X0]
	135 Move X3, [X0+8]
	136 Move X0, X20
	137 Move X1, X21
	138 Move X2, X22
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move X0, [X19+32]
	141 Compare X0, 0
	142 JumpIfEqual {382}
	143 Move X1, X31
	144 Call VisualElement.get_style, X0
	145 Move X20, X0
	146 Move V0, V8
	147 Move X0, X31
	148 Call StyleLength.op_Implicit, V0
	149 Compare X20, 0
	150 JumpIfEqual {382}
	151 Move X9, [X20]
	152 Move X8, X1
	153 Move X1, [X23]
	154 Move X21, X0
	155 NotImplemented "Instruction LDRH not yet implemented."
	156 And X22, X8, 0
	157 Compare X10, 0
	158 JumpIfEqual {165}
	159 Move X8, [X9+176]
	160 Add X8, X8, 8
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Subtract X10, X10, 1
	164 Add X8, X8, 16
	165 Move W2, 45
	166 Move X0, X20
	167 Call 0x1C5D788
	168 Move W8, [X8]
	169 Add W8, W8, 45
	170 Add X8, X9, W8
	171 Add X0, X8, 312
	172 Move X8, [X0]
	173 Move X3, [X0+8]
	174 Move X0, X20
	175 Move X1, X21
	176 Move X2, X22
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move X0, [X19+32]
	179 Compare X0, 0
	180 JumpIfEqual {382}
	181 Move X1, X31
	182 Call VisualElement.get_style, X0
	183 Move X8, [X19+24]
	184 Compare X8, 0
	185 JumpIfEqual {382}
	186 Move X20, X0
	187 Move X0, X8
	188 Move X1, X31
	189 Call VisualElement.get_layout, X0
	190 Move X0, [X19+24]
	191 Compare X0, 0
	192 JumpIfEqual {382}
	193 Move X1, X31
	194 Move V8, V3
	195 Call VisualElement.get_layout, X0
	196 Move X0, [X19+32]
	197 Compare X0, 0
	198 JumpIfEqual {382}
	199 Move X1, X31
	200 Move V9, V1
	201 Call VisualElement.get_layout, X0
	202 Move X0, [X19+40]
	203 Compare X0, 0
	204 JumpIfEqual {382}
	205 Move X1, X31
	206 Move V10, V1
	207 Call VisualElement.get_layout, X0
	208 Move X0, [X19+32]
	209 Compare X0, 0
	210 JumpIfEqual {382}
	211 Move X1, X31
	212 Move V11, V3
	213 Call VisualElement.get_resolvedStyle, X0
	214 Compare X0, 0
	215 JumpIfEqual {382}
	216 Move X22, 0x40B000
	217 Move X8, [X0]
	218 Move X22, [X22+288]
	219 Move X21, X0
	220 NotImplemented "Instruction LDRH not yet implemented."
	221 Move X1, [X22]
	222 Compare X9, 0
	223 JumpIfEqual {230}
	224 Move X10, [X8+176]
	225 Add X10, X10, 8
	226 NotImplemented "Instruction LDUR not yet implemented."
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Subtract X9, X9, 1
	229 Add X10, X10, 16
	230 Move W2, 4
	231 Move X0, X21
	232 Call 0x1C5D788
	233 Move W9, [X10]
	234 Add W9, W9, 4
	235 Add X8, X8, W9
	236 Add X0, X8, 312
	237 Move X8, [X0]
	238 Move X1, [X0+8]
	239 Move X0, X21
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Move X0, [X19+32]
	242 Compare X0, 0
	243 JumpIfEqual {382}
	244 Move X1, X31
	245 Move V12, V0
	246 Call VisualElement.get_resolvedStyle, X0
	247 Compare X0, 0
	248 JumpIfEqual {382}
	249 Move X8, [X0]
	250 Move X1, [X22]
	251 Move X21, X0
	252 NotImplemented "Instruction LDRH not yet implemented."
	253 Compare X9, 0
	254 JumpIfEqual {261}
	255 Move X10, [X8+176]
	256 Add X10, X10, 8
	257 NotImplemented "Instruction LDUR not yet implemented."
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Subtract X9, X9, 1
	260 Add X10, X10, 16
	261 Move W2, 12
	262 Move X0, X21
	263 Call 0x1C5D788
	264 Move W9, [X10]
	265 Add W9, W9, 12
	266 Add X8, X8, W9
	267 Add X0, X8, 312
	268 Move X8, [X0]
	269 Move X1, [X0+8]
	270 Move X0, X21
	271 NotImplemented "Instruction BLR not yet implemented."
	272 Subtract S1, S8, S9
	273 Add S2, S11, S12
	274 Subtract S1, S1, S10
	275 Add S0, S2, S0
	276 NotImplemented "Instruction FCMP not yet implemented."
	277 NotImplemented "Instruction FCSEL not yet implemented."
	278 Move X0, X31
	279 Call StyleLength.op_Implicit, V0
	280 Compare X20, 0
	281 JumpIfEqual {382}
	282 Move X23, 0x40B000
	283 Move X9, [X20]
	284 Move X23, [X23+296]
	285 Move X8, X1
	286 Move X21, X0
	287 NotImplemented "Instruction LDRH not yet implemented."
	288 Move X1, [X23]
	289 And X22, X8, 0
	290 Compare X10, 0
	291 JumpIfEqual {298}
	292 Move X8, [X9+176]
	293 Add X8, X8, 8
	294 NotImplemented "Instruction LDUR not yet implemented."
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Subtract X10, X10, 1
	297 Add X8, X8, 16
	298 Move W2, 24
	299 Move X0, X20
	300 Call 0x1C5D788
	301 Move W8, [X8]
	302 Add W8, W8, 24
	303 Add X8, X9, W8
	304 Add X0, X8, 312
	305 Move X8, [X0]
	306 Move X3, [X0+8]
	307 Move X0, X20
	308 Move X1, X21
	309 Move X2, X22
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Move S11, [X19+64]
	312 Move S9, [X19+68]
	313 Move S8, [X19+72]
	314 Move S10, [X19+76]
	315 Move X0, X31
	316 Call Rect.get_zero
	317 NotImplemented "Instruction FCMP not yet implemented."
	318 NotImplemented "Instruction FCMP not yet implemented."
	319 NotImplemented "Instruction FCMP not yet implemented."
	320 NotImplemented "Instruction FCMP not yet implemented."
	321 Move X20, [X31+80]
	322 Move X19, [X31+88]
	323 Move X22, [X31+64]
	324 Move X21, [X31+72]
	325 Move X30, [X31+48]
	326 Move X23, [X31+56]
	327 Move D9, [X31+32]
	328 Move D8, [X31+40]
	329 Move D11, [X31+16]
	330 Move D10, [X31+24]
	331 Move V12, [X31+96]
	332 Return 
	333 Move X0, [X19+32]
	334 Compare X0, 0
	335 JumpIfEqual {382}
	336 Move X1, X31
	337 Call VisualElement.get_style, X0
	338 Move V0, [X19+72]
	339 Move X19, X0
	340 Move X0, X31
	341 Call StyleLength.op_Implicit, V0
	342 Compare X19, 0
	343 JumpIfEqual {382}
	344 Move X9, [X19]
	345 Move X8, X1
	346 Move X1, [X23]
	347 Move X20, X0
	348 NotImplemented "Instruction LDRH not yet implemented."
	349 And X21, X8, 0
	350 Compare X10, 0
	351 JumpIfEqual {358}
	352 Move X8, [X9+176]
	353 Add X8, X8, 8
	354 NotImplemented "Instruction LDUR not yet implemented."
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Subtract X10, X10, 1
	357 Add X8, X8, 16
	358 Move W2, 54
	359 Move X0, X19
	360 Call 0x1C5D788
	361 Move W8, [X8]
	362 Add W8, W8, 54
	363 Add X8, X9, W8
	364 Add X0, X8, 312
	365 Move X4, [X0]
	366 Move X3, [X0+8]
	367 Move X0, X19
	368 Move X1, X20
	369 Move X2, X21
	370 Move X20, [X31+80]
	371 Move X19, [X31+88]
	372 Move X22, [X31+64]
	373 Move X21, [X31+72]
	374 Move X30, [X31+48]
	375 Move X23, [X31+56]
	376 Move D9, [X31+32]
	377 Move D8, [X31+40]
	378 Move D11, [X31+16]
	379 Move D10, [X31+24]
	380 Move V12, [X31+96]
	381 CallNoReturn X4
	382 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D12C6C STRB W8, [X19 + 0x8D2]
	0x03D12C70 LDR X0, [X20]
	0x03D12C74 LDP X20, X19, [X31 + 0x10]
	0x03D12C78 LDR X30, [X31], #0x20
	0x03D12C7C RET
	0x03D12C80 STR X30, [X31 - 0x30]!
	0x03D12C84 STP X22, X21, [X31 + 0x10]
	0x03D12C88 STP X20, X19, [X31 + 0x20]
	0x03D12C8C ADRP X21, 0x6D5000
	0x03D12C90 ADRP X22, 0x451000
	0x03D12C94 LDRB W8, [X21 + 0x8D3]
	0x03D12C98 LDR X22, [X22 + 0xCD0]
	0x03D12C9C MOV W19, W1
	0x03D12CA0 MOV X20, X0
	0x03D12CA4 TBNZ X8, 0x0, 0x3D12CBC
	0x03D12CA8 ADRP X0, 0x451000
	0x03D12CAC LDR X0, [X0 + 0xCD0]
	0x03D12CB0 BL 0x1C16CF4
	0x03D12CB4 MOVZ W8, 0x1
	0x03D12CB8 STRB W8, [X21 + 0x8D3]
	0x03D12CBC LDR X2, [X22]
	0x03D12CC0 MOV X0, X20
	0x03D12CC4 MOV W1, W19
	0x03D12CC8 BL 0x26B7154
	0x03D12CCC MOV W8, W0
	0x03D12CD0 ANDS W31, W19, 0xFFFF
	0x03D12CD4 MOV W0, W31
	0x03D12CD8 B.EQ 0x3D12D24
	0x03D12CDC TBZ X8, 0x0, 0x3D12D24
	0x03D12CE0 ADRP X20, 0x6D5000
	0x03D12CE4 ADRP X21, 0x451000
	0x03D12CE8 LDRB W8, [X20 + 0x8D2]
	0x03D12CEC LDR X21, [X21 + 0xCC8]
	0x03D12CF0 TBNZ X8, 0x0, 0x3D12D08
	0x03D12CF4 ADRP X0, 0x451000
	0x03D12CF8 LDR X0, [X0 + 0xCC8]
	0x03D12CFC BL 0x1C16CF4
	0x03D12D00 MOVZ W8, 0x1
	0x03D12D04 STRB W8, [X20 + 0x8D2]
	0x03D12D08 LDR X0, [X21]
	0x03D12D0C CBZ X0, 0x3D12D34
	0x03D12D10 MOV W1, W19
	0x03D12D14 MOV X2, X31
	0x03D12D18 BL 0x322BD98
	0x03D12D1C ADDS W31, W0, 0x1
	0x03D12D20 CSET W0, NE
	0x03D12D24 LDP X20, X19, [X31 + 0x20]
	0x03D12D28 LDP X22, X21, [X31 + 0x10]
	0x03D12D2C LDR X30, [X31], #0x30
	0x03D12D30 RET
	0x03D12D34 BL 0x1C16F20
	0x03D12D38 MOV X0, X1
	0x03D12D3C B 0x3D12880
	0x03D12D40 STR X30, [X31 - 0x10]!
	0x03D12D44 LDR X0, [X0 + 0x3E0]
	0x03D12D48 CBZ X0, 0x3D12D60
	0x03D12D4C LDR X8, [X0]
	0x03D12D50 LDR X3, [X8 + 0xB28]
	0x03D12D54 LDR X2, [X8 + 0xB30]
	0x03D12D58 LDR X30, [X31], #0x10
	0x03D12D5C BR X3
	0x03D12D60 BL 0x1C16F20
	0x03D12D64 LDR W8, [X0 + 0x3C8]
	0x03D12D68 CMP W8, W1
	0x03D12D6C B.NE 0x3D12D74
	0x03D12D70 RET
	0x03D12D74 STR W1, [X0 + 0x3C8]
	0x03D12D78 B 0x3D12D7C
	0x03D12D7C STR X30, [X31 - 0x20]!
	0x03D12D80 STP X20, X19, [X31 + 0x10]
	0x03D12D84 MOV X19, X0
	0x03D12D88 LDR X0, [X0 + 0x3D8]
	0x03D12D8C MOV W20, W1
	0x03D12D90 MOV X1, X31
	0x03D12D94 BL 0x32277A8
	0x03D12D98 TBNZ X0, 0x0, 0x3D12DB0
	0x03D12D9C LDR X0, [X19 + 0x3D0]
	0x03D12DA0 CBZ X0, 0x3D12E2C
	0x03D12DA4 LDR X1, [X19 + 0x3D8]
	0x03D12DA8 MOV X2, X31
	0x03D12DAC BL 0x3DF1B54
	0x03D12DB0 MOV W1, W20
	0x03D12DB4 BL 0x3D12FD4
	0x03D12DB8 LDR X8, [X19 + 0x3D0]
	0x03D12DBC STR X0, [X19 + 0x3D8]
	0x03D12DC0 CBZ X0, 0x3D12DF8
	0x03D12DC4 CBZ X8, 0x3D12E2C
	0x03D12DC8 MOV X1, X0
	0x03D12DCC MOV X0, X8
	0x03D12DD0 MOV X2, X31
	0x03D12DD4 BL 0x3DF1C70
	0x03D12DD8 LDR X0, [X19 + 0x3D0]
	0x03D12DDC CBZ X0, 0x3D12E2C
	0x03D12DE0 MOV X1, X31
	0x03D12DE4 BL 0x3DEBF58
	0x03D12DE8 CBZ X0, 0x3D12E10
	0x03D12DEC LDP X20, X19, [X31 + 0x10]
	0x03D12DF0 LDR X30, [X31], #0x20
	0x03D12DF4 RET
	0x03D12DF8 CBZ X8, 0x3D12E2C
	0x03D12DFC LDP X20, X19, [X31 + 0x10]
	0x03D12E00 MOV X0, X8
	0x03D12E04 MOV X1, X31
	0x03D12E08 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x6D6000
	012 Move X26, 0x452000
	013 Move X19, 0x40D000
	014 Move X25, 0x451000
	015 Move X24, 0x40B000
	016 Move X23, 0x452000
	017 Move X22, 0x452000
	018 Move X21, 0x452000
	019 Move X20, 0x452000
	020 Move X26, [X26+3040]
	021 Move X19, [X19+200]
	022 Move X25, [X25+3680]
	023 Move W8, [X27+2238]
	024 Move X24, [X24+3768]
	025 Move X23, [X23+3048]
	026 Move X22, [X22+3056]
	027 Move X21, [X21+2880]
	028 Move X20, [X20+3064]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {59}
	033 Move X0, 0x40D000
	034 Move X0, [X0+200]
	035 Call 0x1C17CF4
	036 Move X0, 0x452000
	037 Move X0, [X0+3048]
	038 Call 0x1C17CF4
	039 Move X0, 0x452000
	040 Move X0, [X0+3040]
	041 Call 0x1C17CF4
	042 Move X0, 0x451000
	043 Move X0, [X0+3680]
	044 Call 0x1C17CF4
	045 Move X0, 0x452000
	046 Move X0, [X0+3064]
	047 Call 0x1C17CF4
	048 Move X0, 0x452000
	049 Move X0, [X0+3056]
	050 Call 0x1C17CF4
	051 Move X0, 0x452000
	052 Move X0, [X0+2880]
	053 Call 0x1C17CF4
	054 Move X0, 0x40B000
	055 Move X0, [X0+3768]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X27+2238], W8
	059 Move X8, [X19]
	060 Move X9, [X26]
	061 Move X2, X31
	062 Move X8, [X8+184]
	063 Move [X8], X9
	064 Move X8, [X19]
	065 Move X1, [X25]
	066 Move X8, [X8+184]
	067 Move X0, [X8]
	068 Call String.Concat, X0, X1
	069 Move X8, [X19]
	070 Move X2, X31
	071 Move X8, [X8+184]
	072 Move [X8+8], X0
	073 Move X0, [X8]
	074 Move X1, [X24]
	075 Call String.Concat, X0, X1
	076 Move X8, [X19]
	077 Move X2, X31
	078 Move X8, [X8+184]
	079 Move [X8+16], X0
	080 Move X0, [X8]
	081 Move X1, [X23]
	082 Call String.Concat, X0, X1
	083 Move X8, [X19]
	084 Move X2, X31
	085 Move X8, [X8+184]
	086 Move [X8+24], X0
	087 Move X0, [X8]
	088 Move X1, [X22]
	089 Call String.Concat, X0, X1
	090 Move X8, [X19]
	091 Move X2, X31
	092 Move X8, [X8+184]
	093 Move [X8+32], X0
	094 Move X0, [X8]
	095 Move X1, [X21]
	096 Call String.Concat, X0, X1
	097 Move X8, [X19]
	098 Move X2, X31
	099 Move X8, [X8+184]
	100 Move [X8+40], X0
	101 Move X0, [X8]
	102 Move X1, [X20]
	103 Call String.Concat, X0, X1
	104 Move X8, [X19]
	105 Move X20, [X31+64]
	106 Move X19, [X31+72]
	107 Move X22, [X31+48]
	108 Move X21, [X31+56]
	109 Move X24, [X31+32]
	110 Move X23, [X31+40]
	111 Move X8, [X8+184]
	112 Move X26, [X31+16]
	113 Move X25, [X31+24]
	114 Move [X8+48], X0
	115 Move X30, [X31+80]
	116 Move X27, [X31+88]
	117 Return 

Method: System.Void <Apply>g__UpdateSelectionDown|39_0(System.Int32 newIndex, ref UnityEngine.UIElements.GenericDropdownMenu/<>c__DisplayClass39_0 param_1)

Disassembly:
	0x03D11150 MOV X2, X24
	0x03D11154 BLR X8
	0x03D11158 LDR X0, [X20 + 0x18]
	0x03D1115C CBZ X0, 0x3D116E0
	0x03D11160 MOV X1, X31
	0x03D11164 BL 0x3DE7EEC
	0x03D11168 LDR X8, [X20 + 0x30]
	0x03D1116C CBZ X8, 0x3D116E0
	0x03D11170 MOV X22, X0
	0x03D11174 MOV X0, X8
	0x03D11178 MOV X1, X31
	0x03D1117C BL 0x3DEC528
	0x03D11180 MOV V0.16B, V3.16B
	0x03D11184 MOV X0, X31
	0x03D11188 BL 0x3DFED98
	0x03D1118C CBZ X22, 0x3D116E0
	0x03D11190 LDR X9, [X22]
	0x03D11194 MOV X8, X1
	0x03D11198 LDR X1, [X25]
	0x03D1119C MOV X23, X0
	0x03D111A0 LDRH W10, [X9 + 0x12E]
	0x03D111A4 AND X24, X8, 0x0
	0x03D111A8 CBZ X10, 0x3D111CC
	0x03D111AC LDR X8, [X9 + 0xB0]
	0x03D111B0 ADD X8, X8, 0x8
	0x03D111B4 LDUR X11, [X8 - 0x8]
	0x03D111B8 CMP X11, X1
	0x03D111BC B.EQ 0x3D111DC
	0x03D111C0 SUBS X10, X10, 0x1
	0x03D111C4 ADD X8, X8, 0x10
	0x03D111C8 B.NE 0x3D111B4
	0x03D111CC MOVZ W2, 0x18
	0x03D111D0 MOV X0, X22
	0x03D111D4 BL 0x1C5C788
	0x03D111D8 B 0x3D111EC
	0x03D111DC LDR W8, [X8]
	0x03D111E0 ADD W8, W8, 0x18
	0x03D111E4 ADD X8, X9, W8, 0x4, SXTW
	0x03D111E8 ADD X0, X8, 0x138
	0x03D111EC LDP X8, X3, [X0]
	0x03D111F0 MOV X0, X22
	0x03D111F4 MOV X1, X23
	0x03D111F8 MOV X2, X24
	0x03D111FC BLR X8
	0x03D11200 LDR X0, [X20 + 0x18]
	0x03D11204 CBZ X0, 0x3D116E0
	0x03D11208 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6D7000
	007 Move W8, [X22+2239]
	008 Move X20, X2
	009 Move W19, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x453000
	016 Move X0, [X0+2968]
	017 Call 0x1C17CF4
	018 Move X0, 0x453000
	019 Move X0, [X0+2976]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2239], W8
	023 Move X0, [X21+16]
	024 Compare X0, 0
	025 JumpIfEqual {45}
	026 Move X22, 0x453000
	027 Move X22, [X22+2976]
	028 Move W8, [X0+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X2, [X22]
	031 Move W1, W19
	032 Call List`1<Object>.get_Item, X0, X1
	033 Compare X0, 0
	034 JumpIfEqual {45}
	035 Move X8, [X0+24]
	036 Compare X8, 0
	037 JumpIfEqual {45}
	038 Move W8, [X8+812]
	039 Compare W8, 0
	040 JumpIfNotEqual {52}
	041 Move X0, [X21+16]
	042 Add W19, W19, 1
	043 Compare X0, 0
	044 JumpIfNotEqual {28}
	045 Call 0x1C17F20
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Return 
	052 Move W2, [X20+8]
	053 Move X0, X21
	054 Move W1, W19
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Call GenericDropdownMenu.ChangeSelectedIndex, X0, X1, X2
	061 Return 

Method: System.Void <Apply>g__UpdateSelectionUp|39_1(System.Int32 newIndex, ref UnityEngine.UIElements.GenericDropdownMenu/<>c__DisplayClass39_0 param_1)

Disassembly:
	0x03D110A8 MOV X2, X24
	0x03D110AC BLR X8
	0x03D110B0 LDR X0, [X20 + 0x18]
	0x03D110B4 CBZ X0, 0x3D116E0
	0x03D110B8 MOV X1, X31
	0x03D110BC BL 0x3DE7EEC
	0x03D110C0 LDR X8, [X20 + 0x30]
	0x03D110C4 CBZ X8, 0x3D116E0
	0x03D110C8 MOV X22, X0
	0x03D110CC MOV X0, X8
	0x03D110D0 MOV X1, X31
	0x03D110D4 BL 0x3DEC528
	0x03D110D8 MOV V0.16B, V2.16B
	0x03D110DC MOV X0, X31
	0x03D110E0 BL 0x3DFED98
	0x03D110E4 CBZ X22, 0x3D116E0
	0x03D110E8 LDR X9, [X22]
	0x03D110EC MOV X8, X1
	0x03D110F0 LDR X1, [X25]
	0x03D110F4 MOV X23, X0
	0x03D110F8 LDRH W10, [X9 + 0x12E]
	0x03D110FC AND X24, X8, 0x0
	0x03D11100 CBZ X10, 0x3D11124
	0x03D11104 LDR X8, [X9 + 0xB0]
	0x03D11108 ADD X8, X8, 0x8
	0x03D1110C LDUR X11, [X8 - 0x8]
	0x03D11110 CMP X11, X1
	0x03D11114 B.EQ 0x3D11134
	0x03D11118 SUBS X10, X10, 0x1
	0x03D1111C ADD X8, X8, 0x10
	0x03D11120 B.NE 0x3D1110C
	0x03D11124 MOVZ W2, 0x36
	0x03D11128 MOV X0, X22
	0x03D1112C BL 0x1C5C788
	0x03D11130 B 0x3D11144
	0x03D11134 LDR W8, [X8]
	0x03D11138 ADD W8, W8, 0x36
	0x03D1113C ADD X8, X9, W8, 0x4, SXTW
	0x03D11140 ADD X0, X8, 0x138
	0x03D11144 LDP X8, X3, [X0]
	0x03D11148 MOV X0, X22
	0x03D1114C MOV X1, X23

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6D7000
	007 Move W8, [X22+2240]
	008 Move X20, X2
	009 Move W19, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x453000
	016 Move X0, [X0+2976]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2240], W8
	020 Move TEMP, X19
	021 And TEMP, TEMP, -2147483648
	022 Compare TEMP, -2147483648
	023 JumpIfEqual {42}
	024 Move X22, 0x453000
	025 Move X22, [X22+2976]
	026 Move X0, [X21+16]
	027 Compare X0, 0
	028 JumpIfEqual {58}
	029 Move X2, [X22]
	030 Move W1, W19
	031 Call List`1<Object>.get_Item, X0, X1
	032 Compare X0, 0
	033 JumpIfEqual {58}
	034 Move X8, [X0+24]
	035 Compare X8, 0
	036 JumpIfEqual {58}
	037 Move W8, [X8+812]
	038 Compare W8, 0
	039 JumpIfNotEqual {48}
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract W19, W19, 1
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return 
	048 Move W2, [X20+8]
	049 Move X0, X21
	050 Move W1, W19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Call GenericDropdownMenu.ChangeSelectedIndex, X0, X1, X2
	057 Return 
	058 Call 0x1C17F20

