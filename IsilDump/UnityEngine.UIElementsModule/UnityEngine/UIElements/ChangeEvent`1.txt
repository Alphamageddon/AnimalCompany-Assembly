Type: UnityEngine.UIElements.ChangeEvent`1

Method: System.Void .cctor()

Disassembly:
	0x028F3E28 BL 0x1C5C684
	0x028F3E2C MOV X8, X0
	0x028F3E30 LDR W9, [X8 + 0xE0]
	0x028F3E34 CBNZ W9, 0x28F3E40
	0x028F3E38 MOV X0, X8
	0x028F3E3C BL 0x1C16DFC
	0x028F3E40 LDR X8, [X20 + 0x20]
	0x028F3E44 MOV X0, X19
	0x028F3E48 LDR X8, [X8 + 0xC0]
	0x028F3E4C LDR X1, [X8 + 0x70]
	0x028F3E50 BL 0x2D0D54C
	0x028F3E54 CBZ X19, 0x28F3E78
	0x028F3E58 MOVZ W8, 0x3
	0x028F3E5C MOVI V0.2D, 0x0
	0x028F3E60 STR W8, [X19 + 0x30]
	0x028F3E64 STUR V0, [X19 + 0x88]
	0x028F3E68 STUR V0, [X19 + 0x98]
	0x028F3E6C LDP X20, X19, [X31 + 0x10]
	0x028F3E70 LDR X30, [X31], #0x20
	0x028F3E74 RET
	0x028F3E78 BL 0x1C16F20
	0x028F3E7C STR X30, [X31 - 0x30]!
	0x028F3E80 STP X22, X21, [X31 + 0x10]
	0x028F3E84 STP X20, X19, [X31 + 0x20]
	0x028F3E88 MOV X19, X0
	0x028F3E8C LDR X0, [X0 + 0x20]
	0x028F3E90 LDRB W8, [X0 + 0x135]
	0x028F3E94 TBNZ X8, 0x0, 0x28F3E9C
	0x028F3E98 BL 0x1C5C684
	0x028F3E9C LDR X8, [X0 + 0xC0]
	0x028F3EA0 LDR X0, [X8 + 0x8]
	0x028F3EA4 LDRB W8, [X0 + 0x135]
	0x028F3EA8 TBNZ X8, 0x0, 0x28F3EB0
	0x028F3EAC BL 0x1C5C684
	0x028F3EB0 LDR W8, [X0 + 0xE0]
	0x028F3EB4 CBNZ W8, 0x28F3EBC
	0x028F3EB8 BL 0x1C16DFC
	0x028F3EBC LDR X0, [X19 + 0x20]
	0x028F3EC0 LDRB W8, [X0 + 0x135]
	0x028F3EC4 TBNZ X8, 0x0, 0x28F3ECC
	0x028F3EC8 BL 0x1C5C684
	0x028F3ECC LDR X8, [X0 + 0xC0]
	0x028F3ED0 LDR X0, [X8 + 0x8]
	0x028F3ED4 LDRB W8, [X0 + 0x135]
	0x028F3ED8 TBNZ X8, 0x0, 0x28F3EE0
	0x028F3EDC BL 0x1C5C684
	0x028F3EE0 LDR X8, [X19 + 0x20]
	0x028F3EE4 LDR X9, [X0 + 0xB8]
	0x028F3EE8 LDRB W10, [X8 + 0x135]
	0x028F3EEC LDR X21, [X9]
	0x028F3EF0 TBNZ X10, 0x0, 0x28F3F00
	0x028F3EF4 MOV X0, X8
	0x028F3EF8 BL 0x1C5C684
	0x028F3EFC MOV X8, X0
	0x028F3F00 LDR X8, [X8 + 0xC0]
	0x028F3F04 LDR X0, [X8 + 0x18]
	0x028F3F08 LDRB W8, [X0 + 0x135]
	0x028F3F0C TBNZ X8, 0x0, 0x28F3F14
	0x028F3F10 BL 0x1C5C684
	0x028F3F14 BL 0x1C16F10
	0x028F3F18 LDR X8, [X19 + 0x20]
	0x028F3F1C MOV X20, X0
	0x028F3F20 ADD X9, X8, 0x135
	0x028F3F24 LDRH W9, [X9]
	0x028F3F28 TBNZ X9, 0x0, 0x28F3F44
	0x028F3F2C MOV X0, X8
	0x028F3F30 BL 0x1C5C684
	0x028F3F34 LDR X8, [X19 + 0x20]
	0x028F3F38 ADD X9, X8, 0x135
	0x028F3F3C LDRH W9, [X9]
	0x028F3F40 B 0x28F3F48
	0x028F3F44 MOV X0, X8
	0x028F3F48 LDR X10, [X0 + 0xC0]
	0x028F3F4C LDR X22, [X10 + 0x10]
	0x028F3F50 TBNZ X9, 0x0, 0x28F3F60
	0x028F3F54 MOV X0, X8
	0x028F3F58 BL 0x1C5C684
	0x028F3F5C MOV X8, X0
	0x028F3F60 LDR X8, [X8 + 0xC0]
	0x028F3F64 MOV X0, X20
	0x028F3F68 MOV X1, X21
	0x028F3F6C MOV X2, X22
	0x028F3F70 LDR X3, [X8 + 0x20]
	0x028F3F74 BL 0x2D27AA8
	0x028F3F78 LDR X0, [X19 + 0x20]
	0x028F3F7C LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X0+32]
	008 Move W8, [X0+309]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {14}
	013 Call 0x1C5D684
	014 Move X8, [X0+192]
	015 Move X0, [X8+8]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, [X19+32]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Move X8, [X0+192]
	034 Move X0, [X8+8]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move X8, [X19+32]
	042 Move X9, [X0+184]
	043 Move W10, [X8+309]
	044 Move X21, [X9]
	045 Move TEMP, X10
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {52}
	049 Move X0, X8
	050 Call 0x1C5D684
	051 Move X8, X0
	052 Move X8, [X8+192]
	053 Move X0, [X8+24]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Call 0x1C17F10
	061 Move X8, [X19+32]
	062 Move X20, X0
	063 Add X9, X8, 309
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move TEMP, X9
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {74}
	069 Move X0, X8
	070 Call 0x1C5D684
	071 Move X8, [X19+32]
	072 Add X9, X8, 309
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Move X0, X8
	075 Move X10, [X0+192]
	076 Move X22, [X10+16]
	077 Move TEMP, X9
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {84}
	081 Move X0, X8
	082 Call 0x1C5D684
	083 Move X8, X0
	084 Move X8, [X8+192]
	085 Move X0, X20
	086 Move X1, X21
	087 Move X2, X22
	088 Move X3, [X8+32]
	089 Call Func`1<Object>..ctor, X0, X1, X2
	090 Move X0, [X19+32]
	091 Move W8, [X0+309]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {97}
	096 Call 0x1C5D684
	097 Move X8, [X0+192]
	098 Move X0, [X8+48]
	099 Move W8, [X0+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Call 0x1C5D684
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, [X19+32]
	110 Move W8, [X0+309]
	111 Move TEMP, X8
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {116}
	115 Call 0x1C5D684
	116 Move X8, [X0+192]
	117 Move X0, X20
	118 Move X20, [X31+32]
	119 Move X19, [X31+40]
	120 Move X22, [X31+16]
	121 Move X21, [X31+24]
	122 Move X1, [X8+40]
	123 Move X30, [X31+48]
	124 Call 0x2D0E4C0, X0
	125 Return 

Method: T get_previousValue()

Disassembly:
	0x028F3F80 TBNZ X8, 0x0, 0x28F3F88
	0x028F3F84 BL 0x1C5C684

ISIL:
	001 Move W0, [X0+132]
	002 Return X0

Method: System.Void set_previousValue(T value)

Disassembly:
	0x028F3F88 LDR X8, [X0 + 0xC0]
	0x028F3F8C LDR X0, [X8 + 0x30]
	0x028F3F90 LDRB W8, [X0 + 0x135]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+132], W8
	003 Return 

Method: T get_newValue()

Disassembly:
	0x028F3F94 TBNZ X8, 0x0, 0x28F3F9C
	0x028F3F98 BL 0x1C5C684

ISIL:
	001 Move W0, [X0+133]
	002 Return X0

Method: System.Void set_newValue(T value)

Disassembly:
	0x028F3F9C LDR W8, [X0 + 0xE0]
	0x028F3FA0 CBNZ W8, 0x28F3FA8
	0x028F3FA4 BL 0x1C16DFC

ISIL:
	001 And W8, W1, 1
	002 Move [X0+133], W8
	003 Return 

Method: System.Void Init()

Disassembly:
	0x028F3FA8 LDR X0, [X19 + 0x20]
	0x028F3FAC LDRB W8, [X0 + 0x135]
	0x028F3FB0 TBNZ X8, 0x0, 0x28F3FB8
	0x028F3FB4 BL 0x1C5C684
	0x028F3FB8 LDR X8, [X0 + 0xC0]
	0x028F3FBC MOV X0, X20
	0x028F3FC0 LDP X20, X19, [X31 + 0x20]
	0x028F3FC4 LDP X22, X21, [X31 + 0x10]
	0x028F3FC8 LDR X1, [X8 + 0x28]
	0x028F3FCC LDR X30, [X31], #0x30
	0x028F3FD0 B 0x2D0D4C0
	0x028F3FD4 LDR W0, [X0 + 0x84]
	0x028F3FD8 RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {16}
	005 Move X8, [X1+32]
	006 Move X19, X0
	007 Move X8, [X8+192]
	008 Move X1, [X8+72]
	009 Call 0x2D0E634, X0
	010 Move W8, 3
	011 Move [X19+48], W8
	012 NotImplemented "Instruction STRH not yet implemented."
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return 
	016 Call 0x1C17F20

Method: System.Void LocalInit()

Disassembly:
	0x028F3FDC STR W1, [X0 + 0x84]
	0x028F3FE0 RET
	0x028F3FE4 LDR W0, [X0 + 0x88]
	0x028F3FE8 RET
	0x028F3FEC STR W1, [X0 + 0x88]
	0x028F3FF0 RET
	0x028F3FF4 STP X30, X19, [X31 - 0x10]!
	0x028F3FF8 CBZ X0, 0x28F4024

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move W8, 3
	005 Move [X0+48], W8
	006 NotImplemented "Instruction STRH not yet implemented."
	007 Move X30, [X31+16]
	008 Return 
	009 Call 0x1C17F20

Method: UnityEngine.UIElements.ChangeEvent`1<T> GetPooled(T previousValue, T newValue)

Disassembly:
	0x028F3FFC LDR X8, [X1 + 0x20]
	0x028F4000 MOV X19, X0
	0x028F4004 LDR X8, [X8 + 0xC0]
	0x028F4008 LDR X1, [X8 + 0x48]
	0x028F400C BL 0x2D0D634
	0x028F4010 MOVZ W8, 0x3
	0x028F4014 STR W8, [X19 + 0x30]
	0x028F4018 STP W31, W31, [X19 + 0x84]
	0x028F401C LDP X30, X19, [X31], #0x10
	0x028F4020 RET
	0x028F4024 BL 0x1C16F20
	0x028F4028 STR X30, [X31 - 0x10]!
	0x028F402C CBZ X0, 0x28F4044
	0x028F4030 MOVZ W8, 0x3
	0x028F4034 STR W8, [X0 + 0x30]
	0x028F4038 STP W31, W31, [X0 + 0x84]
	0x028F403C LDR X30, [X31], #0x10
	0x028F4040 RET
	0x028F4044 BL 0x1C16F20
	0x028F4048 STR X30, [X31 - 0x30]!
	0x028F404C STP X22, X21, [X31 + 0x10]
	0x028F4050 STP X20, X19, [X31 + 0x20]
	0x028F4054 LDR X8, [X2 + 0x20]
	0x028F4058 MOV X21, X2
	0x028F405C MOV W19, W1
	0x028F4060 MOV W20, W0
	0x028F4064 LDRB W9, [X8 + 0x135]
	0x028F4068 TBNZ X9, 0x0, 0x28F4078
	0x028F406C MOV X0, X8
	0x028F4070 BL 0x1C5C684
	0x028F4074 MOV X8, X0
	0x028F4078 LDR X8, [X8 + 0xC0]
	0x028F407C LDR X0, [X8 + 0x30]
	0x028F4080 LDRB W8, [X0 + 0x135]
	0x028F4084 TBNZ X8, 0x0, 0x28F408C
	0x028F4088 BL 0x1C5C684
	0x028F408C LDR W8, [X0 + 0xE0]
	0x028F4090 CBNZ W8, 0x28F4098
	0x028F4094 BL 0x1C16DFC
	0x028F4098 LDR X0, [X21 + 0x20]
	0x028F409C LDRB W8, [X0 + 0x135]
	0x028F40A0 TBNZ X8, 0x0, 0x28F40A8
	0x028F40A4 BL 0x1C5C684
	0x028F40A8 LDR X8, [X0 + 0xC0]
	0x028F40AC LDR X0, [X8 + 0x68]
	0x028F40B0 BL 0x2D0D6C4
	0x028F40B4 CBZ X0, 0x28F40F8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X21, X2
	008 Move W19, W1
	009 Move W20, W0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X8, [X8+192]
	019 Move X0, [X8+48]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, [X21+32]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move X8, [X0+192]
	038 Move X0, [X8+104]
	039 Call 0x2D0E6C4
	040 Compare X0, 0
	041 JumpIfEqual {68}
	042 Move X22, X0
	043 Move X0, [X21+32]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {51}
	049 Call 0x1C5D684
	050 Move X0, [X21+32]
	051 And W8, W20, 1
	052 Move [X22+132], W8
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 And W8, W19, 1
	060 Move [X22+133], W8
	061 Move X0, X22
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return X0
	068 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x028F40B8 MOV X22, X0
	0x028F40BC LDR X0, [X21 + 0x20]
	0x028F40C0 LDRB W8, [X0 + 0x135]
	0x028F40C4 TBNZ X8, 0x0, 0x28F40D0
	0x028F40C8 BL 0x1C5C684
	0x028F40CC LDR X0, [X21 + 0x20]
	0x028F40D0 STR W20, [X22 + 0x84]
	0x028F40D4 LDRB W8, [X0 + 0x135]
	0x028F40D8 TBNZ X8, 0x0, 0x28F40E0
	0x028F40DC BL 0x1C5C684
	0x028F40E0 STR W19, [X22 + 0x88]
	0x028F40E4 MOV X0, X22
	0x028F40E8 LDP X20, X19, [X31 + 0x20]
	0x028F40EC LDP X22, X21, [X31 + 0x10]
	0x028F40F0 LDR X30, [X31], #0x30
	0x028F40F4 RET
	0x028F40F8 BL 0x1C16F20
	0x028F40FC STR X30, [X31 - 0x20]!
	0x028F4100 STP X20, X19, [X31 + 0x10]
	0x028F4104 LDR X8, [X1 + 0x20]
	0x028F4108 MOV X20, X1
	0x028F410C MOV X19, X0
	0x028F4110 LDR X8, [X8 + 0xC0]
	0x028F4114 LDR X8, [X8 + 0x30]
	0x028F4118 LDRB W9, [X8 + 0x135]
	0x028F411C TBNZ X9, 0x0, 0x28F412C
	0x028F4120 MOV X0, X8
	0x028F4124 BL 0x1C5C684
	0x028F4128 MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, X1
	006 Move X19, X0
	007 Move X8, [X8+192]
	008 Move X8, [X8+48]
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move W9, [X8+224]
	018 Compare W9, 0
	019 JumpIfNotEqual {22}
	020 Move X0, X8
	021 Call 0x1C17DFC
	022 Move X8, [X20+32]
	023 Move X0, X19
	024 Move X8, [X8+192]
	025 Move X1, [X8+112]
	026 Call 0x2D0E54C, X0
	027 Compare X19, 0
	028 JumpIfEqual {36}
	029 Move W8, 3
	030 Move [X19+48], W8
	031 NotImplemented "Instruction STRH not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return 
	036 Call 0x1C17F20

