Type: UnityEngine.UIElements.VisualElementUtils/<>c

Method: System.Void .cctor()

Disassembly:
	0x03D1AF04 LDP X1, X10, [X19 + 0x28]
	0x03D1AF08 LDR X8, [X9 + 0x218]
	0x03D1AF0C LDR X3, [X9 + 0x220]
	0x03D1AF10 CMP X10, X20
	0x03D1AF14 B.EQ 0x3D1AF3C
	0x03D1AF18 MOVZ W2, 0x2
	0x03D1AF1C MOV X0, X19
	0x03D1AF20 BLR X8
	0x03D1AF24 MOV X0, X19
	0x03D1AF28 MOV X1, X20
	0x03D1AF2C LDP X20, X19, [X31 + 0x20]
	0x03D1AF30 LDP X22, X21, [X31 + 0x10]
	0x03D1AF34 LDR X30, [X31], #0x30
	0x03D1AF38 B 0x3D1ADB8
	0x03D1AF3C MOV X0, X19
	0x03D1AF40 MOV W2, W31
	0x03D1AF44 BLR X8
	0x03D1AF48 STR W31, [X19 + 0x20]
	0x03D1AF4C LDP X20, X19, [X31 + 0x20]
	0x03D1AF50 LDP X22, X21, [X31 + 0x10]
	0x03D1AF54 LDR X30, [X31], #0x30
	0x03D1AF58 RET
	0x03D1AF5C STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x6CE000
	005 Move X20, 0x44B000
	006 Move W8, [X19+2341]
	007 Move X20, [X20+328]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x44B000
	013 Move X0, [X0+328]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2341], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03D1AF60 STP X20, X19, [X31 + 0x10]
	0x03D1AF64 ADRP X21, 0x6CD000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <AssignInspectorStyleIfNecessary>b__5_0(UnityEngine.UIElements.VisualElement i)

Disassembly:
	0x03D1AF68 ADRP X20, 0x3D9000
	0x03D1AF6C LDRB W8, [X21 + 0x934]
	0x03D1AF70 LDR X20, [X20 + 0xA28]
	0x03D1AF74 MOV X19, X0
	0x03D1AF78 TBNZ X8, 0x0, 0x3D1AF90
	0x03D1AF7C ADRP X0, 0x3D9000
	0x03D1AF80 LDR X0, [X0 + 0xA28]
	0x03D1AF84 BL 0x1C16CF4
	0x03D1AF88 MOVZ W8, 0x1
	0x03D1AF8C STRB W8, [X21 + 0x934]
	0x03D1AF90 LDR X0, [X20]
	0x03D1AF94 LDR W20, [X19 + 0x20]
	0x03D1AF98 LDR W8, [X0 + 0xE0]
	0x03D1AF9C CBNZ W8, 0x3D1AFA4
	0x03D1AFA0 BL 0x1C16DFC
	0x03D1AFA4 CMP W20, 0x2
	0x03D1AFA8 CSET W0, CC
	0x03D1AFAC MOV X1, X31
	0x03D1AFB0 BL 0x3C06E58
	0x03D1AFB4 LDR W8, [X19 + 0x20]
	0x03D1AFB8 CMP W8, 0x1
	0x03D1AFBC B.NE 0x3D1AFE0
	0x03D1AFC0 LDR X8, [X19]
	0x03D1AFC4 LDR X1, [X19 + 0x28]
	0x03D1AFC8 MOVZ W2, 0x2
	0x03D1AFCC MOV X0, X19
	0x03D1AFD0 LDR X9, [X8 + 0x218]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6CE000
	006 Move X20, 0x44A000
	007 Move W8, [X21+2342]
	008 Move X20, [X20+2840]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x44A000
	015 Move X0, [X0+2840]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2342], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Compare X19, 0
	025 JumpIfEqual {37}
	026 Move X8, [X20]
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X2, X31
	031 Move X8, [X8+184]
	032 Move X1, [X8+16]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call VisualElement.ClassListContains, X0, X1
	036 Return X0
	037 Call 0x1C17F20

