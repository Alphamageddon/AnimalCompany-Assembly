Type: UnityEngine.UIElements.MouseEventBase`1

Method: UnityEngine.EventModifiers get_modifiers()

Disassembly:
	0x031A101C LDR X8, [X21 + 0x20]
	0x031A1020 MOV W21, W0

ISIL:
	001 Move W0, [X0+132]
	002 Return X0

Method: System.Void set_modifiers(UnityEngine.EventModifiers value)

Disassembly:
	0x031A1024 LDRB W9, [X8 + 0x135]
	0x031A1028 TBNZ X9, 0x0, 0x31A1034

ISIL:
	001 Move [X0+132], W1
	002 Return 

Method: UnityEngine.Vector2 get_mousePosition()

Disassembly:
	0x031A102C MOV X0, X8
	0x031A1030 BL 0x1C5C684

ISIL:
	001 Move S0, [X0+136]
	002 Move S1, [X0+140]
	003 Return X0

Method: System.Void set_mousePosition(UnityEngine.Vector2 value)

Disassembly:
	0x031A1034 STR W21, [X19 + 0xA0]
	0x031A1038 LDR X1, [X22]

ISIL:
	001 Move [X0+136], S0
	002 Move [X0+144], S1
	003 Return 

Method: UnityEngine.Vector2 get_localMousePosition()

Disassembly:
	0x031A103C MOV X0, X20
	0x031A1040 BL 0x1C16E00

ISIL:
	001 Move S0, [X0+144]
	002 Move S1, [X0+148]
	003 Return X0

Method: System.Void set_localMousePosition(UnityEngine.Vector2 value)

Disassembly:
	0x031A1044 CBZ X0, 0x31A1168
	0x031A1048 LDR X8, [X0]

ISIL:
	001 Move [X0+144], S0
	002 Move [X0+152], S1
	003 Return 

Method: UnityEngine.Vector2 get_mouseDelta()

Disassembly:
	0x031A104C LDR X1, [X22]
	0x031A1050 MOV X20, X0

ISIL:
	001 Move S0, [X0+152]
	002 Move S1, [X0+156]
	003 Return X0

Method: System.Void set_mouseDelta(UnityEngine.Vector2 value)

Disassembly:
	0x031A1054 LDRH W9, [X8 + 0x12E]
	0x031A1058 CBZ X9, 0x31A107C

ISIL:
	001 Move [X0+152], S0
	002 Move [X0+160], S1
	003 Return 

Method: System.Int32 get_clickCount()

Disassembly:
	0x031A105C LDR X10, [X8 + 0xB0]
	0x031A1060 ADD X10, X10, 0x8

ISIL:
	001 Move W0, [X0+160]
	002 Return X0

Method: System.Void set_clickCount(System.Int32 value)

Disassembly:
	0x031A1064 LDUR X11, [X10 - 0x8]
	0x031A1068 CMP X11, X1

ISIL:
	001 Move [X0+160], W1
	002 Return 

Method: System.Int32 get_button()

Disassembly:
	0x031A106C B.EQ 0x31A108C
	0x031A1070 SUBS X9, X9, 0x1

ISIL:
	001 Move W0, [X0+164]
	002 Return X0

Method: System.Void set_button(System.Int32 value)

Disassembly:
	0x031A1074 ADD X10, X10, 0x10
	0x031A1078 B.NE 0x31A1064

ISIL:
	001 Move [X0+164], W1
	002 Return 

Method: System.Int32 get_pressedButtons()

Disassembly:
	0x031A107C MOV X0, X20
	0x031A1080 MOV W2, W31

ISIL:
	001 Move W0, [X0+168]
	002 Return X0

Method: System.Void set_pressedButtons(System.Int32 value)

Disassembly:
	0x031A1084 BL 0x1C5C788
	0x031A1088 B 0x31A1098

ISIL:
	001 Move [X0+168], W1
	002 Return 

Method: System.Boolean get_shiftKey()

Disassembly:
	0x031A108C LDRSW X9, [X10]
	0x031A1090 ADD X8, X8, X9, 0x4, LSL
	0x031A1094 ADD X0, X8, 0x138

ISIL:
	001 Move W8, [X0+132]
	002 And W0, W8, 1
	003 Return X0

Method: System.Boolean get_ctrlKey()

Disassembly:
	0x031A1098 LDP X8, X1, [X0]
	0x031A109C MOV X0, X20
	0x031A10A0 BLR X8

ISIL:
	001 Move W8, [X0+132]
	002 Move W0, W8
	003 ShiftRight W0, 1
	004 And W0, W0, 1
	005 Return X0

Method: System.Boolean get_commandKey()

Disassembly:
	0x031A10A4 LDR X8, [X19]
	0x031A10A8 LDR X1, [X22]
	0x031A10AC MOV W20, W0

ISIL:
	001 Move W8, [X0+132]
	002 Move W0, W8
	003 ShiftRight W0, 3
	004 And W0, W0, 7
	005 Return X0

Method: System.Boolean get_altKey()

Disassembly:
	0x031A10B0 LDRH W9, [X8 + 0x12E]
	0x031A10B4 CBZ X9, 0x31A10D8
	0x031A10B8 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move W8, [X0+132]
	002 Move W0, W8
	003 ShiftRight W0, 2
	004 And W0, W0, 3
	005 Return X0

Method: System.Boolean UnityEngine.UIElements.IMouseEventInternal.get_triggeredByOS()

Disassembly:
	0x031A10BC ADD X10, X10, 0x8
	0x031A10C0 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move W0, [X0+172]
	002 Return X0

Method: System.Void UnityEngine.UIElements.IMouseEventInternal.set_triggeredByOS(System.Boolean value)

Disassembly:
	0x031A10C4 CMP X11, X1
	0x031A10C8 B.EQ 0x31A10E8
	0x031A10CC SUBS X9, X9, 0x1

ISIL:
	001 And W8, W1, 1
	002 Move [X0+172], W8
	003 Return 

Method: System.Boolean UnityEngine.UIElements.IMouseEventInternal.get_recomputeTopElementUnderMouse()

Disassembly:
	0x031A10D0 ADD X10, X10, 0x10
	0x031A10D4 B.NE 0x31A10C0

ISIL:
	001 Move W0, [X0+173]
	002 Return X0

Method: System.Void UnityEngine.UIElements.IMouseEventInternal.set_recomputeTopElementUnderMouse(System.Boolean value)

Disassembly:
	0x031A10D8 MOVZ W2, 0x1
	0x031A10DC MOV X0, X19
	0x031A10E0 BL 0x1C5C788

ISIL:
	001 And W8, W1, 1
	002 Move [X0+173], W8
	003 Return 

Method: UnityEngine.UIElements.IPointerEvent UnityEngine.UIElements.IMouseEventInternal.get_sourcePointerEvent()

Disassembly:
	0x031A10E4 B 0x31A10F8
	0x031A10E8 LDR W9, [X10]

ISIL:
	001 Move X0, [X0+176]
	002 Return X0

Method: System.Void UnityEngine.UIElements.IMouseEventInternal.set_sourcePointerEvent(UnityEngine.UIElements.IPointerEvent value)

Disassembly:
	0x031A10EC ADD W9, W9, 0x1
	0x031A10F0 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X0+176], X1
	002 Return 

Method: System.Void Init()

Disassembly:
	0x031A10F4 ADD X0, X8, 0x138
	0x031A10F8 LDP X8, X2, [X0]
	0x031A10FC AND W1, W20, 0x1
	0x031A1100 MOV X0, X19
	0x031A1104 BLR X8
	0x031A1108 LDR X8, [X19]
	0x031A110C LDR X1, [X22]
	0x031A1110 LDRH W9, [X8 + 0x12E]
	0x031A1114 CBZ X9, 0x31A1138
	0x031A1118 LDR X10, [X8 + 0xB0]
	0x031A111C ADD X10, X10, 0x8
	0x031A1120 LDUR X11, [X10 - 0x8]
	0x031A1124 CMP X11, X1
	0x031A1128 B.EQ 0x31A1148
	0x031A112C SUBS X9, X9, 0x1
	0x031A1130 ADD X10, X10, 0x10
	0x031A1134 B.NE 0x31A1120

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {19}
	006 Move X8, [X1+32]
	007 Move X20, X1
	008 Move X19, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8+16]
	011 Call 0x2D0E634, X0
	012 Move X8, [X20+32]
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X8, [X8+192]
	017 Move X1, [X8+24]
	018 Move X30, [X31+32]
	019 Call 0x1C17F20

Method: System.Void LocalInit()

Disassembly:
	0x031A1138 MOVZ W2, 0x3
	0x031A113C MOV X0, X19
	0x031A1140 BL 0x1C5C788
	0x031A1144 B 0x31A1158
	0x031A1148 LDR W9, [X10]
	0x031A114C ADD W9, W9, 0x3
	0x031A1150 ADD X8, X8, W9, 0x4, SXTW
	0x031A1154 ADD X0, X8, 0x138
	0x031A1158 LDP X8, X2, [X0]
	0x031A115C MOV X0, X19
	0x031A1160 MOV W1, W31
	0x031A1164 BLR X8
	0x031A1168 MOV X0, X19
	0x031A116C LDP X20, X19, [X31 + 0x30]
	0x031A1170 LDP X22, X21, [X31 + 0x20]
	0x031A1174 LDP X30, X23, [X31 + 0x10]
	0x031A1178 LDP D9, D8, [X31], #0x40
	0x031A117C RET
	0x031A1180 BL 0x1C16F20
	0x031A1184 STP D9, D8, [X31 - 0x50]!
	0x031A1188 STR X30, [X31 + 0x10]
	0x031A118C STP X24, X23, [X31 + 0x20]
	0x031A1190 STP X22, X21, [X31 + 0x30]
	0x031A1194 STP X20, X19, [X31 + 0x40]
	0x031A1198 ADRP X20, 0x123A000
	0x031A119C LDRB W8, [X20 + 0xE16]
	0x031A11A0 MOV X21, X1
	0x031A11A4 MOV X19, X0
	0x031A11A8 TBNZ X8, 0x0, 0x31A11E4
	0x031A11AC ADRP X0, 0xF7E000
	0x031A11B0 LDR X0, [X0 + 0x228]
	0x031A11B4 BL 0x1C16CF4
	0x031A11B8 ADRP X0, 0xF7E000
	0x031A11BC LDR X0, [X0 + 0x220]
	0x031A11C0 BL 0x1C16CF4
	0x031A11C4 ADRP X0, 0xF7B000
	0x031A11C8 LDR X0, [X0 + 0xE60]
	0x031A11CC BL 0x1C16CF4
	0x031A11D0 ADRP X0, 0xF7B000
	0x031A11D4 LDR X0, [X0 + 0xE78]
	0x031A11D8 BL 0x1C16CF4
	0x031A11DC MOVZ W8, 0x1
	0x031A11E0 STRB W8, [X20 + 0xE16]
	0x031A11E4 LDR X0, [X21 + 0x20]
	0x031A11E8 LDRB W8, [X0 + 0x135]
	0x031A11EC TBNZ X8, 0x0, 0x31A11F4
	0x031A11F0 BL 0x1C5C684
	0x031A11F4 LDR X8, [X0 + 0xC0]
	0x031A11F8 LDR X0, [X8 + 0x68]
	0x031A11FC LDRB W8, [X0 + 0x135]
	0x031A1200 TBNZ X8, 0x0, 0x31A1208
	0x031A1204 BL 0x1C5C684
	0x031A1208 LDR W8, [X0 + 0xE0]
	0x031A120C CBNZ W8, 0x31A1214
	0x031A1210 BL 0x1C16DFC
	0x031A1214 LDR X0, [X21 + 0x20]
	0x031A1218 LDRB W8, [X0 + 0x135]
	0x031A121C TBNZ X8, 0x0, 0x31A1224
	0x031A1220 BL 0x1C5C684
	0x031A1224 LDR X8, [X0 + 0xC0]
	0x031A1228 LDR X0, [X8 + 0x60]
	0x031A122C BL 0x2D0D6C4
	0x031A1230 MOV X20, X0
	0x031A1234 CBZ X19, 0x31A186C
	0x031A1238 ADRP X22, 0xF7E000
	0x031A123C LDR X22, [X22 + 0x228]
	0x031A1240 LDR X9, [X19]
	0x031A1244 LDR X8, [X22]
	0x031A1248 LDRB W11, [X9 + 0x130]
	0x031A124C LDRB W10, [X8 + 0x130]
	0x031A1250 CMP W11, W10
	0x031A1254 B.CC 0x31A126C
	0x031A1258 LDR X9, [X9 + 0xC8]
	0x031A125C ADD X9, X9, X10, 0x3, LSL
	0x031A1260 LDUR X9, [X9 - 0x8]
	0x031A1264 CMP X9, X8
	0x031A1268 B.EQ 0x31A12C0
	0x031A126C CBZ X20, 0x31A1870
	0x031A1270 MOV X1, X31
	0x031A1274 ADRP X23, 0xF7B000
	0x031A1278 LDR X23, [X23 + 0xE78]
	0x031A127C MOV X0, X20
	0x031A1280 MOV X2, X31
	0x031A1284 BL 0x3D9C6C8
	0x031A1288 LDR X9, [X19]
	0x031A128C LDR X8, [X22]
	0x031A1290 MOV X1, X31
	0x031A1294 LDRB W11, [X9 + 0x130]
	0x031A1298 LDRB W10, [X8 + 0x130]
	0x031A129C CMP W11, W10
	0x031A12A0 B.CC 0x31A12E8
	0x031A12A4 LDR X9, [X9 + 0xC8]
	0x031A12A8 ADD X9, X9, X10, 0x3, LSL
	0x031A12AC LDUR X9, [X9 - 0x8]
	0x031A12B0 CMP X9, X8
	0x031A12B4 B.EQ 0x31A12D8
	0x031A12B8 MOV X1, X31
	0x031A12BC B 0x31A12E8
	0x031A12C0 MOV X0, X19
	0x031A12C4 MOV X1, X31
	0x031A12C8 BL 0x3D9C848
	0x031A12CC CBZ X20, 0x31A1870
	0x031A12D0 MOV X1, X0
	0x031A12D4 B 0x31A1274
	0x031A12D8 MOV X0, X19
	0x031A12DC MOV X1, X31
	0x031A12E0 BL 0x3D9B814
	0x031A12E4 MOV X1, X0
	0x031A12E8 MOV X0, X20
	0x031A12EC MOV X2, X31
	0x031A12F0 BL 0x3DA04E8
	0x031A12F4 LDR X8, [X19]
	0x031A12F8 LDR X1, [X23]
	0x031A12FC LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x123B000
	006 Move W8, [X20+3599]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF7F000
	013 Move X0, [X0+544]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3599], W8
	017 Compare X19, 0
	018 JumpIfEqual {120}
	019 Move W8, 7
	020 Move [X19+132], W31
	021 Move [X19+48], W8
	022 Move X21, 0x1239000
	023 Move X20, 0xF7F000
	024 Move W8, [X21+1935]
	025 Move X20, [X20+544]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0xF5B000
	029 Move X0, [X0+3848]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1935], W8
	033 Move X8, 0xF5B000
	034 Move X8, [X8+3848]
	035 Move X8, [X8]
	036 Move X9, [X8+184]
	037 Move V0, [X9]
	038 Move [X19+136], D0
	039 Move X9, [X8+184]
	040 Move V0, [X9]
	041 Move [X19+144], D0
	042 Move X8, [X8+184]
	043 Move V0, [X8]
	044 Move X8, [X19]
	045 Move [X19+160], X31
	046 Move [X19+168], W31
	047 Move [X19+152], D0
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move X1, [X20]
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move W2, 1
	059 Move X0, X19
	060 Call 0x1C5D788
	061 Move W9, [X10]
	062 Add W9, W9, 1
	063 Add X8, X8, W9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X2, [X0+8]
	067 Move X0, X19
	068 Move W1, W31
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X8, [X19]
	071 Move X1, [X20]
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move W2, 3
	082 Move X0, X19
	083 Call 0x1C5D788
	084 Move W9, [X10]
	085 Add W9, W9, 3
	086 Add X8, X8, W9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X2, [X0+8]
	090 Move W1, 1
	091 Move X0, X19
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X8, [X19]
	094 Move X1, [X20]
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move W2, 5
	105 Move X0, X19
	106 Call 0x1C5D788
	107 Move W9, [X10]
	108 Add W9, W9, 5
	109 Add X8, X8, W9
	110 Add X0, X8, 312
	111 Move X3, [X0]
	112 Move X2, [X0+8]
	113 Move X0, X19
	114 Move X20, [X31+16]
	115 Move X19, [X31+24]
	116 Move X1, X31
	117 Move X30, [X31+32]
	118 Move X21, [X31+40]
	119 CallNoReturn X3
	120 Call 0x1C17F20

Method: UnityEngine.UIElements.IEventHandler get_currentTarget()

Disassembly:
	0x031A1300 CBZ X9, 0x31A1324
	0x031A1304 LDR X10, [X8 + 0xB0]
	0x031A1308 ADD X10, X10, 0x8
	0x031A130C LDUR X11, [X10 - 0x8]
	0x031A1310 CMP X11, X1

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {6}
	003 Move X1, X31
	004 Call EventBase.get_currentTarget, X0
	005 Return X0
	006 Move [X31-16], X30
	007 Call 0x1C17F20

Method: System.Void set_currentTarget(UnityEngine.UIElements.IEventHandler value)

Disassembly:
	0x031A1314 B.EQ 0x31A1334
	0x031A1318 SUBS X9, X9, 0x1
	0x031A131C ADD X10, X10, 0x10
	0x031A1320 B.NE 0x31A130C
	0x031A1324 MOVZ W2, 0x13
	0x031A1328 MOV X0, X19
	0x031A132C BL 0x1C5C788
	0x031A1330 B 0x31A1344
	0x031A1334 LDR W9, [X10]
	0x031A1338 ADD W9, W9, 0x13
	0x031A133C ADD X8, X8, W9, 0x4, SXTW
	0x031A1340 ADD X0, X8, 0x138
	0x031A1344 LDP X8, X1, [X0]
	0x031A1348 MOV X0, X19
	0x031A134C BLR X8
	0x031A1350 LDR X8, [X21 + 0x20]
	0x031A1354 MOV W22, W0
	0x031A1358 LDRB W9, [X8 + 0x135]
	0x031A135C TBNZ X9, 0x0, 0x31A1368
	0x031A1360 MOV X0, X8
	0x031A1364 BL 0x1C5C684
	0x031A1368 STR W22, [X20 + 0x84]
	0x031A136C LDR X8, [X19]
	0x031A1370 LDR X1, [X23]
	0x031A1374 LDRH W9, [X8 + 0x12E]
	0x031A1378 CBZ X9, 0x31A139C
	0x031A137C LDR X10, [X8 + 0xB0]
	0x031A1380 ADD X10, X10, 0x8
	0x031A1384 LDUR X11, [X10 - 0x8]
	0x031A1388 CMP X11, X1
	0x031A138C B.EQ 0x31A13AC
	0x031A1390 SUBS X9, X9, 0x1
	0x031A1394 ADD X10, X10, 0x10
	0x031A1398 B.NE 0x31A1384
	0x031A139C MOVZ W2, 0x5
	0x031A13A0 MOV X0, X19
	0x031A13A4 BL 0x1C5C788
	0x031A13A8 B 0x31A13BC
	0x031A13AC LDR W9, [X10]
	0x031A13B0 ADD W9, W9, 0x5
	0x031A13B4 ADD X8, X8, W9, 0x4, SXTW
	0x031A13B8 ADD X0, X8, 0x138
	0x031A13BC LDP X8, X1, [X0]
	0x031A13C0 MOV X0, X19
	0x031A13C4 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x123B000
	006 Move W8, [X21+3600]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xF7B000
	014 Move X0, [X0+2200]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3600], W8
	018 Compare X19, 0
	019 JumpIfEqual {55}
	020 Move X0, X19
	021 Move X1, X20
	022 Move X2, X31
	023 Call EventBase.set_currentTarget, X0, X1
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move X9, [X8+472]
	027 Move X1, [X8+480]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Compare X0, 0
	030 JumpIfEqual {42}
	031 Move X8, 0xF7B000
	032 Move X8, [X8+2200]
	033 Move X9, [X0]
	034 Move X8, [X8]
	035 Move W11, [X9+304]
	036 Move W10, [X8+304]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, [X9+200]
	039 Add X9, X9, X10
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move S0, [X19+136]
	043 Move S1, [X19+140]
	044 Move [X19+144], S0
	045 Move [X19+152], S1
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Move S0, [X19+136]
	052 Move S1, [X19+140]
	053 Move X1, X31
	054 Call VisualElementExtensions.WorldToLocal, X0, X1
	055 Call 0x1C17F20

Method: System.Void PreDispatch(UnityEngine.UIElements.IPanel panel)

Disassembly:
	0x031A13C8 LDR X0, [X21 + 0x20]
	0x031A13CC MOV V8.16B, V0.16B
	0x031A13D0 MOV V9.16B, V1.16B
	0x031A13D4 LDRB W8, [X0 + 0x135]
	0x031A13D8 TBNZ X8, 0x0, 0x31A13E0
	0x031A13DC BL 0x1C5C684
	0x031A13E0 STP S8, S9, [X20 + 0x88]
	0x031A13E4 LDR X8, [X19]
	0x031A13E8 LDR X1, [X23]
	0x031A13EC LDRH W9, [X8 + 0x12E]
	0x031A13F0 CBZ X9, 0x31A1414
	0x031A13F4 LDR X10, [X8 + 0xB0]
	0x031A13F8 ADD X10, X10, 0x8
	0x031A13FC LDUR X11, [X10 - 0x8]
	0x031A1400 CMP X11, X1
	0x031A1404 B.EQ 0x31A1424
	0x031A1408 SUBS X9, X9, 0x1
	0x031A140C ADD X10, X10, 0x10
	0x031A1410 B.NE 0x31A13FC
	0x031A1414 MOVZ W2, 0x5
	0x031A1418 MOV X0, X19
	0x031A141C BL 0x1C5C788
	0x031A1420 B 0x31A1434
	0x031A1424 LDR W9, [X10]
	0x031A1428 ADD W9, W9, 0x5
	0x031A142C ADD X8, X8, W9, 0x4, SXTW
	0x031A1430 ADD X0, X8, 0x138
	0x031A1434 LDP X8, X1, [X0]
	0x031A1438 MOV X0, X19
	0x031A143C BLR X8
	0x031A1440 LDR X0, [X21 + 0x20]
	0x031A1444 MOV V8.16B, V0.16B
	0x031A1448 MOV V9.16B, V1.16B
	0x031A144C LDRB W8, [X0 + 0x135]
	0x031A1450 TBNZ X8, 0x0, 0x31A1458
	0x031A1454 BL 0x1C5C684
	0x031A1458 STP S8, S9, [X20 + 0x90]
	0x031A145C LDR X8, [X19]
	0x031A1460 LDR X1, [X23]
	0x031A1464 LDRH W9, [X8 + 0x12E]
	0x031A1468 CBZ X9, 0x31A148C
	0x031A146C LDR X10, [X8 + 0xB0]
	0x031A1470 ADD X10, X10, 0x8
	0x031A1474 LDUR X11, [X10 - 0x8]
	0x031A1478 CMP X11, X1
	0x031A147C B.EQ 0x31A149C
	0x031A1480 SUBS X9, X9, 0x1
	0x031A1484 ADD X10, X10, 0x10
	0x031A1488 B.NE 0x31A1474
	0x031A148C MOVZ W2, 0x7
	0x031A1490 MOV X0, X19
	0x031A1494 BL 0x1C5C788
	0x031A1498 B 0x31A14AC
	0x031A149C LDR W9, [X10]
	0x031A14A0 ADD W9, W9, 0x7
	0x031A14A4 ADD X8, X8, W9, 0x4, SXTW
	0x031A14A8 ADD X0, X8, 0x138
	0x031A14AC LDP X8, X1, [X0]
	0x031A14B0 MOV X0, X19
	0x031A14B4 BLR X8
	0x031A14B8 LDR X0, [X21 + 0x20]
	0x031A14BC MOV V8.16B, V0.16B
	0x031A14C0 MOV V9.16B, V1.16B
	0x031A14C4 LDRB W8, [X0 + 0x135]
	0x031A14C8 TBNZ X8, 0x0, 0x31A14D0
	0x031A14CC BL 0x1C5C684
	0x031A14D0 STP S8, S9, [X20 + 0x98]
	0x031A14D4 LDR X8, [X19]
	0x031A14D8 LDR X1, [X23]
	0x031A14DC LDRH W9, [X8 + 0x12E]
	0x031A14E0 CBZ X9, 0x31A1504
	0x031A14E4 LDR X10, [X8 + 0xB0]
	0x031A14E8 ADD X10, X10, 0x8
	0x031A14EC LDUR X11, [X10 - 0x8]
	0x031A14F0 CMP X11, X1
	0x031A14F4 B.EQ 0x31A1514
	0x031A14F8 SUBS X9, X9, 0x1
	0x031A14FC ADD X10, X10, 0x10
	0x031A1500 B.NE 0x31A14EC
	0x031A1504 MOVZ W2, 0x3
	0x031A1508 MOV X0, X19
	0x031A150C BL 0x1C5C788
	0x031A1510 B 0x31A1524
	0x031A1514 LDR W9, [X10]
	0x031A1518 ADD W9, W9, 0x3
	0x031A151C ADD X8, X8, W9, 0x4, SXTW
	0x031A1520 ADD X0, X8, 0x138
	0x031A1524 LDP X8, X1, [X0]
	0x031A1528 MOV X0, X19
	0x031A152C BLR X8
	0x031A1530 ADDS W31, W0, 0x1
	0x031A1534 CSEL X24, X31, X20, EQ
	0x031A1538 B.EQ 0x31A157C
	0x031A153C LDR X8, [X19]
	0x031A1540 LDR X1, [X23]
	0x031A1544 LDRH W9, [X8 + 0x12E]
	0x031A1548 CBZ X9, 0x31A156C
	0x031A154C LDR X10, [X8 + 0xB0]
	0x031A1550 ADD X10, X10, 0x8
	0x031A1554 LDUR X11, [X10 - 0x8]
	0x031A1558 CMP X11, X1
	0x031A155C B.EQ 0x31A1588
	0x031A1560 SUBS X9, X9, 0x1
	0x031A1564 ADD X10, X10, 0x10
	0x031A1568 B.NE 0x31A1554
	0x031A156C MOVZ W2, 0x3
	0x031A1570 MOV X0, X19
	0x031A1574 BL 0x1C5C788
	0x031A1578 B 0x31A1598
	0x031A157C MOV W22, W31
	0x031A1580 MOV X24, X20

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x123B000
	008 Move W8, [X21+3601]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xF7F000
	016 Move X0, [X0+544]
	017 Call 0x1C17CF4
	018 Move X0, 0xF7C000
	019 Move X0, [X0+3712]
	020 Call 0x1C17CF4
	021 Move X0, 0xF7B000
	022 Move X0, [X0+2392]
	023 Call 0x1C17CF4
	024 Move X0, 0xF7C000
	025 Move X0, [X0+3664]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3601], W8
	029 Compare X20, 0
	030 JumpIfEqual {130}
	031 Move X21, 0xF7F000
	032 Move X21, [X21+544]
	033 Move X0, X20
	034 Move X1, X19
	035 Move X2, X31
	036 Call EventBase.PreDispatch, X0, X1
	037 Move X8, [X20]
	038 Move X1, [X21]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Compare X9, 0
	041 JumpIfEqual {48}
	042 Move X10, [X8+176]
	043 Add X10, X10, 8
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Subtract X9, X9, 1
	047 Add X10, X10, 16
	048 Move X0, X20
	049 Move W2, W31
	050 Call 0x1C5D788
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 Add X8, X8, X9
	053 Add X0, X8, 312
	054 Move X8, [X0]
	055 Move X1, [X0+8]
	056 Move X0, X20
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {92}
	062 Move X21, 0xF7C000
	063 Move X21, [X21+3664]
	064 Move X0, [X21]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1C17DFC
	069 Move X0, [X21]
	070 Compare X19, 0
	071 JumpIfEqual {130}
	072 Move X10, 0xF7C000
	073 Move X9, [X0+184]
	074 Move X8, [X19]
	075 Move S9, [X20+136]
	076 Move S8, [X20+140]
	077 Move X10, [X10+3712]
	078 Move W20, [X9+8]
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Move X1, [X10]
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move W2, 2
	090 Move X0, X19
	091 Call 0x1C5D788
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X30, [X31+16]
	095 Move X21, [X31+24]
	096 Move D9, [X31+48]
	097 Move D8, [X31+56]
	098 Return 
	099 Move W9, [X10]
	100 Add W9, W9, 2
	101 Add X8, X8, W9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X1, [X0+8]
	105 Move X0, X19
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X8, 0xF7B000
	108 Move X8, [X8+2392]
	109 Move W21, W0
	110 Move X8, [X8]
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {116}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 Move W0, W20
	117 Move X1, X19
	118 Move W2, W21
	119 Move X20, [X31+32]
	120 Move X19, [X31+40]
	121 Move X30, [X31+16]
	122 Move X21, [X31+24]
	123 Move V0, V9
	124 Move V1, V8
	125 Move X3, X31
	126 Move D9, [X31+48]
	127 Move D8, [X31+56]
	128 Call PointerDeviceState.SavePointerPosition, X0, X1, X2, X3
	129 Return 
	130 Call 0x1C17F20

Method: System.Void PostDispatch(UnityEngine.UIElements.IPanel panel)

Disassembly:
	0x031A1584 B 0x31A15A8
	0x031A1588 LDR W9, [X10]
	0x031A158C ADD W9, W9, 0x3
	0x031A1590 ADD X8, X8, W9, 0x4, SXTW
	0x031A1594 ADD X0, X8, 0x138
	0x031A1598 LDP X8, X1, [X0]
	0x031A159C MOV X0, X19
	0x031A15A0 BLR X8
	0x031A15A4 MOV W22, W0
	0x031A15A8 CBZ X24, 0x31A1870
	0x031A15AC LDR X0, [X21 + 0x20]
	0x031A15B0 LDRB W8, [X0 + 0x135]
	0x031A15B4 TBNZ X8, 0x0, 0x31A15BC
	0x031A15B8 BL 0x1C5C684
	0x031A15BC STR W22, [X24 + 0xA4]
	0x031A15C0 LDR X8, [X19]
	0x031A15C4 LDR X1, [X23]
	0x031A15C8 LDRH W9, [X8 + 0x12E]
	0x031A15CC CBZ X9, 0x31A15F0
	0x031A15D0 LDR X10, [X8 + 0xB0]
	0x031A15D4 ADD X10, X10, 0x8
	0x031A15D8 LDUR X11, [X10 - 0x8]
	0x031A15DC CMP X11, X1
	0x031A15E0 B.EQ 0x31A1600
	0x031A15E4 SUBS X9, X9, 0x1
	0x031A15E8 ADD X10, X10, 0x10
	0x031A15EC B.NE 0x31A15D8
	0x031A15F0 MOVZ W2, 0x4
	0x031A15F4 MOV X0, X19
	0x031A15F8 BL 0x1C5C788
	0x031A15FC B 0x31A1610
	0x031A1600 LDR W9, [X10]
	0x031A1604 ADD W9, W9, 0x4
	0x031A1608 ADD X8, X8, W9, 0x4, SXTW
	0x031A160C ADD X0, X8, 0x138
	0x031A1610 LDP X8, X1, [X0]
	0x031A1614 MOV X0, X19
	0x031A1618 BLR X8
	0x031A161C LDR X8, [X21 + 0x20]
	0x031A1620 MOV W22, W0
	0x031A1624 LDRB W9, [X8 + 0x135]
	0x031A1628 TBNZ X9, 0x0, 0x31A1634
	0x031A162C MOV X0, X8
	0x031A1630 BL 0x1C5C684
	0x031A1634 STR W22, [X20 + 0xA8]
	0x031A1638 LDR X8, [X19]
	0x031A163C LDR X1, [X23]
	0x031A1640 LDRH W9, [X8 + 0x12E]
	0x031A1644 CBZ X9, 0x31A1668
	0x031A1648 LDR X10, [X8 + 0xB0]
	0x031A164C ADD X10, X10, 0x8
	0x031A1650 LDUR X11, [X10 - 0x8]
	0x031A1654 CMP X11, X1
	0x031A1658 B.EQ 0x31A1678
	0x031A165C SUBS X9, X9, 0x1
	0x031A1660 ADD X10, X10, 0x10
	0x031A1664 B.NE 0x31A1650
	0x031A1668 MOVZ W2, 0x9
	0x031A166C MOV X0, X19
	0x031A1670 BL 0x1C5C788
	0x031A1674 B 0x31A1688
	0x031A1678 LDR W9, [X10]
	0x031A167C ADD W9, W9, 0x9
	0x031A1680 ADD X8, X8, W9, 0x4, SXTW
	0x031A1684 ADD X0, X8, 0x138
	0x031A1688 LDP X8, X1, [X0]
	0x031A168C ADRP X22, 0xF7B000
	0x031A1690 LDR X22, [X22 + 0xE60]
	0x031A1694 MOV X0, X19
	0x031A1698 BLR X8
	0x031A169C LDR X8, [X21 + 0x20]
	0x031A16A0 MOV W21, W0
	0x031A16A4 LDRB W9, [X8 + 0x135]
	0x031A16A8 TBNZ X9, 0x0, 0x31A16B4
	0x031A16AC MOV X0, X8
	0x031A16B0 BL 0x1C5C684
	0x031A16B4 STR W21, [X20 + 0xA0]
	0x031A16B8 LDR X1, [X22]
	0x031A16BC MOV X0, X19
	0x031A16C0 BL 0x1C16E00
	0x031A16C4 CBZ X0, 0x31A1850
	0x031A16C8 LDR X8, [X0]
	0x031A16CC LDR X1, [X22]
	0x031A16D0 ADRP X22, 0xF7E000
	0x031A16D4 MOV X21, X0
	0x031A16D8 LDRH W9, [X8 + 0x12E]
	0x031A16DC LDR X22, [X22 + 0x220]
	0x031A16E0 CBZ X9, 0x31A1704
	0x031A16E4 LDR X10, [X8 + 0xB0]
	0x031A16E8 ADD X10, X10, 0x8
	0x031A16EC LDUR X11, [X10 - 0x8]
	0x031A16F0 CMP X11, X1
	0x031A16F4 B.EQ 0x31A1714
	0x031A16F8 SUBS X9, X9, 0x1
	0x031A16FC ADD X10, X10, 0x10
	0x031A1700 B.NE 0x31A16EC
	0x031A1704 MOV X0, X21
	0x031A1708 MOV W2, W31
	0x031A170C BL 0x1C5C788
	0x031A1710 B 0x31A1720
	0x031A1714 LDRSW X9, [X10]
	0x031A1718 ADD X8, X8, X9, 0x4, LSL
	0x031A171C ADD X0, X8, 0x138
	0x031A1720 LDP X8, X1, [X0]
	0x031A1724 MOV X0, X21
	0x031A1728 BLR X8
	0x031A172C LDR X8, [X20]
	0x031A1730 LDR X1, [X22]
	0x031A1734 MOV W21, W0
	0x031A1738 LDRH W9, [X8 + 0x12E]
	0x031A173C CBZ X9, 0x31A1760
	0x031A1740 LDR X10, [X8 + 0xB0]
	0x031A1744 ADD X10, X10, 0x8
	0x031A1748 LDUR X11, [X10 - 0x8]
	0x031A174C CMP X11, X1
	0x031A1750 B.EQ 0x31A1770
	0x031A1754 SUBS X9, X9, 0x1
	0x031A1758 ADD X10, X10, 0x10
	0x031A175C B.NE 0x31A1748
	0x031A1760 MOVZ W2, 0x1
	0x031A1764 MOV X0, X20
	0x031A1768 BL 0x1C5C788
	0x031A176C B 0x31A1780
	0x031A1770 LDR W9, [X10]
	0x031A1774 ADD W9, W9, 0x1
	0x031A1778 ADD X8, X8, W9, 0x4, SXTW
	0x031A177C ADD X0, X8, 0x138
	0x031A1780 LDP X8, X2, [X0]
	0x031A1784 AND W1, W21, 0x1
	0x031A1788 MOV X0, X20
	0x031A178C BLR X8
	0x031A1790 LDR X8, [X20]
	0x031A1794 LDR X1, [X22]
	0x031A1798 LDRH W9, [X8 + 0x12E]
	0x031A179C CBZ X9, 0x31A17C0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x123B000
	007 Move W8, [X21+3602]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xF7C000
	015 Move X0, [X0+3720]
	016 Call 0x1C17CF4
	017 Move X0, 0xF53000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0xF7F000
	021 Move X0, [X0+552]
	022 Call 0x1C17CF4
	023 Move X0, 0xF7F000
	024 Move X0, [X0+544]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3602], W8
	028 Compare X20, 0
	029 JumpIfEqual {151}
	030 Move X10, 0xF7F000
	031 Move X8, [X20]
	032 Move X10, [X10+544]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 4
	044 Move X0, X20
	045 Call 0x1C5D788
	046 Move W9, [X10]
	047 Add W9, W9, 4
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X8, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X20
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Compare X0, 0
	055 JumpIfEqual {141}
	056 Move X8, 0xF7F000
	057 Move X8, [X8+552]
	058 Move X9, [X0]
	059 Move X21, X0
	060 Move X8, [X8]
	061 Move W11, [X9+304]
	062 Move W10, [X8+304]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X9, [X9+200]
	065 Add X9, X9, X10
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, X21
	069 Move X1, X31
	070 Call EventBase.get_processed, X0
	071 Move X8, 0xF53000
	072 Move X8, [X8+2600]
	073 Move W22, W0
	074 Move X8, [X8]
	075 Move W9, [X8+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {80}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 And W0, W22, 1
	081 Move X1, X31
	082 Call Debug.Assert, X0
	083 Compare X19, 0
	084 JumpIfEqual {99}
	085 Move X8, 0xF7C000
	086 Move X8, [X8+3720]
	087 Move X9, [X19]
	088 Move X8, [X8]
	089 Move W11, [X9+304]
	090 Move W10, [X8+304]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X9, [X9+200]
	093 Add X9, X9, X10
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, X19
	097 Move X1, X31
	098 Call BaseVisualElementPanel.CommitElementUnderPointers, X0
	099 Move X0, X20
	100 Move X1, X31
	101 Call EventBase.get_isPropagationStopped, X0
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {109}
	106 Move X0, X21
	107 Move X1, X31
	108 Call EventBase.StopPropagation, X0
	109 Move X0, X20
	110 Move X1, X31
	111 Call EventBase.get_isImmediatePropagationStopped, X0
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {119}
	116 Move X0, X21
	117 Move X1, X31
	118 Call EventBase.StopImmediatePropagation, X0
	119 Move X0, X20
	120 Move X1, X31
	121 Call EventBase.get_isDefaultPrevented, X0
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {129}
	126 Move X0, X21
	127 Move X1, X31
	128 Call EventBase.PreventDefault, X0
	129 Move X0, X21
	130 Move X1, X31
	131 Call EventBase.get_processedByFocusController, X0
	132 Move W22, W0
	133 Move X0, X20
	134 Move X1, X31
	135 Call EventBase.get_processedByFocusController, X0
	136 Or W8, W22, W0
	137 And W1, W8, 1
	138 Move X0, X21
	139 Move X2, X31
	140 Call EventBase.set_processedByFocusController, X0, X1
	141 Move X0, X20
	142 Move X1, X19
	143 Move X20, [X31+32]
	144 Move X19, [X31+40]
	145 Move X22, [X31+16]
	146 Move X21, [X31+24]
	147 Move X2, X31
	148 Move X30, [X31+48]
	149 Call EventBase.PostDispatch, X0, X1
	150 Return 
	151 Call 0x1C17F20

Method: T GetPooled(UnityEngine.Event systemEvent)

Disassembly:
	0x031A17A0 LDR X10, [X8 + 0xB0]
	0x031A17A4 ADD X10, X10, 0x8
	0x031A17A8 LDUR X11, [X10 - 0x8]
	0x031A17AC CMP X11, X1
	0x031A17B0 B.EQ 0x31A17D0
	0x031A17B4 SUBS X9, X9, 0x1
	0x031A17B8 ADD X10, X10, 0x10
	0x031A17BC B.NE 0x31A17A8
	0x031A17C0 MOVZ W2, 0x3
	0x031A17C4 MOV X0, X20
	0x031A17C8 BL 0x1C5C788
	0x031A17CC B 0x31A17E0
	0x031A17D0 LDR W9, [X10]
	0x031A17D4 ADD W9, W9, 0x3
	0x031A17D8 ADD X8, X8, W9, 0x4, SXTW
	0x031A17DC ADD X0, X8, 0x138
	0x031A17E0 LDP X8, X2, [X0]
	0x031A17E4 MOVZ W1, 0x1
	0x031A17E8 MOV X0, X20
	0x031A17EC BLR X8
	0x031A17F0 LDR X8, [X20]
	0x031A17F4 LDR X1, [X22]
	0x031A17F8 LDRH W9, [X8 + 0x12E]
	0x031A17FC CBZ X9, 0x31A1820
	0x031A1800 LDR X10, [X8 + 0xB0]
	0x031A1804 ADD X10, X10, 0x8
	0x031A1808 LDUR X11, [X10 - 0x8]
	0x031A180C CMP X11, X1
	0x031A1810 B.EQ 0x31A1830
	0x031A1814 SUBS X9, X9, 0x1
	0x031A1818 ADD X10, X10, 0x10
	0x031A181C B.NE 0x31A1808
	0x031A1820 MOVZ W2, 0x5
	0x031A1824 MOV X0, X20
	0x031A1828 BL 0x1C5C788
	0x031A182C B 0x31A1840
	0x031A1830 LDR W9, [X10]
	0x031A1834 ADD W9, W9, 0x5
	0x031A1838 ADD X8, X8, W9, 0x4, SXTW
	0x031A183C ADD X0, X8, 0x138
	0x031A1840 LDP X8, X2, [X0]
	0x031A1844 MOV X0, X20
	0x031A1848 MOV X1, X19
	0x031A184C BLR X8
	0x031A1850 MOV X0, X20
	0x031A1854 LDP X20, X19, [X31 + 0x40]
	0x031A1858 LDP X22, X21, [X31 + 0x30]
	0x031A185C LDP X24, X23, [X31 + 0x20]
	0x031A1860 LDR X30, [X31 + 0x10]
	0x031A1864 LDP D9, D8, [X31], #0x50
	0x031A1868 RET
	0x031A186C CBNZ X20, 0x31A1874
	0x031A1870 BL 0x1C16F20
	0x031A1874 MOV X0, X20
	0x031A1878 MOV X1, X31
	0x031A187C MOV X2, X31
	0x031A1880 BL 0x3D9C6C8
	0x031A1884 MOV X0, X20
	0x031A1888 MOV X1, X31
	0x031A188C MOV X2, X31
	0x031A1890 BL 0x3DA04E8
	0x031A1894 BL 0x1C16F20
	0x031A1898 STR X30, [X31 - 0x20]!
	0x031A189C STP X20, X19, [X31 + 0x10]
	0x031A18A0 LDR X8, [X1 + 0x20]
	0x031A18A4 MOV X19, X1
	0x031A18A8 MOV X20, X0
	0x031A18AC LDR X8, [X8 + 0xC0]
	0x031A18B0 LDR X8, [X8 + 0x68]
	0x031A18B4 LDRB W9, [X8 + 0x135]
	0x031A18B8 TBNZ X9, 0x0, 0x31A18C8
	0x031A18BC MOV X0, X8
	0x031A18C0 BL 0x1C5C684
	0x031A18C4 MOV X8, X0
	0x031A18C8 LDR W9, [X8 + 0xE0]
	0x031A18CC CBNZ W9, 0x31A18D8
	0x031A18D0 MOV X0, X8
	0x031A18D4 BL 0x1C16DFC
	0x031A18D8 LDR X8, [X19 + 0x20]
	0x031A18DC MOV X0, X20
	0x031A18E0 LDR X8, [X8 + 0xC0]
	0x031A18E4 LDR X1, [X8 + 0x90]
	0x031A18E8 BL 0x2D0D54C
	0x031A18EC LDR X8, [X19 + 0x20]
	0x031A18F0 MOV X0, X20
	0x031A18F4 LDP X20, X19, [X31 + 0x10]
	0x031A18F8 LDR X8, [X8 + 0xC0]
	0x031A18FC LDR X1, [X8 + 0x18]
	0x031A1900 LDR X30, [X31], #0x20
	0x031A1904 B 0x31A0138
	0x031A1908 STP D15, D14, [X31 - 0xA0]!
	0x031A190C STP D13, D12, [X31 + 0x10]
	0x031A1910 STP D11, D10, [X31 + 0x20]
	0x031A1914 STP D9, D8, [X31 + 0x30]
	0x031A1918 STP X29, X30, [X31 + 0x40]
	0x031A191C STP X28, X27, [X31 + 0x50]
	0x031A1920 STP X26, X25, [X31 + 0x60]
	0x031A1924 STP X24, X23, [X31 + 0x70]
	0x031A1928 STP X22, X21, [X31 + 0x80]
	0x031A192C STP X20, X19, [X31 + 0x90]
	0x031A1930 SUB X31, X31, 0x380
	0x031A1934 ADRP X19, 0x123A000
	0x031A1938 LDRB W9, [X19 + 0xE17]
	0x031A193C MOV X21, X4
	0x031A1940 MOV X27, X3
	0x031A1944 MOV X20, X2
	0x031A1948 MOV X23, X1
	0x031A194C MOV X22, X8
	0x031A1950 TBNZ X9, 0x0, 0x31A19A4
	0x031A1954 ADRP X0, 0xF5B000
	0x031A1958 LDR X0, [X0 + 0x9E8]
	0x031A195C BL 0x1C16CF4
	0x031A1960 ADRP X0, 0xF7C000
	0x031A1964 LDR X0, [X0 + 0x128]
	0x031A1968 BL 0x1C16CF4
	0x031A196C ADRP X0, 0xF7C000
	0x031A1970 LDR X0, [X0 + 0x940]
	0x031A1974 BL 0x1C16CF4
	0x031A1978 ADRP X0, 0xF52000
	0x031A197C LDR X0, [X0 + 0x598]
	0x031A1980 BL 0x1C16CF4
	0x031A1984 ADRP X0, 0xF7E000
	0x031A1988 LDR X0, [X0 + 0x230]
	0x031A198C BL 0x1C16CF4
	0x031A1990 ADRP X0, 0xF7C000
	0x031A1994 LDR X0, [X0 + 0x960]
	0x031A1998 BL 0x1C16CF4
	0x031A199C MOVZ W8, 0x1
	0x031A19A0 STRB W8, [X19 + 0xE17]
	0x031A19A4 ADD X0, X31, 0x1E0
	0x031A19A8 MOVZ W2, 0x88
	0x031A19AC MOV W1, W31
	0x031A19B0 BL 0x3EB1B10
	0x031A19B4 ADD X0, X31, 0x268
	0x031A19B8 MOVZ W2, 0x118
	0x031A19BC MOV W1, W31
	0x031A19C0 BL 0x3EB1B10
	0x031A19C4 LDR X1, [X20]
	0x031A19C8 MOV X0, X23
	0x031A19CC MOV X2, X31
	0x031A19D0 BL 0x36EADF0
	0x031A19D4 STR X0, [X31 + 0x268]
	0x031A19D8 STR W1, [X31 + 0x270]
	0x031A19DC LDR X0, [X20]
	0x031A19E0 CBZ X0, 0x31A1EDC
	0x031A19E4 ADRP X19, 0xF52000
	0x031A19E8 LDR X19, [X19 + 0x598]
	0x031A19EC MOV X1, X31
	0x031A19F0 ADD X26, X31, 0x268
	0x031A19F4 ADD X25, X31, 0xD0
	0x031A19F8 BL 0x3C3F49C
	0x031A19FC MOV X1, X0
	0x031A1A00 ADD X8, X31, 0xD0
	0x031A1A04 MOV X0, X23
	0x031A1A08 MOV X2, X31
	0x031A1A0C BL 0x36EB150
	0x031A1A10 LDR V0, [X25]
	0x031A1A14 LDR X8, [X31 + 0xE0]
	0x031A1A18 MOV X0, X20
	0x031A1A1C STUR V0, [X26 + 0xC]
	0x031A1A20 STUR X8, [X26 + 0x1C]
	0x031A1A24 LDR X8, [X21 + 0x20]
	0x031A1A28 LDR X8, [X8 + 0xC0]
	0x031A1A2C LDR X1, [X8 + 0x18]
	0x031A1A30 BL 0x36EDA3C
	0x031A1A34 STR S0, [X31 + 0x300]
	0x031A1A38 STR S1, [X31 + 0x304]
	0x031A1A3C STR S2, [X31 + 0x308]
	0x031A1A40 LDR X8, [X21 + 0x20]
	0x031A1A44 MOV X0, X20
	0x031A1A48 LDR X8, [X8 + 0xC0]
	0x031A1A4C LDR X1, [X8 + 0x20]
	0x031A1A50 BL 0x36EDBFC
	0x031A1A54 STR S0, [X31 + 0x30C]
	0x031A1A58 STR S1, [X31 + 0x310]
	0x031A1A5C STR S2, [X31 + 0x314]
	0x031A1A60 LDR X8, [X21 + 0x20]
	0x031A1A64 LDR W9, [X20 + 0xAC]
	0x031A1A68 MOV X0, X20
	0x031A1A6C LDR X8, [X8 + 0xC0]
	0x031A1A70 STR W9, [X31 + 0x318]
	0x031A1A74 LDR X1, [X8 + 0x30]
	0x031A1A78 BL 0x36EDC0C
	0x031A1A7C LDR X0, [X19]
	0x031A1A80 STR S0, [X31 + 0x31C]
	0x031A1A84 STR S1, [X31 + 0x320]
	0x031A1A88 STR S2, [X31 + 0x324]
	0x031A1A8C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0x123B000
	010 Move W8, [X19+3603]
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xF7F000
	018 Move X0, [X0+544]
	019 Call 0x1C17CF4
	020 Move X0, 0xF7B000
	021 Move X0, [X0+2392]
	022 Call 0x1C17CF4
	023 Move X0, 0xF7C000
	024 Move X0, [X0+3664]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+3603], W8
	028 Move X0, [X20+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X0, [X8+104]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, [X20+32]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move X8, [X0+192]
	055 Move X0, [X8+96]
	056 Call 0x2D0E6C4
	057 Compare X0, 0
	058 JumpIfEqual {235}
	059 Move X1, X21
	060 Move X2, X31
	061 Move X19, X0
	062 Call EventBase.set_imguiEvent, X0, X1
	063 Compare X21, 0
	064 JumpIfEqual {225}
	065 Move X0, X21
	066 Move X1, X31
	067 Call Event.get_modifiers, X0
	068 Move X8, [X20+32]
	069 Move W22, W0
	070 Move W9, [X8+309]
	071 Move TEMP, X9
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {77}
	075 Move X0, X8
	076 Call 0x1C5D684
	077 Move X0, X21
	078 Move X1, X31
	079 Move [X19+132], W22
	080 Call Event.get_mousePosition, X0
	081 Move X0, [X20+32]
	082 Move V8, V0
	083 Move V9, V1
	084 Move W8, [X0+309]
	085 Move TEMP, X8
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {90}
	089 Call 0x1C5D684
	090 Move X0, X21
	091 Move X1, X31
	092 Move [X19+136], S8
	093 Move [X19+144], S9
	094 Call Event.get_mousePosition, X0
	095 Move X0, [X20+32]
	096 Move V8, V0
	097 Move V9, V1
	098 Move W8, [X0+309]
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {104}
	103 Call 0x1C5D684
	104 Move X0, X21
	105 Move X1, X31
	106 Move [X19+144], S8
	107 Move [X19+152], S9
	108 Call Event.get_delta, X0
	109 Move X0, [X20+32]
	110 Move V8, V0
	111 Move V9, V1
	112 Move W8, [X0+309]
	113 Move TEMP, X8
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {118}
	117 Call 0x1C5D684
	118 Move X23, 0xF7C000
	119 Move X23, [X23+3664]
	120 Move X0, X21
	121 Move X1, X31
	122 Move [X19+152], S8
	123 Move [X19+160], S9
	124 Call Event.get_button, X0
	125 Move X8, [X20+32]
	126 Move W22, W0
	127 Move W9, [X8+309]
	128 Move TEMP, X9
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {134}
	132 Move X0, X8
	133 Call 0x1C5D684
	134 Move [X19+164], W22
	135 Move X0, [X23]
	136 Move X22, 0xF7B000
	137 Move W8, [X0+224]
	138 Move X22, [X22+2392]
	139 Compare W8, 0
	140 JumpIfNotEqual {143}
	141 Call 0x1C17DFC
	142 Move X0, [X23]
	143 Move X8, [X22]
	144 Move X9, [X0+184]
	145 Move W10, [X8+224]
	146 Move W22, [X9+8]
	147 Compare W10, 0
	148 JumpIfNotEqual {151}
	149 Move X0, X8
	150 Call 0x1C17DFC
	151 Move W0, W22
	152 Move X1, X31
	153 Call PointerDeviceState.GetPressedButtons, X0
	154 Move X8, [X20+32]
	155 Move W22, W0
	156 Move W9, [X8+309]
	157 Move TEMP, X9
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {163}
	161 Move X0, X8
	162 Call 0x1C5D684
	163 Move X23, 0xF7F000
	164 Move X23, [X23+544]
	165 Move X0, X21
	166 Move X1, X31
	167 Move [X19+168], W22
	168 Call Event.get_clickCount, X0
	169 Move X8, [X20+32]
	170 Move W20, W0
	171 Move W9, [X8+309]
	172 Move TEMP, X9
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {178}
	176 Move X0, X8
	177 Call 0x1C5D684
	178 Move X8, [X19]
	179 Move [X19+160], W20
	180 Move X1, [X23]
	181 NotImplemented "Instruction LDRH not yet implemented."
	182 Compare X9, 0
	183 JumpIfEqual {190}
	184 Move X10, [X8+176]
	185 Add X10, X10, 8
	186 NotImplemented "Instruction LDUR not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Subtract X9, X9, 1
	189 Add X10, X10, 16
	190 Move W2, 1
	191 Move X0, X19
	192 Call 0x1C5D788
	193 Move W9, [X10]
	194 Add W9, W9, 1
	195 Add X8, X8, W9
	196 Add X0, X8, 312
	197 Move X8, [X0]
	198 Move X2, [X0+8]
	199 Move W1, 1
	200 Move X0, X19
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Move X8, [X19]
	203 Move X1, [X23]
	204 NotImplemented "Instruction LDRH not yet implemented."
	205 Compare X9, 0
	206 JumpIfEqual {213}
	207 Move X10, [X8+176]
	208 Add X10, X10, 8
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Subtract X9, X9, 1
	212 Add X10, X10, 16
	213 Move W2, 3
	214 Move X0, X19
	215 Call 0x1C5D788
	216 Move W9, [X10]
	217 Add W9, W9, 3
	218 Add X8, X8, W9
	219 Add X0, X8, 312
	220 Move X8, [X0]
	221 Move X2, [X0+8]
	222 Move W1, 1
	223 Move X0, X19
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Move X0, X19
	226 Move X20, [X31+48]
	227 Move X19, [X31+56]
	228 Move X22, [X31+32]
	229 Move X21, [X31+40]
	230 Move X30, [X31+16]
	231 Move X23, [X31+24]
	232 Move D9, [X31+64]
	233 Move D8, [X31+72]
	234 Return X0
	235 Call 0x1C17F20

Method: T GetPooled(UnityEngine.UIElements.IMouseEvent triggerEvent, UnityEngine.Vector2 mousePosition, System.Boolean recomputeTopElementUnderMouse)

Disassembly:
	0x031A1A90 LDR X24, [X20 + 0xB0]
	0x031A1A94 CBNZ W8, 0x31A1A9C
	0x031A1A98 BL 0x1C16DFC
	0x031A1A9C STR X22, [X31 + 0x18]
	0x031A1AA0 ADRP X28, 0xF7C000
	0x031A1AA4 LDR X28, [X28 + 0x960]
	0x031A1AA8 MOV X0, X24
	0x031A1AAC MOV X1, X31
	0x031A1AB0 MOV X2, X31
	0x031A1AB4 BL 0x3C354F8
	0x031A1AB8 TBZ X0, 0x0, 0x31A1AE4
	0x031A1ABC LDR X1, [X20 + 0xB0]
	0x031A1AC0 ADD X8, X31, 0xD0
	0x031A1AC4 MOV X0, X23
	0x031A1AC8 MOV X2, X31
	0x031A1ACC BL 0x36EB150
	0x031A1AD0 LDR V0, [X25]
	0x031A1AD4 LDR X8, [X31 + 0xE0]
	0x031A1AD8 ADD X9, X31, 0x229
	0x031A1ADC STUR V0, [X9 + 0xFF]
	0x031A1AE0 STR X8, [X31 + 0x338]
	0x031A1AE4 ADRP X22, 0xF7C000
	0x031A1AE8 ADRP X19, 0xF7C000
	0x031A1AEC LDR X22, [X22 + 0x940]
	0x031A1AF0 LDR X19, [X19 + 0x128]
	0x031A1AF4 ADD X24, X20, 0x8
	0x031A1AF8 ADD X0, X31, 0x1E0
	0x031A1AFC MOVZ W2, 0x88
	0x031A1B00 MOV X1, X24
	0x031A1B04 BL 0x3EB1AC0
	0x031A1B08 ADD X0, X31, 0x158
	0x031A1B0C MOVZ W2, 0x88
	0x031A1B10 MOV X1, X24
	0x031A1B14 BL 0x3EB1AC0
	0x031A1B18 ADD X25, X31, 0x268
	0x031A1B1C ADD X3, X25, 0x58
	0x031A1B20 ADD X2, X31, 0x158
	0x031A1B24 MOV X0, X23
	0x031A1B28 MOV X1, X27
	0x031A1B2C MOV X4, X31
	0x031A1B30 BL 0x36ECA3C
	0x031A1B34 ADD X0, X31, 0xD0
	0x031A1B38 ADD X1, X31, 0x1E0
	0x031A1B3C MOVZ W2, 0x88
	0x031A1B40 BL 0x3EB1AC0
	0x031A1B44 LDR X8, [X21 + 0x20]
	0x031A1B48 MOV X0, X20
	0x031A1B4C LDR X8, [X8 + 0xC0]
	0x031A1B50 LDR X1, [X8 + 0x48]
	0x031A1B54 BL 0x36EDCD4
	0x031A1B58 MOV X24, X0
	0x031A1B5C ADD X0, X31, 0x48
	0x031A1B60 ADD X1, X31, 0xD0
	0x031A1B64 MOVZ W2, 0x88
	0x031A1B68 ADD X25, X25, 0x68
	0x031A1B6C BL 0x3EB1AC0
	0x031A1B70 ADD X2, X31, 0x48
	0x031A1B74 MOV X0, X23
	0x031A1B78 MOV X1, X27
	0x031A1B7C MOV X3, X24
	0x031A1B80 MOV X4, X25
	0x031A1B84 MOV X5, X31
	0x031A1B88 STR X27, [X31 + 0x10]
	0x031A1B8C BL 0x36ECCCC
	0x031A1B90 LDR X0, [X28]
	0x031A1B94 LDR W8, [X0 + 0xE0]
	0x031A1B98 CBNZ W8, 0x31A1BA0
	0x031A1B9C BL 0x1C16DFC
	0x031A1BA0 ADRP X29, 0xF7E000
	0x031A1BA4 LDR X29, [X29 + 0x230]
	0x031A1BA8 LDR W24, [X31 + 0x1E0]
	0x031A1BAC LDR X4, [X22]
	0x031A1BB0 ADD X0, X31, 0x38
	0x031A1BB4 MOVZ W2, 0x4
	0x031A1BB8 MOV W1, W24
	0x031A1BBC MOV W3, W31
	0x031A1BC0 STP X31, X31, [X31 + 0x38]
	0x031A1BC4 BL 0x23DFA34
	0x031A1BC8 LDUR V0, [X31 + 0x38]
	0x031A1BCC LDR X4, [X19]
	0x031A1BD0 ADD X0, X31, 0x28
	0x031A1BD4 MOVZ W2, 0x4
	0x031A1BD8 MOV W1, W24
	0x031A1BDC MOV W3, W31
	0x031A1BE0 STUR V0, [X26 + 0x78]
	0x031A1BE4 STP X31, X31, [X31 + 0x28]
	0x031A1BE8 BL 0x23E51BC
	0x031A1BEC LDUR V0, [X31 + 0x28]
	0x031A1BF0 ADRP X25, 0xF53000

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x123B000
	009 Move W8, [X22+3604]
	010 Move X20, X2
	011 Move W19, W1
	012 Move V8, V1
	013 Move V9, V0
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xF7F000
	020 Move X0, [X0+544]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3604], W8
	024 Move X0, [X20+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Compare X21, 0
	033 JumpIfEqual {43}
	034 Move X1, [X8+120]
	035 Move X0, X21
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X30, [X31+16]
	041 Move D9, [X31+64]
	042 Move D8, [X31+72]
	043 Move X0, [X8+104]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, [X20+32]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move X8, [X0+192]
	062 Move X0, [X8+96]
	063 Call 0x2D0E6C4
	064 Compare X0, 0
	065 JumpIfEqual {119}
	066 Move X21, X0
	067 Move X0, [X20+32]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move [X21+136], S9
	075 Move [X21+144], S8
	076 Move X0, [X20+32]
	077 Move W8, [X0+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {83}
	082 Call 0x1C5D684
	083 Move [X21+144], S9
	084 Move [X21+152], S8
	085 Move X10, 0xF7F000
	086 Move X8, [X21]
	087 Move X10, [X10+544]
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Move X1, [X10]
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move W2, 3
	099 Move X0, X21
	100 Call 0x1C5D788
	101 Move W9, [X10]
	102 Add W9, W9, 3
	103 Add X8, X8, W9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X2, [X0+8]
	107 And W1, W19, 1
	108 Move X0, X21
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X0, X21
	111 Move X20, [X31+48]
	112 Move X19, [X31+56]
	113 Move X22, [X31+32]
	114 Move X21, [X31+40]
	115 Move X30, [X31+16]
	116 Move D9, [X31+64]
	117 Move D8, [X31+72]
	118 Return X0
	119 Call 0x1C17F20

Method: T GetPooled(UnityEngine.UIElements.IMouseEvent triggerEvent)

Disassembly:
	0x031A1BF4 LDR X25, [X25 + 0x5A8]
	0x031A1BF8 MOV X19, X31
	0x031A1BFC MOV X24, X31
	0x031A1C00 ADRP X27, 0x1237000
	0x031A1C04 STUR V0, [X26 + 0x88]
	0x031A1C08 MOVZ W22, 0x1
	0x031A1C0C LDR X0, [X28]
	0x031A1C10 LDR W8, [X0 + 0xE0]
	0x031A1C14 CBNZ W8, 0x31A1C1C
	0x031A1C18 BL 0x1C16DFC
	0x031A1C1C LDRSW X8, [X31 + 0x1E0]
	0x031A1C20 CMP X24, X8
	0x031A1C24 B.GE 0x31A1D60
	0x031A1C28 LDRB W8, [X20 + 0xBC]
	0x031A1C2C CBZ W8, 0x31A1D20
	0x031A1C30 LDR X0, [X20]
	0x031A1C34 CBZ X0, 0x31A1EDC
	0x031A1C38 MOV X1, X31
	0x031A1C3C BL 0x3C3DEB4
	0x031A1C40 LDR X8, [X21 + 0x20]
	0x031A1C44 MOV X0, X20
	0x031A1C48 MOV V8.16B, V0.16B
	0x031A1C4C MOV V9.16B, V1.16B
	0x031A1C50 LDR X8, [X8 + 0xC0]
	0x031A1C54 MOV V10.16B, V2.16B
	0x031A1C58 MOV V11.16B, V3.16B
	0x031A1C5C LDR X1, [X8 + 0x18]
	0x031A1C60 BL 0x36EDA3C
	0x031A1C64 MOV V4.16B, V0.16B
	0x031A1C68 MOV V5.16B, V1.16B
	0x031A1C6C MOV V6.16B, V2.16B
	0x031A1C70 MOV V0.16B, V8.16B
	0x031A1C74 MOV V1.16B, V9.16B
	0x031A1C78 MOV V2.16B, V10.16B
	0x031A1C7C MOV V3.16B, V11.16B
	0x031A1C80 MOV X0, X31
	0x031A1C84 BL 0x3C2A9FC
	0x031A1C88 LDR X0, [X28]
	0x031A1C8C MOV V9.16B, V0.16B
	0x031A1C90 MOV V10.16B, V1.16B
	0x031A1C94 MOV V14.16B, V2.16B
	0x031A1C98 LDR W8, [X0 + 0xE0]
	0x031A1C9C CBNZ W8, 0x31A1CA4
	0x031A1CA0 BL 0x1C16DFC
	0x031A1CA4 ADD X0, X31, 0x1E0
	0x031A1CA8 MOV W1, W24
	0x031A1CAC MOV X2, X31
	0x031A1CB0 BL 0x36ECB58
	0x031A1CB4 CBZ X0, 0x31A1EDC
	0x031A1CB8 MOV X1, X31
	0x031A1CBC BL 0x3C3F58C
	0x031A1CC0 LDR X0, [X20]
	0x031A1CC4 CBZ X0, 0x31A1EDC
	0x031A1CC8 MOV X1, X31
	0x031A1CCC MOV V11.16B, V0.16B
	0x031A1CD0 MOV V12.16B, V1.16B
	0x031A1CD4 MOV V13.16B, V2.16B
	0x031A1CD8 BL 0x3C3F58C
	0x031A1CDC LDR X0, [X29]
	0x031A1CE0 MOV V15.16B, V1.16B
	0x031A1CE4 MOV V8.16B, V2.16B
	0x031A1CE8 LDR W8, [X0 + 0xE0]
	0x031A1CEC CBNZ W8, 0x31A1CFC
	0x031A1CF0 STR S0, [X31 + 0x24]
	0x031A1CF4 BL 0x1C16DFC
	0x031A1CF8 LDR V0, [X31 + 0x24]
	0x031A1CFC FSUB S0, S11, S0
	0x031A1D00 FSUB S1, S12, S15
	0x031A1D04 FSUB S2, S13, S8
	0x031A1D08 MOV V3.16B, V9.16B
	0x031A1D0C MOV V4.16B, V10.16B
	0x031A1D10 MOV V5.16B, V14.16B
	0x031A1D14 MOV X0, X31
	0x031A1D18 BL 0x36E420C
	0x031A1D1C B 0x31A1D44
	0x031A1D20 LDRB W8, [X27 + 0x793]
	0x031A1D24 CBNZ W8, 0x31A1D34
	0x031A1D28 MOV X0, X25
	0x031A1D2C BL 0x1C16CF4
	0x031A1D30 STRB W22, [X27 + 0x793]
	0x031A1D34 LDR X8, [X25]
	0x031A1D38 LDR X8, [X8 + 0xB8]
	0x031A1D3C LDP S0, S1, [X8]
	0x031A1D40 LDP S2, S3, [X8 + 0x8]
	0x031A1D44 LDR X8, [X31 + 0x2E0]
	0x031A1D48 ADD X24, X24, 0x1
	0x031A1D4C ADD X8, X8, X19
	0x031A1D50 ADD X19, X19, 0x10
	0x031A1D54 STP S0, S1, [X8]
	0x031A1D58 STP S2, S3, [X8 + 0x8]
	0x031A1D5C B 0x31A1C0C
	0x031A1D60 LDR X8, [X21 + 0x20]
	0x031A1D64 MOV X0, X20
	0x031A1D68 LDR X8, [X8 + 0xC0]
	0x031A1D6C LDR X1, [X8 + 0x58]
	0x031A1D70 BL 0x36EDC54
	0x031A1D74 LDR X19, [X31 + 0x10]
	0x031A1D78 MOV X2, X0
	0x031A1D7C MOV X0, X23
	0x031A1D80 MOV X3, X31
	0x031A1D84 MOV X1, X19
	0x031A1D88 BL 0x36E515C
	0x031A1D8C STUR X0, [X26 + 0xE4]
	0x031A1D90 STUR X1, [X26 + 0xEC]
	0x031A1D94 LDR X8, [X21 + 0x20]
	0x031A1D98 MOV X0, X20
	0x031A1D9C LDR X8, [X8 + 0xC0]
	0x031A1DA0 LDR X1, [X8 + 0x60]
	0x031A1DA4 BL 0x36EDC94
	0x031A1DA8 MOV X2, X0
	0x031A1DAC MOV X0, X23
	0x031A1DB0 MOV X1, X19
	0x031A1DB4 MOV X3, X31
	0x031A1DB8 BL 0x36E515C
	0x031A1DBC STUR X0, [X26 + 0xF4]
	0x031A1DC0 STUR X1, [X26 + 0xFC]
	0x031A1DC4 LDR X8, [X21 + 0x20]
	0x031A1DC8 MOV X0, X20
	0x031A1DCC LDR X8, [X8 + 0xC0]
	0x031A1DD0 LDR X1, [X8 + 0x68]
	0x031A1DD4 BL 0x36EDC14
	0x031A1DD8 MOV X2, X0
	0x031A1DDC ADD X8, X31, 0xD0
	0x031A1DE0 MOV X0, X23
	0x031A1DE4 MOV X1, X19
	0x031A1DE8 MOV X3, X31
	0x031A1DEC BL 0x36E54DC
	0x031A1DF0 ADD X8, X31, 0xD0
	0x031A1DF4 LDP V0, V1, [X8]
	0x031A1DF8 LDR V2, [X8 + 0x2]
	0x031A1DFC MOV X0, X20
	0x031A1E00 STUR V0, [X26 + 0x24]
	0x031A1E04 STUR V1, [X26 + 0x34]
	0x031A1E08 STUR V2, [X26 + 0x44]
	0x031A1E0C LDR X8, [X21 + 0x20]
	0x031A1E10 LDR X8, [X8 + 0xC0]
	0x031A1E14 LDR X1, [X8 + 0x70]
	0x031A1E18 BL 0x36EDA00
	0x031A1E1C ADRP X8, 0xF5B000
	0x031A1E20 LDR X8, [X8 + 0x9E8]
	0x031A1E24 MOV W22, W0
	0x031A1E28 LDR X8, [X8]
	0x031A1E2C LDR W9, [X8 + 0xE0]
	0x031A1E30 CBNZ W9, 0x31A1E3C
	0x031A1E34 MOV X0, X8
	0x031A1E38 BL 0x1C16DFC
	0x031A1E3C AND W0, W22, 0x1
	0x031A1E40 MOV X1, X31
	0x031A1E44 BL 0x33184A4
	0x031A1E48 LDR X8, [X21 + 0x20]
	0x031A1E4C MOV X0, X20
	0x031A1E50 MOV V8.16B, V0.16B
	0x031A1E54 LDR X8, [X8 + 0xC0]
	0x031A1E58 LDR X1, [X8 + 0x78]
	0x031A1E5C BL 0x36EDA14
	0x031A1E60 AND W0, W0, 0x1
	0x031A1E64 MOV X1, X31
	0x031A1E68 BL 0x33184A4
	0x031A1E6C LDR X8, [X21 + 0x20]
	0x031A1E70 MOV X0, X20
	0x031A1E74 MOV V9.16B, V0.16B
	0x031A1E78 LDR X8, [X8 + 0xC0]
	0x031A1E7C LDR X1, [X8 + 0x80]
	0x031A1E80 BL 0x36EDA28
	0x031A1E84 AND W0, W0, 0x1
	0x031A1E88 MOV X1, X31
	0x031A1E8C BL 0x33184A4
	0x031A1E90 LDR X0, [X31 + 0x18]
	0x031A1E94 ADD X1, X31, 0x268
	0x031A1E98 MOVZ W2, 0x118
	0x031A1E9C STR S8, [X31 + 0x340]
	0x031A1EA0 STR S9, [X31 + 0x344]
	0x031A1EA4 STR S0, [X31 + 0x348]
	0x031A1EA8 BL 0x3EB1AC0
	0x031A1EAC ADD X31, X31, 0x380
	0x031A1EB0 LDP X20, X19, [X31 + 0x90]
	0x031A1EB4 LDP X22, X21, [X31 + 0x80]
	0x031A1EB8 LDP X24, X23, [X31 + 0x70]
	0x031A1EBC LDP X26, X25, [X31 + 0x60]
	0x031A1EC0 LDP X28, X27, [X31 + 0x50]
	0x031A1EC4 LDP X29, X30, [X31 + 0x40]
	0x031A1EC8 LDP D9, D8, [X31 + 0x30]
	0x031A1ECC LDP D11, D10, [X31 + 0x20]
	0x031A1ED0 LDP D13, D12, [X31 + 0x10]
	0x031A1ED4 LDP D15, D14, [X31], #0xA0
	0x031A1ED8 RET
	0x031A1EDC BL 0x1C16F20
	0x031A1EE0 STR X30, [X31 - 0x40]!
	0x031A1EE4 STP X24, X23, [X31 + 0x10]
	0x031A1EE8 STP X22, X21, [X31 + 0x20]
	0x031A1EEC STP X20, X19, [X31 + 0x30]
	0x031A1EF0 ADRP X24, 0x123A000
	0x031A1EF4 ADRP X23, 0xF7E000
	0x031A1EF8 ADRP X22, 0xF7C000
	0x031A1EFC ADRP X21, 0xF7C000
	0x031A1F00 ADRP X20, 0xF7C000
	0x031A1F04 LDRB W8, [X24 + 0xE18]
	0x031A1F08 LDR X23, [X23 + 0x238]
	0x031A1F0C LDR X22, [X22 + 0x150]
	0x031A1F10 LDR X21, [X21 + 0x958]
	0x031A1F14 LDR X20, [X20 + 0x158]
	0x031A1F18 MOV X19, X1
	0x031A1F1C TBNZ X8, 0x0, 0x31A1F58
	0x031A1F20 ADRP X0, 0xF7C000
	0x031A1F24 LDR X0, [X0 + 0x150]
	0x031A1F28 BL 0x1C16CF4
	0x031A1F2C ADRP X0, 0xF7C000
	0x031A1F30 LDR X0, [X0 + 0x958]
	0x031A1F34 BL 0x1C16CF4
	0x031A1F38 ADRP X0, 0xF7E000
	0x031A1F3C LDR X0, [X0 + 0x238]
	0x031A1F40 BL 0x1C16CF4
	0x031A1F44 ADRP X0, 0xF7C000
	0x031A1F48 LDR X0, [X0 + 0x158]
	0x031A1F4C BL 0x1C16CF4
	0x031A1F50 MOVZ W8, 0x1
	0x031A1F54 STRB W8, [X24 + 0xE18]
	0x031A1F58 LDR X1, [X23]
	0x031A1F5C ADD X0, X19, 0x58
	0x031A1F60 BL 0x23E0B48
	0x031A1F64 LDR X1, [X22]
	0x031A1F68 ADD X0, X19, 0x68
	0x031A1F6C BL 0x23DEE00
	0x031A1F70 LDR X1, [X21]
	0x031A1F74 ADD X0, X19, 0x78
	0x031A1F78 BL 0x23DFC88
	0x031A1F7C LDR X1, [X20]
	0x031A1F80 ADD X0, X19, 0x88
	0x031A1F84 LDP X20, X19, [X31 + 0x30]
	0x031A1F88 LDP X22, X21, [X31 + 0x20]
	0x031A1F8C LDP X24, X23, [X31 + 0x10]
	0x031A1F90 LDR X30, [X31], #0x40
	0x031A1F94 B 0x23E53EC
	0x031A1F98 LDR X8, [X1 + 0x20]
	0x031A1F9C LDR X8, [X8 + 0xC0]
	0x031A1FA0 LDR X1, [X8 + 0x88]
	0x031A1FA4 B 0x2B84440
	0x031A1FA8 STP D15, D14, [X31 - 0xA0]!
	0x031A1FAC STP D13, D12, [X31 + 0x10]
	0x031A1FB0 STP D11, D10, [X31 + 0x20]
	0x031A1FB4 STP D9, D8, [X31 + 0x30]
	0x031A1FB8 STP X29, X30, [X31 + 0x40]
	0x031A1FBC STP X28, X27, [X31 + 0x50]
	0x031A1FC0 STP X26, X25, [X31 + 0x60]
	0x031A1FC4 STP X24, X23, [X31 + 0x70]
	0x031A1FC8 STP X22, X21, [X31 + 0x80]
	0x031A1FCC STP X20, X19, [X31 + 0x90]
	0x031A1FD0 ADD X29, X31, 0x40
	0x031A1FD4 SUB X31, X31, 0x490
	0x031A1FD8 ADD X19, X31, 0x0
	0x031A1FDC STR X3, [X19 + 0x78]
	0x031A1FE0 MRS X9, 0xC000
	0x031A1FE4 STR X9, [X19 + 0x40]
	0x031A1FE8 LDR X9, [X9 + 0x28]
	0x031A1FEC ADRP X20, 0x123A000
	0x031A1FF0 MOV X22, X4
	0x031A1FF4 MOV X21, X2
	0x031A1FF8 STUR X9, [X29 - 0x50]
	0x031A1FFC LDRB W9, [X20 + 0xE19]
	0x031A2000 MOV X23, X1
	0x031A2004 STR X8, [X19 + 0x38]
	0x031A2008 TBNZ X9, 0x0, 0x31A205C
	0x031A200C ADRP X0, 0xF5A000
	0x031A2010 LDR X0, [X0 + 0x9E8]
	0x031A2014 BL 0x1C16CF4
	0x031A2018 ADRP X0, 0xF7B000
	0x031A201C LDR X0, [X0 + 0x128]
	0x031A2020 BL 0x1C16CF4
	0x031A2024 ADRP X0, 0xF7B000
	0x031A2028 LDR X0, [X0 + 0x940]
	0x031A202C BL 0x1C16CF4
	0x031A2030 ADRP X0, 0xF51000
	0x031A2034 LDR X0, [X0 + 0x598]
	0x031A2038 BL 0x1C16CF4
	0x031A203C ADRP X0, 0xF7D000
	0x031A2040 LDR X0, [X0 + 0x230]
	0x031A2044 BL 0x1C16CF4
	0x031A2048 ADRP X0, 0xF7B000
	0x031A204C LDR X0, [X0 + 0x960]
	0x031A2050 BL 0x1C16CF4
	0x031A2054 MOVZ W8, 0x1
	0x031A2058 STRB W8, [X20 + 0xE19]
	0x031A205C LDR X24, [X22 + 0x20]!
	0x031A2060 STR X23, [X19 + 0x70]
	0x031A2064 LDR X8, [X24 + 0xC0]
	0x031A2068 LDR X8, [X8 + 0x8]
	0x031A206C ADD X9, X8, 0x135
	0x031A2070 LDRH W9, [X9]
	0x031A2074 TBNZ X9, 0x0, 0x31A2098
	0x031A2078 MOV X0, X8
	0x031A207C BL 0x1C5C684
	0x031A2080 LDR X24, [X22]
	0x031A2084 LDR X8, [X24 + 0xC0]
	0x031A2088 LDR X8, [X8 + 0x8]
	0x031A208C ADD X9, X8, 0x135
	0x031A2090 LDRH W9, [X9]
	0x031A2094 B 0x31A209C
	0x031A2098 MOV X0, X8
	0x031A209C LDR W10, [X0 + 0xFC]
	0x031A20A0 ADD X11, X31, 0x0
	0x031A20A4 ADD W10, W10, 0x10
	0x031A20A8 ADD X10, X10, 0xF
	0x031A20AC AND X10, X10, 0x1FFFFFFFF
	0x031A20B0 SUB X28, X11, X10
	0x031A20B4 ADD X31, X28, 0x0
	0x031A20B8 TBNZ X9, 0x0, 0x31A20DC
	0x031A20BC MOV X0, X8
	0x031A20C0 BL 0x1C5C684
	0x031A20C4 LDR X24, [X22]
	0x031A20C8 LDR X8, [X24 + 0xC0]
	0x031A20CC LDR X8, [X8 + 0x8]
	0x031A20D0 ADD X9, X8, 0x135
	0x031A20D4 LDRH W9, [X9]
	0x031A20D8 B 0x31A20E0
	0x031A20DC MOV X0, X8
	0x031A20E0 LDR W10, [X0 + 0xFC]
	0x031A20E4 ADD X11, X31, 0x0
	0x031A20E8 ADD W10, W10, 0x10
	0x031A20EC ADD X10, X10, 0xF
	0x031A20F0 AND X10, X10, 0x1FFFFFFFF
	0x031A20F4 SUB X23, X11, X10
	0x031A20F8 ADD X31, X23, 0x0
	0x031A20FC TBNZ X9, 0x0, 0x31A2120
	0x031A2100 MOV X0, X8
	0x031A2104 BL 0x1C5C684
	0x031A2108 LDR X24, [X22]
	0x031A210C LDR X8, [X24 + 0xC0]
	0x031A2110 LDR X8, [X8 + 0x8]
	0x031A2114 ADD X9, X8, 0x135
	0x031A2118 LDRH W9, [X9]
	0x031A211C B 0x31A2124
	0x031A2120 MOV X0, X8
	0x031A2124 LDR W10, [X0 + 0xFC]
	0x031A2128 ADD X11, X31, 0x0
	0x031A212C ADD W10, W10, 0x10
	0x031A2130 ADD X10, X10, 0xF
	0x031A2134 AND X10, X10, 0x1FFFFFFFF
	0x031A2138 SUB X10, X11, X10
	0x031A213C ADD X31, X10, 0x0
	0x031A2140 STR X10, [X19 + 0x48]
	0x031A2144 TBNZ X9, 0x0, 0x31A2168
	0x031A2148 MOV X0, X8
	0x031A214C BL 0x1C5C684
	0x031A2150 LDR X24, [X22]
	0x031A2154 LDR X8, [X24 + 0xC0]
	0x031A2158 LDR X8, [X8 + 0x8]
	0x031A215C ADD X9, X8, 0x135
	0x031A2160 LDRH W9, [X9]
	0x031A2164 B 0x31A216C
	0x031A2168 MOV X0, X8
	0x031A216C LDR W10, [X0 + 0xFC]
	0x031A2170 ADD X11, X31, 0x0
	0x031A2174 ADD W10, W10, 0x10
	0x031A2178 ADD X10, X10, 0xF
	0x031A217C AND X10, X10, 0x1FFFFFFFF
	0x031A2180 SUB X10, X11, X10

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0x123B000
	010 Move W8, [X19+3605]
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xF7F000
	018 Move X0, [X0+552]
	019 Call 0x1C17CF4
	020 Move X0, 0xF7F000
	021 Move X0, [X0+544]
	022 Call 0x1C17CF4
	023 Move X0, 0xF7E000
	024 Move X0, [X0+3376]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+3605], W8
	028 Move X0, [X21+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X0, [X8+104]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfEqual {48}
	046 Compare X20, 0
	047 JumpIfNotEqual {51}
	048 Call 0x1C17DFC
	049 Compare X20, 0
	050 JumpIfEqual {58}
	051 Move X8, 0xF7F000
	052 Move X8, [X8+552]
	053 Move X9, [X20]
	054 Move X8, [X8]
	055 Move W11, [X9+304]
	056 Move W10, [X8+304]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X19, X31
	059 Move X9, [X9+200]
	060 Add X9, X9, X10
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CSEL not yet implemented."
	064 Move X0, [X21+32]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Move X8, [X0+192]
	072 Move X0, X19
	073 Move X1, [X8+136]
	074 Call 0x2D0E79C, X0
	075 Move X19, X0
	076 Compare X20, 0
	077 JumpIfEqual {383}
	078 Move X23, 0xF7E000
	079 Move X8, [X20]
	080 Move X23, [X23+3376]
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Move X1, [X23]
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move X0, X20
	092 Move W2, W31
	093 Call 0x1C5D788
	094 NotImplemented "Instruction LDRSW not yet implemented."
	095 Add X8, X8, X9
	096 Add X0, X8, 312
	097 Move X8, [X0]
	098 Move X1, [X0+8]
	099 Move X0, X20
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Compare X19, 0
	102 JumpIfEqual {393}
	103 Move W22, W0
	104 Move X0, [X21+32]
	105 Move W8, [X0+309]
	106 Move TEMP, X8
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {111}
	110 Call 0x1C5D684
	111 Move [X19+132], W22
	112 Move X8, [X20]
	113 Move X1, [X23]
	114 NotImplemented "Instruction LDRH not yet implemented."
	115 Compare X9, 0
	116 JumpIfEqual {123}
	117 Move X10, [X8+176]
	118 Add X10, X10, 8
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Subtract X9, X9, 1
	122 Add X10, X10, 16
	123 Move W2, 1
	124 Move X0, X20
	125 Call 0x1C5D788
	126 Move W9, [X10]
	127 Add W9, W9, 1
	128 Add X8, X8, W9
	129 Add X0, X8, 312
	130 Move X8, [X0]
	131 Move X1, [X0+8]
	132 Move X0, X20
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move X0, [X21+32]
	135 Move V8, V0
	136 Move V9, V1
	137 Move W8, [X0+309]
	138 Move TEMP, X8
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {143}
	142 Call 0x1C5D684
	143 Move [X19+136], S8
	144 Move [X19+144], S9
	145 Move X8, [X20]
	146 Move X1, [X23]
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move W2, 1
	157 Move X0, X20
	158 Call 0x1C5D788
	159 Move W9, [X10]
	160 Add W9, W9, 1
	161 Add X8, X8, W9
	162 Add X0, X8, 312
	163 Move X8, [X0]
	164 Move X1, [X0+8]
	165 Move X0, X20
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move X0, [X21+32]
	168 Move V8, V0
	169 Move V9, V1
	170 Move W8, [X0+309]
	171 Move TEMP, X8
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfEqual {176}
	175 Call 0x1C5D684
	176 Move [X19+144], S8
	177 Move [X19+152], S9
	178 Move X8, [X20]
	179 Move X1, [X23]
	180 NotImplemented "Instruction LDRH not yet implemented."
	181 Compare X9, 0
	182 JumpIfEqual {189}
	183 Move X10, [X8+176]
	184 Add X10, X10, 8
	185 NotImplemented "Instruction LDUR not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Subtract X9, X9, 1
	188 Add X10, X10, 16
	189 Move W2, 3
	190 Move X0, X20
	191 Call 0x1C5D788
	192 Move W9, [X10]
	193 Add W9, W9, 3
	194 Add X8, X8, W9
	195 Add X0, X8, 312
	196 Move X8, [X0]
	197 Move X1, [X0+8]
	198 Move X0, X20
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move X0, [X21+32]
	201 Move V8, V0
	202 Move V9, V1
	203 Move W8, [X0+309]
	204 Move TEMP, X8
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfEqual {209}
	208 Call 0x1C5D684
	209 Move [X19+152], S8
	210 Move [X19+160], S9
	211 Move X8, [X20]
	212 Move X1, [X23]
	213 NotImplemented "Instruction LDRH not yet implemented."
	214 Compare X9, 0
	215 JumpIfEqual {222}
	216 Move X10, [X8+176]
	217 Add X10, X10, 8
	218 NotImplemented "Instruction LDUR not yet implemented."
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Subtract X9, X9, 1
	221 Add X10, X10, 16
	222 Move W2, 5
	223 Move X0, X20
	224 Call 0x1C5D788
	225 Move W9, [X10]
	226 Add W9, W9, 5
	227 Add X8, X8, W9
	228 Add X0, X8, 312
	229 Move X8, [X0]
	230 Move X1, [X0+8]
	231 Move X0, X20
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Move X8, [X21+32]
	234 Move W22, W0
	235 Move W9, [X8+309]
	236 Move TEMP, X9
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfEqual {242}
	240 Move X0, X8
	241 Call 0x1C5D684
	242 Move [X19+164], W22
	243 Move X8, [X20]
	244 Move X1, [X23]
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 Compare X9, 0
	247 JumpIfEqual {254}
	248 Move X10, [X8+176]
	249 Add X10, X10, 8
	250 NotImplemented "Instruction LDUR not yet implemented."
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Subtract X9, X9, 1
	253 Add X10, X10, 16
	254 Move W2, 6
	255 Move X0, X20
	256 Call 0x1C5D788
	257 Move W9, [X10]
	258 Add W9, W9, 6
	259 Add X8, X8, W9
	260 Add X0, X8, 312
	261 Move X8, [X0]
	262 Move X1, [X0+8]
	263 Move X0, X20
	264 NotImplemented "Instruction BLR not yet implemented."
	265 Move X8, [X21+32]
	266 Move W22, W0
	267 Move W9, [X8+309]
	268 Move TEMP, X9
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfEqual {274}
	272 Move X0, X8
	273 Call 0x1C5D684
	274 Move [X19+168], W22
	275 Move X8, [X20]
	276 Move X1, [X23]
	277 NotImplemented "Instruction LDRH not yet implemented."
	278 Compare X9, 0
	279 JumpIfEqual {286}
	280 Move X10, [X8+176]
	281 Add X10, X10, 8
	282 NotImplemented "Instruction LDUR not yet implemented."
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Subtract X9, X9, 1
	285 Add X10, X10, 16
	286 Move W2, 4
	287 Move X0, X20
	288 Call 0x1C5D788
	289 Move W9, [X10]
	290 Add W9, W9, 4
	291 Add X8, X8, W9
	292 Add X0, X8, 312
	293 Move X8, [X0]
	294 Move X1, [X0+8]
	295 Move X22, 0xF7E000
	296 Move X22, [X22+544]
	297 Move X0, X20
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Move X8, [X21+32]
	300 Move W21, W0
	301 Move W9, [X8+309]
	302 Move TEMP, X9
	303 And TEMP, TEMP, 1
	304 Compare TEMP, 1
	305 JumpIfEqual {308}
	306 Move X0, X8
	307 Call 0x1C5D684
	308 Move [X19+160], W21
	309 Move X1, [X22]
	310 Move X0, X20
	311 Call 0x1C17E00
	312 Compare X0, 0
	313 JumpIfEqual {383}
	314 Move X8, [X0]
	315 Move X1, [X22]
	316 Move X20, X0
	317 NotImplemented "Instruction LDRH not yet implemented."
	318 Compare X9, 0
	319 JumpIfEqual {326}
	320 Move X10, [X8+176]
	321 Add X10, X10, 8
	322 NotImplemented "Instruction LDUR not yet implemented."
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Subtract X9, X9, 1
	325 Add X10, X10, 16
	326 Move X0, X20
	327 Move W2, W31
	328 Call 0x1C5D788
	329 NotImplemented "Instruction LDRSW not yet implemented."
	330 Add X8, X8, X9
	331 Add X0, X8, 312
	332 Move X8, [X0]
	333 Move X1, [X0+8]
	334 Move X0, X20
	335 NotImplemented "Instruction BLR not yet implemented."
	336 Move X8, [X19]
	337 Move X1, [X22]
	338 Move W20, W0
	339 NotImplemented "Instruction LDRH not yet implemented."
	340 Compare X9, 0
	341 JumpIfEqual {348}
	342 Move X10, [X8+176]
	343 Add X10, X10, 8
	344 NotImplemented "Instruction LDUR not yet implemented."
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Subtract X9, X9, 1
	347 Add X10, X10, 16
	348 Move W2, 1
	349 Move X0, X19
	350 Call 0x1C5D788
	351 Move W9, [X10]
	352 Add W9, W9, 1
	353 Add X8, X8, W9
	354 Add X0, X8, 312
	355 Move X8, [X0]
	356 Move X2, [X0+8]
	357 And W1, W20, 1
	358 Move X0, X19
	359 NotImplemented "Instruction BLR not yet implemented."
	360 Move X8, [X19]
	361 Move X1, [X22]
	362 NotImplemented "Instruction LDRH not yet implemented."
	363 Compare X9, 0
	364 JumpIfEqual {371}
	365 Move X10, [X8+176]
	366 Add X10, X10, 8
	367 NotImplemented "Instruction LDUR not yet implemented."
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Subtract X9, X9, 1
	370 Add X10, X10, 16
	371 Move W2, 3
	372 Move X0, X19
	373 Call 0x1C5D788
	374 Move W9, [X10]
	375 Add W9, W9, 3
	376 Add X8, X8, W9
	377 Add X0, X8, 312
	378 Move X8, [X0]
	379 Move X2, [X0+8]
	380 Move X0, X19
	381 Move W1, W31
	382 NotImplemented "Instruction BLR not yet implemented."
	383 Move X0, X19
	384 Move X20, [X31+48]
	385 Move X19, [X31+56]
	386 Move X22, [X31+32]
	387 Move X21, [X31+40]
	388 Move X30, [X31+16]
	389 Move X23, [X31+24]
	390 Move D9, [X31+64]
	391 Move D8, [X31+72]
	392 Return X0
	393 Call 0x1C17F20

Method: T GetPooled(UnityEngine.UIElements.IPointerEvent pointerEvent)

Disassembly:
	0x031A2184 ADD X31, X10, 0x0
	0x031A2188 STR X10, [X19 + 0x50]
	0x031A218C TBNZ X9, 0x0, 0x31A21B0
	0x031A2190 MOV X0, X8
	0x031A2194 BL 0x1C5C684
	0x031A2198 LDR X24, [X22]
	0x031A219C LDR X8, [X24 + 0xC0]
	0x031A21A0 LDR X8, [X8 + 0x8]
	0x031A21A4 ADD X9, X8, 0x135
	0x031A21A8 LDRH W9, [X9]
	0x031A21AC B 0x31A21B4
	0x031A21B0 MOV X0, X8
	0x031A21B4 LDR W10, [X0 + 0xFC]
	0x031A21B8 ADD X11, X31, 0x0
	0x031A21BC ADD W10, W10, 0x10
	0x031A21C0 ADD X10, X10, 0xF
	0x031A21C4 AND X10, X10, 0x1FFFFFFFF
	0x031A21C8 SUB X10, X11, X10
	0x031A21CC ADD X31, X10, 0x0
	0x031A21D0 STR X10, [X19 + 0x58]
	0x031A21D4 TBNZ X9, 0x0, 0x31A21F8
	0x031A21D8 MOV X0, X8
	0x031A21DC BL 0x1C5C684
	0x031A21E0 LDR X24, [X22]
	0x031A21E4 LDR X8, [X24 + 0xC0]
	0x031A21E8 LDR X8, [X8 + 0x8]
	0x031A21EC ADD X9, X8, 0x135
	0x031A21F0 LDRH W9, [X9]
	0x031A21F4 B 0x31A21FC
	0x031A21F8 MOV X0, X8
	0x031A21FC LDR W10, [X0 + 0xFC]
	0x031A2200 ADD X11, X31, 0x0
	0x031A2204 ADD W10, W10, 0x10
	0x031A2208 ADD X10, X10, 0xF
	0x031A220C AND X10, X10, 0x1FFFFFFFF
	0x031A2210 SUB X10, X11, X10
	0x031A2214 ADD X31, X10, 0x0
	0x031A2218 STR X10, [X19 + 0x60]
	0x031A221C TBNZ X9, 0x0, 0x31A2240
	0x031A2220 MOV X0, X8
	0x031A2224 BL 0x1C5C684
	0x031A2228 LDR X24, [X22]
	0x031A222C LDR X8, [X24 + 0xC0]
	0x031A2230 LDR X8, [X8 + 0x8]
	0x031A2234 ADD X9, X8, 0x135
	0x031A2238 LDRH W9, [X9]
	0x031A223C B 0x31A2244
	0x031A2240 MOV X0, X8
	0x031A2244 LDR W10, [X0 + 0xFC]
	0x031A2248 ADD X11, X31, 0x0
	0x031A224C ADD W10, W10, 0x10
	0x031A2250 ADD X10, X10, 0xF
	0x031A2254 AND X10, X10, 0x1FFFFFFFF
	0x031A2258 SUB X26, X11, X10
	0x031A225C ADD X31, X26, 0x0
	0x031A2260 TBNZ X9, 0x0, 0x31A2284
	0x031A2264 MOV X0, X8
	0x031A2268 BL 0x1C5C684
	0x031A226C LDR X24, [X22]
	0x031A2270 LDR X8, [X24 + 0xC0]
	0x031A2274 LDR X8, [X8 + 0x8]
	0x031A2278 ADD X9, X8, 0x135
	0x031A227C LDRH W9, [X9]
	0x031A2280 B 0x31A2288
	0x031A2284 MOV X0, X8
	0x031A2288 LDR W10, [X0 + 0xFC]
	0x031A228C ADD X11, X31, 0x0
	0x031A2290 ADD W10, W10, 0x10
	0x031A2294 ADD X10, X10, 0xF
	0x031A2298 AND X10, X10, 0x1FFFFFFFF
	0x031A229C SUB X10, X11, X10
	0x031A22A0 ADD X31, X10, 0x0
	0x031A22A4 STR X10, [X19]
	0x031A22A8 TBNZ X9, 0x0, 0x31A22CC
	0x031A22AC MOV X0, X8
	0x031A22B0 BL 0x1C5C684
	0x031A22B4 LDR X24, [X22]
	0x031A22B8 LDR X8, [X24 + 0xC0]
	0x031A22BC LDR X8, [X8 + 0x8]
	0x031A22C0 ADD X9, X8, 0x135
	0x031A22C4 LDRH W9, [X9]
	0x031A22C8 B 0x31A22D0
	0x031A22CC MOV X0, X8
	0x031A22D0 LDR W10, [X0 + 0xFC]
	0x031A22D4 ADD X11, X31, 0x0
	0x031A22D8 ADD W10, W10, 0x10
	0x031A22DC ADD X10, X10, 0xF
	0x031A22E0 AND X10, X10, 0x1FFFFFFFF
	0x031A22E4 SUB X10, X11, X10
	0x031A22E8 ADD X31, X10, 0x0
	0x031A22EC STR X10, [X19 + 0x68]
	0x031A22F0 TBNZ X9, 0x0, 0x31A2314
	0x031A22F4 MOV X0, X8
	0x031A22F8 BL 0x1C5C684
	0x031A22FC LDR X24, [X22]
	0x031A2300 LDR X8, [X24 + 0xC0]
	0x031A2304 LDR X8, [X8 + 0x8]
	0x031A2308 ADD X9, X8, 0x135
	0x031A230C LDRH W9, [X9]
	0x031A2310 B 0x31A2318
	0x031A2314 MOV X0, X8
	0x031A2318 LDR W10, [X0 + 0xFC]
	0x031A231C ADD X11, X31, 0x0
	0x031A2320 ADD W10, W10, 0x10
	0x031A2324 ADD X10, X10, 0xF
	0x031A2328 AND X10, X10, 0x1FFFFFFFF
	0x031A232C SUB X10, X11, X10
	0x031A2330 ADD X31, X10, 0x0
	0x031A2334 STR X10, [X19 + 0x98]
	0x031A2338 TBNZ X9, 0x0, 0x31A235C
	0x031A233C MOV X0, X8
	0x031A2340 BL 0x1C5C684
	0x031A2344 LDR X24, [X22]
	0x031A2348 LDR X8, [X24 + 0xC0]
	0x031A234C LDR X8, [X8 + 0x8]
	0x031A2350 ADD X9, X8, 0x135
	0x031A2354 LDRH W9, [X9]
	0x031A2358 B 0x31A2360
	0x031A235C MOV X0, X8
	0x031A2360 LDR W10, [X0 + 0xFC]
	0x031A2364 ADD X11, X31, 0x0
	0x031A2368 ADD W10, W10, 0x10
	0x031A236C ADD X10, X10, 0xF
	0x031A2370 AND X10, X10, 0x1FFFFFFFF
	0x031A2374 SUB X25, X11, X10
	0x031A2378 ADD X31, X25, 0x0
	0x031A237C TBNZ X9, 0x0, 0x31A23A0
	0x031A2380 MOV X0, X8
	0x031A2384 BL 0x1C5C684
	0x031A2388 LDR X24, [X22]
	0x031A238C LDR X8, [X24 + 0xC0]
	0x031A2390 LDR X8, [X8 + 0x8]
	0x031A2394 ADD X9, X8, 0x135
	0x031A2398 LDRH W9, [X9]
	0x031A239C B 0x31A23A4
	0x031A23A0 MOV X0, X8
	0x031A23A4 LDR W10, [X0 + 0xFC]
	0x031A23A8 ADD X11, X31, 0x0
	0x031A23AC ADD W10, W10, 0x10
	0x031A23B0 ADD X10, X10, 0xF
	0x031A23B4 AND X10, X10, 0x1FFFFFFFF
	0x031A23B8 SUB X10, X11, X10
	0x031A23BC STR X10, [X19 + 0x90]
	0x031A23C0 ADD X31, X10, 0x0
	0x031A23C4 TBNZ X9, 0x0, 0x31A23E8
	0x031A23C8 MOV X0, X8
	0x031A23CC BL 0x1C5C684
	0x031A23D0 LDR X24, [X22]
	0x031A23D4 LDR X8, [X24 + 0xC0]
	0x031A23D8 LDR X8, [X8 + 0x8]
	0x031A23DC ADD X9, X8, 0x135
	0x031A23E0 LDRH W9, [X9]
	0x031A23E4 B 0x31A23EC
	0x031A23E8 MOV X0, X8
	0x031A23EC LDR W10, [X0 + 0xFC]
	0x031A23F0 ADD X11, X31, 0x0
	0x031A23F4 ADD W10, W10, 0x10
	0x031A23F8 ADD X10, X10, 0xF
	0x031A23FC AND X10, X10, 0x1FFFFFFFF
	0x031A2400 SUB X10, X11, X10
	0x031A2404 STR X10, [X19 + 0x88]
	0x031A2408 ADD X31, X10, 0x0
	0x031A240C TBNZ X9, 0x0, 0x31A2430
	0x031A2410 MOV X0, X8
	0x031A2414 BL 0x1C5C684
	0x031A2418 LDR X24, [X22]
	0x031A241C LDR X8, [X24 + 0xC0]
	0x031A2420 LDR X8, [X8 + 0x8]
	0x031A2424 ADD X9, X8, 0x135
	0x031A2428 LDRH W9, [X9]
	0x031A242C B 0x31A2434
	0x031A2430 MOV X0, X8
	0x031A2434 LDR W10, [X0 + 0xFC]
	0x031A2438 ADD X11, X31, 0x0
	0x031A243C ADD W10, W10, 0x10
	0x031A2440 ADD X10, X10, 0xF
	0x031A2444 AND X10, X10, 0x1FFFFFFFF
	0x031A2448 SUB X10, X11, X10
	0x031A244C STR X10, [X19 + 0x80]
	0x031A2450 ADD X31, X10, 0x0
	0x031A2454 TBNZ X9, 0x0, 0x31A2478
	0x031A2458 MOV X0, X8
	0x031A245C BL 0x1C5C684
	0x031A2460 LDR X24, [X22]
	0x031A2464 LDR X8, [X24 + 0xC0]
	0x031A2468 LDR X8, [X8 + 0x8]
	0x031A246C ADD X9, X8, 0x135
	0x031A2470 LDRH W9, [X9]
	0x031A2474 B 0x31A247C
	0x031A2478 MOV X0, X8
	0x031A247C LDR W10, [X0 + 0xFC]
	0x031A2480 ADD X11, X31, 0x0
	0x031A2484 ADD W10, W10, 0x10
	0x031A2488 ADD X10, X10, 0xF
	0x031A248C AND X10, X10, 0x1FFFFFFFF
	0x031A2490 SUB X10, X11, X10
	0x031A2494 STR X10, [X19 + 0x10]
	0x031A2498 ADD X31, X10, 0x0
	0x031A249C TBNZ X9, 0x0, 0x31A24C0
	0x031A24A0 MOV X0, X8
	0x031A24A4 BL 0x1C5C684
	0x031A24A8 LDR X24, [X22]
	0x031A24AC LDR X8, [X24 + 0xC0]
	0x031A24B0 LDR X8, [X8 + 0x8]
	0x031A24B4 ADD X9, X8, 0x135
	0x031A24B8 LDRH W9, [X9]
	0x031A24BC B 0x31A24C4
	0x031A24C0 MOV X0, X8
	0x031A24C4 LDR W10, [X0 + 0xFC]
	0x031A24C8 ADD X11, X31, 0x0
	0x031A24CC ADD W10, W10, 0x10
	0x031A24D0 ADD X10, X10, 0xF
	0x031A24D4 AND X10, X10, 0x1FFFFFFFF
	0x031A24D8 SUB X10, X11, X10
	0x031A24DC STR X10, [X19 + 0x18]
	0x031A24E0 ADD X31, X10, 0x0
	0x031A24E4 TBNZ X9, 0x0, 0x31A2508
	0x031A24E8 MOV X0, X8
	0x031A24EC BL 0x1C5C684
	0x031A24F0 LDR X24, [X22]
	0x031A24F4 LDR X8, [X24 + 0xC0]
	0x031A24F8 LDR X8, [X8 + 0x8]
	0x031A24FC ADD X9, X8, 0x135
	0x031A2500 LDRH W9, [X9]
	0x031A2504 B 0x31A250C
	0x031A2508 MOV X0, X8
	0x031A250C LDR W10, [X0 + 0xFC]
	0x031A2510 ADD X11, X31, 0x0
	0x031A2514 ADD W10, W10, 0x10
	0x031A2518 ADD X10, X10, 0xF
	0x031A251C AND X10, X10, 0x1FFFFFFFF
	0x031A2520 SUB X10, X11, X10
	0x031A2524 STR X10, [X19 + 0x20]
	0x031A2528 ADD X31, X10, 0x0
	0x031A252C TBNZ X9, 0x0, 0x31A2550
	0x031A2530 MOV X0, X8
	0x031A2534 BL 0x1C5C684
	0x031A2538 LDR X24, [X22]
	0x031A253C LDR X8, [X24 + 0xC0]
	0x031A2540 LDR X8, [X8 + 0x8]
	0x031A2544 ADD X9, X8, 0x135
	0x031A2548 LDRH W9, [X9]
	0x031A254C B 0x31A2554
	0x031A2550 MOV X0, X8
	0x031A2554 LDR W10, [X0 + 0xFC]
	0x031A2558 ADD X11, X31, 0x0
	0x031A255C ADD W10, W10, 0x10
	0x031A2560 ADD X10, X10, 0xF
	0x031A2564 AND X10, X10, 0x1FFFFFFFF
	0x031A2568 SUB X10, X11, X10
	0x031A256C STR X10, [X19 + 0x28]
	0x031A2570 ADD X31, X10, 0x0
	0x031A2574 TBNZ X9, 0x0, 0x31A2598
	0x031A2578 MOV X0, X8
	0x031A257C BL 0x1C5C684
	0x031A2580 LDR X24, [X22]
	0x031A2584 LDR X8, [X24 + 0xC0]
	0x031A2588 LDR X8, [X8 + 0x8]
	0x031A258C ADD X9, X8, 0x135
	0x031A2590 LDRH W9, [X9]
	0x031A2594 B 0x31A259C
	0x031A2598 MOV X0, X8
	0x031A259C LDR W10, [X0 + 0xFC]
	0x031A25A0 ADD X11, X31, 0x0
	0x031A25A4 ADD W10, W10, 0x10
	0x031A25A8 ADD X10, X10, 0xF
	0x031A25AC AND X10, X10, 0x1FFFFFFFF
	0x031A25B0 SUB X10, X11, X10
	0x031A25B4 STR X10, [X19 + 0x30]
	0x031A25B8 ADD X31, X10, 0x0
	0x031A25BC TBNZ X9, 0x0, 0x31A25D0
	0x031A25C0 MOV X0, X8
	0x031A25C4 BL 0x1C5C684
	0x031A25C8 LDR X24, [X22]
	0x031A25CC MOV X8, X0
	0x031A25D0 LDR W8, [X8 + 0xFC]
	0x031A25D4 ADD X9, X31, 0x0
	0x031A25D8 ADD W8, W8, 0x10
	0x031A25DC ADD X8, X8, 0xF
	0x031A25E0 AND X8, X8, 0x1FFFFFFFF
	0x031A25E4 SUB X20, X9, X8
	0x031A25E8 ADD X31, X20, 0x0
	0x031A25EC ADD X0, X19, 0x2E0
	0x031A25F0 MOVZ W2, 0x88
	0x031A25F4 MOV W1, W31
	0x031A25F8 BL 0x3EB1B10
	0x031A25FC ADD X0, X19, 0x368
	0x031A2600 MOVZ W2, 0x118
	0x031A2604 MOV W1, W31
	0x031A2608 BL 0x3EB1B10
	0x031A260C LDR X8, [X24 + 0xC0]
	0x031A2610 LDR X0, [X8 + 0x8]
	0x031A2614 LDRB W9, [X0 + 0x135]
	0x031A2618 TBNZ X9, 0x0, 0x31A2628
	0x031A261C BL 0x1C5C684
	0x031A2620 LDR X8, [X22]
	0x031A2624 LDR X8, [X8 + 0xC0]
	0x031A2628 LDR X1, [X8 + 0x10]
	0x031A262C ADD X5, X19, 0x258
	0x031A2630 MOV X2, X28
	0x031A2634 MOV X3, X21
	0x031A2638 MOV X4, X31
	0x031A263C BL 0x1C17728
	0x031A2640 LDR X28, [X19 + 0x70]
	0x031A2644 LDR X1, [X19 + 0x258]
	0x031A2648 MOV X2, X31
	0x031A264C MOV X0, X28
	0x031A2650 BL 0x36EADF0
	0x031A2654 STR X0, [X19 + 0x368]
	0x031A2658 STR W1, [X19 + 0x370]
	0x031A265C LDR X8, [X22]
	0x031A2660 LDR X8, [X8 + 0xC0]
	0x031A2664 LDR X0, [X8 + 0x8]
	0x031A2668 LDRB W9, [X0 + 0x135]
	0x031A266C TBNZ X9, 0x0, 0x31A267C
	0x031A2670 BL 0x1C5C684
	0x031A2674 LDR X8, [X22]
	0x031A2678 LDR X8, [X8 + 0xC0]
	0x031A267C LDR X1, [X8 + 0x10]
	0x031A2680 ADD X5, X19, 0x258
	0x031A2684 MOV X2, X23
	0x031A2688 MOV X3, X21
	0x031A268C MOV X4, X31
	0x031A2690 BL 0x1C17728
	0x031A2694 LDR X0, [X19 + 0x258]
	0x031A2698 CBZ X0, 0x31A2EB0
	0x031A269C MOV X1, X31
	0x031A26A0 ADD X23, X19, 0x368
	0x031A26A4 ADD X24, X19, 0x258
	0x031A26A8 BL 0x3C3F49C
	0x031A26AC MOV X1, X0
	0x031A26B0 ADD X8, X19, 0x258
	0x031A26B4 MOV X0, X28
	0x031A26B8 MOV X2, X31
	0x031A26BC BL 0x36EB150
	0x031A26C0 LDR V0, [X24]
	0x031A26C4 LDR X8, [X19 + 0x268]
	0x031A26C8 ADD X27, X19, 0x258
	0x031A26CC ADD X24, X19, 0x368
	0x031A26D0 STUR V0, [X23 + 0xC]
	0x031A26D4 STUR X8, [X23 + 0x1C]
	0x031A26D8 LDR X8, [X22]
	0x031A26DC LDR X8, [X8 + 0xC0]
	0x031A26E0 LDR X0, [X8 + 0x8]
	0x031A26E4 LDRB W9, [X0 + 0x135]
	0x031A26E8 TBNZ X9, 0x0, 0x31A26F8
	0x031A26EC BL 0x1C5C684
	0x031A26F0 LDR X8, [X22]
	0x031A26F4 LDR X8, [X8 + 0xC0]
	0x031A26F8 LDR X2, [X19 + 0x48]
	0x031A26FC LDR X1, [X8 + 0x18]
	0x031A2700 ADD X5, X19, 0x258
	0x031A2704 MOV X3, X21
	0x031A2708 MOV X4, X31
	0x031A270C BL 0x1C17728
	0x031A2710 LDR V0, [X19 + 0x258]
	0x031A2714 LDR V1, [X19 + 0x260]
	0x031A2718 STR D0, [X19 + 0x400]
	0x031A271C STR S1, [X19 + 0x408]
	0x031A2720 LDR X8, [X22]
	0x031A2724 LDR X8, [X8 + 0xC0]
	0x031A2728 LDR X0, [X8 + 0x8]
	0x031A272C LDRB W9, [X0 + 0x135]
	0x031A2730 TBNZ X9, 0x0, 0x31A2740
	0x031A2734 BL 0x1C5C684
	0x031A2738 LDR X8, [X22]
	0x031A273C LDR X8, [X8 + 0xC0]
	0x031A2740 LDR X2, [X19 + 0x50]
	0x031A2744 LDR X1, [X8 + 0x20]
	0x031A2748 ADD X5, X19, 0x258
	0x031A274C MOV X3, X21
	0x031A2750 MOV X4, X31
	0x031A2754 BL 0x1C17728
	0x031A2758 LDR V0, [X19 + 0x258]
	0x031A275C LDR V1, [X19 + 0x260]
	0x031A2760 STUR D0, [X24 + 0xA4]
	0x031A2764 STR S1, [X19 + 0x414]
	0x031A2768 LDR X8, [X22]
	0x031A276C LDR X8, [X8 + 0xC0]
	0x031A2770 LDR X0, [X8 + 0x8]
	0x031A2774 LDRB W9, [X0 + 0x135]
	0x031A2778 TBNZ X9, 0x0, 0x31A2788
	0x031A277C BL 0x1C5C684
	0x031A2780 LDR X8, [X22]
	0x031A2784 LDR X8, [X8 + 0xC0]
	0x031A2788 LDR X2, [X19 + 0x58]
	0x031A278C LDR X1, [X8 + 0x28]
	0x031A2790 ADD X5, X19, 0x258
	0x031A2794 MOV X3, X21
	0x031A2798 MOV X4, X31
	0x031A279C BL 0x1C17728
	0x031A27A0 LDR W8, [X19 + 0x258]
	0x031A27A4 STR X20, [X19 + 0x8]
	0x031A27A8 STR W8, [X19 + 0x418]
	0x031A27AC LDR X8, [X22]
	0x031A27B0 LDR X8, [X8 + 0xC0]
	0x031A27B4 LDR X0, [X8 + 0x8]
	0x031A27B8 LDRB W9, [X0 + 0x135]
	0x031A27BC TBNZ X9, 0x0, 0x31A27CC
	0x031A27C0 BL 0x1C5C684
	0x031A27C4 LDR X8, [X22]
	0x031A27C8 LDR X8, [X8 + 0xC0]
	0x031A27CC LDR X2, [X19 + 0x60]
	0x031A27D0 LDR X1, [X8 + 0x30]
	0x031A27D4 ADRP X20, 0xF51000
	0x031A27D8 LDR X20, [X20 + 0x598]
	0x031A27DC ADD X5, X19, 0x258
	0x031A27E0 MOV X3, X21
	0x031A27E4 MOV X4, X31
	0x031A27E8 BL 0x1C17728
	0x031A27EC LDR V0, [X19 + 0x258]
	0x031A27F0 LDR V1, [X19 + 0x260]
	0x031A27F4 STUR D0, [X24 + 0xB4]
	0x031A27F8 STR S1, [X19 + 0x424]
	0x031A27FC LDR X8, [X22]
	0x031A2800 LDR X8, [X8 + 0xC0]
	0x031A2804 LDR X0, [X8 + 0x8]
	0x031A2808 LDRB W9, [X0 + 0x135]
	0x031A280C TBNZ X9, 0x0, 0x31A281C
	0x031A2810 BL 0x1C5C684
	0x031A2814 LDR X8, [X22]
	0x031A2818 LDR X8, [X8 + 0xC0]
	0x031A281C LDR X1, [X8 + 0x38]
	0x031A2820 MOV X2, X26
	0x031A2824 ADD X5, X19, 0x258
	0x031A2828 MOV X3, X21
	0x031A282C MOV X4, X31
	0x031A2830 BL 0x1C17728
	0x031A2834 LDR X0, [X20]
	0x031A2838 LDR X23, [X19 + 0x258]
	0x031A283C LDR W8, [X0 + 0xE0]
	0x031A2840 CBNZ W8, 0x31A2848
	0x031A2844 BL 0x1C16DFC
	0x031A2848 MOV X0, X23
	0x031A284C MOV X1, X31
	0x031A2850 MOV X2, X31
	0x031A2854 BL 0x3C354F8
	0x031A2858 TBZ X0, 0x0, 0x31A28B8
	0x031A285C LDR X8, [X22]
	0x031A2860 LDR X8, [X8 + 0xC0]
	0x031A2864 LDR X0, [X8 + 0x8]
	0x031A2868 LDRB W9, [X0 + 0x135]
	0x031A286C TBNZ X9, 0x0, 0x31A287C
	0x031A2870 BL 0x1C5C684
	0x031A2874 LDR X8, [X22]
	0x031A2878 LDR X8, [X8 + 0xC0]
	0x031A287C LDR X2, [X19]
	0x031A2880 LDR X1, [X8 + 0x38]
	0x031A2884 ADD X5, X19, 0x258
	0x031A2888 MOV X3, X21
	0x031A288C MOV X4, X31
	0x031A2890 BL 0x1C17728
	0x031A2894 LDR X1, [X19 + 0x258]

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x123A000
	011 Move W8, [X20+3606]
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xF7E000
	019 Move X0, [X0+552]
	020 Call 0x1C17CF4
	021 Move X0, 0xF7E000
	022 Move X0, [X0+544]
	023 Call 0x1C17CF4
	024 Move X0, 0xF7B000
	025 Move X0, [X0+3680]
	026 Call 0x1C17CF4
	027 Move X0, 0xF7B000
	028 Move X0, [X0+3704]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3606], W8
	032 Move X0, [X21+32]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X0+192]
	040 Move X0, [X8+104]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, [X21+32]
	052 Move W8, [X0+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {58}
	057 Call 0x1C5D684
	058 Move X8, [X0+192]
	059 Move X0, [X8+96]
	060 Call 0x2D0E6C4
	061 Move X20, X0
	062 Compare X19, 0
	063 JumpIfEqual {473}
	064 Move X22, 0xF7E000
	065 Move X22, [X22+552]
	066 Move X9, [X19]
	067 Move X8, [X22]
	068 Move W11, [X9+304]
	069 Move W10, [X8+304]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X9, [X9+200]
	072 Add X9, X9, X10
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Compare X20, 0
	076 JumpIfEqual {475}
	077 Move X1, X31
	078 Move X23, 0xF7B000
	079 Move X23, [X23+3704]
	080 Move X0, X20
	081 Move X2, X31
	082 Call EventBase.set_target, X0, X1
	083 Move X9, [X19]
	084 Move X8, [X22]
	085 Move X1, X31
	086 Move W11, [X9+304]
	087 Move W10, [X8+304]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X9, [X9+200]
	090 Add X9, X9, X10
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X1, X31
	094 Move X0, X19
	095 Move X1, X31
	096 Call EventBase.get_target, X0
	097 Compare X20, 0
	098 JumpIfEqual {475}
	099 Move X1, X0
	100 Move X0, X19
	101 Move X1, X31
	102 Call EventBase.get_imguiEvent, X0
	103 Move X1, X0
	104 Move X0, X20
	105 Move X2, X31
	106 Call EventBase.set_imguiEvent, X0, X1
	107 Move X8, [X19]
	108 Move X1, [X23]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move W2, 19
	119 Move X0, X19
	120 Call 0x1C5D788
	121 Move W9, [X10]
	122 Add W9, W9, 19
	123 Add X8, X8, W9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X1, [X0+8]
	127 Move X0, X19
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move X8, [X21+32]
	130 Move W22, W0
	131 Move W9, [X8+309]
	132 Move TEMP, X9
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {138}
	136 Move X0, X8
	137 Call 0x1C5D684
	138 Move [X20+132], W22
	139 Move X8, [X19]
	140 Move X1, [X23]
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 Compare X9, 0
	143 JumpIfEqual {150}
	144 Move X10, [X8+176]
	145 Add X10, X10, 8
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Subtract X9, X9, 1
	149 Add X10, X10, 16
	150 Move W2, 5
	151 Move X0, X19
	152 Call 0x1C5D788
	153 Move W9, [X10]
	154 Add W9, W9, 5
	155 Add X8, X8, W9
	156 Add X0, X8, 312
	157 Move X8, [X0]
	158 Move X1, [X0+8]
	159 Move X0, X19
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Move X0, [X21+32]
	162 Move V8, V0
	163 Move V9, V1
	164 Move W8, [X0+309]
	165 Move TEMP, X8
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {170}
	169 Call 0x1C5D684
	170 Move [X20+136], S8
	171 Move [X20+144], S9
	172 Move X8, [X19]
	173 Move X1, [X23]
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move W2, 5
	184 Move X0, X19
	185 Call 0x1C5D788
	186 Move W9, [X10]
	187 Add W9, W9, 5
	188 Add X8, X8, W9
	189 Add X0, X8, 312
	190 Move X8, [X0]
	191 Move X1, [X0+8]
	192 Move X0, X19
	193 NotImplemented "Instruction BLR not yet implemented."
	194 Move X0, [X21+32]
	195 Move V8, V0
	196 Move V9, V1
	197 Move W8, [X0+309]
	198 Move TEMP, X8
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfEqual {203}
	202 Call 0x1C5D684
	203 Move [X20+144], S8
	204 Move [X20+152], S9
	205 Move X8, [X19]
	206 Move X1, [X23]
	207 NotImplemented "Instruction LDRH not yet implemented."
	208 Compare X9, 0
	209 JumpIfEqual {216}
	210 Move X10, [X8+176]
	211 Add X10, X10, 8
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract X9, X9, 1
	215 Add X10, X10, 16
	216 Move W2, 7
	217 Move X0, X19
	218 Call 0x1C5D788
	219 Move W9, [X10]
	220 Add W9, W9, 7
	221 Add X8, X8, W9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X1, [X0+8]
	225 Move X0, X19
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Move X0, [X21+32]
	228 Move V8, V0
	229 Move V9, V1
	230 Move W8, [X0+309]
	231 Move TEMP, X8
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfEqual {236}
	235 Call 0x1C5D684
	236 Move [X20+152], S8
	237 Move [X20+160], S9
	238 Move X8, [X19]
	239 Move X1, [X23]
	240 NotImplemented "Instruction LDRH not yet implemented."
	241 Compare X9, 0
	242 JumpIfEqual {249}
	243 Move X10, [X8+176]
	244 Add X10, X10, 8
	245 NotImplemented "Instruction LDUR not yet implemented."
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Subtract X9, X9, 1
	248 Add X10, X10, 16
	249 Move W2, 3
	250 Move X0, X19
	251 Call 0x1C5D788
	252 Move W9, [X10]
	253 Add W9, W9, 3
	254 Add X8, X8, W9
	255 Add X0, X8, 312
	256 Move X8, [X0]
	257 Move X1, [X0+8]
	258 Move X0, X19
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Add W31, W0, 1
	261 NotImplemented "Instruction CSEL not yet implemented."
	262 Move X8, [X19]
	263 Move X1, [X23]
	264 NotImplemented "Instruction LDRH not yet implemented."
	265 Compare X9, 0
	266 JumpIfEqual {273}
	267 Move X10, [X8+176]
	268 Add X10, X10, 8
	269 NotImplemented "Instruction LDUR not yet implemented."
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Subtract X9, X9, 1
	272 Add X10, X10, 16
	273 Move W2, 3
	274 Move X0, X19
	275 Call 0x1C5D788
	276 Move W22, W31
	277 Move X24, X20
	278 Move W9, [X10]
	279 Add W9, W9, 3
	280 Add X8, X8, W9
	281 Add X0, X8, 312
	282 Move X8, [X0]
	283 Move X1, [X0+8]
	284 Move X0, X19
	285 NotImplemented "Instruction BLR not yet implemented."
	286 Move W22, W0
	287 Compare X24, 0
	288 JumpIfEqual {475}
	289 Move X0, [X21+32]
	290 Move W8, [X0+309]
	291 Move TEMP, X8
	292 And TEMP, TEMP, 1
	293 Compare TEMP, 1
	294 JumpIfEqual {296}
	295 Call 0x1C5D684
	296 Move [X24+164], W22
	297 Move X8, [X19]
	298 Move X1, [X23]
	299 NotImplemented "Instruction LDRH not yet implemented."
	300 Compare X9, 0
	301 JumpIfEqual {308}
	302 Move X10, [X8+176]
	303 Add X10, X10, 8
	304 NotImplemented "Instruction LDUR not yet implemented."
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Subtract X9, X9, 1
	307 Add X10, X10, 16
	308 Move W2, 4
	309 Move X0, X19
	310 Call 0x1C5D788
	311 Move W9, [X10]
	312 Add W9, W9, 4
	313 Add X8, X8, W9
	314 Add X0, X8, 312
	315 Move X8, [X0]
	316 Move X1, [X0+8]
	317 Move X0, X19
	318 NotImplemented "Instruction BLR not yet implemented."
	319 Move X8, [X21+32]
	320 Move W22, W0
	321 Move W9, [X8+309]
	322 Move TEMP, X9
	323 And TEMP, TEMP, 1
	324 Compare TEMP, 1
	325 JumpIfEqual {328}
	326 Move X0, X8
	327 Call 0x1C5D684
	328 Move [X20+168], W22
	329 Move X8, [X19]
	330 Move X1, [X23]
	331 NotImplemented "Instruction LDRH not yet implemented."
	332 Compare X9, 0
	333 JumpIfEqual {340}
	334 Move X10, [X8+176]
	335 Add X10, X10, 8
	336 NotImplemented "Instruction LDUR not yet implemented."
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Subtract X9, X9, 1
	339 Add X10, X10, 16
	340 Move W2, 9
	341 Move X0, X19
	342 Call 0x1C5D788
	343 Move W9, [X10]
	344 Add W9, W9, 9
	345 Add X8, X8, W9
	346 Add X0, X8, 312
	347 Move X8, [X0]
	348 Move X1, [X0+8]
	349 Move X22, 0xF7B000
	350 Move X22, [X22+3680]
	351 Move X0, X19
	352 NotImplemented "Instruction BLR not yet implemented."
	353 Move X8, [X21+32]
	354 Move W21, W0
	355 Move W9, [X8+309]
	356 Move TEMP, X9
	357 And TEMP, TEMP, 1
	358 Compare TEMP, 1
	359 JumpIfEqual {362}
	360 Move X0, X8
	361 Call 0x1C5D684
	362 Move [X20+160], W21
	363 Move X1, [X22]
	364 Move X0, X19
	365 Call 0x1C17E00
	366 Compare X0, 0
	367 JumpIfEqual {462}
	368 Move X8, [X0]
	369 Move X1, [X22]
	370 Move X22, 0xF7E000
	371 Move X21, X0
	372 NotImplemented "Instruction LDRH not yet implemented."
	373 Move X22, [X22+544]
	374 Compare X9, 0
	375 JumpIfEqual {382}
	376 Move X10, [X8+176]
	377 Add X10, X10, 8
	378 NotImplemented "Instruction LDUR not yet implemented."
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Subtract X9, X9, 1
	381 Add X10, X10, 16
	382 Move X0, X21
	383 Move W2, W31
	384 Call 0x1C5D788
	385 NotImplemented "Instruction LDRSW not yet implemented."
	386 Add X8, X8, X9
	387 Add X0, X8, 312
	388 Move X8, [X0]
	389 Move X1, [X0+8]
	390 Move X0, X21
	391 NotImplemented "Instruction BLR not yet implemented."
	392 Move X8, [X20]
	393 Move X1, [X22]
	394 Move W21, W0
	395 NotImplemented "Instruction LDRH not yet implemented."
	396 Compare X9, 0
	397 JumpIfEqual {404}
	398 Move X10, [X8+176]
	399 Add X10, X10, 8
	400 NotImplemented "Instruction LDUR not yet implemented."
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Subtract X9, X9, 1
	403 Add X10, X10, 16
	404 Move W2, 1
	405 Move X0, X20
	406 Call 0x1C5D788
	407 Move W9, [X10]
	408 Add W9, W9, 1
	409 Add X8, X8, W9
	410 Add X0, X8, 312
	411 Move X8, [X0]
	412 Move X2, [X0+8]
	413 And W1, W21, 1
	414 Move X0, X20
	415 NotImplemented "Instruction BLR not yet implemented."
	416 Move X8, [X20]
	417 Move X1, [X22]
	418 NotImplemented "Instruction LDRH not yet implemented."
	419 Compare X9, 0
	420 JumpIfEqual {427}
	421 Move X10, [X8+176]
	422 Add X10, X10, 8
	423 NotImplemented "Instruction LDUR not yet implemented."
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Subtract X9, X9, 1
	426 Add X10, X10, 16
	427 Move W2, 3
	428 Move X0, X20
	429 Call 0x1C5D788
	430 Move W9, [X10]
	431 Add W9, W9, 3
	432 Add X8, X8, W9
	433 Add X0, X8, 312
	434 Move X8, [X0]
	435 Move X2, [X0+8]
	436 Move W1, 1
	437 Move X0, X20
	438 NotImplemented "Instruction BLR not yet implemented."
	439 Move X8, [X20]
	440 Move X1, [X22]
	441 NotImplemented "Instruction LDRH not yet implemented."
	442 Compare X9, 0
	443 JumpIfEqual {450}
	444 Move X10, [X8+176]
	445 Add X10, X10, 8
	446 NotImplemented "Instruction LDUR not yet implemented."
	447 NotImplemented "Instruction CMP not yet implemented."
	448 Subtract X9, X9, 1
	449 Add X10, X10, 16
	450 Move W2, 5
	451 Move X0, X20
	452 Call 0x1C5D788
	453 Move W9, [X10]
	454 Add W9, W9, 5
	455 Add X8, X8, W9
	456 Add X0, X8, 312
	457 Move X8, [X0]
	458 Move X2, [X0+8]
	459 Move X0, X20
	460 Move X1, X19
	461 NotImplemented "Instruction BLR not yet implemented."
	462 Move X0, X20
	463 Move X20, [X31+64]
	464 Move X19, [X31+72]
	465 Move X22, [X31+48]
	466 Move X21, [X31+56]
	467 Move X24, [X31+32]
	468 Move X23, [X31+40]
	469 Move X30, [X31+16]
	470 Move D9, [X31+80]
	471 Move D8, [X31+88]
	472 Return X0
	473 Compare X20, 0
	474 JumpIfNotEqual {476}
	475 Call 0x1C17F20
	476 Move X0, X20
	477 Move X1, X31
	478 Move X2, X31
	479 Call EventBase.set_target, X0, X1
	480 Move X0, X20
	481 Move X1, X31
	482 Move X2, X31
	483 Call EventBase.set_imguiEvent, X0, X1
	484 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x031A2898 ADD X8, X19, 0x258
	0x031A289C MOV X0, X28
	0x031A28A0 MOV X2, X31
	0x031A28A4 BL 0x36EB150
	0x031A28A8 LDR V0, [X27]
	0x031A28AC LDR X8, [X19 + 0x268]
	0x031A28B0 STR V0, [X24 + 0xC]
	0x031A28B4 STR X8, [X19 + 0x438]
	0x031A28B8 LDR X8, [X22]
	0x031A28BC LDR X8, [X8 + 0xC0]
	0x031A28C0 LDR X0, [X8 + 0x8]
	0x031A28C4 LDRB W9, [X0 + 0x135]
	0x031A28C8 TBNZ X9, 0x0, 0x31A28D8
	0x031A28CC BL 0x1C5C684
	0x031A28D0 LDR X8, [X22]
	0x031A28D4 LDR X8, [X8 + 0xC0]
	0x031A28D8 LDR X2, [X19 + 0x68]
	0x031A28DC LDR X1, [X8 + 0x40]
	0x031A28E0 ADRP X24, 0xF7B000
	0x031A28E4 LDR X24, [X24 + 0x960]
	0x031A28E8 ADD X5, X19, 0x258
	0x031A28EC MOV X3, X21
	0x031A28F0 MOV X4, X31
	0x031A28F4 BL 0x1C17728
	0x031A28F8 ADD X0, X19, 0x2E0
	0x031A28FC ADD X1, X19, 0x258
	0x031A2900 MOVZ W2, 0x88
	0x031A2904 BL 0x3EB1AC0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move X8, [X8+192]
	008 Move X8, [X8+104]
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move W9, [X8+224]
	018 Compare W9, 0
	019 JumpIfNotEqual {22}
	020 Move X0, X8
	021 Call 0x1C17DFC
	022 Move X8, [X19+32]
	023 Move X0, X20
	024 Move X8, [X8+192]
	025 Move X1, [X8+144]
	026 Call 0x2D0E54C, X0
	027 Move X8, [X19+32]
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X8, [X8+192]
	032 Move X1, [X8+24]
	033 Move X30, [X31+32]
	034 Call 0x31A1138, X0
	035 Return 

