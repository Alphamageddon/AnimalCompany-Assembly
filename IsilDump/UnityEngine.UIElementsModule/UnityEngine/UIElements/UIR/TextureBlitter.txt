Type: UnityEngine.UIElements.UIR.TextureBlitter

Method: System.Boolean get_disposed()

Disassembly:
	0x03D294A8 LDR X0, [X8]
	0x03D294AC BL 0x3C13E40

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_disposed(System.Boolean value)

Disassembly:
	0x03D294B0 ADRP X8, 0x3CE000
	0x03D294B4 LDR X8, [X8 + 0xCA0]
	0x03D294B8 MOV X20, X0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+72], W8
	003 Return 

Method: System.Void Dispose()

Disassembly:
	0x03D294BC LDR X8, [X8]
	0x03D294C0 MOV X0, X8
	0x03D294C4 BL 0x1C16F10
	0x03D294C8 MOV X1, X20
	0x03D294CC MOV X2, X31
	0x03D294D0 MOV X19, X0
	0x03D294D4 BL 0x3C1454C
	0x03D294D8 CBZ X19, 0x3D295B4
	0x03D294DC MOV X0, X19
	0x03D294E0 MOV X1, X31
	0x03D294E4 BL 0x3C396B0
	0x03D294E8 ORR W1, W0, 0x4
	0x03D294EC MOV X0, X19
	0x03D294F0 MOV X2, X31
	0x03D294F4 BL 0x3C396EC
	0x03D294F8 ADRP X8, 0x43B000
	0x03D294FC LDR X8, [X8 + 0xB18]
	0x03D29500 MOV X0, X19
	0x03D29504 MOV W2, W31
	0x03D29508 MOV X3, X31
	0x03D2950C LDR X1, [X8]
	0x03D29510 BL 0x3C15104
	0x03D29514 MOV X20, X0
	0x03D29518 MOV X0, X19
	0x03D2951C MOV X1, X31
	0x03D29520 BL 0x3DE1000
	0x03D29524 ADRP X8, 0x3EE000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6BF000
	006 Move X20, 0x3D2000
	007 Move W8, [X21+2760]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3D2000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2760], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+392]
	023 Move X2, [X8+400]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03D29528 LDR X8, [X8 + 0xEC0]
	0x03D2952C MOV X0, X20
	0x03D29530 MOV X2, X31
	0x03D29534 LDR X1, [X8]
	0x03D29538 BL 0x321BA08
	0x03D2953C ADRP X8, 0x3CE000
	0x03D29540 LDR X8, [X8 + 0xFD8]
	0x03D29544 AND W1, W0, 0x1
	0x03D29548 ADD X0, X31, 0xC
	0x03D2954C STRH W31, [X31 + 0xC]
	0x03D29550 LDR X2, [X8]
	0x03D29554 BL 0x242D570
	0x03D29558 LDR X0, [X21]
	0x03D2955C LDR W8, [X0 + 0xE0]
	0x03D29560 CBNZ W8, 0x3D2956C
	0x03D29564 BL 0x1C16DFC
	0x03D29568 LDR X0, [X21]
	0x03D2956C LDR X8, [X0 + 0xB8]
	0x03D29570 LDRH W9, [X31 + 0xC]
	0x03D29574 STRH W9, [X8 + 0x4A]
	0x03D29578 ADRP X19, 0x3CE000
	0x03D2957C LDR W8, [X0 + 0xE0]
	0x03D29580 LDR X19, [X19 + 0xBF8]
	0x03D29584 CBNZ W8, 0x3D29590
	0x03D29588 BL 0x1C16DFC
	0x03D2958C LDR X0, [X21]
	0x03D29590 LDR X8, [X0 + 0xB8]
	0x03D29594 LDR X1, [X19]
	0x03D29598 ADD X0, X8, 0x4A
	0x03D2959C BL 0x242D58C
	0x03D295A0 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6BF000
	006 Move W8, [X21+2761]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3F5000
	014 Move X0, [X0+576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2761], W8
	018 Move W8, [X19+72]
	019 Compare W8, 0
	020 JumpIfNotEqual {39}
	021 Move TEMP, X20
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {37}
	025 Move X8, 0x3F5000
	026 Move X8, [X8+576]
	027 Move X20, [X19+24]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Call UIRUtility.Destroy, X0
	036 Move [X19+24], X31
	037 Move W8, 1
	038 Move [X19+72], W8
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 

Method: System.Void .cctor()

Disassembly:
	0x03D295A4 LDP X30, X21, [X31 + 0x10]
	0x03D295A8 AND W0, W0, 0x1
	0x03D295AC ADD X31, X31, 0x30
	0x03D295B0 RET
	0x03D295B4 BL 0x1C16F20
	0x03D295B8 STR X30, [X31 - 0x40]!
	0x03D295BC STP X24, X23, [X31 + 0x10]
	0x03D295C0 STP X22, X21, [X31 + 0x20]
	0x03D295C4 STP X20, X19, [X31 + 0x30]
	0x03D295C8 ADRP X21, 0x6BE000
	0x03D295CC ADRP X20, 0x43B000
	0x03D295D0 LDRB W8, [X21 + 0xAD2]
	0x03D295D4 LDR X20, [X20 + 0xB00]
	0x03D295D8 MOV X19, X0
	0x03D295DC TBNZ X8, 0x0, 0x3D29624
	0x03D295E0 ADRP X0, 0x3CB000
	0x03D295E4 LDR X0, [X0 + 0xE58]
	0x03D295E8 BL 0x1C16CF4
	0x03D295EC ADRP X0, 0x43B000
	0x03D295F0 LDR X0, [X0 + 0xB20]
	0x03D295F4 BL 0x1C16CF4
	0x03D295F8 ADRP X0, 0x439000
	0x03D295FC LDR X0, [X0 + 0x6B0]
	0x03D29600 BL 0x1C16CF4
	0x03D29604 ADRP X0, 0x43B000
	0x03D29608 LDR X0, [X0 + 0xB00]
	0x03D2960C BL 0x1C16CF4
	0x03D29610 ADRP X0, 0x425000
	0x03D29614 LDR X0, [X0 + 0x48]
	0x03D29618 BL 0x1C16CF4
	0x03D2961C MOVZ W8, 0x1
	0x03D29620 STRB W8, [X21 + 0xAD2]
	0x03D29624 LDR X0, [X20]
	0x03D29628 ADRP X21, 0x439000
	0x03D2962C LDR W8, [X0 + 0xE0]
	0x03D29630 LDR X21, [X21 + 0x6B0]
	0x03D29634 CBNZ W8, 0x3D29640
	0x03D29638 BL 0x1C16DFC
	0x03D2963C LDR X0, [X20]
	0x03D29640 LDR X8, [X0 + 0xB8]
	0x03D29644 LDR W8, [X8]
	0x03D29648 STR W8, [X19 + 0x30]
	0x03D2964C LDR X0, [X21]
	0x03D29650 LDR W8, [X0 + 0xE0]
	0x03D29654 CBNZ W8, 0x3D2965C
	0x03D29658 BL 0x1C16DFC
	0x03D2965C ADRP X22, 0x6BE000
	0x03D29660 LDRB W8, [X22 + 0x7E5]
	0x03D29664 CBNZ W8, 0x3D2967C
	0x03D29668 ADRP X0, 0x439000
	0x03D2966C LDR X0, [X0 + 0x6B0]
	0x03D29670 BL 0x1C16CF4
	0x03D29674 MOVZ W8, 0x1
	0x03D29678 STRB W8, [X22 + 0x7E5]
	0x03D2967C LDR X0, [X21]
	0x03D29680 ADRP X24, 0x43B000
	0x03D29684 ADRP X23, 0x3CB000
	0x03D29688 ADRP X22, 0x425000
	0x03D2968C LDR W8, [X0 + 0xE0]
	0x03D29690 LDR X24, [X24 + 0xB20]
	0x03D29694 LDR X23, [X23 + 0xE58]
	0x03D29698 LDR X22, [X22 + 0x48]
	0x03D2969C CBNZ W8, 0x3D296A8
	0x03D296A0 BL 0x1C16DFC
	0x03D296A4 LDR X0, [X21]
	0x03D296A8 LDR X8, [X0 + 0xB8]
	0x03D296AC MOV X0, X19
	0x03D296B0 MOV X1, X31
	0x03D296B4 LDR X8, [X8]
	0x03D296B8 STR X8, [X19 + 0x38]
	0x03D296BC BL 0x33BDD8C
	0x03D296C0 LDR X8, [X20]
	0x03D296C4 LDR X0, [X24]
	0x03D296C8 LDR X8, [X8 + 0xB8]
	0x03D296CC LDR W1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6BF000
	007 Move X20, 0x43C000
	008 Move X19, 0x43C000
	009 Move X21, 0x3CC000
	010 Move W8, [X22+2762]
	011 Move X20, [X20+2736]
	012 Move X19, [X19+2744]
	013 Move X21, [X21+3672]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x3CC000
	019 Move X0, [X0+3672]
	020 Call 0x1C17CF4
	021 Move X0, 0x43C000
	022 Move X0, [X0+2744]
	023 Call 0x1C17CF4
	024 Move X0, 0x425000
	025 Move X0, [X0+2816]
	026 Call 0x1C17CF4
	027 Move X0, 0x43C000
	028 Move X0, [X0+2736]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+2762], W8
	032 Move X0, [X20]
	033 Move X20, 0x425000
	034 Move X20, [X20+2816]
	035 Move W1, 1
	036 Move W2, W31
	037 Move W3, W31
	038 Move X4, X31
	039 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	040 Move X8, [X19]
	041 Move W1, 8
	042 Move X8, [X8+184]
	043 Move [X8+8], X0
	044 Move X0, [X21]
	045 Call 0x1C17D6C
	046 Move X8, [X19]
	047 Move W21, W31
	048 Move X8, [X8+184]
	049 Move [X8], X0
	050 Move [X31+12], W31
	051 Move X8, [X19]
	052 Add X0, X31, 12
	053 Move X1, X31
	054 Move X8, [X8+184]
	055 Move X22, [X8]
	056 Call Int32.ToString, X0
	057 Move X8, [X20]
	058 Move X1, X0
	059 Move X2, X31
	060 Move X0, X8
	061 Call String.Concat, X0, X1
	062 Move X1, X31
	063 Call Shader.PropertyToID, X0
	064 Compare X22, 0
	065 JumpIfEqual {80}
	066 Move W8, [X22+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X8, X22, W21
	069 Move [X8+32], W0
	070 Move W8, [X31+12]
	071 Add W21, W8, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X31+12], W21
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Return 
	080 Call 0x1C17F20
	081 Call 0x1C17F28

Method: System.Void .ctor(System.Int32 capacity = 512)

Disassembly:
	0x03D296D0 BL 0x1C16D6C
	0x03D296D4 STR X0, [X19 + 0x10]
	0x03D296D8 LDR X8, [X20]
	0x03D296DC LDR X0, [X23]
	0x03D296E0 LDR X8, [X8 + 0xB8]
	0x03D296E4 LDR W1, [X8]
	0x03D296E8 BL 0x1C16D6C
	0x03D296EC STR X0, [X19 + 0x18]
	0x03D296F0 LDR X8, [X20]
	0x03D296F4 LDR X0, [X22]
	0x03D296F8 LDR X8, [X8 + 0xB8]
	0x03D296FC LDP W9, W8, [X8]
	0x03D29700 MUL W1, W8, W9
	0x03D29704 BL 0x1C16D6C
	0x03D29708 STR X0, [X19 + 0x28]
	0x03D2970C MOV X0, X19
	0x03D29710 LDP X20, X19, [X31 + 0x30]
	0x03D29714 LDP X22, X21, [X31 + 0x20]
	0x03D29718 LDP X24, X23, [X31 + 0x10]
	0x03D2971C LDR X30, [X31], #0x40
	0x03D29720 B 0x3D29724
	0x03D29724 STR X30, [X31 - 0x40]!
	0x03D29728 STP X24, X23, [X31 + 0x10]
	0x03D2972C STP X22, X21, [X31 + 0x20]
	0x03D29730 STP X20, X19, [X31 + 0x30]
	0x03D29734 ADRP X20, 0x6BE000
	0x03D29738 LDRB W8, [X20 + 0xAD3]
	0x03D2973C MOV X19, X0
	0x03D29740 TBNZ X8, 0x0, 0x3D29764
	0x03D29744 ADRP X0, 0x3F2000
	0x03D29748 LDR X0, [X0 + 0x620]
	0x03D2974C BL 0x1C16CF4
	0x03D29750 ADRP X0, 0x43B000
	0x03D29754 LDR X0, [X0 + 0xB00]
	0x03D29758 BL 0x1C16CF4
	0x03D2975C MOVZ W8, 0x1
	0x03D29760 STRB W8, [X20 + 0xAD3]
	0x03D29764 ADRP X21, 0x43B000
	0x03D29768 ADRP X22, 0x3F2000
	0x03D2976C LDR X21, [X21 + 0xB00]
	0x03D29770 LDR X22, [X22 + 0x620]
	0x03D29774 MOV X20, X31
	0x03D29778 STR X31, [X19 + 0x20]
	0x03D2977C MOVN W23, 0x0
	0x03D29780 LDR X0, [X21]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x6BF000
	009 Move X24, 0x43C000
	010 Move X22, 0x43C000
	011 Move X21, 0x43C000
	012 Move W8, [X23+2763]
	013 Move X24, [X24+2752]
	014 Move X22, [X22+2760]
	015 Move X21, [X21+2768]
	016 Move W20, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x43C000
	023 Move X0, [X0+2752]
	024 Call 0x1C17CF4
	025 Move X0, 0x43C000
	026 Move X0, [X0+2768]
	027 Call 0x1C17CF4
	028 Move X0, 0x43C000
	029 Move X0, [X0+2760]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+2763], W8
	033 Move X0, [X24]
	034 Move W1, 1
	035 Call 0x1C17D6C
	036 Move [X19+16], X0
	037 Move X0, X19
	038 Move X1, X31
	039 Call Object..ctor, X0
	040 Move X0, [X22]
	041 Call 0x1C17F10
	042 Move X2, [X21]
	043 Move W1, W20
	044 Move X21, X0
	045 Call List`1<BlitInfo>..ctor, X0, X1
	046 Move [X19+64], X21
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Return 

Method: System.Void QueueBlit(UnityEngine.Texture src, UnityEngine.RectInt srcRect, UnityEngine.Vector2Int dstPos, System.Boolean addBorder, UnityEngine.Color tint)

Disassembly:
	0x03D29784 LDR W8, [X0 + 0xE0]
	0x03D29788 CBNZ W8, 0x3D29794
	0x03D2978C BL 0x1C16DFC
	0x03D29790 LDR X0, [X21]
	0x03D29794 LDR X8, [X0 + 0xB8]
	0x03D29798 LDRSW X8, [X8]
	0x03D2979C CMP X20, X8
	0x03D297A0 B.GE 0x3D29824
	0x03D297A4 LDR X0, [X22]
	0x03D297A8 LDR X24, [X19 + 0x10]
	0x03D297AC LDR W8, [X0 + 0xE0]
	0x03D297B0 CBNZ W8, 0x3D297BC
	0x03D297B4 BL 0x1C16DFC
	0x03D297B8 LDR X0, [X22]
	0x03D297BC CBZ X24, 0x3D29838
	0x03D297C0 LDR W8, [X24 + 0x18]
	0x03D297C4 CMP X20, X8
	0x03D297C8 B.CS 0x3D2983C
	0x03D297CC LDR X8, [X0 + 0xB8]
	0x03D297D0 ADD X9, X24, X20, 0x2, LSL
	0x03D297D4 LDR W8, [X8]
	0x03D297D8 STR W8, [X9 + 0x20]
	0x03D297DC LDR X8, [X19 + 0x18]
	0x03D297E0 CBZ X8, 0x3D29838
	0x03D297E4 LDR W9, [X8 + 0x18]
	0x03D297E8 CMP X20, X9
	0x03D297EC B.CS 0x3D2983C
	0x03D297F0 ADD X8, X8, X20, 0x2, LSL
	0x03D297F4 STR W23, [X8 + 0x20]
	0x03D297F8 LDR X8, [X22]
	0x03D297FC FMOV S0, W31
	0x03D29800 MOVZ W3, 0x1
	0x03D29804 MOVZ W4, 0x1
	0x03D29808 LDR X8, [X8 + 0xB8]
	0x03D2980C MOV X0, X19
	0x03D29810 MOV W1, W20
	0x03D29814 LDR W2, [X8]
	0x03D29818 BL 0x3D29840
	0x03D2981C ADD X20, X20, 0x1
	0x03D29820 B 0x3D29780
	0x03D29824 LDP X20, X19, [X31 + 0x30]
	0x03D29828 LDP X22, X21, [X31 + 0x20]
	0x03D2982C LDP X24, X23, [X31 + 0x10]
	0x03D29830 LDR X30, [X31], #0x40
	0x03D29834 RET
	0x03D29838 BL 0x1C16F20
	0x03D2983C BL 0x1C16F28
	0x03D29840 SUB X31, X31, 0x50
	0x03D29844 STR D8, [X31 + 0x10]
	0x03D29848 STR X30, [X31 + 0x18]
	0x03D2984C STP X24, X23, [X31 + 0x20]
	0x03D29850 STP X22, X21, [X31 + 0x30]
	0x03D29854 STP X20, X19, [X31 + 0x40]
	0x03D29858 ADRP X24, 0x6BE000
	0x03D2985C STR W2, [X31 + 0x8]
	0x03D29860 ADRP X23, 0x43B000
	0x03D29864 LDRB W8, [X24 + 0xAD8]
	0x03D29868 LDR X23, [X23 + 0xB00]
	0x03D2986C MOV V8.16B, V0.16B
	0x03D29870 MOV W20, W4
	0x03D29874 MOV W21, W3
	0x03D29878 MOV W22, W1
	0x03D2987C MOV X19, X0
	0x03D29880 TBNZ X8, 0x0, 0x3D298A4
	0x03D29884 ADRP X0, 0x3F2000
	0x03D29888 LDR X0, [X0 + 0x620]
	0x03D2988C BL 0x1C16CF4
	0x03D29890 ADRP X0, 0x43B000
	0x03D29894 LDR X0, [X0 + 0xB00]
	0x03D29898 BL 0x1C16CF4
	0x03D2989C MOVZ W8, 0x1
	0x03D298A0 STRB W8, [X24 + 0xAD8]
	0x03D298A4 LDR X0, [X23]
	0x03D298A8 ADRP X24, 0x3F2000
	0x03D298AC LDR W8, [X0 + 0xE0]
	0x03D298B0 LDR X24, [X24 + 0x620]
	0x03D298B4 CBNZ W8, 0x3D298C0
	0x03D298B8 BL 0x1C16DFC
	0x03D298BC LDR X0, [X23]
	0x03D298C0 LDR X8, [X0 + 0xB8]
	0x03D298C4 LDR X0, [X24]
	0x03D298C8 LDR X23, [X19 + 0x28]
	0x03D298CC LDR W24, [X8 + 0x4]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], D11
	003 Move [X31+72], D10
	004 Move [X31+80], D9
	005 Move [X31+88], D8
	006 Move [X31+96], X30
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X25, 0x6BF000
	015 Move W8, [X25+2764]
	016 Move V8, V3
	017 Move V9, V2
	018 Move V10, V1
	019 Move V11, V0
	020 Move W23, W5
	021 Move X19, X4
	022 Move X20, X3
	023 Move X21, X2
	024 Move X22, X1
	025 Move X24, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0x43C000
	031 Move X0, [X0+2776]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X25+2764], W8
	035 Move W8, [X24+72]
	036 Compare W8, 0
	037 JumpIfEqual {55}
	038 Move X0, X24
	039 Move X20, [X31+144]
	040 Move X19, [X31+152]
	041 Move X22, [X31+128]
	042 Move X21, [X31+136]
	043 Move X24, [X31+112]
	044 Move X23, [X31+120]
	045 Move X30, [X31+96]
	046 Move X25, [X31+104]
	047 Move D9, [X31+80]
	048 Move D8, [X31+88]
	049 Move D11, [X31+64]
	050 Move D10, [X31+72]
	051 Move X1, X31
	052 Add X31, X31, 160
	053 Call DisposeHelper.NotifyDisposedUsed, X0
	054 Return 
	055 Move X0, [X24+64]
	056 Compare X0, 0
	057 JumpIfEqual {114}
	058 Move X9, 0x43C000
	059 Move X9, [X9+2776]
	060 Move W11, [X0+28]
	061 Move X8, [X0+16]
	062 Move X10, [X9]
	063 Add W9, W11, 1
	064 Move [X0+28], W9
	065 Compare X8, 0
	066 JumpIfEqual {114}
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Move W9, [X8+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 And W9, W23, 1
	071 Move W12, 56
	072 Add W10, W11, 1
	073 NotImplemented "Instruction MADD not yet implemented."
	074 Move [X0+24], W10
	075 Move [X8+32], X22
	076 Move [X8+40], X21
	077 Move [X8+48], X20
	078 Move [X8+56], X19
	079 Move [X8+64], W9
	080 Move [X8+68], S11
	081 Move [X8+76], S10
	082 Move [X8+76], S9
	083 Move [X8+84], S8
	084 Move [X8+84], W31
	085 Move X8, [X10+32]
	086 Add X1, X31, 8
	087 Move X8, [X8+192]
	088 Move X2, [X8+112]
	089 Move [X31+8], X22
	090 Move [X31+16], X21
	091 Move [X31+24], X20
	092 Move [X31+32], X19
	093 Move [X31+40], W9
	094 Move [X31+44], S11
	095 Move [X31+52], S10
	096 Move [X31+52], S9
	097 Move [X31+60], S8
	098 Move [X31+60], W31
	099 Call List`1<BlitInfo>.AddWithResize, X0, X1
	100 Move X20, [X31+144]
	101 Move X19, [X31+152]
	102 Move X22, [X31+128]
	103 Move X21, [X31+136]
	104 Move X24, [X31+112]
	105 Move X23, [X31+120]
	106 Move X30, [X31+96]
	107 Move X25, [X31+104]
	108 Move D9, [X31+80]
	109 Move D8, [X31+88]
	110 Move D11, [X31+64]
	111 Move D10, [X31+72]
	112 Add X31, X31, 160
	113 Return 
	114 Call 0x1C17F20

Method: System.Void BlitOneNow(UnityEngine.RenderTexture dst, UnityEngine.Texture src, UnityEngine.RectInt srcRect, UnityEngine.Vector2Int dstPos, System.Boolean addBorder, UnityEngine.Color tint)

Disassembly:
	0x03D298D0 LDR W8, [X0 + 0xE0]
	0x03D298D4 CBNZ W8, 0x3D298DC
	0x03D298D8 BL 0x1C16DFC
	0x03D298DC ADD X0, X31, 0x8
	0x03D298E0 MOV X1, X31
	0x03D298E4 BL 0x3DDFE28
	0x03D298E8 CBZ X23, 0x3D29964
	0x03D298EC LDR W9, [X23 + 0x18]
	0x03D298F0 MUL W8, W24, W22
	0x03D298F4 CMP W8, W9
	0x03D298F8 B.CS 0x3D29968
	0x03D298FC SCVTF S1, W21
	0x03D29900 FMOV S3, 1
	0x03D29904 SCVTF S2, W20
	0x03D29908 SXTW X9, W8
	0x03D2990C FDIV S4, S3, S1
	0x03D29910 FDIV S3, S3, S2
	0x03D29914 ADD X9, X23, X9, 0x4, LSL
	0x03D29918 STP S0, S4, [X9 + 0x20]
	0x03D2991C STP S3, S8, [X9 + 0x28]
	0x03D29920 LDR X9, [X19 + 0x28]
	0x03D29924 CBZ X9, 0x3D29964
	0x03D29928 LDR W10, [X9 + 0x18]
	0x03D2992C ADD W8, W8, 0x1
	0x03D29930 CMP W8, W10
	0x03D29934 B.CS 0x3D29968
	0x03D29938 LDP X20, X19, [X31 + 0x40]
	0x03D2993C LDP X22, X21, [X31 + 0x30]
	0x03D29940 LDP X24, X23, [X31 + 0x20]
	0x03D29944 LDR X30, [X31 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+72]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfEqual {13}
	007 Move X0, X19
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call DisposeHelper.NotifyDisposedUsed, X0
	012 Return 
	013 Move X8, [X19+16]
	014 Compare X8, 0
	015 JumpIfEqual {41}
	016 Move W9, [X8+24]
	017 Compare W9, 0
	018 JumpIfEqual {42}
	019 And W9, W6, 1
	020 Move X0, X19
	021 Move [X8+32], X2
	022 Move [X8+40], X3
	023 Move [X8+48], X4
	024 Move [X8+56], X5
	025 Move [X8+68], S0
	026 Move [X8+76], S1
	027 Move [X8+76], S2
	028 Move [X8+84], S3
	029 Move [X8+64], W9
	030 Move [X8+84], W31
	031 Call TextureBlitter.BeginBlit, X0, X1
	032 Move X1, [X19+16]
	033 Move X0, X19
	034 Move W2, W31
	035 Call TextureBlitter.DoBlit, X0, X1, X2
	036 Move X0, X19
	037 Move X30, [X31+16]
	038 Move X19, [X31+24]
	039 Call TextureBlitter.EndBlit, X0
	040 Return 
	041 Call 0x1C17F20
	042 Call 0x1C17F28

Method: System.Void Commit(UnityEngine.RenderTexture dst)

Disassembly:
	0x03D2A15C B.CS 0x3D2A174
	0x03D2A160 ADD W9, W10, 0x1
	0x03D2A164 ADD X8, X8, X10, 0x2, LSL
	0x03D2A168 STR W9, [X0 + 0x18]
	0x03D2A16C STR W24, [X8 + 0x20]
	0x03D2A170 B 0x3D2A188
	0x03D2A174 LDR X8, [X9 + 0x20]
	0x03D2A178 MOVN W1, 0x0
	0x03D2A17C LDR X8, [X8 + 0xC0]
	0x03D2A180 LDR X2, [X8 + 0x70]
	0x03D2A184 BL 0x30C1698
	0x03D2A188 LDR W8, [X21]
	0x03D2A18C ADD W23, W23, 0x1
	0x03D2A190 CMP W23, W8
	0x03D2A194 B.LT 0x3D2A130
	0x03D2A198 LDR X0, [X21 + 0x8]
	0x03D2A19C CBZ X0, 0x3D2A22C
	0x03D2A1A0 ADRP X10, 0x43A000
	0x03D2A1A4 LDR X10, [X10 + 0xB50]
	0x03D2A1A8 LDR W11, [X0 + 0x1C]
	0x03D2A1AC LDR X9, [X0 + 0x10]
	0x03D2A1B0 LDR X10, [X10]
	0x03D2A1B4 ADD W11, W11, 0x1
	0x03D2A1B8 STR W11, [X0 + 0x1C]
	0x03D2A1BC CBZ X9, 0x3D2A22C
	0x03D2A1C0 UBFM W11, W8, 0x1B, 0x1A
	0x03D2A1C4 LDRSW X8, [X0 + 0x18]
	0x03D2A1C8 LDR W12, [X9 + 0x18]
	0x03D2A1CC AND X13, X20, 0xFFFF
	0x03D2A1D0 SUB W11, W11, 0x1
	0x03D2A1D4 BFM X19, X13, 0x30, 0xF
	0x03D2A1D8 CMP W8, W12
	0x03D2A1DC BFM X19, X11, 0x20, 0x1F
	0x03D2A1E0 B.CS 0x3D2A208
	0x03D2A1E4 ADD W10, W8, 0x1
	0x03D2A1E8 ADD X8, X9, X8, 0x3, LSL
	0x03D2A1EC STR W10, [X0 + 0x18]
	0x03D2A1F0 STR X19, [X8 + 0x20]
	0x03D2A1F4 LDP X20, X19, [X31 + 0x30]
	0x03D2A1F8 LDP X22, X21, [X31 + 0x20]
	0x03D2A1FC LDP X24, X23, [X31 + 0x10]
	0x03D2A200 LDR X30, [X31], #0x40
	0x03D2A204 RET
	0x03D2A208 LDR X8, [X10 + 0x20]
	0x03D2A20C MOV X1, X19
	0x03D2A210 LDP X20, X19, [X31 + 0x30]
	0x03D2A214 LDP X22, X21, [X31 + 0x20]
	0x03D2A218 LDR X8, [X8 + 0xC0]
	0x03D2A21C LDP X24, X23, [X31 + 0x10]
	0x03D2A220 LDR X2, [X8 + 0x70]
	0x03D2A224 LDR X30, [X31], #0x40
	0x03D2A228 B 0x30ED73C
	0x03D2A22C BL 0x1C16F20
	0x03D2A230 SUB X31, X31, 0x80
	0x03D2A234 STP X29, X30, [X31 + 0x20]
	0x03D2A238 STP X28, X27, [X31 + 0x30]
	0x03D2A23C STP X26, X25, [X31 + 0x40]
	0x03D2A240 STP X24, X23, [X31 + 0x50]
	0x03D2A244 STP X22, X21, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6BE000
	006 Move W8, [X21+2765]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x43B000
	014 Move X0, [X0+2800]
	015 Call 0x1C17CF4
	016 Move X0, 0x43B000
	017 Move X0, [X0+2808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2765], W8
	021 Move W8, [X19+72]
	022 Compare W8, 0
	023 JumpIfEqual {32}
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call DisposeHelper.NotifyDisposedUsed, X0
	031 Return 
	032 Move X8, [X19+64]
	033 Compare X8, 0
	034 JumpIfEqual {54}
	035 Move W8, [X8+24]
	036 Compare W8, 0
	037 JumpIfEqual {74}
	038 Move X0, X19
	039 Move X1, X20
	040 Call TextureBlitter.BeginBlit, X0, X1
	041 Move X1, [X19+64]
	042 Compare X1, 0
	043 JumpIfEqual {54}
	044 Move W20, W31
	045 Move W8, [X1+24]
	046 Move X0, X19
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W2, W20
	049 Call TextureBlitter.DoBlit, X0, X1, X2
	050 Move X1, [X19+64]
	051 Add W20, W20, 8
	052 Compare X1, 0
	053 JumpIfNotEqual {45}
	054 Call 0x1C17F20
	055 Call TextureBlitter.EndBlit, X0
	056 Move X8, [X19+64]
	057 Compare X8, 0
	058 JumpIfEqual {54}
	059 Move W2, [X8+24]
	060 Move W9, [X8+28]
	061 Add W9, W9, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move [X8+24], W31
	064 Move [X8+28], W9
	065 Move X0, [X8+16]
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move W1, W31
	069 Move X3, X31
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Call Array.Clear, X0, X1, X2
	073 Return 
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X30, [X31+32]
	077 Move X21, [X31+40]
	078 Return 

Method: System.Void BeginBlit(UnityEngine.RenderTexture dst)

Disassembly:
	0x03D29948 LDR V8, [X31 + 0x10]
	0x03D2994C SXTW X8, W8
	0x03D29950 ADD X8, X9, X8, 0x4, LSL
	0x03D29954 STP S1, S2, [X8 + 0x20]
	0x03D29958 STR X31, [X8 + 0x28]
	0x03D2995C ADD X31, X31, 0x50
	0x03D29960 RET
	0x03D29964 BL 0x1C16F20
	0x03D29968 BL 0x1C16F28
	0x03D2996C STP X30, X21, [X31 - 0x20]!
	0x03D29970 STP X20, X19, [X31 + 0x10]
	0x03D29974 ADRP X21, 0x6BE000
	0x03D29978 ADRP X20, 0x43B000
	0x03D2997C LDRB W8, [X21 + 0xAD4]
	0x03D29980 LDR X20, [X20 + 0xB00]
	0x03D29984 MOV X19, X0
	0x03D29988 TBNZ X8, 0x0, 0x3D299A0
	0x03D2998C ADRP X0, 0x43B000
	0x03D29990 LDR X0, [X0 + 0xB00]
	0x03D29994 BL 0x1C16CF4
	0x03D29998 MOVZ W8, 0x1
	0x03D2999C STRB W8, [X21 + 0xAD4]
	0x03D299A0 LDR W8, [X19 + 0x20]
	0x03D299A4 ADD W8, W8, 0x1
	0x03D299A8 STP W8, W8, [X19 + 0x20]
	0x03D299AC LDR X0, [X20]
	0x03D299B0 LDR W8, [X0 + 0xE0]
	0x03D299B4 CBNZ W8, 0x3D299C0
	0x03D299B8 BL 0x1C16DFC
	0x03D299BC LDR X0, [X20]
	0x03D299C0 LDR X8, [X0 + 0xB8]
	0x03D299C4 LDR W8, [X8]
	0x03D299C8 STR W8, [X19 + 0x30]
	0x03D299CC LDP X20, X19, [X31 + 0x10]
	0x03D299D0 LDP X30, X21, [X31], #0x20
	0x03D299D4 RET
	0x03D299D8 STR X30, [X31 - 0x40]!
	0x03D299DC STP X24, X23, [X31 + 0x10]
	0x03D299E0 STP X22, X21, [X31 + 0x20]
	0x03D299E4 STP X20, X19, [X31 + 0x30]
	0x03D299E8 ADRP X20, 0x6BE000
	0x03D299EC LDRB W8, [X20 + 0xAD5]
	0x03D299F0 MOV X19, X0
	0x03D299F4 STR W1, [X31 + 0x8]
	0x03D299F8 TBNZ X8, 0x0, 0x3D29A1C
	0x03D299FC ADRP X0, 0x3F2000
	0x03D29A00 LDR X0, [X0 + 0x620]
	0x03D29A04 BL 0x1C16CF4
	0x03D29A08 ADRP X0, 0x43B000
	0x03D29A0C LDR X0, [X0 + 0xB00]
	0x03D29A10 BL 0x1C16CF4
	0x03D29A14 MOVZ W8, 0x1
	0x03D29A18 STRB W8, [X20 + 0xAD5]
	0x03D29A1C ADRP X22, 0x43B000
	0x03D29A20 ADRP X23, 0x3F2000
	0x03D29A24 LDR X22, [X22 + 0xB00]
	0x03D29A28 LDR X23, [X23 + 0x620]
	0x03D29A2C MOV X20, X31
	0x03D29A30 MOVZ W24, 0x20
	0x03D29A34 LDR X0, [X22]
	0x03D29A38 LDR W8, [X0 + 0xE0]
	0x03D29A3C CBNZ W8, 0x3D29A48
	0x03D29A40 BL 0x1C16DFC
	0x03D29A44 LDR X0, [X22]
	0x03D29A48 LDR X8, [X0 + 0xB8]
	0x03D29A4C LDRSW X8, [X8]
	0x03D29A50 CMP X20, X8
	0x03D29A54 B.GE 0x3D29AAC
	0x03D29A58 LDR X21, [X19 + 0x10]
	0x03D29A5C CBZ X21, 0x3D29AC8
	0x03D29A60 LDR X0, [X23]
	0x03D29A64 LDR W8, [X0 + 0xE0]
	0x03D29A68 CBNZ W8, 0x3D29A70
	0x03D29A6C BL 0x1C16DFC
	0x03D29A70 LDR W8, [X21 + 0x18]
	0x03D29A74 CMP X20, X8
	0x03D29A78 B.CS 0x3D29ACC
	0x03D29A7C ADD X0, X21, X24
	0x03D29A80 MOV X1, X31
	0x03D29A84 BL 0x3DDFE1C
	0x03D29A88 MOV W21, W0
	0x03D29A8C ADD X0, X31, 0x8
	0x03D29A90 MOV X1, X31
	0x03D29A94 BL 0x3DDFE1C
	0x03D29A98 CMP W21, W0
	0x03D29A9C B.EQ 0x3D29AB0
	0x03D29AA0 ADD X20, X20, 0x1
	0x03D29AA4 ADD X24, X24, 0x4
	0x03D29AA8 B 0x3D29A34
	0x03D29AAC MOVN W20, 0x0
	0x03D29AB0 MOV W0, W20
	0x03D29AB4 LDP X20, X19, [X31 + 0x30]
	0x03D29AB8 LDP X22, X21, [X31 + 0x20]
	0x03D29ABC LDP X24, X23, [X31 + 0x10]
	0x03D29AC0 LDR X30, [X31], #0x40
	0x03D29AC4 RET
	0x03D29AC8 BL 0x1C16F20
	0x03D29ACC BL 0x1C16F28
	0x03D29AD0 STR X30, [X31 - 0x10]!
	0x03D29AD4 LDR X8, [X0 + 0x18]
	0x03D29AD8 CBZ X8, 0x3D29B20
	0x03D29ADC LDR W9, [X8 + 0x18]
	0x03D29AE0 CMP W9, W1
	0x03D29AE4 B.LS 0x3D29B24
	0x03D29AE8 ADD X8, X8, W1, 0x2, SXTW
	0x03D29AEC LDR W9, [X8 + 0x20]!
	0x03D29AF0 LDR W10, [X0 + 0x24]
	0x03D29AF4 CMP W9, W10
	0x03D29AF8 B.GE 0x3D29B08
	0x03D29AFC LDR W9, [X0 + 0x30]
	0x03D29B00 SUB W9, W9, 0x1
	0x03D29B04 STR W9, [X0 + 0x30]
	0x03D29B08 LDR W9, [X0 + 0x20]
	0x03D29B0C ADD W9, W9, 0x1
	0x03D29B10 STR W9, [X0 + 0x20]
	0x03D29B14 STR W9, [X8]
	0x03D29B18 LDR X30, [X31], #0x10
	0x03D29B1C RET
	0x03D29B20 BL 0x1C16F20
	0x03D29B24 BL 0x1C16F28
	0x03D29B28 LDR W0, [X0 + 0x30]
	0x03D29B2C RET
	0x03D29B30 STR W1, [X0 + 0x30]
	0x03D29B34 RET
	0x03D29B38 STR X30, [X31 - 0x40]!
	0x03D29B3C STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6BF000
	007 Move X21, 0x3CB000
	008 Move W8, [X22+2766]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x3CF000
	017 Move X0, [X0+712]
	018 Call 0x1C17CF4
	019 Move X0, 0x428000
	020 Move X0, [X0+1424]
	021 Call 0x1C17CF4
	022 Move X0, 0x3CF000
	023 Move X0, [X0+3232]
	024 Call 0x1C17CF4
	025 Move X0, 0x3CB000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move X0, 0x43C000
	029 Move X0, [X0+2624]
	030 Call 0x1C17CF4
	031 Move X0, 0x3F4000
	032 Move X0, [X0+2080]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2766], W8
	036 Move X0, [X21]
	037 Move X21, [X19+24]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {82}
	050 Move X21, 0x43C000
	051 Move X21, [X21+2624]
	052 Move X0, [X21]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X21]
	058 Move X8, [X0+184]
	059 Move X1, X31
	060 Move X0, [X8]
	061 Call Shader.Find, X0
	062 Move X8, 0x3CF000
	063 Move X8, [X8+3232]
	064 Move X22, X0
	065 Move X8, [X8]
	066 Move X0, X8
	067 Call 0x1C17F10
	068 Move X1, X22
	069 Move X2, X31
	070 Move X21, X0
	071 Call Material..ctor, X0, X1
	072 Move [X19+24], X21
	073 Compare X21, 0
	074 JumpIfEqual {148}
	075 Move X0, X21
	076 Move X1, X31
	077 Call Object.get_hideFlags, X0
	078 Or W1, W0, 4
	079 Move X0, X21
	080 Move X2, X31
	081 Call Object.set_hideFlags, X0, X1
	082 Move X22, 0x3F4000
	083 Move X8, [X19+32]
	084 Move X22, [X22+2080]
	085 Compare X8, 0
	086 JumpIfNotEqual {95}
	087 Move X8, 0x428000
	088 Move X8, [X8+1424]
	089 Move X0, [X8]
	090 Call 0x1C17F10
	091 Move X1, X31
	092 Move X21, X0
	093 Call MaterialPropertyBlock..ctor, X0
	094 Move [X19+32], X21
	095 Move X0, [X22]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X31
	101 Call Utility.GetActiveViewport
	102 Move [X19+40], X0
	103 Move [X19+48], X1
	104 Move X0, X31
	105 Call RenderTexture.get_active
	106 Move [X19+56], X0
	107 Compare X20, 0
	108 JumpIfEqual {148}
	109 Move X8, [X20]
	110 Move X22, 0x3CF000
	111 Move X0, X20
	112 Move X9, [X8+392]
	113 Move X1, [X8+400]
	114 Move X22, [X22+712]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X8, [X20]
	117 Move W21, W0
	118 Move X0, X20
	119 Move X9, [X8+424]
	120 Move X1, [X8+432]
	121 NotImplemented "Instruction BLR not yet implemented."
	122 NotImplemented "Instruction SCVTF not yet implemented."
	123 NotImplemented "Instruction SCVTF not yet implemented."
	124 Move S0, W31
	125 Move S2, W31
	126 Move X0, X31
	127 Call GL.LoadPixelMatrix, V0, V1, V2, V3
	128 Move X0, [X22]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X0, X20
	134 Move X1, X31
	135 Call Graphics.SetRenderTarget, X0
	136 Move X0, [X19+24]
	137 Compare X0, 0
	138 JumpIfEqual {148}
	139 Move X20, [X31+32]
	140 Move X19, [X31+40]
	141 Move X22, [X31+16]
	142 Move X21, [X31+24]
	143 Move W1, W31
	144 Move X2, X31
	145 Move X30, [X31+48]
	146 Call Material.SetPass, X0, X1
	147 Return 
	148 Call 0x1C17F20

Method: System.Void DoBlit(System.Collections.Generic.IList`1<UnityEngine.UIElements.UIR.TextureBlitter/BlitInfo> blitInfos, System.Int32 startIndex)

Disassembly:
	0x03D29B40 STP X22, X21, [X31 + 0x20]
	0x03D29B44 STP X20, X19, [X31 + 0x30]
	0x03D29B48 ADRP X20, 0x6BE000
	0x03D29B4C LDRB W8, [X20 + 0xAD6]
	0x03D29B50 MOV X19, X0
	0x03D29B54 TBNZ X8, 0x0, 0x3D29B6C
	0x03D29B58 ADRP X0, 0x43B000
	0x03D29B5C LDR X0, [X0 + 0xB00]
	0x03D29B60 BL 0x1C16CF4
	0x03D29B64 MOVZ W8, 0x1
	0x03D29B68 STRB W8, [X20 + 0xAD6]
	0x03D29B6C LDR X8, [X19 + 0x18]
	0x03D29B70 CBZ X8, 0x3D29C00
	0x03D29B74 LDR W9, [X8 + 0x18]
	0x03D29B78 CBZ W9, 0x3D29C04
	0x03D29B7C ADRP X21, 0x43B000
	0x03D29B80 LDR X21, [X21 + 0xB00]
	0x03D29B84 LDR W22, [X8 + 0x20]
	0x03D29B88 MOV W20, W31
	0x03D29B8C MOVZ W23, 0x9
	0x03D29B90 LDR X0, [X21]
	0x03D29B94 LDR W8, [X0 + 0xE0]
	0x03D29B98 SUB X24, X23, 0x8
	0x03D29B9C CBNZ W8, 0x3D29BA8
	0x03D29BA0 BL 0x1C16DFC
	0x03D29BA4 LDR X0, [X21]
	0x03D29BA8 LDR X8, [X0 + 0xB8]
	0x03D29BAC LDRSW X8, [X8]
	0x03D29BB0 CMP X24, X8
	0x03D29BB4 B.GE 0x3D29BE8
	0x03D29BB8 LDR X8, [X19 + 0x18]
	0x03D29BBC CBZ X8, 0x3D29C00
	0x03D29BC0 LDR W9, [X8 + 0x18]
	0x03D29BC4 CMP X24, X9
	0x03D29BC8 B.CS 0x3D29C04
	0x03D29BCC LDR W8, [X8, X23, LSL #2]
	0x03D29BD0 SUB W9, W23, 0x8
	0x03D29BD4 ADD X23, X23, 0x1
	0x03D29BD8 CMP W8, W22
	0x03D29BDC CSEL W20, W9, W20, LT
	0x03D29BE0 CSEL W22, W8, W22, LT
	0x03D29BE4 B 0x3D29B94
	0x03D29BE8 MOV W0, W20
	0x03D29BEC LDP X20, X19, [X31 + 0x30]
	0x03D29BF0 LDP X22, X21, [X31 + 0x20]
	0x03D29BF4 LDP X24, X23, [X31 + 0x10]
	0x03D29BF8 LDR X30, [X31], #0x40
	0x03D29BFC RET
	0x03D29C00 BL 0x1C16F20
	0x03D29C04 BL 0x1C16F28
	0x03D29C08 STR D8, [X31 - 0x50]!
	0x03D29C0C STR X30, [X31 + 0x8]
	0x03D29C10 STP X26, X25, [X31 + 0x10]
	0x03D29C14 STP X24, X23, [X31 + 0x20]
	0x03D29C18 STP X22, X21, [X31 + 0x30]
	0x03D29C1C STP X20, X19, [X31 + 0x40]
	0x03D29C20 ADRP X22, 0x6BE000
	0x03D29C24 LDRB W8, [X22 + 0xAD7]
	0x03D29C28 MOV X19, X3
	0x03D29C2C MOV W21, W2
	0x03D29C30 MOV V8.16B, V0.16B
	0x03D29C34 MOV X24, X1
	0x03D29C38 MOV X20, X0
	0x03D29C3C TBNZ X8, 0x0, 0x3D29C60
	0x03D29C40 ADRP X0, 0x3CA000
	0x03D29C44 LDR X0, [X0 + 0x598]
	0x03D29C48 BL 0x1C16CF4
	0x03D29C4C ADRP X0, 0x43B000
	0x03D29C50 LDR X0, [X0 + 0xB00]
	0x03D29C54 BL 0x1C16CF4
	0x03D29C58 MOVZ W8, 0x1
	0x03D29C5C STRB W8, [X22 + 0xAD7]
	0x03D29C60 LDR X0, [X20 + 0x38]
	0x03D29C64 CBZ X0, 0x3D29DE4
	0x03D29C68 ADRP X22, 0x3CA000
	0x03D29C6C LDR X22, [X22 + 0x598]
	0x03D29C70 AND X23, X24, 0x0
	0x03D29C74 MOV X1, X23
	0x03D29C78 MOV X2, X31
	0x03D29C7C BL 0x3DE0044
	0x03D29C80 LDR X8, [X22]
	0x03D29C84 MOV X22, X0
	0x03D29C88 LDR W9, [X8 + 0xE0]
	0x03D29C8C CBNZ W9, 0x3D29C98
	0x03D29C90 MOV X0, X8
	0x03D29C94 BL 0x1C16DFC
	0x03D29C98 MOV X0, X22
	0x03D29C9C MOV X1, X31
	0x03D29CA0 MOV X2, X31
	0x03D29CA4 BL 0x3C3883C
	0x03D29CA8 TBZ X0, 0x0, 0x3D29CB8
	0x03D29CAC MOV X0, X31
	0x03D29CB0 BL 0x3C1B370
	0x03D29CB4 MOV X22, X0
	0x03D29CB8 LDR X8, [X20 + 0x10]
	0x03D29CBC CBZ X8, 0x3D29DE4
	0x03D29CC0 LDR W9, [X8 + 0x18]
	0x03D29CC4 CMP W9, W21
	0x03D29CC8 B.LS 0x3D29DE8
	0x03D29CCC SXTW X25, W21
	0x03D29CD0 ADD X8, X8, X25, 0x2, LSL
	0x03D29CD4 STR W24, [X8 + 0x20]
	0x03D29CD8 LDR X8, [X20 + 0x18]
	0x03D29CDC CBZ X8, 0x3D29DE4
	0x03D29CE0 LDR W9, [X8 + 0x18]
	0x03D29CE4 CMP W9, W21
	0x03D29CE8 B.LS 0x3D29DE8
	0x03D29CEC ADD X8, X8, X25, 0x2, LSL
	0x03D29CF0 LDR W9, [X8 + 0x20]!
	0x03D29CF4 LDR W10, [X20 + 0x24]
	0x03D29CF8 CMP W9, W10
	0x03D29CFC B.GE 0x3D29D0C
	0x03D29D00 LDR W9, [X20 + 0x30]
	0x03D29D04 SUB W9, W9, 0x1
	0x03D29D08 STR W9, [X20 + 0x30]
	0x03D29D0C LDR W9, [X20 + 0x20]
	0x03D29D10 ADD W9, W9, 0x1
	0x03D29D14 STR W9, [X20 + 0x20]
	0x03D29D18 STR W9, [X8]
	0x03D29D1C CBZ X22, 0x3D29DE4
	0x03D29D20 LDR X8, [X22]
	0x03D29D24 ADRP X26, 0x43B000
	0x03D29D28 MOV X0, X22
	0x03D29D2C LDP X9, X1, [X8 + 0x188]
	0x03D29D30 LDR X26, [X26 + 0xB00]
	0x03D29D34 BLR X9
	0x03D29D38 LDR X8, [X22]
	0x03D29D3C MOV W24, W0
	0x03D29D40 MOV X0, X22
	0x03D29D44 LDP X9, X1, [X8 + 0x1A8]
	0x03D29D48 BLR X9
	0x03D29D4C MOV W4, W0
	0x03D29D50 MOV X0, X20
	0x03D29D54 MOV W1, W21
	0x03D29D58 MOV X2, X23
	0x03D29D5C MOV W3, W24
	0x03D29D60 MOV V0.16B, V8.16B
	0x03D29D64 BL 0x3D29840
	0x03D29D68 LDR X0, [X26]
	0x03D29D6C LDR W8, [X0 + 0xE0]
	0x03D29D70 CBNZ W8, 0x3D29D7C
	0x03D29D74 BL 0x1C16DFC
	0x03D29D78 LDR X0, [X26]
	0x03D29D7C LDR X8, [X0 + 0xB8]
	0x03D29D80 LDR X8, [X8 + 0x8]
	0x03D29D84 CBZ X8, 0x3D29DE4
	0x03D29D88 LDR W9, [X8 + 0x18]
	0x03D29D8C CMP W9, W21
	0x03D29D90 B.LS 0x3D29DE8
	0x03D29D94 CBZ X19, 0x3D29DE4
	0x03D29D98 ADD X8, X8, X25, 0x2, LSL
	0x03D29D9C LDR W1, [X8 + 0x20]
	0x03D29DA0 MOV X0, X19
	0x03D29DA4 MOV X2, X22
	0x03D29DA8 MOV X3, X31
	0x03D29DAC BL 0x3C12828
	0x03D29DB0 LDR X8, [X26]
	0x03D29DB4 LDR X2, [X20 + 0x28]
	0x03D29DB8 MOV X0, X19
	0x03D29DBC LDP X20, X19, [X31 + 0x40]
	0x03D29DC0 LDR X8, [X8 + 0xB8]
	0x03D29DC4 LDP X22, X21, [X31 + 0x30]
	0x03D29DC8 LDP X24, X23, [X31 + 0x20]
	0x03D29DCC LDP X26, X25, [X31 + 0x10]
	0x03D29DD0 LDR W1, [X8 + 0x10]
	0x03D29DD4 LDR X30, [X31 + 0x8]
	0x03D29DD8 MOV X3, X31
	0x03D29DDC LDR V8, [X31], #0x50
	0x03D29DE0 B 0x3C129A8
	0x03D29DE4 BL 0x1C16F20
	0x03D29DE8 BL 0x1C16F28
	0x03D29DEC LDR W8, [X0]
	0x03D29DF0 CMP W8, W1
	0x03D29DF4 B.NE 0x3D29E1C
	0x03D29DF8 LDRH W8, [X0 + 0x4]
	0x03D29DFC UBFM X9, X1, 0x20, 0x3F
	0x03D29E00 CMP W8, W9, UXTH
	0x03D29E04 B.NE 0x3D29E1C
	0x03D29E08 LDRB W8, [X0 + 0x6]
	0x03D29E0C UBFM X9, X1, 0x30, 0x3F
	0x03D29E10 CMP W8, W9, UXTB
	0x03D29E14 CSET W0, EQ
	0x03D29E18 RET
	0x03D29E1C MOV W0, W31
	0x03D29E20 RET
	0x03D29E24 SUB X31, X31, 0x50
	0x03D29E28 STR X30, [X31 + 0x10]
	0x03D29E2C STP X24, X23, [X31 + 0x20]
	0x03D29E30 STP X22, X21, [X31 + 0x30]
	0x03D29E34 STP X20, X19, [X31 + 0x40]
	0x03D29E38 ADRP X24, 0x6BE000
	0x03D29E3C ADRP X20, 0x3CA000
	0x03D29E40 ADRP X21, 0x3CF000
	0x03D29E44 ADRP X23, 0x3CB000
	0x03D29E48 ADRP X22, 0x43B000
	0x03D29E4C LDRB W8, [X24 + 0xAD9]
	0x03D29E50 LDR X20, [X20 + 0x758]
	0x03D29E54 LDR X21, [X21 + 0x658]
	0x03D29E58 LDR X23, [X23 + 0x9D8]
	0x03D29E5C LDR X22, [X22 + 0xB28]
	0x03D29E60 MOV X19, X0
	0x03D29E64 TBNZ X8, 0x0, 0x3D29EA0
	0x03D29E68 ADRP X0, 0x3CB000
	0x03D29E6C LDR X0, [X0 + 0x9D8]
	0x03D29E70 BL 0x1C16CF4
	0x03D29E74 ADRP X0, 0x3CA000
	0x03D29E78 LDR X0, [X0 + 0x758]
	0x03D29E7C BL 0x1C16CF4
	0x03D29E80 ADRP X0, 0x3CF000
	0x03D29E84 LDR X0, [X0 + 0x658]
	0x03D29E88 BL 0x1C16CF4
	0x03D29E8C ADRP X0, 0x43B000
	0x03D29E90 LDR X0, [X0 + 0xB28]
	0x03D29E94 BL 0x1C16CF4
	0x03D29E98 MOVZ W8, 0x1
	0x03D29E9C STRB W8, [X24 + 0xAD9]
	0x03D29EA0 LDR W8, [X19]
	0x03D29EA4 LDR X0, [X20]
	0x03D29EA8 ADD X1, X31, 0x1C
	0x03D29EAC STR W8, [X31 + 0x1C]
	0x03D29EB0 BL 0x1C16E04
	0x03D29EB4 MOV X20, X0
	0x03D29EB8 LDRH W8, [X19 + 0x4]
	0x03D29EBC LDR X0, [X21]
	0x03D29EC0 ADD X1, X31, 0x18
	0x03D29EC4 STRH W8, [X31 + 0x18]
	0x03D29EC8 BL 0x1C16E04
	0x03D29ECC MOV X21, X0
	0x03D29ED0 LDRB W8, [X19 + 0x6]
	0x03D29ED4 LDR X0, [X23]
	0x03D29ED8 ADD X1, X31, 0xC
	0x03D29EDC STRB W8, [X31 + 0xC]
	0x03D29EE0 BL 0x1C16E04
	0x03D29EE4 LDR X8, [X22]
	0x03D29EE8 MOV X3, X0
	0x03D29EEC MOV X1, X20
	0x03D29EF0 MOV X2, X21
	0x03D29EF4 MOV X0, X8
	0x03D29EF8 MOV X4, X31
	0x03D29EFC BL 0x3227C18
	0x03D29F00 LDP X20, X19, [X31 + 0x40]
	0x03D29F04 LDP X22, X21, [X31 + 0x30]
	0x03D29F08 LDP X24, X23, [X31 + 0x20]
	0x03D29F0C LDR X30, [X31 + 0x10]
	0x03D29F10 ADD X31, X31, 0x50
	0x03D29F14 RET
	0x03D29F18 STR X30, [X31 - 0x20]!
	0x03D29F1C STP X20, X19, [X31 + 0x10]
	0x03D29F20 ADRP X19, 0x6BE000
	0x03D29F24 ADRP X20, 0x43B000
	0x03D29F28 LDRB W8, [X19 + 0xADA]
	0x03D29F2C LDR X20, [X20 + 0x9C8]
	0x03D29F30 TBNZ X8, 0x0, 0x3D29F48
	0x03D29F34 ADRP X0, 0x43B000
	0x03D29F38 LDR X0, [X0 + 0x9C8]
	0x03D29F3C BL 0x1C16CF4
	0x03D29F40 MOVZ W8, 0x1
	0x03D29F44 STRB W8, [X19 + 0xADA]
	0x03D29F48 LDR X8, [X20]
	0x03D29F4C LDP X20, X19, [X31 + 0x10]
	0x03D29F50 MOVN W9, 0x0
	0x03D29F54 LDR X8, [X8 + 0xB8]
	0x03D29F58 STR X9, [X8]
	0x03D29F5C LDR X30, [X31], #0x20
	0x03D29F60 RET
	0x03D29F64 STP X30, X25, [X31 - 0x40]!
	0x03D29F68 STP X24, X23, [X31 + 0x10]
	0x03D29F6C STP X22, X21, [X31 + 0x20]
	0x03D29F70 STP X20, X19, [X31 + 0x30]
	0x03D29F74 ADRP X25, 0x6BE000
	0x03D29F78 ADRP X24, 0x43B000
	0x03D29F7C ADRP X23, 0x43B000
	0x03D29F80 LDRB W8, [X25 + 0xADB]
	0x03D29F84 LDR X24, [X24 + 0xB30]
	0x03D29F88 LDR X23, [X23 + 0xB38]
	0x03D29F8C MOV W19, W3
	0x03D29F90 MOV W20, W2
	0x03D29F94 MOV W22, W1
	0x03D29F98 MOV X21, X0
	0x03D29F9C TBNZ X8, 0x0, 0x3D29FE4
	0x03D29FA0 ADRP X0, 0x43B000
	0x03D29FA4 LDR X0, [X0 + 0xB38]
	0x03D29FA8 BL 0x1C16CF4
	0x03D29FAC ADRP X0, 0x43B000
	0x03D29FB0 LDR X0, [X0 + 0xB40]
	0x03D29FB4 BL 0x1C16CF4
	0x03D29FB8 ADRP X0, 0x43B000
	0x03D29FBC LDR X0, [X0 + 0xB48]
	0x03D29FC0 BL 0x1C16CF4
	0x03D29FC4 ADRP X0, 0x43B000
	0x03D29FC8 LDR X0, [X0 + 0xB30]
	0x03D29FCC BL 0x1C16CF4
	0x03D29FD0 ADRP X0, 0x3D0000
	0x03D29FD4 LDR X0, [X0 + 0x1E8]
	0x03D29FD8 BL 0x1C16CF4
	0x03D29FDC MOVZ W8, 0x1
	0x03D29FE0 STRB W8, [X25 + 0xADB]
	0x03D29FE4 STR W22, [X21]
	0x03D29FE8 LDR X0, [X24]
	0x03D29FEC BL 0x1C16F10
	0x03D29FF0 LDR X2, [X23]
	0x03D29FF4 MOVZ W1, 0x1
	0x03D29FF8 MOV X22, X0
	0x03D29FFC BL 0x30ECFB0
	0x03D2A000 STR X22, [X21 + 0x8]
	0x03D2A004 CBZ X22, 0x3D2A06C
	0x03D2A008 ADRP X8, 0x43A000
	0x03D2A00C LDR X8, [X8 + 0xB48]
	0x03D2A010 ADRP X23, 0x3CF000
	0x03D2A014 ADRP X25, 0x43A000
	0x03D2A018 LDR W24, [X21]
	0x03D2A01C LDR X1, [X8]
	0x03D2A020 LDR X23, [X23 + 0x1E8]
	0x03D2A024 LDR X25, [X25 + 0xB40]
	0x03D2A028 MOV X0, X22
	0x03D2A02C BL 0x30ED2AC
	0x03D2A030 LDR X8, [X23]
	0x03D2A034 MOV W22, W0
	0x03D2A038 MOV X0, X8
	0x03D2A03C BL 0x1C16F10
	0x03D2A040 LDR X2, [X25]
	0x03D2A044 MUL W1, W22, W24
	0x03D2A048 MOV X23, X0
	0x03D2A04C BL 0x30C0F0C
	0x03D2A050 STR X23, [X21 + 0x10]
	0x03D2A054 STP W20, W19, [X21 + 0x18]
	0x03D2A058 LDP X20, X19, [X31 + 0x30]
	0x03D2A05C LDP X22, X21, [X31 + 0x20]
	0x03D2A060 LDP X24, X23, [X31 + 0x10]
	0x03D2A064 LDP X30, X25, [X31], #0x40
	0x03D2A068 RET
	0x03D2A06C BL 0x1C16F20
	0x03D2A070 STR X30, [X31 - 0x40]!
	0x03D2A074 STP X24, X23, [X31 + 0x10]
	0x03D2A078 STP X22, X21, [X31 + 0x20]
	0x03D2A07C STP X20, X19, [X31 + 0x30]
	0x03D2A080 ADRP X22, 0x6BD000
	0x03D2A084 LDRB W8, [X22 + 0xADC]
	0x03D2A088 MOV W20, W2
	0x03D2A08C MOV W19, W1
	0x03D2A090 MOV X21, X0
	0x03D2A094 TBNZ X8, 0x0, 0x3D2A0B8
	0x03D2A098 ADRP X0, 0x3CF000
	0x03D2A09C LDR X0, [X0 + 0x1D0]
	0x03D2A0A0 BL 0x1C16CF4
	0x03D2A0A4 ADRP X0, 0x43A000
	0x03D2A0A8 LDR X0, [X0 + 0xB50]
	0x03D2A0AC BL 0x1C16CF4
	0x03D2A0B0 MOVZ W8, 0x1
	0x03D2A0B4 STRB W8, [X22 + 0xADC]
	0x03D2A0B8 LDR X0, [X21 + 0x10]
	0x03D2A0BC CBZ X0, 0x3D2A22C
	0x03D2A0C0 ADRP X22, 0x3CF000
	0x03D2A0C4 LDR X22, [X22 + 0x1D0]
	0x03D2A0C8 LDR W10, [X0 + 0x1C]
	0x03D2A0CC LDR X8, [X0 + 0x10]
	0x03D2A0D0 LDR X9, [X22]
	0x03D2A0D4 ADD W10, W10, 0x1
	0x03D2A0D8 STR W10, [X0 + 0x1C]
	0x03D2A0DC CBZ X8, 0x3D2A22C

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+112], D15
	003 Move [X31+120], D14
	004 Move [X31+128], D13
	005 Move [X31+136], D12
	006 Move [X31+144], D11
	007 Move [X31+152], D10
	008 Move [X31+160], D9
	009 Move [X31+168], D8
	010 Move [X31+176], X29
	011 Move [X31+184], X30
	012 Move [X31+192], X28
	013 Move [X31+200], X27
	014 Move [X31+208], X26
	015 Move [X31+216], X25
	016 Move [X31+224], X24
	017 Move [X31+232], X23
	018 Move [X31+240], X22
	019 Move [X31+248], X21
	020 Move [X31+256], X20
	021 Move [X31+264], X19
	022 Move X19, 0x6BF000
	023 Move W8, [X19+2767]
	024 Move W27, W2
	025 Move X20, X1
	026 Move X21, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {48}
	031 Move X0, 0x43C000
	032 Move X0, [X0+2784]
	033 Call 0x1C17CF4
	034 Move X0, 0x43C000
	035 Move X0, [X0+2792]
	036 Call 0x1C17CF4
	037 Move X0, 0x3CB000
	038 Move X0, [X0+1432]
	039 Call 0x1C17CF4
	040 Move X0, 0x43C000
	041 Move X0, [X0+2744]
	042 Call 0x1C17CF4
	043 Move X0, 0x3F4000
	044 Move X0, [X0+2080]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X19+2767], W8
	048 Compare X20, 0
	049 JumpIfEqual {398}
	050 Move X10, 0x43C000
	051 Move X8, [X20]
	052 Move X10, [X10+2784]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move X0, X20
	064 Move W2, W31
	065 Call 0x1C5D788
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Add X8, X8, X9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X1, [X0+8]
	071 Move X0, X20
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Subtract W8, W0, W27
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W9, 8
	076 NotImplemented "Instruction CSEL not yet implemented."
	077 Add W8, W19, W27
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X31+52], W8
	080 Move X28, 0x43C000
	081 Move X29, 0x3CB000
	082 Move X25, 0x43C000
	083 Move X28, [X28+2792]
	084 Move X29, [X29+1432]
	085 Move X25, [X25+2744]
	086 Move W26, W31
	087 Move W22, W27
	088 Move X8, [X20]
	089 Move X1, [X28]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move X0, X20
	100 Move W2, W31
	101 Call 0x1C5D788
	102 NotImplemented "Instruction LDRSW not yet implemented."
	103 Add X8, X8, X9
	104 Add X0, X8, 312
	105 Move X9, [X0]
	106 Move X2, [X0+8]
	107 Add X8, X31, 56
	108 Move X0, X20
	109 Move W1, W22
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X0, [X29]
	112 Move X23, [X31+56]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X0, X23
	118 Move X1, X31
	119 Move X2, X31
	120 Call Object.op_Inequality, X0, X1
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {146}
	125 Move X0, [X25]
	126 Move X24, [X21+32]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {132}
	130 Call 0x1C17DFC
	131 Move X0, [X25]
	132 Move X8, [X0+184]
	133 Move X8, [X8]
	134 Compare X8, 0
	135 JumpIfEqual {398}
	136 Move W9, [X8+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Compare X24, 0
	139 JumpIfEqual {398}
	140 Add X8, X8, W26
	141 Move W1, [X8+32]
	142 Move X0, X24
	143 Move X2, X23
	144 Move X3, X31
	145 Call MaterialPropertyBlock.SetTexture, X0, X1, X2
	146 Add W26, W26, 1
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Add W22, W22, 1
	149 Move X8, 0x3F4000
	150 Move X8, [X8+2080]
	151 Move X21, [X21+32]
	152 Move X0, [X8]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X0, X21
	158 Move X1, X31
	159 Call Utility.SetPropertyBlock, X0
	160 Move W0, 7
	161 Move X1, X31
	162 Call GL.Begin, X0
	163 Move W8, [X31+52]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X24, 0x3CB000
	166 Move X24, [X24+1448]
	167 Move W28, W31
	168 Move [X31+16], X20
	169 Move [X31+12], W19
	170 Move X8, [X20]
	171 Move X10, 0x43C000
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Move X10, [X10+2792]
	174 Move X1, [X10]
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move X0, X20
	184 Move W2, W31
	185 Call 0x1C5D788
	186 NotImplemented "Instruction LDRSW not yet implemented."
	187 Add X8, X8, X9
	188 Add X0, X8, 312
	189 Move X9, [X0]
	190 Move X2, [X0+8]
	191 Add X8, X31, 56
	192 Move X0, X20
	193 Move W1, W27
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Move X25, [X31+56]
	196 Compare X25, 0
	197 JumpIfEqual {398}
	198 Move W21, [X31+72]
	199 Move W8, [X31+76]
	200 Move W23, [X31+64]
	201 Move W22, [X31+68]
	202 Move W19, [X31+80]
	203 Move W20, [X31+84]
	204 Move W29, [X31+88]
	205 Move [X31+44], W8
	206 Move X8, [X25]
	207 Move S15, [X31+92]
	208 Move S14, [X31+96]
	209 Move S11, [X31+100]
	210 Move S12, [X31+104]
	211 Move X0, X25
	212 Move X9, [X8+392]
	213 Move X1, [X8+400]
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Move X8, [X25]
	216 Move [X31+52], W0
	217 Move X0, X25
	218 Move X9, [X8+424]
	219 Move X1, [X8+432]
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Move X8, 0x6BC000
	222 Move W8, [X8+3469]
	223 Move [X31+40], W0
	224 Compare W8, 0
	225 JumpIfNotEqual {231}
	226 Move X0, X24
	227 Call 0x1C17CF4
	228 Move X8, 0x6BC000
	229 Move W9, 1
	230 Move [X8+3469], W9
	231 Move X0, [X24]
	232 Move W8, [X0+224]
	233 Compare W8, 0
	234 JumpIfNotEqual {236}
	235 Call 0x1C17DFC
	236 Add W1, W21, W23
	237 Move W0, W23
	238 Move X2, X31
	239 Move [X31+48], W27
	240 Call Math.Max, X0, X1
	241 Move X8, 0x6BC000
	242 Move W8, [X8+3470]
	243 Move W26, W0
	244 Compare W8, 0
	245 JumpIfNotEqual {251}
	246 Move X0, X24
	247 Call 0x1C17CF4
	248 Move W8, 1
	249 Move X9, 0x6BC000
	250 Move [X9+3470], W8
	251 Move X0, [X24]
	252 Subtract W25, W19, W29
	253 Subtract W27, W20, W29
	254 Subtract W24, W23, W29
	255 Move W8, [X0+224]
	256 Subtract W23, W22, W29
	257 Compare W8, 0
	258 JumpIfNotEqual {260}
	259 Call 0x1C17DFC
	260 Move W8, [X31+52]
	261 NotImplemented "Instruction SCVTF not yet implemented."
	262 Add W10, W26, W29
	263 Move S4, 1
	264 NotImplemented "Instruction SCVTF not yet implemented."
	265 Move W8, [X31+40]
	266 Move W11, [X31+44]
	267 Move [X31+52], S2
	268 NotImplemented "Instruction SCVTF not yet implemented."
	269 NotImplemented "Instruction SCVTF not yet implemented."
	270 NotImplemented "Instruction SCVTF not yet implemented."
	271 Add W8, W19, W21
	272 Add W9, W20, W11
	273 NotImplemented "Instruction FDIV not yet implemented."
	274 NotImplemented "Instruction FDIV not yet implemented."
	275 Add W8, W8, W29
	276 Add W9, W9, W29
	277 NotImplemented "Instruction SCVTF not yet implemented."
	278 NotImplemented "Instruction SCVTF not yet implemented."
	279 NotImplemented "Instruction SCVTF not yet implemented."
	280 NotImplemented "Instruction SCVTF not yet implemented."
	281 Multiply S9, S0, S2
	282 Multiply S8, S10, S3
	283 Multiply S0, S0, S1
	284 Add W1, W11, W22
	285 Move W0, W22
	286 Move X2, X31
	287 Move [X31+24], S5
	288 Move [X31+32], S4
	289 Move [X31+36], S8
	290 Move [X31+44], S6
	291 Move [X31+32], S0
	292 Call Math.Max, X0, X1
	293 Add W8, W0, W29
	294 NotImplemented "Instruction SCVTF not yet implemented."
	295 Multiply S10, S10, S0
	296 Move V0, V15
	297 Move V1, V14
	298 Move V2, V11
	299 Move V3, V12
	300 Move X0, X31
	301 Move [X31+44], S10
	302 Call GL.Color, X0
	303 NotImplemented "Instruction SCVTF not yet implemented."
	304 Move V0, V9
	305 Move V1, V8
	306 Move V2, V13
	307 Move X0, X31
	308 Call GL.TexCoord3, V0, V1, V2
	309 Move V8, [X31+24]
	310 Move V1, [X31+52]
	311 Move S2, W31
	312 Move X0, X31
	313 Move V0, V8
	314 Call GL.Vertex3, V0, V1, V2
	315 Move V0, V15
	316 Move V1, V14
	317 Move V2, V11
	318 Move V3, V12
	319 Move X0, X31
	320 Call GL.Color, X0
	321 Move V0, V9
	322 Move V1, V10
	323 Move V2, V13
	324 Move X0, X31
	325 Call GL.TexCoord3, V0, V1, V2
	326 Move V10, [X31+28]
	327 Move S2, W31
	328 Move V0, V8
	329 Move X0, X31
	330 Move V1, V10
	331 Call GL.Vertex3, V0, V1, V2
	332 Move V0, V15
	333 Move V1, V14
	334 Move V2, V11
	335 Move V3, V12
	336 Move X0, X31
	337 Call GL.Color, X0
	338 Move V9, [X31+32]
	339 Move V1, [X31+44]
	340 Move V2, V13
	341 Move X0, X31
	342 Move V0, V9
	343 Call GL.TexCoord3, V0, V1, V2
	344 Move V8, [X31+40]
	345 Move S2, W31
	346 Move V1, V10
	347 Move X0, X31
	348 Move V0, V8
	349 Call GL.Vertex3, V0, V1, V2
	350 Move V0, V15
	351 Move V1, V14
	352 Move V2, V11
	353 Move V3, V12
	354 Move X0, X31
	355 Call GL.Color, X0
	356 Move V1, [X31+36]
	357 Move V0, V9
	358 Move V2, V13
	359 Move X0, X31
	360 Call GL.TexCoord3, V0, V1, V2
	361 Move V1, [X31+52]
	362 Move S2, W31
	363 Move V0, V8
	364 Move X0, X31
	365 Call GL.Vertex3, V0, V1, V2
	366 Move W19, [X31+12]
	367 Move W27, [X31+48]
	368 Move X24, 0x3CA000
	369 Move X20, [X31+16]
	370 Move X24, [X24+1448]
	371 Add W28, W28, 1
	372 NotImplemented "Instruction CMP not yet implemented."
	373 Add W27, W27, 1
	374 Move X0, X31
	375 Call GL.End
	376 Move X20, [X31+256]
	377 Move X19, [X31+264]
	378 Move X22, [X31+240]
	379 Move X21, [X31+248]
	380 Move X24, [X31+224]
	381 Move X23, [X31+232]
	382 Move X26, [X31+208]
	383 Move X25, [X31+216]
	384 Move X28, [X31+192]
	385 Move X27, [X31+200]
	386 Move X29, [X31+176]
	387 Move X30, [X31+184]
	388 Move D9, [X31+160]
	389 Move D8, [X31+168]
	390 Move D11, [X31+144]
	391 Move D10, [X31+152]
	392 Move D13, [X31+128]
	393 Move D12, [X31+136]
	394 Move D15, [X31+112]
	395 Move D14, [X31+120]
	396 Add X31, X31, 272
	397 Return 
	398 Call 0x1C17F20
	399 Call 0x1C17F28

Method: System.Void EndBlit()

Disassembly:
	0x03D2A0E0 LDRSW X10, [X0 + 0x18]
	0x03D2A0E4 LDR W11, [X8 + 0x18]
	0x03D2A0E8 CMP W10, W11
	0x03D2A0EC B.CS 0x3D2A108
	0x03D2A0F0 ADD W9, W10, 0x1
	0x03D2A0F4 ADD X8, X8, X10, 0x2, LSL
	0x03D2A0F8 MOVN W10, 0x1
	0x03D2A0FC STR W9, [X0 + 0x18]
	0x03D2A100 STR W10, [X8 + 0x20]
	0x03D2A104 B 0x3D2A11C
	0x03D2A108 LDR X8, [X9 + 0x20]
	0x03D2A10C MOVN W1, 0x1
	0x03D2A110 LDR X8, [X8 + 0xC0]
	0x03D2A114 LDR X2, [X8 + 0x70]
	0x03D2A118 BL 0x30C1698
	0x03D2A11C LDR W8, [X21]
	0x03D2A120 CMP W8, 0x2
	0x03D2A124 B.LT 0x3D2A198
	0x03D2A128 MOVZ W23, 0x1
	0x03D2A12C MOVN W24, 0x0
	0x03D2A130 LDR X0, [X21 + 0x10]
	0x03D2A134 CBZ X0, 0x3D2A22C
	0x03D2A138 LDR W10, [X0 + 0x1C]
	0x03D2A13C LDR X8, [X0 + 0x10]
	0x03D2A140 LDR X9, [X22]
	0x03D2A144 ADD W10, W10, 0x1
	0x03D2A148 STR W10, [X0 + 0x1C]
	0x03D2A14C CBZ X8, 0x3D2A22C
	0x03D2A150 LDRSW X10, [X0 + 0x18]
	0x03D2A154 LDR W11, [X8 + 0x18]
	0x03D2A158 CMP W10, W11

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6BE000
	006 Move X20, 0x3CE000
	007 Move W8, [X21+2768]
	008 Move X20, [X20+712]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3CE000
	015 Move X0, [X0+712]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2768], W8
	019 Move X0, [X20]
	020 Move X20, [X19+56]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Call Graphics.SetRenderTarget, X0
	028 Move S0, [X19+40]
	029 Move S1, [X19+44]
	030 Move S2, [X19+48]
	031 Move S3, [X19+52]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X0, X31
	035 NotImplemented "Instruction SCVTF not yet implemented."
	036 NotImplemented "Instruction SCVTF not yet implemented."
	037 NotImplemented "Instruction SCVTF not yet implemented."
	038 NotImplemented "Instruction SCVTF not yet implemented."
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call GL.Viewport, X0
	042 Return 

