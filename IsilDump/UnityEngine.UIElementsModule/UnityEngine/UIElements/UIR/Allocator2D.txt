Type: UnityEngine.UIElements.UIR.Allocator2D

Method: System.Void .ctor(UnityEngine.Vector2Int minSize, UnityEngine.Vector2Int maxSize, System.Int32 rowHeightBias)

Disassembly:
	0x03D20F90 ADRP X21, 0x6C7000
	0x03D20F94 ADRP X20, 0x3DA000
	0x03D20F98 LDRB W8, [X21 + 0xA72]
	0x03D20F9C LDR X20, [X20 + 0xC10]
	0x03D20FA0 MOV X19, X0
	0x03D20FA4 TBNZ X8, 0x0, 0x3D20FBC
	0x03D20FA8 ADRP X0, 0x3DA000
	0x03D20FAC LDR X0, [X0 + 0xC10]
	0x03D20FB0 BL 0x1C16CF4
	0x03D20FB4 MOVZ W8, 0x1
	0x03D20FB8 STRB W8, [X21 + 0xA72]
	0x03D20FBC MOVZ W1, 0x1
	0x03D20FC0 MOV X0, X19
	0x03D20FC4 BL 0x3D20FEC
	0x03D20FC8 LDR X0, [X20]
	0x03D20FCC LDR W8, [X0 + 0xE0]
	0x03D20FD0 CBNZ W8, 0x3D20FD8
	0x03D20FD4 BL 0x1C16DFC
	0x03D20FD8 MOV X0, X19
	0x03D20FDC LDP X20, X19, [X31 + 0x10]
	0x03D20FE0 MOV X1, X31
	0x03D20FE4 LDP X30, X21, [X31], #0x20
	0x03D20FE8 B 0x33B3E9C
	0x03D20FEC STP X30, X21, [X31 - 0x20]!
	0x03D20FF0 STP X20, X19, [X31 + 0x10]
	0x03D20FF4 ADRP X21, 0x6C7000
	0x03D20FF8 LDRB W8, [X21 + 0xA73]
	0x03D20FFC MOV W20, W1
	0x03D21000 MOV X19, X0
	0x03D21004 TBNZ X8, 0x0, 0x3D21028
	0x03D21008 ADRP X0, 0x443000
	0x03D2100C LDR X0, [X0 + 0x490]
	0x03D21010 BL 0x1C16CF4
	0x03D21014 ADRP X0, 0x443000
	0x03D21018 LDR X0, [X0 + 0x498]
	0x03D2101C BL 0x1C16CF4
	0x03D21020 MOVZ W8, 0x1
	0x03D21024 STRB W8, [X21 + 0xA73]
	0x03D21028 LDRB W8, [X19 + 0x2C]
	0x03D2102C CBNZ W8, 0x3D2106C
	0x03D21030 TBZ X20, 0x0, 0x3D21064
	0x03D21034 LDR X0, [X19 + 0x10]
	0x03D21038 CBZ X0, 0x3D21078
	0x03D2103C ADRP X8, 0x443000
	0x03D21040 LDR X8, [X8 + 0x490]
	0x03D21044 LDR X1, [X8]
	0x03D21048 BL 0x26AEE44
	0x03D2104C LDR X0, [X19 + 0x18]
	0x03D21050 CBZ X0, 0x3D21078
	0x03D21054 ADRP X8, 0x443000
	0x03D21058 LDR X8, [X8 + 0x498]
	0x03D2105C LDR X1, [X8]
	0x03D21060 BL 0x26AE7A0
	0x03D21064 MOVZ W8, 0x1
	0x03D21068 STRB W8, [X19 + 0x2C]
	0x03D2106C LDP X20, X19, [X31 + 0x10]
	0x03D21070 LDP X30, X21, [X31], #0x20
	0x03D21074 RET
	0x03D21078 BL 0x1C16F20
	0x03D2107C LDR W0, [X0 + 0x10]
	0x03D21080 RET
	0x03D21084 LDRB W0, [X0 + 0x38]
	0x03D21088 RET
	0x03D2108C AND W8, W1, 0x1
	0x03D21090 STRB W8, [X0 + 0x38]
	0x03D21094 RET
	0x03D21098 STP X30, X21, [X31 - 0x20]!
	0x03D2109C STP X20, X19, [X31 + 0x10]
	0x03D210A0 ADRP X21, 0x6C6000
	0x03D210A4 ADRP X20, 0x3D9000
	0x03D210A8 LDRB W8, [X21 + 0xA74]
	0x03D210AC LDR X20, [X20 + 0xC10]
	0x03D210B0 MOV X19, X0
	0x03D210B4 TBNZ X8, 0x0, 0x3D210CC
	0x03D210B8 ADRP X0, 0x3D9000
	0x03D210BC LDR X0, [X0 + 0xC10]
	0x03D210C0 BL 0x1C16CF4
	0x03D210C4 MOVZ W8, 0x1
	0x03D210C8 STRB W8, [X21 + 0xA74]
	0x03D210CC LDR X8, [X19]
	0x03D210D0 MOVZ W1, 0x1
	0x03D210D4 MOV X0, X19
	0x03D210D8 LDP X9, X2, [X8 + 0x188]
	0x03D210DC BLR X9
	0x03D210E0 LDR X0, [X20]
	0x03D210E4 LDR W8, [X0 + 0xE0]
	0x03D210E8 CBNZ W8, 0x3D210F0
	0x03D210EC BL 0x1C16DFC
	0x03D210F0 MOV X0, X19
	0x03D210F4 LDP X20, X19, [X31 + 0x10]
	0x03D210F8 MOV X1, X31
	0x03D210FC LDP X30, X21, [X31], #0x20
	0x03D21100 B 0x33B3E9C
	0x03D21104 STP X30, X21, [X31 - 0x20]!
	0x03D21108 STP X20, X19, [X31 + 0x10]
	0x03D2110C ADRP X21, 0x6C6000
	0x03D21110 LDRB W8, [X21 + 0xA75]
	0x03D21114 MOV W20, W1
	0x03D21118 MOV X19, X0
	0x03D2111C TBNZ X8, 0x0, 0x3D21134
	0x03D21120 ADRP X0, 0x3FC000
	0x03D21124 LDR X0, [X0 + 0x240]
	0x03D21128 BL 0x1C16CF4
	0x03D2112C MOVZ W8, 0x1
	0x03D21130 STRB W8, [X21 + 0xA75]
	0x03D21134 LDRB W8, [X19 + 0x38]
	0x03D21138 CBNZ W8, 0x3D21170
	0x03D2113C TBZ X20, 0x0, 0x3D21168
	0x03D21140 ADRP X8, 0x3FC000
	0x03D21144 LDR X8, [X8 + 0x240]
	0x03D21148 LDR X20, [X19 + 0x20]
	0x03D2114C LDR X0, [X8]
	0x03D21150 LDR W8, [X0 + 0xE0]
	0x03D21154 CBNZ W8, 0x3D2115C
	0x03D21158 BL 0x1C16DFC
	0x03D2115C MOV X0, X20
	0x03D21160 MOV X1, X31
	0x03D21164 BL 0x3DE1000
	0x03D21168 MOVZ W8, 0x1
	0x03D2116C STRB W8, [X19 + 0x38]
	0x03D21170 LDP X20, X19, [X31 + 0x10]
	0x03D21174 LDP X30, X21, [X31], #0x20
	0x03D21178 RET
	0x03D2117C STR X30, [X31 - 0x20]!
	0x03D21180 STP X20, X19, [X31 + 0x10]
	0x03D21184 MOV W19, W1
	0x03D21188 MOV X1, X31
	0x03D2118C MOV X20, X0
	0x03D21190 BL 0x33BDD8C
	0x03D21194 MOVZ W8, 0x3
	0x03D21198 STP W19, W8, [X20 + 0x10]
	0x03D2119C MOV X0, X20
	0x03D211A0 LDP X20, X19, [X31 + 0x10]
	0x03D211A4 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x6C8000
	013 Move X27, 0x445000
	014 Move X25, 0x445000
	015 Move X26, 0x3D4000
	016 Move W8, [X28+2664]
	017 Move X27, [X27+1024]
	018 Move X25, [X25+1032]
	019 Move X26, [X26+2600]
	020 Move W20, W3
	021 Move X21, X2
	022 Move X22, X1
	023 Move X19, X0
	024 Move X24, X1
	025 ShiftRight X24, 32
	026 And X24, X24, 0x7FFFFFFF
	027 Move X23, X2
	028 ShiftRight X23, 32
	029 And X23, X23, 0x7FFFFFFF
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {48}
	034 Move X0, 0x3D4000
	035 Move X0, [X0+2600]
	036 Call 0x1C17CF4
	037 Move X0, 0x445000
	038 Move X0, [X0+1032]
	039 Call 0x1C17CF4
	040 Move X0, 0x445000
	041 Move X0, [X0+1024]
	042 Call 0x1C17CF4
	043 Move X0, 0x3FD000
	044 Move X0, [X0+576]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X28+2664], W8
	048 Move X0, [X27]
	049 Move X27, 0x3FD000
	050 Move X27, [X27+576]
	051 Call 0x1C17F10
	052 Move X1, [X25]
	053 Move X25, X0
	054 Call List`1<Object>..ctor, X0
	055 Move X0, X19
	056 Move X1, X31
	057 Move [X19+56], X25
	058 Call Object..ctor, X0
	059 Move X0, [X26]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CSET not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CSET not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W10, [X0+224]
	066 And W8, W8, W9
	067 NotImplemented "Instruction CSET not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CSET not yet implemented."
	070 And W8, W9, W8
	071 And W25, W11, W8
	072 Compare W10, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move W0, W25
	076 Move X1, X31
	077 Call Debug.Assert, X0
	078 Move X0, [X27]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move W0, W22
	084 Move X1, X31
	085 Call UIRUtility.GetNextPow2, X0
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, [X27]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move W0, W24
	093 Move X1, X31
	094 Call UIRUtility.GetNextPow2, X0
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, [X27]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move W0, W21
	102 Move X1, X31
	103 Call UIRUtility.GetNextPow2, X0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, [X27]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move W0, W23
	111 Move X1, X31
	112 Call UIRUtility.GetNextPow2, X0
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CSET not yet implemented."
	115 Move W23, W31
	116 Move X0, [X26]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move W0, W23
	122 Move X1, X31
	123 Call Debug.Assert, X0
	124 NotImplemented "Instruction ORN not yet implemented."
	125 Move W0, W8
	126 ShiftRight W0, 31
	127 And W0, W0, 0x7FFFFFFF
	128 Move X1, X31
	129 Call Debug.Assert, X0
	130 Move X0, [X19+56]
	131 Move X1, X22
	132 Move X2, X21
	133 Move [X19+16], X22
	134 Move [X19+24], X21
	135 Move [X19+40], W20
	136 Call Allocator2D.BuildAreas, X0, X1, X2
	137 Move X0, [X19+56]
	138 Move W1, W20
	139 Call Allocator2D.ComputeMaxAllocSize, X0, X1
	140 Move [X19+32], X0
	141 Move X0, X0
	142 ShiftRight X0, 32
	143 And X0, X0, 0x7FFFFFFF
	144 Move W1, W20
	145 Call Allocator2D.BuildRowArray, X0, X1
	146 Move [X19+48], X0
	147 Move X20, [X31+80]
	148 Move X19, [X31+88]
	149 Move X22, [X31+64]
	150 Move X21, [X31+72]
	151 Move X24, [X31+48]
	152 Move X23, [X31+56]
	153 Move X26, [X31+32]
	154 Move X25, [X31+40]
	155 Move X28, [X31+16]
	156 Move X27, [X31+24]
	157 Move X30, [X31+96]
	158 Return 

Method: System.Boolean TryAllocate(System.Int32 width, System.Int32 height, out UnityEngine.UIElements.UIR.Allocator2D/Alloc2D alloc2D)

Disassembly:
	0x03D21560 MOV X22, X31
	0x03D21564 B 0x3D215F0
	0x03D21568 MOVZ W8, 0x437F0000
	0x03D2156C SCVTF S0, W23
	0x03D21570 FMOV S1, W8
	0x03D21574 FDIV S1, S0, S1
	0x03D21578 FMOV S0, W31
	0x03D2157C FMOV S2, W31
	0x03D21580 FMOV S3, W31
	0x03D21584 MOV X0, X25
	0x03D21588 MOV W1, W31
	0x03D2158C MOV W2, W24
	0x03D21590 MOV X27, X25
	0x03D21594 BL 0x3D216EC
	0x03D21598 MOVZ W3, 0x1
	0x03D2159C B 0x3D215A4
	0x03D215A0 MOV W3, W31
	0x03D215A4 LDR X21, [X31 + 0x18]
	0x03D215A8 CBZ X22, 0x3D21520
	0x03D215AC LDP W8, W9, [X22 + 0x28]
	0x03D215B0 LDP W1, W2, [X22 + 0x20]
	0x03D215B4 MOV X0, X27
	0x03D215B8 MOV W4, W24
	0x03D215BC SUB W8, W8, 0x1
	0x03D215C0 SUB W9, W9, 0x1
	0x03D215C4 SCVTF S11, W8
	0x03D215C8 SCVTF S12, W9
	0x03D215CC ADD W25, W3, 0x1
	0x03D215D0 BL 0x3D21794
	0x03D215D4 FCVTZS W1, S11
	0x03D215D8 FCVTZS W2, S12
	0x03D215DC MOV X0, X27
	0x03D215E0 MOV W3, W25
	0x03D215E4 MOV W4, W24
	0x03D215E8 BL 0x3D21794
	0x03D215EC LDR X22, [X22 + 0x30]
	0x03D215F0 LDR X8, [X31 + 0x8]
	0x03D215F4 CMP X8, X28
	0x03D215F8 B.EQ 0x3D21614
	0x03D215FC LDR W8, [X21 + 0x18]
	0x03D21600 ADD X28, X28, 0x1
	0x03D21604 ADD X20, X20, 0x20
	0x03D21608 CMP X28, X8
	0x03D2160C B.CC 0x3D21438
	0x03D21610 BL 0x1C16F28
	0x03D21614 LDR X9, [X31]
	0x03D21618 LDP X20, X19, [X31 + 0xA0]
	0x03D2161C LDP X22, X21, [X31 + 0x90]
	0x03D21620 LDP X24, X23, [X31 + 0x80]
	0x03D21624 LDP X26, X25, [X31 + 0x70]
	0x03D21628 LDP X28, X27, [X31 + 0x60]
	0x03D2162C LDP X29, X30, [X31 + 0x50]
	0x03D21630 LDP D9, D8, [X31 + 0x40]
	0x03D21634 LDP D11, D10, [X31 + 0x30]
	0x03D21638 LDR V12, [X31 + 0x20]
	0x03D2163C MOVZ W8, 0x1
	0x03D21640 STRB W8, [X9 + 0x39]
	0x03D21644 ADD X31, X31, 0xB0
	0x03D21648 RET
	0x03D2164C ADRP X10, 0x3FE000
	0x03D21650 LDP W9, W8, [X25 + 0x10]
	0x03D21654 LDR X10, [X10 + 0xAF8]
	0x03D21658 MUL W1, W9, W8
	0x03D2165C LDR X0, [X10]
	0x03D21660 BL 0x1C16D6C
	0x03D21664 LDP W9, W8, [X25 + 0x10]
	0x03D21668 STR X0, [X25 + 0x28]
	0x03D2166C MUL W20, W9, W8
	0x03D21670 CMP W20, 0x1
	0x03D21674 STP W8, W9, [X25 + 0x30]
	0x03D21678 B.LT 0x3D213F4
	0x03D2167C MOV X24, X0
	0x03D21680 FMOV S0, W31
	0x03D21684 FMOV S1, W31
	0x03D21688 FMOV S2, W31
	0x03D2168C FMOV S3, 1
	0x03D21690 MOV X0, X31
	0x03D21694 BL 0x1E43664
	0x03D21698 CBZ X24, 0x3D216E8
	0x03D2169C MOV W8, W20
	0x03D216A0 MOV X19, X31
	0x03D216A4 SUB X20, X8, 0x1
	0x03D216A8 LDR W8, [X24 + 0x18]
	0x03D216AC CMP X19, X8
	0x03D216B0 B.CS 0x3D21610
	0x03D216B4 ADD X8, X24, X19, 0x2, LSL
	0x03D216B8 CMP X20, X19
	0x03D216BC STR W0, [X8 + 0x20]
	0x03D216C0 B.EQ 0x3D213F4
	0x03D216C4 LDR X24, [X27]
	0x03D216C8 FMOV S0, W31
	0x03D216CC FMOV S1, W31
	0x03D216D0 FMOV S2, W31
	0x03D216D4 FMOV S3, 1
	0x03D216D8 MOV X0, X31
	0x03D216DC ADD X19, X19, 0x1
	0x03D216E0 BL 0x1E43664
	0x03D216E4 CBNZ X24, 0x3D216A8
	0x03D216E8 BL 0x1C16F20
	0x03D216EC STR X30, [X31 - 0x10]!
	0x03D216F0 LDR X8, [X0]
	0x03D216F4 CBZ X8, 0x3D2178C
	0x03D216F8 LDR W9, [X0 + 0x8]
	0x03D216FC LDR W10, [X8 + 0x18]
	0x03D21700 MADD W9, W9, W2, W1
	0x03D21704 CMP W9, W10
	0x03D21708 B.CS 0x3D21790
	0x03D2170C MOVZ W10, 0x437F0000
	0x03D21710 FMOV S5, W10
	0x03D21714 FMOV S4, 0.5
	0x03D21718 FMUL S3, S3, S5
	0x03D2171C FMUL S2, S2, S5
	0x03D21720 FADD S3, S3, S4
	0x03D21724 FMUL S1, S1, S5
	0x03D21728 FADD S2, S2, S4
	0x03D2172C FCVTZS W10, S3
	0x03D21730 FCMP S3, 0x0
	0x03D21734 FMUL S0, S0, S5
	0x03D21738 FADD S1, S1, S4
	0x03D2173C FCVTZS W11, S2
	0x03D21740 CSEL W10, W10, W10, MI
	0x03D21744 FCMP S2, 0x0
	0x03D21748 FADD S0, S0, S4
	0x03D2174C FCVTZS W12, S1
	0x03D21750 CSEL W11, W11, W11, MI
	0x03D21754 FCMP S1, 0x0
	0x03D21758 FCVTZS W13, S0
	0x03D2175C CSEL W12, W12, W12, MI
	0x03D21760 FCMP S0, 0x0
	0x03D21764 AND W12, W12, 0xFF
	0x03D21768 CSEL W13, W13, W13, MI
	0x03D2176C AND W11, W11, 0xFF
	0x03D21770 BFM W13, W12, 0x18, 0x7
	0x03D21774 BFM W13, W11, 0x10, 0x7
	0x03D21778 BFM W13, W10, 0x8, 0x7
	0x03D2177C ADD X8, X8, W9, 0x2, SXTW
	0x03D21780 STR W13, [X8 + 0x20]
	0x03D21784 LDR X30, [X31], #0x10
	0x03D21788 RET
	0x03D2178C BL 0x1C16F20
	0x03D21790 BL 0x1C16F28
	0x03D21794 STR X30, [X31 - 0x10]!
	0x03D21798 LDR X8, [X0]
	0x03D2179C CBZ X8, 0x3D2181C
	0x03D217A0 LDR W9, [X0 + 0x8]
	0x03D217A4 LDR W10, [X8 + 0x18]
	0x03D217A8 MADD W9, W9, W4, W3
	0x03D217AC CMP W9, W10
	0x03D217B0 B.CS 0x3D21820
	0x03D217B4 MOVZ W10, 0x8081
	0x03D217B8 MOVK W10, 0x80800000
	0x03D217BC MOVZ W11, 0x8081
	0x03D217C0 MOVK W11, 0x80800000
	0x03D217C4 SMADDL X10, X2, X10, X31
	0x03D217C8 SMADDL X11, X1, X11, X31
	0x03D217CC UBFM X10, X10, 0x20, 0x3F
	0x03D217D0 UBFM X11, X11, 0x20, 0x3F
	0x03D217D4 ADD W10, W10, W2
	0x03D217D8 ADD W11, W11, W1
	0x03D217DC SBFM W12, W10, 0x7, 0x1F
	0x03D217E0 ADD W10, W12, W10, 0x1F, LSR
	0x03D217E4 SBFM W12, W11, 0x7, 0x1F
	0x03D217E8 ADD W11, W12, W11, 0x1F, LSR
	0x03D217EC SUB W12, W10, W10, 0x8, LSL
	0x03D217F0 AND W13, W11, 0xFF
	0x03D217F4 ADD W12, W12, W2
	0x03D217F8 SUB W11, W11, W11, 0x8, LSL
	0x03D217FC BFM W13, W10, 0x10, 0x7
	0x03D21800 ADD W11, W11, W1
	0x03D21804 BFM W13, W12, 0x8, 0x7
	0x03D21808 BFM W13, W11, 0x18, 0x7
	0x03D2180C ADD X8, X8, W9, 0x2, SXTW
	0x03D21810 STR W13, [X8 + 0x20]
	0x03D21814 LDR X30, [X31], #0x10
	0x03D21818 RET
	0x03D2181C BL 0x1C16F20
	0x03D21820 BL 0x1C16F28
	0x03D21824 LDRB W0, [X0 + 0x39]
	0x03D21828 RET
	0x03D2182C AND W8, W1, 0x1
	0x03D21830 STRB W8, [X0 + 0x39]
	0x03D21834 RET
	0x03D21838 STP X30, X19, [X31 - 0x10]!
	0x03D2183C LDRB W8, [X0 + 0x38]
	0x03D21840 MOV X19, X0
	0x03D21844 CBZ W8, 0x3D21858
	0x03D21848 MOV X0, X19
	0x03D2184C MOV X1, X31
	0x03D21850 LDP X30, X19, [X31], #0x10
	0x03D21854 B 0x3D909FC
	0x03D21858 LDRB W8, [X19 + 0x39]
	0x03D2185C CBZ W8, 0x3D21890
	0x03D21860 MOV X0, X19
	0x03D21864 BL 0x3D2189C
	0x03D21868 LDR X0, [X19 + 0x20]
	0x03D2186C CBZ X0, 0x3D21898
	0x03D21870 LDR X1, [X19 + 0x28]
	0x03D21874 MOV X2, X31
	0x03D21878 BL 0x3C1C7B0
	0x03D2187C LDR X0, [X19 + 0x20]
	0x03D21880 CBZ X0, 0x3D21898
	0x03D21884 MOV X1, X31
	0x03D21888 BL 0x3C1C540
	0x03D2188C STRB W31, [X19 + 0x39]
	0x03D21890 LDP X30, X19, [X31], #0x10
	0x03D21894 RET
	0x03D21898 BL 0x1C16F20
	0x03D2189C STR X30, [X31 - 0x30]!
	0x03D218A0 STP X22, X21, [X31 + 0x10]
	0x03D218A4 STP X20, X19, [X31 + 0x20]
	0x03D218A8 ADRP X21, 0x6C6000
	0x03D218AC ADRP X20, 0x3D2000
	0x03D218B0 LDRB W8, [X21 + 0xA79]
	0x03D218B4 LDR X20, [X20 + 0x598]
	0x03D218B8 MOV X19, X0
	0x03D218BC TBNZ X8, 0x0, 0x3D218F8
	0x03D218C0 ADRP X0, 0x443000
	0x03D218C4 LDR X0, [X0 + 0x4A0]
	0x03D218C8 BL 0x1C16CF4
	0x03D218CC ADRP X0, 0x3D2000
	0x03D218D0 LDR X0, [X0 + 0x598]
	0x03D218D4 BL 0x1C16CF4
	0x03D218D8 ADRP X0, 0x3FC000
	0x03D218DC LDR X0, [X0 + 0x250]
	0x03D218E0 BL 0x1C16CF4
	0x03D218E4 ADRP X0, 0x443000
	0x03D218E8 LDR X0, [X0 + 0x4A8]
	0x03D218EC BL 0x1C16CF4
	0x03D218F0 MOVZ W8, 0x1
	0x03D218F4 STRB W8, [X21 + 0xA79]
	0x03D218F8 LDR X0, [X20]
	0x03D218FC LDR X20, [X19 + 0x20]
	0x03D21900 LDR W8, [X0 + 0xE0]
	0x03D21904 CBNZ W8, 0x3D2190C
	0x03D21908 BL 0x1C16DFC
	0x03D2190C MOV X0, X20
	0x03D21910 MOV X1, X31
	0x03D21914 MOV X2, X31
	0x03D21918 BL 0x3C354F8
	0x03D2191C TBNZ X0, 0x0, 0x3D219E4
	0x03D21920 ADRP X8, 0x3FC000
	0x03D21924 LDP W22, W21, [X19 + 0x10]
	0x03D21928 LDR X8, [X8 + 0x250]
	0x03D2192C LDR X0, [X8]
	0x03D21930 BL 0x1C16F10
	0x03D21934 MOVZ W3, 0x5
	0x03D21938 MOVZ W5, 0x1
	0x03D2193C MOV W1, W21
	0x03D21940 MOV W2, W22
	0x03D21944 MOV W4, W31
	0x03D21948 MOV X6, X31
	0x03D2194C MOV X20, X0
	0x03D21950 BL 0x3C1C0EC
	0x03D21954 CBZ X20, 0x3D219F4
	0x03D21958 MOVZ W1, 0x3D
	0x03D2195C MOV X0, X20
	0x03D21960 MOV X2, X31
	0x03D21964 BL 0x3C396EC
	0x03D21968 ADRP X21, 0x443000
	0x03D2196C LDR X21, [X21 + 0x4A0]
	0x03D21970 LDR X0, [X21]
	0x03D21974 LDR W8, [X0 + 0xE0]
	0x03D21978 CBNZ W8, 0x3D21984
	0x03D2197C BL 0x1C16DFC
	0x03D21980 LDR X0, [X21]
	0x03D21984 LDR X8, [X0 + 0xB8]
	0x03D21988 ADD X0, X31, 0xC
	0x03D2198C MOV X1, X31
	0x03D21990 LDR W9, [X8 + 0x10]
	0x03D21994 ADD W10, W9, 0x1
	0x03D21998 STR W10, [X8 + 0x10]
	0x03D2199C STR W9, [X31 + 0xC]
	0x03D219A0 BL 0x337B6E0
	0x03D219A4 ADRP X8, 0x443000
	0x03D219A8 LDR X8, [X8 + 0x4A8]
	0x03D219AC MOV X1, X0
	0x03D219B0 MOV X2, X31
	0x03D219B4 LDR X8, [X8]
	0x03D219B8 MOV X0, X8
	0x03D219BC BL 0x321B938
	0x03D219C0 MOV X1, X0
	0x03D219C4 MOV X0, X20
	0x03D219C8 MOV X2, X31
	0x03D219CC BL 0x3C38A84
	0x03D219D0 MOV X0, X20
	0x03D219D4 MOV W1, W31
	0x03D219D8 MOV X2, X31
	0x03D219DC BL 0x3C1AB5C
	0x03D219E0 STR X20, [X19 + 0x20]
	0x03D219E4 LDP X20, X19, [X31 + 0x20]
	0x03D219E8 LDP X22, X21, [X31 + 0x10]
	0x03D219EC LDR X30, [X31], #0x30
	0x03D219F0 RET
	0x03D219F4 BL 0x1C16F20
	0x03D219F8 STR X30, [X31 - 0x30]!
	0x03D219FC STP X22, X21, [X31 + 0x10]
	0x03D21A00 STP X20, X19, [X31 + 0x20]
	0x03D21A04 ADRP X21, 0x6C6000
	0x03D21A08 ADRP X22, 0x443000
	0x03D21A0C ADRP X19, 0x443000
	0x03D21A10 ADRP X20, 0x443000

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X28
	005 Move [X31+232], X27
	006 Move [X31+240], X26
	007 Move [X31+248], X25
	008 Move [X31+256], X24
	009 Move [X31+264], X23
	010 Move [X31+272], X22
	011 Move [X31+280], X21
	012 Move [X31+288], X20
	013 Move [X31+296], X19
	014 Move X20, 0x6C7000
	015 Move W8, [X20+2665]
	016 Move X19, X3
	017 Move W25, W2
	018 Move W21, W1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {47}
	024 Move X0, 0x444000
	025 Move X0, [X0+1080]
	026 Call 0x1C17CF4
	027 Move X0, 0x3D3000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x444000
	031 Move X0, [X0+1088]
	032 Call 0x1C17CF4
	033 Move X0, 0x444000
	034 Move X0, [X0+1056]
	035 Call 0x1C17CF4
	036 Move X0, 0x444000
	037 Move X0, [X0+1064]
	038 Call 0x1C17CF4
	039 Move X0, 0x444000
	040 Move X0, [X0+1096]
	041 Call 0x1C17CF4
	042 Move X0, 0x3FD000
	043 Move X0, [X0+576]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+2665], W8
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W8, [X22+32]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W8, [X22+36]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X8, 0x3FD000
	054 Move X8, [X8+576]
	055 Move X0, [X8]
	056 Move W8, [X22+40]
	057 Move W9, [X0+224]
	058 Subtract W8, W25, W8
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CSINC not yet implemented."
	061 Compare W9, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move W0, W23
	065 Move X1, X31
	066 Call UIRUtility.GetNextPow2Exp, X0
	067 Move X8, [X22+48]
	068 Compare X8, 0
	069 JumpIfEqual {154}
	070 Move W9, [X8+24]
	071 Move W23, W0
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X26, W23
	074 Add X8, X8, X26
	075 Move X24, [X8+32]
	076 Add X27, X31, 176
	077 Compare X24, 0
	078 JumpIfEqual {99}
	079 Add X8, X31, 112
	080 Add X20, X8, 8
	081 Move W8, [X24+32]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, [X24+48]
	084 Compare X0, 0
	085 JumpIfEqual {154}
	086 Add X8, X31, 112
	087 Move W1, W21
	088 Move X2, X31
	089 Call BestFitAllocator.Allocate, X0, X1
	090 Move W9, [X31+112]
	091 Move W8, [X31+116]
	092 Move V0, [X20]
	093 Move [X27+1], V0
	094 Compare W8, 0
	095 JumpIfNotEqual {174}
	096 Move X24, [X24+80]
	097 Compare X24, 0
	098 JumpIfNotEqual {81}
	099 Move [X31+24], X26
	100 Move X8, 0x3D3000
	101 Move X8, [X8+2600]
	102 Move W10, 1
	103 NotImplemented "Instruction LSLV not yet implemented."
	104 Move [X31+32], X23
	105 Move X0, [X8]
	106 Move W8, [X22+40]
	107 Move W9, [X0+224]
	108 Add W24, W8, W10
	109 Compare W9, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CSET not yet implemented."
	114 Move X1, X31
	115 Move [X31+20], W25
	116 Call Debug.Assert, X0
	117 Move X0, [X22+56]
	118 Compare X0, 0
	119 JumpIfEqual {154}
	120 Move X23, 0x444000
	121 Move X23, [X23+1064]
	122 Add X8, X31, 112
	123 Move W25, W31
	124 Add X28, X8, 8
	125 Move W8, [X0+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X2, [X23]
	128 Move W1, W25
	129 Call List`1<Object>.get_Item, X0, X1
	130 Compare X0, 0
	131 JumpIfEqual {154}
	132 Move W8, [X0+28]
	133 Move X26, X0
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move W8, [X26+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, [X26+32]
	138 Compare X0, 0
	139 JumpIfEqual {154}
	140 Add X8, X31, 112
	141 Move W1, W24
	142 Move X2, X31
	143 Call BestFitAllocator.Allocate, X0, X1
	144 Move W29, [X31+112]
	145 Move W20, [X31+116]
	146 Move V0, [X28]
	147 Move [X27], V0
	148 Compare W20, 0
	149 JumpIfNotEqual {187}
	150 Move X0, [X22+56]
	151 Add W25, W25, 1
	152 Compare X0, 0
	153 JumpIfNotEqual {125}
	154 Call 0x1C17F20
	155 Move W0, W31
	156 NotImplemented "Instruction MOVI not yet implemented."
	157 Move [X19+16], V0
	158 Move [X19+24], V0
	159 Move [X19], V0
	160 Move X20, [X31+288]
	161 Move X19, [X31+296]
	162 Move X22, [X31+272]
	163 Move X21, [X31+280]
	164 Move X24, [X31+256]
	165 Move X23, [X31+264]
	166 Move X26, [X31+240]
	167 Move X25, [X31+248]
	168 Move X28, [X31+224]
	169 Move X27, [X31+232]
	170 Move X29, [X31+208]
	171 Move X30, [X31+216]
	172 Add X31, X31, 304
	173 Return X0
	174 Move V0, [X27+1]
	175 NotImplemented "Instruction MOVI not yet implemented."
	176 Add X0, X31, 112
	177 Add X2, X31, 88
	178 Move X1, X24
	179 Move W3, W21
	180 Move W4, W25
	181 Move [X31+128], V1
	182 Move [X31+136], V1
	183 Move [X31+96], V0
	184 Move [X31+104], V1
	185 Move [X31+88], W9
	186 Move [X31+92], W8
	187 Move X23, 0x444000
	188 Move X23, [X23+1096]
	189 Move X0, [X23]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {195}
	193 Call 0x1C17DFC
	194 Move X0, [X23]
	195 Move X8, [X0+184]
	196 Move X0, [X8]
	197 Compare X0, 0
	198 JumpIfEqual {154}
	199 Move X8, 0x444000
	200 Move X8, [X8+1088]
	201 Move X1, [X8]
	202 Call 0x2EF1E28, X0
	203 Move V0, [X27]
	204 Move [X31+4], V0
	205 Compare X0, 0
	206 JumpIfEqual {154}
	207 Move [X0+56], W29
	208 Move [X0+60], W20
	209 Move V0, [X31+4]
	210 Move X8, 0x444000
	211 Move X8, [X8+1080]
	212 Move X25, X0
	213 Move [X0+4], V0
	214 Move W27, [X26+24]
	215 Move X0, [X8]
	216 Call 0x1C17F10
	217 Move W1, W27
	218 Move X2, X31
	219 Move X28, X0
	220 Call BestFitAllocator..ctor, X0, X1
	221 Move [X25+40], X26
	222 Move [X25+48], X28
	223 Move X8, [X22+48]
	224 Compare X8, 0
	225 JumpIfEqual {154}
	226 Move W9, [X8+24]
	227 Move X10, [X31+32]
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X9, [X31+24]
	230 Add X8, X8, X9
	231 Move X8, [X8+32]
	232 Move X20, 0x6C4000
	233 Move [X25+80], X8
	234 Move W8, [X20+3467]
	235 Compare W8, 0
	236 JumpIfNotEqual {242}
	237 Move X0, 0x3D3000
	238 Move X0, [X0+1448]
	239 Call 0x1C17CF4
	240 Move W8, 1
	241 Move [X20+3467], W8
	242 Move X20, 0x3D3000
	243 Move X20, [X20+1448]
	244 Move W27, [X26+16]
	245 Move W23, [X26+24]
	246 Move X0, [X20]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1C17DFC
	251 Add W1, W23, W27
	252 Move W0, W27
	253 Move X2, X31
	254 Call Math.Min, X0, X1
	255 Move X23, 0x6C4000
	256 Move W8, [X23+3468]
	257 Move W27, W0
	258 Compare W8, 0
	259 JumpIfNotEqual {265}
	260 Move X0, 0x3D3000
	261 Move X0, [X0+1448]
	262 Call 0x1C17CF4
	263 Move W8, 1
	264 Move [X23+3468], W8
	265 Move X0, [X20]
	266 Move W28, [X26+20]
	267 Move W20, [X26+28]
	268 Move W8, [X0+224]
	269 Compare W8, 0
	270 JumpIfNotEqual {272}
	271 Call 0x1C17DFC
	272 Add W1, W20, W28
	273 Move W0, W28
	274 Move X2, X31
	275 Call Math.Min, X0, X1
	276 Move W8, [X26+24]
	277 Add W9, W0, W29
	278 Move [X25+24], W27
	279 Move [X25+28], W9
	280 Move [X25+32], W8
	281 Move [X25+36], W24
	282 Move X20, [X22+48]
	283 Compare X20, 0
	284 JumpIfEqual {154}
	285 Move X8, [X20]
	286 Move X0, X25
	287 Move X1, [X8+64]
	288 Call 0x1C17E00
	289 Move X10, [X31+24]
	290 Move X9, [X31+32]
	291 Compare X0, 0
	292 JumpIfEqual {341}
	293 Move W8, [X20+24]
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Add X8, X20, X10
	296 Move [X8+32], X25
	297 Move X0, [X25+48]
	298 Compare X0, 0
	299 JumpIfEqual {154}
	300 Add X8, X31, 112
	301 Move W1, W21
	302 Move X2, X31
	303 Call BestFitAllocator.Allocate, X0, X1
	304 Move X8, 0x3D3000
	305 NotImplemented "Instruction LDUR not yet implemented."
	306 Move X8, [X8+2600]
	307 Move W22, [X31+112]
	308 Move W20, [X31+116]
	309 Move [X31+10], V0
	310 Move X0, [X8]
	311 Move W8, [X0+224]
	312 Compare W8, 0
	313 JumpIfNotEqual {315}
	314 Call 0x1C17DFC
	315 NotImplemented "Instruction CMP not yet implemented."
	316 NotImplemented "Instruction CSET not yet implemented."
	317 Move X1, X31
	318 Call Debug.Assert, X0
	319 Move V0, [X31+10]
	320 Move W4, [X31+20]
	321 NotImplemented "Instruction MOVI not yet implemented."
	322 Move [X31+128], V1
	323 Move [X31+136], V1
	324 Move [X31+7], V1
	325 Move [X31+48], V0
	326 Move [X31+40], W22
	327 Move [X31+44], W20
	328 Add X0, X31, 112
	329 Add X2, X31, 40
	330 Move X1, X25
	331 Move W3, W21
	332 Call Alloc2D..ctor, X0, X1, X2, X3, X4
	333 Move V1, [X31+128]
	334 Move V0, [X31+144]
	335 Move V2, [X31+7]
	336 Move W0, 1
	337 Move [X19+16], V1
	338 Move [X19+24], V0
	339 Move [X19], V2
	340 Call 0x1C17F28
	341 Call 0x1C17F44
	342 Move X1, X31
	343 Call 0x1C17DEC

Method: System.Void Free(UnityEngine.UIElements.UIR.Allocator2D/Alloc2D alloc2D)

Disassembly:
	0x03D21B1C TBNZ X8, 0x0, 0x3D21B34
	0x03D21B20 ADRP X0, 0x443000
	0x03D21B24 LDR X0, [X0 + 0x4C8]
	0x03D21B28 BL 0x1C16CF4
	0x03D21B2C MOVZ W8, 0x1
	0x03D21B30 STRB W8, [X21 + 0xA7D]
	0x03D21B34 LDR X0, [X20 + 0x18]
	0x03D21B38 CBZ X0, 0x3D21B58
	0x03D21B3C ADRP X8, 0x443000
	0x03D21B40 LDR X8, [X8 + 0x4C8]
	0x03D21B44 MOV X1, X19
	0x03D21B48 LDP X20, X19, [X31 + 0x10]
	0x03D21B4C LDR X2, [X8]
	0x03D21B50 LDP X30, X21, [X31], #0x20
	0x03D21B54 B 0x24026C0
	0x03D21B58 BL 0x1C16F20
	0x03D21B5C STP X30, X21, [X31 - 0x20]!
	0x03D21B60 STP X20, X19, [X31 + 0x10]
	0x03D21B64 ADRP X21, 0x6C6000
	0x03D21B68 LDRB W8, [X21 + 0xA7E]
	0x03D21B6C MOV X19, X1
	0x03D21B70 MOV X20, X0
	0x03D21B74 TBNZ X8, 0x0, 0x3D21B8C
	0x03D21B78 ADRP X0, 0x443000
	0x03D21B7C LDR X0, [X0 + 0x4D0]
	0x03D21B80 BL 0x1C16CF4
	0x03D21B84 MOVZ W8, 0x1
	0x03D21B88 STRB W8, [X21 + 0xA7E]
	0x03D21B8C LDR X0, [X20 + 0x20]
	0x03D21B90 CBZ X0, 0x3D21BB0
	0x03D21B94 ADRP X8, 0x443000
	0x03D21B98 LDR X8, [X8 + 0x4D0]
	0x03D21B9C MOV X1, X19
	0x03D21BA0 LDP X20, X19, [X31 + 0x10]
	0x03D21BA4 LDR X2, [X8]
	0x03D21BA8 LDP X30, X21, [X31], #0x20
	0x03D21BAC B 0x2402CC4
	0x03D21BB0 BL 0x1C16F20
	0x03D21BB4 SUB X31, X31, 0xB0
	0x03D21BB8 STR X30, [X31 + 0x60]
	0x03D21BBC STP X26, X25, [X31 + 0x70]
	0x03D21BC0 STP X24, X23, [X31 + 0x80]
	0x03D21BC4 STP X22, X21, [X31 + 0x90]
	0x03D21BC8 STP X20, X19, [X31 + 0xA0]
	0x03D21BCC ADRP X20, 0x6C6000
	0x03D21BD0 LDRB W8, [X20 + 0xA7F]
	0x03D21BD4 MOV X19, X0
	0x03D21BD8 TBNZ X8, 0x0, 0x3D21C44
	0x03D21BDC ADRP X0, 0x443000
	0x03D21BE0 LDR X0, [X0 + 0x4D8]
	0x03D21BE4 BL 0x1C16CF4
	0x03D21BE8 ADRP X0, 0x443000
	0x03D21BEC LDR X0, [X0 + 0x4E0]
	0x03D21BF0 BL 0x1C16CF4
	0x03D21BF4 ADRP X0, 0x443000
	0x03D21BF8 LDR X0, [X0 + 0x4E8]
	0x03D21BFC BL 0x1C16CF4
	0x03D21C00 ADRP X0, 0x443000
	0x03D21C04 LDR X0, [X0 + 0x4F0]
	0x03D21C08 BL 0x1C16CF4
	0x03D21C0C ADRP X0, 0x443000
	0x03D21C10 LDR X0, [X0 + 0x4F8]
	0x03D21C14 BL 0x1C16CF4
	0x03D21C18 ADRP X0, 0x443000
	0x03D21C1C LDR X0, [X0 + 0x500]
	0x03D21C20 BL 0x1C16CF4
	0x03D21C24 ADRP X0, 0x443000
	0x03D21C28 LDR X0, [X0 + 0x508]
	0x03D21C2C BL 0x1C16CF4
	0x03D21C30 ADRP X0, 0x443000
	0x03D21C34 LDR X0, [X0 + 0x510]
	0x03D21C38 BL 0x1C16CF4
	0x03D21C3C MOVZ W8, 0x1
	0x03D21C40 STRB W8, [X20 + 0xA7F]
	0x03D21C44 MOVI V0.2D, 0x0
	0x03D21C48 STP X31, X31, [X31 + 0x30]
	0x03D21C4C STP V0, V0, [X31 + 0x40]
	0x03D21C50 STP X31, X31, [X31 + 0x20]
	0x03D21C54 LDR X0, [X19 + 0x10]
	0x03D21C58 CBZ X0, 0x3D21D74
	0x03D21C5C ADRP X8, 0x443000
	0x03D21C60 LDR X8, [X8 + 0x4F8]
	0x03D21C64 LDR X1, [X8]
	0x03D21C68 BL 0x2403410
	0x03D21C6C CBZ X0, 0x3D21D74
	0x03D21C70 ADRP X8, 0x443000
	0x03D21C74 LDR X8, [X8 + 0x4F0]
	0x03D21C78 ADRP X24, 0x443000
	0x03D21C7C ADRP X25, 0x443000
	0x03D21C80 LDR X24, [X24 + 0x4E0]
	0x03D21C84 LDR X25, [X25 + 0x508]
	0x03D21C88 LDR X1, [X8]
	0x03D21C8C ADRP X26, 0x443000
	0x03D21C90 ADRP X22, 0x443000
	0x03D21C94 ADRP X23, 0x443000
	0x03D21C98 LDR X26, [X26 + 0x510]
	0x03D21C9C LDR X22, [X22 + 0x500]
	0x03D21CA0 LDR X23, [X23 + 0x4D8]
	0x03D21CA4 ADD X8, X31, 0x0
	0x03D21CA8 BL 0x2F20938
	0x03D21CAC LDP V0, V1, [X31]
	0x03D21CB0 STP V0, V1, [X31 + 0x40]
	0x03D21CB4 LDR X1, [X24]
	0x03D21CB8 ADD X0, X31, 0x40
	0x03D21CBC BL 0x2BB19F4
	0x03D21CC0 TBZ X0, 0x0, 0x3D21D1C
	0x03D21CC4 LDP X0, X1, [X31 + 0x50]
	0x03D21CC8 LDR X2, [X25]
	0x03D21CCC STP X0, X1, [X31 + 0x30]
	0x03D21CD0 LDR X20, [X19 + 0x28]
	0x03D21CD4 BL 0x22232AC
	0x03D21CD8 MOV X1, X31
	0x03D21CDC BL 0x33C693C
	0x03D21CE0 LDR X1, [X26]
	0x03D21CE4 MOV X21, X0
	0x03D21CE8 ADD X0, X31, 0x30
	0x03D21CEC BL 0x2406438
	0x03D21CF0 MOV W1, W0
	0x03D21CF4 MOV X0, X21
	0x03D21CF8 BL 0x3D1FD80
	0x03D21CFC CBZ X20, 0x3D21D70
	0x03D21D00 MOV X2, X0
	0x03D21D04 MOV X3, X1
	0x03D21D08 MOV X0, X20
	0x03D21D0C MOV X1, X2
	0x03D21D10 MOV X2, X3
	0x03D21D14 BL 0x3D21DF0

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+144], X30
	003 Move [X31+152], X23
	004 Move [X31+160], X22
	005 Move [X31+168], X21
	006 Move [X31+176], X20
	007 Move [X31+184], X19
	008 Move X19, 0x6C7000
	009 Move W8, [X19+2666]
	010 Move X21, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x444000
	017 Move X0, [X0+1104]
	018 Call 0x1C17CF4
	019 Move X0, 0x444000
	020 Move X0, [X0+1096]
	021 Call 0x1C17CF4
	022 Move X0, 0x3FD000
	023 Move X0, [X0+576]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+2666], W8
	027 Move W8, [X21+28]
	028 Compare W8, 0
	029 JumpIfEqual {138}
	030 Move X19, [X21+16]
	031 Compare X19, 0
	032 JumpIfEqual {106}
	033 Move V1, [X21+16]
	034 Move V0, [X21+32]
	035 Move V2, [X21]
	036 Move X0, [X19+48]
	037 Move [X31+112], V1
	038 Move [X31+120], V0
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 Move X8, [X31+136]
	041 Move [X31+6], V2
	042 Move [X31+4], V0
	043 Move [X31+80], X8
	044 Compare X0, 0
	045 JumpIfEqual {106}
	046 Move V0, [X31+4]
	047 Move X8, [X31+80]
	048 Add X1, X31, 32
	049 Move X2, X31
	050 Move [X31+2], V0
	051 Move [X31+48], X8
	052 Call BestFitAllocator.Free, X0, X1
	053 Move X0, [X19+48]
	054 Compare X0, 0
	055 JumpIfEqual {106}
	056 Move X1, X31
	057 Call BestFitAllocator.get_highWatermark, X0
	058 Compare W0, 0
	059 JumpIfNotEqual {138}
	060 Move X8, [X19+40]
	061 Compare X8, 0
	062 JumpIfEqual {106}
	063 Move X0, [X8+32]
	064 Move X8, [X19+72]
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Move [X31+112], X8
	067 Move [X31+6], V0
	068 Compare X0, 0
	069 JumpIfEqual {106}
	070 Move V0, [X31+6]
	071 Move X8, [X31+112]
	072 Add X1, X31, 0
	073 Move X2, X31
	074 Move [X31], V0
	075 Move [X31+16], X8
	076 Call BestFitAllocator.Free, X0, X1
	077 Move X8, 0x3FD000
	078 Move X8, [X8+576]
	079 Move W21, [X19+36]
	080 Move W22, [X20+40]
	081 Move X0, [X8]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Subtract W0, W21, W22
	087 Move X1, X31
	088 Call UIRUtility.GetNextPow2Exp, X0
	089 Move X23, [X20+48]
	090 Compare X23, 0
	091 JumpIfEqual {106}
	092 Move W8, [X23+24]
	093 Move W20, W0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add X22, X23, W20
	096 Add X22, X22, 32
	097 Move X9, [X22]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Compare X9, 0
	100 JumpIfEqual {106}
	101 Move X8, [X9+80]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X9, X8
	104 Compare X8, 0
	105 JumpIfNotEqual {101}
	106 Call 0x1C17F20
	107 Move X8, [X19+80]
	108 Move [X9+80], X8
	109 Move X21, [X19+80]
	110 Compare X21, 0
	111 JumpIfEqual {119}
	112 Move X8, [X23]
	113 Move X0, X21
	114 Move X1, [X8+64]
	115 Call 0x1C17E00
	116 Compare X0, 0
	117 JumpIfEqual {147}
	118 Move W8, [X23+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move [X22], X21
	121 Move X20, 0x444000
	122 Move X20, [X20+1096]
	123 Move X0, [X20]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {129}
	127 Call 0x1C17DFC
	128 Move X0, [X20]
	129 Move X8, [X0+184]
	130 Move X0, [X8]
	131 Compare X0, 0
	132 JumpIfEqual {106}
	133 Move X8, 0x444000
	134 Move X8, [X8+1104]
	135 Move X1, X19
	136 Move X2, [X8]
	137 Call 0x2EF1E90, X0, X1
	138 Move X20, [X31+176]
	139 Move X19, [X31+184]
	140 Move X22, [X31+160]
	141 Move X21, [X31+168]
	142 Move X30, [X31+144]
	143 Move X23, [X31+152]
	144 Add X31, X31, 192
	145 Return 
	146 Call 0x1C17F28
	147 Call 0x1C17F44
	148 Move X1, X31
	149 Call 0x1C17DEC

Method: System.Void BuildAreas(System.Collections.Generic.List`1<UnityEngine.UIElements.UIR.Allocator2D/Area> areas, UnityEngine.Vector2Int minSize, UnityEngine.Vector2Int maxSize)

Disassembly:
	0x03D211A8 B 0x3D211AC
	0x03D211AC STP X30, X21, [X31 - 0x20]!
	0x03D211B0 STP X20, X19, [X31 + 0x10]
	0x03D211B4 ADRP X20, 0x6C6000
	0x03D211B8 LDRB W8, [X20 + 0xA76]
	0x03D211BC MOV X19, X0
	0x03D211C0 TBNZ X8, 0x0, 0x3D211E4
	0x03D211C4 ADRP X0, 0x443000
	0x03D211C8 LDR X0, [X0 + 0x438]
	0x03D211CC BL 0x1C16CF4
	0x03D211D0 ADRP X0, 0x3FC000
	0x03D211D4 LDR X0, [X0 + 0x240]
	0x03D211D8 BL 0x1C16CF4
	0x03D211DC MOVZ W8, 0x1
	0x03D211E0 STRB W8, [X20 + 0xA76]
	0x03D211E4 LDRB W8, [X19 + 0x38]
	0x03D211E8 CBZ W8, 0x3D21200
	0x03D211EC MOV X0, X19
	0x03D211F0 LDP X20, X19, [X31 + 0x10]
	0x03D211F4 MOV X1, X31
	0x03D211F8 LDP X30, X21, [X31], #0x20
	0x03D211FC B 0x3D909FC
	0x03D21200 ADRP X8, 0x443000
	0x03D21204 LDR W20, [X19 + 0x10]
	0x03D21208 LDR X8, [X8 + 0x438]
	0x03D2120C LDR X0, [X8]
	0x03D21210 BL 0x1C16F10
	0x03D21214 MOV W1, W20
	0x03D21218 MOV X2, X31
	0x03D2121C MOV X21, X0
	0x03D21220 BL 0x3D34148
	0x03D21224 STR X21, [X19 + 0x18]
	0x03D21228 ADRP X8, 0x3FC000
	0x03D2122C LDR X8, [X8 + 0x240]
	0x03D21230 LDR X20, [X19 + 0x20]
	0x03D21234 LDR X0, [X8]
	0x03D21238 LDR W8, [X0 + 0xE0]
	0x03D2123C CBNZ W8, 0x3D21244
	0x03D21240 BL 0x1C16DFC
	0x03D21244 MOV X0, X20
	0x03D21248 MOV X1, X31
	0x03D2124C BL 0x3DE1000
	0x03D21250 STP X31, X31, [X19 + 0x28]
	0x03D21254 STRB W31, [X19 + 0x39]
	0x03D21258 LDP X20, X19, [X31 + 0x10]
	0x03D2125C LDP X30, X21, [X31], #0x20
	0x03D21260 RET
	0x03D21264 LDR X0, [X0 + 0x20]
	0x03D21268 RET
	0x03D2126C SUB X31, X31, 0x70
	0x03D21270 STP X30, X23, [X31 + 0x40]
	0x03D21274 STP X22, X21, [X31 + 0x50]
	0x03D21278 STP X20, X19, [X31 + 0x60]
	0x03D2127C ADRP X22, 0x6C6000
	0x03D21280 ADRP X23, 0x3D2000
	0x03D21284 MOV X19, X8
	0x03D21288 LDRB W8, [X22 + 0xA77]
	0x03D2128C LDR X23, [X23 + 0xA28]
	0x03D21290 MOV W20, W1
	0x03D21294 MOV X21, X0
	0x03D21298 TBNZ X8, 0x0, 0x3D212B0
	0x03D2129C ADRP X0, 0x3D2000
	0x03D212A0 LDR X0, [X0 + 0xA28]
	0x03D212A4 BL 0x1C16CF4
	0x03D212A8 MOVZ W8, 0x1
	0x03D212AC STRB W8, [X22 + 0xA77]
	0x03D212B0 LDR X0, [X23]
	0x03D212B4 LDR W8, [X0 + 0xE0]
	0x03D212B8 CBNZ W8, 0x3D212C0
	0x03D212BC BL 0x1C16DFC
	0x03D212C0 CMP W20, 0x0
	0x03D212C4 CSET W0, GT
	0x03D212C8 MOV X1, X31
	0x03D212CC BL 0x3C06E58
	0x03D212D0 LDRB W8, [X21 + 0x38]
	0x03D212D4 CBZ W8, 0x3D212F0
	0x03D212D8 MOV X0, X21
	0x03D212DC MOV X1, X31
	0x03D212E0 BL 0x3D909FC
	0x03D212E4 STP X31, X31, [X31]
	0x03D212E8 STR X31, [X31 + 0x10]
	0x03D212EC B 0x3D21320
	0x03D212F0 LDR X0, [X21 + 0x18]
	0x03D212F4 CBZ X0, 0x3D21344
	0x03D212F8 ADD X8, X31, 0x0
	0x03D212FC MOV W1, W20
	0x03D21300 MOV X2, X31
	0x03D21304 BL 0x3D342E8
	0x03D21308 LDR X8, [X31 + 0x10]
	0x03D2130C LDR V0, [X31]
	0x03D21310 STR X8, [X31 + 0x30]
	0x03D21314 STR V0, [X31 + 0x2]
	0x03D21318 STR V0, [X31]
	0x03D2131C STR X8, [X31 + 0x10]
	0x03D21320 LDR X8, [X31 + 0x10]
	0x03D21324 LDR V0, [X31]
	0x03D21328 LDP X22, X21, [X31 + 0x50]
	0x03D2132C LDP X30, X23, [X31 + 0x40]
	0x03D21330 STR X8, [X19 + 0x10]
	0x03D21334 STR V0, [X19]
	0x03D21338 LDP X20, X19, [X31 + 0x60]
	0x03D2133C ADD X31, X31, 0x70
	0x03D21340 RET
	0x03D21344 BL 0x1C16F20
	0x03D21348 SUB X31, X31, 0xB0
	0x03D2134C STR D12, [X31 + 0x20]
	0x03D21350 STP D11, D10, [X31 + 0x30]
	0x03D21354 STP D9, D8, [X31 + 0x40]
	0x03D21358 STP X29, X30, [X31 + 0x50]
	0x03D2135C STP X28, X27, [X31 + 0x60]
	0x03D21360 STP X26, X25, [X31 + 0x70]
	0x03D21364 STP X24, X23, [X31 + 0x80]
	0x03D21368 STP X22, X21, [X31 + 0x90]
	0x03D2136C STP X20, X19, [X31 + 0xA0]
	0x03D21370 ADRP X19, 0x6C6000
	0x03D21374 LDRB W8, [X19 + 0xA78]
	0x03D21378 MOV X22, X3
	0x03D2137C MOV X21, X2
	0x03D21380 MOV X23, X1
	0x03D21384 MOV X25, X0
	0x03D21388 TBNZ X8, 0x0, 0x3D213AC
	0x03D2138C ADRP X0, 0x3FE000
	0x03D21390 LDR X0, [X0 + 0xAF8]
	0x03D21394 BL 0x1C16CF4
	0x03D21398 ADRP X0, 0x3D2000
	0x03D2139C LDR X0, [X0 + 0xA28]
	0x03D213A0 BL 0x1C16CF4
	0x03D213A4 MOVZ W8, 0x1
	0x03D213A8 STRB W8, [X19 + 0xA78]
	0x03D213AC LDRB W8, [X25 + 0x38]
	0x03D213B0 CBZ W8, 0x3D213E8
	0x03D213B4 MOV X0, X25
	0x03D213B8 LDP X20, X19, [X31 + 0xA0]
	0x03D213BC LDP X22, X21, [X31 + 0x90]
	0x03D213C0 LDP X24, X23, [X31 + 0x80]
	0x03D213C4 LDP X26, X25, [X31 + 0x70]
	0x03D213C8 LDP X28, X27, [X31 + 0x60]
	0x03D213CC LDP X29, X30, [X31 + 0x50]
	0x03D213D0 LDP D9, D8, [X31 + 0x40]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X23, 0x6C7000
	014 Move X24, 0x444000
	015 Move W8, [X23+2667]
	016 Move X24, [X24+1040]
	017 Move X19, X2
	018 Move X21, X1
	019 Move X20, X0
	020 Move X22, X1
	021 ShiftRight X22, 32
	022 And X22, X22, 0x7FFFFFFF
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0x444000
	028 Move X0, [X0+1040]
	029 Call 0x1C17CF4
	030 Move X0, 0x444000
	031 Move X0, [X0+1048]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+2667], W8
	035 Move X0, [X24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Move X22, X25
	039 NotImplemented "Instruction BFM not yet implemented."
	040 Call 0x1C17F10
	041 Move X1, X31
	042 Move X2, X22
	043 Move X21, X0
	044 Call Area..ctor, X0, X1
	045 Compare X20, 0
	046 JumpIfEqual {159}
	047 Move X26, 0x444000
	048 Move X26, [X26+1048]
	049 Move W10, [X20+28]
	050 Move X8, [X20+16]
	051 Move X9, [X26]
	052 Add W10, W10, 1
	053 Move [X20+28], W10
	054 Compare X8, 0
	055 JumpIfEqual {159}
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Move W11, [X8+24]
	058 Move X27, X19
	059 ShiftRight X27, 32
	060 And X27, X27, 0x7FFFFFFF
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add W9, W10, 1
	063 Add X8, X8, X10
	064 Move [X20+24], W9
	065 Move [X8+32], X21
	066 Move W28, W25
	067 Move X8, [X9+32]
	068 Move X0, X20
	069 Move X1, X21
	070 Move X8, [X8+192]
	071 Move X2, [X8+112]
	072 Call List`1<Object>.AddWithResize, X0, X1
	073 Move W28, W25
	074 Move X29, X28
	075 ShiftRight X29, 32
	076 And X29, X29, 0x7FFFFFFF
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, [X24]
	079 Move W22, W25
	080 Or X23, X29, X22
	081 Call 0x1C17F10
	082 Move X1, X22
	083 Move X2, X23
	084 Move X21, X0
	085 Call Area..ctor, X0, X1
	086 Move W10, [X20+28]
	087 Move X8, [X20+16]
	088 Move X9, [X26]
	089 Add W10, W10, 1
	090 Move [X20+28], W10
	091 Compare X8, 0
	092 JumpIfEqual {159}
	093 NotImplemented "Instruction LDRSW not yet implemented."
	094 Move W11, [X8+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Add W9, W10, 1
	097 Add X8, X8, X10
	098 Move [X20+24], W9
	099 Move [X8+32], X21
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X8, [X9+32]
	102 Move X0, X20
	103 Move X1, X21
	104 Move X8, [X8+192]
	105 Move X2, [X8+112]
	106 Call List`1<Object>.AddWithResize, X0, X1
	107 Move W25, W25
	108 ShiftRight W25, 31
	109 And W25, W25, 0x3FFFFFFF
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X0, [X24]
	112 Move W22, W25
	113 Move W8, W28
	114 Move X23, X8
	115 ShiftRight X23, 32
	116 And X23, X23, 0x7FFFFFFF
	117 NotImplemented "Instruction BFM not yet implemented."
	118 Call 0x1C17F10
	119 Move X1, X23
	120 Move X2, X22
	121 Move X21, X0
	122 Call Area..ctor, X0, X1
	123 Move W10, [X20+28]
	124 Move X8, [X20+16]
	125 Move X9, [X26]
	126 Add W10, W10, 1
	127 Move [X20+28], W10
	128 Compare X8, 0
	129 JumpIfEqual {159}
	130 NotImplemented "Instruction LDRSW not yet implemented."
	131 Move W11, [X8+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Add W9, W10, 1
	134 Add X8, X8, X10
	135 Move [X20+24], W9
	136 Move [X8+32], X21
	137 Move X8, [X9+32]
	138 Move X0, X20
	139 Move X1, X21
	140 Move X8, [X8+192]
	141 Move X2, [X8+112]
	142 Call List`1<Object>.AddWithResize, X0, X1
	143 Move W28, W28
	144 ShiftRight W28, 31
	145 And W28, W28, 0x3FFFFFFF
	146 Move X20, [X31+80]
	147 Move X19, [X31+88]
	148 Move X22, [X31+64]
	149 Move X21, [X31+72]
	150 Move X24, [X31+48]
	151 Move X23, [X31+56]
	152 Move X26, [X31+32]
	153 Move X25, [X31+40]
	154 Move X28, [X31+16]
	155 Move X27, [X31+24]
	156 Move X29, [X31+96]
	157 Move X30, [X31+104]
	158 Return 
	159 Call 0x1C17F20

Method: UnityEngine.Vector2Int ComputeMaxAllocSize(System.Collections.Generic.List`1<UnityEngine.UIElements.UIR.Allocator2D/Area> areas, System.Int32 rowHeightBias)

Disassembly:
	0x03D213D4 LDP D11, D10, [X31 + 0x30]
	0x03D213D8 LDR V12, [X31 + 0x20]
	0x03D213DC MOV X1, X31
	0x03D213E0 ADD X31, X31, 0xB0
	0x03D213E4 B 0x3D909FC
	0x03D213E8 MOV X27, X25
	0x03D213EC LDR X8, [X27 + 0x28]!
	0x03D213F0 CBZ X8, 0x3D2164C
	0x03D213F4 STR X25, [X31]
	0x03D213F8 CBZ X21, 0x3D216E8
	0x03D213FC LDR X8, [X21 + 0x18]
	0x03D21400 CMP W8, 0x1
	0x03D21404 B.LT 0x3D21614
	0x03D21408 AND X8, X8, 0x0
	0x03D2140C CBZ X8, 0x3D21610
	0x03D21410 LDR W9, [X23]
	0x03D21414 SUB X8, X8, 0x1
	0x03D21418 MOV X28, X31
	0x03D2141C ADD X20, X21, 0x3C
	0x03D21420 STP X8, X9, [X31 + 0x8]
	0x03D21424 ADRP X8, 0xFFFFFFFFFCDC8000
	0x03D21428 LDR V8, [X8 + 0xF80]
	0x03D2142C FMOV S9, 0.5
	0x03D21430 FMOV S10, 1
	0x03D21434 STR X21, [X31 + 0x18]
	0x03D21438 LDR X8, [X31 + 0x10]
	0x03D2143C MOV X25, X27
	0x03D21440 ADD X24, X8, X28
	0x03D21444 CBZ X22, 0x3D21458
	0x03D21448 LDR W8, [X22 + 0x1C]
	0x03D2144C CMP W24, W8
	0x03D21450 CSET W27, EQ
	0x03D21454 B 0x3D2145C
	0x03D21458 MOVZ W27, 0x1
	0x03D2145C ADRP X8, 0x3D2000
	0x03D21460 LDP W21, W23, [X20 - 0x1C]
	0x03D21464 LDP S11, S12, [X20 - 0x14]
	0x03D21468 LDR X8, [X8 + 0xA28]
	0x03D2146C LDP W29, W19, [X20 - 0x4]
	0x03D21470 LDR X0, [X8]
	0x03D21474 LDP W26, W8, [X20 - 0xC]
	0x03D21478 STR W8, [X31 + 0x2C]
	0x03D2147C LDR W8, [X0 + 0xE0]
	0x03D21480 CBNZ W8, 0x3D21488
	0x03D21484 BL 0x1C16DFC
	0x03D21488 MOV W0, W27
	0x03D2148C MOV X1, X31
	0x03D21490 BL 0x3C06E58
	0x03D21494 CBZ W21, 0x3D21568
	0x03D21498 CMP W21, 0x1
	0x03D2149C MOV X27, X25
	0x03D214A0 B.NE 0x3D215A0
	0x03D214A4 ADRP X8, 0x6C0000
	0x03D214A8 LDRB W8, [X8 + 0xA48]
	0x03D214AC LDR X21, [X31 + 0x18]
	0x03D214B0 CBNZ W8, 0x3D214CC
	0x03D214B4 ADRP X0, 0x3DA000
	0x03D214B8 LDR X0, [X0 + 0xF08]
	0x03D214BC BL 0x1C16CF4
	0x03D214C0 ADRP X8, 0x6C0000
	0x03D214C4 MOVZ W9, 0x1
	0x03D214C8 STRB W9, [X8 + 0xA48]
	0x03D214CC ADRP X8, 0x3DA000
	0x03D214D0 LDR X8, [X8 + 0xF08]
	0x03D214D4 SCVTF S4, W23

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6C7000
	009 Move W8, [X21+2668]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x444000
	017 Move X0, [X0+1056]
	018 Call 0x1C17CF4
	019 Move X0, 0x444000
	020 Move X0, [X0+1064]
	021 Call 0x1C17CF4
	022 Move X0, 0x3FD000
	023 Move X0, [X0+576]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2668], W8
	027 Compare X20, 0
	028 JumpIfEqual {75}
	029 Move W8, [X20+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X24, 0x444000
	032 Move X24, [X24+1064]
	033 Move W21, W31
	034 Move W22, W31
	035 Move W23, W31
	036 Move X2, [X24]
	037 Move X0, X20
	038 Move W1, W21
	039 Call List`1<Object>.get_Item, X0, X1
	040 Compare X0, 0
	041 JumpIfEqual {75}
	042 Move W8, [X0+24]
	043 Move W9, [X0+28]
	044 Move W10, [X20+24]
	045 Add W21, W21, 1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSEL not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W20, W23
	052 Move X20, X31
	053 Move W22, W31
	054 Move X8, 0x3FD000
	055 Move X8, [X8+576]
	056 Move X0, [X8]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Subtract W0, W22, W19
	062 Move X1, X31
	063 Call UIRUtility.GetPrevPow2, X0
	064 Add W8, W0, W19
	065 NotImplemented "Instruction BFM not yet implemented."
	066 Move X0, X20
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X24, [X31+16]
	072 Move X23, [X31+24]
	073 Move X30, [X31+64]
	074 Return X0
	075 Call 0x1C17F20

Method: UnityEngine.UIElements.UIR.Allocator2D/Row[] BuildRowArray(System.Int32 maxRowHeight, System.Int32 rowHeightBias)

Disassembly:
	0x03D214D8 MOV X0, X27
	0x03D214DC MOV W1, W31
	0x03D214E0 LDR X8, [X8]
	0x03D214E4 MOV W2, W24
	0x03D214E8 LDR X8, [X8 + 0xB8]
	0x03D214EC LDP S0, S1, [X8 + 0x8]
	0x03D214F0 MOVZ W8, 0x437F0000
	0x03D214F4 FMOV S5, W8
	0x03D214F8 FADD S0, S11, S0
	0x03D214FC FADD S1, S12, S1
	0x03D21500 FMUL S2, S0, S9
	0x03D21504 FMUL S0, S1, S9
	0x03D21508 FSUB S3, S10, S0
	0x03D2150C FDIV S1, S4, S5
	0x03D21510 MOV V0.16B, V8.16B
	0x03D21514 BL 0x3D216EC
	0x03D21518 MOVZ W3, 0x1
	0x03D2151C CBNZ X22, 0x3D215AC
	0x03D21520 LDR W2, [X31 + 0x2C]
	0x03D21524 SUB W8, W29, 0x1
	0x03D21528 SUB W9, W19, 0x1
	0x03D2152C MOV X0, X27
	0x03D21530 MOV W1, W26
	0x03D21534 MOV W4, W24
	0x03D21538 SCVTF S11, W8
	0x03D2153C SCVTF S12, W9
	0x03D21540 ADD W22, W3, 0x1
	0x03D21544 BL 0x3D21794
	0x03D21548 FCVTZS W1, S11
	0x03D2154C FCVTZS W2, S12
	0x03D21550 MOV X0, X27
	0x03D21554 MOV W3, W22
	0x03D21558 MOV W4, W24
	0x03D2155C BL 0x3D21794

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6C7000
	007 Move X21, 0x3FD000
	008 Move W8, [X22+2669]
	009 Move X21, [X21+576]
	010 Move W19, W1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x444000
	017 Move X0, [X0+1072]
	018 Call 0x1C17CF4
	019 Move X0, 0x3FD000
	020 Move X0, [X0+576]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2669], W8
	024 Move X0, [X21]
	025 Move X21, 0x444000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1072]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Subtract W0, W20, W19
	032 Move X1, X31
	033 Call UIRUtility.GetNextPow2Exp, X0
	034 Move X8, [X21]
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Add W1, W0, 1
	040 Move X0, X8
	041 Move X30, [X31+48]
	042 Call 0x1C17D6C
	043 Return X0

