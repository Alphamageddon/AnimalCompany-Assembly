Type: UnityEngine.UIElements.UIR.GradientSettingsAtlas

Method: System.Int32 get_length()

Disassembly:
	0x03D2207C LDR X1, [X22]
	0x03D22080 BL 0x240299C

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Boolean get_disposed()

Disassembly:
	0x03D22084 LDP X20, X19, [X31 + 0xA0]
	0x03D22088 LDP X22, X21, [X31 + 0x90]

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_disposed(System.Boolean value)

Disassembly:
	0x03D2208C LDP X24, X23, [X31 + 0x80]
	0x03D22090 LDP X26, X25, [X31 + 0x70]
	0x03D22094 LDR X30, [X31 + 0x60]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+56], W8
	003 Return 

Method: System.Void Dispose()

Disassembly:
	0x03D22098 ADD X31, X31, 0xB0
	0x03D2209C RET
	0x03D220A0 BL 0x1C16F20
	0x03D220A4 BL 0x1C16F20
	0x03D220A8 B 0x3D220C0
	0x03D220AC B 0x3D220C0
	0x03D220B0 B 0x3D220C0
	0x03D220B4 B 0x3D220C0
	0x03D220B8 B 0x3D220C0
	0x03D220BC B 0x3D220C0
	0x03D220C0 CMP W1, 0x1
	0x03D220C4 B.NE 0x3D220EC
	0x03D220C8 BL 0x3EB1AD0
	0x03D220CC LDR X20, [X0]
	0x03D220D0 BL 0x3EB1AE0
	0x03D220D4 LDR X1, [X23]
	0x03D220D8 ADD X0, X31, 0x40
	0x03D220DC BL 0x2BB1630
	0x03D220E0 CBZ X20, 0x3D22058
	0x03D220E4 MOV X0, X20
	0x03D220E8 BL 0x1C16F18
	0x03D220EC MOV X19, X0
	0x03D220F0 MOV X20, X31
	0x03D220F4 B 0x3D220FC
	0x03D220F8 MOV X19, X0
	0x03D220FC LDR X1, [X23]
	0x03D22100 ADD X0, X31, 0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6C6000
	006 Move X20, 0x3D9000
	007 Move W8, [X21+2676]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3D9000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2676], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+392]
	023 Move X2, [X8+400]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03D22104 BL 0x2BB1630
	0x03D22108 CBNZ X20, 0x3D22114
	0x03D2210C MOV X0, X19
	0x03D22110 BL 0x1D2C690
	0x03D22114 MOV X0, X20
	0x03D22118 BL 0x1C16F18
	0x03D2211C BL 0x1990590
	0x03D22120 SUB X31, X31, 0xB0
	0x03D22124 STR X30, [X31 + 0x60]
	0x03D22128 STP X26, X25, [X31 + 0x70]
	0x03D2212C STP X24, X23, [X31 + 0x80]
	0x03D22130 STP X22, X21, [X31 + 0x90]
	0x03D22134 STP X20, X19, [X31 + 0xA0]
	0x03D22138 ADRP X20, 0x6C5000
	0x03D2213C LDRB W8, [X20 + 0xA81]
	0x03D22140 MOV X19, X0
	0x03D22144 TBNZ X8, 0x0, 0x3D221B0
	0x03D22148 ADRP X0, 0x442000
	0x03D2214C LDR X0, [X0 + 0x560]
	0x03D22150 BL 0x1C16CF4
	0x03D22154 ADRP X0, 0x442000
	0x03D22158 LDR X0, [X0 + 0x568]
	0x03D2215C BL 0x1C16CF4
	0x03D22160 ADRP X0, 0x442000
	0x03D22164 LDR X0, [X0 + 0x570]
	0x03D22168 BL 0x1C16CF4
	0x03D2216C ADRP X0, 0x442000
	0x03D22170 LDR X0, [X0 + 0x578]
	0x03D22174 BL 0x1C16CF4
	0x03D22178 ADRP X0, 0x442000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6C6000
	006 Move W8, [X21+2677]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3FC000
	014 Move X0, [X0+576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2677], W8
	018 Move W8, [X19+56]
	019 Compare W8, 0
	020 JumpIfNotEqual {38}
	021 Move TEMP, X20
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {36}
	025 Move X8, 0x3FC000
	026 Move X8, [X8+576]
	027 Move X20, [X19+32]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Call UIRUtility.Destroy, X0
	036 Move W8, 1
	037 Move [X19+56], W8
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 

Method: System.Void .ctor(System.Int32 length = 4096)

Disassembly:
	0x03D2217C LDR X0, [X0 + 0x580]
	0x03D22180 BL 0x1C16CF4
	0x03D22184 ADRP X0, 0x442000
	0x03D22188 LDR X0, [X0 + 0x588]
	0x03D2218C BL 0x1C16CF4
	0x03D22190 ADRP X0, 0x442000
	0x03D22194 LDR X0, [X0 + 0x590]
	0x03D22198 BL 0x1C16CF4
	0x03D2219C ADRP X0, 0x442000
	0x03D221A0 LDR X0, [X0 + 0x598]
	0x03D221A4 BL 0x1C16CF4
	0x03D221A8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move W8, 3
	009 Move [X20+16], W19
	010 Move [X20+20], W8
	011 Move X0, X20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]

Method: System.Void Reset()

Disassembly:
	0x03D221AC STRB W8, [X20 + 0xA81]
	0x03D221B0 MOVI V0.2D, 0x0
	0x03D221B4 STP X31, X31, [X31 + 0x30]
	0x03D221B8 STP V0, V0, [X31 + 0x40]
	0x03D221BC STP X31, X31, [X31 + 0x20]
	0x03D221C0 LDR X0, [X19 + 0x20]
	0x03D221C4 CBZ X0, 0x3D222E0
	0x03D221C8 ADRP X8, 0x442000
	0x03D221CC LDR X8, [X8 + 0x580]
	0x03D221D0 LDR X1, [X8]
	0x03D221D4 BL 0x2402E0C
	0x03D221D8 CBZ X0, 0x3D222E0
	0x03D221DC ADRP X8, 0x442000
	0x03D221E0 LDR X8, [X8 + 0x578]
	0x03D221E4 ADRP X24, 0x442000
	0x03D221E8 ADRP X25, 0x442000
	0x03D221EC LDR X24, [X24 + 0x568]
	0x03D221F0 LDR X25, [X25 + 0x590]
	0x03D221F4 LDR X1, [X8]
	0x03D221F8 ADRP X26, 0x442000
	0x03D221FC ADRP X22, 0x442000
	0x03D22200 ADRP X23, 0x442000
	0x03D22204 LDR X26, [X26 + 0x598]
	0x03D22208 LDR X22, [X22 + 0x588]
	0x03D2220C LDR X23, [X23 + 0x560]
	0x03D22210 ADD X8, X31, 0x0
	0x03D22214 BL 0x2F1DE14
	0x03D22218 LDP V0, V1, [X31]
	0x03D2221C STP V0, V1, [X31 + 0x40]
	0x03D22220 LDR X1, [X24]
	0x03D22224 ADD X0, X31, 0x40
	0x03D22228 BL 0x2BB1814
	0x03D2222C TBZ X0, 0x0, 0x3D22288
	0x03D22230 LDP X0, X1, [X31 + 0x50]
	0x03D22234 LDR X2, [X25]
	0x03D22238 STP X0, X1, [X31 + 0x30]
	0x03D2223C LDR X20, [X19 + 0x28]
	0x03D22240 BL 0x222329C
	0x03D22244 MOV X1, X31
	0x03D22248 BL 0x33C693C
	0x03D2224C LDR X1, [X26]
	0x03D22250 MOV X21, X0
	0x03D22254 ADD X0, X31, 0x30
	0x03D22258 BL 0x2404A54
	0x03D2225C MOV W1, W0
	0x03D22260 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6C6000
	006 Move W8, [X20+2678]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x443000
	013 Move X0, [X0+1080]
	014 Call 0x1C17CF4
	015 Move X0, 0x3FC000
	016 Move X0, [X0+576]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2678], W8
	020 Move W8, [X19+56]
	021 Compare W8, 0
	022 JumpIfEqual {31}
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X1, X31
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call DisposeHelper.NotifyDisposedUsed, X0
	030 Return 
	031 Move X8, 0x443000
	032 Move W20, [X19+16]
	033 Move X8, [X8+1080]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move W1, W20
	037 Move X2, X31
	038 Move X21, X0
	039 Call BestFitAllocator..ctor, X0, X1
	040 Move [X19+24], X21
	041 Move X8, 0x3FC000
	042 Move X8, [X8+576]
	043 Move X20, [X19+32]
	044 Move X0, [X8]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X20
	050 Move X1, X31
	051 Call UIRUtility.Destroy, X0
	052 Move [X19+40], X31
	053 Move [X19+48], X31
	054 Move [X19+57], W31
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return 

Method: UnityEngine.Texture2D get_atlas()

Disassembly:
	0x03D22264 BL 0x3D1FEE0
	0x03D22268 CBZ X20, 0x3D222DC

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: UnityEngine.UIElements.UIR.Alloc Add(System.Int32 count)

Disassembly:
	0x03D2226C MOV X2, X0
	0x03D22270 MOV X3, X1
	0x03D22274 MOV X0, X20
	0x03D22278 MOV X1, X2
	0x03D2227C MOV X2, X3
	0x03D22280 BL 0x3D21DF0
	0x03D22284 B 0x3D22220
	0x03D22288 LDR X1, [X23]
	0x03D2228C ADD X0, X31, 0x40
	0x03D22290 BL 0x2BB1810
	0x03D22294 LDR X0, [X19 + 0x28]
	0x03D22298 CBZ X0, 0x3D222E0
	0x03D2229C BL 0x3D21E5C
	0x03D222A0 STP X0, X1, [X31 + 0x20]
	0x03D222A4 ADD X0, X31, 0x20
	0x03D222A8 MOV X1, X31
	0x03D222AC BL 0x3BFDCAC
	0x03D222B0 LDR X0, [X19 + 0x20]
	0x03D222B4 CBZ X0, 0x3D222E0
	0x03D222B8 LDR X1, [X22]
	0x03D222BC BL 0x2402F9C
	0x03D222C0 LDP X20, X19, [X31 + 0xA0]
	0x03D222C4 LDP X22, X21, [X31 + 0x90]
	0x03D222C8 LDP X24, X23, [X31 + 0x80]
	0x03D222CC LDP X26, X25, [X31 + 0x70]
	0x03D222D0 LDR X30, [X31 + 0x60]
	0x03D222D4 ADD X31, X31, 0xB0
	0x03D222D8 RET
	0x03D222DC BL 0x1C16F20
	0x03D222E0 BL 0x1C16F20
	0x03D222E4 B 0x3D222FC
	0x03D222E8 B 0x3D222FC
	0x03D222EC B 0x3D222FC
	0x03D222F0 B 0x3D222FC
	0x03D222F4 B 0x3D222FC
	0x03D222F8 B 0x3D222FC
	0x03D222FC CMP W1, 0x1
	0x03D22300 B.NE 0x3D22328
	0x03D22304 BL 0x3EB1AD0
	0x03D22308 LDR X20, [X0]
	0x03D2230C BL 0x3EB1AE0
	0x03D22310 LDR X1, [X23]
	0x03D22314 ADD X0, X31, 0x40
	0x03D22318 BL 0x2BB1810
	0x03D2231C CBZ X20, 0x3D22294
	0x03D22320 MOV X0, X20
	0x03D22324 BL 0x1C16F18
	0x03D22328 MOV X19, X0
	0x03D2232C MOV X20, X31
	0x03D22330 B 0x3D22338
	0x03D22334 MOV X19, X0
	0x03D22338 LDR X1, [X23]
	0x03D2233C ADD X0, X31, 0x40
	0x03D22340 BL 0x2BB1810
	0x03D22344 CBNZ X20, 0x3D22350

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X22, 0x6C6000
	009 Move X23, 0x3D2000
	010 Move X19, X8
	011 Move W8, [X22+2679]
	012 Move X23, [X23+2600]
	013 Move W20, W1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x3D2000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2679], W8
	024 Move X0, [X23]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Move X1, X31
	032 Call Debug.Assert, X0
	033 Move W8, [X21+56]
	034 Compare W8, 0
	035 JumpIfEqual {42}
	036 Move X0, X21
	037 Move X1, X31
	038 Call DisposeHelper.NotifyDisposedUsed, X0
	039 Move [X31], X31
	040 Move [X31+8], X31
	041 Move [X31+16], X31
	042 Move X0, [X21+24]
	043 Compare X0, 0
	044 JumpIfEqual {67}
	045 Add X8, X31, 0
	046 Move W1, W20
	047 Move X2, X31
	048 Call BestFitAllocator.Allocate, X0, X1
	049 Move X8, [X31+16]
	050 Move V0, [X31]
	051 Move [X31+48], X8
	052 Move [X31+2], V0
	053 Move [X31], V0
	054 Move [X31+16], X8
	055 Move X8, [X31+16]
	056 Move V0, [X31]
	057 Move X22, [X31+80]
	058 Move X21, [X31+88]
	059 Move X30, [X31+64]
	060 Move X23, [X31+72]
	061 Move [X19+16], X8
	062 Move [X19], V0
	063 Move X20, [X31+96]
	064 Move X19, [X31+104]
	065 Add X31, X31, 112
	066 Return X0
	067 Call 0x1C17F20

Method: System.Void Write(UnityEngine.UIElements.UIR.Alloc alloc, UnityEngine.UIElements.GradientSettings[] settings, UnityEngine.UIElements.UIR.GradientRemap remap)

Disassembly:
	0x03D22348 MOV X0, X19
	0x03D2234C BL 0x1D2C690
	0x03D22350 MOV X0, X20
	0x03D22354 BL 0x1C16F18
	0x03D22358 BL 0x1990590
	0x03D2235C LDRB W0, [X0 + 0x30]
	0x03D22360 RET
	0x03D22364 AND W8, W1, 0x1
	0x03D22368 STRB W8, [X0 + 0x30]
	0x03D2236C RET
	0x03D22370 STP X30, X21, [X31 - 0x20]!
	0x03D22374 STP X20, X19, [X31 + 0x10]
	0x03D22378 ADRP X21, 0x6C5000
	0x03D2237C ADRP X20, 0x3D8000
	0x03D22380 LDRB W8, [X21 + 0xA82]
	0x03D22384 LDR X20, [X20 + 0xC10]
	0x03D22388 MOV X19, X0
	0x03D2238C TBNZ X8, 0x0, 0x3D223A4
	0x03D22390 ADRP X0, 0x3D8000
	0x03D22394 LDR X0, [X0 + 0xC10]
	0x03D22398 BL 0x1C16CF4
	0x03D2239C MOVZ W8, 0x1
	0x03D223A0 STRB W8, [X21 + 0xA82]
	0x03D223A4 MOVZ W1, 0x1
	0x03D223A8 MOV X0, X19
	0x03D223AC BL 0x3D223D4
	0x03D223B0 LDR X0, [X20]
	0x03D223B4 LDR W8, [X0 + 0xE0]
	0x03D223B8 CBNZ W8, 0x3D223C0
	0x03D223BC BL 0x1C16DFC
	0x03D223C0 MOV X0, X19
	0x03D223C4 LDP X20, X19, [X31 + 0x10]
	0x03D223C8 MOV X1, X31
	0x03D223CC LDP X30, X21, [X31], #0x20
	0x03D223D0 B 0x33B3E9C
	0x03D223D4 STP X30, X21, [X31 - 0x20]!
	0x03D223D8 STP X20, X19, [X31 + 0x10]
	0x03D223DC ADRP X21, 0x6C5000
	0x03D223E0 LDRB W8, [X21 + 0xA83]
	0x03D223E4 MOV W20, W1
	0x03D223E8 MOV X19, X0
	0x03D223EC TBNZ X8, 0x0, 0x3D2241C
	0x03D223F0 ADRP X0, 0x442000
	0x03D223F4 LDR X0, [X0 + 0x5A0]
	0x03D223F8 BL 0x1C16CF4
	0x03D223FC ADRP X0, 0x442000
	0x03D22400 LDR X0, [X0 + 0x5A8]
	0x03D22404 BL 0x1C16CF4
	0x03D22408 ADRP X0, 0x442000
	0x03D2240C LDR X0, [X0 + 0x5B0]
	0x03D22410 BL 0x1C16CF4
	0x03D22414 MOVZ W8, 0x1
	0x03D22418 STRB W8, [X21 + 0xA83]
	0x03D2241C LDRB W8, [X19 + 0x30]
	0x03D22420 CBNZ W8, 0x3D22484
	0x03D22424 TBZ X20, 0x0, 0x3D2247C
	0x03D22428 LDR X0, [X19 + 0x10]
	0x03D2242C CBZ X0, 0x3D22490
	0x03D22430 ADRP X8, 0x442000
	0x03D22434 LDR X8, [X8 + 0x5A8]
	0x03D22438 LDR X1, [X8]
	0x03D2243C BL 0x24036B0
	0x03D22440 LDR X0, [X19 + 0x18]
	0x03D22444 CBZ X0, 0x3D22490
	0x03D22448 ADRP X8, 0x442000
	0x03D2244C LDR X8, [X8 + 0x5A0]
	0x03D22450 LDR X1, [X8]
	0x03D22454 BL 0x2402AAC
	0x03D22458 LDR X0, [X19 + 0x20]
	0x03D2245C CBZ X0, 0x3D22490
	0x03D22460 ADRP X8, 0x442000
	0x03D22464 LDR X8, [X8 + 0x5B0]
	0x03D22468 LDR X1, [X8]
	0x03D2246C BL 0x24030AC
	0x03D22470 LDR X0, [X19 + 0x28]
	0x03D22474 CBZ X0, 0x3D22490
	0x03D22478 BL 0x3D22494
	0x03D2247C MOVZ W8, 0x1
	0x03D22480 STRB W8, [X19 + 0x30]
	0x03D22484 LDP X20, X19, [X31 + 0x10]
	0x03D22488 LDP X30, X21, [X31], #0x20
	0x03D2248C RET
	0x03D22490 BL 0x1C16F20
	0x03D22494 STP X30, X21, [X31 - 0x20]!
	0x03D22498 STP X20, X19, [X31 + 0x10]
	0x03D2249C ADRP X21, 0x6C5000
	0x03D224A0 ADRP X20, 0x3D8000
	0x03D224A4 LDRB W8, [X21 + 0xA87]
	0x03D224A8 LDR X20, [X20 + 0xC10]
	0x03D224AC MOV X19, X0
	0x03D224B0 TBNZ X8, 0x0, 0x3D224C8
	0x03D224B4 ADRP X0, 0x3D8000
	0x03D224B8 LDR X0, [X0 + 0xC10]
	0x03D224BC BL 0x1C16CF4
	0x03D224C0 MOVZ W8, 0x1
	0x03D224C4 STRB W8, [X21 + 0xA87]
	0x03D224C8 MOVZ W1, 0x1
	0x03D224CC MOV X0, X19
	0x03D224D0 BL 0x3D22708
	0x03D224D4 LDR X0, [X20]
	0x03D224D8 LDR W8, [X0 + 0xE0]
	0x03D224DC CBNZ W8, 0x3D224E4
	0x03D224E0 BL 0x1C16DFC
	0x03D224E4 MOV X0, X19
	0x03D224E8 LDP X20, X19, [X31 + 0x10]
	0x03D224EC MOV X1, X31
	0x03D224F0 LDP X30, X21, [X31], #0x20
	0x03D224F4 B 0x33B3E9C
	0x03D224F8 STP X30, X27, [X31 - 0x50]!
	0x03D224FC STP X26, X25, [X31 + 0x10]
	0x03D22500 STP X24, X23, [X31 + 0x20]
	0x03D22504 STP X22, X21, [X31 + 0x30]
	0x03D22508 STP X20, X19, [X31 + 0x40]
	0x03D2250C ADRP X26, 0x6C5000
	0x03D22510 ADRP X27, 0x442000
	0x03D22514 ADRP X20, 0x442000
	0x03D22518 ADRP X25, 0x442000
	0x03D2251C ADRP X24, 0x442000
	0x03D22520 ADRP X23, 0x442000
	0x03D22524 ADRP X22, 0x442000
	0x03D22528 ADRP X21, 0x442000
	0x03D2252C LDR X27, [X27 + 0x5B8]
	0x03D22530 LDR X20, [X20 + 0x5C0]
	0x03D22534 LDRB W8, [X26 + 0xA84]
	0x03D22538 LDR X25, [X25 + 0x5C8]
	0x03D2253C LDR X24, [X24 + 0x5D0]
	0x03D22540 LDR X23, [X23 + 0x5D8]
	0x03D22544 LDR X22, [X22 + 0x5E0]
	0x03D22548 LDR X21, [X21 + 0x5E8]
	0x03D2254C MOV X19, X0
	0x03D22550 TBNZ X8, 0x0, 0x3D225B0
	0x03D22554 ADRP X0, 0x442000
	0x03D22558 LDR X0, [X0 + 0x5E8]
	0x03D2255C BL 0x1C16CF4
	0x03D22560 ADRP X0, 0x442000
	0x03D22564 LDR X0, [X0 + 0x5C0]
	0x03D22568 BL 0x1C16CF4
	0x03D2256C ADRP X0, 0x442000
	0x03D22570 LDR X0, [X0 + 0x5D0]
	0x03D22574 BL 0x1C16CF4
	0x03D22578 ADRP X0, 0x442000
	0x03D2257C LDR X0, [X0 + 0x5E0]
	0x03D22580 BL 0x1C16CF4
	0x03D22584 ADRP X0, 0x442000
	0x03D22588 LDR X0, [X0 + 0x5D8]
	0x03D2258C BL 0x1C16CF4
	0x03D22590 ADRP X0, 0x442000
	0x03D22594 LDR X0, [X0 + 0x5B8]
	0x03D22598 BL 0x1C16CF4
	0x03D2259C ADRP X0, 0x442000
	0x03D225A0 LDR X0, [X0 + 0x5C8]
	0x03D225A4 BL 0x1C16CF4
	0x03D225A8 MOVZ W8, 0x1
	0x03D225AC STRB W8, [X26 + 0xA84]
	0x03D225B0 LDR X0, [X27]
	0x03D225B4 BL 0x1C16F10
	0x03D225B8 LDR X2, [X20]
	0x03D225BC MOVZ W1, 0x40
	0x03D225C0 MOV X20, X0
	0x03D225C4 BL 0x24031C8
	0x03D225C8 STR X20, [X19 + 0x10]
	0x03D225CC LDR X0, [X25]
	0x03D225D0 BL 0x1C16F10
	0x03D225D4 LDR X2, [X24]
	0x03D225D8 MOVZ W1, 0x40
	0x03D225DC MOV X20, X0
	0x03D225E0 BL 0x24025C4
	0x03D225E4 STR X20, [X19 + 0x18]
	0x03D225E8 LDR X0, [X23]
	0x03D225EC BL 0x1C16F10
	0x03D225F0 LDR X2, [X22]
	0x03D225F4 MOVZ W1, 0x40
	0x03D225F8 MOV X20, X0
	0x03D225FC BL 0x2402BC8
	0x03D22600 STR X20, [X19 + 0x20]
	0x03D22604 LDR X0, [X21]
	0x03D22608 BL 0x1C16F10
	0x03D2260C MOVZ W1, 0x80
	0x03D22610 MOV X20, X0
	0x03D22614 BL 0x3D2263C
	0x03D22618 STR X20, [X19 + 0x28]
	0x03D2261C MOV X0, X19
	0x03D22620 LDP X20, X19, [X31 + 0x40]
	0x03D22624 LDP X22, X21, [X31 + 0x30]
	0x03D22628 LDP X24, X23, [X31 + 0x20]
	0x03D2262C LDP X26, X25, [X31 + 0x10]
	0x03D22630 MOV X1, X31
	0x03D22634 LDP X30, X27, [X31], #0x50
	0x03D22638 B 0x33BDD8C
	0x03D2263C SUB X31, X31, 0x40
	0x03D22640 STR X30, [X31 + 0x10]
	0x03D22644 STP X22, X21, [X31 + 0x20]
	0x03D22648 STP X20, X19, [X31 + 0x30]
	0x03D2264C ADRP X21, 0x6C5000
	0x03D22650 ADRP X22, 0x3D1000
	0x03D22654 LDRB W8, [X21 + 0xA85]
	0x03D22658 LDR X22, [X22 + 0xA28]
	0x03D2265C MOV W20, W1
	0x03D22660 MOV X19, X0
	0x03D22664 TBNZ X8, 0x0, 0x3D22688
	0x03D22668 ADRP X0, 0x3D1000
	0x03D2266C LDR X0, [X0 + 0xA28]
	0x03D22670 BL 0x1C16CF4
	0x03D22674 ADRP X0, 0x442000
	0x03D22678 LDR X0, [X0 + 0x5F0]
	0x03D2267C BL 0x1C16CF4
	0x03D22680 MOVZ W8, 0x1
	0x03D22684 STRB W8, [X21 + 0xA85]
	0x03D22688 ADRP X21, 0x442000
	0x03D2268C LDR X21, [X21 + 0x5F0]
	0x03D22690 MOV X0, X19
	0x03D22694 MOV X1, X31
	0x03D22698 BL 0x33BDD8C
	0x03D2269C LDR X0, [X22]
	0x03D226A0 LDR W8, [X0 + 0xE0]
	0x03D226A4 CBNZ W8, 0x3D226AC
	0x03D226A8 BL 0x1C16DFC
	0x03D226AC CMP W20, 0x1
	0x03D226B0 CSET W0, GT
	0x03D226B4 MOV X1, X31
	0x03D226B8 BL 0x3C06E58
	0x03D226BC LDR X4, [X21]
	0x03D226C0 ADD X0, X31, 0x0
	0x03D226C4 MOVZ W2, 0x4
	0x03D226C8 MOV W1, W20
	0x03D226CC MOV W3, W31
	0x03D226D0 STP X31, X31, [X31]
	0x03D226D4 BL 0x23D7544
	0x03D226D8 LDR V0, [X31]
	0x03D226DC LDP X22, X21, [X31 + 0x20]
	0x03D226E0 LDR X30, [X31 + 0x10]
	0x03D226E4 STR V0, [X19 + 0x1]
	0x03D226E8 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+32], D12
	003 Move [X31+48], D11
	004 Move [X31+56], D10
	005 Move [X31+64], D9
	006 Move [X31+72], D8
	007 Move [X31+80], X29
	008 Move [X31+88], X30
	009 Move [X31+96], X28
	010 Move [X31+104], X27
	011 Move [X31+112], X26
	012 Move [X31+120], X25
	013 Move [X31+128], X24
	014 Move [X31+136], X23
	015 Move [X31+144], X22
	016 Move [X31+152], X21
	017 Move [X31+160], X20
	018 Move [X31+168], X19
	019 Move X19, 0x6C6000
	020 Move W8, [X19+2680]
	021 Move X22, X3
	022 Move X21, X2
	023 Move X23, X1
	024 Move X25, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {37}
	029 Move X0, 0x3FE000
	030 Move X0, [X0+2808]
	031 Call 0x1C17CF4
	032 Move X0, 0x3D2000
	033 Move X0, [X0+2600]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+2680], W8
	037 Move W8, [X25+56]
	038 Compare W8, 0
	039 JumpIfEqual {62}
	040 Move X0, X25
	041 Move X20, [X31+160]
	042 Move X19, [X31+168]
	043 Move X22, [X31+144]
	044 Move X21, [X31+152]
	045 Move X24, [X31+128]
	046 Move X23, [X31+136]
	047 Move X26, [X31+112]
	048 Move X25, [X31+120]
	049 Move X28, [X31+96]
	050 Move X27, [X31+104]
	051 Move X29, [X31+80]
	052 Move X30, [X31+88]
	053 Move D9, [X31+64]
	054 Move D8, [X31+72]
	055 Move D11, [X31+48]
	056 Move D10, [X31+56]
	057 Move V12, [X31+32]
	058 Move X1, X31
	059 Add X31, X31, 176
	060 Call DisposeHelper.NotifyDisposedUsed, X0
	061 Return 
	062 Move X27, X25
	063 Add X27, X27, 40
	064 Move X8, [X27]
	065 Compare X8, 0
	066 JumpIfEqual {234}
	067 Move [X31], X25
	068 Compare X21, 0
	069 JumpIfEqual {275}
	070 Move X8, [X21+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 And X8, X8, 0
	073 Compare X8, 0
	074 JumpIfEqual {211}
	075 Move W9, [X23]
	076 Subtract X8, X8, 1
	077 Move X28, X31
	078 Add X20, X21, 60
	079 Move [X31+8], X8
	080 Move [X31+16], X9
	081 Move X8, -52658176
	082 Move V8, [X8+3968]
	083 Move S9, 0.5
	084 Move S10, 1
	085 Move [X31+24], X21
	086 Move X8, [X31+16]
	087 Move X25, X27
	088 Add X24, X8, X28
	089 Compare X22, 0
	090 JumpIfEqual {94}
	091 Move W8, [X22+28]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CSET not yet implemented."
	094 Move W27, 1
	095 Move X8, 0x3D2000
	096 Move W21, [X20-28]
	097 Move W23, [X20-24]
	098 Move S11, [X20-20]
	099 Move S12, [X20-16]
	100 Move X8, [X8+2600]
	101 Move W29, [X20-4]
	102 Move W19, [X20]
	103 Move X0, [X8]
	104 Move W26, [X20-12]
	105 Move W8, [X20-8]
	106 Move [X31+44], W8
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move W0, W27
	112 Move X1, X31
	113 Call Debug.Assert, X0
	114 Compare W21, 0
	115 JumpIfEqual {169}
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X27, X25
	118 Move X8, 0x6C0000
	119 Move W8, [X8+2632]
	120 Move X21, [X31+24]
	121 Compare W8, 0
	122 JumpIfNotEqual {129}
	123 Move X0, 0x3DA000
	124 Move X0, [X0+3848]
	125 Call 0x1C17CF4
	126 Move X8, 0x6C0000
	127 Move W9, 1
	128 Move [X8+2632], W9
	129 Move X8, 0x3DA000
	130 Move X8, [X8+3848]
	131 NotImplemented "Instruction SCVTF not yet implemented."
	132 Move X0, X27
	133 Move W1, W31
	134 Move X8, [X8]
	135 Move W2, W24
	136 Move X8, [X8+184]
	137 Move S0, [X8+8]
	138 Move S1, [X8+12]
	139 Move W8, 0x437F0000
	140 Move S5, W8
	141 Add S0, S11, S0
	142 Add S1, S12, S1
	143 Multiply S2, S0, S9
	144 Multiply S0, S1, S9
	145 Subtract S3, S10, S0
	146 NotImplemented "Instruction FDIV not yet implemented."
	147 Move V0, V8
	148 Call RawTexture.WriteRawFloat4Packed, X0, V0, V1, V2, V3, X1, X2
	149 Move W3, 1
	150 Compare X22, 0
	151 JumpIfNotEqual {186}
	152 Move W2, [X31+44]
	153 Subtract W8, W29, 1
	154 Subtract W9, W19, 1
	155 Move X0, X27
	156 Move W1, W26
	157 Move W4, W24
	158 NotImplemented "Instruction SCVTF not yet implemented."
	159 NotImplemented "Instruction SCVTF not yet implemented."
	160 Add W22, W3, 1
	161 Call RawTexture.WriteRawInt2Packed, X0, X1, X2, X3, X4
	162 NotImplemented "Instruction FCVTZS not yet implemented."
	163 NotImplemented "Instruction FCVTZS not yet implemented."
	164 Move X0, X27
	165 Move W3, W22
	166 Move W4, W24
	167 Call RawTexture.WriteRawInt2Packed, X0, X1, X2, X3, X4
	168 Move X22, X31
	169 Move W8, 0x437F0000
	170 NotImplemented "Instruction SCVTF not yet implemented."
	171 Move S1, W8
	172 NotImplemented "Instruction FDIV not yet implemented."
	173 Move S0, W31
	174 Move S2, W31
	175 Move S3, W31
	176 Move X0, X25
	177 Move W1, W31
	178 Move W2, W24
	179 Move X27, X25
	180 Call RawTexture.WriteRawFloat4Packed, X0, V0, V1, V2, V3, X1, X2
	181 Move W3, 1
	182 Move W3, W31
	183 Move X21, [X31+24]
	184 Compare X22, 0
	185 JumpIfEqual {152}
	186 Move W8, [X22+40]
	187 Move W9, [X22+44]
	188 Move W1, [X22+32]
	189 Move W2, [X22+36]
	190 Move X0, X27
	191 Move W4, W24
	192 Subtract W8, W8, 1
	193 Subtract W9, W9, 1
	194 NotImplemented "Instruction SCVTF not yet implemented."
	195 NotImplemented "Instruction SCVTF not yet implemented."
	196 Add W25, W3, 1
	197 Call RawTexture.WriteRawInt2Packed, X0, X1, X2, X3, X4
	198 NotImplemented "Instruction FCVTZS not yet implemented."
	199 NotImplemented "Instruction FCVTZS not yet implemented."
	200 Move X0, X27
	201 Move W3, W25
	202 Move W4, W24
	203 Call RawTexture.WriteRawInt2Packed, X0, X1, X2, X3, X4
	204 Move X22, [X22+48]
	205 Move X8, [X31+8]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move W8, [X21+24]
	208 Add X28, X28, 1
	209 Add X20, X20, 32
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Call 0x1C17F28
	212 Move X9, [X31]
	213 Move X20, [X31+160]
	214 Move X19, [X31+168]
	215 Move X22, [X31+144]
	216 Move X21, [X31+152]
	217 Move X24, [X31+128]
	218 Move X23, [X31+136]
	219 Move X26, [X31+112]
	220 Move X25, [X31+120]
	221 Move X28, [X31+96]
	222 Move X27, [X31+104]
	223 Move X29, [X31+80]
	224 Move X30, [X31+88]
	225 Move D9, [X31+64]
	226 Move D8, [X31+72]
	227 Move D11, [X31+48]
	228 Move D10, [X31+56]
	229 Move V12, [X31+32]
	230 Move W8, 1
	231 Move [X9+57], W8
	232 Add X31, X31, 176
	233 Return 
	234 Move X10, 0x3FE000
	235 Move W9, [X25+16]
	236 Move W8, [X25+20]
	237 Move X10, [X10+2808]
	238 Multiply W1, W9, W8
	239 Move X0, [X10]
	240 Call 0x1C17D6C
	241 Move W9, [X25+16]
	242 Move W8, [X25+20]
	243 Move [X25+40], X0
	244 Multiply W20, W9, W8
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move [X25+48], W8
	247 Move [X25+52], W9
	248 Move X24, X0
	249 Move S0, W31
	250 Move S1, W31
	251 Move S2, W31
	252 Move S3, 1
	253 Move X0, X31
	254 Call 0x1E44664
	255 Compare X24, 0
	256 JumpIfEqual {275}
	257 Move W8, W20
	258 Move X19, X31
	259 Subtract X20, X8, 1
	260 Move W8, [X24+24]
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Add X8, X24, X19
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move [X8+32], W0
	265 Move X24, [X27]
	266 Move S0, W31
	267 Move S1, W31
	268 Move S2, W31
	269 Move S3, 1
	270 Move X0, X31
	271 Add X19, X19, 1
	272 Call 0x1E44664
	273 Compare X24, 0
	274 JumpIfNotEqual {260}
	275 Call 0x1C17F20

Method: System.Boolean get_MustCommit()

Disassembly:
	0x03D22824 LDUR V4, [X31 + 0xC]
	0x03D22828 ANDS W31, W3, 0x1

ISIL:
	001 Move W0, [X0+57]
	002 Return X0

Method: System.Void set_MustCommit(System.Boolean value)

Disassembly:
	0x03D2282C CSEL W9, W13, W31, NE
	0x03D22830 LDR X30, [X31 + 0x20]
	0x03D22834 BFM W9, W2, 0x0, 0x7

ISIL:
	001 And W8, W1, 1
	002 Move [X0+57], W8
	003 Return 

Method: System.Void Commit()

Disassembly:
	0x03D22838 BFM W9, W12, 0x18, 0x7
	0x03D2283C FADD V0.2S, V0.2S, V1.2S
	0x03D22840 STR X10, [X8 + 0x18]
	0x03D22844 STR V4, [X8 + 0x3]
	0x03D22848 STP W31, W11, [X8 + 0x8]
	0x03D2284C STR D2, [X8 + 0x10]
	0x03D22850 STR W9, [X8 + 0x20]
	0x03D22854 STR D0, [X8]
	0x03D22858 STUR V3, [X8 + 0x24]
	0x03D2285C ADD X31, X31, 0x30
	0x03D22860 RET
	0x03D22864 BL 0x1C16F20
	0x03D22868 BL 0x1C16F28
	0x03D2286C STR X30, [X31 - 0x30]!
	0x03D22870 STP X22, X21, [X31 + 0x10]
	0x03D22874 STP X20, X19, [X31 + 0x20]
	0x03D22878 ADRP X22, 0x6C5000
	0x03D2287C ADRP X21, 0x442000
	0x03D22880 LDRB W8, [X22 + 0xA89]
	0x03D22884 LDR X21, [X21 + 0x600]
	0x03D22888 MOV W20, W1
	0x03D2288C MOV W19, W0
	0x03D22890 TBNZ X8, 0x0, 0x3D228CC
	0x03D22894 ADRP X0, 0x3D1000
	0x03D22898 LDR X0, [X0 + 0xA28]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+56]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfEqual {13}
	007 Move X0, X19
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call DisposeHelper.NotifyDisposedUsed, X0
	012 Return 
	013 Move W8, [X19+57]
	014 Compare W8, 0
	015 JumpIfEqual {30}
	016 Move X0, X19
	017 Call GradientSettingsAtlas.PrepareAtlas, X0
	018 Move X0, [X19+32]
	019 Compare X0, 0
	020 JumpIfEqual {33}
	021 Move X1, [X19+40]
	022 Move X2, X31
	023 Call Texture2D.SetPixels32, X0, X1
	024 Move X0, [X19+32]
	025 Compare X0, 0
	026 JumpIfEqual {33}
	027 Move X1, X31
	028 Call Texture2D.Apply, X0
	029 Move [X19+57], W31
	030 Move X30, [X31+16]
	031 Move X19, [X31+24]
	032 Return 
	033 Call 0x1C17F20

Method: System.Void PrepareAtlas()

Disassembly:
	0x03D2289C BL 0x1C16CF4
	0x03D228A0 ADRP X0, 0x3D1000
	0x03D228A4 LDR X0, [X0 + 0x758]
	0x03D228A8 BL 0x1C16CF4
	0x03D228AC ADRP X0, 0x442000
	0x03D228B0 LDR X0, [X0 + 0x600]
	0x03D228B4 BL 0x1C16CF4
	0x03D228B8 ADRP X0, 0x442000
	0x03D228BC LDR X0, [X0 + 0x608]
	0x03D228C0 BL 0x1C16CF4
	0x03D228C4 MOVZ W8, 0x1
	0x03D228C8 STRB W8, [X22 + 0xA89]
	0x03D228CC LDR X0, [X21]
	0x03D228D0 LDR W8, [X0 + 0xE0]
	0x03D228D4 CBNZ W8, 0x3D228E0
	0x03D228D8 BL 0x1C16DFC
	0x03D228DC LDR X0, [X21]
	0x03D228E0 LDR X8, [X0 + 0xB8]
	0x03D228E4 LDR W8, [X8 + 0x20]
	0x03D228E8 CMP W8, W19
	0x03D228EC B.GE 0x3D22988
	0x03D228F0 TBZ X20, 0x0, 0x3D22970
	0x03D228F4 LDR W9, [X0 + 0xE0]
	0x03D228F8 CBNZ W9, 0x3D2290C
	0x03D228FC BL 0x1C16DFC
	0x03D22900 LDR X8, [X21]
	0x03D22904 LDR X8, [X8 + 0xB8]
	0x03D22908 LDR W8, [X8 + 0x20]
	0x03D2290C ADRP X9, 0x3D1000
	0x03D22910 LDR X9, [X9 + 0x758]
	0x03D22914 ADD X1, X31, 0xC
	0x03D22918 STR W8, [X31 + 0xC]
	0x03D2291C LDR X0, [X9]
	0x03D22920 BL 0x1C16E04
	0x03D22924 ADRP X8, 0x442000
	0x03D22928 LDR X8, [X8 + 0x608]
	0x03D2292C MOV X1, X0
	0x03D22930 MOV X2, X31
	0x03D22934 LDR X8, [X8]
	0x03D22938 MOV X0, X8
	0x03D2293C BL 0x321EFD0
	0x03D22940 ADRP X8, 0x3D1000
	0x03D22944 LDR X8, [X8 + 0xA28]
	0x03D22948 MOV X19, X0
	0x03D2294C LDR X8, [X8]
	0x03D22950 LDR W9, [X8 + 0xE0]
	0x03D22954 CBNZ W9, 0x3D22960
	0x03D22958 MOV X0, X8
	0x03D2295C BL 0x1C16DFC
	0x03D22960 MOV X0, X19
	0x03D22964 MOV X1, X31
	0x03D22968 BL 0x3C06A04
	0x03D2296C LDR X0, [X21]
	0x03D22970 LDR W8, [X0 + 0xE0]
	0x03D22974 CBNZ W8, 0x3D22980
	0x03D22978 BL 0x1C16DFC
	0x03D2297C LDR X0, [X21]
	0x03D22980 LDR X8, [X0 + 0xB8]
	0x03D22984 LDR W19, [X8 + 0x20]
	0x03D22988 MOV W0, W19
	0x03D2298C LDP X20, X19, [X31 + 0x20]
	0x03D22990 LDP X22, X21, [X31 + 0x10]
	0x03D22994 LDR X30, [X31], #0x30
	0x03D22998 RET
	0x03D2299C STP D9, D8, [X31 - 0x70]!
	0x03D229A0 STP X29, X30, [X31 + 0x10]
	0x03D229A4 STP X28, X27, [X31 + 0x20]
	0x03D229A8 STP X26, X25, [X31 + 0x30]
	0x03D229AC STP X24, X23, [X31 + 0x40]
	0x03D229B0 STP X22, X21, [X31 + 0x50]
	0x03D229B4 STP X20, X19, [X31 + 0x60]
	0x03D229B8 SUB X31, X31, 0x340
	0x03D229BC ADRP X19, 0x6C5000
	0x03D229C0 LDRB W8, [X19 + 0xA8A]
	0x03D229C4 MOV X22, X1
	0x03D229C8 MOV V8.16B, V1.16B
	0x03D229CC MOV V9.16B, V0.16B
	0x03D229D0 MOV X21, X0
	0x03D229D4 STR W3, [X31 + 0x2C]
	0x03D229D8 STR W2, [X31 + 0x20]
	0x03D229DC TBNZ X8, 0x0, 0x3D229F4
	0x03D229E0 ADRP X0, 0x442000
	0x03D229E4 LDR X0, [X0 + 0x600]
	0x03D229E8 BL 0x1C16CF4
	0x03D229EC MOVZ W8, 0x1
	0x03D229F0 STRB W8, [X19 + 0xA8A]
	0x03D229F4 ADRP X8, 0x442000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6C6000
	007 Move X20, 0x3D2000
	008 Move W8, [X21+2681]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x443000
	016 Move X0, [X0+1184]
	017 Call 0x1C17CF4
	018 Move X0, 0x3D2000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x3FC000
	022 Move X0, [X0+592]
	023 Call 0x1C17CF4
	024 Move X0, 0x443000
	025 Move X0, [X0+1192]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2681], W8
	029 Move X0, [X20]
	030 Move X20, [X19+32]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Inequality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {95}
	043 Move X8, 0x3FC000
	044 Move W22, [X19+16]
	045 Move W21, [X19+20]
	046 Move X8, [X8+592]
	047 Move X0, [X8]
	048 Call 0x1C17F10
	049 Move W3, 5
	050 Move W5, 1
	051 Move W1, W21
	052 Move W2, W22
	053 Move W4, W31
	054 Move X6, X31
	055 Move X20, X0
	056 Call Texture2D..ctor, X0, X1, X2, X3, X4, X5
	057 Compare X20, 0
	058 JumpIfEqual {101}
	059 Move W1, 61
	060 Move X0, X20
	061 Move X2, X31
	062 Call Object.set_hideFlags, X0, X1
	063 Move X21, 0x443000
	064 Move X21, [X21+1184]
	065 Move X0, [X21]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X21]
	071 Move X8, [X0+184]
	072 Add X0, X31, 12
	073 Move X1, X31
	074 Move W9, [X8+16]
	075 Add W10, W9, 1
	076 Move [X8+16], W10
	077 Move [X31+12], W9
	078 Call Int32.ToString, X0
	079 Move X8, 0x443000
	080 Move X8, [X8+1192]
	081 Move X1, X0
	082 Move X2, X31
	083 Move X8, [X8]
	084 Move X0, X8
	085 Call String.Concat, X0, X1
	086 Move X1, X0
	087 Move X0, X20
	088 Move X2, X31
	089 Call Object.set_name, X0, X1
	090 Move X0, X20
	091 Move W1, W31
	092 Move X2, X31
	093 Call Texture.set_filterMode, X0, X1
	094 Move [X19+32], X20
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 Return 
	101 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D229F8 LDR X8, [X8 + 0x600]
	0x03D229FC LDR W19, [X21]
	0x03D22A00 LDR X0, [X8]
	0x03D22A04 LDR W8, [X0 + 0xE0]
	0x03D22A08 CBNZ W8, 0x3D22A10
	0x03D22A0C BL 0x1C16DFC
	0x03D22A10 MOVZ W1, 0x1
	0x03D22A14 MOV W0, W19
	0x03D22A18 BL 0x3D2286C
	0x03D22A1C LDR X8, [X22]
	0x03D22A20 ADD W9, W0, 0x3
	0x03D22A24 CMP W0, 0x0
	0x03D22A28 CSEL W9, W9, W0, LT
	0x03D22A2C CBZ X8, 0x3D22E68
	0x03D22A30 MOV W19, W0
	0x03D22A34 SBFM W23, W9, 0x2, 0x1F
	0x03D22A38 LDR X9, [X8 + 0x18]
	0x03D22A3C LDR X0, [X8 + 0x40]
	0x03D22A40 LDR X4, [X8 + 0x28]
	0x03D22A44 ADD W8, W23, W23, 0x1, LSL
	0x03D22A48 UBFM W2, W8, 0x1F, 0x1E
	0x03D22A4C UBFM W1, W23, 0x1E, 0x1D
	0x03D22A50 MOV X3, X22
	0x03D22A54 BLR X9
	0x03D22A58 CMP W19, 0x4
	0x03D22A5C LDR W19, [X31 + 0x20]
	0x03D22A60 B.LT 0x3D22E44
	0x03D22A64 MOV X22, X0
	0x03D22A68 MOV W24, W31
	0x03D22A6C ADD X20, X0, 0x10
	0x03D22A70 ADD X25, X0, 0x20
	0x03D22A74 ADRP X27, 0x6C5000
	0x03D22A78 STP X21, X25, [X31 + 0x10]
	0x03D22A7C ADD X0, X31, 0x2B0
	0x03D22A80 MOVZ W2, 0x50
	0x03D22A84 MOV X1, X21
	0x03D22A88 BL 0x3EB1AC0
	0x03D22A8C ADRP X8, 0x442000
	0x03D22A90 LDR X8, [X8 + 0x600]
	0x03D22A94 LDR X0, [X8]
	0x03D22A98 LDR W8, [X0 + 0xE0]
	0x03D22A9C CBNZ W8, 0x3D22AA4
	0x03D22AA0 BL 0x1C16DFC
	0x03D22AA4 ADD X0, X31, 0x220
	0x03D22AA8 ADD X1, X31, 0x2B0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6C6000
	007 Move X22, 0x443000
	008 Move X19, 0x443000
	009 Move X20, 0x443000
	010 Move W8, [X21+2682]
	011 Move X22, [X22+1200]
	012 Move X19, [X19+1184]
	013 Move X20, [X20+1208]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x443000
	019 Move X0, [X0+1184]
	020 Call 0x1C17CF4
	021 Move X0, 0x443000
	022 Move X0, [X0+1208]
	023 Call 0x1C17CF4
	024 Move X0, 0x443000
	025 Move X0, [X0+1200]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2682], W8
	029 Move X0, [X22]
	030 Move W1, 1
	031 Move W2, W31
	032 Move W3, W31
	033 Move X4, X31
	034 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	035 Move X8, [X19]
	036 Move W1, 1
	037 Move W2, W31
	038 Move W3, W31
	039 Move X8, [X8+184]
	040 Move X4, X31
	041 Move [X8], X0
	042 Move X0, [X20]
	043 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	044 Move X8, [X19]
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X8, [X8+184]
	050 Move [X8+8], X0
	051 Move X30, [X31+48]
	052 Return 

