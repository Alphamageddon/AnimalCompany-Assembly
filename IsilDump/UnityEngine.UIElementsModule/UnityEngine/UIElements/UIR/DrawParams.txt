Type: UnityEngine.UIElements.UIR.DrawParams

Method: System.Void Reset()

Disassembly:
	0x03D33C08 LDR W8, [X0 + 0xE0]
	0x03D33C0C CBNZ W8, 0x3D33C14
	0x03D33C10 BL 0x1C16DFC
	0x03D33C14 MOV W0, W19
	0x03D33C18 LDP X20, X19, [X31 + 0x10]
	0x03D33C1C MOV X1, X31
	0x03D33C20 LDR X30, [X31], #0x20
	0x03D33C24 B 0x3D1FA84
	0x03D33C28 STR X30, [X31 - 0x40]!
	0x03D33C2C STP X24, X23, [X31 + 0x10]
	0x03D33C30 STP X22, X21, [X31 + 0x20]
	0x03D33C34 STP X20, X19, [X31 + 0x30]
	0x03D33C38 LDR X21, [X0 + 0x28]
	0x03D33C3C MOV X19, X0
	0x03D33C40 CBZ X21, 0x3D33CE8
	0x03D33C44 MOV X22, X31
	0x03D33C48 MOV X24, X31
	0x03D33C4C MOV X20, X31
	0x03D33C50 MOV X23, X31
	0x03D33C54 MOV X0, X21
	0x03D33C58 BL 0x3D30BB4
	0x03D33C5C TBZ X0, 0x0, 0x3D33C88
	0x03D33C60 LDR W8, [X21 + 0x30]
	0x03D33C64 ADD W8, W8, 0x1
	0x03D33C68 CMP W8, 0x3B
	0x03D33C6C STR W8, [X21 + 0x30]
	0x03D33C70 B.LE 0x3D33C8C
	0x03D33C74 CBZ X20, 0x3D33CAC
	0x03D33C78 CBZ X23, 0x3D33D00
	0x03D33C7C STR X21, [X23 + 0x28]
	0x03D33C80 MOV X23, X21
	0x03D33C84 B 0x3D33CB4
	0x03D33C88 STR W31, [X21 + 0x30]
	0x03D33C8C CBZ X22, 0x3D33CA0
	0x03D33C90 CBZ X24, 0x3D33D00
	0x03D33C94 STR X21, [X24 + 0x28]
	0x03D33C98 MOV X24, X21
	0x03D33C9C B 0x3D33CB4
	0x03D33CA0 MOV X24, X21
	0x03D33CA4 MOV X22, X21
	0x03D33CA8 B 0x3D33CB4
	0x03D33CAC MOV X23, X21
	0x03D33CB0 MOV X20, X21
	0x03D33CB4 LDR X8, [X21 + 0x28]
	0x03D33CB8 STR X31, [X21 + 0x28]
	0x03D33CBC MOV X21, X8
	0x03D33CC0 CBNZ X8, 0x3D33C54
	0x03D33CC4 STR X22, [X19 + 0x28]
	0x03D33CC8 CBZ X20, 0x3D33CEC
	0x03D33CCC LDR X19, [X20 + 0x28]
	0x03D33CD0 MOV X0, X20
	0x03D33CD4 STR X31, [X20 + 0x28]
	0x03D33CD8 BL 0x3D33D04
	0x03D33CDC MOV X20, X19
	0x03D33CE0 CBNZ X19, 0x3D33CCC
	0x03D33CE4 B 0x3D33CEC
	0x03D33CE8 STR X31, [X19 + 0x28]
	0x03D33CEC LDP X20, X19, [X31 + 0x30]
	0x03D33CF0 LDP X22, X21, [X31 + 0x20]
	0x03D33CF4 LDP X24, X23, [X31 + 0x10]
	0x03D33CF8 LDR X30, [X31], #0x40
	0x03D33CFC RET
	0x03D33D00 BL 0x1C16F20
	0x03D33D04 STP X30, X21, [X31 - 0x20]!
	0x03D33D08 STP X20, X19, [X31 + 0x10]
	0x03D33D0C ADRP X21, 0x6B4000
	0x03D33D10 ADRP X20, 0x3C7000
	0x03D33D14 LDRB W8, [X21 + 0xB3A]
	0x03D33D18 LDR X20, [X20 + 0xC10]
	0x03D33D1C MOV X19, X0
	0x03D33D20 TBNZ X8, 0x0, 0x3D33D38
	0x03D33D24 ADRP X0, 0x3C7000
	0x03D33D28 LDR X0, [X0 + 0xC10]
	0x03D33D2C BL 0x1C16CF4
	0x03D33D30 MOVZ W8, 0x1
	0x03D33D34 STRB W8, [X21 + 0xB3A]
	0x03D33D38 LDR X8, [X19]
	0x03D33D3C MOVZ W1, 0x1
	0x03D33D40 MOV X0, X19
	0x03D33D44 LDP X9, X2, [X8 + 0x188]
	0x03D33D48 BLR X9
	0x03D33D4C LDR X0, [X20]
	0x03D33D50 LDR W8, [X0 + 0xE0]
	0x03D33D54 CBNZ W8, 0x3D33D5C
	0x03D33D58 BL 0x1C16DFC
	0x03D33D5C MOV X0, X19
	0x03D33D60 LDP X20, X19, [X31 + 0x10]
	0x03D33D64 MOV X1, X31
	0x03D33D68 LDP X30, X21, [X31], #0x20
	0x03D33D6C B 0x33B3E9C
	0x03D33D70 STR X30, [X31 - 0x30]!
	0x03D33D74 STP X22, X21, [X31 + 0x10]
	0x03D33D78 STP X20, X19, [X31 + 0x20]
	0x03D33D7C ADRP X19, 0x6B4000
	0x03D33D80 ADRP X20, 0x431000
	0x03D33D84 LDRB W8, [X19 + 0xB27]
	0x03D33D88 LDR X20, [X20 + 0x6F8]
	0x03D33D8C TBNZ X8, 0x0, 0x3D33DBC
	0x03D33D90 ADRP X0, 0x3C0000
	0x03D33D94 LDR X0, [X0 + 0x598]
	0x03D33D98 BL 0x1C16CF4
	0x03D33D9C ADRP X0, 0x3EA000
	0x03D33DA0 LDR X0, [X0 + 0x240]
	0x03D33DA4 BL 0x1C16CF4
	0x03D33DA8 ADRP X0, 0x431000
	0x03D33DAC LDR X0, [X0 + 0x6F8]
	0x03D33DB0 BL 0x1C16CF4
	0x03D33DB4 MOVZ W8, 0x1
	0x03D33DB8 STRB W8, [X19 + 0xB27]
	0x03D33DBC LDR X0, [X20]
	0x03D33DC0 ADRP X22, 0x3C0000
	0x03D33DC4 LDR W8, [X0 + 0xE0]
	0x03D33DC8 LDR X22, [X22 + 0x598]
	0x03D33DCC CBNZ W8, 0x3D33DD8

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+128], X30
	003 Move [X31+136], X21
	004 Move [X31+144], X20
	005 Move [X31+152], X19
	006 Move X20, 0x6B5000
	007 Move W8, [X20+2876]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {36}
	013 Move X0, 0x432000
	014 Move X0, [X0+3496]
	015 Call 0x1C17CF4
	016 Move X0, 0x432000
	017 Move X0, [X0+4088]
	018 Call 0x1C17CF4
	019 Move X0, 0x41B000
	020 Move X0, [X0+3896]
	021 Call 0x1C17CF4
	022 Move X0, 0x433000
	023 Move X0, [X0]
	024 Call 0x1C17CF4
	025 Move X0, 0x433000
	026 Move X0, [X0+8]
	027 Call 0x1C17CF4
	028 Move X0, 0x433000
	029 Move X0, [X0+16]
	030 Call 0x1C17CF4
	031 Move X0, 0x433000
	032 Move X0, [X0+24]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+2876], W8
	036 Move X0, [X19+16]
	037 Compare X0, 0
	038 JumpIfEqual {141}
	039 Move X8, 0x433000
	040 Move X8, [X8+8]
	041 Move X1, [X8]
	042 Call Stack`1<Matrix4x4>.Clear, X0
	043 Move X21, 0x6A6000
	044 Move W8, [X21+2752]
	045 Move X20, [X19+16]
	046 Compare W8, 0
	047 JumpIfNotEqual {53}
	048 Move X0, 0x3C5000
	049 Move X0, [X0+624]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X21+2752], W8
	053 Move X8, 0x3C5000
	054 Move X8, [X8+624]
	055 Move X8, [X8]
	056 Move X8, [X8+184]
	057 Move V1, [X8+96]
	058 Move V0, [X8+112]
	059 Move V2, [X8+64]
	060 Move V3, [X8+80]
	061 Move [X31+32], V1
	062 Move [X31+40], V0
	063 Move [X31], V2
	064 Move [X31+8], V3
	065 Compare X20, 0
	066 JumpIfEqual {141}
	067 Move X8, 0x433000
	068 Move X8, [X8+16]
	069 Move V0, [X31]
	070 Move V1, [X31+16]
	071 Move V2, [X31+32]
	072 Move V3, [X31+48]
	073 Add X1, X31, 64
	074 Move X2, [X8]
	075 Move X0, X20
	076 Move [X31+64], V0
	077 Move [X31+72], V1
	078 Move [X31+96], V2
	079 Move [X31+104], V3
	080 Call Stack`1<Matrix4x4>.Push, X0, X1
	081 Move X0, [X19+24]
	082 Compare X0, 0
	083 JumpIfEqual {141}
	084 Move X8, 0x433000
	085 Move X8, [X8]
	086 Move X21, 0x432000
	087 Move X1, [X8]
	088 Move X21, [X21+3496]
	089 Call Stack`1<Rect>.Clear, X0
	090 Move X0, [X21]
	091 Move X20, [X19+24]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move X0, [X21]
	097 Compare X20, 0
	098 JumpIfEqual {141}
	099 Move X9, 0x433000
	100 Move X8, [X0+184]
	101 Move X9, [X9+24]
	102 Move X0, X20
	103 Move S2, [X8+8]
	104 Move S3, [X8+12]
	105 Move S0, [X8]
	106 Move S1, [X8+4]
	107 Move X1, [X9]
	108 Call Stack`1<Rect>.Push, X0, X1
	109 Move X8, [X19+32]
	110 Compare X8, 0
	111 JumpIfEqual {141}
	112 Move W2, [X8+24]
	113 Move W9, [X8+28]
	114 Add W9, W9, 1
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move [X8+24], W31
	117 Move [X8+28], W9
	118 Move X0, [X8+16]
	119 Move W1, W31
	120 Move X3, X31
	121 Call Array.Clear, X0, X1, X2
	122 Move X8, [X19+40]
	123 Compare X8, 0
	124 JumpIfEqual {141}
	125 Move W2, [X8+24]
	126 Move W9, [X8+28]
	127 Add W9, W9, 1
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move [X8+24], W31
	130 Move [X8+28], W9
	131 Move X0, [X8+16]
	132 Move W1, W31
	133 Move X3, X31
	134 Call Array.Clear, X0, X1, X2
	135 Move X20, [X31+144]
	136 Move X19, [X31+152]
	137 Move X30, [X31+128]
	138 Move X21, [X31+136]
	139 Add X31, X31, 160
	140 Return 
	141 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03D2F9D0 LDR W8, [X31 + 0x94]
	0x03D2F9D4 MOV X1, X31
	0x03D2F9D8 CMP W8, 0x0
	0x03D2F9DC CSET W0, NE
	0x03D2F9E0 BL 0x3C06E58
	0x03D2F9E4 LDR X0, [X20]
	0x03D2F9E8 ADRP X21, 0x435000
	0x03D2F9EC ADRP X26, 0x435000
	0x03D2F9F0 LDR W20, [X31 + 0xAC]
	0x03D2F9F4 LDR W8, [X0 + 0xE0]
	0x03D2F9F8 LDR X21, [X21 + 0xEB8]
	0x03D2F9FC LDR X26, [X26 + 0xEC0]
	0x03D2FA00 CBNZ W8, 0x3D2FA08
	0x03D2FA04 BL 0x1C16DFC
	0x03D2FA08 LDR X1, [X21]
	0x03D2FA0C CMP W20, W24
	0x03D2FA10 CSET W0, EQ
	0x03D2FA14 MOV X2, X31
	0x03D2FA18 ADD X21, X31, 0xA8
	0x03D2FA1C BL 0x3C06F88
	0x03D2FA20 LDR W27, [X31 + 0x94]
	0x03D2FA24 LDR X1, [X26]
	0x03D2FA28 MOV X2, X31
	0x03D2FA2C CMP W27, W23
	0x03D2FA30 CSET W0, EQ
	0x03D2FA34 BL 0x3C06F88
	0x03D2FA38 CMP W20, W24
	0x03D2FA3C B.NE 0x3D2FA48
	0x03D2FA40 CMP W27, W23
	0x03D2FA44 B.EQ 0x3D2FAE4
	0x03D2FA48 LDR X8, [X31 + 0xB0]
	0x03D2FA4C CBZ X8, 0x3D2FA8C
	0x03D2FA50 CBZ X25, 0x3D2FBEC
	0x03D2FA54 LDR X8, [X25 + 0x18]
	0x03D2FA58 CBZ X8, 0x3D2FBEC
	0x03D2FA5C LDR X0, [X8 + 0x40]
	0x03D2FA60 LDR V0, [X21]
	0x03D2FA64 LDR X8, [X31 + 0xB8]
	0x03D2FA68 STR V0, [X31 + 0x7]
	0x03D2FA6C STR X8, [X31 + 0x80]
	0x03D2FA70 CBZ X0, 0x3D2FBEC
	0x03D2FA74 LDR V0, [X31 + 0x7]
	0x03D2FA78 LDR X8, [X31 + 0x80]
	0x03D2FA7C ADD X1, X31, 0x50
	0x03D2FA80 STR V0, [X31 + 0x5]
	0x03D2FA84 STR X8, [X31 + 0x60]
	0x03D2FA88 BL 0x3D309E0
	0x03D2FA8C LDR X8, [X31 + 0x98]
	0x03D2FA90 CBZ X8, 0x3D2FAD0
	0x03D2FA94 CBZ X25, 0x3D2FBEC
	0x03D2FA98 LDR X8, [X25 + 0x18]
	0x03D2FA9C CBZ X8, 0x3D2FBEC
	0x03D2FAA0 LDR X0, [X8 + 0x40]
	0x03D2FAA4 LDR V0, [X31 + 0x9]
	0x03D2FAA8 LDR X8, [X31 + 0xA0]
	0x03D2FAAC STR V0, [X31 + 0x7]
	0x03D2FAB0 STR X8, [X31 + 0x80]
	0x03D2FAB4 CBZ X0, 0x3D2FBEC
	0x03D2FAB8 LDR V0, [X31 + 0x7]
	0x03D2FABC LDR X8, [X31 + 0x80]
	0x03D2FAC0 ADD X1, X31, 0x30
	0x03D2FAC4 STR V0, [X31 + 0x3]
	0x03D2FAC8 STR X8, [X31 + 0x40]
	0x03D2FACC BL 0x3D309E0
	0x03D2FAD0 MOV W23, W31
	0x03D2FAD4 MOV W24, W31
	0x03D2FAD8 STP X31, X31, [X31 + 0x90]
	0x03D2FADC STP X31, X31, [X31 + 0xA0]
	0x03D2FAE0 STP X31, X31, [X31 + 0xB0]
	0x03D2FAE4 CBZ X25, 0x3D2FBEC
	0x03D2FAE8 LDR X0, [X25 + 0x18]
	0x03D2FAEC CBZ X0, 0x3D2FBEC
	0x03D2FAF0 ADRP X8, 0x435000
	0x03D2FAF4 LDR X8, [X8 + 0xE90]
	0x03D2FAF8 LDR W27, [X31 + 0xA8]
	0x03D2FAFC MOV W2, W24
	0x03D2FB00 LDR X3, [X8]
	0x03D2FB04 MOV W1, W27
	0x03D2FB08 BL 0x29ACAE4
	0x03D2FB0C LDR X0, [X25 + 0x20]
	0x03D2FB10 CBZ X0, 0x3D2FBEC
	0x03D2FB14 ADRP X8, 0x435000
	0x03D2FB18 LDR X8, [X8 + 0xE98]
	0x03D2FB1C LDR W26, [X31 + 0x90]
	0x03D2FB20 MOV W2, W23
	0x03D2FB24 LDR X3, [X8]
	0x03D2FB28 MOV W1, W26
	0x03D2FB2C BL 0x29AC36C
	0x03D2FB30 LDR X8, [X25 + 0x18]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x6B9000
	013 Move X28, 0x436000
	014 Move X20, 0x436000
	015 Move X26, 0x436000
	016 Move X25, 0x436000
	017 Move X24, 0x436000
	018 Move X23, 0x436000
	019 Move X22, 0x3CC000
	020 Move X21, 0x436000
	021 Move X28, [X28+3624]
	022 Move X20, [X20+3632]
	023 Move X26, [X26+3640]
	024 Move W8, [X27+2877]
	025 Move X25, [X25+3648]
	026 Move X24, [X24+3656]
	027 Move X23, [X23+3664]
	028 Move X22, [X22+2760]
	029 Move X21, [X21+3672]
	030 Move X19, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {61}
	035 Move X0, 0x436000
	036 Move X0, [X0+3672]
	037 Call 0x1C17CF4
	038 Move X0, 0x436000
	039 Move X0, [X0+3664]
	040 Call 0x1C17CF4
	041 Move X0, 0x3CC000
	042 Move X0, [X0+2760]
	043 Call 0x1C17CF4
	044 Move X0, 0x436000
	045 Move X0, [X0+3656]
	046 Call 0x1C17CF4
	047 Move X0, 0x436000
	048 Move X0, [X0+3632]
	049 Call 0x1C17CF4
	050 Move X0, 0x436000
	051 Move X0, [X0+3648]
	052 Call 0x1C17CF4
	053 Move X0, 0x436000
	054 Move X0, [X0+3624]
	055 Call 0x1C17CF4
	056 Move X0, 0x436000
	057 Move X0, [X0+3640]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X27+2877], W8
	061 Move X0, [X28]
	062 Call 0x1C17F10
	063 Move X2, [X20]
	064 Move W1, 8
	065 Move X20, X0
	066 Call Stack`1<Matrix4x4>..ctor, X0, X1
	067 Move [X19+16], X20
	068 Move X0, [X26]
	069 Call 0x1C17F10
	070 Move X2, [X25]
	071 Move W1, 8
	072 Move X20, X0
	073 Call Stack`1<Rect>..ctor, X0, X1
	074 Move [X19+24], X20
	075 Move X0, [X24]
	076 Call 0x1C17F10
	077 Move X2, [X23]
	078 Move W1, 8
	079 Move X20, X0
	080 Call List`1<Object>..ctor, X0, X1
	081 Move [X19+32], X20
	082 Move X0, [X22]
	083 Call 0x1C17F10
	084 Move X2, [X21]
	085 Move W1, 8
	086 Move X20, X0
	087 Call List`1<Object>..ctor, X0, X1
	088 Move [X19+40], X20
	089 Move X0, X19
	090 Move X20, [X31+80]
	091 Move X19, [X31+88]
	092 Move X22, [X31+64]
	093 Move X21, [X31+72]
	094 Move X24, [X31+48]
	095 Move X23, [X31+56]
	096 Move X26, [X31+32]
	097 Move X25, [X31+40]
	098 Move X28, [X31+16]
	099 Move X27, [X31+24]
	100 Move X1, X31
	101 Move X30, [X31+96]
	102 Call Object..ctor, X0
	103 Return 

Method: System.Void .cctor()

Disassembly:
	0x03D35B5C ADRP X8, 0x3BE000
	0x03D35B60 LDR X8, [X8 + 0xA28]
	0x03D35B64 MOV X24, X0
	0x03D35B68 LDR X8, [X8]
	0x03D35B6C LDR W9, [X8 + 0xE0]
	0x03D35B70 CBNZ W9, 0x3D35B7C
	0x03D35B74 MOV X0, X8
	0x03D35B78 BL 0x1C16DFC
	0x03D35B7C MOV X0, X24
	0x03D35B80 MOV X1, X31
	0x03D35B84 BL 0x3C0649C
	0x03D35B88 CBZ X22, 0x3D35B9C
	0x03D35B8C LDR X0, [X31 + 0xA0]
	0x03D35B90 MOV X1, X22
	0x03D35B94 BL 0x3D30BFC
	0x03D35B98 STR X31, [X31 + 0x458]
	0x03D35B9C LDP X0, X21, [X31 + 0xC8]
	0x03D35BA0 MOV X2, X31
	0x03D35BA4 MOV X1, X21
	0x03D35BA8 BL 0x3D241D4
	0x03D35BAC LDR X23, [X31 + 0xA8]
	0x03D35BB0 MOV X1, X31
	0x03D35BB4 MOV X0, X23
	0x03D35BB8 BL 0x3D43B10
	0x03D35BBC MOV X0, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6B3000
	005 Move X19, 0x430000
	006 Move W8, [X20+2878]
	007 Move X19, [X19+3496]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x430000
	013 Move X0, [X0+3496]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2878], W8
	017 Move X8, [X19]
	018 Move X9, -52727808
	019 Move V0, [X9+186]
	020 Move X9, -52731904
	021 Move X8, [X8+184]
	022 Move [X8], V0
	023 Move X8, [X19]
	024 Move V0, [X9+208]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X8, [X8+184]
	028 Move [X8+1], V0
	029 Move X30, [X31+32]
	030 Return 

