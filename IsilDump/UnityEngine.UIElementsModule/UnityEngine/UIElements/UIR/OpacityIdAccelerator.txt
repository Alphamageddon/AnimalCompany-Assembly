Type: UnityEngine.UIElements.UIR.OpacityIdAccelerator

Method: System.Void CreateJob(Unity.Collections.NativeSlice`1<UnityEngine.UIElements.Vertex> oldVerts, Unity.Collections.NativeSlice`1<UnityEngine.UIElements.Vertex> newVerts, UnityEngine.Color32 opacityData, System.Int32 vertexCount)

Disassembly:
	0x03D24068 LDR X1, [X8]
	0x03D2406C BL 0x26AEE44
	0x03D24070 LDR X0, [X19 + 0x130]
	0x03D24074 CBZ X0, 0x3D24188
	0x03D24078 ADRP X8, 0x440000
	0x03D2407C LDR X8, [X8 + 0x498]
	0x03D24080 LDR X1, [X8]
	0x03D24084 BL 0x26AE7A0
	0x03D24088 LDR X0, [X19 + 0x138]
	0x03D2408C CBZ X0, 0x3D24188
	0x03D24090 ADRP X20, 0x440000
	0x03D24094 LDR X20, [X20 + 0x760]
	0x03D24098 BL 0x3D22370
	0x03D2409C LDR X0, [X19 + 0x120]
	0x03D240A0 CBZ X0, 0x3D240AC
	0x03D240A4 MOV X1, X31
	0x03D240A8 BL 0x3D2D930
	0x03D240AC LDR X0, [X20]
	0x03D240B0 ADD X20, X19, 0x140
	0x03D240B4 LDR W8, [X0 + 0xE0]
	0x03D240B8 CBNZ W8, 0x3D240C0
	0x03D240BC BL 0x1C16DFC
	0x03D240C0 MOV X0, X20
	0x03D240C4 MOV X1, X31
	0x03D240C8 BL 0x3D2C3E4
	0x03D240CC LDR X0, [X19 + 0x110]
	0x03D240D0 CBZ X0, 0x3D240DC
	0x03D240D4 MOV X1, X31
	0x03D240D8 BL 0x3D2EF88
	0x03D240DC LDR X0, [X19 + 0xF8]
	0x03D240E0 CBZ X0, 0x3D240E8
	0x03D240E4 BL 0x3D23208
	0x03D240E8 LDR X8, [X19 + 0x210]
	0x03D240EC CBZ X8, 0x3D2412C
	0x03D240F0 LDR X0, [X8 + 0x108]
	0x03D240F4 CBZ X0, 0x3D24188
	0x03D240F8 MOV X1, X31
	0x03D240FC BL 0x3DC5D30
	0x03D24100 TBZ X0, 0x0, 0x3D24128
	0x03D24104 LDR X8, [X19 + 0x210]
	0x03D24108 CBZ X8, 0x3D24188
	0x03D2410C LDR X0, [X8 + 0x108]
	0x03D24110 CBZ X0, 0x3D24188
	0x03D24114 MOV X1, X31
	0x03D24118 BL 0x3DC5C74
	0x03D2411C CBZ X0, 0x3D24188
	0x03D24120 MOV X1, X31
	0x03D24124 BL 0x3DC5E60
	0x03D24128 STR X31, [X19 + 0x210]
	0x03D2412C MOVZ W2, 0xD0
	0x03D24130 MOV X0, X20
	0x03D24134 MOV W1, W31
	0x03D24138 ADD X21, X19, 0x110
	0x03D2413C BL 0x3EB1B10
	0x03D24140 STR W31, [X19 + 0x80]
	0x03D24144 STP X31, X31, [X21]
	0x03D24148 LDR X8, [X19 + 0x50]
	0x03D2414C CBZ X8, 0x3D24188
	0x03D24150 LDP W2, W9, [X8 + 0x18]
	0x03D24154 ADD W9, W9, 0x1
	0x03D24158 CMP W2, 0x1

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X26, 0x6C4000
	013 Move X27, 0x441000
	014 Move W8, [X26+2700]
	015 Move X27, [X27+1600]
	016 Move W20, W6
	017 Move X21, X5
	018 Move X22, X4
	019 Move X23, X3
	020 Move X24, X2
	021 Move X25, X1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x441000
	028 Move X0, [X0+1600]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+2700], W8
	032 Move X5, [X27]
	033 Add X0, X31, 8
	034 Move W2, 128
	035 Move W1, W20
	036 Move X3, X31
	037 Move X4, X31
	038 Move [X31+8], X25
	039 Move [X31+16], X24
	040 Move [X31+24], X23
	041 Move [X31+32], X22
	042 Move [X31+40], W21
	043 Move [X31+44], W31
	044 Call IJobParallelForExtensions.Schedule, X0, X1, X2, X3
	045 Move W8, [X19+32]
	046 Move W9, [X19+24]
	047 Move X20, X0
	048 Move X21, X1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, [X19+16]
	051 Move X1, [X19+24]
	052 Move X2, X31
	053 Call JobHandle.CombineDependencies, X0
	054 Move X8, [X19+16]
	055 Move W9, 1
	056 Move [X8], X0
	057 Move [X8+8], X1
	058 Move X0, X31
	059 Move [X19+32], W9
	060 Call JobHandle.ScheduleBatchedJobs
	061 Move W8, [X19+32]
	062 Move X9, [X19+16]
	063 Add W10, W8, 1
	064 Move [X19+32], W10
	065 Move X24, [X31+80]
	066 Move X23, [X31+88]
	067 Add X8, X9, W8
	068 Move [X8], X20
	069 Move [X8+8], X21
	070 Move X20, [X31+112]
	071 Move X19, [X31+120]
	072 Move X22, [X31+96]
	073 Move X21, [X31+104]
	074 Move X26, [X31+64]
	075 Move X25, [X31+72]
	076 Move X30, [X31+48]
	077 Move X27, [X31+56]
	078 Add X31, X31, 128
	079 Return 

Method: System.Void CompleteJobs()

Disassembly:
	0x03D2415C STP W31, W9, [X8 + 0x18]
	0x03D24160 B.LT 0x3D2417C
	0x03D24164 LDR X0, [X8 + 0x10]
	0x03D24168 LDP X20, X19, [X31 + 0x10]
	0x03D2416C MOV W1, W31
	0x03D24170 MOV X3, X31
	0x03D24174 LDP X30, X21, [X31], #0x20
	0x03D24178 B 0x339FA34
	0x03D2417C LDP X20, X19, [X31 + 0x10]
	0x03D24180 LDP X30, X21, [X31], #0x20
	0x03D24184 RET
	0x03D24188 BL 0x1C16F20
	0x03D2418C STR X30, [X31 - 0x10]!
	0x03D24190 CBZ X0, 0x3D241C0
	0x03D24194 MOV X9, X31
	0x03D24198 MOV X8, X0
	0x03D2419C LDR X0, [X0 + 0x88]
	0x03D241A0 CMP X0, 0x0
	0x03D241A4 CSEL X9, X9, X0, EQ
	0x03D241A8 CBZ X0, 0x3D241C4
	0x03D241AC CBZ X9, 0x3D241D0
	0x03D241B0 LDRB W10, [X9 + 0xE8]
	0x03D241B4 MOV X9, X0
	0x03D241B8 CBNZ W10, 0x3D24198
	0x03D241BC B 0x3D241C4
	0x03D241C0 MOV X8, X31
	0x03D241C4 MOV X0, X8
	0x03D241C8 LDR X30, [X31], #0x10
	0x03D241CC RET
	0x03D241D0 BL 0x1C16F20
	0x03D241D4 STR X30, [X31 - 0x50]!
	0x03D241D8 STP X26, X25, [X31 + 0x10]
	0x03D241DC STP X24, X23, [X31 + 0x20]
	0x03D241E0 STP X22, X21, [X31 + 0x30]
	0x03D241E4 STP X20, X19, [X31 + 0x40]
	0x03D241E8 ADRP X20, 0x6C3000
	0x03D241EC LDRB W8, [X20 + 0xAAA]
	0x03D241F0 MOV X19, X1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x6C4000
	006 Move W8, [X20+2701]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x441000
	013 Move X0, [X0+1304]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2701], W8
	017 Move [X31], X31
	018 Move [X31+8], X31
	019 Move W3, [X19+32]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, [X19+16]
	022 Move V0, [X8]
	023 Move [X31], V0
	024 Move X8, 0x441000
	025 Move X0, [X19+16]
	026 Move X1, [X19+24]
	027 Move X8, [X8+1304]
	028 Move W2, W31
	029 Move X4, [X8]
	030 Call NativeSliceExtensions.Slice, X0, X1, X2
	031 Move X2, X31
	032 Call JobHandle.CombineDependencies, X0
	033 Move [X31], X0
	034 Move [X31+8], X1
	035 Add X0, X31, 0
	036 Move X1, X31
	037 Call JobHandle.Complete, X0
	038 Move [X19+32], W31
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+16]
	042 Add X31, X31, 48
	043 Return 

Method: System.Boolean get_disposed()

Disassembly:
	0x03D241F4 MOV X22, X0
	0x03D241F8 TBNZ X8, 0x0, 0x3D2421C

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void set_disposed(System.Boolean value)

Disassembly:
	0x03D241FC ADRP X0, 0x440000
	0x03D24200 LDR X0, [X0 + 0x770]
	0x03D24204 BL 0x1C16CF4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+36], W8
	003 Return 

Method: System.Void Dispose()

Disassembly:
	0x03D24208 ADRP X0, 0x3F9000
	0x03D2420C LDR X0, [X0 + 0x250]
	0x03D24210 BL 0x1C16CF4
	0x03D24214 MOVZ W8, 0x1
	0x03D24218 STRB W8, [X20 + 0xAAA]
	0x03D2421C CBZ X19, 0x3D242DC
	0x03D24220 LDR X20, [X22 + 0x118]
	0x03D24224 LDR X21, [X22 + 0xF0]
	0x03D24228 LDR X23, [X19 + 0x1C8]
	0x03D2422C LDR X22, [X22 + 0x48]
	0x03D24230 STR X31, [X19 + 0x1C8]
	0x03D24234 CBZ X23, 0x3D242C4
	0x03D24238 ADRP X24, 0x440000
	0x03D2423C ADRP X25, 0x3F9000
	0x03D24240 LDR X24, [X24 + 0x770]
	0x03D24244 LDR X25, [X25 + 0x250]
	0x03D24248 LDRB W8, [X23 + 0x2C]
	0x03D2424C LDR X26, [X23 + 0x18]
	0x03D24250 CBZ W8, 0x3D24274
	0x03D24254 CBZ X20, 0x3D242DC
	0x03D24258 LDR X8, [X23 + 0x20]
	0x03D2425C CBZ X8, 0x3D2428C
	0x03D24260 LDR X9, [X25]
	0x03D24264 LDR X10, [X8]
	0x03D24268 CMP X10, X9
	0x03D2426C CSEL X2, X8, X31, EQ
	0x03D24270 B 0x3D24290

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6C4000
	006 Move X20, 0x3D7000
	007 Move W8, [X21+2702]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3D7000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2702], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+392]
	023 Move X2, [X8+400]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03D24274 CBZ X21, 0x3D242DC
	0x03D24278 LDR W1, [X23 + 0x28]
	0x03D2427C MOV X0, X21
	0x03D24280 MOV X2, X31
	0x03D24284 BL 0x3DE085C
	0x03D24288 B 0x3D242A8
	0x03D2428C MOV X2, X31
	0x03D24290 LDR X8, [X20]
	0x03D24294 LDR W3, [X23 + 0x28]
	0x03D24298 MOV X0, X20
	0x03D2429C MOV X1, X19
	0x03D242A0 LDP X9, X4, [X8 + 0x188]
	0x03D242A4 BLR X9
	0x03D242A8 CBZ X22, 0x3D242DC
	0x03D242AC LDR X2, [X24]
	0x03D242B0 MOV X0, X22
	0x03D242B4 MOV X1, X23
	0x03D242B8 BL 0x2EF0E90
	0x03D242BC MOV X23, X26
	0x03D242C0 CBNZ X26, 0x3D24248
	0x03D242C4 LDP X20, X19, [X31 + 0x40]
	0x03D242C8 LDP X22, X21, [X31 + 0x30]
	0x03D242CC LDP X24, X23, [X31 + 0x20]
	0x03D242D0 LDP X26, X25, [X31 + 0x10]
	0x03D242D4 LDR X30, [X31], #0x50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6C4000
	006 Move W8, [X21+2703]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x441000
	014 Move X0, [X0+1528]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2703], W8
	018 Move W8, [X19+36]
	019 Compare W8, 0
	020 JumpIfNotEqual {32}
	021 Move TEMP, X20
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {30}
	025 Move X8, 0x441000
	026 Move X8, [X8+1528]
	027 Add X0, X19, 16
	028 Move X1, [X8]
	029 Call NativeArray`1<JobHandle>.Dispose, X0
	030 Move W8, 1
	031 Move [X19+36], W8
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

Method: System.Void .ctor()

Disassembly:
	0x03D242D8 RET
	0x03D242DC BL 0x1C16F20
	0x03D242E0 LDRB W0, [X0 + 0x100]
	0x03D242E4 RET
	0x03D242E8 AND W8, W1, 0x1
	0x03D242EC STRB W8, [X0 + 0x100]
	0x03D242F0 RET
	0x03D242F4 STR X30, [X31 - 0x20]!
	0x03D242F8 STP X20, X19, [X31 + 0x10]
	0x03D242FC ADRP X20, 0x6C3000
	0x03D24300 LDRB W8, [X20 + 0xA96]
	0x03D24304 MOV X19, X0
	0x03D24308 TBNZ X8, 0x0, 0x3D24320
	0x03D2430C ADRP X0, 0x3D6000
	0x03D24310 LDR X0, [X0 + 0xC10]
	0x03D24314 BL 0x1C16CF4
	0x03D24318 MOVZ W8, 0x1
	0x03D2431C STRB W8, [X20 + 0xA96]
	0x03D24320 ADRP X20, 0x3D6000
	0x03D24324 LDRB W8, [X19 + 0x100]
	0x03D24328 LDR X20, [X20 + 0xC10]
	0x03D2432C CBNZ W8, 0x3D24340
	0x03D24330 MOV X0, X19
	0x03D24334 BL 0x3D23F00
	0x03D24338 MOVZ W8, 0x1
	0x03D2433C STRB W8, [X19 + 0x100]
	0x03D24340 LDR X0, [X20]
	0x03D24344 LDR W8, [X0 + 0xE0]
	0x03D24348 CBNZ W8, 0x3D24350
	0x03D2434C BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6C4000
	007 Move X20, 0x441000
	008 Move W8, [X21+2704]
	009 Move X20, [X20+1520]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x441000
	016 Move X0, [X0+1520]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2704], W8
	020 Move X4, [X20]
	021 Add X0, X31, 0
	022 Move W1, 256
	023 Move W2, 4
	024 Move W3, W31
	025 Move [X31], X31
	026 Move [X31+8], X31
	027 Call NativeArray`1<JobHandle>..ctor, X0, X1, X2, X3
	028 Move V0, [X31]
	029 Move X0, X19
	030 Move X1, X31
	031 Move [X19+1], V0
	032 Call Object..ctor, X0
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X30, [X31+16]
	036 Move X21, [X31+24]
	037 Add X31, X31, 48
	038 Return 

