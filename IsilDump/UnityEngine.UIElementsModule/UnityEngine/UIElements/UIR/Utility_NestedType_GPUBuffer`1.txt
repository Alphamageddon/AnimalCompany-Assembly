Type: UnityEngine.UIElements.UIR.Utility/GPUBuffer`1

Method: System.Void .ctor(System.Int32 elementCount, UnityEngine.UIElements.UIR.Utility/GPUBufferType type)

Disassembly:
	0x02D43B4C LDP X30, X19, [X31], #0x10
	0x02D43B50 RET
	0x02D43B54 STR X30, [X31 - 0x10]!
	0x02D43B58 CBZ X0, 0x2D43B88
	0x02D43B5C MOV X1, X31
	0x02D43B60 BL 0x33BE520
	0x02D43B64 CBZ X0, 0x2D43B88
	0x02D43B68 LDR X8, [X0]
	0x02D43B6C LDP X9, X1, [X8 + 0x1A8]
	0x02D43B70 BLR X9
	0x02D43B74 CBZ X0, 0x2D43B88
	0x02D43B78 LDR X8, [X0]
	0x02D43B7C LDP X2, X1, [X8 + 0x158]
	0x02D43B80 LDR X30, [X31], #0x10
	0x02D43B84 BR X2
	0x02D43B88 BL 0x1C16F20
	0x02D43B8C LDR X8, [X1 + 0x20]
	0x02D43B90 LDR X8, [X8 + 0xC0]
	0x02D43B94 LDR X1, [X8 + 0x20]
	0x02D43B98 B 0x290C1A0
	0x02D43B9C SUB X31, X31, 0x20
	0x02D43BA0 STR X30, [X31 + 0x10]
	0x02D43BA4 STR X1, [X31]
	0x02D43BA8 STR W2, [X31 + 0x8]
	0x02D43BAC LDR X9, [X5 + 0x20]
	0x02D43BB0 MOV X8, X3
	0x02D43BB4 AND X2, X4, 0x0
	0x02D43BB8 ADD X0, X31, 0x0
	0x02D43BBC LDR X9, [X9 + 0xC0]
	0x02D43BC0 MOV X1, X8
	0x02D43BC4 LDR X3, [X9 + 0x10]
	0x02D43BC8 BL 0x2797C8C
	0x02D43BCC LDR X30, [X31 + 0x10]
	0x02D43BD0 ADD X31, X31, 0x20
	0x02D43BD4 RET
	0x02D43BD8 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1699000
	008 Move X22, 0x13DA000
	009 Move W8, [X23+2135]
	010 Move X22, [X22+2080]
	011 Move W21, W2
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x13DA000
	019 Move X0, [X0+2080]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2135], W8
	023 Move X0, X19
	024 Move X1, X31
	025 Call Object..ctor, X0
	026 Move W8, 2
	027 Move [X19+24], W20
	028 Move [X19+28], W8
	029 Move X0, [X22]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 Move W1, 2
	037 Move W0, W20
	038 Move X3, X31
	039 Call Utility.AllocateBuffer, X0, X1, X2
	040 Move [X19+16], X0
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Return 

Method: System.Void Dispose()

Disassembly:
	0x02D43BDC LDR X8, [X2 + 0x20]
	0x02D43BE0 MOV X19, X1
	0x02D43BE4 LDR X8, [X8 + 0xC0]
	0x02D43BE8 LDR X0, [X8 + 0x18]
	0x02D43BEC LDRB W8, [X0 + 0x135]
	0x02D43BF0 TBNZ X8, 0x0, 0x2D43BF8
	0x02D43BF4 BL 0x1C5C684
	0x02D43BF8 CBZ X19, 0x2D43C10
	0x02D43BFC LDR X8, [X19]
	0x02D43C00 LDRB W9, [X0 + 0x130]
	0x02D43C04 LDRB W10, [X8 + 0x130]
	0x02D43C08 CMP W10, W9
	0x02D43C0C B.CS 0x2D43C18
	0x02D43C10 MOV W0, W31
	0x02D43C14 B 0x2D43C2C
	0x02D43C18 LDR X8, [X8 + 0xC8]
	0x02D43C1C ADD X8, X8, X9, 0x3, LSL
	0x02D43C20 LDUR X8, [X8 - 0x8]
	0x02D43C24 CMP X8, X0
	0x02D43C28 CSET W0, EQ
	0x02D43C2C LDP X30, X19, [X31], #0x10
	0x02D43C30 RET
	0x02D43C34 STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1699000
	006 Move X20, 0x13DA000
	007 Move W8, [X21+2136]
	008 Move X20, [X20+2080]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x13DA000
	015 Move X0, [X0+2080]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2136], W8
	019 Move X0, [X20]
	020 Move X19, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Utility.FreeBuffer, X0
	032 Return 

Method: System.Void UpdateRanges(Unity.Collections.NativeSlice`1<UnityEngine.UIElements.UIR.GfxUpdateBufferRange> ranges, System.Int32 rangesMin, System.Int32 rangesMax)

Disassembly:
	0x02D43C38 CBZ X0, 0x2D43C68
	0x02D43C3C MOV X1, X31
	0x02D43C40 BL 0x33BE520
	0x02D43C44 CBZ X0, 0x2D43C68
	0x02D43C48 LDR X8, [X0]
	0x02D43C4C LDP X9, X1, [X8 + 0x1A8]
	0x02D43C50 BLR X9
	0x02D43C54 CBZ X0, 0x2D43C68
	0x02D43C58 LDR X8, [X0]
	0x02D43C5C LDP X2, X1, [X8 + 0x158]
	0x02D43C60 LDR X30, [X31], #0x10
	0x02D43C64 BR X2
	0x02D43C68 BL 0x1C16F20
	0x02D43C6C LDR X8, [X1 + 0x20]
	0x02D43C70 LDR X8, [X8 + 0xC0]
	0x02D43C74 LDR X1, [X8 + 0x20]
	0x02D43C78 B 0x290C7C4
	0x02D43C7C STR X30, [X31 - 0x10]!
	0x02D43C80 STR X1, [X31 + 0x8]
	0x02D43C84 LDR X8, [X3 + 0x20]
	0x02D43C88 MOV X1, X2
	0x02D43C8C ADD X0, X31, 0x8
	0x02D43C90 LDR X8, [X8 + 0xC0]
	0x02D43C94 LDR X8, [X8 + 0x10]
	0x02D43C98 MOV X2, X8
	0x02D43C9C BL 0x279FFB8
	0x02D43CA0 LDR X30, [X31], #0x10
	0x02D43CA4 RET
	0x02D43CA8 STP X30, X19, [X31 - 0x10]!
	0x02D43CAC LDR X8, [X2 + 0x20]
	0x02D43CB0 MOV X19, X1
	0x02D43CB4 LDR X8, [X8 + 0xC0]
	0x02D43CB8 LDR X0, [X8 + 0x18]
	0x02D43CBC LDRB W8, [X0 + 0x135]
	0x02D43CC0 TBNZ X8, 0x0, 0x2D43CC8
	0x02D43CC4 BL 0x1C5C684
	0x02D43CC8 CBZ X19, 0x2D43CE0
	0x02D43CCC LDR X8, [X19]
	0x02D43CD0 LDRB W9, [X0 + 0x130]
	0x02D43CD4 LDRB W10, [X8 + 0x130]
	0x02D43CD8 CMP W10, W9
	0x02D43CDC B.CS 0x2D43CE8
	0x02D43CE0 MOV W0, W31
	0x02D43CE4 B 0x2D43CFC
	0x02D43CE8 LDR X8, [X8 + 0xC8]
	0x02D43CEC ADD X8, X8, X9, 0x3, LSL
	0x02D43CF0 LDUR X8, [X8 - 0x8]
	0x02D43CF4 CMP X8, X0
	0x02D43CF8 CSET W0, EQ
	0x02D43CFC LDP X30, X19, [X31], #0x10
	0x02D43D00 RET
	0x02D43D04 STR X30, [X31 - 0x10]!
	0x02D43D08 CBZ X0, 0x2D43D38
	0x02D43D0C MOV X1, X31
	0x02D43D10 BL 0x33BE520
	0x02D43D14 CBZ X0, 0x2D43D38
	0x02D43D18 LDR X8, [X0]
	0x02D43D1C LDP X9, X1, [X8 + 0x1A8]
	0x02D43D20 BLR X9
	0x02D43D24 CBZ X0, 0x2D43D38
	0x02D43D28 LDR X8, [X0]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x1699000
	013 Move [X31], X1
	014 Move [X31+8], X2
	015 Move X26, 0x13DC000
	016 Move X25, 0x13DC000
	017 Move X24, 0x13DA000
	018 Move W8, [X27+2137]
	019 Move X26, [X26+3800]
	020 Move X25, [X25+3808]
	021 Move X24, [X24+2080]
	022 Move W19, W4
	023 Move W20, W3
	024 Move X21, X2
	025 Move X22, X1
	026 Move X23, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {42}
	031 Move X0, 0x13DC000
	032 Move X0, [X0+3800]
	033 Call 0x1C17CF4
	034 Move X0, 0x13DC000
	035 Move X0, [X0+3808]
	036 Call 0x1C17CF4
	037 Move X0, 0x13DA000
	038 Move X0, [X0+2080]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X27+2137], W8
	042 Move X2, [X26]
	043 Move X23, [X23+16]
	044 Move X0, X22
	045 Move X1, X21
	046 Call NativeSliceUnsafeUtility.GetUnsafePtr, X0
	047 Move X1, [X25]
	048 Move X21, X0
	049 Add X0, X31, 0
	050 Call NativeSlice`1<GfxUpdateBufferRange>.get_Length, X0
	051 Move X8, [X24]
	052 Move W22, W0
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {58}
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Move X0, X23
	059 Move X1, X21
	060 Move W2, W22
	061 Move W3, W20
	062 Move W4, W19
	063 Move X5, X31
	064 Call Utility.UpdateBufferRanges, X0, X1, X2, X3, X4
	065 Move X20, [X31+80]
	066 Move X19, [X31+88]
	067 Move X22, [X31+64]
	068 Move X21, [X31+72]
	069 Move X24, [X31+48]
	070 Move X23, [X31+56]
	071 Move X26, [X31+32]
	072 Move X25, [X31+40]
	073 Move X30, [X31+16]
	074 Move X27, [X31+24]
	075 Add X31, X31, 96
	076 Return 

Method: System.Int32 get_ElementStride()

Disassembly:
	0x02D43D2C LDP X2, X1, [X8 + 0x158]
	0x02D43D30 LDR X30, [X31], #0x10

ISIL:
	001 Move W0, [X0+28]
	002 Return X0

Method: System.IntPtr get_BufferPointer()

Disassembly:
	0x02D43D34 BR X2
	0x02D43D38 BL 0x1C16F20

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

