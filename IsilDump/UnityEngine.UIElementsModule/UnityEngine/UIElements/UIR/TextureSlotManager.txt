Type: UnityEngine.UIElements.UIR.TextureSlotManager

Method: System.Void .cctor()

Disassembly:
	0x03D2A248 STP X20, X19, [X31 + 0x70]
	0x03D2A24C ADRP X21, 0x6BD000
	0x03D2A250 LDRB W8, [X21 + 0xADD]
	0x03D2A254 MOV X20, X1
	0x03D2A258 MOV X19, X0
	0x03D2A25C TBNZ X8, 0x0, 0x3D2A2E0
	0x03D2A260 ADRP X0, 0x43A000
	0x03D2A264 LDR X0, [X0 + 0x9C8]
	0x03D2A268 BL 0x1C16CF4
	0x03D2A26C ADRP X0, 0x3CF000
	0x03D2A270 LDR X0, [X0 + 0x1D0]
	0x03D2A274 BL 0x1C16CF4
	0x03D2A278 ADRP X0, 0x43A000
	0x03D2A27C LDR X0, [X0 + 0xB50]
	0x03D2A280 BL 0x1C16CF4
	0x03D2A284 ADRP X0, 0x43A000
	0x03D2A288 LDR X0, [X0 + 0xB58]
	0x03D2A28C BL 0x1C16CF4
	0x03D2A290 ADRP X0, 0x43A000
	0x03D2A294 LDR X0, [X0 + 0xB60]
	0x03D2A298 BL 0x1C16CF4
	0x03D2A29C ADRP X0, 0x43A000
	0x03D2A2A0 LDR X0, [X0 + 0xB68]
	0x03D2A2A4 BL 0x1C16CF4
	0x03D2A2A8 ADRP X0, 0x42E000
	0x03D2A2AC LDR X0, [X0 + 0x860]
	0x03D2A2B0 BL 0x1C16CF4
	0x03D2A2B4 ADRP X0, 0x43A000
	0x03D2A2B8 LDR X0, [X0 + 0xB70]
	0x03D2A2BC BL 0x1C16CF4
	0x03D2A2C0 ADRP X0, 0x43A000
	0x03D2A2C4 LDR X0, [X0 + 0xB78]
	0x03D2A2C8 BL 0x1C16CF4
	0x03D2A2CC ADRP X0, 0x43A000
	0x03D2A2D0 LDR X0, [X0 + 0xB80]
	0x03D2A2D4 BL 0x1C16CF4
	0x03D2A2D8 MOVZ W8, 0x1
	0x03D2A2DC STRB W8, [X21 + 0xADD]
	0x03D2A2E0 STP X31, X31, [X31 + 0x10]
	0x03D2A2E4 STR X31, [X31 + 0x8]
	0x03D2A2E8 LDR X0, [X19 + 0x8]
	0x03D2A2EC CBZ X0, 0x3D2A6B8
	0x03D2A2F0 LDR W28, [X0 + 0x18]
	0x03D2A2F4 CMP W28, 0x1
	0x03D2A2F8 B.LT 0x3D2A3F8
	0x03D2A2FC ADRP X29, 0x43A000
	0x03D2A300 ADRP X26, 0x42E000
	0x03D2A304 LDR X29, [X29 + 0xB68]
	0x03D2A308 LDR X26, [X26 + 0x860]
	0x03D2A30C MOV W25, W31
	0x03D2A310 MOV W21, W31
	0x03D2A314 LDR X2, [X29]
	0x03D2A318 MOV W1, W21
	0x03D2A31C BL 0x30ED44C
	0x03D2A320 UBFM X8, X0, 0x20, 0x3F
	0x03D2A324 CBZ X8, 0x3D2A364
	0x03D2A328 LDR W27, [X19]
	0x03D2A32C MUL W22, W27, W21
	0x03D2A330 ADD W8, W22, W27
	0x03D2A334 CMP W22, W8
	0x03D2A338 B.GE 0x3D2A364
	0x03D2A33C MOV X23, X0
	0x03D2A340 LDR X0, [X19 + 0x10]
	0x03D2A344 CBZ X0, 0x3D2A6B8
	0x03D2A348 LDR X2, [X26]
	0x03D2A34C MOV W1, W22
	0x03D2A350 BL 0x30C13A8
	0x03D2A354 CBNZ W0, 0x3D2A380
	0x03D2A358 SUBS W27, W27, 0x1
	0x03D2A35C ADD W22, W22, 0x1
	0x03D2A360 B.NE 0x3D2A340
	0x03D2A364 ADD W21, W21, 0x1
	0x03D2A368 CMP W21, W28
	0x03D2A36C B.EQ 0x3D2A3F8
	0x03D2A370 LDR X0, [X19 + 0x8]
	0x03D2A374 SUB W25, W25, 0x1
	0x03D2A378 CBNZ X0, 0x3D2A314
	0x03D2A37C B 0x3D2A6B8
	0x03D2A380 MOV W24, W0
	0x03D2A384 BL 0x3D2A6BC
	0x03D2A388 LDR X8, [X19 + 0x10]
	0x03D2A38C CBZ X8, 0x3D2A6B8
	0x03D2A390 ADRP X9, 0x43A000
	0x03D2A394 LDR X9, [X9 + 0xB80]
	0x03D2A398 MOVZ W26, 0x1
	0x03D2A39C MOV W20, W0
	0x03D2A3A0 MOV W1, W22
	0x03D2A3A4 LDR X3, [X9]
	0x03D2A3A8 LSLV W9, W26, W0
	0x03D2A3AC BIC W2, W24, W9, 0x0
	0x03D2A3B0 MOV X0, X8
	0x03D2A3B4 BL 0x30C13FC
	0x03D2A3B8 LDR X0, [X19 + 0x8]
	0x03D2A3BC CBZ X0, 0x3D2A6B8
	0x03D2A3C0 ADRP X8, 0x43A000
	0x03D2A3C4 LDR X8, [X8 + 0xB78]
	0x03D2A3C8 MOV W1, W21
	0x03D2A3CC LDR X3, [X8]
	0x03D2A3D0 MOV X8, INVALID
	0x03D2A3D4 ADD X2, X23, X8
	0x03D2A3D8 BL 0x30ED4A0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x6BE000
	009 Move X19, 0x43B000
	010 Move X21, 0x43B000
	011 Move X20, 0x43B000
	012 Move W8, [X22+2769]
	013 Move X19, [X19+2816]
	014 Move X21, [X21+2824]
	015 Move X20, [X20+1784]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x3CB000
	021 Move X0, [X0+3672]
	022 Call 0x1C17CF4
	023 Move X0, 0x3CA000
	024 Move X0, [X0+1880]
	025 Call 0x1C17CF4
	026 Move X0, 0x43B000
	027 Move X0, [X0+2816]
	028 Call 0x1C17CF4
	029 Move X0, 0x43B000
	030 Move X0, [X0+1784]
	031 Call 0x1C17CF4
	032 Move X0, 0x43B000
	033 Move X0, [X0+2824]
	034 Call 0x1C17CF4
	035 Move X0, 0x43B000
	036 Move X0, [X0+2832]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+2769], W8
	040 Move X8, [X19]
	041 Move W9, 2
	042 Move X1, X31
	043 Move X8, [X8+184]
	044 Move [X8+4], W9
	045 Move X0, [X21]
	046 Move X21, 0x3CB000
	047 Move X21, [X21+3672]
	048 Call Shader.PropertyToID, X0
	049 Move X8, [X19]
	050 Move X8, [X8+184]
	051 Move [X8+16], W0
	052 Move X0, [X20]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Call UIRenderDevice.get_shaderModelIs35
	058 Move X8, [X19]
	059 And W31, W0, 1
	060 Move W9, 4
	061 Move W10, 8
	062 Move X8, [X8+184]
	063 NotImplemented "Instruction CSEL not yet implemented."
	064 Move [X8], W1
	065 Move X0, [X21]
	066 Call 0x1C17D6C
	067 Move X8, [X19]
	068 Move X8, [X8+184]
	069 Move W9, [X8]
	070 Move [X8+8], X0
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X21, 0x3CA000
	073 Move X22, 0x43B000
	074 Move X21, [X21+1880]
	075 Move X22, [X22+2832]
	076 Move X20, X31
	077 Move X0, [X21]
	078 Move X23, [X8+8]
	079 Add X1, X31, 12
	080 Move [X31+12], W20
	081 Call 0x1C17E04
	082 Move X8, [X22]
	083 Move X1, X0
	084 Move X2, X31
	085 Move X0, X8
	086 Call String.Format, X0, X1
	087 Move X1, X31
	088 Call Shader.PropertyToID, X0
	089 Compare X23, 0
	090 JumpIfEqual {108}
	091 Move W8, [X23+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add X8, X23, X20
	094 Move [X8+32], W0
	095 Move X8, [X19]
	096 Add X20, X20, 1
	097 Move X8, [X8+184]
	098 NotImplemented "Instruction LDRSW not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X20, [X31+48]
	101 Move X19, [X31+56]
	102 Move X22, [X31+32]
	103 Move X21, [X31+40]
	104 Move X30, [X31+16]
	105 Move X23, [X31+24]
	106 Add X31, X31, 64
	107 Return 
	108 Call 0x1C17F20
	109 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x03D2A5B8 LDRB W8, [X23 + 0xD8C]
	0x03D2A5BC MOV W21, W0
	0x03D2A5C0 CBNZ W8, 0x3D2A5D8
	0x03D2A5C4 ADRP X0, 0x3C9000
	0x03D2A5C8 LDR X0, [X0 + 0x5A8]
	0x03D2A5CC BL 0x1C16CF4
	0x03D2A5D0 MOVZ W8, 0x1
	0x03D2A5D4 STRB W8, [X23 + 0xD8C]
	0x03D2A5D8 LDR X0, [X22]
	0x03D2A5DC LDR W22, [X31 + 0x14]
	0x03D2A5E0 LDR W23, [X31 + 0x1C]
	0x03D2A5E4 LDR W8, [X0 + 0xE0]
	0x03D2A5E8 CBNZ W8, 0x3D2A5F0
	0x03D2A5EC BL 0x1C16DFC
	0x03D2A5F0 ADD W1, W23, W22
	0x03D2A5F4 MOV W0, W22
	0x03D2A5F8 MOV X2, X31
	0x03D2A5FC BL 0x337EE94
	0x03D2A600 CBZ X20, 0x3D2A6B8
	0x03D2A604 ADRP X10, 0x43A000
	0x03D2A608 LDR W9, [X19]
	0x03D2A60C LDR X10, [X10 + 0xB50]
	0x03D2A610 LDR W11, [X20 + 0x1C]
	0x03D2A614 LDR X8, [X20 + 0x10]
	0x03D2A618 LDR X10, [X10]
	0x03D2A61C ADD W11, W11, 0x1
	0x03D2A620 STR W11, [X20 + 0x1C]
	0x03D2A624 CBZ X8, 0x3D2A6B8
	0x03D2A628 LDRSW X11, [X20 + 0x18]
	0x03D2A62C LDR W12, [X8 + 0x18]
	0x03D2A630 UBFM W9, W9, 0x1B, 0x1A
	0x03D2A634 SUB W9, W9, 0x1
	0x03D2A638 BFM W21, W0, 0x10, 0xF
	0x03D2A63C CMP W11, W12
	0x03D2A640 BFM X21, X9, 0x20, 0x1F
	0x03D2A644 B.CS 0x3D2A65C
	0x03D2A648 ADD W9, W11, 0x1
	0x03D2A64C ADD X8, X8, X11, 0x3, LSL
	0x03D2A650 STR W9, [X20 + 0x18]
	0x03D2A654 STR X21, [X8 + 0x20]
	0x03D2A658 B 0x3D2A674
	0x03D2A65C LDR X8, [X10 + 0x20]
	0x03D2A660 MOV X0, X20
	0x03D2A664 MOV X1, X21
	0x03D2A668 LDR X8, [X8 + 0xC0]
	0x03D2A66C LDR X2, [X8 + 0x70]
	0x03D2A670 BL 0x30ED73C
	0x03D2A674 MOVZ X8, 0x1000000
	0x03D2A678 STR X8, [X31 + 0x8]
	0x03D2A67C LDR X8, [X19 + 0x8]
	0x03D2A680 CBZ X8, 0x3D2A6B8
	0x03D2A684 LDR W8, [X8 + 0x18]
	0x03D2A688 SUB W8, W8, 0x1
	0x03D2A68C STR W8, [X31 + 0x8]
	0x03D2A690 ADD X8, X31, 0x8
	0x03D2A694 LDR X0, [X8]
	0x03D2A698 LDP X20, X19, [X31 + 0x70]
	0x03D2A69C LDP X22, X21, [X31 + 0x60]
	0x03D2A6A0 LDP X24, X23, [X31 + 0x50]
	0x03D2A6A4 LDP X26, X25, [X31 + 0x40]
	0x03D2A6A8 LDP X28, X27, [X31 + 0x30]
	0x03D2A6AC LDP X29, X30, [X31 + 0x20]
	0x03D2A6B0 ADD X31, X31, 0x80
	0x03D2A6B4 RET
	0x03D2A6B8 BL 0x1C16F20
	0x03D2A6BC ANDS W31, W0, 0xFFFF
	0x03D2A6C0 UBFM W8, W0, 0x10, 0x1F
	0x03D2A6C4 CSEL W8, W8, W0, EQ
	0x03D2A6C8 MOVZ W9, 0x8
	0x03D2A6CC CSET W10, EQ
	0x03D2A6D0 UBFM W12, W8, 0x8, 0x1F
	0x03D2A6D4 ANDS W31, W8, 0xFF
	0x03D2A6D8 UBFM W11, W10, 0x1C, 0x1B
	0x03D2A6DC BFM W9, W10, 0x1C, 0x0
	0x03D2A6E0 CSEL W8, W12, W8, EQ
	0x03D2A6E4 CSEL W9, W9, W11, EQ
	0x03D2A6E8 UBFM W10, W8, 0x4, 0x1F
	0x03D2A6EC ANDS W31, W8, 0xF
	0x03D2A6F0 ORR W11, W9, 0x4
	0x03D2A6F4 CSEL W8, W10, W8, EQ
	0x03D2A6F8 CSEL W9, W11, W9, EQ
	0x03D2A6FC UBFM W10, W8, 0x2, 0x1F
	0x03D2A700 ANDS W31, W8, 0x3
	0x03D2A704 CSEL W8, W10, W8, EQ
	0x03D2A708 ORR W11, W9, 0x2
	0x03D2A70C ORN W8, W31, W8, 0x0
	0x03D2A710 CSEL W9, W11, W9, EQ
	0x03D2A714 AND W8, W8, 0x1
	0x03D2A718 ADD W0, W8, W9
	0x03D2A71C RET
	0x03D2A720 STR X30, [X31 - 0x40]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6BE000
	009 Move X20, 0x43B000
	010 Move W8, [X21+2770]
	011 Move X20, [X20+2816]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x3CB000
	018 Move X0, [X0+3672]
	019 Call 0x1C17CF4
	020 Move X0, 0x43B000
	021 Move X0, [X0+2848]
	022 Call 0x1C17CF4
	023 Move X0, 0x439000
	024 Move X0, [X0+1712]
	025 Call 0x1C17CF4
	026 Move X0, 0x43B000
	027 Move X0, [X0+2816]
	028 Call 0x1C17CF4
	029 Move X0, 0x425000
	030 Move X0, [X0+72]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+2770], W8
	034 Move X0, [X20]
	035 Move X21, 0x439000
	036 Move W8, [X0+224]
	037 Move X21, [X21+1712]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move W8, [X8]
	044 Move [X19+48], W8
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X22, 0x6BE000
	051 Move W8, [X22+2021]
	052 Compare W8, 0
	053 JumpIfNotEqual {59}
	054 Move X0, 0x439000
	055 Move X0, [X0+1712]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X22+2021], W8
	059 Move X0, [X21]
	060 Move X24, 0x43B000
	061 Move X23, 0x3CB000
	062 Move X22, 0x425000
	063 Move W8, [X0+224]
	064 Move X24, [X24+2848]
	065 Move X23, [X23+3672]
	066 Move X22, [X22+72]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X21]
	071 Move X8, [X0+184]
	072 Move X0, X19
	073 Move X1, X31
	074 Move X8, [X8]
	075 Move [X19+56], X8
	076 Call Object..ctor, X0
	077 Move X8, [X20]
	078 Move X0, [X24]
	079 Move X8, [X8+184]
	080 Move W1, [X8]
	081 Call 0x1C17D6C
	082 Move [X19+16], X0
	083 Move X8, [X20]
	084 Move X0, [X23]
	085 Move X8, [X8+184]
	086 Move W1, [X8]
	087 Call 0x1C17D6C
	088 Move [X19+24], X0
	089 Move X8, [X20]
	090 Move X0, [X22]
	091 Move X8, [X8+184]
	092 Move W9, [X8]
	093 Move W8, [X8+4]
	094 Multiply W1, W8, W9
	095 Call 0x1C17D6C
	096 Move [X19+40], X0
	097 Move X0, X19
	098 Move X20, [X31+48]
	099 Move X19, [X31+56]
	100 Move X22, [X31+32]
	101 Move X21, [X31+40]
	102 Move X24, [X31+16]
	103 Move X23, [X31+24]
	104 Move X30, [X31+64]

Method: System.Void Reset()

Disassembly:
	0x03D2A724 STP X24, X23, [X31 + 0x10]
	0x03D2A728 STP X22, X21, [X31 + 0x20]
	0x03D2A72C STP X20, X19, [X31 + 0x30]
	0x03D2A730 ADRP X21, 0x6BD000
	0x03D2A734 ADRP X22, 0x3C9000
	0x03D2A738 LDRB W8, [X21 + 0xADE]
	0x03D2A73C LDR X22, [X22 + 0xA28]
	0x03D2A740 MOV X19, X1
	0x03D2A744 MOV X20, X0
	0x03D2A748 TBNZ X8, 0x0, 0x3D2A790
	0x03D2A74C ADRP X0, 0x3C9000
	0x03D2A750 LDR X0, [X0 + 0xA28]
	0x03D2A754 BL 0x1C16CF4
	0x03D2A758 ADRP X0, 0x43A000
	0x03D2A75C LDR X0, [X0 + 0xB68]
	0x03D2A760 BL 0x1C16CF4
	0x03D2A764 ADRP X0, 0x42E000
	0x03D2A768 LDR X0, [X0 + 0x860]
	0x03D2A76C BL 0x1C16CF4
	0x03D2A770 ADRP X0, 0x43A000
	0x03D2A774 LDR X0, [X0 + 0xB78]
	0x03D2A778 BL 0x1C16CF4
	0x03D2A77C ADRP X0, 0x43A000
	0x03D2A780 LDR X0, [X0 + 0xB80]
	0x03D2A784 BL 0x1C16CF4
	0x03D2A788 MOVZ W8, 0x1
	0x03D2A78C STRB W8, [X21 + 0xADE]
	0x03D2A790 LDR X0, [X22]
	0x03D2A794 LDR W8, [X0 + 0xE0]
	0x03D2A798 CBNZ W8, 0x3D2A7A0
	0x03D2A79C BL 0x1C16DFC
	0x03D2A7A0 UBFM X8, X19, 0x38, 0x3F
	0x03D2A7A4 CMP X8, 0x1
	0x03D2A7A8 CSET W0, EQ
	0x03D2A7AC MOV X1, X31
	0x03D2A7B0 BL 0x3C06E58
	0x03D2A7B4 LDR X21, [X20 + 0x10]
	0x03D2A7B8 CBZ X21, 0x3D2A860
	0x03D2A7BC ADRP X10, 0x42E000
	0x03D2A7C0 LDR W9, [X20]
	0x03D2A7C4 LDR X10, [X10 + 0x860]
	0x03D2A7C8 ADRP X24, 0x43A000
	0x03D2A7CC UBFM X8, X19, 0x20, 0x3F
	0x03D2A7D0 MUL W9, W9, W19
	0x03D2A7D4 LDR X2, [X10]
	0x03D2A7D8 LDR X24, [X24 + 0xB80]
	0x03D2A7DC ADD W22, W9, W8, UXTH
	0x03D2A7E0 MOV X0, X21
	0x03D2A7E4 MOV W1, W22
	0x03D2A7E8 UBFM X23, X19, 0x30, 0x3F
	0x03D2A7EC BL 0x30C13A8
	0x03D2A7F0 LDR X3, [X24]
	0x03D2A7F4 MOVZ W8, 0x1
	0x03D2A7F8 LSLV W8, W8, W23
	0x03D2A7FC ORR W2, W0, W8, 0x0
	0x03D2A800 MOV X0, X21
	0x03D2A804 MOV W1, W22
	0x03D2A808 BL 0x30C13FC
	0x03D2A80C LDR X0, [X20 + 0x8]
	0x03D2A810 CBZ X0, 0x3D2A860
	0x03D2A814 ADRP X8, 0x43A000
	0x03D2A818 LDR X8, [X8 + 0xB68]
	0x03D2A81C MOV W1, W19
	0x03D2A820 LDR X2, [X8]
	0x03D2A824 BL 0x30ED44C
	0x03D2A828 LDR X8, [X20 + 0x8]
	0x03D2A82C CBZ X8, 0x3D2A860
	0x03D2A830 ADRP X9, 0x43A000
	0x03D2A834 LDR X9, [X9 + 0xB78]
	0x03D2A838 MOV W1, W19
	0x03D2A83C LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x6BE000
	009 Move W8, [X20+2771]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x3F2000
	016 Move X0, [X0+1568]
	017 Call 0x1C17CF4
	018 Move X0, 0x43B000
	019 Move X0, [X0+2816]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2771], W8
	023 Move X21, 0x43B000
	024 Move X22, 0x3F2000
	025 Move X21, [X21+2816]
	026 Move X22, [X22+1568]
	027 Move X20, X31
	028 Move [X19+32], X31
	029 Move TEMP, 0
	030 Not TEMP
	031 Move W23, TEMP
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X21]
	038 Move X8, [X0+184]
	039 NotImplemented "Instruction LDRSW not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, [X22]
	042 Move X24, [X19+16]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X22]
	048 Compare X24, 0
	049 JumpIfEqual {81}
	050 Move W8, [X24+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, [X0+184]
	053 Add X9, X24, X20
	054 Move W8, [X8]
	055 Move [X9+32], W8
	056 Move X8, [X19+24]
	057 Compare X8, 0
	058 JumpIfEqual {81}
	059 Move W9, [X8+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X8, X8, X20
	062 Move [X8+32], W23
	063 Move X8, [X22]
	064 Move S0, W31
	065 Move W3, 1
	066 Move W4, 1
	067 Move X8, [X8+184]
	068 Move X0, X19
	069 Move W1, W20
	070 Move W2, [X8]
	071 Call TextureSlotManager.SetGpuData, X0, X1, X2, X3, X4, V0
	072 Add X20, X20, 1
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X30, [X31+64]
	080 Return 
	081 Call 0x1C17F20
	082 Call 0x1C17F28

Method: System.Void StartNewBatch()

Disassembly:
	0x03D2A96C ADRP X0, 0x43A000
	0x03D2A970 LDR X0, [X0 + 0x760]
	0x03D2A974 BL 0x1C16CF4
	0x03D2A978 MOVZ W8, 0x1
	0x03D2A97C STRB W8, [X20 + 0xAE0]
	0x03D2A980 LDR X0, [X21]
	0x03D2A984 LDR W8, [X0 + 0xE0]
	0x03D2A988 CBNZ W8, 0x3D2A990
	0x03D2A98C BL 0x1C16DFC
	0x03D2A990 UBFM X8, X19, 0x30, 0x3F
	0x03D2A994 UBFM X9, X19, 0x1B, 0x3F
	0x03D2A998 LDP X20, X19, [X31 + 0x10]
	0x03D2A99C AND W9, W9, 0x1FFFE0
	0x03D2A9A0 ADD W0, W9, W8, UXTB
	0x03D2A9A4 LDP X30, X21, [X31], #0x20
	0x03D2A9A8 RET
	0x03D2A9AC SUB X31, X31, 0x50
	0x03D2A9B0 STP X30, X25, [X31 + 0x10]
	0x03D2A9B4 STP X24, X23, [X31 + 0x20]
	0x03D2A9B8 STP X22, X21, [X31 + 0x30]
	0x03D2A9BC STP X20, X19, [X31 + 0x40]
	0x03D2A9C0 ADRP X23, 0x6BD000
	0x03D2A9C4 LDRB W8, [X23 + 0xAE1]
	0x03D2A9C8 MOV X19, X3
	0x03D2A9CC MOV X21, X2
	0x03D2A9D0 MOV X22, X1
	0x03D2A9D4 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6BE000
	006 Move X20, 0x43B000
	007 Move W8, [X21+2772]
	008 Move X20, [X20+2816]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x43B000
	015 Move X0, [X0+2816]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2772], W8
	019 Move W8, [X19+32]
	020 Add W8, W8, 1
	021 Move [X19+32], W8
	022 Move [X19+36], W8
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X20]
	029 Move X8, [X0+184]
	030 Move W8, [X8]
	031 Move [X19+48], W8
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

Method: System.Int32 IndexOf(UnityEngine.UIElements.TextureId id)

Disassembly:
	0x03D2A9D8 TBNZ X8, 0x0, 0x3D2A9F0
	0x03D2A9DC ADRP X0, 0x43A000
	0x03D2A9E0 LDR X0, [X0 + 0x760]
	0x03D2A9E4 BL 0x1C16CF4
	0x03D2A9E8 MOVZ W8, 0x1
	0x03D2A9EC STRB W8, [X23 + 0xAE1]
	0x03D2A9F0 ADD X2, X31, 0xC
	0x03D2A9F4 ADD X3, X31, 0x8
	0x03D2A9F8 MOV X0, X20
	0x03D2A9FC MOV W1, W22
	0x03D2AA00 STRH W31, [X31 + 0xC]
	0x03D2AA04 STRH W31, [X31 + 0x8]
	0x03D2AA08 BL 0x3D2A874
	0x03D2AA0C ADRP X23, 0x6BA000
	0x03D2AA10 LDRB W8, [X23 + 0xD8B]
	0x03D2AA14 LDRH W22, [X31 + 0xC]
	0x03D2AA18 CBNZ W8, 0x3D2AA30
	0x03D2AA1C ADRP X0, 0x3C9000
	0x03D2AA20 LDR X0, [X0 + 0x5A8]
	0x03D2AA24 BL 0x1C16CF4
	0x03D2AA28 MOVZ W8, 0x1
	0x03D2AA2C STRB W8, [X23 + 0xD8B]
	0x03D2AA30 ADRP X23, 0x3C9000
	0x03D2AA34 LDR X23, [X23 + 0x5A8]
	0x03D2AA38 LDR X0, [X23]
	0x03D2AA3C LDR W8, [X0 + 0xE0]
	0x03D2AA40 CBNZ W8, 0x3D2AA48
	0x03D2AA44 BL 0x1C16DFC
	0x03D2AA48 ADD W1, W19, W21
	0x03D2AA4C MOV W0, W21
	0x03D2AA50 MOV X2, X31
	0x03D2AA54 BL 0x337EE94
	0x03D2AA58 CMP W0, W22
	0x03D2AA5C B.NE 0x3D2AAF8
	0x03D2AA60 ADRP X25, 0x6BA000
	0x03D2AA64 LDRB W8, [X25 + 0xD8C]
	0x03D2AA68 LDRH W24, [X31 + 0x8]
	0x03D2AA6C UBFM X21, X21, 0x20, 0x3F
	0x03D2AA70 UBFM X22, X19, 0x20, 0x3F
	0x03D2AA74 CBNZ W8, 0x3D2AA8C
	0x03D2AA78 ADRP X0, 0x3C9000
	0x03D2AA7C LDR X0, [X0 + 0x5A8]
	0x03D2AA80 BL 0x1C16CF4
	0x03D2AA84 MOVZ W8, 0x1
	0x03D2AA88 STRB W8, [X25 + 0xD8C]
	0x03D2AA8C LDR X0, [X23]
	0x03D2AA90 LDR W8, [X0 + 0xE0]
	0x03D2AA94 CBNZ W8, 0x3D2AA9C
	0x03D2AA98 BL 0x1C16DFC
	0x03D2AA9C ADD W1, W22, W21
	0x03D2AAA0 MOV W0, W21
	0x03D2AAA4 MOV X2, X31
	0x03D2AAA8 BL 0x337EE94
	0x03D2AAAC CMP W0, W24
	0x03D2AAB0 B.NE 0x3D2AAF8
	0x03D2AAB4 ADRP X21, 0x43A000
	0x03D2AAB8 LDR X21, [X21 + 0x760]
	0x03D2AABC LDR W23, [X20 + 0x18]
	0x03D2AAC0 LDR X0, [X21]
	0x03D2AAC4 LDR W8, [X0 + 0xE0]
	0x03D2AAC8 CBNZ W8, 0x3D2AAD0
	0x03D2AACC BL 0x1C16DFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x6BE000
	009 Move W8, [X20+2773]
	010 Move X19, X0
	011 Move [X31+8], W1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x3F2000
	017 Move X0, [X0+1568]
	018 Call 0x1C17CF4
	019 Move X0, 0x43B000
	020 Move X0, [X0+2816]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2773], W8
	024 Move X22, 0x43B000
	025 Move X23, 0x3F2000
	026 Move X22, [X22+2816]
	027 Move X23, [X23+1568]
	028 Move X20, X31
	029 Move W24, 32
	030 Move X0, [X22]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X22]
	036 Move X8, [X0+184]
	037 NotImplemented "Instruction LDRSW not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X21, [X19+16]
	040 Compare X21, 0
	041 JumpIfEqual {71}
	042 Move X0, [X23]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move W8, [X21+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X0, X21, X24
	050 Move X1, X31
	051 Call TextureId.get_index, X0
	052 Move W21, W0
	053 Add X0, X31, 8
	054 Move X1, X31
	055 Call TextureId.get_index, X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add X20, X20, 1
	058 Add X24, X24, 4
	059 Move TEMP, 0
	060 Not TEMP
	061 Move W20, TEMP
	062 Move W0, W20
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move X30, [X31+64]
	070 Return X0
	071 Call 0x1C17F20
	072 Call 0x1C17F28

Method: System.Void MarkUsed(System.Int32 slotIndex)

Disassembly:
	0x03D2AAD0 CMP W19, W23, LSL
	0x03D2AAD4 B.NE 0x3D2AAF8
	0x03D2AAD8 LDR X0, [X21]
	0x03D2AADC LDR W19, [X20 + 0x1C]
	0x03D2AAE0 LDR W8, [X0 + 0xE0]
	0x03D2AAE4 CBNZ W8, 0x3D2AAEC
	0x03D2AAE8 BL 0x1C16DFC
	0x03D2AAEC CMP W22, W19, LSL
	0x03D2AAF0 CSET W0, EQ
	0x03D2AAF4 B 0x3D2AAFC
	0x03D2AAF8 MOV W0, W31
	0x03D2AAFC LDP X20, X19, [X31 + 0x40]
	0x03D2AB00 LDP X22, X21, [X31 + 0x30]
	0x03D2AB04 LDP X24, X23, [X31 + 0x20]
	0x03D2AB08 LDP X30, X25, [X31 + 0x10]
	0x03D2AB0C ADD X31, X31, 0x50
	0x03D2AB10 RET
	0x03D2AB14 STP X30, X21, [X31 - 0x20]!
	0x03D2AB18 STP X20, X19, [X31 + 0x10]
	0x03D2AB1C ADRP X21, 0x6BD000
	0x03D2AB20 ADRP X20, 0x43A000
	0x03D2AB24 LDRB W8, [X21 + 0xAE2]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {21}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Add X8, X8, 32
	009 Move W9, [X8]
	010 Move W10, [X0+36]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W9, [X0+48]
	013 Subtract W9, W9, 1
	014 Move [X0+48], W9
	015 Move W9, [X0+32]
	016 Add W9, W9, 1
	017 Move [X0+32], W9
	018 Move [X8], W9
	019 Move X30, [X31+16]
	020 Return 
	021 Call 0x1C17F20
	022 Call 0x1C17F28

Method: System.Int32 get_FreeSlots()

Disassembly:
	0x03D2AB28 LDR X20, [X20 + 0xB88]
	0x03D2AB2C MOV X19, X0

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_FreeSlots(System.Int32 value)

Disassembly:
	0x03D2AB30 TBNZ X8, 0x0, 0x3D2AB48
	0x03D2AB34 ADRP X0, 0x43A000

ISIL:
	001 Move [X0+48], W1
	002 Return 

Method: System.Int32 FindOldestSlot()

Disassembly:
	0x03D2AB38 LDR X0, [X0 + 0xB88]
	0x03D2AB3C BL 0x1C16CF4
	0x03D2AB40 MOVZ W8, 0x1
	0x03D2AB44 STRB W8, [X21 + 0xAE2]
	0x03D2AB48 LDP X0, X1, [X19 + 0xB0]
	0x03D2AB4C LDR X2, [X20]
	0x03D2AB50 LDP X20, X19, [X31 + 0x10]
	0x03D2AB54 LDP X30, X21, [X31], #0x20
	0x03D2AB58 B 0x2406758
	0x03D2AB5C STP X30, X21, [X31 - 0x20]!
	0x03D2AB60 STP X20, X19, [X31 + 0x10]
	0x03D2AB64 ADRP X21, 0x6BD000
	0x03D2AB68 ADRP X20, 0x43A000
	0x03D2AB6C LDRB W8, [X21 + 0xAE3]
	0x03D2AB70 LDR X20, [X20 + 0xB90]
	0x03D2AB74 MOV X19, X0
	0x03D2AB78 TBNZ X8, 0x0, 0x3D2AB90
	0x03D2AB7C ADRP X0, 0x43A000
	0x03D2AB80 LDR X0, [X0 + 0xB90]
	0x03D2AB84 BL 0x1C16CF4
	0x03D2AB88 MOVZ W8, 0x1
	0x03D2AB8C STRB W8, [X21 + 0xAE3]
	0x03D2AB90 LDP X0, X1, [X19 + 0xC0]
	0x03D2AB94 LDR X2, [X20]
	0x03D2AB98 LDP X20, X19, [X31 + 0x10]
	0x03D2AB9C LDP X30, X21, [X31], #0x20
	0x03D2ABA0 B 0x240811C
	0x03D2ABA4 STR X30, [X31 - 0x20]!
	0x03D2ABA8 STP X20, X19, [X31 + 0x10]
	0x03D2ABAC ADRP X20, 0x6BD000
	0x03D2ABB0 LDRB W8, [X20 + 0xAE4]
	0x03D2ABB4 MOV X19, X0
	0x03D2ABB8 TBNZ X8, 0x0, 0x3D2ABD0
	0x03D2ABBC ADRP X0, 0x43A000
	0x03D2ABC0 LDR X0, [X0 + 0x6F8]
	0x03D2ABC4 BL 0x1C16CF4
	0x03D2ABC8 MOVZ W8, 0x1
	0x03D2ABCC STRB W8, [X20 + 0xAE4]
	0x03D2ABD0 LDRB W8, [X19 + 0xA8]
	0x03D2ABD4 CBZ W8, 0x3D2ABF4
	0x03D2ABD8 LDR X0, [X19]
	0x03D2ABDC CBZ X0, 0x3D2AC30
	0x03D2ABE0 LDR X8, [X0]
	0x03D2ABE4 LDP X20, X19, [X31 + 0x10]
	0x03D2ABE8 LDP X2, X1, [X8 + 0x188]
	0x03D2ABEC LDR X30, [X31], #0x20
	0x03D2ABF0 BR X2
	0x03D2ABF4 ADRP X8, 0x43A000
	0x03D2ABF8 LDR X8, [X8 + 0x6F8]
	0x03D2ABFC LDRB W19, [X19 + 0xA9]
	0x03D2AC00 LDR X0, [X8]
	0x03D2AC04 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x6BE000
	009 Move W8, [X20+2774]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x43B000
	016 Move X0, [X0+2816]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2774], W8
	020 Move X8, [X19+24]
	021 Compare X8, 0
	022 JumpIfEqual {61}
	023 Move W9, [X8+24]
	024 Compare W9, 0
	025 JumpIfEqual {62}
	026 Move X21, 0x43B000
	027 Move X21, [X21+2816]
	028 Move W22, [X8+32]
	029 Move W20, W31
	030 Move W23, 9
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Subtract X24, X23, 8
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X21]
	038 Move X8, [X0+184]
	039 NotImplemented "Instruction LDRSW not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, [X19+24]
	042 Compare X8, 0
	043 JumpIfEqual {61}
	044 Move W9, [X8+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W8, [X8]
	047 Subtract W9, W23, 8
	048 Add X23, X23, 1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 Move W0, W20
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X30, [X31+64]
	060 Return X0
	061 Call 0x1C17F20
	062 Call 0x1C17F28

Method: System.Void Bind(UnityEngine.UIElements.TextureId id, System.Single sdfScale, System.Int32 slot, UnityEngine.MaterialPropertyBlock mat)

Disassembly:
	0x03D2AC08 CBZ W8, 0x3D2AC1C
	0x03D2AC0C CBZ W19, 0x3D2AC24
	0x03D2AC10 LDP X20, X19, [X31 + 0x10]
	0x03D2AC14 LDR X30, [X31], #0x20
	0x03D2AC18 B 0x3D2AF00
	0x03D2AC1C BL 0x1C16DFC
	0x03D2AC20 CBNZ W19, 0x3D2AC10
	0x03D2AC24 LDP X20, X19, [X31 + 0x10]
	0x03D2AC28 LDR X30, [X31], #0x20
	0x03D2AC2C B 0x3D2AC34
	0x03D2AC30 BL 0x1C16F20
	0x03D2AC34 STP X30, X21, [X31 - 0x20]!
	0x03D2AC38 STP X20, X19, [X31 + 0x10]
	0x03D2AC3C ADRP X19, 0x6BD000
	0x03D2AC40 ADRP X20, 0x43A000
	0x03D2AC44 LDRB W8, [X19 + 0xB10]
	0x03D2AC48 LDR X20, [X20 + 0x6F8]
	0x03D2AC4C TBNZ X8, 0x0, 0x3D2AC94
	0x03D2AC50 ADRP X0, 0x3C9000
	0x03D2AC54 LDR X0, [X0 + 0x598]
	0x03D2AC58 BL 0x1C16CF4
	0x03D2AC5C ADRP X0, 0x3F3000
	0x03D2AC60 LDR X0, [X0 + 0x250]
	0x03D2AC64 BL 0x1C16CF4
	0x03D2AC68 ADRP X0, 0x43A000
	0x03D2AC6C LDR X0, [X0 + 0x760]
	0x03D2AC70 BL 0x1C16CF4
	0x03D2AC74 ADRP X0, 0x43A000
	0x03D2AC78 LDR X0, [X0 + 0x6F8]
	0x03D2AC7C BL 0x1C16CF4
	0x03D2AC80 ADRP X0, 0x43A000
	0x03D2AC84 LDR X0, [X0 + 0xB98]
	0x03D2AC88 BL 0x1C16CF4
	0x03D2AC8C MOVZ W8, 0x1
	0x03D2AC90 STRB W8, [X19 + 0xB10]
	0x03D2AC94 LDR X0, [X20]
	0x03D2AC98 ADRP X19, 0x3C9000
	0x03D2AC9C LDR W8, [X0 + 0xE0]
	0x03D2ACA0 LDR X19, [X19 + 0x598]
	0x03D2ACA4 CBNZ W8, 0x3D2ACB0
	0x03D2ACA8 BL 0x1C16DFC
	0x03D2ACAC LDR X0, [X20]
	0x03D2ACB0 LDR X8, [X19]
	0x03D2ACB4 LDR X9, [X0 + 0xB8]
	0x03D2ACB8 LDR W10, [X8 + 0xE0]
	0x03D2ACBC LDR X19, [X9 + 0x58]
	0x03D2ACC0 CBNZ W10, 0x3D2ACCC
	0x03D2ACC4 MOV X0, X8
	0x03D2ACC8 BL 0x1C16DFC
	0x03D2ACCC MOV X0, X19
	0x03D2ACD0 MOV X1, X31
	0x03D2ACD4 MOV X2, X31
	0x03D2ACD8 BL 0x3C3883C
	0x03D2ACDC TBZ X0, 0x0, 0x3D2AED4
	0x03D2ACE0 ADRP X8, 0x3F3000
	0x03D2ACE4 LDR X8, [X8 + 0x250]
	0x03D2ACE8 LDR X0, [X8]
	0x03D2ACEC BL 0x1C16F10
	0x03D2ACF0 MOVZ W1, 0x40
	0x03D2ACF4 MOVZ W2, 0x40
	0x03D2ACF8 MOVZ W3, 0x4
	0x03D2ACFC MOV W4, W31
	0x03D2AD00 MOV X5, X31
	0x03D2AD04 MOV X19, X0
	0x03D2AD08 BL 0x3C1C1D8
	0x03D2AD0C LDR X0, [X20]
	0x03D2AD10 LDR W8, [X0 + 0xE0]
	0x03D2AD14 CBNZ W8, 0x3D2AD20
	0x03D2AD18 BL 0x1C16DFC
	0x03D2AD1C LDR X0, [X20]
	0x03D2AD20 LDR X8, [X0 + 0xB8]
	0x03D2AD24 STR X19, [X8 + 0x58]
	0x03D2AD28 CBZ X19, 0x3D2AEFC
	0x03D2AD2C ADRP X8, 0x43A000
	0x03D2AD30 LDR X8, [X8 + 0xB98]
	0x03D2AD34 MOV X0, X19
	0x03D2AD38 MOV X2, X31
	0x03D2AD3C LDR X1, [X8]
	0x03D2AD40 BL 0x3C38A84
	0x03D2AD44 LDR X8, [X20]
	0x03D2AD48 LDR X8, [X8 + 0xB8]
	0x03D2AD4C LDR X0, [X8 + 0x58]
	0x03D2AD50 CBZ X0, 0x3D2AEFC
	0x03D2AD54 MOVZ W1, 0x3D
	0x03D2AD58 MOV X2, X31
	0x03D2AD5C BL 0x3C396EC
	0x03D2AD60 LDR X8, [X20]
	0x03D2AD64 LDR X8, [X8 + 0xB8]
	0x03D2AD68 LDR X0, [X8 + 0x58]
	0x03D2AD6C CBZ X0, 0x3D2AEFC
	0x03D2AD70 MOV W1, W31
	0x03D2AD74 MOV X2, X31
	0x03D2AD78 BL 0x3C1AB5C
	0x03D2AD7C ADRP X21, 0x43A000
	0x03D2AD80 LDR X8, [X20]
	0x03D2AD84 LDR X21, [X21 + 0x760]
	0x03D2AD88 LDR X8, [X8 + 0xB8]
	0x03D2AD8C LDR X0, [X21]
	0x03D2AD90 LDR X19, [X8 + 0x58]
	0x03D2AD94 LDR W9, [X0 + 0xE0]
	0x03D2AD98 CBNZ W9, 0x3D2ADA4
	0x03D2AD9C BL 0x1C16DFC
	0x03D2ADA0 LDR X0, [X21]
	0x03D2ADA4 CBZ X19, 0x3D2AEFC
	0x03D2ADA8 LDR X8, [X0 + 0xB8]
	0x03D2ADAC MOV X0, X19
	0x03D2ADB0 MOV X3, X31
	0x03D2ADB4 LDR X1, [X8 + 0x10]
	0x03D2ADB8 LDP S0, S1, [X8 + 0xA8]
	0x03D2ADBC LDP S2, S3, [X8 + 0xB0]
	0x03D2ADC0 UBFM X2, X1, 0x20, 0x3F
	0x03D2ADC4 BL 0x3C1C294
	0x03D2ADC8 LDR X8, [X20]
	0x03D2ADCC LDR X8, [X8 + 0xB8]
	0x03D2ADD0 LDR X0, [X8 + 0x58]
	0x03D2ADD4 CBZ X0, 0x3D2AEFC
	0x03D2ADD8 LDR X8, [X21]
	0x03D2ADDC FMOV S0, 1
	0x03D2ADE0 FMOV S1, 1
	0x03D2ADE4 FMOV S2, 1
	0x03D2ADE8 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x6BE000
	012 Move W8, [X22+2775]
	013 Move X19, X3
	014 Move W21, W2
	015 Move V8, V0
	016 Move X24, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x3CA000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x43B000
	026 Move X0, [X0+2816]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2775], W8
	030 Move X0, [X20+56]
	031 Compare X0, 0
	032 JumpIfEqual {142}
	033 Move X22, 0x3CA000
	034 Move X22, [X22+1432]
	035 And X23, X24, 0
	036 Move X1, X23
	037 Move X2, X31
	038 Call TextureRegistry.GetTexture, X0, X1
	039 Move X8, [X22]
	040 Move X22, X0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X0, X22
	047 Move X1, X31
	048 Move X2, X31
	049 Call Object.op_Equality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {57}
	054 Move X0, X31
	055 Call Texture2D.get_whiteTexture
	056 Move X22, X0
	057 Move X8, [X20+16]
	058 Compare X8, 0
	059 JumpIfEqual {142}
	060 Move W9, [X8+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X25, W21
	063 Add X8, X8, X25
	064 Move [X8+32], W24
	065 Move X8, [X20+24]
	066 Compare X8, 0
	067 JumpIfEqual {142}
	068 Move W9, [X8+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add X8, X8, X25
	071 Add X8, X8, 32
	072 Move W9, [X8]
	073 Move W10, [X20+36]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W9, [X20+48]
	076 Subtract W9, W9, 1
	077 Move [X20+48], W9
	078 Move W9, [X20+32]
	079 Add W9, W9, 1
	080 Move [X20+32], W9
	081 Move [X8], W9
	082 Compare X22, 0
	083 JumpIfEqual {142}
	084 Move X8, [X22]
	085 Move X26, 0x43B000
	086 Move X0, X22
	087 Move X9, [X8+392]
	088 Move X1, [X8+400]
	089 Move X26, [X26+2816]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X8, [X22]
	092 Move W24, W0
	093 Move X0, X22
	094 Move X9, [X8+424]
	095 Move X1, [X8+432]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move W4, W0
	098 Move X0, X20
	099 Move W1, W21
	100 Move X2, X23
	101 Move W3, W24
	102 Move V0, V8
	103 Call TextureSlotManager.SetGpuData, X0, X1, X2, X3, X4, V0
	104 Move X0, [X26]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {110}
	108 Call 0x1C17DFC
	109 Move X0, [X26]
	110 Move X8, [X0+184]
	111 Move X8, [X8+8]
	112 Compare X8, 0
	113 JumpIfEqual {142}
	114 Move W9, [X8+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Compare X19, 0
	117 JumpIfEqual {142}
	118 Add X8, X8, X25
	119 Move W1, [X8+32]
	120 Move X0, X19
	121 Move X2, X22
	122 Move X3, X31
	123 Call MaterialPropertyBlock.SetTexture, X0, X1, X2
	124 Move X8, [X26]
	125 Move X2, [X20+40]
	126 Move X0, X19
	127 Move X20, [X31+64]
	128 Move X19, [X31+72]
	129 Move X8, [X8+184]
	130 Move X22, [X31+48]
	131 Move X21, [X31+56]
	132 Move X24, [X31+32]
	133 Move X23, [X31+40]
	134 Move X26, [X31+16]
	135 Move X25, [X31+24]
	136 Move W1, [X8+16]
	137 Move X30, [X31+8]
	138 Move X3, X31
	139 Move V8, [X31+80]
	140 Call MaterialPropertyBlock.SetVectorArray, X0, X1, X2
	141 Return 
	142 Call 0x1C17F20
	143 Call 0x1C17F28

Method: System.Void SetGpuData(System.Int32 slotIndex, UnityEngine.UIElements.TextureId id, System.Int32 textureWidth, System.Int32 textureHeight, System.Single sdfScale)

Disassembly:
	0x03D2A840 LDP X22, X21, [X31 + 0x20]
	0x03D2A844 LDR X3, [X9]
	0x03D2A848 LDP X24, X23, [X31 + 0x10]
	0x03D2A84C MOVZ X9, 0x1
	0x03D2A850 ADD X2, X0, X9
	0x03D2A854 MOV X0, X8
	0x03D2A858 LDR X30, [X31], #0x40
	0x03D2A85C B 0x30ED4A0
	0x03D2A860 BL 0x1C16F20
	0x03D2A864 LDR W0, [X0 + 0x18]
	0x03D2A868 RET
	0x03D2A86C LDR W0, [X0 + 0x1C]
	0x03D2A870 RET
	0x03D2A874 STP X30, X23, [X31 - 0x30]!
	0x03D2A878 STP X22, X21, [X31 + 0x10]
	0x03D2A87C STP X20, X19, [X31 + 0x20]
	0x03D2A880 ADRP X23, 0x6BD000
	0x03D2A884 LDRB W8, [X23 + 0xADF]
	0x03D2A888 MOV X19, X3
	0x03D2A88C MOV X20, X2
	0x03D2A890 MOV W21, W1
	0x03D2A894 MOV X22, X0
	0x03D2A898 TBNZ X8, 0x0, 0x3D2A8B0
	0x03D2A89C ADRP X0, 0x43A000
	0x03D2A8A0 LDR X0, [X0 + 0xB68]
	0x03D2A8A4 BL 0x1C16CF4
	0x03D2A8A8 MOVZ W8, 0x1
	0x03D2A8AC STRB W8, [X23 + 0xADF]
	0x03D2A8B0 LDR X0, [X22 + 0x8]
	0x03D2A8B4 CBZ X0, 0x3D2A8E8
	0x03D2A8B8 ADRP X8, 0x43A000
	0x03D2A8BC LDR X8, [X8 + 0xB68]
	0x03D2A8C0 MOV W1, W21
	0x03D2A8C4 LDR X2, [X8]
	0x03D2A8C8 BL 0x30ED44C
	0x03D2A8CC UBFM X8, X0, 0x10, 0x3F
	0x03D2A8D0 STRH W0, [X20]
	0x03D2A8D4 STRH W8, [X19]
	0x03D2A8D8 LDP X20, X19, [X31 + 0x20]
	0x03D2A8DC LDP X22, X21, [X31 + 0x10]
	0x03D2A8E0 LDP X30, X23, [X31], #0x30
	0x03D2A8E4 RET
	0x03D2A8E8 BL 0x1C16F20
	0x03D2A8EC MOVZ W0, 0x20
	0x03D2A8F0 RET
	0x03D2A8F4 MOVZ W0, 0x8
	0x03D2A8F8 RET
	0x03D2A8FC STR X30, [X31 - 0x20]!
	0x03D2A900 STP X20, X19, [X31 + 0x10]
	0x03D2A904 ADD X2, X31, 0xC
	0x03D2A908 ADD X3, X31, 0x8
	0x03D2A90C MOV X19, X1
	0x03D2A910 MOV X20, X0
	0x03D2A914 STRH W31, [X31 + 0xC]
	0x03D2A918 STRH W31, [X31 + 0x8]
	0x03D2A91C BL 0x3D2A874
	0x03D2A920 LDRH W8, [X31 + 0xC]
	0x03D2A924 LDP W9, W10, [X20 + 0x18]
	0x03D2A928 LDRH W11, [X31 + 0x8]
	0x03D2A92C UBFM X12, X19, 0x30, 0x37
	0x03D2A930 UBFM X13, X19, 0x20, 0x2F
	0x03D2A934 LDP X20, X19, [X31 + 0x10]
	0x03D2A938 MADD W0, W9, W12, W8
	0x03D2A93C MADD W8, W10, W13, W11
	0x03D2A940 BFM X0, X8, 0x20, 0x1F
	0x03D2A944 LDR X30, [X31], #0x20
	0x03D2A948 RET
	0x03D2A94C STP X30, X21, [X31 - 0x20]!
	0x03D2A950 STP X20, X19, [X31 + 0x10]
	0x03D2A954 ADRP X20, 0x6BD000
	0x03D2A958 ADRP X21, 0x43A000
	0x03D2A95C LDRB W8, [X20 + 0xAE0]
	0x03D2A960 LDR X21, [X21 + 0x760]
	0x03D2A964 MOV X19, X0
	0x03D2A968 TBNZ X8, 0x0, 0x3D2A980

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x6BE000
	011 Move [X31+8], W2
	012 Move X23, 0x43B000
	013 Move W8, [X24+2776]
	014 Move X23, [X23+2816]
	015 Move V8, V0
	016 Move W20, W4
	017 Move W21, W3
	018 Move W22, W1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x3F2000
	025 Move X0, [X0+1568]
	026 Call 0x1C17CF4
	027 Move X0, 0x43B000
	028 Move X0, [X0+2816]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X24+2776], W8
	032 Move X0, [X23]
	033 Move X24, 0x3F2000
	034 Move W8, [X0+224]
	035 Move X24, [X24+1568]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X23]
	040 Move X8, [X0+184]
	041 Move X0, [X24]
	042 Move X23, [X19+40]
	043 Move W24, [X8+4]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X0, X31, 8
	049 Move X1, X31
	050 Call TextureId.ConvertToGpu, X0
	051 Compare X23, 0
	052 JumpIfEqual {88}
	053 Move W9, [X23+24]
	054 Multiply W8, W24, W22
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction SCVTF not yet implemented."
	057 Move S3, 1
	058 NotImplemented "Instruction SCVTF not yet implemented."
	059 Move X9, W8
	060 NotImplemented "Instruction FDIV not yet implemented."
	061 NotImplemented "Instruction FDIV not yet implemented."
	062 Add X9, X23, X9
	063 Move [X9+32], S0
	064 Move [X9+40], S4
	065 Move [X9+40], S3
	066 Move [X9+48], S8
	067 Move X9, [X19+40]
	068 Compare X9, 0
	069 JumpIfEqual {88}
	070 Move W10, [X9+24]
	071 Add W8, W8, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X30, [X31+24]
	080 Move V8, [X31+16]
	081 Move X8, W8
	082 Add X8, X9, X8
	083 Move [X8+32], S1
	084 Move [X8+40], S2
	085 Move [X8+40], X31
	086 Add X31, X31, 80
	087 Return 
	088 Call 0x1C17F20
	089 Call 0x1C17F28

