Type: UnityEngine.UIElements.UIR.BMPAlloc

Method: System.Boolean Equals(UnityEngine.UIElements.UIR.BMPAlloc other)

Disassembly:
	0x03D2ADEC FMOV S3, 1
	0x03D2ADF0 MOV X3, X31
	0x03D2ADF4 LDR X1, [X8 + 0x20]
	0x03D2ADF8 UBFM X2, X1, 0x20, 0x3F
	0x03D2ADFC BL 0x3C1C294
	0x03D2AE00 LDR X8, [X20]
	0x03D2AE04 LDR X8, [X8 + 0xB8]
	0x03D2AE08 LDR X0, [X8 + 0x58]
	0x03D2AE0C CBZ X0, 0x3D2AEFC
	0x03D2AE10 LDR X8, [X21]
	0x03D2AE14 FMOV S0, W31
	0x03D2AE18 FMOV S1, W31
	0x03D2AE1C FMOV S2, W31
	0x03D2AE20 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction LDRH not yet implemented."
	004 Move X9, X1
	005 ShiftRight X9, 32
	006 And X9, X9, 0x7FFFFFFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W8, [X0+6]
	009 Move X9, X1
	010 ShiftRight X9, 48
	011 And X9, X9, 0x7FFFFFFF
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CSET not yet implemented."
	014 Return X0
	015 Move W0, W31
	016 Return X0

Method: System.Boolean IsValid()

Disassembly:
	0x03D289C8 LDR W8, [X0 + 0xE0]
	0x03D289CC CBNZ W8, 0x3D289D4
	0x03D289D0 BL 0x1C16DFC
	0x03D289D4 MOV X0, X21

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction ORN not yet implemented."
	003 Move W0, W8
	004 ShiftRight W0, 31
	005 And W0, W0, 0x7FFFFFFF
	006 Return X0

Method: System.String ToString()

Disassembly:
	0x03D2AE24 FMOV S3, W31
	0x03D2AE28 MOV X3, X31
	0x03D2AE2C LDR X1, [X8 + 0x20]
	0x03D2AE30 UBFM X8, X1, 0x20, 0x3F
	0x03D2AE34 ADD W2, W8, 0x1
	0x03D2AE38 BL 0x3C1C294
	0x03D2AE3C LDR X8, [X20]
	0x03D2AE40 LDR X8, [X8 + 0xB8]
	0x03D2AE44 LDR X0, [X8 + 0x58]
	0x03D2AE48 CBZ X0, 0x3D2AEFC
	0x03D2AE4C LDR X8, [X21]
	0x03D2AE50 FMOV S0, W31
	0x03D2AE54 FMOV S1, W31
	0x03D2AE58 FMOV S2, W31
	0x03D2AE5C LDR X8, [X8 + 0xB8]
	0x03D2AE60 FMOV S3, W31
	0x03D2AE64 MOV X3, X31
	0x03D2AE68 LDR X1, [X8 + 0x20]
	0x03D2AE6C UBFM X8, X1, 0x20, 0x3F
	0x03D2AE70 ADD W2, W8, 0x2
	0x03D2AE74 BL 0x3C1C294
	0x03D2AE78 LDR X8, [X20]
	0x03D2AE7C LDR X8, [X8 + 0xB8]
	0x03D2AE80 LDR X0, [X8 + 0x58]
	0x03D2AE84 CBZ X0, 0x3D2AEFC
	0x03D2AE88 LDR X8, [X21]
	0x03D2AE8C FMOV S0, W31
	0x03D2AE90 FMOV S1, W31
	0x03D2AE94 FMOV S2, W31
	0x03D2AE98 LDR X8, [X8 + 0xB8]
	0x03D2AE9C FMOV S3, W31
	0x03D2AEA0 MOV X3, X31
	0x03D2AEA4 LDR X1, [X8 + 0x20]
	0x03D2AEA8 UBFM X8, X1, 0x20, 0x3F
	0x03D2AEAC ADD W2, W8, 0x3
	0x03D2AEB0 BL 0x3C1C294
	0x03D2AEB4 LDR X8, [X20]
	0x03D2AEB8 LDR X8, [X8 + 0xB8]
	0x03D2AEBC LDR X0, [X8 + 0x58]
	0x03D2AEC0 CBZ X0, 0x3D2AEFC
	0x03D2AEC4 MOVZ W2, 0x1
	0x03D2AEC8 MOV W1, W31
	0x03D2AECC MOV X3, X31
	0x03D2AED0 BL 0x3C1C4B4
	0x03D2AED4 LDR X0, [X20]
	0x03D2AED8 LDR W8, [X0 + 0xE0]
	0x03D2AEDC CBNZ W8, 0x3D2AEE8
	0x03D2AEE0 BL 0x1C16DFC
	0x03D2AEE4 LDR X0, [X20]
	0x03D2AEE8 LDR X8, [X0 + 0xB8]
	0x03D2AEEC LDP X20, X19, [X31 + 0x10]
	0x03D2AEF0 LDR X0, [X8 + 0x58]
	0x03D2AEF4 LDP X30, X21, [X31], #0x20
	0x03D2AEF8 RET
	0x03D2AEFC BL 0x1C16F20
	0x03D2AF00 STP X30, X21, [X31 - 0x20]!
	0x03D2AF04 STP X20, X19, [X31 + 0x10]
	0x03D2AF08 ADRP X19, 0x6BD000
	0x03D2AF0C ADRP X20, 0x43A000
	0x03D2AF10 LDRB W8, [X19 + 0xB0F]
	0x03D2AF14 LDR X20, [X20 + 0x6F8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X24, 0x6BE000
	010 Move X20, 0x3CA000
	011 Move X21, 0x3CF000
	012 Move X23, 0x3CB000
	013 Move X22, 0x43B000
	014 Move W8, [X24+2777]
	015 Move X20, [X20+1880]
	016 Move X21, [X21+1624]
	017 Move X23, [X23+2520]
	018 Move X22, [X22+2856]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x3CB000
	025 Move X0, [X0+2520]
	026 Call 0x1C17CF4
	027 Move X0, 0x3CA000
	028 Move X0, [X0+1880]
	029 Call 0x1C17CF4
	030 Move X0, 0x3CF000
	031 Move X0, [X0+1624]
	032 Call 0x1C17CF4
	033 Move X0, 0x43B000
	034 Move X0, [X0+2856]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+2777], W8
	038 Move W8, [X19]
	039 Move X0, [X20]
	040 Add X1, X31, 28
	041 Move [X31+28], W8
	042 Call 0x1C17E04
	043 Move X20, X0
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Move X0, [X21]
	046 Add X1, X31, 24
	047 NotImplemented "Instruction STRH not yet implemented."
	048 Call 0x1C17E04
	049 Move X21, X0
	050 Move W8, [X19+6]
	051 Move X0, [X23]
	052 Add X1, X31, 12
	053 Move [X31+12], W8
	054 Call 0x1C17E04
	055 Move X8, [X22]
	056 Move X3, X0
	057 Move X1, X20
	058 Move X2, X21
	059 Move X0, X8
	060 Move X4, X31
	061 Call String.Format, X0, X1, X2, X3
	062 Move X20, [X31+64]
	063 Move X19, [X31+72]
	064 Move X22, [X31+48]
	065 Move X21, [X31+56]
	066 Move X24, [X31+32]
	067 Move X23, [X31+40]
	068 Move X30, [X31+16]
	069 Add X31, X31, 80
	070 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03D2AF18 TBNZ X8, 0x0, 0x3D2AF60
	0x03D2AF1C ADRP X0, 0x3C9000
	0x03D2AF20 LDR X0, [X0 + 0x598]
	0x03D2AF24 BL 0x1C16CF4
	0x03D2AF28 ADRP X0, 0x3F3000
	0x03D2AF2C LDR X0, [X0 + 0x250]
	0x03D2AF30 BL 0x1C16CF4
	0x03D2AF34 ADRP X0, 0x43A000
	0x03D2AF38 LDR X0, [X0 + 0x760]
	0x03D2AF3C BL 0x1C16CF4
	0x03D2AF40 ADRP X0, 0x43A000
	0x03D2AF44 LDR X0, [X0 + 0x6F8]
	0x03D2AF48 BL 0x1C16CF4
	0x03D2AF4C ADRP X0, 0x43A000
	0x03D2AF50 LDR X0, [X0 + 0xBA0]
	0x03D2AF54 BL 0x1C16CF4
	0x03D2AF58 MOVZ W8, 0x1
	0x03D2AF5C STRB W8, [X19 + 0xB0F]
	0x03D2AF60 LDR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x6BE000
	005 Move X20, 0x43B000
	006 Move W8, [X19+2778]
	007 Move X20, [X20+2504]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x43B000
	013 Move X0, [X0+2504]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2778], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move TEMP, 0
	021 Not TEMP
	022 Move W9, TEMP
	023 Move X8, [X8+184]
	024 Move [X8], X9
	025 Move X30, [X31+32]
	026 Return 

