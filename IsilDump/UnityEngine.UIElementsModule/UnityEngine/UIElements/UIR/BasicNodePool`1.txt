Type: UnityEngine.UIElements.UIR.BasicNodePool`1

Method: System.Void Reset(UnityEngine.UIElements.UIR.BasicNode`1<T> node)

Disassembly:
	0x028CB740 LDR X8, [X0 + 0x10]
	0x028CB744 CBZ X8, 0x28CB75C
	0x028CB748 LDRH W1, [X0 + 0x18]
	0x028CB74C LDR X3, [X8 + 0x18]
	0x028CB750 LDR X0, [X8 + 0x40]
	0x028CB754 LDR X2, [X8 + 0x28]
	0x028CB758 BR X3

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move [X0+24], X31
	005 Move [X0+32], X31
	006 Move [X0+40], X31
	007 Move X30, [X31+16]
	008 Return 
	009 Call 0x1C17F20

Method: UnityEngine.UIElements.UIR.BasicNode`1<T> Create()

Disassembly:
	0x028CB75C RET
	0x028CB760 SUB X31, X31, 0x70
	0x028CB764 STP X30, X23, [X31 + 0x40]
	0x028CB768 STP X22, X21, [X31 + 0x50]
	0x028CB76C STP X20, X19, [X31 + 0x60]
	0x028CB770 ADRP X23, 0x1B0F000
	0x028CB774 LDRB W8, [X23 + 0xCF1]
	0x028CB778 MOV X19, X3
	0x028CB77C MOV X20, X2
	0x028CB780 MOV X22, X1
	0x028CB784 MOV X21, X0
	0x028CB788 TBNZ X8, 0x0, 0x28CB7A0
	0x028CB78C ADRP X0, 0x1829000
	0x028CB790 LDR X0, [X0 + 0x7B8]
	0x028CB794 BL 0x1C16CF4
	0x028CB798 MOVZ W8, 0x1
	0x028CB79C STRB W8, [X23 + 0xCF1]
	0x028CB7A0 CBZ X22, 0x28CB7F0
	0x028CB7A4 LDRH W1, [X21 + 0x18]
	0x028CB7A8 LDR X8, [X22 + 0x18]
	0x028CB7AC LDR X0, [X22 + 0x40]
	0x028CB7B0 LDR X2, [X22 + 0x28]
	0x028CB7B4 BLR X8
	0x028CB7B8 TBZ X0, 0x0, 0x28CB7F0
	0x028CB7BC ADRP X8, 0x1829000
	0x028CB7C0 LDR X8, [X8 + 0x7B8]
	0x028CB7C4 LDRH W20, [X21 + 0x18]
	0x028CB7C8 LDR X0, [X8]
	0x028CB7CC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Call 0x1C17F10
	020 Move X8, [X19+32]
	021 Move X19, X0
	022 Move W9, [X8+309]
	023 Move TEMP, X9
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {30}
	027 Move X0, X8
	028 Call 0x1C5D684
	029 Move X8, X0
	030 Move X8, [X8+192]
	031 Move X0, X19
	032 Move X8, [X8+16]
	033 Move X8, [X8+32]
	034 Move X8, [X8+192]
	035 Move X1, [X8+16]
	036 Call 0x2EF1D48, X0
	037 Move X0, X19
	038 Move X30, [X31+16]
	039 Move X19, [X31+24]
	040 Return X0

Method: System.Void .ctor()

Disassembly:
	0x028CB7D0 CBNZ W8, 0x28CB7D8
	0x028CB7D4 BL 0x1C16DFC
	0x028CB7D8 LDR X8, [X19 + 0x20]
	0x028CB7DC MOV X0, X20
	0x028CB7E0 LDR X8, [X8 + 0xC0]
	0x028CB7E4 LDR X1, [X8 + 0x98]
	0x028CB7E8 BL 0x229A0C0
	0x028CB7EC B 0x28CB83C
	0x028CB7F0 STP X31, X31, [X31 + 0x8]
	0x028CB7F4 STR X31, [X31 + 0x18]
	0x028CB7F8 LDR X8, [X19 + 0x20]
	0x028CB7FC ADD X0, X31, 0x8
	0x028CB800 MOV X1, X21
	0x028CB804 MOV X2, X22
	0x028CB808 LDR X8, [X8 + 0xC0]
	0x028CB80C MOV X3, X20
	0x028CB810 LDR X4, [X8 + 0xB0]
	0x028CB814 BL 0x28D1CE8
	0x028CB818 LDUR V0, [X31 + 0x8]
	0x028CB81C LDR X8, [X31 + 0x18]
	0x028CB820 ADD X0, X31, 0x20
	0x028CB824 STR V0, [X31 + 0x2]
	0x028CB828 STR X8, [X31 + 0x30]
	0x028CB82C LDR X8, [X19 + 0x20]
	0x028CB830 LDR X8, [X8 + 0xC0]
	0x028CB834 LDR X1, [X8 + 0xC0]
	0x028CB838 BL 0x28D1CBC
	0x028CB83C LDP X20, X19, [X31 + 0x60]
	0x028CB840 LDP X22, X21, [X31 + 0x50]
	0x028CB844 LDP X30, X23, [X31 + 0x40]
	0x028CB848 ADD X31, X31, 0x70
	0x028CB84C RET
	0x028CB850 SUB X31, X31, 0x70
	0x028CB854 STP X30, X23, [X31 + 0x40]
	0x028CB858 STP X22, X21, [X31 + 0x50]
	0x028CB85C STP X20, X19, [X31 + 0x60]
	0x028CB860 ADRP X23, 0x1B0F000
	0x028CB864 LDRB W8, [X23 + 0xCF2]
	0x028CB868 MOV X19, X3
	0x028CB86C MOV X20, X2
	0x028CB870 MOV X22, X1
	0x028CB874 MOV X21, X0
	0x028CB878 TBNZ X8, 0x0, 0x28CB890
	0x028CB87C ADRP X0, 0x1829000
	0x028CB880 LDR X0, [X0 + 0x7B8]
	0x028CB884 BL 0x1C16CF4
	0x028CB888 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+32]
	007 Move X20, X1
	008 Move X19, X0
	009 Move X8, [X8+192]
	010 Move X8, [X8+32]
	011 Move W9, [X8+309]
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, X0
	019 Move X0, X8
	020 Call 0x1C17F10
	021 Move X8, [X20+32]
	022 Move X1, X31
	023 Move X21, X0
	024 Move X8, [X8+192]
	025 Move X2, [X8+24]
	026 Move X3, [X8+40]
	027 Call Func`1<Object>..ctor, X0, X1, X2
	028 Move X8, [X20+32]
	029 Move X8, [X8+192]
	030 Move X0, [X8+56]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Call 0x1C17F10
	038 Move X8, [X20+32]
	039 Move X1, X31
	040 Move X22, X0
	041 Move X8, [X8+192]
	042 Move X2, [X8+48]
	043 Move X3, [X8+64]
	044 Call Action`1<Object>..ctor, X0, X1, X2
	045 Move X8, [X20+32]
	046 Move X0, X19
	047 Move X1, X21
	048 Move X2, X22
	049 Move X8, [X8+192]
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move W3, 0x2710
	055 Move X4, [X8+72]
	056 Move X30, [X31+48]
	057 Call 0x2EF1D58, X0, X1, X2, X3
	058 Return 

