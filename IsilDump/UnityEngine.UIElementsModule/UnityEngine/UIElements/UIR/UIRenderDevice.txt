Type: UnityEngine.UIElements.UIR.UIRenderDevice

Method: System.UInt32 get_maxVerticesPerPage()

Disassembly:
	0x03D2F0FC LDR X3, [X8]
	0x03D2F100 BL 0x2EEFDE0

ISIL:
	001 Move W0, [X0+168]
	002 Return X0

Method: System.Boolean get_breakBatches()

Disassembly:
	0x03D2F104 LDR X0, [X22]
	0x03D2F108 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move W0, [X0+172]
	002 Return X0

Method: System.Void set_breakBatches(System.Boolean value)

Disassembly:
	0x03D2F10C LDRB W8, [X8 + 0xD]
	0x03D2F110 CBZ W8, 0x3D2F124
	0x03D2F114 LDR W8, [X0 + 0xE0]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+172], W8
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x03D2F118 CBNZ W8, 0x3D2F120
	0x03D2F11C BL 0x1C16DFC
	0x03D2F120 BL 0x3D2F16C
	0x03D2F124 MOVZ W8, 0x1
	0x03D2F128 STRB W8, [X19 + 0xAD]
	0x03D2F12C LDP X20, X19, [X31 + 0x20]
	0x03D2F130 LDP X22, X21, [X31 + 0x10]
	0x03D2F134 LDR X30, [X31], #0x30
	0x03D2F138 RET
	0x03D2F13C BL 0x1C16F20
	0x03D2F140 STP X30, X19, [X31 - 0x10]!
	0x03D2F144 MOV X19, X0
	0x03D2F148 LDR X0, [X0 + 0x8]
	0x03D2F14C CBZ X0, 0x3D2F164
	0x03D2F150 LDR X8, [X0 + 0x28]
	0x03D2F154 STR X8, [X19 + 0x8]
	0x03D2F158 BL 0x3D33D04
	0x03D2F15C LDR X0, [X19 + 0x8]
	0x03D2F160 CBNZ X0, 0x3D2F150
	0x03D2F164 LDP X30, X19, [X31], #0x10
	0x03D2F168 RET
	0x03D2F16C STP X30, X23, [X31 - 0x30]!
	0x03D2F170 STP X22, X21, [X31 + 0x10]
	0x03D2F174 STP X20, X19, [X31 + 0x20]
	0x03D2F178 ADRP X19, 0x6B8000
	0x03D2F17C ADRP X20, 0x435000
	0x03D2F180 LDRB W8, [X19 + 0xB2A]
	0x03D2F184 LDR X20, [X20 + 0x6F8]
	0x03D2F188 TBNZ X8, 0x0, 0x3D2F200
	0x03D2F18C ADRP X0, 0x3C4000
	0x03D2F190 LDR X0, [X0 + 0xA28]
	0x03D2F194 BL 0x1C16CF4
	0x03D2F198 ADRP X0, 0x435000
	0x03D2F19C LDR X0, [X0 + 0xE68]
	0x03D2F1A0 BL 0x1C16CF4
	0x03D2F1A4 ADRP X0, 0x435000
	0x03D2F1A8 LDR X0, [X0 + 0xE70]
	0x03D2F1AC BL 0x1C16CF4
	0x03D2F1B0 ADRP X0, 0x435000
	0x03D2F1B4 LDR X0, [X0 + 0xE78]
	0x03D2F1B8 BL 0x1C16CF4
	0x03D2F1BC ADRP X0, 0x435000
	0x03D2F1C0 LDR X0, [X0 + 0xE80]
	0x03D2F1C4 BL 0x1C16CF4
	0x03D2F1C8 ADRP X0, 0x3C4000
	0x03D2F1CC LDR X0, [X0 + 0x598]
	0x03D2F1D0 BL 0x1C16CF4
	0x03D2F1D4 ADRP X0, 0x3EE000
	0x03D2F1D8 LDR X0, [X0 + 0x240]
	0x03D2F1DC BL 0x1C16CF4
	0x03D2F1E0 ADRP X0, 0x435000
	0x03D2F1E4 LDR X0, [X0 + 0x6F8]
	0x03D2F1E8 BL 0x1C16CF4
	0x03D2F1EC ADRP X0, 0x3ED000
	0x03D2F1F0 LDR X0, [X0 + 0x820]
	0x03D2F1F4 BL 0x1C16CF4
	0x03D2F1F8 MOVZ W8, 0x1
	0x03D2F1FC STRB W8, [X19 + 0xB2A]
	0x03D2F200 LDR X0, [X20]
	0x03D2F204 LDR W8, [X0 + 0xE0]
	0x03D2F208 CBNZ W8, 0x3D2F214
	0x03D2F20C BL 0x1C16DFC
	0x03D2F210 LDR X0, [X20]
	0x03D2F214 LDR X8, [X0 + 0xB8]
	0x03D2F218 ADRP X21, 0x3ED000
	0x03D2F21C LDRB W8, [X8 + 0xD]
	0x03D2F220 LDR X21, [X21 + 0x820]
	0x03D2F224 CBZ W8, 0x3D2F244
	0x03D2F228 LDR X0, [X21]
	0x03D2F22C LDR W8, [X0 + 0xE0]
	0x03D2F230 CBNZ W8, 0x3D2F238
	0x03D2F234 BL 0x1C16DFC
	0x03D2F238 MOV X0, X31
	0x03D2F23C BL 0x3D1FAC0
	0x03D2F240 LDR X0, [X20]
	0x03D2F244 LDR W8, [X0 + 0xE0]
	0x03D2F248 CBNZ W8, 0x3D2F254
	0x03D2F24C BL 0x1C16DFC
	0x03D2F250 LDR X0, [X20]
	0x03D2F254 LDR X8, [X0 + 0xB8]
	0x03D2F258 LDR X8, [X8]
	0x03D2F25C CBZ X8, 0x3D2F50C
	0x03D2F260 LDR X23, [X8 + 0x10]
	0x03D2F264 CBZ X23, 0x3D2F2F4
	0x03D2F268 ADRP X22, 0x435000
	0x03D2F26C LDR X22, [X22 + 0xE70]
	0x03D2F270 LDR X0, [X21]
	0x03D2F274 LDR W19, [X23 + 0x28]
	0x03D2F278 LDR W8, [X0 + 0xE0]
	0x03D2F27C CBNZ W8, 0x3D2F284
	0x03D2F280 BL 0x1C16DFC
	0x03D2F284 MOV W0, W19
	0x03D2F288 MOV X1, X31
	0x03D2F28C BL 0x3D1FA48
	0x03D2F290 TBZ X0, 0x0, 0x3D2F2F0
	0x03D2F294 LDR X0, [X23 + 0x30]
	0x03D2F298 CBZ X0, 0x3D2F2AC
	0x03D2F29C LDR X19, [X0 + 0x28]
	0x03D2F2A0 BL 0x3D33D04
	0x03D2F2A4 MOV X0, X19
	0x03D2F2A8 CBNZ X19, 0x3D2F29C
	0x03D2F2AC LDR X0, [X20]
	0x03D2F2B0 LDR W8, [X0 + 0xE0]
	0x03D2F2B4 CBNZ W8, 0x3D2F2C0
	0x03D2F2B8 BL 0x1C16DFC
	0x03D2F2BC LDR X0, [X20]
	0x03D2F2C0 LDR X8, [X0 + 0xB8]
	0x03D2F2C4 LDR X0, [X8]
	0x03D2F2C8 CBZ X0, 0x3D2F50C
	0x03D2F2CC LDR X1, [X22]
	0x03D2F2D0 BL 0x2EF02DC
	0x03D2F2D4 LDR X0, [X20]
	0x03D2F2D8 LDR X8, [X0 + 0xB8]
	0x03D2F2DC LDR X8, [X8]
	0x03D2F2E0 CBZ X8, 0x3D2F50C
	0x03D2F2E4 LDR X23, [X8 + 0x10]
	0x03D2F2E8 CBNZ X23, 0x3D2F270
	0x03D2F2EC B 0x3D2F2F4
	0x03D2F2F0 LDR X0, [X20]
	0x03D2F2F4 LDR W8, [X0 + 0xE0]
	0x03D2F2F8 CBNZ W8, 0x3D2F304
	0x03D2F2FC BL 0x1C16DFC
	0x03D2F300 LDR X0, [X20]
	0x03D2F304 LDR X8, [X0 + 0xB8]
	0x03D2F308 LDRB W8, [X8 + 0xD]
	0x03D2F30C CBZ W8, 0x3D2F33C
	0x03D2F310 LDR W8, [X0 + 0xE0]
	0x03D2F314 CBNZ W8, 0x3D2F320
	0x03D2F318 BL 0x1C16DFC
	0x03D2F31C LDR X0, [X20]
	0x03D2F320 LDR X8, [X0 + 0xB8]
	0x03D2F324 LDR X8, [X8]
	0x03D2F328 CBZ X8, 0x3D2F50C
	0x03D2F32C LDR W8, [X8 + 0x18]
	0x03D2F330 CMP W8, 0x0
	0x03D2F334 CSET W19, EQ
	0x03D2F338 B 0x3D2F340
	0x03D2F33C MOVZ W19, 0x1
	0x03D2F340 ADRP X8, 0x3C4000
	0x03D2F344 LDR X8, [X8 + 0xA28]
	0x03D2F348 LDR X0, [X8]
	0x03D2F34C LDR W8, [X0 + 0xE0]
	0x03D2F350 CBNZ W8, 0x3D2F358
	0x03D2F354 BL 0x1C16DFC
	0x03D2F358 MOV W0, W19
	0x03D2F35C MOV X1, X31
	0x03D2F360 BL 0x3C06E58
	0x03D2F364 LDR X0, [X20]
	0x03D2F368 LDR W8, [X0 + 0xE0]
	0x03D2F36C CBNZ W8, 0x3D2F378
	0x03D2F370 BL 0x1C16DFC
	0x03D2F374 LDR X0, [X20]
	0x03D2F378 LDR X8, [X0 + 0xB8]
	0x03D2F37C LDR W9, [X8 + 0x8]
	0x03D2F380 CBNZ W9, 0x3D2F4FC
	0x03D2F384 LDR W9, [X0 + 0xE0]
	0x03D2F388 CBNZ W9, 0x3D2F398
	0x03D2F38C BL 0x1C16DFC
	0x03D2F390 LDR X0, [X20]
	0x03D2F394 LDR X8, [X0 + 0xB8]
	0x03D2F398 LDRB W9, [X8 + 0xC]
	0x03D2F39C CBZ W9, 0x3D2F4FC
	0x03D2F3A0 LDR W9, [X0 + 0xE0]
	0x03D2F3A4 CBNZ W9, 0x3D2F3B4
	0x03D2F3A8 BL 0x1C16DFC
	0x03D2F3AC LDR X8, [X20]
	0x03D2F3B0 LDR X8, [X8 + 0xB8]
	0x03D2F3B4 ADRP X22, 0x3C4000
	0x03D2F3B8 LDR X22, [X22 + 0x598]
	0x03D2F3BC LDR X19, [X8 + 0x50]
	0x03D2F3C0 LDR X0, [X22]
	0x03D2F3C4 LDR W9, [X0 + 0xE0]
	0x03D2F3C8 CBNZ W9, 0x3D2F3D0
	0x03D2F3CC BL 0x1C16DFC
	0x03D2F3D0 MOV X0, X19
	0x03D2F3D4 MOV X1, X31
	0x03D2F3D8 MOV X2, X31
	0x03D2F3DC BL 0x3C354F8
	0x03D2F3E0 LDR X8, [X20]
	0x03D2F3E4 TBZ X0, 0x0, 0x3D2F434
	0x03D2F3E8 LDR W9, [X8 + 0xE0]
	0x03D2F3EC CBNZ W9, 0x3D2F3FC
	0x03D2F3F0 MOV X0, X8
	0x03D2F3F4 BL 0x1C16DFC
	0x03D2F3F8 LDR X8, [X20]
	0x03D2F3FC ADRP X9, 0x3EE000
	0x03D2F400 LDR X9, [X9 + 0x240]
	0x03D2F404 LDR X8, [X8 + 0xB8]
	0x03D2F408 LDR X0, [X9]
	0x03D2F40C LDR X19, [X8 + 0x50]
	0x03D2F410 LDR W9, [X0 + 0xE0]
	0x03D2F414 CBNZ W9, 0x3D2F41C
	0x03D2F418 BL 0x1C16DFC
	0x03D2F41C MOV X0, X19
	0x03D2F420 MOV X1, X31
	0x03D2F424 BL 0x3DE1000
	0x03D2F428 LDR X8, [X20]
	0x03D2F42C LDR X9, [X8 + 0xB8]
	0x03D2F430 STR X31, [X9 + 0x50]
	0x03D2F434 LDR W9, [X8 + 0xE0]
	0x03D2F438 CBNZ W9, 0x3D2F448

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X26, 0x6B9000
	014 Move X28, 0x436000
	015 Move X19, 0x436000
	016 Move X22, 0x436000
	017 Move X25, 0x436000
	018 Move X24, 0x436000
	019 Move X23, 0x436000
	020 Move X21, 0x436000
	021 Move X29, 0x436000
	022 Move X27, 0x436000
	023 Move X20, 0x3C6000
	024 Move X28, [X28+3376]
	025 Move X19, [X19+3384]
	026 Move X22, [X22+1784]
	027 Move X25, [X25+3392]
	028 Move X24, [X24+3400]
	029 Move X23, [X23+3408]
	030 Move X21, [X21+3416]
	031 Move X29, [X29+3424]
	032 Move X27, [X27+3432]
	033 Move W8, [X26+2829]
	034 Move X20, [X20+3696]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {89}
	039 Move X0, 0x3C6000
	040 Move X0, [X0+3696]
	041 Call 0x1C17CF4
	042 Move X0, 0x436000
	043 Move X0, [X0+3384]
	044 Call 0x1C17CF4
	045 Move X0, 0x436000
	046 Move X0, [X0+3376]
	047 Call 0x1C17CF4
	048 Move X0, 0x436000
	049 Move X0, [X0+3440]
	050 Call 0x1C17CF4
	051 Move X0, 0x436000
	052 Move X0, [X0+3448]
	053 Call 0x1C17CF4
	054 Move X0, 0x436000
	055 Move X0, [X0+1784]
	056 Call 0x1C17CF4
	057 Move X0, 0x3EE000
	058 Move X0, [X0+2080]
	059 Call 0x1C17CF4
	060 Move X0, 0x436000
	061 Move X0, [X0+3456]
	062 Call 0x1C17CF4
	063 Move X0, 0x436000
	064 Move X0, [X0+3464]
	065 Call 0x1C17CF4
	066 Move X0, 0x436000
	067 Move X0, [X0+3472]
	068 Call 0x1C17CF4
	069 Move X0, 0x436000
	070 Move X0, [X0+3432]
	071 Call 0x1C17CF4
	072 Move X0, 0x436000
	073 Move X0, [X0+3424]
	074 Call 0x1C17CF4
	075 Move X0, 0x436000
	076 Move X0, [X0+3392]
	077 Call 0x1C17CF4
	078 Move X0, 0x436000
	079 Move X0, [X0+3408]
	080 Call 0x1C17CF4
	081 Move X0, 0x436000
	082 Move X0, [X0+3416]
	083 Call 0x1C17CF4
	084 Move X0, 0x436000
	085 Move X0, [X0+3400]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X26+2829], W8
	089 Move X0, [X28]
	090 Move X28, 0x436000
	091 Move X28, [X28+3448]
	092 Call 0x1C17F10
	093 Move X1, [X19]
	094 Move X19, X0
	095 Call LinkedList`1<DeviceToFree>..ctor, X0
	096 Move X8, [X22]
	097 Move X1, X31
	098 Move X8, [X8+184]
	099 Move [X8], X19
	100 Move X8, [X22]
	101 Move X8, [X8+184]
	102 Move [X8+8], W31
	103 Move X0, [X25]
	104 Call Shader.PropertyToID, X0
	105 Move X8, [X22]
	106 Move X1, X31
	107 Move X8, [X8+184]
	108 Move [X8+16], W0
	109 Move X0, [X24]
	110 Call Shader.PropertyToID, X0
	111 Move X8, [X22]
	112 Move X1, X31
	113 Move X8, [X8+184]
	114 Move [X8+20], W0
	115 Move X0, [X23]
	116 Call Shader.PropertyToID, X0
	117 Move X8, [X22]
	118 Move X1, X31
	119 Move X8, [X8+184]
	120 Move [X8+24], W0
	121 Move X0, [X21]
	122 Call Shader.PropertyToID, X0
	123 Move X8, [X22]
	124 Move W1, 1
	125 Move W2, W31
	126 Move W3, W31
	127 Move X8, [X8+184]
	128 Move X4, X31
	129 Move [X8+28], W0
	130 Move X0, [X29]
	131 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	132 Move X8, [X22]
	133 Move W1, 1
	134 Move W2, W31
	135 Move W3, W31
	136 Move X8, [X8+184]
	137 Move X4, X31
	138 Move [X8+32], X0
	139 Move X0, [X27]
	140 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	141 Move X8, [X22]
	142 Move W1, 1
	143 Move W2, W31
	144 Move W3, W31
	145 Move X8, [X8+184]
	146 Move X4, X31
	147 Move [X8+40], X0
	148 Move X8, 0x436000
	149 Move X8, [X8+3464]
	150 Move X0, [X8]
	151 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	152 Move X8, [X22]
	153 Move W1, 1
	154 Move W2, W31
	155 Move W3, W31
	156 Move X8, [X8+184]
	157 Move X4, X31
	158 Move [X8+48], X0
	159 Move X8, 0x436000
	160 Move X8, [X8+3456]
	161 Move X0, [X8]
	162 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	163 Move X8, [X22]
	164 Move W1, 1
	165 Move W2, W31
	166 Move W3, W31
	167 Move X8, [X8+184]
	168 Move X4, X31
	169 Move [X8+56], X0
	170 Move X8, 0x436000
	171 Move X8, [X8+3472]
	172 Move X0, [X8]
	173 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	174 Move X8, [X22]
	175 Move X8, [X8+184]
	176 Move [X8+64], X0
	177 Move X0, [X20]
	178 Call 0x1C17F10
	179 Move X8, 0x436000
	180 Move X8, [X8+3440]
	181 Move X1, X31
	182 Move X3, X31
	183 Move X19, X0
	184 Move X2, [X8]
	185 Call Action..ctor, X0, X1, X2
	186 Move X8, 0x3EE000
	187 Move X8, [X8+2080]
	188 Move X0, [X8]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Move X0, X19
	194 Move X1, X31
	195 Call Utility.add_EngineUpdate, X0
	196 Move X0, [X20]
	197 Call 0x1C17F10
	198 Move X2, [X28]
	199 Move X1, X31
	200 Move X3, X31
	201 Move X19, X0
	202 Call Action..ctor, X0, X1, X2
	203 Move X0, X19
	204 Move X20, [X31+80]
	205 Move X19, [X31+88]
	206 Move X22, [X31+64]
	207 Move X21, [X31+72]
	208 Move X24, [X31+48]
	209 Move X23, [X31+56]
	210 Move X26, [X31+32]
	211 Move X25, [X31+40]
	212 Move X28, [X31+16]
	213 Move X27, [X31+24]
	214 Move X1, X31
	215 Move X29, [X31+96]
	216 Move X30, [X31+104]
	217 Call Utility.add_FlushPendingResources, X0
	218 Return 

Method: System.Void .ctor(System.UInt32 initialVertexCapacity = 0, System.UInt32 initialIndexCapacity = 0)

Disassembly:
	0x03D2F43C MOV X0, X8
	0x03D2F440 BL 0x1C16DFC

ISIL:
	001 Move W3, W31

Method: System.Void .ctor(System.UInt32 initialVertexCapacity, System.UInt32 initialIndexCapacity, System.Boolean mockDevice)

Disassembly:
	0x03D2F444 LDR X8, [X20]
	0x03D2F448 LDR X0, [X22]
	0x03D2F44C LDR X8, [X8 + 0xB8]
	0x03D2F450 LDR W9, [X0 + 0xE0]
	0x03D2F454 LDR X19, [X8 + 0x58]
	0x03D2F458 CBNZ W9, 0x3D2F460
	0x03D2F45C BL 0x1C16DFC
	0x03D2F460 MOV X0, X19
	0x03D2F464 MOV X1, X31
	0x03D2F468 MOV X2, X31
	0x03D2F46C BL 0x3C354F8
	0x03D2F470 TBZ X0, 0x0, 0x3D2F4C4
	0x03D2F474 LDR X0, [X20]
	0x03D2F478 LDR W8, [X0 + 0xE0]
	0x03D2F47C CBNZ W8, 0x3D2F488
	0x03D2F480 BL 0x1C16DFC
	0x03D2F484 LDR X0, [X20]
	0x03D2F488 ADRP X8, 0x3EE000
	0x03D2F48C LDR X8, [X8 + 0x240]
	0x03D2F490 LDR X9, [X0 + 0xB8]
	0x03D2F494 LDR X8, [X8]
	0x03D2F498 LDR X19, [X9 + 0x58]
	0x03D2F49C LDR W10, [X8 + 0xE0]
	0x03D2F4A0 CBNZ W10, 0x3D2F4AC
	0x03D2F4A4 MOV X0, X8
	0x03D2F4A8 BL 0x1C16DFC
	0x03D2F4AC MOV X0, X19
	0x03D2F4B0 MOV X1, X31
	0x03D2F4B4 BL 0x3DE1000
	0x03D2F4B8 LDR X8, [X20]
	0x03D2F4BC LDR X8, [X8 + 0xB8]
	0x03D2F4C0 STR X31, [X8 + 0x58]
	0x03D2F4C4 LDR X0, [X21]
	0x03D2F4C8 LDR W8, [X0 + 0xE0]
	0x03D2F4CC CBNZ W8, 0x3D2F4D4
	0x03D2F4D0 BL 0x1C16DFC
	0x03D2F4D4 MOV W0, W31
	0x03D2F4D8 MOV X1, X31
	0x03D2F4DC BL 0x3D1FBF8
	0x03D2F4E0 LDR X0, [X20]
	0x03D2F4E4 LDR W8, [X0 + 0xE0]
	0x03D2F4E8 CBNZ W8, 0x3D2F4F4
	0x03D2F4EC BL 0x1C16DFC
	0x03D2F4F0 LDR X0, [X20]
	0x03D2F4F4 LDR X8, [X0 + 0xB8]
	0x03D2F4F8 STRB W31, [X8 + 0xC]
	0x03D2F4FC LDP X20, X19, [X31 + 0x20]
	0x03D2F500 LDP X22, X21, [X31 + 0x10]
	0x03D2F504 LDP X30, X23, [X31], #0x30
	0x03D2F508 RET
	0x03D2F50C BL 0x1C16F20
	0x03D2F510 STP X30, X25, [X31 - 0x40]!
	0x03D2F514 STP X24, X23, [X31 + 0x10]
	0x03D2F518 STP X22, X21, [X31 + 0x20]
	0x03D2F51C STP X20, X19, [X31 + 0x30]
	0x03D2F520 ADRP X25, 0x6B8000
	0x03D2F524 LDRB W8, [X25 + 0xB17]
	0x03D2F528 MOV X19, X5
	0x03D2F52C MOV X20, X4
	0x03D2F530 MOV X21, X3
	0x03D2F534 MOV W22, W2
	0x03D2F538 MOV W23, W1
	0x03D2F53C MOV X24, X0
	0x03D2F540 TBNZ X8, 0x0, 0x3D2F558
	0x03D2F544 ADRP X0, 0x435000
	0x03D2F548 LDR X0, [X0 + 0xE88]
	0x03D2F54C BL 0x1C16CF4
	0x03D2F550 MOVZ W8, 0x1
	0x03D2F554 STRB W8, [X25 + 0xB17]
	0x03D2F558 LDR X0, [X24 + 0x90]
	0x03D2F55C CBZ X0, 0x3D2F5CC
	0x03D2F560 ADRP X8, 0x435000
	0x03D2F564 LDR X8, [X8 + 0xE88]
	0x03D2F568 LDR X1, [X8]
	0x03D2F56C BL 0x2EF0E28
	0x03D2F570 CBZ X0, 0x3D2F5CC
	0x03D2F574 MOVZ W8, 0xAAAB
	0x03D2F578 MOVK W8, 0xAAAA0000
	0x03D2F57C UMADDL X8, X22, X8, X31
	0x03D2F580 MOV X25, X0
	0x03D2F584 UBFM X8, X8, 0x21, 0x3F
	0x03D2F588 STR W8, [X0 + 0x48]
	0x03D2F58C MOV X0, X24
	0x03D2F590 MOV X1, X25
	0x03D2F594 MOV W2, W23
	0x03D2F598 MOV W3, W22
	0x03D2F59C MOV X4, X21
	0x03D2F5A0 MOV X5, X20
	0x03D2F5A4 MOV W6, W31
	0x03D2F5A8 BL 0x3D2F5D0
	0x03D2F5AC LDR W8, [X25 + 0x18]
	0x03D2F5B0 LDP X22, X21, [X31 + 0x20]
	0x03D2F5B4 LDP X24, X23, [X31 + 0x10]
	0x03D2F5B8 MOV X0, X25
	0x03D2F5BC STRH W8, [X19]
	0x03D2F5C0 LDP X20, X19, [X31 + 0x30]
	0x03D2F5C4 LDP X30, X25, [X31], #0x40
	0x03D2F5C8 RET
	0x03D2F5CC BL 0x1C16F20
	0x03D2F5D0 SUB X31, X31, 0x120
	0x03D2F5D4 STP X29, X30, [X31 + 0xC0]
	0x03D2F5D8 STP X28, X27, [X31 + 0xD0]
	0x03D2F5DC STP X26, X25, [X31 + 0xE0]
	0x03D2F5E0 STP X24, X23, [X31 + 0xF0]
	0x03D2F5E4 STP X22, X21, [X31 + 0x100]
	0x03D2F5E8 STP X20, X19, [X31 + 0x110]
	0x03D2F5EC ADRP X20, 0x6B8000
	0x03D2F5F0 LDRB W8, [X20 + 0xB1C]
	0x03D2F5F4 MOV W26, W6
	0x03D2F5F8 MOV X28, X5
	0x03D2F5FC MOV X21, X4
	0x03D2F600 MOV W23, W3
	0x03D2F604 MOV W24, W2
	0x03D2F608 MOV X19, X1
	0x03D2F60C MOV X22, X0
	0x03D2F610 TBNZ X8, 0x0, 0x3D2F694
	0x03D2F614 ADRP X0, 0x435000
	0x03D2F618 LDR X0, [X0 + 0xE90]
	0x03D2F61C BL 0x1C16CF4
	0x03D2F620 ADRP X0, 0x435000
	0x03D2F624 LDR X0, [X0 + 0xE98]
	0x03D2F628 BL 0x1C16CF4
	0x03D2F62C ADRP X0, 0x3C4000
	0x03D2F630 LDR X0, [X0 + 0xA28]
	0x03D2F634 BL 0x1C16CF4
	0x03D2F638 ADRP X0, 0x3C4000
	0x03D2F63C LDR X0, [X0 + 0x5A8]
	0x03D2F640 BL 0x1C16CF4
	0x03D2F644 ADRP X0, 0x435000
	0x03D2F648 LDR X0, [X0 + 0xEA0]
	0x03D2F64C BL 0x1C16CF4
	0x03D2F650 ADRP X0, 0x435000
	0x03D2F654 LDR X0, [X0 + 0xEA8]
	0x03D2F658 BL 0x1C16CF4
	0x03D2F65C ADRP X0, 0x435000
	0x03D2F660 LDR X0, [X0 + 0xEB0]
	0x03D2F664 BL 0x1C16CF4
	0x03D2F668 ADRP X0, 0x435000
	0x03D2F66C LDR X0, [X0 + 0xEB8]
	0x03D2F670 BL 0x1C16CF4
	0x03D2F674 ADRP X0, 0x435000
	0x03D2F678 LDR X0, [X0 + 0xEC0]
	0x03D2F67C BL 0x1C16CF4
	0x03D2F680 ADRP X0, 0x435000
	0x03D2F684 LDR X0, [X0 + 0xEC8]
	0x03D2F688 BL 0x1C16CF4
	0x03D2F68C MOVZ W8, 0x1
	0x03D2F690 STRB W8, [X20 + 0xB1C]
	0x03D2F694 STP X31, X31, [X31 + 0xB0]
	0x03D2F698 STP X31, X31, [X31 + 0xA0]
	0x03D2F69C STP X31, X31, [X31 + 0x90]
	0x03D2F6A0 LDR W8, [X22 + 0x34]
	0x03D2F6A4 ADRP X20, 0x3C4000
	0x03D2F6A8 LDR X20, [X20 + 0xA28]
	0x03D2F6AC STR X21, [X31 + 0x18]
	0x03D2F6B0 CMP W8, W24
	0x03D2F6B4 B.CS 0x3D2F738
	0x03D2F6B8 MOV X0, X22
	0x03D2F6BC STR X28, [X31 + 0x10]
	0x03D2F6C0 BL 0x3D2EDD0
	0x03D2F6C4 MOV X20, X22
	0x03D2F6C8 LDR X8, [X20 + 0x28]!
	0x03D2F6CC CBZ X8, 0x3D2F794
	0x03D2F6D0 MOV X25, X31
	0x03D2F6D4 MOVN W28, 0x80000000
	0x03D2F6D8 MOV X27, X8
	0x03D2F6DC LDR X8, [X8 + 0x18]
	0x03D2F6E0 CBZ X8, 0x3D2FBEC
	0x03D2F6E4 LDR X9, [X27 + 0x20]
	0x03D2F6E8 CBZ X9, 0x3D2FBEC
	0x03D2F6EC LDR W8, [X8 + 0x28]
	0x03D2F6F0 LDR W9, [X9 + 0x28]
	0x03D2F6F4 MOV X0, X27
	0x03D2F6F8 SUB W29, W8, W24
	0x03D2F6FC SUB W21, W9, W23
	0x03D2F700 BL 0x3D30BB4
	0x03D2F704 ORR W9, W21, W29, 0x0
	0x03D2F708 CMP W9, 0x0
	0x03D2F70C LDR X8, [X27 + 0x28]
	0x03D2F710 CSET W9, GE
	0x03D2F714 CMP W29, W28
	0x03D2F718 CSET W10, LT
	0x03D2F71C AND W9, W0, W9, 0x0
	0x03D2F720 ANDS W31, W10, W9, 0x0
	0x03D2F724 CSEL W28, W29, W28, NE
	0x03D2F728 CSEL X25, X27, X25, NE
	0x03D2F72C CBNZ X8, 0x3D2F6D8
	0x03D2F730 CBNZ X25, 0x3D2F81C
	0x03D2F734 B 0x3D2F798
	0x03D2F738 LDR X25, [X22 + 0x28]
	0x03D2F73C CBZ X25, 0x3D2F86C
	0x03D2F740 AND W6, W26, 0x1
	0x03D2F744 ADD X4, X31, 0xA8
	0x03D2F748 ADD X5, X31, 0x90
	0x03D2F74C MOV X1, X25
	0x03D2F750 MOV W2, W24
	0x03D2F754 MOV W3, W23
	0x03D2F758 BL 0x3D307B0
	0x03D2F75C TBNZ X0, 0x0, 0x3D2F874
	0x03D2F760 LDR X27, [X25 + 0x28]
	0x03D2F764 CBZ X27, 0x3D2F874
	0x03D2F768 AND W6, W26, 0x1
	0x03D2F76C ADD X4, X31, 0xA8
	0x03D2F770 ADD X5, X31, 0x90
	0x03D2F774 MOV X1, X27
	0x03D2F778 MOV W2, W24
	0x03D2F77C MOV W3, W23
	0x03D2F780 BL 0x3D307B0
	0x03D2F784 MOV X25, X27
	0x03D2F788 TBZ X0, 0x0, 0x3D2F760
	0x03D2F78C MOV X25, X27
	0x03D2F790 B 0x3D2F874
	0x03D2F794 MOV X27, X31
	0x03D2F798 ADRP X8, 0x3C4000
	0x03D2F79C LDR X8, [X8 + 0xA28]
	0x03D2F7A0 LDR W25, [X22 + 0xA8]
	0x03D2F7A4 MOVZ W9, 0x2
	0x03D2F7A8 LDR X0, [X8]
	0x03D2F7AC CMP W25, W24
	0x03D2F7B0 CSEL W28, W9, W24, CC
	0x03D2F7B4 LDR W8, [X0 + 0xE0]
	0x03D2F7B8 CBNZ W8, 0x3D2F7C0
	0x03D2F7BC BL 0x1C16DFC
	0x03D2F7C0 ADRP X8, 0x435000
	0x03D2F7C4 LDR X8, [X8 + 0xEC8]
	0x03D2F7C8 CMP W25, W24
	0x03D2F7CC CSET W0, CS
	0x03D2F7D0 MOV X2, X31
	0x03D2F7D4 LDR X1, [X8]
	0x03D2F7D8 BL 0x3C06F88
	0x03D2F7DC ADRP X8, 0x435000
	0x03D2F7E0 LDRB W29, [X22 + 0x10]
	0x03D2F7E4 LDR X8, [X8 + 0xEB0]
	0x03D2F7E8 LDR X0, [X8]
	0x03D2F7EC BL 0x1C16F10
	0x03D2F7F0 MOVZ W3, 0x4
	0x03D2F7F4 MOV W1, W28
	0x03D2F7F8 MOV W2, W23
	0x03D2F7FC MOV W4, W29
	0x03D2F800 MOV X25, X0
	0x03D2F804 BL 0x3D30A64
	0x03D2F808 ADD X8, X27, 0x28
	0x03D2F80C CMP X27, 0x0
	0x03D2F810 CSEL X8, X20, X8, EQ
	0x03D2F814 STR X25, [X8]
	0x03D2F818 CBZ X25, 0x3D2FBEC
	0x03D2F81C LDR X8, [X25 + 0x18]
	0x03D2F820 CBZ X8, 0x3D2FBEC
	0x03D2F824 ADRP X20, 0x3C4000
	0x03D2F828 LDR X0, [X8 + 0x40]
	0x03D2F82C LDR X20, [X20 + 0xA28]
	0x03D2F830 CBZ X0, 0x3D2FBEC
	0x03D2F834 AND W2, W26, 0x1
	0x03D2F838 ADD X8, X31, 0xA8
	0x03D2F83C MOV W1, W24
	0x03D2F840 BL 0x3D308B4
	0x03D2F844 LDR X8, [X25 + 0x20]
	0x03D2F848 CBZ X8, 0x3D2FBEC
	0x03D2F84C LDR X0, [X8 + 0x40]
	0x03D2F850 LDR X28, [X31 + 0x10]
	0x03D2F854 CBZ X0, 0x3D2FBEC
	0x03D2F858 AND W2, W26, 0x1
	0x03D2F85C ADD X8, X31, 0x90
	0x03D2F860 MOV W1, W23
	0x03D2F864 BL 0x3D308B4
	0x03D2F868 B 0x3D2F9E4
	0x03D2F86C MOV X0, X22
	0x03D2F870 BL 0x3D2EDD0
	0x03D2F874 LDR W8, [X31 + 0x94]
	0x03D2F878 CBNZ W8, 0x3D2F9E4
	0x03D2F87C LDR W8, [X22 + 0x30]
	0x03D2F880 UBFM W27, W8, 0x1F, 0x1E
	0x03D2F884 STR W27, [X22 + 0x30]
	0x03D2F888 ADRP X8, 0x3C4000
	0x03D2F88C LDR X8, [X8 + 0x5A8]
	0x03D2F890 LDR X0, [X8]
	0x03D2F894 LDR W8, [X0 + 0xE0]
	0x03D2F898 CBNZ W8, 0x3D2F8A0
	0x03D2F89C BL 0x1C16DFC
	0x03D2F8A0 UBFM W1, W24, 0x1F, 0x1E
	0x03D2F8A4 MOV W0, W27
	0x03D2F8A8 MOV X2, X31
	0x03D2F8AC BL 0x337EE48
	0x03D2F8B0 LDR W1, [X22 + 0xA8]
	0x03D2F8B4 MOV X2, X31
	0x03D2F8B8 STR W0, [X22 + 0x30]
	0x03D2F8BC BL 0x337EEEC
	0x03D2F8C0 LDR V0, [X22 + 0x38]
	0x03D2F8C4 UCVTF S1, W0
	0x03D2F8C8 FMOV S2, 0.5
	0x03D2F8CC STR W0, [X22 + 0x30]
	0x03D2F8D0 FMUL S0, S0, S1
	0x03D2F8D4 FADD S0, S0, S2
	0x03D2F8D8 FCVTZS W8, S0
	0x03D2F8DC FCVTZU W9, S0
	0x03D2F8E0 FCMP S0, 0x0
	0x03D2F8E4 CSEL W0, W8, W9, MI
	0x03D2F8E8 UBFM W1, W23, 0x1F, 0x1E
	0x03D2F8EC MOV X2, X31
	0x03D2F8F0 BL 0x337EE48
	0x03D2F8F4 MOV W27, W0
	0x03D2F8F8 MOV X21, X20
	0x03D2F8FC CBZ X25, 0x3D2F910
	0x03D2F900 LDR X8, [X25 + 0x28]
	0x03D2F904 CMP X8, 0x0
	0x03D2F908 CSET W25, EQ
	0x03D2F90C B 0x3D2F914
	0x03D2F910 MOVZ W25, 0x1
	0x03D2F914 LDR X0, [X21]
	0x03D2F918 MOV X20, X28
	0x03D2F91C LDR W8, [X0 + 0xE0]
	0x03D2F920 CBNZ W8, 0x3D2F928
	0x03D2F924 BL 0x1C16DFC
	0x03D2F928 MOV W0, W25
	0x03D2F92C MOV X1, X31
	0x03D2F930 BL 0x3C06E58
	0x03D2F934 ADRP X8, 0x435000
	0x03D2F938 LDR W28, [X22 + 0x30]
	0x03D2F93C LDRB W29, [X22 + 0x10]
	0x03D2F940 LDR X8, [X8 + 0xEB0]
	0x03D2F944 LDR X0, [X8]
	0x03D2F948 BL 0x1C16F10
	0x03D2F94C MOVZ W3, 0x4
	0x03D2F950 MOV W1, W28
	0x03D2F954 MOV W2, W27
	0x03D2F958 MOV W4, W29
	0x03D2F95C MOV X25, X0
	0x03D2F960 BL 0x3D30A64
	0x03D2F964 CBZ X25, 0x3D2FBEC
	0x03D2F968 LDR X8, [X22 + 0x28]
	0x03D2F96C STR X8, [X25 + 0x28]
	0x03D2F970 STR X25, [X22 + 0x28]
	0x03D2F974 LDR X8, [X25 + 0x18]
	0x03D2F978 CBZ X8, 0x3D2FBEC
	0x03D2F97C LDR X0, [X8 + 0x40]
	0x03D2F980 CBZ X0, 0x3D2FBEC
	0x03D2F984 AND W2, W26, 0x1
	0x03D2F988 ADD X8, X31, 0xA8
	0x03D2F98C MOV W1, W24
	0x03D2F990 MOV X28, X20
	0x03D2F994 BL 0x3D308B4
	0x03D2F998 LDR X8, [X25 + 0x20]
	0x03D2F99C CBZ X8, 0x3D2FBEC
	0x03D2F9A0 LDR X0, [X8 + 0x40]
	0x03D2F9A4 CBZ X0, 0x3D2FBEC
	0x03D2F9A8 AND W2, W26, 0x1
	0x03D2F9AC ADD X8, X31, 0x90
	0x03D2F9B0 MOV W1, W23
	0x03D2F9B4 MOV X20, X21
	0x03D2F9B8 BL 0x3D308B4
	0x03D2F9BC LDR W8, [X31 + 0xAC]
	0x03D2F9C0 MOV X1, X31
	0x03D2F9C4 CMP W8, 0x0
	0x03D2F9C8 CSET W0, NE
	0x03D2F9CC BL 0x3C06E58

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0x6B9000
	015 Move X25, 0x436000
	016 Move W8, [X23+2830]
	017 Move X25, [X25+3480]
	018 Move W22, W3
	019 Move W21, W2
	020 Move W20, W1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {97}
	026 Move X0, 0x436000
	027 Move X0, [X0+3488]
	028 Call 0x1C17CF4
	029 Move X0, 0x3C5000
	030 Move X0, [X0+2600]
	031 Call 0x1C17CF4
	032 Move X0, 0x436000
	033 Move X0, [X0+3496]
	034 Call 0x1C17CF4
	035 Move X0, 0x436000
	036 Move X0, [X0+3504]
	037 Call 0x1C17CF4
	038 Move X0, 0x436000
	039 Move X0, [X0+3512]
	040 Call 0x1C17CF4
	041 Move X0, 0x436000
	042 Move X0, [X0+3520]
	043 Call 0x1C17CF4
	044 Move X0, 0x436000
	045 Move X0, [X0+3528]
	046 Call 0x1C17CF4
	047 Move X0, 0x436000
	048 Move X0, [X0+3536]
	049 Call 0x1C17CF4
	050 Move X0, 0x436000
	051 Move X0, [X0+3544]
	052 Call 0x1C17CF4
	053 Move X0, 0x436000
	054 Move X0, [X0+3552]
	055 Call 0x1C17CF4
	056 Move X0, 0x436000
	057 Move X0, [X0+3560]
	058 Call 0x1C17CF4
	059 Move X0, 0x436000
	060 Move X0, [X0+3568]
	061 Call 0x1C17CF4
	062 Move X0, 0x436000
	063 Move X0, [X0+3576]
	064 Call 0x1C17CF4
	065 Move X0, 0x436000
	066 Move X0, [X0+3584]
	067 Call 0x1C17CF4
	068 Move X0, 0x436000
	069 Move X0, [X0+3592]
	070 Call 0x1C17CF4
	071 Move X0, 0x436000
	072 Move X0, [X0+3600]
	073 Call 0x1C17CF4
	074 Move X0, 0x3C5000
	075 Move X0, [X0+1448]
	076 Call 0x1C17CF4
	077 Move X0, 0x436000
	078 Move X0, [X0+2816]
	079 Call 0x1C17CF4
	080 Move X0, 0x436000
	081 Move X0, [X0+3608]
	082 Call 0x1C17CF4
	083 Move X0, 0x436000
	084 Move X0, [X0+3616]
	085 Call 0x1C17CF4
	086 Move X0, 0x436000
	087 Move X0, [X0+3480]
	088 Call 0x1C17CF4
	089 Move X0, 0x436000
	090 Move X0, [X0+1784]
	091 Call 0x1C17CF4
	092 Move X0, 0x3EE000
	093 Move X0, [X0+2080]
	094 Call 0x1C17CF4
	095 Move W8, 1
	096 Move [X23+2830], W8
	097 Move W8, 1
	098 Move [X19+100], W8
	099 Move X0, [X25]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X25]
	105 Move X8, [X0+184]
	106 Move X23, [X8+8]
	107 Compare X23, 0
	108 JumpIfNotEqual {130}
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X25]
	114 Move X9, 0x436000
	115 Move X8, [X0+184]
	116 Move X9, [X9+3504]
	117 Move X24, [X8]
	118 Move X0, [X9]
	119 Call 0x1C17F10
	120 Move X8, 0x436000
	121 Move X8, [X8+3608]
	122 Move X1, X24
	123 Move X3, X31
	124 Move X23, X0
	125 Move X2, [X8]
	126 Call Func`1<Object>..ctor, X0, X1, X2
	127 Move X0, [X25]
	128 Move X8, [X0+184]
	129 Move [X8+8], X23
	130 Move W8, [X0+224]
	131 And W27, W22, 1
	132 Move [X31+8], W21
	133 Move [X31+12], W20
	134 Compare W8, 0
	135 JumpIfNotEqual {138}
	136 Call 0x1C17DFC
	137 Move X0, [X25]
	138 Move X8, [X0+184]
	139 Move X20, 0x436000
	140 Move X21, 0x436000
	141 Move X29, 0x436000
	142 Move X28, 0x436000
	143 Move X26, 0x436000
	144 Move X20, [X20+3520]
	145 Move X22, [X8+16]
	146 Move X21, [X21+3512]
	147 Move X29, [X29+3496]
	148 Move X28, [X28+2816]
	149 Move X26, [X26+1784]
	150 Compare X22, 0
	151 JumpIfNotEqual {173}
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {157}
	155 Call 0x1C17DFC
	156 Move X0, [X25]
	157 Move X9, 0x436000
	158 Move X8, [X0+184]
	159 Move X9, [X9+3488]
	160 Move X24, [X8]
	161 Move X0, [X9]
	162 Call 0x1C17F10
	163 Move X8, 0x436000
	164 Move X8, [X8+3616]
	165 Move X1, X24
	166 Move X3, X31
	167 Move X22, X0
	168 Move X2, [X8]
	169 Call Action`1<Object>..ctor, X0, X1, X2
	170 Move X8, [X25]
	171 Move X8, [X8+184]
	172 Move [X8+16], X22
	173 Move X0, [X20]
	174 Move X25, 0x3C5000
	175 Move X25, [X25+2600]
	176 Call 0x1C17F10
	177 Move X4, [X21]
	178 Move W3, 0x2710
	179 Move X1, X23
	180 Move X2, X22
	181 Move X24, X0
	182 Call 0x2EF1D58, X0, X1, X2, X3
	183 Move [X19+144], X24
	184 Move X0, [X29]
	185 Call 0x1C17F10
	186 Move X22, X0
	187 Call DrawParams..ctor, X0
	188 Move [X19+152], X22
	189 Move X0, [X28]
	190 Call 0x1C17F10
	191 Move X22, X0
	192 Call TextureSlotManager..ctor, X0
	193 Move W8, 0xFFFF
	194 Move X0, X19
	195 Move X1, X31
	196 Move [X19+160], X22
	197 Move [X19+168], W8
	198 Call Object..ctor, X0
	199 Move [X19+16], W27
	200 Move X0, [X26]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {206}
	204 Call 0x1C17DFC
	205 Move X0, [X26]
	206 Move X8, [X25]
	207 Move X9, [X0+184]
	208 Move W10, [X8+224]
	209 Move W20, [X9+13]
	210 Compare W10, 0
	211 JumpIfNotEqual {214}
	212 Move X0, X8
	213 Call 0x1C17DFC
	214 Move X22, 0x3C5000
	215 Move X22, [X22+1448]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 NotImplemented "Instruction CSET not yet implemented."
	218 Move X1, X31
	219 Call Debug.Assert, X0
	220 Move W0, 1
	221 Move X1, X31
	222 Call Debug.Assert, X0
	223 Move X0, [X26]
	224 Move X8, [X0+184]
	225 Move W9, [X8+8]
	226 Add W10, W9, 1
	227 Move [X8+8], W10
	228 Compare W9, 0
	229 JumpIfNotEqual {261}
	230 Move W9, [X0+224]
	231 Compare W9, 0
	232 JumpIfNotEqual {236}
	233 Call 0x1C17DFC
	234 Move X8, [X26]
	235 Move X8, [X8+184]
	236 Move W8, [X8+12]
	237 Compare W8, 0
	238 JumpIfNotEqual {261}
	239 Move W8, [X19+16]
	240 Compare W8, 0
	241 JumpIfNotEqual {261}
	242 Move X8, 0x3EE000
	243 Move X8, [X8+2080]
	244 Move X0, [X8]
	245 Move W8, [X0+224]
	246 Compare W8, 0
	247 JumpIfNotEqual {249}
	248 Call 0x1C17DFC
	249 Move W0, 1
	250 Move X1, X31
	251 Move W20, 1
	252 Call Utility.NotifyOfUIREvents, X0
	253 Move X0, [X26]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {259}
	257 Call 0x1C17DFC
	258 Move X0, [X26]
	259 Move X8, [X0+184]
	260 Move [X8+12], W20
	261 Move X0, [X22]
	262 Move X28, 0x436000
	263 Move X20, 0x436000
	264 Move X29, 0x436000
	265 Move W8, [X0+224]
	266 Move X28, [X28+3600]
	267 Move X20, [X20+3552]
	268 Move X29, [X29+3592]
	269 Compare W8, 0
	270 JumpIfNotEqual {272}
	271 Call 0x1C17DFC
	272 Move X22, 0x436000
	273 Move X23, 0x436000
	274 Move X24, 0x436000
	275 Move X25, 0x436000
	276 Move X26, 0x436000
	277 Move X27, 0x436000
	278 Move X22, [X22+3576]
	279 Move X23, [X23+3544]
	280 Move X24, [X24+3528]
	281 Move X25, [X25+3584]
	282 Move X26, [X26+3568]
	283 Move X27, [X27+3536]
	284 Move W21, [X31+12]
	285 Move W1, 2048
	286 Move X2, X31
	287 Move W0, W21
	288 Call Math.Max, X0, X1
	289 Move W8, [X31+8]
	290 NotImplemented "Instruction UCVTF not yet implemented."
	291 Move [X19+48], W0
	292 Move [X19+52], W0
	293 NotImplemented "Instruction UCVTF not yet implemented."
	294 NotImplemented "Instruction FDIV not yet implemented."
	295 Move S1, 2
	296 NotImplemented "Instruction FMAXNM not yet implemented."
	297 Move [X19+56], S0
	298 Move X0, [X28]
	299 Call 0x1C17F10
	300 Move X2, [X20]
	301 Move W1, 4
	302 Move X20, X0
	303 Move W28, 4
	304 Call List`1<Object>..ctor, X0, X1
	305 Move [X19+64], X20
	306 Move X0, [X29]
	307 Call 0x1C17F10
	308 Move X8, 0x436000
	309 Move X8, [X8+3560]
	310 Move W1, 4
	311 Move X20, X0
	312 Move X2, [X8]
	313 Call List`1<Object>..ctor, X0, X1
	314 Move [X19+72], X20
	315 Move X0, [X22]
	316 Move X20, [X19+64]
	317 Call 0x1C17F10
	318 Move X1, [X23]
	319 Move X21, X0
	320 Call List`1<AllocToFree>..ctor, X0
	321 Compare X20, 0
	322 JumpIfEqual {386}
	323 Move W10, [X20+28]
	324 Move X8, [X20+16]
	325 Move X9, [X24]
	326 Add W10, W10, 1
	327 Move [X20+28], W10
	328 Compare X8, 0
	329 JumpIfEqual {386}
	330 NotImplemented "Instruction LDRSW not yet implemented."
	331 Move W11, [X8+24]
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Add W9, W10, 1
	334 Add X8, X8, X10
	335 Move [X20+24], W9
	336 Move [X8+32], X21
	337 Move X8, [X9+32]
	338 Move X0, X20
	339 Move X1, X21
	340 Move X8, [X8+192]
	341 Move X2, [X8+112]
	342 Call List`1<Object>.AddWithResize, X0, X1
	343 Move X0, [X25]
	344 Move X20, [X19+72]
	345 Call 0x1C17F10
	346 Move X1, [X26]
	347 Move X21, X0
	348 Call List`1<AllocToUpdate>..ctor, X0
	349 Compare X20, 0
	350 JumpIfEqual {386}
	351 Move W10, [X20+28]
	352 Move X8, [X20+16]
	353 Move X9, [X27]
	354 Add W10, W10, 1
	355 Move [X20+28], W10
	356 Compare X8, 0
	357 JumpIfEqual {386}
	358 NotImplemented "Instruction LDRSW not yet implemented."
	359 Move W11, [X8+24]
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Add W9, W10, 1
	362 Add X8, X8, X10
	363 Move [X20+24], W9
	364 Move [X8+32], X21
	365 Move X8, [X9+32]
	366 Move X0, X20
	367 Move X1, X21
	368 Move X8, [X8+192]
	369 Move X2, [X8+112]
	370 Call List`1<Object>.AddWithResize, X0, X1
	371 Subtract W28, W28, 1
	372 Move X20, [X31+96]
	373 Move X19, [X31+104]
	374 Move X22, [X31+80]
	375 Move X21, [X31+88]
	376 Move X24, [X31+64]
	377 Move X23, [X31+72]
	378 Move X26, [X31+48]
	379 Move X25, [X31+56]
	380 Move X28, [X31+32]
	381 Move X27, [X31+40]
	382 Move X29, [X31+16]
	383 Move X30, [X31+24]
	384 Add X31, X31, 112
	385 Return 
	386 Call 0x1C17F20

Method: UnityEngine.Texture2D get_defaultShaderInfoTexFloat()

Disassembly:
	0x03D2BF00 LDR W8, [X0 + 0xE0]
	0x03D2BF04 LDR X21, [X21 + 0x760]
	0x03D2BF08 CBNZ W8, 0x3D2BF10
	0x03D2BF0C BL 0x1C16DFC
	0x03D2BF10 ORN W8, W31, W20, 0x0
	0x03D2BF14 UBFM W0, W8, 0x1F, 0x1F
	0x03D2BF18 MOV X1, X31
	0x03D2BF1C BL 0x3C06E58
	0x03D2BF20 LDR X0, [X21]
	0x03D2BF24 ADD X21, X19, 0x48
	0x03D2BF28 LDR W8, [X0 + 0xE0]
	0x03D2BF2C CBNZ W8, 0x3D2BF34
	0x03D2BF30 BL 0x1C16DFC
	0x03D2BF34 MOV X0, X21
	0x03D2BF38 MOV X1, X20
	0x03D2BF3C BL 0x3D2A8FC
	0x03D2BF40 LDR X8, [X19]
	0x03D2BF44 CBZ X8, 0x3D2BF80
	0x03D2BF48 LDR X9, [X8]
	0x03D2BF4C LDP X20, X19, [X31 + 0x20]
	0x03D2BF50 LDP X22, X21, [X31 + 0x10]
	0x03D2BF54 LDR X30, [X31 + 0x8]
	0x03D2BF58 LDP X4, X3, [X9 + 0x1A8]
	0x03D2BF5C MOV X1, X0
	0x03D2BF60 UBFM X2, X0, 0x20, 0x3F
	0x03D2BF64 FMOV S0, 1
	0x03D2BF68 FMOV S1, 1
	0x03D2BF6C FMOV S2, 1
	0x03D2BF70 MOV X0, X8
	0x03D2BF74 MOV V3.16B, V8.16B
	0x03D2BF78 LDR V8, [X31], #0x30
	0x03D2BF7C BR X4
	0x03D2BF80 BL 0x1C16F20
	0x03D2BF84 STP D11, D10, [X31 - 0x50]!
	0x03D2BF88 STP D9, D8, [X31 + 0x10]
	0x03D2BF8C STP X30, X23, [X31 + 0x20]
	0x03D2BF90 STP X22, X21, [X31 + 0x30]
	0x03D2BF94 STP X20, X19, [X31 + 0x40]
	0x03D2BF98 ADRP X23, 0x6BC000
	0x03D2BF9C ADRP X22, 0x439000
	0x03D2BFA0 LDRB W8, [X23 + 0xAF0]
	0x03D2BFA4 LDR X22, [X22 + 0x9C8]
	0x03D2BFA8 MOV W19, W2
	0x03D2BFAC MOV V8.16B, V3.16B
	0x03D2BFB0 MOV V9.16B, V2.16B
	0x03D2BFB4 MOV V10.16B, V1.16B
	0x03D2BFB8 MOV V11.16B, V0.16B
	0x03D2BFBC MOV X21, X1
	0x03D2BFC0 MOV X20, X0
	0x03D2BFC4 TBNZ X8, 0x0, 0x3D2BFF4
	0x03D2BFC8 ADRP X0, 0x439000
	0x03D2BFCC LDR X0, [X0 + 0x9C8]
	0x03D2BFD0 BL 0x1C16CF4
	0x03D2BFD4 ADRP X0, 0x3C8000
	0x03D2BFD8 LDR X0, [X0 + 0xA28]
	0x03D2BFDC BL 0x1C16CF4
	0x03D2BFE0 ADRP X0, 0x439000
	0x03D2BFE4 LDR X0, [X0 + 0x760]
	0x03D2BFE8 BL 0x1C16CF4
	0x03D2BFEC MOVZ W8, 0x1
	0x03D2BFF0 STRB W8, [X23 + 0xAF0]
	0x03D2BFF4 LDR X0, [X22]
	0x03D2BFF8 ADRP X22, 0x3C8000
	0x03D2BFFC LDR W8, [X0 + 0xE0]
	0x03D2C000 B 0x3EB19FC
	0x03D2C004 CBNZ W8, 0x3D2C00C
	0x03D2C008 BL 0x1C16DFC
	0x03D2C00C LDR X0, [X22]
	0x03D2C010 ADRP X22, 0x438000
	0x03D2C014 LDR W8, [X0 + 0xE0]
	0x03D2C018 LDR X22, [X22 + 0x760]
	0x03D2C01C CBNZ W8, 0x3D2C024
	0x03D2C020 BL 0x1C16DFC
	0x03D2C024 ORN W8, W31, W21, 0x0
	0x03D2C028 UBFM W0, W8, 0x1F, 0x1F
	0x03D2C02C MOV X1, X31
	0x03D2C030 BL 0x3C06E58
	0x03D2C034 LDR X0, [X22]
	0x03D2C038 ADD X22, X20, 0x68
	0x03D2C03C LDR W8, [X0 + 0xE0]
	0x03D2C040 CBNZ W8, 0x3D2C048
	0x03D2C044 BL 0x1C16DFC
	0x03D2C048 MOV X0, X22
	0x03D2C04C MOV X1, X21
	0x03D2C050 BL 0x3D2A8FC
	0x03D2C054 MOV X21, X0
	0x03D2C058 UBFM X22, X0, 0x20, 0x3F
	0x03D2C05C MOV X0, X31
	0x03D2C060 BL 0x3C113A8
	0x03D2C064 LDR X20, [X20]
	0x03D2C068 CMP W0, 0x1
	0x03D2C06C B.NE 0x3D2C0C8
	0x03D2C070 TBNZ X19, 0x0, 0x3D2C0C8
	0x03D2C074 MOV V0.16B, V11.16B
	0x03D2C078 MOV X0, X31
	0x03D2C07C BL 0x3C25A10
	0x03D2C080 MOV V11.16B, V0.16B
	0x03D2C084 MOV V0.16B, V10.16B
	0x03D2C088 MOV X0, X31
	0x03D2C08C BL 0x3C25A10
	0x03D2C090 MOV V10.16B, V0.16B
	0x03D2C094 MOV V0.16B, V9.16B
	0x03D2C098 MOV X0, X31
	0x03D2C09C BL 0x3C25A10
	0x03D2C0A0 CBZ X20, 0x3D2C108
	0x03D2C0A4 LDR X8, [X20]
	0x03D2C0A8 MOV V2.16B, V0.16B
	0x03D2C0AC MOV X0, X20
	0x03D2C0B0 MOV W1, W21
	0x03D2C0B4 LDP X4, X3, [X8 + 0x1A8]
	0x03D2C0B8 MOV W2, W22
	0x03D2C0BC MOV V0.16B, V11.16B
	0x03D2C0C0 MOV V1.16B, V10.16B
	0x03D2C0C4 B 0x3D2C0EC
	0x03D2C0C8 CBZ X20, 0x3D2C108
	0x03D2C0CC LDR X8, [X20]
	0x03D2C0D0 MOV X0, X20
	0x03D2C0D4 MOV W1, W21
	0x03D2C0D8 MOV W2, W22
	0x03D2C0DC LDP X4, X3, [X8 + 0x1A8]
	0x03D2C0E0 MOV V0.16B, V11.16B
	0x03D2C0E4 MOV V1.16B, V10.16B
	0x03D2C0E8 MOV V2.16B, V9.16B
	0x03D2C0EC MOV V3.16B, V8.16B
	0x03D2C0F0 LDP X20, X19, [X31 + 0x40]
	0x03D2C0F4 LDP X22, X21, [X31 + 0x30]
	0x03D2C0F8 LDP X30, X23, [X31 + 0x20]
	0x03D2C0FC LDP D9, D8, [X31 + 0x10]
	0x03D2C100 LDP D11, D10, [X31], #0x50
	0x03D2C104 BR X4
	0x03D2C108 BL 0x1C16F20
	0x03D2C10C STP D13, D12, [X31 - 0x70]!
	0x03D2C110 STP D11, D10, [X31 + 0x10]
	0x03D2C114 STP D9, D8, [X31 + 0x20]
	0x03D2C118 STR X30, [X31 + 0x30]
	0x03D2C11C STP X24, X23, [X31 + 0x40]
	0x03D2C120 STP X22, X21, [X31 + 0x50]
	0x03D2C124 STP X20, X19, [X31 + 0x60]
	0x03D2C128 ADRP X24, 0x6BB000
	0x03D2C12C ADRP X22, 0x438000
	0x03D2C130 LDRB W8, [X24 + 0xAF1]
	0x03D2C134 LDR X22, [X22 + 0x9C8]
	0x03D2C138 MOV W23, W3
	0x03D2C13C MOV X20, X2
	0x03D2C140 MOV X21, X1
	0x03D2C144 MOV X19, X0
	0x03D2C148 TBNZ X8, 0x0, 0x3D2C178
	0x03D2C14C ADRP X0, 0x438000
	0x03D2C150 LDR X0, [X0 + 0x9C8]
	0x03D2C154 BL 0x1C16CF4
	0x03D2C158 ADRP X0, 0x3C7000
	0x03D2C15C LDR X0, [X0 + 0xA28]
	0x03D2C160 BL 0x1C16CF4
	0x03D2C164 ADRP X0, 0x438000
	0x03D2C168 LDR X0, [X0 + 0x760]
	0x03D2C16C BL 0x1C16CF4
	0x03D2C170 MOVZ W8, 0x1
	0x03D2C174 STRB W8, [X24 + 0xAF1]
	0x03D2C178 LDR X0, [X22]
	0x03D2C17C ADRP X22, 0x3C7000
	0x03D2C180 LDR W8, [X0 + 0xE0]
	0x03D2C184 LDR X22, [X22 + 0xA28]
	0x03D2C188 CBNZ W8, 0x3D2C190
	0x03D2C18C BL 0x1C16DFC
	0x03D2C190 LDR X0, [X22]
	0x03D2C194 ADRP X22, 0x438000
	0x03D2C198 LDR W8, [X0 + 0xE0]
	0x03D2C19C LDR X22, [X22 + 0x760]
	0x03D2C1A0 CBNZ W8, 0x3D2C1A8
	0x03D2C1A4 BL 0x1C16DFC
	0x03D2C1A8 ORN W8, W31, W21, 0x0
	0x03D2C1AC UBFM W0, W8, 0x1F, 0x1F
	0x03D2C1B0 MOV X1, X31
	0x03D2C1B4 BL 0x3C06E58
	0x03D2C1B8 LDR X0, [X22]
	0x03D2C1BC ADD X22, X19, 0x88
	0x03D2C1C0 LDR W8, [X0 + 0xE0]
	0x03D2C1C4 CBNZ W8, 0x3D2C1CC
	0x03D2C1C8 BL 0x1C16DFC
	0x03D2C1CC MOV X0, X22
	0x03D2C1D0 MOV X1, X21
	0x03D2C1D4 BL 0x3D2A8FC
	0x03D2C1D8 LDP S13, S8, [X20 + 0x34]
	0x03D2C1DC LDR V9, [X20 + 0x3C]
	0x03D2C1E0 LDR V10, [X20 + 0x20]
	0x03D2C1E4 MOV X21, X0
	0x03D2C1E8 UBFM X22, X0, 0x20, 0x3F
	0x03D2C1EC MOV X0, X31
	0x03D2C1F0 BL 0x3C113A8
	0x03D2C1F4 LDR X24, [X19]
	0x03D2C1F8 CMP W0, 0x1
	0x03D2C1FC B.NE 0x3D2C32C
	0x03D2C200 TBNZ X23, 0x0, 0x3D2C32C
	0x03D2C204 LDR V0, [X20]
	0x03D2C208 MOV X0, X31
	0x03D2C20C BL 0x3C25A10
	0x03D2C210 LDR V1, [X20 + 0x4]
	0x03D2C214 MOV V11.16B, V0.16B
	0x03D2C218 MOV X0, X31
	0x03D2C21C MOV V0.16B, V1.16B
	0x03D2C220 BL 0x3C25A10
	0x03D2C224 LDR V1, [X20 + 0x8]
	0x03D2C228 MOV V12.16B, V0.16B
	0x03D2C22C MOV X0, X31
	0x03D2C230 MOV V0.16B, V1.16B
	0x03D2C234 BL 0x3C25A10
	0x03D2C238 CBZ X24, 0x3D2C3E0
	0x03D2C23C LDR X8, [X24]
	0x03D2C240 LDR V3, [X20 + 0xC]
	0x03D2C244 MOV V2.16B, V0.16B
	0x03D2C248 MOV X0, X24
	0x03D2C24C LDP X9, X3, [X8 + 0x1A8]
	0x03D2C250 MOV W1, W21
	0x03D2C254 MOV W2, W22
	0x03D2C258 MOV V0.16B, V11.16B
	0x03D2C25C MOV V1.16B, V12.16B
	0x03D2C260 BLR X9
	0x03D2C264 LDR V0, [X20 + 0x10]
	0x03D2C268 LDR X23, [X19]
	0x03D2C26C MOV X0, X31
	0x03D2C270 BL 0x3C25A10
	0x03D2C274 LDR V1, [X20 + 0x14]
	0x03D2C278 MOV V11.16B, V0.16B
	0x03D2C27C MOV X0, X31
	0x03D2C280 MOV V0.16B, V1.16B
	0x03D2C284 BL 0x3C25A10
	0x03D2C288 LDR V1, [X20 + 0x18]
	0x03D2C28C MOV V12.16B, V0.16B
	0x03D2C290 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x6BD000
	006 Move X20, 0x43A000
	007 Move W8, [X19+2831]
	008 Move X20, [X20+1784]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x3C9000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move X0, 0x3F3000
	017 Move X0, [X0+592]
	018 Call 0x1C17CF4
	019 Move X0, 0x43A000
	020 Move X0, [X0+1888]
	021 Call 0x1C17CF4
	022 Move X0, 0x43A000
	023 Move X0, [X0+1784]
	024 Call 0x1C17CF4
	025 Move X0, 0x43A000
	026 Move X0, [X0+2976]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+2831], W8
	030 Move X0, [X20]
	031 Move X19, 0x3C9000
	032 Move W8, [X0+224]
	033 Move X19, [X19+1432]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X8, [X19]
	039 Move X9, [X0+184]
	040 Move W10, [X8+224]
	041 Move X19, [X9+80]
	042 Compare W10, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X0, X19
	047 Move X1, X31
	048 Move X2, X31
	049 Call Object.op_Equality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {272}
	054 Move X8, 0x3F3000
	055 Move X8, [X8+592]
	056 Move X0, [X8]
	057 Call 0x1C17F10
	058 Move W1, 64
	059 Move W2, 64
	060 Move W3, 20
	061 Move W4, W31
	062 Move X5, X31
	063 Move X19, X0
	064 Call Texture2D..ctor, X0, X1, X2, X3, X4
	065 Move X0, [X20]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X20]
	071 Move X8, [X0+184]
	072 Move [X8+80], X19
	073 Compare X19, 0
	074 JumpIfEqual {285}
	075 Move X8, 0x43A000
	076 Move X8, [X8+2976]
	077 Move X0, X19
	078 Move X2, X31
	079 Move X1, [X8]
	080 Call Object.set_name, X0, X1
	081 Move X8, [X20]
	082 Move X8, [X8+184]
	083 Move X0, [X8+80]
	084 Compare X0, 0
	085 JumpIfEqual {285}
	086 Move W1, 61
	087 Move X2, X31
	088 Call Object.set_hideFlags, X0, X1
	089 Move X8, [X20]
	090 Move X8, [X8+184]
	091 Move X0, [X8+80]
	092 Compare X0, 0
	093 JumpIfEqual {285}
	094 Move W1, W31
	095 Move X2, X31
	096 Call Texture.set_filterMode, X0, X1
	097 Move X21, 0x439000
	098 Move X8, [X20]
	099 Move X21, [X21+1888]
	100 Move X8, [X8+184]
	101 Move X0, [X21]
	102 Move X19, [X8+80]
	103 Move W9, [X0+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {108}
	106 Call 0x1C17DFC
	107 Move X0, [X21]
	108 Compare X19, 0
	109 JumpIfEqual {285}
	110 Move X8, [X0+184]
	111 Move X0, X19
	112 Move X3, X31
	113 Move X1, [X8]
	114 Move S0, [X8+104]
	115 Move S1, [X8+108]
	116 Move S2, [X8+112]
	117 Move S3, [X8+116]
	118 Move X2, X1
	119 ShiftRight X2, 32
	120 And X2, X2, 0x7FFFFFFF
	121 Call Texture2D.SetPixel, X0, X1, X2, X3
	122 Move X8, [X20]
	123 Move X8, [X8+184]
	124 Move X0, [X8+80]
	125 Compare X0, 0
	126 JumpIfEqual {285}
	127 Move X8, [X21]
	128 Move X3, X31
	129 Move X8, [X8+184]
	130 Move X1, [X8]
	131 Move S0, [X8+120]
	132 Move S1, [X8+124]
	133 Move S2, [X8+128]
	134 Move S3, [X8+132]
	135 Move X8, X1
	136 ShiftRight X8, 32
	137 And X8, X8, 0x7FFFFFFF
	138 Add W2, W8, 1
	139 Call Texture2D.SetPixel, X0, X1, X2, X3
	140 Move X8, [X20]
	141 Move X8, [X8+184]
	142 Move X0, [X8+80]
	143 Compare X0, 0
	144 JumpIfEqual {285}
	145 Move X8, [X21]
	146 Move X3, X31
	147 Move X8, [X8+184]
	148 Move X1, [X8]
	149 Move S0, [X8+136]
	150 Move S1, [X8+140]
	151 Move S2, [X8+144]
	152 Move S3, [X8+148]
	153 Move X8, X1
	154 ShiftRight X8, 32
	155 And X8, X8, 0x7FFFFFFF
	156 Add W2, W8, 2
	157 Call Texture2D.SetPixel, X0, X1, X2, X3
	158 Move X8, [X20]
	159 Move X8, [X8+184]
	160 Move X0, [X8+80]
	161 Compare X0, 0
	162 JumpIfEqual {285}
	163 Move X8, [X21]
	164 Move X3, X31
	165 Move X8, [X8+184]
	166 Move X1, [X8+8]
	167 Move S0, [X8+152]
	168 Move S1, [X8+156]
	169 Move S2, [X8+160]
	170 Move S3, [X8+164]
	171 Move X2, X1
	172 ShiftRight X2, 32
	173 And X2, X2, 0x7FFFFFFF
	174 Call Texture2D.SetPixel, X0, X1, X2, X3
	175 Move X8, [X20]
	176 Move X8, [X8+184]
	177 Move X0, [X8+80]
	178 Compare X0, 0
	179 JumpIfEqual {285}
	180 Move X8, [X21]
	181 Move X3, X31
	182 Move X8, [X8+184]
	183 Move X1, [X8+16]
	184 Move S0, [X8+168]
	185 Move S1, [X8+172]
	186 Move S2, [X8+176]
	187 Move S3, [X8+180]
	188 Move X2, X1
	189 ShiftRight X2, 32
	190 And X2, X2, 0x7FFFFFFF
	191 Call Texture2D.SetPixel, X0, X1, X2, X3
	192 Move X8, [X20]
	193 Move X8, [X8+184]
	194 Move X0, [X8+80]
	195 Compare X0, 0
	196 JumpIfEqual {285}
	197 Move X8, [X21]
	198 Move S0, 1
	199 Move S1, 1
	200 Move S2, 1
	201 Move X8, [X8+184]
	202 Move S3, 1
	203 Move X3, X31
	204 Move X1, [X8+32]
	205 Move X2, X1
	206 ShiftRight X2, 32
	207 And X2, X2, 0x7FFFFFFF
	208 Call Texture2D.SetPixel, X0, X1, X2, X3
	209 Move X8, [X20]
	210 Move X8, [X8+184]
	211 Move X0, [X8+80]
	212 Compare X0, 0
	213 JumpIfEqual {285}
	214 Move X8, [X21]
	215 Move S0, W31
	216 Move S1, W31
	217 Move S2, W31
	218 Move X8, [X8+184]
	219 Move S3, W31
	220 Move X3, X31
	221 Move X1, [X8+32]
	222 Move X8, X1
	223 ShiftRight X8, 32
	224 And X8, X8, 0x7FFFFFFF
	225 Add W2, W8, 1
	226 Call Texture2D.SetPixel, X0, X1, X2, X3
	227 Move X8, [X20]
	228 Move X8, [X8+184]
	229 Move X0, [X8+80]
	230 Compare X0, 0
	231 JumpIfEqual {285}
	232 Move X8, [X21]
	233 Move S0, W31
	234 Move S1, W31
	235 Move S2, W31
	236 Move X8, [X8+184]
	237 Move S3, W31
	238 Move X3, X31
	239 Move X1, [X8+32]
	240 Move X8, X1
	241 ShiftRight X8, 32
	242 And X8, X8, 0x7FFFFFFF
	243 Add W2, W8, 2
	244 Call Texture2D.SetPixel, X0, X1, X2, X3
	245 Move X8, [X20]
	246 Move X8, [X8+184]
	247 Move X0, [X8+80]
	248 Compare X0, 0
	249 JumpIfEqual {285}
	250 Move X8, [X21]
	251 Move S0, W31
	252 Move S1, W31
	253 Move S2, W31
	254 Move X8, [X8+184]
	255 Move S3, W31
	256 Move X3, X31
	257 Move X1, [X8+32]
	258 Move X8, X1
	259 ShiftRight X8, 32
	260 And X8, X8, 0x7FFFFFFF
	261 Add W2, W8, 3
	262 Call Texture2D.SetPixel, X0, X1, X2, X3
	263 Move X8, [X20]
	264 Move X8, [X8+184]
	265 Move X0, [X8+80]
	266 Compare X0, 0
	267 JumpIfEqual {285}
	268 Move W2, 1
	269 Move W1, W31
	270 Move X3, X31
	271 Call Texture2D.Apply, X0, X1, X2
	272 Move X0, [X20]
	273 Move W8, [X0+224]
	274 Compare W8, 0
	275 JumpIfNotEqual {278}
	276 Call 0x1C17DFC
	277 Move X0, [X20]
	278 Move X8, [X0+184]
	279 Move X20, [X31+16]
	280 Move X19, [X31+24]
	281 Move X0, [X8+80]
	282 Move X30, [X31+32]
	283 Move X21, [X31+40]
	284 Return X0
	285 Call 0x1C17F20

Method: UnityEngine.Texture2D get_defaultShaderInfoTexARGB8()

Disassembly:
	0x03D2BC34 BL 0x3C280A0
	0x03D2BC38 CBZ X19, 0x3D2BD24
	0x03D2BC3C LDR X8, [X19]
	0x03D2BC40 ADD W2, W22, 0x2
	0x03D2BC44 MOV X0, X19
	0x03D2BC48 MOV W1, W21
	0x03D2BC4C LDP X4, X3, [X8 + 0x1A8]
	0x03D2BC50 LDP X20, X19, [X31 + 0x60]
	0x03D2BC54 LDP X22, X21, [X31 + 0x50]
	0x03D2BC58 LDP X30, X23, [X31 + 0x40]
	0x03D2BC5C LDP D9, D8, [X31 + 0x30]
	0x03D2BC60 LDP D11, D10, [X31 + 0x20]
	0x03D2BC64 LDP D13, D12, [X31 + 0x10]
	0x03D2BC68 LDP D15, D14, [X31], #0x70
	0x03D2BC6C BR X4
	0x03D2BC70 LDR X0, [X22]
	0x03D2BC74 LDR W8, [X0 + 0xE0]
	0x03D2BC78 CBNZ W8, 0x3D2BC80
	0x03D2BC7C BL 0x1C16DFC
	0x03D2BC80 MOV X0, X21
	0x03D2BC84 BL 0x3D2A94C
	0x03D2BC88 MOV W21, W0
	0x03D2BC8C MOV X0, X20
	0x03D2BC90 MOV W1, W31
	0x03D2BC94 MOV X2, X31
	0x03D2BC98 BL 0x3C280A0
	0x03D2BC9C MOVZ W1, 0x1
	0x03D2BCA0 MOV X0, X20
	0x03D2BCA4 MOV X2, X31
	0x03D2BCA8 MOV V8.16B, V0.16B
	0x03D2BCAC MOV V9.16B, V1.16B
	0x03D2BCB0 MOV V10.16B, V2.16B
	0x03D2BCB4 MOV V11.16B, V3.16B
	0x03D2BCB8 BL 0x3C280A0
	0x03D2BCBC MOVZ W1, 0x2
	0x03D2BCC0 MOV X0, X20
	0x03D2BCC4 MOV X2, X31
	0x03D2BCC8 MOV V12.16B, V0.16B
	0x03D2BCCC MOV V13.16B, V1.16B
	0x03D2BCD0 MOV V14.16B, V2.16B
	0x03D2BCD4 MOV V15.16B, V3.16B
	0x03D2BCD8 BL 0x3C280A0
	0x03D2BCDC LDR X8, [X19 + 0xB0]
	0x03D2BCE0 MOVZ W9, 0x30
	0x03D2BCE4 LDP X20, X19, [X31 + 0x60]
	0x03D2BCE8 LDP X30, X23, [X31 + 0x40]
	0x03D2BCEC NOP
	0x03D2BCF0 SMADDL X8, X21, X9, X8
	0x03D2BCF4 STP S8, S9, [X8]
	0x03D2BCF8 STP S10, S11, [X8 + 0x8]
	0x03D2BCFC STP S12, S13, [X8 + 0x10]
	0x03D2BD00 LDP X22, X21, [X31 + 0x50]
	0x03D2BD04 LDP D9, D8, [X31 + 0x30]
	0x03D2BD08 LDP D11, D10, [X31 + 0x20]
	0x03D2BD0C LDP D13, D12, [X31 + 0x10]
	0x03D2BD10 STP S14, S15, [X8 + 0x18]
	0x03D2BD14 STP S0, S1, [X8 + 0x20]
	0x03D2BD18 STP S2, S3, [X8 + 0x28]
	0x03D2BD1C LDP D15, D14, [X31], #0x70
	0x03D2BD20 RET
	0x03D2BD24 BL 0x1C16F20
	0x03D2BD28 STP D11, D10, [X31 - 0x50]!
	0x03D2BD2C STP D9, D8, [X31 + 0x10]
	0x03D2BD30 STR X30, [X31 + 0x20]
	0x03D2BD34 STP X22, X21, [X31 + 0x30]
	0x03D2BD38 STP X20, X19, [X31 + 0x40]
	0x03D2BD3C ADRP X22, 0x6BC000
	0x03D2BD40 ADRP X21, 0x439000
	0x03D2BD44 LDRB W8, [X22 + 0xAEE]
	0x03D2BD48 LDR X21, [X21 + 0x9C8]
	0x03D2BD4C MOV V8.16B, V3.16B
	0x03D2BD50 MOV V9.16B, V2.16B
	0x03D2BD54 MOV V10.16B, V1.16B
	0x03D2BD58 MOV V11.16B, V0.16B
	0x03D2BD5C MOV X20, X1
	0x03D2BD60 MOV X19, X0
	0x03D2BD64 TBNZ X8, 0x0, 0x3D2BD94
	0x03D2BD68 ADRP X0, 0x439000
	0x03D2BD6C LDR X0, [X0 + 0x9C8]
	0x03D2BD70 BL 0x1C16CF4
	0x03D2BD74 ADRP X0, 0x3C8000
	0x03D2BD78 LDR X0, [X0 + 0xA28]
	0x03D2BD7C BL 0x1C16CF4
	0x03D2BD80 ADRP X0, 0x439000
	0x03D2BD84 LDR X0, [X0 + 0x760]
	0x03D2BD88 BL 0x1C16CF4
	0x03D2BD8C MOVZ W8, 0x1
	0x03D2BD90 STRB W8, [X22 + 0xAEE]
	0x03D2BD94 LDR X0, [X21]
	0x03D2BD98 ADRP X21, 0x3C8000
	0x03D2BD9C LDR W8, [X0 + 0xE0]
	0x03D2BDA0 LDR X21, [X21 + 0xA28]
	0x03D2BDA4 CBNZ W8, 0x3D2BDAC
	0x03D2BDA8 BL 0x1C16DFC
	0x03D2BDAC LDR X0, [X21]
	0x03D2BDB0 LDR W8, [X0 + 0xE0]
	0x03D2BDB4 CBNZ W8, 0x3D2BDBC
	0x03D2BDB8 BL 0x1C16DFC
	0x03D2BDBC ADRP X21, 0x439000
	0x03D2BDC0 LDR X21, [X21 + 0x760]
	0x03D2BDC4 ORN W8, W31, W20, 0x0
	0x03D2BDC8 UBFM W0, W8, 0x1F, 0x1F
	0x03D2BDCC MOV X1, X31
	0x03D2BDD0 BL 0x3C06E58
	0x03D2BDD4 LDRB W8, [X19 + 0xA9]
	0x03D2BDD8 CBZ W8, 0x3D2BE40
	0x03D2BDDC LDR X0, [X21]
	0x03D2BDE0 ADD X21, X19, 0x28
	0x03D2BDE4 LDR W8, [X0 + 0xE0]
	0x03D2BDE8 CBNZ W8, 0x3D2BDF0
	0x03D2BDEC BL 0x1C16DFC
	0x03D2BDF0 MOV X0, X21
	0x03D2BDF4 MOV X1, X20
	0x03D2BDF8 BL 0x3D2A8FC
	0x03D2BDFC LDR X8, [X19]
	0x03D2BE00 CBZ X8, 0x3D2BE80
	0x03D2BE04 LDR X9, [X8]
	0x03D2BE08 MOV V2.16B, V9.16B
	0x03D2BE0C MOV V3.16B, V8.16B
	0x03D2BE10 LDP X20, X19, [X31 + 0x40]
	0x03D2BE14 LDP X4, X3, [X9 + 0x1A8]
	0x03D2BE18 LDP X22, X21, [X31 + 0x30]
	0x03D2BE1C LDR X30, [X31 + 0x20]
	0x03D2BE20 LDP D9, D8, [X31 + 0x10]
	0x03D2BE24 MOV X1, X0
	0x03D2BE28 UBFM X2, X0, 0x20, 0x3F
	0x03D2BE2C MOV X0, X8
	0x03D2BE30 MOV V0.16B, V11.16B
	0x03D2BE34 MOV V1.16B, V10.16B
	0x03D2BE38 LDP D11, D10, [X31], #0x50
	0x03D2BE3C BR X4
	0x03D2BE40 LDR X0, [X21]
	0x03D2BE44 LDR W8, [X0 + 0xE0]
	0x03D2BE48 CBNZ W8, 0x3D2BE50
	0x03D2BE4C BL 0x1C16DFC
	0x03D2BE50 MOV X0, X20
	0x03D2BE54 BL 0x3D2A94C
	0x03D2BE58 LDR X8, [X19 + 0xC0]
	0x03D2BE5C LDP X20, X19, [X31 + 0x40]
	0x03D2BE60 LDP X22, X21, [X31 + 0x30]
	0x03D2BE64 LDR X30, [X31 + 0x20]
	0x03D2BE68 ADD X8, X8, W0, 0x4, SXTW
	0x03D2BE6C STP S9, S8, [X8 + 0x8]
	0x03D2BE70 LDP D9, D8, [X31 + 0x10]
	0x03D2BE74 STP S11, S10, [X8]
	0x03D2BE78 LDP D11, D10, [X31], #0x50
	0x03D2BE7C RET
	0x03D2BE80 BL 0x1C16F20
	0x03D2BE84 STR D8, [X31 - 0x30]!
	0x03D2BE88 STR X30, [X31 + 0x8]
	0x03D2BE8C STP X22, X21, [X31 + 0x10]
	0x03D2BE90 STP X20, X19, [X31 + 0x20]
	0x03D2BE94 ADRP X22, 0x6BC000
	0x03D2BE98 ADRP X21, 0x439000
	0x03D2BE9C LDRB W8, [X22 + 0xAEF]
	0x03D2BEA0 LDR X21, [X21 + 0x9C8]
	0x03D2BEA4 MOV V8.16B, V0.16B
	0x03D2BEA8 MOV X20, X1
	0x03D2BEAC MOV X19, X0
	0x03D2BEB0 TBNZ X8, 0x0, 0x3D2BEE0
	0x03D2BEB4 ADRP X0, 0x439000
	0x03D2BEB8 LDR X0, [X0 + 0x9C8]
	0x03D2BEBC BL 0x1C16CF4
	0x03D2BEC0 ADRP X0, 0x3C8000
	0x03D2BEC4 LDR X0, [X0 + 0xA28]
	0x03D2BEC8 BL 0x1C16CF4
	0x03D2BECC ADRP X0, 0x439000
	0x03D2BED0 LDR X0, [X0 + 0x760]
	0x03D2BED4 BL 0x1C16CF4
	0x03D2BED8 MOVZ W8, 0x1
	0x03D2BEDC STRB W8, [X22 + 0xAEF]
	0x03D2BEE0 LDR X0, [X21]
	0x03D2BEE4 ADRP X21, 0x3C8000
	0x03D2BEE8 LDR W8, [X0 + 0xE0]
	0x03D2BEEC LDR X21, [X21 + 0xA28]
	0x03D2BEF0 CBNZ W8, 0x3D2BEF8
	0x03D2BEF4 BL 0x1C16DFC
	0x03D2BEF8 LDR X0, [X21]
	0x03D2BEFC ADRP X21, 0x439000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x6BD000
	006 Move X20, 0x43A000
	007 Move W8, [X19+2832]
	008 Move X20, [X20+1784]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x3C9000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move X0, 0x3F3000
	017 Move X0, [X0+592]
	018 Call 0x1C17CF4
	019 Move X0, 0x43A000
	020 Move X0, [X0+1888]
	021 Call 0x1C17CF4
	022 Move X0, 0x43A000
	023 Move X0, [X0+1784]
	024 Call 0x1C17CF4
	025 Move X0, 0x43A000
	026 Move X0, [X0+2968]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+2832], W8
	030 Move X0, [X20]
	031 Move X19, 0x3C9000
	032 Move W8, [X0+224]
	033 Move X19, [X19+1432]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X8, [X19]
	039 Move X9, [X0+184]
	040 Move W10, [X8+224]
	041 Move X19, [X9+88]
	042 Compare W10, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X0, X19
	047 Move X1, X31
	048 Move X2, X31
	049 Call Object.op_Equality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {202}
	054 Move X8, 0x3F3000
	055 Move X8, [X8+592]
	056 Move X0, [X8]
	057 Call 0x1C17F10
	058 Move W1, 64
	059 Move W2, 64
	060 Move W3, 4
	061 Move W4, W31
	062 Move X5, X31
	063 Move X19, X0
	064 Call Texture2D..ctor, X0, X1, X2, X3, X4
	065 Move X0, [X20]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X20]
	071 Move X8, [X0+184]
	072 Move [X8+88], X19
	073 Compare X19, 0
	074 JumpIfEqual {215}
	075 Move X8, 0x43A000
	076 Move X8, [X8+2968]
	077 Move X0, X19
	078 Move X2, X31
	079 Move X1, [X8]
	080 Call Object.set_name, X0, X1
	081 Move X8, [X20]
	082 Move X8, [X8+184]
	083 Move X0, [X8+88]
	084 Compare X0, 0
	085 JumpIfEqual {215}
	086 Move W1, 61
	087 Move X2, X31
	088 Call Object.set_hideFlags, X0, X1
	089 Move X8, [X20]
	090 Move X8, [X8+184]
	091 Move X0, [X8+88]
	092 Compare X0, 0
	093 JumpIfEqual {215}
	094 Move W1, W31
	095 Move X2, X31
	096 Call Texture.set_filterMode, X0, X1
	097 Move X21, 0x43A000
	098 Move X8, [X20]
	099 Move X21, [X21+1888]
	100 Move X8, [X8+184]
	101 Move X0, [X21]
	102 Move X19, [X8+88]
	103 Move W9, [X0+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {108}
	106 Call 0x1C17DFC
	107 Move X0, [X21]
	108 Compare X19, 0
	109 JumpIfEqual {215}
	110 Move X8, [X0+184]
	111 Move X0, X19
	112 Move X3, X31
	113 Move X1, [X8+16]
	114 Move S0, [X8+168]
	115 Move S1, [X8+172]
	116 Move S2, [X8+176]
	117 Move S3, [X8+180]
	118 Move X2, X1
	119 ShiftRight X2, 32
	120 And X2, X2, 0x7FFFFFFF
	121 Call Texture2D.SetPixel, X0, X1, X2, X3
	122 Move X8, [X20]
	123 Move X8, [X8+184]
	124 Move X0, [X8+88]
	125 Compare X0, 0
	126 JumpIfEqual {215}
	127 Move X8, [X21]
	128 Move S0, 1
	129 Move S1, 1
	130 Move S2, 1
	131 Move X8, [X8+184]
	132 Move S3, 1
	133 Move X3, X31
	134 Move X1, [X8+32]
	135 Move X2, X1
	136 ShiftRight X2, 32
	137 And X2, X2, 0x7FFFFFFF
	138 Call Texture2D.SetPixel, X0, X1, X2, X3
	139 Move X8, [X20]
	140 Move X8, [X8+184]
	141 Move X0, [X8+88]
	142 Compare X0, 0
	143 JumpIfEqual {215}
	144 Move X8, [X21]
	145 Move S0, W31
	146 Move S1, W31
	147 Move S2, W31
	148 Move X8, [X8+184]
	149 Move S3, W31
	150 Move X3, X31
	151 Move X1, [X8+32]
	152 Move X8, X1
	153 ShiftRight X8, 32
	154 And X8, X8, 0x7FFFFFFF
	155 Add W2, W8, 1
	156 Call Texture2D.SetPixel, X0, X1, X2, X3
	157 Move X8, [X20]
	158 Move X8, [X8+184]
	159 Move X0, [X8+88]
	160 Compare X0, 0
	161 JumpIfEqual {215}
	162 Move X8, [X21]
	163 Move S0, W31
	164 Move S1, W31
	165 Move S2, W31
	166 Move X8, [X8+184]
	167 Move S3, W31
	168 Move X3, X31
	169 Move X1, [X8+32]
	170 Move X8, X1
	171 ShiftRight X8, 32
	172 And X8, X8, 0x7FFFFFFF
	173 Add W2, W8, 2
	174 Call Texture2D.SetPixel, X0, X1, X2, X3
	175 Move X8, [X20]
	176 Move X8, [X8+184]
	177 Move X0, [X8+88]
	178 Compare X0, 0
	179 JumpIfEqual {215}
	180 Move X8, [X21]
	181 Move S0, W31
	182 Move S1, W31
	183 Move S2, W31
	184 Move X8, [X8+184]
	185 Move S3, W31
	186 Move X3, X31
	187 Move X1, [X8+32]
	188 Move X8, X1
	189 ShiftRight X8, 32
	190 And X8, X8, 0x7FFFFFFF
	191 Add W2, W8, 3
	192 Call Texture2D.SetPixel, X0, X1, X2, X3
	193 Move X8, [X20]
	194 Move X8, [X8+184]
	195 Move X0, [X8+88]
	196 Compare X0, 0
	197 JumpIfEqual {215}
	198 Move W2, 1
	199 Move W1, W31
	200 Move X3, X31
	201 Call Texture2D.Apply, X0, X1, X2
	202 Move X0, [X20]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {208}
	206 Call 0x1C17DFC
	207 Move X0, [X20]
	208 Move X8, [X0+184]
	209 Move X20, [X31+16]
	210 Move X19, [X31+24]
	211 Move X0, [X8+88]
	212 Move X30, [X31+32]
	213 Move X21, [X31+40]
	214 Return X0
	215 Call 0x1C17F20

Method: System.Boolean get_vertexTexturingIsAvailable()

Disassembly:
	0x03D2C50C CBZ W8, 0x3D2C524
	0x03D2C510 LDR X1, [X19]
	0x03D2C514 MOV X0, X20
	0x03D2C518 LDP X20, X19, [X31 + 0x10]
	0x03D2C51C LDP X30, X21, [X31], #0x20
	0x03D2C520 B 0x3D2A230
	0x03D2C524 MOV X0, X20
	0x03D2C528 MOV X1, X31
	0x03D2C52C BL 0x3D2A230
	0x03D2C530 ADRP X8, 0x438000
	0x03D2C534 LDR X8, [X8 + 0x760]
	0x03D2C538 MOV X21, X0
	0x03D2C53C LDR X8, [X8]
	0x03D2C540 LDR W9, [X8 + 0xE0]
	0x03D2C544 CBNZ W9, 0x3D2C550
	0x03D2C548 MOV X0, X8
	0x03D2C54C BL 0x1C16DFC
	0x03D2C550 MOV X0, X21
	0x03D2C554 BL 0x3D2A94C
	0x03D2C558 LDR W8, [X19 + 0xB8]
	0x03D2C55C CMP W0, W8
	0x03D2C560 B.LT 0x3D2C594
	0x03D2C564 MOV X0, X20
	0x03D2C568 MOV X1, X21
	0x03D2C56C BL 0x3D2A720
	0x03D2C570 ADRP X19, 0x438000
	0x03D2C574 LDR X19, [X19 + 0x9C8]
	0x03D2C578 LDR X0, [X19]
	0x03D2C57C LDR W8, [X0 + 0xE0]
	0x03D2C580 CBNZ W8, 0x3D2C58C
	0x03D2C584 BL 0x1C16DFC
	0x03D2C588 LDR X0, [X19]
	0x03D2C58C LDR X8, [X0 + 0xB8]
	0x03D2C590 LDR X21, [X8]
	0x03D2C594 LDP X20, X19, [X31 + 0x10]
	0x03D2C598 MOV X0, X21
	0x03D2C59C LDP X30, X21, [X31], #0x20
	0x03D2C5A0 RET
	0x03D2C5A4 STP X30, X21, [X31 - 0x20]!
	0x03D2C5A8 STP X20, X19, [X31 + 0x10]
	0x03D2C5AC ADRP X20, 0x6BB000
	0x03D2C5B0 LDRB W8, [X20 + 0xAE9]
	0x03D2C5B4 MOV X19, X0
	0x03D2C5B8 TBNZ X8, 0x0, 0x3D2C5DC
	0x03D2C5BC ADRP X0, 0x438000
	0x03D2C5C0 LDR X0, [X0 + 0x9C8]
	0x03D2C5C4 BL 0x1C16CF4
	0x03D2C5C8 ADRP X0, 0x438000
	0x03D2C5CC LDR X0, [X0 + 0x760]
	0x03D2C5D0 BL 0x1C16CF4
	0x03D2C5D4 MOVZ W8, 0x1
	0x03D2C5D8 STRB W8, [X20 + 0xAE9]
	0x03D2C5DC LDRB W8, [X19 + 0xA8]
	0x03D2C5E0 CBNZ W8, 0x3D2C604
	0x03D2C5E4 ADRP X8, 0x438000
	0x03D2C5E8 LDR X8, [X8 + 0x760]
	0x03D2C5EC LDR X0, [X8]
	0x03D2C5F0 LDR W8, [X0 + 0xE0]
	0x03D2C5F4 CBNZ W8, 0x3D2C5FC
	0x03D2C5F8 BL 0x1C16DFC
	0x03D2C5FC MOV X0, X19
	0x03D2C600 BL 0x3D2B6E8
	0x03D2C604 LDRB W8, [X19 + 0xA9]
	0x03D2C608 ADD X20, X19, 0x28
	0x03D2C60C CBZ W8, 0x3D2C624
	0x03D2C610 LDR X1, [X19]
	0x03D2C614 MOV X0, X20
	0x03D2C618 LDP X20, X19, [X31 + 0x10]
	0x03D2C61C LDP X30, X21, [X31], #0x20
	0x03D2C620 B 0x3D2A230
	0x03D2C624 MOV X0, X20
	0x03D2C628 MOV X1, X31
	0x03D2C62C BL 0x3D2A230
	0x03D2C630 ADRP X8, 0x438000
	0x03D2C634 LDR X8, [X8 + 0x760]
	0x03D2C638 MOV X21, X0
	0x03D2C63C LDR X8, [X8]
	0x03D2C640 LDR W9, [X8 + 0xE0]
	0x03D2C644 CBNZ W9, 0x3D2C650
	0x03D2C648 MOV X0, X8
	0x03D2C64C BL 0x1C16DFC
	0x03D2C650 MOV X0, X21
	0x03D2C654 BL 0x3D2A94C
	0x03D2C658 LDR W8, [X19 + 0xC8]
	0x03D2C65C CMP W0, W8
	0x03D2C660 B.LT 0x3D2C694
	0x03D2C664 MOV X0, X20
	0x03D2C668 MOV X1, X21
	0x03D2C66C BL 0x3D2A720
	0x03D2C670 ADRP X19, 0x438000
	0x03D2C674 LDR X19, [X19 + 0x9C8]
	0x03D2C678 LDR X0, [X19]
	0x03D2C67C LDR W8, [X0 + 0xE0]
	0x03D2C680 CBNZ W8, 0x3D2C68C
	0x03D2C684 BL 0x1C16DFC
	0x03D2C688 LDR X0, [X19]
	0x03D2C68C LDR X8, [X0 + 0xB8]
	0x03D2C690 LDR X21, [X8]
	0x03D2C694 LDP X20, X19, [X31 + 0x10]
	0x03D2C698 MOV X0, X21
	0x03D2C69C LDP X30, X21, [X31], #0x20
	0x03D2C6A0 RET
	0x03D2C6A4 STR X30, [X31 - 0x20]!
	0x03D2C6A8 STP X20, X19, [X31 + 0x10]
	0x03D2C6AC ADRP X20, 0x6BB000
	0x03D2C6B0 LDRB W8, [X20 + 0xAEA]
	0x03D2C6B4 MOV X19, X0
	0x03D2C6B8 TBNZ X8, 0x0, 0x3D2C6D0
	0x03D2C6BC ADRP X0, 0x438000
	0x03D2C6C0 LDR X0, [X0 + 0x760]
	0x03D2C6C4 BL 0x1C16CF4
	0x03D2C6C8 MOVZ W8, 0x1
	0x03D2C6CC STRB W8, [X20 + 0xAEA]
	0x03D2C6D0 LDRB W8, [X19 + 0xA8]
	0x03D2C6D4 CBNZ W8, 0x3D2C6F8
	0x03D2C6D8 ADRP X8, 0x438000
	0x03D2C6DC LDR X8, [X8 + 0x760]
	0x03D2C6E0 LDR X0, [X8]
	0x03D2C6E4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x6BC000
	007 Move X21, 0x439000
	008 Move W8, [X19+2833]
	009 Move X21, [X21+1784]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {40}
	014 Move X0, 0x3CC000
	015 Move X0, [X0+3232]
	016 Call 0x1C17CF4
	017 Move X0, 0x3CC000
	018 Move X0, [X0+4056]
	019 Call 0x1C17CF4
	020 Move X0, 0x3CC000
	021 Move X0, [X0+3056]
	022 Call 0x1C17CF4
	023 Move X0, 0x3CC000
	024 Move X0, [X0+3064]
	025 Call 0x1C17CF4
	026 Move X0, 0x3F2000
	027 Move X0, [X0+576]
	028 Call 0x1C17CF4
	029 Move X0, 0x439000
	030 Move X0, [X0+1784]
	031 Call 0x1C17CF4
	032 Move X0, 0x3EC000
	033 Move X0, [X0+3776]
	034 Call 0x1C17CF4
	035 Move X0, 0x439000
	036 Move X0, [X0+3000]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X19+2833], W8
	040 Move X0, [X21]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X21]
	046 Move X8, [X0+184]
	047 Move W8, [X8+72]
	048 Compare W8, 0
	049 JumpIfNotEqual {114}
	050 Move X19, 0x3F2000
	051 Move X19, [X19+576]
	052 Move X0, [X19]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X19]
	058 Move X8, [X0+184]
	059 Move X1, X31
	060 Move X0, [X8]
	061 Call Shader.Find, X0
	062 Move X8, 0x3CC000
	063 Move X8, [X8+3232]
	064 Move X20, X0
	065 Move X8, [X8]
	066 Move X0, X8
	067 Call 0x1C17F10
	068 Move X1, X20
	069 Move X2, X31
	070 Move X19, X0
	071 Call Material..ctor, X0, X1
	072 Compare X19, 0
	073 JumpIfEqual {132}
	074 Move X0, X19
	075 Move X1, X31
	076 Call Object.get_hideFlags, X0
	077 Or W1, W0, 4
	078 Move X0, X19
	079 Move X2, X31
	080 Call Object.set_hideFlags, X0, X1
	081 Move X8, 0x439000
	082 Move X8, [X8+3000]
	083 Move X0, X19
	084 Move W2, W31
	085 Move X3, X31
	086 Move X1, [X8]
	087 Call Material.GetTag, X0, X1, X2
	088 Move X20, X0
	089 Move X0, X19
	090 Move X1, X31
	091 Call UIRUtility.Destroy, X0
	092 Move X8, 0x3EC000
	093 Move X8, [X8+3776]
	094 Move X0, X20
	095 Move X2, X31
	096 Move X1, [X8]
	097 Call String.op_Equality, X0, X1
	098 Move X8, 0x3CC000
	099 Move X8, [X8+4056]
	100 And W1, W0, 1
	101 Add X0, X31, 12
	102 NotImplemented "Instruction STRH not yet implemented."
	103 Move X2, [X8]
	104 Call Nullable`1<Boolean>..ctor, X0, X1
	105 Move X0, [X21]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {111}
	109 Call 0x1C17DFC
	110 Move X0, [X21]
	111 Move X8, [X0+184]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 NotImplemented "Instruction STRH not yet implemented."
	114 Move X19, 0x3CC000
	115 Move W8, [X0+224]
	116 Move X19, [X19+3064]
	117 Compare W8, 0
	118 JumpIfNotEqual {121}
	119 Call 0x1C17DFC
	120 Move X0, [X21]
	121 Move X8, [X0+184]
	122 Move X1, [X19]
	123 Add X0, X8, 72
	124 Call Nullable`1<Boolean>.get_Value, X0
	125 Move X20, [X31+32]
	126 Move X19, [X31+40]
	127 Move X30, [X31+16]
	128 Move X21, [X31+24]
	129 And W0, W0, 1
	130 Add X31, X31, 48
	131 Return X0
	132 Call 0x1C17F20

Method: System.Boolean get_shaderModelIs35()

Disassembly:
	0x03D2A3DC STR W21, [X31 + 0x8]
	0x03D2A3E0 LDR W8, [X19]
	0x03D2A3E4 STRB W20, [X31 + 0xE]
	0x03D2A3E8 STRB W26, [X31 + 0xF]
	0x03D2A3EC MADD W8, W8, W25, W22
	0x03D2A3F0 STRH W8, [X31 + 0xC]
	0x03D2A3F4 B 0x3D2A690
	0x03D2A3F8 CBZ X20, 0x3D2A4AC
	0x03D2A3FC LDR X8, [X20]
	0x03D2A400 LDR W9, [X19]
	0x03D2A404 LDP W10, W11, [X19 + 0x18]
	0x03D2A408 ADD X3, X31, 0x10
	0x03D2A40C LDP X12, X4, [X8 + 0x198]
	0x03D2A410 MOV X0, X20
	0x03D2A414 UBFM W1, W10, 0x1B, 0x1A
	0x03D2A418 MUL W2, W11, W9
	0x03D2A41C BLR X12
	0x03D2A420 TBZ X0, 0x0, 0x3D2A4AC
	0x03D2A424 LDR X20, [X19 + 0x10]
	0x03D2A428 CBZ X20, 0x3D2A6B8
	0x03D2A42C ADRP X8, 0x43A000
	0x03D2A430 LDR X8, [X8 + 0xB58]
	0x03D2A434 MOV X0, X20
	0x03D2A438 LDR X1, [X8]
	0x03D2A43C BL 0x30C1208
	0x03D2A440 ADRP X9, 0x43A000
	0x03D2A444 LDR W8, [X19]
	0x03D2A448 LDR X9, [X9 + 0xB70]
	0x03D2A44C ADD W1, W8, W0
	0x03D2A450 LDR X2, [X9]
	0x03D2A454 MOV X0, X20
	0x03D2A458 BL 0x30C1224
	0x03D2A45C LDR X0, [X19 + 0x10]
	0x03D2A460 CBZ X0, 0x3D2A6B8
	0x03D2A464 ADRP X20, 0x3CF000
	0x03D2A468 LDR X20, [X20 + 0x1D0]
	0x03D2A46C LDR W10, [X0 + 0x1C]
	0x03D2A470 LDR X8, [X0 + 0x10]
	0x03D2A474 LDR X9, [X20]
	0x03D2A478 ADD W10, W10, 0x1
	0x03D2A47C STR W10, [X0 + 0x1C]
	0x03D2A480 CBZ X8, 0x3D2A6B8
	0x03D2A484 LDRSW X10, [X0 + 0x18]
	0x03D2A488 LDR W11, [X8 + 0x18]
	0x03D2A48C CMP W10, W11
	0x03D2A490 B.CS 0x3D2A4D0
	0x03D2A494 ADD W9, W10, 0x1
	0x03D2A498 ADD X8, X8, X10, 0x2, LSL
	0x03D2A49C MOVN W10, 0x1
	0x03D2A4A0 STR W9, [X0 + 0x18]
	0x03D2A4A4 STR W10, [X8 + 0x20]
	0x03D2A4A8 B 0x3D2A4E4
	0x03D2A4AC ADRP X19, 0x43A000
	0x03D2A4B0 LDR X19, [X19 + 0x9C8]
	0x03D2A4B4 LDR X0, [X19]
	0x03D2A4B8 LDR W8, [X0 + 0xE0]
	0x03D2A4BC CBNZ W8, 0x3D2A4C8
	0x03D2A4C0 BL 0x1C16DFC
	0x03D2A4C4 LDR X0, [X19]
	0x03D2A4C8 LDR X8, [X0 + 0xB8]
	0x03D2A4CC B 0x3D2A694
	0x03D2A4D0 LDR X8, [X9 + 0x20]
	0x03D2A4D4 MOVN W1, 0x1
	0x03D2A4D8 LDR X8, [X8 + 0xC0]
	0x03D2A4DC LDR X2, [X8 + 0x70]
	0x03D2A4E0 BL 0x30C1698
	0x03D2A4E4 LDR W8, [X19]
	0x03D2A4E8 CMP W8, 0x2
	0x03D2A4EC B.LT 0x3D2A560
	0x03D2A4F0 MOVZ W21, 0x1
	0x03D2A4F4 MOVN W22, 0x0
	0x03D2A4F8 LDR X0, [X19 + 0x10]
	0x03D2A4FC CBZ X0, 0x3D2A6B8
	0x03D2A500 LDR W10, [X0 + 0x1C]
	0x03D2A504 LDR X8, [X0 + 0x10]
	0x03D2A508 LDR X9, [X20]
	0x03D2A50C ADD W10, W10, 0x1
	0x03D2A510 STR W10, [X0 + 0x1C]
	0x03D2A514 CBZ X8, 0x3D2A6B8
	0x03D2A518 LDRSW X10, [X0 + 0x18]
	0x03D2A51C LDR W11, [X8 + 0x18]
	0x03D2A520 CMP W10, W11
	0x03D2A524 B.CS 0x3D2A53C
	0x03D2A528 ADD W9, W10, 0x1
	0x03D2A52C ADD X8, X8, X10, 0x2, LSL
	0x03D2A530 STR W9, [X0 + 0x18]
	0x03D2A534 STR W22, [X8 + 0x20]
	0x03D2A538 B 0x3D2A550
	0x03D2A53C LDR X8, [X9 + 0x20]
	0x03D2A540 MOVN W1, 0x0
	0x03D2A544 LDR X8, [X8 + 0xC0]
	0x03D2A548 LDR X2, [X8 + 0x70]
	0x03D2A54C BL 0x30C1698
	0x03D2A550 LDR W8, [X19]
	0x03D2A554 ADD W21, W21, 0x1
	0x03D2A558 CMP W21, W8
	0x03D2A55C B.LT 0x3D2A4F8
	0x03D2A560 ADRP X21, 0x6BA000
	0x03D2A564 LDRB W8, [X21 + 0xD8B]
	0x03D2A568 LDR X20, [X19 + 0x8]
	0x03D2A56C CBNZ W8, 0x3D2A584
	0x03D2A570 ADRP X0, 0x3C9000
	0x03D2A574 LDR X0, [X0 + 0x5A8]
	0x03D2A578 BL 0x1C16CF4
	0x03D2A57C MOVZ W8, 0x1
	0x03D2A580 STRB W8, [X21 + 0xD8B]
	0x03D2A584 ADRP X22, 0x3C9000
	0x03D2A588 LDR X22, [X22 + 0x5A8]
	0x03D2A58C LDR W21, [X31 + 0x10]
	0x03D2A590 LDR W23, [X31 + 0x18]
	0x03D2A594 LDR X0, [X22]
	0x03D2A598 LDR W8, [X0 + 0xE0]
	0x03D2A59C CBNZ W8, 0x3D2A5A4
	0x03D2A5A0 BL 0x1C16DFC
	0x03D2A5A4 ADD W1, W23, W21
	0x03D2A5A8 MOV W0, W21
	0x03D2A5AC MOV X2, X31
	0x03D2A5B0 BL 0x337EE94
	0x03D2A5B4 ADRP X23, 0x6BA000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x6BE000
	007 Move X21, 0x43B000
	008 Move W8, [X19+2834]
	009 Move X21, [X21+1784]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {40}
	014 Move X0, 0x3CE000
	015 Move X0, [X0+3232]
	016 Call 0x1C17CF4
	017 Move X0, 0x3CE000
	018 Move X0, [X0+4056]
	019 Call 0x1C17CF4
	020 Move X0, 0x3CE000
	021 Move X0, [X0+3056]
	022 Call 0x1C17CF4
	023 Move X0, 0x3CE000
	024 Move X0, [X0+3064]
	025 Call 0x1C17CF4
	026 Move X0, 0x3F4000
	027 Move X0, [X0+576]
	028 Call 0x1C17CF4
	029 Move X0, 0x43B000
	030 Move X0, [X0+1784]
	031 Call 0x1C17CF4
	032 Move X0, 0x3EE000
	033 Move X0, [X0+3776]
	034 Call 0x1C17CF4
	035 Move X0, 0x43B000
	036 Move X0, [X0+2840]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X19+2834], W8
	040 Move X0, [X21]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X21]
	046 Move X8, [X0+184]
	047 Move W8, [X8+74]
	048 Compare W8, 0
	049 JumpIfNotEqual {114}
	050 Move X19, 0x3F4000
	051 Move X19, [X19+576]
	052 Move X0, [X19]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X19]
	058 Move X8, [X0+184]
	059 Move X1, X31
	060 Move X0, [X8]
	061 Call Shader.Find, X0
	062 Move X8, 0x3CE000
	063 Move X8, [X8+3232]
	064 Move X20, X0
	065 Move X8, [X8]
	066 Move X0, X8
	067 Call 0x1C17F10
	068 Move X1, X20
	069 Move X2, X31
	070 Move X19, X0
	071 Call Material..ctor, X0, X1
	072 Compare X19, 0
	073 JumpIfEqual {132}
	074 Move X0, X19
	075 Move X1, X31
	076 Call Object.get_hideFlags, X0
	077 Or W1, W0, 4
	078 Move X0, X19
	079 Move X2, X31
	080 Call Object.set_hideFlags, X0, X1
	081 Move X8, 0x43B000
	082 Move X8, [X8+2840]
	083 Move X0, X19
	084 Move W2, W31
	085 Move X3, X31
	086 Move X1, [X8]
	087 Call Material.GetTag, X0, X1, X2
	088 Move X20, X0
	089 Move X0, X19
	090 Move X1, X31
	091 Call UIRUtility.Destroy, X0
	092 Move X8, 0x3EE000
	093 Move X8, [X8+3776]
	094 Move X0, X20
	095 Move X2, X31
	096 Move X1, [X8]
	097 Call String.op_Equality, X0, X1
	098 Move X8, 0x3CE000
	099 Move X8, [X8+4056]
	100 And W1, W0, 1
	101 Add X0, X31, 12
	102 NotImplemented "Instruction STRH not yet implemented."
	103 Move X2, [X8]
	104 Call Nullable`1<Boolean>..ctor, X0, X1
	105 Move X0, [X21]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {111}
	109 Call 0x1C17DFC
	110 Move X0, [X21]
	111 Move X8, [X0+184]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 NotImplemented "Instruction STRH not yet implemented."
	114 Move X19, 0x3CE000
	115 Move W8, [X0+224]
	116 Move X19, [X19+3064]
	117 Compare W8, 0
	118 JumpIfNotEqual {121}
	119 Call 0x1C17DFC
	120 Move X0, [X21]
	121 Move X8, [X0+184]
	122 Move X1, [X19]
	123 Add X0, X8, 74
	124 Call Nullable`1<Boolean>.get_Value, X0
	125 Move X20, [X31+32]
	126 Move X19, [X31+40]
	127 Move X30, [X31+16]
	128 Move X21, [X31+24]
	129 And W0, W0, 1
	130 Add X31, X31, 48
	131 Return X0
	132 Call 0x1C17F20

Method: System.Void InitVertexDeclaration()

Disassembly:
	0x03D2FB34 CBZ X8, 0x3D2FBEC
	0x03D2FB38 ADRP X9, 0x435000
	0x03D2FB3C LDR X9, [X9 + 0xEA0]
	0x03D2FB40 LDP X1, X2, [X8 + 0x20]
	0x03D2FB44 ADD X0, X31, 0x70
	0x03D2FB48 MOV W3, W27
	0x03D2FB4C LDR X5, [X9]
	0x03D2FB50 MOV W4, W24
	0x03D2FB54 STP X31, X31, [X31 + 0x70]
	0x03D2FB58 BL 0x24087E8
	0x03D2FB5C LDR V0, [X31 + 0x7]
	0x03D2FB60 LDR X8, [X31 + 0x18]
	0x03D2FB64 STR V0, [X8]
	0x03D2FB68 LDR X8, [X25 + 0x20]
	0x03D2FB6C CBZ X8, 0x3D2FBEC
	0x03D2FB70 ADRP X9, 0x435000
	0x03D2FB74 LDR X9, [X9 + 0xEA8]
	0x03D2FB78 LDP X1, X2, [X8 + 0x20]
	0x03D2FB7C ADD X0, X31, 0x20
	0x03D2FB80 MOV W3, W26
	0x03D2FB84 LDR X5, [X9]
	0x03D2FB88 MOV W4, W23
	0x03D2FB8C STP X31, X31, [X31 + 0x20]
	0x03D2FB90 BL 0x2406E5C
	0x03D2FB94 LDR V0, [X31 + 0x2]
	0x03D2FB98 STR V0, [X28]
	0x03D2FB9C CBZ X19, 0x3D2FBEC
	0x03D2FBA0 STR X25, [X19 + 0x50]
	0x03D2FBA4 LDR X8, [X31 + 0xB8]
	0x03D2FBA8 LDR V0, [X21]
	0x03D2FBAC LDP X24, X23, [X31 + 0xF0]
	0x03D2FBB0 LDP X26, X25, [X31 + 0xE0]
	0x03D2FBB4 STR X8, [X19 + 0x28]
	0x03D2FBB8 STUR V0, [X19 + 0x18]
	0x03D2FBBC LDR X8, [X31 + 0xA0]
	0x03D2FBC0 LDR V0, [X31 + 0x9]
	0x03D2FBC4 LDP X28, X27, [X31 + 0xD0]
	0x03D2FBC8 LDP X29, X30, [X31 + 0xC0]
	0x03D2FBCC STR X8, [X19 + 0x40]
	0x03D2FBD0 STR V0, [X19 + 0x3]
	0x03D2FBD4 LDR W8, [X22 + 0x60]
	0x03D2FBD8 LDP X22, X21, [X31 + 0x100]
	0x03D2FBDC STR W8, [X19 + 0x58]
	0x03D2FBE0 LDP X20, X19, [X31 + 0x110]
	0x03D2FBE4 ADD X31, X31, 0x120
	0x03D2FBE8 RET
	0x03D2FBEC BL 0x1C16F20
	0x03D2FBF0 SUB X31, X31, 0xC0
	0x03D2FBF4 STP X30, X23, [X31 + 0x90]
	0x03D2FBF8 STP X22, X21, [X31 + 0xA0]
	0x03D2FBFC STP X20, X19, [X31 + 0xB0]
	0x03D2FC00 ADRP X23, 0x6B8000
	0x03D2FC04 LDRB W8, [X23 + 0xB18]
	0x03D2FC08 MOV X19, X3
	0x03D2FC0C MOV W20, W2
	0x03D2FC10 MOV X21, X1
	0x03D2FC14 MOV X22, X0
	0x03D2FC18 TBNZ X8, 0x0, 0x3D2FC60
	0x03D2FC1C ADRP X0, 0x3C4000
	0x03D2FC20 LDR X0, [X0 + 0xA28]
	0x03D2FC24 BL 0x1C16CF4
	0x03D2FC28 ADRP X0, 0x435000
	0x03D2FC2C LDR X0, [X0 + 0xED0]
	0x03D2FC30 BL 0x1C16CF4
	0x03D2FC34 ADRP X0, 0x435000
	0x03D2FC38 LDR X0, [X0 + 0xEA8]
	0x03D2FC3C BL 0x1C16CF4
	0x03D2FC40 ADRP X0, 0x435000
	0x03D2FC44 LDR X0, [X0 + 0xED8]
	0x03D2FC48 BL 0x1C16CF4
	0x03D2FC4C ADRP X0, 0x435000
	0x03D2FC50 LDR X0, [X0 + 0x618]
	0x03D2FC54 BL 0x1C16CF4
	0x03D2FC58 MOVZ W8, 0x1
	0x03D2FC5C STRB W8, [X23 + 0xB18]
	0x03D2FC60 MOVI V0.2D, 0x0
	0x03D2FC64 STP X31, X31, [X31 + 0x80]
	0x03D2FC68 STRH W31, [X31 + 0x7C]
	0x03D2FC6C STP X31, X31, [X31 + 0x68]
	0x03D2FC70 STP V0, V0, [X31 + 0x40]
	0x03D2FC74 STP V0, V0, [X31 + 0x20]
	0x03D2FC78 STR V0, [X31 + 0x1]
	0x03D2FC7C CBZ X21, 0x3D2FDB4
	0x03D2FC80 ADRP X8, 0x3C4000
	0x03D2FC84 LDR X8, [X8 + 0xA28]
	0x03D2FC88 LDR W23, [X21 + 0x1C]
	0x03D2FC8C LDR X0, [X8]
	0x03D2FC90 LDR W8, [X0 + 0xE0]
	0x03D2FC94 CBNZ W8, 0x3D2FC9C
	0x03D2FC98 BL 0x1C16DFC
	0x03D2FC9C CMP W23, W20
	0x03D2FCA0 CSET W0, CS
	0x03D2FCA4 MOV X1, X31
	0x03D2FCA8 BL 0x3C06E58
	0x03D2FCAC LDR W8, [X21 + 0x58]
	0x03D2FCB0 LDR W9, [X22 + 0x60]
	0x03D2FCB4 CMP W8, W9
	0x03D2FCB8 B.NE 0x3D2FCF0
	0x03D2FCBC LDR X8, [X21 + 0x50]
	0x03D2FCC0 CBZ X8, 0x3D2FDB4
	0x03D2FCC4 LDR X8, [X8 + 0x18]
	0x03D2FCC8 CBZ X8, 0x3D2FDB4
	0x03D2FCCC LDP X0, X1, [X8 + 0x20]
	0x03D2FCD0 ADRP X8, 0x435000
	0x03D2FCD4 LDR W2, [X21 + 0x18]
	0x03D2FCD8 LDR X8, [X8 + 0xED0]
	0x03D2FCDC MOV W3, W20
	0x03D2FCE0 LDR X4, [X8]
	0x03D2FCE4 BL 0x2222AC0
	0x03D2FCE8 STP X0, X1, [X19]
	0x03D2FCEC B 0x3D2FDA0
	0x03D2FCF0 LDR X8, [X21 + 0x50]
	0x03D2FCF4 CBZ X8, 0x3D2FDB4
	0x03D2FCF8 LDR X8, [X8 + 0x20]
	0x03D2FCFC CBZ X8, 0x3D2FDB4
	0x03D2FD00 LDP X1, X2, [X8 + 0x20]
	0x03D2FD04 ADRP X8, 0x435000
	0x03D2FD08 LDR W23, [X21 + 0x18]
	0x03D2FD0C LDP W3, W4, [X21 + 0x30]
	0x03D2FD10 LDR X8, [X8 + 0xEA8]
	0x03D2FD14 ADD X0, X31, 0x80
	0x03D2FD18 LDR X5, [X8]
	0x03D2FD1C BL 0x2406E5C
	0x03D2FD20 LDR W3, [X21 + 0x34]
	0x03D2FD24 ADD X5, X31, 0x68
	0x03D2FD28 ADD X6, X31, 0x7C
	0x03D2FD2C ADD X7, X31, 0x10
	0x03D2FD30 MOV X0, X22
	0x03D2FD34 MOV X1, X21
	0x03D2FD38 MOV W2, W20
	0x03D2FD3C MOV X4, X19
	0x03D2FD40 STRB W31, [X31]
	0x03D2FD44 BL 0x3D2FDB8
	0x03D2FD48 LDR W20, [X21 + 0x34]
	0x03D2FD4C CMP W20, 0x1
	0x03D2FD50 B.LT 0x3D2FDA0
	0x03D2FD54 LDRH W8, [X31 + 0x7C]
	0x03D2FD58 ADRP X21, 0x435000
	0x03D2FD5C LDR X21, [X21 + 0xED8]
	0x03D2FD60 MOV W19, W31
	0x03D2FD64 SUB W22, W8, W23
	0x03D2FD68 ADRP X23, 0x435000
	0x03D2FD6C LDR X23, [X23 + 0x618]
	0x03D2FD70 LDR X2, [X21]
	0x03D2FD74 ADD X0, X31, 0x80
	0x03D2FD78 MOV W1, W19
	0x03D2FD7C BL 0x2406EB0
	0x03D2FD80 LDR X3, [X23]
	0x03D2FD84 ADD W2, W22, W0
	0x03D2FD88 ADD X0, X31, 0x68
	0x03D2FD8C MOV W1, W19
	0x03D2FD90 BL 0x2406EF0
	0x03D2FD94 ADD W19, W19, 0x1
	0x03D2FD98 CMP W20, W19
	0x03D2FD9C B.NE 0x3D2FD70
	0x03D2FDA0 LDP X20, X19, [X31 + 0xB0]
	0x03D2FDA4 LDP X22, X21, [X31 + 0xA0]
	0x03D2FDA8 LDP X30, X23, [X31 + 0x90]
	0x03D2FDAC ADD X31, X31, 0xC0
	0x03D2FDB0 RET
	0x03D2FDB4 BL 0x1C16F20
	0x03D2FDB8 STP X29, X30, [X31 - 0x60]!
	0x03D2FDBC STP X28, X27, [X31 + 0x10]
	0x03D2FDC0 STP X26, X25, [X31 + 0x20]
	0x03D2FDC4 STP X24, X23, [X31 + 0x30]
	0x03D2FDC8 STP X22, X21, [X31 + 0x40]
	0x03D2FDCC STP X20, X19, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+160], X30
	003 Move [X31+168], X21
	004 Move [X31+176], X20
	005 Move [X31+184], X19
	006 Move X20, 0x6B9000
	007 Move X21, 0x426000
	008 Move W8, [X20+2835]
	009 Move X21, [X21+1600]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x3EE000
	016 Move X0, [X0+2080]
	017 Call 0x1C17CF4
	018 Move X0, 0x426000
	019 Move X0, [X0+1600]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2835], W8
	023 Move X0, [X21]
	024 Move W1, 10
	025 Call 0x1C17D6C
	026 Move X20, X0
	027 Add X0, X31, 144
	028 Move W3, 3
	029 Move W1, W31
	030 Move W2, W31
	031 Move W4, W31
	032 Move X5, X31
	033 Move [X31+144], X31
	034 Move [X31+152], X31
	035 Call VertexAttributeDescriptor..ctor, X0, X1, X2, X3, X4
	036 Compare X20, 0
	037 JumpIfEqual {178}
	038 Move W8, [X20+24]
	039 Compare W8, 0
	040 JumpIfEqual {177}
	041 Move V0, [X31+9]
	042 Add X0, X31, 128
	043 Move W1, 3
	044 Move W2, 2
	045 Move W3, 4
	046 Move W4, W31
	047 Move X5, X31
	048 Move [X20+2], V0
	049 Move [X31+128], X31
	050 Move [X31+136], X31
	051 Call VertexAttributeDescriptor..ctor, X0, X1, X2, X3, X4
	052 Move W8, [X20+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move V0, [X31+8]
	055 Add X0, X31, 112
	056 Move W1, 4
	057 Move W3, 2
	058 Move W2, W31
	059 Move W4, W31
	060 Move X5, X31
	061 Move [X20+3], V0
	062 Move [X31+112], X31
	063 Move [X31+120], X31
	064 Call VertexAttributeDescriptor..ctor, X0, X1, X2, X3, X4
	065 Move W8, [X20+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move V0, [X31+7]
	068 Add X0, X31, 96
	069 Move W1, 5
	070 Move W2, 2
	071 Move W3, 4
	072 Move W4, W31
	073 Move X5, X31
	074 Move [X20+4], V0
	075 Move [X31+96], X31
	076 Move [X31+104], X31
	077 Call VertexAttributeDescriptor..ctor, X0, X1, X2, X3, X4
	078 Move W8, [X20+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move V0, [X31+6]
	081 Add X0, X31, 80
	082 Move W1, 6
	083 Move W2, 2
	084 Move W3, 4
	085 Move W4, W31
	086 Move X5, X31
	087 Move [X20+5], V0
	088 Move [X31+80], X31
	089 Move [X31+88], X31
	090 Call VertexAttributeDescriptor..ctor, X0, X1, X2, X3, X4
	091 Move W8, [X20+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move V0, [X31+5]
	094 Add X0, X31, 64
	095 Move W1, 7
	096 Move W2, 2
	097 Move W3, 4
	098 Move W4, W31
	099 Move X5, X31
	100 Move [X20+6], V0
	101 Move [X31+64], X31
	102 Move [X31+72], X31
	103 Call VertexAttributeDescriptor..ctor, X0, X1, X2, X3, X4
	104 Move W8, [X20+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move V0, [X31+4]
	107 Add X0, X31, 48
	108 Move W1, 8
	109 Move W2, 2
	110 Move W3, 4
	111 Move W4, W31
	112 Move X5, X31
	113 Move [X20+7], V0
	114 Move [X31+48], X31
	115 Move [X31+56], X31
	116 Call VertexAttributeDescriptor..ctor, X0, X1, X2, X3, X4
	117 Move W8, [X20+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move V0, [X31+3]
	120 Add X0, X31, 32
	121 Move W1, 9
	122 Move W2, 2
	123 Move W3, 4
	124 Move W4, W31
	125 Move X5, X31
	126 Move [X20+8], V0
	127 Move [X31+32], X31
	128 Move [X31+40], X31
	129 Call VertexAttributeDescriptor..ctor, X0, X1, X2, X3, X4
	130 Move W8, [X20+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move V0, [X31+2]
	133 Add X0, X31, 16
	134 Move W1, 10
	135 Move W3, 4
	136 Move W2, W31
	137 Move W4, W31
	138 Move X5, X31
	139 Move [X20+9], V0
	140 Move [X31+16], X31
	141 Move [X31+24], X31
	142 Call VertexAttributeDescriptor..ctor, X0, X1, X2, X3, X4
	143 Move W8, [X20+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move V0, [X31+1]
	146 Add X0, X31, 0
	147 Move W1, 11
	148 Move W3, 1
	149 Move W2, W31
	150 Move W4, W31
	151 Move X5, X31
	152 Move [X20+10], V0
	153 Move [X31], X31
	154 Move [X31+8], X31
	155 Call VertexAttributeDescriptor..ctor, X0, X1, X2, X3, X4
	156 Move W8, [X20+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move V0, [X31]
	159 Move X8, 0x3EE000
	160 Move X8, [X8+2080]
	161 Move [X20+11], V0
	162 Move X0, [X8]
	163 Move W8, [X0+224]
	164 Compare W8, 0
	165 JumpIfNotEqual {167}
	166 Call 0x1C17DFC
	167 Move X0, X20
	168 Move X1, X31
	169 Call Utility.GetVertexDeclaration, X0
	170 Move [X19+32], X0
	171 Move X20, [X31+176]
	172 Move X19, [X31+184]
	173 Move X30, [X31+160]
	174 Move X21, [X31+168]
	175 Add X31, X31, 192
	176 Return 
	177 Call 0x1C17F28
	178 Call 0x1C17F20

Method: System.Void CompleteCreation()

Disassembly:
	0x03D2FDD0 SUB X31, X31, 0x1C0
	0x03D2FDD4 STR X4, [X31 + 0x20]
	0x03D2FDD8 STR W3, [X31 + 0x1C]
	0x03D2FDDC STR W2, [X31 + 0x2C]
	0x03D2FDE0 LDRB W8, [X31 + 0x220]
	0x03D2FDE4 ADRP X22, 0x6B8000
	0x03D2FDE8 ADRP X29, 0x3C4000
	0x03D2FDEC LDRB W9, [X22 + 0xB1D]
	0x03D2FDF0 LDR X29, [X29 + 0xA28]
	0x03D2FDF4 MOV X20, X7
	0x03D2FDF8 MOV X21, X6
	0x03D2FDFC MOV X24, X5
	0x03D2FE00 MOV X23, X1
	0x03D2FE04 MOV X26, X0
	0x03D2FE08 AND W19, W8, 0x1
	0x03D2FE0C TBNZ X9, 0x0, 0x3D2FEB4
	0x03D2FE10 ADRP X0, 0x435000
	0x03D2FE14 LDR X0, [X0 + 0xE90]
	0x03D2FE18 BL 0x1C16CF4
	0x03D2FE1C ADRP X0, 0x435000
	0x03D2FE20 LDR X0, [X0 + 0xE98]
	0x03D2FE24 BL 0x1C16CF4
	0x03D2FE28 ADRP X0, 0x3C4000
	0x03D2FE2C LDR X0, [X0 + 0xA28]
	0x03D2FE30 BL 0x1C16CF4
	0x03D2FE34 ADRP X0, 0x435000
	0x03D2FE38 LDR X0, [X0 + 0xEE0]
	0x03D2FE3C BL 0x1C16CF4
	0x03D2FE40 ADRP X0, 0x435000
	0x03D2FE44 LDR X0, [X0 + 0xEE8]
	0x03D2FE48 BL 0x1C16CF4
	0x03D2FE4C ADRP X0, 0x435000
	0x03D2FE50 LDR X0, [X0 + 0xEF0]
	0x03D2FE54 BL 0x1C16CF4
	0x03D2FE58 ADRP X0, 0x435000
	0x03D2FE5C LDR X0, [X0 + 0xEF8]
	0x03D2FE60 BL 0x1C16CF4
	0x03D2FE64 ADRP X0, 0x435000
	0x03D2FE68 LDR X0, [X0 + 0xF00]
	0x03D2FE6C BL 0x1C16CF4
	0x03D2FE70 ADRP X0, 0x435000
	0x03D2FE74 LDR X0, [X0 + 0xF08]
	0x03D2FE78 BL 0x1C16CF4
	0x03D2FE7C ADRP X0, 0x435000
	0x03D2FE80 LDR X0, [X0 + 0xF10]
	0x03D2FE84 BL 0x1C16CF4
	0x03D2FE88 ADRP X0, 0x435000
	0x03D2FE8C LDR X0, [X0 + 0xF18]
	0x03D2FE90 BL 0x1C16CF4
	0x03D2FE94 ADRP X0, 0x435000
	0x03D2FE98 LDR X0, [X0 + 0xEA0]
	0x03D2FE9C BL 0x1C16CF4
	0x03D2FEA0 ADRP X0, 0x435000
	0x03D2FEA4 LDR X0, [X0 + 0xEA8]
	0x03D2FEA8 BL 0x1C16CF4
	0x03D2FEAC MOVZ W8, 0x1
	0x03D2FEB0 STRB W8, [X22 + 0xB1D]
	0x03D2FEB4 LDR V0, [X26 + 0x60]
	0x03D2FEB8 MOVI V1.2D, 0x0
	0x03D2FEBC MOV X25, X20
	0x03D2FEC0 UNIMPLEMENTED
	0x03D2FEC4 UNIMPLEMENTED
	0x03D2FEC8 ADD W8, W8, 0x1
	0x03D2FECC STR W8, [X26 + 0x64]
	0x03D2FED0 STR D0, [X20]
	0x03D2FED4 STR X23, [X20 + 0x8]
	0x03D2FED8 STR V1, [X25 + 0x10]!
	0x03D2FEDC STP V1, V1, [X20 + 0x20]
	0x03D2FEE0 STR X31, [X20 + 0x40]
	0x03D2FEE4 STRB W19, [X20 + 0x48]
	0x03D2FEE8 STUR W31, [X20 + 0x49]
	0x03D2FEEC STR W31, [X20 + 0x4C]
	0x03D2FEF0 LDR X0, [X29]
	0x03D2FEF4 LDR W19, [X26 + 0x64]
	0x03D2FEF8 LDR W8, [X0 + 0xE0]
	0x03D2FEFC CBNZ W8, 0x3D2FF04
	0x03D2FF00 BL 0x1C16DFC
	0x03D2FF04 CMP W19, 0x0
	0x03D2FF08 CSET W0, NE
	0x03D2FF0C MOV X1, X31
	0x03D2FF10 BL 0x3C06E58
	0x03D2FF14 CBZ X23, 0x3D3049C
	0x03D2FF18 ADRP X19, 0x435000
	0x03D2FF1C LDR W22, [X23 + 0x5C]
	0x03D2FF20 LDR X19, [X19 + 0xF08]
	0x03D2FF24 CBZ W22, 0x3D30140
	0x03D2FF28 LDR X0, [X26 + 0x48]
	0x03D2FF2C CBZ X0, 0x3D3049C
	0x03D2FF30 LDR W8, [X23 + 0x58]
	0x03D2FF34 LDR W9, [X0 + 0x18]
	0x03D2FF38 LDR X2, [X19]
	0x03D2FF3C STP X24, X21, [X31 + 0x8]
	0x03D2FF40 SDIV W10, W8, W9
	0x03D2FF44 MSUB W1, W10, W9, W8
	0x03D2FF48 BL 0x301BCCC
	0x03D2FF4C CBZ X0, 0x3D3049C
	0x03D2FF50 ADRP X8, 0x435000
	0x03D2FF54 LDR X8, [X8 + 0xF10]
	0x03D2FF58 SUB W28, W22, 0x1
	0x03D2FF5C MOV W1, W28
	0x03D2FF60 MOV X27, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x6B9000
	007 Move W8, [X20+2836]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x422000
	014 Move X0, [X0+1424]
	015 Call 0x1C17CF4
	016 Move X0, 0x3EE000
	017 Move X0, [X0+3336]
	018 Call 0x1C17CF4
	019 Move X0, 0x3EE000
	020 Move X0, [X0+2080]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2836], W8
	024 Move W8, [X19+16]
	025 Compare W8, 0
	026 JumpIfNotEqual {106}
	027 Move X8, [X19+80]
	028 Compare X8, 0
	029 JumpIfNotEqual {106}
	030 Move X0, X19
	031 Call UIRenderDevice.InitVertexDeclaration, X0
	032 Move X8, 0x3EE000
	033 Move X8, [X8+3336]
	034 Move W1, 4
	035 Move X0, [X8]
	036 Call 0x1C17D6C
	037 Move [X19+80], X0
	038 Move X8, 0x422000
	039 Move X8, [X8+1424]
	040 Move X0, [X8]
	041 Call 0x1C17F10
	042 Move X1, X31
	043 Move X20, X0
	044 Call MaterialPropertyBlock..ctor, X0
	045 Add X0, X31, 0
	046 Move W1, 1
	047 Move X2, X31
	048 Move [X19+88], X20
	049 Move [X31+8], W31
	050 Move [X31], X31
	051 Call StencilState.set_enabled, X0, X1
	052 Add X0, X31, 0
	053 Move W1, 255
	054 Move X2, X31
	055 Call StencilState.set_readMask, X0, X1
	056 Add X0, X31, 0
	057 Move W1, 255
	058 Move X2, X31
	059 Call StencilState.set_writeMask, X0, X1
	060 Add X0, X31, 0
	061 Move W1, 3
	062 Move X2, X31
	063 Call StencilState.set_compareFunctionFront, X0, X1
	064 Add X0, X31, 0
	065 Move W1, W31
	066 Move X2, X31
	067 Call StencilState.set_passOperationFront, X0, X1
	068 Add X0, X31, 0
	069 Move W1, W31
	070 Move X2, X31
	071 Call StencilState.set_failOperationFront, X0, X1
	072 Add X0, X31, 0
	073 Move W1, 3
	074 Move X2, X31
	075 Call StencilState.set_zFailOperationFront, X0, X1
	076 Add X0, X31, 0
	077 Move W1, 2
	078 Move X2, X31
	079 Call StencilState.set_compareFunctionBack, X0, X1
	080 Add X0, X31, 0
	081 Move W1, W31
	082 Move X2, X31
	083 Call StencilState.set_passOperationBack, X0, X1
	084 Add X0, X31, 0
	085 Move W1, W31
	086 Move X2, X31
	087 Call StencilState.set_failOperationBack, X0, X1
	088 Add X0, X31, 0
	089 Move W1, 4
	090 Move X2, X31
	091 Call StencilState.set_zFailOperationBack, X0, X1
	092 Move X8, 0x3EE000
	093 Move X8, [X8+2080]
	094 Move X20, [X31]
	095 Move W21, [X31+8]
	096 Move X0, [X8]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X20
	102 Move X1, X21
	103 Move X2, X31
	104 Call Utility.CreateStencilState, X0
	105 Move [X19+24], X0
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X30, [X31+16]
	109 Move X21, [X31+24]
	110 Add X31, X31, 48
	111 Return 

Method: System.Boolean get_fullyCreated()

Disassembly:
	0x03D2FF64 LDR X2, [X8]
	0x03D2FF68 ADD X8, X31, 0x140
	0x03D2FF6C ADD X19, X31, 0xF0
	0x03D2FF70 BL 0x3164274

ISIL:
	001 Move X8, [X0+80]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_disposed()

Disassembly:
	0x03D2FF74 LDUR V0, [X19 + 0x58]
	0x03D2FF78 LDUR V1, [X19 + 0x68]

ISIL:
	001 Move W0, [X0+173]
	002 Return X0

Method: System.Void set_disposed(System.Boolean value)

Disassembly:
	0x03D2FF7C LDUR V2, [X19 + 0x78]
	0x03D2FF80 LDP X8, X22, [X31 + 0x178]
	0x03D2FF84 LDR X0, [X29]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+173], W8
	003 Return 

Method: System.Void Dispose()

Disassembly:
	0x03D2FF88 STP V0, V1, [X31 + 0xB0]
	0x03D2FF8C STR V2, [X31 + 0xD]
	0x03D2FF90 STR X8, [X31 + 0xE0]
	0x03D2FF94 LDR W24, [X31 + 0x140]
	0x03D2FF98 LDR X29, [X31 + 0x188]
	0x03D2FF9C LDR W8, [X0 + 0xE0]
	0x03D2FFA0 LDR W21, [X23 + 0x5C]
	0x03D2FFA4 CBNZ W8, 0x3D2FFAC
	0x03D2FFA8 BL 0x1C16DFC
	0x03D2FFAC CMP W24, W21
	0x03D2FFB0 CSET W0, EQ
	0x03D2FFB4 MOV X1, X31
	0x03D2FFB8 BL 0x3C06E58
	0x03D2FFBC LDRB W8, [X20 + 0x48]
	0x03D2FFC0 AND W9, W29, 0x1
	0x03D2FFC4 ADD X2, X31, 0x140
	0x03D2FFC8 MOV X0, X27
	0x03D2FFCC ORR W8, W8, W9, 0x0
	0x03D2FFD0 STRB W8, [X20 + 0x48]
	0x03D2FFD4 LDP V0, V1, [X31 + 0xB0]
	0x03D2FFD8 LDR V2, [X31 + 0xD]
	0x03D2FFDC LDR X8, [X31 + 0xE0]
	0x03D2FFE0 MOVN W9, 0x0
	0x03D2FFE4 STP V0, V1, [X31 + 0xF0]
	0x03D2FFE8 STR V2, [X31 + 0x11]
	0x03D2FFEC STR X8, [X31 + 0x120]
	0x03D2FFF0 LDR X8, [X31 + 0x108]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6B9000
	006 Move X20, 0x3CC000
	007 Move W8, [X21+2837]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3CC000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2837], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+392]
	023 Move X2, [X8+400]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03D2FFF4 LDUR V0, [X19 + 0x8]
	0x03D2FFF8 MOV W1, W28
	0x03D2FFFC STR X8, [X25 + 0x10]
	0x03D30000 STR V0, [X25]
	0x03D30004 LDR X8, [X31 + 0xE0]
	0x03D30008 LDP V1, V0, [X31 + 0xB0]
	0x03D3000C LDR V2, [X31 + 0xD]
	0x03D30010 STR X8, [X31 + 0x60]
	0x03D30014 STP V1, V0, [X31 + 0x30]
	0x03D30018 STR V2, [X31 + 0x5]
	0x03D3001C STUR V2, [X20 + 0x28]
	0x03D30020 STP X8, X22, [X20 + 0x38]
	0x03D30024 LDP V0, V1, [X31 + 0xB0]
	0x03D30028 STR W24, [X31 + 0x140]
	0x03D3002C STR W9, [X31 + 0x144]
	0x03D30030 ADRP X9, 0x434000
	0x03D30034 STUR V0, [X19 + 0x58]
	0x03D30038 STUR V1, [X19 + 0x68]
	0x03D3003C LDR V0, [X31 + 0xD]
	0x03D30040 LDR X8, [X31 + 0xE0]
	0x03D30044 LDR X9, [X9 + 0xF18]
	0x03D30048 STUR V0, [X19 + 0x78]
	0x03D3004C STP X8, X22, [X31 + 0x178]
	0x03D30050 LDR X3, [X9]
	0x03D30054 STR X29, [X31 + 0x188]
	0x03D30058 BL 0x31642D8
	0x03D3005C LDR X0, [X26 + 0x40]
	0x03D30060 CBZ X0, 0x3D3049C
	0x03D30064 ADRP X10, 0x434000
	0x03D30068 LDR W8, [X26 + 0x60]
	0x03D3006C LDR W9, [X0 + 0x18]
	0x03D30070 LDR X10, [X10 + 0xF00]
	0x03D30074 LDR X2, [X10]
	0x03D30078 UDIV W10, W8, W9
	0x03D3007C MSUB W1, W10, W9, W8
	0x03D30080 BL 0x301BCCC
	0x03D30084 LDR X9, [X23 + 0x28]
	0x03D30088 LDUR V0, [X23 + 0x18]
	0x03D3008C LDR X8, [X23 + 0x50]
	0x03D30090 LDP X24, X21, [X31 + 0x8]
	0x03D30094 LDR X29, [X31 + 0x20]
	0x03D30098 LDR W25, [X31 + 0x2C]
	0x03D3009C STR W31, [X31 + 0x88]
	0x03D300A0 STR X9, [X31 + 0xA0]
	0x03D300A4 STR V0, [X31 + 0x9]
	0x03D300A8 STUR W31, [X31 + 0x8B]
	0x03D300AC CBZ X0, 0x3D3049C
	0x03D300B0 ADRP X22, 0x434000
	0x03D300B4 LDR X22, [X22 + 0xEE8]
	0x03D300B8 LDR V0, [X31 + 0x9]
	0x03D300BC LDR X9, [X31 + 0xA0]
	0x03D300C0 LDR W10, [X31 + 0x88]
	0x03D300C4 LDUR W11, [X31 + 0x8B]
	0x03D300C8 STR V0, [X31 + 0x1A]
	0x03D300CC STR X9, [X31 + 0x1B0]
	0x03D300D0 STR W10, [X31 + 0x198]
	0x03D300D4 STUR W11, [X19 + 0xAB]
	0x03D300D8 LDR W10, [X0 + 0x1C]
	0x03D300DC LDR X9, [X0 + 0x10]
	0x03D300E0 LDR X11, [X22]
	0x03D300E4 MOV X27, X0
	0x03D300E8 ADD W10, W10, 0x1
	0x03D300EC STR W10, [X0 + 0x1C]
	0x03D300F0 CBZ X9, 0x3D3049C
	0x03D300F4 LDRSW X10, [X27 + 0x18]
	0x03D300F8 LDR W12, [X9 + 0x18]
	0x03D300FC CMP W10, W12
	0x03D30100 B.CS 0x3D30178
	0x03D30104 ADD W11, W10, 0x1
	0x03D30108 STR W11, [X27 + 0x18]
	0x03D3010C LDR V0, [X31 + 0x1A]
	0x03D30110 LDR X11, [X31 + 0x1B0]
	0x03D30114 MOVZ W12, 0x28
	0x03D30118 MOVZ W13, 0x1
	0x03D3011C MADD X9, X10, X12, X9
	0x03D30120 STRB W13, [X9 + 0x40]
	0x03D30124 STR V0, [X9 + 0x2]
	0x03D30128 STP X11, X8, [X9 + 0x30]
	0x03D3012C LDUR W8, [X19 + 0xAB]
	0x03D30130 LDR W10, [X31 + 0x198]
	0x03D30134 STR W8, [X9 + 0x44]
	0x03D30138 STUR W10, [X9 + 0x41]
	0x03D3013C B 0x3D301B8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6B8000
	007 Move W8, [X21+2838]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x435000
	015 Move X0, [X0+3680]
	016 Call 0x1C17CF4
	017 Move X0, 0x435000
	018 Move X0, [X0+1784]
	019 Call 0x1C17CF4
	020 Move X0, 0x3ED000
	021 Move X0, [X0+2080]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2838], W8
	025 Move W8, [X19+173]
	026 Compare W8, 0
	027 JumpIfNotEqual {97}
	028 Move X22, 0x435000
	029 Move X22, [X22+1784]
	030 Move X0, [X22]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X22]
	036 Move X8, [X0+184]
	037 Move W9, [X8+8]
	038 Subtract W9, W9, 1
	039 Move [X8+8], W9
	040 Move TEMP, X20
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {95}
	044 Move W8, [X19+16]
	045 Compare W8, 0
	046 JumpIfEqual {56}
	047 Move X20, [X19+40]
	048 Compare X20, 0
	049 JumpIfEqual {95}
	050 Move X21, [X20+40]
	051 Move X0, X20
	052 Call Page.Dispose, X0
	053 Move X20, X21
	054 Compare X21, 0
	055 JumpIfNotEqual {50}
	056 Move X8, 0x3ED000
	057 Move X8, [X8+2080]
	058 Move X0, [X8]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X31
	064 Call Utility.InsertCPUFence
	065 Move X20, [X19+40]
	066 Compare W0, 0
	067 JumpIfEqual {48}
	068 Move W21, W0
	069 Move X0, [X22]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X22]
	075 Move X8, [X0+184]
	076 Move X0, [X8]
	077 Compare X0, 0
	078 JumpIfEqual {103}
	079 Move X8, 0x435000
	080 Move X8, [X8+3680]
	081 Move W1, W21
	082 Move X2, X20
	083 Move X3, [X8]
	084 Call LinkedList`1<DeviceToFree>.AddLast, X0, X1
	085 Move X0, [X22]
	086 Move X8, [X0+184]
	087 Move W8, [X8+13]
	088 Compare W8, 0
	089 JumpIfEqual {95}
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Call UIRenderDevice.ProcessDeviceFreeQueue
	095 Move W8, 1
	096 Move [X19+173], W8
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X30, [X31+48]
	102 Return 
	103 Call 0x1C17F20

Method: UnityEngine.UIElements.UIR.MeshHandle Allocate(System.UInt32 vertexCount, System.UInt32 indexCount, out Unity.Collections.NativeSlice`1<UnityEngine.UIElements.Vertex> vertexData, out Unity.Collections.NativeSlice`1<System.UInt16> indexData, out System.UInt16 indexOffset)

Disassembly:
	0x03D30510 STP V0, V0, [X31 + 0x40]
	0x03D30514 STP V0, V0, [X31 + 0x20]
	0x03D30518 STR V0, [X31 + 0x1]
	0x03D3051C CBZ X20, 0x3D30634
	0x03D30520 ADRP X8, 0x3C3000
	0x03D30524 LDR X8, [X8 + 0xA28]
	0x03D30528 LDR W26, [X20 + 0x1C]
	0x03D3052C LDR X0, [X8]
	0x03D30530 LDR W8, [X0 + 0xE0]
	0x03D30534 CBNZ W8, 0x3D3053C
	0x03D30538 BL 0x1C16DFC
	0x03D3053C CMP W26, W25
	0x03D30540 CSET W0, CS
	0x03D30544 MOV X1, X31
	0x03D30548 BL 0x3C06E58
	0x03D3054C LDR W8, [X20 + 0x34]
	0x03D30550 MOV X1, X31
	0x03D30554 CMP W8, W23
	0x03D30558 CSET W0, CS
	0x03D3055C BL 0x3C06E58
	0x03D30560 LDR W8, [X20 + 0x58]
	0x03D30564 LDR W9, [X22 + 0x60]
	0x03D30568 CMP W8, W9
	0x03D3056C B.NE 0x3D305EC
	0x03D30570 LDR X8, [X20 + 0x50]
	0x03D30574 CBZ X8, 0x3D30634
	0x03D30578 LDR X8, [X8 + 0x18]
	0x03D3057C CBZ X8, 0x3D30634
	0x03D30580 LDP X0, X1, [X8 + 0x20]
	0x03D30584 ADRP X8, 0x434000
	0x03D30588 LDR W2, [X20 + 0x18]
	0x03D3058C LDR X8, [X8 + 0xED0]
	0x03D30590 MOV W3, W25
	0x03D30594 LDR X4, [X8]
	0x03D30598 BL 0x2222AC0
	0x03D3059C STP X0, X1, [X24]
	0x03D305A0 LDR X8, [X20 + 0x50]
	0x03D305A4 CBZ X8, 0x3D30634
	0x03D305A8 LDR X8, [X8 + 0x20]
	0x03D305AC CBZ X8, 0x3D30634
	0x03D305B0 LDP X0, X1, [X8 + 0x20]
	0x03D305B4 ADRP X8, 0x434000
	0x03D305B8 LDR W2, [X20 + 0x30]
	0x03D305BC LDR X8, [X8 + 0xF20]
	0x03D305C0 MOV W3, W23
	0x03D305C4 LDR X4, [X8]
	0x03D305C8 BL 0x22229E0
	0x03D305CC STP X0, X1, [X21]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x6B8000
	010 Move W8, [X25+2839]
	011 Move X19, X5
	012 Move X20, X4
	013 Move X21, X3
	014 Move W22, W2
	015 Move W23, W1
	016 Move X24, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x435000
	022 Move X0, [X0+3720]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X25+2839], W8
	026 Move X0, [X24+144]
	027 Compare X0, 0
	028 JumpIfEqual {63}
	029 Move X8, 0x435000
	030 Move X8, [X8+3720]
	031 Move X1, [X8]
	032 Call 0x2EF1E28, X0
	033 Compare X0, 0
	034 JumpIfEqual {63}
	035 Move W8, 0xAAAB
	036 NotImplemented "Instruction MOVK not yet implemented."
	037 NotImplemented "Instruction UMADDL not yet implemented."
	038 Move X25, X0
	039 Move X8, X8
	040 ShiftRight X8, 33
	041 And X8, X8, 0x7FFFFFFF
	042 Move [X0+72], W8
	043 Move X0, X24
	044 Move X1, X25
	045 Move W2, W23
	046 Move W3, W22
	047 Move X4, X21
	048 Move X5, X20
	049 Move W6, W31
	050 Call UIRenderDevice.Allocate, X0, X1, X2, X3, X4, X5, X6
	051 Move W8, [X25+24]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X0, X25
	057 NotImplemented "Instruction STRH not yet implemented."
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X30, [X31+64]
	061 Move X25, [X31+72]
	062 Return X0
	063 Call 0x1C17F20

Method: System.Void Update(UnityEngine.UIElements.UIR.MeshHandle mesh, System.UInt32 vertexCount, out Unity.Collections.NativeSlice`1<UnityEngine.UIElements.Vertex> vertexData)

Disassembly:
	0x03D30BF0 LDP X30, X19, [X31], #0x10
	0x03D30BF4 RET
	0x03D30BF8 BL 0x1C16F20
	0x03D30BFC STP X29, X30, [X31 - 0x60]!
	0x03D30C00 STP X28, X27, [X31 + 0x10]
	0x03D30C04 STP X26, X25, [X31 + 0x20]
	0x03D30C08 STP X24, X23, [X31 + 0x30]
	0x03D30C0C STP X22, X21, [X31 + 0x40]
	0x03D30C10 STP X20, X19, [X31 + 0x50]
	0x03D30C14 SUB X31, X31, 0x1A0
	0x03D30C18 ADRP X21, 0x6B7000
	0x03D30C1C LDRB W8, [X21 + 0xB1E]
	0x03D30C20 MOV X19, X1
	0x03D30C24 MOV X20, X0
	0x03D30C28 TBNZ X8, 0x0, 0x3D30CA0
	0x03D30C2C ADRP X0, 0x3C3000
	0x03D30C30 LDR X0, [X0 + 0xA28]
	0x03D30C34 BL 0x1C16CF4
	0x03D30C38 ADRP X0, 0x434000
	0x03D30C3C LDR X0, [X0 + 0xF48]
	0x03D30C40 BL 0x1C16CF4
	0x03D30C44 ADRP X0, 0x434000
	0x03D30C48 LDR X0, [X0 + 0xEE8]
	0x03D30C4C BL 0x1C16CF4
	0x03D30C50 ADRP X0, 0x434000
	0x03D30C54 LDR X0, [X0 + 0xEF0]
	0x03D30C58 BL 0x1C16CF4
	0x03D30C5C ADRP X0, 0x434000
	0x03D30C60 LDR X0, [X0 + 0xEF8]
	0x03D30C64 BL 0x1C16CF4
	0x03D30C68 ADRP X0, 0x434000
	0x03D30C6C LDR X0, [X0 + 0xF00]
	0x03D30C70 BL 0x1C16CF4
	0x03D30C74 ADRP X0, 0x434000
	0x03D30C78 LDR X0, [X0 + 0xF08]
	0x03D30C7C BL 0x1C16CF4
	0x03D30C80 ADRP X0, 0x434000
	0x03D30C84 LDR X0, [X0 + 0xF10]
	0x03D30C88 BL 0x1C16CF4
	0x03D30C8C ADRP X0, 0x434000
	0x03D30C90 LDR X0, [X0 + 0xF18]
	0x03D30C94 BL 0x1C16CF4
	0x03D30C98 MOVZ W8, 0x1
	0x03D30C9C STRB W8, [X21 + 0xB1E]
	0x03D30CA0 CBZ X19, 0x3D31404
	0x03D30CA4 ADRP X23, 0x434000
	0x03D30CA8 ADRP X25, 0x434000
	0x03D30CAC LDR W22, [X19 + 0x5C]
	0x03D30CB0 LDR X23, [X23 + 0xF00]
	0x03D30CB4 LDR X25, [X25 + 0xEE8]
	0x03D30CB8 ADD X24, X31, 0x90
	0x03D30CBC CBZ W22, 0x3D30E38
	0x03D30CC0 LDR X0, [X20 + 0x48]
	0x03D30CC4 CBZ X0, 0x3D31404
	0x03D30CC8 ADRP X10, 0x434000
	0x03D30CCC LDR W8, [X19 + 0x58]
	0x03D30CD0 LDR W9, [X0 + 0x18]
	0x03D30CD4 LDR X10, [X10 + 0xF08]
	0x03D30CD8 LDR X2, [X10]
	0x03D30CDC SDIV W10, W8, W9
	0x03D30CE0 MSUB W1, W10, W9, W8
	0x03D30CE4 BL 0x301BCCC
	0x03D30CE8 CBZ X0, 0x3D31404
	0x03D30CEC ADRP X8, 0x434000
	0x03D30CF0 LDR X8, [X8 + 0xF10]
	0x03D30CF4 ADRP X28, 0x3C3000
	0x03D30CF8 SUB W22, W22, 0x1
	0x03D30CFC MOV W1, W22
	0x03D30D00 LDR X2, [X8]
	0x03D30D04 LDR X28, [X28 + 0xA28]
	0x03D30D08 ADD X8, X31, 0x150
	0x03D30D0C MOV X21, X0
	0x03D30D10 BL 0x3164274
	0x03D30D14 LDUR V0, [X24 + 0xC8]
	0x03D30D18 LDUR V1, [X24 + 0xD8]
	0x03D30D1C LDUR V2, [X24 + 0xE8]
	0x03D30D20 LDP X8, X27, [X31 + 0x188]
	0x03D30D24 LDR X0, [X28]
	0x03D30D28 STP V0, V1, [X31 + 0xF0]
	0x03D30D2C STR V2, [X31 + 0x11]
	0x03D30D30 STR X8, [X31 + 0x120]
	0x03D30D34 LDR W26, [X31 + 0x150]
	0x03D30D38 LDR X29, [X31 + 0x198]
	0x03D30D3C LDR W8, [X0 + 0xE0]
	0x03D30D40 LDR W28, [X19 + 0x5C]
	0x03D30D44 CBNZ W8, 0x3D30D4C
	0x03D30D48 BL 0x1C16DFC
	0x03D30D4C CMP W26, W28
	0x03D30D50 CSET W0, EQ
	0x03D30D54 MOV X1, X31
	0x03D30D58 BL 0x3C06E58
	0x03D30D5C LDR X0, [X20 + 0x40]
	0x03D30D60 CBZ X0, 0x3D31404
	0x03D30D64 LDR W8, [X20 + 0x60]
	0x03D30D68 LDR W9, [X0 + 0x18]
	0x03D30D6C LDR X2, [X23]
	0x03D30D70 UDIV W10, W8, W9
	0x03D30D74 MSUB W1, W10, W9, W8
	0x03D30D78 BL 0x301BCCC
	0x03D30D7C LDP V1, V0, [X31 + 0xF0]
	0x03D30D80 LDR V2, [X31 + 0x11]
	0x03D30D84 LDR X8, [X31 + 0x120]
	0x03D30D88 STR W31, [X31 + 0x88]
	0x03D30D8C STP V1, V0, [X31 + 0xB0]
	0x03D30D90 STR V2, [X31 + 0xD]
	0x03D30D94 STR X8, [X31 + 0xE0]
	0x03D30D98 LDUR V0, [X24 + 0x28]
	0x03D30D9C LDR X8, [X31 + 0xC8]
	0x03D30DA0 STUR W31, [X31 + 0x8B]
	0x03D30DA4 STR V0, [X31 + 0x9]
	0x03D30DA8 STR X8, [X31 + 0xA0]
	0x03D30DAC CBZ X0, 0x3D31404
	0x03D30DB0 LDR V0, [X31 + 0x9]
	0x03D30DB4 LDR X8, [X31 + 0xA0]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+144], X30
	003 Move [X31+152], X23
	004 Move [X31+160], X22
	005 Move [X31+168], X21
	006 Move [X31+176], X20
	007 Move [X31+184], X19
	008 Move X23, 0x6B8000
	009 Move W8, [X23+2840]
	010 Move X19, X3
	011 Move W20, W2
	012 Move X21, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x3C4000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0x435000
	022 Move X0, [X0+3792]
	023 Call 0x1C17CF4
	024 Move X0, 0x435000
	025 Move X0, [X0+3752]
	026 Call 0x1C17CF4
	027 Move X0, 0x435000
	028 Move X0, [X0+3800]
	029 Call 0x1C17CF4
	030 Move X0, 0x435000
	031 Move X0, [X0+1560]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+2840], W8
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+128], X31
	037 Move [X31+136], X31
	038 NotImplemented "Instruction STRH not yet implemented."
	039 Move [X31+104], X31
	040 Move [X31+112], X31
	041 Move [X31+64], V0
	042 Move [X31+72], V0
	043 Move [X31+32], V0
	044 Move [X31+40], V0
	045 Move [X31+1], V0
	046 Compare X21, 0
	047 JumpIfEqual {133}
	048 Move X8, 0x3C4000
	049 Move X8, [X8+2600]
	050 Move W23, [X21+28]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CSET not yet implemented."
	058 Move X1, X31
	059 Call Debug.Assert, X0
	060 Move W8, [X21+88]
	061 Move W9, [X22+96]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X21+80]
	064 Compare X8, 0
	065 JumpIfEqual {133}
	066 Move X8, [X8+24]
	067 Compare X8, 0
	068 JumpIfEqual {133}
	069 Move X0, [X8+32]
	070 Move X1, [X8+40]
	071 Move X8, 0x435000
	072 Move W2, [X21+24]
	073 Move X8, [X8+3792]
	074 Move W3, W20
	075 Move X4, [X8]
	076 Call NativeSliceExtensions.Slice, X0, X1, X2
	077 Move [X19], X0
	078 Move [X19+8], X1
	079 Move X8, [X21+80]
	080 Compare X8, 0
	081 JumpIfEqual {133}
	082 Move X8, [X8+32]
	083 Compare X8, 0
	084 JumpIfEqual {133}
	085 Move X1, [X8+32]
	086 Move X2, [X8+40]
	087 Move X8, 0x435000
	088 Move W23, [X21+24]
	089 Move W3, [X21+48]
	090 Move W4, [X21+52]
	091 Move X8, [X8+3752]
	092 Add X0, X31, 128
	093 Move X5, [X8]
	094 Call NativeSlice`1<UInt16>..ctor, X0, X1, X2, X3
	095 Move W3, [X21+52]
	096 Add X5, X31, 104
	097 Add X6, X31, 124
	098 Add X7, X31, 16
	099 Move X0, X22
	100 Move X1, X21
	101 Move W2, W20
	102 Move X4, X19
	103 Move [X31], W31
	104 Call UIRenderDevice.UpdateAfterGPUUsedData, X0, X1, X2, X3, X4, X5, X6, X7, X8
	105 Move W20, [X21+52]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Move X21, 0x435000
	109 Move X21, [X21+3800]
	110 Move W19, W31
	111 Subtract W22, W8, W23
	112 Move X23, 0x435000
	113 Move X23, [X23+1560]
	114 Move X2, [X21]
	115 Add X0, X31, 128
	116 Move W1, W19
	117 Call NativeSlice`1<UInt16>.get_Item, X0, X1
	118 Move X3, [X23]
	119 Add W2, W22, W0
	120 Add X0, X31, 104
	121 Move W1, W19
	122 Call NativeSlice`1<UInt16>.set_Item, X0, X1, X2
	123 Add W19, W19, 1
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X20, [X31+176]
	126 Move X19, [X31+184]
	127 Move X22, [X31+160]
	128 Move X21, [X31+168]
	129 Move X30, [X31+144]
	130 Move X23, [X31+152]
	131 Add X31, X31, 192
	132 Return 
	133 Call 0x1C17F20

Method: System.Void Update(UnityEngine.UIElements.UIR.MeshHandle mesh, System.UInt32 vertexCount, System.UInt32 indexCount, out Unity.Collections.NativeSlice`1<UnityEngine.UIElements.Vertex> vertexData, out Unity.Collections.NativeSlice`1<System.UInt16> indexData, out System.UInt16 indexOffset)

Disassembly:
	0x03D314A0 LDP X30, X21, [X31], #0x20
	0x03D314A4 RET
	0x03D314A8 BL 0x1C16F20
	0x03D314AC STP X29, X30, [X31 - 0x60]!
	0x03D314B0 STP X28, X27, [X31 + 0x10]
	0x03D314B4 STP X26, X25, [X31 + 0x20]
	0x03D314B8 STP X24, X23, [X31 + 0x30]
	0x03D314BC STP X22, X21, [X31 + 0x40]
	0x03D314C0 STP X20, X19, [X31 + 0x50]
	0x03D314C4 SUB X31, X31, 0x230
	0x03D314C8 MRS X21, 0xC000
	0x03D314CC LDR X8, [X21 + 0x28]
	0x03D314D0 ADRP X19, 0x6B6000
	0x03D314D4 MOV X26, X0
	0x03D314D8 STR X8, [X31 + 0x228]
	0x03D314DC LDRB W8, [X19 + 0xB26]
	0x03D314E0 TBNZ X8, 0x0, 0x3D315F4
	0x03D314E4 ADRP X0, 0x433000
	0x03D314E8 LDR X0, [X0 + 0xE90]
	0x03D314EC BL 0x1C16CF4
	0x03D314F0 ADRP X0, 0x433000
	0x03D314F4 LDR X0, [X0 + 0xE98]
	0x03D314F8 BL 0x1C16CF4
	0x03D314FC ADRP X0, 0x433000
	0x03D31500 LDR X0, [X0 + 0xF60]
	0x03D31504 BL 0x1C16CF4
	0x03D31508 ADRP X0, 0x433000
	0x03D3150C LDR X0, [X0 + 0xF68]
	0x03D31510 BL 0x1C16CF4
	0x03D31514 ADRP X0, 0x433000
	0x03D31518 LDR X0, [X0 + 0xF70]
	0x03D3151C BL 0x1C16CF4
	0x03D31520 ADRP X0, 0x433000
	0x03D31524 LDR X0, [X0 + 0xF78]
	0x03D31528 BL 0x1C16CF4
	0x03D3152C ADRP X0, 0x433000
	0x03D31530 LDR X0, [X0 + 0xF80]
	0x03D31534 BL 0x1C16CF4
	0x03D31538 ADRP X0, 0x433000
	0x03D3153C LDR X0, [X0 + 0xF88]
	0x03D31540 BL 0x1C16CF4
	0x03D31544 ADRP X0, 0x433000
	0x03D31548 LDR X0, [X0 + 0xEE8]
	0x03D3154C BL 0x1C16CF4
	0x03D31550 ADRP X0, 0x433000
	0x03D31554 LDR X0, [X0 + 0xF90]
	0x03D31558 BL 0x1C16CF4
	0x03D3155C ADRP X0, 0x433000
	0x03D31560 LDR X0, [X0 + 0xF98]
	0x03D31564 BL 0x1C16CF4
	0x03D31568 ADRP X0, 0x433000
	0x03D3156C LDR X0, [X0 + 0xFA0]
	0x03D31570 BL 0x1C16CF4
	0x03D31574 ADRP X0, 0x433000
	0x03D31578 LDR X0, [X0 + 0xFA8]
	0x03D3157C BL 0x1C16CF4
	0x03D31580 ADRP X0, 0x433000
	0x03D31584 LDR X0, [X0 + 0xEF8]
	0x03D31588 BL 0x1C16CF4
	0x03D3158C ADRP X0, 0x433000
	0x03D31590 LDR X0, [X0 + 0xF00]
	0x03D31594 BL 0x1C16CF4
	0x03D31598 ADRP X0, 0x433000
	0x03D3159C LDR X0, [X0 + 0xF08]
	0x03D315A0 BL 0x1C16CF4
	0x03D315A4 ADRP X0, 0x433000
	0x03D315A8 LDR X0, [X0 + 0xFB0]
	0x03D315AC BL 0x1C16CF4
	0x03D315B0 ADRP X0, 0x433000
	0x03D315B4 LDR X0, [X0 + 0xEA0]
	0x03D315B8 BL 0x1C16CF4
	0x03D315BC ADRP X0, 0x433000
	0x03D315C0 LDR X0, [X0 + 0xEA8]
	0x03D315C4 BL 0x1C16CF4
	0x03D315C8 ADRP X0, 0x433000
	0x03D315CC LDR X0, [X0 + 0xED8]
	0x03D315D0 BL 0x1C16CF4
	0x03D315D4 ADRP X0, 0x433000
	0x03D315D8 LDR X0, [X0 + 0xFB8]
	0x03D315DC BL 0x1C16CF4
	0x03D315E0 ADRP X0, 0x433000
	0x03D315E4 LDR X0, [X0 + 0x618]
	0x03D315E8 BL 0x1C16CF4
	0x03D315EC MOVZ W8, 0x1
	0x03D315F0 STRB W8, [X19 + 0xB26]
	0x03D315F4 MOVI V0.2D, 0x0
	0x03D315F8 STR X31, [X31 + 0x1C0]
	0x03D315FC STP X31, X31, [X31 + 0x170]
	0x03D31600 STR X31, [X31 + 0x180]
	0x03D31604 STR X31, [X31 + 0x218]
	0x03D31608 STR X31, [X31 + 0x210]
	0x03D3160C STR W31, [X31 + 0x220]
	0x03D31610 STP X31, X31, [X31 + 0x1F0]
	0x03D31614 STR W31, [X31 + 0x200]
	0x03D31618 STP X31, X31, [X31 + 0x100]
	0x03D3161C STP X31, X31, [X31 + 0xF0]
	0x03D31620 STP X31, X31, [X31 + 0xE0]
	0x03D31624 STP X31, X31, [X31 + 0xD0]
	0x03D31628 STP V0, V0, [X31 + 0x1A0]
	0x03D3162C STR V0, [X31 + 0x19]
	0x03D31630 STP V0, V0, [X31 + 0x150]
	0x03D31634 STP V0, V0, [X31 + 0x130]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+112], X26
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X26, 0x6B7000
	012 Move W8, [X26+2841]
	013 Move X19, X6
	014 Move X21, X5
	015 Move X24, X4
	016 Move W23, W3
	017 Move W25, W2
	018 Move X20, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0x3C3000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move X0, 0x434000
	028 Move X0, [X0+3872]
	029 Call 0x1C17CF4
	030 Move X0, 0x434000
	031 Move X0, [X0+3792]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X26+2841], W8
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+64], V0
	037 Move [X31+72], V0
	038 Move [X31+32], V0
	039 Move [X31+40], V0
	040 Move [X31+1], V0
	041 Compare X20, 0
	042 JumpIfEqual {123}
	043 Move X8, 0x3C3000
	044 Move X8, [X8+2600]
	045 Move W26, [X20+28]
	046 Move X0, [X8]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSET not yet implemented."
	053 Move X1, X31
	054 Call Debug.Assert, X0
	055 Move W8, [X20+52]
	056 Move X1, X31
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CSET not yet implemented."
	059 Call Debug.Assert, X0
	060 Move W8, [X20+88]
	061 Move W9, [X22+96]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X20+80]
	064 Compare X8, 0
	065 JumpIfEqual {123}
	066 Move X8, [X8+24]
	067 Compare X8, 0
	068 JumpIfEqual {123}
	069 Move X0, [X8+32]
	070 Move X1, [X8+40]
	071 Move X8, 0x434000
	072 Move W2, [X20+24]
	073 Move X8, [X8+3792]
	074 Move W3, W25
	075 Move X4, [X8]
	076 Call NativeSliceExtensions.Slice, X0, X1, X2
	077 Move [X24], X0
	078 Move [X24+8], X1
	079 Move X8, [X20+80]
	080 Compare X8, 0
	081 JumpIfEqual {123}
	082 Move X8, [X8+32]
	083 Compare X8, 0
	084 JumpIfEqual {123}
	085 Move X0, [X8+32]
	086 Move X1, [X8+40]
	087 Move X8, 0x434000
	088 Move W2, [X20+48]
	089 Move X8, [X8+3872]
	090 Move W3, W23
	091 Move X4, [X8]
	092 Call NativeSliceExtensions.Slice, X0, X1, X2
	093 Move [X21], X0
	094 Move [X21+8], X1
	095 Move W8, [X20+24]
	096 Move X0, X22
	097 Move X1, X20
	098 Move W2, W31
	099 NotImplemented "Instruction STRH not yet implemented."
	100 Call UIRenderDevice.UpdateCopyBackIndices, X0, X1, X2
	101 Move W8, 1
	102 Add X7, X31, 16
	103 Move X0, X22
	104 Move X1, X20
	105 Move W2, W25
	106 Move W3, W23
	107 Move X4, X24
	108 Move X5, X21
	109 Move X6, X19
	110 Move [X31], W8
	111 Call UIRenderDevice.UpdateAfterGPUUsedData, X0, X1, X2, X3, X4, X5, X6, X7, X8
	112 Move X20, [X31+160]
	113 Move X19, [X31+168]
	114 Move X22, [X31+144]
	115 Move X21, [X31+152]
	116 Move X24, [X31+128]
	117 Move X23, [X31+136]
	118 Move X26, [X31+112]
	119 Move X25, [X31+120]
	120 Move X30, [X31+96]
	121 Add X31, X31, 176
	122 Return 
	123 Call 0x1C17F20

Method: System.Void UpdateCopyBackIndices(UnityEngine.UIElements.UIR.MeshHandle mesh, System.Boolean copyBackIndices)

Disassembly:
	0x03D31638 STP V0, V0, [X31 + 0x110]
	0x03D3163C LDR W9, [X26 + 0x60]
	0x03D31640 LDR X8, [X26 + 0x50]
	0x03D31644 ADD W9, W9, 0x1
	0x03D31648 STR W9, [X26 + 0x60]
	0x03D3164C STR W9, [X26 + 0x68]
	0x03D31650 CBZ X8, 0x3D31698
	0x03D31654 LDR X10, [X8 + 0x18]
	0x03D31658 MOV W9, W9
	0x03D3165C SXTW X10, W10
	0x03D31660 SDIV X11, X9, X10
	0x03D31664 MSUB X19, X11, X10, X9
	0x03D31668 CMP W19, W10
	0x03D3166C B.CS 0x3D31CF8
	0x03D31670 ADD X8, X8, X19, 0x2, LSL
	0x03D31674 LDR W1, [X8 + 0x20]
	0x03D31678 BL 0x3D33BA0
	0x03D3167C LDR X8, [X26 + 0x50]
	0x03D31680 CBZ X8, 0x3D31CE4
	0x03D31684 LDR W9, [X8 + 0x18]
	0x03D31688 CMP W19, W9
	0x03D3168C B.CS 0x3D31CF8
	0x03D31690 ADD X8, X8, X19, 0x2, LSL
	0x03D31694 STR W31, [X8 + 0x20]
	0x03D31698 LDR X0, [X26 + 0x40]
	0x03D3169C MOVZ W8, 0x1
	0x03D316A0 STR W8, [X26 + 0x64]
	0x03D316A4 CBZ X0, 0x3D31CE4
	0x03D316A8 ADRP X10, 0x433000
	0x03D316AC LDR W8, [X26 + 0x60]
	0x03D316B0 LDR W9, [X0 + 0x18]
	0x03D316B4 LDR X10, [X10 + 0xF00]
	0x03D316B8 LDR X2, [X10]
	0x03D316BC UDIV W10, W8, W9
	0x03D316C0 MSUB W1, W10, W9, W8
	0x03D316C4 BL 0x301BCCC
	0x03D316C8 CBZ X0, 0x3D31CE4
	0x03D316CC ADRP X8, 0x433000
	0x03D316D0 LDR X8, [X8 + 0xFA8]
	0x03D316D4 ADRP X20, 0x433000
	0x03D316D8 ADRP X24, 0x433000
	0x03D316DC ADRP X19, 0x433000
	0x03D316E0 ADRP X28, 0x433000
	0x03D316E4 LDR X20, [X20 + 0xF78]
	0x03D316E8 LDR X24, [X24 + 0xF08]
	0x03D316EC LDR X19, [X19 + 0xFA0]
	0x03D316F0 LDR X28, [X28 + 0xF70]
	0x03D316F4 LDR X1, [X8]
	0x03D316F8 ADRP X25, 0x433000
	0x03D316FC LDR X25, [X25 + 0xF60]
	0x03D31700 ADD X8, X31, 0x30
	0x03D31704 STR X0, [X31 + 0x20]
	0x03D31708 BL 0x3162350
	0x03D3170C LDP V0, V1, [X31 + 0x30]
	0x03D31710 LDR V2, [X31 + 0x5]
	0x03D31714 LDR X8, [X31 + 0x60]
	0x03D31718 ADD X9, X31, 0x190
	0x03D3171C STP V0, V1, [X31 + 0x190]
	0x03D31720 STR V2, [X31 + 0x1B]
	0x03D31724 STR X8, [X31 + 0x1C0]
	0x03D31728 ADD X22, X9, 0x10
	0x03D3172C STR X21, [X31 + 0x18]
	0x03D31730 LDR X1, [X20]
	0x03D31734 ADD X0, X31, 0x190
	0x03D31738 BL 0x2BE3BA0

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+160], X30
	003 Move [X31+168], X23
	004 Move [X31+176], X22
	005 Move [X31+184], X21
	006 Move [X31+192], X20
	007 Move [X31+200], X19
	008 Move X21, 0x6B7000
	009 Move W8, [X21+2842]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x434000
	017 Move X0, [X0+3856]
	018 Call 0x1C17CF4
	019 Move X0, 0x434000
	020 Move X0, [X0+3864]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2842], W8
	024 Compare X19, 0
	025 JumpIfEqual {77}
	026 Move W21, [X19+92]
	027 Compare W21, 0
	028 JumpIfEqual {69}
	029 Move X0, X20
	030 Move X1, X19
	031 Call UIRenderDevice.ActiveUpdatesForMeshHandle, X0, X1
	032 Compare X0, 0
	033 JumpIfEqual {77}
	034 Move X8, 0x434000
	035 Move X8, [X8+3856]
	036 Move X23, 0x434000
	037 Subtract W20, W21, 1
	038 Move W1, W20
	039 Move X2, [X8]
	040 Move X23, [X23+3864]
	041 Add X8, X31, 80
	042 Move X19, X0
	043 Add X22, X31, 80
	044 Call List`1<AllocToUpdate>.get_Item, X0, X1
	045 Add X0, X31, 8
	046 Add X1, X31, 80
	047 Move W2, 72
	048 Call 0x3EB2AC0
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 Move W9, [X31+156]
	051 Move X21, [X23]
	052 Add X0, X31, 80
	053 Add X1, X31, 8
	054 Move W2, 72
	055 Move [X31], W8
	056 Move [X31+3], W9
	057 Call 0x3EB2AC0
	058 Move W8, [X31]
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move W10, 1
	061 Add X2, X31, 80
	062 Move X0, X19
	063 Move W1, W20
	064 Move X3, X21
	065 Move [X31+152], W10
	066 Move [X22+73], W8
	067 Move [X31+156], W9
	068 Call List`1<AllocToUpdate>.set_Item, X0, X1, X2
	069 Move X20, [X31+192]
	070 Move X19, [X31+200]
	071 Move X22, [X31+176]
	072 Move X21, [X31+184]
	073 Move X30, [X31+160]
	074 Move X23, [X31+168]
	075 Add X31, X31, 208
	076 Return 
	077 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.UIElements.UIR.UIRenderDevice/AllocToUpdate> ActiveUpdatesForMeshHandle(UnityEngine.UIElements.UIR.MeshHandle mesh)

Disassembly:
	0x03D3173C TBZ X0, 0x0, 0x3D317DC
	0x03D31740 LDR V0, [X22]
	0x03D31744 LDR X9, [X22 + 0x10]
	0x03D31748 LDRB W10, [X31 + 0x1C0]
	0x03D3174C LDR X8, [X31 + 0x1B8]
	0x03D31750 STR V0, [X31 + 0x17]
	0x03D31754 STR X9, [X31 + 0x180]
	0x03D31758 TBNZ X10, 0x0, 0x3D3179C
	0x03D3175C CBZ X8, 0x3D31CB8
	0x03D31760 LDR X8, [X8 + 0x20]
	0x03D31764 CBZ X8, 0x3D31CBC
	0x03D31768 LDR X0, [X8 + 0x40]
	0x03D3176C LDR V0, [X31 + 0x17]
	0x03D31770 LDR X8, [X31 + 0x180]
	0x03D31774 STR V0, [X31 + 0x3]
	0x03D31778 STR X8, [X31 + 0x40]
	0x03D3177C CBZ X0, 0x3D31CB4
	0x03D31780 LDR V0, [X31 + 0x3]
	0x03D31784 LDR X8, [X31 + 0x40]
	0x03D31788 STR V0, [X31 + 0x9]
	0x03D3178C STR X8, [X31 + 0xA0]
	0x03D31790 ADD X1, X31, 0x90
	0x03D31794 BL 0x3D309E0
	0x03D31798 B 0x3D31730
	0x03D3179C CBZ X8, 0x3D31CB0
	0x03D317A0 LDR X8, [X8 + 0x18]
	0x03D317A4 CBZ X8, 0x3D31CC0
	0x03D317A8 LDR X0, [X8 + 0x40]
	0x03D317AC LDR V0, [X31 + 0x17]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6B7000
	006 Move W8, [X21+2843]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x434000
	014 Move X0, [X0+3824]
	015 Call 0x1C17CF4
	016 Move X0, 0x434000
	017 Move X0, [X0+3848]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2843], W8
	021 Compare X19, 0
	022 JumpIfEqual {39}
	023 Move X0, [X20+72]
	024 Compare X0, 0
	025 JumpIfEqual {39}
	026 Move X10, 0x434000
	027 Move W8, [X19+88]
	028 Move W9, [X0+24]
	029 Move X10, [X10+3848]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X2, [X10]
	033 NotImplemented "Instruction SDIV not yet implemented."
	034 NotImplemented "Instruction MSUB not yet implemented."
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call List`1<Object>.get_Item, X0, X1
	038 Return X0
	039 Call 0x1C17F20

Method: System.Boolean TryAllocFromPage(UnityEngine.UIElements.UIR.Page page, System.UInt32 vertexCount, System.UInt32 indexCount, ref UnityEngine.UIElements.UIR.Alloc va, ref UnityEngine.UIElements.UIR.Alloc ia, System.Boolean shortLived)

Disassembly:
	0x03D317B0 LDR X8, [X31 + 0x180]
	0x03D317B4 STR V0, [X31 + 0x3]
	0x03D317B8 STR X8, [X31 + 0x40]
	0x03D317BC CBZ X0, 0x3D31CC4
	0x03D317C0 LDR V0, [X31 + 0x3]
	0x03D317C4 LDR X8, [X31 + 0x40]
	0x03D317C8 STR V0, [X31 + 0xB]
	0x03D317CC STR X8, [X31 + 0xC0]
	0x03D317D0 ADD X1, X31, 0xB0
	0x03D317D4 BL 0x3D309E0
	0x03D317D8 B 0x3D31730
	0x03D317DC LDR X1, [X25]
	0x03D317E0 ADD X0, X31, 0x190
	0x03D317E4 BL 0x2BE3B9C
	0x03D317E8 LDR X21, [X31 + 0x20]
	0x03D317EC ADD X25, X31, 0x1C8
	0x03D317F0 LDP W2, W8, [X21 + 0x18]
	0x03D317F4 ADD W8, W8, 0x1
	0x03D317F8 CMP W2, 0x1
	0x03D317FC STP W31, W8, [X21 + 0x18]
	0x03D31800 B.LT 0x3D31814
	0x03D31804 LDR X0, [X21 + 0x10]
	0x03D31808 MOV W1, W31
	0x03D3180C MOV X3, X31
	0x03D31810 BL 0x339FA34
	0x03D31814 LDR X8, [X26 + 0x40]
	0x03D31818 CBZ X8, 0x3D31CE4
	0x03D3181C LDR X0, [X26 + 0x48]
	0x03D31820 CBZ X0, 0x3D31CE4
	0x03D31824 LDR W9, [X26 + 0x60]
	0x03D31828 LDR W8, [X8 + 0x18]
	0x03D3182C LDR X2, [X24]
	0x03D31830 STR X26, [X31 + 0x10]
	0x03D31834 UDIV W10, W9, W8
	0x03D31838 MSUB W1, W10, W8, W9
	0x03D3183C BL 0x301BCCC
	0x03D31840 CBZ X0, 0x3D31CE4
	0x03D31844 LDR X1, [X19]
	0x03D31848 ADD X8, X31, 0x30
	0x03D3184C ADD X19, X31, 0x30
	0x03D31850 STR X0, [X31 + 0x8]
	0x03D31854 BL 0x3165594
	0x03D31858 ADD X0, X31, 0x110
	0x03D3185C ADD X1, X31, 0x30
	0x03D31860 MOVZ W2, 0x60
	0x03D31864 ADD X20, X31, 0x110
	0x03D31868 BL 0x3EB1AC0
	0x03D3186C ADD X8, X19, 0x21
	0x03D31870 ADD X27, X20, 0x24
	0x03D31874 ADD X26, X20, 0x3C
	0x03D31878 STR X8, [X31 + 0x28]
	0x03D3187C LDR X1, [X28]
	0x03D31880 ADD X0, X31, 0x110
	0x03D31884 BL 0x2BE3DB8
	0x03D31888 TBZ X0, 0x0, 0x3D31C34
	0x03D3188C LDR W9, [X31 + 0x120]
	0x03D31890 LDR W8, [X31 + 0x124]
	0x03D31894 LDR X29, [X31 + 0x128]
	0x03D31898 LDR W10, [X27 + 0x10]
	0x03D3189C LDR V0, [X27]
	0x03D318A0 LDR W23, [X31 + 0x130]
	0x03D318A4 LDR W22, [X31 + 0x148]
	0x03D318A8 LDR V1, [X26]
	0x03D318AC LDR W11, [X26 + 0x10]
	0x03D318B0 STR V0, [X31 + 0x21]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Compare X1, 0
	009 JumpIfEqual {78}
	010 Move X8, [X1+24]
	011 Move X21, X1
	012 Compare X8, 0
	013 JumpIfEqual {78}
	014 Move X0, [X8+64]
	015 Compare X0, 0
	016 JumpIfEqual {78}
	017 And W9, W6, 1
	018 Add X8, X31, 32
	019 Move W1, W2
	020 Move W2, W9
	021 Move W23, W6
	022 Move X20, X5
	023 Move X19, X4
	024 Move W22, W3
	025 Call GPUBufferAllocator.Allocate, X0, X1, X2
	026 Move V0, [X31+2]
	027 Move X8, [X31+48]
	028 Move [X19], V0
	029 Move W9, [X19+4]
	030 Move [X19+16], X8
	031 Compare W9, 0
	032 JumpIfEqual {51}
	033 Move X8, [X21+32]
	034 Compare X8, 0
	035 JumpIfEqual {78}
	036 Move X0, [X8+64]
	037 Compare X0, 0
	038 JumpIfEqual {78}
	039 And W2, W23, 1
	040 Add X8, X31, 32
	041 Move W1, W22
	042 Call GPUBufferAllocator.Allocate, X0, X1, X2
	043 Move V0, [X31+2]
	044 Move X8, [X31+48]
	045 Move [X20], V0
	046 Move W9, [X20+4]
	047 Move [X20+16], X8
	048 Compare W9, 0
	049 JumpIfEqual {52}
	050 Move W0, 1
	051 Move W0, W31
	052 Move X8, [X21+24]
	053 Compare X8, 0
	054 JumpIfEqual {78}
	055 Move X0, [X8+64]
	056 Move X8, [X19+16]
	057 Move V0, [X19]
	058 Move [X31+48], X8
	059 Move [X31+2], V0
	060 Compare X0, 0
	061 JumpIfEqual {78}
	062 Move V0, [X31+2]
	063 Move X8, [X31+48]
	064 Add X1, X31, 0
	065 Move [X31], V0
	066 Move [X31+16], X8
	067 Call GPUBufferAllocator.Free, X0, X1
	068 Move W0, W31
	069 Move [X19+4], W31
	070 Move X20, [X31+96]
	071 Move X19, [X31+104]
	072 Move X22, [X31+80]
	073 Move X21, [X31+88]
	074 Move X30, [X31+64]
	075 Move X23, [X31+72]
	076 Add X31, X31, 112
	077 Return X0
	078 Call 0x1C17F20

Method: System.Void Allocate(UnityEngine.UIElements.UIR.MeshHandle meshHandle, System.UInt32 vertexCount, System.UInt32 indexCount, out Unity.Collections.NativeSlice`1<UnityEngine.UIElements.Vertex> vertexData, out Unity.Collections.NativeSlice`1<System.UInt16> indexData, System.Boolean shortLived)

Disassembly:
	0x03D305D0 LDR W8, [X20 + 0x18]
	0x03D305D4 MOV X0, X22
	0x03D305D8 MOV X1, X20
	0x03D305DC MOV W2, W31
	0x03D305E0 STRH W8, [X19]
	0x03D305E4 BL 0x3D30638
	0x03D305E8 B 0x3D30618
	0x03D305EC MOVZ W8, 0x1
	0x03D305F0 ADD X7, X31, 0x10
	0x03D305F4 MOV X0, X22
	0x03D305F8 MOV X1, X20
	0x03D305FC MOV W2, W25
	0x03D30600 MOV W3, W23
	0x03D30604 MOV X4, X24
	0x03D30608 MOV X5, X21
	0x03D3060C MOV X6, X19
	0x03D30610 STRB W8, [X31]
	0x03D30614 BL 0x3D2FDB8
	0x03D30618 LDP X20, X19, [X31 + 0xA0]
	0x03D3061C LDP X22, X21, [X31 + 0x90]
	0x03D30620 LDP X24, X23, [X31 + 0x80]
	0x03D30624 LDP X26, X25, [X31 + 0x70]
	0x03D30628 LDR X30, [X31 + 0x60]
	0x03D3062C ADD X31, X31, 0xB0
	0x03D30630 RET
	0x03D30634 BL 0x1C16F20
	0x03D30638 SUB X31, X31, 0xD0
	0x03D3063C STP X30, X23, [X31 + 0xA0]
	0x03D30640 STP X22, X21, [X31 + 0xB0]
	0x03D30644 STP X20, X19, [X31 + 0xC0]
	0x03D30648 ADRP X21, 0x6B7000
	0x03D3064C LDRB W8, [X21 + 0xB1A]
	0x03D30650 MOV X19, X1
	0x03D30654 MOV X20, X0
	0x03D30658 TBNZ X8, 0x0, 0x3D3067C
	0x03D3065C ADRP X0, 0x434000
	0x03D30660 LDR X0, [X0 + 0xF10]
	0x03D30664 BL 0x1C16CF4
	0x03D30668 ADRP X0, 0x434000
	0x03D3066C LDR X0, [X0 + 0xF18]
	0x03D30670 BL 0x1C16CF4
	0x03D30674 MOVZ W8, 0x1
	0x03D30678 STRB W8, [X21 + 0xB1A]
	0x03D3067C CBZ X19, 0x3D30738
	0x03D30680 LDR W21, [X19 + 0x5C]
	0x03D30684 CBZ W21, 0x3D30724
	0x03D30688 MOV X0, X20
	0x03D3068C MOV X1, X19
	0x03D30690 BL 0x3D3073C
	0x03D30694 CBZ X0, 0x3D30738
	0x03D30698 ADRP X8, 0x434000
	0x03D3069C LDR X8, [X8 + 0xF10]
	0x03D306A0 ADRP X23, 0x434000
	0x03D306A4 SUB W20, W21, 0x1
	0x03D306A8 MOV W1, W20
	0x03D306AC LDR X2, [X8]
	0x03D306B0 LDR X23, [X23 + 0xF18]
	0x03D306B4 ADD X8, X31, 0x50
	0x03D306B8 MOV X19, X0
	0x03D306BC ADD X22, X31, 0x50
	0x03D306C0 BL 0x3164274
	0x03D306C4 ADD X0, X31, 0x8
	0x03D306C8 ADD X1, X31, 0x50
	0x03D306CC MOVZ W2, 0x48
	0x03D306D0 BL 0x3EB1AC0
	0x03D306D4 LDUR W8, [X22 + 0x49]
	0x03D306D8 LDR W9, [X31 + 0x9C]
	0x03D306DC LDR X21, [X23]
	0x03D306E0 ADD X0, X31, 0x50
	0x03D306E4 ADD X1, X31, 0x8
	0x03D306E8 MOVZ W2, 0x48
	0x03D306EC STR W8, [X31]
	0x03D306F0 STUR W9, [X31 + 0x3]
	0x03D306F4 BL 0x3EB1AC0
	0x03D306F8 LDR W8, [X31]
	0x03D306FC LDUR W9, [X31 + 0x3]
	0x03D30700 MOVZ W10, 0x1
	0x03D30704 ADD X2, X31, 0x50
	0x03D30708 MOV X0, X19
	0x03D3070C MOV W1, W20
	0x03D30710 MOV X3, X21
	0x03D30714 STRB W10, [X31 + 0x98]
	0x03D30718 STUR W8, [X22 + 0x49]
	0x03D3071C STR W9, [X31 + 0x9C]
	0x03D30720 BL 0x31642D8
	0x03D30724 LDP X20, X19, [X31 + 0xC0]
	0x03D30728 LDP X22, X21, [X31 + 0xB0]
	0x03D3072C LDP X30, X23, [X31 + 0xA0]
	0x03D30730 ADD X31, X31, 0xD0
	0x03D30734 RET
	0x03D30738 BL 0x1C16F20
	0x03D3073C STP X30, X21, [X31 - 0x20]!
	0x03D30740 STP X20, X19, [X31 + 0x10]
	0x03D30744 ADRP X21, 0x6B7000
	0x03D30748 LDRB W8, [X21 + 0xB1B]
	0x03D3074C MOV X19, X1
	0x03D30750 MOV X20, X0
	0x03D30754 TBNZ X8, 0x0, 0x3D30778
	0x03D30758 ADRP X0, 0x434000
	0x03D3075C LDR X0, [X0 + 0xEF0]
	0x03D30760 BL 0x1C16CF4
	0x03D30764 ADRP X0, 0x434000
	0x03D30768 LDR X0, [X0 + 0xF08]
	0x03D3076C BL 0x1C16CF4
	0x03D30770 MOVZ W8, 0x1
	0x03D30774 STRB W8, [X21 + 0xB1B]
	0x03D30778 CBZ X19, 0x3D307AC
	0x03D3077C LDR X0, [X20 + 0x48]
	0x03D30780 CBZ X0, 0x3D307AC
	0x03D30784 ADRP X10, 0x434000
	0x03D30788 LDR W8, [X19 + 0x58]
	0x03D3078C LDR W9, [X0 + 0x18]
	0x03D30790 LDR X10, [X10 + 0xF08]
	0x03D30794 LDP X20, X19, [X31 + 0x10]
	0x03D30798 LDR X2, [X10]
	0x03D3079C SDIV W10, W8, W9
	0x03D307A0 MSUB W1, W10, W9, W8
	0x03D307A4 LDP X30, X21, [X31], #0x20
	0x03D307A8 B 0x301BCCC
	0x03D307AC BL 0x1C16F20
	0x03D307B0 SUB X31, X31, 0x70
	0x03D307B4 STP X30, X23, [X31 + 0x40]
	0x03D307B8 STP X22, X21, [X31 + 0x50]
	0x03D307BC STP X20, X19, [X31 + 0x60]
	0x03D307C0 CBZ X1, 0x3D308B0
	0x03D307C4 LDR X8, [X1 + 0x18]
	0x03D307C8 MOV X21, X1
	0x03D307CC CBZ X8, 0x3D308B0
	0x03D307D0 LDR X0, [X8 + 0x40]
	0x03D307D4 CBZ X0, 0x3D308B0
	0x03D307D8 AND W9, W6, 0x1
	0x03D307DC ADD X8, X31, 0x20
	0x03D307E0 MOV W1, W2
	0x03D307E4 MOV W2, W9
	0x03D307E8 MOV W23, W6
	0x03D307EC MOV X20, X5
	0x03D307F0 MOV X19, X4
	0x03D307F4 MOV W22, W3
	0x03D307F8 BL 0x3D308B4
	0x03D307FC LDR V0, [X31 + 0x2]
	0x03D30800 LDR X8, [X31 + 0x30]
	0x03D30804 STR V0, [X19]
	0x03D30808 LDR W9, [X19 + 0x4]
	0x03D3080C STR X8, [X19 + 0x10]
	0x03D30810 CBZ W9, 0x3D30854
	0x03D30814 LDR X8, [X21 + 0x20]
	0x03D30818 CBZ X8, 0x3D308B0
	0x03D3081C LDR X0, [X8 + 0x40]
	0x03D30820 CBZ X0, 0x3D308B0
	0x03D30824 AND W2, W23, 0x1
	0x03D30828 ADD X8, X31, 0x20
	0x03D3082C MOV W1, W22
	0x03D30830 BL 0x3D308B4
	0x03D30834 LDR V0, [X31 + 0x2]
	0x03D30838 LDR X8, [X31 + 0x30]
	0x03D3083C STR V0, [X20]
	0x03D30840 LDR W9, [X20 + 0x4]
	0x03D30844 STR X8, [X20 + 0x10]
	0x03D30848 CBZ W9, 0x3D3085C
	0x03D3084C MOVZ W0, 0x1
	0x03D30850 B 0x3D3089C
	0x03D30854 MOV W0, W31
	0x03D30858 B 0x3D3089C
	0x03D3085C LDR X8, [X21 + 0x18]
	0x03D30860 CBZ X8, 0x3D308B0
	0x03D30864 LDR X0, [X8 + 0x40]
	0x03D30868 LDR X8, [X19 + 0x10]
	0x03D3086C LDR V0, [X19]
	0x03D30870 STR X8, [X31 + 0x30]
	0x03D30874 STR V0, [X31 + 0x2]
	0x03D30878 CBZ X0, 0x3D308B0
	0x03D3087C LDR V0, [X31 + 0x2]
	0x03D30880 LDR X8, [X31 + 0x30]
	0x03D30884 ADD X1, X31, 0x0
	0x03D30888 STR V0, [X31]
	0x03D3088C STR X8, [X31 + 0x10]
	0x03D30890 BL 0x3D309E0
	0x03D30894 MOV W0, W31
	0x03D30898 STR W31, [X19 + 0x4]
	0x03D3089C LDP X20, X19, [X31 + 0x60]
	0x03D308A0 LDP X22, X21, [X31 + 0x50]
	0x03D308A4 LDP X30, X23, [X31 + 0x40]
	0x03D308A8 ADD X31, X31, 0x70
	0x03D308AC RET
	0x03D308B0 BL 0x1C16F20
	0x03D308B4 SUB X31, X31, 0x70
	0x03D308B8 STR X30, [X31 + 0x30]
	0x03D308BC STP X24, X23, [X31 + 0x40]
	0x03D308C0 STP X22, X21, [X31 + 0x50]
	0x03D308C4 STP X20, X19, [X31 + 0x60]
	0x03D308C8 MOV W21, W2
	0x03D308CC MOV X20, X0
	0x03D308D0 MOV X19, X8
	0x03D308D4 TBZ X2, 0x0, 0x3D30918
	0x03D308D8 LDR X0, [X20 + 0x18]
	0x03D308DC CBZ X0, 0x3D309DC
	0x03D308E0 ADD X8, X31, 0x18
	0x03D308E4 BL 0x3D342E8
	0x03D308E8 LDUR W9, [X31 + 0x29]
	0x03D308EC LDR W10, [X31 + 0x2C]
	0x03D308F0 LDP W8, W23, [X31 + 0x18]
	0x03D308F4 LDR X22, [X31 + 0x20]
	0x03D308F8 STR W9, [X31 + 0x38]
	0x03D308FC STUR W10, [X31 + 0x3B]
	0x03D30900 LDR X9, [X20 + 0x18]
	0x03D30904 CBZ X9, 0x3D309DC
	0x03D30908 LDR W9, [X9 + 0x10]
	0x03D3090C ADD W8, W23, W8
	0x03D30910 SUB W24, W9, W8
	0x03D30914 B 0x3D30940
	0x03D30918 LDR X0, [X20 + 0x10]
	0x03D3091C CBZ X0, 0x3D309DC
	0x03D30920 ADD X8, X31, 0x18
	0x03D30924 BL 0x3D342E8
	0x03D30928 LDUR W8, [X31 + 0x29]
	0x03D3092C LDR W9, [X31 + 0x2C]
	0x03D30930 LDP W24, W23, [X31 + 0x18]
	0x03D30934 LDR X22, [X31 + 0x20]
	0x03D30938 STR W8, [X31 + 0x38]
	0x03D3093C STUR W9, [X31 + 0x3B]
	0x03D30940 MOV X0, X20
	0x03D30944 AND W21, W21, 0x1
	0x03D30948 BL 0x3D34A44
	0x03D3094C CBZ W23, 0x3D30998
	0x03D30950 TBZ X0, 0x0, 0x3D30998
	0x03D30954 LDR W8, [X31 + 0x38]
	0x03D30958 LDUR W9, [X31 + 0x3B]
	0x03D3095C ADD X1, X31, 0x0
	0x03D30960 MOV X0, X20
	0x03D30964 STP W24, W23, [X31]
	0x03D30968 STR X22, [X31 + 0x8]
	0x03D3096C STRB W21, [X31 + 0x10]
	0x03D30970 STUR W8, [X31 + 0x11]
	0x03D30974 STR W9, [X31 + 0x14]
	0x03D30978 BL 0x3D309E0
	0x03D3097C MOV W21, W31
	0x03D30980 MOV X22, X31
	0x03D30984 MOV W23, W31
	0x03D30988 MOV W24, W31
	0x03D3098C STUR W31, [X31 + 0x1B]
	0x03D30990 STR W31, [X31 + 0x18]
	0x03D30994 B 0x3D309A8
	0x03D30998 LDR W8, [X31 + 0x38]
	0x03D3099C LDUR W9, [X31 + 0x3B]
	0x03D309A0 STR W8, [X31 + 0x18]
	0x03D309A4 STUR W9, [X31 + 0x1B]
	0x03D309A8 LDUR W8, [X31 + 0x1B]
	0x03D309AC LDR W9, [X31 + 0x18]
	0x03D309B0 STP W24, W23, [X19]
	0x03D309B4 STR X22, [X19 + 0x8]
	0x03D309B8 STRB W21, [X19 + 0x10]
	0x03D309BC STR W8, [X19 + 0x14]
	0x03D309C0 STUR W9, [X19 + 0x11]
	0x03D309C4 LDP X20, X19, [X31 + 0x60]
	0x03D309C8 LDP X22, X21, [X31 + 0x50]
	0x03D309CC LDP X24, X23, [X31 + 0x40]
	0x03D309D0 LDR X30, [X31 + 0x30]
	0x03D309D4 ADD X31, X31, 0x70
	0x03D309D8 RET
	0x03D309DC BL 0x1C16F20
	0x03D309E0 SUB X31, X31, 0x70
	0x03D309E4 STR X30, [X31 + 0x60]
	0x03D309E8 LDRB W8, [X1 + 0x10]
	0x03D309EC TBNZ X8, 0x0, 0x3D30A20
	0x03D309F0 LDR X0, [X0 + 0x10]
	0x03D309F4 LDR X8, [X1 + 0x10]
	0x03D309F8 LDR V0, [X1]
	0x03D309FC STR X8, [X31 + 0x50]
	0x03D30A00 STR V0, [X31 + 0x4]
	0x03D30A04 CBZ X0, 0x3D30A60
	0x03D30A08 LDR V0, [X31 + 0x4]
	0x03D30A0C LDR X8, [X31 + 0x50]
	0x03D30A10 ADD X1, X31, 0x20
	0x03D30A14 STR V0, [X31 + 0x2]
	0x03D30A18 STR X8, [X31 + 0x30]
	0x03D30A1C B 0x3D30A50
	0x03D30A20 LDR X0, [X0 + 0x18]
	0x03D30A24 CBZ X0, 0x3D30A60
	0x03D30A28 LDR W8, [X0 + 0x10]
	0x03D30A2C LDP W9, W10, [X1]
	0x03D30A30 SUB W8, W8, W9
	0x03D30A34 SUB W8, W8, W10
	0x03D30A38 STR W8, [X1]
	0x03D30A3C LDR X8, [X1 + 0x10]
	0x03D30A40 LDR V0, [X1]
	0x03D30A44 ADD X1, X31, 0x0
	0x03D30A48 STR X8, [X31 + 0x10]
	0x03D30A4C STR V0, [X31]
	0x03D30A50 BL 0x3D345BC
	0x03D30A54 LDR X30, [X31 + 0x60]
	0x03D30A58 ADD X31, X31, 0x70
	0x03D30A5C RET
	0x03D30A60 BL 0x1C16F20
	0x03D30A64 STR X30, [X31 - 0x60]!
	0x03D30A68 STP X28, X27, [X31 + 0x10]
	0x03D30A6C STP X26, X25, [X31 + 0x20]
	0x03D30A70 STP X24, X23, [X31 + 0x30]
	0x03D30A74 STP X22, X21, [X31 + 0x40]
	0x03D30A78 STP X20, X19, [X31 + 0x50]
	0x03D30A7C ADRP X25, 0x6B7000
	0x03D30A80 ADRP X24, 0x3C3000
	0x03D30A84 LDRB W8, [X25 + 0xB39]
	0x03D30A88 LDR X24, [X24 + 0x5A8]
	0x03D30A8C MOV W22, W4
	0x03D30A90 MOV W20, W3
	0x03D30A94 MOV W21, W2
	0x03D30A98 MOV W23, W1
	0x03D30A9C MOV X19, X0
	0x03D30AA0 TBNZ X8, 0x0, 0x3D30AE8
	0x03D30AA4 ADRP X0, 0x434000
	0x03D30AA8 LDR X0, [X0 + 0xF28]
	0x03D30AAC BL 0x1C16CF4
	0x03D30AB0 ADRP X0, 0x434000
	0x03D30AB4 LDR X0, [X0 + 0xF30]
	0x03D30AB8 BL 0x1C16CF4
	0x03D30ABC ADRP X0, 0x434000
	0x03D30AC0 LDR X0, [X0 + 0xF38]
	0x03D30AC4 BL 0x1C16CF4
	0x03D30AC8 ADRP X0, 0x434000
	0x03D30ACC LDR X0, [X0 + 0xF40]
	0x03D30AD0 BL 0x1C16CF4
	0x03D30AD4 ADRP X0, 0x3C3000
	0x03D30AD8 LDR X0, [X0 + 0x5A8]
	0x03D30ADC BL 0x1C16CF4
	0x03D30AE0 MOVZ W8, 0x1
	0x03D30AE4 STRB W8, [X25 + 0xB39]
	0x03D30AE8 ADRP X28, 0x434000
	0x03D30AEC ADRP X27, 0x434000
	0x03D30AF0 ADRP X26, 0x434000
	0x03D30AF4 ADRP X25, 0x434000
	0x03D30AF8 LDR X28, [X28 + 0xF40]
	0x03D30AFC LDR X27, [X27 + 0xF30]
	0x03D30B00 LDR X26, [X26 + 0xF38]
	0x03D30B04 LDR X25, [X25 + 0xF28]
	0x03D30B08 MOV X0, X19
	0x03D30B0C MOV X1, X31
	0x03D30B10 BL 0x33BDD8C
	0x03D30B14 LDR X0, [X24]
	0x03D30B18 LDR W8, [X0 + 0xE0]
	0x03D30B1C CBNZ W8, 0x3D30B24
	0x03D30B20 BL 0x1C16DFC
	0x03D30B24 MOVZ W1, 0x10000
	0x03D30B28 MOV W0, W23
	0x03D30B2C MOV X2, X31
	0x03D30B30 BL 0x337EEEC
	0x03D30B34 LDR X8, [X28]
	0x03D30B38 MOV W23, W0
	0x03D30B3C MOV X0, X8
	0x03D30B40 BL 0x1C16F10
	0x03D30B44 LDR X6, [X27]
	0x03D30B48 AND W22, W22, 0x1
	0x03D30B4C MOVZ W4, 0x20
	0x03D30B50 MOV W1, W31
	0x03D30B54 MOV W2, W23
	0x03D30B58 MOV W3, W20
	0x03D30B5C MOV W5, W22
	0x03D30B60 MOV X24, X0
	0x03D30B64 BL 0x29AC840
	0x03D30B68 STR X24, [X19 + 0x18]
	0x03D30B6C LDR X0, [X26]
	0x03D30B70 BL 0x1C16F10
	0x03D30B74 LDR X6, [X25]
	0x03D30B78 MOVZ W1, 0x1
	0x03D30B7C MOVZ W4, 0x20
	0x03D30B80 MOV W2, W21
	0x03D30B84 MOV W3, W20
	0x03D30B88 MOV W5, W22
	0x03D30B8C MOV X23, X0
	0x03D30B90 BL 0x29AC0C8
	0x03D30B94 STR X23, [X19 + 0x20]
	0x03D30B98 LDP X20, X19, [X31 + 0x50]
	0x03D30B9C LDP X22, X21, [X31 + 0x40]
	0x03D30BA0 LDP X24, X23, [X31 + 0x30]
	0x03D30BA4 LDP X26, X25, [X31 + 0x20]
	0x03D30BA8 LDP X28, X27, [X31 + 0x10]
	0x03D30BAC LDR X30, [X31], #0x60
	0x03D30BB0 RET
	0x03D30BB4 STP X30, X19, [X31 - 0x10]!
	0x03D30BB8 LDR X8, [X0 + 0x18]
	0x03D30BBC CBZ X8, 0x3D30BF8
	0x03D30BC0 MOV X19, X0
	0x03D30BC4 LDR X0, [X8 + 0x40]
	0x03D30BC8 CBZ X0, 0x3D30BF8
	0x03D30BCC BL 0x3D34A7C
	0x03D30BD0 TBZ X0, 0x0, 0x3D30BEC
	0x03D30BD4 LDR X8, [X19 + 0x20]
	0x03D30BD8 CBZ X8, 0x3D30BF8
	0x03D30BDC LDR X0, [X8 + 0x40]
	0x03D30BE0 CBZ X0, 0x3D30BF8
	0x03D30BE4 LDP X30, X19, [X31], #0x10
	0x03D30BE8 B 0x3D34A7C
	0x03D30BEC MOV W0, W31

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X20, 0x6B8000
	015 Move W8, [X20+2844]
	016 Move W26, W6
	017 Move X28, X5
	018 Move X21, X4
	019 Move W23, W3
	020 Move W24, W2
	021 Move X19, X1
	022 Move X22, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {59}
	027 Move X0, 0x435000
	028 Move X0, [X0+3728]
	029 Call 0x1C17CF4
	030 Move X0, 0x435000
	031 Move X0, [X0+3736]
	032 Call 0x1C17CF4
	033 Move X0, 0x3C4000
	034 Move X0, [X0+2600]
	035 Call 0x1C17CF4
	036 Move X0, 0x3C4000
	037 Move X0, [X0+1448]
	038 Call 0x1C17CF4
	039 Move X0, 0x435000
	040 Move X0, [X0+3744]
	041 Call 0x1C17CF4
	042 Move X0, 0x435000
	043 Move X0, [X0+3752]
	044 Call 0x1C17CF4
	045 Move X0, 0x435000
	046 Move X0, [X0+3760]
	047 Call 0x1C17CF4
	048 Move X0, 0x435000
	049 Move X0, [X0+3768]
	050 Call 0x1C17CF4
	051 Move X0, 0x435000
	052 Move X0, [X0+3776]
	053 Call 0x1C17CF4
	054 Move X0, 0x435000
	055 Move X0, [X0+3784]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+2844], W8
	059 Move [X31+176], X31
	060 Move [X31+184], X31
	061 Move [X31+160], X31
	062 Move [X31+168], X31
	063 Move [X31+144], X31
	064 Move [X31+152], X31
	065 Move W8, [X22+52]
	066 Move X20, 0x3C4000
	067 Move X20, [X20+2600]
	068 Move [X31+24], X21
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, X22
	071 Move [X31+16], X28
	072 Call UIRenderDevice.CompleteCreation, X0
	073 Move X20, X22
	074 Add X20, X20, 40
	075 Move X8, [X20]
	076 Compare X8, 0
	077 JumpIfEqual {139}
	078 Move X25, X31
	079 Move TEMP, 0x80000000
	080 Not TEMP
	081 Move W28, TEMP
	082 Move X27, X8
	083 Move X8, [X8+24]
	084 Compare X8, 0
	085 JumpIfEqual {462}
	086 Move X9, [X27+32]
	087 Compare X9, 0
	088 JumpIfEqual {462}
	089 Move W8, [X8+40]
	090 Move W9, [X9+40]
	091 Move X0, X27
	092 Subtract W29, W8, W24
	093 Subtract W21, W9, W23
	094 Call Page.get_isEmpty, X0
	095 Or W9, W21, W29
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X8, [X27+40]
	098 NotImplemented "Instruction CSET not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CSET not yet implemented."
	101 And W9, W0, W9
	102 And W31, W10, W9
	103 NotImplemented "Instruction CSEL not yet implemented."
	104 NotImplemented "Instruction CSEL not yet implemented."
	105 Compare X8, 0
	106 JumpIfNotEqual {82}
	107 Compare X25, 0
	108 JumpIfNotEqual {175}
	109 Move X25, [X22+40]
	110 Compare X25, 0
	111 JumpIfEqual {198}
	112 And W6, W26, 1
	113 Add X4, X31, 168
	114 Add X5, X31, 144
	115 Move X1, X25
	116 Move W2, W24
	117 Move W3, W23
	118 Call UIRenderDevice.TryAllocFromPage, X0, X1, X2, X3, X4, X5, X6
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {200}
	123 Move X27, [X25+40]
	124 Compare X27, 0
	125 JumpIfEqual {200}
	126 And W6, W26, 1
	127 Add X4, X31, 168
	128 Add X5, X31, 144
	129 Move X1, X27
	130 Move W2, W24
	131 Move W3, W23
	132 Call UIRenderDevice.TryAllocFromPage, X0, X1, X2, X3, X4, X5, X6
	133 Move X25, X27
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {123}
	138 Move X25, X27
	139 Move X27, X31
	140 Move X8, 0x3C4000
	141 Move X8, [X8+2600]
	142 Move W25, [X22+168]
	143 Move W9, 2
	144 Move X0, [X8]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction CSEL not yet implemented."
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X8, 0x435000
	152 Move X8, [X8+3784]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 NotImplemented "Instruction CSET not yet implemented."
	155 Move X2, X31
	156 Move X1, [X8]
	157 Call Debug.Assert, X0, X1
	158 Move X8, 0x435000
	159 Move W29, [X22+16]
	160 Move X8, [X8+3760]
	161 Move X0, [X8]
	162 Call 0x1C17F10
	163 Move W3, 4
	164 Move W1, W28
	165 Move W2, W23
	166 Move W4, W29
	167 Move X25, X0
	168 Call Page..ctor, X0, X1, X2, X3, X4
	169 Add X8, X27, 40
	170 NotImplemented "Instruction CMP not yet implemented."
	171 NotImplemented "Instruction CSEL not yet implemented."
	172 Move [X8], X25
	173 Compare X25, 0
	174 JumpIfEqual {462}
	175 Move X8, [X25+24]
	176 Compare X8, 0
	177 JumpIfEqual {462}
	178 Move X20, 0x3C4000
	179 Move X0, [X8+64]
	180 Move X20, [X20+2600]
	181 Compare X0, 0
	182 JumpIfEqual {462}
	183 And W2, W26, 1
	184 Add X8, X31, 168
	185 Move W1, W24
	186 Call GPUBufferAllocator.Allocate, X0, X1, X2
	187 Move X8, [X25+32]
	188 Compare X8, 0
	189 JumpIfEqual {462}
	190 Move X0, [X8+64]
	191 Move X28, [X31+16]
	192 Compare X0, 0
	193 JumpIfEqual {462}
	194 And W2, W26, 1
	195 Add X8, X31, 144
	196 Move W1, W23
	197 Call GPUBufferAllocator.Allocate, X0, X1, X2
	198 Move X0, X22
	199 Call UIRenderDevice.CompleteCreation, X0
	200 Move W8, [X31+148]
	201 Compare W8, 0
	202 JumpIfNotEqual {306}
	203 Move W8, [X22+48]
	204 Move W27, W8
	205 ShiftRight W27, 31
	206 And W27, W27, 0x3FFFFFFF
	207 Move [X22+48], W27
	208 Move X8, 0x3C4000
	209 Move X8, [X8+1448]
	210 Move X0, [X8]
	211 Move W8, [X0+224]
	212 Compare W8, 0
	213 JumpIfNotEqual {215}
	214 Call 0x1C17DFC
	215 Move W1, W24
	216 ShiftRight W1, 31
	217 And W1, W1, 0x3FFFFFFF
	218 Move W0, W27
	219 Move X2, X31
	220 Call Math.Max, X0, X1
	221 Move W1, [X22+168]
	222 Move X2, X31
	223 Move [X22+48], W0
	224 Call Math.Min, X0, X1
	225 Move V0, [X22+56]
	226 NotImplemented "Instruction UCVTF not yet implemented."
	227 Move S2, 0.5
	228 Move [X22+48], W0
	229 Multiply S0, S0, S1
	230 Add S0, S0, S2
	231 NotImplemented "Instruction FCVTZS not yet implemented."
	232 NotImplemented "Instruction FCVTZU not yet implemented."
	233 NotImplemented "Instruction FCMP not yet implemented."
	234 NotImplemented "Instruction CSEL not yet implemented."
	235 Move W1, W23
	236 ShiftRight W1, 31
	237 And W1, W1, 0x3FFFFFFF
	238 Move X2, X31
	239 Call Math.Max, X0, X1
	240 Move W27, W0
	241 Move X21, X20
	242 Compare X25, 0
	243 JumpIfEqual {247}
	244 Move X8, [X25+40]
	245 NotImplemented "Instruction CMP not yet implemented."
	246 NotImplemented "Instruction CSET not yet implemented."
	247 Move W25, 1
	248 Move X0, [X21]
	249 Move X20, X28
	250 Move W8, [X0+224]
	251 Compare W8, 0
	252 JumpIfNotEqual {254}
	253 Call 0x1C17DFC
	254 Move W0, W25
	255 Move X1, X31
	256 Call Debug.Assert, X0
	257 Move X8, 0x435000
	258 Move W28, [X22+48]
	259 Move W29, [X22+16]
	260 Move X8, [X8+3760]
	261 Move X0, [X8]
	262 Call 0x1C17F10
	263 Move W3, 4
	264 Move W1, W28
	265 Move W2, W27
	266 Move W4, W29
	267 Move X25, X0
	268 Call Page..ctor, X0, X1, X2, X3, X4
	269 Compare X25, 0
	270 JumpIfEqual {462}
	271 Move X8, [X22+40]
	272 Move [X25+40], X8
	273 Move [X22+40], X25
	274 Move X8, [X25+24]
	275 Compare X8, 0
	276 JumpIfEqual {462}
	277 Move X0, [X8+64]
	278 Compare X0, 0
	279 JumpIfEqual {462}
	280 And W2, W26, 1
	281 Add X8, X31, 168
	282 Move W1, W24
	283 Move X28, X20
	284 Call GPUBufferAllocator.Allocate, X0, X1, X2
	285 Move X8, [X25+32]
	286 Compare X8, 0
	287 JumpIfEqual {462}
	288 Move X0, [X8+64]
	289 Compare X0, 0
	290 JumpIfEqual {462}
	291 And W2, W26, 1
	292 Add X8, X31, 144
	293 Move W1, W23
	294 Move X20, X21
	295 Call GPUBufferAllocator.Allocate, X0, X1, X2
	296 Move W8, [X31+172]
	297 Move X1, X31
	298 NotImplemented "Instruction CMP not yet implemented."
	299 NotImplemented "Instruction CSET not yet implemented."
	300 Call Debug.Assert, X0
	301 Move W8, [X31+148]
	302 Move X1, X31
	303 NotImplemented "Instruction CMP not yet implemented."
	304 NotImplemented "Instruction CSET not yet implemented."
	305 Call Debug.Assert, X0
	306 Move X0, [X20]
	307 Move X21, 0x435000
	308 Move X26, 0x435000
	309 Move W20, [X31+172]
	310 Move W8, [X0+224]
	311 Move X21, [X21+3768]
	312 Move X26, [X26+3776]
	313 Compare W8, 0
	314 JumpIfNotEqual {316}
	315 Call 0x1C17DFC
	316 Move X1, [X21]
	317 NotImplemented "Instruction CMP not yet implemented."
	318 NotImplemented "Instruction CSET not yet implemented."
	319 Move X2, X31
	320 Add X21, X31, 168
	321 Call Debug.Assert, X0, X1
	322 Move W27, [X31+148]
	323 Move X1, [X26]
	324 Move X2, X31
	325 NotImplemented "Instruction CMP not yet implemented."
	326 NotImplemented "Instruction CSET not yet implemented."
	327 Call Debug.Assert, X0, X1
	328 NotImplemented "Instruction CMP not yet implemented."
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Move X8, [X31+176]
	331 Compare X8, 0
	332 JumpIfEqual {351}
	333 Compare X25, 0
	334 JumpIfEqual {462}
	335 Move X8, [X25+24]
	336 Compare X8, 0
	337 JumpIfEqual {462}
	338 Move X0, [X8+64]
	339 Move V0, [X21]
	340 Move X8, [X31+184]
	341 Move [X31+7], V0
	342 Move [X31+128], X8
	343 Compare X0, 0
	344 JumpIfEqual {462}
	345 Move V0, [X31+7]
	346 Move X8, [X31+128]
	347 Add X1, X31, 80
	348 Move [X31+5], V0
	349 Move [X31+96], X8
	350 Call GPUBufferAllocator.Free, X0, X1
	351 Move X8, [X31+152]
	352 Compare X8, 0
	353 JumpIfEqual {372}
	354 Compare X25, 0
	355 JumpIfEqual {462}
	356 Move X8, [X25+24]
	357 Compare X8, 0
	358 JumpIfEqual {462}
	359 Move X0, [X8+64]
	360 Move V0, [X31+9]
	361 Move X8, [X31+160]
	362 Move [X31+7], V0
	363 Move [X31+128], X8
	364 Compare X0, 0
	365 JumpIfEqual {462}
	366 Move V0, [X31+7]
	367 Move X8, [X31+128]
	368 Add X1, X31, 48
	369 Move [X31+3], V0
	370 Move [X31+64], X8
	371 Call GPUBufferAllocator.Free, X0, X1
	372 Move W23, W31
	373 Move W24, W31
	374 Move [X31+144], X31
	375 Move [X31+152], X31
	376 Move [X31+160], X31
	377 Move [X31+168], X31
	378 Move [X31+176], X31
	379 Move [X31+184], X31
	380 Compare X25, 0
	381 JumpIfEqual {462}
	382 Move X0, [X25+24]
	383 Compare X0, 0
	384 JumpIfEqual {462}
	385 Move X8, 0x435000
	386 Move X8, [X8+3728]
	387 Move W27, [X31+168]
	388 Move W2, W24
	389 Move X3, [X8]
	390 Move W1, W27
	391 Call DataSet`1<Vertex>.RegisterUpdate, X0, X1, X2
	392 Move X0, [X25+32]
	393 Compare X0, 0
	394 JumpIfEqual {462}
	395 Move X8, 0x435000
	396 Move X8, [X8+3736]
	397 Move W26, [X31+144]
	398 Move W2, W23
	399 Move X3, [X8]
	400 Move W1, W26
	401 Call 0x29AD36C, X0, X1, X2
	402 Move X8, [X25+24]
	403 Compare X8, 0
	404 JumpIfEqual {462}
	405 Move X9, 0x435000
	406 Move X9, [X9+3744]
	407 Move X1, [X8+32]
	408 Move X2, [X8+40]
	409 Add X0, X31, 112
	410 Move W3, W27
	411 Move X5, [X9]
	412 Move W4, W24
	413 Move [X31+112], X31
	414 Move [X31+120], X31
	415 Call NativeSlice`1<Vertex>..ctor, X0, X1, X2, X3
	416 Move V0, [X31+7]
	417 Move X8, [X31+24]
	418 Move [X8], V0
	419 Move X8, [X25+32]
	420 Compare X8, 0
	421 JumpIfEqual {462}
	422 Move X9, 0x435000
	423 Move X9, [X9+3752]
	424 Move X1, [X8+32]
	425 Move X2, [X8+40]
	426 Add X0, X31, 32
	427 Move W3, W26
	428 Move X5, [X9]
	429 Move W4, W23
	430 Move [X31+32], X31
	431 Move [X31+40], X31
	432 Call NativeSlice`1<UInt16>..ctor, X0, X1, X2, X3
	433 Move V0, [X31+2]
	434 Move [X28], V0
	435 Compare X19, 0
	436 JumpIfEqual {462}
	437 Move [X19+80], X25
	438 Move X8, [X31+184]
	439 Move V0, [X21]
	440 Move X24, [X31+240]
	441 Move X23, [X31+248]
	442 Move X26, [X31+224]
	443 Move X25, [X31+232]
	444 Move [X19+40], X8
	445 Move [X19+24], V0
	446 Move X8, [X31+160]
	447 Move V0, [X31+9]
	448 Move X28, [X31+208]
	449 Move X27, [X31+216]
	450 Move X29, [X31+192]
	451 Move X30, [X31+200]
	452 Move [X19+64], X8
	453 Move [X19+3], V0
	454 Move W8, [X22+96]
	455 Move X22, [X31+256]
	456 Move X21, [X31+264]
	457 Move [X19+88], W8
	458 Move X20, [X31+272]
	459 Move X19, [X31+280]
	460 Add X31, X31, 288
	461 Return 
	462 Call 0x1C17F20

Method: System.Void UpdateAfterGPUUsedData(UnityEngine.UIElements.UIR.MeshHandle mesh, System.UInt32 vertexCount, System.UInt32 indexCount, out Unity.Collections.NativeSlice`1<UnityEngine.UIElements.Vertex> vertexData, out Unity.Collections.NativeSlice`1<System.UInt16> indexData, out System.UInt16 indexOffset, out UnityEngine.UIElements.UIR.UIRenderDevice/AllocToUpdate allocToUpdate, System.Boolean copyBackIndices)

Disassembly:
	0x03D30DB8 LDR W9, [X31 + 0x88]
	0x03D30DBC LDUR W10, [X31 + 0x8B]
	0x03D30DC0 STR V0, [X31 + 0x5]
	0x03D30DC4 STR X8, [X31 + 0x60]
	0x03D30DC8 STR W9, [X31 + 0x130]
	0x03D30DCC STUR W10, [X24 + 0xA3]
	0x03D30DD0 LDR W9, [X0 + 0x1C]
	0x03D30DD4 LDR X8, [X0 + 0x10]
	0x03D30DD8 LDR X10, [X25]
	0x03D30DDC MOV X23, X0
	0x03D30DE0 ADD W9, W9, 0x1
	0x03D30DE4 STR W9, [X0 + 0x1C]
	0x03D30DE8 CBZ X8, 0x3D31404
	0x03D30DEC LDRSW X9, [X23 + 0x18]
	0x03D30DF0 LDR W11, [X8 + 0x18]
	0x03D30DF4 CMP W9, W11
	0x03D30DF8 B.CS 0x3D30ED4
	0x03D30DFC ADD W10, W9, 0x1
	0x03D30E00 STR W10, [X23 + 0x18]
	0x03D30E04 LDR V0, [X31 + 0x5]
	0x03D30E08 LDR X10, [X31 + 0x60]
	0x03D30E0C MOVZ W11, 0x28
	0x03D30E10 MOVZ W12, 0x1
	0x03D30E14 MADD X8, X9, X11, X8
	0x03D30E18 STRB W12, [X8 + 0x40]
	0x03D30E1C STR V0, [X8 + 0x2]
	0x03D30E20 STP X10, X27, [X8 + 0x30]
	0x03D30E24 LDUR W9, [X24 + 0xA3]
	0x03D30E28 LDR W10, [X31 + 0x130]
	0x03D30E2C STR W9, [X8 + 0x44]
	0x03D30E30 STUR W10, [X8 + 0x41]
	0x03D30E34 B 0x3D30F14
	0x03D30E38 LDR W9, [X19 + 0x58]
	0x03D30E3C LDR W8, [X20 + 0x60]
	0x03D30E40 CMP W9, W8
	0x03D30E44 B.NE 0x3D3120C
	0x03D30E48 LDR X8, [X19 + 0x50]
	0x03D30E4C CBZ X8, 0x3D31404
	0x03D30E50 LDR X8, [X8 + 0x18]
	0x03D30E54 CBZ X8, 0x3D31404
	0x03D30E58 LDR X0, [X8 + 0x40]
	0x03D30E5C LDR X8, [X19 + 0x28]
	0x03D30E60 LDUR V0, [X19 + 0x18]
	0x03D30E64 STR X8, [X31 + 0x160]
	0x03D30E68 STR V0, [X31 + 0x15]
	0x03D30E6C CBZ X0, 0x3D31404
	0x03D30E70 LDR V0, [X31 + 0x15]
	0x03D30E74 LDR X8, [X31 + 0x160]
	0x03D30E78 ADD X1, X31, 0x30
	0x03D30E7C STR V0, [X31 + 0x3]
	0x03D30E80 STR X8, [X31 + 0x40]
	0x03D30E84 BL 0x3D309E0
	0x03D30E88 LDR X8, [X19 + 0x50]
	0x03D30E8C CBZ X8, 0x3D31404
	0x03D30E90 LDR X8, [X8 + 0x20]
	0x03D30E94 CBZ X8, 0x3D31404
	0x03D30E98 LDR X0, [X8 + 0x40]
	0x03D30E9C LDR X8, [X19 + 0x40]
	0x03D30EA0 LDR V0, [X19 + 0x3]
	0x03D30EA4 STR X8, [X31 + 0x100]
	0x03D30EA8 STR V0, [X31 + 0xF]
	0x03D30EAC CBZ X0, 0x3D31404
	0x03D30EB0 LDR V0, [X31 + 0xF]
	0x03D30EB4 LDR X8, [X31 + 0x100]
	0x03D30EB8 ADD X1, X31, 0x10
	0x03D30EBC ADD X29, X19, 0x18
	0x03D30EC0 ADD X25, X19, 0x30
	0x03D30EC4 STR V0, [X31 + 0x1]
	0x03D30EC8 STR X8, [X31 + 0x20]
	0x03D30ECC BL 0x3D309E0
	0x03D30ED0 B 0x3D311B8
	0x03D30ED4 LDR X8, [X10 + 0x20]
	0x03D30ED8 LDR V0, [X31 + 0x5]
	0x03D30EDC LDR X9, [X31 + 0x60]
	0x03D30EE0 LDR W10, [X31 + 0x130]
	0x03D30EE4 LDR X8, [X8 + 0xC0]
	0x03D30EE8 LDUR W11, [X24 + 0xA3]
	0x03D30EEC ADD X1, X31, 0x150
	0x03D30EF0 MOV X0, X23
	0x03D30EF4 LDR X2, [X8 + 0x70]
	0x03D30EF8 MOVZ W8, 0x1
	0x03D30EFC STR V0, [X31 + 0x15]
	0x03D30F00 STP X9, X27, [X31 + 0x160]
	0x03D30F04 STRB W8, [X31 + 0x170]
	0x03D30F08 STUR W10, [X24 + 0xE1]
	0x03D30F0C STR W11, [X31 + 0x174]
	0x03D30F10 BL 0x31614A8
	0x03D30F14 LDP V0, V1, [X31 + 0xF0]
	0x03D30F18 LDR V2, [X31 + 0x11]
	0x03D30F1C LDR X8, [X31 + 0x120]
	0x03D30F20 STR W31, [X31 + 0x128]
	0x03D30F24 STP V0, V1, [X31 + 0x50]
	0x03D30F28 STR V2, [X31 + 0x7]
	0x03D30F2C STR X8, [X31 + 0x80]
	0x03D30F30 STR V2, [X31 + 0x13]
	0x03D30F34 STR X8, [X31 + 0x140]
	0x03D30F38 STUR W31, [X24 + 0x9B]
	0x03D30F3C LDR W9, [X23 + 0x1C]
	0x03D30F40 LDR X8, [X23 + 0x10]
	0x03D30F44 LDR X10, [X25]
	0x03D30F48 ADD W9, W9, 0x1
	0x03D30F4C STR W9, [X23 + 0x1C]
	0x03D30F50 CBZ X8, 0x3D31404
	0x03D30F54 LDRSW X9, [X23 + 0x18]
	0x03D30F58 LDR W11, [X8 + 0x18]
	0x03D30F5C STR X21, [X31 + 0x8]
	0x03D30F60 CMP W9, W11
	0x03D30F64 B.CS 0x3D30FA0
	0x03D30F68 ADD W10, W9, 0x1
	0x03D30F6C STR W10, [X23 + 0x18]
	0x03D30F70 LDR V0, [X31 + 0x13]
	0x03D30F74 LDR X10, [X31 + 0x140]
	0x03D30F78 MOVZ W11, 0x28
	0x03D30F7C MADD X8, X9, X11, X8
	0x03D30F80 STRB W31, [X8 + 0x40]
	0x03D30F84 STR V0, [X8 + 0x2]
	0x03D30F88 STP X10, X27, [X8 + 0x30]
	0x03D30F8C LDUR W9, [X24 + 0x9B]
	0x03D30F90 LDR W10, [X31 + 0x128]
	0x03D30F94 STR W9, [X8 + 0x44]
	0x03D30F98 STUR W10, [X8 + 0x41]
	0x03D30F9C B 0x3D30FDC
	0x03D30FA0 LDR X8, [X10 + 0x20]
	0x03D30FA4 LDR V0, [X31 + 0x13]
	0x03D30FA8 LDR X9, [X31 + 0x140]
	0x03D30FAC LDR W10, [X31 + 0x128]
	0x03D30FB0 LDR X8, [X8 + 0xC0]
	0x03D30FB4 LDUR W11, [X24 + 0x9B]
	0x03D30FB8 ADD X1, X31, 0x150
	0x03D30FBC MOV X0, X23
	0x03D30FC0 LDR X2, [X8 + 0x70]
	0x03D30FC4 STR V0, [X31 + 0x15]
	0x03D30FC8 STP X9, X27, [X31 + 0x160]
	0x03D30FCC STRB W31, [X31 + 0x170]
	0x03D30FD0 STUR W10, [X24 + 0xE1]
	0x03D30FD4 STR W11, [X31 + 0x174]
	0x03D30FD8 BL 0x31614A8
	0x03D30FDC LDR X9, [X19 + 0x28]
	0x03D30FE0 LDUR V0, [X19 + 0x18]
	0x03D30FE4 LDR X8, [X19 + 0x50]
	0x03D30FE8 STR W31, [X31 + 0x128]
	0x03D30FEC STR X9, [X31 + 0x140]
	0x03D30FF0 STR V0, [X31 + 0x13]
	0x03D30FF4 STUR W31, [X24 + 0x9B]
	0x03D30FF8 LDR W10, [X23 + 0x1C]
	0x03D30FFC LDR X9, [X23 + 0x10]
	0x03D31000 LDR X11, [X25]
	0x03D31004 ADD W10, W10, 0x1
	0x03D31008 STR W10, [X23 + 0x1C]
	0x03D3100C CBZ X9, 0x3D31404
	0x03D31010 LDRSW X10, [X23 + 0x18]
	0x03D31014 LDR W12, [X9 + 0x18]
	0x03D31018 MOV X21, X20
	0x03D3101C MOV W20, W26
	0x03D31020 MOV W26, W22
	0x03D31024 CMP W10, W12
	0x03D31028 B.CS 0x3D31068
	0x03D3102C ADD W11, W10, 0x1
	0x03D31030 STR W11, [X23 + 0x18]
	0x03D31034 LDR V0, [X31 + 0x13]
	0x03D31038 LDR X11, [X31 + 0x140]
	0x03D3103C MOVZ W12, 0x28
	0x03D31040 MOVZ W13, 0x1
	0x03D31044 MADD X9, X10, X12, X9
	0x03D31048 STRB W13, [X9 + 0x40]
	0x03D3104C STR V0, [X9 + 0x2]
	0x03D31050 STP X11, X8, [X9 + 0x30]
	0x03D31054 LDUR W8, [X24 + 0x9B]
	0x03D31058 LDR W10, [X31 + 0x128]
	0x03D3105C STR W8, [X9 + 0x44]
	0x03D31060 STUR W10, [X9 + 0x41]
	0x03D31064 B 0x3D310A8
	0x03D31068 LDR X9, [X11 + 0x20]
	0x03D3106C LDR X10, [X31 + 0x140]
	0x03D31070 LDR V0, [X31 + 0x13]
	0x03D31074 LDR W11, [X31 + 0x128]
	0x03D31078 LDR X9, [X9 + 0xC0]
	0x03D3107C LDUR W12, [X24 + 0x9B]
	0x03D31080 ADD X1, X31, 0x150
	0x03D31084 MOV X0, X23
	0x03D31088 LDR X2, [X9 + 0x70]
	0x03D3108C STP X10, X8, [X31 + 0x160]
	0x03D31090 MOVZ W8, 0x1
	0x03D31094 STR V0, [X31 + 0x15]
	0x03D31098 STRB W8, [X31 + 0x170]
	0x03D3109C STUR W11, [X24 + 0xE1]
	0x03D310A0 STR W12, [X31 + 0x174]
	0x03D310A4 BL 0x31614A8
	0x03D310A8 LDR X9, [X19 + 0x40]
	0x03D310AC LDR V0, [X19 + 0x3]
	0x03D310B0 LDR X8, [X19 + 0x50]
	0x03D310B4 STR W31, [X31 + 0x128]
	0x03D310B8 STR X9, [X31 + 0x140]
	0x03D310BC STR V0, [X31 + 0x13]
	0x03D310C0 STUR W31, [X24 + 0x9B]
	0x03D310C4 LDR W11, [X23 + 0x1C]
	0x03D310C8 LDR X9, [X23 + 0x10]
	0x03D310CC LDR X10, [X25]
	0x03D310D0 ADD W11, W11, 0x1
	0x03D310D4 STR W11, [X23 + 0x1C]
	0x03D310D8 CBZ X9, 0x3D31404
	0x03D310DC LDRSW X11, [X23 + 0x18]
	0x03D310E0 LDR W12, [X9 + 0x18]
	0x03D310E4 ADRP X28, 0x433000
	0x03D310E8 LDR X28, [X28 + 0xF18]
	0x03D310EC MOV X22, X29
	0x03D310F0 ADD X29, X19, 0x18
	0x03D310F4 CMP W11, W12
	0x03D310F8 ADD X25, X19, 0x30
	0x03D310FC B.CS 0x3D31138
	0x03D31100 ADD W10, W11, 0x1
	0x03D31104 STR W10, [X23 + 0x18]
	0x03D31108 LDR V0, [X31 + 0x13]
	0x03D3110C LDR X10, [X31 + 0x140]
	0x03D31110 MOVZ W12, 0x28
	0x03D31114 MADD X9, X11, X12, X9
	0x03D31118 STRB W31, [X9 + 0x40]
	0x03D3111C STR V0, [X9 + 0x2]
	0x03D31120 STP X10, X8, [X9 + 0x30]
	0x03D31124 LDUR W8, [X24 + 0x9B]
	0x03D31128 LDR W10, [X31 + 0x128]
	0x03D3112C STR W8, [X9 + 0x44]
	0x03D31130 STUR W10, [X9 + 0x41]
	0x03D31134 B 0x3D31174
	0x03D31138 LDR X9, [X10 + 0x20]
	0x03D3113C LDR V0, [X31 + 0x13]
	0x03D31140 LDR X10, [X31 + 0x140]
	0x03D31144 LDR W11, [X31 + 0x128]
	0x03D31148 LDR X9, [X9 + 0xC0]
	0x03D3114C LDUR W12, [X24 + 0x9B]
	0x03D31150 ADD X1, X31, 0x150
	0x03D31154 MOV X0, X23
	0x03D31158 LDR X2, [X9 + 0x70]
	0x03D3115C STR V0, [X31 + 0x15]
	0x03D31160 STP X10, X8, [X31 + 0x160]
	0x03D31164 STRB W31, [X31 + 0x170]
	0x03D31168 STUR W11, [X24 + 0xE1]
	0x03D3116C STR W12, [X31 + 0x174]
	0x03D31170 BL 0x31614A8
	0x03D31174 LDR X3, [X28]
	0x03D31178 LDP V0, V1, [X31 + 0xF0]
	0x03D3117C LDR V2, [X31 + 0x11]
	0x03D31180 LDR X9, [X31 + 0x120]
	0x03D31184 LDR X0, [X31 + 0x8]
	0x03D31188 MOVN W8, 0x0
	0x03D3118C ADD X2, X31, 0x150
	0x03D31190 MOV W1, W26
	0x03D31194 STR W20, [X31 + 0x150]
	0x03D31198 STR W8, [X31 + 0x154]
	0x03D3119C STUR V0, [X24 + 0xC8]
	0x03D311A0 STUR V1, [X24 + 0xD8]
	0x03D311A4 STUR V2, [X24 + 0xE8]
	0x03D311A8 STP X9, X27, [X31 + 0x188]
	0x03D311AC STR X22, [X31 + 0x198]
	0x03D311B0 BL 0x31642D8
	0x03D311B4 MOV X20, X21
	0x03D311B8 STP X31, X31, [X29]
	0x03D311BC STR X31, [X29 + 0x10]
	0x03D311C0 STP X31, X31, [X25]
	0x03D311C4 STR X31, [X25 + 0x10]
	0x03D311C8 STR X31, [X19 + 0x50]
	0x03D311CC STR W31, [X19 + 0x5C]
	0x03D311D0 LDR X0, [X20 + 0x90]
	0x03D311D4 CBZ X0, 0x3D31404
	0x03D311D8 ADRP X8, 0x433000
	0x03D311DC LDR X8, [X8 + 0xF48]
	0x03D311E0 MOV X1, X19
	0x03D311E4 LDR X2, [X8]
	0x03D311E8 BL 0x2EF0E90
	0x03D311EC ADD X31, X31, 0x1A0
	0x03D311F0 LDP X20, X19, [X31 + 0x50]
	0x03D311F4 LDP X22, X21, [X31 + 0x40]
	0x03D311F8 LDP X24, X23, [X31 + 0x30]
	0x03D311FC LDP X26, X25, [X31 + 0x20]
	0x03D31200 LDP X28, X27, [X31 + 0x10]
	0x03D31204 LDP X29, X30, [X31], #0x60
	0x03D31208 RET
	0x03D3120C LDR X0, [X20 + 0x40]
	0x03D31210 CBZ X0, 0x3D31404
	0x03D31214 LDR W9, [X0 + 0x18]
	0x03D31218 LDR X2, [X23]
	0x03D3121C UDIV W10, W8, W9
	0x03D31220 MSUB W21, W10, W9, W8
	0x03D31224 MOV W1, W21
	0x03D31228 BL 0x301BCCC
	0x03D3122C LDR X9, [X19 + 0x28]
	0x03D31230 LDUR V0, [X19 + 0x18]
	0x03D31234 LDR X8, [X19 + 0x50]
	0x03D31238 STR W31, [X31 + 0x90]
	0x03D3123C STR X9, [X31 + 0xC0]
	0x03D31240 STR V0, [X31 + 0xB]
	0x03D31244 STUR W31, [X24 + 0x3]
	0x03D31248 CBZ X0, 0x3D31404
	0x03D3124C LDR V0, [X31 + 0xB]
	0x03D31250 LDR X9, [X31 + 0xC0]
	0x03D31254 LDR W10, [X31 + 0x90]
	0x03D31258 LDUR W11, [X24 + 0x3]
	0x03D3125C STR V0, [X31 + 0xF]
	0x03D31260 STR X9, [X31 + 0x100]
	0x03D31264 STR W10, [X31 + 0x50]
	0x03D31268 STUR W11, [X31 + 0x53]
	0x03D3126C LDR W10, [X0 + 0x1C]
	0x03D31270 LDR X9, [X0 + 0x10]
	0x03D31274 LDR X11, [X25]
	0x03D31278 ADD W10, W10, 0x1
	0x03D3127C STR W10, [X0 + 0x1C]
	0x03D31280 CBZ X9, 0x3D31404
	0x03D31284 LDRSW X10, [X0 + 0x18]
	0x03D31288 LDR W12, [X9 + 0x18]
	0x03D3128C CMP W10, W12
	0x03D31290 B.CS 0x3D312D0
	0x03D31294 ADD W11, W10, 0x1
	0x03D31298 STR W11, [X0 + 0x18]
	0x03D3129C LDR V0, [X31 + 0xF]
	0x03D312A0 LDR X11, [X31 + 0x100]
	0x03D312A4 MOVZ W12, 0x28
	0x03D312A8 MOVZ W13, 0x1
	0x03D312AC MADD X9, X10, X12, X9
	0x03D312B0 STRB W13, [X9 + 0x40]
	0x03D312B4 STR V0, [X9 + 0x2]
	0x03D312B8 STP X11, X8, [X9 + 0x30]
	0x03D312BC LDUR W8, [X31 + 0x53]
	0x03D312C0 LDR W10, [X31 + 0x50]
	0x03D312C4 STR W8, [X9 + 0x44]
	0x03D312C8 STUR W10, [X9 + 0x41]
	0x03D312CC B 0x3D3130C
	0x03D312D0 LDR X9, [X11 + 0x20]
	0x03D312D4 LDR X10, [X31 + 0x100]
	0x03D312D8 LDR V0, [X31 + 0xF]
	0x03D312DC LDR W11, [X31 + 0x50]
	0x03D312E0 LDR X9, [X9 + 0xC0]
	0x03D312E4 LDUR W12, [X31 + 0x53]
	0x03D312E8 ADD X1, X31, 0x150
	0x03D312EC LDR X2, [X9 + 0x70]
	0x03D312F0 STP X10, X8, [X31 + 0x160]
	0x03D312F4 MOVZ W8, 0x1
	0x03D312F8 STR V0, [X31 + 0x15]
	0x03D312FC STRB W8, [X31 + 0x170]
	0x03D31300 STUR W11, [X24 + 0xE1]
	0x03D31304 STR W12, [X31 + 0x174]
	0x03D31308 BL 0x31614A8
	0x03D3130C LDR X0, [X20 + 0x40]
	0x03D31310 CBZ X0, 0x3D31404
	0x03D31314 LDR X2, [X23]
	0x03D31318 MOV W1, W21
	0x03D3131C BL 0x301BCCC
	0x03D31320 LDR X9, [X19 + 0x40]
	0x03D31324 LDR V0, [X19 + 0x3]
	0x03D31328 LDR X8, [X19 + 0x50]
	0x03D3132C STR W31, [X31 + 0x128]
	0x03D31330 STR X9, [X31 + 0x60]
	0x03D31334 STR V0, [X31 + 0x5]
	0x03D31338 STUR W31, [X24 + 0x9B]
	0x03D3133C CBZ X0, 0x3D31404
	0x03D31340 LDR V0, [X31 + 0x5]
	0x03D31344 LDR X9, [X31 + 0x60]
	0x03D31348 LDR W10, [X31 + 0x128]
	0x03D3134C LDUR W11, [X24 + 0x9B]
	0x03D31350 STR V0, [X31 + 0xF]
	0x03D31354 STR X9, [X31 + 0x100]
	0x03D31358 STR W10, [X31 + 0x130]
	0x03D3135C STUR W11, [X24 + 0xA3]
	0x03D31360 LDR W11, [X0 + 0x1C]
	0x03D31364 LDR X9, [X0 + 0x10]
	0x03D31368 LDR X10, [X25]
	0x03D3136C ADD W11, W11, 0x1
	0x03D31370 STR W11, [X0 + 0x1C]
	0x03D31374 CBZ X9, 0x3D31404
	0x03D31378 LDRSW X11, [X0 + 0x18]
	0x03D3137C LDR W12, [X9 + 0x18]
	0x03D31380 ADD X29, X19, 0x18
	0x03D31384 ADD X25, X19, 0x30
	0x03D31388 CMP W11, W12
	0x03D3138C B.CS 0x3D313C8
	0x03D31390 ADD W10, W11, 0x1
	0x03D31394 STR W10, [X0 + 0x18]
	0x03D31398 LDR V0, [X31 + 0xF]
	0x03D3139C LDR X10, [X31 + 0x100]
	0x03D313A0 MOVZ W12, 0x28
	0x03D313A4 MADD X9, X11, X12, X9
	0x03D313A8 STRB W31, [X9 + 0x40]
	0x03D313AC STR V0, [X9 + 0x2]
	0x03D313B0 STP X10, X8, [X9 + 0x30]
	0x03D313B4 LDUR W8, [X24 + 0xA3]
	0x03D313B8 LDR W10, [X31 + 0x130]
	0x03D313BC STR W8, [X9 + 0x44]
	0x03D313C0 STUR W10, [X9 + 0x41]
	0x03D313C4 B 0x3D311B8
	0x03D313C8 LDR X9, [X10 + 0x20]
	0x03D313CC LDR V0, [X31 + 0xF]
	0x03D313D0 LDR X10, [X31 + 0x100]
	0x03D313D4 LDR W11, [X31 + 0x130]
	0x03D313D8 LDR X9, [X9 + 0xC0]
	0x03D313DC LDUR W12, [X24 + 0xA3]
	0x03D313E0 ADD X1, X31, 0x150
	0x03D313E4 LDR X2, [X9 + 0x70]
	0x03D313E8 STR V0, [X31 + 0x15]
	0x03D313EC STP X10, X8, [X31 + 0x160]
	0x03D313F0 STRB W31, [X31 + 0x170]
	0x03D313F4 STUR W11, [X24 + 0xE1]
	0x03D313F8 STR W12, [X31 + 0x174]
	0x03D313FC BL 0x31614A8
	0x03D31400 B 0x3D311B8
	0x03D31404 BL 0x1C16F20
	0x03D31408 STP X30, X21, [X31 - 0x20]!
	0x03D3140C STP X20, X19, [X31 + 0x10]
	0x03D31410 ADRP X20, 0x6B6000
	0x03D31414 LDRB W8, [X20 + 0xB1F]
	0x03D31418 MOV X19, X0
	0x03D3141C TBNZ X8, 0x0, 0x3D31440
	0x03D31420 ADRP X0, 0x433000
	0x03D31424 LDR X0, [X0 + 0xF50]
	0x03D31428 BL 0x1C16CF4
	0x03D3142C ADRP X0, 0x433000
	0x03D31430 LDR X0, [X0 + 0xF58]
	0x03D31434 BL 0x1C16CF4
	0x03D31438 MOVZ W8, 0x1
	0x03D3143C STRB W8, [X20 + 0xB1F]
	0x03D31440 MOV X0, X19
	0x03D31444 BL 0x3D314AC
	0x03D31448 LDR W8, [X19 + 0x60]
	0x03D3144C LDR X20, [X19 + 0x28]
	0x03D31450 MOVI V0.2D, 0x0
	0x03D31454 STUR V0, [X19 + 0x7C]
	0x03D31458 STUR V0, [X19 + 0x6C]
	0x03D3145C STR W8, [X19 + 0x68]
	0x03D31460 CBZ X20, 0x3D3149C
	0x03D31464 ADRP X19, 0x433000
	0x03D31468 ADRP X21, 0x433000
	0x03D3146C LDR X19, [X19 + 0xF50]
	0x03D31470 LDR X21, [X21 + 0xF58]
	0x03D31474 LDR X0, [X20 + 0x18]
	0x03D31478 CBZ X0, 0x3D314A8
	0x03D3147C LDR X1, [X19]
	0x03D31480 BL 0x29ACCE8
	0x03D31484 LDR X0, [X20 + 0x20]
	0x03D31488 CBZ X0, 0x3D314A8
	0x03D3148C LDR X1, [X21]
	0x03D31490 BL 0x29AC570
	0x03D31494 LDR X20, [X20 + 0x28]
	0x03D31498 CBNZ X20, 0x3D31474
	0x03D3149C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 448
	014 Move [X31+32], X4
	015 Move [X31+28], W3
	016 Move [X31+44], W2
	017 Move W8, [X31+544]
	018 Move X22, 0x6B8000
	019 Move X29, 0x3C4000
	020 Move W9, [X22+2845]
	021 Move X29, [X29+2600]
	022 Move X20, X7
	023 Move X21, X6
	024 Move X24, X5
	025 Move X23, X1
	026 Move X26, X0
	027 And W19, W8, 1
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {73}
	032 Move X0, 0x435000
	033 Move X0, [X0+3728]
	034 Call 0x1C17CF4
	035 Move X0, 0x435000
	036 Move X0, [X0+3736]
	037 Call 0x1C17CF4
	038 Move X0, 0x3C4000
	039 Move X0, [X0+2600]
	040 Call 0x1C17CF4
	041 Move X0, 0x435000
	042 Move X0, [X0+3808]
	043 Call 0x1C17CF4
	044 Move X0, 0x435000
	045 Move X0, [X0+3816]
	046 Call 0x1C17CF4
	047 Move X0, 0x435000
	048 Move X0, [X0+3824]
	049 Call 0x1C17CF4
	050 Move X0, 0x435000
	051 Move X0, [X0+3832]
	052 Call 0x1C17CF4
	053 Move X0, 0x435000
	054 Move X0, [X0+3840]
	055 Call 0x1C17CF4
	056 Move X0, 0x435000
	057 Move X0, [X0+3848]
	058 Call 0x1C17CF4
	059 Move X0, 0x435000
	060 Move X0, [X0+3856]
	061 Call 0x1C17CF4
	062 Move X0, 0x435000
	063 Move X0, [X0+3864]
	064 Call 0x1C17CF4
	065 Move X0, 0x435000
	066 Move X0, [X0+3744]
	067 Call 0x1C17CF4
	068 Move X0, 0x435000
	069 Move X0, [X0+3752]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X22+2845], W8
	073 Move V0, [X26+96]
	074 NotImplemented "Instruction MOVI not yet implemented."
	075 Move X25, X20
	076 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	077 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	078 Add W8, W8, 1
	079 Move [X26+100], W8
	080 Move [X20], D0
	081 Move [X20+8], X23
	082 Move [X25+16], V1
	083 Move [X20+32], V1
	084 Move [X20+40], V1
	085 Move [X20+64], X31
	086 Move [X20+72], W19
	087 Move [X20+73], W31
	088 Move [X20+76], W31
	089 Move X0, [X29]
	090 Move W19, [X26+100]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 NotImplemented "Instruction CMP not yet implemented."
	096 NotImplemented "Instruction CSET not yet implemented."
	097 Move X1, X31
	098 Call Debug.Assert, X0
	099 Compare X23, 0
	100 JumpIfEqual {499}
	101 Move X19, 0x435000
	102 Move W22, [X23+92]
	103 Move X19, [X19+3848]
	104 Compare W22, 0
	105 JumpIfEqual {258}
	106 Move X0, [X26+72]
	107 Compare X0, 0
	108 JumpIfEqual {499}
	109 Move W8, [X23+88]
	110 Move W9, [X0+24]
	111 Move X2, [X19]
	112 Move [X31+8], X24
	113 Move [X31+16], X21
	114 NotImplemented "Instruction SDIV not yet implemented."
	115 NotImplemented "Instruction MSUB not yet implemented."
	116 Call List`1<Object>.get_Item, X0, X1
	117 Compare X0, 0
	118 JumpIfEqual {499}
	119 Move X8, 0x435000
	120 Move X8, [X8+3856]
	121 Subtract W28, W22, 1
	122 Move W1, W28
	123 Move X27, X0
	124 Move X2, [X8]
	125 Add X8, X31, 320
	126 Add X19, X31, 240
	127 Call List`1<AllocToUpdate>.get_Item, X0, X1
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 Move X8, [X31+376]
	132 Move X22, [X31+384]
	133 Move X0, [X29]
	134 Move [X31+176], V0
	135 Move [X31+184], V1
	136 Move [X31+13], V2
	137 Move [X31+224], X8
	138 Move W24, [X31+320]
	139 Move X29, [X31+392]
	140 Move W8, [X0+224]
	141 Move W21, [X23+92]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction CSET not yet implemented."
	147 Move X1, X31
	148 Call Debug.Assert, X0
	149 Move W8, [X20+72]
	150 And W9, W29, 1
	151 Add X2, X31, 320
	152 Move X0, X27
	153 Or W8, W8, W9
	154 Move [X20+72], W8
	155 Move V0, [X31+176]
	156 Move V1, [X31+192]
	157 Move V2, [X31+13]
	158 Move X8, [X31+224]
	159 Move TEMP, 0
	160 Not TEMP
	161 Move W9, TEMP
	162 Move [X31+240], V0
	163 Move [X31+248], V1
	164 Move [X31+17], V2
	165 Move [X31+288], X8
	166 Move X8, [X31+264]
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 Move W1, W28
	169 Move [X25+16], X8
	170 Move [X25], V0
	171 Move X8, [X31+224]
	172 Move V1, [X31+176]
	173 Move V0, [X31+192]
	174 Move V2, [X31+13]
	175 Move [X31+96], X8
	176 Move [X31+48], V1
	177 Move [X31+56], V0
	178 Move [X31+5], V2
	179 Move [X20+40], V2
	180 Move [X20+56], X8
	181 Move [X20+64], X22
	182 Move V0, [X31+176]
	183 Move V1, [X31+192]
	184 Move [X31+320], W24
	185 Move [X31+324], W9
	186 Move X9, 0x434000
	187 Move [X19+88], V0
	188 Move [X19+104], V1
	189 Move V0, [X31+13]
	190 Move X8, [X31+224]
	191 Move X9, [X9+3864]
	192 Move [X19+120], V0
	193 Move [X31+376], X8
	194 Move [X31+384], X22
	195 Move X3, [X9]
	196 Move [X31+392], X29
	197 Call List`1<AllocToUpdate>.set_Item, X0, X1, X2
	198 Move X0, [X26+64]
	199 Compare X0, 0
	200 JumpIfEqual {499}
	201 Move X10, 0x434000
	202 Move W8, [X26+96]
	203 Move W9, [X0+24]
	204 Move X10, [X10+3840]
	205 Move X2, [X10]
	206 NotImplemented "Instruction UDIV not yet implemented."
	207 NotImplemented "Instruction MSUB not yet implemented."
	208 Call List`1<Object>.get_Item, X0, X1
	209 Move X9, [X23+40]
	210 NotImplemented "Instruction LDUR not yet implemented."
	211 Move X8, [X23+80]
	212 Move X24, [X31+8]
	213 Move X21, [X31+16]
	214 Move X29, [X31+32]
	215 Move W25, [X31+44]
	216 Move [X31+136], W31
	217 Move [X31+160], X9
	218 Move [X31+9], V0
	219 Move [X31+139], W31
	220 Compare X0, 0
	221 JumpIfEqual {499}
	222 Move X22, 0x434000
	223 Move X22, [X22+3816]
	224 Move V0, [X31+9]
	225 Move X9, [X31+160]
	226 Move W10, [X31+136]
	227 NotImplemented "Instruction LDUR not yet implemented."
	228 Move [X31+26], V0
	229 Move [X31+432], X9
	230 Move [X31+408], W10
	231 Move [X19+171], W11
	232 Move W10, [X0+28]
	233 Move X9, [X0+16]
	234 Move X11, [X22]
	235 Move X27, X0
	236 Add W10, W10, 1
	237 Move [X0+28], W10
	238 Compare X9, 0
	239 JumpIfEqual {499}
	240 NotImplemented "Instruction LDRSW not yet implemented."
	241 Move W12, [X9+24]
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Add W11, W10, 1
	244 Move [X27+24], W11
	245 Move V0, [X31+26]
	246 Move X11, [X31+432]
	247 Move W12, 40
	248 Move W13, 1
	249 NotImplemented "Instruction MADD not yet implemented."
	250 Move [X9+64], W13
	251 Move [X9+2], V0
	252 Move [X9+48], X11
	253 Move [X9+56], X8
	254 NotImplemented "Instruction LDUR not yet implemented."
	255 Move W10, [X31+408]
	256 Move [X9+68], W8
	257 Move [X9+65], W10
	258 Move X8, [X23+40]
	259 NotImplemented "Instruction LDUR not yet implemented."
	260 Move W22, [X31+28]
	261 Move X29, [X31+32]
	262 Move [X25+16], X8
	263 Move [X25], V0
	264 Move X8, [X23+64]
	265 Move V0, [X23+3]
	266 Move W25, [X31+44]
	267 Move [X20+56], X8
	268 Move [X20+40], V0
	269 Move X1, [X23+80]
	270 Move [X20+64], X1
	271 Move X9, [X11+32]
	272 Move X10, [X31+432]
	273 Move V0, [X31+26]
	274 Move W11, [X31+408]
	275 Move X9, [X9+192]
	276 NotImplemented "Instruction LDUR not yet implemented."
	277 Add X1, X31, 320
	278 Move X0, X27
	279 Move X2, [X9+112]
	280 Move [X31+336], X10
	281 Move [X31+344], X8
	282 Move W8, 1
	283 Move [X31+20], V0
	284 Move [X31+352], W8
	285 Move [X19+113], W11
	286 Move [X31+356], W12
	287 Call List`1<AllocToFree>.AddWithResize, X0, X1
	288 Move X9, [X23+64]
	289 Move V0, [X23+3]
	290 Move X8, [X23+80]
	291 Move [X31+408], W31
	292 Move [X31+432], X9
	293 Move [X31+26], V0
	294 Move [X19+171], W31
	295 Move W10, [X27+28]
	296 Move X9, [X27+16]
	297 Move X11, [X22]
	298 Add W10, W10, 1
	299 Move [X27+28], W10
	300 Compare X9, 0
	301 JumpIfEqual {499}
	302 NotImplemented "Instruction LDRSW not yet implemented."
	303 Move W12, [X9+24]
	304 Move W22, [X31+28]
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Add W11, W10, 1
	307 Move [X27+24], W11
	308 Move V0, [X31+26]
	309 Move X11, [X31+432]
	310 Move W12, 40
	311 NotImplemented "Instruction MADD not yet implemented."
	312 Move [X9+64], W31
	313 Move [X9+2], V0
	314 Move [X9+48], X11
	315 Move [X9+56], X8
	316 NotImplemented "Instruction LDUR not yet implemented."
	317 Move W10, [X31+408]
	318 Move [X9+68], W8
	319 Move [X9+65], W10
	320 Move X9, [X11+32]
	321 Move V0, [X31+26]
	322 Move X10, [X31+432]
	323 Move W11, [X31+408]
	324 Move X9, [X9+192]
	325 NotImplemented "Instruction LDUR not yet implemented."
	326 Add X1, X31, 320
	327 Move X0, X27
	328 Move X2, [X9+112]
	329 Move [X31+20], V0
	330 Move [X31+336], X10
	331 Move [X31+344], X8
	332 Move [X31+352], W31
	333 Move [X19+113], W11
	334 Move [X31+356], W12
	335 Call List`1<AllocToFree>.AddWithResize, X0, X1
	336 Move X19, 0x434000
	337 Move X1, [X23+80]
	338 Move X19, [X19+3848]
	339 Add X27, X23, 24
	340 Add X28, X23, 48
	341 Move W6, 1
	342 Move W2, W25
	343 Move W3, W22
	344 Move X4, X27
	345 Move X5, X28
	346 Call UIRenderDevice.TryAllocFromPage, X0, X1, X2, X3, X4, X5, X6
	347 Move TEMP, X0
	348 And TEMP, TEMP, 1
	349 Compare TEMP, 1
	350 JumpIfNotEqual {375}
	351 Move X8, [X23+80]
	352 Compare X8, 0
	353 JumpIfEqual {499}
	354 Move X0, [X8+24]
	355 Compare X0, 0
	356 JumpIfEqual {499}
	357 Move X8, 0x434000
	358 Move W1, [X23+24]
	359 Move W2, [X23+28]
	360 Move X8, [X8+3728]
	361 Move X3, [X8]
	362 Call DataSet`1<Vertex>.RegisterUpdate, X0, X1, X2
	363 Move X8, [X23+80]
	364 Compare X8, 0
	365 JumpIfEqual {499}
	366 Move X0, [X8+32]
	367 Compare X0, 0
	368 JumpIfEqual {499}
	369 Move X8, 0x434000
	370 Move W1, [X23+48]
	371 Move W2, [X23+52]
	372 Move X8, [X8+3736]
	373 Move X3, [X8]
	374 Call 0x29AD36C, X0, X1, X2
	375 Move W6, 1
	376 Move X0, X26
	377 Move X1, X23
	378 Move W2, W25
	379 Move W3, W22
	380 Move X4, X29
	381 Move X5, X24
	382 Call UIRenderDevice.Allocate, X0, X1, X2, X3, X4, X5, X6
	383 Move W8, 0xAAAB
	384 NotImplemented "Instruction MOVK not yet implemented."
	385 NotImplemented "Instruction UMADDL not yet implemented."
	386 Move X8, X8
	387 ShiftRight X8, 33
	388 And X8, X8, 0x7FFFFFFF
	389 Move [X23+72], W8
	390 Move V0, [X20]
	391 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	392 Move [X23+88], D0
	393 Move X0, [X26+72]
	394 Compare X0, 0
	395 JumpIfEqual {499}
	396 Move W8, [X26+96]
	397 NotImplemented "Instruction LDRSW not yet implemented."
	398 Move X2, [X19]
	399 NotImplemented "Instruction SDIV not yet implemented."
	400 NotImplemented "Instruction MSUB not yet implemented."
	401 Call List`1<Object>.get_Item, X0, X1
	402 Move X26, X0
	403 Add X0, X31, 48
	404 Move W2, 80
	405 Move X1, X20
	406 Call 0x3EB2AC0
	407 Compare X26, 0
	408 JumpIfEqual {499}
	409 Move X8, 0x434000
	410 Move X8, [X8+3808]
	411 Add X0, X31, 240
	412 Add X1, X31, 48
	413 Move W2, 80
	414 Move X19, [X8]
	415 Call 0x3EB2AC0
	416 Move W9, [X26+28]
	417 Move X8, [X26+16]
	418 Add W9, W9, 1
	419 Move [X26+28], W9
	420 Compare X8, 0
	421 JumpIfEqual {499}
	422 NotImplemented "Instruction LDRSW not yet implemented."
	423 Move W10, [X8+24]
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Move W11, 80
	426 NotImplemented "Instruction MADD not yet implemented."
	427 Add W10, W9, 1
	428 Add X0, X8, 32
	429 Add X1, X31, 240
	430 Move W2, 80
	431 Move [X26+24], W10
	432 Call 0x3EB2AC0
	433 Move X8, [X19+32]
	434 Add X0, X31, 320
	435 Add X1, X31, 240
	436 Move W2, 80
	437 Move X8, [X8+192]
	438 Move X25, [X8+112]
	439 Call 0x3EB2AC0
	440 Move X2, X25
	441 Move W25, [X31+44]
	442 Add X1, X31, 320
	443 Move X0, X26
	444 Call List`1<AllocToUpdate>.AddWithResize, X0, X1
	445 Move X8, [X23+80]
	446 Compare X8, 0
	447 JumpIfEqual {499}
	448 Move X8, [X8+24]
	449 Compare X8, 0
	450 JumpIfEqual {499}
	451 Move X9, 0x434000
	452 Move X9, [X9+3744]
	453 Move X1, [X8+32]
	454 Move X2, [X8+40]
	455 Move W3, [X23+24]
	456 Add X0, X31, 320
	457 Move X5, [X9]
	458 Move W4, W25
	459 Move [X31+320], X31
	460 Move [X31+328], X31
	461 Call NativeSlice`1<Vertex>..ctor, X0, X1, X2, X3
	462 Move V0, [X31+20]
	463 Move [X29], V0
	464 Move X8, [X23+80]
	465 Compare X8, 0
	466 JumpIfEqual {499}
	467 Move X8, [X8+32]
	468 Compare X8, 0
	469 JumpIfEqual {499}
	470 Move X9, 0x434000
	471 Move X9, [X9+3752]
	472 Move X1, [X8+32]
	473 Move X2, [X8+40]
	474 Move W3, [X28]
	475 Add X0, X31, 240
	476 Move X5, [X9]
	477 Move W4, W22
	478 Move [X31+240], X31
	479 Move [X31+248], X31
	480 Call NativeSlice`1<UInt16>..ctor, X0, X1, X2, X3
	481 Move V0, [X31+15]
	482 Move [X24], V0
	483 Move W8, [X27]
	484 NotImplemented "Instruction STRH not yet implemented."
	485 Add X31, X31, 448
	486 Move X20, [X31+80]
	487 Move X19, [X31+88]
	488 Move X22, [X31+64]
	489 Move X21, [X31+72]
	490 Move X24, [X31+48]
	491 Move X23, [X31+56]
	492 Move X26, [X31+32]
	493 Move X25, [X31+40]
	494 Move X28, [X31+16]
	495 Move X27, [X31+24]
	496 Move X29, [X31+96]
	497 Move X30, [X31+104]
	498 Return 
	499 Call 0x1C17F20

Method: System.Void Free(UnityEngine.UIElements.UIR.MeshHandle mesh)

Disassembly:
	0x03D31BFC LDR W8, [X31 + 0x220]
	0x03D31C00 LDR V0, [X31 + 0x21]
	0x03D31C04 STR W8, [X20 + 0x10]
	0x03D31C08 STR V0, [X20]
	0x03D31C0C STR W22, [X29 + 0x30]
	0x03D31C10 LDR W8, [X31 + 0x200]
	0x03D31C14 LDR V0, [X31 + 0x1F]
	0x03D31C18 STR X28, [X29 + 0x50]
	0x03D31C1C STR W31, [X29 + 0x5C]
	0x03D31C20 STR W8, [X29 + 0x44]
	0x03D31C24 STUR V0, [X29 + 0x34]
	0x03D31C28 ADRP X28, 0x433000
	0x03D31C2C LDR X28, [X28 + 0xF70]
	0x03D31C30 B 0x3D3187C
	0x03D31C34 ADRP X8, 0x433000
	0x03D31C38 LDR X8, [X8 + 0xF68]
	0x03D31C3C ADD X0, X31, 0x110
	0x03D31C40 LDR X1, [X8]
	0x03D31C44 BL 0x2BE3DB4
	0x03D31C48 LDP X20, X19, [X31 + 0x10]
	0x03D31C4C LDR X9, [X31 + 0x8]
	0x03D31C50 LDP W2, W8, [X9 + 0x18]
	0x03D31C54 ADD W8, W8, 0x1
	0x03D31C58 CMP W2, 0x1
	0x03D31C5C STP W31, W8, [X9 + 0x18]
	0x03D31C60 B.LT 0x3D31C74
	0x03D31C64 LDR X0, [X9 + 0x10]
	0x03D31C68 MOV W1, W31
	0x03D31C6C MOV X3, X31
	0x03D31C70 BL 0x339FA34
	0x03D31C74 MOV X0, X20
	0x03D31C78 BL 0x3D33C28
	0x03D31C7C LDR X8, [X19 + 0x28]
	0x03D31C80 LDR X9, [X31 + 0x228]
	0x03D31C84 CMP X8, X9
	0x03D31C88 B.NE 0x3D31CFC
	0x03D31C8C ADD X31, X31, 0x230
	0x03D31C90 LDP X20, X19, [X31 + 0x50]
	0x03D31C94 LDP X22, X21, [X31 + 0x40]
	0x03D31C98 LDP X24, X23, [X31 + 0x30]
	0x03D31C9C LDP X26, X25, [X31 + 0x20]
	0x03D31CA0 LDP X28, X27, [X31 + 0x10]
	0x03D31CA4 LDP X29, X30, [X31], #0x60
	0x03D31CA8 RET
	0x03D31CAC BL 0x1C16F20
	0x03D31CB0 BL 0x1C16F20
	0x03D31CB4 BL 0x1C16F20
	0x03D31CB8 BL 0x1C16F20
	0x03D31CBC BL 0x1C16F20
	0x03D31CC0 BL 0x1C16F20
	0x03D31CC4 BL 0x1C16F20
	0x03D31CC8 BL 0x1C16F20
	0x03D31CCC BL 0x1C16F20
	0x03D31CD0 BL 0x1C16F20
	0x03D31CD4 BL 0x1C16F20
	0x03D31CD8 BL 0x1C16F20
	0x03D31CDC BL 0x1C16F20
	0x03D31CE0 BL 0x1C16F20
	0x03D31CE4 BL 0x1C16F20
	0x03D31CE8 BL 0x1C16F20
	0x03D31CEC BL 0x1C16F20
	0x03D31CF0 BL 0x1C16F20
	0x03D31CF4 BL 0x1C16F20
	0x03D31CF8 BL 0x1C16F28
	0x03D31CFC BL 0x3EB1B20
	0x03D31D00 B 0x3D31DD8
	0x03D31D04 B 0x3D31DD8
	0x03D31D08 B 0x3D31DD8
	0x03D31D0C B 0x3D31DD8
	0x03D31D10 B 0x3D31DD8
	0x03D31D14 B 0x3D31DD8
	0x03D31D18 B 0x3D31DD8
	0x03D31D1C B 0x3D31DD8
	0x03D31D20 B 0x3D31DD8
	0x03D31D24 B 0x3D31DD8
	0x03D31D28 B 0x3D31DD8
	0x03D31D2C B 0x3D31DD8
	0x03D31D30 B 0x3D31DD8
	0x03D31D34 B 0x3D31DD8
	0x03D31D38 B 0x3D31DD8
	0x03D31D3C B 0x3D31DD8
	0x03D31D40 B 0x3D31DD8
	0x03D31D44 B 0x3D31DD8
	0x03D31D48 B 0x3D31DD8
	0x03D31D4C B 0x3D31DD8
	0x03D31D50 B 0x3D31DD8
	0x03D31D54 B 0x3D31D7C
	0x03D31D58 B 0x3D31D7C
	0x03D31D5C B 0x3D31D7C
	0x03D31D60 B 0x3D31D7C
	0x03D31D64 B 0x3D31D7C
	0x03D31D68 B 0x3D31D7C
	0x03D31D6C B 0x3D31D7C
	0x03D31D70 B 0x3D31D7C
	0x03D31D74 B 0x3D31DD8
	0x03D31D78 B 0x3D31DD8
	0x03D31D7C MOV X22, X0
	0x03D31D80 CMP W1, 0x1
	0x03D31D84 B.NE 0x3D31DB0
	0x03D31D88 MOV X0, X22
	0x03D31D8C BL 0x3EB1AD0
	0x03D31D90 LDR X23, [X0]
	0x03D31D94 BL 0x3EB1AE0
	0x03D31D98 LDR X1, [X25]
	0x03D31D9C ADD X0, X31, 0x190
	0x03D31DA0 BL 0x2BE3B9C
	0x03D31DA4 CBZ X23, 0x3D317E8
	0x03D31DA8 MOV X0, X23
	0x03D31DAC BL 0x1C16F18
	0x03D31DB0 MOV X23, X31
	0x03D31DB4 B 0x3D31DBC
	0x03D31DB8 MOV X22, X0
	0x03D31DBC LDR X1, [X25]
	0x03D31DC0 ADD X0, X31, 0x190
	0x03D31DC4 BL 0x2BE3B9C
	0x03D31DC8 CBZ X23, 0x3D31E3C
	0x03D31DCC MOV X0, X23
	0x03D31DD0 BL 0x1C16F18
	0x03D31DD4 B 0x3D31DD8
	0x03D31DD8 LDP X20, X19, [X31 + 0x10]
	0x03D31DDC MOV X22, X0
	0x03D31DE0 CMP W1, 0x1
	0x03D31DE4 B.NE 0x3D31E18
	0x03D31DE8 MOV X0, X22
	0x03D31DEC BL 0x3EB1AD0
	0x03D31DF0 LDR X21, [X0]
	0x03D31DF4 BL 0x3EB1AE0
	0x03D31DF8 ADRP X8, 0x433000
	0x03D31DFC LDR X8, [X8 + 0xF68]
	0x03D31E00 ADD X0, X31, 0x110
	0x03D31E04 LDR X1, [X8]
	0x03D31E08 BL 0x2BE3DB4
	0x03D31E0C CBZ X21, 0x3D31C4C
	0x03D31E10 MOV X0, X21
	0x03D31E14 BL 0x1C16F18
	0x03D31E18 MOV X21, X31
	0x03D31E1C B 0x3D31E24
	0x03D31E20 MOV X22, X0
	0x03D31E24 ADRP X8, 0x433000
	0x03D31E28 LDR X8, [X8 + 0xF68]
	0x03D31E2C LDR X1, [X8]
	0x03D31E30 ADD X0, X31, 0x110
	0x03D31E34 BL 0x2BE3DB4
	0x03D31E38 CBNZ X21, 0x3D31E44
	0x03D31E3C MOV X0, X22
	0x03D31E40 BL 0x1D2C690
	0x03D31E44 MOV X0, X21
	0x03D31E48 BL 0x1C16F18
	0x03D31E4C BL 0x1990590
	0x03D31E50 STR X30, [X31 - 0x50]!
	0x03D31E54 STP X26, X25, [X31 + 0x10]
	0x03D31E58 STP X24, X23, [X31 + 0x20]
	0x03D31E5C STP X22, X21, [X31 + 0x30]
	0x03D31E60 STP X20, X19, [X31 + 0x40]
	0x03D31E64 ADRP X25, 0x6B6000
	0x03D31E68 LDRB W8, [X25 + 0xB20]
	0x03D31E6C MOV X19, X5
	0x03D31E70 MOV W24, W4
	0x03D31E74 MOV X23, X3
	0x03D31E78 MOV W21, W2
	0x03D31E7C MOV X20, X1
	0x03D31E80 MOV X22, X0
	0x03D31E84 TBZ X8, 0x0, 0x3D31E94
	0x03D31E88 TBNZ X24, 0x0, 0x3D31EAC
	0x03D31E8C CBNZ X20, 0x3D31EBC
	0x03D31E90 B 0x3D31FDC
	0x03D31E94 ADRP X0, 0x3EA000
	0x03D31E98 LDR X0, [X0 + 0x620]
	0x03D31E9C BL 0x1C16CF4
	0x03D31EA0 MOVZ W8, 0x1
	0x03D31EA4 STRB W8, [X25 + 0xB20]
	0x03D31EA8 TBZ X24, 0x0, 0x3D31E8C
	0x03D31EAC MOVZ W8, 0x1
	0x03D31EB0 STR X23, [X19 + 0x10]
	0x03D31EB4 STRB W8, [X19 + 0x30]
	0x03D31EB8 CBZ X20, 0x3D31FDC
	0x03D31EBC LDR X8, [X20 + 0x50]
	0x03D31EC0 CBZ X8, 0x3D31FDC
	0x03D31EC4 LDR X8, [X8 + 0x50]
	0x03D31EC8 ADRP X23, 0x3EA000
	0x03D31ECC LDR X23, [X23 + 0x620]
	0x03D31ED0 STR X8, [X19 + 0x28]
	0x03D31ED4 LDR W24, [X20 + 0x40]
	0x03D31ED8 LDR X0, [X23]
	0x03D31EDC LDR W8, [X0 + 0xE0]
	0x03D31EE0 CBNZ W8, 0x3D31EEC
	0x03D31EE4 BL 0x1C16DFC
	0x03D31EE8 LDR X0, [X23]
	0x03D31EEC LDR X8, [X0 + 0xB8]
	0x03D31EF0 ADRP X26, 0x6B6000
	0x03D31EF4 LDRB W9, [X26 + 0xB58]
	0x03D31EF8 LDR W25, [X8]
	0x03D31EFC CBNZ W9, 0x3D31F14
	0x03D31F00 MOV X0, X23
	0x03D31F04 BL 0x1C16CF4
	0x03D31F08 LDR X0, [X23]
	0x03D31F0C MOVZ W8, 0x1
	0x03D31F10 STRB W8, [X26 + 0xB58]
	0x03D31F14 LDR W8, [X0 + 0xE0]
	0x03D31F18 CBNZ W8, 0x3D31F20
	0x03D31F1C BL 0x1C16DFC
	0x03D31F20 CMP W24, W25
	0x03D31F24 B.EQ 0x3D31FA8
	0x03D31F28 LDR X0, [X22 + 0xA0]
	0x03D31F2C CBZ X0, 0x3D31FDC
	0x03D31F30 TBNZ X21, 0x1F, 0x3D31F7C
	0x03D31F34 LDR X8, [X0 + 0x18]
	0x03D31F38 CBZ X8, 0x3D31FDC
	0x03D31F3C LDR W9, [X8 + 0x18]
	0x03D31F40 CMP W9, W21
	0x03D31F44 B.LS 0x3D31FE0
	0x03D31F48 ADD X8, X8, W21, 0x2, UXTW
	0x03D31F4C LDR W9, [X8 + 0x20]!
	0x03D31F50 LDR W10, [X0 + 0x24]
	0x03D31F54 CMP W9, W10
	0x03D31F58 B.GE 0x3D31F68
	0x03D31F5C LDR W9, [X0 + 0x30]
	0x03D31F60 SUB W9, W9, 0x1
	0x03D31F64 STR W9, [X0 + 0x30]
	0x03D31F68 LDR W9, [X0 + 0x20]
	0x03D31F6C ADD W9, W9, 0x1
	0x03D31F70 STR W9, [X0 + 0x20]
	0x03D31F74 STR W9, [X8]
	0x03D31F78 B 0x3D31FA8
	0x03D31F7C BL 0x3D29B38
	0x03D31F80 LDR X8, [X22 + 0xA0]
	0x03D31F84 CBZ X8, 0x3D31FDC
	0x03D31F88 LDR X3, [X19]
	0x03D31F8C LDR V0, [X20 + 0x48]
	0x03D31F90 LDR W1, [X20 + 0x40]
	0x03D31F94 MOV W2, W0
	0x03D31F98 MOV X0, X8
	0x03D31F9C BL 0x3D29C08
	0x03D31FA0 MOVZ W8, 0x1
	0x03D31FA4 STRB W8, [X19 + 0x32]
	0x03D31FA8 LDR W8, [X20 + 0x44]
	0x03D31FAC LDR W9, [X19 + 0x1C]
	0x03D31FB0 CMP W8, W9
	0x03D31FB4 B.EQ 0x3D31FC4
	0x03D31FB8 STR W8, [X19 + 0x1C]
	0x03D31FBC MOVZ W8, 0x1
	0x03D31FC0 STRB W8, [X19 + 0x33]
	0x03D31FC4 LDP X20, X19, [X31 + 0x40]
	0x03D31FC8 LDP X22, X21, [X31 + 0x30]
	0x03D31FCC LDP X24, X23, [X31 + 0x20]
	0x03D31FD0 LDP X26, X25, [X31 + 0x10]
	0x03D31FD4 LDR X30, [X31], #0x50
	0x03D31FD8 RET
	0x03D31FDC BL 0x1C16F20
	0x03D31FE0 BL 0x1C16F28
	0x03D31FE4 STR X30, [X31 - 0x30]!
	0x03D31FE8 STP X22, X21, [X31 + 0x10]
	0x03D31FEC STP X20, X19, [X31 + 0x20]
	0x03D31FF0 ADRP X22, 0x6B6000
	0x03D31FF4 LDRB W8, [X22 + 0xB21]
	0x03D31FF8 MOV W21, W2
	0x03D31FFC MOV X19, X1
	0x03D32000 MOV X20, X0
	0x03D32004 TBNZ X8, 0x0, 0x3D32034
	0x03D32008 ADRP X0, 0x3C1000
	0x03D3200C LDR X0, [X0 + 0xA28]
	0x03D32010 BL 0x1C16CF4
	0x03D32014 ADRP X0, 0x3EA000
	0x03D32018 LDR X0, [X0 + 0x820]
	0x03D3201C BL 0x1C16CF4
	0x03D32020 ADRP X0, 0x432000
	0x03D32024 LDR X0, [X0 + 0xFC0]
	0x03D32028 BL 0x1C16CF4
	0x03D3202C MOVZ W8, 0x1
	0x03D32030 STRB W8, [X22 + 0xB21]
	0x03D32034 LDRB W8, [X20 + 0x10]
	0x03D32038 CBNZ W8, 0x3D3211C
	0x03D3203C LDRB W8, [X19 + 0x30]
	0x03D32040 CBZ W8, 0x3D320A8
	0x03D32044 TBZ X21, 0x0, 0x3D32138
	0x03D32048 LDR W8, [X20 + 0x78]
	0x03D3204C ADD W8, W8, 0x1
	0x03D32050 STR W8, [X20 + 0x78]
	0x03D32054 LDR X0, [X19 + 0x10]
	0x03D32058 CBZ X0, 0x3D32170
	0x03D3205C MOV W1, W31
	0x03D32060 MOV X2, X31
	0x03D32064 BL 0x3C1518C
	0x03D32068 LDR X21, [X20 + 0x58]
	0x03D3206C CBZ X21, 0x3D32094
	0x03D32070 ADRP X8, 0x3EA000
	0x03D32074 LDR X8, [X8 + 0x820]
	0x03D32078 LDR X0, [X8]
	0x03D3207C LDR W8, [X0 + 0xE0]
	0x03D32080 CBNZ W8, 0x3D32088
	0x03D32084 BL 0x1C16DFC
	0x03D32088 MOV X0, X21
	0x03D3208C MOV X1, X31
	0x03D32090 BL 0x3D1F7D4
	0x03D32094 MOVZ W8, 0x101
	0x03D32098 MOVZ W9, 0x1
	0x03D3209C STURH W8, [X19 + 0x31]
	0x03D320A0 STRB W9, [X19 + 0x33]
	0x03D320A4 B 0x3D320B0
	0x03D320A8 LDRB W8, [X19 + 0x32]
	0x03D320AC CBZ W8, 0x3D320D8
	0x03D320B0 ADRP X8, 0x3EA000
	0x03D320B4 LDR X8, [X8 + 0x820]
	0x03D320B8 LDR X21, [X19]
	0x03D320BC LDR X0, [X8]
	0x03D320C0 LDR W8, [X0 + 0xE0]
	0x03D320C4 CBNZ W8, 0x3D320CC
	0x03D320C8 BL 0x1C16DFC
	0x03D320CC MOV X0, X21
	0x03D320D0 MOV X1, X31
	0x03D320D4 BL 0x3D1F7D4
	0x03D320D8 LDRB W8, [X19 + 0x33]
	0x03D320DC CBZ W8, 0x3D3211C
	0x03D320E0 LDR W8, [X20 + 0x88]
	0x03D320E4 ADD W8, W8, 0x1
	0x03D320E8 STR W8, [X20 + 0x88]
	0x03D320EC ADRP X8, 0x3EA000
	0x03D320F0 LDR X8, [X8 + 0x820]
	0x03D320F4 LDR X21, [X20 + 0x18]
	0x03D320F8 LDR W22, [X19 + 0x1C]
	0x03D320FC LDR X0, [X8]
	0x03D32100 LDR W8, [X0 + 0xE0]
	0x03D32104 CBNZ W8, 0x3D3210C
	0x03D32108 BL 0x1C16DFC
	0x03D3210C MOV X0, X21
	0x03D32110 MOV W1, W22
	0x03D32114 MOV X2, X31
	0x03D32118 BL 0x3D1F9B4
	0x03D3211C STR W31, [X19 + 0x30]
	0x03D32120 LDR X0, [X20 + 0xA0]
	0x03D32124 CBZ X0, 0x3D32170
	0x03D32128 LDP X20, X19, [X31 + 0x20]
	0x03D3212C LDP X22, X21, [X31 + 0x10]
	0x03D32130 LDR X30, [X31], #0x30
	0x03D32134 B 0x3D2996C
	0x03D32138 ADRP X8, 0x3C1000
	0x03D3213C LDR X8, [X8 + 0xA28]
	0x03D32140 LDR X0, [X8]
	0x03D32144 LDR W8, [X0 + 0xE0]
	0x03D32148 CBNZ W8, 0x3D32150
	0x03D3214C BL 0x1C16DFC
	0x03D32150 ADRP X8, 0x432000
	0x03D32154 LDR X8, [X8 + 0xFC0]
	0x03D32158 LDP X20, X19, [X31 + 0x20]
	0x03D3215C LDP X22, X21, [X31 + 0x10]
	0x03D32160 MOV X1, X31
	0x03D32164 LDR X0, [X8]
	0x03D32168 LDR X30, [X31], #0x30
	0x03D3216C B 0x3C0649C
	0x03D32170 BL 0x1C16F20
	0x03D32174 STR D8, [X31 - 0x70]!
	0x03D32178 STP X29, X30, [X31 + 0x10]
	0x03D3217C STP X28, X27, [X31 + 0x20]
	0x03D32180 STP X26, X25, [X31 + 0x30]
	0x03D32184 STP X24, X23, [X31 + 0x40]
	0x03D32188 STP X22, X21, [X31 + 0x50]
	0x03D3218C STP X20, X19, [X31 + 0x60]
	0x03D32190 ADD X29, X31, 0x10
	0x03D32194 SUB X31, X31, 0xD0
	0x03D32198 STP X3, X0, [X29 - 0xA0]
	0x03D3219C MRS X22, 0xC000
	0x03D321A0 LDR X8, [X22 + 0x28]
	0x03D321A4 ADRP X21, 0x6B5000
	0x03D321A8 LDP X10, X9, [X29 + 0x60]
	0x03D321AC MOV V8.16B, V0.16B
	0x03D321B0 STUR X8, [X29 - 0x20]
	0x03D321B4 LDRB W8, [X21 + 0xB22]
	0x03D321B8 MOV X23, X5
	0x03D321BC MOV X26, X4
	0x03D321C0 MOV X24, X2
	0x03D321C4 MOV X20, X1
	0x03D321C8 STP X6, X7, [X29 - 0x30]
	0x03D321CC STP X10, X9, [X29 - 0x40]
	0x03D321D0 TBNZ X8, 0x0, 0x3D32290
	0x03D321D4 ADRP X0, 0x3C1000
	0x03D321D8 LDR X0, [X0 + 0xA28]
	0x03D321DC BL 0x1C16CF4
	0x03D321E0 ADRP X0, 0x3C8000
	0x03D321E4 LDR X0, [X0 + 0xA70]
	0x03D321E8 BL 0x1C16CF4
	0x03D321EC ADRP X0, 0x432000
	0x03D321F0 LDR X0, [X0 + 0xFC8]
	0x03D321F4 BL 0x1C16CF4
	0x03D321F8 ADRP X0, 0x41C000
	0x03D321FC LDR X0, [X0 + 0x580]
	0x03D32200 BL 0x1C16CF4
	0x03D32204 ADRP X0, 0x41B000
	0x03D32208 LDR X0, [X0 + 0xF40]
	0x03D3220C BL 0x1C16CF4
	0x03D32210 ADRP X0, 0x41B000
	0x03D32214 LDR X0, [X0 + 0xF48]
	0x03D32218 BL 0x1C16CF4
	0x03D3221C ADRP X0, 0x432000
	0x03D32220 LDR X0, [X0 + 0xFD0]
	0x03D32224 BL 0x1C16CF4
	0x03D32228 ADRP X0, 0x432000
	0x03D3222C LDR X0, [X0 + 0xFD8]
	0x03D32230 BL 0x1C16CF4
	0x03D32234 ADRP X0, 0x3C1000
	0x03D32238 LDR X0, [X0 + 0x598]
	0x03D3223C BL 0x1C16CF4
	0x03D32240 ADRP X0, 0x3E9000
	0x03D32244 LDR X0, [X0 + 0x620]
	0x03D32248 BL 0x1C16CF4
	0x03D3224C ADRP X0, 0x432000
	0x03D32250 LDR X0, [X0 + 0xFE0]
	0x03D32254 BL 0x1C16CF4
	0x03D32258 ADRP X0, 0x432000
	0x03D3225C LDR X0, [X0 + 0x6F8]
	0x03D32260 BL 0x1C16CF4
	0x03D32264 ADRP X0, 0x432000
	0x03D32268 LDR X0, [X0 + 0xFE8]
	0x03D3226C BL 0x1C16CF4
	0x03D32270 ADRP X0, 0x432000
	0x03D32274 LDR X0, [X0 + 0xFF0]
	0x03D32278 BL 0x1C16CF4
	0x03D3227C ADRP X0, 0x3EA000
	0x03D32280 LDR X0, [X0 + 0x820]
	0x03D32284 BL 0x1C16CF4
	0x03D32288 MOVZ W8, 0x1
	0x03D3228C STRB W8, [X21 + 0xB22]
	0x03D32290 STP X31, X31, [X29 - 0x50]
	0x03D32294 ADRP X8, 0x3EA000
	0x03D32298 LDR X8, [X8 + 0x820]
	0x03D3229C MOVI V0.2D, 0x0
	0x03D322A0 STP V0, V0, [X29 - 0x70]
	0x03D322A4 STUR V0, [X29 - 0x80]
	0x03D322A8 LDR X0, [X8]
	0x03D322AC LDR W8, [X0 + 0xE0]
	0x03D322B0 CBNZ W8, 0x3D322B8
	0x03D322B4 BL 0x1C16DFC
	0x03D322B8 MOV X0, X31
	0x03D322BC BL 0x3D1FBA8
	0x03D322C0 LDUR X8, [X29 - 0x98]
	0x03D322C4 LDR X21, [X8 + 0x98]
	0x03D322C8 CBZ X21, 0x3D32C00
	0x03D322CC LDRB W8, [X8 + 0xAC]
	0x03D322D0 MOV X0, X21
	0x03D322D4 STUR W8, [X29 - 0xA4]
	0x03D322D8 BL 0x3D32C08
	0x03D322DC LDR X27, [X21 + 0x20]
	0x03D322E0 MOV X0, X31
	0x03D322E4 BL 0x3C20834
	0x03D322E8 CBZ X27, 0x3D32C00
	0x03D322EC STUR X21, [X29 - 0xD0]
	0x03D322F0 ADRP X9, 0x432000
	0x03D322F4 LDR X9, [X9 + 0xFC8]
	0x03D322F8 LDR W10, [X27 + 0x1C]
	0x03D322FC LDR X8, [X27 + 0x10]
	0x03D32300 LDR X9, [X9]
	0x03D32304 ADD W10, W10, 0x1
	0x03D32308 STR W10, [X27 + 0x1C]
	0x03D3230C CBZ X8, 0x3D32C00
	0x03D32310 LDRSW X10, [X27 + 0x18]
	0x03D32314 LDR W11, [X8 + 0x18]
	0x03D32318 LDR X25, [X29 + 0x70]
	0x03D3231C MOV X1, X0
	0x03D32320 CMP W10, W11
	0x03D32324 B.CS 0x3D3233C
	0x03D32328 ADD W9, W10, 0x1
	0x03D3232C ADD X8, X8, X10, 0x3, LSL
	0x03D32330 STR W9, [X27 + 0x18]
	0x03D32334 STR X1, [X8 + 0x20]
	0x03D32338 B 0x3D32350
	0x03D3233C LDR X8, [X9 + 0x20]
	0x03D32340 MOV X0, X27
	0x03D32344 LDR X8, [X8 + 0xC0]
	0x03D32348 LDR X2, [X8 + 0x70]
	0x03D3234C BL 0x301BF90
	0x03D32350 CBZ X25, 0x3D32C00
	0x03D32354 MOV X0, X25
	0x03D32358 MOV X1, X31
	0x03D3235C STUR X22, [X29 - 0xC8]
	0x03D32360 BL 0x3C11F88
	0x03D32364 LDUR X19, [X29 - 0x98]
	0x03D32368 LDR X0, [X19 + 0xA0]
	0x03D3236C CBZ X0, 0x3D32C00
	0x03D32370 BL 0x3D29724
	0x03D32374 LDR X8, [X19 + 0x50]
	0x03D32378 CBZ X8, 0x3D32588
	0x03D3237C ADRP X8, 0x3C1000
	0x03D32380 LDR X8, [X8 + 0x598]
	0x03D32384 LDR X0, [X8]
	0x03D32388 LDR W8, [X0 + 0xE0]
	0x03D3238C CBNZ W8, 0x3D32394
	0x03D32390 BL 0x1C16DFC
	0x03D32394 MOV X0, X26
	0x03D32398 MOV X1, X31
	0x03D3239C MOV X2, X31
	0x03D323A0 BL 0x3C354F8
	0x03D323A4 TBZ X0, 0x0, 0x3D323E8
	0x03D323A8 ADRP X21, 0x432000
	0x03D323AC LDR X21, [X21 + 0x6F8]
	0x03D323B0 LDUR X9, [X29 - 0x98]
	0x03D323B4 LDR X0, [X21]
	0x03D323B8 LDR X27, [X9 + 0x58]
	0x03D323BC LDR W8, [X0 + 0xE0]
	0x03D323C0 CBNZ W8, 0x3D323C8
	0x03D323C4 BL 0x1C16DFC
	0x03D323C8 CBZ X27, 0x3D32C00
	0x03D323CC LDR X8, [X21]
	0x03D323D0 MOV X0, X27
	0x03D323D4 MOV X2, X26
	0x03D323D8 MOV X3, X31
	0x03D323DC LDR X8, [X8 + 0xB8]
	0x03D323E0 LDR W1, [X8 + 0x10]
	0x03D323E4 BL 0x3C12828
	0x03D323E8 ADRP X8, 0x3C1000
	0x03D323EC LDR X8, [X8 + 0x598]
	0x03D323F0 LDR X0, [X8]
	0x03D323F4 LDR W8, [X0 + 0xE0]
	0x03D323F8 CBNZ W8, 0x3D32400
	0x03D323FC BL 0x1C16DFC
	0x03D32400 MOV X0, X23
	0x03D32404 MOV X1, X31

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 416
	014 Move X21, 0x6B7000
	015 Move W8, [X21+2846]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {51}
	022 Move X0, 0x3C3000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move X0, 0x434000
	026 Move X0, [X0+3912]
	027 Call 0x1C17CF4
	028 Move X0, 0x434000
	029 Move X0, [X0+3816]
	030 Call 0x1C17CF4
	031 Move X0, 0x434000
	032 Move X0, [X0+3824]
	033 Call 0x1C17CF4
	034 Move X0, 0x434000
	035 Move X0, [X0+3832]
	036 Call 0x1C17CF4
	037 Move X0, 0x434000
	038 Move X0, [X0+3840]
	039 Call 0x1C17CF4
	040 Move X0, 0x434000
	041 Move X0, [X0+3848]
	042 Call 0x1C17CF4
	043 Move X0, 0x434000
	044 Move X0, [X0+3856]
	045 Call 0x1C17CF4
	046 Move X0, 0x434000
	047 Move X0, [X0+3864]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X21+2846], W8
	051 Compare X19, 0
	052 JumpIfEqual {563}
	053 Move X23, 0x434000
	054 Move X25, 0x434000
	055 Move W22, [X19+92]
	056 Move X23, [X23+3840]
	057 Move X25, [X25+3816]
	058 Add X24, X31, 144
	059 Compare W22, 0
	060 JumpIfEqual {164}
	061 Move X0, [X20+72]
	062 Compare X0, 0
	063 JumpIfEqual {563}
	064 Move X10, 0x434000
	065 Move W8, [X19+88]
	066 Move W9, [X0+24]
	067 Move X10, [X10+3848]
	068 Move X2, [X10]
	069 NotImplemented "Instruction SDIV not yet implemented."
	070 NotImplemented "Instruction MSUB not yet implemented."
	071 Call List`1<Object>.get_Item, X0, X1
	072 Compare X0, 0
	073 JumpIfEqual {563}
	074 Move X8, 0x434000
	075 Move X8, [X8+3856]
	076 Move X28, 0x3C3000
	077 Subtract W22, W22, 1
	078 Move W1, W22
	079 Move X2, [X8]
	080 Move X28, [X28+2600]
	081 Add X8, X31, 336
	082 Move X21, X0
	083 Call List`1<AllocToUpdate>.get_Item, X0, X1
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 Move X8, [X31+392]
	088 Move X27, [X31+400]
	089 Move X0, [X28]
	090 Move [X31+240], V0
	091 Move [X31+248], V1
	092 Move [X31+17], V2
	093 Move [X31+288], X8
	094 Move W26, [X31+336]
	095 Move X29, [X31+408]
	096 Move W8, [X0+224]
	097 Move W28, [X19+92]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CSET not yet implemented."
	103 Move X1, X31
	104 Call Debug.Assert, X0
	105 Move X0, [X20+64]
	106 Compare X0, 0
	107 JumpIfEqual {563}
	108 Move W8, [X20+96]
	109 Move W9, [X0+24]
	110 Move X2, [X23]
	111 NotImplemented "Instruction UDIV not yet implemented."
	112 NotImplemented "Instruction MSUB not yet implemented."
	113 Call List`1<Object>.get_Item, X0, X1
	114 Move V1, [X31+240]
	115 Move V0, [X31+256]
	116 Move V2, [X31+17]
	117 Move X8, [X31+288]
	118 Move [X31+136], W31
	119 Move [X31+176], V1
	120 Move [X31+184], V0
	121 Move [X31+13], V2
	122 Move [X31+224], X8
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 Move X8, [X31+200]
	125 Move [X31+139], W31
	126 Move [X31+9], V0
	127 Move [X31+160], X8
	128 Compare X0, 0
	129 JumpIfEqual {563}
	130 Move V0, [X31+9]
	131 Move X8, [X31+160]
	132 Move W9, [X31+136]
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 Move [X31+5], V0
	135 Move [X31+96], X8
	136 Move [X31+304], W9
	137 Move [X24+163], W10
	138 Move W9, [X0+28]
	139 Move X8, [X0+16]
	140 Move X10, [X25]
	141 Move X23, X0
	142 Add W9, W9, 1
	143 Move [X0+28], W9
	144 Compare X8, 0
	145 JumpIfEqual {563}
	146 NotImplemented "Instruction LDRSW not yet implemented."
	147 Move W11, [X8+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Add W10, W9, 1
	150 Move [X23+24], W10
	151 Move V0, [X31+5]
	152 Move X10, [X31+96]
	153 Move W11, 40
	154 Move W12, 1
	155 NotImplemented "Instruction MADD not yet implemented."
	156 Move [X8+64], W12
	157 Move [X8+2], V0
	158 Move [X8+48], X10
	159 Move [X8+56], X27
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 Move W10, [X31+304]
	162 Move [X8+68], W9
	163 Move [X8+65], W10
	164 Move W9, [X19+88]
	165 Move W8, [X20+96]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X8, [X19+80]
	168 Compare X8, 0
	169 JumpIfEqual {563}
	170 Move X8, [X8+24]
	171 Compare X8, 0
	172 JumpIfEqual {563}
	173 Move X0, [X8+64]
	174 Move X8, [X19+40]
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 Move [X31+352], X8
	177 Move [X31+21], V0
	178 Compare X0, 0
	179 JumpIfEqual {563}
	180 Move V0, [X31+21]
	181 Move X8, [X31+352]
	182 Add X1, X31, 48
	183 Move [X31+3], V0
	184 Move [X31+64], X8
	185 Call GPUBufferAllocator.Free, X0, X1
	186 Move X8, [X19+80]
	187 Compare X8, 0
	188 JumpIfEqual {563}
	189 Move X8, [X8+32]
	190 Compare X8, 0
	191 JumpIfEqual {563}
	192 Move X0, [X8+64]
	193 Move X8, [X19+64]
	194 Move V0, [X19+3]
	195 Move [X31+256], X8
	196 Move [X31+15], V0
	197 Compare X0, 0
	198 JumpIfEqual {563}
	199 Move V0, [X31+15]
	200 Move X8, [X31+256]
	201 Add X1, X31, 16
	202 Add X29, X19, 24
	203 Add X25, X19, 48
	204 Move [X31+1], V0
	205 Move [X31+32], X8
	206 Call GPUBufferAllocator.Free, X0, X1
	207 Move X8, [X10+32]
	208 Move V0, [X31+5]
	209 Move X9, [X31+96]
	210 Move W10, [X31+304]
	211 Move X8, [X8+192]
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 Add X1, X31, 336
	214 Move X0, X23
	215 Move X2, [X8+112]
	216 Move W8, 1
	217 Move [X31+21], V0
	218 Move [X31+352], X9
	219 Move [X31+360], X27
	220 Move [X31+368], W8
	221 Move [X24+225], W10
	222 Move [X31+372], W11
	223 Call List`1<AllocToFree>.AddWithResize, X0, X1
	224 Move V0, [X31+240]
	225 Move V1, [X31+256]
	226 Move V2, [X31+17]
	227 Move X8, [X31+288]
	228 Move [X31+296], W31
	229 Move [X31+80], V0
	230 Move [X31+88], V1
	231 Move [X31+7], V2
	232 Move [X31+128], X8
	233 Move [X31+19], V2
	234 Move [X31+320], X8
	235 Move [X24+155], W31
	236 Move W9, [X23+28]
	237 Move X8, [X23+16]
	238 Move X10, [X25]
	239 Add W9, W9, 1
	240 Move [X23+28], W9
	241 Compare X8, 0
	242 JumpIfEqual {563}
	243 NotImplemented "Instruction LDRSW not yet implemented."
	244 Move W11, [X8+24]
	245 Move [X31+8], X21
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Add W10, W9, 1
	248 Move [X23+24], W10
	249 Move V0, [X31+19]
	250 Move X10, [X31+320]
	251 Move W11, 40
	252 NotImplemented "Instruction MADD not yet implemented."
	253 Move [X8+64], W31
	254 Move [X8+2], V0
	255 Move [X8+48], X10
	256 Move [X8+56], X27
	257 NotImplemented "Instruction LDUR not yet implemented."
	258 Move W10, [X31+296]
	259 Move [X8+68], W9
	260 Move [X8+65], W10
	261 Move X8, [X10+32]
	262 Move V0, [X31+19]
	263 Move X9, [X31+320]
	264 Move W10, [X31+296]
	265 Move X8, [X8+192]
	266 NotImplemented "Instruction LDUR not yet implemented."
	267 Add X1, X31, 336
	268 Move X0, X23
	269 Move X2, [X8+112]
	270 Move [X31+21], V0
	271 Move [X31+352], X9
	272 Move [X31+360], X27
	273 Move [X31+368], W31
	274 Move [X24+225], W10
	275 Move [X31+372], W11
	276 Call List`1<AllocToFree>.AddWithResize, X0, X1
	277 Move X9, [X19+40]
	278 NotImplemented "Instruction LDUR not yet implemented."
	279 Move X8, [X19+80]
	280 Move [X31+296], W31
	281 Move [X31+320], X9
	282 Move [X31+19], V0
	283 Move [X24+155], W31
	284 Move W10, [X23+28]
	285 Move X9, [X23+16]
	286 Move X11, [X25]
	287 Add W10, W10, 1
	288 Move [X23+28], W10
	289 Compare X9, 0
	290 JumpIfEqual {563}
	291 NotImplemented "Instruction LDRSW not yet implemented."
	292 Move W12, [X9+24]
	293 Move X21, X20
	294 Move W20, W26
	295 Move W26, W22
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Add W11, W10, 1
	298 Move [X23+24], W11
	299 Move V0, [X31+19]
	300 Move X11, [X31+320]
	301 Move W12, 40
	302 Move W13, 1
	303 NotImplemented "Instruction MADD not yet implemented."
	304 Move [X9+64], W13
	305 Move [X9+2], V0
	306 Move [X9+48], X11
	307 Move [X9+56], X8
	308 NotImplemented "Instruction LDUR not yet implemented."
	309 Move W10, [X31+296]
	310 Move [X9+68], W8
	311 Move [X9+65], W10
	312 Move X9, [X11+32]
	313 Move X10, [X31+320]
	314 Move V0, [X31+19]
	315 Move W11, [X31+296]
	316 Move X9, [X9+192]
	317 NotImplemented "Instruction LDUR not yet implemented."
	318 Add X1, X31, 336
	319 Move X0, X23
	320 Move X2, [X9+112]
	321 Move [X31+352], X10
	322 Move [X31+360], X8
	323 Move W8, 1
	324 Move [X31+21], V0
	325 Move [X31+368], W8
	326 Move [X24+225], W11
	327 Move [X31+372], W12
	328 Call List`1<AllocToFree>.AddWithResize, X0, X1
	329 Move X9, [X19+64]
	330 Move V0, [X19+3]
	331 Move X8, [X19+80]
	332 Move [X31+296], W31
	333 Move [X31+320], X9
	334 Move [X31+19], V0
	335 Move [X24+155], W31
	336 Move W11, [X23+28]
	337 Move X9, [X23+16]
	338 Move X10, [X25]
	339 Add W11, W11, 1
	340 Move [X23+28], W11
	341 Compare X9, 0
	342 JumpIfEqual {563}
	343 NotImplemented "Instruction LDRSW not yet implemented."
	344 Move W12, [X9+24]
	345 Move X28, 0x433000
	346 Move X28, [X28+3864]
	347 Move X22, X29
	348 Add X29, X19, 24
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Add X25, X19, 48
	351 Add W10, W11, 1
	352 Move [X23+24], W10
	353 Move V0, [X31+19]
	354 Move X10, [X31+320]
	355 Move W12, 40
	356 NotImplemented "Instruction MADD not yet implemented."
	357 Move [X9+64], W31
	358 Move [X9+2], V0
	359 Move [X9+48], X10
	360 Move [X9+56], X8
	361 NotImplemented "Instruction LDUR not yet implemented."
	362 Move W10, [X31+296]
	363 Move [X9+68], W8
	364 Move [X9+65], W10
	365 Move X9, [X10+32]
	366 Move V0, [X31+19]
	367 Move X10, [X31+320]
	368 Move W11, [X31+296]
	369 Move X9, [X9+192]
	370 NotImplemented "Instruction LDUR not yet implemented."
	371 Add X1, X31, 336
	372 Move X0, X23
	373 Move X2, [X9+112]
	374 Move [X31+21], V0
	375 Move [X31+352], X10
	376 Move [X31+360], X8
	377 Move [X31+368], W31
	378 Move [X24+225], W11
	379 Move [X31+372], W12
	380 Call List`1<AllocToFree>.AddWithResize, X0, X1
	381 Move X3, [X28]
	382 Move V0, [X31+240]
	383 Move V1, [X31+256]
	384 Move V2, [X31+17]
	385 Move X9, [X31+288]
	386 Move X0, [X31+8]
	387 Move TEMP, 0
	388 Not TEMP
	389 Move W8, TEMP
	390 Add X2, X31, 336
	391 Move W1, W26
	392 Move [X31+336], W20
	393 Move [X31+340], W8
	394 Move [X24+200], V0
	395 Move [X24+216], V1
	396 Move [X24+232], V2
	397 Move [X31+392], X9
	398 Move [X31+400], X27
	399 Move [X31+408], X22
	400 Call List`1<AllocToUpdate>.set_Item, X0, X1, X2
	401 Move X20, X21
	402 Move [X29], X31
	403 Move [X29+8], X31
	404 Move [X29+16], X31
	405 Move [X25], X31
	406 Move [X25+8], X31
	407 Move [X25+16], X31
	408 Move [X19+80], X31
	409 Move [X19+92], W31
	410 Move X0, [X20+144]
	411 Compare X0, 0
	412 JumpIfEqual {563}
	413 Move X8, 0x433000
	414 Move X8, [X8+3912]
	415 Move X1, X19
	416 Move X2, [X8]
	417 Call 0x2EF1E90, X0, X1
	418 Add X31, X31, 416
	419 Move X20, [X31+80]
	420 Move X19, [X31+88]
	421 Move X22, [X31+64]
	422 Move X21, [X31+72]
	423 Move X24, [X31+48]
	424 Move X23, [X31+56]
	425 Move X26, [X31+32]
	426 Move X25, [X31+40]
	427 Move X28, [X31+16]
	428 Move X27, [X31+24]
	429 Move X29, [X31+96]
	430 Move X30, [X31+104]
	431 Return 
	432 Move X0, [X20+64]
	433 Compare X0, 0
	434 JumpIfEqual {563}
	435 Move W9, [X0+24]
	436 Move X2, [X23]
	437 NotImplemented "Instruction UDIV not yet implemented."
	438 NotImplemented "Instruction MSUB not yet implemented."
	439 Move W1, W21
	440 Call List`1<Object>.get_Item, X0, X1
	441 Move X9, [X19+40]
	442 NotImplemented "Instruction LDUR not yet implemented."
	443 Move X8, [X19+80]
	444 Move [X31+144], W31
	445 Move [X31+192], X9
	446 Move [X31+11], V0
	447 Move [X24+3], W31
	448 Compare X0, 0
	449 JumpIfEqual {563}
	450 Move V0, [X31+11]
	451 Move X9, [X31+192]
	452 Move W10, [X31+144]
	453 NotImplemented "Instruction LDUR not yet implemented."
	454 Move [X31+15], V0
	455 Move [X31+256], X9
	456 Move [X31+80], W10
	457 Move [X31+83], W11
	458 Move W10, [X0+28]
	459 Move X9, [X0+16]
	460 Move X11, [X25]
	461 Add W10, W10, 1
	462 Move [X0+28], W10
	463 Compare X9, 0
	464 JumpIfEqual {563}
	465 NotImplemented "Instruction LDRSW not yet implemented."
	466 Move W12, [X9+24]
	467 NotImplemented "Instruction CMP not yet implemented."
	468 Add W11, W10, 1
	469 Move [X0+24], W11
	470 Move V0, [X31+15]
	471 Move X11, [X31+256]
	472 Move W12, 40
	473 Move W13, 1
	474 NotImplemented "Instruction MADD not yet implemented."
	475 Move [X9+64], W13
	476 Move [X9+2], V0
	477 Move [X9+48], X11
	478 Move [X9+56], X8
	479 NotImplemented "Instruction LDUR not yet implemented."
	480 Move W10, [X31+80]
	481 Move [X9+68], W8
	482 Move [X9+65], W10
	483 Move X9, [X11+32]
	484 Move X10, [X31+256]
	485 Move V0, [X31+15]
	486 Move W11, [X31+80]
	487 Move X9, [X9+192]
	488 NotImplemented "Instruction LDUR not yet implemented."
	489 Add X1, X31, 336
	490 Move X2, [X9+112]
	491 Move [X31+352], X10
	492 Move [X31+360], X8
	493 Move W8, 1
	494 Move [X31+21], V0
	495 Move [X31+368], W8
	496 Move [X24+225], W11
	497 Move [X31+372], W12
	498 Call List`1<AllocToFree>.AddWithResize, X0, X1
	499 Move X0, [X20+64]
	500 Compare X0, 0
	501 JumpIfEqual {563}
	502 Move X2, [X23]
	503 Move W1, W21
	504 Call List`1<Object>.get_Item, X0, X1
	505 Move X9, [X19+64]
	506 Move V0, [X19+3]
	507 Move X8, [X19+80]
	508 Move [X31+296], W31
	509 Move [X31+96], X9
	510 Move [X31+5], V0
	511 Move [X24+155], W31
	512 Compare X0, 0
	513 JumpIfEqual {563}
	514 Move V0, [X31+5]
	515 Move X9, [X31+96]
	516 Move W10, [X31+296]
	517 NotImplemented "Instruction LDUR not yet implemented."
	518 Move [X31+15], V0
	519 Move [X31+256], X9
	520 Move [X31+304], W10
	521 Move [X24+163], W11
	522 Move W11, [X0+28]
	523 Move X9, [X0+16]
	524 Move X10, [X25]
	525 Add W11, W11, 1
	526 Move [X0+28], W11
	527 Compare X9, 0
	528 JumpIfEqual {563}
	529 NotImplemented "Instruction LDRSW not yet implemented."
	530 Move W12, [X9+24]
	531 Add X29, X19, 24
	532 Add X25, X19, 48
	533 NotImplemented "Instruction CMP not yet implemented."
	534 Add W10, W11, 1
	535 Move [X0+24], W10
	536 Move V0, [X31+15]
	537 Move X10, [X31+256]
	538 Move W12, 40
	539 NotImplemented "Instruction MADD not yet implemented."
	540 Move [X9+64], W31
	541 Move [X9+2], V0
	542 Move [X9+48], X10
	543 Move [X9+56], X8
	544 NotImplemented "Instruction LDUR not yet implemented."
	545 Move W10, [X31+304]
	546 Move [X9+68], W8
	547 Move [X9+65], W10
	548 Move X9, [X10+32]
	549 Move V0, [X31+15]
	550 Move X10, [X31+256]
	551 Move W11, [X31+304]
	552 Move X9, [X9+192]
	553 NotImplemented "Instruction LDUR not yet implemented."
	554 Add X1, X31, 336
	555 Move X2, [X9+112]
	556 Move [X31+21], V0
	557 Move [X31+352], X10
	558 Move [X31+360], X8
	559 Move [X31+368], W31
	560 Move [X24+225], W11
	561 Move [X31+372], W12
	562 Call List`1<AllocToFree>.AddWithResize, X0, X1
	563 Call 0x1C17F20

Method: System.Void OnFrameRenderingBegin()

Disassembly:
	0x03D32408 MOV X2, X31
	0x03D3240C BL 0x3C354F8
	0x03D32410 LDUR X19, [X29 - 0x98]
	0x03D32414 TBZ X0, 0x0, 0x3D32458
	0x03D32418 ADRP X21, 0x432000
	0x03D3241C LDR X21, [X21 + 0x6F8]
	0x03D32420 LDR X26, [X19 + 0x58]
	0x03D32424 LDR X0, [X21]
	0x03D32428 LDR W8, [X0 + 0xE0]
	0x03D3242C CBNZ W8, 0x3D32434
	0x03D32430 BL 0x1C16DFC
	0x03D32434 CBZ X26, 0x3D32C00
	0x03D32438 LDR X8, [X21]
	0x03D3243C MOV X0, X26
	0x03D32440 MOV X2, X23
	0x03D32444 MOV X3, X31
	0x03D32448 LDR X8, [X8 + 0xB8]
	0x03D3244C LDR W1, [X8 + 0x14]
	0x03D32450 BL 0x3C12828
	0x03D32454 LDUR X19, [X29 - 0x98]
	0x03D32458 ADRP X8, 0x432000
	0x03D3245C LDR X8, [X8 + 0xFD0]
	0x03D32460 ADRP X21, 0x432000
	0x03D32464 SUB X0, X29, 0x30
	0x03D32468 LDR X1, [X8]
	0x03D3246C LDR X21, [X21 + 0xFD8]
	0x03D32470 BL 0x2406AE0
	0x03D32474 CMP W0, 0x1
	0x03D32478 B.LT 0x3D324E4
	0x03D3247C ADRP X22, 0x432000
	0x03D32480 LDR X22, [X22 + 0x6F8]
	0x03D32484 LDR X23, [X19 + 0x58]
	0x03D32488 LDR X0, [X22]
	0x03D3248C LDR W8, [X0 + 0xE0]
	0x03D32490 CBNZ W8, 0x3D3249C
	0x03D32494 BL 0x1C16DFC
	0x03D32498 LDR X0, [X22]
	0x03D3249C ADRP X9, 0x3EA000
	0x03D324A0 LDR X8, [X0 + 0xB8]
	0x03D324A4 LDR X9, [X9 + 0x820]
	0x03D324A8 LDP X27, X26, [X29 - 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6B6000
	006 Move W8, [X20+2847]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x433000
	013 Move X0, [X0+3920]
	014 Call 0x1C17CF4
	015 Move X0, 0x433000
	016 Move X0, [X0+3928]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2847], W8
	020 Move X0, X19
	021 Call UIRenderDevice.AdvanceFrame, X0
	022 Move W8, [X19+96]
	023 Move X20, [X19+40]
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Move [X19+124], V0
	026 Move [X19+108], V0
	027 Move [X19+104], W8
	028 Compare X20, 0
	029 JumpIfEqual {47}
	030 Move X19, 0x433000
	031 Move X21, 0x433000
	032 Move X19, [X19+3920]
	033 Move X21, [X21+3928]
	034 Move X0, [X20+24]
	035 Compare X0, 0
	036 JumpIfEqual {52}
	037 Move X1, [X19]
	038 Call DataSet`1<Vertex>.SendUpdates, X0
	039 Move X0, [X20+32]
	040 Compare X0, 0
	041 JumpIfEqual {52}
	042 Move X1, [X21]
	043 Call 0x29AD570, X0
	044 Move X20, [X20+40]
	045 Compare X20, 0
	046 JumpIfNotEqual {34}
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 
	052 Call 0x1C17F20

Method: Unity.Collections.NativeSlice`1<T> PtrToSlice(System.Void* p, System.Int32 count)

Disassembly:
	0x022A26A0 MOV X0, X20
	0x022A26A4 BL 0x1C16F18
	0x022A26A8 BL 0x1990590
	0x022A26AC SUB X31, X31, 0x70
	0x022A26B0 STP X30, X23, [X31 + 0x40]
	0x022A26B4 STP X22, X21, [X31 + 0x50]
	0x022A26B8 STP X20, X19, [X31 + 0x60]
	0x022A26BC LDR X8, [X1 + 0x38]
	0x022A26C0 MOV X19, X1
	0x022A26C4 MOV X21, X0
	0x022A26C8 CBNZ X8, 0x22A26EC
	0x022A26CC ADRP X0, 0x1E51000
	0x022A26D0 LDR X0, [X0 + 0x598]
	0x022A26D4 BL 0x1C16CF4
	0x022A26D8 LDR X8, [X19 + 0x38]
	0x022A26DC CBNZ X8, 0x22A26EC
	0x022A26E0 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move W19, W1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X3, [X8+8]
	015 Move X0, X20
	016 Move W2, W19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move W1, 16
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Call 0x2223C80, X0, X1, X2
	023 Return X0

Method: System.Void ApplyDrawCommandState(UnityEngine.UIElements.UIR.RenderChainCommand cmd, System.Int32 textureSlot, UnityEngine.Material newMat, System.Boolean newMatDiffers, ref UnityEngine.UIElements.UIR.UIRenderDevice/EvaluationState st)

Disassembly:
	0x03D32E50 LDR W25, [X19]
	0x03D32E54 LDR W8, [X0 + 0xE0]
	0x03D32E58 CBNZ W8, 0x3D32E60
	0x03D32E5C BL 0x1C16DFC
	0x03D32E60 CMP W25, 0x0
	0x03D32E64 CSET W0, GT
	0x03D32E68 MOV X1, X31
	0x03D32E6C BL 0x3C06E58
	0x03D32E70 LDRSW X29, [X20]
	0x03D32E74 LDR W25, [X19]
	0x03D32E78 ADD W8, W25, W29
	0x03D32E7C CMP W8, W21
	0x03D32E80 B.LE 0x3D32F54
	0x03D32E84 LDRB W8, [X22 + 0x10]
	0x03D32E88 CBNZ W8, 0x3D32F4C
	0x03D32E8C CBZ X24, 0x3D33014
	0x03D32E90 LDR X8, [X24 + 0x20]
	0x03D32E94 CBZ X8, 0x3D33014
	0x03D32E98 LDR X9, [X24 + 0x18]
	0x03D32E9C CBZ X9, 0x3D33014
	0x03D32EA0 ADRP X10, 0x432000
	0x03D32EA4 LDR X10, [X10 + 0x6F8]
	0x03D32EA8 LDR X28, [X8 + 0x18]
	0x03D32EAC LDR X27, [X9 + 0x18]
	0x03D32EB0 SUB W26, W21, W29
	0x03D32EB4 LDR X0, [X10]
	0x03D32EB8 LDR W8, [X0 + 0xE0]
	0x03D32EBC CBNZ W8, 0x3D32EC4
	0x03D32EC0 BL 0x1C16DFC
	0x03D32EC4 ADRP X8, 0x433000
	0x03D32EC8 LDR X8, [X8 + 0x28]
	0x03D32ECC ADD X0, X23, X29, 0x4, LSL
	0x03D32ED0 MOV W1, W26
	0x03D32ED4 LDR X2, [X8]
	0x03D32ED8 BL 0x22A16A0
	0x03D32EDC ADRP X29, 0x433000
	0x03D32EE0 LDR X29, [X29 + 0x20]
	0x03D32EE4 MOV X3, X0
	0x03D32EE8 MOV X4, X1
	0x03D32EEC MOV X0, X22
	0x03D32EF0 LDR X5, [X29]
	0x03D32EF4 MOV X1, X28
	0x03D32EF8 MOV X2, X27
	0x03D32EFC BL 0x22A1408
	0x03D32F00 LDR X8, [X24 + 0x20]
	0x03D32F04 CBZ X8, 0x3D33014
	0x03D32F08 LDR X9, [X24 + 0x18]
	0x03D32F0C CBZ X9, 0x3D33014
	0x03D32F10 LDR X24, [X8 + 0x18]
	0x03D32F14 ADRP X8, 0x433000
	0x03D32F18 LDR X27, [X9 + 0x18]
	0x03D32F1C LDR X8, [X8 + 0x28]
	0x03D32F20 SUB W1, W25, W26
	0x03D32F24 MOV X0, X23
	0x03D32F28 LDR X2, [X8]
	0x03D32F2C BL 0x22A16A0
	0x03D32F30 LDR X5, [X29]
	0x03D32F34 MOV X3, X0
	0x03D32F38 MOV X4, X1
	0x03D32F3C MOV X0, X22
	0x03D32F40 MOV X1, X24
	0x03D32F44 MOV X2, X27
	0x03D32F48 BL 0x22A1408
	0x03D32F4C MOVZ W8, 0x2
	0x03D32F50 B 0x3D32FD0
	0x03D32F54 LDRB W8, [X22 + 0x10]
	0x03D32F58 CBNZ W8, 0x3D32FCC
	0x03D32F5C CBZ X24, 0x3D33014
	0x03D32F60 LDR X8, [X24 + 0x20]
	0x03D32F64 CBZ X8, 0x3D33014
	0x03D32F68 LDR X9, [X24 + 0x18]
	0x03D32F6C CBZ X9, 0x3D33014
	0x03D32F70 ADRP X10, 0x432000
	0x03D32F74 LDR X10, [X10 + 0x6F8]
	0x03D32F78 LDR X24, [X8 + 0x18]
	0x03D32F7C LDR X26, [X9 + 0x18]
	0x03D32F80 LDR X0, [X10]
	0x03D32F84 LDR W8, [X0 + 0xE0]
	0x03D32F88 CBNZ W8, 0x3D32F90
	0x03D32F8C BL 0x1C16DFC
	0x03D32F90 ADRP X8, 0x433000
	0x03D32F94 LDR X8, [X8 + 0x28]
	0x03D32F98 ADD X0, X23, X29, 0x4, LSL
	0x03D32F9C MOV W1, W25
	0x03D32FA0 LDR X2, [X8]
	0x03D32FA4 BL 0x22A16A0
	0x03D32FA8 ADRP X8, 0x433000
	0x03D32FAC LDR X8, [X8 + 0x20]
	0x03D32FB0 MOV X3, X0
	0x03D32FB4 MOV X4, X1
	0x03D32FB8 MOV X0, X22
	0x03D32FBC LDR X5, [X8]
	0x03D32FC0 MOV X1, X24
	0x03D32FC4 MOV X2, X26
	0x03D32FC8 BL 0x22A1408
	0x03D32FCC MOVZ W8, 0x1
	0x03D32FD0 LDR W9, [X22 + 0x80]
	0x03D32FD4 SUB W10, W21, 0x1
	0x03D32FD8 LDP X24, X23, [X31 + 0x30]
	0x03D32FDC LDP X26, X25, [X31 + 0x20]
	0x03D32FE0 ADD W8, W9, W8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x6B6000
	011 Move W8, [X25+2848]
	012 Move X19, X5
	013 Move W24, W4
	014 Move X23, X3
	015 Move W21, W2
	016 Move X20, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {28}
	022 Move TEMP, X24
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {37}
	026 Compare X20, 0
	027 JumpIfNotEqual {42}
	028 Move X0, 0x3EA000
	029 Move X0, [X0+1568]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X25+2848], W8
	033 Move TEMP, X24
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {26}
	037 Move W8, 1
	038 Move [X19+16], X23
	039 Move [X19+48], W8
	040 Compare X20, 0
	041 JumpIfEqual {124}
	042 Move X8, [X20+80]
	043 Compare X8, 0
	044 JumpIfEqual {124}
	045 Move X8, [X8+80]
	046 Move X23, 0x3EA000
	047 Move X23, [X23+1568]
	048 Move [X19+40], X8
	049 Move W24, [X20+64]
	050 Move X0, [X23]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X23]
	056 Move X8, [X0+184]
	057 Move X26, 0x6B6000
	058 Move W9, [X26+2904]
	059 Move W25, [X8]
	060 Compare W9, 0
	061 JumpIfNotEqual {67}
	062 Move X0, X23
	063 Call 0x1C17CF4
	064 Move X0, [X23]
	065 Move W8, 1
	066 Move [X26+2904], W8
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, [X22+160]
	073 Compare X0, 0
	074 JumpIfEqual {124}
	075 Move TEMP, X21
	076 And TEMP, TEMP, -2147483648
	077 Compare TEMP, -2147483648
	078 JumpIfEqual {96}
	079 Move X8, [X0+24]
	080 Compare X8, 0
	081 JumpIfEqual {124}
	082 Move W9, [X8+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add X8, X8, W21
	085 Add X8, X8, 32
	086 Move W9, [X8]
	087 Move W10, [X0+36]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move W9, [X0+48]
	090 Subtract W9, W9, 1
	091 Move [X0+48], W9
	092 Move W9, [X0+32]
	093 Add W9, W9, 1
	094 Move [X0+32], W9
	095 Move [X8], W9
	096 Call TextureSlotManager.FindOldestSlot, X0
	097 Move X8, [X22+160]
	098 Compare X8, 0
	099 JumpIfEqual {124}
	100 Move X3, [X19]
	101 Move V0, [X20+72]
	102 Move W1, [X20+64]
	103 Move W2, W0
	104 Move X0, X8
	105 Call TextureSlotManager.Bind, X0, X1, V0, X2, X3
	106 Move W8, 1
	107 Move [X19+50], W8
	108 Move W8, [X20+68]
	109 Move W9, [X19+28]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move [X19+28], W8
	112 Move W8, 1
	113 Move [X19+51], W8
	114 Move X20, [X31+64]
	115 Move X19, [X31+72]
	116 Move X22, [X31+48]
	117 Move X21, [X31+56]
	118 Move X24, [X31+32]
	119 Move X23, [X31+40]
	120 Move X26, [X31+16]
	121 Move X25, [X31+24]
	122 Move X30, [X31+80]
	123 Return 
	124 Call 0x1C17F20
	125 Call 0x1C17F28

Method: System.Void ApplyBatchState(ref UnityEngine.UIElements.UIR.UIRenderDevice/EvaluationState st, System.Boolean allowMaterialChange)

Disassembly:
	0x03D32FE4 STR W8, [X22 + 0x80]
	0x03D32FE8 LDR W8, [X20]
	0x03D32FEC LDR W9, [X19]
	0x03D32FF0 LDP X22, X21, [X31 + 0x40]
	0x03D32FF4 LDP X28, X27, [X31 + 0x10]
	0x03D32FF8 ADD W8, W9, W8
	0x03D32FFC AND W8, W8, W10, 0x0
	0x03D33000 STR W8, [X20]
	0x03D33004 STR W31, [X19]
	0x03D33008 LDP X20, X19, [X31 + 0x50]
	0x03D3300C LDP X29, X30, [X31], #0x60
	0x03D33010 RET
	0x03D33014 BL 0x1C16F20
	0x03D33018 STP D15, D14, [X31 - 0x90]!
	0x03D3301C STP D13, D12, [X31 + 0x10]
	0x03D33020 STP D11, D10, [X31 + 0x20]
	0x03D33024 STP D9, D8, [X31 + 0x30]
	0x03D33028 STR X29, [X31 + 0x40]
	0x03D3302C STP X30, X25, [X31 + 0x50]
	0x03D33030 STP X24, X23, [X31 + 0x60]
	0x03D33034 STP X22, X21, [X31 + 0x70]
	0x03D33038 STP X20, X19, [X31 + 0x80]
	0x03D3303C SUB X31, X31, 0x220
	0x03D33040 ADRP X22, 0x6B4000
	0x03D33044 LDRB W8, [X22 + 0xB3F]
	0x03D33048 MOV X21, X2
	0x03D3304C MOV V13.16B, V0.16B
	0x03D33050 MOV X19, X1
	0x03D33054 MOV X20, X0
	0x03D33058 TBNZ X8, 0x0, 0x3D3313C
	0x03D3305C ADRP X0, 0x3C0000
	0x03D33060 LDR X0, [X0 + 0xA28]
	0x03D33064 BL 0x1C16CF4
	0x03D33068 ADRP X0, 0x431000
	0x03D3306C LDR X0, [X0 + 0xDA8]
	0x03D33070 BL 0x1C16CF4
	0x03D33074 ADRP X0, 0x431000
	0x03D33078 LDR X0, [X0 + 0xFC8]
	0x03D3307C BL 0x1C16CF4
	0x03D33080 ADRP X0, 0x432000
	0x03D33084 LDR X0, [X0 + 0x30]
	0x03D33088 BL 0x1C16CF4
	0x03D3308C ADRP X0, 0x432000
	0x03D33090 LDR X0, [X0 + 0x38]
	0x03D33094 BL 0x1C16CF4
	0x03D33098 ADRP X0, 0x432000
	0x03D3309C LDR X0, [X0 + 0x40]
	0x03D330A0 BL 0x1C16CF4
	0x03D330A4 ADRP X0, 0x3C0000
	0x03D330A8 LDR X0, [X0 + 0x598]
	0x03D330AC BL 0x1C16CF4
	0x03D330B0 ADRP X0, 0x431000
	0x03D330B4 LDR X0, [X0 + 0x9B8]
	0x03D330B8 BL 0x1C16CF4
	0x03D330BC ADRP X0, 0x432000
	0x03D330C0 LDR X0, [X0 + 0x48]
	0x03D330C4 BL 0x1C16CF4
	0x03D330C8 ADRP X0, 0x432000
	0x03D330CC LDR X0, [X0 + 0x50]
	0x03D330D0 BL 0x1C16CF4
	0x03D330D4 ADRP X0, 0x432000
	0x03D330D8 LDR X0, [X0 + 0x58]
	0x03D330DC BL 0x1C16CF4
	0x03D330E0 ADRP X0, 0x432000
	0x03D330E4 LDR X0, [X0 + 0x60]
	0x03D330E8 BL 0x1C16CF4
	0x03D330EC ADRP X0, 0x432000
	0x03D330F0 LDR X0, [X0 + 0x10]
	0x03D330F4 BL 0x1C16CF4
	0x03D330F8 ADRP X0, 0x432000
	0x03D330FC LDR X0, [X0 + 0x18]
	0x03D33100 BL 0x1C16CF4
	0x03D33104 ADRP X0, 0x432000
	0x03D33108 LDR X0, [X0 + 0x68]
	0x03D3310C BL 0x1C16CF4
	0x03D33110 ADRP X0, 0x3E9000
	0x03D33114 LDR X0, [X0 + 0x820]
	0x03D33118 BL 0x1C16CF4
	0x03D3311C ADRP X0, 0x432000
	0x03D33120 LDR X0, [X0 + 0x70]
	0x03D33124 BL 0x1C16CF4
	0x03D33128 ADRP X0, 0x432000
	0x03D3312C LDR X0, [X0 + 0x78]
	0x03D33130 BL 0x1C16CF4
	0x03D33134 MOVZ W8, 0x1
	0x03D33138 STRB W8, [X22 + 0xB3F]
	0x03D3313C MOVI V0.2D, 0x0
	0x03D33140 STP X31, X31, [X31 + 0x1D0]
	0x03D33144 STRB W31, [X31 + 0x268]
	0x03D33148 STP V0, V0, [X31 + 0x1B0]
	0x03D3314C STP V0, V0, [X31 + 0x190]
	0x03D33150 STR X31, [X31 + 0x188]
	0x03D33154 LDR W8, [X20 + 0x34]
	0x03D33158 SUB W8, W8, 0x1
	0x03D3315C CMP W8, 0x8
	0x03D33160 B.HI 0x3D339C4
	0x03D33164 ADRP X9, 0xFFFFFFFFFCE64000
	0x03D33168 ADD X9, X9, 0xF8E
	0x03D3316C ADR X10, 0x10
	0x03D33170 LDRH W11, [X9, X8, LSL #1]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6B6000
	007 Move W8, [X22+2849]
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x3C1000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x3EA000
	019 Move X0, [X0+2080]
	020 Call 0x1C17CF4
	021 Move X0, 0x432000
	022 Move X0, [X0+4032]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2849], W8
	026 Move W8, [X20+16]
	027 Compare W8, 0
	028 JumpIfNotEqual {95}
	029 Move W8, [X19+48]
	030 Compare W8, 0
	031 JumpIfEqual {62}
	032 Move TEMP, X21
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {106}
	036 Move W8, [X20+120]
	037 Add W8, W8, 1
	038 Move [X20+120], W8
	039 Move X0, [X19+16]
	040 Compare X0, 0
	041 JumpIfEqual {124}
	042 Move W1, W31
	043 Move X2, X31
	044 Call Material.SetPass, X0, X1
	045 Move X21, [X20+88]
	046 Compare X21, 0
	047 JumpIfEqual {58}
	048 Move X8, 0x3EA000
	049 Move X8, [X8+2080]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X21
	056 Move X1, X31
	057 Call Utility.SetPropertyBlock, X0
	058 Move W8, 257
	059 Move W9, 1
	060 NotImplemented "Instruction STURH not yet implemented."
	061 Move [X19+51], W9
	062 Move W8, [X19+50]
	063 Compare W8, 0
	064 JumpIfEqual {76}
	065 Move X8, 0x3EA000
	066 Move X8, [X8+2080]
	067 Move X21, [X19]
	068 Move X0, [X8]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X21
	074 Move X1, X31
	075 Call Utility.SetPropertyBlock, X0
	076 Move W8, [X19+51]
	077 Compare W8, 0
	078 JumpIfEqual {95}
	079 Move W8, [X20+136]
	080 Add W8, W8, 1
	081 Move [X20+136], W8
	082 Move X8, 0x3EA000
	083 Move X8, [X8+2080]
	084 Move X21, [X20+24]
	085 Move W22, [X19+28]
	086 Move X0, [X8]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X21
	092 Move W1, W22
	093 Move X2, X31
	094 Call Utility.SetStencilState, X0, X1
	095 Move [X19+48], W31
	096 Move X0, [X20+160]
	097 Compare X0, 0
	098 JumpIfEqual {124}
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move X30, [X31+48]
	104 Call TextureSlotManager.StartNewBatch, X0
	105 Return 
	106 Move X8, 0x3C1000
	107 Move X8, [X8+2600]
	108 Move X0, [X8]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X8, 0x432000
	114 Move X8, [X8+4032]
	115 Move X20, [X31+32]
	116 Move X19, [X31+40]
	117 Move X22, [X31+16]
	118 Move X21, [X31+24]
	119 Move X1, X31
	120 Move X0, [X8]
	121 Move X30, [X31+48]
	122 Call Debug.LogError, X0
	123 Return 
	124 Call 0x1C17F20

Method: System.Void EvaluateChain(UnityEngine.UIElements.UIR.RenderChainCommand head, UnityEngine.Material initialMat, UnityEngine.Material defaultMat, UnityEngine.Texture gradientSettings, UnityEngine.Texture shaderInfo, System.Single pixelsPerPoint, Unity.Collections.NativeSlice`1<UnityEngine.UIElements.UIR.Transform3x4> transforms, Unity.Collections.NativeSlice`1<UnityEngine.Vector4> clipRects, UnityEngine.MaterialPropertyBlock stateMatProps, System.Boolean allowMaterialChange, ref System.Exception immediateException)

Disassembly:
	0x03D33174 ADD X10, X10, X11, 0x2, LSL
	0x03D33178 BR X10
	0x03D3317C LDR X0, [X20 + 0x18]
	0x03D33180 CBZ X0, 0x3D339F0
	0x03D33184 MOV X1, X31
	0x03D33188 BL 0x3DEDC10
	0x03D3318C ADRP X8, 0x431000
	0x03D33190 LDR X8, [X8 + 0x9B8]
	0x03D33194 MOV V9.16B, V0.16B
	0x03D33198 MOV V10.16B, V1.16B
	0x03D3319C MOV V11.16B, V2.16B
	0x03D331A0 LDR X0, [X8]
	0x03D331A4 MOV V8.16B, V3.16B
	0x03D331A8 LDR W8, [X0 + 0xE0]
	0x03D331AC CBNZ W8, 0x3D331B4
	0x03D331B0 BL 0x1C16DFC
	0x03D331B4 MOV V0.16B, V9.16B
	0x03D331B8 MOV V1.16B, V10.16B
	0x03D331BC MOV V2.16B, V11.16B
	0x03D331C0 MOV V3.16B, V8.16B
	0x03D331C4 MOV V4.16B, V13.16B
	0x03D331C8 BL 0x3D34BE4
	0x03D331CC ADRP X9, 0x3E9000
	0x03D331D0 LDR X9, [X9 + 0x820]
	0x03D331D4 MOV X8, X0
	0x03D331D8 STP X8, X1, [X31 + 0x1D0]
	0x03D331DC LDR X0, [X9]
	0x03D331E0 LDR W8, [X0 + 0xE0]
	0x03D331E4 CBNZ W8, 0x3D331EC
	0x03D331E8 BL 0x1C16DFC
	0x03D331EC MOV X0, X31
	0x03D331F0 BL 0x3D1FAE8
	0x03D331F4 MOV X2, X0
	0x03D331F8 MOV X3, X1
	0x03D331FC ADD X0, X31, 0x1D0
	0x03D33200 MOV X1, X2
	0x03D33204 MOV X2, X3
	0x03D33208 MOV X3, X31
	0x03D3320C BL 0x3C1E354
	0x03D33210 TBZ X0, 0x0, 0x3D339C4
	0x03D33214 LDR X8, [X21]
	0x03D33218 CBNZ X8, 0x3D339C4
	0x03D3321C ADRP X24, 0x3E9000
	0x03D33220 LDR X24, [X24 + 0x820]
	0x03D33224 LDR X0, [X24]
	0x03D33228 LDR W8, [X0 + 0xE0]
	0x03D3322C CBNZ W8, 0x3D33234
	0x03D33230 BL 0x1C16DFC
	0x03D33234 ADD X8, X31, 0x1E0
	0x03D33238 MOV X0, X31
	0x03D3323C BL 0x3D1FC34
	0x03D33240 LDP V0, V1, [X31 + 0x1E0]
	0x03D33244 LDP V2, V3, [X31 + 0x200]
	0x03D33248 MOV X0, X31
	0x03D3324C STP V0, V1, [X31 + 0x190]
	0x03D33250 STP V2, V3, [X31 + 0x1B0]
	0x03D33254 BL 0x3C04820
	0x03D33258 MOV X22, X0
	0x03D3325C MOV X0, X31
	0x03D33260 BL 0x3C20834
	0x03D33264 CBZ X19, 0x3D339F0
	0x03D33268 LDR X8, [X19 + 0x18]
	0x03D3326C CBZ X8, 0x3D339F0
	0x03D33270 LDR W25, [X8 + 0x18]
	0x03D33274 MOV X23, X0
	0x03D33278 CMP W25, 0x2
	0x03D3327C B.LT 0x3D33298
	0x03D33280 LDR X0, [X24]
	0x03D33284 LDR W8, [X0 + 0xE0]
	0x03D33288 CBNZ W8, 0x3D33290
	0x03D3328C BL 0x1C16DFC
	0x03D33290 MOV X0, X31
	0x03D33294 BL 0x3D1F8CC
	0x03D33298 LDR X0, [X20 + 0x18]
	0x03D3329C CBZ X0, 0x3D339F0
	0x03D332A0 ADD X8, X31, 0x140
	0x03D332A4 MOV X1, X31
	0x03D332A8 BL 0x3DEDD74
	0x03D332AC LDP V0, V1, [X31 + 0x140]
	0x03D332B0 LDP V2, V3, [X31 + 0x160]
	0x03D332B4 STP V0, V1, [X31 + 0x1E0]
	0x03D332B8 STP V2, V3, [X31 + 0x200]
	0x03D332BC LDR X0, [X20 + 0x18]
	0x03D332C0 CBZ X0, 0x3D339F0
	0x03D332C4 MOV X1, X31
	0x03D332C8 BL 0x3DEE4D8
	0x03D332CC LDP V4, V5, [X31 + 0x1E0]
	0x03D332D0 LDP V6, V7, [X31 + 0x200]
	0x03D332D4 ADD X0, X31, 0x268
	0x03D332D8 ADD X1, X31, 0x100
	0x03D332DC MOV X2, X31
	0x03D332E0 STP V4, V5, [X31 + 0x100]
	0x03D332E4 STP V6, V7, [X31 + 0x120]
	0x03D332E8 BL 0x3C6CD5C
	0x03D332EC LDR X8, [X20 + 0x60]
	0x03D332F0 CBZ X8, 0x3D339F4
	0x03D332F4 LDR X0, [X8 + 0x40]
	0x03D332F8 LDR X1, [X8 + 0x28]
	0x03D332FC LDR X9, [X8 + 0x18]
	0x03D33300 BLR X9
	0x03D33304 ADD X0, X31, 0x268
	0x03D33308 MOV X1, X31
	0x03D3330C BL 0x3C6CDB0
	0x03D33310 MOV X0, X22
	0x03D33314 MOV X1, X31
	0x03D33318 BL 0x3C04D1C
	0x03D3331C MOV X0, X23
	0x03D33320 MOV X1, X31
	0x03D33324 BL 0x3C2085C
	0x03D33328 LDR X0, [X19 + 0x10]
	0x03D3332C CBZ X0, 0x3D339F0
	0x03D33330 ADRP X8, 0x432000
	0x03D33334 LDR X8, [X8 + 0x48]
	0x03D33338 LDR X1, [X8]
	0x03D3333C ADD X8, X31, 0x1E0
	0x03D33340 BL 0x2601AC4
	0x03D33344 LDP V0, V1, [X31 + 0x1E0]
	0x03D33348 LDP V2, V3, [X31 + 0x200]
	0x03D3334C ADD X0, X31, 0xC0
	0x03D33350 MOV X1, X31
	0x03D33354 STP V0, V1, [X31 + 0xC0]
	0x03D33358 STP V2, V3, [X31 + 0xE0]
	0x03D3335C BL 0x3C0FFF8
	0x03D33360 LDP V0, V1, [X31 + 0x190]
	0x03D33364 LDP V2, V3, [X31 + 0x1B0]
	0x03D33368 ADD X0, X31, 0x80
	0x03D3336C MOV X1, X31
	0x03D33370 STP V0, V1, [X31 + 0x80]
	0x03D33374 STP V2, V3, [X31 + 0xA0]
	0x03D33378 BL 0x3C100E4
	0x03D3337C CMP W25, 0x1
	0x03D33380 B.LE 0x3D339C4
	0x03D33384 LDR X0, [X19 + 0x18]
	0x03D33388 CBZ X0, 0x3D339F0
	0x03D3338C ADRP X8, 0x432000
	0x03D33390 LDR X8, [X8 + 0x50]
	0x03D33394 LDR X1, [X8]
	0x03D33398 BL 0x2602978
	0x03D3339C ADRP X8, 0x431000
	0x03D333A0 LDR X8, [X8 + 0x9B8]
	0x03D333A4 MOV V9.16B, V0.16B
	0x03D333A8 MOV V10.16B, V1.16B
	0x03D333AC MOV V11.16B, V2.16B
	0x03D333B0 LDR X0, [X8]
	0x03D333B4 MOV V8.16B, V3.16B
	0x03D333B8 LDR W8, [X0 + 0xE0]
	0x03D333BC CBNZ W8, 0x3D333C4
	0x03D333C0 BL 0x1C16DFC
	0x03D333C4 MOV V0.16B, V9.16B
	0x03D333C8 MOV V1.16B, V10.16B
	0x03D333CC MOV V2.16B, V11.16B
	0x03D333D0 MOV V3.16B, V8.16B
	0x03D333D4 MOV V4.16B, V13.16B
	0x03D333D8 BL 0x3D34BE4
	0x03D333DC MOV X19, X0
	0x03D333E0 LDR X0, [X24]
	0x03D333E4 B 0x3D339A4
	0x03D333E8 LDR X0, [X20 + 0x18]
	0x03D333EC CBZ X0, 0x3D339F0
	0x03D333F0 MOV X1, X31
	0x03D333F4 BL 0x3DEE4D8
	0x03D333F8 CBZ X19, 0x3D339F0
	0x03D333FC LDR X0, [X19 + 0x18]
	0x03D33400 STR S13, [X31 + 0x26C]
	0x03D33404 CBZ X0, 0x3D339F0
	0x03D33408 ADRP X8, 0x432000
	0x03D3340C LDR X8, [X8 + 0x50]
	0x03D33410 MOV V9.16B, V0.16B
	0x03D33414 MOV V10.16B, V1.16B
	0x03D33418 MOV V11.16B, V2.16B
	0x03D3341C LDR X1, [X8]
	0x03D33420 MOV V12.16B, V3.16B
	0x03D33424 BL 0x2602978
	0x03D33428 ADRP X8, 0x431000
	0x03D3342C LDR X8, [X8 + 0x9B8]
	0x03D33430 MOV V13.16B, V0.16B
	0x03D33434 MOV V14.16B, V1.16B
	0x03D33438 MOV V15.16B, V2.16B
	0x03D3343C LDR X0, [X8]
	0x03D33440 MOV V8.16B, V3.16B
	0x03D33444 LDR W8, [X0 + 0xE0]
	0x03D33448 CBNZ W8, 0x3D33450
	0x03D3344C BL 0x1C16DFC
	0x03D33450 MOV V0.16B, V9.16B
	0x03D33454 MOV V1.16B, V10.16B
	0x03D33458 MOV V2.16B, V11.16B
	0x03D3345C MOV V3.16B, V12.16B
	0x03D33460 MOV V4.16B, V13.16B
	0x03D33464 MOV V5.16B, V14.16B
	0x03D33468 MOV V6.16B, V15.16B
	0x03D3346C MOV V7.16B, V8.16B
	0x03D33470 BL 0x3D34F4C
	0x03D33474 LDR X0, [X19 + 0x18]
	0x03D33478 CBZ X0, 0x3D339F0
	0x03D3347C ADRP X8, 0x432000
	0x03D33480 LDR X8, [X8 + 0x18]
	0x03D33484 MOV V9.16B, V0.16B
	0x03D33488 MOV V10.16B, V1.16B
	0x03D3348C MOV V11.16B, V2.16B
	0x03D33490 LDR X1, [X8]
	0x03D33494 MOV V12.16B, V3.16B
	0x03D33498 BL 0x2602A14
	0x03D3349C LDR V4, [X31 + 0x26C]
	0x03D334A0 MOV V0.16B, V9.16B
	0x03D334A4 MOV V1.16B, V10.16B
	0x03D334A8 MOV V2.16B, V11.16B
	0x03D334AC MOV V3.16B, V12.16B
	0x03D334B0 B 0x3D33990
	0x03D334B4 CBZ X19, 0x3D339F0
	0x03D334B8 LDR X0, [X20 + 0x18]
	0x03D334BC CBZ X0, 0x3D339F0
	0x03D334C0 LDR X21, [X19 + 0x10]
	0x03D334C4 ADD X8, X31, 0x1E0
	0x03D334C8 MOV X1, X31
	0x03D334CC BL 0x3DEDD74
	0x03D334D0 LDP V0, V1, [X31 + 0x1E0]
	0x03D334D4 LDP V2, V3, [X31 + 0x200]
	0x03D334D8 STP V0, V1, [X31 + 0x140]
	0x03D334DC STP V2, V3, [X31 + 0x160]
	0x03D334E0 CBZ X21, 0x3D339F0
	0x03D334E4 ADRP X8, 0x432000
	0x03D334E8 LDR X8, [X8 + 0x10]
	0x03D334EC LDP V0, V1, [X31 + 0x140]
	0x03D334F0 LDP V2, V3, [X31 + 0x160]
	0x03D334F4 ADD X1, X31, 0x1E0
	0x03D334F8 LDR X2, [X8]
	0x03D334FC MOV X0, X21
	0x03D33500 STP V0, V1, [X31 + 0x1E0]
	0x03D33504 STP V2, V3, [X31 + 0x200]
	0x03D33508 BL 0x2601B84
	0x03D3350C LDR X0, [X20 + 0x18]
	0x03D33510 CBZ X0, 0x3D339F0
	0x03D33514 ADD X8, X31, 0x1E0
	0x03D33518 MOV X1, X31
	0x03D3351C BL 0x3DEDD74
	0x03D33520 LDP V0, V1, [X31 + 0x1E0]
	0x03D33524 LDP V2, V3, [X31 + 0x200]
	0x03D33528 ADD X0, X31, 0x40
	0x03D3352C MOV X1, X31
	0x03D33530 STP V0, V1, [X31 + 0x40]
	0x03D33534 STP V2, V3, [X31 + 0x60]
	0x03D33538 BL 0x3C0FFF8
	0x03D3353C LDR X8, [X20 + 0x18]
	0x03D33540 CBZ X8, 0x3D339F0
	0x03D33544 LDR X8, [X8 + 0x378]
	0x03D33548 ADD X0, X31, 0x188
	0x03D3354C MOV X1, X31
	0x03D33550 STR X8, [X31 + 0x188]
	0x03D33554 BL 0x3DF88DC
	0x03D33558 CBZ X0, 0x3D33914
	0x03D3355C MOV X1, X31
	0x03D33560 BL 0x3DEE4D8
	0x03D33564 MOV V9.16B, V0.16B
	0x03D33568 MOV V10.16B, V1.16B
	0x03D3356C MOV V11.16B, V2.16B
	0x03D33570 MOV V12.16B, V3.16B
	0x03D33574 B 0x3D3393C
	0x03D33578 CBZ X19, 0x3D339F0
	0x03D3357C LDR X0, [X19 + 0x10]
	0x03D33580 CBZ X0, 0x3D339F0
	0x03D33584 ADRP X8, 0x432000
	0x03D33588 LDR X8, [X8 + 0x58]
	0x03D3358C LDR X1, [X8]
	0x03D33590 ADD X8, X31, 0x1E0
	0x03D33594 BL 0x2601B18
	0x03D33598 LDR X0, [X19 + 0x10]
	0x03D3359C CBZ X0, 0x3D339F0
	0x03D335A0 ADRP X8, 0x432000
	0x03D335A4 LDR X8, [X8 + 0x48]
	0x03D335A8 LDR X1, [X8]
	0x03D335AC ADD X8, X31, 0x1E0
	0x03D335B0 BL 0x2601AC4
	0x03D335B4 LDP V0, V1, [X31 + 0x1E0]
	0x03D335B8 LDP V2, V3, [X31 + 0x200]
	0x03D335BC ADD X0, X31, 0x0
	0x03D335C0 MOV X1, X31
	0x03D335C4 STP V0, V1, [X31]
	0x03D335C8 STP V2, V3, [X31 + 0x20]
	0x03D335CC BL 0x3C0FFF8
	0x03D335D0 B 0x3D336D8
	0x03D335D4 CBZ X19, 0x3D339F0
	0x03D335D8 LDR X8, [X19 + 0x20]
	0x03D335DC CBZ X8, 0x3D339F0
	0x03D335E0 ADRP X9, 0x3C0000
	0x03D335E4 LDR X9, [X9 + 0xA28]
	0x03D335E8 LDR W21, [X8 + 0x18]
	0x03D335EC LDR X0, [X9]
	0x03D335F0 SUB W20, W21, 0x1
	0x03D335F4 LDR W8, [X0 + 0xE0]
	0x03D335F8 CBNZ W8, 0x3D33600
	0x03D335FC BL 0x1C16DFC
	0x03D33600 CMP W20, 0x0
	0x03D33604 CSET W0, GT
	0x03D33608 MOV X1, X31
	0x03D3360C BL 0x3C06E58
	0x03D33610 LDR X0, [X19 + 0x20]
	0x03D33614 CBZ X0, 0x3D339F0
	0x03D33618 ADRP X23, 0x432000
	0x03D3361C LDR X23, [X23 + 0x40]
	0x03D33620 SUB W1, W21, 0x2
	0x03D33624 LDR X2, [X23]
	0x03D33628 BL 0x301BCCC
	0x03D3362C MOV X21, X0
	0x03D33630 MOV X0, X31
	0x03D33634 BL 0x3C20834
	0x03D33638 ADRP X8, 0x3C0000
	0x03D3363C LDR X8, [X8 + 0x598]
	0x03D33640 MOV X22, X0
	0x03D33644 LDR X8, [X8]
	0x03D33648 LDR W9, [X8 + 0xE0]
	0x03D3364C CBNZ W9, 0x3D33658
	0x03D33650 MOV X0, X8
	0x03D33654 BL 0x1C16DFC
	0x03D33658 MOV X0, X21
	0x03D3365C MOV X1, X22
	0x03D33660 MOV X2, X31
	0x03D33664 BL 0x3C3883C
	0x03D33668 ADRP X8, 0x432000
	0x03D3366C LDR X8, [X8 + 0x70]
	0x03D33670 AND W0, W0, 0x1
	0x03D33674 MOV X2, X31
	0x03D33678 LDR X1, [X8]
	0x03D3367C BL 0x3C06F88
	0x03D33680 LDR X0, [X19 + 0x20]
	0x03D33684 CBZ X0, 0x3D339F0
	0x03D33688 LDR X2, [X23]
	0x03D3368C MOV W1, W20
	0x03D33690 BL 0x301BCCC
	0x03D33694 MOV X1, X31
	0x03D33698 MOV X2, X31
	0x03D3369C MOV X21, X0
	0x03D336A0 BL 0x3C354F8
	0x03D336A4 TBZ X0, 0x0, 0x3D336B4
	0x03D336A8 MOV X0, X21
	0x03D336AC MOV X1, X31
	0x03D336B0 BL 0x3C20C50
	0x03D336B4 LDR X0, [X19 + 0x20]
	0x03D336B8 CBZ X0, 0x3D339F0
	0x03D336BC ADRP X8, 0x432000
	0x03D336C0 LDR X8, [X8 + 0x30]
	0x03D336C4 MOV W1, W20
	0x03D336C8 LDR X2, [X8]
	0x03D336CC BL 0x301DA48
	0x03D336D0 B 0x3D339C4
	0x03D336D4 CBZ X19, 0x3D339F0
	0x03D336D8 LDR X0, [X19 + 0x18]
	0x03D336DC CBZ X0, 0x3D339F0
	0x03D336E0 ADRP X8, 0x432000
	0x03D336E4 LDR X8, [X8 + 0x60]
	0x03D336E8 LDR X1, [X8]
	0x03D336EC BL 0x26029C0
	0x03D336F0 LDR X0, [X19 + 0x18]
	0x03D336F4 CBZ X0, 0x3D339F0
	0x03D336F8 ADRP X8, 0x432000
	0x03D336FC LDR X8, [X8 + 0x50]
	0x03D33700 LDR X1, [X8]
	0x03D33704 BL 0x2602978
	0x03D33708 ADRP X19, 0x431000
	0x03D3370C LDR X19, [X19 + 0xDA8]
	0x03D33710 MOV V9.16B, V0.16B
	0x03D33714 MOV V10.16B, V1.16B
	0x03D33718 MOV V11.16B, V2.16B
	0x03D3371C LDR X0, [X19]
	0x03D33720 MOV V12.16B, V3.16B
	0x03D33724 LDR W8, [X0 + 0xE0]
	0x03D33728 CBNZ W8, 0x3D33734
	0x03D3372C BL 0x1C16DFC
	0x03D33730 LDR X0, [X19]
	0x03D33734 LDR X8, [X0 + 0xB8]
	0x03D33738 LDR V0, [X8]
	0x03D3373C FCMP S9, S0
	0x03D33740 B.NE 0x3D33964
	0x03D33744 ADRP X8, 0x3E9000
	0x03D33748 LDR X8, [X8 + 0x820]
	0x03D3374C LDR X0, [X8]
	0x03D33750 LDR W8, [X0 + 0xE0]
	0x03D33754 CBNZ W8, 0x3D3375C
	0x03D33758 BL 0x1C16DFC
	0x03D3375C MOV X0, X31
	0x03D33760 BL 0x3D1F8CC
	0x03D33764 B 0x3D339C4
	0x03D33768 ADRP X8, 0x3E9000
	0x03D3376C LDR X8, [X8 + 0x820]
	0x03D33770 LDR X0, [X8]
	0x03D33774 LDR W8, [X0 + 0xE0]
	0x03D33778 CBNZ W8, 0x3D33780
	0x03D3377C BL 0x1C16DFC
	0x03D33780 MOV X0, X31
	0x03D33784 BL 0x3D1FAE8
	0x03D33788 MOV X0, X1
	0x03D3378C UBFM X1, X1, 0x20, 0x3F
	0x03D33790 MOVZ W2, 0x18
	0x03D33794 MOVZ W3, 0x2
	0x03D33798 MOV X4, X31
	0x03D3379C BL 0x3C22390
	0x03D337A0 MOV X1, X31
	0x03D337A4 BL 0x3C2085C
	0x03D337A8 ADRP X8, 0xFFFFFFFFFCDB7000
	0x03D337AC LDR V4, [X8 + 0x68]
	0x03D337B0 FMOV S0, W31
	0x03D337B4 FMOV S1, W31
	0x03D337B8 FMOV S2, W31
	0x03D337BC FMOV S3, W31
	0x03D337C0 MOVZ W0, 0x1
	0x03D337C4 MOVZ W1, 0x1
	0x03D337C8 MOV X2, X31
	0x03D337CC BL 0x3C10410
	0x03D337D0 CBZ X19, 0x3D339F0
	0x03D337D4 LDR X19, [X19 + 0x20]
	0x03D337D8 MOV X0, X31
	0x03D337DC BL 0x3C20834
	0x03D337E0 CBZ X19, 0x3D339F0
	0x03D337E4 ADRP X9, 0x431000
	0x03D337E8 LDR X9, [X9 + 0xFC8]
	0x03D337EC LDR W10, [X19 + 0x1C]
	0x03D337F0 LDR X8, [X19 + 0x10]
	0x03D337F4 LDR X9, [X9]
	0x03D337F8 ADD W10, W10, 0x1
	0x03D337FC STR W10, [X19 + 0x1C]
	0x03D33800 CBZ X8, 0x3D339F0
	0x03D33804 LDRSW X10, [X19 + 0x18]
	0x03D33808 LDR W11, [X8 + 0x18]
	0x03D3380C MOV X1, X0
	0x03D33810 CMP W10, W11
	0x03D33814 B.CS 0x3D338FC
	0x03D33818 ADD W9, W10, 0x1
	0x03D3381C ADD X8, X8, X10, 0x3, LSL
	0x03D33820 STR W9, [X19 + 0x18]
	0x03D33824 STR X1, [X8 + 0x20]
	0x03D33828 B 0x3D339C4
	0x03D3382C CBZ X19, 0x3D339F0
	0x03D33830 LDR X0, [X19 + 0x20]
	0x03D33834 CBZ X0, 0x3D339F0
	0x03D33838 ADRP X21, 0x432000
	0x03D3383C LDR W8, [X0 + 0x18]
	0x03D33840 LDR X21, [X21 + 0x40]
	0x03D33844 SUB W1, W8, 0x1
	0x03D33848 LDR X2, [X21]
	0x03D3384C BL 0x301BCCC
	0x03D33850 LDR X8, [X19 + 0x20]
	0x03D33854 CBZ X8, 0x3D339F0
	0x03D33858 LDR W9, [X8 + 0x18]
	0x03D3385C LDR X2, [X21]
	0x03D33860 MOV X19, X0
	0x03D33864 MOV X0, X8
	0x03D33868 SUB W1, W9, 0x2
	0x03D3386C BL 0x301BCCC
	0x03D33870 MOV X21, X0
	0x03D33874 MOV X0, X31
	0x03D33878 BL 0x3C20834
	0x03D3387C ADRP X8, 0x3C0000
	0x03D33880 LDR X8, [X8 + 0x598]
	0x03D33884 MOV X22, X0
	0x03D33888 LDR X8, [X8]
	0x03D3388C LDR W9, [X8 + 0xE0]
	0x03D33890 CBNZ W9, 0x3D3389C
	0x03D33894 MOV X0, X8
	0x03D33898 BL 0x1C16DFC
	0x03D3389C MOV X0, X19
	0x03D338A0 MOV X1, X22
	0x03D338A4 MOV X2, X31
	0x03D338A8 BL 0x3C3883C
	0x03D338AC ADRP X8, 0x3C0000
	0x03D338B0 LDR X8, [X8 + 0xA28]
	0x03D338B4 MOV W22, W0
	0x03D338B8 LDR X8, [X8]
	0x03D338BC LDR W9, [X8 + 0xE0]
	0x03D338C0 CBNZ W9, 0x3D338CC
	0x03D338C4 MOV X0, X8
	0x03D338C8 BL 0x1C16DFC
	0x03D338CC ADRP X8, 0x432000
	0x03D338D0 LDR X8, [X8 + 0x78]
	0x03D338D4 AND W0, W22, 0x1
	0x03D338D8 MOV X2, X31
	0x03D338DC LDR X1, [X8]
	0x03D338E0 BL 0x3C06F88
	0x03D338E4 FMOV S0, W31
	0x03D338E8 MOV X0, X20
	0x03D338EC MOV X1, X19
	0x03D338F0 MOV X2, X21
	0x03D338F4 BL 0x3D35054
	0x03D338F8 B 0x3D339C4
	0x03D338FC LDR X8, [X9 + 0x20]
	0x03D33900 MOV X0, X19
	0x03D33904 LDR X8, [X8 + 0xC0]
	0x03D33908 LDR X2, [X8 + 0x70]
	0x03D3390C BL 0x301BF90
	0x03D33910 B 0x3D339C4
	0x03D33914 ADRP X20, 0x431000
	0x03D33918 LDR X20, [X20 + 0xDA8]
	0x03D3391C LDR X0, [X20]
	0x03D33920 LDR W8, [X0 + 0xE0]
	0x03D33924 CBNZ W8, 0x3D33930
	0x03D33928 BL 0x1C16DFC
	0x03D3392C LDR X0, [X20]
	0x03D33930 LDR X8, [X0 + 0xB8]
	0x03D33934 LDP S9, S10, [X8 + 0x10]
	0x03D33938 LDP S11, S12, [X8 + 0x18]
	0x03D3393C LDR X0, [X19 + 0x18]
	0x03D33940 CBZ X0, 0x3D339F0
	0x03D33944 ADRP X8, 0x432000
	0x03D33948 LDR X8, [X8 + 0x18]
	0x03D3394C MOV V0.16B, V9.16B
	0x03D33950 MOV V1.16B, V10.16B
	0x03D33954 MOV V2.16B, V11.16B
	0x03D33958 LDR X1, [X8]
	0x03D3395C MOV V3.16B, V12.16B
	0x03D33960 BL 0x2602A14
	0x03D33964 ADRP X8, 0x431000
	0x03D33968 LDR X8, [X8 + 0x9B8]
	0x03D3396C LDR X0, [X8]
	0x03D33970 LDR W8, [X0 + 0xE0]
	0x03D33974 CBNZ W8, 0x3D3397C
	0x03D33978 BL 0x1C16DFC
	0x03D3397C MOV V0.16B, V9.16B
	0x03D33980 MOV V1.16B, V10.16B
	0x03D33984 MOV V2.16B, V11.16B
	0x03D33988 MOV V3.16B, V12.16B
	0x03D3398C MOV V4.16B, V13.16B
	0x03D33990 BL 0x3D34BE4
	0x03D33994 ADRP X8, 0x3E9000
	0x03D33998 LDR X8, [X8 + 0x820]
	0x03D3399C MOV X19, X0
	0x03D339A0 LDR X0, [X8]
	0x03D339A4 LDR W8, [X0 + 0xE0]
	0x03D339A8 MOV X20, X1
	0x03D339AC CBNZ W8, 0x3D339B4
	0x03D339B0 BL 0x1C16DFC
	0x03D339B4 MOV X0, X19
	0x03D339B8 MOV X1, X20
	0x03D339BC MOV X2, X31
	0x03D339C0 BL 0x3D1F810
	0x03D339C4 ADD X31, X31, 0x220
	0x03D339C8 LDP X20, X19, [X31 + 0x80]
	0x03D339CC LDP X22, X21, [X31 + 0x70]
	0x03D339D0 LDP X24, X23, [X31 + 0x60]
	0x03D339D4 LDP X30, X25, [X31 + 0x50]
	0x03D339D8 LDR X29, [X31 + 0x40]
	0x03D339DC LDP D9, D8, [X31 + 0x30]
	0x03D339E0 LDP D11, D10, [X31 + 0x20]
	0x03D339E4 LDP D13, D12, [X31 + 0x10]
	0x03D339E8 LDP D15, D14, [X31], #0x90
	0x03D339EC RET
	0x03D339F0 BL 0x1C16F20
	0x03D339F4 BL 0x1C16F20
	0x03D339F8 CMP W1, 0x1
	0x03D339FC MOV X20, X0
	0x03D33A00 B.NE 0x3D33A74
	0x03D33A04 MOV X0, X20
	0x03D33A08 BL 0x3EB1AD0
	0x03D33A0C MOV X20, X0
	0x03D33A10 ADRP X0, 0x3C0000
	0x03D33A14 LDR X0, [X0 + 0x7D0]
	0x03D33A18 BL 0x1C16D08
	0x03D33A1C LDR X8, [X20]
	0x03D33A20 LDR X1, [X8]
	0x03D33A24 BL 0x1C17270
	0x03D33A28 TBZ X0, 0x0, 0x3D33A3C
	0x03D33A2C LDR X20, [X20]
	0x03D33A30 BL 0x3EB1AE0
	0x03D33A34 STR X20, [X21]
	0x03D33A38 B 0x3D33304
	0x03D33A3C MOVZ W0, 0x8
	0x03D33A40 BL 0x3EB1AF0
	0x03D33A44 LDR X8, [X20]
	0x03D33A48 STR X8, [X0]
	0x03D33A4C ADRP X1, 0x181000
	0x03D33A50 ADD X1, X1, 0xE58
	0x03D33A54 MOV X2, X31
	0x03D33A58 BL 0x3EB1B00
	0x03D33A5C MOV X20, X0
	0x03D33A60 B 0x3D33A74
	0x03D33A64 MOV X21, X1
	0x03D33A68 MOV X20, X0
	0x03D33A6C BL 0x3EB1AE0
	0x03D33A70 MOV W1, W21
	0x03D33A74 MOVZ W8, 0x1
	0x03D33A78 CMP W1, W8
	0x03D33A7C B.NE 0x3D33AA8
	0x03D33A80 MOV X0, X20
	0x03D33A84 BL 0x3EB1AD0
	0x03D33A88 LDR X21, [X0]
	0x03D33A8C BL 0x3EB1AE0
	0x03D33A90 ADD X0, X31, 0x268
	0x03D33A94 MOV X1, X31
	0x03D33A98 BL 0x3C6CDB0
	0x03D33A9C CBZ X21, 0x3D33310
	0x03D33AA0 MOV X0, X21
	0x03D33AA4 BL 0x1C16F18
	0x03D33AA8 MOV X21, X31
	0x03D33AAC B 0x3D33AB4
	0x03D33AB0 MOV X20, X0
	0x03D33AB4 ADD X0, X31, 0x268
	0x03D33AB8 MOV X1, X31
	0x03D33ABC BL 0x3C6CDB0
	0x03D33AC0 CBNZ X21, 0x3D33ACC
	0x03D33AC4 MOV X0, X20
	0x03D33AC8 BL 0x1D2C690
	0x03D33ACC MOV X0, X21
	0x03D33AD0 BL 0x1C16F18
	0x03D33AD4 BL 0x1990590
	0x03D33AD8 STP X30, X21, [X31 - 0x20]!
	0x03D33ADC STP X20, X19, [X31 + 0x10]
	0x03D33AE0 ADRP X19, 0x6B4000
	0x03D33AE4 LDRB W8, [X19 + 0xB23]
	0x03D33AE8 MOV X20, X0
	0x03D33AEC TBNZ X8, 0x0, 0x3D33B04
	0x03D33AF0 ADRP X0, 0x3E9000
	0x03D33AF4 LDR X0, [X0 + 0x820]
	0x03D33AF8 BL 0x1C16CF4
	0x03D33AFC MOVZ W8, 0x1
	0x03D33B00 STRB W8, [X19 + 0xB23]
	0x03D33B04 LDR X8, [X20 + 0x50]
	0x03D33B08 CBZ X8, 0x3D33B8C
	0x03D33B0C ADRP X8, 0x3E9000
	0x03D33B10 LDR X8, [X8 + 0x820]
	0x03D33B14 LDR X0, [X8]
	0x03D33B18 LDR W8, [X0 + 0xE0]
	0x03D33B1C CBNZ W8, 0x3D33B24
	0x03D33B20 BL 0x1C16DFC
	0x03D33B24 MOV X0, X31
	0x03D33B28 BL 0x3D1FA20
	0x03D33B2C LDR X8, [X20 + 0x50]
	0x03D33B30 CBZ X8, 0x3D33B98
	0x03D33B34 LDR X9, [X8 + 0x18]
	0x03D33B38 LDR W10, [X20 + 0x60]
	0x03D33B3C SXTW X11, W9
	0x03D33B40 SDIV X9, X10, X11
	0x03D33B44 MSUB X9, X9, X11, X10
	0x03D33B48 CMP W9, W11
	0x03D33B4C B.CS 0x3D33B9C
	0x03D33B50 ADD X8, X8, X9, 0x2, LSL
	0x03D33B54 MOV W19, W0
	0x03D33B58 ADD X20, X8, 0x20
	0x03D33B5C LDR W21, [X20]
	0x03D33B60 SUB W8, W19, W21
	0x03D33B64 CMP W8, 0x0
	0x03D33B68 B.LE 0x3D33B8C
	0x03D33B6C MOV X0, X20
	0x03D33B70 MOV W1, W19
	0x03D33B74 MOV W2, W21
	0x03D33B78 MOV X3, X31
	0x03D33B7C BL 0x33E7AB4
	0x03D33B80 SXTW X8, W0
	0x03D33B84 CMP X8, X21
	0x03D33B88 B.NE 0x3D33B5C
	0x03D33B8C LDP X20, X19, [X31 + 0x10]
	0x03D33B90 LDP X30, X21, [X31], #0x20
	0x03D33B94 RET
	0x03D33B98 BL 0x1C16F20
	0x03D33B9C BL 0x1C16F28
	0x03D33BA0 STR X30, [X31 - 0x20]!
	0x03D33BA4 STP X20, X19, [X31 + 0x10]
	0x03D33BA8 ADRP X20, 0x6B4000
	0x03D33BAC LDRB W8, [X20 + 0xB25]
	0x03D33BB0 MOV W19, W1
	0x03D33BB4 TBNZ X8, 0x0, 0x3D33BCC
	0x03D33BB8 ADRP X0, 0x3E9000
	0x03D33BBC LDR X0, [X0 + 0x820]
	0x03D33BC0 BL 0x1C16CF4
	0x03D33BC4 MOVZ W8, 0x1
	0x03D33BC8 STRB W8, [X20 + 0xB25]
	0x03D33BCC CBZ W19, 0x3D33BF8
	0x03D33BD0 ADRP X20, 0x3E9000
	0x03D33BD4 LDR X20, [X20 + 0x820]
	0x03D33BD8 LDR X0, [X20]
	0x03D33BDC LDR W8, [X0 + 0xE0]
	0x03D33BE0 CBNZ W8, 0x3D33BE8
	0x03D33BE4 BL 0x1C16DFC
	0x03D33BE8 MOV W0, W19
	0x03D33BEC MOV X1, X31
	0x03D33BF0 BL 0x3D1FA48
	0x03D33BF4 TBZ X0, 0x0, 0x3D33C04
	0x03D33BF8 LDP X20, X19, [X31 + 0x10]
	0x03D33BFC LDR X30, [X31], #0x20
	0x03D33C00 RET
	0x03D33C04 LDR X0, [X20]

ISIL:
	001 Move [X31-112], D8
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Add X29, X31, 16
	015 Subtract X31, X31, 208
	016 Move [X29-160], X3
	017 Move [X29-152], X0
	018 NotImplemented "Instruction MRS not yet implemented."
	019 Move X8, [X22+40]
	020 Move X21, 0x6B5000
	021 Move X10, [X29+96]
	022 Move X9, [X29+104]
	023 Move V8, V0
	024 Move [X29-32], X8
	025 Move W8, [X21+2850]
	026 Move X23, X5
	027 Move X26, X4
	028 Move X24, X2
	029 Move X20, X1
	030 Move [X29-48], X6
	031 Move [X29-40], X7
	032 Move [X29-64], X10
	033 Move [X29-56], X9
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {85}
	038 Move X0, 0x3C1000
	039 Move X0, [X0+2600]
	040 Call 0x1C17CF4
	041 Move X0, 0x3C8000
	042 Move X0, [X0+2672]
	043 Call 0x1C17CF4
	044 Move X0, 0x432000
	045 Move X0, [X0+4040]
	046 Call 0x1C17CF4
	047 Move X0, 0x41C000
	048 Move X0, [X0+1408]
	049 Call 0x1C17CF4
	050 Move X0, 0x41B000
	051 Move X0, [X0+3904]
	052 Call 0x1C17CF4
	053 Move X0, 0x41B000
	054 Move X0, [X0+3912]
	055 Call 0x1C17CF4
	056 Move X0, 0x432000
	057 Move X0, [X0+4048]
	058 Call 0x1C17CF4
	059 Move X0, 0x432000
	060 Move X0, [X0+4056]
	061 Call 0x1C17CF4
	062 Move X0, 0x3C1000
	063 Move X0, [X0+1432]
	064 Call 0x1C17CF4
	065 Move X0, 0x3E9000
	066 Move X0, [X0+1568]
	067 Call 0x1C17CF4
	068 Move X0, 0x432000
	069 Move X0, [X0+4064]
	070 Call 0x1C17CF4
	071 Move X0, 0x432000
	072 Move X0, [X0+1784]
	073 Call 0x1C17CF4
	074 Move X0, 0x432000
	075 Move X0, [X0+4072]
	076 Call 0x1C17CF4
	077 Move X0, 0x432000
	078 Move X0, [X0+4080]
	079 Call 0x1C17CF4
	080 Move X0, 0x3EA000
	081 Move X0, [X0+2080]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X21+2850], W8
	085 Move [X29-80], X31
	086 Move [X29-72], X31
	087 Move X8, 0x3EA000
	088 Move X8, [X8+2080]
	089 NotImplemented "Instruction MOVI not yet implemented."
	090 Move [X29-112], V0
	091 Move [X29-104], V0
	092 Move [X29-128], V0
	093 Move X0, [X8]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X31
	099 Call Utility.ProfileDrawChainBegin
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 Move X21, [X8+152]
	102 Compare X21, 0
	103 JumpIfEqual {762}
	104 Move W8, [X8+172]
	105 Move X0, X21
	106 Move [X29-164], W8
	107 Call DrawParams.Reset, X0
	108 Move X27, [X21+32]
	109 Move X0, X31
	110 Call RenderTexture.get_active
	111 Compare X27, 0
	112 JumpIfEqual {762}
	113 Move [X29-208], X21
	114 Move X9, 0x432000
	115 Move X9, [X9+4040]
	116 Move W10, [X27+28]
	117 Move X8, [X27+16]
	118 Move X9, [X9]
	119 Add W10, W10, 1
	120 Move [X27+28], W10
	121 Compare X8, 0
	122 JumpIfEqual {762}
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Move W11, [X8+24]
	125 Move X25, [X29+112]
	126 Move X1, X0
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add W9, W10, 1
	129 Add X8, X8, X10
	130 Move [X27+24], W9
	131 Move [X8+32], X1
	132 Move X8, [X9+32]
	133 Move X0, X27
	134 Move X8, [X8+192]
	135 Move X2, [X8+112]
	136 Call List`1<Object>.AddWithResize, X0, X1
	137 Compare X25, 0
	138 JumpIfEqual {762}
	139 Move X0, X25
	140 Move X1, X31
	141 Move [X29-200], X22
	142 Call MaterialPropertyBlock.Clear, X0
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 Move X0, [X19+160]
	145 Compare X0, 0
	146 JumpIfEqual {762}
	147 Call TextureSlotManager.Reset, X0
	148 Move X8, [X19+80]
	149 Compare X8, 0
	150 JumpIfEqual {299}
	151 Move X8, 0x3C1000
	152 Move X8, [X8+1432]
	153 Move X0, [X8]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Move X0, X26
	159 Move X1, X31
	160 Move X2, X31
	161 Call Object.op_Inequality, X0, X1
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {184}
	166 Move X21, 0x432000
	167 Move X21, [X21+1784]
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 Move X0, [X21]
	170 Move X27, [X9+88]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Compare X27, 0
	176 JumpIfEqual {762}
	177 Move X8, [X21]
	178 Move X0, X27
	179 Move X2, X26
	180 Move X3, X31
	181 Move X8, [X8+184]
	182 Move W1, [X8+16]
	183 Call MaterialPropertyBlock.SetTexture, X0, X1, X2
	184 Move X8, 0x3C1000
	185 Move X8, [X8+1432]
	186 Move X0, [X8]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {191}
	190 Call 0x1C17DFC
	191 Move X0, X23
	192 Move X1, X31
	193 Move X2, X31
	194 Call Object.op_Inequality, X0, X1
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfNotEqual {218}
	200 Move X21, 0x432000
	201 Move X21, [X21+1784]
	202 Move X26, [X19+88]
	203 Move X0, [X21]
	204 Move W8, [X0+224]
	205 Compare W8, 0
	206 JumpIfNotEqual {208}
	207 Call 0x1C17DFC
	208 Compare X26, 0
	209 JumpIfEqual {762}
	210 Move X8, [X21]
	211 Move X0, X26
	212 Move X2, X23
	213 Move X3, X31
	214 Move X8, [X8+184]
	215 Move W1, [X8+20]
	216 Call MaterialPropertyBlock.SetTexture, X0, X1, X2
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 Move X8, 0x432000
	219 Move X8, [X8+4048]
	220 Move X21, 0x432000
	221 Subtract X0, X29, 48
	222 Move X1, [X8]
	223 Move X21, [X21+4056]
	224 Call NativeSlice`1<Transform3x4>.get_Length, X0
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X22, 0x432000
	227 Move X22, [X22+1784]
	228 Move X23, [X19+88]
	229 Move X0, [X22]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {235}
	233 Call 0x1C17DFC
	234 Move X0, [X22]
	235 Move X9, 0x3EA000
	236 Move X8, [X0+184]
	237 Move X9, [X9+2080]
	238 Move X27, [X29-48]
	239 Move X26, [X29-40]
	240 Move W28, [X8+24]
	241 Move X0, [X9]
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Move X8, 0x432000
	247 Move X8, [X8+4072]
	248 Move X0, X23
	249 Move W1, W28
	250 Move X2, X27
	251 Move X4, [X8]
	252 Move X3, X26
	253 Call 0x22A9A80, X0, X1, X2
	254 NotImplemented "Instruction LDUR not yet implemented."
	255 Move X1, [X21]
	256 Subtract X0, X29, 64
	257 Call NativeSlice`1<Vector4>.get_Length, X0
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move X21, 0x432000
	260 Move X21, [X21+1784]
	261 Move X23, [X19+88]
	262 Move X0, [X21]
	263 Move W8, [X0+224]
	264 Compare W8, 0
	265 JumpIfNotEqual {268}
	266 Call 0x1C17DFC
	267 Move X0, [X21]
	268 Move X9, 0x3EA000
	269 Move X8, [X0+184]
	270 Move X9, [X9+2080]
	271 Move X27, [X29-64]
	272 Move X26, [X29-56]
	273 Move W28, [X8+28]
	274 Move X0, [X9]
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Move X8, 0x432000
	280 Move X8, [X8+4080]
	281 Move X0, X23
	282 Move W1, W28
	283 Move X2, X27
	284 Move X4, [X8]
	285 Move X3, X26
	286 Call Utility.SetVectorArray, X0, X1, X2
	287 NotImplemented "Instruction LDUR not yet implemented."
	288 Move X8, 0x3EA000
	289 Move X8, [X8+2080]
	290 Move X23, [X19+88]
	291 Move X0, [X8]
	292 Move W8, [X0+224]
	293 Compare W8, 0
	294 JumpIfNotEqual {296}
	295 Call 0x1C17DFC
	296 Move X0, X23
	297 Move X1, X31
	298 Call Utility.SetPropertyBlock, X0
	299 Move W8, [X29+120]
	300 Subtract X0, X31, 0x4000
	301 Move [X29-188], W8
	302 Add X31, X0, 0
	303 Move W2, 0x4000
	304 Move W1, W31
	305 Move [X29-184], X0
	306 Call 0x3EB2B10
	307 Move X8, [X29-160]
	308 Move X26, [X29-152]
	309 Move W9, 1
	310 Move [X29-72], X31
	311 Move [X29-96], X31
	312 Move [X29-88], X31
	313 Move [X29-128], X25
	314 Move [X29-120], X8
	315 Move W8, 257
	316 NotImplemented "Instruction STURB not yet implemented."
	317 Move [X29-112], X24
	318 Move [X29-104], X31
	319 NotImplemented "Instruction STURH not yet implemented."
	320 NotImplemented "Instruction STURB not yet implemented."
	321 Move [X29-76], W31
	322 Compare X20, 0
	323 JumpIfEqual {718}
	324 Move X8, [X29+128]
	325 Move [X29-172], X31
	326 Move [X29-132], W31
	327 Move X19, 0x3E9000
	328 Move [X29-216], X8
	329 Move X19, [X19+1568]
	330 Move W23, W31
	331 Move W22, W31
	332 Move TEMP, 0
	333 Not TEMP
	334 Move W25, TEMP
	335 Move W8, [X26+112]
	336 Move W9, [X26+116]
	337 Add W8, W8, 1
	338 Move [X26+112], W8
	339 Move W8, [X20+52]
	340 NotImplemented "Instruction CMP not yet implemented."
	341 NotImplemented "Instruction CINC not yet implemented."
	342 Move [X26+116], W8
	343 Move W8, [X20+52]
	344 Compare W8, 0
	345 JumpIfNotEqual {502}
	346 Move X8, 0x3C1000
	347 Move X8, [X8+1432]
	348 Move X24, [X20+56]
	349 Move X0, [X8]
	350 Move W8, [X0+224]
	351 Compare W8, 0
	352 JumpIfNotEqual {354}
	353 Call 0x1C17DFC
	354 Move X0, X24
	355 Move X1, X31
	356 Move X2, X31
	357 Call Object.op_Inequality, X0, X1
	358 NotImplemented "Instruction LDUR not yet implemented."
	359 Move TEMP, X0
	360 And TEMP, TEMP, 1
	361 Compare TEMP, 1
	362 JumpIfNotEqual {364}
	363 Move X26, [X20+56]
	364 Move X8, 0x3C1000
	365 Move X8, [X8+1432]
	366 NotImplemented "Instruction LDUR not yet implemented."
	367 Move X0, [X8]
	368 Move W8, [X0+224]
	369 Compare W8, 0
	370 JumpIfNotEqual {372}
	371 Call 0x1C17DFC
	372 Move X0, X26
	373 Move X1, X24
	374 Move X2, X31
	375 Call Object.op_Inequality, X0, X1
	376 Move X8, [X20+80]
	377 Compare X8, 0
	378 JumpIfEqual {762}
	379 Move X9, [X8+80]
	380 NotImplemented "Instruction LDUR not yet implemented."
	381 Move W27, W0
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Move W24, 1
	384 Move W21, 1
	385 Move W8, [X8+48]
	386 NotImplemented "Instruction LDRSW not yet implemented."
	387 And W24, W27, 1
	388 Add X8, X9, X8
	389 NotImplemented "Instruction CMP not yet implemented."
	390 NotImplemented "Instruction CSINC not yet implemented."
	391 Move X0, [X19]
	392 Move W28, [X20+64]
	393 Move [X29-144], X26
	394 Move W8, [X0+224]
	395 Compare W8, 0
	396 JumpIfNotEqual {399}
	397 Call 0x1C17DFC
	398 Move X0, [X19]
	399 Move X8, [X0+184]
	400 Move X9, 0x6B5000
	401 Move W9, [X9+2904]
	402 Move W26, [X8]
	403 Compare W9, 0
	404 JumpIfNotEqual {413}
	405 Move X19, 0x3E9000
	406 Move X19, [X19+1568]
	407 Move X0, X19
	408 Call 0x1C17CF4
	409 Move X0, [X19]
	410 Move W8, 1
	411 Move X9, 0x6B5000
	412 Move [X9+2904], W8
	413 Move W8, [X0+224]
	414 Compare W8, 0
	415 JumpIfNotEqual {417}
	416 Call 0x1C17DFC
	417 NotImplemented "Instruction CMP not yet implemented."
	418 Move X19, 0x3E9000
	419 Move X19, [X19+1568]
	420 NotImplemented "Instruction LDUR not yet implemented."
	421 Move TEMP, 0
	422 Not TEMP
	423 Move W28, TEMP
	424 Move W9, W24
	425 NotImplemented "Instruction LDUR not yet implemented."
	426 Move X19, 0x3E9000
	427 Move X0, [X26+160]
	428 Move X19, [X19+1568]
	429 Compare X0, 0
	430 JumpIfEqual {762}
	431 Move W1, [X20+64]
	432 Call TextureSlotManager.IndexOf, X0, X1
	433 Move W28, W0
	434 Move TEMP, X0
	435 And TEMP, TEMP, -2147483648
	436 Compare TEMP, -2147483648
	437 JumpIfEqual {439}
	438 Move W8, W31
	439 Move X8, [X26+160]
	440 Compare X8, 0
	441 JumpIfEqual {762}
	442 Move W8, [X8+48]
	443 NotImplemented "Instruction CMP not yet implemented."
	444 NotImplemented "Instruction CSET not yet implemented."
	445 NotImplemented "Instruction CMP not yet implemented."
	446 NotImplemented "Instruction CSINC not yet implemented."
	447 NotImplemented "Instruction CSINC not yet implemented."
	448 Move W24, 1
	449 Move W8, [X20+68]
	450 NotImplemented "Instruction LDUR not yet implemented."
	451 NotImplemented "Instruction LDUR not yet implemented."
	452 NotImplemented "Instruction CMP not yet implemented."
	453 NotImplemented "Instruction CSET not yet implemented."
	454 NotImplemented "Instruction CSINC not yet implemented."
	455 NotImplemented "Instruction CMP not yet implemented."
	456 NotImplemented "Instruction CSET not yet implemented."
	457 Or W12, W12, W11
	458 Or W24, W8, W10
	459 Compare W12, 0
	460 JumpIfNotEqual {511}
	461 Move X8, [X20+80]
	462 Compare W23, 0
	463 JumpIfEqual {466}
	464 Compare X8, 0
	465 JumpIfNotEqual {472}
	466 Compare X8, 0
	467 JumpIfEqual {762}
	468 Move W9, [X8+48]
	469 Move W10, [X20+88]
	470 Add W25, W10, W9
	471 Move [X29-168], W25
	472 Move W9, [X8+24]
	473 Move W8, [X8+28]
	474 NotImplemented "Instruction LDUR not yet implemented."
	475 Move W21, [X20+92]
	476 Move W10, [X26+108]
	477 Add W8, W8, W9
	478 Add W11, W22, W11
	479 NotImplemented "Instruction CMP not yet implemented."
	480 NotImplemented "Instruction CSEL not yet implemented."
	481 NotImplemented "Instruction CMP not yet implemented."
	482 NotImplemented "Instruction CSEL not yet implemented."
	483 Add W10, W10, W21
	484 Subtract W8, W8, W22
	485 Move [X29-132], W8
	486 Move [X26+108], W10
	487 Compare W24, 0
	488 JumpIfEqual {497}
	489 NotImplemented "Instruction LDUR not yet implemented."
	490 And W4, W27, 1
	491 Subtract X5, X29, 128
	492 Move X0, X26
	493 Move X1, X20
	494 Move W2, W28
	495 Move X6, X31
	496 Call 0x3D39378
	497 Move X20, [X20+40]
	498 Add W23, W21, W23
	499 Add W25, W21, W25
	500 Compare X20, 0
	501 JumpIfNotEqual {335}
	502 NotImplemented "Instruction CMP not yet implemented."
	503 Move W24, W31
	504 Move [X29-144], X31
	505 Move W27, W31
	506 Move TEMP, 0
	507 Not TEMP
	508 Move W28, TEMP
	509 NotImplemented "Instruction CSET not yet implemented."
	510 Move W9, 1
	511 NotImplemented "Instruction LDUR not yet implemented."
	512 NotImplemented "Instruction CMP not yet implemented."
	513 NotImplemented "Instruction CSET not yet implemented."
	514 NotImplemented "Instruction CMP not yet implemented."
	515 NotImplemented "Instruction CSET not yet implemented."
	516 And W12, W8, W12
	517 And W31, W11, W12
	518 NotImplemented "Instruction CSET not yet implemented."
	519 NotImplemented "Instruction CMP not yet implemented."
	520 NotImplemented "Instruction CSET not yet implemented."
	521 Or W9, W9, W10
	522 Or W9, W9, W11
	523 NotImplemented "Instruction LDUR not yet implemented."
	524 NotImplemented "Instruction CMP not yet implemented."
	525 NotImplemented "Instruction CSET not yet implemented."
	526 Or W21, W10, W9
	527 Compare W8, 0
	528 JumpIfEqual {567}
	529 NotImplemented "Instruction LDUR not yet implemented."
	530 NotImplemented "Instruction LDUR not yet implemented."
	531 Add W9, W10, 1
	532 Move [X29-72], W9
	533 NotImplemented "Instruction LDUR not yet implemented."
	534 Add W8, W10, W8
	535 Move W8, W8
	536 ShiftRight W8, 28
	537 And W8, W8, 0x7FFFFFF
	538 And X8, X8, 0x3FFF
	539 Add X8, X8, X9
	540 NotImplemented "Instruction LDUR not yet implemented."
	541 Move [X8], W9
	542 Move [X8+4], W23
	543 NotImplemented "Instruction LDUR not yet implemented."
	544 Move [X8+8], W22
	545 Move [X8+12], W9
	546 Move X8, 0x3C1000
	547 Move X8, [X8+2600]
	548 NotImplemented "Instruction LDUR not yet implemented."
	549 Move X0, [X8]
	550 Move W8, [X0+224]
	551 Compare W8, 0
	552 JumpIfNotEqual {554}
	553 Call 0x1C17DFC
	554 NotImplemented "Instruction CMP not yet implemented."
	555 NotImplemented "Instruction CSET not yet implemented."
	556 Or W0, W21, W8
	557 Move X1, X31
	558 Move [X29-172], W22
	559 Call Debug.Assert, X0
	560 Move W8, [X26+124]
	561 Move W22, W31
	562 Move W23, W31
	563 Move [X29-132], W31
	564 Add W8, W8, 1
	565 Move [X29-168], W31
	566 Move [X26+124], W8
	567 Move W8, [X20+52]
	568 Compare W8, 0
	569 JumpIfEqual {572}
	570 Compare W21, 0
	571 JumpIfNotEqual {589}
	572 Move X8, [X20+80]
	573 Compare X8, 0
	574 JumpIfEqual {762}
	575 Move W9, [X8+48]
	576 Move W10, [X20+88]
	577 Move W23, [X20+92]
	578 Move W11, [X26+108]
	579 Move W22, [X8+24]
	580 Move W12, [X8+28]
	581 Add W9, W10, W9
	582 Add W8, W11, W23
	583 Add W25, W23, W9
	584 Move [X29-132], W12
	585 Move [X29-168], W9
	586 Move [X26+108], W8
	587 Compare W21, 0
	588 JumpIfEqual {678}
	589 NotImplemented "Instruction LDUR not yet implemented."
	590 NotImplemented "Instruction CMP not yet implemented."
	591 NotImplemented "Instruction LDUR not yet implemented."
	592 Subtract X1, X29, 128
	593 Move X0, X26
	594 And W2, W8, 1
	595 Call UIRenderDevice.ApplyBatchState, X0, X1, X2
	596 NotImplemented "Instruction LDUR not yet implemented."
	597 NotImplemented "Instruction LDUR not yet implemented."
	598 Subtract X2, X29, 72
	599 Subtract X3, X29, 68
	600 Move W4, 1024
	601 Move X0, X26
	602 Call UIRenderDevice.KickRanges, X0, X1, X2, X3, X4, X5
	603 Move W8, [X20+52]
	604 Compare W8, 0
	605 JumpIfEqual {678}
	606 Move W9, [X26+16]
	607 Compare W9, 0
	608 JumpIfNotEqual {615}
	609 Move X2, [X29-216]
	610 Move X1, [X29-208]
	611 Move X0, X20
	612 Move V0, V8
	613 Call RenderChainCommand.ExecuteNonDrawMesh, X0, X1, V0, X2
	614 Move W8, [X20+52]
	615 NotImplemented "Instruction CMP not yet implemented."
	616 Move W9, 1
	617 NotImplemented "Instruction LSLV not yet implemented."
	618 Move W9, 3718
	619 And W31, W8, W9
	620 Move [X29-112], X31
	621 NotImplemented "Instruction STURB not yet implemented."
	622 Move W8, [X26+132]
	623 Add W8, W8, 1
	624 Move [X26+132], W8
	625 Move W8, [X20+52]
	626 NotImplemented "Instruction CMP not yet implemented."
	627 NotImplemented "Instruction LDUR not yet implemented."
	628 Move X0, [X21+40]
	629 Compare X0, 0
	630 JumpIfEqual {762}
	631 Move X9, 0x41B000
	632 Move W8, [X0+24]
	633 Move X9, [X9+3912]
	634 Subtract W1, W8, 1
	635 Move X2, [X9]
	636 Move [X29-172], W1
	637 Call List`1<Object>.get_Item, X0, X1
	638 Move X8, [X21+40]
	639 Move [X29-160], X0
	640 Compare X8, 0
	641 JumpIfEqual {762}
	642 Move X9, 0x41C000
	643 Move X9, [X9+1408]
	644 NotImplemented "Instruction LDUR not yet implemented."
	645 Move X0, X8
	646 Move X2, [X9]
	647 Call List`1<Object>.RemoveAt, X0, X1
	648 Move W8, [X20+52]
	649 NotImplemented "Instruction CMP not yet implemented."
	650 NotImplemented "Instruction LDUR not yet implemented."
	651 Move X0, [X8+40]
	652 Compare X0, 0
	653 JumpIfEqual {762}
	654 Move X9, 0x3C8000
	655 Move W10, [X0+28]
	656 Move X8, [X0+16]
	657 Move X9, [X9+2672]
	658 Add W10, W10, 1
	659 Move X9, [X9]
	660 Move [X0+28], W10
	661 Compare X8, 0
	662 JumpIfEqual {762}
	663 NotImplemented "Instruction LDRSW not yet implemented."
	664 Move W11, [X8+24]
	665 NotImplemented "Instruction CMP not yet implemented."
	666 Add W9, W10, 1
	667 Move [X0+24], W9
	668 NotImplemented "Instruction LDUR not yet implemented."
	669 Add X8, X8, X10
	670 Move [X8+32], X9
	671 Move X8, [X9+32]
	672 NotImplemented "Instruction LDUR not yet implemented."
	673 Move X8, [X8+192]
	674 Move X2, [X8+112]
	675 Call List`1<Object>.AddWithResize, X0, X1
	676 Move X8, [X20+56]
	677 Move [X29-160], X8
	678 Move W8, [X20+52]
	679 Xor W9, W24, 1
	680 NotImplemented "Instruction CMP not yet implemented."
	681 NotImplemented "Instruction CSET not yet implemented."
	682 Or W8, W9, W8
	683 Move TEMP, X8
	684 And TEMP, TEMP, 1
	685 Compare TEMP, 1
	686 JumpIfEqual {695}
	687 NotImplemented "Instruction LDUR not yet implemented."
	688 And W4, W27, 1
	689 Subtract X5, X29, 128
	690 Move X0, X26
	691 Move X1, X20
	692 Move W2, W28
	693 Move X6, X31
	694 Call 0x3D39378
	695 Move X20, [X20+40]
	696 Compare X20, 0
	697 JumpIfEqual {700}
	698 NotImplemented "Instruction LDUR not yet implemented."
	699 Move [X29-172], W8
	700 NotImplemented "Instruction CMP not yet implemented."
	701 Move W8, [X29-72]
	702 Move W9, [X29-68]
	703 Add W10, W8, 1
	704 Add W8, W8, W9
	705 NotImplemented "Instruction LDUR not yet implemented."
	706 Move W8, W8
	707 ShiftRight W8, 28
	708 And W8, W8, 0x7FFFFFF
	709 And X8, X8, 0x3FFF
	710 Move [X29-72], W10
	711 Add X8, X8, X9
	712 NotImplemented "Instruction LDUR not yet implemented."
	713 Move [X8], W9
	714 Move [X8+4], W23
	715 NotImplemented "Instruction LDUR not yet implemented."
	716 Move [X8+8], W22
	717 Move [X8+12], W9
	718 NotImplemented "Instruction LDUR not yet implemented."
	719 NotImplemented "Instruction CMP not yet implemented."
	720 NotImplemented "Instruction LDUR not yet implemented."
	721 Subtract X1, X29, 128
	722 Move X0, X26
	723 And W2, W8, 1
	724 Call UIRenderDevice.ApplyBatchState, X0, X1, X2
	725 NotImplemented "Instruction LDUR not yet implemented."
	726 NotImplemented "Instruction LDUR not yet implemented."
	727 Subtract X2, X29, 72
	728 Subtract X3, X29, 68
	729 Move W4, 1024
	730 Move X0, X26
	731 Call UIRenderDevice.KickRanges, X0, X1, X2, X3, X4, X5
	732 Move X0, X26
	733 Call UIRenderDevice.UpdateFenceValue, X0
	734 Move X8, 0x3EA000
	735 Move X8, [X8+2080]
	736 NotImplemented "Instruction LDUR not yet implemented."
	737 Move X0, [X8]
	738 Move W8, [X0+224]
	739 Compare W8, 0
	740 JumpIfNotEqual {742}
	741 Call 0x1C17DFC
	742 Move X0, X31
	743 Call Utility.ProfileDrawChainEnd
	744 Move X8, [X19+40]
	745 NotImplemented "Instruction LDUR not yet implemented."
	746 NotImplemented "Instruction CMP not yet implemented."
	747 Subtract X31, X29, 16
	748 Move X20, [X31+96]
	749 Move X19, [X31+104]
	750 Move X22, [X31+80]
	751 Move X21, [X31+88]
	752 Move X24, [X31+64]
	753 Move X23, [X31+72]
	754 Move X26, [X31+48]
	755 Move X25, [X31+56]
	756 Move X28, [X31+32]
	757 Move X27, [X31+40]
	758 Move X29, [X31+16]
	759 Move X30, [X31+24]
	760 Move V8, [X31+112]
	761 Return 
	762 Call 0x1C17F20
	763 Call 0x3EB2B20

Method: System.Void UpdateFenceValue()

Disassembly:
	0x03D34AD8 LDRB W8, [X21 + 0xB3B]
	0x03D34ADC MOV W20, W1
	0x03D34AE0 MOV X19, X0
	0x03D34AE4 TBNZ X8, 0x0, 0x3D34B08
	0x03D34AE8 ADRP X0, 0x431000
	0x03D34AEC LDR X0, [X0 + 0xE0]
	0x03D34AF0 BL 0x1C16CF4
	0x03D34AF4 ADRP X0, 0x431000
	0x03D34AF8 LDR X0, [X0 + 0xE8]
	0x03D34AFC BL 0x1C16CF4
	0x03D34B00 MOVZ W8, 0x1
	0x03D34B04 STRB W8, [X21 + 0xB3B]
	0x03D34B08 LDRB W8, [X19 + 0x10]
	0x03D34B0C CBNZ W8, 0x3D34B4C
	0x03D34B10 TBZ X20, 0x0, 0x3D34B44
	0x03D34B14 LDR X0, [X19 + 0x20]
	0x03D34B18 CBZ X0, 0x3D34B58
	0x03D34B1C ADRP X8, 0x431000
	0x03D34B20 LDR X8, [X8 + 0xE8]
	0x03D34B24 LDR X1, [X8]
	0x03D34B28 BL 0x29AC254
	0x03D34B2C LDR X0, [X19 + 0x18]
	0x03D34B30 CBZ X0, 0x3D34B58
	0x03D34B34 ADRP X8, 0x431000
	0x03D34B38 LDR X8, [X8 + 0xE0]
	0x03D34B3C LDR X1, [X8]
	0x03D34B40 BL 0x29AC9CC
	0x03D34B44 MOVZ W8, 0x1
	0x03D34B48 STRB W8, [X19 + 0x10]
	0x03D34B4C LDP X20, X19, [X31 + 0x10]
	0x03D34B50 LDP X30, X21, [X31], #0x20
	0x03D34B54 RET
	0x03D34B58 BL 0x1C16F20
	0x03D34B5C STR X30, [X31 - 0x20]!
	0x03D34B60 STP X20, X19, [X31 + 0x10]
	0x03D34B64 ADRP X20, 0x6B3000
	0x03D34B68 ADRP X19, 0x430000
	0x03D34B6C LDRB W8, [X20 + 0xB3E]
	0x03D34B70 LDR X19, [X19 + 0xDA8]
	0x03D34B74 TBNZ X8, 0x0, 0x3D34B8C
	0x03D34B78 ADRP X0, 0x430000
	0x03D34B7C LDR X0, [X0 + 0xDA8]
	0x03D34B80 BL 0x1C16CF4
	0x03D34B84 MOVZ W8, 0x1
	0x03D34B88 STRB W8, [X20 + 0xB3E]
	0x03D34B8C LDR X8, [X19]
	0x03D34B90 ADRP X9, 0xFFFFFFFFFCDB7000
	0x03D34B94 LDR V0, [X9 + 0xBA]
	0x03D34B98 ADRP X9, 0xFFFFFFFFFCDB6000
	0x03D34B9C LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x6B4000
	006 Move W8, [X19+2851]
	007 Move X20, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x3E9000
	013 Move X0, [X0+2080]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2851], W8
	017 Move X8, [X20+80]
	018 Compare X8, 0
	019 JumpIfEqual {51}
	020 Move X8, 0x3E9000
	021 Move X8, [X8+2080]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X31
	028 Call Utility.InsertCPUFence
	029 Move X8, [X20+80]
	030 Compare X8, 0
	031 JumpIfEqual {56}
	032 Move X9, [X8+24]
	033 Move W10, [X20+96]
	034 Move X11, W9
	035 NotImplemented "Instruction SDIV not yet implemented."
	036 NotImplemented "Instruction MSUB not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X8, X8, X9
	039 Move W19, W0
	040 Add X20, X8, 32
	041 Move W21, [X20]
	042 Subtract W8, W19, W21
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, X20
	045 Move W1, W19
	046 Move W2, W21
	047 Move X3, X31
	048 Call Interlocked.CompareExchange, X0, X1, X2
	049 Move X8, W0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return 
	056 Call 0x1C17F20
	057 Call 0x1C17F28

Method: System.Void KickRanges(UnityEngine.UIElements.UIR.DrawBufferRange* ranges, ref System.Int32 rangesReady, ref System.Int32 rangesStart, System.Int32 rangesCount, UnityEngine.UIElements.UIR.Page curPage)

Disassembly:
	0x03D33DD0 BL 0x1C16DFC
	0x03D33DD4 LDR X0, [X20]
	0x03D33DD8 LDR X8, [X0 + 0xB8]
	0x03D33DDC LDR W9, [X8 + 0x8]
	0x03D33DE0 LDR X19, [X8 + 0x50]
	0x03D33DE4 ADD W9, W9, 0x1
	0x03D33DE8 STR W9, [X8 + 0x8]
	0x03D33DEC LDR X0, [X22]
	0x03D33DF0 LDR W9, [X0 + 0xE0]
	0x03D33DF4 CBNZ W9, 0x3D33DFC
	0x03D33DF8 BL 0x1C16DFC
	0x03D33DFC ADRP X21, 0x3EA000
	0x03D33E00 LDR X21, [X21 + 0x240]
	0x03D33E04 MOV X0, X19
	0x03D33E08 MOV X1, X31
	0x03D33E0C MOV X2, X31
	0x03D33E10 BL 0x3C354F8
	0x03D33E14 LDR X8, [X20]
	0x03D33E18 TBZ X0, 0x0, 0x3D33E60
	0x03D33E1C LDR W9, [X8 + 0xE0]
	0x03D33E20 CBNZ W9, 0x3D33E30
	0x03D33E24 MOV X0, X8
	0x03D33E28 BL 0x1C16DFC
	0x03D33E2C LDR X8, [X20]
	0x03D33E30 LDR X0, [X21]
	0x03D33E34 LDR X8, [X8 + 0xB8]
	0x03D33E38 LDR W9, [X0 + 0xE0]
	0x03D33E3C LDR X19, [X8 + 0x50]
	0x03D33E40 CBNZ W9, 0x3D33E48
	0x03D33E44 BL 0x1C16DFC
	0x03D33E48 MOV X0, X19
	0x03D33E4C MOV X1, X31
	0x03D33E50 BL 0x3DE1000
	0x03D33E54 LDR X8, [X20]
	0x03D33E58 LDR X9, [X8 + 0xB8]
	0x03D33E5C STR X31, [X9 + 0x50]
	0x03D33E60 LDR W9, [X8 + 0xE0]
	0x03D33E64 CBNZ W9, 0x3D33E74
	0x03D33E68 MOV X0, X8
	0x03D33E6C BL 0x1C16DFC
	0x03D33E70 LDR X8, [X20]
	0x03D33E74 LDR X0, [X22]
	0x03D33E78 LDR X8, [X8 + 0xB8]
	0x03D33E7C LDR W9, [X0 + 0xE0]
	0x03D33E80 LDR X19, [X8 + 0x58]
	0x03D33E84 CBNZ W9, 0x3D33E8C
	0x03D33E88 BL 0x1C16DFC
	0x03D33E8C MOV X0, X19
	0x03D33E90 MOV X1, X31
	0x03D33E94 MOV X2, X31
	0x03D33E98 BL 0x3C354F8
	0x03D33E9C TBZ X0, 0x0, 0x3D33EE8
	0x03D33EA0 LDR X0, [X20]
	0x03D33EA4 LDR W8, [X0 + 0xE0]
	0x03D33EA8 CBNZ W8, 0x3D33EB4
	0x03D33EAC BL 0x1C16DFC
	0x03D33EB0 LDR X0, [X20]
	0x03D33EB4 LDR X8, [X21]
	0x03D33EB8 LDR X9, [X0 + 0xB8]
	0x03D33EBC LDR W10, [X8 + 0xE0]
	0x03D33EC0 LDR X19, [X9 + 0x58]
	0x03D33EC4 CBNZ W10, 0x3D33ED0
	0x03D33EC8 MOV X0, X8
	0x03D33ECC BL 0x1C16DFC
	0x03D33ED0 MOV X0, X19
	0x03D33ED4 MOV X1, X31
	0x03D33ED8 BL 0x3DE1000
	0x03D33EDC LDR X8, [X20]
	0x03D33EE0 LDR X8, [X8 + 0xB8]
	0x03D33EE4 STR X31, [X8 + 0x58]
	0x03D33EE8 LDP X20, X19, [X31 + 0x20]
	0x03D33EEC LDP X22, X21, [X31 + 0x10]
	0x03D33EF0 LDR X30, [X31], #0x30
	0x03D33EF4 RET
	0x03D33EF8 STR X30, [X31 - 0x20]!
	0x03D33EFC STP X20, X19, [X31 + 0x10]
	0x03D33F00 ADRP X20, 0x6B4000
	0x03D33F04 ADRP X19, 0x431000
	0x03D33F08 LDRB W8, [X20 + 0xB28]
	0x03D33F0C LDR X19, [X19 + 0x6F8]
	0x03D33F10 TBNZ X8, 0x0, 0x3D33F28
	0x03D33F14 ADRP X0, 0x431000
	0x03D33F18 LDR X0, [X0 + 0x6F8]
	0x03D33F1C BL 0x1C16CF4
	0x03D33F20 MOVZ W8, 0x1
	0x03D33F24 STRB W8, [X20 + 0xB28]
	0x03D33F28 LDR X0, [X19]
	0x03D33F2C LDR W8, [X0 + 0xE0]
	0x03D33F30 CBNZ W8, 0x3D33F3C
	0x03D33F34 BL 0x1C16DFC
	0x03D33F38 LDR X0, [X19]
	0x03D33F3C LDR X8, [X0 + 0xB8]
	0x03D33F40 LDP X20, X19, [X31 + 0x10]
	0x03D33F44 LDR W9, [X8 + 0x8]
	0x03D33F48 SUB W9, W9, 0x1
	0x03D33F4C STR W9, [X8 + 0x8]
	0x03D33F50 LDR X30, [X31], #0x20
	0x03D33F54 RET
	0x03D33F58 STR X30, [X31 - 0x20]!
	0x03D33F5C STP X20, X19, [X31 + 0x10]
	0x03D33F60 ADRP X20, 0x6B4000
	0x03D33F64 ADRP X19, 0x3E9000
	0x03D33F68 LDRB W8, [X20 + 0xB29]
	0x03D33F6C LDR X19, [X19 + 0x820]
	0x03D33F70 TBNZ X8, 0x0, 0x3D33F94
	0x03D33F74 ADRP X0, 0x431000
	0x03D33F78 LDR X0, [X0 + 0x6F8]
	0x03D33F7C BL 0x1C16CF4
	0x03D33F80 ADRP X0, 0x3E9000
	0x03D33F84 LDR X0, [X0 + 0x820]
	0x03D33F88 BL 0x1C16CF4
	0x03D33F8C MOVZ W8, 0x1
	0x03D33F90 STRB W8, [X20 + 0xB29]
	0x03D33F94 LDR X0, [X19]
	0x03D33F98 ADRP X19, 0x431000
	0x03D33F9C LDR W8, [X0 + 0xE0]
	0x03D33FA0 LDR X19, [X19 + 0x6F8]
	0x03D33FA4 CBNZ W8, 0x3D33FAC
	0x03D33FA8 BL 0x1C16DFC
	0x03D33FAC MOV X0, X31
	0x03D33FB0 BL 0x3D1FAC0
	0x03D33FB4 LDR X0, [X19]
	0x03D33FB8 LDR W8, [X0 + 0xE0]
	0x03D33FBC CBNZ W8, 0x3D33FC4
	0x03D33FC0 BL 0x1C16DFC
	0x03D33FC4 LDP X20, X19, [X31 + 0x10]
	0x03D33FC8 LDR X30, [X31], #0x20
	0x03D33FCC B 0x3D2F16C
	0x03D33FD0 LDR W9, [X0 + 0x88]
	0x03D33FD4 LDUR V0, [X0 + 0x78]
	0x03D33FD8 LDUR V1, [X0 + 0x68]
	0x03D33FDC STR W9, [X8 + 0x20]
	0x03D33FE0 STP V1, V0, [X8]
	0x03D33FE4 RET
	0x03D33FE8 STR X30, [X31 - 0x20]!
	0x03D33FEC STP X20, X19, [X31 + 0x10]
	0x03D33FF0 ADRP X19, 0x6B4000
	0x03D33FF4 ADRP X20, 0x431000
	0x03D33FF8 LDRB W8, [X19 + 0xB2B]
	0x03D33FFC LDR X20, [X20 + 0x6F8]
	0x03D34000 TBNZ X8, 0x0, 0x3D34018
	0x03D34004 ADRP X0, 0x430000
	0x03D34008 LDR X0, [X0 + 0x6F8]
	0x03D3400C BL 0x1C16CF4
	0x03D34010 MOVZ W8, 0x1
	0x03D34014 STRB W8, [X19 + 0xB2B]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X26, 0x6B5000
	014 Move X25, 0x3C1000
	015 Move W8, [X26+2852]
	016 Move X25, [X25+2600]
	017 Move X24, X5
	018 Move W21, W4
	019 Move X20, X3
	020 Move X19, X2
	021 Move X23, X1
	022 Move X22, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {41}
	027 Move X0, 0x3C1000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x433000
	031 Move X0, [X0+32]
	032 Call 0x1C17CF4
	033 Move X0, 0x433000
	034 Move X0, [X0+40]
	035 Call 0x1C17CF4
	036 Move X0, 0x432000
	037 Move X0, [X0+1784]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X26+2852], W8
	041 Move X0, [X25]
	042 Move W25, [X19]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 Move X1, X31
	050 Call Debug.Assert, X0
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 Move W25, [X19]
	053 Add W8, W25, W29
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W8, [X22+16]
	056 Compare W8, 0
	057 JumpIfNotEqual {112}
	058 Compare X24, 0
	059 JumpIfEqual {172}
	060 Move X8, [X24+32]
	061 Compare X8, 0
	062 JumpIfEqual {172}
	063 Move X9, [X24+24]
	064 Compare X9, 0
	065 JumpIfEqual {172}
	066 Move X10, 0x432000
	067 Move X10, [X10+1784]
	068 Move X28, [X8+24]
	069 Move X27, [X9+24]
	070 Subtract W26, W21, W29
	071 Move X0, [X10]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X8, 0x433000
	077 Move X8, [X8+40]
	078 Add X0, X23, X29
	079 Move W1, W26
	080 Move X2, [X8]
	081 Call 0x22A26A0, X0, X1
	082 Move X29, 0x433000
	083 Move X29, [X29+32]
	084 Move X3, X0
	085 Move X4, X1
	086 Move X0, X22
	087 Move X5, [X29]
	088 Move X1, X28
	089 Move X2, X27
	090 Call 0x22A2408, X0, X1, X2, X3
	091 Move X8, [X24+32]
	092 Compare X8, 0
	093 JumpIfEqual {172}
	094 Move X9, [X24+24]
	095 Compare X9, 0
	096 JumpIfEqual {172}
	097 Move X24, [X8+24]
	098 Move X8, 0x433000
	099 Move X27, [X9+24]
	100 Move X8, [X8+40]
	101 Subtract W1, W25, W26
	102 Move X0, X23
	103 Move X2, [X8]
	104 Call 0x22A26A0, X0, X1
	105 Move X5, [X29]
	106 Move X3, X0
	107 Move X4, X1
	108 Move X0, X22
	109 Move X1, X24
	110 Move X2, X27
	111 Call 0x22A2408, X0, X1, X2, X3
	112 Move W8, 2
	113 Move W8, [X22+16]
	114 Compare W8, 0
	115 JumpIfNotEqual {148}
	116 Compare X24, 0
	117 JumpIfEqual {172}
	118 Move X8, [X24+32]
	119 Compare X8, 0
	120 JumpIfEqual {172}
	121 Move X9, [X24+24]
	122 Compare X9, 0
	123 JumpIfEqual {172}
	124 Move X10, 0x432000
	125 Move X10, [X10+1784]
	126 Move X24, [X8+24]
	127 Move X26, [X9+24]
	128 Move X0, [X10]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X8, 0x433000
	134 Move X8, [X8+40]
	135 Add X0, X23, X29
	136 Move W1, W25
	137 Move X2, [X8]
	138 Call 0x22A26A0, X0, X1
	139 Move X8, 0x433000
	140 Move X8, [X8+32]
	141 Move X3, X0
	142 Move X4, X1
	143 Move X0, X22
	144 Move X5, [X8]
	145 Move X1, X24
	146 Move X2, X26
	147 Call 0x22A2408, X0, X1, X2, X3
	148 Move W8, 1
	149 Move W9, [X22+128]
	150 Subtract W10, W21, 1
	151 Move X24, [X31+48]
	152 Move X23, [X31+56]
	153 Move X26, [X31+32]
	154 Move X25, [X31+40]
	155 Add W8, W9, W8
	156 Move [X22+128], W8
	157 Move W8, [X20]
	158 Move W9, [X19]
	159 Move X22, [X31+64]
	160 Move X21, [X31+72]
	161 Move X28, [X31+16]
	162 Move X27, [X31+24]
	163 Add W8, W9, W8
	164 And W8, W8, W10
	165 Move [X20], W8
	166 Move [X19], W31
	167 Move X20, [X31+80]
	168 Move X19, [X31+88]
	169 Move X29, [X31+96]
	170 Move X30, [X31+104]
	171 Return 
	172 Call 0x1C17F20

Method: System.Void DrawRanges(UnityEngine.UIElements.UIR.Utility/GPUBuffer`1<I> ib, UnityEngine.UIElements.UIR.Utility/GPUBuffer`1<T> vb, Unity.Collections.NativeSlice`1<UnityEngine.UIElements.UIR.DrawBufferRange> ranges)

Disassembly:
	0x022A2408 CBNZ W8, 0x22A2410
	0x022A240C BL 0x1C16DFC
	0x022A2410 MOV X0, X27
	0x022A2414 MOV X1, X31
	0x022A2418 MOV X2, X31
	0x022A241C BL 0x3C3883C
	0x022A2420 TBZ X0, 0x0, 0x22A2390
	0x022A2424 CBZ X21, 0x22A25B0
	0x022A2428 LDR X9, [X19 + 0x38]
	0x022A242C LDR W10, [X21 + 0x1C]
	0x022A2430 LDR X8, [X21 + 0x10]
	0x022A2434 LDR X9, [X9 + 0x60]
	0x022A2438 ADD W10, W10, 0x1
	0x022A243C STR W10, [X21 + 0x1C]
	0x022A2440 CBZ X8, 0x22A25B4
	0x022A2444 LDRSW X10, [X21 + 0x18]
	0x022A2448 LDR W11, [X8 + 0x18]
	0x022A244C CMP W10, W11
	0x022A2450 B.CS 0x22A2468
	0x022A2454 ADD W9, W10, 0x1
	0x022A2458 ADD X8, X8, X10, 0x3, LSL
	0x022A245C STR W9, [X21 + 0x18]
	0x022A2460 STR X27, [X8 + 0x20]
	0x022A2464 B 0x22A2390
	0x022A2468 LDR X8, [X9 + 0x20]
	0x022A246C LDR X8, [X8 + 0xC0]
	0x022A2470 LDR X2, [X8 + 0x70]
	0x022A2474 MOV X0, X21
	0x022A2478 MOV X1, X27
	0x022A247C BL 0x301BF90
	0x022A2480 B 0x22A2390
	0x022A2484 MOV X25, X31
	0x022A2488 LDR X8, [X19 + 0x38]
	0x022A248C LDR X0, [X8 + 0x28]
	0x022A2490 LDRB W9, [X0 + 0x135]
	0x022A2494 TBNZ X9, 0x0, 0x22A24A0
	0x022A2498 BL 0x1C5C684
	0x022A249C LDR X8, [X19 + 0x38]
	0x022A24A0 LDR X1, [X8 + 0x70]
	0x022A24A4 MOV X2, X22
	0x022A24A8 MOV X3, X23
	0x022A24AC MOV X4, X31
	0x022A24B0 MOV X5, X31
	0x022A24B4 BL 0x1C17728
	0x022A24B8 CBNZ X25, 0x22A25BC
	0x022A24BC CBZ X21, 0x22A25B8
	0x022A24C0 LDR X8, [X19 + 0x38]
	0x022A24C4 MOV X0, X21
	0x022A24C8 LDR X1, [X8 + 0x78]
	0x022A24CC SUB X8, X29, 0x48
	0x022A24D0 BL 0x301CB58
	0x022A24D4 LDUR V0, [X29 - 0x48]
	0x022A24D8 LDUR X8, [X29 - 0x38]
	0x022A24DC STUR V0, [X29 - 0x30]
	0x022A24E0 STUR X8, [X29 - 0x20]
	0x022A24E4 LDR X8, [X19 + 0x38]
	0x022A24E8 LDR X1, [X8 + 0xA0]
	0x022A24EC SUB X0, X29, 0x30
	0x022A24F0 BL 0x2BC4350
	0x022A24F4 TBZ X0, 0x0, 0x22A2524
	0x022A24F8 LDR X8, [X19 + 0x38]
	0x022A24FC LDR X1, [X8 + 0x98]
	0x022A2500 LDUR X8, [X29 - 0x20]
	0x022A2504 LDR X0, [X1]
	0x022A2508 STUR X8, [X29 - 0x18]
	0x022A250C LDR X8, [X1 + 0x10]
	0x022A2510 SUB X3, X29, 0x18
	0x022A2514 SUB X4, X29, 0x48
	0x022A2518 MOV X2, X20
	0x022A251C BLR X8
	0x022A2520 B 0x22A24E4
	0x022A2524 MOV X20, X31
	0x022A2528 MOVZ W22, 0x7
	0x022A252C LDR X8, [X19 + 0x38]
	0x022A2530 SUB X0, X29, 0x30
	0x022A2534 LDR X1, [X8 + 0xA8]
	0x022A2538 BL 0x2BC434C
	0x022A253C CBNZ X20, 0x22A25C4
	0x022A2540 CMP W22, 0x7
	0x022A2544 B.EQ 0x22A254C
	0x022A2548 CBNZ W22, 0x22A257C
	0x022A254C LDR X8, [X19 + 0x38]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 16
	012 Move [X29-16], X3
	013 Move [X29-8], X4
	014 Move X8, [X5+56]
	015 Move X23, X5
	016 Move X20, X4
	017 Move X22, X3
	018 Move X25, X2
	019 Move X24, X1
	020 Move X19, X0
	021 Compare X8, 0
	022 JumpIfNotEqual {37}
	023 Move X0, 0x1E7B000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0x1E7B000
	027 Move X0, [X0+2072]
	028 Call 0x1C17CF4
	029 Move X0, 0x1E7B000
	030 Move X0, [X0+2080]
	031 Call 0x1C17CF4
	032 Move X8, [X23+56]
	033 Compare X8, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X23
	036 Call 0x1C5D6E0
	037 Add X8, X31, 0
	038 Subtract X21, X8, 16
	039 Add X31, X21, 0
	040 Move [X8-16], X31
	041 Compare X25, 0
	042 JumpIfEqual {96}
	043 Move X8, [X23+56]
	044 Move X0, X25
	045 Move X1, [X8+8]
	046 Call GPUBuffer`1<Vertex>.get_BufferPointer, X0
	047 Move [X21], X0
	048 Compare X24, 0
	049 JumpIfEqual {96}
	050 Move X8, [X23+56]
	051 Move X0, X24
	052 Move X1, [X8+24]
	053 Call 0x2D43D34, X0
	054 Move X8, 0x1E7B000
	055 Move X8, [X8+2064]
	056 Move X23, X0
	057 Move X0, X22
	058 Move X1, X20
	059 Move X2, [X8]
	060 Call NativeSliceUnsafeUtility.GetUnsafePtr, X0
	061 Move X8, 0x1E7B000
	062 Move X8, [X8+2072]
	063 Move X20, X0
	064 Subtract X0, X29, 16
	065 Move X1, [X8]
	066 Call NativeSlice`1<DrawBufferRange>.get_Length, X0
	067 Move X8, 0x1E7B000
	068 Move X8, [X8+2080]
	069 Move X19, [X19+32]
	070 Move W22, W0
	071 Move X8, [X8]
	072 Move W9, [X8+224]
	073 Compare W9, 0
	074 JumpIfNotEqual {77}
	075 Move X0, X8
	076 Call 0x1C17DFC
	077 Move W2, 1
	078 Move X0, X23
	079 Move X1, X21
	080 Move X3, X20
	081 Move W4, W22
	082 Move X5, X19
	083 Move X6, X31
	084 Call Utility.DrawRanges, X0, X1, X2, X3, X4, X5
	085 Add X31, X29, 0
	086 Move X20, [X31+64]
	087 Move X19, [X31+72]
	088 Move X22, [X31+48]
	089 Move X21, [X31+56]
	090 Move X24, [X31+32]
	091 Move X23, [X31+40]
	092 Move X25, [X31+16]
	093 Move X29, [X31+80]
	094 Move X30, [X31+88]
	095 Return 
	096 Call 0x1C17F20

Method: System.Void WaitOnCpuFence(System.UInt32 fence)

Disassembly:
	0x03D34BA0 STR V0, [X8]
	0x03D34BA4 LDR X8, [X19]
	0x03D34BA8 LDR V0, [X9 + 0xD0]
	0x03D34BAC LDP X20, X19, [X31 + 0x10]
	0x03D34BB0 LDR X8, [X8 + 0xB8]
	0x03D34BB4 STR V0, [X8 + 0x1]
	0x03D34BB8 LDR X30, [X31], #0x20
	0x03D34BBC RET
	0x03D34BC0 MOVI V0.2D, 0x0
	0x03D34BC4 STP X31, X31, [X0 + 0x18]
	0x03D34BC8 STRB W31, [X0 + 0x30]
	0x03D34BCC STR X31, [X0 + 0x28]
	0x03D34BD0 STUR V0, [X0 + 0x34]
	0x03D34BD4 STUR V0, [X0 + 0x44]
	0x03D34BD8 STUR V0, [X0 + 0x54]
	0x03D34BDC STR W31, [X0 + 0x64]
	0x03D34BE0 RET
	0x03D34BE4 SUB X31, X31, 0x60
	0x03D34BE8 STP D13, D12, [X31 + 0x10]
	0x03D34BEC STP D11, D10, [X31 + 0x20]
	0x03D34BF0 STP D9, D8, [X31 + 0x30]
	0x03D34BF4 STP X30, X21, [X31 + 0x40]
	0x03D34BF8 STP X20, X19, [X31 + 0x50]
	0x03D34BFC ADRP X19, 0x6B3000
	0x03D34C00 ADRP X20, 0x3E8000
	0x03D34C04 LDRB W8, [X19 + 0xB42]
	0x03D34C08 LDR X20, [X20 + 0x820]
	0x03D34C0C MOV V8.16B, V4.16B
	0x03D34C10 MOV V9.16B, V3.16B
	0x03D34C14 MOV V10.16B, V2.16B
	0x03D34C18 MOV V11.16B, V1.16B
	0x03D34C1C MOV V12.16B, V0.16B
	0x03D34C20 TBNZ X8, 0x0, 0x3D34C38
	0x03D34C24 ADRP X0, 0x3E8000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6B4000
	005 Move W8, [X20+2853]
	006 Move W19, W1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3E9000
	012 Move X0, [X0+2080]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2853], W8
	016 Compare W19, 0
	017 JumpIfEqual {32}
	018 Move X20, 0x3E9000
	019 Move X20, [X20+2080]
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X1, X31
	027 Call Utility.CPUFencePassed, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {36}
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return 
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move W0, W19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X1, X31
	045 Move X30, [X31+32]
	046 Call Utility.WaitForCPUFencePassed, X0
	047 Return 

Method: System.Void AdvanceFrame()

Disassembly:
	0x03D324AC LDR W28, [X8 + 0x18]
	0x03D324B0 LDR X0, [X9]
	0x03D324B4 LDR W8, [X0 + 0xE0]
	0x03D324B8 CBNZ W8, 0x3D324C0
	0x03D324BC BL 0x1C16DFC
	0x03D324C0 ADRP X8, 0x432000
	0x03D324C4 LDR X8, [X8 + 0xFE8]
	0x03D324C8 MOV X0, X23
	0x03D324CC MOV W1, W28
	0x03D324D0 MOV X2, X27
	0x03D324D4 LDR X4, [X8]
	0x03D324D8 MOV X3, X26
	0x03D324DC BL 0x22A8A80
	0x03D324E0 LDUR X19, [X29 - 0x98]
	0x03D324E4 LDR X1, [X21]
	0x03D324E8 SUB X0, X29, 0x40
	0x03D324EC BL 0x240846C
	0x03D324F0 CMP W0, 0x1
	0x03D324F4 B.LT 0x3D32560
	0x03D324F8 ADRP X21, 0x432000
	0x03D324FC LDR X21, [X21 + 0x6F8]
	0x03D32500 LDR X23, [X19 + 0x58]
	0x03D32504 LDR X0, [X21]
	0x03D32508 LDR W8, [X0 + 0xE0]
	0x03D3250C CBNZ W8, 0x3D32518
	0x03D32510 BL 0x1C16DFC
	0x03D32514 LDR X0, [X21]
	0x03D32518 ADRP X9, 0x3EA000
	0x03D3251C LDR X8, [X0 + 0xB8]
	0x03D32520 LDR X9, [X9 + 0x820]
	0x03D32524 LDP X27, X26, [X29 - 0x40]
	0x03D32528 LDR W28, [X8 + 0x1C]
	0x03D3252C LDR X0, [X9]
	0x03D32530 LDR W8, [X0 + 0xE0]
	0x03D32534 CBNZ W8, 0x3D3253C
	0x03D32538 BL 0x1C16DFC
	0x03D3253C ADRP X8, 0x432000
	0x03D32540 LDR X8, [X8 + 0xFF0]
	0x03D32544 MOV X0, X23
	0x03D32548 MOV W1, W28
	0x03D3254C MOV X2, X27
	0x03D32550 LDR X4, [X8]
	0x03D32554 MOV X3, X26
	0x03D32558 BL 0x22A8B4C
	0x03D3255C LDUR X19, [X29 - 0x98]
	0x03D32560 ADRP X8, 0x3EA000
	0x03D32564 LDR X8, [X8 + 0x820]
	0x03D32568 LDR X23, [X19 + 0x58]
	0x03D3256C LDR X0, [X8]
	0x03D32570 LDR W8, [X0 + 0xE0]
	0x03D32574 CBNZ W8, 0x3D3257C
	0x03D32578 BL 0x1C16DFC
	0x03D3257C MOV X0, X23
	0x03D32580 MOV X1, X31
	0x03D32584 BL 0x3D1F7D4
	0x03D32588 LDRB W8, [X29 + 0x78]
	0x03D3258C SUB X0, X31, 0x4000
	0x03D32590 STUR W8, [X29 - 0xBC]
	0x03D32594 ADD X31, X0, 0x0
	0x03D32598 MOVZ W2, 0x4000
	0x03D3259C MOV W1, W31
	0x03D325A0 STUR X0, [X29 - 0xB8]
	0x03D325A4 BL 0x3EB1B10
	0x03D325A8 LDP X8, X26, [X29 - 0xA0]
	0x03D325AC MOVZ W9, 0x1
	0x03D325B0 STUR X31, [X29 - 0x48]
	0x03D325B4 STP X31, X31, [X29 - 0x60]
	0x03D325B8 STP X25, X8, [X29 - 0x80]
	0x03D325BC MOVZ W8, 0x101
	0x03D325C0 STURB W31, [X29 - 0x50]
	0x03D325C4 STP X24, X31, [X29 - 0x70]
	0x03D325C8 STURH W8, [X29 - 0x4F]
	0x03D325CC STURB W9, [X29 - 0x4D]
	0x03D325D0 STUR W31, [X29 - 0x4C]
	0x03D325D4 CBZ X20, 0x3D32B64
	0x03D325D8 LDR X8, [X29 + 0x80]
	0x03D325DC STUR X31, [X29 - 0xAC]
	0x03D325E0 STUR W31, [X29 - 0x84]
	0x03D325E4 ADRP X19, 0x3E9000
	0x03D325E8 STUR X8, [X29 - 0xD8]
	0x03D325EC LDR X19, [X19 + 0x620]
	0x03D325F0 MOV W23, W31
	0x03D325F4 MOV W22, W31
	0x03D325F8 MOVN W25, 0x0
	0x03D325FC LDP W8, W9, [X26 + 0x70]
	0x03D32600 ADD W8, W8, 0x1
	0x03D32604 STR W8, [X26 + 0x70]
	0x03D32608 LDR W8, [X20 + 0x34]
	0x03D3260C CMP W8, 0x0
	0x03D32610 CINC W8, W9, EQ
	0x03D32614 STR W8, [X26 + 0x74]
	0x03D32618 LDR W8, [X20 + 0x34]
	0x03D3261C CBNZ W8, 0x3D32850
	0x03D32620 ADRP X8, 0x3C1000
	0x03D32624 LDR X8, [X8 + 0x598]
	0x03D32628 LDR X24, [X20 + 0x38]
	0x03D3262C LDR X0, [X8]
	0x03D32630 LDR W8, [X0 + 0xE0]
	0x03D32634 CBNZ W8, 0x3D3263C
	0x03D32638 BL 0x1C16DFC
	0x03D3263C MOV X0, X24
	0x03D32640 MOV X1, X31
	0x03D32644 MOV X2, X31
	0x03D32648 BL 0x3C354F8
	0x03D3264C LDUR X26, [X29 - 0xA0]
	0x03D32650 TBZ X0, 0x0, 0x3D32658
	0x03D32654 LDR X26, [X20 + 0x38]
	0x03D32658 ADRP X8, 0x3C1000
	0x03D3265C LDR X8, [X8 + 0x598]
	0x03D32660 LDUR X24, [X29 - 0x70]
	0x03D32664 LDR X0, [X8]
	0x03D32668 LDR W8, [X0 + 0xE0]
	0x03D3266C CBNZ W8, 0x3D32674
	0x03D32670 BL 0x1C16DFC
	0x03D32674 MOV X0, X26
	0x03D32678 MOV X1, X24
	0x03D3267C MOV X2, X31
	0x03D32680 BL 0x3C354F8
	0x03D32684 LDR X8, [X20 + 0x50]
	0x03D32688 CBZ X8, 0x3D32C00
	0x03D3268C LDR X9, [X8 + 0x50]
	0x03D32690 LDUR X10, [X29 - 0x58]
	0x03D32694 MOV W27, W0
	0x03D32698 CMP X9, X10
	0x03D3269C B.EQ 0x3D326AC
	0x03D326A0 MOVZ W24, 0x1
	0x03D326A4 MOVZ W21, 0x1
	0x03D326A8 B 0x3D326C4
	0x03D326AC LDR W8, [X8 + 0x30]
	0x03D326B0 LDRSW X9, [X20 + 0x58]
	0x03D326B4 AND W24, W27, 0x1
	0x03D326B8 ADD X8, X9, X8
	0x03D326BC CMP X8, W25, SXTW
	0x03D326C0 CSINC W21, W24, W31, EQ
	0x03D326C4 LDR X0, [X19]
	0x03D326C8 LDR W28, [X20 + 0x40]
	0x03D326CC STUR X26, [X29 - 0x90]
	0x03D326D0 LDR W8, [X0 + 0xE0]
	0x03D326D4 CBNZ W8, 0x3D326E0
	0x03D326D8 BL 0x1C16DFC
	0x03D326DC LDR X0, [X19]
	0x03D326E0 LDR X8, [X0 + 0xB8]
	0x03D326E4 ADRP X9, 0x6B5000
	0x03D326E8 LDRB W9, [X9 + 0xB58]
	0x03D326EC LDR W26, [X8]
	0x03D326F0 CBNZ W9, 0x3D32714
	0x03D326F4 ADRP X19, 0x3E9000
	0x03D326F8 LDR X19, [X19 + 0x620]
	0x03D326FC MOV X0, X19
	0x03D32700 BL 0x1C16CF4
	0x03D32704 LDR X0, [X19]
	0x03D32708 MOVZ W8, 0x1
	0x03D3270C ADRP X9, 0x6B5000
	0x03D32710 STRB W8, [X9 + 0xB58]
	0x03D32714 LDR W8, [X0 + 0xE0]
	0x03D32718 CBNZ W8, 0x3D32720
	0x03D3271C BL 0x1C16DFC
	0x03D32720 CMP W28, W26
	0x03D32724 B.NE 0x3D32740
	0x03D32728 ADRP X19, 0x3E9000
	0x03D3272C LDR X19, [X19 + 0x620]
	0x03D32730 LDUR X26, [X29 - 0x98]
	0x03D32734 MOVN W28, 0x0
	0x03D32738 MOV W9, W24
	0x03D3273C B 0x3D32790
	0x03D32740 LDUR X26, [X29 - 0x98]
	0x03D32744 ADRP X19, 0x3E9000
	0x03D32748 LDR X0, [X26 + 0xA0]
	0x03D3274C LDR X19, [X19 + 0x620]
	0x03D32750 CBZ X0, 0x3D32C00
	0x03D32754 LDR W1, [X20 + 0x40]
	0x03D32758 BL 0x3D299D8
	0x03D3275C MOV W28, W0
	0x03D32760 TBNZ X0, 0x1F, 0x3D3276C
	0x03D32764 MOV W8, W31
	0x03D32768 B 0x3D32780
	0x03D3276C LDR X8, [X26 + 0xA0]
	0x03D32770 CBZ X8, 0x3D32C00
	0x03D32774 LDR W8, [X8 + 0x30]
	0x03D32778 CMP W8, 0x1
	0x03D3277C CSET W8, LT
	0x03D32780 CMP W8, 0x0
	0x03D32784 CSINC W9, W24, W31, EQ
	0x03D32788 CSINC W21, W21, W31, EQ
	0x03D3278C MOVZ W24, 0x1
	0x03D32790 LDR W8, [X20 + 0x44]
	0x03D32794 LDUR W10, [X29 - 0x64]
	0x03D32798 LDUR W12, [X29 - 0xA4]
	0x03D3279C CMP W8, W10
	0x03D327A0 CSET W10, NE
	0x03D327A4 CSINC W11, W21, W31, EQ
	0x03D327A8 CMP W24, 0x0
	0x03D327AC CSET W8, NE
	0x03D327B0 ORR W12, W12, W11, 0x0
	0x03D327B4 ORR W24, W8, W10, 0x0
	0x03D327B8 CBNZ W12, 0x3D32870
	0x03D327BC LDR X8, [X20 + 0x50]
	0x03D327C0 CBZ W23, 0x3D327CC
	0x03D327C4 CBNZ X8, 0x3D327E0
	0x03D327C8 B 0x3D32C00
	0x03D327CC CBZ X8, 0x3D32C00
	0x03D327D0 LDR W9, [X8 + 0x30]
	0x03D327D4 LDR W10, [X20 + 0x58]
	0x03D327D8 ADD W25, W10, W9
	0x03D327DC STUR W25, [X29 - 0xA8]
	0x03D327E0 LDP W9, W8, [X8 + 0x18]
	0x03D327E4 LDUR W11, [X29 - 0x84]
	0x03D327E8 LDR W21, [X20 + 0x5C]
	0x03D327EC LDR W10, [X26 + 0x6C]
	0x03D327F0 ADD W8, W8, W9
	0x03D327F4 ADD W11, W22, W11
	0x03D327F8 CMP W22, W9
	0x03D327FC CSEL W22, W22, W9, LT
	0x03D32800 CMP W11, W8
	0x03D32804 CSEL W8, W11, W8, GT
	0x03D32808 ADD W10, W10, W21
	0x03D3280C SUB W8, W8, W22
	0x03D32810 STUR W8, [X29 - 0x84]
	0x03D32814 STR W10, [X26 + 0x6C]
	0x03D32818 CBZ W24, 0x3D3283C
	0x03D3281C LDUR X3, [X29 - 0x90]
	0x03D32820 AND W4, W27, 0x1
	0x03D32824 SUB X5, X29, 0x80
	0x03D32828 MOV X0, X26
	0x03D3282C MOV X1, X20
	0x03D32830 MOV W2, W28
	0x03D32834 MOV X6, X31
	0x03D32838 BL 0x3D38378
	0x03D3283C LDR X20, [X20 + 0x28]
	0x03D32840 ADD W23, W21, W23
	0x03D32844 ADD W25, W21, W25
	0x03D32848 CBNZ X20, 0x3D325FC
	0x03D3284C B 0x3D32B2C
	0x03D32850 CMP W23, 0x0
	0x03D32854 MOV W24, W31
	0x03D32858 STUR X31, [X29 - 0x90]
	0x03D3285C MOV W27, W31
	0x03D32860 MOVN W28, 0x0
	0x03D32864 CSET W8, GT
	0x03D32868 MOVZ W9, 0x1
	0x03D3286C B 0x3D328A0
	0x03D32870 LDUR W8, [X29 - 0xAC]
	0x03D32874 CMP W8, 0x3FF
	0x03D32878 CSET W12, EQ
	0x03D3287C CMP W23, 0x0
	0x03D32880 CSET W8, GT
	0x03D32884 AND W12, W8, W12, 0x0
	0x03D32888 ANDS W31, W11, W12, 0x0
	0x03D3288C CSET W11, NE
	0x03D32890 CMP W9, 0x0
	0x03D32894 CSET W9, NE
	0x03D32898 ORR W9, W9, W10, 0x0
	0x03D3289C ORR W9, W9, W11, 0x0
	0x03D328A0 LDUR W10, [X29 - 0xA4]
	0x03D328A4 CMP W10, 0x0
	0x03D328A8 CSET W10, NE
	0x03D328AC ORR W21, W10, W9, 0x0
	0x03D328B0 CBZ W8, 0x3D32938
	0x03D328B4 LDUR W10, [X29 - 0xAC]
	0x03D328B8 LDUR W8, [X29 - 0x44]
	0x03D328BC ADD W9, W10, 0x1
	0x03D328C0 STUR W9, [X29 - 0x48]
	0x03D328C4 LDUR X9, [X29 - 0xB8]
	0x03D328C8 ADD W8, W10, W8
	0x03D328CC UBFM W8, W8, 0x1C, 0x1B
	0x03D328D0 AND X8, X8, 0x3FFF
	0x03D328D4 ADD X8, X8, X9
	0x03D328D8 LDUR W9, [X29 - 0xA8]
	0x03D328DC STP W9, W23, [X8]
	0x03D328E0 LDUR W9, [X29 - 0x84]
	0x03D328E4 STP W22, W9, [X8 + 0x8]
	0x03D328E8 ADRP X8, 0x3C1000
	0x03D328EC LDR X8, [X8 + 0xA28]
	0x03D328F0 LDUR W22, [X29 - 0x48]
	0x03D328F4 LDR X0, [X8]
	0x03D328F8 LDR W8, [X0 + 0xE0]
	0x03D328FC CBNZ W8, 0x3D32904
	0x03D32900 BL 0x1C16DFC
	0x03D32904 CMP W22, 0x400
	0x03D32908 CSET W8, LT
	0x03D3290C ORR W0, W21, W8, 0x0
	0x03D32910 MOV X1, X31
	0x03D32914 STUR W22, [X29 - 0xAC]
	0x03D32918 BL 0x3C06E58
	0x03D3291C LDR W8, [X26 + 0x7C]
	0x03D32920 MOV W22, W31
	0x03D32924 MOV W23, W31
	0x03D32928 STUR W31, [X29 - 0x84]
	0x03D3292C ADD W8, W8, 0x1
	0x03D32930 STUR W31, [X29 - 0xA8]
	0x03D32934 STR W8, [X26 + 0x7C]
	0x03D32938 LDR W8, [X20 + 0x34]
	0x03D3293C CBZ W8, 0x3D32948
	0x03D32940 CBNZ W21, 0x3D3297C
	0x03D32944 B 0x3D32AE0
	0x03D32948 LDR X8, [X20 + 0x50]
	0x03D3294C CBZ X8, 0x3D32C00
	0x03D32950 LDR W9, [X8 + 0x30]
	0x03D32954 LDP W10, W23, [X20 + 0x58]
	0x03D32958 LDR W11, [X26 + 0x6C]
	0x03D3295C LDP W22, W12, [X8 + 0x18]
	0x03D32960 ADD W9, W10, W9
	0x03D32964 ADD W8, W11, W23
	0x03D32968 ADD W25, W23, W9
	0x03D3296C STUR W12, [X29 - 0x84]
	0x03D32970 STUR W9, [X29 - 0xA8]
	0x03D32974 STR W8, [X26 + 0x6C]
	0x03D32978 CBZ W21, 0x3D32AE0
	0x03D3297C LDUR W8, [X29 - 0xAC]
	0x03D32980 CMP W8, 0x1
	0x03D32984 B.LT 0x3D329B8
	0x03D32988 LDUR W8, [X29 - 0xBC]
	0x03D3298C SUB X1, X29, 0x80
	0x03D32990 MOV X0, X26
	0x03D32994 AND W2, W8, 0x1
	0x03D32998 BL 0x3D31FE4
	0x03D3299C LDUR X5, [X29 - 0x58]
	0x03D329A0 LDUR X1, [X29 - 0xB8]
	0x03D329A4 SUB X2, X29, 0x48
	0x03D329A8 SUB X3, X29, 0x44
	0x03D329AC MOVZ W4, 0x400
	0x03D329B0 MOV X0, X26
	0x03D329B4 BL 0x3D32DD0
	0x03D329B8 LDR W8, [X20 + 0x34]
	0x03D329BC CBZ W8, 0x3D32AE0
	0x03D329C0 LDRB W9, [X26 + 0x10]
	0x03D329C4 CBNZ W9, 0x3D329DC
	0x03D329C8 LDP X2, X1, [X29 - 0xD8]
	0x03D329CC MOV X0, X20
	0x03D329D0 MOV V0.16B, V8.16B
	0x03D329D4 BL 0x3D33018
	0x03D329D8 LDR W8, [X20 + 0x34]
	0x03D329DC CMP W8, 0xB
	0x03D329E0 B.HI 0x3D32AE0
	0x03D329E4 MOVZ W9, 0x1
	0x03D329E8 LSLV W8, W9, W8
	0x03D329EC MOVZ W9, 0xE86
	0x03D329F0 ANDS W31, W8, W9, 0x0
	0x03D329F4 B.EQ 0x3D32AE0
	0x03D329F8 STUR X31, [X29 - 0x70]
	0x03D329FC STURB W31, [X29 - 0x50]
	0x03D32A00 LDR W8, [X26 + 0x84]
	0x03D32A04 ADD W8, W8, 0x1
	0x03D32A08 STR W8, [X26 + 0x84]
	0x03D32A0C LDR W8, [X20 + 0x34]
	0x03D32A10 CMP W8, 0xB
	0x03D32A14 B.NE 0x3D32A68
	0x03D32A18 LDUR X21, [X29 - 0xD0]
	0x03D32A1C LDR X0, [X21 + 0x28]
	0x03D32A20 CBZ X0, 0x3D32C00
	0x03D32A24 ADRP X9, 0x41B000
	0x03D32A28 LDR W8, [X0 + 0x18]
	0x03D32A2C LDR X9, [X9 + 0xF48]
	0x03D32A30 SUB W1, W8, 0x1
	0x03D32A34 LDR X2, [X9]
	0x03D32A38 STUR W1, [X29 - 0xAC]
	0x03D32A3C BL 0x301BCCC
	0x03D32A40 LDR X8, [X21 + 0x28]
	0x03D32A44 STUR X0, [X29 - 0xA0]
	0x03D32A48 CBZ X8, 0x3D32C00
	0x03D32A4C ADRP X9, 0x41C000
	0x03D32A50 LDR X9, [X9 + 0x580]
	0x03D32A54 LDUR W1, [X29 - 0xAC]
	0x03D32A58 MOV X0, X8
	0x03D32A5C LDR X2, [X9]
	0x03D32A60 BL 0x301DA48
	0x03D32A64 LDR W8, [X20 + 0x34]
	0x03D32A68 CMP W8, 0xA
	0x03D32A6C B.NE 0x3D32AE0
	0x03D32A70 LDUR X8, [X29 - 0xD0]
	0x03D32A74 LDR X0, [X8 + 0x28]
	0x03D32A78 CBZ X0, 0x3D32C00
	0x03D32A7C ADRP X9, 0x3C8000
	0x03D32A80 LDR W10, [X0 + 0x1C]
	0x03D32A84 LDR X8, [X0 + 0x10]
	0x03D32A88 LDR X9, [X9 + 0xA70]
	0x03D32A8C ADD W10, W10, 0x1
	0x03D32A90 LDR X9, [X9]
	0x03D32A94 STR W10, [X0 + 0x1C]
	0x03D32A98 CBZ X8, 0x3D32C00
	0x03D32A9C LDRSW X10, [X0 + 0x18]
	0x03D32AA0 LDR W11, [X8 + 0x18]
	0x03D32AA4 CMP W10, W11
	0x03D32AA8 B.CS 0x3D32AC4
	0x03D32AAC ADD W9, W10, 0x1
	0x03D32AB0 STR W9, [X0 + 0x18]
	0x03D32AB4 LDUR X9, [X29 - 0xA0]
	0x03D32AB8 ADD X8, X8, X10, 0x3, LSL
	0x03D32ABC STR X9, [X8 + 0x20]
	0x03D32AC0 B 0x3D32AD8
	0x03D32AC4 LDR X8, [X9 + 0x20]
	0x03D32AC8 LDUR X1, [X29 - 0xA0]
	0x03D32ACC LDR X8, [X8 + 0xC0]
	0x03D32AD0 LDR X2, [X8 + 0x70]
	0x03D32AD4 BL 0x301BF90
	0x03D32AD8 LDR X8, [X20 + 0x38]
	0x03D32ADC STUR X8, [X29 - 0xA0]
	0x03D32AE0 LDR W8, [X20 + 0x34]
	0x03D32AE4 EOR W9, W24, 0x1
	0x03D32AE8 CMP W8, 0x0
	0x03D32AEC CSET W8, NE
	0x03D32AF0 ORR W8, W9, W8, 0x0
	0x03D32AF4 TBNZ X8, 0x0, 0x3D32B18
	0x03D32AF8 LDUR X3, [X29 - 0x90]
	0x03D32AFC AND W4, W27, 0x1
	0x03D32B00 SUB X5, X29, 0x80
	0x03D32B04 MOV X0, X26
	0x03D32B08 MOV X1, X20
	0x03D32B0C MOV W2, W28
	0x03D32B10 MOV X6, X31
	0x03D32B14 BL 0x3D38378
	0x03D32B18 LDR X20, [X20 + 0x28]
	0x03D32B1C CBZ X20, 0x3D32B2C
	0x03D32B20 LDUR W8, [X29 - 0x48]
	0x03D32B24 STUR W8, [X29 - 0xAC]
	0x03D32B28 B 0x3D325FC
	0x03D32B2C CMP W23, 0x1
	0x03D32B30 B.LT 0x3D32B64
	0x03D32B34 LDP W8, W9, [X29 - 0x48]
	0x03D32B38 ADD W10, W8, 0x1
	0x03D32B3C ADD W8, W8, W9
	0x03D32B40 LDUR X9, [X29 - 0xB8]
	0x03D32B44 UBFM W8, W8, 0x1C, 0x1B
	0x03D32B48 AND X8, X8, 0x3FFF
	0x03D32B4C STUR W10, [X29 - 0x48]
	0x03D32B50 ADD X8, X8, X9
	0x03D32B54 LDUR W9, [X29 - 0xA8]
	0x03D32B58 STP W9, W23, [X8]
	0x03D32B5C LDUR W9, [X29 - 0x84]
	0x03D32B60 STP W22, W9, [X8 + 0x8]
	0x03D32B64 LDUR W8, [X29 - 0x48]
	0x03D32B68 CMP W8, 0x1
	0x03D32B6C B.LT 0x3D32BA0
	0x03D32B70 LDUR W8, [X29 - 0xBC]
	0x03D32B74 SUB X1, X29, 0x80
	0x03D32B78 MOV X0, X26
	0x03D32B7C AND W2, W8, 0x1
	0x03D32B80 BL 0x3D31FE4
	0x03D32B84 LDUR X5, [X29 - 0x58]
	0x03D32B88 LDUR X1, [X29 - 0xB8]
	0x03D32B8C SUB X2, X29, 0x48
	0x03D32B90 SUB X3, X29, 0x44
	0x03D32B94 MOVZ W4, 0x400
	0x03D32B98 MOV X0, X26
	0x03D32B9C BL 0x3D32DD0
	0x03D32BA0 MOV X0, X26
	0x03D32BA4 BL 0x3D33AD8
	0x03D32BA8 ADRP X8, 0x3EA000
	0x03D32BAC LDR X8, [X8 + 0x820]
	0x03D32BB0 LDUR X19, [X29 - 0xC8]
	0x03D32BB4 LDR X0, [X8]
	0x03D32BB8 LDR W8, [X0 + 0xE0]
	0x03D32BBC CBNZ W8, 0x3D32BC4
	0x03D32BC0 BL 0x1C16DFC
	0x03D32BC4 MOV X0, X31
	0x03D32BC8 BL 0x3D1FBD0
	0x03D32BCC LDR X8, [X19 + 0x28]
	0x03D32BD0 LDUR X9, [X29 - 0x20]
	0x03D32BD4 CMP X8, X9
	0x03D32BD8 B.NE 0x3D32C04
	0x03D32BDC SUB X31, X29, 0x10
	0x03D32BE0 LDP X20, X19, [X31 + 0x60]
	0x03D32BE4 LDP X22, X21, [X31 + 0x50]
	0x03D32BE8 LDP X24, X23, [X31 + 0x40]
	0x03D32BEC LDP X26, X25, [X31 + 0x30]
	0x03D32BF0 LDP X28, X27, [X31 + 0x20]
	0x03D32BF4 LDP X29, X30, [X31 + 0x10]
	0x03D32BF8 LDR V8, [X31], #0x70
	0x03D32BFC RET
	0x03D32C00 BL 0x1C16F20
	0x03D32C04 BL 0x3EB1B20
	0x03D32C08 SUB X31, X31, 0xA0
	0x03D32C0C STP X30, X21, [X31 + 0x80]
	0x03D32C10 STP X20, X19, [X31 + 0x90]
	0x03D32C14 ADRP X20, 0x6B5000
	0x03D32C18 LDRB W8, [X20 + 0xB3C]
	0x03D32C1C MOV X19, X0
	0x03D32C20 TBNZ X8, 0x0, 0x3D32C80
	0x03D32C24 ADRP X0, 0x432000
	0x03D32C28 LDR X0, [X0 + 0xDA8]
	0x03D32C2C BL 0x1C16CF4
	0x03D32C30 ADRP X0, 0x432000
	0x03D32C34 LDR X0, [X0 + 0xFF8]
	0x03D32C38 BL 0x1C16CF4
	0x03D32C3C ADRP X0, 0x41B000
	0x03D32C40 LDR X0, [X0 + 0xF38]
	0x03D32C44 BL 0x1C16CF4
	0x03D32C48 ADRP X0, 0x433000
	0x03D32C4C LDR X0, [X0]
	0x03D32C50 BL 0x1C16CF4
	0x03D32C54 ADRP X0, 0x433000
	0x03D32C58 LDR X0, [X0 + 0x8]
	0x03D32C5C BL 0x1C16CF4
	0x03D32C60 ADRP X0, 0x433000
	0x03D32C64 LDR X0, [X0 + 0x10]
	0x03D32C68 BL 0x1C16CF4
	0x03D32C6C ADRP X0, 0x433000
	0x03D32C70 LDR X0, [X0 + 0x18]
	0x03D32C74 BL 0x1C16CF4
	0x03D32C78 MOVZ W8, 0x1
	0x03D32C7C STRB W8, [X20 + 0xB3C]
	0x03D32C80 LDR X0, [X19 + 0x10]
	0x03D32C84 CBZ X0, 0x3D32DCC
	0x03D32C88 ADRP X8, 0x433000
	0x03D32C8C LDR X8, [X8 + 0x8]
	0x03D32C90 LDR X1, [X8]
	0x03D32C94 BL 0x2601700
	0x03D32C98 ADRP X21, 0x6A6000
	0x03D32C9C LDRB W8, [X21 + 0xAC0]
	0x03D32CA0 LDR X20, [X19 + 0x10]
	0x03D32CA4 CBNZ W8, 0x3D32CBC
	0x03D32CA8 ADRP X0, 0x3C5000
	0x03D32CAC LDR X0, [X0 + 0x270]
	0x03D32CB0 BL 0x1C16CF4
	0x03D32CB4 MOVZ W8, 0x1
	0x03D32CB8 STRB W8, [X21 + 0xAC0]
	0x03D32CBC ADRP X8, 0x3C5000
	0x03D32CC0 LDR X8, [X8 + 0x270]
	0x03D32CC4 LDR X8, [X8]
	0x03D32CC8 LDR X8, [X8 + 0xB8]
	0x03D32CCC LDP V1, V0, [X8 + 0x60]
	0x03D32CD0 LDP V2, V3, [X8 + 0x40]
	0x03D32CD4 STP V1, V0, [X31 + 0x20]
	0x03D32CD8 STP V2, V3, [X31]
	0x03D32CDC CBZ X20, 0x3D32DCC
	0x03D32CE0 ADRP X8, 0x433000
	0x03D32CE4 LDR X8, [X8 + 0x10]
	0x03D32CE8 LDP V0, V1, [X31]
	0x03D32CEC LDP V2, V3, [X31 + 0x20]
	0x03D32CF0 ADD X1, X31, 0x40
	0x03D32CF4 LDR X2, [X8]
	0x03D32CF8 MOV X0, X20
	0x03D32CFC STP V0, V1, [X31 + 0x40]
	0x03D32D00 STP V2, V3, [X31 + 0x60]
	0x03D32D04 BL 0x2601B84
	0x03D32D08 LDR X0, [X19 + 0x18]
	0x03D32D0C CBZ X0, 0x3D32DCC
	0x03D32D10 ADRP X8, 0x433000
	0x03D32D14 LDR X8, [X8]
	0x03D32D18 ADRP X21, 0x432000
	0x03D32D1C LDR X1, [X8]
	0x03D32D20 LDR X21, [X21 + 0xDA8]
	0x03D32D24 BL 0x26025F8
	0x03D32D28 LDR X0, [X21]
	0x03D32D2C LDR X20, [X19 + 0x18]
	0x03D32D30 LDR W8, [X0 + 0xE0]
	0x03D32D34 CBNZ W8, 0x3D32D40
	0x03D32D38 BL 0x1C16DFC
	0x03D32D3C LDR X0, [X21]
	0x03D32D40 CBZ X20, 0x3D32DCC
	0x03D32D44 ADRP X9, 0x433000
	0x03D32D48 LDR X8, [X0 + 0xB8]
	0x03D32D4C LDR X9, [X9 + 0x18]
	0x03D32D50 MOV X0, X20
	0x03D32D54 LDP S2, S3, [X8 + 0x8]
	0x03D32D58 LDP S0, S1, [X8]
	0x03D32D5C LDR X1, [X9]
	0x03D32D60 BL 0x2602A14
	0x03D32D64 LDR X8, [X19 + 0x20]
	0x03D32D68 CBZ X8, 0x3D32DCC
	0x03D32D6C LDP W2, W9, [X8 + 0x18]
	0x03D32D70 ADD W9, W9, 0x1
	0x03D32D74 CMP W2, 0x1
	0x03D32D78 STP W31, W9, [X8 + 0x18]
	0x03D32D7C B.LT 0x3D32D90
	0x03D32D80 LDR X0, [X8 + 0x10]
	0x03D32D84 MOV W1, W31
	0x03D32D88 MOV X3, X31
	0x03D32D8C BL 0x339FA34
	0x03D32D90 LDR X8, [X19 + 0x28]
	0x03D32D94 CBZ X8, 0x3D32DCC
	0x03D32D98 LDP W2, W9, [X8 + 0x18]
	0x03D32D9C ADD W9, W9, 0x1
	0x03D32DA0 CMP W2, 0x1
	0x03D32DA4 STP W31, W9, [X8 + 0x18]
	0x03D32DA8 B.LT 0x3D32DBC
	0x03D32DAC LDR X0, [X8 + 0x10]
	0x03D32DB0 MOV W1, W31
	0x03D32DB4 MOV X3, X31
	0x03D32DB8 BL 0x339FA34
	0x03D32DBC LDP X20, X19, [X31 + 0x90]
	0x03D32DC0 LDP X30, X21, [X31 + 0x80]
	0x03D32DC4 ADD X31, X31, 0xA0
	0x03D32DC8 RET
	0x03D32DCC BL 0x1C16F20
	0x03D32DD0 STP X29, X30, [X31 - 0x60]!
	0x03D32DD4 STP X28, X27, [X31 + 0x10]
	0x03D32DD8 STP X26, X25, [X31 + 0x20]
	0x03D32DDC STP X24, X23, [X31 + 0x30]
	0x03D32DE0 STP X22, X21, [X31 + 0x40]
	0x03D32DE4 STP X20, X19, [X31 + 0x50]
	0x03D32DE8 ADRP X26, 0x6B5000
	0x03D32DEC ADRP X25, 0x3C1000
	0x03D32DF0 LDRB W8, [X26 + 0xB24]
	0x03D32DF4 LDR X25, [X25 + 0xA28]
	0x03D32DF8 MOV X24, X5
	0x03D32DFC MOV W21, W4
	0x03D32E00 MOV X20, X3
	0x03D32E04 MOV X19, X2
	0x03D32E08 MOV X23, X1
	0x03D32E0C MOV X22, X0
	0x03D32E10 TBNZ X8, 0x0, 0x3D32E4C
	0x03D32E14 ADRP X0, 0x3C1000
	0x03D32E18 LDR X0, [X0 + 0xA28]
	0x03D32E1C BL 0x1C16CF4
	0x03D32E20 ADRP X0, 0x433000
	0x03D32E24 LDR X0, [X0 + 0x20]
	0x03D32E28 BL 0x1C16CF4
	0x03D32E2C ADRP X0, 0x433000
	0x03D32E30 LDR X0, [X0 + 0x28]
	0x03D32E34 BL 0x1C16CF4
	0x03D32E38 ADRP X0, 0x432000
	0x03D32E3C LDR X0, [X0 + 0x6F8]
	0x03D32E40 BL 0x1C16CF4
	0x03D32E44 MOVZ W8, 0x1
	0x03D32E48 STRB W8, [X26 + 0xB24]
	0x03D32E4C LDR X0, [X25]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 560
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X21+40]
	016 Move X19, 0x6B6000
	017 Move X26, X0
	018 Move [X31+552], X8
	019 Move W8, [X19+2854]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {92}
	024 Move X0, 0x433000
	025 Move X0, [X0+3728]
	026 Call 0x1C17CF4
	027 Move X0, 0x433000
	028 Move X0, [X0+3736]
	029 Call 0x1C17CF4
	030 Move X0, 0x433000
	031 Move X0, [X0+3936]
	032 Call 0x1C17CF4
	033 Move X0, 0x433000
	034 Move X0, [X0+3944]
	035 Call 0x1C17CF4
	036 Move X0, 0x433000
	037 Move X0, [X0+3952]
	038 Call 0x1C17CF4
	039 Move X0, 0x433000
	040 Move X0, [X0+3960]
	041 Call 0x1C17CF4
	042 Move X0, 0x433000
	043 Move X0, [X0+3968]
	044 Call 0x1C17CF4
	045 Move X0, 0x433000
	046 Move X0, [X0+3976]
	047 Call 0x1C17CF4
	048 Move X0, 0x433000
	049 Move X0, [X0+3816]
	050 Call 0x1C17CF4
	051 Move X0, 0x433000
	052 Move X0, [X0+3984]
	053 Call 0x1C17CF4
	054 Move X0, 0x433000
	055 Move X0, [X0+3992]
	056 Call 0x1C17CF4
	057 Move X0, 0x433000
	058 Move X0, [X0+4000]
	059 Call 0x1C17CF4
	060 Move X0, 0x433000
	061 Move X0, [X0+4008]
	062 Call 0x1C17CF4
	063 Move X0, 0x433000
	064 Move X0, [X0+3832]
	065 Call 0x1C17CF4
	066 Move X0, 0x433000
	067 Move X0, [X0+3840]
	068 Call 0x1C17CF4
	069 Move X0, 0x433000
	070 Move X0, [X0+3848]
	071 Call 0x1C17CF4
	072 Move X0, 0x433000
	073 Move X0, [X0+4016]
	074 Call 0x1C17CF4
	075 Move X0, 0x433000
	076 Move X0, [X0+3744]
	077 Call 0x1C17CF4
	078 Move X0, 0x433000
	079 Move X0, [X0+3752]
	080 Call 0x1C17CF4
	081 Move X0, 0x433000
	082 Move X0, [X0+3800]
	083 Call 0x1C17CF4
	084 Move X0, 0x433000
	085 Move X0, [X0+4024]
	086 Call 0x1C17CF4
	087 Move X0, 0x433000
	088 Move X0, [X0+1560]
	089 Call 0x1C17CF4
	090 Move W8, 1
	091 Move [X19+2854], W8
	092 NotImplemented "Instruction MOVI not yet implemented."
	093 Move [X31+448], X31
	094 Move [X31+368], X31
	095 Move [X31+376], X31
	096 Move [X31+384], X31
	097 Move [X31+536], X31
	098 Move [X31+528], X31
	099 Move [X31+544], W31
	100 Move [X31+496], X31
	101 Move [X31+504], X31
	102 Move [X31+512], W31
	103 Move [X31+256], X31
	104 Move [X31+264], X31
	105 Move [X31+240], X31
	106 Move [X31+248], X31
	107 Move [X31+224], X31
	108 Move [X31+232], X31
	109 Move [X31+208], X31
	110 Move [X31+216], X31
	111 Move [X31+416], V0
	112 Move [X31+424], V0
	113 Move [X31+25], V0
	114 Move [X31+336], V0
	115 Move [X31+344], V0
	116 Move [X31+304], V0
	117 Move [X31+312], V0
	118 Move [X31+272], V0
	119 Move [X31+280], V0
	120 Move W9, [X26+96]
	121 Move X8, [X26+80]
	122 Add W9, W9, 1
	123 Move [X26+96], W9
	124 Move [X26+104], W9
	125 Compare X8, 0
	126 JumpIfEqual {143}
	127 Move X10, [X8+24]
	128 Move W9, W9
	129 Move X10, W10
	130 NotImplemented "Instruction SDIV not yet implemented."
	131 NotImplemented "Instruction MSUB not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Add X8, X8, X19
	134 Move W1, [X8+32]
	135 Call UIRenderDevice.WaitOnCpuFence, X0, X1
	136 Move X8, [X26+80]
	137 Compare X8, 0
	138 JumpIfEqual {593}
	139 Move W9, [X8+24]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Add X8, X8, X19
	142 Move [X8+32], W31
	143 Move X0, [X26+64]
	144 Move W8, 1
	145 Move [X26+100], W8
	146 Compare X0, 0
	147 JumpIfEqual {593}
	148 Move X10, 0x433000
	149 Move W8, [X26+96]
	150 Move W9, [X0+24]
	151 Move X10, [X10+3840]
	152 Move X2, [X10]
	153 NotImplemented "Instruction UDIV not yet implemented."
	154 NotImplemented "Instruction MSUB not yet implemented."
	155 Call List`1<Object>.get_Item, X0, X1
	156 Compare X0, 0
	157 JumpIfEqual {593}
	158 Move X8, 0x433000
	159 Move X8, [X8+4008]
	160 Move X20, 0x433000
	161 Move X24, 0x433000
	162 Move X19, 0x433000
	163 Move X28, 0x433000
	164 Move X20, [X20+3960]
	165 Move X24, [X24+3848]
	166 Move X19, [X19+4000]
	167 Move X28, [X28+3952]
	168 Move X1, [X8]
	169 Move X25, 0x433000
	170 Move X25, [X25+3936]
	171 Add X8, X31, 48
	172 Move [X31+32], X0
	173 Call List`1<AllocToFree>.GetEnumerator, X0
	174 Move V0, [X31+48]
	175 Move V1, [X31+64]
	176 Move V2, [X31+5]
	177 Move X8, [X31+96]
	178 Add X9, X31, 400
	179 Move [X31+400], V0
	180 Move [X31+408], V1
	181 Move [X31+27], V2
	182 Move [X31+448], X8
	183 Add X22, X9, 16
	184 Move [X31+24], X21
	185 Move X1, [X20]
	186 Add X0, X31, 400
	187 Call Enumerator<AllocToFree>.MoveNext, X0
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {238}
	192 Move V0, [X22]
	193 Move X9, [X22+16]
	194 Move W10, [X31+448]
	195 Move X8, [X31+440]
	196 Move [X31+23], V0
	197 Move [X31+384], X9
	198 Move TEMP, X10
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfEqual {220}
	202 Compare X8, 0
	203 JumpIfEqual {582}
	204 Move X8, [X8+32]
	205 Compare X8, 0
	206 JumpIfEqual {583}
	207 Move X0, [X8+64]
	208 Move V0, [X31+23]
	209 Move X8, [X31+384]
	210 Move [X31+3], V0
	211 Move [X31+64], X8
	212 Compare X0, 0
	213 JumpIfEqual {581}
	214 Move V0, [X31+3]
	215 Move X8, [X31+64]
	216 Move [X31+9], V0
	217 Move [X31+160], X8
	218 Add X1, X31, 144
	219 Call GPUBufferAllocator.Free, X0, X1
	220 Compare X8, 0
	221 JumpIfEqual {580}
	222 Move X8, [X8+24]
	223 Compare X8, 0
	224 JumpIfEqual {584}
	225 Move X0, [X8+64]
	226 Move V0, [X31+23]
	227 Move X8, [X31+384]
	228 Move [X31+3], V0
	229 Move [X31+64], X8
	230 Compare X0, 0
	231 JumpIfEqual {585}
	232 Move V0, [X31+3]
	233 Move X8, [X31+64]
	234 Move [X31+11], V0
	235 Move [X31+192], X8
	236 Add X1, X31, 176
	237 Call GPUBufferAllocator.Free, X0, X1
	238 Move X1, [X25]
	239 Add X0, X31, 400
	240 Call Enumerator<AllocToFree>.Dispose, X0
	241 Move X21, [X31+32]
	242 Add X25, X31, 456
	243 Move W2, [X21+24]
	244 Move W8, [X21+28]
	245 Add W8, W8, 1
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move [X21+24], W31
	248 Move [X21+28], W8
	249 Move X0, [X21+16]
	250 Move W1, W31
	251 Move X3, X31
	252 Call Array.Clear, X0, X1, X2
	253 Move X8, [X26+64]
	254 Compare X8, 0
	255 JumpIfEqual {593}
	256 Move X0, [X26+72]
	257 Compare X0, 0
	258 JumpIfEqual {593}
	259 Move W9, [X26+96]
	260 Move W8, [X8+24]
	261 Move X2, [X24]
	262 Move [X31+16], X26
	263 NotImplemented "Instruction UDIV not yet implemented."
	264 NotImplemented "Instruction MSUB not yet implemented."
	265 Call List`1<Object>.get_Item, X0, X1
	266 Compare X0, 0
	267 JumpIfEqual {593}
	268 Move X1, [X19]
	269 Add X8, X31, 48
	270 Add X19, X31, 48
	271 Move [X31+8], X0
	272 Call List`1<AllocToUpdate>.GetEnumerator, X0
	273 Add X0, X31, 272
	274 Add X1, X31, 48
	275 Move W2, 96
	276 Add X20, X31, 272
	277 Call 0x3EB2AC0
	278 Add X8, X19, 33
	279 Add X27, X20, 36
	280 Add X26, X20, 60
	281 Move [X31+40], X8
	282 Move X1, [X28]
	283 Add X0, X31, 272
	284 Call Enumerator<AllocToUpdate>.MoveNext, X0
	285 Move TEMP, X0
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfNotEqual {542}
	289 Move W9, [X31+288]
	290 Move W8, [X31+292]
	291 Move X29, [X31+296]
	292 Move W10, [X27+16]
	293 Move V0, [X27]
	294 Move W23, [X31+304]
	295 Move W22, [X31+328]
	296 Move V1, [X26]
	297 Move W11, [X26+16]
	298 Move [X31+33], V0
	299 Move [X31+544], W10
	300 Move [X31+31], V1
	301 Move [X31+512], W11
	302 Compare X29, 0
	303 JumpIfEqual {579}
	304 Move W10, [X29+92]
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move W9, [X29+88]
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Move X8, [X29+80]
	309 Compare X8, 0
	310 JumpIfEqual {586}
	311 Move X8, [X8+24]
	312 Compare X8, 0
	313 JumpIfEqual {589}
	314 Move X19, X29
	315 Move X28, [X31+352]
	316 Move X24, [X31+360]
	317 Move X1, [X8+32]
	318 Move X2, [X8+40]
	319 Add X19, X19, 24
	320 Move W3, [X19]
	321 Move X8, 0x433000
	322 Move X20, X19
	323 Add X20, X20, 4
	324 Move W4, [X20]
	325 Move X8, [X8+3744]
	326 Move X5, [X8]
	327 Add X0, X31, 256
	328 Call NativeSlice`1<Vertex>..ctor, X0, X1, X2, X3
	329 Compare X28, 0
	330 JumpIfEqual {590}
	331 Move X8, [X28+24]
	332 Compare X8, 0
	333 JumpIfEqual {588}
	334 Move X1, [X8+32]
	335 Move X2, [X8+40]
	336 Move X8, 0x433000
	337 Move W4, [X20]
	338 Move X8, [X8+3744]
	339 Move X5, [X8]
	340 Add X0, X31, 240
	341 Move W3, W23
	342 Call NativeSlice`1<Vertex>..ctor, X0, X1, X2, X3
	343 Move X8, 0x433000
	344 Move X1, [X31+256]
	345 Move X2, [X31+264]
	346 Move X8, [X8+4016]
	347 Move X3, [X8]
	348 Add X0, X31, 240
	349 Call NativeSlice`1<Vertex>.CopyFrom, X0, X1
	350 Move X0, [X28+24]
	351 Compare X0, 0
	352 JumpIfEqual {592}
	353 Move X8, 0x433000
	354 Move W2, [X20]
	355 Move X8, [X8+3728]
	356 Move X3, [X8]
	357 Move W1, W23
	358 Call DataSet`1<Vertex>.RegisterUpdate, X0, X1, X2
	359 Move TEMP, X24
	360 And TEMP, TEMP, 1
	361 Compare TEMP, 1
	362 JumpIfNotEqual {426}
	363 Move X8, [X29+80]
	364 Compare X8, 0
	365 JumpIfEqual {596}
	366 Move X8, [X8+32]
	367 Compare X8, 0
	368 JumpIfEqual {595}
	369 Move X1, [X8+32]
	370 Move X2, [X8+40]
	371 Move X8, 0x433000
	372 Move W3, [X29+48]
	373 Move W4, [X29+52]
	374 Move X8, [X8+3752]
	375 Move X5, [X8]
	376 Add X0, X31, 224
	377 Call NativeSlice`1<UInt16>..ctor, X0, X1, X2, X3
	378 Move X8, [X28+32]
	379 Compare X8, 0
	380 JumpIfEqual {597}
	381 Move X1, [X8+32]
	382 Move X2, [X8+40]
	383 Move X8, 0x433000
	384 Move W4, [X29+52]
	385 Move X8, [X8+3752]
	386 Move X5, [X8]
	387 Add X0, X31, 208
	388 Move W3, W22
	389 Call NativeSlice`1<UInt16>..ctor, X0, X1, X2, X3
	390 Move X8, 0x433000
	391 Move X8, [X8+4024]
	392 Move X1, [X8]
	393 Add X0, X31, 208
	394 Call NativeSlice`1<UInt16>.get_Length, X0
	395 Move W24, W0
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Move W8, [X19]
	398 Move W25, W31
	399 Subtract W21, W23, W8
	400 Move X8, 0x433000
	401 Move X8, [X8+3800]
	402 Move X2, [X8]
	403 Add X0, X31, 224
	404 Move W1, W25
	405 Call NativeSlice`1<UInt16>.get_Item, X0, X1
	406 Move X8, 0x433000
	407 Move X8, [X8+1560]
	408 Add W2, W0, W21
	409 Move X3, [X8]
	410 Add X0, X31, 208
	411 Move W1, W25
	412 Call NativeSlice`1<UInt16>.set_Item, X0, X1, X2
	413 Add W25, W25, 1
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Move X0, [X28+32]
	416 Compare X0, 0
	417 JumpIfEqual {594}
	418 Move X8, 0x433000
	419 Move W2, [X29+52]
	420 Move X8, [X8+3736]
	421 Move X3, [X8]
	422 Move W1, W22
	423 Call 0x29AD36C, X0, X1, X2
	424 Move X21, [X31+32]
	425 Add X25, X31, 456
	426 Move X9, [X19+16]
	427 Move V0, [X19]
	428 Move X8, [X29+80]
	429 Move [X31+456], W31
	430 Move [X31+480], X9
	431 Move [X31+29], V0
	432 Move [X25+3], W31
	433 Move X11, 0x433000
	434 Move W10, [X21+28]
	435 Move X9, [X21+16]
	436 Move X11, [X11+3816]
	437 Add W10, W10, 1
	438 Move X11, [X11]
	439 Move [X21+28], W10
	440 Compare X9, 0
	441 JumpIfEqual {587}
	442 NotImplemented "Instruction LDRSW not yet implemented."
	443 Move W12, [X9+24]
	444 NotImplemented "Instruction CMP not yet implemented."
	445 Add W11, W10, 1
	446 Move [X21+24], W11
	447 Move V0, [X31+29]
	448 Move X11, [X31+480]
	449 Move W12, 40
	450 NotImplemented "Instruction MADD not yet implemented."
	451 Move W10, 1
	452 Move [X9+64], W10
	453 Move [X9+2], V0
	454 Move [X9+48], X11
	455 Move [X9+56], X8
	456 NotImplemented "Instruction LDUR not yet implemented."
	457 Move W10, [X31+456]
	458 Move [X9+68], W8
	459 Move [X9+65], W10
	460 Move X9, [X11+32]
	461 Move X10, [X31+480]
	462 Move V0, [X31+29]
	463 Move W11, [X31+456]
	464 Move X9, [X9+192]
	465 NotImplemented "Instruction LDUR not yet implemented."
	466 Move X2, [X9+112]
	467 Move [X31+64], X10
	468 Move [X31+72], X8
	469 Move W8, 1
	470 Move [X31+80], W8
	471 Move X8, [X31+40]
	472 Move [X31+3], V0
	473 Move [X8+3], W12
	474 Move [X8], W11
	475 Add X1, X31, 48
	476 Move X0, X21
	477 Call List`1<AllocToFree>.AddWithResize, X0, X1
	478 Move X9, [X29+64]
	479 Move V0, [X29+3]
	480 Move X8, [X29+80]
	481 Move [X31+456], W31
	482 Move [X31+480], X9
	483 Move [X31+29], V0
	484 Move [X25+3], W31
	485 Move X11, 0x433000
	486 Move W10, [X21+28]
	487 Move X9, [X21+16]
	488 Move X11, [X11+3816]
	489 Add W10, W10, 1
	490 Move X11, [X11]
	491 Move [X21+28], W10
	492 Compare X9, 0
	493 JumpIfEqual {591}
	494 NotImplemented "Instruction LDRSW not yet implemented."
	495 Move W12, [X9+24]
	496 NotImplemented "Instruction CMP not yet implemented."
	497 Add W11, W10, 1
	498 Move [X21+24], W11
	499 Move V0, [X31+29]
	500 Move X11, [X31+480]
	501 Move W12, 40
	502 NotImplemented "Instruction MADD not yet implemented."
	503 Move [X9+64], W31
	504 Move [X9+2], V0
	505 Move [X9+48], X11
	506 Move [X9+56], X8
	507 NotImplemented "Instruction LDUR not yet implemented."
	508 Move W10, [X31+456]
	509 Move [X9+68], W8
	510 Move [X9+65], W10
	511 Move X9, [X11+32]
	512 Move X10, [X31+480]
	513 Move V0, [X31+29]
	514 Move W11, [X31+456]
	515 Move X9, [X9+192]
	516 NotImplemented "Instruction LDUR not yet implemented."
	517 Move X2, [X9+112]
	518 Move [X31+64], X10
	519 Move [X31+72], X8
	520 Move X8, [X31+40]
	521 Move [X31+3], V0
	522 Move [X31+80], W31
	523 Move [X8+3], W12
	524 Move [X8], W11
	525 Add X1, X31, 48
	526 Move X0, X21
	527 Call List`1<AllocToFree>.AddWithResize, X0, X1
	528 Move [X29+24], W23
	529 Move W8, [X31+544]
	530 Move V0, [X31+33]
	531 Move [X20+16], W8
	532 Move [X20], V0
	533 Move [X29+48], W22
	534 Move W8, [X31+512]
	535 Move V0, [X31+31]
	536 Move [X29+80], X28
	537 Move [X29+92], W31
	538 Move [X29+68], W8
	539 Move [X29+52], V0
	540 Move X28, 0x433000
	541 Move X28, [X28+3952]
	542 Move X8, 0x433000
	543 Move X8, [X8+3944]
	544 Add X0, X31, 272
	545 Move X1, [X8]
	546 Call Enumerator<AllocToUpdate>.Dispose, X0
	547 Move X20, [X31+16]
	548 Move X19, [X31+24]
	549 Move X9, [X31+8]
	550 Move W2, [X9+24]
	551 Move W8, [X9+28]
	552 Add W8, W8, 1
	553 NotImplemented "Instruction CMP not yet implemented."
	554 Move [X9+24], W31
	555 Move [X9+28], W8
	556 Move X0, [X9+16]
	557 Move W1, W31
	558 Move X3, X31
	559 Call Array.Clear, X0, X1, X2
	560 Move X0, X20
	561 Call UIRenderDevice.PruneUnusedPages, X0
	562 Move X8, [X19+40]
	563 Move X9, [X31+552]
	564 NotImplemented "Instruction CMP not yet implemented."
	565 Add X31, X31, 560
	566 Move X20, [X31+80]
	567 Move X19, [X31+88]
	568 Move X22, [X31+64]
	569 Move X21, [X31+72]
	570 Move X24, [X31+48]
	571 Move X23, [X31+56]
	572 Move X26, [X31+32]
	573 Move X25, [X31+40]
	574 Move X28, [X31+16]
	575 Move X27, [X31+24]
	576 Move X29, [X31+96]
	577 Move X30, [X31+104]
	578 Return 
	579 Call 0x1C17F20
	580 Call 0x1C17F20
	581 Call 0x1C17F20
	582 Call 0x1C17F20
	583 Call 0x1C17F20
	584 Call 0x1C17F20
	585 Call 0x1C17F20
	586 Call 0x1C17F20
	587 Call 0x1C17F20
	588 Call 0x1C17F20
	589 Call 0x1C17F20
	590 Call 0x1C17F20
	591 Call 0x1C17F20
	592 Call 0x1C17F20
	593 Call 0x1C17F20
	594 Call 0x1C17F20
	595 Call 0x1C17F20
	596 Call 0x1C17F20
	597 Call 0x1C17F20
	598 Call 0x1C17F28
	599 Call 0x3EB2B20
	600 Move X22, X0
	601 NotImplemented "Instruction CMP not yet implemented."
	602 Move X0, X22
	603 Call 0x3EB2AD0
	604 Move X23, [X0]
	605 Call 0x3EB2AE0
	606 Move X1, [X25]
	607 Add X0, X31, 400
	608 Call Enumerator<AllocToFree>.Dispose, X0
	609 Compare X23, 0
	610 JumpIfEqual {241}
	611 Move X0, X23
	612 Call 0x1C17F18
	613 Move X23, X31
	614 Move X22, X0
	615 Move X1, [X25]
	616 Add X0, X31, 400
	617 Call Enumerator<AllocToFree>.Dispose, X0
	618 Compare X23, 0
	619 JumpIfEqual {648}
	620 Move X0, X23
	621 Call 0x1C17F18
	622 Move X20, [X31+16]
	623 Move X19, [X31+24]
	624 Move X22, X0
	625 NotImplemented "Instruction CMP not yet implemented."
	626 Move X0, X22
	627 Call 0x3EB2AD0
	628 Move X21, [X0]
	629 Call 0x3EB2AE0
	630 Move X8, 0x433000
	631 Move X8, [X8+3944]
	632 Add X0, X31, 272
	633 Move X1, [X8]
	634 Call Enumerator<AllocToUpdate>.Dispose, X0
	635 Compare X21, 0
	636 JumpIfEqual {549}
	637 Move X0, X21
	638 Call 0x1C17F18
	639 Move X21, X31
	640 Move X22, X0
	641 Move X8, 0x433000
	642 Move X8, [X8+3944]
	643 Move X1, [X8]
	644 Add X0, X31, 272
	645 Call Enumerator<AllocToUpdate>.Dispose, X0
	646 Compare X21, 0
	647 JumpIfNotEqual {650}
	648 Move X0, X22
	649 Call 0x1D2D690
	650 Move X0, X21
	651 Call 0x1C17F18
	652 Call 0x1991590

Method: System.Void PruneUnusedPages()

Disassembly:
	0x03D34C28 LDR X0, [X0 + 0x820]
	0x03D34C2C BL 0x1C16CF4
	0x03D34C30 MOVZ W8, 0x1
	0x03D34C34 STRB W8, [X19 + 0xB42]
	0x03D34C38 LDR X0, [X20]
	0x03D34C3C LDR W8, [X0 + 0xE0]
	0x03D34C40 CBNZ W8, 0x3D34C48
	0x03D34C44 BL 0x1C16DFC
	0x03D34C48 MOV X0, X31
	0x03D34C4C BL 0x3D1FAE8
	0x03D34C50 ADRP X20, 0x6A5000
	0x03D34C54 LDRB W8, [X20 + 0x5D7]
	0x03D34C58 MOV X19, X1
	0x03D34C5C CBNZ W8, 0x3D34C74
	0x03D34C60 ADRP X0, 0x3BF000
	0x03D34C64 LDR X0, [X0 + 0x5A8]
	0x03D34C68 BL 0x1C16CF4
	0x03D34C6C MOVZ W8, 0x1
	0x03D34C70 STRB W8, [X20 + 0x5D7]
	0x03D34C74 ADRP X21, 0x3BF000
	0x03D34C78 LDR X21, [X21 + 0x5A8]
	0x03D34C7C UBFM X19, X19, 0x20, 0x3F
	0x03D34C80 FMUL S13, S12, S8
	0x03D34C84 LDR X0, [X21]
	0x03D34C88 LDR W8, [X0 + 0xE0]
	0x03D34C8C CBNZ W8, 0x3D34C94
	0x03D34C90 BL 0x1C16DFC
	0x03D34C94 FCVT S12, S13
	0x03D34C98 ADD X0, X31, 0x8
	0x03D34C9C MOV V0.16B, V12.16B
	0x03D34CA0 BL 0x3EB1C00
	0x03D34CA4 FCMP S13, 0x0
	0x03D34CA8 B.GE 0x3D34CC4
	0x03D34CAC FMOV D1, -0.5
	0x03D34CB0 FCMP D0, D1
	0x03D34CB4 B.NE 0x3D34CEC
	0x03D34CB8 LDR V0, [X31 + 0x8]
	0x03D34CBC FMOV D1, -1
	0x03D34CC0 B 0x3D34CD8
	0x03D34CC4 FMOV D1, 0.5
	0x03D34CC8 FCMP D0, D1
	0x03D34CCC B.NE 0x3D34CF8
	0x03D34CD0 LDR V0, [X31 + 0x8]
	0x03D34CD4 FMOV D1, 1
	0x03D34CD8 FCVTZS X8, D0
	0x03D34CDC FADD D1, D0, D1
	0x03D34CE0 ANDS X31, X8, 0x1
	0x03D34CE4 FCSEL D12, D0, D1, EQ
	0x03D34CE8 B 0x3D34D00
	0x03D34CEC FADD D0, D12, D1
	0x03D34CF0 FRINTP D12, D0
	0x03D34CF4 B 0x3D34D00
	0x03D34CF8 FADD D0, D12, D1
	0x03D34CFC FRINTM D12, D0
	0x03D34D00 LDRB W8, [X20 + 0x5D7]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, [X0+40]
	009 Move X19, X0
	010 Compare X21, 0
	011 JumpIfEqual {58}
	012 Move X22, X31
	013 Move X24, X31
	014 Move X20, X31
	015 Move X23, X31
	016 Move X0, X21
	017 Call Page.get_isEmpty, X0
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {32}
	022 Move W8, [X21+48]
	023 Add W8, W8, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move [X21+48], W8
	026 Compare X20, 0
	027 JumpIfEqual {41}
	028 Compare X23, 0
	029 JumpIfEqual {67}
	030 Move [X23+40], X21
	031 Move X23, X21
	032 Move [X21+48], W31
	033 Compare X22, 0
	034 JumpIfEqual {39}
	035 Compare X24, 0
	036 JumpIfEqual {67}
	037 Move [X24+40], X21
	038 Move X24, X21
	039 Move X24, X21
	040 Move X22, X21
	041 Move X23, X21
	042 Move X20, X21
	043 Move X8, [X21+40]
	044 Move [X21+40], X31
	045 Move X21, X8
	046 Compare X8, 0
	047 JumpIfNotEqual {16}
	048 Move [X19+40], X22
	049 Compare X20, 0
	050 JumpIfEqual {59}
	051 Move X19, [X20+40]
	052 Move X0, X20
	053 Move [X20+40], X31
	054 Call Page.Dispose, X0
	055 Move X20, X19
	056 Compare X19, 0
	057 JumpIfNotEqual {51}
	058 Move [X19+40], X31
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X24, [X31+16]
	064 Move X23, [X31+24]
	065 Move X30, [X31+64]
	066 Return 
	067 Call 0x1C17F20

Method: System.Void PrepareForGfxDeviceRecreate()

Disassembly:
	0x03D34D70 FCMP D0, D1
	0x03D34D74 B.NE 0x3D34DA0
	0x03D34D78 LDR V0, [X31 + 0x8]
	0x03D34D7C FMOV D1, 1
	0x03D34D80 FCVTZS X8, D0
	0x03D34D84 FADD D1, D0, D1
	0x03D34D88 ANDS X31, X8, 0x1
	0x03D34D8C FCSEL D11, D0, D1, EQ
	0x03D34D90 B 0x3D34DA8
	0x03D34D94 FADD D0, D11, D1
	0x03D34D98 FRINTP D11, D0
	0x03D34D9C B 0x3D34DA8
	0x03D34DA0 FADD D0, D11, D1
	0x03D34DA4 FRINTM D11, D0
	0x03D34DA8 LDRB W8, [X20 + 0x5D7]
	0x03D34DAC CBNZ W8, 0x3D34DC4
	0x03D34DB0 ADRP X0, 0x3BF000
	0x03D34DB4 LDR X0, [X0 + 0x5A8]
	0x03D34DB8 BL 0x1C16CF4
	0x03D34DBC MOVZ W8, 0x1
	0x03D34DC0 STRB W8, [X20 + 0x5D7]
	0x03D34DC4 LDR X0, [X21]
	0x03D34DC8 FMUL S13, S10, S8
	0x03D34DCC LDR W8, [X0 + 0xE0]
	0x03D34DD0 CBNZ W8, 0x3D34DD8
	0x03D34DD4 BL 0x1C16DFC
	0x03D34DD8 FCVT S10, S13
	0x03D34DDC ADD X0, X31, 0x8
	0x03D34DE0 MOV V0.16B, V10.16B
	0x03D34DE4 BL 0x3EB1C00
	0x03D34DE8 FCMP S13, 0x0
	0x03D34DEC B.GE 0x3D34E08
	0x03D34DF0 FMOV D1, -0.5
	0x03D34DF4 FCMP D0, D1
	0x03D34DF8 B.NE 0x3D34E30
	0x03D34DFC LDR V0, [X31 + 0x8]
	0x03D34E00 FMOV D1, -1
	0x03D34E04 B 0x3D34E1C
	0x03D34E08 FMOV D1, 0.5
	0x03D34E0C FCMP D0, D1
	0x03D34E10 B.NE 0x3D34E3C
	0x03D34E14 LDR V0, [X31 + 0x8]
	0x03D34E18 FMOV D1, 1
	0x03D34E1C FCVTZS X8, D0
	0x03D34E20 FADD D1, D0, D1
	0x03D34E24 ANDS X31, X8, 0x1
	0x03D34E28 FCSEL D10, D0, D1, EQ
	0x03D34E2C B 0x3D34E44
	0x03D34E30 FADD D0, D10, D1
	0x03D34E34 FRINTP D10, D0
	0x03D34E38 B 0x3D34E44
	0x03D34E3C FADD D0, D10, D1
	0x03D34E40 FRINTM D10, D0
	0x03D34E44 LDRB W8, [X20 + 0x5D7]
	0x03D34E48 CBNZ W8, 0x3D34E60
	0x03D34E4C ADRP X0, 0x3BF000
	0x03D34E50 LDR X0, [X0 + 0x5A8]
	0x03D34E54 BL 0x1C16CF4
	0x03D34E58 MOVZ W8, 0x1
	0x03D34E5C STRB W8, [X20 + 0x5D7]
	0x03D34E60 LDR X0, [X21]
	0x03D34E64 FMUL S9, S9, S8
	0x03D34E68 LDR W8, [X0 + 0xE0]
	0x03D34E6C CBNZ W8, 0x3D34E74
	0x03D34E70 BL 0x1C16DFC
	0x03D34E74 FCVT S8, S9
	0x03D34E78 ADD X0, X31, 0x8
	0x03D34E7C MOV V0.16B, V8.16B
	0x03D34E80 BL 0x3EB1C00
	0x03D34E84 FCMP S9, 0x0
	0x03D34E88 B.GE 0x3D34EA4
	0x03D34E8C FMOV D1, -0.5
	0x03D34E90 FCMP D0, D1
	0x03D34E94 B.NE 0x3D34ECC
	0x03D34E98 LDR V0, [X31 + 0x8]
	0x03D34E9C FMOV D1, -1
	0x03D34EA0 B 0x3D34EB8
	0x03D34EA4 FMOV D1, 0.5
	0x03D34EA8 FCMP D0, D1
	0x03D34EAC B.NE 0x3D34ED8
	0x03D34EB0 LDR V0, [X31 + 0x8]
	0x03D34EB4 FMOV D1, 1
	0x03D34EB8 FCVTZS X8, D0
	0x03D34EBC FADD D1, D0, D1
	0x03D34EC0 ANDS X31, X8, 0x1
	0x03D34EC4 FCSEL D0, D0, D1, EQ
	0x03D34EC8 B 0x3D34EE0
	0x03D34ECC FADD D0, D8, D1
	0x03D34ED0 FRINTP D0, D0
	0x03D34ED4 B 0x3D34EE0
	0x03D34ED8 FADD D0, D8, D1
	0x03D34EDC FRINTM D0, D0
	0x03D34EE0 MOVZ X9, 0x7FF00000
	0x03D34EE4 FMOV D1, X9
	0x03D34EE8 FCVTZS W8, D10
	0x03D34EEC MOVZ W10, 0x80000000
	0x03D34EF0 FCVTZS W13, D0
	0x03D34EF4 FCMP D10, D1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x6B4000
	007 Move X20, 0x431000
	008 Move W8, [X19+2855]
	009 Move X20, [X20+1784]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x3C0000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x3EA000
	018 Move X0, [X0+576]
	019 Call 0x1C17CF4
	020 Move X0, 0x431000
	021 Move X0, [X0+1784]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+2855], W8
	025 Move X0, [X20]
	026 Move X22, 0x3C0000
	027 Move W8, [X0+224]
	028 Move X22, [X22+1432]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X8, [X0+184]
	034 Move W9, [X8+8]
	035 Move X19, [X8+80]
	036 Add W9, W9, 1
	037 Move [X8+8], W9
	038 Move X0, [X22]
	039 Move W9, [X0+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X21, 0x3EA000
	044 Move X21, [X21+576]
	045 Move X0, X19
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Inequality, X0, X1
	049 Move X8, [X20]
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {73}
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {60}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X8, [X20]
	060 Move X0, [X21]
	061 Move X8, [X8+184]
	062 Move W9, [X0+224]
	063 Move X19, [X8+80]
	064 Compare W9, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X19
	068 Move X1, X31
	069 Call UIRUtility.Destroy, X0
	070 Move X8, [X20]
	071 Move X9, [X8+184]
	072 Move [X9+80], X31
	073 Move W9, [X8+224]
	074 Compare W9, 0
	075 JumpIfNotEqual {79}
	076 Move X0, X8
	077 Call 0x1C17DFC
	078 Move X8, [X20]
	079 Move X0, [X22]
	080 Move X8, [X8+184]
	081 Move W9, [X0+224]
	082 Move X19, [X8+88]
	083 Compare W9, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X19
	087 Move X1, X31
	088 Move X2, X31
	089 Call Object.op_Inequality, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {114}
	094 Move X0, [X20]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {100}
	098 Call 0x1C17DFC
	099 Move X0, [X20]
	100 Move X8, [X21]
	101 Move X9, [X0+184]
	102 Move W10, [X8+224]
	103 Move X19, [X9+88]
	104 Compare W10, 0
	105 JumpIfNotEqual {108}
	106 Move X0, X8
	107 Call 0x1C17DFC
	108 Move X0, X19
	109 Move X1, X31
	110 Call UIRUtility.Destroy, X0
	111 Move X8, [X20]
	112 Move X8, [X8+184]
	113 Move [X8+88], X31
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X22, [X31+16]
	117 Move X21, [X31+24]
	118 Move X30, [X31+48]
	119 Return 

Method: System.Void WrapUpGfxDeviceRecreate()

Disassembly:
	0x03D34EF8 FCVTZS W11, D11
	0x03D34EFC MOVZ X9, 0x80000000
	0x03D34F00 UBFM X13, X13, 0x20, 0x1F
	0x03D34F04 CSEL X8, X10, X8, EQ
	0x03D34F08 FCMP D0, D1
	0x03D34F0C UBFM X11, X11, 0x20, 0x1F
	0x03D34F10 CSEL X13, X9, X13, EQ
	0x03D34F14 FCMP D11, D1
	0x03D34F18 FCVTZS W12, D12
	0x03D34F1C ORR X1, X13, X8, 0x0
	0x03D34F20 CSEL X8, X9, X11, EQ
	0x03D34F24 FCMP D12, D1
	0x03D34F28 LDP X20, X19, [X31 + 0x50]
	0x03D34F2C LDP X30, X21, [X31 + 0x40]
	0x03D34F30 LDP D9, D8, [X31 + 0x30]
	0x03D34F34 LDP D11, D10, [X31 + 0x20]
	0x03D34F38 LDP D13, D12, [X31 + 0x10]
	0x03D34F3C CSEL X9, X10, X12, EQ
	0x03D34F40 ORR X0, X8, X9, 0x0
	0x03D34F44 ADD X31, X31, 0x60
	0x03D34F48 RET
	0x03D34F4C STP D15, D14, [X31 - 0x60]!
	0x03D34F50 STP D13, D12, [X31 + 0x10]
	0x03D34F54 STP D11, D10, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6B4000
	005 Move X19, 0x431000
	006 Move W8, [X20+2856]
	007 Move X19, [X19+1784]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x431000
	013 Move X0, [X0+1784]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2856], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, [X8+8]
	027 Subtract W9, W9, 1
	028 Move [X8+8], W9
	029 Move X30, [X31+32]
	030 Return 

Method: System.Void FlushAllPendingDeviceDisposes()

Disassembly:
	0x03D34F58 STP D9, D8, [X31 + 0x30]
	0x03D34F5C STR X30, [X31 + 0x40]
	0x03D34F60 STP X20, X19, [X31 + 0x50]
	0x03D34F64 STP S3, S7, [X31 + 0x48]
	0x03D34F68 ADRP X20, 0x6B3000
	0x03D34F6C ADRP X19, 0x3BF000
	0x03D34F70 LDRB W8, [X20 + 0xB41]
	0x03D34F74 LDR X19, [X19 + 0x5A8]
	0x03D34F78 MOV V12.16B, V6.16B
	0x03D34F7C MOV V9.16B, V5.16B
	0x03D34F80 MOV V13.16B, V4.16B
	0x03D34F84 MOV V14.16B, V2.16B
	0x03D34F88 MOV V11.16B, V1.16B
	0x03D34F8C MOV V15.16B, V0.16B
	0x03D34F90 TBNZ X8, 0x0, 0x3D34FA8
	0x03D34F94 ADRP X0, 0x3BF000
	0x03D34F98 LDR X0, [X0 + 0x5A8]
	0x03D34F9C BL 0x1C16CF4
	0x03D34FA0 MOVZ W8, 0x1
	0x03D34FA4 STRB W8, [X20 + 0xB41]
	0x03D34FA8 LDR X0, [X19]
	0x03D34FAC LDR W8, [X0 + 0xE0]
	0x03D34FB0 CBNZ W8, 0x3D34FB8
	0x03D34FB4 BL 0x1C16DFC
	0x03D34FB8 MOV V0.16B, V15.16B
	0x03D34FBC MOV V1.16B, V13.16B
	0x03D34FC0 MOV X0, X31
	0x03D34FC4 BL 0x337EE18
	0x03D34FC8 MOV V8.16B, V0.16B
	0x03D34FCC MOV V0.16B, V11.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6B4000
	005 Move X19, 0x3E9000
	006 Move W8, [X20+2857]
	007 Move X19, [X19+2080]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x431000
	013 Move X0, [X0+1784]
	014 Call 0x1C17CF4
	015 Move X0, 0x3E9000
	016 Move X0, [X0+2080]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2857], W8
	020 Move X0, [X19]
	021 Move X19, 0x431000
	022 Move W8, [X0+224]
	023 Move X19, [X19+1784]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X31
	028 Call Utility.SyncRenderThread
	029 Move X0, [X19]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Call UIRenderDevice.ProcessDeviceFreeQueue
	038 Return 

Method: UnityEngine.UIElements.UIR.UIRenderDevice/DrawStatistics GatherDrawStatistics()

Disassembly:
	0x03D34FD0 MOV V1.16B, V9.16B
	0x03D34FD4 MOV X0, X31
	0x03D34FD8 BL 0x337EE18
	0x03D34FDC MOV V10.16B, V0.16B
	0x03D34FE0 FADD S0, S14, S15
	0x03D34FE4 FADD S1, S12, S13

ISIL:
	001 Move W9, [X0+136]
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 Move [X8+32], W9
	005 Move [X8], V1
	006 Move [X8+8], V0
	007 Return X0

Method: System.Void ProcessDeviceFreeQueue()

Disassembly:
	0x03D3016C LDR X1, [X23 + 0x50]
	0x03D30170 STR X1, [X20 + 0x40]
	0x03D30174 B 0x3D30280
	0x03D30178 LDR X9, [X11 + 0x20]
	0x03D3017C LDR X10, [X31 + 0x1B0]
	0x03D30180 LDR V0, [X31 + 0x1A]
	0x03D30184 LDR W11, [X31 + 0x198]
	0x03D30188 LDR X9, [X9 + 0xC0]
	0x03D3018C LDUR W12, [X19 + 0xAB]
	0x03D30190 ADD X1, X31, 0x140
	0x03D30194 MOV X0, X27
	0x03D30198 LDR X2, [X9 + 0x70]
	0x03D3019C STP X10, X8, [X31 + 0x150]
	0x03D301A0 MOVZ W8, 0x1
	0x03D301A4 STR V0, [X31 + 0x14]
	0x03D301A8 STRB W8, [X31 + 0x160]
	0x03D301AC STUR W11, [X19 + 0x71]
	0x03D301B0 STR W12, [X31 + 0x164]
	0x03D301B4 BL 0x31614A8
	0x03D301B8 LDR X9, [X23 + 0x40]
	0x03D301BC LDR V0, [X23 + 0x3]
	0x03D301C0 LDR X8, [X23 + 0x50]
	0x03D301C4 STR W31, [X31 + 0x198]
	0x03D301C8 STR X9, [X31 + 0x1B0]
	0x03D301CC STR V0, [X31 + 0x1A]
	0x03D301D0 STUR W31, [X19 + 0xAB]
	0x03D301D4 LDR W10, [X27 + 0x1C]
	0x03D301D8 LDR X9, [X27 + 0x10]
	0x03D301DC LDR X11, [X22]
	0x03D301E0 ADD W10, W10, 0x1
	0x03D301E4 STR W10, [X27 + 0x1C]
	0x03D301E8 CBZ X9, 0x3D3049C
	0x03D301EC LDRSW X10, [X27 + 0x18]
	0x03D301F0 LDR W12, [X9 + 0x18]
	0x03D301F4 LDR W22, [X31 + 0x1C]
	0x03D301F8 CMP W10, W12
	0x03D301FC B.CS 0x3D30238
	0x03D30200 ADD W11, W10, 0x1
	0x03D30204 STR W11, [X27 + 0x18]
	0x03D30208 LDR V0, [X31 + 0x1A]
	0x03D3020C LDR X11, [X31 + 0x1B0]
	0x03D30210 MOVZ W12, 0x28
	0x03D30214 MADD X9, X10, X12, X9
	0x03D30218 STRB W31, [X9 + 0x40]
	0x03D3021C STR V0, [X9 + 0x2]
	0x03D30220 STP X11, X8, [X9 + 0x30]
	0x03D30224 LDUR W8, [X19 + 0xAB]
	0x03D30228 LDR W10, [X31 + 0x198]
	0x03D3022C STR W8, [X9 + 0x44]
	0x03D30230 STUR W10, [X9 + 0x41]
	0x03D30234 B 0x3D30274
	0x03D30238 LDR X9, [X11 + 0x20]
	0x03D3023C LDR V0, [X31 + 0x1A]
	0x03D30240 LDR X10, [X31 + 0x1B0]
	0x03D30244 LDR W11, [X31 + 0x198]
	0x03D30248 LDR X9, [X9 + 0xC0]
	0x03D3024C LDUR W12, [X19 + 0xAB]
	0x03D30250 ADD X1, X31, 0x140
	0x03D30254 MOV X0, X27
	0x03D30258 LDR X2, [X9 + 0x70]
	0x03D3025C STR V0, [X31 + 0x14]
	0x03D30260 STP X10, X8, [X31 + 0x150]
	0x03D30264 STRB W31, [X31 + 0x160]
	0x03D30268 STUR W11, [X19 + 0x71]
	0x03D3026C STR W12, [X31 + 0x164]
	0x03D30270 BL 0x31614A8
	0x03D30274 ADRP X19, 0x434000
	0x03D30278 LDR X1, [X23 + 0x50]
	0x03D3027C LDR X19, [X19 + 0xF08]
	0x03D30280 ADD X27, X23, 0x18
	0x03D30284 ADD X28, X23, 0x30
	0x03D30288 MOVZ W6, 0x1
	0x03D3028C MOV W2, W25
	0x03D30290 MOV W3, W22
	0x03D30294 MOV X4, X27
	0x03D30298 MOV X5, X28
	0x03D3029C BL 0x3D307B0
	0x03D302A0 TBZ X0, 0x0, 0x3D302F0
	0x03D302A4 LDR X8, [X23 + 0x50]
	0x03D302A8 CBZ X8, 0x3D3049C
	0x03D302AC LDR X0, [X8 + 0x18]
	0x03D302B0 CBZ X0, 0x3D3049C
	0x03D302B4 ADRP X8, 0x434000
	0x03D302B8 LDP W1, W2, [X23 + 0x18]
	0x03D302BC LDR X8, [X8 + 0xE90]
	0x03D302C0 LDR X3, [X8]
	0x03D302C4 BL 0x29ACAE4
	0x03D302C8 LDR X8, [X23 + 0x50]
	0x03D302CC CBZ X8, 0x3D3049C
	0x03D302D0 LDR X0, [X8 + 0x20]
	0x03D302D4 CBZ X0, 0x3D3049C
	0x03D302D8 ADRP X8, 0x434000
	0x03D302DC LDP W1, W2, [X23 + 0x30]
	0x03D302E0 LDR X8, [X8 + 0xE98]
	0x03D302E4 LDR X3, [X8]
	0x03D302E8 BL 0x29AC36C
	0x03D302EC B 0x3D30310
	0x03D302F0 MOVZ W6, 0x1
	0x03D302F4 MOV X0, X26
	0x03D302F8 MOV X1, X23
	0x03D302FC MOV W2, W25
	0x03D30300 MOV W3, W22
	0x03D30304 MOV X4, X29
	0x03D30308 MOV X5, X24
	0x03D3030C BL 0x3D2F5D0
	0x03D30310 MOVZ W8, 0xAAAB
	0x03D30314 MOVK W8, 0xAAAA0000
	0x03D30318 UMADDL X8, X22, X8, X31
	0x03D3031C UBFM X8, X8, 0x21, 0x3F
	0x03D30320 STR W8, [X23 + 0x48]
	0x03D30324 LDR V0, [X20]
	0x03D30328 UNIMPLEMENTED
	0x03D3032C STR D0, [X23 + 0x58]
	0x03D30330 LDR X0, [X26 + 0x48]
	0x03D30334 CBZ X0, 0x3D3049C
	0x03D30338 LDR W8, [X26 + 0x60]
	0x03D3033C LDRSW X9, [X0 + 0x18]
	0x03D30340 LDR X2, [X19]
	0x03D30344 SDIV X10, X8, X9
	0x03D30348 MSUB W1, W10, W9, W8
	0x03D3034C BL 0x301BCCC
	0x03D30350 MOV X26, X0
	0x03D30354 ADD X0, X31, 0x30
	0x03D30358 MOVZ W2, 0x50
	0x03D3035C MOV X1, X20
	0x03D30360 BL 0x3EB1AC0
	0x03D30364 CBZ X26, 0x3D3049C
	0x03D30368 ADRP X8, 0x434000
	0x03D3036C LDR X8, [X8 + 0xEE0]
	0x03D30370 ADD X0, X31, 0xF0
	0x03D30374 ADD X1, X31, 0x30
	0x03D30378 MOVZ W2, 0x50
	0x03D3037C LDR X19, [X8]
	0x03D30380 BL 0x3EB1AC0
	0x03D30384 LDR W9, [X26 + 0x1C]
	0x03D30388 LDR X8, [X26 + 0x10]
	0x03D3038C ADD W9, W9, 0x1
	0x03D30390 STR W9, [X26 + 0x1C]
	0x03D30394 CBZ X8, 0x3D3049C
	0x03D30398 LDRSW X9, [X26 + 0x18]
	0x03D3039C LDR W10, [X8 + 0x18]
	0x03D303A0 CMP W9, W10
	0x03D303A4 B.CS 0x3D303CC
	0x03D303A8 MOVZ W11, 0x50
	0x03D303AC MADD X8, X9, X11, X8
	0x03D303B0 ADD W10, W9, 0x1
	0x03D303B4 ADD X0, X8, 0x20
	0x03D303B8 ADD X1, X31, 0xF0
	0x03D303BC MOVZ W2, 0x50
	0x03D303C0 STR W10, [X26 + 0x18]
	0x03D303C4 BL 0x3EB1AC0
	0x03D303C8 B 0x3D303FC
	0x03D303CC LDR X8, [X19 + 0x20]
	0x03D303D0 ADD X0, X31, 0x140
	0x03D303D4 ADD X1, X31, 0xF0
	0x03D303D8 MOVZ W2, 0x50
	0x03D303DC LDR X8, [X8 + 0xC0]
	0x03D303E0 LDR X25, [X8 + 0x70]
	0x03D303E4 BL 0x3EB1AC0
	0x03D303E8 MOV X2, X25
	0x03D303EC LDR W25, [X31 + 0x2C]
	0x03D303F0 ADD X1, X31, 0x140
	0x03D303F4 MOV X0, X26
	0x03D303F8 BL 0x316462C
	0x03D303FC LDR X8, [X23 + 0x50]
	0x03D30400 CBZ X8, 0x3D3049C
	0x03D30404 LDR X8, [X8 + 0x18]
	0x03D30408 CBZ X8, 0x3D3049C
	0x03D3040C ADRP X9, 0x434000
	0x03D30410 LDR X9, [X9 + 0xEA0]
	0x03D30414 LDP X1, X2, [X8 + 0x20]
	0x03D30418 LDR W3, [X23 + 0x18]
	0x03D3041C ADD X0, X31, 0x140
	0x03D30420 LDR X5, [X9]
	0x03D30424 MOV W4, W25
	0x03D30428 STP X31, X31, [X31 + 0x140]
	0x03D3042C BL 0x24087E8
	0x03D30430 LDR V0, [X31 + 0x14]
	0x03D30434 STR V0, [X29]
	0x03D30438 LDR X8, [X23 + 0x50]
	0x03D3043C CBZ X8, 0x3D3049C
	0x03D30440 LDR X8, [X8 + 0x20]
	0x03D30444 CBZ X8, 0x3D3049C
	0x03D30448 ADRP X9, 0x434000
	0x03D3044C LDR X9, [X9 + 0xEA8]
	0x03D30450 LDP X1, X2, [X8 + 0x20]
	0x03D30454 LDR W3, [X28]
	0x03D30458 ADD X0, X31, 0xF0
	0x03D3045C LDR X5, [X9]
	0x03D30460 MOV W4, W22
	0x03D30464 STP X31, X31, [X31 + 0xF0]
	0x03D30468 BL 0x2406E5C
	0x03D3046C LDR V0, [X31 + 0xF]
	0x03D30470 STR V0, [X24]
	0x03D30474 LDR W8, [X27]
	0x03D30478 STRH W8, [X21]
	0x03D3047C ADD X31, X31, 0x1C0
	0x03D30480 LDP X20, X19, [X31 + 0x50]
	0x03D30484 LDP X22, X21, [X31 + 0x40]
	0x03D30488 LDP X24, X23, [X31 + 0x30]
	0x03D3048C LDP X26, X25, [X31 + 0x20]
	0x03D30490 LDP X28, X27, [X31 + 0x10]
	0x03D30494 LDP X29, X30, [X31], #0x60
	0x03D30498 RET
	0x03D3049C BL 0x1C16F20
	0x03D304A0 SUB X31, X31, 0xB0
	0x03D304A4 STR X30, [X31 + 0x60]
	0x03D304A8 STP X26, X25, [X31 + 0x70]
	0x03D304AC STP X24, X23, [X31 + 0x80]
	0x03D304B0 STP X22, X21, [X31 + 0x90]
	0x03D304B4 STP X20, X19, [X31 + 0xA0]
	0x03D304B8 ADRP X26, 0x6B7000
	0x03D304BC LDRB W8, [X26 + 0xB19]
	0x03D304C0 MOV X19, X6
	0x03D304C4 MOV X21, X5
	0x03D304C8 MOV X24, X4
	0x03D304CC MOV W23, W3
	0x03D304D0 MOV W25, W2
	0x03D304D4 MOV X20, X1
	0x03D304D8 MOV X22, X0
	0x03D304DC TBNZ X8, 0x0, 0x3D3050C
	0x03D304E0 ADRP X0, 0x3C3000
	0x03D304E4 LDR X0, [X0 + 0xA28]
	0x03D304E8 BL 0x1C16CF4
	0x03D304EC ADRP X0, 0x434000
	0x03D304F0 LDR X0, [X0 + 0xF20]
	0x03D304F4 BL 0x1C16CF4
	0x03D304F8 ADRP X0, 0x434000
	0x03D304FC LDR X0, [X0 + 0xED0]
	0x03D30500 BL 0x1C16CF4
	0x03D30504 MOVZ W8, 0x1
	0x03D30508 STRB W8, [X26 + 0xB19]
	0x03D3050C MOVI V0.2D, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x6B8000
	008 Move X20, 0x435000
	009 Move W8, [X19+2858]
	010 Move X20, [X20+1784]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {44}
	015 Move X0, 0x3C4000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x435000
	019 Move X0, [X0+3688]
	020 Call 0x1C17CF4
	021 Move X0, 0x435000
	022 Move X0, [X0+3696]
	023 Call 0x1C17CF4
	024 Move X0, 0x435000
	025 Move X0, [X0+3704]
	026 Call 0x1C17CF4
	027 Move X0, 0x435000
	028 Move X0, [X0+3712]
	029 Call 0x1C17CF4
	030 Move X0, 0x3C4000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move X0, 0x3EE000
	034 Move X0, [X0+576]
	035 Call 0x1C17CF4
	036 Move X0, 0x435000
	037 Move X0, [X0+1784]
	038 Call 0x1C17CF4
	039 Move X0, 0x3ED000
	040 Move X0, [X0+2080]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X19+2858], W8
	044 Move X0, [X20]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X20]
	050 Move X8, [X0+184]
	051 Move X21, 0x3ED000
	052 Move W8, [X8+13]
	053 Move X21, [X21+2080]
	054 Compare W8, 0
	055 JumpIfEqual {64}
	056 Move X0, [X21]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X31
	062 Call Utility.SyncRenderThread
	063 Move X0, [X20]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X20]
	069 Move X8, [X0+184]
	070 Move X8, [X8]
	071 Compare X8, 0
	072 JumpIfEqual {281}
	073 Move X23, [X8+16]
	074 Compare X23, 0
	075 JumpIfEqual {120}
	076 Move X22, 0x435000
	077 Move X22, [X22+3696]
	078 Move X0, [X21]
	079 Move W19, [X23+40]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move W0, W19
	085 Move X1, X31
	086 Call Utility.CPUFencePassed, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {119}
	091 Move X0, [X23+48]
	092 Compare X0, 0
	093 JumpIfEqual {99}
	094 Move X19, [X0+40]
	095 Call Page.Dispose, X0
	096 Move X0, X19
	097 Compare X19, 0
	098 JumpIfNotEqual {94}
	099 Move X0, [X20]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X20]
	105 Move X8, [X0+184]
	106 Move X0, [X8]
	107 Compare X0, 0
	108 JumpIfEqual {281}
	109 Move X1, [X22]
	110 Call LinkedList`1<DeviceToFree>.RemoveFirst, X0
	111 Move X0, [X20]
	112 Move X8, [X0+184]
	113 Move X8, [X8]
	114 Compare X8, 0
	115 JumpIfEqual {281}
	116 Move X23, [X8+16]
	117 Compare X23, 0
	118 JumpIfNotEqual {78}
	119 Move X0, [X20]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {125}
	123 Call 0x1C17DFC
	124 Move X0, [X20]
	125 Move X8, [X0+184]
	126 Move W8, [X8+13]
	127 Compare W8, 0
	128 JumpIfEqual {141}
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {134}
	132 Call 0x1C17DFC
	133 Move X0, [X20]
	134 Move X8, [X0+184]
	135 Move X8, [X8]
	136 Compare X8, 0
	137 JumpIfEqual {281}
	138 Move W8, [X8+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 NotImplemented "Instruction CSET not yet implemented."
	141 Move W19, 1
	142 Move X8, 0x3C4000
	143 Move X8, [X8+2600]
	144 Move X0, [X8]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move W0, W19
	150 Move X1, X31
	151 Call Debug.Assert, X0
	152 Move X0, [X20]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {158}
	156 Call 0x1C17DFC
	157 Move X0, [X20]
	158 Move X8, [X0+184]
	159 Move W9, [X8+8]
	160 Compare W9, 0
	161 JumpIfNotEqual {274}
	162 Move W9, [X0+224]
	163 Compare W9, 0
	164 JumpIfNotEqual {168}
	165 Call 0x1C17DFC
	166 Move X0, [X20]
	167 Move X8, [X0+184]
	168 Move W9, [X8+12]
	169 Compare W9, 0
	170 JumpIfEqual {274}
	171 Move W9, [X0+224]
	172 Compare W9, 0
	173 JumpIfNotEqual {177}
	174 Call 0x1C17DFC
	175 Move X8, [X20]
	176 Move X8, [X8+184]
	177 Move X22, 0x3C4000
	178 Move X22, [X22+1432]
	179 Move X19, [X8+80]
	180 Move X0, [X22]
	181 Move W9, [X0+224]
	182 Compare W9, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X0, X19
	186 Move X1, X31
	187 Move X2, X31
	188 Call Object.op_Inequality, X0, X1
	189 Move X8, [X20]
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {215}
	194 Move W9, [X8+224]
	195 Compare W9, 0
	196 JumpIfNotEqual {200}
	197 Move X0, X8
	198 Call 0x1C17DFC
	199 Move X8, [X20]
	200 Move X9, 0x3EE000
	201 Move X9, [X9+576]
	202 Move X8, [X8+184]
	203 Move X0, [X9]
	204 Move X19, [X8+80]
	205 Move W9, [X0+224]
	206 Compare W9, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Move X0, X19
	210 Move X1, X31
	211 Call UIRUtility.Destroy, X0
	212 Move X8, [X20]
	213 Move X9, [X8+184]
	214 Move [X9+80], X31
	215 Move W9, [X8+224]
	216 Compare W9, 0
	217 JumpIfNotEqual {221}
	218 Move X0, X8
	219 Call 0x1C17DFC
	220 Move X8, [X20]
	221 Move X0, [X22]
	222 Move X8, [X8+184]
	223 Move W9, [X0+224]
	224 Move X19, [X8+88]
	225 Compare W9, 0
	226 JumpIfNotEqual {228}
	227 Call 0x1C17DFC
	228 Move X0, X19
	229 Move X1, X31
	230 Move X2, X31
	231 Call Object.op_Inequality, X0, X1
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {258}
	236 Move X0, [X20]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {242}
	240 Call 0x1C17DFC
	241 Move X0, [X20]
	242 Move X8, 0x3EE000
	243 Move X8, [X8+576]
	244 Move X9, [X0+184]
	245 Move X8, [X8]
	246 Move X19, [X9+88]
	247 Move W10, [X8+224]
	248 Compare W10, 0
	249 JumpIfNotEqual {252}
	250 Move X0, X8
	251 Call 0x1C17DFC
	252 Move X0, X19
	253 Move X1, X31
	254 Call UIRUtility.Destroy, X0
	255 Move X8, [X20]
	256 Move X8, [X8+184]
	257 Move [X8+88], X31
	258 Move X0, [X21]
	259 Move W8, [X0+224]
	260 Compare W8, 0
	261 JumpIfNotEqual {263}
	262 Call 0x1C17DFC
	263 Move W0, W31
	264 Move X1, X31
	265 Call Utility.NotifyOfUIREvents, X0
	266 Move X0, [X20]
	267 Move W8, [X0+224]
	268 Compare W8, 0
	269 JumpIfNotEqual {272}
	270 Call 0x1C17DFC
	271 Move X0, [X20]
	272 Move X8, [X0+184]
	273 Move [X8+12], W31
	274 Move X20, [X31+32]
	275 Move X19, [X31+40]
	276 Move X22, [X31+16]
	277 Move X21, [X31+24]
	278 Move X30, [X31+48]
	279 Move X23, [X31+56]
	280 Return 
	281 Call 0x1C17F20

Method: System.Void OnEngineUpdateGlobal()

Disassembly:
	0x03D34FE8 MOV X0, X31
	0x03D34FEC BL 0x337EEBC
	0x03D34FF0 MOV V1.16B, V0.16B
	0x03D34FF4 MOV V0.16B, V8.16B
	0x03D34FF8 MOV X0, X31
	0x03D34FFC BL 0x337EE18
	0x03D35000 FSUB S12, S0, S8
	0x03D35004 LDP S0, S1, [X31 + 0x48]
	0x03D35008 MOV X0, X31
	0x03D3500C FADD S0, S0, S11
	0x03D35010 FADD S1, S1, S9
	0x03D35014 BL 0x337EEBC
	0x03D35018 MOV V1.16B, V0.16B
	0x03D3501C MOV V0.16B, V10.16B
	0x03D35020 MOV X0, X31
	0x03D35024 BL 0x337EE18
	0x03D35028 FSUB S3, S0, S10
	0x03D3502C MOV V0.16B, V8.16B
	0x03D35030 MOV V1.16B, V10.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x6B4000
	005 Move X20, 0x431000
	006 Move W8, [X19+2859]
	007 Move X20, [X20+1784]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x430000
	013 Move X0, [X0+1784]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2859], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Call UIRenderDevice.ProcessDeviceFreeQueue
	026 Return 

Method: System.Void OnFlushPendingResources()

Disassembly:
	0x03D35034 MOV V2.16B, V12.16B
	0x03D35038 LDP X20, X19, [X31 + 0x50]
	0x03D3503C LDR X30, [X31 + 0x40]
	0x03D35040 LDP D9, D8, [X31 + 0x30]
	0x03D35044 LDP D11, D10, [X31 + 0x20]
	0x03D35048 LDP D13, D12, [X31 + 0x10]
	0x03D3504C LDP D15, D14, [X31], #0x60
	0x03D35050 RET
	0x03D35054 STR D8, [X31 - 0x40]!
	0x03D35058 STP X30, X23, [X31 + 0x10]
	0x03D3505C STP X22, X21, [X31 + 0x20]
	0x03D35060 STP X20, X19, [X31 + 0x30]
	0x03D35064 ADRP X23, 0x6B2000
	0x03D35068 ADRP X22, 0x42F000
	0x03D3506C LDRB W8, [X23 + 0xB40]
	0x03D35070 LDR X22, [X22 + 0x9B8]
	0x03D35074 MOV V8.16B, V0.16B
	0x03D35078 MOV X21, X2
	0x03D3507C MOV X20, X1
	0x03D35080 MOV X19, X0
	0x03D35084 TBNZ X8, 0x0, 0x3D3509C
	0x03D35088 ADRP X0, 0x42F000
	0x03D3508C LDR X0, [X0 + 0x9B8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6B3000
	005 Move X19, 0x430000
	006 Move W8, [X20+2860]
	007 Move X19, [X19+1784]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x430000
	013 Move X0, [X0+1784]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2860], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, 1
	027 Move [X8+13], W9
	028 Move X30, [X31+32]
	029 Call UIRenderDevice.ProcessDeviceFreeQueue
	030 Return 

