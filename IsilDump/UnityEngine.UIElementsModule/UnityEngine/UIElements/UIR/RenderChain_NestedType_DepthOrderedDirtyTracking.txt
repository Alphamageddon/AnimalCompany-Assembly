Type: UnityEngine.UIElements.UIR.RenderChain/DepthOrderedDirtyTracking

Method: System.Void EnsureFits(System.Int32 maxDepth)

Disassembly:
	0x03D2771C LDP X20, X19, [X31 + 0x10]
	0x03D27720 MOV X2, X31
	0x03D27724 LDR X3, [X8]
	0x03D27728 LDP X30, X21, [X31], #0x20
	0x03D2772C B 0x301BD20
	0x03D27730 BL 0x1C16F20
	0x03D27734 STP X30, X21, [X31 - 0x20]!
	0x03D27738 STP X20, X19, [X31 + 0x10]
	0x03D2773C ADRP X21, 0x6C0000
	0x03D27740 ADRP X20, 0x43D000
	0x03D27744 LDRB W8, [X21 + 0xAB8]
	0x03D27748 LDR X20, [X20 + 0x730]
	0x03D2774C MOV W19, W0
	0x03D27750 TBNZ X8, 0x0, 0x3D27774
	0x03D27754 ADRP X0, 0x43D000
	0x03D27758 LDR X0, [X0 + 0x9A0]
	0x03D2775C BL 0x1C16CF4
	0x03D27760 ADRP X0, 0x43D000
	0x03D27764 LDR X0, [X0 + 0x730]
	0x03D27768 BL 0x1C16CF4
	0x03D2776C MOVZ W8, 0x1
	0x03D27770 STRB W8, [X21 + 0xAB8]
	0x03D27774 LDR X0, [X20]
	0x03D27778 LDR W8, [X0 + 0xE0]
	0x03D2777C CBNZ W8, 0x3D27788
	0x03D27780 BL 0x1C16DFC
	0x03D27784 LDR X0, [X20]
	0x03D27788 LDR X8, [X0 + 0xB8]
	0x03D2778C LDR X0, [X8]
	0x03D27790 CBZ X0, 0x3D277B0
	0x03D27794 ADRP X8, 0x43D000
	0x03D27798 LDR X8, [X8 + 0x9A0]
	0x03D2779C MOV W1, W19
	0x03D277A0 LDP X20, X19, [X31 + 0x10]
	0x03D277A4 LDR X2, [X8]
	0x03D277A8 LDP X30, X21, [X31], #0x20
	0x03D277AC B 0x301BCCC
	0x03D277B0 BL 0x1C16F20
	0x03D277B4 STR X30, [X31 - 0x30]!
	0x03D277B8 STP X22, X21, [X31 + 0x10]
	0x03D277BC STP X20, X19, [X31 + 0x20]
	0x03D277C0 ADRP X21, 0x6C0000
	0x03D277C4 ADRP X22, 0x43D000
	0x03D277C8 ADRP X19, 0x43D000
	0x03D277CC ADRP X20, 0x43D000
	0x03D277D0 LDRB W8, [X21 + 0xAB9]
	0x03D277D4 LDR X22, [X22 + 0x9A8]
	0x03D277D8 LDR X19, [X19 + 0x9B0]
	0x03D277DC LDR X20, [X20 + 0x730]
	0x03D277E0 TBNZ X8, 0x0, 0x3D27810
	0x03D277E4 ADRP X0, 0x43D000
	0x03D277E8 LDR X0, [X0 + 0x9B0]
	0x03D277EC BL 0x1C16CF4
	0x03D277F0 ADRP X0, 0x43D000
	0x03D277F4 LDR X0, [X0 + 0x9A8]
	0x03D277F8 BL 0x1C16CF4
	0x03D277FC ADRP X0, 0x43D000
	0x03D27800 LDR X0, [X0 + 0x730]
	0x03D27804 BL 0x1C16CF4
	0x03D27808 MOVZ W8, 0x1
	0x03D2780C STRB W8, [X21 + 0xAB9]
	0x03D27810 LDR X0, [X22]
	0x03D27814 BL 0x1C16F10
	0x03D27818 LDR X2, [X19]
	0x03D2781C MOVZ W1, 0x4
	0x03D27820 MOV X19, X0
	0x03D27824 BL 0x301B830
	0x03D27828 LDR X8, [X20]
	0x03D2782C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6C1000
	006 Move W8, [X21+2732]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x3F6000
	014 Move X0, [X0+224]
	015 Call 0x1C17CF4
	016 Move X0, 0x3F6000
	017 Move X0, [X0+232]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2732], W8
	021 Move X0, [X20]
	022 Compare X0, 0
	023 JumpIfEqual {71}
	024 Move X21, 0x3F6000
	025 Move X21, [X21+224]
	026 NotImplemented "Instruction LDRSW not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W11, [X0+28]
	029 Move X9, [X0+16]
	030 Move X10, [X21]
	031 Add W11, W11, 1
	032 Move [X0+28], W11
	033 Compare X9, 0
	034 JumpIfEqual {71}
	035 Move W11, [X9+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add W10, W8, 1
	038 Add X8, X9, X8
	039 Move [X0+24], W10
	040 Move [X8+32], X31
	041 Move X8, [X10+32]
	042 Move X1, X31
	043 Move X8, [X8+192]
	044 Move X2, [X8+112]
	045 Call List`1<Object>.AddWithResize, X0, X1
	046 Move X0, [X20+8]
	047 Compare X0, 0
	048 JumpIfEqual {71}
	049 Move W10, [X0+28]
	050 Move X8, [X0+16]
	051 Move X9, [X21]
	052 Add W10, W10, 1
	053 Move [X0+28], W10
	054 Compare X8, 0
	055 JumpIfEqual {71}
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Move W11, [X8+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add W9, W10, 1
	060 Add X8, X8, X10
	061 Move [X0+24], W9
	062 Move [X8+32], X31
	063 Move X8, [X9+32]
	064 Move X1, X31
	065 Move X8, [X8+192]
	066 Move X2, [X8+112]
	067 Call List`1<Object>.AddWithResize, X0, X1
	068 Move X0, [X20]
	069 Compare X0, 0
	070 JumpIfNotEqual {26}
	071 Call 0x1C17F20
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Return 

Method: System.Void RegisterDirty(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.UIR.RenderDataDirtyTypes dirtyTypes, UnityEngine.UIElements.UIR.RenderDataDirtyTypeClasses dirtyTypeClass)

Disassembly:
	0x03D270CC ADD X19, X31, 0x0
	0x03D270D0 ADRP X25, 0x6C0000
	0x03D270D4 LDRB W8, [X25 + 0xAA7]
	0x03D270D8 MOV W20, W4
	0x03D270DC MOV X21, X3
	0x03D270E0 MOV X22, X2
	0x03D270E4 MOV X24, X1
	0x03D270E8 MOV X23, X0
	0x03D270EC TBNZ X8, 0x0, 0x3D27140
	0x03D270F0 ADRP X0, 0x43D000
	0x03D270F4 LDR X0, [X0 + 0x710]
	0x03D270F8 BL 0x1C16CF4
	0x03D270FC ADRP X0, 0x43D000
	0x03D27100 LDR X0, [X0 + 0x720]
	0x03D27104 BL 0x1C16CF4
	0x03D27108 ADRP X0, 0x43D000
	0x03D2710C LDR X0, [X0 + 0x798]
	0x03D27110 BL 0x1C16CF4
	0x03D27114 ADRP X0, 0x43D000
	0x03D27118 LDR X0, [X0 + 0x968]
	0x03D2711C BL 0x1C16CF4
	0x03D27120 ADRP X0, 0x429000
	0x03D27124 LDR X0, [X0 + 0x590]
	0x03D27128 BL 0x1C16CF4
	0x03D2712C ADRP X0, 0x3F5000
	0x03D27130 LDR X0, [X0 + 0x820]
	0x03D27134 BL 0x1C16CF4
	0x03D27138 MOVZ W8, 0x1
	0x03D2713C STRB W8, [X25 + 0xAA7]
	0x03D27140 CBZ X24, 0x3D273D8
	0x03D27144 LDR W25, [X24 + 0x80]
	0x03D27148 LDR X0, [X24 + 0x50]
	0x03D2714C ADD W8, W25, 0x1
	0x03D27150 STR W8, [X24 + 0x80]
	0x03D27154 CBZ X0, 0x3D273D8
	0x03D27158 LDR W8, [X0 + 0x18]
	0x03D2715C CMP W25, W8
	0x03D27160 B.GE 0x3D271D0
	0x03D27164 ADRP X8, 0x43D000
	0x03D27168 LDR X8, [X8 + 0x798]
	0x03D2716C MOV W1, W25
	0x03D27170 LDR X2, [X8]
	0x03D27174 SUB X8, X29, 0x70
	0x03D27178 BL 0x3136F34
	0x03D2717C LDUR X8, [X29 - 0x60]
	0x03D27180 ADD X0, X19, 0xC0
	0x03D27184 MOVZ W2, 0x60
	0x03D27188 MOV X1, X22
	0x03D2718C STR X8, [X22 + 0x10]
	0x03D27190 LDR X26, [X24 + 0x50]
	0x03D27194 BL 0x3EB1AC0
	0x03D27198 CBZ X26, 0x3D273D8
	0x03D2719C ADRP X8, 0x43D000
	0x03D271A0 LDR X8, [X8 + 0x968]
	0x03D271A4 SUB X0, X29, 0x70
	0x03D271A8 ADD X1, X19, 0xC0
	0x03D271AC MOVZ W2, 0x60
	0x03D271B0 LDR X27, [X8]
	0x03D271B4 BL 0x3EB1AC0
	0x03D271B8 SUB X2, X29, 0x70
	0x03D271BC MOV X0, X26
	0x03D271C0 MOV W1, W25
	0x03D271C4 MOV X3, X27
	0x03D271C8 BL 0x3136F98
	0x03D271CC B 0x3D2729C
	0x03D271D0 ADRP X8, 0x429000
	0x03D271D4 LDR X8, [X8 + 0x590]
	0x03D271D8 LDR X0, [X8]
	0x03D271DC BL 0x1C16F10
	0x03D271E0 MOV X1, X31
	0x03D271E4 MOV X25, X0
	0x03D271E8 BL 0x3C122EC
	0x03D271EC STR X25, [X22 + 0x10]
	0x03D271F0 LDR X26, [X24 + 0x50]
	0x03D271F4 CBZ X26, 0x3D273D8
	0x03D271F8 LDR W25, [X26 + 0x18]
	0x03D271FC ADD X0, X19, 0x60
	0x03D27200 MOVZ W2, 0x60
	0x03D27204 MOV X1, X22
	0x03D27208 BL 0x3EB1AC0
	0x03D2720C ADRP X8, 0x43D000
	0x03D27210 LDR X8, [X8 + 0x710]
	0x03D27214 ADD X0, X19, 0xC0
	0x03D27218 ADD X1, X19, 0x60
	0x03D2721C MOVZ W2, 0x60
	0x03D27220 LDR X27, [X8]
	0x03D27224 BL 0x3EB1AC0
	0x03D27228 LDR W9, [X26 + 0x1C]
	0x03D2722C LDR X8, [X26 + 0x10]
	0x03D27230 ADD W9, W9, 0x1
	0x03D27234 STR W9, [X26 + 0x1C]
	0x03D27238 CBZ X8, 0x3D273D8
	0x03D2723C LDR W9, [X8 + 0x18]
	0x03D27240 CMP W25, W9
	0x03D27244 B.CS 0x3D27270
	0x03D27248 SXTW X9, W25
	0x03D2724C MOVZ W11, 0x60
	0x03D27250 MADD X8, X9, X11, X8
	0x03D27254 ADD W10, W25, 0x1
	0x03D27258 ADD X0, X8, 0x20
	0x03D2725C ADD X1, X19, 0xC0
	0x03D27260 MOVZ W2, 0x60
	0x03D27264 STR W10, [X26 + 0x18]
	0x03D27268 BL 0x3EB1AC0
	0x03D2726C B 0x3D2729C
	0x03D27270 LDR X8, [X27 + 0x20]
	0x03D27274 SUB X0, X29, 0x70
	0x03D27278 ADD X1, X19, 0xC0
	0x03D2727C MOVZ W2, 0x60
	0x03D27280 LDR X8, [X8 + 0xC0]
	0x03D27284 LDR X27, [X8 + 0x70]
	0x03D27288 BL 0x3EB1AC0
	0x03D2728C SUB X1, X29, 0x70

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6C1000
	009 Move X24, 0x3CD000
	010 Move W8, [X21+2733]
	011 Move X24, [X24+2600]
	012 Move W23, W3
	013 Move W22, W2
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x3CD000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x3F6000
	024 Move X0, [X0+240]
	025 Call 0x1C17CF4
	026 Move X0, 0x43E000
	027 Move X0, [X0+1936]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2733], W8
	031 Move X0, [X24]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Move X1, X31
	039 Call Debug.Assert, X0
	040 Compare X19, 0
	041 JumpIfEqual {135}
	042 Move X9, [X20+16]
	043 Compare X9, 0
	044 JumpIfEqual {135}
	045 Move W8, [X9+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, W23
	048 Add X9, X9, X8
	049 Move W21, [X19+188]
	050 Move W10, [X9+32]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 Move [X9+32], W10
	054 Move X9, [X20+24]
	055 Compare X9, 0
	056 JumpIfEqual {135}
	057 Move W10, [X9+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X8, X9, X8
	060 Move W9, [X8+32]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSEL not yet implemented."
	063 Move [X8+32], W9
	064 Move W8, [X19+192]
	065 Compare W8, 0
	066 JumpIfEqual {77}
	067 Or W8, W8, W22
	068 Move [X19+192], W8
	069 Move X20, [X31+48]
	070 Move X19, [X31+56]
	071 Move X22, [X31+32]
	072 Move X21, [X31+40]
	073 Move X24, [X31+16]
	074 Move X23, [X31+24]
	075 Move X30, [X31+64]
	076 Return 
	077 Move [X19+192], W22
	078 Move X0, [X20+8]
	079 Compare X0, 0
	080 JumpIfEqual {135}
	081 Move X22, 0x3F6000
	082 Move X22, [X22+240]
	083 Move W1, W21
	084 Move X2, [X22]
	085 Call List`1<Object>.get_Item, X0, X1
	086 Compare X0, 0
	087 JumpIfEqual {110}
	088 Move X0, [X20+8]
	089 Compare X0, 0
	090 JumpIfEqual {135}
	091 Move X2, [X22]
	092 Move W1, W21
	093 Call List`1<Object>.get_Item, X0, X1
	094 Compare X0, 0
	095 JumpIfEqual {135}
	096 Move [X0+176], X19
	097 Move X0, [X20+8]
	098 Compare X0, 0
	099 JumpIfEqual {135}
	100 Move X2, [X22]
	101 Move W1, W21
	102 Call List`1<Object>.get_Item, X0, X1
	103 Move [X19+168], X0
	104 Move X0, [X20+8]
	105 Compare X0, 0
	106 JumpIfEqual {135}
	107 Move X8, 0x43E000
	108 Move X8, [X8+1936]
	109 Move X3, [X8]
	110 Move X0, [X20+8]
	111 Compare X0, 0
	112 JumpIfEqual {135}
	113 Move X22, 0x43E000
	114 Move X20, [X20]
	115 Move X22, [X22+1936]
	116 Move W1, W21
	117 Move X2, X19
	118 Move X3, [X22]
	119 Call List`1<Object>.set_Item, X0, X1, X2
	120 Compare X20, 0
	121 JumpIfEqual {135}
	122 Move X3, [X22]
	123 Move X0, X20
	124 Move W1, W21
	125 Move X2, X19
	126 Move X20, [X31+48]
	127 Move X19, [X31+56]
	128 Move X22, [X31+32]
	129 Move X21, [X31+40]
	130 Move X24, [X31+16]
	131 Move X23, [X31+24]
	132 Move X30, [X31+64]
	133 Call List`1<Object>.set_Item, X0, X1, X2
	134 Return 
	135 Call 0x1C17F20
	136 Call 0x1C17F28

Method: System.Void ClearDirty(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.UIR.RenderDataDirtyTypes dirtyTypesInverse)

Disassembly:
	0x03D259B4 MOV X1, X31
	0x03D259B8 BL 0x3C677DC
	0x03D259BC LDP X20, X19, [X31 + 0xC0]
	0x03D259C0 LDP X22, X21, [X31 + 0xB0]
	0x03D259C4 LDP X24, X23, [X31 + 0xA0]
	0x03D259C8 LDP X26, X25, [X31 + 0x90]
	0x03D259CC LDP X28, X27, [X31 + 0x80]
	0x03D259D0 LDP X29, X30, [X31 + 0x70]
	0x03D259D4 LDP D9, D8, [X31 + 0x60]
	0x03D259D8 ADD X31, X31, 0xD0
	0x03D259DC RET
	0x03D259E0 BL 0x1C16F20
	0x03D259E4 SUB X31, X31, 0x40
	0x03D259E8 STP X30, X23, [X31 + 0x10]
	0x03D259EC STP X22, X21, [X31 + 0x20]
	0x03D259F0 STP X20, X19, [X31 + 0x30]
	0x03D259F4 ADRP X21, 0x6C2000
	0x03D259F8 LDRB W8, [X21 + 0xA99]
	0x03D259FC MOV X20, X1
	0x03D25A00 MOV X19, X0
	0x03D25A04 TBNZ X8, 0x0, 0x3D25A28
	0x03D25A08 ADRP X0, 0x3CE000
	0x03D25A0C LDR X0, [X0 + 0xA28]
	0x03D25A10 BL 0x1C16CF4
	0x03D25A14 ADRP X0, 0x43F000
	0x03D25A18 LDR X0, [X0 + 0x778]
	0x03D25A1C BL 0x1C16CF4
	0x03D25A20 MOVZ W8, 0x1
	0x03D25A24 STRB W8, [X21 + 0xA99]
	0x03D25A28 CBZ X20, 0x3D25B5C
	0x03D25A2C LDR X8, [X20 + 0x378]
	0x03D25A30 ADD X0, X31, 0x8
	0x03D25A34 MOV X1, X31
	0x03D25A38 STR X8, [X31 + 0x8]
	0x03D25A3C BL 0x3DF88DC
	0x03D25A40 MOV X21, X0
	0x03D25A44 CBZ X0, 0x3D25A78
	0x03D25A48 LDR X8, [X21 + 0x378]
	0x03D25A4C ADD X0, X31, 0x8
	0x03D25A50 MOV X1, X20
	0x03D25A54 MOV X2, X31
	0x03D25A58 STR X8, [X31 + 0x8]
	0x03D25A5C BL 0x3DF9944
	0x03D25A60 LDRB W8, [X19 + 0x78]
	0x03D25A64 CBNZ W8, 0x3D25B60
	0x03D25A68 LDRB W8, [X21 + 0xE8]
	0x03D25A6C MOV W22, W0
	0x03D25A70 CBNZ W8, 0x3D25A84
	0x03D25A74 B 0x3D25B48
	0x03D25A78 LDRB W8, [X19 + 0x78]
	0x03D25A7C CBNZ W8, 0x3D25B60
	0x03D25A80 MOV W22, W31
	0x03D25A84 ADRP X8, 0x43F000
	0x03D25A88 LDR X8, [X8 + 0x778]
	0x03D25A8C ADRP X23, 0x3CE000
	0x03D25A90 LDR X0, [X8]
	0x03D25A94 LDR W8, [X0 + 0xE0]
	0x03D25A98 LDR X23, [X23 + 0xA28]
	0x03D25A9C CBNZ W8, 0x3D25AA4
	0x03D25AA0 BL 0x1C16DFC
	0x03D25AA4 MOVZ W4, 0x1
	0x03D25AA8 MOV X0, X19
	0x03D25AAC MOV X1, X21
	0x03D25AB0 MOV X2, X20
	0x03D25AB4 MOV W3, W22
	0x03D25AB8 MOV X5, X31
	0x03D25ABC BL 0x3D3A160
	0x03D25AC0 LDR X8, [X23]
	0x03D25AC4 LDRB W22, [X20 + 0xE8]
	0x03D25AC8 MOV W21, W0
	0x03D25ACC LDR W9, [X8 + 0xE0]
	0x03D25AD0 CBNZ W9, 0x3D25ADC
	0x03D25AD4 MOV X0, X8
	0x03D25AD8 BL 0x1C16DFC
	0x03D25ADC CMP W22, 0x0
	0x03D25AE0 CSET W0, NE
	0x03D25AE4 MOV X1, X31
	0x03D25AE8 BL 0x3C06E58
	0x03D25AEC MOV X0, X20
	0x03D25AF0 MOV X1, X31
	0x03D25AF4 BL 0x3DEC0CC
	0x03D25AF8 LDR X8, [X19 + 0x108]
	0x03D25AFC MOV X1, X31
	0x03D25B00 CMP X0, X8
	0x03D25B04 CSET W0, EQ
	0x03D25B08 BL 0x3C06E58
	0x03D25B0C MOVZ W2, 0x1
	0x03D25B10 MOV X0, X19
	0x03D25B14 MOV X1, X20
	0x03D25B18 BL 0x3D25BA8
	0x03D25B1C MOV X0, X19
	0x03D25B20 MOV X1, X20
	0x03D25B24 MOV W2, W31
	0x03D25B28 BL 0x3D25C34
	0x03D25B2C MOVZ W2, 0x1
	0x03D25B30 MOV X0, X19
	0x03D25B34 MOV X1, X20
	0x03D25B38 BL 0x3D25CC0
	0x03D25B3C LDR W8, [X19 + 0xE8]
	0x03D25B40 ADD W8, W8, W21
	0x03D25B44 STR W8, [X19 + 0xE8]
	0x03D25B48 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x6C3000
	009 Move W8, [X22+2734]
	010 Move W21, W2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x3CF000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x3F8000
	021 Move X0, [X0+240]
	022 Call 0x1C17CF4
	023 Move X0, 0x440000
	024 Move X0, [X0+1936]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2734], W8
	028 Compare X19, 0
	029 JumpIfEqual {120}
	030 Move X22, 0x3CF000
	031 Move X22, [X22+2600]
	032 Move W23, [X19+192]
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X1, X31
	041 Call Debug.Assert, X0
	042 Move W8, [X19+192]
	043 And W8, W8, W21
	044 Move [X19+192], W8
	045 Move X21, X19
	046 Add X21, X21, 168
	047 Move X8, [X21]
	048 Compare X8, 0
	049 JumpIfEqual {52}
	050 Move X9, [X19+176]
	051 Move [X8+176], X9
	052 Move X9, [X19+176]
	053 Compare X9, 0
	054 JumpIfEqual {56}
	055 Move [X9+168], X8
	056 Move X0, [X20+8]
	057 Compare X0, 0
	058 JumpIfEqual {120}
	059 Move X23, 0x3F8000
	060 Move W1, [X19+188]
	061 Move X23, [X23+240]
	062 Move X2, [X23]
	063 Call List`1<Object>.get_Item, X0, X1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, [X22]
	066 Move X24, [X19+176]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CSET not yet implemented."
	073 Move X1, X31
	074 Call Debug.Assert, X0
	075 Move X0, [X20+8]
	076 Compare X0, 0
	077 JumpIfEqual {120}
	078 Move X8, 0x440000
	079 Move X2, [X19+168]
	080 Move W1, [X19+188]
	081 Move X8, [X8+1936]
	082 Move X3, [X8]
	083 Call List`1<Object>.set_Item, X0, X1, X2
	084 Move X0, [X20]
	085 Compare X0, 0
	086 JumpIfEqual {120}
	087 Move W1, [X19+188]
	088 Move X2, [X23]
	089 Call List`1<Object>.get_Item, X0, X1
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X0, [X22]
	092 Move X22, [X21]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CSET not yet implemented."
	099 Move X1, X31
	100 Call Debug.Assert, X0
	101 Move X0, [X20]
	102 Compare X0, 0
	103 JumpIfEqual {120}
	104 Move X8, 0x440000
	105 Move X2, [X19+176]
	106 Move W1, [X19+188]
	107 Move X8, [X8+1936]
	108 Move X3, [X8]
	109 Call List`1<Object>.set_Item, X0, X1, X2
	110 Move [X21], X31
	111 Move [X21+8], X31
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X24, [X31+16]
	117 Move X23, [X31+24]
	118 Move X30, [X31+64]
	119 Return 
	120 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x03D24E88 LDR X21, [X21 + 0x598]
	0x03D24E8C MOV X19, X0
	0x03D24E90 TBNZ X8, 0x0, 0x3D24EB4
	0x03D24E94 ADRP X0, 0x3D3000
	0x03D24E98 LDR X0, [X0 + 0xCA0]
	0x03D24E9C BL 0x1C16CF4
	0x03D24EA0 ADRP X0, 0x3CF000
	0x03D24EA4 LDR X0, [X0 + 0x598]
	0x03D24EA8 BL 0x1C16CF4
	0x03D24EAC MOVZ W8, 0x1
	0x03D24EB0 STRB W8, [X20 + 0xA9E]
	0x03D24EB4 LDR X0, [X21]
	0x03D24EB8 LDR X20, [X19 + 0x68]
	0x03D24EBC LDR W8, [X0 + 0xE0]
	0x03D24EC0 CBNZ W8, 0x3D24EC8
	0x03D24EC4 BL 0x1C16DFC
	0x03D24EC8 MOV X0, X20
	0x03D24ECC MOV X1, X31
	0x03D24ED0 MOV X2, X31
	0x03D24ED4 BL 0x3C3883C
	0x03D24ED8 TBZ X0, 0x0, 0x3D24F4C
	0x03D24EDC LDR X0, [X21]
	0x03D24EE0 LDR X20, [X19 + 0x58]
	0x03D24EE4 LDR W8, [X0 + 0xE0]
	0x03D24EE8 CBNZ W8, 0x3D24EF0
	0x03D24EEC BL 0x1C16DFC
	0x03D24EF0 MOV X0, X20
	0x03D24EF4 MOV X1, X31
	0x03D24EF8 MOV X2, X31
	0x03D24EFC BL 0x3C354F8

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {32}
	005 Move W9, [X8+24]
	006 Move X10, X9
	007 ShiftRight X10, 32
	008 And X10, X10, 0x7FFFFFFF
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X10, W9
	011 Move W11, 8
	012 Move TEMP, 0x80000000
	013 Not TEMP
	014 Move W12, TEMP
	015 Move W13, 0x80000000
	016 Subtract X15, X11, 8
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move [X8], W12
	019 Move X14, [X0+24]
	020 Compare X14, 0
	021 JumpIfEqual {32}
	022 Move W16, [X14+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Subtract X15, X11, 7
	025 Add X16, X11, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move [X14], W13
	028 Move X11, X16
	029 Move X30, [X31+16]
	030 Return 
	031 Call 0x1C17F28
	032 Call 0x1C17F20

