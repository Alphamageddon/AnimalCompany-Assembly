Type: UnityEngine.UIElements.UIR.GPUBufferAllocator

Method: System.Void .ctor(System.UInt32 maxSize)

Disassembly:
	0x03D359BC LDR X8, [X8 + 0xA28]
	0x03D359C0 LDR X0, [X8]
	0x03D359C4 LDR W8, [X0 + 0xE0]
	0x03D359C8 CBNZ W8, 0x3D359D0
	0x03D359CC BL 0x1C16DFC
	0x03D359D0 LDR X8, [X31 + 0xD0]
	0x03D359D4 MOV X1, X31
	0x03D359D8 CMP X22, X8
	0x03D359DC CSET W0, NE
	0x03D359E0 BL 0x3C06E58
	0x03D359E4 LDR X8, [X31 + 0x90]
	0x03D359E8 CBZ X8, 0x3D359F4
	0x03D359EC LDR X22, [X8 + 0x18]
	0x03D359F0 B 0x3D359F8
	0x03D359F4 MOV X22, X31
	0x03D359F8 ADRP X8, 0x3BE000
	0x03D359FC LDR X8, [X8 + 0xA28]
	0x03D35A00 LDR X0, [X8]
	0x03D35A04 LDR W8, [X0 + 0xE0]
	0x03D35A08 CBNZ W8, 0x3D35A10
	0x03D35A0C BL 0x1C16DFC
	0x03D35A10 LDR X23, [X31 + 0xD0]
	0x03D35A14 MOV X1, X31
	0x03D35A18 CMP X22, X23
	0x03D35A1C CSET W0, NE
	0x03D35A20 BL 0x3C06E58
	0x03D35A24 ADRP X8, 0x430000
	0x03D35A28 LDR X8, [X8 + 0xF8]
	0x03D35A2C LDR X0, [X8]
	0x03D35A30 LDR W8, [X0 + 0xE0]
	0x03D35A34 CBNZ W8, 0x3D35A3C
	0x03D35A38 BL 0x1C16DFC
	0x03D35A3C LDR X22, [X31 + 0xC8]
	0x03D35A40 MOV X1, X23

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6B3000
	007 Move X22, 0x430000
	008 Move W8, [X21+2872]
	009 Move X22, [X22+1080]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x430000
	017 Move X0, [X0+1080]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2872], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Move X0, [X22]
	025 Call 0x1C17F10
	026 Move W1, W20
	027 Move X21, X0
	028 Call BestFitAllocator..ctor, X0, X1
	029 Move [X19+16], X21
	030 Move X0, [X22]
	031 Call 0x1C17F10
	032 Move W1, W20
	033 Move X21, X0
	034 Call BestFitAllocator..ctor, X0, X1
	035 Move [X19+24], X21
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return 

Method: UnityEngine.UIElements.UIR.Alloc Allocate(System.UInt32 size, System.Boolean shortLived)

Disassembly:
	0x03D318B4 STR W10, [X31 + 0x220]
	0x03D318B8 STR V1, [X31 + 0x1F]
	0x03D318BC STR W11, [X31 + 0x200]
	0x03D318C0 CBZ X29, 0x3D31CAC
	0x03D318C4 LDR W10, [X29 + 0x5C]
	0x03D318C8 CMP W10, W9
	0x03D318CC B.NE 0x3D3187C
	0x03D318D0 LDR W9, [X29 + 0x58]
	0x03D318D4 CMP W9, W8
	0x03D318D8 B.NE 0x3D3187C
	0x03D318DC LDR X8, [X29 + 0x50]
	0x03D318E0 CBZ X8, 0x3D31CC8
	0x03D318E4 LDR X8, [X8 + 0x18]
	0x03D318E8 CBZ X8, 0x3D31CD4
	0x03D318EC MOV X19, X29
	0x03D318F0 LDP X28, X24, [X31 + 0x160]
	0x03D318F4 LDP X1, X2, [X8 + 0x20]
	0x03D318F8 LDR W3, [X19 + 0x18]!
	0x03D318FC ADRP X8, 0x433000
	0x03D31900 MOV X20, X19
	0x03D31904 LDR W4, [X20 + 0x4]!
	0x03D31908 LDR X8, [X8 + 0xEA0]
	0x03D3190C LDR X5, [X8]
	0x03D31910 ADD X0, X31, 0x100
	0x03D31914 BL 0x24087E8
	0x03D31918 CBZ X28, 0x3D31CD8
	0x03D3191C LDR X8, [X28 + 0x18]
	0x03D31920 CBZ X8, 0x3D31CD0
	0x03D31924 LDP X1, X2, [X8 + 0x20]
	0x03D31928 ADRP X8, 0x433000
	0x03D3192C LDR W4, [X20]
	0x03D31930 LDR X8, [X8 + 0xEA0]
	0x03D31934 LDR X5, [X8]
	0x03D31938 ADD X0, X31, 0xF0
	0x03D3193C MOV W3, W23
	0x03D31940 BL 0x24087E8
	0x03D31944 ADRP X8, 0x433000
	0x03D31948 LDP X1, X2, [X31 + 0x100]
	0x03D3194C LDR X8, [X8 + 0xFB0]
	0x03D31950 LDR X3, [X8]
	0x03D31954 ADD X0, X31, 0xF0
	0x03D31958 BL 0x2408918
	0x03D3195C LDR X0, [X28 + 0x18]
	0x03D31960 CBZ X0, 0x3D31CE0
	0x03D31964 ADRP X8, 0x433000
	0x03D31968 LDR W2, [X20]
	0x03D3196C LDR X8, [X8 + 0xE90]
	0x03D31970 LDR X3, [X8]
	0x03D31974 MOV W1, W23
	0x03D31978 BL 0x29ACAE4
	0x03D3197C TBZ X24, 0x0, 0x3D31A68
	0x03D31980 LDR X8, [X29 + 0x50]
	0x03D31984 CBZ X8, 0x3D31CF0
	0x03D31988 LDR X8, [X8 + 0x20]
	0x03D3198C CBZ X8, 0x3D31CEC
	0x03D31990 LDP X1, X2, [X8 + 0x20]
	0x03D31994 ADRP X8, 0x433000
	0x03D31998 LDP W3, W4, [X29 + 0x30]
	0x03D3199C LDR X8, [X8 + 0xEA8]
	0x03D319A0 LDR X5, [X8]
	0x03D319A4 ADD X0, X31, 0xE0
	0x03D319A8 BL 0x2406E5C
	0x03D319AC LDR X8, [X28 + 0x20]
	0x03D319B0 CBZ X8, 0x3D31CF4
	0x03D319B4 LDP X1, X2, [X8 + 0x20]
	0x03D319B8 ADRP X8, 0x433000
	0x03D319BC LDR W4, [X29 + 0x34]
	0x03D319C0 LDR X8, [X8 + 0xEA8]
	0x03D319C4 LDR X5, [X8]
	0x03D319C8 ADD X0, X31, 0xD0
	0x03D319CC MOV W3, W22
	0x03D319D0 BL 0x2406E5C
	0x03D319D4 ADRP X8, 0x433000
	0x03D319D8 LDR X8, [X8 + 0xFB8]
	0x03D319DC LDR X1, [X8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move W21, W2
	010 Move X20, X0
	011 Move X19, X8
	012 Move TEMP, X2
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {34}
	016 Move X0, [X20+24]
	017 Compare X0, 0
	018 JumpIfEqual {93}
	019 Add X8, X31, 24
	020 Call BestFitAllocator.Allocate, X0, X1
	021 NotImplemented "Instruction LDUR not yet implemented."
	022 Move W10, [X31+44]
	023 Move W8, [X31+24]
	024 Move W23, [X31+28]
	025 Move X22, [X31+32]
	026 Move [X31+56], W9
	027 Move [X31+59], W10
	028 Move X9, [X20+24]
	029 Compare X9, 0
	030 JumpIfEqual {93}
	031 Move W9, [X9+16]
	032 Add W8, W23, W8
	033 Subtract W24, W9, W8
	034 Move X0, [X20+16]
	035 Compare X0, 0
	036 JumpIfEqual {93}
	037 Add X8, X31, 24
	038 Call BestFitAllocator.Allocate, X0, X1
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 Move W9, [X31+44]
	041 Move W24, [X31+24]
	042 Move W23, [X31+28]
	043 Move X22, [X31+32]
	044 Move [X31+56], W8
	045 Move [X31+59], W9
	046 Move X0, X20
	047 And W21, W21, 1
	048 Call GPUBufferAllocator.HighLowCollide, X0
	049 Compare W23, 0
	050 JumpIfEqual {72}
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {72}
	055 Move W8, [X31+56]
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 Add X1, X31, 0
	058 Move X0, X20
	059 Move [X31], W24
	060 Move [X31+4], W23
	061 Move [X31+8], X22
	062 Move [X31+16], W21
	063 Move [X31+17], W8
	064 Move [X31+20], W9
	065 Call GPUBufferAllocator.Free, X0, X1
	066 Move W21, W31
	067 Move X22, X31
	068 Move W23, W31
	069 Move W24, W31
	070 Move [X31+27], W31
	071 Move [X31+24], W31
	072 Move W8, [X31+56]
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 Move [X31+24], W8
	075 Move [X31+27], W9
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 Move W9, [X31+24]
	078 Move [X19], W24
	079 Move [X19+4], W23
	080 Move [X19+8], X22
	081 Move [X19+16], W21
	082 Move [X19+20], W8
	083 Move [X19+17], W9
	084 Move X20, [X31+96]
	085 Move X19, [X31+104]
	086 Move X22, [X31+80]
	087 Move X21, [X31+88]
	088 Move X24, [X31+64]
	089 Move X23, [X31+72]
	090 Move X30, [X31+48]
	091 Add X31, X31, 112
	092 Return X0
	093 Call 0x1C17F20

Method: System.Void Free(UnityEngine.UIElements.UIR.Alloc alloc)

Disassembly:
	0x03D319E0 ADD X0, X31, 0xD0
	0x03D319E4 BL 0x2407134
	0x03D319E8 MOV W24, W0
	0x03D319EC CMP W0, 0x1
	0x03D319F0 B.LT 0x3D31A40
	0x03D319F4 LDR W8, [X19]
	0x03D319F8 MOV W25, W31
	0x03D319FC SUB W21, W23, W8
	0x03D31A00 ADRP X8, 0x433000
	0x03D31A04 LDR X8, [X8 + 0xED8]
	0x03D31A08 LDR X2, [X8]
	0x03D31A0C ADD X0, X31, 0xE0
	0x03D31A10 MOV W1, W25
	0x03D31A14 BL 0x2406EB0
	0x03D31A18 ADRP X8, 0x433000
	0x03D31A1C LDR X8, [X8 + 0x618]
	0x03D31A20 ADD W2, W0, W21
	0x03D31A24 LDR X3, [X8]
	0x03D31A28 ADD X0, X31, 0xD0
	0x03D31A2C MOV W1, W25
	0x03D31A30 BL 0x2406EF0
	0x03D31A34 ADD W25, W25, 0x1
	0x03D31A38 CMP W24, W25
	0x03D31A3C B.NE 0x3D31A00
	0x03D31A40 LDR X0, [X28 + 0x20]
	0x03D31A44 CBZ X0, 0x3D31CE8
	0x03D31A48 ADRP X8, 0x433000
	0x03D31A4C LDR W2, [X29 + 0x34]
	0x03D31A50 LDR X8, [X8 + 0xE98]
	0x03D31A54 LDR X3, [X8]
	0x03D31A58 MOV W1, W22
	0x03D31A5C BL 0x29AC36C
	0x03D31A60 LDR X21, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 Move W8, [X1+16]
	004 Move TEMP, X8
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfEqual {20}
	008 Move X0, [X0+16]
	009 Move X8, [X1+16]
	010 Move V0, [X1]
	011 Move [X31+80], X8
	012 Move [X31+4], V0
	013 Compare X0, 0
	014 JumpIfEqual {38}
	015 Move V0, [X31+4]
	016 Move X8, [X31+80]
	017 Add X1, X31, 32
	018 Move [X31+2], V0
	019 Move [X31+48], X8
	020 Move X0, [X0+24]
	021 Compare X0, 0
	022 JumpIfEqual {38}
	023 Move W8, [X0+16]
	024 Move W9, [X1]
	025 Move W10, [X1+4]
	026 Subtract W8, W8, W9
	027 Subtract W8, W8, W10
	028 Move [X1], W8
	029 Move X8, [X1+16]
	030 Move V0, [X1]
	031 Add X1, X31, 0
	032 Move [X31+16], X8
	033 Move [X31], V0
	034 Call BestFitAllocator.Free, X0, X1
	035 Move X30, [X31+96]
	036 Add X31, X31, 112
	037 Return 
	038 Call 0x1C17F20

Method: System.Boolean get_isEmpty()

Disassembly:
	0x03D35A7C BL 0x3DEBF60
	0x03D35A80 STR X22, [X31 + 0xA8]
	0x03D35A84 TBZ X0, 0x0, 0x3D35AD8
	0x03D35A88 MOV X0, X22
	0x03D35A8C MOV X1, X31
	0x03D35A90 BL 0x3D3F480
	0x03D35A94 MOV X0, X22
	0x03D35A98 MOV X1, X31
	0x03D35A9C BL 0x3D41C00
	0x03D35AA0 MOV X0, X22
	0x03D35AA4 MOV X1, X31
	0x03D35AA8 BL 0x3D42538
	0x03D35AAC ADRP X8, 0x430000
	0x03D35AB0 LDR X8, [X8 + 0xF8]
	0x03D35AB4 LDR X22, [X22 + 0x108]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {17}
	005 Move W8, [X8+48]
	006 Compare W8, 0
	007 JumpIfEqual {9}
	008 Move W0, W31
	009 Move X8, [X0+24]
	010 Compare X8, 0
	011 JumpIfEqual {17}
	012 Move W8, [X8+48]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSET not yet implemented."
	015 Move X30, [X31+16]
	016 Return X0
	017 Call 0x1C17F20

Method: System.Boolean HighLowCollide()

Disassembly:
	0x03D35A44 MOV X0, X22
	0x03D35A48 BL 0x3D369BC
	0x03D35A4C MOV X0, X22
	0x03D35A50 MOV X1, X23
	0x03D35A54 MOV X2, X31
	0x03D35A58 BL 0x3D241D4
	0x03D35A5C LDR X22, [X22 + 0x210]
	0x03D35A60 CBZ X22, 0x3D36898
	0x03D35A64 MOV X0, X22
	0x03D35A68 MOV X1, X23
	0x03D35A6C MOV X2, X31
	0x03D35A70 BL 0x3D3CE8C
	0x03D35A74 MOV X0, X23
	0x03D35A78 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {16}
	005 Move X9, [X0+24]
	006 Compare X9, 0
	007 JumpIfEqual {16}
	008 Move W10, [X8+48]
	009 Move W9, [X9+48]
	010 Move W8, [X8+16]
	011 Add W9, W9, W10
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CSET not yet implemented."
	014 Move X30, [X31+16]
	015 Return X0
	016 Call 0x1C17F20

