Type: UnityEngine.UIElements.UIR.ShaderInfoStorageRGBA32

Method: System.Void .ctor(System.Int32 initialSize = 64, System.Int32 maxSize = 4096)

Disassembly:
	0x03D28BD8 LDRH W9, [X8 + 0x12E]
	0x03D28BDC LDR X1, [X10]
	0x03D28BE0 CBZ X9, 0x3D28C04
	0x03D28BE4 LDR X10, [X8 + 0xB0]
	0x03D28BE8 ADD X10, X10, 0x8
	0x03D28BEC LDUR X11, [X10 - 0x8]
	0x03D28BF0 CMP X11, X1
	0x03D28BF4 B.EQ 0x3D28C14
	0x03D28BF8 SUBS X9, X9, 0x1
	0x03D28BFC ADD X10, X10, 0x10
	0x03D28C00 B.NE 0x3D28BEC
	0x03D28C04 MOV X0, X20
	0x03D28C08 MOV W2, W31
	0x03D28C0C BL 0x1C5C788
	0x03D28C10 B 0x3D28C20
	0x03D28C14 LDRSW X9, [X10]
	0x03D28C18 ADD X8, X8, X9, 0x4, LSL
	0x03D28C1C ADD X0, X8, 0x138
	0x03D28C20 LDP X8, X1, [X0]
	0x03D28C24 MOV X0, X20
	0x03D28C28 BLR X8
	0x03D28C2C SUB W8, W0, W27
	0x03D28C30 CMP W8, 0x8
	0x03D28C34 MOVZ W9, 0x8
	0x03D28C38 CSEL W19, W8, W9, LT
	0x03D28C3C ADD W8, W19, W27
	0x03D28C40 CMP W8, W27
	0x03D28C44 STR W8, [X31 + 0x34]
	0x03D28C48 B.LE 0x3D28D50
	0x03D28C4C ADRP X28, 0x43C000
	0x03D28C50 ADRP X29, 0x3CB000
	0x03D28C54 ADRP X25, 0x43C000
	0x03D28C58 LDR X28, [X28 + 0xAE8]
	0x03D28C5C LDR X29, [X29 + 0x598]
	0x03D28C60 LDR X25, [X25 + 0xAB8]
	0x03D28C64 MOV W26, W31
	0x03D28C68 MOV W22, W27

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x6C0000
	008 Move X22, 0x43D000
	009 Move W8, [X23+2752]
	010 Move X22, [X22+2536]
	011 Move W19, W2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x43D000
	019 Move X0, [X0+2536]
	020 Call 0x1C17CF4
	021 Move X0, 0x43D000
	022 Move X0, [X0+2544]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2752], W8
	026 Move X0, [X22]
	027 Move X23, 0x43D000
	028 Move W8, [X0+224]
	029 Move X23, [X23+2544]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X22]
	034 Move X8, [X0+184]
	035 Move X5, [X23]
	036 Move X0, X21
	037 Move W3, W20
	038 Move X2, [X8]
	039 Move W4, W19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move W1, 4
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Call ShaderInfoStorage`1<Color32>..ctor, X0, X1, X2, X3, X4
	048 Return 

Method: System.Void .cctor()

Disassembly:
	0x03D28C6C LDR X8, [X20]
	0x03D28C70 LDR X1, [X28]
	0x03D28C74 LDRH W9, [X8 + 0x12E]
	0x03D28C78 CBZ X9, 0x3D28C9C
	0x03D28C7C LDR X10, [X8 + 0xB0]
	0x03D28C80 ADD X10, X10, 0x8
	0x03D28C84 LDUR X11, [X10 - 0x8]
	0x03D28C88 CMP X11, X1
	0x03D28C8C B.EQ 0x3D28CAC
	0x03D28C90 SUBS X9, X9, 0x1
	0x03D28C94 ADD X10, X10, 0x10
	0x03D28C98 B.NE 0x3D28C84
	0x03D28C9C MOV X0, X20
	0x03D28CA0 MOV W2, W31
	0x03D28CA4 BL 0x1C5C788
	0x03D28CA8 B 0x3D28CB8
	0x03D28CAC LDRSW X9, [X10]
	0x03D28CB0 ADD X8, X8, X9, 0x4, LSL
	0x03D28CB4 ADD X0, X8, 0x138
	0x03D28CB8 LDP X9, X2, [X0]
	0x03D28CBC ADD X8, X31, 0x38
	0x03D28CC0 MOV X0, X20
	0x03D28CC4 MOV W1, W22
	0x03D28CC8 BLR X9
	0x03D28CCC LDR X0, [X29]
	0x03D28CD0 LDR X23, [X31 + 0x38]
	0x03D28CD4 LDR W8, [X0 + 0xE0]
	0x03D28CD8 CBNZ W8, 0x3D28CE0
	0x03D28CDC BL 0x1C16DFC
	0x03D28CE0 MOV X0, X23
	0x03D28CE4 MOV X1, X31
	0x03D28CE8 MOV X2, X31
	0x03D28CEC BL 0x3C354F8
	0x03D28CF0 TBZ X0, 0x0, 0x3D28D40
	0x03D28CF4 LDR X0, [X25]
	0x03D28CF8 LDR X24, [X21 + 0x20]
	0x03D28CFC LDR W8, [X0 + 0xE0]
	0x03D28D00 CBNZ W8, 0x3D28D0C
	0x03D28D04 BL 0x1C16DFC
	0x03D28D08 LDR X0, [X25]
	0x03D28D0C LDR X8, [X0 + 0xB8]
	0x03D28D10 LDR X8, [X8]
	0x03D28D14 CBZ X8, 0x3D290D8
	0x03D28D18 LDR W9, [X8 + 0x18]
	0x03D28D1C CMP W26, W9
	0x03D28D20 B.CS 0x3D290DC
	0x03D28D24 CBZ X24, 0x3D290D8
	0x03D28D28 ADD X8, X8, W26, 0x2, SXTW
	0x03D28D2C LDR W1, [X8 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x6C0000
	007 Move X19, 0x43D000
	008 Move W8, [X20+2753]
	009 Move X19, [X19+2552]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x43D000
	015 Move X0, [X0+2560]
	016 Call 0x1C17CF4
	017 Move X0, 0x43D000
	018 Move X0, [X0+2536]
	019 Call 0x1C17CF4
	020 Move X0, 0x43D000
	021 Move X0, [X0+2568]
	022 Call 0x1C17CF4
	023 Move X0, 0x43D000
	024 Move X0, [X0+2552]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2753], W8
	028 Move X0, [X19]
	029 Move X22, 0x43D000
	030 Move X20, 0x43D000
	031 Move X21, 0x43D000
	032 Move W8, [X0+224]
	033 Move X22, [X22+2560]
	034 Move X20, [X20+2568]
	035 Move X21, [X21+2536]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X19]
	040 Move X8, [X0+184]
	041 Move X0, [X22]
	042 Move X19, [X8]
	043 Call 0x1C17F10
	044 Move X2, [X20]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X20, X0
	048 Call Func`2<Color, Color32>..ctor, X0, X1, X2
	049 Move X8, [X21]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X8, [X8+184]
	053 Move [X8], X20
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X30, [X31+48]
	057 Return 

