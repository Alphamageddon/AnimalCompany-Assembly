Type: UnityEngine.UIElements.UIR.Allocator2D/Row

Method: UnityEngine.UIElements.UIR.Allocator2D/Row Create()

Disassembly:
	0x03D21D98 BL 0x3EB1AD0
	0x03D21D9C LDR X20, [X0]
	0x03D21DA0 BL 0x3EB1AE0
	0x03D21DA4 LDR X1, [X23]
	0x03D21DA8 ADD X0, X31, 0x40
	0x03D21DAC BL 0x2BB19F0
	0x03D21DB0 CBZ X20, 0x3D21D28
	0x03D21DB4 MOV X0, X20
	0x03D21DB8 BL 0x1C16F18
	0x03D21DBC MOV X19, X0
	0x03D21DC0 MOV X20, X31
	0x03D21DC4 B 0x3D21DCC
	0x03D21DC8 MOV X19, X0
	0x03D21DCC LDR X1, [X23]
	0x03D21DD0 ADD X0, X31, 0x40
	0x03D21DD4 BL 0x2BB19F0
	0x03D21DD8 CBNZ X20, 0x3D21DE4
	0x03D21DDC MOV X0, X19
	0x03D21DE0 BL 0x1D2C690
	0x03D21DE4 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x6C7000
	005 Move X20, 0x444000
	006 Move W8, [X19+2671]
	007 Move X20, [X20+1096]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x444000
	013 Move X0, [X0+1096]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2671], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Call Row..ctor, X0
	021 Move X0, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0

Method: System.Void Reset(UnityEngine.UIElements.UIR.Allocator2D/Row row)

Disassembly:
	0x03D21E30 MOV X2, X31
	0x03D21E34 BL 0x3BFDE5C
	0x03D21E38 LDR X8, [X20 + 0x10]
	0x03D21E3C MOVZ W9, 0x2
	0x03D21E40 STP X0, X1, [X8]
	0x03D21E44 LDR X8, [X20 + 0x10]
	0x03D21E48 STP X21, X19, [X8 + 0x10]
	0x03D21E4C STR W9, [X20 + 0x20]
	0x03D21E50 LDP X20, X19, [X31 + 0x10]
	0x03D21E54 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {11}
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Move [X0+72], V0
	006 Move [X0+56], V0
	007 Move [X0+40], V0
	008 Move [X0+24], V0
	009 Move X30, [X31+16]
	010 Return 
	011 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03D21DE8 BL 0x1C16F18
	0x03D21DEC BL 0x1990590
	0x03D21DF0 STP X30, X21, [X31 - 0x20]!
	0x03D21DF4 STP X20, X19, [X31 + 0x10]
	0x03D21DF8 LDRSW X8, [X0 + 0x20]
	0x03D21DFC LDR W9, [X0 + 0x18]
	0x03D21E00 MOV X19, X2
	0x03D21E04 MOV X20, X0
	0x03D21E08 MOV X21, X1
	0x03D21E0C CMP W8, W9
	0x03D21E10 B.GE 0x3D21E2C
	0x03D21E14 LDR X9, [X20 + 0x10]
	0x03D21E18 ADD W10, W8, 0x1
	0x03D21E1C STR W10, [X20 + 0x20]
	0x03D21E20 ADD X8, X9, X8, 0x4, LSL
	0x03D21E24 STP X21, X19, [X8]
	0x03D21E28 B 0x3D21E50
	0x03D21E2C LDP X0, X1, [X20 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6C7000
	006 Move X21, 0x444000
	007 Move W8, [X20+2672]
	008 Move X21, [X21+1112]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x444000
	015 Move X0, [X0+1112]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2672], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x2EF1D48, X0
	026 Return 

Method: System.Void .cctor()

Disassembly:
	0x03D21E58 RET
	0x03D21E5C STR X30, [X31 - 0x20]!
	0x03D21E60 STP X20, X19, [X31 + 0x10]
	0x03D21E64 ADRP X20, 0x6C6000
	0x03D21E68 LDRB W8, [X20 + 0xA86]
	0x03D21E6C MOV X19, X0
	0x03D21E70 TBNZ X8, 0x0, 0x3D21E88
	0x03D21E74 ADRP X0, 0x443000
	0x03D21E78 LDR X0, [X0 + 0x518]
	0x03D21E7C BL 0x1C16CF4
	0x03D21E80 MOVZ W8, 0x1
	0x03D21E84 STRB W8, [X20 + 0xA86]
	0x03D21E88 LDR W3, [X19 + 0x20]
	0x03D21E8C CMP W3, 0x2
	0x03D21E90 B.LT 0x3D21EB8
	0x03D21E94 ADRP X8, 0x443000
	0x03D21E98 LDR X8, [X8 + 0x518]
	0x03D21E9C LDP X0, X1, [X19 + 0x10]
	0x03D21EA0 MOV W2, W31
	0x03D21EA4 LDR X4, [X8]
	0x03D21EA8 BL 0x2222900
	0x03D21EAC MOV X2, X31
	0x03D21EB0 BL 0x3BFDF18
	0x03D21EB4 B 0x3D21ED4
	0x03D21EB8 CMP W3, 0x1
	0x03D21EBC B.NE 0x3D21ECC
	0x03D21EC0 LDR X8, [X19 + 0x10]
	0x03D21EC4 LDP X0, X1, [X8]
	0x03D21EC8 B 0x3D21ED4
	0x03D21ECC MOV X0, X31
	0x03D21ED0 MOV X1, X31
	0x03D21ED4 STR W31, [X19 + 0x20]
	0x03D21ED8 LDP X20, X19, [X31 + 0x10]
	0x03D21EDC LDR X30, [X31], #0x20
	0x03D21EE0 RET
	0x03D21EE4 SUB X31, X31, 0xB0
	0x03D21EE8 STR X30, [X31 + 0x60]
	0x03D21EEC STP X26, X25, [X31 + 0x70]
	0x03D21EF0 STP X24, X23, [X31 + 0x80]
	0x03D21EF4 STP X22, X21, [X31 + 0x90]
	0x03D21EF8 STP X20, X19, [X31 + 0xA0]
	0x03D21EFC ADRP X20, 0x6C6000
	0x03D21F00 LDRB W8, [X20 + 0xA80]
	0x03D21F04 MOV X19, X0
	0x03D21F08 TBNZ X8, 0x0, 0x3D21F74
	0x03D21F0C ADRP X0, 0x443000
	0x03D21F10 LDR X0, [X0 + 0x520]
	0x03D21F14 BL 0x1C16CF4
	0x03D21F18 ADRP X0, 0x443000
	0x03D21F1C LDR X0, [X0 + 0x528]
	0x03D21F20 BL 0x1C16CF4
	0x03D21F24 ADRP X0, 0x443000
	0x03D21F28 LDR X0, [X0 + 0x530]
	0x03D21F2C BL 0x1C16CF4
	0x03D21F30 ADRP X0, 0x443000
	0x03D21F34 LDR X0, [X0 + 0x538]
	0x03D21F38 BL 0x1C16CF4
	0x03D21F3C ADRP X0, 0x443000
	0x03D21F40 LDR X0, [X0 + 0x540]
	0x03D21F44 BL 0x1C16CF4
	0x03D21F48 ADRP X0, 0x443000
	0x03D21F4C LDR X0, [X0 + 0x548]
	0x03D21F50 BL 0x1C16CF4
	0x03D21F54 ADRP X0, 0x443000
	0x03D21F58 LDR X0, [X0 + 0x550]
	0x03D21F5C BL 0x1C16CF4
	0x03D21F60 ADRP X0, 0x443000
	0x03D21F64 LDR X0, [X0 + 0x558]
	0x03D21F68 BL 0x1C16CF4
	0x03D21F6C MOVZ W8, 0x1
	0x03D21F70 STRB W8, [X20 + 0xA80]
	0x03D21F74 MOVI V0.2D, 0x0
	0x03D21F78 STP X31, X31, [X31 + 0x30]
	0x03D21F7C STP V0, V0, [X31 + 0x40]
	0x03D21F80 STP X31, X31, [X31 + 0x20]
	0x03D21F84 LDR X0, [X19 + 0x18]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x6C7000
	011 Move X26, 0x444000
	012 Move X19, 0x444000
	013 Move X24, 0x444000
	014 Move X20, 0x444000
	015 Move X23, 0x444000
	016 Move X21, 0x444000
	017 Move X22, 0x444000
	018 Move X26, [X26+1120]
	019 Move X19, [X19+1128]
	020 Move W8, [X25+2673]
	021 Move X24, [X24+1136]
	022 Move X20, [X20+1144]
	023 Move X23, [X23+1152]
	024 Move X21, [X21+1160]
	025 Move X22, [X22+1096]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {53}
	030 Move X0, 0x444000
	031 Move X0, [X0+1136]
	032 Call 0x1C17CF4
	033 Move X0, 0x444000
	034 Move X0, [X0+1120]
	035 Call 0x1C17CF4
	036 Move X0, 0x444000
	037 Move X0, [X0+1160]
	038 Call 0x1C17CF4
	039 Move X0, 0x444000
	040 Move X0, [X0+1152]
	041 Call 0x1C17CF4
	042 Move X0, 0x444000
	043 Move X0, [X0+1128]
	044 Call 0x1C17CF4
	045 Move X0, 0x444000
	046 Move X0, [X0+1144]
	047 Call 0x1C17CF4
	048 Move X0, 0x444000
	049 Move X0, [X0+1096]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X25+2673], W8
	053 Move X0, [X26]
	054 Call 0x1C17F10
	055 Move X2, [X19]
	056 Move X1, X31
	057 Move X3, X31
	058 Move X19, X0
	059 Call Func`1<Object>..ctor, X0, X1, X2
	060 Move X0, [X24]
	061 Call 0x1C17F10
	062 Move X2, [X20]
	063 Move X1, X31
	064 Move X3, X31
	065 Move X20, X0
	066 Call Action`1<Object>..ctor, X0, X1, X2
	067 Move X0, [X23]
	068 Call 0x1C17F10
	069 Move X4, [X21]
	070 Move W3, 256
	071 Move X1, X19
	072 Move X2, X20
	073 Move X21, X0
	074 Call 0x2EF1D58, X0, X1, X2, X3
	075 Move X8, [X22]
	076 Move X20, [X31+64]
	077 Move X19, [X31+72]
	078 Move X24, [X31+32]
	079 Move X23, [X31+40]
	080 Move X26, [X31+16]
	081 Move X25, [X31+24]
	082 Move X8, [X8+184]
	083 Move [X8], X21
	084 Move X22, [X31+48]
	085 Move X21, [X31+56]
	086 Move X30, [X31+80]
	087 Return 

