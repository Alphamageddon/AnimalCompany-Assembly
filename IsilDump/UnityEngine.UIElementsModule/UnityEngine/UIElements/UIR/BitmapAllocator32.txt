Type: UnityEngine.UIElements.UIR.BitmapAllocator32

Method: System.Void Construct(System.Int32 pageHeight, System.Int32 entryWidth = 1, System.Int32 entryHeight = 1)

Disassembly:
	0x03D2AF64 ADRP X19, 0x3C9000
	0x03D2AF68 LDR W8, [X0 + 0xE0]
	0x03D2AF6C LDR X19, [X19 + 0x598]
	0x03D2AF70 CBNZ W8, 0x3D2AF7C
	0x03D2AF74 BL 0x1C16DFC
	0x03D2AF78 LDR X0, [X20]
	0x03D2AF7C LDR X8, [X19]
	0x03D2AF80 LDR X9, [X0 + 0xB8]
	0x03D2AF84 LDR W10, [X8 + 0xE0]
	0x03D2AF88 LDR X19, [X9 + 0x50]
	0x03D2AF8C CBNZ W10, 0x3D2AF98
	0x03D2AF90 MOV X0, X8
	0x03D2AF94 BL 0x1C16DFC
	0x03D2AF98 MOV X0, X19
	0x03D2AF9C MOV X1, X31
	0x03D2AFA0 MOV X2, X31
	0x03D2AFA4 BL 0x3C3883C
	0x03D2AFA8 TBZ X0, 0x0, 0x3D2B268
	0x03D2AFAC ADRP X8, 0x3F3000
	0x03D2AFB0 LDR X8, [X8 + 0x250]
	0x03D2AFB4 LDR X0, [X8]
	0x03D2AFB8 BL 0x1C16F10
	0x03D2AFBC MOVZ W1, 0x40
	0x03D2AFC0 MOVZ W2, 0x40
	0x03D2AFC4 MOVZ W3, 0x14
	0x03D2AFC8 MOV W4, W31
	0x03D2AFCC MOV X5, X31
	0x03D2AFD0 MOV X19, X0
	0x03D2AFD4 BL 0x3C1C1D8
	0x03D2AFD8 LDR X0, [X20]
	0x03D2AFDC LDR W8, [X0 + 0xE0]
	0x03D2AFE0 CBNZ W8, 0x3D2AFEC
	0x03D2AFE4 BL 0x1C16DFC
	0x03D2AFE8 LDR X0, [X20]
	0x03D2AFEC LDR X8, [X0 + 0xB8]
	0x03D2AFF0 STR X19, [X8 + 0x50]
	0x03D2AFF4 CBZ X19, 0x3D2B290
	0x03D2AFF8 ADRP X8, 0x43A000
	0x03D2AFFC LDR X8, [X8 + 0xBA0]
	0x03D2B000 MOV X0, X19
	0x03D2B004 MOV X2, X31
	0x03D2B008 LDR X1, [X8]
	0x03D2B00C BL 0x3C38A84
	0x03D2B010 LDR X8, [X20]
	0x03D2B014 LDR X8, [X8 + 0xB8]
	0x03D2B018 LDR X0, [X8 + 0x50]
	0x03D2B01C CBZ X0, 0x3D2B290
	0x03D2B020 MOVZ W1, 0x3D
	0x03D2B024 MOV X2, X31
	0x03D2B028 BL 0x3C396EC
	0x03D2B02C LDR X8, [X20]
	0x03D2B030 LDR X8, [X8 + 0xB8]
	0x03D2B034 LDR X0, [X8 + 0x50]
	0x03D2B038 CBZ X0, 0x3D2B290
	0x03D2B03C MOV W1, W31
	0x03D2B040 MOV X2, X31
	0x03D2B044 BL 0x3C1AB5C
	0x03D2B048 ADRP X21, 0x439000
	0x03D2B04C LDR X8, [X20]
	0x03D2B050 LDR X21, [X21 + 0x760]
	0x03D2B054 LDR X8, [X8 + 0xB8]
	0x03D2B058 LDR X0, [X21]
	0x03D2B05C LDR X19, [X8 + 0x50]
	0x03D2B060 LDR W9, [X0 + 0xE0]
	0x03D2B064 CBNZ W9, 0x3D2B070
	0x03D2B068 BL 0x1C16DFC
	0x03D2B06C LDR X0, [X21]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x6BE000
	010 Move X24, 0x43B000
	011 Move X23, 0x43B000
	012 Move W8, [X25+2779]
	013 Move X24, [X24+2864]
	014 Move X23, [X23+2872]
	015 Move W19, W3
	016 Move W20, W2
	017 Move W22, W1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {40}
	023 Move X0, 0x43B000
	024 Move X0, [X0+2872]
	025 Call 0x1C17CF4
	026 Move X0, 0x43B000
	027 Move X0, [X0+2880]
	028 Call 0x1C17CF4
	029 Move X0, 0x43B000
	030 Move X0, [X0+2888]
	031 Call 0x1C17CF4
	032 Move X0, 0x43B000
	033 Move X0, [X0+2864]
	034 Call 0x1C17CF4
	035 Move X0, 0x3D0000
	036 Move X0, [X0+488]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X25+2779], W8
	040 Move [X21], W22
	041 Move X0, [X24]
	042 Call 0x1C17F10
	043 Move X2, [X23]
	044 Move W1, 1
	045 Move X22, X0
	046 Call List`1<Page>..ctor, X0, X1
	047 Move [X21+8], X22
	048 Compare X22, 0
	049 JumpIfEqual {80}
	050 Move X8, 0x43A000
	051 Move X8, [X8+2888]
	052 Move X23, 0x3CF000
	053 Move X25, 0x43A000
	054 Move W24, [X21]
	055 Move X1, [X8]
	056 Move X23, [X23+488]
	057 Move X25, [X25+2880]
	058 Move X0, X22
	059 Call List`1<Page>.get_Capacity, X0
	060 Move X8, [X23]
	061 Move W22, W0
	062 Move X0, X8
	063 Call 0x1C17F10
	064 Move X2, [X25]
	065 Multiply W1, W22, W24
	066 Move X23, X0
	067 Call List`1<UInt32>..ctor, X0, X1
	068 Move [X21+16], X23
	069 Move [X21+24], W20
	070 Move [X21+28], W19
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X22, [X31+32]
	074 Move X21, [X31+40]
	075 Move X24, [X31+16]
	076 Move X23, [X31+24]
	077 Move X30, [X31+64]
	078 Move X25, [X31+72]
	079 Return 
	080 Call 0x1C17F20

Method: System.Void ForceFirstAlloc(System.UInt16 firstPageX, System.UInt16 firstPageY)

Disassembly:
	0x03D2B070 CBZ X19, 0x3D2B290
	0x03D2B074 LDR X8, [X0 + 0xB8]
	0x03D2B078 MOV X0, X19
	0x03D2B07C MOV X3, X31
	0x03D2B080 LDR X1, [X8]
	0x03D2B084 LDP S0, S1, [X8 + 0x68]
	0x03D2B088 LDP S2, S3, [X8 + 0x70]
	0x03D2B08C UBFM X2, X1, 0x20, 0x3F
	0x03D2B090 BL 0x3C1C294
	0x03D2B094 LDR X8, [X20]
	0x03D2B098 LDR X8, [X8 + 0xB8]
	0x03D2B09C LDR X0, [X8 + 0x50]
	0x03D2B0A0 CBZ X0, 0x3D2B290
	0x03D2B0A4 LDR X8, [X21]
	0x03D2B0A8 MOV X3, X31
	0x03D2B0AC LDR X8, [X8 + 0xB8]
	0x03D2B0B0 LDR X1, [X8]
	0x03D2B0B4 LDP S0, S1, [X8 + 0x78]
	0x03D2B0B8 LDP S2, S3, [X8 + 0x80]
	0x03D2B0BC UBFM X8, X1, 0x20, 0x3F
	0x03D2B0C0 ADD W2, W8, 0x1
	0x03D2B0C4 BL 0x3C1C294
	0x03D2B0C8 LDR X8, [X20]
	0x03D2B0CC LDR X8, [X8 + 0xB8]
	0x03D2B0D0 LDR X0, [X8 + 0x50]
	0x03D2B0D4 CBZ X0, 0x3D2B290
	0x03D2B0D8 LDR X8, [X21]
	0x03D2B0DC MOV X3, X31
	0x03D2B0E0 LDR X8, [X8 + 0xB8]
	0x03D2B0E4 LDR X1, [X8]
	0x03D2B0E8 LDP S0, S1, [X8 + 0x88]
	0x03D2B0EC LDP S2, S3, [X8 + 0x90]
	0x03D2B0F0 UBFM X8, X1, 0x20, 0x3F
	0x03D2B0F4 ADD W2, W8, 0x2
	0x03D2B0F8 BL 0x3C1C294
	0x03D2B0FC LDR X8, [X20]
	0x03D2B100 LDR X8, [X8 + 0xB8]
	0x03D2B104 LDR X0, [X8 + 0x50]
	0x03D2B108 CBZ X0, 0x3D2B290
	0x03D2B10C LDR X8, [X21]
	0x03D2B110 MOV X3, X31
	0x03D2B114 LDR X8, [X8 + 0xB8]
	0x03D2B118 LDR X1, [X8 + 0x8]
	0x03D2B11C LDP S0, S1, [X8 + 0x98]
	0x03D2B120 LDP S2, S3, [X8 + 0xA0]
	0x03D2B124 UBFM X2, X1, 0x20, 0x3F
	0x03D2B128 BL 0x3C1C294
	0x03D2B12C LDR X8, [X20]
	0x03D2B130 LDR X8, [X8 + 0xB8]
	0x03D2B134 LDR X0, [X8 + 0x50]
	0x03D2B138 CBZ X0, 0x3D2B290
	0x03D2B13C LDR X8, [X21]
	0x03D2B140 MOV X3, X31
	0x03D2B144 LDR X8, [X8 + 0xB8]
	0x03D2B148 LDR X1, [X8 + 0x10]
	0x03D2B14C LDP S0, S1, [X8 + 0xA8]
	0x03D2B150 LDP S2, S3, [X8 + 0xB0]
	0x03D2B154 UBFM X2, X1, 0x20, 0x3F
	0x03D2B158 BL 0x3C1C294
	0x03D2B15C LDR X8, [X20]
	0x03D2B160 LDR X8, [X8 + 0xB8]
	0x03D2B164 LDR X0, [X8 + 0x50]
	0x03D2B168 CBZ X0, 0x3D2B290
	0x03D2B16C LDR X8, [X21]
	0x03D2B170 FMOV S0, 1
	0x03D2B174 FMOV S1, 1
	0x03D2B178 FMOV S2, 1
	0x03D2B17C LDR X8, [X8 + 0xB8]
	0x03D2B180 FMOV S3, 1
	0x03D2B184 MOV X3, X31
	0x03D2B188 LDR X1, [X8 + 0x20]
	0x03D2B18C UBFM X2, X1, 0x20, 0x3F
	0x03D2B190 BL 0x3C1C294
	0x03D2B194 LDR X8, [X20]
	0x03D2B198 LDR X8, [X8 + 0xB8]
	0x03D2B19C LDR X0, [X8 + 0x50]
	0x03D2B1A0 CBZ X0, 0x3D2B290
	0x03D2B1A4 LDR X8, [X21]
	0x03D2B1A8 FMOV S0, W31
	0x03D2B1AC FMOV S1, W31
	0x03D2B1B0 FMOV S2, W31
	0x03D2B1B4 LDR X8, [X8 + 0xB8]
	0x03D2B1B8 FMOV S3, W31
	0x03D2B1BC MOV X3, X31
	0x03D2B1C0 LDR X1, [X8 + 0x20]
	0x03D2B1C4 UBFM X8, X1, 0x20, 0x3F
	0x03D2B1C8 ADD W2, W8, 0x1
	0x03D2B1CC BL 0x3C1C294
	0x03D2B1D0 LDR X8, [X20]
	0x03D2B1D4 LDR X8, [X8 + 0xB8]
	0x03D2B1D8 LDR X0, [X8 + 0x50]
	0x03D2B1DC CBZ X0, 0x3D2B290
	0x03D2B1E0 LDR X8, [X21]
	0x03D2B1E4 FMOV S0, W31
	0x03D2B1E8 FMOV S1, W31
	0x03D2B1EC FMOV S2, W31
	0x03D2B1F0 LDR X8, [X8 + 0xB8]
	0x03D2B1F4 FMOV S3, W31
	0x03D2B1F8 MOV X3, X31
	0x03D2B1FC LDR X1, [X8 + 0x20]
	0x03D2B200 UBFM X8, X1, 0x20, 0x3F
	0x03D2B204 ADD W2, W8, 0x2
	0x03D2B208 BL 0x3C1C294
	0x03D2B20C LDR X8, [X20]
	0x03D2B210 LDR X8, [X8 + 0xB8]
	0x03D2B214 LDR X0, [X8 + 0x50]
	0x03D2B218 CBZ X0, 0x3D2B290
	0x03D2B21C LDR X8, [X21]
	0x03D2B220 FMOV S0, W31
	0x03D2B224 FMOV S1, W31
	0x03D2B228 FMOV S2, W31
	0x03D2B22C LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x6BD000
	009 Move W8, [X22+2780]
	010 Move W20, W2
	011 Move W19, W1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x3CF000
	018 Move X0, [X0+464]
	019 Call 0x1C17CF4
	020 Move X0, 0x43A000
	021 Move X0, [X0+2896]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2780], W8
	025 Move X0, [X21+16]
	026 Compare X0, 0
	027 JumpIfEqual {134}
	028 Move X22, 0x3CF000
	029 Move X22, [X22+464]
	030 Move W10, [X0+28]
	031 Move X8, [X0+16]
	032 Move X9, [X22]
	033 Add W10, W10, 1
	034 Move [X0+28], W10
	035 Compare X8, 0
	036 JumpIfEqual {134}
	037 NotImplemented "Instruction LDRSW not yet implemented."
	038 Move W11, [X8+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add W9, W10, 1
	041 Add X8, X8, X10
	042 Move TEMP, 1
	043 Not TEMP
	044 Move W10, TEMP
	045 Move [X0+24], W9
	046 Move [X8+32], W10
	047 Move X8, [X9+32]
	048 Move TEMP, 1
	049 Not TEMP
	050 Move W1, TEMP
	051 Move X8, [X8+192]
	052 Move X2, [X8+112]
	053 Call List`1<UInt32>.AddWithResize, X0, X1
	054 Move W8, [X21]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W23, 1
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W24, TEMP
	060 Move X0, [X21+16]
	061 Compare X0, 0
	062 JumpIfEqual {134}
	063 Move W10, [X0+28]
	064 Move X8, [X0+16]
	065 Move X9, [X22]
	066 Add W10, W10, 1
	067 Move [X0+28], W10
	068 Compare X8, 0
	069 JumpIfEqual {134}
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Move W11, [X8+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add W9, W10, 1
	074 Add X8, X8, X10
	075 Move [X0+24], W9
	076 Move [X8+32], W24
	077 Move X8, [X9+32]
	078 Move TEMP, 0
	079 Not TEMP
	080 Move W1, TEMP
	081 Move X8, [X8+192]
	082 Move X2, [X8+112]
	083 Call List`1<UInt32>.AddWithResize, X0, X1
	084 Move W8, [X21]
	085 Add W23, W23, 1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, [X21+8]
	088 Compare X0, 0
	089 JumpIfEqual {134}
	090 Move X10, 0x43A000
	091 Move X10, [X10+2896]
	092 Move W11, [X0+28]
	093 Move X9, [X0+16]
	094 Move X10, [X10]
	095 Add W11, W11, 1
	096 Move [X0+28], W11
	097 Compare X9, 0
	098 JumpIfEqual {134}
	099 Move W11, W8
	100 ShiftRight W11, 27
	101 And W11, W11, 0x3FFFFFF
	102 NotImplemented "Instruction LDRSW not yet implemented."
	103 Move W12, [X9+24]
	104 And X13, X20, 0xFFFF
	105 Subtract W11, W11, 1
	106 NotImplemented "Instruction BFM not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 NotImplemented "Instruction BFM not yet implemented."
	109 Add W10, W8, 1
	110 Add X8, X9, X8
	111 Move [X0+24], W10
	112 Move [X8+32], X19
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X22, [X31+32]
	116 Move X21, [X31+40]
	117 Move X24, [X31+16]
	118 Move X23, [X31+24]
	119 Move X30, [X31+64]
	120 Return 
	121 Move X8, [X10+32]
	122 Move X1, X19
	123 Move X20, [X31+48]
	124 Move X19, [X31+56]
	125 Move X22, [X31+32]
	126 Move X21, [X31+40]
	127 Move X8, [X8+192]
	128 Move X24, [X31+16]
	129 Move X23, [X31+24]
	130 Move X2, [X8+112]
	131 Move X30, [X31+64]
	132 Call List`1<Page>.AddWithResize, X0, X1
	133 Return 
	134 Call 0x1C17F20

Method: UnityEngine.UIElements.UIR.BMPAlloc Allocate(UnityEngine.UIElements.UIR.BaseShaderInfoStorage storage)

Disassembly:
	0x03D2B230 FMOV S3, W31
	0x03D2B234 MOV X3, X31
	0x03D2B238 LDR X1, [X8 + 0x20]
	0x03D2B23C UBFM X8, X1, 0x20, 0x3F
	0x03D2B240 ADD W2, W8, 0x3
	0x03D2B244 BL 0x3C1C294
	0x03D2B248 LDR X8, [X20]
	0x03D2B24C LDR X8, [X8 + 0xB8]
	0x03D2B250 LDR X0, [X8 + 0x50]
	0x03D2B254 CBZ X0, 0x3D2B290
	0x03D2B258 MOVZ W2, 0x1
	0x03D2B25C MOV W1, W31
	0x03D2B260 MOV X3, X31
	0x03D2B264 BL 0x3C1C4B4
	0x03D2B268 LDR X0, [X20]
	0x03D2B26C LDR W8, [X0 + 0xE0]
	0x03D2B270 CBNZ W8, 0x3D2B27C
	0x03D2B274 BL 0x1C16DFC
	0x03D2B278 LDR X0, [X20]
	0x03D2B27C LDR X8, [X0 + 0xB8]
	0x03D2B280 LDP X20, X19, [X31 + 0x10]
	0x03D2B284 LDR X0, [X8 + 0x50]
	0x03D2B288 LDP X30, X21, [X31], #0x20
	0x03D2B28C RET
	0x03D2B290 BL 0x1C16F20
	0x03D2B294 SUB X31, X31, 0xB0
	0x03D2B298 STR X30, [X31 + 0x60]
	0x03D2B29C STP X26, X25, [X31 + 0x70]
	0x03D2B2A0 STP X24, X23, [X31 + 0x80]
	0x03D2B2A4 STP X22, X21, [X31 + 0x90]
	0x03D2B2A8 STP X20, X19, [X31 + 0xA0]
	0x03D2B2AC ADRP X20, 0x6BC000
	0x03D2B2B0 ADRP X25, 0x439000
	0x03D2B2B4 LDRB W8, [X20 + 0xAE5]
	0x03D2B2B8 LDR X25, [X25 + 0x760]
	0x03D2B2BC MOV X19, X0
	0x03D2B2C0 TBNZ X8, 0x0, 0x3D2B2FC
	0x03D2B2C4 ADRP X0, 0x439000
	0x03D2B2C8 LDR X0, [X0 + 0xBA8]
	0x03D2B2CC BL 0x1C16CF4
	0x03D2B2D0 ADRP X0, 0x439000
	0x03D2B2D4 LDR X0, [X0 + 0xBB0]
	0x03D2B2D8 BL 0x1C16CF4
	0x03D2B2DC ADRP X0, 0x439000
	0x03D2B2E0 LDR X0, [X0 + 0x760]
	0x03D2B2E4 BL 0x1C16CF4
	0x03D2B2E8 ADRP X0, 0x439000
	0x03D2B2EC LDR X0, [X0 + 0x6F8]
	0x03D2B2F0 BL 0x1C16CF4
	0x03D2B2F4 MOVZ W8, 0x1
	0x03D2B2F8 STRB W8, [X20 + 0xAE5]
	0x03D2B2FC MOVI V0.2D, 0x0
	0x03D2B300 MOV X20, X19
	0x03D2B304 STP V0, V0, [X31 + 0x40]
	0x03D2B308 STR V0, [X31 + 0x3]
	0x03D2B30C STR V0, [X20 + 0x88]!
	0x03D2B310 MOV X24, X20
	0x03D2B314 MOV X23, X20
	0x03D2B318 MOV X21, X20
	0x03D2B31C MOV X22, X20
	0x03D2B320 STR V0, [X20 + 0x1]
	0x03D2B324 STUR V0, [X20 - 0x70]
	0x03D2B328 STR V0, [X24 - 0x80]!
	0x03D2B32C STR V0, [X23 - 0x60]!
	0x03D2B330 STUR V0, [X20 - 0x50]
	0x03D2B334 STR V0, [X21 - 0x20]!
	0x03D2B338 STUR V0, [X20 - 0x10]
	0x03D2B33C STR V0, [X22 - 0x40]!
	0x03D2B340 STUR V0, [X20 - 0x30]
	0x03D2B344 LDR X0, [X25]
	0x03D2B348 ADRP X26, 0x439000
	0x03D2B34C LDR W8, [X0 + 0xE0]
	0x03D2B350 LDR X26, [X26 + 0x6F8]
	0x03D2B354 CBNZ W8, 0x3D2B35C
	0x03D2B358 BL 0x1C16DFC
	0x03D2B35C MOVZ W1, 0x8
	0x03D2B360 MOVZ W2, 0x1
	0x03D2B364 MOVZ W3, 0x3
	0x03D2B368 MOV X0, X24
	0x03D2B36C BL 0x3D29F64
	0x03D2B370 LDR X8, [X25]
	0x03D2B374 MOV X0, X24
	0x03D2B378 LDR X8, [X8 + 0xB8]
	0x03D2B37C LDP W1, W2, [X8]
	0x03D2B380 BL 0x3D2A070
	0x03D2B384 MOVZ W1, 0x8
	0x03D2B388 MOVZ W2, 0x1
	0x03D2B38C MOVZ W3, 0x1
	0x03D2B390 MOV X0, X23
	0x03D2B394 BL 0x3D29F64
	0x03D2B398 LDR X8, [X25]
	0x03D2B39C MOV X0, X23
	0x03D2B3A0 LDR X8, [X8 + 0xB8]
	0x03D2B3A4 LDP W1, W2, [X8 + 0x8]
	0x03D2B3A8 BL 0x3D2A070
	0x03D2B3AC MOVZ W1, 0x8
	0x03D2B3B0 MOVZ W2, 0x1
	0x03D2B3B4 MOVZ W3, 0x1
	0x03D2B3B8 MOV X0, X22
	0x03D2B3BC BL 0x3D29F64
	0x03D2B3C0 LDR X8, [X25]
	0x03D2B3C4 MOV X0, X22
	0x03D2B3C8 LDR X8, [X8 + 0xB8]
	0x03D2B3CC LDP W1, W2, [X8 + 0x10]
	0x03D2B3D0 BL 0x3D2A070
	0x03D2B3D4 MOVZ W1, 0x8
	0x03D2B3D8 MOVZ W2, 0x1
	0x03D2B3DC MOVZ W3, 0x1
	0x03D2B3E0 MOV X0, X21
	0x03D2B3E4 BL 0x3D29F64
	0x03D2B3E8 LDR X8, [X25]
	0x03D2B3EC MOV X0, X21
	0x03D2B3F0 LDR X8, [X8 + 0xB8]
	0x03D2B3F4 LDP W1, W2, [X8 + 0x18]
	0x03D2B3F8 BL 0x3D2A070
	0x03D2B3FC MOVZ W1, 0x8
	0x03D2B400 MOVZ W2, 0x1
	0x03D2B404 MOVZ W3, 0x4
	0x03D2B408 MOV X0, X20
	0x03D2B40C BL 0x3D29F64
	0x03D2B410 LDR X8, [X25]
	0x03D2B414 MOV X0, X20
	0x03D2B418 LDR X8, [X8 + 0xB8]
	0x03D2B41C LDP W1, W2, [X8 + 0x20]
	0x03D2B420 BL 0x3D2A070
	0x03D2B424 LDR X0, [X26]
	0x03D2B428 LDR W8, [X0 + 0xE0]
	0x03D2B42C CBNZ W8, 0x3D2B434
	0x03D2B430 BL 0x1C16DFC
	0x03D2B434 BL 0x3D2B50C
	0x03D2B438 AND W8, W0, 0x1
	0x03D2B43C STRB W8, [X19 + 0xA9]
	0x03D2B440 TBNZ X0, 0x0, 0x3D2B4F0
	0x03D2B444 ADRP X8, 0x439000
	0x03D2B448 LDR X8, [X8 + 0xBB0]
	0x03D2B44C ADRP X20, 0x439000
	0x03D2B450 ADD X0, X31, 0x20
	0x03D2B454 MOVZ W1, 0x14
	0x03D2B458 LDR X4, [X8]
	0x03D2B45C LDR X20, [X20 + 0xBA8]
	0x03D2B460 MOVZ W2, 0x4
	0x03D2B464 MOV W3, W31
	0x03D2B468 STP X31, X31, [X31 + 0x20]
	0x03D2B46C BL 0x23E6010
	0x03D2B470 LDR V0, [X31 + 0x2]
	0x03D2B474 ADD X0, X31, 0x10
	0x03D2B478 MOVZ W1, 0x14
	0x03D2B47C MOVZ W2, 0x4
	0x03D2B480 STR V0, [X19 + 0xB]
	0x03D2B484 LDR X4, [X20]
	0x03D2B488 MOV W3, W31
	0x03D2B48C ADD X20, X19, 0xB0
	0x03D2B490 STP X31, X31, [X31 + 0x10]
	0x03D2B494 BL 0x23F1E44
	0x03D2B498 LDR V0, [X31 + 0x1]
	0x03D2B49C STR V0, [X19 + 0xC0]!
	0x03D2B4A0 LDR X0, [X25]
	0x03D2B4A4 LDR W8, [X0 + 0xE0]
	0x03D2B4A8 CBNZ W8, 0x3D2B4B4
	0x03D2B4AC BL 0x1C16DFC
	0x03D2B4B0 LDR X0, [X25]
	0x03D2B4B4 LDR X8, [X0 + 0xB8]
	0x03D2B4B8 LDUR V0, [X8 + 0x68]
	0x03D2B4BC LDUR V1, [X8 + 0x78]
	0x03D2B4C0 STP V0, V1, [X31 + 0x30]
	0x03D2B4C4 LDUR V2, [X8 + 0x88]
	0x03D2B4C8 STR V2, [X31 + 0x5]
	0x03D2B4CC LDR X8, [X20]
	0x03D2B4D0 STP V1, V2, [X8 + 0x10]
	0x03D2B4D4 STR V0, [X8]
	0x03D2B4D8 LDR X8, [X25]
	0x03D2B4DC LDR X8, [X8 + 0xB8]
	0x03D2B4E0 LDUR V0, [X8 + 0x98]
	0x03D2B4E4 STR V0, [X31]
	0x03D2B4E8 LDR X8, [X19]
	0x03D2B4EC STR V0, [X8]
	0x03D2B4F0 LDP X20, X19, [X31 + 0xA0]
	0x03D2B4F4 LDP X22, X21, [X31 + 0x90]
	0x03D2B4F8 LDP X24, X23, [X31 + 0x80]
	0x03D2B4FC LDP X26, X25, [X31 + 0x70]
	0x03D2B500 LDR X30, [X31 + 0x60]
	0x03D2B504 ADD X31, X31, 0xB0
	0x03D2B508 RET
	0x03D2B50C SUB X31, X31, 0x30
	0x03D2B510 STP X30, X21, [X31 + 0x10]
	0x03D2B514 STP X20, X19, [X31 + 0x20]
	0x03D2B518 ADRP X19, 0x6BC000
	0x03D2B51C ADRP X21, 0x439000
	0x03D2B520 LDRB W8, [X19 + 0xB11]
	0x03D2B524 LDR X21, [X21 + 0x6F8]
	0x03D2B528 TBNZ X8, 0x0, 0x3D2B594
	0x03D2B52C ADRP X0, 0x3CC000
	0x03D2B530 LDR X0, [X0 + 0xCA0]
	0x03D2B534 BL 0x1C16CF4
	0x03D2B538 ADRP X0, 0x3CC000
	0x03D2B53C LDR X0, [X0 + 0xFD8]
	0x03D2B540 BL 0x1C16CF4
	0x03D2B544 ADRP X0, 0x3CC000
	0x03D2B548 LDR X0, [X0 + 0xBF0]
	0x03D2B54C BL 0x1C16CF4
	0x03D2B550 ADRP X0, 0x3CC000
	0x03D2B554 LDR X0, [X0 + 0xBF8]
	0x03D2B558 BL 0x1C16CF4
	0x03D2B55C ADRP X0, 0x3F2000
	0x03D2B560 LDR X0, [X0 + 0x240]
	0x03D2B564 BL 0x1C16CF4
	0x03D2B568 ADRP X0, 0x439000
	0x03D2B56C LDR X0, [X0 + 0x6F8]
	0x03D2B570 BL 0x1C16CF4
	0x03D2B574 ADRP X0, 0x3EC000
	0x03D2B578 LDR X0, [X0 + 0xEC0]
	0x03D2B57C BL 0x1C16CF4
	0x03D2B580 ADRP X0, 0x439000
	0x03D2B584 LDR X0, [X0 + 0xBB8]
	0x03D2B588 BL 0x1C16CF4
	0x03D2B58C MOVZ W8, 0x1
	0x03D2B590 STRB W8, [X19 + 0xB11]
	0x03D2B594 LDR X0, [X21]
	0x03D2B598 LDR W8, [X0 + 0xE0]
	0x03D2B59C CBNZ W8, 0x3D2B5A8
	0x03D2B5A0 BL 0x1C16DFC
	0x03D2B5A4 LDR X0, [X21]
	0x03D2B5A8 LDR X8, [X0 + 0xB8]
	0x03D2B5AC LDRB W8, [X8 + 0x48]
	0x03D2B5B0 CBNZ W8, 0x3D2B6A8
	0x03D2B5B4 ADRP X19, 0x3F2000
	0x03D2B5B8 LDR X19, [X19 + 0x240]
	0x03D2B5BC LDR X0, [X19]
	0x03D2B5C0 LDR W8, [X0 + 0xE0]
	0x03D2B5C4 CBNZ W8, 0x3D2B5D0
	0x03D2B5C8 BL 0x1C16DFC
	0x03D2B5CC LDR X0, [X19]
	0x03D2B5D0 LDR X8, [X0 + 0xB8]
	0x03D2B5D4 MOV X1, X31
	0x03D2B5D8 LDR X0, [X8]
	0x03D2B5DC BL 0x3C13E40
	0x03D2B5E0 ADRP X8, 0x3CC000
	0x03D2B5E4 LDR X8, [X8 + 0xCA0]
	0x03D2B5E8 MOV X20, X0
	0x03D2B5EC LDR X8, [X8]
	0x03D2B5F0 MOV X0, X8
	0x03D2B5F4 BL 0x1C16F10
	0x03D2B5F8 MOV X1, X20
	0x03D2B5FC MOV X2, X31
	0x03D2B600 MOV X19, X0
	0x03D2B604 BL 0x3C1454C
	0x03D2B608 CBZ X19, 0x3D2B6E4
	0x03D2B60C MOV X0, X19
	0x03D2B610 MOV X1, X31
	0x03D2B614 BL 0x3C396B0
	0x03D2B618 ORR W1, W0, 0x4
	0x03D2B61C MOV X0, X19
	0x03D2B620 MOV X2, X31
	0x03D2B624 BL 0x3C396EC
	0x03D2B628 ADRP X8, 0x439000
	0x03D2B62C LDR X8, [X8 + 0xBB8]
	0x03D2B630 MOV X0, X19
	0x03D2B634 MOV W2, W31
	0x03D2B638 MOV X3, X31
	0x03D2B63C LDR X1, [X8]
	0x03D2B640 BL 0x3C15104
	0x03D2B644 MOV X20, X0
	0x03D2B648 MOV X0, X19
	0x03D2B64C MOV X1, X31
	0x03D2B650 BL 0x3DE1000
	0x03D2B654 ADRP X8, 0x3EC000
	0x03D2B658 LDR X8, [X8 + 0xEC0]
	0x03D2B65C MOV X0, X20
	0x03D2B660 MOV X2, X31
	0x03D2B664 LDR X1, [X8]
	0x03D2B668 BL 0x321BA08
	0x03D2B66C ADRP X8, 0x3CC000
	0x03D2B670 LDR X8, [X8 + 0xFD8]
	0x03D2B674 AND W1, W0, 0x1
	0x03D2B678 ADD X0, X31, 0xC
	0x03D2B67C STRH W31, [X31 + 0xC]
	0x03D2B680 LDR X2, [X8]
	0x03D2B684 BL 0x242D570
	0x03D2B688 LDR X0, [X21]
	0x03D2B68C LDR W8, [X0 + 0xE0]
	0x03D2B690 CBNZ W8, 0x3D2B69C
	0x03D2B694 BL 0x1C16DFC
	0x03D2B698 LDR X0, [X21]
	0x03D2B69C LDR X8, [X0 + 0xB8]
	0x03D2B6A0 LDRH W9, [X31 + 0xC]
	0x03D2B6A4 STRH W9, [X8 + 0x48]
	0x03D2B6A8 ADRP X19, 0x3CC000
	0x03D2B6AC LDR W8, [X0 + 0xE0]
	0x03D2B6B0 LDR X19, [X19 + 0xBF8]
	0x03D2B6B4 CBNZ W8, 0x3D2B6C0
	0x03D2B6B8 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0x6BD000
	015 Move W8, [X21+2781]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {54}
	022 Move X0, 0x43A000
	023 Move X0, [X0+2504]
	024 Call 0x1C17CF4
	025 Move X0, 0x3CF000
	026 Move X0, [X0+464]
	027 Call 0x1C17CF4
	028 Move X0, 0x43A000
	029 Move X0, [X0+2896]
	030 Call 0x1C17CF4
	031 Move X0, 0x43A000
	032 Move X0, [X0+2904]
	033 Call 0x1C17CF4
	034 Move X0, 0x43A000
	035 Move X0, [X0+2912]
	036 Call 0x1C17CF4
	037 Move X0, 0x43A000
	038 Move X0, [X0+2920]
	039 Call 0x1C17CF4
	040 Move X0, 0x42E000
	041 Move X0, [X0+2144]
	042 Call 0x1C17CF4
	043 Move X0, 0x43A000
	044 Move X0, [X0+2928]
	045 Call 0x1C17CF4
	046 Move X0, 0x43A000
	047 Move X0, [X0+2936]
	048 Call 0x1C17CF4
	049 Move X0, 0x43A000
	050 Move X0, [X0+2944]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X21+2781], W8
	054 Move [X31+16], X31
	055 Move [X31+24], X31
	056 Move [X31+8], X31
	057 Move X0, [X19+8]
	058 Compare X0, 0
	059 JumpIfEqual {332}
	060 Move W28, [X0+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X29, 0x43A000
	063 Move X26, 0x42E000
	064 Move X29, [X29+2920]
	065 Move X26, [X26+2144]
	066 Move W25, W31
	067 Move W21, W31
	068 Move X2, [X29]
	069 Move W1, W21
	070 Call List`1<Page>.get_Item, X0, X1
	071 Move X8, X0
	072 ShiftRight X8, 32
	073 And X8, X8, 0x7FFFFFFF
	074 Compare X8, 0
	075 JumpIfEqual {91}
	076 Move W27, [X19]
	077 Multiply W22, W27, W21
	078 Add W8, W22, W27
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X23, X0
	081 Move X0, [X19+16]
	082 Compare X0, 0
	083 JumpIfEqual {332}
	084 Move X2, [X26]
	085 Move W1, W22
	086 Call List`1<UInt32>.get_Item, X0, X1
	087 Compare W0, 0
	088 JumpIfNotEqual {97}
	089 Subtract W27, W27, 1
	090 Add W22, W22, 1
	091 Add W21, W21, 1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, [X19+8]
	094 Subtract W25, W25, 1
	095 Compare X0, 0
	096 JumpIfNotEqual {68}
	097 Move W24, W0
	098 Call BitmapAllocator32.CountTrailingZeroes, X0
	099 Move X8, [X19+16]
	100 Compare X8, 0
	101 JumpIfEqual {332}
	102 Move X9, 0x43A000
	103 Move X9, [X9+2944]
	104 Move W26, 1
	105 Move W20, W0
	106 Move W1, W22
	107 Move X3, [X9]
	108 NotImplemented "Instruction LSLV not yet implemented."
	109 NotImplemented "Instruction BIC not yet implemented."
	110 Move X0, X8
	111 Call List`1<UInt32>.set_Item, X0, X1, X2
	112 Move X0, [X19+8]
	113 Compare X0, 0
	114 JumpIfEqual {332}
	115 Move X8, 0x43A000
	116 Move X8, [X8+2936]
	117 Move W1, W21
	118 Move X3, [X8]
	119 Move X8, INVALID
	120 Add X2, X23, X8
	121 Call List`1<Page>.set_Item, X0, X1, X2
	122 Move [X31+8], W21
	123 Move W8, [X19]
	124 Move [X31+14], W20
	125 Move [X31+15], W26
	126 NotImplemented "Instruction MADD not yet implemented."
	127 NotImplemented "Instruction STRH not yet implemented."
	128 Compare X20, 0
	129 JumpIfEqual {184}
	130 Move X8, [X20]
	131 Move W9, [X19]
	132 Move W10, [X19+24]
	133 Move W11, [X19+28]
	134 Add X3, X31, 16
	135 Move X12, [X8+408]
	136 Move X4, [X8+416]
	137 Move X0, X20
	138 Move W1, W10
	139 ShiftRight W1, 27
	140 And W1, W1, 0x3FFFFFF
	141 Multiply W2, W11, W9
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {184}
	147 Move X20, [X19+16]
	148 Compare X20, 0
	149 JumpIfEqual {332}
	150 Move X8, 0x43A000
	151 Move X8, [X8+2904]
	152 Move X0, X20
	153 Move X1, [X8]
	154 Call List`1<UInt32>.get_Capacity, X0
	155 Move X9, 0x43A000
	156 Move W8, [X19]
	157 Move X9, [X9+2928]
	158 Add W1, W8, W0
	159 Move X2, [X9]
	160 Move X0, X20
	161 Call List`1<UInt32>.set_Capacity, X0, X1
	162 Move X0, [X19+16]
	163 Compare X0, 0
	164 JumpIfEqual {332}
	165 Move X20, 0x3CF000
	166 Move X20, [X20+464]
	167 Move W10, [X0+28]
	168 Move X8, [X0+16]
	169 Move X9, [X20]
	170 Add W10, W10, 1
	171 Move [X0+28], W10
	172 Compare X8, 0
	173 JumpIfEqual {332}
	174 NotImplemented "Instruction LDRSW not yet implemented."
	175 Move W11, [X8+24]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Add W9, W10, 1
	178 Add X8, X8, X10
	179 Move TEMP, 1
	180 Not TEMP
	181 Move W10, TEMP
	182 Move [X0+24], W9
	183 Move [X8+32], W10
	184 Move X19, 0x43A000
	185 Move X19, [X19+2504]
	186 Move X0, [X19]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {192}
	190 Call 0x1C17DFC
	191 Move X0, [X19]
	192 Move X8, [X0+184]
	193 Move X8, [X9+32]
	194 Move TEMP, 1
	195 Not TEMP
	196 Move W1, TEMP
	197 Move X8, [X8+192]
	198 Move X2, [X8+112]
	199 Call List`1<UInt32>.AddWithResize, X0, X1
	200 Move W8, [X19]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move W21, 1
	203 Move TEMP, 0
	204 Not TEMP
	205 Move W22, TEMP
	206 Move X0, [X19+16]
	207 Compare X0, 0
	208 JumpIfEqual {332}
	209 Move W10, [X0+28]
	210 Move X8, [X0+16]
	211 Move X9, [X20]
	212 Add W10, W10, 1
	213 Move [X0+28], W10
	214 Compare X8, 0
	215 JumpIfEqual {332}
	216 NotImplemented "Instruction LDRSW not yet implemented."
	217 Move W11, [X8+24]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Add W9, W10, 1
	220 Add X8, X8, X10
	221 Move [X0+24], W9
	222 Move [X8+32], W22
	223 Move X8, [X9+32]
	224 Move TEMP, 0
	225 Not TEMP
	226 Move W1, TEMP
	227 Move X8, [X8+192]
	228 Move X2, [X8+112]
	229 Call List`1<UInt32>.AddWithResize, X0, X1
	230 Move W8, [X19]
	231 Add W21, W21, 1
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move X21, 0x6BA000
	234 Move W8, [X21+3467]
	235 Move X20, [X19+8]
	236 Compare W8, 0
	237 JumpIfNotEqual {243}
	238 Move X0, 0x3C9000
	239 Move X0, [X0+1448]
	240 Call 0x1C17CF4
	241 Move W8, 1
	242 Move [X21+3467], W8
	243 Move X22, 0x3C9000
	244 Move X22, [X22+1448]
	245 Move W21, [X31+16]
	246 Move W23, [X31+24]
	247 Move X0, [X22]
	248 Move W8, [X0+224]
	249 Compare W8, 0
	250 JumpIfNotEqual {252}
	251 Call 0x1C17DFC
	252 Add W1, W23, W21
	253 Move W0, W21
	254 Move X2, X31
	255 Call Math.Min, X0, X1
	256 Move X23, 0x6BA000
	257 Move W8, [X23+3468]
	258 Move W21, W0
	259 Compare W8, 0
	260 JumpIfNotEqual {266}
	261 Move X0, 0x3C9000
	262 Move X0, [X0+1448]
	263 Call 0x1C17CF4
	264 Move W8, 1
	265 Move [X23+3468], W8
	266 Move X0, [X22]
	267 Move W22, [X31+20]
	268 Move W23, [X31+28]
	269 Move W8, [X0+224]
	270 Compare W8, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Add W1, W23, W22
	274 Move W0, W22
	275 Move X2, X31
	276 Call Math.Min, X0, X1
	277 Compare X20, 0
	278 JumpIfEqual {332}
	279 Move X10, 0x43A000
	280 Move W9, [X19]
	281 Move X10, [X10+2896]
	282 Move W11, [X20+28]
	283 Move X8, [X20+16]
	284 Move X10, [X10]
	285 Add W11, W11, 1
	286 Move [X20+28], W11
	287 Compare X8, 0
	288 JumpIfEqual {332}
	289 NotImplemented "Instruction LDRSW not yet implemented."
	290 Move W12, [X8+24]
	291 Move W9, W9
	292 ShiftRight W9, 27
	293 And W9, W9, 0x3FFFFFF
	294 Subtract W9, W9, 1
	295 NotImplemented "Instruction BFM not yet implemented."
	296 NotImplemented "Instruction CMP not yet implemented."
	297 NotImplemented "Instruction BFM not yet implemented."
	298 Add W9, W11, 1
	299 Add X8, X8, X11
	300 Move [X20+24], W9
	301 Move [X8+32], X21
	302 Move X8, [X10+32]
	303 Move X0, X20
	304 Move X1, X21
	305 Move X8, [X8+192]
	306 Move X2, [X8+112]
	307 Call List`1<Page>.AddWithResize, X0, X1
	308 Move X8, 0x1000000
	309 Move [X31+8], X8
	310 Move X8, [X19+8]
	311 Compare X8, 0
	312 JumpIfEqual {332}
	313 Move W8, [X8+24]
	314 Subtract W8, W8, 1
	315 Move [X31+8], W8
	316 Add X8, X31, 8
	317 Move X0, [X8]
	318 Move X20, [X31+112]
	319 Move X19, [X31+120]
	320 Move X22, [X31+96]
	321 Move X21, [X31+104]
	322 Move X24, [X31+80]
	323 Move X23, [X31+88]
	324 Move X26, [X31+64]
	325 Move X25, [X31+72]
	326 Move X28, [X31+48]
	327 Move X27, [X31+56]
	328 Move X29, [X31+32]
	329 Move X30, [X31+40]
	330 Add X31, X31, 128
	331 Return X0
	332 Call 0x1C17F20

Method: System.Void Free(UnityEngine.UIElements.UIR.BMPAlloc alloc)

Disassembly:
	0x03D2B720 LDR X0, [X0 + 0x760]
	0x03D2B724 BL 0x1C16CF4
	0x03D2B728 MOVZ W8, 0x1
	0x03D2B72C STRB W8, [X20 + 0xAE6]
	0x03D2B730 STP X31, X31, [X31 + 0xC0]
	0x03D2B734 STP X31, X31, [X31 + 0xB0]
	0x03D2B738 STP X31, X31, [X31 + 0xA0]
	0x03D2B73C STP X31, X31, [X31 + 0x90]
	0x03D2B740 STP X31, X31, [X31 + 0x80]
	0x03D2B744 ADRP X21, 0x439000
	0x03D2B748 LDRB W8, [X19 + 0xA9]
	0x03D2B74C LDR X21, [X21 + 0x760]
	0x03D2B750 CBZ W8, 0x3D2B778
	0x03D2B754 ADRP X8, 0x439000
	0x03D2B758 LDR X8, [X8 + 0xA10]
	0x03D2B75C LDR X0, [X8]
	0x03D2B760 BL 0x1C16F10
	0x03D2B764 MOVZ W1, 0x40
	0x03D2B768 MOVZ W2, 0x1000
	0x03D2B76C MOV X20, X0
	0x03D2B770 BL 0x3D27DAC
	0x03D2B774 B 0x3D2B798
	0x03D2B778 ADRP X8, 0x439000
	0x03D2B77C LDR X8, [X8 + 0x9E8]
	0x03D2B780 LDR X0, [X8]
	0x03D2B784 BL 0x1C16F10
	0x03D2B788 MOVZ W1, 0x40
	0x03D2B78C MOVZ W2, 0x1000
	0x03D2B790 MOV X20, X0
	0x03D2B794 BL 0x3D27BD8
	0x03D2B798 STR X20, [X19]
	0x03D2B79C LDR X0, [X21]
	0x03D2B7A0 LDR W8, [X0 + 0xE0]
	0x03D2B7A4 CBNZ W8, 0x3D2B7AC
	0x03D2B7A8 BL 0x1C16DFC
	0x03D2B7AC CBZ X20, 0x3D2BA20
	0x03D2B7B0 LDR X8, [X20]
	0x03D2B7B4 LDP W10, W9, [X19 + 0x20]
	0x03D2B7B8 ADD X3, X31, 0xC0
	0x03D2B7BC MOV X0, X20
	0x03D2B7C0 LDP X11, X4, [X8 + 0x198]
	0x03D2B7C4 UBFM W1, W10, 0x1B, 0x1A
	0x03D2B7C8 UBFM W2, W9, 0x1D, 0x1C
	0x03D2B7CC BLR X11
	0x03D2B7D0 LDR X0, [X19]
	0x03D2B7D4 CBZ X0, 0x3D2BA20
	0x03D2B7D8 LDR X8, [X0]
	0x03D2B7DC LDP W10, W9, [X19 + 0x40]
	0x03D2B7E0 ADD X3, X31, 0xB0
	0x03D2B7E4 LDP X11, X4, [X8 + 0x198]
	0x03D2B7E8 UBFM W1, W10, 0x1B, 0x1A
	0x03D2B7EC UBFM W2, W9, 0x1D, 0x1C
	0x03D2B7F0 BLR X11
	0x03D2B7F4 LDR X0, [X19]
	0x03D2B7F8 CBZ X0, 0x3D2BA20
	0x03D2B7FC LDR X8, [X0]
	0x03D2B800 LDP W10, W9, [X19 + 0x60]
	0x03D2B804 ADD X3, X31, 0xA0
	0x03D2B808 LDP X11, X4, [X8 + 0x198]
	0x03D2B80C UBFM W1, W10, 0x1B, 0x1A
	0x03D2B810 UBFM W2, W9, 0x1D, 0x1C
	0x03D2B814 BLR X11
	0x03D2B818 LDR X0, [X19]
	0x03D2B81C CBZ X0, 0x3D2BA20
	0x03D2B820 LDR X8, [X0]
	0x03D2B824 LDP W10, W9, [X19 + 0x80]
	0x03D2B828 ADD X3, X31, 0x90
	0x03D2B82C LDP X11, X4, [X8 + 0x198]
	0x03D2B830 UBFM W1, W10, 0x1B, 0x1A
	0x03D2B834 UBFM W2, W9, 0x1D, 0x1C
	0x03D2B838 BLR X11
	0x03D2B83C LDR X0, [X19]
	0x03D2B840 CBZ X0, 0x3D2BA20
	0x03D2B844 LDR X8, [X0]
	0x03D2B848 LDP W10, W9, [X19 + 0xA0]
	0x03D2B84C ADD X3, X31, 0x80
	0x03D2B850 ADD X20, X19, 0x8
	0x03D2B854 LDP X11, X4, [X8 + 0x198]
	0x03D2B858 UBFM W1, W10, 0x1B, 0x1A
	0x03D2B85C UBFM W2, W9, 0x1D, 0x1C
	0x03D2B860 BLR X11

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6BD000
	009 Move X22, 0x3C9000
	010 Move W8, [X21+2782]
	011 Move X22, [X22+2600]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x3C9000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0x43A000
	022 Move X0, [X0+2920]
	023 Call 0x1C17CF4
	024 Move X0, 0x42E000
	025 Move X0, [X0+2144]
	026 Call 0x1C17CF4
	027 Move X0, 0x43A000
	028 Move X0, [X0+2936]
	029 Call 0x1C17CF4
	030 Move X0, 0x43A000
	031 Move X0, [X0+2944]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+2782], W8
	035 Move X0, [X22]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X8, X19
	041 ShiftRight X8, 56
	042 And X8, X8, 0x7FFFFFFF
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSET not yet implemented."
	045 Move X1, X31
	046 Call Debug.Assert, X0
	047 Move X21, [X20+16]
	048 Compare X21, 0
	049 JumpIfEqual {101}
	050 Move X10, 0x42E000
	051 Move W9, [X20]
	052 Move X10, [X10+2144]
	053 Move X24, 0x43A000
	054 Move X8, X19
	055 ShiftRight X8, 32
	056 And X8, X8, 0x7FFFFFFF
	057 Multiply W9, W9, W19
	058 Move X2, [X10]
	059 Move X24, [X24+2944]
	060 Add W22, W9, W8
	061 Move X0, X21
	062 Move W1, W22
	063 Move X23, X19
	064 ShiftRight X23, 48
	065 And X23, X23, 0x7FFFFFFF
	066 Call List`1<UInt32>.get_Item, X0, X1
	067 Move X3, [X24]
	068 Move W8, 1
	069 NotImplemented "Instruction LSLV not yet implemented."
	070 Or W2, W0, W8
	071 Move X0, X21
	072 Move W1, W22
	073 Call List`1<UInt32>.set_Item, X0, X1, X2
	074 Move X0, [X20+8]
	075 Compare X0, 0
	076 JumpIfEqual {101}
	077 Move X8, 0x43A000
	078 Move X8, [X8+2920]
	079 Move W1, W19
	080 Move X2, [X8]
	081 Call List`1<Page>.get_Item, X0, X1
	082 Move X8, [X20+8]
	083 Compare X8, 0
	084 JumpIfEqual {101}
	085 Move X9, 0x43A000
	086 Move X9, [X9+2936]
	087 Move W1, W19
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X3, [X9]
	093 Move X24, [X31+16]
	094 Move X23, [X31+24]
	095 Move X9, 1
	096 Add X2, X0, X9
	097 Move X0, X8
	098 Move X30, [X31+64]
	099 Call List`1<Page>.set_Item, X0, X1, X2
	100 Return 
	101 Call 0x1C17F20

Method: System.Int32 get_entryWidth()

Disassembly:
	0x03D2B864 LDR X8, [X21]
	0x03D2B868 LDP X2, X3, [X31 + 0xC0]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Int32 get_entryHeight()

Disassembly:
	0x03D2B86C MOV X0, X20
	0x03D2B870 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move W0, [X0+28]
	002 Return X0

Method: System.Void GetAllocPageAtlasLocation(System.Int32 page, out System.UInt16 x, out System.UInt16 y)

Disassembly:
	0x03D2B874 LDR X1, [X8 + 0x108]
	0x03D2B878 BL 0x3D2A9AC
	0x03D2B87C TBZ X0, 0x0, 0x3D2BA24
	0x03D2B880 LDR X0, [X21]
	0x03D2B884 ADD X20, X19, 0x28
	0x03D2B888 LDR W8, [X0 + 0xE0]
	0x03D2B88C CBNZ W8, 0x3D2B898
	0x03D2B890 BL 0x1C16DFC
	0x03D2B894 LDR X0, [X21]
	0x03D2B898 LDR X8, [X0 + 0xB8]
	0x03D2B89C LDP X2, X3, [X31 + 0xB0]
	0x03D2B8A0 MOV X0, X20
	0x03D2B8A4 LDR X1, [X8 + 0x110]
	0x03D2B8A8 BL 0x3D2A9AC
	0x03D2B8AC TBZ X0, 0x0, 0x3D2BA44
	0x03D2B8B0 LDR X0, [X21]
	0x03D2B8B4 ADD X20, X19, 0x48
	0x03D2B8B8 LDR W8, [X0 + 0xE0]
	0x03D2B8BC CBNZ W8, 0x3D2B8C8
	0x03D2B8C0 BL 0x1C16DFC
	0x03D2B8C4 LDR X0, [X21]
	0x03D2B8C8 LDR X8, [X0 + 0xB8]
	0x03D2B8CC LDP X2, X3, [X31 + 0xA0]
	0x03D2B8D0 MOV X0, X20
	0x03D2B8D4 LDR X1, [X8 + 0x118]
	0x03D2B8D8 BL 0x3D2A9AC
	0x03D2B8DC TBZ X0, 0x0, 0x3D2BA64
	0x03D2B8E0 LDR X0, [X21]
	0x03D2B8E4 ADD X20, X19, 0x68
	0x03D2B8E8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x6BD000
	008 Move W8, [X23+2783]
	009 Move X19, X3
	010 Move X20, X2
	011 Move W21, W1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x43A000
	018 Move X0, [X0+2920]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+2783], W8
	022 Move X0, [X22+8]
	023 Compare X0, 0
	024 JumpIfEqual {42}
	025 Move X8, 0x43A000
	026 Move X8, [X8+2920]
	027 Move W1, W21
	028 Move X2, [X8]
	029 Call List`1<Page>.get_Item, X0, X1
	030 Move X8, X0
	031 ShiftRight X8, 16
	032 And X8, X8, 0x7FFFFFFF
	033 NotImplemented "Instruction STRH not yet implemented."
	034 NotImplemented "Instruction STRH not yet implemented."
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Return 
	042 Call 0x1C17F20

Method: System.Byte CountTrailingZeroes(System.UInt32 val)

Disassembly:
	0x03D2B6BC LDR X0, [X21]
	0x03D2B6C0 LDR X8, [X0 + 0xB8]
	0x03D2B6C4 LDR X1, [X19]
	0x03D2B6C8 ADD X0, X8, 0x48
	0x03D2B6CC BL 0x242D58C
	0x03D2B6D0 LDP X20, X19, [X31 + 0x20]
	0x03D2B6D4 LDP X30, X21, [X31 + 0x10]
	0x03D2B6D8 AND W0, W0, 0x1
	0x03D2B6DC ADD X31, X31, 0x30
	0x03D2B6E0 RET
	0x03D2B6E4 BL 0x1C16F20
	0x03D2B6E8 SUB X31, X31, 0xF0
	0x03D2B6EC STP X30, X21, [X31 + 0xD0]
	0x03D2B6F0 STP X20, X19, [X31 + 0xE0]
	0x03D2B6F4 ADRP X20, 0x6BC000
	0x03D2B6F8 LDRB W8, [X20 + 0xAE6]
	0x03D2B6FC MOV X19, X0
	0x03D2B700 TBNZ X8, 0x0, 0x3D2B730
	0x03D2B704 ADRP X0, 0x439000
	0x03D2B708 LDR X0, [X0 + 0x9E8]
	0x03D2B70C BL 0x1C16CF4
	0x03D2B710 ADRP X0, 0x439000
	0x03D2B714 LDR X0, [X0 + 0xA10]
	0x03D2B718 BL 0x1C16CF4
	0x03D2B71C ADRP X0, 0x439000

ISIL:
	001 And W31, W0, 0xFFFF
	002 Move W8, W0
	003 ShiftRight W8, 16
	004 And W8, W8, 0x7FFFFFFF
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Move W9, 8
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Move W12, W8
	009 ShiftRight W12, 8
	010 And W12, W12, 0x7FFFFFFF
	011 And W31, W8, 255
	012 Move W11, W10
	013 ShiftRight W11, 28
	014 And W11, W11, 0x7FFFFFF
	015 NotImplemented "Instruction BFM not yet implemented."
	016 NotImplemented "Instruction CSEL not yet implemented."
	017 NotImplemented "Instruction CSEL not yet implemented."
	018 Move W10, W8
	019 ShiftRight W10, 4
	020 And W10, W10, 0x7FFFFFFF
	021 And W31, W8, 15
	022 Or W11, W9, 4
	023 NotImplemented "Instruction CSEL not yet implemented."
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 Move W10, W8
	026 ShiftRight W10, 2
	027 And W10, W10, 0x7FFFFFFF
	028 And W31, W8, 3
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Or W11, W9, 2
	031 NotImplemented "Instruction ORN not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 And W8, W8, 1
	034 Add W0, W8, W9
	035 Return X0

