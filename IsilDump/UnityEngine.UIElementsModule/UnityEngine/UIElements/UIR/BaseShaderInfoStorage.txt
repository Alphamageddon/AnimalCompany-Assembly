Type: UnityEngine.UIElements.UIR.BaseShaderInfoStorage

Method: UnityEngine.Texture2D get_texture()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean AllocateRect(System.Int32 width, System.Int32 height, out UnityEngine.RectInt uvs)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void SetTexel(System.Int32 x, System.Int32 y, UnityEngine.Color color)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void UpdateTexture()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean get_disposed()

Disassembly:
	0x03D28A4C BL 0x3C396B0
	0x03D28A50 ORR W1, W0, 0x4

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_disposed(System.Boolean value)

Disassembly:
	0x03D28A54 MOV X0, X21
	0x03D28A58 MOV X2, X31
	0x03D28A5C BL 0x3C396EC

ISIL:
	001 And W8, W1, 1
	002 Move [X0+16], W8
	003 Return 

Method: System.Void Dispose()

Disassembly:
	0x03D28A60 ADRP X22, 0x3F4000
	0x03D28A64 LDR X8, [X19 + 0x20]
	0x03D28A68 LDR X22, [X22 + 0x820]
	0x03D28A6C CBNZ X8, 0x3D28A90
	0x03D28A70 ADRP X8, 0x428000
	0x03D28A74 LDR X8, [X8 + 0x590]
	0x03D28A78 LDR X0, [X8]
	0x03D28A7C BL 0x1C16F10
	0x03D28A80 MOV X1, X31
	0x03D28A84 MOV X21, X0
	0x03D28A88 BL 0x3C122EC
	0x03D28A8C STR X21, [X19 + 0x20]
	0x03D28A90 LDR X0, [X22]
	0x03D28A94 LDR W8, [X0 + 0xE0]
	0x03D28A98 CBNZ W8, 0x3D28AA0
	0x03D28A9C BL 0x1C16DFC
	0x03D28AA0 MOV X0, X31
	0x03D28AA4 BL 0x3D1FAE8
	0x03D28AA8 STP X0, X1, [X19 + 0x28]
	0x03D28AAC MOV X0, X31
	0x03D28AB0 BL 0x3C20834
	0x03D28AB4 STR X0, [X19 + 0x38]
	0x03D28AB8 CBZ X20, 0x3D28B3C
	0x03D28ABC LDR X8, [X20]
	0x03D28AC0 ADRP X22, 0x3CF000
	0x03D28AC4 MOV X0, X20
	0x03D28AC8 LDP X9, X1, [X8 + 0x188]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6C0000
	006 Move X20, 0x3D3000
	007 Move W8, [X21+2750]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3D3000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2750], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+456]
	023 Move X2, [X8+464]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03D28ACC LDR X22, [X22 + 0x2C8]
	0x03D28AD0 BLR X9
	0x03D28AD4 LDR X8, [X20]
	0x03D28AD8 MOV W21, W0
	0x03D28ADC MOV X0, X20
	0x03D28AE0 LDP X9, X1, [X8 + 0x1A8]

ISIL:
	001 Move W8, [X0+16]
	002 Compare W8, 0
	003 JumpIfEqual {5}
	004 Return 
	005 Move W8, 1
	006 Move [X0+16], W8
	007 Return 

Method: System.Void .ctor()

Disassembly:
	0x03D28AE4 BLR X9
	0x03D28AE8 SCVTF S1, W21

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x03D28AEC SCVTF S3, W0
	0x03D28AF0 FMOV S0, W31
	0x03D28AF4 FMOV S2, W31
	0x03D28AF8 MOV X0, X31
	0x03D28AFC BL 0x3C10284
	0x03D28B00 LDR X0, [X22]
	0x03D28B04 LDR W8, [X0 + 0xE0]
	0x03D28B08 CBNZ W8, 0x3D28B10
	0x03D28B0C BL 0x1C16DFC
	0x03D28B10 MOV X0, X20
	0x03D28B14 MOV X1, X31
	0x03D28B18 BL 0x3C0FBB0
	0x03D28B1C LDR X0, [X19 + 0x18]
	0x03D28B20 CBZ X0, 0x3D28B3C
	0x03D28B24 LDP X20, X19, [X31 + 0x20]
	0x03D28B28 LDP X22, X21, [X31 + 0x10]
	0x03D28B2C MOV W1, W31
	0x03D28B30 MOV X2, X31
	0x03D28B34 LDR X30, [X31], #0x30
	0x03D28B38 B 0x3C1518C
	0x03D28B3C BL 0x1C16F20
	0x03D28B40 SUB X31, X31, 0x110
	0x03D28B44 STP D15, D14, [X31 + 0x70]
	0x03D28B48 STP D13, D12, [X31 + 0x80]
	0x03D28B4C STP D11, D10, [X31 + 0x90]
	0x03D28B50 STP D9, D8, [X31 + 0xA0]
	0x03D28B54 STP X29, X30, [X31 + 0xB0]
	0x03D28B58 STP X28, X27, [X31 + 0xC0]
	0x03D28B5C STP X26, X25, [X31 + 0xD0]
	0x03D28B60 STP X24, X23, [X31 + 0xE0]
	0x03D28B64 STP X22, X21, [X31 + 0xF0]
	0x03D28B68 STP X20, X19, [X31 + 0x100]
	0x03D28B6C ADRP X19, 0x6BF000
	0x03D28B70 LDRB W8, [X19 + 0xACF]
	0x03D28B74 MOV W27, W2
	0x03D28B78 MOV X20, X1
	0x03D28B7C MOV X21, X0
	0x03D28B80 TBNZ X8, 0x0, 0x3D28BC8
	0x03D28B84 ADRP X0, 0x43C000
	0x03D28B88 LDR X0, [X0 + 0xAE0]
	0x03D28B8C BL 0x1C16CF4
	0x03D28B90 ADRP X0, 0x43C000
	0x03D28B94 LDR X0, [X0 + 0xAE8]
	0x03D28B98 BL 0x1C16CF4
	0x03D28B9C ADRP X0, 0x3CB000
	0x03D28BA0 LDR X0, [X0 + 0x598]
	0x03D28BA4 BL 0x1C16CF4
	0x03D28BA8 ADRP X0, 0x43C000
	0x03D28BAC LDR X0, [X0 + 0xAB8]
	0x03D28BB0 BL 0x1C16CF4
	0x03D28BB4 ADRP X0, 0x3F4000
	0x03D28BB8 LDR X0, [X0 + 0x820]
	0x03D28BBC BL 0x1C16CF4
	0x03D28BC0 MOVZ W8, 0x1
	0x03D28BC4 STRB W8, [X19 + 0xACF]
	0x03D28BC8 CBZ X20, 0x3D290D8
	0x03D28BCC ADRP X10, 0x43C000
	0x03D28BD0 LDR X8, [X20]
	0x03D28BD4 LDR X10, [X10 + 0xAE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x6C0000
	008 Move X23, 0x43D000
	009 Move X19, 0x3F6000
	010 Move X21, 0x43D000
	011 Move X20, 0x43D000
	012 Move W8, [X22+2751]
	013 Move X23, [X23+2512]
	014 Move X19, [X19+568]
	015 Move X21, [X21+2520]
	016 Move X20, [X20+2528]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x3F6000
	022 Move X0, [X0+568]
	023 Call 0x1C17CF4
	024 Move X0, 0x43D000
	025 Move X0, [X0+2520]
	026 Call 0x1C17CF4
	027 Move X0, 0x43D000
	028 Move X0, [X0+2528]
	029 Call 0x1C17CF4
	030 Move X0, 0x43D000
	031 Move X0, [X0+2512]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+2751], W8
	035 Move X0, [X23]
	036 Move W1, 1
	037 Move W2, W31
	038 Move W3, W31
	039 Move X4, X31
	040 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	041 Move X8, [X19]
	042 Move W1, 1
	043 Move W2, W31
	044 Move W3, W31
	045 Move X8, [X8+184]
	046 Move X4, X31
	047 Move [X8+8], X0
	048 Move X0, [X21]
	049 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	050 Move X8, [X19]
	051 Move W1, 1
	052 Move W2, W31
	053 Move W3, W31
	054 Move X8, [X8+184]
	055 Move X4, X31
	056 Move [X8+16], X0
	057 Move X0, [X20]
	058 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	059 Move X8, [X19]
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X8, [X8+184]
	065 Move [X8+24], X0
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Return 

