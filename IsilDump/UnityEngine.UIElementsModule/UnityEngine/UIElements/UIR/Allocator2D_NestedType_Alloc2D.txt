Type: UnityEngine.UIElements.UIR.Allocator2D/Alloc2D

Method: System.Void .ctor(UnityEngine.UIElements.UIR.Allocator2D/Row row, UnityEngine.UIElements.UIR.Alloc alloc, System.Int32 width, System.Int32 height)

Disassembly:
	0x03D21A14 LDRB W8, [X21 + 0xA7A]
	0x03D21A18 LDR X22, [X22 + 0x4B0]
	0x03D21A1C LDR X19, [X19 + 0x4A0]
	0x03D21A20 LDR X20, [X20 + 0x4B8]
	0x03D21A24 TBNZ X8, 0x0, 0x3D21A54
	0x03D21A28 ADRP X0, 0x443000
	0x03D21A2C LDR X0, [X0 + 0x4A0]
	0x03D21A30 BL 0x1C16CF4
	0x03D21A34 ADRP X0, 0x443000
	0x03D21A38 LDR X0, [X0 + 0x4B8]
	0x03D21A3C BL 0x1C16CF4
	0x03D21A40 ADRP X0, 0x443000
	0x03D21A44 LDR X0, [X0 + 0x4B0]
	0x03D21A48 BL 0x1C16CF4
	0x03D21A4C MOVZ W8, 0x1
	0x03D21A50 STRB W8, [X21 + 0xA7A]
	0x03D21A54 LDR X0, [X22]
	0x03D21A58 MOVZ W1, 0x1
	0x03D21A5C MOV W2, W31
	0x03D21A60 MOV W3, W31
	0x03D21A64 MOV X4, X31
	0x03D21A68 BL 0x3BFE7FC
	0x03D21A6C LDR X8, [X19]
	0x03D21A70 MOVZ W1, 0x1
	0x03D21A74 MOV W2, W31
	0x03D21A78 MOV W3, W31
	0x03D21A7C LDR X8, [X8 + 0xB8]
	0x03D21A80 MOV X4, X31
	0x03D21A84 STR X0, [X8]
	0x03D21A88 LDR X0, [X20]
	0x03D21A8C BL 0x3BFE7FC
	0x03D21A90 LDR X8, [X19]
	0x03D21A94 LDP X20, X19, [X31 + 0x20]
	0x03D21A98 LDP X22, X21, [X31 + 0x10]
	0x03D21A9C LDR X8, [X8 + 0xB8]
	0x03D21AA0 STR X0, [X8 + 0x8]
	0x03D21AA4 LDR X30, [X31], #0x30
	0x03D21AA8 RET
	0x03D21AAC STP X30, X21, [X31 - 0x20]!
	0x03D21AB0 STP X20, X19, [X31 + 0x10]
	0x03D21AB4 ADRP X21, 0x6C6000
	0x03D21AB8 LDRB W8, [X21 + 0xA7C]
	0x03D21ABC MOV X19, X1
	0x03D21AC0 MOV X20, X0
	0x03D21AC4 TBNZ X8, 0x0, 0x3D21ADC
	0x03D21AC8 ADRP X0, 0x443000
	0x03D21ACC LDR X0, [X0 + 0x4C0]
	0x03D21AD0 BL 0x1C16CF4
	0x03D21AD4 MOVZ W8, 0x1
	0x03D21AD8 STRB W8, [X21 + 0xA7C]
	0x03D21ADC LDR X0, [X20 + 0x10]
	0x03D21AE0 CBZ X0, 0x3D21B00
	0x03D21AE4 ADRP X8, 0x443000
	0x03D21AE8 LDR X8, [X8 + 0x4C0]
	0x03D21AEC MOV X1, X19
	0x03D21AF0 LDP X20, X19, [X31 + 0x10]
	0x03D21AF4 LDR X2, [X8]
	0x03D21AF8 LDP X30, X21, [X31], #0x20
	0x03D21AFC B 0x24032C4
	0x03D21B00 BL 0x1C16F20
	0x03D21B04 STP X30, X21, [X31 - 0x20]!
	0x03D21B08 STP X20, X19, [X31 + 0x10]
	0x03D21B0C ADRP X21, 0x6C6000
	0x03D21B10 LDRB W8, [X21 + 0xA7D]
	0x03D21B14 MOV X19, X1
	0x03D21B18 MOV X20, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X2+16]
	011 Move V0, [X2]
	012 Move [X0+16], X1
	013 Move [X0+40], X8
	014 Move [X0+24], V0
	015 Compare X1, 0
	016 JumpIfEqual {81}
	017 Move X24, 0x6C4000
	018 Move W8, [X24+3467]
	019 Move W19, W4
	020 Move W20, W3
	021 Move X23, X2
	022 Move X22, X1
	023 Move X21, X0
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x3D3000
	027 Move X0, [X0+1448]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+3467], W8
	031 Move X25, 0x3D3000
	032 Move X25, [X25+1448]
	033 Move W24, [X22+24]
	034 Move W26, [X22+32]
	035 Move X0, [X25]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Add W1, W26, W24
	041 Move W0, W24
	042 Move X2, X31
	043 Call Math.Min, X0, X1
	044 Move X24, 0x6C4000
	045 Move W8, [X24+3468]
	046 Move W26, [X23]
	047 Move W23, W0
	048 Compare W8, 0
	049 JumpIfNotEqual {55}
	050 Move X0, 0x3D3000
	051 Move X0, [X0+1448]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X24+3468], W8
	055 Move X0, [X25]
	056 Move W24, [X22+28]
	057 Move W22, [X22+36]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Add W1, W22, W24
	063 Move W0, W24
	064 Move X2, X31
	065 Call Math.Min, X0, X1
	066 Add W8, W26, W23
	067 Move [X21], W8
	068 Move [X21+4], W0
	069 Move [X21+8], W20
	070 Move [X21+12], W19
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X24, [X31+32]
	076 Move X23, [X31+40]
	077 Move X26, [X31+16]
	078 Move X25, [X31+24]
	079 Move X30, [X31+80]
	080 Return 
	081 Call 0x1C17F20

