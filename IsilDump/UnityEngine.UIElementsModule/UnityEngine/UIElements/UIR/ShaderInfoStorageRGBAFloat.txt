Type: UnityEngine.UIElements.UIR.ShaderInfoStorageRGBAFloat

Method: System.Void .ctor(System.Int32 initialSize = 64, System.Int32 maxSize = 4096)

Disassembly:
	0x03D28DAC LDRH W9, [X8 + 0x12E]
	0x03D28DB0 LDR X10, [X10 + 0xAE8]
	0x03D28DB4 LDR X1, [X10]
	0x03D28DB8 CBZ X9, 0x3D28DDC
	0x03D28DBC LDR X10, [X8 + 0xB0]
	0x03D28DC0 ADD X10, X10, 0x8
	0x03D28DC4 LDUR X11, [X10 - 0x8]
	0x03D28DC8 CMP X11, X1
	0x03D28DCC B.EQ 0x3D28DEC
	0x03D28DD0 SUBS X9, X9, 0x1
	0x03D28DD4 ADD X10, X10, 0x10
	0x03D28DD8 B.NE 0x3D28DC4
	0x03D28DDC MOV X0, X20
	0x03D28DE0 MOV W2, W31
	0x03D28DE4 BL 0x1C5C788
	0x03D28DE8 B 0x3D28DF8
	0x03D28DEC LDRSW X9, [X10]
	0x03D28DF0 ADD X8, X8, X9, 0x4, LSL
	0x03D28DF4 ADD X0, X8, 0x138
	0x03D28DF8 LDP X9, X2, [X0]
	0x03D28DFC ADD X8, X31, 0x38
	0x03D28E00 MOV X0, X20
	0x03D28E04 MOV W1, W27
	0x03D28E08 BLR X9
	0x03D28E0C LDR X25, [X31 + 0x38]
	0x03D28E10 CBZ X25, 0x3D290D8
	0x03D28E14 LDP W21, W8, [X31 + 0x48]
	0x03D28E18 LDP W23, W22, [X31 + 0x40]
	0x03D28E1C LDP W19, W20, [X31 + 0x50]
	0x03D28E20 LDR W29, [X31 + 0x58]
	0x03D28E24 STR W8, [X31 + 0x2C]
	0x03D28E28 LDR X8, [X25]
	0x03D28E2C LDP S15, S14, [X31 + 0x5C]
	0x03D28E30 LDP S11, S12, [X31 + 0x64]
	0x03D28E34 MOV X0, X25
	0x03D28E38 LDP X9, X1, [X8 + 0x188]
	0x03D28E3C BLR X9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x6C0000
	008 Move X22, 0x43D000
	009 Move W8, [X23+2755]
	010 Move X22, [X22+2576]
	011 Move W19, W2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x43D000
	019 Move X0, [X0+2576]
	020 Call 0x1C17CF4
	021 Move X0, 0x43D000
	022 Move X0, [X0+2584]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2755], W8
	026 Move X0, [X22]
	027 Move X23, 0x43D000
	028 Move W8, [X0+224]
	029 Move X23, [X23+2584]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X22]
	034 Move X8, [X0+184]
	035 Move X5, [X23]
	036 Move X0, X21
	037 Move W3, W20
	038 Move X2, [X8]
	039 Move W4, W19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move W1, 20
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Call 0x25E4F88, X0, X1, X2, X3, X4
	048 Return 

Method: System.Void .cctor()

Disassembly:
	0x03D28E40 LDR X8, [X25]
	0x03D28E44 STR W0, [X31 + 0x34]
	0x03D28E48 MOV X0, X25
	0x03D28E4C LDP X9, X1, [X8 + 0x1A8]
	0x03D28E50 BLR X9
	0x03D28E54 ADRP X8, 0x6BC000
	0x03D28E58 LDRB W8, [X8 + 0xD8D]
	0x03D28E5C STR W0, [X31 + 0x28]
	0x03D28E60 CBNZ W8, 0x3D28E78
	0x03D28E64 MOV X0, X24
	0x03D28E68 BL 0x1C16CF4
	0x03D28E6C ADRP X8, 0x6BC000
	0x03D28E70 MOVZ W9, 0x1
	0x03D28E74 STRB W9, [X8 + 0xD8D]
	0x03D28E78 LDR X0, [X24]
	0x03D28E7C LDR W8, [X0 + 0xE0]
	0x03D28E80 CBNZ W8, 0x3D28E88
	0x03D28E84 BL 0x1C16DFC
	0x03D28E88 ADD W1, W21, W23
	0x03D28E8C MOV W0, W23
	0x03D28E90 MOV X2, X31
	0x03D28E94 STR W27, [X31 + 0x30]
	0x03D28E98 BL 0x337EDF0
	0x03D28E9C ADRP X8, 0x6BC000
	0x03D28EA0 LDRB W8, [X8 + 0xD8E]
	0x03D28EA4 MOV W26, W0
	0x03D28EA8 CBNZ W8, 0x3D28EC0
	0x03D28EAC MOV X0, X24
	0x03D28EB0 BL 0x1C16CF4
	0x03D28EB4 MOVZ W8, 0x1
	0x03D28EB8 ADRP X9, 0x6BC000
	0x03D28EBC STRB W8, [X9 + 0xD8E]
	0x03D28EC0 LDR X0, [X24]
	0x03D28EC4 SUB W25, W19, W29
	0x03D28EC8 SUB W27, W20, W29
	0x03D28ECC SUB W24, W23, W29
	0x03D28ED0 LDR W8, [X0 + 0xE0]
	0x03D28ED4 SUB W23, W22, W29
	0x03D28ED8 CBNZ W8, 0x3D28EE0
	0x03D28EDC BL 0x1C16DFC
	0x03D28EE0 LDR W8, [X31 + 0x34]
	0x03D28EE4 SCVTF S2, W27
	0x03D28EE8 ADD W10, W26, W29
	0x03D28EEC FMOV S4, 1
	0x03D28EF0 SCVTF S0, W8
	0x03D28EF4 LDP W8, W11, [X31 + 0x28]
	0x03D28EF8 STR S2, [X31 + 0x34]
	0x03D28EFC SCVTF S2, W24
	0x03D28F00 SCVTF S3, W23

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x6C0000
	007 Move X19, 0x43D000
	008 Move W8, [X20+2756]
	009 Move X19, [X19+2592]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x43D000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x43D000
	018 Move X0, [X0+2576]
	019 Call 0x1C17CF4
	020 Move X0, 0x43D000
	021 Move X0, [X0+2608]
	022 Call 0x1C17CF4
	023 Move X0, 0x43D000
	024 Move X0, [X0+2592]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2756], W8
	028 Move X0, [X19]
	029 Move X22, 0x43D000
	030 Move X20, 0x43D000
	031 Move X21, 0x43D000
	032 Move W8, [X0+224]
	033 Move X22, [X22+2600]
	034 Move X20, [X20+2608]
	035 Move X21, [X21+2576]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X19]
	040 Move X8, [X0+184]
	041 Move X0, [X22]
	042 Move X19, [X8]
	043 Call 0x1C17F10
	044 Move X2, [X20]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X20, X0
	048 Call Func`2<Color, Color>..ctor, X0, X1, X2
	049 Move X8, [X21]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X8, [X8+184]
	053 Move [X8], X20
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X30, [X31+48]
	057 Return 

