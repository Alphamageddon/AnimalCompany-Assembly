Type: UnityEngine.UIElements.UIR.Implementation.RenderEvents

Method: System.Void ProcessOnClippingChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)

Disassembly:
	0x03D3950C STR X31, [X31 + 0x98]
	0x03D39510 CBZ X22, 0x3D39890
	0x03D39514 LDR W8, [X22 + 0xC4]
	0x03D39518 CMP W8, W21
	0x03D3951C B.EQ 0x3D397E8
	0x03D39520 LDR W8, [X19 + 0x18]
	0x03D39524 MOV X1, X31
	0x03D39528 ADD W8, W8, 0x1
	0x03D3952C STR W8, [X19 + 0x18]
	0x03D39530 LDR X0, [X22 + 0x160]
	0x03D39534 LDR W28, [X22 + 0xC0]
	0x03D39538 BL 0x3D2795C
	0x03D3953C TBZ X0, 0x0, 0x3D395B4
	0x03D39540 CBZ X23, 0x3D39890
	0x03D39544 ADRP X8, 0x42B000
	0x03D39548 LDR X8, [X8 + 0x778]
	0x03D3954C LDR X26, [X22 + 0x160]
	0x03D39550 ADD X27, X23, 0x140
	0x03D39554 LDR X0, [X8]
	0x03D39558 LDR W8, [X0 + 0xE0]
	0x03D3955C CBNZ W8, 0x3D39564
	0x03D39560 BL 0x1C16DFC
	0x03D39564 MOV X0, X22
	0x03D39568 BL 0x3D39FDC
	0x03D3956C ADRP X8, 0x42B000
	0x03D39570 LDR X8, [X8 + 0x760]
	0x03D39574 MOV V8.16B, V0.16B
	0x03D39578 MOV V9.16B, V1.16B
	0x03D3957C MOV V10.16B, V2.16B
	0x03D39580 LDR X0, [X8]
	0x03D39584 MOV V11.16B, V3.16B
	0x03D39588 LDR W8, [X0 + 0xE0]
	0x03D3958C CBNZ W8, 0x3D39594
	0x03D39590 BL 0x1C16DFC
	0x03D39594 MOV X0, X27
	0x03D39598 MOV X1, X26
	0x03D3959C MOV V0.16B, V8.16B
	0x03D395A0 MOV V1.16B, V9.16B
	0x03D395A4 MOV V2.16B, V10.16B
	0x03D395A8 MOV V3.16B, V11.16B
	0x03D395AC MOV X2, X31
	0x03D395B0 BL 0x3D2BD28
	0x03D395B4 ORR W8, W28, W24, 0x0
	0x03D395B8 AND W24, W8, 0x1
	0x03D395BC CBZ W24, 0x3D39614
	0x03D395C0 ADRP X26, 0x42B000
	0x03D395C4 LDR X26, [X26 + 0x778]
	0x03D395C8 LDR X0, [X26]
	0x03D395CC LDR W8, [X0 + 0xE0]
	0x03D395D0 CBNZ W8, 0x3D395D8
	0x03D395D4 BL 0x1C16DFC
	0x03D395D8 MOV X0, X22
	0x03D395DC BL 0x3D3A6AC
	0x03D395E0 TBZ X0, 0x0, 0x3D395FC
	0x03D395E4 CBZ X23, 0x3D39890
	0x03D395E8 MOVZ W2, 0x1
	0x03D395EC MOV X0, X23
	0x03D395F0 MOV X1, X22

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X23, 0x6AF000
	011 Move W8, [X23+2908]
	012 Move X22, X3
	013 Move W19, W2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x42C000
	021 Move X0, [X0+1912]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2908], W8
	025 Compare X20, 0
	026 JumpIfEqual {75}
	027 Move W24, [X20+192]
	028 Move W8, 16
	029 Move W9, 8
	030 Add X0, X31, 40
	031 And W31, W24, 8
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move W9, [X22]
	034 Move X1, X31
	035 Add W9, W9, 1
	036 Move [X22], W9
	037 Move X8, [X20+888]
	038 Move [X31+40], X8
	039 Call Hierarchy.get_parent, X0
	040 Compare X21, 0
	041 JumpIfEqual {75}
	042 Move X8, 0x42C000
	043 Move X8, [X8+1912]
	044 Move X23, X0
	045 Move X25, [X21+272]
	046 Move X0, [X8]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move W4, W24
	052 ShiftRight W4, 3
	053 And W4, W4, 7
	054 Move W5, 1
	055 Move X0, X21
	056 Move X1, X23
	057 Move X2, X20
	058 Move W3, W19
	059 Move W6, W31
	060 Move W7, W31
	061 Move [X31+8], X25
	062 Move [X31+16], X22
	063 Move [X31], W31
	064 Call RenderEvents.DepthFirstOnClippingChanged, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	065 Move X20, [X31+96]
	066 Move X19, [X31+104]
	067 Move X22, [X31+80]
	068 Move X21, [X31+88]
	069 Move X24, [X31+64]
	070 Move X23, [X31+72]
	071 Move X30, [X31+48]
	072 Move X25, [X31+56]
	073 Add X31, X31, 112
	074 Return 
	075 Call 0x1C17F20

Method: System.Void ProcessOnOpacityChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)

Disassembly:
	0x03D39BDC CSET W0, NE
	0x03D39BE0 MOV X1, X31
	0x03D39BE4 BL 0x3C06E58
	0x03D39BE8 LDR X0, [X19 + 0x158]
	0x03D39BEC MOV X1, X31
	0x03D39BF0 BL 0x3D2795C
	0x03D39BF4 TBNZ X0, 0x0, 0x3D39C60
	0x03D39BF8 LDR X8, [X19 + 0x378]
	0x03D39BFC ADD X0, X31, 0x48
	0x03D39C00 MOV X1, X31
	0x03D39C04 STR X8, [X31 + 0x48]
	0x03D39C08 BL 0x3DF88DC
	0x03D39C0C CBZ X0, 0x3D39C60
	0x03D39C10 LDR X8, [X19 + 0x378]
	0x03D39C14 ADD X0, X31, 0x48
	0x03D39C18 MOV X1, X31
	0x03D39C1C STR X8, [X31 + 0x48]
	0x03D39C20 BL 0x3DF88DC
	0x03D39C24 CBZ X0, 0x3D39E8C
	0x03D39C28 ADRP X8, 0x42B000
	0x03D39C2C LDR X8, [X8 + 0x9C8]
	0x03D39C30 LDR X23, [X0 + 0x158]
	0x03D39C34 ADD X24, X19, 0x158
	0x03D39C38 LDR X8, [X8]
	0x03D39C3C LDR W9, [X8 + 0xE0]
	0x03D39C40 CBNZ W9, 0x3D39C4C
	0x03D39C44 MOV X0, X8
	0x03D39C48 BL 0x1C16DFC
	0x03D39C4C MOV X0, X24
	0x03D39C50 MOV X1, X23
	0x03D39C54 MOV X2, X31
	0x03D39C58 BL 0x3D29DEC
	0x03D39C5C TBZ X0, 0x0, 0x3D39E78
	0x03D39C60 MOVZ W23, 0x1
	0x03D39C64 LDR X0, [X28]
	0x03D39C68 LDR W8, [X0 + 0xE0]
	0x03D39C6C CBNZ W8, 0x3D39C74
	0x03D39C70 BL 0x1C16DFC
	0x03D39C74 MOV W0, W23
	0x03D39C78 MOV X1, X31
	0x03D39C7C BL 0x3C06E58
	0x03D39C80 ADRP X8, 0x3E3000
	0x03D39C84 LDR X8, [X8 + 0xEC8]
	0x03D39C88 LDR X9, [X19]
	0x03D39C8C LDR X8, [X8]
	0x03D39C90 LDRB W11, [X9 + 0x130]
	0x03D39C94 LDRB W10, [X8 + 0x130]
	0x03D39C98 CMP W11, W10
	0x03D39C9C B.CC 0x3D39CD0
	0x03D39CA0 LDR X9, [X9 + 0xC8]
	0x03D39CA4 ADD X9, X9, X10, 0x3, LSL
	0x03D39CA8 LDUR X9, [X9 - 0x8]
	0x03D39CAC CMP X9, X8
	0x03D39CB0 B.NE 0x3D39CD0
	0x03D39CB4 LDR X0, [X27]
	0x03D39CB8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x6AF000
	009 Move W8, [X23+2909]
	010 Move X19, X3
	011 Move W20, W2
	012 Move X21, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x42C000
	019 Move X0, [X0+1912]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2909], W8
	023 Compare X21, 0
	024 JumpIfEqual {70}
	025 Move W8, [X19+28]
	026 Move W23, [X21+192]
	027 Add X0, X31, 8
	028 Move X1, X31
	029 Add W8, W8, 1
	030 Move [X19+28], W8
	031 Move X8, [X21+888]
	032 Move [X31+8], X8
	033 Call Hierarchy.get_parent, X0
	034 Compare X0, 0
	035 JumpIfEqual {44}
	036 Move X8, [X21+888]
	037 Add X0, X31, 8
	038 Move X1, X31
	039 Move [X31+8], X8
	040 Call Hierarchy.get_parent, X0
	041 Compare X0, 0
	042 JumpIfEqual {70}
	043 Move V8, [X0+432]
	044 Move S8, 1
	045 Move X8, 0x42C000
	046 Move X8, [X8+1912]
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move W3, W23
	053 ShiftRight W3, 8
	054 And W3, W3, 255
	055 Move X0, X22
	056 Move V0, V8
	057 Move X1, X21
	058 Move W2, W20
	059 Move X4, X19
	060 Move W5, W31
	061 Call RenderEvents.DepthFirstOnOpacityChanged, X0, V0, X1, X2, X3, X4, X5
	062 Move X20, [X31+48]
	063 Move X19, [X31+56]
	064 Move X22, [X31+32]
	065 Move X21, [X31+40]
	066 Move X30, [X31+16]
	067 Move X23, [X31+24]
	068 Move V8, [X31+64]
	069 Return 
	070 Call 0x1C17F20

Method: System.Void ProcessOnColorChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)

Disassembly:
	0x03D3A100 MOV X1, X31
	0x03D3A104 BL 0x3DEE4D8
	0x03D3A108 MOVZ W8, 0xB717
	0x03D3A10C MOV V2.S[1], V3.S[0]
	0x03D3A110 MOV V0.S[1], V1.S[0]
	0x03D3A114 MOVK W8, 0x38D10000
	0x03D3A118 FADD V2.2S, V2.2S, V0.2S
	0x03D3A11C FSUB V3.2S, V2.2S, V0.2S
	0x03D3A120 FADD V0.2S, V0.2S, V2.2S
	0x03D3A124 UNIMPLEMENTED
	0x03D3A128 FMOV V1.2S, 0x0
	0x03D3A12C FADD V2.2S, V3.2S, V2.2S
	0x03D3A130 LDP X20, X19, [X31 + 0x30]
	0x03D3A134 LDP X30, X21, [X31 + 0x20]
	0x03D3A138 LDP D9, D8, [X31 + 0x10]
	0x03D3A13C UNIMPLEMENTED
	0x00000000 INVALID
	0x03D3A144 FADD V0.2S, V1.2S, V1.2S
	0x00000000 INVALID
	0x03D3A14C MOV S1, V0.S[1]
	0x03D3A150 MOV S3, V2.S[1]
	0x03D3A154 LDP D11, D10, [X31], #0x40
	0x03D3A158 RET
	0x03D3A15C BL 0x1C16F20
	0x03D3A160 SUB X31, X31, 0xE0
	0x03D3A164 STR X30, [X31 + 0x80]
	0x03D3A168 STP X28, X27, [X31 + 0x90]
	0x03D3A16C STP X26, X25, [X31 + 0xA0]
	0x03D3A170 STP X24, X23, [X31 + 0xB0]
	0x03D3A174 STP X22, X21, [X31 + 0xC0]
	0x03D3A178 STP X20, X19, [X31 + 0xD0]
	0x03D3A17C ADRP X24, 0x6AD000
	0x03D3A180 LDRB W8, [X24 + 0xB63]
	0x03D3A184 MOV W19, W4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x6AE000
	009 Move X23, 0x42B000
	010 Move W8, [X24+2910]
	011 Move X23, [X23+1912]
	012 Move X19, X3
	013 Move W20, W2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x42B000
	021 Move X0, [X0+1912]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2910], W8
	025 Move W8, [X19+40]
	026 Add W8, W8, 1
	027 Move [X19+40], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X22
	034 Move X1, X21
	035 Move W2, W20
	036 Move X3, X19
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X24, [X31+16]
	042 Move X23, [X31+24]
	043 Move X30, [X31+64]

Method: System.Void ProcessOnTransformOrSizeChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)

Disassembly:
	0x03D3A3CC CBNZ W8, 0x3D3A3D4
	0x03D3A3D0 BL 0x1C16DFC
	0x03D3A3D4 CMP X22, 0x0
	0x03D3A3D8 CSET W0, NE
	0x03D3A3DC MOV X1, X31
	0x03D3A3E0 BL 0x3C06E58
	0x03D3A3E4 CBZ X22, 0x3D3A6A8
	0x03D3A3E8 LDR X8, [X22 + 0x378]
	0x03D3A3EC ADD X0, X31, 0x88
	0x03D3A3F0 MOV W1, W23
	0x03D3A3F4 MOV X2, X31
	0x03D3A3F8 STR X8, [X31 + 0x88]
	0x03D3A3FC BL 0x3DF98E4
	0x03D3A400 LDR X8, [X25]
	0x03D3A404 MOV X23, X0
	0x03D3A408 LDR W9, [X8 + 0xE0]
	0x03D3A40C CBNZ W9, 0x3D3A418
	0x03D3A410 MOV X0, X8
	0x03D3A414 BL 0x1C16DFC
	0x03D3A418 MOV X0, X23
	0x03D3A41C BL 0x3D3A7D4
	0x03D3A420 STR X0, [X24]
	0x03D3A424 CBZ X0, 0x3D3A440
	0x03D3A428 LDR X8, [X0 + 0x90]
	0x03D3A42C STR X8, [X20 + 0x90]
	0x03D3A430 STR X20, [X0 + 0x90]
	0x03D3A434 LDR X8, [X20 + 0x90]
	0x03D3A438 CBNZ X8, 0x3D3A44C
	0x03D3A43C B 0x3D3A454
	0x03D3A440 MOV X8, X31
	0x03D3A444 STR X31, [X20 + 0x90]
	0x03D3A448 CBZ X8, 0x3D3A454
	0x03D3A44C CBZ X8, 0x3D3A6A8
	0x03D3A450 STR X20, [X8 + 0x88]
	0x03D3A454 LDR X0, [X20 + 0x158]
	0x03D3A458 MOV X1, X31
	0x03D3A45C BL 0x3D2795C
	0x03D3A460 LDR X8, [X27]
	0x03D3A464 MOV W23, W0
	0x03D3A468 LDR W9, [X8 + 0xE0]
	0x03D3A46C CBNZ W9, 0x3D3A478
	0x03D3A470 MOV X0, X8
	0x03D3A474 BL 0x1C16DFC
	0x03D3A478 ORN W8, W31, W23, 0x0
	0x03D3A47C AND W0, W8, 0x1
	0x03D3A480 MOV X1, X31
	0x03D3A484 BL 0x3C06E58

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x6AE000
	009 Move W8, [X23+2911]
	010 Move X19, X3
	011 Move W20, W2
	012 Move X21, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x42B000
	019 Move X0, [X0+1912]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2911], W8
	023 Move W8, [X19+20]
	024 Add W8, W8, 1
	025 Move [X19+20], W8
	026 Compare X21, 0
	027 JumpIfEqual {59}
	028 Move X8, [X21+888]
	029 Add X0, X31, 8
	030 Move X1, X31
	031 Move [X31+8], X8
	032 Call Hierarchy.get_parent, X0
	033 Compare X22, 0
	034 JumpIfEqual {59}
	035 Move X8, 0x42B000
	036 Move X8, [X8+1912]
	037 Move X23, [X22+272]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X22
	044 Move X2, X21
	045 Move W3, W20
	046 Move X4, X23
	047 Move W5, W31
	048 Move W6, W31
	049 Move X7, X19
	050 Call RenderEvents.DepthFirstOnTransformOrSizeChanged, X0, X1, X2, X3, X4, X5, X6, X7
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X30, [X31+16]
	056 Move X23, [X31+24]
	057 Add X31, X31, 64
	058 Return 
	059 Call 0x1C17F20

Method: System.Void ProcessOnVisualsChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)

Disassembly:
	0x03D3A894 MOV X1, X31
	0x03D3A898 BL 0x3DEC0F4
	0x03D3A89C UBFM W0, W0, 0x4, 0x4
	0x03D3A8A0 LDR X30, [X31], #0x10
	0x03D3A8A4 RET
	0x03D3A8A8 BL 0x1C16F20
	0x03D3A8AC STR X30, [X31 - 0x40]!
	0x03D3A8B0 STP X24, X23, [X31 + 0x10]
	0x03D3A8B4 STP X22, X21, [X31 + 0x20]
	0x03D3A8B8 STP X20, X19, [X31 + 0x30]
	0x03D3A8BC ADRP X20, 0x6AD000
	0x03D3A8C0 LDRB W8, [X20 + 0xB6F]
	0x03D3A8C4 MOV X21, X1
	0x03D3A8C8 MOV X19, X0
	0x03D3A8CC TBNZ X8, 0x0, 0x3D3A8FC
	0x03D3A8D0 ADRP X0, 0x42A000
	0x03D3A8D4 LDR X0, [X0 + 0x9C8]
	0x03D3A8D8 BL 0x1C16CF4
	0x03D3A8DC ADRP X0, 0x3E2000
	0x03D3A8E0 LDR X0, [X0 + 0x120]
	0x03D3A8E4 BL 0x1C16CF4
	0x03D3A8E8 ADRP X0, 0x42A000
	0x03D3A8EC LDR X0, [X0 + 0x760]
	0x03D3A8F0 BL 0x1C16CF4
	0x03D3A8F4 MOVZ W8, 0x1
	0x03D3A8F8 STRB W8, [X20 + 0xB6F]
	0x03D3A8FC CBZ X21, 0x3D3AF40
	0x03D3A900 ADRP X24, 0x42A000
	0x03D3A904 LDR X24, [X24 + 0x9C8]
	0x03D3A908 MOV X0, X21
	0x03D3A90C MOV X1, X31
	0x03D3A910 BL 0x3DE0EB8
	0x03D3A914 MOV X20, X0
	0x03D3A918 LDR X0, [X24]
	0x03D3A91C ADD X22, X21, 0x178
	0x03D3A920 LDR W8, [X0 + 0xE0]
	0x03D3A924 CBNZ W8, 0x3D3A92C
	0x03D3A928 BL 0x1C16DFC
	0x03D3A92C MOV X0, X22
	0x03D3A930 MOV X1, X31
	0x03D3A934 BL 0x3D279C8
	0x03D3A938 TBNZ X0, 0x0, 0x3D3A9E4
	0x03D3A93C CBZ X20, 0x3D3AF40
	0x03D3A940 ADRP X10, 0x3E2000
	0x03D3A944 LDR X8, [X20]
	0x03D3A948 LDR X10, [X10 + 0x120]
	0x03D3A94C LDRH W9, [X8 + 0x12E]
	0x03D3A950 LDR X1, [X10]
	0x03D3A954 CBZ X9, 0x3D3A978
	0x03D3A958 LDR X10, [X8 + 0xB0]
	0x03D3A95C ADD X10, X10, 0x8
	0x03D3A960 LDUR X11, [X10 - 0x8]
	0x03D3A964 CMP X11, X1
	0x03D3A968 B.EQ 0x3D3A988
	0x03D3A96C SUBS X9, X9, 0x1
	0x03D3A970 ADD X10, X10, 0x10
	0x03D3A974 B.NE 0x3D3A960
	0x03D3A978 MOVZ W2, 0xE
	0x03D3A97C MOV X0, X20
	0x03D3A980 BL 0x1C5C788
	0x03D3A984 B 0x3D3A998
	0x03D3A988 LDR W9, [X10]
	0x03D3A98C ADD W9, W9, 0xE
	0x03D3A990 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x6AE000
	011 Move W8, [X23+2912]
	012 Move X19, X3
	013 Move W20, W2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x42B000
	021 Move X0, [X0+1912]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2912], W8
	025 Compare X21, 0
	026 JumpIfEqual {81}
	027 Move W24, [X21+192]
	028 Move W8, 56
	029 Move W9, 48
	030 Move X25, 0x42B000
	031 And W31, W24, 32
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move W9, [X19]
	034 Add X0, X31, 8
	035 Move X1, X31
	036 Add W9, W9, 1
	037 Move [X19], W9
	038 Move X8, [X21+888]
	039 Move X25, [X25+1912]
	040 Move [X31+8], X8
	041 Call Hierarchy.get_parent, X0
	042 Move X23, X0
	043 Compare X0, 0
	044 JumpIfEqual {57}
	045 Move W8, [X23+233]
	046 Compare W8, 0
	047 JumpIfEqual {49}
	048 Move W23, 1
	049 Move X0, [X25]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X23
	055 Call RenderEvents.IsElementHierarchyHidden, X0
	056 And W23, W0, 1
	057 Move X0, [X25]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move W4, W24
	063 ShiftRight W4, 5
	064 And W4, W4, 31
	065 Move X0, X22
	066 Move X1, X21
	067 Move W2, W20
	068 Move W3, W23
	069 Move X5, X19
	070 Call RenderEvents.DepthFirstOnVisualsChanged, X0, X1, X2, X3, X4, X5
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X24, [X31+32]
	076 Move X23, [X31+40]
	077 Move X30, [X31+16]
	078 Move X25, [X31+24]
	079 Add X31, X31, 80
	080 Return 
	081 Call 0x1C17F20

Method: UnityEngine.Matrix4x4 GetTransformIDTransformInfo(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D3AE94 B 0x3D3AEA8
	0x03D3AE98 LDR W9, [X10]
	0x03D3AE9C ADD W9, W9, 0x25
	0x03D3AEA0 ADD X8, X8, W9, 0x4, SXTW
	0x03D3AEA4 ADD X0, X8, 0x138
	0x03D3AEA8 LDP X8, X1, [X0]
	0x03D3AEAC MOV X0, X20
	0x03D3AEB0 BLR X8
	0x03D3AEB4 FMOV S4, -1
	0x03D3AEB8 ADRP X8, 0xFFFFFFFFFCDAF000
	0x03D3AEBC FADD S0, S0, S4
	0x03D3AEC0 FADD S1, S1, S4
	0x03D3AEC4 FADD S2, S2, S4
	0x03D3AEC8 FADD S3, S3, S4
	0x03D3AECC LDR V4, [X8 + 0xF20]
	0x03D3AED0 FMUL S0, S0, S0
	0x03D3AED4 FMUL S1, S1, S1
	0x03D3AED8 FMUL S2, S2, S2
	0x03D3AEDC FADD S0, S0, S1
	0x03D3AEE0 FADD S0, S2, S0
	0x03D3AEE4 FMUL S1, S3, S3
	0x03D3AEE8 FADD S0, S1, S0
	0x03D3AEEC FCMP S0, S4
	0x03D3AEF0 B.MI 0x3D3AF28
	0x03D3AEF4 CBZ X19, 0x3D3AF40
	0x03D3AEF8 ADRP X8, 0x42A000
	0x03D3AEFC LDR X8, [X8 + 0x760]
	0x03D3AF00 ADD X19, X19, 0x140
	0x03D3AF04 LDR X0, [X8]
	0x03D3AF08 LDR W8, [X0 + 0xE0]
	0x03D3AF0C CBNZ W8, 0x3D3AF14
	0x03D3AF10 BL 0x1C16DFC
	0x03D3AF14 MOV X0, X19
	0x03D3AF18 MOV X1, X31
	0x03D3AF1C BL 0x3D2C70C
	0x03D3AF20 MOVZ W22, 0x1
	0x03D3AF24 STR X0, [X21]
	0x03D3AF28 MOV W0, W22
	0x03D3AF2C LDP X20, X19, [X31 + 0x30]
	0x03D3AF30 LDP X22, X21, [X31 + 0x20]
	0x03D3AF34 LDP X24, X23, [X31 + 0x10]
	0x03D3AF38 LDR X30, [X31], #0x40
	0x03D3AF3C RET
	0x03D3AF40 BL 0x1C16F20
	0x03D3AF44 STP D11, D10, [X31 - 0x60]!
	0x03D3AF48 STP D9, D8, [X31 + 0x10]
	0x03D3AF4C STP X30, X25, [X31 + 0x20]
	0x03D3AF50 STP X24, X23, [X31 + 0x30]
	0x03D3AF54 STP X22, X21, [X31 + 0x40]
	0x03D3AF58 STP X20, X19, [X31 + 0x50]
	0x03D3AF5C ADRP X20, 0x6AD000
	0x03D3AF60 LDRB W8, [X20 + 0xB70]
	0x03D3AF64 MOV X21, X1
	0x03D3AF68 MOV X19, X0
	0x03D3AF6C TBNZ X8, 0x0, 0x3D3AFA8
	0x03D3AF70 ADRP X0, 0x42A000
	0x03D3AF74 LDR X0, [X0 + 0x9C8]
	0x03D3AF78 BL 0x1C16CF4
	0x03D3AF7C ADRP X0, 0x3E2000
	0x03D3AF80 LDR X0, [X0 + 0xE80]
	0x03D3AF84 BL 0x1C16CF4
	0x03D3AF88 ADRP X0, 0x3E2000
	0x03D3AF8C LDR X0, [X0 + 0x120]
	0x03D3AF90 BL 0x1C16CF4
	0x03D3AF94 ADRP X0, 0x42A000
	0x03D3AF98 LDR X0, [X0 + 0x760]
	0x03D3AF9C BL 0x1C16CF4
	0x03D3AFA0 MOVZ W8, 0x1
	0x03D3AFA4 STRB W8, [X20 + 0xB70]
	0x03D3AFA8 CBZ X21, 0x3D3B6C8
	0x03D3AFAC MOV X0, X21
	0x03D3AFB0 MOV X1, X31
	0x03D3AFB4 BL 0x3DEC0CC
	0x03D3AFB8 CBZ X0, 0x3D3B6C8
	0x03D3AFBC ADRP X10, 0x3E2000
	0x03D3AFC0 LDR X8, [X0]
	0x03D3AFC4 LDR X10, [X10 + 0xE80]
	0x03D3AFC8 ADRP X25, 0x42A000
	0x03D3AFCC MOV X20, X0
	0x03D3AFD0 LDRH W9, [X8 + 0x12E]
	0x03D3AFD4 LDR X1, [X10]
	0x03D3AFD8 LDR X25, [X25 + 0x9C8]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move X21, 0x6AE000
	008 Move W9, [X21+2913]
	009 Move X20, X0
	010 Move X19, X8
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x3BA000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x3E2000
	019 Move X0, [X0+2200]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2913], W8
	023 NotImplemented "Instruction MOVI not yet implemented."
	024 Move [X31+96], V0
	025 Move [X31+104], V0
	026 Move [X31+64], V0
	027 Move [X31+72], V0
	028 Compare X20, 0
	029 JumpIfEqual {104}
	030 Move X0, [X20+344]
	031 Move X22, 0x3BA000
	032 Move X22, [X22+2600]
	033 Move X1, X31
	034 Call RenderChainVEData.AllocatesID, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {40}
	039 Move W21, 1
	040 Move X0, X20
	041 Move X1, X31
	042 Call VisualElement.get_renderHints, X0
	043 And W21, W0, 1
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move W0, W21
	050 Move X1, X31
	051 Call Debug.Assert, X0
	052 Move X0, [X20+152]
	053 Compare X0, 0
	054 JumpIfEqual {75}
	055 Move X22, 0x3E2000
	056 Move X22, [X22+2200]
	057 Move X1, X31
	058 Call VisualElement.get_worldTransformInverse, X0
	059 Move X21, X0
	060 Move X0, X20
	061 Move X1, X31
	062 Call VisualElement.get_worldTransformRef, X0
	063 Move X8, [X22]
	064 Move X20, X0
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Add X2, X31, 64
	071 Move X0, X21
	072 Move X1, X20
	073 Move X3, X31
	074 Call VisualElement.MultiplyMatrix34, X0, X1, X2
	075 Add X8, X31, 0
	076 Move X0, X20
	077 Move X1, X31
	078 Call VisualElement.get_worldTransform, X0
	079 Move V0, [X31]
	080 Move V1, [X31+16]
	081 Move V2, [X31+32]
	082 Move V3, [X31+48]
	083 Move [X31+64], V0
	084 Move [X31+72], V1
	085 Move [X31+96], V2
	086 Move [X31+104], V3
	087 Move W8, 0x3F800000
	088 Move [X31+104], W8
	089 Move V1, [X31+96]
	090 Move V0, [X31+112]
	091 Move V3, [X31+64]
	092 Move V2, [X31+80]
	093 Move X22, [X31+144]
	094 Move X21, [X31+152]
	095 Move X30, [X31+128]
	096 Move [X19+32], V1
	097 Move [X19+40], V0
	098 Move [X19], V3
	099 Move [X19+8], V2
	100 Move X20, [X31+160]
	101 Move X19, [X31+168]
	102 Add X31, X31, 176
	103 Return X0
	104 Call 0x1C17F20

Method: UnityEngine.Vector4 GetClipRectIDClipInfo(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D3AFDC CBZ X9, 0x3D3B000
	0x03D3AFE0 LDR X10, [X8 + 0xB0]
	0x03D3AFE4 ADD X10, X10, 0x8
	0x03D3AFE8 LDUR X11, [X10 - 0x8]
	0x03D3AFEC CMP X11, X1
	0x03D3AFF0 B.EQ 0x3D3B010
	0x03D3AFF4 SUBS X9, X9, 0x1
	0x03D3AFF8 ADD X10, X10, 0x10
	0x03D3AFFC B.NE 0x3D3AFE8
	0x03D3B000 MOVZ W2, 0x2
	0x03D3B004 MOV X0, X20
	0x03D3B008 BL 0x1C5C788
	0x03D3B00C B 0x3D3B020
	0x03D3B010 LDR W9, [X10]
	0x03D3B014 ADD W9, W9, 0x2
	0x03D3B018 ADD X8, X8, W9, 0x4, SXTW
	0x03D3B01C ADD X0, X8, 0x138
	0x03D3B020 LDP X8, X1, [X0]
	0x03D3B024 MOV X0, X20
	0x03D3B028 BLR X8
	0x03D3B02C MOV W20, W0
	0x03D3B030 MOV X0, X21
	0x03D3B034 MOV X1, X31
	0x03D3B038 BL 0x3DE0EB8
	0x03D3B03C MOV X22, X0
	0x03D3B040 LDR X0, [X25]
	0x03D3B044 ADD X23, X21, 0x178
	0x03D3B048 LDR W8, [X0 + 0xE0]
	0x03D3B04C CBNZ W8, 0x3D3B054
	0x03D3B050 BL 0x1C16DFC
	0x03D3B054 MOV X0, X23
	0x03D3B058 MOV X1, X31
	0x03D3B05C BL 0x3D279C8
	0x03D3B060 TBZ X0, 0x0, 0x3D3B128
	0x03D3B064 CBZ X19, 0x3D3B6C8
	0x03D3B068 CBZ X22, 0x3D3B6C8
	0x03D3B06C ADRP X10, 0x3E1000
	0x03D3B070 LDR X8, [X22]
	0x03D3B074 LDR X23, [X23]
	0x03D3B078 LDR X10, [X10 + 0x120]
	0x03D3B07C ADD X24, X19, 0x140
	0x03D3B080 LDRH W9, [X8 + 0x12E]
	0x03D3B084 LDR X1, [X10]
	0x03D3B088 CBZ X9, 0x3D3B0AC
	0x03D3B08C LDR X10, [X8 + 0xB0]
	0x03D3B090 ADD X10, X10, 0x8
	0x03D3B094 LDUR X11, [X10 - 0x8]
	0x03D3B098 CMP X11, X1
	0x03D3B09C B.EQ 0x3D3B0BC
	0x03D3B0A0 SUBS X9, X9, 0x1
	0x03D3B0A4 ADD X10, X10, 0x10
	0x03D3B0A8 B.NE 0x3D3B094
	0x03D3B0AC MOVZ W2, 0xE
	0x03D3B0B0 MOV X0, X22
	0x03D3B0B4 BL 0x1C5C788
	0x03D3B0B8 B 0x3D3B0CC
	0x03D3B0BC LDR W9, [X10]
	0x03D3B0C0 ADD W9, W9, 0xE
	0x03D3B0C4 ADD X8, X8, W9, 0x4, SXTW
	0x03D3B0C8 ADD X0, X8, 0x138
	0x03D3B0CC LDP X8, X1, [X0]
	0x03D3B0D0 MOV X0, X22
	0x03D3B0D4 BLR X8
	0x03D3B0D8 ADRP X8, 0x429000
	0x03D3B0DC LDR X8, [X8 + 0x760]
	0x03D3B0E0 MOV V8.16B, V0.16B
	0x03D3B0E4 MOV V9.16B, V1.16B
	0x03D3B0E8 MOV V10.16B, V2.16B
	0x03D3B0EC LDR X0, [X8]
	0x03D3B0F0 MOV V11.16B, V3.16B
	0x03D3B0F4 LDR W8, [X0 + 0xE0]
	0x03D3B0F8 CBNZ W8, 0x3D3B100
	0x03D3B0FC BL 0x1C16DFC
	0x03D3B100 CMP W20, 0x1
	0x03D3B104 CSET W2, EQ
	0x03D3B108 MOV X0, X24
	0x03D3B10C MOV X1, X23
	0x03D3B110 MOV V0.16B, V8.16B
	0x03D3B114 MOV V1.16B, V9.16B
	0x03D3B118 MOV V2.16B, V10.16B
	0x03D3B11C MOV V3.16B, V11.16B
	0x03D3B120 MOV X3, X31
	0x03D3B124 BL 0x3D2BF84
	0x03D3B128 LDR X0, [X25]
	0x03D3B12C ADD X23, X21, 0x180
	0x03D3B130 LDR W8, [X0 + 0xE0]
	0x03D3B134 CBNZ W8, 0x3D3B13C
	0x03D3B138 BL 0x1C16DFC
	0x03D3B13C MOV X0, X23
	0x03D3B140 MOV X1, X31
	0x03D3B144 BL 0x3D279C8
	0x03D3B148 TBZ X0, 0x0, 0x3D3B20C
	0x03D3B14C CBZ X19, 0x3D3B6C8
	0x03D3B150 CBZ X22, 0x3D3B6C8
	0x03D3B154 ADRP X10, 0x3E1000
	0x03D3B158 LDR X8, [X22]
	0x03D3B15C LDR X23, [X23]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x6AE000
	010 Move W8, [X20+2914]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x3BA000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x3E1000
	020 Move X0, [X0+2200]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2914], W8
	024 Compare X19, 0
	025 JumpIfEqual {114}
	026 Move X0, [X19+352]
	027 Move X20, 0x3B9000
	028 Move X20, [X20+2600]
	029 Move X1, X31
	030 Call RenderChainVEData.AllocatesID, X0
	031 Move X8, [X20]
	032 Move W20, W0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 And W0, W20, 1
	039 Move X1, X31
	040 Call Debug.Assert, X0
	041 Move X8, [X19+152]
	042 Compare X8, 0
	043 JumpIfEqual {86}
	044 Move X0, X19
	045 Move X1, X31
	046 Call VisualElement.get_worldClipMinusGroup, X0
	047 Move X0, [X19+152]
	048 Compare X0, 0
	049 JumpIfEqual {114}
	050 Move X20, 0x3E1000
	051 Move X20, [X20+2200]
	052 Move X1, X31
	053 Move V8, V0
	054 Move V9, V1
	055 Move V10, V2
	056 Move V11, V3
	057 Call VisualElement.get_worldTransformInverse, X0
	058 Move X8, [X20]
	059 Move X19, X0
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Move X21, 0x6AD000
	066 Move W8, [X21+3041]
	067 Compare W8, 0
	068 JumpIfNotEqual {74}
	069 Move X0, 0x3E1000
	070 Move X0, [X0+2200]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X21+3041], W8
	074 Move X0, [X20]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X19
	080 Move V0, V8
	081 Move V1, V9
	082 Move V2, V10
	083 Move V3, V11
	084 Move X1, X31
	085 Call VisualElement.CalculateConservativeRect, X0, X1
	086 Move X0, X19
	087 Move X1, X31
	088 Call VisualElement.get_worldClip, X0
	089 Move W8, 0xB717
	090 Move V2.S[1], V3.S[0]
	091 Move V0.S[1], V1.S[0]
	092 NotImplemented "Instruction MOVK not yet implemented."
	093 Add V2, V2, V0
	094 Subtract V3, V2, V0
	095 Add V0, V0, V2
	096 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	097 Move V1, 0
	098 Add V2, V3, V2
	099 Move X20, [X31+48]
	100 Move X19, [X31+56]
	101 Move X30, [X31+32]
	102 Move X21, [X31+40]
	103 Move D9, [X31+16]
	104 Move D8, [X31+24]
	105 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	106 NotImplemented "Instruction INVALID not yet implemented."
	107 Add V0, V1, V1
	108 NotImplemented "Instruction INVALID not yet implemented."
	109 Move S1, V0.S[1]
	110 Move S3, V2.S[1]
	111 Move D11, [X31+64]
	112 Move D10, [X31+72]
	113 Return X0
	114 Call 0x1C17F20

Method: System.UInt32 DepthFirstOnChildAdded(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement parent, UnityEngine.UIElements.VisualElement ve, System.Int32 index, System.Boolean resetState)

Disassembly:
	0x03D3B160 LDR X10, [X10 + 0x120]
	0x03D3B164 ADD X24, X19, 0x140
	0x03D3B168 LDRH W9, [X8 + 0x12E]
	0x03D3B16C LDR X1, [X10]
	0x03D3B170 CBZ X9, 0x3D3B194
	0x03D3B174 LDR X10, [X8 + 0xB0]
	0x03D3B178 ADD X10, X10, 0x8
	0x03D3B17C LDUR X11, [X10 - 0x8]
	0x03D3B180 CMP X11, X1
	0x03D3B184 B.EQ 0x3D3B1A4
	0x03D3B188 SUBS X9, X9, 0x1
	0x03D3B18C ADD X10, X10, 0x10
	0x03D3B190 B.NE 0x3D3B17C
	0x03D3B194 MOV X0, X22
	0x03D3B198 MOV W2, W31
	0x03D3B19C BL 0x1C5C788
	0x03D3B1A0 B 0x3D3B1B0
	0x03D3B1A4 LDRSW X9, [X10]
	0x03D3B1A8 ADD X8, X8, X9, 0x4, LSL
	0x03D3B1AC ADD X0, X8, 0x138
	0x03D3B1B0 LDP X8, X1, [X0]
	0x03D3B1B4 MOV X0, X22
	0x03D3B1B8 BLR X8
	0x03D3B1BC ADRP X8, 0x429000
	0x03D3B1C0 LDR X8, [X8 + 0x760]
	0x03D3B1C4 MOV V8.16B, V0.16B
	0x03D3B1C8 MOV V9.16B, V1.16B
	0x03D3B1CC MOV V10.16B, V2.16B
	0x03D3B1D0 LDR X0, [X8]
	0x03D3B1D4 MOV V11.16B, V3.16B
	0x03D3B1D8 LDR W8, [X0 + 0xE0]
	0x03D3B1DC CBNZ W8, 0x3D3B1E4
	0x03D3B1E0 BL 0x1C16DFC
	0x03D3B1E4 CMP W20, 0x1
	0x03D3B1E8 CSET W2, EQ
	0x03D3B1EC MOV X0, X24
	0x03D3B1F0 MOV X1, X23
	0x03D3B1F4 MOV V0.16B, V8.16B
	0x03D3B1F8 MOV V1.16B, V9.16B
	0x03D3B1FC MOV V2.16B, V10.16B
	0x03D3B200 MOV V3.16B, V11.16B
	0x03D3B204 MOV X3, X31
	0x03D3B208 BL 0x3D2BF84
	0x03D3B20C LDR X0, [X25]
	0x03D3B210 ADD X23, X21, 0x188
	0x03D3B214 LDR W8, [X0 + 0xE0]
	0x03D3B218 CBNZ W8, 0x3D3B220
	0x03D3B21C BL 0x1C16DFC
	0x03D3B220 MOV X0, X23
	0x03D3B224 MOV X1, X31
	0x03D3B228 BL 0x3D279C8
	0x03D3B22C TBZ X0, 0x0, 0x3D3B2F4
	0x03D3B230 CBZ X19, 0x3D3B6C8
	0x03D3B234 CBZ X22, 0x3D3B6C8
	0x03D3B238 ADRP X10, 0x3E1000
	0x03D3B23C LDR X8, [X22]
	0x03D3B240 LDR X23, [X23]
	0x03D3B244 LDR X10, [X10 + 0x120]
	0x03D3B248 ADD X24, X19, 0x140
	0x03D3B24C LDRH W9, [X8 + 0x12E]
	0x03D3B250 LDR X1, [X10]
	0x03D3B254 CBZ X9, 0x3D3B278
	0x03D3B258 LDR X10, [X8 + 0xB0]
	0x03D3B25C ADD X10, X10, 0x8
	0x03D3B260 LDUR X11, [X10 - 0x8]
	0x03D3B264 CMP X11, X1
	0x03D3B268 B.EQ 0x3D3B288
	0x03D3B26C SUBS X9, X9, 0x1
	0x03D3B270 ADD X10, X10, 0x10
	0x03D3B274 B.NE 0x3D3B260
	0x03D3B278 MOVZ W2, 0x5
	0x03D3B27C MOV X0, X22
	0x03D3B280 BL 0x1C5C788
	0x03D3B284 B 0x3D3B298
	0x03D3B288 LDR W9, [X10]
	0x03D3B28C ADD W9, W9, 0x5
	0x03D3B290 ADD X8, X8, W9, 0x4, SXTW
	0x03D3B294 ADD X0, X8, 0x138
	0x03D3B298 LDP X8, X1, [X0]
	0x03D3B29C MOV X0, X22
	0x03D3B2A0 BLR X8
	0x03D3B2A4 ADRP X8, 0x429000
	0x03D3B2A8 LDR X8, [X8 + 0x760]
	0x03D3B2AC MOV V8.16B, V0.16B
	0x03D3B2B0 MOV V9.16B, V1.16B
	0x03D3B2B4 MOV V10.16B, V2.16B
	0x03D3B2B8 LDR X0, [X8]
	0x03D3B2BC MOV V11.16B, V3.16B
	0x03D3B2C0 LDR W8, [X0 + 0xE0]
	0x03D3B2C4 CBNZ W8, 0x3D3B2CC
	0x03D3B2C8 BL 0x1C16DFC
	0x03D3B2CC CMP W20, 0x1
	0x03D3B2D0 CSET W2, EQ
	0x03D3B2D4 MOV X0, X24
	0x03D3B2D8 MOV X1, X23
	0x03D3B2DC MOV V0.16B, V8.16B
	0x03D3B2E0 MOV V1.16B, V9.16B
	0x03D3B2E4 MOV V2.16B, V10.16B
	0x03D3B2E8 MOV V3.16B, V11.16B
	0x03D3B2EC MOV X3, X31
	0x03D3B2F0 BL 0x3D2BF84
	0x03D3B2F4 LDR X0, [X25]
	0x03D3B2F8 ADD X23, X21, 0x190
	0x03D3B2FC LDR W8, [X0 + 0xE0]
	0x03D3B300 CBNZ W8, 0x3D3B308
	0x03D3B304 BL 0x1C16DFC
	0x03D3B308 MOV X0, X23
	0x03D3B30C MOV X1, X31
	0x03D3B310 BL 0x3D279C8
	0x03D3B314 TBZ X0, 0x0, 0x3D3B3DC
	0x03D3B318 CBZ X19, 0x3D3B6C8
	0x03D3B31C CBZ X22, 0x3D3B6C8
	0x03D3B320 ADRP X10, 0x3E1000
	0x03D3B324 LDR X8, [X22]
	0x03D3B328 LDR X23, [X23]
	0x03D3B32C LDR X10, [X10 + 0x120]
	0x03D3B330 ADD X24, X19, 0x140
	0x03D3B334 LDRH W9, [X8 + 0x12E]
	0x03D3B338 LDR X1, [X10]
	0x03D3B33C CBZ X9, 0x3D3B360
	0x03D3B340 LDR X10, [X8 + 0xB0]
	0x03D3B344 ADD X10, X10, 0x8
	0x03D3B348 LDUR X11, [X10 - 0x8]
	0x03D3B34C CMP X11, X1
	0x03D3B350 B.EQ 0x3D3B370
	0x03D3B354 SUBS X9, X9, 0x1
	0x03D3B358 ADD X10, X10, 0x10
	0x03D3B35C B.NE 0x3D3B348
	0x03D3B360 MOVZ W2, 0x9
	0x03D3B364 MOV X0, X22
	0x03D3B368 BL 0x1C5C788
	0x03D3B36C B 0x3D3B380
	0x03D3B370 LDR W9, [X10]
	0x03D3B374 ADD W9, W9, 0x9
	0x03D3B378 ADD X8, X8, W9, 0x4, SXTW
	0x03D3B37C ADD X0, X8, 0x138
	0x03D3B380 LDP X8, X1, [X0]
	0x03D3B384 MOV X0, X22
	0x03D3B388 BLR X8
	0x03D3B38C ADRP X8, 0x429000
	0x03D3B390 LDR X8, [X8 + 0x760]
	0x03D3B394 MOV V8.16B, V0.16B
	0x03D3B398 MOV V9.16B, V1.16B
	0x03D3B39C MOV V10.16B, V2.16B
	0x03D3B3A0 LDR X0, [X8]
	0x03D3B3A4 MOV V11.16B, V3.16B
	0x03D3B3A8 LDR W8, [X0 + 0xE0]
	0x03D3B3AC CBNZ W8, 0x3D3B3B4
	0x03D3B3B0 BL 0x1C16DFC
	0x03D3B3B4 CMP W20, 0x1
	0x03D3B3B8 CSET W2, EQ
	0x03D3B3BC MOV X0, X24
	0x03D3B3C0 MOV X1, X23
	0x03D3B3C4 MOV V0.16B, V8.16B
	0x03D3B3C8 MOV V1.16B, V9.16B
	0x03D3B3CC MOV V2.16B, V10.16B
	0x03D3B3D0 MOV V3.16B, V11.16B
	0x03D3B3D4 MOV X3, X31
	0x03D3B3D8 BL 0x3D2BF84
	0x03D3B3DC LDR X0, [X25]
	0x03D3B3E0 ADD X23, X21, 0x198
	0x03D3B3E4 LDR W8, [X0 + 0xE0]
	0x03D3B3E8 CBNZ W8, 0x3D3B3F0
	0x03D3B3EC BL 0x1C16DFC
	0x03D3B3F0 MOV X0, X23
	0x03D3B3F4 MOV X1, X31
	0x03D3B3F8 BL 0x3D279C8
	0x03D3B3FC TBZ X0, 0x0, 0x3D3B4C4
	0x03D3B400 CBZ X19, 0x3D3B6C8
	0x03D3B404 CBZ X22, 0x3D3B6C8
	0x03D3B408 ADRP X10, 0x3E1000
	0x03D3B40C LDR X8, [X22]
	0x03D3B410 LDR X23, [X23]
	0x03D3B414 LDR X10, [X10 + 0x120]
	0x03D3B418 ADD X24, X19, 0x140
	0x03D3B41C LDRH W9, [X8 + 0x12E]
	0x03D3B420 LDR X1, [X10]
	0x03D3B424 CBZ X9, 0x3D3B448
	0x03D3B428 LDR X10, [X8 + 0xB0]
	0x03D3B42C ADD X10, X10, 0x8
	0x03D3B430 LDUR X11, [X10 - 0x8]
	0x03D3B434 CMP X11, X1
	0x03D3B438 B.EQ 0x3D3B458
	0x03D3B43C SUBS X9, X9, 0x1
	0x03D3B440 ADD X10, X10, 0x10
	0x03D3B444 B.NE 0x3D3B430
	0x03D3B448 MOVZ W2, 0x7
	0x03D3B44C MOV X0, X22
	0x03D3B450 BL 0x1C5C788
	0x03D3B454 B 0x3D3B468
	0x03D3B458 LDR W9, [X10]
	0x03D3B45C ADD W9, W9, 0x7
	0x03D3B460 ADD X8, X8, W9, 0x4, SXTW
	0x03D3B464 ADD X0, X8, 0x138
	0x03D3B468 LDP X8, X1, [X0]
	0x03D3B46C MOV X0, X22
	0x03D3B470 BLR X8
	0x03D3B474 ADRP X8, 0x429000
	0x03D3B478 LDR X8, [X8 + 0x760]
	0x03D3B47C MOV V8.16B, V0.16B
	0x03D3B480 MOV V9.16B, V1.16B
	0x03D3B484 MOV V10.16B, V2.16B
	0x03D3B488 LDR X0, [X8]
	0x03D3B48C MOV V11.16B, V3.16B
	0x03D3B490 LDR W8, [X0 + 0xE0]
	0x03D3B494 CBNZ W8, 0x3D3B49C
	0x03D3B498 BL 0x1C16DFC
	0x03D3B49C CMP W20, 0x1
	0x03D3B4A0 CSET W2, EQ
	0x03D3B4A4 MOV X0, X24
	0x03D3B4A8 MOV X1, X23
	0x03D3B4AC MOV V0.16B, V8.16B
	0x03D3B4B0 MOV V1.16B, V9.16B
	0x03D3B4B4 MOV V2.16B, V10.16B
	0x03D3B4B8 MOV V3.16B, V11.16B
	0x03D3B4BC MOV X3, X31
	0x03D3B4C0 BL 0x3D2BF84
	0x03D3B4C4 LDR X0, [X25]
	0x03D3B4C8 ADD X23, X21, 0x1A0
	0x03D3B4CC LDR W8, [X0 + 0xE0]
	0x03D3B4D0 CBNZ W8, 0x3D3B4D8
	0x03D3B4D4 BL 0x1C16DFC
	0x03D3B4D8 MOV X0, X23
	0x03D3B4DC MOV X1, X31
	0x03D3B4E0 BL 0x3D279C8
	0x03D3B4E4 TBZ X0, 0x0, 0x3D3B5AC
	0x03D3B4E8 CBZ X19, 0x3D3B6C8
	0x03D3B4EC CBZ X22, 0x3D3B6C8
	0x03D3B4F0 ADRP X10, 0x3E1000
	0x03D3B4F4 LDR X8, [X22]
	0x03D3B4F8 LDR X23, [X23]
	0x03D3B4FC LDR X10, [X10 + 0x120]
	0x03D3B500 ADD X24, X19, 0x140
	0x03D3B504 LDRH W9, [X8 + 0x12E]
	0x03D3B508 LDR X1, [X10]
	0x03D3B50C CBZ X9, 0x3D3B530
	0x03D3B510 LDR X10, [X8 + 0xB0]
	0x03D3B514 ADD X10, X10, 0x8
	0x03D3B518 LDUR X11, [X10 - 0x8]
	0x03D3B51C CMP X11, X1
	0x03D3B520 B.EQ 0x3D3B540
	0x03D3B524 SUBS X9, X9, 0x1
	0x03D3B528 ADD X10, X10, 0x10
	0x03D3B52C B.NE 0x3D3B518
	0x03D3B530 MOVZ W2, 0x1
	0x03D3B534 MOV X0, X22
	0x03D3B538 BL 0x1C5C788
	0x03D3B53C B 0x3D3B550
	0x03D3B540 LDR W9, [X10]
	0x03D3B544 ADD W9, W9, 0x1
	0x03D3B548 ADD X8, X8, W9, 0x4, SXTW
	0x03D3B54C ADD X0, X8, 0x138
	0x03D3B550 LDP X8, X1, [X0]
	0x03D3B554 MOV X0, X22
	0x03D3B558 BLR X8
	0x03D3B55C ADRP X8, 0x429000
	0x03D3B560 LDR X8, [X8 + 0x760]
	0x03D3B564 MOV V8.16B, V0.16B
	0x03D3B568 MOV V9.16B, V1.16B
	0x03D3B56C MOV V10.16B, V2.16B
	0x03D3B570 LDR X0, [X8]
	0x03D3B574 MOV V11.16B, V3.16B
	0x03D3B578 LDR W8, [X0 + 0xE0]
	0x03D3B57C CBNZ W8, 0x3D3B584
	0x03D3B580 BL 0x1C16DFC
	0x03D3B584 CMP W20, 0x1
	0x03D3B588 CSET W2, EQ
	0x03D3B58C MOV X0, X24
	0x03D3B590 MOV X1, X23
	0x03D3B594 MOV V0.16B, V8.16B
	0x03D3B598 MOV V1.16B, V9.16B
	0x03D3B59C MOV V2.16B, V10.16B
	0x03D3B5A0 MOV V3.16B, V11.16B
	0x03D3B5A4 MOV X3, X31
	0x03D3B5A8 BL 0x3D2BF84
	0x03D3B5AC LDR X0, [X25]
	0x03D3B5B0 ADD X21, X21, 0x1A8
	0x03D3B5B4 LDR W8, [X0 + 0xE0]
	0x03D3B5B8 CBNZ W8, 0x3D3B5C0
	0x03D3B5BC BL 0x1C16DFC
	0x03D3B5C0 MOV X0, X21
	0x03D3B5C4 MOV X1, X31
	0x03D3B5C8 BL 0x3D279C8
	0x03D3B5CC TBZ X0, 0x0, 0x3D3B628
	0x03D3B5D0 CBZ X19, 0x3D3B6C8
	0x03D3B5D4 CBZ X22, 0x3D3B6C8
	0x03D3B5D8 ADRP X10, 0x3E1000
	0x03D3B5DC LDR X8, [X22]
	0x03D3B5E0 LDR X21, [X21]
	0x03D3B5E4 LDR X10, [X10 + 0x120]
	0x03D3B5E8 ADD X19, X19, 0x140
	0x03D3B5EC LDRH W9, [X8 + 0x12E]
	0x03D3B5F0 LDR X1, [X10]
	0x03D3B5F4 CBZ X9, 0x3D3B618
	0x03D3B5F8 LDR X10, [X8 + 0xB0]
	0x03D3B5FC ADD X10, X10, 0x8
	0x03D3B600 LDUR X11, [X10 - 0x8]
	0x03D3B604 CMP X11, X1
	0x03D3B608 B.EQ 0x3D3B644
	0x03D3B60C SUBS X9, X9, 0x1
	0x03D3B610 ADD X10, X10, 0x10
	0x03D3B614 B.NE 0x3D3B600
	0x03D3B618 MOVZ W2, 0x25
	0x03D3B61C MOV X0, X22
	0x03D3B620 BL 0x1C5C788
	0x03D3B624 B 0x3D3B654
	0x03D3B628 LDP X20, X19, [X31 + 0x50]
	0x03D3B62C LDP X22, X21, [X31 + 0x40]
	0x03D3B630 LDP X24, X23, [X31 + 0x30]
	0x03D3B634 LDP X30, X25, [X31 + 0x20]
	0x03D3B638 LDP D9, D8, [X31 + 0x10]
	0x03D3B63C LDP D11, D10, [X31], #0x60
	0x03D3B640 RET
	0x03D3B644 LDR W9, [X10]
	0x03D3B648 ADD W9, W9, 0x25
	0x03D3B64C ADD X8, X8, W9, 0x4, SXTW
	0x03D3B650 ADD X0, X8, 0x138
	0x03D3B654 LDP X8, X1, [X0]
	0x03D3B658 MOV X0, X22
	0x03D3B65C BLR X8
	0x03D3B660 ADRP X8, 0x429000
	0x03D3B664 LDR X8, [X8 + 0x760]
	0x03D3B668 MOV V8.16B, V0.16B
	0x03D3B66C MOV V9.16B, V1.16B
	0x03D3B670 MOV V10.16B, V2.16B
	0x03D3B674 LDR X0, [X8]
	0x03D3B678 MOV V11.16B, V3.16B
	0x03D3B67C LDR W8, [X0 + 0xE0]
	0x03D3B680 CBNZ W8, 0x3D3B688
	0x03D3B684 BL 0x1C16DFC
	0x03D3B688 CMP W20, 0x1
	0x03D3B68C MOV X0, X19
	0x03D3B690 MOV X1, X21
	0x03D3B694 MOV V0.16B, V8.16B
	0x03D3B698 MOV V1.16B, V9.16B
	0x03D3B69C LDP X20, X19, [X31 + 0x50]
	0x03D3B6A0 LDP X22, X21, [X31 + 0x40]
	0x03D3B6A4 LDP X24, X23, [X31 + 0x30]
	0x03D3B6A8 LDP X30, X25, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X30
	003 Move [X31+144], X28
	004 Move [X31+152], X27
	005 Move [X31+160], X26
	006 Move [X31+168], X25
	007 Move [X31+176], X24
	008 Move [X31+184], X23
	009 Move [X31+192], X22
	010 Move [X31+200], X21
	011 Move [X31+208], X20
	012 Move [X31+216], X19
	013 Move X24, 0x6AD000
	014 Move W8, [X24+2915]
	015 Move W19, W4
	016 Move W23, W3
	017 Move X20, X2
	018 Move X22, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x42A000
	025 Move X0, [X0+2504]
	026 Call 0x1C17CF4
	027 Move X0, 0x3B9000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x42A000
	031 Move X0, [X0+1912]
	032 Call 0x1C17CF4
	033 Move X0, 0x42A000
	034 Move X0, [X0+1888]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+2915], W8
	038 Move [X31+136], X31
	039 Compare X20, 0
	040 JumpIfEqual {400}
	041 Move X27, 0x3B9000
	042 Move X27, [X27+2600]
	043 Move X0, X20
	044 Move X1, X31
	045 Call VisualElement.get_panel, X0
	046 Move X8, [X27]
	047 Move X24, X0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSET not yet implemented."
	055 Move X1, X31
	056 Call Debug.Assert, X0
	057 Move W8, [X20+232]
	058 Compare W8, 0
	059 JumpIfEqual {61}
	060 Move W0, W31
	061 Add X24, X20, 136
	062 Move TEMP, X19
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {70}
	066 Move W2, 328
	067 Move X0, X24
	068 Move W1, W31
	069 Call 0x3EB2B10
	070 Move W25, 1
	071 Move [X20+232], W25
	072 Move X26, 0x69E000
	073 Move W8, [X26+2752]
	074 Compare W8, 0
	075 JumpIfNotEqual {80}
	076 Move X0, 0x3BD000
	077 Move X0, [X0+624]
	078 Call 0x1C17CF4
	079 Move [X26+2752], W25
	080 Move X8, 0x3BD000
	081 Move X8, [X8+624]
	082 Move X26, 0x42A000
	083 Move X8, [X8]
	084 Move X8, [X8+184]
	085 Move V1, [X8+96]
	086 Move V0, [X8+112]
	087 Move V3, [X8+64]
	088 Move V2, [X8+80]
	089 Move [X20+304], V1
	090 Move [X20+312], V0
	091 Move [X20+272], V3
	092 Move [X20+280], V2
	093 Move X26, [X26+1888]
	094 Move X0, [X26]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {100}
	098 Call 0x1C17DFC
	099 Move X0, [X26]
	100 Move X8, [X0+184]
	101 Move X28, 0x42A000
	102 Move X8, [X8+264]
	103 Move [X20+344], X8
	104 Move X8, [X0+184]
	105 Move X8, [X8+272]
	106 Move [X20+352], X8
	107 Move X8, [X0+184]
	108 Move X8, [X8+280]
	109 Move [X20+360], X8
	110 Move X28, [X28+2504]
	111 Move X8, [X28]
	112 Move W9, [X8+224]
	113 Compare W9, 0
	114 JumpIfNotEqual {119}
	115 Move X0, X8
	116 Call 0x1C17DFC
	117 Move X8, [X28]
	118 Move X0, [X26]
	119 Move X9, [X8+184]
	120 Move X25, 0x42A000
	121 Move X9, [X9]
	122 Move [X20+376], X9
	123 Move X9, [X8+184]
	124 Move X9, [X9]
	125 Move [X20+384], X9
	126 Move X9, [X8+184]
	127 Move X9, [X9]
	128 Move [X20+392], X9
	129 Move X9, [X8+184]
	130 Move X9, [X9]
	131 Move [X20+400], X9
	132 Move X9, [X8+184]
	133 Move X9, [X9]
	134 Move [X20+408], X9
	135 Move X9, [X8+184]
	136 Move X9, [X9]
	137 Move [X20+416], X9
	138 Move X8, [X8+184]
	139 Move TEMP, 0x80800000
	140 Not TEMP
	141 Move W9, TEMP
	142 Move X8, [X8]
	143 Move [X20+424], X8
	144 Move X8, [X0+184]
	145 Move X8, [X8+296]
	146 Move [X20+432], W9
	147 Move [X20+368], X8
	148 Move X25, [X25+1912]
	149 Move X0, [X25]
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Move X0, X20
	155 Call RenderEvents.UpdateLocalFlipsWinding, X0
	156 Compare X22, 0
	157 JumpIfEqual {170}
	158 Move X0, X22
	159 Move X1, X31
	160 Call VisualElement.get_renderHints, X0
	161 Move X8, X22
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {167}
	166 Move X8, [X22+152]
	167 Move [X20+152], X8
	168 Move W8, [X22+188]
	169 Add W1, W8, 1
	170 Move W1, W31
	171 Move [X20+152], X31
	172 Move [X20+188], W1
	173 Compare X21, 0
	174 JumpIfEqual {400}
	175 Move X0, X21
	176 Move X2, X31
	177 Call RenderChain.EnsureFitsDepth, X0, X1
	178 Subtract W23, W23, 1
	179 Move X0, X22
	180 Move X0, [X27]
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 NotImplemented "Instruction CMP not yet implemented."
	186 NotImplemented "Instruction CSET not yet implemented."
	187 Move X1, X31
	188 Call Debug.Assert, X0
	189 Compare X22, 0
	190 JumpIfEqual {400}
	191 Move X8, [X22+888]
	192 Add X0, X31, 136
	193 Move W1, W23
	194 Move X2, X31
	195 Move [X31+136], X8
	196 Call Hierarchy.get_Item, X0, X1
	197 Move X8, [X25]
	198 Move X23, X0
	199 Move W9, [X8+224]
	200 Compare W9, 0
	201 JumpIfNotEqual {204}
	202 Move X0, X8
	203 Call 0x1C17DFC
	204 Move X0, X23
	205 Call RenderEvents.GetLastDeepestChild, X0
	206 Move [X24], X0
	207 Compare X0, 0
	208 JumpIfEqual {215}
	209 Move X8, [X0+144]
	210 Move [X20+144], X8
	211 Move [X0+144], X20
	212 Move X8, [X20+144]
	213 Compare X8, 0
	214 JumpIfNotEqual {219}
	215 Move X8, X31
	216 Move [X20+144], X31
	217 Compare X8, 0
	218 JumpIfEqual {222}
	219 Compare X8, 0
	220 JumpIfEqual {400}
	221 Move [X8+136], X20
	222 Move X0, [X20+344]
	223 Move X1, X31
	224 Call RenderChainVEData.AllocatesID, X0
	225 Move X8, [X27]
	226 Move W23, W0
	227 Move W9, [X8+224]
	228 Compare W9, 0
	229 JumpIfNotEqual {232}
	230 Move X0, X8
	231 Call 0x1C17DFC
	232 NotImplemented "Instruction ORN not yet implemented."
	233 And W0, W8, 1
	234 Move X1, X31
	235 Call Debug.Assert, X0
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X0, X20
	242 Call RenderEvents.NeedsTransformID, X0
	243 Move TEMP, X0
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfNotEqual {256}
	247 Move X0, [X26]
	248 Add X23, X21, 320
	249 Move W8, [X0+224]
	250 Compare W8, 0
	251 JumpIfNotEqual {253}
	252 Call 0x1C17DFC
	253 Move X0, X23
	254 Move X1, X31
	255 Call UIRVEShaderInfoAllocator.AllocTransform, X0
	256 Move X0, [X28]
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {262}
	260 Call 0x1C17DFC
	261 Move X0, [X28]
	262 Move X8, [X0+184]
	263 Move X0, [X8]
	264 Move [X20+344], X0
	265 Move [X20+160], X31
	266 Move X0, [X25]
	267 Move W8, [X0+224]
	268 Compare W8, 0
	269 JumpIfNotEqual {271}
	270 Call 0x1C17DFC
	271 Move X0, X20
	272 Call RenderEvents.NeedsColorID, X0
	273 Move TEMP, X0
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfNotEqual {288}
	277 Move X0, [X25]
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Move X0, X21
	283 Move X1, X20
	284 Call RenderEvents.InitColorIDs, X0, X1
	285 Move X0, X21
	286 Move X1, X20
	287 Call RenderEvents.SetColorValues, X0, X1
	288 Move X0, [X20+344]
	289 Move X1, X31
	290 Call RenderChainVEData.AllocatesID, X0
	291 Move TEMP, X0
	292 And TEMP, TEMP, 1
	293 Compare TEMP, 1
	294 JumpIfNotEqual {323}
	295 Move X0, [X25]
	296 Move X22, [X20+344]
	297 Add X23, X21, 320
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {302}
	301 Call 0x1C17DFC
	302 Add X8, X31, 64
	303 Move X0, X20
	304 Call RenderEvents.GetTransformIDTransformInfo, X0
	305 Move X0, [X26]
	306 Move W8, [X0+224]
	307 Compare W8, 0
	308 JumpIfNotEqual {310}
	309 Call 0x1C17DFC
	310 Move V0, [X31+64]
	311 Move V1, [X31+80]
	312 Move V2, [X31+96]
	313 Move V3, [X31+112]
	314 Add X2, X31, 0
	315 Move X0, X23
	316 Move X1, X22
	317 Move X3, X31
	318 Move [X31], V0
	319 Move [X31+8], V1
	320 Move [X31+32], V2
	321 Move [X31+40], V3
	322 Call UIRVEShaderInfoAllocator.SetTransformValue, X0, X1, X2
	323 Compare X22, 0
	324 JumpIfEqual {345}
	325 Move X0, X20
	326 Move X1, X31
	327 Call VisualElement.get_renderHints, X0
	328 Move TEMP, X0
	329 And TEMP, TEMP, 1
	330 Compare TEMP, 1
	331 JumpIfEqual {345}
	332 Move X0, [X22+344]
	333 Move X1, X31
	334 Call RenderChainVEData.AllocatesID, X0
	335 Move X8, X22
	336 Move TEMP, X0
	337 And TEMP, TEMP, 1
	338 Compare TEMP, 1
	339 JumpIfEqual {341}
	340 Move X8, [X22+160]
	341 Move [X20+160], X8
	342 Move X8, [X22+344]
	343 Move [X20+344], X8
	344 Move [X20+351], W31
	345 Move X0, [X26]
	346 Move W8, [X0+224]
	347 Compare W8, 0
	348 JumpIfNotEqual {351}
	349 Call 0x1C17DFC
	350 Move X0, [X26]
	351 Move X8, [X0+184]
	352 Move X8, [X8+264]
	353 Move [X20+344], X8
	354 Move X8, [X20+888]
	355 Add X0, X31, 136
	356 Move X1, X31
	357 Move [X31+136], X8
	358 Call Hierarchy.get_childCount, X0
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Move W22, W0
	361 Move W26, W31
	362 Move W23, W31
	363 Move X8, [X20+888]
	364 Add X0, X31, 136
	365 Move W1, W23
	366 Move X2, X31
	367 Move [X31+136], X8
	368 Call Hierarchy.get_Item, X0, X1
	369 Move X8, [X25]
	370 Move X24, X0
	371 Move W9, [X8+224]
	372 Compare W9, 0
	373 JumpIfNotEqual {376}
	374 Move X0, X8
	375 Call 0x1C17DFC
	376 And W4, W19, 1
	377 Move X0, X21
	378 Move X1, X20
	379 Move X2, X24
	380 Move W3, W23
	381 Call RenderEvents.DepthFirstOnChildAdded, X0, X1, X2, X3, X4
	382 Add W23, W23, 1
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Add W26, W0, W26
	385 Add W0, W26, 1
	386 Move W0, 1
	387 Move X20, [X31+208]
	388 Move X19, [X31+216]
	389 Move X22, [X31+192]
	390 Move X21, [X31+200]
	391 Move X24, [X31+176]
	392 Move X23, [X31+184]
	393 Move X26, [X31+160]
	394 Move X25, [X31+168]
	395 Move X28, [X31+144]
	396 Move X27, [X31+152]
	397 Move X30, [X31+128]
	398 Add X31, X31, 224
	399 Return X0
	400 Call 0x1C17F20

Method: System.UInt32 DepthFirstOnChildRemoving(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D3C6CC STP X24, X23, [X31 + 0x170]
	0x03D3C6D0 STP X22, X21, [X31 + 0x180]
	0x03D3C6D4 STP X20, X19, [X31 + 0x190]
	0x03D3C6D8 ADRP X20, 0x6AB000
	0x03D3C6DC LDRB W8, [X20 + 0xB78]
	0x03D3C6E0 MOV W24, W5
	0x03D3C6E4 MOV X27, X4
	0x03D3C6E8 MOV X23, X3
	0x03D3C6EC MOV W25, W2
	0x03D3C6F0 MOV W26, W1
	0x03D3C6F4 MOV X19, X0
	0x03D3C6F8 TBNZ X8, 0x0, 0x3D3C770
	0x03D3C6FC ADRP X0, 0x3B7000
	0x03D3C700 LDR X0, [X0 + 0xA28]
	0x03D3C704 BL 0x1C16CF4
	0x03D3C708 ADRP X0, 0x429000
	0x03D3C70C LDR X0, [X0 + 0x1E8]
	0x03D3C710 BL 0x1C16CF4
	0x03D3C714 ADRP X0, 0x429000
	0x03D3C718 LDR X0, [X0 + 0x148]
	0x03D3C71C BL 0x1C16CF4
	0x03D3C720 ADRP X0, 0x428000
	0x03D3C724 LDR X0, [X0 + 0xFB8]
	0x03D3C728 BL 0x1C16CF4
	0x03D3C72C ADRP X0, 0x3B7000
	0x03D3C730 LDR X0, [X0 + 0x598]
	0x03D3C734 BL 0x1C16CF4
	0x03D3C738 ADRP X0, 0x429000
	0x03D3C73C LDR X0, [X0 + 0x1D8]
	0x03D3C740 BL 0x1C16CF4
	0x03D3C744 ADRP X0, 0x429000
	0x03D3C748 LDR X0, [X0 + 0x1E0]
	0x03D3C74C BL 0x1C16CF4
	0x03D3C750 ADRP X0, 0x3E1000
	0x03D3C754 LDR X0, [X0 + 0x250]
	0x03D3C758 BL 0x1C16CF4
	0x03D3C75C ADRP X0, 0x426000
	0x03D3C760 LDR X0, [X0 + 0x6B0]
	0x03D3C764 BL 0x1C16CF4
	0x03D3C768 MOVZ W8, 0x1
	0x03D3C76C STRB W8, [X20 + 0xB78]
	0x03D3C770 MOV X0, X19
	0x03D3C774 STR W31, [X31 + 0x68]
	0x03D3C778 STP X31, X31, [X31 + 0x58]
	0x03D3C77C BL 0x3D3C4D0
	0x03D3C780 MOV X20, X0
	0x03D3C784 CBZ W26, 0x3D3C8F4
	0x03D3C788 CBZ W25, 0x3D3C8F4
	0x03D3C78C STP X31, X31, [X31 + 0x70]
	0x03D3C790 STRH W31, [X31 + 0x6C]
	0x03D3C794 STRB W31, [X31 + 0x6E]
	0x03D3C798 LDR X0, [X19 + 0xD0]
	0x03D3C79C CBZ X0, 0x3D3CB54
	0x03D3C7A0 ADRP X8, 0x429000
	0x03D3C7A4 LDR X8, [X8 + 0x1D8]
	0x03D3C7A8 MOV W1, W26
	0x03D3C7AC LDR X2, [X8]
	0x03D3C7B0 BL 0x26AEF1C
	0x03D3C7B4 MOV X28, X0
	0x03D3C7B8 LDR X0, [X19 + 0xD8]
	0x03D3C7BC CBZ X0, 0x3D3CB54
	0x03D3C7C0 ADRP X8, 0x429000
	0x03D3C7C4 LDR X8, [X8 + 0x1E0]
	0x03D3C7C8 MOV X29, X1
	0x03D3C7CC MOV W1, W25
	0x03D3C7D0 LDR X2, [X8]
	0x03D3C7D4 BL 0x26AE878
	0x03D3C7D8 MOV X22, X19
	0x03D3C7DC STR X0, [X22 + 0x40]!
	0x03D3C7E0 MOV X21, X22
	0x03D3C7E4 LDR X9, [X22 + 0x80]
	0x03D3C7E8 LDR V0, [X22 + 0x78]
	0x03D3C7EC STR X28, [X21 - 0x10]!
	0x03D3C7F0 STUR X29, [X22 - 0x8]
	0x03D3C7F4 STP X1, X27, [X22 + 0x8]
	0x03D3C7F8 LDR V1, [X31 + 0x7]
	0x03D3C7FC AND W8, W24, 0x1
	0x03D3C800 STR W31, [X22 + 0x30]
	0x03D3C804 STRB W8, [X22 + 0x34]
	0x03D3C808 STR X9, [X22 + 0x28]
	0x03D3C80C STUR V1, [X22 + 0x18]
	0x03D3C810 LDRH W8, [X31 + 0x6C]
	0x03D3C814 LDRB W9, [X31 + 0x6E]
	0x03D3C818 UNIMPLEMENTED
	0x03D3C81C STR D0, [X22 + 0x38]
	0x03D3C820 STURH W8, [X22 + 0x35]
	0x03D3C824 STRB W9, [X22 + 0x37]
	0x03D3C828 ADRP X28, 0x429000
	0x03D3C82C LDR X28, [X28 + 0x148]
	0x03D3C830 MOV X0, X21
	0x03D3C834 LDR X1, [X28]
	0x03D3C838 BL 0x2408B10
	0x03D3C83C ADRP X8, 0x3B7000
	0x03D3C840 LDR X8, [X8 + 0xA28]
	0x03D3C844 MOV W27, W0
	0x03D3C848 LDR X8, [X8]
	0x03D3C84C LDR W9, [X8 + 0xE0]
	0x03D3C850 CBNZ W9, 0x3D3C85C
	0x03D3C854 MOV X0, X8
	0x03D3C858 BL 0x1C16DFC
	0x03D3C85C CMP W27, W26
	0x03D3C860 CSET W0, EQ
	0x03D3C864 MOV X1, X31
	0x03D3C868 BL 0x3C06E58
	0x03D3C86C ADRP X26, 0x428000
	0x03D3C870 LDR X26, [X26 + 0xFB8]
	0x03D3C874 MOV X0, X22
	0x03D3C878 LDR X1, [X26]
	0x03D3C87C BL 0x2407134
	0x03D3C880 CMP W0, W25
	0x03D3C884 CSET W0, EQ
	0x03D3C888 MOV X1, X31
	0x03D3C88C BL 0x3C06E58
	0x03D3C890 ADRP X8, 0x3B7000
	0x03D3C894 LDR X8, [X8 + 0x598]
	0x03D3C898 LDR X0, [X8]
	0x03D3C89C LDR W8, [X0 + 0xE0]
	0x03D3C8A0 CBNZ W8, 0x3D3C8A8
	0x03D3C8A4 BL 0x1C16DFC
	0x03D3C8A8 MOV X0, X23
	0x03D3C8AC MOV X1, X31
	0x03D3C8B0 MOV X2, X31
	0x03D3C8B4 BL 0x3C354F8
	0x03D3C8B8 FMOV S9, W31
	0x03D3C8BC FMOV S8, 1
	0x03D3C8C0 TBZ X0, 0x0, 0x3D3CA10
	0x03D3C8C4 TBNZ X24, 0x1, 0x3D3C97C
	0x03D3C8C8 LDR X0, [X19 + 0x20]
	0x03D3C8CC CBZ X0, 0x3D3C97C
	0x03D3C8D0 LDR X1, [X19 + 0x110]
	0x03D3C8D4 CBZ X23, 0x3D3C918
	0x03D3C8D8 ADRP X8, 0x3E1000
	0x03D3C8DC LDR X8, [X8 + 0x250]
	0x03D3C8E0 LDR X9, [X23]
	0x03D3C8E4 LDR X8, [X8]
	0x03D3C8E8 CMP X9, X8
	0x03D3C8EC CSEL X2, X23, X31, EQ
	0x03D3C8F0 B 0x3D3C91C
	0x03D3C8F4 CBZ X20, 0x3D3CB54
	0x03D3C8F8 MOV X0, X20
	0x03D3C8FC MOV X1, X31
	0x03D3C900 MOV X2, X31
	0x03D3C904 MOV X3, X31
	0x03D3C908 MOV X4, X31
	0x03D3C90C MOV X5, X31
	0x03D3C910 BL 0x3DC3B20
	0x03D3C914 B 0x3D3CB28
	0x03D3C918 MOV X2, X31
	0x03D3C91C LDR X8, [X0]
	0x03D3C920 ADD X3, X31, 0x68
	0x03D3C924 ADD X4, X31, 0x58
	0x03D3C928 LDP X9, X5, [X8 + 0x178]
	0x03D3C92C BLR X9
	0x03D3C930 TBZ X0, 0x0, 0x3D3C97C
	0x03D3C934 MOVZ W8, 0x3
	0x03D3C938 STR W8, [X19 + 0x70]
	0x03D3C93C LDR X0, [X19 + 0x10]
	0x03D3C940 LDP W8, W9, [X31 + 0x58]
	0x03D3C944 LDP W11, W3, [X31 + 0x64]
	0x03D3C948 LDR W10, [X31 + 0x60]
	0x03D3C94C STR W3, [X19 + 0x5C]
	0x03D3C950 CBZ X0, 0x3D3CB54
	0x03D3C954 LDR X1, [X19 + 0x110]
	0x03D3C958 MOVZ W4, 0x1
	0x03D3C95C MOV X2, X23
	0x03D3C960 MOV X5, X31
	0x03D3C964 SCVTF S8, W11
	0x03D3C968 SCVTF S10, W10
	0x03D3C96C SCVTF S9, W9
	0x03D3C970 SCVTF S11, W8
	0x03D3C974 BL 0x3D274BC
	0x03D3C978 B 0x3D3CA18
	0x03D3C97C ADRP X24, 0x426000
	0x03D3C980 LDR X24, [X24 + 0x6B0]
	0x03D3C984 LDR X0, [X24]
	0x03D3C988 LDR W8, [X0 + 0xE0]
	0x03D3C98C CBNZ W8, 0x3D3C994
	0x03D3C990 BL 0x1C16DFC
	0x03D3C994 ADRP X25, 0x6AB000
	0x03D3C998 LDRB W8, [X25 + 0x7E5]
	0x03D3C99C CBNZ W8, 0x3D3C9B4
	0x03D3C9A0 ADRP X0, 0x426000
	0x03D3C9A4 LDR X0, [X0 + 0x6B0]
	0x03D3C9A8 BL 0x1C16CF4
	0x03D3C9AC MOVZ W8, 0x1
	0x03D3C9B0 STRB W8, [X25 + 0x7E5]
	0x03D3C9B4 LDR X0, [X24]
	0x03D3C9B8 LDR W8, [X0 + 0xE0]
	0x03D3C9BC CBNZ W8, 0x3D3C9C8
	0x03D3C9C0 BL 0x1C16DFC
	0x03D3C9C4 LDR X0, [X24]
	0x03D3C9C8 LDR X8, [X0 + 0xB8]
	0x03D3C9CC LDR X0, [X8]
	0x03D3C9D0 CBZ X0, 0x3D3CB54
	0x03D3C9D4 MOV X1, X23
	0x03D3C9D8 MOV X2, X31
	0x03D3C9DC BL 0x3DE06F4
	0x03D3C9E0 LDR X8, [X19 + 0x10]
	0x03D3C9E4 MOVZ W9, 0x2
	0x03D3C9E8 STR W9, [X19 + 0x70]
	0x03D3C9EC STR W0, [X19 + 0x5C]
	0x03D3C9F0 CBZ X8, 0x3D3CB54
	0x03D3C9F4 LDR X1, [X19 + 0x110]
	0x03D3C9F8 AND X3, X0, 0x0
	0x03D3C9FC MOV X0, X8
	0x03D3CA00 MOV X2, X23
	0x03D3CA04 MOV W4, W31
	0x03D3CA08 MOV X5, X31
	0x03D3CA0C BL 0x3D274BC
	0x03D3CA10 FMOV S10, 1
	0x03D3CA14 FMOV S11, W31
	0x03D3CA18 CBZ X20, 0x3D3CB54
	0x03D3CA1C LDP X3, X4, [X19 + 0x40]
	0x03D3CA20 LDP X1, X2, [X19 + 0x30]
	0x03D3CA24 MOV X0, X20
	0x03D3CA28 MOV V0.16B, V11.16B
	0x03D3CA2C MOV V1.16B, V9.16B
	0x03D3CA30 MOV V2.16B, V10.16B
	0x03D3CA34 MOV V3.16B, V8.16B
	0x03D3CA38 MOV X5, X31
	0x03D3CA3C BL 0x3DC3B3C
	0x03D3CA40 LDR X23, [X19 + 0x18]
	0x03D3CA44 ADD X0, X31, 0x8
	0x03D3CA48 MOVZ W2, 0x50
	0x03D3CA4C MOV X1, X21
	0x03D3CA50 BL 0x3EB1AC0
	0x03D3CA54 CBZ X23, 0x3D3CB54
	0x03D3CA58 ADRP X8, 0x429000
	0x03D3CA5C LDR X8, [X8 + 0x1E8]
	0x03D3CA60 ADD X0, X31, 0x80
	0x03D3CA64 ADD X1, X31, 0x8
	0x03D3CA68 MOVZ W2, 0x50
	0x03D3CA6C LDR X24, [X8]
	0x03D3CA70 BL 0x3EB1AC0
	0x03D3CA74 LDR W9, [X23 + 0x1C]
	0x03D3CA78 LDR X8, [X23 + 0x10]
	0x03D3CA7C ADD W9, W9, 0x1
	0x03D3CA80 STR W9, [X23 + 0x1C]
	0x03D3CA84 CBZ X8, 0x3D3CB54
	0x03D3CA88 LDRSW X9, [X23 + 0x18]
	0x03D3CA8C LDR W10, [X8 + 0x18]
	0x03D3CA90 CMP W9, W10
	0x03D3CA94 B.CS 0x3D3CABC
	0x03D3CA98 MOVZ W11, 0x50
	0x03D3CA9C MADD X8, X9, X11, X8
	0x03D3CAA0 ADD W10, W9, 0x1
	0x03D3CAA4 ADD X0, X8, 0x20
	0x03D3CAA8 ADD X1, X31, 0x80
	0x03D3CAAC MOVZ W2, 0x50
	0x03D3CAB0 STR W10, [X23 + 0x18]
	0x03D3CAB4 BL 0x3EB1AC0
	0x03D3CAB8 B 0x3D3CAE8
	0x03D3CABC LDR X8, [X24 + 0x20]
	0x03D3CAC0 ADD X0, X31, 0xD0
	0x03D3CAC4 ADD X1, X31, 0x80
	0x03D3CAC8 MOVZ W2, 0x50
	0x03D3CACC LDR X8, [X8 + 0xC0]
	0x03D3CAD0 LDR X24, [X8 + 0x70]
	0x03D3CAD4 BL 0x3EB1AC0
	0x03D3CAD8 ADD X1, X31, 0xD0
	0x03D3CADC MOV X0, X23
	0x03D3CAE0 MOV X2, X24
	0x03D3CAE4 BL 0x315B370
	0x03D3CAE8 LDR X1, [X28]
	0x03D3CAEC LDR W23, [X19 + 0x118]
	0x03D3CAF0 MOV X0, X21
	0x03D3CAF4 BL 0x2408B10
	0x03D3CAF8 ADD W8, W0, W23
	0x03D3CAFC STR W8, [X19 + 0x118]
	0x03D3CB00 LDR X1, [X26]
	0x03D3CB04 LDR W23, [X19 + 0x11C]
	0x03D3CB08 MOV X0, X22
	0x03D3CB0C BL 0x2407134
	0x03D3CB10 ADD W8, W0, W23
	0x03D3CB14 MOVI V0.2D, 0x0
	0x03D3CB18 STR W8, [X19 + 0x11C]
	0x03D3CB1C STP V0, V0, [X21]
	0x03D3CB20 STP V0, V0, [X21 + 0x20]
	0x03D3CB24 STR V0, [X21 + 0x4]
	0x03D3CB28 MOV X0, X20
	0x03D3CB2C LDP X20, X19, [X31 + 0x190]
	0x03D3CB30 LDP X22, X21, [X31 + 0x180]
	0x03D3CB34 LDP X24, X23, [X31 + 0x170]
	0x03D3CB38 LDP X26, X25, [X31 + 0x160]
	0x03D3CB3C LDP X28, X27, [X31 + 0x150]
	0x03D3CB40 LDP X29, X30, [X31 + 0x140]
	0x03D3CB44 LDP D9, D8, [X31 + 0x130]
	0x03D3CB48 LDP D11, D10, [X31 + 0x120]
	0x03D3CB4C ADD X31, X31, 0x1A0
	0x03D3CB50 RET
	0x03D3CB54 BL 0x1C16F20
	0x03D3CB58 STR X30, [X31 - 0x50]!
	0x03D3CB5C STP X26, X25, [X31 + 0x10]
	0x03D3CB60 STP X24, X23, [X31 + 0x20]
	0x03D3CB64 STP X22, X21, [X31 + 0x30]
	0x03D3CB68 STP X20, X19, [X31 + 0x40]
	0x03D3CB6C ADRP X24, 0x6AB000
	0x03D3CB70 ADRP X23, 0x429000
	0x03D3CB74 ADRP X21, 0x429000
	0x03D3CB78 ADRP X22, 0x428000
	0x03D3CB7C LDRB W8, [X24 + 0xB74]
	0x03D3CB80 LDR X23, [X23 + 0x1F0]
	0x03D3CB84 LDR X21, [X21 + 0x1F8]
	0x03D3CB88 LDR X22, [X22 + 0x760]
	0x03D3CB8C MOV X20, X1
	0x03D3CB90 MOV X19, X0
	0x03D3CB94 TBNZ X8, 0x0, 0x3D3CC30
	0x03D3CB98 ADRP X0, 0x429000
	0x03D3CB9C LDR X0, [X0 + 0x200]
	0x03D3CBA0 BL 0x1C16CF4
	0x03D3CBA4 ADRP X0, 0x429000
	0x03D3CBA8 LDR X0, [X0 + 0x1B8]
	0x03D3CBAC BL 0x1C16CF4
	0x03D3CBB0 ADRP X0, 0x429000
	0x03D3CBB4 LDR X0, [X0 + 0x208]
	0x03D3CBB8 BL 0x1C16CF4
	0x03D3CBBC ADRP X0, 0x429000
	0x03D3CBC0 LDR X0, [X0 + 0x1F8]
	0x03D3CBC4 BL 0x1C16CF4
	0x03D3CBC8 ADRP X0, 0x429000
	0x03D3CBCC LDR X0, [X0 + 0x210]
	0x03D3CBD0 BL 0x1C16CF4
	0x03D3CBD4 ADRP X0, 0x429000
	0x03D3CBD8 LDR X0, [X0 + 0x1F0]
	0x03D3CBDC BL 0x1C16CF4
	0x03D3CBE0 ADRP X0, 0x429000
	0x03D3CBE4 LDR X0, [X0 + 0x218]
	0x03D3CBE8 BL 0x1C16CF4
	0x03D3CBEC ADRP X0, 0x429000
	0x03D3CBF0 LDR X0, [X0 + 0x1D0]
	0x03D3CBF4 BL 0x1C16CF4
	0x03D3CBF8 ADRP X0, 0x425000
	0x03D3CBFC LDR X0, [X0 + 0xB68]
	0x03D3CC00 BL 0x1C16CF4
	0x03D3CC04 ADRP X0, 0x429000
	0x03D3CC08 LDR X0, [X0 + 0x220]
	0x03D3CC0C BL 0x1C16CF4
	0x03D3CC10 ADRP X0, 0x429000
	0x03D3CC14 LDR X0, [X0 + 0x228]
	0x03D3CC18 BL 0x1C16CF4
	0x03D3CC1C ADRP X0, 0x428000
	0x03D3CC20 LDR X0, [X0 + 0x760]
	0x03D3CC24 BL 0x1C16CF4
	0x03D3CC28 MOVZ W8, 0x1
	0x03D3CC2C STRB W8, [X24 + 0xB74]
	0x03D3CC30 LDR X0, [X23]
	0x03D3CC34 ADRP X24, 0x425000
	0x03D3CC38 ADRP X23, 0x429000
	0x03D3CC3C LDR X24, [X24 + 0xB68]
	0x03D3CC40 LDR X23, [X23 + 0x218]
	0x03D3CC44 BL 0x1C16F10
	0x03D3CC48 LDR X1, [X21]
	0x03D3CC4C MOV X21, X0
	0x03D3CC50 BL 0x315AAB0
	0x03D3CC54 STR X21, [X19 + 0x18]
	0x03D3CC58 LDR X0, [X22]
	0x03D3CC5C LDR W8, [X0 + 0xE0]
	0x03D3CC60 CBNZ W8, 0x3D3CC6C
	0x03D3CC64 BL 0x1C16DFC
	0x03D3CC68 LDR X0, [X22]
	0x03D3CC6C LDR X8, [X0 + 0xB8]
	0x03D3CC70 MOVN W9, 0x0
	0x03D3CC74 LDR X8, [X8 + 0x110]
	0x03D3CC78 STR W9, [X19 + 0xC8]
	0x03D3CC7C STR X31, [X19 + 0xF0]
	0x03D3CC80 STR X8, [X19 + 0xC0]
	0x03D3CC84 LDR X0, [X24]
	0x03D3CC88 BL 0x1C16F10
	0x03D3CC8C MOV X1, X31
	0x03D3CC90 MOV X21, X0
	0x03D3CC94 BL 0x3CC9930
	0x03D3CC98 MOV X0, X19
	0x03D3CC9C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x6AC000
	011 Move W8, [X21+2916]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x429000
	019 Move X0, [X0+2504]
	020 Call 0x1C17CF4
	021 Move X0, 0x42A000
	022 Move X0, [X0+248]
	023 Call 0x1C17CF4
	024 Move X0, 0x429000
	025 Move X0, [X0+1912]
	026 Call 0x1C17CF4
	027 Move X0, 0x429000
	028 Move X0, [X0+1888]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2916], W8
	032 Compare X19, 0
	033 JumpIfEqual {445}
	034 Move X8, [X19+888]
	035 Add X0, X31, 8
	036 Move X1, X31
	037 Move [X31+8], X8
	038 Call Hierarchy.get_childCount, X0
	039 Subtract W21, W0, 1
	040 Move X24, 0x429000
	041 Move X24, [X24+1912]
	042 Move W23, W31
	043 Move X8, [X19+888]
	044 Add X0, X31, 8
	045 Move W1, W21
	046 Move X2, X31
	047 Move [X31+8], X8
	048 Call Hierarchy.get_Item, X0, X1
	049 Move X8, [X24]
	050 Move X22, X0
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Move X0, X20
	057 Move X1, X22
	058 Call RenderEvents.DepthFirstOnChildRemoving, X0, X1
	059 Subtract W21, W21, 1
	060 Add W23, W0, W23
	061 Add W21, W23, 1
	062 Move W21, 1
	063 Move W8, [X19+232]
	064 Add X24, X19, 136
	065 Compare W8, 0
	066 JumpIfEqual {432}
	067 Compare X20, 0
	068 JumpIfEqual {445}
	069 Move X22, 0x42A000
	070 Move X22, [X22+248]
	071 Move X0, X20
	072 Move X1, X19
	073 Move X2, X31
	074 Call RenderChain.ChildWillBeRemoved, X0, X1
	075 Move X0, [X22]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X20
	081 Move X1, X19
	082 Move X2, X31
	083 Call CommandGenerator.ResetCommands, X0, X1
	084 Move X0, X20
	085 Move X1, X19
	086 Move X2, X31
	087 Call RenderChain.ResetTextures, X0, X1
	088 Move X8, [X19+144]
	089 Move [X19+232], W31
	090 Move [X19+240], W31
	091 Compare X8, 0
	092 JumpIfEqual {95}
	093 Move X9, [X24]
	094 Move [X8+136], X9
	095 Move X9, [X24]
	096 Compare X9, 0
	097 JumpIfEqual {99}
	098 Move [X9+144], X8
	099 Move X0, [X19+368]
	100 Move X1, X31
	101 Call RenderChainVEData.AllocatesID, X0
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {123}
	106 Move X25, 0x429000
	107 Move X25, [X25+1888]
	108 Move X22, [X19+368]
	109 Add X23, X20, 320
	110 Move X0, [X25]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X23
	116 Move X1, X22
	117 Move X2, X31
	118 Call UIRVEShaderInfoAllocator.FreeTextCoreSettings, X0, X1
	119 Move X8, [X25]
	120 Move X8, [X8+184]
	121 Move X8, [X8+296]
	122 Move [X19+368], X8
	123 Move X0, [X19+360]
	124 Move X1, X31
	125 Call RenderChainVEData.AllocatesID, X0
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {147}
	130 Move X25, 0x429000
	131 Move X25, [X25+1888]
	132 Move X22, [X19+360]
	133 Add X23, X20, 320
	134 Move X0, [X25]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X0, X23
	140 Move X1, X22
	141 Move X2, X31
	142 Call UIRVEShaderInfoAllocator.FreeOpacity, X0, X1
	143 Move X8, [X25]
	144 Move X8, [X8+184]
	145 Move X8, [X8+280]
	146 Move [X19+360], X8
	147 Move X0, [X19+376]
	148 Move X1, X31
	149 Call RenderChainVEData.AllocatesID, X0
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfNotEqual {178}
	154 Move X8, 0x429000
	155 Move X8, [X8+1888]
	156 Move X22, [X19+376]
	157 Add X23, X20, 320
	158 Move X0, [X8]
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Move X0, X23
	164 Move X1, X22
	165 Move X2, X31
	166 Call UIRVEShaderInfoAllocator.FreeColor, X0, X1
	167 Move X22, 0x429000
	168 Move X22, [X22+2504]
	169 Move X0, [X22]
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {175}
	173 Call 0x1C17DFC
	174 Move X0, [X22]
	175 Move X8, [X0+184]
	176 Move X8, [X8]
	177 Move [X19+376], X8
	178 Move X0, [X19+384]
	179 Move X1, X31
	180 Call RenderChainVEData.AllocatesID, X0
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {209}
	185 Move X8, 0x429000
	186 Move X8, [X8+1888]
	187 Move X22, [X19+384]
	188 Add X23, X20, 320
	189 Move X0, [X8]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 Move X0, X23
	195 Move X1, X22
	196 Move X2, X31
	197 Call UIRVEShaderInfoAllocator.FreeColor, X0, X1
	198 Move X22, 0x429000
	199 Move X22, [X22+2504]
	200 Move X0, [X22]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {206}
	204 Call 0x1C17DFC
	205 Move X0, [X22]
	206 Move X8, [X0+184]
	207 Move X8, [X8]
	208 Move [X19+384], X8
	209 Move X0, [X19+392]
	210 Move X1, X31
	211 Call RenderChainVEData.AllocatesID, X0
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {240}
	216 Move X8, 0x429000
	217 Move X8, [X8+1888]
	218 Move X22, [X19+392]
	219 Add X23, X20, 320
	220 Move X0, [X8]
	221 Move W8, [X0+224]
	222 Compare W8, 0
	223 JumpIfNotEqual {225}
	224 Call 0x1C17DFC
	225 Move X0, X23
	226 Move X1, X22
	227 Move X2, X31
	228 Call UIRVEShaderInfoAllocator.FreeColor, X0, X1
	229 Move X22, 0x429000
	230 Move X22, [X22+2504]
	231 Move X0, [X22]
	232 Move W8, [X0+224]
	233 Compare W8, 0
	234 JumpIfNotEqual {237}
	235 Call 0x1C17DFC
	236 Move X0, [X22]
	237 Move X8, [X0+184]
	238 Move X8, [X8]
	239 Move [X19+392], X8
	240 Move X0, [X19+400]
	241 Move X1, X31
	242 Call RenderChainVEData.AllocatesID, X0
	243 Move TEMP, X0
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfNotEqual {271}
	247 Move X8, 0x429000
	248 Move X8, [X8+1888]
	249 Move X22, [X19+400]
	250 Add X23, X20, 320
	251 Move X0, [X8]
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Move X0, X23
	257 Move X1, X22
	258 Move X2, X31
	259 Call UIRVEShaderInfoAllocator.FreeColor, X0, X1
	260 Move X22, 0x429000
	261 Move X22, [X22+2504]
	262 Move X0, [X22]
	263 Move W8, [X0+224]
	264 Compare W8, 0
	265 JumpIfNotEqual {268}
	266 Call 0x1C17DFC
	267 Move X0, [X22]
	268 Move X8, [X0+184]
	269 Move X8, [X8]
	270 Move [X19+400], X8
	271 Move X0, [X19+408]
	272 Move X1, X31
	273 Call RenderChainVEData.AllocatesID, X0
	274 Move TEMP, X0
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfNotEqual {302}
	278 Move X8, 0x429000
	279 Move X8, [X8+1888]
	280 Move X22, [X19+408]
	281 Add X23, X20, 320
	282 Move X0, [X8]
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {287}
	286 Call 0x1C17DFC
	287 Move X0, X23
	288 Move X1, X22
	289 Move X2, X31
	290 Call UIRVEShaderInfoAllocator.FreeColor, X0, X1
	291 Move X22, 0x429000
	292 Move X22, [X22+2504]
	293 Move X0, [X22]
	294 Move W8, [X0+224]
	295 Compare W8, 0
	296 JumpIfNotEqual {299}
	297 Call 0x1C17DFC
	298 Move X0, [X22]
	299 Move X8, [X0+184]
	300 Move X8, [X8]
	301 Move [X19+408], X8
	302 Move X0, [X19+416]
	303 Move X1, X31
	304 Call RenderChainVEData.AllocatesID, X0
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {333}
	309 Move X8, 0x429000
	310 Move X8, [X8+1888]
	311 Move X22, [X19+416]
	312 Add X23, X20, 320
	313 Move X0, [X8]
	314 Move W8, [X0+224]
	315 Compare W8, 0
	316 JumpIfNotEqual {318}
	317 Call 0x1C17DFC
	318 Move X0, X23
	319 Move X1, X22
	320 Move X2, X31
	321 Call UIRVEShaderInfoAllocator.FreeColor, X0, X1
	322 Move X22, 0x429000
	323 Move X22, [X22+2504]
	324 Move X0, [X22]
	325 Move W8, [X0+224]
	326 Compare W8, 0
	327 JumpIfNotEqual {330}
	328 Call 0x1C17DFC
	329 Move X0, [X22]
	330 Move X8, [X0+184]
	331 Move X8, [X8]
	332 Move [X19+416], X8
	333 Move X0, [X19+424]
	334 Move X1, X31
	335 Call RenderChainVEData.AllocatesID, X0
	336 Move TEMP, X0
	337 And TEMP, TEMP, 1
	338 Compare TEMP, 1
	339 JumpIfNotEqual {364}
	340 Move X8, 0x429000
	341 Move X8, [X8+1888]
	342 Move X22, [X19+424]
	343 Add X23, X20, 320
	344 Move X0, [X8]
	345 Move W8, [X0+224]
	346 Compare W8, 0
	347 JumpIfNotEqual {349}
	348 Call 0x1C17DFC
	349 Move X0, X23
	350 Move X1, X22
	351 Move X2, X31
	352 Call UIRVEShaderInfoAllocator.FreeColor, X0, X1
	353 Move X22, 0x429000
	354 Move X22, [X22+2504]
	355 Move X0, [X22]
	356 Move W8, [X0+224]
	357 Compare W8, 0
	358 JumpIfNotEqual {361}
	359 Call 0x1C17DFC
	360 Move X0, [X22]
	361 Move X8, [X0+184]
	362 Move X8, [X8]
	363 Move [X19+424], X8
	364 Move X0, [X19+352]
	365 Move X1, X31
	366 Call RenderChainVEData.AllocatesID, X0
	367 Move TEMP, X0
	368 And TEMP, TEMP, 1
	369 Compare TEMP, 1
	370 JumpIfNotEqual {388}
	371 Move X25, 0x429000
	372 Move X25, [X25+1888]
	373 Move X22, [X19+352]
	374 Add X23, X20, 320
	375 Move X0, [X25]
	376 Move W8, [X0+224]
	377 Compare W8, 0
	378 JumpIfNotEqual {380}
	379 Call 0x1C17DFC
	380 Move X0, X23
	381 Move X1, X22
	382 Move X2, X31
	383 Call UIRVEShaderInfoAllocator.FreeClipRect, X0, X1
	384 Move X8, [X25]
	385 Move X8, [X8+184]
	386 Move X8, [X8+272]
	387 Move [X19+352], X8
	388 Move X0, [X19+344]
	389 Move X1, X31
	390 Call RenderChainVEData.AllocatesID, X0
	391 Move TEMP, X0
	392 And TEMP, TEMP, 1
	393 Compare TEMP, 1
	394 JumpIfNotEqual {412}
	395 Move X25, 0x429000
	396 Move X25, [X25+1888]
	397 Move X22, [X19+344]
	398 Add X23, X20, 320
	399 Move X0, [X25]
	400 Move W8, [X0+224]
	401 Compare W8, 0
	402 JumpIfNotEqual {404}
	403 Call 0x1C17DFC
	404 Move X0, X23
	405 Move X1, X22
	406 Move X2, X31
	407 Call UIRVEShaderInfoAllocator.FreeTransform, X0, X1
	408 Move X8, [X25]
	409 Move X8, [X8+184]
	410 Move X8, [X8+264]
	411 Move [X19+344], X8
	412 Move X1, [X19+264]
	413 Move [X19+152], X31
	414 Move [X19+160], X31
	415 Compare X1, 0
	416 JumpIfEqual {423}
	417 Move X0, [X20+272]
	418 Compare X0, 0
	419 JumpIfEqual {445}
	420 Move X2, X31
	421 Call UIRenderDevice.Free, X0, X1
	422 Move [X19+264], X31
	423 Move X1, [X19+256]
	424 Compare X1, 0
	425 JumpIfEqual {432}
	426 Move X0, [X20+272]
	427 Compare X0, 0
	428 JumpIfEqual {445}
	429 Move X2, X31
	430 Call UIRenderDevice.Free, X0, X1
	431 Move [X19+256], X31
	432 Move [X24], X31
	433 Move [X24+8], X31
	434 Move W0, W21
	435 Move X20, [X31+64]
	436 Move X19, [X31+72]
	437 Move X22, [X31+48]
	438 Move X21, [X31+56]
	439 Move X24, [X31+32]
	440 Move X23, [X31+40]
	441 Move X30, [X31+16]
	442 Move X25, [X31+24]
	443 Add X31, X31, 80
	444 Return X0
	445 Call 0x1C17F20

Method: System.Void DepthFirstOnClippingChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement parent, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, System.Boolean hierarchical, System.Boolean isRootOfChange, System.Boolean isPendingHierarchicalRepaint, System.Boolean inheritedClipRectIDChanged, System.Boolean inheritedMaskingChanged, UnityEngine.UIElements.UIR.UIRenderDevice device, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)

Disassembly:
	0x03D395F4 MOV X3, X31
	0x03D395F8 BL 0x3D25CC0
	0x03D395FC LDR X0, [X26]
	0x03D39600 LDR W8, [X0 + 0xE0]
	0x03D39604 CBNZ W8, 0x3D3960C
	0x03D39608 BL 0x1C16DFC
	0x03D3960C MOV X0, X22
	0x03D39610 BL 0x3D3C1CC
	0x03D39614 LDR X0, [X22 + 0x158]
	0x03D39618 MOV X1, X31
	0x03D3961C BL 0x3D2795C
	0x03D39620 TBZ X0, 0x0, 0x3D396AC
	0x03D39624 CBZ X23, 0x3D39890
	0x03D39628 ADRP X8, 0x42B000
	0x03D3962C LDR X8, [X8 + 0x778]
	0x03D39630 LDR X25, [X22 + 0x158]
	0x03D39634 ADD X26, X23, 0x140
	0x03D39638 LDR X0, [X8]
	0x03D3963C LDR W8, [X0 + 0xE0]
	0x03D39640 CBNZ W8, 0x3D39648
	0x03D39644 BL 0x1C16DFC
	0x03D39648 ADD X8, X31, 0x58
	0x03D3964C MOV X0, X22
	0x03D39650 BL 0x3D39E94
	0x03D39654 ADRP X8, 0x42B000
	0x03D39658 LDR X8, [X8 + 0x760]
	0x03D3965C LDR X0, [X8]
	0x03D39660 LDR W8, [X0 + 0xE0]
	0x03D39664 CBNZ W8, 0x3D3966C
	0x03D39668 BL 0x1C16DFC
	0x03D3966C LDUR V0, [X31 + 0x58]
	0x03D39670 LDUR V1, [X31 + 0x68]
	0x03D39674 LDUR V2, [X31 + 0x78]
	0x03D39678 LDUR V3, [X31 + 0x88]
	0x03D3967C ADD X2, X31, 0x10
	0x03D39680 MOV X0, X26
	0x03D39684 MOV X1, X25
	0x03D39688 MOV X3, X31
	0x03D3968C STP V0, V1, [X31 + 0x10]
	0x03D39690 STP V2, V3, [X31 + 0x30]
	0x03D39694 BL 0x3D2BAEC
	0x03D39698 LDR W8, [X19 + 0x44]
	0x03D3969C MOVZ W25, 0x1
	0x03D396A0 ADD W8, W8, 0x1
	0x03D396A4 STR W8, [X19 + 0x44]
	0x03D396A8 B 0x3D39730
	0x03D396AC CBZ W24, 0x3D39730
	0x03D396B0 MOV X0, X22
	0x03D396B4 MOV X1, X31
	0x03D396B8 BL 0x3DEC0F4
	0x03D396BC TBNZ X0, 0x0, 0x3D39710
	0x03D396C0 TBZ X25, 0x0, 0x3D39720
	0x03D396C4 LDR X0, [X22 + 0x158]
	0x03D396C8 MOV X1, X31
	0x03D396CC BL 0x3D279D8
	0x03D396D0 ADRP X8, 0x3BA000
	0x03D396D4 LDR X8, [X8 + 0xA28]
	0x03D396D8 MOV W25, W0
	0x03D396DC LDR X8, [X8]
	0x03D396E0 LDR W9, [X8 + 0xE0]
	0x03D396E4 CBNZ W9, 0x3D396F0
	0x03D396E8 MOV X0, X8
	0x03D396EC BL 0x1C16DFC
	0x03D396F0 AND W0, W25, 0x1
	0x03D396F4 MOV X1, X31
	0x03D396F8 BL 0x3C06E58
	0x03D396FC LDR W8, [X19 + 0x48]
	0x03D39700 MOVZ W25, 0x1
	0x03D39704 ADD W8, W8, 0x1
	0x03D39708 STR W8, [X19 + 0x48]
	0x03D3970C B 0x3D39734
	0x03D39710 LDR W8, [X19 + 0x58]
	0x03D39714 ADD W8, W8, 0x1
	0x03D39718 STR W8, [X19 + 0x58]
	0x03D3971C B 0x3D39730
	0x03D39720 LDRB W8, [X22 + 0xC0]
	0x03D39724 ANDS W31, W8, 0x30
	0x03D39728 B.EQ 0x3D39810
	0x03D3972C MOV W25, W31
	0x03D39730 STR W21, [X22 + 0xC4]
	0x03D39734 CBZ X23, 0x3D39890
	0x03D39738 LDRB W8, [X23 + 0x219]
	0x03D3973C CBZ W8, 0x3D3974C
	0x03D39740 MOV X0, X22
	0x03D39744 MOV X1, X31
	0x03D39748 BL 0x3DEE850
	0x03D3974C MOV X0, X22
	0x03D39750 MOV X1, X31
	0x03D39754 BL 0x3DEC0F4
	0x03D39758 TBNZ X0, 0x0, 0x3D397E8
	0x03D3975C LDR X8, [X22 + 0x378]
	0x03D39760 ADD X0, X31, 0x98
	0x03D39764 MOV X1, X31
	0x03D39768 STR X8, [X31 + 0x98]
	0x03D3976C BL 0x3DF8994
	0x03D39770 CMP W0, 0x1
	0x03D39774 B.LT 0x3D397E8
	0x03D39778 ADRP X29, 0x42B000
	0x03D3977C LDR X29, [X29 + 0x778]
	0x03D39780 MOV W26, W0
	0x03D39784 MOV W27, W31
	0x03D39788 AND W25, W25, 0x1
	0x03D3978C LDR X8, [X22 + 0x378]
	0x03D39790 ADD X0, X31, 0x98
	0x03D39794 MOV W1, W27
	0x03D39798 MOV X2, X31
	0x03D3979C STR X8, [X31 + 0x98]
	0x03D397A0 BL 0x3DF98E4
	0x03D397A4 LDR X8, [X29]
	0x03D397A8 MOV X28, X0
	0x03D397AC LDR W9, [X8 + 0xE0]
	0x03D397B0 CBNZ W9, 0x3D397BC
	0x03D397B4 MOV X0, X8
	0x03D397B8 BL 0x1C16DFC
	0x03D397BC MOV X0, X23
	0x03D397C0 MOV X2, X28
	0x03D397C4 MOV W3, W21
	0x03D397C8 MOV X4, X20
	0x03D397CC MOV W5, W25
	0x03D397D0 MOV W6, W24
	0x03D397D4 MOV X7, X19
	0x03D397D8 BL 0x3D39488
	0x03D397DC ADD W27, W27, 0x1
	0x03D397E0 CMP W26, W27
	0x03D397E4 B.NE 0x3D3978C
	0x03D397E8 LDP X20, X19, [X31 + 0x110]
	0x03D397EC LDP X22, X21, [X31 + 0x100]
	0x03D397F0 LDP X24, X23, [X31 + 0xF0]
	0x03D397F4 LDP X26, X25, [X31 + 0xE0]
	0x03D397F8 LDP X28, X27, [X31 + 0xD0]
	0x03D397FC LDP X29, X30, [X31 + 0xC0]
	0x03D39800 LDP D9, D8, [X31 + 0xB0]
	0x03D39804 LDP D11, D10, [X31 + 0xA0]
	0x03D39808 ADD X31, X31, 0x120
	0x03D3980C RET
	0x03D39810 LDR X8, [X22 + 0x100]
	0x03D39814 CBZ X8, 0x3D3972C
	0x03D39818 LDRB W8, [X22 + 0xFC]
	0x03D3981C CBNZ W8, 0x3D39864
	0x03D39820 ADRP X8, 0x42C000
	0x03D39824 LDR X8, [X8 + 0xF8]
	0x03D39828 LDR X0, [X8]
	0x03D3982C LDR W8, [X0 + 0xE0]
	0x03D39830 CBNZ W8, 0x3D39838
	0x03D39834 BL 0x1C16DFC
	0x03D39838 MOV X0, X22
	0x03D3983C MOV X1, X23
	0x03D39840 MOV X2, X20
	0x03D39844 MOV X3, X31
	0x03D39848 BL 0x3D37D44
	0x03D3984C TBZ X0, 0x0, 0x3D39864
	0x03D39850 LDR W8, [X19 + 0x40]
	0x03D39854 MOV W25, W31
	0x03D39858 ADD W8, W8, 0x1
	0x03D3985C STR W8, [X19 + 0x40]
	0x03D39860 B 0x3D39730
	0x03D39864 CBZ X23, 0x3D39890
	0x03D39868 MOV X0, X23
	0x03D3986C MOV X1, X22
	0x03D39870 MOV W2, W31
	0x03D39874 MOV X3, X31
	0x03D39878 BL 0x3D25CC0
	0x03D3987C LDR W8, [X19 + 0x4C]
	0x03D39880 MOV W25, W31
	0x03D39884 ADD W8, W8, 0x1
	0x03D39888 STR W8, [X19 + 0x4C]
	0x03D3988C B 0x3D39730
	0x03D39890 BL 0x1C16F20
	0x03D39894 SUB X31, X31, 0x50
	0x03D39898 STP X30, X25, [X31 + 0x10]
	0x03D3989C STP X24, X23, [X31 + 0x20]
	0x03D398A0 STP X22, X21, [X31 + 0x30]
	0x03D398A4 STP X20, X19, [X31 + 0x40]
	0x03D398A8 ADRP X23, 0x6AE000
	0x03D398AC LDRB W8, [X23 + 0xB60]
	0x03D398B0 MOV X19, X3
	0x03D398B4 MOV W20, W2
	0x03D398B8 MOV X21, X1
	0x03D398BC MOV X22, X0
	0x03D398C0 TBNZ X8, 0x0, 0x3D398D8
	0x03D398C4 ADRP X0, 0x42B000
	0x03D398C8 LDR X0, [X0 + 0x778]
	0x03D398CC BL 0x1C16CF4
	0x03D398D0 MOVZ W8, 0x1
	0x03D398D4 STRB W8, [X23 + 0xB60]
	0x03D398D8 CBZ X21, 0x3D39990
	0x03D398DC LDR W24, [X21 + 0xC0]
	0x03D398E0 MOVZ W8, 0x38
	0x03D398E4 MOVZ W9, 0x30
	0x03D398E8 ADRP X25, 0x42B000
	0x03D398EC ANDS W31, W24, 0x20
	0x03D398F0 CSEL X8, X9, X8, NE
	0x03D398F4 LDR W9, [X19, X8, LSL]
	0x03D398F8 ADD X0, X31, 0x8
	0x03D398FC MOV X1, X31
	0x03D39900 ADD W9, W9, 0x1
	0x03D39904 STR W9, [X19, X8, LSL]
	0x03D39908 LDR X8, [X21 + 0x378]
	0x03D3990C LDR X25, [X25 + 0x778]
	0x03D39910 STR X8, [X31 + 0x8]
	0x03D39914 BL 0x3DF88DC
	0x03D39918 MOV X23, X0
	0x03D3991C CBZ X0, 0x3D3994C
	0x03D39920 LDRB W8, [X23 + 0xE9]
	0x03D39924 CBZ W8, 0x3D39930
	0x03D39928 MOVZ W23, 0x1
	0x03D3992C B 0x3D3994C
	0x03D39930 LDR X0, [X25]
	0x03D39934 LDR W8, [X0 + 0xE0]
	0x03D39938 CBNZ W8, 0x3D39940
	0x03D3993C BL 0x1C16DFC
	0x03D39940 MOV X0, X23
	0x03D39944 BL 0x3D39994
	0x03D39948 AND W23, W0, 0x1
	0x03D3994C LDR X0, [X25]
	0x03D39950 LDR W8, [X0 + 0xE0]
	0x03D39954 CBNZ W8, 0x3D3995C
	0x03D39958 BL 0x1C16DFC
	0x03D3995C UBFM W4, W24, 0x5, 0x5
	0x03D39960 MOV X0, X22
	0x03D39964 MOV X1, X21
	0x03D39968 MOV W2, W20
	0x03D3996C MOV W3, W23
	0x03D39970 MOV X5, X19
	0x03D39974 BL 0x3D39A54
	0x03D39978 LDP X20, X19, [X31 + 0x40]
	0x03D3997C LDP X22, X21, [X31 + 0x30]
	0x03D39980 LDP X24, X23, [X31 + 0x20]
	0x03D39984 LDP X30, X25, [X31 + 0x10]
	0x03D39988 ADD X31, X31, 0x50
	0x03D3998C RET
	0x03D39990 BL 0x1C16F20
	0x03D39994 STR X30, [X31 - 0x20]!
	0x03D39998 STP X20, X19, [X31 + 0x10]
	0x03D3999C ADRP X20, 0x6AE000
	0x03D399A0 LDRB W8, [X20 + 0xB6B]
	0x03D399A4 MOV X19, X0
	0x03D399A8 TBNZ X8, 0x0, 0x3D399C0
	0x03D399AC ADRP X0, 0x3E3000
	0x03D399B0 LDR X0, [X0 + 0x120]
	0x03D399B4 BL 0x1C16CF4
	0x03D399B8 MOVZ W8, 0x1
	0x03D399BC STRB W8, [X20 + 0xB6B]
	0x03D399C0 CBZ X19, 0x3D39A50
	0x03D399C4 MOV X0, X19
	0x03D399C8 MOV X1, X31
	0x03D399CC BL 0x3DE0EB8
	0x03D399D0 CBZ X0, 0x3D39A50
	0x03D399D4 ADRP X10, 0x3E3000
	0x03D399D8 LDR X8, [X0]
	0x03D399DC LDR X10, [X10 + 0x120]
	0x03D399E0 MOV X19, X0
	0x03D399E4 LDRH W9, [X8 + 0x12E]
	0x03D399E8 LDR X1, [X10]
	0x03D399EC CBZ X9, 0x3D39A10
	0x03D399F0 LDR X10, [X8 + 0xB0]
	0x03D399F4 ADD X10, X10, 0x8
	0x03D399F8 LDUR X11, [X10 - 0x8]
	0x03D399FC CMP X11, X1
	0x03D39A00 B.EQ 0x3D39A20
	0x03D39A04 SUBS X9, X9, 0x1
	0x03D39A08 ADD X10, X10, 0x10
	0x03D39A0C B.NE 0x3D399F8
	0x03D39A10 MOVZ W2, 0xF
	0x03D39A14 MOV X0, X19
	0x03D39A18 BL 0x1C5C788
	0x03D39A1C B 0x3D39A30
	0x03D39A20 LDR W9, [X10]
	0x03D39A24 ADD W9, W9, 0xF
	0x03D39A28 ADD X8, X8, W9, 0x4, SXTW
	0x03D39A2C ADD X0, X8, 0x138
	0x03D39A30 LDP X8, X1, [X0]
	0x03D39A34 MOV X0, X19
	0x03D39A38 BLR X8
	0x03D39A3C LDP X20, X19, [X31 + 0x10]
	0x03D39A40 CMP W0, 0x1
	0x03D39A44 CSET W0, EQ
	0x03D39A48 LDR X30, [X31], #0x20
	0x03D39A4C RET
	0x03D39A50 BL 0x1C16F20
	0x03D39A54 SUB X31, X31, 0x130
	0x03D39A58 STP X29, X30, [X31 + 0xD0]
	0x03D39A5C STP X28, X27, [X31 + 0xE0]
	0x03D39A60 STP X26, X25, [X31 + 0xF0]
	0x03D39A64 STP X24, X23, [X31 + 0x100]
	0x03D39A68 STP X22, X21, [X31 + 0x110]
	0x03D39A6C STP X20, X19, [X31 + 0x120]
	0x03D39A70 MRS X26, 0xC000
	0x03D39A74 LDR X8, [X26 + 0x28]
	0x03D39A78 ADRP X25, 0x6AE000
	0x03D39A7C MOV X21, X5
	0x03D39A80 MOV W23, W4
	0x03D39A84 STR X8, [X31 + 0xC8]
	0x03D39A88 LDRB W8, [X25 + 0xB69]
	0x03D39A8C MOV W24, W3
	0x03D39A90 MOV W22, W2
	0x03D39A94 MOV X19, X1
	0x03D39A98 MOV X20, X0
	0x03D39A9C TBNZ X8, 0x0, 0x3D39AE4
	0x03D39AA0 ADRP X0, 0x42B000
	0x03D39AA4 LDR X0, [X0 + 0x9C8]
	0x03D39AA8 BL 0x1C16CF4
	0x03D39AAC ADRP X0, 0x42C000
	0x03D39AB0 LDR X0, [X0 + 0xF8]
	0x03D39AB4 BL 0x1C16CF4
	0x03D39AB8 ADRP X0, 0x3BA000
	0x03D39ABC LDR X0, [X0 + 0xA28]
	0x03D39AC0 BL 0x1C16CF4
	0x03D39AC4 ADRP X0, 0x42B000
	0x03D39AC8 LDR X0, [X0 + 0x778]
	0x03D39ACC BL 0x1C16CF4
	0x03D39AD0 ADRP X0, 0x3E3000
	0x03D39AD4 LDR X0, [X0 + 0xEC8]
	0x03D39AD8 BL 0x1C16CF4
	0x03D39ADC MOVZ W8, 0x1
	0x03D39AE0 STRB W8, [X25 + 0xB69]
	0x03D39AE4 STR X31, [X31 + 0x48]
	0x03D39AE8 CBZ X19, 0x3D39E8C
	0x03D39AEC LDR W8, [X19 + 0xC4]
	0x03D39AF0 CMP W8, W22
	0x03D39AF4 B.EQ 0x3D39E48
	0x03D39AF8 STR W22, [X19 + 0xC4]
	0x03D39AFC TBZ X23, 0x0, 0x3D39B0C
	0x03D39B00 LDR W8, [X21 + 0x34]
	0x03D39B04 ADD W8, W8, 0x1
	0x03D39B08 STR W8, [X21 + 0x34]
	0x03D39B0C LDRB W25, [X19 + 0xE9]
	0x03D39B10 TBZ X24, 0x0, 0x3D39B1C
	0x03D39B14 MOVZ W8, 0x1
	0x03D39B18 B 0x3D39B40
	0x03D39B1C ADRP X8, 0x42B000
	0x03D39B20 LDR X8, [X8 + 0x778]
	0x03D39B24 LDR X0, [X8]
	0x03D39B28 LDR W8, [X0 + 0xE0]
	0x03D39B2C CBNZ W8, 0x3D39B34
	0x03D39B30 BL 0x1C16DFC
	0x03D39B34 MOV X0, X19
	0x03D39B38 BL 0x3D39994
	0x03D39B3C AND W8, W0, 0x1
	0x03D39B40 CMP W25, W8
	0x03D39B44 CSET W9, NE
	0x03D39B48 ORR W25, W9, W23, 0x0
	0x03D39B4C STRB W8, [X19 + 0xE9]
	0x03D39B50 TBNZ X25, 0x0, 0x3D39B9C
	0x03D39B54 LDR W8, [X19 + 0xC0]
	0x03D39B58 AND W8, W8, 0x70
	0x03D39B5C CMP W8, 0x40
	0x03D39B60 B.NE 0x3D39B9C
	0x03D39B64 LDR W8, [X21 + 0x24]
	0x03D39B68 ADD W8, W8, 0x1
	0x03D39B6C STR W8, [X21 + 0x24]
	0x03D39B70 ADRP X8, 0x42C000
	0x03D39B74 LDR X8, [X8 + 0xF8]
	0x03D39B78 LDR X0, [X8]
	0x03D39B7C LDR W8, [X0 + 0xE0]
	0x03D39B80 CBNZ W8, 0x3D39B88
	0x03D39B84 BL 0x1C16DFC
	0x03D39B88 MOV X0, X19
	0x03D39B8C MOV X1, X20
	0x03D39B90 MOV X2, X31
	0x03D39B94 BL 0x3D37B80
	0x03D39B98 B 0x3D39E48
	0x03D39B9C ADRP X27, 0x42B000
	0x03D39BA0 LDR X27, [X27 + 0x778]
	0x03D39BA4 LDR X0, [X27]
	0x03D39BA8 LDR W8, [X0 + 0xE0]
	0x03D39BAC CBNZ W8, 0x3D39BB4
	0x03D39BB0 BL 0x1C16DFC
	0x03D39BB4 MOV X0, X19
	0x03D39BB8 BL 0x3D3C38C
	0x03D39BBC ADRP X28, 0x3BA000
	0x03D39BC0 LDR X28, [X28 + 0xA28]
	0x03D39BC4 LDR W23, [X19 + 0xF0]
	0x03D39BC8 LDR X0, [X28]
	0x03D39BCC LDR W8, [X0 + 0xE0]
	0x03D39BD0 CBNZ W8, 0x3D39BD8
	0x03D39BD4 BL 0x1C16DFC
	0x03D39BD8 CMP W23, 0x0

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X19, 0x6AF000
	015 Move W8, [X19+2917]
	016 Move W25, W7
	017 Move W29, W6
	018 Move W26, W5
	019 Move W20, W3
	020 Move X21, X2
	021 Move X27, X1
	022 Move X22, X0
	023 Move [X31+76], W4
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0x42C000
	029 Move X0, [X0+2504]
	030 Call 0x1C17CF4
	031 Move X0, 0x3BB000
	032 Move X0, [X0+2600]
	033 Call 0x1C17CF4
	034 Move X0, 0x42C000
	035 Move X0, [X0+1912]
	036 Call 0x1C17CF4
	037 Move X0, 0x42C000
	038 Move X0, [X0+1888]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X19+2917], W8
	042 Move [X31+80], X31
	043 Move [X31+88], X31
	044 Compare X21, 0
	045 JumpIfEqual {445}
	046 Move W9, [X21+196]
	047 Move W8, [X31+192]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move TEMP, X25
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {57}
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {406}
	057 Move X9, [X31+208]
	058 Move [X21+196], W20
	059 Move [X31+64], X9
	060 Move TEMP, X26
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {68}
	064 Move X10, [X31+64]
	065 Move W9, [X10+12]
	066 Add W9, W9, 1
	067 Move [X10+12], W9
	068 Move W9, [X31+76]
	069 Move W19, [X21+192]
	070 Move W23, [X21+240]
	071 Move [X31+48], X27
	072 Or W9, W9, W26
	073 Or W8, W9, W8
	074 Move TEMP, X9
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {90}
	078 Move [X31+44], W8
	079 Move X8, 0x42C000
	080 Move X8, [X8+1912]
	081 Move X0, [X8]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X22
	087 Move X1, X21
	088 Call RenderEvents.DetermineSelfClipMethod, X0, X1
	089 Move W25, W0
	090 Move TEMP, X25
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {169}
	094 Move W25, W23
	095 Move [X31+44], W8
	096 Move X0, [X21+352]
	097 Move X1, X31
	098 Add X26, X21, 352
	099 Move [X31+88], X0
	100 Call RenderChainVEData.AllocatesID, X0
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {135}
	106 Compare X22, 0
	107 JumpIfEqual {445}
	108 Move X27, 0x42C000
	109 Move X27, [X27+1888]
	110 Add X25, X22, 320
	111 Move X0, [X27]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X0, X25
	117 Move X1, X31
	118 Call UIRVEShaderInfoAllocator.AllocClipRect, X0
	119 Move X8, 0x42C000
	120 Move X8, [X8+2504]
	121 Move [X31+88], X0
	122 Move X8, [X8]
	123 Move W9, [X8+224]
	124 Compare W9, 0
	125 JumpIfNotEqual {128}
	126 Move X0, X8
	127 Call 0x1C17DFC
	128 Add X0, X31, 88
	129 Move X1, X31
	130 Call BMPAlloc.IsValid, X0
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {182}
	135 Move W24, W29
	136 Move W25, 3
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {157}
	141 Compare X22, 0
	142 JumpIfEqual {445}
	143 Move X8, 0x42C000
	144 Move X8, [X8+1888]
	145 Move X27, [X26]
	146 Add X28, X22, 320
	147 Move X0, [X8]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move X0, X28
	153 Move X1, X27
	154 Move X2, X31
	155 Call UIRVEShaderInfoAllocator.FreeClipRect, X0, X1
	156 Move X27, [X31+48]
	157 Move X0, X21
	158 Move X1, X31
	159 Call VisualElement.get_renderHints, X0
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {181}
	164 Compare X27, 0
	165 JumpIfEqual {193}
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move W24, W29
	168 Add X8, X27, 352
	169 Move W9, [X31+76]
	170 Move W28, W31
	171 Move W11, W31
	172 Move W24, W31
	173 Move W26, W31
	174 Move W27, W31
	175 Move W25, W23
	176 Move [X31+60], W9
	177 Move TEMP, X8
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfEqual {260}
	181 Move W24, W29
	182 Move X0, [X27]
	183 Move W24, W29
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {189}
	187 Call 0x1C17DFC
	188 Move X0, [X27]
	189 Move X8, [X0+184]
	190 Move W25, 2
	191 Move X8, [X8+272]
	192 Move [X31+88], X8
	193 Move W27, W19
	194 Move X19, 0x42C000
	195 Move X19, [X19+1888]
	196 Move X0, [X19]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfEqual {201}
	200 Move W24, W29
	201 Move W24, W29
	202 Call 0x1C17DFC
	203 Move X0, [X19]
	204 Move X8, [X0+184]
	205 Move W19, W27
	206 Add X8, X8, 272
	207 Move X8, [X8]
	208 Move [X31+88], X8
	209 Move [X31+95], W31
	210 Move X8, 0x42C000
	211 Move X8, [X8+2504]
	212 Move X27, [X31+88]
	213 Move W29, W19
	214 Move X0, [X8]
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Move X0, X26
	220 Move X1, X27
	221 Move X2, X31
	222 Call BMPAlloc.Equals, X0, X1
	223 Move W27, W0
	224 Xor W28, W0, 1
	225 Move X0, X21
	226 Move X1, X31
	227 Call VisualElement.get_renderHints, X0
	228 Move X8, 0x3BB000
	229 Move X8, [X8+2600]
	230 And W31, W0, 1
	231 NotImplemented "Instruction CSET not yet implemented."
	232 Or W19, W27, W10
	233 Move X8, [X8]
	234 Move W9, [X8+224]
	235 Compare W9, 0
	236 JumpIfNotEqual {239}
	237 Move X0, X8
	238 Call 0x1C17DFC
	239 And W0, W19, 1
	240 Move X1, X31
	241 Call Debug.Assert, X0
	242 Move X8, [X31+88]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move [X26], X8
	245 Move W9, [X31+44]
	246 Move W26, W31
	247 Move W11, W31
	248 Move W19, W29
	249 Move W29, W24
	250 Move W8, [X31+76]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 NotImplemented "Instruction CSET not yet implemented."
	253 Move W27, W26
	254 Or W8, W28, W8
	255 Move [X31+60], W8
	256 Move TEMP, X9
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfNotEqual {331}
	260 Move X8, [X31+48]
	261 Compare X8, 0
	262 JumpIfEqual {313}
	263 Move W27, [X8+244]
	264 Move W23, [X8+248]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move W25, W11
	268 NotImplemented "Instruction CINC not yet implemented."
	269 Add W23, W23, 1
	270 NotImplemented "Instruction CMP not yet implemented."
	271 NotImplemented "Instruction CSET not yet implemented."
	272 NotImplemented "Instruction CMP not yet implemented."
	273 NotImplemented "Instruction CSET not yet implemented."
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Or W26, W8, W9
	276 NotImplemented "Instruction CSET not yet implemented."
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move W10, [X31+44]
	279 NotImplemented "Instruction CSET not yet implemented."
	280 Or W11, W8, W9
	281 Move X9, [X31+48]
	282 Or W10, W10, W26
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move W19, W29
	285 Move [X21+240], W25
	286 Move W8, [X31+76]
	287 Move W29, W24
	288 Or W8, W28, W8
	289 Move [X31+60], W8
	290 Move TEMP, X10
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfNotEqual {420}
	294 Compare X9, 0
	295 JumpIfEqual {442}
	296 Move W27, [X9+244]
	297 Move W23, [X9+248]
	298 Move W25, W11
	299 Move W24, 1
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move W29, W24
	302 Move X0, [X21+352]
	303 Move X1, X31
	304 Move [X31+40], W11
	305 Move [X31+44], W10
	306 Call RenderChainVEData.AllocatesID, X0
	307 Move TEMP, X0
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfNotEqual {431}
	311 Move W11, [X31+40]
	312 Move W9, [X31+44]
	313 Move W23, W31
	314 Move W25, W11
	315 Move X0, X21
	316 Move X1, X31
	317 Call VisualElement.get_renderHints, X0
	318 And W31, W0, 8
	319 NotImplemented "Instruction CCMP not yet implemented."
	320 NotImplemented "Instruction CSEL not yet implemented."
	321 Move W11, W25
	322 Move W9, [X21+248]
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Move W9, [X21+244]
	325 NotImplemented "Instruction CMP not yet implemented."
	326 NotImplemented "Instruction CSET not yet implemented."
	327 Or W27, W26, W9
	328 Move W27, 1
	329 Move [X21+244], W8
	330 Move [X21+248], W23
	331 Or W8, W29, W19
	332 And W8, W8, 1
	333 NotImplemented "Instruction CSET not yet implemented."
	334 Compare W8, 0
	335 JumpIfNotEqual {350}
	336 Or W8, W28, W27
	337 Or W9, W11, W8
	338 Move TEMP, X9
	339 And TEMP, TEMP, 1
	340 Compare TEMP, 1
	341 JumpIfNotEqual {350}
	342 Compare X22, 0
	343 JumpIfEqual {445}
	344 And W2, W8, 1
	345 Move X0, X22
	346 Move X1, X21
	347 Move X3, X31
	348 Call RenderChain.UIEOnVisualsChanged, X0, X1, X2
	349 Move W23, 1
	350 Compare W24, 0
	351 JumpIfEqual {360}
	352 Compare X22, 0
	353 JumpIfEqual {445}
	354 Move W3, 1
	355 Move X0, X22
	356 Move X1, X21
	357 Move W2, W31
	358 Move X4, X31
	359 Call RenderChain.UIEOnTransformOrSizeChanged, X0, X1, X2, X3
	360 Move W8, [X31+60]
	361 Or W8, W8, W27
	362 Move TEMP, X8
	363 And TEMP, TEMP, 1
	364 Compare TEMP, 1
	365 JumpIfNotEqual {406}
	366 Move X8, [X21+888]
	367 Add X0, X31, 80
	368 Move X1, X31
	369 Move [X31+80], X8
	370 Call Hierarchy.get_childCount, X0
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Move X19, 0x42C000
	373 Move X29, [X31+200]
	374 Move X19, [X19+1912]
	375 Move W24, W0
	376 Move W25, W31
	377 Move X8, [X21+888]
	378 Add X0, X31, 80
	379 Move W1, W25
	380 Move X2, X31
	381 Move [X31+80], X8
	382 Call Hierarchy.get_Item, X0, X1
	383 Move X8, [X19]
	384 Move X26, X0
	385 Move W9, [X8+224]
	386 Compare W9, 0
	387 JumpIfNotEqual {390}
	388 Move X0, X8
	389 Call 0x1C17DFC
	390 Move X8, [X31+64]
	391 And W7, W28, 1
	392 Move X0, X22
	393 Move X1, X21
	394 Move [X31+8], X29
	395 Move [X31+16], X8
	396 Move W8, [X31+76]
	397 Move X2, X26
	398 Move W3, W20
	399 Move W5, W31
	400 And W4, W8, 1
	401 Move W6, W23
	402 Move [X31], W27
	403 Call RenderEvents.DepthFirstOnClippingChanged, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	404 Add W25, W25, 1
	405 NotImplemented "Instruction CMP not yet implemented."
	406 Move X20, [X31+176]
	407 Move X19, [X31+184]
	408 Move X22, [X31+160]
	409 Move X21, [X31+168]
	410 Move X24, [X31+144]
	411 Move X23, [X31+152]
	412 Move X26, [X31+128]
	413 Move X25, [X31+136]
	414 Move X28, [X31+112]
	415 Move X27, [X31+120]
	416 Move X29, [X31+96]
	417 Move X30, [X31+104]
	418 Add X31, X31, 192
	419 Return 
	420 Move W27, W31
	421 Move W24, 1
	422 Move W8, [X31+76]
	423 Move W24, W31
	424 Move W27, W31
	425 Or W8, W28, W8
	426 Move [X31+60], W8
	427 Move TEMP, X10
	428 And TEMP, TEMP, 1
	429 Compare TEMP, 1
	430 JumpIfEqual {260}
	431 Move W8, [X31+76]
	432 Move W24, W31
	433 Move W27, W31
	434 Or W8, W28, W8
	435 Move [X31+60], W8
	436 Move W11, [X31+40]
	437 Move W8, [X31+44]
	438 Move TEMP, X8
	439 And TEMP, TEMP, 1
	440 Compare TEMP, 1
	441 JumpIfEqual {260}
	442 Move W8, W31
	443 Move W23, W31
	444 Move W24, 1
	445 Call 0x1C17F20

Method: System.Void DepthFirstOnOpacityChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, System.Single parentCompositeOpacity, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, System.Boolean hierarchical, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats, System.Boolean isDoingFullVertexRegeneration = False)

Disassembly:
	0x03D39CBC CBNZ W8, 0x3D39CC4
	0x03D39CC0 BL 0x1C16DFC
	0x03D39CC4 MOV X0, X20
	0x03D39CC8 MOV X1, X19
	0x03D39CCC BL 0x3D3BDA8
	0x03D39CD0 MOV X0, X19
	0x03D39CD4 MOV X1, X31
	0x03D39CD8 BL 0x3DEC0F4
	0x03D39CDC TBZ X0, 0x4, 0x3D39CFC
	0x03D39CE0 LDR X0, [X27]
	0x03D39CE4 LDR W8, [X0 + 0xE0]
	0x03D39CE8 CBNZ W8, 0x3D39CF0
	0x03D39CEC BL 0x1C16DFC
	0x03D39CF0 MOV X0, X20
	0x03D39CF4 MOV X1, X19
	0x03D39CF8 BL 0x3D3AF44
	0x03D39CFC ADRP X8, 0x42C000
	0x03D39D00 LDR X8, [X8 + 0xF8]
	0x03D39D04 ADD X23, X31, 0x90
	0x03D39D08 LDR X0, [X8]
	0x03D39D0C LDR W8, [X0 + 0xE0]
	0x03D39D10 CBNZ W8, 0x3D39D18
	0x03D39D14 BL 0x1C16DFC
	0x03D39D18 ADD X8, X31, 0x50
	0x03D39D1C MOV X0, X20
	0x03D39D20 MOV X1, X19
	0x03D39D24 MOV X2, X21
	0x03D39D28 MOV X3, X31
	0x03D39D2C BL 0x3D35590
	0x03D39D30 LDRB W28, [X31 + 0x50]
	0x03D39D34 LDUR V0, [X31 + 0x51]
	0x03D39D38 LDUR V1, [X31 + 0x61]
	0x03D39D3C LDUR V2, [X31 + 0x71]
	0x03D39D40 LDR X8, [X31 + 0x80]
	0x03D39D44 STP V0, V1, [X31 + 0x90]
	0x03D39D48 STR V2, [X31 + 0xB]
	0x03D39D4C STUR X8, [X23 + 0x2F]
	0x03D39D50 TBZ X25, 0x0, 0x3D39DD8
	0x03D39D54 LDR X8, [X19 + 0x378]
	0x03D39D58 ADD X0, X31, 0x48
	0x03D39D5C MOV X1, X31
	0x03D39D60 STR X8, [X31 + 0x48]
	0x03D39D64 BL 0x3DF8994
	0x03D39D68 CMP W0, 0x1
	0x03D39D6C B.LT 0x3D39DD8
	0x03D39D70 MOV W23, W0
	0x03D39D74 MOV W24, W31
	0x03D39D78 LDR X8, [X19 + 0x378]
	0x03D39D7C ADD X0, X31, 0x48
	0x03D39D80 MOV W1, W24
	0x03D39D84 MOV X2, X31
	0x03D39D88 STR X8, [X31 + 0x48]
	0x03D39D8C BL 0x3DF98E4
	0x03D39D90 LDR X8, [X27]
	0x03D39D94 LDRB W29, [X19 + 0xE9]
	0x03D39D98 MOV X25, X0
	0x03D39D9C LDR W9, [X8 + 0xE0]
	0x03D39DA0 CBNZ W9, 0x3D39DAC
	0x03D39DA4 MOV X0, X8
	0x03D39DA8 BL 0x1C16DFC
	0x03D39DAC CMP W29, 0x0
	0x03D39DB0 CSET W3, NE
	0x03D39DB4 MOVZ W4, 0x1
	0x03D39DB8 MOV X0, X20
	0x03D39DBC MOV X1, X25
	0x03D39DC0 MOV W2, W22
	0x03D39DC4 MOV X5, X21
	0x03D39DC8 BL 0x3D39A54
	0x03D39DCC ADD W24, W24, 0x1
	0x03D39DD0 CMP W23, W24
	0x03D39DD4 B.NE 0x3D39D78
	0x03D39DD8 TBZ X28, 0x0, 0x3D39E48
	0x03D39DDC ADD X8, X31, 0x90
	0x03D39DE0 ADRP X9, 0x42C000
	0x03D39DE4 LDP V0, V1, [X31 + 0x90]
	0x03D39DE8 LDR V2, [X31 + 0xB]
	0x03D39DEC LDUR X8, [X8 + 0x2F]
	0x03D39DF0 LDR X9, [X9 + 0xF8]
	0x03D39DF4 STP V0, V1, [X31 + 0x50]
	0x03D39DF8 STR V2, [X31 + 0x7]
	0x03D39DFC STUR X8, [X31 + 0x7F]
	0x03D39E00 LDR X0, [X9]
	0x03D39E04 LDR W8, [X0 + 0xE0]
	0x03D39E08 CBNZ W8, 0x3D39E10
	0x03D39E0C BL 0x1C16DFC
	0x03D39E10 LDP V0, V1, [X31 + 0x50]
	0x03D39E14 LDR V2, [X31 + 0x7]
	0x03D39E18 LDUR X8, [X31 + 0x7F]
	0x03D39E1C ADD X1, X31, 0x10
	0x03D39E20 MOV X0, X19
	0x03D39E24 MOV X2, X20
	0x03D39E28 MOV X3, X21
	0x03D39E2C MOV X4, X31
	0x03D39E30 STRB W28, [X31 + 0x10]
	0x03D39E34 STUR V0, [X31 + 0x11]
	0x03D39E38 STUR V1, [X31 + 0x21]
	0x03D39E3C STUR V2, [X31 + 0x31]
	0x03D39E40 STR X8, [X31 + 0x40]
	0x03D39E44 BL 0x3D37944
	0x03D39E48 LDR X8, [X26 + 0x28]
	0x03D39E4C LDR X9, [X31 + 0xC8]
	0x03D39E50 CMP X8, X9
	0x03D39E54 B.NE 0x3D39E90
	0x03D39E58 LDP X20, X19, [X31 + 0x120]
	0x03D39E5C LDP X22, X21, [X31 + 0x110]
	0x03D39E60 LDP X24, X23, [X31 + 0x100]
	0x03D39E64 LDP X26, X25, [X31 + 0xF0]
	0x03D39E68 LDP X28, X27, [X31 + 0xE0]
	0x03D39E6C LDP X29, X30, [X31 + 0xD0]
	0x03D39E70 ADD X31, X31, 0x130
	0x03D39E74 RET
	0x03D39E78 MOV X0, X19
	0x03D39E7C MOV X1, X31
	0x03D39E80 BL 0x3DEC0F4
	0x03D39E84 AND W23, W0, 0x1
	0x03D39E88 B 0x3D39C64
	0x03D39E8C BL 0x1C16F20
	0x03D39E90 BL 0x3EB1B20
	0x03D39E94 SUB X31, X31, 0xB0
	0x03D39E98 STR X30, [X31 + 0x80]
	0x03D39E9C STP X22, X21, [X31 + 0x90]
	0x03D39EA0 STP X20, X19, [X31 + 0xA0]
	0x03D39EA4 ADRP X21, 0x6AE000
	0x03D39EA8 LDRB W9, [X21 + 0xB61]
	0x03D39EAC MOV X20, X0
	0x03D39EB0 MOV X19, X8
	0x03D39EB4 TBNZ X9, 0x0, 0x3D39ED8
	0x03D39EB8 ADRP X0, 0x3BA000
	0x03D39EBC LDR X0, [X0 + 0xA28]
	0x03D39EC0 BL 0x1C16CF4
	0x03D39EC4 ADRP X0, 0x3E2000
	0x03D39EC8 LDR X0, [X0 + 0x898]
	0x03D39ECC BL 0x1C16CF4
	0x03D39ED0 MOVZ W8, 0x1
	0x03D39ED4 STRB W8, [X21 + 0xB61]
	0x03D39ED8 MOVI V0.2D, 0x0
	0x03D39EDC STP V0, V0, [X31 + 0x60]
	0x03D39EE0 STP V0, V0, [X31 + 0x40]
	0x03D39EE4 CBZ X20, 0x3D39FD8
	0x03D39EE8 LDR X0, [X20 + 0x158]
	0x03D39EEC ADRP X22, 0x3BA000
	0x03D39EF0 LDR X22, [X22 + 0xA28]
	0x03D39EF4 MOV X1, X31
	0x03D39EF8 BL 0x3D2795C
	0x03D39EFC TBZ X0, 0x0, 0x3D39F08
	0x03D39F00 MOVZ W21, 0x1
	0x03D39F04 B 0x3D39F18
	0x03D39F08 MOV X0, X20
	0x03D39F0C MOV X1, X31
	0x03D39F10 BL 0x3DEC0F4
	0x03D39F14 AND W21, W0, 0x1
	0x03D39F18 LDR X0, [X22]
	0x03D39F1C LDR W8, [X0 + 0xE0]
	0x03D39F20 CBNZ W8, 0x3D39F28
	0x03D39F24 BL 0x1C16DFC
	0x03D39F28 MOV W0, W21
	0x03D39F2C MOV X1, X31
	0x03D39F30 BL 0x3C06E58
	0x03D39F34 LDR X0, [X20 + 0x98]
	0x03D39F38 CBZ X0, 0x3D39F8C
	0x03D39F3C ADRP X22, 0x3E2000
	0x03D39F40 LDR X22, [X22 + 0x898]
	0x03D39F44 MOV X1, X31
	0x03D39F48 BL 0x3DEE078
	0x03D39F4C MOV X21, X0
	0x03D39F50 MOV X0, X20
	0x03D39F54 MOV X1, X31
	0x03D39F58 BL 0x3DEDBEC
	0x03D39F5C LDR X8, [X22]
	0x03D39F60 MOV X20, X0
	0x03D39F64 LDR W9, [X8 + 0xE0]
	0x03D39F68 CBNZ W9, 0x3D39F74
	0x03D39F6C MOV X0, X8
	0x03D39F70 BL 0x1C16DFC
	0x03D39F74 ADD X2, X31, 0x40
	0x03D39F78 MOV X0, X21
	0x03D39F7C MOV X1, X20
	0x03D39F80 MOV X3, X31
	0x03D39F84 BL 0x3DEE2C4
	0x03D39F88 B 0x3D39FAC
	0x03D39F8C ADD X8, X31, 0x0
	0x03D39F90 MOV X0, X20
	0x03D39F94 MOV X1, X31
	0x03D39F98 BL 0x3DEDD74
	0x03D39F9C LDP V0, V1, [X31]
	0x03D39FA0 LDP V2, V3, [X31 + 0x20]
	0x03D39FA4 STP V0, V1, [X31 + 0x40]
	0x03D39FA8 STP V2, V3, [X31 + 0x60]
	0x03D39FAC MOVZ W8, 0x3F800000
	0x03D39FB0 STR W8, [X31 + 0x68]
	0x03D39FB4 LDP V1, V0, [X31 + 0x60]
	0x03D39FB8 LDP V3, V2, [X31 + 0x40]
	0x03D39FBC LDP X22, X21, [X31 + 0x90]
	0x03D39FC0 LDR X30, [X31 + 0x80]
	0x03D39FC4 STP V1, V0, [X19 + 0x20]
	0x03D39FC8 STP V3, V2, [X19]
	0x03D39FCC LDP X20, X19, [X31 + 0xA0]
	0x03D39FD0 ADD X31, X31, 0xB0
	0x03D39FD4 RET
	0x03D39FD8 BL 0x1C16F20
	0x03D39FDC STP D11, D10, [X31 - 0x40]!
	0x03D39FE0 STP D9, D8, [X31 + 0x10]
	0x03D39FE4 STP X30, X21, [X31 + 0x20]
	0x03D39FE8 STP X20, X19, [X31 + 0x30]
	0x03D39FEC ADRP X20, 0x6AE000
	0x03D39FF0 LDRB W8, [X20 + 0xB62]
	0x03D39FF4 MOV X19, X0
	0x03D39FF8 TBNZ X8, 0x0, 0x3D3A01C
	0x03D39FFC ADRP X0, 0x3BA000
	0x03D3A000 LDR X0, [X0 + 0xA28]
	0x03D3A004 BL 0x1C16CF4
	0x03D3A008 ADRP X0, 0x3E1000
	0x03D3A00C LDR X0, [X0 + 0x898]
	0x03D3A010 BL 0x1C16CF4
	0x03D3A014 MOVZ W8, 0x1
	0x03D3A018 STRB W8, [X20 + 0xB62]
	0x03D3A01C CBZ X19, 0x3D3A15C
	0x03D3A020 LDR X0, [X19 + 0x160]
	0x03D3A024 ADRP X20, 0x3B9000
	0x03D3A028 LDR X20, [X20 + 0xA28]
	0x03D3A02C MOV X1, X31
	0x03D3A030 BL 0x3D2795C
	0x03D3A034 LDR X8, [X20]
	0x03D3A038 MOV W20, W0
	0x03D3A03C LDR W9, [X8 + 0xE0]
	0x03D3A040 CBNZ W9, 0x3D3A04C
	0x03D3A044 MOV X0, X8
	0x03D3A048 BL 0x1C16DFC
	0x03D3A04C AND W0, W20, 0x1
	0x03D3A050 MOV X1, X31
	0x03D3A054 BL 0x3C06E58
	0x03D3A058 LDR X8, [X19 + 0x98]
	0x03D3A05C CBZ X8, 0x3D3A0FC
	0x03D3A060 MOV X0, X19
	0x03D3A064 MOV X1, X31
	0x03D3A068 BL 0x3DEE7E4
	0x03D3A06C LDR X0, [X19 + 0x98]
	0x03D3A070 CBZ X0, 0x3D3A15C
	0x03D3A074 ADRP X20, 0x3E1000
	0x03D3A078 LDR X20, [X20 + 0x898]
	0x03D3A07C MOV X1, X31
	0x03D3A080 MOV V8.16B, V0.16B
	0x03D3A084 MOV V9.16B, V1.16B
	0x03D3A088 MOV V10.16B, V2.16B
	0x03D3A08C MOV V11.16B, V3.16B
	0x03D3A090 BL 0x3DEE078
	0x03D3A094 LDR X8, [X20]
	0x03D3A098 MOV X19, X0
	0x03D3A09C LDR W9, [X8 + 0xE0]
	0x03D3A0A0 CBNZ W9, 0x3D3A0AC
	0x03D3A0A4 MOV X0, X8
	0x03D3A0A8 BL 0x1C16DFC
	0x03D3A0AC ADRP X21, 0x6AD000
	0x03D3A0B0 LDRB W8, [X21 + 0xBE1]
	0x03D3A0B4 CBNZ W8, 0x3D3A0CC
	0x03D3A0B8 ADRP X0, 0x3E1000
	0x03D3A0BC LDR X0, [X0 + 0x898]
	0x03D3A0C0 BL 0x1C16CF4
	0x03D3A0C4 MOVZ W8, 0x1
	0x03D3A0C8 STRB W8, [X21 + 0xBE1]
	0x03D3A0CC LDR X0, [X20]
	0x03D3A0D0 LDR W8, [X0 + 0xE0]
	0x03D3A0D4 CBNZ W8, 0x3D3A0DC
	0x03D3A0D8 BL 0x1C16DFC
	0x03D3A0DC MOV X0, X19
	0x03D3A0E0 MOV V0.16B, V8.16B
	0x03D3A0E4 MOV V1.16B, V9.16B
	0x03D3A0E8 MOV V2.16B, V10.16B
	0x03D3A0EC MOV V3.16B, V11.16B
	0x03D3A0F0 MOV X1, X31
	0x03D3A0F4 BL 0x3DF7298
	0x03D3A0F8 B 0x3D3A108
	0x03D3A0FC MOV X0, X19

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+16], D10
	003 Move [X31+32], D9
	004 Move [X31+40], D8
	005 Move [X31+48], X29
	006 Move [X31+56], X30
	007 Move [X31+64], X28
	008 Move [X31+72], X27
	009 Move [X31+80], X26
	010 Move [X31+88], X25
	011 Move [X31+96], X24
	012 Move [X31+104], X23
	013 Move [X31+112], X22
	014 Move [X31+120], X21
	015 Move [X31+128], X20
	016 Move [X31+136], X19
	017 Move X25, 0x6AF000
	018 Move W8, [X25+2918]
	019 Move W19, W5
	020 Move X20, X4
	021 Move W21, W3
	022 Move W22, W2
	023 Move X23, X1
	024 Move V9, V0
	025 Move X24, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0x42C000
	031 Move X0, [X0+2504]
	032 Call 0x1C17CF4
	033 Move X0, 0x3E4000
	034 Move X0, [X0+288]
	035 Call 0x1C17CF4
	036 Move X0, 0x42C000
	037 Move X0, [X0+1912]
	038 Call 0x1C17CF4
	039 Move X0, 0x42C000
	040 Move X0, [X0+1888]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X25+2918], W8
	044 Move [X31+24], X31
	045 Compare X23, 0
	046 JumpIfEqual {328}
	047 Move W8, [X23+196]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X23+196], W22
	050 Move W8, [X20+32]
	051 Move X0, X23
	052 Move X1, X31
	053 Add W8, W8, 1
	054 Move [X20+32], W8
	055 Move V10, [X23+432]
	056 Call VisualElement.get_resolvedStyle, X0
	057 Compare X0, 0
	058 JumpIfEqual {328}
	059 Move X10, 0x3E4000
	060 Move X8, [X0]
	061 Move X10, [X10+288]
	062 Move X25, X0
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Move X1, [X10]
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move W2, 27
	074 Move X0, X25
	075 Call 0x1C5D788
	076 Move W9, [X10]
	077 Add W9, W9, 27
	078 Add X8, X8, W9
	079 Add X0, X8, 312
	080 Move X8, [X0]
	081 Move X1, [X0+8]
	082 Move X0, X25
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X28, 0x42C000
	085 Move X28, [X28+1912]
	086 Multiply S8, S0, S9
	087 Move X0, [X28]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {93}
	091 Call 0x1C17DFC
	092 Move X0, [X28]
	093 Move X8, [X0+184]
	094 NotImplemented "Instruction FABD not yet implemented."
	095 Move V0, [X8]
	096 Move X8, -52752384
	097 Move V2, [X8+3880]
	098 NotImplemented "Instruction FCMP not yet implemented."
	099 NotImplemented "Instruction CSET not yet implemented."
	100 NotImplemented "Instruction FCMP not yet implemented."
	101 NotImplemented "Instruction CSET not yet implemented."
	102 NotImplemented "Instruction FCMP not yet implemented."
	103 Xor W8, W8, W9
	104 NotImplemented "Instruction CSET not yet implemented."
	105 Or W27, W9, W8
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move [X23+432], S8
	108 Move X8, -52748288
	109 Move W26, [X23+367]
	110 Move V0, [X8+752]
	111 Add X25, X23, 360
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Add S0, S9, S0
	114 NotImplemented "Instruction CSET not yet implemented."
	115 NotImplemented "Instruction FCMP not yet implemented."
	116 Compare W26, 0
	117 JumpIfEqual {154}
	118 Compare W27, 0
	119 JumpIfNotEqual {170}
	120 Compare W26, 0
	121 JumpIfEqual {224}
	122 Compare W27, 0
	123 JumpIfEqual {255}
	124 Move X8, 0x42C000
	125 Move X8, [X8+2504]
	126 Move X0, [X8]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X0, X25
	132 Move X1, X31
	133 Call BMPAlloc.IsValid, X0
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {266}
	138 Compare X24, 0
	139 JumpIfEqual {328}
	140 Move X8, 0x42C000
	141 Move X8, [X8+1888]
	142 Move X25, [X25]
	143 Add X26, X24, 320
	144 Move X0, [X8]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move X0, X26
	150 Move X1, X25
	151 Move V0, V8
	152 Move X2, X31
	153 Call UIRVEShaderInfoAllocator.SetOpacityValue, X0, X1, V0
	154 Compare X24, 0
	155 JumpIfEqual {328}
	156 Move X8, 0x42C000
	157 Move X8, [X8+1888]
	158 Add X9, X24, 320
	159 Move X0, [X8]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {166}
	163 Move [X31+8], X9
	164 Call 0x1C17DFC
	165 Move X9, [X31+8]
	166 Move X0, X9
	167 Move X1, X31
	168 Call UIRVEShaderInfoAllocator.AllocOpacity, X0
	169 Move [X25], X0
	170 Move X8, 0x42C000
	171 Move X8, [X8+2504]
	172 Move X0, [X8]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Move X0, X25
	178 Move X1, X31
	179 Call BMPAlloc.IsValid, X0
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {201}
	184 Compare X24, 0
	185 JumpIfEqual {328}
	186 Move X8, 0x42C000
	187 Move X8, [X8+1888]
	188 Move X1, [X25]
	189 Add X25, X24, 320
	190 Move X0, [X8]
	191 Move W8, [X0+224]
	192 Compare W8, 0
	193 JumpIfNotEqual {197}
	194 Move [X31+8], X1
	195 Call 0x1C17DFC
	196 Move X1, [X31+8]
	197 Move X0, X25
	198 Move V0, V8
	199 Move X2, X31
	200 Call UIRVEShaderInfoAllocator.SetOpacityValue, X0, X1, V0
	201 Compare W26, 0
	202 JumpIfNotEqual {256}
	203 Move TEMP, X19
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfEqual {256}
	207 Move W8, [X23+192]
	208 Move TEMP, X8
	209 And TEMP, TEMP, 16
	210 Compare TEMP, 16
	211 JumpIfEqual {266}
	212 Move X8, [X23+256]
	213 Compare X8, 0
	214 JumpIfNotEqual {218}
	215 Move X8, [X23+264]
	216 Compare X8, 0
	217 JumpIfEqual {266}
	218 Compare X24, 0
	219 JumpIfEqual {328}
	220 Move X0, X24
	221 Move X1, X23
	222 Move X2, X31
	223 Call RenderChain.UIEOnOpacityIdChanged, X0, X1
	224 Move X8, [X23+888]
	225 Add X0, X31, 24
	226 Move X1, X31
	227 Move [X31+24], X8
	228 Call Hierarchy.get_parent, X0
	229 Compare X0, 0
	230 JumpIfEqual {255}
	231 Move X8, [X23+888]
	232 Add X0, X31, 24
	233 Move X1, X31
	234 Move [X31+24], X8
	235 Call Hierarchy.get_parent, X0
	236 Compare X0, 0
	237 JumpIfEqual {328}
	238 Move X8, 0x42C000
	239 Move X8, [X8+2504]
	240 Move X26, [X0+360]
	241 Move X8, [X8]
	242 Move W9, [X8+224]
	243 Compare W9, 0
	244 JumpIfNotEqual {247}
	245 Move X0, X8
	246 Call 0x1C17DFC
	247 Move X0, X25
	248 Move X1, X26
	249 Move X2, X31
	250 Call BMPAlloc.Equals, X0, X1
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfNotEqual {314}
	255 Move W29, W31
	256 And W8, W29, W19
	257 Or W8, W27, W8
	258 Move TEMP, X8
	259 And TEMP, TEMP, 1
	260 Compare TEMP, 1
	261 JumpIfEqual {266}
	262 Move TEMP, X21
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfNotEqual {297}
	266 Move X8, [X23+888]
	267 Add X0, X31, 24
	268 Move X1, X31
	269 Move [X31+24], X8
	270 Call Hierarchy.get_childCount, X0
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move W25, W0
	273 Move W26, W31
	274 Move X8, [X23+888]
	275 Add X0, X31, 24
	276 Move W1, W26
	277 Move X2, X31
	278 Move [X31+24], X8
	279 Call Hierarchy.get_Item, X0, X1
	280 Move X8, [X28]
	281 Move X27, X0
	282 Move W9, [X8+224]
	283 Compare W9, 0
	284 JumpIfNotEqual {287}
	285 Move X0, X8
	286 Call 0x1C17DFC
	287 And W3, W21, 1
	288 And W5, W19, 1
	289 Move X0, X24
	290 Move V0, V8
	291 Move X1, X27
	292 Move W2, W22
	293 Move X4, X20
	294 Call RenderEvents.DepthFirstOnOpacityChanged, X0, V0, X1, X2, X3, X4, X5
	295 Add W26, W26, 1
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move X20, [X31+128]
	298 Move X19, [X31+136]
	299 Move X22, [X31+112]
	300 Move X21, [X31+120]
	301 Move X24, [X31+96]
	302 Move X23, [X31+104]
	303 Move X26, [X31+80]
	304 Move X25, [X31+88]
	305 Move X28, [X31+64]
	306 Move X27, [X31+72]
	307 Move X29, [X31+48]
	308 Move X30, [X31+56]
	309 Move D9, [X31+32]
	310 Move D8, [X31+40]
	311 Move V10, [X31+16]
	312 Add X31, X31, 144
	313 Return 
	314 Move X8, [X23+888]
	315 Add X0, X31, 24
	316 Move X1, X31
	317 Move [X31+24], X8
	318 Call Hierarchy.get_parent, X0
	319 Compare X0, 0
	320 JumpIfEqual {328}
	321 Move X8, [X0+360]
	322 Move [X23+360], X8
	323 Move [X23+367], W31
	324 Move TEMP, X19
	325 And TEMP, TEMP, 1
	326 Compare TEMP, 1
	327 JumpIfNotEqual {207}
	328 Call 0x1C17F20

Method: System.Void OnColorChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)

Disassembly:
	0x03D3A188 MOV W23, W3
	0x03D3A18C MOV X20, X2
	0x03D3A190 MOV X22, X1
	0x03D3A194 MOV X21, X0
	0x03D3A198 TBNZ X8, 0x0, 0x3D3A1D4
	0x03D3A19C ADRP X0, 0x42A000
	0x03D3A1A0 LDR X0, [X0 + 0x9C8]
	0x03D3A1A4 BL 0x1C16CF4
	0x03D3A1A8 ADRP X0, 0x3B9000
	0x03D3A1AC LDR X0, [X0 + 0xA28]
	0x03D3A1B0 BL 0x1C16CF4
	0x03D3A1B4 ADRP X0, 0x42A000
	0x03D3A1B8 LDR X0, [X0 + 0x778]
	0x03D3A1BC BL 0x1C16CF4
	0x03D3A1C0 ADRP X0, 0x42A000
	0x03D3A1C4 LDR X0, [X0 + 0x760]
	0x03D3A1C8 BL 0x1C16CF4
	0x03D3A1CC MOVZ W8, 0x1
	0x03D3A1D0 STRB W8, [X24 + 0xB63]
	0x03D3A1D4 STR X31, [X31 + 0x88]
	0x03D3A1D8 CBZ X20, 0x3D3A6A8
	0x03D3A1DC ADRP X27, 0x3B9000
	0x03D3A1E0 LDR X27, [X27 + 0xA28]
	0x03D3A1E4 MOV X0, X20
	0x03D3A1E8 MOV X1, X31
	0x03D3A1EC BL 0x3DEC0CC
	0x03D3A1F0 LDR X8, [X27]
	0x03D3A1F4 MOV X24, X0
	0x03D3A1F8 LDR W9, [X8 + 0xE0]
	0x03D3A1FC CBNZ W9, 0x3D3A208
	0x03D3A200 MOV X0, X8
	0x03D3A204 BL 0x1C16DFC
	0x03D3A208 CMP X24, 0x0
	0x03D3A20C CSET W0, NE
	0x03D3A210 MOV X1, X31
	0x03D3A214 BL 0x3C06E58
	0x03D3A218 LDRB W8, [X20 + 0xE8]
	0x03D3A21C CBZ W8, 0x3D3A228
	0x03D3A220 MOV W0, W31
	0x03D3A224 B 0x3D3A688
	0x03D3A228 ADD X24, X20, 0x88
	0x03D3A22C TBZ X19, 0x0, 0x3D3A240
	0x03D3A230 MOVZ W2, 0x148
	0x03D3A234 MOV X0, X24
	0x03D3A238 MOV W1, W31
	0x03D3A23C BL 0x3EB1B10
	0x03D3A240 MOVZ W25, 0x1
	0x03D3A244 STRB W25, [X20 + 0xE8]
	0x03D3A248 ADRP X26, 0x69E000
	0x03D3A24C LDRB W8, [X26 + 0xAC0]
	0x03D3A250 CBNZ W8, 0x3D3A264
	0x03D3A254 ADRP X0, 0x3BD000
	0x03D3A258 LDR X0, [X0 + 0x270]
	0x03D3A25C BL 0x1C16CF4
	0x03D3A260 STRB W25, [X26 + 0xAC0]
	0x03D3A264 ADRP X8, 0x3BD000
	0x03D3A268 LDR X8, [X8 + 0x270]
	0x03D3A26C ADRP X26, 0x42A000
	0x03D3A270 LDR X8, [X8]
	0x03D3A274 LDR X8, [X8 + 0xB8]
	0x03D3A278 LDP V1, V0, [X8 + 0x60]
	0x03D3A27C LDP V3, V2, [X8 + 0x40]
	0x03D3A280 STP V1, V0, [X20 + 0x130]
	0x03D3A284 STP V3, V2, [X20 + 0x110]
	0x03D3A288 LDR X26, [X26 + 0x760]
	0x03D3A28C LDR X0, [X26]
	0x03D3A290 LDR W8, [X0 + 0xE0]
	0x03D3A294 CBNZ W8, 0x3D3A2A0
	0x03D3A298 BL 0x1C16DFC
	0x03D3A29C LDR X0, [X26]
	0x03D3A2A0 LDR X8, [X0 + 0xB8]
	0x03D3A2A4 ADRP X28, 0x42A000
	0x03D3A2A8 LDR X8, [X8 + 0x108]
	0x03D3A2AC STR X8, [X20 + 0x158]
	0x03D3A2B0 LDR X8, [X0 + 0xB8]
	0x03D3A2B4 LDR X8, [X8 + 0x110]
	0x03D3A2B8 STR X8, [X20 + 0x160]
	0x03D3A2BC LDR X8, [X0 + 0xB8]
	0x03D3A2C0 LDR X8, [X8 + 0x118]
	0x03D3A2C4 STR X8, [X20 + 0x168]
	0x03D3A2C8 LDR X28, [X28 + 0x9C8]
	0x03D3A2CC LDR X8, [X28]
	0x03D3A2D0 LDR W9, [X8 + 0xE0]
	0x03D3A2D4 CBNZ W9, 0x3D3A2E8
	0x03D3A2D8 MOV X0, X8
	0x03D3A2DC BL 0x1C16DFC
	0x03D3A2E0 LDR X8, [X28]
	0x03D3A2E4 LDR X0, [X26]
	0x03D3A2E8 LDR X9, [X8 + 0xB8]
	0x03D3A2EC ADRP X25, 0x42A000
	0x03D3A2F0 LDR X9, [X9]
	0x03D3A2F4 STR X9, [X20 + 0x178]
	0x03D3A2F8 LDR X9, [X8 + 0xB8]
	0x03D3A2FC LDR X9, [X9]
	0x03D3A300 STR X9, [X20 + 0x180]
	0x03D3A304 LDR X9, [X8 + 0xB8]
	0x03D3A308 LDR X9, [X9]
	0x03D3A30C STR X9, [X20 + 0x188]
	0x03D3A310 LDR X9, [X8 + 0xB8]
	0x03D3A314 LDR X9, [X9]
	0x03D3A318 STR X9, [X20 + 0x190]
	0x03D3A31C LDR X9, [X8 + 0xB8]
	0x03D3A320 LDR X9, [X9]
	0x03D3A324 STR X9, [X20 + 0x198]
	0x03D3A328 LDR X9, [X8 + 0xB8]
	0x03D3A32C LDR X9, [X9]
	0x03D3A330 STR X9, [X20 + 0x1A0]
	0x03D3A334 LDR X8, [X8 + 0xB8]
	0x03D3A338 MOVN W9, 0x80800000
	0x03D3A33C LDR X8, [X8]
	0x03D3A340 STR X8, [X20 + 0x1A8]
	0x03D3A344 LDR X8, [X0 + 0xB8]
	0x03D3A348 LDR X8, [X8 + 0x128]
	0x03D3A34C STR W9, [X20 + 0x1B0]
	0x03D3A350 STR X8, [X20 + 0x170]
	0x03D3A354 LDR X25, [X25 + 0x778]
	0x03D3A358 LDR X0, [X25]
	0x03D3A35C LDR W8, [X0 + 0xE0]
	0x03D3A360 CBNZ W8, 0x3D3A368
	0x03D3A364 BL 0x1C16DFC
	0x03D3A368 MOV X0, X20
	0x03D3A36C BL 0x3D3A6AC
	0x03D3A370 CBZ X22, 0x3D3A39C
	0x03D3A374 MOV X0, X22
	0x03D3A378 MOV X1, X31
	0x03D3A37C BL 0x3DEC0F4
	0x03D3A380 MOV X8, X22
	0x03D3A384 TBNZ X0, 0x0, 0x3D3A38C
	0x03D3A388 LDR X8, [X22 + 0x98]
	0x03D3A38C STR X8, [X20 + 0x98]
	0x03D3A390 LDR W8, [X22 + 0xBC]
	0x03D3A394 ADD W1, W8, 0x1
	0x03D3A398 B 0x3D3A3A4
	0x03D3A39C MOV W1, W31
	0x03D3A3A0 STR X31, [X20 + 0x98]
	0x03D3A3A4 STR W1, [X20 + 0xBC]
	0x03D3A3A8 CBZ X21, 0x3D3A6A8
	0x03D3A3AC MOV X0, X21
	0x03D3A3B0 MOV X2, X31
	0x03D3A3B4 BL 0x3D26714
	0x03D3A3B8 SUBS W23, W23, 0x1
	0x03D3A3BC MOV X0, X22
	0x03D3A3C0 B.LT 0x3D3A420
	0x03D3A3C4 LDR X0, [X27]
	0x03D3A3C8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0x6AE000
	012 Move W8, [X23+2919]
	013 Move X21, X3
	014 Move W22, W2
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0x3E3000
	022 Move X0, [X0+288]
	023 Call 0x1C17CF4
	024 Move X0, 0x42B000
	025 Move X0, [X0+1912]
	026 Call 0x1C17CF4
	027 Move X0, 0x3E3000
	028 Move X0, [X0+3784]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+2919], W8
	032 Compare X19, 0
	033 JumpIfEqual {176}
	034 Move W8, [X19+196]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Move X22, [X31+48]
	039 Move X21, [X31+56]
	040 Move X30, [X31+32]
	041 Move X23, [X31+40]
	042 Move D9, [X31+16]
	043 Move D8, [X31+24]
	044 Move D11, [X31+80]
	045 Move D10, [X31+88]
	046 Return 
	047 Move [X19+196], W22
	048 Move W8, [X21+44]
	049 Move X0, X19
	050 Move X1, X31
	051 Add W8, W8, 1
	052 Move [X21+44], W8
	053 Call VisualElement.get_resolvedStyle, X0
	054 Compare X0, 0
	055 JumpIfEqual {176}
	056 Move X10, 0x3E3000
	057 Move X8, [X0]
	058 Move X10, [X10+288]
	059 Move X21, X0
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move X1, [X10]
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move X0, X21
	071 Move W2, W31
	072 Call 0x1C5D788
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 Add X8, X8, X9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X21
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move V8, V0
	081 Move V0, [X19+448]
	082 Move V9, V1
	083 Move V10, V2
	084 Move V11, V3
	085 NotImplemented "Instruction FCMP not yet implemented."
	086 NotImplemented "Instruction FCMP not yet implemented."
	087 Compare X20, 0
	088 JumpIfEqual {176}
	089 Move X0, X20
	090 Move X1, X19
	091 Move W2, W31
	092 Move X3, X31
	093 Call RenderChain.UIEOnVisualsChanged, X0, X1, X2
	094 Move X0, X19
	095 Move X1, X31
	096 Move [X19+436], S8
	097 Move [X19+440], S9
	098 Move [X19+444], S10
	099 Move [X19+448], S11
	100 Call VisualElement.get_renderHints, X0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 16
	103 Compare TEMP, 16
	104 JumpIfNotEqual {145}
	105 Move W8, [X19+184]
	106 Move TEMP, X8
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {145}
	110 Move X22, 0x42B000
	111 Move X22, [X22+1912]
	112 Move X0, [X22]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X0, X20
	118 Move X1, X19
	119 Call RenderEvents.InitColorIDs, X0, X1
	120 Move X8, [X22]
	121 Move W21, W0
	122 Move W9, [X8+224]
	123 Compare W9, 0
	124 JumpIfNotEqual {127}
	125 Move X0, X8
	126 Call 0x1C17DFC
	127 Move X0, X20
	128 Move X1, X19
	129 Call RenderEvents.SetColorValues, X0, X1
	130 Move X8, 0x3E3000
	131 Move X8, [X8+3784]
	132 Move X9, [X19]
	133 Move X8, [X8]
	134 Move W11, [X9+304]
	135 Move W10, [X8+304]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X9, [X9+200]
	138 Add X9, X9, X10
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move TEMP, X21
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {36}
	145 Compare X20, 0
	146 JumpIfEqual {176}
	147 Move X0, X20
	148 Move X1, X19
	149 Move X20, [X31+64]
	150 Move X19, [X31+72]
	151 Move X22, [X31+48]
	152 Move X21, [X31+56]
	153 Move X30, [X31+32]
	154 Move X23, [X31+40]
	155 Move D9, [X31+16]
	156 Move D8, [X31+24]
	157 Move W2, W31
	158 Move X3, X31
	159 Move D11, [X31+80]
	160 Move D10, [X31+88]
	161 Call RenderChain.UIEOnVisualsChanged, X0, X1, X2
	162 Return 
	163 Move X0, [X22]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move X0, X20
	169 Move X1, X19
	170 Call RenderEvents.UpdateTextCoreSettings, X0, X1
	171 NotImplemented "Instruction ORN not yet implemented."
	172 Move TEMP, X8
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {36}
	176 Call 0x1C17F20

Method: System.Void DepthFirstOnTransformOrSizeChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement parent, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, UnityEngine.UIElements.UIR.UIRenderDevice device, System.Boolean isAncestorOfChangeSkinned, System.Boolean transformChanged, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)

Disassembly:
	0x03D3A488 LDR X0, [X25]
	0x03D3A48C LDR W8, [X0 + 0xE0]
	0x03D3A490 CBNZ W8, 0x3D3A498
	0x03D3A494 BL 0x1C16DFC
	0x03D3A498 MOV X0, X20
	0x03D3A49C BL 0x3D3A850
	0x03D3A4A0 TBZ X0, 0x0, 0x3D3A4C8
	0x03D3A4A4 LDR X0, [X26]
	0x03D3A4A8 ADD X23, X21, 0x140
	0x03D3A4AC LDR W8, [X0 + 0xE0]
	0x03D3A4B0 CBNZ W8, 0x3D3A4B8
	0x03D3A4B4 BL 0x1C16DFC
	0x03D3A4B8 MOV X0, X23
	0x03D3A4BC MOV X1, X31
	0x03D3A4C0 BL 0x3D2C4A4
	0x03D3A4C4 B 0x3D3A4E4
	0x03D3A4C8 LDR X0, [X28]
	0x03D3A4CC LDR W8, [X0 + 0xE0]
	0x03D3A4D0 CBNZ W8, 0x3D3A4DC
	0x03D3A4D4 BL 0x1C16DFC
	0x03D3A4D8 LDR X0, [X28]
	0x03D3A4DC LDR X8, [X0 + 0xB8]
	0x03D3A4E0 LDR X0, [X8]
	0x03D3A4E4 STR X0, [X20 + 0x158]
	0x03D3A4E8 STR X31, [X20 + 0xA0]
	0x03D3A4EC LDR X0, [X25]
	0x03D3A4F0 LDR W8, [X0 + 0xE0]
	0x03D3A4F4 CBNZ W8, 0x3D3A4FC
	0x03D3A4F8 BL 0x1C16DFC
	0x03D3A4FC MOV X0, X20
	0x03D3A500 BL 0x3D3A88C
	0x03D3A504 TBZ X0, 0x0, 0x3D3A530
	0x03D3A508 LDR X0, [X25]
	0x03D3A50C LDR W8, [X0 + 0xE0]
	0x03D3A510 CBNZ W8, 0x3D3A518
	0x03D3A514 BL 0x1C16DFC
	0x03D3A518 MOV X0, X21
	0x03D3A51C MOV X1, X20
	0x03D3A520 BL 0x3D3A8AC
	0x03D3A524 MOV X0, X21
	0x03D3A528 MOV X1, X20
	0x03D3A52C BL 0x3D3AF44
	0x03D3A530 LDR X0, [X20 + 0x158]
	0x03D3A534 MOV X1, X31
	0x03D3A538 BL 0x3D2795C
	0x03D3A53C TBZ X0, 0x0, 0x3D3A59C
	0x03D3A540 LDR X0, [X25]
	0x03D3A544 LDR X22, [X20 + 0x158]
	0x03D3A548 ADD X23, X21, 0x140
	0x03D3A54C LDR W8, [X0 + 0xE0]
	0x03D3A550 CBNZ W8, 0x3D3A558
	0x03D3A554 BL 0x1C16DFC
	0x03D3A558 ADD X8, X31, 0x40
	0x03D3A55C MOV X0, X20
	0x03D3A560 BL 0x3D39E94
	0x03D3A564 LDR X0, [X26]
	0x03D3A568 LDR W8, [X0 + 0xE0]
	0x03D3A56C CBNZ W8, 0x3D3A574
	0x03D3A570 BL 0x1C16DFC
	0x03D3A574 LDP V0, V1, [X31 + 0x40]
	0x03D3A578 LDP V2, V3, [X31 + 0x60]
	0x03D3A57C ADD X2, X31, 0x0
	0x03D3A580 MOV X0, X23
	0x03D3A584 MOV X1, X22
	0x03D3A588 MOV X3, X31
	0x03D3A58C STP V0, V1, [X31]
	0x03D3A590 STP V2, V3, [X31 + 0x20]
	0x03D3A594 BL 0x3D2BAEC
	0x03D3A598 B 0x3D3A5FC
	0x03D3A59C CBZ X22, 0x3D3A5DC
	0x03D3A5A0 MOV X0, X20
	0x03D3A5A4 MOV X1, X31
	0x03D3A5A8 BL 0x3DEC0F4
	0x03D3A5AC TBNZ X0, 0x0, 0x3D3A5DC
	0x03D3A5B0 LDR X0, [X22 + 0x158]
	0x03D3A5B4 MOV X1, X31
	0x03D3A5B8 BL 0x3D2795C
	0x03D3A5BC MOV X8, X22
	0x03D3A5C0 TBNZ X0, 0x0, 0x3D3A5C8
	0x03D3A5C4 LDR X8, [X22 + 0xA0]
	0x03D3A5C8 STR X8, [X20 + 0xA0]
	0x03D3A5CC LDR X8, [X22 + 0x158]
	0x03D3A5D0 STR X8, [X20 + 0x158]
	0x03D3A5D4 STRB W31, [X20 + 0x15F]
	0x03D3A5D8 B 0x3D3A5FC
	0x03D3A5DC LDR X0, [X26]
	0x03D3A5E0 LDR W8, [X0 + 0xE0]
	0x03D3A5E4 CBNZ W8, 0x3D3A5F0
	0x03D3A5E8 BL 0x1C16DFC
	0x03D3A5EC LDR X0, [X26]
	0x03D3A5F0 LDR X8, [X0 + 0xB8]
	0x03D3A5F4 LDR X8, [X8 + 0x108]
	0x03D3A5F8 STR X8, [X20 + 0x158]
	0x03D3A5FC LDR X8, [X20 + 0x378]
	0x03D3A600 ADD X0, X31, 0x88
	0x03D3A604 MOV X1, X31
	0x03D3A608 STR X8, [X31 + 0x88]
	0x03D3A60C BL 0x3DF8994
	0x03D3A610 CMP W0, 0x1
	0x03D3A614 B.LT 0x3D3A684
	0x03D3A618 MOV W22, W0
	0x03D3A61C MOV W26, W31
	0x03D3A620 MOV W23, W31
	0x03D3A624 LDR X8, [X20 + 0x378]
	0x03D3A628 ADD X0, X31, 0x88
	0x03D3A62C MOV W1, W23
	0x03D3A630 MOV X2, X31
	0x03D3A634 STR X8, [X31 + 0x88]
	0x03D3A638 BL 0x3DF98E4
	0x03D3A63C LDR X8, [X25]
	0x03D3A640 MOV X24, X0
	0x03D3A644 LDR W9, [X8 + 0xE0]
	0x03D3A648 CBNZ W9, 0x3D3A654
	0x03D3A64C MOV X0, X8
	0x03D3A650 BL 0x1C16DFC
	0x03D3A654 AND W4, W19, 0x1
	0x03D3A658 MOV X0, X21
	0x03D3A65C MOV X1, X20
	0x03D3A660 MOV X2, X24
	0x03D3A664 MOV W3, W23
	0x03D3A668 BL 0x3D3A160
	0x03D3A66C ADD W23, W23, 0x1
	0x03D3A670 CMP W22, W23
	0x03D3A674 ADD W26, W0, W26
	0x03D3A678 B.NE 0x3D3A624
	0x03D3A67C ADD W0, W26, 0x1
	0x03D3A680 B 0x3D3A688
	0x03D3A684 MOVZ W0, 0x1
	0x03D3A688 LDP X20, X19, [X31 + 0xD0]
	0x03D3A68C LDP X22, X21, [X31 + 0xC0]
	0x03D3A690 LDP X24, X23, [X31 + 0xB0]
	0x03D3A694 LDP X26, X25, [X31 + 0xA0]
	0x03D3A698 LDP X28, X27, [X31 + 0x90]
	0x03D3A69C LDR X30, [X31 + 0x80]
	0x03D3A6A0 ADD X31, X31, 0xE0
	0x03D3A6A4 RET
	0x03D3A6A8 BL 0x1C16F20
	0x03D3A6AC STR D8, [X31 - 0x30]!
	0x03D3A6B0 STR X30, [X31 + 0x8]
	0x03D3A6B4 STP X22, X21, [X31 + 0x10]
	0x03D3A6B8 STP X20, X19, [X31 + 0x20]
	0x03D3A6BC ADRP X20, 0x6AD000
	0x03D3A6C0 LDRB W8, [X20 + 0xB6D]
	0x03D3A6C4 MOV X19, X0
	0x03D3A6C8 TBNZ X8, 0x0, 0x3D3A6EC
	0x03D3A6CC ADRP X0, 0x3E3000
	0x03D3A6D0 LDR X0, [X0 + 0x688]
	0x03D3A6D4 BL 0x1C16CF4
	0x03D3A6D8 ADRP X0, 0x3B9000
	0x03D3A6DC LDR X0, [X0 + 0x5A8]
	0x03D3A6E0 BL 0x1C16CF4
	0x03D3A6E4 MOVZ W8, 0x1
	0x03D3A6E8 STRB W8, [X20 + 0xB6D]
	0x03D3A6EC CBZ X19, 0x3D3A7D0
	0x03D3A6F0 LDRB W21, [X19 + 0xEA]
	0x03D3A6F4 MOV X0, X19
	0x03D3A6F8 MOV X1, X31
	0x03D3A6FC BL 0x3DEC1BC
	0x03D3A700 CBZ X0, 0x3D3A7D0
	0x03D3A704 ADRP X10, 0x3E3000
	0x03D3A708 LDR X8, [X0]
	0x03D3A70C LDR X10, [X10 + 0x688]
	0x03D3A710 ADRP X22, 0x3B9000
	0x03D3A714 MOV X20, X0
	0x03D3A718 LDRH W9, [X8 + 0x12E]
	0x03D3A71C LDR X1, [X10]
	0x03D3A720 LDR X22, [X22 + 0x5A8]
	0x03D3A724 CBZ X9, 0x3D3A748
	0x03D3A728 LDR X10, [X8 + 0xB0]
	0x03D3A72C ADD X10, X10, 0x8
	0x03D3A730 LDUR X11, [X10 - 0x8]
	0x03D3A734 CMP X11, X1
	0x03D3A738 B.EQ 0x3D3A758
	0x03D3A73C SUBS X9, X9, 0x1
	0x03D3A740 ADD X10, X10, 0x10
	0x03D3A744 B.NE 0x3D3A730
	0x03D3A748 MOVZ W2, 0x2
	0x03D3A74C MOV X0, X20
	0x03D3A750 BL 0x1C5C788
	0x03D3A754 B 0x3D3A768
	0x03D3A758 LDR W9, [X10]
	0x03D3A75C ADD W9, W9, 0x2
	0x03D3A760 ADD X8, X8, W9, 0x4, SXTW
	0x03D3A764 ADD X0, X8, 0x138
	0x03D3A768 LDP X8, X1, [X0]
	0x03D3A76C MOV X0, X20
	0x03D3A770 BLR X8
	0x03D3A774 LDR X0, [X22]
	0x03D3A778 FMUL S8, S0, S1
	0x03D3A77C LDR W8, [X0 + 0xE0]
	0x03D3A780 CBNZ W8, 0x3D3A788
	0x03D3A784 BL 0x1C16DFC
	0x03D3A788 ADRP X8, 0xFFFFFFFFFCDB0000
	0x03D3A78C LDR V0, [X8 + 0x410]
	0x03D3A790 FABS S1, S8
	0x03D3A794 FCMP S1, S0
	0x03D3A798 B.MI 0x3D3A7AC
	0x03D3A79C FCMP S8, 0x0
	0x03D3A7A0 CSET W8, MI
	0x03D3A7A4 CMP W21, W8
	0x03D3A7A8 B.NE 0x3D3A7B4
	0x03D3A7AC MOV W0, W31
	0x03D3A7B0 B 0x3D3A7BC
	0x03D3A7B4 MOVZ W0, 0x1
	0x03D3A7B8 STRB W8, [X19 + 0xEA]
	0x03D3A7BC LDP X20, X19, [X31 + 0x20]
	0x03D3A7C0 LDP X22, X21, [X31 + 0x10]
	0x03D3A7C4 LDR X30, [X31 + 0x8]
	0x03D3A7C8 LDR V8, [X31], #0x30
	0x03D3A7CC RET
	0x03D3A7D0 BL 0x1C16F20
	0x03D3A7D4 SUB X31, X31, 0x20
	0x03D3A7D8 STP X30, X19, [X31 + 0x10]
	0x03D3A7DC CBZ X0, 0x3D3A84C
	0x03D3A7E0 LDR X8, [X0 + 0x378]
	0x03D3A7E4 MOV X19, X0
	0x03D3A7E8 ADD X0, X31, 0x8
	0x03D3A7EC MOV X1, X31
	0x03D3A7F0 STR X8, [X31 + 0x8]
	0x03D3A7F4 BL 0x3DF8994
	0x03D3A7F8 CMP W0, 0x1
	0x03D3A7FC B.LT 0x3D3A83C
	0x03D3A800 LDR X8, [X19 + 0x378]
	0x03D3A804 SUB W1, W0, 0x1
	0x03D3A808 ADD X0, X31, 0x8
	0x03D3A80C MOV X2, X31
	0x03D3A810 STR X8, [X31 + 0x8]
	0x03D3A814 BL 0x3DF98E4
	0x03D3A818 CBZ X0, 0x3D3A84C
	0x03D3A81C LDR X8, [X0 + 0x378]
	0x03D3A820 MOV X19, X0
	0x03D3A824 ADD X0, X31, 0x8
	0x03D3A828 MOV X1, X31
	0x03D3A82C STR X8, [X31 + 0x8]
	0x03D3A830 BL 0x3DF8994
	0x03D3A834 CMP W0, 0x0
	0x03D3A838 B.GT 0x3D3A800
	0x03D3A83C MOV X0, X19
	0x03D3A840 LDP X30, X19, [X31 + 0x10]
	0x03D3A844 ADD X31, X31, 0x20
	0x03D3A848 RET
	0x03D3A84C BL 0x1C16F20
	0x03D3A850 STP X30, X19, [X31 - 0x10]!
	0x03D3A854 CBZ X0, 0x3D3A888
	0x03D3A858 MOV X1, X31
	0x03D3A85C MOV X19, X0
	0x03D3A860 BL 0x3DEC0F4
	0x03D3A864 TBNZ X0, 0x0, 0x3D3A87C
	0x03D3A868 MOV X0, X19
	0x03D3A86C MOV X1, X31
	0x03D3A870 BL 0x3DEC0F4
	0x03D3A874 UBFM W0, W0, 0x1, 0x1
	0x03D3A878 B 0x3D3A880
	0x03D3A87C MOV W0, W31
	0x03D3A880 LDP X30, X19, [X31], #0x10
	0x03D3A884 RET
	0x03D3A888 BL 0x1C16F20
	0x03D3A88C STR X30, [X31 - 0x10]!
	0x03D3A890 CBZ X0, 0x3D3A8A8

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+160], D11
	003 Move [X31+168], D10
	004 Move [X31+176], D9
	005 Move [X31+184], D8
	006 Move [X31+192], X29
	007 Move [X31+200], X30
	008 Move [X31+208], X28
	009 Move [X31+216], X27
	010 Move [X31+224], X26
	011 Move [X31+232], X25
	012 Move [X31+240], X24
	013 Move [X31+248], X23
	014 Move [X31+256], X22
	015 Move [X31+264], X21
	016 Move [X31+272], X20
	017 Move [X31+280], X19
	018 Move X26, 0x6AE000
	019 Move W8, [X26+2920]
	020 Move X19, X7
	021 Move W24, W6
	022 Move W25, W5
	023 Move X20, X4
	024 Move W21, W3
	025 Move X22, X2
	026 Move X23, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {45}
	031 Move X0, 0x42C000
	032 Move X0, [X0+248]
	033 Call 0x1C17CF4
	034 Move X0, 0x3BA000
	035 Move X0, [X0+2600]
	036 Call 0x1C17CF4
	037 Move X0, 0x42B000
	038 Move X0, [X0+1912]
	039 Call 0x1C17CF4
	040 Move X0, 0x42B000
	041 Move X0, [X0+1888]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X26+2920], W8
	045 Move [X31+152], X31
	046 Compare X22, 0
	047 JumpIfEqual {312}
	048 Move W8, [X22+196]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W8, [X19+24]
	051 Move X1, X31
	052 Add W8, W8, 1
	053 Move [X19+24], W8
	054 Move X0, [X22+352]
	055 Move W28, [X22+192]
	056 Call RenderChainVEData.AllocatesID, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {93}
	061 Compare X23, 0
	062 JumpIfEqual {312}
	063 Move X8, 0x42B000
	064 Move X8, [X8+1912]
	065 Move X26, [X22+352]
	066 Add X27, X23, 320
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X22
	073 Call RenderEvents.GetClipRectIDClipInfo, X0
	074 Move X8, 0x42B000
	075 Move X8, [X8+1888]
	076 Move V8, V0
	077 Move V9, V1
	078 Move V10, V2
	079 Move X0, [X8]
	080 Move V11, V3
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X27
	086 Move X1, X26
	087 Move V0, V8
	088 Move V1, V9
	089 Move V2, V10
	090 Move V3, V11
	091 Move X2, X31
	092 Call UIRVEShaderInfoAllocator.SetClipRectValue, X0, X1, X2
	093 Or W8, W28, W24
	094 And W24, W8, 1
	095 Compare W24, 0
	096 JumpIfEqual {124}
	097 Move X26, 0x42B000
	098 Move X26, [X26+1912]
	099 Move X0, [X26]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X22
	105 Call RenderEvents.UpdateLocalFlipsWinding, X0
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {117}
	110 Compare X23, 0
	111 JumpIfEqual {312}
	112 Move W2, 1
	113 Move X0, X23
	114 Move X1, X22
	115 Move X3, X31
	116 Call RenderChain.UIEOnVisualsChanged, X0, X1, X2
	117 Move X0, [X26]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X0, X22
	123 Call RenderEvents.UpdateZeroScaling, X0
	124 Move X0, [X22+344]
	125 Move X1, X31
	126 Call RenderChainVEData.AllocatesID, X0
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {169}
	131 Compare X23, 0
	132 JumpIfEqual {312}
	133 Move X8, 0x42B000
	134 Move X8, [X8+1912]
	135 Move X25, [X22+344]
	136 Add X26, X23, 320
	137 Move X0, [X8]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Add X8, X31, 88
	143 Move X0, X22
	144 Call RenderEvents.GetTransformIDTransformInfo, X0
	145 Move X8, 0x42B000
	146 Move X8, [X8+1888]
	147 Move X0, [X8]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 Add X2, X31, 16
	157 Move X0, X26
	158 Move X1, X25
	159 Move X3, X31
	160 Move [X31+16], V0
	161 Move [X31+24], V1
	162 Move [X31+48], V2
	163 Move [X31+56], V3
	164 Call UIRVEShaderInfoAllocator.SetTransformValue, X0, X1, X2
	165 Move W8, [X19+68]
	166 Move W25, 1
	167 Add W8, W8, 1
	168 Move [X19+68], W8
	169 Compare W24, 0
	170 JumpIfEqual {207}
	171 Move X0, X22
	172 Move X1, X31
	173 Call VisualElement.get_renderHints, X0
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfEqual {201}
	178 Move TEMP, X25
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfNotEqual {204}
	182 Move X0, [X22+344]
	183 Move X1, X31
	184 Call RenderChainVEData.InheritsID, X0
	185 Move X8, 0x3BA000
	186 Move X8, [X8+2600]
	187 Move W25, W0
	188 Move X8, [X8]
	189 Move W9, [X8+224]
	190 Compare W9, 0
	191 JumpIfNotEqual {194}
	192 Move X0, X8
	193 Call 0x1C17DFC
	194 And W0, W25, 1
	195 Move X1, X31
	196 Call Debug.Assert, X0
	197 Move W8, [X19+72]
	198 Move W25, 1
	199 Add W8, W8, 1
	200 Move [X19+72], W8
	201 Move W8, [X19+88]
	202 Add W8, W8, 1
	203 Move [X19+88], W8
	204 Move W8, [X22+192]
	205 And W31, W8, 48
	206 Move W25, W31
	207 Move [X22+196], W21
	208 Compare X23, 0
	209 JumpIfEqual {312}
	210 Move W8, [X23+537]
	211 Compare W8, 0
	212 JumpIfEqual {216}
	213 Move X0, X22
	214 Move X1, X31
	215 Call VisualElement.EnsureWorldTransformAndClipUpToDate, X0
	216 Move X0, X22
	217 Move X1, X31
	218 Call VisualElement.get_renderHints, X0
	219 Move TEMP, X0
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfEqual {257}
	223 Move X8, [X22+888]
	224 Add X0, X31, 152
	225 Move X1, X31
	226 Move [X31+152], X8
	227 Call Hierarchy.get_childCount, X0
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X29, 0x42B000
	230 Move X29, [X29+1912]
	231 Move W26, W0
	232 Move W27, W31
	233 And W25, W25, 1
	234 Move X8, [X22+888]
	235 Add X0, X31, 152
	236 Move W1, W27
	237 Move X2, X31
	238 Move [X31+152], X8
	239 Call Hierarchy.get_Item, X0, X1
	240 Move X8, [X29]
	241 Move X28, X0
	242 Move W9, [X8+224]
	243 Compare W9, 0
	244 JumpIfNotEqual {247}
	245 Move X0, X8
	246 Call 0x1C17DFC
	247 Move X0, X23
	248 Move X2, X28
	249 Move W3, W21
	250 Move X4, X20
	251 Move W5, W25
	252 Move W6, W24
	253 Move X7, X19
	254 Call RenderEvents.DepthFirstOnTransformOrSizeChanged, X0, X1, X2, X3, X4, X5, X6, X7
	255 Add W27, W27, 1
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move X20, [X31+272]
	258 Move X19, [X31+280]
	259 Move X22, [X31+256]
	260 Move X21, [X31+264]
	261 Move X24, [X31+240]
	262 Move X23, [X31+248]
	263 Move X26, [X31+224]
	264 Move X25, [X31+232]
	265 Move X28, [X31+208]
	266 Move X27, [X31+216]
	267 Move X29, [X31+192]
	268 Move X30, [X31+200]
	269 Move D9, [X31+176]
	270 Move D8, [X31+184]
	271 Move D11, [X31+160]
	272 Move D10, [X31+168]
	273 Add X31, X31, 288
	274 Return 
	275 Move X8, [X22+256]
	276 Compare X8, 0
	277 JumpIfEqual {206}
	278 Move W8, [X22+252]
	279 Compare W8, 0
	280 JumpIfNotEqual {301}
	281 Move X8, 0x42C000
	282 Move X8, [X8+248]
	283 Move X0, [X8]
	284 Move W8, [X0+224]
	285 Compare W8, 0
	286 JumpIfNotEqual {288}
	287 Call 0x1C17DFC
	288 Move X0, X22
	289 Move X1, X23
	290 Move X2, X20
	291 Move X3, X31
	292 Call CommandGenerator.NudgeVerticesToNewSpace, X0, X1, X2
	293 Move TEMP, X0
	294 And TEMP, TEMP, 1
	295 Compare TEMP, 1
	296 JumpIfNotEqual {301}
	297 Move W8, [X19+64]
	298 Move W25, W31
	299 Add W8, W8, 1
	300 Move [X19+64], W8
	301 Compare X23, 0
	302 JumpIfEqual {312}
	303 Move X0, X23
	304 Move X1, X22
	305 Move W2, W31
	306 Move X3, X31
	307 Call RenderChain.UIEOnVisualsChanged, X0, X1, X2
	308 Move W8, [X19+76]
	309 Move W25, W31
	310 Add W8, W8, 1
	311 Move [X19+76], W8
	312 Call 0x1C17F20

Method: System.Void DepthFirstOnVisualsChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, System.Boolean parentHierarchyHidden, System.Boolean hierarchical, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)

Disassembly:
	0x03D3AA54 LDRH W9, [X8 + 0x12E]
	0x03D3AA58 LDR X1, [X10]
	0x03D3AA5C CBZ X9, 0x3D3AA80
	0x03D3AA60 LDR X10, [X8 + 0xB0]
	0x03D3AA64 ADD X10, X10, 0x8
	0x03D3AA68 LDUR X11, [X10 - 0x8]
	0x03D3AA6C CMP X11, X1
	0x03D3AA70 B.EQ 0x3D3AA90
	0x03D3AA74 SUBS X9, X9, 0x1
	0x03D3AA78 ADD X10, X10, 0x10
	0x03D3AA7C B.NE 0x3D3AA68
	0x03D3AA80 MOV X0, X20
	0x03D3AA84 MOV W2, W31
	0x03D3AA88 BL 0x1C5C788
	0x03D3AA8C B 0x3D3AA9C
	0x03D3AA90 LDRSW X9, [X10]
	0x03D3AA94 ADD X8, X8, X9, 0x4, LSL
	0x03D3AA98 ADD X0, X8, 0x138
	0x03D3AA9C LDP X8, X1, [X0]
	0x03D3AAA0 MOV X0, X20
	0x03D3AAA4 BLR X8
	0x03D3AAA8 FMUL S0, S0, S0
	0x03D3AAAC FMUL S1, S1, S1
	0x03D3AAB0 ADRP X8, 0xFFFFFFFFFCDAF000
	0x03D3AAB4 FADD S0, S0, S1
	0x03D3AAB8 LDR V1, [X8 + 0xF20]
	0x03D3AABC FMUL S2, S2, S2
	0x03D3AAC0 FADD S0, S2, S0
	0x03D3AAC4 FMUL S2, S3, S3
	0x03D3AAC8 FADD S0, S2, S0
	0x03D3AACC FCMP S0, S1
	0x03D3AAD0 B.MI 0x3D3AB08
	0x03D3AAD4 CBZ X19, 0x3D3AF40
	0x03D3AAD8 ADRP X8, 0x42A000
	0x03D3AADC LDR X8, [X8 + 0x760]
	0x03D3AAE0 ADD X22, X19, 0x140
	0x03D3AAE4 LDR X0, [X8]
	0x03D3AAE8 LDR W8, [X0 + 0xE0]
	0x03D3AAEC CBNZ W8, 0x3D3AAF4
	0x03D3AAF0 BL 0x1C16DFC
	0x03D3AAF4 MOV X0, X22
	0x03D3AAF8 MOV X1, X31
	0x03D3AAFC BL 0x3D2C70C
	0x03D3AB00 MOVZ W22, 0x1
	0x03D3AB04 STR X0, [X23]
	0x03D3AB08 LDR X0, [X24]
	0x03D3AB0C ADD X23, X21, 0x188
	0x03D3AB10 LDR W8, [X0 + 0xE0]
	0x03D3AB14 CBNZ W8, 0x3D3AB1C
	0x03D3AB18 BL 0x1C16DFC
	0x03D3AB1C MOV X0, X23
	0x03D3AB20 MOV X1, X31
	0x03D3AB24 BL 0x3D279C8
	0x03D3AB28 TBNZ X0, 0x0, 0x3D3ABD0
	0x03D3AB2C CBZ X20, 0x3D3AF40
	0x03D3AB30 ADRP X10, 0x3E2000
	0x03D3AB34 LDR X8, [X20]
	0x03D3AB38 LDR X10, [X10 + 0x120]
	0x03D3AB3C LDRH W9, [X8 + 0x12E]
	0x03D3AB40 LDR X1, [X10]
	0x03D3AB44 CBZ X9, 0x3D3AB68
	0x03D3AB48 LDR X10, [X8 + 0xB0]
	0x03D3AB4C ADD X10, X10, 0x8
	0x03D3AB50 LDUR X11, [X10 - 0x8]
	0x03D3AB54 CMP X11, X1
	0x03D3AB58 B.EQ 0x3D3AB78
	0x03D3AB5C SUBS X9, X9, 0x1
	0x03D3AB60 ADD X10, X10, 0x10
	0x03D3AB64 B.NE 0x3D3AB50
	0x03D3AB68 MOVZ W2, 0x6
	0x03D3AB6C MOV X0, X20
	0x03D3AB70 BL 0x1C5C788
	0x03D3AB74 B 0x3D3AB88
	0x03D3AB78 LDR W9, [X10]
	0x03D3AB7C ADD W9, W9, 0x6
	0x03D3AB80 ADD X8, X8, W9, 0x4, SXTW
	0x03D3AB84 ADD X0, X8, 0x138
	0x03D3AB88 LDP X8, X1, [X0]
	0x03D3AB8C MOV X0, X20
	0x03D3AB90 BLR X8
	0x03D3AB94 FCMP S0, 0x0
	0x03D3AB98 B.LE 0x3D3ABD0
	0x03D3AB9C CBZ X19, 0x3D3AF40
	0x03D3ABA0 ADRP X8, 0x42A000
	0x03D3ABA4 LDR X8, [X8 + 0x760]
	0x03D3ABA8 ADD X22, X19, 0x140
	0x03D3ABAC LDR X0, [X8]
	0x03D3ABB0 LDR W8, [X0 + 0xE0]
	0x03D3ABB4 CBNZ W8, 0x3D3ABBC
	0x03D3ABB8 BL 0x1C16DFC
	0x03D3ABBC MOV X0, X22
	0x03D3ABC0 MOV X1, X31
	0x03D3ABC4 BL 0x3D2C70C
	0x03D3ABC8 MOVZ W22, 0x1
	0x03D3ABCC STR X0, [X23]
	0x03D3ABD0 LDR X0, [X24]
	0x03D3ABD4 ADD X23, X21, 0x190
	0x03D3ABD8 LDR W8, [X0 + 0xE0]
	0x03D3ABDC CBNZ W8, 0x3D3ABE4
	0x03D3ABE0 BL 0x1C16DFC
	0x03D3ABE4 MOV X0, X23
	0x03D3ABE8 MOV X1, X31
	0x03D3ABEC BL 0x3D279C8
	0x03D3ABF0 TBNZ X0, 0x0, 0x3D3AC98
	0x03D3ABF4 CBZ X20, 0x3D3AF40
	0x03D3ABF8 ADRP X10, 0x3E2000
	0x03D3ABFC LDR X8, [X20]
	0x03D3AC00 LDR X10, [X10 + 0x120]
	0x03D3AC04 LDRH W9, [X8 + 0x12E]
	0x03D3AC08 LDR X1, [X10]
	0x03D3AC0C CBZ X9, 0x3D3AC30
	0x03D3AC10 LDR X10, [X8 + 0xB0]
	0x03D3AC14 ADD X10, X10, 0x8
	0x03D3AC18 LDUR X11, [X10 - 0x8]
	0x03D3AC1C CMP X11, X1
	0x03D3AC20 B.EQ 0x3D3AC40
	0x03D3AC24 SUBS X9, X9, 0x1
	0x03D3AC28 ADD X10, X10, 0x10
	0x03D3AC2C B.NE 0x3D3AC18
	0x03D3AC30 MOVZ W2, 0xC
	0x03D3AC34 MOV X0, X20
	0x03D3AC38 BL 0x1C5C788
	0x03D3AC3C B 0x3D3AC50
	0x03D3AC40 LDR W9, [X10]
	0x03D3AC44 ADD W9, W9, 0xC
	0x03D3AC48 ADD X8, X8, W9, 0x4, SXTW
	0x03D3AC4C ADD X0, X8, 0x138
	0x03D3AC50 LDP X8, X1, [X0]
	0x03D3AC54 MOV X0, X20
	0x03D3AC58 BLR X8
	0x03D3AC5C FCMP S0, 0x0
	0x03D3AC60 B.LE 0x3D3AC98
	0x03D3AC64 CBZ X19, 0x3D3AF40
	0x03D3AC68 ADRP X8, 0x42A000
	0x03D3AC6C LDR X8, [X8 + 0x760]
	0x03D3AC70 ADD X22, X19, 0x140
	0x03D3AC74 LDR X0, [X8]
	0x03D3AC78 LDR W8, [X0 + 0xE0]
	0x03D3AC7C CBNZ W8, 0x3D3AC84
	0x03D3AC80 BL 0x1C16DFC
	0x03D3AC84 MOV X0, X22
	0x03D3AC88 MOV X1, X31
	0x03D3AC8C BL 0x3D2C70C
	0x03D3AC90 MOVZ W22, 0x1
	0x03D3AC94 STR X0, [X23]
	0x03D3AC98 LDR X0, [X24]
	0x03D3AC9C ADD X23, X21, 0x198
	0x03D3ACA0 LDR W8, [X0 + 0xE0]
	0x03D3ACA4 CBNZ W8, 0x3D3ACAC
	0x03D3ACA8 BL 0x1C16DFC
	0x03D3ACAC MOV X0, X23
	0x03D3ACB0 MOV X1, X31
	0x03D3ACB4 BL 0x3D279C8
	0x03D3ACB8 TBNZ X0, 0x0, 0x3D3AD60
	0x03D3ACBC CBZ X20, 0x3D3AF40
	0x03D3ACC0 ADRP X10, 0x3E2000
	0x03D3ACC4 LDR X8, [X20]
	0x03D3ACC8 LDR X10, [X10 + 0x120]
	0x03D3ACCC LDRH W9, [X8 + 0x12E]
	0x03D3ACD0 LDR X1, [X10]
	0x03D3ACD4 CBZ X9, 0x3D3ACF8
	0x03D3ACD8 LDR X10, [X8 + 0xB0]
	0x03D3ACDC ADD X10, X10, 0x8
	0x03D3ACE0 LDUR X11, [X10 - 0x8]
	0x03D3ACE4 CMP X11, X1
	0x03D3ACE8 B.EQ 0x3D3AD08
	0x03D3ACEC SUBS X9, X9, 0x1
	0x03D3ACF0 ADD X10, X10, 0x10
	0x03D3ACF4 B.NE 0x3D3ACE0
	0x03D3ACF8 MOVZ W2, 0x8
	0x03D3ACFC MOV X0, X20
	0x03D3AD00 BL 0x1C5C788
	0x03D3AD04 B 0x3D3AD18
	0x03D3AD08 LDR W9, [X10]
	0x03D3AD0C ADD W9, W9, 0x8
	0x03D3AD10 ADD X8, X8, W9, 0x4, SXTW
	0x03D3AD14 ADD X0, X8, 0x138
	0x03D3AD18 LDP X8, X1, [X0]
	0x03D3AD1C MOV X0, X20
	0x03D3AD20 BLR X8
	0x03D3AD24 FCMP S0, 0x0
	0x03D3AD28 B.LE 0x3D3AD60
	0x03D3AD2C CBZ X19, 0x3D3AF40
	0x03D3AD30 ADRP X8, 0x42A000
	0x03D3AD34 LDR X8, [X8 + 0x760]
	0x03D3AD38 ADD X22, X19, 0x140
	0x03D3AD3C LDR X0, [X8]
	0x03D3AD40 LDR W8, [X0 + 0xE0]
	0x03D3AD44 CBNZ W8, 0x3D3AD4C
	0x03D3AD48 BL 0x1C16DFC
	0x03D3AD4C MOV X0, X22
	0x03D3AD50 MOV X1, X31
	0x03D3AD54 BL 0x3D2C70C
	0x03D3AD58 MOVZ W22, 0x1
	0x03D3AD5C STR X0, [X23]
	0x03D3AD60 LDR X0, [X24]
	0x03D3AD64 ADD X23, X21, 0x1A0
	0x03D3AD68 LDR W8, [X0 + 0xE0]
	0x03D3AD6C CBNZ W8, 0x3D3AD74
	0x03D3AD70 BL 0x1C16DFC
	0x03D3AD74 MOV X0, X23
	0x03D3AD78 MOV X1, X31
	0x03D3AD7C BL 0x3D279C8
	0x03D3AD80 TBNZ X0, 0x0, 0x3D3AE28
	0x03D3AD84 CBZ X20, 0x3D3AF40
	0x03D3AD88 ADRP X10, 0x3E2000
	0x03D3AD8C LDR X8, [X20]
	0x03D3AD90 LDR X10, [X10 + 0x120]
	0x03D3AD94 LDRH W9, [X8 + 0x12E]
	0x03D3AD98 LDR X1, [X10]
	0x03D3AD9C CBZ X9, 0x3D3ADC0
	0x03D3ADA0 LDR X10, [X8 + 0xB0]
	0x03D3ADA4 ADD X10, X10, 0x8
	0x03D3ADA8 LDUR X11, [X10 - 0x8]
	0x03D3ADAC CMP X11, X1
	0x03D3ADB0 B.EQ 0x3D3ADD0
	0x03D3ADB4 SUBS X9, X9, 0x1
	0x03D3ADB8 ADD X10, X10, 0x10
	0x03D3ADBC B.NE 0x3D3ADA8
	0x03D3ADC0 MOVZ W2, 0x4
	0x03D3ADC4 MOV X0, X20
	0x03D3ADC8 BL 0x1C5C788
	0x03D3ADCC B 0x3D3ADE0
	0x03D3ADD0 LDR W9, [X10]
	0x03D3ADD4 ADD W9, W9, 0x4
	0x03D3ADD8 ADD X8, X8, W9, 0x4, SXTW
	0x03D3ADDC ADD X0, X8, 0x138
	0x03D3ADE0 LDP X8, X1, [X0]
	0x03D3ADE4 MOV X0, X20
	0x03D3ADE8 BLR X8
	0x03D3ADEC FCMP S0, 0x0
	0x03D3ADF0 B.LE 0x3D3AE28
	0x03D3ADF4 CBZ X19, 0x3D3AF40
	0x03D3ADF8 ADRP X8, 0x42A000
	0x03D3ADFC LDR X8, [X8 + 0x760]
	0x03D3AE00 ADD X22, X19, 0x140
	0x03D3AE04 LDR X0, [X8]
	0x03D3AE08 LDR W8, [X0 + 0xE0]
	0x03D3AE0C CBNZ W8, 0x3D3AE14
	0x03D3AE10 BL 0x1C16DFC
	0x03D3AE14 MOV X0, X22
	0x03D3AE18 MOV X1, X31
	0x03D3AE1C BL 0x3D2C70C
	0x03D3AE20 MOVZ W22, 0x1
	0x03D3AE24 STR X0, [X23]
	0x03D3AE28 LDR X0, [X24]
	0x03D3AE2C ADD X21, X21, 0x1A8
	0x03D3AE30 LDR W8, [X0 + 0xE0]
	0x03D3AE34 CBNZ W8, 0x3D3AE3C
	0x03D3AE38 BL 0x1C16DFC
	0x03D3AE3C MOV X0, X21
	0x03D3AE40 MOV X1, X31
	0x03D3AE44 BL 0x3D279C8
	0x03D3AE48 TBNZ X0, 0x0, 0x3D3AF28
	0x03D3AE4C CBZ X20, 0x3D3AF40
	0x03D3AE50 ADRP X10, 0x3E2000
	0x03D3AE54 LDR X8, [X20]
	0x03D3AE58 LDR X10, [X10 + 0x120]
	0x03D3AE5C LDRH W9, [X8 + 0x12E]
	0x03D3AE60 LDR X1, [X10]
	0x03D3AE64 CBZ X9, 0x3D3AE88
	0x03D3AE68 LDR X10, [X8 + 0xB0]
	0x03D3AE6C ADD X10, X10, 0x8
	0x03D3AE70 LDUR X11, [X10 - 0x8]
	0x03D3AE74 CMP X11, X1
	0x03D3AE78 B.EQ 0x3D3AE98
	0x03D3AE7C SUBS X9, X9, 0x1
	0x03D3AE80 ADD X10, X10, 0x10
	0x03D3AE84 B.NE 0x3D3AE70
	0x03D3AE88 MOVZ W2, 0x25
	0x03D3AE8C MOV X0, X20
	0x03D3AE90 BL 0x1C5C788

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X28
	005 Move [X31+232], X27
	006 Move [X31+240], X26
	007 Move [X31+248], X25
	008 Move [X31+256], X24
	009 Move [X31+264], X23
	010 Move [X31+272], X22
	011 Move [X31+280], X21
	012 Move [X31+288], X20
	013 Move [X31+296], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X26+40]
	016 Move X25, 0x6AE000
	017 Move X21, X5
	018 Move W23, W4
	019 Move [X31+200], X8
	020 Move W8, [X25+2921]
	021 Move W24, W3
	022 Move W22, W2
	023 Move X19, X1
	024 Move X20, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {46}
	029 Move X0, 0x42B000
	030 Move X0, [X0+2504]
	031 Call 0x1C17CF4
	032 Move X0, 0x42C000
	033 Move X0, [X0+248]
	034 Call 0x1C17CF4
	035 Move X0, 0x3BA000
	036 Move X0, [X0+2600]
	037 Call 0x1C17CF4
	038 Move X0, 0x42B000
	039 Move X0, [X0+1912]
	040 Call 0x1C17CF4
	041 Move X0, 0x3E3000
	042 Move X0, [X0+3784]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X25+2921], W8
	046 Move [X31+72], X31
	047 Compare X19, 0
	048 JumpIfEqual {318}
	049 Move W8, [X19+196]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move [X19+196], W22
	052 Move TEMP, X23
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {59}
	056 Move W8, [X21+52]
	057 Add W8, W8, 1
	058 Move [X21+52], W8
	059 Move W25, [X19+233]
	060 Move TEMP, X24
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {65}
	064 Move W8, 1
	065 Move X8, 0x42B000
	066 Move X8, [X8+1912]
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X19
	073 Call RenderEvents.IsElementHierarchyHidden, X0
	074 And W8, W0, 1
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CSET not yet implemented."
	077 Or W25, W9, W23
	078 Move [X19+233], W8
	079 Move TEMP, X25
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {100}
	083 Move W8, [X19+192]
	084 And W8, W8, 112
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W8, [X21+36]
	087 Add W8, W8, 1
	088 Move [X21+36], W8
	089 Move X8, 0x42C000
	090 Move X8, [X8+248]
	091 Move X0, [X8]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X19
	097 Move X1, X20
	098 Move X2, X31
	099 Call CommandGenerator.UpdateOpacityId, X0, X1
	100 Move X27, 0x42B000
	101 Move X27, [X27+1912]
	102 Move X0, [X27]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X0, X19
	108 Call RenderEvents.UpdateWorldFlipsWinding, X0
	109 Move X28, 0x3BA000
	110 Move X28, [X28+2600]
	111 Move W23, [X19+240]
	112 Move X0, [X28]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction CSET not yet implemented."
	119 Move X1, X31
	120 Call Debug.Assert, X0
	121 Move X0, [X19+344]
	122 Move X1, X31
	123 Call RenderChainVEData.AllocatesID, X0
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {160}
	128 Move X8, [X19+888]
	129 Add X0, X31, 72
	130 Move X1, X31
	131 Move [X31+72], X8
	132 Call Hierarchy.get_parent, X0
	133 Compare X0, 0
	134 JumpIfEqual {160}
	135 Move X8, [X19+888]
	136 Add X0, X31, 72
	137 Move X1, X31
	138 Move [X31+72], X8
	139 Call Hierarchy.get_parent, X0
	140 Compare X0, 0
	141 JumpIfEqual {318}
	142 Move X8, 0x42B000
	143 Move X8, [X8+2504]
	144 Move X23, [X0+344]
	145 Add X24, X19, 344
	146 Move X8, [X8]
	147 Move W9, [X8+224]
	148 Compare W9, 0
	149 JumpIfNotEqual {152}
	150 Move X0, X8
	151 Call 0x1C17DFC
	152 Move X0, X24
	153 Move X1, X23
	154 Move X2, X31
	155 Call BMPAlloc.Equals, X0, X1
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {314}
	160 Move W23, 1
	161 Move X0, [X28]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Move W0, W23
	167 Move X1, X31
	168 Call Debug.Assert, X0
	169 Move X8, 0x3E3000
	170 Move X8, [X8+3784]
	171 Move X9, [X19]
	172 Move X8, [X8]
	173 Move W11, [X9+304]
	174 Move W10, [X8+304]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X9, [X9+200]
	177 Add X9, X9, X10
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X0, [X27]
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X0, X20
	186 Move X1, X19
	187 Call RenderEvents.UpdateTextCoreSettings, X0, X1
	188 Move X0, X19
	189 Move X1, X31
	190 Call VisualElement.get_renderHints, X0
	191 Move TEMP, X0
	192 And TEMP, TEMP, 16
	193 Compare TEMP, 16
	194 JumpIfNotEqual {203}
	195 Move X0, [X27]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Move X0, X20
	201 Move X1, X19
	202 Call RenderEvents.SetColorValues, X0, X1
	203 Move X8, 0x42C000
	204 Move X8, [X8+248]
	205 Add X23, X31, 144
	206 Move X0, [X8]
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17DFC
	211 Add X8, X31, 80
	212 Move X0, X20
	213 Move X1, X19
	214 Move X2, X21
	215 Move X3, X31
	216 Call CommandGenerator.PaintElement, X0, X1, X2
	217 Move W28, [X31+80]
	218 NotImplemented "Instruction LDUR not yet implemented."
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 Move X8, [X31+128]
	222 Move [X31+144], V0
	223 Move [X31+152], V1
	224 Move [X31+11], V2
	225 Move [X23+47], X8
	226 Move TEMP, X25
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfNotEqual {262}
	230 Move X8, [X19+888]
	231 Add X0, X31, 72
	232 Move X1, X31
	233 Move [X31+72], X8
	234 Call Hierarchy.get_childCount, X0
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move W23, W0
	237 Move W24, W31
	238 Move X8, [X19+888]
	239 Add X0, X31, 72
	240 Move W1, W24
	241 Move X2, X31
	242 Move [X31+72], X8
	243 Call Hierarchy.get_Item, X0, X1
	244 Move X8, [X27]
	245 Move W29, [X19+233]
	246 Move X25, X0
	247 Move W9, [X8+224]
	248 Compare W9, 0
	249 JumpIfNotEqual {252}
	250 Move X0, X8
	251 Call 0x1C17DFC
	252 NotImplemented "Instruction CMP not yet implemented."
	253 NotImplemented "Instruction CSET not yet implemented."
	254 Move W4, 1
	255 Move X0, X20
	256 Move X1, X25
	257 Move W2, W22
	258 Move X5, X21
	259 Call RenderEvents.DepthFirstOnVisualsChanged, X0, X1, X2, X3, X4, X5
	260 Add W24, W24, 1
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move TEMP, X28
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfNotEqual {297}
	266 Add X8, X31, 144
	267 Move X9, 0x42C000
	268 Move V0, [X31+144]
	269 Move V1, [X31+160]
	270 Move V2, [X31+11]
	271 NotImplemented "Instruction LDUR not yet implemented."
	272 Move X9, [X9+248]
	273 Move [X31+80], V0
	274 Move [X31+88], V1
	275 Move [X31+7], V2
	276 Move [X31+127], X8
	277 Move X0, [X9]
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Move V0, [X31+80]
	283 Move V1, [X31+96]
	284 Move V2, [X31+7]
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 Add X1, X31, 16
	287 Move X0, X19
	288 Move X2, X20
	289 Move X3, X21
	290 Move X4, X31
	291 Move [X31+16], W28
	292 Move [X31+17], V0
	293 Move [X31+33], V1
	294 Move [X31+49], V2
	295 Move [X31+64], X8
	296 Call CommandGenerator.ClosePaintElement, X0, X1, X2, X3
	297 Move X8, [X26+40]
	298 Move X9, [X31+200]
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move X20, [X31+288]
	301 Move X19, [X31+296]
	302 Move X22, [X31+272]
	303 Move X21, [X31+280]
	304 Move X24, [X31+256]
	305 Move X23, [X31+264]
	306 Move X26, [X31+240]
	307 Move X25, [X31+248]
	308 Move X28, [X31+224]
	309 Move X27, [X31+232]
	310 Move X29, [X31+208]
	311 Move X30, [X31+216]
	312 Add X31, X31, 304
	313 Return 
	314 Move X0, X19
	315 Move X1, X31
	316 Call VisualElement.get_renderHints, X0
	317 And W23, W0, 1
	318 Call 0x1C17F20
	319 Call 0x3EB2B20

Method: System.Boolean UpdateTextCoreSettings(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D3CDA8 LDR W11, [X8 + 0x18]
	0x03D3CDAC CMP W10, W11
	0x03D3CDB0 B.CS 0x3D3CDC8
	0x03D3CDB4 ADD W9, W10, 0x1
	0x03D3CDB8 ADD X8, X8, X10, 0x3, LSL
	0x03D3CDBC STR W9, [X21 + 0x18]
	0x03D3CDC0 STR X22, [X8 + 0x20]
	0x03D3CDC4 B 0x3D3CDE0
	0x03D3CDC8 LDR X8, [X9 + 0x20]
	0x03D3CDCC MOV X0, X21
	0x03D3CDD0 MOV X1, X22
	0x03D3CDD4 LDR X8, [X8 + 0xC0]
	0x03D3CDD8 LDR X2, [X8 + 0x70]
	0x03D3CDDC BL 0x301BF90
	0x03D3CDE0 SUBS W25, W25, 0x1
	0x03D3CDE4 B.EQ 0x3D3CE08
	0x03D3CDE8 LDR X0, [X23]
	0x03D3CDEC LDR X21, [X19 + 0xE0]
	0x03D3CDF0 BL 0x1C16F10
	0x03D3CDF4 MOV X1, X31
	0x03D3CDF8 MOV X22, X0
	0x03D3CDFC BL 0x3DC37E8
	0x03D3CE00 CBNZ X21, 0x3D3CD8C
	0x03D3CE04 BL 0x1C16F20
	0x03D3CE08 LDR X8, [X20 + 0x128]
	0x03D3CE0C LDP X22, X21, [X31 + 0x30]
	0x03D3CE10 LDP X24, X23, [X31 + 0x20]
	0x03D3CE14 LDP X26, X25, [X31 + 0x10]
	0x03D3CE18 STR X8, [X19 + 0xD0]
	0x03D3CE1C LDR X8, [X20 + 0x130]
	0x03D3CE20 STR X8, [X19 + 0xD8]
	0x03D3CE24 LDP X20, X19, [X31 + 0x40]
	0x03D3CE28 LDR X30, [X31], #0x50
	0x03D3CE2C RET
	0x03D3CE30 LDR X0, [X0 + 0x108]
	0x03D3CE34 RET
	0x03D3CE38 LDR X0, [X0 + 0x110]
	0x03D3CE3C RET
	0x03D3CE40 STR X1, [X0 + 0x110]
	0x03D3CE44 RET
	0x03D3CE48 LDR X0, [X0 + 0x18]
	0x03D3CE4C RET
	0x03D3CE50 LDR X9, [X0 + 0xB0]
	0x03D3CE54 LDP V1, V0, [X0 + 0x90]
	0x03D3CE58 LDR V2, [X0 + 0x8]
	0x03D3CE5C STR X9, [X8 + 0x30]
	0x03D3CE60 STP V1, V0, [X8 + 0x10]
	0x03D3CE64 STR V2, [X8]
	0x03D3CE68 RET
	0x03D3CE6C LDR W0, [X0 + 0x118]
	0x03D3CE70 RET
	0x03D3CE74 STR W1, [X0 + 0x118]
	0x03D3CE78 RET
	0x03D3CE7C LDR W0, [X0 + 0x11C]
	0x03D3CE80 RET
	0x03D3CE84 STR W1, [X0 + 0x11C]
	0x03D3CE88 RET
	0x03D3CE8C SUB X31, X31, 0x140
	0x03D3CE90 STR X29, [X31 + 0x100]
	0x03D3CE94 STP X30, X23, [X31 + 0x110]
	0x03D3CE98 STP X22, X21, [X31 + 0x120]
	0x03D3CE9C STP X20, X19, [X31 + 0x130]
	0x03D3CEA0 ADRP X21, 0x6AB000
	0x03D3CEA4 LDRB W8, [X21 + 0xB75]
	0x03D3CEA8 MOV X20, X1
	0x03D3CEAC MOV X19, X0
	0x03D3CEB0 TBNZ X8, 0x0, 0x3D3CEF8
	0x03D3CEB4 ADRP X0, 0x3B7000
	0x03D3CEB8 LDR X0, [X0 + 0xA28]
	0x03D3CEBC BL 0x1C16CF4
	0x03D3CEC0 ADRP X0, 0x429000
	0x03D3CEC4 LDR X0, [X0 + 0x1E8]
	0x03D3CEC8 BL 0x1C16CF4
	0x03D3CECC ADRP X0, 0x3B7000
	0x03D3CED0 LDR X0, [X0 + 0x598]
	0x03D3CED4 BL 0x1C16CF4
	0x03D3CED8 ADRP X0, 0x428000
	0x03D3CEDC LDR X0, [X0 + 0x760]
	0x03D3CEE0 BL 0x1C16CF4
	0x03D3CEE4 ADRP X0, 0x429000
	0x03D3CEE8 LDR X0, [X0 + 0x230]
	0x03D3CEEC BL 0x1C16CF4
	0x03D3CEF0 MOVZ W8, 0x1
	0x03D3CEF4 STRB W8, [X21 + 0xB75]
	0x03D3CEF8 MOVN W8, 0x0
	0x03D3CEFC STR X20, [X19 + 0x110]
	0x03D3CF00 STR W31, [X19 + 0xE8]
	0x03D3CF04 STR W8, [X19 + 0xC8]
	0x03D3CF08 CBZ X20, 0x3D3D398
	0x03D3CF0C MOVI V0.2D, 0x0
	0x03D3CF10 STR D0, [X20 + 0x150]
	0x03D3CF14 STR D0, [X19 + 0xB8]
	0x03D3CF18 LDR X8, [X20 + 0x378]
	0x03D3CF1C ADD X0, X31, 0x58
	0x03D3CF20 MOV X1, X31
	0x03D3CF24 STR X8, [X31 + 0x58]
	0x03D3CF28 BL 0x3DF88DC
	0x03D3CF2C MOV X21, X0
	0x03D3CF30 CBZ X0, 0x3D3CF40
	0x03D3CF34 LDUR V0, [X21 + 0xF4]
	0x03D3CF38 UNIMPLEMENTED
	0x03D3CF3C STR D0, [X19 + 0xB8]
	0x03D3CF40 LDR X0, [X19 + 0x110]
	0x03D3CF44 CBZ X0, 0x3D3D398
	0x03D3CF48 ADRP X23, 0x429000
	0x03D3CF4C LDR X23, [X23 + 0x1E8]
	0x03D3CF50 MOV X1, X31
	0x03D3CF54 ADD X22, X31, 0x80
	0x03D3CF58 BL 0x3DEC0F4
	0x03D3CF5C TBNZ X0, 0x0, 0x3D3CF6C
	0x03D3CF60 CBZ X21, 0x3D3D070
	0x03D3CF64 ADD X8, X21, 0x160
	0x03D3CF68 B 0x3D3D094
	0x03D3CF6C LDR X0, [X19 + 0x10]
	0x03D3CF70 CBZ X0, 0x3D3D398
	0x03D3CF74 MOV X1, X31
	0x03D3CF78 BL 0x3D268E4
	0x03D3CF7C CBZ X0, 0x3D3D398
	0x03D3CF80 LDR X8, [X19 + 0x110]
	0x03D3CF84 MOVZ W9, 0x3
	0x03D3CF88 STR W9, [X0 + 0x34]
	0x03D3CF8C MOVI V0.2D, 0x0
	0x03D3CF90 STR X8, [X0 + 0x18]
	0x03D3CF94 LDR X8, [X19 + 0x18]
	0x03D3CF98 STP V0, V0, [X31 + 0x20]
	0x03D3CF9C STR V0, [X31 + 0x4]
	0x03D3CFA0 STP X31, X31, [X31 + 0x10]
	0x03D3CFA4 STR X31, [X31 + 0x8]
	0x03D3CFA8 CBZ X8, 0x3D3D398
	0x03D3CFAC LDP V0, V1, [X31 + 0x20]
	0x03D3CFB0 LDR V2, [X31 + 0x4]
	0x03D3CFB4 LDUR V3, [X31 + 0x8]
	0x03D3CFB8 LDR X9, [X31 + 0x18]
	0x03D3CFBC STR V0, [X31 + 0x8]
	0x03D3CFC0 STP V1, V2, [X22 + 0x10]
	0x03D3CFC4 STR V3, [X31 + 0x6]
	0x03D3CFC8 STR X9, [X31 + 0x70]
	0x03D3CFCC LDR W10, [X8 + 0x1C]
	0x03D3CFD0 LDR X9, [X8 + 0x10]
	0x03D3CFD4 LDR X11, [X23]
	0x03D3CFD8 ADD W10, W10, 0x1
	0x03D3CFDC STR W10, [X8 + 0x1C]
	0x03D3CFE0 CBZ X9, 0x3D3D398
	0x03D3CFE4 LDRSW X10, [X8 + 0x18]
	0x03D3CFE8 LDR W12, [X9 + 0x18]
	0x03D3CFEC CMP W10, W12
	0x03D3CFF0 B.CS 0x3D3D02C
	0x03D3CFF4 ADD W11, W10, 0x1
	0x03D3CFF8 STR W11, [X8 + 0x18]
	0x03D3CFFC LDP V0, V1, [X22 + 0x10]
	0x03D3D000 LDR V2, [X31 + 0x8]
	0x03D3D004 MOVZ W12, 0x50
	0x03D3D008 MADD X8, X10, X12, X9
	0x03D3D00C STR X0, [X8 + 0x50]
	0x03D3D010 STP V0, V1, [X8 + 0x30]
	0x03D3D014 STR V2, [X8 + 0x2]
	0x03D3D018 LDR X9, [X31 + 0x70]
	0x03D3D01C LDR V0, [X31 + 0x6]
	0x03D3D020 STR X9, [X8 + 0x68]
	0x03D3D024 STUR V0, [X8 + 0x58]
	0x03D3D028 B 0x3D3D068
	0x03D3D02C LDR X9, [X11 + 0x20]
	0x03D3D030 LDR V0, [X31 + 0x8]
	0x03D3D034 LDP V1, V2, [X22 + 0x10]
	0x03D3D038 LDR V3, [X31 + 0x6]
	0x03D3D03C LDR X9, [X9 + 0xC0]
	0x03D3D040 LDR X10, [X31 + 0x70]
	0x03D3D044 ADD X1, X31, 0xB0
	0x03D3D048 LDR X2, [X9 + 0x70]
	0x03D3D04C STP V0, V1, [X22 + 0x30]
	0x03D3D050 STR V2, [X22 + 0x5]
	0x03D3D054 STR X0, [X31 + 0xE0]
	0x03D3D058 MOV X0, X8
	0x03D3D05C STUR V3, [X22 + 0x68]
	0x03D3D060 STR X10, [X31 + 0xF8]
	0x03D3D064 BL 0x315B370
	0x03D3D068 MOVZ W8, 0x101
	0x03D3D06C STRH W8, [X19 + 0x80]
	0x03D3D070 ADRP X21, 0x427000
	0x03D3D074 LDR X21, [X21 + 0x760]
	0x03D3D078 LDR X0, [X21]
	0x03D3D07C LDR W8, [X0 + 0xE0]
	0x03D3D080 CBNZ W8, 0x3D3D08C
	0x03D3D084 BL 0x1C16DFC
	0x03D3D088 LDR X0, [X21]
	0x03D3D08C LDR X8, [X0 + 0xB8]
	0x03D3D090 ADD X8, X8, 0x110
	0x03D3D094 LDR X8, [X8]
	0x03D3D098 MOV X0, X20
	0x03D3D09C MOV X1, X31
	0x03D3D0A0 STR X8, [X19 + 0xC0]
	0x03D3D0A4 BL 0x3DF32EC
	0x03D3D0A8 CBZ W0, 0x3D3D1F8
	0x03D3D0AC LDR X0, [X19 + 0x10]
	0x03D3D0B0 CBZ X0, 0x3D3D398
	0x03D3D0B4 MOV X1, X31
	0x03D3D0B8 BL 0x3D268E4
	0x03D3D0BC CBZ X0, 0x3D3D398
	0x03D3D0C0 LDR X8, [X19 + 0x110]
	0x03D3D0C4 MOVZ W9, 0x7
	0x03D3D0C8 STR W9, [X0 + 0x34]
	0x03D3D0CC MOVI V0.2D, 0x0
	0x03D3D0D0 STR X8, [X0 + 0x18]
	0x03D3D0D4 LDR X8, [X19 + 0x18]
	0x03D3D0D8 STP V0, V0, [X31 + 0x20]
	0x03D3D0DC STR V0, [X31 + 0x4]
	0x03D3D0E0 STP X31, X31, [X31 + 0x10]
	0x03D3D0E4 STR X31, [X31 + 0x8]
	0x03D3D0E8 CBZ X8, 0x3D3D398
	0x03D3D0EC LDP V0, V1, [X31 + 0x20]
	0x03D3D0F0 LDR V2, [X31 + 0x4]
	0x03D3D0F4 LDUR V3, [X31 + 0x8]
	0x03D3D0F8 LDR X9, [X31 + 0x18]
	0x03D3D0FC STR V0, [X31 + 0x8]
	0x03D3D100 STP V1, V2, [X22 + 0x10]
	0x03D3D104 STR V3, [X31 + 0x6]
	0x03D3D108 STR X9, [X31 + 0x70]
	0x03D3D10C LDR W10, [X8 + 0x1C]
	0x03D3D110 LDR X9, [X8 + 0x10]
	0x03D3D114 LDR X11, [X23]
	0x03D3D118 ADD W10, W10, 0x1
	0x03D3D11C STR W10, [X8 + 0x1C]
	0x03D3D120 CBZ X9, 0x3D3D398
	0x03D3D124 LDRSW X10, [X8 + 0x18]
	0x03D3D128 LDR W12, [X9 + 0x18]
	0x03D3D12C CMP W10, W12
	0x03D3D130 B.CS 0x3D3D16C
	0x03D3D134 ADD W11, W10, 0x1
	0x03D3D138 STR W11, [X8 + 0x18]
	0x03D3D13C LDP V0, V1, [X22 + 0x10]
	0x03D3D140 LDR V2, [X31 + 0x8]
	0x03D3D144 MOVZ W12, 0x50
	0x03D3D148 MADD X8, X10, X12, X9
	0x03D3D14C STR X0, [X8 + 0x50]
	0x03D3D150 STP V0, V1, [X8 + 0x30]
	0x03D3D154 STR V2, [X8 + 0x2]
	0x03D3D158 LDR X9, [X31 + 0x70]
	0x03D3D15C LDR V0, [X31 + 0x6]
	0x03D3D160 STR X9, [X8 + 0x68]
	0x03D3D164 STUR V0, [X8 + 0x58]
	0x03D3D168 B 0x3D3D1A8
	0x03D3D16C LDR X9, [X11 + 0x20]
	0x03D3D170 LDR V0, [X31 + 0x8]
	0x03D3D174 LDP V1, V2, [X22 + 0x10]
	0x03D3D178 LDR V3, [X31 + 0x6]
	0x03D3D17C LDR X9, [X9 + 0xC0]
	0x03D3D180 LDR X10, [X31 + 0x70]
	0x03D3D184 ADD X1, X31, 0xB0
	0x03D3D188 LDR X2, [X9 + 0x70]
	0x03D3D18C STP V0, V1, [X22 + 0x30]
	0x03D3D190 STR V2, [X22 + 0x5]
	0x03D3D194 STR X0, [X31 + 0xE0]
	0x03D3D198 MOV X0, X8
	0x03D3D19C STUR V3, [X22 + 0x68]
	0x03D3D1A0 STR X10, [X31 + 0xF8]
	0x03D3D1A4 BL 0x315B370
	0x03D3D1A8 LDR W8, [X19 + 0xB8]
	0x03D3D1AC MOVZ W9, 0x1
	0x03D3D1B0 STRB W9, [X19 + 0x83]
	0x03D3D1B4 STRB W9, [X19 + 0x80]
	0x03D3D1B8 CMP W8, 0x0
	0x03D3D1BC B.GT 0x3D3D1CC
	0x03D3D1C0 LDR W8, [X19 + 0xBC]
	0x03D3D1C4 CMP W8, 0x1
	0x03D3D1C8 B.LT 0x3D3D1F8

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+224], D15
	003 Move [X31+232], D14
	004 Move [X31+240], D13
	005 Move [X31+248], D12
	006 Move [X31+256], D11
	007 Move [X31+264], D10
	008 Move [X31+272], D9
	009 Move [X31+280], D8
	010 Move [X31+288], X29
	011 Move [X31+304], X30
	012 Move [X31+312], X23
	013 Move [X31+320], X22
	014 Move [X31+328], X21
	015 Move [X31+336], X20
	016 Move [X31+344], X19
	017 Move X21, 0x6AC000
	018 Move W8, [X21+2922]
	019 Move X19, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0x3E1000
	026 Move X0, [X0+3712]
	027 Call 0x1C17CF4
	028 Move X0, 0x429000
	029 Move X0, [X0+1912]
	030 Call 0x1C17CF4
	031 Move X0, 0x3E1000
	032 Move X0, [X0+3736]
	033 Call 0x1C17CF4
	034 Move X0, 0x429000
	035 Move X0, [X0+1888]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+2922], W8
	039 Compare X19, 0
	040 JumpIfEqual {147}
	041 Move X0, X19
	042 Move X1, X31
	043 Call TextUtilities.IsFontAssigned, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {147}
	048 Move X0, [X19+368]
	049 Move X1, X31
	050 Call RenderChainVEData.AllocatesID, X0
	051 Move W21, W0
	052 Add X8, X31, 144
	053 Move X0, X19
	054 Move X1, X31
	055 Call TextUtilities.GetTextCoreSettingsForElement, X0
	056 Move V0, [X31+144]
	057 Move V1, [X31+152]
	058 Move X22, 0x429000
	059 Move S13, [X31+164]
	060 Move S14, [X31+168]
	061 Move [X31+300], S0
	062 Move V0, [X31+148]
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 Move S11, [X31+180]
	065 Move S8, [X31+184]
	066 Move W9, [X31+204]
	067 Move [X31+296], S0
	068 Move S0, [X31+156]
	069 Move S12, [X31+160]
	070 Move [X31+8], S0
	071 Move [X31+16], S1
	072 Move S15, [X31+172]
	073 Move S0, [X31+176]
	074 Move [X31+4], S0
	075 Move X22, [X22+1912]
	076 Move [X31+208], X8
	077 Move [X31+216], W9
	078 Move S9, [X31+188]
	079 Move S10, [X31+192]
	080 Move X0, [X22]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X19
	086 Call RenderEvents.NeedsColorID, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {102}
	091 Move X0, [X22]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X19
	097 Call RenderEvents.NeedsTextCoreSettings, X0
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {148}
	102 Move TEMP, X21
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {152}
	106 Compare X20, 0
	107 JumpIfEqual {326}
	108 Move X10, 0x429000
	109 Move X8, [X31+208]
	110 Move W9, [X31+216]
	111 Move X10, [X10+1888]
	112 Add X21, X20, 320
	113 Move [X31+144], X8
	114 Move [X31+152], W9
	115 Move X0, [X10]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move V1, [X31+300]
	121 Move V0, [X31+296]
	122 Move X8, [X31+144]
	123 Add X1, X31, 80
	124 Move X0, X21
	125 Move [X31+80], S1
	126 Move [X31+88], S0
	127 Move V1, [X31+12]
	128 Move V0, [X31+8]
	129 Move [X31+132], X8
	130 Move W8, [X31+152]
	131 Move X2, X31
	132 Move [X31+88], S1
	133 Move [X31+96], S0
	134 Move V0, [X31+4]
	135 Move [X31+96], S12
	136 Move [X31+104], S13
	137 Move [X31+104], S14
	138 Move [X31+112], S15
	139 Move [X31+120], S8
	140 Move [X31+128], S9
	141 Move [X31+112], S0
	142 Move [X31+120], S11
	143 Move [X31+128], S10
	144 Move [X31+140], W8
	145 Call UIRVEShaderInfoAllocator.AllocTextCoreSettings, X0, X1
	146 Move [X19+368], X0
	147 Move W0, W31
	148 Move TEMP, X21
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {297}
	152 Move X0, [X19+368]
	153 Move X1, X31
	154 Call RenderChainVEData.AllocatesID, X0
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {308}
	159 Move X0, X19
	160 Move X1, X31
	161 Call VisualElement.get_panel, X0
	162 Compare X0, 0
	163 JumpIfEqual {326}
	164 Move X23, 0x3E1000
	165 Move X8, [X0]
	166 Move X23, [X23+3712]
	167 Move X21, X0
	168 NotImplemented "Instruction LDRH not yet implemented."
	169 Move X1, [X23]
	170 Compare X9, 0
	171 JumpIfEqual {178}
	172 Move X10, [X8+176]
	173 Add X10, X10, 8
	174 NotImplemented "Instruction LDUR not yet implemented."
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Subtract X9, X9, 1
	177 Add X10, X10, 16
	178 Move W2, 2
	179 Move X0, X21
	180 Call 0x1C5D788
	181 Move W9, [X10]
	182 Add W9, W9, 2
	183 Add X8, X8, W9
	184 Add X0, X8, 312
	185 Move X8, [X0]
	186 Move X1, [X0+8]
	187 Move X0, X21
	188 NotImplemented "Instruction BLR not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X21, 0x3E1000
	191 Move X21, [X21+3736]
	192 Move X0, [X21]
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {198}
	196 Call 0x1C17DFC
	197 Move X0, [X21]
	198 Move X8, [X0+184]
	199 Move V4, [X31+300]
	200 Move S0, [X8+24]
	201 Move S1, [X8+28]
	202 Move S2, [X8+32]
	203 Move S3, [X8+36]
	204 Multiply S4, S4, S0
	205 Move [X31+300], S4
	206 Move V4, [X31+296]
	207 Multiply S12, S12, S0
	208 Multiply S13, S13, S1
	209 Multiply S14, S14, S2
	210 Multiply S4, S4, S1
	211 Move [X31+296], S4
	212 Move V4, [X31+12]
	213 Multiply S15, S15, S3
	214 Multiply S11, S11, S0
	215 Multiply S8, S8, S1
	216 Multiply S5, S4, S2
	217 Move V4, [X31+8]
	218 Multiply S9, S9, S2
	219 Multiply S10, S10, S3
	220 Multiply S4, S4, S3
	221 Move [X31+8], S4
	222 Move [X31+16], S5
	223 Compare X20, 0
	224 JumpIfEqual {326}
	225 Move X8, [X31+208]
	226 Move W9, [X31+216]
	227 Move X21, [X19+368]
	228 Move X0, X19
	229 Move X1, X31
	230 Move [X31+144], X8
	231 Move [X31+152], W9
	232 Call VisualElement.get_panel, X0
	233 Compare X0, 0
	234 JumpIfEqual {326}
	235 Move X8, [X0]
	236 Move X1, [X23]
	237 Move X22, X0
	238 Add X19, X20, 320
	239 NotImplemented "Instruction LDRH not yet implemented."
	240 Compare X9, 0
	241 JumpIfEqual {248}
	242 Move X10, [X8+176]
	243 Add X10, X10, 8
	244 NotImplemented "Instruction LDUR not yet implemented."
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Subtract X9, X9, 1
	247 Add X10, X10, 16
	248 Move W2, 2
	249 Move X0, X22
	250 Call 0x1C5D788
	251 Move W9, [X10]
	252 Add W9, W9, 2
	253 Add X8, X8, W9
	254 Add X0, X8, 312
	255 Move X8, [X0]
	256 Move X1, [X0+8]
	257 Move X0, X22
	258 NotImplemented "Instruction BLR not yet implemented."
	259 Move X8, 0x428000
	260 Move X8, [X8+1888]
	261 Move W20, W0
	262 Move X8, [X8]
	263 Move W9, [X8+224]
	264 Compare W9, 0
	265 JumpIfNotEqual {268}
	266 Move X0, X8
	267 Call 0x1C17DFC
	268 Move V1, [X31+300]
	269 Move V0, [X31+296]
	270 Move X8, [X31+144]
	271 Move W9, [X31+152]
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Move [X31+16], S1
	274 Move [X31+24], S0
	275 Move V1, [X31+12]
	276 Move V0, [X31+8]
	277 NotImplemented "Instruction CSET not yet implemented."
	278 Add X2, X31, 16
	279 Move X0, X19
	280 Move [X31+24], S1
	281 Move [X31+32], S0
	282 Move V0, [X31+4]
	283 Move X1, X21
	284 Move X4, X31
	285 Move [X31+32], S12
	286 Move [X31+40], S13
	287 Move [X31+40], S14
	288 Move [X31+48], S15
	289 Move [X31+48], S0
	290 Move [X31+56], S11
	291 Move [X31+56], S8
	292 Move [X31+64], S9
	293 Move [X31+64], S10
	294 Move [X31+68], X8
	295 Move [X31+76], W9
	296 Call UIRVEShaderInfoAllocator.SetTextCoreSettingValue, X0, X1, X2, X3
	297 Move X20, 0x428000
	298 Move X20, [X20+1888]
	299 Move X0, [X20]
	300 Move W8, [X0+224]
	301 Compare W8, 0
	302 JumpIfNotEqual {305}
	303 Call 0x1C17DFC
	304 Move X0, [X20]
	305 Move X8, [X0+184]
	306 Move X8, [X8+296]
	307 Move [X19+368], X8
	308 Move W0, 1
	309 Move X20, [X31+336]
	310 Move X19, [X31+344]
	311 Move X22, [X31+320]
	312 Move X21, [X31+328]
	313 Move X30, [X31+304]
	314 Move X23, [X31+312]
	315 Move X29, [X31+288]
	316 Move D9, [X31+272]
	317 Move D8, [X31+280]
	318 Move D11, [X31+256]
	319 Move D10, [X31+264]
	320 Move D13, [X31+240]
	321 Move D12, [X31+248]
	322 Move D15, [X31+224]
	323 Move D14, [X31+232]
	324 Add X31, X31, 352
	325 Return X0
	326 Call 0x1C17F20

Method: System.Boolean IsElementHierarchyHidden(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D3A994 ADD X0, X8, 0x138
	0x03D3A998 LDP X8, X1, [X0]
	0x03D3A99C MOV X0, X20
	0x03D3A9A0 BLR X8
	0x03D3A9A4 FMOV S4, -1
	0x03D3A9A8 ADRP X8, 0xFFFFFFFFFCDAF000
	0x03D3A9AC FADD S0, S0, S4
	0x03D3A9B0 FADD S1, S1, S4
	0x03D3A9B4 FADD S2, S2, S4
	0x03D3A9B8 FADD S3, S3, S4
	0x03D3A9BC LDR V4, [X8 + 0xF20]
	0x03D3A9C0 FMUL S0, S0, S0
	0x03D3A9C4 FMUL S1, S1, S1
	0x03D3A9C8 FMUL S2, S2, S2
	0x03D3A9CC FADD S0, S0, S1
	0x03D3A9D0 FADD S0, S2, S0
	0x03D3A9D4 FMUL S1, S3, S3
	0x03D3A9D8 FADD S0, S1, S0
	0x03D3A9DC FCMP S0, S4
	0x03D3A9E0 B.PL 0x3D3A9EC
	0x03D3A9E4 MOV W22, W31
	0x03D3A9E8 B 0x3D3AA20
	0x03D3A9EC CBZ X19, 0x3D3AF40
	0x03D3A9F0 ADRP X8, 0x42A000
	0x03D3A9F4 LDR X8, [X8 + 0x760]
	0x03D3A9F8 ADD X23, X19, 0x140
	0x03D3A9FC LDR X0, [X8]
	0x03D3AA00 LDR W8, [X0 + 0xE0]
	0x03D3AA04 CBNZ W8, 0x3D3AA0C
	0x03D3AA08 BL 0x1C16DFC
	0x03D3AA0C MOV X0, X23
	0x03D3AA10 MOV X1, X31
	0x03D3AA14 BL 0x3D2C70C
	0x03D3AA18 STR X0, [X22]
	0x03D3AA1C MOVZ W22, 0x1
	0x03D3AA20 LDR X0, [X24]
	0x03D3AA24 ADD X23, X21, 0x180
	0x03D3AA28 LDR W8, [X0 + 0xE0]
	0x03D3AA2C CBNZ W8, 0x3D3AA34
	0x03D3AA30 BL 0x1C16DFC
	0x03D3AA34 MOV X0, X23
	0x03D3AA38 MOV X1, X31
	0x03D3AA3C BL 0x3D279C8
	0x03D3AA40 TBNZ X0, 0x0, 0x3D3AB08
	0x03D3AA44 CBZ X20, 0x3D3AF40
	0x03D3AA48 ADRP X10, 0x3E2000
	0x03D3AA4C LDR X8, [X20]
	0x03D3AA50 LDR X10, [X10 + 0x120]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6AE000
	005 Move W8, [X20+2923]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3E3000
	012 Move X0, [X0+288]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2923], W8
	016 Compare X19, 0
	017 JumpIfEqual {54}
	018 Move X0, X19
	019 Move X1, X31
	020 Call VisualElement.get_resolvedStyle, X0
	021 Compare X0, 0
	022 JumpIfEqual {54}
	023 Move X10, 0x3E3000
	024 Move X8, [X0]
	025 Move X10, [X10+288]
	026 Move X19, X0
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X1, [X10]
	029 Compare X9, 0
	030 JumpIfEqual {37}
	031 Move X10, [X8+176]
	032 Add X10, X10, 8
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X9, X9, 1
	036 Add X10, X10, 16
	037 Move W2, 15
	038 Move X0, X19
	039 Call 0x1C5D788
	040 Move W9, [X10]
	041 Add W9, W9, 15
	042 Add X8, X8, W9
	043 Add X0, X8, 312
	044 Move X8, [X0]
	045 Move X1, [X0+8]
	046 Move X0, X19
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 Move X30, [X31+32]
	053 Return X0
	054 Call 0x1C17F20

Method: UnityEngine.UIElements.VisualElement GetLastDeepestChild(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D3B7D4 LDR X0, [X22]
	0x03D3B7D8 LDR W8, [X0 + 0xE0]
	0x03D3B7DC CBNZ W8, 0x3D3B7E4
	0x03D3B7E0 BL 0x1C16DFC
	0x03D3B7E4 MOV X0, X20
	0x03D3B7E8 MOV X1, X19
	0x03D3B7EC MOV X2, X31
	0x03D3B7F0 BL 0x3D369BC
	0x03D3B7F4 MOV X0, X20
	0x03D3B7F8 MOV X1, X19
	0x03D3B7FC MOV X2, X31
	0x03D3B800 BL 0x3D241D4
	0x03D3B804 LDR X8, [X19 + 0x90]
	0x03D3B808 STRB W31, [X19 + 0xE8]
	0x03D3B80C STR W31, [X19 + 0xF0]
	0x03D3B810 CBZ X8, 0x3D3B81C
	0x03D3B814 LDR X9, [X24]
	0x03D3B818 STR X9, [X8 + 0x88]
	0x03D3B81C LDR X9, [X24]
	0x03D3B820 CBZ X9, 0x3D3B828
	0x03D3B824 STR X8, [X9 + 0x90]
	0x03D3B828 LDR X0, [X19 + 0x170]
	0x03D3B82C MOV X1, X31
	0x03D3B830 BL 0x3D2795C
	0x03D3B834 TBZ X0, 0x0, 0x3D3B878
	0x03D3B838 ADRP X25, 0x429000
	0x03D3B83C LDR X25, [X25 + 0x760]
	0x03D3B840 LDR X22, [X19 + 0x170]
	0x03D3B844 ADD X23, X20, 0x140
	0x03D3B848 LDR X0, [X25]
	0x03D3B84C LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {33}
	006 Move X8, [X0+888]
	007 Move X19, X0
	008 Add X0, X31, 8
	009 Move X1, X31
	010 Move [X31+8], X8
	011 Call Hierarchy.get_childCount, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X8, [X19+888]
	014 Subtract W1, W0, 1
	015 Add X0, X31, 8
	016 Move X2, X31
	017 Move [X31+8], X8
	018 Call Hierarchy.get_Item, X0, X1
	019 Compare X0, 0
	020 JumpIfEqual {33}
	021 Move X8, [X0+888]
	022 Move X19, X0
	023 Add X0, X31, 8
	024 Move X1, X31
	025 Move [X31+8], X8
	026 Call Hierarchy.get_childCount, X0
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, X19
	029 Move X30, [X31+16]
	030 Move X19, [X31+24]
	031 Add X31, X31, 32
	032 Return X0
	033 Call 0x1C17F20

Method: UnityEngine.UIElements.UIR.Implementation.ClipMethod DetermineSelfClipMethod(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D3CCA0 STR X21, [X19 + 0x120]
	0x03D3CCA4 BL 0x33BDD8C
	0x03D3CCA8 STR X20, [X19 + 0x10]
	0x03D3CCAC LDR X0, [X23]
	0x03D3CCB0 BL 0x1C16F10
	0x03D3CCB4 MOV X1, X19
	0x03D3CCB8 MOV X2, X31
	0x03D3CCBC MOV X21, X0
	0x03D3CCC0 BL 0x3DC5D40
	0x03D3CCC4 STR X21, [X19 + 0x108]
	0x03D3CCC8 CBZ X20, 0x3D3CE04
	0x03D3CCCC LDR X8, [X20 + 0x118]
	0x03D3CCD0 ADRP X22, 0x429000
	0x03D3CCD4 ADRP X21, 0x429000
	0x03D3CCD8 ADRP X24, 0x429000
	0x03D3CCDC STR X8, [X19 + 0x20]
	0x03D3CCE0 LDR X8, [X20 + 0x120]
	0x03D3CCE4 LDR X22, [X22 + 0x200]
	0x03D3CCE8 LDR X21, [X21 + 0x220]
	0x03D3CCEC LDR X24, [X24 + 0x228]
	0x03D3CCF0 STR X8, [X19 + 0x28]
	0x03D3CCF4 LDR X0, [X22]
	0x03D3CCF8 ADRP X25, 0x429000
	0x03D3CCFC ADRP X26, 0x429000
	0x03D3CD00 ADRP X23, 0x429000
	0x03D3CD04 LDR X25, [X25 + 0x210]
	0x03D3CD08 LDR X26, [X26 + 0x208]
	0x03D3CD0C LDR X23, [X23 + 0x1D0]
	0x03D3CD10 BL 0x1C16F10
	0x03D3CD14 LDR X2, [X21]
	0x03D3CD18 MOV X1, X19
	0x03D3CD1C MOV X3, X31
	0x03D3CD20 MOV X21, X0
	0x03D3CD24 BL 0x3D22FC8
	0x03D3CD28 STR X21, [X19 + 0xF8]
	0x03D3CD2C LDR X0, [X22]
	0x03D3CD30 BL 0x1C16F10
	0x03D3CD34 LDR X2, [X24]
	0x03D3CD38 MOV X1, X19
	0x03D3CD3C MOV X3, X31
	0x03D3CD40 MOV X21, X0
	0x03D3CD44 BL 0x3D22FC8
	0x03D3CD48 STR X21, [X19 + 0x100]
	0x03D3CD4C LDR X0, [X25]
	0x03D3CD50 BL 0x1C16F10
	0x03D3CD54 LDR X2, [X26]
	0x03D3CD58 MOVZ W1, 0x20
	0x03D3CD5C MOV X21, X0
	0x03D3CD60 BL 0x301B830
	0x03D3CD64 STR X21, [X19 + 0xE0]
	0x03D3CD68 LDR X0, [X23]
	0x03D3CD6C BL 0x1C16F10
	0x03D3CD70 MOV X1, X31
	0x03D3CD74 MOV X22, X0
	0x03D3CD78 BL 0x3DC37E8
	0x03D3CD7C CBZ X21, 0x3D3CE04
	0x03D3CD80 ADRP X24, 0x429000
	0x03D3CD84 LDR X24, [X24 + 0x1B8]
	0x03D3CD88 MOVZ W25, 0x20
	0x03D3CD8C LDR W10, [X21 + 0x1C]
	0x03D3CD90 LDR X8, [X21 + 0x10]
	0x03D3CD94 LDR X9, [X24]
	0x03D3CD98 ADD W10, W10, 0x1
	0x03D3CD9C STR W10, [X21 + 0x1C]
	0x03D3CDA0 CBZ X8, 0x3D3CE04
	0x03D3CDA4 LDRSW X10, [X21 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6AC000
	007 Move W8, [X21+2924]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3E2000
	015 Move X0, [X0+576]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2924], W8
	019 Compare X20, 0
	020 JumpIfEqual {85}
	021 Move X0, X20
	022 Move X1, X31
	023 Call VisualElement.ShouldClip, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {77}
	028 Move X0, X20
	029 Move X1, X31
	030 Call VisualElement.get_renderHints, X0
	031 Move X22, 0x3E2000
	032 Move X22, [X22+576]
	033 Move W8, W0
	034 Move W10, 5
	035 And W31, W8, W10
	036 Move X0, [X22]
	037 Move W8, 2
	038 NotImplemented "Instruction CINC not yet implemented."
	039 Move W9, [X0+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X1, X31
	045 Call UIRUtility.IsRoundRect, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {62}
	050 Move X0, [X22]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X20
	056 Move X1, X31
	057 Call UIRUtility.IsVectorImageBackground, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {78}
	062 Move X8, [X20+888]
	063 Add X0, X31, 8
	064 Move X1, X31
	065 Move [X31+8], X8
	066 Call Hierarchy.get_parent, X0
	067 Compare X0, 0
	068 JumpIfEqual {71}
	069 Move W8, [X0+248]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Compare X19, 0
	072 JumpIfEqual {85}
	073 Move W8, [X19+537]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W8, 4
	076 NotImplemented "Instruction CSEL not yet implemented."
	077 Move W21, 1
	078 Move W0, W21
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X30, [X31+48]
	084 Return X0
	085 Call 0x1C17F20

Method: System.Boolean UpdateLocalFlipsWinding(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D3B6AC LDP D9, D8, [X31 + 0x10]
	0x03D3B6B0 CSET W2, EQ
	0x03D3B6B4 MOV V2.16B, V10.16B
	0x03D3B6B8 MOV V3.16B, V11.16B
	0x03D3B6BC MOV X3, X31
	0x03D3B6C0 LDP D11, D10, [X31], #0x60
	0x03D3B6C4 B 0x3D2BF84
	0x03D3B6C8 BL 0x1C16F20
	0x03D3B6CC SUB X31, X31, 0x50
	0x03D3B6D0 STP X30, X25, [X31 + 0x10]
	0x03D3B6D4 STP X24, X23, [X31 + 0x20]
	0x03D3B6D8 STP X22, X21, [X31 + 0x30]
	0x03D3B6DC STP X20, X19, [X31 + 0x40]
	0x03D3B6E0 ADRP X21, 0x6AC000
	0x03D3B6E4 LDRB W8, [X21 + 0xB64]
	0x03D3B6E8 MOV X19, X1
	0x03D3B6EC MOV X20, X0
	0x03D3B6F0 TBNZ X8, 0x0, 0x3D3B72C
	0x03D3B6F4 ADRP X0, 0x429000
	0x03D3B6F8 LDR X0, [X0 + 0x9C8]
	0x03D3B6FC BL 0x1C16CF4
	0x03D3B700 ADRP X0, 0x42A000
	0x03D3B704 LDR X0, [X0 + 0xF8]
	0x03D3B708 BL 0x1C16CF4
	0x03D3B70C ADRP X0, 0x429000
	0x03D3B710 LDR X0, [X0 + 0x778]
	0x03D3B714 BL 0x1C16CF4
	0x03D3B718 ADRP X0, 0x429000
	0x03D3B71C LDR X0, [X0 + 0x760]
	0x03D3B720 BL 0x1C16CF4
	0x03D3B724 MOVZ W8, 0x1
	0x03D3B728 STRB W8, [X21 + 0xB64]
	0x03D3B72C CBZ X19, 0x3D3BC9C
	0x03D3B730 LDR X8, [X19 + 0x378]
	0x03D3B734 ADD X0, X31, 0x8
	0x03D3B738 MOV X1, X31
	0x03D3B73C STR X8, [X31 + 0x8]
	0x03D3B740 BL 0x3DF8994
	0x03D3B744 SUBS W21, W0, 0x1
	0x03D3B748 B.MI 0x3D3B7A8
	0x03D3B74C ADRP X24, 0x429000
	0x03D3B750 LDR X24, [X24 + 0x778]
	0x03D3B754 MOV W23, W31
	0x03D3B758 LDR X8, [X19 + 0x378]
	0x03D3B75C ADD X0, X31, 0x8
	0x03D3B760 MOV W1, W21
	0x03D3B764 MOV X2, X31
	0x03D3B768 STR X8, [X31 + 0x8]
	0x03D3B76C BL 0x3DF98E4
	0x03D3B770 LDR X8, [X24]
	0x03D3B774 MOV X22, X0
	0x03D3B778 LDR W9, [X8 + 0xE0]
	0x03D3B77C CBNZ W9, 0x3D3B788
	0x03D3B780 MOV X0, X8
	0x03D3B784 BL 0x1C16DFC
	0x03D3B788 MOV X0, X20
	0x03D3B78C MOV X1, X22
	0x03D3B790 BL 0x3D3B6CC
	0x03D3B794 SUBS W21, W21, 0x1
	0x03D3B798 ADD W23, W0, W23
	0x03D3B79C B.PL 0x3D3B758
	0x03D3B7A0 ADD W21, W23, 0x1
	0x03D3B7A4 B 0x3D3B7AC
	0x03D3B7A8 MOVZ W21, 0x1
	0x03D3B7AC LDRB W8, [X19 + 0xE8]
	0x03D3B7B0 ADD X24, X19, 0x88
	0x03D3B7B4 CBZ W8, 0x3D3BC7C
	0x03D3B7B8 CBZ X20, 0x3D3BC9C
	0x03D3B7BC ADRP X22, 0x42A000
	0x03D3B7C0 LDR X22, [X22 + 0xF8]
	0x03D3B7C4 MOV X0, X20
	0x03D3B7C8 MOV X1, X19
	0x03D3B7CC MOV X2, X31
	0x03D3B7D0 BL 0x3D26830

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x6AD000
	008 Move W8, [X20+2925]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x3E3000
	015 Move X0, [X0+1672]
	016 Call 0x1C17CF4
	017 Move X0, 0x3B9000
	018 Move X0, [X0+1448]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2925], W8
	022 Compare X19, 0
	023 JumpIfEqual {80}
	024 Move W21, [X19+234]
	025 Move X0, X19
	026 Move X1, X31
	027 Call VisualElement.get_transform, X0
	028 Compare X0, 0
	029 JumpIfEqual {80}
	030 Move X10, 0x3E3000
	031 Move X8, [X0]
	032 Move X10, [X10+1672]
	033 Move X22, 0x3B9000
	034 Move X20, X0
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Move X22, [X22+1448]
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move W2, 2
	047 Move X0, X20
	048 Call 0x1C5D788
	049 Move W9, [X10]
	050 Add W9, W9, 2
	051 Add X8, X8, W9
	052 Add X0, X8, 312
	053 Move X8, [X0]
	054 Move X1, [X0+8]
	055 Move X0, X20
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X0, [X22]
	058 Multiply S8, S0, S1
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X8, -52756480
	064 Move V0, [X8+1040]
	065 NotImplemented "Instruction FABS not yet implemented."
	066 NotImplemented "Instruction FCMP not yet implemented."
	067 NotImplemented "Instruction FCMP not yet implemented."
	068 NotImplemented "Instruction CSET not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W0, W31
	071 Move W0, 1
	072 Move [X19+234], W8
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+8]
	078 Move V8, [X31+48]
	079 Return X0
	080 Call 0x1C17F20

Method: System.Void UpdateWorldFlipsWinding(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D3D38C LDR X29, [X31 + 0x100]
	0x03D3D390 ADD X31, X31, 0x140
	0x03D3D394 RET
	0x03D3D398 BL 0x1C16F20
	0x03D3D39C STR X30, [X31 - 0x30]!
	0x03D3D3A0 STP X22, X21, [X31 + 0x10]
	0x03D3D3A4 STP X20, X19, [X31 + 0x20]
	0x03D3D3A8 ADRP X22, 0x6AA000
	0x03D3D3AC ADRP X21, 0x3B6000
	0x03D3D3B0 LDRB W8, [X22 + 0xB76]
	0x03D3D3B4 LDR X21, [X21 + 0xA28]
	0x03D3D3B8 MOV X19, X1
	0x03D3D3BC MOV X20, X0
	0x03D3D3C0 TBNZ X8, 0x0, 0x3D3D3D8
	0x03D3D3C4 ADRP X0, 0x3B6000
	0x03D3D3C8 LDR X0, [X0 + 0xA28]
	0x03D3D3CC BL 0x1C16CF4
	0x03D3D3D0 MOVZ W8, 0x1
	0x03D3D3D4 STRB W8, [X22 + 0xB76]
	0x03D3D3D8 LDR X0, [X21]
	0x03D3D3DC LDRB W21, [X20 + 0x80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {24}
	006 Move X8, [X0+888]
	007 Move W20, [X0+234]
	008 Move X19, X0
	009 Add X0, X31, 8
	010 Move X1, X31
	011 Move [X31+8], X8
	012 Call Hierarchy.get_parent, X0
	013 Compare X0, 0
	014 JumpIfEqual {16}
	015 Move W8, [X0+236]
	016 Move W8, W31
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CSET not yet implemented."
	019 Move [X19+236], W8
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return 
	024 Call 0x1C17F20

Method: System.Void UpdateZeroScaling(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D3D1CC ADRP X8, 0x3B6000
	0x03D3D1D0 LDR X8, [X8 + 0xA28]
	0x03D3D1D4 ADRP X21, 0x428000
	0x03D3D1D8 LDR X0, [X8]
	0x03D3D1DC LDR W8, [X0 + 0xE0]
	0x03D3D1E0 LDR X21, [X21 + 0x230]
	0x03D3D1E4 CBNZ W8, 0x3D3D1EC
	0x03D3D1E8 BL 0x1C16DFC
	0x03D3D1EC LDR X0, [X21]
	0x03D3D1F0 MOV X1, X31
	0x03D3D1F4 BL 0x3C0649C
	0x03D3D1F8 ADRP X21, 0x3B6000
	0x03D3D1FC LDR X21, [X21 + 0x598]
	0x03D3D200 MOV X0, X20
	0x03D3D204 MOV X1, X31
	0x03D3D208 BL 0x3DF32F4
	0x03D3D20C LDR X8, [X21]
	0x03D3D210 MOV X21, X0
	0x03D3D214 LDR W9, [X8 + 0xE0]
	0x03D3D218 CBNZ W9, 0x3D3D224
	0x03D3D21C MOV X0, X8
	0x03D3D220 BL 0x1C16DFC
	0x03D3D224 MOV X0, X21
	0x03D3D228 MOV X1, X31
	0x03D3D22C MOV X2, X31
	0x03D3D230 BL 0x3C354F8
	0x03D3D234 TBZ X0, 0x0, 0x3D3D350
	0x03D3D238 LDR X0, [X19 + 0x10]
	0x03D3D23C CBZ X0, 0x3D3D398
	0x03D3D240 MOV X1, X31
	0x03D3D244 BL 0x3D268E4
	0x03D3D248 CBZ X0, 0x3D3D398
	0x03D3D24C LDR X8, [X19 + 0x110]
	0x03D3D250 MOVZ W9, 0xA
	0x03D3D254 MOV X21, X0
	0x03D3D258 STR W9, [X0 + 0x34]
	0x03D3D25C STR X8, [X0 + 0x18]
	0x03D3D260 MOV X0, X20
	0x03D3D264 MOV X1, X31
	0x03D3D268 BL 0x3DF32F4
	0x03D3D26C STR X0, [X21 + 0x38]
	0x03D3D270 LDR X0, [X19 + 0x18]
	0x03D3D274 MOVI V0.2D, 0x0
	0x03D3D278 STP V0, V0, [X31 + 0x20]
	0x03D3D27C STR V0, [X31 + 0x4]
	0x03D3D280 STP X31, X31, [X31 + 0x10]
	0x03D3D284 STR X31, [X31 + 0x8]
	0x03D3D288 CBZ X0, 0x3D3D398
	0x03D3D28C LDP V0, V1, [X31 + 0x20]
	0x03D3D290 LDR V2, [X31 + 0x4]
	0x03D3D294 LDUR V3, [X31 + 0x8]
	0x03D3D298 LDR X8, [X31 + 0x18]
	0x03D3D29C STR V0, [X31 + 0x8]
	0x03D3D2A0 STP V1, V2, [X22 + 0x10]
	0x03D3D2A4 STR V3, [X31 + 0x6]
	0x03D3D2A8 STR X8, [X31 + 0x70]
	0x03D3D2AC LDR W9, [X0 + 0x1C]
	0x03D3D2B0 LDR X8, [X0 + 0x10]
	0x03D3D2B4 LDR X10, [X23]
	0x03D3D2B8 ADD W9, W9, 0x1
	0x03D3D2BC STR W9, [X0 + 0x1C]
	0x03D3D2C0 CBZ X8, 0x3D3D398
	0x03D3D2C4 LDRSW X9, [X0 + 0x18]
	0x03D3D2C8 LDR W11, [X8 + 0x18]
	0x03D3D2CC CMP W9, W11
	0x03D3D2D0 B.CS 0x3D3D30C
	0x03D3D2D4 ADD W10, W9, 0x1
	0x03D3D2D8 STR W10, [X0 + 0x18]
	0x03D3D2DC LDP V0, V1, [X22 + 0x10]
	0x03D3D2E0 LDR V2, [X31 + 0x8]
	0x03D3D2E4 MOVZ W11, 0x50
	0x03D3D2E8 MADD X8, X9, X11, X8
	0x03D3D2EC STR X21, [X8 + 0x50]
	0x03D3D2F0 STP V0, V1, [X8 + 0x30]
	0x03D3D2F4 STR V2, [X8 + 0x2]
	0x03D3D2F8 LDR X9, [X31 + 0x70]
	0x03D3D2FC LDR V0, [X31 + 0x6]
	0x03D3D300 STR X9, [X8 + 0x68]
	0x03D3D304 STUR V0, [X8 + 0x58]
	0x03D3D308 B 0x3D3D344
	0x03D3D30C LDR X8, [X10 + 0x20]
	0x03D3D310 LDR V0, [X31 + 0x8]
	0x03D3D314 LDP V1, V2, [X22 + 0x10]
	0x03D3D318 LDR V3, [X31 + 0x6]
	0x03D3D31C LDR X8, [X8 + 0xC0]
	0x03D3D320 LDR X9, [X31 + 0x70]
	0x03D3D324 ADD X1, X31, 0xB0
	0x03D3D328 LDR X2, [X8 + 0x70]
	0x03D3D32C STP V0, V1, [X22 + 0x30]
	0x03D3D330 STR V2, [X22 + 0x5]
	0x03D3D334 STR X21, [X31 + 0xE0]
	0x03D3D338 STUR V3, [X22 + 0x68]
	0x03D3D33C STR X9, [X31 + 0xF8]
	0x03D3D340 BL 0x315B370
	0x03D3D344 MOVZ W8, 0x1
	0x03D3D348 STRB W8, [X19 + 0x84]
	0x03D3D34C STRB W8, [X19 + 0x80]
	0x03D3D350 LDR X0, [X19 + 0x108]
	0x03D3D354 CBZ X0, 0x3D3D398
	0x03D3D358 MOV X1, X31
	0x03D3D35C BL 0x3DC5D30
	0x03D3D360 TBZ X0, 0x0, 0x3D3D380
	0x03D3D364 LDR X0, [X19 + 0x108]
	0x03D3D368 CBZ X0, 0x3D3D398
	0x03D3D36C MOV X1, X31
	0x03D3D370 BL 0x3DC5C74
	0x03D3D374 CBZ X0, 0x3D3D398
	0x03D3D378 MOV X1, X31
	0x03D3D37C BL 0x3DC5E1C
	0x03D3D380 LDP X20, X19, [X31 + 0x130]
	0x03D3D384 LDP X22, X21, [X31 + 0x120]
	0x03D3D388 LDP X30, X23, [X31 + 0x110]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x6AB000
	009 Move W8, [X20+2926]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x3E1000
	016 Move X0, [X0+1672]
	017 Call 0x1C17CF4
	018 Move X0, 0x3B7000
	019 Move X0, [X0+1448]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2926], W8
	023 Move [X31+8], X31
	024 Compare X19, 0
	025 JumpIfEqual {123}
	026 Move X0, X19
	027 Move X1, X31
	028 Call VisualElement.get_transform, X0
	029 Compare X0, 0
	030 JumpIfEqual {123}
	031 Move X21, 0x3E1000
	032 Move X8, [X0]
	033 Move X21, [X21+1672]
	034 Move X20, X0
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X21]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move W2, 2
	046 Move X0, X20
	047 Call 0x1C5D788
	048 Move W9, [X10]
	049 Add W9, W9, 2
	050 Add X8, X8, W9
	051 Add X0, X8, 312
	052 Move X8, [X0]
	053 Move X1, [X0+8]
	054 Move X0, X20
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X0, X19
	057 Move X1, X31
	058 Move V8, V0
	059 Call VisualElement.get_transform, X0
	060 Compare X0, 0
	061 JumpIfEqual {123}
	062 Move X8, [X0]
	063 Move X1, [X21]
	064 Move X21, 0x3B7000
	065 Move X20, X0
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Move X21, [X21+1448]
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move W2, 2
	077 Move X0, X20
	078 Call 0x1C5D788
	079 Move W9, [X10]
	080 Add W9, W9, 2
	081 Add X8, X8, W9
	082 Add X0, X8, 312
	083 Move X8, [X0]
	084 Move X1, [X0+8]
	085 Move X0, X20
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X0, [X21]
	088 Move V9, V1
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X8, -52764672
	094 Move V10, [X8+1040]
	095 Multiply S0, S8, S9
	096 Move X8, [X19+888]
	097 NotImplemented "Instruction FABS not yet implemented."
	098 NotImplemented "Instruction FCMP not yet implemented."
	099 NotImplemented "Instruction CSET not yet implemented."
	100 Add X0, X31, 8
	101 Move X1, X31
	102 Move [X19+235], W9
	103 Move [X31+8], X8
	104 Call Hierarchy.get_parent, X0
	105 Compare X0, 0
	106 JumpIfEqual {108}
	107 Move W8, [X0+237]
	108 Move W8, W31
	109 NotImplemented "Instruction FCMP not yet implemented."
	110 NotImplemented "Instruction CSET not yet implemented."
	111 Or W8, W8, W9
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CSET not yet implemented."
	114 Move [X19+237], W8
	115 Move X20, [X31+48]
	116 Move X19, [X31+56]
	117 Move X30, [X31+32]
	118 Move X21, [X31+40]
	119 Move D9, [X31+16]
	120 Move D8, [X31+24]
	121 Move V10, [X31+64]
	122 Return 
	123 Call 0x1C17F20

Method: System.Boolean NeedsTransformID(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D3B850 CBNZ W8, 0x3D3B858
	0x03D3B854 BL 0x1C16DFC
	0x03D3B858 MOV X0, X23
	0x03D3B85C MOV X1, X22
	0x03D3B860 MOV X2, X31
	0x03D3B864 BL 0x3D2CA3C
	0x03D3B868 LDR X8, [X25]
	0x03D3B86C LDR X8, [X8 + 0xB8]
	0x03D3B870 LDR X8, [X8 + 0x128]
	0x03D3B874 STR X8, [X19 + 0x170]
	0x03D3B878 LDR X0, [X19 + 0x168]
	0x03D3B87C MOV X1, X31
	0x03D3B880 BL 0x3D2795C
	0x03D3B884 TBZ X0, 0x0, 0x3D3B8C8
	0x03D3B888 ADRP X25, 0x429000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {22}
	005 Move X1, X31
	006 Move X19, X0
	007 Call VisualElement.get_renderHints, X0
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {18}
	012 Move X0, X19
	013 Move X1, X31
	014 Call VisualElement.get_renderHints, X0
	015 Move W0, W0
	016 ShiftRight W0, 1
	017 And W0, W0, 1
	018 Move W0, W31
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Return X0
	022 Call 0x1C17F20

Method: System.Boolean NeedsColorID(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D3B88C LDR X25, [X25 + 0x760]
	0x03D3B890 LDR X22, [X19 + 0x168]
	0x03D3B894 ADD X23, X20, 0x140
	0x03D3B898 LDR X0, [X25]
	0x03D3B89C LDR W8, [X0 + 0xE0]
	0x03D3B8A0 CBNZ W8, 0x3D3B8A8
	0x03D3B8A4 BL 0x1C16DFC
	0x03D3B8A8 MOV X0, X23

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {11}
	004 Move X1, X31
	005 Call VisualElement.get_renderHints, X0
	006 Move W0, W0
	007 ShiftRight W0, 4
	008 And W0, W0, 15
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.Boolean NeedsTextCoreSettings(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D3D3E0 LDR W8, [X0 + 0xE0]
	0x03D3D3E4 CBNZ W8, 0x3D3D3EC
	0x03D3D3E8 BL 0x1C16DFC
	0x03D3D3EC CMP W21, 0x0
	0x03D3D3F0 CSET W0, NE
	0x03D3D3F4 MOV X1, X31
	0x03D3D3F8 BL 0x3C06E58
	0x03D3D3FC STR X19, [X20 + 0x88]
	0x03D3D400 LDP X20, X19, [X31 + 0x20]
	0x03D3D404 LDP X22, X21, [X31 + 0x10]
	0x03D3D408 LDR X30, [X31], #0x30
	0x03D3D40C RET
	0x03D3D410 STR X30, [X31 - 0x50]!
	0x03D3D414 STP X26, X25, [X31 + 0x10]
	0x03D3D418 STP X24, X23, [X31 + 0x20]
	0x03D3D41C STP X22, X21, [X31 + 0x30]
	0x03D3D420 STP X20, X19, [X31 + 0x40]
	0x03D3D424 ADRP X26, 0x6AA000
	0x03D3D428 ADRP X25, 0x3B6000
	0x03D3D42C LDRB W8, [X26 + 0xB77]
	0x03D3D430 LDR X25, [X25 + 0xA28]
	0x03D3D434 MOV W19, W5
	0x03D3D438 MOV X20, X4
	0x03D3D43C MOV X21, X3
	0x03D3D440 MOV X23, X2
	0x03D3D444 MOV X24, X1
	0x03D3D448 MOV X22, X0
	0x03D3D44C TBNZ X8, 0x0, 0x3D3D464
	0x03D3D450 ADRP X0, 0x3B6000
	0x03D3D454 LDR X0, [X0 + 0xA28]
	0x03D3D458 BL 0x1C16CF4
	0x03D3D45C MOVZ W8, 0x1
	0x03D3D460 STRB W8, [X26 + 0xB77]
	0x03D3D464 LDR X0, [X25]
	0x03D3D468 LDRB W25, [X22 + 0x80]
	0x03D3D46C LDR W8, [X0 + 0xE0]
	0x03D3D470 CBNZ W8, 0x3D3D478
	0x03D3D474 BL 0x1C16DFC
	0x03D3D478 CMP W25, 0x0
	0x03D3D47C CSET W0, NE

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], D9
	003 Move [X31+72], D8
	004 Move [X31+80], X30
	005 Move [X31+88], X19
	006 Add X8, X31, 0
	007 Move X1, X31
	008 Call TextUtilities.GetTextCoreSettingsForElement, X0
	009 Move V0, [X31+32]
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 Move X19, 0x69D000
	012 NotImplemented "Instruction LDUR not yet implemented."
	013 Move W8, [X19+1935]
	014 Move V9, [X31+60]
	015 Compare W8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, 0x3BF000
	018 Move X0, [X0+3848]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+1935], W8
	022 NotImplemented "Instruction FCMP not yet implemented."
	023 Move X8, 0x3BF000
	024 Move X8, [X8+3848]
	025 Move X8, [X8]
	026 Move X8, [X8+184]
	027 Move V0, [X8]
	028 Move X8, -52768768
	029 Move V1, [X8+3872]
	030 Subtract V0, V8, V0
	031 NotImplemented "Instruction INVALID not yet implemented."
	032 NotImplemented "Instruction FADDP not yet implemented."
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 Move W0, W31
	035 Move W0, 1
	036 Move X30, [X31+80]
	037 Move X19, [X31+88]
	038 Move D9, [X31+64]
	039 Move D8, [X31+72]
	040 Add X31, X31, 96
	041 Return X0

Method: System.Boolean InitColorIDs(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D3B8AC MOV X1, X22
	0x03D3B8B0 MOV X2, X31
	0x03D3B8B4 BL 0x3D2C90C
	0x03D3B8B8 LDR X8, [X25]
	0x03D3B8BC LDR X8, [X8 + 0xB8]
	0x03D3B8C0 LDR X8, [X8 + 0x118]
	0x03D3B8C4 STR X8, [X19 + 0x168]
	0x03D3B8C8 LDR X0, [X19 + 0x178]
	0x03D3B8CC MOV X1, X31
	0x03D3B8D0 BL 0x3D2795C
	0x03D3B8D4 TBZ X0, 0x0, 0x3D3B930
	0x03D3B8D8 ADRP X8, 0x429000
	0x03D3B8DC LDR X8, [X8 + 0x760]
	0x03D3B8E0 LDR X22, [X19 + 0x178]
	0x03D3B8E4 ADD X23, X20, 0x140
	0x03D3B8E8 LDR X0, [X8]
	0x03D3B8EC LDR W8, [X0 + 0xE0]
	0x03D3B8F0 CBNZ W8, 0x3D3B8F8
	0x03D3B8F4 BL 0x1C16DFC
	0x03D3B8F8 MOV X0, X23
	0x03D3B8FC MOV X1, X22
	0x03D3B900 MOV X2, X31
	0x03D3B904 BL 0x3D2C9A4
	0x03D3B908 ADRP X22, 0x429000
	0x03D3B90C LDR X22, [X22 + 0x9C8]
	0x03D3B910 LDR X0, [X22]
	0x03D3B914 LDR W8, [X0 + 0xE0]
	0x03D3B918 CBNZ W8, 0x3D3B924
	0x03D3B91C BL 0x1C16DFC
	0x03D3B920 LDR X0, [X22]
	0x03D3B924 LDR X8, [X0 + 0xB8]
	0x03D3B928 LDR X8, [X8]
	0x03D3B92C STR X8, [X19 + 0x178]
	0x03D3B930 LDR X0, [X19 + 0x180]
	0x03D3B934 MOV X1, X31
	0x03D3B938 BL 0x3D2795C
	0x03D3B93C TBZ X0, 0x0, 0x3D3B998
	0x03D3B940 ADRP X8, 0x429000
	0x03D3B944 LDR X8, [X8 + 0x760]
	0x03D3B948 LDR X22, [X19 + 0x180]
	0x03D3B94C ADD X23, X20, 0x140
	0x03D3B950 LDR X0, [X8]
	0x03D3B954 LDR W8, [X0 + 0xE0]
	0x03D3B958 CBNZ W8, 0x3D3B960
	0x03D3B95C BL 0x1C16DFC
	0x03D3B960 MOV X0, X23
	0x03D3B964 MOV X1, X22
	0x03D3B968 MOV X2, X31
	0x03D3B96C BL 0x3D2C9A4
	0x03D3B970 ADRP X22, 0x429000
	0x03D3B974 LDR X22, [X22 + 0x9C8]
	0x03D3B978 LDR X0, [X22]
	0x03D3B97C LDR W8, [X0 + 0xE0]
	0x03D3B980 CBNZ W8, 0x3D3B98C
	0x03D3B984 BL 0x1C16DFC
	0x03D3B988 LDR X0, [X22]
	0x03D3B98C LDR X8, [X0 + 0xB8]
	0x03D3B990 LDR X8, [X8]
	0x03D3B994 STR X8, [X19 + 0x180]
	0x03D3B998 LDR X0, [X19 + 0x188]
	0x03D3B99C MOV X1, X31
	0x03D3B9A0 BL 0x3D2795C
	0x03D3B9A4 TBZ X0, 0x0, 0x3D3BA00
	0x03D3B9A8 ADRP X8, 0x429000
	0x03D3B9AC LDR X8, [X8 + 0x760]
	0x03D3B9B0 LDR X22, [X19 + 0x188]
	0x03D3B9B4 ADD X23, X20, 0x140
	0x03D3B9B8 LDR X0, [X8]
	0x03D3B9BC LDR W8, [X0 + 0xE0]
	0x03D3B9C0 CBNZ W8, 0x3D3B9C8
	0x03D3B9C4 BL 0x1C16DFC
	0x03D3B9C8 MOV X0, X23
	0x03D3B9CC MOV X1, X22
	0x03D3B9D0 MOV X2, X31
	0x03D3B9D4 BL 0x3D2C9A4
	0x03D3B9D8 ADRP X22, 0x429000
	0x03D3B9DC LDR X22, [X22 + 0x9C8]
	0x03D3B9E0 LDR X0, [X22]
	0x03D3B9E4 LDR W8, [X0 + 0xE0]
	0x03D3B9E8 CBNZ W8, 0x3D3B9F4
	0x03D3B9EC BL 0x1C16DFC
	0x03D3B9F0 LDR X0, [X22]
	0x03D3B9F4 LDR X8, [X0 + 0xB8]
	0x03D3B9F8 LDR X8, [X8]
	0x03D3B9FC STR X8, [X19 + 0x188]
	0x03D3BA00 LDR X0, [X19 + 0x190]
	0x03D3BA04 MOV X1, X31
	0x03D3BA08 BL 0x3D2795C
	0x03D3BA0C TBZ X0, 0x0, 0x3D3BA68
	0x03D3BA10 ADRP X8, 0x429000
	0x03D3BA14 LDR X8, [X8 + 0x760]
	0x03D3BA18 LDR X22, [X19 + 0x190]
	0x03D3BA1C ADD X23, X20, 0x140
	0x03D3BA20 LDR X0, [X8]
	0x03D3BA24 LDR W8, [X0 + 0xE0]
	0x03D3BA28 CBNZ W8, 0x3D3BA30
	0x03D3BA2C BL 0x1C16DFC
	0x03D3BA30 MOV X0, X23
	0x03D3BA34 MOV X1, X22
	0x03D3BA38 MOV X2, X31
	0x03D3BA3C BL 0x3D2C9A4
	0x03D3BA40 ADRP X22, 0x429000
	0x03D3BA44 LDR X22, [X22 + 0x9C8]
	0x03D3BA48 LDR X0, [X22]
	0x03D3BA4C LDR W8, [X0 + 0xE0]
	0x03D3BA50 CBNZ W8, 0x3D3BA5C
	0x03D3BA54 BL 0x1C16DFC
	0x03D3BA58 LDR X0, [X22]
	0x03D3BA5C LDR X8, [X0 + 0xB8]
	0x03D3BA60 LDR X8, [X8]
	0x03D3BA64 STR X8, [X19 + 0x190]
	0x03D3BA68 LDR X0, [X19 + 0x198]
	0x03D3BA6C MOV X1, X31
	0x03D3BA70 BL 0x3D2795C
	0x03D3BA74 TBZ X0, 0x0, 0x3D3BAD0
	0x03D3BA78 ADRP X8, 0x429000
	0x03D3BA7C LDR X8, [X8 + 0x760]
	0x03D3BA80 LDR X22, [X19 + 0x198]
	0x03D3BA84 ADD X23, X20, 0x140
	0x03D3BA88 LDR X0, [X8]
	0x03D3BA8C LDR W8, [X0 + 0xE0]
	0x03D3BA90 CBNZ W8, 0x3D3BA98
	0x03D3BA94 BL 0x1C16DFC
	0x03D3BA98 MOV X0, X23
	0x03D3BA9C MOV X1, X22
	0x03D3BAA0 MOV X2, X31
	0x03D3BAA4 BL 0x3D2C9A4
	0x03D3BAA8 ADRP X22, 0x429000
	0x03D3BAAC LDR X22, [X22 + 0x9C8]
	0x03D3BAB0 LDR X0, [X22]
	0x03D3BAB4 LDR W8, [X0 + 0xE0]
	0x03D3BAB8 CBNZ W8, 0x3D3BAC4
	0x03D3BABC BL 0x1C16DFC
	0x03D3BAC0 LDR X0, [X22]
	0x03D3BAC4 LDR X8, [X0 + 0xB8]
	0x03D3BAC8 LDR X8, [X8]
	0x03D3BACC STR X8, [X19 + 0x198]
	0x03D3BAD0 LDR X0, [X19 + 0x1A0]
	0x03D3BAD4 MOV X1, X31
	0x03D3BAD8 BL 0x3D2795C
	0x03D3BADC TBZ X0, 0x0, 0x3D3BB38
	0x03D3BAE0 ADRP X8, 0x429000
	0x03D3BAE4 LDR X8, [X8 + 0x760]
	0x03D3BAE8 LDR X22, [X19 + 0x1A0]
	0x03D3BAEC ADD X23, X20, 0x140
	0x03D3BAF0 LDR X0, [X8]
	0x03D3BAF4 LDR W8, [X0 + 0xE0]
	0x03D3BAF8 CBNZ W8, 0x3D3BB00
	0x03D3BAFC BL 0x1C16DFC
	0x03D3BB00 MOV X0, X23
	0x03D3BB04 MOV X1, X22
	0x03D3BB08 MOV X2, X31
	0x03D3BB0C BL 0x3D2C9A4
	0x03D3BB10 ADRP X22, 0x429000
	0x03D3BB14 LDR X22, [X22 + 0x9C8]
	0x03D3BB18 LDR X0, [X22]
	0x03D3BB1C LDR W8, [X0 + 0xE0]
	0x03D3BB20 CBNZ W8, 0x3D3BB2C
	0x03D3BB24 BL 0x1C16DFC
	0x03D3BB28 LDR X0, [X22]
	0x03D3BB2C LDR X8, [X0 + 0xB8]
	0x03D3BB30 LDR X8, [X8]
	0x03D3BB34 STR X8, [X19 + 0x1A0]
	0x03D3BB38 LDR X0, [X19 + 0x1A8]
	0x03D3BB3C MOV X1, X31
	0x03D3BB40 BL 0x3D2795C
	0x03D3BB44 TBZ X0, 0x0, 0x3D3BBA0
	0x03D3BB48 ADRP X8, 0x429000
	0x03D3BB4C LDR X8, [X8 + 0x760]
	0x03D3BB50 LDR X22, [X19 + 0x1A8]
	0x03D3BB54 ADD X23, X20, 0x140
	0x03D3BB58 LDR X0, [X8]
	0x03D3BB5C LDR W8, [X0 + 0xE0]
	0x03D3BB60 CBNZ W8, 0x3D3BB68
	0x03D3BB64 BL 0x1C16DFC
	0x03D3BB68 MOV X0, X23
	0x03D3BB6C MOV X1, X22
	0x03D3BB70 MOV X2, X31
	0x03D3BB74 BL 0x3D2C9A4
	0x03D3BB78 ADRP X22, 0x429000
	0x03D3BB7C LDR X22, [X22 + 0x9C8]
	0x03D3BB80 LDR X0, [X22]
	0x03D3BB84 LDR W8, [X0 + 0xE0]
	0x03D3BB88 CBNZ W8, 0x3D3BB94
	0x03D3BB8C BL 0x1C16DFC
	0x03D3BB90 LDR X0, [X22]
	0x03D3BB94 LDR X8, [X0 + 0xB8]
	0x03D3BB98 LDR X8, [X8]
	0x03D3BB9C STR X8, [X19 + 0x1A8]
	0x03D3BBA0 LDR X0, [X19 + 0x160]
	0x03D3BBA4 MOV X1, X31
	0x03D3BBA8 BL 0x3D2795C
	0x03D3BBAC TBZ X0, 0x0, 0x3D3BBF0
	0x03D3BBB0 ADRP X25, 0x429000
	0x03D3BBB4 LDR X25, [X25 + 0x760]
	0x03D3BBB8 LDR X22, [X19 + 0x160]
	0x03D3BBBC ADD X23, X20, 0x140
	0x03D3BBC0 LDR X0, [X25]
	0x03D3BBC4 LDR W8, [X0 + 0xE0]
	0x03D3BBC8 CBNZ W8, 0x3D3BBD0
	0x03D3BBCC BL 0x1C16DFC
	0x03D3BBD0 MOV X0, X23
	0x03D3BBD4 MOV X1, X22
	0x03D3BBD8 MOV X2, X31
	0x03D3BBDC BL 0x3D2C874
	0x03D3BBE0 LDR X8, [X25]
	0x03D3BBE4 LDR X8, [X8 + 0xB8]
	0x03D3BBE8 LDR X8, [X8 + 0x110]
	0x03D3BBEC STR X8, [X19 + 0x160]
	0x03D3BBF0 LDR X0, [X19 + 0x158]
	0x03D3BBF4 MOV X1, X31
	0x03D3BBF8 BL 0x3D2795C
	0x03D3BBFC TBZ X0, 0x0, 0x3D3BC40
	0x03D3BC00 ADRP X25, 0x429000
	0x03D3BC04 LDR X25, [X25 + 0x760]
	0x03D3BC08 LDR X22, [X19 + 0x158]
	0x03D3BC0C ADD X23, X20, 0x140
	0x03D3BC10 LDR X0, [X25]
	0x03D3BC14 LDR W8, [X0 + 0xE0]
	0x03D3BC18 CBNZ W8, 0x3D3BC20
	0x03D3BC1C BL 0x1C16DFC
	0x03D3BC20 MOV X0, X23
	0x03D3BC24 MOV X1, X22
	0x03D3BC28 MOV X2, X31
	0x03D3BC2C BL 0x3D2C7DC
	0x03D3BC30 LDR X8, [X25]
	0x03D3BC34 LDR X8, [X8 + 0xB8]
	0x03D3BC38 LDR X8, [X8 + 0x108]
	0x03D3BC3C STR X8, [X19 + 0x158]
	0x03D3BC40 LDR X1, [X19 + 0x108]
	0x03D3BC44 STP X31, X31, [X19 + 0x98]
	0x03D3BC48 CBZ X1, 0x3D3BC60
	0x03D3BC4C LDR X0, [X20 + 0x110]
	0x03D3BC50 CBZ X0, 0x3D3BC9C
	0x03D3BC54 MOV X2, X31
	0x03D3BC58 BL 0x3D30BFC
	0x03D3BC5C STR X31, [X19 + 0x108]
	0x03D3BC60 LDR X1, [X19 + 0x100]
	0x03D3BC64 CBZ X1, 0x3D3BC7C
	0x03D3BC68 LDR X0, [X20 + 0x110]
	0x03D3BC6C CBZ X0, 0x3D3BC9C
	0x03D3BC70 MOV X2, X31
	0x03D3BC74 BL 0x3D30BFC
	0x03D3BC78 STR X31, [X19 + 0x100]
	0x03D3BC7C STP X31, X31, [X24]
	0x03D3BC80 MOV W0, W21
	0x03D3BC84 LDP X20, X19, [X31 + 0x40]
	0x03D3BC88 LDP X22, X21, [X31 + 0x30]
	0x03D3BC8C LDP X24, X23, [X31 + 0x20]
	0x03D3BC90 LDP X30, X25, [X31 + 0x10]
	0x03D3BC94 ADD X31, X31, 0x50
	0x03D3BC98 RET
	0x03D3BC9C BL 0x1C16F20
	0x03D3BCA0 STR X30, [X31 - 0x30]!
	0x03D3BCA4 STP X22, X21, [X31 + 0x10]
	0x03D3BCA8 STP X20, X19, [X31 + 0x20]
	0x03D3BCAC ADRP X21, 0x6AC000
	0x03D3BCB0 LDRB W8, [X21 + 0xB6C]
	0x03D3BCB4 MOV X20, X1
	0x03D3BCB8 MOV X19, X0
	0x03D3BCBC TBNZ X8, 0x0, 0x3D3BCD4
	0x03D3BCC0 ADRP X0, 0x3E2000
	0x03D3BCC4 LDR X0, [X0 + 0x240]
	0x03D3BCC8 BL 0x1C16CF4
	0x03D3BCCC MOVZ W8, 0x1
	0x03D3BCD0 STRB W8, [X21 + 0xB6C]
	0x03D3BCD4 CBZ X20, 0x3D3BDA4
	0x03D3BCD8 MOV X0, X20
	0x03D3BCDC MOV X1, X31
	0x03D3BCE0 BL 0x3DEDBC0
	0x03D3BCE4 TBZ X0, 0x0, 0x3D3BD8C
	0x03D3BCE8 MOV X0, X20
	0x03D3BCEC MOV X1, X31
	0x03D3BCF0 BL 0x3DEC0F4
	0x03D3BCF4 ADRP X22, 0x3E2000
	0x03D3BCF8 LDR X22, [X22 + 0x240]
	0x03D3BCFC MOV W8, W0
	0x03D3BD00 MOVZ W10, 0x5
	0x03D3BD04 ANDS W31, W8, W10, 0x0
	0x03D3BD08 LDR X0, [X22]
	0x03D3BD0C MOVZ W8, 0x2
	0x03D3BD10 CINC W21, W8, EQ
	0x03D3BD14 LDR W9, [X0 + 0xE0]
	0x03D3BD18 CBNZ W9, 0x3D3BD20
	0x03D3BD1C BL 0x1C16DFC
	0x03D3BD20 MOV X0, X20
	0x03D3BD24 MOV X1, X31
	0x03D3BD28 BL 0x3DE0CC8
	0x03D3BD2C TBNZ X0, 0x0, 0x3D3BD50
	0x03D3BD30 LDR X0, [X22]
	0x03D3BD34 LDR W8, [X0 + 0xE0]
	0x03D3BD38 CBNZ W8, 0x3D3BD40
	0x03D3BD3C BL 0x1C16DFC
	0x03D3BD40 MOV X0, X20
	0x03D3BD44 MOV X1, X31
	0x03D3BD48 BL 0x3DE0EBC
	0x03D3BD4C TBZ X0, 0x0, 0x3D3BD90
	0x03D3BD50 LDR X8, [X20 + 0x378]
	0x03D3BD54 ADD X0, X31, 0x8
	0x03D3BD58 MOV X1, X31
	0x03D3BD5C STR X8, [X31 + 0x8]
	0x03D3BD60 BL 0x3DF88DC
	0x03D3BD64 CBZ X0, 0x3D3BD74
	0x03D3BD68 LDR W8, [X0 + 0xF8]
	0x03D3BD6C CMP W8, 0x7
	0x03D3BD70 B.EQ 0x3D3BD90
	0x03D3BD74 CBZ X19, 0x3D3BDA4
	0x03D3BD78 LDRB W8, [X19 + 0x219]
	0x03D3BD7C CMP W8, 0x0
	0x03D3BD80 MOVZ W8, 0x4
	0x03D3BD84 CSEL W21, W8, W21, EQ
	0x03D3BD88 B 0x3D3BD90
	0x03D3BD8C MOVZ W21, 0x1
	0x03D3BD90 MOV W0, W21
	0x03D3BD94 LDP X20, X19, [X31 + 0x20]
	0x03D3BD98 LDP X22, X21, [X31 + 0x10]
	0x03D3BD9C LDR X30, [X31], #0x30
	0x03D3BDA0 RET
	0x03D3BDA4 BL 0x1C16F20
	0x03D3BDA8 SUB X31, X31, 0x160
	0x03D3BDAC STP D15, D14, [X31 + 0xE0]
	0x03D3BDB0 STP D13, D12, [X31 + 0xF0]
	0x03D3BDB4 STP D11, D10, [X31 + 0x100]
	0x03D3BDB8 STP D9, D8, [X31 + 0x110]
	0x03D3BDBC STR X29, [X31 + 0x120]
	0x03D3BDC0 STP X30, X23, [X31 + 0x130]
	0x03D3BDC4 STP X22, X21, [X31 + 0x140]
	0x03D3BDC8 STP X20, X19, [X31 + 0x150]
	0x03D3BDCC ADRP X21, 0x6AC000
	0x03D3BDD0 LDRB W8, [X21 + 0xB6A]
	0x03D3BDD4 MOV X19, X1
	0x03D3BDD8 MOV X20, X0
	0x03D3BDDC TBNZ X8, 0x0, 0x3D3BE18
	0x03D3BDE0 ADRP X0, 0x3E1000
	0x03D3BDE4 LDR X0, [X0 + 0xE80]
	0x03D3BDE8 BL 0x1C16CF4
	0x03D3BDEC ADRP X0, 0x429000
	0x03D3BDF0 LDR X0, [X0 + 0x778]
	0x03D3BDF4 BL 0x1C16CF4
	0x03D3BDF8 ADRP X0, 0x3E1000
	0x03D3BDFC LDR X0, [X0 + 0xE98]
	0x03D3BE00 BL 0x1C16CF4
	0x03D3BE04 ADRP X0, 0x429000
	0x03D3BE08 LDR X0, [X0 + 0x760]
	0x03D3BE0C BL 0x1C16CF4
	0x03D3BE10 MOVZ W8, 0x1
	0x03D3BE14 STRB W8, [X21 + 0xB6A]
	0x03D3BE18 CBZ X19, 0x3D3BF58
	0x03D3BE1C MOV X0, X19
	0x03D3BE20 MOV X1, X31
	0x03D3BE24 BL 0x3E0F1E4
	0x03D3BE28 TBZ X0, 0x0, 0x3D3BF58
	0x03D3BE2C LDR X0, [X19 + 0x170]
	0x03D3BE30 MOV X1, X31
	0x03D3BE34 BL 0x3D2795C
	0x03D3BE38 MOV W21, W0
	0x03D3BE3C ADD X8, X31, 0x90
	0x03D3BE40 MOV X0, X19
	0x03D3BE44 MOV X1, X31
	0x03D3BE48 BL 0x3E0F2A8
	0x03D3BE4C LDR V0, [X31 + 0x90]
	0x03D3BE50 LDR V1, [X31 + 0x98]
	0x03D3BE54 ADRP X22, 0x429000
	0x03D3BE58 LDP S13, S14, [X31 + 0xA4]
	0x03D3BE5C STR S0, [X31 + 0x12C]
	0x03D3BE60 LDR V0, [X31 + 0x94]
	0x03D3BE64 LDUR X8, [X31 + 0xC4]
	0x03D3BE68 LDP S11, S8, [X31 + 0xB4]
	0x03D3BE6C LDR W9, [X31 + 0xCC]
	0x03D3BE70 STR S0, [X31 + 0x128]
	0x03D3BE74 LDP S0, S12, [X31 + 0x9C]
	0x03D3BE78 STP S0, S1, [X31 + 0x8]
	0x03D3BE7C LDP S15, S0, [X31 + 0xAC]
	0x03D3BE80 STR S0, [X31 + 0x4]
	0x03D3BE84 LDR X22, [X22 + 0x778]
	0x03D3BE88 STR X8, [X31 + 0xD0]
	0x03D3BE8C STR W9, [X31 + 0xD8]
	0x03D3BE90 LDP S9, S10, [X31 + 0xBC]
	0x03D3BE94 LDR X0, [X22]
	0x03D3BE98 LDR W8, [X0 + 0xE0]
	0x03D3BE9C CBNZ W8, 0x3D3BEA4
	0x03D3BEA0 BL 0x1C16DFC
	0x03D3BEA4 MOV X0, X19
	0x03D3BEA8 BL 0x3D3A88C
	0x03D3BEAC TBNZ X0, 0x0, 0x3D3BECC
	0x03D3BEB0 LDR X0, [X22]
	0x03D3BEB4 LDR W8, [X0 + 0xE0]
	0x03D3BEB8 CBNZ W8, 0x3D3BEC0
	0x03D3BEBC BL 0x1C16DFC
	0x03D3BEC0 MOV X0, X19
	0x03D3BEC4 BL 0x3D3C3E0
	0x03D3BEC8 TBZ X0, 0x0, 0x3D3BF60
	0x03D3BECC TBNZ X21, 0x0, 0x3D3BF64
	0x03D3BED0 CBZ X20, 0x3D3C1C8
	0x03D3BED4 ADRP X10, 0x429000
	0x03D3BED8 LDR X8, [X31 + 0xD0]
	0x03D3BEDC LDR W9, [X31 + 0xD8]
	0x03D3BEE0 LDR X10, [X10 + 0x760]
	0x03D3BEE4 ADD X21, X20, 0x140
	0x03D3BEE8 STR X8, [X31 + 0x90]
	0x03D3BEEC STR W9, [X31 + 0x98]
	0x03D3BEF0 LDR X0, [X10]
	0x03D3BEF4 LDR W8, [X0 + 0xE0]
	0x03D3BEF8 CBNZ W8, 0x3D3BF00
	0x03D3BEFC BL 0x1C16DFC
	0x03D3BF00 LDR V1, [X31 + 0x12C]
	0x03D3BF04 LDR V0, [X31 + 0x128]
	0x03D3BF08 LDR X8, [X31 + 0x90]
	0x03D3BF0C ADD X1, X31, 0x50
	0x03D3BF10 MOV X0, X21
	0x03D3BF14 STP S1, S0, [X31 + 0x50]
	0x03D3BF18 LDR V1, [X31 + 0xC]
	0x03D3BF1C LDR V0, [X31 + 0x8]
	0x03D3BF20 STUR X8, [X31 + 0x84]
	0x03D3BF24 LDR W8, [X31 + 0x98]
	0x03D3BF28 MOV X2, X31
	0x03D3BF2C STP S1, S0, [X31 + 0x58]
	0x03D3BF30 LDR V0, [X31 + 0x4]
	0x03D3BF34 STP S12, S13, [X31 + 0x60]
	0x03D3BF38 STP S14, S15, [X31 + 0x68]
	0x03D3BF3C STP S8, S9, [X31 + 0x78]
	0x03D3BF40 STP S0, S11, [X31 + 0x70]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x6AD000
	009 Move W8, [X20+2927]
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x42A000
	017 Move X0, [X0+2504]
	018 Call 0x1C17CF4
	019 Move X0, 0x3E2000
	020 Move X0, [X0+288]
	021 Call 0x1C17CF4
	022 Move X0, 0x42A000
	023 Move X0, [X0+1888]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2927], W8
	027 Compare X21, 0
	028 JumpIfEqual {466}
	029 Move X24, 0x42A000
	030 Move X24, [X24+2504]
	031 Move X0, X21
	032 Move X1, X31
	033 Call VisualElement.get_resolvedStyle, X0
	034 Move X20, X0
	035 Move X0, [X24]
	036 Add X22, X21, 376
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X22
	042 Move X1, X31
	043 Call BMPAlloc.IsValid, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {89}
	048 Compare X20, 0
	049 JumpIfEqual {466}
	050 Move X10, 0x3E2000
	051 Move X8, [X20]
	052 Move X10, [X10+288]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move W2, 14
	064 Move X0, X20
	065 Call 0x1C5D788
	066 Move W9, [X10]
	067 Add W9, W9, 14
	068 Add X8, X8, W9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X1, [X0+8]
	072 Move X0, X20
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move S4, -1
	075 Move X8, -52760576
	076 Add S0, S0, S4
	077 Add S1, S1, S4
	078 Add S2, S2, S4
	079 Add S3, S3, S4
	080 Move V4, [X8+3872]
	081 Multiply S0, S0, S0
	082 Multiply S1, S1, S1
	083 Multiply S2, S2, S2
	084 Add S0, S0, S1
	085 Add S0, S2, S0
	086 Multiply S1, S3, S3
	087 Add S0, S1, S0
	088 NotImplemented "Instruction FCMP not yet implemented."
	089 Move W22, W31
	090 Compare X19, 0
	091 JumpIfEqual {466}
	092 Move X8, 0x42A000
	093 Move X8, [X8+1888]
	094 Add X23, X19, 320
	095 Move X0, [X8]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X23
	101 Move X1, X31
	102 Call UIRVEShaderInfoAllocator.AllocColor, X0
	103 Move [X22], X0
	104 Move W22, 1
	105 Move X0, [X24]
	106 Add X23, X21, 384
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X0, X23
	112 Move X1, X31
	113 Call BMPAlloc.IsValid, X0
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {168}
	118 Compare X20, 0
	119 JumpIfEqual {466}
	120 Move X10, 0x3E2000
	121 Move X8, [X20]
	122 Move X10, [X10+288]
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Move X1, [X10]
	125 Compare X9, 0
	126 JumpIfEqual {133}
	127 Move X10, [X8+176]
	128 Add X10, X10, 8
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Subtract X9, X9, 1
	132 Add X10, X10, 16
	133 Move X0, X20
	134 Move W2, W31
	135 Call 0x1C5D788
	136 NotImplemented "Instruction LDRSW not yet implemented."
	137 Add X8, X8, X9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X20
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Multiply S0, S0, S0
	144 Multiply S1, S1, S1
	145 Move X8, -52760576
	146 Add S0, S0, S1
	147 Move V1, [X8+3872]
	148 Multiply S2, S2, S2
	149 Add S0, S2, S0
	150 Multiply S2, S3, S3
	151 Add S0, S2, S0
	152 NotImplemented "Instruction FCMP not yet implemented."
	153 Compare X19, 0
	154 JumpIfEqual {466}
	155 Move X8, 0x42A000
	156 Move X8, [X8+1888]
	157 Add X22, X19, 320
	158 Move X0, [X8]
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Move X0, X22
	164 Move X1, X31
	165 Call UIRVEShaderInfoAllocator.AllocColor, X0
	166 Move W22, 1
	167 Move [X23], X0
	168 Move X0, [X24]
	169 Add X23, X21, 392
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move X0, X23
	175 Move X1, X31
	176 Call BMPAlloc.IsValid, X0
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfEqual {223}
	181 Compare X20, 0
	182 JumpIfEqual {466}
	183 Move X10, 0x3E2000
	184 Move X8, [X20]
	185 Move X10, [X10+288]
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Move X1, [X10]
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move W2, 6
	197 Move X0, X20
	198 Call 0x1C5D788
	199 Move W9, [X10]
	200 Add W9, W9, 6
	201 Add X8, X8, W9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X1, [X0+8]
	205 Move X0, X20
	206 NotImplemented "Instruction BLR not yet implemented."
	207 NotImplemented "Instruction FCMP not yet implemented."
	208 Compare X19, 0
	209 JumpIfEqual {466}
	210 Move X8, 0x42A000
	211 Move X8, [X8+1888]
	212 Add X22, X19, 320
	213 Move X0, [X8]
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfNotEqual {218}
	217 Call 0x1C17DFC
	218 Move X0, X22
	219 Move X1, X31
	220 Call UIRVEShaderInfoAllocator.AllocColor, X0
	221 Move W22, 1
	222 Move [X23], X0
	223 Move X0, [X24]
	224 Add X23, X21, 400
	225 Move W8, [X0+224]
	226 Compare W8, 0
	227 JumpIfNotEqual {229}
	228 Call 0x1C17DFC
	229 Move X0, X23
	230 Move X1, X31
	231 Call BMPAlloc.IsValid, X0
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfEqual {278}
	236 Compare X20, 0
	237 JumpIfEqual {466}
	238 Move X10, 0x3E2000
	239 Move X8, [X20]
	240 Move X10, [X10+288]
	241 NotImplemented "Instruction LDRH not yet implemented."
	242 Move X1, [X10]
	243 Compare X9, 0
	244 JumpIfEqual {251}
	245 Move X10, [X8+176]
	246 Add X10, X10, 8
	247 NotImplemented "Instruction LDUR not yet implemented."
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Subtract X9, X9, 1
	250 Add X10, X10, 16
	251 Move W2, 12
	252 Move X0, X20
	253 Call 0x1C5D788
	254 Move W9, [X10]
	255 Add W9, W9, 12
	256 Add X8, X8, W9
	257 Add X0, X8, 312
	258 Move X8, [X0]
	259 Move X1, [X0+8]
	260 Move X0, X20
	261 NotImplemented "Instruction BLR not yet implemented."
	262 NotImplemented "Instruction FCMP not yet implemented."
	263 Compare X19, 0
	264 JumpIfEqual {466}
	265 Move X8, 0x42A000
	266 Move X8, [X8+1888]
	267 Add X22, X19, 320
	268 Move X0, [X8]
	269 Move W8, [X0+224]
	270 Compare W8, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Move X0, X22
	274 Move X1, X31
	275 Call UIRVEShaderInfoAllocator.AllocColor, X0
	276 Move W22, 1
	277 Move [X23], X0
	278 Move X0, [X24]
	279 Add X23, X21, 408
	280 Move W8, [X0+224]
	281 Compare W8, 0
	282 JumpIfNotEqual {284}
	283 Call 0x1C17DFC
	284 Move X0, X23
	285 Move X1, X31
	286 Call BMPAlloc.IsValid, X0
	287 Move TEMP, X0
	288 And TEMP, TEMP, 1
	289 Compare TEMP, 1
	290 JumpIfEqual {333}
	291 Compare X20, 0
	292 JumpIfEqual {466}
	293 Move X10, 0x3E2000
	294 Move X8, [X20]
	295 Move X10, [X10+288]
	296 NotImplemented "Instruction LDRH not yet implemented."
	297 Move X1, [X10]
	298 Compare X9, 0
	299 JumpIfEqual {306}
	300 Move X10, [X8+176]
	301 Add X10, X10, 8
	302 NotImplemented "Instruction LDUR not yet implemented."
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Subtract X9, X9, 1
	305 Add X10, X10, 16
	306 Move W2, 8
	307 Move X0, X20
	308 Call 0x1C5D788
	309 Move W9, [X10]
	310 Add W9, W9, 8
	311 Add X8, X8, W9
	312 Add X0, X8, 312
	313 Move X8, [X0]
	314 Move X1, [X0+8]
	315 Move X0, X20
	316 NotImplemented "Instruction BLR not yet implemented."
	317 NotImplemented "Instruction FCMP not yet implemented."
	318 Compare X19, 0
	319 JumpIfEqual {466}
	320 Move X8, 0x42A000
	321 Move X8, [X8+1888]
	322 Add X22, X19, 320
	323 Move X0, [X8]
	324 Move W8, [X0+224]
	325 Compare W8, 0
	326 JumpIfNotEqual {328}
	327 Call 0x1C17DFC
	328 Move X0, X22
	329 Move X1, X31
	330 Call UIRVEShaderInfoAllocator.AllocColor, X0
	331 Move W22, 1
	332 Move [X23], X0
	333 Move X0, [X24]
	334 Add X23, X21, 416
	335 Move W8, [X0+224]
	336 Compare W8, 0
	337 JumpIfNotEqual {339}
	338 Call 0x1C17DFC
	339 Move X0, X23
	340 Move X1, X31
	341 Call BMPAlloc.IsValid, X0
	342 Move TEMP, X0
	343 And TEMP, TEMP, 1
	344 Compare TEMP, 1
	345 JumpIfEqual {388}
	346 Compare X20, 0
	347 JumpIfEqual {466}
	348 Move X10, 0x3E2000
	349 Move X8, [X20]
	350 Move X10, [X10+288]
	351 NotImplemented "Instruction LDRH not yet implemented."
	352 Move X1, [X10]
	353 Compare X9, 0
	354 JumpIfEqual {361}
	355 Move X10, [X8+176]
	356 Add X10, X10, 8
	357 NotImplemented "Instruction LDUR not yet implemented."
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Subtract X9, X9, 1
	360 Add X10, X10, 16
	361 Move W2, 4
	362 Move X0, X20
	363 Call 0x1C5D788
	364 Move W9, [X10]
	365 Add W9, W9, 4
	366 Add X8, X8, W9
	367 Add X0, X8, 312
	368 Move X8, [X0]
	369 Move X1, [X0+8]
	370 Move X0, X20
	371 NotImplemented "Instruction BLR not yet implemented."
	372 NotImplemented "Instruction FCMP not yet implemented."
	373 Compare X19, 0
	374 JumpIfEqual {466}
	375 Move X8, 0x42A000
	376 Move X8, [X8+1888]
	377 Add X22, X19, 320
	378 Move X0, [X8]
	379 Move W8, [X0+224]
	380 Compare W8, 0
	381 JumpIfNotEqual {383}
	382 Call 0x1C17DFC
	383 Move X0, X22
	384 Move X1, X31
	385 Call UIRVEShaderInfoAllocator.AllocColor, X0
	386 Move W22, 1
	387 Move [X23], X0
	388 Move X0, [X24]
	389 Add X21, X21, 424
	390 Move W8, [X0+224]
	391 Compare W8, 0
	392 JumpIfNotEqual {394}
	393 Call 0x1C17DFC
	394 Move X0, X21
	395 Move X1, X31
	396 Call BMPAlloc.IsValid, X0
	397 Move TEMP, X0
	398 And TEMP, TEMP, 1
	399 Compare TEMP, 1
	400 JumpIfEqual {457}
	401 Compare X20, 0
	402 JumpIfEqual {466}
	403 Move X10, 0x3E2000
	404 Move X8, [X20]
	405 Move X10, [X10+288]
	406 NotImplemented "Instruction LDRH not yet implemented."
	407 Move X1, [X10]
	408 Compare X9, 0
	409 JumpIfEqual {416}
	410 Move X10, [X8+176]
	411 Add X10, X10, 8
	412 NotImplemented "Instruction LDUR not yet implemented."
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Subtract X9, X9, 1
	415 Add X10, X10, 16
	416 Move W2, 37
	417 Move X0, X20
	418 Call 0x1C5D788
	419 Move W9, [X10]
	420 Add W9, W9, 37
	421 Add X8, X8, W9
	422 Add X0, X8, 312
	423 Move X8, [X0]
	424 Move X1, [X0+8]
	425 Move X0, X20
	426 NotImplemented "Instruction BLR not yet implemented."
	427 Move S4, -1
	428 Move X8, -52760576
	429 Add S0, S0, S4
	430 Add S1, S1, S4
	431 Add S2, S2, S4
	432 Add S3, S3, S4
	433 Move V4, [X8+3872]
	434 Multiply S0, S0, S0
	435 Multiply S1, S1, S1
	436 Multiply S2, S2, S2
	437 Add S0, S0, S1
	438 Add S0, S2, S0
	439 Multiply S1, S3, S3
	440 Add S0, S1, S0
	441 NotImplemented "Instruction FCMP not yet implemented."
	442 Compare X19, 0
	443 JumpIfEqual {466}
	444 Move X8, 0x42A000
	445 Move X8, [X8+1888]
	446 Add X19, X19, 320
	447 Move X0, [X8]
	448 Move W8, [X0+224]
	449 Compare W8, 0
	450 JumpIfNotEqual {452}
	451 Call 0x1C17DFC
	452 Move X0, X19
	453 Move X1, X31
	454 Call UIRVEShaderInfoAllocator.AllocColor, X0
	455 Move W22, 1
	456 Move [X21], X0
	457 Move W0, W22
	458 Move X20, [X31+48]
	459 Move X19, [X31+56]
	460 Move X22, [X31+32]
	461 Move X21, [X31+40]
	462 Move X24, [X31+16]
	463 Move X23, [X31+24]
	464 Move X30, [X31+64]
	465 Return X0
	466 Call 0x1C17F20

Method: System.Void SetColorValues(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D3BF44 STR S10, [X31 + 0x80]
	0x03D3BF48 STR W8, [X31 + 0x8C]
	0x03D3BF4C BL 0x3D2C774
	0x03D3BF50 STR X0, [X19 + 0x170]
	0x03D3BF54 B 0x3D3BF64
	0x03D3BF58 MOV W0, W31
	0x03D3BF5C B 0x3D3C1A0
	0x03D3BF60 TBZ X21, 0x0, 0x3D3C174
	0x03D3BF64 LDR X0, [X19 + 0x170]
	0x03D3BF68 MOV X1, X31
	0x03D3BF6C BL 0x3D2795C
	0x03D3BF70 TBZ X0, 0x0, 0x3D3C19C
	0x03D3BF74 MOV X0, X19
	0x03D3BF78 MOV X1, X31
	0x03D3BF7C BL 0x3DEC0CC
	0x03D3BF80 CBZ X0, 0x3D3C1C8
	0x03D3BF84 ADRP X23, 0x3E1000
	0x03D3BF88 LDR X8, [X0]
	0x03D3BF8C LDR X23, [X23 + 0xE80]
	0x03D3BF90 MOV X21, X0
	0x03D3BF94 LDRH W9, [X8 + 0x12E]
	0x03D3BF98 LDR X1, [X23]
	0x03D3BF9C CBZ X9, 0x3D3BFC0
	0x03D3BFA0 LDR X10, [X8 + 0xB0]
	0x03D3BFA4 ADD X10, X10, 0x8
	0x03D3BFA8 LDUR X11, [X10 - 0x8]
	0x03D3BFAC CMP X11, X1
	0x03D3BFB0 B.EQ 0x3D3BFD0
	0x03D3BFB4 SUBS X9, X9, 0x1
	0x03D3BFB8 ADD X10, X10, 0x10
	0x03D3BFBC B.NE 0x3D3BFA8
	0x03D3BFC0 MOVZ W2, 0x2
	0x03D3BFC4 MOV X0, X21
	0x03D3BFC8 BL 0x1C5C788
	0x03D3BFCC B 0x3D3BFE0
	0x03D3BFD0 LDR W9, [X10]
	0x03D3BFD4 ADD W9, W9, 0x2
	0x03D3BFD8 ADD X8, X8, W9, 0x4, SXTW
	0x03D3BFDC ADD X0, X8, 0x138
	0x03D3BFE0 LDP X8, X1, [X0]
	0x03D3BFE4 MOV X0, X21
	0x03D3BFE8 BLR X8
	0x03D3BFEC CMP W0, 0x1
	0x03D3BFF0 B.NE 0x3D3C068
	0x03D3BFF4 ADRP X21, 0x3E1000
	0x03D3BFF8 LDR X21, [X21 + 0xE98]
	0x03D3BFFC LDR X0, [X21]
	0x03D3C000 LDR W8, [X0 + 0xE0]
	0x03D3C004 CBNZ W8, 0x3D3C010
	0x03D3C008 BL 0x1C16DFC
	0x03D3C00C LDR X0, [X21]
	0x03D3C010 LDR X8, [X0 + 0xB8]
	0x03D3C014 LDR V4, [X31 + 0x12C]
	0x03D3C018 LDP S0, S1, [X8 + 0x18]
	0x03D3C01C LDP S2, S3, [X8 + 0x20]
	0x03D3C020 FMUL S4, S4, S0
	0x03D3C024 STR S4, [X31 + 0x12C]
	0x03D3C028 LDR V4, [X31 + 0x128]
	0x03D3C02C FMUL S12, S12, S0
	0x03D3C030 FMUL S13, S13, S1
	0x03D3C034 FMUL S14, S14, S2
	0x03D3C038 FMUL S4, S4, S1
	0x03D3C03C STR S4, [X31 + 0x128]
	0x03D3C040 LDR V4, [X31 + 0xC]
	0x03D3C044 FMUL S15, S15, S3
	0x03D3C048 FMUL S11, S11, S0
	0x03D3C04C FMUL S8, S8, S1
	0x03D3C050 FMUL S5, S4, S2
	0x03D3C054 LDR V4, [X31 + 0x8]
	0x03D3C058 FMUL S9, S9, S2
	0x03D3C05C FMUL S10, S10, S3
	0x03D3C060 FMUL S4, S4, S3
	0x03D3C064 STP S4, S5, [X31 + 0x8]
	0x03D3C068 CBZ X20, 0x3D3C1C8
	0x03D3C06C LDR X8, [X31 + 0xD0]
	0x03D3C070 LDR W9, [X31 + 0xD8]
	0x03D3C074 LDR X21, [X19 + 0x170]
	0x03D3C078 MOV X0, X19
	0x03D3C07C MOV X1, X31
	0x03D3C080 STR X8, [X31 + 0x90]
	0x03D3C084 STR W9, [X31 + 0x98]
	0x03D3C088 BL 0x3DEC0CC
	0x03D3C08C CBZ X0, 0x3D3C1C8
	0x03D3C090 LDR X8, [X0]
	0x03D3C094 LDR X1, [X23]
	0x03D3C098 MOV X22, X0
	0x03D3C09C ADD X19, X20, 0x140
	0x03D3C0A0 LDRH W9, [X8 + 0x12E]
	0x03D3C0A4 CBZ X9, 0x3D3C0C8
	0x03D3C0A8 LDR X10, [X8 + 0xB0]
	0x03D3C0AC ADD X10, X10, 0x8
	0x03D3C0B0 LDUR X11, [X10 - 0x8]
	0x03D3C0B4 CMP X11, X1
	0x03D3C0B8 B.EQ 0x3D3C0D8
	0x03D3C0BC SUBS X9, X9, 0x1
	0x03D3C0C0 ADD X10, X10, 0x10
	0x03D3C0C4 B.NE 0x3D3C0B0
	0x03D3C0C8 MOVZ W2, 0x2
	0x03D3C0CC MOV X0, X22
	0x03D3C0D0 BL 0x1C5C788
	0x03D3C0D4 B 0x3D3C0E8
	0x03D3C0D8 LDR W9, [X10]
	0x03D3C0DC ADD W9, W9, 0x2
	0x03D3C0E0 ADD X8, X8, W9, 0x4, SXTW
	0x03D3C0E4 ADD X0, X8, 0x138
	0x03D3C0E8 LDP X8, X1, [X0]
	0x03D3C0EC MOV X0, X22
	0x03D3C0F0 BLR X8
	0x03D3C0F4 ADRP X8, 0x428000
	0x03D3C0F8 LDR X8, [X8 + 0x760]
	0x03D3C0FC MOV W20, W0
	0x03D3C100 LDR X8, [X8]
	0x03D3C104 LDR W9, [X8 + 0xE0]
	0x03D3C108 CBNZ W9, 0x3D3C114
	0x03D3C10C MOV X0, X8
	0x03D3C110 BL 0x1C16DFC
	0x03D3C114 LDR V1, [X31 + 0x12C]
	0x03D3C118 LDR V0, [X31 + 0x128]
	0x03D3C11C LDR X8, [X31 + 0x90]
	0x03D3C120 LDR W9, [X31 + 0x98]
	0x03D3C124 CMP W20, 0x1
	0x03D3C128 STP S1, S0, [X31 + 0x10]
	0x03D3C12C LDR V1, [X31 + 0xC]
	0x03D3C130 LDR V0, [X31 + 0x8]
	0x03D3C134 CSET W3, EQ
	0x03D3C138 ADD X2, X31, 0x10
	0x03D3C13C MOV X0, X19
	0x03D3C140 STP S1, S0, [X31 + 0x18]
	0x03D3C144 LDR V0, [X31 + 0x4]
	0x03D3C148 MOV X1, X21
	0x03D3C14C MOV X4, X31
	0x03D3C150 STP S12, S13, [X31 + 0x20]
	0x03D3C154 STP S14, S15, [X31 + 0x28]
	0x03D3C158 STP S0, S11, [X31 + 0x30]
	0x03D3C15C STP S8, S9, [X31 + 0x38]
	0x03D3C160 STR S10, [X31 + 0x40]
	0x03D3C164 STUR X8, [X31 + 0x44]
	0x03D3C168 STR W9, [X31 + 0x4C]
	0x03D3C16C BL 0x3D2C10C
	0x03D3C170 B 0x3D3C19C
	0x03D3C174 ADRP X20, 0x428000
	0x03D3C178 LDR X20, [X20 + 0x760]
	0x03D3C17C LDR X0, [X20]
	0x03D3C180 LDR W8, [X0 + 0xE0]
	0x03D3C184 CBNZ W8, 0x3D3C190
	0x03D3C188 BL 0x1C16DFC
	0x03D3C18C LDR X0, [X20]
	0x03D3C190 LDR X8, [X0 + 0xB8]
	0x03D3C194 LDR X8, [X8 + 0x128]
	0x03D3C198 STR X8, [X19 + 0x170]
	0x03D3C19C MOVZ W0, 0x1
	0x03D3C1A0 LDP X20, X19, [X31 + 0x150]
	0x03D3C1A4 LDP X22, X21, [X31 + 0x140]
	0x03D3C1A8 LDP X30, X23, [X31 + 0x130]
	0x03D3C1AC LDR X29, [X31 + 0x120]
	0x03D3C1B0 LDP D9, D8, [X31 + 0x110]
	0x03D3C1B4 LDP D11, D10, [X31 + 0x100]
	0x03D3C1B8 LDP D13, D12, [X31 + 0xF0]
	0x03D3C1BC LDP D15, D14, [X31 + 0xE0]
	0x03D3C1C0 ADD X31, X31, 0x160
	0x03D3C1C4 RET
	0x03D3C1C8 BL 0x1C16F20
	0x03D3C1CC STR D10, [X31 - 0x40]!
	0x03D3C1D0 STP D9, D8, [X31 + 0x10]
	0x03D3C1D4 STP X30, X21, [X31 + 0x20]
	0x03D3C1D8 STP X20, X19, [X31 + 0x30]
	0x03D3C1DC ADRP X20, 0x6AB000
	0x03D3C1E0 LDRB W8, [X20 + 0xB6E]
	0x03D3C1E4 MOV X19, X0
	0x03D3C1E8 TBNZ X8, 0x0, 0x3D3C20C
	0x03D3C1EC ADRP X0, 0x3E1000
	0x03D3C1F0 LDR X0, [X0 + 0x688]
	0x03D3C1F4 BL 0x1C16CF4
	0x03D3C1F8 ADRP X0, 0x3B7000
	0x03D3C1FC LDR X0, [X0 + 0x5A8]
	0x03D3C200 BL 0x1C16CF4
	0x03D3C204 MOVZ W8, 0x1
	0x03D3C208 STRB W8, [X20 + 0xB6E]
	0x03D3C20C STR X31, [X31 + 0x8]
	0x03D3C210 CBZ X19, 0x3D3C388
	0x03D3C214 MOV X0, X19
	0x03D3C218 MOV X1, X31
	0x03D3C21C BL 0x3DEC1BC
	0x03D3C220 CBZ X0, 0x3D3C388
	0x03D3C224 ADRP X21, 0x3E1000
	0x03D3C228 LDR X8, [X0]
	0x03D3C22C LDR X21, [X21 + 0x688]
	0x03D3C230 MOV X20, X0
	0x03D3C234 LDRH W9, [X8 + 0x12E]
	0x03D3C238 LDR X1, [X21]
	0x03D3C23C CBZ X9, 0x3D3C260
	0x03D3C240 LDR X10, [X8 + 0xB0]
	0x03D3C244 ADD X10, X10, 0x8
	0x03D3C248 LDUR X11, [X10 - 0x8]
	0x03D3C24C CMP X11, X1
	0x03D3C250 B.EQ 0x3D3C270
	0x03D3C254 SUBS X9, X9, 0x1
	0x03D3C258 ADD X10, X10, 0x10
	0x03D3C25C B.NE 0x3D3C248
	0x03D3C260 MOVZ W2, 0x2
	0x03D3C264 MOV X0, X20
	0x03D3C268 BL 0x1C5C788
	0x03D3C26C B 0x3D3C280
	0x03D3C270 LDR W9, [X10]
	0x03D3C274 ADD W9, W9, 0x2
	0x03D3C278 ADD X8, X8, W9, 0x4, SXTW
	0x03D3C27C ADD X0, X8, 0x138
	0x03D3C280 LDP X8, X1, [X0]
	0x03D3C284 MOV X0, X20
	0x03D3C288 BLR X8
	0x03D3C28C MOV X0, X19
	0x03D3C290 MOV X1, X31
	0x03D3C294 MOV V8.16B, V0.16B
	0x03D3C298 BL 0x3DEC1BC
	0x03D3C29C CBZ X0, 0x3D3C388
	0x03D3C2A0 LDR X8, [X0]
	0x03D3C2A4 LDR X1, [X21]
	0x03D3C2A8 ADRP X21, 0x3B7000
	0x03D3C2AC MOV X20, X0
	0x03D3C2B0 LDRH W9, [X8 + 0x12E]
	0x03D3C2B4 LDR X21, [X21 + 0x5A8]
	0x03D3C2B8 CBZ X9, 0x3D3C2DC
	0x03D3C2BC LDR X10, [X8 + 0xB0]
	0x03D3C2C0 ADD X10, X10, 0x8
	0x03D3C2C4 LDUR X11, [X10 - 0x8]
	0x03D3C2C8 CMP X11, X1
	0x03D3C2CC B.EQ 0x3D3C2EC
	0x03D3C2D0 SUBS X9, X9, 0x1
	0x03D3C2D4 ADD X10, X10, 0x10
	0x03D3C2D8 B.NE 0x3D3C2C4
	0x03D3C2DC MOVZ W2, 0x2
	0x03D3C2E0 MOV X0, X20
	0x03D3C2E4 BL 0x1C5C788
	0x03D3C2E8 B 0x3D3C2FC
	0x03D3C2EC LDR W9, [X10]
	0x03D3C2F0 ADD W9, W9, 0x2
	0x03D3C2F4 ADD X8, X8, W9, 0x4, SXTW
	0x03D3C2F8 ADD X0, X8, 0x138
	0x03D3C2FC LDP X8, X1, [X0]
	0x03D3C300 MOV X0, X20
	0x03D3C304 BLR X8
	0x03D3C308 LDR X0, [X21]
	0x03D3C30C MOV V9.16B, V1.16B
	0x03D3C310 LDR W8, [X0 + 0xE0]
	0x03D3C314 CBNZ W8, 0x3D3C31C
	0x03D3C318 BL 0x1C16DFC
	0x03D3C31C ADRP X8, 0xFFFFFFFFFCDAE000
	0x03D3C320 LDR V10, [X8 + 0x410]
	0x03D3C324 FMUL S0, S8, S9
	0x03D3C328 LDR X8, [X19 + 0x378]
	0x03D3C32C FABS S8, S0
	0x03D3C330 FCMP S8, S10
	0x03D3C334 CSET W9, MI
	0x03D3C338 ADD X0, X31, 0x8
	0x03D3C33C MOV X1, X31
	0x03D3C340 STRB W9, [X19 + 0xEB]
	0x03D3C344 STR X8, [X31 + 0x8]
	0x03D3C348 BL 0x3DF88DC
	0x03D3C34C CBZ X0, 0x3D3C358
	0x03D3C350 LDRB W8, [X0 + 0xED]
	0x03D3C354 B 0x3D3C35C
	0x03D3C358 MOV W8, W31
	0x03D3C35C FCMP S8, S10
	0x03D3C360 CSET W9, MI
	0x03D3C364 ORR W8, W8, W9, 0x0
	0x03D3C368 CMP W8, 0x0
	0x03D3C36C CSET W8, NE
	0x03D3C370 STRB W8, [X19 + 0xED]
	0x03D3C374 LDP X20, X19, [X31 + 0x30]
	0x03D3C378 LDP X30, X21, [X31 + 0x20]
	0x03D3C37C LDP D9, D8, [X31 + 0x10]
	0x03D3C380 LDR V10, [X31], #0x40
	0x03D3C384 RET
	0x03D3C388 BL 0x1C16F20
	0x03D3C38C STR X30, [X31 - 0x20]!
	0x03D3C390 STP X20, X19, [X31 + 0x10]
	0x03D3C394 CBZ X0, 0x3D3C3DC
	0x03D3C398 LDR X8, [X0 + 0x378]
	0x03D3C39C LDRB W20, [X0 + 0xEA]
	0x03D3C3A0 MOV X19, X0
	0x03D3C3A4 ADD X0, X31, 0x8
	0x03D3C3A8 MOV X1, X31
	0x03D3C3AC STR X8, [X31 + 0x8]
	0x03D3C3B0 BL 0x3DF88DC
	0x03D3C3B4 CBZ X0, 0x3D3C3C0
	0x03D3C3B8 LDRB W8, [X0 + 0xEC]
	0x03D3C3BC B 0x3D3C3C4
	0x03D3C3C0 MOV W8, W31
	0x03D3C3C4 CMP W8, W20
	0x03D3C3C8 CSET W8, NE
	0x03D3C3CC STRB W8, [X19 + 0xEC]
	0x03D3C3D0 LDP X20, X19, [X31 + 0x10]
	0x03D3C3D4 LDR X30, [X31], #0x20
	0x03D3C3D8 RET
	0x03D3C3DC BL 0x1C16F20
	0x03D3C3E0 SUB X31, X31, 0x60
	0x03D3C3E4 STP D9, D8, [X31 + 0x40]
	0x03D3C3E8 STP X30, X19, [X31 + 0x50]
	0x03D3C3EC ADD X8, X31, 0x0
	0x03D3C3F0 MOV X1, X31
	0x03D3C3F4 BL 0x3E0F2A8
	0x03D3C3F8 LDR V0, [X31 + 0x20]
	0x03D3C3FC FCMP S0, 0x0
	0x03D3C400 B.NE 0x3D3C46C
	0x03D3C404 ADRP X19, 0x69D000
	0x03D3C408 LDUR V8, [X31 + 0x34]
	0x03D3C40C LDRB W8, [X19 + 0x78F]
	0x03D3C410 LDR V9, [X31 + 0x3C]
	0x03D3C414 CBNZ W8, 0x3D3C42C
	0x03D3C418 ADRP X0, 0x3BF000
	0x03D3C41C LDR X0, [X0 + 0xF08]
	0x03D3C420 BL 0x1C16CF4
	0x03D3C424 MOVZ W8, 0x1
	0x03D3C428 STRB W8, [X19 + 0x78F]
	0x03D3C42C FCMP S9, 0x0
	0x03D3C430 B.NE 0x3D3C46C
	0x03D3C434 ADRP X8, 0x3BF000
	0x03D3C438 LDR X8, [X8 + 0xF08]
	0x03D3C43C LDR X8, [X8]
	0x03D3C440 LDR X8, [X8 + 0xB8]
	0x03D3C444 LDR V0, [X8]
	0x03D3C448 ADRP X8, 0xFFFFFFFFFCDAD000
	0x03D3C44C LDR V1, [X8 + 0xF20]
	0x03D3C450 FSUB V0.2S, V8.2S, V0.2S
	0x00000000 INVALID
	0x03D3C458 FADDP S0, V0.2S
	0x03D3C45C FCMP S0, S1
	0x03D3C460 B.PL 0x3D3C46C
	0x03D3C464 MOV W0, W31
	0x03D3C468 B 0x3D3C470
	0x03D3C46C MOVZ W0, 0x1
	0x03D3C470 LDP X30, X19, [X31 + 0x50]
	0x03D3C474 LDP D9, D8, [X31 + 0x40]
	0x03D3C478 ADD X31, X31, 0x60
	0x03D3C47C RET
	0x03D3C480 STR X30, [X31 - 0x20]!
	0x03D3C484 STP X20, X19, [X31 + 0x10]
	0x03D3C488 ADRP X19, 0x6AB000
	0x03D3C48C ADRP X20, 0x428000
	0x03D3C490 LDRB W8, [X19 + 0xB71]
	0x03D3C494 LDR X20, [X20 + 0x778]
	0x03D3C498 TBNZ X8, 0x0, 0x3D3C4B0
	0x03D3C49C ADRP X0, 0x428000
	0x03D3C4A0 LDR X0, [X0 + 0x778]
	0x03D3C4A4 BL 0x1C16CF4
	0x03D3C4A8 MOVZ W8, 0x1
	0x03D3C4AC STRB W8, [X19 + 0xB71]
	0x03D3C4B0 LDR X8, [X20]
	0x03D3C4B4 LDP X20, X19, [X31 + 0x10]
	0x03D3C4B8 MOVZ W9, 0x4260
	0x03D3C4BC MOVK W9, 0xDA20000
	0x03D3C4C0 LDR X8, [X8 + 0xB8]
	0x03D3C4C4 STR W9, [X8]
	0x03D3C4C8 LDR X30, [X31], #0x20
	0x03D3C4CC RET
	0x03D3C4D0 STP X30, X21, [X31 - 0x20]!
	0x03D3C4D4 STP X20, X19, [X31 + 0x10]
	0x03D3C4D8 ADRP X20, 0x6AB000
	0x03D3C4DC LDRB W8, [X20 + 0xB72]
	0x03D3C4E0 MOV X19, X0
	0x03D3C4E4 TBNZ X8, 0x0, 0x3D3C520
	0x03D3C4E8 ADRP X0, 0x429000
	0x03D3C4EC LDR X0, [X0 + 0x1B8]
	0x03D3C4F0 BL 0x1C16CF4
	0x03D3C4F4 ADRP X0, 0x429000
	0x03D3C4F8 LDR X0, [X0 + 0x1C0]
	0x03D3C4FC BL 0x1C16CF4
	0x03D3C500 ADRP X0, 0x429000
	0x03D3C504 LDR X0, [X0 + 0x1C8]
	0x03D3C508 BL 0x1C16CF4
	0x03D3C50C ADRP X0, 0x429000
	0x03D3C510 LDR X0, [X0 + 0x1D0]
	0x03D3C514 BL 0x1C16CF4
	0x03D3C518 MOVZ W8, 0x1
	0x03D3C51C STRB W8, [X20 + 0xB72]
	0x03D3C520 LDR X20, [X19 + 0xE0]
	0x03D3C524 CBZ X20, 0x3D3C5DC
	0x03D3C528 LDR W8, [X19 + 0xE8]
	0x03D3C52C LDR W9, [X20 + 0x18]
	0x03D3C530 CMP W8, W9
	0x03D3C534 B.NE 0x3D3C5B0
	0x03D3C538 ADRP X8, 0x429000
	0x03D3C53C LDR X8, [X8 + 0x1D0]
	0x03D3C540 LDR X0, [X8]
	0x03D3C544 BL 0x1C16F10
	0x03D3C548 MOV X1, X31
	0x03D3C54C MOV X21, X0
	0x03D3C550 BL 0x3DC37E8
	0x03D3C554 ADRP X9, 0x429000
	0x03D3C558 LDR X9, [X9 + 0x1B8]
	0x03D3C55C LDR W10, [X20 + 0x1C]
	0x03D3C560 LDR X8, [X20 + 0x10]
	0x03D3C564 LDR X9, [X9]
	0x03D3C568 ADD W10, W10, 0x1
	0x03D3C56C STR W10, [X20 + 0x1C]
	0x03D3C570 CBZ X8, 0x3D3C5DC
	0x03D3C574 LDRSW X10, [X20 + 0x18]
	0x03D3C578 LDR W11, [X8 + 0x18]
	0x03D3C57C CMP W10, W11
	0x03D3C580 B.CS 0x3D3C598
	0x03D3C584 ADD W9, W10, 0x1
	0x03D3C588 ADD X8, X8, X10, 0x3, LSL
	0x03D3C58C STR W9, [X20 + 0x18]
	0x03D3C590 STR X21, [X8 + 0x20]
	0x03D3C594 B 0x3D3C5B0
	0x03D3C598 LDR X8, [X9 + 0x20]
	0x03D3C59C MOV X0, X20
	0x03D3C5A0 MOV X1, X21
	0x03D3C5A4 LDR X8, [X8 + 0xC0]
	0x03D3C5A8 LDR X2, [X8 + 0x70]
	0x03D3C5AC BL 0x301BF90
	0x03D3C5B0 LDR W1, [X19 + 0xE8]
	0x03D3C5B4 LDR X0, [X19 + 0xE0]
	0x03D3C5B8 ADD W8, W1, 0x1
	0x03D3C5BC STR W8, [X19 + 0xE8]
	0x03D3C5C0 CBZ X0, 0x3D3C5DC
	0x03D3C5C4 ADRP X8, 0x429000
	0x03D3C5C8 LDR X8, [X8 + 0x1C8]
	0x03D3C5CC LDP X20, X19, [X31 + 0x10]
	0x03D3C5D0 LDR X2, [X8]
	0x03D3C5D4 LDP X30, X21, [X31], #0x20
	0x03D3C5D8 B 0x301BCCC
	0x03D3C5DC BL 0x1C16F20
	0x03D3C5E0 STR X30, [X31 - 0x30]!
	0x03D3C5E4 STP X22, X21, [X31 + 0x10]
	0x03D3C5E8 STP X20, X19, [X31 + 0x20]
	0x03D3C5EC ADRP X22, 0x6AB000
	0x03D3C5F0 LDRB W8, [X22 + 0xB73]
	0x03D3C5F4 MOV W20, W2
	0x03D3C5F8 MOV W21, W1
	0x03D3C5FC MOV X19, X0
	0x03D3C600 TBNZ X8, 0x0, 0x3D3C624
	0x03D3C604 ADRP X0, 0x429000
	0x03D3C608 LDR X0, [X0 + 0x1D8]
	0x03D3C60C BL 0x1C16CF4
	0x03D3C610 ADRP X0, 0x429000
	0x03D3C614 LDR X0, [X0 + 0x1E0]
	0x03D3C618 BL 0x1C16CF4
	0x03D3C61C MOVZ W8, 0x1
	0x03D3C620 STRB W8, [X22 + 0xB73]
	0x03D3C624 LDR X0, [X19 + 0xD0]
	0x03D3C628 CBZ X0, 0x3D3C69C
	0x03D3C62C ADRP X8, 0x429000
	0x03D3C630 LDR X8, [X8 + 0x1D8]
	0x03D3C634 MOV W1, W21
	0x03D3C638 LDR X2, [X8]
	0x03D3C63C BL 0x26AEF1C
	0x03D3C640 MOV X8, X0
	0x03D3C644 LDR X0, [X19 + 0xD8]
	0x03D3C648 STP X8, X1, [X19 + 0x30]
	0x03D3C64C CBZ X0, 0x3D3C69C
	0x03D3C650 ADRP X8, 0x429000
	0x03D3C654 LDR X8, [X8 + 0x1E0]
	0x03D3C658 MOV W1, W20
	0x03D3C65C LDR X2, [X8]
	0x03D3C660 BL 0x26AE878
	0x03D3C664 STP X0, X1, [X19 + 0x40]
	0x03D3C668 MOV X0, X19
	0x03D3C66C BL 0x3D3C4D0
	0x03D3C670 CBZ X0, 0x3D3C69C
	0x03D3C674 LDP X3, X4, [X19 + 0x40]
	0x03D3C678 LDP X1, X2, [X19 + 0x30]
	0x03D3C67C MOV X5, X31
	0x03D3C680 MOV X20, X0
	0x03D3C684 BL 0x3DC3B20
	0x03D3C688 MOV X0, X20
	0x03D3C68C LDP X20, X19, [X31 + 0x20]
	0x03D3C690 LDP X22, X21, [X31 + 0x10]
	0x03D3C694 LDR X30, [X31], #0x30
	0x03D3C698 RET
	0x03D3C69C BL 0x1C16F20
	0x03D3C6A0 LDR X8, [X3 + 0x8]
	0x03D3C6A4 LDR X4, [X3 + 0x18]
	0x03D3C6A8 LDR W5, [X3 + 0x20]
	0x03D3C6AC MOV X3, X8
	0x03D3C6B0 B 0x3D3C6B4
	0x03D3C6B4 SUB X31, X31, 0x1A0
	0x03D3C6B8 STP D11, D10, [X31 + 0x120]
	0x03D3C6BC STP D9, D8, [X31 + 0x130]
	0x03D3C6C0 STP X29, X30, [X31 + 0x140]
	0x03D3C6C4 STP X28, X27, [X31 + 0x150]
	0x03D3C6C8 STP X26, X25, [X31 + 0x160]

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x6AD000
	014 Move W8, [X20+2928]
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x42A000
	022 Move X0, [X0+2504]
	023 Call 0x1C17CF4
	024 Move X0, 0x3E2000
	025 Move X0, [X0+3712]
	026 Call 0x1C17CF4
	027 Move X0, 0x3E2000
	028 Move X0, [X0+288]
	029 Call 0x1C17CF4
	030 Move X0, 0x42A000
	031 Move X0, [X0+1888]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+2928], W8
	035 Compare X21, 0
	036 JumpIfEqual {547}
	037 Move X0, X21
	038 Move X1, X31
	039 Call VisualElement.get_panel, X0
	040 Compare X0, 0
	041 JumpIfEqual {547}
	042 Move X10, 0x3E2000
	043 Move X8, [X0]
	044 Move X10, [X10+3712]
	045 Move X25, 0x42A000
	046 Move X20, X0
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Move X25, [X25+2504]
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move W2, 2
	059 Move X0, X20
	060 Call 0x1C5D788
	061 Move W9, [X10]
	062 Add W9, W9, 2
	063 Add X8, X8, W9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X1, [X0+8]
	067 Move X0, X20
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move W20, W0
	070 Move X0, X21
	071 Move X1, X31
	072 Call VisualElement.get_resolvedStyle, X0
	073 Move X22, X0
	074 Move X0, [X25]
	075 Add X23, X21, 376
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X23
	081 Move X1, X31
	082 Call BMPAlloc.IsValid, X0
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {138}
	087 Compare X19, 0
	088 JumpIfEqual {547}
	089 Compare X22, 0
	090 JumpIfEqual {547}
	091 Move X10, 0x3E1000
	092 Move X8, [X22]
	093 Move X23, [X23]
	094 Move X10, [X10+288]
	095 Add X24, X19, 320
	096 NotImplemented "Instruction LDRH not yet implemented."
	097 Move X1, [X10]
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move W2, 14
	107 Move X0, X22
	108 Call 0x1C5D788
	109 Move W9, [X10]
	110 Add W9, W9, 14
	111 Add X8, X8, W9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X1, [X0+8]
	115 Move X0, X22
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X8, 0x429000
	118 Move X8, [X8+1888]
	119 Move V8, V0
	120 Move V9, V1
	121 Move V10, V2
	122 Move X0, [X8]
	123 Move V11, V3
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction CSET not yet implemented."
	130 Move X0, X24
	131 Move X1, X23
	132 Move V0, V8
	133 Move V1, V9
	134 Move V2, V10
	135 Move V3, V11
	136 Move X3, X31
	137 Call UIRVEShaderInfoAllocator.SetColorValue, X0, X1, X2, X3
	138 Move X0, [X25]
	139 Add X23, X21, 384
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move X0, X23
	145 Move X1, X31
	146 Call BMPAlloc.IsValid, X0
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {201}
	151 Compare X19, 0
	152 JumpIfEqual {547}
	153 Compare X22, 0
	154 JumpIfEqual {547}
	155 Move X10, 0x3E1000
	156 Move X8, [X22]
	157 Move X23, [X23]
	158 Move X10, [X10+288]
	159 Add X24, X19, 320
	160 NotImplemented "Instruction LDRH not yet implemented."
	161 Move X1, [X10]
	162 Compare X9, 0
	163 JumpIfEqual {170}
	164 Move X10, [X8+176]
	165 Add X10, X10, 8
	166 NotImplemented "Instruction LDUR not yet implemented."
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Subtract X9, X9, 1
	169 Add X10, X10, 16
	170 Move X0, X22
	171 Move W2, W31
	172 Call 0x1C5D788
	173 NotImplemented "Instruction LDRSW not yet implemented."
	174 Add X8, X8, X9
	175 Add X0, X8, 312
	176 Move X8, [X0]
	177 Move X1, [X0+8]
	178 Move X0, X22
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Move X8, 0x429000
	181 Move X8, [X8+1888]
	182 Move V8, V0
	183 Move V9, V1
	184 Move V10, V2
	185 Move X0, [X8]
	186 Move V11, V3
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {191}
	190 Call 0x1C17DFC
	191 NotImplemented "Instruction CMP not yet implemented."
	192 NotImplemented "Instruction CSET not yet implemented."
	193 Move X0, X24
	194 Move X1, X23
	195 Move V0, V8
	196 Move V1, V9
	197 Move V2, V10
	198 Move V3, V11
	199 Move X3, X31
	200 Call UIRVEShaderInfoAllocator.SetColorValue, X0, X1, X2, X3
	201 Move X0, [X25]
	202 Add X23, X21, 392
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X0, X23
	208 Move X1, X31
	209 Call BMPAlloc.IsValid, X0
	210 Move TEMP, X0
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfNotEqual {265}
	214 Compare X19, 0
	215 JumpIfEqual {547}
	216 Compare X22, 0
	217 JumpIfEqual {547}
	218 Move X10, 0x3E1000
	219 Move X8, [X22]
	220 Move X23, [X23]
	221 Move X10, [X10+288]
	222 Add X24, X19, 320
	223 NotImplemented "Instruction LDRH not yet implemented."
	224 Move X1, [X10]
	225 Compare X9, 0
	226 JumpIfEqual {233}
	227 Move X10, [X8+176]
	228 Add X10, X10, 8
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Subtract X9, X9, 1
	232 Add X10, X10, 16
	233 Move W2, 5
	234 Move X0, X22
	235 Call 0x1C5D788
	236 Move W9, [X10]
	237 Add W9, W9, 5
	238 Add X8, X8, W9
	239 Add X0, X8, 312
	240 Move X8, [X0]
	241 Move X1, [X0+8]
	242 Move X0, X22
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Move X8, 0x429000
	245 Move X8, [X8+1888]
	246 Move V8, V0
	247 Move V9, V1
	248 Move V10, V2
	249 Move X0, [X8]
	250 Move V11, V3
	251 Move W8, [X0+224]
	252 Compare W8, 0
	253 JumpIfNotEqual {255}
	254 Call 0x1C17DFC
	255 NotImplemented "Instruction CMP not yet implemented."
	256 NotImplemented "Instruction CSET not yet implemented."
	257 Move X0, X24
	258 Move X1, X23
	259 Move V0, V8
	260 Move V1, V9
	261 Move V2, V10
	262 Move V3, V11
	263 Move X3, X31
	264 Call UIRVEShaderInfoAllocator.SetColorValue, X0, X1, X2, X3
	265 Move X0, [X25]
	266 Add X23, X21, 400
	267 Move W8, [X0+224]
	268 Compare W8, 0
	269 JumpIfNotEqual {271}
	270 Call 0x1C17DFC
	271 Move X0, X23
	272 Move X1, X31
	273 Call BMPAlloc.IsValid, X0
	274 Move TEMP, X0
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfNotEqual {329}
	278 Compare X19, 0
	279 JumpIfEqual {547}
	280 Compare X22, 0
	281 JumpIfEqual {547}
	282 Move X10, 0x3E1000
	283 Move X8, [X22]
	284 Move X23, [X23]
	285 Move X10, [X10+288]
	286 Add X24, X19, 320
	287 NotImplemented "Instruction LDRH not yet implemented."
	288 Move X1, [X10]
	289 Compare X9, 0
	290 JumpIfEqual {297}
	291 Move X10, [X8+176]
	292 Add X10, X10, 8
	293 NotImplemented "Instruction LDUR not yet implemented."
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Subtract X9, X9, 1
	296 Add X10, X10, 16
	297 Move W2, 9
	298 Move X0, X22
	299 Call 0x1C5D788
	300 Move W9, [X10]
	301 Add W9, W9, 9
	302 Add X8, X8, W9
	303 Add X0, X8, 312
	304 Move X8, [X0]
	305 Move X1, [X0+8]
	306 Move X0, X22
	307 NotImplemented "Instruction BLR not yet implemented."
	308 Move X8, 0x429000
	309 Move X8, [X8+1888]
	310 Move V8, V0
	311 Move V9, V1
	312 Move V10, V2
	313 Move X0, [X8]
	314 Move V11, V3
	315 Move W8, [X0+224]
	316 Compare W8, 0
	317 JumpIfNotEqual {319}
	318 Call 0x1C17DFC
	319 NotImplemented "Instruction CMP not yet implemented."
	320 NotImplemented "Instruction CSET not yet implemented."
	321 Move X0, X24
	322 Move X1, X23
	323 Move V0, V8
	324 Move V1, V9
	325 Move V2, V10
	326 Move V3, V11
	327 Move X3, X31
	328 Call UIRVEShaderInfoAllocator.SetColorValue, X0, X1, X2, X3
	329 Move X0, [X25]
	330 Add X23, X21, 408
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X0, X23
	336 Move X1, X31
	337 Call BMPAlloc.IsValid, X0
	338 Move TEMP, X0
	339 And TEMP, TEMP, 1
	340 Compare TEMP, 1
	341 JumpIfNotEqual {393}
	342 Compare X19, 0
	343 JumpIfEqual {547}
	344 Compare X22, 0
	345 JumpIfEqual {547}
	346 Move X10, 0x3E1000
	347 Move X8, [X22]
	348 Move X23, [X23]
	349 Move X10, [X10+288]
	350 Add X24, X19, 320
	351 NotImplemented "Instruction LDRH not yet implemented."
	352 Move X1, [X10]
	353 Compare X9, 0
	354 JumpIfEqual {361}
	355 Move X10, [X8+176]
	356 Add X10, X10, 8
	357 NotImplemented "Instruction LDUR not yet implemented."
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Subtract X9, X9, 1
	360 Add X10, X10, 16
	361 Move W2, 7
	362 Move X0, X22
	363 Call 0x1C5D788
	364 Move W9, [X10]
	365 Add W9, W9, 7
	366 Add X8, X8, W9
	367 Add X0, X8, 312
	368 Move X8, [X0]
	369 Move X1, [X0+8]
	370 Move X0, X22
	371 NotImplemented "Instruction BLR not yet implemented."
	372 Move X8, 0x429000
	373 Move X8, [X8+1888]
	374 Move V8, V0
	375 Move V9, V1
	376 Move V10, V2
	377 Move X0, [X8]
	378 Move V11, V3
	379 Move W8, [X0+224]
	380 Compare W8, 0
	381 JumpIfNotEqual {383}
	382 Call 0x1C17DFC
	383 NotImplemented "Instruction CMP not yet implemented."
	384 NotImplemented "Instruction CSET not yet implemented."
	385 Move X0, X24
	386 Move X1, X23
	387 Move V0, V8
	388 Move V1, V9
	389 Move V2, V10
	390 Move V3, V11
	391 Move X3, X31
	392 Call UIRVEShaderInfoAllocator.SetColorValue, X0, X1, X2, X3
	393 Move X0, [X25]
	394 Add X23, X21, 416
	395 Move W8, [X0+224]
	396 Compare W8, 0
	397 JumpIfNotEqual {399}
	398 Call 0x1C17DFC
	399 Move X0, X23
	400 Move X1, X31
	401 Call BMPAlloc.IsValid, X0
	402 Move TEMP, X0
	403 And TEMP, TEMP, 1
	404 Compare TEMP, 1
	405 JumpIfNotEqual {457}
	406 Compare X19, 0
	407 JumpIfEqual {547}
	408 Compare X22, 0
	409 JumpIfEqual {547}
	410 Move X10, 0x3E1000
	411 Move X8, [X22]
	412 Move X23, [X23]
	413 Move X10, [X10+288]
	414 Add X24, X19, 320
	415 NotImplemented "Instruction LDRH not yet implemented."
	416 Move X1, [X10]
	417 Compare X9, 0
	418 JumpIfEqual {425}
	419 Move X10, [X8+176]
	420 Add X10, X10, 8
	421 NotImplemented "Instruction LDUR not yet implemented."
	422 NotImplemented "Instruction CMP not yet implemented."
	423 Subtract X9, X9, 1
	424 Add X10, X10, 16
	425 Move W2, 1
	426 Move X0, X22
	427 Call 0x1C5D788
	428 Move W9, [X10]
	429 Add W9, W9, 1
	430 Add X8, X8, W9
	431 Add X0, X8, 312
	432 Move X8, [X0]
	433 Move X1, [X0+8]
	434 Move X0, X22
	435 NotImplemented "Instruction BLR not yet implemented."
	436 Move X8, 0x429000
	437 Move X8, [X8+1888]
	438 Move V8, V0
	439 Move V9, V1
	440 Move V10, V2
	441 Move X0, [X8]
	442 Move V11, V3
	443 Move W8, [X0+224]
	444 Compare W8, 0
	445 JumpIfNotEqual {447}
	446 Call 0x1C17DFC
	447 NotImplemented "Instruction CMP not yet implemented."
	448 NotImplemented "Instruction CSET not yet implemented."
	449 Move X0, X24
	450 Move X1, X23
	451 Move V0, V8
	452 Move V1, V9
	453 Move V2, V10
	454 Move V3, V11
	455 Move X3, X31
	456 Call UIRVEShaderInfoAllocator.SetColorValue, X0, X1, X2, X3
	457 Move X0, [X25]
	458 Add X21, X21, 424
	459 Move W8, [X0+224]
	460 Compare W8, 0
	461 JumpIfNotEqual {463}
	462 Call 0x1C17DFC
	463 Move X0, X21
	464 Move X1, X31
	465 Call BMPAlloc.IsValid, X0
	466 Move TEMP, X0
	467 And TEMP, TEMP, 1
	468 Compare TEMP, 1
	469 JumpIfNotEqual {492}
	470 Compare X19, 0
	471 JumpIfEqual {547}
	472 Compare X22, 0
	473 JumpIfEqual {547}
	474 Move X10, 0x3E1000
	475 Move X8, [X22]
	476 Move X21, [X21]
	477 Move X10, [X10+288]
	478 Add X19, X19, 320
	479 NotImplemented "Instruction LDRH not yet implemented."
	480 Move X1, [X10]
	481 Compare X9, 0
	482 JumpIfEqual {489}
	483 Move X10, [X8+176]
	484 Add X10, X10, 8
	485 NotImplemented "Instruction LDUR not yet implemented."
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Subtract X9, X9, 1
	488 Add X10, X10, 16
	489 Move W2, 37
	490 Move X0, X22
	491 Call 0x1C5D788
	492 Move X20, [X31+80]
	493 Move X19, [X31+88]
	494 Move X22, [X31+64]
	495 Move X21, [X31+72]
	496 Move X24, [X31+48]
	497 Move X23, [X31+56]
	498 Move X30, [X31+32]
	499 Move X25, [X31+40]
	500 Move D9, [X31+16]
	501 Move D8, [X31+24]
	502 Move D11, [X31+96]
	503 Move D10, [X31+104]
	504 Return 
	505 Move W9, [X10]
	506 Add W9, W9, 37
	507 Add X8, X8, W9
	508 Add X0, X8, 312
	509 Move X8, [X0]
	510 Move X1, [X0+8]
	511 Move X0, X22
	512 NotImplemented "Instruction BLR not yet implemented."
	513 Move X8, 0x429000
	514 Move X8, [X8+1888]
	515 Move V8, V0
	516 Move V9, V1
	517 Move V10, V2
	518 Move X0, [X8]
	519 Move V11, V3
	520 Move W8, [X0+224]
	521 Compare W8, 0
	522 JumpIfNotEqual {524}
	523 Call 0x1C17DFC
	524 NotImplemented "Instruction CMP not yet implemented."
	525 Move X0, X19
	526 Move X1, X21
	527 Move V0, V8
	528 Move V1, V9
	529 Move X20, [X31+80]
	530 Move X19, [X31+88]
	531 Move X22, [X31+64]
	532 Move X21, [X31+72]
	533 Move X24, [X31+48]
	534 Move X23, [X31+56]
	535 Move X30, [X31+32]
	536 Move X25, [X31+40]
	537 Move D9, [X31+16]
	538 Move D8, [X31+24]
	539 NotImplemented "Instruction CSET not yet implemented."
	540 Move V2, V10
	541 Move V3, V11
	542 Move X3, X31
	543 Move D11, [X31+96]
	544 Move D10, [X31+104]
	545 Call UIRVEShaderInfoAllocator.SetColorValue, X0, X1, X2, X3
	546 Return 
	547 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D3D480 MOV X1, X31
	0x03D3D484 BL 0x3C06E58
	0x03D3D488 STP X24, X23, [X22 + 0x90]
	0x03D3D48C STP X21, X20, [X22 + 0xA0]
	0x03D3D490 STR W19, [X22 + 0xB0]
	0x03D3D494 LDP X20, X19, [X31 + 0x40]
	0x03D3D498 LDP X22, X21, [X31 + 0x30]
	0x03D3D49C LDP X24, X23, [X31 + 0x20]
	0x03D3D4A0 LDP X26, X25, [X31 + 0x10]
	0x03D3D4A4 LDR X30, [X31], #0x50
	0x03D3D4A8 RET
	0x03D3D4AC SUB X31, X31, 0x70
	0x03D3D4B0 STP X30, X27, [X31 + 0x20]
	0x03D3D4B4 STP X26, X25, [X31 + 0x30]
	0x03D3D4B8 STP X24, X23, [X31 + 0x40]
	0x03D3D4BC STP X22, X21, [X31 + 0x50]
	0x03D3D4C0 STP X20, X19, [X31 + 0x60]
	0x03D3D4C4 ADRP X27, 0x6AA000
	0x03D3D4C8 ADRP X26, 0x3B6000
	0x03D3D4CC LDRB W8, [X27 + 0xB79]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x6AB000
	005 Move X20, 0x428000
	006 Move W8, [X19+2929]
	007 Move X20, [X20+1912]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x428000
	013 Move X0, [X0+1912]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2929], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 0x4260
	021 NotImplemented "Instruction MOVK not yet implemented."
	022 Move X8, [X8+184]
	023 Move [X8], W9
	024 Move X30, [X31+32]
	025 Return 

