Type: UnityEngine.UIElements.UIR.Implementation.CommandGenerator

Method: System.Void GetVerticesTransformInfo(UnityEngine.UIElements.VisualElement ve, out UnityEngine.Matrix4x4 transform)

Disassembly:
	0x03D36268 BL 0x2407134
	0x03D3626C LDR W8, [X31 + 0x8C]
	0x03D36270 CMP W26, W20
	0x03D36274 STR W0, [X31 + 0x1D0]
	0x03D36278 ADD X0, X31, 0x1E8
	0x03D3627C ADD W22, W8, W22
	0x03D36280 CSET W8, EQ
	0x03D36284 CMP W24, W8
	0x03D36288 CSET W8, EQ
	0x03D3628C ADD X1, X31, 0x148
	0x03D36290 MOVZ W2, 0x98
	0x03D36294 STR W22, [X31 + 0x1D4]
	0x03D36298 STR W8, [X31 + 0x1D8]
	0x03D3629C BL 0x3EB1AC0
	0x03D362A0 LDR X8, [X31 + 0xC8]
	0x03D362A4 LDR X0, [X8 + 0x138]
	0x03D362A8 CBZ X0, 0x3D3689C
	0x03D362AC ADD X1, X31, 0x1E8
	0x03D362B0 MOV X2, X31
	0x03D362B4 BL 0x3D21B04
	0x03D362B8 LDR W19, [X31 + 0x24]
	0x03D362BC TBZ X23, 0x0, 0x3D362E0
	0x03D362C0 LDR X1, [X31 + 0x290]
	0x03D362C4 LDR X2, [X31 + 0x298]
	0x03D362C8 LDR X3, [X31 + 0x280]
	0x03D362CC LDR X4, [X31 + 0x288]
	0x03D362D0 LDR X0, [X31 + 0xA8]
	0x03D362D4 MOV W5, W22
	0x03D362D8 MOV X6, X31
	0x03D362DC BL 0x3D3D410
	0x03D362E0 ADRP X8, 0x42F000
	0x03D362E4 LDR X8, [X8 + 0xF8]
	0x03D362E8 LDR X22, [X31 + 0x458]
	0x03D362EC LDR X0, [X8]
	0x03D362F0 LDR W8, [X0 + 0xE0]
	0x03D362F4 CBNZ W8, 0x3D362FC
	0x03D362F8 BL 0x1C16DFC
	0x03D362FC LDP X7, X8, [X31 + 0xB0]
	0x03D36300 LDP X0, X1, [X31 + 0xC8]
	0x03D36304 LDR W6, [X31 + 0x7C]
	0x03D36308 ADD X2, X31, 0x370
	0x03D3630C ADD X3, X31, 0x368
	0x03D36310 MOV X4, X22
	0x03D36314 MOV W5, W19
	0x03D36318 STR W20, [X31 + 0x8]
	0x03D3631C STR X8, [X31]
	0x03D36320 BL 0x3D36FD0
	0x03D36324 LDR W8, [X31 + 0xC4]
	0x03D36328 TBZ X8, 0x0, 0x3D36334
	0x03D3632C CBZ X0, 0x3D368A0
	0x03D36330 STR S9, [X0 + 0x48]
	0x03D36334 ADRP X8, 0x42F000
	0x03D36338 LDR X8, [X8 + 0x148]
	0x03D3633C STR X28, [X31 + 0x2B0]
	0x03D36340 STR X29, [X31 + 0x2B8]
	0x03D36344 LDR X1, [X8]
	0x03D36348 ADD X0, X31, 0x2B0
	0x03D3634C BL 0x2408B10
	0x03D36350 LDR W8, [X31 + 0x8C]
	0x03D36354 ADD W8, W0, W8
	0x03D36358 STR W8, [X31 + 0x8C]
	0x03D3635C LDR W8, [X31 + 0x7C]
	0x03D36360 ADD W8, W19, W8
	0x03D36364 STR W8, [X31 + 0x7C]
	0x03D36368 MOVZ W8, 0x1
	0x03D3636C STR W8, [X31 + 0x50]
	0x03D36370 B 0x3D35D48
	0x03D36374 ADRP X8, 0x42F000
	0x03D36378 LDR X8, [X8 + 0x100]
	0x03D3637C ADD X0, X31, 0x2C0
	0x03D36380 LDR X1, [X8]
	0x03D36384 BL 0x2BE377C
	0x03D36388 LDR W8, [X31 + 0x6C]
	0x03D3638C TBNZ X8, 0x1F, 0x3D363C8
	0x03D36390 LDR X8, [X31 + 0xD0]
	0x03D36394 LDRB W8, [X8 + 0xFC]
	0x03D36398 CBNZ W8, 0x3D363C8
	0x03D3639C LDR X8, [X31 + 0xD0]
	0x03D363A0 LDR W9, [X31 + 0x6C]
	0x03D363A4 STR W9, [X8 + 0x150]
	0x03D363A8 LDR W9, [X31 + 0x4C]
	0x03D363AC STR W9, [X8 + 0x154]
	0x03D363B0 B 0x3D363C8
	0x03D363B4 CBZ X22, 0x3D363C8
	0x03D363B8 LDR X0, [X31 + 0xA0]
	0x03D363BC MOV X1, X22
	0x03D363C0 BL 0x3D30BFC
	0x03D363C4 STR X31, [X31 + 0x458]
	0x03D363C8 LDR X8, [X31 + 0x458]
	0x03D363CC LDR X20, [X31 + 0xD0]
	0x03D363D0 LDR X0, [X31 + 0xA8]
	0x03D363D4 MOV X1, X31
	0x03D363D8 STR X8, [X20 + 0x100]
	0x03D363DC ADD X8, X31, 0xD8

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+128], X30
	003 Move [X31+136], X21
	004 Move [X31+144], X20
	005 Move [X31+152], X19
	006 Move X21, 0x6B2000
	007 Move W8, [X21+2885]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x430000
	015 Move X0, [X0+248]
	016 Call 0x1C17CF4
	017 Move X0, 0x3E6000
	018 Move X0, [X0+2200]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2885], W8
	022 Compare X20, 0
	023 JumpIfEqual {119}
	024 Move X0, [X20+344]
	025 Call RenderChainVEData.AllocatesID, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {57}
	030 Move X0, X20
	031 Move X1, X31
	032 Call VisualElement.get_renderHints, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {57}
	037 Move X21, [X20+160]
	038 Compare X21, 0
	039 JumpIfNotEqual {43}
	040 Move X21, [X20+152]
	041 Compare X21, 0
	042 JumpIfEqual {107}
	043 Move W8, [X21+237]
	044 Compare W8, 0
	045 JumpIfEqual {86}
	046 Move X8, 0x430000
	047 Move X8, [X8+248]
	048 Move X0, [X8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X20
	054 Move X1, X21
	055 Move X2, X19
	056 Call CommandGenerator.ComputeTransformMatrix, X0, X1, X2
	057 Move X20, 0x6A3000
	058 Move W8, [X20+2752]
	059 Compare W8, 0
	060 JumpIfNotEqual {66}
	061 Move X0, 0x3C2000
	062 Move X0, [X0+624]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X20+2752], W8
	066 Move X8, 0x3C2000
	067 Move X8, [X8+624]
	068 Move X8, [X8]
	069 Move X8, [X8+184]
	070 Move V1, [X8+96]
	071 Move V0, [X8+112]
	072 Move V3, [X8+64]
	073 Move V2, [X8+80]
	074 Move [X19+32], V1
	075 Move [X19+40], V0
	076 Move [X19], V3
	077 Move [X19+8], V2
	078 Move W8, 0x3F800000
	079 Move [X19+40], W8
	080 Move X20, [X31+144]
	081 Move X19, [X31+152]
	082 Move X30, [X31+128]
	083 Move X21, [X31+136]
	084 Add X31, X31, 160
	085 Return 
	086 Move X0, X21
	087 Move X1, X31
	088 Call VisualElement.get_worldTransformInverse, X0
	089 Move X21, X0
	090 Move X0, X20
	091 Move X1, X31
	092 Call VisualElement.get_worldTransformRef, X0
	093 Move X8, 0x3E6000
	094 Move X8, [X8+2200]
	095 Move X20, X0
	096 Move X8, [X8]
	097 Move W9, [X8+224]
	098 Compare W9, 0
	099 JumpIfNotEqual {102}
	100 Move X0, X8
	101 Call 0x1C17DFC
	102 Move X0, X21
	103 Move X1, X20
	104 Move X2, X19
	105 Move X3, X31
	106 Call VisualElement.MultiplyMatrix34, X0, X1, X2
	107 Add X8, X31, 0
	108 Move X0, X20
	109 Move X1, X31
	110 Call VisualElement.get_worldTransform, X0
	111 Move V1, [X31+32]
	112 Move V0, [X31+48]
	113 Move V3, [X31]
	114 Move V2, [X31+16]
	115 Move [X31+96], V1
	116 Move [X31+104], V0
	117 Move [X31+64], V3
	118 Move [X31+72], V2
	119 Call 0x1C17F20

Method: System.Void ComputeTransformMatrix(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VisualElement ancestor, out UnityEngine.Matrix4x4 result)

Disassembly:
	0x03D363E0 BL 0x3D3CE50
	0x03D363E4 ADRP X19, 0x42E000
	0x03D363E8 LDUR V0, [X31 + 0xD8]
	0x03D363EC LDUR V1, [X31 + 0xE8]
	0x03D363F0 LDUR V2, [X31 + 0xF8]
	0x03D363F4 LDR X8, [X31 + 0x108]
	0x03D363F8 LDR X19, [X19 + 0xFB8]
	0x03D363FC ADD X9, X31, 0x3E0
	0x03D36400 ADD X22, X9, 0x20
	0x03D36404 ADD X10, X31, 0x2C0
	0x03D36408 LDR X1, [X19]
	0x03D3640C MOV X0, X22
	0x03D36410 STP V0, V1, [X10 + 0x120]
	0x03D36414 STR V2, [X10 + 0x14]
	0x03D36418 STR X8, [X31 + 0x410]
	0x03D3641C BL 0x2407134
	0x03D36420 CBNZ W0, 0x3D36438
	0x03D36424 LDR X1, [X20 + 0x108]
	0x03D36428 CBZ X1, 0x3D36438
	0x03D3642C LDR X0, [X31 + 0xA0]
	0x03D36430 BL 0x3D30BFC
	0x03D36434 STR X31, [X20 + 0x108]
	0x03D36438 LDR X0, [X31 + 0xA8]
	0x03D3643C ADD X8, X31, 0xD8
	0x03D36440 MOV X1, X31
	0x03D36444 BL 0x3D3CE50
	0x03D36448 LDRB W8, [X31 + 0xD8]
	0x03D3644C TBZ X8, 0x0, 0x3D367F4
	0x03D36450 LDP X9, X8, [X31 + 0x90]
	0x03D36454 LDR W10, [X31 + 0x5C]
	0x03D36458 STP X9, X8, [X31 + 0x138]
	0x03D3645C TBZ X10, 0x0, 0x3D36494
	0x03D36460 ORR X8, X8, X9, 0x0
	0x03D36464 CBNZ X8, 0x3D364AC
	0x03D36468 ADRP X8, 0x42F000
	0x03D3646C LDR X8, [X8 + 0xF8]
	0x03D36470 LDR X0, [X8]
	0x03D36474 LDR W8, [X0 + 0xE0]
	0x03D36478 CBNZ W8, 0x3D36480
	0x03D3647C BL 0x1C16DFC
	0x03D36480 LDR X0, [X31 + 0xD0]
	0x03D36484 ADD X1, X31, 0x140
	0x03D36488 ADD X2, X31, 0x138
	0x03D3648C BL 0x3D37140
	0x03D36490 B 0x3D364AC
	0x03D36494 LDR X8, [X31 + 0xD0]
	0x03D36498 LDR X8, [X8 + 0xD0]
	0x03D3649C STR X8, [X31 + 0x140]
	0x03D364A0 CBZ X8, 0x3D36898
	0x03D364A4 LDR X8, [X8 + 0x28]
	0x03D364A8 STR X8, [X31 + 0x138]
	0x03D364AC LDR X0, [X31 + 0xA8]
	0x03D364B0 ADD X8, X31, 0xD8
	0x03D364B4 MOV X1, X31
	0x03D364B8 BL 0x3D3CE50
	0x03D364BC LDRB W8, [X31 + 0xDC]
	0x03D364C0 TBZ X8, 0x0, 0x3D3651C
	0x03D364C4 LDR X0, [X31 + 0xC8]
	0x03D364C8 MOV X1, X31
	0x03D364CC BL 0x3D268E4
	0x03D364D0 CBZ X0, 0x3D36898
	0x03D364D4 MOVZ W8, 0xB
	0x03D364D8 STR W8, [X0 + 0x34]
	0x03D364DC LDR X8, [X31 + 0xD0]
	0x03D364E0 MOVZ W9, 0x1
	0x03D364E4 STRB W9, [X0 + 0x30]
	0x03D364E8 MOV X24, X0
	0x03D364EC STR X8, [X0 + 0x18]
	0x03D364F0 ADRP X8, 0x42F000
	0x03D364F4 LDR X8, [X8 + 0xF8]
	0x03D364F8 LDR X0, [X8]
	0x03D364FC LDR W8, [X0 + 0xE0]
	0x03D36500 CBNZ W8, 0x3D36508

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+136], X23
	004 Move [X31+144], X22
	005 Move [X31+152], X21
	006 Move [X31+160], X20
	007 Move [X31+168], X19
	008 Move X22, 0x6B2000
	009 Move W8, [X22+2886]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x3E6000
	018 Move X0, [X0+2200]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+2886], W8
	022 NotImplemented "Instruction MOVI not yet implemented."
	023 Move [X31+32], V0
	024 Move [X31+40], V0
	025 Move [X31], V0
	026 Move [X31+8], V0
	027 Compare X21, 0
	028 JumpIfEqual {97}
	029 Move X0, X21
	030 Move X1, X19
	031 Move X2, X31
	032 Call VisualElement.GetPivotedMatrixWithLayout, X0, X1
	033 Move X0, X21
	034 Move X1, X31
	035 Call VisualElement.get_parent, X0
	036 Compare X0, 0
	037 JumpIfEqual {89}
	038 Move X21, X0
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction MOVI not yet implemented."
	041 Move [X31+96], V0
	042 Move [X31+104], V0
	043 Move [X31+64], V0
	044 Move [X31+72], V0
	045 Move X22, 0x3E6000
	046 Move X22, [X22+2200]
	047 Move W8, 1
	048 Add X1, X31, 0
	049 Move X0, X21
	050 Move X2, X31
	051 Move W23, W8
	052 Call VisualElement.GetPivotedMatrixWithLayout, X0, X1
	053 Move X0, [X22]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Add X0, X31, 0
	059 Move TEMP, X23
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {65}
	063 Add X2, X31, 64
	064 Move X1, X19
	065 Add X1, X31, 64
	066 Move X2, X19
	067 Move X3, X31
	068 Call VisualElement.MultiplyMatrix34, X0, X1, X2
	069 Move X0, X21
	070 Move X1, X31
	071 Call VisualElement.get_parent, X0
	072 Compare X0, 0
	073 JumpIfEqual {77}
	074 Move X21, X0
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Xor W8, W23, 1
	077 Move TEMP, X23
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {89}
	081 Move V1, [X31+96]
	082 Move V0, [X31+112]
	083 Move V3, [X31+64]
	084 Move V2, [X31+80]
	085 Move [X19+32], V1
	086 Move [X19+40], V0
	087 Move [X19], V3
	088 Move [X19+8], V2
	089 Move X20, [X31+160]
	090 Move X19, [X31+168]
	091 Move X22, [X31+144]
	092 Move X21, [X31+152]
	093 Move X30, [X31+128]
	094 Move X23, [X31+136]
	095 Add X31, X31, 176
	096 Return 
	097 Call 0x1C17F20

Method: System.Boolean IsParentOrAncestorOf(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VisualElement child)

Disassembly:
	0x03D36504 BL 0x1C16DFC
	0x03D36508 LDR X0, [X31 + 0xC8]
	0x03D3650C ADD X2, X31, 0x140
	0x03D36510 ADD X3, X31, 0x138
	0x03D36514 MOV X1, X24
	0x03D36518 BL 0x3D372A4
	0x03D3651C LDR X0, [X31 + 0xA8]
	0x03D36520 ADD X8, X31, 0xD8
	0x03D36524 MOV X1, X31
	0x03D36528 BL 0x3D3CE50
	0x03D3652C LDRB W8, [X31 + 0xDB]
	0x03D36530 TBZ X8, 0x0, 0x3D36640
	0x03D36534 LDR X0, [X31 + 0xC8]
	0x03D36538 MOV X1, X31
	0x03D3653C BL 0x3D268E4
	0x03D36540 CBZ X0, 0x3D36898
	0x03D36544 MOVZ W8, 0x9
	0x03D36548 MOVZ W9, 0x1
	0x03D3654C MOV X24, X0
	0x03D36550 STR W8, [X0 + 0x34]
	0x03D36554 STRB W9, [X0 + 0x30]
	0x03D36558 LDR X0, [X31 + 0xD0]
	0x03D3655C MOV X1, X31
	0x03D36560 STR X0, [X24 + 0x18]
	0x03D36564 BL 0x3DF32EC
	0x03D36568 ADRP X8, 0x42F000
	0x03D3656C LDR X8, [X8 + 0xF8]
	0x03D36570 MOV W25, W0
	0x03D36574 LDR X8, [X8]
	0x03D36578 LDR W9, [X8 + 0xE0]
	0x03D3657C CBNZ W9, 0x3D36588
	0x03D36580 MOV X0, X8
	0x03D36584 BL 0x1C16DFC
	0x03D36588 MOV W0, W25
	0x03D3658C BL 0x3D3738C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+8], X31
	007 Compare X1, 0
	008 JumpIfEqual {33}
	009 Move X20, X1
	010 Move X19, X0
	011 Move X8, [X20+888]
	012 Add X0, X31, 8
	013 Move X1, X31
	014 Move [X31+8], X8
	015 Call Hierarchy.get_parent, X0
	016 Move X21, X0
	017 Compare X0, 0
	018 JumpIfEqual {34}
	019 Move X8, [X20+888]
	020 Add X0, X31, 8
	021 Move X1, X31
	022 Move [X31+8], X8
	023 Call Hierarchy.get_parent, X0
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, [X20+888]
	026 Add X0, X31, 8
	027 Move X1, X31
	028 Move [X31+8], X8
	029 Call Hierarchy.get_parent, X0
	030 Move X20, X0
	031 Compare X0, 0
	032 JumpIfNotEqual {11}
	033 Call 0x1C17F20
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+16]
	038 Move X21, [X31+24]
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Add X31, X31, 48
	041 Return X0

Method: UnityEngine.UIElements.UIR.Implementation.UIRStylePainter/ClosingInfo PaintElement(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)

Disassembly:
	0x03D36590 STR X0, [X24 + 0x38]
	0x03D36594 ADRP X8, 0x3BD000
	0x03D36598 LDR X8, [X8 + 0x598]
	0x03D3659C MOV X25, X0
	0x03D365A0 LDR X0, [X8]
	0x03D365A4 LDR W8, [X0 + 0xE0]
	0x03D365A8 CBNZ W8, 0x3D365B0
	0x03D365AC BL 0x1C16DFC
	0x03D365B0 MOV X0, X25
	0x03D365B4 MOV X1, X31
	0x03D365B8 MOV X2, X31
	0x03D365BC BL 0x3C354F8
	0x03D365C0 ADRP X8, 0x3BD000
	0x03D365C4 LDR X8, [X8 + 0xA28]
	0x03D365C8 MOV W25, W0
	0x03D365CC LDR X8, [X8]
	0x03D365D0 LDR W9, [X8 + 0xE0]
	0x03D365D4 CBNZ W9, 0x3D365E0
	0x03D365D8 MOV X0, X8
	0x03D365DC BL 0x1C16DFC
	0x03D365E0 AND W0, W25, 0x1
	0x03D365E4 MOV X1, X31
	0x03D365E8 BL 0x3C06E58
	0x03D365EC LDR X20, [X31 + 0xC8]
	0x03D365F0 ADD X2, X31, 0x140
	0x03D365F4 ADD X3, X31, 0x138
	0x03D365F8 MOV X1, X24
	0x03D365FC MOV X0, X20
	0x03D36600 BL 0x3D372A4
	0x03D36604 MOV X0, X20
	0x03D36608 MOV X1, X31
	0x03D3660C BL 0x3D268E4
	0x03D36610 CBZ X0, 0x3D36898
	0x03D36614 MOVZ W8, 0x8
	0x03D36618 STR W8, [X0 + 0x34]
	0x03D3661C LDR X8, [X31 + 0xD0]
	0x03D36620 MOVZ W9, 0x1
	0x03D36624 MOV X1, X0
	0x03D36628 STRB W9, [X0 + 0x30]
	0x03D3662C STR X8, [X0 + 0x18]
	0x03D36630 ADD X2, X31, 0x140
	0x03D36634 ADD X3, X31, 0x138
	0x03D36638 MOV X0, X20
	0x03D3663C BL 0x3D372A4
	0x03D36640 LDR X21, [X31 + 0xA8]
	0x03D36644 ADD X8, X31, 0xD8
	0x03D36648 MOV X1, X31
	0x03D3664C MOV X0, X21
	0x03D36650 BL 0x3D3CE50
	0x03D36654 LDUR V0, [X31 + 0xD8]
	0x03D36658 LDUR V1, [X31 + 0xE8]
	0x03D3665C LDUR V2, [X31 + 0xF8]
	0x03D36660 LDR X8, [X31 + 0x108]
	0x03D36664 LDR X1, [X19]
	0x03D36668 ADD X9, X31, 0x2C0
	0x03D3666C MOV X0, X22
	0x03D36670 STP V0, V1, [X9 + 0x120]
	0x03D36674 STR V2, [X9 + 0x14]
	0x03D36678 STR X8, [X31 + 0x410]
	0x03D3667C BL 0x2407134
	0x03D36680 CMP W0, 0x1
	0x03D36684 B.LT 0x3D36714
	0x03D36688 ADRP X19, 0x3E5000
	0x03D3668C LDR X19, [X19 + 0x620]
	0x03D36690 LDR X0, [X19]
	0x03D36694 LDR W8, [X0 + 0xE0]
	0x03D36698 CBNZ W8, 0x3D366A4
	0x03D3669C BL 0x1C16DFC
	0x03D366A0 LDR X0, [X19]
	0x03D366A4 LDR X8, [X0 + 0xB8]
	0x03D366A8 LDR X21, [X31 + 0xA8]
	0x03D366AC MOV X1, X31
	0x03D366B0 LDR W19, [X8]
	0x03D366B4 ADD X8, X31, 0xD8
	0x03D366B8 MOV X0, X21
	0x03D366BC BL 0x3D3CE50
	0x03D366C0 ADRP X8, 0x42F000
	0x03D366C4 LDR X8, [X8 + 0xF8]
	0x03D366C8 LDR W20, [X31 + 0x10C]
	0x03D366CC LDR X0, [X8]
	0x03D366D0 LDR W8, [X0 + 0xE0]
	0x03D366D4 CBNZ W8, 0x3D366DC
	0x03D366D8 BL 0x1C16DFC
	0x03D366DC LDP X0, X1, [X31 + 0xC8]
	0x03D366E0 ADD X2, X31, 0x140
	0x03D366E4 ADD X3, X31, 0x138
	0x03D366E8 MOV X4, X31
	0x03D366EC MOV W5, W31
	0x03D366F0 MOV W6, W31
	0x03D366F4 MOV X7, X31
	0x03D366F8 STR W20, [X31 + 0x8]
	0x03D366FC STR X19, [X31]
	0x03D36700 BL 0x3D37644
	0x03D36704 MOV X1, X0
	0x03D36708 MOV X0, X21
	0x03D3670C MOV X2, X31
	0x03D36710 BL 0x3D3D39C
	0x03D36714 ADD X8, X31, 0xD8
	0x03D36718 MOV X0, X21
	0x03D3671C MOV X1, X31
	0x03D36720 BL 0x3D3CE50
	0x03D36724 LDRB W8, [X31 + 0xD9]
	0x03D36728 TBZ X8, 0x0, 0x3D36784
	0x03D3672C LDR X0, [X31 + 0xC8]
	0x03D36730 MOV X1, X31
	0x03D36734 BL 0x3D268E4
	0x03D36738 CBZ X0, 0x3D36898
	0x03D3673C MOVZ W8, 0x4
	0x03D36740 STR W8, [X0 + 0x34]
	0x03D36744 LDR X8, [X31 + 0xD0]
	0x03D36748 MOVZ W9, 0x1
	0x03D3674C STRB W9, [X0 + 0x30]
	0x03D36750 MOV X22, X0
	0x03D36754 STR X8, [X0 + 0x18]
	0x03D36758 ADRP X8, 0x42F000
	0x03D3675C LDR X8, [X8 + 0xF8]
	0x03D36760 LDR X0, [X8]
	0x03D36764 LDR W8, [X0 + 0xE0]
	0x03D36768 CBNZ W8, 0x3D36770
	0x03D3676C BL 0x1C16DFC
	0x03D36770 LDR X0, [X31 + 0xC8]
	0x03D36774 ADD X2, X31, 0x140
	0x03D36778 ADD X3, X31, 0x138
	0x03D3677C MOV X1, X22
	0x03D36780 BL 0x3D372A4
	0x03D36784 LDR X0, [X31 + 0xA8]
	0x03D36788 ADD X8, X31, 0xD8
	0x03D3678C MOV X1, X31
	0x03D36790 BL 0x3D3CE50
	0x03D36794 LDRB W8, [X31 + 0xDA]
	0x03D36798 TBZ X8, 0x0, 0x3D367F4
	0x03D3679C LDR X0, [X31 + 0xC8]
	0x03D367A0 MOV X1, X31
	0x03D367A4 BL 0x3D268E4
	0x03D367A8 CBZ X0, 0x3D36898
	0x03D367AC MOVZ W8, 0x6
	0x03D367B0 STR W8, [X0 + 0x34]
	0x03D367B4 LDR X8, [X31 + 0xD0]
	0x03D367B8 MOVZ W9, 0x1
	0x03D367BC STRB W9, [X0 + 0x30]
	0x03D367C0 MOV X22, X0
	0x03D367C4 STR X8, [X0 + 0x18]
	0x03D367C8 ADRP X8, 0x42F000
	0x03D367CC LDR X8, [X8 + 0xF8]
	0x03D367D0 LDR X0, [X8]
	0x03D367D4 LDR W8, [X0 + 0xE0]
	0x03D367D8 CBNZ W8, 0x3D367E0
	0x03D367DC BL 0x1C16DFC
	0x03D367E0 LDR X0, [X31 + 0xC8]
	0x03D367E4 ADD X2, X31, 0x140
	0x03D367E8 ADD X3, X31, 0x138
	0x03D367EC MOV X1, X22
	0x03D367F0 BL 0x3D372A4
	0x03D367F4 LDR X9, [X31 + 0xD0]
	0x03D367F8 LDR X8, [X9 + 0x108]
	0x03D367FC CBZ X8, 0x3D36810
	0x03D36800 LDR X8, [X9 + 0x100]
	0x03D36804 CMP X8, 0x0
	0x03D36808 CSET W20, NE
	0x03D3680C B 0x3D36814
	0x03D36810 MOVZ W20, 0x1
	0x03D36814 ADRP X8, 0x3BD000
	0x03D36818 LDR X8, [X8 + 0xA28]
	0x03D3681C LDR X0, [X8]
	0x03D36820 LDR W8, [X0 + 0xE0]
	0x03D36824 CBNZ W8, 0x3D3682C
	0x03D36828 BL 0x1C16DFC
	0x03D3682C MOV W0, W20
	0x03D36830 MOV X1, X31
	0x03D36834 BL 0x3C06E58
	0x03D36838 LDR X20, [X31 + 0xA8]
	0x03D3683C ADD X8, X31, 0xD8
	0x03D36840 MOV X1, X31
	0x03D36844 MOV X0, X20
	0x03D36848 BL 0x3D3CE50
	0x03D3684C LDUR V0, [X31 + 0xD8]
	0x03D36850 LDUR V1, [X31 + 0xE8]
	0x03D36854 LDUR V2, [X31 + 0xF8]
	0x03D36858 LDR X8, [X31 + 0x108]
	0x03D3685C ADD X19, X31, 0x2C0
	0x03D36860 MOV X0, X20
	0x03D36864 MOV X1, X31
	0x03D36868 STP V0, V1, [X19 + 0x160]
	0x03D3686C STR V2, [X19 + 0x18]
	0x03D36870 STR X8, [X31 + 0x450]
	0x03D36874 BL 0x3D43B10
	0x03D36878 LDP V0, V1, [X19 + 0x160]
	0x03D3687C LDR V2, [X19 + 0x18]
	0x03D36880 LDR X8, [X31 + 0x450]
	0x03D36884 LDR X20, [X31 + 0x70]
	0x03D36888 STP V0, V1, [X19 + 0xE0]
	0x03D3688C STR V2, [X19 + 0x10]
	0x03D36890 STR X8, [X31 + 0x3D0]
	0x03D36894 B 0x3D35854
	0x03D36898 BL 0x1C16F20
	0x03D3689C BL 0x1C16F20
	0x03D368A0 BL 0x1C16F20
	0x03D368A4 B 0x3D36948
	0x03D368A8 LDR W8, [X31 + 0x8C]
	0x03D368AC MOV X22, X0
	0x03D368B0 STR W8, [X31 + 0x6C]
	0x03D368B4 B 0x3D3694C
	0x03D368B8 B 0x3D36948
	0x03D368BC B 0x3D36948
	0x03D368C0 B 0x3D36948
	0x03D368C4 B 0x3D36948
	0x03D368C8 B 0x3D36948
	0x03D368CC B 0x3D36948
	0x03D368D0 B 0x3D36948
	0x03D368D4 B 0x3D36948
	0x03D368D8 B 0x3D36948
	0x03D368DC B 0x3D36948
	0x03D368E0 B 0x3D36948
	0x03D368E4 B 0x3D36948
	0x03D368E8 B 0x3D36948
	0x03D368EC B 0x3D36948
	0x03D368F0 B 0x3D36948
	0x03D368F4 B 0x3D36948
	0x03D368F8 B 0x3D36948
	0x03D368FC B 0x3D36948
	0x03D36900 B 0x3D36948
	0x03D36904 B 0x3D36948
	0x03D36908 B 0x3D36948
	0x03D3690C B 0x3D36948
	0x03D36910 B 0x3D36948
	0x03D36914 B 0x3D36948
	0x03D36918 B 0x3D36948
	0x03D3691C B 0x3D36948
	0x03D36920 B 0x3D36948
	0x03D36924 B 0x3D36948
	0x03D36928 B 0x3D36948
	0x03D3692C B 0x3D36948
	0x03D36930 B 0x3D36948
	0x03D36934 B 0x3D36948
	0x03D36938 B 0x3D36948
	0x03D3693C B 0x3D36948
	0x03D36940 B 0x3D36948
	0x03D36944 B 0x3D36948
	0x03D36948 MOV X22, X0
	0x03D3694C CMP W1, 0x1
	0x03D36950 B.NE 0x3D36984
	0x03D36954 MOV X0, X22
	0x03D36958 BL 0x3EB1AD0
	0x03D3695C LDR X24, [X0]
	0x03D36960 BL 0x3EB1AE0
	0x03D36964 ADRP X8, 0x42F000
	0x03D36968 LDR X8, [X8 + 0x100]
	0x03D3696C ADD X0, X31, 0x2C0
	0x03D36970 LDR X1, [X8]
	0x03D36974 BL 0x2BE377C
	0x03D36978 CBZ X24, 0x3D36388
	0x03D3697C MOV X0, X24
	0x03D36980 BL 0x1C16F18
	0x03D36984 MOV X24, X31
	0x03D36988 B 0x3D36990
	0x03D3698C MOV X22, X0
	0x03D36990 ADRP X8, 0x42F000
	0x03D36994 LDR X8, [X8 + 0x100]
	0x03D36998 LDR X1, [X8]
	0x03D3699C ADD X0, X31, 0x2C0
	0x03D369A0 BL 0x2BE377C
	0x03D369A4 CBNZ X24, 0x3D369B0
	0x03D369A8 MOV X0, X22
	0x03D369AC BL 0x1D2C690
	0x03D369B0 MOV X0, X24
	0x03D369B4 BL 0x1C16F18
	0x03D369B8 BL 0x1990590
	0x03D369BC STP X30, X25, [X31 - 0x40]!
	0x03D369C0 STP X24, X23, [X31 + 0x10]
	0x03D369C4 STP X22, X21, [X31 + 0x20]
	0x03D369C8 STP X20, X19, [X31 + 0x30]
	0x03D369CC ADRP X21, 0x6B1000
	0x03D369D0 LDRB W8, [X21 + 0xB55]
	0x03D369D4 MOV X20, X1
	0x03D369D8 MOV X19, X0
	0x03D369DC TBNZ X8, 0x0, 0x3D369F4
	0x03D369E0 ADRP X0, 0x3BD000
	0x03D369E4 LDR X0, [X0 + 0xA28]
	0x03D369E8 BL 0x1C16CF4
	0x03D369EC MOVZ W8, 0x1
	0x03D369F0 STRB W8, [X21 + 0xB55]
	0x03D369F4 CBZ X20, 0x3D36C48
	0x03D369F8 MOV X23, X20
	0x03D369FC LDR X1, [X23 + 0xC8]!
	0x03D36A00 CBZ X1, 0x3D36A1C
	0x03D36A04 CBZ X19, 0x3D36C48
	0x03D36A08 LDR X2, [X20 + 0xD0]
	0x03D36A0C MOV X0, X19
	0x03D36A10 MOV X3, X31
	0x03D36A14 BL 0x3D26A88
	0x03D36A18 LDR X1, [X20 + 0xC8]
	0x03D36A1C CBZ X1, 0x3D36A28
	0x03D36A20 LDR X24, [X1 + 0x20]
	0x03D36A24 B 0x3D36A2C
	0x03D36A28 MOV X24, X31
	0x03D36A2C LDR X8, [X20 + 0xD0]
	0x03D36A30 CBZ X8, 0x3D36A3C
	0x03D36A34 LDR X25, [X8 + 0x28]
	0x03D36A38 B 0x3D36A40
	0x03D36A3C MOV X25, X31
	0x03D36A40 ADRP X22, 0x3BD000
	0x03D36A44 LDR X22, [X22 + 0xA28]
	0x03D36A48 CBZ X24, 0x3D36A5C
	0x03D36A4C LDR X8, [X24 + 0x18]
	0x03D36A50 CMP X8, X20
	0x03D36A54 CSET W21, NE
	0x03D36A58 B 0x3D36A60
	0x03D36A5C MOVZ W21, 0x1
	0x03D36A60 LDR X0, [X22]
	0x03D36A64 LDR W8, [X0 + 0xE0]
	0x03D36A68 CBNZ W8, 0x3D36A70
	0x03D36A6C BL 0x1C16DFC
	0x03D36A70 MOV W0, W21
	0x03D36A74 MOV X1, X31
	0x03D36A78 BL 0x3C06E58
	0x03D36A7C CBZ X25, 0x3D36A9C
	0x03D36A80 LDR X8, [X20 + 0xD8]
	0x03D36A84 CMP X25, X8
	0x03D36A88 B.EQ 0x3D36A9C
	0x03D36A8C LDR X8, [X25 + 0x18]
	0x03D36A90 CMP X8, X20
	0x03D36A94 CSET W21, NE
	0x03D36A98 B 0x3D36AA0
	0x03D36A9C MOVZ W21, 0x1
	0x03D36AA0 LDR X0, [X22]
	0x03D36AA4 LDR W8, [X0 + 0xE0]
	0x03D36AA8 CBNZ W8, 0x3D36AB0
	0x03D36AAC BL 0x1C16DFC
	0x03D36AB0 MOV W0, W21
	0x03D36AB4 MOV X1, X31
	0x03D36AB8 BL 0x3C06E58
	0x03D36ABC CBZ X24, 0x3D36AC4
	0x03D36AC0 STR X25, [X24 + 0x28]
	0x03D36AC4 CBZ X25, 0x3D36ACC
	0x03D36AC8 STR X24, [X25 + 0x20]
	0x03D36ACC LDR X21, [X23]
	0x03D36AD0 CBZ X21, 0x3D36B24
	0x03D36AD4 LDR X8, [X20 + 0xD0]
	0x03D36AD8 CMP X21, X8
	0x03D36ADC B.EQ 0x3D36B10
	0x03D36AE0 MOV X1, X21
	0x03D36AE4 CBZ X1, 0x3D36C48
	0x03D36AE8 CBZ X19, 0x3D36C48
	0x03D36AEC LDR X21, [X1 + 0x28]
	0x03D36AF0 MOV X0, X19
	0x03D36AF4 MOV X2, X31
	0x03D36AF8 BL 0x3D2694C
	0x03D36AFC LDR X8, [X20 + 0xD0]
	0x03D36B00 MOV X1, X21
	0x03D36B04 CMP X21, X8
	0x03D36B08 B.NE 0x3D36AE4
	0x03D36B0C B 0x3D36B14
	0x03D36B10 CBZ X19, 0x3D36C48
	0x03D36B14 MOV X0, X19
	0x03D36B18 MOV X1, X21
	0x03D36B1C MOV X2, X31
	0x03D36B20 BL 0x3D2694C
	0x03D36B24 STP X31, X31, [X23]
	0x03D36B28 MOV X23, X20
	0x03D36B2C LDR X8, [X23 + 0xD8]!
	0x03D36B30 CBZ X8, 0x3D36B3C
	0x03D36B34 LDR X24, [X8 + 0x20]
	0x03D36B38 B 0x3D36B40
	0x03D36B3C MOV X24, X31
	0x03D36B40 LDR X8, [X20 + 0xE0]
	0x03D36B44 CBZ X8, 0x3D36B60
	0x03D36B48 LDR X25, [X8 + 0x28]
	0x03D36B4C CBZ X24, 0x3D36B68
	0x03D36B50 LDR X8, [X24 + 0x18]
	0x03D36B54 CMP X8, X20
	0x03D36B58 CSET W21, NE
	0x03D36B5C B 0x3D36B6C
	0x03D36B60 MOV X25, X31
	0x03D36B64 CBNZ X24, 0x3D36B50
	0x03D36B68 MOVZ W21, 0x1
	0x03D36B6C LDR X0, [X22]
	0x03D36B70 LDR W8, [X0 + 0xE0]
	0x03D36B74 CBNZ W8, 0x3D36B7C
	0x03D36B78 BL 0x1C16DFC
	0x03D36B7C MOV W0, W21
	0x03D36B80 MOV X1, X31
	0x03D36B84 BL 0x3C06E58
	0x03D36B88 CBZ X25, 0x3D36B9C
	0x03D36B8C LDR X8, [X25 + 0x18]
	0x03D36B90 CMP X8, X20
	0x03D36B94 CSET W21, NE
	0x03D36B98 B 0x3D36BA0
	0x03D36B9C MOVZ W21, 0x1
	0x03D36BA0 LDR X0, [X22]
	0x03D36BA4 LDR W8, [X0 + 0xE0]
	0x03D36BA8 CBNZ W8, 0x3D36BB0
	0x03D36BAC BL 0x1C16DFC
	0x03D36BB0 MOV W0, W21
	0x03D36BB4 MOV X1, X31
	0x03D36BB8 BL 0x3C06E58
	0x03D36BBC CBZ X24, 0x3D36BC4
	0x03D36BC0 STR X25, [X24 + 0x28]
	0x03D36BC4 CBZ X25, 0x3D36BCC
	0x03D36BC8 STR X24, [X25 + 0x20]
	0x03D36BCC LDR X1, [X23]
	0x03D36BD0 CBZ X1, 0x3D36C30
	0x03D36BD4 CBZ X19, 0x3D36C48
	0x03D36BD8 LDR X2, [X20 + 0xE0]
	0x03D36BDC MOV X0, X19
	0x03D36BE0 MOV X3, X31
	0x03D36BE4 BL 0x3D26A88
	0x03D36BE8 LDP X1, X8, [X20 + 0xD8]
	0x03D36BEC CMP X1, X8
	0x03D36BF0 B.EQ 0x3D36C1C
	0x03D36BF4 CBZ X1, 0x3D36C48
	0x03D36BF8 LDR X21, [X1 + 0x28]
	0x03D36BFC MOV X0, X19
	0x03D36C00 MOV X2, X31
	0x03D36C04 BL 0x3D2694C
	0x03D36C08 LDR X8, [X20 + 0xE0]
	0x03D36C0C MOV X1, X21
	0x03D36C10 CMP X21, X8
	0x03D36C14 B.NE 0x3D36BF4
	0x03D36C18 B 0x3D36C20
	0x03D36C1C MOV X21, X1
	0x03D36C20 MOV X0, X19
	0x03D36C24 MOV X1, X21
	0x03D36C28 MOV X2, X31
	0x03D36C2C BL 0x3D2694C
	0x03D36C30 STP X31, X31, [X23]
	0x03D36C34 LDP X20, X19, [X31 + 0x30]
	0x03D36C38 LDP X22, X21, [X31 + 0x20]
	0x03D36C3C LDP X24, X23, [X31 + 0x10]
	0x03D36C40 LDP X30, X25, [X31], #0x40
	0x03D36C44 RET
	0x03D36C48 BL 0x1C16F20
	0x03D36C4C STR X30, [X31 - 0x30]!
	0x03D36C50 STP X22, X21, [X31 + 0x10]
	0x03D36C54 STP X20, X19, [X31 + 0x20]
	0x03D36C58 ADRP X22, 0x6B1000
	0x03D36C5C ADRP X21, 0x42F000
	0x03D36C60 LDRB W8, [X22 + 0xB48]
	0x03D36C64 LDR X21, [X21 + 0x160]
	0x03D36C68 MOV X19, X1
	0x03D36C6C MOV X20, X0
	0x03D36C70 TBNZ X8, 0x0, 0x3D36C88
	0x03D36C74 ADRP X0, 0x42F000
	0x03D36C78 LDR X0, [X0 + 0x160]
	0x03D36C7C BL 0x1C16CF4
	0x03D36C80 MOVZ W8, 0x1
	0x03D36C84 STRB W8, [X22 + 0xB48]
	0x03D36C88 LDR X0, [X21]
	0x03D36C8C LDR W8, [X0 + 0xE0]
	0x03D36C90 CBNZ W8, 0x3D36C98
	0x03D36C94 BL 0x1C16DFC
	0x03D36C98 ADRP X22, 0x6B1000
	0x03D36C9C LDRB W8, [X22 + 0xB5B]
	0x03D36CA0 CBNZ W8, 0x3D36CB8
	0x03D36CA4 ADRP X0, 0x42F000
	0x03D36CA8 LDR X0, [X0 + 0x160]
	0x03D36CAC BL 0x1C16CF4
	0x03D36CB0 MOVZ W8, 0x1
	0x03D36CB4 STRB W8, [X22 + 0xB5B]
	0x03D36CB8 LDR X0, [X21]
	0x03D36CBC LDR W8, [X0 + 0xE0]
	0x03D36CC0 CBNZ W8, 0x3D36CCC
	0x03D36CC4 BL 0x1C16DFC
	0x03D36CC8 LDR X0, [X21]
	0x03D36CCC LDR X8, [X0 + 0xB8]
	0x03D36CD0 MOVZ W9, 0x1
	0x03D36CD4 STRB W9, [X8]
	0x03D36CD8 CBZ X20, 0x3D36D34
	0x03D36CDC MOV X0, X20
	0x03D36CE0 MOV X1, X19
	0x03D36CE4 MOV X2, X31
	0x03D36CE8 BL 0x3DF2168
	0x03D36CEC LDRB W8, [X22 + 0xB5B]
	0x03D36CF0 CBNZ W8, 0x3D36D08
	0x03D36CF4 ADRP X0, 0x42F000
	0x03D36CF8 LDR X0, [X0 + 0x160]
	0x03D36CFC BL 0x1C16CF4
	0x03D36D00 MOVZ W8, 0x1
	0x03D36D04 STRB W8, [X22 + 0xB5B]
	0x03D36D08 LDR X0, [X21]
	0x03D36D0C LDR W8, [X0 + 0xE0]
	0x03D36D10 CBNZ W8, 0x3D36D1C
	0x03D36D14 BL 0x1C16DFC
	0x03D36D18 LDR X0, [X21]
	0x03D36D1C LDR X8, [X0 + 0xB8]
	0x03D36D20 LDP X20, X19, [X31 + 0x20]
	0x03D36D24 LDP X22, X21, [X31 + 0x10]
	0x03D36D28 STRB W31, [X8]
	0x03D36D2C LDR X30, [X31], #0x30
	0x03D36D30 RET
	0x03D36D34 BL 0x1C16F20
	0x03D36D38 STR X30, [X31 - 0x50]!
	0x03D36D3C STP X26, X25, [X31 + 0x10]
	0x03D36D40 STP X24, X23, [X31 + 0x20]
	0x03D36D44 STP X22, X21, [X31 + 0x30]
	0x03D36D48 STP X20, X19, [X31 + 0x40]
	0x03D36D4C LDR X8, [X0]
	0x03D36D50 MOV X19, X7
	0x03D36D54 MOV X20, X6
	0x03D36D58 MOV X21, X5
	0x03D36D5C MOV X23, X4
	0x03D36D60 MOV X25, X3
	0x03D36D64 MOV W24, W2
	0x03D36D68 MOV X22, X0
	0x03D36D6C MOV W26, W1
	0x03D36D70 CBZ X8, 0x3D36D88
	0x03D36D74 LDR W9, [X8 + 0x1C]
	0x03D36D78 CMP X9, W26, SXTW
	0x03D36D7C B.GE 0x3D36D90
	0x03D36D80 CBNZ X25, 0x3D36DA0
	0x03D36D84 B 0x3D36E1C
	0x03D36D88 CBNZ X25, 0x3D36DAC
	0x03D36D8C B 0x3D36E1C
	0x03D36D90 CBZ X25, 0x3D36E1C
	0x03D36D94 LDR W9, [X8 + 0x34]
	0x03D36D98 CMP X9, W24, SXTW
	0x03D36D9C B.GE 0x3D36DF4
	0x03D36DA0 MOV X0, X25
	0x03D36DA4 MOV X1, X8
	0x03D36DA8 BL 0x3D30BFC
	0x03D36DAC MOV X0, X25
	0x03D36DB0 MOV W1, W26
	0x03D36DB4 MOV W2, W24
	0x03D36DB8 MOV X3, X23
	0x03D36DBC MOV X4, X21
	0x03D36DC0 MOV X5, X20
	0x03D36DC4 BL 0x3D2F510
	0x03D36DC8 ADD X8, X19, 0x54
	0x03D36DCC STR X0, [X22]
	0x03D36DD0 LDR W9, [X8]
	0x03D36DD4 LDP X20, X19, [X31 + 0x40]
	0x03D36DD8 LDP X22, X21, [X31 + 0x30]
	0x03D36DDC LDP X24, X23, [X31 + 0x20]
	0x03D36DE0 LDP X26, X25, [X31 + 0x10]
	0x03D36DE4 ADD W9, W9, 0x1
	0x03D36DE8 STR W9, [X8]
	0x03D36DEC LDR X30, [X31], #0x50
	0x03D36DF0 RET
	0x03D36DF4 MOV X0, X25
	0x03D36DF8 MOV X1, X8
	0x03D36DFC MOV W2, W26
	0x03D36E00 MOV W3, W24
	0x03D36E04 MOV X4, X23
	0x03D36E08 MOV X5, X21
	0x03D36E0C MOV X6, X20
	0x03D36E10 BL 0x3D304A0
	0x03D36E14 ADD X8, X19, 0x50
	0x03D36E18 B 0x3D36DD0
	0x03D36E1C BL 0x1C16F20
	0x03D36E20 STR X30, [X31 - 0x40]!
	0x03D36E24 STP X24, X23, [X31 + 0x10]
	0x03D36E28 STP X22, X21, [X31 + 0x20]
	0x03D36E2C STP X20, X19, [X31 + 0x30]
	0x03D36E30 ADRP X22, 0x6B1000
	0x03D36E34 LDRB W8, [X22 + 0xB52]
	0x03D36E38 MOV X19, X2
	0x03D36E3C MOV X20, X1
	0x03D36E40 MOV X21, X0
	0x03D36E44 TBNZ X8, 0x0, 0x3D36E68
	0x03D36E48 ADRP X0, 0x42F000
	0x03D36E4C LDR X0, [X0 + 0xF8]
	0x03D36E50 BL 0x1C16CF4
	0x03D36E54 ADRP X0, 0x3BD000
	0x03D36E58 LDR X0, [X0 + 0xA28]
	0x03D36E5C BL 0x1C16CF4
	0x03D36E60 MOVZ W8, 0x1
	0x03D36E64 STRB W8, [X22 + 0xB52]
	0x03D36E68 CBZ X21, 0x3D36FCC
	0x03D36E6C ADRP X8, 0x3BD000
	0x03D36E70 LDR X8, [X8 + 0xA28]
	0x03D36E74 MOV X22, X21
	0x03D36E78 LDR X22, [X22 + 0x88]
	0x03D36E7C CBZ X22, 0x3D36F4C
	0x03D36E80 LDR X9, [X22 + 0xD0]
	0x03D36E84 CBZ X9, 0x3D36E78
	0x03D36E88 LDR X8, [X22 + 0x378]
	0x03D36E8C ADD X0, X31, 0x8
	0x03D36E90 MOV X1, X31
	0x03D36E94 STR X8, [X31 + 0x8]
	0x03D36E98 BL 0x3DF88DC
	0x03D36E9C LDR X8, [X21 + 0x378]
	0x03D36EA0 MOV X23, X0
	0x03D36EA4 ADD X0, X31, 0x8
	0x03D36EA8 MOV X1, X31
	0x03D36EAC STR X8, [X31 + 0x8]
	0x03D36EB0 BL 0x3DF88DC
	0x03D36EB4 CMP X23, X0
	0x03D36EB8 B.EQ 0x3D36F9C
	0x03D36EBC ADRP X23, 0x42F000
	0x03D36EC0 LDR X23, [X23 + 0xF8]
	0x03D36EC4 LDR X0, [X23]
	0x03D36EC8 LDR W8, [X0 + 0xE0]
	0x03D36ECC CBNZ W8, 0x3D36ED4
	0x03D36ED0 BL 0x1C16DFC
	0x03D36ED4 MOV X0, X22
	0x03D36ED8 MOV X1, X21
	0x03D36EDC BL 0x3D35504
	0x03D36EE0 TBNZ X0, 0x0, 0x3D36FA4
	0x03D36EE4 LDR X24, [X22 + 0xE0]
	0x03D36EE8 CBNZ X24, 0x3D36EF0
	0x03D36EEC LDR X24, [X22 + 0xD0]
	0x03D36EF0 STR X24, [X20]
	0x03D36EF4 CBZ X24, 0x3D36FCC
	0x03D36EF8 MOV X8, X24
	0x03D36EFC LDR X24, [X24 + 0x28]
	0x03D36F00 CBZ X24, 0x3D36FB0
	0x03D36F04 LDR X22, [X24 + 0x18]
	0x03D36F08 CMP X22, X21
	0x03D36F0C B.EQ 0x3D36FB0
	0x03D36F10 LDRB W9, [X24 + 0x30]
	0x03D36F14 CMP W9, 0x1
	0x03D36F18 B.NE 0x3D36FB0
	0x03D36F1C LDR X0, [X23]
	0x03D36F20 LDR W8, [X0 + 0xE0]
	0x03D36F24 CBNZ W8, 0x3D36F2C
	0x03D36F28 BL 0x1C16DFC
	0x03D36F2C MOV X0, X22
	0x03D36F30 MOV X1, X21
	0x03D36F34 BL 0x3D35504
	0x03D36F38 TBZ X0, 0x0, 0x3D36EF0
	0x03D36F3C LDR X8, [X20]
	0x03D36F40 B 0x3D36FAC
	0x03D36F44 LDR X9, [X21 + 0xC8]
	0x03D36F48 CBNZ X9, 0x3D36F58
	0x03D36F4C LDR X21, [X21 + 0x90]
	0x03D36F50 CBNZ X21, 0x3D36F44
	0x03D36F54 MOV X9, X31
	0x03D36F58 STR X9, [X19]
	0x03D36F5C STR X31, [X20]
	0x03D36F60 LDR X9, [X19]
	0x03D36F64 CBZ X9, 0x3D36F78
	0x03D36F68 LDR X9, [X9 + 0x20]
	0x03D36F6C CMP X9, 0x0
	0x03D36F70 CSET W19, EQ
	0x03D36F74 B 0x3D36F7C
	0x03D36F78 MOVZ W19, 0x1
	0x03D36F7C LDR X0, [X8]
	0x03D36F80 LDR W8, [X0 + 0xE0]
	0x03D36F84 CBNZ W8, 0x3D36F8C
	0x03D36F88 BL 0x1C16DFC
	0x03D36F8C MOV W0, W19
	0x03D36F90 MOV X1, X31
	0x03D36F94 BL 0x3C06E58
	0x03D36F98 B 0x3D36FB8
	0x03D36F9C LDR X8, [X22 + 0xE0]
	0x03D36FA0 CBNZ X8, 0x3D36FA8
	0x03D36FA4 LDR X8, [X22 + 0xD0]
	0x03D36FA8 STR X8, [X20]
	0x03D36FAC CBZ X8, 0x3D36FCC
	0x03D36FB0 LDR X8, [X8 + 0x28]
	0x03D36FB4 STR X8, [X19]
	0x03D36FB8 LDP X20, X19, [X31 + 0x30]
	0x03D36FBC LDP X22, X21, [X31 + 0x20]
	0x03D36FC0 LDP X24, X23, [X31 + 0x10]
	0x03D36FC4 LDR X30, [X31], #0x40
	0x03D36FC8 RET
	0x03D36FCC BL 0x1C16F20
	0x03D36FD0 STP X30, X27, [X31 - 0x50]!
	0x03D36FD4 STP X26, X25, [X31 + 0x10]
	0x03D36FD8 STP X24, X23, [X31 + 0x20]
	0x03D36FDC STP X22, X21, [X31 + 0x30]
	0x03D36FE0 STP X20, X19, [X31 + 0x40]
	0x03D36FE4 ADRP X27, 0x6B1000
	0x03D36FE8 LDRB W8, [X27 + 0xB50]
	0x03D36FEC MOV X26, X7
	0x03D36FF0 MOV W23, W6
	0x03D36FF4 MOV W22, W5
	0x03D36FF8 MOV X25, X4
	0x03D36FFC MOV X19, X3
	0x03D37000 MOV X20, X2
	0x03D37004 MOV X24, X1
	0x03D37008 MOV X21, X0
	0x03D3700C TBNZ X8, 0x0, 0x3D37024
	0x03D37010 ADRP X0, 0x42E000
	0x03D37014 LDR X0, [X0 + 0xF8]
	0x03D37018 BL 0x1C16CF4
	0x03D3701C MOVZ W8, 0x1
	0x03D37020 STRB W8, [X27 + 0xB50]
	0x03D37024 CBZ X21, 0x3D370A4
	0x03D37028 MOV X0, X21
	0x03D3702C MOV X1, X31
	0x03D37030 BL 0x3D268E4
	0x03D37034 CBZ X0, 0x3D370A4
	0x03D37038 LDR W8, [X31 + 0x58]
	0x03D3703C LDR W9, [X31 + 0x50]
	0x03D37040 ADRP X10, 0x42E000
	0x03D37044 LDR X10, [X10 + 0xF8]
	0x03D37048 STR W31, [X0 + 0x34]
	0x03D3704C STR X26, [X0 + 0x38]
	0x03D37050 STP X31, X25, [X0 + 0x48]
	0x03D37054 STP W23, W22, [X0 + 0x58]
	0x03D37058 STP W9, W8, [X0 + 0x40]
	0x03D3705C STR X24, [X0 + 0x18]
	0x03D37060 MOV X27, X0
	0x03D37064 LDR X0, [X10]
	0x03D37068 LDR W8, [X0 + 0xE0]
	0x03D3706C CBNZ W8, 0x3D37074
	0x03D37070 BL 0x1C16DFC
	0x03D37074 MOV X0, X21
	0x03D37078 MOV X1, X27
	0x03D3707C MOV X2, X20
	0x03D37080 MOV X3, X19
	0x03D37084 BL 0x3D370A8
	0x03D37088 LDP X20, X19, [X31 + 0x40]
	0x03D3708C LDP X22, X21, [X31 + 0x30]
	0x03D37090 LDP X24, X23, [X31 + 0x20]
	0x03D37094 LDP X26, X25, [X31 + 0x10]
	0x03D37098 MOV X0, X27
	0x03D3709C LDP X30, X27, [X31], #0x50
	0x03D370A0 RET
	0x03D370A4 BL 0x1C16F20
	0x03D370A8 STP X30, X21, [X31 - 0x20]!
	0x03D370AC STP X20, X19, [X31 + 0x10]
	0x03D370B0 LDR X8, [X2]
	0x03D370B4 MOV X19, X3
	0x03D370B8 MOV X21, X2
	0x03D370BC MOV X20, X1
	0x03D370C0 CBZ X8, 0x3D370D8
	0x03D370C4 CBZ X20, 0x3D3713C
	0x03D370C8 STR X8, [X20 + 0x20]
	0x03D370CC LDR X8, [X21]
	0x03D370D0 CBZ X8, 0x3D3713C
	0x03D370D4 STR X20, [X8 + 0x28]
	0x03D370D8 LDR X8, [X19]
	0x03D370DC CBZ X8, 0x3D370F8
	0x03D370E0 CBZ X20, 0x3D3713C
	0x03D370E4 STR X8, [X20 + 0x28]
	0x03D370E8 LDR X8, [X19]
	0x03D370EC CBZ X8, 0x3D3713C
	0x03D370F0 STR X20, [X8 + 0x20]
	0x03D370F4 B 0x3D370FC
	0x03D370F8 CBZ X20, 0x3D3713C
	0x03D370FC LDR X8, [X20 + 0x18]
	0x03D37100 CBZ X8, 0x3D3713C
	0x03D37104 LDR X9, [X8 + 0xC8]
	0x03D37108 STR X20, [X8 + 0xD0]
	0x03D3710C CBNZ X9, 0x3D37114
	0x03D37110 STR X20, [X8 + 0xC8]
	0x03D37114 CBZ X0, 0x3D3713C
	0x03D37118 MOV X1, X20
	0x03D3711C MOV X2, X31
	0x03D37120 BL 0x3D269FC
	0x03D37124 STR X20, [X21]
	0x03D37128 LDR X8, [X20 + 0x28]
	0x03D3712C STR X8, [X19]
	0x03D37130 LDP X20, X19, [X31 + 0x10]
	0x03D37134 LDP X30, X21, [X31], #0x20
	0x03D37138 RET
	0x03D3713C BL 0x1C16F20
	0x03D37140 STR X30, [X31 - 0x40]!
	0x03D37144 STP X24, X23, [X31 + 0x10]
	0x03D37148 STP X22, X21, [X31 + 0x20]
	0x03D3714C STP X20, X19, [X31 + 0x30]
	0x03D37150 ADRP X22, 0x6B0000
	0x03D37154 LDRB W8, [X22 + 0xB53]
	0x03D37158 MOV X19, X2
	0x03D3715C MOV X20, X1
	0x03D37160 MOV X21, X0
	0x03D37164 TBNZ X8, 0x0, 0x3D3717C
	0x03D37168 ADRP X0, 0x42E000
	0x03D3716C LDR X0, [X0 + 0xF8]
	0x03D37170 BL 0x1C16CF4
	0x03D37174 MOVZ W8, 0x1
	0x03D37178 STRB W8, [X22 + 0xB53]
	0x03D3717C CBZ X21, 0x3D372A0
	0x03D37180 MOV X22, X21
	0x03D37184 LDR X22, [X22 + 0x90]
	0x03D37188 CBZ X22, 0x3D3725C
	0x03D3718C LDR X8, [X22 + 0xC8]
	0x03D37190 CBZ X8, 0x3D37184
	0x03D37194 LDR X8, [X22 + 0x378]
	0x03D37198 ADD X0, X31, 0x8
	0x03D3719C MOV X1, X31
	0x03D371A0 STR X8, [X31 + 0x8]
	0x03D371A4 BL 0x3DF88DC
	0x03D371A8 LDR X8, [X21 + 0x378]
	0x03D371AC MOV X23, X0
	0x03D371B0 ADD X0, X31, 0x8
	0x03D371B4 MOV X1, X31
	0x03D371B8 STR X8, [X31 + 0x8]
	0x03D371BC BL 0x3DF88DC
	0x03D371C0 CMP X23, X0
	0x03D371C4 B.EQ 0x3D37288
	0x03D371C8 ADRP X23, 0x42E000
	0x03D371CC LDR X23, [X23 + 0xF8]
	0x03D371D0 LDR X0, [X23]
	0x03D371D4 LDR W8, [X0 + 0xE0]
	0x03D371D8 CBNZ W8, 0x3D371E0
	0x03D371DC BL 0x1C16DFC
	0x03D371E0 MOV X0, X21
	0x03D371E4 MOV X1, X22
	0x03D371E8 BL 0x3D35504
	0x03D371EC TBZ X0, 0x0, 0x3D3725C
	0x03D371F0 MOV X9, X31
	0x03D371F4 LDR X8, [X22 + 0xE0]
	0x03D371F8 CBZ X8, 0x3D37204
	0x03D371FC STR X8, [X20]
	0x03D37200 B 0x3D37210
	0x03D37204 LDR X8, [X22 + 0xD0]
	0x03D37208 STR X8, [X20]
	0x03D3720C CBZ X8, 0x3D372A0
	0x03D37210 LDR X24, [X8 + 0x28]
	0x03D37214 CMP X24, 0x0
	0x03D37218 CSEL X9, X9, X24, EQ
	0x03D3721C CBZ X24, 0x3D37268
	0x03D37220 CBZ X9, 0x3D372A0
	0x03D37224 LDR X22, [X9 + 0x18]
	0x03D37228 CBZ X22, 0x3D37268
	0x03D3722C LDR X0, [X23]
	0x03D37230 LDR W8, [X0 + 0xE0]
	0x03D37234 CBNZ W8, 0x3D3723C
	0x03D37238 BL 0x1C16DFC
	0x03D3723C MOV X0, X21
	0x03D37240 MOV X1, X22
	0x03D37244 BL 0x3D35504
	0x03D37248 MOV X9, X24
	0x03D3724C TBNZ X0, 0x0, 0x3D371F4
	0x03D37250 LDR X8, [X20]
	0x03D37254 CBNZ X8, 0x3D37268
	0x03D37258 B 0x3D372A0
	0x03D3725C LDR X8, [X21 + 0xD0]
	0x03D37260 STR X8, [X20]
	0x03D37264 CBZ X8, 0x3D372A0
	0x03D37268 ADD X8, X8, 0x28
	0x03D3726C LDR X8, [X8]
	0x03D37270 LDP X22, X21, [X31 + 0x20]
	0x03D37274 LDP X24, X23, [X31 + 0x10]
	0x03D37278 STR X8, [X19]
	0x03D3727C LDP X20, X19, [X31 + 0x30]
	0x03D37280 LDR X30, [X31], #0x40
	0x03D37284 RET
	0x03D37288 LDR X8, [X22 + 0xC8]
	0x03D3728C STR X8, [X19]
	0x03D37290 CBZ X8, 0x3D372A0
	0x03D37294 ADD X8, X8, 0x20
	0x03D37298 MOV X19, X20
	0x03D3729C B 0x3D3726C
	0x03D372A0 BL 0x1C16F20
	0x03D372A4 STP X30, X23, [X31 - 0x30]!
	0x03D372A8 STP X22, X21, [X31 + 0x10]
	0x03D372AC STP X20, X19, [X31 + 0x20]
	0x03D372B0 ADRP X23, 0x6B0000
	0x03D372B4 LDRB W8, [X23 + 0xB54]
	0x03D372B8 MOV X19, X3
	0x03D372BC MOV X21, X2
	0x03D372C0 MOV X20, X1
	0x03D372C4 MOV X22, X0
	0x03D372C8 TBNZ X8, 0x0, 0x3D372E0
	0x03D372CC ADRP X0, 0x3BC000
	0x03D372D0 LDR X0, [X0 + 0xA28]
	0x03D372D4 BL 0x1C16CF4
	0x03D372D8 MOVZ W8, 0x1
	0x03D372DC STRB W8, [X23 + 0xB54]
	0x03D372E0 CBZ X20, 0x3D37388
	0x03D372E4 ADRP X8, 0x3BC000
	0x03D372E8 LDR X8, [X8 + 0xA28]
	0x03D372EC LDRB W23, [X20 + 0x30]
	0x03D372F0 LDR X0, [X8]
	0x03D372F4 LDR W8, [X0 + 0xE0]
	0x03D372F8 CBNZ W8, 0x3D37300
	0x03D372FC BL 0x1C16DFC
	0x03D37300 CMP W23, 0x0
	0x03D37304 CSET W0, NE
	0x03D37308 MOV X1, X31
	0x03D3730C BL 0x3C06E58
	0x03D37310 LDR X8, [X21]
	0x03D37314 CBZ X8, 0x3D37328
	0x03D37318 STR X8, [X20 + 0x20]
	0x03D3731C LDR X8, [X21]
	0x03D37320 CBZ X8, 0x3D37388
	0x03D37324 STR X20, [X8 + 0x28]
	0x03D37328 LDR X8, [X19]
	0x03D3732C CBZ X8, 0x3D37340
	0x03D37330 STR X8, [X20 + 0x28]
	0x03D37334 LDR X8, [X19]
	0x03D37338 CBZ X8, 0x3D37388
	0x03D3733C STR X20, [X8 + 0x20]
	0x03D37340 LDR X8, [X20 + 0x18]
	0x03D37344 CBZ X8, 0x3D37388
	0x03D37348 LDR X9, [X8 + 0xD8]
	0x03D3734C STR X20, [X8 + 0xE0]
	0x03D37350 CBNZ X9, 0x3D37358
	0x03D37354 STR X20, [X8 + 0xD8]
	0x03D37358 CBZ X22, 0x3D37388
	0x03D3735C MOV X0, X22
	0x03D37360 MOV X1, X20
	0x03D37364 MOV X2, X31
	0x03D37368 BL 0x3D269FC
	0x03D3736C STR X20, [X21]
	0x03D37370 LDR X8, [X20 + 0x28]
	0x03D37374 LDP X22, X21, [X31 + 0x10]
	0x03D37378 STR X8, [X19]
	0x03D3737C LDP X20, X19, [X31 + 0x20]
	0x03D37380 LDP X30, X23, [X31], #0x30
	0x03D37384 RET
	0x03D37388 BL 0x1C16F20
	0x03D3738C STR X30, [X31 - 0x20]!
	0x03D37390 STP X20, X19, [X31 + 0x10]
	0x03D37394 ADRP X20, 0x6B0000
	0x03D37398 LDRB W8, [X20 + 0xB4A]
	0x03D3739C MOV W19, W0
	0x03D373A0 TBNZ X8, 0x0, 0x3D373E8
	0x03D373A4 ADRP X0, 0x42E000
	0x03D373A8 LDR X0, [X0 + 0xF8]
	0x03D373AC BL 0x1C16CF4
	0x03D373B0 ADRP X0, 0x3BC000
	0x03D373B4 LDR X0, [X0 + 0xA28]
	0x03D373B8 BL 0x1C16CF4
	0x03D373BC ADRP X0, 0x3BC000
	0x03D373C0 LDR X0, [X0 + 0x598]
	0x03D373C4 BL 0x1C16CF4
	0x03D373C8 ADRP X0, 0x42E000
	0x03D373CC LDR X0, [X0 + 0x168]
	0x03D373D0 BL 0x1C16CF4
	0x03D373D4 ADRP X0, 0x42E000
	0x03D373D8 LDR X0, [X0 + 0x170]
	0x03D373DC BL 0x1C16CF4
	0x03D373E0 MOVZ W8, 0x1
	0x03D373E4 STRB W8, [X20 + 0xB4A]
	0x03D373E8 CMP W19, 0x1
	0x03D373EC B.EQ 0x3D3749C
	0x03D373F0 CMP W19, 0x2
	0x03D373F4 B.EQ 0x3D37538
	0x03D373F8 CMP W19, 0x3
	0x03D373FC B.NE 0x3D375D4
	0x03D37400 ADRP X20, 0x42E000
	0x03D37404 LDR X20, [X20 + 0xF8]
	0x03D37408 LDR X0, [X20]
	0x03D3740C LDR W8, [X0 + 0xE0]
	0x03D37410 CBNZ W8, 0x3D3741C
	0x03D37414 BL 0x1C16DFC
	0x03D37418 LDR X0, [X20]
	0x03D3741C ADRP X8, 0x3BC000
	0x03D37420 LDR X8, [X8 + 0x598]
	0x03D37424 LDR X9, [X0 + 0xB8]
	0x03D37428 LDR X8, [X8]
	0x03D3742C LDR X19, [X9 + 0x38]
	0x03D37430 LDR W10, [X8 + 0xE0]
	0x03D37434 CBNZ W10, 0x3D37440
	0x03D37438 MOV X0, X8
	0x03D3743C BL 0x1C16DFC
	0x03D37440 MOV X0, X19
	0x03D37444 MOV X1, X31
	0x03D37448 MOV X2, X31
	0x03D3744C BL 0x3C3883C
	0x03D37450 LDR X8, [X20]
	0x03D37454 TBZ X0, 0x0, 0x3D3747C
	0x03D37458 LDR W9, [X8 + 0xE0]
	0x03D3745C CBNZ W9, 0x3D37468
	0x03D37460 MOV X0, X8
	0x03D37464 BL 0x1C16DFC
	0x03D37468 FMOV S0, -1
	0x03D3746C BL 0x3D37724
	0x03D37470 LDR X8, [X20]
	0x03D37474 LDR X9, [X8 + 0xB8]
	0x03D37478 STR X0, [X9 + 0x38]
	0x03D3747C LDR W9, [X8 + 0xE0]
	0x03D37480 CBNZ W9, 0x3D37490
	0x03D37484 MOV X0, X8
	0x03D37488 BL 0x1C16DFC
	0x03D3748C LDR X8, [X20]
	0x03D37490 LDR X8, [X8 + 0xB8]
	0x03D37494 LDR X0, [X8 + 0x38]
	0x03D37498 B 0x3D37638
	0x03D3749C ADRP X20, 0x42E000
	0x03D374A0 LDR X20, [X20 + 0xF8]
	0x03D374A4 LDR X0, [X20]
	0x03D374A8 LDR W8, [X0 + 0xE0]
	0x03D374AC CBNZ W8, 0x3D374B8
	0x03D374B0 BL 0x1C16DFC
	0x03D374B4 LDR X0, [X20]
	0x03D374B8 ADRP X8, 0x3BC000
	0x03D374BC LDR X8, [X8 + 0x598]
	0x03D374C0 LDR X9, [X0 + 0xB8]
	0x03D374C4 LDR X8, [X8]
	0x03D374C8 LDR X19, [X9 + 0x40]
	0x03D374CC LDR W10, [X8 + 0xE0]
	0x03D374D0 CBNZ W10, 0x3D374DC
	0x03D374D4 MOV X0, X8
	0x03D374D8 BL 0x1C16DFC
	0x03D374DC MOV X0, X19
	0x03D374E0 MOV X1, X31
	0x03D374E4 MOV X2, X31
	0x03D374E8 BL 0x3C3883C
	0x03D374EC LDR X8, [X20]
	0x03D374F0 TBZ X0, 0x0, 0x3D37518
	0x03D374F4 LDR W9, [X8 + 0xE0]
	0x03D374F8 CBNZ W9, 0x3D37504
	0x03D374FC MOV X0, X8
	0x03D37500 BL 0x1C16DFC
	0x03D37504 FMOV S0, W31
	0x03D37508 BL 0x3D37724
	0x03D3750C LDR X8, [X20]
	0x03D37510 LDR X9, [X8 + 0xB8]
	0x03D37514 STR X0, [X9 + 0x40]
	0x03D37518 LDR W9, [X8 + 0xE0]
	0x03D3751C CBNZ W9, 0x3D3752C
	0x03D37520 MOV X0, X8
	0x03D37524 BL 0x1C16DFC
	0x03D37528 LDR X8, [X20]
	0x03D3752C LDR X8, [X8 + 0xB8]
	0x03D37530 LDR X0, [X8 + 0x40]
	0x03D37534 B 0x3D37638
	0x03D37538 ADRP X20, 0x42E000
	0x03D3753C LDR X20, [X20 + 0xF8]
	0x03D37540 LDR X0, [X20]
	0x03D37544 LDR W8, [X0 + 0xE0]
	0x03D37548 CBNZ W8, 0x3D37554
	0x03D3754C BL 0x1C16DFC
	0x03D37550 LDR X0, [X20]
	0x03D37554 ADRP X8, 0x3BC000
	0x03D37558 LDR X8, [X8 + 0x598]
	0x03D3755C LDR X9, [X0 + 0xB8]
	0x03D37560 LDR X8, [X8]
	0x03D37564 LDR X19, [X9 + 0x30]
	0x03D37568 LDR W10, [X8 + 0xE0]
	0x03D3756C CBNZ W10, 0x3D37578
	0x03D37570 MOV X0, X8
	0x03D37574 BL 0x1C16DFC
	0x03D37578 MOV X0, X19
	0x03D3757C MOV X1, X31
	0x03D37580 MOV X2, X31
	0x03D37584 BL 0x3C3883C
	0x03D37588 LDR X8, [X20]
	0x03D3758C TBZ X0, 0x0, 0x3D375B4
	0x03D37590 LDR W9, [X8 + 0xE0]
	0x03D37594 CBNZ W9, 0x3D375A0
	0x03D37598 MOV X0, X8
	0x03D3759C BL 0x1C16DFC
	0x03D375A0 FMOV S0, 1
	0x03D375A4 BL 0x3D37724
	0x03D375A8 LDR X8, [X20]
	0x03D375AC LDR X9, [X8 + 0xB8]
	0x03D375B0 STR X0, [X9 + 0x30]
	0x03D375B4 LDR W9, [X8 + 0xE0]
	0x03D375B8 CBNZ W9, 0x3D375C8
	0x03D375BC MOV X0, X8
	0x03D375C0 BL 0x1C16DFC
	0x03D375C4 LDR X8, [X20]
	0x03D375C8 LDR X8, [X8 + 0xB8]
	0x03D375CC LDR X0, [X8 + 0x30]
	0x03D375D0 B 0x3D37638
	0x03D375D4 ADRP X8, 0x42E000
	0x03D375D8 LDR X8, [X8 + 0x168]
	0x03D375DC ADD X1, X31, 0xC
	0x03D375E0 STR W19, [X31 + 0xC]
	0x03D375E4 LDR X0, [X8]
	0x03D375E8 BL 0x1C16E04
	0x03D375EC ADRP X8, 0x42E000
	0x03D375F0 LDR X8, [X8 + 0x170]
	0x03D375F4 MOV X1, X0
	0x03D375F8 MOV X2, X31
	0x03D375FC LDR X8, [X8]
	0x03D37600 MOV X0, X8
	0x03D37604 BL 0x321EFD0
	0x03D37608 ADRP X8, 0x3BC000
	0x03D3760C LDR X8, [X8 + 0xA28]
	0x03D37610 MOV X19, X0
	0x03D37614 LDR X8, [X8]
	0x03D37618 LDR W9, [X8 + 0xE0]
	0x03D3761C CBNZ W9, 0x3D37628
	0x03D37620 MOV X0, X8
	0x03D37624 BL 0x1C16DFC
	0x03D37628 MOV X0, X19
	0x03D3762C MOV X1, X31
	0x03D37630 BL 0x3C0649C
	0x03D37634 MOV X0, X31
	0x03D37638 LDP X20, X19, [X31 + 0x10]
	0x03D3763C LDR X30, [X31], #0x20
	0x03D37640 RET
	0x03D37644 STP X30, X27, [X31 - 0x50]!
	0x03D37648 STP X26, X25, [X31 + 0x10]
	0x03D3764C STP X24, X23, [X31 + 0x20]
	0x03D37650 STP X22, X21, [X31 + 0x30]
	0x03D37654 STP X20, X19, [X31 + 0x40]
	0x03D37658 ADRP X27, 0x6B0000
	0x03D3765C LDRB W8, [X27 + 0xB51]
	0x03D37660 MOV X26, X7
	0x03D37664 MOV W23, W6
	0x03D37668 MOV W22, W5
	0x03D3766C MOV X25, X4
	0x03D37670 MOV X19, X3
	0x03D37674 MOV X20, X2
	0x03D37678 MOV X24, X1
	0x03D3767C MOV X21, X0
	0x03D37680 TBNZ X8, 0x0, 0x3D37698
	0x03D37684 ADRP X0, 0x42E000
	0x03D37688 LDR X0, [X0 + 0xF8]
	0x03D3768C BL 0x1C16CF4
	0x03D37690 MOVZ W8, 0x1
	0x03D37694 STRB W8, [X27 + 0xB51]
	0x03D37698 CBZ X21, 0x3D37720
	0x03D3769C MOV X0, X21
	0x03D376A0 MOV X1, X31
	0x03D376A4 BL 0x3D268E4
	0x03D376A8 CBZ X0, 0x3D37720
	0x03D376AC LDR W8, [X31 + 0x58]
	0x03D376B0 LDR W9, [X31 + 0x50]
	0x03D376B4 ADRP X10, 0x42E000
	0x03D376B8 LDR X10, [X10 + 0xF8]
	0x03D376BC MOVZ W11, 0x1
	0x03D376C0 STR W31, [X0 + 0x34]
	0x03D376C4 STR X26, [X0 + 0x38]
	0x03D376C8 STP X31, X25, [X0 + 0x48]
	0x03D376CC STP W23, W22, [X0 + 0x58]
	0x03D376D0 STRB W11, [X0 + 0x30]
	0x03D376D4 STP W9, W8, [X0 + 0x40]
	0x03D376D8 STR X24, [X0 + 0x18]
	0x03D376DC MOV X27, X0
	0x03D376E0 LDR X0, [X10]
	0x03D376E4 LDR W8, [X0 + 0xE0]
	0x03D376E8 CBNZ W8, 0x3D376F0
	0x03D376EC BL 0x1C16DFC
	0x03D376F0 MOV X0, X21
	0x03D376F4 MOV X1, X27
	0x03D376F8 MOV X2, X20
	0x03D376FC MOV X3, X19
	0x03D37700 BL 0x3D372A4
	0x03D37704 LDP X20, X19, [X31 + 0x40]
	0x03D37708 LDP X22, X21, [X31 + 0x30]
	0x03D3770C LDP X24, X23, [X31 + 0x20]
	0x03D37710 LDP X26, X25, [X31 + 0x10]
	0x03D37714 MOV X0, X27
	0x03D37718 LDP X30, X27, [X31], #0x50
	0x03D3771C RET
	0x03D37720 BL 0x1C16F20
	0x03D37724 STR D8, [X31 - 0x40]!
	0x03D37728 STP X30, X23, [X31 + 0x10]
	0x03D3772C STP X22, X21, [X31 + 0x20]
	0x03D37730 STP X20, X19, [X31 + 0x30]
	0x03D37734 ADRP X19, 0x6B0000
	0x03D37738 ADRP X20, 0x42E000
	0x03D3773C LDRB W8, [X19 + 0xB49]
	0x03D37740 LDR X20, [X20 + 0xF8]
	0x03D37744 MOV V8.16B, V0.16B
	0x03D37748 TBNZ X8, 0x0, 0x3D377A8
	0x03D3774C ADRP X0, 0x42E000
	0x03D37750 LDR X0, [X0 + 0xF8]
	0x03D37754 BL 0x1C16CF4
	0x03D37758 ADRP X0, 0x3BC000
	0x03D3775C LDR X0, [X0 + 0xA28]
	0x03D37760 BL 0x1C16CF4
	0x03D37764 ADRP X0, 0x3C0000
	0x03D37768 LDR X0, [X0 + 0xCA0]
	0x03D3776C BL 0x1C16CF4
	0x03D37770 ADRP X0, 0x3BC000
	0x03D37774 LDR X0, [X0 + 0x598]
	0x03D37778 BL 0x1C16CF4
	0x03D3777C ADRP X0, 0x42D000
	0x03D37780 LDR X0, [X0 + 0xA40]
	0x03D37784 BL 0x1C16CF4
	0x03D37788 ADRP X0, 0x42E000
	0x03D3778C LDR X0, [X0 + 0x178]
	0x03D37790 BL 0x1C16CF4
	0x03D37794 ADRP X0, 0x42E000
	0x03D37798 LDR X0, [X0 + 0x180]
	0x03D3779C BL 0x1C16CF4
	0x03D377A0 MOVZ W8, 0x1
	0x03D377A4 STRB W8, [X19 + 0xB49]
	0x03D377A8 LDR X0, [X20]
	0x03D377AC ADRP X21, 0x3BC000
	0x03D377B0 LDR W8, [X0 + 0xE0]
	0x03D377B4 LDR X21, [X21 + 0x598]
	0x03D377B8 CBNZ W8, 0x3D377C4
	0x03D377BC BL 0x1C16DFC
	0x03D377C0 LDR X0, [X20]
	0x03D377C4 LDR X8, [X21]
	0x03D377C8 LDR X9, [X0 + 0xB8]
	0x03D377CC LDR W10, [X8 + 0xE0]
	0x03D377D0 LDR X19, [X9 + 0x48]
	0x03D377D4 CBNZ W10, 0x3D377E0
	0x03D377D8 MOV X0, X8
	0x03D377DC BL 0x1C16DFC
	0x03D377E0 MOV X0, X19
	0x03D377E4 MOV X1, X31
	0x03D377E8 MOV X2, X31
	0x03D377EC BL 0x3C3883C
	0x03D377F0 TBZ X0, 0x0, 0x3D37848
	0x03D377F4 ADRP X19, 0x42D000
	0x03D377F8 LDR X19, [X19 + 0xA40]
	0x03D377FC LDR X0, [X19]
	0x03D37800 LDR W8, [X0 + 0xE0]
	0x03D37804 CBNZ W8, 0x3D37810
	0x03D37808 BL 0x1C16DFC
	0x03D3780C LDR X0, [X19]
	0x03D37810 LDR X8, [X0 + 0xB8]
	0x03D37814 MOV X1, X31
	0x03D37818 LDR X0, [X8 + 0x28]
	0x03D3781C BL 0x3C13E40
	0x03D37820 LDR X8, [X20]
	0x03D37824 MOV X19, X0
	0x03D37828 LDR W9, [X8 + 0xE0]
	0x03D3782C CBNZ W9, 0x3D3783C
	0x03D37830 MOV X0, X8
	0x03D37834 BL 0x1C16DFC
	0x03D37838 LDR X8, [X20]
	0x03D3783C LDR X9, [X8 + 0xB8]
	0x03D37840 STR X19, [X9 + 0x48]
	0x03D37844 B 0x3D3784C
	0x03D37848 LDR X8, [X20]
	0x03D3784C LDR W9, [X8 + 0xE0]
	0x03D37850 CBNZ W9, 0x3D37860
	0x03D37854 MOV X0, X8
	0x03D37858 BL 0x1C16DFC
	0x03D3785C LDR X8, [X20]
	0x03D37860 LDR X0, [X21]
	0x03D37864 LDR X8, [X8 + 0xB8]
	0x03D37868 ADRP X23, 0x3BC000
	0x03D3786C LDR W9, [X0 + 0xE0]
	0x03D37870 LDR X19, [X8 + 0x48]
	0x03D37874 LDR X23, [X23 + 0xA28]
	0x03D37878 CBNZ W9, 0x3D37880
	0x03D3787C BL 0x1C16DFC
	0x03D37880 ADRP X22, 0x42E000
	0x03D37884 ADRP X21, 0x3C0000
	0x03D37888 LDR X22, [X22 + 0x178]
	0x03D3788C LDR X21, [X21 + 0xCA0]
	0x03D37890 MOV X0, X19
	0x03D37894 MOV X1, X31
	0x03D37898 MOV X2, X31
	0x03D3789C BL 0x3C354F8
	0x03D378A0 LDR X8, [X23]
	0x03D378A4 MOV W19, W0
	0x03D378A8 LDR W9, [X8 + 0xE0]
	0x03D378AC CBNZ W9, 0x3D378B8
	0x03D378B0 MOV X0, X8
	0x03D378B4 BL 0x1C16DFC
	0x03D378B8 LDR X1, [X22]
	0x03D378BC AND W0, W19, 0x1
	0x03D378C0 MOV X2, X31
	0x03D378C4 BL 0x3C06F88
	0x03D378C8 LDR X8, [X20]
	0x03D378CC LDR X0, [X21]
	0x03D378D0 LDR X8, [X8 + 0xB8]
	0x03D378D4 LDR X20, [X8 + 0x48]
	0x03D378D8 BL 0x1C16F10
	0x03D378DC MOV X1, X20
	0x03D378E0 MOV X2, X31
	0x03D378E4 MOV X19, X0
	0x03D378E8 BL 0x3C1454C
	0x03D378EC CBZ X19, 0x3D37940
	0x03D378F0 ADRP X20, 0x42E000
	0x03D378F4 LDR X20, [X20 + 0x180]
	0x03D378F8 MOV X0, X19
	0x03D378FC MOV X1, X31
	0x03D37900 BL 0x3C396B0
	0x03D37904 ORR W1, W0, 0x4
	0x03D37908 MOV X0, X19
	0x03D3790C MOV X2, X31
	0x03D37910 BL 0x3C396EC
	0x03D37914 LDR X1, [X20]
	0x03D37918 MOV X0, X19
	0x03D3791C MOV V0.16B, V8.16B
	0x03D37920 MOV X2, X31
	0x03D37924 BL 0x3C15C58
	0x03D37928 MOV X0, X19
	0x03D3792C LDP X20, X19, [X31 + 0x30]
	0x03D37930 LDP X22, X21, [X31 + 0x20]
	0x03D37934 LDP X30, X23, [X31 + 0x10]
	0x03D37938 LDR V8, [X31], #0x40
	0x03D3793C RET
	0x03D37940 BL 0x1C16F20
	0x03D37944 SUB X31, X31, 0xD0
	0x03D37948 STP X29, X30, [X31 + 0x70]
	0x03D3794C STP X28, X27, [X31 + 0x80]
	0x03D37950 STP X26, X25, [X31 + 0x90]
	0x03D37954 STP X24, X23, [X31 + 0xA0]
	0x03D37958 STP X22, X21, [X31 + 0xB0]
	0x03D3795C STP X20, X19, [X31 + 0xC0]
	0x03D37960 ADRP X23, 0x6B0000
	0x03D37964 ADRP X27, 0x42D000
	0x03D37968 LDRB W8, [X23 + 0xB4B]
	0x03D3796C LDR X27, [X27 + 0xFB8]
	0x03D37970 MOV X22, X3
	0x03D37974 MOV X20, X2
	0x03D37978 MOV X19, X1
	0x03D3797C MOV X21, X0
	0x03D37980 TBNZ X8, 0x0, 0x3D379C8
	0x03D37984 ADRP X0, 0x42E000
	0x03D37988 LDR X0, [X0 + 0xF8]
	0x03D3798C BL 0x1C16CF4
	0x03D37990 ADRP X0, 0x42E000
	0x03D37994 LDR X0, [X0 + 0x138]
	0x03D37998 BL 0x1C16CF4
	0x03D3799C ADRP X0, 0x42E000
	0x03D379A0 LDR X0, [X0 + 0x140]
	0x03D379A4 BL 0x1C16CF4
	0x03D379A8 ADRP X0, 0x42E000
	0x03D379AC LDR X0, [X0 + 0x148]
	0x03D379B0 BL 0x1C16CF4
	0x03D379B4 ADRP X0, 0x42D000
	0x03D379B8 LDR X0, [X0 + 0xFB8]

ISIL:
	001 Move [X31-112], D9
	002 Move [X31-104], D8
	003 Move [X31+16], X29
	004 Move [X31+24], X30
	005 Move [X31+32], X28
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Subtract X31, X31, 1120
	016 Move X19, 0x6B2000
	017 Move X20, X8
	018 Move W8, [X19+2887]
	019 Move X25, X2
	020 Move [X31+200], X0
	021 Move [X31+208], X1
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {88}
	026 Move X0, 0x430000
	027 Move X0, [X0+248]
	028 Call 0x1C17CF4
	029 Move X0, 0x3BE000
	030 Move X0, [X0+2600]
	031 Call 0x1C17CF4
	032 Move X0, 0x430000
	033 Move X0, [X0+256]
	034 Call 0x1C17CF4
	035 Move X0, 0x430000
	036 Move X0, [X0+264]
	037 Call 0x1C17CF4
	038 Move X0, 0x430000
	039 Move X0, [X0+272]
	040 Call 0x1C17CF4
	041 Move X0, 0x430000
	042 Move X0, [X0+280]
	043 Call 0x1C17CF4
	044 Move X0, 0x430000
	045 Move X0, [X0+288]
	046 Call 0x1C17CF4
	047 Move X0, 0x430000
	048 Move X0, [X0+296]
	049 Call 0x1C17CF4
	050 Move X0, 0x430000
	051 Move X0, [X0+304]
	052 Call 0x1C17CF4
	053 Move X0, 0x430000
	054 Move X0, [X0+312]
	055 Call 0x1C17CF4
	056 Move X0, 0x430000
	057 Move X0, [X0+320]
	058 Call 0x1C17CF4
	059 Move X0, 0x430000
	060 Move X0, [X0+328]
	061 Call 0x1C17CF4
	062 Move X0, 0x42F000
	063 Move X0, [X0+4024]
	064 Call 0x1C17CF4
	065 Move X0, 0x3BE000
	066 Move X0, [X0+1432]
	067 Call 0x1C17CF4
	068 Move X0, 0x3E6000
	069 Move X0, [X0+1568]
	070 Call 0x1C17CF4
	071 Move X0, 0x3E8000
	072 Move X0, [X0+576]
	073 Call 0x1C17CF4
	074 Move X0, 0x42F000
	075 Move X0, [X0+1888]
	076 Call 0x1C17CF4
	077 Move X0, 0x3C6000
	078 Move X0, [X0+1824]
	079 Call 0x1C17CF4
	080 Move X0, 0x430000
	081 Move X0, [X0+336]
	082 Call 0x1C17CF4
	083 Move X0, 0x430000
	084 Move X0, [X0+344]
	085 Call 0x1C17CF4
	086 Move W8, 1
	087 Move [X19+2887], W8
	088 NotImplemented "Instruction MOVI not yet implemented."
	089 Add X8, X31, 704
	090 Add X0, X31, 488
	091 Move W2, 152
	092 Move W1, W31
	093 Move [X31+1112], X31
	094 Move [X31+1104], X31
	095 Move [X31+1040], X31
	096 Move [X31+976], X31
	097 Move [X31+920], X31
	098 Move [X31+912], X31
	099 Move [X31+904], X31
	100 Move [X31+896], X31
	101 NotImplemented "Instruction STRH not yet implemented."
	102 Move [X31+880], X31
	103 Move [X31+872], X31
	104 Move [X31+696], X31
	105 Move [X31+688], X31
	106 Move [X31+680], X31
	107 Move [X31+672], X31
	108 Move [X31+664], X31
	109 Move [X31+656], X31
	110 Move [X8+368], V0
	111 Move [X8+376], V0
	112 Move [X8+22], V0
	113 Move [X8+304], V0
	114 Move [X8+312], V0
	115 Move [X8+18], V0
	116 Move [X8+240], V0
	117 Move [X8+248], V0
	118 Move [X8+14], V0
	119 Move [X8+128], V0
	120 Move [X8+136], V0
	121 Move [X8+96], V0
	122 Move [X8+104], V0
	123 Move [X8+64], V0
	124 Move [X8+72], V0
	125 Move [X8+32], V0
	126 Move [X8+40], V0
	127 Move [X8], V0
	128 Move [X8+8], V0
	129 Move [X31+648], X31
	130 Move [X31+640], X31
	131 Call 0x3EB2B10
	132 Add X0, X31, 328
	133 Move W2, 152
	134 Move W1, W31
	135 Move [X31+480], W31
	136 Call 0x3EB2B10
	137 Move X8, [X31+200]
	138 Move [X31+312], X31
	139 Move [X31+320], X31
	140 Compare X8, 0
	141 JumpIfEqual {1378}
	142 Move X19, [X31+208]
	143 Compare X19, 0
	144 JumpIfEqual {1378}
	145 Move X8, [X31+200]
	146 Move X22, 0x3E8000
	147 Move W21, [X19+240]
	148 Move X0, X19
	149 Move X8, [X8+272]
	150 Move X1, X31
	151 Move [X31+160], X8
	152 Move X22, [X22+576]
	153 Call VisualElement.get_renderHints, X0
	154 Move X8, [X22]
	155 Move W22, W0
	156 Move W9, [X8+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {161}
	159 Move X0, X8
	160 Call 0x1C17DFC
	161 Move X0, X19
	162 Move X1, X31
	163 Call UIRUtility.IsElementSelfHidden, X0
	164 Move TEMP, X22
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfEqual {174}
	168 NotImplemented "Instruction CMP not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfEqual {178}
	174 Move X8, [X31+208]
	175 Move W8, [X8+233]
	176 Compare W8, 0
	177 JumpIfEqual {236}
	178 Move X19, [X31+208]
	179 Move X1, [X19+256]
	180 Compare X1, 0
	181 JumpIfEqual {188}
	182 Move X0, [X31+160]
	183 Compare X0, 0
	184 JumpIfEqual {1378}
	185 Call UIRenderDevice.Free, X0, X1
	186 Move X19, [X31+208]
	187 Move [X19+256], X31
	188 Move X8, [X19+200]
	189 Compare X8, 0
	190 JumpIfEqual {202}
	191 Move X8, 0x430000
	192 Move X8, [X8+248]
	193 Move X0, [X8]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X0, [X31+200]
	199 Move X19, [X31+208]
	200 Move X1, X19
	201 Call CommandGenerator.ResetCommands, X0, X1
	202 Move X0, [X31+200]
	203 Move X1, X19
	204 Move X2, X31
	205 Call RenderChain.ResetTextures, X0, X1
	206 NotImplemented "Instruction MOVI not yet implemented."
	207 Add X19, X31, 704
	208 Move [X31+976], X31
	209 Move [X19+240], V0
	210 Move [X19+248], V0
	211 Move [X19+14], V0
	212 Move X8, [X31+976]
	213 Move V1, [X19+240]
	214 Move V0, [X19+256]
	215 Move V2, [X19+14]
	216 Move [X20+48], X8
	217 Move [X20+16], V1
	218 Move [X20+24], V0
	219 Move [X20], V2
	220 Add X31, X31, 1120
	221 Move X20, [X31+96]
	222 Move X19, [X31+104]
	223 Move X22, [X31+80]
	224 Move X21, [X31+88]
	225 Move X24, [X31+64]
	226 Move X23, [X31+72]
	227 Move X26, [X31+48]
	228 Move X25, [X31+56]
	229 Move X28, [X31+32]
	230 Move X27, [X31+40]
	231 Move X29, [X31+16]
	232 Move X30, [X31+24]
	233 Move D9, [X31+112]
	234 Move D8, [X31+120]
	235 Return X0
	236 Move X8, [X31+208]
	237 Move X8, [X8+200]
	238 Compare X8, 0
	239 JumpIfEqual {241}
	240 Move X19, [X8+32]
	241 Move X19, X31
	242 Move X8, [X31+208]
	243 Move [X31+112], X20
	244 Move X8, [X8+208]
	245 Compare X8, 0
	246 JumpIfEqual {248}
	247 Move X20, [X8+40]
	248 Move X20, X31
	249 Move X8, [X31+208]
	250 Move X8, [X8+216]
	251 Compare X8, 0
	252 JumpIfEqual {255}
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move X9, [X8+32]
	255 Move X9, X31
	256 Move X8, [X31+208]
	257 Move X8, [X8+224]
	258 Compare X8, 0
	259 JumpIfEqual {262}
	260 Move X8, [X8+40]
	261 Move [X31+144], X8
	262 Move [X31+144], X31
	263 Move W8, 1
	264 Move [X31+92], W8
	265 Move X8, [X31+208]
	266 Move X8, [X8+224]
	267 Compare X8, 0
	268 JumpIfEqual {1378}
	269 Move X20, [X8+40]
	270 Move [X31+92], W31
	271 Move [X31+144], X31
	272 Move X9, X31
	273 Move [X31+152], X9
	274 Compare X19, 0
	275 JumpIfEqual {277}
	276 Move X22, [X19+24]
	277 Move X22, X31
	278 Move X8, 0x3BE000
	279 Move X8, [X8+2600]
	280 Move X0, [X8]
	281 Move W8, [X0+224]
	282 Compare W8, 0
	283 JumpIfNotEqual {285}
	284 Call 0x1C17DFC
	285 Move X8, [X31+208]
	286 Move X1, X31
	287 NotImplemented "Instruction CMP not yet implemented."
	288 NotImplemented "Instruction CSET not yet implemented."
	289 Call Debug.Assert, X0
	290 Compare X20, 0
	291 JumpIfEqual {293}
	292 Move X22, [X20+24]
	293 Move X22, X31
	294 Move X8, 0x3BE000
	295 Move X8, [X8+2600]
	296 Move X0, [X8]
	297 Move W8, [X0+224]
	298 Compare W8, 0
	299 JumpIfNotEqual {301}
	300 Call 0x1C17DFC
	301 Move X8, [X31+208]
	302 Move X1, X31
	303 NotImplemented "Instruction CMP not yet implemented."
	304 NotImplemented "Instruction CSET not yet implemented."
	305 Call Debug.Assert, X0
	306 Move X8, [X31+152]
	307 Compare X8, 0
	308 JumpIfEqual {310}
	309 Move X22, [X8+24]
	310 Move X22, X31
	311 Move X8, 0x3BE000
	312 Move X8, [X8+2600]
	313 Move X0, [X8]
	314 Move W8, [X0+224]
	315 Compare W8, 0
	316 JumpIfNotEqual {318}
	317 Call 0x1C17DFC
	318 Move X8, [X31+208]
	319 Move X1, X31
	320 NotImplemented "Instruction CMP not yet implemented."
	321 NotImplemented "Instruction CSET not yet implemented."
	322 Call Debug.Assert, X0
	323 Move X8, [X31+144]
	324 Compare X8, 0
	325 JumpIfEqual {327}
	326 Move X22, [X8+24]
	327 Move X22, X31
	328 Move X8, 0x3BE000
	329 Move X8, [X8+2600]
	330 Move X0, [X8]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X23, [X31+208]
	336 Move X1, X31
	337 NotImplemented "Instruction CMP not yet implemented."
	338 NotImplemented "Instruction CSET not yet implemented."
	339 Call Debug.Assert, X0
	340 Move X8, 0x430000
	341 Move X8, [X8+248]
	342 Move X0, [X8]
	343 Move W8, [X0+224]
	344 Compare W8, 0
	345 JumpIfNotEqual {347}
	346 Call 0x1C17DFC
	347 Move X22, [X31+200]
	348 Move X1, X23
	349 Move X0, X22
	350 Call CommandGenerator.ResetCommands, X0, X1
	351 Move X0, X22
	352 Move X1, X23
	353 Move X2, X31
	354 Call RenderChain.ResetTextures, X0, X1
	355 Move X22, [X22+528]
	356 Compare X22, 0
	357 JumpIfEqual {1378}
	358 Move X0, X22
	359 Move X1, X23
	360 Move X2, X31
	361 Call UIRStylePainter.Begin, X0, X1
	362 Move X0, X23
	363 Move X1, X31
	364 Call VisualElement.get_visible, X0
	365 Move [X31+168], X22
	366 Move TEMP, X0
	367 And TEMP, TEMP, 1
	368 Compare TEMP, 1
	369 JumpIfNotEqual {390}
	370 Move X0, X22
	371 Move X1, X31
	372 Call UIRStylePainter.DrawVisualElementBackground, X0
	373 Move X0, X22
	374 Move X1, X31
	375 Call UIRStylePainter.DrawVisualElementBorder, X0
	376 Move X0, X22
	377 Move X1, X31
	378 Call UIRStylePainter.ApplyVisualElementClipping, X0
	379 Move X8, 0x430000
	380 Move X8, [X8+248]
	381 Move X22, [X22+264]
	382 Move X0, [X8]
	383 Move W8, [X0+224]
	384 Compare W8, 0
	385 JumpIfNotEqual {387}
	386 Call 0x1C17DFC
	387 Move X0, [X31+208]
	388 Move X1, X22
	389 Call CommandGenerator.InvokeGenerateVisualContent, X0, X1
	390 NotImplemented "Instruction CMP not yet implemented."
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move X0, [X31+168]
	393 Move X1, X31
	394 Call UIRStylePainter.ApplyVisualElementClipping, X0
	395 Move X8, [X31+208]
	396 Move X10, [X31+160]
	397 Move X22, [X8+256]
	398 Move [X31+1112], X22
	399 Compare X10, 0
	400 JumpIfEqual {1378}
	401 Move X8, [X31+168]
	402 NotImplemented "Instruction LDRSW not yet implemented."
	403 Move W8, [X10+168]
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Move X9, 0x3C6000
	406 Move X9, [X9+1824]
	407 Add X1, X31, 216
	408 Move [X31+216], W8
	409 Move X0, [X9]
	410 Call 0x1C17E04
	411 Move X8, 0x430000
	412 Move X8, [X8+336]
	413 Move X9, 0x430000
	414 Move X9, [X9+344]
	415 Move X2, X0
	416 Move X8, [X8]
	417 Move X3, X31
	418 Move X1, [X9]
	419 Move X0, X8
	420 Call String.Format, X0, X1, X2
	421 Move X8, 0x3BE000
	422 Move X8, [X8+2600]
	423 Move X24, X0
	424 Move X8, [X8]
	425 Move W9, [X8+224]
	426 Compare W9, 0
	427 JumpIfNotEqual {430}
	428 Move X0, X8
	429 Call 0x1C17DFC
	430 Move X0, X24
	431 Move X1, X31
	432 Call Debug.LogError, X0
	433 Compare X22, 0
	434 JumpIfEqual {439}
	435 Move X0, [X31+160]
	436 Move X1, X22
	437 Call UIRenderDevice.Free, X0, X1
	438 Move [X31+1112], X31
	439 Move X0, [X31+200]
	440 Move X21, [X31+208]
	441 Move X2, X31
	442 Move X1, X21
	443 Call RenderChain.ResetTextures, X0, X1
	444 Move X23, [X31+168]
	445 Move X1, X31
	446 Move X0, X23
	447 Call UIRStylePainter.Reset, X0
	448 Move X0, X23
	449 Move X1, X21
	450 Move X2, X31
	451 Call UIRStylePainter.Begin, X0, X1
	452 Move X22, X31
	453 Move X23, [X31+168]
	454 Move X0, X23
	455 Move X1, X31
	456 Call UIRStylePainter.get_entries, X0
	457 Compare X0, 0
	458 JumpIfEqual {1378}
	459 Move W8, [X0+24]
	460 NotImplemented "Instruction CMP not yet implemented."
	461 Move X8, [X31+168]
	462 Move [X31+920], X31
	463 Move [X31+912], X31
	464 Move [X31+904], X31
	465 Move [X31+896], X31
	466 NotImplemented "Instruction STRH not yet implemented."
	467 Move W22, [X8+280]
	468 NotImplemented "Instruction CMP not yet implemented."
	469 Move X8, 0x430000
	470 Move X8, [X8+248]
	471 Move X9, [X31+168]
	472 Move X0, [X8]
	473 Move W24, [X9+284]
	474 Move W8, [X0+224]
	475 Compare W8, 0
	476 JumpIfNotEqual {478}
	477 Call 0x1C17DFC
	478 Move X3, [X31+160]
	479 Add X0, X31, 1112
	480 Add X4, X31, 912
	481 Add X5, X31, 896
	482 Add X6, X31, 892
	483 Move W1, W22
	484 Move W2, W24
	485 Move X7, X25
	486 Call CommandGenerator.UpdateOrAllocate, X0, X1, X2, X3, X4, X5, X6, X7
	487 Or X8, X19, X20
	488 Move [X31+880], X19
	489 Move [X31+872], X20
	490 Compare X8, 0
	491 JumpIfNotEqual {503}
	492 Move X8, 0x430000
	493 Move X8, [X8+248]
	494 Move X0, [X8]
	495 Move W8, [X0+224]
	496 Compare W8, 0
	497 JumpIfNotEqual {499}
	498 Call 0x1C17DFC
	499 Move X0, [X31+208]
	500 Add X1, X31, 880
	501 Add X2, X31, 872
	502 Call CommandGenerator.FindCommandInsertionPoint, X0, X1, X2
	503 Move X19, 0x6A3000
	504 Move W8, [X19+2752]
	505 Compare W8, 0
	506 JumpIfNotEqual {512}
	507 Move X0, 0x3C2000
	508 Move X0, [X0+624]
	509 Call 0x1C17CF4
	510 Move W8, 1
	511 Move [X19+2752], W8
	512 Move X8, 0x3C2000
	513 Move X8, [X8+624]
	514 Move X0, [X31+168]
	515 Move X1, X31
	516 Move X8, [X8]
	517 Move X8, [X8+184]
	518 Move V1, [X8+96]
	519 Move V0, [X8+112]
	520 Move V2, [X8+64]
	521 Move V3, [X8+80]
	522 Add X8, X31, 704
	523 Move [X8+128], V1
	524 Move [X8+136], V0
	525 Move [X8+96], V2
	526 Move [X8+104], V3
	527 Call UIRStylePainter.get_entries, X0
	528 Compare X0, 0
	529 JumpIfEqual {1378}
	530 Move X8, 0x430000
	531 Move X8, [X8+280]
	532 Move X1, [X8]
	533 Add X8, X31, 216
	534 Call List`1<Entry>.GetEnumerator, X0
	535 Add X0, X31, 704
	536 Add X1, X31, 216
	537 Move W2, 96
	538 Call 0x3EB2AC0
	539 Move X8, [X31+208]
	540 Move TEMP, 0
	541 Not TEMP
	542 Move W9, TEMP
	543 Move [X31+140], W31
	544 Move [X31+124], W31
	545 Add X10, X8, 272
	546 Move X8, [X31+200]
	547 Move [X31+96], X31
	548 Move [X31+104], W31
	549 Move [X31+108], W9
	550 Add X8, X8, 320
	551 Move [X31+128], X8
	552 Add X8, X31, 328
	553 Add X8, X8, 20
	554 Move [X31+56], X10
	555 Move [X31+64], X8
	556 Move TEMP, 0
	557 Not TEMP
	558 Move W8, TEMP
	559 Move [X31+76], W8
	560 Move [X31+80], W31
	561 Move X8, 0x430000
	562 Move X8, [X8+264]
	563 Move X1, [X8]
	564 Add X0, X31, 704
	565 Call Enumerator<Entry>.MoveNext, X0
	566 Move TEMP, X0
	567 And TEMP, TEMP, 1
	568 Compare TEMP, 1
	569 JumpIfNotEqual {1003}
	570 Move X9, [X31+752]
	571 Move W8, [X31+764]
	572 Move X28, [X31+720]
	573 Move X29, [X31+728]
	574 Move X27, [X31+736]
	575 Move [X31+176], X9
	576 Move [X31+184], X8
	577 Move W8, [X31+789]
	578 Move X25, [X31+744]
	579 Move V9, [X31+760]
	580 Move X22, [X31+768]
	581 Move [X31+196], W8
	582 Move X8, 0x430000
	583 Move X24, [X31+776]
	584 Move W19, [X31+784]
	585 Move W21, [X31+788]
	586 Move W23, [X31+790]
	587 Move W20, [X31+792]
	588 Move W26, [X31+796]
	589 Move X8, [X8+328]
	590 Move [X31+688], X28
	591 Move [X31+696], X29
	592 Move X1, [X8]
	593 Add X0, X31, 688
	594 Call NativeSlice`1<Vertex>.get_Length, X0
	595 NotImplemented "Instruction CMP not yet implemented."
	596 Move X8, 0x42F000
	597 Move X8, [X8+4024]
	598 Move [X31+672], X27
	599 Move [X31+680], X25
	600 Move X1, [X8]
	601 Add X0, X31, 672
	602 Call NativeSlice`1<UInt16>.get_Length, X0
	603 NotImplemented "Instruction CMP not yet implemented."
	604 Compare X22, 0
	605 JumpIfEqual {618}
	606 Move X8, 0x430000
	607 Move X8, [X8+248]
	608 Move X0, [X8]
	609 Move W8, [X0+224]
	610 Compare W8, 0
	611 JumpIfNotEqual {613}
	612 Call 0x1C17DFC
	613 Move X0, [X31+200]
	614 Add X2, X31, 880
	615 Add X3, X31, 872
	616 Move X1, X22
	617 Call CommandGenerator.InjectCommandInBetween, X0, X1, X2, X3
	618 Move X8, 0x3BE000
	619 Move X8, [X8+2600]
	620 Move X0, [X8]
	621 Move W8, [X0+224]
	622 Compare W8, 0
	623 JumpIfNotEqual {625}
	624 Call 0x1C17DFC
	625 Move W0, W31
	626 Move X1, X31
	627 Call Debug.Assert, X0
	628 Move W8, [X31+80]
	629 Move TEMP, X8
	630 And TEMP, TEMP, 1
	631 Compare TEMP, 1
	632 JumpIfEqual {653}
	633 Move X8, 0x430000
	634 Move X8, [X8+248]
	635 Move X0, [X8]
	636 Move W8, [X0+224]
	637 Compare W8, 0
	638 JumpIfNotEqual {640}
	639 Call 0x1C17DFC
	640 Move X0, [X31+208]
	641 Add X1, X31, 800
	642 Call CommandGenerator.GetVerticesTransformInfo, X0, X1
	643 Add X8, X31, 704
	644 Move V1, [X8+128]
	645 Move V0, [X8+144]
	646 Move V3, [X8+96]
	647 Move V2, [X8+112]
	648 Move X8, [X31+56]
	649 Move [X8+32], V1
	650 Move [X8+40], V0
	651 Move [X8], V3
	652 Move [X8+8], V2
	653 Move X8, 0x42F000
	654 Move X8, [X8+1888]
	655 Move X9, [X31+208]
	656 Move X0, [X8]
	657 Move X22, [X9+344]
	658 Move W8, [X0+224]
	659 Compare W8, 0
	660 JumpIfNotEqual {662}
	661 Call 0x1C17DFC
	662 Move X0, [X31+128]
	663 Move X1, X22
	664 Call UIRVEShaderInfoAllocator.TransformAllocToVertexData, X0, X1
	665 Move [X31+80], X0
	666 Move X22, [X31+208]
	667 Move X1, [X22+360]
	668 Move X0, [X31+128]
	669 Call UIRVEShaderInfoAllocator.OpacityAllocToVertexData, X0, X1
	670 Move [X31+48], X0
	671 Move X1, [X22+368]
	672 Move X0, [X31+128]
	673 Call UIRVEShaderInfoAllocator.TextCoreSettingsToVertexData, X0, X1
	674 Move X8, 0x42F000
	675 Move X8, [X8+1888]
	676 Move W12, [X31+196]
	677 Move X9, X0
	678 ShiftRight X9, 8
	679 And X9, X9, 0x7FFFFFFF
	680 Move X10, X0
	681 ShiftRight X10, 16
	682 And X10, X10, 0x7FFFFFFF
	683 Move X8, [X8]
	684 And W31, W12, 1
	685 Move W12, [X31+96]
	686 Move W11, [X8+224]
	687 NotImplemented "Instruction CSEL not yet implemented."
	688 Move W9, [X31+100]
	689 NotImplemented "Instruction CSEL not yet implemented."
	690 Move [X31+96], W12
	691 Move [X31+100], W9
	692 Move W9, [X31+104]
	693 NotImplemented "Instruction CSEL not yet implemented."
	694 Move [X31+104], W9
	695 Compare W11, 0
	696 JumpIfNotEqual {699}
	697 Move X0, X8
	698 Call 0x1C17DFC
	699 Move X0, [X31+128]
	700 Move X1, X24
	701 Call UIRVEShaderInfoAllocator.ClipRectAllocToVertexData, X0, X1
	702 Move X8, 0x3E6000
	703 Move X8, [X8+1568]
	704 Move X22, X0
	705 Move X0, [X8]
	706 Move X8, [X31+184]
	707 Move [X31+480], W8
	708 Move W8, [X0+224]
	709 Compare W8, 0
	710 JumpIfNotEqual {712}
	711 Call 0x1C17DFC
	712 Add X0, X31, 480
	713 Move X1, X31
	714 Move [X31+40], X22
	715 Call TextureId.ConvertToGpu, X0
	716 Move X8, 0x430000
	717 Move X24, [X31+912]
	718 Move X22, [X31+920]
	719 Move X8, [X8+328]
	720 Move V8, V0
	721 Move [X31+688], X28
	722 Move [X31+696], X29
	723 Move X1, [X8]
	724 Add X0, X31, 688
	725 Call NativeSlice`1<Vertex>.get_Length, X0
	726 Move X8, 0x430000
	727 Move X8, [X8+304]
	728 Move W3, W0
	729 Move X4, [X8]
	730 Move W2, [X31+140]
	731 Move X0, X24
	732 Move X1, X22
	733 Call NativeSliceExtensions.Slice, X0, X1, X2
	734 Move [X31+656], X0
	735 Move [X31+664], X1
	736 Move TEMP, X21
	737 And TEMP, TEMP, 1
	738 Compare TEMP, 1
	739 JumpIfNotEqual {772}
	740 Move W8, [X31+108]
	741 Move TEMP, X8
	742 And TEMP, TEMP, -2147483648
	743 Compare TEMP, -2147483648
	744 JumpIfEqual {758}
	745 Move W8, [X31+76]
	746 Move W9, [X31+140]
	747 NotImplemented "Instruction CMP not yet implemented."
	748 Move X8, 0x430000
	749 Move X8, [X8+328]
	750 Move [X31+688], X28
	751 Move [X31+696], X29
	752 Move X1, [X8]
	753 Add X0, X31, 688
	754 Call NativeSlice`1<Vertex>.get_Length, X0
	755 Move W8, [X31+76]
	756 Add W8, W0, W8
	757 Move [X31+76], W8
	758 Move X8, 0x42F000
	759 Move X8, [X8+328]
	760 Move [X31+688], X28
	761 Move [X31+696], X29
	762 Move X1, [X8]
	763 Add X0, X31, 688
	764 Call NativeSlice`1<Vertex>.get_Length, X0
	765 Move W9, [X31+140]
	766 Add W8, W0, W9
	767 Move [X31+76], W8
	768 Move [X31+108], W9
	769 Move X8, [X31+208]
	770 Move W9, 1
	771 Move [X8+252], W9
	772 Move X8, 0x42E000
	773 Move X8, [X8+4024]
	774 Move [X31+672], X27
	775 Move [X31+680], X25
	776 Move X1, [X8]
	777 Add X0, X31, 672
	778 Call NativeSlice`1<UInt16>.get_Length, X0
	779 Move X8, 0x42F000
	780 Move W24, W0
	781 NotImplemented "Instruction LDRH not yet implemented."
	782 Move X0, [X31+896]
	783 Move X1, [X31+904]
	784 Move X8, [X8+296]
	785 Move X4, [X8]
	786 Move W2, [X31+124]
	787 Move W3, W24
	788 Call 0x2223A50, X0, X1, X2
	789 Move X8, 0x3E7000
	790 Move X8, [X8+576]
	791 Move [X31+640], X0
	792 Move [X31+648], X1
	793 Move X8, [X8]
	794 Move W9, [X8+224]
	795 Compare W9, 0
	796 JumpIfNotEqual {799}
	797 Move X0, X8
	798 Call 0x1C17DFC
	799 Move X8, 0x6B1000
	800 Move W8, [X8+2906]
	801 Compare W8, 0
	802 JumpIfNotEqual {809}
	803 Move X0, 0x3BD000
	804 Move X0, [X0+2600]
	805 Call 0x1C17CF4
	806 Move X8, 0x6B1000
	807 Move W9, 1
	808 Move [X8+2906], W9
	809 Move X8, 0x3BD000
	810 Move X8, [X8+2600]
	811 Move X0, [X8]
	812 Move W8, [X0+224]
	813 Compare W8, 0
	814 JumpIfNotEqual {816}
	815 Call 0x1C17DFC
	816 NotImplemented "Instruction CMP not yet implemented."
	817 Add W8, W20, 1
	818 NotImplemented "Instruction CSET not yet implemented."
	819 NotImplemented "Instruction CMP not yet implemented."
	820 NotImplemented "Instruction CSET not yet implemented."
	821 Or W0, W9, W8
	822 Move X1, X31
	823 Call Debug.Assert, X0
	824 Move X8, [X31+208]
	825 Move [X31+36], W24
	826 Add X0, X31, 328
	827 Move W2, 152
	828 Move W24, [X8+236]
	829 Move W1, W31
	830 Call 0x3EB2B10
	831 Move X8, 0x42F000
	832 Move X8, [X8+320]
	833 Move X2, [X8]
	834 Move X0, X28
	835 Move X1, X29
	836 Call NativeSliceUnsafeUtility.GetUnsafePtr, X0
	837 Move X1, X31
	838 Call IntPtr.op_Explicit, X0
	839 Move X9, 0x42F000
	840 Move X8, [X31+656]
	841 Move X1, [X31+664]
	842 Move X9, [X9+320]
	843 Move [X31+328], X0
	844 Move X2, [X9]
	845 Move X0, X8
	846 Call NativeSliceUnsafeUtility.GetUnsafePtr, X0
	847 Move X1, X31
	848 Call IntPtr.op_Explicit, X0
	849 Move X8, 0x42F000
	850 Move X8, [X8+328]
	851 Move [X31+336], X0
	852 Move X1, [X8]
	853 Add X0, X31, 656
	854 Call NativeSlice`1<Vertex>.get_Length, X0
	855 Move X15, [X31+80]
	856 Move X12, [X31+40]
	857 Move X13, [X31+48]
	858 Move [X31+344], W0
	859 Add X9, X31, 704
	860 Move X8, X15
	861 ShiftRight X8, 16
	862 And X8, X8, 0x7FFFFFFF
	863 And W11, W13, 0xFF0000
	864 Move W10, W12
	865 ShiftRight W10, 8
	866 And W10, W10, 0x7FFFFFFF
	867 NotImplemented "Instruction BFM not yet implemented."
	868 NotImplemented "Instruction BFM not yet implemented."
	869 Move W8, [X31+100]
	870 Move W14, [X31+104]
	871 NotImplemented "Instruction BFM not yet implemented."
	872 Move W10, [X31+96]
	873 Move X12, X12
	874 ShiftRight X12, 8
	875 And X12, X12, 0x7FFFFFFF
	876 And W12, W12, 0xFF00
	877 NotImplemented "Instruction BFM not yet implemented."
	878 And W10, W10, 255
	879 And W8, W8, 255
	880 Or W11, W11, W12
	881 Move X12, 0x42F000
	882 Move V0, [X9+96]
	883 Move V1, [X9+112]
	884 Move V2, [X9+128]
	885 Move V3, [X9+144]
	886 NotImplemented "Instruction BFM not yet implemented."
	887 Move W10, [X31+196]
	888 Move X12, [X12+312]
	889 And W9, W21, 1
	890 And W13, W13, 0xFFFF
	891 And W10, W10, 1
	892 Move X2, [X12]
	893 Move X12, [X31+64]
	894 Move [X12+32], V2
	895 Move [X12+40], V3
	896 Move [X12], V0
	897 Move [X12+8], V1
	898 Move [X31+412], W9
	899 Move [X31+416], W15
	900 Move [X31+420], W11
	901 Move [X31+424], W19
	902 Move [X31+428], W13
	903 Move [X31+432], W8
	904 Move [X31+436], W10
	905 Move [X31+440], S8
	906 Move X0, X27
	907 Move X1, X25
	908 Call NativeSliceUnsafeUtility.GetUnsafePtr, X0
	909 Move X1, X31
	910 Call IntPtr.op_Explicit, X0
	911 Move X9, 0x42F000
	912 Move X8, [X31+640]
	913 Move X1, [X31+648]
	914 Move X9, [X9+312]
	915 Move [X31+448], X0
	916 Move X2, [X9]
	917 Move X0, X8
	918 Call NativeSliceUnsafeUtility.GetUnsafePtr, X0
	919 Move X1, X31
	920 Call IntPtr.op_Explicit, X0
	921 Move X8, 0x42E000
	922 Move X8, [X8+4024]
	923 Move [X31+456], X0
	924 Move X1, [X8]
	925 Add X0, X31, 640
	926 Call NativeSlice`1<UInt16>.get_Length, X0
	927 Move W8, [X31+140]
	928 NotImplemented "Instruction CMP not yet implemented."
	929 Move [X31+464], W0
	930 Add X0, X31, 488
	931 Add W22, W8, W22
	932 NotImplemented "Instruction CSET not yet implemented."
	933 NotImplemented "Instruction CMP not yet implemented."
	934 NotImplemented "Instruction CSET not yet implemented."
	935 Add X1, X31, 328
	936 Move W2, 152
	937 Move [X31+468], W22
	938 Move [X31+472], W8
	939 Call 0x3EB2AC0
	940 Move X8, [X31+200]
	941 Move X0, [X8+312]
	942 Compare X0, 0
	943 JumpIfEqual {1379}
	944 Add X1, X31, 488
	945 Move X2, X31
	946 Call JobManager.Add, X0, X1
	947 Move W19, [X31+36]
	948 Move TEMP, X23
	949 And TEMP, TEMP, 1
	950 Compare TEMP, 1
	951 JumpIfNotEqual {960}
	952 Move X1, [X31+656]
	953 Move X2, [X31+664]
	954 Move X3, [X31+640]
	955 Move X4, [X31+648]
	956 Move X0, [X31+168]
	957 Move W5, W22
	958 Move X6, X31
	959 Call UIRStylePainter.LandClipRegisterMesh, X0, X1, X2, X3
	960 Move X8, 0x42F000
	961 Move X8, [X8+248]
	962 Move X22, [X31+1112]
	963 Move X0, [X8]
	964 Move W8, [X0+224]
	965 Compare W8, 0
	966 JumpIfNotEqual {968}
	967 Call 0x1C17DFC
	968 Move X7, [X31+176]
	969 Move X8, [X31+184]
	970 Move X0, [X31+200]
	971 Move X1, [X31+208]
	972 Move W6, [X31+124]
	973 Add X2, X31, 880
	974 Add X3, X31, 872
	975 Move X4, X22
	976 Move W5, W19
	977 Move [X31+8], W20
	978 Move [X31], X8
	979 Call CommandGenerator.InjectMeshDrawCommand, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	980 Move W8, [X31+196]
	981 Move TEMP, X8
	982 And TEMP, TEMP, 1
	983 Compare TEMP, 1
	984 JumpIfNotEqual {988}
	985 Compare X0, 0
	986 JumpIfEqual {1380}
	987 Move [X0+72], S9
	988 Move X8, 0x42F000
	989 Move X8, [X8+328]
	990 Move [X31+688], X28
	991 Move [X31+696], X29
	992 Move X1, [X8]
	993 Add X0, X31, 688
	994 Call NativeSlice`1<Vertex>.get_Length, X0
	995 Move W8, [X31+140]
	996 Add W8, W0, W8
	997 Move [X31+140], W8
	998 Move W8, [X31+124]
	999 Add W8, W19, W8
	1000 Move [X31+124], W8
	1001 Move W8, 1
	1002 Move [X31+80], W8
	1003 Move X8, 0x42F000
	1004 Move X8, [X8+256]
	1005 Add X0, X31, 704
	1006 Move X1, [X8]
	1007 Call Enumerator<Entry>.Dispose, X0
	1008 Move W8, [X31+108]
	1009 Move TEMP, X8
	1010 And TEMP, TEMP, -2147483648
	1011 Compare TEMP, -2147483648
	1012 JumpIfEqual {1028}
	1013 Move X8, [X31+208]
	1014 Move W8, [X8+252]
	1015 Compare W8, 0
	1016 JumpIfNotEqual {1028}
	1017 Move X8, [X31+208]
	1018 Move W9, [X31+108]
	1019 Move [X8+336], W9
	1020 Move W9, [X31+76]
	1021 Move [X8+340], W9
	1022 Compare X22, 0
	1023 JumpIfEqual {1028}
	1024 Move X0, [X31+160]
	1025 Move X1, X22
	1026 Call UIRenderDevice.Free, X0, X1
	1027 Move [X31+1112], X31
	1028 Move X8, [X31+1112]
	1029 Move X20, [X31+208]
	1030 Move X0, [X31+168]
	1031 Move X1, X31
	1032 Move [X20+256], X8
	1033 Add X8, X31, 216
	1034 Call UIRStylePainter.get_closingInfo, X0
	1035 Move X19, 0x42E000
	1036 NotImplemented "Instruction LDUR not yet implemented."
	1037 NotImplemented "Instruction LDUR not yet implemented."
	1038 NotImplemented "Instruction LDUR not yet implemented."
	1039 Move X8, [X31+264]
	1040 Move X19, [X19+4024]
	1041 Add X9, X31, 992
	1042 Add X22, X9, 32
	1043 Add X10, X31, 704
	1044 Move X1, [X19]
	1045 Move X0, X22
	1046 Move [X10+288], V0
	1047 Move [X10+296], V1
	1048 Move [X10+20], V2
	1049 Move [X31+1040], X8
	1050 Call NativeSlice`1<UInt16>.get_Length, X0
	1051 Compare W0, 0
	1052 JumpIfNotEqual {1059}
	1053 Move X1, [X20+264]
	1054 Compare X1, 0
	1055 JumpIfEqual {1059}
	1056 Move X0, [X31+160]
	1057 Call UIRenderDevice.Free, X0, X1
	1058 Move [X20+264], X31
	1059 Move X0, [X31+168]
	1060 Add X8, X31, 216
	1061 Move X1, X31
	1062 Call UIRStylePainter.get_closingInfo, X0
	1063 Move W8, [X31+216]
	1064 Move TEMP, X8
	1065 And TEMP, TEMP, 1
	1066 Compare TEMP, 1
	1067 JumpIfNotEqual {1334}
	1068 Move X9, [X31+144]
	1069 Move X8, [X31+152]
	1070 Move W10, [X31+92]
	1071 Move [X31+312], X9
	1072 Move [X31+320], X8
	1073 Move TEMP, X10
	1074 And TEMP, TEMP, 1
	1075 Compare TEMP, 1
	1076 JumpIfNotEqual {1091}
	1077 Or X8, X8, X9
	1078 Compare X8, 0
	1079 JumpIfNotEqual {1098}
	1080 Move X8, 0x42F000
	1081 Move X8, [X8+248]
	1082 Move X0, [X8]
	1083 Move W8, [X0+224]
	1084 Compare W8, 0
	1085 JumpIfNotEqual {1087}
	1086 Call 0x1C17DFC
	1087 Move X0, [X31+208]
	1088 Add X1, X31, 320
	1089 Add X2, X31, 312
	1090 Call CommandGenerator.FindClosingCommandInsertionPoint, X0, X1, X2
	1091 Move X8, [X31+208]
	1092 Move X8, [X8+208]
	1093 Move [X31+320], X8
	1094 Compare X8, 0
	1095 JumpIfEqual {1378}
	1096 Move X8, [X8+40]
	1097 Move [X31+312], X8
	1098 Move X0, [X31+168]
	1099 Add X8, X31, 216
	1100 Move X1, X31
	1101 Call UIRStylePainter.get_closingInfo, X0
	1102 Move W8, [X31+220]
	1103 Move TEMP, X8
	1104 And TEMP, TEMP, 1
	1105 Compare TEMP, 1
	1106 JumpIfNotEqual {1131}
	1107 Move X0, [X31+200]
	1108 Move X1, X31
	1109 Call RenderChain.AllocCommand, X0
	1110 Compare X0, 0
	1111 JumpIfEqual {1378}
	1112 Move W8, 11
	1113 Move [X0+52], W8
	1114 Move X8, [X31+208]
	1115 Move W9, 1
	1116 Move [X0+48], W9
	1117 Move X24, X0
	1118 Move [X0+24], X8
	1119 Move X8, 0x42F000
	1120 Move X8, [X8+248]
	1121 Move X0, [X8]
	1122 Move W8, [X0+224]
	1123 Compare W8, 0
	1124 JumpIfNotEqual {1126}
	1125 Call 0x1C17DFC
	1126 Move X0, [X31+200]
	1127 Add X2, X31, 320
	1128 Add X3, X31, 312
	1129 Move X1, X24
	1130 Call CommandGenerator.InjectClosingCommandInBetween, X0, X1, X2, X3
	1131 Move X0, [X31+168]
	1132 Add X8, X31, 216
	1133 Move X1, X31
	1134 Call UIRStylePainter.get_closingInfo, X0
	1135 Move W8, [X31+219]
	1136 Move TEMP, X8
	1137 And TEMP, TEMP, 1
	1138 Compare TEMP, 1
	1139 JumpIfNotEqual {1212}
	1140 Move X0, [X31+200]
	1141 Move X1, X31
	1142 Call RenderChain.AllocCommand, X0
	1143 Compare X0, 0
	1144 JumpIfEqual {1378}
	1145 Move W8, 9
	1146 Move W9, 1
	1147 Move X24, X0
	1148 Move [X0+52], W8
	1149 Move [X0+48], W9
	1150 Move X0, [X31+208]
	1151 Move X1, X31
	1152 Move [X24+24], X0
	1153 Call VisualElement.get_subRenderTargetMode, X0
	1154 Move X8, 0x42F000
	1155 Move X8, [X8+248]
	1156 Move W25, W0
	1157 Move X8, [X8]
	1158 Move W9, [X8+224]
	1159 Compare W9, 0
	1160 JumpIfNotEqual {1163}
	1161 Move X0, X8
	1162 Call 0x1C17DFC
	1163 Move W0, W25
	1164 Call CommandGenerator.GetBlitMaterial, X0
	1165 Move [X24+56], X0
	1166 Move X8, 0x3BD000
	1167 Move X8, [X8+1432]
	1168 Move X25, X0
	1169 Move X0, [X8]
	1170 Move W8, [X0+224]
	1171 Compare W8, 0
	1172 JumpIfNotEqual {1174}
	1173 Call 0x1C17DFC
	1174 Move X0, X25
	1175 Move X1, X31
	1176 Move X2, X31
	1177 Call Object.op_Inequality, X0, X1
	1178 Move X8, 0x3BD000
	1179 Move X8, [X8+2600]
	1180 Move W25, W0
	1181 Move X8, [X8]
	1182 Move W9, [X8+224]
	1183 Compare W9, 0
	1184 JumpIfNotEqual {1187}
	1185 Move X0, X8
	1186 Call 0x1C17DFC
	1187 And W0, W25, 1
	1188 Move X1, X31
	1189 Call Debug.Assert, X0
	1190 Move X20, [X31+200]
	1191 Add X2, X31, 320
	1192 Add X3, X31, 312
	1193 Move X1, X24
	1194 Move X0, X20
	1195 Call CommandGenerator.InjectClosingCommandInBetween, X0, X1, X2, X3
	1196 Move X0, X20
	1197 Move X1, X31
	1198 Call RenderChain.AllocCommand, X0
	1199 Compare X0, 0
	1200 JumpIfEqual {1378}
	1201 Move W8, 8
	1202 Move [X0+52], W8
	1203 Move X8, [X31+208]
	1204 Move W9, 1
	1205 Move X1, X0
	1206 Move [X0+48], W9
	1207 Move [X0+24], X8
	1208 Add X2, X31, 320
	1209 Add X3, X31, 312
	1210 Move X0, X20
	1211 Call CommandGenerator.InjectClosingCommandInBetween, X0, X1, X2, X3
	1212 Move X21, [X31+168]
	1213 Add X8, X31, 216
	1214 Move X1, X31
	1215 Move X0, X21
	1216 Call UIRStylePainter.get_closingInfo, X0
	1217 NotImplemented "Instruction LDUR not yet implemented."
	1218 NotImplemented "Instruction LDUR not yet implemented."
	1219 NotImplemented "Instruction LDUR not yet implemented."
	1220 Move X8, [X31+264]
	1221 Move X1, [X19]
	1222 Add X9, X31, 704
	1223 Move X0, X22
	1224 Move [X9+288], V0
	1225 Move [X9+296], V1
	1226 Move [X9+20], V2
	1227 Move [X31+1040], X8
	1228 Call NativeSlice`1<UInt16>.get_Length, X0
	1229 NotImplemented "Instruction CMP not yet implemented."
	1230 Move X19, 0x3E5000
	1231 Move X19, [X19+1568]
	1232 Move X0, [X19]
	1233 Move W8, [X0+224]
	1234 Compare W8, 0
	1235 JumpIfNotEqual {1238}
	1236 Call 0x1C17DFC
	1237 Move X0, [X19]
	1238 Move X8, [X0+184]
	1239 Move X21, [X31+168]
	1240 Move X1, X31
	1241 Move W19, [X8]
	1242 Add X8, X31, 216
	1243 Move X0, X21
	1244 Call UIRStylePainter.get_closingInfo, X0
	1245 Move X8, 0x42F000
	1246 Move X8, [X8+248]
	1247 Move W20, [X31+268]
	1248 Move X0, [X8]
	1249 Move W8, [X0+224]
	1250 Compare W8, 0
	1251 JumpIfNotEqual {1253}
	1252 Call 0x1C17DFC
	1253 Move X0, [X31+200]
	1254 Move X1, [X31+208]
	1255 Add X2, X31, 320
	1256 Add X3, X31, 312
	1257 Move X4, X31
	1258 Move W5, W31
	1259 Move W6, W31
	1260 Move X7, X31
	1261 Move [X31+8], W20
	1262 Move [X31], X19
	1263 Call CommandGenerator.InjectClosingMeshDrawCommand, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	1264 Move X1, X0
	1265 Move X0, X21
	1266 Move X2, X31
	1267 Call UIRStylePainter.LandClipUnregisterMeshDrawCommand, X0, X1
	1268 Add X8, X31, 216
	1269 Move X0, X21
	1270 Move X1, X31
	1271 Call UIRStylePainter.get_closingInfo, X0
	1272 Move W8, [X31+217]
	1273 Move TEMP, X8
	1274 And TEMP, TEMP, 1
	1275 Compare TEMP, 1
	1276 JumpIfNotEqual {1301}
	1277 Move X0, [X31+200]
	1278 Move X1, X31
	1279 Call RenderChain.AllocCommand, X0
	1280 Compare X0, 0
	1281 JumpIfEqual {1378}
	1282 Move W8, 4
	1283 Move [X0+52], W8
	1284 Move X8, [X31+208]
	1285 Move W9, 1
	1286 Move [X0+48], W9
	1287 Move X22, X0
	1288 Move [X0+24], X8
	1289 Move X8, 0x42F000
	1290 Move X8, [X8+248]
	1291 Move X0, [X8]
	1292 Move W8, [X0+224]
	1293 Compare W8, 0
	1294 JumpIfNotEqual {1296}
	1295 Call 0x1C17DFC
	1296 Move X0, [X31+200]
	1297 Add X2, X31, 320
	1298 Add X3, X31, 312
	1299 Move X1, X22
	1300 Call CommandGenerator.InjectClosingCommandInBetween, X0, X1, X2, X3
	1301 Move X0, [X31+168]
	1302 Add X8, X31, 216
	1303 Move X1, X31
	1304 Call UIRStylePainter.get_closingInfo, X0
	1305 Move W8, [X31+218]
	1306 Move TEMP, X8
	1307 And TEMP, TEMP, 1
	1308 Compare TEMP, 1
	1309 JumpIfNotEqual {1334}
	1310 Move X0, [X31+200]
	1311 Move X1, X31
	1312 Call RenderChain.AllocCommand, X0
	1313 Compare X0, 0
	1314 JumpIfEqual {1378}
	1315 Move W8, 6
	1316 Move [X0+52], W8
	1317 Move X8, [X31+208]
	1318 Move W9, 1
	1319 Move [X0+48], W9
	1320 Move X22, X0
	1321 Move [X0+24], X8
	1322 Move X8, 0x42F000
	1323 Move X8, [X8+248]
	1324 Move X0, [X8]
	1325 Move W8, [X0+224]
	1326 Compare W8, 0
	1327 JumpIfNotEqual {1329}
	1328 Call 0x1C17DFC
	1329 Move X0, [X31+200]
	1330 Add X2, X31, 320
	1331 Add X3, X31, 312
	1332 Move X1, X22
	1333 Call CommandGenerator.InjectClosingCommandInBetween, X0, X1, X2, X3
	1334 Move X9, [X31+208]
	1335 Move X8, [X9+264]
	1336 Compare X8, 0
	1337 JumpIfEqual {1341}
	1338 Move X8, [X9+256]
	1339 NotImplemented "Instruction CMP not yet implemented."
	1340 NotImplemented "Instruction CSET not yet implemented."
	1341 Move W20, 1
	1342 Move X8, 0x3BD000
	1343 Move X8, [X8+2600]
	1344 Move X0, [X8]
	1345 Move W8, [X0+224]
	1346 Compare W8, 0
	1347 JumpIfNotEqual {1349}
	1348 Call 0x1C17DFC
	1349 Move W0, W20
	1350 Move X1, X31
	1351 Call Debug.Assert, X0
	1352 Move X20, [X31+168]
	1353 Add X8, X31, 216
	1354 Move X1, X31
	1355 Move X0, X20
	1356 Call UIRStylePainter.get_closingInfo, X0
	1357 NotImplemented "Instruction LDUR not yet implemented."
	1358 NotImplemented "Instruction LDUR not yet implemented."
	1359 NotImplemented "Instruction LDUR not yet implemented."
	1360 Move X8, [X31+264]
	1361 Add X19, X31, 704
	1362 Move X0, X20
	1363 Move X1, X31
	1364 Move [X19+352], V0
	1365 Move [X19+360], V1
	1366 Move [X19+24], V2
	1367 Move [X31+1104], X8
	1368 Call UIRStylePainter.Reset, X0
	1369 Move V0, [X19+352]
	1370 Move V1, [X19+368]
	1371 Move V2, [X19+24]
	1372 Move X8, [X31+1104]
	1373 Move X20, [X31+112]
	1374 Move [X19+224], V0
	1375 Move [X19+232], V1
	1376 Move [X19+16], V2
	1377 Move [X31+976], X8
	1378 Call 0x1C17F20
	1379 Call 0x1C17F20
	1380 Call 0x1C17F20
	1381 Move W8, [X31+140]
	1382 Move X22, X0
	1383 Move [X31+108], W8
	1384 Move X22, X0
	1385 NotImplemented "Instruction CMP not yet implemented."
	1386 Move X0, X22
	1387 Call 0x3EB2AD0
	1388 Move X24, [X0]
	1389 Call 0x3EB2AE0
	1390 Move X8, 0x42F000
	1391 Move X8, [X8+256]
	1392 Add X0, X31, 704
	1393 Move X1, [X8]
	1394 Call Enumerator<Entry>.Dispose, X0
	1395 Compare X24, 0
	1396 JumpIfEqual {1008}
	1397 Move X0, X24
	1398 Call 0x1C17F18
	1399 Move X24, X31
	1400 Move X22, X0
	1401 Move X8, 0x42F000
	1402 Move X8, [X8+256]
	1403 Move X1, [X8]
	1404 Add X0, X31, 704
	1405 Call Enumerator<Entry>.Dispose, X0
	1406 Compare X24, 0
	1407 JumpIfNotEqual {1410}
	1408 Move X0, X22
	1409 Call 0x1D2D690
	1410 Move X0, X24
	1411 Call 0x1C17F18
	1412 Call 0x1991590

Method: System.Void InvokeGenerateVisualContent(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.MeshGenerationContext ctx)

Disassembly:
	0x03D37C4C MOV X22, X2
	0x03D37C50 MOV X19, X1
	0x03D37C54 MOV X20, X0
	0x03D37C58 TBNZ X8, 0x0, 0x3D37C7C
	0x03D37C5C ADRP X0, 0x42D000
	0x03D37C60 LDR X0, [X0 + 0xED0]
	0x03D37C64 BL 0x1C16CF4
	0x03D37C68 ADRP X0, 0x42D000
	0x03D37C6C LDR X0, [X0 + 0x760]
	0x03D37C70 BL 0x1C16CF4
	0x03D37C74 MOVZ W8, 0x1
	0x03D37C78 STRB W8, [X21 + 0xB4D]
	0x03D37C7C STP X31, X31, [X31]
	0x03D37C80 CBZ X22, 0x3D37D40
	0x03D37C84 LDR X8, [X22 + 0x50]
	0x03D37C88 CBZ X8, 0x3D37D40
	0x03D37C8C LDR X8, [X8 + 0x18]
	0x03D37C90 CBZ X8, 0x3D37D40
	0x03D37C94 ADRP X9, 0x42D000
	0x03D37C98 LDR X9, [X9 + 0xED0]
	0x03D37C9C LDP W2, W21, [X22 + 0x18]
	0x03D37CA0 LDP X0, X1, [X8 + 0x20]
	0x03D37CA4 LDR X4, [X9]
	0x03D37CA8 MOV W3, W21
	0x03D37CAC BL 0x2222AC0
	0x03D37CB0 CBZ X19, 0x3D37D40
	0x03D37CB4 MOV X23, X0
	0x03D37CB8 LDR X0, [X19 + 0x110]
	0x03D37CBC CBZ X0, 0x3D37D40
	0x03D37CC0 MOV X24, X1
	0x03D37CC4 ADD X3, X31, 0x0
	0x03D37CC8 MOV X1, X22
	0x03D37CCC MOV W2, W21
	0x03D37CD0 BL 0x3D2FBF0
	0x03D37CD4 CBZ X20, 0x3D37D40
	0x03D37CD8 ADRP X8, 0x42D000
	0x03D37CDC LDR X8, [X8 + 0x760]
	0x03D37CE0 LDR X20, [X20 + 0x168]
	0x03D37CE4 ADD X22, X19, 0x140
	0x03D37CE8 LDR X0, [X8]
	0x03D37CEC LDR W8, [X0 + 0xE0]
	0x03D37CF0 CBNZ W8, 0x3D37CF8
	0x03D37CF4 BL 0x1C16DFC
	0x03D37CF8 MOV X0, X22
	0x03D37CFC MOV X1, X20
	0x03D37D00 BL 0x3D2CCF4
	0x03D37D04 LDR X8, [X19 + 0xF8]
	0x03D37D08 CBZ X8, 0x3D37D40
	0x03D37D0C LDP X3, X4, [X31]
	0x03D37D10 MOV X1, X23
	0x03D37D14 MOV X2, X24
	0x03D37D18 MOV W6, W21
	0x03D37D1C LDP X20, X19, [X31 + 0x40]
	0x03D37D20 LDP X22, X21, [X31 + 0x30]
	0x03D37D24 LDP X24, X23, [X31 + 0x20]
	0x03D37D28 LDR X30, [X31 + 0x10]
	0x03D37D2C AND X5, X0, 0x0
	0x03D37D30 MOV X0, X8
	0x03D37D34 MOV X7, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6B1000
	007 Move X21, 0x42F000
	008 Move W8, [X22+2888]
	009 Move X21, [X21+352]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x42F000
	017 Move X0, [X0+352]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2888], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X22, 0x6B1000
	027 Move W8, [X22+2907]
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0x42F000
	031 Move X0, [X0+352]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+2907], W8
	035 Move X0, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X21]
	041 Move X8, [X0+184]
	042 Move W9, 1
	043 Move [X8], W9
	044 Compare X20, 0
	045 JumpIfEqual {72}
	046 Move X0, X20
	047 Move X1, X19
	048 Move X2, X31
	049 Call VisualElement.InvokeGenerateVisualContent, X0, X1
	050 Move W8, [X22+2907]
	051 Compare W8, 0
	052 JumpIfNotEqual {58}
	053 Move X0, 0x42F000
	054 Move X0, [X0+352]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X22+2907], W8
	058 Move X0, [X21]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X21]
	064 Move X8, [X0+184]
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move [X8], W31
	070 Move X30, [X31+48]
	071 Return 
	072 Call 0x1C17F20

Method: UnityEngine.Material CreateBlitShader(System.Single colorConversion)

Disassembly:
	0x03D38724 B.NE 0x3D38794
	0x03D38728 TBNZ X0, 0x0, 0x3D38788
	0x03D3872C CBZ X22, 0x3D38BD8
	0x03D38730 ADRP X27, 0x42C000
	0x03D38734 LDR X27, [X27 + 0x760]
	0x03D38738 ADD X25, X22, 0x140
	0x03D3873C LDR X0, [X27]
	0x03D38740 LDR W8, [X0 + 0xE0]
	0x03D38744 CBNZ W8, 0x3D3874C
	0x03D38748 BL 0x1C16DFC
	0x03D3874C MOV X0, X25
	0x03D38750 MOV X1, X31
	0x03D38754 BL 0x3D2C5A4
	0x03D38758 ADRP X8, 0x42C000
	0x03D3875C LDR X8, [X8 + 0x9C8]
	0x03D38760 STR X0, [X31 + 0x58]
	0x03D38764 LDR X8, [X8]
	0x03D38768 LDR W9, [X8 + 0xE0]
	0x03D3876C CBNZ W9, 0x3D38778
	0x03D38770 MOV X0, X8
	0x03D38774 BL 0x1C16DFC
	0x03D38778 ADD X0, X31, 0x58
	0x03D3877C MOV X1, X31
	0x03D38780 BL 0x3D279C8
	0x03D38784 TBZ X0, 0x0, 0x3D38828
	0x03D38788 MOV W24, W29
	0x03D3878C MOVZ W25, 0x3
	0x03D38790 B 0x3D38898
	0x03D38794 TBZ X0, 0x0, 0x3D387D0
	0x03D38798 CBZ X22, 0x3D38BD8
	0x03D3879C ADRP X8, 0x42C000
	0x03D387A0 LDR X8, [X8 + 0x760]
	0x03D387A4 LDR X27, [X26]
	0x03D387A8 ADD X28, X22, 0x140
	0x03D387AC LDR X0, [X8]
	0x03D387B0 LDR W8, [X0 + 0xE0]
	0x03D387B4 CBNZ W8, 0x3D387BC
	0x03D387B8 BL 0x1C16DFC
	0x03D387BC MOV X0, X28
	0x03D387C0 MOV X1, X27
	0x03D387C4 MOV X2, X31
	0x03D387C8 BL 0x3D2C874
	0x03D387CC LDR X27, [X31 + 0x30]
	0x03D387D0 MOV X0, X21
	0x03D387D4 MOV X1, X31
	0x03D387D8 BL 0x3DEC0F4
	0x03D387DC TBNZ X0, 0x0, 0x3D38820
	0x03D387E0 CBZ X27, 0x3D38854
	0x03D387E4 CMP W25, 0x2
	0x03D387E8 B.EQ 0x3D38854
	0x03D387EC MOV W24, W29
	0x03D387F0 ADD X8, X27, 0x160
	0x03D387F4 B 0x3D3888C
	0x03D387F8 LDR W9, [X31 + 0x4C]
	0x03D387FC MOV W28, W31
	0x03D38800 MOV W11, W31
	0x03D38804 MOV W24, W31
	0x03D38808 MOV W26, W31
	0x03D3880C MOV W27, W31
	0x03D38810 MOV W25, W23
	0x03D38814 STR W9, [X31 + 0x3C]
	0x03D38818 TBNZ X8, 0x0, 0x3D38950
	0x03D3881C B 0x3D38A5C
	0x03D38820 MOV W24, W29
	0x03D38824 B 0x3D38898
	0x03D38828 LDR X0, [X27]
	0x03D3882C MOV W24, W29
	0x03D38830 LDR W8, [X0 + 0xE0]
	0x03D38834 CBNZ W8, 0x3D38840
	0x03D38838 BL 0x1C16DFC
	0x03D3883C LDR X0, [X27]
	0x03D38840 LDR X8, [X0 + 0xB8]
	0x03D38844 MOVZ W25, 0x2
	0x03D38848 LDR X8, [X8 + 0x110]
	0x03D3884C STR X8, [X31 + 0x58]
	0x03D38850 B 0x3D38898
	0x03D38854 MOV W27, W19
	0x03D38858 ADRP X19, 0x42C000
	0x03D3885C LDR X19, [X19 + 0x760]
	0x03D38860 LDR X0, [X19]
	0x03D38864 LDR W8, [X0 + 0xE0]
	0x03D38868 CBZ W8, 0x3D38874
	0x03D3886C MOV W24, W29
	0x03D38870 B 0x3D38880
	0x03D38874 MOV W24, W29
	0x03D38878 BL 0x1C16DFC
	0x03D3887C LDR X0, [X19]
	0x03D38880 LDR X8, [X0 + 0xB8]
	0x03D38884 MOV W19, W27
	0x03D38888 ADD X8, X8, 0x110
	0x03D3888C LDR X8, [X8]
	0x03D38890 STR X8, [X31 + 0x58]
	0x03D38894 STRB W31, [X31 + 0x5F]
	0x03D38898 ADRP X8, 0x42C000
	0x03D3889C LDR X8, [X8 + 0x9C8]
	0x03D388A0 LDR X27, [X31 + 0x58]
	0x03D388A4 MOV W29, W19
	0x03D388A8 LDR X0, [X8]
	0x03D388AC LDR W8, [X0 + 0xE0]
	0x03D388B0 CBNZ W8, 0x3D388B8
	0x03D388B4 BL 0x1C16DFC
	0x03D388B8 MOV X0, X26
	0x03D388BC MOV X1, X27
	0x03D388C0 MOV X2, X31
	0x03D388C4 BL 0x3D29DEC
	0x03D388C8 MOV W27, W0
	0x03D388CC EOR W28, W0, 0x1
	0x03D388D0 MOV X0, X21
	0x03D388D4 MOV X1, X31
	0x03D388D8 BL 0x3DEC0F4
	0x03D388DC ADRP X8, 0x3BB000
	0x03D388E0 LDR X8, [X8 + 0xA28]
	0x03D388E4 ANDS W31, W0, 0x1
	0x03D388E8 CSET W10, EQ
	0x03D388EC ORR W19, W27, W10, 0x0
	0x03D388F0 LDR X8, [X8]
	0x03D388F4 LDR W9, [X8 + 0xE0]
	0x03D388F8 CBNZ W9, 0x3D38904
	0x03D388FC MOV X0, X8
	0x03D38900 BL 0x1C16DFC
	0x03D38904 AND W0, W19, 0x1
	0x03D38908 MOV X1, X31
	0x03D3890C BL 0x3C06E58
	0x03D38910 LDR X8, [X31 + 0x58]
	0x03D38914 CMP W23, W25
	0x03D38918 STR X8, [X26]
	0x03D3891C B.NE 0x3D38978
	0x03D38920 LDR W9, [X31 + 0x2C]
	0x03D38924 MOV W26, W31
	0x03D38928 MOV W11, W31
	0x03D3892C MOV W19, W29
	0x03D38930 MOV W29, W24
	0x03D38934 LDR W8, [X31 + 0x4C]
	0x03D38938 CMP W23, W25
	0x03D3893C CSET W24, NE
	0x03D38940 MOV W27, W26

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x6B0000
	009 Move X20, 0x42E000
	010 Move W8, [X19+2889]
	011 Move X20, [X20+248]
	012 Move V8, V0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x42E000
	018 Move X0, [X0+248]
	019 Call 0x1C17CF4
	020 Move X0, 0x3BC000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x3C0000
	024 Move X0, [X0+3232]
	025 Call 0x1C17CF4
	026 Move X0, 0x3BC000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0x42D000
	030 Move X0, [X0+2624]
	031 Call 0x1C17CF4
	032 Move X0, 0x42E000
	033 Move X0, [X0+376]
	034 Call 0x1C17CF4
	035 Move X0, 0x42E000
	036 Move X0, [X0+384]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X19+2889], W8
	040 Move X0, [X20]
	041 Move X21, 0x3BC000
	042 Move W8, [X0+224]
	043 Move X21, [X21+1432]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X20]
	048 Move X8, [X21]
	049 Move X9, [X0+184]
	050 Move W10, [X8+224]
	051 Move X19, [X9+72]
	052 Compare W10, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Move X0, X19
	057 Move X1, X31
	058 Move X2, X31
	059 Call Object.op_Equality, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {86}
	064 Move X19, 0x42D000
	065 Move X19, [X19+2624]
	066 Move X0, [X19]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X19]
	072 Move X8, [X0+184]
	073 Move X1, X31
	074 Move X0, [X8+40]
	075 Call Shader.Find, X0
	076 Move X8, [X20]
	077 Move X19, X0
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {84}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X8, [X20]
	084 Move X9, [X8+184]
	085 Move [X9+72], X19
	086 Move X8, [X20]
	087 Move W9, [X8+224]
	088 Compare W9, 0
	089 JumpIfNotEqual {93}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Move X8, [X20]
	093 Move X0, [X21]
	094 Move X8, [X8+184]
	095 Move X23, 0x3BC000
	096 Move W9, [X0+224]
	097 Move X19, [X8+72]
	098 Move X23, [X23+2600]
	099 Compare W9, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X22, 0x42E000
	103 Move X21, 0x3C0000
	104 Move X22, [X22+376]
	105 Move X21, [X21+3232]
	106 Move X0, X19
	107 Move X1, X31
	108 Move X2, X31
	109 Call Object.op_Inequality, X0, X1
	110 Move X8, [X23]
	111 Move W19, W0
	112 Move W9, [X8+224]
	113 Compare W9, 0
	114 JumpIfNotEqual {117}
	115 Move X0, X8
	116 Call 0x1C17DFC
	117 Move X1, [X22]
	118 And W0, W19, 1
	119 Move X2, X31
	120 Call Debug.Assert, X0, X1
	121 Move X8, [X20]
	122 Move X0, [X21]
	123 Move X8, [X8+184]
	124 Move X20, [X8+72]
	125 Call 0x1C17F10
	126 Move X1, X20
	127 Move X2, X31
	128 Move X19, X0
	129 Call Material..ctor, X0, X1
	130 Compare X19, 0
	131 JumpIfEqual {155}
	132 Move X20, 0x42E000
	133 Move X20, [X20+384]
	134 Move X0, X19
	135 Move X1, X31
	136 Call Object.get_hideFlags, X0
	137 Or W1, W0, 4
	138 Move X0, X19
	139 Move X2, X31
	140 Call Object.set_hideFlags, X0, X1
	141 Move X1, [X20]
	142 Move X0, X19
	143 Move V0, V8
	144 Move X2, X31
	145 Call Material.SetFloat, X0, X1, V0
	146 Move X0, X19
	147 Move X20, [X31+48]
	148 Move X19, [X31+56]
	149 Move X22, [X31+32]
	150 Move X21, [X31+40]
	151 Move X30, [X31+16]
	152 Move X23, [X31+24]
	153 Move V8, [X31+64]
	154 Return X0
	155 Call 0x1C17F20

Method: UnityEngine.Material GetBlitMaterial(UnityEngine.UIElements.VisualElement/RenderTargetMode mode)

Disassembly:
	0x03D3838C ADRP X25, 0x6AF000
	0x03D38390 LDRB W8, [X25 + 0xB59]
	0x03D38394 MOV X19, X5
	0x03D38398 MOV W24, W4
	0x03D3839C MOV X23, X3
	0x03D383A0 MOV W21, W2
	0x03D383A4 MOV X20, X1
	0x03D383A8 MOV X22, X0
	0x03D383AC CBZ W8, 0x3D383BC
	0x03D383B0 TBNZ X24, 0x0, 0x3D383D4
	0x03D383B4 CBNZ X20, 0x3D383E4
	0x03D383B8 B 0x3D38504
	0x03D383BC ADRP X0, 0x3E3000
	0x03D383C0 LDR X0, [X0 + 0x620]
	0x03D383C4 BL 0x1C16CF4
	0x03D383C8 MOVZ W8, 0x1
	0x03D383CC STRB W8, [X25 + 0xB59]
	0x03D383D0 TBZ X24, 0x0, 0x3D383B4
	0x03D383D4 MOVZ W8, 0x1
	0x03D383D8 STR X23, [X19 + 0x10]
	0x03D383DC STRB W8, [X19 + 0x30]
	0x03D383E0 CBZ X20, 0x3D38504
	0x03D383E4 LDR X8, [X20 + 0x50]
	0x03D383E8 CBZ X8, 0x3D38504
	0x03D383EC LDR X8, [X8 + 0x50]
	0x03D383F0 ADRP X23, 0x3E3000
	0x03D383F4 STR X8, [X19 + 0x28]
	0x03D383F8 LDR X23, [X23 + 0x620]
	0x03D383FC LDR W24, [X20 + 0x40]
	0x03D38400 LDR X0, [X23]
	0x03D38404 LDR W8, [X0 + 0xE0]
	0x03D38408 CBNZ W8, 0x3D38414
	0x03D3840C BL 0x1C16DFC
	0x03D38410 LDR X0, [X23]
	0x03D38414 LDR X8, [X0 + 0xB8]
	0x03D38418 ADRP X26, 0x6AF000
	0x03D3841C LDRB W9, [X26 + 0xB58]
	0x03D38420 LDR W25, [X8]
	0x03D38424 CBNZ W9, 0x3D3843C
	0x03D38428 MOV X0, X23
	0x03D3842C BL 0x1C16CF4
	0x03D38430 LDR X0, [X23]
	0x03D38434 MOVZ W8, 0x1
	0x03D38438 STRB W8, [X26 + 0xB58]
	0x03D3843C LDR W8, [X0 + 0xE0]
	0x03D38440 CBNZ W8, 0x3D38448
	0x03D38444 BL 0x1C16DFC
	0x03D38448 CMP W24, W25
	0x03D3844C B.EQ 0x3D384D0
	0x03D38450 LDR X0, [X22 + 0xA0]
	0x03D38454 CBZ X0, 0x3D38504
	0x03D38458 TBNZ X21, 0x1F, 0x3D384A4
	0x03D3845C LDR X8, [X0 + 0x18]
	0x03D38460 CBZ X8, 0x3D38504
	0x03D38464 LDR W9, [X8 + 0x18]
	0x03D38468 CMP W9, W21
	0x03D3846C B.LS 0x3D38508
	0x03D38470 ADD X8, X8, W21, 0x2, UXTW
	0x03D38474 LDR W9, [X8 + 0x20]!
	0x03D38478 LDR W10, [X0 + 0x24]
	0x03D3847C CMP W9, W10
	0x03D38480 B.GE 0x3D38490
	0x03D38484 LDR W9, [X0 + 0x30]
	0x03D38488 SUB W9, W9, 0x1
	0x03D3848C STR W9, [X0 + 0x30]
	0x03D38490 LDR W9, [X0 + 0x20]
	0x03D38494 ADD W9, W9, 0x1
	0x03D38498 STR W9, [X0 + 0x20]
	0x03D3849C STR W9, [X8]
	0x03D384A0 B 0x3D384D0
	0x03D384A4 BL 0x3D29B38
	0x03D384A8 LDR X8, [X22 + 0xA0]
	0x03D384AC CBZ X8, 0x3D38504
	0x03D384B0 LDR X3, [X19]
	0x03D384B4 LDR V0, [X20 + 0x48]
	0x03D384B8 LDR W1, [X20 + 0x40]
	0x03D384BC MOV W2, W0
	0x03D384C0 MOV X0, X8
	0x03D384C4 BL 0x3D29C08
	0x03D384C8 MOVZ W8, 0x1
	0x03D384CC STRB W8, [X19 + 0x32]
	0x03D384D0 LDR W8, [X20 + 0x44]
	0x03D384D4 LDR W9, [X19 + 0x1C]
	0x03D384D8 CMP W8, W9
	0x03D384DC B.EQ 0x3D384EC
	0x03D384E0 STR W8, [X19 + 0x1C]
	0x03D384E4 MOVZ W8, 0x1
	0x03D384E8 STRB W8, [X19 + 0x33]
	0x03D384EC LDP X20, X19, [X31 + 0x40]
	0x03D384F0 LDP X22, X21, [X31 + 0x30]
	0x03D384F4 LDP X24, X23, [X31 + 0x20]
	0x03D384F8 LDP X26, X25, [X31 + 0x10]
	0x03D384FC LDR X30, [X31], #0x50
	0x03D38500 RET
	0x03D38504 BL 0x1C16F20
	0x03D38508 BL 0x1C16F28
	0x03D3850C SUB X31, X31, 0x70
	0x03D38510 STP X30, X25, [X31 + 0x30]
	0x03D38514 STP X24, X23, [X31 + 0x40]
	0x03D38518 STP X22, X21, [X31 + 0x50]
	0x03D3851C STP X20, X19, [X31 + 0x60]
	0x03D38520 ADRP X23, 0x6AF000
	0x03D38524 LDRB W8, [X23 + 0xB5C]
	0x03D38528 MOV X22, X3
	0x03D3852C MOV W19, W2
	0x03D38530 MOV X20, X1
	0x03D38534 MOV X21, X0
	0x03D38538 TBNZ X8, 0x0, 0x3D38550
	0x03D3853C ADRP X0, 0x42C000
	0x03D38540 LDR X0, [X0 + 0x778]
	0x03D38544 BL 0x1C16CF4
	0x03D38548 MOVZ W8, 0x1
	0x03D3854C STRB W8, [X23 + 0xB5C]
	0x03D38550 CBZ X20, 0x3D385F0
	0x03D38554 LDR W24, [X20 + 0xC0]
	0x03D38558 MOVZ W8, 0x10
	0x03D3855C MOVZ W9, 0x8
	0x03D38560 ADD X0, X31, 0x28
	0x03D38564 ANDS W31, W24, 0x8
	0x03D38568 CSEL X8, X9, X8, NE
	0x03D3856C LDR W9, [X22, X8, LSL]
	0x03D38570 MOV X1, X31
	0x03D38574 ADD W9, W9, 0x1
	0x03D38578 STR W9, [X22, X8, LSL]
	0x03D3857C LDR X8, [X20 + 0x378]
	0x03D38580 STR X8, [X31 + 0x28]
	0x03D38584 BL 0x3DF88DC
	0x03D38588 CBZ X21, 0x3D385F0
	0x03D3858C ADRP X8, 0x42C000
	0x03D38590 LDR X8, [X8 + 0x778]
	0x03D38594 MOV X23, X0
	0x03D38598 LDR X25, [X21 + 0x110]
	0x03D3859C LDR X0, [X8]
	0x03D385A0 LDR W8, [X0 + 0xE0]
	0x03D385A4 CBNZ W8, 0x3D385AC
	0x03D385A8 BL 0x1C16DFC
	0x03D385AC UBFM W4, W24, 0x3, 0x3
	0x03D385B0 MOVZ W5, 0x1
	0x03D385B4 MOV X0, X21
	0x03D385B8 MOV X1, X23
	0x03D385BC MOV X2, X20
	0x03D385C0 MOV W3, W19
	0x03D385C4 MOV W6, W31
	0x03D385C8 MOV W7, W31
	0x03D385CC STP X25, X22, [X31 + 0x8]
	0x03D385D0 STRB W31, [X31]
	0x03D385D4 BL 0x3D385F4
	0x03D385D8 LDP X20, X19, [X31 + 0x60]
	0x03D385DC LDP X22, X21, [X31 + 0x50]
	0x03D385E0 LDP X24, X23, [X31 + 0x40]
	0x03D385E4 LDP X30, X25, [X31 + 0x30]
	0x03D385E8 ADD X31, X31, 0x70
	0x03D385EC RET
	0x03D385F0 BL 0x1C16F20
	0x03D385F4 SUB X31, X31, 0xC0
	0x03D385F8 STP X29, X30, [X31 + 0x60]
	0x03D385FC STP X28, X27, [X31 + 0x70]
	0x03D38600 STP X26, X25, [X31 + 0x80]
	0x03D38604 STP X24, X23, [X31 + 0x90]
	0x03D38608 STP X22, X21, [X31 + 0xA0]
	0x03D3860C STP X20, X19, [X31 + 0xB0]
	0x03D38610 ADRP X19, 0x6AF000
	0x03D38614 LDRB W8, [X19 + 0xB65]
	0x03D38618 MOV W25, W7
	0x03D3861C MOV W29, W6
	0x03D38620 MOV W26, W5
	0x03D38624 MOV W20, W3
	0x03D38628 MOV X21, X2
	0x03D3862C MOV X27, X1
	0x03D38630 MOV X22, X0
	0x03D38634 STR W4, [X31 + 0x4C]
	0x03D38638 TBNZ X8, 0x0, 0x3D38674
	0x03D3863C ADRP X0, 0x42C000
	0x03D38640 LDR X0, [X0 + 0x9C8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6B0000
	005 Move W8, [X20+2890]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {28}
	011 Move X0, 0x42E000
	012 Move X0, [X0+248]
	013 Call 0x1C17CF4
	014 Move X0, 0x3BC000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x3BC000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x42E000
	021 Move X0, [X0+360]
	022 Call 0x1C17CF4
	023 Move X0, 0x42E000
	024 Move X0, [X0+368]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2890], W8
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X20, 0x42E000
	032 Move X20, [X20+248]
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X20]
	039 Move X8, 0x3BC000
	040 Move X8, [X8+1432]
	041 Move X9, [X0+184]
	042 Move X8, [X8]
	043 Move X19, [X9+56]
	044 Move W10, [X8+224]
	045 Compare W10, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X19
	050 Move X1, X31
	051 Move X2, X31
	052 Call Object.op_Equality, X0, X1
	053 Move X8, [X20]
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {68}
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Move S0, -1
	064 Call CommandGenerator.CreateBlitShader, V0
	065 Move X8, [X20]
	066 Move X9, [X8+184]
	067 Move [X9+56], X0
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {74}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move X8, [X20]
	074 Move X8, [X8+184]
	075 Move X0, [X8+56]
	076 Move X20, 0x42E000
	077 Move X20, [X20+248]
	078 Move X0, [X20]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X20]
	084 Move X8, 0x3BC000
	085 Move X8, [X8+1432]
	086 Move X9, [X0+184]
	087 Move X8, [X8]
	088 Move X19, [X9+64]
	089 Move W10, [X8+224]
	090 Compare W10, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X8
	093 Call 0x1C17DFC
	094 Move X0, X19
	095 Move X1, X31
	096 Move X2, X31
	097 Call Object.op_Equality, X0, X1
	098 Move X8, [X20]
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {113}
	103 Move W9, [X8+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {108}
	106 Move X0, X8
	107 Call 0x1C17DFC
	108 Move S0, W31
	109 Call CommandGenerator.CreateBlitShader, V0
	110 Move X8, [X20]
	111 Move X9, [X8+184]
	112 Move [X9+64], X0
	113 Move W9, [X8+224]
	114 Compare W9, 0
	115 JumpIfNotEqual {119}
	116 Move X0, X8
	117 Call 0x1C17DFC
	118 Move X8, [X20]
	119 Move X8, [X8+184]
	120 Move X0, [X8+64]
	121 Move X20, 0x42E000
	122 Move X20, [X20+248]
	123 Move X0, [X20]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {129}
	127 Call 0x1C17DFC
	128 Move X0, [X20]
	129 Move X8, 0x3BC000
	130 Move X8, [X8+1432]
	131 Move X9, [X0+184]
	132 Move X8, [X8]
	133 Move X19, [X9+48]
	134 Move W10, [X8+224]
	135 Compare W10, 0
	136 JumpIfNotEqual {139}
	137 Move X0, X8
	138 Call 0x1C17DFC
	139 Move X0, X19
	140 Move X1, X31
	141 Move X2, X31
	142 Call Object.op_Equality, X0, X1
	143 Move X8, [X20]
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {158}
	148 Move W9, [X8+224]
	149 Compare W9, 0
	150 JumpIfNotEqual {153}
	151 Move X0, X8
	152 Call 0x1C17DFC
	153 Move S0, 1
	154 Call CommandGenerator.CreateBlitShader, V0
	155 Move X8, [X20]
	156 Move X9, [X8+184]
	157 Move [X9+48], X0
	158 Move W9, [X8+224]
	159 Compare W9, 0
	160 JumpIfNotEqual {164}
	161 Move X0, X8
	162 Call 0x1C17DFC
	163 Move X8, [X20]
	164 Move X8, [X8+184]
	165 Move X0, [X8+48]
	166 Move X8, 0x42E000
	167 Move X8, [X8+360]
	168 Add X1, X31, 12
	169 Move [X31+12], W19
	170 Move X0, [X8]
	171 Call 0x1C17E04
	172 Move X8, 0x42E000
	173 Move X8, [X8+368]
	174 Move X1, X0
	175 Move X2, X31
	176 Move X8, [X8]
	177 Move X0, X8
	178 Call String.Format, X0, X1
	179 Move X8, 0x3BC000
	180 Move X8, [X8+2600]
	181 Move X19, X0
	182 Move X8, [X8]
	183 Move W9, [X8+224]
	184 Compare W9, 0
	185 JumpIfNotEqual {188}
	186 Move X0, X8
	187 Call 0x1C17DFC
	188 Move X0, X19
	189 Move X1, X31
	190 Call Debug.LogError, X0
	191 Move X0, X31
	192 Move X20, [X31+16]
	193 Move X19, [X31+24]
	194 Move X30, [X31+32]
	195 Return X0

Method: System.Void ClosePaintElement(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.UIR.Implementation.UIRStylePainter/ClosingInfo closingInfo, UnityEngine.UIElements.UIR.RenderChain renderChain, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)

Disassembly:
	0x03D38944 ORR W8, W28, W8, 0x0
	0x03D38948 STR W8, [X31 + 0x3C]
	0x03D3894C TBZ X9, 0x0, 0x3D38A5C
	0x03D38950 LDR X8, [X31 + 0x30]
	0x03D38954 CBZ X8, 0x3D38A0C
	0x03D38958 LDP W27, W23, [X8 + 0xF4]
	0x03D3895C CMP W25, 0x4
	0x03D38960 B.NE 0x3D38A14
	0x03D38964 CMP W23, W27
	0x03D38968 MOV W25, W11
	0x03D3896C CINC W27, W27, GT
	0x03D38970 ADD W23, W23, 0x1
	0x03D38974 B 0x3D38A18
	0x03D38978 CMP W23, 0x4
	0x03D3897C CSET W8, EQ
	0x03D38980 CMP W25, 0x4
	0x03D38984 CSET W9, EQ
	0x03D38988 CMP W23, 0x2
	0x03D3898C ORR W26, W8, W9, 0x0
	0x03D38990 CSET W8, EQ
	0x03D38994 CMP W25, 0x2
	0x03D38998 LDR W10, [X31 + 0x2C]
	0x03D3899C CSET W9, EQ
	0x03D389A0 ORR W11, W8, W9, 0x0
	0x03D389A4 LDR X9, [X31 + 0x30]
	0x03D389A8 ORR W10, W10, W26, 0x0
	0x03D389AC CMP W25, 0x3
	0x03D389B0 MOV W19, W29
	0x03D389B4 STR W25, [X21 + 0xF0]
	0x03D389B8 B.NE 0x3D389E4
	0x03D389BC LDR W8, [X31 + 0x4C]
	0x03D389C0 MOV W29, W24
	0x03D389C4 ORR W8, W28, W8, 0x0
	0x03D389C8 STR W8, [X31 + 0x3C]
	0x03D389CC TBZ X10, 0x0, 0x3D38B80
	0x03D389D0 CBZ X9, 0x3D38BC8
	0x03D389D4 LDP W27, W23, [X9 + 0xF4]
	0x03D389D8 MOV W25, W11
	0x03D389DC MOVZ W24, 0x1
	0x03D389E0 B 0x3D38A18
	0x03D389E4 CMP W23, 0x3
	0x03D389E8 MOV W29, W24
	0x03D389EC B.NE 0x3D38B8C
	0x03D389F0 LDR X0, [X21 + 0x160]
	0x03D389F4 MOV X1, X31
	0x03D389F8 STP W11, W10, [X31 + 0x28]
	0x03D389FC BL 0x3D2795C
	0x03D38A00 TBZ X0, 0x0, 0x3D38BA8
	0x03D38A04 LDP W11, W9, [X31 + 0x28]
	0x03D38A08 B 0x3D38934
	0x03D38A0C MOV W23, W31
	0x03D38A10 B 0x3D38A34
	0x03D38A14 MOV W25, W11
	0x03D38A18 MOV X0, X21
	0x03D38A1C MOV X1, X31
	0x03D38A20 BL 0x3DEC0F4
	0x03D38A24 ANDS W31, W0, 0x8
	0x03D38A28 CCMP W23, 0x6, 0x0, NE
	0x03D38A2C CSEL W8, W27, W23, GT
	0x03D38A30 MOV W11, W25
	0x03D38A34 LDR W9, [X21 + 0xF8]
	0x03D38A38 CMP W9, W23
	0x03D38A3C B.NE 0x3D38A54
	0x03D38A40 LDR W9, [X21 + 0xF4]
	0x03D38A44 CMP W9, W8
	0x03D38A48 CSET W9, NE
	0x03D38A4C ORR W27, W26, W9, 0x0
	0x03D38A50 B 0x3D38A58
	0x03D38A54 MOVZ W27, 0x1
	0x03D38A58 STP W8, W23, [X21 + 0xF4]
	0x03D38A5C ORR W8, W29, W19, 0x5
	0x03D38A60 ANDS W8, W8, 0x1
	0x03D38A64 CSET W23, NE
	0x03D38A68 CBNZ W8, 0x3D38A94
	0x03D38A6C ORR W8, W28, W27, 0x0
	0x03D38A70 ORR W9, W11, W8, 0x0
	0x03D38A74 TBZ X9, 0x0, 0x3D38A94
	0x03D38A78 CBZ X22, 0x3D38BD8
	0x03D38A7C AND W2, W8, 0x1
	0x03D38A80 MOV X0, X22
	0x03D38A84 MOV X1, X21
	0x03D38A88 MOV X3, X31
	0x03D38A8C BL 0x3D25CC0
	0x03D38A90 MOVZ W23, 0x1
	0x03D38A94 CBZ W24, 0x3D38AB4
	0x03D38A98 CBZ X22, 0x3D38BD8
	0x03D38A9C MOVZ W3, 0x1
	0x03D38AA0 MOV X0, X22
	0x03D38AA4 MOV X1, X21
	0x03D38AA8 MOV W2, W31
	0x03D38AAC MOV X4, X31
	0x03D38AB0 BL 0x3D26310
	0x03D38AB4 LDR W8, [X31 + 0x3C]
	0x03D38AB8 ORR W8, W8, W27, 0x0
	0x03D38ABC TBZ X8, 0x0, 0x3D38B60
	0x03D38AC0 LDR X8, [X21 + 0x378]
	0x03D38AC4 ADD X0, X31, 0x50
	0x03D38AC8 MOV X1, X31
	0x03D38ACC STR X8, [X31 + 0x50]
	0x03D38AD0 BL 0x3DF8994
	0x03D38AD4 CMP W0, 0x1
	0x03D38AD8 B.LT 0x3D38B60
	0x03D38ADC ADRP X19, 0x42C000
	0x03D38AE0 LDR X29, [X31 + 0xC8]
	0x03D38AE4 LDR X19, [X19 + 0x778]
	0x03D38AE8 MOV W24, W0
	0x03D38AEC MOV W25, W31
	0x03D38AF0 LDR X8, [X21 + 0x378]
	0x03D38AF4 ADD X0, X31, 0x50
	0x03D38AF8 MOV W1, W25
	0x03D38AFC MOV X2, X31
	0x03D38B00 STR X8, [X31 + 0x50]
	0x03D38B04 BL 0x3DF98E4
	0x03D38B08 LDR X8, [X19]
	0x03D38B0C MOV X26, X0
	0x03D38B10 LDR W9, [X8 + 0xE0]
	0x03D38B14 CBNZ W9, 0x3D38B20
	0x03D38B18 MOV X0, X8
	0x03D38B1C BL 0x1C16DFC
	0x03D38B20 LDR X8, [X31 + 0x40]
	0x03D38B24 AND W7, W28, 0x1
	0x03D38B28 MOV X0, X22
	0x03D38B2C MOV X1, X21
	0x03D38B30 STP X29, X8, [X31 + 0x8]
	0x03D38B34 LDR W8, [X31 + 0x4C]
	0x03D38B38 MOV X2, X26
	0x03D38B3C MOV W3, W20
	0x03D38B40 MOV W5, W31
	0x03D38B44 AND W4, W8, 0x1
	0x03D38B48 MOV W6, W23
	0x03D38B4C STRB W27, [X31]
	0x03D38B50 BL 0x3D385F4
	0x03D38B54 ADD W25, W25, 0x1
	0x03D38B58 CMP W24, W25
	0x03D38B5C B.NE 0x3D38AF0
	0x03D38B60 LDP X20, X19, [X31 + 0xB0]
	0x03D38B64 LDP X22, X21, [X31 + 0xA0]
	0x03D38B68 LDP X24, X23, [X31 + 0x90]
	0x03D38B6C LDP X26, X25, [X31 + 0x80]
	0x03D38B70 LDP X28, X27, [X31 + 0x70]
	0x03D38B74 LDP X29, X30, [X31 + 0x60]
	0x03D38B78 ADD X31, X31, 0xC0
	0x03D38B7C RET

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X23, 0x6B0000
	015 Move X27, 0x42D000
	016 Move W8, [X23+2891]
	017 Move X27, [X27+4024]
	018 Move X22, X3
	019 Move X20, X2
	020 Move X19, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {43}
	026 Move X0, 0x42E000
	027 Move X0, [X0+248]
	028 Call 0x1C17CF4
	029 Move X0, 0x42E000
	030 Move X0, [X0+312]
	031 Call 0x1C17CF4
	032 Move X0, 0x42E000
	033 Move X0, [X0+320]
	034 Call 0x1C17CF4
	035 Move X0, 0x42E000
	036 Move X0, [X0+328]
	037 Call 0x1C17CF4
	038 Move X0, 0x42D000
	039 Move X0, [X0+4024]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X23+2891], W8
	043 Move X1, [X27]
	044 Add X24, X19, 32
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move X0, X24
	047 Move [X31+32], V0
	048 Move [X31+40], V0
	049 Move [X31+1], V0
	050 Call NativeSlice`1<UInt16>.get_Length, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X31+96], X31
	053 Move [X31+104], X31
	054 Move [X31+80], X31
	055 Move [X31+88], X31
	056 NotImplemented "Instruction STRH not yet implemented."
	057 Compare X21, 0
	058 JumpIfEqual {174}
	059 Move X26, 0x42E000
	060 Move X26, [X26+328]
	061 Add X0, X19, 16
	062 Move X1, [X26]
	063 Call NativeSlice`1<Vertex>.get_Length, X0
	064 Move X1, [X27]
	065 Move W23, W0
	066 Move X0, X24
	067 Call NativeSlice`1<UInt16>.get_Length, X0
	068 Compare X20, 0
	069 JumpIfEqual {174}
	070 Move X8, 0x42E000
	071 Move X8, [X8+248]
	072 Move W24, W0
	073 Move X29, 0x42E000
	074 Move X28, 0x42E000
	075 Move X0, [X8]
	076 Move X25, [X20+272]
	077 Add X21, X21, 264
	078 Move W8, [X0+224]
	079 Move X29, [X29+320]
	080 Move X28, [X28+312]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Add X4, X31, 96
	085 Add X5, X31, 80
	086 Add X6, X31, 76
	087 Move X0, X21
	088 Move W1, W23
	089 Move W2, W24
	090 Move X3, X25
	091 Move X7, X22
	092 Call CommandGenerator.UpdateOrAllocate, X0, X1, X2, X3, X4, X5, X6, X7
	093 Move X0, [X19+16]
	094 Move X1, [X19+24]
	095 Move X2, [X29]
	096 Call NativeSliceUnsafeUtility.GetUnsafePtr, X0
	097 Move X1, X31
	098 Call IntPtr.op_Explicit, X0
	099 Move X8, [X31+96]
	100 Move X1, [X31+104]
	101 Move X2, [X29]
	102 Move X22, X0
	103 Move X0, X8
	104 Call NativeSliceUnsafeUtility.GetUnsafePtr, X0
	105 Move X1, X31
	106 Call IntPtr.op_Explicit, X0
	107 Move X1, [X26]
	108 Move X23, X0
	109 Add X0, X31, 96
	110 Call NativeSlice`1<Vertex>.get_Length, X0
	111 Move X8, [X19+32]
	112 Move X1, [X19+40]
	113 Move X2, [X28]
	114 Move W24, W0
	115 Move X0, X8
	116 Call NativeSliceUnsafeUtility.GetUnsafePtr, X0
	117 Move X1, X31
	118 Call IntPtr.op_Explicit, X0
	119 Move X8, [X31+80]
	120 Move X1, [X31+88]
	121 Move X2, [X28]
	122 Move X25, X0
	123 Move X0, X8
	124 Call NativeSliceUnsafeUtility.GetUnsafePtr, X0
	125 Move X1, X31
	126 Call IntPtr.op_Explicit, X0
	127 Move X1, [X27]
	128 Move X26, X0
	129 Add X0, X31, 80
	130 Call NativeSlice`1<UInt16>.get_Length, X0
	131 NotImplemented "Instruction LDRH not yet implemented."
	132 Move W9, [X19+48]
	133 Move [X31+16], X22
	134 Move [X31+24], X23
	135 Move [X31+32], W24
	136 Move [X31+36], W31
	137 Move [X31+40], X25
	138 Move [X31+48], X26
	139 Subtract W8, W8, W9
	140 Move [X31+56], W0
	141 Move [X31+60], W8
	142 Move X0, [X20+312]
	143 Compare X0, 0
	144 JumpIfEqual {174}
	145 Add X1, X31, 16
	146 Move X2, X31
	147 Call JobManager.Add, X0, X1
	148 Move X8, [X19+8]
	149 Compare X8, 0
	150 JumpIfEqual {174}
	151 Move X9, [X21]
	152 Add X0, X31, 80
	153 Move [X8+80], X9
	154 Move X1, [X27]
	155 Move X19, [X19+8]
	156 Call NativeSlice`1<UInt16>.get_Length, X0
	157 Compare X19, 0
	158 JumpIfEqual {174}
	159 Move [X19+92], W0
	160 Move X20, [X31+192]
	161 Move X19, [X31+200]
	162 Move X22, [X31+176]
	163 Move X21, [X31+184]
	164 Move X24, [X31+160]
	165 Move X23, [X31+168]
	166 Move X26, [X31+144]
	167 Move X25, [X31+152]
	168 Move X28, [X31+128]
	169 Move X27, [X31+136]
	170 Move X29, [X31+112]
	171 Move X30, [X31+120]
	172 Add X31, X31, 208
	173 Return 
	174 Call 0x1C17F20

Method: System.Void UpdateOrAllocate(ref UnityEngine.UIElements.UIR.MeshHandle data, System.Int32 vertexCount, System.Int32 indexCount, UnityEngine.UIElements.UIR.UIRenderDevice device, out Unity.Collections.NativeSlice`1<UnityEngine.UIElements.Vertex> verts, out Unity.Collections.NativeSlice`1<System.UInt16> indices, out System.UInt16 indexOffset, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)

Disassembly:
	0x03D37D38 ADD X31, X31, 0x50
	0x03D37D3C B 0x3D23068
	0x03D37D40 BL 0x1C16F20
	0x03D37D44 STR D10, [X31 - 0x70]!
	0x03D37D48 STP D9, D8, [X31 + 0x8]
	0x03D37D4C STR X29, [X31 + 0x18]
	0x03D37D50 STP X30, X27, [X31 + 0x20]
	0x03D37D54 STP X26, X25, [X31 + 0x30]
	0x03D37D58 STP X24, X23, [X31 + 0x40]
	0x03D37D5C STP X22, X21, [X31 + 0x50]
	0x03D37D60 STP X20, X19, [X31 + 0x60]
	0x03D37D64 SUB X31, X31, 0x300
	0x03D37D68 MRS X25, 0xC000
	0x03D37D6C LDR X8, [X25 + 0x28]
	0x03D37D70 ADRP X22, 0x6B0000
	0x03D37D74 MOV X20, X2
	0x03D37D78 MOV X19, X1
	0x03D37D7C STR X8, [X31 + 0x2F8]
	0x03D37D80 LDRB W8, [X22 + 0xB4E]
	0x03D37D84 MOV X21, X0
	0x03D37D88 ADD X23, X31, 0x280
	0x03D37D8C TBNZ X8, 0x0, 0x3D37DB0
	0x03D37D90 ADRP X0, 0x42E000
	0x03D37D94 LDR X0, [X0 + 0xF8]
	0x03D37D98 BL 0x1C16CF4
	0x03D37D9C ADRP X0, 0x3BC000
	0x03D37DA0 LDR X0, [X0 + 0xA28]
	0x03D37DA4 BL 0x1C16CF4
	0x03D37DA8 MOVZ W8, 0x1
	0x03D37DAC STRB W8, [X22 + 0xB4E]
	0x03D37DB0 MOVI V0.2D, 0x0
	0x03D37DB4 STR X31, [X31 + 0x1F0]
	0x03D37DB8 STP V0, V0, [X31 + 0x260]
	0x03D37DBC STP V0, V0, [X31 + 0x240]
	0x03D37DC0 STP V0, V0, [X31 + 0x1D0]
	0x03D37DC4 STP V0, V0, [X31 + 0x1B0]
	0x03D37DC8 STP V0, V0, [X31 + 0x190]
	0x03D37DCC STR V0, [X31 + 0x18]
	0x03D37DD0 STUR V0, [X23 + 0x5C]
	0x03D37DD4 STP V0, V0, [X31 + 0x2C0]
	0x03D37DD8 STP V0, V0, [X31 + 0x2A0]
	0x03D37DDC STP V0, V0, [X31 + 0x280]
	0x03D37DE0 CBZ X21, 0x3D380C0
	0x03D37DE4 ADRP X8, 0x3BC000
	0x03D37DE8 LDR X8, [X8 + 0xA28]
	0x03D37DEC ADRP X26, 0x42E000
	0x03D37DF0 LDRB W22, [X21 + 0xFC]
	0x03D37DF4 LDR X0, [X8]
	0x03D37DF8 LDR W8, [X0 + 0xE0]
	0x03D37DFC LDR X26, [X26 + 0xF8]
	0x03D37E00 CBNZ W8, 0x3D37E08
	0x03D37E04 BL 0x1C16DFC
	0x03D37E08 CMP W22, 0x0
	0x03D37E0C CSET W0, EQ
	0x03D37E10 MOV X1, X31
	0x03D37E14 BL 0x3C06E58
	0x03D37E18 LDR X0, [X26]
	0x03D37E1C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X0]
	011 Move X19, X7
	012 Move X20, X6
	013 Move X21, X5
	014 Move X23, X4
	015 Move X25, X3
	016 Move W24, W2
	017 Move X22, X0
	018 Move W26, W1
	019 Compare X8, 0
	020 JumpIfEqual {25}
	021 Move W9, [X8+28]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Compare X25, 0
	024 JumpIfNotEqual {31}
	025 Compare X25, 0
	026 JumpIfNotEqual {34}
	027 Compare X25, 0
	028 JumpIfEqual {65}
	029 Move W9, [X8+52]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X25
	032 Move X1, X8
	033 Call UIRenderDevice.Free, X0, X1
	034 Move X0, X25
	035 Move W1, W26
	036 Move W2, W24
	037 Move X3, X23
	038 Move X4, X21
	039 Move X5, X20
	040 Call UIRenderDevice.Allocate, X0, X1, X2, X3, X4, X5
	041 Add X8, X19, 84
	042 Move [X22], X0
	043 Move W9, [X8]
	044 Move X20, [X31+64]
	045 Move X19, [X31+72]
	046 Move X22, [X31+48]
	047 Move X21, [X31+56]
	048 Move X24, [X31+32]
	049 Move X23, [X31+40]
	050 Move X26, [X31+16]
	051 Move X25, [X31+24]
	052 Add W9, W9, 1
	053 Move [X8], W9
	054 Move X30, [X31+80]
	055 Return 
	056 Move X0, X25
	057 Move X1, X8
	058 Move W2, W26
	059 Move W3, W24
	060 Move X4, X23
	061 Move X5, X21
	062 Move X6, X20
	063 Call UIRenderDevice.Update, X0, X1, X2, X3, X4, X5, X6
	064 Add X8, X19, 80
	065 Call 0x1C17F20

Method: System.Void UpdateOpacityId(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.UIR.RenderChain renderChain)

Disassembly:
	0x03D38B80 MOV W27, W31
	0x03D38B84 MOVZ W24, 0x1
	0x03D38B88 B 0x3D38A5C
	0x03D38B8C LDR W8, [X31 + 0x4C]
	0x03D38B90 MOV W24, W31
	0x03D38B94 MOV W27, W31
	0x03D38B98 ORR W8, W28, W8, 0x0
	0x03D38B9C STR W8, [X31 + 0x3C]
	0x03D38BA0 TBNZ X10, 0x0, 0x3D38950
	0x03D38BA4 B 0x3D38A5C
	0x03D38BA8 LDR W8, [X31 + 0x4C]
	0x03D38BAC MOV W24, W31
	0x03D38BB0 MOV W27, W31
	0x03D38BB4 ORR W8, W28, W8, 0x0
	0x03D38BB8 STR W8, [X31 + 0x3C]
	0x03D38BBC LDP W11, W8, [X31 + 0x28]
	0x03D38BC0 TBNZ X8, 0x0, 0x3D38950
	0x03D38BC4 B 0x3D38A5C
	0x03D38BC8 MOV W8, W31
	0x03D38BCC MOV W23, W31
	0x03D38BD0 MOVZ W24, 0x1
	0x03D38BD4 B 0x3D38A34
	0x03D38BD8 BL 0x1C16F20
	0x03D38BDC STR D8, [X31 - 0x40]!
	0x03D38BE0 STP X30, X23, [X31 + 0x10]
	0x03D38BE4 STP X22, X21, [X31 + 0x20]
	0x03D38BE8 STP X20, X19, [X31 + 0x30]
	0x03D38BEC ADRP X23, 0x6AF000
	0x03D38BF0 LDRB W8, [X23 + 0xB5D]
	0x03D38BF4 MOV X19, X3
	0x03D38BF8 MOV W20, W2
	0x03D38BFC MOV X21, X1
	0x03D38C00 MOV X22, X0
	0x03D38C04 TBNZ X8, 0x0, 0x3D38C1C
	0x03D38C08 ADRP X0, 0x42C000
	0x03D38C0C LDR X0, [X0 + 0x778]
	0x03D38C10 BL 0x1C16CF4
	0x03D38C14 MOVZ W8, 0x1
	0x03D38C18 STRB W8, [X23 + 0xB5D]
	0x03D38C1C CBZ X21, 0x3D38CB8
	0x03D38C20 LDR W8, [X19 + 0x1C]
	0x03D38C24 LDR W23, [X21 + 0xC0]
	0x03D38C28 ADD X0, X31, 0x8
	0x03D38C2C MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6B0000
	007 Move W8, [X21+2892]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x42E000
	015 Move X0, [X0+248]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2892], W8
	019 Compare X20, 0
	020 JumpIfEqual {57}
	021 Move X22, 0x42E000
	022 Move X21, [X20+256]
	023 Move X22, [X22+248]
	024 Compare X21, 0
	025 JumpIfEqual {35}
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X19
	033 Move X2, X21
	034 Call CommandGenerator.DoUpdateOpacityId, X0, X1, X2
	035 Move X21, [X20+264]
	036 Compare X21, 0
	037 JumpIfEqual {51}
	038 Move X0, [X22]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X1, X19
	045 Move X2, X21
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return 
	057 Call 0x1C17F20

Method: System.Void DoUpdateOpacityId(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.UIR.MeshHandle mesh)

Disassembly:
	0x03D38C30 ADD W8, W8, 0x1
	0x03D38C34 STR W8, [X19 + 0x1C]
	0x03D38C38 LDR X8, [X21 + 0x378]
	0x03D38C3C STR X8, [X31 + 0x8]
	0x03D38C40 BL 0x3DF88DC
	0x03D38C44 CBZ X0, 0x3D38C68
	0x03D38C48 LDR X8, [X21 + 0x378]
	0x03D38C4C ADD X0, X31, 0x8
	0x03D38C50 MOV X1, X31
	0x03D38C54 STR X8, [X31 + 0x8]
	0x03D38C58 BL 0x3DF88DC
	0x03D38C5C CBZ X0, 0x3D38CB8
	0x03D38C60 LDR V8, [X0 + 0x1B0]
	0x03D38C64 B 0x3D38C6C
	0x03D38C68 FMOV S8, 1
	0x03D38C6C ADRP X8, 0x42C000
	0x03D38C70 LDR X8, [X8 + 0x778]
	0x03D38C74 LDR X0, [X8]
	0x03D38C78 LDR W8, [X0 + 0xE0]
	0x03D38C7C CBNZ W8, 0x3D38C84
	0x03D38C80 BL 0x1C16DFC
	0x03D38C84 UBFM W3, W23, 0x8, 0x8
	0x03D38C88 MOV X0, X22
	0x03D38C8C MOV V0.16B, V8.16B
	0x03D38C90 MOV X1, X21
	0x03D38C94 MOV W2, W20
	0x03D38C98 MOV X4, X19
	0x03D38C9C MOV W5, W31
	0x03D38CA0 BL 0x3D38CBC
	0x03D38CA4 LDP X20, X19, [X31 + 0x30]
	0x03D38CA8 LDP X22, X21, [X31 + 0x20]
	0x03D38CAC LDP X30, X23, [X31 + 0x10]
	0x03D38CB0 LDR V8, [X31], #0x40
	0x03D38CB4 RET
	0x03D38CB8 BL 0x1C16F20
	0x03D38CBC SUB X31, X31, 0x90
	0x03D38CC0 STR D10, [X31 + 0x10]
	0x03D38CC4 STP D9, D8, [X31 + 0x20]
	0x03D38CC8 STP X29, X30, [X31 + 0x30]
	0x03D38CCC STP X28, X27, [X31 + 0x40]
	0x03D38CD0 STP X26, X25, [X31 + 0x50]
	0x03D38CD4 STP X24, X23, [X31 + 0x60]
	0x03D38CD8 STP X22, X21, [X31 + 0x70]
	0x03D38CDC STP X20, X19, [X31 + 0x80]
	0x03D38CE0 ADRP X25, 0x6AF000
	0x03D38CE4 LDRB W8, [X25 + 0xB66]
	0x03D38CE8 MOV W19, W5
	0x03D38CEC MOV X20, X4
	0x03D38CF0 MOV W21, W3
	0x03D38CF4 MOV W22, W2
	0x03D38CF8 MOV X23, X1
	0x03D38CFC MOV V9.16B, V0.16B
	0x03D38D00 MOV X24, X0
	0x03D38D04 TBNZ X8, 0x0, 0x3D38D40
	0x03D38D08 ADRP X0, 0x42C000
	0x03D38D0C LDR X0, [X0 + 0x9C8]
	0x03D38D10 BL 0x1C16CF4
	0x03D38D14 ADRP X0, 0x3E4000
	0x03D38D18 LDR X0, [X0 + 0x120]
	0x03D38D1C BL 0x1C16CF4
	0x03D38D20 ADRP X0, 0x42C000
	0x03D38D24 LDR X0, [X0 + 0x778]
	0x03D38D28 BL 0x1C16CF4
	0x03D38D2C ADRP X0, 0x42C000
	0x03D38D30 LDR X0, [X0 + 0x760]
	0x03D38D34 BL 0x1C16CF4
	0x03D38D38 MOVZ W8, 0x1
	0x03D38D3C STRB W8, [X25 + 0xB66]
	0x03D38D40 STR X31, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X21, 0x6B0000
	010 Move W8, [X21+2893]
	011 Move X22, X2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x42D000
	019 Move X0, [X0+3792]
	020 Call 0x1C17CF4
	021 Move X0, 0x42D000
	022 Move X0, [X0+1888]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2893], W8
	026 Move [X31], X31
	027 Move [X31+8], X31
	028 Compare X22, 0
	029 JumpIfEqual {91}
	030 Move X8, [X22+80]
	031 Compare X8, 0
	032 JumpIfEqual {91}
	033 Move X8, [X8+24]
	034 Compare X8, 0
	035 JumpIfEqual {91}
	036 Move X9, 0x42D000
	037 Move X9, [X9+3792]
	038 Move W2, [X22+24]
	039 Move W21, [X22+28]
	040 Move X0, [X8+32]
	041 Move X1, [X8+40]
	042 Move X4, [X9]
	043 Move W3, W21
	044 Call NativeSliceExtensions.Slice, X0, X1, X2
	045 Compare X19, 0
	046 JumpIfEqual {91}
	047 Move X23, X0
	048 Move X0, [X19+272]
	049 Compare X0, 0
	050 JumpIfEqual {91}
	051 Move X24, X1
	052 Add X3, X31, 0
	053 Move X1, X22
	054 Move W2, W21
	055 Call UIRenderDevice.Update, X0, X1, X2, X3
	056 Compare X20, 0
	057 JumpIfEqual {91}
	058 Move X8, 0x42D000
	059 Move X8, [X8+1888]
	060 Move X20, [X20+360]
	061 Add X22, X19, 320
	062 Move X0, [X8]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X22
	068 Move X1, X20
	069 Call UIRVEShaderInfoAllocator.OpacityAllocToVertexData, X0, X1
	070 Move X8, [X19+248]
	071 Compare X8, 0
	072 JumpIfEqual {91}
	073 Move X3, [X31]
	074 Move X4, [X31+8]
	075 Move X1, X23
	076 Move X2, X24
	077 Move W6, W21
	078 Move X20, [X31+64]
	079 Move X19, [X31+72]
	080 Move X22, [X31+48]
	081 Move X21, [X31+56]
	082 Move X24, [X31+32]
	083 Move X23, [X31+40]
	084 Move X30, [X31+16]
	085 And X5, X0, 0
	086 Move X0, X8
	087 Move X7, X31
	088 Add X31, X31, 80
	089 Call OpacityIdAccelerator.CreateJob, X0, X1, X2, X3, X4
	090 Return 
	091 Call 0x1C17F20

Method: System.Boolean NudgeVerticesToNewSpace(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.UIR.UIRenderDevice device)

Disassembly:
	0x03D38D44 CBZ X23, 0x3D390FC
	0x03D38D48 LDR W8, [X23 + 0xC4]
	0x03D38D4C CMP W8, W22
	0x03D38D50 B.EQ 0x3D390A8
	0x03D38D54 STR W22, [X23 + 0xC4]
	0x03D38D58 LDR W8, [X20 + 0x20]
	0x03D38D5C MOV X0, X23
	0x03D38D60 MOV X1, X31
	0x03D38D64 ADD W8, W8, 0x1
	0x03D38D68 STR W8, [X20 + 0x20]
	0x03D38D6C LDR V10, [X23 + 0x1B0]
	0x03D38D70 BL 0x3DE0EB8
	0x03D38D74 CBZ X0, 0x3D390FC
	0x03D38D78 ADRP X10, 0x3E4000
	0x03D38D7C LDR X8, [X0]
	0x03D38D80 LDR X10, [X10 + 0x120]
	0x03D38D84 MOV X25, X0
	0x03D38D88 LDRH W9, [X8 + 0x12E]
	0x03D38D8C LDR X1, [X10]
	0x03D38D90 CBZ X9, 0x3D38DB4
	0x03D38D94 LDR X10, [X8 + 0xB0]
	0x03D38D98 ADD X10, X10, 0x8
	0x03D38D9C LDUR X11, [X10 - 0x8]
	0x03D38DA0 CMP X11, X1
	0x03D38DA4 B.EQ 0x3D38DC4
	0x03D38DA8 SUBS X9, X9, 0x1
	0x03D38DAC ADD X10, X10, 0x10
	0x03D38DB0 B.NE 0x3D38D9C
	0x03D38DB4 MOVZ W2, 0x1B
	0x03D38DB8 MOV X0, X25
	0x03D38DBC BL 0x1C5C788
	0x03D38DC0 B 0x3D38DD4
	0x03D38DC4 LDR W9, [X10]
	0x03D38DC8 ADD W9, W9, 0x1B
	0x03D38DCC ADD X8, X8, W9, 0x4, SXTW
	0x03D38DD0 ADD X0, X8, 0x138
	0x03D38DD4 LDP X8, X1, [X0]
	0x03D38DD8 MOV X0, X25
	0x03D38DDC BLR X8
	0x03D38DE0 ADRP X28, 0x42C000
	0x03D38DE4 LDR X28, [X28 + 0x778]
	0x03D38DE8 FMUL S8, S0, S9
	0x03D38DEC LDR X0, [X28]
	0x03D38DF0 LDR W8, [X0 + 0xE0]
	0x03D38DF4 CBNZ W8, 0x3D38E00
	0x03D38DF8 BL 0x1C16DFC
	0x03D38DFC LDR X0, [X28]
	0x03D38E00 LDR X8, [X0 + 0xB8]
	0x03D38E04 FABD S1, S10, S10
	0x03D38E08 LDR V0, [X8]
	0x03D38E0C ADRP X8, 0xFFFFFFFFFCDB1000
	0x03D38E10 LDR V2, [X8 + 0xF28]
	0x03D38E14 FCMP S10, S0
	0x03D38E18 CSET W8, MI
	0x03D38E1C FCMP S8, S0
	0x03D38E20 CSET W9, MI
	0x03D38E24 FCMP S1, S2
	0x03D38E28 EOR W8, W8, W9, 0x0
	0x03D38E2C CSET W9, GT
	0x03D38E30 ORR W27, W9, W8, 0x0
	0x03D38E34 CMP W27, 0x1
	0x03D38E38 B.NE 0x3D38E40
	0x03D38E3C STR S8, [X23 + 0x1B0]
	0x03D38E40 ADRP X8, 0xFFFFFFFFFCDB2000
	0x03D38E44 LDRB W26, [X23 + 0x16F]
	0x03D38E48 LDR V0, [X8 + 0x2F0]
	0x03D38E4C ADD X25, X23, 0x168
	0x03D38E50 CMP W26, 0x0
	0x03D38E54 FADD S0, S9, S0
	0x03D38E58 CSET W29, EQ
	0x03D38E5C FCMP S8, S0
	0x03D38E60 B.PL 0x3D38E70
	0x03D38E64 CBZ W26, 0x3D38EDC
	0x03D38E68 CBNZ W27, 0x3D38F14
	0x03D38E6C B 0x3D39014
	0x03D38E70 CBZ W26, 0x3D38FB0
	0x03D38E74 CBZ W27, 0x3D39014
	0x03D38E78 ADRP X8, 0x42C000
	0x03D38E7C LDR X8, [X8 + 0x9C8]
	0x03D38E80 LDR X0, [X8]
	0x03D38E84 LDR W8, [X0 + 0xE0]
	0x03D38E88 CBNZ W8, 0x3D38E90
	0x03D38E8C BL 0x1C16DFC
	0x03D38E90 MOV X0, X25
	0x03D38E94 MOV X1, X31
	0x03D38E98 BL 0x3D279C8
	0x03D38E9C TBZ X0, 0x0, 0x3D39028
	0x03D38EA0 CBZ X24, 0x3D390FC
	0x03D38EA4 ADRP X8, 0x42C000
	0x03D38EA8 LDR X8, [X8 + 0x760]
	0x03D38EAC LDR X25, [X25]
	0x03D38EB0 ADD X26, X24, 0x140
	0x03D38EB4 LDR X0, [X8]
	0x03D38EB8 LDR W8, [X0 + 0xE0]
	0x03D38EBC CBNZ W8, 0x3D38EC4
	0x03D38EC0 BL 0x1C16DFC
	0x03D38EC4 MOV X0, X26
	0x03D38EC8 MOV X1, X25
	0x03D38ECC MOV V0.16B, V8.16B
	0x03D38ED0 MOV X2, X31
	0x03D38ED4 BL 0x3D2BE84
	0x03D38ED8 B 0x3D39028
	0x03D38EDC CBZ X24, 0x3D390FC
	0x03D38EE0 ADRP X8, 0x42C000
	0x03D38EE4 LDR X8, [X8 + 0x760]
	0x03D38EE8 ADD X9, X24, 0x140
	0x03D38EEC LDR X0, [X8]
	0x03D38EF0 LDR W8, [X0 + 0xE0]
	0x03D38EF4 CBNZ W8, 0x3D38F04
	0x03D38EF8 STR X9, [X31 + 0x8]
	0x03D38EFC BL 0x1C16DFC
	0x03D38F00 LDR X9, [X31 + 0x8]
	0x03D38F04 MOV X0, X9
	0x03D38F08 MOV X1, X31
	0x03D38F0C BL 0x3D2C6A4
	0x03D38F10 STR X0, [X25]
	0x03D38F14 ADRP X8, 0x42C000
	0x03D38F18 LDR X8, [X8 + 0x9C8]
	0x03D38F1C LDR X0, [X8]
	0x03D38F20 LDR W8, [X0 + 0xE0]
	0x03D38F24 CBNZ W8, 0x3D38F2C
	0x03D38F28 BL 0x1C16DFC
	0x03D38F2C MOV X0, X25
	0x03D38F30 MOV X1, X31
	0x03D38F34 BL 0x3D279C8
	0x03D38F38 TBZ X0, 0x0, 0x3D38F78
	0x03D38F3C CBZ X24, 0x3D390FC
	0x03D38F40 ADRP X8, 0x42C000
	0x03D38F44 LDR X8, [X8 + 0x760]
	0x03D38F48 LDR X1, [X25]
	0x03D38F4C ADD X25, X24, 0x140
	0x03D38F50 LDR X0, [X8]
	0x03D38F54 LDR W8, [X0 + 0xE0]
	0x03D38F58 CBNZ W8, 0x3D38F68
	0x03D38F5C STR X1, [X31 + 0x8]
	0x03D38F60 BL 0x1C16DFC
	0x03D38F64 LDR X1, [X31 + 0x8]
	0x03D38F68 MOV X0, X25
	0x03D38F6C MOV V0.16B, V8.16B
	0x03D38F70 MOV X2, X31
	0x03D38F74 BL 0x3D2BE84
	0x03D38F78 CBNZ W26, 0x3D39018
	0x03D38F7C TBNZ X19, 0x0, 0x3D39018
	0x03D38F80 LDRB W8, [X23 + 0xC0]
	0x03D38F84 TBNZ X8, 0x4, 0x3D39028
	0x03D38F88 LDR X8, [X23 + 0x100]
	0x03D38F8C CBNZ X8, 0x3D38F98
	0x03D38F90 LDR X8, [X23 + 0x108]
	0x03D38F94 CBZ X8, 0x3D39028
	0x03D38F98 CBZ X24, 0x3D390FC
	0x03D38F9C MOV X0, X24
	0x03D38FA0 MOV X1, X23
	0x03D38FA4 MOV X2, X31
	0x03D38FA8 BL 0x3D263A0
	0x03D38FAC B 0x3D39028
	0x03D38FB0 LDR X8, [X23 + 0x378]
	0x03D38FB4 ADD X0, X31, 0x18
	0x03D38FB8 MOV X1, X31
	0x03D38FBC STR X8, [X31 + 0x18]
	0x03D38FC0 BL 0x3DF88DC
	0x03D38FC4 CBZ X0, 0x3D39014
	0x03D38FC8 LDR X8, [X23 + 0x378]
	0x03D38FCC ADD X0, X31, 0x18
	0x03D38FD0 MOV X1, X31
	0x03D38FD4 STR X8, [X31 + 0x18]
	0x03D38FD8 BL 0x3DF88DC
	0x03D38FDC CBZ X0, 0x3D390FC
	0x03D38FE0 ADRP X8, 0x42C000
	0x03D38FE4 LDR X8, [X8 + 0x9C8]
	0x03D38FE8 LDR X26, [X0 + 0x168]
	0x03D38FEC LDR X8, [X8]
	0x03D38FF0 LDR W9, [X8 + 0xE0]
	0x03D38FF4 CBNZ W9, 0x3D39000
	0x03D38FF8 MOV X0, X8
	0x03D38FFC BL 0x1C16DFC
	0x03D39000 MOV X0, X25
	0x03D39004 MOV X1, X26
	0x03D39008 MOV X2, X31
	0x03D3900C BL 0x3D29DEC
	0x03D39010 TBZ X0, 0x0, 0x3D390D0
	0x03D39014 MOV W29, W31
	0x03D39018 AND W8, W29, W19, 0x0
	0x03D3901C ORR W8, W27, W8, 0x0
	0x03D39020 TBNZ X8, 0x0, 0x3D39028
	0x03D39024 TBZ X21, 0x0, 0x3D390A8
	0x03D39028 LDR X8, [X23 + 0x378]
	0x03D3902C ADD X0, X31, 0x18
	0x03D39030 MOV X1, X31
	0x03D39034 STR X8, [X31 + 0x18]
	0x03D39038 BL 0x3DF8994
	0x03D3903C CMP W0, 0x1
	0x03D39040 B.LT 0x3D390A8
	0x03D39044 MOV W25, W0
	0x03D39048 MOV W26, W31
	0x03D3904C LDR X8, [X23 + 0x378]
	0x03D39050 ADD X0, X31, 0x18
	0x03D39054 MOV W1, W26
	0x03D39058 MOV X2, X31
	0x03D3905C STR X8, [X31 + 0x18]
	0x03D39060 BL 0x3DF98E4
	0x03D39064 LDR X8, [X28]
	0x03D39068 MOV X27, X0
	0x03D3906C LDR W9, [X8 + 0xE0]
	0x03D39070 CBNZ W9, 0x3D3907C
	0x03D39074 MOV X0, X8
	0x03D39078 BL 0x1C16DFC
	0x03D3907C AND W3, W21, 0x1
	0x03D39080 AND W5, W19, 0x1
	0x03D39084 MOV X0, X24
	0x03D39088 MOV V0.16B, V8.16B
	0x03D3908C MOV X1, X27
	0x03D39090 MOV W2, W22
	0x03D39094 MOV X4, X20
	0x03D39098 BL 0x3D38CBC
	0x03D3909C ADD W26, W26, 0x1
	0x03D390A0 CMP W25, W26
	0x03D390A4 B.NE 0x3D3904C
	0x03D390A8 LDP X20, X19, [X31 + 0x80]
	0x03D390AC LDP X22, X21, [X31 + 0x70]
	0x03D390B0 LDP X24, X23, [X31 + 0x60]
	0x03D390B4 LDP X26, X25, [X31 + 0x50]
	0x03D390B8 LDP X28, X27, [X31 + 0x40]
	0x03D390BC LDP X29, X30, [X31 + 0x30]
	0x03D390C0 LDP D9, D8, [X31 + 0x20]
	0x03D390C4 LDR V10, [X31 + 0x10]

ISIL:
	001 Move [X31-112], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X29
	005 Move [X31+32], X30
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Subtract X31, X31, 768
	016 NotImplemented "Instruction MRS not yet implemented."
	017 Move X8, [X25+40]
	018 Move X22, 0x6B0000
	019 Move X20, X2
	020 Move X19, X1
	021 Move [X31+760], X8
	022 Move W8, [X22+2894]
	023 Move X21, X0
	024 Add X23, X31, 640
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {37}
	029 Move X0, 0x42E000
	030 Move X0, [X0+248]
	031 Call 0x1C17CF4
	032 Move X0, 0x3BC000
	033 Move X0, [X0+2600]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+2894], W8
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X31+496], X31
	039 Move [X31+608], V0
	040 Move [X31+616], V0
	041 Move [X31+576], V0
	042 Move [X31+584], V0
	043 Move [X31+464], V0
	044 Move [X31+472], V0
	045 Move [X31+432], V0
	046 Move [X31+440], V0
	047 Move [X31+400], V0
	048 Move [X31+408], V0
	049 Move [X31+24], V0
	050 Move [X23+92], V0
	051 Move [X31+704], V0
	052 Move [X31+712], V0
	053 Move [X31+672], V0
	054 Move [X31+680], V0
	055 Move [X31+640], V0
	056 Move [X31+648], V0
	057 Compare X21, 0
	058 JumpIfEqual {284}
	059 Move X8, 0x3BC000
	060 Move X8, [X8+2600]
	061 Move X26, 0x42E000
	062 Move W22, [X21+252]
	063 Move X0, [X8]
	064 Move W8, [X0+224]
	065 Move X26, [X26+248]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSET not yet implemented."
	071 Move X1, X31
	072 Call Debug.Assert, X0
	073 Move X0, [X26]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Add X1, X31, 576
	079 Move X0, X21
	080 Call CommandGenerator.GetVerticesTransformInfo, X0, X1
	081 Move V0, [X31+576]
	082 Move V1, [X31+592]
	083 Move V2, [X31+608]
	084 Move V3, [X31+624]
	085 Add X22, X21, 272
	086 Add X8, X31, 512
	087 Move X0, X22
	088 Move X1, X31
	089 Move [X31+320], V0
	090 Move [X31+328], V1
	091 Move [X31+352], V2
	092 Move [X31+360], V3
	093 Call Matrix4x4.get_inverse, X0
	094 Move V0, [X31+512]
	095 Move V1, [X31+528]
	096 Move V2, [X31+544]
	097 Move V3, [X31+560]
	098 Add X8, X31, 256
	099 Add X0, X31, 192
	100 Move [X31+128], V0
	101 Move [X31+136], V1
	102 Move V0, [X31+320]
	103 Move V1, [X31+336]
	104 Move [X31+160], V2
	105 Move [X31+168], V3
	106 Move V2, [X31+352]
	107 Move V3, [X31+368]
	108 Add X1, X31, 128
	109 Move X2, X31
	110 Move [X31+192], V0
	111 Move [X31+200], V1
	112 Move [X31+224], V2
	113 Move [X31+232], V3
	114 Call Matrix4x4.op_Multiply, X0, X1
	115 Move V1, [X31+288]
	116 Move V0, [X31+304]
	117 Move V3, [X31+256]
	118 Move V2, [X31+272]
	119 Add X8, X31, 256
	120 Add X0, X31, 64
	121 Move [X31+544], V1
	122 Move [X31+552], V0
	123 Move [X31+512], V3
	124 Move [X31+520], V2
	125 Move [X31+64], V3
	126 Move [X31+72], V2
	127 Move [X31+96], V1
	128 Move [X31+104], V0
	129 Move V1, [X21+304]
	130 Move V0, [X21+320]
	131 Move V3, [X21+272]
	132 Move V2, [X21+288]
	133 Add X1, X31, 0
	134 Move X2, X31
	135 Move [X31+32], V1
	136 Move [X31+40], V0
	137 Move [X31], V3
	138 Move [X31+8], V2
	139 Call Matrix4x4.op_Multiply, X0, X1
	140 Move V0, [X31+256]
	141 Move V18, [X31+576]
	142 Move V3, [X31+272]
	143 Move V6, [X31+288]
	144 Move V20, [X31+608]
	145 Move V22, [X31+592]
	146 Move V1, [X31+260]
	147 Move V17, [X31+304]
	148 Move V19, [X31+580]
	149 NotImplemented "Instruction FABD not yet implemented."
	150 Move V18, [X31+624]
	151 Move V4, [X31+276]
	152 NotImplemented "Instruction FABD not yet implemented."
	153 NotImplemented "Instruction FABD not yet implemented."
	154 Move V20, [X31+596]
	155 Move V7, [X31+292]
	156 Move V21, [X31+612]
	157 Add S0, S0, S3
	158 Move V23, [X31+628]
	159 NotImplemented "Instruction FABD not yet implemented."
	160 NotImplemented "Instruction FABD not yet implemented."
	161 Move V19, [X31+308]
	162 Add S0, S0, S6
	163 Move V2, [X31+264]
	164 Move V24, [X31+584]
	165 Add S0, S0, S17
	166 Move V5, [X31+280]
	167 Move V18, [X31+600]
	168 NotImplemented "Instruction FABD not yet implemented."
	169 Add S0, S0, S1
	170 Move V16, [X31+296]
	171 Move V22, [X31+616]
	172 NotImplemented "Instruction FABD not yet implemented."
	173 Add S0, S0, S4
	174 Move V20, [X31+312]
	175 Move V21, [X31+632]
	176 NotImplemented "Instruction FABD not yet implemented."
	177 Add S0, S0, S7
	178 NotImplemented "Instruction FABD not yet implemented."
	179 Move X8, -52748288
	180 Add S0, S0, S19
	181 NotImplemented "Instruction FABD not yet implemented."
	182 Move V8, [X8+3880]
	183 Add S0, S0, S2
	184 NotImplemented "Instruction FABD not yet implemented."
	185 Add S0, S0, S5
	186 Add S0, S0, S16
	187 NotImplemented "Instruction FABD not yet implemented."
	188 Add S9, S0, S1
	189 NotImplemented "Instruction FCMP not yet implemented."
	190 Move V0, [X31+608]
	191 Move V1, [X31+624]
	192 Move V2, [X31+576]
	193 Move V3, [X31+592]
	194 NotImplemented "Instruction MOVI not yet implemented."
	195 Add X0, X31, 384
	196 Move [X22+32], V0
	197 Move [X22+40], V1
	198 Move [X22], V2
	199 Move [X22+8], V3
	200 Move [X31+672], V4
	201 Move [X31+680], V4
	202 Move [X31+704], V4
	203 Move [X31+712], V4
	204 Move [X23+92], V4
	205 Move [X31+640], V4
	206 Move [X31+648], V4
	207 Move V0, [X31+512]
	208 Move V1, [X31+528]
	209 Move V2, [X31+544]
	210 Move V3, [X31+560]
	211 Move V10, [X21+336]
	212 Add X1, X31, 640
	213 Move W2, 108
	214 Move [X23+44], V0
	215 Move [X23+60], V1
	216 Move [X23+76], V2
	217 Move [X23+92], V3
	218 Add X24, X31, 384
	219 Call 0x3EB2AC0
	220 Move X0, [X26]
	221 Add X8, X31, 237
	222 Move [X8+255], D10
	223 Move [X31+500], W31
	224 Move W8, [X0+224]
	225 Move X22, [X21+256]
	226 Or X23, X24, 15
	227 Add X24, X24, 16
	228 Compare W8, 0
	229 JumpIfNotEqual {231}
	230 Call 0x1C17DFC
	231 Add X3, X31, 384
	232 Move X1, X20
	233 Move X2, X22
	234 Move X4, X23
	235 Move X5, X24
	236 Add X27, X31, 384
	237 Call CommandGenerator.PrepareNudgeVertices, X0, X1, X2, X3, X4, X5
	238 Move X21, [X21+264]
	239 Compare X21, 0
	240 JumpIfEqual {255}
	241 Move X0, [X26]
	242 Add X24, X27, 24
	243 Add X23, X27, 32
	244 Add X22, X27, 40
	245 Move W8, [X0+224]
	246 Compare W8, 0
	247 JumpIfNotEqual {249}
	248 Call 0x1C17DFC
	249 Move X1, X20
	250 Move X2, X21
	251 Move X3, X24
	252 Move X4, X23
	253 Move X5, X22
	254 Call CommandGenerator.PrepareNudgeVertices, X0, X1, X2, X3, X4, X5
	255 Compare X19, 0
	256 JumpIfEqual {284}
	257 Move X0, [X19+312]
	258 Compare X0, 0
	259 JumpIfEqual {284}
	260 Add X1, X31, 384
	261 Move X2, X31
	262 Call JobManager.Add, X0, X1
	263 Move X8, [X25+40]
	264 Move X9, [X31+760]
	265 NotImplemented "Instruction FCMP not yet implemented."
	266 NotImplemented "Instruction CSET not yet implemented."
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Add X31, X31, 768
	269 Move X20, [X31+96]
	270 Move X19, [X31+104]
	271 Move X22, [X31+80]
	272 Move X21, [X31+88]
	273 Move X24, [X31+64]
	274 Move X23, [X31+72]
	275 Move X26, [X31+48]
	276 Move X25, [X31+56]
	277 Move X30, [X31+32]
	278 Move X27, [X31+40]
	279 Move X29, [X31+24]
	280 Move D9, [X31+8]
	281 Move D8, [X31+16]
	282 Move V10, [X31+112]
	283 Return X0
	284 Call 0x1C17F20
	285 Call 0x3EB2B20

Method: System.Void PrepareNudgeVertices(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.UIR.UIRenderDevice device, UnityEngine.UIElements.UIR.MeshHandle mesh, out System.IntPtr src, out System.IntPtr dst, out System.Int32 count)

Disassembly:
	0x03D390C8 ADD X31, X31, 0x90
	0x03D390CC RET
	0x03D390D0 LDR X8, [X23 + 0x378]
	0x03D390D4 ADD X0, X31, 0x18
	0x03D390D8 MOV X1, X31
	0x03D390DC STR X8, [X31 + 0x18]
	0x03D390E0 BL 0x3DF88DC
	0x03D390E4 CBZ X0, 0x3D390FC
	0x03D390E8 LDR X8, [X0 + 0x168]
	0x03D390EC STR X8, [X23 + 0x168]
	0x03D390F0 STRB W31, [X23 + 0x16F]
	0x03D390F4 TBZ X19, 0x0, 0x3D38F80
	0x03D390F8 B 0x3D39028
	0x03D390FC BL 0x1C16F20
	0x03D39100 STR X30, [X31 - 0x40]!
	0x03D39104 STP X24, X23, [X31 + 0x10]
	0x03D39108 STP X22, X21, [X31 + 0x20]
	0x03D3910C STP X20, X19, [X31 + 0x30]
	0x03D39110 ADRP X24, 0x6AE000
	0x03D39114 ADRP X23, 0x42B000
	0x03D39118 LDRB W8, [X24 + 0xB5E]
	0x03D3911C LDR X23, [X23 + 0x778]
	0x03D39120 MOV X19, X3
	0x03D39124 MOV W20, W2
	0x03D39128 MOV X21, X1
	0x03D3912C MOV X22, X0
	0x03D39130 TBNZ X8, 0x0, 0x3D39148
	0x03D39134 ADRP X0, 0x42B000
	0x03D39138 LDR X0, [X0 + 0x778]
	0x03D3913C BL 0x1C16CF4
	0x03D39140 MOVZ W8, 0x1
	0x03D39144 STRB W8, [X24 + 0xB5E]
	0x03D39148 LDR W8, [X19 + 0x28]
	0x03D3914C ADD W8, W8, 0x1
	0x03D39150 STR W8, [X19 + 0x28]
	0x03D39154 LDR X0, [X23]
	0x03D39158 LDR W8, [X0 + 0xE0]
	0x03D3915C CBNZ W8, 0x3D39164
	0x03D39160 BL 0x1C16DFC
	0x03D39164 MOV X0, X22
	0x03D39168 MOV X1, X21
	0x03D3916C MOV W2, W20
	0x03D39170 MOV X3, X19
	0x03D39174 LDP X20, X19, [X31 + 0x30]
	0x03D39178 LDP X22, X21, [X31 + 0x20]
	0x03D3917C LDP X24, X23, [X31 + 0x10]
	0x03D39180 LDR X30, [X31], #0x40
	0x03D39184 B 0x3D39188
	0x03D39188 STP D11, D10, [X31 - 0x50]!
	0x03D3918C STP D9, D8, [X31 + 0x10]
	0x03D39190 STP X30, X23, [X31 + 0x20]
	0x03D39194 STP X22, X21, [X31 + 0x30]
	0x03D39198 STP X20, X19, [X31 + 0x40]
	0x03D3919C ADRP X23, 0x6AE000
	0x03D391A0 LDRB W8, [X23 + 0xB67]
	0x03D391A4 MOV X21, X3
	0x03D391A8 MOV W22, W2
	0x03D391AC MOV X19, X1
	0x03D391B0 MOV X20, X0
	0x03D391B4 TBNZ X8, 0x0, 0x3D391E4
	0x03D391B8 ADRP X0, 0x3E3000
	0x03D391BC LDR X0, [X0 + 0x120]
	0x03D391C0 BL 0x1C16CF4
	0x03D391C4 ADRP X0, 0x42B000
	0x03D391C8 LDR X0, [X0 + 0x778]
	0x03D391CC BL 0x1C16CF4
	0x03D391D0 ADRP X0, 0x3E3000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X24, 0x6AF000
	013 Move W8, [X24+2895]
	014 Move X19, X5
	015 Move X20, X4
	016 Move X21, X3
	017 Move X22, X2
	018 Move X23, X1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x42C000
	024 Move X0, [X0+3792]
	025 Call 0x1C17CF4
	026 Move X0, 0x42D000
	027 Move X0, [X0+320]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+2895], W8
	031 Move [X31], X31
	032 Move [X31+8], X31
	033 Compare X22, 0
	034 JumpIfEqual {88}
	035 Move X8, [X22+80]
	036 Compare X8, 0
	037 JumpIfEqual {88}
	038 Move X8, [X8+24]
	039 Compare X8, 0
	040 JumpIfEqual {88}
	041 Move X9, 0x42C000
	042 Move X9, [X9+3792]
	043 Move W2, [X22+24]
	044 Move W24, [X22+28]
	045 Move X0, [X8+32]
	046 Move X1, [X8+40]
	047 Move X4, [X9]
	048 Move W3, W24
	049 Call NativeSliceExtensions.Slice, X0, X1, X2
	050 Compare X23, 0
	051 JumpIfEqual {88}
	052 Move X27, 0x42D000
	053 Move X27, [X27+320]
	054 Move X25, X0
	055 Move X26, X1
	056 Add X3, X31, 0
	057 Move X0, X23
	058 Move X1, X22
	059 Move W2, W24
	060 Call UIRenderDevice.Update, X0, X1, X2, X3
	061 Move X2, [X27]
	062 Move X0, X25
	063 Move X1, X26
	064 Call NativeSliceUnsafeUtility.GetUnsafePtr, X0
	065 Move X1, X31
	066 Call IntPtr.op_Explicit, X0
	067 Move [X21], X0
	068 Move X0, [X31]
	069 Move X1, [X31+8]
	070 Move X2, [X27]
	071 Call NativeSliceUnsafeUtility.GetUnsafePtr, X0
	072 Move X1, X31
	073 Call IntPtr.op_Explicit, X0
	074 Move [X20], X0
	075 Move [X19], W24
	076 Move X20, [X31+80]
	077 Move X19, [X31+88]
	078 Move X22, [X31+64]
	079 Move X21, [X31+72]
	080 Move X24, [X31+48]
	081 Move X23, [X31+56]
	082 Move X26, [X31+32]
	083 Move X25, [X31+40]
	084 Move X30, [X31+16]
	085 Move X27, [X31+24]
	086 Add X31, X31, 96
	087 Return 
	088 Call 0x1C17F20

Method: UnityEngine.UIElements.UIR.RenderChainCommand InjectMeshDrawCommand(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, ref UnityEngine.UIElements.UIR.RenderChainCommand cmdPrev, ref UnityEngine.UIElements.UIR.RenderChainCommand cmdNext, UnityEngine.UIElements.UIR.MeshHandle mesh, System.Int32 indexCount, System.Int32 indexOffset, UnityEngine.Material material, UnityEngine.UIElements.TextureId texture, System.Int32 stencilRef)

Disassembly:
	0x03D37FD0 STUR V0, [X23 + 0x2C]
	0x03D37FD4 STUR V1, [X23 + 0x3C]
	0x03D37FD8 STUR V2, [X23 + 0x4C]
	0x03D37FDC STUR V3, [X23 + 0x5C]
	0x03D37FE0 ADD X24, X31, 0x180
	0x03D37FE4 BL 0x3EB1AC0
	0x03D37FE8 LDR X0, [X26]
	0x03D37FEC ADD X8, X31, 0xED
	0x03D37FF0 STUR D10, [X8 + 0xFF]
	0x03D37FF4 STR W31, [X31 + 0x1F4]
	0x03D37FF8 LDR W8, [X0 + 0xE0]
	0x03D37FFC LDR X22, [X21 + 0x100]
	0x03D38000 ORR X23, X24, 0xF
	0x03D38004 ADD X24, X24, 0x10
	0x03D38008 CBNZ W8, 0x3D38010
	0x03D3800C BL 0x1C16DFC
	0x03D38010 ADD X3, X31, 0x180
	0x03D38014 MOV X1, X20
	0x03D38018 MOV X2, X22
	0x03D3801C MOV X4, X23
	0x03D38020 MOV X5, X24
	0x03D38024 ADD X27, X31, 0x180
	0x03D38028 BL 0x3D380C8
	0x03D3802C LDR X21, [X21 + 0x108]
	0x03D38030 CBZ X21, 0x3D38068
	0x03D38034 LDR X0, [X26]
	0x03D38038 ADD X24, X27, 0x18
	0x03D3803C ADD X23, X27, 0x20
	0x03D38040 ADD X22, X27, 0x28
	0x03D38044 LDR W8, [X0 + 0xE0]
	0x03D38048 CBNZ W8, 0x3D38050
	0x03D3804C BL 0x1C16DFC
	0x03D38050 MOV X1, X20
	0x03D38054 MOV X2, X21
	0x03D38058 MOV X3, X24
	0x03D3805C MOV X4, X23
	0x03D38060 MOV X5, X22
	0x03D38064 BL 0x3D380C8
	0x03D38068 CBZ X19, 0x3D380C0
	0x03D3806C LDR X0, [X19 + 0x138]
	0x03D38070 CBZ X0, 0x3D380C0
	0x03D38074 ADD X1, X31, 0x180
	0x03D38078 MOV X2, X31
	0x03D3807C BL 0x3D21AAC
	0x03D38080 LDR X8, [X25 + 0x28]
	0x03D38084 LDR X9, [X31 + 0x2F8]
	0x03D38088 FCMP S9, S8
	0x03D3808C CSET W0, LE
	0x03D38090 CMP X8, X9
	0x03D38094 B.NE 0x3D380C4
	0x03D38098 ADD X31, X31, 0x300
	0x03D3809C LDP X20, X19, [X31 + 0x60]
	0x03D380A0 LDP X22, X21, [X31 + 0x50]
	0x03D380A4 LDP X24, X23, [X31 + 0x40]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x6B1000
	012 Move W8, [X27+2896]
	013 Move X26, X7
	014 Move W23, W6
	015 Move W22, W5
	016 Move X25, X4
	017 Move X19, X3
	018 Move X20, X2
	019 Move X24, X1
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x42E000
	026 Move X0, [X0+248]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X27+2896], W8
	030 Compare X21, 0
	031 JumpIfEqual {73}
	032 Move X0, X21
	033 Move X1, X31
	034 Call RenderChain.AllocCommand, X0
	035 Compare X0, 0
	036 JumpIfEqual {73}
	037 Move W8, [X31+88]
	038 Move W9, [X31+80]
	039 Move X10, 0x42E000
	040 Move X10, [X10+248]
	041 Move [X0+52], W31
	042 Move [X0+56], X26
	043 Move [X0+72], X31
	044 Move [X0+80], X25
	045 Move [X0+88], W23
	046 Move [X0+92], W22
	047 Move [X0+64], W9
	048 Move [X0+68], W8
	049 Move [X0+24], X24
	050 Move X27, X0
	051 Move X0, [X10]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X21
	057 Move X1, X27
	058 Move X2, X20
	059 Move X3, X19
	060 Call CommandGenerator.InjectCommandInBetween, X0, X1, X2, X3
	061 Move X20, [X31+64]
	062 Move X19, [X31+72]
	063 Move X22, [X31+48]
	064 Move X21, [X31+56]
	065 Move X24, [X31+32]
	066 Move X23, [X31+40]
	067 Move X26, [X31+16]
	068 Move X25, [X31+24]
	069 Move X0, X27
	070 Move X30, [X31+80]
	071 Move X27, [X31+88]
	072 Return X0
	073 Call 0x1C17F20

Method: UnityEngine.UIElements.UIR.RenderChainCommand InjectClosingMeshDrawCommand(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, ref UnityEngine.UIElements.UIR.RenderChainCommand cmdPrev, ref UnityEngine.UIElements.UIR.RenderChainCommand cmdNext, UnityEngine.UIElements.UIR.MeshHandle mesh, System.Int32 indexCount, System.Int32 indexOffset, UnityEngine.Material material, UnityEngine.UIElements.TextureId texture, System.Int32 stencilRef)

Disassembly:
	0x03D38644 BL 0x1C16CF4
	0x03D38648 ADRP X0, 0x3BB000
	0x03D3864C LDR X0, [X0 + 0xA28]
	0x03D38650 BL 0x1C16CF4
	0x03D38654 ADRP X0, 0x42C000
	0x03D38658 LDR X0, [X0 + 0x778]
	0x03D3865C BL 0x1C16CF4
	0x03D38660 ADRP X0, 0x42C000
	0x03D38664 LDR X0, [X0 + 0x760]
	0x03D38668 BL 0x1C16CF4
	0x03D3866C MOVZ W8, 0x1
	0x03D38670 STRB W8, [X19 + 0xB65]
	0x03D38674 STP X31, X31, [X31 + 0x50]
	0x03D38678 CBZ X21, 0x3D38BD8
	0x03D3867C LDR W9, [X21 + 0xC4]
	0x03D38680 LDRB W8, [X31 + 0xC0]
	0x03D38684 CMP W9, W20
	0x03D38688 B.NE 0x3D38694
	0x03D3868C TBNZ X25, 0x0, 0x3D38694
	0x03D38690 TBZ X8, 0x0, 0x3D38B60
	0x03D38694 LDR X9, [X31 + 0xD0]
	0x03D38698 STR W20, [X21 + 0xC4]
	0x03D3869C STR X9, [X31 + 0x40]
	0x03D386A0 TBNZ X26, 0x0, 0x3D386B4
	0x03D386A4 LDR X10, [X31 + 0x40]
	0x03D386A8 LDR W9, [X10 + 0xC]
	0x03D386AC ADD W9, W9, 0x1
	0x03D386B0 STR W9, [X10 + 0xC]
	0x03D386B4 LDR W9, [X31 + 0x4C]
	0x03D386B8 LDR W19, [X21 + 0xC0]
	0x03D386BC LDR W23, [X21 + 0xF0]
	0x03D386C0 STR X27, [X31 + 0x30]
	0x03D386C4 ORR W9, W9, W26, 0x0
	0x03D386C8 ORR W8, W9, W8, 0x0
	0x03D386CC TBZ X9, 0x0, 0x3D38700
	0x03D386D0 STR W8, [X31 + 0x2C]
	0x03D386D4 ADRP X8, 0x42C000
	0x03D386D8 LDR X8, [X8 + 0x778]
	0x03D386DC LDR X0, [X8]
	0x03D386E0 LDR W8, [X0 + 0xE0]
	0x03D386E4 CBNZ W8, 0x3D386EC
	0x03D386E8 BL 0x1C16DFC
	0x03D386EC MOV X0, X22
	0x03D386F0 MOV X1, X21
	0x03D386F4 BL 0x3D3BCA0
	0x03D386F8 MOV W25, W0
	0x03D386FC B 0x3D3870C
	0x03D38700 TBZ X25, 0x0, 0x3D387F8
	0x03D38704 MOV W25, W23
	0x03D38708 STR W8, [X31 + 0x2C]
	0x03D3870C LDR X0, [X21 + 0x160]
	0x03D38710 MOV X1, X31
	0x03D38714 ADD X26, X21, 0x160
	0x03D38718 STR X0, [X31 + 0x58]
	0x03D3871C BL 0x3D2795C
	0x03D38720 CMP W25, 0x3

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x6B0000
	012 Move W8, [X27+2897]
	013 Move X26, X7
	014 Move W23, W6
	015 Move W22, W5
	016 Move X25, X4
	017 Move X19, X3
	018 Move X20, X2
	019 Move X24, X1
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x42E000
	026 Move X0, [X0+248]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X27+2897], W8
	030 Compare X21, 0
	031 JumpIfEqual {75}
	032 Move X0, X21
	033 Move X1, X31
	034 Call RenderChain.AllocCommand, X0
	035 Compare X0, 0
	036 JumpIfEqual {75}
	037 Move W8, [X31+88]
	038 Move W9, [X31+80]
	039 Move X10, 0x42E000
	040 Move X10, [X10+248]
	041 Move W11, 1
	042 Move [X0+52], W31
	043 Move [X0+56], X26
	044 Move [X0+72], X31
	045 Move [X0+80], X25
	046 Move [X0+88], W23
	047 Move [X0+92], W22
	048 Move [X0+48], W11
	049 Move [X0+64], W9
	050 Move [X0+68], W8
	051 Move [X0+24], X24
	052 Move X27, X0
	053 Move X0, [X10]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X21
	059 Move X1, X27
	060 Move X2, X20
	061 Move X3, X19
	062 Call CommandGenerator.InjectClosingCommandInBetween, X0, X1, X2, X3
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X22, [X31+48]
	066 Move X21, [X31+56]
	067 Move X24, [X31+32]
	068 Move X23, [X31+40]
	069 Move X26, [X31+16]
	070 Move X25, [X31+24]
	071 Move X0, X27
	072 Move X30, [X31+80]
	073 Move X27, [X31+88]
	074 Return X0
	075 Call 0x1C17F20

Method: System.Void FindCommandInsertionPoint(UnityEngine.UIElements.VisualElement ve, out UnityEngine.UIElements.UIR.RenderChainCommand prev, out UnityEngine.UIElements.UIR.RenderChainCommand next)

Disassembly:
	0x03D37E20 CBNZ W8, 0x3D37E28
	0x03D37E24 BL 0x1C16DFC
	0x03D37E28 ADD X1, X31, 0x240
	0x03D37E2C MOV X0, X21
	0x03D37E30 BL 0x3D35268
	0x03D37E34 LDP V0, V1, [X31 + 0x240]
	0x03D37E38 LDP V2, V3, [X31 + 0x260]
	0x03D37E3C ADD X22, X21, 0x110
	0x03D37E40 ADD X8, X31, 0x200
	0x03D37E44 MOV X0, X22
	0x03D37E48 MOV X1, X31
	0x03D37E4C STP V0, V1, [X31 + 0x140]
	0x03D37E50 STP V2, V3, [X31 + 0x160]
	0x03D37E54 BL 0x3C271CC
	0x03D37E58 LDP V0, V1, [X31 + 0x200]
	0x03D37E5C LDP V2, V3, [X31 + 0x220]
	0x03D37E60 ADD X8, X31, 0x100
	0x03D37E64 ADD X0, X31, 0xC0
	0x03D37E68 STP V0, V1, [X31 + 0x80]
	0x03D37E6C LDP V0, V1, [X31 + 0x140]
	0x03D37E70 STP V2, V3, [X31 + 0xA0]
	0x03D37E74 LDP V2, V3, [X31 + 0x160]
	0x03D37E78 ADD X1, X31, 0x80
	0x03D37E7C MOV X2, X31
	0x03D37E80 STP V0, V1, [X31 + 0xC0]
	0x03D37E84 STP V2, V3, [X31 + 0xE0]
	0x03D37E88 BL 0x3C27F74
	0x03D37E8C LDP V1, V0, [X31 + 0x120]
	0x03D37E90 LDP V3, V2, [X31 + 0x100]
	0x03D37E94 ADD X8, X31, 0x100
	0x03D37E98 ADD X0, X31, 0x40
	0x03D37E9C STP V1, V0, [X31 + 0x220]
	0x03D37EA0 STP V3, V2, [X31 + 0x200]
	0x03D37EA4 STP V3, V2, [X31 + 0x40]
	0x03D37EA8 STP V1, V0, [X31 + 0x60]
	0x03D37EAC LDP V1, V0, [X21 + 0x130]
	0x03D37EB0 LDP V3, V2, [X21 + 0x110]
	0x03D37EB4 ADD X1, X31, 0x0
	0x03D37EB8 MOV X2, X31
	0x03D37EBC STP V1, V0, [X31 + 0x20]
	0x03D37EC0 STP V3, V2, [X31]
	0x03D37EC4 BL 0x3C27F74
	0x03D37EC8 LDR V0, [X31 + 0x100]
	0x03D37ECC LDR V18, [X31 + 0x240]
	0x03D37ED0 LDR V3, [X31 + 0x110]
	0x03D37ED4 LDR V6, [X31 + 0x120]
	0x03D37ED8 LDR V20, [X31 + 0x260]
	0x03D37EDC LDR V22, [X31 + 0x250]
	0x03D37EE0 LDR V1, [X31 + 0x104]
	0x03D37EE4 LDR V17, [X31 + 0x130]
	0x03D37EE8 LDR V19, [X31 + 0x244]
	0x03D37EEC FABD S0, S18, S18
	0x03D37EF0 LDR V18, [X31 + 0x270]
	0x03D37EF4 LDR V4, [X31 + 0x114]
	0x03D37EF8 FABD S3, S22, S22
	0x03D37EFC FABD S6, S20, S20
	0x03D37F00 LDR V20, [X31 + 0x254]
	0x03D37F04 LDR V7, [X31 + 0x124]
	0x03D37F08 LDR V21, [X31 + 0x264]
	0x03D37F0C FADD S0, S0, S3
	0x03D37F10 LDR V23, [X31 + 0x274]
	0x03D37F14 FABD S17, S18, S18
	0x03D37F18 FABD S1, S19, S19
	0x03D37F1C LDR V19, [X31 + 0x134]
	0x03D37F20 FADD S0, S0, S6
	0x03D37F24 LDR V2, [X31 + 0x108]
	0x03D37F28 LDR V24, [X31 + 0x248]
	0x03D37F2C FADD S0, S0, S17
	0x03D37F30 LDR V5, [X31 + 0x118]
	0x03D37F34 LDR V18, [X31 + 0x258]
	0x03D37F38 FABD S4, S20, S20
	0x03D37F3C FADD S0, S0, S1
	0x03D37F40 LDR V16, [X31 + 0x128]
	0x03D37F44 LDR V22, [X31 + 0x268]
	0x03D37F48 FABD S7, S21, S21
	0x03D37F4C FADD S0, S0, S4
	0x03D37F50 LDR V20, [X31 + 0x138]
	0x03D37F54 LDR V21, [X31 + 0x278]
	0x03D37F58 FABD S19, S23, S23
	0x03D37F5C FADD S0, S0, S7
	0x03D37F60 FABD S2, S24, S24
	0x03D37F64 ADRP X8, 0xFFFFFFFFFCDB2000
	0x03D37F68 FADD S0, S0, S19
	0x03D37F6C FABD S5, S18, S18
	0x03D37F70 LDR V8, [X8 + 0xF28]
	0x03D37F74 FADD S0, S0, S2
	0x03D37F78 FABD S16, S22, S22
	0x03D37F7C FADD S0, S0, S5
	0x03D37F80 FADD S0, S0, S16
	0x03D37F84 FABD S1, S21, S21
	0x03D37F88 FADD S9, S0, S1
	0x03D37F8C FCMP S9, S8
	0x03D37F90 B.GT 0x3D38080
	0x03D37F94 LDP V0, V1, [X31 + 0x260]
	0x03D37F98 LDP V2, V3, [X31 + 0x240]
	0x03D37F9C MOVI V4.2D, 0x0
	0x03D37FA0 ADD X0, X31, 0x180
	0x03D37FA4 STP V0, V1, [X22 + 0x20]
	0x03D37FA8 STP V2, V3, [X22]
	0x03D37FAC STP V4, V4, [X31 + 0x2A0]
	0x03D37FB0 STP V4, V4, [X31 + 0x2C0]
	0x03D37FB4 STUR V4, [X23 + 0x5C]
	0x03D37FB8 STP V4, V4, [X31 + 0x280]
	0x03D37FBC LDP V0, V1, [X31 + 0x200]
	0x03D37FC0 LDP V2, V3, [X31 + 0x220]
	0x03D37FC4 LDR V10, [X21 + 0x150]
	0x03D37FC8 ADD X1, X31, 0x280
	0x03D37FCC MOVZ W2, 0x6C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x6B1000
	009 Move W8, [X22+2898]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x42F000
	018 Move X0, [X0+248]
	019 Call 0x1C17CF4
	020 Move X0, 0x3BD000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2898], W8
	025 Compare X21, 0
	026 JumpIfEqual {131}
	027 Move X8, 0x3BD000
	028 Move X8, [X8+2600]
	029 Move X22, X21
	030 Move X22, [X22+136]
	031 Compare X22, 0
	032 JumpIfEqual {93}
	033 Move X9, [X22+208]
	034 Compare X9, 0
	035 JumpIfEqual {30}
	036 Move X8, [X22+888]
	037 Add X0, X31, 8
	038 Move X1, X31
	039 Move [X31+8], X8
	040 Call Hierarchy.get_parent, X0
	041 Move X8, [X21+888]
	042 Move X23, X0
	043 Add X0, X31, 8
	044 Move X1, X31
	045 Move [X31+8], X8
	046 Call Hierarchy.get_parent, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X23, 0x42F000
	049 Move X23, [X23+248]
	050 Move X0, [X23]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X22
	056 Move X1, X21
	057 Call CommandGenerator.IsParentOrAncestorOf, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {117}
	062 Move X24, [X22+224]
	063 Compare X24, 0
	064 JumpIfNotEqual {66}
	065 Move X24, [X22+208]
	066 Move [X20], X24
	067 Compare X24, 0
	068 JumpIfEqual {131}
	069 Move X8, X24
	070 Move X24, [X24+40]
	071 Compare X24, 0
	072 JumpIfEqual {121}
	073 Move X22, [X24+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W9, [X24+48]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X0, [X23]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X22
	083 Move X1, X21
	084 Call CommandGenerator.IsParentOrAncestorOf, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {66}
	089 Move X8, [X20]
	090 Move X9, [X21+200]
	091 Compare X9, 0
	092 JumpIfNotEqual {97}
	093 Move X21, [X21+144]
	094 Compare X21, 0
	095 JumpIfNotEqual {90}
	096 Move X9, X31
	097 Move [X19], X9
	098 Move [X20], X31
	099 Move X9, [X19]
	100 Compare X9, 0
	101 JumpIfEqual {105}
	102 Move X9, [X9+32]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 NotImplemented "Instruction CSET not yet implemented."
	105 Move W19, 1
	106 Move X0, [X8]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move W0, W19
	112 Move X1, X31
	113 Call Debug.Assert, X0
	114 Move X8, [X22+224]
	115 Compare X8, 0
	116 JumpIfNotEqual {118}
	117 Move X8, [X22+208]
	118 Move [X20], X8
	119 Compare X8, 0
	120 JumpIfEqual {131}
	121 Move X8, [X8+40]
	122 Move [X19], X8
	123 Move X20, [X31+48]
	124 Move X19, [X31+56]
	125 Move X22, [X31+32]
	126 Move X21, [X31+40]
	127 Move X24, [X31+16]
	128 Move X23, [X31+24]
	129 Move X30, [X31+64]
	130 Return 
	131 Call 0x1C17F20

Method: System.Void FindClosingCommandInsertionPoint(UnityEngine.UIElements.VisualElement ve, out UnityEngine.UIElements.UIR.RenderChainCommand prev, out UnityEngine.UIElements.UIR.RenderChainCommand next)

Disassembly:
	0x03D38140 LDP W2, W24, [X22 + 0x18]
	0x03D38144 LDP X0, X1, [X8 + 0x20]
	0x03D38148 LDR X4, [X9]
	0x03D3814C MOV W3, W24
	0x03D38150 BL 0x2222AC0
	0x03D38154 CBZ X23, 0x3D381D0
	0x03D38158 ADRP X27, 0x42D000
	0x03D3815C LDR X27, [X27 + 0x140]
	0x03D38160 MOV X25, X0
	0x03D38164 MOV X26, X1
	0x03D38168 ADD X3, X31, 0x0
	0x03D3816C MOV X0, X23
	0x03D38170 MOV X1, X22
	0x03D38174 MOV W2, W24
	0x03D38178 BL 0x3D2FBF0
	0x03D3817C LDR X2, [X27]
	0x03D38180 MOV X0, X25
	0x03D38184 MOV X1, X26
	0x03D38188 BL 0x22232C4
	0x03D3818C MOV X1, X31
	0x03D38190 BL 0x33C693C
	0x03D38194 STR X0, [X21]
	0x03D38198 LDP X0, X1, [X31]
	0x03D3819C LDR X2, [X27]
	0x03D381A0 BL 0x22232C4
	0x03D381A4 MOV X1, X31
	0x03D381A8 BL 0x33C693C
	0x03D381AC STR X0, [X20]
	0x03D381B0 STR W24, [X19]
	0x03D381B4 LDP X20, X19, [X31 + 0x50]
	0x03D381B8 LDP X22, X21, [X31 + 0x40]
	0x03D381BC LDP X24, X23, [X31 + 0x30]
	0x03D381C0 LDP X26, X25, [X31 + 0x20]
	0x03D381C4 LDP X30, X27, [X31 + 0x10]
	0x03D381C8 ADD X31, X31, 0x60
	0x03D381CC RET
	0x03D381D0 BL 0x1C16F20
	0x03D381D4 STR X30, [X31 - 0x50]!
	0x03D381D8 STP X26, X25, [X31 + 0x10]
	0x03D381DC STP X24, X23, [X31 + 0x20]
	0x03D381E0 STP X22, X21, [X31 + 0x30]
	0x03D381E4 STP X20, X19, [X31 + 0x40]
	0x03D381E8 ADRP X25, 0x6AF000
	0x03D381EC ADRP X26, 0x42D000
	0x03D381F0 ADRP X19, 0x42D000
	0x03D381F4 ADRP X24, 0x42D000
	0x03D381F8 ADRP X23, 0x42D000
	0x03D381FC ADRP X22, 0x42D000
	0x03D38200 ADRP X21, 0x42D000
	0x03D38204 ADRP X20, 0x42D000
	0x03D38208 LDR X26, [X26 + 0x188]
	0x03D3820C LDR X19, [X19 + 0xF8]
	0x03D38210 LDRB W8, [X25 + 0xB56]
	0x03D38214 LDR X24, [X24 + 0x190]
	0x03D38218 LDR X23, [X23 + 0x198]
	0x03D3821C LDR X22, [X22 + 0x1A0]
	0x03D38220 LDR X21, [X21 + 0x1A8]
	0x03D38224 LDR X20, [X20 + 0x1B0]
	0x03D38228 TBNZ X8, 0x0, 0x3D38288
	0x03D3822C ADRP X0, 0x42D000
	0x03D38230 LDR X0, [X0 + 0xF8]
	0x03D38234 BL 0x1C16CF4
	0x03D38238 ADRP X0, 0x42D000
	0x03D3823C LDR X0, [X0 + 0x188]
	0x03D38240 BL 0x1C16CF4
	0x03D38244 ADRP X0, 0x42D000
	0x03D38248 LDR X0, [X0 + 0x1A8]
	0x03D3824C BL 0x1C16CF4
	0x03D38250 ADRP X0, 0x42D000
	0x03D38254 LDR X0, [X0 + 0x1B0]
	0x03D38258 BL 0x1C16CF4
	0x03D3825C ADRP X0, 0x42D000
	0x03D38260 LDR X0, [X0 + 0x1A0]
	0x03D38264 BL 0x1C16CF4
	0x03D38268 ADRP X0, 0x42D000
	0x03D3826C LDR X0, [X0 + 0x198]
	0x03D38270 BL 0x1C16CF4
	0x03D38274 ADRP X0, 0x42D000
	0x03D38278 LDR X0, [X0 + 0x190]
	0x03D3827C BL 0x1C16CF4
	0x03D38280 MOVZ W8, 0x1
	0x03D38284 STRB W8, [X25 + 0xB56]
	0x03D38288 LDR X0, [X26]
	0x03D3828C MOVZ W1, 0x1
	0x03D38290 MOV W2, W31
	0x03D38294 MOV W3, W31
	0x03D38298 MOV X4, X31
	0x03D3829C BL 0x3BFE7FC
	0x03D382A0 LDR X8, [X19]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x6B0000
	009 Move W8, [X22+2899]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x42E000
	018 Move X0, [X0+248]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+2899], W8
	022 Compare X21, 0
	023 JumpIfEqual {113}
	024 Move X22, X21
	025 Move X22, [X22+144]
	026 Compare X22, 0
	027 JumpIfEqual {92}
	028 Move X8, [X22+200]
	029 Compare X8, 0
	030 JumpIfEqual {25}
	031 Move X8, [X22+888]
	032 Add X0, X31, 8
	033 Move X1, X31
	034 Move [X31+8], X8
	035 Call Hierarchy.get_parent, X0
	036 Move X8, [X21+888]
	037 Move X23, X0
	038 Add X0, X31, 8
	039 Move X1, X31
	040 Move [X31+8], X8
	041 Call Hierarchy.get_parent, X0
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X23, 0x42E000
	044 Move X23, [X23+248]
	045 Move X0, [X23]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X21
	051 Move X1, X22
	052 Call CommandGenerator.IsParentOrAncestorOf, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {92}
	057 Move X9, X31
	058 Move X8, [X22+224]
	059 Compare X8, 0
	060 JumpIfEqual {62}
	061 Move [X20], X8
	062 Move X8, [X22+208]
	063 Move [X20], X8
	064 Compare X8, 0
	065 JumpIfEqual {113}
	066 Move X24, [X8+40]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 Compare X24, 0
	070 JumpIfEqual {96}
	071 Compare X9, 0
	072 JumpIfEqual {113}
	073 Move X22, [X9+24]
	074 Compare X22, 0
	075 JumpIfEqual {96}
	076 Move X0, [X23]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X21
	082 Move X1, X22
	083 Call CommandGenerator.IsParentOrAncestorOf, X0, X1
	084 Move X9, X24
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {58}
	089 Move X8, [X20]
	090 Compare X8, 0
	091 JumpIfNotEqual {96}
	092 Move X8, [X21+208]
	093 Move [X20], X8
	094 Compare X8, 0
	095 JumpIfEqual {113}
	096 Add X8, X8, 40
	097 Move X8, [X8]
	098 Move X22, [X31+32]
	099 Move X21, [X31+40]
	100 Move X24, [X31+16]
	101 Move X23, [X31+24]
	102 Move [X19], X8
	103 Move X20, [X31+48]
	104 Move X19, [X31+56]
	105 Move X30, [X31+64]
	106 Return 
	107 Move X8, [X22+200]
	108 Move [X19], X8
	109 Compare X8, 0
	110 JumpIfEqual {113}
	111 Add X8, X8, 32
	112 Move X19, X20
	113 Call 0x1C17F20

Method: System.Void InjectCommandInBetween(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.UIR.RenderChainCommand cmd, ref UnityEngine.UIElements.UIR.RenderChainCommand prev, ref UnityEngine.UIElements.UIR.RenderChainCommand next)

Disassembly:
	0x03D380A8 LDP X26, X25, [X31 + 0x30]
	0x03D380AC LDP X30, X27, [X31 + 0x20]
	0x03D380B0 LDR X29, [X31 + 0x18]
	0x03D380B4 LDP D9, D8, [X31 + 0x8]
	0x03D380B8 LDR V10, [X31], #0x70
	0x03D380BC RET
	0x03D380C0 BL 0x1C16F20
	0x03D380C4 BL 0x3EB1B20
	0x03D380C8 SUB X31, X31, 0x60
	0x03D380CC STP X30, X27, [X31 + 0x10]
	0x03D380D0 STP X26, X25, [X31 + 0x20]
	0x03D380D4 STP X24, X23, [X31 + 0x30]
	0x03D380D8 STP X22, X21, [X31 + 0x40]
	0x03D380DC STP X20, X19, [X31 + 0x50]
	0x03D380E0 ADRP X24, 0x6AF000
	0x03D380E4 LDRB W8, [X24 + 0xB4F]
	0x03D380E8 MOV X19, X5
	0x03D380EC MOV X20, X4
	0x03D380F0 MOV X21, X3
	0x03D380F4 MOV X22, X2
	0x03D380F8 MOV X23, X1
	0x03D380FC TBNZ X8, 0x0, 0x3D38120
	0x03D38100 ADRP X0, 0x42C000
	0x03D38104 LDR X0, [X0 + 0xED0]
	0x03D38108 BL 0x1C16CF4
	0x03D3810C ADRP X0, 0x42D000
	0x03D38110 LDR X0, [X0 + 0x140]
	0x03D38114 BL 0x1C16CF4
	0x03D38118 MOVZ W8, 0x1
	0x03D3811C STRB W8, [X24 + 0xB4F]
	0x03D38120 STP X31, X31, [X31]
	0x03D38124 CBZ X22, 0x3D381D0
	0x03D38128 LDR X8, [X22 + 0x50]
	0x03D3812C CBZ X8, 0x3D381D0
	0x03D38130 LDR X8, [X8 + 0x18]
	0x03D38134 CBZ X8, 0x3D381D0
	0x03D38138 ADRP X9, 0x42C000
	0x03D3813C LDR X9, [X9 + 0xED0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2]
	006 Move X19, X3
	007 Move X21, X2
	008 Move X20, X1
	009 Compare X8, 0
	010 JumpIfEqual {18}
	011 Compare X20, 0
	012 JumpIfEqual {51}
	013 Move [X20+32], X8
	014 Move X8, [X21]
	015 Compare X8, 0
	016 JumpIfEqual {51}
	017 Move [X8+40], X20
	018 Move X8, [X19]
	019 Compare X8, 0
	020 JumpIfEqual {28}
	021 Compare X20, 0
	022 JumpIfEqual {51}
	023 Move [X20+40], X8
	024 Move X8, [X19]
	025 Compare X8, 0
	026 JumpIfEqual {51}
	027 Move [X8+32], X20
	028 Compare X20, 0
	029 JumpIfEqual {51}
	030 Move X8, [X20+24]
	031 Compare X8, 0
	032 JumpIfEqual {51}
	033 Move X9, [X8+200]
	034 Move [X8+208], X20
	035 Compare X9, 0
	036 JumpIfNotEqual {38}
	037 Move [X8+200], X20
	038 Compare X0, 0
	039 JumpIfEqual {51}
	040 Move X1, X20
	041 Move X2, X31
	042 Call RenderChain.OnRenderCommandAdded, X0, X1
	043 Move [X21], X20
	044 Move X8, [X20+40]
	045 Move [X19], X8
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Call 0x1C17F20

Method: System.Void InjectClosingCommandInBetween(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.UIR.RenderChainCommand cmd, ref UnityEngine.UIElements.UIR.RenderChainCommand prev, ref UnityEngine.UIElements.UIR.RenderChainCommand next)

Disassembly:
	0x03D382A4 MOVZ W1, 0x1
	0x03D382A8 MOV W2, W31
	0x03D382AC MOV W3, W31
	0x03D382B0 LDR X8, [X8 + 0xB8]
	0x03D382B4 MOV X4, X31
	0x03D382B8 STR X0, [X8]
	0x03D382BC LDR X0, [X24]
	0x03D382C0 BL 0x3BFE7FC
	0x03D382C4 LDR X8, [X19]
	0x03D382C8 MOVZ W1, 0x1
	0x03D382CC MOV W2, W31
	0x03D382D0 MOV W3, W31
	0x03D382D4 LDR X8, [X8 + 0xB8]
	0x03D382D8 MOV X4, X31
	0x03D382DC STR X0, [X8 + 0x8]
	0x03D382E0 LDR X0, [X23]
	0x03D382E4 BL 0x3BFE7FC
	0x03D382E8 LDR X8, [X19]
	0x03D382EC MOVZ W1, 0x1
	0x03D382F0 MOV W2, W31
	0x03D382F4 MOV W3, W31
	0x03D382F8 LDR X8, [X8 + 0xB8]
	0x03D382FC MOV X4, X31
	0x03D38300 STR X0, [X8 + 0x10]
	0x03D38304 LDR X0, [X22]
	0x03D38308 BL 0x3BFE7FC
	0x03D3830C LDR X8, [X19]
	0x03D38310 MOVZ W1, 0x1
	0x03D38314 MOV W2, W31
	0x03D38318 MOV W3, W31
	0x03D3831C LDR X8, [X8 + 0xB8]
	0x03D38320 MOV X4, X31
	0x03D38324 STR X0, [X8 + 0x18]
	0x03D38328 LDR X0, [X21]
	0x03D3832C BL 0x3BFE7FC
	0x03D38330 LDR X8, [X19]
	0x03D38334 MOVZ W1, 0x1
	0x03D38338 MOV W2, W31
	0x03D3833C MOV W3, W31
	0x03D38340 LDR X8, [X8 + 0xB8]
	0x03D38344 MOV X4, X31
	0x03D38348 STR X0, [X8 + 0x20]
	0x03D3834C LDR X0, [X20]
	0x03D38350 BL 0x3BFE7FC
	0x03D38354 LDR X8, [X19]
	0x03D38358 LDP X20, X19, [X31 + 0x40]
	0x03D3835C LDP X22, X21, [X31 + 0x30]
	0x03D38360 LDP X24, X23, [X31 + 0x20]
	0x03D38364 LDR X8, [X8 + 0xB8]
	0x03D38368 LDP X26, X25, [X31 + 0x10]
	0x03D3836C STR X0, [X8 + 0x28]
	0x03D38370 LDR X30, [X31], #0x50
	0x03D38374 RET
	0x03D38378 STR X30, [X31 - 0x50]!
	0x03D3837C STP X26, X25, [X31 + 0x10]
	0x03D38380 STP X24, X23, [X31 + 0x20]
	0x03D38384 STP X22, X21, [X31 + 0x30]
	0x03D38388 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x6B0000
	008 Move W8, [X23+2900]
	009 Move X19, X3
	010 Move X21, X2
	011 Move X20, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x3BC000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+2900], W8
	022 Compare X20, 0
	023 JumpIfEqual {76}
	024 Move X8, 0x3BC000
	025 Move X8, [X8+2600]
	026 Move W23, [X20+48]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move X1, X31
	035 Call Debug.Assert, X0
	036 Move X8, [X21]
	037 Compare X8, 0
	038 JumpIfEqual {44}
	039 Move [X20+32], X8
	040 Move X8, [X21]
	041 Compare X8, 0
	042 JumpIfEqual {76}
	043 Move [X8+40], X20
	044 Move X8, [X19]
	045 Compare X8, 0
	046 JumpIfEqual {52}
	047 Move [X20+40], X8
	048 Move X8, [X19]
	049 Compare X8, 0
	050 JumpIfEqual {76}
	051 Move [X8+32], X20
	052 Move X8, [X20+24]
	053 Compare X8, 0
	054 JumpIfEqual {76}
	055 Move X9, [X8+216]
	056 Move [X8+224], X20
	057 Compare X9, 0
	058 JumpIfNotEqual {60}
	059 Move [X8+216], X20
	060 Compare X22, 0
	061 JumpIfEqual {76}
	062 Move X0, X22
	063 Move X1, X20
	064 Move X2, X31
	065 Call RenderChain.OnRenderCommandAdded, X0, X1
	066 Move [X21], X20
	067 Move X8, [X20+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move [X19], X8
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X30, [X31+48]
	074 Move X23, [X31+56]
	075 Return 
	076 Call 0x1C17F20

Method: System.Void ResetCommands(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D379BC BL 0x1C16CF4
	0x03D379C0 MOVZ W8, 0x1
	0x03D379C4 STRB W8, [X23 + 0xB4B]
	0x03D379C8 LDR X1, [X27]
	0x03D379CC ADD X24, X19, 0x20
	0x03D379D0 MOVI V0.2D, 0x0
	0x03D379D4 MOV X0, X24
	0x03D379D8 STP V0, V0, [X31 + 0x20]
	0x03D379DC STR V0, [X31 + 0x1]
	0x03D379E0 BL 0x2407134
	0x03D379E4 CMP W0, 0x1
	0x03D379E8 B.LT 0x3D37B5C
	0x03D379EC STP X31, X31, [X31 + 0x60]
	0x03D379F0 STP X31, X31, [X31 + 0x50]
	0x03D379F4 STRH W31, [X31 + 0x4C]
	0x03D379F8 CBZ X21, 0x3D37B7C
	0x03D379FC ADRP X26, 0x42E000
	0x03D37A00 LDR X26, [X26 + 0x148]
	0x03D37A04 ADD X0, X19, 0x10
	0x03D37A08 LDR X1, [X26]
	0x03D37A0C BL 0x2408B10
	0x03D37A10 LDR X1, [X27]
	0x03D37A14 MOV W23, W0
	0x03D37A18 MOV X0, X24
	0x03D37A1C BL 0x2407134
	0x03D37A20 CBZ X20, 0x3D37B7C
	0x03D37A24 ADRP X8, 0x42E000
	0x03D37A28 LDR X8, [X8 + 0xF8]
	0x03D37A2C MOV W24, W0
	0x03D37A30 ADRP X29, 0x42E000
	0x03D37A34 ADRP X28, 0x42E000
	0x03D37A38 LDR X0, [X8]
	0x03D37A3C LDR X25, [X20 + 0x110]
	0x03D37A40 ADD X21, X21, 0x108
	0x03D37A44 LDR W8, [X0 + 0xE0]
	0x03D37A48 LDR X29, [X29 + 0x140]
	0x03D37A4C LDR X28, [X28 + 0x138]
	0x03D37A50 CBNZ W8, 0x3D37A58
	0x03D37A54 BL 0x1C16DFC
	0x03D37A58 ADD X4, X31, 0x60
	0x03D37A5C ADD X5, X31, 0x50
	0x03D37A60 ADD X6, X31, 0x4C
	0x03D37A64 MOV X0, X21
	0x03D37A68 MOV W1, W23
	0x03D37A6C MOV W2, W24
	0x03D37A70 MOV X3, X25
	0x03D37A74 MOV X7, X22
	0x03D37A78 BL 0x3D36D38
	0x03D37A7C LDP X0, X1, [X19 + 0x10]
	0x03D37A80 LDR X2, [X29]
	0x03D37A84 BL 0x22232C4
	0x03D37A88 MOV X1, X31
	0x03D37A8C BL 0x33C693C
	0x03D37A90 LDP X8, X1, [X31 + 0x60]
	0x03D37A94 LDR X2, [X29]
	0x03D37A98 MOV X22, X0
	0x03D37A9C MOV X0, X8
	0x03D37AA0 BL 0x22232C4
	0x03D37AA4 MOV X1, X31
	0x03D37AA8 BL 0x33C693C
	0x03D37AAC LDR X1, [X26]
	0x03D37AB0 MOV X23, X0
	0x03D37AB4 ADD X0, X31, 0x60
	0x03D37AB8 BL 0x2408B10
	0x03D37ABC LDP X8, X1, [X19 + 0x20]
	0x03D37AC0 LDR X2, [X28]
	0x03D37AC4 MOV W24, W0
	0x03D37AC8 MOV X0, X8
	0x03D37ACC BL 0x22232B4
	0x03D37AD0 MOV X1, X31
	0x03D37AD4 BL 0x33C693C
	0x03D37AD8 LDP X8, X1, [X31 + 0x50]
	0x03D37ADC LDR X2, [X28]
	0x03D37AE0 MOV X25, X0
	0x03D37AE4 MOV X0, X8
	0x03D37AE8 BL 0x22232B4
	0x03D37AEC MOV X1, X31
	0x03D37AF0 BL 0x33C693C
	0x03D37AF4 LDR X1, [X27]
	0x03D37AF8 MOV X26, X0
	0x03D37AFC ADD X0, X31, 0x50
	0x03D37B00 BL 0x2407134
	0x03D37B04 LDRH W8, [X31 + 0x4C]
	0x03D37B08 LDR W9, [X19 + 0x30]
	0x03D37B0C STP X22, X23, [X31 + 0x10]
	0x03D37B10 STP W24, W31, [X31 + 0x20]
	0x03D37B14 STP X25, X26, [X31 + 0x28]
	0x03D37B18 SUB W8, W8, W9
	0x03D37B1C STP W0, W8, [X31 + 0x38]
	0x03D37B20 LDR X0, [X20 + 0x138]
	0x03D37B24 CBZ X0, 0x3D37B7C
	0x03D37B28 ADD X1, X31, 0x10
	0x03D37B2C MOV X2, X31
	0x03D37B30 BL 0x3D21B5C
	0x03D37B34 LDR X8, [X19 + 0x8]
	0x03D37B38 CBZ X8, 0x3D37B7C
	0x03D37B3C LDR X9, [X21]
	0x03D37B40 ADD X0, X31, 0x50
	0x03D37B44 STR X9, [X8 + 0x50]
	0x03D37B48 LDR X1, [X27]
	0x03D37B4C LDR X19, [X19 + 0x8]
	0x03D37B50 BL 0x2407134
	0x03D37B54 CBZ X19, 0x3D37B7C
	0x03D37B58 STR W0, [X19 + 0x5C]
	0x03D37B5C LDP X20, X19, [X31 + 0xC0]
	0x03D37B60 LDP X22, X21, [X31 + 0xB0]
	0x03D37B64 LDP X24, X23, [X31 + 0xA0]
	0x03D37B68 LDP X26, X25, [X31 + 0x90]
	0x03D37B6C LDP X28, X27, [X31 + 0x80]
	0x03D37B70 LDP X29, X30, [X31 + 0x70]
	0x03D37B74 ADD X31, X31, 0xD0
	0x03D37B78 RET
	0x03D37B7C BL 0x1C16F20
	0x03D37B80 STR X30, [X31 - 0x30]!
	0x03D37B84 STP X22, X21, [X31 + 0x10]
	0x03D37B88 STP X20, X19, [X31 + 0x20]
	0x03D37B8C ADRP X21, 0x6B0000
	0x03D37B90 LDRB W8, [X21 + 0xB4C]
	0x03D37B94 MOV X19, X1
	0x03D37B98 MOV X20, X0
	0x03D37B9C TBNZ X8, 0x0, 0x3D37BB4
	0x03D37BA0 ADRP X0, 0x42E000
	0x03D37BA4 LDR X0, [X0 + 0xF8]
	0x03D37BA8 BL 0x1C16CF4
	0x03D37BAC MOVZ W8, 0x1
	0x03D37BB0 STRB W8, [X21 + 0xB4C]
	0x03D37BB4 CBZ X20, 0x3D37C2C
	0x03D37BB8 ADRP X22, 0x42E000
	0x03D37BBC LDR X21, [X20 + 0x100]
	0x03D37BC0 LDR X22, [X22 + 0xF8]
	0x03D37BC4 CBZ X21, 0x3D37BE8
	0x03D37BC8 LDR X0, [X22]
	0x03D37BCC LDR W8, [X0 + 0xE0]
	0x03D37BD0 CBNZ W8, 0x3D37BD8
	0x03D37BD4 BL 0x1C16DFC
	0x03D37BD8 MOV X0, X20
	0x03D37BDC MOV X1, X19
	0x03D37BE0 MOV X2, X21
	0x03D37BE4 BL 0x3D37C30
	0x03D37BE8 LDR X21, [X20 + 0x108]
	0x03D37BEC CBZ X21, 0x3D37C1C
	0x03D37BF0 LDR X0, [X22]
	0x03D37BF4 LDR W8, [X0 + 0xE0]
	0x03D37BF8 CBNZ W8, 0x3D37C00
	0x03D37BFC BL 0x1C16DFC
	0x03D37C00 MOV X0, X20
	0x03D37C04 MOV X1, X19
	0x03D37C08 MOV X2, X21
	0x03D37C0C LDP X20, X19, [X31 + 0x20]
	0x03D37C10 LDP X22, X21, [X31 + 0x10]
	0x03D37C14 LDR X30, [X31], #0x30
	0x03D37C18 B 0x3D37C30
	0x03D37C1C LDP X20, X19, [X31 + 0x20]
	0x03D37C20 LDP X22, X21, [X31 + 0x10]
	0x03D37C24 LDR X30, [X31], #0x30
	0x03D37C28 RET
	0x03D37C2C BL 0x1C16F20
	0x03D37C30 SUB X31, X31, 0x50
	0x03D37C34 STR X30, [X31 + 0x10]
	0x03D37C38 STP X24, X23, [X31 + 0x20]
	0x03D37C3C STP X22, X21, [X31 + 0x30]
	0x03D37C40 STP X20, X19, [X31 + 0x40]
	0x03D37C44 ADRP X21, 0x6B0000
	0x03D37C48 LDRB W8, [X21 + 0xB4D]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x6B1000
	010 Move W8, [X21+2901]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x3BD000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2901], W8
	022 Compare X20, 0
	023 JumpIfEqual {193}
	024 Move X23, X20
	025 Add X23, X23, 200
	026 Move X1, [X23]
	027 Compare X1, 0
	028 JumpIfEqual {36}
	029 Compare X19, 0
	030 JumpIfEqual {193}
	031 Move X2, [X20+208]
	032 Move X0, X19
	033 Move X3, X31
	034 Call RenderChain.OnRenderCommandsRemoved, X0, X1, X2
	035 Move X1, [X20+200]
	036 Compare X1, 0
	037 JumpIfEqual {39}
	038 Move X24, [X1+32]
	039 Move X24, X31
	040 Move X8, [X20+208]
	041 Compare X8, 0
	042 JumpIfEqual {44}
	043 Move X25, [X8+40]
	044 Move X25, X31
	045 Move X22, 0x3BD000
	046 Move X22, [X22+2600]
	047 Compare X24, 0
	048 JumpIfEqual {52}
	049 Move X8, [X24+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 Move W21, 1
	053 Move X0, [X22]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move W0, W21
	059 Move X1, X31
	060 Call Debug.Assert, X0
	061 Compare X25, 0
	062 JumpIfEqual {68}
	063 Move X8, [X20+216]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X25+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CSET not yet implemented."
	068 Move W21, 1
	069 Move X0, [X22]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move W0, W21
	075 Move X1, X31
	076 Call Debug.Assert, X0
	077 Compare X24, 0
	078 JumpIfEqual {80}
	079 Move [X24+40], X25
	080 Compare X25, 0
	081 JumpIfEqual {83}
	082 Move [X25+32], X24
	083 Move X21, [X23]
	084 Compare X21, 0
	085 JumpIfEqual {106}
	086 Move X8, [X20+208]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X1, X21
	089 Compare X1, 0
	090 JumpIfEqual {193}
	091 Compare X19, 0
	092 JumpIfEqual {193}
	093 Move X21, [X1+40]
	094 Move X0, X19
	095 Move X2, X31
	096 Call RenderChain.FreeCommand, X0, X1
	097 Move X8, [X20+208]
	098 Move X1, X21
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Compare X19, 0
	101 JumpIfEqual {193}
	102 Move X0, X19
	103 Move X1, X21
	104 Move X2, X31
	105 Call RenderChain.FreeCommand, X0, X1
	106 Move [X23], X31
	107 Move [X23+8], X31
	108 Move X23, X20
	109 Add X23, X23, 216
	110 Move X8, [X23]
	111 Compare X8, 0
	112 JumpIfEqual {114}
	113 Move X24, [X8+32]
	114 Move X24, X31
	115 Move X8, [X20+224]
	116 Compare X8, 0
	117 JumpIfEqual {124}
	118 Move X25, [X8+40]
	119 Compare X24, 0
	120 JumpIfEqual {127}
	121 Move X8, [X24+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction CSET not yet implemented."
	124 Move X25, X31
	125 Compare X24, 0
	126 JumpIfNotEqual {121}
	127 Move W21, 1
	128 Move X0, [X22]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move W0, W21
	134 Move X1, X31
	135 Call Debug.Assert, X0
	136 Compare X25, 0
	137 JumpIfEqual {141}
	138 Move X8, [X25+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 NotImplemented "Instruction CSET not yet implemented."
	141 Move W21, 1
	142 Move X0, [X22]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move W0, W21
	148 Move X1, X31
	149 Call Debug.Assert, X0
	150 Compare X24, 0
	151 JumpIfEqual {153}
	152 Move [X24+40], X25
	153 Compare X25, 0
	154 JumpIfEqual {156}
	155 Move [X25+32], X24
	156 Move X1, [X23]
	157 Compare X1, 0
	158 JumpIfEqual {182}
	159 Compare X19, 0
	160 JumpIfEqual {193}
	161 Move X2, [X20+224]
	162 Move X0, X19
	163 Move X3, X31
	164 Call RenderChain.OnRenderCommandsRemoved, X0, X1, X2
	165 Move X1, [X20+216]
	166 Move X8, [X20+224]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Compare X1, 0
	169 JumpIfEqual {193}
	170 Move X21, [X1+40]
	171 Move X0, X19
	172 Move X2, X31
	173 Call RenderChain.FreeCommand, X0, X1
	174 Move X8, [X20+224]
	175 Move X1, X21
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X21, X1
	178 Move X0, X19
	179 Move X1, X21
	180 Move X2, X31
	181 Call RenderChain.FreeCommand, X0, X1
	182 Move [X23], X31
	183 Move [X23+8], X31
	184 Move X20, [X31+48]
	185 Move X19, [X31+56]
	186 Move X22, [X31+32]
	187 Move X21, [X31+40]
	188 Move X24, [X31+16]
	189 Move X23, [X31+24]
	190 Move X30, [X31+64]
	191 Move X25, [X31+72]
	192 Return 
	193 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D391D4 LDR X0, [X0 + 0xEC8]
	0x03D391D8 BL 0x1C16CF4
	0x03D391DC MOVZ W8, 0x1
	0x03D391E0 STRB W8, [X23 + 0xB67]
	0x03D391E4 CBZ X19, 0x3D393C8
	0x03D391E8 LDR W8, [X19 + 0xC4]
	0x03D391EC CMP W8, W22
	0x03D391F0 B.NE 0x3D3920C
	0x03D391F4 LDP X20, X19, [X31 + 0x40]
	0x03D391F8 LDP X22, X21, [X31 + 0x30]
	0x03D391FC LDP X30, X23, [X31 + 0x20]
	0x03D39200 LDP D9, D8, [X31 + 0x10]
	0x03D39204 LDP D11, D10, [X31], #0x50
	0x03D39208 RET
	0x03D3920C STR W22, [X19 + 0xC4]
	0x03D39210 LDR W8, [X21 + 0x2C]
	0x03D39214 MOV X0, X19
	0x03D39218 MOV X1, X31
	0x03D3921C ADD W8, W8, 0x1
	0x03D39220 STR W8, [X21 + 0x2C]
	0x03D39224 BL 0x3DE0EB8
	0x03D39228 CBZ X0, 0x3D393C8
	0x03D3922C ADRP X10, 0x3E3000
	0x03D39230 LDR X8, [X0]
	0x03D39234 LDR X10, [X10 + 0x120]
	0x03D39238 MOV X21, X0
	0x03D3923C LDRH W9, [X8 + 0x12E]
	0x03D39240 LDR X1, [X10]
	0x03D39244 CBZ X9, 0x3D39268
	0x03D39248 LDR X10, [X8 + 0xB0]
	0x03D3924C ADD X10, X10, 0x8
	0x03D39250 LDUR X11, [X10 - 0x8]
	0x03D39254 CMP X11, X1
	0x03D39258 B.EQ 0x3D39278
	0x03D3925C SUBS X9, X9, 0x1
	0x03D39260 ADD X10, X10, 0x10
	0x03D39264 B.NE 0x3D39250
	0x03D39268 MOV X0, X21
	0x03D3926C MOV W2, W31
	0x03D39270 BL 0x1C5C788
	0x03D39274 B 0x3D39284
	0x03D39278 LDRSW X9, [X10]
	0x03D3927C ADD X8, X8, X9, 0x4, LSL
	0x03D39280 ADD X0, X8, 0x138
	0x03D39284 LDP X8, X1, [X0]
	0x03D39288 MOV X0, X21
	0x03D3928C BLR X8
	0x03D39290 MOV V8.16B, V0.16B
	0x03D39294 LDR V0, [X19 + 0x1C0]
	0x03D39298 MOV V9.16B, V1.16B
	0x03D3929C MOV V10.16B, V2.16B
	0x03D392A0 MOV V11.16B, V3.16B
	0x03D392A4 FCMP S0, 0x0
	0x03D392A8 B.NE 0x3D392CC
	0x03D392AC FCMP S11, 0x0
	0x03D392B0 B.LE 0x3D392CC
	0x03D392B4 CBZ X20, 0x3D393C8
	0x03D392B8 MOV X0, X20
	0x03D392BC MOV X1, X19
	0x03D392C0 MOV W2, W31
	0x03D392C4 MOV X3, X31
	0x03D392C8 BL 0x3D25CC0
	0x03D392CC MOV X0, X19
	0x03D392D0 MOV X1, X31
	0x03D392D4 STR S8, [X19 + 0x1B4]
	0x03D392D8 STR S9, [X19 + 0x1B8]
	0x03D392DC STR S10, [X19 + 0x1BC]
	0x03D392E0 STR S11, [X19 + 0x1C0]
	0x03D392E4 BL 0x3DEC0F4
	0x03D392E8 TBZ X0, 0x4, 0x3D39374
	0x03D392EC LDRB W8, [X19 + 0xB8]
	0x03D392F0 TBNZ X8, 0x0, 0x3D39374
	0x03D392F4 ADRP X22, 0x42B000
	0x03D392F8 LDR X22, [X22 + 0x778]
	0x03D392FC LDR X0, [X22]
	0x03D39300 LDR W8, [X0 + 0xE0]
	0x03D39304 CBNZ W8, 0x3D3930C
	0x03D39308 BL 0x1C16DFC
	0x03D3930C MOV X0, X20
	0x03D39310 MOV X1, X19
	0x03D39314 BL 0x3D3A8AC
	0x03D39318 LDR X8, [X22]
	0x03D3931C MOV W21, W0
	0x03D39320 LDR W9, [X8 + 0xE0]
	0x03D39324 CBNZ W9, 0x3D39330
	0x03D39328 MOV X0, X8
	0x03D3932C BL 0x1C16DFC
	0x03D39330 MOV X0, X20
	0x03D39334 MOV X1, X19
	0x03D39338 BL 0x3D3AF44
	0x03D3933C ADRP X8, 0x3E3000
	0x03D39340 LDR X8, [X8 + 0xEC8]
	0x03D39344 LDR X9, [X19]
	0x03D39348 LDR X8, [X8]
	0x03D3934C LDRB W11, [X9 + 0x130]
	0x03D39350 LDRB W10, [X8 + 0x130]
	0x03D39354 CMP W11, W10
	0x03D39358 B.CC 0x3D39370
	0x03D3935C LDR X9, [X9 + 0xC8]
	0x03D39360 ADD X9, X9, X10, 0x3, LSL
	0x03D39364 LDUR X9, [X9 - 0x8]
	0x03D39368 CMP X9, X8
	0x03D3936C B.EQ 0x3D393A0
	0x03D39370 TBZ X21, 0x0, 0x3D391F4
	0x03D39374 CBZ X20, 0x3D393C8
	0x03D39378 MOV X0, X20
	0x03D3937C MOV X1, X19
	0x03D39380 LDP X20, X19, [X31 + 0x40]
	0x03D39384 LDP X22, X21, [X31 + 0x30]
	0x03D39388 LDP X30, X23, [X31 + 0x20]
	0x03D3938C LDP D9, D8, [X31 + 0x10]
	0x03D39390 MOV W2, W31
	0x03D39394 MOV X3, X31
	0x03D39398 LDP D11, D10, [X31], #0x50
	0x03D3939C B 0x3D25CC0
	0x03D393A0 LDR X0, [X22]
	0x03D393A4 LDR W8, [X0 + 0xE0]
	0x03D393A8 CBNZ W8, 0x3D393B0
	0x03D393AC BL 0x1C16DFC
	0x03D393B0 MOV X0, X20
	0x03D393B4 MOV X1, X19
	0x03D393B8 BL 0x3D3BDA8
	0x03D393BC ORN W8, W21, W0, 0x0
	0x03D393C0 TBZ X8, 0x0, 0x3D391F4
	0x03D393C4 B 0x3D39374
	0x03D393C8 BL 0x1C16F20
	0x03D393CC SUB X31, X31, 0x40
	0x03D393D0 STP X30, X23, [X31 + 0x10]
	0x03D393D4 STP X22, X21, [X31 + 0x20]
	0x03D393D8 STP X20, X19, [X31 + 0x30]
	0x03D393DC ADRP X23, 0x6AE000
	0x03D393E0 LDRB W8, [X23 + 0xB5F]
	0x03D393E4 MOV X19, X3
	0x03D393E8 MOV W20, W2
	0x03D393EC MOV X21, X1
	0x03D393F0 MOV X22, X0
	0x03D393F4 TBNZ X8, 0x0, 0x3D3940C
	0x03D393F8 ADRP X0, 0x42B000
	0x03D393FC LDR X0, [X0 + 0x778]
	0x03D39400 BL 0x1C16CF4
	0x03D39404 MOVZ W8, 0x1
	0x03D39408 STRB W8, [X23 + 0xB5F]
	0x03D3940C LDR W8, [X19 + 0x14]
	0x03D39410 ADD W8, W8, 0x1
	0x03D39414 STR W8, [X19 + 0x14]
	0x03D39418 CBZ X21, 0x3D39484
	0x03D3941C LDR X8, [X21 + 0x378]
	0x03D39420 ADD X0, X31, 0x8
	0x03D39424 MOV X1, X31
	0x03D39428 STR X8, [X31 + 0x8]
	0x03D3942C BL 0x3DF88DC
	0x03D39430 CBZ X22, 0x3D39484
	0x03D39434 ADRP X8, 0x42B000
	0x03D39438 LDR X8, [X8 + 0x778]
	0x03D3943C LDR X23, [X22 + 0x110]
	0x03D39440 LDR X0, [X8]
	0x03D39444 LDR W8, [X0 + 0xE0]
	0x03D39448 CBNZ W8, 0x3D39450
	0x03D3944C BL 0x1C16DFC
	0x03D39450 MOV X0, X22
	0x03D39454 MOV X2, X21
	0x03D39458 MOV W3, W20
	0x03D3945C MOV X4, X23
	0x03D39460 MOV W5, W31
	0x03D39464 MOV W6, W31
	0x03D39468 MOV X7, X19
	0x03D3946C BL 0x3D39488
	0x03D39470 LDP X20, X19, [X31 + 0x30]
	0x03D39474 LDP X22, X21, [X31 + 0x20]
	0x03D39478 LDP X30, X23, [X31 + 0x10]
	0x03D3947C ADD X31, X31, 0x40
	0x03D39480 RET
	0x03D39484 BL 0x1C16F20
	0x03D39488 SUB X31, X31, 0x120
	0x03D3948C STP D11, D10, [X31 + 0xA0]
	0x03D39490 STP D9, D8, [X31 + 0xB0]
	0x03D39494 STP X29, X30, [X31 + 0xC0]
	0x03D39498 STP X28, X27, [X31 + 0xD0]
	0x03D3949C STP X26, X25, [X31 + 0xE0]
	0x03D394A0 STP X24, X23, [X31 + 0xF0]
	0x03D394A4 STP X22, X21, [X31 + 0x100]
	0x03D394A8 STP X20, X19, [X31 + 0x110]
	0x03D394AC ADRP X26, 0x6AE000
	0x03D394B0 LDRB W8, [X26 + 0xB68]
	0x03D394B4 MOV X19, X7
	0x03D394B8 MOV W24, W6
	0x03D394BC MOV W25, W5
	0x03D394C0 MOV X20, X4
	0x03D394C4 MOV W21, W3
	0x03D394C8 MOV X22, X2
	0x03D394CC MOV X23, X0
	0x03D394D0 TBNZ X8, 0x0, 0x3D3950C
	0x03D394D4 ADRP X0, 0x42C000
	0x03D394D8 LDR X0, [X0 + 0xF8]
	0x03D394DC BL 0x1C16CF4
	0x03D394E0 ADRP X0, 0x3BA000
	0x03D394E4 LDR X0, [X0 + 0xA28]
	0x03D394E8 BL 0x1C16CF4
	0x03D394EC ADRP X0, 0x42B000
	0x03D394F0 LDR X0, [X0 + 0x778]
	0x03D394F4 BL 0x1C16CF4
	0x03D394F8 ADRP X0, 0x42B000
	0x03D394FC LDR X0, [X0 + 0x760]
	0x03D39500 BL 0x1C16CF4
	0x03D39504 MOVZ W8, 0x1
	0x03D39508 STRB W8, [X26 + 0xB68]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x6AF000
	011 Move X26, 0x42D000
	012 Move X19, 0x42D000
	013 Move X24, 0x42D000
	014 Move X23, 0x42D000
	015 Move X22, 0x42D000
	016 Move X21, 0x42D000
	017 Move X20, 0x42D000
	018 Move X26, [X26+392]
	019 Move X19, [X19+248]
	020 Move W8, [X25+2902]
	021 Move X24, [X24+400]
	022 Move X23, [X23+408]
	023 Move X22, [X22+416]
	024 Move X21, [X21+424]
	025 Move X20, [X20+432]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {53}
	030 Move X0, 0x42D000
	031 Move X0, [X0+248]
	032 Call 0x1C17CF4
	033 Move X0, 0x42D000
	034 Move X0, [X0+392]
	035 Call 0x1C17CF4
	036 Move X0, 0x42D000
	037 Move X0, [X0+424]
	038 Call 0x1C17CF4
	039 Move X0, 0x42D000
	040 Move X0, [X0+432]
	041 Call 0x1C17CF4
	042 Move X0, 0x42D000
	043 Move X0, [X0+416]
	044 Call 0x1C17CF4
	045 Move X0, 0x42D000
	046 Move X0, [X0+408]
	047 Call 0x1C17CF4
	048 Move X0, 0x42D000
	049 Move X0, [X0+400]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X25+2902], W8
	053 Move X0, [X26]
	054 Move W1, 1
	055 Move W2, W31
	056 Move W3, W31
	057 Move X4, X31
	058 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	059 Move X8, [X19]
	060 Move W1, 1
	061 Move W2, W31
	062 Move W3, W31
	063 Move X8, [X8+184]
	064 Move X4, X31
	065 Move [X8], X0
	066 Move X0, [X24]
	067 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	068 Move X8, [X19]
	069 Move W1, 1
	070 Move W2, W31
	071 Move W3, W31
	072 Move X8, [X8+184]
	073 Move X4, X31
	074 Move [X8+8], X0
	075 Move X0, [X23]
	076 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	077 Move X8, [X19]
	078 Move W1, 1
	079 Move W2, W31
	080 Move W3, W31
	081 Move X8, [X8+184]
	082 Move X4, X31
	083 Move [X8+16], X0
	084 Move X0, [X22]
	085 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	086 Move X8, [X19]
	087 Move W1, 1
	088 Move W2, W31
	089 Move W3, W31
	090 Move X8, [X8+184]
	091 Move X4, X31
	092 Move [X8+24], X0
	093 Move X0, [X21]
	094 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	095 Move X8, [X19]
	096 Move W1, 1
	097 Move W2, W31
	098 Move W3, W31
	099 Move X8, [X8+184]
	100 Move X4, X31
	101 Move [X8+32], X0
	102 Move X0, [X20]
	103 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	104 Move X8, [X19]
	105 Move X20, [X31+64]
	106 Move X19, [X31+72]
	107 Move X22, [X31+48]
	108 Move X21, [X31+56]
	109 Move X24, [X31+32]
	110 Move X23, [X31+40]
	111 Move X8, [X8+184]
	112 Move X26, [X31+16]
	113 Move X25, [X31+24]
	114 Move [X8+40], X0
	115 Move X30, [X31+80]
	116 Return 
	117 Move [X31-80], X30
	118 Move [X31+16], X26
	119 Move [X31+24], X25
	120 Move [X31+32], X24
	121 Move [X31+40], X23
	122 Move [X31+48], X22
	123 Move [X31+56], X21
	124 Move [X31+64], X20
	125 Move [X31+72], X19
	126 Move X25, 0x6AF000
	127 Move W8, [X25+2905]
	128 Move X19, X5
	129 Move W24, W4
	130 Move X23, X3
	131 Move W21, W2
	132 Move X20, X1
	133 Move X22, X0
	134 Compare W8, 0
	135 JumpIfEqual {142}
	136 Move TEMP, X24
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {151}
	140 Compare X20, 0
	141 JumpIfNotEqual {156}
	142 Move X0, 0x3E3000
	143 Move X0, [X0+1568]
	144 Call 0x1C17CF4
	145 Move W8, 1
	146 Move [X25+2905], W8
	147 Move TEMP, X24
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {140}
	151 Move W8, 1
	152 Move [X19+16], X23
	153 Move [X19+48], W8
	154 Compare X20, 0
	155 JumpIfEqual {238}
	156 Move X8, [X20+80]
	157 Compare X8, 0
	158 JumpIfEqual {238}
	159 Move X8, [X8+80]
	160 Move X23, 0x3E3000
	161 Move [X19+40], X8
	162 Move X23, [X23+1568]
	163 Move W24, [X20+64]
	164 Move X0, [X23]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {170}
	168 Call 0x1C17DFC
	169 Move X0, [X23]
	170 Move X8, [X0+184]
	171 Move X26, 0x6AF000
	172 Move W9, [X26+2904]
	173 Move W25, [X8]
	174 Compare W9, 0
	175 JumpIfNotEqual {181}
	176 Move X0, X23
	177 Call 0x1C17CF4
	178 Move X0, [X23]
	179 Move W8, 1
	180 Move [X26+2904], W8
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X0, [X22+160]
	187 Compare X0, 0
	188 JumpIfEqual {238}
	189 Move TEMP, X21
	190 And TEMP, TEMP, -2147483648
	191 Compare TEMP, -2147483648
	192 JumpIfEqual {210}
	193 Move X8, [X0+24]
	194 Compare X8, 0
	195 JumpIfEqual {238}
	196 Move W9, [X8+24]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Add X8, X8, W21
	199 Add X8, X8, 32
	200 Move W9, [X8]
	201 Move W10, [X0+36]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move W9, [X0+48]
	204 Subtract W9, W9, 1
	205 Move [X0+48], W9
	206 Move W9, [X0+32]
	207 Add W9, W9, 1
	208 Move [X0+32], W9
	209 Move [X8], W9
	210 Call TextureSlotManager.FindOldestSlot, X0
	211 Move X8, [X22+160]
	212 Compare X8, 0
	213 JumpIfEqual {238}
	214 Move X3, [X19]
	215 Move V0, [X20+72]
	216 Move W1, [X20+64]
	217 Move W2, W0
	218 Move X0, X8
	219 Call TextureSlotManager.Bind, X0, X1, V0, X2, X3
	220 Move W8, 1
	221 Move [X19+50], W8
	222 Move W8, [X20+68]
	223 Move W9, [X19+28]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move [X19+28], W8
	226 Move W8, 1
	227 Move [X19+51], W8
	228 Move X20, [X31+64]
	229 Move X19, [X31+72]
	230 Move X22, [X31+48]
	231 Move X21, [X31+56]
	232 Move X24, [X31+32]
	233 Move X23, [X31+40]
	234 Move X26, [X31+16]
	235 Move X25, [X31+24]
	236 Move X30, [X31+80]
	237 Return 
	238 Call 0x1C17F20
	239 Call 0x1C17F28

