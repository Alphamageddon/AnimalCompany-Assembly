Type: UnityEngine.UIElements.UIR.Implementation.UIRStylePainter

Method: UnityEngine.UIElements.MeshWriteData GetPooledMeshWriteData()

Disassembly:
	0x03D3D4D0 LDR X26, [X26 + 0x598]
	0x03D3D4D4 MOV X22, X6
	0x03D3D4D8 MOV X19, X5
	0x03D3D4DC MOV X21, X4
	0x03D3D4E0 MOV X23, X3
	0x03D3D4E4 MOV W25, W2
	0x03D3D4E8 MOV X20, X1
	0x03D3D4EC MOV X24, X0
	0x03D3D4F0 TBNZ X8, 0x0, 0x3D3D520
	0x03D3D4F4 ADRP X0, 0x3B6000
	0x03D3D4F8 LDR X0, [X0 + 0x598]
	0x03D3D4FC BL 0x1C16CF4
	0x03D3D500 ADRP X0, 0x3E0000
	0x03D3D504 LDR X0, [X0 + 0x250]
	0x03D3D508 BL 0x1C16CF4
	0x03D3D50C ADRP X0, 0x425000
	0x03D3D510 LDR X0, [X0 + 0x6B0]
	0x03D3D514 BL 0x1C16CF4
	0x03D3D518 MOVZ W8, 0x1
	0x03D3D51C STRB W8, [X27 + 0xB79]
	0x03D3D520 ADRP X8, 0xFFFFFFFFFCDAD000
	0x03D3D524 LDR V0, [X8 + 0xBC]
	0x03D3D528 STR W31, [X31 + 0x18]
	0x03D3D52C STP X31, X31, [X31]
	0x03D3D530 STR V0, [X23]
	0x03D3D534 STRB W31, [X21]
	0x03D3D538 STR W31, [X19]
	0x03D3D53C STR W31, [X22]
	0x03D3D540 LDR X0, [X26]
	0x03D3D544 LDR W8, [X0 + 0xE0]
	0x03D3D548 CBNZ W8, 0x3D3D550
	0x03D3D54C BL 0x1C16DFC
	0x03D3D550 MOV X0, X20
	0x03D3D554 MOV X1, X31
	0x03D3D558 MOV X2, X31
	0x03D3D55C BL 0x3C3883C
	0x03D3D560 TBNZ X0, 0x0, 0x3D3D644
	0x03D3D564 TBNZ X25, 0x1, 0x3D3D5D4
	0x03D3D568 LDR X0, [X24 + 0x20]
	0x03D3D56C CBZ X0, 0x3D3D5D4
	0x03D3D570 LDR X1, [X24 + 0x110]
	0x03D3D574 CBZ X20, 0x3D3D594
	0x03D3D578 ADRP X8, 0x3E0000
	0x03D3D57C LDR X8, [X8 + 0x250]
	0x03D3D580 LDR X9, [X20]
	0x03D3D584 LDR X8, [X8]
	0x03D3D588 CMP X9, X8
	0x03D3D58C CSEL X2, X20, X31, EQ
	0x03D3D590 B 0x3D3D598
	0x03D3D594 MOV X2, X31
	0x03D3D598 LDR X8, [X0]
	0x03D3D59C ADD X3, X31, 0x18
	0x03D3D5A0 ADD X4, X31, 0x0
	0x03D3D5A4 LDP X9, X5, [X8 + 0x178]
	0x03D3D5A8 BLR X9
	0x03D3D5AC TBZ X0, 0x0, 0x3D3D5D4
	0x03D3D5B0 MOVZ W8, 0x3
	0x03D3D5B4 STR W8, [X22]
	0x03D3D5B8 LDR V0, [X31]
	0x03D3D5BC MOVZ W8, 0x1
	0x03D3D5C0 UNIMPLEMENTED
	0x03D3D5C4 STR V0, [X23]
	0x03D3D5C8 STRB W8, [X21]
	0x03D3D5CC LDR W0, [X31 + 0x18]
	0x03D3D5D0 B 0x3D3D640
	0x03D3D5D4 MOVZ W8, 0x2
	0x03D3D5D8 STR W8, [X22]
	0x03D3D5DC ADRP X21, 0x425000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6AB000
	006 Move W8, [X20+2930]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x429000
	013 Move X0, [X0+440]
	014 Call 0x1C17CF4
	015 Move X0, 0x429000
	016 Move X0, [X0+448]
	017 Call 0x1C17CF4
	018 Move X0, 0x429000
	019 Move X0, [X0+456]
	020 Call 0x1C17CF4
	021 Move X0, 0x429000
	022 Move X0, [X0+464]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2930], W8
	026 Move X20, [X19+224]
	027 Compare X20, 0
	028 JumpIfEqual {76}
	029 Move W8, [X19+232]
	030 Move W9, [X20+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, 0x429000
	033 Move X8, [X8+464]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move X1, X31
	037 Move X21, X0
	038 Call MeshWriteData..ctor, X0
	039 Move X9, 0x429000
	040 Move X9, [X9+440]
	041 Move W10, [X20+28]
	042 Move X8, [X20+16]
	043 Move X9, [X9]
	044 Add W10, W10, 1
	045 Move [X20+28], W10
	046 Compare X8, 0
	047 JumpIfEqual {76}
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Move W11, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add W9, W10, 1
	052 Add X8, X8, X10
	053 Move [X20+24], W9
	054 Move [X8+32], X21
	055 Move X8, [X9+32]
	056 Move X0, X20
	057 Move X1, X21
	058 Move X8, [X8+192]
	059 Move X2, [X8+112]
	060 Call List`1<Object>.AddWithResize, X0, X1
	061 Move W1, [X19+232]
	062 Move X0, [X19+224]
	063 Add W8, W1, 1
	064 Move [X19+232], W8
	065 Compare X0, 0
	066 JumpIfEqual {76}
	067 Move X8, 0x429000
	068 Move X8, [X8+456]
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X2, [X8]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Call List`1<Object>.get_Item, X0, X1
	075 Return X0
	076 Call 0x1C17F20

Method: UnityEngine.UIElements.MeshWriteData AllocRawVertsIndices(System.UInt32 vertexCount, System.UInt32 indexCount, ref UnityEngine.UIElements.UIR.MeshBuilder/AllocMeshData allocatorData)

Disassembly:
	0x03D3D5E0 LDR X21, [X21 + 0x6B0]
	0x03D3D5E4 LDR X0, [X21]
	0x03D3D5E8 LDR W8, [X0 + 0xE0]
	0x03D3D5EC CBNZ W8, 0x3D3D5F4
	0x03D3D5F0 BL 0x1C16DFC
	0x03D3D5F4 ADRP X22, 0x6AA000
	0x03D3D5F8 LDRB W8, [X22 + 0x7E5]
	0x03D3D5FC CBNZ W8, 0x3D3D614
	0x03D3D600 ADRP X0, 0x425000
	0x03D3D604 LDR X0, [X0 + 0x6B0]
	0x03D3D608 BL 0x1C16CF4
	0x03D3D60C MOVZ W8, 0x1
	0x03D3D610 STRB W8, [X22 + 0x7E5]
	0x03D3D614 LDR X0, [X21]
	0x03D3D618 LDR W8, [X0 + 0xE0]
	0x03D3D61C CBNZ W8, 0x3D3D628
	0x03D3D620 BL 0x1C16DFC
	0x03D3D624 LDR X0, [X21]
	0x03D3D628 LDR X8, [X0 + 0xB8]
	0x03D3D62C LDR X0, [X8]
	0x03D3D630 CBZ X0, 0x3D3D660
	0x03D3D634 MOV X1, X20
	0x03D3D638 MOV X2, X31
	0x03D3D63C BL 0x3DE06F4
	0x03D3D640 STR W0, [X19]
	0x03D3D644 LDP X20, X19, [X31 + 0x60]
	0x03D3D648 LDP X22, X21, [X31 + 0x50]
	0x03D3D64C LDP X24, X23, [X31 + 0x40]
	0x03D3D650 LDP X26, X25, [X31 + 0x30]
	0x03D3D654 LDP X30, X27, [X31 + 0x20]
	0x03D3D658 ADD X31, X31, 0x70
	0x03D3D65C RET
	0x03D3D660 BL 0x1C16F20
	0x03D3D664 SUB X31, X31, 0x1A0
	0x03D3D668 STP X29, X30, [X31 + 0x140]
	0x03D3D66C STP X28, X27, [X31 + 0x150]
	0x03D3D670 STP X26, X25, [X31 + 0x160]
	0x03D3D674 STP X24, X23, [X31 + 0x170]
	0x03D3D678 STP X22, X21, [X31 + 0x180]
	0x03D3D67C STP X20, X19, [X31 + 0x190]
	0x03D3D680 ADRP X26, 0x6AA000
	0x03D3D684 LDRB W8, [X26 + 0xB7A]
	0x03D3D688 MOV W22, W7
	0x03D3D68C MOV W23, W6
	0x03D3D690 MOV X25, X5
	0x03D3D694 MOV W21, W4
	0x03D3D698 MOV X20, X2
	0x03D3D69C MOV X24, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6AB000
	007 Move W8, [X22+2931]
	008 Move W20, W2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x429000
	016 Move X0, [X0+472]
	017 Call 0x1C17CF4
	018 Move X0, 0x429000
	019 Move X0, [X0+480]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2931], W8
	023 Move X0, [X19+208]
	024 Compare X0, 0
	025 JumpIfEqual {62}
	026 Move X8, 0x429000
	027 Move X8, [X8+472]
	028 Move W1, W21
	029 Move X2, [X8]
	030 Call TempAllocator`1<Vertex>.Alloc, X0, X1
	031 Move X8, X0
	032 Move X0, [X19+216]
	033 Move [X19+48], X8
	034 Move [X19+56], X1
	035 Compare X0, 0
	036 JumpIfEqual {62}
	037 Move X8, 0x429000
	038 Move X8, [X8+480]
	039 Move W1, W20
	040 Move X2, [X8]
	041 Call 0x26AF878, X0, X1
	042 Move [X19+64], X0
	043 Move [X19+72], X1
	044 Move X0, X19
	045 Call UIRStylePainter.GetPooledMeshWriteData, X0
	046 Compare X0, 0
	047 JumpIfEqual {62}
	048 Move X3, [X19+64]
	049 Move X4, [X19+72]
	050 Move X1, [X19+48]
	051 Move X2, [X19+56]
	052 Move X5, X31
	053 Move X20, X0
	054 Call MeshWriteData.Reset, X0, X1, X2
	055 Move X0, X20
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Return X0
	062 Call 0x1C17F20

Method: UnityEngine.UIElements.MeshWriteData AllocThroughDrawMesh(System.UInt32 vertexCount, System.UInt32 indexCount, ref UnityEngine.UIElements.UIR.MeshBuilder/AllocMeshData allocatorData)

Disassembly:
	0x03D3D6A0 MOV X19, X0
	0x03D3D6A4 STR W3, [X31 + 0x98]
	0x03D3D6A8 TBNZ X8, 0x0, 0x3D3D744
	0x03D3D6AC ADRP X0, 0x3B6000
	0x03D3D6B0 LDR X0, [X0 + 0xA28]

ISIL:
	001 Move X8, [X3+8]
	002 Move X4, [X3+24]
	003 Move W5, [X3+32]
	004 Move X3, X8

Method: System.Void .ctor(UnityEngine.UIElements.UIR.RenderChain renderChain)

Disassembly:
	0x03D3DB58 BL 0x1C16CF4
	0x03D3DB5C ADRP X0, 0x428000
	0x03D3DB60 LDR X0, [X0 + 0x240]
	0x03D3DB64 BL 0x1C16CF4
	0x03D3DB68 ADRP X0, 0x428000
	0x03D3DB6C LDR X0, [X0 + 0x248]
	0x03D3DB70 BL 0x1C16CF4
	0x03D3DB74 ADRP X0, 0x427000
	0x03D3DB78 LDR X0, [X0 + 0x6F8]
	0x03D3DB7C BL 0x1C16CF4
	0x03D3DB80 MOVZ W8, 0x1
	0x03D3DB84 STRB W8, [X22 + 0xB7B]
	0x03D3DB88 LDR W8, [X21 + 0x10]
	0x03D3DB8C CBZ W8, 0x3D3DE78
	0x03D3DB90 LDR W8, [X21 + 0x14]
	0x03D3DB94 CBZ W8, 0x3D3DE78
	0x03D3DB98 LDR X0, [X21]
	0x03D3DB9C MOV X1, X31
	0x03D3DBA0 BL 0x33C6948
	0x03D3DBA4 ADRP X8, 0x427000
	0x03D3DBA8 LDR X8, [X8 + 0x6F8]
	0x03D3DBAC LDR W22, [X21 + 0x10]
	0x03D3DBB0 MOV X23, X0
	0x03D3DBB4 LDR X8, [X8]
	0x03D3DBB8 LDR W9, [X8 + 0xE0]
	0x03D3DBBC CBNZ W9, 0x3D3DBC8
	0x03D3DBC0 MOV X0, X8
	0x03D3DBC4 BL 0x1C16DFC
	0x03D3DBC8 ADRP X8, 0x428000
	0x03D3DBCC LDR X8, [X8 + 0x248]
	0x03D3DBD0 MOV X0, X23
	0x03D3DBD4 MOV W1, W22
	0x03D3DBD8 LDR X2, [X8]
	0x03D3DBDC BL 0x22A1728
	0x03D3DBE0 STP X0, X1, [X31 + 0x68]
	0x03D3DBE4 LDR X0, [X21 + 0x8]
	0x03D3DBE8 MOV X1, X31
	0x03D3DBEC BL 0x33C6948
	0x03D3DBF0 ADRP X8, 0x428000
	0x03D3DBF4 LDR W1, [X21 + 0x14]
	0x03D3DBF8 LDR X8, [X8 + 0x240]
	0x03D3DBFC LDR X2, [X8]
	0x03D3DC00 BL 0x22A16E4
	0x03D3DC04 ADRP X26, 0x428000
	0x03D3DC08 LDR X26, [X26 + 0x148]
	0x03D3DC0C STP X0, X1, [X31 + 0x58]
	0x03D3DC10 ADD X0, X31, 0x68
	0x03D3DC14 LDR X8, [X26]
	0x03D3DC18 MOV X1, X8
	0x03D3DC1C BL 0x2408B10
	0x03D3DC20 CBZ W0, 0x3D3DE78
	0x03D3DC24 ADRP X27, 0x427000
	0x03D3DC28 LDR X27, [X27 + 0xFB8]
	0x03D3DC2C ADD X0, X31, 0x58
	0x03D3DC30 LDR X1, [X27]
	0x03D3DC34 BL 0x2407134
	0x03D3DC38 CBZ W0, 0x3D3DE78
	0x03D3DC3C STR W31, [X31 + 0x120]
	0x03D3DC40 STR X31, [X31 + 0x118]
	0x03D3DC44 LDR X1, [X26]
	0x03D3DC48 LDR X21, [X19 + 0xD0]
	0x03D3DC4C ADD X0, X31, 0x68
	0x03D3DC50 BL 0x2408B10
	0x03D3DC54 CBZ X21, 0x3D3DEA8
	0x03D3DC58 ADRP X8, 0x428000
	0x03D3DC5C LDR X8, [X8 + 0x1D8]
	0x03D3DC60 MOV W1, W0
	0x03D3DC64 MOV X0, X21
	0x03D3DC68 LDR X2, [X8]
	0x03D3DC6C BL 0x26AEF1C
	0x03D3DC70 LDR X8, [X27]
	0x03D3DC74 LDR X21, [X19 + 0xD8]
	0x03D3DC78 MOV X23, X0
	0x03D3DC7C MOV X24, X1
	0x03D3DC80 ADD X0, X31, 0x58
	0x03D3DC84 MOV X1, X8
	0x03D3DC88 BL 0x2407134
	0x03D3DC8C CBZ X21, 0x3D3DEA8
	0x03D3DC90 ADRP X8, 0x428000
	0x03D3DC94 LDR X8, [X8 + 0x1E0]
	0x03D3DC98 MOV W1, W0
	0x03D3DC9C MOV X0, X21
	0x03D3DCA0 LDR X2, [X8]
	0x03D3DCA4 BL 0x26AE878
	0x03D3DCA8 MOV X21, X19
	0x03D3DCAC STR X0, [X21 + 0x40]!
	0x03D3DCB0 ADRP X8, 0xFFFFFFFFFCDB0000
	0x03D3DCB4 MOV X22, X21
	0x03D3DCB8 LDR V0, [X8 + 0x3D0]
	0x03D3DCBC LDR X8, [X21 + 0x80]
	0x03D3DCC0 LDR V1, [X21 + 0x78]
	0x03D3DCC4 STR X23, [X22 - 0x10]!
	0x03D3DCC8 STUR X24, [X21 - 0x8]
	0x03D3DCCC LDR W9, [X31 + 0x120]
	0x03D3DCD0 LDR X10, [X31 + 0x118]
	0x03D3DCD4 UNIMPLEMENTED
	0x03D3DCD8 STP X31, X8, [X21 + 0x20]
	0x03D3DCDC STP W9, W20, [X21 + 0x18]
	0x03D3DCE0 STP X1, X10, [X21 + 0x8]
	0x03D3DCE4 STP D0, D1, [X21 + 0x30]
	0x03D3DCE8 LDR X1, [X26]
	0x03D3DCEC MOV X0, X22
	0x03D3DCF0 BL 0x2408B10
	0x03D3DCF4 LDR X1, [X26]
	0x03D3DCF8 MOV W20, W0
	0x03D3DCFC ADD X0, X31, 0x68
	0x03D3DD00 BL 0x2408B10
	0x03D3DD04 ADRP X8, 0x3B6000
	0x03D3DD08 LDR X8, [X8 + 0xA28]
	0x03D3DD0C MOV W23, W0
	0x03D3DD10 LDR X8, [X8]
	0x03D3DD14 LDR W9, [X8 + 0xE0]
	0x03D3DD18 CBNZ W9, 0x3D3DD24
	0x03D3DD1C MOV X0, X8
	0x03D3DD20 BL 0x1C16DFC
	0x03D3DD24 CMP W20, W23
	0x03D3DD28 CSET W0, EQ
	0x03D3DD2C MOV X1, X31
	0x03D3DD30 BL 0x3C06E58
	0x03D3DD34 LDR X1, [X27]
	0x03D3DD38 MOV X0, X21
	0x03D3DD3C BL 0x2407134
	0x03D3DD40 LDR X1, [X27]
	0x03D3DD44 MOV W20, W0
	0x03D3DD48 ADD X0, X31, 0x58
	0x03D3DD4C BL 0x2407134
	0x03D3DD50 CMP W20, W0
	0x03D3DD54 CSET W0, EQ
	0x03D3DD58 MOV X1, X31
	0x03D3DD5C BL 0x3C06E58
	0x03D3DD60 ADRP X8, 0x427000
	0x03D3DD64 LDP X1, X2, [X31 + 0x68]
	0x03D3DD68 LDR X8, [X8 + 0xFB0]
	0x03D3DD6C MOV X0, X22
	0x03D3DD70 LDR X3, [X8]
	0x03D3DD74 BL 0x2408918
	0x03D3DD78 ADRP X8, 0x428000
	0x03D3DD7C LDP X1, X2, [X31 + 0x58]
	0x03D3DD80 LDR X8, [X8 + 0x238]
	0x03D3DD84 MOV X0, X21
	0x03D3DD88 LDR X3, [X8]
	0x03D3DD8C BL 0x2406F3C
	0x03D3DD90 LDR X20, [X19 + 0x18]
	0x03D3DD94 ADD X0, X31, 0x8
	0x03D3DD98 MOVZ W2, 0x50
	0x03D3DD9C MOV X1, X22
	0x03D3DDA0 BL 0x3EB1AC0
	0x03D3DDA4 CBZ X20, 0x3D3DEA8
	0x03D3DDA8 ADRP X8, 0x428000
	0x03D3DDAC LDR X8, [X8 + 0x1E8]
	0x03D3DDB0 ADD X0, X31, 0x78
	0x03D3DDB4 ADD X1, X31, 0x8
	0x03D3DDB8 MOVZ W2, 0x50
	0x03D3DDBC LDR X23, [X8]
	0x03D3DDC0 BL 0x3EB1AC0
	0x03D3DDC4 LDR W9, [X20 + 0x1C]
	0x03D3DDC8 LDR X8, [X20 + 0x10]
	0x03D3DDCC ADD W9, W9, 0x1
	0x03D3DDD0 STR W9, [X20 + 0x1C]
	0x03D3DDD4 CBZ X8, 0x3D3DEA8
	0x03D3DDD8 LDRSW X9, [X20 + 0x18]
	0x03D3DDDC LDR W10, [X8 + 0x18]
	0x03D3DDE0 CMP W9, W10
	0x03D3DDE4 B.CS 0x3D3DE0C
	0x03D3DDE8 MOVZ W11, 0x50
	0x03D3DDEC MADD X8, X9, X11, X8
	0x03D3DDF0 ADD W10, W9, 0x1
	0x03D3DDF4 ADD X0, X8, 0x20
	0x03D3DDF8 ADD X1, X31, 0x78
	0x03D3DDFC MOVZ W2, 0x50
	0x03D3DE00 STR W10, [X20 + 0x18]
	0x03D3DE04 BL 0x3EB1AC0
	0x03D3DE08 B 0x3D3DE38
	0x03D3DE0C LDR X8, [X23 + 0x20]
	0x03D3DE10 ADD X0, X31, 0xC8
	0x03D3DE14 ADD X1, X31, 0x78
	0x03D3DE18 MOVZ W2, 0x50
	0x03D3DE1C LDR X8, [X8 + 0xC0]
	0x03D3DE20 LDR X23, [X8 + 0x70]
	0x03D3DE24 BL 0x3EB1AC0
	0x03D3DE28 ADD X1, X31, 0xC8
	0x03D3DE2C MOV X0, X20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x6AB000
	011 Move X23, 0x429000
	012 Move X21, 0x429000
	013 Move X22, 0x428000
	014 Move W8, [X24+2932]
	015 Move X23, [X23+496]
	016 Move X21, [X21+504]
	017 Move X22, [X22+1888]
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {62}
	024 Move X0, 0x429000
	025 Move X0, [X0+512]
	026 Call 0x1C17CF4
	027 Move X0, 0x429000
	028 Move X0, [X0+440]
	029 Call 0x1C17CF4
	030 Move X0, 0x429000
	031 Move X0, [X0+520]
	032 Call 0x1C17CF4
	033 Move X0, 0x429000
	034 Move X0, [X0+504]
	035 Call 0x1C17CF4
	036 Move X0, 0x429000
	037 Move X0, [X0+528]
	038 Call 0x1C17CF4
	039 Move X0, 0x429000
	040 Move X0, [X0+496]
	041 Call 0x1C17CF4
	042 Move X0, 0x429000
	043 Move X0, [X0+536]
	044 Call 0x1C17CF4
	045 Move X0, 0x429000
	046 Move X0, [X0+464]
	047 Call 0x1C17CF4
	048 Move X0, 0x425000
	049 Move X0, [X0+2920]
	050 Call 0x1C17CF4
	051 Move X0, 0x429000
	052 Move X0, [X0+544]
	053 Call 0x1C17CF4
	054 Move X0, 0x429000
	055 Move X0, [X0+552]
	056 Call 0x1C17CF4
	057 Move X0, 0x428000
	058 Move X0, [X0+1888]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X24+2932], W8
	062 Move X0, [X23]
	063 Move X24, 0x425000
	064 Move X23, 0x429000
	065 Move X24, [X24+2920]
	066 Move X23, [X23+536]
	067 Call 0x1C17F10
	068 Move X1, [X21]
	069 Move X21, X0
	070 Call List`1<Entry>..ctor, X0
	071 Move [X19+24], X21
	072 Move X0, [X22]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X0, [X22]
	078 Move X8, [X0+184]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move X8, [X8+272]
	083 Move [X19+200], W9
	084 Move [X19+240], X31
	085 Move [X19+192], X8
	086 Move X0, [X24]
	087 Call 0x1C17F10
	088 Move X1, X31
	089 Move X21, X0
	090 Call TextInfo..ctor, X0
	091 Move X0, X19
	092 Move X1, X31
	093 Move [X19+288], X21
	094 Call Object..ctor, X0
	095 Move [X19+16], X20
	096 Move X0, [X23]
	097 Call 0x1C17F10
	098 Move X1, X19
	099 Move X2, X31
	100 Move X21, X0
	101 Call MeshGenerationContext..ctor, X0, X1
	102 Move [X19+264], X21
	103 Compare X20, 0
	104 JumpIfEqual {183}
	105 Move X8, [X20+280]
	106 Move X22, 0x429000
	107 Move X21, 0x429000
	108 Move X24, 0x429000
	109 Move [X19+32], X8
	110 Move X8, [X20+288]
	111 Move X22, [X22+512]
	112 Move X21, [X21+544]
	113 Move X24, [X24+552]
	114 Move [X19+40], X8
	115 Move X0, [X22]
	116 Move X25, 0x429000
	117 Move X26, 0x429000
	118 Move X23, 0x429000
	119 Move X25, [X25+528]
	120 Move X26, [X26+520]
	121 Move X23, [X23+464]
	122 Call 0x1C17F10
	123 Move X2, [X21]
	124 Move X1, X19
	125 Move X3, X31
	126 Move X21, X0
	127 Call Allocator..ctor, X0, X1, X2
	128 Move [X19+248], X21
	129 Move X0, [X22]
	130 Call 0x1C17F10
	131 Move X2, [X24]
	132 Move X1, X19
	133 Move X3, X31
	134 Move X21, X0
	135 Call Allocator..ctor, X0, X1, X2
	136 Move [X19+256], X21
	137 Move X0, [X25]
	138 Call 0x1C17F10
	139 Move X2, [X26]
	140 Move W1, 32
	141 Move X21, X0
	142 Call List`1<Object>..ctor, X0, X1
	143 Move [X19+224], X21
	144 Move X0, [X23]
	145 Call 0x1C17F10
	146 Move X1, X31
	147 Move X22, X0
	148 Call MeshWriteData..ctor, X0
	149 Compare X21, 0
	150 JumpIfEqual {183}
	151 Move X24, 0x429000
	152 Move X24, [X24+440]
	153 Move W25, 32
	154 Move W10, [X21+28]
	155 Move X8, [X21+16]
	156 Move X9, [X24]
	157 Add W10, W10, 1
	158 Move [X21+28], W10
	159 Compare X8, 0
	160 JumpIfEqual {183}
	161 NotImplemented "Instruction LDRSW not yet implemented."
	162 Move W11, [X8+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Add W9, W10, 1
	165 Add X8, X8, X10
	166 Move [X21+24], W9
	167 Move [X8+32], X22
	168 Move X8, [X9+32]
	169 Move X0, X21
	170 Move X1, X22
	171 Move X8, [X8+192]
	172 Move X2, [X8+112]
	173 Call List`1<Object>.AddWithResize, X0, X1
	174 Subtract W25, W25, 1
	175 Move X0, [X23]
	176 Move X21, [X19+224]
	177 Call 0x1C17F10
	178 Move X1, X31
	179 Move X22, X0
	180 Call MeshWriteData..ctor, X0
	181 Compare X21, 0
	182 JumpIfNotEqual {154}
	183 Call 0x1C17F20
	184 Move X8, [X20+296]
	185 Move X22, [X31+48]
	186 Move X21, [X31+56]
	187 Move X24, [X31+32]
	188 Move X23, [X31+40]
	189 Move X26, [X31+16]
	190 Move X25, [X31+24]
	191 Move [X19+208], X8
	192 Move X8, [X20+304]
	193 Move [X19+216], X8
	194 Move X20, [X31+64]
	195 Move X19, [X31+72]
	196 Move X30, [X31+80]
	197 Return 

Method: UnityEngine.UIElements.MeshGenerationContext get_meshGenerationContext()

Disassembly:
	0x03D3DE30 MOV X2, X23
	0x03D3DE34 BL 0x315B370

ISIL:
	001 Move X0, [X0+264]
	002 Return X0

Method: UnityEngine.UIElements.VisualElement get_currentElement()

Disassembly:
	0x03D3DE38 LDR X1, [X26]
	0x03D3DE3C LDR W20, [X19 + 0x118]

ISIL:
	001 Move X0, [X0+272]
	002 Return X0

Method: System.Void set_currentElement(UnityEngine.UIElements.VisualElement value)

Disassembly:
	0x03D3DE40 MOV X0, X22
	0x03D3DE44 BL 0x2408B10

ISIL:
	001 Move [X0+272], X1
	002 Return 

Method: System.Collections.Generic.List`1<UnityEngine.UIElements.UIR.Implementation.UIRStylePainter/Entry> get_entries()

Disassembly:
	0x03D3DE48 ADD W8, W0, W20
	0x03D3DE4C STR W8, [X19 + 0x118]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: UnityEngine.UIElements.UIR.Implementation.UIRStylePainter/ClosingInfo get_closingInfo()

Disassembly:
	0x03D3DE50 LDR X1, [X27]
	0x03D3DE54 LDR W20, [X19 + 0x11C]
	0x03D3DE58 MOV X0, X21
	0x03D3DE5C BL 0x2407134
	0x03D3DE60 ADD W8, W0, W20
	0x03D3DE64 MOVI V0.2D, 0x0
	0x03D3DE68 STR W8, [X19 + 0x11C]

ISIL:
	001 Move X9, [X0+176]
	002 Move V1, [X0+144]
	003 Move V0, [X0+160]
	004 Move V2, [X0+8]
	005 Move [X8+48], X9
	006 Move [X8+16], V1
	007 Move [X8+24], V0
	008 Move [X8], V2
	009 Return X0

Method: System.Int32 get_totalVertices()

Disassembly:
	0x03D3DE6C STP V0, V0, [X22]
	0x03D3DE70 STP V0, V0, [X22 + 0x20]

ISIL:
	001 Move W0, [X0+280]
	002 Return X0

Method: System.Void set_totalVertices(System.Int32 value)

Disassembly:
	0x03D3DE74 STR V0, [X22 + 0x4]
	0x03D3DE78 LDR X8, [X25 + 0x28]

ISIL:
	001 Move [X0+280], W1
	002 Return 

Method: System.Int32 get_totalIndices()

Disassembly:
	0x03D3DE7C LDR X9, [X31 + 0x128]
	0x03D3DE80 CMP X8, X9

ISIL:
	001 Move W0, [X0+284]
	002 Return X0

Method: System.Void set_totalIndices(System.Int32 value)

Disassembly:
	0x03D3DE84 B.NE 0x3D3DEAC
	0x03D3DE88 LDP X20, X19, [X31 + 0x180]

ISIL:
	001 Move [X0+284], W1
	002 Return 

Method: System.Void Begin(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D3DE8C LDP X22, X21, [X31 + 0x170]
	0x03D3DE90 LDP X24, X23, [X31 + 0x160]
	0x03D3DE94 LDP X26, X25, [X31 + 0x150]
	0x03D3DE98 LDP X30, X27, [X31 + 0x140]
	0x03D3DE9C LDR X29, [X31 + 0x130]
	0x03D3DEA0 ADD X31, X31, 0x190
	0x03D3DEA4 RET
	0x03D3DEA8 BL 0x1C16F20
	0x03D3DEAC BL 0x3EB1B20
	0x03D3DEB0 SUB X31, X31, 0x50
	0x03D3DEB4 STR X30, [X31 + 0x20]
	0x03D3DEB8 STP X22, X21, [X31 + 0x30]
	0x03D3DEBC STP X20, X19, [X31 + 0x40]
	0x03D3DEC0 ADRP X21, 0x6AA000
	0x03D3DEC4 LDRB W8, [X21 + 0xB7C]
	0x03D3DEC8 MOV X20, X1
	0x03D3DECC MOV X19, X0
	0x03D3DED0 TBNZ X8, 0x0, 0x3D3DF48
	0x03D3DED4 ADRP X0, 0x427000
	0x03D3DED8 LDR X0, [X0 + 0xFB0]
	0x03D3DEDC BL 0x1C16CF4
	0x03D3DEE0 ADRP X0, 0x428000
	0x03D3DEE4 LDR X0, [X0 + 0x238]
	0x03D3DEE8 BL 0x1C16CF4
	0x03D3DEEC ADRP X0, 0x428000
	0x03D3DEF0 LDR X0, [X0 + 0x148]
	0x03D3DEF4 BL 0x1C16CF4
	0x03D3DEF8 ADRP X0, 0x427000
	0x03D3DEFC LDR X0, [X0 + 0xFB8]
	0x03D3DF00 BL 0x1C16CF4
	0x03D3DF04 ADRP X0, 0x428000
	0x03D3DF08 LDR X0, [X0 + 0x1D8]
	0x03D3DF0C BL 0x1C16CF4
	0x03D3DF10 ADRP X0, 0x428000
	0x03D3DF14 LDR X0, [X0 + 0x1E0]
	0x03D3DF18 BL 0x1C16CF4
	0x03D3DF1C ADRP X0, 0x428000
	0x03D3DF20 LDR X0, [X0 + 0x240]
	0x03D3DF24 BL 0x1C16CF4
	0x03D3DF28 ADRP X0, 0x428000
	0x03D3DF2C LDR X0, [X0 + 0x248]
	0x03D3DF30 BL 0x1C16CF4
	0x03D3DF34 ADRP X0, 0x427000
	0x03D3DF38 LDR X0, [X0 + 0x6F8]
	0x03D3DF3C BL 0x1C16CF4
	0x03D3DF40 MOVZ W8, 0x1
	0x03D3DF44 STRB W8, [X21 + 0xB7C]
	0x03D3DF48 LDR W8, [X20 + 0x10]
	0x03D3DF4C CBZ W8, 0x3D3E078
	0x03D3DF50 LDR W8, [X20 + 0x14]
	0x03D3DF54 CBZ W8, 0x3D3E078
	0x03D3DF58 LDR X0, [X20]
	0x03D3DF5C MOV X1, X31
	0x03D3DF60 BL 0x33C6948
	0x03D3DF64 ADRP X8, 0x427000
	0x03D3DF68 LDR X8, [X8 + 0x6F8]
	0x03D3DF6C LDR W21, [X20 + 0x10]
	0x03D3DF70 MOV X22, X0
	0x03D3DF74 LDR X8, [X8]
	0x03D3DF78 LDR W9, [X8 + 0xE0]
	0x03D3DF7C CBNZ W9, 0x3D3DF88
	0x03D3DF80 MOV X0, X8
	0x03D3DF84 BL 0x1C16DFC
	0x03D3DF88 ADRP X8, 0x428000
	0x03D3DF8C LDR X8, [X8 + 0x248]
	0x03D3DF90 MOV X0, X22
	0x03D3DF94 MOV W1, W21
	0x03D3DF98 LDR X2, [X8]
	0x03D3DF9C BL 0x22A1728
	0x03D3DFA0 STP X0, X1, [X31 + 0x10]
	0x03D3DFA4 LDR X0, [X20 + 0x8]
	0x03D3DFA8 MOV X1, X31
	0x03D3DFAC BL 0x33C6948
	0x03D3DFB0 ADRP X8, 0x428000
	0x03D3DFB4 LDR W1, [X20 + 0x14]
	0x03D3DFB8 LDR X8, [X8 + 0x240]
	0x03D3DFBC LDR X2, [X8]
	0x03D3DFC0 BL 0x22A16E4
	0x03D3DFC4 ADRP X8, 0x428000
	0x03D3DFC8 LDR X8, [X8 + 0x148]
	0x03D3DFCC STP X0, X1, [X31]
	0x03D3DFD0 ADD X0, X31, 0x10
	0x03D3DFD4 LDR X8, [X8]
	0x03D3DFD8 MOV X1, X8
	0x03D3DFDC BL 0x2408B10
	0x03D3DFE0 CBZ W0, 0x3D3E078
	0x03D3DFE4 ADRP X8, 0x427000
	0x03D3DFE8 LDR X8, [X8 + 0xFB8]
	0x03D3DFEC ADD X0, X31, 0x0
	0x03D3DFF0 LDR X1, [X8]
	0x03D3DFF4 BL 0x2407134
	0x03D3DFF8 CBZ W0, 0x3D3E078
	0x03D3DFFC LDR X0, [X19 + 0xD0]
	0x03D3E000 CBZ X0, 0x3D3E08C
	0x03D3E004 ADRP X8, 0x427000
	0x03D3E008 LDR W1, [X20 + 0x10]
	0x03D3E00C B 0x3EB176C
	0x03D3E010 LDR X2, [X8]
	0x03D3E014 BL 0x26AEF1C
	0x03D3E018 MOV X8, X0
	0x03D3E01C LDR X0, [X19 + 0xD8]
	0x03D3E020 STP X8, X1, [X19 + 0x30]
	0x03D3E024 CBZ X0, 0x3D3E08C
	0x03D3E028 ADRP X8, 0x427000
	0x03D3E02C LDR W1, [X20 + 0x14]
	0x03D3E030 LDR X8, [X8 + 0x1E0]
	0x03D3E034 ADD X20, X19, 0x30
	0x03D3E038 LDR X2, [X8]
	0x03D3E03C BL 0x26AE878
	0x03D3E040 STR X0, [X19 + 0x40]!
	0x03D3E044 ADRP X8, 0x426000
	0x03D3E048 LDR X8, [X8 + 0xFB0]
	0x03D3E04C STR X1, [X19 + 0x8]
	0x03D3E050 LDP X1, X2, [X31 + 0x10]
	0x03D3E054 MOV X0, X20
	0x03D3E058 LDR X3, [X8]
	0x03D3E05C BL 0x2408918
	0x03D3E060 ADRP X8, 0x427000
	0x03D3E064 LDP X1, X2, [X31]
	0x03D3E068 LDR X8, [X8 + 0x238]
	0x03D3E06C MOV X0, X19
	0x03D3E070 LDR X3, [X8]
	0x03D3E074 BL 0x2406F3C
	0x03D3E078 LDP X20, X19, [X31 + 0x40]
	0x03D3E07C LDP X22, X21, [X31 + 0x30]
	0x03D3E080 LDR X30, [X31 + 0x20]
	0x03D3E084 ADD X31, X31, 0x50
	0x03D3E088 RET
	0x03D3E08C BL 0x1C16F20
	0x03D3E090 STR X30, [X31 - 0x30]!
	0x03D3E094 STP X22, X21, [X31 + 0x10]
	0x03D3E098 STP X20, X19, [X31 + 0x20]
	0x03D3E09C MOV X20, X1
	0x03D3E0A0 MOV X19, X0
	0x03D3E0A4 MOV X0, X1
	0x03D3E0A8 MOV X1, X31
	0x03D3E0AC BL 0x3E0F1E4
	0x03D3E0B0 TBZ X0, 0x0, 0x3D3E114
	0x03D3E0B4 CBZ X20, 0x3D3E124
	0x03D3E0B8 LDR X0, [X20 + 0x3D8]
	0x03D3E0BC CBZ X0, 0x3D3E124
	0x03D3E0C0 MOV X1, X31
	0x03D3E0C4 BL 0x3E0CCB0
	0x03D3E0C8 CBZ X0, 0x3D3E124
	0x03D3E0CC LDR W9, [X20 + 0xB8]
	0x03D3E0D0 LDRB W8, [X0 + 0x61]
	0x03D3E0D4 MOV X21, X0
	0x03D3E0D8 MOV X0, X20
	0x03D3E0DC AND W9, W9, 0xFFFFFFFE
	0x03D3E0E0 CMP W8, 0x0
	0x03D3E0E4 ORR W8, W9, W8, 0x0
	0x03D3E0E8 MOV X1, X31
	0x03D3E0EC CSET W22, EQ
	0x03D3E0F0 STR W8, [X20 + 0xB8]
	0x03D3E0F4 BL 0x3DED364
	0x03D3E0F8 MOV X0, X19
	0x03D3E0FC MOV X1, X21
	0x03D3E100 MOV W2, W22
	0x03D3E104 LDP X20, X19, [X31 + 0x20]
	0x03D3E108 LDP X22, X21, [X31 + 0x10]
	0x03D3E10C LDR X30, [X31], #0x30
	0x03D3E110 B 0x3D3E128
	0x03D3E114 LDP X20, X19, [X31 + 0x20]
	0x03D3E118 LDP X22, X21, [X31 + 0x10]
	0x03D3E11C LDR X30, [X31], #0x30
	0x03D3E120 RET
	0x03D3E124 BL 0x1C16F20
	0x03D3E128 STP D9, D8, [X31 - 0x70]!
	0x03D3E12C STP X29, X30, [X31 + 0x10]
	0x03D3E130 STP X28, X27, [X31 + 0x20]
	0x03D3E134 STP X26, X25, [X31 + 0x30]
	0x03D3E138 STP X24, X23, [X31 + 0x40]
	0x03D3E13C STP X22, X21, [X31 + 0x50]
	0x03D3E140 STP X20, X19, [X31 + 0x60]
	0x03D3E144 SUB X31, X31, 0x200
	0x03D3E148 ADRP X19, 0x6A9000
	0x03D3E14C LDRB W8, [X19 + 0xB7D]
	0x03D3E150 MOV V8.16B, V1.16B
	0x03D3E154 MOV V9.16B, V0.16B
	0x03D3E158 MOV X20, X1
	0x03D3E15C MOV X21, X0
	0x03D3E160 STR W2, [X31 + 0xC]
	0x03D3E164 TBNZ X8, 0x0, 0x3D3E1DC
	0x03D3E168 ADRP X0, 0x427000
	0x03D3E16C LDR X0, [X0 + 0x1E8]
	0x03D3E170 BL 0x1C16CF4
	0x03D3E174 ADRP X0, 0x426000
	0x03D3E178 LDR X0, [X0 + 0x600]
	0x03D3E17C BL 0x1C16CF4
	0x03D3E180 ADRP X0, 0x427000
	0x03D3E184 LDR X0, [X0 + 0x148]
	0x03D3E188 BL 0x1C16CF4
	0x03D3E18C ADRP X0, 0x426000
	0x03D3E190 LDR X0, [X0 + 0xFB8]
	0x03D3E194 BL 0x1C16CF4
	0x03D3E198 ADRP X0, 0x426000
	0x03D3E19C LDR X0, [X0 + 0x778]
	0x03D3E1A0 BL 0x1C16CF4
	0x03D3E1A4 ADRP X0, 0x423000
	0x03D3E1A8 LDR X0, [X0 + 0xB48]
	0x03D3E1AC BL 0x1C16CF4
	0x03D3E1B0 ADRP X0, 0x423000
	0x03D3E1B4 LDR X0, [X0 + 0x268]
	0x03D3E1B8 BL 0x1C16CF4
	0x03D3E1BC ADRP X0, 0x3DF000
	0x03D3E1C0 LDR X0, [X0 + 0x250]
	0x03D3E1C4 BL 0x1C16CF4
	0x03D3E1C8 ADRP X0, 0x424000
	0x03D3E1CC LDR X0, [X0 + 0x6B0]
	0x03D3E1D0 BL 0x1C16CF4
	0x03D3E1D4 MOVZ W8, 0x1
	0x03D3E1D8 STRB W8, [X19 + 0xB7D]
	0x03D3E1DC CBZ X20, 0x3D3E708
	0x03D3E1E0 LDR W8, [X20 + 0x2C]
	0x03D3E1E4 CMP W8, 0x1
	0x03D3E1E8 B.LT 0x3D3E6E4
	0x03D3E1EC ADRP X22, 0x424000
	0x03D3E1F0 LDR X22, [X22 + 0x6B0]
	0x03D3E1F4 ADD X8, X31, 0xE0
	0x03D3E1F8 ADD X9, X31, 0x60
	0x03D3E1FC MOV X27, X31
	0x03D3E200 MOV X28, X31
	0x03D3E204 ADD X23, X21, 0x30
	0x03D3E208 ADD X24, X21, 0x40
	0x03D3E20C ADD X19, X8, 0x8
	0x03D3E210 ADD X29, X9, 0x8
	0x03D3E214 LDR X8, [X20 + 0x58]
	0x03D3E218 CBZ X8, 0x3D3E708
	0x03D3E21C LDR W9, [X8 + 0x18]
	0x03D3E220 CMP X28, X9
	0x03D3E224 B.CS 0x3D3E70C
	0x03D3E228 ADD X8, X8, X27
	0x03D3E22C LDR W8, [X8 + 0x20]
	0x03D3E230 CBZ W8, 0x3D3E6D0
	0x03D3E234 LDR V0, [X21 + 0xB8]
	0x03D3E238 LDR X8, [X21 + 0xC0]
	0x03D3E23C UNIMPLEMENTED
	0x03D3E240 STR X8, [X21 + 0x68]
	0x03D3E244 STR D0, [X21 + 0x78]
	0x03D3E248 LDR X8, [X20 + 0x58]
	0x03D3E24C CBZ X8, 0x3D3E708
	0x03D3E250 LDR W9, [X8 + 0x18]
	0x03D3E254 CMP X28, X9
	0x03D3E258 B.CS 0x3D3E70C
	0x03D3E25C ADD X8, X8, X27
	0x03D3E260 LDR X0, [X8 + 0x60]
	0x03D3E264 CBZ X0, 0x3D3E708
	0x03D3E268 MOV X1, X31
	0x03D3E26C BL 0x3C14A08
	0x03D3E270 CBZ X0, 0x3D3E708
	0x03D3E274 ADRP X8, 0x3DF000
	0x03D3E278 LDR X8, [X8 + 0x250]
	0x03D3E27C LDR X1, [X8]
	0x03D3E280 LDR X8, [X0]
	0x03D3E284 CMP X8, X1
	0x03D3E288 B.NE 0x3D3E710
	0x03D3E28C MOV X1, X31
	0x03D3E290 BL 0x3C1B334
	0x03D3E294 LDR X8, [X20 + 0x58]
	0x03D3E298 CBZ X8, 0x3D3E708
	0x03D3E29C LDR W9, [X8 + 0x18]
	0x03D3E2A0 CMP X28, X9
	0x03D3E2A4 B.CS 0x3D3E70C
	0x03D3E2A8 ADD X8, X8, X27
	0x03D3E2AC MOV W25, W0
	0x03D3E2B0 LDR X0, [X8 + 0x60]
	0x03D3E2B4 CBZ X0, 0x3D3E708
	0x03D3E2B8 MOV X1, X31
	0x03D3E2BC BL 0x3C14A08
	0x03D3E2C0 CMP W25, 0x1
	0x03D3E2C4 MOV X25, X0
	0x03D3E2C8 B.NE 0x3D3E4C0
	0x03D3E2CC LDR X8, [X20 + 0x58]
	0x03D3E2D0 CBZ X8, 0x3D3E708
	0x03D3E2D4 LDR W9, [X8 + 0x18]
	0x03D3E2D8 CMP X28, X9
	0x03D3E2DC B.CS 0x3D3E70C
	0x03D3E2E0 ADRP X9, 0x423000
	0x03D3E2E4 LDR X9, [X9 + 0xB48]
	0x03D3E2E8 ADD X8, X8, X27
	0x03D3E2EC LDR W26, [X8 + 0x68]
	0x03D3E2F0 LDR X0, [X9]
	0x03D3E2F4 LDR W9, [X0 + 0xE0]
	0x03D3E2F8 CBNZ W9, 0x3D3E300
	0x03D3E2FC BL 0x1C16DFC
	0x03D3E300 MOV W0, W26
	0x03D3E304 MOV X1, X31
	0x03D3E308 BL 0x3CC9284
	0x03D3E30C FMOV S0, W31
	0x03D3E310 TBNZ X0, 0x0, 0x3D3E36C
	0x03D3E314 LDR X8, [X20 + 0x58]
	0x03D3E318 CBZ X8, 0x3D3E708
	0x03D3E31C LDR W9, [X8 + 0x18]
	0x03D3E320 CMP X28, X9
	0x03D3E324 B.CS 0x3D3E70C
	0x03D3E328 ADRP X9, 0x423000
	0x03D3E32C LDR X9, [X9 + 0x268]
	0x03D3E330 ADD X8, X8, X27
	0x03D3E334 LDR X26, [X8 + 0x60]
	0x03D3E338 LDR X0, [X9]
	0x03D3E33C LDR W9, [X0 + 0xE0]
	0x03D3E340 CBNZ W9, 0x3D3E348
	0x03D3E344 BL 0x1C16DFC
	0x03D3E348 CBZ X26, 0x3D3E708
	0x03D3E34C ADRP X8, 0x423000
	0x03D3E350 LDR X8, [X8 + 0x268]
	0x03D3E354 MOV X0, X26
	0x03D3E358 MOV X2, X31
	0x03D3E35C LDR X8, [X8]
	0x03D3E360 LDR X8, [X8 + 0xB8]
	0x03D3E364 LDR W1, [X8 + 0x6C]
	0x03D3E368 BL 0x3C15F98
	0x03D3E36C MOVZ W8, 0x1
	0x03D3E370 STRB W8, [X21 + 0x75]
	0x03D3E374 STR S0, [X21 + 0x58]
	0x03D3E378 LDR X0, [X22]
	0x03D3E37C LDR W8, [X0 + 0xE0]
	0x03D3E380 CBNZ W8, 0x3D3E388
	0x03D3E384 BL 0x1C16DFC
	0x03D3E388 ADRP X8, 0x6A9000
	0x03D3E38C LDRB W8, [X8 + 0x7E5]
	0x03D3E390 CBNZ W8, 0x3D3E3A8
	0x03D3E394 MOV X0, X22
	0x03D3E398 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+256], X29
	003 Move [X31+272], X30
	004 Move [X31+280], X23
	005 Move [X31+288], X22
	006 Move [X31+296], X21
	007 Move [X31+304], X20
	008 Move [X31+312], X19
	009 Move X21, 0x6AB000
	010 Move W8, [X21+2933]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x3B7000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x429000
	021 Move X0, [X0+488]
	022 Call 0x1C17CF4
	023 Move X0, 0x3B7000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x428000
	027 Move X0, [X0+1888]
	028 Call 0x1C17CF4
	029 Move X0, 0x429000
	030 Move X0, [X0+560]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+2933], W8
	034 Move TEMP, 0
	035 Not TEMP
	036 Move W8, TEMP
	037 Move [X19+272], X20
	038 Move [X19+232], W31
	039 Move [X19+200], W8
	040 Compare X20, 0
	041 JumpIfEqual {382}
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Move [X20+336], D0
	044 Move [X19+184], D0
	045 Move X8, [X20+888]
	046 Add X0, X31, 88
	047 Move X1, X31
	048 Move [X31+88], X8
	049 Call Hierarchy.get_parent, X0
	050 Move X21, X0
	051 Compare X0, 0
	052 JumpIfEqual {56}
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	055 Move [X19+184], D0
	056 Move X0, [X19+272]
	057 Compare X0, 0
	058 JumpIfEqual {382}
	059 Move X23, 0x429000
	060 Move X23, [X23+488]
	061 Move X1, X31
	062 Add X22, X31, 128
	063 Call VisualElement.get_renderHints, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {71}
	068 Compare X21, 0
	069 JumpIfEqual {146}
	070 Add X8, X21, 352
	071 Move X0, [X19+16]
	072 Compare X0, 0
	073 JumpIfEqual {382}
	074 Move X1, X31
	075 Call RenderChain.AllocCommand, X0
	076 Compare X0, 0
	077 JumpIfEqual {382}
	078 Move X8, [X19+272]
	079 Move W9, 3
	080 Move [X0+52], W9
	081 NotImplemented "Instruction MOVI not yet implemented."
	082 Move [X0+24], X8
	083 Move X8, [X19+24]
	084 Move [X31+32], V0
	085 Move [X31+40], V0
	086 Move [X31+4], V0
	087 Move [X31+16], X31
	088 Move [X31+24], X31
	089 Move [X31+8], X31
	090 Compare X8, 0
	091 JumpIfEqual {382}
	092 Move V0, [X31+32]
	093 Move V1, [X31+48]
	094 Move V2, [X31+4]
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 Move X9, [X31+24]
	097 Move [X31+8], V0
	098 Move [X22+16], V1
	099 Move [X22+24], V2
	100 Move [X31+6], V3
	101 Move [X31+112], X9
	102 Move W10, [X8+28]
	103 Move X9, [X8+16]
	104 Move X11, [X23]
	105 Add W10, W10, 1
	106 Move [X8+28], W10
	107 Compare X9, 0
	108 JumpIfEqual {382}
	109 NotImplemented "Instruction LDRSW not yet implemented."
	110 Move W12, [X9+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add W11, W10, 1
	113 Move [X8+24], W11
	114 Move V0, [X22+16]
	115 Move V1, [X22+32]
	116 Move V2, [X31+8]
	117 Move W12, 80
	118 NotImplemented "Instruction MADD not yet implemented."
	119 Move [X8+80], X0
	120 Move [X8+48], V0
	121 Move [X8+56], V1
	122 Move [X8+2], V2
	123 Move X9, [X31+112]
	124 Move V0, [X31+6]
	125 Move [X8+104], X9
	126 Move [X8+88], V0
	127 Move X9, [X11+32]
	128 Move V0, [X31+8]
	129 Move V1, [X22+16]
	130 Move V2, [X22+32]
	131 Move V3, [X31+6]
	132 Move X9, [X9+192]
	133 Move X10, [X31+112]
	134 Add X1, X31, 176
	135 Move X2, [X9+112]
	136 Move [X22+48], V0
	137 Move [X22+56], V1
	138 Move [X22+5], V2
	139 Move [X31+224], X0
	140 Move X0, X8
	141 Move [X22+104], V3
	142 Move [X31+248], X10
	143 Call List`1<Entry>.AddWithResize, X0, X1
	144 Move W8, 257
	145 NotImplemented "Instruction STRH not yet implemented."
	146 Move X21, 0x427000
	147 Move X21, [X21+1888]
	148 Move X0, [X21]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {154}
	152 Call 0x1C17DFC
	153 Move X0, [X21]
	154 Move X8, [X0+184]
	155 Add X8, X8, 272
	156 Move X8, [X8]
	157 Move X0, X20
	158 Move X1, X31
	159 Move [X19+192], X8
	160 Call VisualElement.get_subRenderTargetMode, X0
	161 Compare W0, 0
	162 JumpIfEqual {255}
	163 Move X0, [X19+16]
	164 Compare X0, 0
	165 JumpIfEqual {382}
	166 Move X1, X31
	167 Call RenderChain.AllocCommand, X0
	168 Compare X0, 0
	169 JumpIfEqual {382}
	170 Move X8, [X19+272]
	171 Move W9, 7
	172 Move [X0+52], W9
	173 NotImplemented "Instruction MOVI not yet implemented."
	174 Move [X0+24], X8
	175 Move X8, [X19+24]
	176 Move [X31+32], V0
	177 Move [X31+40], V0
	178 Move [X31+4], V0
	179 Move [X31+16], X31
	180 Move [X31+24], X31
	181 Move [X31+8], X31
	182 Compare X8, 0
	183 JumpIfEqual {382}
	184 Move V0, [X31+32]
	185 Move V1, [X31+48]
	186 Move V2, [X31+4]
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 Move X9, [X31+24]
	189 Move [X31+8], V0
	190 Move [X22+16], V1
	191 Move [X22+24], V2
	192 Move [X31+6], V3
	193 Move [X31+112], X9
	194 Move W10, [X8+28]
	195 Move X9, [X8+16]
	196 Move X11, [X23]
	197 Add W10, W10, 1
	198 Move [X8+28], W10
	199 Compare X9, 0
	200 JumpIfEqual {382}
	201 NotImplemented "Instruction LDRSW not yet implemented."
	202 Move W12, [X9+24]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Add W11, W10, 1
	205 Move [X8+24], W11
	206 Move V0, [X22+16]
	207 Move V1, [X22+32]
	208 Move V2, [X31+8]
	209 Move W12, 80
	210 NotImplemented "Instruction MADD not yet implemented."
	211 Move [X8+80], X0
	212 Move [X8+48], V0
	213 Move [X8+56], V1
	214 Move [X8+2], V2
	215 Move X9, [X31+112]
	216 Move V0, [X31+6]
	217 Move [X8+104], X9
	218 Move [X8+88], V0
	219 Move X9, [X11+32]
	220 Move V0, [X31+8]
	221 Move V1, [X22+16]
	222 Move V2, [X22+32]
	223 Move V3, [X31+6]
	224 Move X9, [X9+192]
	225 Move X10, [X31+112]
	226 Add X1, X31, 176
	227 Move X2, [X9+112]
	228 Move [X22+48], V0
	229 Move [X22+56], V1
	230 Move [X22+5], V2
	231 Move [X31+224], X0
	232 Move X0, X8
	233 Move [X22+104], V3
	234 Move [X31+248], X10
	235 Call List`1<Entry>.AddWithResize, X0, X1
	236 Move W8, [X19+184]
	237 Move W9, 1
	238 Move [X19+131], W9
	239 Move [X19+128], W9
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move W8, [X19+188]
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X8, 0x3B6000
	244 Move X8, [X8+2600]
	245 Move X21, 0x428000
	246 Move X0, [X8]
	247 Move W8, [X0+224]
	248 Move X21, [X21+560]
	249 Compare W8, 0
	250 JumpIfNotEqual {252}
	251 Call 0x1C17DFC
	252 Move X0, [X21]
	253 Move X1, X31
	254 Call Debug.LogError, X0
	255 Move X21, 0x3B6000
	256 Move X21, [X21+1432]
	257 Move X0, X20
	258 Move X1, X31
	259 Call VisualElement.get_defaultMaterial, X0
	260 Move X8, [X21]
	261 Move X21, X0
	262 Move W9, [X8+224]
	263 Compare W9, 0
	264 JumpIfNotEqual {267}
	265 Move X0, X8
	266 Call 0x1C17DFC
	267 Move X0, X21
	268 Move X1, X31
	269 Move X2, X31
	270 Call Object.op_Inequality, X0, X1
	271 Move TEMP, X0
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfNotEqual {355}
	275 Move X0, [X19+16]
	276 Compare X0, 0
	277 JumpIfEqual {382}
	278 Move X1, X31
	279 Call RenderChain.AllocCommand, X0
	280 Compare X0, 0
	281 JumpIfEqual {382}
	282 Move X8, [X19+272]
	283 Move W9, 10
	284 Move X21, X0
	285 Move [X0+52], W9
	286 Move [X0+24], X8
	287 Move X0, X20
	288 Move X1, X31
	289 Call VisualElement.get_defaultMaterial, X0
	290 Move [X21+56], X0
	291 Move X0, [X19+24]
	292 NotImplemented "Instruction MOVI not yet implemented."
	293 Move [X31+32], V0
	294 Move [X31+40], V0
	295 Move [X31+4], V0
	296 Move [X31+16], X31
	297 Move [X31+24], X31
	298 Move [X31+8], X31
	299 Compare X0, 0
	300 JumpIfEqual {382}
	301 Move V0, [X31+32]
	302 Move V1, [X31+48]
	303 Move V2, [X31+4]
	304 NotImplemented "Instruction LDUR not yet implemented."
	305 Move X8, [X31+24]
	306 Move [X31+8], V0
	307 Move [X22+16], V1
	308 Move [X22+24], V2
	309 Move [X31+6], V3
	310 Move [X31+112], X8
	311 Move W9, [X0+28]
	312 Move X8, [X0+16]
	313 Move X10, [X23]
	314 Add W9, W9, 1
	315 Move [X0+28], W9
	316 Compare X8, 0
	317 JumpIfEqual {382}
	318 NotImplemented "Instruction LDRSW not yet implemented."
	319 Move W11, [X8+24]
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Add W10, W9, 1
	322 Move [X0+24], W10
	323 Move V0, [X22+16]
	324 Move V1, [X22+32]
	325 Move V2, [X31+8]
	326 Move W11, 80
	327 NotImplemented "Instruction MADD not yet implemented."
	328 Move [X8+80], X21
	329 Move [X8+48], V0
	330 Move [X8+56], V1
	331 Move [X8+2], V2
	332 Move X9, [X31+112]
	333 Move V0, [X31+6]
	334 Move [X8+104], X9
	335 Move [X8+88], V0
	336 Move X8, [X10+32]
	337 Move V0, [X31+8]
	338 Move V1, [X22+16]
	339 Move V2, [X22+32]
	340 Move V3, [X31+6]
	341 Move X8, [X8+192]
	342 Move X9, [X31+112]
	343 Add X1, X31, 176
	344 Move X2, [X8+112]
	345 Move [X22+48], V0
	346 Move [X22+56], V1
	347 Move [X22+5], V2
	348 Move [X31+224], X21
	349 Move [X22+104], V3
	350 Move [X31+248], X9
	351 Call List`1<Entry>.AddWithResize, X0, X1
	352 Move W8, 1
	353 Move [X19+132], W8
	354 Move [X19+128], W8
	355 Move X0, [X19+264]
	356 Compare X0, 0
	357 JumpIfEqual {382}
	358 Move X1, X31
	359 Call MeshGenerationContext.get_hasPainter2D, X0
	360 Move TEMP, X0
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfNotEqual {373}
	364 Move X0, [X19+264]
	365 Compare X0, 0
	366 JumpIfEqual {382}
	367 Move X1, X31
	368 Call MeshGenerationContext.get_painter2D, X0
	369 Compare X0, 0
	370 JumpIfEqual {382}
	371 Move X1, X31
	372 Call Painter2D.Reset, X0
	373 Move X20, [X31+304]
	374 Move X19, [X31+312]
	375 Move X22, [X31+288]
	376 Move X21, [X31+296]
	377 Move X30, [X31+272]
	378 Move X23, [X31+280]
	379 Move X29, [X31+256]
	380 Add X31, X31, 320
	381 Return 
	382 Call 0x1C17F20

Method: System.Void LandClipUnregisterMeshDrawCommand(UnityEngine.UIElements.UIR.RenderChainCommand cmd)

Disassembly:
	0x03D3E39C MOVZ W8, 0x1
	0x03D3E3A0 ADRP X9, 0x6A9000
	0x03D3E3A4 STRB W8, [X9 + 0x7E5]
	0x03D3E3A8 LDR X0, [X22]
	0x03D3E3AC LDR W8, [X0 + 0xE0]
	0x03D3E3B0 CBNZ W8, 0x3D3E3BC
	0x03D3E3B4 BL 0x1C16DFC
	0x03D3E3B8 LDR X0, [X22]
	0x03D3E3BC LDR X8, [X0 + 0xB8]
	0x03D3E3C0 LDR X0, [X8]
	0x03D3E3C4 CBZ X0, 0x3D3E708
	0x03D3E3C8 MOV X1, X25
	0x03D3E3CC MOV X2, X31
	0x03D3E3D0 BL 0x3DE06F4
	0x03D3E3D4 LDR X8, [X21 + 0x10]
	0x03D3E3D8 STR W0, [X21 + 0x5C]
	0x03D3E3DC CBZ X8, 0x3D3E708
	0x03D3E3E0 LDR X1, [X21 + 0x110]
	0x03D3E3E4 AND X3, X0, 0x0
	0x03D3E3E8 MOV X0, X8
	0x03D3E3EC MOV X2, X25
	0x03D3E3F0 MOV W4, W31
	0x03D3E3F4 MOV X5, X31
	0x03D3E3F8 BL 0x3D274BC
	0x03D3E3FC LDR W8, [X31 + 0xC]
	0x03D3E400 MOV W25, W31
	0x03D3E404 TBZ X8, 0x0, 0x3D3E430
	0x03D3E408 ADRP X8, 0x426000
	0x03D3E40C LDR X8, [X8 + 0x778]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6AA000
	007 Move X21, 0x3B6000
	008 Move W8, [X22+2934]
	009 Move X21, [X21+2600]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3B6000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2934], W8
	021 Move X0, [X21]
	022 Move W21, [X20+128]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move X1, X31
	030 Call Debug.Assert, X0
	031 Move [X20+136], X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return 

Method: System.Void LandClipRegisterMesh(Unity.Collections.NativeSlice`1<UnityEngine.UIElements.Vertex> vertices, Unity.Collections.NativeSlice`1<System.UInt16> indices, System.Int32 indexOffset)

Disassembly:
	0x03D3E410 LDR X25, [X21 + 0x110]
	0x03D3E414 LDR X0, [X8]
	0x03D3E418 LDR W8, [X0 + 0xE0]
	0x03D3E41C CBNZ W8, 0x3D3E424
	0x03D3E420 BL 0x1C16DFC
	0x03D3E424 MOV X0, X25
	0x03D3E428 BL 0x3D3A88C
	0x03D3E42C AND W25, W0, 0x1
	0x03D3E430 LDR X8, [X20 + 0x58]
	0x03D3E434 CBZ X8, 0x3D3E708
	0x03D3E438 LDR W9, [X8 + 0x18]
	0x03D3E43C CMP X28, X9
	0x03D3E440 B.CS 0x3D3E70C
	0x03D3E444 ADD X8, X8, X27
	0x03D3E448 ADD X1, X8, 0x20
	0x03D3E44C ADD X0, X31, 0x1B0
	0x03D3E450 MOVZ W2, 0x50
	0x03D3E454 BL 0x3EB1AC0
	0x03D3E458 ADRP X8, 0x426000
	0x03D3E45C LDR X26, [X21 + 0xF8]
	0x03D3E460 LDR X8, [X8 + 0x600]
	0x03D3E464 MOVI V0.2D, 0x0
	0x03D3E468 STR X31, [X31 + 0x180]
	0x03D3E46C STP V0, V0, [X31 + 0x160]
	0x03D3E470 LDR X0, [X8]
	0x03D3E474 LDR W8, [X0 + 0xE0]
	0x03D3E478 CBNZ W8, 0x3D3E480
	0x03D3E47C BL 0x1C16DFC
	0x03D3E480 ADD X0, X31, 0x90
	0x03D3E484 ADD X1, X31, 0x1B0
	0x03D3E488 MOVZ W2, 0x50
	0x03D3E48C BL 0x3EB1AC0
	0x03D3E490 LDP V1, V0, [X31 + 0x160]
	0x03D3E494 LDR X8, [X31 + 0x180]
	0x03D3E498 STR X26, [X31 + 0x60]
	0x03D3E49C ADD X0, X31, 0x90
	0x03D3E4A0 STP V1, V0, [X29]
	0x03D3E4A4 ADD X1, X31, 0x60
	0x03D3E4A8 MOVZ W2, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x6AA000
	011 Move X25, 0x3B6000
	012 Move W8, [X26+2935]
	013 Move X25, [X25+2600]
	014 Move W19, W5
	015 Move X20, X4
	016 Move X21, X3
	017 Move X23, X2
	018 Move X24, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x3B6000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X26+2935], W8
	029 Move X0, [X25]
	030 Move W25, [X22+128]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move X1, X31
	038 Call Debug.Assert, X0
	039 Move [X22+144], X24
	040 Move [X22+152], X23
	041 Move [X22+160], X21
	042 Move [X22+168], X20
	043 Move [X22+176], W19
	044 Move X20, [X31+64]
	045 Move X19, [X31+72]
	046 Move X22, [X31+48]
	047 Move X21, [X31+56]
	048 Move X24, [X31+32]
	049 Move X23, [X31+40]
	050 Move X26, [X31+16]
	051 Move X25, [X31+24]
	052 Move X30, [X31+80]
	053 Return 

Method: UnityEngine.UIElements.MeshWriteData DrawMesh(System.Int32 vertexCount, System.Int32 indexCount, UnityEngine.Texture texture, UnityEngine.Material material, UnityEngine.UIElements.MeshGenerationContext/MeshFlags flags)

Disassembly:
	0x03D3D6B4 BL 0x1C16CF4
	0x03D3D6B8 ADRP X0, 0x428000
	0x03D3D6BC LDR X0, [X0 + 0x1E8]
	0x03D3D6C0 BL 0x1C16CF4
	0x03D3D6C4 ADRP X0, 0x427000
	0x03D3D6C8 LDR X0, [X0 + 0xFB0]
	0x03D3D6CC BL 0x1C16CF4
	0x03D3D6D0 ADRP X0, 0x428000
	0x03D3D6D4 LDR X0, [X0 + 0x238]
	0x03D3D6D8 BL 0x1C16CF4
	0x03D3D6DC ADRP X0, 0x428000
	0x03D3D6E0 LDR X0, [X0 + 0x148]
	0x03D3D6E4 BL 0x1C16CF4
	0x03D3D6E8 ADRP X0, 0x427000
	0x03D3D6EC LDR X0, [X0 + 0xFB8]
	0x03D3D6F0 BL 0x1C16CF4
	0x03D3D6F4 ADRP X0, 0x428000
	0x03D3D6F8 LDR X0, [X0 + 0x1D8]
	0x03D3D6FC BL 0x1C16CF4
	0x03D3D700 ADRP X0, 0x428000
	0x03D3D704 LDR X0, [X0 + 0x1E0]
	0x03D3D708 BL 0x1C16CF4
	0x03D3D70C ADRP X0, 0x3DE000
	0x03D3D710 LDR X0, [X0 + 0x620]
	0x03D3D714 BL 0x1C16CF4
	0x03D3D718 ADRP X0, 0x428000
	0x03D3D71C LDR X0, [X0 + 0x240]
	0x03D3D720 BL 0x1C16CF4
	0x03D3D724 ADRP X0, 0x428000
	0x03D3D728 LDR X0, [X0 + 0x248]
	0x03D3D72C BL 0x1C16CF4
	0x03D3D730 ADRP X0, 0x427000
	0x03D3D734 LDR X0, [X0 + 0x6F8]
	0x03D3D738 BL 0x1C16CF4
	0x03D3D73C MOVZ W8, 0x1
	0x03D3D740 STRB W8, [X26 + 0xB7A]
	0x03D3D744 LDR W8, [X24 + 0x10]
	0x03D3D748 CBZ W8, 0x3D3DA98
	0x03D3D74C LDR W8, [X24 + 0x14]
	0x03D3D750 CBZ W8, 0x3D3DA98
	0x03D3D754 LDR X0, [X24]
	0x03D3D758 MOV X1, X31
	0x03D3D75C BL 0x33C6948
	0x03D3D760 ADRP X8, 0x427000
	0x03D3D764 LDR X8, [X8 + 0x6F8]
	0x03D3D768 LDR W26, [X24 + 0x10]
	0x03D3D76C MOV X27, X0
	0x03D3D770 LDR X8, [X8]
	0x03D3D774 LDR W9, [X8 + 0xE0]
	0x03D3D778 CBNZ W9, 0x3D3D784
	0x03D3D77C MOV X0, X8
	0x03D3D780 BL 0x1C16DFC
	0x03D3D784 ADRP X8, 0x428000
	0x03D3D788 LDR X8, [X8 + 0x248]
	0x03D3D78C MOV X0, X27
	0x03D3D790 MOV W1, W26
	0x03D3D794 LDR X2, [X8]
	0x03D3D798 BL 0x22A1728
	0x03D3D79C STP X0, X1, [X31 + 0x88]
	0x03D3D7A0 LDR X0, [X24 + 0x8]
	0x03D3D7A4 MOV X1, X31
	0x03D3D7A8 BL 0x33C6948
	0x03D3D7AC ADRP X8, 0x428000
	0x03D3D7B0 LDR W1, [X24 + 0x14]
	0x03D3D7B4 LDR X8, [X8 + 0x240]
	0x03D3D7B8 LDR X2, [X8]
	0x03D3D7BC BL 0x22A16E4
	0x03D3D7C0 ADRP X28, 0x428000
	0x03D3D7C4 LDR X28, [X28 + 0x148]
	0x03D3D7C8 STP X0, X1, [X31 + 0x78]
	0x03D3D7CC ADD X0, X31, 0x88
	0x03D3D7D0 LDR X8, [X28]
	0x03D3D7D4 MOV X1, X8
	0x03D3D7D8 BL 0x2408B10
	0x03D3D7DC CBZ W0, 0x3D3DA98
	0x03D3D7E0 ADRP X29, 0x427000
	0x03D3D7E4 LDR X29, [X29 + 0xFB8]
	0x03D3D7E8 ADD X0, X31, 0x78
	0x03D3D7EC LDR X1, [X29]
	0x03D3D7F0 BL 0x2407134
	0x03D3D7F4 CBZ W0, 0x3D3DA98
	0x03D3D7F8 STP X31, X31, [X31 + 0x68]
	0x03D3D7FC STRH W31, [X31 + 0x64]
	0x03D3D800 STRB W31, [X31 + 0x66]
	0x03D3D804 LDR X1, [X28]
	0x03D3D808 LDR X24, [X19 + 0xD0]
	0x03D3D80C ADD X0, X31, 0x88
	0x03D3D810 BL 0x2408B10
	0x03D3D814 CBZ X24, 0x3D3DAB8
	0x03D3D818 ADRP X8, 0x428000
	0x03D3D81C LDR X8, [X8 + 0x1D8]
	0x03D3D820 MOV W1, W0
	0x03D3D824 MOV X0, X24
	0x03D3D828 LDR X2, [X8]
	0x03D3D82C BL 0x26AEF1C
	0x03D3D830 LDR X8, [X29]
	0x03D3D834 LDR X24, [X19 + 0xD8]
	0x03D3D838 MOV X26, X0
	0x03D3D83C MOV X27, X1
	0x03D3D840 ADD X0, X31, 0x78
	0x03D3D844 MOV X1, X8
	0x03D3D848 BL 0x2407134
	0x03D3D84C CBZ X24, 0x3D3DAB8
	0x03D3D850 ADRP X8, 0x428000
	0x03D3D854 LDR X8, [X8 + 0x1E0]
	0x03D3D858 MOV W1, W0
	0x03D3D85C MOV X0, X24
	0x03D3D860 LDR X2, [X8]
	0x03D3D864 BL 0x26AE878
	0x03D3D868 MOV X24, X19
	0x03D3D86C STR X0, [X24 + 0x40]!
	0x03D3D870 AND W8, W23, 0x1
	0x03D3D874 MOV X23, X24
	0x03D3D878 LDR X9, [X24 + 0x80]
	0x03D3D87C LDR V0, [X24 + 0x78]
	0x03D3D880 STR X26, [X23 - 0x10]!
	0x03D3D884 STUR X27, [X24 - 0x8]
	0x03D3D888 STP X1, X25, [X24 + 0x8]
	0x03D3D88C LDUR V1, [X31 + 0x68]
	0x03D3D890 STR W31, [X24 + 0x30]
	0x03D3D894 STRB W8, [X24 + 0x34]
	0x03D3D898 STR X9, [X24 + 0x28]
	0x03D3D89C STUR V1, [X24 + 0x18]
	0x03D3D8A0 LDRH W8, [X31 + 0x64]
	0x03D3D8A4 LDRB W9, [X31 + 0x66]
	0x03D3D8A8 UNIMPLEMENTED
	0x03D3D8AC STR D0, [X24 + 0x38]
	0x03D3D8B0 STURH W8, [X24 + 0x35]
	0x03D3D8B4 STRB W9, [X24 + 0x37]
	0x03D3D8B8 ADRP X8, 0x3DE000
	0x03D3D8BC LDR X8, [X8 + 0x620]
	0x03D3D8C0 LDR X0, [X8]
	0x03D3D8C4 LDR W8, [X0 + 0xE0]
	0x03D3D8C8 CBNZ W8, 0x3D3D8D0
	0x03D3D8CC BL 0x1C16DFC
	0x03D3D8D0 ADD X0, X31, 0x98
	0x03D3D8D4 MOV X1, X31
	0x03D3D8D8 BL 0x3DDFE1C
	0x03D3D8DC TBNZ X0, 0x1F, 0x3D3D908
	0x03D3D8E0 STR W22, [X19 + 0x70]
	0x03D3D8E4 LDR W3, [X31 + 0x98]
	0x03D3D8E8 LDR X0, [X19 + 0x10]
	0x03D3D8EC STR W3, [X19 + 0x5C]
	0x03D3D8F0 CBZ X0, 0x3D3DAB8
	0x03D3D8F4 LDR X1, [X19 + 0x110]
	0x03D3D8F8 AND W4, W21, 0x1
	0x03D3D8FC MOV X2, X20
	0x03D3D900 MOV X5, X31
	0x03D3D904 BL 0x3D274BC
	0x03D3D908 LDR X1, [X28]
	0x03D3D90C MOV X0, X23
	0x03D3D910 BL 0x2408B10
	0x03D3D914 LDR X1, [X28]
	0x03D3D918 MOV W20, W0
	0x03D3D91C ADD X0, X31, 0x88
	0x03D3D920 BL 0x2408B10
	0x03D3D924 ADRP X8, 0x3B6000
	0x03D3D928 LDR X8, [X8 + 0xA28]
	0x03D3D92C MOV W21, W0
	0x03D3D930 LDR X8, [X8]
	0x03D3D934 LDR W9, [X8 + 0xE0]
	0x03D3D938 CBNZ W9, 0x3D3D944
	0x03D3D93C MOV X0, X8
	0x03D3D940 BL 0x1C16DFC
	0x03D3D944 CMP W20, W21
	0x03D3D948 CSET W0, EQ
	0x03D3D94C MOV X1, X31
	0x03D3D950 BL 0x3C06E58
	0x03D3D954 LDR X1, [X29]
	0x03D3D958 MOV X0, X24
	0x03D3D95C BL 0x2407134
	0x03D3D960 LDR X1, [X29]
	0x03D3D964 MOV W20, W0
	0x03D3D968 ADD X0, X31, 0x78
	0x03D3D96C BL 0x2407134
	0x03D3D970 CMP W20, W0
	0x03D3D974 CSET W0, EQ
	0x03D3D978 MOV X1, X31
	0x03D3D97C BL 0x3C06E58
	0x03D3D980 ADRP X8, 0x427000
	0x03D3D984 LDP X1, X2, [X31 + 0x88]
	0x03D3D988 LDR X8, [X8 + 0xFB0]
	0x03D3D98C MOV X0, X23
	0x03D3D990 LDR X3, [X8]
	0x03D3D994 BL 0x2408918
	0x03D3D998 ADRP X8, 0x428000
	0x03D3D99C LDP X1, X2, [X31 + 0x78]
	0x03D3D9A0 LDR X8, [X8 + 0x238]
	0x03D3D9A4 MOV X0, X24
	0x03D3D9A8 LDR X3, [X8]
	0x03D3D9AC BL 0x2406F3C
	0x03D3D9B0 LDR X20, [X19 + 0x18]
	0x03D3D9B4 ADD X0, X31, 0x10
	0x03D3D9B8 MOVZ W2, 0x50
	0x03D3D9BC MOV X1, X23
	0x03D3D9C0 BL 0x3EB1AC0
	0x03D3D9C4 CBZ X20, 0x3D3DAB8
	0x03D3D9C8 ADRP X8, 0x428000
	0x03D3D9CC LDR X8, [X8 + 0x1E8]
	0x03D3D9D0 ADD X0, X31, 0xA0
	0x03D3D9D4 ADD X1, X31, 0x10
	0x03D3D9D8 MOVZ W2, 0x50
	0x03D3D9DC LDR X21, [X8]
	0x03D3D9E0 BL 0x3EB1AC0
	0x03D3D9E4 LDR W9, [X20 + 0x1C]
	0x03D3D9E8 LDR X8, [X20 + 0x10]
	0x03D3D9EC ADD W9, W9, 0x1
	0x03D3D9F0 STR W9, [X20 + 0x1C]
	0x03D3D9F4 CBZ X8, 0x3D3DAB8
	0x03D3D9F8 LDRSW X9, [X20 + 0x18]
	0x03D3D9FC LDR W10, [X8 + 0x18]
	0x03D3DA00 CMP W9, W10
	0x03D3DA04 B.CS 0x3D3DA2C
	0x03D3DA08 MOVZ W11, 0x50
	0x03D3DA0C MADD X8, X9, X11, X8
	0x03D3DA10 ADD W10, W9, 0x1
	0x03D3DA14 ADD X0, X8, 0x20
	0x03D3DA18 ADD X1, X31, 0xA0
	0x03D3DA1C MOVZ W2, 0x50
	0x03D3DA20 STR W10, [X20 + 0x18]
	0x03D3DA24 BL 0x3EB1AC0
	0x03D3DA28 B 0x3D3DA58
	0x03D3DA2C LDR X8, [X21 + 0x20]
	0x03D3DA30 ADD X0, X31, 0xF0
	0x03D3DA34 ADD X1, X31, 0xA0
	0x03D3DA38 MOVZ W2, 0x50
	0x03D3DA3C LDR X8, [X8 + 0xC0]
	0x03D3DA40 LDR X21, [X8 + 0x70]
	0x03D3DA44 BL 0x3EB1AC0
	0x03D3DA48 ADD X1, X31, 0xF0
	0x03D3DA4C MOV X0, X20
	0x03D3DA50 MOV X2, X21
	0x03D3DA54 BL 0x315B370
	0x03D3DA58 LDR X1, [X28]
	0x03D3DA5C LDR W20, [X19 + 0x118]
	0x03D3DA60 MOV X0, X23
	0x03D3DA64 BL 0x2408B10
	0x03D3DA68 ADD W8, W0, W20
	0x03D3DA6C STR W8, [X19 + 0x118]
	0x03D3DA70 LDR X1, [X29]
	0x03D3DA74 LDR W20, [X19 + 0x11C]
	0x03D3DA78 MOV X0, X24
	0x03D3DA7C BL 0x2407134
	0x03D3DA80 ADD W8, W0, W20
	0x03D3DA84 MOVI V0.2D, 0x0
	0x03D3DA88 STR W8, [X19 + 0x11C]
	0x03D3DA8C STP V0, V0, [X23]
	0x03D3DA90 STP V0, V0, [X23 + 0x20]
	0x03D3DA94 STR V0, [X23 + 0x4]
	0x03D3DA98 LDP X20, X19, [X31 + 0x190]
	0x03D3DA9C LDP X22, X21, [X31 + 0x180]
	0x03D3DAA0 LDP X24, X23, [X31 + 0x170]
	0x03D3DAA4 LDP X26, X25, [X31 + 0x160]
	0x03D3DAA8 LDP X28, X27, [X31 + 0x150]
	0x03D3DAAC LDP X29, X30, [X31 + 0x140]
	0x03D3DAB0 ADD X31, X31, 0x1A0
	0x03D3DAB4 RET
	0x03D3DAB8 BL 0x1C16F20
	0x03D3DABC SUB X31, X31, 0x190
	0x03D3DAC0 STR X29, [X31 + 0x130]
	0x03D3DAC4 STP X30, X27, [X31 + 0x140]
	0x03D3DAC8 STP X26, X25, [X31 + 0x150]
	0x03D3DACC STP X24, X23, [X31 + 0x160]
	0x03D3DAD0 STP X22, X21, [X31 + 0x170]
	0x03D3DAD4 STP X20, X19, [X31 + 0x180]
	0x03D3DAD8 MRS X25, 0xC000
	0x03D3DADC LDR X8, [X25 + 0x28]
	0x03D3DAE0 ADRP X22, 0x6AA000
	0x03D3DAE4 MOV X20, X2
	0x03D3DAE8 MOV X21, X1
	0x03D3DAEC STR X8, [X31 + 0x128]
	0x03D3DAF0 LDRB W8, [X22 + 0xB7B]
	0x03D3DAF4 MOV X19, X0
	0x03D3DAF8 TBNZ X8, 0x0, 0x3D3DB88
	0x03D3DAFC ADRP X0, 0x3B6000
	0x03D3DB00 LDR X0, [X0 + 0xA28]
	0x03D3DB04 BL 0x1C16CF4
	0x03D3DB08 ADRP X0, 0x428000
	0x03D3DB0C LDR X0, [X0 + 0x1E8]
	0x03D3DB10 BL 0x1C16CF4
	0x03D3DB14 ADRP X0, 0x427000
	0x03D3DB18 LDR X0, [X0 + 0xFB0]
	0x03D3DB1C BL 0x1C16CF4
	0x03D3DB20 ADRP X0, 0x428000
	0x03D3DB24 LDR X0, [X0 + 0x238]
	0x03D3DB28 BL 0x1C16CF4
	0x03D3DB2C ADRP X0, 0x428000
	0x03D3DB30 LDR X0, [X0 + 0x148]
	0x03D3DB34 BL 0x1C16CF4
	0x03D3DB38 ADRP X0, 0x427000
	0x03D3DB3C LDR X0, [X0 + 0xFB8]
	0x03D3DB40 BL 0x1C16CF4
	0x03D3DB44 ADRP X0, 0x428000
	0x03D3DB48 LDR X0, [X0 + 0x1D8]
	0x03D3DB4C BL 0x1C16CF4
	0x03D3DB50 ADRP X0, 0x428000
	0x03D3DB54 LDR X0, [X0 + 0x1E0]

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+288], D11
	003 Move [X31+296], D10
	004 Move [X31+304], D9
	005 Move [X31+312], D8
	006 Move [X31+320], X29
	007 Move [X31+328], X30
	008 Move [X31+336], X28
	009 Move [X31+344], X27
	010 Move [X31+352], X26
	011 Move [X31+360], X25
	012 Move [X31+368], X24
	013 Move [X31+376], X23
	014 Move [X31+384], X22
	015 Move [X31+392], X21
	016 Move [X31+400], X20
	017 Move [X31+408], X19
	018 Move X20, 0x6AB000
	019 Move W8, [X20+2936]
	020 Move W24, W5
	021 Move X27, X4
	022 Move X23, X3
	023 Move W25, W2
	024 Move W26, W1
	025 Move X19, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {59}
	030 Move X0, 0x3B7000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0x429000
	034 Move X0, [X0+488]
	035 Call 0x1C17CF4
	036 Move X0, 0x429000
	037 Move X0, [X0+328]
	038 Call 0x1C17CF4
	039 Move X0, 0x428000
	040 Move X0, [X0+4024]
	041 Call 0x1C17CF4
	042 Move X0, 0x3B7000
	043 Move X0, [X0+1432]
	044 Call 0x1C17CF4
	045 Move X0, 0x429000
	046 Move X0, [X0+472]
	047 Call 0x1C17CF4
	048 Move X0, 0x429000
	049 Move X0, [X0+480]
	050 Call 0x1C17CF4
	051 Move X0, 0x3E1000
	052 Move X0, [X0+592]
	053 Call 0x1C17CF4
	054 Move X0, 0x426000
	055 Move X0, [X0+1712]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+2936], W8
	059 Move X0, X19
	060 Move [X31+104], W31
	061 Move [X31+88], X31
	062 Move [X31+96], X31
	063 Call UIRStylePainter.GetPooledMeshWriteData, X0
	064 Move X20, X0
	065 Compare W26, 0
	066 JumpIfEqual {172}
	067 Compare W25, 0
	068 JumpIfEqual {172}
	069 Move [X31+112], X31
	070 Move [X31+120], X31
	071 NotImplemented "Instruction STRH not yet implemented."
	072 Move [X31+110], W31
	073 Move X0, [X19+208]
	074 Compare X0, 0
	075 JumpIfEqual {348}
	076 Move X8, 0x429000
	077 Move X8, [X8+472]
	078 Move W1, W26
	079 Move X2, [X8]
	080 Call TempAllocator`1<Vertex>.Alloc, X0, X1
	081 Move X28, X0
	082 Move X0, [X19+216]
	083 Compare X0, 0
	084 JumpIfEqual {348}
	085 Move X8, 0x429000
	086 Move X8, [X8+480]
	087 Move X29, X1
	088 Move W1, W25
	089 Move X2, [X8]
	090 Call 0x26AF878, X0, X1
	091 Move X22, X19
	092 Move [X22+64], X0
	093 Move X21, X22
	094 Move X9, [X22+128]
	095 Move V0, [X22+120]
	096 Move [X21-16], X28
	097 Move [X22-8], X29
	098 Move [X22+8], X1
	099 Move [X22+16], X27
	100 Move V1, [X31+7]
	101 And W8, W24, 1
	102 Move [X22+48], W31
	103 Move [X22+52], W8
	104 Move [X22+40], X9
	105 Move [X22+24], V1
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Move W9, [X31+110]
	108 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	109 Move [X22+56], D0
	110 NotImplemented "Instruction STURH not yet implemented."
	111 Move [X22+55], W9
	112 Move X28, 0x429000
	113 Move X28, [X28+328]
	114 Move X0, X21
	115 Move X1, [X28]
	116 Call NativeSlice`1<Vertex>.get_Length, X0
	117 Move X8, 0x3B7000
	118 Move X8, [X8+2600]
	119 Move W27, W0
	120 Move X8, [X8]
	121 Move W9, [X8+224]
	122 Compare W9, 0
	123 JumpIfNotEqual {126}
	124 Move X0, X8
	125 Call 0x1C17DFC
	126 NotImplemented "Instruction CMP not yet implemented."
	127 NotImplemented "Instruction CSET not yet implemented."
	128 Move X1, X31
	129 Call Debug.Assert, X0
	130 Move X26, 0x428000
	131 Move X26, [X26+4024]
	132 Move X0, X22
	133 Move X1, [X26]
	134 Call NativeSlice`1<UInt16>.get_Length, X0
	135 NotImplemented "Instruction CMP not yet implemented."
	136 NotImplemented "Instruction CSET not yet implemented."
	137 Move X1, X31
	138 Call Debug.Assert, X0
	139 Move X8, 0x3B7000
	140 Move X8, [X8+1432]
	141 Move X0, [X8]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X0, X23
	147 Move X1, X31
	148 Move X2, X31
	149 Call Object.op_Inequality, X0, X1
	150 Move S9, W31
	151 Move S8, 1
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {254}
	156 Move TEMP, X24
	157 And TEMP, TEMP, 2
	158 Compare TEMP, 2
	159 JumpIfEqual {212}
	160 Move X0, [X19+32]
	161 Compare X0, 0
	162 JumpIfEqual {212}
	163 Move X1, [X19+272]
	164 Compare X23, 0
	165 JumpIfEqual {181}
	166 Move X8, 0x3E1000
	167 Move X8, [X8+592]
	168 Move X9, [X23]
	169 Move X8, [X8]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 NotImplemented "Instruction CSEL not yet implemented."
	172 Compare X20, 0
	173 JumpIfEqual {348}
	174 Move X0, X20
	175 Move X1, X31
	176 Move X2, X31
	177 Move X3, X31
	178 Move X4, X31
	179 Move X5, X31
	180 Call MeshWriteData.Reset, X0, X1, X2
	181 Move X2, X31
	182 Move X8, [X0]
	183 Add X3, X31, 104
	184 Add X4, X31, 88
	185 Move X9, [X8+376]
	186 Move X5, [X8+384]
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {212}
	192 Move W8, 3
	193 Move [X19+112], W8
	194 Move X0, [X19+16]
	195 Move W8, [X31+88]
	196 Move W9, [X31+92]
	197 Move W11, [X31+100]
	198 Move W3, [X31+104]
	199 Move W10, [X31+96]
	200 Move [X19+92], W3
	201 Compare X0, 0
	202 JumpIfEqual {348}
	203 Move X1, [X19+272]
	204 Move W4, 1
	205 Move X2, X23
	206 Move X5, X31
	207 NotImplemented "Instruction SCVTF not yet implemented."
	208 NotImplemented "Instruction SCVTF not yet implemented."
	209 NotImplemented "Instruction SCVTF not yet implemented."
	210 NotImplemented "Instruction SCVTF not yet implemented."
	211 Call RenderChain.AppendTexture, X0, X1, X2, X3, X4
	212 Move X24, 0x426000
	213 Move X24, [X24+1712]
	214 Move X0, [X24]
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Move X25, 0x6AB000
	220 Move W8, [X25+2021]
	221 Compare W8, 0
	222 JumpIfNotEqual {228}
	223 Move X0, 0x426000
	224 Move X0, [X0+1712]
	225 Call 0x1C17CF4
	226 Move W8, 1
	227 Move [X25+2021], W8
	228 Move X0, [X24]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {234}
	232 Call 0x1C17DFC
	233 Move X0, [X24]
	234 Move X8, [X0+184]
	235 Move X0, [X8]
	236 Compare X0, 0
	237 JumpIfEqual {348}
	238 Move X1, X23
	239 Move X2, X31
	240 Call TextureRegistry.Acquire, X0, X1
	241 Move X8, [X19+16]
	242 Move W9, 2
	243 Move [X19+112], W9
	244 Move [X19+92], W0
	245 Compare X8, 0
	246 JumpIfEqual {348}
	247 Move X1, [X19+272]
	248 And X3, X0, 0
	249 Move X0, X8
	250 Move X2, X23
	251 Move W4, W31
	252 Move X5, X31
	253 Call RenderChain.AppendTexture, X0, X1, X2, X3, X4
	254 Move S10, 1
	255 Move S11, W31
	256 Compare X20, 0
	257 JumpIfEqual {348}
	258 Move X3, [X19+64]
	259 Move X4, [X19+72]
	260 Move X1, [X19+48]
	261 Move X2, [X19+56]
	262 Move X0, X20
	263 Move V0, V11
	264 Move V1, V9
	265 Move V2, V10
	266 Move V3, V8
	267 Move X5, X31
	268 Call MeshWriteData.Reset, X0, X1, X2, X3
	269 Move X23, [X19+24]
	270 Add X0, X31, 8
	271 Move W2, 80
	272 Move X1, X21
	273 Call 0x3EB2AC0
	274 Compare X23, 0
	275 JumpIfEqual {348}
	276 Move X8, 0x429000
	277 Move X8, [X8+488]
	278 Add X0, X31, 128
	279 Add X1, X31, 8
	280 Move W2, 80
	281 Move X24, [X8]
	282 Call 0x3EB2AC0
	283 Move W9, [X23+28]
	284 Move X8, [X23+16]
	285 Add W9, W9, 1
	286 Move [X23+28], W9
	287 Compare X8, 0
	288 JumpIfEqual {348}
	289 NotImplemented "Instruction LDRSW not yet implemented."
	290 Move W10, [X8+24]
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Move W11, 80
	293 NotImplemented "Instruction MADD not yet implemented."
	294 Add W10, W9, 1
	295 Add X0, X8, 32
	296 Add X1, X31, 128
	297 Move W2, 80
	298 Move [X23+24], W10
	299 Call 0x3EB2AC0
	300 Move X8, [X24+32]
	301 Add X0, X31, 208
	302 Add X1, X31, 128
	303 Move W2, 80
	304 Move X8, [X8+192]
	305 Move X24, [X8+112]
	306 Call 0x3EB2AC0
	307 Add X1, X31, 208
	308 Move X0, X23
	309 Move X2, X24
	310 Call List`1<Entry>.AddWithResize, X0, X1
	311 Move X1, [X28]
	312 Move W23, [X19+280]
	313 Move X0, X21
	314 Call NativeSlice`1<Vertex>.get_Length, X0
	315 Add W8, W0, W23
	316 Move [X19+280], W8
	317 Move X1, [X26]
	318 Move W23, [X19+284]
	319 Move X0, X22
	320 Call NativeSlice`1<UInt16>.get_Length, X0
	321 Add W8, W0, W23
	322 NotImplemented "Instruction MOVI not yet implemented."
	323 Move [X19+284], W8
	324 Move [X21], V0
	325 Move [X21+8], V0
	326 Move [X21+32], V0
	327 Move [X21+40], V0
	328 Move [X21+4], V0
	329 Move X0, X20
	330 Move X20, [X31+400]
	331 Move X19, [X31+408]
	332 Move X22, [X31+384]
	333 Move X21, [X31+392]
	334 Move X24, [X31+368]
	335 Move X23, [X31+376]
	336 Move X26, [X31+352]
	337 Move X25, [X31+360]
	338 Move X28, [X31+336]
	339 Move X27, [X31+344]
	340 Move X29, [X31+320]
	341 Move X30, [X31+328]
	342 Move D9, [X31+304]
	343 Move D8, [X31+312]
	344 Move D11, [X31+288]
	345 Move D10, [X31+296]
	346 Add X31, X31, 416
	347 Return X0
	348 Call 0x1C17F20

Method: System.Void TryAtlasTexture(UnityEngine.Texture texture, UnityEngine.UIElements.MeshGenerationContext/MeshFlags flags, out UnityEngine.Rect outUVRegion, out System.Boolean outIsAtlas, out UnityEngine.UIElements.TextureId outTextureId, out UnityEngine.UIElements.UIR.VertexFlags outAddFlags)

Disassembly:
	0x03D3E4AC MOV V0.16B, V9.16B
	0x03D3E4B0 MOV V1.16B, V8.16B
	0x03D3E4B4 MOV W3, W25
	0x03D3E4B8 STR X8, [X29 + 0x20]
	0x03D3E4BC B 0x3D3E5D0
	0x03D3E4C0 LDR X0, [X22]
	0x03D3E4C4 LDR W8, [X0 + 0xE0]
	0x03D3E4C8 CBNZ W8, 0x3D3E4D0
	0x03D3E4CC BL 0x1C16DFC
	0x03D3E4D0 ADRP X8, 0x6A9000
	0x03D3E4D4 LDRB W8, [X8 + 0x7E5]
	0x03D3E4D8 CBNZ W8, 0x3D3E4F0
	0x03D3E4DC MOV X0, X22
	0x03D3E4E0 BL 0x1C16CF4
	0x03D3E4E4 MOVZ W8, 0x1
	0x03D3E4E8 ADRP X9, 0x6A9000
	0x03D3E4EC STRB W8, [X9 + 0x7E5]
	0x03D3E4F0 LDR X0, [X22]
	0x03D3E4F4 LDR W8, [X0 + 0xE0]
	0x03D3E4F8 CBNZ W8, 0x3D3E504
	0x03D3E4FC BL 0x1C16DFC
	0x03D3E500 LDR X0, [X22]
	0x03D3E504 LDR X8, [X0 + 0xB8]
	0x03D3E508 LDR X0, [X8]
	0x03D3E50C CBZ X0, 0x3D3E708
	0x03D3E510 MOV X1, X25
	0x03D3E514 MOV X2, X31
	0x03D3E518 BL 0x3DE06F4
	0x03D3E51C LDR X8, [X21 + 0x10]
	0x03D3E520 STR W0, [X21 + 0x5C]
	0x03D3E524 CBZ X8, 0x3D3E708
	0x03D3E528 LDR X1, [X21 + 0x110]
	0x03D3E52C AND X3, X0, 0x0
	0x03D3E530 MOV X0, X8
	0x03D3E534 MOV X2, X25
	0x03D3E538 MOV W4, W31
	0x03D3E53C MOV X5, X31
	0x03D3E540 BL 0x3D274BC
	0x03D3E544 LDR X8, [X20 + 0x58]
	0x03D3E548 CBZ X8, 0x3D3E708
	0x03D3E54C LDR W9, [X8 + 0x18]
	0x03D3E550 CMP X28, X9
	0x03D3E554 B.CS 0x3D3E70C
	0x03D3E558 ADD X8, X8, X27
	0x03D3E55C ADD X1, X8, 0x20
	0x03D3E560 ADD X0, X31, 0x1B0
	0x03D3E564 MOVZ W2, 0x50
	0x03D3E568 BL 0x3EB1AC0
	0x03D3E56C ADRP X8, 0x426000
	0x03D3E570 LDR X25, [X21 + 0xF8]
	0x03D3E574 LDR X8, [X8 + 0x600]
	0x03D3E578 MOVI V0.2D, 0x0
	0x03D3E57C STR X31, [X31 + 0x180]
	0x03D3E580 STP V0, V0, [X31 + 0x160]
	0x03D3E584 LDR X0, [X8]
	0x03D3E588 LDR W8, [X0 + 0xE0]
	0x03D3E58C CBNZ W8, 0x3D3E594
	0x03D3E590 BL 0x1C16DFC
	0x03D3E594 ADD X0, X31, 0x110
	0x03D3E598 ADD X1, X31, 0x1B0
	0x03D3E59C MOVZ W2, 0x50
	0x03D3E5A0 BL 0x3EB1AC0
	0x03D3E5A4 LDR X8, [X31 + 0x180]
	0x03D3E5A8 LDP V1, V0, [X31 + 0x160]
	0x03D3E5AC STR X25, [X31 + 0xE0]
	0x03D3E5B0 ADD X0, X31, 0x110
	0x03D3E5B4 STR X8, [X19 + 0x20]
	0x03D3E5B8 STP V1, V0, [X19]
	0x03D3E5BC ADD X1, X31, 0xE0
	0x03D3E5C0 MOVZ W2, 0x2
	0x03D3E5C4 MOV V0.16B, V9.16B
	0x03D3E5C8 MOV V1.16B, V8.16B
	0x03D3E5CC MOV W3, W31
	0x03D3E5D0 MOV X4, X31
	0x03D3E5D4 BL 0x3D2299C
	0x03D3E5D8 LDR X25, [X21 + 0x18]
	0x03D3E5DC ADD X0, X31, 0x10
	0x03D3E5E0 MOVZ W2, 0x50
	0x03D3E5E4 MOV X1, X23
	0x03D3E5E8 BL 0x3EB1AC0
	0x03D3E5EC CBZ X25, 0x3D3E708
	0x03D3E5F0 ADRP X8, 0x427000
	0x03D3E5F4 LDR X8, [X8 + 0x1E8]
	0x03D3E5F8 ADD X0, X31, 0x160
	0x03D3E5FC ADD X1, X31, 0x10
	0x03D3E600 MOVZ W2, 0x50
	0x03D3E604 LDR X26, [X8]
	0x03D3E608 BL 0x3EB1AC0
	0x03D3E60C LDR W9, [X25 + 0x1C]
	0x03D3E610 LDR X8, [X25 + 0x10]
	0x03D3E614 ADD W9, W9, 0x1
	0x03D3E618 STR W9, [X25 + 0x1C]
	0x03D3E61C CBZ X8, 0x3D3E708
	0x03D3E620 LDRSW X9, [X25 + 0x18]
	0x03D3E624 LDR W10, [X8 + 0x18]
	0x03D3E628 CMP W9, W10
	0x03D3E62C B.CS 0x3D3E654
	0x03D3E630 MOVZ W11, 0x50
	0x03D3E634 MADD X8, X9, X11, X8
	0x03D3E638 ADD W10, W9, 0x1
	0x03D3E63C ADD X0, X8, 0x20
	0x03D3E640 ADD X1, X31, 0x160
	0x03D3E644 MOVZ W2, 0x50
	0x03D3E648 STR W10, [X25 + 0x18]
	0x03D3E64C BL 0x3EB1AC0
	0x03D3E650 B 0x3D3E680
	0x03D3E654 LDR X8, [X26 + 0x20]
	0x03D3E658 ADD X0, X31, 0x1B0
	0x03D3E65C ADD X1, X31, 0x160
	0x03D3E660 MOVZ W2, 0x50

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X27, 0x6AA000
	013 Move X26, 0x3B6000
	014 Move W8, [X27+2937]
	015 Move X26, [X26+1432]
	016 Move X22, X6
	017 Move X19, X5
	018 Move X21, X4
	019 Move X23, X3
	020 Move W25, W2
	021 Move X20, X1
	022 Move X24, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, 0x3B6000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0x3E0000
	031 Move X0, [X0+592]
	032 Call 0x1C17CF4
	033 Move X0, 0x425000
	034 Move X0, [X0+1712]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X27+2937], W8
	038 Move X8, -52768768
	039 Move V0, [X8+188]
	040 Move [X31+24], W31
	041 Move [X31], X31
	042 Move [X31+8], X31
	043 Move [X23], V0
	044 Move [X21], W31
	045 Move [X19], W31
	046 Move [X22], W31
	047 Move X0, [X26]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Equality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {127}
	060 Move TEMP, X25
	061 And TEMP, TEMP, 2
	062 Compare TEMP, 2
	063 JumpIfEqual {95}
	064 Move X0, [X24+32]
	065 Compare X0, 0
	066 JumpIfEqual {95}
	067 Move X1, [X24+272]
	068 Compare X20, 0
	069 JumpIfEqual {76}
	070 Move X8, 0x3E0000
	071 Move X8, [X8+592]
	072 Move X9, [X20]
	073 Move X8, [X8]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CSEL not yet implemented."
	076 Move X2, X31
	077 Move X8, [X0]
	078 Add X3, X31, 24
	079 Add X4, X31, 0
	080 Move X9, [X8+376]
	081 Move X5, [X8+384]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {95}
	087 Move W8, 3
	088 Move [X22], W8
	089 Move V0, [X31]
	090 Move W8, 1
	091 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	092 Move [X23], V0
	093 Move [X21], W8
	094 Move W0, [X31+24]
	095 Move W8, 2
	096 Move [X22], W8
	097 Move X21, 0x425000
	098 Move X21, [X21+1712]
	099 Move X0, [X21]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X22, 0x6AA000
	105 Move W8, [X22+2021]
	106 Compare W8, 0
	107 JumpIfNotEqual {113}
	108 Move X0, 0x425000
	109 Move X0, [X0+1712]
	110 Call 0x1C17CF4
	111 Move W8, 1
	112 Move [X22+2021], W8
	113 Move X0, [X21]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {119}
	117 Call 0x1C17DFC
	118 Move X0, [X21]
	119 Move X8, [X0+184]
	120 Move X0, [X8]
	121 Compare X0, 0
	122 JumpIfEqual {139}
	123 Move X1, X20
	124 Move X2, X31
	125 Call TextureRegistry.Acquire, X0, X1
	126 Move [X19], W0
	127 Move X20, [X31+96]
	128 Move X19, [X31+104]
	129 Move X22, [X31+80]
	130 Move X21, [X31+88]
	131 Move X24, [X31+64]
	132 Move X23, [X31+72]
	133 Move X26, [X31+48]
	134 Move X25, [X31+56]
	135 Move X30, [X31+32]
	136 Move X27, [X31+40]
	137 Add X31, X31, 112
	138 Return 
	139 Call 0x1C17F20

Method: System.Void BuildEntryFromNativeMesh(UnityEngine.UIElements.MeshWriteDataInterface meshData, UnityEngine.Texture texture, UnityEngine.UIElements.TextureId textureId, System.Boolean isAtlas, UnityEngine.Material material, UnityEngine.UIElements.MeshGenerationContext/MeshFlags flags, UnityEngine.Rect uvRegion, UnityEngine.UIElements.UIR.VertexFlags addFlags)

Disassembly:
	0x03D3E664 LDR X8, [X8 + 0xC0]
	0x03D3E668 LDR X26, [X8 + 0x70]
	0x03D3E66C BL 0x3EB1AC0
	0x03D3E670 ADD X1, X31, 0x1B0
	0x03D3E674 MOV X0, X25
	0x03D3E678 MOV X2, X26
	0x03D3E67C BL 0x315B370
	0x03D3E680 ADRP X8, 0x427000
	0x03D3E684 LDR W25, [X21 + 0x118]
	0x03D3E688 LDR X8, [X8 + 0x148]
	0x03D3E68C MOV X0, X23
	0x03D3E690 LDR X1, [X8]
	0x03D3E694 BL 0x2408B10
	0x03D3E698 ADD W8, W0, W25
	0x03D3E69C STR W8, [X21 + 0x118]
	0x03D3E6A0 ADRP X8, 0x426000
	0x03D3E6A4 LDR W25, [X21 + 0x11C]
	0x03D3E6A8 LDR X8, [X8 + 0xFB8]
	0x03D3E6AC MOV X0, X24
	0x03D3E6B0 LDR X1, [X8]
	0x03D3E6B4 BL 0x2407134
	0x03D3E6B8 ADD W8, W0, W25
	0x03D3E6BC MOVI V0.2D, 0x0
	0x03D3E6C0 STR W8, [X21 + 0x11C]
	0x03D3E6C4 STP V0, V0, [X23]
	0x03D3E6C8 STP V0, V0, [X23 + 0x20]
	0x03D3E6CC STR V0, [X23 + 0x4]
	0x03D3E6D0 LDRSW X8, [X20 + 0x2C]
	0x03D3E6D4 ADD X28, X28, 0x1
	0x03D3E6D8 ADD X27, X27, 0x50
	0x03D3E6DC CMP X28, X8
	0x03D3E6E0 B.LT 0x3D3E214
	0x03D3E6E4 ADD X31, X31, 0x200
	0x03D3E6E8 LDP X20, X19, [X31 + 0x60]
	0x03D3E6EC LDP X22, X21, [X31 + 0x50]
	0x03D3E6F0 LDP X24, X23, [X31 + 0x40]
	0x03D3E6F4 LDP X26, X25, [X31 + 0x30]
	0x03D3E6F8 LDP X28, X27, [X31 + 0x20]
	0x03D3E6FC LDP X29, X30, [X31 + 0x10]
	0x03D3E700 LDP D9, D8, [X31], #0x70
	0x03D3E704 RET
	0x03D3E708 BL 0x1C16F20
	0x03D3E70C BL 0x1C16F28
	0x03D3E710 BL 0x1C171E0
	0x03D3E714 STP X29, X30, [X31 - 0x30]!
	0x03D3E718 STP X22, X21, [X31 + 0x10]
	0x03D3E71C STP X20, X19, [X31 + 0x20]
	0x03D3E720 SUB X31, X31, 0x580
	0x03D3E724 ADRP X21, 0x6A9000
	0x03D3E728 LDRB W8, [X21 + 0xB7E]
	0x03D3E72C MOV X20, X1
	0x03D3E730 MOV X19, X0
	0x03D3E734 TBNZ X8, 0x0, 0x3D3E74C
	0x03D3E738 ADRP X0, 0x3B5000
	0x03D3E73C LDR X0, [X0 + 0x598]
	0x03D3E740 BL 0x1C16CF4
	0x03D3E744 MOVZ W8, 0x1
	0x03D3E748 STRB W8, [X21 + 0xB7E]
	0x03D3E74C STR X31, [X31 + 0x578]
	0x03D3E750 STR X31, [X31 + 0x570]
	0x03D3E754 STRB W31, [X31 + 0x56C]
	0x03D3E758 STR W31, [X31 + 0x568]
	0x03D3E75C STR W31, [X31 + 0x564]
	0x03D3E760 ADRP X8, 0xFFFFFFFFFCDAB000
	0x03D3E764 LDR V1, [X20 + 0x8]
	0x03D3E768 LDR V0, [X8 + 0xF9C]
	0x03D3E76C FCMP S1, S0
	0x03D3E770 B.MI 0x3D3E92C
	0x03D3E774 LDR V1, [X20 + 0xC]
	0x03D3E778 FCMP S1, S0
	0x03D3E77C B.MI 0x3D3E92C
	0x03D3E780 ADRP X22, 0x3B5000
	0x03D3E784 LDR X22, [X22 + 0x598]
	0x03D3E788 LDR X21, [X20 + 0x88]
	0x03D3E78C LDR X0, [X22]
	0x03D3E790 LDR W8, [X0 + 0xE0]
	0x03D3E794 CBNZ W8, 0x3D3E79C
	0x03D3E798 BL 0x1C16DFC
	0x03D3E79C MOV X0, X21
	0x03D3E7A0 MOV X1, X31
	0x03D3E7A4 MOV X2, X31
	0x03D3E7A8 BL 0x3C354F8
	0x03D3E7AC TBZ X0, 0x0, 0x3D3E7D0
	0x03D3E7B0 ADD X0, X31, 0x390
	0x03D3E7B4 MOVZ W2, 0x120
	0x03D3E7B8 MOV X1, X20
	0x03D3E7BC BL 0x3EB1AC0
	0x03D3E7C0 ADD X1, X31, 0x390
	0x03D3E7C4 MOV X0, X19
	0x03D3E7C8 BL 0x3D3E940
	0x03D3E7CC B 0x3D3E92C
	0x03D3E7D0 LDR X0, [X22]
	0x03D3E7D4 LDR X21, [X20 + 0x80]
	0x03D3E7D8 LDR W8, [X0 + 0xE0]
	0x03D3E7DC CBNZ W8, 0x3D3E7E4
	0x03D3E7E0 BL 0x1C16DFC
	0x03D3E7E4 MOV X0, X21
	0x03D3E7E8 MOV X1, X31
	0x03D3E7EC MOV X2, X31
	0x03D3E7F0 BL 0x3C354F8
	0x03D3E7F4 TBZ X0, 0x0, 0x3D3E818
	0x03D3E7F8 ADD X0, X31, 0x270
	0x03D3E7FC MOVZ W2, 0x120
	0x03D3E800 MOV X1, X20
	0x03D3E804 BL 0x3EB1AC0
	0x03D3E808 ADD X1, X31, 0x270
	0x03D3E80C MOV X0, X19
	0x03D3E810 BL 0x3D3ED04
	0x03D3E814 B 0x3D3E92C
	0x03D3E818 LDR X1, [X20 + 0x78]
	0x03D3E81C LDR W2, [X20 + 0x118]
	0x03D3E820 ADD X3, X31, 0x570
	0x03D3E824 ADD X4, X31, 0x56C
	0x03D3E828 ADD X5, X31, 0x568
	0x03D3E82C ADD X6, X31, 0x564
	0x03D3E830 MOV X0, X19
	0x03D3E834 BL 0x3D3D4AC
	0x03D3E838 LDR V0, [X31 + 0x570]
	0x03D3E83C LDR V1, [X31 + 0x574]
	0x03D3E840 LDR V2, [X31 + 0x578]
	0x03D3E844 LDR V3, [X31 + 0x57C]
	0x03D3E848 ADD X8, X31, 0x1B0
	0x03D3E84C MOV X0, X20
	0x03D3E850 MOV X1, X31
	0x03D3E854 BL 0x3DC5BEC
	0x03D3E858 ADD X0, X31, 0x4B0
	0x03D3E85C ADD X1, X31, 0x1B0
	0x03D3E860 MOVZ W2, 0xB4
	0x03D3E864 BL 0x3EB1AC0
	0x03D3E868 LDR X2, [X20 + 0x78]
	0x03D3E86C ADD X1, X31, 0x4B0
	0x03D3E870 BL 0x3D3F064
	0x03D3E874 LDR X0, [X22]
	0x03D3E878 LDR X21, [X20 + 0x78]
	0x03D3E87C LDR W8, [X0 + 0xE0]
	0x03D3E880 CBNZ W8, 0x3D3E888
	0x03D3E884 BL 0x1C16DFC
	0x03D3E888 MOV X0, X21
	0x03D3E88C MOV X1, X31
	0x03D3E890 MOV X2, X31
	0x03D3E894 ADD X22, X31, 0x198
	0x03D3E898 BL 0x3C354F8
	0x03D3E89C TBZ X0, 0x0, 0x3D3E8C8
	0x03D3E8A0 ADD X0, X31, 0xE0
	0x03D3E8A4 ADD X1, X31, 0x4B0
	0x03D3E8A8 MOVZ W2, 0xB4
	0x03D3E8AC BL 0x3EB1AC0
	0x03D3E8B0 ADD X8, X31, 0x198
	0x03D3E8B4 ADD X0, X31, 0xE0
	0x03D3E8B8 FMOV S0, W31
	0x03D3E8BC MOV X1, X31
	0x03D3E8C0 BL 0x3DBB374
	0x03D3E8C4 B 0x3D3E8EC
	0x03D3E8C8 ADD X0, X31, 0x28
	0x03D3E8CC ADD X1, X31, 0x4B0
	0x03D3E8D0 MOVZ W2, 0xB4
	0x03D3E8D4 BL 0x3EB1AC0
	0x03D3E8D8 ADD X8, X31, 0x198
	0x03D3E8DC ADD X0, X31, 0x28
	0x03D3E8E0 FMOV S0, W31
	0x03D3E8E4 MOV X1, X31
	0x03D3E8E8 BL 0x3DBB2A8
	0x03D3E8EC LDR V0, [X22]
	0x03D3E8F0 LDR X8, [X31 + 0x1A8]
	0x03D3E8F4 LDR W3, [X31 + 0x568]
	0x03D3E8F8 LDRB W4, [X31 + 0x56C]
	0x03D3E8FC STR V0, [X31 + 0x1B]
	0x03D3E900 LDR V0, [X31 + 0x1B]
	0x03D3E904 STR X8, [X31 + 0x1C0]
	0x03D3E908 STR X8, [X31 + 0x20]
	0x03D3E90C LDR W7, [X31 + 0x564]
	0x03D3E910 STR V0, [X31 + 0x1]
	0x03D3E914 LDR X2, [X20 + 0x78]
	0x03D3E918 LDR X5, [X20 + 0x90]
	0x03D3E91C LDR W6, [X20 + 0x118]
	0x03D3E920 ADD X1, X31, 0x10
	0x03D3E924 MOV X0, X19
	0x03D3E928 BL 0x3D3D664
	0x03D3E92C ADD X31, X31, 0x580
	0x03D3E930 LDP X20, X19, [X31 + 0x20]
	0x03D3E934 LDP X22, X21, [X31 + 0x10]
	0x03D3E938 LDP X29, X30, [X31], #0x30
	0x03D3E93C RET
	0x03D3E940 STP X29, X30, [X31 - 0x60]!
	0x03D3E944 STP X28, X27, [X31 + 0x10]
	0x03D3E948 STP X26, X25, [X31 + 0x20]
	0x03D3E94C STP X24, X23, [X31 + 0x30]
	0x03D3E950 STP X22, X21, [X31 + 0x40]
	0x03D3E954 STP X20, X19, [X31 + 0x50]
	0x03D3E958 SUB X31, X31, 0x1E0
	0x03D3E95C ADRP X22, 0x6A9000
	0x03D3E960 ADRP X21, 0x3B5000
	0x03D3E964 LDRB W8, [X22 + 0xB87]
	0x03D3E968 LDR X21, [X21 + 0x598]
	0x03D3E96C MOV X20, X1
	0x03D3E970 MOV X19, X0
	0x03D3E974 TBNZ X8, 0x0, 0x3D3E9EC
	0x03D3E978 ADRP X0, 0x3B5000
	0x03D3E97C LDR X0, [X0 + 0xA28]
	0x03D3E980 BL 0x1C16CF4
	0x03D3E984 ADRP X0, 0x427000
	0x03D3E988 LDR X0, [X0 + 0x120]
	0x03D3E98C BL 0x1C16CF4
	0x03D3E990 ADRP X0, 0x427000
	0x03D3E994 LDR X0, [X0 + 0x250]
	0x03D3E998 BL 0x1C16CF4
	0x03D3E99C ADRP X0, 0x427000
	0x03D3E9A0 LDR X0, [X0 + 0x258]
	0x03D3E9A4 BL 0x1C16CF4
	0x03D3E9A8 ADRP X0, 0x427000
	0x03D3E9AC LDR X0, [X0 + 0x128]
	0x03D3E9B0 BL 0x1C16CF4
	0x03D3E9B4 ADRP X0, 0x427000
	0x03D3E9B8 LDR X0, [X0 + 0x130]
	0x03D3E9BC BL 0x1C16CF4
	0x03D3E9C0 ADRP X0, 0x3B5000
	0x03D3E9C4 LDR X0, [X0 + 0x598]
	0x03D3E9C8 BL 0x1C16CF4
	0x03D3E9CC ADRP X0, 0x3DD000
	0x03D3E9D0 LDR X0, [X0 + 0x620]
	0x03D3E9D4 BL 0x1C16CF4
	0x03D3E9D8 ADRP X0, 0x424000
	0x03D3E9DC LDR X0, [X0 + 0x6B0]
	0x03D3E9E0 BL 0x1C16CF4
	0x03D3E9E4 MOVZ W8, 0x1
	0x03D3E9E8 STRB W8, [X22 + 0xB87]
	0x03D3E9EC LDR X0, [X21]
	0x03D3E9F0 MOVI V0.2D, 0x0
	0x03D3E9F4 STR X31, [X31 + 0x188]
	0x03D3E9F8 STP V0, V0, [X31 + 0x160]
	0x03D3E9FC STR V0, [X31 + 0x15]
	0x03D3EA00 ADRP X25, 0x3B5000
	0x03D3EA04 LDR W8, [X0 + 0xE0]
	0x03D3EA08 LDR X21, [X20 + 0x88]
	0x03D3EA0C LDR X25, [X25 + 0xA28]
	0x03D3EA10 CBNZ W8, 0x3D3EA18
	0x03D3EA14 BL 0x1C16DFC
	0x03D3EA18 MOV X0, X21
	0x03D3EA1C MOV X1, X31
	0x03D3EA20 MOV X2, X31
	0x03D3EA24 BL 0x3C354F8
	0x03D3EA28 LDR X8, [X25]
	0x03D3EA2C MOV W22, W0
	0x03D3EA30 LDR W9, [X8 + 0xE0]
	0x03D3EA34 CBNZ W9, 0x3D3EA40
	0x03D3EA38 MOV X0, X8
	0x03D3EA3C BL 0x1C16DFC
	0x03D3EA40 AND W0, W22, 0x1
	0x03D3EA44 MOV X1, X31
	0x03D3EA48 BL 0x3C06E58
	0x03D3EA4C CBZ X21, 0x3D3ED00
	0x03D3EA50 LDR X0, [X21 + 0x20]
	0x03D3EA54 MOV X1, X31
	0x03D3EA58 MOV X2, X31
	0x03D3EA5C BL 0x3C354F8
	0x03D3EA60 TBZ X0, 0x0, 0x3D3EB74
	0x03D3EA64 LDR X0, [X19 + 0x28]
	0x03D3EA68 CBZ X0, 0x3D3EB74
	0x03D3EA6C LDR X2, [X19 + 0x110]
	0x03D3EA70 MOV X1, X21
	0x03D3EA74 MOV X3, X31
	0x03D3EA78 BL 0x3D2DAE4
	0x03D3EA7C CBZ X0, 0x3D3ED00
	0x03D3EA80 ADRP X24, 0x3DD000
	0x03D3EA84 LDR X24, [X24 + 0x620]
	0x03D3EA88 MOV X23, X0
	0x03D3EA8C LDR W22, [X23 + 0x1C]
	0x03D3EA90 LDR W26, [X23 + 0x38]
	0x03D3EA94 LDR X0, [X24]
	0x03D3EA98 LDR W8, [X0 + 0xE0]
	0x03D3EA9C CBNZ W8, 0x3D3EAA8
	0x03D3EAA0 BL 0x1C16DFC
	0x03D3EAA4 LDR X0, [X24]
	0x03D3EAA8 LDR X8, [X0 + 0xB8]
	0x03D3EAAC ADRP X28, 0x6A9000
	0x03D3EAB0 LDRB W9, [X28 + 0xB58]
	0x03D3EAB4 LDR W27, [X8]
	0x03D3EAB8 CBNZ W9, 0x3D3EAD0

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+320], X29
	003 Move [X31+328], X30
	004 Move [X31+336], X28
	005 Move [X31+344], X27
	006 Move [X31+352], X26
	007 Move [X31+360], X25
	008 Move [X31+368], X24
	009 Move [X31+376], X23
	010 Move [X31+384], X22
	011 Move [X31+392], X21
	012 Move [X31+400], X20
	013 Move [X31+408], X19
	014 Move X26, 0x6AA000
	015 Move W8, [X26+2938]
	016 Move W22, W7
	017 Move W23, W6
	018 Move X25, X5
	019 Move W21, W4
	020 Move X20, X2
	021 Move X24, X1
	022 Move X19, X0
	023 Move [X31+152], W3
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {66}
	028 Move X0, 0x3B6000
	029 Move X0, [X0+2600]
	030 Call 0x1C17CF4
	031 Move X0, 0x428000
	032 Move X0, [X0+488]
	033 Call 0x1C17CF4
	034 Move X0, 0x427000
	035 Move X0, [X0+4016]
	036 Call 0x1C17CF4
	037 Move X0, 0x428000
	038 Move X0, [X0+568]
	039 Call 0x1C17CF4
	040 Move X0, 0x428000
	041 Move X0, [X0+328]
	042 Call 0x1C17CF4
	043 Move X0, 0x427000
	044 Move X0, [X0+4024]
	045 Call 0x1C17CF4
	046 Move X0, 0x428000
	047 Move X0, [X0+472]
	048 Call 0x1C17CF4
	049 Move X0, 0x428000
	050 Move X0, [X0+480]
	051 Call 0x1C17CF4
	052 Move X0, 0x3DE000
	053 Move X0, [X0+1568]
	054 Call 0x1C17CF4
	055 Move X0, 0x428000
	056 Move X0, [X0+576]
	057 Call 0x1C17CF4
	058 Move X0, 0x428000
	059 Move X0, [X0+584]
	060 Call 0x1C17CF4
	061 Move X0, 0x427000
	062 Move X0, [X0+1784]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X26+2938], W8
	066 Move W8, [X24+16]
	067 Compare W8, 0
	068 JumpIfEqual {300}
	069 Move W8, [X24+20]
	070 Compare W8, 0
	071 JumpIfEqual {300}
	072 Move X0, [X24]
	073 Move X1, X31
	074 Call IntPtr.op_Explicit, X0
	075 Move X8, 0x427000
	076 Move X8, [X8+1784]
	077 Move W26, [X24+16]
	078 Move X27, X0
	079 Move X8, [X8]
	080 Move W9, [X8+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X8
	084 Call 0x1C17DFC
	085 Move X8, 0x428000
	086 Move X8, [X8+584]
	087 Move X0, X27
	088 Move W1, W26
	089 Move X2, [X8]
	090 Call UIRenderDevice.PtrToSlice, X0, X1
	091 Move [X31+136], X0
	092 Move [X31+144], X1
	093 Move X0, [X24+8]
	094 Move X1, X31
	095 Call IntPtr.op_Explicit, X0
	096 Move X8, 0x428000
	097 Move W1, [X24+20]
	098 Move X8, [X8+576]
	099 Move X2, [X8]
	100 Call UIRenderDevice.PtrToSlice, X0, X1
	101 Move X28, 0x428000
	102 Move X28, [X28+328]
	103 Move [X31+120], X0
	104 Move [X31+128], X1
	105 Add X0, X31, 136
	106 Move X8, [X28]
	107 Move X1, X8
	108 Call NativeSlice`1<Vertex>.get_Length, X0
	109 Compare W0, 0
	110 JumpIfEqual {300}
	111 Move X29, 0x427000
	112 Move X29, [X29+4024]
	113 Add X0, X31, 120
	114 Move X1, [X29]
	115 Call NativeSlice`1<UInt16>.get_Length, X0
	116 Compare W0, 0
	117 JumpIfEqual {300}
	118 Move [X31+104], X31
	119 Move [X31+112], X31
	120 NotImplemented "Instruction STRH not yet implemented."
	121 Move [X31+102], W31
	122 Move X1, [X28]
	123 Move X24, [X19+208]
	124 Add X0, X31, 136
	125 Call NativeSlice`1<Vertex>.get_Length, X0
	126 Compare X24, 0
	127 JumpIfEqual {314}
	128 Move X8, 0x428000
	129 Move X8, [X8+472]
	130 Move W1, W0
	131 Move X0, X24
	132 Move X2, [X8]
	133 Call TempAllocator`1<Vertex>.Alloc, X0, X1
	134 Move X8, [X29]
	135 Move X24, [X19+216]
	136 Move X26, X0
	137 Move X27, X1
	138 Add X0, X31, 120
	139 Move X1, X8
	140 Call NativeSlice`1<UInt16>.get_Length, X0
	141 Compare X24, 0
	142 JumpIfEqual {314}
	143 Move X8, 0x428000
	144 Move X8, [X8+480]
	145 Move W1, W0
	146 Move X0, X24
	147 Move X2, [X8]
	148 Call 0x26AF878, X0, X1
	149 Move X24, X19
	150 Move [X24+64], X0
	151 And W8, W23, 1
	152 Move X23, X24
	153 Move X9, [X24+128]
	154 Move V0, [X24+120]
	155 Move [X23-16], X26
	156 Move [X24-8], X27
	157 Move [X24+8], X1
	158 Move [X24+16], X25
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 Move [X24+48], W31
	161 Move [X24+52], W8
	162 Move [X24+40], X9
	163 Move [X24+24], V1
	164 NotImplemented "Instruction LDRH not yet implemented."
	165 Move W9, [X31+102]
	166 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	167 Move [X24+56], D0
	168 NotImplemented "Instruction STURH not yet implemented."
	169 Move [X24+55], W9
	170 Move X8, 0x3DE000
	171 Move X8, [X8+1568]
	172 Move X0, [X8]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Add X0, X31, 152
	178 Move X1, X31
	179 Call TextureId.get_index, X0
	180 Move TEMP, X0
	181 And TEMP, TEMP, -2147483648
	182 Compare TEMP, -2147483648
	183 JumpIfEqual {195}
	184 Move [X19+112], W22
	185 Move W3, [X31+152]
	186 Move X0, [X19+16]
	187 Move [X19+92], W3
	188 Compare X0, 0
	189 JumpIfEqual {314}
	190 Move X1, [X19+272]
	191 And W4, W21, 1
	192 Move X2, X20
	193 Move X5, X31
	194 Call RenderChain.AppendTexture, X0, X1, X2, X3, X4
	195 Move X1, [X28]
	196 Move X0, X23
	197 Call NativeSlice`1<Vertex>.get_Length, X0
	198 Move X1, [X28]
	199 Move W20, W0
	200 Add X0, X31, 136
	201 Call NativeSlice`1<Vertex>.get_Length, X0
	202 Move X8, 0x3B6000
	203 Move X8, [X8+2600]
	204 Move W21, W0
	205 Move X8, [X8]
	206 Move W9, [X8+224]
	207 Compare W9, 0
	208 JumpIfNotEqual {211}
	209 Move X0, X8
	210 Call 0x1C17DFC
	211 NotImplemented "Instruction CMP not yet implemented."
	212 NotImplemented "Instruction CSET not yet implemented."
	213 Move X1, X31
	214 Call Debug.Assert, X0
	215 Move X1, [X29]
	216 Move X0, X24
	217 Call NativeSlice`1<UInt16>.get_Length, X0
	218 Move X1, [X29]
	219 Move W20, W0
	220 Add X0, X31, 120
	221 Call NativeSlice`1<UInt16>.get_Length, X0
	222 NotImplemented "Instruction CMP not yet implemented."
	223 NotImplemented "Instruction CSET not yet implemented."
	224 Move X1, X31
	225 Call Debug.Assert, X0
	226 Move X8, 0x427000
	227 Move X1, [X31+136]
	228 Move X2, [X31+144]
	229 Move X8, [X8+4016]
	230 Move X0, X23
	231 Move X3, [X8]
	232 Call NativeSlice`1<Vertex>.CopyFrom, X0, X1
	233 Move X8, 0x428000
	234 Move X1, [X31+120]
	235 Move X2, [X31+128]
	236 Move X8, [X8+568]
	237 Move X0, X24
	238 Move X3, [X8]
	239 Call NativeSlice`1<UInt16>.CopyFrom, X0, X1
	240 Move X20, [X19+24]
	241 Add X0, X31, 16
	242 Move W2, 80
	243 Move X1, X23
	244 Call 0x3EB2AC0
	245 Compare X20, 0
	246 JumpIfEqual {314}
	247 Move X8, 0x428000
	248 Move X8, [X8+488]
	249 Add X0, X31, 160
	250 Add X1, X31, 16
	251 Move W2, 80
	252 Move X21, [X8]
	253 Call 0x3EB2AC0
	254 Move W9, [X20+28]
	255 Move X8, [X20+16]
	256 Add W9, W9, 1
	257 Move [X20+28], W9
	258 Compare X8, 0
	259 JumpIfEqual {314}
	260 NotImplemented "Instruction LDRSW not yet implemented."
	261 Move W10, [X8+24]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move W11, 80
	264 NotImplemented "Instruction MADD not yet implemented."
	265 Add W10, W9, 1
	266 Add X0, X8, 32
	267 Add X1, X31, 160
	268 Move W2, 80
	269 Move [X20+24], W10
	270 Call 0x3EB2AC0
	271 Move X8, [X21+32]
	272 Add X0, X31, 240
	273 Add X1, X31, 160
	274 Move W2, 80
	275 Move X8, [X8+192]
	276 Move X21, [X8+112]
	277 Call 0x3EB2AC0
	278 Add X1, X31, 240
	279 Move X0, X20
	280 Move X2, X21
	281 Call List`1<Entry>.AddWithResize, X0, X1
	282 Move X1, [X28]
	283 Move W20, [X19+280]
	284 Move X0, X23
	285 Call NativeSlice`1<Vertex>.get_Length, X0
	286 Add W8, W0, W20
	287 Move [X19+280], W8
	288 Move X1, [X29]
	289 Move W20, [X19+284]
	290 Move X0, X24
	291 Call NativeSlice`1<UInt16>.get_Length, X0
	292 Add W8, W0, W20
	293 NotImplemented "Instruction MOVI not yet implemented."
	294 Move [X19+284], W8
	295 Move [X23], V0
	296 Move [X23+8], V0
	297 Move [X23+32], V0
	298 Move [X23+40], V0
	299 Move [X23+4], V0
	300 Move X20, [X31+400]
	301 Move X19, [X31+408]
	302 Move X22, [X31+384]
	303 Move X21, [X31+392]
	304 Move X24, [X31+368]
	305 Move X23, [X31+376]
	306 Move X26, [X31+352]
	307 Move X25, [X31+360]
	308 Move X28, [X31+336]
	309 Move X27, [X31+344]
	310 Move X29, [X31+320]
	311 Move X30, [X31+328]
	312 Add X31, X31, 416
	313 Return 
	314 Call 0x1C17F20

Method: System.Void BuildGradientEntryFromNativeMesh(UnityEngine.UIElements.MeshWriteDataInterface meshData, UnityEngine.UIElements.TextureId svgTextureId)

Disassembly:
	0x03D3EABC MOV X0, X24
	0x03D3EAC0 BL 0x1C16CF4
	0x03D3EAC4 LDR X0, [X24]
	0x03D3EAC8 MOVZ W8, 0x1
	0x03D3EACC STRB W8, [X28 + 0xB58]
	0x03D3EAD0 LDR W8, [X0 + 0xE0]
	0x03D3EAD4 CBNZ W8, 0x3D3EADC
	0x03D3EAD8 BL 0x1C16DFC
	0x03D3EADC CMP W26, W27
	0x03D3EAE0 B.NE 0x3D3EB84
	0x03D3EAE4 ADRP X23, 0x424000
	0x03D3EAE8 LDR X23, [X23 + 0x6B0]
	0x03D3EAEC LDR X0, [X23]
	0x03D3EAF0 LDR W8, [X0 + 0xE0]
	0x03D3EAF4 CBNZ W8, 0x3D3EAFC
	0x03D3EAF8 BL 0x1C16DFC
	0x03D3EAFC ADRP X24, 0x6A9000
	0x03D3EB00 LDRB W8, [X24 + 0x7E5]
	0x03D3EB04 CBNZ W8, 0x3D3EB1C
	0x03D3EB08 ADRP X0, 0x424000
	0x03D3EB0C LDR X0, [X0 + 0x6B0]
	0x03D3EB10 BL 0x1C16CF4
	0x03D3EB14 MOVZ W8, 0x1
	0x03D3EB18 STRB W8, [X24 + 0x7E5]
	0x03D3EB1C LDR X0, [X23]
	0x03D3EB20 LDR W8, [X0 + 0xE0]
	0x03D3EB24 CBNZ W8, 0x3D3EB30
	0x03D3EB28 BL 0x1C16DFC
	0x03D3EB2C LDR X0, [X23]
	0x03D3EB30 LDR X8, [X0 + 0xB8]
	0x03D3EB34 LDR X0, [X8]
	0x03D3EB38 CBZ X0, 0x3D3ED00
	0x03D3EB3C LDR X1, [X21 + 0x20]
	0x03D3EB40 MOV X2, X31
	0x03D3EB44 BL 0x3DE06F4
	0x03D3EB48 LDR X8, [X19 + 0x10]
	0x03D3EB4C CBZ X8, 0x3D3ED00
	0x03D3EB50 LDR X2, [X21 + 0x20]
	0x03D3EB54 LDR X1, [X19 + 0x110]
	0x03D3EB58 MOV X23, X0
	0x03D3EB5C AND X3, X0, 0x0
	0x03D3EB60 MOV X0, X8
	0x03D3EB64 MOV W4, W31
	0x03D3EB68 MOV X5, X31
	0x03D3EB6C BL 0x3D274BC
	0x03D3EB70 B 0x3D3EB88
	0x03D3EB74 MOV W21, W31
	0x03D3EB78 MOV W23, W31
	0x03D3EB7C MOV W22, W31
	0x03D3EB80 B 0x3D3EB8C
	0x03D3EB84 LDR W23, [X23 + 0x38]
	0x03D3EB88 MOVZ W21, 0x1
	0x03D3EB8C LDR X8, [X19 + 0x18]
	0x03D3EB90 CBZ X8, 0x3D3ED00
	0x03D3EB94 LDR W24, [X8 + 0x18]
	0x03D3EB98 ADD X0, X31, 0x30
	0x03D3EB9C MOVZ W2, 0x120
	0x03D3EBA0 MOV X1, X20
	0x03D3EBA4 BL 0x3EB1AC0
	0x03D3EBA8 MOV W3, W23
	0x03D3EBAC ADD X1, X31, 0x30
	0x03D3EBB0 ADD X5, X31, 0x18C
	0x03D3EBB4 ADD X6, X31, 0x188
	0x03D3EBB8 MOV X0, X19
	0x03D3EBBC MOV W2, W21
	0x03D3EBC0 MOV W4, W22
	0x03D3EBC4 BL 0x3D43740
	0x03D3EBC8 LDR X8, [X19 + 0x18]
	0x03D3EBCC CBZ X8, 0x3D3ED00
	0x03D3EBD0 LDR X0, [X25]
	0x03D3EBD4 LDR W20, [X8 + 0x18]
	0x03D3EBD8 LDR W9, [X0 + 0xE0]
	0x03D3EBDC CBNZ W9, 0x3D3EBE4
	0x03D3EBE0 BL 0x1C16DFC
	0x03D3EBE4 ADD W8, W20, 0x1
	0x03D3EBE8 CMP W24, W8
	0x03D3EBEC CSET W0, LE
	0x03D3EBF0 MOV X1, X31
	0x03D3EBF4 BL 0x3C06E58
	0x03D3EBF8 LDR X0, [X19 + 0x18]
	0x03D3EBFC CBZ X0, 0x3D3ED00
	0x03D3EC00 LDR W8, [X0 + 0x18]
	0x03D3EC04 CMP W24, W8
	0x03D3EC08 B.EQ 0x3D3ECE0
	0x03D3EC0C SUB W1, W8, 0x1
	0x03D3EC10 STR W1, [X19 + 0xC8]
	0x03D3EC14 LDR W8, [X31 + 0x18C]
	0x03D3EC18 CBZ W8, 0x3D3ECE0
	0x03D3EC1C LDR W8, [X31 + 0x188]
	0x03D3EC20 CBZ W8, 0x3D3ECE0
	0x03D3EC24 ADRP X8, 0x427000
	0x03D3EC28 LDR X8, [X8 + 0x250]
	0x03D3EC2C LDR X2, [X8]
	0x03D3EC30 ADD X8, X31, 0x190
	0x03D3EC34 BL 0x315AFB8
	0x03D3EC38 ADRP X8, 0x427000
	0x03D3EC3C LDP X0, X1, [X31 + 0x190]
	0x03D3EC40 LDP X22, X23, [X31 + 0x1A0]
	0x03D3EC44 LDP V0, V1, [X31 + 0x1B0]
	0x03D3EC48 LDR V2, [X31 + 0x1D]
	0x03D3EC4C LDR W3, [X31 + 0x18C]
	0x03D3EC50 LDR X8, [X8 + 0x130]
	0x03D3EC54 MOV W2, W31
	0x03D3EC58 STP V0, V1, [X31 + 0x150]
	0x03D3EC5C STR V2, [X31 + 0x17]
	0x03D3EC60 LDR X4, [X8]
	0x03D3EC64 BL 0x2222B30
	0x03D3EC68 ADRP X8, 0x427000
	0x03D3EC6C LDR W3, [X31 + 0x188]
	0x03D3EC70 LDR X8, [X8 + 0x128]
	0x03D3EC74 MOV X20, X0
	0x03D3EC78 MOV X21, X1
	0x03D3EC7C MOV X0, X22
	0x03D3EC80 LDR X4, [X8]
	0x03D3EC84 MOV X1, X23
	0x03D3EC88 MOV W2, W31
	0x03D3EC8C BL 0x2222A50
	0x03D3EC90 MOV X8, X0
	0x03D3EC94 MOV X9, X1
	0x03D3EC98 LDR X0, [X19 + 0x18]
	0x03D3EC9C LDP V0, V1, [X31 + 0x150]
	0x03D3ECA0 LDR V2, [X31 + 0x17]
	0x03D3ECA4 LDR W1, [X19 + 0xC8]
	0x03D3ECA8 STP V0, V1, [X31]
	0x03D3ECAC STR V2, [X31 + 0x2]
	0x03D3ECB0 CBZ X0, 0x3D3ED00
	0x03D3ECB4 ADRP X10, 0x427000
	0x03D3ECB8 LDR X10, [X10 + 0x258]
	0x03D3ECBC LDP V0, V1, [X31]
	0x03D3ECC0 LDR V2, [X31 + 0x2]
	0x03D3ECC4 ADD X2, X31, 0x190
	0x03D3ECC8 LDR X3, [X10]
	0x03D3ECCC STP X20, X21, [X31 + 0x190]
	0x03D3ECD0 STP X8, X9, [X31 + 0x1A0]
	0x03D3ECD4 STP V0, V1, [X31 + 0x1B0]
	0x03D3ECD8 STR V2, [X31 + 0x1D]
	0x03D3ECDC BL 0x315B01C
	0x03D3ECE0 ADD X31, X31, 0x1E0
	0x03D3ECE4 LDP X20, X19, [X31 + 0x50]
	0x03D3ECE8 LDP X22, X21, [X31 + 0x40]
	0x03D3ECEC LDP X24, X23, [X31 + 0x30]
	0x03D3ECF0 LDP X26, X25, [X31 + 0x20]
	0x03D3ECF4 LDP X28, X27, [X31 + 0x10]
	0x03D3ECF8 LDP X29, X30, [X31], #0x60
	0x03D3ECFC RET
	0x03D3ED00 BL 0x1C16F20
	0x03D3ED04 SUB X31, X31, 0x130
	0x03D3ED08 STP D15, D14, [X31 + 0x90]
	0x03D3ED0C STP D13, D12, [X31 + 0xA0]
	0x03D3ED10 STP D11, D10, [X31 + 0xB0]
	0x03D3ED14 STP D9, D8, [X31 + 0xC0]
	0x03D3ED18 STP X29, X30, [X31 + 0xD0]
	0x03D3ED1C STP X28, X27, [X31 + 0xE0]
	0x03D3ED20 STP X26, X25, [X31 + 0xF0]
	0x03D3ED24 STP X24, X23, [X31 + 0x100]
	0x03D3ED28 STP X22, X21, [X31 + 0x110]
	0x03D3ED2C STP X20, X19, [X31 + 0x120]
	0x03D3ED30 ADRP X21, 0x6A9000
	0x03D3ED34 LDRB W8, [X21 + 0xB85]
	0x03D3ED38 MOV X19, X1
	0x03D3ED3C MOV X20, X0
	0x03D3ED40 TBNZ X8, 0x0, 0x3D3ED70
	0x03D3ED44 ADRP X0, 0x3B5000
	0x03D3ED48 LDR X0, [X0 + 0x598]
	0x03D3ED4C BL 0x1C16CF4
	0x03D3ED50 ADRP X0, 0x427000
	0x03D3ED54 LDR X0, [X0 + 0x260]
	0x03D3ED58 BL 0x1C16CF4
	0x03D3ED5C ADRP X0, 0x427000
	0x03D3ED60 LDR X0, [X0 + 0x268]
	0x03D3ED64 BL 0x1C16CF4
	0x03D3ED68 MOVZ W8, 0x1
	0x03D3ED6C STRB W8, [X21 + 0xB85]
	0x03D3ED70 MOVI V0.2D, 0x0
	0x03D3ED74 STP V0, V0, [X31 + 0x70]
	0x03D3ED78 STR V0, [X31 + 0x6]
	0x03D3ED7C LDR X22, [X19 + 0x80]
	0x03D3ED80 CBZ X22, 0x3D3F060
	0x03D3ED84 ADRP X21, 0x3B5000
	0x03D3ED88 LDR X21, [X21 + 0x598]
	0x03D3ED8C MOV X0, X22
	0x03D3ED90 MOV X1, X31
	0x03D3ED94 BL 0x3C41990
	0x03D3ED98 LDR X8, [X21]
	0x03D3ED9C MOV X21, X0
	0x03D3EDA0 LDR W9, [X8 + 0xE0]
	0x03D3EDA4 CBNZ W9, 0x3D3EDB0
	0x03D3EDA8 MOV X0, X8
	0x03D3EDAC BL 0x1C16DFC
	0x03D3EDB0 MOV X0, X21
	0x03D3EDB4 MOV X1, X31
	0x03D3EDB8 MOV X2, X31
	0x03D3EDBC BL 0x3C3883C
	0x03D3EDC0 TBNZ X0, 0x0, 0x3D3F02C
	0x03D3EDC4 MOV X0, X22
	0x03D3EDC8 MOV X1, X31
	0x03D3EDCC BL 0x3C41B94
	0x03D3EDD0 CBZ X0, 0x3D3F060
	0x03D3EDD4 LDR W8, [X0 + 0x18]
	0x03D3EDD8 CBZ W8, 0x3D3F02C
	0x03D3EDDC LDR X20, [X20 + 0x100]
	0x03D3EDE0 MOV X0, X22
	0x03D3EDE4 MOV X1, X31
	0x03D3EDE8 BL 0x3C41990
	0x03D3EDEC LDR W8, [X19 + 0x118]
	0x03D3EDF0 STP X20, X0, [X31 + 0x60]
	0x03D3EDF4 MOV X0, X22
	0x03D3EDF8 MOV X1, X31
	0x03D3EDFC STP X31, X31, [X31 + 0x70]
	0x03D3EE00 STR W31, [X31 + 0x8C]
	0x03D3EE04 STUR X31, [X31 + 0x84]
	0x03D3EE08 STR W8, [X31 + 0x80]
	0x03D3EE0C BL 0x3C41B58
	0x03D3EE10 MOV X20, X0
	0x03D3EE14 MOV X0, X22
	0x03D3EE18 MOV X1, X31
	0x03D3EE1C BL 0x3C41B94
	0x03D3EE20 MOV X23, X0
	0x03D3EE24 MOV X0, X22
	0x03D3EE28 MOV X1, X31
	0x03D3EE2C BL 0x3C41BD0
	0x03D3EE30 MOV X21, X0
	0x03D3EE34 MOV X0, X22
	0x03D3EE38 MOV X1, X31
	0x03D3EE3C BL 0x3C41B58
	0x03D3EE40 CBZ X0, 0x3D3F060
	0x03D3EE44 ADRP X8, 0x427000
	0x03D3EE48 LDR X25, [X0 + 0x18]
	0x03D3EE4C LDR X8, [X8 + 0x260]
	0x03D3EE50 MOV W1, W25
	0x03D3EE54 LDR X0, [X8]
	0x03D3EE58 BL 0x1C16D6C
	0x03D3EE5C MOV X1, X20
	0x03D3EE60 MOV X2, X23
	0x03D3EE64 MOV X22, X0
	0x03D3EE68 BL 0x3D43420
	0x03D3EE6C CBZ X22, 0x3D3F060
	0x03D3EE70 CBZ X0, 0x3D3F060
	0x03D3EE74 LDR W1, [X22 + 0x18]
	0x03D3EE78 LDR W2, [X0 + 0x18]
	0x03D3EE7C STR X0, [X31 + 0x10]
	0x03D3EE80 ADD X0, X31, 0x60
	0x03D3EE84 MOV X3, X31
	0x03D3EE88 STR X20, [X31 + 0x28]
	0x03D3EE8C BL 0x3D22E6C
	0x03D3EE90 CBZ X0, 0x3D3F060
	0x03D3EE94 MOV X1, X31
	0x03D3EE98 STR X0, [X31 + 0x8]
	0x03D3EE9C BL 0x3DC3880
	0x03D3EEA0 CMP W25, 0x1
	0x03D3EEA4 STP S1, S0, [X31 + 0x20]
	0x03D3EEA8 STP S3, S2, [X31 + 0x18]
	0x03D3EEAC B.LT 0x3D3F008

ISIL:
	001 Subtract X31, X31, 400
	002 Move [X31+304], X29
	003 Move [X31+320], X30
	004 Move [X31+328], X27
	005 Move [X31+336], X26
	006 Move [X31+344], X25
	007 Move [X31+352], X24
	008 Move [X31+360], X23
	009 Move [X31+368], X22
	010 Move [X31+376], X21
	011 Move [X31+384], X20
	012 Move [X31+392], X19
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X25+40]
	015 Move X22, 0x6AA000
	016 Move X20, X2
	017 Move X21, X1
	018 Move [X31+296], X8
	019 Move W8, [X22+2939]
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {60}
	025 Move X0, 0x3B6000
	026 Move X0, [X0+2600]
	027 Call 0x1C17CF4
	028 Move X0, 0x428000
	029 Move X0, [X0+488]
	030 Call 0x1C17CF4
	031 Move X0, 0x427000
	032 Move X0, [X0+4016]
	033 Call 0x1C17CF4
	034 Move X0, 0x428000
	035 Move X0, [X0+568]
	036 Call 0x1C17CF4
	037 Move X0, 0x428000
	038 Move X0, [X0+328]
	039 Call 0x1C17CF4
	040 Move X0, 0x427000
	041 Move X0, [X0+4024]
	042 Call 0x1C17CF4
	043 Move X0, 0x428000
	044 Move X0, [X0+472]
	045 Call 0x1C17CF4
	046 Move X0, 0x428000
	047 Move X0, [X0+480]
	048 Call 0x1C17CF4
	049 Move X0, 0x428000
	050 Move X0, [X0+576]
	051 Call 0x1C17CF4
	052 Move X0, 0x428000
	053 Move X0, [X0+584]
	054 Call 0x1C17CF4
	055 Move X0, 0x427000
	056 Move X0, [X0+1784]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X22+2939], W8
	060 Move W8, [X21+16]
	061 Compare W8, 0
	062 JumpIfEqual {266}
	063 Move W8, [X21+20]
	064 Compare W8, 0
	065 JumpIfEqual {266}
	066 Move X0, [X21]
	067 Move X1, X31
	068 Call IntPtr.op_Explicit, X0
	069 Move X8, 0x427000
	070 Move X8, [X8+1784]
	071 Move W22, [X21+16]
	072 Move X23, X0
	073 Move X8, [X8]
	074 Move W9, [X8+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {79}
	077 Move X0, X8
	078 Call 0x1C17DFC
	079 Move X8, 0x428000
	080 Move X8, [X8+584]
	081 Move X0, X23
	082 Move W1, W22
	083 Move X2, [X8]
	084 Call UIRenderDevice.PtrToSlice, X0, X1
	085 Move [X31+104], X0
	086 Move [X31+112], X1
	087 Move X0, [X21+8]
	088 Move X1, X31
	089 Call IntPtr.op_Explicit, X0
	090 Move X8, 0x428000
	091 Move W1, [X21+20]
	092 Move X8, [X8+576]
	093 Move X2, [X8]
	094 Call UIRenderDevice.PtrToSlice, X0, X1
	095 Move X26, 0x428000
	096 Move X26, [X26+328]
	097 Move [X31+88], X0
	098 Move [X31+96], X1
	099 Add X0, X31, 104
	100 Move X8, [X26]
	101 Move X1, X8
	102 Call NativeSlice`1<Vertex>.get_Length, X0
	103 Compare W0, 0
	104 JumpIfEqual {266}
	105 Move X27, 0x427000
	106 Move X27, [X27+4024]
	107 Add X0, X31, 88
	108 Move X1, [X27]
	109 Call NativeSlice`1<UInt16>.get_Length, X0
	110 Compare W0, 0
	111 JumpIfEqual {266}
	112 Move [X31+288], W31
	113 Move [X31+280], X31
	114 Move X1, [X26]
	115 Move X21, [X19+208]
	116 Add X0, X31, 104
	117 Call NativeSlice`1<Vertex>.get_Length, X0
	118 Compare X21, 0
	119 JumpIfEqual {282}
	120 Move X8, 0x428000
	121 Move X8, [X8+472]
	122 Move W1, W0
	123 Move X0, X21
	124 Move X2, [X8]
	125 Call TempAllocator`1<Vertex>.Alloc, X0, X1
	126 Move X8, [X27]
	127 Move X21, [X19+216]
	128 Move X23, X0
	129 Move X24, X1
	130 Add X0, X31, 88
	131 Move X1, X8
	132 Call NativeSlice`1<UInt16>.get_Length, X0
	133 Compare X21, 0
	134 JumpIfEqual {282}
	135 Move X8, 0x428000
	136 Move X8, [X8+480]
	137 Move W1, W0
	138 Move X0, X21
	139 Move X2, [X8]
	140 Call 0x26AF878, X0, X1
	141 Move X21, X19
	142 Move [X21+64], X0
	143 Move X8, -52756480
	144 Move X22, X21
	145 Move V0, [X8+976]
	146 Move X8, [X21+128]
	147 Move V1, [X21+120]
	148 Move [X22-16], X23
	149 Move [X21-8], X24
	150 Move W9, [X31+288]
	151 Move X10, [X31+280]
	152 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	153 Move [X21+32], X31
	154 Move [X21+40], X8
	155 Move [X21+24], W9
	156 Move [X21+28], W20
	157 Move [X21+8], X1
	158 Move [X21+16], X10
	159 Move [X21+48], D0
	160 Move [X21+56], D1
	161 Move X1, [X26]
	162 Move X0, X22
	163 Call NativeSlice`1<Vertex>.get_Length, X0
	164 Move X1, [X26]
	165 Move W20, W0
	166 Add X0, X31, 104
	167 Call NativeSlice`1<Vertex>.get_Length, X0
	168 Move X8, 0x3B6000
	169 Move X8, [X8+2600]
	170 Move W23, W0
	171 Move X8, [X8]
	172 Move W9, [X8+224]
	173 Compare W9, 0
	174 JumpIfNotEqual {177}
	175 Move X0, X8
	176 Call 0x1C17DFC
	177 NotImplemented "Instruction CMP not yet implemented."
	178 NotImplemented "Instruction CSET not yet implemented."
	179 Move X1, X31
	180 Call Debug.Assert, X0
	181 Move X1, [X27]
	182 Move X0, X21
	183 Call NativeSlice`1<UInt16>.get_Length, X0
	184 Move X1, [X27]
	185 Move W20, W0
	186 Add X0, X31, 88
	187 Call NativeSlice`1<UInt16>.get_Length, X0
	188 NotImplemented "Instruction CMP not yet implemented."
	189 NotImplemented "Instruction CSET not yet implemented."
	190 Move X1, X31
	191 Call Debug.Assert, X0
	192 Move X8, 0x427000
	193 Move X1, [X31+104]
	194 Move X2, [X31+112]
	195 Move X8, [X8+4016]
	196 Move X0, X22
	197 Move X3, [X8]
	198 Call NativeSlice`1<Vertex>.CopyFrom, X0, X1
	199 Move X8, 0x428000
	200 Move X1, [X31+88]
	201 Move X2, [X31+96]
	202 Move X8, [X8+568]
	203 Move X0, X21
	204 Move X3, [X8]
	205 Call NativeSlice`1<UInt16>.CopyFrom, X0, X1
	206 Move X20, [X19+24]
	207 Add X0, X31, 8
	208 Move W2, 80
	209 Move X1, X22
	210 Call 0x3EB2AC0
	211 Compare X20, 0
	212 JumpIfEqual {282}
	213 Move X8, 0x428000
	214 Move X8, [X8+488]
	215 Add X0, X31, 120
	216 Add X1, X31, 8
	217 Move W2, 80
	218 Move X23, [X8]
	219 Call 0x3EB2AC0
	220 Move W9, [X20+28]
	221 Move X8, [X20+16]
	222 Add W9, W9, 1
	223 Move [X20+28], W9
	224 Compare X8, 0
	225 JumpIfEqual {282}
	226 NotImplemented "Instruction LDRSW not yet implemented."
	227 Move W10, [X8+24]
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move W11, 80
	230 NotImplemented "Instruction MADD not yet implemented."
	231 Add W10, W9, 1
	232 Add X0, X8, 32
	233 Add X1, X31, 120
	234 Move W2, 80
	235 Move [X20+24], W10
	236 Call 0x3EB2AC0
	237 Move X8, [X23+32]
	238 Add X0, X31, 200
	239 Add X1, X31, 120
	240 Move W2, 80
	241 Move X8, [X8+192]
	242 Move X23, [X8+112]
	243 Call 0x3EB2AC0
	244 Add X1, X31, 200
	245 Move X0, X20
	246 Move X2, X23
	247 Call List`1<Entry>.AddWithResize, X0, X1
	248 Move X1, [X26]
	249 Move W20, [X19+280]
	250 Move X0, X22
	251 Call NativeSlice`1<Vertex>.get_Length, X0
	252 Add W8, W0, W20
	253 Move [X19+280], W8
	254 Move X1, [X27]
	255 Move W20, [X19+284]
	256 Move X0, X21
	257 Call NativeSlice`1<UInt16>.get_Length, X0
	258 Add W8, W0, W20
	259 NotImplemented "Instruction MOVI not yet implemented."
	260 Move [X19+284], W8
	261 Move [X22], V0
	262 Move [X22+8], V0
	263 Move [X22+32], V0
	264 Move [X22+40], V0
	265 Move [X22+4], V0
	266 Move X8, [X25+40]
	267 Move X9, [X31+296]
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move X20, [X31+384]
	270 Move X19, [X31+392]
	271 Move X22, [X31+368]
	272 Move X21, [X31+376]
	273 Move X24, [X31+352]
	274 Move X23, [X31+360]
	275 Move X26, [X31+336]
	276 Move X25, [X31+344]
	277 Move X30, [X31+320]
	278 Move X27, [X31+328]
	279 Move X29, [X31+304]
	280 Add X31, X31, 400
	281 Return 
	282 Call 0x1C17F20
	283 Call 0x3EB2B20

Method: System.Void BuildRawEntryFromNativeMesh(UnityEngine.UIElements.MeshWriteDataInterface meshData)

Disassembly:
	0x03D3EEB0 LDR X11, [X31 + 0x28]
	0x03D3EEB4 CBZ X11, 0x3D3F060
	0x03D3EEB8 LDR W9, [X19 + 0x114]
	0x03D3EEBC LDR W10, [X19 + 0x110]
	0x03D3EEC0 AND X8, X25, 0x0
	0x03D3EEC4 UBFM X29, X8, 0x3A, 0x39
	0x03D3EEC8 UBFM W8, W9, 0x18, 0x17
	0x03D3EECC MOV X26, X31
	0x03D3EED0 MOV X27, X31
	0x03D3EED4 ADD X25, X21, 0x24
	0x03D3EED8 ADD X28, X11, 0x24
	0x03D3EEDC UBFM W23, W10, 0x8, 0x0
	0x03D3EEE0 UBFM W24, W9, 0x10, 0xF
	0x03D3EEE4 AND W20, W8, 0xFF000000
	0x03D3EEE8 LDR X8, [X31 + 0x28]
	0x03D3EEEC LDR W8, [X8 + 0x18]
	0x03D3EEF0 CMP X27, X8
	0x03D3EEF4 B.CS 0x3D3F05C
	0x03D3EEF8 CBZ X21, 0x3D3F060
	0x03D3EEFC LDR W8, [X21 + 0x18]
	0x03D3EF00 CMP X27, X8
	0x03D3EF04 B.CS 0x3D3F05C
	0x03D3EF08 LDR V1, [X19 + 0xF8]
	0x03D3EF0C LDR V0, [X19 + 0xFC]
	0x03D3EF10 ADRP X8, 0x427000
	0x03D3EF14 LDP S11, S13, [X28 - 0x4]
	0x03D3EF18 LDP S15, S12, [X19 + 0xF0]
	0x03D3EF1C STP S0, S1, [X31 + 0x38]
	0x03D3EF20 LDP S9, S1, [X19 + 0x4]
	0x03D3EF24 LDR V0, [X19 + 0xC]
	0x03D3EF28 MOV X0, X31
	0x03D3EF2C STP S1, S0, [X31 + 0x40]
	0x03D3EF30 LDR X8, [X8 + 0x268]
	0x03D3EF34 LDR V0, [X19]
	0x03D3EF38 LDP S2, S3, [X19 + 0x28]
	0x03D3EF3C LDP S14, S8, [X25 - 0x4]
	0x03D3EF40 LDR X8, [X8]
	0x03D3EF44 STR S0, [X31 + 0x34]
	0x03D3EF48 LDP S0, S1, [X19 + 0x20]
	0x03D3EF4C LDR X8, [X8 + 0xB8]
	0x03D3EF50 LDR V10, [X8]
	0x03D3EF54 BL 0x1E43664
	0x03D3EF58 STP X31, X31, [X31 + 0x50]
	0x03D3EF5C STR X31, [X31 + 0x48]
	0x03D3EF60 LDR W8, [X22 + 0x18]
	0x03D3EF64 CMP X27, X8
	0x03D3EF68 B.CS 0x3D3F05C
	0x03D3EF6C LDR V4, [X31 + 0x3C]
	0x03D3EF70 FSUB S0, S11, S15
	0x03D3EF74 FSUB S1, S13, S12
	0x03D3EF78 LDP S2, S3, [X31 + 0x18]
	0x03D3EF7C FDIV S0, S0, S4
	0x03D3EF80 LDR V4, [X31 + 0x38]
	0x03D3EF84 ADD X8, X22, X26
	0x03D3EF88 FMUL S2, S2, S8
	0x03D3EF8C FMUL S3, S3, S14
	0x03D3EF90 FDIV S1, S1, S4
	0x03D3EF94 LDR V4, [X31 + 0x20]
	0x03D3EF98 STR W0, [X8 + 0x2C]
	0x03D3EF9C STP W31, W20, [X8 + 0x38]
	0x03D3EFA0 STP W23, W24, [X8 + 0x40]
	0x03D3EFA4 FADD S2, S4, S2
	0x03D3EFA8 LDR V4, [X31 + 0x24]
	0x03D3EFAC ADD X26, X26, 0x40
	0x03D3EFB0 ADD X27, X27, 0x1
	0x03D3EFB4 ADD X25, X25, 0x8
	0x03D3EFB8 FADD S3, S4, S3
	0x03D3EFBC STP S3, S2, [X8 + 0x30]
	0x03D3EFC0 LDR V2, [X31 + 0x44]
	0x03D3EFC4 FMOV S4, 1
	0x03D3EFC8 FSUB S1, S4, S1
	0x03D3EFCC LDR V4, [X31 + 0x40]
	0x03D3EFD0 FMUL S1, S1, S2
	0x03D3EFD4 LDR V2, [X31 + 0x34]
	0x03D3EFD8 FADD S1, S1, S9
	0x03D3EFDC FMUL S0, S0, S4
	0x03D3EFE0 STP S1, S10, [X8 + 0x24]
	0x03D3EFE4 FADD S0, S0, S2
	0x03D3EFE8 STR S0, [X8 + 0x20]
	0x03D3EFEC LDR X9, [X31 + 0x58]
	0x03D3EFF0 LDUR V0, [X31 + 0x48]
	0x03D3EFF4 CMP X29, X26
	0x03D3EFF8 ADD X28, X28, 0x8
	0x03D3EFFC STR X9, [X8 + 0x58]
	0x03D3F000 STUR V0, [X8 + 0x48]
	0x03D3F004 B.NE 0x3D3EEE8
	0x03D3F008 LDR X19, [X31 + 0x8]
	0x03D3F00C MOV X1, X22
	0x03D3F010 MOV X2, X31
	0x03D3F014 MOV X0, X19
	0x03D3F018 BL 0x3DC3978
	0x03D3F01C LDR X1, [X31 + 0x10]
	0x03D3F020 MOV X0, X19
	0x03D3F024 MOV X2, X31
	0x03D3F028 BL 0x3DC3A4C
	0x03D3F02C LDP X20, X19, [X31 + 0x120]
	0x03D3F030 LDP X22, X21, [X31 + 0x110]
	0x03D3F034 LDP X24, X23, [X31 + 0x100]
	0x03D3F038 LDP X26, X25, [X31 + 0xF0]
	0x03D3F03C LDP X28, X27, [X31 + 0xE0]
	0x03D3F040 LDP X29, X30, [X31 + 0xD0]
	0x03D3F044 LDP D9, D8, [X31 + 0xC0]
	0x03D3F048 LDP D11, D10, [X31 + 0xB0]
	0x03D3F04C LDP D13, D12, [X31 + 0xA0]
	0x03D3F050 LDP D15, D14, [X31 + 0x90]
	0x03D3F054 ADD X31, X31, 0x130
	0x03D3F058 RET
	0x03D3F05C BL 0x1C16F28
	0x03D3F060 BL 0x1C16F20
	0x03D3F064 SUB X31, X31, 0x80
	0x03D3F068 STR D8, [X31 + 0x50]
	0x03D3F06C STP X30, X21, [X31 + 0x60]
	0x03D3F070 STP X20, X19, [X31 + 0x70]
	0x03D3F074 ADRP X21, 0x6A8000
	0x03D3F078 LDRB W8, [X21 + 0xB86]
	0x03D3F07C MOV X20, X2
	0x03D3F080 MOV X19, X1
	0x03D3F084 TBNZ X8, 0x0, 0x3D3F09C
	0x03D3F088 ADRP X0, 0x3B4000
	0x03D3F08C LDR X0, [X0 + 0x598]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X21, 0x6AA000
	008 Move W8, [X21+2940]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {44}
	015 Move X0, 0x427000
	016 Move X0, [X0+4016]
	017 Call 0x1C17CF4
	018 Move X0, 0x428000
	019 Move X0, [X0+568]
	020 Call 0x1C17CF4
	021 Move X0, 0x428000
	022 Move X0, [X0+328]
	023 Call 0x1C17CF4
	024 Move X0, 0x427000
	025 Move X0, [X0+4024]
	026 Call 0x1C17CF4
	027 Move X0, 0x428000
	028 Move X0, [X0+472]
	029 Call 0x1C17CF4
	030 Move X0, 0x428000
	031 Move X0, [X0+480]
	032 Call 0x1C17CF4
	033 Move X0, 0x428000
	034 Move X0, [X0+576]
	035 Call 0x1C17CF4
	036 Move X0, 0x428000
	037 Move X0, [X0+584]
	038 Call 0x1C17CF4
	039 Move X0, 0x427000
	040 Move X0, [X0+1784]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X21+2940], W8
	044 Move W8, [X20+16]
	045 Compare W8, 0
	046 JumpIfEqual {133}
	047 Move W8, [X20+20]
	048 Compare W8, 0
	049 JumpIfEqual {133}
	050 Move X0, [X20]
	051 Move X1, X31
	052 Call IntPtr.op_Explicit, X0
	053 Move X8, 0x427000
	054 Move X8, [X8+1784]
	055 Move W21, [X20+16]
	056 Move X22, X0
	057 Move X8, [X8]
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Move X8, 0x428000
	064 Move X8, [X8+584]
	065 Move X0, X22
	066 Move W1, W21
	067 Move X2, [X8]
	068 Call UIRenderDevice.PtrToSlice, X0, X1
	069 Move [X31+16], X0
	070 Move [X31+24], X1
	071 Move X0, [X20+8]
	072 Move X1, X31
	073 Call IntPtr.op_Explicit, X0
	074 Move X8, 0x428000
	075 Move W1, [X20+20]
	076 Move X8, [X8+576]
	077 Move X2, [X8]
	078 Call UIRenderDevice.PtrToSlice, X0, X1
	079 Move X8, 0x428000
	080 Move X8, [X8+328]
	081 Move [X31], X0
	082 Move [X31+8], X1
	083 Add X0, X31, 16
	084 Move X8, [X8]
	085 Move X1, X8
	086 Call NativeSlice`1<Vertex>.get_Length, X0
	087 Compare W0, 0
	088 JumpIfEqual {133}
	089 Move X8, 0x427000
	090 Move X8, [X8+4024]
	091 Add X0, X31, 0
	092 Move X1, [X8]
	093 Call NativeSlice`1<UInt16>.get_Length, X0
	094 Compare W0, 0
	095 JumpIfEqual {133}
	096 Move X0, [X19+208]
	097 Compare X0, 0
	098 JumpIfEqual {140}
	099 Move X8, 0x427000
	100 Move W1, [X20+16]
	101 Call 0x3EB276C
	102 Return 
	103 Move X2, [X8]
	104 Call TempAllocator`1<Vertex>.Alloc, X0, X1
	105 Move X8, X0
	106 Move X0, [X19+216]
	107 Move [X19+48], X8
	108 Move [X19+56], X1
	109 Compare X0, 0
	110 JumpIfEqual {140}
	111 Move X8, 0x427000
	112 Move W1, [X20+20]
	113 Move X8, [X8+480]
	114 Add X20, X19, 48
	115 Move X2, [X8]
	116 Call 0x26AF878, X0, X1
	117 Move [X19+64], X0
	118 Move X8, 0x426000
	119 Move X8, [X8+4016]
	120 Move [X19+8], X1
	121 Move X1, [X31+16]
	122 Move X2, [X31+24]
	123 Move X0, X20
	124 Move X3, [X8]
	125 Call NativeSlice`1<Vertex>.CopyFrom, X0, X1
	126 Move X8, 0x427000
	127 Move X1, [X31]
	128 Move X2, [X31+8]
	129 Move X8, [X8+568]
	130 Move X0, X19
	131 Move X3, [X8]
	132 Call NativeSlice`1<UInt16>.CopyFrom, X0, X1
	133 Move X20, [X31+64]
	134 Move X19, [X31+72]
	135 Move X22, [X31+48]
	136 Move X21, [X31+56]
	137 Move X30, [X31+32]
	138 Add X31, X31, 80
	139 Return 
	140 Call 0x1C17F20

Method: System.Void DrawText(UnityEngine.UIElements.TextElement te)

Disassembly:
	0x03D3F090 BL 0x1C16CF4
	0x03D3F094 MOVZ W8, 0x1
	0x03D3F098 STRB W8, [X21 + 0xB86]
	0x03D3F09C ADRP X21, 0x69A000
	0x03D3F0A0 LDP D8, D7, [X19]
	0x03D3F0A4 LDUR V6, [X19 + 0x9C]
	0x03D3F0A8 LDRB W8, [X21 + 0x5AA]
	0x03D3F0AC LDUR V16, [X19 + 0xA4]
	0x03D3F0B0 CBNZ W8, 0x3D3F0D8
	0x03D3F0B4 ADRP X0, 0x3BB000
	0x03D3F0B8 LDR X0, [X0 + 0x4B8]
	0x03D3F0BC STP V7, V6, [X31 + 0x30]
	0x03D3F0C0 STR V16, [X31 + 0x2]
	0x03D3F0C4 BL 0x1C16CF4
	0x03D3F0C8 LDP V16, V7, [X31 + 0x20]
	0x03D3F0CC LDR V6, [X31 + 0x4]
	0x03D3F0D0 MOVZ W8, 0x1
	0x03D3F0D4 STRB W8, [X21 + 0x5AA]
	0x03D3F0D8 ADRP X8, 0x3BB000
	0x03D3F0DC LDR X8, [X8 + 0x4B8]
	0x03D3F0E0 ADRP X9, 0xFFFFFFFFFCDAB000
	0x03D3F0E4 LDR V1, [X9 + 0x240]
	0x03D3F0E8 FABS S2, S7
	0x03D3F0EC LDR X8, [X8]
	0x03D3F0F0 FMOV S0, W31
	0x03D3F0F4 FMOV S4, 8
	0x03D3F0F8 FMAXNM S2, S2, S0
	0x03D3F0FC LDR X8, [X8 + 0xB8]
	0x03D3F100 FMUL S5, S2, S1
	0x03D3F104 LDR V3, [X8]
	0x03D3F108 FMUL S2, S3, S4
	0x03D3F10C FCMP S5, S2
	0x03D3F110 FCSEL S3, S5, S2, GT
	0x03D3F114 FABD S4, S0, S0
	0x03D3F118 FCMP S4, S3
	0x03D3F11C B.MI 0x3D3F26C
	0x03D3F120 MOV S3, V7.S[1]
	0x03D3F124 FABS S4, S3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X1
	007 Move X19, X0
	008 Move X0, X1
	009 Move X1, X31
	010 Call TextUtilities.IsFontAssigned, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {43}
	015 Compare X20, 0
	016 JumpIfEqual {49}
	017 Move X0, [X20+984]
	018 Compare X0, 0
	019 JumpIfEqual {49}
	020 Move X1, X31
	021 Call UITKTextHandle.Update, X0
	022 Compare X0, 0
	023 JumpIfEqual {49}
	024 Move W9, [X20+184]
	025 Move W8, [X0+97]
	026 Move X21, X0
	027 Move X0, X20
	028 And W9, W9, 0xFFFFFFFE
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Or W8, W9, W8
	031 Move X1, X31
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move [X20+184], W8
	034 Call VisualElement.get_contentRect, X0
	035 Move X0, X19
	036 Move X1, X21
	037 Move W2, W22
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Return 
	049 Call 0x1C17F20

Method: System.Void DrawTextInfo(UnityEngine.TextCore.Text.TextInfo textInfo, UnityEngine.Vector2 offset, System.Boolean useHints)

Disassembly:
	0x03D3F128 FMAXNM S4, S4, S0
	0x03D3F12C FMUL S1, S4, S1
	0x03D3F130 FCMP S1, S2
	0x03D3F134 FCSEL S1, S1, S2, GT
	0x03D3F138 FABD S0, S0, S0
	0x03D3F13C FCMP S0, S1
	0x03D3F140 B.MI 0x3D3F26C
	0x03D3F144 ADRP X21, 0x699000
	0x03D3F148 LDRB W8, [X21 + 0xE5A]
	0x03D3F14C CBNZ W8, 0x3D3F174
	0x03D3F150 ADRP X0, 0x3BB000
	0x03D3F154 LDR X0, [X0 + 0x9A0]
	0x03D3F158 STP V7, V6, [X31 + 0x30]
	0x03D3F15C STR V16, [X31 + 0x2]
	0x03D3F160 BL 0x1C16CF4
	0x03D3F164 LDP V16, V7, [X31 + 0x20]
	0x03D3F168 LDR V6, [X31 + 0x4]
	0x03D3F16C MOVZ W8, 0x1
	0x03D3F170 STRB W8, [X21 + 0xE5A]
	0x03D3F174 ADRP X8, 0x3BB000
	0x03D3F178 LDR X8, [X8 + 0x9A0]
	0x03D3F17C LDR X8, [X8]
	0x03D3F180 LDR X8, [X8 + 0xB8]
	0x03D3F184 LDP D0, D1, [X8]
	0x03D3F188 ADRP X8, 0xFFFFFFFFFCDAA000
	0x03D3F18C FSUB V0.2S, V6.2S, V0.2S
	0x00000000 INVALID
	0x03D3F194 UNIMPLEMENTED
	0x03D3F198 FADD V0.2S, V0.2S, V2.2S
	0x03D3F19C LDR V2, [X8 + 0xF20]
	0x03D3F1A0 FSUB V1.2S, V16.2S, V1.2S
	0x00000000 INVALID
	0x03D3F1A8 FADD V0.2S, V1.2S, V0.2S
	0x03D3F1AC UNIMPLEMENTED
	0x03D3F1B0 FADD V0.2S, V1.2S, V0.2S
	0x03D3F1B4 FCMP S0, S2
	0x03D3F1B8 B.MI 0x3D3F26C
	0x03D3F1BC FADD V1.2S, V6.2S, V16.2S
	0x03D3F1C0 FADD V0.2S, V8.2S, V6.2S
	0x03D3F1C4 STR V1, [X31]
	0x03D3F1C8 FSUB V1.2S, V7.2S, V1.2S
	0x03D3F1CC STP V7, V6, [X31 + 0x30]
	0x03D3F1D0 STR V16, [X31 + 0x2]
	0x03D3F1D4 STP D0, D1, [X19]
	0x03D3F1D8 ADRP X8, 0x3B4000
	0x03D3F1DC LDR X8, [X8 + 0x598]
	0x03D3F1E0 LDR V0, [X19 + 0x2]
	0x03D3F1E4 LDR X0, [X8]
	0x03D3F1E8 STR V0, [X31 + 0x1]
	0x03D3F1EC LDR W8, [X0 + 0xE0]
	0x03D3F1F0 CBNZ W8, 0x3D3F1F8
	0x03D3F1F4 BL 0x1C16DFC
	0x03D3F1F8 MOV X0, X20
	0x03D3F1FC MOV X1, X31
	0x03D3F200 MOV X2, X31
	0x03D3F204 BL 0x3C354F8
	0x03D3F208 ADRP X8, 0xFFFFFFFFFCDAA000
	0x03D3F20C LDP V5, V4, [X31 + 0x10]
	0x03D3F210 LDR V0, [X8 + 0xF9C]
	0x03D3F214 LDP V3, V2, [X31 + 0x30]
	0x03D3F218 MOV S1, V5.S[3]
	0x03D3F21C FCMP S1, S0
	0x03D3F220 B.LE 0x3D3F26C
	0x03D3F224 MOV S1, V5.S[2]
	0x03D3F228 FCMP S1, S0
	0x03D3F22C B.LE 0x3D3F26C
	0x03D3F230 TBZ X0, 0x0, 0x3D3F26C
	0x03D3F234 LDR V1, [X31]
	0x03D3F238 FMOV V0.2S, 0x0
	0x03D3F23C MOV V2.D[1], V4.D[0]
	0x00000000 INVALID
	0x03D3F244 UNIMPLEMENTED
	0x03D3F248 UNIMPLEMENTED
	0x03D3F24C MOV V0.D[1], V0.D[0]
	0x03D3F250 UNIMPLEMENTED
	0x00000000 INVALID
	0x03D3F258 FADD V1.4S, V5.4S, V0.4S
	0x03D3F25C FSUB V0.4S, V5.4S, V0.4S
	0x03D3F260 UNIMPLEMENTED
	0x03D3F264 UNIMPLEMENTED
	0x03D3F268 STR V0, [X19 + 0x2]
	0x03D3F26C LDP X20, X19, [X31 + 0x70]
	0x03D3F270 LDP X30, X21, [X31 + 0x60]
	0x03D3F274 LDR V8, [X31 + 0x50]
	0x03D3F278 ADD X31, X31, 0x80
	0x03D3F27C RET
	0x03D3F280 SUB X31, X31, 0x1A0
	0x03D3F284 STR X29, [X31 + 0x180]
	0x03D3F288 STP X30, X19, [X31 + 0x190]
	0x03D3F28C MOV X19, X0
	0x03D3F290 ADD X8, X31, 0xE0
	0x03D3F294 MOV X0, X1
	0x03D3F298 MOV X1, X31
	0x03D3F29C BL 0x3DC44F4
	0x03D3F2A0 ADD X0, X31, 0x28
	0x03D3F2A4 ADD X1, X31, 0xE0
	0x03D3F2A8 MOVZ W2, 0xA0
	0x03D3F2AC BL 0x3EB1AC0
	0x03D3F2B0 ADD X8, X31, 0xC8
	0x03D3F2B4 ADD X0, X31, 0x28
	0x03D3F2B8 FMOV S0, W31
	0x03D3F2BC MOV X1, X31
	0x03D3F2C0 BL 0x3DBB1DC
	0x03D3F2C4 LDR X8, [X31 + 0xD8]
	0x03D3F2C8 LDUR V0, [X31 + 0xC8]
	0x03D3F2CC ADD X1, X31, 0x10
	0x03D3F2D0 MOV X0, X19
	0x03D3F2D4 MOV X2, X31
	0x03D3F2D8 MOV X3, X31
	0x03D3F2DC MOV W4, W31
	0x03D3F2E0 MOV X5, X31
	0x03D3F2E4 MOV W6, W31
	0x03D3F2E8 MOV W7, W31
	0x03D3F2EC STR X8, [X31 + 0xF0]
	0x03D3F2F0 STR V0, [X31 + 0xE]
	0x03D3F2F4 STR V0, [X31 + 0x1]
	0x03D3F2F8 STR X8, [X31 + 0x20]
	0x03D3F2FC BL 0x3D3D664
	0x03D3F300 LDP X30, X19, [X31 + 0x190]
	0x03D3F304 LDR X29, [X31 + 0x180]
	0x03D3F308 ADD X31, X31, 0x1A0
	0x03D3F30C RET
	0x03D3F310 SUB X31, X31, 0x120
	0x03D3F314 STP X29, X30, [X31 + 0xF0]
	0x03D3F318 STP X22, X21, [X31 + 0x100]
	0x03D3F31C STP X20, X19, [X31 + 0x110]
	0x03D3F320 ADRP X22, 0x6A8000
	0x03D3F324 LDRB W8, [X22 + 0xB7F]
	0x03D3F328 MOV W21, W2
	0x03D3F32C MOV X19, X1
	0x03D3F330 MOV X20, X0
	0x03D3F334 TBNZ X8, 0x0, 0x3D3F34C
	0x03D3F338 ADRP X0, 0x426000
	0x03D3F33C LDR X0, [X0 + 0x1E8]
	0x03D3F340 BL 0x1C16CF4
	0x03D3F344 MOVZ W8, 0x1
	0x03D3F348 STRB W8, [X22 + 0xB7F]
	0x03D3F34C LDR X0, [X20 + 0x10]
	0x03D3F350 CBZ X0, 0x3D3F474
	0x03D3F354 MOV X1, X31
	0x03D3F358 BL 0x3D268E4
	0x03D3F35C CBZ X0, 0x3D3F474
	0x03D3F360 ANDS W31, W21, 0x1
	0x03D3F364 MOVZ W8, 0x1
	0x03D3F368 CINC W8, W8, EQ
	0x03D3F36C STR W8, [X0 + 0x34]
	0x03D3F370 LDR X8, [X20 + 0x110]
	0x03D3F374 STR X19, [X0 + 0x60]
	0x03D3F378 MOVI V0.2D, 0x0
	0x03D3F37C STR X8, [X0 + 0x18]
	0x03D3F380 LDR X8, [X20 + 0x18]
	0x03D3F384 STP V0, V0, [X31 + 0x20]
	0x03D3F388 STR V0, [X31 + 0x4]
	0x03D3F38C STP X31, X31, [X31 + 0x10]
	0x03D3F390 STR X31, [X31 + 0x8]
	0x03D3F394 CBZ X8, 0x3D3F474
	0x03D3F398 LDP V0, V1, [X31 + 0x20]
	0x03D3F39C LDR V2, [X31 + 0x4]
	0x03D3F3A0 ADD X9, X31, 0x70
	0x03D3F3A4 LDR X10, [X31 + 0x18]
	0x03D3F3A8 STP V0, V1, [X31 + 0x70]
	0x03D3F3AC LDUR V0, [X31 + 0x8]
	0x03D3F3B0 STR V2, [X9 + 0x2]
	0x03D3F3B4 ADRP X11, 0x426000
	0x03D3F3B8 LDR X11, [X11 + 0x1E8]
	0x03D3F3BC STR V0, [X31 + 0x5]
	0x03D3F3C0 STR X10, [X31 + 0x60]
	0x03D3F3C4 LDR W13, [X8 + 0x1C]
	0x03D3F3C8 LDR X10, [X8 + 0x10]
	0x03D3F3CC LDR X12, [X11]
	0x03D3F3D0 ADD W11, W13, 0x1
	0x03D3F3D4 STR W11, [X8 + 0x1C]
	0x03D3F3D8 CBZ X10, 0x3D3F474
	0x03D3F3DC LDRSW X11, [X8 + 0x18]
	0x03D3F3E0 LDR W13, [X10 + 0x18]
	0x03D3F3E4 CMP W11, W13
	0x03D3F3E8 B.CS 0x3D3F424
	0x03D3F3EC ADD W12, W11, 0x1
	0x03D3F3F0 STR W12, [X8 + 0x18]
	0x03D3F3F4 LDR V0, [X9 + 0x2]
	0x03D3F3F8 LDP V1, V2, [X31 + 0x70]
	0x03D3F3FC MOVZ W13, 0x50
	0x03D3F400 MADD X8, X11, X13, X10
	0x03D3F404 STR X0, [X8 + 0x50]
	0x03D3F408 STP V2, V0, [X8 + 0x30]
	0x03D3F40C STR V1, [X8 + 0x2]
	0x03D3F410 LDR X9, [X31 + 0x60]
	0x03D3F414 LDR V0, [X31 + 0x5]
	0x03D3F418 STR X9, [X8 + 0x68]
	0x03D3F41C STUR V0, [X8 + 0x58]
	0x03D3F420 B 0x3D3F460
	0x03D3F424 LDR X10, [X12 + 0x20]
	0x03D3F428 LDP V0, V1, [X31 + 0x70]
	0x03D3F42C LDR V2, [X9 + 0x2]
	0x03D3F430 LDR V3, [X31 + 0x5]
	0x03D3F434 LDR X10, [X10 + 0xC0]
	0x03D3F438 LDR X11, [X31 + 0x60]
	0x03D3F43C ADD X1, X31, 0xA0
	0x03D3F440 LDR X2, [X10 + 0x70]
	0x03D3F444 STP V0, V1, [X9 + 0x30]
	0x03D3F448 STR V2, [X9 + 0x5]
	0x03D3F44C STR X0, [X31 + 0xD0]
	0x03D3F450 MOV X0, X8
	0x03D3F454 STUR V3, [X9 + 0x68]
	0x03D3F458 STR X11, [X31 + 0xE8]
	0x03D3F45C BL 0x315B370
	0x03D3F460 LDP X20, X19, [X31 + 0x110]
	0x03D3F464 LDP X22, X21, [X31 + 0x100]
	0x03D3F468 LDP X29, X30, [X31 + 0xF0]
	0x03D3F46C ADD X31, X31, 0x120
	0x03D3F470 RET
	0x03D3F474 BL 0x1C16F20
	0x03D3F478 LDR X0, [X0 + 0x110]
	0x03D3F47C RET
	0x03D3F480 STR D12, [X31 - 0x80]!
	0x03D3F484 STP D11, D10, [X31 + 0x8]
	0x03D3F488 STP D9, D8, [X31 + 0x18]
	0x03D3F48C STR X29, [X31 + 0x28]
	0x03D3F490 STP X30, X27, [X31 + 0x30]
	0x03D3F494 STP X26, X25, [X31 + 0x40]
	0x03D3F498 STP X24, X23, [X31 + 0x50]
	0x03D3F49C STP X22, X21, [X31 + 0x60]
	0x03D3F4A0 STP X20, X19, [X31 + 0x70]
	0x03D3F4A4 SUB X31, X31, 0xAF0
	0x03D3F4A8 ADRP X20, 0x6A8000
	0x03D3F4AC LDRB W8, [X20 + 0xB80]
	0x03D3F4B0 MOV X19, X0
	0x03D3F4B4 TBNZ X8, 0x0, 0x3D3F4F0
	0x03D3F4B8 ADRP X0, 0x3DD000
	0x03D3F4BC LDR X0, [X0 + 0xE80]
	0x03D3F4C0 BL 0x1C16CF4
	0x03D3F4C4 ADRP X0, 0x3DD000
	0x03D3F4C8 LDR X0, [X0 + 0x120]
	0x03D3F4CC BL 0x1C16CF4
	0x03D3F4D0 ADRP X0, 0x3B4000
	0x03D3F4D4 LDR X0, [X0 + 0x598]
	0x03D3F4D8 BL 0x1C16CF4
	0x03D3F4DC ADRP X0, 0x3DD000
	0x03D3F4E0 LDR X0, [X0 + 0xE98]
	0x03D3F4E4 BL 0x1C16CF4
	0x03D3F4E8 MOVZ W8, 0x1
	0x03D3F4EC STRB W8, [X20 + 0xB80]
	0x03D3F4F0 MOVI V0.2D, 0x0
	0x03D3F4F4 ADD X0, X31, 0x960
	0x03D3F4F8 MOVZ W2, 0x120
	0x03D3F4FC MOV W1, W31
	0x03D3F500 STR X31, [X31 + 0xAE0]
	0x03D3F504 STR V0, [X31 + 0xAD]
	0x03D3F508 STR V0, [X31 + 0xAC]
	0x03D3F50C STR V0, [X31 + 0xAB]
	0x03D3F510 STR V0, [X31 + 0xAA]
	0x03D3F514 STR V0, [X31 + 0xA9]
	0x03D3F518 STR X31, [X31 + 0xA88]
	0x03D3F51C STR X31, [X31 + 0xA80]
	0x03D3F520 BL 0x3EB1B10
	0x03D3F524 MOVI V0.2D, 0x0
	0x03D3F528 ADD X0, X31, 0x820
	0x03D3F52C MOVZ W2, 0x120
	0x03D3F530 MOV W1, W31
	0x03D3F534 STR V0, [X31 + 0x95]
	0x03D3F538 STR V0, [X31 + 0x94]
	0x03D3F53C BL 0x3EB1B10
	0x03D3F540 ADD X0, X31, 0x700
	0x03D3F544 MOVZ W2, 0x120
	0x03D3F548 MOV W1, W31
	0x03D3F54C BL 0x3EB1B10
	0x03D3F550 ADD X0, X31, 0x5E0
	0x03D3F554 MOVZ W2, 0x120
	0x03D3F558 MOV W1, W31
	0x03D3F55C BL 0x3EB1B10
	0x03D3F560 STRB W31, [X31 + 0x5DC]
	0x03D3F564 STRB W31, [X31 + 0x5D8]
	0x03D3F568 LDR X0, [X19 + 0x110]
	0x03D3F56C CBZ X0, 0x3D405AC
	0x03D3F570 MOV X1, X31
	0x03D3F574 BL 0x3DEC528
	0x03D3F578 ADRP X8, 0xFFFFFFFFFCDAA000
	0x03D3F57C LDR V8, [X8 + 0xF9C]
	0x03D3F580 FCMP S2, S8
	0x03D3F584 B.LS 0x3D40504
	0x03D3F588 ADD X25, X19, 0x110
	0x03D3F58C LDR X0, [X25]
	0x03D3F590 CBZ X0, 0x3D405AC
	0x03D3F594 MOV X1, X31
	0x03D3F598 BL 0x3DEC528
	0x03D3F59C FCMP S3, S8
	0x03D3F5A0 B.LS 0x3D40504
	0x03D3F5A4 LDR X0, [X25]
	0x03D3F5A8 CBZ X0, 0x3D405AC
	0x03D3F5AC MOV X1, X31
	0x03D3F5B0 BL 0x3DE0F44
	0x03D3F5B4 MOV X1, X0
	0x03D3F5B8 ADD X0, X31, 0xA90
	0x03D3F5BC MOVZ W2, 0x58
	0x03D3F5C0 BL 0x3EB1B30
	0x03D3F5C4 ADD X0, X31, 0xA90
	0x03D3F5C8 MOV X1, X31
	0x03D3F5CC BL 0x3DC9568
	0x03D3F5D0 FCMP S3, S8
	0x03D3F5D4 B.LE 0x3D3F758
	0x03D3F5D8 ADD X8, X31, 0x700
	0x03D3F5DC ADD X0, X8, 0x10
	0x03D3F5E0 MOVZ W2, 0x110
	0x03D3F5E4 MOV W1, W31
	0x03D3F5E8 BL 0x3EB1B10
	0x03D3F5EC LDR X0, [X25]
	0x03D3F5F0 CBZ X0, 0x3D405AC
	0x03D3F5F4 MOV X1, X31
	0x03D3F5F8 BL 0x3DED76C
	0x03D3F5FC ADD X0, X31, 0xA90
	0x03D3F600 MOV X1, X31
	0x03D3F604 STR S0, [X31 + 0x700]
	0x03D3F608 STR S1, [X31 + 0x704]
	0x03D3F60C STR S2, [X31 + 0x708]
	0x03D3F610 STR S3, [X31 + 0x70C]
	0x03D3F614 BL 0x3DC9568
	0x03D3F618 STR S0, [X31 + 0x720]
	0x03D3F61C STR S1, [X31 + 0x724]
	0x03D3F620 STR S2, [X31 + 0x728]
	0x03D3F624 STR S3, [X31 + 0x72C]
	0x03D3F628 LDR X8, [X25]
	0x03D3F62C CBZ X8, 0x3D405AC
	0x03D3F630 LDR X0, [X19 + 0x10]
	0x03D3F634 LDR X1, [X8 + 0x180]
	0x03D3F638 MOV X2, X31
	0x03D3F63C BL 0x3DC3B54
	0x03D3F640 STR X0, [X31 + 0x810]
	0x03D3F644 LDR X0, [X19 + 0x110]
	0x03D3F648 CBZ X0, 0x3D405AC
	0x03D3F64C MOV X1, X31
	0x03D3F650 BL 0x3DEC0CC
	0x03D3F654 CBZ X0, 0x3D405AC
	0x03D3F658 ADRP X10, 0x3DD000
	0x03D3F65C LDR X8, [X0]
	0x03D3F660 LDR X10, [X10 + 0xE80]
	0x03D3F664 MOV X20, X0
	0x03D3F668 LDRH W9, [X8 + 0x12E]
	0x03D3F66C LDR X1, [X10]
	0x03D3F670 CBZ X9, 0x3D3F694
	0x03D3F674 LDR X10, [X8 + 0xB0]
	0x03D3F678 ADD X10, X10, 0x8
	0x03D3F67C LDUR X11, [X10 - 0x8]
	0x03D3F680 CMP X11, X1
	0x03D3F684 B.EQ 0x3D3F6A4
	0x03D3F688 SUBS X9, X9, 0x1
	0x03D3F68C ADD X10, X10, 0x10
	0x03D3F690 B.NE 0x3D3F67C
	0x03D3F694 MOVZ W2, 0x2
	0x03D3F698 MOV X0, X20
	0x03D3F69C BL 0x1C5C788
	0x03D3F6A0 B 0x3D3F6B4
	0x03D3F6A4 LDR W9, [X10]
	0x03D3F6A8 ADD W9, W9, 0x2
	0x03D3F6AC ADD X8, X8, W9, 0x4, SXTW
	0x03D3F6B0 ADD X0, X8, 0x138
	0x03D3F6B4 LDP X8, X1, [X0]
	0x03D3F6B8 MOV X0, X20
	0x03D3F6BC BLR X8
	0x03D3F6C0 CMP W0, 0x1
	0x03D3F6C4 B.NE 0x3D3F6F0
	0x03D3F6C8 ADRP X20, 0x3DD000
	0x03D3F6CC LDR X20, [X20 + 0xE98]
	0x03D3F6D0 LDR X0, [X20]
	0x03D3F6D4 LDR W8, [X0 + 0xE0]
	0x03D3F6D8 CBNZ W8, 0x3D3F6E4
	0x03D3F6DC BL 0x1C16DFC
	0x03D3F6E0 LDR X0, [X20]
	0x03D3F6E4 LDR X8, [X0 + 0xB8]
	0x03D3F6E8 LDUR V0, [X8 + 0x18]
	0x03D3F6EC B 0x3D3F6F4
	0x03D3F6F0 FMOV V0.4S, 0x0
	0x03D3F6F4 ADD X8, X31, 0x69D
	0x03D3F6F8 ADD X0, X31, 0x820
	0x03D3F6FC ADD X1, X31, 0x700
	0x03D3F700 MOVZ W2, 0x120
	0x03D3F704 STUR V0, [X8 + 0xFF]
	0x03D3F708 ADD X20, X31, 0x820
	0x03D3F70C BL 0x3EB1AC0
	0x03D3F710 LDR X0, [X19 + 0x110]

ISIL:
	001 Move [X31-112], D9
	002 Move [X31-104], D8
	003 Move [X31+16], X29
	004 Move [X31+24], X30
	005 Move [X31+32], X28
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Subtract X31, X31, 512
	016 Move X19, 0x6A9000
	017 Move W8, [X19+2941]
	018 Move V8, V1
	019 Move V9, V0
	020 Move X20, X1
	021 Move X21, X0
	022 Move [X31+12], W2
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {56}
	027 Move X0, 0x427000
	028 Move X0, [X0+488]
	029 Call 0x1C17CF4
	030 Move X0, 0x426000
	031 Move X0, [X0+1536]
	032 Call 0x1C17CF4
	033 Move X0, 0x427000
	034 Move X0, [X0+328]
	035 Call 0x1C17CF4
	036 Move X0, 0x426000
	037 Move X0, [X0+4024]
	038 Call 0x1C17CF4
	039 Move X0, 0x426000
	040 Move X0, [X0+1912]
	041 Call 0x1C17CF4
	042 Move X0, 0x423000
	043 Move X0, [X0+2888]
	044 Call 0x1C17CF4
	045 Move X0, 0x423000
	046 Move X0, [X0+616]
	047 Call 0x1C17CF4
	048 Move X0, 0x3DF000
	049 Move X0, [X0+592]
	050 Call 0x1C17CF4
	051 Move X0, 0x424000
	052 Move X0, [X0+1712]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X19+2941], W8
	056 Compare X20, 0
	057 JumpIfEqual {424}
	058 Move W8, [X20+44]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X22, 0x424000
	061 Move X22, [X22+1712]
	062 Add X8, X31, 224
	063 Add X9, X31, 96
	064 Move X27, X31
	065 Move X28, X31
	066 Add X23, X21, 48
	067 Add X24, X21, 64
	068 Add X19, X8, 8
	069 Add X29, X9, 8
	070 Move X8, [X20+88]
	071 Compare X8, 0
	072 JumpIfEqual {424}
	073 Move W9, [X8+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add X8, X8, X27
	076 Move W8, [X8+32]
	077 Compare W8, 0
	078 JumpIfEqual {404}
	079 Move V0, [X21+184]
	080 Move X8, [X21+192]
	081 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	082 Move [X21+104], X8
	083 Move [X21+120], D0
	084 Move X8, [X20+88]
	085 Compare X8, 0
	086 JumpIfEqual {424}
	087 Move W9, [X8+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X8, X8, X27
	090 Move X0, [X8+96]
	091 Compare X0, 0
	092 JumpIfEqual {424}
	093 Move X1, X31
	094 Call Material.get_mainTexture, X0
	095 Compare X0, 0
	096 JumpIfEqual {424}
	097 Move X8, 0x3DF000
	098 Move X8, [X8+592]
	099 Move X1, [X8]
	100 Move X8, [X0]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X1, X31
	103 Call Texture2D.get_format, X0
	104 Move X8, [X20+88]
	105 Compare X8, 0
	106 JumpIfEqual {424}
	107 Move W9, [X8+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Add X8, X8, X27
	110 Move W25, W0
	111 Move X0, [X8+96]
	112 Compare X0, 0
	113 JumpIfEqual {424}
	114 Move X1, X31
	115 Call Material.get_mainTexture, X0
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X25, X0
	118 Move X8, [X20+88]
	119 Compare X8, 0
	120 JumpIfEqual {424}
	121 Move W9, [X8+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X9, 0x423000
	124 Move X9, [X9+2888]
	125 Add X8, X8, X27
	126 Move W26, [X8+104]
	127 Move X0, [X9]
	128 Move W9, [X0+224]
	129 Compare W9, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move W0, W26
	133 Move X1, X31
	134 Call TextGeneratorUtilities.IsBitmapRendering, X0
	135 Move S0, W31
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {164}
	140 Move X8, [X20+88]
	141 Compare X8, 0
	142 JumpIfEqual {424}
	143 Move W9, [X8+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X9, 0x423000
	146 Move X9, [X9+616]
	147 Add X8, X8, X27
	148 Move X26, [X8+96]
	149 Move X0, [X9]
	150 Move W9, [X0+224]
	151 Compare W9, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Compare X26, 0
	155 JumpIfEqual {424}
	156 Move X8, 0x423000
	157 Move X8, [X8+616]
	158 Move X0, X26
	159 Move X2, X31
	160 Move X8, [X8]
	161 Move X8, [X8+184]
	162 Move W1, [X8+108]
	163 Call Material.GetFloat, X0, X1
	164 Move W8, 1
	165 Move [X21+117], W8
	166 Move [X21+88], S0
	167 Move X0, [X22]
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {172}
	171 Call 0x1C17DFC
	172 Move X8, 0x6A9000
	173 Move W8, [X8+2021]
	174 Compare W8, 0
	175 JumpIfNotEqual {181}
	176 Move X0, X22
	177 Call 0x1C17CF4
	178 Move W8, 1
	179 Move X9, 0x6A9000
	180 Move [X9+2021], W8
	181 Move X0, [X22]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {187}
	185 Call 0x1C17DFC
	186 Move X0, [X22]
	187 Move X8, [X0+184]
	188 Move X0, [X8]
	189 Compare X0, 0
	190 JumpIfEqual {424}
	191 Move X1, X25
	192 Move X2, X31
	193 Call TextureRegistry.Acquire, X0, X1
	194 Move X8, [X21+16]
	195 Move [X21+92], W0
	196 Compare X8, 0
	197 JumpIfEqual {424}
	198 Move X1, [X21+272]
	199 And X3, X0, 0
	200 Move X0, X8
	201 Move X2, X25
	202 Move W4, W31
	203 Move X5, X31
	204 Call RenderChain.AppendTexture, X0, X1, X2, X3, X4
	205 Move W8, [X31+12]
	206 Move W25, W31
	207 Move TEMP, X8
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfNotEqual {222}
	211 Move X8, 0x426000
	212 Move X8, [X8+1912]
	213 Move X25, [X21+272]
	214 Move X0, [X8]
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Move X0, X25
	220 Call RenderEvents.NeedsColorID, X0
	221 And W25, W0, 1
	222 Move X8, [X20+88]
	223 Compare X8, 0
	224 JumpIfEqual {424}
	225 Move W9, [X8+24]
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Add X8, X8, X27
	228 Add X1, X8, 32
	229 Add X0, X31, 432
	230 Move W2, 80
	231 Call 0x3EB2AC0
	232 Move X8, 0x426000
	233 Move X26, [X21+248]
	234 Move X8, [X8+1536]
	235 NotImplemented "Instruction MOVI not yet implemented."
	236 Move [X31+384], X31
	237 Move [X31+352], V0
	238 Move [X31+360], V0
	239 Move X0, [X8]
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {244}
	243 Call 0x1C17DFC
	244 Add X0, X31, 144
	245 Add X1, X31, 432
	246 Move W2, 80
	247 Call 0x3EB2AC0
	248 Move V1, [X31+352]
	249 Move V0, [X31+368]
	250 Move X8, [X31+384]
	251 Move [X31+96], X26
	252 Add X0, X31, 144
	253 Move [X29], V1
	254 Move [X29+8], V0
	255 Add X1, X31, 96
	256 Move W2, 1
	257 Move V0, V9
	258 Move V1, V8
	259 Move W3, W25
	260 Move [X29+32], X8
	261 Move X0, [X22]
	262 Move W8, [X0+224]
	263 Compare W8, 0
	264 JumpIfNotEqual {266}
	265 Call 0x1C17DFC
	266 Move X8, 0x6A9000
	267 Move W8, [X8+2021]
	268 Compare W8, 0
	269 JumpIfNotEqual {275}
	270 Move X0, X22
	271 Call 0x1C17CF4
	272 Move W8, 1
	273 Move X9, 0x6A9000
	274 Move [X9+2021], W8
	275 Move X0, [X22]
	276 Move W8, [X0+224]
	277 Compare W8, 0
	278 JumpIfNotEqual {281}
	279 Call 0x1C17DFC
	280 Move X0, [X22]
	281 Move X8, [X0+184]
	282 Move X0, [X8]
	283 Compare X0, 0
	284 JumpIfEqual {424}
	285 Move X1, X25
	286 Move X2, X31
	287 Call TextureRegistry.Acquire, X0, X1
	288 Move X8, [X21+16]
	289 Move [X21+92], W0
	290 Compare X8, 0
	291 JumpIfEqual {424}
	292 Move X1, [X21+272]
	293 And X3, X0, 0
	294 Move X0, X8
	295 Move X2, X25
	296 Move W4, W31
	297 Move X5, X31
	298 Call RenderChain.AppendTexture, X0, X1, X2, X3, X4
	299 Move X8, [X20+88]
	300 Compare X8, 0
	301 JumpIfEqual {424}
	302 Move W9, [X8+24]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Add X8, X8, X27
	305 Add X1, X8, 32
	306 Add X0, X31, 432
	307 Move W2, 80
	308 Call 0x3EB2AC0
	309 Move X8, 0x426000
	310 Move X25, [X21+248]
	311 Move X8, [X8+1536]
	312 NotImplemented "Instruction MOVI not yet implemented."
	313 Move [X31+384], X31
	314 Move [X31+352], V0
	315 Move [X31+360], V0
	316 Move X0, [X8]
	317 Move W8, [X0+224]
	318 Compare W8, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 Add X0, X31, 272
	322 Add X1, X31, 432
	323 Move W2, 80
	324 Call 0x3EB2AC0
	325 Move X8, [X31+384]
	326 Move V1, [X31+352]
	327 Move V0, [X31+368]
	328 Move [X31+224], X25
	329 Add X0, X31, 272
	330 Move [X19+32], X8
	331 Move [X19], V1
	332 Move [X19+8], V0
	333 Add X1, X31, 224
	334 Move W2, 2
	335 Move V0, V9
	336 Move V1, V8
	337 Move W3, W31
	338 Move X4, X31
	339 Call MeshBuilder.MakeText, X0, X1, X2, X3, X4
	340 Move X25, [X21+24]
	341 Add X0, X31, 16
	342 Move W2, 80
	343 Move X1, X23
	344 Call 0x3EB2AC0
	345 Compare X25, 0
	346 JumpIfEqual {424}
	347 Move X8, 0x427000
	348 Move X8, [X8+488]
	349 Add X0, X31, 352
	350 Add X1, X31, 16
	351 Move W2, 80
	352 Move X26, [X8]
	353 Call 0x3EB2AC0
	354 Move W9, [X25+28]
	355 Move X8, [X25+16]
	356 Add W9, W9, 1
	357 Move [X25+28], W9
	358 Compare X8, 0
	359 JumpIfEqual {424}
	360 NotImplemented "Instruction LDRSW not yet implemented."
	361 Move W10, [X8+24]
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Move W11, 80
	364 NotImplemented "Instruction MADD not yet implemented."
	365 Add W10, W9, 1
	366 Add X0, X8, 32
	367 Add X1, X31, 352
	368 Move W2, 80
	369 Move [X25+24], W10
	370 Call 0x3EB2AC0
	371 Move X8, [X26+32]
	372 Add X0, X31, 432
	373 Add X1, X31, 352
	374 Move W2, 80
	375 Move X8, [X8+192]
	376 Move X26, [X8+112]
	377 Call 0x3EB2AC0
	378 Add X1, X31, 432
	379 Move X0, X25
	380 Move X2, X26
	381 Call List`1<Entry>.AddWithResize, X0, X1
	382 Move X8, 0x427000
	383 Move W25, [X21+280]
	384 Move X8, [X8+328]
	385 Move X0, X23
	386 Move X1, [X8]
	387 Call NativeSlice`1<Vertex>.get_Length, X0
	388 Add W8, W0, W25
	389 Move [X21+280], W8
	390 Move X8, 0x426000
	391 Move W25, [X21+284]
	392 Move X8, [X8+4024]
	393 Move X0, X24
	394 Move X1, [X8]
	395 Call NativeSlice`1<UInt16>.get_Length, X0
	396 Add W8, W0, W25
	397 NotImplemented "Instruction MOVI not yet implemented."
	398 Move [X21+284], W8
	399 Move [X23], V0
	400 Move [X23+8], V0
	401 Move [X23+32], V0
	402 Move [X23+40], V0
	403 Move [X23+4], V0
	404 NotImplemented "Instruction LDRSW not yet implemented."
	405 Add X28, X28, 1
	406 Add X27, X27, 80
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Add X31, X31, 512
	409 Move X20, [X31+96]
	410 Move X19, [X31+104]
	411 Move X22, [X31+80]
	412 Move X21, [X31+88]
	413 Move X24, [X31+64]
	414 Move X23, [X31+72]
	415 Move X26, [X31+48]
	416 Move X25, [X31+56]
	417 Move X28, [X31+32]
	418 Move X27, [X31+40]
	419 Move X29, [X31+16]
	420 Move X30, [X31+24]
	421 Move D9, [X31+112]
	422 Move D8, [X31+120]
	423 Return 
	424 Call 0x1C17F20
	425 Call 0x1C17F28
	426 Call 0x1C181E0

Method: System.Void DrawRectangle(UnityEngine.UIElements.MeshGenerationContextUtils/RectangleParams rectParams)

Disassembly:
	0x03D3F714 ADD X1, X20, 0xAC
	0x03D3F718 ADD X2, X20, 0xC4
	0x03D3F71C ADD X3, X20, 0xB4
	0x03D3F720 ADD X4, X20, 0xBC
	0x03D3F724 MOV X5, X31
	0x03D3F728 BL 0x3DC3E38
	0x03D3F72C LDR X0, [X19 + 0x110]
	0x03D3F730 ADD X1, X31, 0x820
	0x03D3F734 MOV X2, X31
	0x03D3F738 BL 0x3DC40D4
	0x03D3F73C ADD X0, X31, 0x4B8
	0x03D3F740 ADD X1, X31, 0x820
	0x03D3F744 MOVZ W2, 0x120
	0x03D3F748 BL 0x3EB1AC0
	0x03D3F74C ADD X1, X31, 0x4B8
	0x03D3F750 MOV X0, X19
	0x03D3F754 BL 0x3D3E714
	0x03D3F758 ADD X0, X31, 0xA90
	0x03D3F75C MOV X1, X31
	0x03D3F760 ADD X26, X31, 0x398
	0x03D3F764 BL 0x3DCA12C
	0x03D3F768 MOV W20, W0
	0x03D3F76C ADD X0, X31, 0xA90
	0x03D3F770 MOV X1, X31
	0x03D3F774 BL 0x3DCA21C
	0x03D3F778 MOV W21, W0
	0x03D3F77C ADD X0, X31, 0xA90
	0x03D3F780 MOV X1, X31
	0x03D3F784 BL 0x3DCA17C
	0x03D3F788 MOV W22, W0
	0x03D3F78C ADD X0, X31, 0xA90
	0x03D3F790 MOV X1, X31
	0x03D3F794 BL 0x3DCA0DC
	0x03D3F798 SCVTF S0, W20
	0x03D3F79C SCVTF S1, W21
	0x03D3F7A0 SCVTF S2, W22
	0x03D3F7A4 SCVTF S3, W0
	0x03D3F7A8 ADD X0, X31, 0x960
	0x03D3F7AC MOVZ W2, 0x120
	0x03D3F7B0 MOV W1, W31
	0x03D3F7B4 STR S0, [X31 + 0xA80]
	0x03D3F7B8 STR S1, [X31 + 0xA84]
	0x03D3F7BC STR S2, [X31 + 0xA88]
	0x03D3F7C0 STR S3, [X31 + 0xA8C]
	0x03D3F7C4 ADD X20, X31, 0x960
	0x03D3F7C8 BL 0x3EB1B10
	0x03D3F7CC LDR X0, [X25]
	0x03D3F7D0 ADD X1, X20, 0xAC
	0x03D3F7D4 ADD X2, X20, 0xC4
	0x03D3F7D8 ADD X3, X20, 0xB4
	0x03D3F7DC ADD X4, X20, 0xBC
	0x03D3F7E0 MOV X5, X31
	0x03D3F7E4 BL 0x3DC3E38
	0x03D3F7E8 ADD X8, X31, 0x398
	0x03D3F7EC ADD X0, X31, 0xA90
	0x03D3F7F0 MOV X1, X31
	0x03D3F7F4 BL 0x3DC95BC
	0x03D3F7F8 LDP V0, V1, [X26]
	0x03D3F7FC ADD X0, X31, 0x940
	0x03D3F800 MOV X1, X31
	0x03D3F804 STR V0, [X31 + 0x94]
	0x03D3F808 STR V1, [X31 + 0x95]
	0x03D3F80C BL 0x3DE2228
	0x03D3F810 ADRP X27, 0x3B4000
	0x03D3F814 LDR X27, [X27 + 0x598]
	0x03D3F818 MOV X20, X0
	0x03D3F81C LDR X8, [X27]
	0x03D3F820 LDR W9, [X8 + 0xE0]
	0x03D3F824 CBNZ W9, 0x3D3F830
	0x03D3F828 MOV X0, X8
	0x03D3F82C BL 0x1C16DFC
	0x03D3F830 MOV X0, X20
	0x03D3F834 MOV X1, X31
	0x03D3F838 MOV X2, X31
	0x03D3F83C BL 0x3C354F8
	0x03D3F840 TBNZ X0, 0x0, 0x3D3F8EC
	0x03D3F844 ADD X0, X31, 0x940
	0x03D3F848 MOV X1, X31
	0x03D3F84C BL 0x3DE22AC
	0x03D3F850 LDR X8, [X27]
	0x03D3F854 MOV X20, X0
	0x03D3F858 LDR W9, [X8 + 0xE0]
	0x03D3F85C CBNZ W9, 0x3D3F868
	0x03D3F860 MOV X0, X8
	0x03D3F864 BL 0x1C16DFC
	0x03D3F868 MOV X0, X20
	0x03D3F86C MOV X1, X31
	0x03D3F870 MOV X2, X31
	0x03D3F874 BL 0x3C354F8
	0x03D3F878 TBNZ X0, 0x0, 0x3D3F8EC
	0x03D3F87C ADD X0, X31, 0x940
	0x03D3F880 MOV X1, X31
	0x03D3F884 BL 0x3DE0F4C
	0x03D3F888 LDR X8, [X27]
	0x03D3F88C MOV X20, X0
	0x03D3F890 LDR W9, [X8 + 0xE0]
	0x03D3F894 CBNZ W9, 0x3D3F8A0
	0x03D3F898 MOV X0, X8
	0x03D3F89C BL 0x1C16DFC
	0x03D3F8A0 MOV X0, X20
	0x03D3F8A4 MOV X1, X31
	0x03D3F8A8 MOV X2, X31
	0x03D3F8AC BL 0x3C354F8
	0x03D3F8B0 TBNZ X0, 0x0, 0x3D3F8EC
	0x03D3F8B4 ADD X0, X31, 0x940
	0x03D3F8B8 MOV X1, X31
	0x03D3F8BC BL 0x3DE2330
	0x03D3F8C0 LDR X8, [X27]
	0x03D3F8C4 MOV X20, X0
	0x03D3F8C8 LDR W9, [X8 + 0xE0]
	0x03D3F8CC CBNZ W9, 0x3D3F8D8
	0x03D3F8D0 MOV X0, X8
	0x03D3F8D4 BL 0x1C16DFC
	0x03D3F8D8 MOV X0, X20
	0x03D3F8DC MOV X1, X31
	0x03D3F8E0 MOV X2, X31
	0x03D3F8E4 BL 0x3C354F8
	0x03D3F8E8 TBZ X0, 0x0, 0x3D40504
	0x03D3F8EC ADD X0, X31, 0x5E0
	0x03D3F8F0 MOVZ W2, 0x120
	0x03D3F8F4 MOV W1, W31
	0x03D3F8F8 BL 0x3EB1B10
	0x03D3F8FC LDR X0, [X25]
	0x03D3F900 CBZ X0, 0x3D405AC
	0x03D3F904 MOV X1, X31
	0x03D3F908 BL 0x3DE0EB8
	0x03D3F90C CBZ X0, 0x3D405AC
	0x03D3F910 ADRP X10, 0x3DD000
	0x03D3F914 LDR X8, [X0]
	0x03D3F918 LDR X10, [X10 + 0x120]
	0x03D3F91C MOV X20, X0
	0x03D3F920 LDRH W9, [X8 + 0x12E]
	0x03D3F924 LDR X1, [X10]
	0x03D3F928 CBZ X9, 0x3D3F94C
	0x03D3F92C LDR X10, [X8 + 0xB0]
	0x03D3F930 ADD X10, X10, 0x8
	0x03D3F934 LDUR X11, [X10 - 0x8]
	0x03D3F938 CMP X11, X1
	0x03D3F93C B.EQ 0x3D3F95C

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Subtract X31, X31, 1408
	008 Move X21, 0x6A9000
	009 Move W8, [X21+2942]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3B5000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2942], W8
	021 Move [X31+1400], X31
	022 Move [X31+1392], X31
	023 Move [X31+1388], W31
	024 Move [X31+1384], W31
	025 Move [X31+1380], W31
	026 Move X8, -52776960
	027 Move V1, [X20+8]
	028 Move V0, [X8+3996]
	029 NotImplemented "Instruction FCMP not yet implemented."
	030 Move V1, [X20+12]
	031 NotImplemented "Instruction FCMP not yet implemented."
	032 Move X22, 0x3B5000
	033 Move X22, [X22+1432]
	034 Move X21, [X20+136]
	035 Move X0, [X22]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X21
	041 Move X1, X31
	042 Move X2, X31
	043 Call Object.op_Inequality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {55}
	048 Add X0, X31, 912
	049 Move W2, 288
	050 Move X1, X20
	051 Call 0x3EB2AC0
	052 Add X1, X31, 912
	053 Move X0, X19
	054 Call UIRStylePainter.DrawVectorImage, X0, X1
	055 Move X0, [X22]
	056 Move X21, [X20+128]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X21
	062 Move X1, X31
	063 Move X2, X31
	064 Call Object.op_Inequality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {76}
	069 Add X0, X31, 624
	070 Move W2, 288
	071 Move X1, X20
	072 Call 0x3EB2AC0
	073 Add X1, X31, 624
	074 Move X0, X19
	075 Call UIRStylePainter.DrawSprite, X0, X1
	076 Move X1, [X20+120]
	077 Move W2, [X20+280]
	078 Add X3, X31, 1392
	079 Add X4, X31, 1388
	080 Add X5, X31, 1384
	081 Add X6, X31, 1380
	082 Move X0, X19
	083 Call UIRStylePainter.TryAtlasTexture, X0, X1, X2, X3, X4, X5, X6
	084 Move V0, [X31+1392]
	085 Move V1, [X31+1396]
	086 Move V2, [X31+1400]
	087 Move V3, [X31+1404]
	088 Add X8, X31, 432
	089 Move X0, X20
	090 Move X1, X31
	091 Call RectangleParams.ToNativeParams, X0, X1
	092 Add X0, X31, 1200
	093 Add X1, X31, 432
	094 Move W2, 180
	095 Call 0x3EB2AC0
	096 Move X2, [X20+120]
	097 Add X1, X31, 1200
	098 Call UIRStylePainter.ApplyInset, X0, X1, X2
	099 Move X0, [X22]
	100 Move X21, [X20+120]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X0, X21
	106 Move X1, X31
	107 Move X2, X31
	108 Add X22, X31, 408
	109 Call Object.op_Inequality, X0, X1
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {123}
	114 Add X0, X31, 224
	115 Add X1, X31, 1200
	116 Move W2, 180
	117 Call 0x3EB2AC0
	118 Add X8, X31, 408
	119 Add X0, X31, 224
	120 Move S0, W31
	121 Move X1, X31
	122 Call MeshBuilderNative.MakeTexturedRect, X0, V0
	123 Add X0, X31, 40
	124 Add X1, X31, 1200
	125 Move W2, 180
	126 Call 0x3EB2AC0
	127 Add X8, X31, 408
	128 Add X0, X31, 40
	129 Move S0, W31
	130 Move X1, X31
	131 Call MeshBuilderNative.MakeSolidRect, X0, V0
	132 Move V0, [X22]
	133 Move X8, [X31+424]
	134 Move W3, [X31+1384]
	135 Move W4, [X31+1388]
	136 Move [X31+27], V0
	137 Move V0, [X31+27]
	138 Move [X31+448], X8
	139 Move [X31+32], X8
	140 Move W7, [X31+1380]
	141 Move [X31+1], V0
	142 Move X2, [X20+120]
	143 Move X5, [X20+144]
	144 Move W6, [X20+280]
	145 Add X1, X31, 16
	146 Move X0, X19
	147 Call UIRStylePainter.BuildEntryFromNativeMesh, X0, X1, X2, X3, X4, X5, X6, X7, X8
	148 Add X31, X31, 1408
	149 Move X20, [X31+32]
	150 Move X19, [X31+40]
	151 Move X22, [X31+16]
	152 Move X21, [X31+24]
	153 Move X29, [X31+48]
	154 Move X30, [X31+56]
	155 Return 

Method: System.Void DrawBorder(UnityEngine.UIElements.MeshGenerationContextUtils/BorderParams borderParams)

Disassembly:
	0x03D40280 MOVZ W8, 0x1
	0x03D40284 STRB W8, [X21 + 0x5D7]
	0x03D40288 LDR X0, [X22]
	0x03D4028C LDR W8, [X0 + 0xE0]
	0x03D40290 CBNZ W8, 0x3D40298
	0x03D40294 BL 0x1C16DFC
	0x03D40298 FCVT S9, S10
	0x03D4029C ADD X0, X31, 0x398
	0x03D402A0 MOV V0.16B, V9.16B
	0x03D402A4 BL 0x3EB1C00
	0x03D402A8 FCMP S10, 0x0
	0x03D402AC B.GE 0x3D402C8
	0x03D402B0 FMOV D1, -0.5
	0x03D402B4 FCMP D0, D1
	0x03D402B8 B.NE 0x3D402F0
	0x03D402BC LDR V0, [X31 + 0x398]
	0x03D402C0 FMOV D1, -1
	0x03D402C4 B 0x3D402DC
	0x03D402C8 FMOV D1, 0.5
	0x03D402CC FCMP D0, D1
	0x03D402D0 B.NE 0x3D402FC
	0x03D402D4 LDR V0, [X31 + 0x398]
	0x03D402D8 FMOV D1, 1
	0x03D402DC FCVTZS X8, D0
	0x03D402E0 FADD D1, D0, D1
	0x03D402E4 ANDS X31, X8, 0x1
	0x03D402E8 FCSEL D0, D0, D1, EQ
	0x03D402EC B 0x3D40304
	0x03D402F0 FADD D0, D9, D1
	0x03D402F4 FRINTP D0, D0
	0x03D402F8 B 0x3D40304
	0x03D402FC FADD D0, D9, D1
	0x03D40300 FRINTM D0, D0
	0x03D40304 MOVZ X9, 0x7FF00000
	0x03D40308 FMOV D1, X9
	0x03D4030C FCVTZS W8, D0

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+384], X29
	003 Move [X31+400], X30
	004 Move [X31+408], X19
	005 Move X19, X0
	006 Add X8, X31, 224
	007 Move X0, X1
	008 Move X1, X31
	009 Call BorderParams.ToNativeParams, X0
	010 Add X0, X31, 40
	011 Add X1, X31, 224
	012 Move W2, 160
	013 Call 0x3EB2AC0
	014 Add X8, X31, 200
	015 Add X0, X31, 40
	016 Move S0, W31
	017 Move X1, X31
	018 Call MeshBuilderNative.MakeBorder, X0, V0
	019 Move X8, [X31+216]
	020 NotImplemented "Instruction LDUR not yet implemented."
	021 Add X1, X31, 16
	022 Move X0, X19
	023 Move X2, X31
	024 Move X3, X31
	025 Move W4, W31
	026 Move X5, X31
	027 Move W6, W31
	028 Move W7, W31
	029 Move [X31+240], X8
	030 Move [X31+14], V0
	031 Move [X31+1], V0
	032 Move [X31+32], X8
	033 Call UIRStylePainter.BuildEntryFromNativeMesh, X0, X1, X2, X3, X4, X5, X6, X7, X8
	034 Move X30, [X31+400]
	035 Move X19, [X31+408]
	036 Move X29, [X31+384]
	037 Add X31, X31, 416
	038 Return 

Method: System.Void DrawImmediate(System.Action callback, System.Boolean cullingEnabled)

Disassembly:
	0x03D40310 MOVZ W10, 0x80000000
	0x03D40314 FCMP D0, D1
	0x03D40318 CSEL W8, W10, W8, EQ
	0x03D4031C STR W8, [X31 + 0x6C8]
	0x03D40320 STR S8, [X31 + 0x6CC]
	0x03D40324 ADD X0, X31, 0xA90
	0x03D40328 MOV X1, X31
	0x03D4032C BL 0x3DC9EF4
	0x03D40330 STR S0, [X31 + 0x600]
	0x03D40334 STR S1, [X31 + 0x604]
	0x03D40338 STR S2, [X31 + 0x608]
	0x03D4033C STR S3, [X31 + 0x60C]
	0x03D40340 LDR X8, [X25]
	0x03D40344 CBZ X8, 0x3D405AC
	0x03D40348 LDR X0, [X19 + 0x10]
	0x03D4034C LDR X1, [X8 + 0x1A8]
	0x03D40350 MOV X2, X31
	0x03D40354 BL 0x3DC3B54
	0x03D40358 STR X0, [X31 + 0x6F0]
	0x03D4035C ADD X0, X31, 0xA90
	0x03D40360 MOV X1, X31
	0x03D40364 BL 0x3DC961C
	0x03D40368 STR X0, [X31 + 0x620]
	0x03D4036C STR W1, [X31 + 0x628]
	0x03D40370 ADD X0, X31, 0xA90
	0x03D40374 MOV X1, X31
	0x03D40378 BL 0x3DC9674
	0x03D4037C STUR X0, [X20 + 0x4C]
	0x03D40380 STR W1, [X31 + 0x634]
	0x03D40384 ADD X0, X31, 0xA90
	0x03D40388 MOV X1, X31
	0x03D4038C BL 0x3DC96CC
	0x03D40390 STR X0, [X31 + 0x638]
	0x03D40394 ADD X8, X31, 0x398
	0x03D40398 ADD X0, X31, 0xA90
	0x03D4039C MOV X1, X31
	0x03D403A0 BL 0x3DC971C
	0x03D403A4 LDR V0, [X26]
	0x03D403A8 LDR W8, [X31 + 0x3A8]
	0x03D403AC ADD X1, X31, 0x5E0
	0x03D403B0 MOV X2, X31
	0x03D403B4 STR V0, [X31 + 0x64]
	0x03D403B8 STR W8, [X31 + 0x650]
	0x03D403BC LDR X0, [X19 + 0x110]
	0x03D403C0 BL 0x3DC40D4
	0x03D403C4 LDR X0, [X27]
	0x03D403C8 LDR X20, [X31 + 0x658]
	0x03D403CC LDR W8, [X0 + 0xE0]
	0x03D403D0 CBNZ W8, 0x3D403D8
	0x03D403D4 BL 0x1C16DFC
	0x03D403D8 MOV X0, X20
	0x03D403DC MOV X1, X31
	0x03D403E0 MOV X2, X31
	0x03D403E4 BL 0x3C354F8
	0x03D403E8 TBZ X0, 0x0, 0x3D40448
	0x03D403EC ADD X0, X31, 0x398
	0x03D403F0 ADD X1, X31, 0x5E0
	0x03D403F4 MOVZ W2, 0x120
	0x03D403F8 BL 0x3EB1AC0
	0x03D403FC LDR X0, [X25]
	0x03D40400 CBZ X0, 0x3D405AC
	0x03D40404 MOV X1, X31
	0x03D40408 BL 0x3DED76C
	0x03D4040C LDR X0, [X25]
	0x03D40410 CBZ X0, 0x3D405AC
	0x03D40414 MOV X1, X31
	0x03D40418 MOV V8.16B, V0.16B
	0x03D4041C MOV V9.16B, V1.16B
	0x03D40420 MOV V10.16B, V2.16B
	0x03D40424 MOV V11.16B, V3.16B
	0x03D40428 BL 0x3DEC4BC
	0x03D4042C ADD X0, X31, 0x240
	0x03D40430 ADD X1, X31, 0x398
	0x03D40434 MOVZ W2, 0x120
	0x03D40438 MOV V12.16B, V0.16B
	0x03D4043C BL 0x3EB1AC0
	0x03D40440 ADD X1, X31, 0x240
	0x03D40444 B 0x3D404C8
	0x03D40448 LDR X0, [X27]
	0x03D4044C LDR X20, [X31 + 0x668]
	0x03D40450 LDR W8, [X0 + 0xE0]
	0x03D40454 CBNZ W8, 0x3D4045C
	0x03D40458 BL 0x1C16DFC
	0x03D4045C MOV X0, X20
	0x03D40460 MOV X1, X31
	0x03D40464 MOV X2, X31
	0x03D40468 BL 0x3C354F8
	0x03D4046C TBZ X0, 0x0, 0x3D404E8
	0x03D40470 ADD X0, X31, 0x398
	0x03D40474 ADD X1, X31, 0x5E0

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+240], X29
	003 Move [X31+248], X30
	004 Move [X31+256], X22
	005 Move [X31+264], X21
	006 Move [X31+272], X20
	007 Move [X31+280], X19
	008 Move X22, 0x6A8000
	009 Move W8, [X22+2943]
	010 Move W21, W2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x426000
	018 Move X0, [X0+488]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+2943], W8
	022 Move X0, [X20+16]
	023 Compare X0, 0
	024 JumpIfEqual {109}
	025 Move X1, X31
	026 Call RenderChain.AllocCommand, X0
	027 Compare X0, 0
	028 JumpIfEqual {109}
	029 And W31, W21, 1
	030 Move W8, 1
	031 NotImplemented "Instruction CINC not yet implemented."
	032 Move [X0+52], W8
	033 Move X8, [X20+272]
	034 Move [X0+96], X19
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X0+24], X8
	037 Move X8, [X20+24]
	038 Move [X31+32], V0
	039 Move [X31+40], V0
	040 Move [X31+4], V0
	041 Move [X31+16], X31
	042 Move [X31+24], X31
	043 Move [X31+8], X31
	044 Compare X8, 0
	045 JumpIfEqual {109}
	046 Move V0, [X31+32]
	047 Move V1, [X31+48]
	048 Move V2, [X31+4]
	049 Add X9, X31, 112
	050 Move X10, [X31+24]
	051 Move [X31+112], V0
	052 Move [X31+120], V1
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move [X9+2], V2
	055 Move X11, 0x426000
	056 Move X11, [X11+488]
	057 Move [X31+5], V0
	058 Move [X31+96], X10
	059 Move W13, [X8+28]
	060 Move X10, [X8+16]
	061 Move X12, [X11]
	062 Add W11, W13, 1
	063 Move [X8+28], W11
	064 Compare X10, 0
	065 JumpIfEqual {109}
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Move W13, [X10+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add W12, W11, 1
	070 Move [X8+24], W12
	071 Move V0, [X9+2]
	072 Move V1, [X31+112]
	073 Move V2, [X31+128]
	074 Move W13, 80
	075 NotImplemented "Instruction MADD not yet implemented."
	076 Move [X8+80], X0
	077 Move [X8+48], V2
	078 Move [X8+56], V0
	079 Move [X8+2], V1
	080 Move X9, [X31+96]
	081 Move V0, [X31+5]
	082 Move [X8+104], X9
	083 Move [X8+88], V0
	084 Move X10, [X12+32]
	085 Move V0, [X31+112]
	086 Move V1, [X31+128]
	087 Move V2, [X9+2]
	088 Move V3, [X31+5]
	089 Move X10, [X10+192]
	090 Move X11, [X31+96]
	091 Add X1, X31, 160
	092 Move X2, [X10+112]
	093 Move [X9+48], V0
	094 Move [X9+56], V1
	095 Move [X9+5], V2
	096 Move [X31+208], X0
	097 Move X0, X8
	098 Move [X9+104], V3
	099 Move [X31+232], X11
	100 Call List`1<Entry>.AddWithResize, X0, X1
	101 Move X20, [X31+272]
	102 Move X19, [X31+280]
	103 Move X22, [X31+256]
	104 Move X21, [X31+264]
	105 Move X29, [X31+240]
	106 Move X30, [X31+248]
	107 Add X31, X31, 288
	108 Return 
	109 Call 0x1C17F20

Method: UnityEngine.UIElements.VisualElement get_visualElement()

Disassembly:
	0x03D40478 MOVZ W2, 0x120
	0x03D4047C BL 0x3EB1AC0

ISIL:
	001 Move X0, [X0+272]
	002 Return X0

Method: System.Void DrawVisualElementBackground()

Disassembly:
	0x03D40480 LDR X0, [X25]
	0x03D40484 CBZ X0, 0x3D405AC
	0x03D40488 MOV X1, X31
	0x03D4048C BL 0x3DED76C
	0x03D40490 LDR X0, [X25]
	0x03D40494 CBZ X0, 0x3D405AC
	0x03D40498 MOV X1, X31
	0x03D4049C MOV V8.16B, V0.16B
	0x03D404A0 MOV V9.16B, V1.16B
	0x03D404A4 MOV V10.16B, V2.16B
	0x03D404A8 MOV V11.16B, V3.16B
	0x03D404AC BL 0x3DEC4BC
	0x03D404B0 ADD X0, X31, 0x120
	0x03D404B4 ADD X1, X31, 0x398
	0x03D404B8 MOVZ W2, 0x120
	0x03D404BC MOV V12.16B, V0.16B
	0x03D404C0 BL 0x3EB1AC0
	0x03D404C4 ADD X1, X31, 0x120
	0x03D404C8 MOV X0, X19
	0x03D404CC MOV V0.16B, V8.16B
	0x03D404D0 MOV V1.16B, V9.16B
	0x03D404D4 MOV V2.16B, V10.16B
	0x03D404D8 MOV V3.16B, V11.16B
	0x03D404DC MOV V4.16B, V12.16B
	0x03D404E0 BL 0x3D405B0
	0x03D404E4 B 0x3D40504
	0x03D404E8 ADD X0, X31, 0x0
	0x03D404EC ADD X1, X31, 0x5E0
	0x03D404F0 MOVZ W2, 0x120
	0x03D404F4 BL 0x3EB1AC0
	0x03D404F8 ADD X1, X31, 0x0
	0x03D404FC MOV X0, X19
	0x03D40500 BL 0x3D3E714
	0x03D40504 ADD X31, X31, 0xAF0
	0x03D40508 LDP X20, X19, [X31 + 0x70]
	0x03D4050C LDP X22, X21, [X31 + 0x60]
	0x03D40510 LDP X24, X23, [X31 + 0x50]
	0x03D40514 LDP X26, X25, [X31 + 0x40]
	0x03D40518 LDP X30, X27, [X31 + 0x30]
	0x03D4051C LDR X29, [X31 + 0x28]
	0x03D40520 LDP D9, D8, [X31 + 0x18]
	0x03D40524 LDP D11, D10, [X31 + 0x8]
	0x03D40528 LDR V12, [X31], #0x80
	0x03D4052C RET
	0x03D40530 LDR W9, [X10]
	0x03D40534 ADD W9, W9, 0x2
	0x03D40538 ADD X8, X8, W9, 0x4, SXTW
	0x03D4053C ADD X0, X8, 0x138
	0x03D40540 LDP X8, X1, [X0]
	0x03D40544 MOV X0, X22
	0x03D40548 BLR X8
	0x03D4054C MOV W2, W0
	0x03D40550 ADD X8, X31, 0x398
	0x03D40554 FMOV S4, W31
	0x03D40558 FMOV S5, W31
	0x03D4055C FMOV S6, 1
	0x03D40560 FMOV S7, 1
	0x03D40564 MOV V0.16B, V9.16B
	0x03D40568 MOV V1.16B, V10.16B
	0x03D4056C MOV V2.16B, V11.16B
	0x03D40570 MOV V3.16B, V12.16B
	0x03D40574 MOV X0, X20
	0x03D40578 MOV W1, W21
	0x03D4057C MOV X3, X31
	0x03D40580 BL 0x3DC5988
	0x03D40584 ADD X0, X31, 0x5E0
	0x03D40588 ADD X1, X31, 0x398
	0x03D4058C MOVZ W2, 0x120
	0x03D40590 BL 0x3EB1AC0
	0x03D40594 LDR X8, [X31 + 0x668]
	0x03D40598 CBZ X8, 0x3D405AC
	0x03D4059C LDR V0, [X8 + 0x40]
	0x03D405A0 STR X31, [X31 + 0x5E0]
	0x03D405A4 STR D0, [X31 + 0x5E8]
	0x03D405A8 B 0x3D3FFAC
	0x03D405AC BL 0x1C16F20
	0x03D405B0 STP D15, D14, [X31 - 0xA0]!
	0x03D405B4 STP D13, D12, [X31 + 0x10]
	0x03D405B8 STP D11, D10, [X31 + 0x20]
	0x03D405BC STP D9, D8, [X31 + 0x30]
	0x03D405C0 STP X29, X30, [X31 + 0x40]
	0x03D405C4 STP X28, X27, [X31 + 0x50]
	0x03D405C8 STP X26, X25, [X31 + 0x60]
	0x03D405CC STP X24, X23, [X31 + 0x70]
	0x03D405D0 STP X22, X21, [X31 + 0x80]
	0x03D405D4 STP X20, X19, [X31 + 0x90]
	0x03D405D8 SUB X31, X31, 0x260
	0x03D405DC STR S4, [X31 + 0x2C]
	0x03D405E0 STR S0, [X31 + 0x5C]
	0x03D405E4 MRS X25, 0xC000
	0x03D405E8 LDR X8, [X25 + 0x28]
	0x03D405EC ADRP X21, 0x6A7000
	0x03D405F0 MOV V13.16B, V3.16B
	0x03D405F4 MOV V10.16B, V2.16B
	0x03D405F8 STR X8, [X31 + 0x258]
	0x03D405FC LDRB W8, [X21 + 0xB81]
	0x03D40600 MOV V8.16B, V1.16B
	0x03D40604 MOV X19, X1
	0x03D40608 MOV X20, X0
	0x03D4060C TBNZ X8, 0x0, 0x3D406C0
	0x03D40610 ADRP X0, 0x425000
	0x03D40614 LDR X0, [X0 + 0x270]
	0x03D40618 BL 0x1C16CF4
	0x03D4061C ADRP X0, 0x425000
	0x03D40620 LDR X0, [X0 + 0x278]
	0x03D40624 BL 0x1C16CF4
	0x03D40628 ADRP X0, 0x425000
	0x03D4062C LDR X0, [X0 + 0x280]
	0x03D40630 BL 0x1C16CF4
	0x03D40634 ADRP X0, 0x425000
	0x03D40638 LDR X0, [X0 + 0x288]
	0x03D4063C BL 0x1C16CF4
	0x03D40640 ADRP X0, 0x425000
	0x03D40644 LDR X0, [X0 + 0x290]
	0x03D40648 BL 0x1C16CF4
	0x03D4064C ADRP X0, 0x425000
	0x03D40650 LDR X0, [X0 + 0x298]
	0x03D40654 BL 0x1C16CF4
	0x03D40658 ADRP X0, 0x425000
	0x03D4065C LDR X0, [X0 + 0x2A0]
	0x03D40660 BL 0x1C16CF4
	0x03D40664 ADRP X0, 0x425000
	0x03D40668 LDR X0, [X0 + 0x2A8]
	0x03D4066C BL 0x1C16CF4
	0x03D40670 ADRP X0, 0x425000
	0x03D40674 LDR X0, [X0 + 0x2B0]
	0x03D40678 BL 0x1C16CF4
	0x03D4067C ADRP X0, 0x425000
	0x03D40680 LDR X0, [X0 + 0x2B8]
	0x03D40684 BL 0x1C16CF4
	0x03D40688 ADRP X0, 0x425000
	0x03D4068C LDR X0, [X0 + 0x2C0]
	0x03D40690 BL 0x1C16CF4
	0x03D40694 ADRP X0, 0x425000
	0x03D40698 LDR X0, [X0 + 0x2C8]
	0x03D4069C BL 0x1C16CF4
	0x03D406A0 ADRP X0, 0x3B3000
	0x03D406A4 LDR X0, [X0 + 0x5A8]
	0x03D406A8 BL 0x1C16CF4
	0x03D406AC ADRP X0, 0x3B3000
	0x03D406B0 LDR X0, [X0 + 0x598]
	0x03D406B4 BL 0x1C16CF4
	0x03D406B8 MOVZ W8, 0x1
	0x03D406BC STRB W8, [X21 + 0xB81]
	0x03D406C0 MOVI V0.2D, 0x0
	0x03D406C4 STR X31, [X31 + 0x218]
	0x03D406C8 STR X31, [X31 + 0x248]
	0x03D406CC STR X31, [X31 + 0x240]
	0x03D406D0 STR X31, [X31 + 0x250]
	0x03D406D4 STP V0, V0, [X31 + 0x1F0]
	0x03D406D8 STP V0, V0, [X31 + 0x1D0]
	0x03D406DC STP V0, V0, [X31 + 0x1B0]
	0x03D406E0 LDR X8, [X20 + 0xF0]
	0x03D406E4 CBZ X8, 0x3D40724
	0x03D406E8 LDR W9, [X8 + 0x18]
	0x03D406EC CBZ W9, 0x3D41924
	0x03D406F0 LDR X10, [X8 + 0x20]
	0x03D406F4 CBZ X10, 0x3D41920
	0x03D406F8 LDR W11, [X10 + 0x1C]
	0x03D406FC CMP W9, 0x1
	0x03D40700 ADD W9, W11, 0x1
	0x03D40704 STP W31, W9, [X10 + 0x18]
	0x03D40708 B.LS 0x3D41924
	0x03D4070C LDR X8, [X8 + 0x28]
	0x03D40710 CBZ X8, 0x3D41920
	0x03D40714 LDR W9, [X8 + 0x1C]
	0x03D40718 ADD W9, W9, 0x1
	0x03D4071C STP W31, W9, [X8 + 0x18]
	0x03D40720 B 0x3D407D0
	0x03D40724 ADRP X8, 0x425000
	0x03D40728 LDR X8, [X8 + 0x288]
	0x03D4072C MOVZ W1, 0x2
	0x03D40730 LDR X0, [X8]
	0x03D40734 BL 0x1C16D6C
	0x03D40738 STR X0, [X20 + 0xF0]
	0x03D4073C ADRP X23, 0x425000
	0x03D40740 LDR X23, [X23 + 0x2C8]
	0x03D40744 MOV X21, X0
	0x03D40748 LDR X0, [X23]
	0x03D4074C BL 0x1C16F10
	0x03D40750 ADRP X24, 0x425000
	0x03D40754 LDR X24, [X24 + 0x2A8]
	0x03D40758 MOV X22, X0
	0x03D4075C LDR X1, [X24]
	0x03D40760 BL 0x315DDD0
	0x03D40764 CBZ X21, 0x3D41920
	0x03D40768 CBZ X22, 0x3D40780
	0x03D4076C LDR X8, [X21]
	0x03D40770 MOV X0, X22
	0x03D40774 LDR X1, [X8 + 0x40]
	0x03D40778 BL 0x1C16E00
	0x03D4077C CBZ X0, 0x3D41960
	0x03D40780 LDR W8, [X21 + 0x18]
	0x03D40784 CBZ W8, 0x3D41924
	0x03D40788 STR X22, [X21 + 0x20]
	0x03D4078C LDR X0, [X23]
	0x03D40790 LDR X22, [X20 + 0xF0]
	0x03D40794 BL 0x1C16F10
	0x03D40798 LDR X1, [X24]
	0x03D4079C MOV X21, X0
	0x03D407A0 BL 0x315DDD0
	0x03D407A4 CBZ X22, 0x3D41920
	0x03D407A8 CBZ X21, 0x3D407C0
	0x03D407AC LDR X8, [X22]
	0x03D407B0 MOV X0, X21
	0x03D407B4 LDR X1, [X8 + 0x40]
	0x03D407B8 BL 0x1C16E00
	0x03D407BC CBZ X0, 0x3D41960
	0x03D407C0 LDR W8, [X22 + 0x18]
	0x03D407C4 CMP W8, 0x1
	0x03D407C8 B.LS 0x3D41924
	0x03D407CC STR X21, [X22 + 0x28]
	0x03D407D0 LDR V1, [X19]
	0x03D407D4 LDP S0, S14, [X19 + 0x4]
	0x03D407D8 LDR V9, [X19 + 0xC]
	0x03D407DC ADD X21, X19, 0x60
	0x03D407E0 MOV X0, X21
	0x03D407E4 MOV X1, X31
	0x03D407E8 STP S1, S0, [X31 + 0x34]
	0x03D407EC BL 0x3CE9C18
	0x03D407F0 STR S8, [X31 + 0x3C]
	0x03D407F4 CBZ W0, 0x3D4082C
	0x03D407F8 MOV X0, X21
	0x03D407FC MOV X1, X31
	0x03D40800 BL 0x3CE9C18
	0x03D40804 CMP W0, 0x2
	0x03D40808 B.NE 0x3D408F4
	0x03D4080C FDIV S0, S10, S14
	0x03D40810 FDIV S1, S13, S9
	0x03D40814 FCMP S0, S1
	0x03D40818 B.PL 0x3D40918
	0x03D4081C FMUL S0, S10, S9
	0x03D40820 FDIV S11, S0, S14
	0x03D40824 MOV V14.16B, V10.16B
	0x03D40828 B 0x3D40A04
	0x03D4082C MOV X0, X21
	0x03D40830 MOV X1, X31
	0x03D40834 BL 0x3CE9C74
	0x03D40838 STR X0, [X31 + 0x218]
	0x03D4083C ADD X0, X31, 0x218
	0x03D40840 MOV X1, X31
	0x03D40844 BL 0x3DFD4E0
	0x03D40848 TBZ X0, 0x0, 0x3D4086C
	0x03D4084C MOV X0, X21
	0x03D40850 MOV X1, X31
	0x03D40854 BL 0x3CE9C88
	0x03D40858 STR X0, [X31 + 0x218]
	0x03D4085C ADD X0, X31, 0x218
	0x03D40860 MOV X1, X31
	0x03D40864 BL 0x3DFD4E0
	0x03D40868 TBNZ X0, 0x0, 0x3D40A00
	0x03D4086C MOV X0, X21
	0x03D40870 MOV X1, X31
	0x03D40874 BL 0x3CE9C74
	0x03D40878 STR X0, [X31 + 0x218]
	0x03D4087C ADD X0, X31, 0x218
	0x03D40880 MOV X1, X31
	0x03D40884 BL 0x3DFD4E0
	0x03D40888 TBNZ X0, 0x0, 0x3D40928
	0x03D4088C MOV X0, X21
	0x03D40890 MOV X1, X31
	0x03D40894 BL 0x3CE9C88
	0x03D40898 STR X0, [X31 + 0x218]
	0x03D4089C ADD X0, X31, 0x218
	0x03D408A0 MOV X1, X31
	0x03D408A4 BL 0x3DFD4D0
	0x03D408A8 TBZ X0, 0x0, 0x3D40928
	0x03D408AC MOV X0, X21
	0x03D408B0 MOV X1, X31
	0x03D408B4 BL 0x3CE9C74
	0x03D408B8 MOV X22, X0
	0x03D408BC STR X0, [X31 + 0x218]
	0x03D408C0 MOV X0, X21
	0x03D408C4 MOV X1, X31
	0x03D408C8 BL 0x3CE9C74
	0x03D408CC UBFM X8, X22, 0x20, 0x3F
	0x03D408D0 CMP X8, 0x1
	0x03D408D4 STR X0, [X31 + 0x218]
	0x03D408D8 B.NE 0x3D409D4
	0x03D408DC FMOV S0, W0
	0x03D408E0 MOVZ W8, 0x42C80000
	0x03D408E4 FMUL S0, S10, S0
	0x03D408E8 FMOV S1, W8
	0x03D408EC FDIV S0, S0, S1
	0x03D408F0 B 0x3D409F0
	0x03D408F4 MOV X0, X21
	0x03D408F8 MOV X1, X31
	0x03D408FC BL 0x3CE9C18
	0x03D40900 CMP W0, 0x1
	0x03D40904 B.NE 0x3D40A00
	0x03D40908 FDIV S0, S10, S14
	0x03D4090C FDIV S1, S13, S9
	0x03D40910 FCMP S0, S1
	0x03D40914 B.GT 0x3D4081C
	0x03D40918 FMUL S0, S13, S14
	0x03D4091C FDIV S14, S0, S9
	0x03D40920 MOV V11.16B, V13.16B
	0x03D40924 B 0x3D40A04
	0x03D40928 MOV X0, X21
	0x03D4092C MOV X1, X31
	0x03D40930 BL 0x3CE9C74
	0x03D40934 STR X0, [X31 + 0x218]
	0x03D40938 ADD X0, X31, 0x218
	0x03D4093C MOV X1, X31
	0x03D40940 BL 0x3DFD4E0
	0x03D40944 TBNZ X0, 0x0, 0x3D40A00
	0x03D40948 MOV X0, X21
	0x03D4094C MOV X1, X31
	0x03D40950 BL 0x3CE9C88
	0x03D40954 STR X0, [X31 + 0x218]
	0x03D40958 ADD X0, X31, 0x218
	0x03D4095C MOV X1, X31
	0x03D40960 BL 0x3DFD4E0
	0x03D40964 TBNZ X0, 0x0, 0x3D40A00
	0x03D40968 MOV X0, X21
	0x03D4096C MOV X1, X31
	0x03D40970 BL 0x3CE9C74
	0x03D40974 STR X0, [X31 + 0x218]
	0x03D40978 ADD X0, X31, 0x218
	0x03D4097C MOV X1, X31
	0x03D40980 BL 0x3DFD4D0
	0x03D40984 MOV V12.16B, V14.16B
	0x03D40988 TBNZ X0, 0x0, 0x3D4185C
	0x03D4098C MOV X0, X21
	0x03D40990 MOV X1, X31
	0x03D40994 BL 0x3CE9C74
	0x03D40998 MOV X22, X0
	0x03D4099C STR X0, [X31 + 0x218]
	0x03D409A0 MOV X0, X21
	0x03D409A4 MOV X1, X31
	0x03D409A8 BL 0x3CE9C74
	0x03D409AC UBFM X8, X22, 0x20, 0x3F
	0x03D409B0 CMP X8, 0x1
	0x03D409B4 STR X0, [X31 + 0x218]
	0x03D409B8 B.NE 0x3D4183C
	0x03D409BC FMOV S0, W0
	0x03D409C0 MOVZ W8, 0x42C80000
	0x03D409C4 FMUL S0, S10, S0
	0x03D409C8 FMOV S1, W8
	0x03D409CC FDIV S12, S0, S1
	0x03D409D0 B 0x3D4185C
	0x03D409D4 UBFM X8, X0, 0x20, 0x3F
	0x03D409D8 CBNZ X8, 0x3D40A00
	0x03D409DC MOV X0, X21
	0x03D409E0 MOV X1, X31
	0x03D409E4 BL 0x3CE9C74
	0x03D409E8 STR X0, [X31 + 0x218]
	0x03D409EC FMOV S0, W0
	0x03D409F0 FMUL S1, S9, S0
	0x03D409F4 FDIV S11, S1, S14
	0x03D409F8 MOV V14.16B, V0.16B
	0x03D409FC B 0x3D40A04
	0x03D40A00 MOV V11.16B, V9.16B
	0x03D40A04 ADRP X8, 0xFFFFFFFFFCDA9000
	0x03D40A08 LDR V0, [X8 + 0xF9C]
	0x03D40A0C FCMP S13, S0
	0x03D40A10 B.LS 0x3D417FC
	0x03D40A14 FCMP S10, S0
	0x03D40A18 B.LS 0x3D417FC
	0x03D40A1C FCMP S11, S0
	0x03D40A20 B.LS 0x3D417FC
	0x03D40A24 FCMP S14, S0
	0x03D40A28 B.LS 0x3D417FC
	0x03D40A2C MOV X0, X21
	0x03D40A30 MOV X1, X31
	0x03D40A34 STR S0, [X31 + 0x30]
	0x03D40A38 BL 0x3CE9C74
	0x03D40A3C STR X0, [X31 + 0x218]
	0x03D40A40 ADD X0, X31, 0x218
	0x03D40A44 MOV X1, X31
	0x03D40A48 BL 0x3DFD4D0
	0x03D40A4C STR X25, [X31 + 0x10]
	0x03D40A50 TBZ X0, 0x0, 0x3D40AD0
	0x03D40A54 LDR W8, [X19 + 0x5C]
	0x03D40A58 CMP W8, 0x2
	0x03D40A5C B.NE 0x3D40AD0
	0x03D40A60 ADRP X8, 0x3B3000
	0x03D40A64 LDR X8, [X8 + 0x5A8]
	0x03D40A68 FMOV S0, 1
	0x03D40A6C FDIV S8, S0, S11
	0x03D40A70 FMUL S0, S13, S8
	0x03D40A74 LDR X0, [X8]
	0x03D40A78 FMOV S1, 0.5
	0x03D40A7C MOVZ W8, 0x7F800000
	0x03D40A80 FADD S0, S0, S1
	0x03D40A84 LDR W9, [X0 + 0xE0]
	0x03D40A88 FMOV S1, W8
	0x03D40A8C FCVTZS W10, S0
	0x03D40A90 FCMP S0, S1
	0x03D40A94 MOVZ W8, 0x80000000
	0x03D40A98 CSEL W21, W8, W10, EQ
	0x03D40A9C CBNZ W9, 0x3D40AA4
	0x03D40AA0 BL 0x1C16DFC
	0x03D40AA4 MOVZ W1, 0x1
	0x03D40AA8 MOV W0, W21
	0x03D40AAC MOV X2, X31
	0x03D40AB0 BL 0x337EDF0
	0x03D40AB4 SCVTF S0, W0
	0x03D40AB8 FDIV S11, S13, S0
	0x03D40ABC FMOV S1, W31
	0x03D40AC0 FMUL S0, S14, S11
	0x03D40AC4 STR S1, [X31 + 0x38]
	0x03D40AC8 FMUL S14, S8, S0
	0x03D40ACC B 0x3D40B68
	0x03D40AD0 MOV X0, X21
	0x03D40AD4 MOV X1, X31
	0x03D40AD8 BL 0x3CE9C88
	0x03D40ADC STR X0, [X31 + 0x218]
	0x03D40AE0 ADD X0, X31, 0x218
	0x03D40AE4 MOV X1, X31
	0x03D40AE8 BL 0x3DFD4D0
	0x03D40AEC TBZ X0, 0x0, 0x3D40B70
	0x03D40AF0 LDR W8, [X19 + 0x58]
	0x03D40AF4 CMP W8, 0x2
	0x03D40AF8 B.NE 0x3D40B70
	0x03D40AFC ADRP X8, 0x3B3000
	0x03D40B00 LDR X8, [X8 + 0x5A8]
	0x03D40B04 FMOV S0, 1
	0x03D40B08 FDIV S8, S0, S14
	0x03D40B0C FMUL S0, S10, S8
	0x03D40B10 LDR X0, [X8]
	0x03D40B14 FMOV S1, 0.5
	0x03D40B18 MOVZ W8, 0x7F800000
	0x03D40B1C FADD S0, S0, S1
	0x03D40B20 LDR W9, [X0 + 0xE0]
	0x03D40B24 FMOV S1, W8
	0x03D40B28 FCVTZS W10, S0
	0x03D40B2C FCMP S0, S1
	0x03D40B30 MOVZ W8, 0x80000000
	0x03D40B34 CSEL W21, W8, W10, EQ
	0x03D40B38 CBNZ W9, 0x3D40B40
	0x03D40B3C BL 0x1C16DFC
	0x03D40B40 MOVZ W1, 0x1
	0x03D40B44 MOV W0, W21
	0x03D40B48 MOV X2, X31
	0x03D40B4C BL 0x337EDF0
	0x03D40B50 SCVTF S0, W0
	0x03D40B54 FDIV S14, S10, S0
	0x03D40B58 FMUL S0, S11, S14
	0x03D40B5C FMOV S1, W31
	0x03D40B60 FMUL S11, S8, S0
	0x03D40B64 STR S1, [X31 + 0x38]
	0x03D40B68 FMOV S0, W31
	0x03D40B6C STR S0, [X31 + 0x34]
	0x03D40B70 FSUB S1, S13, S11
	0x03D40B74 FSUB S0, S10, S14
	0x03D40B78 STP S0, S1, [X31 + 0x20]
	0x03D40B7C ADRP X23, 0x425000
	0x03D40B80 ADRP X26, 0x425000
	0x03D40B84 LDR X23, [X23 + 0x2B8]
	0x03D40B88 LDR X26, [X26 + 0x2C0]
	0x03D40B8C LDR V0, [X31 + 0x2C]
	0x03D40B90 FMOV S1, 1
	0x03D40B94 ADRP X9, 0xFFFFFFFFFCDAA000
	0x03D40B98 ADRP X10, 0xFFFFFFFFFCDAA000
	0x03D40B9C FDIV S0, S1, S0
	0x03D40BA0 STR S0, [X31 + 0x28]
	0x03D40BA4 LDR V0, [X9 + 0x410]
	0x03D40BA8 ADD X8, X31, 0x180
	0x03D40BAC MOV W22, W31
	0x03D40BB0 MOV X25, X31
	0x03D40BB4 STR S0, [X31 + 0x1C]
	0x03D40BB8 LDR V0, [X10 + 0x2A4]
	0x03D40BBC ADD X28, X8, 0x8
	0x03D40BC0 ADRP X29, 0xFFFFFFFFFCDAA000
	0x03D40BC4 MOVZ W10, 0x1
	0x03D40BC8 STR S0, [X31 + 0x18]
	0x03D40BCC STP S13, S10, [X31 + 0x40]
	0x03D40BD0 STR S14, [X31 + 0x58]
	0x03D40BD4 ANDS W31, W10, 0x1
	0x03D40BD8 MOVZ W8, 0x5C
	0x03D40BDC MOVZ W9, 0x58
	0x03D40BE0 MOV W13, W10
	0x03D40BE4 CSEL X8, X9, X8, NE
	0x03D40BE8 MOVZ W9, 0x54
	0x03D40BEC MOVZ W10, 0x48
	0x03D40BF0 CSEL X9, X10, X9, NE
	0x03D40BF4 MOVZ W10, 0x50
	0x03D40BF8 MOVZ W11, 0x44
	0x03D40BFC CSEL X10, X11, X10, NE
	0x03D40C00 MOVZ W11, 0x4C
	0x03D40C04 MOVZ W12, 0x40
	0x03D40C08 CSEL X11, X12, X11, NE
	0x03D40C0C LDR W24, [X19, X8, LSL]
	0x03D40C10 LDR W27, [X19, X11, LSL]
	0x03D40C14 LDR V0, [X19, X10, LSL]
	0x03D40C18 LDR W11, [X19, X9, LSL]
	0x03D40C1C CMP W24, 0x3
	0x03D40C20 FMOV S9, W31
	0x03D40C24 STP W13, W27, [X31 + 0x50]
	0x03D40C28 STR S0, [X31 + 0x4C]
	0x03D40C2C STR W11, [X31 + 0x48]
	0x03D40C30 B.HI 0x3D41254
	0x03D40C34 ADRP X10, 0xFFFFFFFFFCE57000
	0x03D40C38 ADD X10, X10, 0xFA0
	0x03D40C3C ADR X8, 0x10
	0x03D40C40 LDRB W9, [X10, X24, LSL]
	0x03D40C44 ADD X8, X8, X9, 0x2, LSL
	0x03D40C48 BR X8
	0x03D40C4C LDR X8, [X20 + 0xF0]
	0x03D40C50 ANDS W31, W22, 0x1
	0x03D40C54 FCSEL S9, S11, S14, NE
	0x03D40C58 CBZ X8, 0x3D41920
	0x03D40C5C LDR W9, [X8 + 0x18]
	0x03D40C60 CMP X25, X9
	0x03D40C64 B.CS 0x3D41924
	0x03D40C68 ADD X8, X8, X25, 0x3, LSL
	0x03D40C6C LDR X0, [X8 + 0x20]
	0x03D40C70 CBZ X0, 0x3D41920
	0x03D40C74 ADRP X9, 0x425000
	0x03D40C78 LDR W10, [X0 + 0x1C]
	0x03D40C7C LDR X8, [X0 + 0x10]
	0x03D40C80 LDR X9, [X9 + 0x290]
	0x03D40C84 ADD W10, W10, 0x1
	0x03D40C88 LDR X9, [X9]
	0x03D40C8C STR W10, [X0 + 0x1C]
	0x03D40C90 CBZ X8, 0x3D41920
	0x03D40C94 LDRSW X10, [X0 + 0x18]
	0x03D40C98 LDR W11, [X8 + 0x18]
	0x03D40C9C CMP W10, W11
	0x03D40CA0 B.CS 0x3D41014
	0x03D40CA4 LDR V0, [X29 + 0xBC]
	0x03D40CA8 LDR V2, [X31 + 0x34]
	0x03D40CAC LDR V1, [X31 + 0x38]
	0x03D40CB0 ADD W9, W10, 0x1
	0x03D40CB4 ADD X8, X8, X10, 0x5, LSL
	0x03D40CB8 STR W9, [X0 + 0x18]
	0x03D40CBC STP S2, S1, [X8 + 0x20]
	0x03D40CC0 STP S14, S11, [X8 + 0x28]
	0x03D40CC4 STR V0, [X8 + 0x3]
	0x03D40CC8 B 0x3D41254
	0x03D40CCC ADRP X8, 0x3B3000
	0x03D40CD0 LDR X8, [X8 + 0x5A8]
	0x03D40CD4 CMP W25, 0x1
	0x03D40CD8 FCSEL S0, S11, S14, EQ
	0x03D40CDC FMOV S2, 0.5
	0x03D40CE0 LDR X0, [X8]
	0x03D40CE4 FCSEL S1, S13, S10, EQ
	0x03D40CE8 FMUL S2, S0, S2
	0x03D40CEC FADD S1, S1, S2
	0x03D40CF0 LDR W8, [X0 + 0xE0]
	0x03D40CF4 MOVZ W10, 0x7F800000
	0x03D40CF8 FDIV S0, S1, S0
	0x03D40CFC FMOV S1, W10
	0x03D40D00 FCVTZS W9, S0
	0x03D40D04 FCMP S0, S1
	0x03D40D08 MOVZ W10, 0x80000000
	0x03D40D0C CSEL W21, W10, W9, EQ
	0x03D40D10 CBNZ W8, 0x3D40D18
	0x03D40D14 BL 0x1C16DFC
	0x03D40D18 MOVZ W1, 0x1
	0x03D40D1C MOV W0, W21
	0x03D40D20 MOV X2, X31
	0x03D40D24 BL 0x337EDF0
	0x03D40D28 ANDS W31, W0, 0x1
	0x03D40D2C MOVZ W8, 0x1
	0x03D40D30 CINC W8, W8, NE
	0x03D40D34 CMP W27, 0x0
	0x03D40D38 CSINC W8, W8, W31, EQ
	0x03D40D3C CMP W25, 0x1
	0x03D40D40 SCVTF S0, W0
	0x03D40D44 FCSEL S1, S13, S10, EQ
	0x03D40D48 ADD W21, W0, W8
	0x03D40D4C FDIV S12, S1, S0
	0x03D40D50 FCSEL S15, S14, S12, EQ
	0x03D40D54 FCSEL S10, S12, S11, EQ
	0x03D40D58 CMP W21, 0x1
	0x03D40D5C B.LT 0x3D41254
	0x03D40D60 LDP S14, S8, [X31 + 0x34]
	0x03D40D64 CMP W25, 0x1
	0x03D40D68 MOV W27, W31
	0x03D40D6C FCSEL S13, S10, S15, EQ
	0x03D40D70 FMOV S9, W31
	0x03D40D74 LDR X8, [X20 + 0xF0]
	0x03D40D78 SCVTF S0, W27
	0x03D40D7C FMUL S0, S12, S0
	0x03D40D80 CMP W25, 0x1
	0x03D40D84 FCSEL S14, S14, S0, EQ
	0x03D40D88 FCSEL S8, S0, S8, EQ
	0x03D40D8C CBZ X8, 0x3D41920
	0x03D40D90 LDR W9, [X8 + 0x18]
	0x03D40D94 CMP X25, X9
	0x03D40D98 B.CS 0x3D41924
	0x03D40D9C ADD X8, X8, X25, 0x3, LSL
	0x03D40DA0 LDR X0, [X8 + 0x20]
	0x03D40DA4 CBZ X0, 0x3D41920
	0x03D40DA8 ADRP X9, 0x425000
	0x03D40DAC LDR W10, [X0 + 0x1C]
	0x03D40DB0 LDR X8, [X0 + 0x10]
	0x03D40DB4 LDR X9, [X9 + 0x290]
	0x03D40DB8 ADD W10, W10, 0x1
	0x03D40DBC LDR X9, [X9]
	0x03D40DC0 STR W10, [X0 + 0x1C]
	0x03D40DC4 CBZ X8, 0x3D41920
	0x03D40DC8 LDRSW X10, [X0 + 0x18]
	0x03D40DCC LDR W11, [X8 + 0x18]
	0x03D40DD0 CMP W10, W11
	0x03D40DD4 B.CS 0x3D40DF8
	0x03D40DD8 LDR V0, [X29 + 0xBC]
	0x03D40DDC ADD W9, W10, 0x1
	0x03D40DE0 ADD X8, X8, X10, 0x5, LSL
	0x03D40DE4 STR W9, [X0 + 0x18]
	0x03D40DE8 STP S14, S8, [X8 + 0x20]
	0x03D40DEC STP S15, S10, [X8 + 0x28]
	0x03D40DF0 STR V0, [X8 + 0x3]
	0x03D40DF4 B 0x3D40E24
	0x03D40DF8 LDR X8, [X9 + 0x20]
	0x03D40DFC LDR V0, [X29 + 0xBC]
	0x03D40E00 ADD X1, X31, 0x180
	0x03D40E04 LDR X8, [X8 + 0xC0]
	0x03D40E08 LDR X2, [X8 + 0x70]
	0x03D40E0C STR S14, [X31 + 0x180]
	0x03D40E10 STR S8, [X31 + 0x184]
	0x03D40E14 STR S15, [X31 + 0x188]
	0x03D40E18 STR S10, [X31 + 0x18C]
	0x03D40E1C STR V0, [X31 + 0x19]
	0x03D40E20 BL 0x315E62C
	0x03D40E24 ADD W27, W27, 0x1
	0x03D40E28 CMP W21, W27
	0x03D40E2C FADD S9, S9, S13
	0x03D40E30 B.NE 0x3D40D74
	0x03D40E34 B 0x3D41254
	0x03D40E38 LDR V3, [X31 + 0x28]
	0x03D40E3C CMP W25, 0x1
	0x03D40E40 FCSEL S1, S13, S10, EQ
	0x03D40E44 MOVZ W8, 0x7F800000
	0x03D40E48 FCSEL S2, S11, S14, EQ
	0x03D40E4C FADD S1, S3, S1
	0x03D40E50 FMOV S0, W8
	0x03D40E54 FDIV S1, S1, S2
	0x03D40E58 FCVTZS W8, S1
	0x03D40E5C FCMP S1, S0
	0x03D40E60 MOVZ W9, 0x80000000
	0x03D40E64 CSEL W8, W9, W8, EQ
	0x03D40E68 AND W9, W8, 0x1
	0x03D40E6C ORR W9, W27, W9, 0x0
	0x03D40E70 CMP W9, 0x0
	0x03D40E74 MOVZ W9, 0x1
	0x03D40E78 CINC W9, W9, NE
	0x03D40E7C ADD W21, W8, W9
	0x03D40E80 CMP W21, 0x1
	0x03D40E84 B.LT 0x3D41254
	0x03D40E88 LDR V0, [X31 + 0x58]
	0x03D40E8C LDP S12, S13, [X31 + 0x34]
	0x03D40E90 CMP W25, 0x1
	0x03D40E94 MOV W27, W31
	0x03D40E98 FCSEL S10, S11, S0, EQ
	0x03D40E9C FMOV S9, W31
	0x03D40EA0 LDR V2, [X31 + 0x58]
	0x03D40EA4 LDR X8, [X20 + 0xF0]
	0x03D40EA8 SCVTF S0, W27
	0x03D40EAC CMP W25, 0x1
	0x03D40EB0 FMUL S1, S2, S0
	0x03D40EB4 FMUL S0, S11, S0
	0x03D40EB8 FCSEL S13, S0, S13, EQ
	0x03D40EBC FCSEL S12, S12, S1, EQ
	0x03D40EC0 CBZ X8, 0x3D41920
	0x03D40EC4 LDR W9, [X8 + 0x18]
	0x03D40EC8 CMP X25, X9
	0x03D40ECC B.CS 0x3D41924
	0x03D40ED0 ADD X8, X8, X25, 0x3, LSL
	0x03D40ED4 LDR X0, [X8 + 0x20]
	0x03D40ED8 CBZ X0, 0x3D41920
	0x03D40EDC ADRP X9, 0x425000
	0x03D40EE0 LDR W10, [X0 + 0x1C]
	0x03D40EE4 LDR X8, [X0 + 0x10]
	0x03D40EE8 LDR X9, [X9 + 0x290]
	0x03D40EEC ADD W10, W10, 0x1
	0x03D40EF0 LDR X9, [X9]
	0x03D40EF4 STR W10, [X0 + 0x1C]
	0x03D40EF8 CBZ X8, 0x3D41920
	0x03D40EFC LDRSW X10, [X0 + 0x18]
	0x03D40F00 LDR W11, [X8 + 0x18]
	0x03D40F04 CMP W10, W11
	0x03D40F08 B.CS 0x3D40F2C
	0x03D40F0C LDR V0, [X29 + 0xBC]
	0x03D40F10 ADD W9, W10, 0x1
	0x03D40F14 ADD X8, X8, X10, 0x5, LSL
	0x03D40F18 STR W9, [X0 + 0x18]
	0x03D40F1C STP S12, S13, [X8 + 0x20]
	0x03D40F20 STP S2, S11, [X8 + 0x28]
	0x03D40F24 STR V0, [X8 + 0x3]
	0x03D40F28 B 0x3D40F58
	0x03D40F2C LDR X8, [X9 + 0x20]
	0x03D40F30 LDR V0, [X29 + 0xBC]
	0x03D40F34 ADD X1, X31, 0x180
	0x03D40F38 LDR X8, [X8 + 0xC0]
	0x03D40F3C LDR X2, [X8 + 0x70]
	0x03D40F40 STR S12, [X31 + 0x180]
	0x03D40F44 STR S13, [X31 + 0x184]
	0x03D40F48 STR S2, [X31 + 0x188]
	0x03D40F4C STR S11, [X31 + 0x18C]
	0x03D40F50 STR V0, [X31 + 0x19]
	0x03D40F54 BL 0x315E62C
	0x03D40F58 ADD W27, W27, 0x1
	0x03D40F5C CMP W21, W27
	0x03D40F60 FADD S9, S9, S10
	0x03D40F64 B.NE 0x3D40EA0
	0x03D40F68 B 0x3D41254
	0x03D40F6C CMP W25, 0x1
	0x03D40F70 MOVZ W8, 0x7F800000
	0x03D40F74 FCSEL S1, S13, S10, EQ
	0x03D40F78 FCSEL S2, S11, S14, EQ
	0x03D40F7C FMOV S0, W8
	0x03D40F80 FDIV S1, S1, S2
	0x03D40F84 FCVTZS W8, S1
	0x03D40F88 FCMP S1, S0
	0x03D40F8C MOVZ W9, 0x80000000
	0x03D40F90 CSEL W27, W9, W8, EQ
	0x03D40F94 TBNZ X27, 0x1F, 0x3D41254
	0x03D40F98 LDR X8, [X20 + 0xF0]
	0x03D40F9C CBZ X8, 0x3D41920
	0x03D40FA0 LDR W9, [X8 + 0x18]
	0x03D40FA4 CMP X25, X9
	0x03D40FA8 B.CS 0x3D41924
	0x03D40FAC ADD X8, X8, X25, 0x3, LSL
	0x03D40FB0 LDR X0, [X8 + 0x20]
	0x03D40FB4 CBZ X0, 0x3D41920
	0x03D40FB8 ADRP X9, 0x425000
	0x03D40FBC LDR W10, [X0 + 0x1C]
	0x03D40FC0 LDR X8, [X0 + 0x10]
	0x03D40FC4 LDR X9, [X9 + 0x290]
	0x03D40FC8 LDR V8, [X31 + 0x58]
	0x03D40FCC ADD W10, W10, 0x1
	0x03D40FD0 LDR X9, [X9]
	0x03D40FD4 STR W10, [X0 + 0x1C]
	0x03D40FD8 CBZ X8, 0x3D41920
	0x03D40FDC LDRSW X10, [X0 + 0x18]
	0x03D40FE0 LDR W11, [X8 + 0x18]
	0x03D40FE4 CMP W10, W11
	0x03D40FE8 B.CS 0x3D4104C
	0x03D40FEC LDR V0, [X29 + 0xBC]
	0x03D40FF0 LDR V2, [X31 + 0x34]
	0x03D40FF4 LDR V1, [X31 + 0x38]
	0x03D40FF8 ADD W9, W10, 0x1
	0x03D40FFC ADD X8, X8, X10, 0x5, LSL
	0x03D41000 STR W9, [X0 + 0x18]
	0x03D41004 STP S2, S1, [X8 + 0x20]
	0x03D41008 STP S8, S11, [X8 + 0x28]
	0x03D4100C STR V0, [X8 + 0x3]
	0x03D41010 B 0x3D41080
	0x03D41014 LDR X8, [X9 + 0x20]
	0x03D41018 LDR V1, [X31 + 0x34]
	0x03D4101C LDR V0, [X29 + 0xBC]
	0x03D41020 ADD X1, X31, 0x180
	0x03D41024 LDR X8, [X8 + 0xC0]
	0x03D41028 LDR X2, [X8 + 0x70]
	0x03D4102C STR S1, [X31 + 0x180]
	0x03D41030 LDR V1, [X31 + 0x38]
	0x03D41034 STR S14, [X31 + 0x188]
	0x03D41038 STR S11, [X31 + 0x18C]
	0x03D4103C STR V0, [X31 + 0x19]
	0x03D41040 STR S1, [X31 + 0x184]
	0x03D41044 BL 0x315E62C
	0x03D41048 B 0x3D41254
	0x03D4104C LDR X8, [X9 + 0x20]
	0x03D41050 LDR V1, [X31 + 0x34]
	0x03D41054 LDR V0, [X29 + 0xBC]
	0x03D41058 ADD X1, X31, 0x180
	0x03D4105C LDR X8, [X8 + 0xC0]
	0x03D41060 LDR X2, [X8 + 0x70]
	0x03D41064 STR S1, [X31 + 0x180]
	0x03D41068 LDR V1, [X31 + 0x38]
	0x03D4106C STR S8, [X31 + 0x188]
	0x03D41070 STR S11, [X31 + 0x18C]
	0x03D41074 STR V0, [X31 + 0x19]
	0x03D41078 STR S1, [X31 + 0x184]
	0x03D4107C BL 0x315E62C
	0x03D41080 CMP W25, 0x1
	0x03D41084 FCSEL S9, S11, S8, EQ
	0x03D41088 SUBS W21, W27, 0x2
	0x03D4108C B.LT 0x3D41254
	0x03D41090 LDR V0, [X31 + 0x34]
	0x03D41094 LDR V1, [X31 + 0x20]
	0x03D41098 CMP W25, 0x1
	0x03D4109C LDR X8, [X20 + 0xF0]
	0x03D410A0 FCSEL S15, S0, S1, EQ
	0x03D410A4 LDR V0, [X31 + 0x38]
	0x03D410A8 LDR V1, [X31 + 0x24]
	0x03D410AC FCSEL S12, S1, S0, EQ
	0x03D410B0 CBZ X8, 0x3D41920
	0x03D410B4 LDR W9, [X8 + 0x18]
	0x03D410B8 CMP X25, X9
	0x03D410BC B.CS 0x3D41924
	0x03D410C0 ADD X8, X8, X25, 0x3, LSL
	0x03D410C4 LDR X0, [X8 + 0x20]
	0x03D410C8 CBZ X0, 0x3D41920
	0x03D410CC ADRP X9, 0x424000
	0x03D410D0 LDR W10, [X0 + 0x1C]
	0x03D410D4 LDR X8, [X0 + 0x10]
	0x03D410D8 LDR X9, [X9 + 0x290]
	0x03D410DC LDP S10, S8, [X31 + 0x40]
	0x03D410E0 LDR V14, [X31 + 0x58]
	0x03D410E4 ADD W10, W10, 0x1
	0x03D410E8 LDR X9, [X9]
	0x03D410EC STR W10, [X0 + 0x1C]
	0x03D410F0 CBZ X8, 0x3D41920
	0x03D410F4 LDRSW X10, [X0 + 0x18]
	0x03D410F8 LDR W11, [X8 + 0x18]
	0x03D410FC CMP W10, W11
	0x03D41100 B.CS 0x3D41124
	0x03D41104 LDR V0, [X29 + 0xBC]
	0x03D41108 ADD W9, W10, 0x1
	0x03D4110C ADD X8, X8, X10, 0x5, LSL
	0x03D41110 STR W9, [X0 + 0x18]
	0x03D41114 STP S15, S12, [X8 + 0x20]
	0x03D41118 STP S14, S11, [X8 + 0x28]
	0x03D4111C STR V0, [X8 + 0x3]
	0x03D41120 B 0x3D41150
	0x03D41124 LDR X8, [X9 + 0x20]
	0x03D41128 LDR V0, [X29 + 0xBC]
	0x03D4112C ADD X1, X31, 0x180
	0x03D41130 LDR X8, [X8 + 0xC0]
	0x03D41134 LDR X2, [X8 + 0x70]
	0x03D41138 STR S15, [X31 + 0x180]
	0x03D4113C STR S12, [X31 + 0x184]
	0x03D41140 STR S14, [X31 + 0x188]
	0x03D41144 STR S11, [X31 + 0x18C]
	0x03D41148 STR V0, [X31 + 0x19]
	0x03D4114C BL 0x315E62C
	0x03D41150 CMP W25, 0x1
	0x03D41154 FCSEL S9, S10, S8, EQ
	0x03D41158 CMP W27, 0x3
	0x03D4115C B.LT 0x3D41254
	0x03D41160 MOV W8, W27
	0x03D41164 CMP W25, 0x1
	0x03D41168 SCVTF S0, W8
	0x03D4116C FCSEL S2, S11, S14, EQ
	0x03D41170 SUB W8, W8, 0x1
	0x03D41174 FCSEL S1, S10, S8, EQ
	0x03D41178 FMUL S0, S2, S0
	0x03D4117C SCVTF S3, W8
	0x03D41180 FSUB S0, S1, S0
	0x03D41184 FDIV S0, S0, S3
	0x03D41188 MOV W27, W31
	0x03D4118C FADD S10, S11, S0
	0x03D41190 FADD S13, S14, S0
	0x03D41194 ADD W27, W27, 0x1
	0x03D41198 LDR X8, [X20 + 0xF0]
	0x03D4119C SCVTF S0, W27
	0x03D411A0 FMUL S1, S10, S0
	0x03D411A4 FMUL S0, S13, S0
	0x03D411A8 CMP W25, 0x1
	0x03D411AC FCSEL S15, S15, S0, EQ
	0x03D411B0 FCSEL S12, S1, S12, EQ
	0x03D411B4 CBZ X8, 0x3D41920
	0x03D411B8 LDR W9, [X8 + 0x18]
	0x03D411BC CMP X25, X9
	0x03D411C0 B.CS 0x3D41924
	0x03D411C4 ADD X8, X8, X25, 0x3, LSL
	0x03D411C8 LDR X0, [X8 + 0x20]
	0x03D411CC CBZ X0, 0x3D41920
	0x03D411D0 ADRP X9, 0x424000
	0x03D411D4 LDR W10, [X0 + 0x1C]
	0x03D411D8 LDR X8, [X0 + 0x10]
	0x03D411DC LDR X9, [X9 + 0x290]
	0x03D411E0 ADD W10, W10, 0x1
	0x03D411E4 LDR X9, [X9]
	0x03D411E8 STR W10, [X0 + 0x1C]
	0x03D411EC CBZ X8, 0x3D41920
	0x03D411F0 LDRSW X10, [X0 + 0x18]
	0x03D411F4 LDR W11, [X8 + 0x18]
	0x03D411F8 CMP W10, W11
	0x03D411FC B.CS 0x3D41220
	0x03D41200 LDR V0, [X29 + 0xBC]
	0x03D41204 ADD W9, W10, 0x1
	0x03D41208 ADD X8, X8, X10, 0x5, LSL
	0x03D4120C STR W9, [X0 + 0x18]
	0x03D41210 STP S15, S12, [X8 + 0x20]
	0x03D41214 STP S14, S11, [X8 + 0x28]
	0x03D41218 STR V0, [X8 + 0x3]
	0x03D4121C B 0x3D4124C
	0x03D41220 LDR X8, [X9 + 0x20]
	0x03D41224 LDR V0, [X29 + 0xBC]
	0x03D41228 ADD X1, X31, 0x180
	0x03D4122C LDR X8, [X8 + 0xC0]
	0x03D41230 LDR X2, [X8 + 0x70]
	0x03D41234 STR S15, [X31 + 0x180]
	0x03D41238 STR S12, [X31 + 0x184]
	0x03D4123C STR S14, [X31 + 0x188]
	0x03D41240 STR S11, [X31 + 0x18C]
	0x03D41244 STR V0, [X31 + 0x19]
	0x03D41248 BL 0x315E62C
	0x03D4124C CMP W27, W21
	0x03D41250 B.LT 0x3D41194
	0x03D41254 LDR W9, [X31 + 0x54]
	0x03D41258 CBZ W9, 0x3D412A8
	0x03D4125C LDP S13, S10, [X31 + 0x40]
	0x03D41260 LDR V14, [X31 + 0x58]
	0x03D41264 CMP W24, 0x1
	0x03D41268 FMOV S12, W31
	0x03D4126C B.EQ 0x3D414A4
	0x03D41270 LDR W8, [X31 + 0x48]
	0x03D41274 CBZ W8, 0x3D412C8
	0x03D41278 LDR V3, [X31 + 0x4C]
	0x03D4127C CMP W8, 0x1
	0x03D41280 B.NE 0x3D412D0
	0x03D41284 LDP S2, S1, [X31 + 0x20]
	0x03D41288 ANDS W31, W22, 0x1
	0x03D4128C MOVZ W8, 0x42C80000
	0x03D41290 FMOV S0, W8
	0x03D41294 FCSEL S1, S1, S2, NE
	0x03D41298 FMUL S1, S3, S1
	0x03D4129C FDIV S12, S1, S0
	0x03D412A0 MOVZ W8, 0x1
	0x03D412A4 B 0x3D412D8
	0x03D412A8 LDP S13, S10, [X31 + 0x40]
	0x03D412AC ANDS W31, W22, 0x1
	0x03D412B0 LDR V14, [X31 + 0x58]
	0x03D412B4 FMOV S1, 0.5
	0x03D412B8 FCSEL S0, S13, S10, NE
	0x03D412BC FSUB S0, S0, S9
	0x03D412C0 FMUL S12, S0, S1
	0x03D412C4 B 0x3D41304
	0x03D412C8 LDR V12, [X31 + 0x4C]
	0x03D412CC B 0x3D412D8
	0x03D412D0 MOV W8, W31
	0x03D412D4 FMOV S12, W31
	0x03D412D8 CMP W9, 0x4
	0x03D412DC B.EQ 0x3D412E8
	0x03D412E0 CMP W9, 0x2
	0x03D412E4 B.NE 0x3D41300
	0x03D412E8 ANDS W31, W22, 0x1
	0x03D412EC FCSEL S0, S13, S10, NE
	0x03D412F0 FSUB S0, S0, S9
	0x03D412F4 FSUB S12, S0, S12
	0x03D412F8 TBNZ X8, 0x0, 0x3D41304
	0x03D412FC B 0x3D41410
	0x03D41300 CBZ W8, 0x3D41410
	0x03D41304 ADRP X8, 0x3B2000
	0x03D41308 LDR X8, [X8 + 0x598]
	0x03D4130C LDR X21, [X19 + 0x80]
	0x03D41310 LDR X0, [X8]
	0x03D41314 LDR W8, [X0 + 0xE0]
	0x03D41318 CBNZ W8, 0x3D41320
	0x03D4131C BL 0x1C16DFC
	0x03D41320 MOV X0, X21
	0x03D41324 MOV X1, X31
	0x03D41328 MOV X2, X31
	0x03D4132C BL 0x3C3883C
	0x03D41330 TBZ X0, 0x0, 0x3D41410
	0x03D41334 ADRP X8, 0x3B2000
	0x03D41338 LDR X8, [X8 + 0x598]
	0x03D4133C LDR X21, [X19 + 0x88]
	0x03D41340 LDR X0, [X8]
	0x03D41344 LDR W8, [X0 + 0xE0]
	0x03D41348 CBNZ W8, 0x3D41350
	0x03D4134C BL 0x1C16DFC
	0x03D41350 MOV X0, X21
	0x03D41354 MOV X1, X31
	0x03D41358 MOV X2, X31
	0x03D4135C BL 0x3C3883C
	0x03D41360 TBZ X0, 0x0, 0x3D41410
	0x03D41364 LDR V1, [X31 + 0x2C]
	0x03D41368 ANDS W31, W22, 0x1
	0x03D4136C FCSEL S0, S11, S14, NE
	0x03D41370 ADD X0, X31, 0x180
	0x03D41374 FMUL S8, S0, S1
	0x03D41378 FCVT S0, S8
	0x03D4137C BL 0x3EB1C00
	0x03D41380 FCMP S8, 0x0
	0x03D41384 B.GE 0x3D413A0
	0x03D41388 FMOV D1, -0.5
	0x03D4138C FCMP D0, D1
	0x03D41390 B.NE 0x3D413CC
	0x03D41394 LDR V0, [X31 + 0x180]
	0x03D41398 FMOV S1, -1
	0x03D4139C B 0x3D413B4
	0x03D413A0 FMOV D1, 0.5
	0x03D413A4 FCMP D0, D1
	0x03D413A8 B.NE 0x3D413DC
	0x03D413AC LDR V0, [X31 + 0x180]
	0x03D413B0 FMOV S1, 1
	0x03D413B4 FCVTZS X8, D0
	0x00000000 INVALID
	0x03D413BC FADD S1, S0, S1
	0x03D413C0 ANDS X31, X8, 0x1
	0x03D413C4 FCSEL S0, S0, S1, EQ
	0x03D413C8 B 0x3D413E8
	0x03D413CC FMOV S0, -0.5
	0x03D413D0 FADD S0, S8, S0
	0x03D413D4 FRINTP S0, S0
	0x03D413D8 B 0x3D413E8
	0x03D413DC FMOV S0, 0.5
	0x03D413E0 FADD S0, S8, S0
	0x03D413E4 FRINTM S0, S0
	0x03D413E8 LDR V1, [X31 + 0x1C]
	0x03D413EC FABD S0, S0, S0
	0x03D413F0 FCMP S0, S1
	0x03D413F4 B.PL 0x3D41410
	0x03D413F8 LDR V1, [X31 + 0x2C]
	0x03D413FC LDR V2, [X31 + 0x18]
	0x03D41400 MOV V0.16B, V12.16B
	0x03D41404 MOV X0, X31
	0x03D41408 BL 0x3CE815C
	0x03D4140C MOV V12.16B, V0.16B
	0x03D41410 AND W8, W24, 0xFFFFFFFE
	0x03D41414 CMP W8, 0x2
	0x03D41418 B.NE 0x3D414A4
	0x03D4141C LDR V1, [X31 + 0x30]
	0x03D41420 ANDS W31, W22, 0x1
	0x03D41424 FCSEL S0, S11, S14, NE
	0x03D41428 FCMP S0, S1
	0x03D4142C B.LE 0x3D414A4
	0x03D41430 FNEG S1, S0
	0x03D41434 FCMP S12, S1
	0x03D41438 B.PL 0x3D4146C
	0x03D4143C FNEG S1, S12
	0x03D41440 MOVZ W8, 0x7F800000
	0x03D41444 FDIV S1, S1, S0
	0x03D41448 FMOV S2, W8
	0x03D4144C FCVTZS W8, S1
	0x03D41450 SCVTF S3, W8
	0x03D41454 MOVZ W8, 0xCF000000
	0x03D41458 FCMP S1, S2
	0x03D4145C FMOV S1, W8
	0x03D41460 FCSEL S1, S1, S3, EQ
	0x03D41464 FMUL S1, S0, S1
	0x03D41468 FADD S12, S12, S1
	0x03D4146C FCMP S12, 0x0
	0x03D41470 B.LE 0x3D414A4
	0x03D41474 FDIV S1, S12, S0
	0x03D41478 MOVZ W8, 0x7F800000
	0x03D4147C FMOV S2, W8
	0x03D41480 FCVTZS W8, S1
	0x03D41484 ADD W8, W8, 0x1
	0x03D41488 SCVTF S3, W8
	0x03D4148C MOVZ W8, 0xCF000000
	0x03D41490 FCMP S1, S2
	0x03D41494 FMOV S1, W8
	0x03D41498 FCSEL S1, S1, S3, EQ
	0x03D4149C FMUL S0, S0, S1
	0x03D414A0 FSUB S12, S12, S0
	0x03D414A4 LDR X8, [X20 + 0xF0]
	0x03D414A8 CBZ X8, 0x3D41920
	0x03D414AC MOV W21, W31
	0x03D414B0 LDR W9, [X8 + 0x18]
	0x03D414B4 CMP X25, X9
	0x03D414B8 B.CS 0x3D41924
	0x03D414BC ADD X10, X8, X25, 0x3, LSL
	0x03D414C0 LDR X0, [X10 + 0x20]
	0x03D414C4 CBZ X0, 0x3D41920
	0x03D414C8 LDR W10, [X0 + 0x18]
	0x03D414CC CMP W21, W10
	0x03D414D0 B.GE 0x3D41578
	0x03D414D4 LDR X2, [X23]
	0x03D414D8 ADD X8, X31, 0x180
	0x03D414DC MOV W1, W21
	0x03D414E0 BL 0x315E2D8
	0x03D414E4 LDR V0, [X28]
	0x03D414E8 LDR X8, [X28 + 0x10]
	0x03D414EC LDR V1, [X31 + 0x184]
	0x03D414F0 LDR V2, [X31 + 0x180]
	0x03D414F4 STR V0, [X31 + 0x24]
	0x03D414F8 STR X8, [X31 + 0x250]
	0x03D414FC LDR X8, [X20 + 0xF0]
	0x03D41500 FADD S0, S12, S1
	0x03D41504 FADD S3, S12, S2
	0x03D41508 ANDS W31, W22, 0x1
	0x03D4150C FCSEL S0, S0, S1, NE
	0x03D41510 FCSEL S1, S2, S3, NE
	0x03D41514 CBZ X8, 0x3D41920
	0x03D41518 LDR W9, [X8 + 0x18]
	0x03D4151C CMP X25, X9
	0x03D41520 B.CS 0x3D41924
	0x03D41524 ADD X8, X8, X25, 0x3, LSL
	0x03D41528 LDR V2, [X31 + 0x24]
	0x03D4152C LDR X0, [X8 + 0x20]
	0x03D41530 LDR X8, [X31 + 0x250]
	0x03D41534 STR V2, [X31 + 0x22]
	0x03D41538 STR X8, [X31 + 0x230]
	0x03D4153C CBZ X0, 0x3D41920
	0x03D41540 LDR X3, [X26]
	0x03D41544 LDR X8, [X31 + 0x230]
	0x03D41548 LDR V2, [X31 + 0x22]
	0x03D4154C ADD X2, X31, 0x180
	0x03D41550 MOV W1, W21
	0x03D41554 STR S1, [X31 + 0x180]
	0x03D41558 STR S0, [X31 + 0x184]
	0x03D4155C STR X8, [X28 + 0x10]
	0x03D41560 STR V2, [X28]
	0x03D41564 BL 0x315E338
	0x03D41568 LDR X8, [X20 + 0xF0]
	0x03D4156C ADD W21, W21, 0x1
	0x03D41570 CBNZ X8, 0x3D414B0
	0x03D41574 B 0x3D41920
	0x03D41578 LDR W11, [X31 + 0x50]
	0x03D4157C MOV W10, W31
	0x03D41580 MOVZ W22, 0x1
	0x03D41584 MOVZ W25, 0x1
	0x03D41588 TBNZ X11, 0x0, 0x3D40BD4
	0x03D4158C CMP W9, 0x1
	0x03D41590 B.LS 0x3D41924
	0x03D41594 LDR X0, [X8 + 0x28]
	0x03D41598 LDR V8, [X31 + 0x3C]
	0x03D4159C CBZ X0, 0x3D41920
	0x03D415A0 ADRP X24, 0x424000
	0x03D415A4 LDR X24, [X24 + 0x2A0]
	0x03D415A8 ADD X8, X31, 0x180
	0x03D415AC LDR X1, [X24]

ISIL:
	001 Move [X31-128], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X29
	007 Move [X31+48], X30
	008 Move [X31+56], X27
	009 Move [X31+64], X26
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Subtract X31, X31, 2800
	018 Move X20, 0x6A8000
	019 Move W8, [X20+2944]
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0x3DD000
	026 Move X0, [X0+3712]
	027 Call 0x1C17CF4
	028 Move X0, 0x3DD000
	029 Move X0, [X0+288]
	030 Call 0x1C17CF4
	031 Move X0, 0x3B4000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move X0, 0x3DD000
	035 Move X0, [X0+3736]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+2944], W8
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Add X0, X31, 2400
	041 Move W2, 288
	042 Move W1, W31
	043 Move [X31+2784], X31
	044 Move [X31+173], V0
	045 Move [X31+172], V0
	046 Move [X31+171], V0
	047 Move [X31+170], V0
	048 Move [X31+169], V0
	049 Move [X31+2696], X31
	050 Move [X31+2688], X31
	051 Call 0x3EB2B10
	052 NotImplemented "Instruction MOVI not yet implemented."
	053 Add X0, X31, 2080
	054 Move W2, 288
	055 Move W1, W31
	056 Move [X31+149], V0
	057 Move [X31+148], V0
	058 Call 0x3EB2B10
	059 Add X0, X31, 1792
	060 Move W2, 288
	061 Move W1, W31
	062 Call 0x3EB2B10
	063 Add X0, X31, 1504
	064 Move W2, 288
	065 Move W1, W31
	066 Call 0x3EB2B10
	067 Move [X31+1500], W31
	068 Move [X31+1496], W31
	069 Move X0, [X19+272]
	070 Compare X0, 0
	071 JumpIfEqual {1166}
	072 Move X1, X31
	073 Call VisualElement.get_layout, X0
	074 Move X8, -52781056
	075 Move V8, [X8+3996]
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 Add X25, X19, 272
	078 Move X0, [X25]
	079 Compare X0, 0
	080 JumpIfEqual {1166}
	081 Move X1, X31
	082 Call VisualElement.get_layout, X0
	083 NotImplemented "Instruction FCMP not yet implemented."
	084 Move X0, [X25]
	085 Compare X0, 0
	086 JumpIfEqual {1166}
	087 Move X1, X31
	088 Call VisualElement.get_computedStyle, X0
	089 Move X1, X0
	090 Add X0, X31, 2704
	091 Move W2, 88
	092 Call 0x3EB2B30
	093 Add X0, X31, 2704
	094 Move X1, X31
	095 Call ComputedStyle.get_backgroundColor, X0
	096 NotImplemented "Instruction FCMP not yet implemented."
	097 Add X8, X31, 1792
	098 Add X0, X8, 16
	099 Move W2, 272
	100 Move W1, W31
	101 Call 0x3EB2B10
	102 Move X0, [X25]
	103 Compare X0, 0
	104 JumpIfEqual {1166}
	105 Move X1, X31
	106 Call VisualElement.get_rect, X0
	107 Add X0, X31, 2704
	108 Move X1, X31
	109 Move [X31+1792], S0
	110 Move [X31+1796], S1
	111 Move [X31+1800], S2
	112 Move [X31+1804], S3
	113 Call ComputedStyle.get_backgroundColor, X0
	114 Move [X31+1824], S0
	115 Move [X31+1828], S1
	116 Move [X31+1832], S2
	117 Move [X31+1836], S3
	118 Move X8, [X25]
	119 Compare X8, 0
	120 JumpIfEqual {1166}
	121 Move X0, [X19+16]
	122 Move X1, [X8+384]
	123 Move X2, X31
	124 Call ColorPage.Init, X0, X1
	125 Move [X31+2064], X0
	126 Move X0, [X19+272]
	127 Compare X0, 0
	128 JumpIfEqual {1166}
	129 Move X1, X31
	130 Call VisualElement.get_panel, X0
	131 Compare X0, 0
	132 JumpIfEqual {1166}
	133 Move X10, 0x3DD000
	134 Move X8, [X0]
	135 Move X10, [X10+3712]
	136 Move X20, X0
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Move X1, [X10]
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move W2, 2
	148 Move X0, X20
	149 Call 0x1C5D788
	150 Move W9, [X10]
	151 Add W9, W9, 2
	152 Add X8, X8, W9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X1, [X0+8]
	156 Move X0, X20
	157 NotImplemented "Instruction BLR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X20, 0x3DD000
	160 Move X20, [X20+3736]
	161 Move X0, [X20]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {167}
	165 Call 0x1C17DFC
	166 Move X0, [X20]
	167 Move X8, [X0+184]
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 Move V0, 0
	170 Add X8, X31, 1693
	171 Add X0, X31, 2080
	172 Add X1, X31, 1792
	173 Move W2, 288
	174 Move [X8+255], V0
	175 Add X20, X31, 2080
	176 Call 0x3EB2AC0
	177 Move X0, [X19+272]
	178 Add X1, X20, 172
	179 Add X2, X20, 196
	180 Add X3, X20, 180
	181 Add X4, X20, 188
	182 Move X5, X31
	183 Call MeshGenerationContextUtils.GetVisualElementRadii, X0, X1, X2, X3, X4
	184 Move X0, [X19+272]
	185 Add X1, X31, 2080
	186 Move X2, X31
	187 Call MeshGenerationContextUtils.AdjustBackgroundSizeForBorders, X0, X1
	188 Add X0, X31, 1208
	189 Add X1, X31, 2080
	190 Move W2, 288
	191 Call 0x3EB2AC0
	192 Add X1, X31, 1208
	193 Move X0, X19
	194 Call UIRStylePainter.DrawRectangle, X0, X1
	195 Add X0, X31, 2704
	196 Move X1, X31
	197 Add X26, X31, 920
	198 Call ComputedStyle.get_unitySliceLeft, X0
	199 Move W20, W0
	200 Add X0, X31, 2704
	201 Move X1, X31
	202 Call ComputedStyle.get_unitySliceTop, X0
	203 Move W21, W0
	204 Add X0, X31, 2704
	205 Move X1, X31
	206 Call ComputedStyle.get_unitySliceRight, X0
	207 Move W22, W0
	208 Add X0, X31, 2704
	209 Move X1, X31
	210 Call ComputedStyle.get_unitySliceBottom, X0
	211 NotImplemented "Instruction SCVTF not yet implemented."
	212 NotImplemented "Instruction SCVTF not yet implemented."
	213 NotImplemented "Instruction SCVTF not yet implemented."
	214 NotImplemented "Instruction SCVTF not yet implemented."
	215 Add X0, X31, 2400
	216 Move W2, 288
	217 Move W1, W31
	218 Move [X31+2688], S0
	219 Move [X31+2692], S1
	220 Move [X31+2696], S2
	221 Move [X31+2700], S3
	222 Add X20, X31, 2400
	223 Call 0x3EB2B10
	224 Move X0, [X25]
	225 Add X1, X20, 172
	226 Add X2, X20, 196
	227 Add X3, X20, 180
	228 Add X4, X20, 188
	229 Move X5, X31
	230 Call MeshGenerationContextUtils.GetVisualElementRadii, X0, X1, X2, X3, X4
	231 Add X8, X31, 920
	232 Add X0, X31, 2704
	233 Move X1, X31
	234 Call ComputedStyle.get_backgroundImage, X0
	235 Move V0, [X26]
	236 Move V1, [X26+16]
	237 Add X0, X31, 2368
	238 Move X1, X31
	239 Move [X31+148], V0
	240 Move [X31+149], V1
	241 Call Background.get_texture, X0
	242 Move X27, 0x3B4000
	243 Move X27, [X27+1432]
	244 Move X20, X0
	245 Move X8, [X27]
	246 Move W9, [X8+224]
	247 Compare W9, 0
	248 JumpIfNotEqual {251}
	249 Move X0, X8
	250 Call 0x1C17DFC
	251 Move X0, X20
	252 Move X1, X31
	253 Move X2, X31
	254 Call Object.op_Inequality, X0, X1
	255 Move TEMP, X0
	256 And TEMP, TEMP, 1
	257 Compare TEMP, 1
	258 JumpIfEqual {313}
	259 Add X0, X31, 2368
	260 Move X1, X31
	261 Call Background.get_sprite, X0
	262 Move X8, [X27]
	263 Move X20, X0
	264 Move W9, [X8+224]
	265 Compare W9, 0
	266 JumpIfNotEqual {269}
	267 Move X0, X8
	268 Call 0x1C17DFC
	269 Move X0, X20
	270 Move X1, X31
	271 Move X2, X31
	272 Call Object.op_Inequality, X0, X1
	273 Move TEMP, X0
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfEqual {313}
	277 Add X0, X31, 2368
	278 Move X1, X31
	279 Call Background.get_vectorImage, X0
	280 Move X8, [X27]
	281 Move X20, X0
	282 Move W9, [X8+224]
	283 Compare W9, 0
	284 JumpIfNotEqual {287}
	285 Move X0, X8
	286 Call 0x1C17DFC
	287 Move X0, X20
	288 Move X1, X31
	289 Move X2, X31
	290 Call Object.op_Inequality, X0, X1
	291 Move TEMP, X0
	292 And TEMP, TEMP, 1
	293 Compare TEMP, 1
	294 JumpIfEqual {313}
	295 Add X0, X31, 2368
	296 Move X1, X31
	297 Call Background.get_renderTexture, X0
	298 Move X8, [X27]
	299 Move X20, X0
	300 Move W9, [X8+224]
	301 Compare W9, 0
	302 JumpIfNotEqual {305}
	303 Move X0, X8
	304 Call 0x1C17DFC
	305 Move X0, X20
	306 Move X1, X31
	307 Move X2, X31
	308 Call Object.op_Inequality, X0, X1
	309 Move TEMP, X0
	310 And TEMP, TEMP, 1
	311 Compare TEMP, 1
	312 JumpIfNotEqual {1116}
	313 Add X0, X31, 1504
	314 Move W2, 288
	315 Move W1, W31
	316 Call 0x3EB2B10
	317 Move X0, [X25]
	318 Compare X0, 0
	319 JumpIfEqual {1166}
	320 Move X1, X31
	321 Call VisualElement.get_resolvedStyle, X0
	322 Compare X0, 0
	323 JumpIfEqual {1166}
	324 Move X10, 0x3DD000
	325 Move X8, [X0]
	326 Move X10, [X10+288]
	327 Move X20, X0
	328 NotImplemented "Instruction LDRH not yet implemented."
	329 Move X1, [X10]
	330 Compare X9, 0
	331 JumpIfEqual {338}
	332 Move X10, [X8+176]
	333 Add X10, X10, 8
	334 NotImplemented "Instruction LDUR not yet implemented."
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Subtract X9, X9, 1
	337 Add X10, X10, 16
	338 Move W2, 40
	339 Move X0, X20
	340 Call 0x1C5D788
	341 Move W9, [X10]
	342 Add W9, W9, 40
	343 Add X8, X8, W9
	344 Add X0, X8, 312
	345 Move X8, [X0]
	346 Move X1, [X0+8]
	347 Move X0, X20
	348 NotImplemented "Instruction BLR not yet implemented."
	349 Add X0, X31, 2368
	350 Move X1, X31
	351 Move V8, V0
	352 Call Background.get_texture, X0
	353 Move X8, [X27]
	354 Move X20, X0
	355 Move W9, [X8+224]
	356 Compare W9, 0
	357 JumpIfNotEqual {360}
	358 Move X0, X8
	359 Call 0x1C17DFC
	360 Move X0, X20
	361 Move X1, X31
	362 Move X2, X31
	363 Call Object.op_Inequality, X0, X1
	364 Move TEMP, X0
	365 And TEMP, TEMP, 1
	366 Compare TEMP, 1
	367 JumpIfNotEqual {403}
	368 Move X0, [X25]
	369 Compare X0, 0
	370 JumpIfEqual {1166}
	371 Move X1, X31
	372 Call VisualElement.get_rect, X0
	373 Add X0, X31, 2368
	374 Move X1, X31
	375 Move V9, V0
	376 Move V10, V1
	377 Move V11, V2
	378 Move V12, V3
	379 Call Background.get_texture, X0
	380 Move X8, [X25]
	381 Compare X8, 0
	382 JumpIfEqual {1166}
	383 Move X20, X0
	384 Move X0, X8
	385 Move X1, X31
	386 Call VisualElement.get_panel, X0
	387 Compare X0, 0
	388 JumpIfEqual {1166}
	389 Move X10, 0x3DD000
	390 Move X8, [X0]
	391 Move X10, [X10+3712]
	392 Move X21, X0
	393 NotImplemented "Instruction LDRH not yet implemented."
	394 Move X1, [X10]
	395 Compare X9, 0
	396 JumpIfEqual {551}
	397 Move X10, [X8+176]
	398 Add X10, X10, 8
	399 NotImplemented "Instruction LDUR not yet implemented."
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Subtract X9, X9, 1
	402 Add X10, X10, 16
	403 Add X0, X31, 2368
	404 Move X1, X31
	405 Call Background.get_sprite, X0
	406 Move X8, [X27]
	407 Move X20, X0
	408 Move W9, [X8+224]
	409 Compare W9, 0
	410 JumpIfNotEqual {413}
	411 Move X0, X8
	412 Call 0x1C17DFC
	413 Move X0, X20
	414 Move X1, X31
	415 Move X2, X31
	416 Call Object.op_Inequality, X0, X1
	417 Move TEMP, X0
	418 And TEMP, TEMP, 1
	419 Compare TEMP, 1
	420 JumpIfNotEqual {498}
	421 Add X0, X31, 2704
	422 Move X1, X31
	423 Call ComputedStyle.get_backgroundPositionX, X0
	424 Move X20, X0
	425 Move X21, X1
	426 Add X0, X31, 2704
	427 Move X1, X31
	428 Call ComputedStyle.get_backgroundPositionY, X0
	429 Move X22, X0
	430 Move X23, X1
	431 Add X0, X31, 2704
	432 Move X1, X31
	433 Call ComputedStyle.get_backgroundRepeat, X0
	434 Move X24, X0
	435 Add X8, X31, 920
	436 Add X0, X31, 2704
	437 Move X1, X31
	438 Call ComputedStyle.get_backgroundSize, X0
	439 Move V0, [X26]
	440 Move W8, [X31+936]
	441 And X1, X21, 0
	442 And X3, X23, 0
	443 Add X5, X31, 896
	444 Add X6, X31, 1500
	445 Move X0, X20
	446 Move X2, X22
	447 Move X4, X24
	448 Move X7, X31
	449 Move [X31+56], V0
	450 Move [X31+912], W8
	451 Call BackgroundPropertyHelper.ResolveUnityBackgroundScaleMode, X0, X1, X2, X3, X4
	452 Move W8, [X31+1500]
	453 Move W22, W0
	454 Move X0, [X25]
	455 NotImplemented "Instruction CMP not yet implemented."
	456 NotImplemented "Instruction CSET not yet implemented."
	457 NotImplemented "Instruction CMP not yet implemented."
	458 NotImplemented "Instruction CSET not yet implemented."
	459 Compare X0, 0
	460 JumpIfEqual {1166}
	461 Move X1, X31
	462 Or W20, W9, W8
	463 Call VisualElement.get_rect, X0
	464 Add X0, X31, 2368
	465 Move X1, X31
	466 Move V9, V0
	467 Move V10, V1
	468 Move V11, V2
	469 Move V12, V3
	470 Call Background.get_sprite, X0
	471 Move X21, X0
	472 Move X0, [X25]
	473 NotImplemented "Instruction CMP not yet implemented."
	474 NotImplemented "Instruction CSEL not yet implemented."
	475 Compare X0, 0
	476 JumpIfEqual {1166}
	477 Move X1, X31
	478 Call VisualElement.get_panel, X0
	479 Compare X0, 0
	480 JumpIfEqual {1166}
	481 Move X10, 0x3DD000
	482 Move X8, [X0]
	483 Move X10, [X10+3712]
	484 Move X23, X0
	485 NotImplemented "Instruction LDRH not yet implemented."
	486 Move X1, [X10]
	487 Compare X9, 0
	488 JumpIfEqual {495}
	489 Move X10, [X8+176]
	490 Add X10, X10, 8
	491 NotImplemented "Instruction LDUR not yet implemented."
	492 NotImplemented "Instruction CMP not yet implemented."
	493 Subtract X9, X9, 1
	494 Add X10, X10, 16
	495 Move W2, 2
	496 Move X0, X23
	497 Call 0x1C5D788
	498 Add X0, X31, 2368
	499 Move X1, X31
	500 Call Background.get_renderTexture, X0
	501 Move X8, [X27]
	502 Move X20, X0
	503 Move W9, [X8+224]
	504 Compare W9, 0
	505 JumpIfNotEqual {508}
	506 Move X0, X8
	507 Call 0x1C17DFC
	508 Move X0, X20
	509 Move X1, X31
	510 Move X2, X31
	511 Call Object.op_Inequality, X0, X1
	512 Move TEMP, X0
	513 And TEMP, TEMP, 1
	514 Compare TEMP, 1
	515 JumpIfNotEqual {601}
	516 Move X0, [X25]
	517 Compare X0, 0
	518 JumpIfEqual {1166}
	519 Move X1, X31
	520 Call VisualElement.get_rect, X0
	521 Add X0, X31, 2368
	522 Move X1, X31
	523 Move V9, V0
	524 Move V10, V1
	525 Move V11, V2
	526 Move V12, V3
	527 Call Background.get_renderTexture, X0
	528 Move X8, [X25]
	529 Compare X8, 0
	530 JumpIfEqual {1166}
	531 Move X20, X0
	532 Move X0, X8
	533 Move X1, X31
	534 Call VisualElement.get_panel, X0
	535 Compare X0, 0
	536 JumpIfEqual {1166}
	537 Move X10, 0x3DD000
	538 Move X8, [X0]
	539 Move X10, [X10+3712]
	540 Move X21, X0
	541 NotImplemented "Instruction LDRH not yet implemented."
	542 Move X1, [X10]
	543 Compare X9, 0
	544 JumpIfEqual {551}
	545 Move X10, [X8+176]
	546 Add X10, X10, 8
	547 NotImplemented "Instruction LDUR not yet implemented."
	548 NotImplemented "Instruction CMP not yet implemented."
	549 Subtract X9, X9, 1
	550 Add X10, X10, 16
	551 Move W2, 2
	552 Move X0, X21
	553 Call 0x1C5D788
	554 Move W9, [X10]
	555 Add W9, W9, 2
	556 Add X8, X8, W9
	557 Add X0, X8, 312
	558 Move X8, [X0]
	559 Move X1, [X0+8]
	560 Move X0, X21
	561 NotImplemented "Instruction BLR not yet implemented."
	562 Move W2, W0
	563 Add X8, X31, 920
	564 Move S4, W31
	565 Move S5, W31
	566 Move S6, 1
	567 Move S7, 1
	568 Move W1, 2
	569 Move V0, V9
	570 Move V1, V10
	571 Move V2, V11
	572 Move V3, V12
	573 Move X0, X20
	574 Move X3, X31
	575 Call RectangleParams.MakeTextured, X0, X1, X2, X3, X4
	576 Add X0, X31, 1504
	577 Add X1, X31, 920
	578 Move W2, 288
	579 Call 0x3EB2AC0
	580 Move X0, [X31+1624]
	581 Compare X0, 0
	582 JumpIfEqual {1166}
	583 Move X8, [X0]
	584 Move X9, [X8+392]
	585 Move X1, [X8+400]
	586 NotImplemented "Instruction BLR not yet implemented."
	587 Move X8, [X31+1624]
	588 Compare X8, 0
	589 JumpIfEqual {1166}
	590 Move X9, [X8]
	591 Move W20, W0
	592 Move X0, X8
	593 Move X10, [X9+424]
	594 Move X1, [X9+432]
	595 NotImplemented "Instruction BLR not yet implemented."
	596 NotImplemented "Instruction SCVTF not yet implemented."
	597 NotImplemented "Instruction SCVTF not yet implemented."
	598 Move [X31+1504], X31
	599 Move [X31+1512], S0
	600 Move [X31+1516], S1
	601 Add X0, X31, 2368
	602 Move X1, X31
	603 Call Background.get_vectorImage, X0
	604 Move X8, [X27]
	605 Move X20, X0
	606 Move W9, [X8+224]
	607 Compare W9, 0
	608 JumpIfNotEqual {611}
	609 Move X0, X8
	610 Call 0x1C17DFC
	611 Move X0, X20
	612 Move X1, X31
	613 Move X2, X31
	614 Call Object.op_Inequality, X0, X1
	615 Move TEMP, X0
	616 And TEMP, TEMP, 1
	617 Compare TEMP, 1
	618 JumpIfNotEqual {778}
	619 Add X0, X31, 2704
	620 Move X1, X31
	621 Call ComputedStyle.get_backgroundPositionX, X0
	622 Move X20, X0
	623 Move X21, X1
	624 Add X0, X31, 2704
	625 Move X1, X31
	626 Call ComputedStyle.get_backgroundPositionY, X0
	627 Move X22, X0
	628 Move X23, X1
	629 Add X0, X31, 2704
	630 Move X1, X31
	631 Call ComputedStyle.get_backgroundRepeat, X0
	632 Move X24, X0
	633 Add X8, X31, 920
	634 Add X0, X31, 2704
	635 Move X1, X31
	636 Call ComputedStyle.get_backgroundSize, X0
	637 Move V0, [X26]
	638 Move W8, [X31+936]
	639 And X1, X21, 0
	640 And X3, X23, 0
	641 Add X5, X31, 864
	642 Add X6, X31, 1496
	643 Move X0, X20
	644 Move X2, X22
	645 Move X4, X24
	646 Move X7, X31
	647 Move [X31+54], V0
	648 Move [X31+880], W8
	649 Call BackgroundPropertyHelper.ResolveUnityBackgroundScaleMode, X0, X1, X2, X3, X4
	650 Move X8, [X25]
	651 Compare X8, 0
	652 JumpIfEqual {1166}
	653 Move W22, [X31+1496]
	654 Move W21, W0
	655 Move X0, X8
	656 Move X1, X31
	657 Call VisualElement.get_rect, X0
	658 Add X0, X31, 2368
	659 Move X1, X31
	660 Move V9, V0
	661 Move V10, V1
	662 Move V11, V2
	663 Move V12, V3
	664 Call Background.get_vectorImage, X0
	665 Move X20, X0
	666 Move X0, [X25]
	667 NotImplemented "Instruction CMP not yet implemented."
	668 NotImplemented "Instruction CCMP not yet implemented."
	669 NotImplemented "Instruction CSEL not yet implemented."
	670 Compare X0, 0
	671 JumpIfEqual {1166}
	672 Move X1, X31
	673 Call VisualElement.get_panel, X0
	674 Compare X0, 0
	675 JumpIfEqual {1166}
	676 Move X10, 0x3DD000
	677 Move X8, [X0]
	678 Move X10, [X10+3712]
	679 Move X22, X0
	680 NotImplemented "Instruction LDRH not yet implemented."
	681 Move X1, [X10]
	682 Compare X9, 0
	683 JumpIfEqual {690}
	684 Move X10, [X8+176]
	685 Add X10, X10, 8
	686 NotImplemented "Instruction LDUR not yet implemented."
	687 NotImplemented "Instruction CMP not yet implemented."
	688 Subtract X9, X9, 1
	689 Add X10, X10, 16
	690 Move W2, 2
	691 Move X0, X22
	692 Call 0x1C5D788
	693 Move W9, [X10]
	694 Add W9, W9, 2
	695 Add X8, X8, W9
	696 Add X0, X8, 312
	697 Move X8, [X0]
	698 Move X1, [X0+8]
	699 Move X0, X23
	700 NotImplemented "Instruction BLR not yet implemented."
	701 Move X8, -52776960
	702 Move V0, [X8+1040]
	703 Move W23, W0
	704 Add X0, X31, 2400
	705 Move X1, X31
	706 Call RectangleParams.HasRadius, X0, V0
	707 And W3, W0, 1
	708 Add X8, X31, 920
	709 Move S4, W31
	710 Move S5, W31
	711 Move S6, 1
	712 Move S7, 1
	713 Add X4, X31, 2688
	714 Move V0, V9
	715 Move V1, V10
	716 Move V2, V11
	717 Move V3, V12
	718 Move X0, X21
	719 Move W1, W22
	720 Move W2, W23
	721 Move W5, W20
	722 Move X6, X31
	723 Call RectangleParams.MakeSprite, X0, X1, X2, X3, X4, X5, X6, X7
	724 Add X0, X31, 1504
	725 Add X1, X31, 920
	726 Move W2, 288
	727 Call 0x3EB2AC0
	728 Move X0, [X27]
	729 Move X20, [X31+1624]
	730 Move W8, [X0+224]
	731 Compare W8, 0
	732 JumpIfNotEqual {734}
	733 Call 0x1C17DFC
	734 Move X0, X20
	735 Move X1, X31
	736 Move X2, X31
	737 Call Object.op_Inequality, X0, X1
	738 Move TEMP, X0
	739 And TEMP, TEMP, 1
	740 Compare TEMP, 1
	741 JumpIfNotEqual {760}
	742 Add X0, X31, 2368
	743 Move X1, X31
	744 Call Background.get_sprite, X0
	745 Compare X0, 0
	746 JumpIfEqual {1166}
	747 Move X1, X31
	748 Call Sprite.get_rect, X0
	749 Add X0, X31, 2368
	750 Move X1, X31
	751 Move V9, V2
	752 Call Background.get_sprite, X0
	753 Compare X0, 0
	754 JumpIfEqual {1166}
	755 Move X1, X31
	756 Call Sprite.get_rect, X0
	757 Move [X31+1504], X31
	758 Move [X31+1512], S9
	759 Move [X31+1516], S3
	760 Move X20, [X25]
	761 Add X0, X31, 2368
	762 Move X1, X31
	763 Call Background.get_sprite, X0
	764 Move X8, 0x3DD000
	765 Move X8, [X8+3736]
	766 Move X21, X0
	767 Move X8, [X8]
	768 Move W9, [X8+224]
	769 Compare W9, 0
	770 JumpIfNotEqual {773}
	771 Move X0, X8
	772 Call 0x1C17DFC
	773 Move X0, X20
	774 Move X1, X21
	775 Move X2, X31
	776 Call UIElementsUtility.PixelsPerUnitScaleForElement, X0, X1
	777 Multiply S8, S8, S0
	778 Add X8, X31, 2400
	779 Move X21, 0x699000
	780 NotImplemented "Instruction LDUR not yet implemented."
	781 NotImplemented "Instruction LDUR not yet implemented."
	782 Move W8, [X21+3674]
	783 Move V10, [X31+2688]
	784 Move V9, [X31+2696]
	785 Add X20, X31, 1504
	786 Move [X20+172], V0
	787 Move [X20+188], V1
	788 Compare W8, 0
	789 JumpIfNotEqual {795}
	790 Move X0, 0x3BB000
	791 Move X0, [X0+2464]
	792 Call 0x1C17CF4
	793 Move W8, 1
	794 Move [X21+3674], W8
	795 Move X8, 0x3BB000
	796 Move X8, [X8+2464]
	797 Move X8, [X8]
	798 Move X8, [X8+184]
	799 Move D0, [X8]
	800 Move D1, [X8+8]
	801 Move X8, -52785152
	802 Move V2, [X8+3872]
	803 Subtract V0, V10, V0
	804 NotImplemented "Instruction INVALID not yet implemented."
	805 Subtract V1, V9, V1
	806 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	807 NotImplemented "Instruction INVALID not yet implemented."
	808 Add V0, V0, V3
	809 Add V0, V1, V0
	810 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	811 Add V0, V1, V0
	812 NotImplemented "Instruction FCMP not yet implemented."
	813 Move X21, 0x699000
	814 Move W8, [X21+1495]
	815 Move V10, [X31+2688]
	816 Compare W8, 0
	817 JumpIfNotEqual {823}
	818 Move X0, 0x3B3000
	819 Move X0, [X0+1448]
	820 Call 0x1C17CF4
	821 Move W8, 1
	822 Move [X21+1495], W8
	823 Move X22, 0x3B3000
	824 Move X22, [X22+1448]
	825 Move X0, [X22]
	826 Move W8, [X0+224]
	827 Compare W8, 0
	828 JumpIfNotEqual {830}
	829 Call 0x1C17DFC
	830 NotImplemented "Instruction FCVT not yet implemented."
	831 Add X0, X31, 920
	832 Move V0, V9
	833 Call 0x3EB2C00
	834 NotImplemented "Instruction FCMP not yet implemented."
	835 Move D1, -0.5
	836 NotImplemented "Instruction FCMP not yet implemented."
	837 Move V0, [X31+920]
	838 Move D1, -1
	839 Move D1, 0.5
	840 NotImplemented "Instruction FCMP not yet implemented."
	841 Move V0, [X31+920]
	842 Move D1, 1
	843 NotImplemented "Instruction FCVTZS not yet implemented."
	844 Add D1, D0, D1
	845 And X31, X8, 1
	846 NotImplemented "Instruction FCSEL not yet implemented."
	847 Add D0, D9, D1
	848 NotImplemented "Instruction FRINTP not yet implemented."
	849 Add D0, D9, D1
	850 NotImplemented "Instruction FRINTM not yet implemented."
	851 Move X9, 0x7FF00000
	852 Move W10, [X21+1495]
	853 Move V10, [X31+2692]
	854 Move D1, X9
	855 NotImplemented "Instruction FCVTZS not yet implemented."
	856 NotImplemented "Instruction FCMP not yet implemented."
	857 Move W9, 0x80000000
	858 NotImplemented "Instruction CSEL not yet implemented."
	859 Move [X31+1724], W8
	860 Compare W10, 0
	861 JumpIfNotEqual {867}
	862 Move X0, 0x3B3000
	863 Move X0, [X0+1448]
	864 Call 0x1C17CF4
	865 Move W8, 1
	866 Move [X21+1495], W8
	867 Move X0, [X22]
	868 Move W8, [X0+224]
	869 Compare W8, 0
	870 JumpIfNotEqual {872}
	871 Call 0x1C17DFC
	872 NotImplemented "Instruction FCVT not yet implemented."
	873 Add X0, X31, 920
	874 Move V0, V9
	875 Call 0x3EB2C00
	876 NotImplemented "Instruction FCMP not yet implemented."
	877 Move D1, -0.5
	878 NotImplemented "Instruction FCMP not yet implemented."
	879 Move V0, [X31+920]
	880 Move D1, -1
	881 Move D1, 0.5
	882 NotImplemented "Instruction FCMP not yet implemented."
	883 Move V0, [X31+920]
	884 Move D1, 1
	885 NotImplemented "Instruction FCVTZS not yet implemented."
	886 Add D1, D0, D1
	887 And X31, X8, 1
	888 NotImplemented "Instruction FCSEL not yet implemented."
	889 Add D0, D9, D1
	890 NotImplemented "Instruction FRINTP not yet implemented."
	891 Add D0, D9, D1
	892 NotImplemented "Instruction FRINTM not yet implemented."
	893 Move X9, 0x7FF00000
	894 Move W10, [X21+1495]
	895 Move V10, [X31+2696]
	896 Move D1, X9
	897 NotImplemented "Instruction FCVTZS not yet implemented."
	898 NotImplemented "Instruction FCMP not yet implemented."
	899 Move W9, 0x80000000
	900 NotImplemented "Instruction CSEL not yet implemented."
	901 Move [X31+1728], W8
	902 Compare W10, 0
	903 JumpIfNotEqual {909}
	904 Move X0, 0x3B3000
	905 Move X0, [X0+1448]
	906 Call 0x1C17CF4
	907 Move W8, 1
	908 Move [X21+1495], W8
	909 Move X0, [X22]
	910 Move W8, [X0+224]
	911 Compare W8, 0
	912 JumpIfNotEqual {914}
	913 Call 0x1C17DFC
	914 NotImplemented "Instruction FCVT not yet implemented."
	915 Add X0, X31, 920
	916 Move V0, V9
	917 Call 0x3EB2C00
	918 NotImplemented "Instruction FCMP not yet implemented."
	919 Move D1, -0.5
	920 NotImplemented "Instruction FCMP not yet implemented."
	921 Move V0, [X31+920]
	922 Move D1, -1
	923 Move D1, 0.5
	924 NotImplemented "Instruction FCMP not yet implemented."
	925 Move V0, [X31+920]
	926 Move D1, 1
	927 NotImplemented "Instruction FCVTZS not yet implemented."
	928 Add D1, D0, D1
	929 And X31, X8, 1
	930 NotImplemented "Instruction FCSEL not yet implemented."
	931 Add D0, D9, D1
	932 NotImplemented "Instruction FRINTP not yet implemented."
	933 Add D0, D9, D1
	934 NotImplemented "Instruction FRINTM not yet implemented."
	935 Move X9, 0x7FF00000
	936 Move W10, [X21+1495]
	937 Move V10, [X31+2700]
	938 Move D1, X9
	939 NotImplemented "Instruction FCVTZS not yet implemented."
	940 NotImplemented "Instruction FCMP not yet implemented."
	941 Move W9, 0x80000000
	942 NotImplemented "Instruction CSEL not yet implemented."
	943 Move [X31+1732], W8
	944 Compare W10, 0
	945 JumpIfNotEqual {951}
	946 Move X0, 0x3B3000
	947 Move X0, [X0+1448]
	948 Call 0x1C17CF4
	949 Move W8, 1
	950 Move [X21+1495], W8
	951 Move X0, [X22]
	952 Move W8, [X0+224]
	953 Compare W8, 0
	954 JumpIfNotEqual {956}
	955 Call 0x1C17DFC
	956 NotImplemented "Instruction FCVT not yet implemented."
	957 Add X0, X31, 920
	958 Move V0, V9
	959 Call 0x3EB2C00
	960 NotImplemented "Instruction FCMP not yet implemented."
	961 Move D1, -0.5
	962 NotImplemented "Instruction FCMP not yet implemented."
	963 Move V0, [X31+920]
	964 Move D1, -1
	965 Move D1, 0.5
	966 NotImplemented "Instruction FCMP not yet implemented."
	967 Move V0, [X31+920]
	968 Move D1, 1
	969 NotImplemented "Instruction FCVTZS not yet implemented."
	970 Add D1, D0, D1
	971 And X31, X8, 1
	972 NotImplemented "Instruction FCSEL not yet implemented."
	973 Add D0, D9, D1
	974 NotImplemented "Instruction FRINTP not yet implemented."
	975 Add D0, D9, D1
	976 NotImplemented "Instruction FRINTM not yet implemented."
	977 Move X9, 0x7FF00000
	978 Move D1, X9
	979 NotImplemented "Instruction FCVTZS not yet implemented."
	980 Move W10, 0x80000000
	981 NotImplemented "Instruction FCMP not yet implemented."
	982 NotImplemented "Instruction CSEL not yet implemented."
	983 Move [X31+1736], W8
	984 Move [X31+1740], S8
	985 Add X0, X31, 2704
	986 Move X1, X31
	987 Call ComputedStyle.get_unityBackgroundImageTintColor, X0
	988 Move [X31+1536], S0
	989 Move [X31+1540], S1
	990 Move [X31+1544], S2
	991 Move [X31+1548], S3
	992 Move X8, [X25]
	993 Compare X8, 0
	994 JumpIfEqual {1166}
	995 Move X0, [X19+16]
	996 Move X1, [X8+424]
	997 Move X2, X31
	998 Call ColorPage.Init, X0, X1
	999 Move [X31+1776], X0
	1000 Add X0, X31, 2704
	1001 Move X1, X31
	1002 Call ComputedStyle.get_backgroundPositionX, X0
	1003 Move [X31+1568], X0
	1004 Move [X31+1576], W1
	1005 Add X0, X31, 2704
	1006 Move X1, X31
	1007 Call ComputedStyle.get_backgroundPositionY, X0
	1008 Move [X20+76], X0
	1009 Move [X31+1588], W1
	1010 Add X0, X31, 2704
	1011 Move X1, X31
	1012 Call ComputedStyle.get_backgroundRepeat, X0
	1013 Move [X31+1592], X0
	1014 Add X8, X31, 920
	1015 Add X0, X31, 2704
	1016 Move X1, X31
	1017 Call ComputedStyle.get_backgroundSize, X0
	1018 Move V0, [X26]
	1019 Move W8, [X31+936]
	1020 Add X1, X31, 1504
	1021 Move X2, X31
	1022 Move [X31+100], V0
	1023 Move [X31+1616], W8
	1024 Move X0, [X19+272]
	1025 Call MeshGenerationContextUtils.AdjustBackgroundSizeForBorders, X0, X1
	1026 Move X0, [X27]
	1027 Move X20, [X31+1624]
	1028 Move W8, [X0+224]
	1029 Compare W8, 0
	1030 JumpIfNotEqual {1032}
	1031 Call 0x1C17DFC
	1032 Move X0, X20
	1033 Move X1, X31
	1034 Move X2, X31
	1035 Call Object.op_Inequality, X0, X1
	1036 Move TEMP, X0
	1037 And TEMP, TEMP, 1
	1038 Compare TEMP, 1
	1039 JumpIfNotEqual {1064}
	1040 Add X0, X31, 920
	1041 Add X1, X31, 1504
	1042 Move W2, 288
	1043 Call 0x3EB2AC0
	1044 Move X0, [X25]
	1045 Compare X0, 0
	1046 JumpIfEqual {1166}
	1047 Move X1, X31
	1048 Call VisualElement.get_rect, X0
	1049 Move X0, [X25]
	1050 Compare X0, 0
	1051 JumpIfEqual {1166}
	1052 Move X1, X31
	1053 Move V8, V0
	1054 Move V9, V1
	1055 Move V10, V2
	1056 Move V11, V3
	1057 Call VisualElement.get_scaledPixelsPerPoint, X0
	1058 Add X0, X31, 576
	1059 Add X1, X31, 920
	1060 Move W2, 288
	1061 Move V12, V0
	1062 Call 0x3EB2AC0
	1063 Add X1, X31, 576
	1064 Move X0, [X27]
	1065 Move X20, [X31+1640]
	1066 Move W8, [X0+224]
	1067 Compare W8, 0
	1068 JumpIfNotEqual {1070}
	1069 Call 0x1C17DFC
	1070 Move X0, X20
	1071 Move X1, X31
	1072 Move X2, X31
	1073 Call Object.op_Inequality, X0, X1
	1074 Move TEMP, X0
	1075 And TEMP, TEMP, 1
	1076 Compare TEMP, 1
	1077 JumpIfNotEqual {1109}
	1078 Add X0, X31, 920
	1079 Add X1, X31, 1504
	1080 Move W2, 288
	1081 Call 0x3EB2AC0
	1082 Move X0, [X25]
	1083 Compare X0, 0
	1084 JumpIfEqual {1166}
	1085 Move X1, X31
	1086 Call VisualElement.get_rect, X0
	1087 Move X0, [X25]
	1088 Compare X0, 0
	1089 JumpIfEqual {1166}
	1090 Move X1, X31
	1091 Move V8, V0
	1092 Move V9, V1
	1093 Move V10, V2
	1094 Move V11, V3
	1095 Call VisualElement.get_scaledPixelsPerPoint, X0
	1096 Add X0, X31, 288
	1097 Add X1, X31, 920
	1098 Move W2, 288
	1099 Move V12, V0
	1100 Call 0x3EB2AC0
	1101 Add X1, X31, 288
	1102 Move X0, X19
	1103 Move V0, V8
	1104 Move V1, V9
	1105 Move V2, V10
	1106 Move V3, V11
	1107 Move V4, V12
	1108 Call UIRStylePainter.DrawRectangleRepeat, X0, X1, X2, V0
	1109 Add X0, X31, 0
	1110 Add X1, X31, 1504
	1111 Move W2, 288
	1112 Call 0x3EB2AC0
	1113 Add X1, X31, 0
	1114 Move X0, X19
	1115 Call UIRStylePainter.DrawRectangle, X0, X1
	1116 Add X31, X31, 2800
	1117 Move X20, [X31+112]
	1118 Move X19, [X31+120]
	1119 Move X22, [X31+96]
	1120 Move X21, [X31+104]
	1121 Move X24, [X31+80]
	1122 Move X23, [X31+88]
	1123 Move X26, [X31+64]
	1124 Move X25, [X31+72]
	1125 Move X30, [X31+48]
	1126 Move X27, [X31+56]
	1127 Move X29, [X31+40]
	1128 Move D9, [X31+24]
	1129 Move D8, [X31+32]
	1130 Move D11, [X31+8]
	1131 Move D10, [X31+16]
	1132 Move V12, [X31+128]
	1133 Return 
	1134 Move W9, [X10]
	1135 Add W9, W9, 2
	1136 Add X8, X8, W9
	1137 Add X0, X8, 312
	1138 Move X8, [X0]
	1139 Move X1, [X0+8]
	1140 Move X0, X22
	1141 NotImplemented "Instruction BLR not yet implemented."
	1142 Move W2, W0
	1143 Add X8, X31, 920
	1144 Move S4, W31
	1145 Move S5, W31
	1146 Move S6, 1
	1147 Move S7, 1
	1148 Move V0, V9
	1149 Move V1, V10
	1150 Move V2, V11
	1151 Move V3, V12
	1152 Move X0, X20
	1153 Move W1, W21
	1154 Move X3, X31
	1155 Call RectangleParams.MakeVectorTextured, X0, X1, X2, X3, X4
	1156 Add X0, X31, 1504
	1157 Add X1, X31, 920
	1158 Move W2, 288
	1159 Call 0x3EB2AC0
	1160 Move X8, [X31+1640]
	1161 Compare X8, 0
	1162 JumpIfEqual {1166}
	1163 Move V0, [X8+64]
	1164 Move [X31+1504], X31
	1165 Move [X31+1512], D0
	1166 Call 0x1C17F20

Method: System.Void DrawRectangleRepeat(UnityEngine.UIElements.MeshGenerationContextUtils/RectangleParams rectParams, UnityEngine.Rect totalRect, System.Single scaledPixelsPerPoint)

Disassembly:
	0x03D415B0 BL 0x315F390
	0x03D415B4 LDR V3, [X31 + 0x5C]
	0x03D415B8 LDP V0, V1, [X31 + 0x180]
	0x03D415BC LDR V2, [X31 + 0x1A]
	0x03D415C0 ADRP X25, 0x424000
	0x03D415C4 FADD S3, S10, S3
	0x03D415C8 STR S3, [X31 + 0x58]
	0x03D415CC LDR X25, [X25 + 0x278]
	0x03D415D0 STP V0, V1, [X31 + 0x1E0]
	0x03D415D4 STR V2, [X31 + 0x20]
	0x03D415D8 ADRP X23, 0x424000
	0x03D415DC LDR X23, [X23 + 0x270]
	0x03D415E0 FADD S9, S13, S8
	0x03D415E4 STR S9, [X31 + 0x54]
	0x03D415E8 LDR X1, [X25]
	0x03D415EC ADD X0, X31, 0x1E0
	0x03D415F0 BL 0x2BE39B0
	0x03D415F4 TBZ X0, 0x0, 0x3D417EC
	0x03D415F8 LDR V11, [X31 + 0x1F4]
	0x03D415FC LDR V2, [X31 + 0x3C]
	0x03D41600 LDR V10, [X31 + 0x1FC]
	0x03D41604 FCMP S11, S2
	0x03D41608 B.PL 0x3D41630
	0x03D4160C FSUB S0, S2, S11
	0x03D41610 FSUB S10, S10, S0
	0x03D41614 FADD S1, S0, S10
	0x03D41618 FDIV S12, S10, S1
	0x03D4161C FDIV S0, S0, S1
	0x03D41620 FMOV S1, W31
	0x03D41624 FADD S8, S0, S1
	0x03D41628 MOV V11.16B, V2.16B
	0x03D4162C B 0x3D41638
	0x03D41630 LDR V8, [X31 + 0x204]
	0x03D41634 LDR V12, [X31 + 0x20C]
	0x03D41638 FADD S0, S10, S11
	0x03D4163C FCMP S0, S9
	0x03D41640 B.LE 0x3D41660
	0x03D41644 FSUB S0, S0, S9
	0x03D41648 FSUB S10, S10, S0
	0x03D4164C FADD S0, S0, S10
	0x03D41650 FMUL S1, S12, S10
	0x03D41654 FDIV S12, S1, S0
	0x03D41658 FADD S0, S8, S12
	0x03D4165C FSUB S8, S0, S12
	0x03D41660 ADRP X8, 0x3B2000
	0x03D41664 LDR X8, [X8 + 0x598]
	0x03D41668 LDR X21, [X19 + 0x88]
	0x03D4166C LDR X0, [X8]
	0x03D41670 LDR W8, [X0 + 0xE0]
	0x03D41674 CBNZ W8, 0x3D4167C
	0x03D41678 BL 0x1C16DFC
	0x03D4167C MOV X0, X21
	0x03D41680 MOV X1, X31
	0x03D41684 MOV X2, X31
	0x03D41688 BL 0x3C3883C
	0x03D4168C FADD S0, S12, S8
	0x03D41690 FMOV S1, 1
	0x03D41694 LDR X8, [X20 + 0xF0]
	0x03D41698 FSUB S0, S1, S0
	0x03D4169C FSUB S0, S0, S8
	0x03D416A0 FADD S0, S8, S0
	0x03D416A4 ANDS W31, W0, 0x1
	0x03D416A8 FCSEL S13, S0, S8, NE
	0x03D416AC CBZ X8, 0x3D41950
	0x03D416B0 LDR W9, [X8 + 0x18]
	0x03D416B4 CBZ W9, 0x3D41954
	0x03D416B8 LDR X0, [X8 + 0x20]
	0x03D416BC CBZ X0, 0x3D4194C
	0x03D416C0 LDR X1, [X24]
	0x03D416C4 ADD X8, X31, 0x180
	0x03D416C8 BL 0x315F390
	0x03D416CC LDP V0, V1, [X31 + 0x180]
	0x03D416D0 LDR V2, [X31 + 0x1A]
	0x03D416D4 STP V0, V1, [X31 + 0x1B0]
	0x03D416D8 STR V2, [X31 + 0x1D]
	0x03D416DC LDR X1, [X25]
	0x03D416E0 ADD X0, X31, 0x1B0
	0x03D416E4 BL 0x2BE39B0
	0x03D416E8 TBZ X0, 0x0, 0x3D41794
	0x03D416EC LDR V9, [X31 + 0x1C0]
	0x03D416F0 LDR V3, [X31 + 0x5C]
	0x03D416F4 LDR V15, [X31 + 0x1C8]
	0x03D416F8 LDR V14, [X31 + 0x1D8]
	0x03D416FC FCMP S9, S3
	0x03D41700 B.PL 0x3D4172C
	0x03D41704 FSUB S0, S3, S9
	0x03D41708 FSUB S15, S15, S0
	0x03D4170C FADD S1, S0, S15
	0x03D41710 FMUL S2, S15, S14
	0x03D41714 FDIV S14, S2, S1
	0x03D41718 FDIV S0, S0, S1
	0x03D4171C FMOV S1, W31
	0x03D41720 FADD S8, S0, S1
	0x03D41724 MOV V9.16B, V3.16B
	0x03D41728 B 0x3D41730
	0x03D4172C LDR V8, [X31 + 0x1D0]
	0x03D41730 LDR V1, [X31 + 0x58]
	0x03D41734 FADD S0, S15, S9
	0x03D41738 FCMP S0, S1
	0x03D4173C B.LE 0x3D41754
	0x03D41740 FSUB S0, S0, S1
	0x03D41744 FSUB S15, S15, S0
	0x03D41748 FADD S0, S0, S15
	0x03D4174C FMUL S1, S14, S15
	0x03D41750 FDIV S14, S1, S0
	0x03D41754 ADD X0, X31, 0x60
	0x03D41758 MOVZ W2, 0x120
	0x03D4175C MOV X1, X19
	0x03D41760 BL 0x3EB1AC0
	0x03D41764 ADD X1, X31, 0x60
	0x03D41768 MOV X0, X20
	0x03D4176C MOV V0.16B, V9.16B
	0x03D41770 MOV V1.16B, V11.16B
	0x03D41774 MOV V2.16B, V15.16B
	0x03D41778 MOV V3.16B, V10.16B
	0x03D4177C MOV V4.16B, V8.16B
	0x03D41780 MOV V5.16B, V13.16B
	0x03D41784 MOV V6.16B, V14.16B
	0x03D41788 MOV V7.16B, V12.16B
	0x03D4178C BL 0x3D41A00
	0x03D41790 B 0x3D416DC
	0x03D41794 LDR V9, [X31 + 0x54]
	0x03D41798 MOV X22, X31
	0x03D4179C MOVZ W21, 0x62
	0x03D417A0 LDR X1, [X23]
	0x03D417A4 ADD X0, X31, 0x1B0
	0x03D417A8 BL 0x2BE39AC
	0x03D417AC CBNZ X22, 0x3D41958
	0x03D417B0 CMP W21, 0x62
	0x03D417B4 B.EQ 0x3D415E8
	0x03D417B8 CBZ W21, 0x3D415E8
	0x03D417BC B 0x3D417EC
	0x03D417C0 B 0x3D417C4
	0x03D417C4 LDR V9, [X31 + 0x54]
	0x03D417C8 MOV X21, X0
	0x03D417CC CMP W1, 0x1
	0x03D417D0 B.NE 0x3D41928
	0x03D417D4 MOV X0, X21
	0x03D417D8 BL 0x3EB1AD0
	0x03D417DC LDR X22, [X0]
	0x03D417E0 BL 0x3EB1AE0
	0x03D417E4 MOV W21, W31
	0x03D417E8 B 0x3D417A0
	0x03D417EC LDR X1, [X23]
	0x03D417F0 ADD X0, X31, 0x1E0
	0x03D417F4 BL 0x2BE39AC
	0x03D417F8 LDR X25, [X31 + 0x10]
	0x03D417FC LDR X8, [X25 + 0x28]
	0x03D41800 LDR X9, [X31 + 0x258]
	0x03D41804 CMP X8, X9
	0x03D41808 B.NE 0x3D4196C
	0x03D4180C ADD X31, X31, 0x260
	0x03D41810 LDP X20, X19, [X31 + 0x90]
	0x03D41814 LDP X22, X21, [X31 + 0x80]
	0x03D41818 LDP X24, X23, [X31 + 0x70]
	0x03D4181C LDP X26, X25, [X31 + 0x60]
	0x03D41820 LDP X28, X27, [X31 + 0x50]
	0x03D41824 LDP X29, X30, [X31 + 0x40]
	0x03D41828 LDP D9, D8, [X31 + 0x30]
	0x03D4182C LDP D11, D10, [X31 + 0x20]
	0x03D41830 LDP D13, D12, [X31 + 0x10]
	0x03D41834 LDP D15, D14, [X31], #0xA0
	0x03D41838 RET
	0x03D4183C UBFM X8, X0, 0x20, 0x3F
	0x03D41840 MOV V12.16B, V14.16B
	0x03D41844 CBNZ X8, 0x3D4185C
	0x03D41848 MOV X0, X21
	0x03D4184C MOV X1, X31
	0x03D41850 BL 0x3CE9C74
	0x03D41854 FMOV S12, W0
	0x03D41858 STR X0, [X31 + 0x218]
	0x03D4185C MOV X0, X21
	0x03D41860 MOV X1, X31
	0x03D41864 BL 0x3CE9C88
	0x03D41868 STR X0, [X31 + 0x218]
	0x03D4186C ADD X0, X31, 0x218
	0x03D41870 MOV X1, X31
	0x03D41874 BL 0x3DFD4D0
	0x03D41878 TBZ X0, 0x0, 0x3D41884
	0x03D4187C MOV V11.16B, V9.16B
	0x03D41880 B 0x3D41918
	0x03D41884 MOV X0, X21
	0x03D41888 MOV X1, X31
	0x03D4188C BL 0x3CE9C88
	0x03D41890 MOV X22, X0
	0x03D41894 STR X0, [X31 + 0x218]
	0x03D41898 MOV X0, X21
	0x03D4189C MOV X1, X31
	0x03D418A0 BL 0x3CE9C88
	0x03D418A4 UBFM X8, X22, 0x20, 0x3F
	0x03D418A8 CMP X8, 0x1
	0x03D418AC STR X0, [X31 + 0x218]
	0x03D418B0 B.NE 0x3D418CC
	0x03D418B4 FMOV S0, W0
	0x03D418B8 MOVZ W8, 0x42C80000
	0x03D418BC FMUL S0, S13, S0
	0x03D418C0 FMOV S1, W8
	0x03D418C4 FDIV S11, S0, S1
	0x03D418C8 B 0x3D418EC
	0x03D418CC UBFM X8, X0, 0x20, 0x3F
	0x03D418D0 MOV V11.16B, V9.16B
	0x03D418D4 CBNZ X8, 0x3D418EC
	0x03D418D8 MOV X0, X21
	0x03D418DC MOV X1, X31
	0x03D418E0 BL 0x3CE9C88
	0x03D418E4 FMOV S11, W0
	0x03D418E8 STR X0, [X31 + 0x218]
	0x03D418EC MOV X0, X21
	0x03D418F0 MOV X1, X31
	0x03D418F4 BL 0x3CE9C74
	0x03D418F8 STR X0, [X31 + 0x218]
	0x03D418FC ADD X0, X31, 0x218
	0x03D41900 MOV X1, X31
	0x03D41904 BL 0x3DFD4D0
	0x03D41908 TBZ X0, 0x0, 0x3D41918
	0x03D4190C FMUL S0, S14, S11
	0x03D41910 FDIV S14, S0, S9
	0x03D41914 B 0x3D40A04
	0x03D41918 MOV V14.16B, V12.16B
	0x03D4191C B 0x3D40A04
	0x03D41920 BL 0x1C16F20
	0x03D41924 BL 0x1C16F28
	0x03D41928 MOV X19, X1
	0x03D4192C MOV X22, X31
	0x03D41930 LDR X1, [X23]
	0x03D41934 ADD X0, X31, 0x1B0
	0x03D41938 BL 0x2BE39AC
	0x03D4193C MOV X1, X19
	0x03D41940 CBZ X22, 0x3D4199C
	0x03D41944 MOV X0, X22
	0x03D41948 BL 0x1C16F18
	0x03D4194C BL 0x1C16F20
	0x03D41950 BL 0x1C16F20
	0x03D41954 BL 0x1C16F28
	0x03D41958 MOV X0, X22
	0x03D4195C BL 0x1C16F18
	0x03D41960 BL 0x1C16F44
	0x03D41964 MOV X1, X31
	0x03D41968 BL 0x1C16DEC
	0x03D4196C BL 0x3EB1B20
	0x03D41970 MOV X19, X1
	0x03D41974 MOV X21, X0
	0x03D41978 B 0x3D41930
	0x03D4197C B 0x3D41998
	0x03D41980 B 0x3D41998
	0x03D41984 B 0x3D41998
	0x03D41988 B 0x3D41998
	0x03D4198C B 0x3D41998
	0x03D41990 B 0x3D41998
	0x03D41994 B 0x3D41998
	0x03D41998 MOV X21, X0
	0x03D4199C CMP W1, 0x1
	0x03D419A0 B.NE 0x3D419D0
	0x03D419A4 MOV X0, X21
	0x03D419A8 BL 0x3EB1AD0
	0x03D419AC LDR X19, [X0]
	0x03D419B0 BL 0x3EB1AE0
	0x03D419B4 LDR X1, [X23]
	0x03D419B8 ADD X0, X31, 0x1E0
	0x03D419BC BL 0x2BE39AC
	0x03D419C0 LDR X25, [X31 + 0x10]
	0x03D419C4 CBZ X19, 0x3D417FC
	0x03D419C8 MOV X0, X19
	0x03D419CC BL 0x1C16F18
	0x03D419D0 MOV X19, X31
	0x03D419D4 B 0x3D419DC
	0x03D419D8 MOV X21, X0
	0x03D419DC LDR X1, [X23]
	0x03D419E0 ADD X0, X31, 0x1E0
	0x03D419E4 BL 0x2BE39AC
	0x03D419E8 CBNZ X19, 0x3D419F4
	0x03D419EC MOV X0, X21
	0x03D419F0 BL 0x1D2C690
	0x03D419F4 MOV X0, X19
	0x03D419F8 BL 0x1C16F18
	0x03D419FC BL 0x1990590
	0x03D41A00 SUB X31, X31, 0x1A0
	0x03D41A04 STP D15, D14, [X31 + 0x140]
	0x03D41A08 STP D13, D12, [X31 + 0x150]
	0x03D41A0C STP D11, D10, [X31 + 0x160]
	0x03D41A10 STP D9, D8, [X31 + 0x170]
	0x03D41A14 STP X29, X30, [X31 + 0x180]
	0x03D41A18 STP X20, X19, [X31 + 0x190]
	0x03D41A1C ADRP X8, 0xFFFFFFFFFCDA8000
	0x03D41A20 LDR V14, [X8 + 0xF9C]
	0x03D41A24 FCMP S2, S14
	0x03D41A28 B.MI 0x3D41BE0
	0x03D41A2C MOV V8.16B, V3.16B
	0x03D41A30 FCMP S3, S14
	0x03D41A34 B.MI 0x3D41BE0
	0x03D41A38 MOV V11.16B, V0.16B
	0x03D41A3C LDR V3, [X1 + 0x30]
	0x03D41A40 LDR V0, [X1 + 0x34]
	0x03D41A44 MOV X20, X1
	0x03D41A48 MOV X19, X0
	0x03D41A4C MOV X0, X1
	0x03D41A50 STP S0, S3, [X31 + 0xC]
	0x03D41A54 LDR V0, [X1 + 0x38]
	0x03D41A58 MOV V12.16B, V7.16B
	0x03D41A5C MOV V10.16B, V6.16B
	0x03D41A60 MOV V15.16B, V5.16B
	0x03D41A64 STR S0, [X31 + 0x14]
	0x03D41A68 LDR V0, [X1 + 0x3C]
	0x03D41A6C MOV X1, X31
	0x03D41A70 MOV V13.16B, V4.16B
	0x03D41A74 MOV V9.16B, V2.16B
	0x03D41A78 STP S0, S1, [X31 + 0x18]
	0x03D41A7C MOV V0.16B, V14.16B
	0x03D41A80 BL 0x3DC5BA0
	0x03D41A84 TBZ X0, 0x0, 0x3D41A90
	0x03D41A88 LDR V1, [X31 + 0x1C]
	0x03D41A8C B 0x3D41BBC
	0x03D41A90 LDR V4, [X31 + 0x10]
	0x03D41A94 FDIV S0, S9, S10
	0x03D41A98 FDIV S1, S8, S12
	0x03D41A9C FMOV S2, 1
	0x03D41AA0 FMUL S5, S0, S4
	0x03D41AA4 LDR V4, [X31 + 0xC]
	0x03D41AA8 FSUB S2, S2, S15
	0x03D41AAC FMUL S3, S13, S0
	0x03D41AB0 MOV V7.16B, V8.16B
	0x03D41AB4 FMUL S6, S1, S4
	0x03D41AB8 LDR V4, [X31 + 0x14]
	0x03D41ABC MOV X0, X31
	0x03D41AC0 FMUL S15, S0, S4
	0x03D41AC4 FSUB S0, S2, S12
	0x03D41AC8 FSUB S2, S11, S3
	0x03D41ACC FADD S13, S2, S5
	0x03D41AD0 LDR V5, [X31 + 0x1C]
	0x03D41AD4 FMUL S0, S1, S0
	0x03D41AD8 MOV V2.16B, V15.16B
	0x03D41ADC MOV V4.16B, V11.16B
	0x03D41AE0 FSUB S0, S5, S0
	0x03D41AE4 FADD S10, S0, S6
	0x03D41AE8 LDR V0, [X31 + 0x18]
	0x03D41AEC MOV V6.16B, V9.16B
	0x03D41AF0 FMUL S12, S1, S0
	0x03D41AF4 MOV V0.16B, V13.16B
	0x03D41AF8 MOV V1.16B, V10.16B
	0x03D41AFC MOV V3.16B, V12.16B
	0x03D41B00 BL 0x3DC4A30
	0x03D41B04 FCMP S2, S14
	0x03D41B08 B.MI 0x3D41BE0
	0x03D41B0C MOV V8.16B, V3.16B
	0x03D41B10 FCMP S3, S14
	0x03D41B14 B.MI 0x3D41BE0
	0x03D41B18 ADRP X8, 0xFFFFFFFFFCDA8000
	0x03D41B1C MOV V9.16B, V2.16B
	0x03D41B20 FSUB S4, S2, S15
	0x03D41B24 LDR V2, [X8 + 0xF20]
	0x03D41B28 FSUB S3, S8, S12
	0x03D41B2C FMUL S4, S4, S4
	0x03D41B30 FMUL S3, S3, S3
	0x03D41B34 FADD S3, S4, S3
	0x03D41B38 MOV V11.16B, V0.16B
	0x03D41B3C FCMP S3, S2
	0x03D41B40 B.MI 0x3D41BBC
	0x03D41B44 LDP S3, S7, [X20 + 0x18]
	0x03D41B48 FDIV S4, S9, S15
	0x03D41B4C FDIV S2, S8, S12
	0x03D41B50 FCMP S11, S13
	0x03D41B54 FMUL S16, S4, S3
	0x03D41B58 B.LE 0x3D41B84
	0x03D41B5C FADD S5, S13, S15
	0x03D41B60 FADD S6, S9, S11
	0x03D41B64 FSUB S5, S5, S6
	0x03D41B68 LDR V6, [X20 + 0x10]
	0x03D41B6C FDIV S5, S5, S15
	0x03D41B70 FSUB S4, S3, S16
	0x03D41B74 FMUL S3, S5, S3
	0x03D41B78 FSUB S3, S4, S3
	0x03D41B7C FADD S3, S3, S6
	0x03D41B80 STR S3, [X20 + 0x10]
	0x03D41B84 FADD S3, S8, S1
	0x03D41B88 FADD S4, S10, S12
	0x03D41B8C FCMP S3, S4
	0x03D41B90 FMUL S2, S2, S7
	0x03D41B94 B.PL 0x3D41BB8
	0x03D41B98 FSUB S4, S1, S10
	0x03D41B9C LDR V5, [X20 + 0x14]
	0x03D41BA0 FDIV S4, S4, S12
	0x03D41BA4 FSUB S3, S7, S2
	0x03D41BA8 FMUL S4, S4, S7
	0x03D41BAC FSUB S3, S3, S4
	0x03D41BB0 FADD S3, S3, S5
	0x03D41BB4 STR S3, [X20 + 0x14]
	0x03D41BB8 STP S16, S2, [X20 + 0x18]
	0x03D41BBC ADD X0, X31, 0x20
	0x03D41BC0 MOVZ W2, 0x120
	0x03D41BC4 MOV X1, X20
	0x03D41BC8 STP S11, S1, [X20]
	0x03D41BCC STP S9, S8, [X20 + 0x8]
	0x03D41BD0 BL 0x3EB1AC0
	0x03D41BD4 ADD X1, X31, 0x20
	0x03D41BD8 MOV X0, X19
	0x03D41BDC BL 0x3D3E714
	0x03D41BE0 LDP X20, X19, [X31 + 0x190]
	0x03D41BE4 LDP X29, X30, [X31 + 0x180]
	0x03D41BE8 LDP D9, D8, [X31 + 0x170]
	0x03D41BEC LDP D11, D10, [X31 + 0x160]
	0x03D41BF0 LDP D13, D12, [X31 + 0x150]
	0x03D41BF4 LDP D15, D14, [X31 + 0x140]
	0x03D41BF8 ADD X31, X31, 0x1A0
	0x03D41BFC RET
	0x03D41C00 STR D8, [X31 - 0x30]!
	0x03D41C04 STR X29, [X31 + 0x8]
	0x03D41C08 STP X30, X21, [X31 + 0x10]
	0x03D41C0C STP X20, X19, [X31 + 0x20]
	0x03D41C10 SUB X31, X31, 0x230
	0x03D41C14 ADRP X20, 0x6A6000
	0x03D41C18 LDRB W8, [X20 + 0xB82]
	0x03D41C1C MOV X19, X0
	0x03D41C20 TBNZ X8, 0x0, 0x3D41C50
	0x03D41C24 ADRP X0, 0x3DB000
	0x03D41C28 LDR X0, [X0 + 0xE80]
	0x03D41C2C BL 0x1C16CF4
	0x03D41C30 ADRP X0, 0x3DB000
	0x03D41C34 LDR X0, [X0 + 0x120]
	0x03D41C38 BL 0x1C16CF4
	0x03D41C3C ADRP X0, 0x3DB000
	0x03D41C40 LDR X0, [X0 + 0xE98]
	0x03D41C44 BL 0x1C16CF4
	0x03D41C48 MOVZ W8, 0x1
	0x03D41C4C STRB W8, [X20 + 0xB82]
	0x03D41C50 ADD X0, X31, 0x178
	0x03D41C54 MOVZ W2, 0xB8
	0x03D41C58 MOV W1, W31
	0x03D41C5C BL 0x3EB1B10
	0x03D41C60 ADD X0, X31, 0xC0
	0x03D41C64 MOVZ W2, 0xB8
	0x03D41C68 MOV W1, W31
	0x03D41C6C BL 0x3EB1B10
	0x03D41C70 LDR X0, [X19 + 0x110]
	0x03D41C74 CBZ X0, 0x3D42534
	0x03D41C78 MOV X1, X31
	0x03D41C7C BL 0x3DEC528
	0x03D41C80 ADRP X8, 0xFFFFFFFFFCDA8000
	0x03D41C84 LDR V8, [X8 + 0xF9C]
	0x03D41C88 FCMP S2, S8
	0x03D41C8C B.LT 0x3D4251C
	0x03D41C90 LDR X0, [X19 + 0x110]
	0x03D41C94 CBZ X0, 0x3D42534
	0x03D41C98 MOV X1, X31
	0x03D41C9C BL 0x3DEC528
	0x03D41CA0 FCMP S3, S8
	0x03D41CA4 B.LT 0x3D4251C
	0x03D41CA8 LDR X0, [X19 + 0x110]
	0x03D41CAC CBZ X0, 0x3D42534
	0x03D41CB0 MOV X1, X31
	0x03D41CB4 BL 0x3DE0EB8
	0x03D41CB8 CBZ X0, 0x3D42534
	0x03D41CBC ADRP X21, 0x3DB000
	0x03D41CC0 LDR X8, [X0]
	0x03D41CC4 LDR X21, [X21 + 0x120]
	0x03D41CC8 MOV X20, X0
	0x03D41CCC LDRH W9, [X8 + 0x12E]
	0x03D41CD0 LDR X1, [X21]
	0x03D41CD4 CBZ X9, 0x3D41CF8
	0x03D41CD8 LDR X10, [X8 + 0xB0]
	0x03D41CDC ADD X10, X10, 0x8
	0x03D41CE0 LDUR X11, [X10 - 0x8]
	0x03D41CE4 CMP X11, X1
	0x03D41CE8 B.EQ 0x3D41D08
	0x03D41CEC SUBS X9, X9, 0x1
	0x03D41CF0 ADD X10, X10, 0x10
	0x03D41CF4 B.NE 0x3D41CE0
	0x03D41CF8 MOVZ W2, 0x5
	0x03D41CFC MOV X0, X20
	0x03D41D00 BL 0x1C5C788
	0x03D41D04 B 0x3D41D18
	0x03D41D08 LDR W9, [X10]
	0x03D41D0C ADD W9, W9, 0x5
	0x03D41D10 ADD X8, X8, W9, 0x4, SXTW
	0x03D41D14 ADD X0, X8, 0x138
	0x03D41D18 LDP X8, X1, [X0]
	0x03D41D1C MOV X0, X20
	0x03D41D20 BLR X8
	0x03D41D24 ADRP X8, 0xFFFFFFFFFCDA8000
	0x03D41D28 FMUL S0, S0, S0
	0x03D41D2C FMUL S1, S1, S1
	0x03D41D30 LDR V8, [X8 + 0xF20]
	0x03D41D34 FMUL S2, S2, S2
	0x03D41D38 FADD S0, S0, S1
	0x03D41D3C FADD S0, S2, S0
	0x03D41D40 FMUL S1, S3, S3
	0x03D41D44 FADD S0, S1, S0
	0x03D41D48 FCMP S0, S8
	0x03D41D4C B.MI 0x3D41DB4
	0x03D41D50 LDR X8, [X20]
	0x03D41D54 LDR X1, [X21]
	0x03D41D58 LDRH W9, [X8 + 0x12E]
	0x03D41D5C CBZ X9, 0x3D41D80
	0x03D41D60 LDR X10, [X8 + 0xB0]
	0x03D41D64 ADD X10, X10, 0x8
	0x03D41D68 LDUR X11, [X10 - 0x8]
	0x03D41D6C CMP X11, X1
	0x03D41D70 B.EQ 0x3D41D90
	0x03D41D74 SUBS X9, X9, 0x1
	0x03D41D78 ADD X10, X10, 0x10
	0x03D41D7C B.NE 0x3D41D68
	0x03D41D80 MOVZ W2, 0x6
	0x03D41D84 MOV X0, X20
	0x03D41D88 BL 0x1C5C788
	0x03D41D8C B 0x3D41DA0
	0x03D41D90 LDR W9, [X10]
	0x03D41D94 ADD W9, W9, 0x6
	0x03D41D98 ADD X8, X8, W9, 0x4, SXTW
	0x03D41D9C ADD X0, X8, 0x138
	0x03D41DA0 LDP X8, X1, [X0]
	0x03D41DA4 MOV X0, X20
	0x03D41DA8 BLR X8
	0x03D41DAC FCMP S0, 0x0
	0x03D41DB0 B.GT 0x3D42060
	0x03D41DB4 LDR X8, [X20]
	0x03D41DB8 LDR X1, [X21]
	0x03D41DBC LDRH W9, [X8 + 0x12E]
	0x03D41DC0 CBZ X9, 0x3D41DE4
	0x03D41DC4 LDR X10, [X8 + 0xB0]
	0x03D41DC8 ADD X10, X10, 0x8
	0x03D41DCC LDUR X11, [X10 - 0x8]
	0x03D41DD0 CMP X11, X1
	0x03D41DD4 B.EQ 0x3D41DF4
	0x03D41DD8 SUBS X9, X9, 0x1
	0x03D41DDC ADD X10, X10, 0x10
	0x03D41DE0 B.NE 0x3D41DCC
	0x03D41DE4 MOVZ W2, 0x9
	0x03D41DE8 MOV X0, X20
	0x03D41DEC BL 0x1C5C788
	0x03D41DF0 B 0x3D41E04
	0x03D41DF4 LDR W9, [X10]
	0x03D41DF8 ADD W9, W9, 0x9
	0x03D41DFC ADD X8, X8, W9, 0x4, SXTW
	0x03D41E00 ADD X0, X8, 0x138
	0x03D41E04 LDP X8, X1, [X0]
	0x03D41E08 MOV X0, X20
	0x03D41E0C BLR X8
	0x03D41E10 FMUL S0, S0, S0
	0x03D41E14 FMUL S1, S1, S1
	0x03D41E18 FMUL S2, S2, S2
	0x03D41E1C FADD S0, S0, S1
	0x03D41E20 FADD S0, S2, S0
	0x03D41E24 FMUL S1, S3, S3
	0x03D41E28 FADD S0, S1, S0
	0x03D41E2C FCMP S0, S8
	0x03D41E30 B.MI 0x3D41E98
	0x03D41E34 LDR X8, [X20]
	0x03D41E38 LDR X1, [X21]
	0x03D41E3C LDRH W9, [X8 + 0x12E]
	0x03D41E40 CBZ X9, 0x3D41E64
	0x03D41E44 LDR X10, [X8 + 0xB0]
	0x03D41E48 ADD X10, X10, 0x8
	0x03D41E4C LDUR X11, [X10 - 0x8]
	0x03D41E50 CMP X11, X1
	0x03D41E54 B.EQ 0x3D41E74
	0x03D41E58 SUBS X9, X9, 0x1
	0x03D41E5C ADD X10, X10, 0x10
	0x03D41E60 B.NE 0x3D41E4C
	0x03D41E64 MOVZ W2, 0xC
	0x03D41E68 MOV X0, X20
	0x03D41E6C BL 0x1C5C788
	0x03D41E70 B 0x3D41E84
	0x03D41E74 LDR W9, [X10]
	0x03D41E78 ADD W9, W9, 0xC
	0x03D41E7C ADD X8, X8, W9, 0x4, SXTW
	0x03D41E80 ADD X0, X8, 0x138
	0x03D41E84 LDP X8, X1, [X0]
	0x03D41E88 MOV X0, X20
	0x03D41E8C BLR X8
	0x03D41E90 FCMP S0, 0x0
	0x03D41E94 B.GT 0x3D42060
	0x03D41E98 LDR X8, [X20]
	0x03D41E9C LDR X1, [X21]
	0x03D41EA0 LDRH W9, [X8 + 0x12E]
	0x03D41EA4 CBZ X9, 0x3D41EC8
	0x03D41EA8 LDR X10, [X8 + 0xB0]
	0x03D41EAC ADD X10, X10, 0x8
	0x03D41EB0 LDUR X11, [X10 - 0x8]
	0x03D41EB4 CMP X11, X1
	0x03D41EB8 B.EQ 0x3D41ED8
	0x03D41EBC SUBS X9, X9, 0x1
	0x03D41EC0 ADD X10, X10, 0x10
	0x03D41EC4 B.NE 0x3D41EB0
	0x03D41EC8 MOVZ W2, 0x7
	0x03D41ECC MOV X0, X20
	0x03D41ED0 BL 0x1C5C788
	0x03D41ED4 B 0x3D41EE8
	0x03D41ED8 LDR W9, [X10]
	0x03D41EDC ADD W9, W9, 0x7
	0x03D41EE0 ADD X8, X8, W9, 0x4, SXTW
	0x03D41EE4 ADD X0, X8, 0x138
	0x03D41EE8 LDP X8, X1, [X0]
	0x03D41EEC MOV X0, X20
	0x03D41EF0 BLR X8
	0x03D41EF4 FMUL S0, S0, S0
	0x03D41EF8 FMUL S1, S1, S1
	0x03D41EFC FMUL S2, S2, S2
	0x03D41F00 FADD S0, S0, S1
	0x03D41F04 FADD S0, S2, S0
	0x03D41F08 FMUL S1, S3, S3
	0x03D41F0C FADD S0, S1, S0
	0x03D41F10 FCMP S0, S8
	0x03D41F14 B.MI 0x3D41F7C
	0x03D41F18 LDR X8, [X20]
	0x03D41F1C LDR X1, [X21]
	0x03D41F20 LDRH W9, [X8 + 0x12E]
	0x03D41F24 CBZ X9, 0x3D41F48
	0x03D41F28 LDR X10, [X8 + 0xB0]
	0x03D41F2C ADD X10, X10, 0x8
	0x03D41F30 LDUR X11, [X10 - 0x8]
	0x03D41F34 CMP X11, X1
	0x03D41F38 B.EQ 0x3D41F58
	0x03D41F3C SUBS X9, X9, 0x1
	0x03D41F40 ADD X10, X10, 0x10
	0x03D41F44 B.NE 0x3D41F30
	0x03D41F48 MOVZ W2, 0x8
	0x03D41F4C MOV X0, X20
	0x03D41F50 BL 0x1C5C788
	0x03D41F54 B 0x3D41F68
	0x03D41F58 LDR W9, [X10]
	0x03D41F5C ADD W9, W9, 0x8
	0x03D41F60 ADD X8, X8, W9, 0x4, SXTW
	0x03D41F64 ADD X0, X8, 0x138
	0x03D41F68 LDP X8, X1, [X0]
	0x03D41F6C MOV X0, X20
	0x03D41F70 BLR X8
	0x03D41F74 FCMP S0, 0x0
	0x03D41F78 B.GT 0x3D42060
	0x03D41F7C LDR X8, [X20]
	0x03D41F80 LDR X1, [X21]
	0x03D41F84 LDRH W9, [X8 + 0x12E]
	0x03D41F88 CBZ X9, 0x3D41FAC
	0x03D41F8C LDR X10, [X8 + 0xB0]
	0x03D41F90 ADD X10, X10, 0x8
	0x03D41F94 LDUR X11, [X10 - 0x8]
	0x03D41F98 CMP X11, X1
	0x03D41F9C B.EQ 0x3D41FBC
	0x03D41FA0 SUBS X9, X9, 0x1
	0x03D41FA4 ADD X10, X10, 0x10
	0x03D41FA8 B.NE 0x3D41F94
	0x03D41FAC MOVZ W2, 0x1
	0x03D41FB0 MOV X0, X20
	0x03D41FB4 BL 0x1C5C788
	0x03D41FB8 B 0x3D41FCC
	0x03D41FBC LDR W9, [X10]
	0x03D41FC0 ADD W9, W9, 0x1
	0x03D41FC4 ADD X8, X8, W9, 0x4, SXTW
	0x03D41FC8 ADD X0, X8, 0x138
	0x03D41FCC LDP X8, X1, [X0]
	0x03D41FD0 MOV X0, X20
	0x03D41FD4 BLR X8
	0x03D41FD8 FMUL S0, S0, S0
	0x03D41FDC FMUL S1, S1, S1
	0x03D41FE0 FMUL S2, S2, S2
	0x03D41FE4 FADD S0, S0, S1
	0x03D41FE8 FADD S0, S2, S0
	0x03D41FEC FMUL S1, S3, S3
	0x03D41FF0 FADD S0, S1, S0
	0x03D41FF4 FCMP S0, S8
	0x03D41FF8 B.MI 0x3D4251C
	0x03D41FFC LDR X8, [X20]
	0x03D42000 LDR X1, [X21]
	0x03D42004 LDRH W9, [X8 + 0x12E]
	0x03D42008 CBZ X9, 0x3D4202C
	0x03D4200C LDR X10, [X8 + 0xB0]
	0x03D42010 ADD X10, X10, 0x8
	0x03D42014 LDUR X11, [X10 - 0x8]
	0x03D42018 CMP X11, X1
	0x03D4201C B.EQ 0x3D4203C
	0x03D42020 SUBS X9, X9, 0x1
	0x03D42024 ADD X10, X10, 0x10
	0x03D42028 B.NE 0x3D42014
	0x03D4202C MOVZ W2, 0x4
	0x03D42030 MOV X0, X20
	0x03D42034 BL 0x1C5C788
	0x03D42038 B 0x3D4204C
	0x03D4203C LDR W9, [X10]
	0x03D42040 ADD W9, W9, 0x4
	0x03D42044 ADD X8, X8, W9, 0x4, SXTW
	0x03D42048 ADD X0, X8, 0x138
	0x03D4204C LDP X8, X1, [X0]
	0x03D42050 MOV X0, X20
	0x03D42054 BLR X8
	0x03D42058 FCMP S0, 0x0
	0x03D4205C B.LE 0x3D4251C
	0x03D42060 ADD X8, X31, 0xC0
	0x03D42064 ADD X0, X8, 0x10
	0x03D42068 MOVZ W2, 0xA8
	0x03D4206C MOV W1, W31
	0x03D42070 BL 0x3EB1B10
	0x03D42074 LDR X0, [X19 + 0x110]
	0x03D42078 CBZ X0, 0x3D42534
	0x03D4207C MOV X1, X31
	0x03D42080 BL 0x3DED76C
	0x03D42084 STP S0, S1, [X31 + 0xC0]
	0x03D42088 STP S2, S3, [X31 + 0xC8]
	0x03D4208C LDR X8, [X20]
	0x03D42090 LDR X1, [X21]
	0x03D42094 LDRH W9, [X8 + 0x12E]
	0x03D42098 CBZ X9, 0x3D420BC
	0x03D4209C LDR X10, [X8 + 0xB0]
	0x03D420A0 ADD X10, X10, 0x8
	0x03D420A4 LDUR X11, [X10 - 0x8]
	0x03D420A8 CMP X11, X1
	0x03D420AC B.EQ 0x3D420CC
	0x03D420B0 SUBS X9, X9, 0x1
	0x03D420B4 ADD X10, X10, 0x10
	0x03D420B8 B.NE 0x3D420A4
	0x03D420BC MOVZ W2, 0x5
	0x03D420C0 MOV X0, X20
	0x03D420C4 BL 0x1C5C788
	0x03D420C8 B 0x3D420DC
	0x03D420CC LDR W9, [X10]
	0x03D420D0 ADD W9, W9, 0x5
	0x03D420D4 ADD X8, X8, W9, 0x4, SXTW
	0x03D420D8 ADD X0, X8, 0x138
	0x03D420DC LDP X8, X1, [X0]
	0x03D420E0 MOV X0, X20
	0x03D420E4 BLR X8
	0x03D420E8 STP S0, S1, [X31 + 0xE0]
	0x03D420EC STP S2, S3, [X31 + 0xE8]
	0x03D420F0 LDR X8, [X20]
	0x03D420F4 LDR X1, [X21]
	0x03D420F8 LDRH W9, [X8 + 0x12E]
	0x03D420FC CBZ X9, 0x3D42120
	0x03D42100 LDR X10, [X8 + 0xB0]
	0x03D42104 ADD X10, X10, 0x8
	0x03D42108 LDUR X11, [X10 - 0x8]
	0x03D4210C CMP X11, X1
	0x03D42110 B.EQ 0x3D42130
	0x03D42114 SUBS X9, X9, 0x1
	0x03D42118 ADD X10, X10, 0x10
	0x03D4211C B.NE 0x3D42108
	0x03D42120 MOVZ W2, 0x9
	0x03D42124 MOV X0, X20
	0x03D42128 BL 0x1C5C788
	0x03D4212C B 0x3D42140
	0x03D42130 LDR W9, [X10]
	0x03D42134 ADD W9, W9, 0x9
	0x03D42138 ADD X8, X8, W9, 0x4, SXTW
	0x03D4213C ADD X0, X8, 0x138
	0x03D42140 LDP X8, X1, [X0]
	0x03D42144 MOV X0, X20
	0x03D42148 BLR X8
	0x03D4214C STP S0, S1, [X31 + 0xF0]
	0x03D42150 STP S2, S3, [X31 + 0xF8]
	0x03D42154 LDR X8, [X20]
	0x03D42158 LDR X1, [X21]
	0x03D4215C LDRH W9, [X8 + 0x12E]
	0x03D42160 CBZ X9, 0x3D42184
	0x03D42164 LDR X10, [X8 + 0xB0]
	0x03D42168 ADD X10, X10, 0x8
	0x03D4216C LDUR X11, [X10 - 0x8]
	0x03D42170 CMP X11, X1
	0x03D42174 B.EQ 0x3D42194
	0x03D42178 SUBS X9, X9, 0x1
	0x03D4217C ADD X10, X10, 0x10
	0x03D42180 B.NE 0x3D4216C
	0x03D42184 MOVZ W2, 0x7
	0x03D42188 MOV X0, X20
	0x03D4218C BL 0x1C5C788
	0x03D42190 B 0x3D421A4
	0x03D42194 LDR W9, [X10]
	0x03D42198 ADD W9, W9, 0x7
	0x03D4219C ADD X8, X8, W9, 0x4, SXTW
	0x03D421A0 ADD X0, X8, 0x138
	0x03D421A4 LDP X8, X1, [X0]
	0x03D421A8 MOV X0, X20
	0x03D421AC BLR X8
	0x03D421B0 STR S0, [X31 + 0x100]
	0x03D421B4 STR S1, [X31 + 0x104]
	0x03D421B8 STR S2, [X31 + 0x108]
	0x03D421BC STR S3, [X31 + 0x10C]
	0x03D421C0 LDR X8, [X20]
	0x03D421C4 LDR X1, [X21]
	0x03D421C8 LDRH W9, [X8 + 0x12E]
	0x03D421CC CBZ X9, 0x3D421F0
	0x03D421D0 LDR X10, [X8 + 0xB0]
	0x03D421D4 ADD X10, X10, 0x8
	0x03D421D8 LDUR X11, [X10 - 0x8]
	0x03D421DC CMP X11, X1
	0x03D421E0 B.EQ 0x3D42200
	0x03D421E4 SUBS X9, X9, 0x1
	0x03D421E8 ADD X10, X10, 0x10
	0x03D421EC B.NE 0x3D421D8
	0x03D421F0 MOVZ W2, 0x1
	0x03D421F4 MOV X0, X20
	0x03D421F8 BL 0x1C5C788
	0x03D421FC B 0x3D42210
	0x03D42200 LDR W9, [X10]
	0x03D42204 ADD W9, W9, 0x1
	0x03D42208 ADD X8, X8, W9, 0x4, SXTW
	0x03D4220C ADD X0, X8, 0x138
	0x03D42210 LDP X8, X1, [X0]
	0x03D42214 MOV X0, X20
	0x03D42218 BLR X8
	0x03D4221C STR S0, [X31 + 0x110]
	0x03D42220 STR S1, [X31 + 0x114]
	0x03D42224 STR S2, [X31 + 0x118]
	0x03D42228 STR S3, [X31 + 0x11C]
	0x03D4222C LDR X8, [X20]
	0x03D42230 LDR X1, [X21]
	0x03D42234 LDRH W9, [X8 + 0x12E]
	0x03D42238 CBZ X9, 0x3D4225C
	0x03D4223C LDR X10, [X8 + 0xB0]
	0x03D42240 ADD X10, X10, 0x8
	0x03D42244 LDUR X11, [X10 - 0x8]
	0x03D42248 CMP X11, X1
	0x03D4224C B.EQ 0x3D4226C
	0x03D42250 SUBS X9, X9, 0x1
	0x03D42254 ADD X10, X10, 0x10
	0x03D42258 B.NE 0x3D42244
	0x03D4225C MOVZ W2, 0x6
	0x03D42260 MOV X0, X20
	0x03D42264 BL 0x1C5C788
	0x03D42268 B 0x3D4227C
	0x03D4226C LDR W9, [X10]
	0x03D42270 ADD W9, W9, 0x6
	0x03D42274 ADD X8, X8, W9, 0x4, SXTW
	0x03D42278 ADD X0, X8, 0x138
	0x03D4227C LDP X8, X1, [X0]
	0x03D42280 MOV X0, X20
	0x03D42284 BLR X8
	0x03D42288 STR S0, [X31 + 0x120]
	0x03D4228C LDR X8, [X20]
	0x03D42290 LDR X1, [X21]
	0x03D42294 LDRH W9, [X8 + 0x12E]
	0x03D42298 CBZ X9, 0x3D422BC
	0x03D4229C LDR X10, [X8 + 0xB0]
	0x03D422A0 ADD X10, X10, 0x8
	0x03D422A4 LDUR X11, [X10 - 0x8]
	0x03D422A8 CMP X11, X1
	0x03D422AC B.EQ 0x3D422CC
	0x03D422B0 SUBS X9, X9, 0x1
	0x03D422B4 ADD X10, X10, 0x10
	0x03D422B8 B.NE 0x3D422A4
	0x03D422BC MOVZ W2, 0xC
	0x03D422C0 MOV X0, X20
	0x03D422C4 BL 0x1C5C788
	0x03D422C8 B 0x3D422DC
	0x03D422CC LDR W9, [X10]
	0x03D422D0 ADD W9, W9, 0xC
	0x03D422D4 ADD X8, X8, W9, 0x4, SXTW
	0x03D422D8 ADD X0, X8, 0x138
	0x03D422DC LDP X8, X1, [X0]
	0x03D422E0 MOV X0, X20
	0x03D422E4 BLR X8
	0x03D422E8 STR S0, [X31 + 0x124]
	0x03D422EC LDR X8, [X20]
	0x03D422F0 LDR X1, [X21]
	0x03D422F4 LDRH W9, [X8 + 0x12E]
	0x03D422F8 CBZ X9, 0x3D4231C
	0x03D422FC LDR X10, [X8 + 0xB0]
	0x03D42300 ADD X10, X10, 0x8
	0x03D42304 LDUR X11, [X10 - 0x8]
	0x03D42308 CMP X11, X1
	0x03D4230C B.EQ 0x3D4232C
	0x03D42310 SUBS X9, X9, 0x1
	0x03D42314 ADD X10, X10, 0x10
	0x03D42318 B.NE 0x3D42304
	0x03D4231C MOVZ W2, 0x8
	0x03D42320 MOV X0, X20
	0x03D42324 BL 0x1C5C788
	0x03D42328 B 0x3D4233C
	0x03D4232C LDR W9, [X10]
	0x03D42330 ADD W9, W9, 0x8
	0x03D42334 ADD X8, X8, W9, 0x4, SXTW
	0x03D42338 ADD X0, X8, 0x138
	0x03D4233C LDP X8, X1, [X0]
	0x03D42340 MOV X0, X20
	0x03D42344 BLR X8
	0x03D42348 STR S0, [X31 + 0x128]
	0x03D4234C LDR X8, [X20]
	0x03D42350 LDR X1, [X21]
	0x03D42354 LDRH W9, [X8 + 0x12E]
	0x03D42358 CBZ X9, 0x3D4237C
	0x03D4235C LDR X10, [X8 + 0xB0]
	0x03D42360 ADD X10, X10, 0x8
	0x03D42364 LDUR X11, [X10 - 0x8]
	0x03D42368 CMP X11, X1
	0x03D4236C B.EQ 0x3D4238C
	0x03D42370 SUBS X9, X9, 0x1
	0x03D42374 ADD X10, X10, 0x10
	0x03D42378 B.NE 0x3D42364
	0x03D4237C MOVZ W2, 0x4
	0x03D42380 MOV X0, X20
	0x03D42384 BL 0x1C5C788
	0x03D42388 B 0x3D4239C
	0x03D4238C LDR W9, [X10]
	0x03D42390 ADD W9, W9, 0x4
	0x03D42394 ADD X8, X8, W9, 0x4, SXTW
	0x03D42398 ADD X0, X8, 0x138
	0x03D4239C LDP X8, X1, [X0]
	0x03D423A0 MOV X0, X20
	0x03D423A4 BLR X8
	0x03D423A8 STR S0, [X31 + 0x12C]
	0x03D423AC LDR X8, [X19 + 0x110]
	0x03D423B0 CBZ X8, 0x3D42534
	0x03D423B4 LDR X0, [X19 + 0x10]
	0x03D423B8 LDR X1, [X8 + 0x188]
	0x03D423BC MOV X2, X31
	0x03D423C0 BL 0x3DC3B54
	0x03D423C4 STR X0, [X31 + 0x158]
	0x03D423C8 LDR X8, [X19 + 0x110]
	0x03D423CC CBZ X8, 0x3D42534
	0x03D423D0 LDR X0, [X19 + 0x10]
	0x03D423D4 LDR X1, [X8 + 0x190]
	0x03D423D8 MOV X2, X31
	0x03D423DC BL 0x3DC3B54
	0x03D423E0 STR X0, [X31 + 0x160]
	0x03D423E4 LDR X8, [X19 + 0x110]
	0x03D423E8 CBZ X8, 0x3D42534
	0x03D423EC LDR X0, [X19 + 0x10]
	0x03D423F0 LDR X1, [X8 + 0x198]
	0x03D423F4 MOV X2, X31
	0x03D423F8 BL 0x3DC3B54
	0x03D423FC STR X0, [X31 + 0x168]
	0x03D42400 LDR X8, [X19 + 0x110]
	0x03D42404 CBZ X8, 0x3D42534
	0x03D42408 LDR X0, [X19 + 0x10]
	0x03D4240C LDR X1, [X8 + 0x1A0]
	0x03D42410 MOV X2, X31
	0x03D42414 BL 0x3DC3B54
	0x03D42418 STR X0, [X31 + 0x170]
	0x03D4241C LDR X0, [X19 + 0x110]
	0x03D42420 CBZ X0, 0x3D42534
	0x03D42424 MOV X1, X31
	0x03D42428 BL 0x3DEC0CC
	0x03D4242C CBZ X0, 0x3D42534
	0x03D42430 ADRP X10, 0x3DA000
	0x03D42434 LDR X8, [X0]
	0x03D42438 LDR X10, [X10 + 0xE80]
	0x03D4243C MOV X20, X0
	0x03D42440 LDRH W9, [X8 + 0x12E]
	0x03D42444 LDR X1, [X10]
	0x03D42448 CBZ X9, 0x3D4246C
	0x03D4244C LDR X10, [X8 + 0xB0]
	0x03D42450 ADD X10, X10, 0x8
	0x03D42454 LDUR X11, [X10 - 0x8]
	0x03D42458 CMP X11, X1
	0x03D4245C B.EQ 0x3D4247C
	0x03D42460 SUBS X9, X9, 0x1
	0x03D42464 ADD X10, X10, 0x10
	0x03D42468 B.NE 0x3D42454
	0x03D4246C MOVZ W2, 0x2
	0x03D42470 MOV X0, X20
	0x03D42474 BL 0x1C5C788
	0x03D42478 B 0x3D4248C
	0x03D4247C LDR W9, [X10]
	0x03D42480 ADD W9, W9, 0x2
	0x03D42484 ADD X8, X8, W9, 0x4, SXTW
	0x03D42488 ADD X0, X8, 0x138
	0x03D4248C LDP X8, X1, [X0]
	0x03D42490 MOV X0, X20
	0x03D42494 BLR X8
	0x03D42498 CMP W0, 0x1
	0x03D4249C B.NE 0x3D424C8
	0x03D424A0 ADRP X20, 0x3DA000
	0x03D424A4 LDR X20, [X20 + 0xE98]
	0x03D424A8 LDR X0, [X20]
	0x03D424AC LDR W8, [X0 + 0xE0]
	0x03D424B0 CBNZ W8, 0x3D424BC
	0x03D424B4 BL 0x1C16DFC
	0x03D424B8 LDR X0, [X20]
	0x03D424BC LDR X8, [X0 + 0xB8]
	0x03D424C0 LDUR V0, [X8 + 0x18]
	0x03D424C4 B 0x3D424CC
	0x03D424C8 FMOV V0.4S, 0x0
	0x03D424CC ADD X0, X31, 0x178
	0x03D424D0 ADD X1, X31, 0xC0
	0x03D424D4 MOVZ W2, 0xB8
	0x03D424D8 STR V0, [X31 + 0xD]
	0x03D424DC ADD X20, X31, 0x178
	0x03D424E0 BL 0x3EB1AC0
	0x03D424E4 LDR X0, [X19 + 0x110]
	0x03D424E8 ADD X1, X20, 0x70
	0x03D424EC ADD X2, X20, 0x88
	0x03D424F0 ADD X3, X20, 0x78
	0x03D424F4 ADD X4, X20, 0x80
	0x03D424F8 MOV X5, X31
	0x03D424FC BL 0x3DC3E38
	0x03D42500 ADD X0, X31, 0x8
	0x03D42504 ADD X1, X31, 0x178
	0x03D42508 MOVZ W2, 0xB8
	0x03D4250C BL 0x3EB1AC0
	0x03D42510 ADD X1, X31, 0x8
	0x03D42514 MOV X0, X19
	0x03D42518 BL 0x3D3F280
	0x03D4251C ADD X31, X31, 0x230
	0x03D42520 LDP X20, X19, [X31 + 0x20]
	0x03D42524 LDP X30, X21, [X31 + 0x10]
	0x03D42528 LDR X29, [X31 + 0x8]
	0x03D4252C LDR V8, [X31], #0x30
	0x03D42530 RET
	0x03D42534 BL 0x1C16F20
	0x03D42538 SUB X31, X31, 0x120
	0x03D4253C STR X29, [X31 + 0xF0]
	0x03D42540 STP X30, X21, [X31 + 0x100]
	0x03D42544 STP X20, X19, [X31 + 0x110]
	0x03D42548 ADRP X20, 0x6A5000
	0x03D4254C LDRB W8, [X20 + 0xB83]
	0x03D42550 MOV X19, X0
	0x03D42554 TBNZ X8, 0x0, 0x3D42584
	0x03D42558 ADRP X0, 0x3B1000
	0x03D4255C LDR X0, [X0 + 0xA28]
	0x03D42560 BL 0x1C16CF4
	0x03D42564 ADRP X0, 0x423000
	0x03D42568 LDR X0, [X0 + 0x1E8]
	0x03D4256C BL 0x1C16CF4
	0x03D42570 ADRP X0, 0x3DB000
	0x03D42574 LDR X0, [X0 + 0x240]
	0x03D42578 BL 0x1C16CF4
	0x03D4257C MOVZ W8, 0x1
	0x03D42580 STRB W8, [X20 + 0xB83]
	0x03D42584 LDR X20, [X19 + 0x110]
	0x03D42588 CBZ X20, 0x3D4276C
	0x03D4258C LDR W8, [X20 + 0xF0]
	0x03D42590 CMP W8, 0x4
	0x03D42594 B.EQ 0x3D4266C
	0x03D42598 CMP W8, 0x2
	0x03D4259C B.NE 0x3D42750
	0x03D425A0 LDR X0, [X19 + 0x10]
	0x03D425A4 CBZ X0, 0x3D4276C
	0x03D425A8 MOV X1, X31
	0x03D425AC BL 0x3D268E4
	0x03D425B0 CBZ X0, 0x3D4276C
	0x03D425B4 MOVZ W8, 0x5
	0x03D425B8 STR W8, [X0 + 0x34]
	0x03D425BC LDR X8, [X19 + 0x110]
	0x03D425C0 MOVI V0.2D, 0x0
	0x03D425C4 STR X8, [X0 + 0x18]
	0x03D425C8 LDR X8, [X19 + 0x18]
	0x03D425CC STP V0, V0, [X31 + 0x20]
	0x03D425D0 STR V0, [X31 + 0x4]
	0x03D425D4 STP X31, X31, [X31 + 0x10]
	0x03D425D8 STR X31, [X31 + 0x8]
	0x03D425DC CBZ X8, 0x3D4276C
	0x03D425E0 LDP V0, V1, [X31 + 0x20]
	0x03D425E4 LDR V2, [X31 + 0x4]
	0x03D425E8 ADD X9, X31, 0x70
	0x03D425EC LDR X10, [X31 + 0x18]
	0x03D425F0 STP V0, V1, [X31 + 0x70]
	0x03D425F4 LDUR V0, [X31 + 0x8]
	0x03D425F8 STR V2, [X9 + 0x2]
	0x03D425FC ADRP X11, 0x423000
	0x03D42600 LDR X11, [X11 + 0x1E8]
	0x03D42604 STR V0, [X31 + 0x5]
	0x03D42608 STR X10, [X31 + 0x60]
	0x03D4260C LDR W13, [X8 + 0x1C]
	0x03D42610 LDR X10, [X8 + 0x10]
	0x03D42614 LDR X12, [X11]
	0x03D42618 ADD W11, W13, 0x1
	0x03D4261C STR W11, [X8 + 0x1C]
	0x03D42620 CBZ X10, 0x3D4276C
	0x03D42624 LDRSW X11, [X8 + 0x18]
	0x03D42628 LDR W13, [X10 + 0x18]
	0x03D4262C CMP W11, W13
	0x03D42630 B.CS 0x3D42700
	0x03D42634 ADD W12, W11, 0x1
	0x03D42638 STR W12, [X8 + 0x18]
	0x03D4263C LDR V0, [X9 + 0x2]
	0x03D42640 LDP V1, V2, [X31 + 0x70]
	0x03D42644 MOVZ W13, 0x50
	0x03D42648 MADD X8, X11, X13, X10
	0x03D4264C STR X0, [X8 + 0x50]
	0x03D42650 STP V2, V0, [X8 + 0x30]
	0x03D42654 STR V1, [X8 + 0x2]
	0x03D42658 LDR X9, [X31 + 0x60]
	0x03D4265C LDR V0, [X31 + 0x5]
	0x03D42660 STR X9, [X8 + 0x68]
	0x03D42664 STUR V0, [X8 + 0x58]
	0x03D42668 B 0x3D4273C
	0x03D4266C LDP W21, W8, [X19 + 0xB8]
	0x03D42670 CMP W21, W8
	0x03D42674 B.LE 0x3D426B0
	0x03D42678 ADD W20, W8, 0x1
	0x03D4267C STR W20, [X19 + 0xBC]
	0x03D42680 ADRP X8, 0x3B1000
	0x03D42684 LDR X8, [X8 + 0xA28]
	0x03D42688 LDR X0, [X8]
	0x03D4268C LDR W8, [X0 + 0xE0]
	0x03D42690 CBNZ W8, 0x3D42698
	0x03D42694 BL 0x1C16DFC
	0x03D42698 CMP W21, W20
	0x03D4269C CSET W0, EQ
	0x03D426A0 MOV X1, X31
	0x03D426A4 BL 0x3C06E58
	0x03D426A8 LDR W8, [X19 + 0xBC]
	0x03D426AC LDR X20, [X19 + 0x110]
	0x03D426B0 STR W8, [X19 + 0xB4]
	0x03D426B4 ADRP X8, 0x3DB000
	0x03D426B8 LDR X8, [X8 + 0x240]
	0x03D426BC LDR X0, [X8]
	0x03D426C0 LDR W8, [X0 + 0xE0]
	0x03D426C4 CBNZ W8, 0x3D426CC
	0x03D426C8 BL 0x1C16DFC
	0x03D426CC MOV X0, X20
	0x03D426D0 MOV X1, X31
	0x03D426D4 BL 0x3DE0EBC
	0x03D426D8 TBZ X0, 0x0, 0x3D426E8
	0x03D426DC MOV X0, X19
	0x03D426E0 BL 0x3D42770
	0x03D426E4 B 0x3D426F0
	0x03D426E8 MOV X0, X19
	0x03D426EC BL 0x3D42AF0
	0x03D426F0 LDR W8, [X19 + 0xB8]
	0x03D426F4 ADD W8, W8, 0x1
	0x03D426F8 STR W8, [X19 + 0xB8]
	0x03D426FC B 0x3D42748
	0x03D42700 LDR X10, [X12 + 0x20]
	0x03D42704 LDP V0, V1, [X31 + 0x70]
	0x03D42708 LDR V2, [X9 + 0x2]
	0x03D4270C LDR V3, [X31 + 0x5]
	0x03D42710 LDR X10, [X10 + 0xC0]
	0x03D42714 LDR X11, [X31 + 0x60]
	0x03D42718 ADD X1, X31, 0xA0
	0x03D4271C LDR X2, [X10 + 0x70]
	0x03D42720 STP V0, V1, [X9 + 0x30]
	0x03D42724 STR V2, [X9 + 0x5]
	0x03D42728 STR X0, [X31 + 0xD0]
	0x03D4272C MOV X0, X8
	0x03D42730 STUR V3, [X9 + 0x68]
	0x03D42734 STR X11, [X31 + 0xE8]
	0x03D42738 BL 0x315B370
	0x03D4273C MOVZ W8, 0x1
	0x03D42740 STRB W8, [X19 + 0x82]
	0x03D42744 STRB W8, [X19 + 0x80]
	0x03D42748 LDR X20, [X19 + 0x110]
	0x03D4274C CBZ X20, 0x3D4276C
	0x03D42750 LDR X8, [X20 + 0x160]
	0x03D42754 LDP X30, X21, [X31 + 0x100]
	0x03D42758 LDR X29, [X31 + 0xF0]
	0x03D4275C STR X8, [X19 + 0xC0]
	0x03D42760 LDP X20, X19, [X31 + 0x110]
	0x03D42764 ADD X31, X31, 0x120
	0x03D42768 RET
	0x03D4276C BL 0x1C16F20
	0x03D42770 STP X29, X30, [X31 - 0x60]!
	0x03D42774 STP X28, X27, [X31 + 0x10]
	0x03D42778 STP X26, X25, [X31 + 0x20]
	0x03D4277C STP X24, X23, [X31 + 0x30]
	0x03D42780 STP X22, X21, [X31 + 0x40]
	0x03D42784 STP X20, X19, [X31 + 0x50]
	0x03D42788 SUB X31, X31, 0x1A0
	0x03D4278C ADRP X20, 0x6A5000
	0x03D42790 LDRB W8, [X20 + 0xB8C]
	0x03D42794 MOV X19, X0
	0x03D42798 TBNZ X8, 0x0, 0x3D42804
	0x03D4279C ADRP X0, 0x3B1000
	0x03D427A0 LDR X0, [X0 + 0xA28]
	0x03D427A4 BL 0x1C16CF4
	0x03D427A8 ADRP X0, 0x423000
	0x03D427AC LDR X0, [X0 + 0x1E8]
	0x03D427B0 BL 0x1C16CF4
	0x03D427B4 ADRP X0, 0x423000
	0x03D427B8 LDR X0, [X0 + 0x250]
	0x03D427BC BL 0x1C16CF4
	0x03D427C0 ADRP X0, 0x422000
	0x03D427C4 LDR X0, [X0 + 0x648]
	0x03D427C8 BL 0x1C16CF4
	0x03D427CC ADRP X0, 0x423000
	0x03D427D0 LDR X0, [X0 + 0x148]
	0x03D427D4 BL 0x1C16CF4
	0x03D427D8 ADRP X0, 0x422000
	0x03D427DC LDR X0, [X0 + 0xFB8]
	0x03D427E0 BL 0x1C16CF4
	0x03D427E4 ADRP X0, 0x422000
	0x03D427E8 LDR X0, [X0 + 0x610]
	0x03D427EC BL 0x1C16CF4
	0x03D427F0 ADRP X0, 0x423000
	0x03D427F4 LDR X0, [X0 + 0x1D8]
	0x03D427F8 BL 0x1C16CF4
	0x03D427FC MOVZ W8, 0x1
	0x03D42800 STRB W8, [X20 + 0xB8C]
	0x03D42804 MOVI V0.2D, 0x0
	0x03D42808 STP V0, V0, [X31 + 0xE0]
	0x03D4280C STP V0, V0, [X31 + 0xC0]
	0x03D42810 STR V0, [X31 + 0xB]
	0x03D42814 STP X31, X31, [X31 + 0xA0]
	0x03D42818 LDR W1, [X19 + 0xC8]
	0x03D4281C ADDS W31, W1, 0x1
	0x03D42820 B.EQ 0x3D42ACC
	0x03D42824 LDR X0, [X19 + 0x18]
	0x03D42828 CBZ X0, 0x3D42AEC
	0x03D4282C ADRP X8, 0x423000
	0x03D42830 LDR X8, [X8 + 0x250]
	0x03D42834 ADRP X25, 0x423000
	0x03D42838 ADRP X20, 0x3B1000
	0x03D4283C ADRP X24, 0x422000
	0x03D42840 LDR X2, [X8]
	0x03D42844 LDR X25, [X25 + 0x148]
	0x03D42848 LDR X20, [X20 + 0xA28]
	0x03D4284C LDR X24, [X24 + 0xFB8]
	0x03D42850 ADD X8, X31, 0x150
	0x03D42854 BL 0x315AFB8
	0x03D42858 ADD X0, X31, 0xB0
	0x03D4285C ADD X1, X31, 0x150
	0x03D42860 MOVZ W2, 0x50
	0x03D42864 ADD X21, X31, 0xB0
	0x03D42868 BL 0x3EB1AC0
	0x03D4286C LDR X1, [X25]
	0x03D42870 ADD X0, X31, 0xB0
	0x03D42874 BL 0x2408B10
	0x03D42878 LDR X8, [X20]
	0x03D4287C MOV W20, W0
	0x03D42880 LDR W9, [X8 + 0xE0]
	0x03D42884 CBNZ W9, 0x3D42890
	0x03D42888 MOV X0, X8
	0x03D4288C BL 0x1C16DFC
	0x03D42890 CMP W20, 0x0
	0x03D42894 CSET W0, GT
	0x03D42898 MOV X1, X31
	0x03D4289C BL 0x3C06E58
	0x03D428A0 LDR X1, [X24]
	0x03D428A4 ADD X0, X21, 0x10
	0x03D428A8 BL 0x2407134
	0x03D428AC CMP W0, 0x0
	0x03D428B0 CSET W0, GT
	0x03D428B4 MOV X1, X31
	0x03D428B8 BL 0x3C06E58
	0x03D428BC LDR V0, [X31 + 0xB]
	0x03D428C0 ADD X0, X31, 0x150
	0x03D428C4 ADD X1, X31, 0xB0
	0x03D428C8 MOVZ W2, 0x50
	0x03D428CC ADD X20, X19, 0x30
	0x03D428D0 STR V0, [X19 + 0x3]
	0x03D428D4 BL 0x3EB1AC0
	0x03D428D8 LDR V0, [X31 + 0x16]
	0x03D428DC LDR V1, [X19 + 0xB8]
	0x03D428E0 LDR X8, [X19 + 0xC0]
	0x03D428E4 MOVZ W9, 0x1
	0x03D428E8 STR V0, [X19 + 0x4]
	0x03D428EC LDRB W10, [X31 + 0xF4]
	0x03D428F0 UNIMPLEMENTED
	0x03D428F4 STR X8, [X19 + 0x68]
	0x03D428F8 STR D0, [X19 + 0x78]
	0x03D428FC AND W8, W10, 0x1
	0x03D42900 STRB W9, [X19 + 0x76]
	0x03D42904 STRB W8, [X19 + 0x74]
	0x03D42908 STRB W9, [X19 + 0x80]
	0x03D4290C LDR X1, [X25]
	0x03D42910 MOV X0, X20
	0x03D42914 BL 0x2408B10
	0x03D42918 LDR X8, [X19 + 0xD0]
	0x03D4291C CBZ X8, 0x3D42AEC
	0x03D42920 ADRP X9, 0x423000
	0x03D42924 LDR X9, [X9 + 0x1D8]
	0x03D42928 MOV W22, W0
	0x03D4292C MOV X0, X8
	0x03D42930 MOV W1, W22
	0x03D42934 LDR X2, [X9]
	0x03D42938 ADD X21, X19, 0x40
	0x03D4293C BL 0x26AEF1C
	0x03D42940 CMP W22, 0x1
	0x03D42944 STP X0, X1, [X31 + 0xA0]
	0x03D42948 B.LT 0x3D429DC
	0x03D4294C ADRP X26, 0x422000
	0x03D42950 ADRP X27, 0x422000
	0x03D42954 LDR X26, [X26 + 0x648]
	0x03D42958 LDR X27, [X27 + 0x610]
	0x03D4295C ADD X8, X31, 0x150
	0x03D42960 MOV W23, W31
	0x03D42964 ADD X28, X8, 0xC
	0x03D42968 MOVZ W29, 0x3F800000
	0x03D4296C LDR X2, [X26]
	0x03D42970 ADD X8, X31, 0x150
	0x03D42974 MOV X0, X20
	0x03D42978 MOV W1, W23
	0x03D4297C BL 0x240883C
	0x03D42980 LDP V0, V1, [X28]
	0x03D42984 LDR V2, [X28 + 0x2]
	0x03D42988 LDR X8, [X31 + 0x150]
	0x03D4298C LDR W9, [X28 + 0x30]
	0x03D42990 STR V0, [X31 + 0x6]
	0x03D42994 STP V1, V2, [X31 + 0x70]
	0x03D42998 LDR X3, [X27]
	0x03D4299C LDP V1, V0, [X31 + 0x70]
	0x03D429A0 LDR V2, [X31 + 0x6]
	0x03D429A4 STR X8, [X31 + 0x150]
	0x03D429A8 MOV W8, W9
	0x03D429AC ADD X0, X31, 0xA0
	0x03D429B0 ADD X2, X31, 0x150
	0x03D429B4 MOV W1, W23
	0x03D429B8 STR W9, [X31 + 0x90]
	0x03D429BC STR W29, [X31 + 0x158]
	0x03D429C0 STP V1, V0, [X28 + 0x10]
	0x03D429C4 STR V2, [X28]
	0x03D429C8 STR W8, [X28 + 0x30]
	0x03D429CC BL 0x24088B0
	0x03D429D0 ADD W23, W23, 0x1
	0x03D429D4 CMP W22, W23
	0x03D429D8 B.NE 0x3D4296C
	0x03D429DC LDR V0, [X31 + 0xA]
	0x03D429E0 MOV X0, X20
	0x03D429E4 STR V0, [X20]
	0x03D429E8 LDR X1, [X25]
	0x03D429EC LDR W22, [X19 + 0x118]
	0x03D429F0 BL 0x2408B10
	0x03D429F4 ADD W8, W0, W22
	0x03D429F8 STR W8, [X19 + 0x118]
	0x03D429FC LDR X1, [X24]

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 608
	022 Move [X31+44], S4
	023 Move [X31+92], S0
	024 NotImplemented "Instruction MRS not yet implemented."
	025 Move X8, [X25+40]
	026 Move X21, 0x6A7000
	027 Move V13, V3
	028 Move V10, V2
	029 Move [X31+600], X8
	030 Move W8, [X21+2945]
	031 Move V8, V1
	032 Move X19, X1
	033 Move X20, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {82}
	038 Move X0, 0x425000
	039 Move X0, [X0+624]
	040 Call 0x1C17CF4
	041 Move X0, 0x425000
	042 Move X0, [X0+632]
	043 Call 0x1C17CF4
	044 Move X0, 0x425000
	045 Move X0, [X0+640]
	046 Call 0x1C17CF4
	047 Move X0, 0x425000
	048 Move X0, [X0+648]
	049 Call 0x1C17CF4
	050 Move X0, 0x425000
	051 Move X0, [X0+656]
	052 Call 0x1C17CF4
	053 Move X0, 0x425000
	054 Move X0, [X0+664]
	055 Call 0x1C17CF4
	056 Move X0, 0x425000
	057 Move X0, [X0+672]
	058 Call 0x1C17CF4
	059 Move X0, 0x425000
	060 Move X0, [X0+680]
	061 Call 0x1C17CF4
	062 Move X0, 0x425000
	063 Move X0, [X0+688]
	064 Call 0x1C17CF4
	065 Move X0, 0x425000
	066 Move X0, [X0+696]
	067 Call 0x1C17CF4
	068 Move X0, 0x425000
	069 Move X0, [X0+704]
	070 Call 0x1C17CF4
	071 Move X0, 0x425000
	072 Move X0, [X0+712]
	073 Call 0x1C17CF4
	074 Move X0, 0x3B3000
	075 Move X0, [X0+1448]
	076 Call 0x1C17CF4
	077 Move X0, 0x3B3000
	078 Move X0, [X0+1432]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X21+2945], W8
	082 NotImplemented "Instruction MOVI not yet implemented."
	083 Move [X31+536], X31
	084 Move [X31+584], X31
	085 Move [X31+576], X31
	086 Move [X31+592], X31
	087 Move [X31+496], V0
	088 Move [X31+504], V0
	089 Move [X31+464], V0
	090 Move [X31+472], V0
	091 Move [X31+432], V0
	092 Move [X31+440], V0
	093 Move X8, [X20+240]
	094 Compare X8, 0
	095 JumpIfEqual {114}
	096 Move W9, [X8+24]
	097 Compare W9, 0
	098 JumpIfEqual {1328}
	099 Move X10, [X8+32]
	100 Compare X10, 0
	101 JumpIfEqual {1327}
	102 Move W11, [X10+28]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Add W9, W11, 1
	105 Move [X10+24], W31
	106 Move [X10+28], W9
	107 Move X8, [X8+40]
	108 Compare X8, 0
	109 JumpIfEqual {1327}
	110 Move W9, [X8+28]
	111 Add W9, W9, 1
	112 Move [X8+24], W31
	113 Move [X8+28], W9
	114 Move X8, 0x425000
	115 Move X8, [X8+648]
	116 Move W1, 2
	117 Move X0, [X8]
	118 Call 0x1C17D6C
	119 Move [X20+240], X0
	120 Move X23, 0x425000
	121 Move X23, [X23+712]
	122 Move X21, X0
	123 Move X0, [X23]
	124 Call 0x1C17F10
	125 Move X24, 0x425000
	126 Move X24, [X24+680]
	127 Move X22, X0
	128 Move X1, [X24]
	129 Call List`1<RepeatRectUV>..ctor, X0
	130 Compare X21, 0
	131 JumpIfEqual {1327}
	132 Compare X22, 0
	133 JumpIfEqual {140}
	134 Move X8, [X21]
	135 Move X0, X22
	136 Move X1, [X8+64]
	137 Call 0x1C17E00
	138 Compare X0, 0
	139 JumpIfEqual {1344}
	140 Move W8, [X21+24]
	141 Compare W8, 0
	142 JumpIfEqual {1328}
	143 Move [X21+32], X22
	144 Move X0, [X23]
	145 Move X22, [X20+240]
	146 Call 0x1C17F10
	147 Move X1, [X24]
	148 Move X21, X0
	149 Call List`1<RepeatRectUV>..ctor, X0
	150 Compare X22, 0
	151 JumpIfEqual {1327}
	152 Compare X21, 0
	153 JumpIfEqual {160}
	154 Move X8, [X22]
	155 Move X0, X21
	156 Move X1, [X8+64]
	157 Call 0x1C17E00
	158 Compare X0, 0
	159 JumpIfEqual {1344}
	160 Move W8, [X22+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move [X22+40], X21
	163 Move V1, [X19]
	164 Move S0, [X19+4]
	165 Move S14, [X19+8]
	166 Move V9, [X19+12]
	167 Add X21, X19, 96
	168 Move X0, X21
	169 Move X1, X31
	170 Move [X31+52], S1
	171 Move [X31+60], S0
	172 Call BackgroundSize.get_sizeType, X0
	173 Move [X31+60], S8
	174 Compare W0, 0
	175 JumpIfEqual {186}
	176 Move X0, X21
	177 Move X1, X31
	178 Call BackgroundSize.get_sizeType, X0
	179 NotImplemented "Instruction CMP not yet implemented."
	180 NotImplemented "Instruction FDIV not yet implemented."
	181 NotImplemented "Instruction FDIV not yet implemented."
	182 NotImplemented "Instruction FCMP not yet implemented."
	183 Multiply S0, S10, S9
	184 NotImplemented "Instruction FDIV not yet implemented."
	185 Move V14, V10
	186 Move X0, X21
	187 Move X1, X31
	188 Call BackgroundSize.get_x, X0
	189 Move [X31+536], X0
	190 Add X0, X31, 536
	191 Move X1, X31
	192 Call Length.IsNone, X0
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {208}
	197 Move X0, X21
	198 Move X1, X31
	199 Call BackgroundSize.get_y, X0
	200 Move [X31+536], X0
	201 Add X0, X31, 536
	202 Move X1, X31
	203 Call Length.IsNone, X0
	204 Move TEMP, X0
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfEqual {323}
	208 Move X0, X21
	209 Move X1, X31
	210 Call BackgroundSize.get_x, X0
	211 Move [X31+536], X0
	212 Add X0, X31, 536
	213 Move X1, X31
	214 Call Length.IsNone, X0
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfEqual {258}
	219 Move X0, X21
	220 Move X1, X31
	221 Call BackgroundSize.get_y, X0
	222 Move [X31+536], X0
	223 Add X0, X31, 536
	224 Move X1, X31
	225 Call Length.IsAuto, X0
	226 Move TEMP, X0
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfNotEqual {258}
	230 Move X0, X21
	231 Move X1, X31
	232 Call BackgroundSize.get_x, X0
	233 Move X22, X0
	234 Move [X31+536], X0
	235 Move X0, X21
	236 Move X1, X31
	237 Call BackgroundSize.get_x, X0
	238 Move X8, X22
	239 ShiftRight X8, 32
	240 And X8, X8, 0x7FFFFFFF
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move [X31+536], X0
	243 Move S0, W0
	244 Move W8, 0x42C80000
	245 Multiply S0, S10, S0
	246 Move S1, W8
	247 NotImplemented "Instruction FDIV not yet implemented."
	248 Move X0, X21
	249 Move X1, X31
	250 Call BackgroundSize.get_sizeType, X0
	251 NotImplemented "Instruction CMP not yet implemented."
	252 NotImplemented "Instruction FDIV not yet implemented."
	253 NotImplemented "Instruction FDIV not yet implemented."
	254 NotImplemented "Instruction FCMP not yet implemented."
	255 Multiply S0, S13, S14
	256 NotImplemented "Instruction FDIV not yet implemented."
	257 Move V11, V13
	258 Move X0, X21
	259 Move X1, X31
	260 Call BackgroundSize.get_x, X0
	261 Move [X31+536], X0
	262 Add X0, X31, 536
	263 Move X1, X31
	264 Call Length.IsNone, X0
	265 Move TEMP, X0
	266 And TEMP, TEMP, 1
	267 Compare TEMP, 1
	268 JumpIfEqual {323}
	269 Move X0, X21
	270 Move X1, X31
	271 Call BackgroundSize.get_y, X0
	272 Move [X31+536], X0
	273 Add X0, X31, 536
	274 Move X1, X31
	275 Call Length.IsNone, X0
	276 Move TEMP, X0
	277 And TEMP, TEMP, 1
	278 Compare TEMP, 1
	279 JumpIfEqual {323}
	280 Move X0, X21
	281 Move X1, X31
	282 Call BackgroundSize.get_x, X0
	283 Move [X31+536], X0
	284 Add X0, X31, 536
	285 Move X1, X31
	286 Call Length.IsAuto, X0
	287 Move V12, V14
	288 Move TEMP, X0
	289 And TEMP, TEMP, 1
	290 Compare TEMP, 1
	291 JumpIfEqual {1272}
	292 Move X0, X21
	293 Move X1, X31
	294 Call BackgroundSize.get_x, X0
	295 Move X22, X0
	296 Move [X31+536], X0
	297 Move X0, X21
	298 Move X1, X31
	299 Call BackgroundSize.get_x, X0
	300 Move X8, X22
	301 ShiftRight X8, 32
	302 And X8, X8, 0x7FFFFFFF
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move [X31+536], X0
	305 Move S0, W0
	306 Move W8, 0x42C80000
	307 Multiply S0, S10, S0
	308 Move S1, W8
	309 NotImplemented "Instruction FDIV not yet implemented."
	310 Move X8, X0
	311 ShiftRight X8, 32
	312 And X8, X8, 0x7FFFFFFF
	313 Compare X8, 0
	314 JumpIfNotEqual {323}
	315 Move X0, X21
	316 Move X1, X31
	317 Call BackgroundSize.get_x, X0
	318 Move [X31+536], X0
	319 Move S0, W0
	320 Multiply S1, S9, S0
	321 NotImplemented "Instruction FDIV not yet implemented."
	322 Move V14, V0
	323 Move V11, V9
	324 Move X8, -52785152
	325 Move V0, [X8+3996]
	326 NotImplemented "Instruction FCMP not yet implemented."
	327 NotImplemented "Instruction FCMP not yet implemented."
	328 NotImplemented "Instruction FCMP not yet implemented."
	329 NotImplemented "Instruction FCMP not yet implemented."
	330 Move X0, X21
	331 Move X1, X31
	332 Move [X31+48], S0
	333 Call BackgroundSize.get_x, X0
	334 Move [X31+536], X0
	335 Add X0, X31, 536
	336 Move X1, X31
	337 Call Length.IsAuto, X0
	338 Move [X31+16], X25
	339 Move TEMP, X0
	340 And TEMP, TEMP, 1
	341 Compare TEMP, 1
	342 JumpIfNotEqual {373}
	343 Move W8, [X19+92]
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move X8, 0x3B3000
	346 Move X8, [X8+1448]
	347 Move S0, 1
	348 NotImplemented "Instruction FDIV not yet implemented."
	349 Multiply S0, S13, S8
	350 Move X0, [X8]
	351 Move S1, 0.5
	352 Move W8, 0x7F800000
	353 Add S0, S0, S1
	354 Move W9, [X0+224]
	355 Move S1, W8
	356 NotImplemented "Instruction FCVTZS not yet implemented."
	357 NotImplemented "Instruction FCMP not yet implemented."
	358 Move W8, 0x80000000
	359 NotImplemented "Instruction CSEL not yet implemented."
	360 Compare W9, 0
	361 JumpIfNotEqual {363}
	362 Call 0x1C17DFC
	363 Move W1, 1
	364 Move W0, W21
	365 Move X2, X31
	366 Call Math.Max, X0, X1
	367 NotImplemented "Instruction SCVTF not yet implemented."
	368 NotImplemented "Instruction FDIV not yet implemented."
	369 Move S1, W31
	370 Multiply S0, S14, S11
	371 Move [X31+56], S1
	372 Multiply S14, S8, S0
	373 Move X0, X21
	374 Move X1, X31
	375 Call BackgroundSize.get_y, X0
	376 Move [X31+536], X0
	377 Add X0, X31, 536
	378 Move X1, X31
	379 Call Length.IsAuto, X0
	380 Move TEMP, X0
	381 And TEMP, TEMP, 1
	382 Compare TEMP, 1
	383 JumpIfNotEqual {416}
	384 Move W8, [X19+88]
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Move X8, 0x3B3000
	387 Move X8, [X8+1448]
	388 Move S0, 1
	389 NotImplemented "Instruction FDIV not yet implemented."
	390 Multiply S0, S10, S8
	391 Move X0, [X8]
	392 Move S1, 0.5
	393 Move W8, 0x7F800000
	394 Add S0, S0, S1
	395 Move W9, [X0+224]
	396 Move S1, W8
	397 NotImplemented "Instruction FCVTZS not yet implemented."
	398 NotImplemented "Instruction FCMP not yet implemented."
	399 Move W8, 0x80000000
	400 NotImplemented "Instruction CSEL not yet implemented."
	401 Compare W9, 0
	402 JumpIfNotEqual {404}
	403 Call 0x1C17DFC
	404 Move W1, 1
	405 Move W0, W21
	406 Move X2, X31
	407 Call Math.Max, X0, X1
	408 NotImplemented "Instruction SCVTF not yet implemented."
	409 NotImplemented "Instruction FDIV not yet implemented."
	410 Multiply S0, S11, S14
	411 Move S1, W31
	412 Multiply S11, S8, S0
	413 Move [X31+56], S1
	414 Move S0, W31
	415 Move [X31+52], S0
	416 Subtract S1, S13, S11
	417 Subtract S0, S10, S14
	418 Move [X31+32], S0
	419 Move [X31+40], S1
	420 Move X23, 0x425000
	421 Move X26, 0x425000
	422 Move X23, [X23+696]
	423 Move X26, [X26+704]
	424 Move V0, [X31+44]
	425 Move S1, 1
	426 Move X9, -52781056
	427 Move X10, -52781056
	428 NotImplemented "Instruction FDIV not yet implemented."
	429 Move [X31+40], S0
	430 Move V0, [X9+1040]
	431 Add X8, X31, 384
	432 Move W22, W31
	433 Move X25, X31
	434 Move [X31+28], S0
	435 Move V0, [X10+676]
	436 Add X28, X8, 8
	437 Move X29, -52781056
	438 Move W10, 1
	439 Move [X31+24], S0
	440 Move [X31+64], S13
	441 Move [X31+72], S10
	442 Move [X31+88], S14
	443 And W31, W10, 1
	444 Move W8, 92
	445 Move W9, 88
	446 Move W13, W10
	447 NotImplemented "Instruction CSEL not yet implemented."
	448 Move W9, 84
	449 Move W10, 72
	450 NotImplemented "Instruction CSEL not yet implemented."
	451 Move W10, 80
	452 Move W11, 68
	453 NotImplemented "Instruction CSEL not yet implemented."
	454 Move W11, 76
	455 Move W12, 64
	456 NotImplemented "Instruction CSEL not yet implemented."
	457 Move W24, [X19]
	458 Move W27, [X19]
	459 Move V0, [X19]
	460 Move W11, [X19]
	461 NotImplemented "Instruction CMP not yet implemented."
	462 Move S9, W31
	463 Move [X31+80], W13
	464 Move [X31+84], W27
	465 Move [X31+76], S0
	466 Move [X31+72], W11
	467 Move X10, -52072448
	468 Add X10, X10, 4000
	469 NotImplemented "Instruction ADR not yet implemented."
	470 Move W9, [X10]
	471 Add X8, X8, X9
	472 CallNoReturn X8
	473 Move X8, [X20+240]
	474 And W31, W22, 1
	475 NotImplemented "Instruction FCSEL not yet implemented."
	476 Compare X8, 0
	477 JumpIfEqual {1327}
	478 Move W9, [X8+24]
	479 NotImplemented "Instruction CMP not yet implemented."
	480 Add X8, X8, X25
	481 Move X0, [X8+32]
	482 Compare X0, 0
	483 JumpIfEqual {1327}
	484 Move X9, 0x425000
	485 Move W10, [X0+28]
	486 Move X8, [X0+16]
	487 Move X9, [X9+656]
	488 Add W10, W10, 1
	489 Move X9, [X9]
	490 Move [X0+28], W10
	491 Compare X8, 0
	492 JumpIfEqual {1327}
	493 NotImplemented "Instruction LDRSW not yet implemented."
	494 Move W11, [X8+24]
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Move V0, [X29+188]
	497 Move V2, [X31+52]
	498 Move V1, [X31+56]
	499 Add W9, W10, 1
	500 Add X8, X8, X10
	501 Move [X0+24], W9
	502 Move [X8+32], S2
	503 Move [X8+40], S1
	504 Move [X8+40], S14
	505 Move [X8+48], S11
	506 Move [X8+3], V0
	507 Move X8, 0x3B3000
	508 Move X8, [X8+1448]
	509 NotImplemented "Instruction CMP not yet implemented."
	510 NotImplemented "Instruction FCSEL not yet implemented."
	511 Move S2, 0.5
	512 Move X0, [X8]
	513 NotImplemented "Instruction FCSEL not yet implemented."
	514 Multiply S2, S0, S2
	515 Add S1, S1, S2
	516 Move W8, [X0+224]
	517 Move W10, 0x7F800000
	518 NotImplemented "Instruction FDIV not yet implemented."
	519 Move S1, W10
	520 NotImplemented "Instruction FCVTZS not yet implemented."
	521 NotImplemented "Instruction FCMP not yet implemented."
	522 Move W10, 0x80000000
	523 NotImplemented "Instruction CSEL not yet implemented."
	524 Compare W8, 0
	525 JumpIfNotEqual {527}
	526 Call 0x1C17DFC
	527 Move W1, 1
	528 Move W0, W21
	529 Move X2, X31
	530 Call Math.Max, X0, X1
	531 And W31, W0, 1
	532 Move W8, 1
	533 NotImplemented "Instruction CINC not yet implemented."
	534 NotImplemented "Instruction CMP not yet implemented."
	535 NotImplemented "Instruction CSINC not yet implemented."
	536 NotImplemented "Instruction CMP not yet implemented."
	537 NotImplemented "Instruction SCVTF not yet implemented."
	538 NotImplemented "Instruction FCSEL not yet implemented."
	539 Add W21, W0, W8
	540 NotImplemented "Instruction FDIV not yet implemented."
	541 NotImplemented "Instruction FCSEL not yet implemented."
	542 NotImplemented "Instruction FCSEL not yet implemented."
	543 NotImplemented "Instruction CMP not yet implemented."
	544 Move S14, [X31+52]
	545 Move S8, [X31+56]
	546 NotImplemented "Instruction CMP not yet implemented."
	547 Move W27, W31
	548 NotImplemented "Instruction FCSEL not yet implemented."
	549 Move S9, W31
	550 Move X8, [X20+240]
	551 NotImplemented "Instruction SCVTF not yet implemented."
	552 Multiply S0, S12, S0
	553 NotImplemented "Instruction CMP not yet implemented."
	554 NotImplemented "Instruction FCSEL not yet implemented."
	555 NotImplemented "Instruction FCSEL not yet implemented."
	556 Compare X8, 0
	557 JumpIfEqual {1327}
	558 Move W9, [X8+24]
	559 NotImplemented "Instruction CMP not yet implemented."
	560 Add X8, X8, X25
	561 Move X0, [X8+32]
	562 Compare X0, 0
	563 JumpIfEqual {1327}
	564 Move X9, 0x425000
	565 Move W10, [X0+28]
	566 Move X8, [X0+16]
	567 Move X9, [X9+656]
	568 Add W10, W10, 1
	569 Move X9, [X9]
	570 Move [X0+28], W10
	571 Compare X8, 0
	572 JumpIfEqual {1327}
	573 NotImplemented "Instruction LDRSW not yet implemented."
	574 Move W11, [X8+24]
	575 NotImplemented "Instruction CMP not yet implemented."
	576 Move V0, [X29+188]
	577 Add W9, W10, 1
	578 Add X8, X8, X10
	579 Move [X0+24], W9
	580 Move [X8+32], S14
	581 Move [X8+40], S8
	582 Move [X8+40], S15
	583 Move [X8+48], S10
	584 Move [X8+3], V0
	585 Move X8, [X9+32]
	586 Move V0, [X29+188]
	587 Add X1, X31, 384
	588 Move X8, [X8+192]
	589 Move X2, [X8+112]
	590 Move [X31+384], S14
	591 Move [X31+388], S8
	592 Move [X31+392], S15
	593 Move [X31+396], S10
	594 Move [X31+25], V0
	595 Call List`1<RepeatRectUV>.AddWithResize, X0, X1
	596 Add W27, W27, 1
	597 NotImplemented "Instruction CMP not yet implemented."
	598 Add S9, S9, S13
	599 Move V3, [X31+40]
	600 NotImplemented "Instruction CMP not yet implemented."
	601 NotImplemented "Instruction FCSEL not yet implemented."
	602 Move W8, 0x7F800000
	603 NotImplemented "Instruction FCSEL not yet implemented."
	604 Add S1, S3, S1
	605 Move S0, W8
	606 NotImplemented "Instruction FDIV not yet implemented."
	607 NotImplemented "Instruction FCVTZS not yet implemented."
	608 NotImplemented "Instruction FCMP not yet implemented."
	609 Move W9, 0x80000000
	610 NotImplemented "Instruction CSEL not yet implemented."
	611 And W9, W8, 1
	612 Or W9, W27, W9
	613 NotImplemented "Instruction CMP not yet implemented."
	614 Move W9, 1
	615 NotImplemented "Instruction CINC not yet implemented."
	616 Add W21, W8, W9
	617 NotImplemented "Instruction CMP not yet implemented."
	618 Move V0, [X31+88]
	619 Move S12, [X31+52]
	620 Move S13, [X31+56]
	621 NotImplemented "Instruction CMP not yet implemented."
	622 Move W27, W31
	623 NotImplemented "Instruction FCSEL not yet implemented."
	624 Move S9, W31
	625 Move V2, [X31+88]
	626 Move X8, [X20+240]
	627 NotImplemented "Instruction SCVTF not yet implemented."
	628 NotImplemented "Instruction CMP not yet implemented."
	629 Multiply S1, S2, S0
	630 Multiply S0, S11, S0
	631 NotImplemented "Instruction FCSEL not yet implemented."
	632 NotImplemented "Instruction FCSEL not yet implemented."
	633 Compare X8, 0
	634 JumpIfEqual {1327}
	635 Move W9, [X8+24]
	636 NotImplemented "Instruction CMP not yet implemented."
	637 Add X8, X8, X25
	638 Move X0, [X8+32]
	639 Compare X0, 0
	640 JumpIfEqual {1327}
	641 Move X9, 0x425000
	642 Move W10, [X0+28]
	643 Move X8, [X0+16]
	644 Move X9, [X9+656]
	645 Add W10, W10, 1
	646 Move X9, [X9]
	647 Move [X0+28], W10
	648 Compare X8, 0
	649 JumpIfEqual {1327}
	650 NotImplemented "Instruction LDRSW not yet implemented."
	651 Move W11, [X8+24]
	652 NotImplemented "Instruction CMP not yet implemented."
	653 Move V0, [X29+188]
	654 Add W9, W10, 1
	655 Add X8, X8, X10
	656 Move [X0+24], W9
	657 Move [X8+32], S12
	658 Move [X8+40], S13
	659 Move [X8+40], S2
	660 Move [X8+48], S11
	661 Move [X8+3], V0
	662 Move X8, [X9+32]
	663 Move V0, [X29+188]
	664 Add X1, X31, 384
	665 Move X8, [X8+192]
	666 Move X2, [X8+112]
	667 Move [X31+384], S12
	668 Move [X31+388], S13
	669 Move [X31+392], S2
	670 Move [X31+396], S11
	671 Move [X31+25], V0
	672 Call List`1<RepeatRectUV>.AddWithResize, X0, X1
	673 Add W27, W27, 1
	674 NotImplemented "Instruction CMP not yet implemented."
	675 Add S9, S9, S10
	676 NotImplemented "Instruction CMP not yet implemented."
	677 Move W8, 0x7F800000
	678 NotImplemented "Instruction FCSEL not yet implemented."
	679 NotImplemented "Instruction FCSEL not yet implemented."
	680 Move S0, W8
	681 NotImplemented "Instruction FDIV not yet implemented."
	682 NotImplemented "Instruction FCVTZS not yet implemented."
	683 NotImplemented "Instruction FCMP not yet implemented."
	684 Move W9, 0x80000000
	685 NotImplemented "Instruction CSEL not yet implemented."
	686 Move TEMP, X27
	687 And TEMP, TEMP, -2147483648
	688 Compare TEMP, -2147483648
	689 JumpIfEqual {868}
	690 Move X8, [X20+240]
	691 Compare X8, 0
	692 JumpIfEqual {1327}
	693 Move W9, [X8+24]
	694 NotImplemented "Instruction CMP not yet implemented."
	695 Add X8, X8, X25
	696 Move X0, [X8+32]
	697 Compare X0, 0
	698 JumpIfEqual {1327}
	699 Move X9, 0x425000
	700 Move W10, [X0+28]
	701 Move X8, [X0+16]
	702 Move X9, [X9+656]
	703 Move V8, [X31+88]
	704 Add W10, W10, 1
	705 Move X9, [X9]
	706 Move [X0+28], W10
	707 Compare X8, 0
	708 JumpIfEqual {1327}
	709 NotImplemented "Instruction LDRSW not yet implemented."
	710 Move W11, [X8+24]
	711 NotImplemented "Instruction CMP not yet implemented."
	712 Move V0, [X29+188]
	713 Move V2, [X31+52]
	714 Move V1, [X31+56]
	715 Add W9, W10, 1
	716 Add X8, X8, X10
	717 Move [X0+24], W9
	718 Move [X8+32], S2
	719 Move [X8+40], S1
	720 Move [X8+40], S8
	721 Move [X8+48], S11
	722 Move [X8+3], V0
	723 Move X8, [X9+32]
	724 Move V1, [X31+52]
	725 Move V0, [X29+188]
	726 Add X1, X31, 384
	727 Move X8, [X8+192]
	728 Move X2, [X8+112]
	729 Move [X31+384], S1
	730 Move V1, [X31+56]
	731 Move [X31+392], S14
	732 Move [X31+396], S11
	733 Move [X31+25], V0
	734 Move [X31+388], S1
	735 Call List`1<RepeatRectUV>.AddWithResize, X0, X1
	736 Move X8, [X9+32]
	737 Move V1, [X31+52]
	738 Move V0, [X29+188]
	739 Add X1, X31, 384
	740 Move X8, [X8+192]
	741 Move X2, [X8+112]
	742 Move [X31+384], S1
	743 Move V1, [X31+56]
	744 Move [X31+392], S8
	745 Move [X31+396], S11
	746 Move [X31+25], V0
	747 Move [X31+388], S1
	748 Call List`1<RepeatRectUV>.AddWithResize, X0, X1
	749 NotImplemented "Instruction CMP not yet implemented."
	750 NotImplemented "Instruction FCSEL not yet implemented."
	751 Subtract W21, W27, 2
	752 Move V0, [X31+52]
	753 Move V1, [X31+32]
	754 NotImplemented "Instruction CMP not yet implemented."
	755 Move X8, [X20+240]
	756 NotImplemented "Instruction FCSEL not yet implemented."
	757 Move V0, [X31+56]
	758 Move V1, [X31+36]
	759 NotImplemented "Instruction FCSEL not yet implemented."
	760 Compare X8, 0
	761 JumpIfEqual {1327}
	762 Move W9, [X8+24]
	763 NotImplemented "Instruction CMP not yet implemented."
	764 Add X8, X8, X25
	765 Move X0, [X8+32]
	766 Compare X0, 0
	767 JumpIfEqual {1327}
	768 Move X9, 0x424000
	769 Move W10, [X0+28]
	770 Move X8, [X0+16]
	771 Move X9, [X9+656]
	772 Move S10, [X31+64]
	773 Move S8, [X31+68]
	774 Move V14, [X31+88]
	775 Add W10, W10, 1
	776 Move X9, [X9]
	777 Move [X0+28], W10
	778 Compare X8, 0
	779 JumpIfEqual {1327}
	780 NotImplemented "Instruction LDRSW not yet implemented."
	781 Move W11, [X8+24]
	782 NotImplemented "Instruction CMP not yet implemented."
	783 Move V0, [X29+188]
	784 Add W9, W10, 1
	785 Add X8, X8, X10
	786 Move [X0+24], W9
	787 Move [X8+32], S15
	788 Move [X8+40], S12
	789 Move [X8+40], S14
	790 Move [X8+48], S11
	791 Move [X8+3], V0
	792 Move X8, [X9+32]
	793 Move V0, [X29+188]
	794 Add X1, X31, 384
	795 Move X8, [X8+192]
	796 Move X2, [X8+112]
	797 Move [X31+384], S15
	798 Move [X31+388], S12
	799 Move [X31+392], S14
	800 Move [X31+396], S11
	801 Move [X31+25], V0
	802 Call List`1<RepeatRectUV>.AddWithResize, X0, X1
	803 NotImplemented "Instruction CMP not yet implemented."
	804 NotImplemented "Instruction FCSEL not yet implemented."
	805 NotImplemented "Instruction CMP not yet implemented."
	806 Move W8, W27
	807 NotImplemented "Instruction CMP not yet implemented."
	808 NotImplemented "Instruction SCVTF not yet implemented."
	809 NotImplemented "Instruction FCSEL not yet implemented."
	810 Subtract W8, W8, 1
	811 NotImplemented "Instruction FCSEL not yet implemented."
	812 Multiply S0, S2, S0
	813 NotImplemented "Instruction SCVTF not yet implemented."
	814 Subtract S0, S1, S0
	815 NotImplemented "Instruction FDIV not yet implemented."
	816 Move W27, W31
	817 Add S10, S11, S0
	818 Add S13, S14, S0
	819 Add W27, W27, 1
	820 Move X8, [X20+240]
	821 NotImplemented "Instruction SCVTF not yet implemented."
	822 Multiply S1, S10, S0
	823 Multiply S0, S13, S0
	824 NotImplemented "Instruction CMP not yet implemented."
	825 NotImplemented "Instruction FCSEL not yet implemented."
	826 NotImplemented "Instruction FCSEL not yet implemented."
	827 Compare X8, 0
	828 JumpIfEqual {1327}
	829 Move W9, [X8+24]
	830 NotImplemented "Instruction CMP not yet implemented."
	831 Add X8, X8, X25
	832 Move X0, [X8+32]
	833 Compare X0, 0
	834 JumpIfEqual {1327}
	835 Move X9, 0x424000
	836 Move W10, [X0+28]
	837 Move X8, [X0+16]
	838 Move X9, [X9+656]
	839 Add W10, W10, 1
	840 Move X9, [X9]
	841 Move [X0+28], W10
	842 Compare X8, 0
	843 JumpIfEqual {1327}
	844 NotImplemented "Instruction LDRSW not yet implemented."
	845 Move W11, [X8+24]
	846 NotImplemented "Instruction CMP not yet implemented."
	847 Move V0, [X29+188]
	848 Add W9, W10, 1
	849 Add X8, X8, X10
	850 Move [X0+24], W9
	851 Move [X8+32], S15
	852 Move [X8+40], S12
	853 Move [X8+40], S14
	854 Move [X8+48], S11
	855 Move [X8+3], V0
	856 Move X8, [X9+32]
	857 Move V0, [X29+188]
	858 Add X1, X31, 384
	859 Move X8, [X8+192]
	860 Move X2, [X8+112]
	861 Move [X31+384], S15
	862 Move [X31+388], S12
	863 Move [X31+392], S14
	864 Move [X31+396], S11
	865 Move [X31+25], V0
	866 Call List`1<RepeatRectUV>.AddWithResize, X0, X1
	867 NotImplemented "Instruction CMP not yet implemented."
	868 Move W9, [X31+84]
	869 Compare W9, 0
	870 JumpIfEqual {890}
	871 Move S13, [X31+64]
	872 Move S10, [X31+68]
	873 Move V14, [X31+88]
	874 NotImplemented "Instruction CMP not yet implemented."
	875 Move S12, W31
	876 Move W8, [X31+72]
	877 Compare W8, 0
	878 JumpIfEqual {898}
	879 Move V3, [X31+76]
	880 NotImplemented "Instruction CMP not yet implemented."
	881 Move S2, [X31+32]
	882 Move S1, [X31+36]
	883 And W31, W22, 1
	884 Move W8, 0x42C80000
	885 Move S0, W8
	886 NotImplemented "Instruction FCSEL not yet implemented."
	887 Multiply S1, S3, S1
	888 NotImplemented "Instruction FDIV not yet implemented."
	889 Move W8, 1
	890 Move S13, [X31+64]
	891 Move S10, [X31+68]
	892 And W31, W22, 1
	893 Move V14, [X31+88]
	894 Move S1, 0.5
	895 NotImplemented "Instruction FCSEL not yet implemented."
	896 Subtract S0, S0, S9
	897 Multiply S12, S0, S1
	898 Move V12, [X31+76]
	899 Move W8, W31
	900 Move S12, W31
	901 NotImplemented "Instruction CMP not yet implemented."
	902 NotImplemented "Instruction CMP not yet implemented."
	903 And W31, W22, 1
	904 NotImplemented "Instruction FCSEL not yet implemented."
	905 Subtract S0, S0, S9
	906 Subtract S12, S0, S12
	907 Move TEMP, X8
	908 And TEMP, TEMP, 1
	909 Compare TEMP, 1
	910 JumpIfEqual {913}
	911 Compare W8, 0
	912 JumpIfEqual {981}
	913 Move X8, 0x3B2000
	914 Move X8, [X8+1432]
	915 Move X21, [X19+128]
	916 Move X0, [X8]
	917 Move W8, [X0+224]
	918 Compare W8, 0
	919 JumpIfNotEqual {921}
	920 Call 0x1C17DFC
	921 Move X0, X21
	922 Move X1, X31
	923 Move X2, X31
	924 Call Object.op_Equality, X0, X1
	925 Move TEMP, X0
	926 And TEMP, TEMP, 1
	927 Compare TEMP, 1
	928 JumpIfNotEqual {981}
	929 Move X8, 0x3B2000
	930 Move X8, [X8+1432]
	931 Move X21, [X19+136]
	932 Move X0, [X8]
	933 Move W8, [X0+224]
	934 Compare W8, 0
	935 JumpIfNotEqual {937}
	936 Call 0x1C17DFC
	937 Move X0, X21
	938 Move X1, X31
	939 Move X2, X31
	940 Call Object.op_Equality, X0, X1
	941 Move TEMP, X0
	942 And TEMP, TEMP, 1
	943 Compare TEMP, 1
	944 JumpIfNotEqual {981}
	945 Move V1, [X31+44]
	946 And W31, W22, 1
	947 NotImplemented "Instruction FCSEL not yet implemented."
	948 Add X0, X31, 384
	949 Multiply S8, S0, S1
	950 NotImplemented "Instruction FCVT not yet implemented."
	951 Call 0x3EB2C00
	952 NotImplemented "Instruction FCMP not yet implemented."
	953 Move D1, -0.5
	954 NotImplemented "Instruction FCMP not yet implemented."
	955 Move V0, [X31+384]
	956 Move S1, -1
	957 Move D1, 0.5
	958 NotImplemented "Instruction FCMP not yet implemented."
	959 Move V0, [X31+384]
	960 Move S1, 1
	961 NotImplemented "Instruction FCVTZS not yet implemented."
	962 NotImplemented "Instruction INVALID not yet implemented."
	963 Add S1, S0, S1
	964 And X31, X8, 1
	965 NotImplemented "Instruction FCSEL not yet implemented."
	966 Move S0, -0.5
	967 Add S0, S8, S0
	968 NotImplemented "Instruction FRINTP not yet implemented."
	969 Move S0, 0.5
	970 Add S0, S8, S0
	971 NotImplemented "Instruction FRINTM not yet implemented."
	972 Move V1, [X31+28]
	973 NotImplemented "Instruction FABD not yet implemented."
	974 NotImplemented "Instruction FCMP not yet implemented."
	975 Move V1, [X31+44]
	976 Move V2, [X31+24]
	977 Move V0, V12
	978 Move X0, X31
	979 Call AlignmentUtils.CeilToPixelGrid, V0, V1, V2
	980 Move V12, V0
	981 And W8, W24, 0xFFFFFFFE
	982 NotImplemented "Instruction CMP not yet implemented."
	983 Move V1, [X31+48]
	984 And W31, W22, 1
	985 NotImplemented "Instruction FCSEL not yet implemented."
	986 NotImplemented "Instruction FCMP not yet implemented."
	987 NotImplemented "Instruction FNEG not yet implemented."
	988 NotImplemented "Instruction FCMP not yet implemented."
	989 NotImplemented "Instruction FNEG not yet implemented."
	990 Move W8, 0x7F800000
	991 NotImplemented "Instruction FDIV not yet implemented."
	992 Move S2, W8
	993 NotImplemented "Instruction FCVTZS not yet implemented."
	994 NotImplemented "Instruction SCVTF not yet implemented."
	995 Move W8, 0xCF000000
	996 NotImplemented "Instruction FCMP not yet implemented."
	997 Move S1, W8
	998 NotImplemented "Instruction FCSEL not yet implemented."
	999 Multiply S1, S0, S1
	1000 Add S12, S12, S1
	1001 NotImplemented "Instruction FCMP not yet implemented."
	1002 NotImplemented "Instruction FDIV not yet implemented."
	1003 Move W8, 0x7F800000
	1004 Move S2, W8
	1005 NotImplemented "Instruction FCVTZS not yet implemented."
	1006 Add W8, W8, 1
	1007 NotImplemented "Instruction SCVTF not yet implemented."
	1008 Move W8, 0xCF000000
	1009 NotImplemented "Instruction FCMP not yet implemented."
	1010 Move S1, W8
	1011 NotImplemented "Instruction FCSEL not yet implemented."
	1012 Multiply S0, S0, S1
	1013 Subtract S12, S12, S0
	1014 Move X8, [X20+240]
	1015 Compare X8, 0
	1016 JumpIfEqual {1327}
	1017 Move W21, W31
	1018 Move W9, [X8+24]
	1019 NotImplemented "Instruction CMP not yet implemented."
	1020 Add X10, X8, X25
	1021 Move X0, [X10+32]
	1022 Compare X0, 0
	1023 JumpIfEqual {1327}
	1024 Move W10, [X0+24]
	1025 NotImplemented "Instruction CMP not yet implemented."
	1026 Move X2, [X23]
	1027 Add X8, X31, 384
	1028 Move W1, W21
	1029 Call List`1<RepeatRectUV>.get_Item, X0, X1
	1030 Move V0, [X28]
	1031 Move X8, [X28+16]
	1032 Move V1, [X31+388]
	1033 Move V2, [X31+384]
	1034 Move [X31+36], V0
	1035 Move [X31+592], X8
	1036 Move X8, [X20+240]
	1037 Add S0, S12, S1
	1038 Add S3, S12, S2
	1039 And W31, W22, 1
	1040 NotImplemented "Instruction FCSEL not yet implemented."
	1041 NotImplemented "Instruction FCSEL not yet implemented."
	1042 Compare X8, 0
	1043 JumpIfEqual {1327}
	1044 Move W9, [X8+24]
	1045 NotImplemented "Instruction CMP not yet implemented."
	1046 Add X8, X8, X25
	1047 Move V2, [X31+36]
	1048 Move X0, [X8+32]
	1049 Move X8, [X31+592]
	1050 Move [X31+34], V2
	1051 Move [X31+560], X8
	1052 Compare X0, 0
	1053 JumpIfEqual {1327}
	1054 Move X3, [X26]
	1055 Move X8, [X31+560]
	1056 Move V2, [X31+34]
	1057 Add X2, X31, 384
	1058 Move W1, W21
	1059 Move [X31+384], S1
	1060 Move [X31+388], S0
	1061 Move [X28+16], X8
	1062 Move [X28], V2
	1063 Call List`1<RepeatRectUV>.set_Item, X0, X1, X2
	1064 Move X8, [X20+240]
	1065 Add W21, W21, 1
	1066 Compare X8, 0
	1067 JumpIfNotEqual {1018}
	1068 Move W11, [X31+80]
	1069 Move W10, W31
	1070 Move W22, 1
	1071 Move W25, 1
	1072 Move TEMP, X11
	1073 And TEMP, TEMP, 1
	1074 Compare TEMP, 1
	1075 JumpIfEqual {443}
	1076 NotImplemented "Instruction CMP not yet implemented."
	1077 Move X0, [X8+40]
	1078 Move V8, [X31+60]
	1079 Compare X0, 0
	1080 JumpIfEqual {1327}
	1081 Move X24, 0x424000
	1082 Move X24, [X24+672]
	1083 Add X8, X31, 384
	1084 Move X1, [X24]
	1085 Call List`1<RepeatRectUV>.GetEnumerator, X0
	1086 Move V3, [X31+92]
	1087 Move V0, [X31+384]
	1088 Move V1, [X31+400]
	1089 Move V2, [X31+26]
	1090 Move X25, 0x424000
	1091 Add S3, S10, S3
	1092 Move [X31+88], S3
	1093 Move X25, [X25+632]
	1094 Move [X31+480], V0
	1095 Move [X31+488], V1
	1096 Move [X31+32], V2
	1097 Move X23, 0x424000
	1098 Move X23, [X23+624]
	1099 Add S9, S13, S8
	1100 Move [X31+84], S9
	1101 Move X1, [X25]
	1102 Add X0, X31, 480
	1103 Call Enumerator<RepeatRectUV>.MoveNext, X0
	1104 Move TEMP, X0
	1105 And TEMP, TEMP, 1
	1106 Compare TEMP, 1
	1107 JumpIfNotEqual {1232}
	1108 Move V11, [X31+500]
	1109 Move V2, [X31+60]
	1110 Move V10, [X31+508]
	1111 NotImplemented "Instruction FCMP not yet implemented."
	1112 Subtract S0, S2, S11
	1113 Subtract S10, S10, S0
	1114 Add S1, S0, S10
	1115 NotImplemented "Instruction FDIV not yet implemented."
	1116 NotImplemented "Instruction FDIV not yet implemented."
	1117 Move S1, W31
	1118 Add S8, S0, S1
	1119 Move V11, V2
	1120 Move V8, [X31+516]
	1121 Move V12, [X31+524]
	1122 Add S0, S10, S11
	1123 NotImplemented "Instruction FCMP not yet implemented."
	1124 Subtract S0, S0, S9
	1125 Subtract S10, S10, S0
	1126 Add S0, S0, S10
	1127 Multiply S1, S12, S10
	1128 NotImplemented "Instruction FDIV not yet implemented."
	1129 Add S0, S8, S12
	1130 Subtract S8, S0, S12
	1131 Move X8, 0x3B2000
	1132 Move X8, [X8+1432]
	1133 Move X21, [X19+136]
	1134 Move X0, [X8]
	1135 Move W8, [X0+224]
	1136 Compare W8, 0
	1137 JumpIfNotEqual {1139}
	1138 Call 0x1C17DFC
	1139 Move X0, X21
	1140 Move X1, X31
	1141 Move X2, X31
	1142 Call Object.op_Equality, X0, X1
	1143 Add S0, S12, S8
	1144 Move S1, 1
	1145 Move X8, [X20+240]
	1146 Subtract S0, S1, S0
	1147 Subtract S0, S0, S8
	1148 Add S0, S8, S0
	1149 And W31, W0, 1
	1150 NotImplemented "Instruction FCSEL not yet implemented."
	1151 Compare X8, 0
	1152 JumpIfEqual {1340}
	1153 Move W9, [X8+24]
	1154 Compare W9, 0
	1155 JumpIfEqual {1341}
	1156 Move X0, [X8+32]
	1157 Compare X0, 0
	1158 JumpIfEqual {1339}
	1159 Move X1, [X24]
	1160 Add X8, X31, 384
	1161 Call List`1<RepeatRectUV>.GetEnumerator, X0
	1162 Move V0, [X31+384]
	1163 Move V1, [X31+400]
	1164 Move V2, [X31+26]
	1165 Move [X31+432], V0
	1166 Move [X31+440], V1
	1167 Move [X31+29], V2
	1168 Move X1, [X25]
	1169 Add X0, X31, 432
	1170 Call Enumerator<RepeatRectUV>.MoveNext, X0
	1171 Move TEMP, X0
	1172 And TEMP, TEMP, 1
	1173 Compare TEMP, 1
	1174 JumpIfNotEqual {1213}
	1175 Move V9, [X31+448]
	1176 Move V3, [X31+92]
	1177 Move V15, [X31+456]
	1178 Move V14, [X31+472]
	1179 NotImplemented "Instruction FCMP not yet implemented."
	1180 Subtract S0, S3, S9
	1181 Subtract S15, S15, S0
	1182 Add S1, S0, S15
	1183 Multiply S2, S15, S14
	1184 NotImplemented "Instruction FDIV not yet implemented."
	1185 NotImplemented "Instruction FDIV not yet implemented."
	1186 Move S1, W31
	1187 Add S8, S0, S1
	1188 Move V9, V3
	1189 Move V8, [X31+464]
	1190 Move V1, [X31+88]
	1191 Add S0, S15, S9
	1192 NotImplemented "Instruction FCMP not yet implemented."
	1193 Subtract S0, S0, S1
	1194 Subtract S15, S15, S0
	1195 Add S0, S0, S15
	1196 Multiply S1, S14, S15
	1197 NotImplemented "Instruction FDIV not yet implemented."
	1198 Add X0, X31, 96
	1199 Move W2, 288
	1200 Move X1, X19
	1201 Call 0x3EB2AC0
	1202 Add X1, X31, 96
	1203 Move X0, X20
	1204 Move V0, V9
	1205 Move V1, V11
	1206 Move V2, V15
	1207 Move V3, V10
	1208 Move V4, V8
	1209 Move V5, V13
	1210 Move V6, V14
	1211 Move V7, V12
	1212 Call UIRStylePainter.StampRectangleWithSubRect, X0, X1, X2, X3
	1213 Move V9, [X31+84]
	1214 Move X22, X31
	1215 Move W21, 98
	1216 Move X1, [X23]
	1217 Add X0, X31, 432
	1218 Call Enumerator<RepeatRectUV>.Dispose, X0
	1219 Compare X22, 0
	1220 JumpIfNotEqual {1342}
	1221 NotImplemented "Instruction CMP not yet implemented."
	1222 Compare W21, 0
	1223 JumpIfEqual {1101}
	1224 Move V9, [X31+84]
	1225 Move X21, X0
	1226 NotImplemented "Instruction CMP not yet implemented."
	1227 Move X0, X21
	1228 Call 0x3EB2AD0
	1229 Move X22, [X0]
	1230 Call 0x3EB2AE0
	1231 Move W21, W31
	1232 Move X1, [X23]
	1233 Add X0, X31, 480
	1234 Call Enumerator<RepeatRectUV>.Dispose, X0
	1235 Move X25, [X31+16]
	1236 Move X8, [X25+40]
	1237 Move X9, [X31+600]
	1238 NotImplemented "Instruction CMP not yet implemented."
	1239 Add X31, X31, 608
	1240 Move X20, [X31+144]
	1241 Move X19, [X31+152]
	1242 Move X22, [X31+128]
	1243 Move X21, [X31+136]
	1244 Move X24, [X31+112]
	1245 Move X23, [X31+120]
	1246 Move X26, [X31+96]
	1247 Move X25, [X31+104]
	1248 Move X28, [X31+80]
	1249 Move X27, [X31+88]
	1250 Move X29, [X31+64]
	1251 Move X30, [X31+72]
	1252 Move D9, [X31+48]
	1253 Move D8, [X31+56]
	1254 Move D11, [X31+32]
	1255 Move D10, [X31+40]
	1256 Move D13, [X31+16]
	1257 Move D12, [X31+24]
	1258 Move D15, [X31+160]
	1259 Move D14, [X31+168]
	1260 Return 
	1261 Move X8, X0
	1262 ShiftRight X8, 32
	1263 And X8, X8, 0x7FFFFFFF
	1264 Move V12, V14
	1265 Compare X8, 0
	1266 JumpIfNotEqual {1272}
	1267 Move X0, X21
	1268 Move X1, X31
	1269 Call BackgroundSize.get_x, X0
	1270 Move S12, W0
	1271 Move [X31+536], X0
	1272 Move X0, X21
	1273 Move X1, X31
	1274 Call BackgroundSize.get_y, X0
	1275 Move [X31+536], X0
	1276 Add X0, X31, 536
	1277 Move X1, X31
	1278 Call Length.IsAuto, X0
	1279 Move TEMP, X0
	1280 And TEMP, TEMP, 1
	1281 Compare TEMP, 1
	1282 JumpIfNotEqual {1284}
	1283 Move V11, V9
	1284 Move X0, X21
	1285 Move X1, X31
	1286 Call BackgroundSize.get_y, X0
	1287 Move X22, X0
	1288 Move [X31+536], X0
	1289 Move X0, X21
	1290 Move X1, X31
	1291 Call BackgroundSize.get_y, X0
	1292 Move X8, X22
	1293 ShiftRight X8, 32
	1294 And X8, X8, 0x7FFFFFFF
	1295 NotImplemented "Instruction CMP not yet implemented."
	1296 Move [X31+536], X0
	1297 Move S0, W0
	1298 Move W8, 0x42C80000
	1299 Multiply S0, S13, S0
	1300 Move S1, W8
	1301 NotImplemented "Instruction FDIV not yet implemented."
	1302 Move X8, X0
	1303 ShiftRight X8, 32
	1304 And X8, X8, 0x7FFFFFFF
	1305 Move V11, V9
	1306 Compare X8, 0
	1307 JumpIfNotEqual {1313}
	1308 Move X0, X21
	1309 Move X1, X31
	1310 Call BackgroundSize.get_y, X0
	1311 Move S11, W0
	1312 Move [X31+536], X0
	1313 Move X0, X21
	1314 Move X1, X31
	1315 Call BackgroundSize.get_x, X0
	1316 Move [X31+536], X0
	1317 Add X0, X31, 536
	1318 Move X1, X31
	1319 Call Length.IsAuto, X0
	1320 Move TEMP, X0
	1321 And TEMP, TEMP, 1
	1322 Compare TEMP, 1
	1323 JumpIfNotEqual {1326}
	1324 Multiply S0, S14, S11
	1325 NotImplemented "Instruction FDIV not yet implemented."
	1326 Move V14, V12
	1327 Call 0x1C17F20
	1328 Call 0x1C17F28
	1329 Move X19, X1
	1330 Move X22, X31
	1331 Move X1, [X23]
	1332 Add X0, X31, 432
	1333 Call Enumerator<RepeatRectUV>.Dispose, X0
	1334 Move X1, X19
	1335 Compare X22, 0
	1336 JumpIfEqual {1351}
	1337 Move X0, X22
	1338 Call 0x1C17F18
	1339 Call 0x1C17F20
	1340 Call 0x1C17F20
	1341 Call 0x1C17F28
	1342 Move X0, X22
	1343 Call 0x1C17F18
	1344 Call 0x1C17F44
	1345 Move X1, X31
	1346 Call 0x1C17DEC
	1347 Call 0x3EB2B20
	1348 Move X19, X1
	1349 Move X21, X0
	1350 Move X21, X0
	1351 NotImplemented "Instruction CMP not yet implemented."
	1352 Move X0, X21
	1353 Call 0x3EB2AD0
	1354 Move X19, [X0]
	1355 Call 0x3EB2AE0
	1356 Move X1, [X23]
	1357 Add X0, X31, 480
	1358 Call Enumerator<RepeatRectUV>.Dispose, X0
	1359 Move X25, [X31+16]
	1360 Compare X19, 0
	1361 JumpIfEqual {1236}
	1362 Move X0, X19
	1363 Call 0x1C17F18
	1364 Move X19, X31
	1365 Move X21, X0
	1366 Move X1, [X23]
	1367 Add X0, X31, 480
	1368 Call Enumerator<RepeatRectUV>.Dispose, X0
	1369 Compare X19, 0
	1370 JumpIfNotEqual {1373}
	1371 Move X0, X21
	1372 Call 0x1D2D690
	1373 Move X0, X19
	1374 Call 0x1C17F18
	1375 Call 0x1991590

Method: System.Void StampRectangleWithSubRect(UnityEngine.UIElements.MeshGenerationContextUtils/RectangleParams rectParams, UnityEngine.Rect targetRect, UnityEngine.Rect targetUV)

Disassembly:
	0x03D42A00 LDR W22, [X19 + 0x11C]
	0x03D42A04 MOV X0, X21
	0x03D42A08 BL 0x2407134
	0x03D42A0C LDR X21, [X19 + 0x18]
	0x03D42A10 ADD W8, W0, W22
	0x03D42A14 ADD X0, X31, 0x10
	0x03D42A18 MOVZ W2, 0x50
	0x03D42A1C MOV X1, X20
	0x03D42A20 STR W8, [X19 + 0x11C]
	0x03D42A24 BL 0x3EB1AC0
	0x03D42A28 CBZ X21, 0x3D42AEC
	0x03D42A2C ADRP X8, 0x423000
	0x03D42A30 LDR X8, [X8 + 0x1E8]
	0x03D42A34 ADD X0, X31, 0x100
	0x03D42A38 ADD X1, X31, 0x10
	0x03D42A3C MOVZ W2, 0x50
	0x03D42A40 LDR X19, [X8]
	0x03D42A44 BL 0x3EB1AC0
	0x03D42A48 LDR W9, [X21 + 0x1C]
	0x03D42A4C LDR X8, [X21 + 0x10]
	0x03D42A50 ADD W9, W9, 0x1
	0x03D42A54 STR W9, [X21 + 0x1C]
	0x03D42A58 CBZ X8, 0x3D42AEC
	0x03D42A5C LDRSW X9, [X21 + 0x18]
	0x03D42A60 LDR W10, [X8 + 0x18]
	0x03D42A64 CMP W9, W10
	0x03D42A68 B.CS 0x3D42A90
	0x03D42A6C MOVZ W11, 0x50
	0x03D42A70 MADD X8, X9, X11, X8
	0x03D42A74 ADD W10, W9, 0x1
	0x03D42A78 ADD X0, X8, 0x20
	0x03D42A7C ADD X1, X31, 0x100
	0x03D42A80 MOVZ W2, 0x50
	0x03D42A84 STR W10, [X21 + 0x18]
	0x03D42A88 BL 0x3EB1AC0
	0x03D42A8C B 0x3D42ABC
	0x03D42A90 LDR X8, [X19 + 0x20]
	0x03D42A94 ADD X0, X31, 0x150
	0x03D42A98 ADD X1, X31, 0x100
	0x03D42A9C MOVZ W2, 0x50
	0x03D42AA0 LDR X8, [X8 + 0xC0]
	0x03D42AA4 LDR X19, [X8 + 0x70]
	0x03D42AA8 BL 0x3EB1AC0
	0x03D42AAC ADD X1, X31, 0x150
	0x03D42AB0 MOV X0, X21
	0x03D42AB4 MOV X2, X19
	0x03D42AB8 BL 0x315B370
	0x03D42ABC MOVI V0.2D, 0x0
	0x03D42AC0 STP V0, V0, [X20 + 0x30]
	0x03D42AC4 STP V0, V0, [X20 + 0x10]
	0x03D42AC8 STR V0, [X20]
	0x03D42ACC ADD X31, X31, 0x1A0
	0x03D42AD0 LDP X20, X19, [X31 + 0x50]
	0x03D42AD4 LDP X22, X21, [X31 + 0x40]
	0x03D42AD8 LDP X24, X23, [X31 + 0x30]
	0x03D42ADC LDP X26, X25, [X31 + 0x20]
	0x03D42AE0 LDP X28, X27, [X31 + 0x10]
	0x03D42AE4 LDP X29, X30, [X31], #0x60
	0x03D42AE8 RET
	0x03D42AEC BL 0x1C16F20
	0x03D42AF0 STP D9, D8, [X31 - 0x40]!
	0x03D42AF4 STP X29, X30, [X31 + 0x10]
	0x03D42AF8 STP X22, X21, [X31 + 0x20]
	0x03D42AFC STP X20, X19, [X31 + 0x30]
	0x03D42B00 SUB X31, X31, 0x590
	0x03D42B04 ADRP X20, 0x6A5000
	0x03D42B08 LDRB W8, [X20 + 0xB8B]
	0x03D42B0C MOV X19, X0
	0x03D42B10 TBNZ X8, 0x0, 0x3D42B64
	0x03D42B14 ADRP X0, 0x3DA000
	0x03D42B18 LDR X0, [X0 + 0xE80]
	0x03D42B1C BL 0x1C16CF4
	0x03D42B20 ADRP X0, 0x3DA000
	0x03D42B24 LDR X0, [X0 + 0x120]
	0x03D42B28 BL 0x1C16CF4
	0x03D42B2C ADRP X0, 0x423000
	0x03D42B30 LDR X0, [X0 + 0x1E8]
	0x03D42B34 BL 0x1C16CF4
	0x03D42B38 ADRP X0, 0x423000
	0x03D42B3C LDR X0, [X0 + 0x148]
	0x03D42B40 BL 0x1C16CF4
	0x03D42B44 ADRP X0, 0x422000
	0x03D42B48 LDR X0, [X0 + 0xFB8]
	0x03D42B4C BL 0x1C16CF4
	0x03D42B50 ADRP X0, 0x3DA000
	0x03D42B54 LDR X0, [X0 + 0xE98]
	0x03D42B58 BL 0x1C16CF4
	0x03D42B5C MOVZ W8, 0x1
	0x03D42B60 STRB W8, [X20 + 0xB8B]
	0x03D42B64 ADD X0, X31, 0x400
	0x03D42B68 MOVZ W2, 0x120
	0x03D42B6C MOV W1, W31
	0x03D42B70 STR X31, [X31 + 0x538]
	0x03D42B74 STR X31, [X31 + 0x530]
	0x03D42B78 STR X31, [X31 + 0x528]
	0x03D42B7C STR X31, [X31 + 0x520]
	0x03D42B80 BL 0x3EB1B10
	0x03D42B84 ADD X0, X31, 0x348
	0x03D42B88 MOVZ W2, 0xB4
	0x03D42B8C MOV W1, W31
	0x03D42B90 BL 0x3EB1B10
	0x03D42B94 ADD X0, X31, 0x210
	0x03D42B98 MOVZ W2, 0x120
	0x03D42B9C MOV W1, W31
	0x03D42BA0 STR X31, [X31 + 0x338]
	0x03D42BA4 STR X31, [X31 + 0x330]
	0x03D42BA8 BL 0x3EB1B10
	0x03D42BAC LDR X0, [X19 + 0x110]
	0x03D42BB0 CBZ X0, 0x3D4341C
	0x03D42BB4 MOV X1, X31
	0x03D42BB8 BL 0x3DEC528
	0x03D42BBC ADRP X8, 0xFFFFFFFFFCDA7000
	0x03D42BC0 LDR V8, [X8 + 0xF9C]
	0x03D42BC4 FCMP S2, S8
	0x03D42BC8 B.LS 0x3D43404
	0x03D42BCC LDR X0, [X19 + 0x110]
	0x03D42BD0 CBZ X0, 0x3D4341C
	0x03D42BD4 MOV X1, X31
	0x03D42BD8 BL 0x3DEC528
	0x03D42BDC FCMP S3, S8
	0x03D42BE0 B.LS 0x3D43404
	0x03D42BE4 LDR X0, [X19 + 0x110]
	0x03D42BE8 CBZ X0, 0x3D4341C
	0x03D42BEC MOV X1, X31
	0x03D42BF0 BL 0x3DE0EB8
	0x03D42BF4 LDR X8, [X19 + 0x110]
	0x03D42BF8 MOV X20, X0
	0x03D42BFC ADD X1, X31, 0x538

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+320], D15
	003 Move [X31+328], D14
	004 Move [X31+336], D13
	005 Move [X31+344], D12
	006 Move [X31+352], D11
	007 Move [X31+360], D10
	008 Move [X31+368], D9
	009 Move [X31+376], D8
	010 Move [X31+384], X29
	011 Move [X31+392], X30
	012 Move [X31+400], X20
	013 Move [X31+408], X19
	014 Move X8, -52789248
	015 Move V14, [X8+3996]
	016 NotImplemented "Instruction FCMP not yet implemented."
	017 Move V8, V3
	018 NotImplemented "Instruction FCMP not yet implemented."
	019 Move V11, V0
	020 Move V3, [X1+48]
	021 Move V0, [X1+52]
	022 Move X20, X1
	023 Move X19, X0
	024 Move X0, X1
	025 Move [X31+12], S0
	026 Move [X31+20], S3
	027 Move V0, [X1+56]
	028 Move V12, V7
	029 Move V10, V6
	030 Move V15, V5
	031 Move [X31+20], S0
	032 Move V0, [X1+60]
	033 Move X1, X31
	034 Move V13, V4
	035 Move V9, V2
	036 Move [X31+24], S0
	037 Move [X31+32], S1
	038 Move V0, V14
	039 Call RectangleParams.HasSlices, X0, V0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {45}
	044 Move V1, [X31+28]
	045 Move V4, [X31+16]
	046 NotImplemented "Instruction FDIV not yet implemented."
	047 NotImplemented "Instruction FDIV not yet implemented."
	048 Move S2, 1
	049 Multiply S5, S0, S4
	050 Move V4, [X31+12]
	051 Subtract S2, S2, S15
	052 Multiply S3, S13, S0
	053 Move V7, V8
	054 Multiply S6, S1, S4
	055 Move V4, [X31+20]
	056 Move X0, X31
	057 Multiply S15, S0, S4
	058 Subtract S0, S2, S12
	059 Subtract S2, S11, S3
	060 Add S13, S2, S5
	061 Move V5, [X31+28]
	062 Multiply S0, S1, S0
	063 Move V2, V15
	064 Move V4, V11
	065 Subtract S0, S5, S0
	066 Add S10, S0, S6
	067 Move V0, [X31+24]
	068 Move V6, V9
	069 Multiply S12, S1, S0
	070 Move V0, V13
	071 Move V1, V10
	072 Move V3, V12
	073 Call RectangleParams.RectIntersection, X0, X1
	074 NotImplemented "Instruction FCMP not yet implemented."
	075 Move V8, V3
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 Move X8, -52789248
	078 Move V9, V2
	079 Subtract S4, S2, S15
	080 Move V2, [X8+3872]
	081 Subtract S3, S8, S12
	082 Multiply S4, S4, S4
	083 Multiply S3, S3, S3
	084 Add S3, S4, S3
	085 Move V11, V0
	086 NotImplemented "Instruction FCMP not yet implemented."
	087 Move S3, [X20+24]
	088 Move S7, [X20+28]
	089 NotImplemented "Instruction FDIV not yet implemented."
	090 NotImplemented "Instruction FDIV not yet implemented."
	091 NotImplemented "Instruction FCMP not yet implemented."
	092 Multiply S16, S4, S3
	093 Add S5, S13, S15
	094 Add S6, S9, S11
	095 Subtract S5, S5, S6
	096 Move V6, [X20+16]
	097 NotImplemented "Instruction FDIV not yet implemented."
	098 Subtract S4, S3, S16
	099 Multiply S3, S5, S3
	100 Subtract S3, S4, S3
	101 Add S3, S3, S6
	102 Move [X20+16], S3
	103 Add S3, S8, S1
	104 Add S4, S10, S12
	105 NotImplemented "Instruction FCMP not yet implemented."
	106 Multiply S2, S2, S7
	107 Subtract S4, S1, S10
	108 Move V5, [X20+20]
	109 NotImplemented "Instruction FDIV not yet implemented."
	110 Subtract S3, S7, S2
	111 Multiply S4, S4, S7
	112 Subtract S3, S3, S4
	113 Add S3, S3, S5
	114 Move [X20+20], S3
	115 Move [X20+24], S16
	116 Move [X20+32], S2
	117 Add X0, X31, 32
	118 Move W2, 288
	119 Move X1, X20
	120 Move [X20], S11
	121 Move [X20+8], S1
	122 Move [X20+8], S9
	123 Move [X20+16], S8
	124 Call 0x3EB2AC0
	125 Add X1, X31, 32
	126 Move X0, X19
	127 Call UIRStylePainter.DrawRectangle, X0, X1
	128 Move X20, [X31+400]
	129 Move X19, [X31+408]
	130 Move X29, [X31+384]
	131 Move X30, [X31+392]
	132 Move D9, [X31+368]
	133 Move D8, [X31+376]
	134 Move D11, [X31+352]
	135 Move D10, [X31+360]
	136 Move D13, [X31+336]
	137 Move D12, [X31+344]
	138 Move D15, [X31+320]
	139 Move D14, [X31+328]
	140 Add X31, X31, 416
	141 Return 

Method: System.Void DrawVisualElementBorder()

Disassembly:
	0x03D42C00 ADD X2, X31, 0x528
	0x03D42C04 ADD X3, X31, 0x530
	0x03D42C08 ADD X4, X31, 0x520
	0x03D42C0C MOV X0, X8
	0x03D42C10 MOV X5, X31
	0x03D42C14 BL 0x3DC3E38
	0x03D42C18 CBZ X20, 0x3D4341C
	0x03D42C1C ADRP X22, 0x3DA000
	0x03D42C20 LDR X8, [X20]
	0x03D42C24 LDR X22, [X22 + 0x120]
	0x03D42C28 LDRH W9, [X8 + 0x12E]
	0x03D42C2C LDR X1, [X22]
	0x03D42C30 CBZ X9, 0x3D42C54
	0x03D42C34 LDR X10, [X8 + 0xB0]
	0x03D42C38 ADD X10, X10, 0x8
	0x03D42C3C LDUR X11, [X10 - 0x8]
	0x03D42C40 CMP X11, X1
	0x03D42C44 B.EQ 0x3D42C64
	0x03D42C48 SUBS X9, X9, 0x1
	0x03D42C4C ADD X10, X10, 0x10
	0x03D42C50 B.NE 0x3D42C3C
	0x03D42C54 MOVZ W2, 0xC
	0x03D42C58 MOV X0, X20
	0x03D42C5C BL 0x1C5C788
	0x03D42C60 B 0x3D42C74
	0x03D42C64 LDR W9, [X10]
	0x03D42C68 ADD W9, W9, 0xC
	0x03D42C6C ADD X8, X8, W9, 0x4, SXTW
	0x03D42C70 ADD X0, X8, 0x138
	0x03D42C74 LDP X8, X1, [X0]
	0x03D42C78 MOV X0, X20
	0x03D42C7C BLR X8
	0x03D42C80 LDR X8, [X20]
	0x03D42C84 LDR X1, [X22]
	0x03D42C88 STR D0, [X31 + 0x20]
	0x03D42C8C LDRH W9, [X8 + 0x12E]
	0x03D42C90 CBZ X9, 0x3D42CB4
	0x03D42C94 LDR X10, [X8 + 0xB0]
	0x03D42C98 ADD X10, X10, 0x8
	0x03D42C9C LDUR X11, [X10 - 0x8]
	0x03D42CA0 CMP X11, X1
	0x03D42CA4 B.EQ 0x3D42CC4
	0x03D42CA8 SUBS X9, X9, 0x1
	0x03D42CAC ADD X10, X10, 0x10
	0x03D42CB0 B.NE 0x3D42C9C
	0x03D42CB4 MOVZ W2, 0x6
	0x03D42CB8 MOV X0, X20
	0x03D42CBC BL 0x1C5C788
	0x03D42CC0 B 0x3D42CD4
	0x03D42CC4 LDR W9, [X10]
	0x03D42CC8 ADD W9, W9, 0x6
	0x03D42CCC ADD X8, X8, W9, 0x4, SXTW
	0x03D42CD0 ADD X0, X8, 0x138
	0x03D42CD4 LDP X8, X1, [X0]
	0x03D42CD8 MOV X0, X20
	0x03D42CDC BLR X8
	0x03D42CE0 LDR X8, [X20]
	0x03D42CE4 LDR X1, [X22]
	0x03D42CE8 STR D0, [X31 + 0x10]
	0x03D42CEC LDRH W9, [X8 + 0x12E]
	0x03D42CF0 CBZ X9, 0x3D42D14
	0x03D42CF4 LDR X10, [X8 + 0xB0]
	0x03D42CF8 ADD X10, X10, 0x8
	0x03D42CFC LDUR X11, [X10 - 0x8]
	0x03D42D00 CMP X11, X1
	0x03D42D04 B.EQ 0x3D42D24
	0x03D42D08 SUBS X9, X9, 0x1
	0x03D42D0C ADD X10, X10, 0x10
	0x03D42D10 B.NE 0x3D42CFC
	0x03D42D14 MOVZ W2, 0x4
	0x03D42D18 MOV X0, X20
	0x03D42D1C BL 0x1C5C788
	0x03D42D20 B 0x3D42D34
	0x03D42D24 LDR W9, [X10]
	0x03D42D28 ADD W9, W9, 0x4
	0x03D42D2C ADD X8, X8, W9, 0x4, SXTW
	0x03D42D30 ADD X0, X8, 0x138
	0x03D42D34 LDP X8, X1, [X0]
	0x03D42D38 MOV X0, X20
	0x03D42D3C BLR X8
	0x03D42D40 LDR X8, [X20]
	0x03D42D44 LDR X1, [X22]
	0x03D42D48 MOV V8.16B, V0.16B
	0x03D42D4C LDRH W9, [X8 + 0x12E]
	0x03D42D50 CBZ X9, 0x3D42D74
	0x03D42D54 LDR X10, [X8 + 0xB0]
	0x03D42D58 ADD X10, X10, 0x8
	0x03D42D5C LDUR X11, [X10 - 0x8]
	0x03D42D60 CMP X11, X1
	0x03D42D64 B.EQ 0x3D42D84
	0x03D42D68 SUBS X9, X9, 0x1
	0x03D42D6C ADD X10, X10, 0x10
	0x03D42D70 B.NE 0x3D42D5C
	0x03D42D74 MOVZ W2, 0x8
	0x03D42D78 MOV X0, X20
	0x03D42D7C BL 0x1C5C788
	0x03D42D80 B 0x3D42D94
	0x03D42D84 LDR W9, [X10]
	0x03D42D88 ADD W9, W9, 0x8
	0x03D42D8C ADD X8, X8, W9, 0x4, SXTW
	0x03D42D90 ADD X0, X8, 0x138
	0x03D42D94 LDP X8, X1, [X0]
	0x03D42D98 MOV X0, X20
	0x03D42D9C BLR X8
	0x03D42DA0 ADD X0, X31, 0x210
	0x03D42DA4 MOVZ W2, 0x120
	0x03D42DA8 MOV W1, W31
	0x03D42DAC MOV V9.16B, V0.16B
	0x03D42DB0 BL 0x3EB1B10
	0x03D42DB4 LDR X0, [X19 + 0x110]
	0x03D42DB8 CBZ X0, 0x3D4341C
	0x03D42DBC MOV X1, X31
	0x03D42DC0 BL 0x3DED76C
	0x03D42DC4 ADRP X21, 0x697000
	0x03D42DC8 LDRB W8, [X21 + 0x78F]
	0x03D42DCC STR S0, [X31 + 0x210]
	0x03D42DD0 FMOV V0.4S, 0x0
	0x03D42DD4 STR S1, [X31 + 0x214]
	0x03D42DD8 STR S2, [X31 + 0x218]
	0x03D42DDC STR S3, [X31 + 0x21C]
	0x03D42DE0 STR V0, [X31]
	0x03D42DE4 STR V0, [X31 + 0x23]
	0x03D42DE8 CBNZ W8, 0x3D42E00
	0x03D42DEC ADRP X0, 0x3B9000
	0x03D42DF0 LDR X0, [X0 + 0xF08]
	0x03D42DF4 BL 0x1C16CF4
	0x03D42DF8 MOVZ W8, 0x1
	0x03D42DFC STRB W8, [X21 + 0x78F]
	0x03D42E00 ADRP X8, 0x3B9000
	0x03D42E04 LDR X8, [X8 + 0xF08]
	0x03D42E08 LDR V0, [X31 + 0x538]
	0x03D42E0C LDP V5, V4, [X31 + 0x10]
	0x03D42E10 LDR V1, [X31 + 0x53C]
	0x03D42E14 LDR X8, [X8]
	0x03D42E18 FSUB S0, S0, S5
	0x03D42E1C FSUB S1, S1, S4
	0x03D42E20 LDR X9, [X8 + 0xB8]
	0x03D42E24 LDP S2, S3, [X9]
	0x03D42E28 FCMP S2, S0
	0x03D42E2C FCSEL S0, S2, S0, GT
	0x03D42E30 LDR V2, [X31 + 0x530]
	0x03D42E34 FCMP S3, S1
	0x03D42E38 FCSEL S1, S3, S1, GT
	0x03D42E3C STR S0, [X31 + 0x2BC]
	0x03D42E40 STR S1, [X31 + 0x2C0]
	0x03D42E44 LDR V3, [X31 + 0x534]
	0x03D42E48 FSUB S1, S2, S9
	0x03D42E4C LDP S0, S2, [X9]
	0x03D42E50 FSUB S3, S3, S4
	0x03D42E54 FCMP S0, S1
	0x03D42E58 FCSEL S0, S0, S1, GT
	0x03D42E5C FCMP S2, S3
	0x03D42E60 FCSEL S1, S2, S3, GT
	0x03D42E64 STR S0, [X31 + 0x2C4]
	0x03D42E68 STR S1, [X31 + 0x2C8]
	0x03D42E6C LDR X9, [X8 + 0xB8]
	0x03D42E70 LDR V0, [X31 + 0x528]
	0x03D42E74 LDR V1, [X31 + 0x52C]
	0x03D42E78 LDP S2, S3, [X9]
	0x03D42E7C FSUB S0, S0, S5
	0x03D42E80 FSUB S1, S1, S8
	0x03D42E84 FCMP S2, S0
	0x03D42E88 FCSEL S0, S2, S0, GT
	0x03D42E8C FCMP S3, S1
	0x03D42E90 FCSEL S1, S3, S1, GT
	0x03D42E94 STR S0, [X31 + 0x2D4]
	0x03D42E98 STR S1, [X31 + 0x2D8]
	0x03D42E9C LDR X8, [X8 + 0xB8]
	0x03D42EA0 LDR V0, [X31 + 0x520]
	0x03D42EA4 LDR V1, [X31 + 0x524]
	0x03D42EA8 LDP S2, S3, [X8]
	0x03D42EAC FSUB S0, S0, S9
	0x03D42EB0 FSUB S1, S1, S8
	0x03D42EB4 FCMP S2, S0
	0x03D42EB8 FCSEL S0, S2, S0, GT
	0x03D42EBC FCMP S3, S1
	0x03D42EC0 FCSEL S1, S3, S1, GT
	0x03D42EC4 STR S0, [X31 + 0x2CC]
	0x03D42EC8 STR S1, [X31 + 0x2D0]
	0x03D42ECC LDR X0, [X19 + 0x110]
	0x03D42ED0 CBZ X0, 0x3D4341C
	0x03D42ED4 MOV X1, X31
	0x03D42ED8 BL 0x3DEC0CC
	0x03D42EDC CBZ X0, 0x3D4341C
	0x03D42EE0 ADRP X10, 0x3DA000
	0x03D42EE4 LDR X8, [X0]
	0x03D42EE8 LDR X10, [X10 + 0xE80]
	0x03D42EEC MOV X21, X0
	0x03D42EF0 LDRH W9, [X8 + 0x12E]
	0x03D42EF4 LDR X1, [X10]
	0x03D42EF8 CBZ X9, 0x3D42F1C
	0x03D42EFC LDR X10, [X8 + 0xB0]
	0x03D42F00 ADD X10, X10, 0x8
	0x03D42F04 LDUR X11, [X10 - 0x8]
	0x03D42F08 CMP X11, X1
	0x03D42F0C B.EQ 0x3D42F2C
	0x03D42F10 SUBS X9, X9, 0x1
	0x03D42F14 ADD X10, X10, 0x10
	0x03D42F18 B.NE 0x3D42F04
	0x03D42F1C MOVZ W2, 0x2
	0x03D42F20 MOV X0, X21
	0x03D42F24 BL 0x1C5C788
	0x03D42F28 B 0x3D42F3C
	0x03D42F2C LDR W9, [X10]
	0x03D42F30 ADD W9, W9, 0x2
	0x03D42F34 ADD X8, X8, W9, 0x4, SXTW
	0x03D42F38 ADD X0, X8, 0x138
	0x03D42F3C LDP X8, X1, [X0]
	0x03D42F40 MOV X0, X21
	0x03D42F44 BLR X8
	0x03D42F48 LDR V0, [X31]
	0x03D42F4C CMP W0, 0x1
	0x03D42F50 B.NE 0x3D42F78
	0x03D42F54 ADRP X21, 0x3DA000
	0x03D42F58 LDR X21, [X21 + 0xE98]
	0x03D42F5C LDR X0, [X21]
	0x03D42F60 LDR W8, [X0 + 0xE0]
	0x03D42F64 CBNZ W8, 0x3D42F70
	0x03D42F68 BL 0x1C16DFC
	0x03D42F6C LDR X0, [X21]
	0x03D42F70 LDR X8, [X0 + 0xB8]
	0x03D42F74 LDUR V0, [X8 + 0x18]
	0x03D42F78 ADD X8, X31, 0x1AD
	0x03D42F7C ADD X0, X31, 0x400
	0x03D42F80 ADD X1, X31, 0x210
	0x03D42F84 MOVZ W2, 0x120
	0x03D42F88 STUR V0, [X8 + 0xFF]
	0x03D42F8C BL 0x3EB1AC0
	0x03D42F90 LDP V2, V6, [X31 + 0x10]
	0x03D42F94 LDR V0, [X31 + 0x400]
	0x03D42F98 LDR V3, [X31 + 0x408]
	0x03D42F9C LDR V4, [X31 + 0x40C]
	0x03D42FA0 MOV V1.16B, V2.16B
	0x03D42FA4 FADD S2, S2, S9
	0x03D42FA8 FADD S5, S6, S8
	0x03D42FAC MOV V1.S[1], V6.S[0]
	0x03D42FB0 FADD V6.2S, V1.2S, V0.2S
	0x03D42FB4 FSUB S0, S3, S2
	0x03D42FB8 FSUB S1, S4, S5
	0x03D42FBC STR D6, [X31 + 0x400]
	0x03D42FC0 STR S0, [X31 + 0x408]
	0x03D42FC4 STR S1, [X31 + 0x40C]
	0x03D42FC8 LDR X0, [X19 + 0x110]
	0x03D42FCC STR V6, [X31 + 0x2]
	0x03D42FD0 CBZ X0, 0x3D4341C
	0x03D42FD4 MOV X1, X31
	0x03D42FD8 BL 0x3DE0F44
	0x03D42FDC MOV X1, X31
	0x03D42FE0 BL 0x3DCA03C
	0x03D42FE4 CMP W0, 0x1
	0x03D42FE8 B.NE 0x3D43254
	0x03D42FEC LDR X8, [X20]
	0x03D42FF0 LDR X1, [X22]
	0x03D42FF4 LDRH W9, [X8 + 0x12E]
	0x03D42FF8 CBZ X9, 0x3D4301C
	0x03D42FFC LDR X10, [X8 + 0xB0]
	0x03D43000 ADD X10, X10, 0x8
	0x03D43004 LDUR X11, [X10 - 0x8]
	0x03D43008 CMP X11, X1
	0x03D4300C B.EQ 0x3D4302C
	0x03D43010 SUBS X9, X9, 0x1
	0x03D43014 ADD X10, X10, 0x10
	0x03D43018 B.NE 0x3D43004
	0x03D4301C MOVZ W2, 0x1D
	0x03D43020 MOV X0, X20
	0x03D43024 BL 0x1C5C788
	0x03D43028 B 0x3D4303C
	0x03D4302C LDR W9, [X10]
	0x03D43030 ADD W9, W9, 0x1D
	0x03D43034 ADD X8, X8, W9, 0x4, SXTW
	0x03D43038 ADD X0, X8, 0x138
	0x03D4303C LDP X8, X1, [X0]
	0x03D43040 MOV X0, X20
	0x03D43044 BLR X8
	0x03D43048 LDR V1, [X31 + 0x2]
	0x03D4304C LDR V8, [X31 + 0x404]
	0x03D43050 LDR X1, [X22]
	0x03D43054 FADD S0, S1, S0
	0x03D43058 STR S0, [X31 + 0x400]
	0x03D4305C LDR X8, [X20]
	0x03D43060 LDRH W9, [X8 + 0x12E]
	0x03D43064 CBZ X9, 0x3D43088
	0x03D43068 LDR X10, [X8 + 0xB0]
	0x03D4306C ADD X10, X10, 0x8
	0x03D43070 LDUR X11, [X10 - 0x8]
	0x03D43074 CMP X11, X1
	0x03D43078 B.EQ 0x3D43098
	0x03D4307C SUBS X9, X9, 0x1
	0x03D43080 ADD X10, X10, 0x10
	0x03D43084 B.NE 0x3D43070
	0x03D43088 MOVZ W2, 0x1F
	0x03D4308C MOV X0, X20
	0x03D43090 BL 0x1C5C788
	0x03D43094 B 0x3D430A8
	0x03D43098 LDR W9, [X10]
	0x03D4309C ADD W9, W9, 0x1F
	0x03D430A0 ADD X8, X8, W9, 0x4, SXTW
	0x03D430A4 ADD X0, X8, 0x138
	0x03D430A8 LDP X8, X1, [X0]
	0x03D430AC MOV X0, X20
	0x03D430B0 BLR X8
	0x03D430B4 FADD S0, S8, S0
	0x03D430B8 STR S0, [X31 + 0x404]
	0x03D430BC LDR X8, [X20]
	0x03D430C0 LDR V9, [X31 + 0x408]
	0x03D430C4 LDR X1, [X22]
	0x03D430C8 LDRH W9, [X8 + 0x12E]
	0x03D430CC CBZ X9, 0x3D430F0
	0x03D430D0 LDR X10, [X8 + 0xB0]
	0x03D430D4 ADD X10, X10, 0x8
	0x03D430D8 LDUR X11, [X10 - 0x8]
	0x03D430DC CMP X11, X1
	0x03D430E0 B.EQ 0x3D43100
	0x03D430E4 SUBS X9, X9, 0x1
	0x03D430E8 ADD X10, X10, 0x10
	0x03D430EC B.NE 0x3D430D8
	0x03D430F0 MOVZ W2, 0x1D
	0x03D430F4 MOV X0, X20
	0x03D430F8 BL 0x1C5C788
	0x03D430FC B 0x3D43110
	0x03D43100 LDR W9, [X10]
	0x03D43104 ADD W9, W9, 0x1D
	0x03D43108 ADD X8, X8, W9, 0x4, SXTW
	0x03D4310C ADD X0, X8, 0x138
	0x03D43110 LDP X8, X1, [X0]
	0x03D43114 MOV X0, X20
	0x03D43118 BLR X8
	0x03D4311C LDR X8, [X20]
	0x03D43120 LDR X1, [X22]
	0x03D43124 MOV V8.16B, V0.16B
	0x03D43128 LDRH W9, [X8 + 0x12E]
	0x03D4312C CBZ X9, 0x3D43150
	0x03D43130 LDR X10, [X8 + 0xB0]
	0x03D43134 ADD X10, X10, 0x8
	0x03D43138 LDUR X11, [X10 - 0x8]
	0x03D4313C CMP X11, X1
	0x03D43140 B.EQ 0x3D43160
	0x03D43144 SUBS X9, X9, 0x1
	0x03D43148 ADD X10, X10, 0x10
	0x03D4314C B.NE 0x3D43138
	0x03D43150 MOVZ W2, 0x1E
	0x03D43154 MOV X0, X20
	0x03D43158 BL 0x1C5C788
	0x03D4315C B 0x3D43170
	0x03D43160 LDR W9, [X10]
	0x03D43164 ADD W9, W9, 0x1E
	0x03D43168 ADD X8, X8, W9, 0x4, SXTW
	0x03D4316C ADD X0, X8, 0x138
	0x03D43170 LDP X8, X1, [X0]
	0x03D43174 MOV X0, X20
	0x03D43178 BLR X8
	0x03D4317C FADD S0, S8, S0
	0x03D43180 FSUB S0, S9, S0
	0x03D43184 STR S0, [X31 + 0x408]
	0x03D43188 LDR X8, [X20]
	0x03D4318C LDR V9, [X31 + 0x40C]
	0x03D43190 LDR X1, [X22]
	0x03D43194 LDRH W9, [X8 + 0x12E]
	0x03D43198 CBZ X9, 0x3D431BC
	0x03D4319C LDR X10, [X8 + 0xB0]
	0x03D431A0 ADD X10, X10, 0x8
	0x03D431A4 LDUR X11, [X10 - 0x8]
	0x03D431A8 CMP X11, X1
	0x03D431AC B.EQ 0x3D431CC
	0x03D431B0 SUBS X9, X9, 0x1
	0x03D431B4 ADD X10, X10, 0x10
	0x03D431B8 B.NE 0x3D431A4
	0x03D431BC MOVZ W2, 0x1F
	0x03D431C0 MOV X0, X20
	0x03D431C4 BL 0x1C5C788
	0x03D431C8 B 0x3D431DC
	0x03D431CC LDR W9, [X10]
	0x03D431D0 ADD W9, W9, 0x1F
	0x03D431D4 ADD X8, X8, W9, 0x4, SXTW
	0x03D431D8 ADD X0, X8, 0x138
	0x03D431DC LDP X8, X1, [X0]
	0x03D431E0 MOV X0, X20
	0x03D431E4 BLR X8
	0x03D431E8 LDR X8, [X20]
	0x03D431EC LDR X1, [X22]
	0x03D431F0 MOV V8.16B, V0.16B
	0x03D431F4 LDRH W9, [X8 + 0x12E]
	0x03D431F8 CBZ X9, 0x3D4321C
	0x03D431FC LDR X10, [X8 + 0xB0]
	0x03D43200 ADD X10, X10, 0x8
	0x03D43204 LDUR X11, [X10 - 0x8]
	0x03D43208 CMP X11, X1
	0x03D4320C B.EQ 0x3D4322C
	0x03D43210 SUBS X9, X9, 0x1
	0x03D43214 ADD X10, X10, 0x10
	0x03D43218 B.NE 0x3D43204
	0x03D4321C MOVZ W2, 0x1C
	0x03D43220 MOV X0, X20
	0x03D43224 BL 0x1C5C788
	0x03D43228 B 0x3D4323C
	0x03D4322C LDR W9, [X10]
	0x03D43230 ADD W9, W9, 0x1C
	0x03D43234 ADD X8, X8, W9, 0x4, SXTW
	0x03D43238 ADD X0, X8, 0x138
	0x03D4323C LDP X8, X1, [X0]
	0x03D43240 MOV X0, X20
	0x03D43244 BLR X8
	0x03D43248 FADD S0, S8, S0
	0x03D4324C FSUB S0, S9, S0
	0x03D43250 STR S0, [X31 + 0x40C]
	0x03D43254 LDR V0, [X19 + 0xB8]
	0x03D43258 LDR X8, [X19 + 0xC0]
	0x03D4325C MOVZ W9, 0x1
	0x03D43260 ADD X0, X31, 0x400
	0x03D43264 UNIMPLEMENTED
	0x03D43268 STR X8, [X19 + 0x68]
	0x03D4326C STR D0, [X19 + 0x78]
	0x03D43270 ADD X8, X31, 0x158
	0x03D43274 FMOV S0, W31
	0x03D43278 FMOV S1, W31
	0x03D4327C FMOV S2, 1
	0x03D43280 FMOV S3, 1
	0x03D43284 MOV X1, X31
	0x03D43288 ADD X20, X19, 0x30
	0x03D4328C STRB W9, [X19 + 0x76]
	0x03D43290 BL 0x3DC5BEC
	0x03D43294 ADD X0, X31, 0x348
	0x03D43298 ADD X1, X31, 0x158
	0x03D4329C MOVZ W2, 0xB4
	0x03D432A0 BL 0x3EB1AC0
	0x03D432A4 ADD X0, X31, 0xA0
	0x03D432A8 ADD X1, X31, 0x348
	0x03D432AC MOVZ W2, 0xB4
	0x03D432B0 BL 0x3EB1AC0
	0x03D432B4 ADD X8, X31, 0x158
	0x03D432B8 ADD X0, X31, 0xA0
	0x03D432BC FMOV S0, 1
	0x03D432C0 MOV X1, X31
	0x03D432C4 BL 0x3DBB2A8
	0x03D432C8 LDR W8, [X31 + 0x168]
	0x03D432CC ADD X9, X31, 0x59
	0x03D432D0 LDUR V0, [X9 + 0xFF]
	0x03D432D4 CMP W8, 0x1
	0x03D432D8 STR V0, [X31 + 0x33]
	0x03D432DC B.LT 0x3D433F4
	0x03D432E0 LDR W9, [X31 + 0x16C]
	0x03D432E4 CMP W9, 0x0
	0x03D432E8 B.LE 0x3D433F4
	0x03D432EC LDR V0, [X31 + 0x33]
	0x03D432F0 ADD X1, X31, 0x80
	0x03D432F4 MOV X0, X19
	0x03D432F8 STP W8, W9, [X31 + 0x90]
	0x03D432FC STR V0, [X31 + 0x8]
	0x03D43300 BL 0x3D3DEB0
	0x03D43304 LDR X21, [X19 + 0x18]
	0x03D43308 ADD X0, X31, 0x30
	0x03D4330C MOVZ W2, 0x50
	0x03D43310 MOV X1, X20
	0x03D43314 BL 0x3EB1AC0
	0x03D43318 CBZ X21, 0x3D4341C
	0x03D4331C ADRP X8, 0x422000
	0x03D43320 LDR X8, [X8 + 0x1E8]
	0x03D43324 ADD X0, X31, 0x540
	0x03D43328 ADD X1, X31, 0x30
	0x03D4332C MOVZ W2, 0x50
	0x03D43330 LDR X22, [X8]
	0x03D43334 BL 0x3EB1AC0
	0x03D43338 LDR W9, [X21 + 0x1C]
	0x03D4333C LDR X8, [X21 + 0x10]
	0x03D43340 ADD W9, W9, 0x1
	0x03D43344 STR W9, [X21 + 0x1C]
	0x03D43348 CBZ X8, 0x3D4341C
	0x03D4334C LDRSW X9, [X21 + 0x18]
	0x03D43350 LDR W10, [X8 + 0x18]
	0x03D43354 CMP W9, W10
	0x03D43358 B.CS 0x3D43380
	0x03D4335C MOVZ W11, 0x50
	0x03D43360 MADD X8, X9, X11, X8
	0x03D43364 ADD W10, W9, 0x1
	0x03D43368 ADD X0, X8, 0x20
	0x03D4336C ADD X1, X31, 0x540
	0x03D43370 MOVZ W2, 0x50
	0x03D43374 STR W10, [X21 + 0x18]
	0x03D43378 BL 0x3EB1AC0
	0x03D4337C B 0x3D433AC
	0x03D43380 LDR X8, [X22 + 0x20]
	0x03D43384 ADD X0, X31, 0x158
	0x03D43388 ADD X1, X31, 0x540
	0x03D4338C MOVZ W2, 0x50
	0x03D43390 LDR X8, [X8 + 0xC0]
	0x03D43394 LDR X22, [X8 + 0x70]
	0x03D43398 BL 0x3EB1AC0
	0x03D4339C ADD X1, X31, 0x158
	0x03D433A0 MOV X0, X21
	0x03D433A4 MOV X2, X22
	0x03D433A8 BL 0x315B370
	0x03D433AC ADRP X8, 0x422000
	0x03D433B0 LDR W21, [X19 + 0x118]
	0x03D433B4 LDR X8, [X8 + 0x148]
	0x03D433B8 MOV X0, X20
	0x03D433BC LDR X1, [X8]
	0x03D433C0 BL 0x2408B10
	0x03D433C4 ADD W8, W0, W21
	0x03D433C8 STR W8, [X19 + 0x118]
	0x03D433CC ADRP X8, 0x421000
	0x03D433D0 LDR W21, [X19 + 0x11C]
	0x03D433D4 LDR X8, [X8 + 0xFB8]
	0x03D433D8 ADD X0, X19, 0x40
	0x03D433DC LDR X1, [X8]
	0x03D433E0 BL 0x2407134
	0x03D433E4 ADD W8, W0, W21
	0x03D433E8 MOVZ W9, 0x1
	0x03D433EC STR W8, [X19 + 0x11C]
	0x03D433F0 STRB W9, [X19 + 0x80]
	0x03D433F4 MOVI V0.2D, 0x0
	0x03D433F8 STP V0, V0, [X20 + 0x30]
	0x03D433FC STP V0, V0, [X20 + 0x10]
	0x03D43400 STR V0, [X20]
	0x03D43404 ADD X31, X31, 0x590
	0x03D43408 LDP X20, X19, [X31 + 0x30]
	0x03D4340C LDP X22, X21, [X31 + 0x20]
	0x03D43410 LDP X29, X30, [X31 + 0x10]
	0x03D43414 LDP D9, D8, [X31], #0x40
	0x03D43418 RET
	0x03D4341C BL 0x1C16F20
	0x03D43420 STP D15, D14, [X31 - 0xA0]!
	0x03D43424 STP D13, D12, [X31 + 0x10]
	0x03D43428 STP D11, D10, [X31 + 0x20]
	0x03D4342C STP D9, D8, [X31 + 0x30]
	0x03D43430 STP X29, X30, [X31 + 0x40]
	0x03D43434 STP X28, X27, [X31 + 0x50]
	0x03D43438 STP X26, X25, [X31 + 0x60]
	0x03D4343C STP X24, X23, [X31 + 0x70]
	0x03D43440 STP X22, X21, [X31 + 0x80]
	0x03D43444 STP X20, X19, [X31 + 0x90]
	0x03D43448 ADRP X21, 0x6A4000
	0x03D4344C LDRB W8, [X21 + 0xB84]
	0x03D43450 MOV X19, X2
	0x03D43454 MOV X20, X1
	0x03D43458 TBNZ X8, 0x0, 0x3D43470
	0x03D4345C ADRP X0, 0x3E0000
	0x03D43460 LDR X0, [X0 + 0x8D0]
	0x03D43464 BL 0x1C16CF4
	0x03D43468 MOVZ W8, 0x1
	0x03D4346C STRB W8, [X21 + 0xB84]
	0x03D43470 CBZ X19, 0x3D4373C
	0x03D43474 ADRP X8, 0x3E0000
	0x03D43478 LDR X8, [X8 + 0x8D0]
	0x03D4347C LDR W1, [X19 + 0x18]
	0x03D43480 LDR X0, [X8]
	0x03D43484 BL 0x1C16D6C
	0x03D43488 LDR W8, [X19 + 0x18]
	0x03D4348C MOV X21, X0
	0x03D43490 CMP W8, 0x1
	0x03D43494 B.LT 0x3D43708
	0x03D43498 ADRP X22, 0x3B0000
	0x03D4349C ADRP X10, 0xFFFFFFFFFCDA7000
	0x03D434A0 LDR X22, [X22 + 0x5A8]
	0x03D434A4 LDR V8, [X10 + 0x17C]
	0x03D434A8 MOV W9, W31
	0x03D434AC ADRP X24, 0x695000
	0x03D434B0 FMOV S9, W31
	0x03D434B4 CMP W9, W8
	0x03D434B8 B.CS 0x3D43738
	0x03D434BC CBZ X20, 0x3D4373C
	0x03D434C0 SXTW X27, W9
	0x03D434C4 ADD X9, X19, X27, 0x1, LSL
	0x03D434C8 ADD X29, X9, 0x20
	0x03D434CC LDRH W10, [X29]
	0x03D434D0 LDR W9, [X20 + 0x18]
	0x03D434D4 CMP W10, W9
	0x03D434D8 B.CS 0x3D43738
	0x03D434DC ADD W11, W27, 0x1
	0x03D434E0 CMP W11, W8
	0x03D434E4 B.CS 0x3D43738
	0x03D434E8 SXTW X26, W11
	0x03D434EC ADD X10, X20, X10, 0x3, LSL
	0x03D434F0 ADD X23, X19, X26, 0x1, LSL
	0x03D434F4 LDP S11, S10, [X10 + 0x20]
	0x03D434F8 LDRH W10, [X23 + 0x20]!
	0x03D434FC CMP W10, W9
	0x03D43500 B.CS 0x3D43738
	0x03D43504 ADD W11, W27, 0x2
	0x03D43508 CMP W11, W8
	0x03D4350C B.CS 0x3D43738
	0x03D43510 SXTW X28, W11
	0x03D43514 ADD X8, X20, X10, 0x3, LSL
	0x03D43518 ADD X25, X19, X28, 0x1, LSL
	0x03D4351C LDP S15, S14, [X8 + 0x20]
	0x03D43520 LDRH W8, [X25 + 0x20]!
	0x03D43524 CMP W8, W9
	0x03D43528 B.CS 0x3D43738
	0x03D4352C ADD X8, X20, X8, 0x3, LSL
	0x03D43530 LDRB W9, [X24 + 0x785]
	0x03D43534 LDP S13, S12, [X8 + 0x20]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X29
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Subtract X31, X31, 560
	008 Move X20, 0x6A6000
	009 Move W8, [X20+2946]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x3DB000
	016 Move X0, [X0+3712]
	017 Call 0x1C17CF4
	018 Move X0, 0x3DB000
	019 Move X0, [X0+288]
	020 Call 0x1C17CF4
	021 Move X0, 0x3DB000
	022 Move X0, [X0+3736]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2946], W8
	026 Add X0, X31, 376
	027 Move W2, 184
	028 Move W1, W31
	029 Call 0x3EB2B10
	030 Add X0, X31, 192
	031 Move W2, 184
	032 Move W1, W31
	033 Call 0x3EB2B10
	034 Move X0, [X19+272]
	035 Compare X0, 0
	036 JumpIfEqual {586}
	037 Move X1, X31
	038 Call VisualElement.get_layout, X0
	039 Move X8, -52789248
	040 Move V8, [X8+3996]
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 Move X0, [X19+272]
	043 Compare X0, 0
	044 JumpIfEqual {586}
	045 Move X1, X31
	046 Call VisualElement.get_layout, X0
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 Move X0, [X19+272]
	049 Compare X0, 0
	050 JumpIfEqual {586}
	051 Move X1, X31
	052 Call VisualElement.get_resolvedStyle, X0
	053 Compare X0, 0
	054 JumpIfEqual {586}
	055 Move X21, 0x3DB000
	056 Move X8, [X0]
	057 Move X21, [X21+288]
	058 Move X20, X0
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X1, [X21]
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 5
	070 Move X0, X20
	071 Call 0x1C5D788
	072 Move W9, [X10]
	073 Add W9, W9, 5
	074 Add X8, X8, W9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X20
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X8, -52789248
	081 Multiply S0, S0, S0
	082 Multiply S1, S1, S1
	083 Move V8, [X8+3872]
	084 Multiply S2, S2, S2
	085 Add S0, S0, S1
	086 Add S0, S2, S0
	087 Multiply S1, S3, S3
	088 Add S0, S1, S0
	089 NotImplemented "Instruction FCMP not yet implemented."
	090 Move X8, [X20]
	091 Move X1, [X21]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move W2, 6
	102 Move X0, X20
	103 Call 0x1C5D788
	104 Move W9, [X10]
	105 Add W9, W9, 6
	106 Add X8, X8, W9
	107 Add X0, X8, 312
	108 Move X8, [X0]
	109 Move X1, [X0+8]
	110 Move X0, X20
	111 NotImplemented "Instruction BLR not yet implemented."
	112 NotImplemented "Instruction FCMP not yet implemented."
	113 Move X8, [X20]
	114 Move X1, [X21]
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Compare X9, 0
	117 JumpIfEqual {124}
	118 Move X10, [X8+176]
	119 Add X10, X10, 8
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Subtract X9, X9, 1
	123 Add X10, X10, 16
	124 Move W2, 9
	125 Move X0, X20
	126 Call 0x1C5D788
	127 Move W9, [X10]
	128 Add W9, W9, 9
	129 Add X8, X8, W9
	130 Add X0, X8, 312
	131 Move X8, [X0]
	132 Move X1, [X0+8]
	133 Move X0, X20
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Multiply S0, S0, S0
	136 Multiply S1, S1, S1
	137 Multiply S2, S2, S2
	138 Add S0, S0, S1
	139 Add S0, S2, S0
	140 Multiply S1, S3, S3
	141 Add S0, S1, S0
	142 NotImplemented "Instruction FCMP not yet implemented."
	143 Move X8, [X20]
	144 Move X1, [X21]
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move W2, 12
	155 Move X0, X20
	156 Call 0x1C5D788
	157 Move W9, [X10]
	158 Add W9, W9, 12
	159 Add X8, X8, W9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, X20
	164 NotImplemented "Instruction BLR not yet implemented."
	165 NotImplemented "Instruction FCMP not yet implemented."
	166 Move X8, [X20]
	167 Move X1, [X21]
	168 NotImplemented "Instruction LDRH not yet implemented."
	169 Compare X9, 0
	170 JumpIfEqual {177}
	171 Move X10, [X8+176]
	172 Add X10, X10, 8
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Subtract X9, X9, 1
	176 Add X10, X10, 16
	177 Move W2, 7
	178 Move X0, X20
	179 Call 0x1C5D788
	180 Move W9, [X10]
	181 Add W9, W9, 7
	182 Add X8, X8, W9
	183 Add X0, X8, 312
	184 Move X8, [X0]
	185 Move X1, [X0+8]
	186 Move X0, X20
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Multiply S0, S0, S0
	189 Multiply S1, S1, S1
	190 Multiply S2, S2, S2
	191 Add S0, S0, S1
	192 Add S0, S2, S0
	193 Multiply S1, S3, S3
	194 Add S0, S1, S0
	195 NotImplemented "Instruction FCMP not yet implemented."
	196 Move X8, [X20]
	197 Move X1, [X21]
	198 NotImplemented "Instruction LDRH not yet implemented."
	199 Compare X9, 0
	200 JumpIfEqual {207}
	201 Move X10, [X8+176]
	202 Add X10, X10, 8
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Subtract X9, X9, 1
	206 Add X10, X10, 16
	207 Move W2, 8
	208 Move X0, X20
	209 Call 0x1C5D788
	210 Move W9, [X10]
	211 Add W9, W9, 8
	212 Add X8, X8, W9
	213 Add X0, X8, 312
	214 Move X8, [X0]
	215 Move X1, [X0+8]
	216 Move X0, X20
	217 NotImplemented "Instruction BLR not yet implemented."
	218 NotImplemented "Instruction FCMP not yet implemented."
	219 Move X8, [X20]
	220 Move X1, [X21]
	221 NotImplemented "Instruction LDRH not yet implemented."
	222 Compare X9, 0
	223 JumpIfEqual {230}
	224 Move X10, [X8+176]
	225 Add X10, X10, 8
	226 NotImplemented "Instruction LDUR not yet implemented."
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Subtract X9, X9, 1
	229 Add X10, X10, 16
	230 Move W2, 1
	231 Move X0, X20
	232 Call 0x1C5D788
	233 Move W9, [X10]
	234 Add W9, W9, 1
	235 Add X8, X8, W9
	236 Add X0, X8, 312
	237 Move X8, [X0]
	238 Move X1, [X0+8]
	239 Move X0, X20
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Multiply S0, S0, S0
	242 Multiply S1, S1, S1
	243 Multiply S2, S2, S2
	244 Add S0, S0, S1
	245 Add S0, S2, S0
	246 Multiply S1, S3, S3
	247 Add S0, S1, S0
	248 NotImplemented "Instruction FCMP not yet implemented."
	249 Move X8, [X20]
	250 Move X1, [X21]
	251 NotImplemented "Instruction LDRH not yet implemented."
	252 Compare X9, 0
	253 JumpIfEqual {260}
	254 Move X10, [X8+176]
	255 Add X10, X10, 8
	256 NotImplemented "Instruction LDUR not yet implemented."
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Subtract X9, X9, 1
	259 Add X10, X10, 16
	260 Move W2, 4
	261 Move X0, X20
	262 Call 0x1C5D788
	263 Move W9, [X10]
	264 Add W9, W9, 4
	265 Add X8, X8, W9
	266 Add X0, X8, 312
	267 Move X8, [X0]
	268 Move X1, [X0+8]
	269 Move X0, X20
	270 NotImplemented "Instruction BLR not yet implemented."
	271 NotImplemented "Instruction FCMP not yet implemented."
	272 Add X8, X31, 192
	273 Add X0, X8, 16
	274 Move W2, 168
	275 Move W1, W31
	276 Call 0x3EB2B10
	277 Move X0, [X19+272]
	278 Compare X0, 0
	279 JumpIfEqual {586}
	280 Move X1, X31
	281 Call VisualElement.get_rect, X0
	282 Move [X31+192], S0
	283 Move [X31+200], S1
	284 Move [X31+200], S2
	285 Move [X31+208], S3
	286 Move X8, [X20]
	287 Move X1, [X21]
	288 NotImplemented "Instruction LDRH not yet implemented."
	289 Compare X9, 0
	290 JumpIfEqual {297}
	291 Move X10, [X8+176]
	292 Add X10, X10, 8
	293 NotImplemented "Instruction LDUR not yet implemented."
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Subtract X9, X9, 1
	296 Add X10, X10, 16
	297 Move W2, 5
	298 Move X0, X20
	299 Call 0x1C5D788
	300 Move W9, [X10]
	301 Add W9, W9, 5
	302 Add X8, X8, W9
	303 Add X0, X8, 312
	304 Move X8, [X0]
	305 Move X1, [X0+8]
	306 Move X0, X20
	307 NotImplemented "Instruction BLR not yet implemented."
	308 Move [X31+224], S0
	309 Move [X31+232], S1
	310 Move [X31+232], S2
	311 Move [X31+240], S3
	312 Move X8, [X20]
	313 Move X1, [X21]
	314 NotImplemented "Instruction LDRH not yet implemented."
	315 Compare X9, 0
	316 JumpIfEqual {323}
	317 Move X10, [X8+176]
	318 Add X10, X10, 8
	319 NotImplemented "Instruction LDUR not yet implemented."
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Subtract X9, X9, 1
	322 Add X10, X10, 16
	323 Move W2, 9
	324 Move X0, X20
	325 Call 0x1C5D788
	326 Move W9, [X10]
	327 Add W9, W9, 9
	328 Add X8, X8, W9
	329 Add X0, X8, 312
	330 Move X8, [X0]
	331 Move X1, [X0+8]
	332 Move X0, X20
	333 NotImplemented "Instruction BLR not yet implemented."
	334 Move [X31+240], S0
	335 Move [X31+248], S1
	336 Move [X31+248], S2
	337 Move [X31+256], S3
	338 Move X8, [X20]
	339 Move X1, [X21]
	340 NotImplemented "Instruction LDRH not yet implemented."
	341 Compare X9, 0
	342 JumpIfEqual {349}
	343 Move X10, [X8+176]
	344 Add X10, X10, 8
	345 NotImplemented "Instruction LDUR not yet implemented."
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Subtract X9, X9, 1
	348 Add X10, X10, 16
	349 Move W2, 7
	350 Move X0, X20
	351 Call 0x1C5D788
	352 Move W9, [X10]
	353 Add W9, W9, 7
	354 Add X8, X8, W9
	355 Add X0, X8, 312
	356 Move X8, [X0]
	357 Move X1, [X0+8]
	358 Move X0, X20
	359 NotImplemented "Instruction BLR not yet implemented."
	360 Move [X31+256], S0
	361 Move [X31+260], S1
	362 Move [X31+264], S2
	363 Move [X31+268], S3
	364 Move X8, [X20]
	365 Move X1, [X21]
	366 NotImplemented "Instruction LDRH not yet implemented."
	367 Compare X9, 0
	368 JumpIfEqual {375}
	369 Move X10, [X8+176]
	370 Add X10, X10, 8
	371 NotImplemented "Instruction LDUR not yet implemented."
	372 NotImplemented "Instruction CMP not yet implemented."
	373 Subtract X9, X9, 1
	374 Add X10, X10, 16
	375 Move W2, 1
	376 Move X0, X20
	377 Call 0x1C5D788
	378 Move W9, [X10]
	379 Add W9, W9, 1
	380 Add X8, X8, W9
	381 Add X0, X8, 312
	382 Move X8, [X0]
	383 Move X1, [X0+8]
	384 Move X0, X20
	385 NotImplemented "Instruction BLR not yet implemented."
	386 Move [X31+272], S0
	387 Move [X31+276], S1
	388 Move [X31+280], S2
	389 Move [X31+284], S3
	390 Move X8, [X20]
	391 Move X1, [X21]
	392 NotImplemented "Instruction LDRH not yet implemented."
	393 Compare X9, 0
	394 JumpIfEqual {401}
	395 Move X10, [X8+176]
	396 Add X10, X10, 8
	397 NotImplemented "Instruction LDUR not yet implemented."
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Subtract X9, X9, 1
	400 Add X10, X10, 16
	401 Move W2, 6
	402 Move X0, X20
	403 Call 0x1C5D788
	404 Move W9, [X10]
	405 Add W9, W9, 6
	406 Add X8, X8, W9
	407 Add X0, X8, 312
	408 Move X8, [X0]
	409 Move X1, [X0+8]
	410 Move X0, X20
	411 NotImplemented "Instruction BLR not yet implemented."
	412 Move [X31+288], S0
	413 Move X8, [X20]
	414 Move X1, [X21]
	415 NotImplemented "Instruction LDRH not yet implemented."
	416 Compare X9, 0
	417 JumpIfEqual {424}
	418 Move X10, [X8+176]
	419 Add X10, X10, 8
	420 NotImplemented "Instruction LDUR not yet implemented."
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Subtract X9, X9, 1
	423 Add X10, X10, 16
	424 Move W2, 12
	425 Move X0, X20
	426 Call 0x1C5D788
	427 Move W9, [X10]
	428 Add W9, W9, 12
	429 Add X8, X8, W9
	430 Add X0, X8, 312
	431 Move X8, [X0]
	432 Move X1, [X0+8]
	433 Move X0, X20
	434 NotImplemented "Instruction BLR not yet implemented."
	435 Move [X31+292], S0
	436 Move X8, [X20]
	437 Move X1, [X21]
	438 NotImplemented "Instruction LDRH not yet implemented."
	439 Compare X9, 0
	440 JumpIfEqual {447}
	441 Move X10, [X8+176]
	442 Add X10, X10, 8
	443 NotImplemented "Instruction LDUR not yet implemented."
	444 NotImplemented "Instruction CMP not yet implemented."
	445 Subtract X9, X9, 1
	446 Add X10, X10, 16
	447 Move W2, 8
	448 Move X0, X20
	449 Call 0x1C5D788
	450 Move W9, [X10]
	451 Add W9, W9, 8
	452 Add X8, X8, W9
	453 Add X0, X8, 312
	454 Move X8, [X0]
	455 Move X1, [X0+8]
	456 Move X0, X20
	457 NotImplemented "Instruction BLR not yet implemented."
	458 Move [X31+296], S0
	459 Move X8, [X20]
	460 Move X1, [X21]
	461 NotImplemented "Instruction LDRH not yet implemented."
	462 Compare X9, 0
	463 JumpIfEqual {470}
	464 Move X10, [X8+176]
	465 Add X10, X10, 8
	466 NotImplemented "Instruction LDUR not yet implemented."
	467 NotImplemented "Instruction CMP not yet implemented."
	468 Subtract X9, X9, 1
	469 Add X10, X10, 16
	470 Move W2, 4
	471 Move X0, X20
	472 Call 0x1C5D788
	473 Move W9, [X10]
	474 Add W9, W9, 4
	475 Add X8, X8, W9
	476 Add X0, X8, 312
	477 Move X8, [X0]
	478 Move X1, [X0+8]
	479 Move X0, X20
	480 NotImplemented "Instruction BLR not yet implemented."
	481 Move [X31+300], S0
	482 Move X8, [X19+272]
	483 Compare X8, 0
	484 JumpIfEqual {586}
	485 Move X0, [X19+16]
	486 Move X1, [X8+392]
	487 Move X2, X31
	488 Call ColorPage.Init, X0, X1
	489 Move [X31+344], X0
	490 Move X8, [X19+272]
	491 Compare X8, 0
	492 JumpIfEqual {586}
	493 Move X0, [X19+16]
	494 Move X1, [X8+400]
	495 Move X2, X31
	496 Call ColorPage.Init, X0, X1
	497 Move [X31+352], X0
	498 Move X8, [X19+272]
	499 Compare X8, 0
	500 JumpIfEqual {586}
	501 Move X0, [X19+16]
	502 Move X1, [X8+408]
	503 Move X2, X31
	504 Call ColorPage.Init, X0, X1
	505 Move [X31+360], X0
	506 Move X8, [X19+272]
	507 Compare X8, 0
	508 JumpIfEqual {586}
	509 Move X0, [X19+16]
	510 Move X1, [X8+416]
	511 Move X2, X31
	512 Call ColorPage.Init, X0, X1
	513 Move [X31+368], X0
	514 Move X0, [X19+272]
	515 Compare X0, 0
	516 JumpIfEqual {586}
	517 Move X1, X31
	518 Call VisualElement.get_panel, X0
	519 Compare X0, 0
	520 JumpIfEqual {586}
	521 Move X10, 0x3DA000
	522 Move X8, [X0]
	523 Move X10, [X10+3712]
	524 Move X20, X0
	525 NotImplemented "Instruction LDRH not yet implemented."
	526 Move X1, [X10]
	527 Compare X9, 0
	528 JumpIfEqual {535}
	529 Move X10, [X8+176]
	530 Add X10, X10, 8
	531 NotImplemented "Instruction LDUR not yet implemented."
	532 NotImplemented "Instruction CMP not yet implemented."
	533 Subtract X9, X9, 1
	534 Add X10, X10, 16
	535 Move W2, 2
	536 Move X0, X20
	537 Call 0x1C5D788
	538 Move W9, [X10]
	539 Add W9, W9, 2
	540 Add X8, X8, W9
	541 Add X0, X8, 312
	542 Move X8, [X0]
	543 Move X1, [X0+8]
	544 Move X0, X20
	545 NotImplemented "Instruction BLR not yet implemented."
	546 NotImplemented "Instruction CMP not yet implemented."
	547 Move X20, 0x3DA000
	548 Move X20, [X20+3736]
	549 Move X0, [X20]
	550 Move W8, [X0+224]
	551 Compare W8, 0
	552 JumpIfNotEqual {555}
	553 Call 0x1C17DFC
	554 Move X0, [X20]
	555 Move X8, [X0+184]
	556 NotImplemented "Instruction LDUR not yet implemented."
	557 Move V0, 0
	558 Add X0, X31, 376
	559 Add X1, X31, 192
	560 Move W2, 184
	561 Move [X31+13], V0
	562 Add X20, X31, 376
	563 Call 0x3EB2AC0
	564 Move X0, [X19+272]
	565 Add X1, X20, 112
	566 Add X2, X20, 136
	567 Add X3, X20, 120
	568 Add X4, X20, 128
	569 Move X5, X31
	570 Call MeshGenerationContextUtils.GetVisualElementRadii, X0, X1, X2, X3, X4
	571 Add X0, X31, 8
	572 Add X1, X31, 376
	573 Move W2, 184
	574 Call 0x3EB2AC0
	575 Add X1, X31, 8
	576 Move X0, X19
	577 Call UIRStylePainter.DrawBorder, X0, X1
	578 Add X31, X31, 560
	579 Move X20, [X31+32]
	580 Move X19, [X31+40]
	581 Move X30, [X31+16]
	582 Move X21, [X31+24]
	583 Move X29, [X31+8]
	584 Move V8, [X31+48]
	585 Return 
	586 Call 0x1C17F20

Method: System.Void ApplyVisualElementClipping()

Disassembly:
	0x03D43538 CBNZ W9, 0x3D4354C
	0x03D4353C MOV X0, X22
	0x03D43540 BL 0x1C16CF4
	0x03D43544 MOVZ W8, 0x1
	0x03D43548 STRB W8, [X24 + 0x785]
	0x03D4354C LDR X0, [X22]
	0x03D43550 LDR W8, [X0 + 0xE0]
	0x03D43554 CBNZ W8, 0x3D4355C
	0x03D43558 BL 0x1C16DFC
	0x03D4355C FSUB S0, S15, S11
	0x03D43560 FSUB S1, S14, S10
	0x03D43564 FMUL S2, S0, S0
	0x03D43568 FMUL S3, S1, S1
	0x03D4356C FADD S2, S2, S3
	0x03D43570 FADD S2, S2, S9
	0x03D43574 FSQRT S2, S2
	0x03D43578 FCMP S2, S8
	0x03D4357C B.LE 0x3D4358C
	0x03D43580 FDIV S14, S0, S2
	0x03D43584 FDIV S15, S1, S2
	0x03D43588 B 0x3D435C4
	0x03D4358C ADRP X8, 0x695000
	0x03D43590 LDRB W8, [X8 + 0x783]
	0x03D43594 CBNZ W8, 0x3D435B0
	0x03D43598 ADRP X0, 0x3B0000
	0x03D4359C LDR X0, [X0 + 0x5A0]
	0x03D435A0 BL 0x1C16CF4
	0x03D435A4 MOVZ W8, 0x1
	0x03D435A8 ADRP X9, 0x695000
	0x03D435AC STRB W8, [X9 + 0x783]
	0x03D435B0 ADRP X8, 0x3B0000
	0x03D435B4 LDR X8, [X8 + 0x5A0]
	0x03D435B8 LDR X8, [X8]
	0x03D435BC LDR X8, [X8 + 0xB8]
	0x03D435C0 LDP S14, S15, [X8]
	0x03D435C4 LDRB W8, [X24 + 0x785]
	0x03D435C8 CBNZ W8, 0x3D435DC
	0x03D435CC MOV X0, X22
	0x03D435D0 BL 0x1C16CF4
	0x03D435D4 MOVZ W8, 0x1
	0x03D435D8 STRB W8, [X24 + 0x785]
	0x03D435DC LDR X0, [X22]
	0x03D435E0 LDR W8, [X0 + 0xE0]
	0x03D435E4 CBNZ W8, 0x3D435EC
	0x03D435E8 BL 0x1C16DFC
	0x03D435EC FSUB S0, S13, S11
	0x03D435F0 FSUB S1, S12, S10
	0x03D435F4 FMUL S2, S0, S0
	0x03D435F8 FMUL S3, S1, S1
	0x03D435FC FADD S2, S2, S3
	0x03D43600 FADD S2, S2, S9
	0x03D43604 FSQRT S2, S2
	0x03D43608 FCMP S2, S8
	0x03D4360C B.LE 0x3D4361C
	0x03D43610 FDIV S0, S0, S2
	0x03D43614 FDIV S1, S1, S2
	0x03D43618 B 0x3D43654
	0x03D4361C ADRP X8, 0x695000
	0x03D43620 LDRB W8, [X8 + 0x783]
	0x03D43624 CBNZ W8, 0x3D43640
	0x03D43628 ADRP X0, 0x3B0000
	0x03D4362C LDR X0, [X0 + 0x5A0]
	0x03D43630 BL 0x1C16CF4
	0x03D43634 MOVZ W8, 0x1
	0x03D43638 ADRP X9, 0x695000
	0x03D4363C STRB W8, [X9 + 0x783]
	0x03D43640 ADRP X8, 0x3B0000
	0x03D43644 LDR X8, [X8 + 0x5A0]
	0x03D43648 LDR X8, [X8]
	0x03D4364C LDR X8, [X8 + 0xB8]
	0x03D43650 LDP S0, S1, [X8]
	0x03D43654 LDR W8, [X19 + 0x18]
	0x03D43658 FMUL S1, S14, S1
	0x03D4365C FMUL S0, S15, S0
	0x03D43660 FSUB S0, S1, S0
	0x03D43664 FCMP S0, 0x0
	0x03D43668 B.GE 0x3D436A8
	0x03D4366C CMP W27, W8
	0x03D43670 B.CS 0x3D43738
	0x03D43674 CBZ X21, 0x3D4373C
	0x03D43678 LDR W9, [X21 + 0x18]
	0x03D4367C CMP W27, W9
	0x03D43680 B.CS 0x3D43738
	0x03D43684 LDRH W10, [X29]
	0x03D43688 ADD X11, X21, X27, 0x1, LSL
	0x03D4368C CMP W26, W8
	0x03D43690 STRH W10, [X11 + 0x20]
	0x03D43694 B.CS 0x3D43738
	0x03D43698 CMP W26, W9
	0x03D4369C B.CS 0x3D43738
	0x03D436A0 LDRH W10, [X23]
	0x03D436A4 B 0x3D436D8
	0x03D436A8 CMP W26, W8
	0x03D436AC B.CS 0x3D43738
	0x03D436B0 CBZ X21, 0x3D4373C
	0x03D436B4 LDR W9, [X21 + 0x18]
	0x03D436B8 CMP W27, W9
	0x03D436BC B.CS 0x3D43738
	0x03D436C0 LDRH W10, [X23]
	0x03D436C4 ADD X11, X21, X27, 0x1, LSL
	0x03D436C8 CMP W26, W9
	0x03D436CC STRH W10, [X11 + 0x20]
	0x03D436D0 B.CS 0x3D43738
	0x03D436D4 LDRH W10, [X29]
	0x03D436D8 ADD X11, X21, X26, 0x1, LSL
	0x03D436DC CMP W28, W8
	0x03D436E0 STRH W10, [X11 + 0x20]
	0x03D436E4 B.CS 0x3D43738
	0x03D436E8 CMP W28, W9
	0x03D436EC B.CS 0x3D43738
	0x03D436F0 LDRH W10, [X25]
	0x03D436F4 ADD W9, W27, 0x3
	0x03D436F8 ADD X11, X21, X28, 0x1, LSL
	0x03D436FC CMP W9, W8
	0x03D43700 STRH W10, [X11 + 0x20]
	0x03D43704 B.LT 0x3D434B4
	0x03D43708 MOV X0, X21
	0x03D4370C LDP X20, X19, [X31 + 0x90]
	0x03D43710 LDP X22, X21, [X31 + 0x80]
	0x03D43714 LDP X24, X23, [X31 + 0x70]
	0x03D43718 LDP X26, X25, [X31 + 0x60]
	0x03D4371C LDP X28, X27, [X31 + 0x50]
	0x03D43720 LDP X29, X30, [X31 + 0x40]
	0x03D43724 LDP D9, D8, [X31 + 0x30]
	0x03D43728 LDP D11, D10, [X31 + 0x20]
	0x03D4372C LDP D13, D12, [X31 + 0x10]
	0x03D43730 LDP D15, D14, [X31], #0xA0
	0x03D43734 RET
	0x03D43738 BL 0x1C16F28
	0x03D4373C BL 0x1C16F20
	0x03D43740 SUB X31, X31, 0x190
	0x03D43744 STP D15, D14, [X31 + 0xF0]
	0x03D43748 STP D13, D12, [X31 + 0x100]
	0x03D4374C STP D11, D10, [X31 + 0x110]
	0x03D43750 STP D9, D8, [X31 + 0x120]
	0x03D43754 STP X29, X30, [X31 + 0x130]
	0x03D43758 STP X28, X27, [X31 + 0x140]
	0x03D4375C STP X26, X25, [X31 + 0x150]
	0x03D43760 STP X24, X23, [X31 + 0x160]
	0x03D43764 STP X22, X21, [X31 + 0x170]
	0x03D43768 STP X20, X19, [X31 + 0x180]
	0x03D4376C ADRP X27, 0x6A4000

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+240], X29
	003 Move [X31+256], X30
	004 Move [X31+264], X21
	005 Move [X31+272], X20
	006 Move [X31+280], X19
	007 Move X20, 0x6A5000
	008 Move W8, [X20+2947]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x3B1000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x423000
	018 Move X0, [X0+488]
	019 Call 0x1C17CF4
	020 Move X0, 0x3DB000
	021 Move X0, [X0+576]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2947], W8
	025 Move X20, [X19+272]
	026 Compare X20, 0
	027 JumpIfEqual {162}
	028 Move W8, [X20+240]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, [X19+16]
	032 Compare X0, 0
	033 JumpIfEqual {162}
	034 Move X1, X31
	035 Call RenderChain.AllocCommand, X0
	036 Compare X0, 0
	037 JumpIfEqual {162}
	038 Move W8, 5
	039 Move [X0+52], W8
	040 Move X8, [X19+272]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X0+24], X8
	043 Move X8, [X19+24]
	044 Move [X31+32], V0
	045 Move [X31+40], V0
	046 Move [X31+4], V0
	047 Move [X31+16], X31
	048 Move [X31+24], X31
	049 Move [X31+8], X31
	050 Compare X8, 0
	051 JumpIfEqual {162}
	052 Move V0, [X31+32]
	053 Move V1, [X31+48]
	054 Move V2, [X31+4]
	055 Add X9, X31, 112
	056 Move X10, [X31+24]
	057 Move [X31+112], V0
	058 Move [X31+120], V1
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move [X9+2], V2
	061 Move X11, 0x423000
	062 Move X11, [X11+488]
	063 Move [X31+5], V0
	064 Move [X31+96], X10
	065 Move W13, [X8+28]
	066 Move X10, [X8+16]
	067 Move X12, [X11]
	068 Add W11, W13, 1
	069 Move [X8+28], W11
	070 Compare X10, 0
	071 JumpIfEqual {162}
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 Move W13, [X10+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add W12, W11, 1
	076 Move [X8+24], W12
	077 Move V0, [X9+2]
	078 Move V1, [X31+112]
	079 Move V2, [X31+128]
	080 Move W13, 80
	081 NotImplemented "Instruction MADD not yet implemented."
	082 Move [X8+80], X0
	083 Move [X8+48], V2
	084 Move [X8+56], V0
	085 Move [X8+2], V1
	086 Move X9, [X31+96]
	087 Move V0, [X31+5]
	088 Move [X8+104], X9
	089 Move [X8+88], V0
	090 Move W21, [X19+184]
	091 Move W8, [X19+188]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add W20, W8, 1
	094 Move [X19+188], W20
	095 Move X8, 0x3B1000
	096 Move X8, [X8+2600]
	097 Move X0, [X8]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction CSET not yet implemented."
	104 Move X1, X31
	105 Call Debug.Assert, X0
	106 Move W8, [X19+188]
	107 Move X20, [X19+272]
	108 Move [X19+180], W8
	109 Move X8, 0x3DB000
	110 Move X8, [X8+576]
	111 Move X0, [X8]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X0, X20
	117 Move X1, X31
	118 Call UIRUtility.IsVectorImageBackground, X0
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {125}
	123 Move X0, X19
	124 Call UIRStylePainter.GenerateStencilClipEntryForSVGBackground, X0
	125 Move X0, X19
	126 Call UIRStylePainter.GenerateStencilClipEntryForRoundedRectBackground, X0
	127 Move W8, [X19+184]
	128 Add W8, W8, 1
	129 Move [X19+184], W8
	130 Move X10, [X12+32]
	131 Move V0, [X31+112]
	132 Move V1, [X31+128]
	133 Move V2, [X9+2]
	134 Move V3, [X31+5]
	135 Move X10, [X10+192]
	136 Move X11, [X31+96]
	137 Add X1, X31, 160
	138 Move X2, [X10+112]
	139 Move [X9+48], V0
	140 Move [X9+56], V1
	141 Move [X9+5], V2
	142 Move [X31+208], X0
	143 Move X0, X8
	144 Move [X9+104], V3
	145 Move [X31+232], X11
	146 Call List`1<Entry>.AddWithResize, X0, X1
	147 Move W8, 1
	148 Move [X19+130], W8
	149 Move [X19+128], W8
	150 Move X20, [X19+272]
	151 Compare X20, 0
	152 JumpIfEqual {162}
	153 Move X8, [X20+352]
	154 Move X30, [X31+256]
	155 Move X21, [X31+264]
	156 Move X29, [X31+240]
	157 Move [X19+192], X8
	158 Move X20, [X31+272]
	159 Move X19, [X31+280]
	160 Add X31, X31, 288
	161 Return 
	162 Call 0x1C17F20

Method: System.UInt16[] AdjustSpriteWinding(UnityEngine.Vector2[] vertices, System.UInt16[] indices)

Disassembly:
	0x03D44420 BL 0x266DB34
	0x03D44424 MOV X19, X0
	0x03D44428 ADD X8, X31, 0x80
	0x03D4442C MOV X0, X31
	0x03D44430 BL 0x3CE9C9C
	0x03D44434 LDR W8, [X31 + 0x90]
	0x03D44438 LDR V0, [X31 + 0x8]
	0x03D4443C STR W8, [X31 + 0x70]
	0x03D44440 STR V0, [X31 + 0x6]
	0x03D44444 STR W8, [X19 + 0x60]
	0x03D44448 STR V0, [X19 + 0x5]
	0x03D4444C LDR X8, [X21]
	0x03D44450 LDR X1, [X20]
	0x03D44454 LDR X8, [X8 + 0xB8]
	0x03D44458 ADD X0, X8, 0x28
	0x03D4445C BL 0x266DB34
	0x03D44460 STUR X31, [X0 + 0x6C]
	0x03D44464 STUR X31, [X0 + 0x64]
	0x03D44468 LDR X8, [X21]
	0x03D4446C LDR X1, [X20]
	0x03D44470 LDR X8, [X8 + 0xB8]
	0x03D44474 ADD X0, X8, 0x28
	0x03D44478 BL 0x266DB34
	0x03D4447C MOV X19, X0
	0x03D44480 FMOV S0, W31
	0x03D44484 MOV X0, X31
	0x03D44488 BL 0x3DFD518
	0x03D4448C STUR X0, [X19 + 0x74]
	0x03D44490 LDR X8, [X21]
	0x03D44494 LDR X1, [X20]
	0x03D44498 LDR X8, [X8 + 0xB8]
	0x03D4449C ADD X0, X8, 0x28
	0x03D444A0 BL 0x266DB34
	0x03D444A4 MOV X19, X0
	0x03D444A8 FMOV S0, W31
	0x03D444AC MOV X0, X31
	0x03D444B0 BL 0x3DFD518
	0x03D444B4 STUR X0, [X19 + 0x7C]
	0x03D444B8 LDR X8, [X21]
	0x03D444BC LDR X1, [X23]
	0x03D444C0 LDR X8, [X8 + 0xB8]
	0x03D444C4 ADD X0, X8, 0x8
	0x03D444C8 BL 0x266C93C
	0x03D444CC STR W31, [X0 + 0xC]
	0x03D444D0 LDR X8, [X21]
	0x03D444D4 LDR X1, [X20]
	0x03D444D8 LDR X8, [X8 + 0xB8]
	0x03D444DC ADD X0, X8, 0x28
	0x03D444E0 BL 0x266DB34
	0x03D444E4 STUR X31, [X0 + 0x8C]
	0x03D444E8 STUR X31, [X0 + 0x84]
	0x03D444EC LDR X8, [X21]
	0x03D444F0 LDR X1, [X23]
	0x03D444F4 LDR X8, [X8 + 0xB8]
	0x03D444F8 ADD X0, X8, 0x8
	0x03D444FC BL 0x266C93C
	0x03D44500 STR W31, [X0 + 0x10]
	0x03D44504 LDR X8, [X21]
	0x03D44508 LDR X1, [X20]
	0x03D4450C LDR X8, [X8 + 0xB8]
	0x03D44510 ADD X0, X8, 0x28
	0x03D44514 BL 0x266DB34
	0x03D44518 STUR X31, [X0 + 0x9C]
	0x03D4451C STUR X31, [X0 + 0x94]
	0x03D44520 LDR X8, [X21]
	0x03D44524 LDR X1, [X23]
	0x03D44528 LDR X8, [X8 + 0xB8]
	0x03D4452C ADD X0, X8, 0x8
	0x03D44530 BL 0x266C93C
	0x03D44534 STR W31, [X0 + 0x14]
	0x03D44538 LDR X8, [X21]
	0x03D4453C LDR X1, [X20]
	0x03D44540 LDR X8, [X8 + 0xB8]
	0x03D44544 ADD X0, X8, 0x28
	0x03D44548 BL 0x266DB34
	0x03D4454C STUR X31, [X0 + 0xAC]
	0x03D44550 STUR X31, [X0 + 0xA4]
	0x03D44554 LDR X8, [X21]
	0x03D44558 LDR X1, [X20]
	0x03D4455C LDR X8, [X8 + 0xB8]
	0x03D44560 ADD X0, X8, 0x28
	0x03D44564 BL 0x266DB34
	0x03D44568 MOV X19, X0
	0x03D4456C FMOV S0, W31
	0x03D44570 MOV X0, X31
	0x03D44574 BL 0x3DFD518
	0x03D44578 STUR X0, [X19 + 0xB4]
	0x03D4457C LDR X8, [X21]
	0x03D44580 LDR X1, [X20]
	0x03D44584 LDR X8, [X8 + 0xB8]
	0x03D44588 ADD X0, X8, 0x28
	0x03D4458C BL 0x266DB34
	0x03D44590 MOV X19, X0
	0x03D44594 FMOV S0, W31
	0x03D44598 MOV X0, X31
	0x03D4459C BL 0x3DFD518
	0x03D445A0 STUR X0, [X19 + 0xBC]
	0x03D445A4 LDR X8, [X21]
	0x03D445A8 LDR X1, [X23]
	0x03D445AC LDR X8, [X8 + 0xB8]
	0x03D445B0 ADD X0, X8, 0x8
	0x03D445B4 BL 0x266C93C
	0x03D445B8 STR W31, [X0 + 0x18]
	0x03D445BC LDR X8, [X21]
	0x03D445C0 LDR X1, [X23]
	0x03D445C4 LDR X8, [X8 + 0xB8]
	0x03D445C8 ADD X0, X8, 0x8
	0x03D445CC BL 0x266C93C
	0x03D445D0 MOV X19, X0
	0x03D445D4 MOVZ W0, 0x2
	0x03D445D8 MOV X1, X31
	0x03D445DC BL 0x3E0007C
	0x03D445E0 STUR X0, [X19 + 0x1C]
	0x03D445E4 LDR X8, [X21]
	0x03D445E8 LDR X1, [X22]
	0x03D445EC LDR X0, [X8 + 0xB8]
	0x03D445F0 BL 0x266C4BC
	0x03D445F4 ADRP X8, 0xFFFFFFFFFCDA8000
	0x03D445F8 LDR V0, [X8 + 0xBB]
	0x03D445FC STR V0, [X0]
	0x03D44600 LDR X8, [X21]
	0x03D44604 LDR X1, [X24]
	0x03D44608 LDR X8, [X8 + 0xB8]
	0x03D4460C ADD X0, X8, 0x10
	0x03D44610 BL 0x266CDBC
	0x03D44614 STP X31, X31, [X0 + 0x8]
	0x03D44618 STR X31, [X0]
	0x03D4461C LDR X8, [X21]
	0x03D44620 LDR X1, [X23]
	0x03D44624 LDR X8, [X8 + 0xB8]
	0x03D44628 ADD X0, X8, 0x8
	0x03D4462C BL 0x266C93C
	0x03D44630 STR W31, [X0 + 0x24]
	0x03D44634 LDR X8, [X21]
	0x03D44638 LDR X1, [X23]
	0x03D4463C LDR X8, [X8 + 0xB8]
	0x03D44640 ADD X0, X8, 0x8
	0x03D44644 BL 0x266C93C
	0x03D44648 MOV X19, X0
	0x03D4464C MOVZ W0, 0x2
	0x03D44650 MOV X1, X31
	0x03D44654 BL 0x3E0007C
	0x03D44658 STR X0, [X19 + 0x28]
	0x03D4465C LDR X8, [X21]
	0x03D44660 LDR X1, [X23]
	0x03D44664 LDR X8, [X8 + 0xB8]
	0x03D44668 ADD X0, X8, 0x8
	0x03D4466C BL 0x266C93C
	0x03D44670 STR W31, [X0 + 0x30]
	0x03D44674 LDR X8, [X21]
	0x03D44678 LDR X1, [X23]
	0x03D4467C LDR X8, [X8 + 0xB8]
	0x03D44680 ADD X0, X8, 0x8
	0x03D44684 BL 0x266C93C
	0x03D44688 STR W31, [X0 + 0x34]
	0x03D4468C LDR X8, [X21]
	0x03D44690 LDR X1, [X23]
	0x03D44694 LDR X8, [X8 + 0xB8]
	0x03D44698 ADD X0, X8, 0x8
	0x03D4469C BL 0x266C93C
	0x03D446A0 MOVZ W29, 0x3F800000
	0x03D446A4 STR W29, [X0 + 0x38]
	0x03D446A8 LDR X8, [X21]
	0x03D446AC LDR X1, [X23]
	0x03D446B0 LDR X8, [X8 + 0xB8]
	0x03D446B4 ADD X0, X8, 0x8
	0x03D446B8 BL 0x266C93C
	0x03D446BC STR W31, [X0 + 0x3C]
	0x03D446C0 LDR X8, [X21]
	0x03D446C4 LDR X1, [X22]
	0x03D446C8 LDR X0, [X8 + 0xB8]
	0x03D446CC BL 0x266C4BC
	0x03D446D0 MOV X19, X0
	0x03D446D4 FMOV S0, W31
	0x03D446D8 MOV X0, X31
	0x03D446DC BL 0x3DFD518
	0x03D446E0 STR X0, [X19 + 0x10]
	0x03D446E4 LDR X8, [X21]
	0x03D446E8 LDR X1, [X23]
	0x03D446EC LDR X8, [X8 + 0xB8]
	0x03D446F0 ADD X0, X8, 0x8
	0x03D446F4 BL 0x266C93C
	0x03D446F8 MOV X19, X0
	0x03D446FC MOVZ W0, 0x2
	0x03D44700 MOV X1, X31
	0x03D44704 BL 0x3E0007C
	0x03D44708 STR X0, [X19 + 0x40]
	0x03D4470C LDR X8, [X21]
	0x03D44710 LDR X1, [X23]
	0x03D44714 LDR X8, [X8 + 0xB8]
	0x03D44718 ADD X0, X8, 0x8
	0x03D4471C BL 0x266C93C
	0x03D44720 STR W31, [X0 + 0x48]
	0x03D44724 LDR X8, [X21]
	0x03D44728 LDR X1, [X23]
	0x03D4472C LDR X8, [X8 + 0xB8]
	0x03D44730 ADD X0, X8, 0x8
	0x03D44734 BL 0x266C93C
	0x03D44738 MOV X19, X0
	0x03D4473C MOVZ W0, 0x2

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Move X21, 0x6A4000
	022 Move W8, [X21+2948]
	023 Move X19, X2
	024 Move X20, X1
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0x3E0000
	030 Move X0, [X0+2256]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+2948], W8
	034 Compare X19, 0
	035 JumpIfEqual {215}
	036 Move X8, 0x3E0000
	037 Move X8, [X8+2256]
	038 Move W1, [X19+24]
	039 Move X0, [X8]
	040 Call 0x1C17D6C
	041 Move W8, [X19+24]
	042 Move X21, X0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X22, 0x3B0000
	045 Move X10, -52793344
	046 Move X22, [X22+1448]
	047 Move V8, [X10+380]
	048 Move W9, W31
	049 Move X24, 0x695000
	050 Move S9, W31
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Compare X20, 0
	053 JumpIfEqual {215}
	054 Move X27, W9
	055 Add X9, X19, X27
	056 Add X29, X9, 32
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Move W9, [X20+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add W11, W27, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X26, W11
	063 Add X10, X20, X10
	064 Add X23, X19, X26
	065 Move S11, [X10+32]
	066 Move S10, [X10+36]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add W11, W27, 2
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X28, W11
	072 Add X8, X20, X10
	073 Add X25, X19, X28
	074 Move S15, [X8+32]
	075 Move S14, [X8+36]
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add X8, X20, X8
	079 Move W9, [X24+1925]
	080 Move S13, [X8+32]
	081 Move S12, [X8+36]
	082 Compare W9, 0
	083 JumpIfNotEqual {88}
	084 Move X0, X22
	085 Call 0x1C17CF4
	086 Move W8, 1
	087 Move [X24+1925], W8
	088 Move X0, [X22]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Subtract S0, S15, S11
	094 Subtract S1, S14, S10
	095 Multiply S2, S0, S0
	096 Multiply S3, S1, S1
	097 Add S2, S2, S3
	098 Add S2, S2, S9
	099 NotImplemented "Instruction FSQRT not yet implemented."
	100 NotImplemented "Instruction FCMP not yet implemented."
	101 NotImplemented "Instruction FDIV not yet implemented."
	102 NotImplemented "Instruction FDIV not yet implemented."
	103 Move X8, 0x695000
	104 Move W8, [X8+1923]
	105 Compare W8, 0
	106 JumpIfNotEqual {113}
	107 Move X0, 0x3B0000
	108 Move X0, [X0+1440]
	109 Call 0x1C17CF4
	110 Move W8, 1
	111 Move X9, 0x695000
	112 Move [X9+1923], W8
	113 Move X8, 0x3B0000
	114 Move X8, [X8+1440]
	115 Move X8, [X8]
	116 Move X8, [X8+184]
	117 Move S14, [X8]
	118 Move S15, [X8+4]
	119 Move W8, [X24+1925]
	120 Compare W8, 0
	121 JumpIfNotEqual {126}
	122 Move X0, X22
	123 Call 0x1C17CF4
	124 Move W8, 1
	125 Move [X24+1925], W8
	126 Move X0, [X22]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Subtract S0, S13, S11
	132 Subtract S1, S12, S10
	133 Multiply S2, S0, S0
	134 Multiply S3, S1, S1
	135 Add S2, S2, S3
	136 Add S2, S2, S9
	137 NotImplemented "Instruction FSQRT not yet implemented."
	138 NotImplemented "Instruction FCMP not yet implemented."
	139 NotImplemented "Instruction FDIV not yet implemented."
	140 NotImplemented "Instruction FDIV not yet implemented."
	141 Move X8, 0x695000
	142 Move W8, [X8+1923]
	143 Compare W8, 0
	144 JumpIfNotEqual {151}
	145 Move X0, 0x3B0000
	146 Move X0, [X0+1440]
	147 Call 0x1C17CF4
	148 Move W8, 1
	149 Move X9, 0x695000
	150 Move [X9+1923], W8
	151 Move X8, 0x3B0000
	152 Move X8, [X8+1440]
	153 Move X8, [X8]
	154 Move X8, [X8+184]
	155 Move S0, [X8]
	156 Move S1, [X8+4]
	157 Move W8, [X19+24]
	158 Multiply S1, S14, S1
	159 Multiply S0, S15, S0
	160 Subtract S0, S1, S0
	161 NotImplemented "Instruction FCMP not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Compare X21, 0
	164 JumpIfEqual {215}
	165 Move W9, [X21+24]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Add X11, X21, X27
	169 NotImplemented "Instruction CMP not yet implemented."
	170 NotImplemented "Instruction STRH not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Compare X21, 0
	175 JumpIfEqual {215}
	176 Move W9, [X21+24]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Add X11, X21, X27
	180 NotImplemented "Instruction CMP not yet implemented."
	181 NotImplemented "Instruction STRH not yet implemented."
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Add X11, X21, X26
	184 NotImplemented "Instruction CMP not yet implemented."
	185 NotImplemented "Instruction STRH not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Add W9, W27, 3
	189 Add X11, X21, X28
	190 NotImplemented "Instruction CMP not yet implemented."
	191 NotImplemented "Instruction STRH not yet implemented."
	192 Move X0, X21
	193 Move X20, [X31+144]
	194 Move X19, [X31+152]
	195 Move X22, [X31+128]
	196 Move X21, [X31+136]
	197 Move X24, [X31+112]
	198 Move X23, [X31+120]
	199 Move X26, [X31+96]
	200 Move X25, [X31+104]
	201 Move X28, [X31+80]
	202 Move X27, [X31+88]
	203 Move X29, [X31+64]
	204 Move X30, [X31+72]
	205 Move D9, [X31+48]
	206 Move D8, [X31+56]
	207 Move D11, [X31+32]
	208 Move D10, [X31+40]
	209 Move D13, [X31+16]
	210 Move D12, [X31+24]
	211 Move D15, [X31+160]
	212 Move D14, [X31+168]
	213 Return X0
	214 Call 0x1C17F28
	215 Call 0x1C17F20

Method: System.Void DrawSprite(UnityEngine.UIElements.MeshGenerationContextUtils/RectangleParams rectParams)

Disassembly:
	0x03D3FD04 SCVTF S0, W20
	0x03D3FD08 SCVTF S1, W0
	0x03D3FD0C STR X31, [X31 + 0x5E0]
	0x03D3FD10 STR S0, [X31 + 0x5E8]
	0x03D3FD14 STR S1, [X31 + 0x5EC]
	0x03D3FD18 B 0x3D3FFAC
	0x03D3FD1C ADD X0, X31, 0x940
	0x03D3FD20 MOV X1, X31
	0x03D3FD24 BL 0x3DE0F4C
	0x03D3FD28 LDR X8, [X27]
	0x03D3FD2C MOV X20, X0
	0x03D3FD30 LDR W9, [X8 + 0xE0]
	0x03D3FD34 CBNZ W9, 0x3D3FD40
	0x03D3FD38 MOV X0, X8
	0x03D3FD3C BL 0x1C16DFC
	0x03D3FD40 MOV X0, X20
	0x03D3FD44 MOV X1, X31
	0x03D3FD48 MOV X2, X31
	0x03D3FD4C BL 0x3C354F8
	0x03D3FD50 TBZ X0, 0x0, 0x3D3FFAC
	0x03D3FD54 ADD X0, X31, 0xA90
	0x03D3FD58 MOV X1, X31
	0x03D3FD5C BL 0x3DC961C
	0x03D3FD60 MOV X20, X0
	0x03D3FD64 MOV X21, X1
	0x03D3FD68 ADD X0, X31, 0xA90
	0x03D3FD6C MOV X1, X31
	0x03D3FD70 BL 0x3DC9674
	0x03D3FD74 MOV X22, X0
	0x03D3FD78 MOV X23, X1
	0x03D3FD7C ADD X0, X31, 0xA90
	0x03D3FD80 MOV X1, X31
	0x03D3FD84 BL 0x3DC96CC
	0x03D3FD88 MOV X24, X0
	0x03D3FD8C ADD X8, X31, 0x398
	0x03D3FD90 ADD X0, X31, 0xA90
	0x03D3FD94 MOV X1, X31
	0x03D3FD98 BL 0x3DC971C
	0x03D3FD9C LDR V0, [X26]
	0x03D3FDA0 LDR W8, [X31 + 0x3A8]
	0x03D3FDA4 AND X1, X21, 0x0
	0x03D3FDA8 AND X3, X23, 0x0
	0x03D3FDAC ADD X5, X31, 0x360
	0x03D3FDB0 ADD X6, X31, 0x5D8
	0x03D3FDB4 MOV X0, X20
	0x03D3FDB8 MOV X2, X22
	0x03D3FDBC MOV X4, X24
	0x03D3FDC0 MOV X7, X31
	0x03D3FDC4 STR V0, [X31 + 0x36]
	0x03D3FDC8 STR W8, [X31 + 0x370]
	0x03D3FDCC BL 0x3CE9668
	0x03D3FDD0 LDR X8, [X25]
	0x03D3FDD4 CBZ X8, 0x3D405AC
	0x03D3FDD8 LDRB W22, [X31 + 0x5D8]
	0x03D3FDDC MOV W21, W0
	0x03D3FDE0 MOV X0, X8
	0x03D3FDE4 MOV X1, X31
	0x03D3FDE8 BL 0x3DED76C
	0x03D3FDEC ADD X0, X31, 0x940
	0x03D3FDF0 MOV X1, X31
	0x03D3FDF4 MOV V9.16B, V0.16B
	0x03D3FDF8 MOV V10.16B, V1.16B
	0x03D3FDFC MOV V11.16B, V2.16B
	0x03D3FE00 MOV V12.16B, V3.16B
	0x03D3FE04 BL 0x3DE0F4C
	0x03D3FE08 MOV X20, X0
	0x03D3FE0C LDR X0, [X25]
	0x03D3FE10 CMP W22, 0x0
	0x03D3FE14 CCMP W21, 0x1, 0x4, NE
	0x03D3FE18 CSEL W21, W21, W31, NE
	0x03D3FE1C CBZ X0, 0x3D405AC
	0x03D3FE20 MOV X1, X31
	0x03D3FE24 BL 0x3DEC0CC
	0x03D3FE28 CBZ X0, 0x3D405AC
	0x03D3FE2C ADRP X10, 0x3DD000
	0x03D3FE30 LDR X8, [X0]
	0x03D3FE34 LDR X10, [X10 + 0xE80]
	0x03D3FE38 MOV X22, X0
	0x03D3FE3C LDRH W9, [X8 + 0x12E]
	0x03D3FE40 LDR X1, [X10]
	0x03D3FE44 CBZ X9, 0x3D3FE68
	0x03D3FE48 LDR X10, [X8 + 0xB0]
	0x03D3FE4C ADD X10, X10, 0x8
	0x03D3FE50 LDUR X11, [X10 - 0x8]
	0x03D3FE54 CMP X11, X1
	0x03D3FE58 B.EQ 0x3D40530
	0x03D3FE5C SUBS X9, X9, 0x1
	0x03D3FE60 ADD X10, X10, 0x10
	0x03D3FE64 B.NE 0x3D3FE50
	0x03D3FE68 MOVZ W2, 0x2
	0x03D3FE6C MOV X0, X22
	0x03D3FE70 BL 0x1C5C788
	0x03D3FE74 B 0x3D40540
	0x03D3FE78 LDR W9, [X10]
	0x03D3FE7C ADD W9, W9, 0x2
	0x03D3FE80 ADD X8, X8, W9, 0x4, SXTW
	0x03D3FE84 ADD X0, X8, 0x138
	0x03D3FE88 LDP X8, X1, [X0]
	0x03D3FE8C MOV X0, X23
	0x03D3FE90 BLR X8
	0x03D3FE94 ADRP X8, 0xFFFFFFFFFCDAB000
	0x03D3FE98 LDR V0, [X8 + 0x410]
	0x03D3FE9C MOV W23, W0
	0x03D3FEA0 ADD X0, X31, 0x960
	0x03D3FEA4 MOV X1, X31
	0x03D3FEA8 BL 0x3DC5B2C
	0x03D3FEAC AND W3, W0, 0x1
	0x03D3FEB0 ADD X8, X31, 0x398
	0x03D3FEB4 FMOV S4, W31
	0x03D3FEB8 FMOV S5, W31
	0x03D3FEBC FMOV S6, 1
	0x03D3FEC0 FMOV S7, 1
	0x03D3FEC4 ADD X4, X31, 0xA80
	0x03D3FEC8 MOV V0.16B, V9.16B
	0x03D3FECC MOV V1.16B, V10.16B
	0x03D3FED0 MOV V2.16B, V11.16B
	0x03D3FED4 MOV V3.16B, V12.16B
	0x03D3FED8 MOV X0, X21
	0x03D3FEDC MOV W1, W22
	0x03D3FEE0 MOV W2, W23
	0x03D3FEE4 MOV W5, W20
	0x03D3FEE8 MOV X6, X31
	0x03D3FEEC BL 0x3DC4E74
	0x03D3FEF0 ADD X0, X31, 0x5E0
	0x03D3FEF4 ADD X1, X31, 0x398
	0x03D3FEF8 MOVZ W2, 0x120
	0x03D3FEFC BL 0x3EB1AC0
	0x03D3FF00 LDR X0, [X27]
	0x03D3FF04 LDR X20, [X31 + 0x658]
	0x03D3FF08 LDR W8, [X0 + 0xE0]
	0x03D3FF0C CBNZ W8, 0x3D3FF14
	0x03D3FF10 BL 0x1C16DFC
	0x03D3FF14 MOV X0, X20
	0x03D3FF18 MOV X1, X31
	0x03D3FF1C MOV X2, X31
	0x03D3FF20 BL 0x3C354F8
	0x03D3FF24 TBZ X0, 0x0, 0x3D3FF68
	0x03D3FF28 ADD X0, X31, 0x940
	0x03D3FF2C MOV X1, X31
	0x03D3FF30 BL 0x3DE22AC
	0x03D3FF34 CBZ X0, 0x3D405AC
	0x03D3FF38 MOV X1, X31
	0x03D3FF3C BL 0x3C41858
	0x03D3FF40 ADD X0, X31, 0x940
	0x03D3FF44 MOV X1, X31
	0x03D3FF48 MOV V9.16B, V2.16B
	0x03D3FF4C BL 0x3DE22AC
	0x03D3FF50 CBZ X0, 0x3D405AC
	0x03D3FF54 MOV X1, X31
	0x03D3FF58 BL 0x3C41858
	0x03D3FF5C STR X31, [X31 + 0x5E0]
	0x03D3FF60 STR S9, [X31 + 0x5E8]
	0x03D3FF64 STR S3, [X31 + 0x5EC]
	0x03D3FF68 LDR X20, [X25]
	0x03D3FF6C ADD X0, X31, 0x940
	0x03D3FF70 MOV X1, X31
	0x03D3FF74 BL 0x3DE22AC
	0x03D3FF78 ADRP X8, 0x3DD000
	0x03D3FF7C LDR X8, [X8 + 0xE98]
	0x03D3FF80 MOV X21, X0
	0x03D3FF84 LDR X8, [X8]
	0x03D3FF88 LDR W9, [X8 + 0xE0]
	0x03D3FF8C CBNZ W9, 0x3D3FF98
	0x03D3FF90 MOV X0, X8
	0x03D3FF94 BL 0x1C16DFC
	0x03D3FF98 MOV X0, X20
	0x03D3FF9C MOV X1, X21
	0x03D3FFA0 MOV X2, X31
	0x03D3FFA4 BL 0x3E19578
	0x03D3FFA8 FMUL S8, S8, S0
	0x03D3FFAC ADD X8, X31, 0x960
	0x03D3FFB0 ADRP X21, 0x699000
	0x03D3FFB4 LDUR V0, [X8 + 0xAC]
	0x03D3FFB8 LDUR V1, [X8 + 0xBC]
	0x03D3FFBC LDRB W8, [X21 + 0xE5A]
	0x03D3FFC0 LDR V10, [X31 + 0xA80]
	0x03D3FFC4 LDR V9, [X31 + 0xA88]
	0x03D3FFC8 ADD X20, X31, 0x5E0
	0x03D3FFCC STUR V0, [X20 + 0xAC]
	0x03D3FFD0 STUR V1, [X20 + 0xBC]
	0x03D3FFD4 CBNZ W8, 0x3D3FFEC
	0x03D3FFD8 ADRP X0, 0x3BB000
	0x03D3FFDC LDR X0, [X0 + 0x9A0]
	0x03D3FFE0 BL 0x1C16CF4
	0x03D3FFE4 MOVZ W8, 0x1
	0x03D3FFE8 STRB W8, [X21 + 0xE5A]
	0x03D3FFEC ADRP X8, 0x3BB000
	0x03D3FFF0 LDR X8, [X8 + 0x9A0]
	0x03D3FFF4 LDR X8, [X8]
	0x03D3FFF8 LDR X8, [X8 + 0xB8]
	0x03D3FFFC LDP D0, D1, [X8]
	0x03D40000 ADRP X8, 0xFFFFFFFFFCDA9000
	0x03D40004 LDR V2, [X8 + 0xF20]
	0x03D40008 FSUB V0.2S, V10.2S, V0.2S
	0x00000000 INVALID
	0x03D40010 FSUB V1.2S, V9.2S, V1.2S
	0x03D40014 UNIMPLEMENTED
	0x00000000 INVALID
	0x03D4001C FADD V0.2S, V0.2S, V3.2S
	0x03D40020 FADD V0.2S, V1.2S, V0.2S
	0x03D40024 UNIMPLEMENTED
	0x03D40028 FADD V0.2S, V1.2S, V0.2S
	0x03D4002C FCMP S0, S2
	0x03D40030 B.MI 0x3D40324
	0x03D40034 ADRP X21, 0x699000
	0x03D40038 LDRB W8, [X21 + 0x5D7]
	0x03D4003C LDR V10, [X31 + 0xA80]
	0x03D40040 CBNZ W8, 0x3D40058
	0x03D40044 ADRP X0, 0x3B3000
	0x03D40048 LDR X0, [X0 + 0x5A8]
	0x03D4004C BL 0x1C16CF4
	0x03D40050 MOVZ W8, 0x1
	0x03D40054 STRB W8, [X21 + 0x5D7]
	0x03D40058 ADRP X22, 0x3B3000
	0x03D4005C LDR X22, [X22 + 0x5A8]
	0x03D40060 LDR X0, [X22]

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+144], D15
	003 Move [X31+152], D14
	004 Move [X31+160], D13
	005 Move [X31+168], D12
	006 Move [X31+176], D11
	007 Move [X31+184], D10
	008 Move [X31+192], D9
	009 Move [X31+200], D8
	010 Move [X31+208], X29
	011 Move [X31+216], X30
	012 Move [X31+224], X28
	013 Move [X31+232], X27
	014 Move [X31+240], X26
	015 Move [X31+248], X25
	016 Move [X31+256], X24
	017 Move [X31+264], X23
	018 Move [X31+272], X22
	019 Move [X31+280], X21
	020 Move [X31+288], X20
	021 Move [X31+296], X19
	022 Move X21, 0x6A9000
	023 Move W8, [X21+2949]
	024 Move X19, X1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {41}
	030 Move X0, 0x3B5000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move X0, 0x427000
	034 Move X0, [X0+608]
	035 Call 0x1C17CF4
	036 Move X0, 0x427000
	037 Move X0, [X0+616]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+2949], W8
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+112], V0
	043 Move [X31+120], V0
	044 Move [X31+6], V0
	045 Move X22, [X19+128]
	046 Compare X22, 0
	047 JumpIfEqual {274}
	048 Move X21, 0x3B5000
	049 Move X21, [X21+1432]
	050 Move X0, X22
	051 Move X1, X31
	052 Call Sprite.get_texture, X0
	053 Move X8, [X21]
	054 Move X21, X0
	055 Move W9, [X8+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {60}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Move X0, X21
	061 Move X1, X31
	062 Move X2, X31
	063 Call Object.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {251}
	068 Move X0, X22
	069 Move X1, X31
	070 Call Sprite.get_triangles, X0
	071 Compare X0, 0
	072 JumpIfEqual {274}
	073 Move W8, [X0+24]
	074 Compare W8, 0
	075 JumpIfEqual {251}
	076 Move X20, [X20+256]
	077 Move X0, X22
	078 Move X1, X31
	079 Call Sprite.get_texture, X0
	080 Move W8, [X19+280]
	081 Move [X31+96], X20
	082 Move [X31+104], X0
	083 Move X0, X22
	084 Move X1, X31
	085 Move [X31+112], X31
	086 Move [X31+120], X31
	087 Move [X31+140], W31
	088 Move [X31+132], X31
	089 Move [X31+128], W8
	090 Call Sprite.get_vertices, X0
	091 Move X20, X0
	092 Move X0, X22
	093 Move X1, X31
	094 Call Sprite.get_triangles, X0
	095 Move X23, X0
	096 Move X0, X22
	097 Move X1, X31
	098 Call Sprite.get_uv, X0
	099 Move X21, X0
	100 Move X0, X22
	101 Move X1, X31
	102 Call Sprite.get_vertices, X0
	103 Compare X0, 0
	104 JumpIfEqual {274}
	105 Move X8, 0x427000
	106 Move X25, [X0+24]
	107 Move X8, [X8+608]
	108 Move W1, W25
	109 Move X0, [X8]
	110 Call 0x1C17D6C
	111 Move X1, X20
	112 Move X2, X23
	113 Move X22, X0
	114 Call UIRStylePainter.AdjustSpriteWinding, X0, X1, X2
	115 Compare X22, 0
	116 JumpIfEqual {274}
	117 Compare X0, 0
	118 JumpIfEqual {274}
	119 Move W1, [X22+24]
	120 Move W2, [X0+24]
	121 Move [X31+16], X0
	122 Add X0, X31, 96
	123 Move X3, X31
	124 Move [X31+40], X20
	125 Call AllocMeshData.Allocate, X0, X1, X2
	126 Compare X0, 0
	127 JumpIfEqual {274}
	128 Move X1, X31
	129 Move [X31+8], X0
	130 Call MeshWriteData.get_uvRegion, X0
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move [X31+32], S1
	133 Move [X31+40], S0
	134 Move [X31+24], S3
	135 Move [X31+32], S2
	136 Move X11, [X31+40]
	137 Compare X11, 0
	138 JumpIfEqual {274}
	139 Move W9, [X19+276]
	140 Move W10, [X19+272]
	141 And X8, X25, 0
	142 Move X29, X8
	143 ShiftRight X29, 58
	144 And X29, X29, 0x1FFFFFF
	145 Move W8, W9
	146 ShiftRight W8, 24
	147 And W8, W8, 0x7FFFFF
	148 Move X26, X31
	149 Move X27, X31
	150 Add X25, X21, 36
	151 Add X28, X11, 36
	152 Move W23, W10
	153 ShiftRight W23, 8
	154 And W23, W23, 0
	155 Move W24, W9
	156 ShiftRight W24, 16
	157 And W24, W24, 0x7FFF
	158 And W20, W8, 0xFF000000
	159 Move X8, [X31+40]
	160 Move W8, [X8+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Compare X21, 0
	163 JumpIfEqual {274}
	164 Move W8, [X21+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move V1, [X19+248]
	167 Move V0, [X19+252]
	168 Move X8, 0x427000
	169 Move S11, [X28-4]
	170 Move S13, [X28]
	171 Move S15, [X19+240]
	172 Move S12, [X19+244]
	173 Move [X31+56], S0
	174 Move [X31+64], S1
	175 Move S9, [X19+4]
	176 Move S1, [X19+8]
	177 Move V0, [X19+12]
	178 Move X0, X31
	179 Move [X31+64], S1
	180 Move [X31+72], S0
	181 Move X8, [X8+616]
	182 Move V0, [X19]
	183 Move S2, [X19+40]
	184 Move S3, [X19+44]
	185 Move S14, [X25-4]
	186 Move S8, [X25]
	187 Move X8, [X8]
	188 Move [X31+52], S0
	189 Move S0, [X19+32]
	190 Move S1, [X19+36]
	191 Move X8, [X8+184]
	192 Move V10, [X8]
	193 Call 0x1E44664
	194 Move [X31+80], X31
	195 Move [X31+88], X31
	196 Move [X31+72], X31
	197 Move W8, [X22+24]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move V4, [X31+60]
	200 Subtract S0, S11, S15
	201 Subtract S1, S13, S12
	202 Move S2, [X31+24]
	203 Move S3, [X31+28]
	204 NotImplemented "Instruction FDIV not yet implemented."
	205 Move V4, [X31+56]
	206 Add X8, X22, X26
	207 Multiply S2, S2, S8
	208 Multiply S3, S3, S14
	209 NotImplemented "Instruction FDIV not yet implemented."
	210 Move V4, [X31+32]
	211 Move [X8+44], W0
	212 Move [X8+56], W31
	213 Move [X8+60], W20
	214 Move [X8+64], W23
	215 Move [X8+68], W24
	216 Add S2, S4, S2
	217 Move V4, [X31+36]
	218 Add X26, X26, 64
	219 Add X27, X27, 1
	220 Add X25, X25, 8
	221 Add S3, S4, S3
	222 Move [X8+48], S3
	223 Move [X8+56], S2
	224 Move V2, [X31+68]
	225 Move S4, 1
	226 Subtract S1, S4, S1
	227 Move V4, [X31+64]
	228 Multiply S1, S1, S2
	229 Move V2, [X31+52]
	230 Add S1, S1, S9
	231 Multiply S0, S0, S4
	232 Move [X8+36], S1
	233 Move [X8+44], S10
	234 Add S0, S0, S2
	235 Move [X8+32], S0
	236 Move X9, [X31+88]
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Add X28, X28, 8
	240 Move [X8+88], X9
	241 Move [X8+72], V0
	242 Move X19, [X31+8]
	243 Move X1, X22
	244 Move X2, X31
	245 Move X0, X19
	246 Call MeshWriteData.SetAllVertices, X0, X1
	247 Move X1, [X31+16]
	248 Move X0, X19
	249 Move X2, X31
	250 Call MeshWriteData.SetAllIndices, X0, X1
	251 Move X20, [X31+288]
	252 Move X19, [X31+296]
	253 Move X22, [X31+272]
	254 Move X21, [X31+280]
	255 Move X24, [X31+256]
	256 Move X23, [X31+264]
	257 Move X26, [X31+240]
	258 Move X25, [X31+248]
	259 Move X28, [X31+224]
	260 Move X27, [X31+232]
	261 Move X29, [X31+208]
	262 Move X30, [X31+216]
	263 Move D9, [X31+192]
	264 Move D8, [X31+200]
	265 Move D11, [X31+176]
	266 Move D10, [X31+184]
	267 Move D13, [X31+160]
	268 Move D12, [X31+168]
	269 Move D15, [X31+144]
	270 Move D14, [X31+152]
	271 Add X31, X31, 304
	272 Return 
	273 Call 0x1C17F28
	274 Call 0x1C17F20

Method: System.Void ApplyInset(ref UnityEngine.UIElements.MeshBuilderNative/NativeRectParams rectParams, UnityEngine.Texture tex)

Disassembly:
	0x03D40064 LDR W8, [X0 + 0xE0]
	0x03D40068 CBNZ W8, 0x3D40070
	0x03D4006C BL 0x1C16DFC
	0x03D40070 FCVT S9, S10
	0x03D40074 ADD X0, X31, 0x398
	0x03D40078 MOV V0.16B, V9.16B
	0x03D4007C BL 0x3EB1C00
	0x03D40080 FCMP S10, 0x0
	0x03D40084 B.GE 0x3D400A0
	0x03D40088 FMOV D1, -0.5
	0x03D4008C FCMP D0, D1
	0x03D40090 B.NE 0x3D400C8
	0x03D40094 LDR V0, [X31 + 0x398]
	0x03D40098 FMOV D1, -1
	0x03D4009C B 0x3D400B4
	0x03D400A0 FMOV D1, 0.5
	0x03D400A4 FCMP D0, D1
	0x03D400A8 B.NE 0x3D400D4
	0x03D400AC LDR V0, [X31 + 0x398]
	0x03D400B0 FMOV D1, 1
	0x03D400B4 FCVTZS X8, D0
	0x03D400B8 FADD D1, D0, D1
	0x03D400BC ANDS X31, X8, 0x1
	0x03D400C0 FCSEL D0, D0, D1, EQ
	0x03D400C4 B 0x3D400DC
	0x03D400C8 FADD D0, D9, D1
	0x03D400CC FRINTP D0, D0
	0x03D400D0 B 0x3D400DC
	0x03D400D4 FADD D0, D9, D1
	0x03D400D8 FRINTM D0, D0
	0x03D400DC MOVZ X9, 0x7FF00000
	0x03D400E0 LDRB W10, [X21 + 0x5D7]
	0x03D400E4 LDR V10, [X31 + 0xA84]
	0x03D400E8 FMOV D1, X9
	0x03D400EC FCVTZS W8, D0
	0x03D400F0 FCMP D0, D1
	0x03D400F4 MOVZ W9, 0x80000000
	0x03D400F8 CSEL W8, W9, W8, EQ
	0x03D400FC STR W8, [X31 + 0x6BC]
	0x03D40100 CBNZ W10, 0x3D40118
	0x03D40104 ADRP X0, 0x3B3000
	0x03D40108 LDR X0, [X0 + 0x5A8]
	0x03D4010C BL 0x1C16CF4
	0x03D40110 MOVZ W8, 0x1
	0x03D40114 STRB W8, [X21 + 0x5D7]
	0x03D40118 LDR X0, [X22]
	0x03D4011C LDR W8, [X0 + 0xE0]
	0x03D40120 CBNZ W8, 0x3D40128
	0x03D40124 BL 0x1C16DFC
	0x03D40128 FCVT S9, S10
	0x03D4012C ADD X0, X31, 0x398
	0x03D40130 MOV V0.16B, V9.16B
	0x03D40134 BL 0x3EB1C00
	0x03D40138 FCMP S10, 0x0
	0x03D4013C B.GE 0x3D40158
	0x03D40140 FMOV D1, -0.5
	0x03D40144 FCMP D0, D1
	0x03D40148 B.NE 0x3D40180
	0x03D4014C LDR V0, [X31 + 0x398]
	0x03D40150 FMOV D1, -1
	0x03D40154 B 0x3D4016C
	0x03D40158 FMOV D1, 0.5
	0x03D4015C FCMP D0, D1
	0x03D40160 B.NE 0x3D4018C
	0x03D40164 LDR V0, [X31 + 0x398]
	0x03D40168 FMOV D1, 1
	0x03D4016C FCVTZS X8, D0
	0x03D40170 FADD D1, D0, D1
	0x03D40174 ANDS X31, X8, 0x1
	0x03D40178 FCSEL D0, D0, D1, EQ
	0x03D4017C B 0x3D40194
	0x03D40180 FADD D0, D9, D1
	0x03D40184 FRINTP D0, D0
	0x03D40188 B 0x3D40194
	0x03D4018C FADD D0, D9, D1
	0x03D40190 FRINTM D0, D0
	0x03D40194 MOVZ X9, 0x7FF00000
	0x03D40198 LDRB W10, [X21 + 0x5D7]
	0x03D4019C LDR V10, [X31 + 0xA88]
	0x03D401A0 FMOV D1, X9
	0x03D401A4 FCVTZS W8, D0
	0x03D401A8 FCMP D0, D1
	0x03D401AC MOVZ W9, 0x80000000
	0x03D401B0 CSEL W8, W9, W8, EQ
	0x03D401B4 STR W8, [X31 + 0x6C0]
	0x03D401B8 CBNZ W10, 0x3D401D0
	0x03D401BC ADRP X0, 0x3B3000
	0x03D401C0 LDR X0, [X0 + 0x5A8]
	0x03D401C4 BL 0x1C16CF4
	0x03D401C8 MOVZ W8, 0x1
	0x03D401CC STRB W8, [X21 + 0x5D7]
	0x03D401D0 LDR X0, [X22]
	0x03D401D4 LDR W8, [X0 + 0xE0]
	0x03D401D8 CBNZ W8, 0x3D401E0
	0x03D401DC BL 0x1C16DFC
	0x03D401E0 FCVT S9, S10
	0x03D401E4 ADD X0, X31, 0x398
	0x03D401E8 MOV V0.16B, V9.16B
	0x03D401EC BL 0x3EB1C00
	0x03D401F0 FCMP S10, 0x0
	0x03D401F4 B.GE 0x3D40210
	0x03D401F8 FMOV D1, -0.5
	0x03D401FC FCMP D0, D1
	0x03D40200 B.NE 0x3D40238
	0x03D40204 LDR V0, [X31 + 0x398]
	0x03D40208 FMOV D1, -1
	0x03D4020C B 0x3D40224
	0x03D40210 FMOV D1, 0.5
	0x03D40214 FCMP D0, D1
	0x03D40218 B.NE 0x3D40244
	0x03D4021C LDR V0, [X31 + 0x398]
	0x03D40220 FMOV D1, 1
	0x03D40224 FCVTZS X8, D0
	0x03D40228 FADD D1, D0, D1
	0x03D4022C ANDS X31, X8, 0x1
	0x03D40230 FCSEL D0, D0, D1, EQ
	0x03D40234 B 0x3D4024C
	0x03D40238 FADD D0, D9, D1
	0x03D4023C FRINTP D0, D0
	0x03D40240 B 0x3D4024C
	0x03D40244 FADD D0, D9, D1
	0x03D40248 FRINTM D0, D0
	0x03D4024C MOVZ X9, 0x7FF00000
	0x03D40250 LDRB W10, [X21 + 0x5D7]
	0x03D40254 LDR V10, [X31 + 0xA8C]
	0x03D40258 FMOV D1, X9
	0x03D4025C FCVTZS W8, D0
	0x03D40260 FCMP D0, D1
	0x03D40264 MOVZ W9, 0x80000000
	0x03D40268 CSEL W8, W9, W8, EQ
	0x03D4026C STR W8, [X31 + 0x6C4]
	0x03D40270 CBNZ W10, 0x3D40288
	0x03D40274 ADRP X0, 0x3B3000
	0x03D40278 LDR X0, [X0 + 0x5A8]
	0x03D4027C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], D8
	003 Move [X31+96], X30
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X21, 0x6A8000
	008 Move W8, [X21+2950]
	009 Move X20, X2
	010 Move X19, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x3B4000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2950], W8
	020 Move X21, 0x69A000
	021 Move D8, [X19]
	022 Move D7, [X19+8]
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 Move W8, [X21+1450]
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 Compare W8, 0
	027 JumpIfNotEqual {39}
	028 Move X0, 0x3BB000
	029 Move X0, [X0+1208]
	030 Move [X31+48], V7
	031 Move [X31+56], V6
	032 Move [X31+2], V16
	033 Call 0x1C17CF4
	034 Move V16, [X31+32]
	035 Move V7, [X31+48]
	036 Move V6, [X31+4]
	037 Move W8, 1
	038 Move [X21+1450], W8
	039 Move X8, 0x3BB000
	040 Move X8, [X8+1208]
	041 Move X9, -52776960
	042 Move V1, [X9+576]
	043 NotImplemented "Instruction FABS not yet implemented."
	044 Move X8, [X8]
	045 Move S0, W31
	046 Move S4, 8
	047 NotImplemented "Instruction FMAXNM not yet implemented."
	048 Move X8, [X8+184]
	049 Multiply S5, S2, S1
	050 Move V3, [X8]
	051 Multiply S2, S3, S4
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 NotImplemented "Instruction FCSEL not yet implemented."
	054 NotImplemented "Instruction FABD not yet implemented."
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 Move S3, V7.S[1]
	057 NotImplemented "Instruction FABS not yet implemented."
	058 NotImplemented "Instruction FMAXNM not yet implemented."
	059 Multiply S1, S4, S1
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 NotImplemented "Instruction FCSEL not yet implemented."
	062 NotImplemented "Instruction FABD not yet implemented."
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 Move X21, 0x699000
	065 Move W8, [X21+3674]
	066 Compare W8, 0
	067 JumpIfNotEqual {79}
	068 Move X0, 0x3BB000
	069 Move X0, [X0+2464]
	070 Move [X31+48], V7
	071 Move [X31+56], V6
	072 Move [X31+2], V16
	073 Call 0x1C17CF4
	074 Move V16, [X31+32]
	075 Move V7, [X31+48]
	076 Move V6, [X31+4]
	077 Move W8, 1
	078 Move [X21+3674], W8
	079 Move X8, 0x3BB000
	080 Move X8, [X8+2464]
	081 Move X8, [X8]
	082 Move X8, [X8+184]
	083 Move D0, [X8]
	084 Move D1, [X8+8]
	085 Move X8, -52781056
	086 Subtract V0, V6, V0
	087 NotImplemented "Instruction INVALID not yet implemented."
	088 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	089 Add V0, V0, V2
	090 Move V2, [X8+3872]
	091 Subtract V1, V16, V1
	092 NotImplemented "Instruction INVALID not yet implemented."
	093 Add V0, V1, V0
	094 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	095 Add V0, V1, V0
	096 NotImplemented "Instruction FCMP not yet implemented."
	097 Add V1, V6, V16
	098 Add V0, V8, V6
	099 Move [X31], V1
	100 Subtract V1, V7, V1
	101 Move [X31+48], V7
	102 Move [X31+56], V6
	103 Move [X31+2], V16
	104 Move [X19], D0
	105 Move [X19+8], D1
	106 Move X8, 0x3B4000
	107 Move X8, [X8+1432]
	108 Move V0, [X19+2]
	109 Move X0, [X8]
	110 Move [X31+1], V0
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X20
	116 Move X1, X31
	117 Move X2, X31
	118 Call Object.op_Inequality, X0, X1
	119 Move X8, -52781056
	120 Move V5, [X31+16]
	121 Move V4, [X31+32]
	122 Move V0, [X8+3996]
	123 Move V3, [X31+48]
	124 Move V2, [X31+64]
	125 Move S1, V5.S[3]
	126 NotImplemented "Instruction FCMP not yet implemented."
	127 Move S1, V5.S[2]
	128 NotImplemented "Instruction FCMP not yet implemented."
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {147}
	133 Move V1, [X31]
	134 Move V0, 0
	135 Move V2.D[1], V4.D[0]
	136 NotImplemented "Instruction INVALID not yet implemented."
	137 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	138 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	139 Move V0.D[1], V0.D[0]
	140 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	141 NotImplemented "Instruction INVALID not yet implemented."
	142 Add V1, V5, V0
	143 Subtract V0, V5, V0
	144 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	145 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	146 Move [X19+2], V0
	147 Move X20, [X31+112]
	148 Move X19, [X31+120]
	149 Move X30, [X31+96]
	150 Move X21, [X31+104]
	151 Move V8, [X31+80]
	152 Add X31, X31, 128
	153 Return 

Method: System.Void DrawVectorImage(UnityEngine.UIElements.MeshGenerationContextUtils/RectangleParams rectParams)

Disassembly:
	0x03D3F940 SUBS X9, X9, 0x1
	0x03D3F944 ADD X10, X10, 0x10
	0x03D3F948 B.NE 0x3D3F934
	0x03D3F94C MOVZ W2, 0x28
	0x03D3F950 MOV X0, X20
	0x03D3F954 BL 0x1C5C788
	0x03D3F958 B 0x3D3F96C
	0x03D3F95C LDR W9, [X10]
	0x03D3F960 ADD W9, W9, 0x28
	0x03D3F964 ADD X8, X8, W9, 0x4, SXTW
	0x03D3F968 ADD X0, X8, 0x138
	0x03D3F96C LDP X8, X1, [X0]
	0x03D3F970 MOV X0, X20
	0x03D3F974 BLR X8
	0x03D3F978 ADD X0, X31, 0x940
	0x03D3F97C MOV X1, X31
	0x03D3F980 MOV V8.16B, V0.16B
	0x03D3F984 BL 0x3DE2228
	0x03D3F988 LDR X8, [X27]
	0x03D3F98C MOV X20, X0
	0x03D3F990 LDR W9, [X8 + 0xE0]
	0x03D3F994 CBNZ W9, 0x3D3F9A0
	0x03D3F998 MOV X0, X8
	0x03D3F99C BL 0x1C16DFC
	0x03D3F9A0 MOV X0, X20
	0x03D3F9A4 MOV X1, X31
	0x03D3F9A8 MOV X2, X31
	0x03D3F9AC BL 0x3C354F8
	0x03D3F9B0 TBZ X0, 0x0, 0x3D3FA3C
	0x03D3F9B4 LDR X0, [X25]
	0x03D3F9B8 CBZ X0, 0x3D405AC
	0x03D3F9BC MOV X1, X31
	0x03D3F9C0 BL 0x3DED76C
	0x03D3F9C4 ADD X0, X31, 0x940
	0x03D3F9C8 MOV X1, X31
	0x03D3F9CC MOV V9.16B, V0.16B
	0x03D3F9D0 MOV V10.16B, V1.16B
	0x03D3F9D4 MOV V11.16B, V2.16B
	0x03D3F9D8 MOV V12.16B, V3.16B
	0x03D3F9DC BL 0x3DE2228
	0x03D3F9E0 LDR X8, [X25]
	0x03D3F9E4 CBZ X8, 0x3D405AC
	0x03D3F9E8 MOV X20, X0
	0x03D3F9EC MOV X0, X8
	0x03D3F9F0 MOV X1, X31
	0x03D3F9F4 BL 0x3DEC0CC
	0x03D3F9F8 CBZ X0, 0x3D405AC
	0x03D3F9FC ADRP X10, 0x3DD000
	0x03D3FA00 LDR X8, [X0]
	0x03D3FA04 LDR X10, [X10 + 0xE80]
	0x03D3FA08 MOV X21, X0
	0x03D3FA0C LDRH W9, [X8 + 0x12E]
	0x03D3FA10 LDR X1, [X10]
	0x03D3FA14 CBZ X9, 0x3D3FC60
	0x03D3FA18 LDR X10, [X8 + 0xB0]
	0x03D3FA1C ADD X10, X10, 0x8
	0x03D3FA20 LDUR X11, [X10 - 0x8]
	0x03D3FA24 CMP X11, X1
	0x03D3FA28 B.EQ 0x3D3FC70
	0x03D3FA2C SUBS X9, X9, 0x1
	0x03D3FA30 ADD X10, X10, 0x10
	0x03D3FA34 B.NE 0x3D3FA20
	0x03D3FA38 B 0x3D3FC60
	0x03D3FA3C ADD X0, X31, 0x940
	0x03D3FA40 MOV X1, X31
	0x03D3FA44 BL 0x3DE22AC
	0x03D3FA48 LDR X8, [X27]
	0x03D3FA4C MOV X20, X0
	0x03D3FA50 LDR W9, [X8 + 0xE0]
	0x03D3FA54 CBNZ W9, 0x3D3FA60
	0x03D3FA58 MOV X0, X8
	0x03D3FA5C BL 0x1C16DFC
	0x03D3FA60 MOV X0, X20
	0x03D3FA64 MOV X1, X31
	0x03D3FA68 MOV X2, X31
	0x03D3FA6C BL 0x3C354F8
	0x03D3FA70 TBZ X0, 0x0, 0x3D3FBA4
	0x03D3FA74 ADD X0, X31, 0xA90
	0x03D3FA78 MOV X1, X31
	0x03D3FA7C BL 0x3DC961C
	0x03D3FA80 MOV X20, X0
	0x03D3FA84 MOV X21, X1
	0x03D3FA88 ADD X0, X31, 0xA90
	0x03D3FA8C MOV X1, X31
	0x03D3FA90 BL 0x3DC9674
	0x03D3FA94 MOV X22, X0
	0x03D3FA98 MOV X23, X1
	0x03D3FA9C ADD X0, X31, 0xA90
	0x03D3FAA0 MOV X1, X31
	0x03D3FAA4 BL 0x3DC96CC
	0x03D3FAA8 MOV X24, X0
	0x03D3FAAC ADD X8, X31, 0x398
	0x03D3FAB0 ADD X0, X31, 0xA90
	0x03D3FAB4 MOV X1, X31
	0x03D3FAB8 BL 0x3DC971C
	0x03D3FABC LDR V0, [X26]
	0x03D3FAC0 LDR W8, [X31 + 0x3A8]
	0x03D3FAC4 AND X1, X21, 0x0
	0x03D3FAC8 AND X3, X23, 0x0
	0x03D3FACC ADD X5, X31, 0x380
	0x03D3FAD0 ADD X6, X31, 0x5DC
	0x03D3FAD4 MOV X0, X20
	0x03D3FAD8 MOV X2, X22
	0x03D3FADC MOV X4, X24
	0x03D3FAE0 MOV X7, X31
	0x03D3FAE4 STR V0, [X31 + 0x38]
	0x03D3FAE8 STR W8, [X31 + 0x390]
	0x03D3FAEC BL 0x3CE9668
	0x03D3FAF0 LDRB W8, [X31 + 0x5DC]
	0x03D3FAF4 MOV W22, W0
	0x03D3FAF8 LDR X0, [X25]
	0x03D3FAFC CMP W8, 0x0
	0x03D3FB00 CSET W8, EQ
	0x03D3FB04 CMP W22, 0x1
	0x03D3FB08 CSET W9, EQ
	0x03D3FB0C CBZ X0, 0x3D405AC
	0x03D3FB10 MOV X1, X31
	0x03D3FB14 ORR W20, W9, W8, 0x0
	0x03D3FB18 BL 0x3DED76C
	0x03D3FB1C ADD X0, X31, 0x940
	0x03D3FB20 MOV X1, X31
	0x03D3FB24 MOV V9.16B, V0.16B
	0x03D3FB28 MOV V10.16B, V1.16B
	0x03D3FB2C MOV V11.16B, V2.16B
	0x03D3FB30 MOV V12.16B, V3.16B
	0x03D3FB34 BL 0x3DE22AC
	0x03D3FB38 MOV X21, X0
	0x03D3FB3C LDR X0, [X25]
	0x03D3FB40 CMP W20, 0x0
	0x03D3FB44 CSEL W22, W31, W22, NE
	0x03D3FB48 CBZ X0, 0x3D405AC
	0x03D3FB4C MOV X1, X31
	0x03D3FB50 BL 0x3DEC0CC
	0x03D3FB54 CBZ X0, 0x3D405AC
	0x03D3FB58 ADRP X10, 0x3DD000
	0x03D3FB5C LDR X8, [X0]
	0x03D3FB60 LDR X10, [X10 + 0xE80]
	0x03D3FB64 MOV X23, X0
	0x03D3FB68 LDRH W9, [X8 + 0x12E]
	0x03D3FB6C LDR X1, [X10]
	0x03D3FB70 CBZ X9, 0x3D3FB94
	0x03D3FB74 LDR X10, [X8 + 0xB0]
	0x03D3FB78 ADD X10, X10, 0x8
	0x03D3FB7C LDUR X11, [X10 - 0x8]
	0x03D3FB80 CMP X11, X1
	0x03D3FB84 B.EQ 0x3D3FE78
	0x03D3FB88 SUBS X9, X9, 0x1
	0x03D3FB8C ADD X10, X10, 0x10
	0x03D3FB90 B.NE 0x3D3FB7C
	0x03D3FB94 MOVZ W2, 0x2
	0x03D3FB98 MOV X0, X23
	0x03D3FB9C BL 0x1C5C788
	0x03D3FBA0 B 0x3D3FE88
	0x03D3FBA4 ADD X0, X31, 0x940
	0x03D3FBA8 MOV X1, X31
	0x03D3FBAC BL 0x3DE2330
	0x03D3FBB0 LDR X8, [X27]
	0x03D3FBB4 MOV X20, X0
	0x03D3FBB8 LDR W9, [X8 + 0xE0]
	0x03D3FBBC CBNZ W9, 0x3D3FBC8
	0x03D3FBC0 MOV X0, X8
	0x03D3FBC4 BL 0x1C16DFC
	0x03D3FBC8 MOV X0, X20
	0x03D3FBCC MOV X1, X31
	0x03D3FBD0 MOV X2, X31
	0x03D3FBD4 BL 0x3C354F8
	0x03D3FBD8 TBZ X0, 0x0, 0x3D3FD1C
	0x03D3FBDC LDR X0, [X25]
	0x03D3FBE0 CBZ X0, 0x3D405AC
	0x03D3FBE4 MOV X1, X31
	0x03D3FBE8 BL 0x3DED76C
	0x03D3FBEC ADD X0, X31, 0x940
	0x03D3FBF0 MOV X1, X31
	0x03D3FBF4 MOV V9.16B, V0.16B
	0x03D3FBF8 MOV V10.16B, V1.16B
	0x03D3FBFC MOV V11.16B, V2.16B
	0x03D3FC00 MOV V12.16B, V3.16B
	0x03D3FC04 BL 0x3DE2330
	0x03D3FC08 LDR X8, [X25]
	0x03D3FC0C CBZ X8, 0x3D405AC
	0x03D3FC10 MOV X20, X0
	0x03D3FC14 MOV X0, X8
	0x03D3FC18 MOV X1, X31
	0x03D3FC1C BL 0x3DEC0CC
	0x03D3FC20 CBZ X0, 0x3D405AC
	0x03D3FC24 ADRP X10, 0x3DD000
	0x03D3FC28 LDR X8, [X0]
	0x03D3FC2C LDR X10, [X10 + 0xE80]
	0x03D3FC30 MOV X21, X0
	0x03D3FC34 LDRH W9, [X8 + 0x12E]
	0x03D3FC38 LDR X1, [X10]
	0x03D3FC3C CBZ X9, 0x3D3FC60
	0x03D3FC40 LDR X10, [X8 + 0xB0]
	0x03D3FC44 ADD X10, X10, 0x8
	0x03D3FC48 LDUR X11, [X10 - 0x8]
	0x03D3FC4C CMP X11, X1
	0x03D3FC50 B.EQ 0x3D3FC70
	0x03D3FC54 SUBS X9, X9, 0x1
	0x03D3FC58 ADD X10, X10, 0x10
	0x03D3FC5C B.NE 0x3D3FC48
	0x03D3FC60 MOVZ W2, 0x2
	0x03D3FC64 MOV X0, X21
	0x03D3FC68 BL 0x1C5C788
	0x03D3FC6C B 0x3D3FC80
	0x03D3FC70 LDR W9, [X10]
	0x03D3FC74 ADD W9, W9, 0x2
	0x03D3FC78 ADD X8, X8, W9, 0x4, SXTW
	0x03D3FC7C ADD X0, X8, 0x138
	0x03D3FC80 LDP X8, X1, [X0]
	0x03D3FC84 MOV X0, X21
	0x03D3FC88 BLR X8
	0x03D3FC8C MOV W2, W0
	0x03D3FC90 ADD X8, X31, 0x398
	0x03D3FC94 FMOV S4, W31
	0x03D3FC98 FMOV S5, W31
	0x03D3FC9C FMOV S6, 1
	0x03D3FCA0 FMOV S7, 1
	0x03D3FCA4 MOVZ W1, 0x2
	0x03D3FCA8 MOV V0.16B, V9.16B
	0x03D3FCAC MOV V1.16B, V10.16B
	0x03D3FCB0 MOV V2.16B, V11.16B
	0x03D3FCB4 MOV V3.16B, V12.16B
	0x03D3FCB8 MOV X0, X20
	0x03D3FCBC MOV X3, X31
	0x03D3FCC0 BL 0x3DC4CB8
	0x03D3FCC4 ADD X0, X31, 0x5E0
	0x03D3FCC8 ADD X1, X31, 0x398
	0x03D3FCCC MOVZ W2, 0x120
	0x03D3FCD0 BL 0x3EB1AC0
	0x03D3FCD4 LDR X0, [X31 + 0x658]
	0x03D3FCD8 CBZ X0, 0x3D405AC
	0x03D3FCDC LDR X8, [X0]
	0x03D3FCE0 LDP X9, X1, [X8 + 0x188]
	0x03D3FCE4 BLR X9
	0x03D3FCE8 LDR X8, [X31 + 0x658]
	0x03D3FCEC CBZ X8, 0x3D405AC
	0x03D3FCF0 LDR X9, [X8]
	0x03D3FCF4 MOV W20, W0
	0x03D3FCF8 MOV X0, X8
	0x03D3FCFC LDP X10, X1, [X9 + 0x1A8]
	0x03D3FD00 BLR X10

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 480
	014 Move X22, 0x6A9000
	015 Move X21, 0x3B5000
	016 Move W8, [X22+2951]
	017 Move X21, [X21+1432]
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {53}
	024 Move X0, 0x3B5000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move X0, 0x427000
	028 Move X0, [X0+288]
	029 Call 0x1C17CF4
	030 Move X0, 0x427000
	031 Move X0, [X0+592]
	032 Call 0x1C17CF4
	033 Move X0, 0x427000
	034 Move X0, [X0+600]
	035 Call 0x1C17CF4
	036 Move X0, 0x427000
	037 Move X0, [X0+296]
	038 Call 0x1C17CF4
	039 Move X0, 0x427000
	040 Move X0, [X0+304]
	041 Call 0x1C17CF4
	042 Move X0, 0x3B5000
	043 Move X0, [X0+1432]
	044 Call 0x1C17CF4
	045 Move X0, 0x3DD000
	046 Move X0, [X0+1568]
	047 Call 0x1C17CF4
	048 Move X0, 0x424000
	049 Move X0, [X0+1712]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X22+2951], W8
	053 Move X0, [X21]
	054 NotImplemented "Instruction MOVI not yet implemented."
	055 Move [X31+392], X31
	056 Move [X31+352], V0
	057 Move [X31+360], V0
	058 Move [X31+21], V0
	059 Move X25, 0x3B5000
	060 Move W8, [X0+224]
	061 Move X21, [X20+136]
	062 Move X25, [X25+2600]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X21
	067 Move X1, X31
	068 Move X2, X31
	069 Call Object.op_Inequality, X0, X1
	070 Move X8, [X25]
	071 Move W22, W0
	072 Move W9, [X8+224]
	073 Compare W9, 0
	074 JumpIfNotEqual {77}
	075 Move X0, X8
	076 Call 0x1C17DFC
	077 And W0, W22, 1
	078 Move X1, X31
	079 Call Debug.Assert, X0
	080 Compare X21, 0
	081 JumpIfEqual {286}
	082 Move X0, [X21+32]
	083 Move X1, X31
	084 Move X2, X31
	085 Call Object.op_Inequality, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {166}
	090 Move X0, [X19+40]
	091 Compare X0, 0
	092 JumpIfEqual {166}
	093 Move X2, [X19+272]
	094 Move X1, X21
	095 Move X3, X31
	096 Call VectorImageManager.AddUser, X0, X1, X2
	097 Compare X0, 0
	098 JumpIfEqual {286}
	099 Move X24, 0x3DD000
	100 Move X24, [X24+1568]
	101 Move X23, X0
	102 Move W22, [X23+28]
	103 Move W26, [X23+56]
	104 Move X0, [X24]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {110}
	108 Call 0x1C17DFC
	109 Move X0, [X24]
	110 Move X8, [X0+184]
	111 Move X28, 0x6A9000
	112 Move W9, [X28+2904]
	113 Move W27, [X8]
	114 Compare W9, 0
	115 JumpIfNotEqual {121}
	116 Move X0, X24
	117 Call 0x1C17CF4
	118 Move X0, [X24]
	119 Move W8, 1
	120 Move [X28+2904], W8
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X23, 0x424000
	127 Move X23, [X23+1712]
	128 Move X0, [X23]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X24, 0x6A9000
	134 Move W8, [X24+2021]
	135 Compare W8, 0
	136 JumpIfNotEqual {142}
	137 Move X0, 0x424000
	138 Move X0, [X0+1712]
	139 Call 0x1C17CF4
	140 Move W8, 1
	141 Move [X24+2021], W8
	142 Move X0, [X23]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {148}
	146 Call 0x1C17DFC
	147 Move X0, [X23]
	148 Move X8, [X0+184]
	149 Move X0, [X8]
	150 Compare X0, 0
	151 JumpIfEqual {286}
	152 Move X1, [X21+32]
	153 Move X2, X31
	154 Call TextureRegistry.Acquire, X0, X1
	155 Move X8, [X19+16]
	156 Compare X8, 0
	157 JumpIfEqual {286}
	158 Move X2, [X21+32]
	159 Move X1, [X19+272]
	160 Move X23, X0
	161 And X3, X0, 0
	162 Move X0, X8
	163 Move W4, W31
	164 Move X5, X31
	165 Call RenderChain.AppendTexture, X0, X1, X2, X3, X4
	166 Move W21, W31
	167 Move W23, W31
	168 Move W22, W31
	169 Move W23, [X23+56]
	170 Move W21, 1
	171 Move X8, [X19+24]
	172 Compare X8, 0
	173 JumpIfEqual {286}
	174 Move W24, [X8+24]
	175 Add X0, X31, 48
	176 Move W2, 288
	177 Move X1, X20
	178 Call 0x3EB2AC0
	179 Move W3, W23
	180 Add X1, X31, 48
	181 Add X5, X31, 396
	182 Add X6, X31, 392
	183 Move X0, X19
	184 Move W2, W21
	185 Move W4, W22
	186 Call UIRStylePainter.MakeVectorGraphics, X0, X1, X2, X3, X4, X5, X6
	187 Move X8, [X19+24]
	188 Compare X8, 0
	189 JumpIfEqual {286}
	190 Move X0, [X25]
	191 Move W20, [X8+24]
	192 Move W9, [X0+224]
	193 Compare W9, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Add W8, W20, 1
	197 NotImplemented "Instruction CMP not yet implemented."
	198 NotImplemented "Instruction CSET not yet implemented."
	199 Move X1, X31
	200 Call Debug.Assert, X0
	201 Move X0, [X19+24]
	202 Compare X0, 0
	203 JumpIfEqual {286}
	204 Move W8, [X0+24]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Subtract W1, W8, 1
	207 Move [X19+200], W1
	208 Move W8, [X31+396]
	209 Compare W8, 0
	210 JumpIfEqual {272}
	211 Move W8, [X31+392]
	212 Compare W8, 0
	213 JumpIfEqual {272}
	214 Move X8, 0x427000
	215 Move X8, [X8+592]
	216 Move X2, [X8]
	217 Add X8, X31, 400
	218 Call List`1<Entry>.get_Item, X0, X1
	219 Move X8, 0x427000
	220 Move X0, [X31+400]
	221 Move X1, [X31+408]
	222 Move X22, [X31+416]
	223 Move X23, [X31+424]
	224 Move V0, [X31+432]
	225 Move V1, [X31+448]
	226 Move V2, [X31+29]
	227 Move W3, [X31+396]
	228 Move X8, [X8+304]
	229 Move W2, W31
	230 Move [X31+336], V0
	231 Move [X31+344], V1
	232 Move [X31+23], V2
	233 Move X4, [X8]
	234 Call NativeSliceExtensions.Slice, X0, X1, X2
	235 Move X8, 0x427000
	236 Move W3, [X31+392]
	237 Move X8, [X8+296]
	238 Move X20, X0
	239 Move X21, X1
	240 Move X0, X22
	241 Move X4, [X8]
	242 Move X1, X23
	243 Move W2, W31
	244 Call 0x2223A50, X0, X1, X2
	245 Move X8, X0
	246 Move X9, X1
	247 Move X0, [X19+24]
	248 Move V0, [X31+336]
	249 Move V1, [X31+352]
	250 Move V2, [X31+23]
	251 Move W1, [X19+200]
	252 Move [X31], V0
	253 Move [X31+8], V1
	254 Move [X31+2], V2
	255 Compare X0, 0
	256 JumpIfEqual {286}
	257 Move X10, 0x427000
	258 Move X10, [X10+600]
	259 Move V0, [X31]
	260 Move V1, [X31+16]
	261 Move V2, [X31+2]
	262 Add X2, X31, 400
	263 Move X3, [X10]
	264 Move [X31+400], X20
	265 Move [X31+408], X21
	266 Move [X31+416], X8
	267 Move [X31+424], X9
	268 Move [X31+432], V0
	269 Move [X31+440], V1
	270 Move [X31+29], V2
	271 Call List`1<Entry>.set_Item, X0, X1, X2
	272 Add X31, X31, 480
	273 Move X20, [X31+80]
	274 Move X19, [X31+88]
	275 Move X22, [X31+64]
	276 Move X21, [X31+72]
	277 Move X24, [X31+48]
	278 Move X23, [X31+56]
	279 Move X26, [X31+32]
	280 Move X25, [X31+40]
	281 Move X28, [X31+16]
	282 Move X27, [X31+24]
	283 Move X29, [X31+96]
	284 Move X30, [X31+104]
	285 Return 
	286 Call 0x1C17F20

Method: System.Void MakeVectorGraphics(UnityEngine.UIElements.MeshGenerationContextUtils/RectangleParams rectParams, System.Boolean isUsingGradients, UnityEngine.UIElements.TextureId svgTexture, System.Int32 settingIndexOffset, out System.Int32 finalVertexCount, out System.Int32 finalIndexCount)

Disassembly:
	0x03D44740 MOV X1, X31
	0x03D44744 BL 0x3E0007C
	0x03D44748 STUR X0, [X19 + 0x4C]
	0x03D4474C LDR X8, [X21]
	0x03D44750 LDR X1, [X22]
	0x03D44754 LDR X0, [X8 + 0xB8]
	0x03D44758 BL 0x266C4BC
	0x03D4475C MOV X19, X0
	0x03D44760 FMOV S0, W31
	0x03D44764 MOV X0, X31
	0x03D44768 BL 0x3DFD518
	0x03D4476C STR X0, [X19 + 0x18]
	0x03D44770 LDR X8, [X21]
	0x03D44774 LDR X1, [X23]
	0x03D44778 LDR X8, [X8 + 0xB8]
	0x03D4477C ADD X0, X8, 0x8
	0x03D44780 BL 0x266C93C
	0x03D44784 MOV X19, X0
	0x03D44788 FMOV S0, W31
	0x03D4478C MOV X0, X31
	0x03D44790 BL 0x3DFD518
	0x03D44794 STUR X0, [X19 + 0x54]
	0x03D44798 LDR X8, [X21]
	0x03D4479C LDR X1, [X23]
	0x03D447A0 LDR X8, [X8 + 0xB8]
	0x03D447A4 ADD X0, X8, 0x8
	0x03D447A8 BL 0x266C93C
	0x03D447AC MOV X19, X0
	0x03D447B0 FMOV S0, W31
	0x03D447B4 MOV X0, X31
	0x03D447B8 BL 0x3DFD518
	0x03D447BC STUR X0, [X19 + 0x5C]
	0x03D447C0 LDR X8, [X21]
	0x03D447C4 LDR X1, [X23]
	0x03D447C8 LDR X8, [X8 + 0xB8]
	0x03D447CC ADD X0, X8, 0x8
	0x03D447D0 BL 0x266C93C
	0x03D447D4 MOV X19, X0
	0x03D447D8 FMOV S0, W31
	0x03D447DC MOV X0, X31
	0x03D447E0 BL 0x3DFD518
	0x03D447E4 STUR X0, [X19 + 0x64]
	0x03D447E8 LDR X8, [X21]
	0x03D447EC LDR X1, [X23]
	0x03D447F0 LDR X8, [X8 + 0xB8]
	0x03D447F4 ADD X0, X8, 0x8
	0x03D447F8 BL 0x266C93C
	0x03D447FC MOV X19, X0
	0x03D44800 FMOV S0, W31
	0x03D44804 MOV X0, X31
	0x03D44808 BL 0x3DFD518
	0x03D4480C STUR X0, [X19 + 0x6C]
	0x03D44810 LDR X8, [X21]
	0x03D44814 LDR X1, [X23]
	0x03D44818 LDR X8, [X8 + 0xB8]
	0x03D4481C ADD X0, X8, 0x8
	0x03D44820 BL 0x266C93C
	0x03D44824 MOV X19, X0
	0x03D44828 MOVZ W0, 0x3
	0x03D4482C MOV X1, X31
	0x03D44830 BL 0x3E0007C
	0x03D44834 STUR X0, [X19 + 0x74]
	0x03D44838 LDR X8, [X21]
	0x03D4483C LDR X1, [X23]
	0x03D44840 LDR X8, [X8 + 0xB8]
	0x03D44844 ADD X0, X8, 0x8
	0x03D44848 BL 0x266C93C
	0x03D4484C MOV X19, X0
	0x03D44850 MOVZ W0, 0x3
	0x03D44854 MOV X1, X31
	0x03D44858 BL 0x3E0007C
	0x03D4485C STUR X0, [X19 + 0x7C]
	0x03D44860 LDR X8, [X21]
	0x03D44864 LDR X1, [X23]
	0x03D44868 LDR X8, [X8 + 0xB8]
	0x03D4486C ADD X0, X8, 0x8
	0x03D44870 BL 0x266C93C
	0x03D44874 MOV X19, X0
	0x03D44878 MOVZ W0, 0x2
	0x03D4487C MOV X1, X31
	0x03D44880 BL 0x3E0007C
	0x03D44884 STUR X0, [X19 + 0x84]
	0x03D44888 LDR X8, [X21]
	0x03D4488C LDR X1, [X23]
	0x03D44890 LDR X8, [X8 + 0xB8]
	0x03D44894 ADD X0, X8, 0x8
	0x03D44898 BL 0x266C93C
	0x03D4489C MOV X19, X0
	0x03D448A0 MOVZ W0, 0x2
	0x03D448A4 MOV X1, X31
	0x03D448A8 BL 0x3E0007C
	0x03D448AC STUR X0, [X19 + 0x8C]
	0x03D448B0 LDR X8, [X21]
	0x03D448B4 LDR X1, [X20]
	0x03D448B8 LDR X8, [X8 + 0xB8]
	0x03D448BC ADD X0, X8, 0x28
	0x03D448C0 BL 0x266DB34
	0x03D448C4 STR W29, [X0 + 0xC4]
	0x03D448C8 LDR X8, [X21]
	0x03D448CC LDR X1, [X20]
	0x03D448D0 LDR X8, [X8 + 0xB8]
	0x03D448D4 ADD X0, X8, 0x28
	0x03D448D8 BL 0x266DB34
	0x03D448DC STR W31, [X0 + 0xC8]
	0x03D448E0 LDR X8, [X21]
	0x03D448E4 LDR X1, [X23]
	0x03D448E8 LDR X8, [X8 + 0xB8]
	0x03D448EC ADD X0, X8, 0x8
	0x03D448F0 BL 0x266C93C
	0x03D448F4 MOV X19, X0
	0x03D448F8 FMOV S0, W31
	0x03D448FC MOV X0, X31
	0x03D44900 BL 0x3DFD518
	0x03D44904 STUR X0, [X19 + 0x94]
	0x03D44908 LDR X8, [X21]
	0x03D4490C LDR X1, [X23]
	0x03D44910 LDR X8, [X8 + 0xB8]
	0x03D44914 ADD X0, X8, 0x8
	0x03D44918 BL 0x266C93C
	0x03D4491C MOV X19, X0
	0x03D44920 FMOV S0, W31
	0x03D44924 MOV X0, X31
	0x03D44928 BL 0x3DFD518
	0x03D4492C STUR X0, [X19 + 0x9C]
	0x03D44930 LDR X8, [X21]
	0x03D44934 LDR X1, [X23]
	0x03D44938 LDR X8, [X8 + 0xB8]
	0x03D4493C ADD X0, X8, 0x8
	0x03D44940 BL 0x266C93C
	0x03D44944 MOV X19, X0
	0x03D44948 FMOV S0, W31
	0x03D4494C MOV X0, X31
	0x03D44950 BL 0x3DFD518
	0x03D44954 STUR X0, [X19 + 0xA4]
	0x03D44958 LDR X8, [X21]
	0x03D4495C LDR X1, [X23]
	0x03D44960 LDR X8, [X8 + 0xB8]
	0x03D44964 ADD X0, X8, 0x8
	0x03D44968 BL 0x266C93C
	0x03D4496C MOV X19, X0
	0x03D44970 FMOV S0, W31
	0x03D44974 MOV X0, X31
	0x03D44978 BL 0x3DFD518
	0x03D4497C STUR X0, [X19 + 0xAC]
	0x03D44980 LDR X8, [X21]
	0x03D44984 LDR X1, [X23]
	0x03D44988 LDR X8, [X8 + 0xB8]
	0x03D4498C ADD X0, X8, 0x8
	0x03D44990 BL 0x266C93C
	0x03D44994 STR W31, [X0 + 0xB4]
	0x03D44998 LDR X8, [X21]
	0x03D4499C LDR X1, [X23]
	0x03D449A0 LDR X8, [X8 + 0xB8]
	0x03D449A4 ADD X0, X8, 0x8
	0x03D449A8 BL 0x266C93C
	0x03D449AC MOV X19, X0
	0x03D449B0 MOVZ W0, 0x2
	0x03D449B4 MOV X1, X31
	0x03D449B8 BL 0x3E0007C
	0x03D449BC STR X0, [X19 + 0xB8]
	0x03D449C0 LDR X8, [X21]
	0x03D449C4 LDR X1, [X25]
	0x03D449C8 LDR X8, [X8 + 0xB8]
	0x03D449CC ADD X0, X8, 0x18
	0x03D449D0 BL 0x266D23C
	0x03D449D4 MOV X19, X0
	0x03D449D8 ADD X8, X31, 0x40
	0x03D449DC MOVZ W0, 0x3
	0x03D449E0 MOV X1, X31
	0x03D449E4 BL 0x3E0017C
	0x03D449E8 LDR X8, [X31 + 0x50]
	0x03D449EC LDR V0, [X31 + 0x4]
	0x03D449F0 STR X8, [X31 + 0x90]
	0x03D449F4 STR V0, [X31 + 0x8]
	0x03D449F8 STR X8, [X19 + 0x10]
	0x03D449FC STR V0, [X19]
	0x03D44A00 LDR X8, [X21]
	0x03D44A04 LDR X1, [X25]
	0x03D44A08 LDR X8, [X8 + 0xB8]
	0x03D44A0C ADD X0, X8, 0x18
	0x03D44A10 BL 0x266D23C
	0x03D44A14 MOV X19, X0
	0x03D44A18 MOVZ W0, 0x3
	0x03D44A1C MOV X1, X31
	0x03D44A20 BL 0x3E002D4
	0x03D44A24 STP X0, X1, [X19 + 0x18]
	0x03D44A28 LDR X8, [X21]
	0x03D44A2C LDR X1, [X24]
	0x03D44A30 LDR X8, [X8 + 0xB8]
	0x03D44A34 ADD X0, X8, 0x10
	0x03D44A38 BL 0x266CDBC
	0x03D44A3C STR W31, [X0 + 0x18]
	0x03D44A40 LDR X8, [X21]
	0x03D44A44 LDR X1, [X22]
	0x03D44A48 LDR X0, [X8 + 0xB8]
	0x03D44A4C BL 0x266C4BC
	0x03D44A50 STP X31, X31, [X0 + 0x28]
	0x03D44A54 STR X31, [X0 + 0x20]
	0x03D44A58 STR W31, [X0 + 0x38]
	0x03D44A5C LDR X8, [X21]
	0x03D44A60 LDR X1, [X23]
	0x03D44A64 LDR X8, [X8 + 0xB8]
	0x03D44A68 ADD X0, X8, 0x8
	0x03D44A6C BL 0x266C93C
	0x03D44A70 MOV X19, X0
	0x03D44A74 MOVZ W0, 0x2
	0x03D44A78 MOV X1, X31
	0x03D44A7C BL 0x3E0007C
	0x03D44A80 STR X0, [X19 + 0xC0]
	0x03D44A84 LDR X8, [X21]
	0x03D44A88 LDR X1, [X25]
	0x03D44A8C LDR X8, [X8 + 0xB8]
	0x03D44A90 ADD X0, X8, 0x18
	0x03D44A94 BL 0x266D23C
	0x03D44A98 MOV X19, X0
	0x03D44A9C ADD X8, X31, 0x40
	0x03D44AA0 MOV X0, X31
	0x03D44AA4 BL 0x3DFFC9C
	0x03D44AA8 LDR W8, [X31 + 0x50]
	0x03D44AAC LDR V0, [X31 + 0x4]
	0x03D44AB0 STR W8, [X31 + 0x30]
	0x03D44AB4 STR V0, [X31 + 0x2]
	0x03D44AB8 STR W8, [X19 + 0x38]
	0x03D44ABC STUR V0, [X19 + 0x28]
	0x03D44AC0 LDR X8, [X21]
	0x03D44AC4 LDR X1, [X26]
	0x03D44AC8 LDR X8, [X8 + 0xB8]
	0x03D44ACC ADD X0, X8, 0x20
	0x03D44AD0 BL 0x266D6BC
	0x03D44AD4 LDR X8, [X28]
	0x03D44AD8 MOV X19, X0
	0x03D44ADC MOV X0, X8
	0x03D44AE0 BL 0x1C16F10
	0x03D44AE4 LDR X1, [X27]
	0x03D44AE8 MOV X20, X0
	0x03D44AEC BL 0x308434C
	0x03D44AF0 FMOV S0, W31
	0x03D44AF4 MOV X0, X31
	0x03D44AF8 BL 0x3E00574
	0x03D44AFC CBZ X20, 0x3D44FA0
	0x03D44B00 ADRP X29, 0x421000
	0x03D44B04 LDR X29, [X29 + 0x330]
	0x03D44B08 LDR W10, [X20 + 0x1C]
	0x03D44B0C LDR X8, [X20 + 0x10]

ISIL:
	001 Subtract X31, X31, 400
	002 Move [X31+240], D15
	003 Move [X31+248], D14
	004 Move [X31+256], D13
	005 Move [X31+264], D12
	006 Move [X31+272], D11
	007 Move [X31+280], D10
	008 Move [X31+288], D9
	009 Move [X31+296], D8
	010 Move [X31+304], X29
	011 Move [X31+312], X30
	012 Move [X31+320], X28
	013 Move [X31+328], X27
	014 Move [X31+336], X26
	015 Move [X31+344], X25
	016 Move [X31+352], X24
	017 Move [X31+360], X23
	018 Move [X31+368], X22
	019 Move [X31+376], X21
	020 Move [X31+384], X20
	021 Move [X31+392], X19
	022 Move X27, 0x6A4000
	023 Move X26, 0x3B0000
	024 Move W8, [X27+2952]
	025 Move X26, [X26+1432]
	026 Move X23, X6
	027 Move X24, X5
	028 Move W22, W4
	029 Move X20, X3
	030 Move W21, W2
	031 Move X25, X1
	032 Move X19, X0
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {48}
	037 Move X0, 0x3B0000
	038 Move X0, [X0+2600]
	039 Call 0x1C17CF4
	040 Move X0, 0x3B0000
	041 Move X0, [X0+1432]
	042 Call 0x1C17CF4
	043 Move X0, 0x422000
	044 Move X0, [X0+608]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X27+2952], W8
	048 Move X0, [X26]
	049 Move [X31+208], X31
	050 Move [X31+216], X31
	051 Move [X31+224], X31
	052 Move X27, 0x3B0000
	053 Move W8, [X0+224]
	054 Move X26, [X25+136]
	055 Move X27, [X27+2600]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X26
	060 Move X1, X31
	061 Move X2, X31
	062 Call Object.op_Inequality, X0, X1
	063 Move X8, [X27]
	064 Move W27, W0
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 And W0, W27, 1
	071 Move X1, X31
	072 Call Debug.Assert, X0
	073 Move [X24], W31
	074 Move [X23], W31
	075 Compare X26, 0
	076 JumpIfEqual {289}
	077 Move X8, [X26+40]
	078 Compare X8, 0
	079 JumpIfEqual {289}
	080 Move X9, 0x422000
	081 Move X9, [X9+608]
	082 Move X28, [X8+24]
	083 Move X0, [X9]
	084 Move W1, W28
	085 Call 0x1C17D6C
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X27, X0
	088 And X11, X28, 0
	089 Move X8, X31
	090 Move X9, X31
	091 Move X10, X31
	092 Move X11, X11
	093 ShiftRight X11, 58
	094 And X11, X11, 0x1FFFFFF
	095 Move X12, [X26+40]
	096 Compare X12, 0
	097 JumpIfEqual {289}
	098 Move W13, [X12+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Add X16, X12, X9
	101 Move W17, [X16+40]
	102 Move W12, [X16+44]
	103 Move X0, [X16+32]
	104 Move X13, [X16+48]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Move W14, [X16+60]
	107 Move [X31+200], W17
	108 Move [X31+192], X0
	109 Move V0, [X16+4]
	110 Move [X31+8], V0
	111 Compare X27, 0
	112 JumpIfEqual {289}
	113 Move W16, [X31+200]
	114 Move X17, [X31+192]
	115 Move V0, [X31+8]
	116 Move [X31+184], W16
	117 Move [X31+176], X17
	118 Move [X31+10], V0
	119 Move W16, [X27+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X17, [X31+176]
	122 Move W0, [X31+184]
	123 NotImplemented "Instruction REV not yet implemented."
	124 Add X16, X27, X8
	125 Move W15, W15
	126 ShiftRight W15, 16
	127 And W15, W15, 0x7FFFFFFF
	128 Move [X16+48], X13
	129 Move [X16+56], X31
	130 Move [X16+64], W14
	131 Move [X16+68], W31
	132 Move [X16+72], W15
	133 Move [X16+32], X17
	134 Move [X16+40], W0
	135 Move [X16+44], W12
	136 Move V0, [X31+10]
	137 Add X8, X8, 64
	138 Add X10, X10, 1
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Add X9, X9, 48
	141 Move [X16+92], W31
	142 Move [X16+76], V0
	143 Move W8, [X25+220]
	144 Move W9, [X25+224]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move W10, [X25+228]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move W10, [X25+232]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 NotImplemented "Instruction SCVTF not yet implemented."
	152 NotImplemented "Instruction SCVTF not yet implemented."
	153 Move [X31+52], S0
	154 Move [X31+60], S1
	155 Move S0, [X25+228]
	156 Move S1, [X25+232]
	157 Move V3, [X26+64]
	158 Move V2, [X26+68]
	159 Move X23, [X26+48]
	160 Move S10, [X25]
	161 Move S11, [X25+4]
	162 Move S12, [X25+8]
	163 Move S13, [X25+12]
	164 Move V14, [X25+32]
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 Move V15, [X25+44]
	167 Add X0, X25, 272
	168 Move X1, X31
	169 Move [X31+44], S2
	170 Move [X31+52], S3
	171 NotImplemented "Instruction SCVTF not yet implemented."
	172 NotImplemented "Instruction SCVTF not yet implemented."
	173 Call ColorPage.ToNativeColorPage, X0
	174 Move V0, [X31+52]
	175 Move X2, X0
	176 Add X8, X31, 128
	177 Move X0, X27
	178 Move [X31+4], S0
	179 Move [X31+12], S8
	180 Move V0, [X31+56]
	181 Move X1, X23
	182 Move V2, V10
	183 Move V3, V11
	184 Move [X31], S0
	185 Move S1, [X31+44]
	186 Move S0, [X31+48]
	187 Move V4, V12
	188 Move V5, V13
	189 Move W3, W22
	190 Move X4, X31
	191 Move [X31+28], S15
	192 Move [X31+20], X24
	193 Move [X31+12], S9
	194 Move [X31+20], S14
	195 Call MeshBuilderNative.MakeVectorGraphics9SliceBackground, X0, X1, V0, V1, X2, X3, X4, X5, X6
	196 Move V0, [X31+8]
	197 Move X8, [X31+144]
	198 Move [X31+13], V0
	199 Move [X31+224], X8
	200 Move TEMP, X21
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {212}
	204 Move V0, [X31+13]
	205 Move X8, [X31+224]
	206 And X2, X20, 0
	207 Add X1, X31, 96
	208 Move X0, X19
	209 Move [X31+6], V0
	210 Move [X31+112], X8
	211 Call UIRStylePainter.BuildGradientEntryFromNativeMesh, X0, X1, X2
	212 Move V0, [X31+13]
	213 Move X8, [X31+224]
	214 Add X1, X31, 64
	215 Move X0, X19
	216 Move X2, X31
	217 Move X3, X31
	218 Move W4, W31
	219 Move X5, X31
	220 Move W6, W31
	221 Move W7, W31
	222 Move [X31+4], V0
	223 Move [X31+80], X8
	224 Call UIRStylePainter.BuildEntryFromNativeMesh, X0, X1, X2, X3, X4, X5, X6, X7, X8
	225 Move X20, [X31+384]
	226 Move X19, [X31+392]
	227 Move X22, [X31+368]
	228 Move X21, [X31+376]
	229 Move X24, [X31+352]
	230 Move X23, [X31+360]
	231 Move X26, [X31+336]
	232 Move X25, [X31+344]
	233 Move X28, [X31+320]
	234 Move X27, [X31+328]
	235 Move X29, [X31+304]
	236 Move X30, [X31+312]
	237 Move D9, [X31+288]
	238 Move D8, [X31+296]
	239 Move D11, [X31+272]
	240 Move D10, [X31+280]
	241 Move D13, [X31+256]
	242 Move D12, [X31+264]
	243 Move D15, [X31+240]
	244 Move D14, [X31+248]
	245 Add X31, X31, 400
	246 Return 
	247 Move X8, [X26+48]
	248 Move V1, [X26+64]
	249 Move V0, [X26+68]
	250 Move S10, [X25]
	251 Move S11, [X25+4]
	252 Move S12, [X25+8]
	253 Move S13, [X25+12]
	254 Move S14, [X25+16]
	255 Move S15, [X25+20]
	256 Move X29, [X25+24]
	257 Move W26, [X25+152]
	258 Move V8, [X25+32]
	259 NotImplemented "Instruction LDUR not yet implemented."
	260 Move V9, [X25+44]
	261 Add X0, X25, 272
	262 Move X1, X31
	263 Move [X31+56], X8
	264 Move [X31+48], S0
	265 Move [X31+56], S1
	266 Call ColorPage.ToNativeColorPage, X0
	267 Move X1, [X31+56]
	268 Move S1, [X31+48]
	269 Move S0, [X31+52]
	270 Move X3, X0
	271 Add X8, X31, 128
	272 Move X0, X27
	273 Move V2, V10
	274 Move V3, V11
	275 Move V4, V12
	276 Move V5, V13
	277 Move W2, W26
	278 Move W4, W22
	279 Move X5, X24
	280 Move X6, X23
	281 Move X7, X31
	282 Move [X31+28], S9
	283 Move [X31+20], X28
	284 Move [X31+16], S8
	285 Move [X31+8], X29
	286 Move [X31], S14
	287 Move [X31+8], S15
	288 Call MeshBuilderNative.MakeVectorGraphicsStretchBackground, X0, X1, V0, V1, X2, X3, X4, X5, X6, X7, X8, X9
	289 Call 0x1C17F20
	290 Call 0x1C17F28

Method: System.Void Reset()

Disassembly:
	0x03D44B10 LDR X9, [X29]
	0x03D44B14 ADD W10, W10, 0x1
	0x03D44B18 STR W10, [X20 + 0x1C]
	0x03D44B1C CBZ X8, 0x3D44FA0
	0x03D44B20 LDRSW X10, [X20 + 0x18]
	0x03D44B24 LDR W11, [X8 + 0x18]
	0x03D44B28 MOV X1, X0
	0x03D44B2C CMP W10, W11
	0x03D44B30 B.CS 0x3D44B48
	0x03D44B34 ADD W9, W10, 0x1
	0x03D44B38 ADD X8, X8, X10, 0x3, LSL
	0x03D44B3C STR W9, [X20 + 0x18]
	0x03D44B40 STR X1, [X8 + 0x20]
	0x03D44B44 B 0x3D44B5C
	0x03D44B48 LDR X8, [X9 + 0x20]
	0x03D44B4C MOV X0, X20
	0x03D44B50 LDR X8, [X8 + 0xC0]
	0x03D44B54 LDR X2, [X8 + 0x70]
	0x03D44B58 BL 0x3084B44
	0x03D44B5C STR X20, [X19]
	0x03D44B60 LDR X8, [X21]
	0x03D44B64 LDR X1, [X26]
	0x03D44B68 LDR X8, [X8 + 0xB8]
	0x03D44B6C ADD X0, X8, 0x20
	0x03D44B70 BL 0x266D6BC
	0x03D44B74 LDR X8, [X28]
	0x03D44B78 MOV X19, X0
	0x03D44B7C MOV X0, X8
	0x03D44B80 BL 0x1C16F10
	0x03D44B84 LDR X1, [X27]
	0x03D44B88 MOV X20, X0
	0x03D44B8C BL 0x308434C
	0x03D44B90 FMOV S0, W31
	0x03D44B94 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6A4000
	005 Move W8, [X20+2953]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x422000
	012 Move X0, [X0+720]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2953], W8
	016 Move X0, X19
	017 Call UIRStylePainter.ValidateMeshWriteData, X0
	018 Move X8, [X19+24]
	019 Compare X8, 0
	020 JumpIfEqual {43}
	021 Move W2, [X8+24]
	022 Move W9, [X8+28]
	023 Add W9, W9, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move [X8+24], W31
	026 Move [X8+28], W9
	027 Move X0, [X8+16]
	028 Move W1, W31
	029 Move X3, X31
	030 Call Array.Clear, X0, X1, X2
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move [X19+176], X31
	033 Move [X19+232], W31
	034 Move [X19+144], V0
	035 Move [X19+152], V0
	036 Move [X19+8], V0
	037 Move [X19+272], X31
	038 Move [X19+280], X31
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 Call 0x1C17F20

Method: System.Void ValidateMeshWriteData()

Disassembly:
	0x03D44B98 BL 0x3E00574
	0x03D44B9C CBZ X20, 0x3D44FA0
	0x03D44BA0 LDR W10, [X20 + 0x1C]
	0x03D44BA4 LDR X8, [X20 + 0x10]
	0x03D44BA8 LDR X9, [X29]
	0x03D44BAC ADD W10, W10, 0x1
	0x03D44BB0 STR W10, [X20 + 0x1C]
	0x03D44BB4 CBZ X8, 0x3D44FA0
	0x03D44BB8 LDRSW X10, [X20 + 0x18]
	0x03D44BBC LDR W11, [X8 + 0x18]
	0x03D44BC0 ADRP X29, 0x3D9000
	0x03D44BC4 ADRP X28, 0x3D9000
	0x03D44BC8 ADRP X27, 0x421000
	0x03D44BCC LDR X29, [X29 + 0x7E0]
	0x03D44BD0 LDR X28, [X28 + 0x7D8]
	0x03D44BD4 LDR X27, [X27 + 0x350]
	0x03D44BD8 MOV X1, X0
	0x03D44BDC CMP W10, W11
	0x03D44BE0 B.CS 0x3D44BF8
	0x03D44BE4 ADD W9, W10, 0x1
	0x03D44BE8 ADD X8, X8, X10, 0x3, LSL
	0x03D44BEC STR W9, [X20 + 0x18]
	0x03D44BF0 STR X1, [X8 + 0x20]
	0x03D44BF4 B 0x3D44C0C
	0x03D44BF8 LDR X8, [X9 + 0x20]
	0x03D44BFC MOV X0, X20
	0x03D44C00 LDR X8, [X8 + 0xC0]
	0x03D44C04 LDR X2, [X8 + 0x70]
	0x03D44C08 BL 0x3084B44
	0x03D44C0C STR X20, [X19 + 0x8]
	0x03D44C10 LDR X8, [X21]
	0x03D44C14 LDR X1, [X26]
	0x03D44C18 LDR X8, [X8 + 0xB8]
	0x03D44C1C ADD X0, X8, 0x20
	0x03D44C20 BL 0x266D6BC
	0x03D44C24 LDR X8, [X29]
	0x03D44C28 MOV X19, X0
	0x03D44C2C MOV X0, X8
	0x03D44C30 BL 0x1C16F10
	0x03D44C34 LDR X1, [X28]
	0x03D44C38 MOV X20, X0
	0x03D44C3C BL 0x3064BA0
	0x03D44C40 LDR X0, [X27]
	0x03D44C44 MOV X1, X31
	0x03D44C48 BL 0x3E05714
	0x03D44C4C CBZ X20, 0x3D44FA0
	0x03D44C50 ADRP X10, 0x3D9000
	0x03D44C54 LDR X10, [X10 + 0x7F0]
	0x03D44C58 LDR W11, [X20 + 0x1C]
	0x03D44C5C LDR X9, [X20 + 0x10]
	0x03D44C60 LDR X10, [X10]
	0x03D44C64 ADD W11, W11, 0x1
	0x03D44C68 STR W11, [X20 + 0x1C]
	0x03D44C6C CBZ X9, 0x3D44FA0
	0x03D44C70 LDRSW X11, [X20 + 0x18]
	0x03D44C74 LDR W12, [X9 + 0x18]
	0x03D44C78 ADRP X28, 0x421000
	0x03D44C7C ADRP X27, 0x421000
	0x03D44C80 LDR X28, [X28 + 0x348]
	0x03D44C84 LDR X27, [X27 + 0x340]
	0x03D44C88 MOV X8, X0
	0x03D44C8C MOV X2, X1
	0x03D44C90 CMP W11, W12
	0x03D44C94 B.CS 0x3D44CAC
	0x03D44C98 ADD W10, W11, 0x1
	0x03D44C9C ADD X9, X9, X11, 0x4, LSL
	0x03D44CA0 STR W10, [X20 + 0x18]
	0x03D44CA4 STP X8, X2, [X9 + 0x20]
	0x03D44CA8 B 0x3D44CC4
	0x03D44CAC LDR X9, [X10 + 0x20]
	0x03D44CB0 MOV X0, X20
	0x03D44CB4 MOV X1, X8
	0x03D44CB8 LDR X9, [X9 + 0xC0]
	0x03D44CBC LDR X3, [X9 + 0x70]
	0x03D44CC0 BL 0x30653AC
	0x03D44CC4 STR X20, [X19 + 0x10]
	0x03D44CC8 LDR X8, [X21]
	0x03D44CCC LDR X1, [X26]
	0x03D44CD0 LDR X8, [X8 + 0xB8]
	0x03D44CD4 ADD X0, X8, 0x20
	0x03D44CD8 BL 0x266D6BC
	0x03D44CDC LDR X8, [X28]
	0x03D44CE0 MOV X19, X0
	0x03D44CE4 MOV X0, X8
	0x03D44CE8 BL 0x1C16F10
	0x03D44CEC LDR X1, [X27]
	0x03D44CF0 MOV X20, X0
	0x03D44CF4 BL 0x2FB6CB0
	0x03D44CF8 MOV W0, W31
	0x03D44CFC MOV X1, X31
	0x03D44D00 BL 0x3DE3A78
	0x03D44D04 CBZ X20, 0x3D44FA0
	0x03D44D08 ADRP X9, 0x421000
	0x03D44D0C LDR X9, [X9 + 0x338]
	0x03D44D10 LDR W10, [X20 + 0x1C]
	0x03D44D14 LDR X8, [X20 + 0x10]
	0x03D44D18 LDR X9, [X9]
	0x03D44D1C ADD W10, W10, 0x1
	0x03D44D20 STR W10, [X20 + 0x1C]
	0x03D44D24 CBZ X8, 0x3D44FA0
	0x03D44D28 LDRSW X10, [X20 + 0x18]
	0x03D44D2C LDR W11, [X8 + 0x18]
	0x03D44D30 CMP W10, W11
	0x03D44D34 B.CS 0x3D44D4C
	0x03D44D38 ADD W9, W10, 0x1
	0x03D44D3C ADD X8, X8, X10, 0x2, LSL
	0x03D44D40 STR W9, [X20 + 0x18]
	0x03D44D44 STR W0, [X8 + 0x20]
	0x03D44D48 B 0x3D44D64
	0x03D44D4C LDR X8, [X9 + 0x20]
	0x03D44D50 AND X1, X0, 0x0
	0x03D44D54 MOV X0, X20
	0x03D44D58 LDR X8, [X8 + 0xC0]
	0x03D44D5C LDR X2, [X8 + 0x70]
	0x03D44D60 BL 0x2FB74AC
	0x03D44D64 STR X20, [X19 + 0x18]
	0x03D44D68 LDR X8, [X21]
	0x03D44D6C LDR X1, [X25]
	0x03D44D70 LDR X8, [X8 + 0xB8]
	0x03D44D74 ADD X0, X8, 0x18
	0x03D44D78 BL 0x266D23C
	0x03D44D7C MOV X19, X0
	0x03D44D80 ADD X8, X31, 0x8
	0x03D44D84 MOVZ W0, 0x3
	0x03D44D88 MOV X1, X31
	0x03D44D8C BL 0x3E003D8
	0x03D44D90 LDR X8, [X31 + 0x18]
	0x03D44D94 LDUR V0, [X31 + 0x8]
	0x03D44D98 STR X8, [X31 + 0x50]
	0x03D44D9C STR V0, [X31 + 0x4]
	0x03D44DA0 STUR X8, [X19 + 0x4C]
	0x03D44DA4 STUR V0, [X19 + 0x3C]
	0x03D44DA8 LDR X8, [X21]
	0x03D44DAC LDR X1, [X24]
	0x03D44DB0 LDR X8, [X8 + 0xB8]
	0x03D44DB4 ADD X0, X8, 0x10
	0x03D44DB8 BL 0x266CDBC
	0x03D44DBC FMOV V0.4S, 0x0
	0x03D44DC0 STUR V0, [X0 + 0x1C]
	0x03D44DC4 LDR X8, [X21]
	0x03D44DC8 LDR X1, [X22]
	0x03D44DCC LDR X0, [X8 + 0xB8]
	0x03D44DD0 BL 0x266C4BC
	0x03D44DD4 STR X31, [X0 + 0x40]
	0x03D44DD8 LDR X8, [X21]
	0x03D44DDC LDR X1, [X22]
	0x03D44DE0 LDR X0, [X8 + 0xB8]
	0x03D44DE4 BL 0x266C4BC
	0x03D44DE8 STP X31, X31, [X0 + 0x48]
	0x03D44DEC LDR X8, [X21]
	0x03D44DF0 LDR X1, [X22]
	0x03D44DF4 LDR X0, [X8 + 0xB8]
	0x03D44DF8 BL 0x266C4BC
	0x03D44DFC STR W31, [X0 + 0x58]
	0x03D44E00 LDR X8, [X21]
	0x03D44E04 LDR X1, [X24]
	0x03D44E08 LDR X8, [X8 + 0xB8]
	0x03D44E0C ADD X0, X8, 0x10
	0x03D44E10 BL 0x266CDBC
	0x03D44E14 STR W31, [X0 + 0x2C]
	0x03D44E18 LDR X8, [X21]
	0x03D44E1C LDR X1, [X22]
	0x03D44E20 LDR X0, [X8 + 0xB8]
	0x03D44E24 BL 0x266C4BC
	0x03D44E28 MOV X19, X0
	0x03D44E2C FMOV S0, W31
	0x03D44E30 MOV X0, X31
	0x03D44E34 BL 0x3DFD518
	0x03D44E38 STUR X0, [X19 + 0x5C]
	0x03D44E3C LDR X8, [X21]
	0x03D44E40 LDR X1, [X24]
	0x03D44E44 LDR X8, [X8 + 0xB8]
	0x03D44E48 ADD X0, X8, 0x10
	0x03D44E4C BL 0x266CDBC
	0x03D44E50 STR W31, [X0 + 0x30]
	0x03D44E54 LDR X8, [X21]
	0x03D44E58 LDR X1, [X24]
	0x03D44E5C LDR X8, [X8 + 0xB8]
	0x03D44E60 ADD X0, X8, 0x10
	0x03D44E64 BL 0x266CDBC
	0x03D44E68 STR W31, [X0 + 0x34]
	0x03D44E6C LDR X8, [X21]
	0x03D44E70 LDR X1, [X24]
	0x03D44E74 LDR X8, [X8 + 0xB8]
	0x03D44E78 ADD X0, X8, 0x10
	0x03D44E7C BL 0x266CDBC
	0x03D44E80 STR W31, [X0 + 0x38]
	0x03D44E84 LDR X8, [X21]
	0x03D44E88 LDR X1, [X24]
	0x03D44E8C LDR X8, [X8 + 0xB8]
	0x03D44E90 ADD X0, X8, 0x10
	0x03D44E94 BL 0x266CDBC
	0x03D44E98 MOVZ W8, 0x3F800000
	0x03D44E9C STR W8, [X0 + 0x3C]
	0x03D44EA0 LDR X8, [X21]
	0x03D44EA4 LDR X1, [X24]
	0x03D44EA8 LDR X8, [X8 + 0xB8]
	0x03D44EAC ADD X0, X8, 0x10
	0x03D44EB0 BL 0x266CDBC
	0x03D44EB4 STR W31, [X0 + 0x40]
	0x03D44EB8 LDR X8, [X21]
	0x03D44EBC LDR X1, [X22]
	0x03D44EC0 LDR X0, [X8 + 0xB8]
	0x03D44EC4 BL 0x266C4BC
	0x03D44EC8 STR W31, [X0 + 0x64]
	0x03D44ECC LDR X8, [X21]
	0x03D44ED0 LDR X1, [X22]
	0x03D44ED4 LDR X0, [X8 + 0xB8]
	0x03D44ED8 BL 0x266C4BC
	0x03D44EDC STP X31, X31, [X0 + 0x68]
	0x03D44EE0 LDR X8, [X21]
	0x03D44EE4 LDR X1, [X22]
	0x03D44EE8 LDR X0, [X8 + 0xB8]
	0x03D44EEC BL 0x266C4BC
	0x03D44EF0 STR W31, [X0 + 0x78]
	0x03D44EF4 LDR X8, [X21]
	0x03D44EF8 LDR X1, [X24]
	0x03D44EFC LDR X8, [X8 + 0xB8]
	0x03D44F00 ADD X0, X8, 0x10
	0x03D44F04 BL 0x266CDBC
	0x03D44F08 STR W31, [X0 + 0x44]
	0x03D44F0C LDR X8, [X21]
	0x03D44F10 LDR X1, [X22]
	0x03D44F14 LDR X0, [X8 + 0xB8]
	0x03D44F18 BL 0x266C4BC
	0x03D44F1C STR W31, [X0 + 0x7C]
	0x03D44F20 LDR X8, [X21]
	0x03D44F24 LDR X1, [X22]
	0x03D44F28 LDR X0, [X8 + 0xB8]
	0x03D44F2C BL 0x266C4BC
	0x03D44F30 STR W31, [X0 + 0x80]
	0x03D44F34 LDR X8, [X21]
	0x03D44F38 LDR X1, [X23]
	0x03D44F3C LDR X8, [X8 + 0xB8]
	0x03D44F40 ADD X0, X8, 0x8
	0x03D44F44 BL 0x266C93C
	0x03D44F48 MOV X19, X0
	0x03D44F4C MOVZ W0, 0x2
	0x03D44F50 MOV X1, X31
	0x03D44F54 BL 0x3E0007C
	0x03D44F58 STR X0, [X19 + 0xC8]
	0x03D44F5C LDR X8, [X21]
	0x03D44F60 LDR X1, [X22]
	0x03D44F64 LDR X0, [X8 + 0xB8]
	0x03D44F68 BL 0x266C4BC
	0x03D44F6C MOV X19, X0
	0x03D44F70 FMOV S0, W31
	0x03D44F74 MOV X0, X31
	0x03D44F78 BL 0x3DFD518
	0x03D44F7C STUR X0, [X19 + 0x84]
	0x03D44F80 LDP X20, X19, [X31 + 0x180]
	0x03D44F84 LDP X22, X21, [X31 + 0x170]
	0x03D44F88 LDP X24, X23, [X31 + 0x160]
	0x03D44F8C LDP X26, X25, [X31 + 0x150]
	0x03D44F90 LDP X28, X27, [X31 + 0x140]
	0x03D44F94 LDP X29, X30, [X31 + 0x130]
	0x03D44F98 ADD X31, X31, 0x190
	0x03D44F9C RET
	0x03D44FA0 BL 0x1C16F20
	0x03D44FA4 STR X30, [X31 - 0x20]!
	0x03D44FA8 STP X20, X19, [X31 + 0x10]
	0x03D44FAC ADRP X20, 0x6A3000
	0x03D44FB0 ADRP X19, 0x420000
	0x03D44FB4 LDRB W8, [X20 + 0xB90]
	0x03D44FB8 LDR X19, [X19 + 0x358]
	0x03D44FBC TBNZ X8, 0x0, 0x3D44FE0
	0x03D44FC0 ADRP X0, 0x420000
	0x03D44FC4 LDR X0, [X0 + 0x358]
	0x03D44FC8 BL 0x1C16CF4
	0x03D44FCC ADRP X0, 0x421000
	0x03D44FD0 LDR X0, [X0 + 0x358]
	0x03D44FD4 BL 0x1C16CF4
	0x03D44FD8 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+224], X29
	003 Move [X31+232], X30
	004 Move [X31+240], X28
	005 Move [X31+248], X27
	006 Move [X31+256], X26
	007 Move [X31+264], X25
	008 Move [X31+272], X24
	009 Move [X31+280], X23
	010 Move [X31+288], X22
	011 Move [X31+296], X21
	012 Move [X31+304], X20
	013 Move [X31+312], X19
	014 Move X20, 0x6A4000
	015 Move W8, [X20+2954]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {47}
	021 Move X0, 0x3B0000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move X0, 0x422000
	025 Move X0, [X0+456]
	026 Call 0x1C17CF4
	027 Move X0, 0x421000
	028 Move X0, [X0+1608]
	029 Call 0x1C17CF4
	030 Move X0, 0x3B0000
	031 Move X0, [X0+2760]
	032 Call 0x1C17CF4
	033 Move X0, 0x422000
	034 Move X0, [X0+728]
	035 Call 0x1C17CF4
	036 Move X0, 0x422000
	037 Move X0, [X0+736]
	038 Call 0x1C17CF4
	039 Move X0, 0x3B1000
	040 Move X0, [X0+1544]
	041 Call 0x1C17CF4
	042 Move X0, 0x422000
	043 Move X0, [X0+744]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+2954], W8
	047 Move [X31+92], W31
	048 Move W8, [X19+232]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X26, 0x422000
	051 Move X21, 0x421000
	052 Move X22, 0x421000
	053 Move X26, [X26+456]
	054 Move X21, [X21+1560]
	055 Move X22, [X22+1552]
	056 Move W20, W31
	057 Move X29, 0x6A4000
	058 Move W28, 1
	059 Move X27, 0x6A4000
	060 Move X0, [X19+224]
	061 Compare X0, 0
	062 JumpIfEqual {294}
	063 Move X2, [X26]
	064 Move W1, W20
	065 Call List`1<Object>.get_Item, X0, X1
	066 Compare X0, 0
	067 JumpIfEqual {294}
	068 Move X1, X31
	069 Move X23, X0
	070 Call MeshWriteData.get_vertexCount, X0
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X25, X23
	073 Add X25, X25, 68
	074 Move W24, [X25]
	075 Move X0, X23
	076 Move X1, X31
	077 Call MeshWriteData.get_vertexCount, X0
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X8, 0x3B0000
	080 Move X8, [X8+2760]
	081 Move W1, 5
	082 Move X0, [X8]
	083 Call 0x1C17D6C
	084 Compare X0, 0
	085 JumpIfEqual {294}
	086 Move W8, [X0+24]
	087 Move X24, X0
	088 Compare W8, 0
	089 JumpIfEqual {293}
	090 Move X8, 0x422000
	091 Move X8, [X8+736]
	092 Move X0, X23
	093 Move X1, X31
	094 Move X8, [X8]
	095 Move [X24+32], X8
	096 Call MeshWriteData.get_vertexCount, X0
	097 Move [X31+92], W0
	098 Add X0, X31, 92
	099 Move X1, X31
	100 Call Int32.ToString, X0
	101 Move W8, [X24+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move [X24+40], X0
	105 Move X8, 0x422000
	106 Move X8, [X8+728]
	107 Move X0, X25
	108 Move X1, X31
	109 Move X8, [X8]
	110 Move [X24+48], X8
	111 Call Int32.ToString, X0
	112 Move W8, [X24+24]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move [X24+56], X0
	116 Move X8, 0x3B1000
	117 Move X8, [X8+1544]
	118 Move X0, X24
	119 Move X1, X31
	120 Move X8, [X8]
	121 Move [X24+64], X8
	122 Call String.Concat, X0
	123 Move X8, 0x3B0000
	124 Move X8, [X8+2600]
	125 Move X24, X0
	126 Move X8, [X8]
	127 Move W9, [X8+224]
	128 Compare W9, 0
	129 JumpIfNotEqual {132}
	130 Move X0, X8
	131 Call 0x1C17DFC
	132 Move X0, X24
	133 Move X1, X31
	134 Call Debug.LogError, X0
	135 Move X8, 0x421000
	136 Move X8, [X8+1608]
	137 Add X24, X23, 16
	138 Move X0, X24
	139 Move W1, W31
	140 Move X2, [X8]
	141 Add X8, X31, 160
	142 Call NativeSlice`1<Vertex>.get_Item, X0, X1
	143 Move V0, [X31+160]
	144 Move V1, [X31+176]
	145 Move V2, [X31+192]
	146 Move V3, [X31+208]
	147 Move [X31+96], V0
	148 Move [X31+104], V1
	149 Move [X31+128], V2
	150 Move [X31+136], V3
	151 Move W25, [X23+68]
	152 Move X0, X23
	153 Move X1, X31
	154 Call MeshWriteData.get_vertexCount, X0
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move V0, [X31+96]
	157 Move V1, [X31+112]
	158 Move V2, [X31+128]
	159 Move V3, [X31+144]
	160 Move W8, [X27+2740]
	161 Move [X31+16], V0
	162 Move [X31+24], V1
	163 Move [X31+48], V2
	164 Move [X31+56], V3
	165 Compare W8, 0
	166 JumpIfNotEqual {170}
	167 Move X0, X22
	168 Call 0x1C17CF4
	169 Move [X27+2740], W28
	170 Move W1, [X23+68]
	171 Add X2, X31, 160
	172 Move X0, X24
	173 Add W8, W1, 1
	174 Move [X23+68], W8
	175 Move X3, [X22]
	176 Move V0, [X31+16]
	177 Move V1, [X31+32]
	178 Move V2, [X31+48]
	179 Move V3, [X31+64]
	180 Move [X31+160], V0
	181 Move [X31+168], V1
	182 Move [X31+192], V2
	183 Move [X31+200], V3
	184 Call NativeSlice`1<Vertex>.set_Item, X0, X1, X2
	185 Move X0, X23
	186 Move X1, X31
	187 Call MeshWriteData.get_indexCount, X0
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X25, X23
	190 Add X25, X25, 64
	191 Move W24, [X25]
	192 Move X0, X23
	193 Move X1, X31
	194 Call MeshWriteData.get_indexCount, X0
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X8, 0x3B0000
	197 Move X8, [X8+2760]
	198 Move W1, 5
	199 Move X0, [X8]
	200 Call 0x1C17D6C
	201 Compare X0, 0
	202 JumpIfEqual {294}
	203 Move W8, [X0+24]
	204 Move X24, X0
	205 Compare W8, 0
	206 JumpIfEqual {293}
	207 Move X8, 0x422000
	208 Move X8, [X8+744]
	209 Move X0, X23
	210 Move X1, X31
	211 Move X8, [X8]
	212 Move [X24+32], X8
	213 Call MeshWriteData.get_indexCount, X0
	214 Move [X31+92], W0
	215 Add X0, X31, 92
	216 Move X1, X31
	217 Call Int32.ToString, X0
	218 Move W8, [X24+24]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move [X24+40], X0
	222 Move X8, 0x422000
	223 Move X8, [X8+728]
	224 Move X0, X25
	225 Move X1, X31
	226 Move X8, [X8]
	227 Move [X24+48], X8
	228 Call Int32.ToString, X0
	229 Move W8, [X24+24]
	230 NotImplemented "Instruction CMP not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move [X24+56], X0
	233 Move X8, 0x3B1000
	234 Move X8, [X8+1544]
	235 Move X0, X24
	236 Move X1, X31
	237 Move X8, [X8]
	238 Move [X24+64], X8
	239 Call String.Concat, X0
	240 Move X8, 0x3B0000
	241 Move X8, [X8+2600]
	242 Move X24, X0
	243 Move X8, [X8]
	244 Move W9, [X8+224]
	245 Compare W9, 0
	246 JumpIfNotEqual {249}
	247 Move X0, X8
	248 Call 0x1C17DFC
	249 Move X0, X24
	250 Move X1, X31
	251 Call Debug.LogError, X0
	252 Move W24, [X23+64]
	253 Move X0, X23
	254 Move X1, X31
	255 Call MeshWriteData.get_indexCount, X0
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Add X24, X23, 32
	258 Move W8, [X29+2741]
	259 Compare W8, 0
	260 JumpIfNotEqual {264}
	261 Move X0, X21
	262 Call 0x1C17CF4
	263 Move [X29+2741], W28
	264 Move W1, [X23+64]
	265 Move X0, X24
	266 Move W2, W31
	267 Add W8, W1, 1
	268 Move [X23+64], W8
	269 Move X3, [X21]
	270 Call NativeSlice`1<UInt16>.set_Item, X0, X1, X2
	271 Move W25, [X23+64]
	272 Move X0, X23
	273 Move X1, X31
	274 Call MeshWriteData.get_indexCount, X0
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move W8, [X19+232]
	277 Add W20, W20, 1
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Move X20, [X31+304]
	280 Move X19, [X31+312]
	281 Move X22, [X31+288]
	282 Move X21, [X31+296]
	283 Move X24, [X31+272]
	284 Move X23, [X31+280]
	285 Move X26, [X31+256]
	286 Move X25, [X31+264]
	287 Move X28, [X31+240]
	288 Move X27, [X31+248]
	289 Move X29, [X31+224]
	290 Move X30, [X31+232]
	291 Add X31, X31, 320
	292 Return 
	293 Call 0x1C17F28
	294 Call 0x1C17F20

Method: System.Void GenerateStencilClipEntryForRoundedRectBackground()

Disassembly:
	0x03D43AF0 STUR X28, [X31 + 0x14]
	0x03D43AF4 STR S8, [X31 + 0x10]
	0x03D43AF8 STR X29, [X31 + 0x8]
	0x03D43AFC STP S14, S15, [X31]
	0x03D43B00 BL 0x3DBB440
	0x03D43B04 B 0x3D439D8
	0x03D43B08 BL 0x1C16F20
	0x03D43B0C BL 0x1C16F28
	0x03D43B10 STR X30, [X31 - 0x20]!
	0x03D43B14 STP X20, X19, [X31 + 0x10]
	0x03D43B18 ADRP X20, 0x6A4000
	0x03D43B1C LDRB W8, [X20 + 0xB89]
	0x03D43B20 MOV X19, X0
	0x03D43B24 TBNZ X8, 0x0, 0x3D43B3C
	0x03D43B28 ADRP X0, 0x422000
	0x03D43B2C LDR X0, [X0 + 0x2D0]
	0x03D43B30 BL 0x1C16CF4
	0x03D43B34 MOVZ W8, 0x1
	0x03D43B38 STRB W8, [X20 + 0xB89]
	0x03D43B3C MOV X0, X19
	0x03D43B40 BL 0x3D43B98
	0x03D43B44 LDR X8, [X19 + 0x18]
	0x03D43B48 CBZ X8, 0x3D43B94
	0x03D43B4C LDP W2, W9, [X8 + 0x18]
	0x03D43B50 ADD W9, W9, 0x1
	0x03D43B54 CMP W2, 0x1
	0x03D43B58 STP W31, W9, [X8 + 0x18]
	0x03D43B5C B.LT 0x3D43B70
	0x03D43B60 LDR X0, [X8 + 0x10]
	0x03D43B64 MOV W1, W31
	0x03D43B68 MOV X3, X31
	0x03D43B6C BL 0x339FA34
	0x03D43B70 MOVI V0.2D, 0x0
	0x03D43B74 STR X31, [X19 + 0xB0]
	0x03D43B78 STR W31, [X19 + 0xE8]
	0x03D43B7C STP V0, V0, [X19 + 0x90]
	0x03D43B80 STR V0, [X19 + 0x8]
	0x03D43B84 STP X31, X31, [X19 + 0x110]
	0x03D43B88 LDP X20, X19, [X31 + 0x10]
	0x03D43B8C LDR X30, [X31], #0x20
	0x03D43B90 RET
	0x03D43B94 BL 0x1C16F20
	0x03D43B98 SUB X31, X31, 0x140
	0x03D43B9C STP X29, X30, [X31 + 0xE0]
	0x03D43BA0 STP X28, X27, [X31 + 0xF0]
	0x03D43BA4 STP X26, X25, [X31 + 0x100]
	0x03D43BA8 STP X24, X23, [X31 + 0x110]
	0x03D43BAC STP X22, X21, [X31 + 0x120]
	0x03D43BB0 STP X20, X19, [X31 + 0x130]
	0x03D43BB4 ADRP X20, 0x6A4000
	0x03D43BB8 LDRB W8, [X20 + 0xB8A]
	0x03D43BBC MOV X19, X0
	0x03D43BC0 TBNZ X8, 0x0, 0x3D43C2C
	0x03D43BC4 ADRP X0, 0x3B0000
	0x03D43BC8 LDR X0, [X0 + 0xA28]
	0x03D43BCC BL 0x1C16CF4
	0x03D43BD0 ADRP X0, 0x422000
	0x03D43BD4 LDR X0, [X0 + 0x1C8]
	0x03D43BD8 BL 0x1C16CF4
	0x03D43BDC ADRP X0, 0x421000
	0x03D43BE0 LDR X0, [X0 + 0x648]
	0x03D43BE4 BL 0x1C16CF4
	0x03D43BE8 ADRP X0, 0x3B0000
	0x03D43BEC LDR X0, [X0 + 0xAC8]
	0x03D43BF0 BL 0x1C16CF4
	0x03D43BF4 ADRP X0, 0x422000
	0x03D43BF8 LDR X0, [X0 + 0x2D8]
	0x03D43BFC BL 0x1C16CF4
	0x03D43C00 ADRP X0, 0x422000
	0x03D43C04 LDR X0, [X0 + 0x2E0]
	0x03D43C08 BL 0x1C16CF4
	0x03D43C0C ADRP X0, 0x3B1000
	0x03D43C10 LDR X0, [X0 + 0x608]
	0x03D43C14 BL 0x1C16CF4
	0x03D43C18 ADRP X0, 0x422000
	0x03D43C1C LDR X0, [X0 + 0x2E8]
	0x03D43C20 BL 0x1C16CF4
	0x03D43C24 MOVZ W8, 0x1
	0x03D43C28 STRB W8, [X20 + 0xB8A]
	0x03D43C2C STR W31, [X31 + 0x5C]
	0x03D43C30 LDR W8, [X19 + 0xE8]
	0x03D43C34 CMP W8, 0x1
	0x03D43C38 B.LT 0x3D43FB4
	0x03D43C3C ADRP X26, 0x422000
	0x03D43C40 ADRP X21, 0x421000
	0x03D43C44 ADRP X22, 0x421000
	0x03D43C48 LDR X26, [X26 + 0x1C8]
	0x03D43C4C LDR X21, [X21 + 0x618]
	0x03D43C50 LDR X22, [X22 + 0x610]
	0x03D43C54 MOV W20, W31
	0x03D43C58 ADRP X29, 0x6A4000
	0x03D43C5C MOVZ W28, 0x1
	0x03D43C60 ADRP X27, 0x6A4000
	0x03D43C64 LDR X0, [X19 + 0xE0]
	0x03D43C68 CBZ X0, 0x3D43FD8
	0x03D43C6C LDR X2, [X26]
	0x03D43C70 MOV W1, W20
	0x03D43C74 BL 0x301BCCC
	0x03D43C78 CBZ X0, 0x3D43FD8
	0x03D43C7C MOV X1, X31
	0x03D43C80 MOV X23, X0
	0x03D43C84 BL 0x3DC37F0
	0x03D43C88 CMP W0, 0x1
	0x03D43C8C B.LT 0x3D43E2C
	0x03D43C90 MOV X25, X23
	0x03D43C94 LDR W24, [X25 + 0x44]!
	0x03D43C98 MOV X0, X23
	0x03D43C9C MOV X1, X31
	0x03D43CA0 BL 0x3DC37F0
	0x03D43CA4 CMP W24, W0
	0x03D43CA8 B.GE 0x3D43E2C
	0x03D43CAC ADRP X8, 0x3B0000
	0x03D43CB0 LDR X8, [X8 + 0xAC8]
	0x03D43CB4 MOVZ W1, 0x5
	0x03D43CB8 LDR X0, [X8]
	0x03D43CBC BL 0x1C16D6C
	0x03D43CC0 CBZ X0, 0x3D43FD8
	0x03D43CC4 LDR W8, [X0 + 0x18]
	0x03D43CC8 MOV X24, X0
	0x03D43CCC CBZ W8, 0x3D43FD4
	0x03D43CD0 ADRP X8, 0x422000
	0x03D43CD4 LDR X8, [X8 + 0x2E0]
	0x03D43CD8 MOV X0, X23
	0x03D43CDC MOV X1, X31
	0x03D43CE0 LDR X8, [X8]
	0x03D43CE4 STR X8, [X24 + 0x20]
	0x03D43CE8 BL 0x3DC37F0
	0x03D43CEC STR W0, [X31 + 0x5C]
	0x03D43CF0 ADD X0, X31, 0x5C
	0x03D43CF4 MOV X1, X31
	0x03D43CF8 BL 0x337B6E0
	0x03D43CFC LDR W8, [X24 + 0x18]
	0x03D43D00 CMP W8, 0x1
	0x03D43D04 B.LS 0x3D43FD4
	0x03D43D08 CMP W8, 0x2
	0x03D43D0C STR X0, [X24 + 0x28]
	0x03D43D10 B.EQ 0x3D43FD4
	0x03D43D14 ADRP X8, 0x422000
	0x03D43D18 LDR X8, [X8 + 0x2D8]
	0x03D43D1C MOV X0, X25
	0x03D43D20 MOV X1, X31
	0x03D43D24 LDR X8, [X8]
	0x03D43D28 STR X8, [X24 + 0x30]
	0x03D43D2C BL 0x337B6E0
	0x03D43D30 LDR W8, [X24 + 0x18]
	0x03D43D34 CMP W8, 0x3
	0x03D43D38 B.LS 0x3D43FD4
	0x03D43D3C CMP W8, 0x4
	0x03D43D40 STR X0, [X24 + 0x38]
	0x03D43D44 B.EQ 0x3D43FD4
	0x03D43D48 ADRP X8, 0x3B1000
	0x03D43D4C LDR X8, [X8 + 0x608]
	0x03D43D50 MOV X0, X24
	0x03D43D54 MOV X1, X31
	0x03D43D58 LDR X8, [X8]
	0x03D43D5C STR X8, [X24 + 0x40]
	0x03D43D60 BL 0x32278CC
	0x03D43D64 ADRP X8, 0x3B0000
	0x03D43D68 LDR X8, [X8 + 0xA28]
	0x03D43D6C MOV X24, X0
	0x03D43D70 LDR X8, [X8]
	0x03D43D74 LDR W9, [X8 + 0xE0]
	0x03D43D78 CBNZ W9, 0x3D43D84
	0x03D43D7C MOV X0, X8
	0x03D43D80 BL 0x1C16DFC
	0x03D43D84 MOV X0, X24
	0x03D43D88 MOV X1, X31
	0x03D43D8C BL 0x3C0649C
	0x03D43D90 ADRP X8, 0x421000
	0x03D43D94 LDR X8, [X8 + 0x648]
	0x03D43D98 ADD X24, X23, 0x10
	0x03D43D9C MOV X0, X24
	0x03D43DA0 MOV W1, W31
	0x03D43DA4 LDR X2, [X8]
	0x03D43DA8 ADD X8, X31, 0xA0
	0x03D43DAC BL 0x240883C
	0x03D43DB0 LDP V0, V1, [X31 + 0xA0]
	0x03D43DB4 LDP V2, V3, [X31 + 0xC0]
	0x03D43DB8 STP V0, V1, [X31 + 0x60]
	0x03D43DBC STP V2, V3, [X31 + 0x80]
	0x03D43DC0 LDR W25, [X23 + 0x44]
	0x03D43DC4 MOV X0, X23
	0x03D43DC8 MOV X1, X31
	0x03D43DCC BL 0x3DC37F0
	0x03D43DD0 CMP W25, W0
	0x03D43DD4 B.GE 0x3D43E2C
	0x03D43DD8 LDP V0, V1, [X31 + 0x60]
	0x03D43DDC LDP V2, V3, [X31 + 0x80]
	0x03D43DE0 LDRB W8, [X27 + 0xAB4]
	0x03D43DE4 STP V0, V1, [X31 + 0x10]
	0x03D43DE8 STP V2, V3, [X31 + 0x30]
	0x03D43DEC CBNZ W8, 0x3D43DFC
	0x03D43DF0 MOV X0, X22
	0x03D43DF4 BL 0x1C16CF4
	0x03D43DF8 STRB W28, [X27 + 0xAB4]
	0x03D43DFC LDR W1, [X23 + 0x44]
	0x03D43E00 ADD X2, X31, 0xA0
	0x03D43E04 MOV X0, X24
	0x03D43E08 ADD W8, W1, 0x1
	0x03D43E0C STR W8, [X23 + 0x44]
	0x03D43E10 LDR X3, [X22]
	0x03D43E14 LDP V0, V1, [X31 + 0x10]
	0x03D43E18 LDP V2, V3, [X31 + 0x30]
	0x03D43E1C STP V0, V1, [X31 + 0xA0]
	0x03D43E20 STP V2, V3, [X31 + 0xC0]
	0x03D43E24 BL 0x24088B0
	0x03D43E28 B 0x3D43DC0
	0x03D43E2C MOV X0, X23
	0x03D43E30 MOV X1, X31
	0x03D43E34 BL 0x3DC3838
	0x03D43E38 CMP W0, 0x1
	0x03D43E3C B.LT 0x3D43FA4
	0x03D43E40 MOV X25, X23
	0x03D43E44 LDR W24, [X25 + 0x40]!
	0x03D43E48 MOV X0, X23
	0x03D43E4C MOV X1, X31
	0x03D43E50 BL 0x3DC3838
	0x03D43E54 CMP W24, W0
	0x03D43E58 B.GE 0x3D43FA4
	0x03D43E5C ADRP X8, 0x3B0000
	0x03D43E60 LDR X8, [X8 + 0xAC8]
	0x03D43E64 MOVZ W1, 0x5
	0x03D43E68 LDR X0, [X8]
	0x03D43E6C BL 0x1C16D6C
	0x03D43E70 CBZ X0, 0x3D43FD8
	0x03D43E74 LDR W8, [X0 + 0x18]
	0x03D43E78 MOV X24, X0
	0x03D43E7C CBZ W8, 0x3D43FD4
	0x03D43E80 ADRP X8, 0x422000
	0x03D43E84 LDR X8, [X8 + 0x2E8]
	0x03D43E88 MOV X0, X23
	0x03D43E8C MOV X1, X31
	0x03D43E90 LDR X8, [X8]
	0x03D43E94 STR X8, [X24 + 0x20]
	0x03D43E98 BL 0x3DC3838
	0x03D43E9C STR W0, [X31 + 0x5C]
	0x03D43EA0 ADD X0, X31, 0x5C
	0x03D43EA4 MOV X1, X31
	0x03D43EA8 BL 0x337B6E0
	0x03D43EAC LDR W8, [X24 + 0x18]
	0x03D43EB0 CMP W8, 0x1
	0x03D43EB4 B.LS 0x3D43FD4
	0x03D43EB8 CMP W8, 0x2
	0x03D43EBC STR X0, [X24 + 0x28]
	0x03D43EC0 B.EQ 0x3D43FD4
	0x03D43EC4 ADRP X8, 0x422000
	0x03D43EC8 LDR X8, [X8 + 0x2D8]
	0x03D43ECC MOV X0, X25
	0x03D43ED0 MOV X1, X31
	0x03D43ED4 LDR X8, [X8]
	0x03D43ED8 STR X8, [X24 + 0x30]
	0x03D43EDC BL 0x337B6E0
	0x03D43EE0 LDR W8, [X24 + 0x18]
	0x03D43EE4 CMP W8, 0x3
	0x03D43EE8 B.LS 0x3D43FD4
	0x03D43EEC CMP W8, 0x4
	0x03D43EF0 STR X0, [X24 + 0x38]
	0x03D43EF4 B.EQ 0x3D43FD4
	0x03D43EF8 ADRP X8, 0x3B1000
	0x03D43EFC LDR X8, [X8 + 0x608]
	0x03D43F00 MOV X0, X24
	0x03D43F04 MOV X1, X31
	0x03D43F08 LDR X8, [X8]
	0x03D43F0C STR X8, [X24 + 0x40]
	0x03D43F10 BL 0x32278CC
	0x03D43F14 ADRP X8, 0x3B0000
	0x03D43F18 LDR X8, [X8 + 0xA28]
	0x03D43F1C MOV X24, X0
	0x03D43F20 LDR X8, [X8]
	0x03D43F24 LDR W9, [X8 + 0xE0]
	0x03D43F28 CBNZ W9, 0x3D43F34
	0x03D43F2C MOV X0, X8
	0x03D43F30 BL 0x1C16DFC
	0x03D43F34 MOV X0, X24
	0x03D43F38 MOV X1, X31
	0x03D43F3C BL 0x3C0649C
	0x03D43F40 LDR W24, [X23 + 0x40]
	0x03D43F44 MOV X0, X23
	0x03D43F48 MOV X1, X31
	0x03D43F4C BL 0x3DC3838
	0x03D43F50 CMP W24, W0
	0x03D43F54 B.GE 0x3D43FA4
	0x03D43F58 ADD X24, X23, 0x20
	0x03D43F5C LDRB W8, [X29 + 0xAB5]
	0x03D43F60 CBNZ W8, 0x3D43F70
	0x03D43F64 MOV X0, X21
	0x03D43F68 BL 0x1C16CF4
	0x03D43F6C STRB W28, [X29 + 0xAB5]
	0x03D43F70 LDR W1, [X23 + 0x40]
	0x03D43F74 MOV X0, X24
	0x03D43F78 MOV W2, W31
	0x03D43F7C ADD W8, W1, 0x1
	0x03D43F80 STR W8, [X23 + 0x40]
	0x03D43F84 LDR X3, [X21]
	0x03D43F88 BL 0x2406EF0
	0x03D43F8C LDR W25, [X23 + 0x40]
	0x03D43F90 MOV X0, X23
	0x03D43F94 MOV X1, X31
	0x03D43F98 BL 0x3DC3838
	0x03D43F9C CMP W25, W0
	0x03D43FA0 B.LT 0x3D43F5C
	0x03D43FA4 LDR W8, [X19 + 0xE8]
	0x03D43FA8 ADD W20, W20, 0x1
	0x03D43FAC CMP W20, W8
	0x03D43FB0 B.LT 0x3D43C64
	0x03D43FB4 LDP X20, X19, [X31 + 0x130]
	0x03D43FB8 LDP X22, X21, [X31 + 0x120]
	0x03D43FBC LDP X24, X23, [X31 + 0x110]
	0x03D43FC0 LDP X26, X25, [X31 + 0x100]
	0x03D43FC4 LDP X28, X27, [X31 + 0xF0]
	0x03D43FC8 LDP X29, X30, [X31 + 0xE0]
	0x03D43FCC ADD X31, X31, 0x140
	0x03D43FD0 RET
	0x03D43FD4 BL 0x1C16F28
	0x03D43FD8 BL 0x1C16F20
	0x03D43FDC LDR X8, [X0]
	0x03D43FE0 MOV W2, W31
	0x03D43FE4 LDP X4, X3, [X8 + 0x188]
	0x03D43FE8 BR X4
	0x03D43FEC SUB X31, X31, 0x40
	0x03D43FF0 STP X30, X23, [X31 + 0x10]
	0x03D43FF4 STP X22, X21, [X31 + 0x20]
	0x03D43FF8 STP X20, X19, [X31 + 0x30]
	0x03D43FFC STR X31, [X31 + 0x8]
	0x03D44000 CBZ X1, 0x3D440B8
	0x03D44004 LDR X8, [X1 + 0x378]
	0x03D44008 MOV X19, X1
	0x03D4400C MOV X20, X0
	0x03D44010 ADD X0, X31, 0x8
	0x03D44014 MOV X1, X31
	0x03D44018 MOV W22, W2
	0x03D4401C STR X8, [X31 + 0x8]
	0x03D44020 BL 0x3DF8994
	0x03D44024 CMP W0, 0x1
	0x03D44028 B.LT 0x3D440A4
	0x03D4402C MOV W21, W31
	0x03D44030 ADD W22, W22, 0x1
	0x03D44034 LDR X8, [X19 + 0x378]
	0x03D44038 ADD X0, X31, 0x8
	0x03D4403C MOV W1, W21
	0x03D44040 MOV X2, X31
	0x03D44044 STR X8, [X31 + 0x8]
	0x03D44048 BL 0x3DF98E4
	0x03D4404C LDR X8, [X20]
	0x03D44050 MOV X23, X0
	0x03D44054 MOV X0, X20
	0x03D44058 MOV X1, X23
	0x03D4405C LDP X9, X3, [X8 + 0x188]
	0x03D44060 MOV W2, W22
	0x03D44064 BLR X9
	0x03D44068 CBZ X23, 0x3D440B8
	0x03D4406C LDR X8, [X23 + 0x378]
	0x03D44070 ADD X0, X31, 0x8
	0x03D44074 MOV X1, X31
	0x03D44078 STR X8, [X31 + 0x8]
	0x03D4407C BL 0x3DF88DC
	0x03D44080 LDR X8, [X19 + 0x378]
	0x03D44084 CMP X0, X19
	0x03D44088 ADD X0, X31, 0x8
	0x03D4408C MOV X1, X31
	0x03D44090 CINC W21, W21, EQ
	0x03D44094 STR X8, [X31 + 0x8]
	0x03D44098 BL 0x3DF8994
	0x03D4409C CMP W21, W0
	0x03D440A0 B.LT 0x3D44034
	0x03D440A4 LDP X20, X19, [X31 + 0x30]
	0x03D440A8 LDP X22, X21, [X31 + 0x20]
	0x03D440AC LDP X30, X23, [X31 + 0x10]
	0x03D440B0 ADD X31, X31, 0x40
	0x03D440B4 RET
	0x03D440B8 BL 0x1C16F20
	0x03D440BC MOV X1, X31
	0x03D440C0 B 0x33BDD8C
	0x03D440C4 STR X30, [X31 - 0x20]!
	0x03D440C8 STP X20, X19, [X31 + 0x10]
	0x03D440CC ADRP X20, 0x6A3000
	0x03D440D0 ADRP X19, 0x420000
	0x03D440D4 LDRB W8, [X20 + 0xB8D]
	0x03D440D8 LDR X19, [X19 + 0x358]
	0x03D440DC TBNZ X8, 0x0, 0x3D440F4
	0x03D440E0 ADRP X0, 0x420000
	0x03D440E4 LDR X0, [X0 + 0x358]
	0x03D440E8 BL 0x1C16CF4
	0x03D440EC MOVZ W8, 0x1
	0x03D440F0 STRB W8, [X20 + 0xB8D]
	0x03D440F4 LDR X0, [X19]
	0x03D440F8 LDR W8, [X0 + 0xE0]
	0x03D440FC CBNZ W8, 0x3D44108
	0x03D44100 BL 0x1C16DFC
	0x03D44104 LDR X0, [X19]
	0x03D44108 LDR X0, [X0 + 0xB8]
	0x03D4410C LDP X20, X19, [X31 + 0x10]
	0x03D44110 LDR X30, [X31], #0x20
	0x03D44114 RET
	0x03D44118 SUB X31, X31, 0xD0
	0x03D4411C STP X30, X21, [X31 + 0xB0]
	0x03D44120 STP X20, X19, [X31 + 0xC0]
	0x03D44124 ADRP X21, 0x6A3000
	0x03D44128 ADRP X20, 0x420000
	0x03D4412C MOV X19, X8
	0x03D44130 LDRB W8, [X21 + 0xB8E]
	0x03D44134 LDR X20, [X20 + 0x358]
	0x03D44138 TBNZ X8, 0x0, 0x3D44150
	0x03D4413C ADRP X0, 0x420000
	0x03D44140 LDR X0, [X0 + 0x358]
	0x03D44144 BL 0x1C16CF4
	0x03D44148 MOVZ W8, 0x1
	0x03D4414C STRB W8, [X21 + 0xB8E]
	0x03D44150 LDR X0, [X20]
	0x03D44154 LDR W8, [X0 + 0xE0]
	0x03D44158 CBNZ W8, 0x3D44164
	0x03D4415C BL 0x1C16DFC
	0x03D44160 LDR X0, [X20]
	0x03D44164 LDR X0, [X0 + 0xB8]
	0x03D44168 ADD X8, X31, 0x0
	0x03D4416C MOV X1, X31
	0x03D44170 BL 0x3DCA748
	0x03D44174 ADD X0, X31, 0x58
	0x03D44178 ADD X1, X31, 0x0
	0x03D4417C MOVZ W2, 0x58
	0x03D44180 BL 0x3EB1AC0
	0x03D44184 ADD X1, X31, 0x58
	0x03D44188 MOVZ W2, 0x58
	0x03D4418C MOV X0, X19
	0x03D44190 BL 0x3EB1AC0
	0x03D44194 LDP X20, X19, [X31 + 0xC0]
	0x03D44198 LDP X30, X21, [X31 + 0xB0]
	0x03D4419C ADD X31, X31, 0xD0
	0x03D441A0 RET
	0x03D441A4 SUB X31, X31, 0x190
	0x03D441A8 STP X29, X30, [X31 + 0x130]
	0x03D441AC STP X28, X27, [X31 + 0x140]
	0x03D441B0 STP X26, X25, [X31 + 0x150]
	0x03D441B4 STP X24, X23, [X31 + 0x160]
	0x03D441B8 STP X22, X21, [X31 + 0x170]
	0x03D441BC STP X20, X19, [X31 + 0x180]
	0x03D441C0 ADRP X19, 0x6A3000
	0x03D441C4 ADRP X21, 0x420000
	0x03D441C8 ADRP X23, 0x421000
	0x03D441CC ADRP X20, 0x421000
	0x03D441D0 ADRP X22, 0x421000
	0x03D441D4 ADRP X24, 0x421000
	0x03D441D8 ADRP X25, 0x421000
	0x03D441DC ADRP X26, 0x421000
	0x03D441E0 ADRP X28, 0x421000
	0x03D441E4 ADRP X27, 0x421000
	0x03D441E8 LDR X21, [X21 + 0x358]
	0x03D441EC LDR X23, [X23 + 0x2F0]
	0x03D441F0 LDR X20, [X20 + 0x2F8]
	0x03D441F4 LDR X22, [X22 + 0x300]
	0x03D441F8 LDRB W8, [X19 + 0xB8F]
	0x03D441FC LDR X24, [X24 + 0x308]
	0x03D44200 LDR X25, [X25 + 0x310]
	0x03D44204 LDR X26, [X26 + 0x318]
	0x03D44208 LDR X28, [X28 + 0x320]
	0x03D4420C LDR X27, [X27 + 0x328]
	0x03D44210 TBNZ X8, 0x0, 0x3D442E8
	0x03D44214 ADRP X0, 0x420000
	0x03D44218 LDR X0, [X0 + 0x358]
	0x03D4421C BL 0x1C16CF4
	0x03D44220 ADRP X0, 0x421000
	0x03D44224 LDR X0, [X0 + 0x330]
	0x03D44228 BL 0x1C16CF4
	0x03D4422C ADRP X0, 0x421000
	0x03D44230 LDR X0, [X0 + 0x338]
	0x03D44234 BL 0x1C16CF4
	0x03D44238 ADRP X0, 0x3D9000
	0x03D4423C LDR X0, [X0 + 0x7F0]
	0x03D44240 BL 0x1C16CF4
	0x03D44244 ADRP X0, 0x3D9000
	0x03D44248 LDR X0, [X0 + 0x7D8]
	0x03D4424C BL 0x1C16CF4
	0x03D44250 ADRP X0, 0x421000
	0x03D44254 LDR X0, [X0 + 0x328]
	0x03D44258 BL 0x1C16CF4
	0x03D4425C ADRP X0, 0x421000
	0x03D44260 LDR X0, [X0 + 0x340]
	0x03D44264 BL 0x1C16CF4
	0x03D44268 ADRP X0, 0x421000
	0x03D4426C LDR X0, [X0 + 0x320]
	0x03D44270 BL 0x1C16CF4
	0x03D44274 ADRP X0, 0x3D9000
	0x03D44278 LDR X0, [X0 + 0x7E0]
	0x03D4427C BL 0x1C16CF4
	0x03D44280 ADRP X0, 0x421000
	0x03D44284 LDR X0, [X0 + 0x348]
	0x03D44288 BL 0x1C16CF4
	0x03D4428C ADRP X0, 0x421000
	0x03D44290 LDR X0, [X0 + 0x308]
	0x03D44294 BL 0x1C16CF4
	0x03D44298 ADRP X0, 0x421000
	0x03D4429C LDR X0, [X0 + 0x300]
	0x03D442A0 BL 0x1C16CF4
	0x03D442A4 ADRP X0, 0x421000
	0x03D442A8 LDR X0, [X0 + 0x318]
	0x03D442AC BL 0x1C16CF4
	0x03D442B0 ADRP X0, 0x421000
	0x03D442B4 LDR X0, [X0 + 0x310]
	0x03D442B8 BL 0x1C16CF4
	0x03D442BC ADRP X0, 0x421000
	0x03D442C0 LDR X0, [X0 + 0x2F8]
	0x03D442C4 BL 0x1C16CF4
	0x03D442C8 ADRP X0, 0x421000
	0x03D442CC LDR X0, [X0 + 0x2F0]
	0x03D442D0 BL 0x1C16CF4
	0x03D442D4 ADRP X0, 0x421000
	0x03D442D8 LDR X0, [X0 + 0x350]
	0x03D442DC BL 0x1C16CF4
	0x03D442E0 MOVZ W8, 0x1
	0x03D442E4 STRB W8, [X19 + 0xB8F]
	0x03D442E8 ADD X8, X31, 0x80
	0x03D442EC MOV X0, X31
	0x03D442F0 BL 0x3DCA610
	0x03D442F4 ADD X0, X31, 0xD8
	0x03D442F8 ADD X1, X31, 0x80
	0x03D442FC MOVZ W2, 0x58
	0x03D44300 BL 0x3EB1AC0
	0x03D44304 LDR X8, [X21]
	0x03D44308 ADD X1, X31, 0xD8
	0x03D4430C MOVZ W2, 0x58
	0x03D44310 LDR X0, [X8 + 0xB8]
	0x03D44314 BL 0x3EB1AC0
	0x03D44318 LDR X8, [X21]
	0x03D4431C LDR X1, [X23]
	0x03D44320 LDR X8, [X8 + 0xB8]
	0x03D44324 ADD X0, X8, 0x8
	0x03D44328 BL 0x266C93C
	0x03D4432C MOVZ W8, 0x1
	0x03D44330 STR W8, [X0]
	0x03D44334 LDR X8, [X21]
	0x03D44338 LDR X1, [X23]
	0x03D4433C LDR X8, [X8 + 0xB8]
	0x03D44340 ADD X0, X8, 0x8
	0x03D44344 BL 0x266C93C
	0x03D44348 MOVZ W8, 0x4
	0x03D4434C STR W8, [X0 + 0x4]
	0x03D44350 LDR X8, [X21]
	0x03D44354 LDR X1, [X23]
	0x03D44358 LDR X8, [X8 + 0xB8]
	0x03D4435C ADD X0, X8, 0x8
	0x03D44360 BL 0x266C93C
	0x03D44364 STR W31, [X0 + 0x8]
	0x03D44368 LDR X8, [X21]
	0x03D4436C LDR X1, [X20]
	0x03D44370 LDR X8, [X8 + 0xB8]
	0x03D44374 ADD X0, X8, 0x28
	0x03D44378 BL 0x266DB34
	0x03D4437C STP X31, X31, [X0]
	0x03D44380 LDR X8, [X21]
	0x03D44384 LDR X1, [X20]
	0x03D44388 LDR X8, [X8 + 0xB8]
	0x03D4438C ADD X0, X8, 0x28
	0x03D44390 BL 0x266DB34
	0x03D44394 MOVI V0.2D, 0x0
	0x03D44398 STP V0, V0, [X0 + 0x10]
	0x03D4439C LDR X8, [X21]
	0x03D443A0 LDR X1, [X20]
	0x03D443A4 LDR X8, [X8 + 0xB8]
	0x03D443A8 ADD X0, X8, 0x28
	0x03D443AC BL 0x266DB34
	0x03D443B0 MOV X19, X0
	0x03D443B4 MOV X0, X31
	0x03D443B8 BL 0x3CE9270
	0x03D443BC STR X0, [X19 + 0x30]
	0x03D443C0 STR W1, [X19 + 0x38]
	0x03D443C4 LDR X8, [X21]
	0x03D443C8 LDR X1, [X20]
	0x03D443CC LDR X8, [X8 + 0xB8]
	0x03D443D0 ADD X0, X8, 0x28
	0x03D443D4 BL 0x266DB34
	0x03D443D8 MOV X19, X0
	0x03D443DC MOV X0, X31
	0x03D443E0 BL 0x3CE9270
	0x03D443E4 STUR X0, [X19 + 0x3C]
	0x03D443E8 STR W1, [X19 + 0x44]
	0x03D443EC LDR X8, [X21]
	0x03D443F0 LDR X1, [X20]
	0x03D443F4 LDR X8, [X8 + 0xB8]
	0x03D443F8 ADD X0, X8, 0x28
	0x03D443FC BL 0x266DB34
	0x03D44400 MOV X19, X0
	0x03D44404 MOV X0, X31
	0x03D44408 BL 0x3CE9A58
	0x03D4440C STR X0, [X19 + 0x48]
	0x03D44410 LDR X8, [X21]
	0x03D44414 LDR X1, [X20]
	0x03D44418 LDR X8, [X8 + 0xB8]
	0x03D4441C ADD X0, X8, 0x28

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X29
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Subtract X31, X31, 1424
	010 Move X20, 0x6A5000
	011 Move W8, [X20+2955]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x3DA000
	018 Move X0, [X0+3712]
	019 Call 0x1C17CF4
	020 Move X0, 0x3DA000
	021 Move X0, [X0+288]
	022 Call 0x1C17CF4
	023 Move X0, 0x423000
	024 Move X0, [X0+488]
	025 Call 0x1C17CF4
	026 Move X0, 0x423000
	027 Move X0, [X0+328]
	028 Call 0x1C17CF4
	029 Move X0, 0x422000
	030 Move X0, [X0+4024]
	031 Call 0x1C17CF4
	032 Move X0, 0x3DA000
	033 Move X0, [X0+3736]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+2955], W8
	037 Add X0, X31, 1024
	038 Move W2, 288
	039 Move W1, W31
	040 Move [X31+1336], X31
	041 Move [X31+1328], X31
	042 Move [X31+1320], X31
	043 Move [X31+1312], X31
	044 Call 0x3EB2B10
	045 Add X0, X31, 840
	046 Move W2, 180
	047 Move W1, W31
	048 Call 0x3EB2B10
	049 Add X0, X31, 528
	050 Move W2, 288
	051 Move W1, W31
	052 Move [X31+824], X31
	053 Move [X31+816], X31
	054 Call 0x3EB2B10
	055 Move X0, [X19+272]
	056 Compare X0, 0
	057 JumpIfEqual {601}
	058 Move X1, X31
	059 Call VisualElement.get_layout, X0
	060 Move X8, -52793344
	061 Move V8, [X8+3996]
	062 NotImplemented "Instruction FCMP not yet implemented."
	063 Move X0, [X19+272]
	064 Compare X0, 0
	065 JumpIfEqual {601}
	066 Move X1, X31
	067 Call VisualElement.get_layout, X0
	068 NotImplemented "Instruction FCMP not yet implemented."
	069 Move X0, [X19+272]
	070 Compare X0, 0
	071 JumpIfEqual {601}
	072 Move X1, X31
	073 Call VisualElement.get_resolvedStyle, X0
	074 Move X8, [X19+272]
	075 Move X20, X0
	076 Add X1, X31, 1336
	077 Add X2, X31, 1320
	078 Add X3, X31, 1328
	079 Add X4, X31, 1312
	080 Move X0, X8
	081 Move X5, X31
	082 Call MeshGenerationContextUtils.GetVisualElementRadii, X0, X1, X2, X3, X4
	083 Compare X20, 0
	084 JumpIfEqual {601}
	085 Move X22, 0x3DA000
	086 Move X8, [X20]
	087 Move X22, [X22+288]
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Move X1, [X22]
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move W2, 12
	099 Move X0, X20
	100 Call 0x1C5D788
	101 Move W9, [X10]
	102 Add W9, W9, 12
	103 Add X8, X8, W9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X1, [X0+8]
	107 Move X0, X20
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X8, [X20]
	110 Move X1, [X22]
	111 Move [X31+32], D0
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Compare X9, 0
	114 JumpIfEqual {121}
	115 Move X10, [X8+176]
	116 Add X10, X10, 8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract X9, X9, 1
	120 Add X10, X10, 16
	121 Move W2, 6
	122 Move X0, X20
	123 Call 0x1C5D788
	124 Move W9, [X10]
	125 Add W9, W9, 6
	126 Add X8, X8, W9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X1, [X0+8]
	130 Move X0, X20
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X8, [X20]
	133 Move X1, [X22]
	134 Move [X31+16], D0
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Compare X9, 0
	137 JumpIfEqual {144}
	138 Move X10, [X8+176]
	139 Add X10, X10, 8
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Subtract X9, X9, 1
	143 Add X10, X10, 16
	144 Move W2, 4
	145 Move X0, X20
	146 Call 0x1C5D788
	147 Move W9, [X10]
	148 Add W9, W9, 4
	149 Add X8, X8, W9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X1, [X0+8]
	153 Move X0, X20
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move X8, [X20]
	156 Move X1, [X22]
	157 Move V8, V0
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Compare X9, 0
	160 JumpIfEqual {167}
	161 Move X10, [X8+176]
	162 Add X10, X10, 8
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Subtract X9, X9, 1
	166 Add X10, X10, 16
	167 Move W2, 8
	168 Move X0, X20
	169 Call 0x1C5D788
	170 Move W9, [X10]
	171 Add W9, W9, 8
	172 Add X8, X8, W9
	173 Add X0, X8, 312
	174 Move X8, [X0]
	175 Move X1, [X0+8]
	176 Move X0, X20
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Add X0, X31, 528
	179 Move W2, 288
	180 Move W1, W31
	181 Move V9, V0
	182 Call 0x3EB2B10
	183 Move X0, [X19+272]
	184 Compare X0, 0
	185 JumpIfEqual {601}
	186 Move X1, X31
	187 Call VisualElement.get_rect, X0
	188 Move X21, 0x697000
	189 Move W8, [X21+1935]
	190 Move [X31+528], S0
	191 Move V0, 0
	192 Move [X31+532], S1
	193 Move [X31+536], S2
	194 Move [X31+540], S3
	195 Move [X31], V0
	196 Move [X31+35], V0
	197 Compare W8, 0
	198 JumpIfNotEqual {204}
	199 Move X0, 0x3B9000
	200 Move X0, [X0+3848]
	201 Call 0x1C17CF4
	202 Move W8, 1
	203 Move [X21+1935], W8
	204 Move X8, 0x3B9000
	205 Move X8, [X8+3848]
	206 Move V0, [X31+1336]
	207 Move V5, [X31+16]
	208 Move V4, [X31+32]
	209 Move V1, [X31+1340]
	210 Move X8, [X8]
	211 Subtract S0, S0, S5
	212 Subtract S1, S1, S4
	213 Move X9, [X8+184]
	214 Move S2, [X9]
	215 Move S3, [X9+4]
	216 NotImplemented "Instruction FCMP not yet implemented."
	217 NotImplemented "Instruction FCSEL not yet implemented."
	218 Move V2, [X31+1328]
	219 NotImplemented "Instruction FCMP not yet implemented."
	220 NotImplemented "Instruction FCSEL not yet implemented."
	221 Move [X31+700], S0
	222 Move [X31+704], S1
	223 Move V3, [X31+1332]
	224 Subtract S1, S2, S9
	225 Move S0, [X9]
	226 Move S2, [X9+4]
	227 Subtract S3, S3, S4
	228 NotImplemented "Instruction FCMP not yet implemented."
	229 NotImplemented "Instruction FCSEL not yet implemented."
	230 NotImplemented "Instruction FCMP not yet implemented."
	231 NotImplemented "Instruction FCSEL not yet implemented."
	232 Move [X31+708], S0
	233 Move [X31+712], S1
	234 Move X9, [X8+184]
	235 Move V0, [X31+1320]
	236 Move V1, [X31+1324]
	237 Move S2, [X9]
	238 Move S3, [X9+4]
	239 Subtract S0, S0, S5
	240 Subtract S1, S1, S8
	241 NotImplemented "Instruction FCMP not yet implemented."
	242 NotImplemented "Instruction FCSEL not yet implemented."
	243 NotImplemented "Instruction FCMP not yet implemented."
	244 NotImplemented "Instruction FCSEL not yet implemented."
	245 Move [X31+724], S0
	246 Move [X31+728], S1
	247 Move X8, [X8+184]
	248 Move V0, [X31+1312]
	249 Move V1, [X31+1316]
	250 Move S2, [X8]
	251 Move S3, [X8+4]
	252 Subtract S0, S0, S9
	253 Subtract S1, S1, S8
	254 NotImplemented "Instruction FCMP not yet implemented."
	255 NotImplemented "Instruction FCSEL not yet implemented."
	256 NotImplemented "Instruction FCMP not yet implemented."
	257 NotImplemented "Instruction FCSEL not yet implemented."
	258 Move [X31+716], S0
	259 Move [X31+720], S1
	260 Move X0, [X19+272]
	261 Compare X0, 0
	262 JumpIfEqual {601}
	263 Move X1, X31
	264 Call VisualElement.get_panel, X0
	265 Compare X0, 0
	266 JumpIfEqual {601}
	267 Move X10, 0x3DA000
	268 Move X8, [X0]
	269 Move X10, [X10+3712]
	270 Move X21, X0
	271 NotImplemented "Instruction LDRH not yet implemented."
	272 Move X1, [X10]
	273 Compare X9, 0
	274 JumpIfEqual {281}
	275 Move X10, [X8+176]
	276 Add X10, X10, 8
	277 NotImplemented "Instruction LDUR not yet implemented."
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Subtract X9, X9, 1
	280 Add X10, X10, 16
	281 Move W2, 2
	282 Move X0, X21
	283 Call 0x1C5D788
	284 Move W9, [X10]
	285 Add W9, W9, 2
	286 Add X8, X8, W9
	287 Add X0, X8, 312
	288 Move X8, [X0]
	289 Move X1, [X0+8]
	290 Move X0, X21
	291 NotImplemented "Instruction BLR not yet implemented."
	292 Move V0, [X31]
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X21, 0x3DA000
	295 Move X21, [X21+3736]
	296 Move X0, [X21]
	297 Move W8, [X0+224]
	298 Compare W8, 0
	299 JumpIfNotEqual {302}
	300 Call 0x1C17DFC
	301 Move X0, [X21]
	302 Move X8, [X0+184]
	303 NotImplemented "Instruction LDUR not yet implemented."
	304 Add X8, X31, 429
	305 Add X0, X31, 1024
	306 Add X1, X31, 528
	307 Move W2, 288
	308 Move [X8+255], V0
	309 Call 0x3EB2AC0
	310 Move V2, [X31+16]
	311 Move V6, [X31+32]
	312 Move V0, [X31+1024]
	313 Move V3, [X31+1032]
	314 Move V4, [X31+1036]
	315 Move V1, V2
	316 Add S2, S2, S9
	317 Add S5, S6, S8
	318 Move V1.S[1], V6.S[0]
	319 Add V6, V1, V0
	320 Subtract S0, S3, S2
	321 Subtract S1, S4, S5
	322 Move [X31+1024], D6
	323 Move [X31+1032], S0
	324 Move [X31+1036], S1
	325 Move X0, [X19+272]
	326 Move [X31+2], V6
	327 Compare X0, 0
	328 JumpIfEqual {601}
	329 Move X1, X31
	330 Call VisualElement.get_computedStyle, X0
	331 Move X1, X31
	332 Call ComputedStyle.get_unityOverflowClipBox, X0
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move X8, [X20]
	335 Move X1, [X22]
	336 NotImplemented "Instruction LDRH not yet implemented."
	337 Compare X9, 0
	338 JumpIfEqual {345}
	339 Move X10, [X8+176]
	340 Add X10, X10, 8
	341 NotImplemented "Instruction LDUR not yet implemented."
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Subtract X9, X9, 1
	344 Add X10, X10, 16
	345 Move W2, 29
	346 Move X0, X20
	347 Call 0x1C5D788
	348 Move W9, [X10]
	349 Add W9, W9, 29
	350 Add X8, X8, W9
	351 Add X0, X8, 312
	352 Move X8, [X0]
	353 Move X1, [X0+8]
	354 Move X0, X20
	355 NotImplemented "Instruction BLR not yet implemented."
	356 Move V1, [X31+2]
	357 Move V8, [X31+1028]
	358 Move X1, [X22]
	359 Add S0, S1, S0
	360 Move [X31+1024], S0
	361 Move X8, [X20]
	362 NotImplemented "Instruction LDRH not yet implemented."
	363 Compare X9, 0
	364 JumpIfEqual {371}
	365 Move X10, [X8+176]
	366 Add X10, X10, 8
	367 NotImplemented "Instruction LDUR not yet implemented."
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Subtract X9, X9, 1
	370 Add X10, X10, 16
	371 Move W2, 31
	372 Move X0, X20
	373 Call 0x1C5D788
	374 Move W9, [X10]
	375 Add W9, W9, 31
	376 Add X8, X8, W9
	377 Add X0, X8, 312
	378 Move X8, [X0]
	379 Move X1, [X0+8]
	380 Move X0, X20
	381 NotImplemented "Instruction BLR not yet implemented."
	382 Add S0, S8, S0
	383 Move [X31+1028], S0
	384 Move X8, [X20]
	385 Move V9, [X31+1032]
	386 Move X1, [X22]
	387 NotImplemented "Instruction LDRH not yet implemented."
	388 Compare X9, 0
	389 JumpIfEqual {396}
	390 Move X10, [X8+176]
	391 Add X10, X10, 8
	392 NotImplemented "Instruction LDUR not yet implemented."
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Subtract X9, X9, 1
	395 Add X10, X10, 16
	396 Move W2, 29
	397 Move X0, X20
	398 Call 0x1C5D788
	399 Move W9, [X10]
	400 Add W9, W9, 29
	401 Add X8, X8, W9
	402 Add X0, X8, 312
	403 Move X8, [X0]
	404 Move X1, [X0+8]
	405 Move X0, X20
	406 NotImplemented "Instruction BLR not yet implemented."
	407 Move X8, [X20]
	408 Move X1, [X22]
	409 Move V8, V0
	410 NotImplemented "Instruction LDRH not yet implemented."
	411 Compare X9, 0
	412 JumpIfEqual {419}
	413 Move X10, [X8+176]
	414 Add X10, X10, 8
	415 NotImplemented "Instruction LDUR not yet implemented."
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Subtract X9, X9, 1
	418 Add X10, X10, 16
	419 Move W2, 30
	420 Move X0, X20
	421 Call 0x1C5D788
	422 Move W9, [X10]
	423 Add W9, W9, 30
	424 Add X8, X8, W9
	425 Add X0, X8, 312
	426 Move X8, [X0]
	427 Move X1, [X0+8]
	428 Move X0, X20
	429 NotImplemented "Instruction BLR not yet implemented."
	430 Add S0, S8, S0
	431 Subtract S0, S9, S0
	432 Move [X31+1032], S0
	433 Move X8, [X20]
	434 Move V9, [X31+1036]
	435 Move X1, [X22]
	436 NotImplemented "Instruction LDRH not yet implemented."
	437 Compare X9, 0
	438 JumpIfEqual {445}
	439 Move X10, [X8+176]
	440 Add X10, X10, 8
	441 NotImplemented "Instruction LDUR not yet implemented."
	442 NotImplemented "Instruction CMP not yet implemented."
	443 Subtract X9, X9, 1
	444 Add X10, X10, 16
	445 Move W2, 31
	446 Move X0, X20
	447 Call 0x1C5D788
	448 Move W9, [X10]
	449 Add W9, W9, 31
	450 Add X8, X8, W9
	451 Add X0, X8, 312
	452 Move X8, [X0]
	453 Move X1, [X0+8]
	454 Move X0, X20
	455 NotImplemented "Instruction BLR not yet implemented."
	456 Move X8, [X20]
	457 Move X1, [X22]
	458 Move V8, V0
	459 NotImplemented "Instruction LDRH not yet implemented."
	460 Compare X9, 0
	461 JumpIfEqual {468}
	462 Move X10, [X8+176]
	463 Add X10, X10, 8
	464 NotImplemented "Instruction LDUR not yet implemented."
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Subtract X9, X9, 1
	467 Add X10, X10, 16
	468 Move W2, 28
	469 Move X0, X20
	470 Call 0x1C5D788
	471 Move W9, [X10]
	472 Add W9, W9, 28
	473 Add X8, X8, W9
	474 Add X0, X8, 312
	475 Move X8, [X0]
	476 Move X1, [X0+8]
	477 Move X0, X20
	478 NotImplemented "Instruction BLR not yet implemented."
	479 Add S0, S8, S0
	480 Subtract S0, S9, S0
	481 Move [X31+1036], S0
	482 Move V0, [X19+184]
	483 Move X8, [X19+192]
	484 Move W9, 1
	485 Add X0, X31, 1024
	486 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	487 Move [X19+104], X8
	488 Move [X19+120], D0
	489 Add X8, X31, 344
	490 Move S0, W31
	491 Move S1, W31
	492 Move S2, 1
	493 Move S3, 1
	494 Move X1, X31
	495 Add X20, X19, 48
	496 Move [X19+118], W9
	497 Call RectangleParams.ToNativeParams, X0, X1
	498 Add X0, X31, 840
	499 Add X1, X31, 344
	500 Move W2, 180
	501 Call 0x3EB2AC0
	502 Add X0, X31, 160
	503 Add X1, X31, 840
	504 Move W2, 180
	505 Call 0x3EB2AC0
	506 Add X8, X31, 344
	507 Add X0, X31, 160
	508 Move S0, 1
	509 Move X1, X31
	510 Call MeshBuilderNative.MakeSolidRect, X0, V0
	511 Move W8, [X31+360]
	512 Add X9, X31, 89
	513 NotImplemented "Instruction LDUR not yet implemented."
	514 NotImplemented "Instruction CMP not yet implemented."
	515 Move [X31+51], V0
	516 Move W9, [X31+364]
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Move V0, [X31+51]
	519 Add X1, X31, 128
	520 Move X0, X19
	521 Move [X31+144], W8
	522 Move [X31+148], W9
	523 Move [X31+8], V0
	524 Call UIRStylePainter.BuildRawEntryFromNativeMesh, X0, X1
	525 Move X21, [X19+24]
	526 Add X0, X31, 48
	527 Move W2, 80
	528 Move X1, X20
	529 Call 0x3EB2AC0
	530 Compare X21, 0
	531 JumpIfEqual {601}
	532 Move X8, 0x422000
	533 Move X8, [X8+488]
	534 Add X0, X31, 1344
	535 Add X1, X31, 48
	536 Move W2, 80
	537 Move X22, [X8]
	538 Call 0x3EB2AC0
	539 Move W9, [X21+28]
	540 Move X8, [X21+16]
	541 Add W9, W9, 1
	542 Move [X21+28], W9
	543 Compare X8, 0
	544 JumpIfEqual {601}
	545 NotImplemented "Instruction LDRSW not yet implemented."
	546 Move W10, [X8+24]
	547 NotImplemented "Instruction CMP not yet implemented."
	548 Move W11, 80
	549 NotImplemented "Instruction MADD not yet implemented."
	550 Add W10, W9, 1
	551 Add X0, X8, 32
	552 Add X1, X31, 1344
	553 Move W2, 80
	554 Move [X21+24], W10
	555 Call 0x3EB2AC0
	556 Move X8, [X22+32]
	557 Add X0, X31, 344
	558 Add X1, X31, 1344
	559 Move W2, 80
	560 Move X8, [X8+192]
	561 Move X22, [X8+112]
	562 Call 0x3EB2AC0
	563 Add X1, X31, 344
	564 Move X0, X21
	565 Move X2, X22
	566 Call List`1<Entry>.AddWithResize, X0, X1
	567 Move X8, 0x422000
	568 Move W21, [X19+280]
	569 Move X8, [X8+328]
	570 Move X0, X20
	571 Move X1, [X8]
	572 Call NativeSlice`1<Vertex>.get_Length, X0
	573 Add W8, W0, W21
	574 Move [X19+280], W8
	575 Move X8, 0x421000
	576 Move W21, [X19+284]
	577 Move X8, [X8+4024]
	578 Add X0, X19, 64
	579 Move X1, [X8]
	580 Call NativeSlice`1<UInt16>.get_Length, X0
	581 Add W8, W0, W21
	582 Move W9, 1
	583 Move [X19+284], W8
	584 Move [X19+128], W9
	585 NotImplemented "Instruction MOVI not yet implemented."
	586 Move [X20+48], V0
	587 Move [X20+56], V0
	588 Move [X20+16], V0
	589 Move [X20+24], V0
	590 Move [X20], V0
	591 Add X31, X31, 1424
	592 Move X20, [X31+48]
	593 Move X19, [X31+56]
	594 Move X22, [X31+32]
	595 Move X21, [X31+40]
	596 Move X29, [X31+16]
	597 Move X30, [X31+24]
	598 Move D9, [X31+64]
	599 Move D8, [X31+72]
	600 Return 
	601 Call 0x1C17F20

Method: System.Void GenerateStencilClipEntryForSVGBackground()

Disassembly:
	0x03D43770 ADRP X26, 0x3B0000
	0x03D43774 LDRB W8, [X27 + 0xB88]
	0x03D43778 LDR X26, [X26 + 0x598]
	0x03D4377C MOV X23, X6
	0x03D43780 MOV X24, X5
	0x03D43784 MOV W22, W4
	0x03D43788 MOV X20, X3
	0x03D4378C MOV W21, W2
	0x03D43790 MOV X25, X1
	0x03D43794 MOV X19, X0
	0x03D43798 TBNZ X8, 0x0, 0x3D437C8
	0x03D4379C ADRP X0, 0x3B0000
	0x03D437A0 LDR X0, [X0 + 0xA28]
	0x03D437A4 BL 0x1C16CF4
	0x03D437A8 ADRP X0, 0x3B0000
	0x03D437AC LDR X0, [X0 + 0x598]
	0x03D437B0 BL 0x1C16CF4
	0x03D437B4 ADRP X0, 0x422000
	0x03D437B8 LDR X0, [X0 + 0x260]
	0x03D437BC BL 0x1C16CF4
	0x03D437C0 MOVZ W8, 0x1
	0x03D437C4 STRB W8, [X27 + 0xB88]
	0x03D437C8 LDR X0, [X26]
	0x03D437CC STP X31, X31, [X31 + 0xD0]
	0x03D437D0 STR X31, [X31 + 0xE0]
	0x03D437D4 ADRP X27, 0x3B0000
	0x03D437D8 LDR W8, [X0 + 0xE0]
	0x03D437DC LDR X26, [X25 + 0x88]
	0x03D437E0 LDR X27, [X27 + 0xA28]
	0x03D437E4 CBNZ W8, 0x3D437EC
	0x03D437E8 BL 0x1C16DFC
	0x03D437EC MOV X0, X26
	0x03D437F0 MOV X1, X31
	0x03D437F4 MOV X2, X31
	0x03D437F8 BL 0x3C354F8
	0x03D437FC LDR X8, [X27]
	0x03D43800 MOV W27, W0
	0x03D43804 LDR W9, [X8 + 0xE0]
	0x03D43808 CBNZ W9, 0x3D43814
	0x03D4380C MOV X0, X8
	0x03D43810 BL 0x1C16DFC
	0x03D43814 AND W0, W27, 0x1
	0x03D43818 MOV X1, X31
	0x03D4381C BL 0x3C06E58
	0x03D43820 STR W31, [X24]
	0x03D43824 STR W31, [X23]
	0x03D43828 CBZ X26, 0x3D43B08
	0x03D4382C LDR X8, [X26 + 0x28]
	0x03D43830 CBZ X8, 0x3D43B08
	0x03D43834 ADRP X9, 0x422000
	0x03D43838 LDR X9, [X9 + 0x260]
	0x03D4383C LDR X28, [X8 + 0x18]
	0x03D43840 LDR X0, [X9]
	0x03D43844 MOV W1, W28
	0x03D43848 BL 0x1C16D6C
	0x03D4384C CMP W28, 0x1
	0x03D43850 MOV X27, X0
	0x03D43854 B.LT 0x3D43918
	0x03D43858 AND X11, X28, 0x0
	0x03D4385C MOV X8, X31
	0x03D43860 MOV X9, X31
	0x03D43864 MOV X10, X31
	0x03D43868 UBFM X11, X11, 0x3A, 0x39
	0x03D4386C LDR X12, [X26 + 0x28]
	0x03D43870 CBZ X12, 0x3D43B08
	0x03D43874 LDR W13, [X12 + 0x18]
	0x03D43878 CMP X10, X13
	0x03D4387C B.CS 0x3D43B0C
	0x03D43880 ADD X16, X12, X9
	0x03D43884 LDP W17, W12, [X16 + 0x28]
	0x03D43888 LDR X0, [X16 + 0x20]
	0x03D4388C LDR X13, [X16 + 0x30]
	0x03D43890 LDRH W15, [X16 + 0x38]
	0x03D43894 LDR W14, [X16 + 0x3C]
	0x03D43898 STR W17, [X31 + 0xC8]
	0x03D4389C STR X0, [X31 + 0xC0]
	0x03D438A0 LDR V0, [X16 + 0x4]
	0x03D438A4 STR V0, [X31 + 0x8]
	0x03D438A8 CBZ X27, 0x3D43B08
	0x03D438AC LDR W16, [X31 + 0xC8]
	0x03D438B0 LDR X17, [X31 + 0xC0]
	0x03D438B4 LDR V0, [X31 + 0x8]
	0x03D438B8 STR W16, [X31 + 0xB8]
	0x03D438BC STR X17, [X31 + 0xB0]
	0x03D438C0 STR V0, [X31 + 0xA]
	0x03D438C4 LDR W16, [X27 + 0x18]
	0x03D438C8 CMP X10, X16
	0x03D438CC B.CS 0x3D43B0C
	0x03D438D0 LDR X17, [X31 + 0xB0]
	0x03D438D4 LDR W0, [X31 + 0xB8]
	0x03D438D8 REV W15, W15
	0x03D438DC ADD X16, X27, X8
	0x03D438E0 UBFM W15, W15, 0x10, 0x1F
	0x03D438E4 STP X13, X31, [X16 + 0x30]
	0x03D438E8 STP W14, W31, [X16 + 0x40]
	0x03D438EC STR W15, [X16 + 0x48]
	0x03D438F0 STR X17, [X16 + 0x20]
	0x03D438F4 STP W0, W12, [X16 + 0x28]
	0x03D438F8 LDR V0, [X31 + 0xA]
	0x03D438FC ADD X8, X8, 0x40
	0x03D43900 ADD X10, X10, 0x1
	0x03D43904 CMP X11, X8
	0x03D43908 ADD X9, X9, 0x30
	0x03D4390C STR W31, [X16 + 0x5C]
	0x03D43910 STUR V0, [X16 + 0x4C]
	0x03D43914 B.NE 0x3D4386C
	0x03D43918 LDP W8, W9, [X25 + 0xDC]
	0x03D4391C CMP W8, 0x0
	0x03D43920 B.GT 0x3D43944
	0x03D43924 CMP W9, 0x0
	0x03D43928 B.GT 0x3D43944
	0x03D4392C LDR W10, [X25 + 0xE4]
	0x03D43930 CMP W10, 0x0
	0x03D43934 B.GT 0x3D43944
	0x03D43938 LDR W10, [X25 + 0xE8]
	0x03D4393C CMP W10, 0x0
	0x03D43940 B.LE 0x3D43A74
	0x03D43944 SCVTF S1, W8
	0x03D43948 SCVTF S0, W9
	0x03D4394C STP S0, S1, [X31 + 0x34]
	0x03D43950 LDP S0, S1, [X25 + 0xE4]
	0x03D43954 LDR V3, [X26 + 0x40]
	0x03D43958 LDR V2, [X26 + 0x44]
	0x03D4395C LDR X23, [X26 + 0x30]
	0x03D43960 LDP S10, S11, [X25]
	0x03D43964 LDP S12, S13, [X25 + 0x8]
	0x03D43968 LDR V14, [X25 + 0x20]
	0x03D4396C LDUR X24, [X25 + 0x24]
	0x03D43970 LDR V15, [X25 + 0x2C]
	0x03D43974 ADD X0, X25, 0x110
	0x03D43978 MOV X1, X31
	0x03D4397C STP S2, S3, [X31 + 0x2C]
	0x03D43980 SCVTF S8, S0
	0x03D43984 SCVTF S9, S1
	0x03D43988 BL 0x3DC3C20
	0x03D4398C LDR V0, [X31 + 0x34]
	0x03D43990 MOV X2, X0
	0x03D43994 ADD X8, X31, 0x80
	0x03D43998 MOV X0, X27
	0x03D4399C STP S0, S8, [X31 + 0x4]
	0x03D439A0 LDR V0, [X31 + 0x38]
	0x03D439A4 MOV X1, X23
	0x03D439A8 MOV V2.16B, V10.16B
	0x03D439AC MOV V3.16B, V11.16B
	0x03D439B0 STR S0, [X31]
	0x03D439B4 LDP S1, S0, [X31 + 0x2C]
	0x03D439B8 MOV V4.16B, V12.16B
	0x03D439BC MOV V5.16B, V13.16B
	0x03D439C0 MOV W3, W22
	0x03D439C4 MOV X4, X31
	0x03D439C8 STR S15, [X31 + 0x1C]
	0x03D439CC STUR X24, [X31 + 0x14]
	0x03D439D0 STP S9, S14, [X31 + 0xC]
	0x03D439D4 BL 0x3DBB5E4
	0x03D439D8 LDR V0, [X31 + 0x8]
	0x03D439DC LDR X8, [X31 + 0x90]
	0x03D439E0 STR V0, [X31 + 0xD]
	0x03D439E4 STR X8, [X31 + 0xE0]
	0x03D439E8 TBZ X21, 0x0, 0x3D43A10
	0x03D439EC LDR V0, [X31 + 0xD]
	0x03D439F0 LDR X8, [X31 + 0xE0]
	0x03D439F4 AND X2, X20, 0x0
	0x03D439F8 ADD X1, X31, 0x60
	0x03D439FC MOV X0, X19
	0x03D43A00 STR V0, [X31 + 0x6]
	0x03D43A04 STR X8, [X31 + 0x70]
	0x03D43A08 BL 0x3D3DABC
	0x03D43A0C B 0x3D43A44
	0x03D43A10 LDR V0, [X31 + 0xD]
	0x03D43A14 LDR X8, [X31 + 0xE0]
	0x03D43A18 ADD X1, X31, 0x40
	0x03D43A1C MOV X0, X19
	0x03D43A20 MOV X2, X31
	0x03D43A24 MOV X3, X31
	0x03D43A28 MOV W4, W31
	0x03D43A2C MOV X5, X31
	0x03D43A30 MOV W6, W31
	0x03D43A34 MOV W7, W31
	0x03D43A38 STR V0, [X31 + 0x4]
	0x03D43A3C STR X8, [X31 + 0x50]
	0x03D43A40 BL 0x3D3D664
	0x03D43A44 LDP X20, X19, [X31 + 0x180]
	0x03D43A48 LDP X22, X21, [X31 + 0x170]
	0x03D43A4C LDP X24, X23, [X31 + 0x160]
	0x03D43A50 LDP X26, X25, [X31 + 0x150]
	0x03D43A54 LDP X28, X27, [X31 + 0x140]
	0x03D43A58 LDP X29, X30, [X31 + 0x130]
	0x03D43A5C LDP D9, D8, [X31 + 0x120]
	0x03D43A60 LDP D11, D10, [X31 + 0x110]
	0x03D43A64 LDP D13, D12, [X31 + 0x100]
	0x03D43A68 LDP D15, D14, [X31 + 0xF0]
	0x03D43A6C ADD X31, X31, 0x190
	0x03D43A70 RET
	0x03D43A74 LDR X8, [X26 + 0x30]
	0x03D43A78 LDR V1, [X26 + 0x40]
	0x03D43A7C LDR V0, [X26 + 0x44]
	0x03D43A80 LDP S10, S11, [X25]
	0x03D43A84 LDP S12, S13, [X25 + 0x8]
	0x03D43A88 LDP S14, S15, [X25 + 0x10]
	0x03D43A8C LDR X29, [X25 + 0x18]
	0x03D43A90 LDR W26, [X25 + 0x98]
	0x03D43A94 LDR V8, [X25 + 0x20]
	0x03D43A98 LDUR X28, [X25 + 0x24]
	0x03D43A9C LDR V9, [X25 + 0x2C]
	0x03D43AA0 ADD X0, X25, 0x110
	0x03D43AA4 MOV X1, X31
	0x03D43AA8 STR X8, [X31 + 0x38]
	0x03D43AAC STP S0, S1, [X31 + 0x30]
	0x03D43AB0 BL 0x3DC3C20
	0x03D43AB4 LDR X1, [X31 + 0x38]
	0x03D43AB8 LDP S1, S0, [X31 + 0x30]
	0x03D43ABC MOV X3, X0
	0x03D43AC0 ADD X8, X31, 0x80
	0x03D43AC4 MOV X0, X27
	0x03D43AC8 MOV V2.16B, V10.16B
	0x03D43ACC MOV V3.16B, V11.16B
	0x03D43AD0 MOV V4.16B, V12.16B
	0x03D43AD4 MOV V5.16B, V13.16B
	0x03D43AD8 MOV W2, W26
	0x03D43ADC MOV W4, W22
	0x03D43AE0 MOV X5, X24
	0x03D43AE4 MOV X6, X23
	0x03D43AE8 MOV X7, X31
	0x03D43AEC STR S9, [X31 + 0x1C]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 416
	014 Move X20, 0x6A5000
	015 Move W8, [X20+2956]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {47}
	021 Move X0, 0x3B1000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move X0, 0x423000
	025 Move X0, [X0+488]
	026 Call 0x1C17CF4
	027 Move X0, 0x423000
	028 Move X0, [X0+592]
	029 Call 0x1C17CF4
	030 Move X0, 0x422000
	031 Move X0, [X0+1608]
	032 Call 0x1C17CF4
	033 Move X0, 0x423000
	034 Move X0, [X0+328]
	035 Call 0x1C17CF4
	036 Move X0, 0x422000
	037 Move X0, [X0+4024]
	038 Call 0x1C17CF4
	039 Move X0, 0x422000
	040 Move X0, [X0+1552]
	041 Call 0x1C17CF4
	042 Move X0, 0x423000
	043 Move X0, [X0+472]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+2956], W8
	047 NotImplemented "Instruction MOVI not yet implemented."
	048 Move [X31+224], V0
	049 Move [X31+232], V0
	050 Move [X31+192], V0
	051 Move [X31+200], V0
	052 Move [X31+11], V0
	053 Move [X31+160], X31
	054 Move [X31+168], X31
	055 Move W1, [X19+200]
	056 Add W31, W1, 1
	057 Move X0, [X19+24]
	058 Compare X0, 0
	059 JumpIfEqual {249}
	060 Move X8, 0x423000
	061 Move X8, [X8+592]
	062 Move X25, 0x423000
	063 Move X20, 0x3B1000
	064 Move X24, 0x422000
	065 Move X2, [X8]
	066 Move X25, [X25+328]
	067 Move X20, [X20+2600]
	068 Move X24, [X24+4024]
	069 Add X8, X31, 336
	070 Call List`1<Entry>.get_Item, X0, X1
	071 Add X0, X31, 176
	072 Add X1, X31, 336
	073 Move W2, 80
	074 Add X21, X31, 176
	075 Call 0x3EB2AC0
	076 Move X1, [X25]
	077 Add X0, X31, 176
	078 Call NativeSlice`1<Vertex>.get_Length, X0
	079 Move X8, [X20]
	080 Move W20, W0
	081 Move W9, [X8+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X8
	085 Call 0x1C17DFC
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CSET not yet implemented."
	088 Move X1, X31
	089 Call Debug.Assert, X0
	090 Move X1, [X24]
	091 Add X0, X21, 16
	092 Call NativeSlice`1<UInt16>.get_Length, X0
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CSET not yet implemented."
	095 Move X1, X31
	096 Call Debug.Assert, X0
	097 Move V0, [X31+11]
	098 Add X0, X31, 336
	099 Add X1, X31, 176
	100 Move W2, 80
	101 Add X20, X19, 48
	102 Move [X19+3], V0
	103 Call 0x3EB2AC0
	104 Move V0, [X31+22]
	105 Move V1, [X19+184]
	106 Move X8, [X19+192]
	107 Move W9, 1
	108 Move [X19+4], V0
	109 Move W10, [X31+244]
	110 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	111 Move [X19+104], X8
	112 Move [X19+120], D0
	113 And W8, W10, 1
	114 Move [X19+118], W9
	115 Move [X19+116], W8
	116 Move [X19+128], W9
	117 Move X1, [X25]
	118 Move X0, X20
	119 Call NativeSlice`1<Vertex>.get_Length, X0
	120 Move X8, [X19+208]
	121 Compare X8, 0
	122 JumpIfEqual {249}
	123 Move X9, 0x423000
	124 Move X9, [X9+472]
	125 Move W22, W0
	126 Move X0, X8
	127 Move W1, W22
	128 Move X2, [X9]
	129 Add X21, X19, 64
	130 Call TempAllocator`1<Vertex>.Alloc, X0, X1
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move [X31+160], X0
	133 Move [X31+168], X1
	134 Move X26, 0x422000
	135 Move X27, 0x422000
	136 Move X26, [X26+1608]
	137 Move X27, [X27+1552]
	138 Add X8, X31, 336
	139 Move W23, W31
	140 Add X28, X8, 12
	141 Move W29, 0x3F800000
	142 Move X2, [X26]
	143 Add X8, X31, 336
	144 Move X0, X20
	145 Move W1, W23
	146 Call NativeSlice`1<Vertex>.get_Item, X0, X1
	147 Move V0, [X28]
	148 Move V1, [X28+16]
	149 Move V2, [X28+2]
	150 Move X8, [X31+336]
	151 Move W9, [X28+48]
	152 Move [X31+6], V0
	153 Move [X31+112], V1
	154 Move [X31+120], V2
	155 Move X3, [X27]
	156 Move V1, [X31+112]
	157 Move V0, [X31+128]
	158 Move V2, [X31+6]
	159 Move [X31+336], X8
	160 Move W8, W9
	161 Add X0, X31, 160
	162 Add X2, X31, 336
	163 Move W1, W23
	164 Move [X31+144], W9
	165 Move [X31+344], W29
	166 Move [X28+16], V1
	167 Move [X28+24], V0
	168 Move [X28], V2
	169 Move [X28+48], W8
	170 Call NativeSlice`1<Vertex>.set_Item, X0, X1, X2
	171 Add W23, W23, 1
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move V0, [X31+10]
	174 Move X0, X20
	175 Move [X20], V0
	176 Move X1, [X25]
	177 Move W22, [X19+280]
	178 Call NativeSlice`1<Vertex>.get_Length, X0
	179 Add W8, W0, W22
	180 Move [X19+280], W8
	181 Move X1, [X24]
	182 Move W22, [X19+284]
	183 Move X0, X21
	184 Call NativeSlice`1<UInt16>.get_Length, X0
	185 Move X21, [X19+24]
	186 Add W8, W0, W22
	187 Add X0, X31, 16
	188 Move W2, 80
	189 Move X1, X20
	190 Move [X19+284], W8
	191 Call 0x3EB2AC0
	192 Compare X21, 0
	193 JumpIfEqual {249}
	194 Move X8, 0x423000
	195 Move X8, [X8+488]
	196 Add X0, X31, 256
	197 Add X1, X31, 16
	198 Move W2, 80
	199 Move X19, [X8]
	200 Call 0x3EB2AC0
	201 Move W9, [X21+28]
	202 Move X8, [X21+16]
	203 Add W9, W9, 1
	204 Move [X21+28], W9
	205 Compare X8, 0
	206 JumpIfEqual {249}
	207 NotImplemented "Instruction LDRSW not yet implemented."
	208 Move W10, [X8+24]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move W11, 80
	211 NotImplemented "Instruction MADD not yet implemented."
	212 Add W10, W9, 1
	213 Add X0, X8, 32
	214 Add X1, X31, 256
	215 Move W2, 80
	216 Move [X21+24], W10
	217 Call 0x3EB2AC0
	218 Move X8, [X19+32]
	219 Add X0, X31, 336
	220 Add X1, X31, 256
	221 Move W2, 80
	222 Move X8, [X8+192]
	223 Move X19, [X8+112]
	224 Call 0x3EB2AC0
	225 Add X1, X31, 336
	226 Move X0, X21
	227 Move X2, X19
	228 Call List`1<Entry>.AddWithResize, X0, X1
	229 NotImplemented "Instruction MOVI not yet implemented."
	230 Move [X20+48], V0
	231 Move [X20+56], V0
	232 Move [X20+16], V0
	233 Move [X20+24], V0
	234 Move [X20], V0
	235 Add X31, X31, 416
	236 Move X20, [X31+80]
	237 Move X19, [X31+88]
	238 Move X22, [X31+64]
	239 Move X21, [X31+72]
	240 Move X24, [X31+48]
	241 Move X23, [X31+56]
	242 Move X26, [X31+32]
	243 Move X25, [X31+40]
	244 Move X28, [X31+16]
	245 Move X27, [X31+24]
	246 Move X29, [X31+96]
	247 Move X30, [X31+104]
	248 Return 
	249 Call 0x1C17F20

