Type: UnityEngine.UIElements.UIR.RenderChain/RenderChainStaticIndexAllocator

Method: System.Int32 AllocateIndex(UnityEngine.UIElements.UIR.RenderChain renderChain)

Disassembly:
	0x03D28564 ADRP X8, 0x3F5000
	0x03D28568 LDR X8, [X8 + 0x240]
	0x03D2856C LDR X20, [X19 + 0x18]
	0x03D28570 LDR X0, [X8]
	0x03D28574 LDR W8, [X0 + 0xE0]
	0x03D28578 CBNZ W8, 0x3D28580
	0x03D2857C BL 0x1C16DFC
	0x03D28580 MOV X0, X20
	0x03D28584 MOV X1, X31
	0x03D28588 BL 0x3DE1000
	0x03D2858C STR X31, [X19 + 0x18]
	0x03D28590 MOVZ W8, 0x1
	0x03D28594 STRB W8, [X19 + 0x48]
	0x03D28598 LDP X20, X19, [X31 + 0x10]
	0x03D2859C LDP X30, X21, [X31], #0x20
	0x03D285A0 RET
	0x03D285A4 STR X30, [X31 - 0x30]!
	0x03D285A8 STP X22, X21, [X31 + 0x10]
	0x03D285AC STP X20, X19, [X31 + 0x20]
	0x03D285B0 ADRP X22, 0x6BF000
	0x03D285B4 ADRP X20, 0x43C000
	0x03D285B8 ADRP X19, 0x43C000
	0x03D285BC ADRP X21, 0x3CC000
	0x03D285C0 LDRB W8, [X22 + 0xACA]
	0x03D285C4 LDR X20, [X20 + 0xAB0]
	0x03D285C8 LDR X19, [X19 + 0xAB8]
	0x03D285CC LDR X21, [X21 + 0xE58]
	0x03D285D0 TBNZ X8, 0x0, 0x3D2860C
	0x03D285D4 ADRP X0, 0x3CC000
	0x03D285D8 LDR X0, [X0 + 0xE58]
	0x03D285DC BL 0x1C16CF4
	0x03D285E0 ADRP X0, 0x43C000
	0x03D285E4 LDR X0, [X0 + 0xAB8]
	0x03D285E8 BL 0x1C16CF4
	0x03D285EC ADRP X0, 0x425000
	0x03D285F0 LDR X0, [X0 + 0xB00]
	0x03D285F4 BL 0x1C16CF4
	0x03D285F8 ADRP X0, 0x43C000
	0x03D285FC LDR X0, [X0 + 0xAB0]
	0x03D28600 BL 0x1C16CF4
	0x03D28604 MOVZ W8, 0x1
	0x03D28608 STRB W8, [X22 + 0xACA]
	0x03D2860C LDR X0, [X20]
	0x03D28610 ADRP X20, 0x425000
	0x03D28614 LDR X20, [X20 + 0xB00]
	0x03D28618 MOVZ W1, 0x1
	0x03D2861C MOV W2, W31
	0x03D28620 MOV W3, W31
	0x03D28624 MOV X4, X31
	0x03D28628 BL 0x3BFE7FC
	0x03D2862C LDR X8, [X19]
	0x03D28630 MOVZ W1, 0x8
	0x03D28634 LDR X8, [X8 + 0xB8]
	0x03D28638 STR X0, [X8 + 0x8]
	0x03D2863C LDR X0, [X21]
	0x03D28640 BL 0x1C16D6C
	0x03D28644 LDR X8, [X19]
	0x03D28648 MOV W21, W31
	0x03D2864C LDR X8, [X8 + 0xB8]
	0x03D28650 STR X0, [X8]
	0x03D28654 STR W31, [X31 + 0xC]
	0x03D28658 LDR X8, [X19]
	0x03D2865C ADD X0, X31, 0xC
	0x03D28660 MOV X1, X31
	0x03D28664 LDR X8, [X8 + 0xB8]
	0x03D28668 LDR X22, [X8]
	0x03D2866C BL 0x337B6E0
	0x03D28670 LDR X8, [X20]
	0x03D28674 MOV X1, X0
	0x03D28678 MOV X2, X31
	0x03D2867C MOV X0, X8
	0x03D28680 BL 0x321B938
	0x03D28684 MOV X1, X31
	0x03D28688 BL 0x3C124EC
	0x03D2868C CBZ X22, 0x3D286C8
	0x03D28690 LDR W8, [X22 + 0x18]
	0x03D28694 CMP W21, W8
	0x03D28698 B.CS 0x3D286CC
	0x03D2869C ADD X8, X22, W21, 0x2, SXTW
	0x03D286A0 STR W0, [X8 + 0x20]
	0x03D286A4 LDR W8, [X31 + 0xC]
	0x03D286A8 ADD W21, W8, 0x1
	0x03D286AC CMP W21, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6C0000
	006 Move X21, 0x43D000
	007 Move W8, [X20+2742]
	008 Move X21, [X21+1840]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x43D000
	015 Move X0, [X0+2432]
	016 Call 0x1C17CF4
	017 Move X0, 0x43D000
	018 Move X0, [X0+2440]
	019 Call 0x1C17CF4
	020 Move X0, 0x43D000
	021 Move X0, [X0+2448]
	022 Call 0x1C17CF4
	023 Move X0, 0x43D000
	024 Move X0, [X0+2456]
	025 Call 0x1C17CF4
	026 Move X0, 0x43D000
	027 Move X0, [X0+1840]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2742], W8
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X21]
	037 Move X8, [X0+184]
	038 Move X0, [X8]
	039 Compare X0, 0
	040 JumpIfEqual {96}
	041 Move X8, 0x43D000
	042 Move X8, [X8+2440]
	043 Move X1, X31
	044 Move X2, [X8]
	045 Call List`1<Object>.IndexOf, X0, X1
	046 Move X8, [X21]
	047 Move W20, W0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {54}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X8, [X21]
	054 Move X8, [X8+184]
	055 Move X0, [X8]
	056 Compare X0, 0
	057 JumpIfEqual {96}
	058 Move TEMP, X20
	059 And TEMP, TEMP, -2147483648
	060 Compare TEMP, -2147483648
	061 JumpIfEqual {68}
	062 Move X8, 0x43D000
	063 Move X8, [X8+2456]
	064 Move W1, W20
	065 Move X2, X19
	066 Move X3, [X8]
	067 Call List`1<Object>.set_Item, X0, X1, X2
	068 Move X9, 0x43D000
	069 Move X9, [X9+2432]
	070 Move W20, [X0+24]
	071 Move W10, [X0+28]
	072 Move X8, [X0+16]
	073 Move X9, [X9]
	074 Add W10, W10, 1
	075 Move [X0+28], W10
	076 Compare X8, 0
	077 JumpIfEqual {96}
	078 Move W10, [X8+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X9, W20
	081 Add W10, W20, 1
	082 Add X8, X8, X9
	083 Move [X0+24], W10
	084 Move [X8+32], X19
	085 Move X8, [X9+32]
	086 Move X1, X19
	087 Move X8, [X8+192]
	088 Move X2, [X8+112]
	089 Call List`1<Object>.AddWithResize, X0, X1
	090 Move W0, W20
	091 Move X20, [X31+16]
	092 Move X19, [X31+24]
	093 Move X30, [X31+32]
	094 Move X21, [X31+40]
	095 Return X0
	096 Call 0x1C17F20

Method: System.Void FreeIndex(System.Int32 index)

Disassembly:
	0x03D286B0 STR W21, [X31 + 0xC]
	0x03D286B4 B.LT 0x3D28658
	0x03D286B8 LDP X20, X19, [X31 + 0x20]
	0x03D286BC LDP X22, X21, [X31 + 0x10]
	0x03D286C0 LDR X30, [X31], #0x30
	0x03D286C4 RET
	0x03D286C8 BL 0x1C16F20
	0x03D286CC BL 0x1C16F28
	0x03D286D0 STR X30, [X31 - 0x40]!
	0x03D286D4 STP X24, X23, [X31 + 0x10]
	0x03D286D8 STP X22, X21, [X31 + 0x20]
	0x03D286DC STP X20, X19, [X31 + 0x30]
	0x03D286E0 ADRP X23, 0x6BF000
	0x03D286E4 ADRP X24, 0x43C000
	0x03D286E8 ADRP X22, 0x43C000
	0x03D286EC ADRP X21, 0x43C000
	0x03D286F0 LDRB W8, [X23 + 0xACB]
	0x03D286F4 LDR X24, [X24 + 0xAC0]
	0x03D286F8 LDR X22, [X22 + 0xAC8]
	0x03D286FC LDR X21, [X21 + 0xAD0]
	0x03D28700 MOV W20, W1
	0x03D28704 MOV X19, X0
	0x03D28708 TBNZ X8, 0x0, 0x3D28738
	0x03D2870C ADRP X0, 0x43C000
	0x03D28710 LDR X0, [X0 + 0xAC0]
	0x03D28714 BL 0x1C16CF4
	0x03D28718 ADRP X0, 0x43C000
	0x03D2871C LDR X0, [X0 + 0xAD0]
	0x03D28720 BL 0x1C16CF4
	0x03D28724 ADRP X0, 0x43C000
	0x03D28728 LDR X0, [X0 + 0xAC8]
	0x03D2872C BL 0x1C16CF4
	0x03D28730 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6C0000
	006 Move X20, 0x43D000
	007 Move W8, [X21+2743]
	008 Move X20, [X20+1840]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x43D000
	015 Move X0, [X0+2456]
	016 Call 0x1C17CF4
	017 Move X0, 0x43D000
	018 Move X0, [X0+1840]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2743], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8]
	030 Compare X0, 0
	031 JumpIfEqual {43}
	032 Move X8, 0x43D000
	033 Move X8, [X8+2456]
	034 Move W1, W19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X2, X31
	038 Move X3, [X8]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call List`1<Object>.set_Item, X0, X1, X2
	042 Return 
	043 Call 0x1C17F20

Method: UnityEngine.UIElements.UIR.RenderChain AccessIndex(System.Int32 index)

Disassembly:
	0x03D28734 STRB W8, [X23 + 0xACB]
	0x03D28738 LDR X0, [X24]
	0x03D2873C MOVZ W1, 0x1
	0x03D28740 BL 0x1C16D6C
	0x03D28744 STR X0, [X19 + 0x10]
	0x03D28748 MOV X0, X19
	0x03D2874C MOV X1, X31
	0x03D28750 BL 0x33BDD8C
	0x03D28754 LDR X0, [X22]
	0x03D28758 BL 0x1C16F10
	0x03D2875C LDR X2, [X21]
	0x03D28760 MOV W1, W20
	0x03D28764 MOV X21, X0
	0x03D28768 BL 0x3148EC4
	0x03D2876C STR X21, [X19 + 0x40]
	0x03D28770 LDP X20, X19, [X31 + 0x30]
	0x03D28774 LDP X22, X21, [X31 + 0x20]
	0x03D28778 LDP X24, X23, [X31 + 0x10]
	0x03D2877C LDR X30, [X31], #0x40
	0x03D28780 RET
	0x03D28784 SUB X31, X31, 0xA0
	0x03D28788 STP D11, D10, [X31 + 0x40]
	0x03D2878C STP D9, D8, [X31 + 0x50]
	0x03D28790 STP X30, X25, [X31 + 0x60]
	0x03D28794 STP X24, X23, [X31 + 0x70]
	0x03D28798 STP X22, X21, [X31 + 0x80]
	0x03D2879C STP X20, X19, [X31 + 0x90]
	0x03D287A0 ADRP X25, 0x6BF000
	0x03D287A4 LDRB W8, [X25 + 0xACC]
	0x03D287A8 MOV V8.16B, V3.16B
	0x03D287AC MOV V9.16B, V2.16B
	0x03D287B0 MOV V10.16B, V1.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6C0000
	006 Move X20, 0x43D000
	007 Move W8, [X21+2744]
	008 Move X20, [X20+1840]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x43D000
	015 Move X0, [X0+2464]
	016 Call 0x1C17CF4
	017 Move X0, 0x43D000
	018 Move X0, [X0+1840]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2744], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8]
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X8, 0x43D000
	033 Move X8, [X8+2464]
	034 Move W1, W19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X2, [X8]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call List`1<Object>.get_Item, X0, X1
	041 Return X0
	042 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D287B4 MOV V11.16B, V0.16B
	0x03D287B8 MOV W23, W5
	0x03D287BC MOV X19, X4
	0x03D287C0 MOV X20, X3
	0x03D287C4 MOV X21, X2
	0x03D287C8 MOV X22, X1
	0x03D287CC MOV X24, X0
	0x03D287D0 TBNZ X8, 0x0, 0x3D287E8
	0x03D287D4 ADRP X0, 0x43C000
	0x03D287D8 LDR X0, [X0 + 0xAD8]
	0x03D287DC BL 0x1C16CF4
	0x03D287E0 MOVZ W8, 0x1
	0x03D287E4 STRB W8, [X25 + 0xACC]
	0x03D287E8 LDRB W8, [X24 + 0x48]
	0x03D287EC CBZ W8, 0x3D28818
	0x03D287F0 MOV X0, X24
	0x03D287F4 LDP X20, X19, [X31 + 0x90]
	0x03D287F8 LDP X22, X21, [X31 + 0x80]
	0x03D287FC LDP X24, X23, [X31 + 0x70]
	0x03D28800 LDP X30, X25, [X31 + 0x60]
	0x03D28804 LDP D9, D8, [X31 + 0x50]
	0x03D28808 LDP D11, D10, [X31 + 0x40]
	0x03D2880C MOV X1, X31
	0x03D28810 ADD X31, X31, 0xA0
	0x03D28814 B 0x3D909FC
	0x03D28818 LDR X0, [X24 + 0x40]
	0x03D2881C CBZ X0, 0x3D288CC
	0x03D28820 ADRP X9, 0x43C000
	0x03D28824 LDR X9, [X9 + 0xAD8]
	0x03D28828 LDR W11, [X0 + 0x1C]
	0x03D2882C LDR X8, [X0 + 0x10]
	0x03D28830 LDR X10, [X9]
	0x03D28834 ADD W9, W11, 0x1
	0x03D28838 STR W9, [X0 + 0x1C]
	0x03D2883C CBZ X8, 0x3D288CC
	0x03D28840 LDRSW X11, [X0 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6C0000
	007 Move X22, 0x43D000
	008 Move X19, 0x43D000
	009 Move X20, 0x43D000
	010 Move W8, [X21+2745]
	011 Move X22, [X22+2472]
	012 Move X19, [X19+2480]
	013 Move X20, [X20+1840]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x43D000
	019 Move X0, [X0+2480]
	020 Call 0x1C17CF4
	021 Move X0, 0x43D000
	022 Move X0, [X0+2472]
	023 Call 0x1C17CF4
	024 Move X0, 0x43D000
	025 Move X0, [X0+1840]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2745], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X2, [X19]
	032 Move W1, 4
	033 Move X19, X0
	034 Call List`1<Object>..ctor, X0, X1
	035 Move X8, [X20]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X8, [X8+184]
	039 Move [X8], X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+48]
	043 Return 

