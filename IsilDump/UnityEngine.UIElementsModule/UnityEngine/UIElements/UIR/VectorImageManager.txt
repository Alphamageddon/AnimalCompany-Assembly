Type: UnityEngine.UIElements.UIR.VectorImageManager

Method: UnityEngine.Texture2D get_atlas()

Disassembly:
	0x03D2E758 CMP W20, 0x0
	0x03D2E75C CSET W0, EQ
	0x03D2E760 MOV X1, X31
	0x03D2E764 BL 0x3C06E58
	0x03D2E768 MOVZ W0, 0x1

ISIL:
	001 Move X0, [X0+48]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call GradientSettingsAtlas.get_atlas, X0
	006 Return X0
	007 Return X0

Method: System.Void .ctor(UnityEngine.UIElements.AtlasBase atlas)

Disassembly:
	0x03D2E76C MOV X1, X31
	0x03D2E770 BL 0x3C06E58
	0x03D2E774 LDR X0, [X26]
	0x03D2E778 LDR X8, [X0 + 0xB8]
	0x03D2E77C LDR W9, [X8 + 0x8]
	0x03D2E780 ADD W10, W9, 0x1
	0x03D2E784 STR W10, [X8 + 0x8]
	0x03D2E788 CBNZ W9, 0x3D2E7F4
	0x03D2E78C LDR W9, [X0 + 0xE0]
	0x03D2E790 CBNZ W9, 0x3D2E7A0
	0x03D2E794 BL 0x1C16DFC
	0x03D2E798 LDR X8, [X26]
	0x03D2E79C LDR X8, [X8 + 0xB8]
	0x03D2E7A0 LDRB W8, [X8 + 0xC]
	0x03D2E7A4 CBNZ W8, 0x3D2E7F4
	0x03D2E7A8 LDRB W8, [X19 + 0x10]
	0x03D2E7AC CBNZ W8, 0x3D2E7F4
	0x03D2E7B0 ADRP X8, 0x3EE000
	0x03D2E7B4 LDR X8, [X8 + 0x820]
	0x03D2E7B8 LDR X0, [X8]
	0x03D2E7BC LDR W8, [X0 + 0xE0]
	0x03D2E7C0 CBNZ W8, 0x3D2E7C8
	0x03D2E7C4 BL 0x1C16DFC
	0x03D2E7C8 MOVZ W0, 0x1
	0x03D2E7CC MOV X1, X31
	0x03D2E7D0 MOVZ W20, 0x1
	0x03D2E7D4 BL 0x3D1FBF8
	0x03D2E7D8 LDR X0, [X26]
	0x03D2E7DC LDR W8, [X0 + 0xE0]
	0x03D2E7E0 CBNZ W8, 0x3D2E7EC
	0x03D2E7E4 BL 0x1C16DFC
	0x03D2E7E8 LDR X0, [X26]
	0x03D2E7EC LDR X8, [X0 + 0xB8]
	0x03D2E7F0 STRB W20, [X8 + 0xC]
	0x03D2E7F4 LDR X0, [X22]
	0x03D2E7F8 ADRP X28, 0x436000
	0x03D2E7FC ADRP X20, 0x436000
	0x03D2E800 ADRP X29, 0x436000
	0x03D2E804 LDR W8, [X0 + 0xE0]
	0x03D2E808 LDR X28, [X28 + 0xE10]
	0x03D2E80C LDR X20, [X20 + 0xDE0]
	0x03D2E810 LDR X29, [X29 + 0xE08]
	0x03D2E814 CBNZ W8, 0x3D2E81C
	0x03D2E818 BL 0x1C16DFC
	0x03D2E81C ADRP X22, 0x436000
	0x03D2E820 ADRP X23, 0x436000
	0x03D2E824 ADRP X24, 0x436000
	0x03D2E828 ADRP X25, 0x436000
	0x03D2E82C ADRP X26, 0x436000
	0x03D2E830 ADRP X27, 0x436000
	0x03D2E834 LDR X22, [X22 + 0xDF8]
	0x03D2E838 LDR X23, [X23 + 0xDD8]
	0x03D2E83C LDR X24, [X24 + 0xDC8]
	0x03D2E840 LDR X25, [X25 + 0xE00]
	0x03D2E844 LDR X26, [X26 + 0xDF0]
	0x03D2E848 LDR X27, [X27 + 0xDD0]
	0x03D2E84C LDR W21, [X31 + 0xC]
	0x03D2E850 MOVZ W1, 0x800
	0x03D2E854 MOV X2, X31
	0x03D2E858 MOV W0, W21
	0x03D2E85C BL 0x337EE48
	0x03D2E860 LDR W8, [X31 + 0x8]
	0x03D2E864 UCVTF S1, W21
	0x03D2E868 STP W0, W0, [X19 + 0x30]
	0x03D2E86C UCVTF S0, W8
	0x03D2E870 FDIV S0, S0, S1
	0x03D2E874 FMOV S1, 2
	0x03D2E878 FMAXNM S0, S0, S1
	0x03D2E87C STR S0, [X19 + 0x38]
	0x03D2E880 LDR X0, [X28]
	0x03D2E884 BL 0x1C16F10
	0x03D2E888 LDR X2, [X20]
	0x03D2E88C MOVZ W1, 0x4
	0x03D2E890 MOV X20, X0
	0x03D2E894 MOVZ W28, 0x4
	0x03D2E898 BL 0x301B830
	0x03D2E89C STR X20, [X19 + 0x40]
	0x03D2E8A0 LDR X0, [X29]
	0x03D2E8A4 BL 0x1C16F10
	0x03D2E8A8 ADRP X8, 0x436000
	0x03D2E8AC LDR X8, [X8 + 0xDE8]
	0x03D2E8B0 MOVZ W1, 0x4
	0x03D2E8B4 MOV X20, X0
	0x03D2E8B8 LDR X2, [X8]
	0x03D2E8BC BL 0x301B830
	0x03D2E8C0 STR X20, [X19 + 0x48]
	0x03D2E8C4 LDR X0, [X22]
	0x03D2E8C8 LDR X20, [X19 + 0x40]
	0x03D2E8CC BL 0x1C16F10
	0x03D2E8D0 LDR X1, [X23]
	0x03D2E8D4 MOV X21, X0
	0x03D2E8D8 BL 0x3160C00
	0x03D2E8DC CBZ X20, 0x3D2E9CC
	0x03D2E8E0 LDR W10, [X20 + 0x1C]
	0x03D2E8E4 LDR X8, [X20 + 0x10]
	0x03D2E8E8 LDR X9, [X24]
	0x03D2E8EC ADD W10, W10, 0x1
	0x03D2E8F0 STR W10, [X20 + 0x1C]
	0x03D2E8F4 CBZ X8, 0x3D2E9CC
	0x03D2E8F8 LDRSW X10, [X20 + 0x18]
	0x03D2E8FC LDR W11, [X8 + 0x18]
	0x03D2E900 CMP W10, W11
	0x03D2E904 B.CS 0x3D2E91C
	0x03D2E908 ADD W9, W10, 0x1
	0x03D2E90C ADD X8, X8, X10, 0x3, LSL
	0x03D2E910 STR W9, [X20 + 0x18]
	0x03D2E914 STR X21, [X8 + 0x20]
	0x03D2E918 B 0x3D2E934

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x6BA000
	010 Move X21, 0x437000
	011 Move W8, [X22+2822]
	012 Move X21, [X21+1792]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0x437000
	020 Move X0, [X0+3216]
	021 Call 0x1C17CF4
	022 Move X0, 0x437000
	023 Move X0, [X0+3224]
	024 Call 0x1C17CF4
	025 Move X0, 0x437000
	026 Move X0, [X0+3232]
	027 Call 0x1C17CF4
	028 Move X0, 0x437000
	029 Move X0, [X0+1184]
	030 Call 0x1C17CF4
	031 Move X0, 0x437000
	032 Move X0, [X0+3240]
	033 Call 0x1C17CF4
	034 Move X0, 0x437000
	035 Move X0, [X0+1792]
	036 Call 0x1C17CF4
	037 Move X0, 0x437000
	038 Move X0, [X0+3248]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+2822], W8
	042 Move X0, X19
	043 Move X1, X31
	044 Call Object..ctor, X0
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X21]
	051 Move X8, [X0+184]
	052 Move X0, [X8]
	053 Compare X0, 0
	054 JumpIfEqual {120}
	055 Move X9, 0x437000
	056 Move X9, [X9+3240]
	057 Move W10, [X0+28]
	058 Move X8, [X0+16]
	059 Move X9, [X9]
	060 Add W10, W10, 1
	061 Move [X0+28], W10
	062 Compare X8, 0
	063 JumpIfEqual {120}
	064 Move X24, 0x437000
	065 Move X24, [X24+3224]
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Move W11, [X8+24]
	068 Move X25, 0x437000
	069 Move X23, 0x437000
	070 Move X22, 0x437000
	071 Move X21, 0x437000
	072 Move X25, [X25+3216]
	073 Move X23, [X23+3248]
	074 Move X22, [X22+3232]
	075 Move X21, [X21+1184]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Add W9, W10, 1
	078 Add X8, X8, X10
	079 Move [X0+24], W9
	080 Move [X8+32], X19
	081 Move X8, [X9+32]
	082 Move X1, X19
	083 Move X8, [X8+192]
	084 Move X2, [X8+112]
	085 Call List`1<Object>.AddWithResize, X0, X1
	086 Move [X19+16], X20
	087 Move X0, [X24]
	088 Call 0x1C17F10
	089 Move X2, [X25]
	090 Move W1, 32
	091 Move X20, X0
	092 Call Dictionary`2<Object, Object>..ctor, X0, X1
	093 Move [X19+24], X20
	094 Move X0, [X23]
	095 Call 0x1C17F10
	096 Move X20, X0
	097 Call VectorImageRenderInfoPool..ctor, X0
	098 Move [X19+32], X20
	099 Move X0, [X22]
	100 Call 0x1C17F10
	101 Move X20, X0
	102 Call GradientRemapPool..ctor, X0
	103 Move [X19+40], X20
	104 Move X0, [X21]
	105 Call 0x1C17F10
	106 Move W1, 4096
	107 Move X2, X31
	108 Move X20, X0
	109 Call GradientSettingsAtlas..ctor, X0, X1
	110 Move [X19+48], X20
	111 Move X20, [X31+48]
	112 Move X19, [X31+56]
	113 Move X22, [X31+32]
	114 Move X21, [X31+40]
	115 Move X24, [X31+16]
	116 Move X23, [X31+24]
	117 Move X30, [X31+64]
	118 Move X25, [X31+72]
	119 Return 
	120 Call 0x1C17F20

Method: System.Boolean get_disposed()

Disassembly:
	0x03D2E91C LDR X8, [X9 + 0x20]
	0x03D2E920 MOV X0, X20

ISIL:
	001 Move W0, [X0+57]
	002 Return X0

Method: System.Void set_disposed(System.Boolean value)

Disassembly:
	0x03D2E924 MOV X1, X21
	0x03D2E928 LDR X8, [X8 + 0xC0]
	0x03D2E92C LDR X2, [X8 + 0x70]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+57], W8
	003 Return 

Method: System.Void Dispose()

Disassembly:
	0x03D2E930 BL 0x301BF90
	0x03D2E934 LDR X0, [X25]
	0x03D2E938 LDR X20, [X19 + 0x48]
	0x03D2E93C BL 0x1C16F10
	0x03D2E940 LDR X1, [X26]
	0x03D2E944 MOV X21, X0
	0x03D2E948 BL 0x3163D6C
	0x03D2E94C CBZ X20, 0x3D2E9CC
	0x03D2E950 LDR W10, [X20 + 0x1C]
	0x03D2E954 LDR X8, [X20 + 0x10]
	0x03D2E958 LDR X9, [X27]
	0x03D2E95C ADD W10, W10, 0x1
	0x03D2E960 STR W10, [X20 + 0x1C]
	0x03D2E964 CBZ X8, 0x3D2E9CC
	0x03D2E968 LDRSW X10, [X20 + 0x18]
	0x03D2E96C LDR W11, [X8 + 0x18]
	0x03D2E970 CMP W10, W11
	0x03D2E974 B.CS 0x3D2E98C
	0x03D2E978 ADD W9, W10, 0x1
	0x03D2E97C ADD X8, X8, X10, 0x3, LSL
	0x03D2E980 STR W9, [X20 + 0x18]
	0x03D2E984 STR X21, [X8 + 0x20]
	0x03D2E988 B 0x3D2E9A4
	0x03D2E98C LDR X8, [X9 + 0x20]
	0x03D2E990 MOV X0, X20
	0x03D2E994 MOV X1, X21
	0x03D2E998 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6BA000
	006 Move X20, 0x3CD000
	007 Move W8, [X21+2823]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3CD000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2823], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+392]
	023 Move X2, [X8+400]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03D2E99C LDR X2, [X8 + 0x70]
	0x03D2E9A0 BL 0x301BF90
	0x03D2E9A4 SUBS W28, W28, 0x1
	0x03D2E9A8 B.NE 0x3D2E8C4
	0x03D2E9AC LDP X20, X19, [X31 + 0x60]
	0x03D2E9B0 LDP X22, X21, [X31 + 0x50]
	0x03D2E9B4 LDP X24, X23, [X31 + 0x40]
	0x03D2E9B8 LDP X26, X25, [X31 + 0x30]
	0x03D2E9BC LDP X28, X27, [X31 + 0x20]
	0x03D2E9C0 LDP X29, X30, [X31 + 0x10]
	0x03D2E9C4 ADD X31, X31, 0x70
	0x03D2E9C8 RET
	0x03D2E9CC BL 0x1C16F20
	0x03D2E9D0 STR X30, [X31 - 0x60]!
	0x03D2E9D4 STP X28, X27, [X31 + 0x10]
	0x03D2E9D8 STP X26, X25, [X31 + 0x20]
	0x03D2E9DC STP X24, X23, [X31 + 0x30]
	0x03D2E9E0 STP X22, X21, [X31 + 0x40]
	0x03D2E9E4 STP X20, X19, [X31 + 0x50]
	0x03D2E9E8 ADRP X27, 0x6B9000
	0x03D2E9EC ADRP X28, 0x436000
	0x03D2E9F0 ADRP X20, 0x436000
	0x03D2E9F4 ADRP X26, 0x436000
	0x03D2E9F8 ADRP X25, 0x436000
	0x03D2E9FC ADRP X24, 0x436000
	0x03D2EA00 ADRP X23, 0x436000
	0x03D2EA04 ADRP X22, 0x3CC000
	0x03D2EA08 ADRP X21, 0x436000
	0x03D2EA0C LDR X28, [X28 + 0xE28]
	0x03D2EA10 LDR X20, [X20 + 0xE30]
	0x03D2EA14 LDR X26, [X26 + 0xE38]
	0x03D2EA18 LDRB W8, [X27 + 0xB3D]
	0x03D2EA1C LDR X25, [X25 + 0xE40]
	0x03D2EA20 LDR X24, [X24 + 0xE48]
	0x03D2EA24 LDR X23, [X23 + 0xE50]
	0x03D2EA28 LDR X22, [X22 + 0xAC8]
	0x03D2EA2C LDR X21, [X21 + 0xE58]
	0x03D2EA30 MOV X19, X0
	0x03D2EA34 TBNZ X8, 0x0, 0x3D2EAA0
	0x03D2EA38 ADRP X0, 0x436000
	0x03D2EA3C LDR X0, [X0 + 0xE58]
	0x03D2EA40 BL 0x1C16CF4
	0x03D2EA44 ADRP X0, 0x436000
	0x03D2EA48 LDR X0, [X0 + 0xE50]
	0x03D2EA4C BL 0x1C16CF4
	0x03D2EA50 ADRP X0, 0x3CC000
	0x03D2EA54 LDR X0, [X0 + 0xAC8]
	0x03D2EA58 BL 0x1C16CF4
	0x03D2EA5C ADRP X0, 0x436000
	0x03D2EA60 LDR X0, [X0 + 0xE48]
	0x03D2EA64 BL 0x1C16CF4
	0x03D2EA68 ADRP X0, 0x436000
	0x03D2EA6C LDR X0, [X0 + 0xE30]
	0x03D2EA70 BL 0x1C16CF4
	0x03D2EA74 ADRP X0, 0x436000
	0x03D2EA78 LDR X0, [X0 + 0xE40]
	0x03D2EA7C BL 0x1C16CF4
	0x03D2EA80 ADRP X0, 0x436000
	0x03D2EA84 LDR X0, [X0 + 0xE28]
	0x03D2EA88 BL 0x1C16CF4
	0x03D2EA8C ADRP X0, 0x436000
	0x03D2EA90 LDR X0, [X0 + 0xE38]
	0x03D2EA94 BL 0x1C16CF4
	0x03D2EA98 MOVZ W8, 0x1
	0x03D2EA9C STRB W8, [X27 + 0xB3D]
	0x03D2EAA0 LDR X0, [X28]
	0x03D2EAA4 BL 0x1C16F10
	0x03D2EAA8 LDR X2, [X20]
	0x03D2EAAC MOVZ W1, 0x8
	0x03D2EAB0 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6BA000
	006 Move W8, [X21+2824]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x437000
	014 Move X0, [X0+3256]
	015 Call 0x1C17CF4
	016 Move X0, 0x437000
	017 Move X0, [X0+3264]
	018 Call 0x1C17CF4
	019 Move X0, 0x437000
	020 Move X0, [X0+3272]
	021 Call 0x1C17CF4
	022 Move X0, 0x437000
	023 Move X0, [X0+3280]
	024 Call 0x1C17CF4
	025 Move X0, 0x437000
	026 Move X0, [X0+1792]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2824], W8
	030 Move W8, [X19+57]
	031 Compare W8, 0
	032 JumpIfNotEqual {82}
	033 Move TEMP, X20
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {80}
	037 Move X0, [X19+24]
	038 Compare X0, 0
	039 JumpIfEqual {87}
	040 Move X8, 0x437000
	041 Move X8, [X8+3256]
	042 Move X1, [X8]
	043 Call Dictionary`2<Object, Object>.Clear, X0
	044 Move X0, [X19+32]
	045 Compare X0, 0
	046 JumpIfEqual {87}
	047 Move X8, 0x437000
	048 Move X8, [X8+3264]
	049 Move X1, [X8]
	050 Call 0x2EF1E1C, X0
	051 Move X0, [X19+40]
	052 Compare X0, 0
	053 JumpIfEqual {87}
	054 Move X8, 0x437000
	055 Move X8, [X8+3272]
	056 Move X1, [X8]
	057 Call 0x2EF1E1C, X0
	058 Move X0, [X19+48]
	059 Compare X0, 0
	060 JumpIfEqual {87}
	061 Move X1, X31
	062 Call GradientSettingsAtlas.Dispose, X0
	063 Move X20, 0x437000
	064 Move X20, [X20+1792]
	065 Move X0, [X20]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X20]
	071 Move X8, [X0+184]
	072 Move X0, [X8]
	073 Compare X0, 0
	074 JumpIfEqual {87}
	075 Move X8, 0x437000
	076 Move X8, [X8+3280]
	077 Move X1, X19
	078 Move X2, [X8]
	079 Call List`1<Object>.Remove, X0, X1
	080 Move W8, 1
	081 Move [X19+57], W8
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 Return 
	087 Call 0x1C17F20

Method: System.Void Commit()

Disassembly:
	0x03D2EAB4 BL 0x26015B8
	0x03D2EAB8 STR X20, [X19 + 0x10]
	0x03D2EABC LDR X0, [X26]
	0x03D2EAC0 BL 0x1C16F10
	0x03D2EAC4 LDR X2, [X25]
	0x03D2EAC8 MOVZ W1, 0x8
	0x03D2EACC MOV X20, X0
	0x03D2EAD0 BL 0x26024B0
	0x03D2EAD4 STR X20, [X19 + 0x18]
	0x03D2EAD8 LDR X0, [X24]
	0x03D2EADC BL 0x1C16F10
	0x03D2EAE0 LDR X2, [X23]

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+57]
	003 Compare W8, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call DisposeHelper.NotifyDisposedUsed, X0
	008 Return 
	009 Move X0, [X0+48]
	010 Compare X0, 0
	011 JumpIfEqual {16}
	012 Move X1, X31
	013 Move X30, [X31+16]
	014 Call GradientSettingsAtlas.Commit, X0
	015 Return 
	016 Call 0x1C17F20

Method: UnityEngine.UIElements.UIR.GradientRemap AddUser(UnityEngine.UIElements.VectorImage vi, UnityEngine.UIElements.VisualElement context)

Disassembly:
	0x03D2EAE4 MOVZ W1, 0x8
	0x03D2EAE8 MOV X20, X0
	0x03D2EAEC BL 0x301B830
	0x03D2EAF0 STR X20, [X19 + 0x20]
	0x03D2EAF4 LDR X0, [X22]
	0x03D2EAF8 BL 0x1C16F10
	0x03D2EAFC LDR X2, [X21]
	0x03D2EB00 MOVZ W1, 0x8
	0x03D2EB04 MOV X20, X0
	0x03D2EB08 BL 0x301B830
	0x03D2EB0C STR X20, [X19 + 0x28]
	0x03D2EB10 MOV X0, X19
	0x03D2EB14 LDP X20, X19, [X31 + 0x50]
	0x03D2EB18 LDP X22, X21, [X31 + 0x40]
	0x03D2EB1C LDP X24, X23, [X31 + 0x30]
	0x03D2EB20 LDP X26, X25, [X31 + 0x20]
	0x03D2EB24 LDP X28, X27, [X31 + 0x10]
	0x03D2EB28 MOV X1, X31
	0x03D2EB2C LDR X30, [X31], #0x60
	0x03D2EB30 B 0x33BDD8C
	0x03D2EB34 SUB X31, X31, 0xC0
	0x03D2EB38 STP X30, X21, [X31 + 0xA0]
	0x03D2EB3C STP X20, X19, [X31 + 0xB0]
	0x03D2EB40 ADRP X20, 0x6B9000
	0x03D2EB44 ADRP X21, 0x426000
	0x03D2EB48 LDRB W8, [X20 + 0xB13]
	0x03D2EB4C LDR X21, [X21 + 0x640]
	0x03D2EB50 MOV X19, X0
	0x03D2EB54 TBNZ X8, 0x0, 0x3D2EB78
	0x03D2EB58 ADRP X0, 0x3EE000
	0x03D2EB5C LDR X0, [X0 + 0x820]
	0x03D2EB60 BL 0x1C16CF4
	0x03D2EB64 ADRP X0, 0x426000
	0x03D2EB68 LDR X0, [X0 + 0x640]
	0x03D2EB6C BL 0x1C16CF4
	0x03D2EB70 MOVZ W8, 0x1
	0x03D2EB74 STRB W8, [X20 + 0xB13]
	0x03D2EB78 LDR X0, [X21]
	0x03D2EB7C MOVZ W1, 0xA
	0x03D2EB80 BL 0x1C16D6C
	0x03D2EB84 MOV X20, X0
	0x03D2EB88 ADD X0, X31, 0x90
	0x03D2EB8C MOVZ W3, 0x3
	0x03D2EB90 MOV W1, W31
	0x03D2EB94 MOV W2, W31
	0x03D2EB98 MOV W4, W31
	0x03D2EB9C MOV X5, X31
	0x03D2EBA0 STP X31, X31, [X31 + 0x90]
	0x03D2EBA4 BL 0x3C4AD10
	0x03D2EBA8 CBZ X20, 0x3D2EDCC
	0x03D2EBAC LDR W8, [X20 + 0x18]
	0x03D2EBB0 CBZ W8, 0x3D2EDC8
	0x03D2EBB4 LDR V0, [X31 + 0x9]
	0x03D2EBB8 ADD X0, X31, 0x80
	0x03D2EBBC MOVZ W1, 0x3
	0x03D2EBC0 MOVZ W2, 0x2
	0x03D2EBC4 MOVZ W3, 0x4
	0x03D2EBC8 MOV W4, W31
	0x03D2EBCC MOV X5, X31
	0x03D2EBD0 STR V0, [X20 + 0x2]
	0x03D2EBD4 STP X31, X31, [X31 + 0x80]
	0x03D2EBD8 BL 0x3C4AD10
	0x03D2EBDC LDR W8, [X20 + 0x18]
	0x03D2EBE0 CMP W8, 0x1
	0x03D2EBE4 B.LS 0x3D2EDC8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6BA000
	007 Move W8, [X22+2825]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x437000
	016 Move X0, [X0+3288]
	017 Call 0x1C17CF4
	018 Move X0, 0x3C6000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2825], W8
	023 Move [X31+8], X31
	024 Move W8, [X21+57]
	025 Compare W8, 0
	026 JumpIfEqual {31}
	027 Move X0, X21
	028 Move X1, X31
	029 Call DisposeHelper.NotifyDisposedUsed, X0
	030 Move X0, X31
	031 Move X8, 0x3C6000
	032 Move X8, [X8+1432]
	033 Move X0, [X8]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move X1, X31
	040 Move X2, X31
	041 Call Object.op_Equality, X0, X1
	042 Move W8, W0
	043 Move X0, X31
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {75}
	048 Move X0, [X21+24]
	049 Compare X0, 0
	050 JumpIfEqual {81}
	051 Move X8, 0x437000
	052 Move X8, [X8+3288]
	053 Add X2, X31, 8
	054 Move X1, X20
	055 Move X3, [X8]
	056 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {67}
	061 Move X0, [X31+8]
	062 Compare X0, 0
	063 JumpIfEqual {81}
	064 Move W8, [X0+24]
	065 Add W8, W8, 1
	066 Move [X0+24], W8
	067 Move X0, X21
	068 Move X1, X20
	069 Move X2, X19
	070 Call VectorImageManager.Register, X0, X1, X2
	071 Move [X31+8], X0
	072 Compare X0, 0
	073 JumpIfEqual {81}
	074 Move X0, [X0+32]
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Return X0
	081 Call 0x1C17F20

Method: UnityEngine.UIElements.UIR.VectorImageRenderInfo Register(UnityEngine.UIElements.VectorImage vi, UnityEngine.UIElements.VisualElement context)

Disassembly:
	0x03D2EBE8 LDR V0, [X31 + 0x8]
	0x03D2EBEC ADD X0, X31, 0x70
	0x03D2EBF0 MOVZ W1, 0x4
	0x03D2EBF4 MOVZ W3, 0x2
	0x03D2EBF8 MOV W2, W31
	0x03D2EBFC MOV W4, W31
	0x03D2EC00 MOV X5, X31
	0x03D2EC04 STR V0, [X20 + 0x3]
	0x03D2EC08 STP X31, X31, [X31 + 0x70]
	0x03D2EC0C BL 0x3C4AD10
	0x03D2EC10 LDR W8, [X20 + 0x18]
	0x03D2EC14 CMP W8, 0x2
	0x03D2EC18 B.LS 0x3D2EDC8
	0x03D2EC1C LDR V0, [X31 + 0x7]
	0x03D2EC20 ADD X0, X31, 0x60
	0x03D2EC24 MOVZ W1, 0x5
	0x03D2EC28 MOVZ W2, 0x2
	0x03D2EC2C MOVZ W3, 0x4
	0x03D2EC30 MOV W4, W31
	0x03D2EC34 MOV X5, X31
	0x03D2EC38 STR V0, [X20 + 0x4]
	0x03D2EC3C STP X31, X31, [X31 + 0x60]
	0x03D2EC40 BL 0x3C4AD10
	0x03D2EC44 LDR W8, [X20 + 0x18]
	0x03D2EC48 CMP W8, 0x3
	0x03D2EC4C B.LS 0x3D2EDC8
	0x03D2EC50 LDR V0, [X31 + 0x6]
	0x03D2EC54 ADD X0, X31, 0x50
	0x03D2EC58 MOVZ W1, 0x6
	0x03D2EC5C MOVZ W2, 0x2
	0x03D2EC60 MOVZ W3, 0x4
	0x03D2EC64 MOV W4, W31
	0x03D2EC68 MOV X5, X31
	0x03D2EC6C STR V0, [X20 + 0x5]
	0x03D2EC70 STP X31, X31, [X31 + 0x50]
	0x03D2EC74 BL 0x3C4AD10
	0x03D2EC78 LDR W8, [X20 + 0x18]
	0x03D2EC7C CMP W8, 0x4
	0x03D2EC80 B.LS 0x3D2EDC8
	0x03D2EC84 LDR V0, [X31 + 0x5]
	0x03D2EC88 ADD X0, X31, 0x40
	0x03D2EC8C MOVZ W1, 0x7
	0x03D2EC90 MOVZ W2, 0x2
	0x03D2EC94 MOVZ W3, 0x4
	0x03D2EC98 MOV W4, W31
	0x03D2EC9C MOV X5, X31
	0x03D2ECA0 STR V0, [X20 + 0x6]
	0x03D2ECA4 STP X31, X31, [X31 + 0x40]
	0x03D2ECA8 BL 0x3C4AD10
	0x03D2ECAC LDR W8, [X20 + 0x18]
	0x03D2ECB0 CMP W8, 0x5
	0x03D2ECB4 B.LS 0x3D2EDC8
	0x03D2ECB8 LDR V0, [X31 + 0x4]
	0x03D2ECBC ADD X0, X31, 0x30
	0x03D2ECC0 MOVZ W1, 0x8
	0x03D2ECC4 MOVZ W2, 0x2
	0x03D2ECC8 MOVZ W3, 0x4
	0x03D2ECCC MOV W4, W31
	0x03D2ECD0 MOV X5, X31
	0x03D2ECD4 STR V0, [X20 + 0x7]
	0x03D2ECD8 STP X31, X31, [X31 + 0x30]
	0x03D2ECDC BL 0x3C4AD10
	0x03D2ECE0 LDR W8, [X20 + 0x18]
	0x03D2ECE4 CMP W8, 0x6
	0x03D2ECE8 B.LS 0x3D2EDC8
	0x03D2ECEC LDR V0, [X31 + 0x3]
	0x03D2ECF0 ADD X0, X31, 0x20
	0x03D2ECF4 MOVZ W1, 0x9
	0x03D2ECF8 MOVZ W2, 0x2
	0x03D2ECFC MOVZ W3, 0x4
	0x03D2ED00 MOV W4, W31
	0x03D2ED04 MOV X5, X31
	0x03D2ED08 STR V0, [X20 + 0x8]
	0x03D2ED0C STP X31, X31, [X31 + 0x20]
	0x03D2ED10 BL 0x3C4AD10
	0x03D2ED14 LDR W8, [X20 + 0x18]
	0x03D2ED18 CMP W8, 0x7
	0x03D2ED1C B.LS 0x3D2EDC8
	0x03D2ED20 LDR V0, [X31 + 0x2]
	0x03D2ED24 ADD X0, X31, 0x10
	0x03D2ED28 MOVZ W1, 0xA
	0x03D2ED2C MOVZ W3, 0x4
	0x03D2ED30 MOV W2, W31
	0x03D2ED34 MOV W4, W31
	0x03D2ED38 MOV X5, X31
	0x03D2ED3C STR V0, [X20 + 0x9]
	0x03D2ED40 STP X31, X31, [X31 + 0x10]
	0x03D2ED44 BL 0x3C4AD10
	0x03D2ED48 LDR W8, [X20 + 0x18]
	0x03D2ED4C CMP W8, 0x8
	0x03D2ED50 B.LS 0x3D2EDC8
	0x03D2ED54 LDR V0, [X31 + 0x1]
	0x03D2ED58 ADD X0, X31, 0x0
	0x03D2ED5C MOVZ W1, 0xB
	0x03D2ED60 MOVZ W3, 0x1
	0x03D2ED64 MOV W2, W31
	0x03D2ED68 MOV W4, W31
	0x03D2ED6C MOV X5, X31
	0x03D2ED70 STR V0, [X20 + 0xA]
	0x03D2ED74 STP X31, X31, [X31]
	0x03D2ED78 BL 0x3C4AD10
	0x03D2ED7C LDR W8, [X20 + 0x18]
	0x03D2ED80 CMP W8, 0x9
	0x03D2ED84 B.LS 0x3D2EDC8
	0x03D2ED88 LDR V0, [X31]
	0x03D2ED8C ADRP X8, 0x3EE000
	0x03D2ED90 LDR X8, [X8 + 0x820]
	0x03D2ED94 STR V0, [X20 + 0xB]
	0x03D2ED98 LDR X0, [X8]
	0x03D2ED9C LDR W8, [X0 + 0xE0]
	0x03D2EDA0 CBNZ W8, 0x3D2EDA8
	0x03D2EDA4 BL 0x1C16DFC
	0x03D2EDA8 MOV X0, X20
	0x03D2EDAC MOV X1, X31
	0x03D2EDB0 BL 0x3D1F578
	0x03D2EDB4 STR X0, [X19 + 0x20]
	0x03D2EDB8 LDP X20, X19, [X31 + 0xB0]
	0x03D2EDBC LDP X30, X21, [X31 + 0xA0]
	0x03D2EDC0 ADD X31, X31, 0xC0
	0x03D2EDC4 RET
	0x03D2EDC8 BL 0x1C16F28
	0x03D2EDCC BL 0x1C16F20
	0x03D2EDD0 SUB X31, X31, 0x30
	0x03D2EDD4 STP X30, X21, [X31 + 0x10]
	0x03D2EDD8 STP X20, X19, [X31 + 0x20]
	0x03D2EDDC ADRP X20, 0x6B9000
	0x03D2EDE0 LDRB W8, [X20 + 0xB14]
	0x03D2EDE4 MOV X19, X0
	0x03D2EDE8 TBNZ X8, 0x0, 0x3D2EE18
	0x03D2EDEC ADRP X0, 0x422000
	0x03D2EDF0 LDR X0, [X0 + 0x590]
	0x03D2EDF4 BL 0x1C16CF4
	0x03D2EDF8 ADRP X0, 0x3EE000
	0x03D2EDFC LDR X0, [X0 + 0xD08]
	0x03D2EE00 BL 0x1C16CF4
	0x03D2EE04 ADRP X0, 0x3EE000
	0x03D2EE08 LDR X0, [X0 + 0x820]
	0x03D2EE0C BL 0x1C16CF4
	0x03D2EE10 MOVZ W8, 0x1
	0x03D2EE14 STRB W8, [X20 + 0xB14]
	0x03D2EE18 LDRB W8, [X19 + 0x10]
	0x03D2EE1C CBNZ W8, 0x3D2EF54
	0x03D2EE20 LDR X8, [X19 + 0x50]
	0x03D2EE24 CBNZ X8, 0x3D2EF54
	0x03D2EE28 MOV X0, X19
	0x03D2EE2C BL 0x3D2EB34
	0x03D2EE30 ADRP X8, 0x3EE000
	0x03D2EE34 LDR X8, [X8 + 0xD08]
	0x03D2EE38 MOVZ W1, 0x4
	0x03D2EE3C LDR X0, [X8]
	0x03D2EE40 BL 0x1C16D6C
	0x03D2EE44 STR X0, [X19 + 0x50]
	0x03D2EE48 ADRP X8, 0x422000
	0x03D2EE4C LDR X8, [X8 + 0x590]
	0x03D2EE50 LDR X0, [X8]
	0x03D2EE54 BL 0x1C16F10
	0x03D2EE58 MOV X1, X31
	0x03D2EE5C MOV X20, X0
	0x03D2EE60 BL 0x3C122EC
	0x03D2EE64 ADD X0, X31, 0x0
	0x03D2EE68 MOVZ W1, 0x1
	0x03D2EE6C MOV X2, X31
	0x03D2EE70 STR X20, [X19 + 0x58]
	0x03D2EE74 STR W31, [X31 + 0x8]
	0x03D2EE78 STR X31, [X31]
	0x03D2EE7C BL 0x3C5B1BC
	0x03D2EE80 ADD X0, X31, 0x0
	0x03D2EE84 MOVZ W1, 0xFF
	0x03D2EE88 MOV X2, X31
	0x03D2EE8C BL 0x3C5B230
	0x03D2EE90 ADD X0, X31, 0x0
	0x03D2EE94 MOVZ W1, 0xFF
	0x03D2EE98 MOV X2, X31
	0x03D2EE9C BL 0x3C5B240
	0x03D2EEA0 ADD X0, X31, 0x0
	0x03D2EEA4 MOVZ W1, 0x3
	0x03D2EEA8 MOV X2, X31
	0x03D2EEAC BL 0x3C5B254
	0x03D2EEB0 ADD X0, X31, 0x0
	0x03D2EEB4 MOV W1, W31
	0x03D2EEB8 MOV X2, X31
	0x03D2EEBC BL 0x3C5B270
	0x03D2EEC0 ADD X0, X31, 0x0
	0x03D2EEC4 MOV W1, W31
	0x03D2EEC8 MOV X2, X31
	0x03D2EECC BL 0x3C5B28C
	0x03D2EED0 ADD X0, X31, 0x0
	0x03D2EED4 MOVZ W1, 0x3
	0x03D2EED8 MOV X2, X31
	0x03D2EEDC BL 0x3C5B2A8
	0x03D2EEE0 ADD X0, X31, 0x0
	0x03D2EEE4 MOVZ W1, 0x2
	0x03D2EEE8 MOV X2, X31
	0x03D2EEEC BL 0x3C5B25C
	0x03D2EEF0 ADD X0, X31, 0x0
	0x03D2EEF4 MOV W1, W31
	0x03D2EEF8 MOV X2, X31
	0x03D2EEFC BL 0x3C5B278
	0x03D2EF00 ADD X0, X31, 0x0
	0x03D2EF04 MOV W1, W31
	0x03D2EF08 MOV X2, X31
	0x03D2EF0C BL 0x3C5B294
	0x03D2EF10 ADD X0, X31, 0x0
	0x03D2EF14 MOVZ W1, 0x4
	0x03D2EF18 MOV X2, X31
	0x03D2EF1C BL 0x3C5B2B0
	0x03D2EF20 ADRP X8, 0x3EE000
	0x03D2EF24 LDR X8, [X8 + 0x820]
	0x03D2EF28 LDR X20, [X31]
	0x03D2EF2C LDR W21, [X31 + 0x8]
	0x03D2EF30 LDR X0, [X8]
	0x03D2EF34 LDR W8, [X0 + 0xE0]
	0x03D2EF38 CBNZ W8, 0x3D2EF40
	0x03D2EF3C BL 0x1C16DFC
	0x03D2EF40 MOV X0, X20
	0x03D2EF44 MOV X1, X21
	0x03D2EF48 MOV X2, X31
	0x03D2EF4C BL 0x3D1F8F4
	0x03D2EF50 STR X0, [X19 + 0x18]
	0x03D2EF54 LDP X20, X19, [X31 + 0x20]
	0x03D2EF58 LDP X30, X21, [X31 + 0x10]
	0x03D2EF5C ADD X31, X31, 0x30
	0x03D2EF60 RET
	0x03D2EF64 LDR X8, [X0 + 0x50]
	0x03D2EF68 CMP X8, 0x0
	0x03D2EF6C CSET W0, NE
	0x03D2EF70 RET
	0x03D2EF74 LDRB W0, [X0 + 0xAD]
	0x03D2EF78 RET
	0x03D2EF7C AND W8, W1, 0x1
	0x03D2EF80 STRB W8, [X0 + 0xAD]
	0x03D2EF84 RET
	0x03D2EF88 STP X30, X21, [X31 - 0x20]!
	0x03D2EF8C STP X20, X19, [X31 + 0x10]
	0x03D2EF90 ADRP X21, 0x6B9000
	0x03D2EF94 ADRP X20, 0x3CC000
	0x03D2EF98 LDRB W8, [X21 + 0xB15]
	0x03D2EF9C LDR X20, [X20 + 0xC10]
	0x03D2EFA0 MOV X19, X0
	0x03D2EFA4 TBNZ X8, 0x0, 0x3D2EFBC
	0x03D2EFA8 ADRP X0, 0x3CC000

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move X20, 0x6BA000
	015 Move W8, [X20+2826]
	016 Move X22, X2
	017 Move X21, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {46}
	023 Move X0, 0x3C6000
	024 Move X0, [X0+2600]
	025 Call 0x1C17CF4
	026 Move X0, 0x437000
	027 Move X0, [X0+3296]
	028 Call 0x1C17CF4
	029 Move X0, 0x437000
	030 Move X0, [X0+3304]
	031 Call 0x1C17CF4
	032 Move X0, 0x437000
	033 Move X0, [X0+3312]
	034 Call 0x1C17CF4
	035 Move X0, 0x3EE000
	036 Move X0, [X0+1568]
	037 Call 0x1C17CF4
	038 Move X0, 0x437000
	039 Move X0, [X0+3320]
	040 Call 0x1C17CF4
	041 Move X0, 0x437000
	042 Move X0, [X0+3328]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+2826], W8
	046 Move [X31+120], W31
	047 Move [X31+104], X31
	048 Move [X31+112], X31
	049 Move [X31+100], W31
	050 Move X0, [X19+32]
	051 Compare X0, 0
	052 JumpIfEqual {281}
	053 Move X8, 0x437000
	054 Move X8, [X8+3312]
	055 Move X1, [X8]
	056 Call 0x2EF1E28, X0
	057 Compare X0, 0
	058 JumpIfEqual {281}
	059 Move W8, 1
	060 Move [X0+24], W8
	061 Move X20, X0
	062 Move X0, [X19+24]
	063 Compare X0, 0
	064 JumpIfEqual {281}
	065 Move X8, 0x437000
	066 Move X8, [X8+3296]
	067 Move X1, X21
	068 Move X2, X20
	069 Move X3, [X8]
	070 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	071 Compare X21, 0
	072 JumpIfEqual {281}
	073 Move X8, [X21+56]
	074 Compare X8, 0
	075 JumpIfEqual {246}
	076 Move X23, [X8+24]
	077 Compare W23, 0
	078 JumpIfEqual {246}
	079 Move X0, [X19+48]
	080 Compare X0, 0
	081 JumpIfEqual {281}
	082 Add X8, X31, 64
	083 Move W1, W23
	084 Move X2, X31
	085 Call GradientSettingsAtlas.Add, X0, X1
	086 Move W25, [X31+64]
	087 Move W24, [X31+68]
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 Move [X31+8], V0
	090 Compare W24, 0
	091 JumpIfEqual {162}
	092 Move X0, [X19+16]
	093 Compare X0, 0
	094 JumpIfEqual {281}
	095 Move X8, [X0]
	096 Move X2, [X21+32]
	097 Add X3, X31, 120
	098 Add X4, X31, 104
	099 Move X9, [X8+376]
	100 Move X5, [X8+384]
	101 Move X1, X22
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {192}
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X28, 0x437000
	109 Move X28, [X28+3304]
	110 Move X22, X31
	111 Move X29, X31
	112 And X23, X23, 0
	113 Add X26, X20, 32
	114 Move W27, 48
	115 Move X0, [X19+40]
	116 Compare X0, 0
	117 JumpIfEqual {281}
	118 Move X1, [X28]
	119 Call 0x2EF1E28, X0
	120 Compare X22, 0
	121 JumpIfEqual {125}
	122 Compare X29, 0
	123 JumpIfEqual {281}
	124 Add X8, X29, 48
	125 Move X8, X26
	126 Move [X8], X0
	127 Compare X0, 0
	128 JumpIfEqual {281}
	129 Add W8, W25, W22
	130 Move [X0+24], W22
	131 Move [X0+28], W8
	132 Move X8, [X21+56]
	133 Compare X8, 0
	134 JumpIfEqual {281}
	135 Move W9, [X8+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add X8, X8, X27
	138 Move V0, [X31+104]
	139 Move V1, [X8]
	140 Move X8, [X8+8]
	141 Add X22, X22, 1
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Add S0, S0, S1
	144 Move [X0+40], X8
	145 Move [X0+32], D0
	146 Move W8, [X31+120]
	147 Add X27, X27, 32
	148 Move X29, X0
	149 Move [X0+56], W8
	150 Move X0, [X19+48]
	151 Move V0, [X31+8]
	152 Move [X31+4], V0
	153 Compare X0, 0
	154 JumpIfEqual {281}
	155 Move X3, [X20+32]
	156 Move V0, [X31+4]
	157 Move X2, [X21+56]
	158 Add X1, X31, 40
	159 Move [X31+40], W25
	160 Move [X31+44], W24
	161 Move [X31+48], V0
	162 Move W8, [X19+56]
	163 Compare W8, 0
	164 JumpIfNotEqual {246}
	165 Move X0, [X19+48]
	166 Compare X0, 0
	167 JumpIfEqual {281}
	168 Move X1, X31
	169 Call GradientSettingsAtlas.get_length, X0
	170 Move [X31+100], W0
	171 Add X0, X31, 100
	172 Move X1, X31
	173 Call Int32.ToString, X0
	174 Move X8, [X19+48]
	175 Compare X8, 0
	176 JumpIfEqual {281}
	177 Move X21, X0
	178 Move X0, X8
	179 Move X1, X31
	180 Call GradientSettingsAtlas.get_atlas, X0
	181 Move X8, 0x437000
	182 Move X9, 0x437000
	183 Move X8, [X8+3328]
	184 Move X9, [X9+3320]
	185 Move X22, [X8]
	186 Move X23, [X9]
	187 Compare X0, 0
	188 JumpIfEqual {261}
	189 Move X1, X31
	190 Call Object.get_name, X0
	191 Move X3, X0
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move [X31+12], W24
	194 Move X28, 0x437000
	195 Move X29, 0x3EE000
	196 Move X28, [X28+3304]
	197 Move X29, [X29+1568]
	198 Move X24, X31
	199 Move W26, W31
	200 Add X27, X20, 32
	201 Move X0, [X19+40]
	202 Compare X0, 0
	203 JumpIfEqual {281}
	204 Move X1, [X28]
	205 Call 0x2EF1E28, X0
	206 Move X22, X0
	207 Compare W26, 0
	208 JumpIfEqual {212}
	209 Compare X24, 0
	210 JumpIfEqual {281}
	211 Add X8, X24, 48
	212 Move X8, X27
	213 Move [X8], X22
	214 Compare X22, 0
	215 JumpIfEqual {281}
	216 Add W8, W25, W26
	217 Move [X22+24], W26
	218 Move [X22+28], W8
	219 Move X0, [X29]
	220 Move W8, [X0+224]
	221 Compare W8, 0
	222 JumpIfNotEqual {225}
	223 Call 0x1C17DFC
	224 Move X0, [X29]
	225 Move X8, [X0+184]
	226 Add W26, W26, 1
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X24, X22
	229 Move W8, [X8]
	230 Move [X22+56], W8
	231 Move X0, [X19+48]
	232 Move V0, [X31+8]
	233 Move [X31+4], V0
	234 Compare X0, 0
	235 JumpIfEqual {281}
	236 Move V0, [X31+4]
	237 Move W8, [X31+12]
	238 Move X2, [X21+56]
	239 Add X1, X31, 16
	240 Move [X31+24], V0
	241 Move [X31+16], W25
	242 Move [X31+20], W8
	243 Move X3, X31
	244 Move X4, X31
	245 Call GradientSettingsAtlas.Write, X0, X1, X2, X3
	246 Move X0, X20
	247 Move X20, [X31+224]
	248 Move X19, [X31+232]
	249 Move X22, [X31+208]
	250 Move X21, [X31+216]
	251 Move X24, [X31+192]
	252 Move X23, [X31+200]
	253 Move X26, [X31+176]
	254 Move X25, [X31+184]
	255 Move X28, [X31+160]
	256 Move X27, [X31+168]
	257 Move X29, [X31+144]
	258 Move X30, [X31+152]
	259 Add X31, X31, 240
	260 Return X0
	261 Move X3, X31
	262 Move X0, X23
	263 Move X1, X21
	264 Move X2, X22
	265 Move X4, X31
	266 Call String.Concat, X0, X1, X2, X3
	267 Move X8, 0x3C6000
	268 Move X8, [X8+2600]
	269 Move X21, X0
	270 Move X8, [X8]
	271 Move W9, [X8+224]
	272 Compare W9, 0
	273 JumpIfNotEqual {276}
	274 Move X0, X8
	275 Call 0x1C17DFC
	276 Move X0, X21
	277 Move X1, X31
	278 Call Debug.LogError, X0
	279 Move W8, 1
	280 Move [X19+56], W8
	281 Call 0x1C17F20
	282 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x03D2EFAC LDR X0, [X0 + 0xC10]
	0x03D2EFB0 BL 0x1C16CF4
	0x03D2EFB4 MOVZ W8, 0x1
	0x03D2EFB8 STRB W8, [X21 + 0xB15]
	0x03D2EFBC LDR X8, [X19]
	0x03D2EFC0 MOVZ W1, 0x1
	0x03D2EFC4 MOV X0, X19
	0x03D2EFC8 LDP X9, X2, [X8 + 0x188]
	0x03D2EFCC BLR X9
	0x03D2EFD0 LDR X0, [X20]
	0x03D2EFD4 LDR W8, [X0 + 0xE0]
	0x03D2EFD8 CBNZ W8, 0x3D2EFE0
	0x03D2EFDC BL 0x1C16DFC
	0x03D2EFE0 MOV X0, X19
	0x03D2EFE4 LDP X20, X19, [X31 + 0x10]
	0x03D2EFE8 MOV X1, X31
	0x03D2EFEC LDP X30, X21, [X31], #0x20
	0x03D2EFF0 B 0x33B3E9C
	0x03D2EFF4 STR X30, [X31 - 0x30]!
	0x03D2EFF8 STP X22, X21, [X31 + 0x10]
	0x03D2EFFC STP X20, X19, [X31 + 0x20]
	0x03D2F000 ADRP X21, 0x6B8000
	0x03D2F004 LDRB W8, [X21 + 0xB16]
	0x03D2F008 MOV W20, W1
	0x03D2F00C MOV X19, X0
	0x03D2F010 TBNZ X8, 0x0, 0x3D2F040
	0x03D2F014 ADRP X0, 0x435000
	0x03D2F018 LDR X0, [X0 + 0xE60]
	0x03D2F01C BL 0x1C16CF4
	0x03D2F020 ADRP X0, 0x435000
	0x03D2F024 LDR X0, [X0 + 0x6F8]
	0x03D2F028 BL 0x1C16CF4
	0x03D2F02C ADRP X0, 0x3ED000
	0x03D2F030 LDR X0, [X0 + 0x820]
	0x03D2F034 BL 0x1C16CF4
	0x03D2F038 MOVZ W8, 0x1
	0x03D2F03C STRB W8, [X21 + 0xB16]
	0x03D2F040 LDRB W8, [X19 + 0xAD]
	0x03D2F044 CBNZ W8, 0x3D2F12C
	0x03D2F048 ADRP X22, 0x435000
	0x03D2F04C LDR X22, [X22 + 0x6F8]
	0x03D2F050 LDR X0, [X22]
	0x03D2F054 LDR W8, [X0 + 0xE0]
	0x03D2F058 CBNZ W8, 0x3D2F064
	0x03D2F05C BL 0x1C16DFC
	0x03D2F060 LDR X0, [X22]
	0x03D2F064 LDR X8, [X0 + 0xB8]
	0x03D2F068 LDR W9, [X8 + 0x8]
	0x03D2F06C SUB W9, W9, 0x1
	0x03D2F070 STR W9, [X8 + 0x8]
	0x03D2F074 TBZ X20, 0x0, 0x3D2F124
	0x03D2F078 LDRB W8, [X19 + 0x10]
	0x03D2F07C CBZ W8, 0x3D2F0A0
	0x03D2F080 LDR X20, [X19 + 0x28]
	0x03D2F084 CBZ X20, 0x3D2F124
	0x03D2F088 LDR X21, [X20 + 0x28]
	0x03D2F08C MOV X0, X20
	0x03D2F090 BL 0x3D33D04
	0x03D2F094 MOV X20, X21
	0x03D2F098 CBNZ X21, 0x3D2F088
	0x03D2F09C B 0x3D2F124
	0x03D2F0A0 ADRP X8, 0x3ED000
	0x03D2F0A4 LDR X8, [X8 + 0x820]
	0x03D2F0A8 LDR X0, [X8]
	0x03D2F0AC LDR W8, [X0 + 0xE0]
	0x03D2F0B0 CBNZ W8, 0x3D2F0B8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x6BA000
	009 Move X24, 0x437000
	010 Move X19, 0x437000
	011 Move X20, 0x437000
	012 Move X22, 0x437000
	013 Move X21, 0x437000
	014 Move W8, [X23+2827]
	015 Move X24, [X24+3336]
	016 Move X19, [X19+3344]
	017 Move X20, [X20+1792]
	018 Move X22, [X22+3352]
	019 Move X21, [X21+3360]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x437000
	025 Move X0, [X0+3344]
	026 Call 0x1C17CF4
	027 Move X0, 0x437000
	028 Move X0, [X0+3336]
	029 Call 0x1C17CF4
	030 Move X0, 0x436000
	031 Move X0, [X0+1792]
	032 Call 0x1C17CF4
	033 Move X0, 0x436000
	034 Move X0, [X0+3360]
	035 Call 0x1C17CF4
	036 Move X0, 0x436000
	037 Move X0, [X0+3352]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+2827], W8
	041 Move X0, [X24]
	042 Call 0x1C17F10
	043 Move X2, [X19]
	044 Move W1, 16
	045 Move X19, X0
	046 Call List`1<Object>..ctor, X0, X1
	047 Move X8, [X20]
	048 Move W1, 1
	049 Move W2, W31
	050 Move W3, W31
	051 Move X8, [X8+184]
	052 Move X4, X31
	053 Move [X8], X19
	054 Move X0, [X22]
	055 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	056 Move X8, [X20]
	057 Move W1, 1
	058 Move W2, W31
	059 Move W3, W31
	060 Move X8, [X8+184]
	061 Move X4, X31
	062 Move [X8+8], X0
	063 Move X0, [X21]
	064 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	065 Move X8, [X20]
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X8, [X8+184]
	073 Move [X8+16], X0
	074 Move X30, [X31+64]
	075 Return 

