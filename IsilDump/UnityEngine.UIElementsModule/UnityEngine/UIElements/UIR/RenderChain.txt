Type: UnityEngine.UIElements.UIR.RenderChain

Method: UnityEngine.UIElements.UIR.OpacityIdAccelerator get_opacityIdAccelerator()

Disassembly:
	0x03D24478 LDR X9, [X8 + 0x18]
	0x03D2447C CBZ W9, 0x3D249B0

ISIL:
	001 Move X0, [X0+248]
	002 Return X0

Method: System.Void set_opacityIdAccelerator(UnityEngine.UIElements.UIR.OpacityIdAccelerator value)

Disassembly:
	0x03D24480 LDR W10, [X8 + 0x20]
	0x03D24484 CMP W22, W10

ISIL:
	001 Move [X0+248], X1
	002 Return 

Method: System.Void .cctor()

Disassembly:
	0x03D24488 B.GT 0x3D2452C
	0x03D2448C LDR X0, [X20]
	0x03D24490 CBZ X0, 0x3D249AC
	0x03D24494 LDR X2, [X28]
	0x03D24498 MOV W1, W22
	0x03D2449C BL 0x301BCCC
	0x03D244A0 CBZ X0, 0x3D2451C
	0x03D244A4 MOV X23, X0
	0x03D244A8 LDRB W8, [X23 + 0xC0]
	0x03D244AC LDR X25, [X23 + 0xB0]
	0x03D244B0 ANDS W31, W8, 0xC
	0x03D244B4 B.EQ 0x3D24508
	0x03D244B8 LDRB W8, [X23 + 0xE8]
	0x03D244BC CBZ W8, 0x3D244F8
	0x03D244C0 LDR W8, [X23 + 0xC4]
	0x03D244C4 LDR W24, [X19 + 0x38]
	0x03D244C8 CMP W8, W24
	0x03D244CC B.EQ 0x3D244F8
	0x03D244D0 LDR X0, [X29]
	0x03D244D4 LDR W8, [X0 + 0xE0]
	0x03D244D8 CBNZ W8, 0x3D244E0
	0x03D244DC BL 0x1C16DFC
	0x03D244E0 MOV X0, X19
	0x03D244E4 MOV X1, X23
	0x03D244E8 MOV W2, W24
	0x03D244EC MOV X3, X21
	0x03D244F0 MOV X4, X31
	0x03D244F4 BL 0x3D3850C
	0x03D244F8 MOVN W2, 0xC
	0x03D244FC MOV X0, X20
	0x03D24500 MOV X1, X23
	0x03D24504 BL 0x3D249B4
	0x03D24508 LDR W8, [X19 + 0xC4]
	0x03D2450C MOV X23, X25
	0x03D24510 ADD W8, W8, 0x1
	0x03D24514 STR W8, [X19 + 0xC4]
	0x03D24518 CBNZ X25, 0x3D244A8
	0x03D2451C LDR X8, [X19 + 0x30]
	0x03D24520 ADD W22, W22, 0x1
	0x03D24524 CBNZ X8, 0x3D24478
	0x03D24528 B 0x3D249AC
	0x03D2452C LDR W11, [X19 + 0x38]
	0x03D24530 LDR X10, [X19 + 0x28]
	0x03D24534 ADD W11, W11, 0x1
	0x03D24538 STR W11, [X19 + 0x38]
	0x03D2453C CBZ X10, 0x3D249AC
	0x03D24540 LDR W11, [X10 + 0x18]
	0x03D24544 CMP W11, 0x1
	0x03D24548 B.LS 0x3D249B0
	0x03D2454C CMP W9, 0x2
	0x03D24550 B.CC 0x3D249B0
	0x03D24554 LDR W22, [X10 + 0x24]
	0x03D24558 LDR W10, [X8 + 0x24]
	0x03D2455C CMP W22, W10
	0x03D24560 B.GT 0x3D24610
	0x03D24564 LDR X0, [X20]
	0x03D24568 CBZ X0, 0x3D249AC
	0x03D2456C LDR X2, [X28]
	0x03D24570 MOV W1, W22
	0x03D24574 BL 0x301BCCC
	0x03D24578 CBZ X0, 0x3D245F4
	0x03D2457C MOV X23, X0
	0x03D24580 LDRH W8, [X23 + 0xC0]
	0x03D24584 LDR X25, [X23 + 0xB0]
	0x03D24588 ANDS W31, W8, 0x180
	0x03D2458C B.EQ 0x3D245E0
	0x03D24590 LDRB W8, [X23 + 0xE8]
	0x03D24594 CBZ W8, 0x3D245D0
	0x03D24598 LDR W8, [X23 + 0xC4]
	0x03D2459C LDR W24, [X19 + 0x38]
	0x03D245A0 CMP W8, W24
	0x03D245A4 B.EQ 0x3D245D0
	0x03D245A8 LDR X0, [X29]
	0x03D245AC LDR W8, [X0 + 0xE0]
	0x03D245B0 CBNZ W8, 0x3D245B8
	0x03D245B4 BL 0x1C16DFC
	0x03D245B8 MOV X0, X19
	0x03D245BC MOV X1, X23
	0x03D245C0 MOV W2, W24
	0x03D245C4 MOV X3, X21
	0x03D245C8 MOV X4, X31
	0x03D245CC BL 0x3D38BDC
	0x03D245D0 MOVN W2, 0x180
	0x03D245D4 MOV X0, X20
	0x03D245D8 MOV X1, X23
	0x03D245DC BL 0x3D249B4
	0x03D245E0 LDR W8, [X19 + 0xC4]
	0x03D245E4 MOV X23, X25
	0x03D245E8 ADD W8, W8, 0x1
	0x03D245EC STR W8, [X19 + 0xC4]
	0x03D245F0 CBNZ X25, 0x3D24580
	0x03D245F4 LDR X8, [X19 + 0x30]
	0x03D245F8 CBZ X8, 0x3D249AC
	0x03D245FC LDR X9, [X8 + 0x18]
	0x03D24600 ADD W22, W22, 0x1
	0x03D24604 CMP W9, 0x1
	0x03D24608 B.HI 0x3D24558
	0x03D2460C B 0x3D249B0
	0x03D24610 LDR W11, [X19 + 0x38]
	0x03D24614 LDR X10, [X19 + 0x28]
	0x03D24618 ADD W11, W11, 0x1
	0x03D2461C STR W11, [X19 + 0x38]
	0x03D24620 CBZ X10, 0x3D249AC
	0x03D24624 LDR W11, [X10 + 0x18]
	0x03D24628 CMP W11, 0x2
	0x03D2462C B.LS 0x3D249B0
	0x03D24630 CMP W9, 0x3
	0x03D24634 B.CC 0x3D249B0
	0x03D24638 LDR W22, [X10 + 0x28]
	0x03D2463C LDR W10, [X8 + 0x28]
	0x03D24640 CMP W22, W10
	0x03D24644 B.GT 0x3D246F0
	0x03D24648 LDR X0, [X20]
	0x03D2464C CBZ X0, 0x3D249AC
	0x03D24650 LDR X2, [X28]
	0x03D24654 MOV W1, W22
	0x03D24658 BL 0x301BCCC
	0x03D2465C CBZ X0, 0x3D246D4
	0x03D24660 MOV X23, X0
	0x03D24664 LDRB W8, [X23 + 0xC1]
	0x03D24668 LDR X25, [X23 + 0xB0]
	0x03D2466C TBZ X8, 0x1, 0x3D246C0
	0x03D24670 LDRB W8, [X23 + 0xE8]
	0x03D24674 CBZ W8, 0x3D246B0
	0x03D24678 LDR W8, [X23 + 0xC4]
	0x03D2467C LDR W24, [X19 + 0x38]
	0x03D24680 CMP W8, W24
	0x03D24684 B.EQ 0x3D246B0
	0x03D24688 LDR X0, [X29]
	0x03D2468C LDR W8, [X0 + 0xE0]
	0x03D24690 CBNZ W8, 0x3D24698
	0x03D24694 BL 0x1C16DFC
	0x03D24698 MOV X0, X19
	0x03D2469C MOV X1, X23
	0x03D246A0 MOV W2, W24
	0x03D246A4 MOV X3, X21
	0x03D246A8 MOV X4, X31
	0x03D246AC BL 0x3D39100
	0x03D246B0 MOVN W2, 0x200
	0x03D246B4 MOV X0, X20
	0x03D246B8 MOV X1, X23
	0x03D246BC BL 0x3D249B4
	0x03D246C0 LDR W8, [X19 + 0xC4]
	0x03D246C4 MOV X23, X25
	0x03D246C8 ADD W8, W8, 0x1
	0x03D246CC STR W8, [X19 + 0xC4]
	0x03D246D0 CBNZ X25, 0x3D24664
	0x03D246D4 LDR X8, [X19 + 0x30]
	0x03D246D8 CBZ X8, 0x3D249AC
	0x03D246DC LDR X9, [X8 + 0x18]
	0x03D246E0 ADD W22, W22, 0x1
	0x03D246E4 CMP W9, 0x2
	0x03D246E8 B.HI 0x3D2463C
	0x03D246EC B 0x3D249B0
	0x03D246F0 LDR W11, [X19 + 0x38]
	0x03D246F4 LDR X10, [X19 + 0x28]
	0x03D246F8 ADD W11, W11, 0x1
	0x03D246FC STR W11, [X19 + 0x38]
	0x03D24700 CBZ X10, 0x3D249AC
	0x03D24704 LDR W11, [X10 + 0x18]
	0x03D24708 CMP W11, 0x3
	0x03D2470C B.LS 0x3D249B0
	0x03D24710 CMP W9, 0x4
	0x03D24714 B.CC 0x3D249B0
	0x03D24718 LDR W22, [X10 + 0x2C]
	0x03D2471C LDR W8, [X8 + 0x2C]
	0x03D24720 CMP W22, W8

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X27, 0x6C4000
	014 Move X26, 0x441000
	015 Move X21, 0x441000
	016 Move X20, 0x441000
	017 Move X29, 0x441000
	018 Move X28, 0x441000
	019 Move X25, 0x441000
	020 Move X24, 0x441000
	021 Move X23, 0x441000
	022 Move X22, 0x441000
	023 Move X19, 0x441000
	024 Move X26, [X26+1616]
	025 Move X21, [X21+1624]
	026 Move X20, [X20+1632]
	027 Move X29, [X29+1640]
	028 Move X28, [X28+1648]
	029 Move X25, [X25+1656]
	030 Move W8, [X27+2706]
	031 Move X24, [X24+1664]
	032 Move X23, [X23+1672]
	033 Move X22, [X22+1000]
	034 Move X19, [X19+1680]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {80}
	039 Move X0, 0x441000
	040 Move X0, [X0+1000]
	041 Call 0x1C17CF4
	042 Move X0, 0x441000
	043 Move X0, [X0+1008]
	044 Call 0x1C17CF4
	045 Move X0, 0x441000
	046 Move X0, [X0+1680]
	047 Call 0x1C17CF4
	048 Move X0, 0x441000
	049 Move X0, [X0+1688]
	050 Call 0x1C17CF4
	051 Move X0, 0x441000
	052 Move X0, [X0+1624]
	053 Call 0x1C17CF4
	054 Move X0, 0x3F9000
	055 Move X0, [X0+2080]
	056 Call 0x1C17CF4
	057 Move X0, 0x441000
	058 Move X0, [X0+1640]
	059 Call 0x1C17CF4
	060 Move X0, 0x441000
	061 Move X0, [X0+1616]
	062 Call 0x1C17CF4
	063 Move X0, 0x441000
	064 Move X0, [X0+1632]
	065 Call 0x1C17CF4
	066 Move X0, 0x441000
	067 Move X0, [X0+1664]
	068 Call 0x1C17CF4
	069 Move X0, 0x441000
	070 Move X0, [X0+1648]
	071 Call 0x1C17CF4
	072 Move X0, 0x441000
	073 Move X0, [X0+1672]
	074 Call 0x1C17CF4
	075 Move X0, 0x441000
	076 Move X0, [X0+1656]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X27+2706], W8
	080 Move X0, [X26]
	081 Move X27, 0x441000
	082 Move X26, 0x441000
	083 Move X27, [X27+1008]
	084 Move X26, [X26+1688]
	085 Move W1, 1
	086 Move W2, W31
	087 Move W3, W31
	088 Move X4, X31
	089 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	090 Move X8, [X21]
	091 Move W1, 1
	092 Move W2, W31
	093 Move W3, W31
	094 Move X8, [X8+184]
	095 Move X4, X31
	096 Move [X8], X0
	097 Move X0, [X20]
	098 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	099 Move X8, [X21]
	100 Move W1, 1
	101 Move W2, W31
	102 Move W3, W31
	103 Move X8, [X8+184]
	104 Move X4, X31
	105 Move [X8+8], X0
	106 Move X0, [X29]
	107 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	108 Move X8, [X21]
	109 Move W1, 1
	110 Move W2, W31
	111 Move W3, W31
	112 Move X8, [X8+184]
	113 Move X4, X31
	114 Move [X8+16], X0
	115 Move X0, [X28]
	116 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	117 Move X8, [X21]
	118 Move W1, 1
	119 Move W2, W31
	120 Move W3, W31
	121 Move X8, [X8+184]
	122 Move X4, X31
	123 Move [X8+24], X0
	124 Move X0, [X25]
	125 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	126 Move X8, [X21]
	127 Move W1, 1
	128 Move W2, W31
	129 Move W3, W31
	130 Move X8, [X8+184]
	131 Move X4, X31
	132 Move [X8+32], X0
	133 Move X0, [X24]
	134 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	135 Move X8, [X21]
	136 Move W1, 1
	137 Move W2, W31
	138 Move W3, W31
	139 Move X8, [X8+184]
	140 Move X4, X31
	141 Move [X8+40], X0
	142 Move X0, [X23]
	143 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	144 Move X8, [X21]
	145 Move X8, [X8+184]
	146 Move [X8+48], X0
	147 Move [X8+56], X31
	148 Move X0, [X22]
	149 Call 0x1C17F10
	150 Move X2, [X19]
	151 Move X1, X31
	152 Move X3, X31
	153 Move X19, X0
	154 Call Action`1<Object>..ctor, X0, X1, X2
	155 Move X8, 0x3F9000
	156 Move X8, [X8+2080]
	157 Move X0, [X8]
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X0, X19
	163 Call Utility.add_RegisterIntermediateRenderers, X0
	164 Move X0, [X27]
	165 Call 0x1C17F10
	166 Move X2, [X26]
	167 Move X1, X31
	168 Move X3, X31
	169 Move X19, X0
	170 Call Action`1<IntPtr>..ctor, X0, X1, X2
	171 Move X0, X19
	172 Move X20, [X31+80]
	173 Move X19, [X31+88]
	174 Move X22, [X31+64]
	175 Move X21, [X31+72]
	176 Move X24, [X31+48]
	177 Move X23, [X31+56]
	178 Move X26, [X31+32]
	179 Move X25, [X31+40]
	180 Move X28, [X31+16]
	181 Move X27, [X31+24]
	182 Move X29, [X31+96]
	183 Move X30, [X31+104]
	184 Call Utility.add_RenderNodeExecute, X0
	185 Return 

Method: System.Void .ctor(UnityEngine.UIElements.BaseVisualElementPanel panel)

Disassembly:
	0x03D24724 B.GT 0x3D247D4
	0x03D24728 LDR X0, [X20]
	0x03D2472C CBZ X0, 0x3D249AC
	0x03D24730 LDR X2, [X28]
	0x03D24734 MOV W1, W22
	0x03D24738 BL 0x301BCCC
	0x03D2473C CBZ X0, 0x3D247B8
	0x03D24740 MOV X23, X0
	0x03D24744 LDRB W8, [X23 + 0xC0]
	0x03D24748 LDR X25, [X23 + 0xB0]
	0x03D2474C ANDS W31, W8, 0x3
	0x03D24750 B.EQ 0x3D247A4
	0x03D24754 LDRB W8, [X23 + 0xE8]
	0x03D24758 CBZ W8, 0x3D24794
	0x03D2475C LDR W8, [X23 + 0xC4]
	0x03D24760 LDR W24, [X19 + 0x38]
	0x03D24764 CMP W8, W24
	0x03D24768 B.EQ 0x3D24794
	0x03D2476C LDR X0, [X29]
	0x03D24770 LDR W8, [X0 + 0xE0]
	0x03D24774 CBNZ W8, 0x3D2477C
	0x03D24778 BL 0x1C16DFC
	0x03D2477C MOV X0, X19
	0x03D24780 MOV X1, X23
	0x03D24784 MOV W2, W24
	0x03D24788 MOV X3, X21
	0x03D2478C MOV X4, X31
	0x03D24790 BL 0x3D393CC
	0x03D24794 MOVN W2, 0x3
	0x03D24798 MOV X0, X20
	0x03D2479C MOV X1, X23
	0x03D247A0 BL 0x3D249B4
	0x03D247A4 LDR W8, [X19 + 0xC4]
	0x03D247A8 MOV X23, X25
	0x03D247AC ADD W8, W8, 0x1
	0x03D247B0 STR W8, [X19 + 0xC4]
	0x03D247B4 CBNZ X25, 0x3D24744
	0x03D247B8 LDR X8, [X19 + 0x30]
	0x03D247BC CBZ X8, 0x3D249AC
	0x03D247C0 LDR W9, [X8 + 0x18]
	0x03D247C4 ADD W22, W22, 0x1
	0x03D247C8 CMP W9, 0x3
	0x03D247CC B.HI 0x3D2471C
	0x03D247D0 B 0x3D249B0
	0x03D247D4 LDR X0, [X19 + 0x138]
	0x03D247D8 CBZ X0, 0x3D249AC
	0x03D247DC BL 0x3D21BB4
	0x03D247E0 LDR W8, [X19 + 0x38]
	0x03D247E4 LDR X9, [X19 + 0x28]
	0x03D247E8 MOVZ W10, 0x1
	0x03D247EC STRB W10, [X19 + 0x78]
	0x03D247F0 ADD W8, W8, 0x1
	0x03D247F4 STR W8, [X19 + 0x38]
	0x03D247F8 CBZ X9, 0x3D249AC
	0x03D247FC LDR W8, [X9 + 0x18]
	0x03D24800 CMP W8, 0x4
	0x03D24804 B.LS 0x3D249B0
	0x03D24808 LDR X8, [X19 + 0x30]
	0x03D2480C CBZ X8, 0x3D249AC
	0x03D24810 LDR W22, [X9 + 0x30]
	0x03D24814 LDR W9, [X8 + 0x18]
	0x03D24818 CMP W9, 0x4
	0x03D2481C B.LS 0x3D249B0
	0x03D24820 LDR W8, [X8 + 0x30]
	0x03D24824 CMP W22, W8
	0x03D24828 B.GT 0x3D248CC
	0x03D2482C LDR X0, [X20]
	0x03D24830 CBZ X0, 0x3D249AC
	0x03D24834 LDR X2, [X28]
	0x03D24838 MOV W1, W22
	0x03D2483C BL 0x301BCCC
	0x03D24840 CBZ X0, 0x3D248BC
	0x03D24844 MOV X23, X0
	0x03D24848 LDRB W8, [X23 + 0xC0]
	0x03D2484C LDR X25, [X23 + 0xB0]
	0x03D24850 ANDS W31, W8, 0x70
	0x03D24854 B.EQ 0x3D248A8
	0x03D24858 LDRB W8, [X23 + 0xE8]
	0x03D2485C CBZ W8, 0x3D24898
	0x03D24860 LDR W8, [X23 + 0xC4]
	0x03D24864 LDR W24, [X19 + 0x38]
	0x03D24868 CMP W8, W24
	0x03D2486C B.EQ 0x3D24898
	0x03D24870 LDR X0, [X29]
	0x03D24874 LDR W8, [X0 + 0xE0]
	0x03D24878 CBNZ W8, 0x3D24880
	0x03D2487C BL 0x1C16DFC
	0x03D24880 MOV X0, X19
	0x03D24884 MOV X1, X23
	0x03D24888 MOV W2, W24
	0x03D2488C MOV X3, X21
	0x03D24890 MOV X4, X31
	0x03D24894 BL 0x3D39894
	0x03D24898 MOVN W2, 0x70
	0x03D2489C MOV X0, X20
	0x03D248A0 MOV X1, X23
	0x03D248A4 BL 0x3D249B4
	0x03D248A8 LDR W8, [X19 + 0xC4]
	0x03D248AC MOV X23, X25
	0x03D248B0 ADD W8, W8, 0x1
	0x03D248B4 STR W8, [X19 + 0xC4]
	0x03D248B8 CBNZ X25, 0x3D24848
	0x03D248BC LDR X8, [X19 + 0x30]
	0x03D248C0 ADD W22, W22, 0x1
	0x03D248C4 CBNZ X8, 0x3D24814
	0x03D248C8 B 0x3D249AC
	0x03D248CC LDR X0, [X19 + 0x138]
	0x03D248D0 CBZ X0, 0x3D249AC
	0x03D248D4 BL 0x3D21EE4
	0x03D248D8 LDR X0, [X19 + 0x138]
	0x03D248DC CBZ X0, 0x3D249AC
	0x03D248E0 BL 0x3D22120
	0x03D248E4 LDR X0, [X19 + 0xF8]
	0x03D248E8 CBZ X0, 0x3D249AC
	0x03D248EC BL 0x3D2315C
	0x03D248F0 LDR X0, [X19 + 0x128]
	0x03D248F4 STRB W31, [X19 + 0x78]
	0x03D248F8 CBZ X0, 0x3D249AC
	0x03D248FC LDR X1, [X27]
	0x03D24900 BL 0x26AF23C
	0x03D24904 LDR X0, [X19 + 0x130]
	0x03D24908 CBZ X0, 0x3D249AC
	0x03D2490C LDR X1, [X26]
	0x03D24910 BL 0x26AEB98
	0x03D24914 MOV X0, X20
	0x03D24918 BL 0x3D23E88
	0x03D2491C LDR X0, [X19 + 0x118]
	0x03D24920 CBZ X0, 0x3D24930
	0x03D24924 LDR X1, [X19 + 0x108]
	0x03D24928 MOV X2, X31
	0x03D2492C BL 0x3CE8210
	0x03D24930 LDR X0, [X19 + 0x120]
	0x03D24934 CBZ X0, 0x3D24940
	0x03D24938 MOV X1, X31
	0x03D2493C BL 0x3D2DAB4
	0x03D24940 ADRP X8, 0x440000
	0x03D24944 LDR X8, [X8 + 0x760]
	0x03D24948 ADD X20, X19, 0x140
	0x03D2494C LDR X0, [X8]
	0x03D24950 LDR W8, [X0 + 0xE0]
	0x03D24954 CBNZ W8, 0x3D2495C
	0x03D24958 BL 0x1C16DFC
	0x03D2495C MOV X0, X20
	0x03D24960 MOV X1, X31
	0x03D24964 BL 0x3D2C48C
	0x03D24968 LDR X0, [X19 + 0x110]
	0x03D2496C CBZ X0, 0x3D24990
	0x03D24970 LDP X20, X19, [X31 + 0x50]
	0x03D24974 LDP X22, X21, [X31 + 0x40]
	0x03D24978 LDP X24, X23, [X31 + 0x30]
	0x03D2497C LDP X26, X25, [X31 + 0x20]
	0x03D24980 LDP X28, X27, [X31 + 0x10]
	0x03D24984 MOV X1, X31
	0x03D24988 LDP X29, X30, [X31], #0x60
	0x03D2498C B 0x3D31408
	0x03D24990 LDP X20, X19, [X31 + 0x50]
	0x03D24994 LDP X22, X21, [X31 + 0x40]
	0x03D24998 LDP X24, X23, [X31 + 0x30]
	0x03D2499C LDP X26, X25, [X31 + 0x20]
	0x03D249A0 LDP X28, X27, [X31 + 0x10]
	0x03D249A4 LDP X29, X30, [X31], #0x60
	0x03D249A8 RET
	0x03D249AC BL 0x1C16F20
	0x03D249B0 BL 0x1C16F28
	0x03D249B4 STR X30, [X31 - 0x40]!
	0x03D249B8 STP X24, X23, [X31 + 0x10]
	0x03D249BC STP X22, X21, [X31 + 0x20]
	0x03D249C0 STP X20, X19, [X31 + 0x30]
	0x03D249C4 ADRP X22, 0x6C3000
	0x03D249C8 LDRB W8, [X22 + 0xAAE]
	0x03D249CC MOV W21, W2
	0x03D249D0 MOV X19, X1
	0x03D249D4 MOV X20, X0
	0x03D249D8 TBNZ X8, 0x0, 0x3D24A08
	0x03D249DC ADRP X0, 0x3CF000
	0x03D249E0 LDR X0, [X0 + 0xA28]
	0x03D249E4 BL 0x1C16CF4
	0x03D249E8 ADRP X0, 0x3F8000
	0x03D249EC LDR X0, [X0 + 0xF0]
	0x03D249F0 BL 0x1C16CF4
	0x03D249F4 ADRP X0, 0x440000
	0x03D249F8 LDR X0, [X0 + 0x790]
	0x03D249FC BL 0x1C16CF4
	0x03D24A00 MOVZ W8, 0x1
	0x03D24A04 STRB W8, [X22 + 0xAAE]
	0x03D24A08 CBZ X19, 0x3D24B48
	0x03D24A0C ADRP X22, 0x3CF000
	0x03D24A10 LDR X22, [X22 + 0xA28]
	0x03D24A14 LDR W23, [X19 + 0xC0]
	0x03D24A18 LDR X0, [X22]
	0x03D24A1C LDR W8, [X0 + 0xE0]
	0x03D24A20 CBNZ W8, 0x3D24A28
	0x03D24A24 BL 0x1C16DFC
	0x03D24A28 CMP W23, 0x0
	0x03D24A2C CSET W0, NE
	0x03D24A30 MOV X1, X31
	0x03D24A34 BL 0x3C06E58
	0x03D24A38 LDR W8, [X19 + 0xC0]
	0x03D24A3C ANDS W8, W8, W21, 0x0
	0x03D24A40 STR W8, [X19 + 0xC0]
	0x03D24A44 B.NE 0x3D24B34
	0x03D24A48 MOV X21, X19
	0x03D24A4C LDR X8, [X21 + 0xA8]!
	0x03D24A50 CBZ X8, 0x3D24A5C
	0x03D24A54 LDR X9, [X19 + 0xB0]
	0x03D24A58 STR X9, [X8 + 0xB0]
	0x03D24A5C LDR X9, [X19 + 0xB0]
	0x03D24A60 CBZ X9, 0x3D24A68
	0x03D24A64 STR X8, [X9 + 0xA8]
	0x03D24A68 LDR X0, [X20 + 0x8]
	0x03D24A6C CBZ X0, 0x3D24B48
	0x03D24A70 ADRP X23, 0x3F8000
	0x03D24A74 LDR W1, [X19 + 0xBC]
	0x03D24A78 LDR X23, [X23 + 0xF0]
	0x03D24A7C LDR X2, [X23]
	0x03D24A80 BL 0x301BCCC

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x6C4000
	011 Move X24, 0x441000
	012 Move W8, [X21+2707]
	013 Move X24, [X24+1696]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {64}
	020 Move X0, 0x441000
	021 Move X0, [X0+1704]
	022 Call 0x1C17CF4
	023 Move X0, 0x441000
	024 Move X0, [X0+1712]
	025 Call 0x1C17CF4
	026 Move X0, 0x441000
	027 Move X0, [X0+1720]
	028 Call 0x1C17CF4
	029 Move X0, 0x441000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0x441000
	033 Move X0, [X0+1736]
	034 Call 0x1C17CF4
	035 Move X0, 0x441000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0x441000
	039 Move X0, [X0+1752]
	040 Call 0x1C17CF4
	041 Move X0, 0x441000
	042 Move X0, [X0+1760]
	043 Call 0x1C17CF4
	044 Move X0, 0x43F000
	045 Move X0, [X0+1712]
	046 Call 0x1C17CF4
	047 Move X0, 0x441000
	048 Move X0, [X0+1768]
	049 Call 0x1C17CF4
	050 Move X0, 0x441000
	051 Move X0, [X0+1776]
	052 Call 0x1C17CF4
	053 Move X0, 0x441000
	054 Move X0, [X0+1696]
	055 Call 0x1C17CF4
	056 Move X0, 0x441000
	057 Move X0, [X0+1784]
	058 Call 0x1C17CF4
	059 Move X0, 0x441000
	060 Move X0, [X0+1792]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X21+2707], W8
	064 Move X0, [X24]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1C17DFC
	069 Move X0, [X24]
	070 Move X8, [X0+184]
	071 Move X21, [X8+8]
	072 Compare X21, 0
	073 JumpIfNotEqual {95}
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {79}
	077 Call 0x1C17DFC
	078 Move X0, [X24]
	079 Move X9, 0x441000
	080 Move X8, [X0+184]
	081 Move X9, [X9+1728]
	082 Move X22, [X8]
	083 Move X0, [X9]
	084 Call 0x1C17F10
	085 Move X8, 0x441000
	086 Move X8, [X8+1768]
	087 Move X1, X22
	088 Move X3, X31
	089 Move X21, X0
	090 Move X2, [X8]
	091 Call Func`1<Object>..ctor, X0, X1, X2
	092 Move X0, [X24]
	093 Move X8, [X0+184]
	094 Move [X8+8], X21
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {100}
	098 Call 0x1C17DFC
	099 Move X0, [X24]
	100 Move X8, [X0+184]
	101 Move X26, 0x441000
	102 Move X25, 0x441000
	103 Move X22, [X8+16]
	104 Move X26, [X26+1744]
	105 Move X25, [X25+1736]
	106 Compare X22, 0
	107 JumpIfNotEqual {129}
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {113}
	111 Call 0x1C17DFC
	112 Move X0, [X24]
	113 Move X9, 0x441000
	114 Move X8, [X0+184]
	115 Move X9, [X9+1704]
	116 Move X23, [X8]
	117 Move X0, [X9]
	118 Call 0x1C17F10
	119 Move X8, 0x441000
	120 Move X8, [X8+1776]
	121 Move X1, X23
	122 Move X3, X31
	123 Move X22, X0
	124 Move X2, [X8]
	125 Call Action`1<Object>..ctor, X0, X1, X2
	126 Move X8, [X24]
	127 Move X8, [X8+184]
	128 Move [X8+16], X22
	129 Move X0, [X26]
	130 Call 0x1C17F10
	131 Move X4, [X25]
	132 Move W3, 0x2710
	133 Move X1, X21
	134 Move X2, X22
	135 Move X23, X0
	136 Call 0x2EF1D58, X0, X1, X2, X3
	137 Compare X20, 0
	138 JumpIfEqual {237}
	139 Move X8, 0x441000
	140 Move X8, [X8+1720]
	141 Move X21, 0x441000
	142 Move X21, [X21+1712]
	143 Move [X20+64], X23
	144 Move X0, [X8]
	145 Move X23, 0x441000
	146 Move X24, 0x441000
	147 Move X22, 0x43F000
	148 Move X23, [X23+1760]
	149 Move X24, [X24+1752]
	150 Move X22, [X22+1712]
	151 Call 0x1C17F10
	152 Move X1, [X21]
	153 Move X21, X0
	154 Call 0x28CB7D0, X0
	155 Move [X20+72], X21
	156 Move X0, [X23]
	157 Call 0x1C17F10
	158 Move X1, [X24]
	159 Move X21, X0
	160 Call List`1<RenderNodeData>..ctor, X0
	161 NotImplemented "Instruction MOVI not yet implemented."
	162 Move [X20+80], X21
	163 Move [X20+124], D0
	164 Move [X20+132], W31
	165 Move X0, [X22]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Move X21, 0x6C4000
	171 Move W8, [X21+2021]
	172 Compare W8, 0
	173 JumpIfNotEqual {179}
	174 Move X0, 0x43F000
	175 Move X0, [X0+1712]
	176 Call 0x1C17CF4
	177 Move W8, 1
	178 Move [X21+2021], W8
	179 Move X0, [X22]
	180 Move X21, 0x441000
	181 Move W8, [X0+224]
	182 Move X21, [X21+1784]
	183 Compare W8, 0
	184 JumpIfNotEqual {187}
	185 Call 0x1C17DFC
	186 Move X0, [X22]
	187 Move X8, [X0+184]
	188 Move X0, X20
	189 Move X1, X31
	190 Move X8, [X8]
	191 Move [X20+240], X8
	192 Call Object..ctor, X0
	193 Move X0, [X21]
	194 Call 0x1C17F10
	195 Move W1, W31
	196 Move W2, W31
	197 Move X3, X31
	198 Move X21, X0
	199 Call UIRenderDevice..ctor, X0, X1, X2
	200 Compare X19, 0
	201 JumpIfEqual {237}
	202 Move X8, [X19]
	203 Move X23, 0x441000
	204 Move X0, X19
	205 Move X9, [X8+1128]
	206 Move X1, [X8+1136]
	207 Move X23, [X23+1792]
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Move X8, [X19]
	210 Move X22, X0
	211 Move X0, X19
	212 Move X9, [X8+1128]
	213 Move X1, [X8+1136]
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Move X8, [X23]
	216 Move X23, X0
	217 Move X0, X8
	218 Call 0x1C17F10
	219 Move X1, X23
	220 Move X2, X31
	221 Move X24, X0
	222 Call VectorImageManager..ctor, X0, X1
	223 Move X0, X20
	224 Move X1, X19
	225 Move X2, X21
	226 Move X3, X22
	227 Move X4, X24
	228 Move X20, [X31+64]
	229 Move X19, [X31+72]
	230 Move X22, [X31+48]
	231 Move X21, [X31+56]
	232 Move X24, [X31+32]
	233 Move X23, [X31+40]
	234 Move X26, [X31+16]
	235 Move X25, [X31+24]
	236 Move X30, [X31+80]
	237 Call 0x1C17F20

Method: System.Void Constructor(UnityEngine.UIElements.BaseVisualElementPanel panelObj, UnityEngine.UIElements.UIR.UIRenderDevice deviceObj, UnityEngine.UIElements.AtlasBase atlas, UnityEngine.UIElements.UIR.VectorImageManager vectorImageMan)

Disassembly:
	0x03D24A84 CMP X0, X19
	0x03D24A88 B.NE 0x3D24AD0
	0x03D24A8C LDR X0, [X22]
	0x03D24A90 LDR X24, [X19 + 0xB0]
	0x03D24A94 LDR W8, [X0 + 0xE0]
	0x03D24A98 CBNZ W8, 0x3D24AA0
	0x03D24A9C BL 0x1C16DFC
	0x03D24AA0 CMP X24, 0x0
	0x03D24AA4 CSET W0, EQ
	0x03D24AA8 MOV X1, X31
	0x03D24AAC BL 0x3C06E58
	0x03D24AB0 LDR X0, [X20 + 0x8]
	0x03D24AB4 CBZ X0, 0x3D24B48
	0x03D24AB8 ADRP X8, 0x440000
	0x03D24ABC LDR X2, [X19 + 0xA8]
	0x03D24AC0 LDR W1, [X19 + 0xBC]
	0x03D24AC4 LDR X8, [X8 + 0x790]
	0x03D24AC8 LDR X3, [X8]
	0x03D24ACC BL 0x301BD20
	0x03D24AD0 LDR X0, [X20]
	0x03D24AD4 CBZ X0, 0x3D24B48
	0x03D24AD8 LDR W1, [X19 + 0xBC]
	0x03D24ADC LDR X2, [X23]
	0x03D24AE0 BL 0x301BCCC
	0x03D24AE4 CMP X0, X19
	0x03D24AE8 B.NE 0x3D24B30
	0x03D24AEC LDR X0, [X22]
	0x03D24AF0 LDR X22, [X21]
	0x03D24AF4 LDR W8, [X0 + 0xE0]
	0x03D24AF8 CBNZ W8, 0x3D24B00
	0x03D24AFC BL 0x1C16DFC
	0x03D24B00 CMP X22, 0x0
	0x03D24B04 CSET W0, EQ
	0x03D24B08 MOV X1, X31
	0x03D24B0C BL 0x3C06E58
	0x03D24B10 LDR X0, [X20]
	0x03D24B14 CBZ X0, 0x3D24B48
	0x03D24B18 ADRP X8, 0x440000
	0x03D24B1C LDR X2, [X19 + 0xB0]
	0x03D24B20 LDR W1, [X19 + 0xBC]
	0x03D24B24 LDR X8, [X8 + 0x790]
	0x03D24B28 LDR X3, [X8]
	0x03D24B2C BL 0x301BD20
	0x03D24B30 STP X31, X31, [X21]
	0x03D24B34 LDP X20, X19, [X31 + 0x30]
	0x03D24B38 LDP X22, X21, [X31 + 0x20]
	0x03D24B3C LDP X24, X23, [X31 + 0x10]
	0x03D24B40 LDR X30, [X31], #0x40
	0x03D24B44 RET
	0x03D24B48 BL 0x1C16F20
	0x03D24B4C SUB X31, X31, 0x1E0
	0x03D24B50 STP D11, D10, [X31 + 0x160]
	0x03D24B54 STP D9, D8, [X31 + 0x170]
	0x03D24B58 STP X29, X30, [X31 + 0x180]
	0x03D24B5C STP X28, X27, [X31 + 0x190]
	0x03D24B60 STP X26, X25, [X31 + 0x1A0]
	0x03D24B64 STP X24, X23, [X31 + 0x1B0]
	0x03D24B68 STP X22, X21, [X31 + 0x1C0]
	0x03D24B6C STP X20, X19, [X31 + 0x1D0]
	0x03D24B70 ADRP X20, 0x6C3000
	0x03D24B74 LDRB W8, [X20 + 0xA98]
	0x03D24B78 MOV X19, X0
	0x03D24B7C TBNZ X8, 0x0, 0x3D24BA0
	0x03D24B80 ADRP X0, 0x440000
	0x03D24B84 LDR X0, [X0 + 0x798]
	0x03D24B88 BL 0x1C16CF4
	0x03D24B8C ADRP X0, 0x440000
	0x03D24B90 LDR X0, [X0 + 0x760]
	0x03D24B94 BL 0x1C16CF4
	0x03D24B98 MOVZ W8, 0x1
	0x03D24B9C STRB W8, [X20 + 0xA98]
	0x03D24BA0 MOV X0, X19
	0x03D24BA4 BL 0x3D24E74
	0x03D24BA8 LDR X8, [X19 + 0x108]
	0x03D24BAC CBZ X8, 0x3D24DF4
	0x03D24BB0 MOV X20, X0
	0x03D24BB4 MOV X0, X8
	0x03D24BB8 MOV X1, X20
	0x03D24BBC MOV X2, X31
	0x03D24BC0 BL 0x3DBC6E8
	0x03D24BC4 STR X31, [X31 + 0x158]
	0x03D24BC8 LDR X8, [X19 + 0x10]
	0x03D24BCC CBZ X8, 0x3D24DBC
	0x03D24BD0 LDRB W8, [X19 + 0x219]
	0x03D24BD4 CBNZ W8, 0x3D24DBC
	0x03D24BD8 LDR X0, [X19 + 0x108]
	0x03D24BDC CBZ X0, 0x3D24DF4
	0x03D24BE0 LDR X8, [X0]
	0x03D24BE4 LDR X9, [X8 + 0x398]
	0x03D24BE8 LDR X1, [X8 + 0x3A0]
	0x03D24BEC BLR X9
	0x03D24BF0 CBZ X0, 0x3D24DF4
	0x03D24BF4 MOV X1, X31
	0x03D24BF8 BL 0x3DEC528
	0x03D24BFC MOV V9.16B, V0.16B
	0x03D24C00 MOV V8.16B, V1.16B
	0x03D24C04 MOV V10.16B, V2.16B
	0x03D24C08 MOV V11.16B, V3.16B
	0x03D24C0C CBZ X20, 0x3D24C20
	0x03D24C10 MOV X0, X20
	0x03D24C14 MOV W1, W31
	0x03D24C18 MOV X2, X31
	0x03D24C1C BL 0x3C1518C
	0x03D24C20 ADRP X8, 0xFFFFFFFFFCDC5000
	0x03D24C24 ADRP X9, 0xFFFFFFFFFCDC6000
	0x03D24C28 LDR V4, [X8 + 0xF70]
	0x03D24C2C LDR V5, [X9 + 0x54]
	0x03D24C30 FADD S1, S10, S9
	0x03D24C34 FADD S2, S11, S8
	0x03D24C38 ADD X8, X31, 0x30
	0x03D24C3C MOV V0.16B, V9.16B
	0x03D24C40 MOV V3.16B, V8.16B
	0x03D24C44 MOV X0, X31
	0x03D24C48 BL 0x3DC0970
	0x03D24C4C LDP V1, V0, [X31 + 0x50]
	0x03D24C50 LDP V3, V2, [X31 + 0x30]
	0x03D24C54 ADD X0, X31, 0xD0
	0x03D24C58 MOV X1, X31
	0x03D24C5C STP V1, V0, [X31 + 0x130]
	0x03D24C60 STP V3, V2, [X31 + 0x110]
	0x03D24C64 STP V3, V2, [X31 + 0xD0]
	0x03D24C68 STP V1, V0, [X31 + 0xF0]
	0x03D24C6C BL 0x3C100E4
	0x03D24C70 ADRP X21, 0x6B4000
	0x03D24C74 LDRB W8, [X21 + 0xAC0]
	0x03D24C78 CBNZ W8, 0x3D24C90
	0x03D24C7C ADRP X0, 0x3D3000
	0x03D24C80 LDR X0, [X0 + 0x270]
	0x03D24C84 BL 0x1C16CF4
	0x03D24C88 MOVZ W8, 0x1
	0x03D24C8C STRB W8, [X21 + 0xAC0]
	0x03D24C90 ADRP X8, 0x3D3000
	0x03D24C94 LDR X8, [X8 + 0x270]
	0x03D24C98 ADD X0, X31, 0x90
	0x03D24C9C MOV X1, X31
	0x03D24CA0 LDR X8, [X8]
	0x03D24CA4 LDR X8, [X8 + 0xB8]
	0x03D24CA8 LDP V1, V0, [X8 + 0x60]
	0x03D24CAC LDP V2, V3, [X8 + 0x40]
	0x03D24CB0 STP V1, V0, [X31 + 0xB0]
	0x03D24CB4 STP V2, V3, [X31 + 0x90]
	0x03D24CB8 BL 0x3C0FFF8
	0x03D24CBC LDR X21, [X19 + 0x110]
	0x03D24CC0 LDR X0, [X19 + 0x120]
	0x03D24CC4 LDR X22, [X19 + 0x10]
	0x03D24CC8 CBZ X0, 0x3D24CDC
	0x03D24CCC MOV X1, X31
	0x03D24CD0 BL 0x3D2D758
	0x03D24CD4 MOV X23, X0
	0x03D24CD8 B 0x3D24CE0
	0x03D24CDC MOV X23, X31
	0x03D24CE0 ADRP X8, 0x440000
	0x03D24CE4 LDR X8, [X8 + 0x760]
	0x03D24CE8 ADD X27, X19, 0x140
	0x03D24CEC LDR X0, [X8]
	0x03D24CF0 LDR W8, [X0 + 0xE0]
	0x03D24CF4 CBNZ W8, 0x3D24CFC
	0x03D24CF8 BL 0x1C16DFC
	0x03D24CFC MOV X0, X27
	0x03D24D00 MOV X1, X31
	0x03D24D04 BL 0x3D2ABA4
	0x03D24D08 LDR X8, [X19 + 0x108]
	0x03D24D0C CBZ X8, 0x3D24DF4
	0x03D24D10 MOV X24, X0
	0x03D24D14 MOV X0, X8
	0x03D24D18 MOV X1, X31
	0x03D24D1C BL 0x3DBBED8
	0x03D24D20 MOV X0, X27
	0x03D24D24 MOV X1, X31
	0x03D24D28 MOV V8.16B, V0.16B
	0x03D24D2C BL 0x3D2AB14
	0x03D24D30 MOV X25, X0
	0x03D24D34 MOV X26, X1
	0x03D24D38 MOV X0, X27
	0x03D24D3C MOV X1, X31
	0x03D24D40 BL 0x3D2AB5C
	0x03D24D44 MOV X27, X0
	0x03D24D48 LDR X0, [X19 + 0x50]
	0x03D24D4C CBZ X0, 0x3D24DF4
	0x03D24D50 ADRP X8, 0x440000
	0x03D24D54 LDR X8, [X8 + 0x798]
	0x03D24D58 MOV X28, X1
	0x03D24D5C MOV W1, W31
	0x03D24D60 LDR X2, [X8]
	0x03D24D64 ADD X8, X31, 0x30
	0x03D24D68 BL 0x3136F34
	0x03D24D6C CBZ X21, 0x3D24DF4
	0x03D24D70 LDR X8, [X31 + 0x40]
	0x03D24D74 ADD X9, X31, 0x158
	0x03D24D78 MOV V0.16B, V8.16B
	0x03D24D7C MOV X0, X21
	0x03D24D80 STP X28, X8, [X31 + 0x8]
	0x03D24D84 MOVZ W8, 0x1
	0x03D24D88 MOV X1, X22
	0x03D24D8C MOV X2, X20
	0x03D24D90 MOV X3, X20
	0x03D24D94 MOV X4, X23
	0x03D24D98 MOV X5, X24
	0x03D24D9C MOV X6, X25
	0x03D24DA0 MOV X7, X26
	0x03D24DA4 STP X9, X31, [X31 + 0x20]
	0x03D24DA8 STRB W8, [X31 + 0x18]
	0x03D24DAC STR X27, [X31]
	0x03D24DB0 BL 0x3D32174
	0x03D24DB4 LDR X20, [X31 + 0x158]
	0x03D24DB8 CBNZ X20, 0x3D24DF8
	0x03D24DBC LDRB W8, [X19 + 0x218]
	0x03D24DC0 CBZ W8, 0x3D24DCC
	0x03D24DC4 MOV X0, X19
	0x03D24DC8 BL 0x3D24F60
	0x03D24DCC LDP X20, X19, [X31 + 0x1D0]
	0x03D24DD0 LDP X22, X21, [X31 + 0x1C0]
	0x03D24DD4 LDP X24, X23, [X31 + 0x1B0]
	0x03D24DD8 LDP X26, X25, [X31 + 0x1A0]
	0x03D24DDC LDP X28, X27, [X31 + 0x190]
	0x03D24DE0 LDP X29, X30, [X31 + 0x180]
	0x03D24DE4 LDP D9, D8, [X31 + 0x170]
	0x03D24DE8 LDP D11, D10, [X31 + 0x160]
	0x03D24DEC ADD X31, X31, 0x1E0
	0x03D24DF0 RET
	0x03D24DF4 BL 0x1C16F20
	0x03D24DF8 ADRP X0, 0x3FB000
	0x03D24DFC LDR X0, [X0 + 0x5C8]
	0x03D24E00 BL 0x1C16D08
	0x03D24E04 LDR W8, [X0 + 0xE0]
	0x03D24E08 CBNZ W8, 0x3D24E10
	0x03D24E0C BL 0x1C16DFC
	0x03D24E10 MOV X0, X20
	0x03D24E14 MOV X1, X31
	0x03D24E18 BL 0x3C76464
	0x03D24E1C LDR X19, [X31 + 0x158]
	0x03D24E20 TBZ X0, 0x0, 0x3D24E3C
	0x03D24E24 ADRP X0, 0x440000
	0x03D24E28 LDR X0, [X0 + 0x7A0]
	0x03D24E2C BL 0x1C16D08
	0x03D24E30 MOV X1, X0
	0x03D24E34 MOV X0, X19
	0x03D24E38 BL 0x1C16DEC
	0x03D24E3C ADRP X0, 0x440000
	0x03D24E40 LDR X0, [X0 + 0x7A8]
	0x03D24E44 BL 0x1C16D08
	0x03D24E48 BL 0x1C16F10
	0x03D24E4C MOV X1, X19
	0x03D24E50 MOV X2, X31
	0x03D24E54 MOV X20, X0
	0x03D24E58 BL 0x3DB9BBC
	0x03D24E5C ADRP X0, 0x440000
	0x03D24E60 LDR X0, [X0 + 0x7A0]
	0x03D24E64 BL 0x1C16D08
	0x03D24E68 MOV X1, X0
	0x03D24E6C MOV X0, X20
	0x03D24E70 BL 0x1C16DEC
	0x03D24E74 STP X30, X21, [X31 - 0x20]!
	0x03D24E78 STP X20, X19, [X31 + 0x10]
	0x03D24E7C ADRP X20, 0x6C3000
	0x03D24E80 ADRP X21, 0x3CF000
	0x03D24E84 LDRB W8, [X20 + 0xA9E]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X24, 0x6C4000
	015 Move W8, [X24+2708]
	016 Move X20, X4
	017 Move X21, X3
	018 Move X22, X2
	019 Move X23, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {75}
	025 Move X0, 0x3F8000
	026 Move X0, [X0+2328]
	027 Call 0x1C17CF4
	028 Move X0, 0x3D1000
	029 Move X0, [X0+3672]
	030 Call 0x1C17CF4
	031 Move X0, 0x441000
	032 Move X0, [X0+1800]
	033 Call 0x1C17CF4
	034 Move X0, 0x441000
	035 Move X0, [X0+1808]
	036 Call 0x1C17CF4
	037 Move X0, 0x441000
	038 Move X0, [X0+1816]
	039 Call 0x1C17CF4
	040 Move X0, 0x441000
	041 Move X0, [X0+1824]
	042 Call 0x1C17CF4
	043 Move X0, 0x440000
	044 Move X0, [X0+3856]
	045 Call 0x1C17CF4
	046 Move X0, 0x42D000
	047 Move X0, [X0+1424]
	048 Call 0x1C17CF4
	049 Move X0, 0x441000
	050 Move X0, [X0+1832]
	051 Call 0x1C17CF4
	052 Move X0, 0x441000
	053 Move X0, [X0+1840]
	054 Call 0x1C17CF4
	055 Move X0, 0x441000
	056 Move X0, [X0+1848]
	057 Call 0x1C17CF4
	058 Move X0, 0x441000
	059 Move X0, [X0+1856]
	060 Call 0x1C17CF4
	061 Move X0, 0x441000
	062 Move X0, [X0+1864]
	063 Call 0x1C17CF4
	064 Move X0, 0x441000
	065 Move X0, [X0+1872]
	066 Call 0x1C17CF4
	067 Move X0, 0x441000
	068 Move X0, [X0+1880]
	069 Call 0x1C17CF4
	070 Move X0, 0x441000
	071 Move X0, [X0+1888]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X24+2708], W8
	075 Move X28, 0x440000
	076 Move X27, 0x441000
	077 Move X26, 0x3D1000
	078 Move W8, [X19+256]
	079 Move X28, [X28+3856]
	080 Move X27, [X27+1816]
	081 Move X26, [X26+3672]
	082 Compare W8, 0
	083 JumpIfEqual {87}
	084 Move X0, X19
	085 Move X1, X31
	086 Call DisposeHelper.NotifyDisposedUsed, X0
	087 Move X0, [X28]
	088 Call 0x1C17F10
	089 Move X2, [X27]
	090 Move W1, 8
	091 Move X24, X0
	092 Call List`1<Object>..ctor, X0, X1
	093 Move X25, X19
	094 Move [X25+24], X24
	095 Move X0, [X28]
	096 Call 0x1C17F10
	097 Move X2, [X27]
	098 Move W1, 8
	099 Move X24, X0
	100 Call List`1<Object>..ctor, X0, X1
	101 Move [X25+8], X24
	102 Move X0, [X26]
	103 Move W1, 5
	104 Call 0x1C17D6C
	105 Move [X25+16], X0
	106 Move X0, [X26]
	107 Move W1, 5
	108 Call 0x1C17D6C
	109 Move [X25+24], X0
	110 Move X0, X25
	111 Call DepthOrderedDirtyTracking.Reset, X0
	112 Move X24, [X25+56]
	113 Compare X24, 0
	114 JumpIfEqual {281}
	115 Move W8, [X24+24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X8, 0x42D000
	118 Move X8, [X8+1424]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X1, X31
	122 Move X25, X0
	123 Call MaterialPropertyBlock..ctor, X0
	124 Move X9, 0x441000
	125 Move X9, [X9+1808]
	126 NotImplemented "Instruction MOVI not yet implemented."
	127 Move [X31+80], X31
	128 Move [X31+88], X31
	129 Move [X31], V0
	130 Move [X31+8], V0
	131 Move [X31+32], V0
	132 Move [X31+40], V0
	133 Move [X31+64], X31
	134 Move W11, [X24+28]
	135 Move X8, [X24+16]
	136 Move X10, [X9]
	137 Add W9, W11, 1
	138 Move [X24+28], W9
	139 Compare X8, 0
	140 JumpIfEqual {281}
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Move W11, [X8+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Add W10, W9, 1
	145 Move [X24+24], W10
	146 Move V0, [X31+5]
	147 Move W10, 96
	148 NotImplemented "Instruction MADD not yet implemented."
	149 Add X0, X8, 56
	150 Add X1, X31, 0
	151 Move W2, 72
	152 Move [X8+48], X25
	153 Move [X8+2], V0
	154 Call 0x3EB2AC0
	155 Move X8, [X10+32]
	156 Move V0, [X31+5]
	157 Add X1, X31, 0
	158 Move W2, 72
	159 Move X8, [X8+192]
	160 Move X26, [X8+112]
	161 Add X8, X31, 96
	162 Add X0, X8, 24
	163 Move [X31+6], V0
	164 Move [X31+112], X25
	165 Call 0x3EB2AC0
	166 Add X1, X31, 96
	167 Move X0, X24
	168 Move X2, X26
	169 Call List`1<RenderNodeData>.AddWithResize, X0, X1
	170 Move X8, 0x441000
	171 Move X8, [X8+1864]
	172 Move X24, 0x441000
	173 Move X25, 0x441000
	174 Move X26, 0x441000
	175 Move X27, 0x441000
	176 Move X24, [X24+1856]
	177 Move X25, [X25+1872]
	178 Move X26, [X26+1848]
	179 Move X27, [X27+1800]
	180 Move [X19+264], X23
	181 Move [X19+272], X22
	182 Move [X19+280], X21
	183 Move [X19+288], X20
	184 Move X0, [X8]
	185 Move X23, 0x441000
	186 Move X22, 0x441000
	187 Move X21, 0x441000
	188 Move X23, [X23+1888]
	189 Move X22, [X22+1832]
	190 Move X21, [X21+1880]
	191 Call 0x1C17F10
	192 Move X4, [X24]
	193 Move W1, 0x2000
	194 Move W2, 2048
	195 Move W3, 0x10000
	196 Move X20, X0
	197 Call TempAllocator`1<Vertex>..ctor, X0, X1, X2, X3
	198 Move [X19+296], X20
	199 Move X0, [X25]
	200 Call 0x1C17F10
	201 Move X4, [X26]
	202 Move W1, 0x4000
	203 Move W2, 4096
	204 Move W3, 0x20000
	205 Move X20, X0
	206 Call 0x26AF664, X0, X1, X2, X3
	207 Move [X19+304], X20
	208 Move X0, [X27]
	209 Call 0x1C17F10
	210 Move X20, X0
	211 Call JobManager..ctor, X0
	212 Move [X19+312], X20
	213 Move X0, [X23]
	214 Add X20, X19, 320
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Move X0, X20
	220 Move X1, X31
	221 Call UIRVEShaderInfoAllocator.Construct, X0
	222 Move X0, [X22]
	223 Call 0x1C17F10
	224 Move X20, X0
	225 Call OpacityIdAccelerator..ctor, X0
	226 Move [X19+248], X20
	227 Move X0, [X21]
	228 Call 0x1C17F10
	229 Move X1, X19
	230 Move X2, X31
	231 Move X20, X0
	232 Call UIRStylePainter..ctor, X0, X1
	233 Move X0, [X19+264]
	234 Move [X19+528], X20
	235 Compare X0, 0
	236 JumpIfEqual {267}
	237 Move X8, 0x3F8000
	238 Move X8, [X8+2328]
	239 Move X9, [X0]
	240 Move X8, [X8]
	241 Move W11, [X9+304]
	242 Move W10, [X8+304]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move X9, [X9+200]
	245 Add X9, X9, X10
	246 NotImplemented "Instruction LDUR not yet implemented."
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move X1, X31
	249 Call BaseRuntimePanel.get_drawToCameras, X0
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfNotEqual {267}
	254 Move W8, 1
	255 Move [X19+537], W8
	256 Move X8, 0x441000
	257 Move X8, [X8+1840]
	258 Move X0, [X8]
	259 Move W8, [X0+224]
	260 Compare W8, 0
	261 JumpIfNotEqual {263}
	262 Call 0x1C17DFC
	263 Move X0, X19
	264 Move X1, X31
	265 Call RenderChainStaticIndexAllocator.AllocateIndex, X0
	266 Move [X19+124], W0
	267 Move X20, [X31+272]
	268 Move X19, [X31+280]
	269 Move X22, [X31+256]
	270 Move X21, [X31+264]
	271 Move X24, [X31+240]
	272 Move X23, [X31+248]
	273 Move X26, [X31+224]
	274 Move X25, [X31+232]
	275 Move X28, [X31+208]
	276 Move X27, [X31+216]
	277 Move X29, [X31+192]
	278 Move X30, [X31+200]
	279 Add X31, X31, 288
	280 Return 
	281 Call 0x1C17F20

Method: System.Void Destructor()

Disassembly:
	0x03D24F00 TBZ X0, 0x0, 0x3D24F4C
	0x03D24F04 ADRP X8, 0x3D3000
	0x03D24F08 LDR X21, [X19 + 0x58]
	0x03D24F0C LDR X8, [X8 + 0xCA0]
	0x03D24F10 LDR X0, [X8]
	0x03D24F14 BL 0x1C16F10
	0x03D24F18 MOV X1, X21
	0x03D24F1C MOV X2, X31
	0x03D24F20 MOV X20, X0
	0x03D24F24 BL 0x3C1454C
	0x03D24F28 STR X20, [X19 + 0x68]
	0x03D24F2C CBZ X20, 0x3D24F5C
	0x03D24F30 MOV X0, X20
	0x03D24F34 MOV X1, X31
	0x03D24F38 BL 0x3C396B0
	0x03D24F3C ORR W1, W0, 0x4
	0x03D24F40 MOV X0, X20
	0x03D24F44 MOV X2, X31
	0x03D24F48 BL 0x3C396EC
	0x03D24F4C LDR X0, [X19 + 0x68]
	0x03D24F50 LDP X20, X19, [X31 + 0x10]
	0x03D24F54 LDP X30, X21, [X31], #0x20
	0x03D24F58 RET
	0x03D24F5C BL 0x1C16F20
	0x03D24F60 SUB X31, X31, 0xD0
	0x03D24F64 STP D9, D8, [X31 + 0x60]
	0x03D24F68 STP X29, X30, [X31 + 0x70]
	0x03D24F6C STP X28, X27, [X31 + 0x80]
	0x03D24F70 STP X26, X25, [X31 + 0x90]
	0x03D24F74 STP X24, X23, [X31 + 0xA0]
	0x03D24F78 STP X22, X21, [X31 + 0xB0]
	0x03D24F7C STP X20, X19, [X31 + 0xC0]
	0x03D24F80 ADRP X20, 0x6C3000
	0x03D24F84 ADRP X21, 0x3F6000
	0x03D24F88 LDRB W8, [X20 + 0xAAB]
	0x03D24F8C LDR X21, [X21 + 0x4C0]
	0x03D24F90 MOV X19, X0
	0x03D24F94 TBNZ X8, 0x0, 0x3D25114
	0x03D24F98 ADRP X0, 0x3F6000
	0x03D24F9C LDR X0, [X0 + 0x4C0]
	0x03D24FA0 BL 0x1C16CF4
	0x03D24FA4 ADRP X0, 0x440000
	0x03D24FA8 LDR X0, [X0 + 0x7B0]
	0x03D24FAC BL 0x1C16CF4
	0x03D24FB0 ADRP X0, 0x440000
	0x03D24FB4 LDR X0, [X0 + 0x7B8]
	0x03D24FB8 BL 0x1C16CF4
	0x03D24FBC ADRP X0, 0x440000
	0x03D24FC0 LDR X0, [X0 + 0x7C0]
	0x03D24FC4 BL 0x1C16CF4
	0x03D24FC8 ADRP X0, 0x440000
	0x03D24FCC LDR X0, [X0 + 0x7C8]
	0x03D24FD0 BL 0x1C16CF4
	0x03D24FD4 ADRP X0, 0x440000
	0x03D24FD8 LDR X0, [X0 + 0x7D0]
	0x03D24FDC BL 0x1C16CF4
	0x03D24FE0 ADRP X0, 0x440000
	0x03D24FE4 LDR X0, [X0 + 0x7D8]
	0x03D24FE8 BL 0x1C16CF4
	0x03D24FEC ADRP X0, 0x440000
	0x03D24FF0 LDR X0, [X0 + 0x7E0]
	0x03D24FF4 BL 0x1C16CF4
	0x03D24FF8 ADRP X0, 0x440000
	0x03D24FFC LDR X0, [X0 + 0x7E8]
	0x03D25000 BL 0x1C16CF4
	0x03D25004 ADRP X0, 0x43F000
	0x03D25008 LDR X0, [X0 + 0x7F0]
	0x03D2500C BL 0x1C16CF4
	0x03D25010 ADRP X0, 0x43F000
	0x03D25014 LDR X0, [X0 + 0x7F8]
	0x03D25018 BL 0x1C16CF4
	0x03D2501C ADRP X0, 0x43F000
	0x03D25020 LDR X0, [X0 + 0x800]
	0x03D25024 BL 0x1C16CF4
	0x03D25028 ADRP X0, 0x43F000
	0x03D2502C LDR X0, [X0 + 0x808]
	0x03D25030 BL 0x1C16CF4
	0x03D25034 ADRP X0, 0x43F000
	0x03D25038 LDR X0, [X0 + 0x810]
	0x03D2503C BL 0x1C16CF4
	0x03D25040 ADRP X0, 0x43F000
	0x03D25044 LDR X0, [X0 + 0x818]
	0x03D25048 BL 0x1C16CF4
	0x03D2504C ADRP X0, 0x43F000
	0x03D25050 LDR X0, [X0 + 0x820]
	0x03D25054 BL 0x1C16CF4
	0x03D25058 ADRP X0, 0x43F000
	0x03D2505C LDR X0, [X0 + 0x828]
	0x03D25060 BL 0x1C16CF4
	0x03D25064 ADRP X0, 0x43F000
	0x03D25068 LDR X0, [X0 + 0x830]
	0x03D2506C BL 0x1C16CF4
	0x03D25070 ADRP X0, 0x43F000
	0x03D25074 LDR X0, [X0 + 0x838]
	0x03D25078 BL 0x1C16CF4
	0x03D2507C ADRP X0, 0x43F000
	0x03D25080 LDR X0, [X0 + 0x840]
	0x03D25084 BL 0x1C16CF4
	0x03D25088 ADRP X0, 0x43F000
	0x03D2508C LDR X0, [X0 + 0x848]
	0x03D25090 BL 0x1C16CF4
	0x03D25094 ADRP X0, 0x43F000
	0x03D25098 LDR X0, [X0 + 0x850]
	0x03D2509C BL 0x1C16CF4
	0x03D250A0 ADRP X0, 0x43F000
	0x03D250A4 LDR X0, [X0 + 0x858]
	0x03D250A8 BL 0x1C16CF4
	0x03D250AC ADRP X0, 0x43F000
	0x03D250B0 LDR X0, [X0 + 0x860]
	0x03D250B4 BL 0x1C16CF4
	0x03D250B8 ADRP X0, 0x43F000
	0x03D250BC LDR X0, [X0 + 0x868]
	0x03D250C0 BL 0x1C16CF4
	0x03D250C4 ADRP X0, 0x43F000
	0x03D250C8 LDR X0, [X0 + 0x870]
	0x03D250CC BL 0x1C16CF4
	0x03D250D0 ADRP X0, 0x43F000
	0x03D250D4 LDR X0, [X0 + 0x878]
	0x03D250D8 BL 0x1C16CF4
	0x03D250DC ADRP X0, 0x43F000
	0x03D250E0 LDR X0, [X0 + 0x880]
	0x03D250E4 BL 0x1C16CF4
	0x03D250E8 ADRP X0, 0x43F000
	0x03D250EC LDR X0, [X0 + 0x888]
	0x03D250F0 BL 0x1C16CF4
	0x03D250F4 ADRP X0, 0x43F000
	0x03D250F8 LDR X0, [X0 + 0x890]
	0x03D250FC BL 0x1C16CF4
	0x03D25100 ADRP X0, 0x43F000
	0x03D25104 LDR X0, [X0 + 0x898]
	0x03D25108 BL 0x1C16CF4
	0x03D2510C MOVZ W8, 0x1
	0x03D25110 STRB W8, [X20 + 0xAAB]
	0x03D25114 ADRP X24, 0x43F000
	0x03D25118 ADRP X23, 0x43F000
	0x03D2511C ADRP X22, 0x43F000
	0x03D25120 ADRP X20, 0x43F000
	0x03D25124 ADRP X29, 0x43F000
	0x03D25128 ADRP X28, 0x43F000
	0x03D2512C ADRP X27, 0x43F000
	0x03D25130 ADRP X26, 0x43F000
	0x03D25134 ADRP X25, 0x43F000
	0x03D25138 LDR X24, [X24 + 0x848]
	0x03D2513C LDR X23, [X23 + 0x7E0]
	0x03D25140 LDR X22, [X22 + 0x890]
	0x03D25144 LDR X20, [X20 + 0x880]
	0x03D25148 LDR X29, [X29 + 0x840]
	0x03D2514C LDR X28, [X28 + 0x860]
	0x03D25150 LDR X27, [X27 + 0x858]
	0x03D25154 LDR X26, [X26 + 0x898]
	0x03D25158 LDR X25, [X25 + 0x7D8]
	0x03D2515C MOVI V0.2D, 0x0
	0x03D25160 LDR X0, [X21]
	0x03D25164 STR W31, [X31 + 0x50]
	0x03D25168 STR W31, [X31 + 0x2C]
	0x03D2516C STP V0, V0, [X31 + 0x30]
	0x03D25170 LDR X21, [X19 + 0x110]
	0x03D25174 MOVZ W8, 0x43BE0000
	0x03D25178 LDR W9, [X0 + 0xE0]
	0x03D2517C FMOV S0, W8
	0x03D25180 MOVZ W8, 0x43800000
	0x03D25184 FMOV S1, W8
	0x03D25188 CMP X21, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6C4000
	006 Move W8, [X20+2709]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {35}
	012 Move X0, 0x441000
	013 Move X0, [X0+1896]
	014 Call 0x1C17CF4
	015 Move X0, 0x441000
	016 Move X0, [X0+1840]
	017 Call 0x1C17CF4
	018 Move X0, 0x441000
	019 Move X0, [X0+1624]
	020 Call 0x1C17CF4
	021 Move X0, 0x441000
	022 Move X0, [X0+1168]
	023 Call 0x1C17CF4
	024 Move X0, 0x441000
	025 Move X0, [X0+1176]
	026 Call 0x1C17CF4
	027 Move X0, 0x3FA000
	028 Move X0, [X0+576]
	029 Call 0x1C17CF4
	030 Move X0, 0x441000
	031 Move X0, [X0+1888]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+2709], W8
	035 Move W20, [X19+124]
	036 Move TEMP, X20
	037 And TEMP, TEMP, -2147483648
	038 Compare TEMP, -2147483648
	039 JumpIfEqual {50}
	040 Move X8, 0x441000
	041 Move X8, [X8+1840]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move W0, W20
	048 Move X1, X31
	049 Call RenderChainStaticIndexAllocator.FreeIndex, X0
	050 Move X8, 0x441000
	051 Move X9, [X19+16]
	052 Move X8, [X8+1624]
	053 Move TEMP, 0
	054 Not TEMP
	055 Move W10, TEMP
	056 Move [X19+124], W10
	057 Compare X9, 0
	058 JumpIfEqual {60}
	059 Move X21, [X9+24]
	060 Move X21, X31
	061 Move X0, [X8]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfEqual {67}
	065 Compare X21, 0
	066 JumpIfNotEqual {70}
	067 Call 0x1C17DFC
	068 Compare X21, 0
	069 JumpIfEqual {89}
	070 Move X8, X31
	071 Move X20, X21
	072 Move X21, [X21+136]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CSEL not yet implemented."
	075 Compare X21, 0
	076 JumpIfEqual {83}
	077 Compare X8, 0
	078 JumpIfEqual {206}
	079 Move W9, [X8+232]
	080 Move X8, X21
	081 Compare W9, 0
	082 JumpIfNotEqual {71}
	083 Move X0, X19
	084 Move X1, X20
	085 Call RenderChain.ResetTextures, X0, X1
	086 Move X20, [X20+144]
	087 Compare X20, 0
	088 JumpIfNotEqual {83}
	089 Move X8, 0x3F9000
	090 Move X8, [X8+576]
	091 Move X21, X19
	092 Add X21, X21, 104
	093 Move X20, [X21]
	094 Move X0, [X8]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X20
	100 Move X1, X31
	101 Call UIRUtility.Destroy, X0
	102 Move X0, [X19+112]
	103 Move X1, X31
	104 Call UIRUtility.Destroy, X0
	105 Move [X21], X31
	106 Move [X21+8], X31
	107 Move X0, [X19+296]
	108 Compare X0, 0
	109 JumpIfEqual {206}
	110 Move X8, 0x440000
	111 Move X8, [X8+1168]
	112 Move X1, [X8]
	113 Call TempAllocator`1<Vertex>.Dispose, X0
	114 Move X0, [X19+304]
	115 Compare X0, 0
	116 JumpIfEqual {206}
	117 Move X8, 0x440000
	118 Move X8, [X8+1176]
	119 Move X1, [X8]
	120 Call 0x26AF7A0, X0
	121 Move X0, [X19+312]
	122 Compare X0, 0
	123 JumpIfEqual {206}
	124 Move X20, 0x440000
	125 Move X20, [X20+1888]
	126 Call JobManager.Dispose, X0
	127 Move X0, [X19+288]
	128 Compare X0, 0
	129 JumpIfEqual {132}
	130 Move X1, X31
	131 Call VectorImageManager.Dispose, X0
	132 Move X0, [X20]
	133 Add X20, X19, 320
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, X20
	139 Move X1, X31
	140 Call UIRVEShaderInfoAllocator.Dispose, X0
	141 Move X0, [X19+272]
	142 Compare X0, 0
	143 JumpIfEqual {146}
	144 Move X1, X31
	145 Call UIRenderDevice.Dispose, X0
	146 Move X0, [X19+248]
	147 Compare X0, 0
	148 JumpIfEqual {150}
	149 Call OpacityIdAccelerator.Dispose, X0
	150 Move X8, [X19+528]
	151 Compare X8, 0
	152 JumpIfEqual {175}
	153 Move X0, [X8+264]
	154 Compare X0, 0
	155 JumpIfEqual {206}
	156 Move X1, X31
	157 Call MeshGenerationContext.get_hasPainter2D, X0
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfNotEqual {174}
	162 Move X8, [X19+528]
	163 Compare X8, 0
	164 JumpIfEqual {206}
	165 Move X0, [X8+264]
	166 Compare X0, 0
	167 JumpIfEqual {206}
	168 Move X1, X31
	169 Call MeshGenerationContext.get_painter2D, X0
	170 Compare X0, 0
	171 JumpIfEqual {206}
	172 Move X1, X31
	173 Call Painter2D.Dispose, X0
	174 Move [X19+528], X31
	175 Move W2, 208
	176 Move X0, X20
	177 Move W1, W31
	178 Add X21, X19, 272
	179 Call 0x3EB2B10
	180 Move [X19+128], W31
	181 Move [X21], X31
	182 Move [X21+8], X31
	183 Move X8, [X19+80]
	184 Compare X8, 0
	185 JumpIfEqual {206}
	186 Move W2, [X8+24]
	187 Move W9, [X8+28]
	188 Add W9, W9, 1
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move [X8+24], W31
	191 Move [X8+28], W9
	192 Move X0, [X8+16]
	193 Move X20, [X31+16]
	194 Move X19, [X31+24]
	195 Move W1, W31
	196 Move X3, X31
	197 Move X30, [X31+32]
	198 Move X21, [X31+40]
	199 Call Array.Clear, X0, X1, X2
	200 Return 
	201 Move X20, [X31+16]
	202 Move X19, [X31+24]
	203 Move X30, [X31+32]
	204 Move X21, [X31+40]
	205 Return 
	206 Call 0x1C17F20

Method: System.Boolean get_disposed()

Disassembly:
	0x03D252E0 FMOV S0, 30
	0x03D252E4 FMOV S1, W8

ISIL:
	001 Move W0, [X0+256]
	002 Return X0

Method: System.Void set_disposed(System.Boolean value)

Disassembly:
	0x03D252E8 MOV V2.16B, V9.16B
	0x03D252EC MOV V3.16B, V8.16B
	0x03D252F0 MOV X1, X31

ISIL:
	001 And W8, W1, 1
	002 Move [X0+256], W8
	003 Return 

Method: System.Void Dispose()

Disassembly:
	0x03D252F4 BL 0x3C677DC
	0x03D252F8 ADD X0, X19, 0x94
	0x03D252FC MOV X1, X31
	0x03D25300 BL 0x3399B00
	0x03D25304 LDR X8, [X27]
	0x03D25308 MOV X1, X0
	0x03D2530C MOV X2, X31
	0x03D25310 MOV X0, X8
	0x03D25314 BL 0x321B938
	0x03D25318 MOVZ W8, 0x42F00000
	0x03D2531C FMOV S0, 30
	0x03D25320 FMOV S1, W8
	0x03D25324 MOV V2.16B, V9.16B
	0x03D25328 MOV V3.16B, V8.16B
	0x03D2532C MOV X1, X31
	0x03D25330 BL 0x3C677DC
	0x03D25334 ADD X0, X19, 0xA4
	0x03D25338 MOV X1, X31
	0x03D2533C BL 0x3399B00
	0x03D25340 LDR X8, [X26]
	0x03D25344 MOV X1, X0
	0x03D25348 MOV X2, X31
	0x03D2534C MOV X0, X8
	0x03D25350 BL 0x321B938
	0x03D25354 MOVZ W8, 0x43040000
	0x03D25358 FMOV S0, 30
	0x03D2535C FMOV S1, W8
	0x03D25360 MOV V2.16B, V9.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6C3000
	005 Move W8, [X20+2710]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3D6000
	012 Move X0, [X0+3088]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2710], W8
	016 Move X20, 0x3D6000
	017 Move W8, [X19+256]
	018 Move X20, [X20+3088]
	019 Compare W8, 0
	020 JumpIfNotEqual {25}
	021 Move X0, X19
	022 Call RenderChain.Destructor, X0
	023 Move W8, 1
	024 Move [X19+256], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Call GC.SuppressFinalize, X0
	036 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03D25364 MOV V3.16B, V8.16B
	0x03D25368 MOV X1, X31
	0x03D2536C BL 0x3C677DC
	0x03D25370 ADD X0, X19, 0xA8
	0x03D25374 MOV X1, X31
	0x03D25378 BL 0x3399B00
	0x03D2537C LDR X8, [X25]
	0x03D25380 MOV X1, X0
	0x03D25384 MOV X2, X31
	0x03D25388 MOV X0, X8
	0x03D2538C BL 0x321B938

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+256]
	004 Compare W8, 0
	005 JumpIfNotEqual {15}
	006 Move X19, X0
	007 Move TEMP, X1
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call RenderChain.Destructor, X0
	013 Move W8, 1
	014 Move [X19+256], W8
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return 

Method: System.Void ProcessChanges()

Disassembly:
	0x03D25390 MOVZ W8, 0x43100000
	0x03D25394 FMOV S0, 30
	0x03D25398 FMOV S1, W8
	0x03D2539C MOV V2.16B, V9.16B
	0x03D253A0 MOV V3.16B, V8.16B
	0x03D253A4 MOV X1, X31
	0x03D253A8 BL 0x3C677DC
	0x03D253AC ADD X0, X19, 0xAC
	0x03D253B0 MOV X1, X31
	0x03D253B4 BL 0x3399B00
	0x03D253B8 ADRP X8, 0x43F000
	0x03D253BC LDR X8, [X8 + 0x888]
	0x03D253C0 MOV X1, X0
	0x03D253C4 MOV X2, X31
	0x03D253C8 LDR X8, [X8]
	0x03D253CC MOV X0, X8
	0x03D253D0 BL 0x321B938
	0x03D253D4 MOVZ W8, 0x431C0000
	0x03D253D8 FMOV S0, 30
	0x03D253DC FMOV S1, W8
	0x03D253E0 MOV V2.16B, V9.16B
	0x03D253E4 MOV V3.16B, V8.16B
	0x03D253E8 MOV X1, X31
	0x03D253EC BL 0x3C677DC
	0x03D253F0 ADD X0, X19, 0x9C
	0x03D253F4 MOV X1, X31
	0x03D253F8 BL 0x3399B00
	0x03D253FC ADRP X8, 0x43F000
	0x03D25400 LDR X8, [X8 + 0x868]
	0x03D25404 MOV X1, X0
	0x03D25408 MOV X2, X31
	0x03D2540C LDR X8, [X8]
	0x03D25410 MOV X0, X8
	0x03D25414 BL 0x321B938
	0x03D25418 MOVZ W8, 0x43280000
	0x03D2541C FMOV S0, 30
	0x03D25420 FMOV S1, W8
	0x03D25424 MOV V2.16B, V9.16B
	0x03D25428 MOV V3.16B, V8.16B
	0x03D2542C MOV X1, X31
	0x03D25430 BL 0x3C677DC
	0x03D25434 ADD X0, X19, 0xA0
	0x03D25438 MOV X1, X31
	0x03D2543C BL 0x3399B00
	0x03D25440 ADRP X8, 0x43F000
	0x03D25444 LDR X8, [X8 + 0x878]
	0x03D25448 MOV X1, X0
	0x03D2544C MOV X2, X31
	0x03D25450 LDR X8, [X8]
	0x03D25454 MOV X0, X8
	0x03D25458 BL 0x321B938
	0x03D2545C MOVZ W8, 0x43340000
	0x03D25460 FMOV S0, 30
	0x03D25464 FMOV S1, W8
	0x03D25468 MOV V2.16B, V9.16B
	0x03D2546C MOV V3.16B, V8.16B
	0x03D25470 MOV X1, X31
	0x03D25474 BL 0x3C677DC
	0x03D25478 ADD X0, X19, 0xCC
	0x03D2547C MOV X1, X31
	0x03D25480 BL 0x3399B00
	0x03D25484 ADRP X8, 0x43F000
	0x03D25488 LDR X8, [X8 + 0x838]
	0x03D2548C MOV X1, X0
	0x03D25490 MOV X2, X31
	0x03D25494 LDR X8, [X8]
	0x03D25498 MOV X0, X8
	0x03D2549C BL 0x321B938
	0x03D254A0 MOVZ W8, 0x43400000
	0x03D254A4 FMOV S0, 30
	0x03D254A8 FMOV S1, W8
	0x03D254AC MOV V2.16B, V9.16B
	0x03D254B0 MOV V3.16B, V8.16B
	0x03D254B4 MOV X1, X31
	0x03D254B8 BL 0x3C677DC
	0x03D254BC ADD X0, X19, 0xD0
	0x03D254C0 MOV X1, X31
	0x03D254C4 BL 0x3399B00
	0x03D254C8 ADRP X8, 0x43F000
	0x03D254CC LDR X8, [X8 + 0x7E8]
	0x03D254D0 MOV X1, X0
	0x03D254D4 MOV X2, X31
	0x03D254D8 LDR X8, [X8]
	0x03D254DC MOV X0, X8
	0x03D254E0 BL 0x321B938
	0x03D254E4 MOVZ W8, 0x434C0000
	0x03D254E8 FMOV S0, 30
	0x03D254EC FMOV S1, W8
	0x03D254F0 MOV V2.16B, V9.16B
	0x03D254F4 MOV V3.16B, V8.16B
	0x03D254F8 MOV X1, X31
	0x03D254FC BL 0x3C677DC
	0x03D25500 ADD X0, X19, 0xC8
	0x03D25504 MOV X1, X31
	0x03D25508 BL 0x3399B00
	0x03D2550C ADRP X8, 0x43F000
	0x03D25510 LDR X8, [X8 + 0x818]
	0x03D25514 MOV X1, X0
	0x03D25518 MOV X2, X31
	0x03D2551C LDR X8, [X8]
	0x03D25520 MOV X0, X8
	0x03D25524 BL 0x321B938
	0x03D25528 MOVZ W8, 0x43580000
	0x03D2552C FMOV S0, 30
	0x03D25530 FMOV S1, W8
	0x03D25534 MOV V2.16B, V9.16B
	0x03D25538 MOV V3.16B, V8.16B
	0x03D2553C MOV X1, X31
	0x03D25540 BL 0x3C677DC
	0x03D25544 ADD X0, X19, 0xD4
	0x03D25548 MOV X1, X31
	0x03D2554C BL 0x3399B00
	0x03D25550 ADRP X8, 0x43F000
	0x03D25554 LDR X8, [X8 + 0x7C0]
	0x03D25558 MOV X1, X0
	0x03D2555C MOV X2, X31
	0x03D25560 LDR X8, [X8]
	0x03D25564 MOV X0, X8
	0x03D25568 BL 0x321B938
	0x03D2556C MOVZ W8, 0x43640000
	0x03D25570 FMOV S0, 30
	0x03D25574 FMOV S1, W8
	0x03D25578 MOV V2.16B, V9.16B
	0x03D2557C MOV V3.16B, V8.16B
	0x03D25580 MOV X1, X31
	0x03D25584 BL 0x3C677DC
	0x03D25588 ADD X0, X19, 0xB8
	0x03D2558C MOV X1, X31
	0x03D25590 BL 0x3399B00
	0x03D25594 ADRP X8, 0x43F000
	0x03D25598 LDR X8, [X8 + 0x7F0]
	0x03D2559C MOV X1, X0
	0x03D255A0 MOV X2, X31
	0x03D255A4 LDR X8, [X8]
	0x03D255A8 MOV X0, X8
	0x03D255AC BL 0x321B938
	0x03D255B0 MOVZ W8, 0x43700000
	0x03D255B4 FMOV S0, 30
	0x03D255B8 FMOV S1, W8
	0x03D255BC MOV V2.16B, V9.16B
	0x03D255C0 MOV V3.16B, V8.16B
	0x03D255C4 MOV X1, X31
	0x03D255C8 BL 0x3C677DC
	0x03D255CC ADD X0, X19, 0xBC
	0x03D255D0 MOV X1, X31
	0x03D255D4 BL 0x3399B00
	0x03D255D8 ADRP X8, 0x43F000
	0x03D255DC LDR X8, [X8 + 0x800]
	0x03D255E0 MOV X1, X0
	0x03D255E4 MOV X2, X31
	0x03D255E8 LDR X8, [X8]
	0x03D255EC MOV X0, X8
	0x03D255F0 BL 0x321B938
	0x03D255F4 MOVZ W8, 0x437C0000
	0x03D255F8 FMOV S0, 30
	0x03D255FC FMOV S1, W8
	0x03D25600 MOV V2.16B, V9.16B
	0x03D25604 MOV V3.16B, V8.16B
	0x03D25608 MOV X1, X31
	0x03D2560C BL 0x3C677DC
	0x03D25610 ADD X0, X19, 0xC0
	0x03D25614 MOV X1, X31
	0x03D25618 BL 0x3399B00
	0x03D2561C ADRP X8, 0x43F000
	0x03D25620 LDR X8, [X8 + 0x810]
	0x03D25624 MOV X1, X0
	0x03D25628 MOV X2, X31
	0x03D2562C LDR X8, [X8]
	0x03D25630 MOV X0, X8
	0x03D25634 BL 0x321B938
	0x03D25638 MOVZ W8, 0x43840000
	0x03D2563C FMOV S0, 30
	0x03D25640 FMOV S1, W8
	0x03D25644 MOV V2.16B, V9.16B
	0x03D25648 MOV V3.16B, V8.16B
	0x03D2564C MOV X1, X31
	0x03D25650 BL 0x3C677DC
	0x03D25654 ADD X0, X19, 0xC4
	0x03D25658 MOV X1, X31
	0x03D2565C BL 0x3399B00
	0x03D25660 ADRP X8, 0x43F000
	0x03D25664 LDR X8, [X8 + 0x7C8]
	0x03D25668 MOV X1, X0
	0x03D2566C MOV X2, X31
	0x03D25670 LDR X8, [X8]
	0x03D25674 MOV X0, X8
	0x03D25678 BL 0x321B938
	0x03D2567C MOVZ W8, 0x438A0000
	0x03D25680 FMOV S0, 30
	0x03D25684 FMOV S1, W8
	0x03D25688 MOV V2.16B, V9.16B
	0x03D2568C MOV V3.16B, V8.16B
	0x03D25690 MOV X1, X31
	0x03D25694 BL 0x3C677DC
	0x03D25698 ADD X0, X19, 0xE0
	0x03D2569C MOV X1, X31
	0x03D256A0 BL 0x3399B00
	0x03D256A4 ADRP X8, 0x43F000
	0x03D256A8 LDR X8, [X8 + 0x7B8]
	0x03D256AC MOV X1, X0
	0x03D256B0 MOV X2, X31
	0x03D256B4 LDR X8, [X8]
	0x03D256B8 MOV X0, X8
	0x03D256BC BL 0x321B938
	0x03D256C0 MOVZ W8, 0x43900000
	0x03D256C4 FMOV S0, 30
	0x03D256C8 FMOV S1, W8
	0x03D256CC MOV V2.16B, V9.16B
	0x03D256D0 MOV V3.16B, V8.16B
	0x03D256D4 MOV X1, X31
	0x03D256D8 BL 0x3C677DC
	0x03D256DC CBZ X21, 0x3D259BC
	0x03D256E0 LDR X0, [X19 + 0x110]
	0x03D256E4 CBZ X0, 0x3D259E0
	0x03D256E8 ADRP X19, 0x43F000
	0x03D256EC ADRP X28, 0x43F000
	0x03D256F0 ADRP X27, 0x43F000
	0x03D256F4 ADRP X26, 0x43F000
	0x03D256F8 ADRP X25, 0x43F000
	0x03D256FC ADRP X24, 0x43F000
	0x03D25700 ADRP X22, 0x43F000
	0x03D25704 ADRP X21, 0x43F000
	0x03D25708 ADRP X20, 0x43F000
	0x03D2570C LDR X19, [X19 + 0x850]
	0x03D25710 LDR X28, [X28 + 0x830]
	0x03D25714 LDR X27, [X27 + 0x870]
	0x03D25718 LDR X26, [X26 + 0x7B0]
	0x03D2571C LDR X25, [X25 + 0x820]
	0x03D25720 LDR X24, [X24 + 0x7D0]
	0x03D25724 LDR X22, [X22 + 0x808]
	0x03D25728 LDR X21, [X21 + 0x828]
	0x03D2572C LDR X20, [X20 + 0x7F8]
	0x03D25730 ADD X8, X31, 0x8
	0x03D25734 MOV X1, X31
	0x03D25738 BL 0x3D33FD0
	0x03D2573C LDUR V0, [X31 + 0x8]
	0x03D25740 LDUR V1, [X31 + 0x18]
	0x03D25744 LDR W8, [X31 + 0x28]
	0x03D25748 ADD X0, X31, 0x30
	0x03D2574C MOV X1, X31
	0x03D25750 STP V0, V1, [X31 + 0x30]
	0x03D25754 STR W8, [X31 + 0x50]
	0x03D25758 ADD X23, X31, 0x30
	0x03D2575C BL 0x337B6E0
	0x03D25760 LDR X8, [X19]
	0x03D25764 MOV X1, X0
	0x03D25768 MOV X2, X31
	0x03D2576C MOV X0, X8
	0x03D25770 BL 0x321B938
	0x03D25774 ADRP X8, 0x3F5000
	0x03D25778 LDR X8, [X8 + 0x4C0]
	0x03D2577C MOV X19, X0
	0x03D25780 LDR X8, [X8]
	0x03D25784 LDR W9, [X8 + 0xE0]
	0x03D25788 CBNZ W9, 0x3D25794
	0x03D2578C MOV X0, X8
	0x03D25790 BL 0x1C16DFC
	0x03D25794 MOVZ W9, 0x447A0000
	0x03D25798 MOVZ W10, 0x42C80000
	0x03D2579C MOVZ W8, 0x439C0000
	0x03D257A0 FMOV S9, W9
	0x03D257A4 FMOV S8, W10
	0x03D257A8 FMOV S0, 30
	0x03D257AC FMOV S1, W8
	0x03D257B0 MOV V2.16B, V9.16B
	0x03D257B4 MOV V3.16B, V8.16B
	0x03D257B8 MOV X0, X19
	0x03D257BC MOV X1, X31
	0x03D257C0 BL 0x3C677DC
	0x03D257C4 ORR X0, X23, 0xF
	0x03D257C8 MOV X1, X31
	0x03D257CC BL 0x3399B00
	0x03D257D0 LDR X8, [X28]
	0x03D257D4 MOV X1, X0
	0x03D257D8 MOV X2, X31
	0x03D257DC MOV X0, X8
	0x03D257E0 BL 0x321B938
	0x03D257E4 MOVZ W8, 0x43A20000
	0x03D257E8 FMOV S0, 30
	0x03D257EC FMOV S1, W8
	0x03D257F0 MOV V2.16B, V9.16B
	0x03D257F4 MOV V3.16B, V8.16B
	0x03D257F8 MOV X1, X31
	0x03D257FC BL 0x3C677DC
	0x03D25800 ORR X0, X23, 0xF
	0x03D25804 MOV X1, X31
	0x03D25808 BL 0x3399B00
	0x03D2580C LDR X8, [X27]
	0x03D25810 MOV X1, X0
	0x03D25814 MOV X2, X31
	0x03D25818 MOV X0, X8
	0x03D2581C BL 0x321B938
	0x03D25820 MOVZ W8, 0x43A80000
	0x03D25824 FMOV S0, 30
	0x03D25828 FMOV S1, W8
	0x03D2582C MOV V2.16B, V9.16B
	0x03D25830 MOV V3.16B, V8.16B
	0x03D25834 MOV X1, X31
	0x03D25838 BL 0x3C677DC
	0x03D2583C ADD X0, X23, 0x14
	0x03D25840 MOV X1, X31
	0x03D25844 BL 0x3399B00
	0x03D25848 LDR X8, [X26]
	0x03D2584C MOV X1, X0
	0x03D25850 MOV X2, X31
	0x03D25854 MOV X0, X8
	0x03D25858 BL 0x321B938
	0x03D2585C MOVZ W8, 0x43AE0000
	0x03D25860 FMOV S0, 30
	0x03D25864 FMOV S1, W8
	0x03D25868 MOV V2.16B, V9.16B
	0x03D2586C MOV V3.16B, V8.16B
	0x03D25870 MOV X1, X31
	0x03D25874 BL 0x3C677DC
	0x03D25878 ADD X0, X23, 0x18
	0x03D2587C MOV X1, X31
	0x03D25880 BL 0x3399B00
	0x03D25884 LDR X8, [X25]
	0x03D25888 MOV X1, X0
	0x03D2588C MOV X2, X31
	0x03D25890 MOV X0, X8
	0x03D25894 BL 0x321B938
	0x03D25898 MOVZ W8, 0x43B40000
	0x03D2589C FMOV S0, 30
	0x03D258A0 FMOV S1, W8
	0x03D258A4 MOV V2.16B, V9.16B
	0x03D258A8 MOV V3.16B, V8.16B
	0x03D258AC MOV X1, X31
	0x03D258B0 BL 0x3C677DC
	0x03D258B4 ADD X0, X23, 0x10
	0x03D258B8 MOV X1, X31
	0x03D258BC BL 0x3399B00
	0x03D258C0 LDR X8, [X24]
	0x03D258C4 MOV X1, X0
	0x03D258C8 MOV X2, X31
	0x03D258CC MOV X0, X8
	0x03D258D0 BL 0x321B938
	0x03D258D4 MOVZ W8, 0x43BA0000
	0x03D258D8 FMOV S0, 30
	0x03D258DC FMOV S1, W8
	0x03D258E0 MOV V2.16B, V9.16B
	0x03D258E4 MOV V3.16B, V8.16B
	0x03D258E8 MOV X1, X31
	0x03D258EC BL 0x3C677DC
	0x03D258F0 ADD X0, X23, 0x20
	0x03D258F4 MOV X1, X31
	0x03D258F8 BL 0x3399B00
	0x03D258FC LDR X8, [X22]
	0x03D25900 MOV X1, X0
	0x03D25904 MOV X2, X31
	0x03D25908 MOV X0, X8
	0x03D2590C BL 0x321B938
	0x03D25910 MOVZ W8, 0x43C00000
	0x03D25914 FMOV S0, 30
	0x03D25918 FMOV S1, W8
	0x03D2591C MOV V2.16B, V9.16B
	0x03D25920 MOV V3.16B, V8.16B
	0x03D25924 MOV X1, X31
	0x03D25928 BL 0x3C677DC
	0x03D2592C ADD X0, X23, 0x1C
	0x03D25930 MOV X1, X31
	0x03D25934 BL 0x3399B00
	0x03D25938 LDR X8, [X21]
	0x03D2593C MOV X1, X0
	0x03D25940 MOV X2, X31
	0x03D25944 MOV X0, X8
	0x03D25948 BL 0x321B938
	0x03D2594C MOVZ W8, 0x43C60000
	0x03D25950 FMOV S0, 30
	0x03D25954 FMOV S1, W8
	0x03D25958 MOV V2.16B, V9.16B
	0x03D2595C MOV V3.16B, V8.16B
	0x03D25960 MOV X1, X31
	0x03D25964 BL 0x3C677DC
	0x03D25968 LDR W8, [X31 + 0x34]
	0x03D2596C MOVZ W9, 0xAAAB
	0x03D25970 MOVK W9, 0xAAAA0000
	0x03D25974 ADD X0, X31, 0x2C
	0x03D25978 MUL X8, X8, X9
	0x03D2597C UBFM X8, X8, 0x21, 0x3F
	0x03D25980 MOV X1, X31
	0x03D25984 STR W8, [X31 + 0x2C]
	0x03D25988 BL 0x3399B00
	0x03D2598C LDR X8, [X20]
	0x03D25990 MOV X1, X0
	0x03D25994 MOV X2, X31
	0x03D25998 MOV X0, X8
	0x03D2599C BL 0x321B938
	0x03D259A0 MOVZ W8, 0x43CC0000
	0x03D259A4 FMOV S0, 30
	0x03D259A8 FMOV S1, W8
	0x03D259AC MOV V2.16B, V9.16B
	0x03D259B0 MOV V3.16B, V8.16B

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x6C3000
	014 Move W8, [X20+2711]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0x3F8000
	021 Move X0, [X0+240]
	022 Call 0x1C17CF4
	023 Move X0, 0x440000
	024 Move X0, [X0+1912]
	025 Call 0x1C17CF4
	026 Move X0, 0x440000
	027 Move X0, [X0+1920]
	028 Call 0x1C17CF4
	029 Move X0, 0x440000
	030 Move X0, [X0+1928]
	031 Call 0x1C17CF4
	032 Move X0, 0x440000
	033 Move X0, [X0+1888]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+2711], W8
	037 Move V0, [X19+232]
	038 Move X21, X19
	039 Move [X21+136], D0
	040 NotImplemented "Instruction MOVI not yet implemented."
	041 Move [X21+88], X31
	042 Move [X21+72], V0
	043 Move [X21+56], V0
	044 Move [X21+40], V0
	045 Move [X21+24], V0
	046 Move [X21+8], V0
	047 Move [X19+232], W31
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 Move [X21+100], W31
	051 Add W8, W8, 1
	052 Move [X21-80], W8
	053 Compare X9, 0
	054 JumpIfEqual {446}
	055 Move W8, [X9+24]
	056 Compare W8, 0
	057 JumpIfEqual {447}
	058 Move X8, [X19+48]
	059 Compare X8, 0
	060 JumpIfEqual {446}
	061 Move X28, 0x3F8000
	062 Move X29, 0x440000
	063 Move X27, 0x440000
	064 Move X26, 0x440000
	065 Move X28, [X28+240]
	066 Move X29, [X29+1912]
	067 Move X27, [X27+1920]
	068 Move W22, [X9+32]
	069 Move X26, [X26+1928]
	070 Subtract X20, X21, 112
	071 Move X9, [X8+24]
	072 Compare W9, 0
	073 JumpIfEqual {447}
	074 Move W10, [X8+32]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, [X20]
	077 Compare X0, 0
	078 JumpIfEqual {446}
	079 Move X2, [X28]
	080 Move W1, W22
	081 Call List`1<Object>.get_Item, X0, X1
	082 Compare X0, 0
	083 JumpIfEqual {117}
	084 Move X23, X0
	085 Move W8, [X23+192]
	086 Move X25, [X23+176]
	087 And W31, W8, 12
	088 Move W8, [X23+232]
	089 Compare W8, 0
	090 JumpIfEqual {105}
	091 Move W8, [X23+196]
	092 Move W24, [X19+56]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, [X29]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X19
	100 Move X1, X23
	101 Move W2, W24
	102 Move X3, X21
	103 Move X4, X31
	104 Call RenderEvents.ProcessOnClippingChanged, X0, X1, X2, X3
	105 Move TEMP, 12
	106 Not TEMP
	107 Move W2, TEMP
	108 Move X0, X20
	109 Move X1, X23
	110 Call DepthOrderedDirtyTracking.ClearDirty, X0, X1, X2
	111 Move W8, [X19+196]
	112 Move X23, X25
	113 Add W8, W8, 1
	114 Move [X19+196], W8
	115 Compare X25, 0
	116 JumpIfNotEqual {85}
	117 Move X8, [X19+48]
	118 Add W22, W22, 1
	119 Compare X8, 0
	120 JumpIfNotEqual {71}
	121 Move W11, [X19+56]
	122 Move X10, [X19+40]
	123 Add W11, W11, 1
	124 Move [X19+56], W11
	125 Compare X10, 0
	126 JumpIfEqual {446}
	127 Move W11, [X10+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move W22, [X10+36]
	131 Move W10, [X8+36]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, [X20]
	134 Compare X0, 0
	135 JumpIfEqual {446}
	136 Move X2, [X28]
	137 Move W1, W22
	138 Call List`1<Object>.get_Item, X0, X1
	139 Compare X0, 0
	140 JumpIfEqual {174}
	141 Move X23, X0
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Move X25, [X23+176]
	144 And W31, W8, 384
	145 Move W8, [X23+232]
	146 Compare W8, 0
	147 JumpIfEqual {162}
	148 Move W8, [X23+196]
	149 Move W24, [X19+56]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, [X29]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X0, X19
	157 Move X1, X23
	158 Move W2, W24
	159 Move X3, X21
	160 Move X4, X31
	161 Call RenderEvents.ProcessOnOpacityChanged, X0, X1, X2, X3
	162 Move TEMP, 384
	163 Not TEMP
	164 Move W2, TEMP
	165 Move X0, X20
	166 Move X1, X23
	167 Call DepthOrderedDirtyTracking.ClearDirty, X0, X1, X2
	168 Move W8, [X19+196]
	169 Move X23, X25
	170 Add W8, W8, 1
	171 Move [X19+196], W8
	172 Compare X25, 0
	173 JumpIfNotEqual {142}
	174 Move X8, [X19+48]
	175 Compare X8, 0
	176 JumpIfEqual {446}
	177 Move X9, [X8+24]
	178 Add W22, W22, 1
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move W11, [X19+56]
	181 Move X10, [X19+40]
	182 Add W11, W11, 1
	183 Move [X19+56], W11
	184 Compare X10, 0
	185 JumpIfEqual {446}
	186 Move W11, [X10+24]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move W22, [X10+40]
	190 Move W10, [X8+40]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X0, [X20]
	193 Compare X0, 0
	194 JumpIfEqual {446}
	195 Move X2, [X28]
	196 Move W1, W22
	197 Call List`1<Object>.get_Item, X0, X1
	198 Compare X0, 0
	199 JumpIfEqual {236}
	200 Move X23, X0
	201 Move W8, [X23+193]
	202 Move X25, [X23+176]
	203 Move TEMP, X8
	204 And TEMP, TEMP, 2
	205 Compare TEMP, 2
	206 JumpIfNotEqual {230}
	207 Move W8, [X23+232]
	208 Compare W8, 0
	209 JumpIfEqual {224}
	210 Move W8, [X23+196]
	211 Move W24, [X19+56]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X0, [X29]
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfNotEqual {218}
	217 Call 0x1C17DFC
	218 Move X0, X19
	219 Move X1, X23
	220 Move W2, W24
	221 Move X3, X21
	222 Move X4, X31
	223 Call RenderEvents.ProcessOnColorChanged, X0, X1, X2, X3
	224 Move TEMP, 512
	225 Not TEMP
	226 Move W2, TEMP
	227 Move X0, X20
	228 Move X1, X23
	229 Call DepthOrderedDirtyTracking.ClearDirty, X0, X1, X2
	230 Move W8, [X19+196]
	231 Move X23, X25
	232 Add W8, W8, 1
	233 Move [X19+196], W8
	234 Compare X25, 0
	235 JumpIfNotEqual {201}
	236 Move X8, [X19+48]
	237 Compare X8, 0
	238 JumpIfEqual {446}
	239 Move X9, [X8+24]
	240 Add W22, W22, 1
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move W11, [X19+56]
	243 Move X10, [X19+40]
	244 Add W11, W11, 1
	245 Move [X19+56], W11
	246 Compare X10, 0
	247 JumpIfEqual {446}
	248 Move W11, [X10+24]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move W22, [X10+44]
	252 Move W8, [X8+44]
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move X0, [X20]
	255 Compare X0, 0
	256 JumpIfEqual {446}
	257 Move X2, [X28]
	258 Move W1, W22
	259 Call List`1<Object>.get_Item, X0, X1
	260 Compare X0, 0
	261 JumpIfEqual {295}
	262 Move X23, X0
	263 Move W8, [X23+192]
	264 Move X25, [X23+176]
	265 And W31, W8, 3
	266 Move W8, [X23+232]
	267 Compare W8, 0
	268 JumpIfEqual {283}
	269 Move W8, [X23+196]
	270 Move W24, [X19+56]
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move X0, [X29]
	273 Move W8, [X0+224]
	274 Compare W8, 0
	275 JumpIfNotEqual {277}
	276 Call 0x1C17DFC
	277 Move X0, X19
	278 Move X1, X23
	279 Move W2, W24
	280 Move X3, X21
	281 Move X4, X31
	282 Call RenderEvents.ProcessOnTransformOrSizeChanged, X0, X1, X2, X3
	283 Move TEMP, 3
	284 Not TEMP
	285 Move W2, TEMP
	286 Move X0, X20
	287 Move X1, X23
	288 Call DepthOrderedDirtyTracking.ClearDirty, X0, X1, X2
	289 Move W8, [X19+196]
	290 Move X23, X25
	291 Add W8, W8, 1
	292 Move [X19+196], W8
	293 Compare X25, 0
	294 JumpIfNotEqual {263}
	295 Move X8, [X19+48]
	296 Compare X8, 0
	297 JumpIfEqual {446}
	298 Move W9, [X8+24]
	299 Add W22, W22, 1
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X0, [X19+312]
	302 Compare X0, 0
	303 JumpIfEqual {446}
	304 Call JobManager.CompleteNudgeJobs, X0
	305 Move W8, [X19+56]
	306 Move X9, [X19+40]
	307 Move W10, 1
	308 Move [X19+120], W10
	309 Add W8, W8, 1
	310 Move [X19+56], W8
	311 Compare X9, 0
	312 JumpIfEqual {446}
	313 Move W8, [X9+24]
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Move X8, [X19+48]
	316 Compare X8, 0
	317 JumpIfEqual {446}
	318 Move W22, [X9+48]
	319 Move W9, [X8+24]
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Move W8, [X8+48]
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Move X0, [X20]
	324 Compare X0, 0
	325 JumpIfEqual {446}
	326 Move X2, [X28]
	327 Move W1, W22
	328 Call List`1<Object>.get_Item, X0, X1
	329 Compare X0, 0
	330 JumpIfEqual {364}
	331 Move X23, X0
	332 Move W8, [X23+192]
	333 Move X25, [X23+176]
	334 And W31, W8, 112
	335 Move W8, [X23+232]
	336 Compare W8, 0
	337 JumpIfEqual {352}
	338 Move W8, [X23+196]
	339 Move W24, [X19+56]
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Move X0, [X29]
	342 Move W8, [X0+224]
	343 Compare W8, 0
	344 JumpIfNotEqual {346}
	345 Call 0x1C17DFC
	346 Move X0, X19
	347 Move X1, X23
	348 Move W2, W24
	349 Move X3, X21
	350 Move X4, X31
	351 Call RenderEvents.ProcessOnVisualsChanged, X0, X1, X2, X3
	352 Move TEMP, 112
	353 Not TEMP
	354 Move W2, TEMP
	355 Move X0, X20
	356 Move X1, X23
	357 Call DepthOrderedDirtyTracking.ClearDirty, X0, X1, X2
	358 Move W8, [X19+196]
	359 Move X23, X25
	360 Add W8, W8, 1
	361 Move [X19+196], W8
	362 Compare X25, 0
	363 JumpIfNotEqual {332}
	364 Move X8, [X19+48]
	365 Add W22, W22, 1
	366 Compare X8, 0
	367 JumpIfNotEqual {319}
	368 Move X0, [X19+312]
	369 Compare X0, 0
	370 JumpIfEqual {446}
	371 Call JobManager.CompleteConvertMeshJobs, X0
	372 Move X0, [X19+312]
	373 Compare X0, 0
	374 JumpIfEqual {446}
	375 Call JobManager.CompleteClosingMeshJobs, X0
	376 Move X0, [X19+248]
	377 Compare X0, 0
	378 JumpIfEqual {446}
	379 Call OpacityIdAccelerator.CompleteJobs, X0
	380 Move X0, [X19+296]
	381 Move [X19+120], W31
	382 Compare X0, 0
	383 JumpIfEqual {446}
	384 Move X1, [X27]
	385 Call TempAllocator`1<Vertex>.Reset, X0
	386 Move X0, [X19+304]
	387 Compare X0, 0
	388 JumpIfEqual {446}
	389 Move X1, [X26]
	390 Call 0x26AFB98, X0
	391 Move X0, X20
	392 Call DepthOrderedDirtyTracking.Reset, X0
	393 Move X0, [X19+280]
	394 Compare X0, 0
	395 JumpIfEqual {399}
	396 Move X1, [X19+264]
	397 Move X2, X31
	398 Call AtlasBase.InvokeUpdateDynamicTextures, X0, X1
	399 Move X0, [X19+288]
	400 Compare X0, 0
	401 JumpIfEqual {404}
	402 Move X1, X31
	403 Call VectorImageManager.Commit, X0
	404 Move X8, 0x440000
	405 Move X8, [X8+1888]
	406 Add X20, X19, 320
	407 Move X0, [X8]
	408 Move W8, [X0+224]
	409 Compare W8, 0
	410 JumpIfNotEqual {412}
	411 Call 0x1C17DFC
	412 Move X0, X20
	413 Move X1, X31
	414 Call UIRVEShaderInfoAllocator.IssuePendingStorageChanges, X0
	415 Move X0, [X19+272]
	416 Compare X0, 0
	417 JumpIfEqual {433}
	418 Move X20, [X31+80]
	419 Move X19, [X31+88]
	420 Move X22, [X31+64]
	421 Move X21, [X31+72]
	422 Move X24, [X31+48]
	423 Move X23, [X31+56]
	424 Move X26, [X31+32]
	425 Move X25, [X31+40]
	426 Move X28, [X31+16]
	427 Move X27, [X31+24]
	428 Move X1, X31
	429 Move X29, [X31+96]
	430 Move X30, [X31+104]
	431 Call UIRenderDevice.OnFrameRenderingBegin, X0
	432 Return 
	433 Move X20, [X31+80]
	434 Move X19, [X31+88]
	435 Move X22, [X31+64]
	436 Move X21, [X31+72]
	437 Move X24, [X31+48]
	438 Move X23, [X31+56]
	439 Move X26, [X31+32]
	440 Move X25, [X31+40]
	441 Move X28, [X31+16]
	442 Move X27, [X31+24]
	443 Move X29, [X31+96]
	444 Move X30, [X31+104]
	445 Return 
	446 Call 0x1C17F20
	447 Call 0x1C17F28

Method: System.Void Render()

Disassembly:
	0x03D25B4C LDP X22, X21, [X31 + 0x20]
	0x03D25B50 LDP X30, X23, [X31 + 0x10]
	0x03D25B54 ADD X31, X31, 0x40
	0x03D25B58 RET
	0x03D25B5C BL 0x1C16F20
	0x03D25B60 ADRP X0, 0x3CE000
	0x03D25B64 LDR X0, [X0 + 0x5B0]
	0x03D25B68 BL 0x1C16D08
	0x03D25B6C BL 0x1C16F10
	0x03D25B70 MOV X19, X0
	0x03D25B74 ADRP X0, 0x43F000
	0x03D25B78 LDR X0, [X0 + 0x8A0]
	0x03D25B7C BL 0x1C16D08
	0x03D25B80 MOV X1, X0
	0x03D25B84 MOV X0, X19
	0x03D25B88 MOV X2, X31
	0x03D25B8C BL 0x337DF1C
	0x03D25B90 ADRP X0, 0x43F000
	0x03D25B94 LDR X0, [X0 + 0x8A8]
	0x03D25B98 BL 0x1C16D08
	0x03D25B9C MOV X1, X0
	0x03D25BA0 MOV X0, X19
	0x03D25BA4 BL 0x1C16DEC
	0x03D25BA8 STP X30, X19, [X31 - 0x10]!
	0x03D25BAC CBZ X1, 0x3D25BE8
	0x03D25BB0 LDRB W8, [X1 + 0xE8]
	0x03D25BB4 CBZ W8, 0x3D25BE0
	0x03D25BB8 LDRB W8, [X0 + 0x78]
	0x03D25BBC CBNZ W8, 0x3D25BEC
	0x03D25BC0 ANDS W31, W2, 0x1
	0x03D25BC4 MOVZ W8, 0x4
	0x03D25BC8 MOVZ W9, 0xC
	0x03D25BCC ADD X0, X0, 0x18
	0x03D25BD0 CSEL W2, W9, W8, NE
	0x03D25BD4 MOV W3, W31
	0x03D25BD8 LDP X30, X19, [X31], #0x10
	0x03D25BDC B 0x3D260CC
	0x03D25BE0 LDP X30, X19, [X31], #0x10
	0x03D25BE4 RET
	0x03D25BE8 BL 0x1C16F20
	0x03D25BEC ADRP X0, 0x3CE000
	0x03D25BF0 LDR X0, [X0 + 0x5B0]
	0x03D25BF4 BL 0x1C16D08
	0x03D25BF8 BL 0x1C16F10
	0x03D25BFC MOV X19, X0
	0x03D25C00 ADRP X0, 0x43F000
	0x03D25C04 LDR X0, [X0 + 0x8B0]
	0x03D25C08 BL 0x1C16D08
	0x03D25C0C MOV X1, X0
	0x03D25C10 MOV X0, X19
	0x03D25C14 MOV X2, X31
	0x03D25C18 BL 0x337DF1C
	0x03D25C1C ADRP X0, 0x43F000
	0x03D25C20 LDR X0, [X0 + 0x8B8]
	0x03D25C24 BL 0x1C16D08
	0x03D25C28 MOV X1, X0
	0x03D25C2C MOV X0, X19
	0x03D25C30 BL 0x1C16DEC
	0x03D25C34 STP X30, X19, [X31 - 0x10]!
	0x03D25C38 CBZ X1, 0x3D25C74
	0x03D25C3C LDRB W8, [X1 + 0xE8]
	0x03D25C40 CBZ W8, 0x3D25C6C
	0x03D25C44 LDRB W8, [X0 + 0x78]
	0x03D25C48 CBNZ W8, 0x3D25C78
	0x03D25C4C ANDS W31, W2, 0x1
	0x03D25C50 MOVZ W8, 0x80
	0x03D25C54 MOVZ W9, 0x180
	0x03D25C58 ADD X0, X0, 0x18
	0x03D25C5C CSEL W2, W9, W8, NE
	0x03D25C60 MOVZ W3, 0x1
	0x03D25C64 LDP X30, X19, [X31], #0x10
	0x03D25C68 B 0x3D260CC
	0x03D25C6C LDP X30, X19, [X31], #0x10
	0x03D25C70 RET
	0x03D25C74 BL 0x1C16F20
	0x03D25C78 ADRP X0, 0x3CE000
	0x03D25C7C LDR X0, [X0 + 0x5B0]
	0x03D25C80 BL 0x1C16D08
	0x03D25C84 BL 0x1C16F10
	0x03D25C88 MOV X19, X0
	0x03D25C8C ADRP X0, 0x43F000
	0x03D25C90 LDR X0, [X0 + 0x8C0]
	0x03D25C94 BL 0x1C16D08
	0x03D25C98 MOV X1, X0
	0x03D25C9C MOV X0, X19
	0x03D25CA0 MOV X2, X31
	0x03D25CA4 BL 0x337DF1C
	0x03D25CA8 ADRP X0, 0x43F000
	0x03D25CAC LDR X0, [X0 + 0x8C8]
	0x03D25CB0 BL 0x1C16D08
	0x03D25CB4 MOV X1, X0
	0x03D25CB8 MOV X0, X19
	0x03D25CBC BL 0x1C16DEC
	0x03D25CC0 STP X30, X19, [X31 - 0x10]!
	0x03D25CC4 CBZ X1, 0x3D25D00
	0x03D25CC8 LDRB W8, [X1 + 0xE8]
	0x03D25CCC CBZ W8, 0x3D25CF8
	0x03D25CD0 LDRB W8, [X0 + 0x78]
	0x03D25CD4 CBNZ W8, 0x3D25D04
	0x03D25CD8 ANDS W31, W2, 0x1
	0x03D25CDC MOVZ W8, 0x10
	0x03D25CE0 MOVZ W9, 0x30
	0x03D25CE4 ADD X0, X0, 0x18
	0x03D25CE8 CSEL W2, W9, W8, NE
	0x03D25CEC MOVZ W3, 0x4
	0x03D25CF0 LDP X30, X19, [X31], #0x10
	0x03D25CF4 B 0x3D260CC
	0x03D25CF8 LDP X30, X19, [X31], #0x10
	0x03D25CFC RET
	0x03D25D00 BL 0x1C16F20
	0x03D25D04 ADRP X0, 0x3CE000
	0x03D25D08 LDR X0, [X0 + 0x5B0]
	0x03D25D0C BL 0x1C16D08
	0x03D25D10 BL 0x1C16F10
	0x03D25D14 MOV X19, X0
	0x03D25D18 ADRP X0, 0x43F000
	0x03D25D1C LDR X0, [X0 + 0x8D0]
	0x03D25D20 BL 0x1C16D08
	0x03D25D24 MOV X1, X0
	0x03D25D28 MOV X0, X19
	0x03D25D2C MOV X2, X31
	0x03D25D30 BL 0x337DF1C
	0x03D25D34 ADRP X0, 0x43F000
	0x03D25D38 LDR X0, [X0 + 0x8D8]
	0x03D25D3C BL 0x1C16D08
	0x03D25D40 MOV X1, X0
	0x03D25D44 MOV X0, X19
	0x03D25D48 BL 0x1C16DEC
	0x03D25D4C STR X30, [X31 - 0x40]!
	0x03D25D50 STP X24, X23, [X31 + 0x10]
	0x03D25D54 STP X22, X21, [X31 + 0x20]
	0x03D25D58 STP X20, X19, [X31 + 0x30]
	0x03D25D5C ADRP X21, 0x6C2000
	0x03D25D60 LDRB W8, [X21 + 0xA9A]
	0x03D25D64 MOV X19, X1
	0x03D25D68 MOV X20, X0
	0x03D25D6C TBNZ X8, 0x0, 0x3D25D84
	0x03D25D70 ADRP X0, 0x43F000
	0x03D25D74 LDR X0, [X0 + 0x778]
	0x03D25D78 BL 0x1C16CF4
	0x03D25D7C MOVZ W8, 0x1
	0x03D25D80 STRB W8, [X21 + 0xA9A]
	0x03D25D84 LDRB W8, [X20 + 0x78]
	0x03D25D88 CBNZ W8, 0x3D25EB0
	0x03D25D8C CBZ X19, 0x3D25EF8
	0x03D25D90 LDR X8, [X19 + 0x378]
	0x03D25D94 ADD X0, X31, 0x8
	0x03D25D98 MOV X1, X31
	0x03D25D9C STR X8, [X31 + 0x8]
	0x03D25DA0 BL 0x3DF8994
	0x03D25DA4 CMP W0, 0x1
	0x03D25DA8 B.LT 0x3D25E6C
	0x03D25DAC ADRP X24, 0x43F000
	0x03D25DB0 LDR X24, [X24 + 0x778]
	0x03D25DB4 MOV W21, W0
	0x03D25DB8 MOV W22, W31
	0x03D25DBC LDR X8, [X19 + 0x378]
	0x03D25DC0 ADD X0, X31, 0x8
	0x03D25DC4 MOV W1, W22
	0x03D25DC8 MOV X2, X31
	0x03D25DCC STR X8, [X31 + 0x8]
	0x03D25DD0 BL 0x3DF98E4
	0x03D25DD4 LDR X8, [X24]
	0x03D25DD8 MOV X23, X0
	0x03D25DDC LDR W9, [X8 + 0xE0]
	0x03D25DE0 CBNZ W9, 0x3D25DEC
	0x03D25DE4 MOV X0, X8
	0x03D25DE8 BL 0x1C16DFC
	0x03D25DEC MOV X0, X20
	0x03D25DF0 MOV X1, X23
	0x03D25DF4 MOV X2, X31
	0x03D25DF8 BL 0x3D3B6CC
	0x03D25DFC ADD W22, W22, 0x1
	0x03D25E00 CMP W21, W22
	0x03D25E04 B.NE 0x3D25DBC
	0x03D25E08 CMP W21, 0x1
	0x03D25E0C B.LT 0x3D25E6C
	0x03D25E10 MOV W22, W31
	0x03D25E14 LDR X8, [X19 + 0x378]
	0x03D25E18 ADD X0, X31, 0x8
	0x03D25E1C MOV W1, W22
	0x03D25E20 MOV X2, X31
	0x03D25E24 STR X8, [X31 + 0x8]
	0x03D25E28 BL 0x3DF98E4
	0x03D25E2C LDR X8, [X24]
	0x03D25E30 MOV X23, X0
	0x03D25E34 LDR W9, [X8 + 0xE0]
	0x03D25E38 CBNZ W9, 0x3D25E44
	0x03D25E3C MOV X0, X8
	0x03D25E40 BL 0x1C16DFC
	0x03D25E44 MOV X0, X20
	0x03D25E48 MOV X1, X19
	0x03D25E4C MOV X2, X23
	0x03D25E50 MOV W3, W22
	0x03D25E54 MOV W4, W31
	0x03D25E58 MOV X5, X31
	0x03D25E5C BL 0x3D3A160
	0x03D25E60 ADD W22, W22, 0x1
	0x03D25E64 CMP W21, W22
	0x03D25E68 B.NE 0x3D25E14
	0x03D25E6C MOVZ W2, 0x1
	0x03D25E70 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 480
	002 Move [X31+352], D11
	003 Move [X31+360], D10
	004 Move [X31+368], D9
	005 Move [X31+376], D8
	006 Move [X31+384], X29
	007 Move [X31+392], X30
	008 Move [X31+400], X28
	009 Move [X31+408], X27
	010 Move [X31+416], X26
	011 Move [X31+424], X25
	012 Move [X31+432], X24
	013 Move [X31+440], X23
	014 Move [X31+448], X22
	015 Move [X31+456], X21
	016 Move [X31+464], X20
	017 Move [X31+472], X19
	018 Move X20, 0x6C3000
	019 Move W8, [X20+2712]
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0x440000
	026 Move X0, [X0+1944]
	027 Call 0x1C17CF4
	028 Move X0, 0x440000
	029 Move X0, [X0+1888]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+2712], W8
	033 Move X0, X19
	034 Call RenderChain.GetStandardMaterial, X0
	035 Move X8, [X19+264]
	036 Compare X8, 0
	037 JumpIfEqual {215}
	038 Move X20, X0
	039 Move X0, X8
	040 Move X1, X20
	041 Move X2, X31
	042 Call BaseVisualElementPanel.InvokeUpdateMaterial, X0, X1
	043 Move [X31+344], X31
	044 Move X8, [X19+16]
	045 Compare X8, 0
	046 JumpIfEqual {192}
	047 Move W8, [X19+537]
	048 Compare W8, 0
	049 JumpIfNotEqual {192}
	050 Move X0, [X19+264]
	051 Compare X0, 0
	052 JumpIfEqual {215}
	053 Move X8, [X0]
	054 Move X9, [X8+920]
	055 Move X1, [X8+928]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Compare X0, 0
	058 JumpIfEqual {215}
	059 Move X1, X31
	060 Call VisualElement.get_layout, X0
	061 Move V9, V0
	062 Move V8, V1
	063 Move V10, V2
	064 Move V11, V3
	065 Compare X20, 0
	066 JumpIfEqual {71}
	067 Move X0, X20
	068 Move W1, W31
	069 Move X2, X31
	070 Call Material.SetPass, X0, X1
	071 Move X8, -52670464
	072 Move X9, -52666368
	073 Move V4, [X8+3952]
	074 Move V5, [X9+84]
	075 Add S1, S10, S9
	076 Add S2, S11, S8
	077 Add X8, X31, 48
	078 Move V0, V9
	079 Move V3, V8
	080 Move X0, X31
	081 Call ProjectionUtils.Ortho, V0, V1, V2, V3, V4, V5
	082 Move V1, [X31+80]
	083 Move V0, [X31+96]
	084 Move V3, [X31+48]
	085 Move V2, [X31+64]
	086 Add X0, X31, 208
	087 Move X1, X31
	088 Move [X31+304], V1
	089 Move [X31+312], V0
	090 Move [X31+272], V3
	091 Move [X31+280], V2
	092 Move [X31+208], V3
	093 Move [X31+216], V2
	094 Move [X31+240], V1
	095 Move [X31+248], V0
	096 Call GL.LoadProjectionMatrix, X0
	097 Move X21, 0x6B4000
	098 Move W8, [X21+2752]
	099 Compare W8, 0
	100 JumpIfNotEqual {106}
	101 Move X0, 0x3D3000
	102 Move X0, [X0+624]
	103 Call 0x1C17CF4
	104 Move W8, 1
	105 Move [X21+2752], W8
	106 Move X8, 0x3D3000
	107 Move X8, [X8+624]
	108 Add X0, X31, 144
	109 Move X1, X31
	110 Move X8, [X8]
	111 Move X8, [X8+184]
	112 Move V1, [X8+96]
	113 Move V0, [X8+112]
	114 Move V2, [X8+64]
	115 Move V3, [X8+80]
	116 Move [X31+176], V1
	117 Move [X31+184], V0
	118 Move [X31+144], V2
	119 Move [X31+152], V3
	120 Call GL.set_modelview, X0
	121 Move X21, [X19+272]
	122 Move X0, [X19+288]
	123 Move X22, [X19+16]
	124 Compare X0, 0
	125 JumpIfEqual {129}
	126 Move X1, X31
	127 Call VectorImageManager.get_atlas, X0
	128 Move X23, X0
	129 Move X23, X31
	130 Move X8, 0x440000
	131 Move X8, [X8+1888]
	132 Add X27, X19, 320
	133 Move X0, [X8]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, X27
	139 Move X1, X31
	140 Call UIRVEShaderInfoAllocator.get_atlas, X0
	141 Move X8, [X19+264]
	142 Compare X8, 0
	143 JumpIfEqual {215}
	144 Move X24, X0
	145 Move X0, X8
	146 Move X1, X31
	147 Call BaseVisualElementPanel.get_scaledPixelsPerPoint, X0
	148 Move X0, X27
	149 Move X1, X31
	150 Move V8, V0
	151 Call UIRVEShaderInfoAllocator.get_transformConstants, X0
	152 Move X25, X0
	153 Move X26, X1
	154 Move X0, X27
	155 Move X1, X31
	156 Call UIRVEShaderInfoAllocator.get_clipRectConstants, X0
	157 Move X27, X0
	158 Move X0, [X19+80]
	159 Compare X0, 0
	160 JumpIfEqual {215}
	161 Move X8, 0x440000
	162 Move X8, [X8+1944]
	163 Move X28, X1
	164 Move W1, W31
	165 Move X2, [X8]
	166 Add X8, X31, 48
	167 Call List`1<RenderNodeData>.get_Item, X0, X1
	168 Compare X21, 0
	169 JumpIfEqual {215}
	170 Move X8, [X31+64]
	171 Add X9, X31, 344
	172 Move V0, V8
	173 Move X0, X21
	174 Move [X31+8], X28
	175 Move [X31+16], X8
	176 Move W8, 1
	177 Move X1, X22
	178 Move X2, X20
	179 Move X3, X20
	180 Move X4, X23
	181 Move X5, X24
	182 Move X6, X25
	183 Move X7, X26
	184 Move [X31+32], X9
	185 Move [X31+40], X31
	186 Move [X31+24], W8
	187 Move [X31], X27
	188 Call UIRenderDevice.EvaluateChain, X0, X1, X2, X3, X4, X5, V0, X6, X7, X8, X9, X10
	189 Move X20, [X31+344]
	190 Compare X20, 0
	191 JumpIfNotEqual {216}
	192 Move W8, [X19+536]
	193 Compare W8, 0
	194 JumpIfEqual {197}
	195 Move X0, X19
	196 Call RenderChain.DrawStats, X0
	197 Move X20, [X31+464]
	198 Move X19, [X31+472]
	199 Move X22, [X31+448]
	200 Move X21, [X31+456]
	201 Move X24, [X31+432]
	202 Move X23, [X31+440]
	203 Move X26, [X31+416]
	204 Move X25, [X31+424]
	205 Move X28, [X31+400]
	206 Move X27, [X31+408]
	207 Move X29, [X31+384]
	208 Move X30, [X31+392]
	209 Move D9, [X31+368]
	210 Move D8, [X31+376]
	211 Move D11, [X31+352]
	212 Move D10, [X31+360]
	213 Add X31, X31, 480
	214 Return 
	215 Call 0x1C17F20
	216 Move X0, 0x3FB000
	217 Move X0, [X0+1480]
	218 Call 0x1C17D08
	219 Move W8, [X0+224]
	220 Compare W8, 0
	221 JumpIfNotEqual {223}
	222 Call 0x1C17DFC
	223 Move X0, X20
	224 Move X1, X31
	225 Call GUIUtility.IsExitGUIException, X0
	226 Move X19, [X31+344]
	227 Move TEMP, X0
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfNotEqual {237}
	231 Move X0, 0x440000
	232 Move X0, [X0+1952]
	233 Call 0x1C17D08
	234 Move X1, X0
	235 Move X0, X19
	236 Call 0x1C17DEC
	237 Move X0, 0x440000
	238 Move X0, [X0+1960]
	239 Call 0x1C17D08
	240 Call 0x1C17F10
	241 Move X1, X19
	242 Move X2, X31
	243 Move X20, X0
	244 Call ImmediateModeException..ctor, X0, X1
	245 Move X0, 0x440000
	246 Move X0, [X0+1952]
	247 Call 0x1C17D08
	248 Move X1, X0
	249 Move X0, X20
	250 Call 0x1C17DEC

Method: System.Void UIEOnChildAdded(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D269E4 MOV X1, X19
	0x03D269E8 LDP X20, X19, [X31 + 0x10]
	0x03D269EC LDR X2, [X8]
	0x03D269F0 LDP X30, X21, [X31], #0x20
	0x03D269F4 B 0x2EF0E90
	0x03D269F8 BL 0x1C16F20
	0x03D269FC STP X30, X21, [X31 - 0x20]!
	0x03D26A00 STP X20, X19, [X31 + 0x10]
	0x03D26A04 ADRP X21, 0x6C1000
	0x03D26A08 LDRB W8, [X21 + 0xAA3]
	0x03D26A0C MOV X20, X1
	0x03D26A10 MOV X19, X0
	0x03D26A14 TBNZ X8, 0x0, 0x3D26A2C
	0x03D26A18 ADRP X0, 0x3CD000
	0x03D26A1C LDR X0, [X0 + 0x598]
	0x03D26A20 BL 0x1C16CF4
	0x03D26A24 MOVZ W8, 0x1
	0x03D26A28 STRB W8, [X21 + 0xAA3]
	0x03D26A2C CBZ X20, 0x3D26A84
	0x03D26A30 ADRP X8, 0x3CD000
	0x03D26A34 LDR X9, [X20 + 0x20]
	0x03D26A38 LDR X8, [X8 + 0x598]
	0x03D26A3C CBNZ X9, 0x3D26A44
	0x03D26A40 STR X20, [X19 + 0x10]
	0x03D26A44 LDR X0, [X8]
	0x03D26A48 LDR X20, [X20 + 0x38]
	0x03D26A4C LDR W8, [X0 + 0xE0]
	0x03D26A50 CBNZ W8, 0x3D26A58
	0x03D26A54 BL 0x1C16DFC
	0x03D26A58 MOV X0, X20
	0x03D26A5C MOV X1, X31
	0x03D26A60 MOV X2, X31
	0x03D26A64 BL 0x3C354F8
	0x03D26A68 TBZ X0, 0x0, 0x3D26A78
	0x03D26A6C LDR W8, [X19 + 0x84]
	0x03D26A70 ADD W8, W8, 0x1
	0x03D26A74 STR W8, [X19 + 0x84]
	0x03D26A78 LDP X20, X19, [X31 + 0x10]
	0x03D26A7C LDP X30, X21, [X31], #0x20
	0x03D26A80 RET
	0x03D26A84 BL 0x1C16F20
	0x03D26A88 STR X30, [X31 - 0x10]!
	0x03D26A8C CBZ X1, 0x3D26AAC
	0x03D26A90 LDR X8, [X1 + 0x20]
	0x03D26A94 CBNZ X8, 0x3D26AA4
	0x03D26A98 CBZ X2, 0x3D26AAC
	0x03D26A9C LDR X8, [X2 + 0x28]
	0x03D26AA0 STR X8, [X0 + 0x10]
	0x03D26AA4 LDR X30, [X31], #0x10
	0x03D26AA8 RET
	0x03D26AAC BL 0x1C16F20
	0x03D26AB0 SUB X31, X31, 0xF0
	0x03D26AB4 STR X30, [X31 + 0xC0]
	0x03D26AB8 STP X22, X21, [X31 + 0xD0]
	0x03D26ABC STP X20, X19, [X31 + 0xE0]
	0x03D26AC0 ADRP X22, 0x6C1000
	0x03D26AC4 ADRP X21, 0x43E000
	0x03D26AC8 MOV X19, X8
	0x03D26ACC LDRB W8, [X22 + 0xAA4]
	0x03D26AD0 LDR X21, [X21 + 0x730]
	0x03D26AD4 MOV X20, X0
	0x03D26AD8 TBNZ X8, 0x0, 0x3D26AFC
	0x03D26ADC ADRP X0, 0x43E000
	0x03D26AE0 LDR X0, [X0 + 0x798]
	0x03D26AE4 BL 0x1C16CF4
	0x03D26AE8 ADRP X0, 0x43E000
	0x03D26AEC LDR X0, [X0 + 0x730]
	0x03D26AF0 BL 0x1C16CF4
	0x03D26AF4 MOVZ W8, 0x1
	0x03D26AF8 STRB W8, [X22 + 0xAA4]
	0x03D26AFC LDR X0, [X21]
	0x03D26B00 MOVI V0.2D, 0x0
	0x03D26B04 STP V0, V0, [X31 + 0xA0]
	0x03D26B08 STP V0, V0, [X31 + 0x80]
	0x03D26B0C STP V0, V0, [X31 + 0x60]
	0x03D26B10 LDR W8, [X0 + 0xE0]
	0x03D26B14 LDR W21, [X20]
	0x03D26B18 CBNZ W8, 0x3D26B20
	0x03D26B1C BL 0x1C16DFC
	0x03D26B20 MOV W0, W21
	0x03D26B24 MOV X1, X31
	0x03D26B28 BL 0x3D27734
	0x03D26B2C CBZ X0, 0x3D26B84
	0x03D26B30 LDR X0, [X0 + 0x50]
	0x03D26B34 CBZ X0, 0x3D26B84
	0x03D26B38 ADRP X8, 0x43E000
	0x03D26B3C LDR X8, [X8 + 0x798]
	0x03D26B40 LDR W1, [X20 + 0x4]
	0x03D26B44 LDR X2, [X8]
	0x03D26B48 ADD X8, X31, 0x0
	0x03D26B4C BL 0x3136F34
	0x03D26B50 ADD X0, X31, 0x60
	0x03D26B54 ADD X1, X31, 0x0
	0x03D26B58 MOVZ W2, 0x60
	0x03D26B5C BL 0x3EB1AC0
	0x03D26B60 ADD X1, X31, 0x60
	0x03D26B64 MOVZ W2, 0x60
	0x03D26B68 MOV X0, X19
	0x03D26B6C BL 0x3EB1AC0
	0x03D26B70 LDP X20, X19, [X31 + 0xE0]
	0x03D26B74 LDP X22, X21, [X31 + 0xD0]
	0x03D26B78 LDR X30, [X31 + 0xC0]
	0x03D26B7C ADD X31, X31, 0xF0
	0x03D26B80 RET
	0x03D26B84 BL 0x1C16F20
	0x03D26B88 SUB X31, X31, 0xC0
	0x03D26B8C STP X30, X21, [X31 + 0xA0]
	0x03D26B90 STP X20, X19, [X31 + 0xB0]
	0x03D26B94 ADRP X21, 0x6C1000
	0x03D26B98 ADRP X20, 0x43E000
	0x03D26B9C LDRB W8, [X21 + 0xAA5]
	0x03D26BA0 LDR X20, [X20 + 0x658]
	0x03D26BA4 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6C2000
	009 Move W8, [X21+2713]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x3CE000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x43F000
	020 Move X0, [X0+1912]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2713], W8
	024 Compare X20, 0
	025 JumpIfEqual {110}
	026 Move X8, [X20+888]
	027 Add X0, X31, 8
	028 Move X1, X31
	029 Move [X31+8], X8
	030 Call Hierarchy.get_parent, X0
	031 Move X21, X0
	032 Compare X0, 0
	033 JumpIfEqual {47}
	034 Move X8, [X21+888]
	035 Add X0, X31, 8
	036 Move X1, X20
	037 Move X2, X31
	038 Move [X31+8], X8
	039 Call Hierarchy.IndexOf, X0, X1
	040 Move W8, [X19+120]
	041 Compare W8, 0
	042 JumpIfNotEqual {111}
	043 Move W8, [X21+232]
	044 Move W22, W0
	045 Compare W8, 0
	046 JumpIfNotEqual {51}
	047 Move W8, [X19+120]
	048 Compare W8, 0
	049 JumpIfNotEqual {111}
	050 Move W22, W31
	051 Move X8, 0x43F000
	052 Move X8, [X8+1912]
	053 Move X23, 0x3CE000
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Move X23, [X23+2600]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move W4, 1
	061 Move X0, X19
	062 Move X1, X21
	063 Move X2, X20
	064 Move W3, W22
	065 Move X5, X31
	066 Call RenderEvents.DepthFirstOnChildAdded, X0, X1, X2, X3, X4
	067 Move X8, [X23]
	068 Move W22, [X20+232]
	069 Move W21, W0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {75}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CSET not yet implemented."
	077 Move X1, X31
	078 Call Debug.Assert, X0
	079 Move X0, X20
	080 Move X1, X31
	081 Call VisualElement.get_panel, X0
	082 Move X8, [X19+264]
	083 Move X1, X31
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CSET not yet implemented."
	086 Call Debug.Assert, X0
	087 Move W2, 1
	088 Move X0, X19
	089 Move X1, X20
	090 Call RenderChain.UIEOnClippingChanged, X0, X1, X2
	091 Move X0, X19
	092 Move X1, X20
	093 Move W2, W31
	094 Call RenderChain.UIEOnOpacityChanged, X0, X1, X2
	095 Move W2, 1
	096 Move X0, X19
	097 Move X1, X20
	098 Call RenderChain.UIEOnVisualsChanged, X0, X1, X2
	099 Move W8, [X19+232]
	100 Add W8, W8, W21
	101 Move [X19+232], W8
	102 Move X20, [X31+48]
	103 Move X19, [X31+56]
	104 Move X22, [X31+32]
	105 Move X21, [X31+40]
	106 Move X30, [X31+16]
	107 Move X23, [X31+24]
	108 Add X31, X31, 64
	109 Return 
	110 Call 0x1C17F20
	111 Move X0, 0x3CE000
	112 Move X0, [X0+1456]
	113 Call 0x1C17D08
	114 Call 0x1C17F10
	115 Move X19, X0
	116 Move X0, 0x43F000
	117 Move X0, [X0+2208]
	118 Call 0x1C17D08
	119 Move X1, X0
	120 Move X0, X19
	121 Move X2, X31
	122 Call InvalidOperationException..ctor, X0, X1
	123 Move X0, 0x43F000
	124 Move X0, [X0+2216]
	125 Call 0x1C17D08
	126 Move X1, X0
	127 Move X0, X19
	128 Call 0x1C17DEC

Method: System.Void UIEOnChildrenReordered(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D26D4C STR X8, [X31 + 0xD0]
	0x03D26D50 ORR X19, X9, 0xF
	0x03D26D54 LDR X1, [X27]
	0x03D26D58 ADD X0, X31, 0xB0
	0x03D26D5C BL 0x2BF5330
	0x03D26D60 TBZ X0, 0x0, 0x3D2707C
	0x03D26D64 LDR X22, [X31 + 0xC8]
	0x03D26D68 CBZ X22, 0x3D2709C
	0x03D26D6C LDR X8, [X22]
	0x03D26D70 MOVZ W1, 0x6
	0x03D26D74 MOV X0, X22
	0x03D26D78 LDR X9, [X8 + 0x438]
	0x03D26D7C LDR X2, [X8 + 0x440]
	0x03D26D80 BLR X9
	0x03D26D84 CBZ X0, 0x3D26DB4
	0x03D26D88 LDR X9, [X0]
	0x03D26D8C LDR X8, [X28]
	0x03D26D90 LDRB W11, [X9 + 0x130]
	0x03D26D94 LDRB W10, [X8 + 0x130]
	0x03D26D98 CMP W11, W10
	0x03D26D9C B.CC 0x3D26DB4
	0x03D26DA0 LDR X9, [X9 + 0xC8]
	0x03D26DA4 ADD X9, X9, X10, 0x3, LSL
	0x03D26DA8 LDUR X9, [X9 - 0x8]
	0x03D26DAC CMP X9, X8
	0x03D26DB0 B.EQ 0x3D26E3C
	0x03D26DB4 MOV X23, X31
	0x03D26DB8 MOVZ W8, 0x1
	0x03D26DBC CBNZ W8, 0x3D26D54
	0x03D26DC0 LDR X8, [X22]
	0x03D26DC4 LDR X1, [X29]
	0x03D26DC8 LDRB W10, [X8 + 0x130]
	0x03D26DCC LDRB W9, [X1 + 0x130]
	0x03D26DD0 CMP W10, W9
	0x03D26DD4 B.CC 0x3D270A0
	0x03D26DD8 LDR X8, [X8 + 0xC8]
	0x03D26DDC ADD X8, X8, X9, 0x3, LSL
	0x03D26DE0 LDUR X8, [X8 - 0x8]
	0x03D26DE4 CMP X8, X1
	0x03D26DE8 B.NE 0x3D270A0
	0x03D26DEC CBZ X23, 0x3D2709C
	0x03D26DF0 MOV X0, X23
	0x03D26DF4 BL 0x3D26628
	0x03D26DF8 MOVI V0.2D, 0x0
	0x03D26DFC STP V0, V0, [X19]
	0x03D26E00 STR V0, [X19 + 0x2]
	0x03D26E04 STR X31, [X19 + 0x30]
	0x03D26E08 LDR X8, [X23 + 0x110]
	0x03D26E0C STR X0, [X31 + 0x50]
	0x03D26E10 MOV X24, X0
	0x03D26E14 STR X8, [X31 + 0x70]
	0x03D26E18 LDR X8, [X23 + 0x120]
	0x03D26E1C CMP X8, 0x0
	0x03D26E20 CSEL X20, X20, X8, EQ
	0x03D26E24 CBZ X8, 0x3D26E60
	0x03D26E28 CBZ X20, 0x3D2709C
	0x03D26E2C MOV X0, X20
	0x03D26E30 MOV X1, X31
	0x03D26E34 BL 0x3D2D758
	0x03D26E38 B 0x3D26E64
	0x03D26E3C LDR X23, [X0 + 0x28]
	0x03D26E40 CBZ X23, 0x3D26DB8
	0x03D26E44 LDR W8, [X23 + 0x7C]
	0x03D26E48 TBNZ X8, 0x1F, 0x3D26DB8
	0x03D26E4C LDR X8, [X23 + 0x10]
	0x03D26E50 CMP X8, 0x0
	0x03D26E54 CSET W8, EQ
	0x03D26E58 CBNZ W8, 0x3D26D54
	0x03D26E5C B 0x3D26DC0
	0x03D26E60 MOV X0, X31
	0x03D26E64 LDR X8, [X26]
	0x03D26E68 STR X0, [X31 + 0x78]
	0x03D26E6C LDR W9, [X8 + 0xE0]
	0x03D26E70 CBNZ W9, 0x3D26E7C
	0x03D26E74 MOV X0, X8
	0x03D26E78 BL 0x1C16DFC
	0x03D26E7C ADD X25, X23, 0x140
	0x03D26E80 MOV X0, X25
	0x03D26E84 MOV X1, X31
	0x03D26E88 BL 0x3D2ABA4
	0x03D26E8C STR X0, [X31 + 0x80]
	0x03D26E90 MOV X0, X22
	0x03D26E94 MOV X1, X31
	0x03D26E98 BL 0x3DBBED8
	0x03D26E9C MOV X0, X25
	0x03D26EA0 MOV X1, X31
	0x03D26EA4 STR S0, [X31 + 0x88]
	0x03D26EA8 BL 0x3D2AB14
	0x03D26EAC STP X0, X1, [X31 + 0x90]
	0x03D26EB0 MOV X0, X25
	0x03D26EB4 MOV X1, X31
	0x03D26EB8 BL 0x3D2AB5C
	0x03D26EBC STP X0, X1, [X31 + 0xA0]
	0x03D26EC0 LDR W8, [X23 + 0x84]
	0x03D26EC4 CBZ W8, 0x3D27014
	0x03D26EC8 LDR X25, [X23 + 0x10]
	0x03D26ECC CBZ X25, 0x3D26D54
	0x03D26ED0 MOV X11, X31
	0x03D26ED4 MOV X9, X25
	0x03D26ED8 LDR W8, [X25 + 0x34]
	0x03D26EDC CBZ W8, 0x3D26EEC
	0x03D26EE0 LDR X25, [X25 + 0x28]
	0x03D26EE4 CBNZ X25, 0x3D26ED8
	0x03D26EE8 B 0x3D27030
	0x03D26EEC STP X9, X11, [X31 + 0x10]
	0x03D26EF0 ADRP X8, 0x3CD000
	0x03D26EF4 LDR X8, [X8 + 0x598]
	0x03D26EF8 LDR X29, [X25 + 0x38]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6C2000
	009 Move W8, [X21+2714]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x43F000
	017 Move X0, [X0+1912]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2714], W8
	021 Move W8, [X20+120]
	022 Compare W8, 0
	023 JumpIfNotEqual {99}
	024 Compare X19, 0
	025 JumpIfEqual {117}
	026 Move X8, [X19+888]
	027 Add X0, X31, 8
	028 Move X1, X31
	029 Move [X31+8], X8
	030 Call Hierarchy.get_childCount, X0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X24, 0x43F000
	033 Move X24, [X24+1912]
	034 Move W21, W0
	035 Move W22, W31
	036 Move X8, [X19+888]
	037 Add X0, X31, 8
	038 Move W1, W22
	039 Move X2, X31
	040 Move [X31+8], X8
	041 Call Hierarchy.get_Item, X0, X1
	042 Move X8, [X24]
	043 Move X23, X0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X20
	050 Move X1, X23
	051 Move X2, X31
	052 Call RenderEvents.DepthFirstOnChildRemoving, X0, X1
	053 Add W22, W22, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W22, W31
	057 Move X8, [X19+888]
	058 Add X0, X31, 8
	059 Move W1, W22
	060 Move X2, X31
	061 Move [X31+8], X8
	062 Call Hierarchy.get_Item, X0, X1
	063 Move X8, [X24]
	064 Move X23, X0
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X0, X20
	071 Move X1, X19
	072 Move X2, X23
	073 Move W3, W22
	074 Move W4, W31
	075 Move X5, X31
	076 Call RenderEvents.DepthFirstOnChildAdded, X0, X1, X2, X3, X4
	077 Add W22, W22, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W2, 1
	080 Move X0, X20
	081 Move X1, X19
	082 Call RenderChain.UIEOnClippingChanged, X0, X1, X2
	083 Move W2, 1
	084 Move X0, X20
	085 Move X1, X19
	086 Call RenderChain.UIEOnOpacityChanged, X0, X1, X2
	087 Move W2, 1
	088 Move X0, X20
	089 Move X1, X19
	090 Call RenderChain.UIEOnVisualsChanged, X0, X1, X2
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X22, [X31+32]
	094 Move X21, [X31+40]
	095 Move X24, [X31+16]
	096 Move X23, [X31+24]
	097 Move X30, [X31+64]
	098 Return 
	099 Move X0, 0x3CE000
	100 Move X0, [X0+1456]
	101 Call 0x1C17D08
	102 Call 0x1C17F10
	103 Move X19, X0
	104 Move X0, 0x43F000
	105 Move X0, [X0+2272]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X19
	109 Move X2, X31
	110 Call InvalidOperationException..ctor, X0, X1
	111 Move X0, 0x43F000
	112 Move X0, [X0+2280]
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X19
	116 Call 0x1C17DEC
	117 Call 0x1C17F20

Method: System.Void UIEOnChildRemoving(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D26EFC LDR X0, [X8]
	0x03D26F00 LDR W8, [X0 + 0xE0]
	0x03D26F04 CBNZ W8, 0x3D26F0C
	0x03D26F08 BL 0x1C16DFC
	0x03D26F0C MOV X0, X29
	0x03D26F10 MOV X1, X31
	0x03D26F14 MOV X2, X31
	0x03D26F18 BL 0x3C3883C
	0x03D26F1C MOV X9, X24
	0x03D26F20 TBNZ X0, 0x0, 0x3D26F28
	0x03D26F24 LDR X9, [X25 + 0x38]
	0x03D26F28 ADRP X8, 0x3CD000
	0x03D26F2C LDR X8, [X8 + 0x598]
	0x03D26F30 STR X9, [X31 + 0x8]
	0x03D26F34 LDR X0, [X8]
	0x03D26F38 LDR W8, [X0 + 0xE0]
	0x03D26F3C CBNZ W8, 0x3D26F48
	0x03D26F40 BL 0x1C16DFC
	0x03D26F44 LDR X9, [X31 + 0x8]
	0x03D26F48 LDR X29, [X31 + 0x18]
	0x03D26F4C MOV X0, X9
	0x03D26F50 MOV X2, X31
	0x03D26F54 MOV X1, X29
	0x03D26F58 BL 0x3C354F8
	0x03D26F5C TBZ X0, 0x0, 0x3D26FE8
	0x03D26F60 ADRP X8, 0x3CD000
	0x03D26F64 LDR X8, [X8 + 0x598]
	0x03D26F68 LDR X0, [X8]
	0x03D26F6C LDR W8, [X0 + 0xE0]
	0x03D26F70 CBNZ W8, 0x3D26F78
	0x03D26F74 BL 0x1C16DFC
	0x03D26F78 LDR X0, [X31 + 0x18]
	0x03D26F7C MOV X1, X31
	0x03D26F80 MOV X2, X31
	0x03D26F84 BL 0x3C354F8
	0x03D26F88 ADRP X29, 0x3F5000
	0x03D26F8C LDR X29, [X29 + 0x918]
	0x03D26F90 TBZ X0, 0x0, 0x3D26FFC
	0x03D26F94 ADRP X8, 0x43E000
	0x03D26F98 LDR X8, [X8 + 0x658]
	0x03D26F9C LDR X0, [X8]
	0x03D26FA0 LDR X8, [X31 + 0x18]
	0x03D26FA4 STR X8, [X31 + 0x58]
	0x03D26FA8 LDR X8, [X31 + 0x10]
	0x03D26FAC STR X8, [X31 + 0x68]
	0x03D26FB0 LDR W8, [X0 + 0xE0]
	0x03D26FB4 CBNZ W8, 0x3D26FBC
	0x03D26FB8 BL 0x1C16DFC
	0x03D26FBC LDR X3, [X31 + 0x20]
	0x03D26FC0 ADD W8, W21, 0x1
	0x03D26FC4 ADD X2, X31, 0x50
	0x03D26FC8 MOV X0, X22
	0x03D26FCC MOV X1, X23
	0x03D26FD0 MOV W4, W21
	0x03D26FD4 STR W8, [X31 + 0x18]
	0x03D26FD8 BL 0x3D270A8
	0x03D26FDC LDR W21, [X31 + 0x18]
	0x03D26FE0 MOV X9, X25
	0x03D26FE4 B 0x3D27000
	0x03D26FE8 MOV X10, X29
	0x03D26FEC ADRP X29, 0x3F5000
	0x03D26FF0 LDR X9, [X31 + 0x10]
	0x03D26FF4 LDR X29, [X29 + 0x918]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6C2000
	006 Move W8, [X21+2715]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x3CE000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0x43F000
	017 Move X0, [X0+1912]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2715], W8
	021 Move W8, [X20+120]
	022 Compare W8, 0
	023 JumpIfNotEqual {57}
	024 Move X8, 0x43F000
	025 Move X8, [X8+1912]
	026 Move W21, [X20+236]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X20
	033 Move X1, X19
	034 Move X2, X31
	035 Call RenderEvents.DepthFirstOnChildRemoving, X0, X1
	036 Add W8, W0, W21
	037 Move [X20+236], W8
	038 Compare X19, 0
	039 JumpIfEqual {75}
	040 Move X8, 0x3CE000
	041 Move X8, [X8+2600]
	042 Move W19, [X19+232]
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 NotImplemented "Instruction CSET not yet implemented."
	052 Move X1, X31
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Call Debug.Assert, X0
	056 Return 
	057 Move X0, 0x3CE000
	058 Move X0, [X0+1456]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X19, X0
	062 Move X0, 0x43F000
	063 Move X0, [X0+2288]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X19
	067 Move X2, X31
	068 Call InvalidOperationException..ctor, X0, X1
	069 Move X0, 0x43F000
	070 Move X0, [X0+2296]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X19
	074 Call 0x1C17DEC
	075 Call 0x1C17F20

Method: System.Void UIEOnRenderHintsChanged(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D26FF8 B 0x3D27004
	0x03D26FFC LDR X9, [X31 + 0x10]
	0x03D27000 LDR X10, [X31 + 0x8]
	0x03D27004 LDR X25, [X25 + 0x28]
	0x03D27008 MOV X11, X10
	0x03D2700C CBNZ X25, 0x3D26ED8
	0x03D27010 B 0x3D27034
	0x03D27014 STR X24, [X31 + 0x58]
	0x03D27018 ADRP X9, 0x43D000
	0x03D2701C LDR X8, [X23 + 0x10]
	0x03D27020 LDR X9, [X9 + 0x658]
	0x03D27024 STR X8, [X31 + 0x68]
	0x03D27028 LDR X0, [X9]
	0x03D2702C B 0x3D2704C
	0x03D27030 MOV X10, X11
	0x03D27034 CBZ X9, 0x3D26D54
	0x03D27038 ADRP X8, 0x43D000
	0x03D2703C LDR X8, [X8 + 0x658]
	0x03D27040 STR X10, [X31 + 0x58]
	0x03D27044 STR X9, [X31 + 0x68]
	0x03D27048 LDR X0, [X8]
	0x03D2704C LDR W8, [X0 + 0xE0]
	0x03D27050 CBNZ W8, 0x3D27058
	0x03D27054 BL 0x1C16DFC
	0x03D27058 LDR X3, [X31 + 0x20]
	0x03D2705C ADD X2, X31, 0x50
	0x03D27060 MOV X0, X22
	0x03D27064 MOV X1, X23
	0x03D27068 MOV W4, W21
	0x03D2706C ADD W24, W21, 0x1
	0x03D27070 BL 0x3D270A8
	0x03D27074 MOV W21, W24
	0x03D27078 B 0x3D26D54
	0x03D2707C LDP X20, X19, [X31 + 0x130]
	0x03D27080 LDP X22, X21, [X31 + 0x120]
	0x03D27084 LDP X24, X23, [X31 + 0x110]
	0x03D27088 LDP X26, X25, [X31 + 0x100]
	0x03D2708C LDP X28, X27, [X31 + 0xF0]
	0x03D27090 LDP X29, X30, [X31 + 0xE0]
	0x03D27094 ADD X31, X31, 0x140
	0x03D27098 RET
	0x03D2709C BL 0x1C16F20
	0x03D270A0 MOV X0, X22
	0x03D270A4 BL 0x1C171E0
	0x03D270A8 STP D9, D8, [X31 - 0x70]!
	0x03D270AC STP X29, X30, [X31 + 0x10]
	0x03D270B0 STP X28, X27, [X31 + 0x20]
	0x03D270B4 STP X26, X25, [X31 + 0x30]
	0x03D270B8 STP X24, X23, [X31 + 0x40]
	0x03D270BC STP X22, X21, [X31 + 0x50]
	0x03D270C0 STP X20, X19, [X31 + 0x60]
	0x03D270C4 ADD X29, X31, 0x10
	0x03D270C8 SUB X31, X31, 0x180

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {40}
	006 Move W8, [X1+232]
	007 Move X19, X1
	008 Compare W8, 0
	009 JumpIfEqual {23}
	010 Move W8, [X0+120]
	011 Move X20, X0
	012 Compare W8, 0
	013 JumpIfNotEqual {41}
	014 Move X0, X19
	015 Move X1, X31
	016 Call VisualElement.get_renderHints, X0
	017 And W8, W0, 992
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, X20
	020 Move X1, X19
	021 Move W2, W31
	022 Call RenderChain.UIEOnVisualsChanged, X0, X1, X2
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return 
	027 Move X0, X20
	028 Move X1, X19
	029 Call RenderChain.UIEOnChildRemoving, X0, X1
	030 Move X0, X20
	031 Move X1, X19
	032 Call RenderChain.UIEOnChildAdded, X0, X1
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+32]
	038 Call VisualElement.MarkRenderHintsClean, X0
	039 Return 
	040 Call 0x1C17F20
	041 Move X0, 0x3CD000
	042 Move X0, [X0+1456]
	043 Call 0x1C17D08
	044 Call 0x1C17F10
	045 Move X19, X0
	046 Move X0, 0x43E000
	047 Move X0, [X0+2304]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X19
	051 Move X2, X31
	052 Call InvalidOperationException..ctor, X0, X1
	053 Move X0, 0x43E000
	054 Move X0, [X0+2312]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Call 0x1C17DEC

Method: System.Void UIEOnClippingChanged(UnityEngine.UIElements.VisualElement ve, System.Boolean hierarchical)

Disassembly:
	0x03D26BA8 TBNZ X8, 0x0, 0x3D26BC0
	0x03D26BAC ADRP X0, 0x43E000
	0x03D26BB0 LDR X0, [X0 + 0x658]
	0x03D26BB4 BL 0x1C16CF4
	0x03D26BB8 MOVZ W8, 0x1
	0x03D26BBC STRB W8, [X21 + 0xAA5]
	0x03D26BC0 LDR X0, [X20]
	0x03D26BC4 STR X31, [X31 + 0x98]
	0x03D26BC8 LDR W8, [X0 + 0xE0]
	0x03D26BCC CBNZ W8, 0x3D26BD4
	0x03D26BD0 BL 0x1C16DFC
	0x03D26BD4 ADD X8, X31, 0x38
	0x03D26BD8 MOV X0, X19
	0x03D26BDC BL 0x3D26AB0
	0x03D26BE0 LDP X3, X2, [X31 + 0x38]
	0x03D26BE4 LDP X8, X1, [X31 + 0x48]
	0x03D26BE8 LDP X0, X4, [X31 + 0x58]
	0x03D26BEC LDR X5, [X31 + 0x68]
	0x03D26BF0 LDR V0, [X31 + 0x70]
	0x03D26BF4 LDP X6, X7, [X31 + 0x78]
	0x03D26BF8 LDP X9, X10, [X31 + 0x88]
	0x03D26BFC STR X31, [X31 + 0x98]
	0x03D26C00 CBZ X0, 0x3D26C2C
	0x03D26C04 ADD X11, X31, 0x98
	0x03D26C08 STRB W31, [X31 + 0x18]
	0x03D26C0C STP X10, X8, [X31 + 0x8]
	0x03D26C10 STP X11, X31, [X31 + 0x20]
	0x03D26C14 STR X9, [X31]
	0x03D26C18 BL 0x3D32174
	0x03D26C1C LDP X20, X19, [X31 + 0xB0]
	0x03D26C20 LDP X30, X21, [X31 + 0xA0]
	0x03D26C24 ADD X31, X31, 0xC0
	0x03D26C28 RET
	0x03D26C2C BL 0x1C16F20
	0x03D26C30 SUB X31, X31, 0x140

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {24}
	005 Move W8, [X1+232]
	006 Compare W8, 0
	007 JumpIfEqual {21}
	008 Move W8, [X0+120]
	009 Compare W8, 0
	010 JumpIfNotEqual {25}
	011 And W31, W2, 1
	012 Move W8, 4
	013 Move W9, 12
	014 Add X0, X0, 24
	015 NotImplemented "Instruction CSEL not yet implemented."
	016 Move W3, W31
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Call DepthOrderedDirtyTracking.RegisterDirty, X0, X1, X2, X3
	020 Return 
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return 
	024 Call 0x1C17F20
	025 Move X0, 0x3CE000
	026 Move X0, [X0+1456]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Move X0, 0x43F000
	031 Move X0, [X0+2224]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Move X2, X31
	036 Call InvalidOperationException..ctor, X0, X1
	037 Move X0, 0x43F000
	038 Move X0, [X0+2232]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Call 0x1C17DEC

Method: System.Void UIEOnOpacityChanged(UnityEngine.UIElements.VisualElement ve, System.Boolean hierarchical = False)

Disassembly:
	0x03D26C34 STP X29, X30, [X31 + 0xE0]
	0x03D26C38 STP X28, X27, [X31 + 0xF0]
	0x03D26C3C STP X26, X25, [X31 + 0x100]
	0x03D26C40 STP X24, X23, [X31 + 0x110]
	0x03D26C44 STP X22, X21, [X31 + 0x120]
	0x03D26C48 STP X20, X19, [X31 + 0x130]
	0x03D26C4C STR X0, [X31 + 0x20]
	0x03D26C50 ADRP X21, 0x6C1000
	0x03D26C54 ADRP X20, 0x3F6000
	0x03D26C58 LDRB W8, [X21 + 0xAA6]
	0x03D26C5C LDR X20, [X20 + 0xE98]
	0x03D26C60 ADD X19, X31, 0xB0
	0x03D26C64 TBNZ X8, 0x0, 0x3D26CDC
	0x03D26C68 ADRP X0, 0x3F5000
	0x03D26C6C LDR X0, [X0 + 0x918]
	0x03D26C70 BL 0x1C16CF4
	0x03D26C74 ADRP X0, 0x43E000
	0x03D26C78 LDR X0, [X0 + 0x950]
	0x03D26C7C BL 0x1C16CF4
	0x03D26C80 ADRP X0, 0x43E000
	0x03D26C84 LDR X0, [X0 + 0x958]
	0x03D26C88 BL 0x1C16CF4
	0x03D26C8C ADRP X0, 0x43E000
	0x03D26C90 LDR X0, [X0 + 0x960]
	0x03D26C94 BL 0x1C16CF4
	0x03D26C98 ADRP X0, 0x3CD000
	0x03D26C9C LDR X0, [X0 + 0x598]
	0x03D26CA0 BL 0x1C16CF4
	0x03D26CA4 ADRP X0, 0x43E000
	0x03D26CA8 LDR X0, [X0 + 0x658]
	0x03D26CAC BL 0x1C16CF4
	0x03D26CB0 ADRP X0, 0x3F6000
	0x03D26CB4 LDR X0, [X0 + 0xE98]
	0x03D26CB8 BL 0x1C16CF4
	0x03D26CBC ADRP X0, 0x43C000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {24}
	005 Move W8, [X1+232]
	006 Compare W8, 0
	007 JumpIfEqual {21}
	008 Move W8, [X0+120]
	009 Compare W8, 0
	010 JumpIfNotEqual {25}
	011 And W31, W2, 1
	012 Move W8, 128
	013 Move W9, 384
	014 Add X0, X0, 24
	015 NotImplemented "Instruction CSEL not yet implemented."
	016 Move W3, 1
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Call DepthOrderedDirtyTracking.RegisterDirty, X0, X1, X2, X3
	020 Return 
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return 
	024 Call 0x1C17F20
	025 Move X0, 0x3CE000
	026 Move X0, [X0+1456]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Move X0, 0x43F000
	031 Move X0, [X0+2240]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Move X2, X31
	036 Call InvalidOperationException..ctor, X0, X1
	037 Move X0, 0x43F000
	038 Move X0, [X0+2248]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Call 0x1C17DEC

Method: System.Void UIEOnColorChanged(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D27290 MOV X0, X26
	0x03D27294 MOV X2, X27
	0x03D27298 BL 0x31372EC
	0x03D2729C ADD X8, X31, 0x0
	0x03D272A0 SUB X26, X8, 0x10
	0x03D272A4 ADD X31, X26, 0x0
	0x03D272A8 STUR X31, [X8 - 0x10]
	0x03D272AC LDR W9, [X24 + 0x7C]
	0x03D272B0 ORR X10, X26, 0x7
	0x03D272B4 STUR W9, [X8 - 0x10]
	0x03D272B8 STR W25, [X10]
	0x03D272BC CBZ X23, 0x3D273D8
	0x03D272C0 ADD X8, X23, 0x198
	0x03D272C4 ADRP X23, 0x6B1000
	0x03D272C8 LDR X22, [X22 + 0x8]
	0x03D272CC LDP V0, V1, [X8 + 0x20]
	0x03D272D0 LDP V2, V3, [X8]
	0x03D272D4 LDRB W8, [X23 + 0x783]
	0x03D272D8 SUB X24, X29, 0x70
	0x03D272DC STP V0, V1, [X24 + 0x20]
	0x03D272E0 STP V2, V3, [X24]
	0x03D272E4 CBNZ W8, 0x3D272FC
	0x03D272E8 ADRP X0, 0x3CC000
	0x03D272EC LDR X0, [X0 + 0x5A0]
	0x03D272F0 BL 0x1C16CF4
	0x03D272F4 MOVZ W8, 0x1
	0x03D272F8 STRB W8, [X23 + 0x783]
	0x03D272FC CBZ X21, 0x3D273D8
	0x03D27300 ADRP X8, 0x3CC000
	0x03D27304 LDR X8, [X8 + 0x5A0]
	0x03D27308 ADRP X23, 0x3F5000
	0x03D2730C MOV X0, X21

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {21}
	005 Move W8, [X1+232]
	006 Compare W8, 0
	007 JumpIfEqual {18}
	008 Move W8, [X0+120]
	009 Compare W8, 0
	010 JumpIfNotEqual {22}
	011 Add X0, X0, 24
	012 Move W2, 512
	013 Move W3, 2
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call DepthOrderedDirtyTracking.RegisterDirty, X0, X1, X2, X3
	017 Return 
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return 
	021 Call 0x1C17F20
	022 Move X0, 0x3CD000
	023 Move X0, [X0+1456]
	024 Call 0x1C17D08
	025 Call 0x1C17F10
	026 Move X19, X0
	027 Move X0, 0x43E000
	028 Move X0, [X0+2320]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Move X2, X31
	033 Call InvalidOperationException..ctor, X0, X1
	034 Move X0, 0x43E000
	035 Move X0, [X0+2328]
	036 Call 0x1C17D08
	037 Move X1, X0
	038 Move X0, X19
	039 Call 0x1C17DEC

Method: System.Void UIEOnTransformOrSizeChanged(UnityEngine.UIElements.VisualElement ve, System.Boolean transformChanged, System.Boolean clipRectSizeChanged)

Disassembly:
	0x03D27310 MOV X1, X31
	0x03D27314 LDR X8, [X8]
	0x03D27318 LDR X8, [X8 + 0xB8]
	0x03D2731C LDR V8, [X8]
	0x03D27320 LDR V9, [X8 + 0x8]
	0x03D27324 LDR X23, [X23 + 0x820]
	0x03D27328 BL 0x3C03A18
	0x03D2732C LDR X8, [X23]
	0x03D27330 MOV W23, W0
	0x03D27334 LDR W9, [X8 + 0xE0]
	0x03D27338 CBNZ W9, 0x3D27344
	0x03D2733C MOV X0, X8
	0x03D27340 BL 0x1C16DFC
	0x03D27344 MVNI V2.2S, 0x81, 0x18
	0x03D27348 LDP V0, V1, [X24]
	0x03D2734C STUR D2, [X19 + 0x14]
	0x03D27350 LDP V2, V3, [X24 + 0x20]
	0x03D27354 MOVN W8, 0x81000000
	0x03D27358 STR D8, [X19 + 0x8]
	0x03D2735C STR S9, [X19 + 0x10]
	0x03D27360 STR W8, [X19 + 0x1C]
	0x03D27364 STP V0, V1, [X19 + 0x20]
	0x03D27368 STP V2, V3, [X19 + 0x40]
	0x03D2736C SXTW X8, W23
	0x03D27370 SUB X31, X31, 0x30
	0x03D27374 MOVZ W9, 0x8
	0x03D27378 MOVZ W10, 0x2
	0x03D2737C ADD X2, X19, 0x20
	0x03D27380 ADD X3, X19, 0x8
	0x03D27384 MOVZ W4, 0x3
	0x03D27388 MOV X0, X21
	0x03D2738C MOV X1, X22
	0x03D27390 MOV W5, W31
	0x03D27394 MOV W6, W31
	0x03D27398 MOV W7, W20
	0x03D2739C STR X26, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {25}
	005 Move W8, [X1+232]
	006 Compare W8, 0
	007 JumpIfEqual {22}
	008 Move W8, [X0+120]
	009 Compare W8, 0
	010 JumpIfNotEqual {26}
	011 And W31, W3, 1
	012 Move W8, 2
	013 NotImplemented "Instruction CSEL not yet implemented."
	014 NotImplemented "Instruction BFM not yet implemented."
	015 Add X0, X0, 24
	016 Move W3, 3
	017 Move W2, W8
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Call DepthOrderedDirtyTracking.RegisterDirty, X0, X1, X2, X3
	021 Return 
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Return 
	025 Call 0x1C17F20
	026 Move X0, 0x3CD000
	027 Move X0, [X0+1456]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X19, X0
	031 Move X0, 0x43E000
	032 Move X0, [X0+2336]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X19
	036 Move X2, X31
	037 Call InvalidOperationException..ctor, X0, X1
	038 Move X0, 0x43E000
	039 Move X0, [X0+2344]
	040 Call 0x1C17D08
	041 Move X1, X0
	042 Move X0, X19
	043 Call 0x1C17DEC

Method: System.Void UIEOnVisualsChanged(UnityEngine.UIElements.VisualElement ve, System.Boolean hierarchical)

Disassembly:
	0x03D26CC0 LDR X0, [X0 + 0x6A8]
	0x03D26CC4 BL 0x1C16CF4
	0x03D26CC8 ADRP X0, 0x43E000
	0x03D26CCC LDR X0, [X0 + 0x760]
	0x03D26CD0 BL 0x1C16CF4
	0x03D26CD4 MOVZ W8, 0x1
	0x03D26CD8 STRB W8, [X21 + 0xAA6]
	0x03D26CDC LDR X0, [X20]
	0x03D26CE0 MOVI V0.2D, 0x0
	0x03D26CE4 STR X31, [X31 + 0xD0]
	0x03D26CE8 STP V0, V0, [X19]
	0x03D26CEC STP V0, V0, [X31 + 0x90]
	0x03D26CF0 STP V0, V0, [X31 + 0x70]
	0x03D26CF4 STP V0, V0, [X31 + 0x50]
	0x03D26CF8 LDR W8, [X0 + 0xE0]
	0x03D26CFC CBNZ W8, 0x3D26D04
	0x03D26D00 BL 0x1C16DFC
	0x03D26D04 ADRP X27, 0x43E000
	0x03D26D08 ADRP X28, 0x43C000
	0x03D26D0C ADRP X29, 0x3F5000
	0x03D26D10 ADRP X26, 0x43E000
	0x03D26D14 LDR X27, [X27 + 0x950]
	0x03D26D18 LDR X28, [X28 + 0x6A8]
	0x03D26D1C LDR X29, [X29 + 0x918]
	0x03D26D20 LDR X26, [X26 + 0x760]
	0x03D26D24 ADD X8, X31, 0x28
	0x03D26D28 MOV X0, X31
	0x03D26D2C BL 0x3E194D0
	0x03D26D30 LDUR V0, [X31 + 0x28]
	0x03D26D34 LDUR V1, [X31 + 0x38]
	0x03D26D38 LDR X8, [X31 + 0x48]
	0x03D26D3C ADD X9, X31, 0x50
	0x03D26D40 MOV X20, X31
	0x03D26D44 MOV W21, W31
	0x03D26D48 STP V0, V1, [X19]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {24}
	005 Move W8, [X1+232]
	006 Compare W8, 0
	007 JumpIfEqual {21}
	008 Move W8, [X0+120]
	009 Compare W8, 0
	010 JumpIfNotEqual {25}
	011 And W31, W2, 1
	012 Move W8, 16
	013 Move W9, 48
	014 Add X0, X0, 24
	015 NotImplemented "Instruction CSEL not yet implemented."
	016 Move W3, 4
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Call DepthOrderedDirtyTracking.RegisterDirty, X0, X1, X2, X3
	020 Return 
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return 
	024 Call 0x1C17F20
	025 Move X0, 0x3CE000
	026 Move X0, [X0+1456]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Move X0, 0x43F000
	031 Move X0, [X0+2256]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Move X2, X31
	036 Call InvalidOperationException..ctor, X0, X1
	037 Move X0, 0x43F000
	038 Move X0, [X0+2264]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Call 0x1C17DEC

Method: System.Void UIEOnOpacityIdChanged(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D273A0 STR W9, [X31 + 0x18]
	0x03D273A4 STR W10, [X31 + 0x8]
	0x03D273A8 STR X8, [X31]
	0x03D273AC BL 0x3D1F5B4
	0x03D273B0 ADD X31, X31, 0x30
	0x03D273B4 SUB X31, X29, 0x10
	0x03D273B8 LDP X20, X19, [X31 + 0x60]
	0x03D273BC LDP X22, X21, [X31 + 0x50]
	0x03D273C0 LDP X24, X23, [X31 + 0x40]
	0x03D273C4 LDP X26, X25, [X31 + 0x30]
	0x03D273C8 LDP X28, X27, [X31 + 0x20]
	0x03D273CC LDP X29, X30, [X31 + 0x10]
	0x03D273D0 LDP D9, D8, [X31], #0x70
	0x03D273D4 RET
	0x03D273D8 BL 0x1C16F20
	0x03D273DC STP X30, X21, [X31 - 0x20]!
	0x03D273E0 STP X20, X19, [X31 + 0x10]
	0x03D273E4 ADRP X20, 0x6C0000
	0x03D273E8 LDRB W8, [X20 + 0xAA8]
	0x03D273EC MOV X19, X0
	0x03D273F0 TBNZ X8, 0x0, 0x3D27408
	0x03D273F4 ADRP X0, 0x43D000
	0x03D273F8 LDR X0, [X0 + 0x658]
	0x03D273FC BL 0x1C16CF4
	0x03D27400 MOVZ W8, 0x1
	0x03D27404 STRB W8, [X20 + 0xAA8]
	0x03D27408 ADRP X8, 0x43D000
	0x03D2740C LDR X9, [X19 + 0x10]
	0x03D27410 LDR X8, [X8 + 0x658]
	0x03D27414 CBZ X9, 0x3D27420
	0x03D27418 LDR X21, [X9 + 0x18]
	0x03D2741C B 0x3D27424

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {21}
	005 Move W8, [X1+232]
	006 Compare W8, 0
	007 JumpIfEqual {18}
	008 Move W8, [X0+120]
	009 Compare W8, 0
	010 JumpIfNotEqual {22}
	011 Add X0, X0, 24
	012 Move W2, 64
	013 Move W3, 4
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call DepthOrderedDirtyTracking.RegisterDirty, X0, X1, X2, X3
	017 Return 
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return 
	021 Call 0x1C17F20
	022 Move X0, 0x3CD000
	023 Move X0, [X0+1456]
	024 Call 0x1C17D08
	025 Call 0x1C17F10
	026 Move X19, X0
	027 Move X0, 0x43E000
	028 Move X0, [X0+2352]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Move X2, X31
	033 Call InvalidOperationException..ctor, X0, X1
	034 Move X0, 0x43E000
	035 Move X0, [X0+2360]
	036 Call 0x1C17D08
	037 Move X1, X0
	038 Move X0, X19
	039 Call 0x1C17DEC

Method: UnityEngine.UIElements.BaseVisualElementPanel get_panel()

Disassembly:
	0x03D27420 MOV X21, X31
	0x03D27424 LDR X0, [X8]

ISIL:
	001 Move X0, [X0+264]
	002 Return X0

Method: System.Void set_panel(UnityEngine.UIElements.BaseVisualElementPanel value)

Disassembly:
	0x03D27428 LDR W8, [X0 + 0xE0]
	0x03D2742C CBZ W8, 0x3D27438

ISIL:
	001 Move [X0+264], X1
	002 Return 

Method: UnityEngine.UIElements.UIR.UIRenderDevice get_device()

Disassembly:
	0x03D27430 CBNZ X21, 0x3D27440
	0x03D27434 B 0x3D27488

ISIL:
	001 Move X0, [X0+272]
	002 Return X0

Method: System.Void set_device(UnityEngine.UIElements.UIR.UIRenderDevice value)

Disassembly:
	0x03D27438 BL 0x1C16DFC
	0x03D2743C CBZ X21, 0x3D27488

ISIL:
	001 Move [X0+272], X1
	002 Return 

Method: UnityEngine.UIElements.AtlasBase get_atlas()

Disassembly:
	0x03D27440 MOV X8, X31
	0x03D27444 MOV X20, X21

ISIL:
	001 Move X0, [X0+280]
	002 Return X0

Method: System.Void set_atlas(UnityEngine.UIElements.AtlasBase value)

Disassembly:
	0x03D27448 LDR X21, [X21 + 0x88]
	0x03D2744C CMP X21, 0x0

ISIL:
	001 Move [X0+280], X1
	002 Return 

Method: UnityEngine.UIElements.UIR.VectorImageManager get_vectorImageManager()

Disassembly:
	0x03D27450 CSEL X8, X8, X21, EQ
	0x03D27454 CBZ X21, 0x3D27468

ISIL:
	001 Move X0, [X0+288]
	002 Return X0

Method: System.Void set_vectorImageManager(UnityEngine.UIElements.UIR.VectorImageManager value)

Disassembly:
	0x03D27458 CBZ X8, 0x3D274B8
	0x03D2745C LDRB W9, [X8 + 0xE8]

ISIL:
	001 Move [X0+288], X1
	002 Return 

Method: UnityEngine.UIElements.UIR.TempAllocator`1<UnityEngine.UIElements.Vertex> get_vertsPool()

Disassembly:
	0x03D27460 MOV X8, X21
	0x03D27464 CBNZ W9, 0x3D27444

ISIL:
	001 Move X0, [X0+296]
	002 Return X0

Method: System.Void set_vertsPool(UnityEngine.UIElements.UIR.TempAllocator`1<UnityEngine.UIElements.Vertex> value)

Disassembly:
	0x03D27468 LDR X8, [X20 + 0x1C8]
	0x03D2746C CBZ X8, 0x3D27480

ISIL:
	001 Move [X0+296], X1
	002 Return 

Method: UnityEngine.UIElements.UIR.TempAllocator`1<System.UInt16> get_indicesPool()

Disassembly:
	0x03D27470 MOV X0, X19
	0x03D27474 MOV X1, X20

ISIL:
	001 Move X0, [X0+304]
	002 Return X0

Method: System.Void set_indicesPool(UnityEngine.UIElements.UIR.TempAllocator`1<System.UInt16> value)

Disassembly:
	0x03D27478 MOV W2, W31
	0x03D2747C BL 0x3D25CC0

ISIL:
	001 Move [X0+304], X1
	002 Return 

Method: UnityEngine.UIElements.UIR.JobManager get_jobManager()

Disassembly:
	0x03D27480 LDR X20, [X20 + 0x90]
	0x03D27484 CBNZ X20, 0x3D27468

ISIL:
	001 Move X0, [X0+312]
	002 Return X0

Method: System.Void set_jobManager(UnityEngine.UIElements.UIR.JobManager value)

Disassembly:
	0x03D27488 LDR X0, [X19 + 0x108]
	0x03D2748C CBZ X0, 0x3D274B8

ISIL:
	001 Move [X0+312], X1
	002 Return 

Method: UnityEngine.UIElements.UIR.Implementation.UIRStylePainter get_painter()

Disassembly:
	0x03D27490 LDR X8, [X0]
	0x03D27494 LDR X9, [X8 + 0x398]

ISIL:
	001 Move X0, [X0+528]
	002 Return X0

Method: System.Void set_painter(UnityEngine.UIElements.UIR.Implementation.UIRStylePainter value)

Disassembly:
	0x03D27498 LDR X1, [X8 + 0x3A0]
	0x03D2749C BLR X9

ISIL:
	001 Move [X0+528], X1
	002 Return 

Method: System.Boolean get_drawStats()

Disassembly:
	0x03D274A0 MOV X1, X0
	0x03D274A4 MOV X0, X19

ISIL:
	001 Move W0, [X0+536]
	002 Return X0

Method: System.Void set_drawStats(System.Boolean value)

Disassembly:
	0x03D274A8 LDP X20, X19, [X31 + 0x10]
	0x03D274AC MOV W2, W31
	0x03D274B0 LDP X30, X21, [X31], #0x20

ISIL:
	001 And W8, W1, 1
	002 Move [X0+536], W8
	003 Return 

Method: System.Boolean get_drawInCameras()

Disassembly:
	0x03D274B4 B 0x3D25C34
	0x03D274B8 BL 0x1C16F20

ISIL:
	001 Move W0, [X0+537]
	002 Return X0

Method: System.Void set_drawInCameras(System.Boolean value)

Disassembly:
	0x03D274BC STR X30, [X31 - 0x40]!
	0x03D274C0 STP X24, X23, [X31 + 0x10]
	0x03D274C4 STP X22, X21, [X31 + 0x20]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+537], W8
	003 Return 

Method: System.Void set_defaultShader(UnityEngine.Shader value)

Disassembly:
	0x03D274C8 STP X20, X19, [X31 + 0x30]
	0x03D274CC ADRP X24, 0x6C0000
	0x03D274D0 LDRB W8, [X24 + 0xAA9]
	0x03D274D4 MOV W22, W4
	0x03D274D8 MOV X20, X3
	0x03D274DC MOV X21, X2
	0x03D274E0 MOV X19, X1
	0x03D274E4 MOV X23, X0
	0x03D274E8 TBNZ X8, 0x0, 0x3D2750C
	0x03D274EC ADRP X0, 0x43D000
	0x03D274F0 LDR X0, [X0 + 0x970]
	0x03D274F4 BL 0x1C16CF4
	0x03D274F8 ADRP X0, 0x43D000
	0x03D274FC LDR X0, [X0 + 0x978]
	0x03D27500 BL 0x1C16CF4
	0x03D27504 MOVZ W8, 0x1
	0x03D27508 STRB W8, [X24 + 0xAA9]
	0x03D2750C LDR X0, [X23 + 0x48]
	0x03D27510 CBZ X0, 0x3D27560
	0x03D27514 ADRP X8, 0x43D000
	0x03D27518 LDR X8, [X8 + 0x978]
	0x03D2751C LDR X1, [X8]
	0x03D27520 BL 0x2EF0E28
	0x03D27524 CBZ X0, 0x3D27560
	0x03D27528 AND W8, W22, 0x1
	0x03D2752C STR X21, [X0 + 0x20]
	0x03D27530 STR W20, [X0 + 0x28]
	0x03D27534 STRB W8, [X0 + 0x2C]
	0x03D27538 CBZ X19, 0x3D27560
	0x03D2753C ADRP X8, 0x43D000
	0x03D27540 LDR X8, [X8 + 0x970]
	0x03D27544 ADD X1, X19, 0x1C8
	0x03D27548 LDP X20, X19, [X31 + 0x30]
	0x03D2754C LDP X22, X21, [X31 + 0x20]
	0x03D27550 LDR X2, [X8]
	0x03D27554 LDP X24, X23, [X31 + 0x10]
	0x03D27558 LDR X30, [X31], #0x40
	0x03D2755C B 0x28CAAAC
	0x03D27560 BL 0x1C16F20
	0x03D27564 STP X30, X21, [X31 - 0x20]!
	0x03D27568 STP X20, X19, [X31 + 0x10]
	0x03D2756C ADRP X20, 0x6C0000
	0x03D27570 ADRP X21, 0x43D000
	0x03D27574 LDRB W8, [X20 + 0xAB6]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6C1000
	007 Move X21, 0x3CD000
	008 Move W8, [X22+2716]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x3CD000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x3F7000
	020 Move X0, [X0+576]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2716], W8
	024 Move X0, [X21]
	025 Move X21, [X19+88]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X21
	031 Move X1, X20
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {51}
	038 Move X8, 0x3F7000
	039 Move X8, [X8+576]
	040 Move [X19+88], X20
	041 Move X20, [X19+104]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Call UIRUtility.Destroy, X0
	050 Move [X19+104], X31
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return 

Method: System.Void set_defaultWorldSpaceShader(UnityEngine.Shader value)

Disassembly:
	0x03D27578 LDR X21, [X21 + 0x730]
	0x03D2757C MOV X19, X0
	0x03D27580 TBNZ X8, 0x0, 0x3D275C8
	0x03D27584 ADRP X0, 0x43D000
	0x03D27588 LDR X0, [X0 + 0x980]
	0x03D2758C BL 0x1C16CF4
	0x03D27590 ADRP X0, 0x43D000
	0x03D27594 LDR X0, [X0 + 0x988]
	0x03D27598 BL 0x1C16CF4
	0x03D2759C ADRP X0, 0x43D000
	0x03D275A0 LDR X0, [X0 + 0x990]
	0x03D275A4 BL 0x1C16CF4
	0x03D275A8 ADRP X0, 0x43D000
	0x03D275AC LDR X0, [X0 + 0x998]
	0x03D275B0 BL 0x1C16CF4
	0x03D275B4 ADRP X0, 0x43D000
	0x03D275B8 LDR X0, [X0 + 0x730]
	0x03D275BC BL 0x1C16CF4
	0x03D275C0 MOVZ W8, 0x1
	0x03D275C4 STRB W8, [X20 + 0xAB6]
	0x03D275C8 LDR X0, [X21]
	0x03D275CC LDR W8, [X0 + 0xE0]
	0x03D275D0 CBNZ W8, 0x3D275DC
	0x03D275D4 BL 0x1C16DFC
	0x03D275D8 LDR X0, [X21]
	0x03D275DC LDR X8, [X0 + 0xB8]
	0x03D275E0 LDR X0, [X8]
	0x03D275E4 CBZ X0, 0x3D276AC
	0x03D275E8 ADRP X8, 0x43D000
	0x03D275EC LDR X8, [X8 + 0x988]
	0x03D275F0 MOV X1, X31
	0x03D275F4 LDR X2, [X8]
	0x03D275F8 BL 0x301CD00
	0x03D275FC LDR X8, [X21]
	0x03D27600 MOV W20, W0
	0x03D27604 LDR W9, [X8 + 0xE0]
	0x03D27608 CBNZ W9, 0x3D27618
	0x03D2760C MOV X0, X8
	0x03D27610 BL 0x1C16DFC
	0x03D27614 LDR X8, [X21]
	0x03D27618 LDR X8, [X8 + 0xB8]
	0x03D2761C LDR X0, [X8]
	0x03D27620 CBZ X0, 0x3D276AC
	0x03D27624 TBNZ X20, 0x1F, 0x3D27644

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6C1000
	007 Move X21, 0x3CD000
	008 Move W8, [X22+2717]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x3CD000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x3F7000
	020 Move X0, [X0+576]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2717], W8
	024 Move X0, [X21]
	025 Move X21, [X19+96]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X21
	031 Move X1, X20
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {51}
	038 Move X8, 0x3F7000
	039 Move X8, [X8+576]
	040 Move [X19+96], X20
	041 Move X20, [X19+112]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Call UIRUtility.Destroy, X0
	050 Move [X19+112], X31
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return 

Method: UnityEngine.Material GetStandardMaterial()

Disassembly:
	0x03D25E74 MOV X1, X19
	0x03D25E78 BL 0x3D25BA8
	0x03D25E7C MOVZ W2, 0x1
	0x03D25E80 MOV X0, X20
	0x03D25E84 MOV X1, X19
	0x03D25E88 BL 0x3D25C34
	0x03D25E8C MOVZ W2, 0x1
	0x03D25E90 MOV X0, X20
	0x03D25E94 MOV X1, X19
	0x03D25E98 BL 0x3D25CC0
	0x03D25E9C LDP X20, X19, [X31 + 0x30]
	0x03D25EA0 LDP X22, X21, [X31 + 0x20]
	0x03D25EA4 LDP X24, X23, [X31 + 0x10]
	0x03D25EA8 LDR X30, [X31], #0x40
	0x03D25EAC RET
	0x03D25EB0 ADRP X0, 0x3CE000
	0x03D25EB4 LDR X0, [X0 + 0x5B0]
	0x03D25EB8 BL 0x1C16D08
	0x03D25EBC BL 0x1C16F10
	0x03D25EC0 MOV X19, X0
	0x03D25EC4 ADRP X0, 0x43F000
	0x03D25EC8 LDR X0, [X0 + 0x8E0]
	0x03D25ECC BL 0x1C16D08
	0x03D25ED0 MOV X1, X0
	0x03D25ED4 MOV X0, X19
	0x03D25ED8 MOV X2, X31
	0x03D25EDC BL 0x337DF1C
	0x03D25EE0 ADRP X0, 0x43F000
	0x03D25EE4 LDR X0, [X0 + 0x8E8]
	0x03D25EE8 BL 0x1C16D08
	0x03D25EEC MOV X1, X0
	0x03D25EF0 MOV X0, X19
	0x03D25EF4 BL 0x1C16DEC
	0x03D25EF8 BL 0x1C16F20
	0x03D25EFC STP X30, X21, [X31 - 0x20]!
	0x03D25F00 STP X20, X19, [X31 + 0x10]
	0x03D25F04 ADRP X21, 0x6C2000
	0x03D25F08 LDRB W8, [X21 + 0xA9B]
	0x03D25F0C MOV X19, X1
	0x03D25F10 MOV X20, X0
	0x03D25F14 TBNZ X8, 0x0, 0x3D25F38
	0x03D25F18 ADRP X0, 0x3CE000
	0x03D25F1C LDR X0, [X0 + 0xA28]
	0x03D25F20 BL 0x1C16CF4
	0x03D25F24 ADRP X0, 0x43F000
	0x03D25F28 LDR X0, [X0 + 0x778]
	0x03D25F2C BL 0x1C16CF4
	0x03D25F30 MOVZ W8, 0x1
	0x03D25F34 STRB W8, [X21 + 0xA9B]
	0x03D25F38 LDRB W8, [X20 + 0x78]
	0x03D25F3C CBNZ W8, 0x3D25FAC
	0x03D25F40 ADRP X8, 0x43F000
	0x03D25F44 LDR X8, [X8 + 0x778]
	0x03D25F48 LDR W21, [X20 + 0xEC]
	0x03D25F4C LDR X0, [X8]
	0x03D25F50 LDR W8, [X0 + 0xE0]
	0x03D25F54 CBNZ W8, 0x3D25F5C
	0x03D25F58 BL 0x1C16DFC
	0x03D25F5C MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6C3000
	006 Move X21, 0x3CF000
	007 Move W8, [X20+2718]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x3D3000
	015 Move X0, [X0+3232]
	016 Call 0x1C17CF4
	017 Move X0, 0x3CF000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2718], W8
	022 Move X0, [X21]
	023 Move X20, [X19+104]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {69}
	036 Move X0, [X21]
	037 Move X20, [X19+88]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {69}
	050 Move X8, 0x3D3000
	051 Move X21, [X19+88]
	052 Move X8, [X8+3232]
	053 Move X0, [X8]
	054 Call 0x1C17F10
	055 Move X1, X21
	056 Move X2, X31
	057 Move X20, X0
	058 Call Material..ctor, X0, X1
	059 Move [X19+104], X20
	060 Compare X20, 0
	061 JumpIfEqual {75}
	062 Move X0, X20
	063 Move X1, X31
	064 Call Object.get_hideFlags, X0
	065 Or W1, W0, 4
	066 Move X0, X20
	067 Move X2, X31
	068 Call Object.set_hideFlags, X0, X1
	069 Move X0, [X19+104]
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Return X0
	075 Call 0x1C17F20

Method: UnityEngine.Material GetStandardWorldSpaceMaterial()

Disassembly:
	0x03D27628 ADRP X8, 0x43D000
	0x03D2762C LDR X8, [X8 + 0x998]
	0x03D27630 MOV W1, W20
	0x03D27634 MOV X2, X19
	0x03D27638 LDR X3, [X8]
	0x03D2763C BL 0x301BD20
	0x03D27640 B 0x3D2769C
	0x03D27644 ADRP X9, 0x43D000
	0x03D27648 LDR X9, [X9 + 0x980]
	0x03D2764C LDP W20, W10, [X0 + 0x18]
	0x03D27650 LDR X8, [X0 + 0x10]
	0x03D27654 LDR X9, [X9]
	0x03D27658 ADD W10, W10, 0x1
	0x03D2765C STR W10, [X0 + 0x1C]
	0x03D27660 CBZ X8, 0x3D276AC
	0x03D27664 LDR W10, [X8 + 0x18]
	0x03D27668 CMP W20, W10
	0x03D2766C B.CS 0x3D27688
	0x03D27670 SXTW X9, W20
	0x03D27674 ADD W10, W20, 0x1
	0x03D27678 ADD X8, X8, X9, 0x3, LSL
	0x03D2767C STR W10, [X0 + 0x18]
	0x03D27680 STR X19, [X8 + 0x20]
	0x03D27684 B 0x3D2769C
	0x03D27688 LDR X8, [X9 + 0x20]
	0x03D2768C MOV X1, X19
	0x03D27690 LDR X8, [X8 + 0xC0]
	0x03D27694 LDR X2, [X8 + 0x70]
	0x03D27698 BL 0x301BF90
	0x03D2769C MOV W0, W20
	0x03D276A0 LDP X20, X19, [X31 + 0x10]
	0x03D276A4 LDP X30, X21, [X31], #0x20
	0x03D276A8 RET
	0x03D276AC BL 0x1C16F20
	0x03D276B0 STP X30, X21, [X31 - 0x20]!
	0x03D276B4 STP X20, X19, [X31 + 0x10]
	0x03D276B8 ADRP X21, 0x6C0000
	0x03D276BC ADRP X20, 0x43D000
	0x03D276C0 LDRB W8, [X21 + 0xAB7]
	0x03D276C4 LDR X20, [X20 + 0x730]
	0x03D276C8 MOV W19, W0
	0x03D276CC TBNZ X8, 0x0, 0x3D276F0
	0x03D276D0 ADRP X0, 0x43D000
	0x03D276D4 LDR X0, [X0 + 0x998]
	0x03D276D8 BL 0x1C16CF4
	0x03D276DC ADRP X0, 0x43D000
	0x03D276E0 LDR X0, [X0 + 0x730]
	0x03D276E4 BL 0x1C16CF4
	0x03D276E8 MOVZ W8, 0x1
	0x03D276EC STRB W8, [X21 + 0xAB7]
	0x03D276F0 LDR X0, [X20]
	0x03D276F4 LDR W8, [X0 + 0xE0]
	0x03D276F8 CBNZ W8, 0x3D27704
	0x03D276FC BL 0x1C16DFC
	0x03D27700 LDR X0, [X20]
	0x03D27704 LDR X8, [X0 + 0xB8]
	0x03D27708 LDR X0, [X8]
	0x03D2770C CBZ X0, 0x3D27730
	0x03D27710 ADRP X8, 0x43D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6C1000
	006 Move X21, 0x3CD000
	007 Move W8, [X20+2719]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x3D1000
	015 Move X0, [X0+3232]
	016 Call 0x1C17CF4
	017 Move X0, 0x3CD000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2719], W8
	022 Move X0, [X21]
	023 Move X20, [X19+112]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {69}
	036 Move X0, [X21]
	037 Move X20, [X19+96]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {69}
	050 Move X8, 0x3D1000
	051 Move X21, [X19+96]
	052 Move X8, [X8+3232]
	053 Move X0, [X8]
	054 Call 0x1C17F10
	055 Move X1, X21
	056 Move X2, X31
	057 Move X20, X0
	058 Call Material..ctor, X0, X1
	059 Move [X19+112], X20
	060 Compare X20, 0
	061 JumpIfEqual {75}
	062 Move X0, X20
	063 Move X1, X31
	064 Call Object.get_hideFlags, X0
	065 Or W1, W0, 4
	066 Move X0, X20
	067 Move X2, X31
	068 Call Object.set_hideFlags, X0, X1
	069 Move X0, [X19+112]
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Return X0
	075 Call 0x1C17F20

Method: System.Void EnsureFitsDepth(System.Int32 depth)

Disassembly:
	0x03D27714 LDR X8, [X8 + 0x998]
	0x03D27718 MOV W1, W19

ISIL:
	001 Add X0, X0, 24

Method: System.Void ChildWillBeRemoved(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D27830 LDR X8, [X8 + 0xB8]
	0x03D27834 STR X19, [X8]
	0x03D27838 LDP X20, X19, [X31 + 0x20]
	0x03D2783C LDR X30, [X31], #0x30
	0x03D27840 RET
	0x03D27844 STR X30, [X31 - 0x20]!
	0x03D27848 STP X20, X19, [X31 + 0x10]
	0x03D2784C ADRP X19, 0x6C0000
	0x03D27850 ADRP X20, 0x43D000
	0x03D27854 LDRB W8, [X19 + 0xABA]
	0x03D27858 LDR X20, [X20 + 0x6A0]
	0x03D2785C TBNZ X8, 0x0, 0x3D27874
	0x03D27860 ADRP X0, 0x43D000
	0x03D27864 LDR X0, [X0 + 0x6A0]
	0x03D27868 BL 0x1C16CF4
	0x03D2786C MOVZ W8, 0x1
	0x03D27870 STRB W8, [X19 + 0xABA]
	0x03D27874 LDR X0, [X20]
	0x03D27878 BL 0x1C16F10
	0x03D2787C MOV X1, X31
	0x03D27880 MOV X19, X0
	0x03D27884 BL 0x33BDD8C
	0x03D27888 LDR X8, [X20]
	0x03D2788C LDR X8, [X8 + 0xB8]
	0x03D27890 STR X19, [X8]
	0x03D27894 LDP X20, X19, [X31 + 0x10]
	0x03D27898 LDR X30, [X31], #0x20
	0x03D2789C RET
	0x03D278A0 MOV X1, X31
	0x03D278A4 B 0x33BDD8C
	0x03D278A8 STR X30, [X31 - 0x20]!
	0x03D278AC STP X20, X19, [X31 + 0x10]
	0x03D278B0 ADRP X19, 0x6C0000
	0x03D278B4 ADRP X20, 0x43D000
	0x03D278B8 LDRB W8, [X19 + 0xABB]
	0x03D278BC LDR X20, [X20 + 0x9B8]
	0x03D278C0 TBNZ X8, 0x0, 0x3D278D8
	0x03D278C4 ADRP X0, 0x43D000
	0x03D278C8 LDR X0, [X0 + 0x9B8]
	0x03D278CC BL 0x1C16CF4
	0x03D278D0 MOVZ W8, 0x1
	0x03D278D4 STRB W8, [X19 + 0xABB]
	0x03D278D8 LDR X0, [X20]
	0x03D278DC BL 0x1C16F10
	0x03D278E0 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6C1000
	006 Move W8, [X21+2720]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3CD000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2720], W8
	018 Compare X19, 0
	019 JumpIfEqual {55}
	020 Move X21, 0x3CD000
	021 Move W8, [X19+192]
	022 Move X21, [X21+2600]
	023 Compare W8, 0
	024 JumpIfEqual {30}
	025 Add X0, X20, 24
	026 NotImplemented "Instruction ORN not yet implemented."
	027 Move X1, X19
	028 Call DepthOrderedDirtyTracking.ClearDirty, X0, X1, X2
	029 Move W20, [X19+192]
	030 Move W20, W31
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Move X1, X31
	039 Call Debug.Assert, X0
	040 Move X8, [X19+168]
	041 Move X1, X31
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSET not yet implemented."
	044 Call Debug.Assert, X0
	045 Move X8, [X19+176]
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X1, X31
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSET not yet implemented."
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Call Debug.Assert, X0
	054 Return 
	055 Call 0x1C17F20

Method: UnityEngine.UIElements.UIR.RenderChainCommand AllocCommand()

Disassembly:
	0x03D278E4 BL 0x3D278F8
	0x03D278E8 MOV X0, X19
	0x03D278EC LDP X20, X19, [X31 + 0x10]
	0x03D278F0 LDR X30, [X31], #0x20
	0x03D278F4 RET
	0x03D278F8 STP X30, X21, [X31 - 0x20]!
	0x03D278FC STP X20, X19, [X31 + 0x10]
	0x03D27900 ADRP X20, 0x6C0000
	0x03D27904 ADRP X21, 0x43D000
	0x03D27908 LDRB W8, [X20 + 0xB43]
	0x03D2790C LDR X21, [X21 + 0x9C0]
	0x03D27910 MOV X19, X0
	0x03D27914 TBNZ X8, 0x0, 0x3D2792C
	0x03D27918 ADRP X0, 0x43D000
	0x03D2791C LDR X0, [X0 + 0x9C0]
	0x03D27920 BL 0x1C16CF4
	0x03D27924 MOVZ W8, 0x1
	0x03D27928 STRB W8, [X20 + 0xB43]
	0x03D2792C LDR X1, [X21]
	0x03D27930 MOV X0, X19
	0x03D27934 LDP X20, X19, [X31 + 0x10]
	0x03D27938 LDP X30, X21, [X31], #0x20
	0x03D2793C B 0x2EF0D48
	0x03D27940 RET
	0x03D27944 MOV X8, X0
	0x03D27948 LDR X0, [X0 + 0x58]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6C1000
	005 Move W8, [X20+2721]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x43E000
	012 Move X0, [X0+2368]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2721], W8
	016 Move X0, [X19+64]
	017 Compare X0, 0
	018 JumpIfEqual {33}
	019 Move X8, 0x43E000
	020 Move X8, [X8+2368]
	021 Move X1, [X8]
	022 Call 0x2EF1E28, X0
	023 Compare X0, 0
	024 JumpIfEqual {33}
	025 Move X1, X31
	026 Move X19, X0
	027 Call RenderChainCommand.Reset, X0
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0
	033 Call 0x1C17F20

Method: System.Void FreeCommand(UnityEngine.UIElements.UIR.RenderChainCommand cmd)

Disassembly:
	0x03D2794C CBZ X0, 0x3D27954
	0x03D27950 RET
	0x03D27954 LDR X0, [X8 + 0x48]
	0x03D27958 RET
	0x03D2795C STR X30, [X31 - 0x20]!
	0x03D27960 STP X20, X19, [X31 + 0x10]
	0x03D27964 ADRP X20, 0x6C0000
	0x03D27968 LDRB W8, [X20 + 0xABC]
	0x03D2796C MOV X19, X0
	0x03D27970 TBNZ X8, 0x0, 0x3D27988
	0x03D27974 ADRP X0, 0x43D000
	0x03D27978 LDR X0, [X0 + 0x9C8]
	0x03D2797C BL 0x1C16CF4
	0x03D27980 MOVZ W8, 0x1
	0x03D27984 STRB W8, [X20 + 0xABC]
	0x03D27988 UBFM X8, X19, 0x38, 0x3F
	0x03D2798C CMP X8, 0x1
	0x03D27990 B.NE 0x3D279B8
	0x03D27994 ADRP X8, 0x43D000
	0x03D27998 LDR X8, [X8 + 0x9C8]
	0x03D2799C LDR X0, [X8]
	0x03D279A0 LDR W8, [X0 + 0xE0]
	0x03D279A4 CBNZ W8, 0x3D279AC
	0x03D279A8 BL 0x1C16DFC
	0x03D279AC ORN W8, W31, W19, 0x0
	0x03D279B0 UBFM W0, W8, 0x1F, 0x1F
	0x03D279B4 B 0x3D279BC
	0x03D279B8 MOV W0, W31
	0x03D279BC LDP X20, X19, [X31 + 0x10]
	0x03D279C0 LDR X30, [X31], #0x20
	0x03D279C4 RET
	0x03D279C8 LDR W8, [X0]
	0x03D279CC ORN W8, W31, W8, 0x0
	0x03D279D0 UBFM W0, W8, 0x1F, 0x1F
	0x03D279D4 RET
	0x03D279D8 STR X30, [X31 - 0x20]!
	0x03D279DC STP X20, X19, [X31 + 0x10]
	0x03D279E0 ADRP X20, 0x6C0000
	0x03D279E4 LDRB W8, [X20 + 0xABD]
	0x03D279E8 MOV X19, X0
	0x03D279EC TBNZ X8, 0x0, 0x3D27A04
	0x03D279F0 ADRP X0, 0x43D000
	0x03D279F4 LDR X0, [X0 + 0x9C8]
	0x03D279F8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6C1000
	006 Move W8, [X21+2722]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x43E000
	014 Move X0, [X0+2376]
	015 Call 0x1C17CF4
	016 Move X0, 0x3CD000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2722], W8
	021 Compare X19, 0
	022 JumpIfEqual {58}
	023 Move X8, 0x3CD000
	024 Move X8, [X8+1432]
	025 Move X21, [X19+56]
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X21
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Inequality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {42}
	039 Move W8, [X20+132]
	040 Subtract W8, W8, 1
	041 Move [X20+132], W8
	042 Move X0, X19
	043 Move X1, X31
	044 Call RenderChainCommand.Reset, X0
	045 Move X0, [X20+64]
	046 Compare X0, 0
	047 JumpIfEqual {58}
	048 Move X8, 0x43E000
	049 Move X8, [X8+2376]
	050 Move X1, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X2, [X8]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Call 0x2EF1E90, X0, X1
	057 Return 
	058 Call 0x1C17F20

Method: System.Void OnRenderCommandAdded(UnityEngine.UIElements.UIR.RenderChainCommand command)

Disassembly:
	0x03D279FC MOVZ W8, 0x1
	0x03D27A00 STRB W8, [X20 + 0xABD]
	0x03D27A04 UBFM X8, X19, 0x38, 0x3F
	0x03D27A08 CBNZ X8, 0x3D27A30
	0x03D27A0C ADRP X8, 0x43D000
	0x03D27A10 LDR X8, [X8 + 0x9C8]
	0x03D27A14 LDR X0, [X8]
	0x03D27A18 LDR W8, [X0 + 0xE0]
	0x03D27A1C CBNZ W8, 0x3D27A24
	0x03D27A20 BL 0x1C16DFC
	0x03D27A24 ORN W8, W31, W19, 0x0
	0x03D27A28 UBFM W0, W8, 0x1F, 0x1F
	0x03D27A2C B 0x3D27A34
	0x03D27A30 MOV W0, W31
	0x03D27A34 LDP X20, X19, [X31 + 0x10]
	0x03D27A38 LDR X30, [X31], #0x20
	0x03D27A3C RET
	0x03D27A40 LDR W8, [X0 + 0x30]
	0x03D27A44 AND W0, W8, 0x1
	0x03D27A48 RET
	0x03D27A4C LDRB W0, [X0 + 0x10]
	0x03D27A50 RET
	0x03D27A54 AND W8, W1, 0x1
	0x03D27A58 STRB W8, [X0 + 0x10]
	0x03D27A5C RET
	0x03D27A60 STP X30, X21, [X31 - 0x20]!
	0x03D27A64 STP X20, X19, [X31 + 0x10]
	0x03D27A68 ADRP X21, 0x6C0000
	0x03D27A6C ADRP X20, 0x3D3000
	0x03D27A70 LDRB W8, [X21 + 0xABE]
	0x03D27A74 LDR X20, [X20 + 0xC10]
	0x03D27A78 MOV X19, X0
	0x03D27A7C TBNZ X8, 0x0, 0x3D27A94
	0x03D27A80 ADRP X0, 0x3D3000
	0x03D27A84 LDR X0, [X0 + 0xC10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6C1000
	006 Move W8, [X21+2723]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3CD000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2723], W8
	018 Compare X20, 0
	019 JumpIfEqual {48}
	020 Move X8, 0x3CD000
	021 Move X9, [X20+32]
	022 Move X8, [X8+1432]
	023 Compare X9, 0
	024 JumpIfNotEqual {26}
	025 Move [X19+16], X20
	026 Move X0, [X8]
	027 Move X20, [X20+56]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X20
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Inequality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {43}
	040 Move W8, [X19+132]
	041 Add W8, W8, 1
	042 Move [X19+132], W8
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return 
	048 Call 0x1C17F20

Method: System.Void OnRenderCommandsRemoved(UnityEngine.UIElements.UIR.RenderChainCommand firstCommand, UnityEngine.UIElements.UIR.RenderChainCommand lastCommand)

Disassembly:
	0x03D27A88 BL 0x1C16CF4
	0x03D27A8C MOVZ W8, 0x1
	0x03D27A90 STRB W8, [X21 + 0xABE]
	0x03D27A94 LDR X8, [X19]
	0x03D27A98 MOVZ W1, 0x1
	0x03D27A9C MOV X0, X19
	0x03D27AA0 LDP X9, X2, [X8 + 0x1C8]
	0x03D27AA4 BLR X9
	0x03D27AA8 LDR X0, [X20]
	0x03D27AAC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {13}
	004 Move X8, [X1+32]
	005 Compare X8, 0
	006 JumpIfNotEqual {11}
	007 Compare X2, 0
	008 JumpIfEqual {13}
	009 Move X8, [X2+40]
	010 Move [X0+16], X8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: UnityEngine.UIElements.UIR.RenderChain/RenderNodeData AccessRenderNodeData(System.IntPtr obj)

Disassembly:
	0x03D27AB0 CBNZ W8, 0x3D27AB8
	0x03D27AB4 BL 0x1C16DFC
	0x03D27AB8 MOV X0, X19
	0x03D27ABC LDP X20, X19, [X31 + 0x10]
	0x03D27AC0 MOV X1, X31
	0x03D27AC4 LDP X30, X21, [X31], #0x20
	0x03D27AC8 B 0x33B3E9C
	0x03D27ACC LDRB W8, [X0 + 0x10]
	0x03D27AD0 CBZ W8, 0x3D27AD8
	0x03D27AD4 RET
	0x03D27AD8 MOVZ W8, 0x1
	0x03D27ADC STRB W8, [X0 + 0x10]
	0x03D27AE0 RET
	0x03D27AE4 MOV X1, X31
	0x03D27AE8 B 0x33BDD8C
	0x03D27AEC STP X30, X23, [X31 - 0x30]!
	0x03D27AF0 STP X22, X21, [X31 + 0x10]
	0x03D27AF4 STP X20, X19, [X31 + 0x20]
	0x03D27AF8 ADRP X22, 0x6C0000
	0x03D27AFC ADRP X23, 0x43D000
	0x03D27B00 ADRP X19, 0x3F6000
	0x03D27B04 ADRP X21, 0x43D000
	0x03D27B08 ADRP X20, 0x43D000
	0x03D27B0C LDRB W8, [X22 + 0xABF]
	0x03D27B10 LDR X23, [X23 + 0x9D0]
	0x03D27B14 LDR X19, [X19 + 0x238]
	0x03D27B18 LDR X21, [X21 + 0x9D8]
	0x03D27B1C LDR X20, [X20 + 0x9E0]
	0x03D27B20 TBNZ X8, 0x0, 0x3D27B5C
	0x03D27B24 ADRP X0, 0x3F6000
	0x03D27B28 LDR X0, [X0 + 0x238]
	0x03D27B2C BL 0x1C16CF4
	0x03D27B30 ADRP X0, 0x43D000
	0x03D27B34 LDR X0, [X0 + 0x9D8]
	0x03D27B38 BL 0x1C16CF4
	0x03D27B3C ADRP X0, 0x43D000
	0x03D27B40 LDR X0, [X0 + 0x9E0]
	0x03D27B44 BL 0x1C16CF4
	0x03D27B48 ADRP X0, 0x43D000
	0x03D27B4C LDR X0, [X0 + 0x9D0]
	0x03D27B50 BL 0x1C16CF4
	0x03D27B54 MOVZ W8, 0x1
	0x03D27B58 STRB W8, [X22 + 0xABF]
	0x03D27B5C LDR X0, [X23]
	0x03D27B60 MOVZ W1, 0x1
	0x03D27B64 MOV W2, W31
	0x03D27B68 MOV W3, W31
	0x03D27B6C MOV X4, X31
	0x03D27B70 BL 0x3BFE7FC
	0x03D27B74 LDR X8, [X19]
	0x03D27B78 MOVZ W1, 0x1
	0x03D27B7C MOV W2, W31
	0x03D27B80 MOV W3, W31
	0x03D27B84 LDR X8, [X8 + 0xB8]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+192], X30
	003 Move [X31+208], X22
	004 Move [X31+216], X21
	005 Move [X31+224], X20
	006 Move [X31+232], X19
	007 Move X22, 0x6C1000
	008 Move X21, 0x43E000
	009 Move X19, X8
	010 Move W8, [X22+2724]
	011 Move X21, [X21+1840]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x43E000
	018 Move X0, [X0+1944]
	019 Call 0x1C17CF4
	020 Move X0, 0x43E000
	021 Move X0, [X0+1840]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2724], W8
	025 Move X0, [X21]
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+160], V0
	028 Move [X31+168], V0
	029 Move [X31+128], V0
	030 Move [X31+136], V0
	031 Move [X31+96], V0
	032 Move [X31+104], V0
	033 Move W8, [X0+224]
	034 Move W21, [X20]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move W0, W21
	039 Move X1, X31
	040 Call RenderChainStaticIndexAllocator.AccessIndex, X0
	041 Compare X0, 0
	042 JumpIfEqual {67}
	043 Move X0, [X0+80]
	044 Compare X0, 0
	045 JumpIfEqual {67}
	046 Move X8, 0x43E000
	047 Move X8, [X8+1944]
	048 Move W1, [X20+4]
	049 Move X2, [X8]
	050 Add X8, X31, 0
	051 Call List`1<RenderNodeData>.get_Item, X0, X1
	052 Add X0, X31, 96
	053 Add X1, X31, 0
	054 Move W2, 96
	055 Call 0x3EB2AC0
	056 Add X1, X31, 96
	057 Move W2, 96
	058 Move X0, X19
	059 Call 0x3EB2AC0
	060 Move X20, [X31+224]
	061 Move X19, [X31+232]
	062 Move X22, [X31+208]
	063 Move X21, [X31+216]
	064 Move X30, [X31+192]
	065 Add X31, X31, 240
	066 Return X0
	067 Call 0x1C17F20

Method: System.Void OnRenderNodeExecute(System.IntPtr obj)

Disassembly:
	0x03D27B88 MOV X4, X31
	0x03D27B8C STR X0, [X8 + 0x8]
	0x03D27B90 LDR X0, [X21]
	0x03D27B94 BL 0x3BFE7FC
	0x03D27B98 LDR X8, [X19]
	0x03D27B9C MOVZ W1, 0x1
	0x03D27BA0 MOV W2, W31
	0x03D27BA4 MOV W3, W31
	0x03D27BA8 LDR X8, [X8 + 0xB8]
	0x03D27BAC MOV X4, X31
	0x03D27BB0 STR X0, [X8 + 0x10]
	0x03D27BB4 LDR X0, [X20]
	0x03D27BB8 BL 0x3BFE7FC
	0x03D27BBC LDR X8, [X19]
	0x03D27BC0 LDP X20, X19, [X31 + 0x20]
	0x03D27BC4 LDP X22, X21, [X31 + 0x10]
	0x03D27BC8 LDR X8, [X8 + 0xB8]
	0x03D27BCC STR X0, [X8 + 0x18]
	0x03D27BD0 LDP X30, X23, [X31], #0x30
	0x03D27BD4 RET
	0x03D27BD8 STP X30, X23, [X31 - 0x30]!
	0x03D27BDC STP X22, X21, [X31 + 0x10]
	0x03D27BE0 STP X20, X19, [X31 + 0x20]
	0x03D27BE4 ADRP X23, 0x6C0000
	0x03D27BE8 ADRP X22, 0x43D000
	0x03D27BEC LDRB W8, [X23 + 0xAC0]
	0x03D27BF0 LDR X22, [X22 + 0x9E8]
	0x03D27BF4 MOV W19, W2
	0x03D27BF8 MOV W20, W1
	0x03D27BFC MOV X21, X0
	0x03D27C00 TBNZ X8, 0x0, 0x3D27C24
	0x03D27C04 ADRP X0, 0x43D000
	0x03D27C08 LDR X0, [X0 + 0x9E8]
	0x03D27C0C BL 0x1C16CF4
	0x03D27C10 ADRP X0, 0x43D000
	0x03D27C14 LDR X0, [X0 + 0x9F0]
	0x03D27C18 BL 0x1C16CF4
	0x03D27C1C MOVZ W8, 0x1
	0x03D27C20 STRB W8, [X23 + 0xAC0]
	0x03D27C24 LDR X0, [X22]
	0x03D27C28 ADRP X23, 0x43D000
	0x03D27C2C LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+160], X30
	003 Move [X31+168], X21
	004 Move [X31+176], X20
	005 Move [X31+184], X19
	006 Move X21, 0x6C1000
	007 Move X20, 0x43E000
	008 Move W8, [X21+2725]
	009 Move X20, [X20+1624]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x43E000
	016 Move X0, [X0+1624]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2725], W8
	020 Move X0, [X20]
	021 Move [X31+152], X31
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X8, X31, 56
	027 Move X0, X19
	028 Call RenderChain.AccessRenderNodeData, X0
	029 Move X3, [X31+56]
	030 Move X2, [X31+64]
	031 Move X8, [X31+72]
	032 Move X1, [X31+80]
	033 Move X0, [X31+88]
	034 Move X4, [X31+96]
	035 Move X5, [X31+104]
	036 Move V0, [X31+112]
	037 Move X6, [X31+120]
	038 Move X7, [X31+128]
	039 Move X9, [X31+136]
	040 Move X10, [X31+144]
	041 Move [X31+152], X31
	042 Compare X0, 0
	043 JumpIfEqual {58}
	044 Add X11, X31, 152
	045 Move [X31+24], W31
	046 Move [X31+8], X10
	047 Move [X31+16], X8
	048 Move [X31+32], X11
	049 Move [X31+40], X31
	050 Move [X31], X9
	051 Call UIRenderDevice.EvaluateChain, X0, X1, X2, X3, X4, X5, V0, X6, X7, X8, X9, X10
	052 Move X20, [X31+176]
	053 Move X19, [X31+184]
	054 Move X30, [X31+160]
	055 Move X21, [X31+168]
	056 Add X31, X31, 192
	057 Return 
	058 Call 0x1C17F20

Method: System.Void OnRegisterIntermediateRenderers(UnityEngine.Camera camera)

Disassembly:
	0x03D27C30 LDR X23, [X23 + 0x9F0]
	0x03D27C34 CBNZ W8, 0x3D27C40
	0x03D27C38 BL 0x1C16DFC
	0x03D27C3C LDR X0, [X22]
	0x03D27C40 LDR X8, [X0 + 0xB8]
	0x03D27C44 LDR X5, [X23]
	0x03D27C48 MOV X0, X21
	0x03D27C4C MOV W3, W20
	0x03D27C50 LDR X2, [X8]
	0x03D27C54 MOV W4, W19
	0x03D27C58 LDP X20, X19, [X31 + 0x20]
	0x03D27C5C LDP X22, X21, [X31 + 0x10]
	0x03D27C60 MOVZ W1, 0x4
	0x03D27C64 LDP X30, X23, [X31], #0x30
	0x03D27C68 B 0x25E47D0
	0x03D27C6C STR X30, [X31 - 0x30]!
	0x03D27C70 STP X22, X21, [X31 + 0x10]
	0x03D27C74 STP X20, X19, [X31 + 0x20]
	0x03D27C78 ADRP X20, 0x6C0000
	0x03D27C7C ADRP X19, 0x43D000
	0x03D27C80 LDRB W8, [X20 + 0xAC1]
	0x03D27C84 LDR X19, [X19 + 0x9F8]
	0x03D27C88 TBNZ X8, 0x0, 0x3D27CC4
	0x03D27C8C ADRP X0, 0x43D000
	0x03D27C90 LDR X0, [X0 + 0xA00]
	0x03D27C94 BL 0x1C16CF4
	0x03D27C98 ADRP X0, 0x43D000
	0x03D27C9C LDR X0, [X0 + 0x9E8]
	0x03D27CA0 BL 0x1C16CF4
	0x03D27CA4 ADRP X0, 0x43D000
	0x03D27CA8 LDR X0, [X0 + 0xA08]
	0x03D27CAC BL 0x1C16CF4
	0x03D27CB0 ADRP X0, 0x43D000
	0x03D27CB4 LDR X0, [X0 + 0x9F8]
	0x03D27CB8 BL 0x1C16CF4
	0x03D27CBC MOVZ W8, 0x1
	0x03D27CC0 STRB W8, [X20 + 0xAC1]
	0x03D27CC4 LDR X0, [X19]
	0x03D27CC8 ADRP X22, 0x43D000
	0x03D27CCC ADRP X20, 0x43D000
	0x03D27CD0 ADRP X21, 0x43D000
	0x03D27CD4 LDR W8, [X0 + 0xE0]
	0x03D27CD8 LDR X22, [X22 + 0xA00]
	0x03D27CDC LDR X20, [X20 + 0xA08]
	0x03D27CE0 LDR X21, [X21 + 0x9E8]
	0x03D27CE4 CBNZ W8, 0x3D27CF0
	0x03D27CE8 BL 0x1C16DFC
	0x03D27CEC LDR X0, [X19]
	0x03D27CF0 LDR X8, [X0 + 0xB8]
	0x03D27CF4 LDR X0, [X22]
	0x03D27CF8 LDR X19, [X8]
	0x03D27CFC BL 0x1C16F10
	0x03D27D00 LDR X2, [X20]
	0x03D27D04 MOV X1, X19
	0x03D27D08 MOV X3, X31
	0x03D27D0C MOV X20, X0
	0x03D27D10 BL 0x2D2BD14
	0x03D27D14 LDR X8, [X21]
	0x03D27D18 LDP X22, X21, [X31 + 0x10]
	0x03D27D1C LDR X8, [X8 + 0xB8]
	0x03D27D20 STR X20, [X8]
	0x03D27D24 LDP X20, X19, [X31 + 0x20]
	0x03D27D28 LDR X30, [X31], #0x30
	0x03D27D2C RET
	0x03D27D30 STR X30, [X31 - 0x20]!
	0x03D27D34 STP X20, X19, [X31 + 0x10]
	0x03D27D38 ADRP X19, 0x6C0000
	0x03D27D3C ADRP X20, 0x43D000
	0x03D27D40 LDRB W8, [X19 + 0xAC2]
	0x03D27D44 LDR X20, [X20 + 0x9F8]
	0x03D27D48 TBNZ X8, 0x0, 0x3D27D60
	0x03D27D4C ADRP X0, 0x43D000
	0x03D27D50 LDR X0, [X0 + 0x9F8]
	0x03D27D54 BL 0x1C16CF4
	0x03D27D58 MOVZ W8, 0x1
	0x03D27D5C STRB W8, [X19 + 0xAC2]
	0x03D27D60 LDR X0, [X20]
	0x03D27D64 BL 0x1C16F10
	0x03D27D68 MOV X1, X31
	0x03D27D6C MOV X19, X0
	0x03D27D70 BL 0x33BDD8C
	0x03D27D74 LDR X8, [X20]
	0x03D27D78 LDR X8, [X8 + 0xB8]
	0x03D27D7C STR X19, [X8]
	0x03D27D80 LDP X20, X19, [X31 + 0x10]
	0x03D27D84 LDR X30, [X31], #0x20
	0x03D27D88 RET
	0x03D27D8C MOV X1, X31
	0x03D27D90 B 0x33BDD8C
	0x03D27D94 STR X30, [X31 - 0x10]!
	0x03D27D98 MOV X0, X31
	0x03D27D9C BL 0x1E43664
	0x03D27DA0 AND X0, X0, 0x0
	0x03D27DA4 LDR X30, [X31], #0x10
	0x03D27DA8 RET
	0x03D27DAC STP X30, X23, [X31 - 0x30]!
	0x03D27DB0 STP X22, X21, [X31 + 0x10]
	0x03D27DB4 STP X20, X19, [X31 + 0x20]
	0x03D27DB8 ADRP X23, 0x6C0000
	0x03D27DBC ADRP X22, 0x43D000
	0x03D27DC0 LDRB W8, [X23 + 0xAC3]
	0x03D27DC4 LDR X22, [X22 + 0xA10]
	0x03D27DC8 MOV W19, W2
	0x03D27DCC MOV W20, W1
	0x03D27DD0 MOV X21, X0
	0x03D27DD4 TBNZ X8, 0x0, 0x3D27DF8
	0x03D27DD8 ADRP X0, 0x43D000
	0x03D27DDC LDR X0, [X0 + 0xA10]
	0x03D27DE0 BL 0x1C16CF4
	0x03D27DE4 ADRP X0, 0x43D000
	0x03D27DE8 LDR X0, [X0 + 0xA18]
	0x03D27DEC BL 0x1C16CF4
	0x03D27DF0 MOVZ W8, 0x1
	0x03D27DF4 STRB W8, [X23 + 0xAC3]
	0x03D27DF8 LDR X0, [X22]
	0x03D27DFC ADRP X23, 0x43D000
	0x03D27E00 LDR W8, [X0 + 0xE0]
	0x03D27E04 LDR X23, [X23 + 0xA18]
	0x03D27E08 CBNZ W8, 0x3D27E14
	0x03D27E0C BL 0x1C16DFC
	0x03D27E10 LDR X0, [X22]
	0x03D27E14 LDR X8, [X0 + 0xB8]
	0x03D27E18 LDR X5, [X23]
	0x03D27E1C MOV X0, X21
	0x03D27E20 MOV W3, W20
	0x03D27E24 LDR X2, [X8]
	0x03D27E28 MOV W4, W19
	0x03D27E2C LDP X20, X19, [X31 + 0x20]
	0x03D27E30 LDP X22, X21, [X31 + 0x10]
	0x03D27E34 MOVZ W1, 0x14
	0x03D27E38 LDP X30, X23, [X31], #0x30
	0x03D27E3C B 0x25E3F88
	0x03D27E40 STR X30, [X31 - 0x30]!
	0x03D27E44 STP X22, X21, [X31 + 0x10]
	0x03D27E48 STP X20, X19, [X31 + 0x20]
	0x03D27E4C ADRP X20, 0x6C0000
	0x03D27E50 ADRP X19, 0x43D000
	0x03D27E54 LDRB W8, [X20 + 0xAC4]
	0x03D27E58 LDR X19, [X19 + 0xA20]
	0x03D27E5C TBNZ X8, 0x0, 0x3D27E98
	0x03D27E60 ADRP X0, 0x43D000
	0x03D27E64 LDR X0, [X0 + 0xA28]
	0x03D27E68 BL 0x1C16CF4
	0x03D27E6C ADRP X0, 0x43D000
	0x03D27E70 LDR X0, [X0 + 0xA10]
	0x03D27E74 BL 0x1C16CF4
	0x03D27E78 ADRP X0, 0x43D000
	0x03D27E7C LDR X0, [X0 + 0xA30]
	0x03D27E80 BL 0x1C16CF4
	0x03D27E84 ADRP X0, 0x43D000
	0x03D27E88 LDR X0, [X0 + 0xA20]
	0x03D27E8C BL 0x1C16CF4
	0x03D27E90 MOVZ W8, 0x1
	0x03D27E94 STRB W8, [X20 + 0xAC4]
	0x03D27E98 LDR X0, [X19]
	0x03D27E9C ADRP X22, 0x43D000
	0x03D27EA0 ADRP X20, 0x43D000
	0x03D27EA4 ADRP X21, 0x43D000
	0x03D27EA8 LDR W8, [X0 + 0xE0]
	0x03D27EAC LDR X22, [X22 + 0xA28]
	0x03D27EB0 LDR X20, [X20 + 0xA30]
	0x03D27EB4 LDR X21, [X21 + 0xA10]
	0x03D27EB8 CBNZ W8, 0x3D27EC4
	0x03D27EBC BL 0x1C16DFC
	0x03D27EC0 LDR X0, [X19]
	0x03D27EC4 LDR X8, [X0 + 0xB8]
	0x03D27EC8 LDR X0, [X22]
	0x03D27ECC LDR X19, [X8]
	0x03D27ED0 BL 0x1C16F10
	0x03D27ED4 LDR X2, [X20]
	0x03D27ED8 MOV X1, X19
	0x03D27EDC MOV X3, X31
	0x03D27EE0 MOV X20, X0
	0x03D27EE4 BL 0x2D2BC74
	0x03D27EE8 LDR X8, [X21]
	0x03D27EEC LDP X22, X21, [X31 + 0x10]
	0x03D27EF0 LDR X8, [X8 + 0xB8]
	0x03D27EF4 STR X20, [X8]
	0x03D27EF8 LDP X20, X19, [X31 + 0x20]
	0x03D27EFC LDR X30, [X31], #0x30
	0x03D27F00 RET
	0x03D27F04 STR X30, [X31 - 0x20]!
	0x03D27F08 STP X20, X19, [X31 + 0x10]
	0x03D27F0C ADRP X19, 0x6C0000
	0x03D27F10 ADRP X20, 0x43D000
	0x03D27F14 LDRB W8, [X19 + 0xAC5]
	0x03D27F18 LDR X20, [X20 + 0xA20]
	0x03D27F1C TBNZ X8, 0x0, 0x3D27F34
	0x03D27F20 ADRP X0, 0x43D000
	0x03D27F24 LDR X0, [X0 + 0xA20]
	0x03D27F28 BL 0x1C16CF4
	0x03D27F2C MOVZ W8, 0x1
	0x03D27F30 STRB W8, [X19 + 0xAC5]
	0x03D27F34 LDR X0, [X20]
	0x03D27F38 BL 0x1C16F10
	0x03D27F3C MOV X1, X31
	0x03D27F40 MOV X19, X0
	0x03D27F44 BL 0x33BDD8C
	0x03D27F48 LDR X8, [X20]
	0x03D27F4C LDR X8, [X8 + 0xB8]
	0x03D27F50 STR X19, [X8]
	0x03D27F54 LDP X20, X19, [X31 + 0x10]
	0x03D27F58 LDR X30, [X31], #0x20
	0x03D27F5C RET
	0x03D27F60 MOV X1, X31
	0x03D27F64 B 0x33BDD8C
	0x03D27F68 RET
	0x03D27F6C STP X29, X30, [X31 - 0x60]!
	0x03D27F70 STP X28, X27, [X31 + 0x10]
	0x03D27F74 STP X26, X25, [X31 + 0x20]
	0x03D27F78 STP X24, X23, [X31 + 0x30]
	0x03D27F7C STP X22, X21, [X31 + 0x40]
	0x03D27F80 STP X20, X19, [X31 + 0x50]
	0x03D27F84 ADRP X20, 0x6C0000
	0x03D27F88 ADRP X21, 0x43D000
	0x03D27F8C LDRB W8, [X20 + 0xAC6]
	0x03D27F90 LDR X21, [X21 + 0xA38]
	0x03D27F94 TBNZ X8, 0x0, 0x3D28048
	0x03D27F98 ADRP X0, 0x43D000
	0x03D27F9C LDR X0, [X0 + 0xA40]
	0x03D27FA0 BL 0x1C16CF4
	0x03D27FA4 ADRP X0, 0x43D000
	0x03D27FA8 LDR X0, [X0 + 0xA38]
	0x03D27FAC BL 0x1C16CF4
	0x03D27FB0 ADRP X0, 0x43D000
	0x03D27FB4 LDR X0, [X0 + 0xA48]
	0x03D27FB8 BL 0x1C16CF4
	0x03D27FBC ADRP X0, 0x43D000
	0x03D27FC0 LDR X0, [X0 + 0xA50]
	0x03D27FC4 BL 0x1C16CF4
	0x03D27FC8 ADRP X0, 0x43D000
	0x03D27FCC LDR X0, [X0 + 0xA58]
	0x03D27FD0 BL 0x1C16CF4
	0x03D27FD4 ADRP X0, 0x43D000
	0x03D27FD8 LDR X0, [X0 + 0xA60]
	0x03D27FDC BL 0x1C16CF4
	0x03D27FE0 ADRP X0, 0x43D000
	0x03D27FE4 LDR X0, [X0 + 0xA68]
	0x03D27FE8 BL 0x1C16CF4
	0x03D27FEC ADRP X0, 0x43D000
	0x03D27FF0 LDR X0, [X0 + 0xA70]
	0x03D27FF4 BL 0x1C16CF4
	0x03D27FF8 ADRP X0, 0x43D000
	0x03D27FFC LDR X0, [X0 + 0xA78]
	0x03D28000 BL 0x1C16CF4
	0x03D28004 ADRP X0, 0x43C000
	0x03D28008 LDR X0, [X0 + 0xA80]
	0x03D2800C BL 0x1C16CF4
	0x03D28010 ADRP X0, 0x43C000
	0x03D28014 LDR X0, [X0 + 0xA88]
	0x03D28018 BL 0x1C16CF4
	0x03D2801C ADRP X0, 0x43C000
	0x03D28020 LDR X0, [X0 + 0xA90]
	0x03D28024 BL 0x1C16CF4
	0x03D28028 ADRP X0, 0x43C000
	0x03D2802C LDR X0, [X0 + 0xA98]
	0x03D28030 BL 0x1C16CF4
	0x03D28034 ADRP X0, 0x43C000
	0x03D28038 LDR X0, [X0 + 0xAA0]
	0x03D2803C BL 0x1C16CF4
	0x03D28040 MOVZ W8, 0x1
	0x03D28044 STRB W8, [X20 + 0xAC6]
	0x03D28048 LDR X0, [X21]
	0x03D2804C LDR W8, [X0 + 0xE0]
	0x03D28050 CBNZ W8, 0x3D28058
	0x03D28054 BL 0x1C16DFC
	0x03D28058 ADRP X19, 0x6BF000
	0x03D2805C LDRB W8, [X19 + 0xB57]
	0x03D28060 CBNZ W8, 0x3D28078
	0x03D28064 ADRP X0, 0x43C000
	0x03D28068 LDR X0, [X0 + 0xA38]
	0x03D2806C BL 0x1C16CF4
	0x03D28070 MOVZ W8, 0x1
	0x03D28074 STRB W8, [X19 + 0xB57]
	0x03D28078 ADRP X12, 0x43C000
	0x03D2807C ADRP X25, 0x43C000
	0x03D28080 ADRP X23, 0x43C000
	0x03D28084 ADRP X11, 0x43C000
	0x03D28088 ADRP X24, 0x43C000
	0x03D2808C ADRP X10, 0x43C000
	0x03D28090 LDR X12, [X12 + 0xA60]
	0x03D28094 LDR X25, [X25 + 0xA88]
	0x03D28098 LDR X23, [X23 + 0xA40]
	0x03D2809C LDR X11, [X11 + 0xAA0]
	0x03D280A0 LDR X24, [X24 + 0xA70]
	0x03D280A4 LDR X10, [X10 + 0xA90]

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+224], X29
	003 Move [X31+232], X30
	004 Move [X31+240], X28
	005 Move [X31+248], X27
	006 Move [X31+256], X26
	007 Move [X31+264], X25
	008 Move [X31+272], X24
	009 Move [X31+280], X23
	010 Move [X31+288], X22
	011 Move [X31+296], X21
	012 Move [X31+304], X20
	013 Move [X31+312], X19
	014 Move [X31+32], X0
	015 Move X21, 0x6C1000
	016 Move X20, 0x3F6000
	017 Move W8, [X21+2726]
	018 Move X20, [X20+3736]
	019 Add X19, X31, 176
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {53}
	024 Move X0, 0x3F5000
	025 Move X0, [X0+2328]
	026 Call 0x1C17CF4
	027 Move X0, 0x43E000
	028 Move X0, [X0+2384]
	029 Call 0x1C17CF4
	030 Move X0, 0x43E000
	031 Move X0, [X0+2392]
	032 Call 0x1C17CF4
	033 Move X0, 0x43E000
	034 Move X0, [X0+2400]
	035 Call 0x1C17CF4
	036 Move X0, 0x3CD000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move X0, 0x43E000
	040 Move X0, [X0+1624]
	041 Call 0x1C17CF4
	042 Move X0, 0x3F6000
	043 Move X0, [X0+3736]
	044 Call 0x1C17CF4
	045 Move X0, 0x43C000
	046 Move X0, [X0+1704]
	047 Call 0x1C17CF4
	048 Move X0, 0x43E000
	049 Move X0, [X0+1888]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X21+2726], W8
	053 Move X0, [X20]
	054 NotImplemented "Instruction MOVI not yet implemented."
	055 Move [X31+208], X31
	056 Move [X19], V0
	057 Move [X19+8], V0
	058 Move [X31+144], V0
	059 Move [X31+152], V0
	060 Move [X31+112], V0
	061 Move [X31+120], V0
	062 Move [X31+80], V0
	063 Move [X31+88], V0
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X27, 0x43E000
	069 Move X28, 0x43C000
	070 Move X29, 0x3F5000
	071 Move X26, 0x43E000
	072 Move X27, [X27+2384]
	073 Move X28, [X28+1704]
	074 Move X29, [X29+2328]
	075 Move X26, [X26+1888]
	076 Add X8, X31, 40
	077 Move X0, X31
	078 Call UIElementsUtility.GetPanelsIterator
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 Move X8, [X31+72]
	082 Add X9, X31, 80
	083 Move X20, X31
	084 Move W21, W31
	085 Move [X19], V0
	086 Move [X19+8], V1
	087 Move [X31+208], X8
	088 Or X19, X9, 15
	089 Move X1, [X27]
	090 Add X0, X31, 176
	091 Call Enumerator<Int32, Object>.MoveNext, X0
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {318}
	096 Move X22, [X31+200]
	097 Compare X22, 0
	098 JumpIfEqual {332}
	099 Move X8, [X22]
	100 Move W1, 6
	101 Move X0, X22
	102 Move X9, [X8+1080]
	103 Move X2, [X8+1088]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Compare X0, 0
	106 JumpIfEqual {116}
	107 Move X9, [X0]
	108 Move X8, [X28]
	109 Move W11, [X9+304]
	110 Move W10, [X8+304]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X9, [X9+200]
	113 Add X9, X9, X10
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X23, X31
	117 Move W8, 1
	118 Compare W8, 0
	119 JumpIfNotEqual {89}
	120 Move X8, [X22]
	121 Move X1, [X29]
	122 Move W10, [X8+304]
	123 Move W9, [X1+304]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X8, [X8+200]
	126 Add X8, X8, X9
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Compare X23, 0
	130 JumpIfEqual {332}
	131 Move X0, X23
	132 Call RenderChain.GetStandardWorldSpaceMaterial, X0
	133 NotImplemented "Instruction MOVI not yet implemented."
	134 Move [X19], V0
	135 Move [X19+8], V0
	136 Move [X19+2], V0
	137 Move [X19+48], X31
	138 Move X8, [X23+272]
	139 Move [X31+80], X0
	140 Move X24, X0
	141 Move [X31+112], X8
	142 Move X8, [X23+288]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 NotImplemented "Instruction CSEL not yet implemented."
	145 Compare X8, 0
	146 JumpIfEqual {165}
	147 Compare X20, 0
	148 JumpIfEqual {332}
	149 Move X0, X20
	150 Move X1, X31
	151 Call VectorImageManager.get_atlas, X0
	152 Move X23, [X0+40]
	153 Compare X23, 0
	154 JumpIfEqual {117}
	155 Move W8, [X23+124]
	156 Move TEMP, X8
	157 And TEMP, TEMP, -2147483648
	158 Compare TEMP, -2147483648
	159 JumpIfEqual {117}
	160 Move X8, [X23+16]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 NotImplemented "Instruction CSET not yet implemented."
	163 Compare W8, 0
	164 JumpIfNotEqual {89}
	165 Move X0, X31
	166 Move X8, [X26]
	167 Move [X31+120], X0
	168 Move W9, [X8+224]
	169 Compare W9, 0
	170 JumpIfNotEqual {173}
	171 Move X0, X8
	172 Call 0x1C17DFC
	173 Add X25, X23, 320
	174 Move X0, X25
	175 Move X1, X31
	176 Call UIRVEShaderInfoAllocator.get_atlas, X0
	177 Move [X31+128], X0
	178 Move X0, X22
	179 Move X1, X31
	180 Call BaseVisualElementPanel.get_scaledPixelsPerPoint, X0
	181 Move X0, X25
	182 Move X1, X31
	183 Move [X31+136], S0
	184 Call UIRVEShaderInfoAllocator.get_transformConstants, X0
	185 Move [X31+144], X0
	186 Move [X31+152], X1
	187 Move X0, X25
	188 Move X1, X31
	189 Call UIRVEShaderInfoAllocator.get_clipRectConstants, X0
	190 Move [X31+160], X0
	191 Move [X31+168], X1
	192 Move W8, [X23+132]
	193 Compare W8, 0
	194 JumpIfEqual {292}
	195 Move X25, [X23+16]
	196 Compare X25, 0
	197 JumpIfEqual {89}
	198 Move X11, X31
	199 Move X9, X25
	200 Move W8, [X25+52]
	201 Compare W8, 0
	202 JumpIfEqual {206}
	203 Move X25, [X25+40]
	204 Compare X25, 0
	205 JumpIfNotEqual {200}
	206 Move [X31+16], X9
	207 Move [X31+24], X11
	208 Move X8, 0x3CD000
	209 Move X8, [X8+1432]
	210 Move X29, [X25+56]
	211 Move X0, [X8]
	212 Move W8, [X0+224]
	213 Compare W8, 0
	214 JumpIfNotEqual {216}
	215 Call 0x1C17DFC
	216 Move X0, X29
	217 Move X1, X31
	218 Move X2, X31
	219 Call Object.op_Equality, X0, X1
	220 Move X9, X24
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfEqual {226}
	225 Move X9, [X25+56]
	226 Move X8, 0x3CD000
	227 Move X8, [X8+1432]
	228 Move [X31+8], X9
	229 Move X0, [X8]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {235}
	233 Call 0x1C17DFC
	234 Move X9, [X31+8]
	235 Move X29, [X31+24]
	236 Move X0, X9
	237 Move X2, X31
	238 Move X1, X29
	239 Call Object.op_Inequality, X0, X1
	240 Move TEMP, X0
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfNotEqual {282}
	244 Move X8, 0x3CD000
	245 Move X8, [X8+1432]
	246 Move X0, [X8]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1C17DFC
	251 Move X0, [X31+24]
	252 Move X1, X31
	253 Move X2, X31
	254 Call Object.op_Inequality, X0, X1
	255 Move X29, 0x3F5000
	256 Move X29, [X29+2328]
	257 Move TEMP, X0
	258 And TEMP, TEMP, 1
	259 Compare TEMP, 1
	260 JumpIfNotEqual {286}
	261 Move X8, 0x43E000
	262 Move X8, [X8+1624]
	263 Move X0, [X8]
	264 Move X8, [X31+24]
	265 Move [X31+88], X8
	266 Move X8, [X31+16]
	267 Move [X31+104], X8
	268 Move W8, [X0+224]
	269 Compare W8, 0
	270 JumpIfNotEqual {272}
	271 Call 0x1C17DFC
	272 Move X3, [X31+32]
	273 Add W8, W21, 1
	274 Add X2, X31, 80
	275 Move X0, X22
	276 Move X1, X23
	277 Move W4, W21
	278 Move [X31+24], W8
	279 Call RenderChain.OnRegisterIntermediateRendererMat, X0, X1, X2, X3, X4
	280 Move W21, [X31+24]
	281 Move X9, X25
	282 Move X10, X29
	283 Move X29, 0x3F5000
	284 Move X9, [X31+16]
	285 Move X29, [X29+2328]
	286 Move X9, [X31+16]
	287 Move X10, [X31+8]
	288 Move X25, [X25+40]
	289 Move X11, X10
	290 Compare X25, 0
	291 JumpIfNotEqual {200}
	292 Move [X31+88], X24
	293 Move X9, 0x43D000
	294 Move X8, [X23+16]
	295 Move X9, [X9+1624]
	296 Move [X31+104], X8
	297 Move X0, [X9]
	298 Move X10, X11
	299 Compare X9, 0
	300 JumpIfEqual {89}
	301 Move X8, 0x43D000
	302 Move X8, [X8+1624]
	303 Move [X31+88], X10
	304 Move [X31+104], X9
	305 Move X0, [X8]
	306 Move W8, [X0+224]
	307 Compare W8, 0
	308 JumpIfNotEqual {310}
	309 Call 0x1C17DFC
	310 Move X3, [X31+32]
	311 Add X2, X31, 80
	312 Move X0, X22
	313 Move X1, X23
	314 Move W4, W21
	315 Add W24, W21, 1
	316 Call RenderChain.OnRegisterIntermediateRendererMat, X0, X1, X2, X3, X4
	317 Move W21, W24
	318 Move X20, [X31+304]
	319 Move X19, [X31+312]
	320 Move X22, [X31+288]
	321 Move X21, [X31+296]
	322 Move X24, [X31+272]
	323 Move X23, [X31+280]
	324 Move X26, [X31+256]
	325 Move X25, [X31+264]
	326 Move X28, [X31+240]
	327 Move X27, [X31+248]
	328 Move X29, [X31+224]
	329 Move X30, [X31+232]
	330 Add X31, X31, 320
	331 Return 
	332 Call 0x1C17F20
	333 Move X0, X22
	334 Call 0x1C181E0

Method: System.Void OnRegisterIntermediateRendererMat(UnityEngine.UIElements.BaseRuntimePanel rtp, UnityEngine.UIElements.UIR.RenderChain renderChain, ref UnityEngine.UIElements.UIR.RenderChain/RenderNodeData rnd, UnityEngine.Camera camera, System.Int32 sameDistanceSortPriority)

Disassembly:
	0x03D280A8 LDR X0, [X21]
	0x03D280AC ADRP X22, 0x43C000
	0x03D280B0 ADRP X19, 0x43C000
	0x03D280B4 ADRP X20, 0x43C000
	0x03D280B8 ADRP X28, 0x43C000
	0x03D280BC ADRP X29, 0x43C000
	0x03D280C0 ADRP X26, 0x43C000
	0x03D280C4 ADRP X27, 0x43C000
	0x03D280C8 LDR X22, [X22 + 0xA80]
	0x03D280CC LDR X19, [X19 + 0xA48]
	0x03D280D0 LDR X20, [X20 + 0xA78]
	0x03D280D4 LDR W8, [X0 + 0xE0]
	0x03D280D8 LDR X28, [X28 + 0xA58]
	0x03D280DC LDR X29, [X29 + 0xA50]
	0x03D280E0 LDR X26, [X26 + 0xA98]
	0x03D280E4 LDR X27, [X27 + 0xA68]
	0x03D280E8 CBNZ W8, 0x3D2810C
	0x03D280EC BL 0x1C16DFC
	0x03D280F0 ADRP X12, 0x43C000
	0x03D280F4 ADRP X11, 0x43C000
	0x03D280F8 ADRP X10, 0x43C000
	0x03D280FC LDR X12, [X12 + 0xA60]
	0x03D28100 LDR X11, [X11 + 0xAA0]
	0x03D28104 LDR X10, [X10 + 0xA90]
	0x03D28108 LDR X0, [X21]
	0x03D2810C LDR X8, [X0 + 0xB8]
	0x03D28110 LDR X9, [X23]
	0x03D28114 LDRB W8, [X8]
	0x03D28118 CMP W8, 0x0
	0x03D2811C LDR X8, [X9 + 0xB8]
	0x03D28120 CSEL X9, X12, X25, EQ
	0x03D28124 LDR X9, [X9]
	0x03D28128 CSEL X10, X10, X22, EQ
	0x03D2812C LDP X22, X21, [X31 + 0x40]
	0x03D28130 STR X9, [X8]
	0x03D28134 LDR X8, [X23]
	0x03D28138 CSEL X9, X11, X24, EQ
	0x03D2813C LDR X9, [X9]
	0x03D28140 LDP X24, X23, [X31 + 0x30]
	0x03D28144 LDR X8, [X8 + 0xB8]
	0x03D28148 STR X9, [X8 + 0x8]
	0x03D2814C LDR X9, [X10]
	0x03D28150 CSEL X10, X19, X20, EQ
	0x03D28154 LDP X20, X19, [X31 + 0x50]
	0x03D28158 STR X9, [X8 + 0x10]
	0x03D2815C LDR X9, [X10]
	0x03D28160 CSEL X10, X28, X29, EQ
	0x03D28164 STR X9, [X8 + 0x18]
	0x03D28168 LDR X9, [X10]
	0x03D2816C STR X9, [X8 + 0x20]
	0x03D28170 CSEL X9, X26, X27, EQ
	0x03D28174 LDR X9, [X9]
	0x03D28178 LDP X26, X25, [X31 + 0x20]
	0x03D2817C LDP X28, X27, [X31 + 0x10]
	0x03D28180 STR X9, [X8 + 0x28]
	0x03D28184 LDP X29, X30, [X31], #0x60
	0x03D28188 RET
	0x03D2818C SUB X31, X31, 0x60
	0x03D28190 STP X30, X21, [X31 + 0x40]
	0x03D28194 STP X20, X19, [X31 + 0x50]
	0x03D28198 ADRP X21, 0x6BF000
	0x03D2819C LDRB W8, [X21 + 0xAC7]
	0x03D281A0 MOV X20, X1
	0x03D281A4 MOV X19, X0
	0x03D281A8 TBNZ X8, 0x0, 0x3D281C0
	0x03D281AC ADRP X0, 0x43C000
	0x03D281B0 LDR X0, [X0 + 0xAA8]
	0x03D281B4 BL 0x1C16CF4
	0x03D281B8 MOVZ W8, 0x1
	0x03D281BC STRB W8, [X21 + 0xAC7]
	0x03D281C0 CBZ X20, 0x3D281DC
	0x03D281C4 ADRP X8, 0x43C000
	0x03D281C8 LDR X8, [X8 + 0xAA8]
	0x03D281CC LDR X9, [X20]
	0x03D281D0 LDR X8, [X8]
	0x03D281D4 CMP X9, X8
	0x03D281D8 B.EQ 0x3D281E4
	0x03D281DC MOV W0, W31
	0x03D281E0 B 0x3D28208
	0x03D281E4 MOV X0, X20
	0x03D281E8 BL 0x1C16E08
	0x03D281EC LDP V1, V0, [X0 + 0x20]
	0x03D281F0 LDP V2, V3, [X0]
	0x03D281F4 ADD X1, X31, 0x0
	0x03D281F8 MOV X0, X19
	0x03D281FC STP V1, V0, [X31 + 0x20]
	0x03D28200 STP V2, V3, [X31]
	0x03D28204 BL 0x3D2821C
	0x03D28208 LDP X20, X19, [X31 + 0x50]
	0x03D2820C LDP X30, X21, [X31 + 0x40]
	0x03D28210 AND W0, W0, 0x1
	0x03D28214 ADD X31, X31, 0x60
	0x03D28218 RET
	0x03D2821C LDP D0, D3, [X0]
	0x03D28220 LDP D1, D2, [X1]
	0x03D28224 ADRP X8, 0xFFFFFFFFFCDC1000
	0x03D28228 FSUB V1.2S, V1.2S, V0.2S
	0x00000000 INVALID
	0x03D28230 LDR V0, [X8 + 0xF20]
	0x03D28234 FSUB V2.2S, V2.2S, V3.2S
	0x03D28238 UNIMPLEMENTED
	0x00000000 INVALID
	0x03D28240 FADD V1.2S, V1.2S, V3.2S
	0x03D28244 FADD V1.2S, V2.2S, V1.2S
	0x03D28248 UNIMPLEMENTED
	0x03D2824C FADD V1.2S, V2.2S, V1.2S
	0x03D28250 FCMP S1, S0
	0x03D28254 B.PL 0x3D28308
	0x03D28258 LDP D1, D2, [X1 + 0x10]
	0x03D2825C LDP D3, D4, [X0 + 0x10]
	0x03D28260 FSUB V1.2S, V1.2S, V3.2S
	0x00000000 INVALID
	0x03D28268 FSUB V2.2S, V2.2S, V4.2S
	0x03D2826C UNIMPLEMENTED
	0x00000000 INVALID
	0x03D28274 FADD V1.2S, V1.2S, V3.2S
	0x03D28278 FADD V1.2S, V2.2S, V1.2S
	0x03D2827C UNIMPLEMENTED
	0x03D28280 FADD V1.2S, V2.2S, V1.2S
	0x03D28284 FCMP S1, S0
	0x03D28288 B.PL 0x3D28308
	0x03D2828C LDR V1, [X1 + 0x20]
	0x03D28290 LDR V2, [X0 + 0x20]
	0x03D28294 FCMP S1, S2
	0x03D28298 B.NE 0x3D28308
	0x03D2829C LDUR V1, [X1 + 0x24]
	0x03D282A0 LDUR V3, [X0 + 0x24]
	0x03D282A4 LDUR V2, [X1 + 0x2C]
	0x03D282A8 LDUR V4, [X0 + 0x2C]
	0x03D282AC FSUB V1.2S, V1.2S, V3.2S
	0x00000000 INVALID
	0x03D282B4 FSUB V2.2S, V2.2S, V4.2S
	0x03D282B8 UNIMPLEMENTED
	0x00000000 INVALID
	0x03D282C0 FADD V1.2S, V1.2S, V3.2S
	0x03D282C4 FADD V1.2S, V2.2S, V1.2S
	0x03D282C8 UNIMPLEMENTED
	0x03D282CC FADD V1.2S, V2.2S, V1.2S
	0x03D282D0 FCMP S1, S0
	0x03D282D4 B.PL 0x3D28308
	0x03D282D8 LDUR V1, [X1 + 0x34]
	0x03D282DC LDUR V2, [X0 + 0x34]
	0x03D282E0 FSUB V1.2S, V1.2S, V2.2S
	0x00000000 INVALID
	0x03D282E8 FADDP S1, V1.2S
	0x03D282EC FCMP S1, S0
	0x03D282F0 B.PL 0x3D28308
	0x03D282F4 LDR V0, [X1 + 0x3C]
	0x03D282F8 LDR V1, [X0 + 0x3C]
	0x03D282FC FCMP S0, S1
	0x03D28300 CSET W0, EQ
	0x03D28304 RET
	0x03D28308 MOV W0, W31
	0x03D2830C RET
	0x03D28310 SUB X31, X31, 0x60
	0x03D28314 STR X30, [X31 + 0x10]
	0x03D28318 STP X26, X25, [X31 + 0x20]
	0x03D2831C STP X24, X23, [X31 + 0x30]
	0x03D28320 STP X22, X21, [X31 + 0x40]
	0x03D28324 STP X20, X19, [X31 + 0x50]
	0x03D28328 LDR V0, [X0]
	0x03D2832C MOV X19, X0
	0x03D28330 ADD X8, X31, 0x0
	0x03D28334 ADD X0, X31, 0x0
	0x03D28338 MOV X1, X31
	0x03D2833C ORR X22, X8, 0x7
	0x03D28340 ORR X21, X8, 0xF
	0x03D28344 ORR X20, X8, 0xF
	0x03D28348 STR V0, [X31]
	0x03D2834C BL 0x338FE0C
	0x03D28350 MOV W23, W0
	0x03D28354 MOV X0, X22
	0x03D28358 MOV X1, X31
	0x03D2835C BL 0x338FE0C
	0x03D28360 MOV W24, W0
	0x03D28364 MOV X0, X21
	0x03D28368 MOV X1, X31
	0x03D2836C BL 0x338FE0C
	0x03D28370 MOV W25, W0
	0x03D28374 MOV X0, X20
	0x03D28378 MOV X1, X31
	0x03D2837C BL 0x338FE0C
	0x03D28380 LDR V0, [X19 + 0x1]
	0x03D28384 EOR W8, W23, W24, 0x2
	0x03D28388 EOR W8, W8, W25, 0x2
	0x03D2838C EOR W26, W8, W0, 0x1
	0x03D28390 ADD X0, X31, 0x0
	0x03D28394 MOV X1, X31
	0x03D28398 STR V0, [X31]
	0x03D2839C BL 0x338FE0C
	0x03D283A0 MOV W23, W0
	0x03D283A4 MOV X0, X22
	0x03D283A8 MOV X1, X31
	0x03D283AC BL 0x338FE0C
	0x03D283B0 MOV W24, W0
	0x03D283B4 MOV X0, X21
	0x03D283B8 MOV X1, X31
	0x03D283BC BL 0x338FE0C
	0x03D283C0 MOV W25, W0
	0x03D283C4 MOV X0, X20
	0x03D283C8 MOV X1, X31
	0x03D283CC BL 0x338FE0C
	0x03D283D0 EOR W8, W23, W24, 0x2
	0x03D283D4 MOVZ W24, 0x5529
	0x03D283D8 EOR W8, W8, W25, 0x2

ISIL:
	001 Move [X31-112], D9
	002 Move [X31-104], D8
	003 Move [X31+16], X29
	004 Move [X31+24], X30
	005 Move [X31+32], X28
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Add X29, X31, 16
	016 Subtract X31, X31, 384
	017 Add X19, X31, 0
	018 Move X25, 0x6C0000
	019 Move W8, [X25+2727]
	020 Move W20, W4
	021 Move X21, X3
	022 Move X22, X2
	023 Move X24, X1
	024 Move X23, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {49}
	029 Move X0, 0x43D000
	030 Move X0, [X0+1808]
	031 Call 0x1C17CF4
	032 Move X0, 0x43D000
	033 Move X0, [X0+1824]
	034 Call 0x1C17CF4
	035 Move X0, 0x43D000
	036 Move X0, [X0+1944]
	037 Call 0x1C17CF4
	038 Move X0, 0x43D000
	039 Move X0, [X0+2408]
	040 Call 0x1C17CF4
	041 Move X0, 0x429000
	042 Move X0, [X0+1424]
	043 Call 0x1C17CF4
	044 Move X0, 0x3F5000
	045 Move X0, [X0+2080]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X25+2727], W8
	049 Compare X24, 0
	050 JumpIfEqual {237}
	051 Move W25, [X24+128]
	052 Move X0, [X24+80]
	053 Add W8, W25, 1
	054 Move [X24+128], W8
	055 Compare X0, 0
	056 JumpIfEqual {237}
	057 Move W8, [X0+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, 0x43D000
	060 Move X8, [X8+1944]
	061 Move W1, W25
	062 Move X2, [X8]
	063 Subtract X8, X29, 112
	064 Call List`1<RenderNodeData>.get_Item, X0, X1
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Add X0, X19, 192
	067 Move W2, 96
	068 Move X1, X22
	069 Move [X22+16], X8
	070 Move X26, [X24+80]
	071 Call 0x3EB2AC0
	072 Compare X26, 0
	073 JumpIfEqual {237}
	074 Move X8, 0x43D000
	075 Move X8, [X8+2408]
	076 Subtract X0, X29, 112
	077 Add X1, X19, 192
	078 Move W2, 96
	079 Move X27, [X8]
	080 Call 0x3EB2AC0
	081 Subtract X2, X29, 112
	082 Move X0, X26
	083 Move W1, W25
	084 Move X3, X27
	085 Call List`1<RenderNodeData>.set_Item, X0, X1, X2
	086 Move X8, 0x429000
	087 Move X8, [X8+1424]
	088 Move X0, [X8]
	089 Call 0x1C17F10
	090 Move X1, X31
	091 Move X25, X0
	092 Call MaterialPropertyBlock..ctor, X0
	093 Move [X22+16], X25
	094 Move X26, [X24+80]
	095 Compare X26, 0
	096 JumpIfEqual {237}
	097 Move W25, [X26+24]
	098 Add X0, X19, 96
	099 Move W2, 96
	100 Move X1, X22
	101 Call 0x3EB2AC0
	102 Move X8, 0x43D000
	103 Move X8, [X8+1808]
	104 Add X0, X19, 192
	105 Add X1, X19, 96
	106 Move W2, 96
	107 Move X27, [X8]
	108 Call 0x3EB2AC0
	109 Move W9, [X26+28]
	110 Move X8, [X26+16]
	111 Add W9, W9, 1
	112 Move [X26+28], W9
	113 Compare X8, 0
	114 JumpIfEqual {237}
	115 Move W9, [X8+24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X9, W25
	118 Move W11, 96
	119 NotImplemented "Instruction MADD not yet implemented."
	120 Add W10, W25, 1
	121 Add X0, X8, 32
	122 Add X1, X19, 192
	123 Move W2, 96
	124 Move [X26+24], W10
	125 Call 0x3EB2AC0
	126 Move X8, [X27+32]
	127 Subtract X0, X29, 112
	128 Add X1, X19, 192
	129 Move W2, 96
	130 Move X8, [X8+192]
	131 Move X27, [X8+112]
	132 Call 0x3EB2AC0
	133 Subtract X1, X29, 112
	134 Move X0, X26
	135 Move X2, X27
	136 Call List`1<RenderNodeData>.AddWithResize, X0, X1
	137 Add X8, X31, 0
	138 Subtract X26, X8, 16
	139 Add X31, X26, 0
	140 Move [X8-16], X31
	141 Move W9, [X24+124]
	142 Or X10, X26, 7
	143 Move [X8-16], W9
	144 Move [X10], W25
	145 Compare X23, 0
	146 JumpIfEqual {237}
	147 Add X8, X23, 408
	148 Move X23, 0x6B1000
	149 Move X22, [X22+8]
	150 Move V0, [X8+32]
	151 Move V1, [X8+48]
	152 Move V2, [X8]
	153 Move V3, [X8+16]
	154 Move W8, [X23+1923]
	155 Subtract X24, X29, 112
	156 Move [X24+32], V0
	157 Move [X24+40], V1
	158 Move [X24], V2
	159 Move [X24+8], V3
	160 Compare W8, 0
	161 JumpIfNotEqual {167}
	162 Move X0, 0x3CC000
	163 Move X0, [X0+1440]
	164 Call 0x1C17CF4
	165 Move W8, 1
	166 Move [X23+1923], W8
	167 Compare X21, 0
	168 JumpIfEqual {237}
	169 Move X8, 0x3CC000
	170 Move X8, [X8+1440]
	171 Move X23, 0x3F5000
	172 Move X0, X21
	173 Move X1, X31
	174 Move X8, [X8]
	175 Move X8, [X8+184]
	176 Move V8, [X8]
	177 Move V9, [X8+8]
	178 Move X23, [X23+2080]
	179 Call Camera.get_cullingMask, X0
	180 Move X8, [X23]
	181 Move W23, W0
	182 Move W9, [X8+224]
	183 Compare W9, 0
	184 JumpIfNotEqual {187}
	185 Move X0, X8
	186 Call 0x1C17DFC
	187 NotImplemented "Instruction MVNI not yet implemented."
	188 Move V0, [X24]
	189 Move V1, [X24+16]
	190 Move [X19+20], D2
	191 Move V2, [X24+32]
	192 Move V3, [X24+48]
	193 Move TEMP, 0x81000000
	194 Not TEMP
	195 Move W8, TEMP
	196 Move [X19+8], D8
	197 Move [X19+16], S9
	198 Move [X19+28], W8
	199 Move [X19+32], V0
	200 Move [X19+40], V1
	201 Move [X19+64], V2
	202 Move [X19+72], V3
	203 Move X8, W23
	204 Subtract X31, X31, 48
	205 Move W9, 8
	206 Move W10, 2
	207 Add X2, X19, 32
	208 Add X3, X19, 8
	209 Move W4, 3
	210 Move X0, X21
	211 Move X1, X22
	212 Move W5, W31
	213 Move W6, W31
	214 Move W7, W20
	215 Move [X31+16], X26
	216 Move [X31+24], W9
	217 Move [X31+8], W10
	218 Move [X31], X8
	219 Call Utility.RegisterIntermediateRenderer, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	220 Add X31, X31, 48
	221 Subtract X31, X29, 16
	222 Move X20, [X31+96]
	223 Move X19, [X31+104]
	224 Move X22, [X31+80]
	225 Move X21, [X31+88]
	226 Move X24, [X31+64]
	227 Move X23, [X31+72]
	228 Move X26, [X31+48]
	229 Move X25, [X31+56]
	230 Move X28, [X31+32]
	231 Move X27, [X31+40]
	232 Move X29, [X31+16]
	233 Move X30, [X31+24]
	234 Move D9, [X31+112]
	235 Move D8, [X31+120]
	236 Return 
	237 Call 0x1C17F20

Method: System.Void RepaintTexturedElements()

Disassembly:
	0x03D283DC MOVK W24, 0xA5550000
	0x03D283E0 EOR W8, W8, W0, 0x1
	0x03D283E4 ADD X0, X19, 0x20
	0x03D283E8 MOV X1, X31
	0x03D283EC MADD W23, W26, W24, W8
	0x03D283F0 BL 0x338FE0C
	0x03D283F4 MOVZ W8, 0xC477
	0x03D283F8 MOVK W8, 0x8E090000
	0x03D283FC LDUR V0, [X19 + 0x24]
	0x03D28400 MUL W8, W8, W24
	0x03D28404 MADD W8, W23, W24, W8
	0x03D28408 ADD W25, W8, W0
	0x03D2840C ADD X0, X31, 0x0
	0x03D28410 MOV X1, X31
	0x03D28414 STR V0, [X31]
	0x03D28418 BL 0x338FE0C
	0x03D2841C MOV W23, W0
	0x03D28420 MOV X0, X22
	0x03D28424 MOV X1, X31
	0x03D28428 BL 0x338FE0C
	0x03D2842C MOV W22, W0
	0x03D28430 MOV X0, X21
	0x03D28434 MOV X1, X31
	0x03D28438 BL 0x338FE0C
	0x03D2843C MOV W21, W0
	0x03D28440 MOV X0, X20
	0x03D28444 MOV X1, X31
	0x03D28448 BL 0x338FE0C
	0x03D2844C EOR W8, W23, W22, 0x2
	0x03D28450 EOR W8, W8, W21, 0x2
	0x03D28454 EOR W8, W8, W0, 0x1
	0x03D28458 ADD X0, X19, 0x34
	0x03D2845C MOV X1, X31
	0x03D28460 MADD W20, W25, W24, W8
	0x03D28464 BL 0x338FE0C
	0x03D28468 MADD W20, W20, W24, W0
	0x03D2846C ADD X0, X19, 0x38
	0x03D28470 MOV X1, X31
	0x03D28474 BL 0x338FE0C
	0x03D28478 MADD W20, W20, W24, W0
	0x03D2847C ADD X0, X19, 0x3C
	0x03D28480 MOV X1, X31
	0x03D28484 BL 0x338FE0C
	0x03D28488 MADD W0, W20, W24, W0
	0x03D2848C LDP X20, X19, [X31 + 0x50]
	0x03D28490 LDP X22, X21, [X31 + 0x40]
	0x03D28494 LDP X24, X23, [X31 + 0x30]
	0x03D28498 LDP X26, X25, [X31 + 0x20]
	0x03D2849C LDR X30, [X31 + 0x10]
	0x03D284A0 ADD X31, X31, 0x60
	0x03D284A4 RET
	0x03D284A8 LDRB W0, [X0 + 0x48]
	0x03D284AC RET
	0x03D284B0 AND W8, W1, 0x1
	0x03D284B4 STRB W8, [X0 + 0x48]
	0x03D284B8 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6C0000
	006 Move W8, [X20+2728]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x43D000
	013 Move X0, [X0+1624]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2728], W8
	017 Move X8, 0x43D000
	018 Move X9, [X19+16]
	019 Move X8, [X8+1624]
	020 Compare X9, 0
	021 JumpIfEqual {23}
	022 Move X21, [X9+24]
	023 Move X21, X31
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfEqual {30}
	028 Compare X21, 0
	029 JumpIfNotEqual {33}
	030 Call 0x1C17DFC
	031 Compare X21, 0
	032 JumpIfEqual {56}
	033 Move X8, X31
	034 Move X20, X21
	035 Move X21, [X21+136]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Compare X21, 0
	039 JumpIfEqual {46}
	040 Compare X8, 0
	041 JumpIfEqual {72}
	042 Move W9, [X8+232]
	043 Move X8, X21
	044 Compare W9, 0
	045 JumpIfNotEqual {34}
	046 Move X8, [X20+456]
	047 Compare X8, 0
	048 JumpIfEqual {53}
	049 Move X0, X19
	050 Move X1, X20
	051 Move W2, W31
	052 Call RenderChain.UIEOnVisualsChanged, X0, X1, X2
	053 Move X20, [X20+144]
	054 Compare X20, 0
	055 JumpIfNotEqual {46}
	056 Move X0, [X19+264]
	057 Compare X0, 0
	058 JumpIfEqual {72}
	059 Move X8, [X0]
	060 Move X9, [X8+920]
	061 Move X1, [X8+928]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X1, X0
	064 Move X0, X19
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move W2, W31
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Call RenderChain.UIEOnOpacityChanged, X0, X1, X2
	071 Return 
	072 Call 0x1C17F20

Method: System.Void AppendTexture(UnityEngine.UIElements.VisualElement ve, UnityEngine.Texture src, UnityEngine.UIElements.TextureId id, System.Boolean isAtlas)

Disassembly:
	0x03D284BC STP X30, X21, [X31 - 0x20]!
	0x03D284C0 STP X20, X19, [X31 + 0x10]
	0x03D284C4 ADRP X21, 0x6BF000
	0x03D284C8 ADRP X20, 0x3D2000
	0x03D284CC LDRB W8, [X21 + 0xAC8]
	0x03D284D0 LDR X20, [X20 + 0xC10]
	0x03D284D4 MOV X19, X0
	0x03D284D8 TBNZ X8, 0x0, 0x3D284F0
	0x03D284DC ADRP X0, 0x3D2000
	0x03D284E0 LDR X0, [X0 + 0xC10]
	0x03D284E4 BL 0x1C16CF4
	0x03D284E8 MOVZ W8, 0x1
	0x03D284EC STRB W8, [X21 + 0xAC8]
	0x03D284F0 LDR X8, [X19]
	0x03D284F4 MOVZ W1, 0x1
	0x03D284F8 MOV X0, X19
	0x03D284FC LDP X9, X2, [X8 + 0x188]
	0x03D28500 BLR X9
	0x03D28504 LDR X0, [X20]
	0x03D28508 LDR W8, [X0 + 0xE0]
	0x03D2850C CBNZ W8, 0x3D28514
	0x03D28510 BL 0x1C16DFC
	0x03D28514 MOV X0, X19
	0x03D28518 LDP X20, X19, [X31 + 0x10]
	0x03D2851C MOV X1, X31
	0x03D28520 LDP X30, X21, [X31], #0x20
	0x03D28524 B 0x33B3E9C
	0x03D28528 STP X30, X21, [X31 - 0x20]!
	0x03D2852C STP X20, X19, [X31 + 0x10]
	0x03D28530 ADRP X21, 0x6BF000
	0x03D28534 LDRB W8, [X21 + 0xAC9]
	0x03D28538 MOV W20, W1
	0x03D2853C MOV X19, X0
	0x03D28540 TBNZ X8, 0x0, 0x3D28558
	0x03D28544 ADRP X0, 0x3F5000
	0x03D28548 LDR X0, [X0 + 0x240]
	0x03D2854C BL 0x1C16CF4
	0x03D28550 MOVZ W8, 0x1
	0x03D28554 STRB W8, [X21 + 0xAC9]
	0x03D28558 LDRB W8, [X19 + 0x48]
	0x03D2855C CBNZ W8, 0x3D28598
	0x03D28560 TBZ X20, 0x0, 0x3D28590

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x6C0000
	009 Move W8, [X24+2729]
	010 Move W22, W4
	011 Move X20, X3
	012 Move X21, X2
	013 Move X19, X1
	014 Move X23, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x43D000
	020 Move X0, [X0+2416]
	021 Call 0x1C17CF4
	022 Move X0, 0x43D000
	023 Move X0, [X0+2424]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+2729], W8
	027 Move X0, [X23+72]
	028 Compare X0, 0
	029 JumpIfEqual {55}
	030 Move X8, 0x43D000
	031 Move X8, [X8+2424]
	032 Move X1, [X8]
	033 Call 0x2EF1E28, X0
	034 Compare X0, 0
	035 JumpIfEqual {55}
	036 And W8, W22, 1
	037 Move [X0+32], X21
	038 Move [X0+40], W20
	039 Move [X0+44], W8
	040 Compare X19, 0
	041 JumpIfEqual {55}
	042 Move X8, 0x43D000
	043 Move X8, [X8+2416]
	044 Add X1, X19, 456
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X2, [X8]
	050 Move X24, [X31+16]
	051 Move X23, [X31+24]
	052 Move X30, [X31+64]
	053 Call 0x28CBAAC, X0, X1
	054 Return 
	055 Call 0x1C17F20

Method: System.Void ResetTextures(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D251D4 MOV X0, X8
	0x03D251D8 BL 0x321B938
	0x03D251DC MOVZ W9, 0x447A0000
	0x03D251E0 MOVZ W10, 0x42C80000
	0x03D251E4 MOVZ W8, 0x42700000
	0x03D251E8 FMOV S9, W9
	0x03D251EC FMOV S8, W10
	0x03D251F0 FMOV S0, 30
	0x03D251F4 FMOV S1, W8
	0x03D251F8 MOV V2.16B, V9.16B
	0x03D251FC MOV V3.16B, V8.16B
	0x03D25200 MOV X1, X31
	0x03D25204 BL 0x3C677DC
	0x03D25208 ADD X0, X19, 0x8C
	0x03D2520C MOV X1, X31
	0x03D25210 BL 0x3399B00
	0x03D25214 LDR X8, [X22]
	0x03D25218 MOV X1, X0
	0x03D2521C MOV X2, X31
	0x03D25220 MOV X0, X8
	0x03D25224 BL 0x321B938
	0x03D25228 MOVZ W8, 0x42900000
	0x03D2522C FMOV S0, 30
	0x03D25230 FMOV S1, W8
	0x03D25234 MOV V2.16B, V9.16B
	0x03D25238 MOV V3.16B, V8.16B
	0x03D2523C MOV X1, X31
	0x03D25240 BL 0x3C677DC
	0x03D25244 ADD X0, X19, 0xDC
	0x03D25248 MOV X1, X31
	0x03D2524C BL 0x3399B00
	0x03D25250 LDR X8, [X20]
	0x03D25254 MOV X1, X0
	0x03D25258 MOV X2, X31
	0x03D2525C MOV X0, X8
	0x03D25260 BL 0x321B938
	0x03D25264 MOVZ W8, 0x42A80000
	0x03D25268 FMOV S0, 30
	0x03D2526C FMOV S1, W8
	0x03D25270 MOV V2.16B, V9.16B
	0x03D25274 MOV V3.16B, V8.16B
	0x03D25278 MOV X1, X31
	0x03D2527C BL 0x3C677DC
	0x03D25280 ADD X0, X19, 0xD8
	0x03D25284 MOV X1, X31
	0x03D25288 BL 0x3399B00
	0x03D2528C LDR X8, [X29]
	0x03D25290 MOV X1, X0
	0x03D25294 MOV X2, X31
	0x03D25298 MOV X0, X8
	0x03D2529C BL 0x321B938
	0x03D252A0 MOVZ W8, 0x42C00000
	0x03D252A4 FMOV S0, 30
	0x03D252A8 FMOV S1, W8
	0x03D252AC MOV V2.16B, V9.16B
	0x03D252B0 MOV V3.16B, V8.16B
	0x03D252B4 MOV X1, X31
	0x03D252B8 BL 0x3C677DC
	0x03D252BC ADD X0, X19, 0x90
	0x03D252C0 MOV X1, X31
	0x03D252C4 BL 0x3399B00
	0x03D252C8 LDR X8, [X28]
	0x03D252CC MOV X1, X0
	0x03D252D0 MOV X2, X31
	0x03D252D4 MOV X0, X8
	0x03D252D8 BL 0x321B938
	0x03D252DC MOVZ W8, 0x42D80000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x6C3000
	011 Move W8, [X20+2730]
	012 Move X19, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x440000
	019 Move X0, [X0+1904]
	020 Call 0x1C17CF4
	021 Move X0, 0x3F9000
	022 Move X0, [X0+592]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2730], W8
	026 Compare X19, 0
	027 JumpIfEqual {85}
	028 Move X20, [X22+280]
	029 Move X21, [X22+240]
	030 Move X23, [X19+456]
	031 Move X22, [X22+72]
	032 Move [X19+456], X31
	033 Compare X23, 0
	034 JumpIfEqual {75}
	035 Move X24, 0x440000
	036 Move X25, 0x3F9000
	037 Move X24, [X24+1904]
	038 Move X25, [X25+592]
	039 Move W8, [X23+44]
	040 Move X26, [X23+24]
	041 Compare W8, 0
	042 JumpIfEqual {52}
	043 Compare X20, 0
	044 JumpIfEqual {85}
	045 Move X8, [X23+32]
	046 Compare X8, 0
	047 JumpIfEqual {58}
	048 Move X9, [X25]
	049 Move X10, [X8]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 Compare X21, 0
	053 JumpIfEqual {85}
	054 Move W1, [X23+40]
	055 Move X0, X21
	056 Move X2, X31
	057 Call TextureRegistry.Release, X0, X1
	058 Move X2, X31
	059 Move X8, [X20]
	060 Move W3, [X23+40]
	061 Move X0, X20
	062 Move X1, X19
	063 Move X9, [X8+392]
	064 Move X4, [X8+400]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Compare X22, 0
	067 JumpIfEqual {85}
	068 Move X2, [X24]
	069 Move X0, X22
	070 Move X1, X23
	071 Call 0x2EF1E90, X0, X1
	072 Move X23, X26
	073 Compare X26, 0
	074 JumpIfNotEqual {39}
	075 Move X20, [X31+64]
	076 Move X19, [X31+72]
	077 Move X22, [X31+48]
	078 Move X21, [X31+56]
	079 Move X24, [X31+32]
	080 Move X23, [X31+40]
	081 Move X26, [X31+16]
	082 Move X25, [X31+24]
	083 Move X30, [X31+80]
	084 Return 
	085 Call 0x1C17F20

Method: System.Void DrawStats()

Disassembly:
	0x03D25F60 MOV X1, X19
	0x03D25F64 MOV X2, X31
	0x03D25F68 BL 0x3D3B6CC
	0x03D25F6C ADD W8, W0, W21
	0x03D25F70 STR W8, [X20 + 0xEC]
	0x03D25F74 CBZ X19, 0x3D25FF4
	0x03D25F78 ADRP X8, 0x3CE000
	0x03D25F7C LDR X8, [X8 + 0xA28]
	0x03D25F80 LDRB W19, [X19 + 0xE8]
	0x03D25F84 LDR X0, [X8]
	0x03D25F88 LDR W8, [X0 + 0xE0]
	0x03D25F8C CBNZ W8, 0x3D25F94
	0x03D25F90 BL 0x1C16DFC
	0x03D25F94 CMP W19, 0x0
	0x03D25F98 LDP X20, X19, [X31 + 0x10]
	0x03D25F9C CSET W0, EQ
	0x03D25FA0 MOV X1, X31
	0x03D25FA4 LDP X30, X21, [X31], #0x20
	0x03D25FA8 B 0x3C06E58
	0x03D25FAC ADRP X0, 0x3CE000
	0x03D25FB0 LDR X0, [X0 + 0x5B0]
	0x03D25FB4 BL 0x1C16D08
	0x03D25FB8 BL 0x1C16F10
	0x03D25FBC MOV X19, X0
	0x03D25FC0 ADRP X0, 0x43F000
	0x03D25FC4 LDR X0, [X0 + 0x8F0]
	0x03D25FC8 BL 0x1C16D08
	0x03D25FCC MOV X1, X0
	0x03D25FD0 MOV X0, X19
	0x03D25FD4 MOV X2, X31
	0x03D25FD8 BL 0x337DF1C
	0x03D25FDC ADRP X0, 0x43F000
	0x03D25FE0 LDR X0, [X0 + 0x8F8]
	0x03D25FE4 BL 0x1C16D08
	0x03D25FE8 MOV X1, X0
	0x03D25FEC MOV X0, X19
	0x03D25FF0 BL 0x1C16DEC
	0x03D25FF4 BL 0x1C16F20
	0x03D25FF8 STR X30, [X31 - 0x20]!
	0x03D25FFC STP X20, X19, [X31 + 0x10]
	0x03D26000 CBZ X1, 0x3D26080
	0x03D26004 LDRB W8, [X1 + 0xE8]
	0x03D26008 MOV X19, X1
	0x03D2600C CBZ W8, 0x3D26048
	0x03D26010 LDRB W8, [X0 + 0x78]
	0x03D26014 MOV X20, X0
	0x03D26018 CBNZ W8, 0x3D26084
	0x03D2601C MOV X0, X19
	0x03D26020 MOV X1, X31
	0x03D26024 BL 0x3DEC0F4
	0x03D26028 AND W8, W0, 0x3E0
	0x03D2602C CMP W8, 0x200
	0x03D26030 B.NE 0x3D26054
	0x03D26034 MOV X0, X20
	0x03D26038 MOV X1, X19
	0x03D2603C MOV W2, W31
	0x03D26040 BL 0x3D25CC0
	0x03D26044 B 0x3D2606C
	0x03D26048 LDP X20, X19, [X31 + 0x10]
	0x03D2604C LDR X30, [X31], #0x20
	0x03D26050 RET
	0x03D26054 MOV X0, X20
	0x03D26058 MOV X1, X19
	0x03D2605C BL 0x3D25EFC
	0x03D26060 MOV X0, X20
	0x03D26064 MOV X1, X19
	0x03D26068 BL 0x3D259E4
	0x03D2606C MOV X0, X19
	0x03D26070 LDP X20, X19, [X31 + 0x10]
	0x03D26074 MOV X1, X31
	0x03D26078 LDR X30, [X31], #0x20
	0x03D2607C B 0x3DEC1AC
	0x03D26080 BL 0x1C16F20
	0x03D26084 ADRP X0, 0x3CD000
	0x03D26088 LDR X0, [X0 + 0x5B0]
	0x03D2608C BL 0x1C16D08
	0x03D26090 BL 0x1C16F10
	0x03D26094 MOV X19, X0
	0x03D26098 ADRP X0, 0x43E000
	0x03D2609C LDR X0, [X0 + 0x900]
	0x03D260A0 BL 0x1C16D08
	0x03D260A4 MOV X1, X0
	0x03D260A8 MOV X0, X19
	0x03D260AC MOV X2, X31
	0x03D260B0 BL 0x337DF1C
	0x03D260B4 ADRP X0, 0x43E000
	0x03D260B8 LDR X0, [X0 + 0x908]
	0x03D260BC BL 0x1C16D08
	0x03D260C0 MOV X1, X0
	0x03D260C4 MOV X0, X19
	0x03D260C8 BL 0x1C16DEC
	0x03D260CC STR X30, [X31 - 0x40]!
	0x03D260D0 STP X24, X23, [X31 + 0x10]
	0x03D260D4 STP X22, X21, [X31 + 0x20]
	0x03D260D8 STP X20, X19, [X31 + 0x30]
	0x03D260DC ADRP X21, 0x6C1000
	0x03D260E0 ADRP X24, 0x3CD000
	0x03D260E4 LDRB W8, [X21 + 0xAAD]
	0x03D260E8 LDR X24, [X24 + 0xA28]
	0x03D260EC MOV W23, W3
	0x03D260F0 MOV W22, W2
	0x03D260F4 MOV X19, X1
	0x03D260F8 MOV X20, X0
	0x03D260FC TBNZ X8, 0x0, 0x3D2612C
	0x03D26100 ADRP X0, 0x3CD000
	0x03D26104 LDR X0, [X0 + 0xA28]
	0x03D26108 BL 0x1C16CF4
	0x03D2610C ADRP X0, 0x3F6000
	0x03D26110 LDR X0, [X0 + 0xF0]
	0x03D26114 BL 0x1C16CF4
	0x03D26118 ADRP X0, 0x43E000
	0x03D2611C LDR X0, [X0 + 0x790]
	0x03D26120 BL 0x1C16CF4
	0x03D26124 MOVZ W8, 0x1
	0x03D26128 STRB W8, [X21 + 0xAAD]
	0x03D2612C LDR X0, [X24]
	0x03D26130 LDR W8, [X0 + 0xE0]
	0x03D26134 CBNZ W8, 0x3D2613C
	0x03D26138 BL 0x1C16DFC
	0x03D2613C CMP W22, 0x0
	0x03D26140 CSET W0, NE
	0x03D26144 MOV X1, X31
	0x03D26148 BL 0x3C06E58
	0x03D2614C CBZ X19, 0x3D26288
	0x03D26150 LDR X9, [X20 + 0x10]
	0x03D26154 CBZ X9, 0x3D26288
	0x03D26158 LDR W8, [X9 + 0x18]
	0x03D2615C CMP W8, W23
	0x03D26160 B.LS 0x3D2628C
	0x03D26164 SXTW X8, W23
	0x03D26168 ADD X9, X9, X8, 0x2, LSL
	0x03D2616C LDR W21, [X19 + 0xBC]
	0x03D26170 LDR W10, [X9 + 0x20]
	0x03D26174 CMP W21, W10
	0x03D26178 CSEL W10, W21, W10, LT
	0x03D2617C STR W10, [X9 + 0x20]
	0x03D26180 LDR X9, [X20 + 0x18]
	0x03D26184 CBZ X9, 0x3D26288
	0x03D26188 LDR W10, [X9 + 0x18]
	0x03D2618C CMP W10, W23
	0x03D26190 B.LS 0x3D2628C
	0x03D26194 ADD X8, X9, X8, 0x2, LSL
	0x03D26198 LDR W9, [X8 + 0x20]
	0x03D2619C CMP W21, W9
	0x03D261A0 CSEL W9, W21, W9, GT
	0x03D261A4 STR W9, [X8 + 0x20]
	0x03D261A8 LDR W8, [X19 + 0xC0]
	0x03D261AC CBZ W8, 0x3D261CC
	0x03D261B0 ORR W8, W8, W22, 0x0
	0x03D261B4 STR W8, [X19 + 0xC0]
	0x03D261B8 LDP X20, X19, [X31 + 0x30]
	0x03D261BC LDP X22, X21, [X31 + 0x20]
	0x03D261C0 LDP X24, X23, [X31 + 0x10]
	0x03D261C4 LDR X30, [X31], #0x40
	0x03D261C8 RET
	0x03D261CC STR W22, [X19 + 0xC0]
	0x03D261D0 LDR X0, [X20 + 0x8]
	0x03D261D4 CBZ X0, 0x3D26288
	0x03D261D8 ADRP X22, 0x3F6000
	0x03D261DC LDR X22, [X22 + 0xF0]
	0x03D261E0 MOV W1, W21
	0x03D261E4 LDR X2, [X22]
	0x03D261E8 BL 0x301BCCC
	0x03D261EC CBZ X0, 0x3D2623C
	0x03D261F0 LDR X0, [X20 + 0x8]
	0x03D261F4 CBZ X0, 0x3D26288
	0x03D261F8 LDR X2, [X22]
	0x03D261FC MOV W1, W21
	0x03D26200 BL 0x301BCCC
	0x03D26204 CBZ X0, 0x3D26288
	0x03D26208 STR X19, [X0 + 0xB0]
	0x03D2620C LDR X0, [X20 + 0x8]
	0x03D26210 CBZ X0, 0x3D26288
	0x03D26214 LDR X2, [X22]
	0x03D26218 MOV W1, W21
	0x03D2621C BL 0x301BCCC
	0x03D26220 STR X0, [X19 + 0xA8]
	0x03D26224 LDR X0, [X20 + 0x8]
	0x03D26228 CBZ X0, 0x3D26288
	0x03D2622C ADRP X8, 0x43E000
	0x03D26230 LDR X8, [X8 + 0x790]
	0x03D26234 LDR X3, [X8]
	0x03D26238 B 0x3D2626C
	0x03D2623C LDR X0, [X20 + 0x8]
	0x03D26240 CBZ X0, 0x3D26288
	0x03D26244 ADRP X22, 0x43E000
	0x03D26248 LDR X20, [X20]
	0x03D2624C LDR X22, [X22 + 0x790]
	0x03D26250 MOV W1, W21
	0x03D26254 MOV X2, X19
	0x03D26258 LDR X3, [X22]
	0x03D2625C BL 0x301BD20
	0x03D26260 CBZ X20, 0x3D26288
	0x03D26264 LDR X3, [X22]
	0x03D26268 MOV X0, X20
	0x03D2626C MOV W1, W21
	0x03D26270 MOV X2, X19
	0x03D26274 LDP X20, X19, [X31 + 0x30]
	0x03D26278 LDP X22, X21, [X31 + 0x20]
	0x03D2627C LDP X24, X23, [X31 + 0x10]
	0x03D26280 LDR X30, [X31], #0x40
	0x03D26284 B 0x301BD20
	0x03D26288 BL 0x1C16F20
	0x03D2628C BL 0x1C16F28
	0x03D26290 STP X30, X19, [X31 - 0x10]!
	0x03D26294 CBZ X1, 0x3D262C4
	0x03D26298 LDRB W8, [X1 + 0xE8]
	0x03D2629C CBZ W8, 0x3D262BC
	0x03D262A0 LDRB W8, [X0 + 0x78]
	0x03D262A4 CBNZ W8, 0x3D262C8
	0x03D262A8 ADD X0, X0, 0x18
	0x03D262AC MOVZ W2, 0x200
	0x03D262B0 MOVZ W3, 0x2
	0x03D262B4 LDP X30, X19, [X31], #0x10
	0x03D262B8 B 0x3D260CC
	0x03D262BC LDP X30, X19, [X31], #0x10
	0x03D262C0 RET
	0x03D262C4 BL 0x1C16F20
	0x03D262C8 ADRP X0, 0x3CD000
	0x03D262CC LDR X0, [X0 + 0x5B0]
	0x03D262D0 BL 0x1C16D08
	0x03D262D4 BL 0x1C16F10
	0x03D262D8 MOV X19, X0
	0x03D262DC ADRP X0, 0x43E000
	0x03D262E0 LDR X0, [X0 + 0x910]
	0x03D262E4 BL 0x1C16D08
	0x03D262E8 MOV X1, X0
	0x03D262EC MOV X0, X19
	0x03D262F0 MOV X2, X31
	0x03D262F4 BL 0x337DF1C
	0x03D262F8 ADRP X0, 0x43E000
	0x03D262FC LDR X0, [X0 + 0x918]
	0x03D26300 BL 0x1C16D08
	0x03D26304 MOV X1, X0
	0x03D26308 MOV X0, X19
	0x03D2630C BL 0x1C16DEC
	0x03D26310 STP X30, X19, [X31 - 0x10]!
	0x03D26314 CBZ X1, 0x3D26354
	0x03D26318 LDRB W8, [X1 + 0xE8]
	0x03D2631C CBZ W8, 0x3D2634C
	0x03D26320 LDRB W8, [X0 + 0x78]
	0x03D26324 CBNZ W8, 0x3D26358
	0x03D26328 ANDS W31, W3, 0x1
	0x03D2632C MOVZ W8, 0x2
	0x03D26330 CSEL W8, W8, W31, NE
	0x03D26334 BFM W8, W2, 0x0, 0x0
	0x03D26338 ADD X0, X0, 0x18
	0x03D2633C MOVZ W3, 0x3
	0x03D26340 MOV W2, W8
	0x03D26344 LDP X30, X19, [X31], #0x10
	0x03D26348 B 0x3D260CC
	0x03D2634C LDP X30, X19, [X31], #0x10
	0x03D26350 RET
	0x03D26354 BL 0x1C16F20
	0x03D26358 ADRP X0, 0x3CD000
	0x03D2635C LDR X0, [X0 + 0x5B0]
	0x03D26360 BL 0x1C16D08
	0x03D26364 BL 0x1C16F10
	0x03D26368 MOV X19, X0
	0x03D2636C ADRP X0, 0x43E000
	0x03D26370 LDR X0, [X0 + 0x920]
	0x03D26374 BL 0x1C16D08
	0x03D26378 MOV X1, X0
	0x03D2637C MOV X0, X19
	0x03D26380 MOV X2, X31
	0x03D26384 BL 0x337DF1C
	0x03D26388 ADRP X0, 0x43E000
	0x03D2638C LDR X0, [X0 + 0x928]
	0x03D26390 BL 0x1C16D08
	0x03D26394 MOV X1, X0
	0x03D26398 MOV X0, X19
	0x03D2639C BL 0x1C16DEC
	0x03D263A0 STP X30, X19, [X31 - 0x10]!
	0x03D263A4 CBZ X1, 0x3D263D4
	0x03D263A8 LDRB W8, [X1 + 0xE8]
	0x03D263AC CBZ W8, 0x3D263CC
	0x03D263B0 LDRB W8, [X0 + 0x78]
	0x03D263B4 CBNZ W8, 0x3D263D8
	0x03D263B8 ADD X0, X0, 0x18
	0x03D263BC MOVZ W2, 0x40
	0x03D263C0 MOVZ W3, 0x4
	0x03D263C4 LDP X30, X19, [X31], #0x10
	0x03D263C8 B 0x3D260CC
	0x03D263CC LDP X30, X19, [X31], #0x10
	0x03D263D0 RET
	0x03D263D4 BL 0x1C16F20
	0x03D263D8 ADRP X0, 0x3CD000
	0x03D263DC LDR X0, [X0 + 0x5B0]
	0x03D263E0 BL 0x1C16D08
	0x03D263E4 BL 0x1C16F10
	0x03D263E8 MOV X19, X0
	0x03D263EC ADRP X0, 0x43E000
	0x03D263F0 LDR X0, [X0 + 0x930]
	0x03D263F4 BL 0x1C16D08
	0x03D263F8 MOV X1, X0
	0x03D263FC MOV X0, X19
	0x03D26400 MOV X2, X31
	0x03D26404 BL 0x337DF1C
	0x03D26408 ADRP X0, 0x43E000
	0x03D2640C LDR X0, [X0 + 0x938]
	0x03D26410 BL 0x1C16D08
	0x03D26414 MOV X1, X0
	0x03D26418 MOV X0, X19
	0x03D2641C BL 0x1C16DEC
	0x03D26420 LDR X0, [X0 + 0x108]
	0x03D26424 RET
	0x03D26428 STR X1, [X0 + 0x108]
	0x03D2642C RET
	0x03D26430 LDR X0, [X0 + 0x110]
	0x03D26434 RET
	0x03D26438 STR X1, [X0 + 0x110]
	0x03D2643C RET
	0x03D26440 LDR X0, [X0 + 0x118]
	0x03D26444 RET
	0x03D26448 STR X1, [X0 + 0x118]
	0x03D2644C RET
	0x03D26450 LDR X0, [X0 + 0x120]
	0x03D26454 RET
	0x03D26458 STR X1, [X0 + 0x120]
	0x03D2645C RET
	0x03D26460 LDR X0, [X0 + 0x128]
	0x03D26464 RET
	0x03D26468 STR X1, [X0 + 0x128]
	0x03D2646C RET
	0x03D26470 LDR X0, [X0 + 0x130]
	0x03D26474 RET
	0x03D26478 STR X1, [X0 + 0x130]
	0x03D2647C RET
	0x03D26480 LDR X0, [X0 + 0x138]
	0x03D26484 RET
	0x03D26488 STR X1, [X0 + 0x138]
	0x03D2648C RET
	0x03D26490 LDR X0, [X0 + 0x210]
	0x03D26494 RET
	0x03D26498 STR X1, [X0 + 0x210]
	0x03D2649C RET
	0x03D264A0 LDRB W0, [X0 + 0x218]
	0x03D264A4 RET
	0x03D264A8 AND W8, W1, 0x1
	0x03D264AC STRB W8, [X0 + 0x218]
	0x03D264B0 RET
	0x03D264B4 LDRB W0, [X0 + 0x219]
	0x03D264B8 RET
	0x03D264BC AND W8, W1, 0x1
	0x03D264C0 STRB W8, [X0 + 0x219]
	0x03D264C4 RET
	0x03D264C8 STR X30, [X31 - 0x30]!
	0x03D264CC STP X22, X21, [X31 + 0x10]
	0x03D264D0 STP X20, X19, [X31 + 0x20]
	0x03D264D4 ADRP X22, 0x6C1000
	0x03D264D8 ADRP X21, 0x3CD000
	0x03D264DC LDRB W8, [X22 + 0xA9C]
	0x03D264E0 LDR X21, [X21 + 0x598]
	0x03D264E4 MOV X20, X1
	0x03D264E8 MOV X19, X0
	0x03D264EC TBNZ X8, 0x0, 0x3D26510
	0x03D264F0 ADRP X0, 0x3CD000
	0x03D264F4 LDR X0, [X0 + 0x598]
	0x03D264F8 BL 0x1C16CF4
	0x03D264FC ADRP X0, 0x3F7000
	0x03D26500 LDR X0, [X0 + 0x240]
	0x03D26504 BL 0x1C16CF4
	0x03D26508 MOVZ W8, 0x1
	0x03D2650C STRB W8, [X22 + 0xA9C]
	0x03D26510 LDR X0, [X21]
	0x03D26514 LDR X21, [X19 + 0x58]
	0x03D26518 LDR W8, [X0 + 0xE0]
	0x03D2651C CBNZ W8, 0x3D26524
	0x03D26520 BL 0x1C16DFC
	0x03D26524 MOV X0, X21
	0x03D26528 MOV X1, X20
	0x03D2652C MOV X2, X31
	0x03D26530 BL 0x3C3883C
	0x03D26534 TBNZ X0, 0x0, 0x3D26568
	0x03D26538 ADRP X8, 0x3F7000
	0x03D2653C LDR X8, [X8 + 0x240]
	0x03D26540 STR X20, [X19 + 0x58]
	0x03D26544 LDR X20, [X19 + 0x68]
	0x03D26548 LDR X0, [X8]
	0x03D2654C LDR W8, [X0 + 0xE0]
	0x03D26550 CBNZ W8, 0x3D26558
	0x03D26554 BL 0x1C16DFC
	0x03D26558 MOV X0, X20
	0x03D2655C MOV X1, X31
	0x03D26560 BL 0x3DE1000
	0x03D26564 STR X31, [X19 + 0x68]
	0x03D26568 LDP X20, X19, [X31 + 0x20]
	0x03D2656C LDP X22, X21, [X31 + 0x10]
	0x03D26570 LDR X30, [X31], #0x30
	0x03D26574 RET
	0x03D26578 STR X30, [X31 - 0x30]!
	0x03D2657C STP X22, X21, [X31 + 0x10]
	0x03D26580 STP X20, X19, [X31 + 0x20]
	0x03D26584 ADRP X22, 0x6C1000
	0x03D26588 ADRP X21, 0x3CD000
	0x03D2658C LDRB W8, [X22 + 0xA9D]
	0x03D26590 LDR X21, [X21 + 0x598]
	0x03D26594 MOV X20, X1
	0x03D26598 MOV X19, X0
	0x03D2659C TBNZ X8, 0x0, 0x3D265C0
	0x03D265A0 ADRP X0, 0x3CD000
	0x03D265A4 LDR X0, [X0 + 0x598]
	0x03D265A8 BL 0x1C16CF4
	0x03D265AC ADRP X0, 0x3F7000
	0x03D265B0 LDR X0, [X0 + 0x240]
	0x03D265B4 BL 0x1C16CF4
	0x03D265B8 MOVZ W8, 0x1
	0x03D265BC STRB W8, [X22 + 0xA9D]
	0x03D265C0 LDR X0, [X21]
	0x03D265C4 LDR X21, [X19 + 0x60]
	0x03D265C8 LDR W8, [X0 + 0xE0]
	0x03D265CC CBNZ W8, 0x3D265D4
	0x03D265D0 BL 0x1C16DFC
	0x03D265D4 MOV X0, X21
	0x03D265D8 MOV X1, X20
	0x03D265DC MOV X2, X31
	0x03D265E0 BL 0x3C3883C
	0x03D265E4 TBNZ X0, 0x0, 0x3D26618
	0x03D265E8 ADRP X8, 0x3F7000
	0x03D265EC LDR X8, [X8 + 0x240]
	0x03D265F0 STR X20, [X19 + 0x60]
	0x03D265F4 LDR X20, [X19 + 0x70]
	0x03D265F8 LDR X0, [X8]
	0x03D265FC LDR W8, [X0 + 0xE0]
	0x03D26600 CBNZ W8, 0x3D26608
	0x03D26604 BL 0x1C16DFC
	0x03D26608 MOV X0, X20
	0x03D2660C MOV X1, X31
	0x03D26610 BL 0x3DE1000
	0x03D26614 STR X31, [X19 + 0x70]
	0x03D26618 LDP X20, X19, [X31 + 0x20]
	0x03D2661C LDP X22, X21, [X31 + 0x10]
	0x03D26620 LDR X30, [X31], #0x30
	0x03D26624 RET
	0x03D26628 STP X30, X21, [X31 - 0x20]!
	0x03D2662C STP X20, X19, [X31 + 0x10]
	0x03D26630 ADRP X20, 0x6C1000
	0x03D26634 ADRP X21, 0x3CD000
	0x03D26638 LDRB W8, [X20 + 0xA9F]
	0x03D2663C LDR X21, [X21 + 0x598]
	0x03D26640 MOV X19, X0
	0x03D26644 TBNZ X8, 0x0, 0x3D26668
	0x03D26648 ADRP X0, 0x3D1000
	0x03D2664C LDR X0, [X0 + 0xCA0]
	0x03D26650 BL 0x1C16CF4
	0x03D26654 ADRP X0, 0x3CD000
	0x03D26658 LDR X0, [X0 + 0x598]
	0x03D2665C BL 0x1C16CF4
	0x03D26660 MOVZ W8, 0x1
	0x03D26664 STRB W8, [X20 + 0xA9F]
	0x03D26668 LDR X0, [X21]
	0x03D2666C LDR X20, [X19 + 0x70]
	0x03D26670 LDR W8, [X0 + 0xE0]
	0x03D26674 CBNZ W8, 0x3D2667C
	0x03D26678 BL 0x1C16DFC
	0x03D2667C MOV X0, X20
	0x03D26680 MOV X1, X31
	0x03D26684 MOV X2, X31
	0x03D26688 BL 0x3C3883C
	0x03D2668C TBZ X0, 0x0, 0x3D26700
	0x03D26690 LDR X0, [X21]
	0x03D26694 LDR X20, [X19 + 0x60]
	0x03D26698 LDR W8, [X0 + 0xE0]
	0x03D2669C CBNZ W8, 0x3D266A4
	0x03D266A0 BL 0x1C16DFC
	0x03D266A4 MOV X0, X20
	0x03D266A8 MOV X1, X31
	0x03D266AC MOV X2, X31
	0x03D266B0 BL 0x3C354F8
	0x03D266B4 TBZ X0, 0x0, 0x3D26700
	0x03D266B8 ADRP X8, 0x3D1000
	0x03D266BC LDR X21, [X19 + 0x60]
	0x03D266C0 LDR X8, [X8 + 0xCA0]
	0x03D266C4 LDR X0, [X8]
	0x03D266C8 BL 0x1C16F10
	0x03D266CC MOV X1, X21
	0x03D266D0 MOV X2, X31
	0x03D266D4 MOV X20, X0
	0x03D266D8 BL 0x3C1454C
	0x03D266DC STR X20, [X19 + 0x70]
	0x03D266E0 CBZ X20, 0x3D26710
	0x03D266E4 MOV X0, X20
	0x03D266E8 MOV X1, X31
	0x03D266EC BL 0x3C396B0
	0x03D266F0 ORR W1, W0, 0x4
	0x03D266F4 MOV X0, X20
	0x03D266F8 MOV X2, X31
	0x03D266FC BL 0x3C396EC
	0x03D26700 LDR X0, [X19 + 0x70]
	0x03D26704 LDP X20, X19, [X31 + 0x10]
	0x03D26708 LDP X30, X21, [X31], #0x20
	0x03D2670C RET
	0x03D26710 BL 0x1C16F20
	0x03D26714 ADD X0, X0, 0x18
	0x03D26718 B 0x3D2671C
	0x03D2671C STP X30, X21, [X31 - 0x20]!
	0x03D26720 STP X20, X19, [X31 + 0x10]
	0x03D26724 ADRP X21, 0x6C1000
	0x03D26728 LDRB W8, [X21 + 0xAAC]
	0x03D2672C MOV W19, W1
	0x03D26730 MOV X20, X0
	0x03D26734 TBNZ X8, 0x0, 0x3D26758
	0x03D26738 ADRP X0, 0x3F6000
	0x03D2673C LDR X0, [X0 + 0xE0]
	0x03D26740 BL 0x1C16CF4
	0x03D26744 ADRP X0, 0x3F6000
	0x03D26748 LDR X0, [X0 + 0xE8]
	0x03D2674C BL 0x1C16CF4
	0x03D26750 MOVZ W8, 0x1
	0x03D26754 STRB W8, [X21 + 0xAAC]
	0x03D26758 LDR X0, [X20]
	0x03D2675C CBZ X0, 0x3D26820
	0x03D26760 ADRP X21, 0x3F6000
	0x03D26764 LDR X21, [X21 + 0xE0]
	0x03D26768 LDRSW X8, [X0 + 0x18]
	0x03D2676C CMP W8, W19
	0x03D26770 B.GT 0x3D26824
	0x03D26774 LDR W11, [X0 + 0x1C]
	0x03D26778 LDR X9, [X0 + 0x10]
	0x03D2677C LDR X10, [X21]
	0x03D26780 ADD W11, W11, 0x1
	0x03D26784 STR W11, [X0 + 0x1C]
	0x03D26788 CBZ X9, 0x3D26820
	0x03D2678C LDR W11, [X9 + 0x18]
	0x03D26790 CMP W8, W11
	0x03D26794 B.CS 0x3D267AC
	0x03D26798 ADD W10, W8, 0x1
	0x03D2679C ADD X8, X9, X8, 0x3, LSL
	0x03D267A0 STR W10, [X0 + 0x18]
	0x03D267A4 STR X31, [X8 + 0x20]
	0x03D267A8 B 0x3D267C0
	0x03D267AC LDR X8, [X10 + 0x20]
	0x03D267B0 MOV X1, X31
	0x03D267B4 LDR X8, [X8 + 0xC0]
	0x03D267B8 LDR X2, [X8 + 0x70]
	0x03D267BC BL 0x301BF90
	0x03D267C0 LDR X0, [X20 + 0x8]
	0x03D267C4 CBZ X0, 0x3D26820
	0x03D267C8 LDR W10, [X0 + 0x1C]
	0x03D267CC LDR X8, [X0 + 0x10]
	0x03D267D0 LDR X9, [X21]
	0x03D267D4 ADD W10, W10, 0x1
	0x03D267D8 STR W10, [X0 + 0x1C]
	0x03D267DC CBZ X8, 0x3D26820
	0x03D267E0 LDRSW X10, [X0 + 0x18]
	0x03D267E4 LDR W11, [X8 + 0x18]
	0x03D267E8 CMP W10, W11
	0x03D267EC B.CS 0x3D26804
	0x03D267F0 ADD W9, W10, 0x1
	0x03D267F4 ADD X8, X8, X10, 0x3, LSL
	0x03D267F8 STR W9, [X0 + 0x18]
	0x03D267FC STR X31, [X8 + 0x20]
	0x03D26800 B 0x3D26818
	0x03D26804 LDR X8, [X9 + 0x20]
	0x03D26808 MOV X1, X31
	0x03D2680C LDR X8, [X8 + 0xC0]
	0x03D26810 LDR X2, [X8 + 0x70]
	0x03D26814 BL 0x301BF90
	0x03D26818 LDR X0, [X20]
	0x03D2681C CBNZ X0, 0x3D26768
	0x03D26820 BL 0x1C16F20
	0x03D26824 LDP X20, X19, [X31 + 0x10]
	0x03D26828 LDP X30, X21, [X31], #0x20
	0x03D2682C RET
	0x03D26830 STP X30, X21, [X31 - 0x20]!
	0x03D26834 STP X20, X19, [X31 + 0x10]
	0x03D26838 ADRP X21, 0x6C1000
	0x03D2683C LDRB W8, [X21 + 0xAA0]
	0x03D26840 MOV X19, X1
	0x03D26844 MOV X20, X0
	0x03D26848 TBNZ X8, 0x0, 0x3D26860
	0x03D2684C ADRP X0, 0x3CD000
	0x03D26850 LDR X0, [X0 + 0xA28]
	0x03D26854 BL 0x1C16CF4
	0x03D26858 MOVZ W8, 0x1
	0x03D2685C STRB W8, [X21 + 0xAA0]
	0x03D26860 CBZ X19, 0x3D268E0
	0x03D26864 ADRP X21, 0x3CD000
	0x03D26868 LDR W8, [X19 + 0xC0]
	0x03D2686C LDR X21, [X21 + 0xA28]
	0x03D26870 CBZ W8, 0x3D2688C
	0x03D26874 ADD X0, X20, 0x18
	0x03D26878 ORN W2, W31, W8, 0x0
	0x03D2687C MOV X1, X19
	0x03D26880 BL 0x3D249B4
	0x03D26884 LDR W20, [X19 + 0xC0]
	0x03D26888 B 0x3D26890
	0x03D2688C MOV W20, W31
	0x03D26890 LDR X0, [X21]
	0x03D26894 LDR W8, [X0 + 0xE0]
	0x03D26898 CBNZ W8, 0x3D268A0
	0x03D2689C BL 0x1C16DFC
	0x03D268A0 CMP W20, 0x0
	0x03D268A4 CSET W0, EQ
	0x03D268A8 MOV X1, X31
	0x03D268AC BL 0x3C06E58
	0x03D268B0 LDR X8, [X19 + 0xA8]
	0x03D268B4 MOV X1, X31
	0x03D268B8 CMP X8, 0x0
	0x03D268BC CSET W0, EQ
	0x03D268C0 BL 0x3C06E58
	0x03D268C4 LDR X8, [X19 + 0xB0]
	0x03D268C8 LDP X20, X19, [X31 + 0x10]
	0x03D268CC MOV X1, X31
	0x03D268D0 CMP X8, 0x0
	0x03D268D4 CSET W0, EQ
	0x03D268D8 LDP X30, X21, [X31], #0x20
	0x03D268DC B 0x3C06E58
	0x03D268E0 BL 0x1C16F20
	0x03D268E4 STR X30, [X31 - 0x20]!
	0x03D268E8 STP X20, X19, [X31 + 0x10]
	0x03D268EC ADRP X20, 0x6C1000
	0x03D268F0 LDRB W8, [X20 + 0xAA1]
	0x03D268F4 MOV X19, X0
	0x03D268F8 TBNZ X8, 0x0, 0x3D26910
	0x03D268FC ADRP X0, 0x43E000
	0x03D26900 LDR X0, [X0 + 0x940]
	0x03D26904 BL 0x1C16CF4
	0x03D26908 MOVZ W8, 0x1
	0x03D2690C STRB W8, [X20 + 0xAA1]
	0x03D26910 LDR X0, [X19 + 0x40]
	0x03D26914 CBZ X0, 0x3D26948
	0x03D26918 ADRP X8, 0x43E000
	0x03D2691C LDR X8, [X8 + 0x940]
	0x03D26920 LDR X1, [X8]
	0x03D26924 BL 0x2EF0E28
	0x03D26928 CBZ X0, 0x3D26948
	0x03D2692C MOV X1, X31
	0x03D26930 MOV X19, X0
	0x03D26934 BL 0x3D34BC0
	0x03D26938 MOV X0, X19
	0x03D2693C LDP X20, X19, [X31 + 0x10]
	0x03D26940 LDR X30, [X31], #0x20
	0x03D26944 RET
	0x03D26948 BL 0x1C16F20
	0x03D2694C STP X30, X21, [X31 - 0x20]!
	0x03D26950 STP X20, X19, [X31 + 0x10]
	0x03D26954 ADRP X21, 0x6C1000
	0x03D26958 LDRB W8, [X21 + 0xAA2]
	0x03D2695C MOV X19, X1
	0x03D26960 MOV X20, X0
	0x03D26964 TBNZ X8, 0x0, 0x3D26988
	0x03D26968 ADRP X0, 0x43E000
	0x03D2696C LDR X0, [X0 + 0x948]
	0x03D26970 BL 0x1C16CF4
	0x03D26974 ADRP X0, 0x3CD000
	0x03D26978 LDR X0, [X0 + 0x598]
	0x03D2697C BL 0x1C16CF4
	0x03D26980 MOVZ W8, 0x1
	0x03D26984 STRB W8, [X21 + 0xAA2]
	0x03D26988 CBZ X19, 0x3D269F8
	0x03D2698C ADRP X8, 0x3CD000
	0x03D26990 LDR X8, [X8 + 0x598]
	0x03D26994 LDR X21, [X19 + 0x38]
	0x03D26998 LDR X0, [X8]
	0x03D2699C LDR W8, [X0 + 0xE0]
	0x03D269A0 CBNZ W8, 0x3D269A8
	0x03D269A4 BL 0x1C16DFC
	0x03D269A8 MOV X0, X21
	0x03D269AC MOV X1, X31
	0x03D269B0 MOV X2, X31
	0x03D269B4 BL 0x3C354F8
	0x03D269B8 TBZ X0, 0x0, 0x3D269C8
	0x03D269BC LDR W8, [X20 + 0x84]
	0x03D269C0 SUB W8, W8, 0x1
	0x03D269C4 STR W8, [X20 + 0x84]
	0x03D269C8 MOV X0, X19
	0x03D269CC MOV X1, X31
	0x03D269D0 BL 0x3D34BC0
	0x03D269D4 LDR X0, [X20 + 0x40]
	0x03D269D8 CBZ X0, 0x3D269F8
	0x03D269DC ADRP X8, 0x43E000
	0x03D269E0 LDR X8, [X8 + 0x948]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+96], D9
	003 Move [X31+104], D8
	004 Move [X31+112], X29
	005 Move [X31+120], X30
	006 Move [X31+128], X28
	007 Move [X31+136], X27
	008 Move [X31+144], X26
	009 Move [X31+152], X25
	010 Move [X31+160], X24
	011 Move [X31+168], X23
	012 Move [X31+176], X22
	013 Move [X31+184], X21
	014 Move [X31+192], X20
	015 Move [X31+200], X19
	016 Move X20, 0x6C3000
	017 Move X21, 0x3F6000
	018 Move W8, [X20+2731]
	019 Move X21, [X21+1216]
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {120}
	025 Move X0, 0x3F6000
	026 Move X0, [X0+1216]
	027 Call 0x1C17CF4
	028 Move X0, 0x440000
	029 Move X0, [X0+1968]
	030 Call 0x1C17CF4
	031 Move X0, 0x440000
	032 Move X0, [X0+1976]
	033 Call 0x1C17CF4
	034 Move X0, 0x440000
	035 Move X0, [X0+1984]
	036 Call 0x1C17CF4
	037 Move X0, 0x440000
	038 Move X0, [X0+1992]
	039 Call 0x1C17CF4
	040 Move X0, 0x440000
	041 Move X0, [X0+2000]
	042 Call 0x1C17CF4
	043 Move X0, 0x440000
	044 Move X0, [X0+2008]
	045 Call 0x1C17CF4
	046 Move X0, 0x440000
	047 Move X0, [X0+2016]
	048 Call 0x1C17CF4
	049 Move X0, 0x440000
	050 Move X0, [X0+2024]
	051 Call 0x1C17CF4
	052 Move X0, 0x43F000
	053 Move X0, [X0+2032]
	054 Call 0x1C17CF4
	055 Move X0, 0x43F000
	056 Move X0, [X0+2040]
	057 Call 0x1C17CF4
	058 Move X0, 0x43F000
	059 Move X0, [X0+2048]
	060 Call 0x1C17CF4
	061 Move X0, 0x43F000
	062 Move X0, [X0+2056]
	063 Call 0x1C17CF4
	064 Move X0, 0x43F000
	065 Move X0, [X0+2064]
	066 Call 0x1C17CF4
	067 Move X0, 0x43F000
	068 Move X0, [X0+2072]
	069 Call 0x1C17CF4
	070 Move X0, 0x43F000
	071 Move X0, [X0+2080]
	072 Call 0x1C17CF4
	073 Move X0, 0x43F000
	074 Move X0, [X0+2088]
	075 Call 0x1C17CF4
	076 Move X0, 0x43F000
	077 Move X0, [X0+2096]
	078 Call 0x1C17CF4
	079 Move X0, 0x43F000
	080 Move X0, [X0+2104]
	081 Call 0x1C17CF4
	082 Move X0, 0x43F000
	083 Move X0, [X0+2112]
	084 Call 0x1C17CF4
	085 Move X0, 0x43F000
	086 Move X0, [X0+2120]
	087 Call 0x1C17CF4
	088 Move X0, 0x43F000
	089 Move X0, [X0+2128]
	090 Call 0x1C17CF4
	091 Move X0, 0x43F000
	092 Move X0, [X0+2136]
	093 Call 0x1C17CF4
	094 Move X0, 0x43F000
	095 Move X0, [X0+2144]
	096 Call 0x1C17CF4
	097 Move X0, 0x43F000
	098 Move X0, [X0+2152]
	099 Call 0x1C17CF4
	100 Move X0, 0x43F000
	101 Move X0, [X0+2160]
	102 Call 0x1C17CF4
	103 Move X0, 0x43F000
	104 Move X0, [X0+2168]
	105 Call 0x1C17CF4
	106 Move X0, 0x43F000
	107 Move X0, [X0+2176]
	108 Call 0x1C17CF4
	109 Move X0, 0x43F000
	110 Move X0, [X0+2184]
	111 Call 0x1C17CF4
	112 Move X0, 0x43F000
	113 Move X0, [X0+2192]
	114 Call 0x1C17CF4
	115 Move X0, 0x43F000
	116 Move X0, [X0+2200]
	117 Call 0x1C17CF4
	118 Move W8, 1
	119 Move [X20+2731], W8
	120 Move X24, 0x43F000
	121 Move X23, 0x43F000
	122 Move X22, 0x43F000
	123 Move X20, 0x43F000
	124 Move X29, 0x43F000
	125 Move X28, 0x43F000
	126 Move X27, 0x43F000
	127 Move X26, 0x43F000
	128 Move X25, 0x43F000
	129 Move X24, [X24+2120]
	130 Move X23, [X23+2016]
	131 Move X22, [X22+2192]
	132 Move X20, [X20+2176]
	133 Move X29, [X29+2112]
	134 Move X28, [X28+2144]
	135 Move X27, [X27+2136]
	136 Move X26, [X26+2200]
	137 Move X25, [X25+2008]
	138 NotImplemented "Instruction MOVI not yet implemented."
	139 Move X0, [X21]
	140 Move [X31+80], W31
	141 Move [X31+44], W31
	142 Move [X31+48], V0
	143 Move [X31+56], V0
	144 Move X21, [X19+272]
	145 Move W8, 0x43BE0000
	146 Move W9, [X0+224]
	147 Move S0, W8
	148 Move W8, 0x43800000
	149 Move S1, W8
	150 NotImplemented "Instruction CMP not yet implemented."
	151 NotImplemented "Instruction FCSEL not yet implemented."
	152 Compare W9, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move X0, [X24]
	156 Move W8, 0x42200000
	157 Move W9, 0x43480000
	158 Move S0, 20
	159 Move S1, W8
	160 Move S2, W9
	161 Move V3, V8
	162 Move X1, X31
	163 Call GUI.Box, X0, X1
	164 Add X0, X19, 136
	165 Move X1, X31
	166 Call UInt32.ToString, X0
	167 Move X8, [X23]
	168 Move X1, X0
	169 Move X2, X31
	170 Move X0, X8
	171 Call String.Concat, X0, X1
	172 Move W9, 0x447A0000
	173 Move W10, 0x42C80000
	174 Move W8, 0x42700000
	175 Move S9, W9
	176 Move S8, W10
	177 Move S0, 30
	178 Move S1, W8
	179 Move V2, V9
	180 Move V3, V8
	181 Move X1, X31
	182 Call GUI.Label, X0, X1
	183 Add X0, X19, 140
	184 Move X1, X31
	185 Call UInt32.ToString, X0
	186 Move X8, [X22]
	187 Move X1, X0
	188 Move X2, X31
	189 Move X0, X8
	190 Call String.Concat, X0, X1
	191 Move W8, 0x42900000
	192 Move S0, 30
	193 Move S1, W8
	194 Move V2, V9
	195 Move V3, V8
	196 Move X1, X31
	197 Call GUI.Label, X0, X1
	198 Add X0, X19, 220
	199 Move X1, X31
	200 Call UInt32.ToString, X0
	201 Move X8, [X20]
	202 Move X1, X0
	203 Move X2, X31
	204 Move X0, X8
	205 Call String.Concat, X0, X1
	206 Move W8, 0x42A80000
	207 Move S0, 30
	208 Move S1, W8
	209 Move V2, V9
	210 Move V3, V8
	211 Move X1, X31
	212 Call GUI.Label, X0, X1
	213 Add X0, X19, 216
	214 Move X1, X31
	215 Call UInt32.ToString, X0
	216 Move X8, [X29]
	217 Move X1, X0
	218 Move X2, X31
	219 Move X0, X8
	220 Call String.Concat, X0, X1
	221 Move W8, 0x42C00000
	222 Move S0, 30
	223 Move S1, W8
	224 Move V2, V9
	225 Move V3, V8
	226 Move X1, X31
	227 Call GUI.Label, X0, X1
	228 Add X0, X19, 144
	229 Move X1, X31
	230 Call UInt32.ToString, X0
	231 Move X8, [X28]
	232 Move X1, X0
	233 Move X2, X31
	234 Move X0, X8
	235 Call String.Concat, X0, X1
	236 Move W8, 0x42D80000
	237 Move S0, 30
	238 Move S1, W8
	239 Move V2, V9
	240 Move V3, V8
	241 Move X1, X31
	242 Call GUI.Label, X0, X1
	243 Add X0, X19, 148
	244 Move X1, X31
	245 Call UInt32.ToString, X0
	246 Move X8, [X27]
	247 Move X1, X0
	248 Move X2, X31
	249 Move X0, X8
	250 Call String.Concat, X0, X1
	251 Move W8, 0x42F00000
	252 Move S0, 30
	253 Move S1, W8
	254 Move V2, V9
	255 Move V3, V8
	256 Move X1, X31
	257 Call GUI.Label, X0, X1
	258 Add X0, X19, 164
	259 Move X1, X31
	260 Call UInt32.ToString, X0
	261 Move X8, [X26]
	262 Move X1, X0
	263 Move X2, X31
	264 Move X0, X8
	265 Call String.Concat, X0, X1
	266 Move W8, 0x43040000
	267 Move S0, 30
	268 Move S1, W8
	269 Move V2, V9
	270 Move V3, V8
	271 Move X1, X31
	272 Call GUI.Label, X0, X1
	273 Add X0, X19, 168
	274 Move X1, X31
	275 Call UInt32.ToString, X0
	276 Move X8, [X25]
	277 Move X1, X0
	278 Move X2, X31
	279 Move X0, X8
	280 Call String.Concat, X0, X1
	281 Move W8, 0x43100000
	282 Move S0, 30
	283 Move S1, W8
	284 Move V2, V9
	285 Move V3, V8
	286 Move X1, X31
	287 Call GUI.Label, X0, X1
	288 Add X0, X19, 172
	289 Move X1, X31
	290 Call UInt32.ToString, X0
	291 Move X8, 0x43F000
	292 Move X8, [X8+2184]
	293 Move X1, X0
	294 Move X2, X31
	295 Move X8, [X8]
	296 Move X0, X8
	297 Call String.Concat, X0, X1
	298 Move W8, 0x431C0000
	299 Move S0, 30
	300 Move S1, W8
	301 Move V2, V9
	302 Move V3, V8
	303 Move X1, X31
	304 Call GUI.Label, X0, X1
	305 Add X0, X19, 156
	306 Move X1, X31
	307 Call UInt32.ToString, X0
	308 Move X8, 0x43F000
	309 Move X8, [X8+2152]
	310 Move X1, X0
	311 Move X2, X31
	312 Move X8, [X8]
	313 Move X0, X8
	314 Call String.Concat, X0, X1
	315 Move W8, 0x43280000
	316 Move S0, 30
	317 Move S1, W8
	318 Move V2, V9
	319 Move V3, V8
	320 Move X1, X31
	321 Call GUI.Label, X0, X1
	322 Add X0, X19, 160
	323 Move X1, X31
	324 Call UInt32.ToString, X0
	325 Move X8, 0x43F000
	326 Move X8, [X8+2168]
	327 Move X1, X0
	328 Move X2, X31
	329 Move X8, [X8]
	330 Move X0, X8
	331 Call String.Concat, X0, X1
	332 Move W8, 0x43340000
	333 Move S0, 30
	334 Move S1, W8
	335 Move V2, V9
	336 Move V3, V8
	337 Move X1, X31
	338 Call GUI.Label, X0, X1
	339 Add X0, X19, 204
	340 Move X1, X31
	341 Call UInt32.ToString, X0
	342 Move X8, 0x43F000
	343 Move X8, [X8+2104]
	344 Move X1, X0
	345 Move X2, X31
	346 Move X8, [X8]
	347 Move X0, X8
	348 Call String.Concat, X0, X1
	349 Move W8, 0x43400000
	350 Move S0, 30
	351 Move S1, W8
	352 Move V2, V9
	353 Move V3, V8
	354 Move X1, X31
	355 Call GUI.Label, X0, X1
	356 Add X0, X19, 208
	357 Move X1, X31
	358 Call UInt32.ToString, X0
	359 Move X8, 0x43F000
	360 Move X8, [X8+2024]
	361 Move X1, X0
	362 Move X2, X31
	363 Move X8, [X8]
	364 Move X0, X8
	365 Call String.Concat, X0, X1
	366 Move W8, 0x434C0000
	367 Move S0, 30
	368 Move S1, W8
	369 Move V2, V9
	370 Move V3, V8
	371 Move X1, X31
	372 Call GUI.Label, X0, X1
	373 Add X0, X19, 200
	374 Move X1, X31
	375 Call UInt32.ToString, X0
	376 Move X8, 0x43F000
	377 Move X8, [X8+2072]
	378 Move X1, X0
	379 Move X2, X31
	380 Move X8, [X8]
	381 Move X0, X8
	382 Call String.Concat, X0, X1
	383 Move W8, 0x43580000
	384 Move S0, 30
	385 Move S1, W8
	386 Move V2, V9
	387 Move V3, V8
	388 Move X1, X31
	389 Call GUI.Label, X0, X1
	390 Add X0, X19, 212
	391 Move X1, X31
	392 Call UInt32.ToString, X0
	393 Move X8, 0x43F000
	394 Move X8, [X8+1984]
	395 Move X1, X0
	396 Move X2, X31
	397 Move X8, [X8]
	398 Move X0, X8
	399 Call String.Concat, X0, X1
	400 Move W8, 0x43640000
	401 Move S0, 30
	402 Move S1, W8
	403 Move V2, V9
	404 Move V3, V8
	405 Move X1, X31
	406 Call GUI.Label, X0, X1
	407 Add X0, X19, 184
	408 Move X1, X31
	409 Call UInt32.ToString, X0
	410 Move X8, 0x43F000
	411 Move X8, [X8+2032]
	412 Move X1, X0
	413 Move X2, X31
	414 Move X8, [X8]
	415 Move X0, X8
	416 Call String.Concat, X0, X1
	417 Move W8, 0x43700000
	418 Move S0, 30
	419 Move S1, W8
	420 Move V2, V9
	421 Move V3, V8
	422 Move X1, X31
	423 Call GUI.Label, X0, X1
	424 Add X0, X19, 188
	425 Move X1, X31
	426 Call UInt32.ToString, X0
	427 Move X8, 0x43F000
	428 Move X8, [X8+2048]
	429 Move X1, X0
	430 Move X2, X31
	431 Move X8, [X8]
	432 Move X0, X8
	433 Call String.Concat, X0, X1
	434 Move W8, 0x437C0000
	435 Move S0, 30
	436 Move S1, W8
	437 Move V2, V9
	438 Move V3, V8
	439 Move X1, X31
	440 Call GUI.Label, X0, X1
	441 Add X0, X19, 192
	442 Move X1, X31
	443 Call UInt32.ToString, X0
	444 Move X8, 0x43F000
	445 Move X8, [X8+2064]
	446 Move X1, X0
	447 Move X2, X31
	448 Move X8, [X8]
	449 Move X0, X8
	450 Call String.Concat, X0, X1
	451 Move W8, 0x43840000
	452 Move S0, 30
	453 Move S1, W8
	454 Move V2, V9
	455 Move V3, V8
	456 Move X1, X31
	457 Call GUI.Label, X0, X1
	458 Add X0, X19, 196
	459 Move X1, X31
	460 Call UInt32.ToString, X0
	461 Move X8, 0x43F000
	462 Move X8, [X8+1992]
	463 Move X1, X0
	464 Move X2, X31
	465 Move X8, [X8]
	466 Move X0, X8
	467 Call String.Concat, X0, X1
	468 Move W8, 0x438A0000
	469 Move S0, 30
	470 Move S1, W8
	471 Move V2, V9
	472 Move V3, V8
	473 Move X1, X31
	474 Call GUI.Label, X0, X1
	475 Add X0, X19, 224
	476 Move X1, X31
	477 Call UInt32.ToString, X0
	478 Move X8, 0x43F000
	479 Move X8, [X8+1976]
	480 Move X1, X0
	481 Move X2, X31
	482 Move X8, [X8]
	483 Move X0, X8
	484 Call String.Concat, X0, X1
	485 Move W8, 0x43900000
	486 Move S0, 30
	487 Move S1, W8
	488 Move V2, V9
	489 Move V3, V8
	490 Move X1, X31
	491 Call GUI.Label, X0, X1
	492 Compare X21, 0
	493 JumpIfEqual {682}
	494 Move X0, [X19+272]
	495 Compare X0, 0
	496 JumpIfEqual {698}
	497 Move X19, 0x43F000
	498 Move X28, 0x43F000
	499 Move X27, 0x43F000
	500 Move X26, 0x43F000
	501 Move X25, 0x43F000
	502 Move X24, 0x43F000
	503 Move X22, 0x43F000
	504 Move X21, 0x43F000
	505 Move X20, 0x43F000
	506 Move X19, [X19+2128]
	507 Move X28, [X28+2096]
	508 Move X27, [X27+2160]
	509 Move X26, [X26+1968]
	510 Move X25, [X25+2080]
	511 Move X24, [X24+2000]
	512 Move X22, [X22+2056]
	513 Move X21, [X21+2088]
	514 Move X20, [X20+2040]
	515 Add X8, X31, 8
	516 Move X1, X31
	517 Call UIRenderDevice.GatherDrawStatistics, X0
	518 NotImplemented "Instruction LDUR not yet implemented."
	519 NotImplemented "Instruction LDUR not yet implemented."
	520 Move W8, [X31+40]
	521 Add X0, X31, 48
	522 Move X1, X31
	523 Move [X31+48], V0
	524 Move [X31+56], V1
	525 Move [X31+80], W8
	526 Add X23, X31, 48
	527 Call Int32.ToString, X0
	528 Move X8, [X19]
	529 Move X1, X0
	530 Move X2, X31
	531 Move X0, X8
	532 Call String.Concat, X0, X1
	533 Move X8, 0x3F5000
	534 Move X8, [X8+1216]
	535 Move X19, X0
	536 Move X8, [X8]
	537 Move W9, [X8+224]
	538 Compare W9, 0
	539 JumpIfNotEqual {542}
	540 Move X0, X8
	541 Call 0x1C17DFC
	542 Move W9, 0x447A0000
	543 Move W10, 0x42C80000
	544 Move W8, 0x439C0000
	545 Move S9, W9
	546 Move S8, W10
	547 Move S0, 30
	548 Move S1, W8
	549 Move V2, V9
	550 Move V3, V8
	551 Move X0, X19
	552 Move X1, X31
	553 Call GUI.Label, X0, X1
	554 Or X0, X23, 15
	555 Move X1, X31
	556 Call UInt32.ToString, X0
	557 Move X8, [X28]
	558 Move X1, X0
	559 Move X2, X31
	560 Move X0, X8
	561 Call String.Concat, X0, X1
	562 Move W8, 0x43A20000
	563 Move S0, 30
	564 Move S1, W8
	565 Move V2, V9
	566 Move V3, V8
	567 Move X1, X31
	568 Call GUI.Label, X0, X1
	569 Or X0, X23, 15
	570 Move X1, X31
	571 Call UInt32.ToString, X0
	572 Move X8, [X27]
	573 Move X1, X0
	574 Move X2, X31
	575 Move X0, X8
	576 Call String.Concat, X0, X1
	577 Move W8, 0x43A80000
	578 Move S0, 30
	579 Move S1, W8
	580 Move V2, V9
	581 Move V3, V8
	582 Move X1, X31
	583 Call GUI.Label, X0, X1
	584 Add X0, X23, 20
	585 Move X1, X31
	586 Call UInt32.ToString, X0
	587 Move X8, [X26]
	588 Move X1, X0
	589 Move X2, X31
	590 Move X0, X8
	591 Call String.Concat, X0, X1
	592 Move W8, 0x43AE0000
	593 Move S0, 30
	594 Move S1, W8
	595 Move V2, V9
	596 Move V3, V8
	597 Move X1, X31
	598 Call GUI.Label, X0, X1
	599 Add X0, X23, 24
	600 Move X1, X31
	601 Call UInt32.ToString, X0
	602 Move X8, [X25]
	603 Move X1, X0
	604 Move X2, X31
	605 Move X0, X8
	606 Call String.Concat, X0, X1
	607 Move W8, 0x43B40000
	608 Move S0, 30
	609 Move S1, W8
	610 Move V2, V9
	611 Move V3, V8
	612 Move X1, X31
	613 Call GUI.Label, X0, X1
	614 Add X0, X23, 16
	615 Move X1, X31
	616 Call UInt32.ToString, X0
	617 Move X8, [X24]
	618 Move X1, X0
	619 Move X2, X31
	620 Move X0, X8
	621 Call String.Concat, X0, X1
	622 Move W8, 0x43BA0000
	623 Move S0, 30
	624 Move S1, W8
	625 Move V2, V9
	626 Move V3, V8
	627 Move X1, X31
	628 Call GUI.Label, X0, X1
	629 Add X0, X23, 32
	630 Move X1, X31
	631 Call UInt32.ToString, X0
	632 Move X8, [X22]
	633 Move X1, X0
	634 Move X2, X31
	635 Move X0, X8
	636 Call String.Concat, X0, X1
	637 Move W8, 0x43C00000
	638 Move S0, 30
	639 Move S1, W8
	640 Move V2, V9
	641 Move V3, V8
	642 Move X1, X31
	643 Call GUI.Label, X0, X1
	644 Add X0, X23, 28
	645 Move X1, X31
	646 Call UInt32.ToString, X0
	647 Move X8, [X21]
	648 Move X1, X0
	649 Move X2, X31
	650 Move X0, X8
	651 Call String.Concat, X0, X1
	652 Move W8, 0x43C60000
	653 Move S0, 30
	654 Move S1, W8
	655 Move V2, V9
	656 Move V3, V8
	657 Move X1, X31
	658 Call GUI.Label, X0, X1
	659 Move W8, [X31+52]
	660 Move W9, 0xAAAB
	661 NotImplemented "Instruction MOVK not yet implemented."
	662 Add X0, X31, 44
	663 Multiply X8, X8, X9
	664 Move X8, X8
	665 ShiftRight X8, 33
	666 And X8, X8, 0x7FFFFFFF
	667 Move X1, X31
	668 Move [X31+44], W8
	669 Call UInt32.ToString, X0
	670 Move X8, [X20]
	671 Move X1, X0
	672 Move X2, X31
	673 Move X0, X8
	674 Call String.Concat, X0, X1
	675 Move W8, 0x43CC0000
	676 Move S0, 30
	677 Move S1, W8
	678 Move V2, V9
	679 Move V3, V8
	680 Move X1, X31
	681 Call GUI.Label, X0, X1
	682 Move X20, [X31+192]
	683 Move X19, [X31+200]
	684 Move X22, [X31+176]
	685 Move X21, [X31+184]
	686 Move X24, [X31+160]
	687 Move X23, [X31+168]
	688 Move X26, [X31+144]
	689 Move X25, [X31+152]
	690 Move X28, [X31+128]
	691 Move X27, [X31+136]
	692 Move X29, [X31+112]
	693 Move X30, [X31+120]
	694 Move D9, [X31+96]
	695 Move D8, [X31+104]
	696 Add X31, X31, 208
	697 Return 
	698 Call 0x1C17F20

Method: UnityEngine.UIElements.VisualElement GetFirstElementInPanel(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D2518C FCSEL S8, S1, S0, EQ
	0x03D25190 CBNZ W9, 0x3D25198
	0x03D25194 BL 0x1C16DFC
	0x03D25198 LDR X0, [X24]
	0x03D2519C MOVZ W8, 0x42200000
	0x03D251A0 MOVZ W9, 0x43480000
	0x03D251A4 FMOV S0, 20
	0x03D251A8 FMOV S1, W8
	0x03D251AC FMOV S2, W9
	0x03D251B0 MOV V3.16B, V8.16B
	0x03D251B4 MOV X1, X31
	0x03D251B8 BL 0x3C68BB0
	0x03D251BC ADD X0, X19, 0x88
	0x03D251C0 MOV X1, X31
	0x03D251C4 BL 0x3399B00
	0x03D251C8 LDR X8, [X23]
	0x03D251CC MOV X1, X0
	0x03D251D0 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {17}
	004 Move X9, X31
	005 Move X8, X0
	006 Move X0, [X0+136]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 Compare X0, 0
	010 JumpIfEqual {18}
	011 Compare X9, 0
	012 JumpIfEqual {21}
	013 Move W10, [X9+232]
	014 Move X9, X0
	015 Compare W10, 0
	016 JumpIfNotEqual {5}
	017 Move X8, X31
	018 Move X0, X8
	019 Move X30, [X31+16]
	020 Return X0
	021 Call 0x1C17F20

