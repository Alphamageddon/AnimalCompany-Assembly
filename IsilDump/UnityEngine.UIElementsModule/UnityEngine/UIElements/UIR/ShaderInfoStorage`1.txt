Type: UnityEngine.UIElements.UIR.ShaderInfoStorage`1

Method: System.Void .ctor(UnityEngine.TextureFormat format, System.Func`2<UnityEngine.Color, T> convert, System.Int32 initialSize = 64, System.Int32 maxSize = 4096)

Disassembly:
	0x025E4F88 CSET W10, GE
	0x025E4F8C AND W23, W9, W10, 0x0
	0x025E4F90 CBNZ W8, 0x25E4F98
	0x025E4F94 BL 0x1C16DFC
	0x025E4F98 MOV W0, W23
	0x025E4F9C MOV X1, X31
	0x025E4FA0 BL 0x3C06E58
	0x025E4FA4 MUL W8, W22, W20
	0x025E4FA8 CMP W8, 0x1
	0x025E4FAC B.LT 0x25E4FF8
	0x025E4FB0 MOV W11, W31
	0x025E4FB4 MOV W9, W31
	0x025E4FB8 MOV W10, W20
	0x025E4FBC CMP W11, W10
	0x025E4FC0 B.GE 0x25E4FE8
	0x025E4FC4 SXTW X13, W10
	0x025E4FC8 ADD X12, X21, W11, 0x2, SXTW
	0x025E4FCC SUB X11, X13, W11, SXTW
	0x025E4FD0 LDR W13, [X12], #0x4
	0x025E4FD4 SUBS X11, X11, 0x1
	0x025E4FD8 STR W13, [X19, W9, SXTW]
	0x025E4FDC ADD W9, W9, 0x1
	0x025E4FE0 B.NE 0x25E4FD0
	0x025E4FE4 MOV W11, W10
	0x025E4FE8 ADD W10, W10, W20
	0x025E4FEC CMP W11, W8
	0x025E4FF0 ADD W9, W24, W9
	0x025E4FF4 B.LT 0x25E4FBC
	0x025E4FF8 LDP X20, X19, [X31 + 0x40]
	0x025E4FFC LDP X22, X21, [X31 + 0x30]
	0x025E5000 LDP X24, X23, [X31 + 0x20]
	0x025E5004 LDP X26, X25, [X31 + 0x10]
	0x025E5008 LDR X30, [X31], #0x50
	0x025E500C RET
	0x025E5010 STP X30, X25, [X31 - 0x40]!
	0x025E5014 STP X24, X23, [X31 + 0x10]
	0x025E5018 STP X22, X21, [X31 + 0x20]
	0x025E501C STP X20, X19, [X31 + 0x30]
	0x025E5020 ADRP X25, 0x1DF4000
	0x025E5024 ADRP X24, 0x1B38000
	0x025E5028 LDRB W8, [X25 + 0xFB4]
	0x025E502C LDR X24, [X24 + 0x238]
	0x025E5030 MOV W20, W4
	0x025E5034 MOV W23, W3
	0x025E5038 MOV X19, X2
	0x025E503C MOV W22, W1
	0x025E5040 MOV X21, X0
	0x025E5044 TBNZ X8, 0x0, 0x25E5068
	0x025E5048 ADRP X0, 0x1B38000
	0x025E504C LDR X0, [X0 + 0x238]
	0x025E5050 BL 0x1C16CF4
	0x025E5054 ADRP X0, 0x1B0E000
	0x025E5058 LDR X0, [X0 + 0xA28]
	0x025E505C BL 0x1C16CF4
	0x025E5060 MOVZ W8, 0x1
	0x025E5064 STRB W8, [X25 + 0xFB4]
	0x025E5068 LDR X0, [X24]
	0x025E506C ADRP X24, 0x1B0E000
	0x025E5070 LDR W8, [X0 + 0xE0]
	0x025E5074 LDR X24, [X24 + 0xA28]
	0x025E5078 CBNZ W8, 0x25E5080
	0x025E507C BL 0x1C16DFC
	0x025E5080 MOV X0, X21
	0x025E5084 MOV X1, X31
	0x025E5088 BL 0x3D27AE4
	0x025E508C MOV X0, X31
	0x025E5090 BL 0x3C3C1C4
	0x025E5094 LDR X8, [X24]
	0x025E5098 MOV W24, W0
	0x025E509C LDR W9, [X8 + 0xE0]
	0x025E50A0 CBNZ W9, 0x25E50AC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x1DF6000
	010 Move X24, 0x1B3A000
	011 Move W8, [X25+4008]
	012 Move X24, [X24+568]
	013 Move W20, W4
	014 Move W23, W3
	015 Move X19, X2
	016 Move W22, W1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x1B3A000
	023 Move X0, [X0+568]
	024 Call 0x1C17CF4
	025 Move X0, 0x1B10000
	026 Move X0, [X0+2600]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+4008], W8
	030 Move X0, [X24]
	031 Move X24, 0x1B10000
	032 Move W8, [X0+224]
	033 Move X24, [X24+2600]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X21
	038 Move X1, X31
	039 Call BaseShaderInfoStorage..ctor, X0
	040 Move X0, X31
	041 Call SystemInfo.get_maxTextureSize
	042 Move X8, [X24]
	043 Move W24, W0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSET not yet implemented."
	051 Move X1, X31
	052 Call Debug.Assert, X0
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSET not yet implemented."
	055 Move X1, X31
	056 Call Debug.Assert, X0
	057 Move W0, W23
	058 Move X1, X31
	059 Call Mathf.IsPowerOfTwo, X0
	060 And W0, W0, 1
	061 Move X1, X31
	062 Call Debug.Assert, X0
	063 Move W0, W20
	064 Move X1, X31
	065 Call Mathf.IsPowerOfTwo, X0
	066 And W0, W0, 1
	067 Move X1, X31
	068 Call Debug.Assert, X0
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSET not yet implemented."
	071 Move X1, X31
	072 Call Debug.Assert, X0
	073 Move [X21+20], W23
	074 Move [X21+24], W20
	075 Move [X21+28], W22
	076 Move [X21+32], X19
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X24, [X31+16]
	082 Move X23, [X31+24]
	083 Move X30, [X31+64]
	084 Move X25, [X31+72]
	085 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x025E50A4 MOV X0, X8
	0x025E50A8 BL 0x1C16DFC
	0x025E50AC CMP W24, W20
	0x025E50B0 CSET W0, GE
	0x025E50B4 MOV X1, X31
	0x025E50B8 BL 0x3C06E58
	0x025E50BC CMP W23, W20
	0x025E50C0 CSET W0, LE
	0x025E50C4 MOV X1, X31
	0x025E50C8 BL 0x3C06E58
	0x025E50CC MOV W0, W23
	0x025E50D0 MOV X1, X31
	0x025E50D4 BL 0x3C1ED70
	0x025E50D8 AND W0, W0, 0x1
	0x025E50DC MOV X1, X31
	0x025E50E0 BL 0x3C06E58
	0x025E50E4 MOV W0, W20
	0x025E50E8 MOV X1, X31
	0x025E50EC BL 0x3C1ED70
	0x025E50F0 AND W0, W0, 0x1
	0x025E50F4 MOV X1, X31
	0x025E50F8 BL 0x3C06E58
	0x025E50FC CMP X19, 0x0
	0x025E5100 CSET W0, NE
	0x025E5104 MOV X1, X31
	0x025E5108 BL 0x3C06E58
	0x025E510C STP W23, W20, [X21 + 0x14]
	0x025E5110 STR W22, [X21 + 0x1C]
	0x025E5114 STR X19, [X21 + 0x20]
	0x025E5118 LDP X20, X19, [X31 + 0x30]
	0x025E511C LDP X22, X21, [X31 + 0x20]
	0x025E5120 LDP X24, X23, [X31 + 0x10]
	0x025E5124 LDP X30, X25, [X31], #0x40
	0x025E5128 RET
	0x025E512C STR X30, [X31 - 0x30]!
	0x025E5130 STP X22, X21, [X31 + 0x10]
	0x025E5134 STP X20, X19, [X31 + 0x20]
	0x025E5138 ADRP X21, 0x1DF4000
	0x025E513C LDRB W8, [X21 + 0xFB5]
	0x025E5140 MOV W19, W1
	0x025E5144 MOV X20, X0
	0x025E5148 TBNZ X8, 0x0, 0x25E5160
	0x025E514C ADRP X0, 0x1B38000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1DF5000
	007 Move W8, [X21+4009]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1B39000
	015 Move X0, [X0+576]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+4009], W8
	019 Compare X20, 0
	020 JumpIfEqual {60}
	021 Move W8, [X20+16]
	022 Compare W8, 0
	023 JumpIfNotEqual {50}
	024 Move TEMP, X19
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {50}
	028 Move X8, 0x1B39000
	029 Move X8, [X8+576]
	030 Move X22, X20
	031 Add X22, X22, 48
	032 Move X21, [X22]
	033 Move X0, [X8]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X21
	039 Move X1, X31
	040 Call UIRUtility.Destroy, X0
	041 Move [X22], X31
	042 Move [X22+8], X31
	043 Move [X22+16], X31
	044 Move X0, [X20+40]
	045 Compare X0, 0
	046 JumpIfEqual {49}
	047 Move X1, X31
	048 Call UIRAtlasAllocator.Dispose, X0
	049 Move [X20+40], X31
	050 And W1, W19, 1
	051 Move X0, X20
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X2, X31
	057 Move X30, [X31+48]
	058 Call BaseShaderInfoStorage.Dispose, X0, X1
	059 Return 
	060 Call 0x1C17F20

Method: UnityEngine.Texture2D get_texture()

Disassembly:
	0x025E5150 LDR X0, [X0 + 0x240]
	0x025E5154 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Boolean AllocateRect(System.Int32 width, System.Int32 height, out UnityEngine.RectInt uvs)

Disassembly:
	0x025E5158 MOVZ W8, 0x1
	0x025E515C STRB W8, [X21 + 0xFB5]
	0x025E5160 CBZ X20, 0x25E51D4
	0x025E5164 LDRB W8, [X20 + 0x10]
	0x025E5168 CBNZ W8, 0x25E51B8
	0x025E516C TBZ X19, 0x0, 0x25E51B8
	0x025E5170 ADRP X8, 0x1B38000
	0x025E5174 LDR X8, [X8 + 0x240]
	0x025E5178 MOV X22, X20
	0x025E517C LDR X21, [X22 + 0x30]!
	0x025E5180 LDR X0, [X8]
	0x025E5184 LDR W8, [X0 + 0xE0]
	0x025E5188 CBNZ W8, 0x25E5190
	0x025E518C BL 0x1C16DFC
	0x025E5190 MOV X0, X21
	0x025E5194 MOV X1, X31
	0x025E5198 BL 0x3DE1000
	0x025E519C STP X31, X31, [X22]
	0x025E51A0 STR X31, [X22 + 0x10]
	0x025E51A4 LDR X0, [X20 + 0x28]
	0x025E51A8 CBZ X0, 0x25E51B4
	0x025E51AC MOV X1, X31
	0x025E51B0 BL 0x3DC0ABC
	0x025E51B4 STR X31, [X20 + 0x28]
	0x025E51B8 AND W1, W19, 0x1
	0x025E51BC MOV X0, X20
	0x025E51C0 LDP X20, X19, [X31 + 0x20]
	0x025E51C4 LDP X22, X21, [X31 + 0x10]
	0x025E51C8 MOV X2, X31
	0x025E51CC LDR X30, [X31], #0x30
	0x025E51D0 B 0x3D27ACC
	0x025E51D4 BL 0x1C16F20
	0x025E51D8 LDR X0, [X0 + 0x30]
	0x025E51DC RET
	0x025E51E0 STR X30, [X31 - 0x50]!
	0x025E51E4 STP X26, X25, [X31 + 0x10]
	0x025E51E8 STP X24, X23, [X31 + 0x20]
	0x025E51EC STP X22, X21, [X31 + 0x30]
	0x025E51F0 STP X20, X19, [X31 + 0x40]
	0x025E51F4 ADRP X24, 0x1DF4000
	0x025E51F8 LDRB W8, [X24 + 0xFB6]
	0x025E51FC MOV X21, X4
	0x025E5200 MOV X19, X3
	0x025E5204 MOV W22, W2
	0x025E5208 MOV W23, W1
	0x025E520C MOV X20, X0
	0x025E5210 TBNZ X8, 0x0, 0x25E5228
	0x025E5214 ADRP X0, 0x1B38000
	0x025E5218 LDR X0, [X0 + 0x248]
	0x025E521C BL 0x1C16CF4
	0x025E5220 MOVZ W8, 0x1
	0x025E5224 STRB W8, [X24 + 0xFB6]
	0x025E5228 CBZ X20, 0x25E52E4
	0x025E522C LDRB W8, [X20 + 0x10]
	0x025E5230 CBZ W8, 0x25E524C
	0x025E5234 MOV X0, X20
	0x025E5238 MOV X1, X31
	0x025E523C BL 0x3D909FC
	0x025E5240 MOV W0, W31
	0x025E5244 STP X31, X31, [X19]
	0x025E5248 B 0x25E52CC
	0x025E524C LDR X24, [X20 + 0x28]
	0x025E5250 CBNZ X24, 0x25E5284
	0x025E5254 ADRP X8, 0x1B38000
	0x025E5258 LDP W25, W26, [X20 + 0x14]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x1DF5000
	011 Move W8, [X24+4010]
	012 Move X21, X4
	013 Move X19, X3
	014 Move W22, W2
	015 Move W23, W1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x1B39000
	022 Move X0, [X0+584]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X24+4010], W8
	026 Compare X20, 0
	027 JumpIfEqual {84}
	028 Move W8, [X20+16]
	029 Compare W8, 0
	030 JumpIfEqual {37}
	031 Move X0, X20
	032 Move X1, X31
	033 Call DisposeHelper.NotifyDisposedUsed, X0
	034 Move W0, W31
	035 Move [X19], X31
	036 Move [X19+8], X31
	037 Move X24, [X20+40]
	038 Compare X24, 0
	039 JumpIfNotEqual {53}
	040 Move X8, 0x1B39000
	041 Move W25, [X20+20]
	042 Move W26, [X20+24]
	043 Move X8, [X8+584]
	044 Move X0, [X8]
	045 Call 0x1C17F10
	046 Move W1, W25
	047 Move W2, W26
	048 Move W3, W31
	049 Move X4, X31
	050 Move X24, X0
	051 Call UIRAtlasAllocator..ctor, X0, X1, X2, X3
	052 Move [X20+40], X24
	053 Compare X24, 0
	054 JumpIfEqual {84}
	055 Move X0, X24
	056 Move W1, W23
	057 Move W2, W22
	058 Move X3, X19
	059 Move X4, X31
	060 Call UIRAtlasAllocator.TryAllocate, X0, X1, X2, X3
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {73}
	065 Move [X19+8], W23
	066 Move [X19+12], W22
	067 Move X8, [X21+32]
	068 Move X0, X20
	069 Move X8, [X8+192]
	070 Move X1, [X8+24]
	071 Call 0x25E53FC, X0
	072 Move W0, 1
	073 Move W0, W31
	074 Move X20, [X31+64]
	075 Move X19, [X31+72]
	076 Move X22, [X31+48]
	077 Move X21, [X31+56]
	078 Move X24, [X31+32]
	079 Move X23, [X31+40]
	080 Move X26, [X31+16]
	081 Move X25, [X31+24]
	082 Move X30, [X31+80]
	083 Return X0
	084 Call 0x1C17F20

Method: System.Void SetTexel(System.Int32 x, System.Int32 y, UnityEngine.Color color)

Disassembly:
	0x025E525C LDR X8, [X8 + 0x248]
	0x025E5260 LDR X0, [X8]
	0x025E5264 BL 0x1C16F10
	0x025E5268 MOV W1, W25
	0x025E526C MOV W2, W26
	0x025E5270 MOV W3, W31
	0x025E5274 MOV X4, X31
	0x025E5278 MOV X24, X0
	0x025E527C BL 0x3DC0DF8
	0x025E5280 STR X24, [X20 + 0x28]
	0x025E5284 CBZ X24, 0x25E52E4
	0x025E5288 MOV X0, X24
	0x025E528C MOV W1, W23
	0x025E5290 MOV W2, W22
	0x025E5294 MOV X3, X19
	0x025E5298 MOV X4, X31
	0x025E529C BL 0x3DC112C
	0x025E52A0 TBZ X0, 0x0, 0x25E52C8
	0x025E52A4 STP W23, W22, [X19 + 0x8]
	0x025E52A8 LDR X8, [X21 + 0x20]
	0x025E52AC MOV X0, X20
	0x025E52B0 LDR X8, [X8 + 0xC0]
	0x025E52B4 LDR X1, [X8 + 0x18]
	0x025E52B8 LDR X8, [X1]
	0x025E52BC BLR X8
	0x025E52C0 MOVZ W0, 0x1
	0x025E52C4 B 0x25E52CC
	0x025E52C8 MOV W0, W31
	0x025E52CC LDP X20, X19, [X31 + 0x40]
	0x025E52D0 LDP X22, X21, [X31 + 0x30]
	0x025E52D4 LDP X24, X23, [X31 + 0x20]
	0x025E52D8 LDP X26, X25, [X31 + 0x10]
	0x025E52DC LDR X30, [X31], #0x50
	0x025E52E0 RET
	0x025E52E4 BL 0x1C16F20
	0x025E52E8 STP D11, D10, [X31 - 0x70]!
	0x025E52EC STP D9, D8, [X31 + 0x10]
	0x025E52F0 STP X29, X30, [X31 + 0x20]
	0x025E52F4 STP X26, X25, [X31 + 0x30]
	0x025E52F8 STP X24, X23, [X31 + 0x40]
	0x025E52FC STP X22, X21, [X31 + 0x50]
	0x025E5300 STP X20, X19, [X31 + 0x60]
	0x025E5304 ADD X29, X31, 0x20
	0x025E5308 SUB X31, X31, 0x30
	0x025E530C MRS X25, 0xC000
	0x025E5310 LDR X8, [X25 + 0x28]
	0x025E5314 ADD X10, X31, 0x0
	0x025E5318 STUR X8, [X29 - 0x28]
	0x025E531C LDR X8, [X3 + 0x20]
	0x025E5320 LDR X8, [X8 + 0xC0]
	0x025E5324 LDR X9, [X8 + 0x40]
	0x025E5328 LDR W9, [X9 + 0xFC]
	0x025E532C ADD X9, X9, 0xF
	0x025E5330 AND X9, X9, 0x1FFFFFFFF
	0x025E5334 SUB X22, X10, X9
	0x025E5338 ADD X31, X22, 0x0
	0x025E533C CBZ X0, 0x25E5464
	0x025E5340 LDRB W9, [X0 + 0x10]
	0x025E5344 MOV X24, X0
	0x025E5348 CBZ W9, 0x25E535C

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Compare X0, 0
	011 JumpIfEqual {83}
	012 Move W8, [X0+16]
	013 Move X20, X0
	014 Compare W8, 0
	015 JumpIfEqual {29}
	016 Move X0, X20
	017 Move X20, [X31+64]
	018 Move X19, [X31+72]
	019 Move X22, [X31+48]
	020 Move X21, [X31+56]
	021 Move X30, [X31+32]
	022 Move D9, [X31+16]
	023 Move D8, [X31+24]
	024 Move X1, X31
	025 Move D11, [X31+80]
	026 Move D10, [X31+88]
	027 Call DisposeHelper.NotifyDisposedUsed, X0
	028 Return 
	029 Move X8, [X20+56]
	030 Move V8, V3
	031 Move V9, V2
	032 Move V10, V1
	033 Move V11, V0
	034 Move W19, W2
	035 Move W21, W1
	036 Compare X8, 0
	037 JumpIfNotEqual {47}
	038 Move X0, [X20+48]
	039 Compare X0, 0
	040 JumpIfEqual {83}
	041 Move X8, [X3+32]
	042 Move X8, [X8+192]
	043 Move X1, [X8+48]
	044 Call 0x229D520, X0
	045 Move [X20+56], X0
	046 Move [X20+64], X1
	047 Move X0, [X20+48]
	048 Compare X0, 0
	049 JumpIfEqual {83}
	050 Move X8, [X0]
	051 Move X9, [X8+392]
	052 Move X1, [X8+400]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, [X20+32]
	055 Compare X8, 0
	056 JumpIfEqual {83}
	057 Move W22, W0
	058 Move X9, [X8+24]
	059 Move X0, [X8+64]
	060 Move X1, [X8+40]
	061 Move V0, V11
	062 Move V1, V10
	063 Move V2, V9
	064 Move V3, V8
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X8, [X20+56]
	067 NotImplemented "Instruction MADD not yet implemented."
	068 Move X20, [X31+64]
	069 Move X19, [X31+72]
	070 Move X22, [X31+48]
	071 Move X21, [X31+56]
	072 Move X30, [X31+32]
	073 Move D9, [X31+16]
	074 Move D8, [X31+24]
	075 Add X8, X8, W9
	076 Move [X8], S0
	077 Move [X8+8], S1
	078 Move [X8+8], S2
	079 Move [X8+16], S3
	080 Move D11, [X31+80]
	081 Move D10, [X31+88]
	082 Return 
	083 Call 0x1C17F20

Method: System.Void UpdateTexture()

Disassembly:
	0x025E534C MOV X0, X24
	0x025E5350 MOV X1, X31
	0x025E5354 BL 0x3D909FC
	0x025E5358 B 0x25E5430
	0x025E535C MOV W21, W1
	0x025E5360 LDR X1, [X8 + 0x20]
	0x025E5364 ADD X23, X24, 0x38
	0x025E5368 MOV X0, X23
	0x025E536C MOV X19, X3
	0x025E5370 LDR X8, [X1]
	0x025E5374 MOV V8.16B, V3.16B
	0x025E5378 MOV V9.16B, V2.16B
	0x025E537C MOV V10.16B, V1.16B
	0x025E5380 MOV V11.16B, V0.16B
	0x025E5384 MOV W20, W2
	0x025E5388 BLR X8
	0x025E538C TBNZ X0, 0x0, 0x25E53B0
	0x025E5390 LDR X0, [X24 + 0x30]
	0x025E5394 CBZ X0, 0x25E5464
	0x025E5398 LDR X8, [X19 + 0x20]
	0x025E539C LDR X8, [X8 + 0xC0]
	0x025E53A0 LDR X1, [X8 + 0x30]
	0x025E53A4 LDR X8, [X1]
	0x025E53A8 BLR X8
	0x025E53AC STP X0, X1, [X24 + 0x38]
	0x025E53B0 LDR X0, [X24 + 0x30]
	0x025E53B4 CBZ X0, 0x25E5464
	0x025E53B8 LDR X8, [X0]
	0x025E53BC LDP X9, X1, [X8 + 0x188]
	0x025E53C0 BLR X9
	0x025E53C4 LDR X2, [X24 + 0x20]
	0x025E53C8 CBZ X2, 0x25E5464
	0x025E53CC LDR X8, [X19 + 0x20]
	0x025E53D0 SUB X26, X29, 0x38
	0x025E53D4 MOV W24, W0
	0x025E53D8 SUB X3, X29, 0x48
	0x025E53DC LDR X8, [X8 + 0xC0]
	0x025E53E0 MOV X4, X22
	0x025E53E4 LDR X1, [X8 + 0x38]
	0x025E53E8 LDR X0, [X1]
	0x025E53EC STP S11, S10, [X29 - 0x38]
	0x025E53F0 STP S9, S8, [X29 - 0x30]
	0x025E53F4 STP X26, X22, [X29 - 0x48]
	0x025E53F8 LDR X8, [X1 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1DF5000
	005 Move W8, [X20+4011]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1B0F000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+4011], W8
	016 Compare X19, 0
	017 JumpIfEqual {60}
	018 Move W8, [X19+16]
	019 Compare W8, 0
	020 JumpIfEqual {28}
	021 Move X0, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X1, X31
	025 Move X30, [X31+32]
	026 Call DisposeHelper.NotifyDisposedUsed, X0
	027 Return 
	028 Move X8, 0x1B0F000
	029 Move X8, [X8+1432]
	030 Move X20, [X19+48]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X20
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Equality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {56}
	044 Move X8, [X19+56]
	045 Compare X8, 0
	046 JumpIfEqual {56}
	047 Move X0, [X19+48]
	048 Compare X0, 0
	049 JumpIfEqual {60}
	050 Move W1, W31
	051 Move W2, W31
	052 Move X3, X31
	053 Call Texture2D.Apply, X0, X1, X2
	054 Move [X19+56], X31
	055 Move [X19+64], X31
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Return 
	060 Call 0x1C17F20

Method: System.Void CreateOrExpandTexture()

Disassembly:
	0x025E53FC BLR X8
	0x025E5400 LDR X8, [X19 + 0x20]
	0x025E5404 SUB X3, X29, 0x48
	0x025E5408 MOV X2, X23
	0x025E540C MOV X4, X22
	0x025E5410 LDR X8, [X8 + 0xC0]
	0x025E5414 LDR X1, [X8 + 0x48]
	0x025E5418 MADD W8, W24, W20, W21
	0x025E541C LDR X0, [X1]
	0x025E5420 STUR W8, [X29 - 0x38]
	0x025E5424 STP X26, X22, [X29 - 0x48]
	0x025E5428 LDR X8, [X1 + 0x10]
	0x025E542C BLR X8
	0x025E5430 LDR X8, [X25 + 0x28]
	0x025E5434 LDUR X9, [X29 - 0x28]
	0x025E5438 CMP X8, X9
	0x025E543C B.NE 0x25E5468
	0x025E5440 SUB X31, X29, 0x20
	0x025E5444 LDP X20, X19, [X31 + 0x60]
	0x025E5448 LDP X22, X21, [X31 + 0x50]
	0x025E544C LDP X24, X23, [X31 + 0x40]
	0x025E5450 LDP X26, X25, [X31 + 0x30]
	0x025E5454 LDP X29, X30, [X31 + 0x20]
	0x025E5458 LDP D9, D8, [X31 + 0x10]
	0x025E545C LDP D11, D10, [X31], #0x70
	0x025E5460 RET
	0x025E5464 BL 0x1C16F20
	0x025E5468 BL 0x3EB1B20
	0x025E546C STP X30, X21, [X31 - 0x20]!
	0x025E5470 STP X20, X19, [X31 + 0x10]
	0x025E5474 ADRP X21, 0x1DF4000
	0x025E5478 LDRB W8, [X21 + 0xFB7]
	0x025E547C MOV X20, X1
	0x025E5480 MOV X19, X0
	0x025E5484 TBNZ X8, 0x0, 0x25E549C
	0x025E5488 ADRP X0, 0x1B0E000
	0x025E548C LDR X0, [X0 + 0x598]
	0x025E5490 BL 0x1C16CF4
	0x025E5494 MOVZ W8, 0x1
	0x025E5498 STRB W8, [X21 + 0xFB7]
	0x025E549C CBZ X19, 0x25E5534
	0x025E54A0 LDRB W8, [X19 + 0x10]
	0x025E54A4 CBZ W8, 0x25E54BC
	0x025E54A8 MOV X0, X19
	0x025E54AC LDP X20, X19, [X31 + 0x10]
	0x025E54B0 MOV X1, X31
	0x025E54B4 LDP X30, X21, [X31], #0x20
	0x025E54B8 B 0x3D909FC
	0x025E54BC ADRP X8, 0x1B0E000
	0x025E54C0 LDR X8, [X8 + 0x598]
	0x025E54C4 LDR X21, [X19 + 0x30]
	0x025E54C8 LDR X0, [X8]
	0x025E54CC LDR W8, [X0 + 0xE0]
	0x025E54D0 CBNZ W8, 0x25E54D8
	0x025E54D4 BL 0x1C16DFC
	0x025E54D8 MOV X0, X21
	0x025E54DC MOV X1, X31
	0x025E54E0 MOV X2, X31
	0x025E54E4 BL 0x3C3883C
	0x025E54E8 TBNZ X0, 0x0, 0x25E5528
	0x025E54EC LDR X8, [X20 + 0x20]
	0x025E54F0 ADD X20, X19, 0x38
	0x025E54F4 MOV X0, X20
	0x025E54F8 LDR X8, [X8 + 0xC0]
	0x025E54FC LDR X1, [X8 + 0x20]
	0x025E5500 LDR X8, [X1]
	0x025E5504 BLR X8
	0x025E5508 TBZ X0, 0x0, 0x25E5528
	0x025E550C LDR X0, [X19 + 0x30]
	0x025E5510 CBZ X0, 0x25E5534
	0x025E5514 MOV W1, W31
	0x025E5518 MOV W2, W31
	0x025E551C MOV X3, X31
	0x025E5520 BL 0x3C1C4B4
	0x025E5524 STP X31, X31, [X20]
	0x025E5528 LDP X20, X19, [X31 + 0x10]
	0x025E552C LDP X30, X21, [X31], #0x20
	0x025E5530 RET
	0x025E5534 BL 0x1C16F20
	0x025E5538 SUB X31, X31, 0x70
	0x025E553C STR X30, [X31 + 0x10]
	0x025E5540 STP X28, X27, [X31 + 0x20]
	0x025E5544 STP X26, X25, [X31 + 0x30]
	0x025E5548 STP X24, X23, [X31 + 0x40]
	0x025E554C STP X22, X21, [X31 + 0x50]
	0x025E5550 STP X20, X19, [X31 + 0x60]
	0x025E5554 ADRP X21, 0x1DF4000
	0x025E5558 LDRB W8, [X21 + 0xFB8]
	0x025E555C MOV X20, X1
	0x025E5560 MOV X19, X0
	0x025E5564 TBNZ X8, 0x0, 0x25E55AC
	0x025E5568 ADRP X0, 0x1B38000
	0x025E556C LDR X0, [X0 + 0x238]
	0x025E5570 BL 0x1C16CF4
	0x025E5574 ADRP X0, 0x1B0E000
	0x025E5578 LDR X0, [X0 + 0x598]
	0x025E557C BL 0x1C16CF4
	0x025E5580 ADRP X0, 0x1B38000
	0x025E5584 LDR X0, [X0 + 0x250]
	0x025E5588 BL 0x1C16CF4
	0x025E558C ADRP X0, 0x1B38000
	0x025E5590 LDR X0, [X0 + 0x240]
	0x025E5594 BL 0x1C16CF4
	0x025E5598 ADRP X0, 0x1B38000
	0x025E559C LDR X0, [X0 + 0x258]
	0x025E55A0 BL 0x1C16CF4
	0x025E55A4 MOVZ W8, 0x1
	0x025E55A8 STRB W8, [X21 + 0xFB8]
	0x025E55AC STR W31, [X31 + 0x1C]
	0x025E55B0 LDR X8, [X19 + 0x28]
	0x025E55B4 CBZ X8, 0x25E584C
	0x025E55B8 ADRP X9, 0x1B0E000
	0x025E55BC LDR X9, [X9 + 0x598]
	0x025E55C0 LDP W23, W22, [X8 + 0x24]
	0x025E55C4 LDR X21, [X19 + 0x30]
	0x025E55C8 LDR X0, [X9]
	0x025E55CC LDR W8, [X0 + 0xE0]
	0x025E55D0 CBNZ W8, 0x25E55D8
	0x025E55D4 BL 0x1C16DFC
	0x025E55D8 MOV X0, X21
	0x025E55DC MOV X1, X31
	0x025E55E0 MOV X2, X31
	0x025E55E4 BL 0x3C354F8
	0x025E55E8 TBZ X0, 0x0, 0x25E562C
	0x025E55EC LDR X0, [X19 + 0x30]
	0x025E55F0 CBZ X0, 0x25E584C
	0x025E55F4 LDR X8, [X0]
	0x025E55F8 LDP X9, X1, [X8 + 0x188]
	0x025E55FC BLR X9
	0x025E5600 CMP W0, W23
	0x025E5604 B.NE 0x25E5624
	0x025E5608 LDR X0, [X19 + 0x30]
	0x025E560C CBZ X0, 0x25E584C
	0x025E5610 LDR X8, [X0]
	0x025E5614 LDP X9, X1, [X8 + 0x1A8]
	0x025E5618 BLR X9
	0x025E561C CMP W0, W22
	0x025E5620 B.EQ 0x25E582C
	0x025E5624 MOVZ W25, 0x1
	0x025E5628 B 0x25E5630
	0x025E562C MOV W25, W31
	0x025E5630 LDR X8, [X19 + 0x28]
	0x025E5634 CBZ X8, 0x25E584C
	0x025E5638 ADRP X9, 0x1B38000
	0x025E563C LDR X9, [X9 + 0x250]
	0x025E5640 ADRP X27, 0x1B38000
	0x025E5644 ADRP X26, 0x1B38000
	0x025E5648 LDP W22, W23, [X8 + 0x24]
	0x025E564C LDR X0, [X9]
	0x025E5650 LDR W24, [X19 + 0x1C]
	0x025E5654 LDR X27, [X27 + 0x238]
	0x025E5658 LDR X26, [X26 + 0x258]
	0x025E565C BL 0x1C16F10
	0x025E5660 MOV W1, W22
	0x025E5664 MOV W2, W23
	0x025E5668 MOV W3, W24
	0x025E566C MOV W4, W31
	0x025E5670 MOV X5, X31
	0x025E5674 MOV X21, X0
	0x025E5678 BL 0x3C1C1D8
	0x025E567C LDR X0, [X27]
	0x025E5680 LDR W8, [X0 + 0xE0]
	0x025E5684 CBNZ W8, 0x25E5690
	0x025E5688 BL 0x1C16DFC
	0x025E568C LDR X0, [X27]
	0x025E5690 LDR X8, [X0 + 0xB8]
	0x025E5694 ADD X0, X31, 0x1C
	0x025E5698 MOV X1, X31
	0x025E569C LDR W9, [X8]
	0x025E56A0 ADD W10, W9, 0x1
	0x025E56A4 STR W10, [X8]
	0x025E56A8 STR W9, [X31 + 0x1C]
	0x025E56AC BL 0x337B6E0
	0x025E56B0 LDR X8, [X26]
	0x025E56B4 MOV X1, X0
	0x025E56B8 MOV X2, X31
	0x025E56BC MOV X0, X8
	0x025E56C0 BL 0x321B938
	0x025E56C4 CBZ X21, 0x25E584C
	0x025E56C8 MOV X1, X0
	0x025E56CC MOV X0, X21
	0x025E56D0 MOV X2, X31
	0x025E56D4 BL 0x3C38A84
	0x025E56D8 MOVZ W1, 0x3D
	0x025E56DC MOV X0, X21

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x1DF5000
	013 Move W8, [X21+4012]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0x1B39000
	021 Move X0, [X0+568]
	022 Call 0x1C17CF4
	023 Move X0, 0x1B0F000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x1B39000
	027 Move X0, [X0+592]
	028 Call 0x1C17CF4
	029 Move X0, 0x1B39000
	030 Move X0, [X0+576]
	031 Call 0x1C17CF4
	032 Move X0, 0x1B39000
	033 Move X0, [X0+600]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+4012], W8
	037 Move [X31+12], W31
	038 Move X8, [X19+40]
	039 Compare X8, 0
	040 JumpIfEqual {219}
	041 Move X9, 0x1B0F000
	042 Move X9, [X9+1432]
	043 Move W23, [X8+36]
	044 Move W22, [X8+40]
	045 Move X21, [X19+48]
	046 Move X0, [X9]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X21
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Inequality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {76}
	059 Move X0, [X19+48]
	060 Compare X0, 0
	061 JumpIfEqual {219}
	062 Move X8, [X0]
	063 Move X9, [X8+392]
	064 Move X1, [X8+400]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, [X19+48]
	068 Compare X0, 0
	069 JumpIfEqual {219}
	070 Move X8, [X0]
	071 Move X9, [X8+424]
	072 Move X1, [X8+432]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W25, 1
	076 Move W25, W31
	077 Move X8, [X19+40]
	078 Compare X8, 0
	079 JumpIfEqual {219}
	080 Move X9, 0x1B39000
	081 Move X9, [X9+592]
	082 Move X27, 0x1B39000
	083 Move X26, 0x1B39000
	084 Move W22, [X8+36]
	085 Move W23, [X8+40]
	086 Move X0, [X9]
	087 Move W24, [X19+28]
	088 Move X27, [X27+568]
	089 Move X26, [X26+600]
	090 Call 0x1C17F10
	091 Move W1, W22
	092 Move W2, W23
	093 Move W3, W24
	094 Move W4, W31
	095 Move X5, X31
	096 Move X21, X0
	097 Call Texture2D..ctor, X0, X1, X2, X3, X4
	098 Move X0, [X27]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {104}
	102 Call 0x1C17DFC
	103 Move X0, [X27]
	104 Move X8, [X0+184]
	105 Add X0, X31, 12
	106 Move X1, X31
	107 Move W9, [X8]
	108 Add W10, W9, 1
	109 Move [X8], W10
	110 Move [X31+12], W9
	111 Call Int32.ToString, X0
	112 Move X8, [X26]
	113 Move X1, X0
	114 Move X2, X31
	115 Move X0, X8
	116 Call String.Concat, X0, X1
	117 Compare X21, 0
	118 JumpIfEqual {219}
	119 Move X1, X0
	120 Move X0, X21
	121 Move X2, X31
	122 Call Object.set_name, X0, X1
	123 Move W1, 61
	124 Move X0, X21
	125 Move X2, X31
	126 Call Object.set_hideFlags, X0, X1
	127 Move X0, X21
	128 Move W1, W31
	129 Move X2, X31
	130 Call Texture.set_filterMode, X0, X1
	131 Add X8, X19, 56
	132 Compare W25, 0
	133 JumpIfEqual {140}
	134 Move X9, [X20+32]
	135 Move X22, [X8]
	136 Move X8, [X9+192]
	137 Compare X22, 0
	138 JumpIfEqual {142}
	139 Move X20, [X19+64]
	140 Move [X8], X31
	141 Move [X8+8], X31
	142 Move X0, [X19+48]
	143 Compare X0, 0
	144 JumpIfEqual {219}
	145 Move X1, [X8+48]
	146 Call 0x229D520, X0
	147 Move X8, [X20+32]
	148 Move X22, X0
	149 Move X20, X1
	150 Move X8, [X8+192]
	151 Move X1, [X8+48]
	152 Move X0, X21
	153 Call 0x229D520, X0
	154 Move X23, X0
	155 Move X0, [X19+48]
	156 Compare X0, 0
	157 JumpIfEqual {219}
	158 Move X8, [X0]
	159 Move X24, X1
	160 Move X9, [X8+392]
	161 Move X1, [X8+400]
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move X8, [X19+48]
	164 Compare X8, 0
	165 JumpIfEqual {219}
	166 Move X9, [X8]
	167 Move W25, W0
	168 Move X0, X8
	169 Move X10, [X9+424]
	170 Move X1, [X9+432]
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X8, [X21]
	173 Move W26, W0
	174 Move X0, X21
	175 Move X9, [X8+392]
	176 Move X1, [X8+400]
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move X8, [X21]
	179 Move W27, W0
	180 Move X0, X21
	181 Move X9, [X8+424]
	182 Move X1, [X8+432]
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Move W7, W0
	185 Move X0, X22
	186 Move X1, X20
	187 Move W2, W25
	188 Move W3, W26
	189 Move X4, X23
	190 Move X5, X24
	191 Move W6, W27
	192 Call 0x25E56E0, X0, X1, X2, X3, X4, X5
	193 Move [X19+56], X23
	194 Move [X19+64], X24
	195 Move X8, 0x1B39000
	196 Move X8, [X8+576]
	197 Move X20, [X19+48]
	198 Move X0, [X8]
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1C17DFC
	203 Move X0, X20
	204 Move X1, X31
	205 Call UIRUtility.Destroy, X0
	206 Move [X19+48], X21
	207 Move X20, [X31+80]
	208 Move X19, [X31+88]
	209 Move X22, [X31+64]
	210 Move X21, [X31+72]
	211 Move X24, [X31+48]
	212 Move X23, [X31+56]
	213 Move X26, [X31+32]
	214 Move X25, [X31+40]
	215 Move X30, [X31+16]
	216 Move X27, [X31+24]
	217 Add X31, X31, 96
	218 Return 
	219 Call 0x1C17F20

Method: System.Void CpuBlit(Unity.Collections.NativeArray`1<T> src, System.Int32 srcWidth, System.Int32 srcHeight, Unity.Collections.NativeArray`1<T> dst, System.Int32 dstWidth, System.Int32 dstHeight)

Disassembly:
	0x025E56E0 MOV X2, X31
	0x025E56E4 BL 0x3C396EC
	0x025E56E8 MOV X0, X21
	0x025E56EC MOV W1, W31
	0x025E56F0 MOV X2, X31
	0x025E56F4 BL 0x3C1AB5C
	0x025E56F8 ADD X0, X19, 0x38
	0x025E56FC CBZ W25, 0x25E5720
	0x025E5700 LDR X8, [X20 + 0x20]
	0x025E5704 LDR X8, [X8 + 0xC0]
	0x025E5708 LDR X1, [X8 + 0x20]
	0x025E570C LDR X8, [X1]
	0x025E5710 BLR X8
	0x025E5714 TBZ X0, 0x0, 0x25E5728
	0x025E5718 LDP X22, X23, [X19 + 0x38]
	0x025E571C B 0x25E574C
	0x025E5720 STP X31, X31, [X0]
	0x025E5724 B 0x25E5800
	0x025E5728 LDR X0, [X19 + 0x30]
	0x025E572C CBZ X0, 0x25E584C
	0x025E5730 LDR X8, [X20 + 0x20]
	0x025E5734 LDR X8, [X8 + 0xC0]
	0x025E5738 LDR X1, [X8 + 0x30]
	0x025E573C LDR X8, [X1]
	0x025E5740 BLR X8
	0x025E5744 MOV X22, X0
	0x025E5748 MOV X23, X1
	0x025E574C LDR X8, [X20 + 0x20]
	0x025E5750 MOV X0, X21
	0x025E5754 LDR X8, [X8 + 0xC0]
	0x025E5758 LDR X1, [X8 + 0x30]
	0x025E575C LDR X8, [X1]
	0x025E5760 BLR X8
	0x025E5764 MOV X24, X0
	0x025E5768 LDR X0, [X19 + 0x30]
	0x025E576C CBZ X0, 0x25E584C
	0x025E5770 LDR X8, [X0]
	0x025E5774 MOV X25, X1
	0x025E5778 LDP X9, X1, [X8 + 0x188]
	0x025E577C BLR X9
	0x025E5780 LDR X8, [X19 + 0x30]
	0x025E5784 CBZ X8, 0x25E584C
	0x025E5788 LDR X9, [X8]
	0x025E578C MOV W26, W0
	0x025E5790 MOV X0, X8
	0x025E5794 LDP X10, X1, [X9 + 0x1A8]
	0x025E5798 BLR X10
	0x025E579C LDR X8, [X21]
	0x025E57A0 MOV W27, W0
	0x025E57A4 MOV X0, X21
	0x025E57A8 LDP X9, X1, [X8 + 0x188]
	0x025E57AC BLR X9
	0x025E57B0 LDR X8, [X21]
	0x025E57B4 MOV W28, W0
	0x025E57B8 MOV X0, X21
	0x025E57BC LDP X9, X1, [X8 + 0x1A8]
	0x025E57C0 BLR X9
	0x025E57C4 LDR X8, [X20 + 0x20]
	0x025E57C8 MOV W7, W0
	0x025E57CC MOV X0, X22

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x1DF5000
	011 Move X25, 0x1B0F000
	012 Move W8, [X26+4013]
	013 Move X25, [X25+2600]
	014 Move W23, W7
	015 Move W24, W6
	016 Move X19, X4
	017 Move W22, W3
	018 Move W20, W2
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x1B0F000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X26+4013], W8
	029 Move X0, [X25]
	030 Subtract W24, W24, W20
	031 NotImplemented "Instruction CSET not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, [X0+224]
	034 NotImplemented "Instruction CSET not yet implemented."
	035 And W23, W9, W10
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move W0, W23
	040 Move X1, X31
	041 Call Debug.Assert, X0
	042 Multiply W8, W22, W20
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W11, W31
	045 Move W9, W31
	046 Move W10, W20
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X13, W10
	049 Add X12, X21, W11
	050 Subtract X11, X13, W11
	051 Move V0, [X12+16]
	052 Subtract X11, X11, 1
	053 Move [X19], V0
	054 Add W9, W9, 1
	055 Move W11, W10
	056 Add W10, W10, W20
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add W9, W24, W9
	059 Move X20, [X31+64]
	060 Move X19, [X31+72]
	061 Move X22, [X31+48]
	062 Move X21, [X31+56]
	063 Move X24, [X31+32]
	064 Move X23, [X31+40]
	065 Move X26, [X31+16]
	066 Move X25, [X31+24]
	067 Move X30, [X31+80]
	068 Return 

