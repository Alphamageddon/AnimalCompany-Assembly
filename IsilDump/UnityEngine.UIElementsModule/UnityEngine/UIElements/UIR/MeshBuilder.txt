Type: UnityEngine.UIElements.UIR.MeshBuilder

Method: UnityEngine.UIElements.Vertex ConvertTextVertexToUIRVertex(UnityEngine.TextCore.Text.MeshInfo info, System.Int32 index, UnityEngine.Vector2 offset, UnityEngine.UIElements.UIR.VertexFlags flags = 1, System.Boolean isDynamicColor = False)

Disassembly:
	0x03D2376C ADRP X0, 0x441000
	0x03D23770 LDR X0, [X0 + 0x6B8]
	0x03D23774 BL 0x1C16CF4
	0x03D23778 ADRP X0, 0x441000
	0x03D2377C LDR X0, [X0 + 0x6C0]
	0x03D23780 BL 0x1C16CF4
	0x03D23784 ADRP X0, 0x441000
	0x03D23788 LDR X0, [X0 + 0x6C8]
	0x03D2378C BL 0x1C16CF4
	0x03D23790 ADRP X0, 0x441000
	0x03D23794 LDR X0, [X0 + 0x6D0]
	0x03D23798 BL 0x1C16CF4
	0x03D2379C ADRP X0, 0x441000
	0x03D237A0 LDR X0, [X0 + 0x6D8]
	0x03D237A4 BL 0x1C16CF4
	0x03D237A8 ADRP X0, 0x441000
	0x03D237AC LDR X0, [X0 + 0x6E0]
	0x03D237B0 BL 0x1C16CF4
	0x03D237B4 ADRP X0, 0x43F000
	0x03D237B8 LDR X0, [X0 + 0x6B0]
	0x03D237BC BL 0x1C16CF4
	0x03D237C0 ADRP X0, 0x441000
	0x03D237C4 LDR X0, [X0 + 0x6E8]
	0x03D237C8 BL 0x1C16CF4
	0x03D237CC ADRP X0, 0x441000
	0x03D237D0 LDR X0, [X0 + 0x6F0]
	0x03D237D4 BL 0x1C16CF4
	0x03D237D8 ADRP X0, 0x441000
	0x03D237DC LDR X0, [X0 + 0x6A0]
	0x03D237E0 BL 0x1C16CF4
	0x03D237E4 ADRP X0, 0x441000
	0x03D237E8 LDR X0, [X0 + 0x6F8]
	0x03D237EC BL 0x1C16CF4
	0x03D237F0 ADRP X0, 0x441000
	0x03D237F4 LDR X0, [X0 + 0x700]
	0x03D237F8 BL 0x1C16CF4
	0x03D237FC MOVZ W8, 0x1
	0x03D23800 STRB W8, [X21 + 0xA93]
	0x03D23804 LDR X0, [X24]
	0x03D23808 LDR W8, [X0 + 0xE0]
	0x03D2380C CBNZ W8, 0x3D23818
	0x03D23810 BL 0x1C16DFC
	0x03D23814 LDR X0, [X24]
	0x03D23818 LDR X8, [X0 + 0xB8]
	0x03D2381C LDR X21, [X8 + 0x8]
	0x03D23820 CBNZ X21, 0x3D23874
	0x03D23824 LDR W8, [X0 + 0xE0]
	0x03D23828 CBNZ W8, 0x3D23834
	0x03D2382C BL 0x1C16DFC
	0x03D23830 LDR X0, [X24]
	0x03D23834 ADRP X9, 0x441000
	0x03D23838 LDR X8, [X0 + 0xB8]
	0x03D2383C LDR X9, [X9 + 0x6C0]
	0x03D23840 LDR X22, [X8]
	0x03D23844 LDR X0, [X9]
	0x03D23848 BL 0x1C16F10
	0x03D2384C ADRP X8, 0x441000
	0x03D23850 LDR X8, [X8 + 0x6E8]
	0x03D23854 MOV X1, X22
	0x03D23858 MOV X3, X31
	0x03D2385C MOV X21, X0
	0x03D23860 LDR X2, [X8]
	0x03D23864 BL 0x2D27AA8
	0x03D23868 LDR X0, [X24]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X10, [X0+40]
	004 Compare X10, 0
	005 JumpIfEqual {65}
	006 Move W9, [X10+24]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X9, W1
	009 Add X10, X10, X9
	010 Move V2, [X10+36]
	011 Move [X31+40], X31
	012 Move [X31+8], X31
	013 Move [X31+16], X31
	014 Move [X31], X31
	015 Move [X31+24], W31
	016 Move X10, [X0+8]
	017 Compare X10, 0
	018 JumpIfEqual {65}
	019 Move W11, [X10+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X11, [X0+32]
	022 Compare X11, 0
	023 JumpIfEqual {65}
	024 Move W12, [X11+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X12, [X0+48]
	027 Compare X12, 0
	028 JumpIfEqual {65}
	029 Move W13, [X12+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W13, 12
	032 Add X11, X11, X9
	033 Add X12, X12, X9
	034 NotImplemented "Instruction MADD not yet implemented."
	035 Move W10, 0x437F0000
	036 Move V0.S[1], V1.S[0]
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move S1, W31
	039 Move S2, W10
	040 NotImplemented "Instruction FCSEL not yet implemented."
	041 Move V2, [X11+32]
	042 Move W11, [X12+32]
	043 NotImplemented "Instruction FCVTZS not yet implemented."
	044 Move V1, [X9+32]
	045 Move W13, 0x1000000
	046 Move X10, [X31+40]
	047 Move V3, [X31]
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 And W31, W3, 1
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Move X30, [X31+32]
	052 NotImplemented "Instruction BFM not yet implemented."
	053 NotImplemented "Instruction BFM not yet implemented."
	054 Add V0, V0, V1
	055 Move [X8+24], X10
	056 Move [X8+3], V4
	057 Move [X8+8], W31
	058 Move [X8+12], W11
	059 Move [X8+16], D2
	060 Move [X8+32], W9
	061 Move [X8], D0
	062 Move [X8+36], V3
	063 Add X31, X31, 48
	064 Return X0
	065 Call 0x1C17F20
	066 Call 0x1C17F28

Method: System.Int32 LimitTextVertices(System.Int32 vertexCount, System.Boolean logTruncation = True)

Disassembly:
	0x03D2386C LDR X8, [X0 + 0xB8]
	0x03D23870 STR X21, [X8 + 0x8]
	0x03D23874 LDR W8, [X0 + 0xE0]
	0x03D23878 CBNZ W8, 0x3D23884
	0x03D2387C BL 0x1C16DFC
	0x03D23880 LDR X0, [X24]
	0x03D23884 LDR X8, [X0 + 0xB8]
	0x03D23888 ADRP X26, 0x441000
	0x03D2388C ADRP X25, 0x441000
	0x03D23890 LDR X22, [X8 + 0x10]
	0x03D23894 LDR X26, [X26 + 0x6D0]
	0x03D23898 LDR X25, [X25 + 0x6C8]
	0x03D2389C CBNZ X22, 0x3D238F0
	0x03D238A0 LDR W8, [X0 + 0xE0]
	0x03D238A4 CBNZ W8, 0x3D238B0
	0x03D238A8 BL 0x1C16DFC
	0x03D238AC LDR X0, [X24]
	0x03D238B0 ADRP X9, 0x441000
	0x03D238B4 LDR X8, [X0 + 0xB8]
	0x03D238B8 LDR X9, [X9 + 0x6A8]
	0x03D238BC LDR X23, [X8]
	0x03D238C0 LDR X0, [X9]
	0x03D238C4 BL 0x1C16F10
	0x03D238C8 ADRP X8, 0x441000
	0x03D238CC LDR X8, [X8 + 0x6F0]
	0x03D238D0 MOV X1, X23
	0x03D238D4 MOV X3, X31
	0x03D238D8 MOV X22, X0
	0x03D238DC LDR X2, [X8]
	0x03D238E0 BL 0x2A6B948
	0x03D238E4 LDR X8, [X24]
	0x03D238E8 LDR X8, [X8 + 0xB8]
	0x03D238EC STR X22, [X8 + 0x10]
	0x03D238F0 LDR X0, [X26]
	0x03D238F4 BL 0x1C16F10
	0x03D238F8 LDR X4, [X25]
	0x03D238FC MOVZ W3, 0x2710
	0x03D23900 MOV X1, X21
	0x03D23904 MOV X2, X22
	0x03D23908 MOV X23, X0
	0x03D2390C BL 0x2EF0D58
	0x03D23910 CBZ X20, 0x3D23A80
	0x03D23914 ADRP X8, 0x441000
	0x03D23918 LDR X8, [X8 + 0x6B8]
	0x03D2391C ADRP X21, 0x441000
	0x03D23920 LDR X21, [X21 + 0x6B0]
	0x03D23924 STR X23, [X20 + 0x40]
	0x03D23928 LDR X0, [X8]
	0x03D2392C ADRP X23, 0x441000
	0x03D23930 ADRP X24, 0x441000
	0x03D23934 ADRP X22, 0x43F000
	0x03D23938 LDR X23, [X23 + 0x6E0]
	0x03D2393C LDR X24, [X24 + 0x6D8]
	0x03D23940 LDR X22, [X22 + 0x6B0]
	0x03D23944 BL 0x1C16F10
	0x03D23948 LDR X1, [X21]
	0x03D2394C MOV X21, X0
	0x03D23950 BL 0x28CA7D0
	0x03D23954 STR X21, [X20 + 0x48]
	0x03D23958 LDR X0, [X23]
	0x03D2395C BL 0x1C16F10
	0x03D23960 LDR X1, [X24]
	0x03D23964 MOV X21, X0
	0x03D23968 BL 0x3136A2C
	0x03D2396C MOVI D0, 0xFFFFFFFF
	0x03D23970 STR X21, [X20 + 0x50]
	0x03D23974 STUR D0, [X20 + 0x7C]
	0x03D23978 STR W31, [X20 + 0x84]
	0x03D2397C LDR X0, [X22]
	0x03D23980 LDR W8, [X0 + 0xE0]
	0x03D23984 CBNZ W8, 0x3D2398C
	0x03D23988 BL 0x1C16DFC
	0x03D2398C ADRP X21, 0x6C4000
	0x03D23990 LDRB W8, [X21 + 0x7E5]
	0x03D23994 CBNZ W8, 0x3D239AC
	0x03D23998 ADRP X0, 0x43F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6C5000
	007 Move X21, 0x442000
	008 Move W8, [X22+2697]
	009 Move X21, [X21+1536]
	010 Move W20, W1
	011 Move W19, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x3D1000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x3D1000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0x442000
	023 Move X0, [X0+1536]
	024 Call 0x1C17CF4
	025 Move X0, 0x442000
	026 Move X0, [X0+1544]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2697], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X21]
	036 Move X8, [X0+184]
	037 Move W8, [X8+32]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move TEMP, X20
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {76}
	043 Move W9, [X0+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {50}
	046 Call 0x1C17DFC
	047 Move X8, [X21]
	048 Move X8, [X8+184]
	049 Move W8, [X8+32]
	050 Move X9, 0x3D1000
	051 Move X9, [X9+1880]
	052 Add X1, X31, 12
	053 Move [X31+12], W8
	054 Move X0, [X9]
	055 Call 0x1C17E04
	056 Move X8, 0x442000
	057 Move X8, [X8+1544]
	058 Move X1, X0
	059 Move X2, X31
	060 Move X8, [X8]
	061 Move X0, X8
	062 Call String.Format, X0, X1
	063 Move X8, 0x3D1000
	064 Move X8, [X8+2600]
	065 Move X19, X0
	066 Move X8, [X8]
	067 Move W9, [X8+224]
	068 Compare W9, 0
	069 JumpIfNotEqual {72}
	070 Move X0, X8
	071 Call 0x1C17DFC
	072 Move X0, X19
	073 Move X1, X31
	074 Call Debug.LogWarning, X0
	075 Move X0, [X21]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Call 0x1C17DFC
	080 Move X0, [X21]
	081 Move X8, [X0+184]
	082 Move W19, [X8+32]
	083 Move W0, W19
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X30, [X31+48]
	089 Return X0

Method: System.Void MakeText(UnityEngine.TextCore.Text.MeshInfo meshInfo, UnityEngine.Vector2 offset, UnityEngine.UIElements.UIR.MeshBuilder/AllocMeshData meshAlloc, UnityEngine.UIElements.UIR.VertexFlags flags = 1, System.Boolean isDynamicColor = False)

Disassembly:
	0x03D2399C LDR X0, [X0 + 0x6B0]
	0x03D239A0 BL 0x1C16CF4
	0x03D239A4 MOVZ W8, 0x1
	0x03D239A8 STRB W8, [X21 + 0x7E5]
	0x03D239AC LDR X0, [X22]
	0x03D239B0 ADRP X21, 0x441000
	0x03D239B4 LDR W8, [X0 + 0xE0]
	0x03D239B8 LDR X21, [X21 + 0x6F8]
	0x03D239BC CBNZ W8, 0x3D239C8
	0x03D239C0 BL 0x1C16DFC
	0x03D239C4 LDR X0, [X22]
	0x03D239C8 LDR X8, [X0 + 0xB8]
	0x03D239CC MOV X0, X20
	0x03D239D0 MOV X1, X31
	0x03D239D4 LDR X8, [X8]
	0x03D239D8 STR X8, [X20 + 0xF0]
	0x03D239DC BL 0x33BDD8C
	0x03D239E0 LDR X0, [X21]
	0x03D239E4 BL 0x1C16F10
	0x03D239E8 MOV W1, W31
	0x03D239EC MOV W2, W31
	0x03D239F0 MOV X3, X31
	0x03D239F4 MOV X21, X0
	0x03D239F8 BL 0x3D2E43C
	0x03D239FC CBZ X19, 0x3D23A80
	0x03D23A00 LDR X8, [X19]
	0x03D23A04 ADRP X23, 0x441000
	0x03D23A08 MOV X0, X19
	0x03D23A0C LDR X9, [X8 + 0x468]
	0x03D23A10 LDR X1, [X8 + 0x470]
	0x03D23A14 LDR X23, [X23 + 0x700]
	0x03D23A18 BLR X9
	0x03D23A1C LDR X8, [X19]
	0x03D23A20 MOV X22, X0
	0x03D23A24 MOV X0, X19
	0x03D23A28 LDR X9, [X8 + 0x468]
	0x03D23A2C LDR X1, [X8 + 0x470]
	0x03D23A30 BLR X9
	0x03D23A34 LDR X8, [X23]
	0x03D23A38 MOV X23, X0
	0x03D23A3C MOV X0, X8
	0x03D23A40 BL 0x1C16F10
	0x03D23A44 MOV X1, X23
	0x03D23A48 MOV X2, X31
	0x03D23A4C MOV X24, X0
	0x03D23A50 BL 0x3D2D76C
	0x03D23A54 MOV X0, X20
	0x03D23A58 MOV X1, X19
	0x03D23A5C MOV X2, X21
	0x03D23A60 MOV X3, X22
	0x03D23A64 MOV X4, X24
	0x03D23A68 LDP X20, X19, [X31 + 0x40]
	0x03D23A6C LDP X22, X21, [X31 + 0x30]
	0x03D23A70 LDP X24, X23, [X31 + 0x20]
	0x03D23A74 LDP X26, X25, [X31 + 0x10]
	0x03D23A78 LDR X30, [X31], #0x50
	0x03D23A7C B 0x3D23A84
	0x03D23A80 BL 0x1C16F20
	0x03D23A84 SUB X31, X31, 0x120
	0x03D23A88 STP X29, X30, [X31 + 0xC0]
	0x03D23A8C STP X28, X27, [X31 + 0xD0]
	0x03D23A90 STP X26, X25, [X31 + 0xE0]
	0x03D23A94 STP X24, X23, [X31 + 0xF0]
	0x03D23A98 STP X22, X21, [X31 + 0x100]
	0x03D23A9C STP X20, X19, [X31 + 0x110]
	0x03D23AA0 ADRP X24, 0x6C4000
	0x03D23AA4 LDRB W8, [X24 + 0xA94]
	0x03D23AA8 MOV X20, X4
	0x03D23AAC MOV X21, X3
	0x03D23AB0 MOV X22, X2
	0x03D23AB4 MOV X23, X1
	0x03D23AB8 MOV X19, X0
	0x03D23ABC TBNZ X8, 0x0, 0x3D23B88
	0x03D23AC0 ADRP X0, 0x3F8000
	0x03D23AC4 LDR X0, [X0 + 0x918]
	0x03D23AC8 BL 0x1C16CF4
	0x03D23ACC ADRP X0, 0x3D1000
	0x03D23AD0 LDR X0, [X0 + 0xE58]
	0x03D23AD4 BL 0x1C16CF4
	0x03D23AD8 ADRP X0, 0x441000
	0x03D23ADC LDR X0, [X0 + 0x708]
	0x03D23AE0 BL 0x1C16CF4
	0x03D23AE4 ADRP X0, 0x441000
	0x03D23AE8 LDR X0, [X0 + 0x710]
	0x03D23AEC BL 0x1C16CF4
	0x03D23AF0 ADRP X0, 0x441000
	0x03D23AF4 LDR X0, [X0 + 0x718]
	0x03D23AF8 BL 0x1C16CF4
	0x03D23AFC ADRP X0, 0x441000
	0x03D23B00 LDR X0, [X0 + 0x720]
	0x03D23B04 BL 0x1C16CF4
	0x03D23B08 ADRP X0, 0x440000
	0x03D23B0C LDR X0, [X0 + 0xF10]
	0x03D23B10 BL 0x1C16CF4
	0x03D23B14 ADRP X0, 0x42D000
	0x03D23B18 LDR X0, [X0 + 0x590]
	0x03D23B1C BL 0x1C16CF4
	0x03D23B20 ADRP X0, 0x441000
	0x03D23B24 LDR X0, [X0 + 0x728]
	0x03D23B28 BL 0x1C16CF4
	0x03D23B2C ADRP X0, 0x441000
	0x03D23B30 LDR X0, [X0 + 0x730]
	0x03D23B34 BL 0x1C16CF4
	0x03D23B38 ADRP X0, 0x441000
	0x03D23B3C LDR X0, [X0 + 0x738]
	0x03D23B40 BL 0x1C16CF4
	0x03D23B44 ADRP X0, 0x441000
	0x03D23B48 LDR X0, [X0 + 0x740]
	0x03D23B4C BL 0x1C16CF4
	0x03D23B50 ADRP X0, 0x441000
	0x03D23B54 LDR X0, [X0 + 0x748]
	0x03D23B58 BL 0x1C16CF4
	0x03D23B5C ADRP X0, 0x441000
	0x03D23B60 LDR X0, [X0 + 0x750]
	0x03D23B64 BL 0x1C16CF4
	0x03D23B68 ADRP X0, 0x441000
	0x03D23B6C LDR X0, [X0 + 0x758]
	0x03D23B70 BL 0x1C16CF4
	0x03D23B74 ADRP X0, 0x441000
	0x03D23B78 LDR X0, [X0 + 0x760]
	0x03D23B7C BL 0x1C16CF4
	0x03D23B80 MOVZ W8, 0x1
	0x03D23B84 STRB W8, [X24 + 0xA94]
	0x03D23B88 ADRP X28, 0x440000
	0x03D23B8C ADRP X27, 0x441000
	0x03D23B90 ADRP X26, 0x3D1000
	0x03D23B94 LDRB W8, [X19 + 0x100]
	0x03D23B98 LDR X28, [X28 + 0xF10]
	0x03D23B9C LDR X27, [X27 + 0x718]
	0x03D23BA0 LDR X26, [X26 + 0xE58]
	0x03D23BA4 CBZ W8, 0x3D23BB4
	0x03D23BA8 MOV X0, X19
	0x03D23BAC MOV X1, X31
	0x03D23BB0 BL 0x3D909FC
	0x03D23BB4 LDR X0, [X28]
	0x03D23BB8 BL 0x1C16F10
	0x03D23BBC LDR X2, [X27]
	0x03D23BC0 MOVZ W1, 0x8
	0x03D23BC4 MOV X24, X0
	0x03D23BC8 BL 0x301B830
	0x03D23BCC MOV X25, X19
	0x03D23BD0 STR X24, [X25 + 0x18]!
	0x03D23BD4 LDR X0, [X28]
	0x03D23BD8 BL 0x1C16F10
	0x03D23BDC LDR X2, [X27]
	0x03D23BE0 MOVZ W1, 0x8
	0x03D23BE4 MOV X24, X0
	0x03D23BE8 BL 0x301B830
	0x03D23BEC STR X24, [X25 + 0x8]
	0x03D23BF0 LDR X0, [X26]
	0x03D23BF4 MOVZ W1, 0x5
	0x03D23BF8 BL 0x1C16D6C
	0x03D23BFC STR X0, [X25 + 0x10]
	0x03D23C00 LDR X0, [X26]
	0x03D23C04 MOVZ W1, 0x5
	0x03D23C08 BL 0x1C16D6C
	0x03D23C0C STR X0, [X25 + 0x18]
	0x03D23C10 MOV X0, X25
	0x03D23C14 BL 0x3D23E88
	0x03D23C18 LDR X24, [X25 + 0x38]
	0x03D23C1C CBZ X24, 0x3D23E84
	0x03D23C20 LDR W8, [X24 + 0x18]
	0x03D23C24 CMP W8, 0x0
	0x03D23C28 B.GT 0x3D23CF8
	0x03D23C2C ADRP X8, 0x42D000
	0x03D23C30 LDR X8, [X8 + 0x590]
	0x03D23C34 LDR X0, [X8]
	0x03D23C38 BL 0x1C16F10
	0x03D23C3C MOV X1, X31
	0x03D23C40 MOV X25, X0
	0x03D23C44 BL 0x3C122EC
	0x03D23C48 ADRP X9, 0x441000
	0x03D23C4C LDR X9, [X9 + 0x710]
	0x03D23C50 MOVI V0.2D, 0x0
	0x03D23C54 STP X31, X31, [X31 + 0x50]
	0x03D23C58 STP V0, V0, [X31]
	0x03D23C5C STP V0, V0, [X31 + 0x20]
	0x03D23C60 STR X31, [X31 + 0x40]
	0x03D23C64 LDR W11, [X24 + 0x1C]
	0x03D23C68 LDR X8, [X24 + 0x10]
	0x03D23C6C LDR X10, [X9]
	0x03D23C70 ADD W9, W11, 0x1
	0x03D23C74 STR W9, [X24 + 0x1C]
	0x03D23C78 CBZ X8, 0x3D23E84
	0x03D23C7C LDRSW X9, [X24 + 0x18]
	0x03D23C80 LDR W11, [X8 + 0x18]
	0x03D23C84 CMP W9, W11
	0x03D23C88 B.CS 0x3D23CBC
	0x03D23C8C ADD W10, W9, 0x1
	0x03D23C90 STR W10, [X24 + 0x18]
	0x03D23C94 LDR V0, [X31 + 0x5]
	0x03D23C98 MOVZ W10, 0x60
	0x03D23C9C MADD X8, X9, X10, X8
	0x03D23CA0 ADD X0, X8, 0x38
	0x03D23CA4 ADD X1, X31, 0x0
	0x03D23CA8 MOVZ W2, 0x48
	0x03D23CAC STR X25, [X8 + 0x30]
	0x03D23CB0 STR V0, [X8 + 0x2]
	0x03D23CB4 BL 0x3EB1AC0
	0x03D23CB8 B 0x3D23CF8
	0x03D23CBC LDR X8, [X10 + 0x20]
	0x03D23CC0 LDR V0, [X31 + 0x5]
	0x03D23CC4 ADD X1, X31, 0x0
	0x03D23CC8 MOVZ W2, 0x48
	0x03D23CCC LDR X8, [X8 + 0xC0]
	0x03D23CD0 LDR X26, [X8 + 0x70]
	0x03D23CD4 ADD X8, X31, 0x60
	0x03D23CD8 ADD X0, X8, 0x18
	0x03D23CDC STR V0, [X31 + 0x6]
	0x03D23CE0 STR X25, [X31 + 0x70]
	0x03D23CE4 BL 0x3EB1AC0
	0x03D23CE8 ADD X1, X31, 0x60
	0x03D23CEC MOV X0, X24
	0x03D23CF0 MOV X2, X26
	0x03D23CF4 BL 0x31372EC
	0x03D23CF8 ADRP X8, 0x441000
	0x03D23CFC LDR X8, [X8 + 0x748]
	0x03D23D00 ADRP X24, 0x441000
	0x03D23D04 ADRP X25, 0x441000
	0x03D23D08 ADRP X26, 0x441000
	0x03D23D0C ADRP X27, 0x441000
	0x03D23D10 LDR X24, [X24 + 0x740]
	0x03D23D14 LDR X25, [X25 + 0x750]
	0x03D23D18 LDR X26, [X26 + 0x738]
	0x03D23D1C LDR X27, [X27 + 0x708]
	0x03D23D20 STP X23, X22, [X19 + 0x108]
	0x03D23D24 STP X21, X20, [X19 + 0x118]
	0x03D23D28 LDR X0, [X8]
	0x03D23D2C ADRP X23, 0x441000
	0x03D23D30 ADRP X22, 0x441000
	0x03D23D34 ADRP X21, 0x441000
	0x03D23D38 LDR X23, [X23 + 0x760]
	0x03D23D3C LDR X22, [X22 + 0x728]
	0x03D23D40 LDR X21, [X21 + 0x758]
	0x03D23D44 BL 0x1C16F10
	0x03D23D48 LDR X4, [X24]
	0x03D23D4C MOVZ W1, 0x2000
	0x03D23D50 MOVZ W2, 0x800
	0x03D23D54 MOVZ W3, 0x10000
	0x03D23D58 MOV X20, X0
	0x03D23D5C BL 0x26AED08
	0x03D23D60 STR X20, [X19 + 0x128]
	0x03D23D64 LDR X0, [X25]
	0x03D23D68 BL 0x1C16F10
	0x03D23D6C LDR X4, [X26]
	0x03D23D70 MOVZ W1, 0x4000
	0x03D23D74 MOVZ W2, 0x1000
	0x03D23D78 MOVZ W3, 0x20000
	0x03D23D7C MOV X20, X0
	0x03D23D80 BL 0x26AE664
	0x03D23D84 STR X20, [X19 + 0x130]
	0x03D23D88 LDR X0, [X27]
	0x03D23D8C BL 0x1C16F10
	0x03D23D90 MOV X20, X0
	0x03D23D94 BL 0x3D224F8
	0x03D23D98 STR X20, [X19 + 0x138]
	0x03D23D9C LDR X0, [X23]
	0x03D23DA0 ADD X20, X19, 0x140
	0x03D23DA4 LDR W8, [X0 + 0xE0]
	0x03D23DA8 CBNZ W8, 0x3D23DB0
	0x03D23DAC BL 0x1C16DFC
	0x03D23DB0 MOV X0, X20
	0x03D23DB4 MOV X1, X31
	0x03D23DB8 BL 0x3D2B294
	0x03D23DBC LDR X0, [X22]
	0x03D23DC0 BL 0x1C16F10
	0x03D23DC4 MOV X20, X0
	0x03D23DC8 BL 0x3D232D8
	0x03D23DCC STR X20, [X19 + 0xF8]
	0x03D23DD0 LDR X0, [X21]
	0x03D23DD4 BL 0x1C16F10
	0x03D23DD8 MOV X1, X19
	0x03D23DDC MOV X2, X31
	0x03D23DE0 MOV X20, X0
	0x03D23DE4 BL 0x3D3CB58
	0x03D23DE8 LDR X0, [X19 + 0x108]
	0x03D23DEC STR X20, [X19 + 0x210]
	0x03D23DF0 CBZ X0, 0x3D23E64
	0x03D23DF4 ADRP X8, 0x3F8000
	0x03D23DF8 LDR X8, [X8 + 0x918]
	0x03D23DFC LDR X9, [X0]
	0x03D23E00 LDR X8, [X8]
	0x03D23E04 LDRB W11, [X9 + 0x130]
	0x03D23E08 LDRB W10, [X8 + 0x130]
	0x03D23E0C CMP W11, W10
	0x03D23E10 B.CC 0x3D23E64
	0x03D23E14 LDR X9, [X9 + 0xC8]
	0x03D23E18 ADD X9, X9, X10, 0x3, LSL
	0x03D23E1C LDUR X9, [X9 - 0x8]
	0x03D23E20 CMP X9, X8
	0x03D23E24 B.NE 0x3D23E64
	0x03D23E28 MOV X1, X31
	0x03D23E2C BL 0x3DBE9E0
	0x03D23E30 TBZ X0, 0x0, 0x3D23E64
	0x03D23E34 MOVZ W8, 0x1
	0x03D23E38 STRB W8, [X19 + 0x219]
	0x03D23E3C ADRP X8, 0x441000
	0x03D23E40 LDR X8, [X8 + 0x730]
	0x03D23E44 LDR X0, [X8]
	0x03D23E48 LDR W8, [X0 + 0xE0]
	0x03D23E4C CBNZ W8, 0x3D23E54
	0x03D23E50 BL 0x1C16DFC
	0x03D23E54 MOV X0, X19
	0x03D23E58 MOV X1, X31
	0x03D23E5C BL 0x3D27564
	0x03D23E60 STR W0, [X19 + 0x7C]
	0x03D23E64 LDP X20, X19, [X31 + 0x110]
	0x03D23E68 LDP X22, X21, [X31 + 0x100]

ISIL:
	001 Move [X31-112], D9
	002 Move [X31-104], D8
	003 Move [X31+16], X29
	004 Move [X31+24], X30
	005 Move [X31+32], X28
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Subtract X31, X31, 832
	016 Move X19, 0x6C5000
	017 Move W8, [X19+2698]
	018 Move X22, X1
	019 Move V8, V1
	020 Move V9, V0
	021 Move X21, X0
	022 Move [X31+44], W3
	023 Move [X31+32], W2
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x442000
	029 Move X0, [X0+1536]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X19+2698], W8
	033 Move X8, 0x442000
	034 Move X8, [X8+1536]
	035 Move W19, [X21]
	036 Move X0, [X8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move W1, 1
	042 Move W0, W19
	043 Call MeshBuilder.LimitTextVertices, X0, X1
	044 Move X8, [X22]
	045 Add W9, W0, 3
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 Compare X8, 0
	049 JumpIfEqual {362}
	050 Move W19, W0
	051 NotImplemented "Instruction SBFM not yet implemented."
	052 Move X9, [X8+24]
	053 Move X0, [X8+64]
	054 Move X4, [X8+40]
	055 Add W8, W23, W23
	056 Move W2, W8
	057 ShiftRight W2, 31
	058 And W2, W2, 0x3FFFFFFF
	059 Move W1, W23
	060 ShiftRight W1, 30
	061 And W1, W1, 0x1FFFFFFF
	062 Move X3, X22
	063 NotImplemented "Instruction BLR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W19, [X31+32]
	066 Move X22, X0
	067 Move W24, W31
	068 Add X20, X0, 16
	069 Add X25, X0, 32
	070 Move X27, 0x6C5000
	071 Move [X31+16], X21
	072 Move [X31+24], X25
	073 Add X0, X31, 688
	074 Move W2, 80
	075 Move X1, X21
	076 Call 0x3EB2AC0
	077 Move X8, 0x442000
	078 Move X8, [X8+1536]
	079 Move X0, [X8]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Add X0, X31, 544
	085 Add X1, X31, 688
	086 Move W2, 80
	087 Call 0x3EB2AC0
	088 Move W8, [X31+44]
	089 Add X0, X31, 544
	090 Move W1, W24
	091 Move V0, V9
	092 And W3, W8, 1
	093 Add X8, X31, 624
	094 Move V1, V8
	095 Move W2, W19
	096 Call MeshBuilder.ConvertTextVertexToUIRVertex, X0, X1, X2, X3, X4
	097 Compare X22, 0
	098 JumpIfEqual {362}
	099 Move V0, [X31+624]
	100 Move V1, [X31+640]
	101 Move V2, [X31+656]
	102 Move V3, [X31+672]
	103 Move W8, [X27+2740]
	104 Move [X31+480], V0
	105 Move [X31+488], V1
	106 Move [X31+512], V2
	107 Move [X31+520], V3
	108 Compare W8, 0
	109 JumpIfNotEqual {115}
	110 Move X0, 0x442000
	111 Move X0, [X0+1552]
	112 Call 0x1C17CF4
	113 Move W8, 1
	114 Move [X27+2740], W8
	115 Move W1, [X22+68]
	116 Move X25, 0x442000
	117 Add X2, X31, 768
	118 Move X0, X20
	119 Add W8, W1, 1
	120 Move [X22+68], W8
	121 Move X25, [X25+1552]
	122 Move V0, [X31+480]
	123 Move V1, [X31+496]
	124 Move V2, [X31+512]
	125 Move V3, [X31+528]
	126 Move X3, [X25]
	127 Move [X31+768], V0
	128 Move [X31+776], V1
	129 Move [X31+800], V2
	130 Move [X31+808], V3
	131 Call NativeSlice`1<Vertex>.set_Item, X0, X1, X2
	132 Add X0, X31, 400
	133 Move W2, 80
	134 Move X1, X21
	135 Call 0x3EB2AC0
	136 Move W8, [X31+44]
	137 Add W28, W24, 1
	138 Add X0, X31, 400
	139 Move W1, W28
	140 And W29, W8, 1
	141 Add X8, X31, 336
	142 Move V0, V9
	143 Move V1, V8
	144 Move W2, W19
	145 Move W3, W29
	146 Call MeshBuilder.ConvertTextVertexToUIRVertex, X0, X1, X2, X3, X4
	147 Move W8, [X27+2740]
	148 Move W26, W19
	149 Compare W8, 0
	150 JumpIfNotEqual {155}
	151 Move X0, X25
	152 Call 0x1C17CF4
	153 Move W8, 1
	154 Move [X27+2740], W8
	155 Move W1, [X22+68]
	156 Add X2, X31, 768
	157 Move X0, X20
	158 Move [X31+40], W23
	159 Add W8, W1, 1
	160 Move [X22+68], W8
	161 Move X3, [X25]
	162 Move V0, [X31+336]
	163 Move V1, [X31+352]
	164 Move V2, [X31+368]
	165 Move V3, [X31+384]
	166 Move [X31+768], V0
	167 Move [X31+776], V1
	168 Move [X31+800], V2
	169 Move [X31+808], V3
	170 Call NativeSlice`1<Vertex>.set_Item, X0, X1, X2
	171 Add X0, X31, 256
	172 Move W2, 80
	173 Move X1, X21
	174 Call 0x3EB2AC0
	175 Add W19, W28, 1
	176 Add X8, X31, 192
	177 Add X0, X31, 256
	178 Move W1, W19
	179 Move V0, V9
	180 Move V1, V8
	181 Move W2, W26
	182 Move W3, W29
	183 Call MeshBuilder.ConvertTextVertexToUIRVertex, X0, X1, X2, X3, X4
	184 Move W8, [X27+2740]
	185 Compare W8, 0
	186 JumpIfNotEqual {191}
	187 Move X0, X25
	188 Call 0x1C17CF4
	189 Move W8, 1
	190 Move [X27+2740], W8
	191 Move W1, [X22+68]
	192 Add X2, X31, 768
	193 Move X0, X20
	194 Add W8, W1, 1
	195 Move [X22+68], W8
	196 Move X3, [X25]
	197 Move V0, [X31+192]
	198 Move V1, [X31+208]
	199 Move V2, [X31+224]
	200 Move V3, [X31+240]
	201 Move [X31+768], V0
	202 Move [X31+776], V1
	203 Move [X31+800], V2
	204 Move [X31+808], V3
	205 Call NativeSlice`1<Vertex>.set_Item, X0, X1, X2
	206 Add X0, X31, 112
	207 Move W2, 80
	208 Move X1, X21
	209 Move X23, X27
	210 Call 0x3EB2AC0
	211 Move W8, [X31+44]
	212 Add W1, W19, 1
	213 Add X0, X31, 112
	214 Move V0, V9
	215 And W3, W8, 1
	216 Add X8, X31, 48
	217 Move V1, V8
	218 Move W2, W26
	219 Move [X31+36], W1
	220 Call MeshBuilder.ConvertTextVertexToUIRVertex, X0, X1, X2, X3, X4
	221 Move X19, 0x442000
	222 Move W8, [X27+2740]
	223 Move X19, [X19+1552]
	224 Move X26, X27
	225 Compare W8, 0
	226 JumpIfNotEqual {231}
	227 Move X0, X19
	228 Call 0x1C17CF4
	229 Move W8, 1
	230 Move [X26+2740], W8
	231 Move W1, [X22+68]
	232 Add X2, X31, 768
	233 Move X0, X20
	234 Add W8, W1, 1
	235 Move [X22+68], W8
	236 Move X3, [X19]
	237 Move V0, [X31+48]
	238 Move V1, [X31+64]
	239 Move V2, [X31+80]
	240 Move V3, [X31+96]
	241 Move X19, X20
	242 Move [X31+768], V0
	243 Move [X31+776], V1
	244 Move [X31+800], V2
	245 Move [X31+808], V3
	246 Call NativeSlice`1<Vertex>.set_Item, X0, X1, X2
	247 Move X21, 0x6C5000
	248 Move W8, [X21+2741]
	249 Move W23, [X31+40]
	250 Move X25, [X31+24]
	251 Compare W8, 0
	252 JumpIfNotEqual {258}
	253 Move X0, 0x442000
	254 Move X0, [X0+1560]
	255 Call 0x1C17CF4
	256 Move W8, 1
	257 Move [X21+2741], W8
	258 Move W1, [X22+64]
	259 Move X29, 0x442000
	260 Move X0, X25
	261 Move W2, W24
	262 Add W8, W1, 1
	263 Move [X22+64], W8
	264 Move X29, [X29+1560]
	265 Move X3, [X29]
	266 Call NativeSlice`1<UInt16>.set_Item, X0, X1, X2
	267 Move W8, [X21+2741]
	268 Compare W8, 0
	269 JumpIfNotEqual {274}
	270 Move X0, X29
	271 Call 0x1C17CF4
	272 Move W8, 1
	273 Move [X21+2741], W8
	274 Move W1, [X22+64]
	275 Move X0, X25
	276 Move W2, W28
	277 Add W8, W1, 1
	278 Move [X22+64], W8
	279 Move X3, [X29]
	280 Call NativeSlice`1<UInt16>.set_Item, X0, X1, X2
	281 Move W8, [X21+2741]
	282 Move X20, X19
	283 Move X27, X26
	284 Move X26, X21
	285 Compare W8, 0
	286 JumpIfNotEqual {291}
	287 Move X0, X29
	288 Call 0x1C17CF4
	289 Move W8, 1
	290 Move [X26+2741], W8
	291 Move W1, [X22+64]
	292 Add W19, W24, 2
	293 Move X0, X25
	294 Move W2, W19
	295 Add W8, W1, 1
	296 Move [X22+64], W8
	297 Move X3, [X29]
	298 Call NativeSlice`1<UInt16>.set_Item, X0, X1, X2
	299 Move W8, [X26+2741]
	300 Compare W8, 0
	301 JumpIfNotEqual {306}
	302 Move X0, X29
	303 Call 0x1C17CF4
	304 Move W8, 1
	305 Move [X26+2741], W8
	306 Move W1, [X22+64]
	307 Move X0, X25
	308 Move W2, W19
	309 Add W8, W1, 1
	310 Move [X22+64], W8
	311 Move X3, [X29]
	312 Call NativeSlice`1<UInt16>.set_Item, X0, X1, X2
	313 Move W8, [X26+2741]
	314 Compare W8, 0
	315 JumpIfNotEqual {320}
	316 Move X0, X29
	317 Call 0x1C17CF4
	318 Move W8, 1
	319 Move [X26+2741], W8
	320 Move W1, [X22+64]
	321 Add W2, W24, 3
	322 Move X0, X25
	323 Add W8, W1, 1
	324 Move [X22+64], W8
	325 Move X3, [X29]
	326 Call NativeSlice`1<UInt16>.set_Item, X0, X1, X2
	327 Move W8, [X26+2741]
	328 Move W19, [X31+32]
	329 Compare W8, 0
	330 JumpIfNotEqual {335}
	331 Move X0, X29
	332 Call 0x1C17CF4
	333 Move W8, 1
	334 Move [X26+2741], W8
	335 Move W1, [X22+64]
	336 Move X0, X25
	337 Move W2, W24
	338 Add W8, W1, 1
	339 Move [X22+64], W8
	340 Move X3, [X29]
	341 Call NativeSlice`1<UInt16>.set_Item, X0, X1, X2
	342 Move W8, [X31+36]
	343 Move X21, [X31+16]
	344 Subtract W23, W23, 1
	345 Add W24, W8, 1
	346 Add X31, X31, 832
	347 Move X20, [X31+96]
	348 Move X19, [X31+104]
	349 Move X22, [X31+80]
	350 Move X21, [X31+88]
	351 Move X24, [X31+64]
	352 Move X23, [X31+72]
	353 Move X26, [X31+48]
	354 Move X25, [X31+56]
	355 Move X28, [X31+32]
	356 Move X27, [X31+40]
	357 Move X29, [X31+16]
	358 Move X30, [X31+24]
	359 Move D9, [X31+112]
	360 Move D8, [X31+120]
	361 Return 
	362 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D23E94 LDR W9, [X8 + 0x18]
	0x03D23E98 UBFM X10, X9, 0x20, 0x1F
	0x03D23E9C CMP X10, 0x1
	0x03D23EA0 B.LT 0x3D23EF0
	0x03D23EA4 SXTW X10, W9
	0x03D23EA8 MOVZ W11, 0x8
	0x03D23EAC MOVN W12, 0x80000000
	0x03D23EB0 MOVZ W13, 0x80000000
	0x03D23EB4 SUB X15, X11, 0x8
	0x03D23EB8 CMP X15, X9
	0x03D23EBC B.CS 0x3D23EF8
	0x03D23EC0 STR W12, [X8, X11, LSL #2]
	0x03D23EC4 LDR X14, [X0 + 0x18]
	0x03D23EC8 CBZ X14, 0x3D23EFC
	0x03D23ECC LDR W16, [X14 + 0x18]
	0x03D23ED0 CMP X15, X16
	0x03D23ED4 B.CS 0x3D23EF8
	0x03D23ED8 SUB X15, X11, 0x7
	0x03D23EDC ADD X16, X11, 0x1
	0x03D23EE0 CMP X15, X10
	0x03D23EE4 STR W13, [X14, X11, LSL #2]
	0x03D23EE8 MOV X11, X16
	0x03D23EEC B.LT 0x3D23EB4
	0x03D23EF0 LDR X30, [X31], #0x10
	0x03D23EF4 RET
	0x03D23EF8 BL 0x1C16F28
	0x03D23EFC BL 0x1C16F20
	0x03D23F00 STP X30, X21, [X31 - 0x20]!
	0x03D23F04 STP X20, X19, [X31 + 0x10]
	0x03D23F08 ADRP X20, 0x6C4000
	0x03D23F0C LDRB W8, [X20 + 0xA95]
	0x03D23F10 MOV X19, X0
	0x03D23F14 TBNZ X8, 0x0, 0x3D23F74
	0x03D23F18 ADRP X0, 0x441000
	0x03D23F1C LDR X0, [X0 + 0x768]
	0x03D23F20 BL 0x1C16CF4
	0x03D23F24 ADRP X0, 0x441000
	0x03D23F28 LDR X0, [X0 + 0x730]
	0x03D23F2C BL 0x1C16CF4
	0x03D23F30 ADRP X0, 0x441000
	0x03D23F34 LDR X0, [X0 + 0x658]
	0x03D23F38 BL 0x1C16CF4
	0x03D23F3C ADRP X0, 0x441000
	0x03D23F40 LDR X0, [X0 + 0x490]
	0x03D23F44 BL 0x1C16CF4
	0x03D23F48 ADRP X0, 0x441000
	0x03D23F4C LDR X0, [X0 + 0x498]
	0x03D23F50 BL 0x1C16CF4
	0x03D23F54 ADRP X0, 0x3FA000
	0x03D23F58 LDR X0, [X0 + 0x240]
	0x03D23F5C BL 0x1C16CF4
	0x03D23F60 ADRP X0, 0x441000
	0x03D23F64 LDR X0, [X0 + 0x760]
	0x03D23F68 BL 0x1C16CF4
	0x03D23F6C MOVZ W8, 0x1
	0x03D23F70 STRB W8, [X20 + 0xA95]
	0x03D23F74 LDR W20, [X19 + 0x7C]
	0x03D23F78 TBNZ X20, 0x1F, 0x3D23FA0
	0x03D23F7C ADRP X8, 0x441000
	0x03D23F80 LDR X8, [X8 + 0x730]
	0x03D23F84 LDR X0, [X8]
	0x03D23F88 LDR W8, [X0 + 0xE0]
	0x03D23F8C CBNZ W8, 0x3D23F94
	0x03D23F90 BL 0x1C16DFC
	0x03D23F94 MOV W0, W20
	0x03D23F98 MOV X1, X31
	0x03D23F9C BL 0x3D276B0
	0x03D23FA0 ADRP X8, 0x441000
	0x03D23FA4 LDR X9, [X19 + 0x10]
	0x03D23FA8 LDR X8, [X8 + 0x658]
	0x03D23FAC MOVN W10, 0x0
	0x03D23FB0 STR W10, [X19 + 0x7C]
	0x03D23FB4 CBZ X9, 0x3D23FC0
	0x03D23FB8 LDR X21, [X9 + 0x18]
	0x03D23FBC B 0x3D23FC4
	0x03D23FC0 MOV X21, X31
	0x03D23FC4 LDR X0, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x6C5000
	009 Move X24, 0x442000
	010 Move X19, 0x442000
	011 Move X22, 0x442000
	012 Move X21, 0x442000
	013 Move X20, 0x442000
	014 Move W8, [X23+2699]
	015 Move X24, [X24+1568]
	016 Move X19, [X19+1536]
	017 Move X22, [X22+1576]
	018 Move X21, [X21+1584]
	019 Move X20, [X20+1592]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x442000
	025 Move X0, [X0+1536]
	026 Call 0x1C17CF4
	027 Move X0, 0x442000
	028 Move X0, [X0+1568]
	029 Call 0x1C17CF4
	030 Move X0, 0x442000
	031 Move X0, [X0+1576]
	032 Call 0x1C17CF4
	033 Move X0, 0x442000
	034 Move X0, [X0+1584]
	035 Call 0x1C17CF4
	036 Move X0, 0x442000
	037 Move X0, [X0+1592]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+2699], W8
	041 Move X0, [X24]
	042 Move W1, 1
	043 Move W2, W31
	044 Move W3, W31
	045 Move X4, X31
	046 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	047 Move X8, [X19]
	048 Move W1, 1
	049 Move W2, W31
	050 Move W3, W31
	051 Move X8, [X8+184]
	052 Move X4, X31
	053 Move [X8], X0
	054 Move X0, [X22]
	055 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	056 Move X8, [X19]
	057 Move W1, 1
	058 Move W2, W31
	059 Move W3, W31
	060 Move X8, [X8+184]
	061 Move X4, X31
	062 Move [X8+8], X0
	063 Move X0, [X21]
	064 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	065 Move X8, [X19]
	066 Move W1, 1
	067 Move W2, W31
	068 Move W3, W31
	069 Move X8, [X8+184]
	070 Move X4, X31
	071 Move [X8+16], X0
	072 Move X0, [X20]
	073 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	074 Move X8, [X19]
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X24, [X31+16]
	080 Move X23, [X31+24]
	081 Move X8, [X8+184]
	082 Move W9, 0xC000
	083 Move [X8+24], X0
	084 Move [X8+32], W9
	085 Move X30, [X31+64]
	086 Return 

