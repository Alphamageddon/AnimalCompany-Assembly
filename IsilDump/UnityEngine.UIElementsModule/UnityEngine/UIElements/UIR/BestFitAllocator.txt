Type: UnityEngine.UIElements.UIR.BestFitAllocator

Method: System.Void .ctor(System.UInt32 size)

Disassembly:
	0x03D35148 MOV V2.16B, V8.16B
	0x03D3514C MOV X0, X31
	0x03D35150 BL 0x3C0FD38
	0x03D35154 FMOV S0, 1
	0x03D35158 FMOV S1, 1
	0x03D3515C MOV X0, X31
	0x03D35160 BL 0x3C0FE28
	0x03D35164 FMOV S0, 1
	0x03D35168 FMOV S1, 1
	0x03D3516C MOV V2.16B, V8.16B
	0x03D35170 MOV X0, X31
	0x03D35174 BL 0x3C0FD38
	0x03D35178 FMOV S0, 1
	0x03D3517C FMOV S1, W31
	0x03D35180 MOV X0, X31
	0x03D35184 BL 0x3C0FE28
	0x03D35188 FMOV S0, 1
	0x03D3518C FMOV S1, W31
	0x03D35190 MOV V2.16B, V8.16B
	0x03D35194 MOV X0, X31
	0x03D35198 BL 0x3C0FD38
	0x03D3519C MOV X0, X31
	0x03D351A0 BL 0x3C10318
	0x03D351A4 LDP X20, X19, [X31 + 0x30]
	0x03D351A8 LDP X22, X21, [X31 + 0x20]
	0x03D351AC LDP X30, X23, [X31 + 0x10]
	0x03D351B0 MOV X0, X31
	0x03D351B4 LDR V8, [X31], #0x40
	0x03D351B8 B 0x3C1006C
	0x03D351BC BL 0x1C16F20
	0x03D351C0 STR X30, [X31 - 0x30]!
	0x03D351C4 STP X22, X21, [X31 + 0x10]
	0x03D351C8 STP X20, X19, [X31 + 0x20]
	0x03D351CC ADRP X21, 0x6B2000
	0x03D351D0 ADRP X22, 0x418000
	0x03D351D4 ADRP X19, 0x42F000
	0x03D351D8 ADRP X20, 0x430000
	0x03D351DC LDRB W8, [X21 + 0xB44]
	0x03D351E0 LDR X22, [X22 + 0xB00]
	0x03D351E4 LDR X19, [X19 + 0x9B8]
	0x03D351E8 LDR X20, [X20 + 0xF0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6B3000
	007 Move X22, 0x431000
	008 Move W8, [X21+2864]
	009 Move X22, [X22+136]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x431000
	017 Move X0, [X0+136]
	018 Call 0x1C17CF4
	019 Move X0, 0x431000
	020 Move X0, [X0+144]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2864], W8
	024 Move X0, [X22]
	025 Call 0x1C17F10
	026 Move X21, X0
	027 Call BlockPool..ctor, X0
	028 Move X0, X20
	029 Move X1, X31
	030 Move [X20+40], X21
	031 Call Object..ctor, X0
	032 Move X0, [X20+40]
	033 Move [X20+16], W19
	034 Compare X0, 0
	035 JumpIfEqual {51}
	036 Move X8, 0x431000
	037 Move X8, [X8+144]
	038 Move X1, [X8]
	039 Call 0x2EF1E28, X0
	040 Move [X20+24], X0
	041 Move [X20+32], X0
	042 Compare X0, 0
	043 JumpIfEqual {51}
	044 Move [X0+28], W19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return 
	051 Call 0x1C17F20

Method: System.UInt32 get_totalSize()

Disassembly:
	0x03D352D8 LDRB W8, [X21 + 0xED]
	0x03D352DC CBZ W8, 0x3D35364

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.UInt32 get_highWatermark()

Disassembly:
	0x03D352E0 ADRP X8, 0x430000
	0x03D352E4 LDR X8, [X8 + 0xF8]

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: UnityEngine.UIElements.UIR.Alloc Allocate(System.UInt32 size)

Disassembly:
	0x03D352E8 LDR X0, [X8]
	0x03D352EC LDR W8, [X0 + 0xE0]
	0x03D352F0 CBNZ W8, 0x3D352F8
	0x03D352F4 BL 0x1C16DFC
	0x03D352F8 MOV X0, X20
	0x03D352FC MOV X1, X21
	0x03D35300 MOV X2, X19
	0x03D35304 BL 0x3D353E0
	0x03D35308 B 0x3D3534C
	0x03D3530C ADRP X20, 0x6A3000
	0x03D35310 LDRB W8, [X20 + 0xAC0]
	0x03D35314 CBNZ W8, 0x3D3532C
	0x03D35318 ADRP X0, 0x3C2000
	0x03D3531C LDR X0, [X0 + 0x270]
	0x03D35320 BL 0x1C16CF4
	0x03D35324 MOVZ W8, 0x1
	0x03D35328 STRB W8, [X20 + 0xAC0]
	0x03D3532C ADRP X8, 0x3C2000
	0x03D35330 LDR X8, [X8 + 0x270]
	0x03D35334 LDR X8, [X8]
	0x03D35338 LDR X8, [X8 + 0xB8]
	0x03D3533C LDP V1, V0, [X8 + 0x60]
	0x03D35340 LDP V3, V2, [X8 + 0x40]
	0x03D35344 STP V1, V0, [X19 + 0x20]
	0x03D35348 STP V3, V2, [X19]
	0x03D3534C MOVZ W8, 0x3F800000
	0x03D35350 STR W8, [X19 + 0x28]
	0x03D35354 LDP X20, X19, [X31 + 0x90]
	0x03D35358 LDP X30, X21, [X31 + 0x80]
	0x03D3535C ADD X31, X31, 0xA0
	0x03D35360 RET
	0x03D35364 MOV X0, X21
	0x03D35368 MOV X1, X31
	0x03D3536C BL 0x3DEE078
	0x03D35370 MOV X21, X0
	0x03D35374 MOV X0, X20
	0x03D35378 MOV X1, X31
	0x03D3537C BL 0x3DEDBEC
	0x03D35380 ADRP X8, 0x3E6000
	0x03D35384 LDR X8, [X8 + 0x898]
	0x03D35388 MOV X20, X0
	0x03D3538C LDR X8, [X8]
	0x03D35390 LDR W9, [X8 + 0xE0]
	0x03D35394 CBNZ W9, 0x3D353A0
	0x03D35398 MOV X0, X8
	0x03D3539C BL 0x1C16DFC
	0x03D353A0 MOV X0, X21
	0x03D353A4 MOV X1, X20
	0x03D353A8 MOV X2, X19
	0x03D353AC MOV X3, X31
	0x03D353B0 BL 0x3DEE2C4
	0x03D353B4 B 0x3D3534C
	0x03D353B8 ADD X8, X31, 0x0
	0x03D353BC MOV X0, X20
	0x03D353C0 MOV X1, X31
	0x03D353C4 BL 0x3DEDD74
	0x03D353C8 LDP V1, V0, [X31 + 0x20]
	0x03D353CC LDP V3, V2, [X31]
	0x03D353D0 STP V1, V0, [X31 + 0x60]
	0x03D353D4 STP V3, V2, [X31 + 0x40]
	0x03D353D8 B 0x3D35344
	0x03D353DC BL 0x1C16F20
	0x03D353E0 SUB X31, X31, 0xB0
	0x03D353E4 STP X30, X23, [X31 + 0x80]
	0x03D353E8 STP X22, X21, [X31 + 0x90]
	0x03D353EC STP X20, X19, [X31 + 0xA0]
	0x03D353F0 ADRP X22, 0x6B2000
	0x03D353F4 LDRB W8, [X22 + 0xB46]
	0x03D353F8 MOV X19, X2
	0x03D353FC MOV X20, X1
	0x03D35400 MOV X21, X0
	0x03D35404 TBNZ X8, 0x0, 0x3D3541C
	0x03D35408 ADRP X0, 0x3E6000
	0x03D3540C LDR X0, [X0 + 0x898]
	0x03D35410 BL 0x1C16CF4
	0x03D35414 MOVZ W8, 0x1
	0x03D35418 STRB W8, [X22 + 0xB46]
	0x03D3541C MOVI V0.2D, 0x0
	0x03D35420 STP V0, V0, [X31 + 0x20]
	0x03D35424 STP V0, V0, [X31]
	0x03D35428 CBZ X21, 0x3D35500
	0x03D3542C MOV X0, X21
	0x03D35430 MOV X1, X19
	0x03D35434 MOV X2, X31
	0x03D35438 BL 0x3DEE13C
	0x03D3543C MOV X0, X21
	0x03D35440 MOV X1, X31
	0x03D35444 BL 0x3DEBF58
	0x03D35448 CBZ X0, 0x3D354EC
	0x03D3544C MOV X21, X0
	0x03D35450 CMP X0, X20
	0x03D35454 B.EQ 0x3D354EC
	0x03D35458 MOVI V0.2D, 0x0
	0x03D3545C STP V0, V0, [X31 + 0x60]
	0x03D35460 STP V0, V0, [X31 + 0x40]
	0x03D35464 ADRP X22, 0x3E6000
	0x03D35468 LDR X22, [X22 + 0x898]
	0x03D3546C MOVZ W8, 0x1
	0x03D35470 ADD X1, X31, 0x0
	0x03D35474 MOV X0, X21
	0x03D35478 MOV X2, X31
	0x03D3547C MOV W23, W8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x6B3000
	009 Move W9, [X20+2865]
	010 Move W22, W1
	011 Move X21, X0
	012 Move X19, X8
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x3BF000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2865], W8
	022 Move X8, [X21+32]
	023 Compare X8, 0
	024 JumpIfEqual {109}
	025 Move X20, X31
	026 Move TEMP, 0
	027 Not TEMP
	028 Move W9, TEMP
	029 Move W11, [X8+24]
	030 Move W10, [X8+28]
	031 Subtract W10, W10, W11
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSEL not yet implemented."
	034 Move X8, [X8+56]
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Compare X8, 0
	040 JumpIfNotEqual {29}
	041 Compare X20, 0
	042 JumpIfEqual {110}
	043 Move X23, 0x3BF000
	044 Move X23, [X23+2600]
	045 Move W9, [X20+24]
	046 Move W8, [X20+28]
	047 Move X0, [X23]
	048 Subtract W24, W8, W9
	049 Move W10, [X0+224]
	050 Compare W10, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSET not yet implemented."
	055 Move X1, X31
	056 Call Debug.Assert, X0
	057 Move W8, [X20+64]
	058 Move X1, X31
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CSET not yet implemented."
	061 Call Debug.Assert, X0
	062 Move W9, [X20+24]
	063 Move W8, [X20+28]
	064 Subtract W24, W8, W9
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, X21
	067 Move X1, X20
	068 Move W2, W22
	069 Call BestFitAllocator.SplitBlock, X0, X1, X2
	070 Move W9, [X20+24]
	071 Move W8, [X20+28]
	072 Subtract W24, W8, W9
	073 Move X0, [X23]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSET not yet implemented."
	080 Move X1, X31
	081 Call Debug.Assert, X0
	082 Move W8, [X20+28]
	083 Move W9, [X21+48]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move [X21+48], W8
	086 Move X9, [X21+32]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Compare X9, 0
	089 JumpIfEqual {124}
	090 Move X9, [X9+56]
	091 Move [X21+32], X9
	092 Move X9, X20
	093 Add X9, X9, 48
	094 Move X10, [X9]
	095 Compare X10, 0
	096 JumpIfEqual {99}
	097 Move X11, [X20+56]
	098 Move [X10+56], X11
	099 Move X11, [X20+56]
	100 Compare X11, 0
	101 JumpIfEqual {103}
	102 Move [X11+48], X10
	103 Move W10, 1
	104 Move [X20+64], W10
	105 Move [X9], X31
	106 Move [X9+8], X31
	107 Move W9, [X20+24]
	108 Subtract W8, W8, W9
	109 Move X20, X31
	110 Move W8, W31
	111 Move W9, W31
	112 Move [X19], W9
	113 Move [X19+4], W8
	114 Move [X19+8], X20
	115 Move [X19+16], X31
	116 Move X20, [X31+48]
	117 Move X19, [X31+56]
	118 Move X22, [X31+32]
	119 Move X21, [X31+40]
	120 Move X24, [X31+16]
	121 Move X23, [X31+24]
	122 Move X30, [X31+64]
	123 Return X0
	124 Call 0x1C17F20

Method: System.Void Free(UnityEngine.UIElements.UIR.Alloc alloc)

Disassembly:
	0x03D355BC MOV X25, X2
	0x03D355C0 STP X0, X1, [X31 + 0xC8]
	0x03D355C4 TBNZ X8, 0x0, 0x3D356C0
	0x03D355C8 ADRP X0, 0x430000
	0x03D355CC LDR X0, [X0 + 0xF8]
	0x03D355D0 BL 0x1C16CF4
	0x03D355D4 ADRP X0, 0x3BE000
	0x03D355D8 LDR X0, [X0 + 0xA28]
	0x03D355DC BL 0x1C16CF4
	0x03D355E0 ADRP X0, 0x430000
	0x03D355E4 LDR X0, [X0 + 0x100]
	0x03D355E8 BL 0x1C16CF4
	0x03D355EC ADRP X0, 0x430000
	0x03D355F0 LDR X0, [X0 + 0x108]
	0x03D355F4 BL 0x1C16CF4
	0x03D355F8 ADRP X0, 0x430000
	0x03D355FC LDR X0, [X0 + 0x110]
	0x03D35600 BL 0x1C16CF4
	0x03D35604 ADRP X0, 0x430000
	0x03D35608 LDR X0, [X0 + 0x118]
	0x03D3560C BL 0x1C16CF4
	0x03D35610 ADRP X0, 0x430000
	0x03D35614 LDR X0, [X0 + 0x120]
	0x03D35618 BL 0x1C16CF4
	0x03D3561C ADRP X0, 0x430000
	0x03D35620 LDR X0, [X0 + 0x128]
	0x03D35624 BL 0x1C16CF4
	0x03D35628 ADRP X0, 0x430000
	0x03D3562C LDR X0, [X0 + 0x130]
	0x03D35630 BL 0x1C16CF4
	0x03D35634 ADRP X0, 0x430000
	0x03D35638 LDR X0, [X0 + 0x138]
	0x03D3563C BL 0x1C16CF4
	0x03D35640 ADRP X0, 0x430000
	0x03D35644 LDR X0, [X0 + 0x140]
	0x03D35648 BL 0x1C16CF4
	0x03D3564C ADRP X0, 0x430000
	0x03D35650 LDR X0, [X0 + 0x148]
	0x03D35654 BL 0x1C16CF4
	0x03D35658 ADRP X0, 0x42F000
	0x03D3565C LDR X0, [X0 + 0xFB8]
	0x03D35660 BL 0x1C16CF4
	0x03D35664 ADRP X0, 0x3BE000
	0x03D35668 LDR X0, [X0 + 0x598]
	0x03D3566C BL 0x1C16CF4
	0x03D35670 ADRP X0, 0x3E6000
	0x03D35674 LDR X0, [X0 + 0x620]
	0x03D35678 BL 0x1C16CF4
	0x03D3567C ADRP X0, 0x3E8000
	0x03D35680 LDR X0, [X0 + 0x240]
	0x03D35684 BL 0x1C16CF4
	0x03D35688 ADRP X0, 0x42F000
	0x03D3568C LDR X0, [X0 + 0x760]
	0x03D35690 BL 0x1C16CF4
	0x03D35694 ADRP X0, 0x3C6000
	0x03D35698 LDR X0, [X0 + 0x720]
	0x03D3569C BL 0x1C16CF4
	0x03D356A0 ADRP X0, 0x430000
	0x03D356A4 LDR X0, [X0 + 0x150]
	0x03D356A8 BL 0x1C16CF4
	0x03D356AC ADRP X0, 0x430000
	0x03D356B0 LDR X0, [X0 + 0x158]
	0x03D356B4 BL 0x1C16CF4
	0x03D356B8 MOVZ W8, 0x1
	0x03D356BC STRB W8, [X19 + 0xB47]
	0x03D356C0 MOVI V0.2D, 0x0
	0x03D356C4 ADD X8, X31, 0x2C0
	0x03D356C8 ADD X0, X31, 0x1E8
	0x03D356CC MOVZ W2, 0x98
	0x03D356D0 MOV W1, W31
	0x03D356D4 STR X31, [X31 + 0x458]
	0x03D356D8 STR X31, [X31 + 0x450]
	0x03D356DC STR X31, [X31 + 0x410]
	0x03D356E0 STR X31, [X31 + 0x3D0]
	0x03D356E4 STR X31, [X31 + 0x398]
	0x03D356E8 STR X31, [X31 + 0x390]
	0x03D356EC STR X31, [X31 + 0x388]
	0x03D356F0 STR X31, [X31 + 0x380]
	0x03D356F4 STRH W31, [X31 + 0x37C]
	0x03D356F8 STR X31, [X31 + 0x370]
	0x03D356FC STR X31, [X31 + 0x368]
	0x03D35700 STR X31, [X31 + 0x2B8]
	0x03D35704 STR X31, [X31 + 0x2B0]
	0x03D35708 STR X31, [X31 + 0x2A8]
	0x03D3570C STR X31, [X31 + 0x2A0]
	0x03D35710 STR X31, [X31 + 0x298]
	0x03D35714 STR X31, [X31 + 0x290]
	0x03D35718 STP V0, V0, [X8 + 0x170]
	0x03D3571C STR V0, [X8 + 0x16]
	0x03D35720 STP V0, V0, [X8 + 0x130]
	0x03D35724 STR V0, [X8 + 0x12]
	0x03D35728 STP V0, V0, [X8 + 0xF0]
	0x03D3572C STR V0, [X8 + 0xE]
	0x03D35730 STP V0, V0, [X8 + 0x80]
	0x03D35734 STP V0, V0, [X8 + 0x60]
	0x03D35738 STP V0, V0, [X8 + 0x40]
	0x03D3573C STP V0, V0, [X8 + 0x20]
	0x03D35740 STP V0, V0, [X8]
	0x03D35744 STR X31, [X31 + 0x288]
	0x03D35748 STR X31, [X31 + 0x280]
	0x03D3574C BL 0x3EB1B10
	0x03D35750 ADD X0, X31, 0x148
	0x03D35754 MOVZ W2, 0x98
	0x03D35758 MOV W1, W31
	0x03D3575C STR W31, [X31 + 0x1E0]
	0x03D35760 BL 0x3EB1B10
	0x03D35764 LDR X8, [X31 + 0xC8]
	0x03D35768 STP X31, X31, [X31 + 0x138]
	0x03D3576C CBZ X8, 0x3D36898
	0x03D35770 LDR X19, [X31 + 0xD0]
	0x03D35774 CBZ X19, 0x3D36898
	0x03D35778 LDR X8, [X31 + 0xC8]
	0x03D3577C ADRP X22, 0x3E8000
	0x03D35780 LDR W21, [X19 + 0xF0]
	0x03D35784 MOV X0, X19
	0x03D35788 LDR X8, [X8 + 0x110]
	0x03D3578C MOV X1, X31
	0x03D35790 STR X8, [X31 + 0xA0]
	0x03D35794 LDR X22, [X22 + 0x240]
	0x03D35798 BL 0x3DEC0F4
	0x03D3579C LDR X8, [X22]
	0x03D357A0 MOV W22, W0
	0x03D357A4 LDR W9, [X8 + 0xE0]
	0x03D357A8 CBNZ W9, 0x3D357B4
	0x03D357AC MOV X0, X8
	0x03D357B0 BL 0x1C16DFC
	0x03D357B4 MOV X0, X19
	0x03D357B8 MOV X1, X31
	0x03D357BC BL 0x3DE0F54
	0x03D357C0 TBNZ X22, 0x0, 0x3D357D8
	0x03D357C4 CMP W21, 0x2
	0x03D357C8 B.EQ 0x3D357D8
	0x03D357CC CMP W21, 0x4
	0x03D357D0 B.EQ 0x3D357D8
	0x03D357D4 TBNZ X0, 0x0, 0x3D357E4
	0x03D357D8 LDR X8, [X31 + 0xD0]
	0x03D357DC LDRB W8, [X8 + 0xE9]
	0x03D357E0 CBZ W8, 0x3D35890
	0x03D357E4 LDR X19, [X31 + 0xD0]
	0x03D357E8 LDR X1, [X19 + 0x100]
	0x03D357EC CBZ X1, 0x3D35804
	0x03D357F0 LDR X0, [X31 + 0xA0]
	0x03D357F4 CBZ X0, 0x3D36898
	0x03D357F8 BL 0x3D30BFC
	0x03D357FC LDR X19, [X31 + 0xD0]
	0x03D35800 STR X31, [X19 + 0x100]
	0x03D35804 LDR X8, [X19 + 0xC8]
	0x03D35808 CBZ X8, 0x3D35830
	0x03D3580C ADRP X8, 0x430000
	0x03D35810 LDR X8, [X8 + 0xF8]
	0x03D35814 LDR X0, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x6B3000
	007 Move W8, [X20+2866]
	008 Move X21, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x431000
	015 Move X0, [X0+192]
	016 Call 0x1C17CF4
	017 Move X0, 0x3BF000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x431000
	021 Move X0, [X0+200]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2866], W8
	025 Move X20, [X21+8]
	026 Compare X20, 0
	027 JumpIfEqual {168}
	028 Move X9, 0x431000
	029 Move X9, [X9+192]
	030 Move X8, [X20]
	031 Move X1, [X9]
	032 Move W10, [X8+304]
	033 Move W9, [X1+304]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X8+200]
	036 Add X8, X8, X9
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X22, 0x3BF000
	040 Move X22, [X22+2600]
	041 Move W9, [X20+64]
	042 Move X0, [X22]
	043 Move W8, [X0+224]
	044 Compare W9, 0
	045 JumpIfEqual {92}
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move W0, 1
	050 Move X1, X31
	051 Call Debug.Assert, X0
	052 Move W8, [X20+24]
	053 Move W9, [X21]
	054 Move X1, X31
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSET not yet implemented."
	057 Call Debug.Assert, X0
	058 Move W9, [X20+24]
	059 Move W8, [X20+28]
	060 Move W10, [X21+4]
	061 Move X1, X31
	062 Subtract W8, W8, W9
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CSET not yet implemented."
	065 Call Debug.Assert, X0
	066 Move W8, [X20+28]
	067 Move W9, [X19+48]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X8, [X20+32]
	070 Compare X8, 0
	071 JumpIfEqual {78}
	072 Move W9, [X8+64]
	073 Move W10, 28
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W9, 24
	076 NotImplemented "Instruction CSEL not yet implemented."
	077 Move W8, [X8]
	078 Move [X19+48], W8
	079 Move [X20+64], W31
	080 Move X9, [X19+32]
	081 Compare X9, 0
	082 JumpIfEqual {107}
	083 Move W10, [X20+24]
	084 Move W8, [X9+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, X9
	087 Move X9, [X9+56]
	088 Compare X9, 0
	089 JumpIfEqual {127}
	090 Move W11, [X9+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X8, 0x431000
	096 Move X8, [X8+200]
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move W0, W31
	102 Move X1, [X8]
	103 Move X2, X31
	104 Move X30, [X31+48]
	105 Call Debug.Assert, X0, X1
	106 Return 
	107 Add X21, X20, 48
	108 Move X8, X31
	109 Add X21, X20, 48
	110 Compare X8, 0
	111 JumpIfNotEqual {128}
	112 Move X0, [X22]
	113 Move X22, [X21]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CSET not yet implemented."
	120 Move X1, X31
	121 Call Debug.Assert, X0
	122 Move X8, [X19+32]
	123 Move [X20+56], X8
	124 Move [X19+32], X20
	125 Compare X8, 0
	126 JumpIfNotEqual {135}
	127 Add X21, X20, 48
	128 Move [X21], X8
	129 Move X9, [X8+56]
	130 Move [X20+56], X9
	131 Move [X8+56], X20
	132 Move X8, [X20+56]
	133 Compare X8, 0
	134 JumpIfEqual {138}
	135 Compare X8, 0
	136 JumpIfEqual {168}
	137 Move [X8+48], X20
	138 Move X9, [X21]
	139 Move X8, [X20+32]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Compare X8, 0
	142 JumpIfEqual {149}
	143 Move X0, X19
	144 Move X1, X20
	145 Call BestFitAllocator.CoalesceBlockWithPrevious, X0, X1
	146 Move X20, X0
	147 Compare X0, 0
	148 JumpIfEqual {168}
	149 Move X8, [X20+56]
	150 Move X1, [X20+40]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Compare X1, 0
	153 JumpIfEqual {160}
	154 Move X0, X19
	155 Move X20, [X31+32]
	156 Move X19, [X31+40]
	157 Move X22, [X31+16]
	158 Move X21, [X31+24]
	159 Move X30, [X31+48]
	160 Move X20, [X31+32]
	161 Move X19, [X31+40]
	162 Move X22, [X31+16]
	163 Move X21, [X31+24]
	164 Move X30, [X31+48]
	165 Return 
	166 Move X0, X20
	167 Call 0x1C181E0
	168 Call 0x1C17F20

Method: UnityEngine.UIElements.UIR.BestFitAllocator/Block CoalesceBlockWithPrevious(UnityEngine.UIElements.UIR.BestFitAllocator/Block block)

Disassembly:
	0x03D35818 LDR W8, [X0 + 0xE0]
	0x03D3581C CBNZ W8, 0x3D35824
	0x03D35820 BL 0x1C16DFC
	0x03D35824 LDP X0, X19, [X31 + 0xC8]
	0x03D35828 MOV X1, X19
	0x03D3582C BL 0x3D369BC
	0x03D35830 LDR X0, [X31 + 0xC8]
	0x03D35834 MOV X1, X19
	0x03D35838 MOV X2, X31
	0x03D3583C BL 0x3D241D4
	0x03D35840 MOVI V0.2D, 0x0
	0x03D35844 ADD X19, X31, 0x2C0
	0x03D35848 STR X31, [X31 + 0x3D0]
	0x03D3584C STP V0, V0, [X19 + 0xF0]
	0x03D35850 STR V0, [X19 + 0xE]
	0x03D35854 LDR X8, [X31 + 0x3D0]
	0x03D35858 LDP V1, V0, [X19 + 0xF0]
	0x03D3585C LDR V2, [X19 + 0xE]
	0x03D35860 STR X8, [X20 + 0x30]
	0x03D35864 STP V1, V0, [X20 + 0x10]
	0x03D35868 STR V2, [X20]
	0x03D3586C ADD X31, X31, 0x460
	0x03D35870 LDP X20, X19, [X31 + 0x60]
	0x03D35874 LDP X22, X21, [X31 + 0x50]
	0x03D35878 LDP X24, X23, [X31 + 0x40]
	0x03D3587C LDP X26, X25, [X31 + 0x30]
	0x03D35880 LDP X28, X27, [X31 + 0x20]
	0x03D35884 LDP X29, X30, [X31 + 0x10]
	0x03D35888 LDP D9, D8, [X31], #0x70
	0x03D3588C RET
	0x03D35890 LDR X8, [X31 + 0xD0]
	0x03D35894 LDR X8, [X8 + 0xC8]
	0x03D35898 CBZ X8, 0x3D358A4
	0x03D3589C LDR X19, [X8 + 0x20]
	0x03D358A0 B 0x3D358A8
	0x03D358A4 MOV X19, X31
	0x03D358A8 LDR X8, [X31 + 0xD0]
	0x03D358AC STR X20, [X31 + 0x70]
	0x03D358B0 LDR X8, [X8 + 0xD0]
	0x03D358B4 CBZ X8, 0x3D358C0
	0x03D358B8 LDR X20, [X8 + 0x28]
	0x03D358BC B 0x3D358C4
	0x03D358C0 MOV X20, X31
	0x03D358C4 LDR X8, [X31 + 0xD0]
	0x03D358C8 LDR X8, [X8 + 0xD8]
	0x03D358CC CBZ X8, 0x3D358E0
	0x03D358D0 CMP X20, X8
	0x03D358D4 B.EQ 0x3D3590C
	0x03D358D8 LDR X9, [X8 + 0x20]
	0x03D358DC B 0x3D358E4
	0x03D358E0 MOV X9, X31
	0x03D358E4 LDR X8, [X31 + 0xD0]
	0x03D358E8 LDR X8, [X8 + 0xE0]
	0x03D358EC CBZ X8, 0x3D358FC
	0x03D358F0 LDR X8, [X8 + 0x28]
	0x03D358F4 STR X8, [X31 + 0x90]
	0x03D358F8 B 0x3D35900
	0x03D358FC STR X31, [X31 + 0x90]
	0x03D35900 MOVZ W8, 0x1
	0x03D35904 STR W8, [X31 + 0x5C]
	0x03D35908 B 0x3D35928
	0x03D3590C LDR X8, [X31 + 0xD0]
	0x03D35910 LDR X8, [X8 + 0xE0]
	0x03D35914 CBZ X8, 0x3D36898
	0x03D35918 LDR X20, [X8 + 0x28]
	0x03D3591C STR W31, [X31 + 0x5C]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6B3000
	007 Move W8, [X21+2867]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x3BF000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x431000
	018 Move X0, [X0+208]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2867], W8
	022 Compare X19, 0
	023 JumpIfEqual {81}
	024 Move X8, [X19+48]
	025 Compare X8, 0
	026 JumpIfEqual {81}
	027 Move X9, 0x3BF000
	028 Move X9, [X9+2600]
	029 Move W21, [X8+28]
	030 Move W22, [X19+24]
	031 Move X0, [X9]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Move X1, X31
	039 Call Debug.Assert, X0
	040 Move X8, [X19+32]
	041 Compare X8, 0
	042 JumpIfEqual {81}
	043 Move X8, [X8+56]
	044 Move X1, X31
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSET not yet implemented."
	047 Call Debug.Assert, X0
	048 Move X21, [X19+32]
	049 Compare X21, 0
	050 JumpIfEqual {81}
	051 Move X8, [X19+40]
	052 Move [X21+40], X8
	053 Move X8, [X19+40]
	054 Compare X8, 0
	055 JumpIfEqual {57}
	056 Move [X8+32], X21
	057 Move X8, [X19+56]
	058 Move [X21+56], X8
	059 Move X8, [X19+56]
	060 Compare X8, 0
	061 JumpIfEqual {64}
	062 Move X9, [X19+48]
	063 Move [X8+48], X9
	064 Move W8, [X19+28]
	065 Move [X21+28], W8
	066 Move X0, [X20+40]
	067 Compare X0, 0
	068 JumpIfEqual {81}
	069 Move X8, 0x431000
	070 Move X8, [X8+208]
	071 Move X1, X19
	072 Move X2, [X8]
	073 Call 0x2EF1E90, X0, X1
	074 Move X0, X21
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Return X0
	081 Call 0x1C17F20

Method: UnityEngine.UIElements.UIR.BestFitAllocator/Block BestFitFindAvailableBlock(System.UInt32 size)

Disassembly:
	0x03D35480 BL 0x3DEE13C
	0x03D35484 LDR X0, [X22]
	0x03D35488 LDR W8, [X0 + 0xE0]
	0x03D3548C CBNZ W8, 0x3D35494
	0x03D35490 BL 0x1C16DFC
	0x03D35494 ADD X0, X31, 0x0
	0x03D35498 TBZ X23, 0x0, 0x3D354A8
	0x03D3549C ADD X2, X31, 0x40
	0x03D354A0 MOV X1, X19
	0x03D354A4 B 0x3D354B0
	0x03D354A8 ADD X1, X31, 0x40
	0x03D354AC MOV X2, X19
	0x03D354B0 MOV X3, X31
	0x03D354B4 BL 0x3DEE2C4
	0x03D354B8 MOV X0, X21
	0x03D354BC MOV X1, X31
	0x03D354C0 BL 0x3DEBF58

ISIL:
	001 Move X8, [X0+32]
	002 Compare X8, 0
	003 JumpIfEqual {21}
	004 Move X0, X31
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W9, TEMP
	008 Move W11, [X8+24]
	009 Move W10, [X8+28]
	010 Subtract W10, W10, W11
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 Move X8, [X8+56]
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CSEL not yet implemented."
	017 NotImplemented "Instruction CSEL not yet implemented."
	018 Compare X8, 0
	019 JumpIfNotEqual {8}
	020 Return X0
	021 Move X0, X31
	022 Return X0

Method: System.Void SplitBlock(UnityEngine.UIElements.UIR.BestFitAllocator/Block block, System.UInt32 size)

Disassembly:
	0x03D354D0 EOR W8, W23, 0x1
	0x03D354D4 B.NE 0x3D35470
	0x03D354D8 TBZ X23, 0x0, 0x3D354EC
	0x03D354DC LDP V1, V0, [X31 + 0x60]
	0x03D354E0 LDP V3, V2, [X31 + 0x40]
	0x03D354E4 STP V1, V0, [X19 + 0x20]
	0x03D354E8 STP V3, V2, [X19]
	0x03D354EC LDP X20, X19, [X31 + 0xA0]
	0x03D354F0 LDP X22, X21, [X31 + 0x90]
	0x03D354F4 LDP X30, X23, [X31 + 0x80]
	0x03D354F8 ADD X31, X31, 0xB0
	0x03D354FC RET
	0x03D35500 BL 0x1C16F20
	0x03D35504 SUB X31, X31, 0x30
	0x03D35508 STP X30, X21, [X31 + 0x10]
	0x03D3550C STP X20, X19, [X31 + 0x20]
	0x03D35510 STR X31, [X31 + 0x8]
	0x03D35514 CBZ X1, 0x3D35574
	0x03D35518 MOV X20, X1
	0x03D3551C MOV X19, X0
	0x03D35520 LDR X8, [X20 + 0x378]
	0x03D35524 ADD X0, X31, 0x8
	0x03D35528 MOV X1, X31
	0x03D3552C STR X8, [X31 + 0x8]
	0x03D35530 BL 0x3DF88DC
	0x03D35534 MOV X21, X0
	0x03D35538 CBZ X0, 0x3D35578
	0x03D3553C LDR X8, [X20 + 0x378]
	0x03D35540 ADD X0, X31, 0x8
	0x03D35544 MOV X1, X31
	0x03D35548 STR X8, [X31 + 0x8]
	0x03D3554C BL 0x3DF88DC
	0x03D35550 CMP X0, X19
	0x03D35554 B.EQ 0x3D35578
	0x03D35558 LDR X8, [X20 + 0x378]
	0x03D3555C ADD X0, X31, 0x8
	0x03D35560 MOV X1, X31
	0x03D35564 STR X8, [X31 + 0x8]
	0x03D35568 BL 0x3DF88DC
	0x03D3556C MOV X20, X0
	0x03D35570 CBNZ X0, 0x3D35520
	0x03D35574 BL 0x1C16F20
	0x03D35578 CMP X21, 0x0
	0x03D3557C LDP X20, X19, [X31 + 0x20]
	0x03D35580 LDP X30, X21, [X31 + 0x10]
	0x03D35584 CSET W0, NE
	0x03D35588 ADD X31, X31, 0x30
	0x03D3558C RET
	0x03D35590 STP D9, D8, [X31 - 0x70]!
	0x03D35594 STP X29, X30, [X31 + 0x10]
	0x03D35598 STP X28, X27, [X31 + 0x20]
	0x03D3559C STP X26, X25, [X31 + 0x30]
	0x03D355A0 STP X24, X23, [X31 + 0x40]
	0x03D355A4 STP X22, X21, [X31 + 0x50]
	0x03D355A8 STP X20, X19, [X31 + 0x60]
	0x03D355AC SUB X31, X31, 0x460
	0x03D355B0 ADRP X19, 0x6B2000
	0x03D355B4 MOV X20, X8
	0x03D355B8 LDRB W8, [X19 + 0xB47]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6B3000
	007 Move W8, [X22+2868]
	008 Move W20, W2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x3BF000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x431000
	019 Move X0, [X0+144]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2868], W8
	023 Compare X19, 0
	024 JumpIfEqual {74}
	025 Move X8, 0x3BF000
	026 Move X8, [X8+2600]
	027 Move X0, [X8]
	028 Move W9, [X19+24]
	029 Move W8, [X19+28]
	030 Move W10, [X0+224]
	031 Subtract W22, W8, W9
	032 Compare W10, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move X1, X31
	038 Call Debug.Assert, X0
	039 Move X0, [X21+40]
	040 Compare X0, 0
	041 JumpIfEqual {74}
	042 Move X8, 0x431000
	043 Move X8, [X8+144]
	044 Move X1, [X8]
	045 Call 0x2EF1E28, X0
	046 Compare X0, 0
	047 JumpIfEqual {74}
	048 Move X10, [X19+40]
	049 Move [X0+40], X10
	050 Move X8, [X19+56]
	051 Move [X0+32], X19
	052 Move [X0+48], X19
	053 Move [X0+56], X8
	054 Move W9, [X19+24]
	055 Add W9, W9, W20
	056 Move [X0+24], W9
	057 Move W11, [X19+28]
	058 Move [X0+28], W11
	059 Compare X10, 0
	060 JumpIfEqual {62}
	061 Move [X10+32], X0
	062 Compare X8, 0
	063 JumpIfEqual {65}
	064 Move [X8+48], X0
	065 Move [X19+40], X0
	066 Move [X19+56], X0
	067 Move [X19+28], W9
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Return 
	074 Call 0x1C17F20

