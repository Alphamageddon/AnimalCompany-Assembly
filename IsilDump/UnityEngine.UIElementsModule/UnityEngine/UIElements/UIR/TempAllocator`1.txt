Type: UnityEngine.UIElements.UIR.TempAllocator`1

Method: System.Void .ctor(System.Int32 poolCapacity, System.Int32 excessMinCapacity, System.Int32 excessMaxCapacity)

Disassembly:
	0x026AF664 BLR X8
	0x026AF668 LDR X8, [X22]
	0x026AF66C MOV W22, W0
	0x026AF670 LDR W9, [X8 + 0xE0]
	0x026AF674 CBNZ W9, 0x26AF680
	0x026AF678 MOV X0, X8
	0x026AF67C BL 0x1C16DFC
	0x026AF680 ORN W8, W31, W22, 0x0
	0x026AF684 AND W0, W8, 0x1
	0x026AF688 MOV X1, X31
	0x026AF68C BL 0x3C06E58
	0x026AF690 LDR X8, [X20 + 0x20]
	0x026AF694 ADD X0, X21, 0x18
	0x026AF698 LDR X8, [X8 + 0xC0]
	0x026AF69C LDR X1, [X8 + 0x60]
	0x026AF6A0 LDR W8, [X21 + 0x28]
	0x026AF6A4 LDR X9, [X1]
	0x026AF6A8 ADD W22, W8, W19
	0x026AF6AC BLR X9
	0x026AF6B0 CMP W22, W0
	0x026AF6B4 B.LE 0x26AF738
	0x026AF6B8 LDR W8, [X21 + 0x14]
	0x026AF6BC CMP W8, W19
	0x026AF6C0 B.GE 0x26AF768
	0x026AF6C4 STP X31, X31, [X31 + 0x40]
	0x026AF6C8 LDR X8, [X20 + 0x20]
	0x026AF6CC ADD X0, X31, 0x40
	0x026AF6D0 MOVZ W2, 0x4
	0x026AF6D4 MOV W1, W19
	0x026AF6D8 LDR X8, [X8 + 0xC0]
	0x026AF6DC MOV W3, W31
	0x026AF6E0 LDR X4, [X8 + 0x18]
	0x026AF6E4 BL 0x23F5A04
	0x026AF6E8 LDR X2, [X21 + 0x30]
	0x026AF6EC CBZ X2, 0x26AF960
	0x026AF6F0 LDR X8, [X20 + 0x20]
	0x026AF6F4 LDP X21, X22, [X31 + 0x40]
	0x026AF6F8 ADD X9, X31, 0x58
	0x026AF6FC ADD X3, X31, 0x90
	0x026AF700 LDR X8, [X8 + 0xC0]
	0x026AF704 ADD X4, X31, 0x58
	0x026AF708 LDR X1, [X8 + 0x78]
	0x026AF70C MOV W8, W19
	0x026AF710 LDR X0, [X1]
	0x026AF714 STP X21, X22, [X31 + 0x58]
	0x026AF718 STR X8, [X31 + 0x68]
	0x026AF71C STR X9, [X31 + 0x90]
	0x026AF720 LDR X8, [X1 + 0x10]
	0x026AF724 BLR X8
	0x026AF728 LDR X8, [X20 + 0x20]
	0x026AF72C MOV X0, X21
	0x026AF730 MOV X1, X22
	0x026AF734 B 0x26AF920
	0x026AF738 LDR X8, [X20 + 0x20]
	0x026AF73C LDP X0, X1, [X21 + 0x18]
	0x026AF740 LDR W2, [X21 + 0x28]
	0x026AF744 MOV W3, W19
	0x026AF748 LDR X8, [X8 + 0xC0]
	0x026AF74C LDR X4, [X8 + 0x68]
	0x026AF750 LDR X8, [X4]
	0x026AF754 BLR X8
	0x026AF758 MOV X19, X0
	0x026AF75C MOV X23, X1
	0x026AF760 STR W22, [X21 + 0x28]
	0x026AF764 B 0x26AF940
	0x026AF768 LDR X0, [X21 + 0x30]
	0x026AF76C CBZ X0, 0x26AF960
	0x026AF770 LDR X8, [X20 + 0x20]
	0x026AF774 LDR X8, [X8 + 0xC0]
	0x026AF778 LDR X1, [X8 + 0x80]
	0x026AF77C LDR X8, [X1]
	0x026AF780 BLR X8
	0x026AF784 MOV W22, W0
	0x026AF788 ADD X23, X31, 0xAC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x1D2C000
	011 Move X24, 0x1A45000
	012 Move W8, [X25+960]
	013 Move X24, [X24+2600]
	014 Move X20, X4
	015 Move W23, W3
	016 Move W22, W2
	017 Move W21, W1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x1A45000
	024 Move X0, [X0+2600]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X25+960], W8
	028 Move X0, X19
	029 Move X1, X31
	030 Call Object..ctor, X0
	031 Move X0, [X24]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Move X1, X31
	039 Call Debug.Assert, X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Move X1, X31
	043 Call Debug.Assert, X0
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 Move X1, X31
	047 Call Debug.Assert, X0
	048 Move [X19+16], W22
	049 Move [X19+20], W23
	050 Move [X19+56], W22
	051 Move [X19+32], X31
	052 Move [X19+40], X31
	053 Move [X19+24], X31
	054 Move [X31], X31
	055 Move [X31+8], X31
	056 Move X8, [X20+32]
	057 Add X0, X31, 0
	058 Move W2, 4
	059 Move W1, W21
	060 Move X8, [X8+192]
	061 Move W3, W31
	062 Move X4, [X8+24]
	063 Call NativeArray`1<UInt16>..ctor, X0, X1, X2, X3
	064 Move V0, [X31]
	065 Move [X19+24], V0
	066 Move X8, [X20+32]
	067 Move X8, [X8+192]
	068 Move X0, [X8+32]
	069 Move W8, [X0+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {75}
	074 Call 0x1C5D684
	075 Call 0x1C17F10
	076 Move X8, [X20+32]
	077 Move W1, 8
	078 Move X20, X0
	079 Move X8, [X8+192]
	080 Move X2, [X8+40]
	081 Call List`1<Page<UInt16>>..ctor, X0, X1
	082 Move [X19+48], X20
	083 Move X20, [X31+64]
	084 Move X19, [X31+72]
	085 Move X22, [X31+48]
	086 Move X21, [X31+56]
	087 Move X24, [X31+32]
	088 Move X23, [X31+40]
	089 Move X30, [X31+16]
	090 Move X25, [X31+24]
	091 Add X31, X31, 80
	092 Return 

Method: System.Boolean get_disposed()

Disassembly:
	0x026AF78C SUBS W22, W22, 0x1
	0x026AF790 B.MI 0x26AF880

ISIL:
	001 Move W0, [X0+60]
	002 Return X0

Method: System.Void set_disposed(System.Boolean value)

Disassembly:
	0x026AF794 LDR X2, [X21 + 0x30]
	0x026AF798 CBZ X2, 0x26AF960
	0x026AF79C LDR X8, [X20 + 0x20]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+60], W8
	003 Return 

Method: System.Void Dispose()

Disassembly:
	0x026AF7A0 ADD X3, X31, 0x90
	0x026AF7A4 ADD X4, X31, 0x40
	0x026AF7A8 LDR X8, [X8 + 0xC0]
	0x026AF7AC LDR X1, [X8 + 0x88]
	0x026AF7B0 LDR X0, [X1]
	0x026AF7B4 STR W22, [X31 + 0xAC]
	0x026AF7B8 STR X23, [X31 + 0x90]
	0x026AF7BC LDR X8, [X1 + 0x10]
	0x026AF7C0 BLR X8
	0x026AF7C4 LDR V0, [X31 + 0x4]
	0x026AF7C8 LDR X8, [X31 + 0x50]
	0x026AF7CC ADD X0, X31, 0x70
	0x026AF7D0 STR V0, [X31 + 0x7]
	0x026AF7D4 STR X8, [X31 + 0x80]
	0x026AF7D8 LDR X9, [X20 + 0x20]
	0x026AF7DC ADD W24, W8, W19
	0x026AF7E0 LDR X9, [X9 + 0xC0]
	0x026AF7E4 LDR X1, [X9 + 0x60]
	0x026AF7E8 LDR X9, [X1]
	0x026AF7EC BLR X9
	0x026AF7F0 CMP W24, W0
	0x026AF7F4 B.GT 0x26AF78C
	0x026AF7F8 LDR X8, [X20 + 0x20]
	0x026AF7FC LDP X0, X1, [X31 + 0x70]
	0x026AF800 LDR W2, [X31 + 0x80]
	0x026AF804 MOV W3, W19
	0x026AF808 LDR X8, [X8 + 0xC0]
	0x026AF80C LDR X4, [X8 + 0x68]
	0x026AF810 LDR X8, [X4]
	0x026AF814 BLR X8
	0x026AF818 STR W24, [X31 + 0x80]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1D2C000
	007 Move X21, 0x1A4C000
	008 Move W8, [X22+961]
	009 Move X21, [X21+3088]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1A4C000
	017 Move X0, [X0+3088]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+961], W8
	021 Move X8, [X20+32]
	022 Move W1, 1
	023 Move X0, X19
	024 Move X8, [X8+192]
	025 Move X2, [X8+48]
	026 Call 0x26AF81C, X0, X1
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X1, X31
	038 Move X30, [X31+48]
	039 Call GC.SuppressFinalize, X0
	040 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x026AF81C LDR V0, [X31 + 0x7]
	0x026AF820 LDR X2, [X21 + 0x30]
	0x026AF824 LDR X8, [X31 + 0x80]
	0x026AF828 STR V0, [X31 + 0x4]
	0x026AF82C STR X8, [X31 + 0x50]
	0x026AF830 CBZ X2, 0x26AF960
	0x026AF834 LDR X8, [X20 + 0x20]
	0x026AF838 MOV X23, X1
	0x026AF83C LDR V0, [X31 + 0x4]
	0x026AF840 ADD X9, X31, 0xAC
	0x026AF844 LDR X8, [X8 + 0xC0]
	0x026AF848 ADD X10, X31, 0x20
	0x026AF84C MOV X19, X0
	0x026AF850 ADD X3, X31, 0x90
	0x026AF854 LDR X1, [X8 + 0x90]
	0x026AF858 LDR X8, [X31 + 0x50]
	0x026AF85C ADD X4, X31, 0x20
	0x026AF860 LDR X0, [X1]
	0x026AF864 STR V0, [X31 + 0x2]
	0x026AF868 STR X8, [X31 + 0x30]
	0x026AF86C STR W22, [X31 + 0xAC]
	0x026AF870 STP X9, X10, [X31 + 0x90]
	0x026AF874 LDR X8, [X1 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+60]
	005 Compare W8, 0
	006 JumpIfNotEqual {26}
	007 Move X19, X0
	008 Move TEMP, X1
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {24}
	012 Move X8, [X2+32]
	013 Move X0, X19
	014 Move X20, X2
	015 Move X8, [X8+192]
	016 Move X1, [X8+64]
	017 Call 0x26AFBC4, X0
	018 Move X8, [X20+32]
	019 Add X0, X19, 24
	020 Move X8, [X8+192]
	021 Move X1, [X8+72]
	022 Call NativeArray`1<UInt16>.Dispose, X0
	023 Move [X19+40], W31
	024 Move W8, 1
	025 Move [X19+60], W8
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

Method: Unity.Collections.NativeSlice`1<T> Alloc(System.Int32 count)

Disassembly:
	0x026AF878 BLR X8
	0x026AF87C B 0x26AF940
	0x026AF880 LDR W1, [X21 + 0x38]
	0x026AF884 CMP W1, W19
	0x026AF888 B.GE 0x26AF89C
	0x026AF88C UBFM W1, W1, 0x1F, 0x1E
	0x026AF890 CMP W1, W19
	0x026AF894 B.LT 0x26AF88C
	0x026AF898 STR W1, [X21 + 0x38]
	0x026AF89C STP X31, X31, [X31 + 0x40]
	0x026AF8A0 LDR X8, [X20 + 0x20]
	0x026AF8A4 ADD X0, X31, 0x40
	0x026AF8A8 MOVZ W2, 0x4
	0x026AF8AC MOV W3, W31
	0x026AF8B0 LDR X8, [X8 + 0xC0]
	0x026AF8B4 LDR X4, [X8 + 0x18]
	0x026AF8B8 BL 0x23F5A04
	0x026AF8BC LDR X2, [X21 + 0x30]
	0x026AF8C0 CBZ X2, 0x26AF960
	0x026AF8C4 LDR X8, [X20 + 0x20]
	0x026AF8C8 LDP X22, X23, [X31 + 0x40]
	0x026AF8CC ADD X9, X31, 0x8
	0x026AF8D0 ADD X3, X31, 0x90
	0x026AF8D4 LDR X8, [X8 + 0xC0]
	0x026AF8D8 ADD X4, X31, 0x8
	0x026AF8DC LDR X1, [X8 + 0x78]
	0x026AF8E0 MOV W8, W19
	0x026AF8E4 LDR X0, [X1]
	0x026AF8E8 STP X22, X23, [X31 + 0x8]
	0x026AF8EC STR X8, [X31 + 0x18]
	0x026AF8F0 STR X9, [X31 + 0x90]
	0x026AF8F4 LDR X8, [X1 + 0x10]
	0x026AF8F8 BLR X8
	0x026AF8FC LDR W8, [X21 + 0x38]
	0x026AF900 LDR W9, [X21 + 0x14]
	0x026AF904 MOV X0, X22
	0x026AF908 MOV X1, X23
	0x026AF90C UBFM W8, W8, 0x1F, 0x1E
	0x026AF910 CMP W8, W9
	0x026AF914 CSEL W8, W8, W9, LT
	0x026AF918 STR W8, [X21 + 0x38]
	0x026AF91C LDR X8, [X20 + 0x20]
	0x026AF920 LDR X8, [X8 + 0xC0]
	0x026AF924 LDR X4, [X8 + 0x68]
	0x026AF928 LDR X8, [X4]
	0x026AF92C MOV W2, W31
	0x026AF930 MOV W3, W19
	0x026AF934 BLR X8
	0x026AF938 MOV X19, X0
	0x026AF93C MOV X23, X1
	0x026AF940 MOV X0, X19
	0x026AF944 MOV X1, X23
	0x026AF948 LDP X20, X19, [X31 + 0xD0]
	0x026AF94C LDP X22, X21, [X31 + 0xC0]
	0x026AF950 LDP X24, X23, [X31 + 0xB0]
	0x026AF954 LDR X30, [X31 + 0xA0]
	0x026AF958 ADD X31, X31, 0xE0
	0x026AF95C RET
	0x026AF960 BL 0x1C16F20
	0x026AF964 STP X30, X19, [X31 - 0x10]!
	0x026AF968 LDR X8, [X1 + 0x20]
	0x026AF96C MOV X19, X0
	0x026AF970 LDR X8, [X8 + 0xC0]
	0x026AF974 LDR X1, [X8 + 0x40]
	0x026AF978 LDR X8, [X1]
	0x026AF97C BLR X8
	0x026AF980 LDR W8, [X19 + 0x10]
	0x026AF984 STR W31, [X19 + 0x28]
	0x026AF988 STR W8, [X19 + 0x38]
	0x026AF98C LDP X30, X19, [X31], #0x10
	0x026AF990 RET
	0x026AF994 SUB X31, X31, 0xB0
	0x026AF998 STR X30, [X31 + 0x80]
	0x026AF99C STP X22, X21, [X31 + 0x90]
	0x026AF9A0 STP X20, X19, [X31 + 0xA0]
	0x026AF9A4 MOVI V0.2D, 0x0
	0x026AF9A8 STR X31, [X31 + 0x70]
	0x026AF9AC STP V0, V0, [X31 + 0x50]
	0x026AF9B0 STP X31, X31, [X31 + 0x20]
	0x026AF9B4 LDR X2, [X0 + 0x30]
	0x026AF9B8 CBZ X2, 0x26AFA9C
	0x026AF9BC LDR X8, [X1 + 0x20]
	0x026AF9C0 MOV X19, X1
	0x026AF9C4 MOV X20, X0
	0x026AF9C8 ADD X4, X31, 0x50
	0x026AF9CC LDR X8, [X8 + 0xC0]
	0x026AF9D0 MOV X3, X31
	0x026AF9D4 LDR X1, [X8 + 0x98]
	0x026AF9D8 LDR X0, [X1]
	0x026AF9DC LDR X8, [X1 + 0x10]
	0x026AF9E0 BLR X8
	0x026AF9E4 LDR X8, [X19 + 0x20]
	0x026AF9E8 LDR X8, [X8 + 0xC0]
	0x026AF9EC LDR X1, [X8 + 0xB8]
	0x026AF9F0 LDR X8, [X1]
	0x026AF9F4 ADD X0, X31, 0x50
	0x026AF9F8 BLR X8
	0x026AF9FC TBZ X0, 0x0, 0x26AFA50
	0x026AFA00 LDR X8, [X19 + 0x20]
	0x026AFA04 LDR X8, [X8 + 0xC0]
	0x026AFA08 LDR X1, [X8 + 0xA8]
	0x026AFA0C LDR X0, [X1]
	0x026AFA10 LDR X8, [X1 + 0x10]
	0x026AFA14 ADD X2, X31, 0x50
	0x026AFA18 ADD X4, X31, 0x8
	0x026AFA1C MOV X3, X31
	0x026AFA20 BLR X8
	0x026AFA24 LDUR V0, [X31 + 0x8]
	0x026AFA28 LDR X8, [X31 + 0x18]
	0x026AFA2C STP V0, V0, [X31 + 0x20]
	0x026AFA30 STR X8, [X31 + 0x40]
	0x026AFA34 LDR X8, [X19 + 0x20]
	0x026AFA38 LDR X8, [X8 + 0xC0]
	0x026AFA3C LDR X1, [X8 + 0x48]
	0x026AFA40 LDR X8, [X1]
	0x026AFA44 ADD X0, X31, 0x20
	0x026AFA48 BLR X8
	0x026AFA4C B 0x26AF9E4
	0x026AFA50 MOV X21, X31
	0x026AFA54 LDR X8, [X19 + 0x20]
	0x026AFA58 ADD X0, X31, 0x50
	0x026AFA5C LDR X8, [X8 + 0xC0]
	0x026AFA60 LDR X1, [X8 + 0xC0]
	0x026AFA64 BL 0x2BD5F44
	0x026AFA68 CBNZ X21, 0x26AFAA0
	0x026AFA6C LDR X0, [X20 + 0x30]
	0x026AFA70 CBZ X0, 0x26AFA9C
	0x026AFA74 LDR X8, [X19 + 0x20]
	0x026AFA78 LDR X8, [X8 + 0xC0]
	0x026AFA7C LDR X1, [X8 + 0xC8]
	0x026AFA80 LDR X8, [X1]
	0x026AFA84 BLR X8
	0x026AFA88 LDP X20, X19, [X31 + 0xA0]
	0x026AFA8C LDP X22, X21, [X31 + 0x90]
	0x026AFA90 LDR X30, [X31 + 0x80]
	0x026AFA94 ADD X31, X31, 0xB0
	0x026AFA98 RET
	0x026AFA9C BL 0x1C16F20
	0x026AFAA0 MOV X0, X21
	0x026AFAA4 BL 0x1C16F18
	0x026AFAA8 B 0x26AFAB0
	0x026AFAAC B 0x26AFAB0
	0x026AFAB0 MOV X22, X0
	0x026AFAB4 CMP W1, 0x1
	0x026AFAB8 B.NE 0x26AFAD0
	0x026AFABC MOV X0, X22
	0x026AFAC0 BL 0x3EB1AD0
	0x026AFAC4 LDR X21, [X0]
	0x026AFAC8 BL 0x3EB1AE0
	0x026AFACC B 0x26AFA54
	0x026AFAD0 MOV X21, X31
	0x026AFAD4 B 0x26AFADC
	0x026AFAD8 MOV X22, X0
	0x026AFADC LDR X8, [X19 + 0x20]
	0x026AFAE0 LDR X8, [X8 + 0xC0]
	0x026AFAE4 LDR X1, [X8 + 0xC0]
	0x026AFAE8 ADD X0, X31, 0x50
	0x026AFAEC BL 0x2BD5F44
	0x026AFAF0 CBNZ X21, 0x26AFAFC
	0x026AFAF4 MOV X0, X22
	0x026AFAF8 BL 0x1D2C690
	0x026AFAFC MOV X0, X21
	0x026AFB00 BL 0x1C16F18
	0x026AFB04 BL 0x1990590
	0x026AFB08 LDR X0, [X0 + 0x60]
	0x026AFB0C RET
	0x026AFB10 STR X1, [X0 + 0x60]
	0x026AFB14 RET
	0x026AFB18 STP X30, X23, [X31 - 0x30]!
	0x026AFB1C STP X22, X21, [X31 + 0x10]
	0x026AFB20 STP X20, X19, [X31 + 0x20]
	0x026AFB24 ADRP X21, 0x1D2B000
	0x026AFB28 ADRP X23, 0x1A44000
	0x026AFB2C ADRP X22, 0x1A44000
	0x026AFB30 LDRB W8, [X21 + 0x3C9]
	0x026AFB34 LDR X23, [X23 + 0xD90]
	0x026AFB38 LDR X22, [X22 + 0xD98]
	0x026AFB3C MOV X20, X1
	0x026AFB40 MOV X19, X0
	0x026AFB44 TBNZ X8, 0x0, 0x26AFB74
	0x026AFB48 ADRP X0, 0x1A44000
	0x026AFB4C LDR X0, [X0 + 0x6A8]
	0x026AFB50 BL 0x1C16CF4
	0x026AFB54 ADRP X0, 0x1A44000
	0x026AFB58 LDR X0, [X0 + 0xD90]
	0x026AFB5C BL 0x1C16CF4
	0x026AFB60 ADRP X0, 0x1A44000
	0x026AFB64 LDR X0, [X0 + 0xD98]
	0x026AFB68 BL 0x1C16CF4
	0x026AFB6C MOVZ W8, 0x1
	0x026AFB70 STRB W8, [X21 + 0x3C9]
	0x026AFB74 LDR X0, [X23]
	0x026AFB78 BL 0x1C16F10
	0x026AFB7C MOV X1, X31
	0x026AFB80 MOV X21, X0
	0x026AFB84 BL 0x35C54C8
	0x026AFB88 LDR X0, [X22]
	0x026AFB8C BL 0x1C16F10
	0x026AFB90 MOV X1, X31
	0x026AFB94 MOV X22, X0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+64], X26
	004 Move [X31+72], X25
	005 Move [X31+80], X24
	006 Move [X31+88], X23
	007 Move [X31+96], X22
	008 Move [X31+104], X21
	009 Move [X31+112], X20
	010 Move [X31+120], X19
	011 Move X23, 0x1D2C000
	012 Move X22, 0x1A45000
	013 Move W8, [X23+962]
	014 Move X22, [X22+2600]
	015 Move X20, X2
	016 Move W19, W1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x1A45000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+962], W8
	027 Move X0, [X22]
	028 Move W22, [X21+60]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move X1, X31
	036 Call Debug.Assert, X0
	037 Move W2, [X21+40]
	038 Move W8, [X21+32]
	039 Add W22, W2, W19
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W8, [X21+20]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X31+8], X31
	044 Move [X31+16], X31
	045 Move X8, [X20+32]
	046 Add X0, X31, 8
	047 Move W2, 4
	048 Move W1, W19
	049 Move X8, [X8+192]
	050 Move W3, W31
	051 Move X4, [X8+24]
	052 Call NativeArray`1<UInt16>..ctor, X0, X1, X2, X3
	053 Move X0, [X21+48]
	054 Compare X0, 0
	055 JumpIfEqual {221}
	056 Move X8, [X20+32]
	057 Move W11, [X0+28]
	058 Move X22, [X31+8]
	059 Move X21, [X31+16]
	060 Move X9, [X8+192]
	061 Move X8, [X0+16]
	062 Move X10, [X9+120]
	063 Add W9, W11, 1
	064 Move [X0+28], W9
	065 Compare X8, 0
	066 JumpIfEqual {221}
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Move W9, [X8+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W9, W19
	071 Move W12, 24
	072 Add W10, W11, 1
	073 NotImplemented "Instruction MADD not yet implemented."
	074 Move [X0+24], W10
	075 Move [X8+32], X22
	076 Move [X8+40], X21
	077 Move [X8+48], X9
	078 Move X8, [X20+32]
	079 Move X0, [X21+24]
	080 Move X1, [X21+32]
	081 Move W3, W19
	082 Move X8, [X8+192]
	083 Move X4, [X8+104]
	084 Call NativeSliceExtensions.Slice, X0, X1, X2
	085 Move [X21+40], W22
	086 Move X8, [X21+48]
	087 Compare X8, 0
	088 JumpIfEqual {221}
	089 Move W22, [X8+24]
	090 Subtract W22, W22, 1
	091 Move X0, [X21+48]
	092 Compare X0, 0
	093 JumpIfEqual {221}
	094 Move X8, [X20+32]
	095 Move W1, W22
	096 Move X8, [X8+192]
	097 Move X2, [X8+136]
	098 Add X8, X31, 24
	099 Call List`1<Page<UInt16>>.get_Item, X0, X1
	100 Move X23, [X31+32]
	101 Move X24, [X31+40]
	102 Add W26, W24, W19
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X8, [X20+32]
	105 Move X25, [X31+24]
	106 Move X1, X23
	107 Move W2, W24
	108 Move X8, [X8+192]
	109 Move X0, X25
	110 Move W3, W19
	111 Move X4, [X8+104]
	112 Call NativeSliceExtensions.Slice, X0, X1, X2
	113 Move X19, X0
	114 Move X0, [X21+48]
	115 Compare X0, 0
	116 JumpIfEqual {221}
	117 Move X8, [X20+32]
	118 And X9, X24, 0
	119 Move W10, W26
	120 Move X21, X1
	121 Move X8, [X8+192]
	122 Or X9, X9, X10
	123 Add X2, X31, 24
	124 Move W1, W22
	125 Move X3, [X8+144]
	126 Move [X31+24], X25
	127 Move [X31+32], X23
	128 Move [X31+40], X9
	129 Call List`1<Page<UInt16>>.set_Item, X0, X1, X2
	130 Move W1, [X21+56]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move W1, W1
	133 ShiftRight W1, 31
	134 And W1, W1, 0x3FFFFFFF
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move [X21+56], W1
	137 Move [X31+8], X31
	138 Move [X31+16], X31
	139 Move X8, [X20+32]
	140 Add X0, X31, 8
	141 Move W2, 4
	142 Move W3, W31
	143 Move X8, [X8+192]
	144 Move X4, [X8+24]
	145 Call NativeArray`1<UInt16>..ctor, X0, X1, X2, X3
	146 Move X0, [X21+48]
	147 Compare X0, 0
	148 JumpIfEqual {221}
	149 Move X8, [X20+32]
	150 Move W11, [X0+28]
	151 Move X23, [X31+8]
	152 Move X22, [X31+16]
	153 Move X9, [X8+192]
	154 Move X8, [X0+16]
	155 Move X10, [X9+120]
	156 Add W9, W11, 1
	157 Move [X0+28], W9
	158 Compare X8, 0
	159 JumpIfEqual {221}
	160 NotImplemented "Instruction LDRSW not yet implemented."
	161 Move W9, [X8+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move W9, W19
	164 Move W12, 24
	165 Add W10, W11, 1
	166 NotImplemented "Instruction MADD not yet implemented."
	167 Move [X0+24], W10
	168 Move [X8+32], X23
	169 Move [X8+40], X22
	170 Move [X8+48], X9
	171 Move X8, [X10+32]
	172 Add X1, X31, 24
	173 Move X8, [X8+192]
	174 Move X2, [X8+112]
	175 Move [X31+24], X22
	176 Move [X31+32], X21
	177 Move [X31+40], X9
	178 Call List`1<Page<UInt16>>.AddWithResize, X0, X1
	179 Move X8, [X20+32]
	180 Move X0, X22
	181 Move X1, X21
	182 Move X8, [X10+32]
	183 Add X1, X31, 24
	184 Move X8, [X8+192]
	185 Move X2, [X8+112]
	186 Move [X31+24], X23
	187 Move [X31+32], X22
	188 Move [X31+40], X9
	189 Call List`1<Page<UInt16>>.AddWithResize, X0, X1
	190 Move W8, [X21+56]
	191 Move W9, [X21+20]
	192 Move X0, X23
	193 Move X1, X22
	194 Move W8, W8
	195 ShiftRight W8, 31
	196 And W8, W8, 0x3FFFFFFF
	197 NotImplemented "Instruction CMP not yet implemented."
	198 NotImplemented "Instruction CSEL not yet implemented."
	199 Move [X21+56], W8
	200 Move X8, [X20+32]
	201 Move X8, [X8+192]
	202 Move X4, [X8+104]
	203 Move W2, W31
	204 Move W3, W19
	205 Call NativeSliceExtensions.Slice, X0, X1, X2
	206 Move X19, X0
	207 Move X21, X1
	208 Move X0, X19
	209 Move X1, X21
	210 Move X20, [X31+112]
	211 Move X19, [X31+120]
	212 Move X22, [X31+96]
	213 Move X21, [X31+104]
	214 Move X24, [X31+80]
	215 Move X23, [X31+88]
	216 Move X26, [X31+64]
	217 Move X25, [X31+72]
	218 Move X30, [X31+48]
	219 Add X31, X31, 128
	220 Return X0
	221 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x026AFB98 BL 0x35C5548
	0x026AFB9C MOV X0, X19
	0x026AFBA0 MOV X1, X21
	0x026AFBA4 MOV X2, X22
	0x026AFBA8 MOV X3, X20
	0x026AFBAC MOV X4, X31
	0x026AFBB0 BL 0x35D1D80
	0x026AFBB4 CBZ X19, 0x26AFC34
	0x026AFBB8 LDR X19, [X19 + 0x48]
	0x026AFBBC CBZ X19, 0x26AFC34
	0x026AFBC0 ADRP X10, 0x1A44000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move X8, [X8+192]
	006 Move X1, [X8+64]
	007 Call 0x26AFBC4, X0
	008 Move W8, [X19+16]
	009 Move [X19+40], W31
	010 Move [X19+56], W8
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 

Method: System.Void ReleaseExcess()

Disassembly:
	0x026AFBC4 LDR X8, [X19]
	0x026AFBC8 LDR X10, [X10 + 0x6A8]
	0x026AFBCC LDRH W9, [X8 + 0x12E]
	0x026AFBD0 LDR X1, [X10]
	0x026AFBD4 CBZ X9, 0x26AFBF8
	0x026AFBD8 LDR X10, [X8 + 0xB0]
	0x026AFBDC ADD X10, X10, 0x8
	0x026AFBE0 LDUR X11, [X10 - 0x8]
	0x026AFBE4 CMP X11, X1
	0x026AFBE8 B.EQ 0x26AFC08
	0x026AFBEC SUBS X9, X9, 0x1
	0x026AFBF0 ADD X10, X10, 0x10
	0x026AFBF4 B.NE 0x26AFBE0
	0x026AFBF8 MOVZ W2, 0x1
	0x026AFBFC MOV X0, X19
	0x026AFC00 BL 0x1C5C788
	0x026AFC04 B 0x26AFC18
	0x026AFC08 LDR W9, [X10]
	0x026AFC0C ADD W9, W9, 0x1
	0x026AFC10 ADD X8, X8, W9, 0x4, SXTW
	0x026AFC14 ADD X0, X8, 0x138
	0x026AFC18 LDP X3, X2, [X0]
	0x026AFC1C MOV X0, X19
	0x026AFC20 LDP X20, X19, [X31 + 0x20]
	0x026AFC24 LDP X22, X21, [X31 + 0x10]
	0x026AFC28 MOVZ W1, 0x1
	0x026AFC2C LDP X30, X23, [X31], #0x30
	0x026AFC30 BR X3
	0x026AFC34 BL 0x1C16F20
	0x026AFC38 STP X29, X30, [X31 - 0x30]!
	0x026AFC3C STP X22, X21, [X31 + 0x10]
	0x026AFC40 STP X20, X19, [X31 + 0x20]
	0x026AFC44 ADD X29, X31, 0x0
	0x026AFC48 SUB X31, X31, 0x10
	0x026AFC4C MRS X22, 0xC000
	0x026AFC50 LDR X8, [X22 + 0x28]
	0x026AFC54 MOV X19, X1
	0x026AFC58 STUR X8, [X29 - 0x8]
	0x026AFC5C LDR X8, [X2 + 0x20]
	0x026AFC60 LDR X8, [X8 + 0xC0]
	0x026AFC64 LDP X8, X9, [X8]
	0x026AFC68 LDR W20, [X9 + 0xFC]
	0x026AFC6C ADD X9, X31, 0x0
	0x026AFC70 ADD X10, X20, 0xF
	0x026AFC74 AND X10, X10, 0x1FFFFFFFF
	0x026AFC78 SUB X21, X9, X10
	0x026AFC7C ADD X31, X21, 0x0
	0x026AFC80 LDR X1, [X8 + 0x80]
	0x026AFC84 BL 0x1C16D18
	0x026AFC88 MOV X1, X0
	0x026AFC8C MOV X0, X21
	0x026AFC90 MOV X2, X20
	0x026AFC94 BL 0x3EB1AC0
	0x026AFC98 MOV X0, X19
	0x026AFC9C MOV X1, X21
	0x026AFCA0 MOV X2, X20
	0x026AFCA4 BL 0x3EB1AC0
	0x026AFCA8 LDR X8, [X22 + 0x28]
	0x026AFCAC LDUR X9, [X29 - 0x8]
	0x026AFCB0 CMP X8, X9
	0x026AFCB4 B.NE 0x26AFCCC
	0x026AFCB8 ADD X31, X29, 0x0
	0x026AFCBC LDP X20, X19, [X31 + 0x20]
	0x026AFCC0 LDP X22, X21, [X31 + 0x10]
	0x026AFCC4 LDP X29, X30, [X31], #0x30
	0x026AFCC8 RET
	0x026AFCCC BL 0x3EB1B20
	0x026AFCD0 STP X29, X30, [X31 - 0x40]!
	0x026AFCD4 STR X23, [X31 + 0x10]
	0x026AFCD8 STP X22, X21, [X31 + 0x20]
	0x026AFCDC STP X20, X19, [X31 + 0x30]
	0x026AFCE0 ADD X29, X31, 0x0
	0x026AFCE4 SUB X31, X31, 0x10
	0x026AFCE8 MRS X22, 0xC000
	0x026AFCEC LDR X8, [X22 + 0x28]
	0x026AFCF0 ADD X9, X31, 0x0
	0x026AFCF4 MOV X20, X0
	0x026AFCF8 STUR X8, [X29 - 0x8]
	0x026AFCFC STUR X1, [X29 - 0x10]
	0x026AFD00 LDR X23, [X2 + 0x20]
	0x026AFD04 LDR X8, [X23 + 0xC0]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+128], X22
	004 Move [X31+136], X21
	005 Move [X31+144], X20
	006 Move [X31+152], X19
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move [X31+96], X31
	009 Move [X31+64], V0
	010 Move [X31+72], V0
	011 Move [X31+48], X31
	012 Move [X31+56], X31
	013 Move X19, X0
	014 Move X0, [X0+48]
	015 Compare X0, 0
	016 JumpIfEqual {69}
	017 Move X8, [X1+32]
	018 Move X20, X1
	019 Move X8, [X8+192]
	020 Move X1, [X8+152]
	021 Add X8, X31, 8
	022 Call List`1<Page<UInt16>>.GetEnumerator, X0
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 Move X8, [X31+40]
	026 Add X9, X31, 64
	027 Add X21, X9, 16
	028 Move [X31+64], V0
	029 Move [X31+72], V1
	030 Move [X31+96], X8
	031 Move X8, [X20+32]
	032 Move X8, [X8+192]
	033 Move X1, [X8+184]
	034 Add X0, X31, 64
	035 Call Enumerator<Page<UInt16>>.MoveNext, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {47}
	040 Move X8, [X20+32]
	041 Move V0, [X21]
	042 Move X8, [X8+192]
	043 Move [X31+3], V0
	044 Move X1, [X8+72]
	045 Add X0, X31, 48
	046 Call NativeArray`1<UInt16>.Dispose, X0
	047 Move X21, X31
	048 Move X8, [X20+32]
	049 Add X0, X31, 64
	050 Move X8, [X8+192]
	051 Move X1, [X8+192]
	052 Call Enumerator<Page<UInt16>>.Dispose, X0
	053 Compare X21, 0
	054 JumpIfNotEqual {70}
	055 Move X8, [X19+48]
	056 Compare X8, 0
	057 JumpIfEqual {69}
	058 Move W9, [X8+28]
	059 Move X20, [X31+144]
	060 Move X19, [X31+152]
	061 Move X22, [X31+128]
	062 Move X21, [X31+136]
	063 Move X30, [X31+112]
	064 Add W9, W9, 1
	065 Move [X8+24], W31
	066 Move [X8+28], W9
	067 Add X31, X31, 160
	068 Return 
	069 Call 0x1C17F20
	070 Move X0, X21
	071 Call 0x1C17F18
	072 Move X22, X0
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X22
	075 Call 0x3EB2AD0
	076 Move X21, [X0]
	077 Call 0x3EB2AE0
	078 Move X21, X31
	079 Move X22, X0
	080 Move X8, [X20+32]
	081 Move X8, [X8+192]
	082 Move X1, [X8+192]
	083 Add X0, X31, 64
	084 Call Enumerator<Page<UInt16>>.Dispose, X0
	085 Compare X21, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X22
	088 Call 0x1D2D690
	089 Move X0, X21
	090 Call 0x1C17F18
	091 Call 0x1991590

