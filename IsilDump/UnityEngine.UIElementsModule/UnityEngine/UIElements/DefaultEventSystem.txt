Type: UnityEngine.UIElements.DefaultEventSystem

Method: System.Boolean get_isAppFocused()

Disassembly:
	0x03D8E4E8 BL 0x1C5C788
	0x03D8E4EC B 0x3D8E500
	0x03D8E4F0 LDR W9, [X10]
	0x03D8E4F4 ADD W9, W9, 0xC
	0x03D8E4F8 ADD X8, X8, W9, 0x4, SXTW
	0x03D8E4FC ADD X0, X8, 0x138
	0x03D8E500 LDP X8, X1, [X0]
	0x03D8E504 MOV X0, X22
	0x03D8E508 BLR X8
	0x03D8E50C LDR V1, [X19 + 0x70]
	0x03D8E510 FCMP S0, S1
	0x03D8E514 B.GE 0x3D8E520
	0x03D8E518 LDR W8, [X19 + 0x74]
	0x03D8E51C B 0x3D8E528
	0x03D8E520 MOV W8, W31
	0x03D8E524 STR W21, [X19 + 0x6C]
	0x03D8E528 LDR X23, [X19 + 0x10]
	0x03D8E52C ADD W22, W8, 0x1
	0x03D8E530 STR W22, [X19 + 0x74]
	0x03D8E534 CBNZ X23, 0x3D8E54C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x65A000
	005 Move X20, 0x366000
	006 Move W8, [X19+3645]
	007 Move X20, [X20+2416]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x366000
	013 Move X0, [X0+2416]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3645], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X0, X31
	025 Move X30, [X31+32]
	026 Call Application.get_isFocused
	027 Return X0

Method: UnityEngine.UIElements.DefaultEventSystem/IInput get_input()

Disassembly:
	0x03D8E538 MOV X0, X19
	0x03D8E53C BL 0x3D8D55C
	0x03D8E540 MOV X23, X0
	0x03D8E544 STR X0, [X19 + 0x10]
	0x03D8E548 CBZ X0, 0x3D8E8E0
	0x03D8E54C LDR X8, [X23]
	0x03D8E550 LDR X1, [X27]
	0x03D8E554 LDRH W9, [X8 + 0x12E]
	0x03D8E558 CBZ X9, 0x3D8E57C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call DefaultEventSystem.GetDefaultInput, X0
	009 Move [X19+16], X0
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0

Method: UnityEngine.UIElements.DefaultEventSystem/IInput GetDefaultInput()

Disassembly:
	0x03D8E55C LDR X10, [X8 + 0xB0]
	0x03D8E560 ADD X10, X10, 0x8
	0x03D8E564 LDUR X11, [X10 - 0x8]
	0x03D8E568 CMP X11, X1
	0x03D8E56C B.EQ 0x3D8E58C
	0x03D8E570 SUBS X9, X9, 0x1
	0x03D8E574 ADD X10, X10, 0x10
	0x03D8E578 B.NE 0x3D8E564
	0x03D8E57C MOVZ W2, 0xC
	0x03D8E580 MOV X0, X23
	0x03D8E584 BL 0x1C5C788
	0x03D8E588 B 0x3D8E59C
	0x03D8E58C LDR W9, [X10]
	0x03D8E590 ADD W9, W9, 0xC
	0x03D8E594 ADD X8, X8, W9, 0x4, SXTW
	0x03D8E598 ADD X0, X8, 0x138
	0x03D8E59C LDP X8, X1, [X0]
	0x03D8E5A0 MOV X0, X23
	0x03D8E5A4 BLR X8
	0x03D8E5A8 LDR X23, [X19 + 0x10]
	0x03D8E5AC MOV V12.16B, V0.16B
	0x03D8E5B0 CBNZ X23, 0x3D8E5C8
	0x03D8E5B4 MOV X0, X19
	0x03D8E5B8 BL 0x3D8D55C
	0x03D8E5BC MOV X23, X0
	0x03D8E5C0 STR X0, [X19 + 0x10]
	0x03D8E5C4 CBZ X0, 0x3D8E8E0
	0x03D8E5C8 LDR X8, [X23]
	0x03D8E5CC LDR X1, [X27]
	0x03D8E5D0 LDRH W9, [X8 + 0x12E]
	0x03D8E5D4 CBZ X9, 0x3D8E5F8
	0x03D8E5D8 LDR X10, [X8 + 0xB0]
	0x03D8E5DC ADD X10, X10, 0x8
	0x03D8E5E0 LDUR X11, [X10 - 0x8]
	0x03D8E5E4 CMP X11, X1
	0x03D8E5E8 B.EQ 0x3D8E608
	0x03D8E5EC SUBS X9, X9, 0x1
	0x03D8E5F0 ADD X10, X10, 0x10
	0x03D8E5F4 B.NE 0x3D8E5E0
	0x03D8E5F8 MOVZ W2, 0xD
	0x03D8E5FC MOV X0, X23
	0x03D8E600 BL 0x1C5C788
	0x03D8E604 B 0x3D8E618
	0x03D8E608 LDR W9, [X10]
	0x03D8E60C ADD W9, W9, 0xD
	0x03D8E610 ADD X8, X8, W9, 0x4, SXTW
	0x03D8E614 ADD X0, X8, 0x138
	0x03D8E618 LDP X8, X1, [X0]
	0x03D8E61C MOV X0, X23
	0x03D8E620 BLR X8
	0x03D8E624 FADD S0, S12, S0
	0x03D8E628 STR S0, [X19 + 0x70]
	0x03D8E62C LDR X0, [X28]
	0x03D8E630 LDR W8, [X0 + 0xE0]
	0x03D8E634 CBNZ W8, 0x3D8E640
	0x03D8E638 BL 0x1C16DFC
	0x03D8E63C LDR X0, [X28]
	0x03D8E640 LDR X8, [X0 + 0xB8]
	0x03D8E644 LDR X0, [X29]
	0x03D8E648 LDR X24, [X31 + 0x18]
	0x03D8E64C LDR W23, [X8 + 0x8]
	0x03D8E650 LDR W8, [X0 + 0xE0]
	0x03D8E654 CBNZ W8, 0x3D8E660
	0x03D8E658 BL 0x1C16DFC
	0x03D8E65C LDR X0, [X29]
	0x03D8E660 LDR X8, [X0 + 0xB8]
	0x03D8E664 LDR X25, [X8 + 0x28]
	0x03D8E668 CBNZ X25, 0x3D8E6C4
	0x03D8E66C LDR W8, [X0 + 0xE0]
	0x03D8E670 CBNZ W8, 0x3D8E67C
	0x03D8E674 BL 0x1C16DFC
	0x03D8E678 LDR X0, [X29]
	0x03D8E67C LDR X8, [X0 + 0xB8]
	0x03D8E680 LDR X26, [X8]
	0x03D8E684 ADRP X8, 0x3D9000
	0x03D8E688 LDR X8, [X8 + 0x9D0]
	0x03D8E68C LDR X0, [X8]
	0x03D8E690 BL 0x1C16F10
	0x03D8E694 ADRP X8, 0x3D9000
	0x03D8E698 LDR X8, [X8 + 0x9E0]
	0x03D8E69C MOV X1, X26
	0x03D8E6A0 MOV X3, X31
	0x03D8E6A4 MOV X25, X0
	0x03D8E6A8 LDR X2, [X8]
	0x03D8E6AC BL 0x2D40D0C
	0x03D8E6B0 LDR X8, [X29]
	0x03D8E6B4 ADRP X26, 0x3D9000
	0x03D8E6B8 LDR X8, [X8 + 0xB8]
	0x03D8E6BC STR X25, [X8 + 0x28]
	0x03D8E6C0 LDR X26, [X26 + 0x9F0]
	0x03D8E6C4 LDR W3, [X19 + 0x68]
	0x03D8E6C8 LDR X4, [X26]
	0x03D8E6CC ADD X0, X31, 0x0
	0x03D8E6D0 MOV W1, W21
	0x03D8E6D4 MOV W2, W22
	0x03D8E6D8 STR W31, [X31 + 0x8]
	0x03D8E6DC STR X31, [X31]
	0x03D8E6E0 BL 0x27BB7EC
	0x03D8E6E4 ADRP X8, 0x3D9000
	0x03D8E6E8 LDR X4, [X31]
	0x03D8E6EC LDR W5, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x65A000
	006 Move X21, 0x3DA000
	007 Move W8, [X19+3646]
	008 Move X21, [X21+2400]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x3DA000
	015 Move X0, [X0+2408]
	016 Call 0x1C17CF4
	017 Move X0, 0x3DA000
	018 Move X0, [X0+2400]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+3646], W8
	022 Move X0, [X21]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X19, X0
	026 Call Object..ctor, X0
	027 Compare X19, 0
	028 JumpIfEqual {61}
	029 Move X10, 0x3DA000
	030 Move X8, [X19]
	031 Move X10, [X10+2408]
	032 Move X20, [X20+24]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 1
	044 Move X0, X19
	045 Call 0x1C5D788
	046 Move W9, [X10]
	047 Add W9, W9, 1
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X8, [X0]
	051 Move X2, [X0+8]
	052 Move X0, X19
	053 Move X1, X20
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X0, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return X0
	061 Call 0x1C17F20
	062 Move X19, X0
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, X19
	065 Call 0x3EB2AD0
	066 Move X19, X0
	067 Move X0, 0x366000
	068 Move X0, [X0+1456]
	069 Call 0x1C17D08
	070 Move X8, [X19]
	071 Move X1, [X8]
	072 Call 0x1C18270
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {97}
	077 Call 0x3EB2AE0
	078 Move X0, 0x3DA000
	079 Move X0, [X0+2416]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X1, X31
	083 Move X19, X0
	084 Call Object..ctor, X0
	085 Move X0, 0x366000
	086 Move X0, [X0+2600]
	087 Call 0x1C17D08
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, 0x3DA000
	093 Move X0, [X0+2424]
	094 Call 0x1C17D08
	095 Move X1, X31
	096 Call Debug.LogWarning, X0
	097 Move W0, 8
	098 Call 0x3EB2AF0
	099 Move X8, [X19]
	100 Move [X0], X8
	101 Move X1, 0x127000
	102 Add X1, X1, 3672
	103 Move X2, X31
	104 Call 0x3EB2B00
	105 Move X19, X0
	106 Call 0x3EB2AE0
	107 Move X0, X19
	108 Call 0x1D2D690
	109 Call 0x1991590

Method: System.Boolean ShouldIgnoreEventsOnAppNotFocused()

Disassembly:
	0x03D8E700 LDR X7, [X8]
	0x03D8E704 MOV X0, X19
	0x03D8E708 MOV V0.16B, V8.16B
	0x03D8E70C MOV V1.16B, V9.16B
	0x03D8E710 MOV V3.16B, V10.16B
	0x03D8E714 MOV V4.16B, V11.16B
	0x03D8E718 MOV W1, W23
	0x03D8E71C MOV X2, X24

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X31
	003 Call SystemInfo.get_operatingSystemFamily
	004 Subtract W8, W0, 1
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Move X30, [X31+16]
	008 Return X0

Method: UnityEngine.UIElements.BaseRuntimePanel get_focusedPanel()

Disassembly:
	0x03D8E720 MOV X3, X25
	0x03D8E724 BL 0x21AAA94

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_focusedPanel(UnityEngine.UIElements.BaseRuntimePanel value)

Disassembly:
	0x03D8E728 LDR X22, [X19 + 0x10]
	0x03D8E72C CBNZ X22, 0x3D8E744
	0x03D8E730 MOV X0, X19
	0x03D8E734 BL 0x3D8D55C
	0x03D8E738 MOV X22, X0
	0x03D8E73C STR X0, [X19 + 0x10]
	0x03D8E740 CBZ X0, 0x3D8E8E0
	0x03D8E744 LDR X8, [X22]
	0x03D8E748 LDR X1, [X27]
	0x03D8E74C LDRH W9, [X8 + 0x12E]
	0x03D8E750 CBZ X9, 0x3D8E774
	0x03D8E754 LDR X10, [X8 + 0xB0]
	0x03D8E758 ADD X10, X10, 0x8
	0x03D8E75C LDUR X11, [X10 - 0x8]
	0x03D8E760 CMP X11, X1
	0x03D8E764 B.EQ 0x3D8E784
	0x03D8E768 SUBS X9, X9, 0x1
	0x03D8E76C ADD X10, X10, 0x10
	0x03D8E770 B.NE 0x3D8E75C
	0x03D8E774 MOVZ W2, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+80]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X19, X1
	008 Compare X0, 0
	009 JumpIfEqual {12}
	010 Move X1, X31
	011 Call Panel.Blur, X0
	012 Move [X20+80], X19
	013 Compare X19, 0
	014 JumpIfEqual {22}
	015 Move X0, X19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X1, X31
	019 Move X30, [X31+32]
	020 Call Panel.Focus, X0
	021 Return 
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 

Method: System.Void Update(UnityEngine.UIElements.DefaultEventSystem/UpdateMode updateMode = 0)

Disassembly:
	0x03D8E778 MOV X0, X22
	0x03D8E77C BL 0x1C5C788
	0x03D8E780 B 0x3D8E794
	0x03D8E784 LDR W9, [X10]
	0x03D8E788 ADD W9, W9, 0x8
	0x03D8E78C ADD X8, X8, W9, 0x4, SXTW
	0x03D8E790 ADD X0, X8, 0x138
	0x03D8E794 LDP X8, X2, [X0]
	0x03D8E798 MOV X0, X22
	0x03D8E79C MOV W1, W21
	0x03D8E7A0 BLR X8
	0x03D8E7A4 TBZ X0, 0x0, 0x3D8E8A8
	0x03D8E7A8 LDR X0, [X28]
	0x03D8E7AC LDR W23, [X19 + 0x74]
	0x03D8E7B0 LDR W8, [X0 + 0xE0]
	0x03D8E7B4 CBNZ W8, 0x3D8E7C0
	0x03D8E7B8 BL 0x1C16DFC
	0x03D8E7BC LDR X0, [X28]
	0x03D8E7C0 LDR X8, [X0 + 0xB8]
	0x03D8E7C4 LDR X0, [X29]
	0x03D8E7C8 LDR X24, [X31 + 0x18]
	0x03D8E7CC LDR W22, [X8 + 0x8]
	0x03D8E7D0 LDR W8, [X0 + 0xE0]
	0x03D8E7D4 CBNZ W8, 0x3D8E7E0
	0x03D8E7D8 BL 0x1C16DFC
	0x03D8E7DC LDR X0, [X29]
	0x03D8E7E0 LDR X8, [X0 + 0xB8]
	0x03D8E7E4 LDR X25, [X8 + 0x30]
	0x03D8E7E8 CBNZ X25, 0x3D8E844
	0x03D8E7EC LDR W8, [X0 + 0xE0]
	0x03D8E7F0 CBNZ W8, 0x3D8E7FC
	0x03D8E7F4 BL 0x1C16DFC
	0x03D8E7F8 LDR X0, [X29]
	0x03D8E7FC LDR X8, [X0 + 0xB8]
	0x03D8E800 LDR X26, [X8]
	0x03D8E804 ADRP X8, 0x3D9000
	0x03D8E808 LDR X8, [X8 + 0x9D0]
	0x03D8E80C LDR X0, [X8]
	0x03D8E810 BL 0x1C16F10
	0x03D8E814 ADRP X8, 0x3D9000
	0x03D8E818 LDR X8, [X8 + 0x9E8]
	0x03D8E81C MOV X1, X26
	0x03D8E820 MOV X3, X31
	0x03D8E824 MOV X25, X0
	0x03D8E828 LDR X2, [X8]
	0x03D8E82C BL 0x2D40D0C
	0x03D8E830 LDR X8, [X29]
	0x03D8E834 ADRP X26, 0x3D9000
	0x03D8E838 LDR X8, [X8 + 0xB8]
	0x03D8E83C STR X25, [X8 + 0x30]
	0x03D8E840 LDR X26, [X26 + 0x9F0]
	0x03D8E844 LDR W3, [X19 + 0x68]
	0x03D8E848 LDR X4, [X26]
	0x03D8E84C ADD X0, X31, 0x0
	0x03D8E850 MOV W1, W21
	0x03D8E854 MOV W2, W23
	0x03D8E858 STR W31, [X31 + 0x8]
	0x03D8E85C STR X31, [X31]
	0x03D8E860 BL 0x27BB7EC
	0x03D8E864 ADRP X8, 0x3D9000
	0x03D8E868 LDR X4, [X31]
	0x03D8E86C LDR W5, [X31 + 0x8]
	0x03D8E870 LDR X8, [X8 + 0x9C0]
	0x03D8E874 FMOV S2, W31
	0x03D8E878 FMOV S5, W31
	0x03D8E87C MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W1
	005 Move X19, X0
	006 Call DefaultEventSystem.get_isAppFocused, X0
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {20}
	011 Move X0, X19
	012 Call DefaultEventSystem.ProcessPenEvents, X0
	013 And W8, W0, 1
	014 Move [X19+65], W8
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {25}
	019 Move [X19+128], W31
	020 Move X0, X31
	021 Call SystemInfo.get_operatingSystemFamily
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Subtract W8, W0, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X19
	026 Call DefaultEventSystem.ProcessTouchEvents, X0
	027 Move W8, [X19+65]
	028 And W9, W0, 1
	029 Move [X19+64], W9
	030 Compare W8, 0
	031 JumpIfNotEqual {19}
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {19}
	036 Move X0, X19
	037 Call DefaultEventSystem.ProcessMouseEvents, X0
	038 Add X0, X31, 8
	039 Move X1, X19
	040 Move [X31+8], X31
	041 Call FocusBasedEventSequenceContext..ctor, X0, X1
	042 Move X20, [X31+8]
	043 Move X0, X19
	044 Call DefaultEventSystem.SendIMGUIEvents, X0
	045 Move X0, X19
	046 Call DefaultEventSystem.SendInputEvents, X0
	047 Compare X20, 0
	048 JumpIfEqual {67}
	049 Move [X20+88], X31
	050 Move [X20+96], X31
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Return 
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Call 0x3EB2AD0
	057 Move X19, [X0]
	058 Call 0x3EB2AE0
	059 Compare X20, 0
	060 JumpIfEqual {67}
	061 Move [X20+88], X31
	062 Move [X20+96], X31
	063 Compare X19, 0
	064 JumpIfEqual {51}
	065 Move X0, X19
	066 Call 0x1C17F18
	067 Call 0x1C17F20
	068 Compare X20, 0
	069 JumpIfEqual {74}
	070 Move [X20+88], X31
	071 Move [X20+96], X31
	072 Compare X20, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17F20
	075 Move [X20+88], X31
	076 Move [X20+96], X31
	077 Compare X19, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1D2D690
	080 Move X0, X19
	081 Call 0x1C17F18
	082 Call 0x1991590

Method: UnityEngine.UIElements.DefaultEventSystem/FocusBasedEventSequenceContext FocusBasedEventSequence()

Disassembly:
	0x03D8F8E4 LDRH W9, [X8 + 0x12E]
	0x03D8F8E8 CBZ X9, 0x3D8F90C
	0x03D8F8EC LDR X10, [X8 + 0xB0]
	0x03D8F8F0 ADD X10, X10, 0x8
	0x03D8F8F4 LDUR X11, [X10 - 0x8]
	0x03D8F8F8 CMP X11, X1
	0x03D8F8FC B.EQ 0x3D8F91C
	0x03D8F900 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X1, X0
	003 Add X0, X31, 8
	004 Move [X31+8], X31
	005 Call FocusBasedEventSequenceContext..ctor, X0, X1
	006 Move X0, [X31+8]
	007 Move X30, [X31+16]
	008 Return X0

Method: System.Void SendIMGUIEvents()

Disassembly:
	0x03D8F904 ADD X10, X10, 0x10
	0x03D8F908 B.NE 0x3D8F8F4
	0x03D8F90C MOVZ W2, 0xB
	0x03D8F910 MOV X0, X20
	0x03D8F914 BL 0x1C5C788
	0x03D8F918 B 0x3D8F92C
	0x03D8F91C LDR W9, [X10]
	0x03D8F920 ADD W9, W9, 0xB
	0x03D8F924 ADD X8, X8, W9, 0x4, SXTW
	0x03D8F928 ADD X0, X8, 0x138
	0x03D8F92C LDP X8, X1, [X0]
	0x03D8F930 MOV X0, X20
	0x03D8F934 BLR X8
	0x03D8F938 AND W8, W0, 0x1
	0x03D8F93C ORR W8, W21, W8, 0x0
	0x03D8F940 MOVZ W0, 0x1
	0x03D8F944 STRB W8, [X19 + 0x94]
	0x03D8F948 LDP X20, X19, [X31 + 0x40]
	0x03D8F94C LDP X22, X21, [X31 + 0x30]
	0x03D8F950 LDR X30, [X31 + 0x20]
	0x03D8F954 LDP D9, D8, [X31 + 0x10]
	0x03D8F958 LDP D11, D10, [X31], #0x50
	0x03D8F95C RET
	0x03D8F960 BL 0x1C16F20
	0x03D8F964 B 0x3D8D728
	0x03D8F968 STR X30, [X31 - 0x20]!
	0x03D8F96C STP X20, X19, [X31 + 0x10]
	0x03D8F970 CBZ X1, 0x3D8F9DC
	0x03D8F974 LDR X8, [X1]
	0x03D8F978 MOV X20, X1
	0x03D8F97C MOV X19, X0
	0x03D8F980 MOV X0, X20
	0x03D8F984 LDR X9, [X8 + 0x278]
	0x03D8F988 LDR X1, [X8 + 0x280]
	0x03D8F98C BLR X9
	0x03D8F990 CBZ X0, 0x3D8F9DC
	0x03D8F994 MOV X1, X31
	0x03D8F998 BL 0x3DAFB5C
	0x03D8F99C CBZ X0, 0x3D8F9B4
	0x03D8F9A0 MOV X0, X19
	0x03D8F9A4 MOV X1, X20
	0x03D8F9A8 LDP X20, X19, [X31 + 0x10]
	0x03D8F9AC LDR X30, [X31], #0x20
	0x03D8F9B0 B 0x3D8D728
	0x03D8F9B4 LDR X0, [X19 + 0x50]
	0x03D8F9B8 CMP X0, X20
	0x03D8F9BC B.NE 0x3D8F9D0
	0x03D8F9C0 CBZ X0, 0x3D8F9D0
	0x03D8F9C4 MOV X1, X31
	0x03D8F9C8 BL 0x3DBD034
	0x03D8F9CC STR X31, [X19 + 0x50]
	0x03D8F9D0 LDP X20, X19, [X31 + 0x10]
	0x03D8F9D4 LDR X30, [X31], #0x20
	0x03D8F9D8 RET
	0x03D8F9DC BL 0x1C16F20
	0x03D8F9E0 SUB X31, X31, 0x1E0
	0x03D8F9E4 STR X29, [X31 + 0x1B0]
	0x03D8F9E8 STP X30, X21, [X31 + 0x1C0]
	0x03D8F9EC STP X20, X19, [X31 + 0x1D0]
	0x03D8F9F0 ADRP X21, 0x658000
	0x03D8F9F4 LDRB W8, [X21 + 0xE42]
	0x03D8F9F8 MOV W19, W1
	0x03D8F9FC MOV X20, X0
	0x03D8FA00 TBNZ X8, 0x0, 0x3D8FA48
	0x03D8FA04 ADRP X0, 0x3D8000
	0x03D8FA08 LDR X0, [X0 + 0xA80]
	0x03D8FA0C BL 0x1C16CF4
	0x03D8FA10 ADRP X0, 0x3D8000
	0x03D8FA14 LDR X0, [X0 + 0xA88]
	0x03D8FA18 BL 0x1C16CF4
	0x03D8FA1C ADRP X0, 0x3D8000
	0x03D8FA20 LDR X0, [X0 + 0xA90]
	0x03D8FA24 BL 0x1C16CF4
	0x03D8FA28 ADRP X0, 0x3D8000
	0x03D8FA2C LDR X0, [X0 + 0xA98]
	0x03D8FA30 BL 0x1C16CF4
	0x03D8FA34 ADRP X0, 0x3D8000
	0x03D8FA38 LDR X0, [X0 + 0xAA0]
	0x03D8FA3C BL 0x1C16CF4
	0x03D8FA40 MOVZ W8, 0x1
	0x03D8FA44 STRB W8, [X21 + 0xE42]
	0x03D8FA48 MOV X0, X20
	0x03D8FA4C MOV X1, X31
	0x03D8FA50 BL 0x3C845F0
	0x03D8FA54 CMP W0, 0x4
	0x03D8FA58 B.HI 0x3D8FA9C
	0x03D8FA5C ADRP X9, 0xFFFFFFFFFCE09000
	0x03D8FA60 MOV W8, W0
	0x03D8FA64 ADD X9, X9, 0x48
	0x03D8FA68 ADR X10, 0x10
	0x03D8FA6C LDRB W11, [X9, X8, LSL]
	0x03D8FA70 ADD X10, X10, X11, 0x2, LSL
	0x03D8FA74 BR X10
	0x03D8FA78 ADD X0, X31, 0x120
	0x03D8FA7C MOVZ W2, 0x44
	0x03D8FA80 MOV X1, X20
	0x03D8FA84 BL 0x3EB1AC0
	0x03D8FA88 ADRP X8, 0x3D8000
	0x03D8FA8C LDR X8, [X8 + 0xA98]
	0x03D8FA90 ADD X0, X31, 0x168
	0x03D8FA94 ADD X1, X31, 0x120
	0x03D8FA98 B 0x3D8FB30
	0x03D8FA9C MOV X0, X31
	0x03D8FAA0 B 0x3D8FB4C
	0x03D8FAA4 ADD X0, X31, 0xD8
	0x03D8FAA8 MOVZ W2, 0x44
	0x03D8FAAC MOV X1, X20
	0x03D8FAB0 BL 0x3EB1AC0
	0x03D8FAB4 ADRP X8, 0x3D8000
	0x03D8FAB8 LDR X8, [X8 + 0xA80]
	0x03D8FABC ADD X0, X31, 0x168
	0x03D8FAC0 ADD X1, X31, 0xD8
	0x03D8FAC4 B 0x3D8FB30
	0x03D8FAC8 ADD X0, X31, 0x90
	0x03D8FACC MOVZ W2, 0x44
	0x03D8FAD0 MOV X1, X20
	0x03D8FAD4 BL 0x3EB1AC0
	0x03D8FAD8 ADRP X8, 0x3D8000
	0x03D8FADC LDR X8, [X8 + 0xAA0]
	0x03D8FAE0 ADD X0, X31, 0x168
	0x03D8FAE4 ADD X1, X31, 0x90
	0x03D8FAE8 B 0x3D8FB30
	0x03D8FAEC ADD X0, X31, 0x48
	0x03D8FAF0 MOVZ W2, 0x44
	0x03D8FAF4 MOV X1, X20
	0x03D8FAF8 BL 0x3EB1AC0
	0x03D8FAFC ADRP X8, 0x3D8000
	0x03D8FB00 LDR X8, [X8 + 0xA88]
	0x03D8FB04 ADD X0, X31, 0x168
	0x03D8FB08 ADD X1, X31, 0x48
	0x03D8FB0C B 0x3D8FB30
	0x03D8FB10 ADD X0, X31, 0x0
	0x03D8FB14 MOVZ W2, 0x44
	0x03D8FB18 MOV X1, X20
	0x03D8FB1C BL 0x3EB1AC0
	0x03D8FB20 ADRP X8, 0x3D8000
	0x03D8FB24 LDR X8, [X8 + 0xA90]
	0x03D8FB28 ADD X0, X31, 0x168
	0x03D8FB2C ADD X1, X31, 0x0
	0x03D8FB30 LDR X20, [X8]
	0x03D8FB34 MOVZ W2, 0x44
	0x03D8FB38 BL 0x3EB1AC0
	0x03D8FB3C ADD X0, X31, 0x168
	0x03D8FB40 MOV W1, W19
	0x03D8FB44 MOV X2, X20
	0x03D8FB48 BL 0x24A4504
	0x03D8FB4C LDP X20, X19, [X31 + 0x1D0]
	0x03D8FB50 LDP X30, X21, [X31 + 0x1C0]
	0x03D8FB54 LDR X29, [X31 + 0x1B0]
	0x03D8FB58 ADD X31, X31, 0x1E0
	0x03D8FB5C RET
	0x03D8FB60 SUB X31, X31, 0xB0
	0x03D8FB64 STP X30, X21, [X31 + 0x90]
	0x03D8FB68 STP X20, X19, [X31 + 0xA0]
	0x03D8FB6C ADRP X21, 0x658000
	0x03D8FB70 LDRB W8, [X21 + 0xE43]
	0x03D8FB74 MOV W19, W1
	0x03D8FB78 MOV X20, X0
	0x03D8FB7C TBNZ X8, 0x0, 0x3D8FBA0
	0x03D8FB80 ADRP X0, 0x3D8000
	0x03D8FB84 LDR X0, [X0 + 0xAA8]
	0x03D8FB88 BL 0x1C16CF4
	0x03D8FB8C ADRP X0, 0x3D8000
	0x03D8FB90 LDR X0, [X0 + 0xAB0]
	0x03D8FB94 BL 0x1C16CF4
	0x03D8FB98 MOVZ W8, 0x1
	0x03D8FB9C STRB W8, [X21 + 0xE43]
	0x03D8FBA0 LDR W8, [X20 + 0x1C]
	0x03D8FBA4 CMP W8, 0x2
	0x03D8FBA8 B.EQ 0x3D8FBD0
	0x03D8FBAC CMP W8, 0x1
	0x03D8FBB0 B.NE 0x3D8FC04
	0x03D8FBB4 ADRP X9, 0x3D8000
	0x03D8FBB8 LDR X8, [X20 + 0x20]
	0x03D8FBBC LDP V0, V1, [X20]
	0x03D8FBC0 LDR X9, [X9 + 0xAA8]
	0x03D8FBC4 STR X8, [X31 + 0x50]
	0x03D8FBC8 STP V0, V1, [X31 + 0x30]
	0x03D8FBCC B 0x3D8FBE8
	0x03D8FBD0 ADRP X9, 0x3D8000
	0x03D8FBD4 LDR X8, [X20 + 0x20]
	0x03D8FBD8 LDP V0, V1, [X20]
	0x03D8FBDC LDR X9, [X9 + 0xAB0]
	0x03D8FBE0 STR X8, [X31 + 0x20]
	0x03D8FBE4 STP V0, V1, [X31]
	0x03D8FBE8 LDR X2, [X9]
	0x03D8FBEC ADD X0, X31, 0x60
	0x03D8FBF0 MOV W1, W19
	0x03D8FBF4 STP V0, V1, [X31 + 0x60]
	0x03D8FBF8 STR X8, [X31 + 0x80]
	0x03D8FBFC BL 0x24A4AE4
	0x03D8FC00 B 0x3D8FC08
	0x03D8FC04 MOV X0, X31
	0x03D8FC08 LDP X20, X19, [X31 + 0xA0]
	0x03D8FC0C LDP X30, X21, [X31 + 0x90]
	0x03D8FC10 ADD X31, X31, 0xB0
	0x03D8FC14 RET
	0x03D8FC18 STP D9, D8, [X31 - 0x40]!
	0x03D8FC1C STR X30, [X31 + 0x10]
	0x03D8FC20 STP X22, X21, [X31 + 0x20]
	0x03D8FC24 STP X20, X19, [X31 + 0x30]
	0x03D8FC28 ADRP X20, 0x658000
	0x03D8FC2C LDRB W8, [X20 + 0xE46]
	0x03D8FC30 MOV X19, X0
	0x03D8FC34 TBNZ X8, 0x0, 0x3D8FC4C
	0x03D8FC38 ADRP X0, 0x3D8000
	0x03D8FC3C LDR X0, [X0 + 0x968]
	0x03D8FC40 BL 0x1C16CF4
	0x03D8FC44 MOVZ W8, 0x1
	0x03D8FC48 STRB W8, [X20 + 0xE46]
	0x03D8FC4C ADRP X20, 0x64A000
	0x03D8FC50 LDRB W8, [X20 + 0x78F]
	0x03D8FC54 CBNZ W8, 0x3D8FC6C
	0x03D8FC58 ADRP X0, 0x36C000
	0x03D8FC5C LDR X0, [X0 + 0xF08]
	0x03D8FC60 BL 0x1C16CF4
	0x03D8FC64 MOVZ W8, 0x1
	0x03D8FC68 STRB W8, [X20 + 0x78F]
	0x03D8FC6C LDR X20, [X19 + 0x10]
	0x03D8FC70 CBNZ X20, 0x3D8FC88
	0x03D8FC74 MOV X0, X19
	0x03D8FC78 BL 0x3D8D55C
	0x03D8FC7C MOV X20, X0
	0x03D8FC80 STR X0, [X19 + 0x10]
	0x03D8FC84 CBZ X0, 0x3D8FEC8
	0x03D8FC88 ADRP X22, 0x3D8000
	0x03D8FC8C LDR X8, [X20]
	0x03D8FC90 LDR X22, [X22 + 0x968]
	0x03D8FC94 LDR X21, [X19 + 0x18]
	0x03D8FC98 LDRH W9, [X8 + 0x12E]
	0x03D8FC9C LDR X1, [X22]
	0x03D8FCA0 CBZ X9, 0x3D8FCC4
	0x03D8FCA4 LDR X10, [X8 + 0xB0]
	0x03D8FCA8 ADD X10, X10, 0x8
	0x03D8FCAC LDUR X11, [X10 - 0x8]
	0x03D8FCB0 CMP X11, X1
	0x03D8FCB4 B.EQ 0x3D8FCD4
	0x03D8FCB8 SUBS X9, X9, 0x1
	0x03D8FCBC ADD X10, X10, 0x10
	0x03D8FCC0 B.NE 0x3D8FCAC
	0x03D8FCC4 MOVZ W2, 0x1
	0x03D8FCC8 MOV X0, X20
	0x03D8FCCC BL 0x1C5C788
	0x03D8FCD0 B 0x3D8FCE4
	0x03D8FCD4 LDR W9, [X10]
	0x03D8FCD8 ADD W9, W9, 0x1
	0x03D8FCDC ADD X8, X8, W9, 0x4, SXTW
	0x03D8FCE0 ADD X0, X8, 0x138
	0x03D8FCE4 LDP X8, X2, [X0]
	0x03D8FCE8 MOV X0, X20
	0x03D8FCEC MOV X1, X21
	0x03D8FCF0 BLR X8
	0x03D8FCF4 LDR X20, [X19 + 0x10]
	0x03D8FCF8 MOV V8.16B, V0.16B
	0x03D8FCFC CBNZ X20, 0x3D8FD14
	0x03D8FD00 MOV X0, X19
	0x03D8FD04 BL 0x3D8D55C
	0x03D8FD08 MOV X20, X0
	0x03D8FD0C STR X0, [X19 + 0x10]
	0x03D8FD10 CBZ X0, 0x3D8FEC8
	0x03D8FD14 LDR X8, [X20]
	0x03D8FD18 LDR X21, [X19 + 0x20]
	0x03D8FD1C LDR X1, [X22]
	0x03D8FD20 LDRH W9, [X8 + 0x12E]
	0x03D8FD24 CBZ X9, 0x3D8FD48
	0x03D8FD28 LDR X10, [X8 + 0xB0]
	0x03D8FD2C ADD X10, X10, 0x8
	0x03D8FD30 LDUR X11, [X10 - 0x8]
	0x03D8FD34 CMP X11, X1
	0x03D8FD38 B.EQ 0x3D8FD58
	0x03D8FD3C SUBS X9, X9, 0x1
	0x03D8FD40 ADD X10, X10, 0x10
	0x03D8FD44 B.NE 0x3D8FD30
	0x03D8FD48 MOVZ W2, 0x1
	0x03D8FD4C MOV X0, X20
	0x03D8FD50 BL 0x1C5C788
	0x03D8FD54 B 0x3D8FD68
	0x03D8FD58 LDR W9, [X10]
	0x03D8FD5C ADD W9, W9, 0x1
	0x03D8FD60 ADD X8, X8, W9, 0x4, SXTW
	0x03D8FD64 ADD X0, X8, 0x138
	0x03D8FD68 LDP X8, X2, [X0]
	0x03D8FD6C MOV X0, X20
	0x03D8FD70 MOV X1, X21
	0x03D8FD74 BLR X8
	0x03D8FD78 LDR X20, [X19 + 0x10]
	0x03D8FD7C MOV V9.16B, V0.16B
	0x03D8FD80 CBNZ X20, 0x3D8FD98
	0x03D8FD84 MOV X0, X19
	0x03D8FD88 BL 0x3D8D55C
	0x03D8FD8C MOV X20, X0
	0x03D8FD90 STR X0, [X19 + 0x10]
	0x03D8FD94 CBZ X0, 0x3D8FEC8
	0x03D8FD98 LDR X8, [X20]
	0x03D8FD9C LDR X21, [X19 + 0x18]
	0x03D8FDA0 LDR X1, [X22]
	0x03D8FDA4 LDRH W9, [X8 + 0x12E]
	0x03D8FDA8 CBZ X9, 0x3D8FDCC
	0x03D8FDAC LDR X10, [X8 + 0xB0]
	0x03D8FDB0 ADD X10, X10, 0x8
	0x03D8FDB4 LDUR X11, [X10 - 0x8]
	0x03D8FDB8 CMP X11, X1
	0x03D8FDBC B.EQ 0x3D8FDDC
	0x03D8FDC0 SUBS X9, X9, 0x1
	0x03D8FDC4 ADD X10, X10, 0x10
	0x03D8FDC8 B.NE 0x3D8FDB4
	0x03D8FDCC MOV X0, X20
	0x03D8FDD0 MOV W2, W31
	0x03D8FDD4 BL 0x1C5C788
	0x03D8FDD8 B 0x3D8FDE8
	0x03D8FDDC LDRSW X9, [X10]
	0x03D8FDE0 ADD X8, X8, X9, 0x4, LSL
	0x03D8FDE4 ADD X0, X8, 0x138
	0x03D8FDE8 LDP X8, X2, [X0]
	0x03D8FDEC MOV X0, X20
	0x03D8FDF0 MOV X1, X21
	0x03D8FDF4 BLR X8
	0x03D8FDF8 TBZ X0, 0x0, 0x3D8FE14
	0x03D8FDFC FCMP S8, 0x0
	0x03D8FE00 FMOV S0, -1
	0x03D8FE04 FCSEL S8, S0, S8, MI
	0x03D8FE08 FCMP S8, 0x0
	0x03D8FE0C B.LE 0x3D8FE14
	0x03D8FE10 FMOV S8, 1
	0x03D8FE14 LDR X20, [X19 + 0x10]
	0x03D8FE18 CBNZ X20, 0x3D8FE30
	0x03D8FE1C MOV X0, X19
	0x03D8FE20 BL 0x3D8D55C
	0x03D8FE24 MOV X20, X0
	0x03D8FE28 STR X0, [X19 + 0x10]
	0x03D8FE2C CBZ X0, 0x3D8FEC8
	0x03D8FE30 LDR X8, [X20]
	0x03D8FE34 LDR X19, [X19 + 0x20]
	0x03D8FE38 LDR X1, [X22]
	0x03D8FE3C LDRH W9, [X8 + 0x12E]
	0x03D8FE40 CBZ X9, 0x3D8FE64
	0x03D8FE44 LDR X10, [X8 + 0xB0]
	0x03D8FE48 ADD X10, X10, 0x8
	0x03D8FE4C LDUR X11, [X10 - 0x8]
	0x03D8FE50 CMP X11, X1
	0x03D8FE54 B.EQ 0x3D8FE74
	0x03D8FE58 SUBS X9, X9, 0x1
	0x03D8FE5C ADD X10, X10, 0x10
	0x03D8FE60 B.NE 0x3D8FE4C
	0x03D8FE64 MOV X0, X20
	0x03D8FE68 MOV W2, W31
	0x03D8FE6C BL 0x1C5C788
	0x03D8FE70 B 0x3D8FE80
	0x03D8FE74 LDRSW X9, [X10]
	0x03D8FE78 ADD X8, X8, X9, 0x4, LSL
	0x03D8FE7C ADD X0, X8, 0x138
	0x03D8FE80 LDP X8, X2, [X0]
	0x03D8FE84 MOV X0, X20
	0x03D8FE88 MOV X1, X19
	0x03D8FE8C BLR X8
	0x03D8FE90 FCMP S9, 0x0
	0x03D8FE94 FMOV S0, -1
	0x03D8FE98 FCSEL S0, S0, S9, MI
	0x03D8FE9C LDP X20, X19, [X31 + 0x30]
	0x03D8FEA0 LDP X22, X21, [X31 + 0x20]
	0x03D8FEA4 LDR X30, [X31 + 0x10]
	0x03D8FEA8 FMOV S1, 1
	0x03D8FEAC FCMP S0, 0x0
	0x03D8FEB0 FCSEL S0, S1, S0, GT
	0x03D8FEB4 ANDS W31, W0, 0x1
	0x03D8FEB8 FCSEL S1, S0, S9, NE
	0x03D8FEBC MOV V0.16B, V8.16B
	0x03D8FEC0 LDP D9, D8, [X31], #0x40
	0x03D8FEC4 RET
	0x03D8FEC8 BL 0x1C16F20
	0x03D8FECC STP X30, X25, [X31 - 0x40]!
	0x03D8FED0 STP X24, X23, [X31 + 0x10]
	0x03D8FED4 STP X22, X21, [X31 + 0x20]
	0x03D8FED8 STP X20, X19, [X31 + 0x30]
	0x03D8FEDC ADRP X24, 0x658000
	0x03D8FEE0 ADRP X25, 0x3B7000
	0x03D8FEE4 ADRP X23, 0x3B7000
	0x03D8FEE8 ADRP X22, 0x3B7000
	0x03D8FEEC ADRP X21, 0x3A8000
	0x03D8FEF0 ADRP X20, 0x3CA000
	0x03D8FEF4 LDRB W8, [X24 + 0xE49]
	0x03D8FEF8 LDR X25, [X25 + 0xAF0]
	0x03D8FEFC LDR X23, [X23 + 0xAC0]
	0x03D8FF00 LDR X22, [X22 + 0xAB8]
	0x03D8FF04 LDR X21, [X21 + 0xB08]
	0x03D8FF08 LDR X20, [X20 + 0x20]
	0x03D8FF0C MOV X19, X0
	0x03D8FF10 TBNZ X8, 0x0, 0x3D8FF58
	0x03D8FF14 ADRP X0, 0x3CA000
	0x03D8FF18 LDR X0, [X0 + 0x20]
	0x03D8FF1C BL 0x1C16CF4
	0x03D8FF20 ADRP X0, 0x3B7000
	0x03D8FF24 LDR X0, [X0 + 0xAB8]
	0x03D8FF28 BL 0x1C16CF4
	0x03D8FF2C ADRP X0, 0x3B7000
	0x03D8FF30 LDR X0, [X0 + 0xAC0]
	0x03D8FF34 BL 0x1C16CF4
	0x03D8FF38 ADRP X0, 0x3B7000
	0x03D8FF3C LDR X0, [X0 + 0xAF0]
	0x03D8FF40 BL 0x1C16CF4
	0x03D8FF44 ADRP X0, 0x3A8000
	0x03D8FF48 LDR X0, [X0 + 0xB08]
	0x03D8FF4C BL 0x1C16CF4
	0x03D8FF50 MOVZ W8, 0x1
	0x03D8FF54 STRB W8, [X24 + 0xE49]
	0x03D8FF58 LDR X9, [X25]
	0x03D8FF5C LDR X8, [X23]
	0x03D8FF60 STP X9, X8, [X19 + 0x18]
	0x03D8FF64 ADRP X9, 0xFFFFFFFFFCD5E000
	0x03D8FF68 LDR X10, [X22]
	0x03D8FF6C LDR X8, [X21]
	0x03D8FF70 LDR V0, [X9 + 0xDA0]
	0x03D8FF74 STP X10, X8, [X19 + 0x28]
	0x03D8FF78 STR D0, [X19 + 0x38]
	0x03D8FF7C LDR X0, [X20]
	0x03D8FF80 BL 0x1C16F10
	0x03D8FF84 MOV X1, X31
	0x03D8FF88 MOV X20, X0
	0x03D8FF8C BL 0x3C63690
	0x03D8FF90 MOVN W8, 0x0
	0x03D8FF94 STR X20, [X19 + 0x48]
	0x03D8FF98 STR W31, [X19 + 0x74]
	0x03D8FF9C STUR X8, [X19 + 0x6C]
	0x03D8FFA0 ADRP X20, 0x64A000
	0x03D8FFA4 LDRB W8, [X20 + 0x78F]
	0x03D8FFA8 CBNZ W8, 0x3D8FFC0
	0x03D8FFAC ADRP X0, 0x36C000
	0x03D8FFB0 LDR X0, [X0 + 0xF08]
	0x03D8FFB4 BL 0x1C16CF4
	0x03D8FFB8 MOVZ W8, 0x1
	0x03D8FFBC STRB W8, [X20 + 0x78F]
	0x03D8FFC0 ADRP X8, 0x36C000
	0x03D8FFC4 LDR X8, [X8 + 0xF08]
	0x03D8FFC8 MOV X0, X19
	0x03D8FFCC LDP X22, X21, [X31 + 0x20]
	0x03D8FFD0 LDP X24, X23, [X31 + 0x10]
	0x03D8FFD4 LDR X8, [X8]
	0x03D8FFD8 MOV X1, X31
	0x03D8FFDC LDR X8, [X8 + 0xB8]
	0x03D8FFE0 LDR V0, [X8]
	0x03D8FFE4 STR D0, [X19 + 0x78]
	0x03D8FFE8 LDP X20, X19, [X31 + 0x30]
	0x03D8FFEC LDP X30, X25, [X31], #0x40
	0x03D8FFF0 B 0x33BDD8C
	0x03D8FFF4 STR X30, [X31 - 0x30]!
	0x03D8FFF8 STP X22, X21, [X31 + 0x10]
	0x03D8FFFC STP X20, X19, [X31 + 0x20]
	0x03D90000 ADRP X20, 0x657000
	0x03D90004 ADRP X19, 0x3D7000
	0x03D90008 LDRB W8, [X20 + 0xE4A]
	0x03D9000C B 0x3EB1784
	0x03D90010 TBNZ X8, 0x0, 0x3D9004C
	0x03D90014 ADRP X0, 0x3D7000
	0x03D90018 LDR X0, [X0 + 0xAB8]
	0x03D9001C BL 0x1C16CF4
	0x03D90020 ADRP X0, 0x36C000
	0x03D90024 LDR X0, [X0 + 0x940]
	0x03D90028 BL 0x1C16CF4
	0x03D9002C ADRP X0, 0x3D7000
	0x03D90030 LDR X0, [X0 + 0xAC0]
	0x03D90034 BL 0x1C16CF4
	0x03D90038 ADRP X0, 0x3D7000
	0x03D9003C LDR X0, [X0 + 0x998]
	0x03D90040 BL 0x1C16CF4
	0x03D90044 MOVZ W8, 0x1
	0x03D90048 STRB W8, [X20 + 0xE4A]
	0x03D9004C LDR X0, [X19]
	0x03D90050 ADRP X22, 0x36C000
	0x03D90054 ADRP X20, 0x3D7000
	0x03D90058 ADRP X21, 0x3D7000

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+48], D13
	003 Move [X31+56], D12
	004 Move [X31+64], D11
	005 Move [X31+72], D10
	006 Move [X31+80], D9
	007 Move [X31+88], D8
	008 Move [X31+96], X29
	009 Move [X31+104], X30
	010 Move [X31+112], X28
	011 Move [X31+120], X27
	012 Move [X31+128], X26
	013 Move [X31+136], X25
	014 Move [X31+144], X24
	015 Move [X31+152], X23
	016 Move [X31+160], X22
	017 Move [X31+168], X21
	018 Move [X31+176], X20
	019 Move [X31+184], X19
	020 Move X20, 0x659000
	021 Move W8, [X20+3647]
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {71}
	027 Move X0, 0x3D9000
	028 Move X0, [X0+2552]
	029 Call 0x1C17CF4
	030 Move X0, 0x3D9000
	031 Move X0, [X0+2560]
	032 Call 0x1C17CF4
	033 Move X0, 0x3D9000
	034 Move X0, [X0+2568]
	035 Call 0x1C17CF4
	036 Move X0, 0x3D9000
	037 Move X0, [X0+2576]
	038 Call 0x1C17CF4
	039 Move X0, 0x3D9000
	040 Move X0, [X0+2584]
	041 Call 0x1C17CF4
	042 Move X0, 0x3D9000
	043 Move X0, [X0+2592]
	044 Call 0x1C17CF4
	045 Move X0, 0x3D9000
	046 Move X0, [X0+2408]
	047 Call 0x1C17CF4
	048 Move X0, 0x38E000
	049 Move X0, [X0+3664]
	050 Call 0x1C17CF4
	051 Move X0, 0x3D9000
	052 Move X0, [X0+2600]
	053 Call 0x1C17CF4
	054 Move X0, 0x3D9000
	055 Move X0, [X0+2608]
	056 Call 0x1C17CF4
	057 Move X0, 0x3D9000
	058 Move X0, [X0+2616]
	059 Call 0x1C17CF4
	060 Move X0, 0x3D9000
	061 Move X0, [X0+2456]
	062 Call 0x1C17CF4
	063 Move X0, 0x38D000
	064 Move X0, [X0+2352]
	065 Call 0x1C17CF4
	066 Move X0, 0x3D9000
	067 Move X0, [X0+2624]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X20+3647], W8
	071 Move X24, 0x3D9000
	072 Move X25, 0x3D9000
	073 Move X26, 0x3D9000
	074 Move X27, 0x3D9000
	075 Move X21, 0x3D9000
	076 Move X29, 0x38D000
	077 Move X28, 0x38E000
	078 Move X23, 0x3D9000
	079 Move X24, [X24+2456]
	080 Move X25, [X25+2576]
	081 Move X26, [X26+2600]
	082 Move X27, [X27+2552]
	083 Move X21, [X21+2408]
	084 Move X29, [X29+2352]
	085 Move X28, [X28+3664]
	086 Move X23, [X23+2608]
	087 Move [X31+32], X31
	088 Move [X31+40], X31
	089 Move W20, 1
	090 Move X0, [X19+72]
	091 Move X1, X31
	092 Call Event.PopEvent, X0
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {500}
	097 Move X0, [X19+72]
	098 Compare X0, 0
	099 JumpIfEqual {520}
	100 Move X1, X31
	101 Call Event.get_type, X0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, [X19+72]
	104 Compare X0, 0
	105 JumpIfEqual {520}
	106 Move X1, X31
	107 Call Event.get_type, X0
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move W8, 1
	110 Compare W8, 0
	111 JumpIfNotEqual {90}
	112 Move X0, [X19+72]
	113 Compare X0, 0
	114 JumpIfEqual {520}
	115 Move X1, X31
	116 Call Event.get_type, X0
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction CSET not yet implemented."
	119 Compare W8, 0
	120 JumpIfNotEqual {90}
	121 Move X0, [X19+72]
	122 Move TEMP, X20
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {130}
	126 Compare X0, 0
	127 JumpIfEqual {520}
	128 Move X1, X31
	129 Call Event.get_modifiers, X0
	130 Compare X0, 0
	131 JumpIfEqual {520}
	132 Move W20, [X19+104]
	133 Move X1, X31
	134 Call Event.get_modifiers, X0
	135 Or W0, W0, W20
	136 Move X8, [X19+72]
	137 Move [X19+104], W0
	138 Compare X8, 0
	139 JumpIfEqual {520}
	140 Move X0, X8
	141 Move X1, X31
	142 Call Event.get_type, X0
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, [X19+72]
	145 Compare X0, 0
	146 JumpIfEqual {520}
	147 Move X1, X31
	148 Call Event.get_type, X0
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X0, [X24]
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {156}
	154 Call 0x1C17DFC
	155 Move X0, [X24]
	156 Move X8, [X0+184]
	157 Move X20, [X8+8]
	158 Compare X20, 0
	159 JumpIfNotEqual {236}
	160 Move W8, [X0+224]
	161 Move X20, X25
	162 Move X25, X29
	163 Compare W8, 0
	164 JumpIfEqual {215}
	165 Move X22, X26
	166 Move X29, X21
	167 Move X0, [X19+72]
	168 Compare X0, 0
	169 JumpIfEqual {520}
	170 Move X1, X31
	171 Call Event.get_type, X0
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X20, [X19+16]
	174 Compare X20, 0
	175 JumpIfNotEqual {182}
	176 Move X0, X19
	177 Call DefaultEventSystem.GetDefaultInput, X0
	178 Move X20, X0
	179 Move [X19+16], X0
	180 Compare X0, 0
	181 JumpIfEqual {520}
	182 Move X8, [X20]
	183 Move X1, [X21]
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Compare X9, 0
	186 JumpIfEqual {193}
	187 Move X10, [X8+176]
	188 Add X10, X10, 8
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Subtract X9, X9, 1
	192 Add X10, X10, 16
	193 Move W2, 9
	194 Move X0, X20
	195 Call 0x1C5D788
	196 Move W8, [X19+64]
	197 Compare W8, 0
	198 JumpIfNotEqual {202}
	199 Move W8, [X19+65]
	200 Compare W8, 0
	201 JumpIfEqual {302}
	202 Move X0, [X19+72]
	203 Compare X0, 0
	204 JumpIfEqual {520}
	205 Move X1, X31
	206 Call Event.get_type, X0
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X0, [X19+72]
	209 Compare X0, 0
	210 JumpIfEqual {520}
	211 Move X1, X31
	212 Call Event.get_type, X0
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move W20, W31
	215 Move X22, X26
	216 Move X29, X21
	217 Call 0x1C17DFC
	218 Move X0, [X24]
	219 Move X8, [X0+184]
	220 Move X0, [X20]
	221 Move X26, X20
	222 Move X21, [X8]
	223 Call 0x1C17F10
	224 Move X2, [X22]
	225 Move X1, X21
	226 Move X3, X31
	227 Move X20, X0
	228 Call Func`2<Object, Object>..ctor, X0, X1, X2
	229 Move X8, [X24]
	230 Move X21, X29
	231 Move X29, X25
	232 Move X25, X26
	233 Move X8, [X8+184]
	234 Move X26, X22
	235 Move [X8+8], X20
	236 Move X3, [X27]
	237 Move X0, X19
	238 Move X1, X20
	239 Move X2, X19
	240 Call DefaultEventSystem.SendFocusBasedEvent, X0, X1, X2
	241 Move X1, [X19+72]
	242 Move W2, [X19+104]
	243 Move X0, X19
	244 Call DefaultEventSystem.ProcessTabEvent, X0, X1, X2
	245 Move W20, W31
	246 Move W9, [X10]
	247 Add W9, W9, 9
	248 Add X8, X8, W9
	249 Add X0, X8, 312
	250 Move X8, [X0]
	251 Move X1, [X0+8]
	252 Move X0, X20
	253 NotImplemented "Instruction BLR not yet implemented."
	254 Move X0, [X29]
	255 Move V8, V0
	256 Move V9, V1
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1C17DFC
	261 Add X0, X31, 40
	262 Move V0, V8
	263 Move V1, V9
	264 Move X1, X31
	265 Call UIElementsRuntimeUtility.MultiDisplayBottomLeftToPanelPosition, X0, X1
	266 Move X0, [X19+72]
	267 Compare X0, 0
	268 JumpIfEqual {520}
	269 Move S12, [X19+120]
	270 Move S13, [X19+124]
	271 Move X1, X31
	272 Move V8, V0
	273 Move V9, V1
	274 Call Event.get_delta, X0
	275 Move X0, [X28]
	276 Move V10, V0
	277 Move V11, V1
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {283}
	281 Call 0x1C17DFC
	282 Move X0, [X28]
	283 Move X8, [X0+184]
	284 Move X0, [X24]
	285 Move X20, [X31+40]
	286 Move W8, [X8+8]
	287 Move [X31+12], W8
	288 Move W8, [X0+224]
	289 Compare W8, 0
	290 JumpIfNotEqual {293}
	291 Call 0x1C17DFC
	292 Move X0, [X24]
	293 Move X23, X24
	294 Move X8, [X0+184]
	295 Move X22, [X8+16]
	296 Compare X22, 0
	297 JumpIfNotEqual {467}
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfEqual {443}
	301 Move X9, 0x3D9000
	302 Move X0, [X19+72]
	303 Compare X0, 0
	304 JumpIfEqual {520}
	305 Move X1, X31
	306 Call Event.get_pointerType, X0
	307 Compare W0, 0
	308 JumpIfEqual {202}
	309 Move X0, [X19+72]
	310 Compare X0, 0
	311 JumpIfEqual {520}
	312 Move X1, X31
	313 Call Event.get_pointerType, X0
	314 Compare W0, 0
	315 JumpIfEqual {332}
	316 Move X0, [X19+72]
	317 Compare X0, 0
	318 JumpIfEqual {520}
	319 Move X1, X31
	320 Call Event.get_pointerType, X0
	321 Move X8, [X28]
	322 Move W20, W0
	323 Move W9, [X8+224]
	324 Compare W9, 0
	325 JumpIfNotEqual {329}
	326 Move X0, X8
	327 Call 0x1C17DFC
	328 Move X8, [X28]
	329 Move X8, [X8+184]
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Add X8, X8, 12
	332 Move X0, [X28]
	333 Move W8, [X0+224]
	334 Compare W8, 0
	335 JumpIfNotEqual {338}
	336 Call 0x1C17DFC
	337 Move X0, [X28]
	338 Move X8, [X0+184]
	339 Add X8, X8, 8
	340 Add X8, X8, 20
	341 Move X0, [X19+72]
	342 Compare X0, 0
	343 JumpIfEqual {520}
	344 Move W20, [X8]
	345 Move X1, X31
	346 Call Event.get_mousePosition, X0
	347 Move X0, [X29]
	348 Move V8, V0
	349 Move V9, V1
	350 Move W8, [X0+224]
	351 Compare W8, 0
	352 JumpIfNotEqual {354}
	353 Call 0x1C17DFC
	354 Add X0, X31, 32
	355 Move V0, V8
	356 Move V1, V9
	357 Move X1, X31
	358 Call UIElementsRuntimeUtility.MultiDisplayToLocalScreenPosition, X0, X1
	359 Move X0, [X19+72]
	360 Compare X0, 0
	361 JumpIfEqual {520}
	362 Move X1, X31
	363 Move V8, V0
	364 Move V9, V1
	365 Move [X31+12], W20
	366 Call Event.get_delta, X0
	367 Move X0, [X24]
	368 Move X20, [X31+32]
	369 Move V10, V0
	370 Move V11, V1
	371 Move W8, [X0+224]
	372 Move X22, X21
	373 Move X25, X29
	374 Compare W8, 0
	375 JumpIfNotEqual {378}
	376 Call 0x1C17DFC
	377 Move X0, [X24]
	378 Move X8, [X0+184]
	379 Move X29, X22
	380 Move X21, X23
	381 Move X22, [X8+24]
	382 Compare X22, 0
	383 JumpIfNotEqual {405}
	384 Move W8, [X0+224]
	385 Compare W8, 0
	386 JumpIfNotEqual {389}
	387 Call 0x1C17DFC
	388 Move X0, [X24]
	389 Move X8, [X0+184]
	390 Move X23, [X8]
	391 Move X8, 0x3D9000
	392 Move X8, [X8+2584]
	393 Move X0, [X8]
	394 Call 0x1C17F10
	395 Move X8, 0x3D9000
	396 Move X8, [X8+2616]
	397 Move X1, X23
	398 Move X3, X31
	399 Move X22, X0
	400 Move X2, [X8]
	401 Call Func`4<Vector3, Vector3, Object, Object>..ctor, X0, X1, X2
	402 Move X8, [X24]
	403 Move X8, [X8+184]
	404 Move [X8+24], X22
	405 Move X23, [X19+72]
	406 Compare X23, 0
	407 JumpIfEqual {520}
	408 Move X0, X23
	409 Move X1, X31
	410 Call Event.get_type, X0
	411 Compare W0, 0
	412 JumpIfEqual {420}
	413 Move X0, [X19+72]
	414 Compare X0, 0
	415 JumpIfEqual {520}
	416 Move X1, X31
	417 Call Event.get_type, X0
	418 NotImplemented "Instruction CMP not yet implemented."
	419 NotImplemented "Instruction CSET not yet implemented."
	420 Move W5, 1
	421 Move X8, 0x3D9000
	422 Move X8, [X8+2560]
	423 Move W1, [X31+12]
	424 Move S2, W31
	425 Move S5, W31
	426 Move X6, [X8]
	427 Move X0, X19
	428 Move V0, V8
	429 Move V1, V9
	430 Move V3, V10
	431 Move V4, V11
	432 Move X2, X20
	433 Move X3, X22
	434 Move X4, X23
	435 Call DefaultEventSystem.SendPositionBasedEvent, X0, X1, X2, X3, X4, X5, X6, X7
	436 Move X8, X29
	437 Move X29, X25
	438 Move X25, 0x3D9000
	439 Move X25, [X25+2576]
	440 Move W20, W31
	441 Move X23, X21
	442 Move X21, X8
	443 Call 0x1C17DFC
	444 Move X9, 0x3D9000
	445 Move X0, [X23]
	446 Move X9, [X9+2592]
	447 Move X27, X23
	448 Move X8, [X0+184]
	449 Move X0, [X9]
	450 Move X23, [X8]
	451 Call 0x1C17F10
	452 Move X8, 0x3D9000
	453 Move X8, [X8+2608]
	454 Move X1, X23
	455 Move X3, X31
	456 Move X22, X0
	457 Move X2, [X8]
	458 Call Func`4<Vector3, Vector3, ValueTuple`2<Int32Enum, Vector2>, Object>..ctor, X0, X1, X2
	459 Move X8, [X27]
	460 Move X23, X27
	461 Move X28, 0x38E000
	462 Move X27, 0x3D9000
	463 Move X8, [X8+184]
	464 Move [X8+16], X22
	465 Move X28, [X28+3664]
	466 Move X27, [X27+2552]
	467 Move X8, 0x3D9000
	468 Move W1, [X19+104]
	469 Move X8, [X8+2624]
	470 Add X0, X31, 16
	471 Move V0, V10
	472 Move V1, V11
	473 Move X2, [X8]
	474 Subtract S12, S8, S12
	475 Subtract S13, S9, S13
	476 Move [X31+24], W31
	477 Move [X31+16], X31
	478 Call ValueTuple`2<Int32Enum, Vector2>..ctor, X0, X1, X2
	479 Move X8, 0x3D9000
	480 Move X4, [X31+16]
	481 Move W5, [X31+24]
	482 Move X8, [X8+2568]
	483 Move W1, [X31+12]
	484 Move S2, W31
	485 Move S5, W31
	486 Move X7, [X8]
	487 Move X0, X19
	488 Move V0, V8
	489 Move V1, V9
	490 Move V3, V12
	491 Move V4, V13
	492 Move X2, X20
	493 Move X3, X22
	494 Move W6, W31
	495 Call 0x21AB338, X0, X1, X2, X3, X4, X5, X6, X7
	496 Move X24, X23
	497 Move X23, 0x3D8000
	498 Move X23, [X23+2608]
	499 Move W20, W31
	500 Move X20, [X31+176]
	501 Move X19, [X31+184]
	502 Move X22, [X31+160]
	503 Move X21, [X31+168]
	504 Move X24, [X31+144]
	505 Move X23, [X31+152]
	506 Move X26, [X31+128]
	507 Move X25, [X31+136]
	508 Move X28, [X31+112]
	509 Move X27, [X31+120]
	510 Move X29, [X31+96]
	511 Move X30, [X31+104]
	512 Move D9, [X31+80]
	513 Move D8, [X31+88]
	514 Move D11, [X31+64]
	515 Move D10, [X31+72]
	516 Move D13, [X31+48]
	517 Move D12, [X31+56]
	518 Add X31, X31, 192
	519 Return 
	520 Call 0x1C17F20

Method: System.Void ProcessMouseEvents()

Disassembly:
	0x03D8EF98 STR X22, [X8 + 0x10]
	0x03D8EF9C LDR X28, [X28 + 0xE50]
	0x03D8EFA0 LDR X27, [X27 + 0x9F8]
	0x03D8EFA4 ADRP X8, 0x3D9000
	0x03D8EFA8 LDR W1, [X19 + 0x68]
	0x03D8EFAC LDR X8, [X8 + 0xA40]
	0x03D8EFB0 ADD X0, X31, 0x10
	0x03D8EFB4 MOV V0.16B, V10.16B
	0x03D8EFB8 MOV V1.16B, V11.16B
	0x03D8EFBC LDR X2, [X8]
	0x03D8EFC0 FSUB S12, S8, S12
	0x03D8EFC4 FSUB S13, S9, S13
	0x03D8EFC8 STR W31, [X31 + 0x18]
	0x03D8EFCC STR X31, [X31 + 0x10]
	0x03D8EFD0 BL 0x27A4E44
	0x03D8EFD4 ADRP X8, 0x3D9000
	0x03D8EFD8 LDR X4, [X31 + 0x10]
	0x03D8EFDC LDR W5, [X31 + 0x18]
	0x03D8EFE0 LDR X8, [X8 + 0xA08]
	0x03D8EFE4 LDR W1, [X31 + 0xC]
	0x03D8EFE8 FMOV S2, W31
	0x03D8EFEC FMOV S5, W31
	0x03D8EFF0 LDR X7, [X8]
	0x03D8EFF4 MOV X0, X19
	0x03D8EFF8 MOV V0.16B, V8.16B
	0x03D8EFFC MOV V1.16B, V9.16B
	0x03D8F000 MOV V3.16B, V12.16B
	0x03D8F004 MOV V4.16B, V13.16B
	0x03D8F008 MOV X2, X20
	0x03D8F00C MOV X3, X22
	0x03D8F010 MOV W6, W31
	0x03D8F014 BL 0x21AA338
	0x03D8F018 MOV X24, X23
	0x03D8F01C ADRP X23, 0x3D8000
	0x03D8F020 LDR X23, [X23 + 0xA30]
	0x03D8F024 MOV W20, W31
	0x03D8F028 B 0x3D8EA34
	0x03D8F02C LDP X20, X19, [X31 + 0xB0]
	0x03D8F030 LDP X22, X21, [X31 + 0xA0]
	0x03D8F034 LDP X24, X23, [X31 + 0x90]
	0x03D8F038 LDP X26, X25, [X31 + 0x80]
	0x03D8F03C LDP X28, X27, [X31 + 0x70]
	0x03D8F040 LDP X29, X30, [X31 + 0x60]
	0x03D8F044 LDP D9, D8, [X31 + 0x50]
	0x03D8F048 LDP D11, D10, [X31 + 0x40]
	0x03D8F04C LDP D13, D12, [X31 + 0x30]
	0x03D8F050 ADD X31, X31, 0xC0
	0x03D8F054 RET
	0x03D8F058 BL 0x1C16F20
	0x03D8F05C STP X30, X23, [X31 - 0x30]!
	0x03D8F060 STP X22, X21, [X31 + 0x10]
	0x03D8F064 STP X20, X19, [X31 + 0x20]
	0x03D8F068 ADRP X20, 0x658000
	0x03D8F06C LDRB W8, [X20 + 0xE41]
	0x03D8F070 MOV X19, X0
	0x03D8F074 TBNZ X8, 0x0, 0x3D8F0D4
	0x03D8F078 ADRP X0, 0x3D8000
	0x03D8F07C LDR X0, [X0 + 0x9F8]
	0x03D8F080 BL 0x1C16CF4
	0x03D8F084 ADRP X0, 0x3D8000
	0x03D8F088 LDR X0, [X0 + 0xA10]
	0x03D8F08C BL 0x1C16CF4
	0x03D8F090 ADRP X0, 0x3D8000
	0x03D8F094 LDR X0, [X0 + 0x968]
	0x03D8F098 BL 0x1C16CF4
	0x03D8F09C ADRP X0, 0x3D8000
	0x03D8F0A0 LDR X0, [X0 + 0xA48]
	0x03D8F0A4 BL 0x1C16CF4
	0x03D8F0A8 ADRP X0, 0x3D8000
	0x03D8F0AC LDR X0, [X0 + 0xA50]
	0x03D8F0B0 BL 0x1C16CF4
	0x03D8F0B4 ADRP X0, 0x3D8000
	0x03D8F0B8 LDR X0, [X0 + 0xA58]
	0x03D8F0BC BL 0x1C16CF4
	0x03D8F0C0 ADRP X0, 0x3D8000
	0x03D8F0C4 LDR X0, [X0 + 0x998]
	0x03D8F0C8 BL 0x1C16CF4
	0x03D8F0CC MOVZ W8, 0x1
	0x03D8F0D0 STRB W8, [X20 + 0xE41]
	0x03D8F0D4 ADRP X22, 0x3D8000
	0x03D8F0D8 LDR X22, [X22 + 0x998]
	0x03D8F0DC MOV X0, X19
	0x03D8F0E0 BL 0x3D8F590
	0x03D8F0E4 TBZ X0, 0x0, 0x3D8F178
	0x03D8F0E8 LDR X0, [X22]
	0x03D8F0EC LDR W8, [X0 + 0xE0]
	0x03D8F0F0 CBNZ W8, 0x3D8F0FC
	0x03D8F0F4 BL 0x1C16DFC
	0x03D8F0F8 LDR X0, [X22]
	0x03D8F0FC LDR X8, [X0 + 0xB8]
	0x03D8F100 LDR X20, [X8 + 0x38]
	0x03D8F104 CBNZ X20, 0x3D8F158
	0x03D8F108 LDR W8, [X0 + 0xE0]
	0x03D8F10C CBNZ W8, 0x3D8F118
	0x03D8F110 BL 0x1C16DFC
	0x03D8F114 LDR X0, [X22]
	0x03D8F118 ADRP X9, 0x3D8000
	0x03D8F11C LDR X8, [X0 + 0xB8]
	0x03D8F120 LDR X9, [X9 + 0xA10]
	0x03D8F124 LDR X21, [X8]
	0x03D8F128 LDR X0, [X9]
	0x03D8F12C BL 0x1C16F10
	0x03D8F130 ADRP X8, 0x3D8000
	0x03D8F134 LDR X8, [X8 + 0xA48]
	0x03D8F138 MOV X1, X21
	0x03D8F13C MOV X3, X31
	0x03D8F140 MOV X20, X0
	0x03D8F144 LDR X2, [X8]
	0x03D8F148 BL 0x2D30578
	0x03D8F14C LDR X8, [X22]
	0x03D8F150 LDR X8, [X8 + 0xB8]
	0x03D8F154 STR X20, [X8 + 0x38]
	0x03D8F158 CBZ X19, 0x3D8F3BC
	0x03D8F15C ADRP X8, 0x3D8000
	0x03D8F160 LDR X8, [X8 + 0x9F8]
	0x03D8F164 MOV X0, X19
	0x03D8F168 MOV X1, X20
	0x03D8F16C MOV X2, X19
	0x03D8F170 LDR X3, [X8]
	0x03D8F174 BL 0x21A97F4
	0x03D8F178 LDR X20, [X19 + 0x10]
	0x03D8F17C CBNZ X20, 0x3D8F194
	0x03D8F180 MOV X0, X19
	0x03D8F184 BL 0x3D8D55C
	0x03D8F188 MOV X20, X0
	0x03D8F18C STR X0, [X19 + 0x10]
	0x03D8F190 CBZ X0, 0x3D8F3BC
	0x03D8F194 ADRP X23, 0x3D8000
	0x03D8F198 LDR X8, [X20]
	0x03D8F19C LDR X23, [X23 + 0x968]
	0x03D8F1A0 LDR X21, [X19 + 0x28]
	0x03D8F1A4 LDRH W9, [X8 + 0x12E]
	0x03D8F1A8 LDR X1, [X23]
	0x03D8F1AC CBZ X9, 0x3D8F1D0
	0x03D8F1B0 LDR X10, [X8 + 0xB0]
	0x03D8F1B4 ADD X10, X10, 0x8
	0x03D8F1B8 LDUR X11, [X10 - 0x8]
	0x03D8F1BC CMP X11, X1
	0x03D8F1C0 B.EQ 0x3D8F1E0
	0x03D8F1C4 SUBS X9, X9, 0x1
	0x03D8F1C8 ADD X10, X10, 0x10
	0x03D8F1CC B.NE 0x3D8F1B8
	0x03D8F1D0 MOV X0, X20
	0x03D8F1D4 MOV W2, W31
	0x03D8F1D8 BL 0x1C5C788
	0x03D8F1DC B 0x3D8F1EC
	0x03D8F1E0 LDRSW X9, [X10]
	0x03D8F1E4 ADD X8, X8, X9, 0x4, LSL
	0x03D8F1E8 ADD X0, X8, 0x138
	0x03D8F1EC LDP X8, X2, [X0]
	0x03D8F1F0 MOV X0, X20
	0x03D8F1F4 MOV X1, X21
	0x03D8F1F8 BLR X8
	0x03D8F1FC TBZ X0, 0x0, 0x3D8F290
	0x03D8F200 LDR X0, [X22]
	0x03D8F204 LDR W8, [X0 + 0xE0]
	0x03D8F208 CBNZ W8, 0x3D8F214
	0x03D8F20C BL 0x1C16DFC
	0x03D8F210 LDR X0, [X22]
	0x03D8F214 LDR X8, [X0 + 0xB8]
	0x03D8F218 LDR X20, [X8 + 0x40]
	0x03D8F21C CBNZ X20, 0x3D8F270
	0x03D8F220 LDR W8, [X0 + 0xE0]
	0x03D8F224 CBNZ W8, 0x3D8F230
	0x03D8F228 BL 0x1C16DFC
	0x03D8F22C LDR X0, [X22]
	0x03D8F230 ADRP X9, 0x3D8000
	0x03D8F234 LDR X8, [X0 + 0xB8]
	0x03D8F238 LDR X9, [X9 + 0xA10]
	0x03D8F23C LDR X21, [X8]
	0x03D8F240 LDR X0, [X9]
	0x03D8F244 BL 0x1C16F10
	0x03D8F248 ADRP X8, 0x3D8000
	0x03D8F24C LDR X8, [X8 + 0xA50]
	0x03D8F250 MOV X1, X21
	0x03D8F254 MOV X3, X31
	0x03D8F258 MOV X20, X0
	0x03D8F25C LDR X2, [X8]
	0x03D8F260 BL 0x2D30578
	0x03D8F264 LDR X8, [X22]
	0x03D8F268 LDR X8, [X8 + 0xB8]
	0x03D8F26C STR X20, [X8 + 0x40]
	0x03D8F270 CBZ X19, 0x3D8F3BC
	0x03D8F274 ADRP X8, 0x3D8000
	0x03D8F278 LDR X8, [X8 + 0x9F8]
	0x03D8F27C MOV X0, X19
	0x03D8F280 MOV X1, X20
	0x03D8F284 MOV X2, X19
	0x03D8F288 LDR X3, [X8]
	0x03D8F28C BL 0x21A97F4
	0x03D8F290 LDR X20, [X19 + 0x10]
	0x03D8F294 CBNZ X20, 0x3D8F2AC
	0x03D8F298 MOV X0, X19
	0x03D8F29C BL 0x3D8D55C
	0x03D8F2A0 MOV X20, X0
	0x03D8F2A4 STR X0, [X19 + 0x10]
	0x03D8F2A8 CBZ X0, 0x3D8F3BC
	0x03D8F2AC LDR X8, [X20]
	0x03D8F2B0 LDR X21, [X19 + 0x30]
	0x03D8F2B4 LDR X1, [X23]
	0x03D8F2B8 LDRH W9, [X8 + 0x12E]
	0x03D8F2BC CBZ X9, 0x3D8F2E0
	0x03D8F2C0 LDR X10, [X8 + 0xB0]
	0x03D8F2C4 ADD X10, X10, 0x8
	0x03D8F2C8 LDUR X11, [X10 - 0x8]
	0x03D8F2CC CMP X11, X1
	0x03D8F2D0 B.EQ 0x3D8F2F0
	0x03D8F2D4 SUBS X9, X9, 0x1
	0x03D8F2D8 ADD X10, X10, 0x10
	0x03D8F2DC B.NE 0x3D8F2C8
	0x03D8F2E0 MOV X0, X20
	0x03D8F2E4 MOV W2, W31
	0x03D8F2E8 BL 0x1C5C788
	0x03D8F2EC B 0x3D8F2FC
	0x03D8F2F0 LDRSW X9, [X10]
	0x03D8F2F4 ADD X8, X8, X9, 0x4, LSL
	0x03D8F2F8 ADD X0, X8, 0x138
	0x03D8F2FC LDP X8, X2, [X0]
	0x03D8F300 MOV X0, X20
	0x03D8F304 MOV X1, X21
	0x03D8F308 BLR X8
	0x03D8F30C TBZ X0, 0x0, 0x3D8F3AC
	0x03D8F310 LDR X0, [X22]
	0x03D8F314 LDR W8, [X0 + 0xE0]
	0x03D8F318 CBNZ W8, 0x3D8F324
	0x03D8F31C BL 0x1C16DFC
	0x03D8F320 LDR X0, [X22]
	0x03D8F324 LDR X8, [X0 + 0xB8]
	0x03D8F328 LDR X20, [X8 + 0x48]
	0x03D8F32C CBNZ X20, 0x3D8F380
	0x03D8F330 LDR W8, [X0 + 0xE0]
	0x03D8F334 CBNZ W8, 0x3D8F340
	0x03D8F338 BL 0x1C16DFC
	0x03D8F33C LDR X0, [X22]
	0x03D8F340 ADRP X9, 0x3D8000
	0x03D8F344 LDR X8, [X0 + 0xB8]
	0x03D8F348 LDR X9, [X9 + 0xA10]
	0x03D8F34C LDR X21, [X8]
	0x03D8F350 LDR X0, [X9]
	0x03D8F354 BL 0x1C16F10
	0x03D8F358 ADRP X8, 0x3D8000
	0x03D8F35C LDR X8, [X8 + 0xA58]
	0x03D8F360 MOV X1, X21
	0x03D8F364 MOV X3, X31
	0x03D8F368 MOV X20, X0
	0x03D8F36C LDR X2, [X8]
	0x03D8F370 BL 0x2D30578
	0x03D8F374 LDR X8, [X22]
	0x03D8F378 LDR X8, [X8 + 0xB8]
	0x03D8F37C STR X20, [X8 + 0x48]
	0x03D8F380 CBZ X19, 0x3D8F3BC
	0x03D8F384 ADRP X8, 0x3D8000
	0x03D8F388 LDR X8, [X8 + 0x9F8]
	0x03D8F38C MOV X0, X19
	0x03D8F390 MOV X1, X20
	0x03D8F394 MOV X2, X19
	0x03D8F398 LDR X3, [X8]
	0x03D8F39C LDP X20, X19, [X31 + 0x20]
	0x03D8F3A0 LDP X22, X21, [X31 + 0x10]
	0x03D8F3A4 LDP X30, X23, [X31], #0x30
	0x03D8F3A8 B 0x21A97F4
	0x03D8F3AC LDP X20, X19, [X31 + 0x20]
	0x03D8F3B0 LDP X22, X21, [X31 + 0x10]
	0x03D8F3B4 LDP X30, X23, [X31], #0x30
	0x03D8F3B8 RET
	0x03D8F3BC BL 0x1C16F20
	0x03D8F3C0 STP X30, X19, [X31 - 0x10]!
	0x03D8F3C4 STR X1, [X0]
	0x03D8F3C8 CBZ X1, 0x3D8F404
	0x03D8F3CC LDR X0, [X1 + 0x50]
	0x03D8F3D0 MOV X19, X1
	0x03D8F3D4 STR X0, [X1 + 0x58]
	0x03D8F3D8 CBZ X0, 0x3D8F3F8
	0x03D8F3DC LDR X8, [X0]
	0x03D8F3E0 LDR X9, [X8 + 0x278]
	0x03D8F3E4 LDR X1, [X8 + 0x280]
	0x03D8F3E8 BLR X9
	0x03D8F3EC CBZ X0, 0x3D8F404
	0x03D8F3F0 MOV X1, X31
	0x03D8F3F4 BL 0x3D9D854
	0x03D8F3F8 STR X0, [X19 + 0x60]
	0x03D8F3FC LDP X30, X19, [X31], #0x10
	0x03D8F400 RET
	0x03D8F404 BL 0x1C16F20
	0x03D8F408 SUB X31, X31, 0x50
	0x03D8F40C STR X30, [X31 + 0x10]
	0x03D8F410 STP X24, X23, [X31 + 0x20]
	0x03D8F414 STP X22, X21, [X31 + 0x30]
	0x03D8F418 STP X20, X19, [X31 + 0x40]
	0x03D8F41C ADRP X22, 0x658000
	0x03D8F420 LDRB W8, [X22 + 0xE48]
	0x03D8F424 MOV W20, W2
	0x03D8F428 MOV X21, X1
	0x03D8F42C MOV X19, X0
	0x03D8F430 TBNZ X8, 0x0, 0x3D8F478
	0x03D8F434 ADRP X0, 0x3D8000
	0x03D8F438 LDR X0, [X0 + 0xA60]
	0x03D8F43C BL 0x1C16CF4
	0x03D8F440 ADRP X0, 0x3D8000
	0x03D8F444 LDR X0, [X0 + 0xA68]
	0x03D8F448 BL 0x1C16CF4
	0x03D8F44C ADRP X0, 0x3D8000
	0x03D8F450 LDR X0, [X0 + 0xA70]
	0x03D8F454 BL 0x1C16CF4
	0x03D8F458 ADRP X0, 0x3D8000
	0x03D8F45C LDR X0, [X0 + 0x998]
	0x03D8F460 BL 0x1C16CF4
	0x03D8F464 ADRP X0, 0x3D8000
	0x03D8F468 LDR X0, [X0 + 0xA78]
	0x03D8F46C BL 0x1C16CF4
	0x03D8F470 MOVZ W8, 0x1
	0x03D8F474 STRB W8, [X22 + 0xE48]
	0x03D8F478 MOV X0, X21
	0x03D8F47C MOV X1, X31
	0x03D8F480 BL 0x3DA4154
	0x03D8F484 TBZ X0, 0x0, 0x3D8F574
	0x03D8F488 CBZ X21, 0x3D8F58C
	0x03D8F48C MOV X0, X21
	0x03D8F490 MOV X1, X31
	0x03D8F494 BL 0x3C63824
	0x03D8F498 ADRP X24, 0x3D8000
	0x03D8F49C LDR X24, [X24 + 0x998]
	0x03D8F4A0 MOV W8, W0
	0x03D8F4A4 ANDS W31, W8, 0x1
	0x03D8F4A8 MOVZ W8, 0x5
	0x03D8F4AC LDR X0, [X24]
	0x03D8F4B0 CINC W21, W8, NE
	0x03D8F4B4 LDR W9, [X0 + 0xE0]
	0x03D8F4B8 CBNZ W9, 0x3D8F4C4
	0x03D8F4BC BL 0x1C16DFC
	0x03D8F4C0 LDR X0, [X24]
	0x03D8F4C4 LDR X8, [X0 + 0xB8]
	0x03D8F4C8 LDR X22, [X8 + 0x60]
	0x03D8F4CC CBNZ X22, 0x3D8F520
	0x03D8F4D0 LDR W8, [X0 + 0xE0]
	0x03D8F4D4 CBNZ W8, 0x3D8F4E0
	0x03D8F4D8 BL 0x1C16DFC
	0x03D8F4DC LDR X0, [X24]
	0x03D8F4E0 ADRP X9, 0x3D8000
	0x03D8F4E4 LDR X8, [X0 + 0xB8]
	0x03D8F4E8 LDR X9, [X9 + 0xA68]
	0x03D8F4EC LDR X23, [X8]
	0x03D8F4F0 LDR X0, [X9]
	0x03D8F4F4 BL 0x1C16F10
	0x03D8F4F8 ADRP X8, 0x3D8000
	0x03D8F4FC LDR X8, [X8 + 0xA70]
	0x03D8F500 MOV X1, X23
	0x03D8F504 MOV X3, X31
	0x03D8F508 MOV X22, X0
	0x03D8F50C LDR X2, [X8]
	0x03D8F510 BL 0x2D2B304
	0x03D8F514 LDR X8, [X24]
	0x03D8F518 LDR X8, [X8 + 0xB8]
	0x03D8F51C STR X22, [X8 + 0x60]
	0x03D8F520 LDR X3, [X19 + 0x10]
	0x03D8F524 CBNZ X3, 0x3D8F538
	0x03D8F528 MOV X0, X19
	0x03D8F52C BL 0x3D8D55C
	0x03D8F530 MOV X3, X0
	0x03D8F534 STR X0, [X19 + 0x10]
	0x03D8F538 ADRP X8, 0x3D8000
	0x03D8F53C LDR X8, [X8 + 0xA78]
	0x03D8F540 ADD X0, X31, 0x0
	0x03D8F544 MOV W1, W21
	0x03D8F548 MOV W2, W20
	0x03D8F54C LDR X4, [X8]
	0x03D8F550 STP X31, X31, [X31]
	0x03D8F554 BL 0x27BDC44
	0x03D8F558 ADRP X8, 0x3D8000
	0x03D8F55C LDP X2, X3, [X31]
	0x03D8F560 LDR X8, [X8 + 0xA60]
	0x03D8F564 MOV X0, X19
	0x03D8F568 MOV X1, X22
	0x03D8F56C LDR X4, [X8]
	0x03D8F570 BL 0x21A92BC
	0x03D8F574 LDP X20, X19, [X31 + 0x40]
	0x03D8F578 LDP X22, X21, [X31 + 0x30]
	0x03D8F57C LDP X24, X23, [X31 + 0x20]
	0x03D8F580 LDR X30, [X31 + 0x10]
	0x03D8F584 ADD X31, X31, 0x50
	0x03D8F588 RET
	0x03D8F58C BL 0x1C16F20
	0x03D8F590 STP D11, D10, [X31 - 0x50]!
	0x03D8F594 STP D9, D8, [X31 + 0x10]
	0x03D8F598 STR X30, [X31 + 0x20]
	0x03D8F59C STP X22, X21, [X31 + 0x30]
	0x03D8F5A0 STP X20, X19, [X31 + 0x40]
	0x03D8F5A4 ADRP X20, 0x658000
	0x03D8F5A8 LDRB W8, [X20 + 0xE47]
	0x03D8F5AC MOV X19, X0
	0x03D8F5B0 TBNZ X8, 0x0, 0x3D8F5D4
	0x03D8F5B4 ADRP X0, 0x3D8000
	0x03D8F5B8 LDR X0, [X0 + 0x968]
	0x03D8F5BC BL 0x1C16CF4
	0x03D8F5C0 ADRP X0, 0x3D5000
	0x03D8F5C4 LDR X0, [X0 + 0xC8]
	0x03D8F5C8 BL 0x1C16CF4
	0x03D8F5CC MOVZ W8, 0x1
	0x03D8F5D0 STRB W8, [X20 + 0xE47]
	0x03D8F5D4 LDR X20, [X19 + 0x10]
	0x03D8F5D8 CBNZ X20, 0x3D8F5F0
	0x03D8F5DC MOV X0, X19
	0x03D8F5E0 BL 0x3D8D55C
	0x03D8F5E4 MOV X20, X0
	0x03D8F5E8 STR X0, [X19 + 0x10]
	0x03D8F5EC CBZ X0, 0x3D8F960
	0x03D8F5F0 ADRP X22, 0x3D8000
	0x03D8F5F4 LDR X8, [X20]
	0x03D8F5F8 LDR X22, [X22 + 0x968]
	0x03D8F5FC LDRH W9, [X8 + 0x12E]
	0x03D8F600 LDR X1, [X22]
	0x03D8F604 CBZ X9, 0x3D8F628
	0x03D8F608 LDR X10, [X8 + 0xB0]
	0x03D8F60C ADD X10, X10, 0x8
	0x03D8F610 LDUR X11, [X10 - 0x8]
	0x03D8F614 CMP X11, X1
	0x03D8F618 B.EQ 0x3D8F638
	0x03D8F61C SUBS X9, X9, 0x1
	0x03D8F620 ADD X10, X10, 0x10
	0x03D8F624 B.NE 0x3D8F610
	0x03D8F628 MOVZ W2, 0xC
	0x03D8F62C MOV X0, X20
	0x03D8F630 BL 0x1C5C788
	0x03D8F634 B 0x3D8F648
	0x03D8F638 LDR W9, [X10]
	0x03D8F63C ADD W9, W9, 0xC
	0x03D8F640 ADD X8, X8, W9, 0x4, SXTW
	0x03D8F644 ADD X0, X8, 0x138
	0x03D8F648 LDP X8, X1, [X0]
	0x03D8F64C MOV X0, X20
	0x03D8F650 BLR X8
	0x03D8F654 MOV X0, X19
	0x03D8F658 MOV V8.16B, V0.16B
	0x03D8F65C BL 0x3D8FC18
	0x03D8F660 ADRP X20, 0x64A000
	0x03D8F664 LDRB W8, [X20 + 0x5AA]
	0x03D8F668 MOV V9.16B, V0.16B
	0x03D8F66C MOV V10.16B, V1.16B
	0x03D8F670 CBNZ W8, 0x3D8F688
	0x03D8F674 ADRP X0, 0x36B000
	0x03D8F678 LDR X0, [X0 + 0x4B8]
	0x03D8F67C BL 0x1C16CF4
	0x03D8F680 MOVZ W8, 0x1
	0x03D8F684 STRB W8, [X20 + 0x5AA]
	0x03D8F688 ADRP X8, 0x36B000
	0x03D8F68C LDR X8, [X8 + 0x4B8]
	0x03D8F690 ADRP X9, 0xFFFFFFFFFCD5B000
	0x03D8F694 LDR V1, [X9 + 0x240]
	0x03D8F698 FABS S2, S9
	0x03D8F69C LDR X8, [X8]
	0x03D8F6A0 FMOV S0, W31
	0x03D8F6A4 FMOV S4, 8
	0x03D8F6A8 FMAXNM S2, S2, S0
	0x03D8F6AC LDR X8, [X8 + 0xB8]
	0x03D8F6B0 FMUL S5, S2, S1
	0x03D8F6B4 LDR V3, [X8]
	0x03D8F6B8 FMUL S2, S3, S4
	0x03D8F6BC FCMP S5, S2
	0x03D8F6C0 FCSEL S3, S5, S2, GT
	0x03D8F6C4 FABD S4, S0, S0
	0x03D8F6C8 FCMP S4, S3
	0x03D8F6CC B.PL 0x3D8F6F0
	0x03D8F6D0 FABS S3, S10
	0x03D8F6D4 FMAXNM S3, S3, S0
	0x03D8F6D8 FMUL S1, S3, S1
	0x03D8F6DC FCMP S1, S2
	0x03D8F6E0 FCSEL S1, S1, S2, GT
	0x03D8F6E4 FABD S0, S0, S0
	0x03D8F6E8 FCMP S0, S1
	0x03D8F6EC B.MI 0x3D8F750
	0x03D8F6F0 LDR X20, [X19 + 0x10]
	0x03D8F6F4 CBNZ X20, 0x3D8F70C
	0x03D8F6F8 MOV X0, X19
	0x03D8F6FC BL 0x3D8D55C
	0x03D8F700 MOV X20, X0
	0x03D8F704 STR X0, [X19 + 0x10]
	0x03D8F708 CBZ X0, 0x3D8F960
	0x03D8F70C LDR X8, [X20]
	0x03D8F710 LDR X21, [X19 + 0x18]
	0x03D8F714 LDR X1, [X22]
	0x03D8F718 LDRH W9, [X8 + 0x12E]
	0x03D8F71C CBZ X9, 0x3D8F740
	0x03D8F720 LDR X10, [X8 + 0xB0]
	0x03D8F724 ADD X10, X10, 0x8
	0x03D8F728 LDUR X11, [X10 - 0x8]
	0x03D8F72C CMP X11, X1
	0x03D8F730 B.EQ 0x3D8F758
	0x03D8F734 SUBS X9, X9, 0x1
	0x03D8F738 ADD X10, X10, 0x10
	0x03D8F73C B.NE 0x3D8F728
	0x03D8F740 MOV X0, X20
	0x03D8F744 MOV W2, W31
	0x03D8F748 BL 0x1C5C788
	0x03D8F74C B 0x3D8F764
	0x03D8F750 MOV W0, W31
	0x03D8F754 B 0x3D8F898
	0x03D8F758 LDRSW X9, [X10]
	0x03D8F75C ADD X8, X8, X9, 0x4, LSL
	0x03D8F760 ADD X0, X8, 0x138
	0x03D8F764 LDP X8, X2, [X0]
	0x03D8F768 MOV X0, X20
	0x03D8F76C MOV X1, X21
	0x03D8F770 BLR X8
	0x03D8F774 TBZ X0, 0x0, 0x3D8F780
	0x03D8F778 MOV W8, W31
	0x03D8F77C B 0x3D8F800
	0x03D8F780 LDR X20, [X19 + 0x10]
	0x03D8F784 CBNZ X20, 0x3D8F79C
	0x03D8F788 MOV X0, X19
	0x03D8F78C BL 0x3D8D55C
	0x03D8F790 MOV X20, X0
	0x03D8F794 STR X0, [X19 + 0x10]
	0x03D8F798 CBZ X0, 0x3D8F960
	0x03D8F79C LDR X8, [X20]
	0x03D8F7A0 LDR X21, [X19 + 0x20]
	0x03D8F7A4 LDR X1, [X22]
	0x03D8F7A8 LDRH W9, [X8 + 0x12E]
	0x03D8F7AC CBZ X9, 0x3D8F7D0
	0x03D8F7B0 LDR X10, [X8 + 0xB0]
	0x03D8F7B4 ADD X10, X10, 0x8
	0x03D8F7B8 LDUR X11, [X10 - 0x8]
	0x03D8F7BC CMP X11, X1
	0x03D8F7C0 B.EQ 0x3D8F7E0
	0x03D8F7C4 SUBS X9, X9, 0x1
	0x03D8F7C8 ADD X10, X10, 0x10
	0x03D8F7CC B.NE 0x3D8F7B8
	0x03D8F7D0 MOV X0, X20
	0x03D8F7D4 MOV W2, W31
	0x03D8F7D8 BL 0x1C5C788
	0x03D8F7DC B 0x3D8F7EC
	0x03D8F7E0 LDRSW X9, [X10]
	0x03D8F7E4 ADD X8, X8, X9, 0x4, LSL
	0x03D8F7E8 ADD X0, X8, 0x138
	0x03D8F7EC LDP X8, X2, [X0]
	0x03D8F7F0 MOV X0, X20
	0x03D8F7F4 MOV X1, X21
	0x03D8F7F8 BLR X8
	0x03D8F7FC EOR W8, W0, 0x1
	0x03D8F800 LDP S0, S1, [X19 + 0x88]
	0x03D8F804 FMUL S0, S9, S0
	0x03D8F808 FMUL S1, S10, S1
	0x03D8F80C FADD S11, S0, S1
	0x03D8F810 TBZ X8, 0x0, 0x3D8F850
	0x03D8F814 FCMP S11, 0x0
	0x03D8F818 B.LE 0x3D8F834
	0x03D8F81C LDR W8, [X19 + 0x84]
	0x03D8F820 LDR V0, [X19 + 0x90]
	0x03D8F824 CMP W8, 0x1
	0x03D8F828 B.NE 0x3D8F838
	0x03D8F82C LDR V1, [X19 + 0x3C]
	0x03D8F830 B 0x3D8F844
	0x03D8F834 LDR V0, [X19 + 0x90]
	0x03D8F838 LDR V1, [X19 + 0x38]
	0x03D8F83C FMOV S2, 1
	0x03D8F840 FDIV S1, S2, S1
	0x03D8F844 FADD S0, S0, S1
	0x03D8F848 FCMP S8, S0
	0x03D8F84C B.LE 0x3D8F8A4
	0x03D8F850 ADRP X8, 0x3D5000
	0x03D8F854 LDR X8, [X8 + 0xC8]
	0x03D8F858 LDR X0, [X8]
	0x03D8F85C LDR W8, [X0 + 0xE0]
	0x03D8F860 CBNZ W8, 0x3D8F868
	0x03D8F864 BL 0x1C16DFC
	0x03D8F868 ADRP X8, 0xFFFFFFFFFCD5B000
	0x03D8F86C LDR V2, [X8 + 0x90]
	0x03D8F870 MOV V0.16B, V9.16B
	0x03D8F874 MOV V1.16B, V10.16B
	0x03D8F878 MOV X0, X31
	0x03D8F87C BL 0x3DA88A4
	0x03D8F880 CBZ W0, 0x3D8F898
	0x03D8F884 FCMP S11, 0x0
	0x03D8F888 B.LE 0x3D8F8AC
	0x03D8F88C LDR W8, [X19 + 0x84]
	0x03D8F890 ADD W8, W8, 0x1
	0x03D8F894 B 0x3D8F8B0
	0x03D8F898 STR W31, [X19 + 0x84]
	0x03D8F89C STRB W31, [X19 + 0x94]
	0x03D8F8A0 B 0x3D8F948
	0x03D8F8A4 MOV W0, W31
	0x03D8F8A8 B 0x3D8F948
	0x03D8F8AC MOVZ W8, 0x1
	0x03D8F8B0 LDR X20, [X19 + 0x10]
	0x03D8F8B4 LDRB W21, [X19 + 0x94]
	0x03D8F8B8 STR W8, [X19 + 0x84]
	0x03D8F8BC STP S10, S8, [X19 + 0x8C]
	0x03D8F8C0 STR S9, [X19 + 0x88]
	0x03D8F8C4 CBNZ X20, 0x3D8F8DC
	0x03D8F8C8 MOV X0, X19
	0x03D8F8CC BL 0x3D8D55C
	0x03D8F8D0 MOV X20, X0
	0x03D8F8D4 STR X0, [X19 + 0x10]
	0x03D8F8D8 CBZ X0, 0x3D8F960
	0x03D8F8DC LDR X8, [X20]
	0x03D8F8E0 LDR X1, [X22]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+16], D12
	003 Move [X31+32], D11
	004 Move [X31+40], D10
	005 Move [X31+48], D9
	006 Move [X31+56], D8
	007 Move [X31+64], X29
	008 Move [X31+72], X30
	009 Move [X31+80], X28
	010 Move [X31+88], X27
	011 Move [X31+96], X26
	012 Move [X31+104], X25
	013 Move [X31+112], X24
	014 Move [X31+120], X23
	015 Move [X31+128], X22
	016 Move [X31+136], X21
	017 Move [X31+144], X20
	018 Move [X31+152], X19
	019 Move X20, 0x65A000
	020 Move W8, [X20+3648]
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {64}
	026 Move X0, 0x3DA000
	027 Move X0, [X0+2488]
	028 Call 0x1C17CF4
	029 Move X0, 0x3DA000
	030 Move X0, [X0+2496]
	031 Call 0x1C17CF4
	032 Move X0, 0x3DA000
	033 Move X0, [X0+2504]
	034 Call 0x1C17CF4
	035 Move X0, 0x3DA000
	036 Move X0, [X0+2512]
	037 Call 0x1C17CF4
	038 Move X0, 0x3D9000
	039 Move X0, [X0+2408]
	040 Call 0x1C17CF4
	041 Move X0, 0x38E000
	042 Move X0, [X0+3664]
	043 Call 0x1C17CF4
	044 Move X0, 0x3D9000
	045 Move X0, [X0+2520]
	046 Call 0x1C17CF4
	047 Move X0, 0x3D9000
	048 Move X0, [X0+2528]
	049 Call 0x1C17CF4
	050 Move X0, 0x3D9000
	051 Move X0, [X0+2536]
	052 Call 0x1C17CF4
	053 Move X0, 0x3D9000
	054 Move X0, [X0+2456]
	055 Call 0x1C17CF4
	056 Move X0, 0x38D000
	057 Move X0, [X0+2352]
	058 Call 0x1C17CF4
	059 Move X0, 0x3D9000
	060 Move X0, [X0+2544]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X20+3648], W8
	064 Move [X31+24], X31
	065 Move X20, [X19+16]
	066 Compare X20, 0
	067 JumpIfNotEqual {74}
	068 Move X0, X19
	069 Call DefaultEventSystem.GetDefaultInput, X0
	070 Move X20, X0
	071 Move [X19+16], X0
	072 Compare X0, 0
	073 JumpIfEqual {643}
	074 Move X27, 0x3D9000
	075 Move X8, [X20]
	076 Move X27, [X27+2408]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Move X1, [X27]
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move W2, 6
	088 Move X0, X20
	089 Call 0x1C5D788
	090 Move W9, [X10]
	091 Add W9, W9, 6
	092 Add X8, X8, W9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X1, [X0+8]
	096 Move X0, X20
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {624}
	102 Move X20, [X19+16]
	103 Compare X20, 0
	104 JumpIfNotEqual {111}
	105 Move X0, X19
	106 Call DefaultEventSystem.GetDefaultInput, X0
	107 Move X20, X0
	108 Move [X19+16], X0
	109 Compare X0, 0
	110 JumpIfEqual {643}
	111 Move X8, [X20]
	112 Move X1, [X27]
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move W2, 9
	123 Move X0, X20
	124 Call 0x1C5D788
	125 Move W9, [X10]
	126 Add W9, W9, 9
	127 Add X8, X8, W9
	128 Add X0, X8, 312
	129 Move X8, [X0]
	130 Move X1, [X0+8]
	131 Move X0, X20
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X8, 0x38D000
	134 Move X8, [X8+2352]
	135 Move V8, V0
	136 Move V9, V1
	137 Move X0, [X8]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Add X0, X31, 24
	143 Move V0, V8
	144 Move V1, V9
	145 Move X1, X31
	146 Call UIElementsRuntimeUtility.MultiDisplayBottomLeftToPanelPosition, X0, X1
	147 Move W8, [X19+128]
	148 Move V8, V0
	149 Move V9, V1
	150 Compare W8, 0
	151 JumpIfEqual {251}
	152 Move X20, 0x64B000
	153 Move S0, [X19+120]
	154 Move S11, [X19+124]
	155 Move W8, [X20+1450]
	156 Subtract S10, S8, S0
	157 Compare W8, 0
	158 JumpIfNotEqual {164}
	159 Move X0, 0x36C000
	160 Move X0, [X0+1208]
	161 Call 0x1C17CF4
	162 Move W8, 1
	163 Move [X20+1450], W8
	164 Move X8, 0x36C000
	165 Move X8, [X8+1208]
	166 Move X9, -53100544
	167 Move V1, [X9+576]
	168 NotImplemented "Instruction FABS not yet implemented."
	169 Move X8, [X8]
	170 Move S0, W31
	171 Move S4, 8
	172 NotImplemented "Instruction FMAXNM not yet implemented."
	173 Move X8, [X8+184]
	174 Multiply S5, S2, S1
	175 Subtract S11, S9, S11
	176 Move V3, [X8]
	177 Multiply S2, S3, S4
	178 NotImplemented "Instruction FCMP not yet implemented."
	179 NotImplemented "Instruction FCSEL not yet implemented."
	180 NotImplemented "Instruction FABD not yet implemented."
	181 NotImplemented "Instruction FCMP not yet implemented."
	182 NotImplemented "Instruction FABS not yet implemented."
	183 NotImplemented "Instruction FMAXNM not yet implemented."
	184 Multiply S1, S3, S1
	185 NotImplemented "Instruction FCMP not yet implemented."
	186 NotImplemented "Instruction FCSEL not yet implemented."
	187 NotImplemented "Instruction FABD not yet implemented."
	188 NotImplemented "Instruction FCMP not yet implemented."
	189 Move [X19+120], S8
	190 Move [X19+128], S9
	191 Move X20, 0x38E000
	192 Move X20, [X20+3664]
	193 Move X0, [X20]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {199}
	197 Call 0x1C17DFC
	198 Move X0, [X20]
	199 Move X24, 0x3D9000
	200 Move X8, [X0+184]
	201 Move X24, [X24+2456]
	202 Move X21, [X31+24]
	203 Move W20, [X8+8]
	204 Move X0, [X24]
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {210}
	208 Call 0x1C17DFC
	209 Move X0, [X24]
	210 Move X8, [X0+184]
	211 Move X22, [X8+32]
	212 Compare X22, 0
	213 JumpIfNotEqual {235}
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfNotEqual {219}
	217 Call 0x1C17DFC
	218 Move X0, [X24]
	219 Move X9, 0x3D9000
	220 Move X8, [X0+184]
	221 Move X9, [X9+2504]
	222 Move X23, [X8]
	223 Move X0, [X9]
	224 Call 0x1C17F10
	225 Move X8, 0x3D9000
	226 Move X8, [X8+2520]
	227 Move X1, X23
	228 Move X3, X31
	229 Move X22, X0
	230 Move X2, [X8]
	231 Call Func`4<Vector3, Vector3, Object, Object>..ctor, X0, X1, X2
	232 Move X8, [X24]
	233 Move X8, [X8+184]
	234 Move [X8+32], X22
	235 Move X8, 0x3D9000
	236 Move X8, [X8+2488]
	237 Move S2, W31
	238 Move S5, W31
	239 Move X0, X19
	240 Move X6, [X8]
	241 Move V0, V8
	242 Move V1, V9
	243 Move V3, V10
	244 Move V4, V11
	245 Move W1, W20
	246 Move X2, X21
	247 Move X3, X22
	248 Move X4, X19
	249 Move W5, W31
	250 Call DefaultEventSystem.SendPositionBasedEvent, X0, X1, X2, X3, X4, X5, X6, X7
	251 Move X20, 0x64B000
	252 Move W8, [X20+1935]
	253 Compare W8, 0
	254 JumpIfNotEqual {260}
	255 Move X0, 0x36D000
	256 Move X0, [X0+3848]
	257 Call 0x1C17CF4
	258 Move W8, 1
	259 Move [X20+1935], W8
	260 Move X8, 0x36D000
	261 Move X8, [X8+3848]
	262 Move X8, [X8]
	263 Move X8, [X8+184]
	264 Move S10, [X8]
	265 Move S11, [X8+4]
	266 Move W8, 1
	267 Move [X19+120], S8
	268 Move [X19+128], S9
	269 Move [X19+128], W8
	270 Move X20, [X19+16]
	271 Compare X20, 0
	272 JumpIfNotEqual {279}
	273 Move X0, X19
	274 Call DefaultEventSystem.GetDefaultInput, X0
	275 Move X20, X0
	276 Move [X19+16], X0
	277 Compare X0, 0
	278 JumpIfEqual {643}
	279 Move X8, [X20]
	280 Move X1, [X27]
	281 NotImplemented "Instruction LDRH not yet implemented."
	282 Compare X9, 0
	283 JumpIfEqual {290}
	284 Move X10, [X8+176]
	285 Add X10, X10, 8
	286 NotImplemented "Instruction LDUR not yet implemented."
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Subtract X9, X9, 1
	289 Add X10, X10, 16
	290 Move W2, 10
	291 Move X0, X20
	292 Call 0x1C5D788
	293 Move W9, [X10]
	294 Add W9, W9, 10
	295 Add X8, X8, W9
	296 Add X0, X8, 312
	297 Move X8, [X0]
	298 Move X1, [X0+8]
	299 Move X0, X20
	300 NotImplemented "Instruction BLR not yet implemented."
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X28, 0x38E000
	303 Move X29, 0x3D9000
	304 Move X26, 0x3D9000
	305 Move X28, [X28+3664]
	306 Move X29, [X29+2456]
	307 Move X26, [X26+2544]
	308 Move W20, W0
	309 Move W21, W31
	310 Move X22, [X19+16]
	311 Compare X22, 0
	312 JumpIfNotEqual {319}
	313 Move X0, X19
	314 Call DefaultEventSystem.GetDefaultInput, X0
	315 Move X22, X0
	316 Move [X19+16], X0
	317 Compare X0, 0
	318 JumpIfEqual {643}
	319 Move X8, [X22]
	320 Move X1, [X27]
	321 NotImplemented "Instruction LDRH not yet implemented."
	322 Compare X9, 0
	323 JumpIfEqual {330}
	324 Move X10, [X8+176]
	325 Add X10, X10, 8
	326 NotImplemented "Instruction LDUR not yet implemented."
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Subtract X9, X9, 1
	329 Add X10, X10, 16
	330 Move W2, 7
	331 Move X0, X22
	332 Call 0x1C5D788
	333 Move W9, [X10]
	334 Add W9, W9, 7
	335 Add X8, X8, W9
	336 Add X0, X8, 312
	337 Move X8, [X0]
	338 Move X2, [X0+8]
	339 Move X0, X22
	340 Move W1, W21
	341 NotImplemented "Instruction BLR not yet implemented."
	342 Move TEMP, X0
	343 And TEMP, TEMP, 1
	344 Compare TEMP, 1
	345 JumpIfNotEqual {518}
	346 Move W8, [X19+108]
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move X22, [X19+16]
	349 Compare X22, 0
	350 JumpIfNotEqual {357}
	351 Move X0, X19
	352 Call DefaultEventSystem.GetDefaultInput, X0
	353 Move X22, X0
	354 Move [X19+16], X0
	355 Compare X0, 0
	356 JumpIfEqual {643}
	357 Move X8, [X22]
	358 Move X1, [X27]
	359 NotImplemented "Instruction LDRH not yet implemented."
	360 Compare X9, 0
	361 JumpIfEqual {368}
	362 Move X10, [X8+176]
	363 Add X10, X10, 8
	364 NotImplemented "Instruction LDUR not yet implemented."
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Subtract X9, X9, 1
	367 Add X10, X10, 16
	368 Move W2, 12
	369 Move X0, X22
	370 Call 0x1C5D788
	371 Move W9, [X10]
	372 Add W9, W9, 12
	373 Add X8, X8, W9
	374 Add X0, X8, 312
	375 Move X8, [X0]
	376 Move X1, [X0+8]
	377 Move X0, X22
	378 NotImplemented "Instruction BLR not yet implemented."
	379 Move V1, [X19+112]
	380 NotImplemented "Instruction FCMP not yet implemented."
	381 Move W8, [X19+116]
	382 Move W8, W31
	383 Move [X19+108], W21
	384 Move X23, [X19+16]
	385 Add W22, W8, 1
	386 Move [X19+116], W22
	387 Compare X23, 0
	388 JumpIfNotEqual {395}
	389 Move X0, X19
	390 Call DefaultEventSystem.GetDefaultInput, X0
	391 Move X23, X0
	392 Move [X19+16], X0
	393 Compare X0, 0
	394 JumpIfEqual {643}
	395 Move X8, [X23]
	396 Move X1, [X27]
	397 NotImplemented "Instruction LDRH not yet implemented."
	398 Compare X9, 0
	399 JumpIfEqual {406}
	400 Move X10, [X8+176]
	401 Add X10, X10, 8
	402 NotImplemented "Instruction LDUR not yet implemented."
	403 NotImplemented "Instruction CMP not yet implemented."
	404 Subtract X9, X9, 1
	405 Add X10, X10, 16
	406 Move W2, 12
	407 Move X0, X23
	408 Call 0x1C5D788
	409 Move W9, [X10]
	410 Add W9, W9, 12
	411 Add X8, X8, W9
	412 Add X0, X8, 312
	413 Move X8, [X0]
	414 Move X1, [X0+8]
	415 Move X0, X23
	416 NotImplemented "Instruction BLR not yet implemented."
	417 Move X23, [X19+16]
	418 Move V12, V0
	419 Compare X23, 0
	420 JumpIfNotEqual {427}
	421 Move X0, X19
	422 Call DefaultEventSystem.GetDefaultInput, X0
	423 Move X23, X0
	424 Move [X19+16], X0
	425 Compare X0, 0
	426 JumpIfEqual {643}
	427 Move X8, [X23]
	428 Move X1, [X27]
	429 NotImplemented "Instruction LDRH not yet implemented."
	430 Compare X9, 0
	431 JumpIfEqual {438}
	432 Move X10, [X8+176]
	433 Add X10, X10, 8
	434 NotImplemented "Instruction LDUR not yet implemented."
	435 NotImplemented "Instruction CMP not yet implemented."
	436 Subtract X9, X9, 1
	437 Add X10, X10, 16
	438 Move W2, 13
	439 Move X0, X23
	440 Call 0x1C5D788
	441 Move W9, [X10]
	442 Add W9, W9, 13
	443 Add X8, X8, W9
	444 Add X0, X8, 312
	445 Move X8, [X0]
	446 Move X1, [X0+8]
	447 Move X0, X23
	448 NotImplemented "Instruction BLR not yet implemented."
	449 Add S0, S12, S0
	450 Move [X19+112], S0
	451 Move X0, [X28]
	452 Move W8, [X0+224]
	453 Compare W8, 0
	454 JumpIfNotEqual {457}
	455 Call 0x1C17DFC
	456 Move X0, [X28]
	457 Move X8, [X0+184]
	458 Move X0, [X29]
	459 Move X24, [X31+24]
	460 Move W23, [X8+8]
	461 Move W8, [X0+224]
	462 Compare W8, 0
	463 JumpIfNotEqual {466}
	464 Call 0x1C17DFC
	465 Move X0, [X29]
	466 Move X8, [X0+184]
	467 Move X25, [X8+40]
	468 Compare X25, 0
	469 JumpIfNotEqual {493}
	470 Move W8, [X0+224]
	471 Compare W8, 0
	472 JumpIfNotEqual {475}
	473 Call 0x1C17DFC
	474 Move X0, [X29]
	475 Move X8, [X0+184]
	476 Move X26, [X8]
	477 Move X8, 0x3D9000
	478 Move X8, [X8+2512]
	479 Move X0, [X8]
	480 Call 0x1C17F10
	481 Move X8, 0x3D9000
	482 Move X8, [X8+2528]
	483 Move X1, X26
	484 Move X3, X31
	485 Move X25, X0
	486 Move X2, [X8]
	487 Call Func`4<Vector3, Vector3, ValueTuple`3<Int32, Int32, Int32Enum>, Object>..ctor, X0, X1, X2
	488 Move X8, [X29]
	489 Move X26, 0x3D9000
	490 Move X8, [X8+184]
	491 Move [X8+40], X25
	492 Move X26, [X26+2544]
	493 Move W3, [X19+104]
	494 Move X4, [X26]
	495 Add X0, X31, 0
	496 Move W1, W21
	497 Move W2, W22
	498 Move [X31+8], W31
	499 Move [X31], X31
	500 Call ValueTuple`3<Int32, Int32, Int32Enum>..ctor, X0, X1, X2, X3
	501 Move X8, 0x3D9000
	502 Move X4, [X31]
	503 Move W5, [X31+8]
	504 Move X8, [X8+2496]
	505 Move S2, W31
	506 Move S5, W31
	507 Move W6, 1
	508 Move X7, [X8]
	509 Move X0, X19
	510 Move V0, V8
	511 Move V1, V9
	512 Move V3, V10
	513 Move V4, V11
	514 Move W1, W23
	515 Move X2, X24
	516 Move X3, X25
	517 Call DefaultEventSystem.SendPositionBasedEvent, X0, X1, X2, X3, X4, X5, X6, X7
	518 Move X22, [X19+16]
	519 Compare X22, 0
	520 JumpIfNotEqual {527}
	521 Move X0, X19
	522 Call DefaultEventSystem.GetDefaultInput, X0
	523 Move X22, X0
	524 Move [X19+16], X0
	525 Compare X0, 0
	526 JumpIfEqual {643}
	527 Move X8, [X22]
	528 Move X1, [X27]
	529 NotImplemented "Instruction LDRH not yet implemented."
	530 Compare X9, 0
	531 JumpIfEqual {538}
	532 Move X10, [X8+176]
	533 Add X10, X10, 8
	534 NotImplemented "Instruction LDUR not yet implemented."
	535 NotImplemented "Instruction CMP not yet implemented."
	536 Subtract X9, X9, 1
	537 Add X10, X10, 16
	538 Move W2, 8
	539 Move X0, X22
	540 Call 0x1C5D788
	541 Move W9, [X10]
	542 Add W9, W9, 8
	543 Add X8, X8, W9
	544 Add X0, X8, 312
	545 Move X8, [X0]
	546 Move X2, [X0+8]
	547 Move X0, X22
	548 Move W1, W21
	549 NotImplemented "Instruction BLR not yet implemented."
	550 Move TEMP, X0
	551 And TEMP, TEMP, 1
	552 Compare TEMP, 1
	553 JumpIfNotEqual {622}
	554 Move X0, [X28]
	555 Move W23, [X19+116]
	556 Move W8, [X0+224]
	557 Compare W8, 0
	558 JumpIfNotEqual {561}
	559 Call 0x1C17DFC
	560 Move X0, [X28]
	561 Move X8, [X0+184]
	562 Move X0, [X29]
	563 Move X24, [X31+24]
	564 Move W22, [X8+8]
	565 Move W8, [X0+224]
	566 Compare W8, 0
	567 JumpIfNotEqual {570}
	568 Call 0x1C17DFC
	569 Move X0, [X29]
	570 Move X8, [X0+184]
	571 Move X25, [X8+48]
	572 Compare X25, 0
	573 JumpIfNotEqual {597}
	574 Move W8, [X0+224]
	575 Compare W8, 0
	576 JumpIfNotEqual {579}
	577 Call 0x1C17DFC
	578 Move X0, [X29]
	579 Move X8, [X0+184]
	580 Move X26, [X8]
	581 Move X8, 0x3D9000
	582 Move X8, [X8+2512]
	583 Move X0, [X8]
	584 Call 0x1C17F10
	585 Move X8, 0x3D9000
	586 Move X8, [X8+2536]
	587 Move X1, X26
	588 Move X3, X31
	589 Move X25, X0
	590 Move X2, [X8]
	591 Call Func`4<Vector3, Vector3, ValueTuple`3<Int32, Int32, Int32Enum>, Object>..ctor, X0, X1, X2
	592 Move X8, [X29]
	593 Move X26, 0x3D9000
	594 Move X8, [X8+184]
	595 Move [X8+48], X25
	596 Move X26, [X26+2544]
	597 Move W3, [X19+104]
	598 Move X4, [X26]
	599 Add X0, X31, 0
	600 Move W1, W21
	601 Move W2, W23
	602 Move [X31+8], W31
	603 Move [X31], X31
	604 Call ValueTuple`3<Int32, Int32, Int32Enum>..ctor, X0, X1, X2, X3
	605 Move X8, 0x3D9000
	606 Move X4, [X31]
	607 Move W5, [X31+8]
	608 Move X8, [X8+2496]
	609 Move S2, W31
	610 Move S5, W31
	611 Move X0, X19
	612 Move X7, [X8]
	613 Move V0, V8
	614 Move V1, V9
	615 Move V3, V10
	616 Move V4, V11
	617 Move W1, W22
	618 Move X2, X24
	619 Move X3, X25
	620 Move W6, W31
	621 Call DefaultEventSystem.SendPositionBasedEvent, X0, X1, X2, X3, X4, X5, X6, X7
	622 Add W21, W21, 1
	623 NotImplemented "Instruction CMP not yet implemented."
	624 Move X20, [X31+144]
	625 Move X19, [X31+152]
	626 Move X22, [X31+128]
	627 Move X21, [X31+136]
	628 Move X24, [X31+112]
	629 Move X23, [X31+120]
	630 Move X26, [X31+96]
	631 Move X25, [X31+104]
	632 Move X28, [X31+80]
	633 Move X27, [X31+88]
	634 Move X29, [X31+64]
	635 Move X30, [X31+72]
	636 Move D9, [X31+48]
	637 Move D8, [X31+56]
	638 Move D11, [X31+32]
	639 Move D10, [X31+40]
	640 Move V12, [X31+16]
	641 Add X31, X31, 160
	642 Return 
	643 Call 0x1C17F20

Method: System.Void SendInputEvents()

Disassembly:
	0x03D9005C LDR W8, [X0 + 0xE0]
	0x03D90060 LDR X22, [X22 + 0x940]
	0x03D90064 LDR X20, [X20 + 0xAC0]
	0x03D90068 LDR X21, [X21 + 0xAB8]
	0x03D9006C CBNZ W8, 0x3D90078
	0x03D90070 BL 0x1C16DFC
	0x03D90074 LDR X0, [X19]
	0x03D90078 LDR X8, [X0 + 0xB8]
	0x03D9007C LDR X0, [X22]
	0x03D90080 LDR X19, [X8]
	0x03D90084 BL 0x1C16F10
	0x03D90088 LDR X2, [X20]
	0x03D9008C MOV X1, X19
	0x03D90090 MOV X3, X31
	0x03D90094 MOV X20, X0
	0x03D90098 BL 0x2D27194
	0x03D9009C LDR X8, [X21]
	0x03D900A0 LDP X22, X21, [X31 + 0x10]
	0x03D900A4 LDR X8, [X8 + 0xB8]
	0x03D900A8 STR X20, [X8]
	0x03D900AC LDP X20, X19, [X31 + 0x20]
	0x03D900B0 LDR X30, [X31], #0x30
	0x03D900B4 RET
	0x03D900B8 STR X30, [X31 - 0x10]!
	0x03D900BC LDR X8, [X0]
	0x03D900C0 CBZ X8, 0x3D900D0
	0x03D900C4 STP X31, X31, [X8 + 0x58]
	0x03D900C8 LDR X30, [X31], #0x10
	0x03D900CC RET
	0x03D900D0 BL 0x1C16F20
	0x03D900D4 MOV X0, X1
	0x03D900D8 MOV X1, X31
	0x03D900DC B 0x3C84928
	0x03D900E0 MOV X0, X1
	0x03D900E4 MOV X1, X31
	0x03D900E8 B 0x3C847C0
	0x03D900EC MOV X0, X31
	0x03D900F0 B 0x3C84C84
	0x03D900F4 SUB X31, X31, 0x40
	0x03D900F8 STP X30, X19, [X31 + 0x30]
	0x03D900FC MOV X19, X8
	0x03D90100 ADD X8, X31, 0x8
	0x03D90104 MOV X0, X31
	0x03D90108 BL 0x3C84BE4
	0x03D9010C LDR X8, [X31 + 0x28]
	0x03D90110 LDUR V0, [X31 + 0x18]
	0x03D90114 LDUR V1, [X31 + 0x8]
	0x03D90118 STR X8, [X19 + 0x20]
	0x03D9011C STP V1, V0, [X19]
	0x03D90120 LDP X30, X19, [X31 + 0x30]
	0x03D90124 ADD X31, X31, 0x40
	0x03D90128 RET
	0x03D9012C MOV X0, X31
	0x03D90130 B 0x3C85040
	0x03D90134 SUB X31, X31, 0x60
	0x03D90138 STP X30, X19, [X31 + 0x50]
	0x03D9013C MOV W0, W1
	0x03D90140 MOV X19, X8
	0x03D90144 ADD X8, X31, 0x8
	0x03D90148 MOV X1, X31
	0x03D9014C BL 0x3C84B30
	0x03D90150 ADD X1, X31, 0x8
	0x03D90154 MOVZ W2, 0x44
	0x03D90158 MOV X0, X19
	0x03D9015C BL 0x3EB1AC0
	0x03D90160 LDP X30, X19, [X31 + 0x50]
	0x03D90164 ADD X31, X31, 0x60
	0x03D90168 RET
	0x03D9016C MOV X0, X31
	0x03D90170 B 0x3C85018
	0x03D90174 MOV W0, W1
	0x03D90178 MOV X1, X31
	0x03D9017C B 0x3C84A90
	0x03D90180 MOV W0, W1
	0x03D90184 MOV X1, X31
	0x03D90188 B 0x3C84ACC
	0x03D9018C MOV X0, X31
	0x03D90190 B 0x3C84D88
	0x03D90194 MOVZ W0, 0x3
	0x03D90198 RET
	0x03D9019C MOV X0, X31
	0x03D901A0 B 0x3C84D60
	0x03D901A4 MOV X0, X31
	0x03D901A8 B 0x3C3C764
	0x03D901AC STR X30, [X31 - 0x10]!
	0x03D901B0 MOV X0, X31
	0x03D901B4 BL 0x3C63668
	0x03D901B8 ADRP X8, 0xFFFFFFFFFCD5A000
	0x03D901BC LDR V0, [X8 + 0x410]
	0x03D901C0 SCVTF S1, W0
	0x03D901C4 FMUL S0, S1, S0
	0x03D901C8 LDR X30, [X31], #0x10
	0x03D901CC RET
	0x03D901D0 MOV W0, W31
	0x03D901D4 RET
	0x03D901D8 FMOV S0, W31
	0x03D901DC RET
	0x03D901E0 MOV W0, W31
	0x03D901E4 RET
	0x03D901E8 MOVI V0.2D, 0x0
	0x03D901EC STR W31, [X8 + 0x40]
	0x03D901F0 STP V0, V0, [X8 + 0x20]
	0x03D901F4 STP V0, V0, [X8]
	0x03D901F8 RET
	0x03D901FC RET
	0x03D90200 MOVI V0.2D, 0x0
	0x03D90204 STR X31, [X8 + 0x20]
	0x03D90208 STP V0, V0, [X8]
	0x03D9020C RET
	0x03D90210 MOV W0, W31
	0x03D90214 RET
	0x03D90218 MOV W0, W31
	0x03D9021C RET
	0x03D90220 MOV W0, W31
	0x03D90224 RET
	0x03D90228 FMOV S0, W31
	0x03D9022C FMOV S1, W31
	0x03D90230 FMOV S2, W31
	0x03D90234 RET
	0x03D90238 MOV W0, W31
	0x03D9023C RET
	0x03D90240 MOV W0, W31
	0x03D90244 RET
	0x03D90248 FMOV S0, W31
	0x03D9024C RET
	0x03D90250 MOVZ W8, 0x7F800000
	0x03D90254 FMOV S0, W8
	0x03D90258 RET
	0x03D9025C STR X30, [X31 - 0x20]!
	0x03D90260 STP X20, X19, [X31 + 0x10]
	0x03D90264 ADRP X19, 0x657000
	0x03D90268 ADRP X20, 0x3D7000
	0x03D9026C LDRB W8, [X19 + 0xE4B]
	0x03D90270 LDR X20, [X20 + 0x998]
	0x03D90274 TBNZ X8, 0x0, 0x3D9028C
	0x03D90278 ADRP X0, 0x3D7000
	0x03D9027C LDR X0, [X0 + 0x998]
	0x03D90280 BL 0x1C16CF4
	0x03D90284 MOVZ W8, 0x1
	0x03D90288 STRB W8, [X19 + 0xE4B]
	0x03D9028C LDR X0, [X20]
	0x03D90290 BL 0x1C16F10
	0x03D90294 MOV X1, X31
	0x03D90298 MOV X19, X0
	0x03D9029C BL 0x33BDD8C
	0x03D902A0 LDR X8, [X20]
	0x03D902A4 LDR X8, [X8 + 0xB8]
	0x03D902A8 STR X19, [X8]
	0x03D902AC LDP X20, X19, [X31 + 0x10]
	0x03D902B0 LDR X30, [X31], #0x20
	0x03D902B4 RET
	0x03D902B8 MOV X1, X31
	0x03D902BC B 0x33BDD8C
	0x03D902C0 STR X30, [X31 - 0x20]!
	0x03D902C4 STP X20, X19, [X31 + 0x10]
	0x03D902C8 ADRP X20, 0x657000
	0x03D902CC LDRB W8, [X20 + 0xE4C]
	0x03D902D0 MOV X19, X1
	0x03D902D4 TBNZ X8, 0x0, 0x3D902EC
	0x03D902D8 ADRP X0, 0x38B000
	0x03D902DC LDR X0, [X0 + 0x930]
	0x03D902E0 BL 0x1C16CF4
	0x03D902E4 MOVZ W8, 0x1
	0x03D902E8 STRB W8, [X20 + 0xE4C]
	0x03D902EC CBZ X19, 0x3D90320
	0x03D902F0 ADRP X8, 0x38B000
	0x03D902F4 LDR X8, [X8 + 0x930]
	0x03D902F8 LDR X19, [X19 + 0x48]
	0x03D902FC LDR X0, [X8]
	0x03D90300 LDR W8, [X0 + 0xE0]
	0x03D90304 CBNZ W8, 0x3D9030C
	0x03D90308 BL 0x1C16DFC
	0x03D9030C MOV X0, X19
	0x03D90310 LDP X20, X19, [X31 + 0x10]
	0x03D90314 MOV X1, X31
	0x03D90318 LDR X30, [X31], #0x20
	0x03D9031C B 0x3E14C44
	0x03D90320 BL 0x1C16F20
	0x03D90324 STR D10, [X31 - 0x40]!
	0x03D90328 STP D9, D8, [X31 + 0x8]
	0x03D9032C STR X30, [X31 + 0x18]
	0x03D90330 STP X22, X21, [X31 + 0x20]
	0x03D90334 STP X20, X19, [X31 + 0x30]
	0x03D90338 ADRP X22, 0x657000
	0x03D9033C ADRP X21, 0x3D7000
	0x03D90340 LDRB W8, [X22 + 0xE4D]
	0x03D90344 LDR X21, [X21 + 0xAC8]
	0x03D90348 MOV X20, X2
	0x03D9034C MOV X19, X1
	0x03D90350 MOV V8.16B, V2.16B
	0x03D90354 MOV V9.16B, V1.16B
	0x03D90358 MOV V10.16B, V0.16B
	0x03D9035C TBNZ X8, 0x0, 0x3D90374
	0x03D90360 ADRP X0, 0x3D7000
	0x03D90364 LDR X0, [X0 + 0xAC8]
	0x03D90368 BL 0x1C16CF4
	0x03D9036C MOVZ W8, 0x1
	0x03D90370 STRB W8, [X22 + 0xE4D]
	0x03D90374 LDR X0, [X21]
	0x03D90378 LDR W8, [X0 + 0xE0]
	0x03D9037C CBNZ W8, 0x3D90384
	0x03D90380 BL 0x1C16DFC
	0x03D90384 UBFM X8, X19, 0x20, 0x3F
	0x03D90388 FMOV S1, W20
	0x03D9038C MOV V4.16B, V9.16B
	0x03D90390 MOV V5.16B, V8.16B
	0x03D90394 MOV W0, W19
	0x03D90398 LDP X20, X19, [X31 + 0x30]
	0x03D9039C LDP X22, X21, [X31 + 0x20]
	0x03D903A0 LDR X30, [X31 + 0x18]
	0x03D903A4 LDP D9, D8, [X31 + 0x8]
	0x03D903A8 FMOV S2, W31
	0x03D903AC FMOV S0, W8
	0x03D903B0 MOV V3.16B, V10.16B
	0x03D903B4 MOV X1, X31
	0x03D903B8 LDR V10, [X31], #0x40
	0x03D903BC B 0x3DA66E8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x658000
	008 Move W8, [X20+3649]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {37}
	014 Move X0, 0x3D8000
	015 Move X0, [X0+2552]
	016 Call 0x1C17CF4
	017 Move X0, 0x3D8000
	018 Move X0, [X0+2576]
	019 Call 0x1C17CF4
	020 Move X0, 0x3D8000
	021 Move X0, [X0+2408]
	022 Call 0x1C17CF4
	023 Move X0, 0x3D8000
	024 Move X0, [X0+2632]
	025 Call 0x1C17CF4
	026 Move X0, 0x3D8000
	027 Move X0, [X0+2640]
	028 Call 0x1C17CF4
	029 Move X0, 0x3D8000
	030 Move X0, [X0+2648]
	031 Call 0x1C17CF4
	032 Move X0, 0x3D8000
	033 Move X0, [X0+2456]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+3649], W8
	037 Move X22, 0x3D8000
	038 Move X22, [X22+2456]
	039 Move X0, X19
	040 Call DefaultEventSystem.ShouldSendMoveFromInput, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {85}
	045 Move X0, [X22]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Move X8, [X0+184]
	052 Move X20, [X8+56]
	053 Compare X20, 0
	054 JumpIfNotEqual {76}
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X22]
	060 Move X9, 0x3D8000
	061 Move X8, [X0+184]
	062 Move X9, [X9+2576]
	063 Move X21, [X8]
	064 Move X0, [X9]
	065 Call 0x1C17F10
	066 Move X8, 0x3D8000
	067 Move X8, [X8+2632]
	068 Move X1, X21
	069 Move X3, X31
	070 Move X20, X0
	071 Move X2, [X8]
	072 Call Func`2<Object, Object>..ctor, X0, X1, X2
	073 Move X8, [X22]
	074 Move X8, [X8+184]
	075 Move [X8+56], X20
	076 Compare X19, 0
	077 JumpIfEqual {253}
	078 Move X8, 0x3D8000
	079 Move X8, [X8+2552]
	080 Move X0, X19
	081 Move X1, X20
	082 Move X2, X19
	083 Move X3, [X8]
	084 Call DefaultEventSystem.SendFocusBasedEvent, X0, X1, X2
	085 Move X20, [X19+16]
	086 Compare X20, 0
	087 JumpIfNotEqual {94}
	088 Move X0, X19
	089 Call DefaultEventSystem.GetDefaultInput, X0
	090 Move X20, X0
	091 Move [X19+16], X0
	092 Compare X0, 0
	093 JumpIfEqual {253}
	094 Move X23, 0x3D8000
	095 Move X8, [X20]
	096 Move X23, [X23+2408]
	097 Move X21, [X19+40]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Move X1, [X23]
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X20
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X2, [X0+8]
	116 Move X0, X20
	117 Move X1, X21
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {163}
	123 Move X0, [X22]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {129}
	127 Call 0x1C17DFC
	128 Move X0, [X22]
	129 Move X8, [X0+184]
	130 Move X20, [X8+64]
	131 Compare X20, 0
	132 JumpIfNotEqual {154}
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {138}
	136 Call 0x1C17DFC
	137 Move X0, [X22]
	138 Move X9, 0x3D8000
	139 Move X8, [X0+184]
	140 Move X9, [X9+2576]
	141 Move X21, [X8]
	142 Move X0, [X9]
	143 Call 0x1C17F10
	144 Move X8, 0x3D8000
	145 Move X8, [X8+2640]
	146 Move X1, X21
	147 Move X3, X31
	148 Move X20, X0
	149 Move X2, [X8]
	150 Call Func`2<Object, Object>..ctor, X0, X1, X2
	151 Move X8, [X22]
	152 Move X8, [X8+184]
	153 Move [X8+64], X20
	154 Compare X19, 0
	155 JumpIfEqual {253}
	156 Move X8, 0x3D8000
	157 Move X8, [X8+2552]
	158 Move X0, X19
	159 Move X1, X20
	160 Move X2, X19
	161 Move X3, [X8]
	162 Call DefaultEventSystem.SendFocusBasedEvent, X0, X1, X2
	163 Move X20, [X19+16]
	164 Compare X20, 0
	165 JumpIfNotEqual {172}
	166 Move X0, X19
	167 Call DefaultEventSystem.GetDefaultInput, X0
	168 Move X20, X0
	169 Move [X19+16], X0
	170 Compare X0, 0
	171 JumpIfEqual {253}
	172 Move X8, [X20]
	173 Move X21, [X19+48]
	174 Move X1, [X23]
	175 NotImplemented "Instruction LDRH not yet implemented."
	176 Compare X9, 0
	177 JumpIfEqual {184}
	178 Move X10, [X8+176]
	179 Add X10, X10, 8
	180 NotImplemented "Instruction LDUR not yet implemented."
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Subtract X9, X9, 1
	183 Add X10, X10, 16
	184 Move X0, X20
	185 Move W2, W31
	186 Call 0x1C5D788
	187 NotImplemented "Instruction LDRSW not yet implemented."
	188 Add X8, X8, X9
	189 Add X0, X8, 312
	190 Move X8, [X0]
	191 Move X2, [X0+8]
	192 Move X0, X20
	193 Move X1, X21
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Move TEMP, X0
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfNotEqual {246}
	199 Move X0, [X22]
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {205}
	203 Call 0x1C17DFC
	204 Move X0, [X22]
	205 Move X8, [X0+184]
	206 Move X20, [X8+72]
	207 Compare X20, 0
	208 JumpIfNotEqual {230}
	209 Move W8, [X0+224]
	210 Compare W8, 0
	211 JumpIfNotEqual {214}
	212 Call 0x1C17DFC
	213 Move X0, [X22]
	214 Move X9, 0x3D8000
	215 Move X8, [X0+184]
	216 Move X9, [X9+2576]
	217 Move X21, [X8]
	218 Move X0, [X9]
	219 Call 0x1C17F10
	220 Move X8, 0x3D8000
	221 Move X8, [X8+2648]
	222 Move X1, X21
	223 Move X3, X31
	224 Move X20, X0
	225 Move X2, [X8]
	226 Call Func`2<Object, Object>..ctor, X0, X1, X2
	227 Move X8, [X22]
	228 Move X8, [X8+184]
	229 Move [X8+72], X20
	230 Compare X19, 0
	231 JumpIfEqual {253}
	232 Move X8, 0x3D8000
	233 Move X8, [X8+2552]
	234 Move X0, X19
	235 Move X1, X20
	236 Move X2, X19
	237 Move X3, [X8]
	238 Move X20, [X31+32]
	239 Move X19, [X31+40]
	240 Move X22, [X31+16]
	241 Move X21, [X31+24]
	242 Move X30, [X31+48]
	243 Move X23, [X31+56]
	244 Call DefaultEventSystem.SendFocusBasedEvent, X0, X1, X2
	245 Return 
	246 Move X20, [X31+32]
	247 Move X19, [X31+40]
	248 Move X22, [X31+16]
	249 Move X21, [X31+24]
	250 Move X30, [X31+48]
	251 Move X23, [X31+56]
	252 Return 
	253 Call 0x1C17F20

Method: System.Void OnFocusEvent(UnityEngine.UIElements.RuntimePanel panel, UnityEngine.UIElements.FocusEvent evt)

Disassembly:
	0x03D90964 CBZ X9, 0x3D90988

ISIL:
	001 Call DefaultEventSystem.set_focusedPanel, X0, X1
	002 Return 

Method: System.Void SendFocusBasedEvent(System.Func`2<TArg, UnityEngine.UIElements.EventBase> evtFactory, TArg arg)

Disassembly:
	0x021AA2BC B 0x21AA2C4
	0x021AA2C0 MOV X23, X0
	0x021AA2C4 CBZ X25, 0x21AA328
	0x021AA2C8 ADRP X10, 0x1F49000
	0x021AA2CC LDR X8, [X25]
	0x021AA2D0 LDR X10, [X10 + 0xE00]
	0x021AA2D4 LDRH W9, [X8 + 0x12E]
	0x021AA2D8 LDR X1, [X10]
	0x021AA2DC CBZ X9, 0x21AA300
	0x021AA2E0 LDR X10, [X8 + 0xB0]
	0x021AA2E4 ADD X10, X10, 0x8
	0x021AA2E8 LDUR X11, [X10 - 0x8]
	0x021AA2EC CMP X11, X1
	0x021AA2F0 B.EQ 0x21AA310
	0x021AA2F4 SUBS X9, X9, 0x1
	0x021AA2F8 ADD X10, X10, 0x10
	0x021AA2FC B.NE 0x21AA2E8
	0x021AA300 MOV X0, X25
	0x021AA304 MOV W2, W31
	0x021AA308 BL 0x1C5C788
	0x021AA30C B 0x21AA31C
	0x021AA310 LDRSW X9, [X10]
	0x021AA314 ADD X8, X8, X9, 0x4, LSL
	0x021AA318 ADD X0, X8, 0x138
	0x021AA31C LDP X8, X1, [X0]
	0x021AA320 MOV X0, X25
	0x021AA324 BLR X8
	0x021AA328 CBZ X26, 0x21AA268
	0x021AA32C MOV X0, X26
	0x021AA330 BL 0x1C16F18
	0x021AA334 BL 0x1990590
	0x021AA338 SUB X31, X31, 0xB0
	0x021AA33C STP D11, D10, [X31 + 0x30]
	0x021AA340 STP D9, D8, [X31 + 0x40]
	0x021AA344 STP X29, X30, [X31 + 0x50]
	0x021AA348 STP X28, X27, [X31 + 0x60]
	0x021AA34C STP X26, X25, [X31 + 0x70]
	0x021AA350 STP X24, X23, [X31 + 0x80]
	0x021AA354 STP X22, X21, [X31 + 0x90]
	0x021AA358 STP X20, X19, [X31 + 0xA0]
	0x021AA35C LDR X8, [X7 + 0x38]
	0x021AA360 MOV X29, X4
	0x021AA364 MOV X23, X3
	0x021AA368 MOV X26, X2
	0x021AA36C MOV W19, W1
	0x021AA370 MOV V10.16B, V4.16B
	0x021AA374 MOV V11.16B, V3.16B
	0x021AA378 MOV V8.16B, V1.16B
	0x021AA37C MOV V9.16B, V0.16B
	0x021AA380 MOV X20, X0
	0x021AA384 STR W6, [X31 + 0xC]
	0x021AA388 STR X5, [X31 + 0x18]
	0x021AA38C CBNZ X8, 0x21AA464
	0x021AA390 ADRP X0, 0x1F71000
	0x021AA394 LDR X0, [X0 + 0x918]
	0x021AA398 MOV X25, X7
	0x021AA39C BL 0x1C16CF4
	0x021AA3A0 ADRP X0, 0x1F71000
	0x021AA3A4 LDR X0, [X0 + 0x938]
	0x021AA3A8 BL 0x1C16CF4
	0x021AA3AC ADRP X0, 0x1F71000
	0x021AA3B0 LDR X0, [X0 + 0x940]
	0x021AA3B4 BL 0x1C16CF4
	0x021AA3B8 ADRP X0, 0x1F71000
	0x021AA3BC LDR X0, [X0 + 0x948]
	0x021AA3C0 BL 0x1C16CF4
	0x021AA3C4 ADRP X0, 0x1F71000
	0x021AA3C8 LDR X0, [X0 + 0x950]
	0x021AA3CC BL 0x1C16CF4
	0x021AA3D0 ADRP X0, 0x1F49000
	0x021AA3D4 LDR X0, [X0 + 0xE00]
	0x021AA3D8 BL 0x1C16CF4
	0x021AA3DC ADRP X0, 0x1F71000
	0x021AA3E0 LDR X0, [X0 + 0x920]
	0x021AA3E4 BL 0x1C16CF4
	0x021AA3E8 ADRP X0, 0x1F71000
	0x021AA3EC LDR X0, [X0 + 0x928]
	0x021AA3F0 BL 0x1C16CF4
	0x021AA3F4 ADRP X0, 0x1F50000
	0x021AA3F8 LDR X0, [X0 + 0x5F0]
	0x021AA3FC BL 0x1C16CF4
	0x021AA400 ADRP X0, 0x1F4C000
	0x021AA404 LDR X0, [X0 + 0xEF8]
	0x021AA408 BL 0x1C16CF4
	0x021AA40C ADRP X0, 0x1F71000
	0x021AA410 LDR X0, [X0 + 0x958]
	0x021AA414 BL 0x1C16CF4
	0x021AA418 ADRP X0, 0x1F71000
	0x021AA41C LDR X0, [X0 + 0x960]
	0x021AA420 BL 0x1C16CF4
	0x021AA424 ADRP X0, 0x1F71000
	0x021AA428 LDR X0, [X0 + 0x968]
	0x021AA42C BL 0x1C16CF4
	0x021AA430 ADRP X0, 0x1F71000
	0x021AA434 LDR X0, [X0 + 0x970]
	0x021AA438 BL 0x1C16CF4
	0x021AA43C ADRP X0, 0x1F71000
	0x021AA440 LDR X0, [X0 + 0x930]
	0x021AA444 BL 0x1C16CF4
	0x021AA448 ADRP X0, 0x1F71000
	0x021AA44C LDR X0, [X0 + 0x898]
	0x021AA450 BL 0x1C16CF4
	0x021AA454 LDR X8, [X25 + 0x38]
	0x021AA458 CBNZ X8, 0x21AA464
	0x021AA45C MOV X0, X25
	0x021AA460 BL 0x1C5C6E0
	0x021AA464 STP X31, X31, [X31 + 0x20]
	0x021AA468 LDR X1, [X20 + 0x50]
	0x021AA46C CBZ X1, 0x21AA47C
	0x021AA470 MOV X0, X20
	0x021AA474 MOV X2, X31
	0x021AA478 BL 0x3D8F968
	0x021AA47C STR X20, [X31 + 0x10]
	0x021AA480 ADRP X22, 0x1F71000
	0x021AA484 LDR X22, [X22 + 0x958]
	0x021AA488 LDR X0, [X22]
	0x021AA48C LDR W8, [X0 + 0xE0]
	0x021AA490 CBNZ W8, 0x21AA498
	0x021AA494 BL 0x1C16DFC
	0x021AA498 MOV W0, W19
	0x021AA49C MOV X1, X31
	0x021AA4A0 BL 0x3DAA030
	0x021AA4A4 ADRP X21, 0x1F71000
	0x021AA4A8 LDR X21, [X21 + 0x970]
	0x021AA4AC MOV X25, X0
	0x021AA4B0 LDR X8, [X21]
	0x021AA4B4 LDR W9, [X8 + 0xE0]
	0x021AA4B8 CBNZ W9, 0x21AA4C8
	0x021AA4BC MOV X0, X8
	0x021AA4C0 BL 0x1C16DFC
	0x021AA4C4 LDR X8, [X21]
	0x021AA4C8 LDR X8, [X8 + 0xB8]
	0x021AA4CC LDR X8, [X8]
	0x021AA4D0 CBZ X8, 0x21AA9A0
	0x021AA4D4 LDR X0, [X8 + 0x28]
	0x021AA4D8 CBZ X0, 0x21AA9A0
	0x021AA4DC MOV W1, W19
	0x021AA4E0 MOV X2, X31
	0x021AA4E4 BL 0x3DB90F4
	0x021AA4E8 CBZ X0, 0x21AA52C
	0x021AA4EC ADRP X8, 0x1F71000
	0x021AA4F0 LDR X8, [X8 + 0x898]
	0x021AA4F4 LDR X9, [X0]
	0x021AA4F8 LDR X8, [X8]
	0x021AA4FC LDRB W11, [X9 + 0x130]
	0x021AA500 LDRB W10, [X8 + 0x130]
	0x021AA504 CMP W11, W10
	0x021AA508 B.CC 0x21AA52C
	0x021AA50C LDR X9, [X9 + 0xC8]
	0x021AA510 ADD X9, X9, X10, 0x3, LSL
	0x021AA514 LDUR X9, [X9 - 0x8]
	0x021AA518 CMP X9, X8
	0x021AA51C B.NE 0x21AA52C
	0x021AA520 MOV X1, X31
	0x021AA524 BL 0x3DEC0CC
	0x021AA528 MOV X25, X0
	0x021AA52C ADRP X21, 0x222F000
	0x021AA530 LDRB W8, [X21 + 0x78F]
	0x021AA534 CBNZ W8, 0x21AA54C
	0x021AA538 ADRP X0, 0x1F51000
	0x021AA53C LDR X0, [X0 + 0xF08]
	0x021AA540 BL 0x1C16CF4
	0x021AA544 MOVZ W8, 0x1
	0x021AA548 STRB W8, [X21 + 0x78F]
	0x021AA54C ADRP X8, 0x1F51000
	0x021AA550 LDR X8, [X8 + 0xF08]
	0x021AA554 ADRP X24, 0x1F71000
	0x021AA558 LDR X8, [X8]
	0x021AA55C LDR X8, [X8 + 0xB8]
	0x021AA560 LDR V0, [X8]
	0x021AA564 STR D0, [X31 + 0x28]
	0x021AA568 LDR V0, [X8]
	0x021AA56C STR D0, [X31 + 0x20]
	0x021AA570 LDR X24, [X24 + 0x918]
	0x021AA574 CBZ X25, 0x21AA5A4
	0x021AA578 LDR X9, [X25]
	0x021AA57C LDR X8, [X24]
	0x021AA580 LDRB W11, [X9 + 0x130]
	0x021AA584 LDRB W10, [X8 + 0x130]
	0x021AA588 CMP W11, W10
	0x021AA58C B.CC 0x21AA5A4
	0x021AA590 LDR X9, [X9 + 0xC8]
	0x021AA594 ADD X9, X9, X10, 0x3, LSL
	0x021AA598 LDUR X9, [X9 - 0x8]
	0x021AA59C CMP X9, X8
	0x021AA5A0 B.EQ 0x21AA6AC
	0x021AA5A4 ADRP X8, 0x1F71000
	0x021AA5A8 LDR X8, [X8 + 0x930]
	0x021AA5AC LDR X0, [X8]
	0x021AA5B0 LDR W8, [X0 + 0xE0]
	0x021AA5B4 CBNZ W8, 0x21AA5BC
	0x021AA5B8 BL 0x1C16DFC
	0x021AA5BC MOV X0, X31
	0x021AA5C0 BL 0x3E15A6C
	0x021AA5C4 CBZ X0, 0x21AA9A0
	0x021AA5C8 LDR W8, [X0 + 0x18]
	0x021AA5CC MOV X27, X0
	0x021AA5D0 SUBS W28, W8, 0x1
	0x021AA5D4 B.MI 0x21AA6A4
	0x021AA5D8 ADRP X21, 0x1F71000
	0x021AA5DC LDR X21, [X21 + 0x928]
	0x021AA5E0 MOV X20, X29
	0x021AA5E4 UBFM X29, X26, 0x20, 0x3F
	0x021AA5E8 LDR X2, [X21]
	0x021AA5EC MOV X0, X27
	0x021AA5F0 MOV W1, W28
	0x021AA5F4 BL 0x301BCCC
	0x021AA5F8 CBZ X0, 0x21AA62C
	0x021AA5FC LDR X9, [X0]
	0x021AA600 LDR X8, [X24]
	0x021AA604 MOV X25, X0
	0x021AA608 LDRB W11, [X9 + 0x130]
	0x021AA60C LDRB W10, [X8 + 0x130]
	0x021AA610 CMP W11, W10
	0x021AA614 B.CC 0x21AA62C
	0x021AA618 LDR X9, [X9 + 0xC8]
	0x021AA61C ADD X9, X9, X10, 0x3, LSL
	0x021AA620 LDUR X9, [X9 - 0x8]
	0x021AA624 CMP X9, X8
	0x021AA628 B.EQ 0x21AA638
	0x021AA62C SUBS W28, W28, 0x1
	0x021AA630 B.PL 0x21AA5E8
	0x021AA634 B 0x21AA698
	0x021AA638 ANDS W31, W26, 0xFF
	0x021AA63C B.EQ 0x21AA64C
	0x021AA640 LDR W8, [X25 + 0x1D8]
	0x021AA644 CMP W8, W29
	0x021AA648 B.NE 0x21AA62C
	0x021AA64C ADD X1, X31, 0x28
	0x021AA650 ADD X2, X31, 0x20
	0x021AA654 MOV X0, X25
	0x021AA658 MOV V0.16B, V9.16B
	0x021AA65C MOV V1.16B, V8.16B
	0x021AA660 MOV V2.16B, V11.16B
	0x021AA664 MOV V3.16B, V10.16B
	0x021AA668 MOV W3, W31
	0x021AA66C MOV X4, X31
	0x021AA670 BL 0x3DBEF68
	0x021AA674 TBZ X0, 0x0, 0x21AA62C
	0x021AA678 LDR X8, [X25]
	0x021AA67C LDP S0, S1, [X31 + 0x28]
	0x021AA680 MOV X0, X25
	0x021AA684 LDR X9, [X8 + 0x418]
	0x021AA688 LDR X1, [X8 + 0x420]
	0x021AA68C BLR X9
	0x021AA690 CBZ X0, 0x21AA62C
	0x021AA694 B 0x21AA69C
	0x021AA698 MOV X25, X31
	0x021AA69C MOV X29, X20
	0x021AA6A0 B 0x21AA6D4
	0x021AA6A4 MOV X25, X31
	0x021AA6A8 B 0x21AA6D4
	0x021AA6AC ADD X1, X31, 0x28
	0x021AA6B0 ADD X2, X31, 0x20
	0x021AA6B4 MOV X0, X25
	0x021AA6B8 MOV V0.16B, V9.16B
	0x021AA6BC MOV V1.16B, V8.16B
	0x021AA6C0 MOV V2.16B, V11.16B
	0x021AA6C4 MOV V3.16B, V10.16B
	0x021AA6C8 MOV W3, W31
	0x021AA6CC MOV X4, X31
	0x021AA6D0 BL 0x3DBEF68
	0x021AA6D4 LDR X0, [X22]
	0x021AA6D8 LDR W8, [X0 + 0xE0]
	0x021AA6DC CBNZ W8, 0x21AA6E4
	0x021AA6E0 BL 0x1C16DFC
	0x021AA6E4 MOV W0, W19
	0x021AA6E8 MOV W1, W31
	0x021AA6EC MOV X2, X31
	0x021AA6F0 BL 0x3DA9D50
	0x021AA6F4 CBZ X0, 0x21AA710
	0x021AA6F8 LDR X9, [X0]
	0x021AA6FC LDR X8, [X24]
	0x021AA700 LDRB W11, [X9 + 0x130]
	0x021AA704 LDRB W10, [X8 + 0x130]
	0x021AA708 CMP W11, W10
	0x021AA70C B.CS 0x21AA718
	0x021AA710 MOV X26, X31
	0x021AA714 B 0x21AA72C
	0x021AA718 LDR X9, [X9 + 0xC8]
	0x021AA71C ADD X9, X9, X10, 0x3, LSL
	0x021AA720 LDUR X9, [X9 - 0x8]
	0x021AA724 CMP X9, X8
	0x021AA728 CSEL X26, X0, X31, EQ
	0x021AA72C CMP X26, X25
	0x021AA730 B.EQ 0x21AA778
	0x021AA734 CBZ X26, 0x21AA75C
	0x021AA738 MOV X0, X26
	0x021AA73C MOV V0.16B, V9.16B
	0x021AA740 MOV V1.16B, V8.16B
	0x021AA744 MOV X1, X31
	0x021AA748 BL 0x3DBEF30
	0x021AA74C MOV X0, X26
	0x021AA750 MOV W1, W19
	0x021AA754 MOV X2, X31
	0x021AA758 BL 0x3DBF08C
	0x021AA75C CBZ X25, 0x21AA868
	0x021AA760 LDP S0, S1, [X31 + 0x28]
	0x021AA764 MOV X0, X25
	0x021AA768 MOV W1, W19
	0x021AA76C MOV X2, X31
	0x021AA770 BL 0x3DBF144
	0x021AA774 B 0x21AA77C
	0x021AA778 CBZ X25, 0x21AA868
	0x021AA77C CBZ X23, 0x21AA9A0
	0x021AA780 LDR X9, [X31 + 0x18]
	0x021AA784 LDP S3, S4, [X31 + 0x20]
	0x021AA788 LDP S0, S1, [X31 + 0x28]
	0x021AA78C LDR X8, [X23 + 0x18]
	0x021AA790 LDR X0, [X23 + 0x40]
	0x021AA794 LDR X3, [X23 + 0x28]
	0x021AA798 AND X2, X9, 0x0
	0x021AA79C FMOV S2, W31
	0x021AA7A0 FMOV S5, W31
	0x021AA7A4 MOV X1, X29
	0x021AA7A8 BLR X8
	0x021AA7AC LDR X8, [X25]
	0x021AA7B0 MOV X21, X0
	0x021AA7B4 LDR X1, [X8 + 0x3A0]
	0x021AA7B8 LDR X9, [X8 + 0x398]
	0x021AA7BC MOV X0, X25
	0x021AA7C0 BLR X9
	0x021AA7C4 CBZ X0, 0x21AA9AC
	0x021AA7C8 LDR X8, [X0]
	0x021AA7CC LDP X9, X2, [X8 + 0x198]
	0x021AA7D0 MOV X1, X21
	0x021AA7D4 BLR X9
	0x021AA7D8 CBZ X21, 0x21AA9B0
	0x021AA7DC MOV X0, X21
	0x021AA7E0 MOV X1, X31
	0x021AA7E4 BL 0x3DA0490
	0x021AA7E8 TBZ X0, 0x0, 0x21AA7FC
	0x021AA7EC LDR X0, [X31 + 0x10]
	0x021AA7F0 MOV X1, X25

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X8, [X4+56]
	014 Move X19, X3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Compare X8, 0
	019 JumpIfNotEqual {41}
	020 Move X0, 0x1F72000
	021 Move X0, [X0+2328]
	022 Move X23, X4
	023 Call 0x1C17CF4
	024 Move X0, 0x1F4A000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0x1F72000
	028 Move X0, [X0+2336]
	029 Call 0x1C17CF4
	030 Move X0, 0x1F72000
	031 Move X0, [X0+2344]
	032 Call 0x1C17CF4
	033 Move X0, 0x1F72000
	034 Move X0, [X0+2352]
	035 Call 0x1C17CF4
	036 Move X8, [X23+56]
	037 Compare X8, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X23
	040 Call 0x1C5D6E0
	041 Move X8, [X22+88]
	042 Compare X8, 0
	043 JumpIfEqual {116}
	044 Compare X21, 0
	045 JumpIfEqual {261}
	046 Move X8, [X21+24]
	047 Move X0, [X21+64]
	048 Move X3, [X21+40]
	049 Move X1, X20
	050 Move X2, X19
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X1, [X22+96]
	053 Move X23, X0
	054 Compare X1, 0
	055 JumpIfNotEqual {64}
	056 Move X0, [X22+88]
	057 Compare X0, 0
	058 JumpIfEqual {269}
	059 Move X8, [X0]
	060 Move X1, [X8+928]
	061 Move X9, [X8+920]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X1, X0
	064 Compare X23, 0
	065 JumpIfEqual {266}
	066 Move X0, X23
	067 Move X2, X31
	068 Call EventBase.set_target, X0, X1
	069 Move X0, [X22+88]
	070 Compare X0, 0
	071 JumpIfEqual {267}
	072 Move X8, [X0]
	073 Move X1, [X8+928]
	074 Move X9, [X8+920]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare X0, 0
	077 JumpIfEqual {268}
	078 Move X8, [X0]
	079 Move X9, [X8+408]
	080 Move X2, [X8+416]
	081 Move X1, X23
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X1, [X22+88]
	084 Move X0, X22
	085 Move X2, X31
	086 Call DefaultEventSystem.UpdateFocusedPanel, X0, X1
	087 Move W25, W31
	088 Move X24, X31
	089 Move X10, 0x1F4A000
	090 Move X8, [X23]
	091 Move X10, [X10+3584]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Move X1, [X10]
	094 Compare X9, 0
	095 JumpIfEqual {102}
	096 Move X10, [X8+176]
	097 Add X10, X10, 8
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Subtract X9, X9, 1
	101 Add X10, X10, 16
	102 Move X0, X23
	103 Move W2, W31
	104 Call 0x1C5D788
	105 NotImplemented "Instruction LDRSW not yet implemented."
	106 Add X8, X8, X9
	107 Add X0, X8, 312
	108 Move X8, [X0]
	109 Move X1, [X0+8]
	110 Move X0, X23
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Compare X24, 0
	113 JumpIfNotEqual {264}
	114 Compare W25, 0
	115 JumpIfEqual {248}
	116 Move X8, 0x1F72000
	117 Move X8, [X8+2352]
	118 Move X0, [X8]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X0, X31
	124 Call UIElementsRuntimeUtility.GetSortedPlayerPanels
	125 Compare X0, 0
	126 JumpIfEqual {261}
	127 Move W8, [X0+24]
	128 Move X23, X0
	129 Subtract W24, W8, 1
	130 Move X29, 0x1F72000
	131 Move X27, 0x1F72000
	132 Move X29, [X29+2344]
	133 Move X27, [X27+2328]
	134 Move X2, [X29]
	135 Move X0, X23
	136 Move W1, W24
	137 Call List`1<Object>.get_Item, X0, X1
	138 Compare X0, 0
	139 JumpIfEqual {235}
	140 Move X9, [X0]
	141 Move X8, [X27]
	142 Move X26, X0
	143 Move W11, [X9+304]
	144 Move W10, [X8+304]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X9, [X9+200]
	147 Add X9, X9, X10
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Compare X21, 0
	151 JumpIfEqual {261}
	152 Move X8, [X21+24]
	153 Move X0, [X21+64]
	154 Move X3, [X21+40]
	155 Move X1, X20
	156 Move X2, X19
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X8, [X26]
	159 Move X25, X0
	160 Move X1, [X8+928]
	161 Move X9, [X8+920]
	162 Move X0, X26
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Move X1, X0
	165 Compare X25, 0
	166 JumpIfEqual {236}
	167 Move X0, X25
	168 Move X2, X31
	169 Call EventBase.set_target, X0, X1
	170 Move X8, [X26]
	171 Move X1, [X8+928]
	172 Move X9, [X8+920]
	173 Move X0, X26
	174 NotImplemented "Instruction BLR not yet implemented."
	175 Compare X0, 0
	176 JumpIfEqual {237}
	177 Move X8, [X0]
	178 Move X9, [X8+408]
	179 Move X2, [X8+416]
	180 Move X1, X25
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Move X8, [X26]
	183 Move X1, [X8+640]
	184 Move X9, [X8+632]
	185 Move X0, X26
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Compare X0, 0
	188 JumpIfEqual {238}
	189 Move X1, X31
	190 Call FocusController.get_focusedElement, X0
	191 Compare X0, 0
	192 JumpIfEqual {199}
	193 Move X0, X22
	194 Move X1, X26
	195 Move X2, X31
	196 Call DefaultEventSystem.set_focusedPanel, X0, X1
	197 Move X26, X31
	198 Move W28, 4
	199 Move X0, X25
	200 Move X1, X31
	201 Call EventBase.get_isPropagationStopped, X0
	202 And W31, W0, 1
	203 Move W8, 10
	204 Move W9, 4
	205 Move X26, X31
	206 NotImplemented "Instruction CSEL not yet implemented."
	207 Move X8, [X25]
	208 Move X10, 0x1F4A000
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Move X10, [X10+3584]
	211 Move X1, [X10]
	212 Compare X9, 0
	213 JumpIfEqual {220}
	214 Move X10, [X8+176]
	215 Add X10, X10, 8
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Subtract X9, X9, 1
	219 Add X10, X10, 16
	220 Move X0, X25
	221 Move W2, W31
	222 Call 0x1C5D788
	223 NotImplemented "Instruction LDRSW not yet implemented."
	224 Add X8, X8, X9
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X1, [X0+8]
	228 Move X0, X25
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Compare X26, 0
	231 JumpIfNotEqual {262}
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Compare W28, 0
	234 JumpIfNotEqual {248}
	235 Subtract W24, W24, 1
	236 Call 0x1C17F20
	237 Call 0x1C17F20
	238 Call 0x1C17F20
	239 Move X28, X0
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X0, X28
	242 Call 0x3EB2AD0
	243 Move X26, [X0]
	244 Call 0x3EB2AE0
	245 Move W28, W31
	246 Compare X25, 0
	247 JumpIfNotEqual {207}
	248 Move X20, [X31+80]
	249 Move X19, [X31+88]
	250 Move X22, [X31+64]
	251 Move X21, [X31+72]
	252 Move X24, [X31+48]
	253 Move X23, [X31+56]
	254 Move X26, [X31+32]
	255 Move X25, [X31+40]
	256 Move X28, [X31+16]
	257 Move X27, [X31+24]
	258 Move X29, [X31+96]
	259 Move X30, [X31+104]
	260 Return 
	261 Call 0x1C17F20
	262 Move X0, X26
	263 Call 0x1C17F18
	264 Move X0, X24
	265 Call 0x1C17F18
	266 Call 0x1C17F20
	267 Call 0x1C17F20
	268 Call 0x1C17F20
	269 Call 0x1C17F20
	270 Move X26, X31
	271 Move X28, X0
	272 Compare X25, 0
	273 JumpIfEqual {297}
	274 Move X8, [X25]
	275 Move X10, 0x1F4A000
	276 NotImplemented "Instruction LDRH not yet implemented."
	277 Move X10, [X10+3584]
	278 Move X1, [X10]
	279 Compare X9, 0
	280 JumpIfEqual {287}
	281 Move X10, [X8+176]
	282 Add X10, X10, 8
	283 NotImplemented "Instruction LDUR not yet implemented."
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Subtract X9, X9, 1
	286 Add X10, X10, 16
	287 Move X0, X25
	288 Move W2, W31
	289 Call 0x1C5D788
	290 NotImplemented "Instruction LDRSW not yet implemented."
	291 Add X8, X8, X9
	292 Add X0, X8, 312
	293 Move X8, [X0]
	294 Move X1, [X0+8]
	295 Move X0, X25
	296 NotImplemented "Instruction BLR not yet implemented."
	297 Compare X26, 0
	298 JumpIfNotEqual {301}
	299 Move X0, X28
	300 Call 0x1D2D690
	301 Move X0, X26
	302 Call 0x1C17F18
	303 Move X28, X0
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Move X0, X28
	306 Call 0x3EB2AD0
	307 Move X24, [X0]
	308 Call 0x3EB2AE0
	309 Move W25, 1
	310 Compare X23, 0
	311 JumpIfNotEqual {89}
	312 Move X24, X31
	313 Move X28, X0
	314 Compare X23, 0
	315 JumpIfEqual {339}
	316 Move X10, 0x1F4A000
	317 Move X8, [X23]
	318 Move X10, [X10+3584]
	319 NotImplemented "Instruction LDRH not yet implemented."
	320 Move X1, [X10]
	321 Compare X9, 0
	322 JumpIfEqual {329}
	323 Move X10, [X8+176]
	324 Add X10, X10, 8
	325 NotImplemented "Instruction LDUR not yet implemented."
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Subtract X9, X9, 1
	328 Add X10, X10, 16
	329 Move X0, X23
	330 Move W2, W31
	331 Call 0x1C5D788
	332 NotImplemented "Instruction LDRSW not yet implemented."
	333 Add X8, X8, X9
	334 Add X0, X8, 312
	335 Move X8, [X0]
	336 Move X1, [X0+8]
	337 Move X0, X23
	338 NotImplemented "Instruction BLR not yet implemented."
	339 Compare X24, 0
	340 JumpIfEqual {299}
	341 Move X0, X24
	342 Call 0x1C17F18
	343 Call 0x1991590

Method: System.Void SendPositionBasedEvent(UnityEngine.Vector3 mousePosition, UnityEngine.Vector3 delta, System.Int32 pointerId, System.Nullable`1<System.Int32> targetDisplay, System.Func`4<UnityEngine.Vector3, UnityEngine.Vector3, TArg, UnityEngine.UIElements.EventBase> evtFactory, TArg arg, System.Boolean deselectIfNoTarget = False)

Disassembly:
	0x021AB338 LDR X26, [X26 + 0x958]
	0x021AB33C LDR X0, [X26]
	0x021AB340 LDR W8, [X0 + 0xE0]
	0x021AB344 CBNZ W8, 0x21AB34C
	0x021AB348 BL 0x1C16DFC
	0x021AB34C MOV W0, W19
	0x021AB350 MOV X1, X31
	0x021AB354 BL 0x3DAA030
	0x021AB358 ADRP X23, 0x1F70000
	0x021AB35C LDR X23, [X23 + 0x970]
	0x021AB360 MOV X24, X0
	0x021AB364 LDR X8, [X23]
	0x021AB368 LDR W9, [X8 + 0xE0]
	0x021AB36C CBNZ W9, 0x21AB37C
	0x021AB370 MOV X0, X8
	0x021AB374 BL 0x1C16DFC
	0x021AB378 LDR X8, [X23]
	0x021AB37C LDR X8, [X8 + 0xB8]
	0x021AB380 LDR X8, [X8]
	0x021AB384 CBZ X8, 0x21AB858
	0x021AB388 LDR X0, [X8 + 0x28]
	0x021AB38C CBZ X0, 0x21AB858
	0x021AB390 MOV W1, W19
	0x021AB394 MOV X2, X31
	0x021AB398 BL 0x3DB90F4
	0x021AB39C CBZ X0, 0x21AB3E0
	0x021AB3A0 ADRP X8, 0x1F70000
	0x021AB3A4 LDR X8, [X8 + 0x898]
	0x021AB3A8 LDR X9, [X0]
	0x021AB3AC LDR X8, [X8]
	0x021AB3B0 LDRB W11, [X9 + 0x130]
	0x021AB3B4 LDRB W10, [X8 + 0x130]
	0x021AB3B8 CMP W11, W10
	0x021AB3BC B.CC 0x21AB3E0
	0x021AB3C0 LDR X9, [X9 + 0xC8]
	0x021AB3C4 ADD X9, X9, X10, 0x3, LSL
	0x021AB3C8 LDUR X9, [X9 - 0x8]
	0x021AB3CC CMP X9, X8
	0x021AB3D0 B.NE 0x21AB3E0
	0x021AB3D4 MOV X1, X31
	0x021AB3D8 BL 0x3DEC0CC
	0x021AB3DC MOV X24, X0
	0x021AB3E0 ADRP X23, 0x222E000
	0x021AB3E4 LDRB W8, [X23 + 0x78F]
	0x021AB3E8 CBNZ W8, 0x21AB400
	0x021AB3EC ADRP X0, 0x1F50000
	0x021AB3F0 LDR X0, [X0 + 0xF08]
	0x021AB3F4 BL 0x1C16CF4
	0x021AB3F8 MOVZ W8, 0x1
	0x021AB3FC STRB W8, [X23 + 0x78F]
	0x021AB400 ADRP X8, 0x1F50000
	0x021AB404 LDR X8, [X8 + 0xF08]
	0x021AB408 ADRP X29, 0x1F70000
	0x021AB40C LDR X8, [X8]
	0x021AB410 LDR X8, [X8 + 0xB8]
	0x021AB414 LDR V0, [X8]
	0x021AB418 STR D0, [X31 + 0x18]
	0x021AB41C LDR V0, [X8]
	0x021AB420 STR D0, [X31 + 0x10]
	0x021AB424 LDR X29, [X29 + 0x918]
	0x021AB428 CBZ X24, 0x21AB458
	0x021AB42C LDR X9, [X24]
	0x021AB430 LDR X8, [X29]
	0x021AB434 LDRB W11, [X9 + 0x130]
	0x021AB438 LDRB W10, [X8 + 0x130]
	0x021AB43C CMP W11, W10
	0x021AB440 B.CC 0x21AB458
	0x021AB444 LDR X9, [X9 + 0xC8]
	0x021AB448 ADD X9, X9, X10, 0x3, LSL
	0x021AB44C LDUR X9, [X9 - 0x8]
	0x021AB450 CMP X9, X8
	0x021AB454 B.EQ 0x21AB56C
	0x021AB458 ADRP X8, 0x1F70000
	0x021AB45C LDR X8, [X8 + 0x930]
	0x021AB460 MOV X21, X26
	0x021AB464 LDR X0, [X8]
	0x021AB468 LDR W8, [X0 + 0xE0]
	0x021AB46C CBNZ W8, 0x21AB474
	0x021AB470 BL 0x1C16DFC
	0x021AB474 MOV X0, X31
	0x021AB478 BL 0x3E15A6C
	0x021AB47C CBZ X0, 0x21AB858
	0x021AB480 LDR W8, [X0 + 0x18]
	0x021AB484 MOV X26, X0
	0x021AB488 SUBS W27, W8, 0x1
	0x021AB48C B.MI 0x21AB560
	0x021AB490 MOV X20, X28
	0x021AB494 ADRP X28, 0x1F70000
	0x021AB498 LDR X28, [X28 + 0x928]
	0x021AB49C UBFM X23, X25, 0x20, 0x3F
	0x021AB4A0 LDR X2, [X28]
	0x021AB4A4 MOV X0, X26
	0x021AB4A8 MOV W1, W27
	0x021AB4AC BL 0x301BCCC
	0x021AB4B0 CBZ X0, 0x21AB4E4
	0x021AB4B4 LDR X9, [X0]
	0x021AB4B8 LDR X8, [X29]
	0x021AB4BC MOV X24, X0
	0x021AB4C0 LDRB W11, [X9 + 0x130]
	0x021AB4C4 LDRB W10, [X8 + 0x130]
	0x021AB4C8 CMP W11, W10
	0x021AB4CC B.CC 0x21AB4E4
	0x021AB4D0 LDR X9, [X9 + 0xC8]
	0x021AB4D4 ADD X9, X9, X10, 0x3, LSL
	0x021AB4D8 LDUR X9, [X9 - 0x8]
	0x021AB4DC CMP X9, X8
	0x021AB4E0 B.EQ 0x21AB4F0
	0x021AB4E4 SUBS W27, W27, 0x1
	0x021AB4E8 B.PL 0x21AB4A0
	0x021AB4EC B 0x21AB550
	0x021AB4F0 ANDS W31, W25, 0xFF
	0x021AB4F4 B.EQ 0x21AB504
	0x021AB4F8 LDR W8, [X24 + 0x1D8]
	0x021AB4FC CMP W8, W23
	0x021AB500 B.NE 0x21AB4E4
	0x021AB504 ADD X1, X31, 0x18
	0x021AB508 ADD X2, X31, 0x10
	0x021AB50C MOV X0, X24
	0x021AB510 MOV V0.16B, V9.16B
	0x021AB514 MOV V1.16B, V8.16B
	0x021AB518 MOV V2.16B, V11.16B
	0x021AB51C MOV V3.16B, V10.16B
	0x021AB520 MOV W3, W31
	0x021AB524 MOV X4, X31
	0x021AB528 BL 0x3DBEF68
	0x021AB52C TBZ X0, 0x0, 0x21AB4E4
	0x021AB530 LDR X8, [X24]
	0x021AB534 LDP S0, S1, [X31 + 0x18]
	0x021AB538 MOV X0, X24
	0x021AB53C LDR X9, [X8 + 0x418]
	0x021AB540 LDR X1, [X8 + 0x420]
	0x021AB544 BLR X9
	0x021AB548 CBZ X0, 0x21AB4E4
	0x021AB54C B 0x21AB554
	0x021AB550 MOV X24, X31
	0x021AB554 MOV X26, X21
	0x021AB558 MOV X28, X20
	0x021AB55C B 0x21AB594
	0x021AB560 MOV X24, X31
	0x021AB564 MOV X26, X21
	0x021AB568 B 0x21AB594
	0x021AB56C ADD X1, X31, 0x18
	0x021AB570 ADD X2, X31, 0x10
	0x021AB574 MOV X0, X24
	0x021AB578 MOV V0.16B, V9.16B
	0x021AB57C MOV V1.16B, V8.16B
	0x021AB580 MOV V2.16B, V11.16B
	0x021AB584 MOV V3.16B, V10.16B
	0x021AB588 MOV W3, W31
	0x021AB58C MOV X4, X31
	0x021AB590 BL 0x3DBEF68
	0x021AB594 LDR X0, [X26]
	0x021AB598 LDR W8, [X0 + 0xE0]
	0x021AB59C CBNZ W8, 0x21AB5A4
	0x021AB5A0 BL 0x1C16DFC
	0x021AB5A4 MOV W0, W19
	0x021AB5A8 MOV W1, W31
	0x021AB5AC MOV X2, X31
	0x021AB5B0 BL 0x3DA9D50
	0x021AB5B4 CBZ X0, 0x21AB5D0
	0x021AB5B8 LDR X9, [X0]
	0x021AB5BC LDR X8, [X29]
	0x021AB5C0 LDRB W11, [X9 + 0x130]
	0x021AB5C4 LDRB W10, [X8 + 0x130]
	0x021AB5C8 CMP W11, W10
	0x021AB5CC B.CS 0x21AB5D8
	0x021AB5D0 MOV X25, X31
	0x021AB5D4 B 0x21AB5EC
	0x021AB5D8 LDR X9, [X9 + 0xC8]
	0x021AB5DC ADD X9, X9, X10, 0x3, LSL
	0x021AB5E0 LDUR X9, [X9 - 0x8]
	0x021AB5E4 CMP X9, X8
	0x021AB5E8 CSEL X25, X0, X31, EQ
	0x021AB5EC CMP X25, X24
	0x021AB5F0 B.EQ 0x21AB638
	0x021AB5F4 CBZ X25, 0x21AB61C
	0x021AB5F8 MOV X0, X25
	0x021AB5FC MOV V0.16B, V9.16B
	0x021AB600 MOV V1.16B, V8.16B
	0x021AB604 MOV X1, X31
	0x021AB608 BL 0x3DBEF30
	0x021AB60C MOV X0, X25
	0x021AB610 MOV W1, W19
	0x021AB614 MOV X2, X31
	0x021AB618 BL 0x3DBF08C
	0x021AB61C CBZ X24, 0x21AB720
	0x021AB620 LDP S0, S1, [X31 + 0x18]
	0x021AB624 MOV X0, X24
	0x021AB628 MOV W1, W19
	0x021AB62C MOV X2, X31
	0x021AB630 BL 0x3DBF144
	0x021AB634 B 0x21AB63C
	0x021AB638 CBZ X24, 0x21AB720
	0x021AB63C CBZ X22, 0x21AB858
	0x021AB640 LDP S3, S4, [X31 + 0x10]
	0x021AB644 LDP S0, S1, [X31 + 0x18]
	0x021AB648 LDR X8, [X22 + 0x18]
	0x021AB64C LDR X0, [X22 + 0x40]
	0x021AB650 LDR X2, [X22 + 0x28]
	0x021AB654 FMOV S2, W31
	0x021AB658 FMOV S5, W31
	0x021AB65C MOV X1, X28
	0x021AB660 BLR X8
	0x021AB664 LDR X8, [X24]
	0x021AB668 MOV X21, X0
	0x021AB66C LDR X1, [X8 + 0x3A0]
	0x021AB670 LDR X9, [X8 + 0x398]
	0x021AB674 MOV X0, X24
	0x021AB678 BLR X9
	0x021AB67C CBZ X0, 0x21AB864
	0x021AB680 LDR X8, [X0]
	0x021AB684 LDP X9, X2, [X8 + 0x198]
	0x021AB688 MOV X1, X21
	0x021AB68C BLR X9
	0x021AB690 CBZ X21, 0x21AB868
	0x021AB694 MOV X0, X21
	0x021AB698 MOV X1, X31
	0x021AB69C BL 0x3DA0490
	0x021AB6A0 TBZ X0, 0x0, 0x21AB6B4
	0x021AB6A4 LDR X0, [X31 + 0x8]
	0x021AB6A8 MOV X1, X24
	0x021AB6AC MOV X2, X31
	0x021AB6B0 BL 0x3D8F968
	0x021AB6B4 LDR X8, [X21]
	0x021AB6B8 LDP X9, X1, [X8 + 0x188]
	0x021AB6BC MOV X0, X21
	0x021AB6C0 BLR X9
	0x021AB6C4 ADRP X8, 0x1F70000
	0x021AB6C8 LDR X8, [X8 + 0x950]
	0x021AB6CC MOV X20, X0
	0x021AB6D0 LDR X0, [X8]
	0x021AB6D4 LDR W8, [X0 + 0xE0]
	0x021AB6D8 CBNZ W8, 0x21AB6E0
	0x021AB6DC BL 0x1C16DFC
	0x021AB6E0 ADRP X8, 0x1F70000
	0x021AB6E4 LDR X8, [X8 + 0x938]
	0x021AB6E8 LDR X0, [X8]
	0x021AB6EC BL 0x2D0D5C8
	0x021AB6F0 CMP X20, X0
	0x021AB6F4 B.NE 0x21AB73C
	0x021AB6F8 LDR X0, [X26]
	0x021AB6FC LDR W8, [X0 + 0xE0]
	0x021AB700 CBNZ W8, 0x21AB708
	0x021AB704 BL 0x1C16DFC
	0x021AB708 MOV W0, W19
	0x021AB70C MOV X1, X24
	0x021AB710 MOV X2, X31
	0x021AB714 BL 0x3DA9F84
	0x021AB718 MOV X19, X31
	0x021AB71C B 0x21AB7A4
	0x021AB720 LDR W8, [X31 + 0x4]
	0x021AB724 TBZ X8, 0x0, 0x21AB808
	0x021AB728 LDR X0, [X31 + 0x8]
	0x021AB72C MOV X1, X31
	0x021AB730 MOV X2, X31
	0x021AB734 BL 0x3D8D728
	0x021AB738 B 0x21AB808
	0x021AB73C LDR X8, [X21]
	0x021AB740 LDP X9, X1, [X8 + 0x188]
	0x021AB744 MOV X0, X21
	0x021AB748 BLR X9
	0x021AB74C ADRP X8, 0x1F70000
	0x021AB750 LDR X8, [X8 + 0x948]
	0x021AB754 MOV X20, X0
	0x021AB758 LDR X0, [X8]
	0x021AB75C LDR W8, [X0 + 0xE0]
	0x021AB760 CBNZ W8, 0x21AB768
	0x021AB764 BL 0x1C16DFC
	0x021AB768 ADRP X8, 0x1F70000
	0x021AB76C LDR X8, [X8 + 0x940]
	0x021AB770 LDR X0, [X8]
	0x021AB774 BL 0x2D0D5C8
	0x021AB778 CMP X20, X0
	0x021AB77C B.NE 0x21AB7A0
	0x021AB780 ADRP X8, 0x1F70000
	0x021AB784 LDR X8, [X8 + 0x968]
	0x021AB788 LDR X1, [X8]
	0x021AB78C LDR X8, [X21]
	0x021AB790 CMP X8, X1
	0x021AB794 B.NE 0x21AB86C
	0x021AB798 LDR W8, [X21 + 0xB0]
	0x021AB79C CBZ W8, 0x21AB830
	0x021AB7A0 MOV X19, X31
	0x021AB7A4 ADRP X10, 0x1F48000
	0x021AB7A8 LDR X8, [X21]
	0x021AB7AC LDR X10, [X10 + 0xE00]
	0x021AB7B0 LDRH W9, [X8 + 0x12E]
	0x021AB7B4 LDR X1, [X10]
	0x021AB7B8 CBZ X9, 0x21AB7DC
	0x021AB7BC LDR X10, [X8 + 0xB0]
	0x021AB7C0 ADD X10, X10, 0x8
	0x021AB7C4 LDUR X11, [X10 - 0x8]
	0x021AB7C8 CMP X11, X1
	0x021AB7CC B.EQ 0x21AB7EC
	0x021AB7D0 SUBS X9, X9, 0x1
	0x021AB7D4 ADD X10, X10, 0x10
	0x021AB7D8 B.NE 0x21AB7C4
	0x021AB7DC MOV X0, X21
	0x021AB7E0 MOV W2, W31
	0x021AB7E4 BL 0x1C5C788
	0x021AB7E8 B 0x21AB7F8
	0x021AB7EC LDRSW X9, [X10]
	0x021AB7F0 ADD X8, X8, X9, 0x4, LSL
	0x021AB7F4 ADD X0, X8, 0x138
	0x021AB7F8 LDP X8, X1, [X0]
	0x021AB7FC MOV X0, X21
	0x021AB800 BLR X8
	0x021AB804 CBNZ X19, 0x21AB85C
	0x021AB808 LDP X20, X19, [X31 + 0x90]
	0x021AB80C LDP X22, X21, [X31 + 0x80]
	0x021AB810 LDP X24, X23, [X31 + 0x70]
	0x021AB814 LDP X26, X25, [X31 + 0x60]
	0x021AB818 LDP X28, X27, [X31 + 0x50]
	0x021AB81C LDP X29, X30, [X31 + 0x40]
	0x021AB820 LDP D9, D8, [X31 + 0x30]
	0x021AB824 LDP D11, D10, [X31 + 0x20]
	0x021AB828 ADD X31, X31, 0xA0
	0x021AB82C RET
	0x021AB830 LDR X0, [X26]
	0x021AB834 LDR W8, [X0 + 0xE0]
	0x021AB838 CBNZ W8, 0x21AB840
	0x021AB83C BL 0x1C16DFC
	0x021AB840 MOV W0, W19
	0x021AB844 MOV X1, X31
	0x021AB848 MOV X2, X31
	0x021AB84C BL 0x3DA9F84
	0x021AB850 MOV X19, X31
	0x021AB854 B 0x21AB7A4
	0x021AB858 BL 0x1C16F20
	0x021AB85C MOV X0, X19
	0x021AB860 BL 0x1C16F18
	0x021AB864 BL 0x1C16F20
	0x021AB868 BL 0x1C16F20
	0x021AB86C MOV X0, X21
	0x021AB870 BL 0x1C171E0
	0x021AB874 B 0x21AB8A0
	0x021AB878 B 0x21AB8A0
	0x021AB87C B 0x21AB8A0
	0x021AB880 B 0x21AB8A0
	0x021AB884 B 0x21AB8A0
	0x021AB888 B 0x21AB8A0
	0x021AB88C B 0x21AB8A0
	0x021AB890 B 0x21AB8A0
	0x021AB894 B 0x21AB8A0
	0x021AB898 B 0x21AB8A0
	0x021AB89C B 0x21AB8A0
	0x021AB8A0 MOV X20, X0
	0x021AB8A4 CMP W1, 0x1
	0x021AB8A8 B.NE 0x21AB8C4
	0x021AB8AC MOV X0, X20
	0x021AB8B0 BL 0x3EB1AD0
	0x021AB8B4 LDR X19, [X0]
	0x021AB8B8 BL 0x3EB1AE0
	0x021AB8BC CBNZ X21, 0x21AB7A4
	0x021AB8C0 B 0x21AB804
	0x021AB8C4 MOV X19, X31
	0x021AB8C8 B 0x21AB8D0
	0x021AB8CC MOV X20, X0
	0x021AB8D0 CBZ X21, 0x21AB934
	0x021AB8D4 ADRP X10, 0x1F48000
	0x021AB8D8 LDR X8, [X21]
	0x021AB8DC LDR X10, [X10 + 0xE00]
	0x021AB8E0 LDRH W9, [X8 + 0x12E]
	0x021AB8E4 LDR X1, [X10]
	0x021AB8E8 CBZ X9, 0x21AB90C
	0x021AB8EC LDR X10, [X8 + 0xB0]
	0x021AB8F0 ADD X10, X10, 0x8
	0x021AB8F4 LDUR X11, [X10 - 0x8]
	0x021AB8F8 CMP X11, X1
	0x021AB8FC B.EQ 0x21AB91C
	0x021AB900 SUBS X9, X9, 0x1
	0x021AB904 ADD X10, X10, 0x10
	0x021AB908 B.NE 0x21AB8F4
	0x021AB90C MOV X0, X21
	0x021AB910 MOV W2, W31
	0x021AB914 BL 0x1C5C788
	0x021AB918 B 0x21AB928
	0x021AB91C LDRSW X9, [X10]
	0x021AB920 ADD X8, X8, X9, 0x4, LSL
	0x021AB924 ADD X0, X8, 0x138
	0x021AB928 LDP X8, X1, [X0]
	0x021AB92C MOV X0, X21
	0x021AB930 BLR X8
	0x021AB934 CBNZ X19, 0x21AB940
	0x021AB938 MOV X0, X20
	0x021AB93C BL 0x1D2C690
	0x021AB940 MOV X0, X19
	0x021AB944 BL 0x1C16F18
	0x021AB948 BL 0x1990590
	0x021AB94C SUB X31, X31, 0x100
	0x021AB950 STP D11, D10, [X31 + 0x80]
	0x021AB954 STP D9, D8, [X31 + 0x90]
	0x021AB958 STP X29, X30, [X31 + 0xA0]
	0x021AB95C STP X28, X27, [X31 + 0xB0]
	0x021AB960 STP X26, X25, [X31 + 0xC0]
	0x021AB964 STP X24, X23, [X31 + 0xD0]
	0x021AB968 STP X22, X21, [X31 + 0xE0]
	0x021AB96C STP X20, X19, [X31 + 0xF0]
	0x021AB970 LDR X8, [X6 + 0x38]
	0x021AB974 MOV W28, W5
	0x021AB978 MOV X22, X4
	0x021AB97C MOV X21, X3
	0x021AB980 MOV X25, X2
	0x021AB984 MOV W19, W1
	0x021AB988 MOV V10.16B, V4.16B
	0x021AB98C MOV V11.16B, V3.16B
	0x021AB990 MOV V8.16B, V1.16B
	0x021AB994 MOV V9.16B, V0.16B
	0x021AB998 MOV X20, X0
	0x021AB99C CBNZ X8, 0x21ABA74
	0x021AB9A0 ADRP X0, 0x1F70000
	0x021AB9A4 LDR X0, [X0 + 0x918]
	0x021AB9A8 MOV X24, X6
	0x021AB9AC BL 0x1C16CF4
	0x021AB9B0 ADRP X0, 0x1F70000
	0x021AB9B4 LDR X0, [X0 + 0x938]
	0x021AB9B8 BL 0x1C16CF4
	0x021AB9BC ADRP X0, 0x1F70000
	0x021AB9C0 LDR X0, [X0 + 0x940]
	0x021AB9C4 BL 0x1C16CF4
	0x021AB9C8 ADRP X0, 0x1F70000
	0x021AB9CC LDR X0, [X0 + 0x948]
	0x021AB9D0 BL 0x1C16CF4
	0x021AB9D4 ADRP X0, 0x1F70000
	0x021AB9D8 LDR X0, [X0 + 0x950]
	0x021AB9DC BL 0x1C16CF4
	0x021AB9E0 ADRP X0, 0x1F48000
	0x021AB9E4 LDR X0, [X0 + 0xE00]
	0x021AB9E8 BL 0x1C16CF4
	0x021AB9EC ADRP X0, 0x1F70000
	0x021AB9F0 LDR X0, [X0 + 0x920]
	0x021AB9F4 BL 0x1C16CF4
	0x021AB9F8 ADRP X0, 0x1F70000
	0x021AB9FC LDR X0, [X0 + 0x928]
	0x021ABA00 BL 0x1C16CF4
	0x021ABA04 ADRP X0, 0x1F4F000
	0x021ABA08 LDR X0, [X0 + 0x5F0]
	0x021ABA0C BL 0x1C16CF4
	0x021ABA10 ADRP X0, 0x1F4B000
	0x021ABA14 LDR X0, [X0 + 0xEF8]
	0x021ABA18 BL 0x1C16CF4
	0x021ABA1C ADRP X0, 0x1F70000
	0x021ABA20 LDR X0, [X0 + 0x958]
	0x021ABA24 BL 0x1C16CF4
	0x021ABA28 ADRP X0, 0x1F70000
	0x021ABA2C LDR X0, [X0 + 0x960]
	0x021ABA30 BL 0x1C16CF4
	0x021ABA34 ADRP X0, 0x1F70000
	0x021ABA38 LDR X0, [X0 + 0x968]
	0x021ABA3C BL 0x1C16CF4
	0x021ABA40 ADRP X0, 0x1F70000
	0x021ABA44 LDR X0, [X0 + 0x970]
	0x021ABA48 BL 0x1C16CF4
	0x021ABA4C ADRP X0, 0x1F70000
	0x021ABA50 LDR X0, [X0 + 0x930]
	0x021ABA54 BL 0x1C16CF4
	0x021ABA58 ADRP X0, 0x1F70000
	0x021ABA5C LDR X0, [X0 + 0x898]
	0x021ABA60 BL 0x1C16CF4
	0x021ABA64 LDR X8, [X24 + 0x38]
	0x021ABA68 CBNZ X8, 0x21ABA74
	0x021ABA6C MOV X0, X24
	0x021ABA70 BL 0x1C5C6E0
	0x021ABA74 STP X31, X31, [X31 + 0x40]
	0x021ABA78 LDR X1, [X20 + 0x50]
	0x021ABA7C CBZ X1, 0x21ABA8C
	0x021ABA80 MOV X0, X20
	0x021ABA84 MOV X2, X31
	0x021ABA88 BL 0x3D8F968
	0x021ABA8C STR X20, [X31 + 0x8]
	0x021ABA90 ADRP X26, 0x1F70000

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+48], D11
	003 Move [X31+56], D10
	004 Move [X31+64], D9
	005 Move [X31+72], D8
	006 Move [X31+80], X29
	007 Move [X31+88], X30
	008 Move [X31+96], X28
	009 Move [X31+104], X27
	010 Move [X31+112], X26
	011 Move [X31+120], X25
	012 Move [X31+128], X24
	013 Move [X31+136], X23
	014 Move [X31+144], X22
	015 Move [X31+152], X21
	016 Move [X31+160], X20
	017 Move [X31+168], X19
	018 Move X8, [X7+56]
	019 Move X29, X4
	020 Move X23, X3
	021 Move X26, X2
	022 Move W19, W1
	023 Move V10, V4
	024 Move V11, V3
	025 Move V8, V1
	026 Move V9, V0
	027 Move X20, X0
	028 Move [X31+12], W6
	029 Move [X31+24], X5
	030 Compare X8, 0
	031 JumpIfNotEqual {86}
	032 Move X0, 0x1F71000
	033 Move X0, [X0+2328]
	034 Move X25, X7
	035 Call 0x1C17CF4
	036 Move X0, 0x1F71000
	037 Move X0, [X0+2360]
	038 Call 0x1C17CF4
	039 Move X0, 0x1F71000
	040 Move X0, [X0+2368]
	041 Call 0x1C17CF4
	042 Move X0, 0x1F71000
	043 Move X0, [X0+2376]
	044 Call 0x1C17CF4
	045 Move X0, 0x1F71000
	046 Move X0, [X0+2384]
	047 Call 0x1C17CF4
	048 Move X0, 0x1F49000
	049 Move X0, [X0+3584]
	050 Call 0x1C17CF4
	051 Move X0, 0x1F71000
	052 Move X0, [X0+2336]
	053 Call 0x1C17CF4
	054 Move X0, 0x1F71000
	055 Move X0, [X0+2344]
	056 Call 0x1C17CF4
	057 Move X0, 0x1F50000
	058 Move X0, [X0+1520]
	059 Call 0x1C17CF4
	060 Move X0, 0x1F4C000
	061 Move X0, [X0+3832]
	062 Call 0x1C17CF4
	063 Move X0, 0x1F71000
	064 Move X0, [X0+2392]
	065 Call 0x1C17CF4
	066 Move X0, 0x1F71000
	067 Move X0, [X0+2400]
	068 Call 0x1C17CF4
	069 Move X0, 0x1F71000
	070 Move X0, [X0+2408]
	071 Call 0x1C17CF4
	072 Move X0, 0x1F71000
	073 Move X0, [X0+2416]
	074 Call 0x1C17CF4
	075 Move X0, 0x1F71000
	076 Move X0, [X0+2352]
	077 Call 0x1C17CF4
	078 Move X0, 0x1F71000
	079 Move X0, [X0+2200]
	080 Call 0x1C17CF4
	081 Move X8, [X25+56]
	082 Compare X8, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X25
	085 Call 0x1C5D6E0
	086 Move [X31+32], X31
	087 Move [X31+40], X31
	088 Move X1, [X20+80]
	089 Compare X1, 0
	090 JumpIfEqual {94}
	091 Move X0, X20
	092 Move X2, X31
	093 Call DefaultEventSystem.UpdateFocusedPanel, X0, X1
	094 Move [X31+16], X20
	095 Move X22, 0x1F71000
	096 Move X22, [X22+2392]
	097 Move X0, [X22]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move W0, W19
	103 Move X1, X31
	104 Call PointerDeviceState.GetPlayerPanelWithSoftPointerCapture, X0
	105 Move X21, 0x1F71000
	106 Move X21, [X21+2416]
	107 Move X25, X0
	108 Move X8, [X21]
	109 Move W9, [X8+224]
	110 Compare W9, 0
	111 JumpIfNotEqual {115}
	112 Move X0, X8
	113 Call 0x1C17DFC
	114 Move X8, [X21]
	115 Move X8, [X8+184]
	116 Move X8, [X8]
	117 Compare X8, 0
	118 JumpIfEqual {449}
	119 Move X0, [X8+40]
	120 Compare X0, 0
	121 JumpIfEqual {449}
	122 Move W1, W19
	123 Move X2, X31
	124 Call PointerDispatchState.GetCapturingElement, X0, X1
	125 Compare X0, 0
	126 JumpIfEqual {141}
	127 Move X8, 0x1F71000
	128 Move X8, [X8+2200]
	129 Move X9, [X0]
	130 Move X8, [X8]
	131 Move W11, [X9+304]
	132 Move W10, [X8+304]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X9, [X9+200]
	135 Add X9, X9, X10
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X1, X31
	139 Call VisualElement.get_panel, X0
	140 Move X25, X0
	141 Move X21, 0x222F000
	142 Move W8, [X21+1935]
	143 Compare W8, 0
	144 JumpIfNotEqual {150}
	145 Move X0, 0x1F51000
	146 Move X0, [X0+3848]
	147 Call 0x1C17CF4
	148 Move W8, 1
	149 Move [X21+1935], W8
	150 Move X8, 0x1F51000
	151 Move X8, [X8+3848]
	152 Move X24, 0x1F71000
	153 Move X8, [X8]
	154 Move X8, [X8+184]
	155 Move V0, [X8]
	156 Move [X31+40], D0
	157 Move V0, [X8]
	158 Move [X31+32], D0
	159 Move X24, [X24+2328]
	160 Compare X25, 0
	161 JumpIfEqual {171}
	162 Move X9, [X25]
	163 Move X8, [X24]
	164 Move W11, [X9+304]
	165 Move W10, [X8+304]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X9, [X9+200]
	168 Add X9, X9, X10
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X8, 0x1F71000
	172 Move X8, [X8+2352]
	173 Move X0, [X8]
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 Move X0, X31
	179 Call UIElementsRuntimeUtility.GetSortedPlayerPanels
	180 Compare X0, 0
	181 JumpIfEqual {449}
	182 Move W8, [X0+24]
	183 Move X27, X0
	184 Subtract W28, W8, 1
	185 Move X21, 0x1F71000
	186 Move X21, [X21+2344]
	187 Move X20, X29
	188 Move X29, X26
	189 ShiftRight X29, 32
	190 And X29, X29, 0x7FFFFFFF
	191 Move X2, [X21]
	192 Move X0, X27
	193 Move W1, W28
	194 Call List`1<Object>.get_Item, X0, X1
	195 Compare X0, 0
	196 JumpIfEqual {207}
	197 Move X9, [X0]
	198 Move X8, [X24]
	199 Move X25, X0
	200 Move W11, [X9+304]
	201 Move W10, [X8+304]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X9, [X9+200]
	204 Add X9, X9, X10
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Subtract W28, W28, 1
	208 And W31, W26, 255
	209 Move W8, [X25+472]
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Add X1, X31, 40
	212 Add X2, X31, 32
	213 Move X0, X25
	214 Move V0, V9
	215 Move V1, V8
	216 Move V2, V11
	217 Move V3, V10
	218 Move W3, W31
	219 Move X4, X31
	220 Call BaseRuntimePanel.ScreenToPanel, X0, X1, X2, X3, X4, X5
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {207}
	225 Move X8, [X25]
	226 Move S0, [X31+40]
	227 Move S1, [X31+44]
	228 Move X0, X25
	229 Move X9, [X8+1048]
	230 Move X1, [X8+1056]
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Compare X0, 0
	233 JumpIfEqual {207}
	234 Move X25, X31
	235 Move X29, X20
	236 Move X25, X31
	237 Add X1, X31, 40
	238 Add X2, X31, 32
	239 Move X0, X25
	240 Move V0, V9
	241 Move V1, V8
	242 Move V2, V11
	243 Move V3, V10
	244 Move W3, W31
	245 Move X4, X31
	246 Call BaseRuntimePanel.ScreenToPanel, X0, X1, X2, X3, X4, X5
	247 Move X0, [X22]
	248 Move W8, [X0+224]
	249 Compare W8, 0
	250 JumpIfNotEqual {252}
	251 Call 0x1C17DFC
	252 Move W0, W19
	253 Move W1, W31
	254 Move X2, X31
	255 Call PointerDeviceState.GetPanel, X0, X1
	256 Compare X0, 0
	257 JumpIfEqual {263}
	258 Move X9, [X0]
	259 Move X8, [X24]
	260 Move W11, [X9+304]
	261 Move W10, [X8+304]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move X26, X31
	264 Move X9, [X9+200]
	265 Add X9, X9, X10
	266 NotImplemented "Instruction LDUR not yet implemented."
	267 NotImplemented "Instruction CMP not yet implemented."
	268 NotImplemented "Instruction CSEL not yet implemented."
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Compare X26, 0
	271 JumpIfEqual {281}
	272 Move X0, X26
	273 Move V0, V9
	274 Move V1, V8
	275 Move X1, X31
	276 Call BaseRuntimePanel.ScreenToPanel, X0, X1
	277 Move X0, X26
	278 Move W1, W19
	279 Move X2, X31
	280 Call BaseRuntimePanel.PointerLeavesPanel, X0, X1, X2
	281 Compare X25, 0
	282 JumpIfEqual {360}
	283 Move S0, [X31+40]
	284 Move S1, [X31+44]
	285 Move X0, X25
	286 Move W1, W19
	287 Move X2, X31
	288 Call BaseRuntimePanel.PointerEntersPanel, X0, X1, X2
	289 Compare X25, 0
	290 JumpIfEqual {360}
	291 Compare X23, 0
	292 JumpIfEqual {449}
	293 Move X9, [X31+24]
	294 Move S3, [X31+32]
	295 Move S4, [X31+36]
	296 Move S0, [X31+40]
	297 Move S1, [X31+44]
	298 Move X8, [X23+24]
	299 Move X0, [X23+64]
	300 Move X3, [X23+40]
	301 And X2, X9, 0
	302 Move S2, W31
	303 Move S5, W31
	304 Move X1, X29
	305 NotImplemented "Instruction BLR not yet implemented."
	306 Move X8, [X25]
	307 Move X21, X0
	308 Move X1, [X8+928]
	309 Move X9, [X8+920]
	310 Move X0, X25
	311 NotImplemented "Instruction BLR not yet implemented."
	312 Compare X0, 0
	313 JumpIfEqual {452}
	314 Move X8, [X0]
	315 Move X9, [X8+408]
	316 Move X2, [X8+416]
	317 Move X1, X21
	318 NotImplemented "Instruction BLR not yet implemented."
	319 Compare X21, 0
	320 JumpIfEqual {453}
	321 Move X0, X21
	322 Move X1, X31
	323 Call EventBase.get_processedByFocusController, X0
	324 Move TEMP, X0
	325 And TEMP, TEMP, 1
	326 Compare TEMP, 1
	327 JumpIfNotEqual {332}
	328 Move X0, [X31+16]
	329 Move X1, X25
	330 Move X2, X31
	331 Call DefaultEventSystem.UpdateFocusedPanel, X0, X1
	332 Move X8, [X21]
	333 Move X9, [X8+392]
	334 Move X1, [X8+400]
	335 Move X0, X21
	336 NotImplemented "Instruction BLR not yet implemented."
	337 Move X8, 0x1F71000
	338 Move X8, [X8+2384]
	339 Move X20, X0
	340 Move X0, [X8]
	341 Move W8, [X0+224]
	342 Compare W8, 0
	343 JumpIfNotEqual {345}
	344 Call 0x1C17DFC
	345 Move X8, 0x1F71000
	346 Move X8, [X8+2360]
	347 Move X0, [X8]
	348 Call 0x2D0E5C8
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Move X0, [X22]
	351 Move W8, [X0+224]
	352 Compare W8, 0
	353 JumpIfNotEqual {355}
	354 Call 0x1C17DFC
	355 Move W0, W19
	356 Move X1, X25
	357 Move X2, X31
	358 Call PointerDeviceState.SetPlayerPanelWithSoftPointerCapture, X0, X1
	359 Move X19, X31
	360 Move W8, [X31+12]
	361 Move TEMP, X8
	362 And TEMP, TEMP, 1
	363 Compare TEMP, 1
	364 JumpIfNotEqual {421}
	365 Move X0, [X31+16]
	366 Move X1, X31
	367 Move X2, X31
	368 Call DefaultEventSystem.set_focusedPanel, X0, X1
	369 Move X8, [X21]
	370 Move X9, [X8+392]
	371 Move X1, [X8+400]
	372 Move X0, X21
	373 NotImplemented "Instruction BLR not yet implemented."
	374 Move X8, 0x1F71000
	375 Move X8, [X8+2376]
	376 Move X20, X0
	377 Move X0, [X8]
	378 Move W8, [X0+224]
	379 Compare W8, 0
	380 JumpIfNotEqual {382}
	381 Call 0x1C17DFC
	382 Move X8, 0x1F71000
	383 Move X8, [X8+2368]
	384 Move X0, [X8]
	385 Call 0x2D0E5C8
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Move X8, 0x1F71000
	388 Move X8, [X8+2408]
	389 Move X1, [X8]
	390 Move X8, [X21]
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move W8, [X21+176]
	393 Compare W8, 0
	394 JumpIfEqual {439}
	395 Move X19, X31
	396 Move X10, 0x1F49000
	397 Move X8, [X21]
	398 Move X10, [X10+3584]
	399 NotImplemented "Instruction LDRH not yet implemented."
	400 Move X1, [X10]
	401 Compare X9, 0
	402 JumpIfEqual {409}
	403 Move X10, [X8+176]
	404 Add X10, X10, 8
	405 NotImplemented "Instruction LDUR not yet implemented."
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Subtract X9, X9, 1
	408 Add X10, X10, 16
	409 Move X0, X21
	410 Move W2, W31
	411 Call 0x1C5D788
	412 NotImplemented "Instruction LDRSW not yet implemented."
	413 Add X8, X8, X9
	414 Add X0, X8, 312
	415 Move X8, [X0]
	416 Move X1, [X0+8]
	417 Move X0, X21
	418 NotImplemented "Instruction BLR not yet implemented."
	419 Compare X19, 0
	420 JumpIfNotEqual {450}
	421 Move X20, [X31+160]
	422 Move X19, [X31+168]
	423 Move X22, [X31+144]
	424 Move X21, [X31+152]
	425 Move X24, [X31+128]
	426 Move X23, [X31+136]
	427 Move X26, [X31+112]
	428 Move X25, [X31+120]
	429 Move X28, [X31+96]
	430 Move X27, [X31+104]
	431 Move X29, [X31+80]
	432 Move X30, [X31+88]
	433 Move D9, [X31+64]
	434 Move D8, [X31+72]
	435 Move D11, [X31+48]
	436 Move D10, [X31+56]
	437 Add X31, X31, 176
	438 Return 
	439 Move X0, [X22]
	440 Move W8, [X0+224]
	441 Compare W8, 0
	442 JumpIfNotEqual {444}
	443 Call 0x1C17DFC
	444 Move W0, W19
	445 Move X1, X31
	446 Move X2, X31
	447 Call PointerDeviceState.SetPlayerPanelWithSoftPointerCapture, X0, X1
	448 Move X19, X31
	449 Call 0x1C17F20
	450 Move X0, X19
	451 Call 0x1C17F18
	452 Call 0x1C17F20
	453 Call 0x1C17F20
	454 Move X0, X21
	455 Call 0x1C181E0
	456 Move X20, X0
	457 NotImplemented "Instruction CMP not yet implemented."
	458 Move X0, X20
	459 Call 0x3EB2AD0
	460 Move X19, [X0]
	461 Call 0x3EB2AE0
	462 Compare X21, 0
	463 JumpIfNotEqual {396}
	464 Move X19, X31
	465 Move X20, X0
	466 Compare X21, 0
	467 JumpIfEqual {491}
	468 Move X10, 0x1F49000
	469 Move X8, [X21]
	470 Move X10, [X10+3584]
	471 NotImplemented "Instruction LDRH not yet implemented."
	472 Move X1, [X10]
	473 Compare X9, 0
	474 JumpIfEqual {481}
	475 Move X10, [X8+176]
	476 Add X10, X10, 8
	477 NotImplemented "Instruction LDUR not yet implemented."
	478 NotImplemented "Instruction CMP not yet implemented."
	479 Subtract X9, X9, 1
	480 Add X10, X10, 16
	481 Move X0, X21
	482 Move W2, W31
	483 Call 0x1C5D788
	484 NotImplemented "Instruction LDRSW not yet implemented."
	485 Add X8, X8, X9
	486 Add X0, X8, 312
	487 Move X8, [X0]
	488 Move X1, [X0+8]
	489 Move X0, X21
	490 NotImplemented "Instruction BLR not yet implemented."
	491 Compare X19, 0
	492 JumpIfNotEqual {495}
	493 Move X0, X20
	494 Call 0x1D2D690
	495 Move X0, X19
	496 Call 0x1C17F18
	497 Call 0x1991590

Method: System.Void UpdateFocusedPanel(UnityEngine.UIElements.BaseRuntimePanel runtimePanel)

Disassembly:
	0x03D90968 LDR X10, [X8 + 0xB0]
	0x03D9096C ADD X10, X10, 0x8
	0x03D90970 LDUR X11, [X10 - 0x8]
	0x03D90974 CMP X11, X1
	0x03D90978 B.EQ 0x3D90998
	0x03D9097C SUBS X9, X9, 0x1
	0x03D90980 ADD X10, X10, 0x10
	0x03D90984 B.NE 0x3D90970
	0x03D90988 MOVZ W2, 0xB
	0x03D9098C MOV X0, X20
	0x03D90990 BL 0x1C5C788
	0x03D90994 B 0x3D909A8
	0x03D90998 LDR W9, [X10]
	0x03D9099C ADD W9, W9, 0xB
	0x03D909A0 ADD X8, X8, W9, 0x4, SXTW
	0x03D909A4 ADD X0, X8, 0x138
	0x03D909A8 LDP X8, X1, [X0]
	0x03D909AC MOV X0, X20
	0x03D909B0 BLR X8
	0x03D909B4 LDR X8, [X21]
	0x03D909B8 MOV W20, W0
	0x03D909BC LDR W9, [X8 + 0xE0]
	0x03D909C0 CBNZ W9, 0x3D909CC
	0x03D909C4 MOV X0, X8
	0x03D909C8 BL 0x1C16DFC
	0x03D909CC ANDS W31, W20, 0x1
	0x03D909D0 UBFM X2, X19, 0x20, 0x3F
	0x03D909D4 MOV W0, W19
	0x03D909D8 LDP X20, X19, [X31 + 0x10]
	0x03D909DC MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {37}
	006 Move X8, [X1]
	007 Move X20, X1
	008 Move X19, X0
	009 Move X0, X20
	010 Move X9, [X8+632]
	011 Move X1, [X8+640]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Compare X0, 0
	014 JumpIfEqual {37}
	015 Move X1, X31
	016 Call FocusController.get_focusedElement, X0
	017 Compare X0, 0
	018 JumpIfEqual {26}
	019 Move X0, X19
	020 Move X1, X20
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Call DefaultEventSystem.set_focusedPanel, X0, X1
	025 Return 
	026 Move X0, [X19+80]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, X31
	031 Call Panel.Blur, X0
	032 Move [X19+80], X31
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 
	037 Call 0x1C17F20

Method: UnityEngine.UIElements.EventBase MakeTouchEvent(UnityEngine.Touch touch, UnityEngine.EventModifiers modifiers)

Disassembly:
	0x03D909E0 CINC W1, W8, EQ
	0x03D909E4 MOV X3, X31
	0x03D909E8 LDP X30, X21, [X31], #0x20
	0x03D909EC B 0x3DA3EA8
	0x03D909F0 BL 0x1C16F20
	0x03D909F4 MOV W0, W31
	0x03D909F8 RET
	0x03D909FC STP X30, X21, [X31 - 0x20]!
	0x03D90A00 STP X20, X19, [X31 + 0x10]
	0x03D90A04 ADRP X20, 0x657000
	0x03D90A08 LDRB W8, [X20 + 0xE56]
	0x03D90A0C MOV X19, X0
	0x03D90A10 TBNZ X8, 0x0, 0x3D90A40
	0x03D90A14 ADRP X0, 0x363000
	0x03D90A18 LDR X0, [X0 + 0xA28]
	0x03D90A1C BL 0x1C16CF4
	0x03D90A20 ADRP X0, 0x3D7000
	0x03D90A24 LDR X0, [X0 + 0xAE8]
	0x03D90A28 BL 0x1C16CF4
	0x03D90A2C ADRP X0, 0x3D7000
	0x03D90A30 LDR X0, [X0 + 0xAF0]
	0x03D90A34 BL 0x1C16CF4
	0x03D90A38 MOVZ W8, 0x1
	0x03D90A3C STRB W8, [X20 + 0xE56]
	0x03D90A40 CBZ X19, 0x3D90AC0
	0x03D90A44 MOV X0, X19
	0x03D90A48 MOV X1, X31
	0x03D90A4C BL 0x33BE520
	0x03D90A50 CBZ X0, 0x3D90AC0
	0x03D90A54 LDR X8, [X0]
	0x03D90A58 ADRP X19, 0x3D7000
	0x03D90A5C ADRP X20, 0x3D7000
	0x03D90A60 ADRP X21, 0x363000
	0x03D90A64 LDR X9, [X8 + 0x2E8]
	0x03D90A68 LDR X1, [X8 + 0x2F0]
	0x03D90A6C LDR X19, [X19 + 0xAE8]
	0x03D90A70 LDR X20, [X20 + 0xAF0]
	0x03D90A74 LDR X21, [X21 + 0xA28]
	0x03D90A78 BLR X9
	0x03D90A7C LDR X8, [X19]
	0x03D90A80 LDR X2, [X20]
	0x03D90A84 MOV X1, X0
	0x03D90A88 MOV X3, X31
	0x03D90A8C MOV X0, X8
	0x03D90A90 BL 0x32274B8
	0x03D90A94 LDR X8, [X21]
	0x03D90A98 MOV X19, X0
	0x03D90A9C LDR W9, [X8 + 0xE0]
	0x03D90AA0 CBNZ W9, 0x3D90AAC
	0x03D90AA4 MOV X0, X8
	0x03D90AA8 BL 0x1C16DFC
	0x03D90AAC MOV X0, X19
	0x03D90AB0 LDP X20, X19, [X31 + 0x10]
	0x03D90AB4 MOV X1, X31
	0x03D90AB8 LDP X30, X21, [X31], #0x20
	0x03D90ABC B 0x3C0649C
	0x03D90AC0 BL 0x1C16F20
	0x03D90AC4 LDR X0, [X0 + 0x18]
	0x03D90AC8 RET
	0x03D90ACC STP X30, X23, [X31 - 0x30]!
	0x03D90AD0 STP X22, X21, [X31 + 0x10]
	0x03D90AD4 STP X20, X19, [X31 + 0x20]
	0x03D90AD8 ADRP X22, 0x657000
	0x03D90ADC ADRP X23, 0x364000
	0x03D90AE0 ADRP X21, 0x367000
	0x03D90AE4 LDRB W8, [X22 + 0xE57]
	0x03D90AE8 LDR X23, [X23 + 0xE30]
	0x03D90AEC LDR X21, [X21 + 0xB70]
	0x03D90AF0 MOV X19, X1
	0x03D90AF4 MOV X20, X0
	0x03D90AF8 TBNZ X8, 0x0, 0x3D90B1C
	0x03D90AFC ADRP X0, 0x367000
	0x03D90B00 LDR X0, [X0 + 0xB70]
	0x03D90B04 BL 0x1C16CF4
	0x03D90B08 ADRP X0, 0x364000
	0x03D90B0C LDR X0, [X0 + 0xE30]
	0x03D90B10 BL 0x1C16CF4
	0x03D90B14 MOVZ W8, 0x1
	0x03D90B18 STRB W8, [X22 + 0xE57]
	0x03D90B1C LDR X0, [X23]
	0x03D90B20 BL 0x1C16F10
	0x03D90B24 LDR X1, [X21]
	0x03D90B28 MOV X21, X0
	0x03D90B2C BL 0x2FDBF14
	0x03D90B30 MOVZ W8, 0x1
	0x03D90B34 MOV X0, X20
	0x03D90B38 MOV X1, X31
	0x03D90B3C STR X21, [X20 + 0x18]
	0x03D90B40 STRB W8, [X20 + 0x20]
	0x03D90B44 BL 0x33BDD8C
	0x03D90B48 STR X19, [X20 + 0x10]
	0x03D90B4C LDP X20, X19, [X31 + 0x20]
	0x03D90B50 LDP X22, X21, [X31 + 0x10]
	0x03D90B54 LDP X30, X23, [X31], #0x30
	0x03D90B58 RET
	0x03D90B5C LDRB W0, [X0 + 0x20]

ISIL:
	001 Subtract X31, X31, 480
	002 Move [X31+432], X29
	003 Move [X31+448], X30
	004 Move [X31+456], X21
	005 Move [X31+464], X20
	006 Move [X31+472], X19
	007 Move X21, 0x658000
	008 Move W8, [X21+3650]
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x3D8000
	016 Move X0, [X0+2688]
	017 Call 0x1C17CF4
	018 Move X0, 0x3D8000
	019 Move X0, [X0+2696]
	020 Call 0x1C17CF4
	021 Move X0, 0x3D8000
	022 Move X0, [X0+2704]
	023 Call 0x1C17CF4
	024 Move X0, 0x3D8000
	025 Move X0, [X0+2712]
	026 Call 0x1C17CF4
	027 Move X0, 0x3D8000
	028 Move X0, [X0+2720]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3650], W8
	032 Move X0, X20
	033 Move X1, X31
	034 Call Touch.get_phase, X0
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X9, -52391936
	037 Move W8, W0
	038 Add X9, X9, 72
	039 NotImplemented "Instruction ADR not yet implemented."
	040 Move W11, [X9]
	041 Add X10, X10, X11
	042 CallNoReturn X10
	043 Add X0, X31, 288
	044 Move W2, 68
	045 Move X1, X20
	046 Call 0x3EB2AC0
	047 Move X8, 0x3D8000
	048 Move X8, [X8+2712]
	049 Add X0, X31, 360
	050 Add X1, X31, 288
	051 Move X0, X31
	052 Add X0, X31, 216
	053 Move W2, 68
	054 Move X1, X20
	055 Call 0x3EB2AC0
	056 Move X8, 0x3D8000
	057 Move X8, [X8+2688]
	058 Add X0, X31, 360
	059 Add X1, X31, 216
	060 Add X0, X31, 144
	061 Move W2, 68
	062 Move X1, X20
	063 Call 0x3EB2AC0
	064 Move X8, 0x3D8000
	065 Move X8, [X8+2720]
	066 Add X0, X31, 360
	067 Add X1, X31, 144
	068 Add X0, X31, 72
	069 Move W2, 68
	070 Move X1, X20
	071 Call 0x3EB2AC0
	072 Move X8, 0x3D8000
	073 Move X8, [X8+2696]
	074 Add X0, X31, 360
	075 Add X1, X31, 72
	076 Add X0, X31, 0
	077 Move W2, 68
	078 Move X1, X20
	079 Call 0x3EB2AC0
	080 Move X8, 0x3D8000
	081 Move X8, [X8+2704]
	082 Add X0, X31, 360
	083 Add X1, X31, 0
	084 Move X20, [X8]
	085 Move W2, 68
	086 Call 0x3EB2AC0
	087 Add X0, X31, 360
	088 Move W1, W19
	089 Move X2, X20
	090 Call 0x24A5504, X0, X1
	091 Move X20, [X31+464]
	092 Move X19, [X31+472]
	093 Move X30, [X31+448]
	094 Move X21, [X31+456]
	095 Move X29, [X31+432]
	096 Add X31, X31, 480
	097 Return X0

Method: UnityEngine.UIElements.EventBase MakePenEvent(UnityEngine.PenData pen, UnityEngine.EventModifiers modifiers)

Disassembly:
	0x03D90B60 RET
	0x03D90B64 AND W8, W1, 0x1
	0x03D90B68 STRB W8, [X0 + 0x20]
	0x03D90B6C RET
	0x03D90B70 LDR X8, [X0]
	0x03D90B74 LDR X2, [X8 + 0x208]
	0x03D90B78 LDR X1, [X8 + 0x210]
	0x03D90B7C BR X2
	0x03D90B80 SUB X31, X31, 0x70
	0x03D90B84 STP X29, X30, [X31 + 0x10]
	0x03D90B88 STP X28, X27, [X31 + 0x20]
	0x03D90B8C STP X26, X25, [X31 + 0x30]
	0x03D90B90 STP X24, X23, [X31 + 0x40]
	0x03D90B94 STP X22, X21, [X31 + 0x50]
	0x03D90B98 STP X20, X19, [X31 + 0x60]
	0x03D90B9C ADRP X22, 0x657000
	0x03D90BA0 LDRB W9, [X22 + 0xE58]
	0x03D90BA4 MOV W23, W2
	0x03D90BA8 MOV X21, X1
	0x03D90BAC MOV X20, X0
	0x03D90BB0 MOV X19, X8
	0x03D90BB4 TBNZ X9, 0x0, 0x3D90C68
	0x03D90BB8 ADRP X0, 0x3D7000
	0x03D90BBC LDR X0, [X0 + 0xAF8]
	0x03D90BC0 BL 0x1C16CF4
	0x03D90BC4 ADRP X0, 0x363000
	0x03D90BC8 LDR X0, [X0 + 0xE00]
	0x03D90BCC BL 0x1C16CF4
	0x03D90BD0 ADRP X0, 0x38B000
	0x03D90BD4 LDR X0, [X0 + 0x7B8]
	0x03D90BD8 BL 0x1C16CF4
	0x03D90BDC ADRP X0, 0x38B000
	0x03D90BE0 LDR X0, [X0 + 0x7C0]
	0x03D90BE4 BL 0x1C16CF4
	0x03D90BE8 ADRP X0, 0x363000
	0x03D90BEC LDR X0, [X0 + 0xE18]
	0x03D90BF0 BL 0x1C16CF4
	0x03D90BF4 ADRP X0, 0x363000
	0x03D90BF8 LDR X0, [X0 + 0x758]
	0x03D90BFC BL 0x1C16CF4
	0x03D90C00 ADRP X0, 0x364000
	0x03D90C04 LDR X0, [X0 + 0xE10]
	0x03D90C08 BL 0x1C16CF4
	0x03D90C0C ADRP X0, 0x36A000
	0x03D90C10 LDR X0, [X0 + 0x858]
	0x03D90C14 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+144], X30
	003 Move [X31+152], X21
	004 Move [X31+160], X20
	005 Move [X31+168], X19
	006 Move X21, 0x658000
	007 Move W8, [X21+3651]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x3D8000
	015 Move X0, [X0+2728]
	016 Call 0x1C17CF4
	017 Move X0, 0x3D8000
	018 Move X0, [X0+2736]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3651], W8
	022 Move W8, [X20+28]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X9, 0x3D8000
	026 Move X8, [X20+32]
	027 Move V0, [X20]
	028 Move V1, [X20+16]
	029 Move X9, [X9+2728]
	030 Move [X31+80], X8
	031 Move [X31+48], V0
	032 Move [X31+56], V1
	033 Move X9, 0x3D8000
	034 Move X8, [X20+32]
	035 Move V0, [X20]
	036 Move V1, [X20+16]
	037 Move X9, [X9+2736]
	038 Move [X31+32], X8
	039 Move [X31], V0
	040 Move [X31+8], V1
	041 Move X2, [X9]
	042 Add X0, X31, 96
	043 Move W1, W19
	044 Move [X31+96], V0
	045 Move [X31+104], V1
	046 Move [X31+128], X8
	047 Call 0x24A5AE4, X0, X1
	048 Move X0, X31
	049 Move X20, [X31+160]
	050 Move X19, [X31+168]
	051 Move X30, [X31+144]
	052 Move X21, [X31+152]
	053 Add X31, X31, 176
	054 Return X0

Method: System.Boolean ProcessTouchEvents()

Disassembly:
	0x03D8EB4C CMP W0, 0x6
	0x03D8EB50 B.NE 0x3D8EBB0
	0x03D8EB54 LDR X20, [X19 + 0x10]
	0x03D8EB58 CBNZ X20, 0x3D8EB70
	0x03D8EB5C MOV X0, X19
	0x03D8EB60 BL 0x3D8D55C
	0x03D8EB64 MOV X20, X0
	0x03D8EB68 STR X0, [X19 + 0x10]
	0x03D8EB6C CBZ X0, 0x3D8F058
	0x03D8EB70 LDR X8, [X20]
	0x03D8EB74 LDR X1, [X21]
	0x03D8EB78 LDRH W9, [X8 + 0x12E]
	0x03D8EB7C CBZ X9, 0x3D8EBA0
	0x03D8EB80 LDR X10, [X8 + 0xB0]
	0x03D8EB84 ADD X10, X10, 0x8
	0x03D8EB88 LDUR X11, [X10 - 0x8]
	0x03D8EB8C CMP X11, X1
	0x03D8EB90 B.EQ 0x3D8EC78
	0x03D8EB94 SUBS X9, X9, 0x1
	0x03D8EB98 ADD X10, X10, 0x10
	0x03D8EB9C B.NE 0x3D8EB88
	0x03D8EBA0 MOVZ W2, 0x9
	0x03D8EBA4 MOV X0, X20
	0x03D8EBA8 BL 0x1C5C788
	0x03D8EBAC B 0x3D8EC88
	0x03D8EBB0 LDRB W8, [X19 + 0x40]
	0x03D8EBB4 CBNZ W8, 0x3D8EBC0
	0x03D8EBB8 LDRB W8, [X19 + 0x41]
	0x03D8EBBC CBZ W8, 0x3D8ED3C
	0x03D8EBC0 LDR X0, [X19 + 0x48]
	0x03D8EBC4 CBZ X0, 0x3D8F058
	0x03D8EBC8 MOV X1, X31
	0x03D8EBCC BL 0x3C63270
	0x03D8EBD0 CMP W0, 0x14
	0x03D8EBD4 B.EQ 0x3D8ED50
	0x03D8EBD8 LDR X0, [X19 + 0x48]
	0x03D8EBDC CBZ X0, 0x3D8F058
	0x03D8EBE0 MOV X1, X31
	0x03D8EBE4 BL 0x3C63270
	0x03D8EBE8 CMP W0, 0x15
	0x03D8EBEC MOV W20, W31
	0x03D8EBF0 B.NE 0x3D8EA34
	0x03D8EBF4 B 0x3D8ED50
	0x03D8EBF8 MOV X22, X26
	0x03D8EBFC MOV X29, X21
	0x03D8EC00 BL 0x1C16DFC
	0x03D8EC04 LDR X0, [X24]
	0x03D8EC08 LDR X8, [X0 + 0xB8]
	0x03D8EC0C LDR X0, [X20]
	0x03D8EC10 MOV X26, X20
	0x03D8EC14 LDR X21, [X8]
	0x03D8EC18 BL 0x1C16F10
	0x03D8EC1C LDR X2, [X22]
	0x03D8EC20 MOV X1, X21
	0x03D8EC24 MOV X3, X31
	0x03D8EC28 MOV X20, X0
	0x03D8EC2C BL 0x2D30578
	0x03D8EC30 LDR X8, [X24]
	0x03D8EC34 MOV X21, X29
	0x03D8EC38 MOV X29, X25
	0x03D8EC3C MOV X25, X26
	0x03D8EC40 LDR X8, [X8 + 0xB8]
	0x03D8EC44 MOV X26, X22
	0x03D8EC48 STR X20, [X8 + 0x8]
	0x03D8EC4C LDR X3, [X27]
	0x03D8EC50 MOV X0, X19
	0x03D8EC54 MOV X1, X20
	0x03D8EC58 MOV X2, X19
	0x03D8EC5C BL 0x21A97F4
	0x03D8EC60 LDR X1, [X19 + 0x48]
	0x03D8EC64 LDR W2, [X19 + 0x68]
	0x03D8EC68 MOV X0, X19
	0x03D8EC6C BL 0x3D8F408
	0x03D8EC70 MOV W20, W31
	0x03D8EC74 B 0x3D8EA34
	0x03D8EC78 LDR W9, [X10]
	0x03D8EC7C ADD W9, W9, 0x9
	0x03D8EC80 ADD X8, X8, W9, 0x4, SXTW
	0x03D8EC84 ADD X0, X8, 0x138
	0x03D8EC88 LDP X8, X1, [X0]
	0x03D8EC8C MOV X0, X20
	0x03D8EC90 BLR X8
	0x03D8EC94 LDR X0, [X29]
	0x03D8EC98 MOV V8.16B, V0.16B
	0x03D8EC9C MOV V9.16B, V1.16B
	0x03D8ECA0 LDR W8, [X0 + 0xE0]
	0x03D8ECA4 CBNZ W8, 0x3D8ECAC
	0x03D8ECA8 BL 0x1C16DFC
	0x03D8ECAC ADD X0, X31, 0x28
	0x03D8ECB0 MOV V0.16B, V8.16B
	0x03D8ECB4 MOV V1.16B, V9.16B
	0x03D8ECB8 MOV X1, X31
	0x03D8ECBC BL 0x3E16C40
	0x03D8ECC0 LDR X0, [X19 + 0x48]
	0x03D8ECC4 CBZ X0, 0x3D8F058
	0x03D8ECC8 LDP S12, S13, [X19 + 0x78]
	0x03D8ECCC MOV X1, X31
	0x03D8ECD0 MOV V8.16B, V0.16B
	0x03D8ECD4 MOV V9.16B, V1.16B
	0x03D8ECD8 BL 0x3C62D5C
	0x03D8ECDC LDR X0, [X28]
	0x03D8ECE0 MOV V10.16B, V0.16B
	0x03D8ECE4 MOV V11.16B, V1.16B
	0x03D8ECE8 LDR W8, [X0 + 0xE0]
	0x03D8ECEC CBNZ W8, 0x3D8ECF8
	0x03D8ECF0 BL 0x1C16DFC
	0x03D8ECF4 LDR X0, [X28]
	0x03D8ECF8 LDR X8, [X0 + 0xB8]
	0x03D8ECFC LDR X0, [X24]
	0x03D8ED00 LDR X20, [X31 + 0x28]
	0x03D8ED04 LDR W8, [X8 + 0x8]
	0x03D8ED08 STR W8, [X31 + 0xC]
	0x03D8ED0C LDR W8, [X0 + 0xE0]
	0x03D8ED10 CBNZ W8, 0x3D8ED1C
	0x03D8ED14 BL 0x1C16DFC
	0x03D8ED18 LDR X0, [X24]
	0x03D8ED1C MOV X23, X24
	0x03D8ED20 LDR X8, [X0 + 0xB8]
	0x03D8ED24 LDR X22, [X8 + 0x10]
	0x03D8ED28 CBNZ X22, 0x3D8EFA4
	0x03D8ED2C LDR W8, [X0 + 0xE0]
	0x03D8ED30 CBZ W8, 0x3D8EF44
	0x03D8ED34 ADRP X9, 0x3D9000
	0x03D8ED38 B 0x3D8EF50
	0x03D8ED3C LDR X0, [X19 + 0x48]
	0x03D8ED40 CBZ X0, 0x3D8F058
	0x03D8ED44 MOV X1, X31
	0x03D8ED48 BL 0x3C62E78
	0x03D8ED4C CBZ W0, 0x3D8EBC0
	0x03D8ED50 LDR X0, [X19 + 0x48]
	0x03D8ED54 CBZ X0, 0x3D8F058
	0x03D8ED58 MOV X1, X31
	0x03D8ED5C BL 0x3C62E78
	0x03D8ED60 CBZ W0, 0x3D8EDA4
	0x03D8ED64 LDR X0, [X19 + 0x48]
	0x03D8ED68 CBZ X0, 0x3D8F058
	0x03D8ED6C MOV X1, X31
	0x03D8ED70 BL 0x3C62E78
	0x03D8ED74 LDR X8, [X28]
	0x03D8ED78 MOV W20, W0
	0x03D8ED7C LDR W9, [X8 + 0xE0]
	0x03D8ED80 CBNZ W9, 0x3D8ED90
	0x03D8ED84 MOV X0, X8
	0x03D8ED88 BL 0x1C16DFC
	0x03D8ED8C LDR X8, [X28]
	0x03D8ED90 LDR X8, [X8 + 0xB8]
	0x03D8ED94 CMP W20, 0x1
	0x03D8ED98 B.NE 0x3D8EDC4
	0x03D8ED9C ADD X8, X8, 0xC
	0x03D8EDA0 B 0x3D8EDC8
	0x03D8EDA4 LDR X0, [X28]
	0x03D8EDA8 LDR W8, [X0 + 0xE0]
	0x03D8EDAC CBNZ W8, 0x3D8EDB8
	0x03D8EDB0 BL 0x1C16DFC
	0x03D8EDB4 LDR X0, [X28]
	0x03D8EDB8 LDR X8, [X0 + 0xB8]
	0x03D8EDBC ADD X8, X8, 0x8
	0x03D8EDC0 B 0x3D8EDC8
	0x03D8EDC4 ADD X8, X8, 0x14
	0x03D8EDC8 LDR X0, [X19 + 0x48]
	0x03D8EDCC CBZ X0, 0x3D8F058
	0x03D8EDD0 LDR W20, [X8]
	0x03D8EDD4 MOV X1, X31
	0x03D8EDD8 BL 0x3C62C40
	0x03D8EDDC LDR X0, [X29]
	0x03D8EDE0 MOV V8.16B, V0.16B
	0x03D8EDE4 MOV V9.16B, V1.16B
	0x03D8EDE8 LDR W8, [X0 + 0xE0]
	0x03D8EDEC CBNZ W8, 0x3D8EDF4
	0x03D8EDF0 BL 0x1C16DFC
	0x03D8EDF4 ADD X0, X31, 0x20
	0x03D8EDF8 MOV V0.16B, V8.16B
	0x03D8EDFC MOV V1.16B, V9.16B
	0x03D8EE00 MOV X1, X31
	0x03D8EE04 BL 0x3E16CC0
	0x03D8EE08 LDR X0, [X19 + 0x48]
	0x03D8EE0C CBZ X0, 0x3D8F058
	0x03D8EE10 MOV X1, X31
	0x03D8EE14 MOV V8.16B, V0.16B
	0x03D8EE18 MOV V9.16B, V1.16B
	0x03D8EE1C STR W20, [X31 + 0xC]
	0x03D8EE20 BL 0x3C62D5C
	0x03D8EE24 LDR X0, [X24]
	0x03D8EE28 LDR X20, [X31 + 0x20]
	0x03D8EE2C MOV V10.16B, V0.16B
	0x03D8EE30 MOV V11.16B, V1.16B
	0x03D8EE34 LDR W8, [X0 + 0xE0]
	0x03D8EE38 MOV X22, X21
	0x03D8EE3C MOV X25, X29
	0x03D8EE40 CBNZ W8, 0x3D8EE4C
	0x03D8EE44 BL 0x1C16DFC
	0x03D8EE48 LDR X0, [X24]
	0x03D8EE4C LDR X8, [X0 + 0xB8]
	0x03D8EE50 MOV X29, X22
	0x03D8EE54 MOV X21, X23
	0x03D8EE58 LDR X22, [X8 + 0x18]
	0x03D8EE5C CBNZ X22, 0x3D8EEB0
	0x03D8EE60 LDR W8, [X0 + 0xE0]
	0x03D8EE64 CBNZ W8, 0x3D8EE70
	0x03D8EE68 BL 0x1C16DFC
	0x03D8EE6C LDR X0, [X24]
	0x03D8EE70 LDR X8, [X0 + 0xB8]
	0x03D8EE74 LDR X23, [X8]
	0x03D8EE78 ADRP X8, 0x3D9000
	0x03D8EE7C LDR X8, [X8 + 0xA18]
	0x03D8EE80 LDR X0, [X8]
	0x03D8EE84 BL 0x1C16F10
	0x03D8EE88 ADRP X8, 0x3D9000
	0x03D8EE8C LDR X8, [X8 + 0xA38]
	0x03D8EE90 MOV X1, X23
	0x03D8EE94 MOV X3, X31
	0x03D8EE98 MOV X22, X0
	0x03D8EE9C LDR X2, [X8]
	0x03D8EEA0 BL 0x2D40DB0
	0x03D8EEA4 LDR X8, [X24]
	0x03D8EEA8 LDR X8, [X8 + 0xB8]
	0x03D8EEAC STR X22, [X8 + 0x18]
	0x03D8EEB0 LDR X23, [X19 + 0x48]
	0x03D8EEB4 CBZ X23, 0x3D8F058
	0x03D8EEB8 MOV X0, X23
	0x03D8EEBC MOV X1, X31
	0x03D8EEC0 BL 0x3C63270
	0x03D8EEC4 CBZ W0, 0x3D8EEE4
	0x03D8EEC8 LDR X0, [X19 + 0x48]
	0x03D8EECC CBZ X0, 0x3D8F058
	0x03D8EED0 MOV X1, X31
	0x03D8EED4 BL 0x3C63270
	0x03D8EED8 CMP W0, 0x1E
	0x03D8EEDC CSET W5, EQ
	0x03D8EEE0 B 0x3D8EEE8
	0x03D8EEE4 MOVZ W5, 0x1
	0x03D8EEE8 ADRP X8, 0x3D9000
	0x03D8EEEC LDR X8, [X8 + 0xA00]
	0x03D8EEF0 LDR W1, [X31 + 0xC]
	0x03D8EEF4 FMOV S2, W31
	0x03D8EEF8 FMOV S5, W31
	0x03D8EEFC LDR X6, [X8]
	0x03D8EF00 MOV X0, X19
	0x03D8EF04 MOV V0.16B, V8.16B
	0x03D8EF08 MOV V1.16B, V9.16B
	0x03D8EF0C MOV V3.16B, V10.16B
	0x03D8EF10 MOV V4.16B, V11.16B
	0x03D8EF14 MOV X2, X20
	0x03D8EF18 MOV X3, X22
	0x03D8EF1C MOV X4, X23
	0x03D8EF20 BL 0x21AB1F0
	0x03D8EF24 MOV X8, X29
	0x03D8EF28 MOV X29, X25
	0x03D8EF2C ADRP X25, 0x3D9000
	0x03D8EF30 LDR X25, [X25 + 0xA10]
	0x03D8EF34 MOV W20, W31
	0x03D8EF38 MOV X23, X21
	0x03D8EF3C MOV X21, X8
	0x03D8EF40 B 0x3D8EA34
	0x03D8EF44 BL 0x1C16DFC
	0x03D8EF48 ADRP X9, 0x3D9000
	0x03D8EF4C LDR X0, [X23]
	0x03D8EF50 LDR X9, [X9 + 0xA20]
	0x03D8EF54 MOV X27, X23
	0x03D8EF58 LDR X8, [X0 + 0xB8]
	0x03D8EF5C LDR X0, [X9]
	0x03D8EF60 LDR X23, [X8]
	0x03D8EF64 BL 0x1C16F10
	0x03D8EF68 ADRP X8, 0x3D9000
	0x03D8EF6C LDR X8, [X8 + 0xA30]
	0x03D8EF70 MOV X1, X23
	0x03D8EF74 MOV X3, X31
	0x03D8EF78 MOV X22, X0
	0x03D8EF7C LDR X2, [X8]
	0x03D8EF80 BL 0x2D40C68
	0x03D8EF84 LDR X8, [X27]
	0x03D8EF88 MOV X23, X27
	0x03D8EF8C ADRP X28, 0x38E000
	0x03D8EF90 ADRP X27, 0x3D9000
	0x03D8EF94 LDR X8, [X8 + 0xB8]

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+240], D11
	003 Move [X31+248], D10
	004 Move [X31+256], D9
	005 Move [X31+264], D8
	006 Move [X31+272], X29
	007 Move [X31+280], X30
	008 Move [X31+288], X28
	009 Move [X31+296], X27
	010 Move [X31+304], X26
	011 Move [X31+312], X25
	012 Move [X31+320], X24
	013 Move [X31+328], X23
	014 Move [X31+336], X22
	015 Move [X31+344], X21
	016 Move [X31+352], X20
	017 Move [X31+360], X19
	018 Move X20, 0x65A000
	019 Move W8, [X20+3652]
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {48}
	025 Move X0, 0x3DA000
	026 Move X0, [X0+2464]
	027 Call 0x1C17CF4
	028 Move X0, 0x3DA000
	029 Move X0, [X0+2472]
	030 Call 0x1C17CF4
	031 Move X0, 0x3DA000
	032 Move X0, [X0+2408]
	033 Call 0x1C17CF4
	034 Move X0, 0x38F000
	035 Move X0, [X0+3664]
	036 Call 0x1C17CF4
	037 Move X0, 0x3DA000
	038 Move X0, [X0+2480]
	039 Call 0x1C17CF4
	040 Move X0, 0x3DA000
	041 Move X0, [X0+2456]
	042 Call 0x1C17CF4
	043 Move X0, 0x38E000
	044 Move X0, [X0+2352]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X20+3652], W8
	048 Move X25, 0x3DA000
	049 Move X27, 0x38F000
	050 Move X28, 0x3DA000
	051 Move X29, 0x3DA000
	052 Move X25, [X25+2408]
	053 Move X27, [X27+3664]
	054 Move X28, [X28+2456]
	055 Move X29, [X29+2464]
	056 NotImplemented "Instruction MOVI not yet implemented."
	057 Move W20, W31
	058 Move [X31+160], W31
	059 Move [X31+80], X31
	060 Move [X31+88], X31
	061 Move [X31+128], V0
	062 Move [X31+136], V0
	063 Move [X31+96], V0
	064 Move [X31+104], V0
	065 Move X21, [X19+16]
	066 Compare X21, 0
	067 JumpIfNotEqual {74}
	068 Move X0, X19
	069 Call DefaultEventSystem.GetDefaultInput, X0
	070 Move X21, X0
	071 Move [X19+16], X0
	072 Compare X0, 0
	073 JumpIfEqual {301}
	074 Move X8, [X21]
	075 Move X1, [X25]
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move W2, 4
	086 Move X0, X21
	087 Call 0x1C5D788
	088 Move W9, [X10]
	089 Add W9, W9, 4
	090 Add X8, X8, W9
	091 Add X0, X8, 312
	092 Move X8, [X0]
	093 Move X1, [X0+8]
	094 Move X0, X21
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X21, [X19+16]
	097 Move W22, W0
	098 Compare X21, 0
	099 JumpIfNotEqual {106}
	100 Move X0, X19
	101 Call DefaultEventSystem.GetDefaultInput, X0
	102 Move X21, X0
	103 Move [X19+16], X0
	104 Compare X0, 0
	105 JumpIfEqual {301}
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X8, [X21]
	108 Move X1, [X25]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move W2, 5
	119 Move X0, X21
	120 Call 0x1C5D788
	121 Move W9, [X10]
	122 Add W9, W9, 5
	123 Add X8, X8, W9
	124 Add X0, X8, 312
	125 Move X9, [X0]
	126 Move X2, [X0+8]
	127 Add X8, X31, 168
	128 Move X0, X21
	129 Move W1, W20
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Add X0, X31, 96
	132 Add X1, X31, 168
	133 Move W2, 68
	134 Call 0x3EB2AC0
	135 Add X0, X31, 96
	136 Move X1, X31
	137 Call Touch.get_type, X0
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Add X0, X31, 96
	140 Move X1, X31
	141 Call Touch.get_position, X0
	142 Move X8, 0x38E000
	143 Move X8, [X8+2352]
	144 Move V8, V0
	145 Move V9, V1
	146 Move X0, [X8]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Add X0, X31, 88
	152 Move V0, V8
	153 Move V1, V9
	154 Move X1, X31
	155 Call UIElementsRuntimeUtility.MultiDisplayBottomLeftToPanelPosition, X0, X1
	156 Add X0, X31, 96
	157 Move X1, X31
	158 Call Touch.set_position, X0, X1
	159 Add X0, X31, 96
	160 Move X1, X31
	161 Call Touch.get_rawPosition, X0
	162 Add X0, X31, 80
	163 Move X1, X31
	164 Call UIElementsRuntimeUtility.MultiDisplayBottomLeftToPanelPosition, X0, X1
	165 Add X0, X31, 96
	166 Move X1, X31
	167 Call Touch.set_rawPosition, X0, X1
	168 Add X0, X31, 96
	169 Move X1, X31
	170 Call Touch.get_deltaPosition, X0
	171 Move X0, X31
	172 Call UIElementsRuntimeUtility.ScreenBottomLeftToPanelDelta, X0
	173 Add X0, X31, 96
	174 Move X1, X31
	175 Call Touch.set_deltaPosition, X0, X1
	176 Add X0, X31, 96
	177 Move X1, X31
	178 Call Touch.get_position, X0
	179 Add X0, X31, 96
	180 Move X1, X31
	181 Move V8, V0
	182 Move V9, V1
	183 Call Touch.get_deltaPosition, X0
	184 Move X0, [X27]
	185 Move V10, V0
	186 Move V11, V1
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {192}
	190 Call 0x1C17DFC
	191 Move X0, [X27]
	192 Move X8, [X0+184]
	193 Add X0, X31, 96
	194 Move X1, X31
	195 Move W26, [X8+12]
	196 Call Touch.get_fingerId, X0
	197 Move X8, [X28]
	198 Move X21, [X31+88]
	199 Move W22, W0
	200 Move W9, [X8+224]
	201 Compare W9, 0
	202 JumpIfNotEqual {206}
	203 Move X0, X8
	204 Call 0x1C17DFC
	205 Move X8, [X28]
	206 Move X9, [X8+184]
	207 Move X23, [X9+80]
	208 Compare X23, 0
	209 JumpIfNotEqual {232}
	210 Move W9, [X8+224]
	211 Compare W9, 0
	212 JumpIfNotEqual {216}
	213 Move X0, X8
	214 Call 0x1C17DFC
	215 Move X8, [X28]
	216 Move X8, [X8+184]
	217 Move X24, [X8]
	218 Move X8, 0x3DA000
	219 Move X8, [X8+2472]
	220 Move X0, [X8]
	221 Call 0x1C17F10
	222 Move X8, 0x3DA000
	223 Move X8, [X8+2480]
	224 Move X1, X24
	225 Move X3, X31
	226 Move X23, X0
	227 Move X2, [X8]
	228 Call Func`4<Vector3, Vector3, Touch, Object>..ctor, X0, X1, X2
	229 Move X8, [X28]
	230 Move X8, [X8+184]
	231 Move [X8+80], X23
	232 Add X0, X31, 8
	233 Add X1, X31, 96
	234 Move W2, 68
	235 Call 0x3EB2AC0
	236 Compare X19, 0
	237 JumpIfEqual {301}
	238 Move X24, [X29]
	239 Add X0, X31, 168
	240 Add X1, X31, 8
	241 Move W2, 68
	242 Add W22, W22, W26
	243 Call 0x3EB2AC0
	244 Move S2, W31
	245 Move S5, W31
	246 Add X4, X31, 168
	247 Move X0, X19
	248 Move V0, V8
	249 Move V1, V9
	250 Move V3, V10
	251 Move V4, V11
	252 Move W1, W22
	253 Move X2, X21
	254 Move X3, X23
	255 Move W5, W31
	256 Move X6, X24
	257 Call DefaultEventSystem.SendPositionBasedEvent, X0, X1, X2, X3, X4, X5, X6, X7
	258 Add W20, W20, 1
	259 Move X8, [X21]
	260 Move X1, [X25]
	261 NotImplemented "Instruction LDRH not yet implemented."
	262 Compare X9, 0
	263 JumpIfEqual {270}
	264 Move X10, [X8+176]
	265 Add X10, X10, 8
	266 NotImplemented "Instruction LDUR not yet implemented."
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Subtract X9, X9, 1
	269 Add X10, X10, 16
	270 Move W2, 4
	271 Move X0, X21
	272 Call 0x1C5D788
	273 Move W9, [X10]
	274 Add W9, W9, 4
	275 Add X8, X8, W9
	276 Add X0, X8, 312
	277 Move X8, [X0]
	278 Move X1, [X0+8]
	279 Move X0, X21
	280 NotImplemented "Instruction BLR not yet implemented."
	281 Move X20, [X31+352]
	282 Move X19, [X31+360]
	283 Move X22, [X31+336]
	284 Move X21, [X31+344]
	285 Move X24, [X31+320]
	286 Move X23, [X31+328]
	287 Move X26, [X31+304]
	288 Move X25, [X31+312]
	289 Move X28, [X31+288]
	290 Move X27, [X31+296]
	291 Move X29, [X31+272]
	292 Move X30, [X31+280]
	293 Move D9, [X31+256]
	294 Move D8, [X31+264]
	295 Move D11, [X31+240]
	296 Move D10, [X31+248]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 NotImplemented "Instruction CSET not yet implemented."
	299 Add X31, X31, 368
	300 Return X0
	301 Call 0x1C17F20

Method: System.Boolean ProcessPenEvents()

Disassembly:
	0x03D8E880 LDR X7, [X8]
	0x03D8E884 MOV V0.16B, V8.16B
	0x03D8E888 MOV V1.16B, V9.16B
	0x03D8E88C MOV V3.16B, V10.16B
	0x03D8E890 MOV V4.16B, V11.16B
	0x03D8E894 MOV W1, W22
	0x03D8E898 MOV X2, X24
	0x03D8E89C MOV X3, X25
	0x03D8E8A0 MOV W6, W31
	0x03D8E8A4 BL 0x21AAA94
	0x03D8E8A8 ADD W21, W21, 0x1
	0x03D8E8AC CMP W21, W20
	0x03D8E8B0 B.NE 0x3D8E408
	0x03D8E8B4 LDP X20, X19, [X31 + 0x90]
	0x03D8E8B8 LDP X22, X21, [X31 + 0x80]
	0x03D8E8BC LDP X24, X23, [X31 + 0x70]
	0x03D8E8C0 LDP X26, X25, [X31 + 0x60]
	0x03D8E8C4 LDP X28, X27, [X31 + 0x50]
	0x03D8E8C8 LDP X29, X30, [X31 + 0x40]
	0x03D8E8CC LDP D9, D8, [X31 + 0x30]
	0x03D8E8D0 LDP D11, D10, [X31 + 0x20]
	0x03D8E8D4 LDR V12, [X31 + 0x10]
	0x03D8E8D8 ADD X31, X31, 0xA0
	0x03D8E8DC RET
	0x03D8E8E0 BL 0x1C16F20
	0x03D8E8E4 STR X30, [X31 - 0x10]!
	0x03D8E8E8 MOV X1, X0
	0x03D8E8EC ADD X0, X31, 0x8
	0x03D8E8F0 STR X31, [X31 + 0x8]
	0x03D8E8F4 BL 0x3D8F3C0
	0x03D8E8F8 LDR X0, [X31 + 0x8]
	0x03D8E8FC LDR X30, [X31], #0x10
	0x03D8E900 RET
	0x03D8E904 SUB X31, X31, 0xC0
	0x03D8E908 STP D13, D12, [X31 + 0x30]
	0x03D8E90C STP D11, D10, [X31 + 0x40]
	0x03D8E910 STP D9, D8, [X31 + 0x50]
	0x03D8E914 STP X29, X30, [X31 + 0x60]
	0x03D8E918 STP X28, X27, [X31 + 0x70]
	0x03D8E91C STP X26, X25, [X31 + 0x80]
	0x03D8E920 STP X24, X23, [X31 + 0x90]
	0x03D8E924 STP X22, X21, [X31 + 0xA0]
	0x03D8E928 STP X20, X19, [X31 + 0xB0]
	0x03D8E92C ADRP X20, 0x659000
	0x03D8E930 LDRB W8, [X20 + 0xE3F]
	0x03D8E934 MOV X19, X0
	0x03D8E938 TBNZ X8, 0x0, 0x3D8E9EC
	0x03D8E93C ADRP X0, 0x3D9000
	0x03D8E940 LDR X0, [X0 + 0x9F8]
	0x03D8E944 BL 0x1C16CF4
	0x03D8E948 ADRP X0, 0x3D9000
	0x03D8E94C LDR X0, [X0 + 0xA00]
	0x03D8E950 BL 0x1C16CF4
	0x03D8E954 ADRP X0, 0x3D9000
	0x03D8E958 LDR X0, [X0 + 0xA08]
	0x03D8E95C BL 0x1C16CF4
	0x03D8E960 ADRP X0, 0x3D9000
	0x03D8E964 LDR X0, [X0 + 0xA10]
	0x03D8E968 BL 0x1C16CF4
	0x03D8E96C ADRP X0, 0x3D9000
	0x03D8E970 LDR X0, [X0 + 0xA18]
	0x03D8E974 BL 0x1C16CF4
	0x03D8E978 ADRP X0, 0x3D9000
	0x03D8E97C LDR X0, [X0 + 0xA20]
	0x03D8E980 BL 0x1C16CF4
	0x03D8E984 ADRP X0, 0x3D9000
	0x03D8E988 LDR X0, [X0 + 0x968]
	0x03D8E98C BL 0x1C16CF4
	0x03D8E990 ADRP X0, 0x38E000
	0x03D8E994 LDR X0, [X0 + 0xE50]
	0x03D8E998 BL 0x1C16CF4
	0x03D8E99C ADRP X0, 0x3D9000
	0x03D8E9A0 LDR X0, [X0 + 0xA28]
	0x03D8E9A4 BL 0x1C16CF4
	0x03D8E9A8 ADRP X0, 0x3D9000
	0x03D8E9AC LDR X0, [X0 + 0xA30]
	0x03D8E9B0 BL 0x1C16CF4
	0x03D8E9B4 ADRP X0, 0x3D9000
	0x03D8E9B8 LDR X0, [X0 + 0xA38]
	0x03D8E9BC BL 0x1C16CF4
	0x03D8E9C0 ADRP X0, 0x3D9000
	0x03D8E9C4 LDR X0, [X0 + 0x998]
	0x03D8E9C8 BL 0x1C16CF4
	0x03D8E9CC ADRP X0, 0x38D000
	0x03D8E9D0 LDR X0, [X0 + 0x930]
	0x03D8E9D4 BL 0x1C16CF4
	0x03D8E9D8 ADRP X0, 0x3D9000
	0x03D8E9DC LDR X0, [X0 + 0xA40]
	0x03D8E9E0 BL 0x1C16CF4
	0x03D8E9E4 MOVZ W8, 0x1
	0x03D8E9E8 STRB W8, [X20 + 0xE3F]
	0x03D8E9EC ADRP X24, 0x3D9000
	0x03D8E9F0 ADRP X25, 0x3D9000
	0x03D8E9F4 ADRP X26, 0x3D9000
	0x03D8E9F8 ADRP X27, 0x3D9000
	0x03D8E9FC ADRP X21, 0x3D9000
	0x03D8EA00 ADRP X29, 0x38D000
	0x03D8EA04 ADRP X28, 0x38E000
	0x03D8EA08 ADRP X23, 0x3D9000
	0x03D8EA0C LDR X24, [X24 + 0x998]
	0x03D8EA10 LDR X25, [X25 + 0xA10]
	0x03D8EA14 LDR X26, [X26 + 0xA28]
	0x03D8EA18 LDR X27, [X27 + 0x9F8]
	0x03D8EA1C LDR X21, [X21 + 0x968]
	0x03D8EA20 LDR X29, [X29 + 0x930]
	0x03D8EA24 LDR X28, [X28 + 0xE50]
	0x03D8EA28 LDR X23, [X23 + 0xA30]
	0x03D8EA2C STP X31, X31, [X31 + 0x20]
	0x03D8EA30 MOVZ W20, 0x1
	0x03D8EA34 LDR X0, [X19 + 0x48]
	0x03D8EA38 MOV X1, X31
	0x03D8EA3C BL 0x3C634AC
	0x03D8EA40 TBZ X0, 0x0, 0x3D8F02C
	0x03D8EA44 LDR X0, [X19 + 0x48]
	0x03D8EA48 CBZ X0, 0x3D8F058
	0x03D8EA4C MOV X1, X31
	0x03D8EA50 BL 0x3C63270
	0x03D8EA54 CMP W0, 0xB
	0x03D8EA58 B.EQ 0x3D8EA74
	0x03D8EA5C LDR X0, [X19 + 0x48]
	0x03D8EA60 CBZ X0, 0x3D8F058
	0x03D8EA64 MOV X1, X31
	0x03D8EA68 BL 0x3C63270
	0x03D8EA6C CMP W0, 0x7
	0x03D8EA70 B.NE 0x3D8EA80
	0x03D8EA74 MOVZ W8, 0x1
	0x03D8EA78 CBNZ W8, 0x3D8EA34
	0x03D8EA7C B 0x3D8EA9C
	0x03D8EA80 LDR X0, [X19 + 0x48]
	0x03D8EA84 CBZ X0, 0x3D8F058
	0x03D8EA88 MOV X1, X31
	0x03D8EA8C BL 0x3C63270
	0x03D8EA90 CMP W0, 0x8
	0x03D8EA94 CSET W8, EQ
	0x03D8EA98 CBNZ W8, 0x3D8EA34
	0x03D8EA9C LDR X0, [X19 + 0x48]
	0x03D8EAA0 TBZ X20, 0x0, 0x3D8EAB4
	0x03D8EAA4 CBZ X0, 0x3D8F058
	0x03D8EAA8 MOV X1, X31
	0x03D8EAAC BL 0x3C62EF0
	0x03D8EAB0 B 0x3D8EAC8
	0x03D8EAB4 CBZ X0, 0x3D8F058
	0x03D8EAB8 LDR W20, [X19 + 0x68]
	0x03D8EABC MOV X1, X31
	0x03D8EAC0 BL 0x3C62EF0
	0x03D8EAC4 ORR W0, W0, W20, 0x0
	0x03D8EAC8 LDR X8, [X19 + 0x48]
	0x03D8EACC STR W0, [X19 + 0x68]
	0x03D8EAD0 CBZ X8, 0x3D8F058
	0x03D8EAD4 MOV X0, X8
	0x03D8EAD8 MOV X1, X31
	0x03D8EADC BL 0x3C63270
	0x03D8EAE0 CMP W0, 0x5
	0x03D8EAE4 B.EQ 0x3D8EB00
	0x03D8EAE8 LDR X0, [X19 + 0x48]
	0x03D8EAEC CBZ X0, 0x3D8F058
	0x03D8EAF0 MOV X1, X31
	0x03D8EAF4 BL 0x3C63270
	0x03D8EAF8 CMP W0, 0x4
	0x03D8EAFC B.NE 0x3D8EB3C
	0x03D8EB00 LDR X0, [X24]
	0x03D8EB04 LDR W8, [X0 + 0xE0]
	0x03D8EB08 CBNZ W8, 0x3D8EB14
	0x03D8EB0C BL 0x1C16DFC
	0x03D8EB10 LDR X0, [X24]
	0x03D8EB14 LDR X8, [X0 + 0xB8]
	0x03D8EB18 LDR X20, [X8 + 0x8]
	0x03D8EB1C CBNZ X20, 0x3D8EC4C
	0x03D8EB20 LDR W8, [X0 + 0xE0]
	0x03D8EB24 MOV X20, X25
	0x03D8EB28 MOV X25, X29
	0x03D8EB2C CBZ W8, 0x3D8EBF8
	0x03D8EB30 MOV X22, X26
	0x03D8EB34 MOV X29, X21
	0x03D8EB38 B 0x3D8EC08
	0x03D8EB3C LDR X0, [X19 + 0x48]
	0x03D8EB40 CBZ X0, 0x3D8F058
	0x03D8EB44 MOV X1, X31
	0x03D8EB48 BL 0x3C63270

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], D11
	003 Move [X31+104], D10
	004 Move [X31+112], D9
	005 Move [X31+120], D8
	006 Move [X31+128], X30
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X20, 0x65A000
	015 Move W8, [X20+3653]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0x3DA000
	022 Move X0, [X0+2432]
	023 Call 0x1C17CF4
	024 Move X0, 0x3DA000
	025 Move X0, [X0+2440]
	026 Call 0x1C17CF4
	027 Move X0, 0x3DA000
	028 Move X0, [X0+2408]
	029 Call 0x1C17CF4
	030 Move X0, 0x38F000
	031 Move X0, [X0+3664]
	032 Call 0x1C17CF4
	033 Move X0, 0x3DA000
	034 Move X0, [X0+2448]
	035 Call 0x1C17CF4
	036 Move X0, 0x3DA000
	037 Move X0, [X0+2456]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+3653], W8
	041 Move X20, [X19+16]
	042 Compare X20, 0
	043 JumpIfNotEqual {50}
	044 Move X0, X19
	045 Call DefaultEventSystem.GetDefaultInput, X0
	046 Move X20, X0
	047 Move [X19+16], X0
	048 Compare X0, 0
	049 JumpIfEqual {208}
	050 Move X23, 0x3DA000
	051 Move X8, [X20]
	052 Move X23, [X23+2408]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X23]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move W2, 3
	064 Move X0, X20
	065 Call 0x1C5D788
	066 Move W9, [X10]
	067 Add W9, W9, 3
	068 Add X8, X8, W9
	069 Add X0, X8, 312
	070 Move X9, [X0]
	071 Move X1, [X0+8]
	072 Add X8, X31, 56
	073 Move X0, X20
	074 NotImplemented "Instruction BLR not yet implemented."
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 Move W8, [X31+80]
	077 Move W24, [X31+84]
	078 Move S9, [X31+56]
	079 Move S8, [X31+60]
	080 Move [X31+2], V0
	081 Move [X31+48], W8
	082 Compare W24, 0
	083 JumpIfEqual {192}
	084 Move X20, 0x38F000
	085 Move X20, [X20+3664]
	086 Move X25, 0x3DA000
	087 Move S10, [X31+88]
	088 Move S11, [X31+92]
	089 Move X8, [X20]
	090 Move W9, [X8+224]
	091 Move X25, [X25+2456]
	092 Compare W9, 0
	093 JumpIfNotEqual {97}
	094 Move X0, X8
	095 Call 0x1C17DFC
	096 Move X8, [X20]
	097 Move X0, [X25]
	098 Move X8, [X8+184]
	099 Move W9, [X0+224]
	100 Move W20, [X8+20]
	101 Compare W9, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X25]
	105 Move X8, [X0+184]
	106 Move X21, [X8+88]
	107 Compare X21, 0
	108 JumpIfNotEqual {130}
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X25]
	114 Move X9, 0x3DA000
	115 Move X8, [X0+184]
	116 Move X9, [X9+2440]
	117 Move X22, [X8]
	118 Move X0, [X9]
	119 Call 0x1C17F10
	120 Move X8, 0x3DA000
	121 Move X8, [X8+2448]
	122 Move X1, X22
	123 Move X3, X31
	124 Move X21, X0
	125 Move X2, [X8]
	126 Call Func`4<Vector3, Vector3, PenData, Object>..ctor, X0, X1, X2
	127 Move X8, [X25]
	128 Move X8, [X8+184]
	129 Move [X8+88], X21
	130 Move V0, [X31+2]
	131 Move W8, [X31+48]
	132 Move [X31], V0
	133 Move [X31+16], W8
	134 Compare X19, 0
	135 JumpIfEqual {208}
	136 Move X8, 0x3DA000
	137 Move X8, [X8+2432]
	138 Move V0, [X31]
	139 Move W9, [X31+16]
	140 Move S2, W31
	141 Move X6, [X8]
	142 Move [X31+64], V0
	143 Move S5, W31
	144 Add X4, X31, 56
	145 Move X0, X19
	146 Move V0, V9
	147 Move V1, V8
	148 Move V3, V10
	149 Move V4, V11
	150 Move W1, W20
	151 Move X2, X31
	152 Move X3, X21
	153 Move W5, W31
	154 Move [X31+56], S9
	155 Move [X31+64], S8
	156 Move [X31+80], W9
	157 Move [X31+84], W24
	158 Move [X31+88], S10
	159 Move [X31+96], S11
	160 Call DefaultEventSystem.SendPositionBasedEvent, X0, X1, X2, X3, X4, X5, X6, X7
	161 Move X20, [X19+16]
	162 Compare X20, 0
	163 JumpIfNotEqual {170}
	164 Move X0, X19
	165 Call DefaultEventSystem.GetDefaultInput, X0
	166 Move X20, X0
	167 Move [X19+16], X0
	168 Compare X0, 0
	169 JumpIfEqual {208}
	170 Move X8, [X20]
	171 Move X1, [X23]
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Compare X9, 0
	174 JumpIfEqual {181}
	175 Move X10, [X8+176]
	176 Add X10, X10, 8
	177 NotImplemented "Instruction LDUR not yet implemented."
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Subtract X9, X9, 1
	180 Add X10, X10, 16
	181 Move W2, 2
	182 Move X0, X20
	183 Call 0x1C5D788
	184 Move W9, [X10]
	185 Add W9, W9, 2
	186 Add X8, X8, W9
	187 Add X0, X8, 312
	188 Move X8, [X0]
	189 Move X1, [X0+8]
	190 Move X0, X20
	191 NotImplemented "Instruction BLR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X20, [X31+176]
	194 Move X19, [X31+184]
	195 Move X22, [X31+160]
	196 Move X21, [X31+168]
	197 Move X24, [X31+144]
	198 Move X23, [X31+152]
	199 Move X30, [X31+128]
	200 Move X25, [X31+136]
	201 Move D9, [X31+112]
	202 Move D8, [X31+120]
	203 Move D11, [X31+96]
	204 Move D10, [X31+104]
	205 NotImplemented "Instruction CSET not yet implemented."
	206 Add X31, X31, 192
	207 Return X0
	208 Call 0x1C17F20

Method: UnityEngine.Vector2 GetRawMoveVector()

Disassembly:
	0x03D90C18 ADRP X0, 0x3D7000
	0x03D90C1C LDR X0, [X0 + 0xB00]
	0x03D90C20 BL 0x1C16CF4
	0x03D90C24 ADRP X0, 0x365000
	0x03D90C28 LDR X0, [X0 + 0x278]
	0x03D90C2C BL 0x1C16CF4
	0x03D90C30 ADRP X0, 0x3D6000
	0x03D90C34 LDR X0, [X0 + 0x8B0]
	0x03D90C38 BL 0x1C16CF4
	0x03D90C3C ADRP X0, 0x38C000
	0x03D90C40 LDR X0, [X0 + 0x830]
	0x03D90C44 BL 0x1C16CF4
	0x03D90C48 ADRP X0, 0x3D7000
	0x03D90C4C LDR X0, [X0 + 0xB08]
	0x03D90C50 BL 0x1C16CF4
	0x03D90C54 ADRP X0, 0x3D7000
	0x03D90C58 LDR X0, [X0 + 0xB10]
	0x03D90C5C BL 0x1C16CF4
	0x03D90C60 MOVZ W8, 0x1
	0x03D90C64 STRB W8, [X22 + 0xE58]
	0x03D90C68 LDR X8, [X20 + 0x18]
	0x03D90C6C CBZ X8, 0x3D9103C
	0x03D90C70 LDR W9, [X8 + 0x1C]
	0x03D90C74 ADRP X10, 0x365000
	0x03D90C78 LDR X10, [X10 + 0x278]
	0x03D90C7C ADD W9, W9, 0x1
	0x03D90C80 STP W31, W9, [X8 + 0x18]
	0x03D90C84 LDR X8, [X10]
	0x03D90C88 LDR X8, [X8 + 0xB8]
	0x03D90C8C LDR X27, [X8]
	0x03D90C90 CBZ X21, 0x3D90CDC
	0x03D90C94 ADRP X10, 0x38B000
	0x03D90C98 LDR X8, [X21]
	0x03D90C9C LDR X10, [X10 + 0x7B8]
	0x03D90CA0 LDRH W9, [X8 + 0x12E]
	0x03D90CA4 LDR X1, [X10]
	0x03D90CA8 CBZ X9, 0x3D90CCC
	0x03D90CAC LDR X10, [X8 + 0xB0]
	0x03D90CB0 ADD X10, X10, 0x8
	0x03D90CB4 LDUR X11, [X10 - 0x8]
	0x03D90CB8 CMP X11, X1
	0x03D90CBC B.EQ 0x3D90CE4
	0x03D90CC0 SUBS X9, X9, 0x1
	0x03D90CC4 ADD X10, X10, 0x10
	0x03D90CC8 B.NE 0x3D90CB4
	0x03D90CCC MOV X0, X21
	0x03D90CD0 MOV W2, W31
	0x03D90CD4 BL 0x1C5C788
	0x03D90CD8 B 0x3D90CF0
	0x03D90CDC MOV X22, X27
	0x03D90CE0 B 0x3D90FB0
	0x03D90CE4 LDRSW X9, [X10]
	0x03D90CE8 ADD X8, X8, X9, 0x4, LSL
	0x03D90CEC ADD X0, X8, 0x138
	0x03D90CF0 ADRP X28, 0x363000
	0x03D90CF4 ADRP X29, 0x38B000
	0x03D90CF8 ADRP X26, 0x364000
	0x03D90CFC LDR X28, [X28 + 0xE18]
	0x03D90D00 LDR X29, [X29 + 0x7C0]
	0x03D90D04 LDR X26, [X26 + 0xE10]
	0x03D90D08 LDP X8, X1, [X0]
	0x03D90D0C MOV X0, X21
	0x03D90D10 BLR X8
	0x03D90D14 MOV X21, X0
	0x03D90D18 MOV X0, X27
	0x03D90D1C STR X31, [X31]
	0x03D90D20 MOV X22, X0
	0x03D90D24 CBZ X21, 0x3D91030
	0x03D90D28 LDR X8, [X21]
	0x03D90D2C LDR X1, [X28]
	0x03D90D30 MOV W24, W23
	0x03D90D34 LDRH W9, [X8 + 0x12E]
	0x03D90D38 CBZ X9, 0x3D90D5C
	0x03D90D3C LDR X10, [X8 + 0xB0]
	0x03D90D40 ADD X10, X10, 0x8
	0x03D90D44 LDUR X11, [X10 - 0x8]
	0x03D90D48 CMP X11, X1
	0x03D90D4C B.EQ 0x3D90D6C
	0x03D90D50 SUBS X9, X9, 0x1
	0x03D90D54 ADD X10, X10, 0x10
	0x03D90D58 B.NE 0x3D90D44
	0x03D90D5C MOV X0, X21
	0x03D90D60 MOV W2, W31
	0x03D90D64 BL 0x1C5C788
	0x03D90D68 B 0x3D90D78
	0x03D90D6C LDRSW X9, [X10]
	0x03D90D70 ADD X8, X8, X9, 0x4, LSL
	0x03D90D74 ADD X0, X8, 0x138
	0x03D90D78 LDP X8, X1, [X0]
	0x03D90D7C MOV X0, X21
	0x03D90D80 BLR X8
	0x03D90D84 TBZ X0, 0x0, 0x3D90F34
	0x03D90D88 LDR X8, [X21]
	0x03D90D8C LDR X1, [X29]
	0x03D90D90 LDRH W9, [X8 + 0x12E]
	0x03D90D94 CBZ X9, 0x3D90DB8
	0x03D90D98 LDR X10, [X8 + 0xB0]
	0x03D90D9C ADD X10, X10, 0x8
	0x03D90DA0 LDUR X11, [X10 - 0x8]
	0x03D90DA4 CMP X11, X1
	0x03D90DA8 B.EQ 0x3D90DC8
	0x03D90DAC SUBS X9, X9, 0x1
	0x03D90DB0 ADD X10, X10, 0x10
	0x03D90DB4 B.NE 0x3D90DA0
	0x03D90DB8 MOV X0, X21
	0x03D90DBC MOV W2, W31
	0x03D90DC0 BL 0x1C5C788
	0x03D90DC4 B 0x3D90DD4
	0x03D90DC8 LDRSW X9, [X10]
	0x03D90DCC ADD X8, X8, X9, 0x4, LSL
	0x03D90DD0 ADD X0, X8, 0x138
	0x03D90DD4 LDP X8, X1, [X0]
	0x03D90DD8 MOV X0, X21
	0x03D90DDC BLR X8
	0x03D90DE0 MOV W25, W0
	0x03D90DE4 LDR X0, [X20 + 0x18]
	0x03D90DE8 CBZ X0, 0x3D91034
	0x03D90DEC LDR W10, [X0 + 0x1C]
	0x03D90DF0 LDR X8, [X0 + 0x10]
	0x03D90DF4 LDR X9, [X26]
	0x03D90DF8 ADD W10, W10, 0x1
	0x03D90DFC STR W10, [X0 + 0x1C]
	0x03D90E00 CBZ X8, 0x3D91038
	0x03D90E04 LDRSW X10, [X0 + 0x18]
	0x03D90E08 LDR W11, [X8 + 0x18]
	0x03D90E0C CMP W10, W11
	0x03D90E10 B.CS 0x3D90E28
	0x03D90E14 ADD W9, W10, 0x1
	0x03D90E18 ADD X8, X8, X10, 0x2, LSL
	0x03D90E1C STR W9, [X0 + 0x18]
	0x03D90E20 STR W25, [X8 + 0x20]
	0x03D90E24 B 0x3D90E3C
	0x03D90E28 LDR X8, [X9 + 0x20]
	0x03D90E2C LDR X8, [X8 + 0xC0]
	0x03D90E30 LDR X2, [X8 + 0x70]
	0x03D90E34 MOV W1, W25
	0x03D90E38 BL 0x2FDC70C
	0x03D90E3C MOVZ W23, 0x1
	0x03D90E40 TBNZ X24, 0x0, 0x3D90D24
	0x03D90E44 MOV X0, X22
	0x03D90E48 MOV X1, X31
	0x03D90E4C BL 0x32277A8
	0x03D90E50 TBNZ X0, 0x0, 0x3D90E68
	0x03D90E54 ADRP X8, 0x3D7000
	0x03D90E58 LDR X8, [X8 + 0xB08]
	0x03D90E5C MOVZ W23, 0x1
	0x03D90E60 LDR X22, [X8]
	0x03D90E64 B 0x3D90D24
	0x03D90E68 LDR X0, [X20 + 0x10]
	0x03D90E6C MOV W1, W25
	0x03D90E70 BL 0x3D91134
	0x03D90E74 LDR X23, [X31]
	0x03D90E78 CMP X0, 0x0
	0x03D90E7C CSEL X23, X23, X0, EQ
	0x03D90E80 CBZ X0, 0x3D90EF8
	0x03D90E84 STR X0, [X31]
	0x03D90E88 CBZ X23, 0x3D91048
	0x03D90E8C LDR X8, [X23]
	0x03D90E90 LDP X9, X1, [X8 + 0x178]
	0x03D90E94 MOV X0, X23
	0x03D90E98 BLR X9
	0x03D90E9C ADRP X8, 0x38C000
	0x03D90EA0 LDR X8, [X8 + 0x830]
	0x03D90EA4 MOV X24, X0
	0x03D90EA8 LDR X0, [X8]
	0x03D90EAC LDR W8, [X0 + 0xE0]
	0x03D90EB0 CBNZ W8, 0x3D90EB8
	0x03D90EB4 BL 0x1C16DFC
	0x03D90EB8 ADRP X8, 0x3D6000
	0x03D90EBC LDR X8, [X8 + 0x8B0]
	0x03D90EC0 LDR X3, [X8]
	0x03D90EC4 MOV X0, X24
	0x03D90EC8 MOV X1, X31

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x658000
	009 Move W8, [X20+3654]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x3D8000
	016 Move X0, [X0+2408]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3654], W8
	020 Move X20, 0x64A000
	021 Move W8, [X20+1935]
	022 Compare W8, 0
	023 JumpIfNotEqual {29}
	024 Move X0, 0x36C000
	025 Move X0, [X0+3848]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1935], W8
	029 Move X20, [X19+16]
	030 Compare X20, 0
	031 JumpIfNotEqual {38}
	032 Move X0, X19
	033 Call DefaultEventSystem.GetDefaultInput, X0
	034 Move X20, X0
	035 Move [X19+16], X0
	036 Compare X0, 0
	037 JumpIfEqual {189}
	038 Move X22, 0x3D8000
	039 Move X8, [X20]
	040 Move X22, [X22+2408]
	041 Move X21, [X19+24]
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move X1, [X22]
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move W2, 1
	053 Move X0, X20
	054 Call 0x1C5D788
	055 Move W9, [X10]
	056 Add W9, W9, 1
	057 Add X8, X8, W9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X2, [X0+8]
	061 Move X0, X20
	062 Move X1, X21
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X20, [X19+16]
	065 Move V8, V0
	066 Compare X20, 0
	067 JumpIfNotEqual {74}
	068 Move X0, X19
	069 Call DefaultEventSystem.GetDefaultInput, X0
	070 Move X20, X0
	071 Move [X19+16], X0
	072 Compare X0, 0
	073 JumpIfEqual {189}
	074 Move X8, [X20]
	075 Move X21, [X19+32]
	076 Move X1, [X22]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move W2, 1
	087 Move X0, X20
	088 Call 0x1C5D788
	089 Move W9, [X10]
	090 Add W9, W9, 1
	091 Add X8, X8, W9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X2, [X0+8]
	095 Move X0, X20
	096 Move X1, X21
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X20, [X19+16]
	099 Move V9, V0
	100 Compare X20, 0
	101 JumpIfNotEqual {108}
	102 Move X0, X19
	103 Call DefaultEventSystem.GetDefaultInput, X0
	104 Move X20, X0
	105 Move [X19+16], X0
	106 Compare X0, 0
	107 JumpIfEqual {189}
	108 Move X8, [X20]
	109 Move X21, [X19+24]
	110 Move X1, [X22]
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Compare X9, 0
	113 JumpIfEqual {120}
	114 Move X10, [X8+176]
	115 Add X10, X10, 8
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Subtract X9, X9, 1
	119 Add X10, X10, 16
	120 Move X0, X20
	121 Move W2, W31
	122 Call 0x1C5D788
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Add X8, X8, X9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X2, [X0+8]
	128 Move X0, X20
	129 Move X1, X21
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {140}
	135 NotImplemented "Instruction FCMP not yet implemented."
	136 Move S0, -1
	137 NotImplemented "Instruction FCSEL not yet implemented."
	138 NotImplemented "Instruction FCMP not yet implemented."
	139 Move S8, 1
	140 Move X20, [X19+16]
	141 Compare X20, 0
	142 JumpIfNotEqual {149}
	143 Move X0, X19
	144 Call DefaultEventSystem.GetDefaultInput, X0
	145 Move X20, X0
	146 Move [X19+16], X0
	147 Compare X0, 0
	148 JumpIfEqual {189}
	149 Move X8, [X20]
	150 Move X19, [X19+32]
	151 Move X1, [X22]
	152 NotImplemented "Instruction LDRH not yet implemented."
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move X0, X20
	162 Move W2, W31
	163 Call 0x1C5D788
	164 NotImplemented "Instruction LDRSW not yet implemented."
	165 Add X8, X8, X9
	166 Add X0, X8, 312
	167 Move X8, [X0]
	168 Move X2, [X0+8]
	169 Move X0, X20
	170 Move X1, X19
	171 NotImplemented "Instruction BLR not yet implemented."
	172 NotImplemented "Instruction FCMP not yet implemented."
	173 Move S0, -1
	174 NotImplemented "Instruction FCSEL not yet implemented."
	175 Move X20, [X31+48]
	176 Move X19, [X31+56]
	177 Move X22, [X31+32]
	178 Move X21, [X31+40]
	179 Move X30, [X31+16]
	180 Move S1, 1
	181 NotImplemented "Instruction FCMP not yet implemented."
	182 NotImplemented "Instruction FCSEL not yet implemented."
	183 And W31, W0, 1
	184 NotImplemented "Instruction FCSEL not yet implemented."
	185 Move V0, V8
	186 Move D9, [X31+64]
	187 Move D8, [X31+72]
	188 Return X0
	189 Call 0x1C17F20

Method: System.Boolean ShouldSendMoveFromInput()

Disassembly:
	0x03D90590 CMP W20, 0x0
	0x03D90594 MOV W1, W19
	0x03D90598 LDP X20, X19, [X31 + 0x20]
	0x03D9059C LDR X30, [X31 + 0x10]
	0x03D905A0 MOVZ W8, 0x1
	0x03D905A4 CINC W0, W8, EQ
	0x03D905A8 MOV V0.16B, V8.16B
	0x03D905AC MOV V1.16B, V9.16B
	0x03D905B0 MOV X2, X31
	0x03D905B4 LDP D9, D8, [X31], #0x30
	0x03D905B8 B 0x3DA3F54
	0x03D905BC BL 0x1C16F20
	0x03D905C0 STP X30, X21, [X31 - 0x20]!
	0x03D905C4 STP X20, X19, [X31 + 0x10]
	0x03D905C8 ADRP X20, 0x657000
	0x03D905CC LDRB W8, [X20 + 0xE51]
	0x03D905D0 MOV X19, X1
	0x03D905D4 TBNZ X8, 0x0, 0x3D905F8
	0x03D905D8 ADRP X0, 0x3D7000
	0x03D905DC LDR X0, [X0 + 0x968]
	0x03D905E0 BL 0x1C16CF4
	0x03D905E4 ADRP X0, 0x3D7000
	0x03D905E8 LDR X0, [X0 + 0xAD8]
	0x03D905EC BL 0x1C16CF4
	0x03D905F0 MOVZ W8, 0x1
	0x03D905F4 STRB W8, [X20 + 0xE51]
	0x03D905F8 CBZ X19, 0x3D906A4
	0x03D905FC LDR X20, [X19 + 0x10]
	0x03D90600 CBNZ X20, 0x3D90618
	0x03D90604 MOV X0, X19
	0x03D90608 BL 0x3D8D55C
	0x03D9060C MOV X20, X0
	0x03D90610 STR X0, [X19 + 0x10]
	0x03D90614 CBZ X0, 0x3D906A4
	0x03D90618 ADRP X10, 0x3D7000
	0x03D9061C LDR X8, [X20]
	0x03D90620 LDR X10, [X10 + 0x968]
	0x03D90624 ADRP X21, 0x3D7000
	0x03D90628 LDRH W9, [X8 + 0x12E]
	0x03D9062C LDR X1, [X10]
	0x03D90630 LDR X21, [X21 + 0xAD8]
	0x03D90634 CBZ X9, 0x3D90658
	0x03D90638 LDR X10, [X8 + 0xB0]
	0x03D9063C ADD X10, X10, 0x8
	0x03D90640 LDUR X11, [X10 - 0x8]
	0x03D90644 CMP X11, X1
	0x03D90648 B.EQ 0x3D90668
	0x03D9064C SUBS X9, X9, 0x1
	0x03D90650 ADD X10, X10, 0x10
	0x03D90654 B.NE 0x3D90640
	0x03D90658 MOVZ W2, 0xB
	0x03D9065C MOV X0, X20
	0x03D90660 BL 0x1C5C788
	0x03D90664 B 0x3D90678
	0x03D90668 LDR W9, [X10]
	0x03D9066C ADD W9, W9, 0xB
	0x03D90670 ADD X8, X8, W9, 0x4, SXTW
	0x03D90674 ADD X0, X8, 0x138
	0x03D90678 LDP X8, X1, [X0]
	0x03D9067C MOV X0, X20
	0x03D90680 BLR X8
	0x03D90684 LDR W1, [X19 + 0x68]
	0x03D90688 LDR X2, [X21]
	0x03D9068C LDP X20, X19, [X31 + 0x10]
	0x03D90690 ANDS W31, W0, 0x1
	0x03D90694 MOVZ W8, 0x1
	0x03D90698 CINC W0, W8, EQ
	0x03D9069C LDP X30, X21, [X31], #0x20
	0x03D906A0 B 0x2409B44
	0x03D906A4 BL 0x1C16F20
	0x03D906A8 STP X30, X21, [X31 - 0x20]!
	0x03D906AC STP X20, X19, [X31 + 0x10]
	0x03D906B0 ADRP X20, 0x657000
	0x03D906B4 LDRB W8, [X20 + 0xE52]
	0x03D906B8 MOV X19, X1
	0x03D906BC TBNZ X8, 0x0, 0x3D906E0
	0x03D906C0 ADRP X0, 0x3D7000
	0x03D906C4 LDR X0, [X0 + 0x968]
	0x03D906C8 BL 0x1C16CF4
	0x03D906CC ADRP X0, 0x3D7000
	0x03D906D0 LDR X0, [X0 + 0xAE0]
	0x03D906D4 BL 0x1C16CF4
	0x03D906D8 MOVZ W8, 0x1
	0x03D906DC STRB W8, [X20 + 0xE52]
	0x03D906E0 CBZ X19, 0x3D9078C
	0x03D906E4 LDR X20, [X19 + 0x10]
	0x03D906E8 CBNZ X20, 0x3D90700
	0x03D906EC MOV X0, X19
	0x03D906F0 BL 0x3D8D55C
	0x03D906F4 MOV X20, X0
	0x03D906F8 STR X0, [X19 + 0x10]
	0x03D906FC CBZ X0, 0x3D9078C
	0x03D90700 ADRP X10, 0x3D7000
	0x03D90704 LDR X8, [X20]
	0x03D90708 LDR X10, [X10 + 0x968]
	0x03D9070C ADRP X21, 0x3D7000
	0x03D90710 LDRH W9, [X8 + 0x12E]
	0x03D90714 LDR X1, [X10]
	0x03D90718 LDR X21, [X21 + 0xAE0]
	0x03D9071C CBZ X9, 0x3D90740
	0x03D90720 LDR X10, [X8 + 0xB0]
	0x03D90724 ADD X10, X10, 0x8
	0x03D90728 LDUR X11, [X10 - 0x8]
	0x03D9072C CMP X11, X1
	0x03D90730 B.EQ 0x3D90750
	0x03D90734 SUBS X9, X9, 0x1
	0x03D90738 ADD X10, X10, 0x10
	0x03D9073C B.NE 0x3D90728
	0x03D90740 MOVZ W2, 0xB
	0x03D90744 MOV X0, X20
	0x03D90748 BL 0x1C5C788
	0x03D9074C B 0x3D90760
	0x03D90750 LDR W9, [X10]
	0x03D90754 ADD W9, W9, 0xB
	0x03D90758 ADD X8, X8, W9, 0x4, SXTW
	0x03D9075C ADD X0, X8, 0x138
	0x03D90760 LDP X8, X1, [X0]
	0x03D90764 MOV X0, X20
	0x03D90768 BLR X8
	0x03D9076C LDR W1, [X19 + 0x68]
	0x03D90770 LDR X2, [X21]
	0x03D90774 LDP X20, X19, [X31 + 0x10]
	0x03D90778 ANDS W31, W0, 0x1
	0x03D9077C MOVZ W8, 0x1
	0x03D90780 CINC W0, W8, EQ
	0x03D90784 LDP X30, X21, [X31], #0x20
	0x03D90788 B 0x2409B44
	0x03D9078C BL 0x1C16F20
	0x03D90790 SUB X31, X31, 0xD0
	0x03D90794 STP D11, D10, [X31 + 0x90]
	0x03D90798 STP D9, D8, [X31 + 0xA0]
	0x03D9079C STP X30, X21, [X31 + 0xB0]
	0x03D907A0 STP X20, X19, [X31 + 0xC0]
	0x03D907A4 ADRP X21, 0x657000
	0x03D907A8 ADRP X20, 0x3D7000
	0x03D907AC LDRB W8, [X21 + 0xE53]
	0x03D907B0 LDR X20, [X20 + 0xAB8]
	0x03D907B4 MOV X19, X1
	0x03D907B8 MOV V8.16B, V4.16B
	0x03D907BC MOV V9.16B, V3.16B
	0x03D907C0 MOV V10.16B, V1.16B
	0x03D907C4 MOV V11.16B, V0.16B
	0x03D907C8 TBNZ X8, 0x0, 0x3D907E0
	0x03D907CC ADRP X0, 0x3D7000
	0x03D907D0 LDR X0, [X0 + 0xAB8]
	0x03D907D4 BL 0x1C16CF4
	0x03D907D8 MOVZ W8, 0x1
	0x03D907DC STRB W8, [X21 + 0xE53]
	0x03D907E0 MOV X0, X19
	0x03D907E4 MOV V0.16B, V11.16B
	0x03D907E8 MOV V1.16B, V10.16B
	0x03D907EC MOV X1, X31
	0x03D907F0 BL 0x3C845B8
	0x03D907F4 MOV X0, X19
	0x03D907F8 MOV V0.16B, V9.16B
	0x03D907FC MOV V1.16B, V8.16B
	0x03D90800 MOV X1, X31
	0x03D90804 BL 0x3C845D8
	0x03D90808 ADD X0, X31, 0x48
	0x03D9080C MOVZ W2, 0x44
	0x03D90810 MOV X1, X19
	0x03D90814 BL 0x3EB1AC0
	0x03D90818 LDR X0, [X20]
	0x03D9081C LDR W8, [X0 + 0xE0]
	0x03D90820 CBNZ W8, 0x3D90828
	0x03D90824 BL 0x1C16DFC
	0x03D90828 ADD X0, X31, 0x0
	0x03D9082C ADD X1, X31, 0x48
	0x03D90830 MOVZ W2, 0x44
	0x03D90834 BL 0x3EB1AC0
	0x03D90838 ADD X0, X31, 0x0
	0x03D9083C MOV W1, W31
	0x03D90840 BL 0x3D8F9E0
	0x03D90844 LDP X20, X19, [X31 + 0xC0]
	0x03D90848 LDP X30, X21, [X31 + 0xB0]
	0x03D9084C LDP D9, D8, [X31 + 0xA0]
	0x03D90850 LDP D11, D10, [X31 + 0x90]
	0x03D90854 ADD X31, X31, 0xD0
	0x03D90858 RET
	0x03D9085C SUB X31, X31, 0xA0
	0x03D90860 STP D11, D10, [X31 + 0x60]
	0x03D90864 STP D9, D8, [X31 + 0x70]
	0x03D90868 STP X30, X21, [X31 + 0x80]
	0x03D9086C STP X20, X19, [X31 + 0x90]
	0x03D90870 ADRP X21, 0x657000
	0x03D90874 ADRP X20, 0x3D7000
	0x03D90878 LDRB W8, [X21 + 0xE54]
	0x03D9087C LDR X20, [X20 + 0xAB8]
	0x03D90880 MOV X19, X1
	0x03D90884 MOV V8.16B, V4.16B
	0x03D90888 MOV V9.16B, V3.16B
	0x03D9088C MOV V10.16B, V1.16B
	0x03D90890 MOV V11.16B, V0.16B
	0x03D90894 TBNZ X8, 0x0, 0x3D908AC
	0x03D90898 ADRP X0, 0x3D7000
	0x03D9089C LDR X0, [X0 + 0xAB8]
	0x03D908A0 BL 0x1C16CF4
	0x03D908A4 MOVZ W8, 0x1
	0x03D908A8 STRB W8, [X21 + 0xE54]
	0x03D908AC STP S11, S10, [X19]
	0x03D908B0 STP S9, S8, [X19 + 0x20]
	0x03D908B4 LDR X8, [X19 + 0x20]
	0x03D908B8 LDP V1, V0, [X19]
	0x03D908BC LDR X0, [X20]
	0x03D908C0 STR X8, [X31 + 0x50]
	0x03D908C4 STP V1, V0, [X31 + 0x30]
	0x03D908C8 LDR W8, [X0 + 0xE0]
	0x03D908CC CBNZ W8, 0x3D908D4
	0x03D908D0 BL 0x1C16DFC
	0x03D908D4 LDP V0, V1, [X31 + 0x30]
	0x03D908D8 LDR X8, [X31 + 0x50]
	0x03D908DC ADD X0, X31, 0x0
	0x03D908E0 MOV W1, W31
	0x03D908E4 STP V0, V1, [X31]
	0x03D908E8 STR X8, [X31 + 0x20]
	0x03D908EC BL 0x3D8FB60
	0x03D908F0 LDP X20, X19, [X31 + 0x90]
	0x03D908F4 LDP X30, X21, [X31 + 0x80]
	0x03D908F8 LDP D9, D8, [X31 + 0x70]
	0x03D908FC LDP D11, D10, [X31 + 0x60]
	0x03D90900 ADD X31, X31, 0xA0
	0x03D90904 RET
	0x03D90908 STP X30, X21, [X31 - 0x20]!
	0x03D9090C STP X20, X19, [X31 + 0x10]
	0x03D90910 ADRP X21, 0x657000
	0x03D90914 LDRB W8, [X21 + 0xE55]
	0x03D90918 MOV X20, X2
	0x03D9091C MOV X19, X1
	0x03D90920 TBNZ X8, 0x0, 0x3D90944
	0x03D90924 ADRP X0, 0x3D7000
	0x03D90928 LDR X0, [X0 + 0x968]
	0x03D9092C BL 0x1C16CF4
	0x03D90930 ADRP X0, 0x3D4000
	0x03D90934 LDR X0, [X0 + 0xC8]
	0x03D90938 BL 0x1C16CF4
	0x03D9093C MOVZ W8, 0x1
	0x03D90940 STRB W8, [X21 + 0xE55]
	0x03D90944 CBZ X20, 0x3D909F0
	0x03D90948 ADRP X10, 0x3D7000
	0x03D9094C LDR X8, [X20]
	0x03D90950 LDR X10, [X10 + 0x968]
	0x03D90954 ADRP X21, 0x3D4000
	0x03D90958 LDRH W9, [X8 + 0x12E]
	0x03D9095C LDR X1, [X10]
	0x03D90960 LDR X21, [X21 + 0xC8]

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x658000
	011 Move W8, [X20+3655]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x3D8000
	018 Move X0, [X0+2408]
	019 Call 0x1C17CF4
	020 Move X0, 0x3D5000
	021 Move X0, [X0+200]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3655], W8
	025 Move X20, [X19+16]
	026 Compare X20, 0
	027 JumpIfNotEqual {34}
	028 Move X0, X19
	029 Call DefaultEventSystem.GetDefaultInput, X0
	030 Move X20, X0
	031 Move [X19+16], X0
	032 Compare X0, 0
	033 JumpIfEqual {259}
	034 Move X22, 0x3D8000
	035 Move X8, [X20]
	036 Move X22, [X22+2408]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X22]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move W2, 12
	048 Move X0, X20
	049 Call 0x1C5D788
	050 Move W9, [X10]
	051 Add W9, W9, 12
	052 Add X8, X8, W9
	053 Add X0, X8, 312
	054 Move X8, [X0]
	055 Move X1, [X0+8]
	056 Move X0, X20
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X0, X19
	059 Move V8, V0
	060 Call DefaultEventSystem.GetRawMoveVector, X0
	061 Move X20, 0x64A000
	062 Move W8, [X20+1450]
	063 Move V9, V0
	064 Move V10, V1
	065 Compare W8, 0
	066 JumpIfNotEqual {72}
	067 Move X0, 0x36B000
	068 Move X0, [X0+1208]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X20+1450], W8
	072 Move X8, 0x36B000
	073 Move X8, [X8+1208]
	074 Move X9, -53104640
	075 Move V1, [X9+576]
	076 NotImplemented "Instruction FABS not yet implemented."
	077 Move X8, [X8]
	078 Move S0, W31
	079 Move S4, 8
	080 NotImplemented "Instruction FMAXNM not yet implemented."
	081 Move X8, [X8+184]
	082 Multiply S5, S2, S1
	083 Move V3, [X8]
	084 Multiply S2, S3, S4
	085 NotImplemented "Instruction FCMP not yet implemented."
	086 NotImplemented "Instruction FCSEL not yet implemented."
	087 NotImplemented "Instruction FABD not yet implemented."
	088 NotImplemented "Instruction FCMP not yet implemented."
	089 NotImplemented "Instruction FABS not yet implemented."
	090 NotImplemented "Instruction FMAXNM not yet implemented."
	091 Multiply S1, S3, S1
	092 NotImplemented "Instruction FCMP not yet implemented."
	093 NotImplemented "Instruction FCSEL not yet implemented."
	094 NotImplemented "Instruction FABD not yet implemented."
	095 NotImplemented "Instruction FCMP not yet implemented."
	096 Move X20, [X19+16]
	097 Compare X20, 0
	098 JumpIfNotEqual {105}
	099 Move X0, X19
	100 Call DefaultEventSystem.GetDefaultInput, X0
	101 Move X20, X0
	102 Move [X19+16], X0
	103 Compare X0, 0
	104 JumpIfEqual {259}
	105 Move X8, [X20]
	106 Move X21, [X19+24]
	107 Move X1, [X22]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move X0, X20
	118 Move W2, W31
	119 Call 0x1C5D788
	120 Move W0, W31
	121 NotImplemented "Instruction LDRSW not yet implemented."
	122 Add X8, X8, X9
	123 Add X0, X8, 312
	124 Move X8, [X0]
	125 Move X2, [X0+8]
	126 Move X0, X20
	127 Move X1, X21
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {134}
	133 Move W8, W31
	134 Move X20, [X19+16]
	135 Compare X20, 0
	136 JumpIfNotEqual {143}
	137 Move X0, X19
	138 Call DefaultEventSystem.GetDefaultInput, X0
	139 Move X20, X0
	140 Move [X19+16], X0
	141 Compare X0, 0
	142 JumpIfEqual {259}
	143 Move X8, [X20]
	144 Move X21, [X19+32]
	145 Move X1, [X22]
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move X0, X20
	156 Move W2, W31
	157 Call 0x1C5D788
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Add X8, X8, X9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X2, [X0+8]
	163 Move X0, X20
	164 Move X1, X21
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Xor W8, W0, 1
	167 Move S0, [X19+136]
	168 Move S1, [X19+140]
	169 Multiply S0, S9, S0
	170 Multiply S1, S10, S1
	171 Add S11, S0, S1
	172 Move TEMP, X8
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {187}
	176 NotImplemented "Instruction FCMP not yet implemented."
	177 Move W8, [X19+132]
	178 Move V0, [X19+144]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move V1, [X19+60]
	181 Move V0, [X19+144]
	182 Move V1, [X19+56]
	183 Move S2, 1
	184 NotImplemented "Instruction FDIV not yet implemented."
	185 Add S0, S0, S1
	186 NotImplemented "Instruction FCMP not yet implemented."
	187 Move X8, 0x3D5000
	188 Move X8, [X8+200]
	189 Move X0, [X8]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 Move X8, -53104640
	195 Move V2, [X8+144]
	196 Move V0, V9
	197 Move V1, V10
	198 Move X0, X31
	199 Call NavigationMoveEvent.DetermineMoveDirection, V0, V1, V2
	200 Compare W0, 0
	201 JumpIfEqual {205}
	202 NotImplemented "Instruction FCMP not yet implemented."
	203 Move W8, [X19+132]
	204 Add W8, W8, 1
	205 Move [X19+132], W31
	206 Move [X19+148], W31
	207 Move W0, W31
	208 Move W8, 1
	209 Move X20, [X19+16]
	210 Move W21, [X19+148]
	211 Move [X19+132], W8
	212 Move [X19+140], S10
	213 Move [X19+148], S8
	214 Move [X19+136], S9
	215 Compare X20, 0
	216 JumpIfNotEqual {223}
	217 Move X0, X19
	218 Call DefaultEventSystem.GetDefaultInput, X0
	219 Move X20, X0
	220 Move [X19+16], X0
	221 Compare X0, 0
	222 JumpIfEqual {259}
	223 Move X8, [X20]
	224 Move X1, [X22]
	225 NotImplemented "Instruction LDRH not yet implemented."
	226 Compare X9, 0
	227 JumpIfEqual {234}
	228 Move X10, [X8+176]
	229 Add X10, X10, 8
	230 NotImplemented "Instruction LDUR not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Subtract X9, X9, 1
	233 Add X10, X10, 16
	234 Move W2, 11
	235 Move X0, X20
	236 Call 0x1C5D788
	237 Move W9, [X10]
	238 Add W9, W9, 11
	239 Add X8, X8, W9
	240 Add X0, X8, 312
	241 Move X8, [X0]
	242 Move X1, [X0+8]
	243 Move X0, X20
	244 NotImplemented "Instruction BLR not yet implemented."
	245 And W8, W0, 1
	246 Or W8, W21, W8
	247 Move W0, 1
	248 Move [X19+148], W8
	249 Move X20, [X31+64]
	250 Move X19, [X31+72]
	251 Move X22, [X31+48]
	252 Move X21, [X31+56]
	253 Move X30, [X31+32]
	254 Move D9, [X31+16]
	255 Move D8, [X31+24]
	256 Move D11, [X31+80]
	257 Move D10, [X31+88]
	258 Return X0
	259 Call 0x1C17F20

Method: System.Void ProcessTabEvent(UnityEngine.Event e, UnityEngine.EventModifiers modifiers)

Disassembly:
	0x03D90408 ADRP X20, 0x38B000
	0x03D9040C LDR X20, [X20 + 0x930]
	0x03D90410 MOV X0, X19
	0x03D90414 MOV V0.16B, V11.16B
	0x03D90418 MOV V1.16B, V10.16B
	0x03D9041C MOV X1, X31
	0x03D90420 BL 0x3C62CD0
	0x03D90424 MOV X0, X19
	0x03D90428 MOV V0.16B, V9.16B
	0x03D9042C MOV V1.16B, V8.16B
	0x03D90430 MOV X1, X31
	0x03D90434 BL 0x3C62DEC
	0x03D90438 LDR X0, [X20]
	0x03D9043C LDR W8, [X0 + 0xE0]
	0x03D90440 CBNZ W8, 0x3D90448
	0x03D90444 BL 0x1C16DFC
	0x03D90448 MOV X0, X19
	0x03D9044C LDP X20, X19, [X31 + 0x30]
	0x03D90450 LDR X30, [X31 + 0x20]
	0x03D90454 LDP D9, D8, [X31 + 0x10]
	0x03D90458 MOV X1, X31
	0x03D9045C LDP D11, D10, [X31], #0x40
	0x03D90460 B 0x3E14C44
	0x03D90464 BL 0x1C16F20
	0x03D90468 STR D12, [X31 - 0x40]!
	0x03D9046C STP D11, D10, [X31 + 0x8]
	0x03D90470 STP D9, D8, [X31 + 0x18]
	0x03D90474 STR X30, [X31 + 0x28]
	0x03D90478 STP X20, X19, [X31 + 0x30]
	0x03D9047C ADRP X20, 0x657000
	0x03D90480 LDRB W8, [X20 + 0xE4F]
	0x03D90484 MOV X19, X1
	0x03D90488 MOV V8.16B, V4.16B
	0x03D9048C MOV V9.16B, V3.16B
	0x03D90490 MOV V10.16B, V2.16B
	0x03D90494 MOV V11.16B, V1.16B
	0x03D90498 MOV V12.16B, V0.16B
	0x03D9049C TBNZ X8, 0x0, 0x3D904B4
	0x03D904A0 ADRP X0, 0x3D7000
	0x03D904A4 LDR X0, [X0 + 0xAD0]
	0x03D904A8 BL 0x1C16CF4
	0x03D904AC MOVZ W8, 0x1
	0x03D904B0 STRB W8, [X20 + 0xE4F]
	0x03D904B4 CBZ X19, 0x3D90500
	0x03D904B8 ADRP X8, 0x3D7000
	0x03D904BC LDR X8, [X8 + 0xAD0]
	0x03D904C0 LDR W3, [X19 + 0x68]
	0x03D904C4 MOV V1.16B, V11.16B
	0x03D904C8 MOV V2.16B, V10.16B
	0x03D904CC LDR X4, [X8]
	0x03D904D0 MOV V3.16B, V9.16B
	0x03D904D4 MOV V4.16B, V8.16B
	0x03D904D8 LDP X20, X19, [X31 + 0x30]
	0x03D904DC LDR X30, [X31 + 0x28]
	0x03D904E0 LDP D9, D8, [X31 + 0x18]
	0x03D904E4 LDP D11, D10, [X31 + 0x8]
	0x03D904E8 MOVZ W0, 0x2
	0x03D904EC MOVN W1, 0x0
	0x03D904F0 MOV V0.16B, V12.16B
	0x03D904F4 MOV W2, W31
	0x03D904F8 LDR V12, [X31], #0x40
	0x03D904FC B 0x24A4154
	0x03D90500 BL 0x1C16F20
	0x03D90504 MOV X3, X2
	0x03D90508 UBFM X2, X1, 0x20, 0x3F
	0x03D9050C MOV W0, W31
	0x03D90510 MOV X4, X31
	0x03D90514 B 0x3DAAAE4
	0x03D90518 MOV X3, X2
	0x03D9051C UBFM X2, X1, 0x20, 0x3F
	0x03D90520 MOVZ W0, 0x1
	0x03D90524 MOV X4, X31
	0x03D90528 B 0x3DAAAE4
	0x03D9052C STP D9, D8, [X31 - 0x30]!
	0x03D90530 STR X30, [X31 + 0x10]
	0x03D90534 STP X20, X19, [X31 + 0x20]
	0x03D90538 ADRP X20, 0x657000
	0x03D9053C LDRB W8, [X20 + 0xE50]
	0x03D90540 MOV X19, X1
	0x03D90544 TBNZ X8, 0x0, 0x3D9055C
	0x03D90548 ADRP X0, 0x3D4000
	0x03D9054C LDR X0, [X0 + 0xC8]
	0x03D90550 BL 0x1C16CF4
	0x03D90554 MOVZ W8, 0x1
	0x03D90558 STRB W8, [X20 + 0xE50]
	0x03D9055C CBZ X19, 0x3D905BC
	0x03D90560 ADRP X20, 0x3D4000
	0x03D90564 LDR X20, [X20 + 0xC8]
	0x03D90568 MOV X0, X19
	0x03D9056C BL 0x3D8FC18
	0x03D90570 LDR X0, [X20]
	0x03D90574 LDRB W20, [X19 + 0x94]
	0x03D90578 LDR W19, [X19 + 0x68]
	0x03D9057C MOV V8.16B, V0.16B
	0x03D90580 LDR W8, [X0 + 0xE0]
	0x03D90584 MOV V9.16B, V1.16B
	0x03D90588 CBNZ W8, 0x3D90590
	0x03D9058C BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X22, 0x658000
	010 Move W8, [X22+3656]
	011 Move W20, W2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x3D8000
	019 Move X0, [X0+2656]
	020 Call 0x1C17CF4
	021 Move X0, 0x3D8000
	022 Move X0, [X0+2664]
	023 Call 0x1C17CF4
	024 Move X0, 0x3D8000
	025 Move X0, [X0+2672]
	026 Call 0x1C17CF4
	027 Move X0, 0x3D8000
	028 Move X0, [X0+2456]
	029 Call 0x1C17CF4
	030 Move X0, 0x3D8000
	031 Move X0, [X0+2680]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+3656], W8
	035 Move X0, X21
	036 Move X1, X31
	037 Call KeyboardEventExtensions.ShouldSendNavigationMoveEventRuntime, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {108}
	042 Compare X21, 0
	043 JumpIfEqual {117}
	044 Move X0, X21
	045 Move X1, X31
	046 Call Event.get_shift, X0
	047 Move X24, 0x3D8000
	048 Move X24, [X24+2456]
	049 Move W8, W0
	050 And W31, W8, 1
	051 Move W8, 5
	052 Move X0, [X24]
	053 NotImplemented "Instruction CINC not yet implemented."
	054 Move W9, [X0+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X24]
	059 Move X8, [X0+184]
	060 Move X22, [X8+96]
	061 Compare X22, 0
	062 JumpIfNotEqual {84}
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X24]
	068 Move X9, 0x3D8000
	069 Move X8, [X0+184]
	070 Move X9, [X9+2664]
	071 Move X23, [X8]
	072 Move X0, [X9]
	073 Call 0x1C17F10
	074 Move X8, 0x3D8000
	075 Move X8, [X8+2672]
	076 Move X1, X23
	077 Move X3, X31
	078 Move X22, X0
	079 Move X2, [X8]
	080 Call Func`2<ValueTuple`3<Int32Enum, Int32Enum, Object>, Object>..ctor, X0, X1, X2
	081 Move X8, [X24]
	082 Move X8, [X8+184]
	083 Move [X8+96], X22
	084 Move X3, [X19+16]
	085 Compare X3, 0
	086 JumpIfNotEqual {91}
	087 Move X0, X19
	088 Call DefaultEventSystem.GetDefaultInput, X0
	089 Move X3, X0
	090 Move [X19+16], X0
	091 Move X8, 0x3D8000
	092 Move X8, [X8+2680]
	093 Add X0, X31, 0
	094 Move W1, W21
	095 Move W2, W20
	096 Move X4, [X8]
	097 Move [X31], X31
	098 Move [X31+8], X31
	099 Call ValueTuple`3<Int32Enum, Int32Enum, Object>..ctor, X0, X1, X2, X3
	100 Move X8, 0x3D8000
	101 Move X2, [X31]
	102 Move X3, [X31+8]
	103 Move X8, [X8+2656]
	104 Move X0, X19
	105 Move X1, X22
	106 Move X4, [X8]
	107 Call 0x21AA2BC, X0, X1, X2
	108 Move X20, [X31+64]
	109 Move X19, [X31+72]
	110 Move X22, [X31+48]
	111 Move X21, [X31+56]
	112 Move X24, [X31+32]
	113 Move X23, [X31+40]
	114 Move X30, [X31+16]
	115 Add X31, X31, 80
	116 Return 
	117 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03D90ECC MOV X2, X31
	0x03D90ED0 BL 0x22A17C4
	0x03D90ED4 LDR X24, [X31]
	0x03D90ED8 CBZ X0, 0x3D90EF8
	0x03D90EDC LDR X8, [X0]
	0x03D90EE0 LDR X1, [X8 + 0xB20]
	0x03D90EE4 LDR X9, [X8 + 0xB18]
	0x03D90EE8 BLR X9
	0x03D90EEC MOV W23, W31
	0x03D90EF0 STR X24, [X31]
	0x03D90EF4 B 0x3D90D20
	0x03D90EF8 ADRP X8, 0x363000
	0x03D90EFC LDR X8, [X8 + 0x758]
	0x03D90F00 STR W25, [X31 + 0xC]
	0x03D90F04 LDR X0, [X8]
	0x03D90F08 ADD X1, X31, 0xC
	0x03D90F0C BL 0x1C16E04
	0x03D90F10 MOV X1, X0
	0x03D90F14 STR X23, [X31]
	0x03D90F18 ADRP X8, 0x3D7000
	0x03D90F1C LDR X8, [X8 + 0xB10]
	0x03D90F20 LDR X0, [X8]
	0x03D90F24 MOV X2, X31
	0x03D90F28 BL 0x321EFD0
	0x03D90F2C MOV W23, W31
	0x03D90F30 B 0x3D90D20
	0x03D90F34 MOV X24, X31
	0x03D90F38 MOVZ W23, 0xC
	0x03D90F3C CBZ X21, 0x3D90FA0
	0x03D90F40 ADRP X10, 0x363000
	0x03D90F44 LDR X8, [X21]
	0x03D90F48 LDR X10, [X10 + 0xE00]
	0x03D90F4C LDRH W9, [X8 + 0x12E]
	0x03D90F50 LDR X1, [X10]
	0x03D90F54 CBZ X9, 0x3D90F78
	0x03D90F58 LDR X10, [X8 + 0xB0]
	0x03D90F5C ADD X10, X10, 0x8
	0x03D90F60 LDUR X11, [X10 - 0x8]
	0x03D90F64 CMP X11, X1
	0x03D90F68 B.EQ 0x3D90F88
	0x03D90F6C SUBS X9, X9, 0x1
	0x03D90F70 ADD X10, X10, 0x10
	0x03D90F74 B.NE 0x3D90F60
	0x03D90F78 MOV X0, X21
	0x03D90F7C MOV W2, W31
	0x03D90F80 BL 0x1C5C788
	0x03D90F84 B 0x3D90F94
	0x03D90F88 LDRSW X9, [X10]
	0x03D90F8C ADD X8, X8, X9, 0x4, LSL
	0x03D90F90 ADD X0, X8, 0x138
	0x03D90F94 LDP X8, X1, [X0]
	0x03D90F98 MOV X0, X21
	0x03D90F9C BLR X8
	0x03D90FA0 CBNZ X24, 0x3D91040
	0x03D90FA4 CMP W23, 0xC
	0x03D90FA8 B.EQ 0x3D90FB0
	0x03D90FAC CBNZ W23, 0x3D91010
	0x03D90FB0 ADRP X8, 0x3D7000
	0x03D90FB4 LDR X8, [X8 + 0xAF8]
	0x03D90FB8 LDR X21, [X20 + 0x18]
	0x03D90FBC LDR X0, [X8]
	0x03D90FC0 BL 0x1C16F10
	0x03D90FC4 LDR X8, [X20]
	0x03D90FC8 MOV X1, X20
	0x03D90FCC MOV X3, X31
	0x03D90FD0 MOV X23, X0
	0x03D90FD4 LDR X2, [X8 + 0x250]
	0x03D90FD8 BL 0x2958FD8
	0x03D90FDC CBZ X21, 0x3D9103C
	0x03D90FE0 ADRP X8, 0x3D7000
	0x03D90FE4 LDR X8, [X8 + 0xB00]
	0x03D90FE8 MOV X0, X21
	0x03D90FEC MOV X1, X23
	0x03D90FF0 LDR X2, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x658000
	010 Move X25, 0x3B7000
	011 Move X23, 0x3B7000
	012 Move X22, 0x3B7000
	013 Move X21, 0x3A8000
	014 Move X20, 0x3CA000
	015 Move W8, [X24+3657]
	016 Move X25, [X25+2800]
	017 Move X23, [X23+2752]
	018 Move X22, [X22+2744]
	019 Move X21, [X21+2824]
	020 Move X20, [X20+32]
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {43}
	026 Move X0, 0x3CA000
	027 Move X0, [X0+32]
	028 Call 0x1C17CF4
	029 Move X0, 0x3B7000
	030 Move X0, [X0+2744]
	031 Call 0x1C17CF4
	032 Move X0, 0x3B7000
	033 Move X0, [X0+2752]
	034 Call 0x1C17CF4
	035 Move X0, 0x3B7000
	036 Move X0, [X0+2800]
	037 Call 0x1C17CF4
	038 Move X0, 0x3A8000
	039 Move X0, [X0+2824]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X24+3657], W8
	043 Move X9, [X25]
	044 Move X8, [X23]
	045 Move [X19+24], X9
	046 Move [X19+32], X8
	047 Move X9, -53092352
	048 Move X10, [X22]
	049 Move X8, [X21]
	050 Move V0, [X9+3488]
	051 Move [X19+40], X10
	052 Move [X19+48], X8
	053 Move [X19+56], D0
	054 Move X0, [X20]
	055 Call 0x1C17F10
	056 Move X1, X31
	057 Move X20, X0
	058 Call Event..ctor, X0
	059 Move TEMP, 0
	060 Not TEMP
	061 Move W8, TEMP
	062 Move [X19+72], X20
	063 Move [X19+116], W31
	064 Move [X19+108], X8
	065 Move X20, 0x64A000
	066 Move W8, [X20+1935]
	067 Compare W8, 0
	068 JumpIfNotEqual {74}
	069 Move X0, 0x36C000
	070 Move X0, [X0+3848]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X20+1935], W8
	074 Move X8, 0x36C000
	075 Move X8, [X8+3848]
	076 Move X0, X19
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X24, [X31+16]
	080 Move X23, [X31+24]
	081 Move X8, [X8]
	082 Move X1, X31
	083 Move X8, [X8+184]
	084 Move V0, [X8]
	085 Move [X19+120], D0
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X30, [X31+64]
	089 Move X25, [X31+72]
	090 Call Object..ctor, X0
	091 Return 

Method: System.Void .cctor()

Disassembly:
	0x03D90FF4 BL 0x2FDE434
	0x03D90FF8 MOVZ W8, 0x2
	0x03D90FFC STR X22, [X19]
	0x03D91000 STUR X31, [X19 + 0x14]
	0x03D91004 STUR X31, [X19 + 0xC]
	0x03D91008 STR W8, [X19 + 0x8]
	0x03D9100C STR W31, [X19 + 0x1C]
	0x03D91010 LDP X20, X19, [X31 + 0x60]
	0x03D91014 LDP X22, X21, [X31 + 0x50]
	0x03D91018 LDP X24, X23, [X31 + 0x40]
	0x03D9101C LDP X26, X25, [X31 + 0x30]
	0x03D91020 LDP X28, X27, [X31 + 0x20]
	0x03D91024 LDP X29, X30, [X31 + 0x10]
	0x03D91028 ADD X31, X31, 0x70
	0x03D9102C RET
	0x03D91030 BL 0x1C16F20
	0x03D91034 BL 0x1C16F20
	0x03D91038 BL 0x1C16F20
	0x03D9103C BL 0x1C16F20
	0x03D91040 MOV X0, X24
	0x03D91044 BL 0x1C16F18
	0x03D91048 BL 0x1C16F20
	0x03D9104C B 0x3D91084
	0x03D91050 B 0x3D91084
	0x03D91054 B 0x3D91084
	0x03D91058 B 0x3D91084
	0x03D9105C B 0x3D91084
	0x03D91060 B 0x3D91084
	0x03D91064 B 0x3D91084
	0x03D91068 B 0x3D91084
	0x03D9106C B 0x3D91084
	0x03D91070 MOV X23, X0
	0x03D91074 MOV X22, X27
	0x03D91078 B 0x3D91088
	0x03D9107C B 0x3D91084
	0x03D91080 B 0x3D91084
	0x03D91084 MOV X23, X0
	0x03D91088 CMP W1, 0x1
	0x03D9108C B.NE 0x3D910AC
	0x03D91090 MOV X0, X23
	0x03D91094 BL 0x3EB1AD0
	0x03D91098 LDR X24, [X0]
	0x03D9109C BL 0x3EB1AE0
	0x03D910A0 MOV W23, W31
	0x03D910A4 CBNZ X21, 0x3D90F40
	0x03D910A8 B 0x3D90FA0
	0x03D910AC MOV X24, X31
	0x03D910B0 B 0x3D910B8
	0x03D910B4 MOV X23, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x657000
	007 Move X19, 0x3D7000
	008 Move W8, [X20+3658]
	009 Call 0x3EB2784
	010 Return 
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x3D7000
	016 Move X0, [X0+2744]
	017 Call 0x1C17CF4
	018 Move X0, 0x36C000
	019 Move X0, [X0+2368]
	020 Call 0x1C17CF4
	021 Move X0, 0x3D7000
	022 Move X0, [X0+2752]
	023 Call 0x1C17CF4
	024 Move X0, 0x3D7000
	025 Move X0, [X0+2456]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3658], W8
	029 Move X0, [X19]
	030 Move X22, 0x36C000
	031 Move X20, 0x3D7000
	032 Move X21, 0x3D7000
	033 Move W8, [X0+224]
	034 Move X22, [X22+2368]
	035 Move X20, [X20+2752]
	036 Move X21, [X21+2744]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X19]
	041 Move X8, [X0+184]
	042 Move X0, [X22]
	043 Move X19, [X8]
	044 Call 0x1C17F10
	045 Move X2, [X20]
	046 Move X1, X19
	047 Move X3, X31
	048 Move X20, X0
	049 Call Func`1<Boolean>..ctor, X0, X1, X2
	050 Move X8, [X21]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X8, [X8+184]
	054 Move [X8], X20
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+48]
	058 Return 

