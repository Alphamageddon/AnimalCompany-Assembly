Type: UnityEngine.UIElements.MeshWriteData

Method: System.Void .ctor()

Disassembly:
	0x03DC47E8 FSUB S8, S9, S0
	0x03DC47EC FSUB S9, S15, S1

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Int32 get_vertexCount()

Disassembly:
	0x03DC47F0 BL 0x3C417AC
	0x03DC47F4 LDP S0, S1, [X31 + 0x24]
	0x03DC47F8 ADD X8, X31, 0x18
	0x03DC47FC MOV X0, X22
	0x03DC4800 MOV X1, X31
	0x03DC4804 FADD S0, S0, S0
	0x03DC4808 FADD S1, S1, S1
	0x03DC480C FDIV S8, S8, S0
	0x03DC4810 FDIV S9, S9, S1
	0x03DC4814 BL 0x3C417AC
	0x03DC4818 LDP S0, S1, [X31 + 0x24]
	0x03DC481C FMOV S4, 1
	0x03DC4820 CMP W21, 0x2
	0x03DC4824 FADD S0, S0, S0
	0x03DC4828 FDIV S2, S11, S0
	0x03DC482C LDR V0, [X31 + 0xC]
	0x03DC4830 FADD S1, S1, S1
	0x03DC4834 FDIV S3, S0, S1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x625000
	006 Move X20, 0x3A2000
	007 Move W8, [X21+308]
	008 Move X20, [X20+328]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3A2000
	015 Move X0, [X0+328]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+308], W8
	019 Move X1, [X20]
	020 Add X0, X19, 16
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call NativeSlice`1<Vertex>.get_Length, X0
	026 Return X0

Method: System.Int32 get_indexCount()

Disassembly:
	0x03DC4838 FSUB S0, S4, S3
	0x03DC483C FSUB S16, S0, S9
	0x03DC4840 B.EQ 0x3DC4864
	0x03DC4844 CMP W21, 0x1
	0x03DC4848 B.EQ 0x3DC4894
	0x03DC484C CBNZ W21, 0x3DC49FC
	0x03DC4850 FMUL S0, S13, S8
	0x03DC4854 FMUL S1, S12, S16
	0x03DC4858 FMUL S2, S13, S2
	0x03DC485C FMUL S3, S12, S3
	0x03DC4860 B 0x3DC49BC
	0x03DC4864 FCMP S14, S10
	0x03DC4868 B.LE 0x3DC48BC
	0x03DC486C FDIV S0, S10, S14
	0x03DC4870 FMOV S4, 1
	0x03DC4874 FSUB S4, S4, S0
	0x03DC4878 FMOV S5, 0.5
	0x03DC487C FMUL S4, S13, S4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x625000
	006 Move X20, 0x3A1000
	007 Move W8, [X21+309]
	008 Move X20, [X20+4024]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3A1000
	015 Move X0, [X0+4024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+309], W8
	019 Move X1, [X20]
	020 Add X0, X19, 32
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call NativeSlice`1<UInt16>.get_Length, X0
	026 Return X0

Method: UnityEngine.Rect get_uvRegion()

Disassembly:
	0x03DC4880 FMUL S4, S4, S5
	0x03DC4884 LDP S6, S5, [X31 + 0x4]
	0x03DC4888 FMUL S13, S13, S0

ISIL:
	001 Move S0, [X0+48]
	002 Move S1, [X0+52]
	003 Move S2, [X0+56]
	004 Move S3, [X0+60]
	005 Return X0

Method: System.Void SetNextVertex(UnityEngine.UIElements.Vertex vertex)

Disassembly:
	0x03DC488C FADD S6, S6, S4
	0x03DC4890 B 0x3DC48E0
	0x03DC4894 FCMP S14, S10
	0x03DC4898 B.LE 0x3DC48FC
	0x03DC489C FDIV S4, S13, S10
	0x03DC48A0 FSUB S0, S4, S12
	0x03DC48A4 FMOV S5, -0.5
	0x03DC48A8 FMUL S6, S0, S5
	0x03DC48AC LDP S0, S1, [X31 + 0x4]
	0x03DC48B0 MOV V17.16B, V13.16B
	0x03DC48B4 MOV V5.16B, V0.16B
	0x03DC48B8 B 0x3DC4918
	0x03DC48BC FDIV S0, S14, S10
	0x03DC48C0 FMOV S4, 1
	0x03DC48C4 FSUB S4, S4, S0
	0x03DC48C8 FMOV S5, 0.5
	0x03DC48CC FMUL S4, S12, S4
	0x03DC48D0 FMUL S4, S4, S5
	0x03DC48D4 LDP S6, S5, [X31 + 0x4]
	0x03DC48D8 FMUL S12, S12, S0
	0x03DC48DC FADD S5, S5, S4
	0x03DC48E0 FMUL S0, S8, S13
	0x03DC48E4 FMUL S1, S16, S12
	0x03DC48E8 FMUL S2, S2, S13
	0x03DC48EC FADD S0, S6, S0
	0x03DC48F0 FADD S1, S5, S1
	0x03DC48F4 FMUL S3, S3, S12
	0x03DC48F8 B 0x3DC49BC
	0x03DC48FC LDP S0, S1, [X31 + 0x4]
	0x03DC4900 FMUL S17, S12, S10
	0x03DC4904 FSUB S4, S17, S13
	0x03DC4908 FMOV S5, -0.5
	0x03DC490C FMUL S5, S4, S5
	0x03DC4910 MOV V6.16B, V1.16B

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move X22, 0x625000
	008 Move X21, 0x3A1000
	009 Move W8, [X22+310]
	010 Move X21, [X21+1552]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x3A1000
	018 Move X0, [X0+1552]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+310], W8
	022 Move W1, [X20+68]
	023 Add X0, X20, 16
	024 Add X2, X31, 64
	025 Add W8, W1, 1
	026 Move [X20+68], W8
	027 Move V0, [X19+32]
	028 Move V1, [X19+48]
	029 Move V2, [X19]
	030 Move V3, [X19+16]
	031 Move X3, [X21]
	032 Move [X31+32], V0
	033 Move [X31+40], V1
	034 Move [X31], V2
	035 Move [X31+8], V3
	036 Move [X31+64], V2
	037 Move [X31+72], V3
	038 Move [X31+96], V0
	039 Move [X31+104], V1
	040 Call NativeSlice`1<Vertex>.set_Item, X0, X1, X2
	041 Move X20, [X31+160]
	042 Move X19, [X31+168]
	043 Move X22, [X31+144]
	044 Move X21, [X31+152]
	045 Move X30, [X31+128]
	046 Add X31, X31, 176
	047 Return 

Method: System.Void SetNextIndex(System.UInt16 index)

Disassembly:
	0x03DC4914 MOV V4.16B, V12.16B
	0x03DC4918 FMUL S7, S8, S17
	0x03DC491C FMUL S16, S16, S4
	0x03DC4920 FMUL S10, S2, S17
	0x03DC4924 FADD S9, S5, S7
	0x03DC4928 FADD S8, S6, S16
	0x03DC492C FMUL S11, S3, S4
	0x03DC4930 MOV V2.16B, V13.16B
	0x03DC4934 MOV V3.16B, V12.16B
	0x03DC4938 MOV V4.16B, V9.16B
	0x03DC493C MOV V5.16B, V8.16B
	0x03DC4940 MOV V6.16B, V10.16B
	0x03DC4944 MOV V7.16B, V11.16B
	0x03DC4948 BL 0x3DC4A30
	0x03DC494C ADRP X8, 0xFFFFFFFFFCD25000
	0x03DC4950 LDR V4, [X8 + 0xF9C]
	0x03DC4954 FCMP S2, S4
	0x03DC4958 B.MI 0x3DC49B4
	0x03DC495C FCMP S3, S4
	0x03DC4960 B.MI 0x3DC49B4
	0x03DC4964 FSUB S5, S1, S8
	0x03DC4968 FDIV S7, S3, S11
	0x03DC496C FMOV S16, 1
	0x03DC4970 FDIV S5, S5, S11
	0x03DC4974 FSUB S16, S16, S7

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x625000
	007 Move X21, 0x3A1000
	008 Move W8, [X22+311]
	009 Move X21, [X21+1560]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3A1000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+311], W8
	021 Move W1, [X20+64]
	022 Add X0, X20, 32
	023 Move W2, W19
	024 Add W8, W1, 1
	025 Move [X20+64], W8
	026 Move X3, [X21]
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Call NativeSlice`1<UInt16>.set_Item, X0, X1, X2
	033 Return 

Method: System.Void SetAllVertices(UnityEngine.UIElements.Vertex[] vertices)

Disassembly:
	0x03DC4978 FSUB S5, S16, S5
	0x03DC497C LDR V16, [X31 + 0x78]
	0x03DC4980 LDR V17, [X31 + 0x10]
	0x03DC4984 FSUB S4, S0, S9
	0x03DC4988 FDIV S6, S2, S10
	0x03DC498C FDIV S4, S4, S10
	0x03DC4990 FMUL S4, S16, S4
	0x03DC4994 FMUL S16, S16, S6
	0x03DC4998 LDR V6, [X31 + 0x7C]
	0x03DC499C FADD S17, S17, S4
	0x03DC49A0 LDR V4, [X31 + 0x14]
	0x03DC49A4 FMUL S5, S6, S5
	0x03DC49A8 FMUL S6, S6, S7
	0x03DC49AC FADD S4, S4, S5
	0x03DC49B0 B 0x3DC49C4
	0x03DC49B4 MOV X0, X31
	0x03DC49B8 BL 0x3C0B398
	0x03DC49BC LDP S16, S6, [X31 + 0x78]
	0x03DC49C0 LDP S17, S4, [X31 + 0x10]
	0x03DC49C4 STP S0, S1, [X20]
	0x03DC49C8 STP S2, S3, [X20 + 0x8]
	0x03DC49CC STP S17, S4, [X19]
	0x03DC49D0 STP S16, S6, [X19 + 0x8]
	0x03DC49D4 LDP X20, X19, [X31 + 0x90]
	0x03DC49D8 LDP X22, X21, [X31 + 0x80]
	0x03DC49DC LDR X30, [X31 + 0x70]
	0x03DC49E0 LDP D9, D8, [X31 + 0x60]
	0x03DC49E4 LDP D11, D10, [X31 + 0x50]
	0x03DC49E8 LDP D13, D12, [X31 + 0x40]
	0x03DC49EC LDP D15, D14, [X31 + 0x30]
	0x03DC49F0 ADD X31, X31, 0xA0
	0x03DC49F4 RET
	0x03DC49F8 BL 0x1C16F20
	0x03DC49FC ADRP X0, 0x338000
	0x03DC4A00 LDR X0, [X0 + 0x758]
	0x03DC4A04 BL 0x1C16D08
	0x03DC4A08 BL 0x1C16F10
	0x03DC4A0C MOV X1, X31
	0x03DC4A10 MOV X19, X0
	0x03DC4A14 BL 0x3380288
	0x03DC4A18 ADRP X0, 0x3A5000
	0x03DC4A1C LDR X0, [X0 + 0x210]
	0x03DC4A20 BL 0x1C16D08
	0x03DC4A24 MOV X1, X0
	0x03DC4A28 MOV X0, X19
	0x03DC4A2C BL 0x1C16DEC
	0x03DC4A30 STP D15, D14, [X31 - 0x50]!
	0x03DC4A34 STP D13, D12, [X31 + 0x10]
	0x03DC4A38 STP D11, D10, [X31 + 0x20]
	0x03DC4A3C STP D9, D8, [X31 + 0x30]
	0x03DC4A40 STP X30, X19, [X31 + 0x40]
	0x03DC4A44 MOV X0, X31
	0x03DC4A48 MOV V8.16B, V7.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x625000
	007 Move W8, [X21+312]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x3A6000
	015 Move X0, [X0+472]
	016 Call 0x1C17CF4
	017 Move X0, 0x3A2000
	018 Move X0, [X0+328]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+312], W8
	022 Move W8, [X19+68]
	023 Compare W8, 0
	024 JumpIfNotEqual {44}
	025 Move X8, 0x3A6000
	026 Move X8, [X8+472]
	027 Move X22, 0x3A2000
	028 Add X21, X19, 16
	029 Move X0, X21
	030 Move X2, [X8]
	031 Move X22, [X22+328]
	032 Move X1, X20
	033 Call NativeSlice`1<Vertex>.CopyFrom, X0, X1
	034 Move X1, [X22]
	035 Move X0, X21
	036 Call NativeSlice`1<Vertex>.get_Length, X0
	037 Move [X19+68], W0
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 
	044 Move X0, 0x330000
	045 Move X0, [X0+1456]
	046 Call 0x1C17D08
	047 Call 0x1C17F10
	048 Move X19, X0
	049 Move X0, 0x3A6000
	050 Move X0, [X0+480]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Move X2, X31
	055 Call InvalidOperationException..ctor, X0, X1
	056 Move X0, 0x3A6000
	057 Move X0, [X0+488]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Call 0x1C17DEC

Method: System.Void SetAllIndices(System.UInt16[] indices)

Disassembly:
	0x03DC4A4C MOV V9.16B, V6.16B
	0x03DC4A50 MOV V10.16B, V5.16B
	0x03DC4A54 MOV V11.16B, V4.16B
	0x03DC4A58 MOV V12.16B, V3.16B
	0x03DC4A5C MOV V13.16B, V2.16B
	0x03DC4A60 MOV V14.16B, V1.16B
	0x03DC4A64 MOV V15.16B, V0.16B
	0x03DC4A68 BL 0x3C0B398
	0x03DC4A6C FCMP S15, S11
	0x03DC4A70 FADD S0, S13, S15
	0x03DC4A74 FADD S2, S9, S11
	0x03DC4A78 FADD S3, S8, S10
	0x03DC4A7C ADRP X19, 0x615000
	0x03DC4A80 FCSEL S8, S15, S11, GT
	0x03DC4A84 FCMP S14, S10
	0x03DC4A88 FADD S1, S12, S14
	0x03DC4A8C LDRB W8, [X19 + 0x78F]
	0x03DC4A90 FCSEL S9, S14, S10, GT
	0x03DC4A94 FCMP S0, S2
	0x03DC4A98 FCSEL S0, S0, S2, MI
	0x03DC4A9C FCMP S1, S3
	0x03DC4AA0 FCSEL S1, S1, S3, MI
	0x03DC4AA4 FSUB S11, S0, S8
	0x03DC4AA8 FSUB S10, S1, S9
	0x03DC4AAC CBNZ W8, 0x3DC4AC4
	0x03DC4AB0 ADRP X0, 0x337000
	0x03DC4AB4 LDR X0, [X0 + 0xF08]
	0x03DC4AB8 BL 0x1C16CF4
	0x03DC4ABC MOVZ W8, 0x1
	0x03DC4AC0 STRB W8, [X19 + 0x78F]
	0x03DC4AC4 ADRP X8, 0x337000
	0x03DC4AC8 LDR X8, [X8 + 0xF08]
	0x03DC4ACC LDP X30, X19, [X31 + 0x40]
	0x03DC4AD0 LDP D13, D12, [X31 + 0x10]
	0x03DC4AD4 LDR X8, [X8]
	0x03DC4AD8 LDR X8, [X8 + 0xB8]
	0x03DC4ADC LDP S0, S1, [X8]
	0x03DC4AE0 FCMP S11, S0
	0x03DC4AE4 FCSEL S2, S11, S0, GT
	0x03DC4AE8 FCMP S10, S1
	0x03DC4AEC FCSEL S3, S10, S1, GT
	0x03DC4AF0 MOV V0.16B, V8.16B
	0x03DC4AF4 MOV V1.16B, V9.16B
	0x03DC4AF8 LDP D9, D8, [X31 + 0x30]
	0x03DC4AFC LDP D11, D10, [X31 + 0x20]
	0x03DC4B00 LDP D15, D14, [X31], #0x50
	0x03DC4B04 RET
	0x03DC4B08 STR X30, [X31 - 0x10]!
	0x03DC4B0C CBZ X0, 0x3DC4BB4
	0x03DC4B10 MOV X1, X31
	0x03DC4B14 BL 0x3C41B58
	0x03DC4B18 CBZ X0, 0x3DC4BB4
	0x03DC4B1C LDR W8, [X0 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x625000
	007 Move W8, [X21+313]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x3A6000
	015 Move X0, [X0+496]
	016 Call 0x1C17CF4
	017 Move X0, 0x3A1000
	018 Move X0, [X0+4024]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+313], W8
	022 Move W8, [X19+64]
	023 Compare W8, 0
	024 JumpIfNotEqual {44}
	025 Move X8, 0x3A6000
	026 Move X8, [X8+496]
	027 Move X22, 0x3A1000
	028 Add X21, X19, 32
	029 Move X0, X21
	030 Move X2, [X8]
	031 Move X22, [X22+4024]
	032 Move X1, X20
	033 Call NativeSlice`1<UInt16>.CopyFrom, X0, X1
	034 Move X1, [X22]
	035 Move X0, X21
	036 Call NativeSlice`1<UInt16>.get_Length, X0
	037 Move [X19+64], W0
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 
	044 Move X0, 0x330000
	045 Move X0, [X0+1456]
	046 Call 0x1C17D08
	047 Call 0x1C17F10
	048 Move X19, X0
	049 Move X0, 0x3A6000
	050 Move X0, [X0+504]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Move X2, X31
	055 Call InvalidOperationException..ctor, X0, X1
	056 Move X0, 0x3A6000
	057 Move X0, [X0+512]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Call 0x1C17DEC

Method: System.Void Reset(Unity.Collections.NativeSlice`1<UnityEngine.UIElements.Vertex> vertices, Unity.Collections.NativeSlice`1<System.UInt16> indices)

Disassembly:
	0x03DC4B20 UBFM X9, X8, 0x20, 0x1F
	0x03DC4B24 CMP X9, 0x1
	0x03DC4B28 B.LT 0x3DC4B88
	0x03DC4B2C MOVN W11, 0x800000
	0x03DC4B30 MOVN W12, 0x80800000
	0x03DC4B34 FMOV S3, W11
	0x03DC4B38 FMOV S1, W12

ISIL:
	001 Move X8, -53317632
	002 Move V0, [X8+188]
	003 Move [X0+16], X1
	004 Move [X0+24], X2
	005 Move [X0+32], X3
	006 Move [X0+40], X4
	007 Move [X0+64], X31
	008 Move [X0+3], V0
	009 Return 

Method: System.Void Reset(Unity.Collections.NativeSlice`1<UnityEngine.UIElements.Vertex> vertices, Unity.Collections.NativeSlice`1<System.UInt16> indices, UnityEngine.Rect uvRegion)

Disassembly:
	0x03DC4B3C SXTW X9, W8
	0x03DC4B40 ADD X10, X0, 0x24
	0x03DC4B44 MOV V0.16B, V1.16B
	0x03DC4B48 MOV V2.16B, V3.16B
	0x03DC4B4C CBZ X8, 0x3DC4BB0
	0x03DC4B50 LDP S4, S5, [X10 - 0x4]

ISIL:
	001 Move [X0+16], X1
	002 Move [X0+24], X2
	003 Move [X0+32], X3
	004 Move [X0+40], X4
	005 Move [X0+48], S0
	006 Move [X0+56], S1
	007 Move [X0+56], S2
	008 Move [X0+64], S3
	009 Move [X0+64], X31
	010 Return 

