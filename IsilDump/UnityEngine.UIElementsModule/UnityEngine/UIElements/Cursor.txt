Type: UnityEngine.UIElements.Cursor

Method: UnityEngine.Texture2D get_texture()

Disassembly:
	0x03D8E074 MOV X0, X19
	0x03D8E078 BL 0x3D8D55C

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void set_texture(UnityEngine.Texture2D value)

Disassembly:
	0x03D8E07C MOV X20, X0
	0x03D8E080 STR X0, [X19 + 0x10]

ISIL:
	001 Move [X0], X1
	002 Return 

Method: UnityEngine.Vector2 get_hotspot()

Disassembly:
	0x03D8E084 CBZ X0, 0x3D8E8E0
	0x03D8E088 ADRP X27, 0x3D9000

ISIL:
	001 Move S0, [X0+8]
	002 Move S1, [X0+12]
	003 Return X0

Method: System.Void set_hotspot(UnityEngine.Vector2 value)

Disassembly:
	0x03D8E08C LDR X8, [X20]
	0x03D8E090 LDR X27, [X27 + 0x968]

ISIL:
	001 Move [X0+8], S0
	002 Move [X0+16], S1
	003 Return 

Method: System.Int32 get_defaultCursorId()

Disassembly:
	0x03D8E094 LDRH W9, [X8 + 0x12E]
	0x03D8E098 LDR X1, [X27]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_defaultCursorId(System.Int32 value)

Disassembly:
	0x03D8E09C CBZ X9, 0x3D8E0C0
	0x03D8E0A0 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03D8E0A4 ADD X10, X10, 0x8
	0x03D8E0A8 LDUR X11, [X10 - 0x8]
	0x03D8E0AC CMP X11, X1
	0x03D8E0B0 B.EQ 0x3D8E0D0
	0x03D8E0B4 SUBS X9, X9, 0x1
	0x03D8E0B8 ADD X10, X10, 0x10
	0x03D8E0BC B.NE 0x3D8E0A8
	0x03D8E0C0 MOVZ W2, 0x6
	0x03D8E0C4 MOV X0, X20
	0x03D8E0C8 BL 0x1C5C788
	0x03D8E0CC B 0x3D8E0E0
	0x03D8E0D0 LDR W9, [X10]
	0x03D8E0D4 ADD W9, W9, 0x6
	0x03D8E0D8 ADD X8, X8, W9, 0x4, SXTW
	0x03D8E0DC ADD X0, X8, 0x138
	0x03D8E0E0 LDP X8, X1, [X0]
	0x03D8E0E4 MOV X0, X20
	0x03D8E0E8 BLR X8
	0x03D8E0EC TBZ X0, 0x0, 0x3D8E8B4
	0x03D8E0F0 LDR X20, [X19 + 0x10]
	0x03D8E0F4 CBNZ X20, 0x3D8E10C
	0x03D8E0F8 MOV X0, X19
	0x03D8E0FC BL 0x3D8D55C
	0x03D8E100 MOV X20, X0
	0x03D8E104 STR X0, [X19 + 0x10]
	0x03D8E108 CBZ X0, 0x3D8E8E0
	0x03D8E10C LDR X8, [X20]
	0x03D8E110 LDR X1, [X27]
	0x03D8E114 LDRH W9, [X8 + 0x12E]
	0x03D8E118 CBZ X9, 0x3D8E13C
	0x03D8E11C LDR X10, [X8 + 0xB0]
	0x03D8E120 ADD X10, X10, 0x8
	0x03D8E124 LDUR X11, [X10 - 0x8]
	0x03D8E128 CMP X11, X1
	0x03D8E12C B.EQ 0x3D8E14C
	0x03D8E130 SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x65A000
	007 Move W8, [X21+3640]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3DA000
	015 Move X0, [X0+2360]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3640], W8
	019 Compare X20, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x3DA000
	022 Move X8, [X8+2360]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X0, X20
	028 Call 0x1C17E08
	029 Move V0, [X0]
	030 Move X8, [X0+16]
	031 Add X1, X31, 0
	032 Move X0, X19
	033 Move [X31], V0
	034 Move [X31+16], X8
	035 Call Cursor.Equals, X0, X1
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 And W0, W0, 1
	041 Add X31, X31, 64
	042 Return X0

Method: System.Boolean Equals(UnityEngine.UIElements.Cursor other)

Disassembly:
	0x03D8E134 ADD X10, X10, 0x10
	0x03D8E138 B.NE 0x3D8E124
	0x03D8E13C MOVZ W2, 0x9
	0x03D8E140 MOV X0, X20
	0x03D8E144 BL 0x1C5C788
	0x03D8E148 B 0x3D8E15C
	0x03D8E14C LDR W9, [X10]
	0x03D8E150 ADD W9, W9, 0x9
	0x03D8E154 ADD X8, X8, W9, 0x4, SXTW
	0x03D8E158 ADD X0, X8, 0x138
	0x03D8E15C LDP X8, X1, [X0]
	0x03D8E160 MOV X0, X20
	0x03D8E164 BLR X8
	0x03D8E168 ADRP X8, 0x38D000
	0x03D8E16C LDR X8, [X8 + 0x930]
	0x03D8E170 MOV V8.16B, V0.16B
	0x03D8E174 MOV V9.16B, V1.16B
	0x03D8E178 LDR X0, [X8]
	0x03D8E17C LDR W8, [X0 + 0xE0]
	0x03D8E180 CBNZ W8, 0x3D8E188
	0x03D8E184 BL 0x1C16DFC
	0x03D8E188 ADD X0, X31, 0x18
	0x03D8E18C MOV V0.16B, V8.16B
	0x03D8E190 MOV V1.16B, V9.16B
	0x03D8E194 MOV X1, X31
	0x03D8E198 BL 0x3E16C40
	0x03D8E19C LDRB W8, [X19 + 0x80]
	0x03D8E1A0 MOV V8.16B, V0.16B
	0x03D8E1A4 MOV V9.16B, V1.16B
	0x03D8E1A8 CBZ W8, 0x3D8E328
	0x03D8E1AC ADRP X20, 0x64B000
	0x03D8E1B0 LDP S0, S11, [X19 + 0x78]
	0x03D8E1B4 LDRB W8, [X20 + 0x5AA]
	0x03D8E1B8 FSUB S10, S8, S0
	0x03D8E1BC CBNZ W8, 0x3D8E1D4
	0x03D8E1C0 ADRP X0, 0x36C000
	0x03D8E1C4 LDR X0, [X0 + 0x4B8]
	0x03D8E1C8 BL 0x1C16CF4
	0x03D8E1CC MOVZ W8, 0x1
	0x03D8E1D0 STRB W8, [X20 + 0x5AA]
	0x03D8E1D4 ADRP X8, 0x36C000
	0x03D8E1D8 LDR X8, [X8 + 0x4B8]
	0x03D8E1DC ADRP X9, 0xFFFFFFFFFCD5C000
	0x03D8E1E0 LDR V1, [X9 + 0x240]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x65A000
	007 Move X22, 0x3DA000
	008 Move W8, [X21+3641]
	009 Move X22, [X22+2368]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3DA000
	017 Move X0, [X0+2368]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3641], W8
	021 Move X0, [X22]
	022 Call 0x211C0E8
	023 Compare X0, 0
	024 JumpIfEqual {53}
	025 Move X8, [X0]
	026 Move X2, [X19]
	027 Move X1, [X20]
	028 Move X9, [X8+440]
	029 Move X3, [X8+448]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {46}
	035 Move V0, [X20+8]
	036 Move V1, [X19+8]
	037 Move W0, W31
	038 NotImplemented "Instruction FCMP not yet implemented."
	039 Move V0, [X20+12]
	040 Move V1, [X19+12]
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 Move W8, [X20+16]
	043 Move W9, [X19+16]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 Move W0, W31
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return X0
	053 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03D8E1E4 FABS S2, S10
	0x03D8E1E8 LDR X8, [X8]
	0x03D8E1EC FMOV S0, W31
	0x03D8E1F0 FMOV S4, 8
	0x03D8E1F4 FMAXNM S2, S2, S0
	0x03D8E1F8 LDR X8, [X8 + 0xB8]
	0x03D8E1FC FMUL S5, S2, S1
	0x03D8E200 FSUB S11, S9, S11
	0x03D8E204 LDR V3, [X8]
	0x03D8E208 FMUL S2, S3, S4
	0x03D8E20C FCMP S5, S2
	0x03D8E210 FCSEL S3, S5, S2, GT
	0x03D8E214 FABD S4, S0, S0
	0x03D8E218 FCMP S4, S3
	0x03D8E21C B.PL 0x3D8E240
	0x03D8E220 FABS S3, S11
	0x03D8E224 FMAXNM S3, S3, S0
	0x03D8E228 FMUL S1, S3, S1
	0x03D8E22C FCMP S1, S2
	0x03D8E230 FCSEL S1, S1, S2, GT
	0x03D8E234 FABD S0, S0, S0
	0x03D8E238 FCMP S0, S1
	0x03D8E23C B.MI 0x3D8E368
	0x03D8E240 STP S8, S9, [X19 + 0x78]
	0x03D8E244 ADRP X20, 0x38E000
	0x03D8E248 LDR X20, [X20 + 0xE50]
	0x03D8E24C LDR X0, [X20]
	0x03D8E250 LDR W8, [X0 + 0xE0]
	0x03D8E254 CBNZ W8, 0x3D8E260
	0x03D8E258 BL 0x1C16DFC
	0x03D8E25C LDR X0, [X20]
	0x03D8E260 ADRP X24, 0x3D9000
	0x03D8E264 LDR X8, [X0 + 0xB8]
	0x03D8E268 LDR X24, [X24 + 0x998]
	0x03D8E26C LDR X21, [X31 + 0x18]
	0x03D8E270 LDR W20, [X8 + 0x8]
	0x03D8E274 LDR X0, [X24]
	0x03D8E278 LDR W8, [X0 + 0xE0]
	0x03D8E27C CBNZ W8, 0x3D8E288
	0x03D8E280 BL 0x1C16DFC
	0x03D8E284 LDR X0, [X24]
	0x03D8E288 LDR X8, [X0 + 0xB8]
	0x03D8E28C LDR X22, [X8 + 0x20]
	0x03D8E290 CBNZ X22, 0x3D8E2E4
	0x03D8E294 LDR W8, [X0 + 0xE0]
	0x03D8E298 CBNZ W8, 0x3D8E2A4
	0x03D8E29C BL 0x1C16DFC
	0x03D8E2A0 LDR X0, [X24]
	0x03D8E2A4 ADRP X9, 0x3D9000
	0x03D8E2A8 LDR X8, [X0 + 0xB8]
	0x03D8E2AC LDR X9, [X9 + 0x9C8]
	0x03D8E2B0 LDR X23, [X8]
	0x03D8E2B4 LDR X0, [X9]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x65A000
	007 Move X21, 0x3DA000
	008 Move W8, [X20+3642]
	009 Move X21, [X21+2368]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x3DA000
	016 Move X0, [X0+2368]
	017 Call 0x1C17CF4
	018 Move X0, 0x3DA000
	019 Move X0, [X0+2376]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3642], W8
	023 Move X0, [X21]
	024 Call 0x211C0E8
	025 Compare X0, 0
	026 JumpIfEqual {65}
	027 Move X8, [X0]
	028 Move X1, [X19]
	029 Move X20, 0x3DA000
	030 Move X9, [X8+456]
	031 Move X2, [X8+464]
	032 Move X20, [X20+2376]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X8, [X20]
	035 Move W20, W0
	036 Move X0, X8
	037 Call 0x211E5A8
	038 Compare X0, 0
	039 JumpIfEqual {65}
	040 Move X8, [X0]
	041 Move S0, [X19+8]
	042 Move S1, [X19+12]
	043 Move X9, [X8+456]
	044 Move X1, [X8+464]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move W8, [X19+16]
	047 Move W19, 0x5529
	048 NotImplemented "Instruction MOVK not yet implemented."
	049 NotImplemented "Instruction MADD not yet implemented."
	050 Add X0, X31, 12
	051 Move X1, X31
	052 Move [X31+12], W8
	053 Call Int32.GetHashCode, X0
	054 Move W8, 0xA091
	055 NotImplemented "Instruction MOVK not yet implemented."
	056 Multiply W8, W8, W19
	057 NotImplemented "Instruction MADD not yet implemented."
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X30, [X31+16]
	061 Move X21, [X31+24]
	062 Add W0, W0, W8
	063 Add X31, X31, 48
	064 Return X0
	065 Call 0x1C17F20

Method: System.Boolean op_Equality(UnityEngine.UIElements.Cursor style1, UnityEngine.UIElements.Cursor style2)

Disassembly:
	0x03D8E2B8 BL 0x1C16F10
	0x03D8E2BC ADRP X8, 0x3D9000
	0x03D8E2C0 LDR X8, [X8 + 0x9D8]
	0x03D8E2C4 MOV X1, X23
	0x03D8E2C8 MOV X3, X31
	0x03D8E2CC MOV X22, X0
	0x03D8E2D0 LDR X2, [X8]
	0x03D8E2D4 BL 0x2D40DB0
	0x03D8E2D8 LDR X8, [X24]
	0x03D8E2DC LDR X8, [X8 + 0xB8]
	0x03D8E2E0 STR X22, [X8 + 0x20]
	0x03D8E2E4 ADRP X8, 0x3D9000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X31, 0
	006 Move [X31+16], X8
	007 Move [X31], V0
	008 Call Cursor.Equals, X0, X1
	009 Move X30, [X31+32]
	010 And W0, W0, 1
	011 Add X31, X31, 48
	012 Return X0

Method: System.String ToString()

Disassembly:
	0x03D8E2E8 LDR X8, [X8 + 0x9B8]
	0x03D8E2EC FMOV S2, W31
	0x03D8E2F0 FMOV S5, W31
	0x03D8E2F4 MOV X0, X19
	0x03D8E2F8 LDR X6, [X8]
	0x03D8E2FC MOV V0.16B, V8.16B
	0x03D8E300 MOV V1.16B, V9.16B
	0x03D8E304 MOV V3.16B, V10.16B
	0x03D8E308 MOV V4.16B, V11.16B
	0x03D8E30C MOV W1, W20
	0x03D8E310 MOV X2, X21
	0x03D8E314 MOV X3, X22
	0x03D8E318 MOV X4, X19
	0x03D8E31C MOV W5, W31
	0x03D8E320 BL 0x21AB1F0
	0x03D8E324 B 0x3D8E368
	0x03D8E328 ADRP X20, 0x64B000
	0x03D8E32C LDRB W8, [X20 + 0x78F]
	0x03D8E330 CBNZ W8, 0x3D8E348
	0x03D8E334 ADRP X0, 0x36D000
	0x03D8E338 LDR X0, [X0 + 0xF08]
	0x03D8E33C BL 0x1C16CF4
	0x03D8E340 MOVZ W8, 0x1
	0x03D8E344 STRB W8, [X20 + 0x78F]
	0x03D8E348 ADRP X8, 0x36D000
	0x03D8E34C LDR X8, [X8 + 0xF08]
	0x03D8E350 LDR X8, [X8]
	0x03D8E354 LDR X8, [X8 + 0xB8]
	0x03D8E358 LDP S10, S11, [X8]
	0x03D8E35C MOVZ W8, 0x1
	0x03D8E360 STP S8, S9, [X19 + 0x78]
	0x03D8E364 STRB W8, [X19 + 0x80]
	0x03D8E368 LDR X20, [X19 + 0x10]
	0x03D8E36C CBNZ X20, 0x3D8E384
	0x03D8E370 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x65A000
	007 Move X22, 0x36E000
	008 Move X21, 0x3DA000
	009 Move W8, [X20+3643]
	010 Move X22, [X22+3848]
	011 Move X21, [X21+2384]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x36E000
	018 Move X0, [X0+3848]
	019 Call 0x1C17CF4
	020 Move X0, 0x3DA000
	021 Move X0, [X0+2384]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3643], W8
	025 Move V0, [X19+8]
	026 Move X0, [X22]
	027 Move X20, [X19]
	028 Add X1, X31, 8
	029 Move [X31+8], D0
	030 Call 0x1C17E04
	031 Move X8, [X21]
	032 Move X2, X0
	033 Move X1, X20
	034 Move X3, X31
	035 Move X0, X8
	036 Call String.Format, X0, X1, X2
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return X0

