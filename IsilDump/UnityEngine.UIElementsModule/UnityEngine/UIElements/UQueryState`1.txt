Type: UnityEngine.UIElements.UQueryState`1

Method: System.Void .ctor(UnityEngine.UIElements.VisualElement element, System.Collections.Generic.List`1<UnityEngine.UIElements.RuleMatcher> matchers)

Disassembly:
	0x02726204 TBZ X0, 0x0, 0x2726220
	0x02726208 ADRP X8, 0xFFFFFFFFFF297000

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], X2
	003 Return 

Method: UnityEngine.UIElements.UQueryState`1<T> RebuildOn(UnityEngine.UIElements.VisualElement element)

Disassembly:
	0x0272620C ADD X8, X8, 0x7A8
	0x02726210 B 0x27261A8
	0x02726214 ADRP X8, 0xFFFFFFFFFF297000
	0x02726218 ADD X8, X8, 0x838
	0x0272621C B 0x27261A8
	0x02726220 ADRP X8, 0xFFFFFFFFFF297000
	0x02726224 ADD X8, X8, 0x770
	0x02726228 B 0x27261A8
	0x0272622C ADRP X1, 0xFFFFFFFFFE3F5000
	0x02726230 ADD X1, X1, 0xEE3
	0x02726234 MOV X0, X31
	0x02726238 BL 0x1C16F3C
	0x0272623C MOV X1, X31
	0x02726240 BL 0x1C16DEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, X0
	005 Move X0, [X2+32]
	006 Move X19, [X8+8]
	007 Move X20, X1
	008 Move W9, [X0+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {14}
	013 Call 0x1C5D684
	014 Move X0, X20
	015 Move X1, X19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return X0

Method: T Single(UnityEngine.UIElements.UQuery/SingleQueryMatcher matcher)

Disassembly:
	0x02726244 LDR X8, [X0 + 0x40]
	0x02726248 LDR X3, [X0 + 0x18]
	0x0272624C LDR X2, [X0 + 0x28]
	0x02726250 MOV X0, X8
	0x02726254 BR X3
	0x02726258 STP X30, X21, [X31 - 0x20]!
	0x0272625C STP X20, X19, [X31 + 0x10]
	0x02726260 LDR X8, [X2 + 0x8]
	0x02726264 STP X1, X2, [X0 + 0x20]
	0x02726268 MOV X19, X0
	0x0272626C MOV X20, X1
	0x02726270 STR X8, [X0 + 0x10]
	0x02726274 LDRB W21, [X2 + 0x52]
	0x02726278 STR X0, [X0 + 0x40]
	0x0272627C MOV X0, X2
	0x02726280 BL 0x1C16D84
	0x02726284 TBZ X0, 0x0, 0x27262A0
	0x02726288 CMP W21, 0x1
	0x0272628C B.NE 0x27262A4
	0x02726290 ADRP X8, 0xFFFFFFFFFF297000
	0x02726294 ADD X8, X8, 0x968
	0x02726298 STR X8, [X19 + 0x18]
	0x0272629C B 0x27262B4
	0x027262A0 CBZ X20, 0x27262CC
	0x027262A4 LDR X8, [X19 + 0x10]
	0x027262A8 LDR X9, [X19 + 0x20]
	0x027262AC STR X8, [X19 + 0x18]
	0x027262B0 STR X9, [X19 + 0x40]
	0x027262B4 ADRP X8, 0xFFFFFFFFFF297000
	0x027262B8 ADD X8, X8, 0x910
	0x027262BC STR X8, [X19 + 0x38]
	0x027262C0 LDP X20, X19, [X31 + 0x10]
	0x027262C4 LDP X30, X21, [X31], #0x20
	0x027262C8 RET
	0x027262CC ADRP X1, 0xFFFFFFFFFE3F5000
	0x027262D0 ADD X1, X1, 0xEE3
	0x027262D4 MOV X0, X31
	0x027262D8 BL 0x1C16F3C
	0x027262DC MOV X1, X31
	0x027262E0 BL 0x1C16DEC
	0x027262E4 LDR X8, [X0 + 0x40]
	0x027262E8 LDR X4, [X0 + 0x18]
	0x027262EC LDR X3, [X0 + 0x28]
	0x027262F0 MOV X0, X8
	0x027262F4 BR X4
	0x027262F8 STR X30, [X31 - 0x30]!
	0x027262FC STP X22, X21, [X31 + 0x10]
	0x02726300 STP X20, X19, [X31 + 0x20]
	0x02726304 LDR X8, [X2 + 0x8]
	0x02726308 STP X1, X2, [X0 + 0x20]
	0x0272630C MOV X19, X0
	0x02726310 MOV X20, X2
	0x02726314 STR X8, [X0 + 0x10]
	0x02726318 LDRB W22, [X2 + 0x52]
	0x0272631C STR X0, [X0 + 0x40]
	0x02726320 MOV X0, X2
	0x02726324 MOV X21, X1
	0x02726328 BL 0x1C16D84
	0x0272632C TBZ X0, 0x0, 0x2726344
	0x02726330 CMP W22, 0x2
	0x02726334 B.NE 0x2726380
	0x02726338 ADRP X8, 0xFFFFFFFFFF297000
	0x0272633C ADD X8, X8, 0x9F8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {89}
	007 Move X19, X1
	008 Move X21, X0
	009 Move X0, X1
	010 Move X1, X31
	011 Move X20, X2
	012 Call SingleQueryMatcher.IsInUse, X0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {25}
	017 Move X8, [X19]
	018 Move X0, X19
	019 Move X9, [X8+440]
	020 Move X1, [X8+448]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X19, X0
	023 Compare X0, 0
	024 JumpIfEqual {89}
	025 Move X8, [X19]
	026 Move X1, [X21]
	027 Move X2, [X21+8]
	028 Move X0, X19
	029 Move X9, [X8+424]
	030 Move X3, [X8+432]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X0, [X20+32]
	033 Move X21, [X19+24]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X1, [X8+16]
	042 Move W8, [X1+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {50}
	047 Move X0, X1
	048 Call 0x1C5D684
	049 Move X1, X0
	050 Move X0, X21
	051 Call 0x1C17E00
	052 Move X8, [X20+32]
	053 Move X20, X0
	054 Move W9, [X8+309]
	055 Move TEMP, X9
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {62}
	059 Move X0, X8
	060 Call 0x1C5D684
	061 Move X8, X0
	062 Move X8, [X8+192]
	063 Move X21, [X8+16]
	064 Move W8, [X21+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {72}
	069 Move X0, X21
	070 Call 0x1C5D684
	071 Move X21, X0
	072 Compare X20, 0
	073 JumpIfEqual {82}
	074 Move X0, X20
	075 Move X1, X21
	076 Call 0x1C17E00
	077 Compare X0, 0
	078 JumpIfNotEqual {83}
	079 Move X0, X20
	080 Move X1, X21
	081 Call 0x1C181E0
	082 Move X0, X31
	083 Move [X19+24], X31
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X30, [X31+32]
	087 Move X21, [X31+40]
	088 Return X0
	089 Call 0x1C17F20

Method: T First()

Disassembly:
	0x02726340 B 0x27263C4
	0x02726344 CMP W22, 0x1
	0x02726348 B.NE 0x272637C
	0x0272634C LDRB W8, [X19 + 0x70]
	0x02726350 CBZ W8, 0x2726394
	0x02726354 MOV X0, X20
	0x02726358 BL 0x1C16D7C
	0x0272635C MOV W21, W0
	0x02726360 MOV X0, X20
	0x02726364 BL 0x1C17238
	0x02726368 TBZ X21, 0x0, 0x27263A0
	0x0272636C TBZ X0, 0x0, 0x27263B0
	0x02726370 ADRP X8, 0xFFFFFFFFFF297000
	0x02726374 ADD X8, X8, 0xB14
	0x02726378 B 0x27263C4
	0x0272637C CBZ X21, 0x27263E4
	0x02726380 LDR X8, [X19 + 0x10]
	0x02726384 LDR X9, [X19 + 0x20]
	0x02726388 STR X8, [X19 + 0x18]
	0x0272638C STR X9, [X19 + 0x40]
	0x02726390 B 0x27263C8
	0x02726394 ADRP X8, 0xFFFFFFFFFF297000
	0x02726398 ADD X8, X8, 0x9D4
	0x0272639C B 0x27263C4
	0x027263A0 TBZ X0, 0x0, 0x27263BC
	0x027263A4 ADRP X8, 0xFFFFFFFFFF297000
	0x027263A8 ADD X8, X8, 0xA3C
	0x027263AC B 0x27263C4
	0x027263B0 ADRP X8, 0xFFFFFFFFFF297000
	0x027263B4 ADD X8, X8, 0xAC8
	0x027263B8 B 0x27263C4
	0x027263BC ADRP X8, 0xFFFFFFFFFF297000
	0x027263C0 ADD X8, X8, 0xA0C
	0x027263C4 STR X8, [X19 + 0x18]
	0x027263C8 ADRP X8, 0xFFFFFFFFFF297000
	0x027263CC ADD X8, X8, 0x97C
	0x027263D0 STR X8, [X19 + 0x38]
	0x027263D4 LDP X20, X19, [X31 + 0x20]
	0x027263D8 LDP X22, X21, [X31 + 0x10]
	0x027263DC LDR X30, [X31], #0x30
	0x027263E0 RET
	0x027263E4 ADRP X1, 0xFFFFFFFFFE3F5000
	0x027263E8 ADD X1, X1, 0xEE3
	0x027263EC MOV X0, X31
	0x027263F0 BL 0x1C16F3C
	0x027263F4 MOV X1, X31
	0x027263F8 BL 0x1C16DEC
	0x027263FC LDR X8, [X0 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1CB5000
	007 Move X21, 0x19F8000
	008 Move W8, [X22+1611]
	009 Move X21, [X21+2664]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x19F8000
	017 Move X0, [X0+2664]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1611], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X20+32]
	028 Move X9, [X0+184]
	029 Move W10, [X8+309]
	030 Move X21, [X9]
	031 Move TEMP, X10
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {38}
	035 Move X0, X8
	036 Call 0x1C5D684
	037 Move X8, X0
	038 Move X8, [X8+192]
	039 Move X0, [X8+32]
	040 Move W8, [X0+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {46}
	045 Call 0x1C5D684
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X20+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, X19
	059 Move X1, X21
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X2, [X8+24]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Call 0x2726244, X0, X1
	067 Return X0

Method: UnityEngine.UIElements.UQueryState`1/Enumerator<T> GetEnumerator()

Disassembly:
	0x02726400 LDR X4, [X0 + 0x18]
	0x02726404 LDR X3, [X0 + 0x28]
	0x02726408 MOV X0, X8
	0x0272640C BR X4
	0x02726410 STR X30, [X31 - 0x30]!
	0x02726414 STP X22, X21, [X31 + 0x10]
	0x02726418 STP X20, X19, [X31 + 0x20]
	0x0272641C LDR X8, [X2 + 0x8]
	0x02726420 STP X1, X2, [X0 + 0x20]
	0x02726424 MOV X19, X0
	0x02726428 MOV X20, X2
	0x0272642C STR X8, [X0 + 0x10]
	0x02726430 LDRB W22, [X2 + 0x52]
	0x02726434 STR X0, [X0 + 0x40]
	0x02726438 MOV X0, X2
	0x0272643C MOV X21, X1
	0x02726440 BL 0x1C16D84
	0x02726444 TBZ X0, 0x0, 0x272645C
	0x02726448 CMP W22, 0x2
	0x0272644C B.NE 0x2726498

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, [X0]
	007 Move X20, [X0+8]
	008 Move [X31], X31
	009 Move X0, [X1+32]
	010 Move W8, [X0+309]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {16}
	015 Call 0x1C5D684
	016 Move X8, [X0+192]
	017 Add X0, X31, 0
	018 Move X1, X19
	019 Move X2, X20
	020 Move X3, [X8+48]
	021 Call 0x2BC6564, X0, X1
	022 Move X0, [X31]
	023 Move X1, [X31+8]
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Add X31, X31, 48
	028 Return X0

Method: System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()

Disassembly:
	0x02726450 ADRP X8, 0xFFFFFFFFFF297000
	0x02726454 ADD X8, X8, 0xC24
	0x02726458 B 0x27264DC
	0x0272645C CMP W22, 0x1
	0x02726460 B.NE 0x2726494
	0x02726464 LDRB W8, [X19 + 0x70]
	0x02726468 CBZ W8, 0x27264AC
	0x0272646C MOV X0, X20
	0x02726470 BL 0x1C16D7C
	0x02726474 MOV W21, W0
	0x02726478 MOV X0, X20
	0x0272647C BL 0x1C17238
	0x02726480 TBZ X21, 0x0, 0x27264B8
	0x02726484 TBZ X0, 0x0, 0x27264C8
	0x02726488 ADRP X8, 0xFFFFFFFFFF297000
	0x0272648C ADD X8, X8, 0xD40
	0x02726490 B 0x27264DC
	0x02726494 CBZ X21, 0x27264FC
	0x02726498 LDR X8, [X19 + 0x10]
	0x0272649C LDR X9, [X19 + 0x20]
	0x027264A0 STR X8, [X19 + 0x18]
	0x027264A4 STR X9, [X19 + 0x40]
	0x027264A8 B 0x27264E0
	0x027264AC ADRP X8, 0xFFFFFFFFFF297000
	0x027264B0 ADD X8, X8, 0xC00
	0x027264B4 B 0x27264DC
	0x027264B8 TBZ X0, 0x0, 0x27264D4
	0x027264BC ADRP X8, 0xFFFFFFFFFF297000
	0x027264C0 ADD X8, X8, 0xC68
	0x027264C4 B 0x27264DC
	0x027264C8 ADRP X8, 0xFFFFFFFFFF297000
	0x027264CC ADD X8, X8, 0xCF4
	0x027264D0 B 0x27264DC
	0x027264D4 ADRP X8, 0xFFFFFFFFFF297000
	0x027264D8 ADD X8, X8, 0xC38
	0x027264DC STR X8, [X19 + 0x18]
	0x027264E0 ADRP X8, 0xFFFFFFFFFF297000
	0x027264E4 ADD X8, X8, 0xBA8
	0x027264E8 STR X8, [X19 + 0x38]
	0x027264EC LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X8, [X1+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, [X8+32]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, [X19+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X0, X20
	037 Move X1, [X8+56]
	038 Call 0x2726400, X0
	039 Move [X31], X0
	040 Move [X31+8], X1
	041 Move X0, [X19+32]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+192]
	049 Add X1, X31, 0
	050 Move X0, [X8+40]
	051 Call 0x1C17E04
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+16]
	055 Add X31, X31, 48
	056 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x027264F0 LDP X22, X21, [X31 + 0x10]
	0x027264F4 LDR X30, [X31], #0x30
	0x027264F8 RET
	0x027264FC ADRP X1, 0xFFFFFFFFFE3F5000
	0x02726500 ADD X1, X1, 0xEE3
	0x02726504 MOV X0, X31
	0x02726508 BL 0x1C16F3C
	0x0272650C MOV X1, X31
	0x02726510 BL 0x1C16DEC
	0x02726514 LDR X8, [X0 + 0x40]
	0x02726518 LDR X4, [X0 + 0x18]
	0x0272651C LDR X3, [X0 + 0x28]
	0x02726520 MOV X0, X8
	0x02726524 BR X4
	0x02726528 STR X30, [X31 - 0x30]!
	0x0272652C STP X22, X21, [X31 + 0x10]
	0x02726530 STP X20, X19, [X31 + 0x20]
	0x02726534 LDR X8, [X2 + 0x8]
	0x02726538 STP X1, X2, [X0 + 0x20]
	0x0272653C MOV X19, X0
	0x02726540 MOV X20, X2
	0x02726544 STR X8, [X0 + 0x10]
	0x02726548 LDRB W22, [X2 + 0x52]
	0x0272654C STR X0, [X0 + 0x40]
	0x02726550 MOV X0, X2
	0x02726554 MOV X21, X1
	0x02726558 BL 0x1C16D84
	0x0272655C TBZ X0, 0x0, 0x2726574
	0x02726560 CMP W22, 0x2
	0x02726564 B.NE 0x27265B0
	0x02726568 ADRP X8, 0xFFFFFFFFFF297000
	0x0272656C ADD X8, X8, 0xE5C
	0x02726570 B 0x27265F4
	0x02726574 CMP W22, 0x1
	0x02726578 B.NE 0x27265AC
	0x0272657C LDRB W8, [X19 + 0x70]
	0x02726580 CBZ W8, 0x27265C4
	0x02726584 MOV X0, X20
	0x02726588 BL 0x1C16D7C
	0x0272658C MOV W21, W0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X8, [X1+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, [X8+32]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, [X19+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X0, X20
	037 Move X1, [X8+56]
	038 Call 0x2726400, X0
	039 Move [X31], X0
	040 Move [X31+8], X1
	041 Move X0, [X19+32]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+192]
	049 Add X1, X31, 0
	050 Move X0, [X8+40]
	051 Call 0x1C17E04
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+16]
	055 Add X31, X31, 48
	056 Return X0

Method: System.Boolean Equals(UnityEngine.UIElements.UQueryState`1<T> other)

Disassembly:
	0x02726590 MOV X0, X20
	0x02726594 BL 0x1C17238
	0x02726598 TBZ X21, 0x0, 0x27265D0
	0x0272659C TBZ X0, 0x0, 0x27265E0
	0x027265A0 ADRP X8, 0xFFFFFFFFFF297000
	0x027265A4 ADD X8, X8, 0xF98
	0x027265A8 B 0x27265F4
	0x027265AC CBZ X21, 0x2726614
	0x027265B0 LDR X8, [X19 + 0x10]
	0x027265B4 LDR X9, [X19 + 0x20]
	0x027265B8 STR X8, [X19 + 0x18]
	0x027265BC STR X9, [X19 + 0x40]
	0x027265C0 B 0x27265F8
	0x027265C4 ADRP X8, 0xFFFFFFFFFF297000
	0x027265C8 ADD X8, X8, 0xE34
	0x027265CC B 0x27265F4
	0x027265D0 TBZ X0, 0x0, 0x27265EC
	0x027265D4 ADRP X8, 0xFFFFFFFFFF297000
	0x027265D8 ADD X8, X8, 0xEA8
	0x027265DC B 0x27265F4
	0x027265E0 ADRP X8, 0xFFFFFFFFFF297000
	0x027265E4 ADD X8, X8, 0xF44
	0x027265E8 B 0x27265F4
	0x027265EC ADRP X8, 0xFFFFFFFFFF297000
	0x027265F0 ADD X8, X8, 0xE74
	0x027265F4 STR X8, [X19 + 0x18]
	0x027265F8 ADRP X8, 0xFFFFFFFFFF297000
	0x027265FC ADD X8, X8, 0xDD4
	0x02726600 STR X8, [X19 + 0x38]
	0x02726604 LDP X20, X19, [X31 + 0x20]
	0x02726608 LDP X22, X21, [X31 + 0x10]
	0x0272660C LDR X30, [X31], #0x30
	0x02726610 RET
	0x02726614 ADRP X1, 0xFFFFFFFFFE3F5000
	0x02726618 ADD X1, X1, 0xEE3
	0x0272661C MOV X0, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1CB5000
	007 Move W8, [X22+1612]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x19F8000
	016 Move X0, [X0+2648]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1612], W8
	020 Move X8, [X20]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X22, [X31+16]
	025 Move X21, [X31+24]
	026 Move W0, W31
	027 Move X30, [X31+48]
	028 Return X0
	029 Move X8, 0x19F8000
	030 Move X8, [X8+2648]
	031 Move X0, [X8]
	032 Call 0x211C0E8
	033 Compare X0, 0
	034 JumpIfEqual {46}
	035 Move X8, [X0]
	036 Move X1, [X20+8]
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X4, [X8+440]
	041 Move X3, [X8+448]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 CallNoReturn X4
	046 Call 0x1C17F20

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x02726620 BL 0x1C16F3C
	0x02726624 MOV X1, X31
	0x02726628 BL 0x1C16DEC
	0x0272662C LDR X8, [X0 + 0x40]
	0x02726630 LDR X5, [X0 + 0x18]
	0x02726634 LDR X4, [X0 + 0x28]
	0x02726638 MOV X0, X8
	0x0272663C BR X5
	0x02726640 STR X30, [X31 - 0x30]!
	0x02726644 STP X22, X21, [X31 + 0x10]
	0x02726648 STP X20, X19, [X31 + 0x20]
	0x0272664C LDR X8, [X2 + 0x8]
	0x02726650 STP X1, X2, [X0 + 0x20]
	0x02726654 MOV X19, X0
	0x02726658 MOV X20, X2
	0x0272665C STR X8, [X0 + 0x10]
	0x02726660 LDRB W22, [X2 + 0x52]
	0x02726664 STR X0, [X0 + 0x40]
	0x02726668 MOV X0, X2
	0x0272666C MOV X21, X1
	0x02726670 BL 0x1C16D84
	0x02726674 TBZ X0, 0x0, 0x272668C
	0x02726678 CMP W22, 0x2
	0x0272667C B.NE 0x27266C8
	0x02726680 ADRP X8, 0xFFFFFFFFFF298000
	0x02726684 ADD X8, X8, 0xB8
	0x02726688 B 0x272670C
	0x0272668C CMP W22, 0x1
	0x02726690 B.NE 0x27266C4
	0x02726694 LDRB W8, [X19 + 0x70]
	0x02726698 CBZ W8, 0x27266DC
	0x0272669C MOV X0, X20
	0x027266A0 BL 0x1C16D7C
	0x027266A4 MOV W21, W0
	0x027266A8 MOV X0, X20
	0x027266AC BL 0x1C17238
	0x027266B0 TBZ X21, 0x0, 0x27266E8
	0x027266B4 TBZ X0, 0x0, 0x27266F8
	0x027266B8 ADRP X8, 0xFFFFFFFFFF298000
	0x027266BC ADD X8, X8, 0x1D4
	0x027266C0 B 0x272670C
	0x027266C4 CBZ X21, 0x272672C
	0x027266C8 LDR X8, [X19 + 0x10]
	0x027266CC LDR X9, [X19 + 0x20]
	0x027266D0 STR X8, [X19 + 0x18]
	0x027266D4 STR X9, [X19 + 0x40]
	0x027266D8 B 0x2726710
	0x027266DC ADRP X8, 0xFFFFFFFFFF298000
	0x027266E0 ADD X8, X8, 0x94
	0x027266E4 B 0x272670C
	0x027266E8 TBZ X0, 0x0, 0x2726704
	0x027266EC ADRP X8, 0xFFFFFFFFFF298000
	0x027266F0 ADD X8, X8, 0xFC
	0x027266F4 B 0x272670C
	0x027266F8 ADRP X8, 0xFFFFFFFFFF298000
	0x027266FC ADD X8, X8, 0x188
	0x02726700 B 0x272670C
	0x02726704 ADRP X8, 0xFFFFFFFFFF298000
	0x02726708 ADD X8, X8, 0xCC
	0x0272670C STR X8, [X19 + 0x18]
	0x02726710 ADRP X8, 0xFFFFFFFFFF298000
	0x02726714 ADD X8, X8, 0x3C
	0x02726718 STR X8, [X19 + 0x38]
	0x0272671C LDP X20, X19, [X31 + 0x20]
	0x02726720 LDP X22, X21, [X31 + 0x10]
	0x02726724 LDR X30, [X31], #0x30
	0x02726728 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X20, X2
	007 Move X21, X1
	008 Move X19, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Compare X21, 0
	026 JumpIfEqual {29}
	027 Move X8, [X21]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move W0, W31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0
	035 Move X0, [X20+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, [X8+32]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, [X20+32]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move X8, [X0+192]
	062 Move X1, [X8]
	063 Move W8, [X1+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {71}
	068 Move X0, X1
	069 Call 0x1C5D684
	070 Move X1, X0
	071 Move X8, [X21]
	072 Move X9, [X1+64]
	073 Move X0, X21
	074 Move X8, [X8+64]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Call 0x1C17E08
	077 Move X8, X0
	078 Move X0, [X20+32]
	079 Move X21, [X8]
	080 Move X20, [X8+8]
	081 Move W9, [X0+309]
	082 Move TEMP, X9
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {87}
	086 Call 0x1C5D684
	087 Move X0, X19
	088 Move X2, X20
	089 Move X20, [X31+16]
	090 Move X19, [X31+24]
	091 Move X1, X21
	092 Move X30, [X31+32]
	093 Move X21, [X31+40]
	094 Call 0x2726590, X0, X1
	095 Return X0
	096 Call 0x1C181E0

Method: System.Int32 GetHashCode()

Disassembly:
	0x0272672C ADRP X1, 0xFFFFFFFFFE3F5000
	0x02726730 ADD X1, X1, 0xEE3
	0x02726734 MOV X0, X31
	0x02726738 BL 0x1C16F3C
	0x0272673C MOV X1, X31
	0x02726740 BL 0x1C16DEC
	0x02726744 LDR X8, [X0 + 0x40]
	0x02726748 LDR X4, [X0 + 0x18]
	0x0272674C LDR X3, [X0 + 0x28]
	0x02726750 MOV X0, X8
	0x02726754 BR X4
	0x02726758 STR X30, [X31 - 0x30]!
	0x0272675C STP X22, X21, [X31 + 0x10]
	0x02726760 STP X20, X19, [X31 + 0x20]
	0x02726764 LDR X8, [X2 + 0x8]
	0x02726768 STP X1, X2, [X0 + 0x20]
	0x0272676C MOV X19, X0
	0x02726770 MOV X20, X2
	0x02726774 STR X8, [X0 + 0x10]
	0x02726778 LDRB W22, [X2 + 0x52]
	0x0272677C STR X0, [X0 + 0x40]
	0x02726780 MOV X0, X2
	0x02726784 MOV X21, X1
	0x02726788 BL 0x1C16D84
	0x0272678C TBZ X0, 0x0, 0x27267A4
	0x02726790 CMP W22, 0x2
	0x02726794 B.NE 0x27267E0
	0x02726798 ADRP X8, 0xFFFFFFFFFF298000
	0x0272679C ADD X8, X8, 0x2E8
	0x027267A0 B 0x2726824
	0x027267A4 CMP W22, 0x1
	0x027267A8 B.NE 0x27267DC
	0x027267AC LDRB W8, [X19 + 0x70]
	0x027267B0 CBZ W8, 0x27267F4
	0x027267B4 MOV X0, X20
	0x027267B8 BL 0x1C16D7C
	0x027267BC MOV W21, W0
	0x027267C0 MOV X0, X20
	0x027267C4 BL 0x1C17238
	0x027267C8 TBZ X21, 0x0, 0x2726800
	0x027267CC TBZ X0, 0x0, 0x2726810
	0x027267D0 ADRP X8, 0xFFFFFFFFFF298000
	0x027267D4 ADD X8, X8, 0x40C
	0x027267D8 B 0x2726824

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1CB5000
	006 Move X21, 0x19F8000
	007 Move W8, [X20+1613]
	008 Move X21, [X21+2656]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x19F8000
	015 Move X0, [X0+2648]
	016 Call 0x1C17CF4
	017 Move X0, 0x19F8000
	018 Move X0, [X0+2656]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1613], W8
	022 Move X0, [X21]
	023 Call 0x211C0E8
	024 Compare X0, 0
	025 JumpIfEqual {55}
	026 Move X8, [X0]
	027 Move X1, [X19]
	028 Move X20, 0x19F8000
	029 Move X9, [X8+456]
	030 Move X2, [X8+464]
	031 Move X20, [X20+2648]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X8, [X20]
	034 Move W20, W0
	035 Move X0, X8
	036 Call 0x211C0E8
	037 Compare X0, 0
	038 JumpIfEqual {55}
	039 Move X8, [X0]
	040 Move X1, [X19+8]
	041 Move X9, [X8+456]
	042 Move X2, [X8+464]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move W8, 0x5529
	045 NotImplemented "Instruction MOVK not yet implemented."
	046 NotImplemented "Instruction MADD not yet implemented."
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move W9, 0x1975
	050 NotImplemented "Instruction MOVK not yet implemented."
	051 Add W0, W8, W9
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return X0
	055 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x027267DC CBZ X21, 0x2726844
	0x027267E0 LDR X8, [X19 + 0x10]
	0x027267E4 LDR X9, [X19 + 0x20]
	0x027267E8 STR X8, [X19 + 0x18]
	0x027267EC STR X9, [X19 + 0x40]
	0x027267F0 B 0x2726828
	0x027267F4 ADRP X8, 0xFFFFFFFFFF298000
	0x027267F8 ADD X8, X8, 0x2C0
	0x027267FC B 0x2726824
	0x02726800 TBZ X0, 0x0, 0x272681C
	0x02726804 ADRP X8, 0xFFFFFFFFFF298000
	0x02726808 ADD X8, X8, 0x334
	0x0272680C B 0x2726824
	0x02726810 ADRP X8, 0xFFFFFFFFFF298000
	0x02726814 ADD X8, X8, 0x3C0
	0x02726818 B 0x2726824
	0x0272681C ADRP X8, 0xFFFFFFFFFF298000
	0x02726820 ADD X8, X8, 0x300
	0x02726824 STR X8, [X19 + 0x18]
	0x02726828 ADRP X8, 0xFFFFFFFFFF298000
	0x0272682C ADD X8, X8, 0x268
	0x02726830 STR X8, [X19 + 0x38]
	0x02726834 LDP X20, X19, [X31 + 0x20]
	0x02726838 LDP X22, X21, [X31 + 0x10]
	0x0272683C LDR X30, [X31], #0x30
	0x02726840 RET
	0x02726844 ADRP X1, 0xFFFFFFFFFE3F5000
	0x02726848 ADD X1, X1, 0xEE3
	0x0272684C MOV X0, X31
	0x02726850 BL 0x1C16F3C
	0x02726854 MOV X1, X31
	0x02726858 BL 0x1C16DEC
	0x0272685C LDR X8, [X0 + 0x40]
	0x02726860 LDR X4, [X0 + 0x18]
	0x02726864 LDR X3, [X0 + 0x28]
	0x02726868 AND X2, X2, 0x0
	0x0272686C MOV X0, X8
	0x02726870 BR X4
	0x02726874 STR X30, [X31 - 0x30]!
	0x02726878 STP X22, X21, [X31 + 0x10]
	0x0272687C STP X20, X19, [X31 + 0x20]
	0x02726880 LDR X8, [X2 + 0x8]
	0x02726884 STP X1, X2, [X0 + 0x20]
	0x02726888 MOV X19, X0
	0x0272688C MOV X20, X2
	0x02726890 STR X8, [X0 + 0x10]
	0x02726894 LDRB W22, [X2 + 0x52]
	0x02726898 STR X0, [X0 + 0x40]
	0x0272689C MOV X0, X2
	0x027268A0 MOV X21, X1
	0x027268A4 BL 0x1C16D84
	0x027268A8 TBZ X0, 0x0, 0x27268C0
	0x027268AC CMP W22, 0x2
	0x027268B0 B.NE 0x27268FC
	0x027268B4 ADRP X8, 0xFFFFFFFFFF298000
	0x027268B8 ADD X8, X8, 0x520
	0x027268BC B 0x2726940
	0x027268C0 CMP W22, 0x1
	0x027268C4 B.NE 0x27268F8
	0x027268C8 LDRB W8, [X19 + 0x70]
	0x027268CC CBZ W8, 0x2726910
	0x027268D0 MOV X0, X20
	0x027268D4 BL 0x1C16D7C
	0x027268D8 MOV W21, W0
	0x027268DC MOV X0, X20
	0x027268E0 BL 0x1C17238
	0x027268E4 TBZ X21, 0x0, 0x272691C
	0x027268E8 TBZ X0, 0x0, 0x272692C
	0x027268EC ADRP X8, 0xFFFFFFFFFF298000
	0x027268F0 ADD X8, X8, 0x63C
	0x027268F4 B 0x2726940
	0x027268F8 CBZ X21, 0x2726960
	0x027268FC LDR X8, [X19 + 0x10]
	0x02726900 LDR X9, [X19 + 0x20]
	0x02726904 STR X8, [X19 + 0x18]
	0x02726908 STR X9, [X19 + 0x40]
	0x0272690C B 0x2726944
	0x02726910 ADRP X8, 0xFFFFFFFFFF298000
	0x02726914 ADD X8, X8, 0x4FC
	0x02726918 B 0x2726940
	0x0272691C TBZ X0, 0x0, 0x2726938
	0x02726920 ADRP X8, 0xFFFFFFFFFF298000
	0x02726924 ADD X8, X8, 0x564
	0x02726928 B 0x2726940
	0x0272692C ADRP X8, 0xFFFFFFFFFF298000
	0x02726930 ADD X8, X8, 0x5F0
	0x02726934 B 0x2726940
	0x02726938 ADRP X8, 0xFFFFFFFFFF298000
	0x0272693C ADD X8, X8, 0x534
	0x02726940 STR X8, [X19 + 0x18]
	0x02726944 ADRP X8, 0xFFFFFFFFFF298000
	0x02726948 ADD X8, X8, 0x4A4
	0x0272694C STR X8, [X19 + 0x38]
	0x02726950 LDP X20, X19, [X31 + 0x20]
	0x02726954 LDP X22, X21, [X31 + 0x10]
	0x02726958 LDR X30, [X31], #0x30
	0x0272695C RET
	0x02726960 ADRP X1, 0xFFFFFFFFFE3F5000
	0x02726964 ADD X1, X1, 0xEE3
	0x02726968 MOV X0, X31
	0x0272696C BL 0x1C16F3C
	0x02726970 MOV X1, X31
	0x02726974 BL 0x1C16DEC
	0x02726978 LDR X8, [X0 + 0x40]
	0x0272697C LDR X4, [X0 + 0x18]
	0x02726980 LDR X3, [X0 + 0x28]
	0x02726984 MOV X0, X8
	0x02726988 BR X4
	0x0272698C STR X30, [X31 - 0x30]!
	0x02726990 STP X22, X21, [X31 + 0x10]
	0x02726994 STP X20, X19, [X31 + 0x20]
	0x02726998 LDR X8, [X2 + 0x8]
	0x0272699C STP X1, X2, [X0 + 0x20]
	0x027269A0 MOV X19, X0
	0x027269A4 MOV X20, X2
	0x027269A8 STR X8, [X0 + 0x10]
	0x027269AC LDRB W22, [X2 + 0x52]
	0x027269B0 STR X0, [X0 + 0x40]
	0x027269B4 MOV X0, X2
	0x027269B8 MOV X21, X1
	0x027269BC BL 0x1C16D84
	0x027269C0 TBZ X0, 0x0, 0x27269D8
	0x027269C4 CMP W22, 0x2
	0x027269C8 B.NE 0x2726A14
	0x027269CC ADRP X8, 0xFFFFFFFFFF298000
	0x027269D0 ADD X8, X8, 0x760
	0x027269D4 B 0x2726A58
	0x027269D8 CMP W22, 0x1
	0x027269DC B.NE 0x2726A10
	0x027269E0 LDRB W8, [X19 + 0x70]
	0x027269E4 CBZ W8, 0x2726A28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+80]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X20, X0
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move X0, X20
	033 Move X1, [X8+88]
	034 Call 0x297F308, X0
	035 Move X0, [X19+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, [X8+32]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+184]
	051 Move [X8], X20
	052 Move X0, [X19+32]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move X8, [X0+192]
	060 Move X0, [X8+32]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X0, [X19+32]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move X8, [X0+192]
	075 Move X0, [X8+96]
	076 Move W8, [X0+309]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {82}
	081 Call 0x1C5D684
	082 Call 0x1C17F10
	083 Move X8, [X19+32]
	084 Move X20, X0
	085 Move W9, [X8+309]
	086 Move TEMP, X9
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {93}
	090 Move X0, X8
	091 Call 0x1C5D684
	092 Move X8, X0
	093 Move X8, [X8+192]
	094 Move X0, X20
	095 Move X1, [X8+104]
	096 Call 0x2EF40E8, X0
	097 Move X0, [X19+32]
	098 Move W8, [X0+309]
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {104}
	103 Call 0x1C5D684
	104 Move X8, [X0+192]
	105 Move X0, [X8+32]
	106 Move W8, [X0+309]
	107 Move TEMP, X8
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {112}
	111 Call 0x1C5D684
	112 Move X8, [X0+184]
	113 Move [X8+8], X20
	114 Move X0, [X19+32]
	115 Move W8, [X0+309]
	116 Move TEMP, X8
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {121}
	120 Call 0x1C5D684
	121 Move X8, [X0+192]
	122 Move X0, [X8+32]
	123 Move W8, [X0+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {129}
	128 Call 0x1C5D684
	129 Move X0, [X19+32]
	130 Move W8, [X0+309]
	131 Move TEMP, X8
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {136}
	135 Call 0x1C5D684
	136 Move X8, [X0+192]
	137 Move X0, [X8+112]
	138 Move W8, [X0+309]
	139 Move TEMP, X8
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {144}
	143 Call 0x1C5D684
	144 Call 0x1C17F10
	145 Move X8, [X19+32]
	146 Move X20, X0
	147 Move W9, [X8+309]
	148 Move TEMP, X9
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {155}
	152 Move X0, X8
	153 Call 0x1C5D684
	154 Move X8, X0
	155 Move X8, [X8+192]
	156 Move X0, X20
	157 Move X1, [X8+120]
	158 Call 0x2EF40E8, X0
	159 Move X0, [X19+32]
	160 Move W8, [X0+309]
	161 Move TEMP, X8
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {166}
	165 Call 0x1C5D684
	166 Move X8, [X0+192]
	167 Move X0, [X8+32]
	168 Move W8, [X0+309]
	169 Move TEMP, X8
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfEqual {174}
	173 Call 0x1C5D684
	174 Move X8, [X0+184]
	175 Move [X8+16], X20
	176 Move X0, [X19+32]
	177 Move W8, [X0+309]
	178 Move TEMP, X8
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfEqual {183}
	182 Call 0x1C5D684
	183 Move X8, [X0+192]
	184 Move X0, [X8+32]
	185 Move W8, [X0+309]
	186 Move TEMP, X8
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfEqual {195}
	190 Move X20, [X31+16]
	191 Move X19, [X31+24]
	192 Move X30, [X31+32]
	193 Call 0x1C5D684
	194 Return 
	195 Move X20, [X31+16]
	196 Move X19, [X31+24]
	197 Move X30, [X31+32]
	198 Return 

