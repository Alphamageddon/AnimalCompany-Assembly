Type: UnityEngine.UIElements.TooltipEvent

Method: System.Void .cctor()

Disassembly:
	0x03DAECA8 LDR X30, [X31], #0x20
	0x03DAECAC RET
	0x03DAECB0 MOV X1, X31
	0x03DAECB4 B 0x33BDD8C
	0x03DAECB8 STR X30, [X31 - 0x20]!
	0x03DAECBC STP X20, X19, [X31 + 0x10]
	0x03DAECC0 ADRP X19, 0x639000
	0x03DAECC4 ADRP X20, 0x3BA000
	0x03DAECC8 LDRB W8, [X19 + 0xFFC]
	0x03DAECCC LDR X20, [X20 + 0x28]
	0x03DAECD0 TBNZ X8, 0x0, 0x3DAECE8
	0x03DAECD4 ADRP X0, 0x3BA000
	0x03DAECD8 LDR X0, [X0 + 0x28]
	0x03DAECDC BL 0x1C16CF4
	0x03DAECE0 MOVZ W8, 0x1
	0x03DAECE4 STRB W8, [X19 + 0xFFC]
	0x03DAECE8 LDR X0, [X20]
	0x03DAECEC BL 0x1C16F10
	0x03DAECF0 MOV X19, X0
	0x03DAECF4 BL 0x3DAEBDC
	0x03DAECF8 MOV X0, X19
	0x03DAECFC LDP X20, X19, [X31 + 0x10]
	0x03DAED00 LDR X30, [X31], #0x20
	0x03DAED04 RET
	0x03DAED08 LDR X8, [X0]
	0x03DAED0C FMOV S0, W31
	0x03DAED10 FMOV S1, W31
	0x03DAED14 FMOV S2, -1
	0x03DAED18 LDP X3, X2, [X8 + 0x178]
	0x03DAED1C FMOV S3, -1
	0x03DAED20 BR X3
	0x03DAED24 MOV X1, X31
	0x03DAED28 B 0x33BDD8C
	0x03DAED2C STP X30, X19, [X31 - 0x10]!
	0x03DAED30 MOV X1, X31
	0x03DAED34 MOV X19, X0
	0x03DAED38 STRB W31, [X0 + 0x10]
	0x03DAED3C BL 0x33BDD8C
	0x03DAED40 MOVZ W8, 0x1
	0x03DAED44 STRB W8, [X19 + 0x20]
	0x03DAED48 STR W31, [X19 + 0x24]
	0x03DAED4C LDP X30, X19, [X31], #0x10
	0x03DAED50 RET
	0x03DAED54 LDRB W0, [X0 + 0x20]
	0x03DAED58 RET
	0x03DAED5C AND W8, W1, 0x1
	0x03DAED60 STRB W8, [X0 + 0x20]
	0x03DAED64 RET
	0x03DAED68 LDR W0, [X0 + 0x24]
	0x03DAED6C RET
	0x03DAED70 STR W1, [X0 + 0x24]
	0x03DAED74 RET
	0x03DAED78 LDRB W0, [X0 + 0x28]
	0x03DAED7C RET
	0x03DAED80 AND W8, W1, 0x1
	0x03DAED84 STRB W8, [X0 + 0x28]
	0x03DAED88 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x63A000
	008 Move X19, 0x3BB000
	009 Move W8, [X20+4058]
	010 Move X19, [X19+2696]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x3BB000
	016 Move X0, [X0+2704]
	017 Call 0x1C17CF4
	018 Move X0, 0x3BB000
	019 Move X0, [X0+2712]
	020 Call 0x1C17CF4
	021 Move X0, 0x3BB000
	022 Move X0, [X0+2720]
	023 Call 0x1C17CF4
	024 Move X0, 0x3BB000
	025 Move X0, [X0+2728]
	026 Call 0x1C17CF4
	027 Move X0, 0x3BB000
	028 Move X0, [X0+2696]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+4058], W8
	032 Move X0, [X19]
	033 Move X22, 0x3BB000
	034 Move X23, 0x3BB000
	035 Move X21, 0x3BB000
	036 Move W8, [X0+224]
	037 Move X22, [X22+2720]
	038 Move X23, [X23+2728]
	039 Move X21, [X21+2712]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X19]
	044 Move X8, [X0+184]
	045 Move X0, [X22]
	046 Move X22, 0x3BB000
	047 Move X20, [X8]
	048 Move X22, [X22+2704]
	049 Call 0x1C17F10
	050 Move X2, [X23]
	051 Move X1, X20
	052 Move X3, X31
	053 Move X19, X0
	054 Call Func`1<Object>..ctor, X0, X1, X2
	055 Move X0, [X21]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X1, [X22]
	061 Move X0, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Call 0x2D0E4C0, X0
	069 Return 

Method: System.Void set_tooltip(System.String value)

Disassembly:
	0x03DAED8C LDRB W0, [X0 + 0x29]
	0x03DAED90 RET

ISIL:
	001 Move [X0+136], X1
	002 Return 

Method: System.Void set_rect(UnityEngine.Rect value)

Disassembly:
	0x03DAED94 STP X30, X21, [X31 - 0x20]!
	0x03DAED98 STP X20, X19, [X31 + 0x10]
	0x03DAED9C ADRP X21, 0x639000

ISIL:
	001 Move [X0+144], S0
	002 Move [X0+152], S1
	003 Move [X0+152], S2
	004 Move [X0+160], S3
	005 Return 

Method: System.Void Init()

Disassembly:
	0x03DAEDA0 LDRB W8, [X21 + 0xFFD]
	0x03DAEDA4 MOV W19, W1
	0x03DAEDA8 MOV X20, X0
	0x03DAEDAC TBNZ X8, 0x0, 0x3DAEDC4
	0x03DAEDB0 ADRP X0, 0x36D000
	0x03DAEDB4 LDR X0, [X0 + 0x898]
	0x03DAEDB8 BL 0x1C16CF4
	0x03DAEDBC MOVZ W8, 0x1
	0x03DAEDC0 STRB W8, [X21 + 0xFFD]
	0x03DAEDC4 CBZ X20, 0x3DAEE28
	0x03DAEDC8 ADRP X9, 0x36D000
	0x03DAEDCC LDR X9, [X9 + 0x898]
	0x03DAEDD0 LDR X8, [X20]
	0x03DAEDD4 LDR X1, [X9]
	0x03DAEDD8 LDRB W10, [X8 + 0x130]
	0x03DAEDDC LDRB W9, [X1 + 0x130]
	0x03DAEDE0 CMP W10, W9
	0x03DAEDE4 B.CC 0x3DAEE20
	0x03DAEDE8 LDR X8, [X8 + 0xC8]
	0x03DAEDEC ADD X8, X8, X9, 0x3, LSL
	0x03DAEDF0 LDUR X8, [X8 - 0x8]
	0x03DAEDF4 CMP X8, X1
	0x03DAEDF8 B.NE 0x3DAEE20
	0x03DAEDFC MOV X0, X20
	0x03DAEE00 MOV X1, X31
	0x03DAEE04 BL 0x3DEB850
	0x03DAEE08 TBZ X0, 0x0, 0x3DAEE2C
	0x03DAEE0C AND W8, W19, 0x1
	0x03DAEE10 STRB W8, [X20 + 0x29]
	0x03DAEE14 LDP X20, X19, [X31 + 0x10]
	0x03DAEE18 LDP X30, X21, [X31], #0x20
	0x03DAEE1C RET
	0x03DAEE20 MOV X0, X20
	0x03DAEE24 BL 0x1C171E0
	0x03DAEE28 BL 0x1C16F20
	0x03DAEE2C ADRP X0, 0x345000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x63A000
	006 Move X21, 0x3BB000
	007 Move W8, [X20+4059]
	008 Move X21, [X21+2736]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3BB000
	015 Move X0, [X0+2736]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+4059], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x2D0E634, X0
	022 Move X21, 0x63A000
	023 Move X20, 0x348000
	024 Move W8, [X21+4060]
	025 Move X20, [X20+632]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0x348000
	031 Move X0, [X0+632]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+4060], W8
	035 Move [X19+144], X31
	036 Move [X19+152], X31
	037 Move X8, [X20]
	038 Move W9, 19
	039 Move X8, [X8+184]
	040 Move X8, [X8]
	041 Move [X19+48], W9
	042 Move [X19+136], X8
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return 

Method: System.Void LocalInit()

Disassembly:
	0x03DAEE30 LDR X0, [X0 + 0x5B0]
	0x03DAEE34 BL 0x1C16D08
	0x03DAEE38 BL 0x1C16F10
	0x03DAEE3C MOV X19, X0
	0x03DAEE40 ADRP X0, 0x3BA000
	0x03DAEE44 LDR X0, [X0 + 0xC00]
	0x03DAEE48 BL 0x1C16D08
	0x03DAEE4C MOV X1, X0
	0x03DAEE50 MOV X0, X19
	0x03DAEE54 MOV X2, X31
	0x03DAEE58 BL 0x337DF1C
	0x03DAEE5C ADRP X0, 0x3BA000
	0x03DAEE60 LDR X0, [X0 + 0xC08]
	0x03DAEE64 BL 0x1C16D08
	0x03DAEE68 MOV X1, X0
	0x03DAEE6C MOV X0, X19
	0x03DAEE70 BL 0x1C16DEC
	0x03DAEE74 LDRB W0, [X0 + 0x20]
	0x03DAEE78 RET
	0x03DAEE7C STR X30, [X31 - 0x20]!
	0x03DAEE80 STP X20, X19, [X31 + 0x10]
	0x03DAEE84 LDR X8, [X0]
	0x03DAEE88 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x63A000
	006 Move X20, 0x348000
	007 Move W8, [X21+4060]
	008 Move X20, [X20+632]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x348000
	015 Move X0, [X0+632]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+4060], W8
	019 Move [X19+144], X31
	020 Move [X19+152], X31
	021 Move X8, [X20]
	022 Move W9, 19
	023 Move X8, [X8+184]
	024 Move X8, [X8]
	025 Move [X19+48], W9
	026 Move [X19+136], X8
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Void .ctor()

Disassembly:
	0x03DAEE8C LDR X9, [X8 + 0x228]
	0x03DAEE90 LDR X1, [X8 + 0x230]
	0x03DAEE94 BLR X9
	0x03DAEE98 CBZ X0, 0x3DAEEEC
	0x03DAEE9C LDR X8, [X19]
	0x03DAEEA0 MOV X0, X19
	0x03DAEEA4 LDR X9, [X8 + 0x238]
	0x03DAEEA8 LDR X1, [X8 + 0x240]
	0x03DAEEAC BLR X9
	0x03DAEEB0 TBZ X0, 0x0, 0x3DAEEF8
	0x03DAEEB4 MOV X0, X19
	0x03DAEEB8 BL 0x3DAEF2C
	0x03DAEEBC LDR X8, [X19]
	0x03DAEEC0 MOV X20, X0
	0x03DAEEC4 MOV X0, X19
	0x03DAEEC8 LDR X9, [X8 + 0x228]
	0x03DAEECC LDR X1, [X8 + 0x230]
	0x03DAEED0 BLR X9
	0x03DAEED4 CBZ X0, 0x3DAEF28
	0x03DAEED8 CMP X20, X19
	0x03DAEEDC CSET W2, NE
	0x03DAEEE0 MOVZ W3, 0x1
	0x03DAEEE4 MOV X1, X20
	0x03DAEEE8 B 0x3DAEF1C
	0x03DAEEEC LDP X20, X19, [X31 + 0x10]
	0x03DAEEF0 LDR X30, [X31], #0x20
	0x03DAEEF4 RET
	0x03DAEEF8 LDR X8, [X19]
	0x03DAEEFC MOV X0, X19
	0x03DAEF00 LDR X9, [X8 + 0x228]
	0x03DAEF04 LDR X1, [X8 + 0x230]
	0x03DAEF08 BLR X9
	0x03DAEF0C CBZ X0, 0x3DAEF28
	0x03DAEF10 MOVZ W3, 0x1
	0x03DAEF14 MOV X1, X31
	0x03DAEF18 MOV W2, W31
	0x03DAEF1C LDP X20, X19, [X31 + 0x10]
	0x03DAEF20 LDR X30, [X31], #0x20
	0x03DAEF24 B 0x3DAEFBC
	0x03DAEF28 BL 0x1C16F20
	0x03DAEF2C STR X30, [X31 - 0x20]!
	0x03DAEF30 STP X20, X19, [X31 + 0x10]
	0x03DAEF34 ADRP X20, 0x639000
	0x03DAEF38 LDRB W8, [X20 + 0xFFE]
	0x03DAEF3C MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x63A000
	006 Move X20, 0x3BB000
	007 Move W8, [X21+4061]
	008 Move X20, [X20+2712]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x3BB000
	015 Move X0, [X0+2744]
	016 Call 0x1C17CF4
	017 Move X0, 0x3BB000
	018 Move X0, [X0+2712]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+4061], W8
	022 Move X0, [X20]
	023 Move X20, 0x3BB000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2744]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X1, [X20]
	030 Move X0, X19
	031 Call 0x2D0E54C, X0
	032 Move X21, 0x63A000
	033 Move X20, 0x348000
	034 Move W8, [X21+4060]
	035 Move X20, [X20+632]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {45}
	040 Move X0, 0x348000
	041 Move X0, [X0+632]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+4060], W8
	045 Move [X19+144], X31
	046 Move [X19+152], X31
	047 Move X8, [X20]
	048 Move W9, 19
	049 Move X8, [X8+184]
	050 Move X8, [X8]
	051 Move [X19+48], W9
	052 Move [X19+136], X8
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return 

