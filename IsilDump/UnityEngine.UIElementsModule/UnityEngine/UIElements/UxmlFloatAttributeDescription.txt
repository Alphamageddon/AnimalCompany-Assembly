Type: UnityEngine.UIElements.UxmlFloatAttributeDescription

Method: System.Void .ctor()

Disassembly:
	0x03E1C6CC BL 0x1C16CF4
	0x03E1C6D0 ADRP X0, 0x34B000
	0x03E1C6D4 LDR X0, [X0 + 0x490]
	0x03E1C6D8 BL 0x1C16CF4
	0x03E1C6DC ADRP X0, 0x32A000
	0x03E1C6E0 LDR X0, [X0 + 0x628]
	0x03E1C6E4 BL 0x1C16CF4
	0x03E1C6E8 ADRP X0, 0x301000
	0x03E1C6EC LDR X0, [X0 + 0xAC0]
	0x03E1C6F0 BL 0x1C16CF4
	0x03E1C6F4 MOVZ W8, 0x1
	0x03E1C6F8 STRB W8, [X22 + 0x419]
	0x03E1C6FC LDR X1, [X23]
	0x03E1C700 MOV X0, X19
	0x03E1C704 BL 0x2723E88
	0x03E1C708 LDR X9, [X21]
	0x03E1C70C LDR X8, [X20]
	0x03E1C710 STR X31, [X19 + 0x40]
	0x03E1C714 LDP X22, X21, [X31 + 0x10]
	0x03E1C718 STP X9, X8, [X19 + 0x20]
	0x03E1C71C LDP X20, X19, [X31 + 0x20]
	0x03E1C720 LDP X30, X23, [X31], #0x30
	0x03E1C724 RET
	0x03E1C728 SUB X31, X31, 0x90
	0x03E1C72C STP X30, X23, [X31 + 0x60]
	0x03E1C730 STP X22, X21, [X31 + 0x70]
	0x03E1C734 STP X20, X19, [X31 + 0x80]
	0x03E1C738 ADRP X22, 0x5CC000
	0x03E1C73C ADRP X23, 0x34E000
	0x03E1C740 LDRB W8, [X22 + 0x41A]
	0x03E1C744 LDR X23, [X23 + 0xA00]
	0x03E1C748 MOV X21, X2
	0x03E1C74C MOV X19, X1
	0x03E1C750 MOV X20, X0
	0x03E1C754 TBNZ X8, 0x0, 0x3E1C79C
	0x03E1C758 ADRP X0, 0x34E000
	0x03E1C75C LDR X0, [X0 + 0xA08]
	0x03E1C760 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x5CD000
	008 Move X23, 0x34F000
	009 Move X21, 0x302000
	010 Move X20, 0x302000
	011 Move W8, [X22+1031]
	012 Move X23, [X23+2256]
	013 Move X21, [X21+1168]
	014 Move X20, [X20+2752]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x34F000
	021 Move X0, [X0+2256]
	022 Call 0x1C17CF4
	023 Move X0, 0x34B000
	024 Move X0, [X0+3376]
	025 Call 0x1C17CF4
	026 Move X0, 0x302000
	027 Move X0, [X0+2752]
	028 Call 0x1C17CF4
	029 Move X0, 0x302000
	030 Move X0, [X0+1168]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+1031], W8
	034 Move X1, [X23]
	035 Move X0, X19
	036 Call TypedUxmlAttributeDescription`1<Single>..ctor, X0
	037 Move X9, [X21]
	038 Move X8, [X20]
	039 Move [X19+64], W31
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move [X19+32], X9
	043 Move [X19+40], X8
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return 

Method: System.Single GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc)

Disassembly:
	0x03E1C764 ADRP X0, 0x34E000
	0x03E1C768 LDR X0, [X0 + 0xA10]
	0x03E1C76C BL 0x1C16CF4
	0x03E1C770 ADRP X0, 0x34E000
	0x03E1C774 LDR X0, [X0 + 0xA18]
	0x03E1C778 BL 0x1C16CF4
	0x03E1C77C ADRP X0, 0x34E000
	0x03E1C780 LDR X0, [X0 + 0xA00]
	0x03E1C784 BL 0x1C16CF4
	0x03E1C788 ADRP X0, 0x34E000
	0x03E1C78C LDR X0, [X0 + 0xA20]
	0x03E1C790 BL 0x1C16CF4
	0x03E1C794 MOVZ W8, 0x1
	0x03E1C798 STRB W8, [X22 + 0x41A]
	0x03E1C79C LDP V1, V0, [X21]
	0x03E1C7A0 LDR X0, [X23]
	0x03E1C7A4 STP V1, V0, [X31 + 0x40]
	0x03E1C7A8 LDR W8, [X0 + 0xE0]
	0x03E1C7AC CBNZ W8, 0x3E1C7B8
	0x03E1C7B0 BL 0x1C16DFC
	0x03E1C7B4 LDR X0, [X23]
	0x03E1C7B8 LDR X8, [X0 + 0xB8]
	0x03E1C7BC LDR X21, [X8 + 0x8]
	0x03E1C7C0 CBZ X21, 0x3E1C7CC
	0x03E1C7C4 LDP V0, V1, [X31 + 0x40]
	0x03E1C7C8 B 0x3E1C828
	0x03E1C7CC LDP V0, V1, [X31 + 0x40]
	0x03E1C7D0 STP V0, V1, [X31]
	0x03E1C7D4 LDR W8, [X0 + 0xE0]
	0x03E1C7D8 CBNZ W8, 0x3E1C7E4
	0x03E1C7DC BL 0x1C16DFC
	0x03E1C7E0 LDR X0, [X23]
	0x03E1C7E4 ADRP X9, 0x34E000
	0x03E1C7E8 LDR X8, [X0 + 0xB8]
	0x03E1C7EC LDR X9, [X9 + 0xA08]
	0x03E1C7F0 LDR X22, [X8]
	0x03E1C7F4 LDR X0, [X9]
	0x03E1C7F8 BL 0x1C16F10
	0x03E1C7FC ADRP X8, 0x34E000
	0x03E1C800 LDR X8, [X8 + 0xA18]
	0x03E1C804 MOV X1, X22
	0x03E1C808 MOV X3, X31
	0x03E1C80C MOV X21, X0
	0x03E1C810 LDR X2, [X8]
	0x03E1C814 BL 0x2D39D98
	0x03E1C818 LDR X8, [X23]
	0x03E1C81C LDR X8, [X8 + 0xB8]
	0x03E1C820 STR X21, [X8 + 0x8]
	0x03E1C824 LDP V0, V1, [X31]
	0x03E1C828 STP V0, V1, [X31 + 0x20]
	0x03E1C82C CBZ X20, 0x3E1C870
	0x03E1C830 ADRP X8, 0x34E000
	0x03E1C834 LDR X8, [X8 + 0xA20]
	0x03E1C838 LDR X4, [X20 + 0x40]
	0x03E1C83C LDP V0, V1, [X31 + 0x20]
	0x03E1C840 ADD X2, X31, 0x40
	0x03E1C844 LDR X5, [X8]
	0x03E1C848 MOV X0, X20
	0x03E1C84C MOV X1, X19
	0x03E1C850 MOV X3, X21
	0x03E1C854 STP V0, V1, [X31 + 0x40]
	0x03E1C858 BL 0x22A915C
	0x03E1C85C LDP X20, X19, [X31 + 0x80]
	0x03E1C860 LDP X22, X21, [X31 + 0x70]
	0x03E1C864 LDP X30, X23, [X31 + 0x60]
	0x03E1C868 ADD X31, X31, 0x90
	0x03E1C86C RET
	0x03E1C870 BL 0x1C16F20
	0x03E1C874 SUB X31, X31, 0x20
	0x03E1C878 STP X30, X19, [X31 + 0x10]
	0x03E1C87C MOV X19, X1
	0x03E1C880 STR X31, [X31 + 0x8]
	0x03E1C884 CBZ X0, 0x3E1C8A0
	0x03E1C888 ADD X1, X31, 0x8
	0x03E1C88C MOV X2, X31
	0x03E1C890 BL 0x337D588
	0x03E1C894 LDR X8, [X31 + 0x8]
	0x03E1C898 ANDS W31, W0, 0x1
	0x03E1C89C CSEL X19, X8, X19, NE
	0x03E1C8A0 MOV X0, X19
	0x03E1C8A4 LDP X30, X19, [X31 + 0x10]
	0x03E1C8A8 ADD X31, X31, 0x20
	0x03E1C8AC RET

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X22, 0x5CD000
	009 Move X23, 0x34F000
	010 Move W8, [X22+1032]
	011 Move X23, [X23+2264]
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x34F000
	020 Move X0, [X0+2272]
	021 Call 0x1C17CF4
	022 Move X0, 0x34F000
	023 Move X0, [X0+2280]
	024 Call 0x1C17CF4
	025 Move X0, 0x34F000
	026 Move X0, [X0+2288]
	027 Call 0x1C17CF4
	028 Move X0, 0x34F000
	029 Move X0, [X0+2264]
	030 Call 0x1C17CF4
	031 Move X0, 0x34F000
	032 Move X0, [X0+2296]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+1032], W8
	036 Move V1, [X21]
	037 Move V0, [X21+16]
	038 Move X0, [X23]
	039 Move [X31+64], V1
	040 Move [X31+72], V0
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X23]
	046 Move X8, [X0+184]
	047 Move X21, [X8+8]
	048 Compare X21, 0
	049 JumpIfEqual {52}
	050 Move V0, [X31+64]
	051 Move V1, [X31+80]
	052 Move V0, [X31+64]
	053 Move V1, [X31+80]
	054 Move [X31], V0
	055 Move [X31+8], V1
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X23]
	061 Move X9, 0x34F000
	062 Move X8, [X0+184]
	063 Move X9, [X9+2272]
	064 Move X22, [X8]
	065 Move X0, [X9]
	066 Call 0x1C17F10
	067 Move X8, 0x34F000
	068 Move X8, [X8+2288]
	069 Move X1, X22
	070 Move X3, X31
	071 Move X21, X0
	072 Move X2, [X8]
	073 Call Func`3<Object, Single, Single>..ctor, X0, X1, X2
	074 Move X8, [X23]
	075 Move X8, [X8+184]
	076 Move [X8+8], X21
	077 Move V0, [X31]
	078 Move V1, [X31+16]
	079 Move [X31+32], V0
	080 Move [X31+40], V1
	081 Compare X20, 0
	082 JumpIfEqual {104}
	083 Move X8, 0x34F000
	084 Move X8, [X8+2296]
	085 Move V0, [X20+64]
	086 Move V1, [X31+32]
	087 Move V2, [X31+48]
	088 Add X2, X31, 64
	089 Move X4, [X8]
	090 Move X0, X20
	091 Move X1, X19
	092 Move X3, X21
	093 Move [X31+64], V1
	094 Move [X31+72], V2
	095 Call UxmlAttributeDescription.GetValueFromBag, X0, X1, X2, X3, V0
	096 Move X20, [X31+128]
	097 Move X19, [X31+136]
	098 Move X22, [X31+112]
	099 Move X21, [X31+120]
	100 Move X30, [X31+96]
	101 Move X23, [X31+104]
	102 Add X31, X31, 144
	103 Return V0
	104 Call 0x1C17F20

Method: System.Single ConvertValueToFloat(System.String v, System.Single defaultValue)

Disassembly:
	0x03E1C8B0 STR X30, [X31 - 0x20]!
	0x03E1C8B4 STP X20, X19, [X31 + 0x10]
	0x03E1C8B8 ADRP X19, 0x5CC000
	0x03E1C8BC ADRP X20, 0x34E000
	0x03E1C8C0 LDRB W8, [X19 + 0x41B]
	0x03E1C8C4 LDR X20, [X20 + 0xA00]
	0x03E1C8C8 TBNZ X8, 0x0, 0x3E1C8E0
	0x03E1C8CC ADRP X0, 0x34E000
	0x03E1C8D0 LDR X0, [X0 + 0xA00]
	0x03E1C8D4 BL 0x1C16CF4
	0x03E1C8D8 MOVZ W8, 0x1
	0x03E1C8DC STRB W8, [X19 + 0x41B]
	0x03E1C8E0 LDR X0, [X20]
	0x03E1C8E4 BL 0x1C16F10
	0x03E1C8E8 MOV X1, X31
	0x03E1C8EC MOV X19, X0
	0x03E1C8F0 BL 0x33BDD8C
	0x03E1C8F4 LDR X8, [X20]
	0x03E1C8F8 LDR X8, [X8 + 0xB8]
	0x03E1C8FC STR X19, [X8]
	0x03E1C900 LDP X20, X19, [X31 + 0x10]
	0x03E1C904 LDR X30, [X31], #0x20
	0x03E1C908 RET
	0x03E1C90C MOV X1, X31
	0x03E1C910 B 0x33BDD8C
	0x03E1C914 SUB X31, X31, 0x20
	0x03E1C918 STP X30, X19, [X31 + 0x10]
	0x03E1C91C MOV X19, X2
	0x03E1C920 STR X31, [X31 + 0x8]
	0x03E1C924 CBZ X1, 0x3E1C944
	0x03E1C928 MOV X0, X1
	0x03E1C92C ADD X1, X31, 0x8
	0x03E1C930 MOV X2, X31
	0x03E1C934 BL 0x337D588
	0x03E1C938 LDR X8, [X31 + 0x8]
	0x03E1C93C ANDS W31, W0, 0x1
	0x03E1C940 CSEL X19, X8, X19, NE
	0x03E1C944 MOV X0, X19
	0x03E1C948 LDP X30, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5CD000
	007 Move W8, [X20+1033]
	008 Move V8, V0
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2DA000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1033], W8
	019 Move [X31+12], W31
	020 Compare X19, 0
	021 JumpIfEqual {40}
	022 Move X8, 0x2DA000
	023 Move X8, [X8+3144]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call CultureInfo.get_InvariantCulture
	031 Move X2, X0
	032 Add X3, X31, 12
	033 Move W1, 167
	034 Move X0, X19
	035 Move X4, X31
	036 Call Single.TryParse, X0, X1, X2, X3
	037 Move V0, [X31+12]
	038 And W31, W0, 1
	039 NotImplemented "Instruction FCSEL not yet implemented."
	040 Move V0, V8
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+24]
	044 Move V8, [X31+16]
	045 Add X31, X31, 48
	046 Return V0

