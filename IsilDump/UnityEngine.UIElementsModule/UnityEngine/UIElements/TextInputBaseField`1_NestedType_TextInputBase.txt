Type: UnityEngine.UIElements.TextInputBaseField`1/TextInputBase

Method: UnityEngine.UIElements.TextElement get_textElement()

Disassembly:
	0x026B265C LDUR X11, [X10 - 0x8]
	0x026B2660 CMP X11, X1

ISIL:
	001 Move X0, [X0+968]
	002 Return X0

Method: System.Void set_textElement(UnityEngine.UIElements.TextElement value)

Disassembly:
	0x026B2664 B.EQ 0x26B2684
	0x026B2668 SUBS X9, X9, 0x1

ISIL:
	001 Move [X0+968], X1
	002 Return 

Method: UnityEngine.UIElements.ITextSelection get_textSelection()

Disassembly:
	0x026B266C ADD X10, X10, 0x10
	0x026B2670 B.NE 0x26B265C
	0x026B2674 MOVZ W2, 0xF
	0x026B2678 MOV X0, X21
	0x026B267C BL 0x1C5C788
	0x026B2680 B 0x26B2694
	0x026B2684 LDR W9, [X10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+968]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call TextElement.get_selection, X0
	008 Return X0
	009 Call 0x1C17F20

Method: UnityEngine.UIElements.ITextEdition get_textEdition()

Disassembly:
	0x026B2688 ADD W9, W9, 0xF
	0x026B268C ADD X8, X8, W9, 0x4, SXTW
	0x026B2690 ADD X0, X8, 0x138
	0x026B2694 LDP X8, X2, [X0]
	0x026B2698 MOV X0, X21
	0x026B269C MOV X1, X22
	0x026B26A0 BLR X8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+968]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call TextElement.get_edition, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Void SelectAll()

Disassembly:
	0x026B26A4 LDR X0, [X19 + 0x3C8]
	0x026B26A8 CBZ X0, 0x26B29F0
	0x026B26AC MOV X1, X31
	0x026B26B0 BL 0x3E0AF0C
	0x026B26B4 CBZ X0, 0x26B29F0
	0x026B26B8 LDR X8, [X0]
	0x026B26BC LDR X1, [X26]
	0x026B26C0 MOV X21, X0
	0x026B26C4 LDRH W9, [X8 + 0x12E]
	0x026B26C8 CBZ X9, 0x26B26EC
	0x026B26CC LDR X10, [X8 + 0xB0]
	0x026B26D0 ADD X10, X10, 0x8
	0x026B26D4 LDUR X11, [X10 - 0x8]
	0x026B26D8 CMP X11, X1
	0x026B26DC B.EQ 0x26B26FC
	0x026B26E0 SUBS X9, X9, 0x1
	0x026B26E4 ADD X10, X10, 0x10
	0x026B26E8 B.NE 0x26B26D4
	0x026B26EC MOVZ W2, 0x10
	0x026B26F0 MOV X0, X21
	0x026B26F4 BL 0x1C5C788
	0x026B26F8 B 0x26B270C
	0x026B26FC LDR W9, [X10]
	0x026B2700 ADD W9, W9, 0x10
	0x026B2704 ADD X8, X8, W9, 0x4, SXTW
	0x026B2708 ADD X0, X8, 0x138
	0x026B270C LDP X8, X1, [X0]
	0x026B2710 MOV X0, X21
	0x026B2714 BLR X8
	0x026B2718 LDR X8, [X24]
	0x026B271C MOV X22, X0
	0x026B2720 MOV X0, X8
	0x026B2724 BL 0x1C16F10
	0x026B2728 LDR X8, [X20 + 0x20]
	0x026B272C MOV X1, X19
	0x026B2730 MOV X3, X31
	0x026B2734 MOV X23, X0
	0x026B2738 LDR X8, [X8 + 0xC0]
	0x026B273C LDR X2, [X8 + 0x60]
	0x026B2740 BL 0x3314368
	0x026B2744 MOV X0, X22
	0x026B2748 MOV X1, X23
	0x026B274C MOV X2, X31
	0x026B2750 BL 0x33C0DE4
	0x026B2754 LDR X1, [X26]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1D29000
	005 Move W8, [X20+977]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1A6C000
	012 Move X0, [X0+1576]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+977], W8
	016 Move X0, [X19+968]
	017 Compare X0, 0
	018 JumpIfEqual {51}
	019 Move X1, X31
	020 Call TextElement.get_selection, X0
	021 Compare X0, 0
	022 JumpIfEqual {51}
	023 Move X10, 0x1A6C000
	024 Move X8, [X0]
	025 Move X10, [X10+1576]
	026 Move X19, X0
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X1, [X10]
	029 Compare X9, 0
	030 JumpIfEqual {37}
	031 Move X10, [X8+176]
	032 Add X10, X10, 8
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X9, X9, 1
	036 Add X10, X10, 16
	037 Move W2, 13
	038 Move X0, X19
	039 Call 0x1C5D788
	040 Move W9, [X10]
	041 Add W9, W9, 13
	042 Add X8, X8, W9
	043 Add X0, X8, 312
	044 Move X2, [X0]
	045 Move X1, [X0+8]
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 CallNoReturn X2
	051 Call 0x1C17F20

Method: System.Void SelectNone()

Disassembly:
	0x026B2758 MOV X22, X0
	0x026B275C CBZ X0, 0x26B2770
	0x026B2760 LDR X8, [X24]
	0x026B2764 LDR X9, [X22]
	0x026B2768 CMP X9, X8
	0x026B276C B.NE 0x26B29F4
	0x026B2770 LDR X8, [X21]
	0x026B2774 LDRH W9, [X8 + 0x12E]
	0x026B2778 CBZ X9, 0x26B279C
	0x026B277C LDR X10, [X8 + 0xB0]
	0x026B2780 ADD X10, X10, 0x8
	0x026B2784 LDUR X11, [X10 - 0x8]
	0x026B2788 CMP X11, X1
	0x026B278C B.EQ 0x26B27AC
	0x026B2790 SUBS X9, X9, 0x1
	0x026B2794 ADD X10, X10, 0x10
	0x026B2798 B.NE 0x26B2784
	0x026B279C MOVZ W2, 0x11
	0x026B27A0 MOV X0, X21
	0x026B27A4 BL 0x1C5C788
	0x026B27A8 B 0x26B27BC
	0x026B27AC LDR W9, [X10]
	0x026B27B0 ADD W9, W9, 0x11
	0x026B27B4 ADD X8, X8, W9, 0x4, SXTW
	0x026B27B8 ADD X0, X8, 0x138
	0x026B27BC LDP X8, X2, [X0]
	0x026B27C0 MOV X0, X21
	0x026B27C4 MOV X1, X22
	0x026B27C8 BLR X8
	0x026B27CC LDR X0, [X19 + 0x3C8]
	0x026B27D0 CBZ X0, 0x26B29F0
	0x026B27D4 MOV X1, X31
	0x026B27D8 BL 0x3E0AF0C
	0x026B27DC CBZ X0, 0x26B29F0
	0x026B27E0 LDR X8, [X0]
	0x026B27E4 LDR X1, [X26]
	0x026B27E8 MOV X21, X0
	0x026B27EC LDRH W9, [X8 + 0x12E]
	0x026B27F0 CBZ X9, 0x26B2814
	0x026B27F4 LDR X10, [X8 + 0xB0]
	0x026B27F8 ADD X10, X10, 0x8
	0x026B27FC LDUR X11, [X10 - 0x8]
	0x026B2800 CMP X11, X1
	0x026B2804 B.EQ 0x26B2824
	0x026B2808 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1D29000
	005 Move W8, [X20+978]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1A6C000
	012 Move X0, [X0+1576]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+978], W8
	016 Move X0, [X19+968]
	017 Compare X0, 0
	018 JumpIfEqual {51}
	019 Move X1, X31
	020 Call TextElement.get_selection, X0
	021 Compare X0, 0
	022 JumpIfEqual {51}
	023 Move X10, 0x1A6C000
	024 Move X8, [X0]
	025 Move X10, [X10+1576]
	026 Move X19, X0
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X1, [X10]
	029 Compare X9, 0
	030 JumpIfEqual {37}
	031 Move X10, [X8+176]
	032 Add X10, X10, 8
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X9, X9, 1
	036 Add X10, X10, 16
	037 Move W2, 14
	038 Move X0, X19
	039 Call 0x1C5D788
	040 Move W9, [X10]
	041 Add W9, W9, 14
	042 Add X8, X8, W9
	043 Add X0, X8, 312
	044 Move X2, [X0]
	045 Move X1, [X0+8]
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 CallNoReturn X2
	051 Call 0x1C17F20

Method: System.String get_originalText()

Disassembly:
	0x026B280C ADD X10, X10, 0x10
	0x026B2810 B.NE 0x26B27FC
	0x026B2814 MOVZ W2, 0x12
	0x026B2818 MOV X0, X21
	0x026B281C BL 0x1C5C788
	0x026B2820 B 0x26B2834
	0x026B2824 LDR W9, [X10]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+968]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+1112]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: TValueType StringToValue(System.String str)

Disassembly:
	0x026B2828 ADD W9, W9, 0x12
	0x026B282C ADD X8, X8, W9, 0x4, SXTW
	0x026B2830 ADD X0, X8, 0x138
	0x026B2834 LDP X8, X1, [X0]
	0x026B2838 MOV X0, X21
	0x026B283C BLR X8
	0x026B2840 LDR X8, [X24]
	0x026B2844 MOV X22, X0
	0x026B2848 MOV X0, X8
	0x026B284C BL 0x1C16F10
	0x026B2850 LDR X8, [X20 + 0x20]
	0x026B2854 MOV X1, X19
	0x026B2858 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1A42000
	005 Move X0, [X0+2880]
	006 Move X19, X2
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Void UpdateValueFromText()

Disassembly:
	0x026B285C MOV X23, X0
	0x026B2860 LDR X8, [X8 + 0xC0]
	0x026B2864 LDR X2, [X8 + 0x68]
	0x026B2868 BL 0x3314368
	0x026B286C MOV X0, X22
	0x026B2870 MOV X1, X23
	0x026B2874 MOV X2, X31
	0x026B2878 BL 0x33C0DE4
	0x026B287C LDR X1, [X26]
	0x026B2880 MOV X22, X0
	0x026B2884 CBZ X0, 0x26B2898
	0x026B2888 LDR X8, [X24]
	0x026B288C LDR X9, [X22]
	0x026B2890 CMP X9, X8
	0x026B2894 B.NE 0x26B29F4
	0x026B2898 LDR X8, [X21]
	0x026B289C LDRH W9, [X8 + 0x12E]
	0x026B28A0 CBZ X9, 0x26B28C4
	0x026B28A4 LDR X10, [X8 + 0xB0]
	0x026B28A8 ADD X10, X10, 0x8
	0x026B28AC LDUR X11, [X10 - 0x8]
	0x026B28B0 CMP X11, X1
	0x026B28B4 B.EQ 0x26B28D4
	0x026B28B8 SUBS X9, X9, 0x1
	0x026B28BC ADD X10, X10, 0x10
	0x026B28C0 B.NE 0x26B28AC
	0x026B28C4 MOVZ W2, 0x13
	0x026B28C8 MOV X0, X21
	0x026B28CC BL 0x1C5C788
	0x026B28D0 B 0x26B28E4
	0x026B28D4 LDR W9, [X10]
	0x026B28D8 ADD W9, W9, 0x13
	0x026B28DC ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {36}
	005 Move X19, X1
	006 Move X1, X31
	007 Call VisualElement.get_parent, X0
	008 Move X8, [X19+32]
	009 Move X19, X0
	010 Move X8, [X8+192]
	011 Move X1, [X8+32]
	012 Move W8, [X1+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X0, X1
	018 Call 0x1C5D684
	019 Move X1, X0
	020 Compare X19, 0
	021 JumpIfEqual {36}
	022 Move X8, [X19]
	023 Move W9, [X1+304]
	024 Move W10, [X8+304]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X10, [X8+200]
	027 Add X9, X10, X9
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X2, [X8+2232]
	031 Move X1, [X8+2240]
	032 Move X0, X19
	033 Move X30, [X31+16]
	034 Move X19, [X31+24]
	035 CallNoReturn X2
	036 Call 0x1C17F20
	037 Move X0, X19
	038 Call 0x1C181E0

Method: System.Void UpdateTextFromValue()

Disassembly:
	0x026B28E0 ADD X0, X8, 0x138
	0x026B28E4 LDP X8, X2, [X0]
	0x026B28E8 MOV X0, X21
	0x026B28EC MOV X1, X22
	0x026B28F0 BLR X8
	0x026B28F4 LDR X8, [X20 + 0x20]
	0x026B28F8 LDR X8, [X8 + 0xC0]
	0x026B28FC LDR X0, [X8 + 0x70]
	0x026B2900 LDRB W8, [X0 + 0x135]
	0x026B2904 TBNZ X8, 0x0, 0x26B290C
	0x026B2908 BL 0x1C5C684
	0x026B290C LDR W8, [X0 + 0xE0]
	0x026B2910 CBNZ W8, 0x26B2918
	0x026B2914 BL 0x1C16DFC
	0x026B2918 LDR X8, [X20 + 0x20]
	0x026B291C ADRP X23, 0x1A6B000
	0x026B2920 LDR X8, [X8 + 0xC0]
	0x026B2924 LDR X0, [X8 + 0x70]
	0x026B2928 LDRB W8, [X0 + 0x135]
	0x026B292C LDR X23, [X23 + 0x650]
	0x026B2930 TBNZ X8, 0x0, 0x26B2938
	0x026B2934 BL 0x1C5C684
	0x026B2938 LDR X8, [X0 + 0xB8]
	0x026B293C ADRP X22, 0x1A6B000
	0x026B2940 ADRP X21, 0x1A6B000
	0x026B2944 MOV X0, X19
	0x026B2948 LDR X1, [X8 + 0x20]
	0x026B294C LDR X22, [X22 + 0x640]
	0x026B2950 LDR X21, [X21 + 0x638]
	0x026B2954 MOV X2, X31
	0x026B2958 BL 0x3DF1C70
	0x026B295C LDR X0, [X23]
	0x026B2960 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {36}
	005 Move X19, X1
	006 Move X1, X31
	007 Call VisualElement.get_parent, X0
	008 Move X8, [X19+32]
	009 Move X19, X0
	010 Move X8, [X8+192]
	011 Move X1, [X8+32]
	012 Move W8, [X1+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X0, X1
	018 Call 0x1C5D684
	019 Move X1, X0
	020 Compare X19, 0
	021 JumpIfEqual {36}
	022 Move X8, [X19]
	023 Move W9, [X1+304]
	024 Move W10, [X8+304]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X10, [X8+200]
	027 Add X9, X10, X9
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X2, [X8+2248]
	031 Move X1, [X8+2256]
	032 Move X0, X19
	033 Move X30, [X31+16]
	034 Move X19, [X31+24]
	035 CallNoReturn X2
	036 Call 0x1C17F20
	037 Move X0, X19
	038 Call 0x1C181E0

Method: System.Void MoveFocusToCompositeRoot()

Disassembly:
	0x026B2964 CBNZ W8, 0x26B2970
	0x026B2968 BL 0x1C16DFC
	0x026B296C LDR X0, [X23]
	0x026B2970 LDR X8, [X0 + 0xB8]
	0x026B2974 MOV X0, X19
	0x026B2978 MOV X2, X31
	0x026B297C LDR X1, [X8 + 0x48]
	0x026B2980 BL 0x3DEF278
	0x026B2984 LDR X8, [X20 + 0x20]
	0x026B2988 MOV X0, X19
	0x026B298C LDR X8, [X8 + 0xC0]
	0x026B2990 LDR X1, [X8 + 0x80]
	0x026B2994 BL 0x26B2A18
	0x026B2998 LDR X0, [X22]
	0x026B299C BL 0x1C16F10
	0x026B29A0 LDR X8, [X20 + 0x20]
	0x026B29A4 MOV X1, X19
	0x026B29A8 MOV X3, X31
	0x026B29AC MOV X20, X0
	0x026B29B0 LDR X8, [X8 + 0xC0]
	0x026B29B4 LDR X2, [X8 + 0x88]
	0x026B29B8 BL 0x2D0E824
	0x026B29BC LDR X3, [X21]
	0x026B29C0 MOV X0, X19
	0x026B29C4 MOV X1, X20
	0x026B29C8 MOV W2, W31
	0x026B29CC BL 0x21A1534
	0x026B29D0 MOVN W8, 0x0
	0x026B29D4 STR W8, [X19 + 0x24]
	0x026B29D8 LDP X20, X19, [X31 + 0x40]
	0x026B29DC LDP X22, X21, [X31 + 0x30]
	0x026B29E0 LDP X24, X23, [X31 + 0x20]
	0x026B29E4 LDP X26, X25, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {36}
	005 Move X19, X1
	006 Move X1, X31
	007 Call VisualElement.get_parent, X0
	008 Move X8, [X19+32]
	009 Move X19, X0
	010 Move X8, [X8+192]
	011 Move X1, [X8+32]
	012 Move W8, [X1+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X0, X1
	018 Call 0x1C5D684
	019 Move X1, X0
	020 Compare X19, 0
	021 JumpIfEqual {36}
	022 Move X8, [X19]
	023 Move W9, [X1+304]
	024 Move W10, [X8+304]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X10, [X8+200]
	027 Add X9, X10, X9
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X2, [X8+584]
	031 Move X1, [X8+592]
	032 Move X0, X19
	033 Move X30, [X31+16]
	034 Move X19, [X31+24]
	035 CallNoReturn X2
	036 Call 0x1C17F20
	037 Move X0, X19
	038 Call 0x1C181E0

Method: System.Boolean get_isReadOnly()

Disassembly:
	0x026B29E8 LDR X30, [X31], #0x50
	0x026B29EC RET
	0x026B29F0 BL 0x1C16F20
	0x026B29F4 MOV X0, X22
	0x026B29F8 MOV X1, X8
	0x026B29FC BL 0x1C171E0
	0x026B2A00 CBZ X1, 0x26B2A10
	0x026B2A04 MOV X0, X1
	0x026B2A08 MOV X1, X31
	0x026B2A0C B 0x3D9D950
	0x026B2A10 STR X30, [X31 - 0x10]!
	0x026B2A14 BL 0x1C16F20
	0x026B2A18 SUB X31, X31, 0x40
	0x026B2A1C STR D8, [X31 + 0x10]
	0x026B2A20 STR X30, [X31 + 0x18]
	0x026B2A24 STP X22, X21, [X31 + 0x20]
	0x026B2A28 STP X20, X19, [X31 + 0x30]
	0x026B2A2C ADRP X21, 0x1D28000
	0x026B2A30 LDRB W8, [X21 + 0x3D9]
	0x026B2A34 MOV X20, X1
	0x026B2A38 MOV X19, X0
	0x026B2A3C TBNZ X8, 0x0, 0x26B2A60
	0x026B2A40 ADRP X0, 0x1A6B000
	0x026B2A44 LDR X0, [X0 + 0x658]
	0x026B2A48 BL 0x1C16CF4
	0x026B2A4C ADRP X0, 0x1A6B000
	0x026B2A50 LDR X0, [X0 + 0x660]
	0x026B2A54 BL 0x1C16CF4
	0x026B2A58 MOVZ W8, 0x1
	0x026B2A5C STRB W8, [X21 + 0x3D9]
	0x026B2A60 CBZ X19, 0x26B2C30
	0x026B2A64 LDR X8, [X19 + 0x378]
	0x026B2A68 ADD X0, X31, 0x8
	0x026B2A6C MOV X1, X31
	0x026B2A70 STR X8, [X31 + 0x8]
	0x026B2A74 BL 0x3DF92C4
	0x026B2A78 LDR X8, [X20 + 0x20]
	0x026B2A7C MOV X0, X19
	0x026B2A80 LDR X8, [X8 + 0xC0]
	0x026B2A84 LDR X1, [X8 + 0x90]
	0x026B2A88 BL 0x26B45AC
	0x026B2A8C LDR X1, [X19 + 0x3C8]
	0x026B2A90 MOV X0, X19
	0x026B2A94 MOV X2, X31
	0x026B2A98 BL 0x3DF60E8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1D29000
	005 Move W8, [X20+979]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1A6C000
	012 Move X0, [X0+1584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+979], W8
	016 Move X0, [X19+968]
	017 Compare X0, 0
	018 JumpIfEqual {51}
	019 Move X1, X31
	020 Call TextElement.get_edition, X0
	021 Compare X0, 0
	022 JumpIfEqual {51}
	023 Move X10, 0x1A6C000
	024 Move X8, [X0]
	025 Move X10, [X10+1584]
	026 Move X19, X0
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X1, [X10]
	029 Compare X9, 0
	030 JumpIfEqual {37}
	031 Move X10, [X8+176]
	032 Add X10, X10, 8
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X9, X9, 1
	036 Add X10, X10, 16
	037 Move W2, 2
	038 Move X0, X19
	039 Call 0x1C5D788
	040 Move W9, [X10]
	041 Add W9, W9, 2
	042 Add X8, X8, W9
	043 Add X0, X8, 312
	044 Move X2, [X0]
	045 Move X1, [X0+8]
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 CallNoReturn X2
	051 Call 0x1C17F20

Method: System.Void set_maxLength(System.Int32 value)

Disassembly:
	0x026B2A9C LDR X8, [X20 + 0x20]
	0x026B2AA0 LDR X8, [X8 + 0xC0]
	0x026B2AA4 LDR X0, [X8 + 0x70]
	0x026B2AA8 LDRB W8, [X0 + 0x135]
	0x026B2AAC TBNZ X8, 0x0, 0x26B2AB4
	0x026B2AB0 BL 0x1C5C684
	0x026B2AB4 LDR W8, [X0 + 0xE0]
	0x026B2AB8 CBNZ W8, 0x26B2AC0
	0x026B2ABC BL 0x1C16DFC
	0x026B2AC0 LDR X8, [X20 + 0x20]
	0x026B2AC4 LDR X8, [X8 + 0xC0]
	0x026B2AC8 LDR X0, [X8 + 0x70]
	0x026B2ACC LDRB W8, [X0 + 0x135]
	0x026B2AD0 TBNZ X8, 0x0, 0x26B2AD8
	0x026B2AD4 BL 0x1C5C684
	0x026B2AD8 LDR X8, [X0 + 0xB8]
	0x026B2ADC MOV X0, X19
	0x026B2AE0 MOV X2, X31
	0x026B2AE4 LDR X1, [X8 + 0x30]
	0x026B2AE8 BL 0x3DF1C70
	0x026B2AEC LDR X8, [X20 + 0x20]
	0x026B2AF0 LDR X21, [X19 + 0x3C8]
	0x026B2AF4 LDR X8, [X8 + 0xC0]
	0x026B2AF8 LDR X0, [X8 + 0x98]
	0x026B2AFC LDRB W8, [X0 + 0x135]
	0x026B2B00 TBNZ X8, 0x0, 0x26B2B08
	0x026B2B04 BL 0x1C5C684
	0x026B2B08 LDR W8, [X0 + 0xE0]
	0x026B2B0C CBNZ W8, 0x26B2B14
	0x026B2B10 BL 0x1C16DFC
	0x026B2B14 LDR X8, [X20 + 0x20]
	0x026B2B18 LDR X8, [X8 + 0xC0]
	0x026B2B1C LDR X0, [X8 + 0x98]
	0x026B2B20 LDRB W8, [X0 + 0x135]
	0x026B2B24 TBNZ X8, 0x0, 0x26B2B2C
	0x026B2B28 BL 0x1C5C684
	0x026B2B2C CBZ X21, 0x26B2C30
	0x026B2B30 LDR X8, [X0 + 0xB8]
	0x026B2B34 ADRP X22, 0x1A6B000
	0x026B2B38 MOV X0, X21
	0x026B2B3C MOV X2, X31
	0x026B2B40 LDR X1, [X8 + 0x8]
	0x026B2B44 LDR X22, [X22 + 0x660]
	0x026B2B48 BL 0x3DF1C70
	0x026B2B4C LDR X0, [X22]
	0x026B2B50 LDR X21, [X19 + 0x3C8]
	0x026B2B54 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1D29000
	006 Move W8, [X21+980]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1A6C000
	014 Move X0, [X0+1584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+980], W8
	018 Move X0, [X20+968]
	019 Compare X0, 0
	020 JumpIfEqual {55}
	021 Move X1, X31
	022 Call TextElement.get_edition, X0
	023 Compare X0, 0
	024 JumpIfEqual {55}
	025 Move X10, 0x1A6C000
	026 Move X8, [X0]
	027 Move X10, [X10+1584]
	028 Move X20, X0
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move X1, [X10]
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move W2, 5
	040 Move X0, X20
	041 Call 0x1C5D788
	042 Move W9, [X10]
	043 Add W9, W9, 5
	044 Add X8, X8, W9
	045 Add X0, X8, 312
	046 Move X3, [X0]
	047 Move X2, [X0+8]
	048 Move X0, X20
	049 Move W1, W19
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 CallNoReturn X3
	055 Call 0x1C17F20

Method: System.Void set_maskChar(System.Char value)

Disassembly:
	0x026B2B58 LDR X8, [X20 + 0x20]
	0x026B2B5C MOV X1, X19
	0x026B2B60 MOV X3, X31
	0x026B2B64 MOV X22, X0
	0x026B2B68 LDR X8, [X8 + 0xC0]
	0x026B2B6C LDR X2, [X8 + 0xA0]
	0x026B2B70 BL 0x2D0E824
	0x026B2B74 CBZ X21, 0x26B2C30
	0x026B2B78 ADRP X8, 0x1A6B000
	0x026B2B7C LDR X8, [X8 + 0x658]
	0x026B2B80 MOV X0, X21
	0x026B2B84 MOV X1, X22
	0x026B2B88 MOV W2, W31
	0x026B2B8C LDR X3, [X8]
	0x026B2B90 BL 0x21A1534
	0x026B2B94 ADD X8, X19, 0x3E4
	0x026B2B98 ADRP X21, 0x1D27000
	0x026B2B9C LDRB W9, [X21 + 0x78F]
	0x026B2BA0 LDR V8, [X8]
	0x026B2BA4 CBNZ W9, 0x26B2BBC
	0x026B2BA8 ADRP X0, 0x1A49000
	0x026B2BAC LDR X0, [X0 + 0xF08]
	0x026B2BB0 BL 0x1C16CF4
	0x026B2BB4 MOVZ W8, 0x1
	0x026B2BB8 STRB W8, [X21 + 0x78F]
	0x026B2BBC ADRP X8, 0x1A49000
	0x026B2BC0 LDR X8, [X8 + 0xF08]
	0x026B2BC4 LDR X8, [X8]
	0x026B2BC8 LDR X8, [X8 + 0xB8]
	0x026B2BCC LDR V0, [X8]
	0x026B2BD0 ADRP X8, 0xFFFFFFFFFE437000
	0x026B2BD4 LDR V1, [X8 + 0xF20]
	0x026B2BD8 FSUB V0.2S, V8.2S, V0.2S
	0x00000000 INVALID
	0x026B2BE0 FADDP S0, V0.2S
	0x026B2BE4 FCMP S0, S1
	0x026B2BE8 B.MI 0x26B2C18
	0x026B2BEC STR W31, [X19 + 0x3E8]
	0x026B2BF0 LDR X8, [X20 + 0x20]
	0x026B2BF4 MOV X0, X19
	0x026B2BF8 MOV W1, W31
	0x026B2BFC MOV W2, W31
	0x026B2C00 LDR X8, [X8 + 0xC0]
	0x026B2C04 LDR X8, [X8 + 0x50]
	0x026B2C08 LDR X8, [X8 + 0x20]
	0x026B2C0C LDR X8, [X8 + 0xC0]
	0x026B2C10 LDR X3, [X8 + 0xD0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1D29000
	006 Move W8, [X21+981]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1A6C000
	014 Move X0, [X0+1584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+981], W8
	018 Move X0, [X20+968]
	019 Compare X0, 0
	020 JumpIfEqual {55}
	021 Move X1, X31
	022 Call TextElement.get_edition, X0
	023 Compare X0, 0
	024 JumpIfEqual {55}
	025 Move X10, 0x1A6C000
	026 Move X8, [X0]
	027 Move X10, [X10+1584]
	028 Move X20, X0
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move X1, [X10]
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move W2, 22
	040 Move X0, X20
	041 Call 0x1C5D788
	042 Move W9, [X10]
	043 Add W9, W9, 22
	044 Add X8, X8, W9
	045 Add X0, X8, 312
	046 Move X3, [X0]
	047 Move X2, [X0+8]
	048 Move X0, X20
	049 Move W1, W19
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 CallNoReturn X3
	055 Call 0x1C17F20

Method: System.Boolean get_isPasswordField()

Disassembly:
	0x026B2C14 BL 0x26B3778
	0x026B2C18 LDP X20, X19, [X31 + 0x30]
	0x026B2C1C LDP X22, X21, [X31 + 0x20]
	0x026B2C20 LDR X30, [X31 + 0x18]
	0x026B2C24 LDR V8, [X31 + 0x10]
	0x026B2C28 ADD X31, X31, 0x40
	0x026B2C2C RET
	0x026B2C30 BL 0x1C16F20
	0x026B2C34 STR X30, [X31 - 0x40]!
	0x026B2C38 STP X24, X23, [X31 + 0x10]
	0x026B2C3C STP X22, X21, [X31 + 0x20]
	0x026B2C40 STP X20, X19, [X31 + 0x30]
	0x026B2C44 ADRP X21, 0x1D28000
	0x026B2C48 LDRB W8, [X21 + 0x3DA]
	0x026B2C4C MOV X19, X1
	0x026B2C50 MOV X20, X0
	0x026B2C54 TBNZ X8, 0x0, 0x26B2CC0
	0x026B2C58 ADRP X0, 0x1A6B000
	0x026B2C5C LDR X0, [X0 + 0x658]
	0x026B2C60 BL 0x1C16CF4
	0x026B2C64 ADRP X0, 0x1A6B000
	0x026B2C68 LDR X0, [X0 + 0x660]
	0x026B2C6C BL 0x1C16CF4
	0x026B2C70 ADRP X0, 0x1A6B000
	0x026B2C74 LDR X0, [X0 + 0x668]
	0x026B2C78 BL 0x1C16CF4
	0x026B2C7C ADRP X0, 0x1A6B000
	0x026B2C80 LDR X0, [X0 + 0x670]
	0x026B2C84 BL 0x1C16CF4
	0x026B2C88 ADRP X0, 0x1A6B000
	0x026B2C8C LDR X0, [X0 + 0x630]
	0x026B2C90 BL 0x1C16CF4
	0x026B2C94 ADRP X0, 0x1A42000
	0x026B2C98 LDR X0, [X0 + 0x1B8]
	0x026B2C9C BL 0x1C16CF4
	0x026B2CA0 ADRP X0, 0x1A6B000
	0x026B2CA4 LDR X0, [X0 + 0x678]
	0x026B2CA8 BL 0x1C16CF4
	0x026B2CAC ADRP X0, 0x1A69000
	0x026B2CB0 LDR X0, [X0 + 0x898]
	0x026B2CB4 BL 0x1C16CF4
	0x026B2CB8 MOVZ W8, 0x1
	0x026B2CBC STRB W8, [X21 + 0x3DA]
	0x026B2CC0 LDR X0, [X20 + 0x3C8]
	0x026B2CC4 CBZ X0, 0x26B32A4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1D29000
	005 Move W8, [X20+982]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1A6C000
	012 Move X0, [X0+1584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+982], W8
	016 Move X0, [X19+968]
	017 Compare X0, 0
	018 JumpIfEqual {51}
	019 Move X1, X31
	020 Call TextElement.get_edition, X0
	021 Compare X0, 0
	022 JumpIfEqual {51}
	023 Move X10, 0x1A6C000
	024 Move X8, [X0]
	025 Move X10, [X10+1584]
	026 Move X19, X0
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X1, [X10]
	029 Compare X9, 0
	030 JumpIfEqual {37}
	031 Move X10, [X8+176]
	032 Add X10, X10, 8
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X9, X9, 1
	036 Add X10, X10, 16
	037 Move W2, 23
	038 Move X0, X19
	039 Call 0x1C5D788
	040 Move W9, [X10]
	041 Add W9, W9, 23
	042 Add X8, X8, W9
	043 Add X0, X8, 312
	044 Move X2, [X0]
	045 Move X1, [X0+8]
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 CallNoReturn X2
	051 Call 0x1C17F20

Method: System.Void set_isPasswordField(System.Boolean value)

Disassembly:
	0x026B2CC8 MOV X1, X31
	0x026B2CCC BL 0x3E0AF0C
	0x026B2CD0 CBZ X0, 0x26B32A4
	0x026B2CD4 ADRP X10, 0x1A6B000
	0x026B2CD8 LDR X8, [X0]
	0x026B2CDC LDR X10, [X10 + 0x630]
	0x026B2CE0 MOV X21, X0
	0x026B2CE4 LDRH W9, [X8 + 0x12E]
	0x026B2CE8 LDR X1, [X10]
	0x026B2CEC CBZ X9, 0x26B2D10
	0x026B2CF0 LDR X10, [X8 + 0xB0]
	0x026B2CF4 ADD X10, X10, 0x8
	0x026B2CF8 LDUR X11, [X10 - 0x8]
	0x026B2CFC CMP X11, X1
	0x026B2D00 B.EQ 0x26B2D20
	0x026B2D04 SUBS X9, X9, 0x1
	0x026B2D08 ADD X10, X10, 0x10
	0x026B2D0C B.NE 0x26B2CF8
	0x026B2D10 MOV X0, X21
	0x026B2D14 MOV W2, W31
	0x026B2D18 BL 0x1C5C788
	0x026B2D1C B 0x26B2D2C
	0x026B2D20 LDRSW X9, [X10]
	0x026B2D24 ADD X8, X8, X9, 0x4, LSL
	0x026B2D28 ADD X0, X8, 0x138
	0x026B2D2C LDP X8, X1, [X0]
	0x026B2D30 MOV X0, X21
	0x026B2D34 BLR X8
	0x026B2D38 TBZ X0, 0x0, 0x26B2D80
	0x026B2D3C LDR X8, [X19 + 0x20]
	0x026B2D40 MOV X0, X20
	0x026B2D44 LDR X8, [X8 + 0xC0]
	0x026B2D48 LDR X1, [X8 + 0xA8]
	0x026B2D4C BL 0x26B4450
	0x026B2D50 LDR X8, [X19 + 0x20]
	0x026B2D54 MOV X0, X20
	0x026B2D58 LDR X8, [X8 + 0xC0]
	0x026B2D5C LDR X1, [X8 + 0x90]
	0x026B2D60 BL 0x26B45AC
	0x026B2D64 LDR W8, [X20 + 0x3F8]
	0x026B2D68 CMP W8, 0x2
	0x026B2D6C B.EQ 0x26B2D78
	0x026B2D70 LDR X8, [X20 + 0x3D0]
	0x026B2D74 CBZ X8, 0x26B2EAC
	0x026B2D78 LDR X8, [X20 + 0x3D8]
	0x026B2D7C CBZ X8, 0x26B2D94
	0x026B2D80 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1D29000
	006 Move W8, [X21+983]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1A6C000
	014 Move X0, [X0+1584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+983], W8
	018 Move X0, [X20+968]
	019 Compare X0, 0
	020 JumpIfEqual {55}
	021 Move X1, X31
	022 Call TextElement.get_edition, X0
	023 Compare X0, 0
	024 JumpIfEqual {55}
	025 Move X10, 0x1A6C000
	026 Move X8, [X0]
	027 Move X10, [X10+1584]
	028 Move X20, X0
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move X1, [X10]
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move W2, 24
	040 Move X0, X20
	041 Call 0x1C5D788
	042 Move W9, [X10]
	043 Add W9, W9, 24
	044 Add X8, X8, W9
	045 Add X0, X8, 312
	046 Move X3, [X0]
	047 Move X2, [X0+8]
	048 And W1, W19, 1
	049 Move X0, X20
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 CallNoReturn X3
	055 Call 0x1C17F20

Method: System.Void set_isDragging(System.Boolean value)

Disassembly:
	0x026B2D84 LDP X22, X21, [X31 + 0x20]
	0x026B2D88 LDP X24, X23, [X31 + 0x10]
	0x026B2D8C LDR X30, [X31], #0x40

ISIL:
	001 And W8, W1, 1
	002 Move [X0+992], W8
	003 Return 

Method: System.String get_text()

Disassembly:
	0x026B2D90 RET
	0x026B2D94 ADRP X8, 0x1A6B000
	0x026B2D98 LDR X21, [X20 + 0x3C8]
	0x026B2D9C LDR X8, [X8 + 0x660]
	0x026B2DA0 LDR X0, [X8]
	0x026B2DA4 BL 0x1C16F10
	0x026B2DA8 LDR X8, [X19 + 0x20]
	0x026B2DAC MOV X1, X20
	0x026B2DB0 MOV X3, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+968]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+2840]
	007 Move X1, [X8+2848]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void set_text(System.String value)

Disassembly:
	0x026B2DB4 MOV X22, X0
	0x026B2DB8 LDR X8, [X8 + 0xC0]
	0x026B2DBC LDR X2, [X8 + 0xA0]
	0x026B2DC0 BL 0x2D0E824
	0x026B2DC4 CBZ X21, 0x26B32A4
	0x026B2DC8 ADRP X8, 0x1A6B000
	0x026B2DCC LDR X8, [X8 + 0x658]
	0x026B2DD0 MOV X0, X21
	0x026B2DD4 MOV X1, X22
	0x026B2DD8 MOV W2, W31
	0x026B2DDC LDR X3, [X8]
	0x026B2DE0 BL 0x21A1534
	0x026B2DE4 ADRP X8, 0x1A69000
	0x026B2DE8 LDR X8, [X8 + 0x898]
	0x026B2DEC LDR X0, [X8]
	0x026B2DF0 BL 0x1C16F10
	0x026B2DF4 MOV X1, X31
	0x026B2DF8 MOV X21, X0
	0x026B2DFC BL 0x3DEF578
	0x026B2E00 CBZ X21, 0x26B32A4
	0x026B2E04 MOV X0, X21
	0x026B2E08 MOV X1, X31
	0x026B2E0C BL 0x3DEF2D0
	0x026B2E10 LDR X8, [X19 + 0x20]
	0x026B2E14 MOV X22, X0
	0x026B2E18 LDR X8, [X8 + 0xC0]
	0x026B2E1C LDR X8, [X8 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+968]
	006 Compare X0, 0
	007 JumpIfEqual {35}
	008 Move X8, [X0]
	009 Move X19, X1
	010 Move X9, [X8+2840]
	011 Move X1, [X8+2848]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X1, X19
	014 Move X2, X31
	015 Call String.op_Equality, X0, X1
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {24}
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return 
	024 Move X0, [X20+968]
	025 Compare X0, 0
	026 JumpIfEqual {35}
	027 Move X8, [X0]
	028 Move X1, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X3, [X8+2856]
	032 Move X2, [X8+2864]
	033 Move X30, [X31+32]
	034 CallNoReturn X3
	035 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x026B2E20 LDRB W9, [X8 + 0x135]
	0x026B2E24 TBNZ X9, 0x0, 0x26B2E34
	0x026B2E28 MOV X0, X8
	0x026B2E2C BL 0x1C5C684
	0x026B2E30 MOV X8, X0
	0x026B2E34 LDR W9, [X8 + 0xE0]
	0x026B2E38 CBNZ W9, 0x26B2E44
	0x026B2E3C MOV X0, X8
	0x026B2E40 BL 0x1C16DFC
	0x026B2E44 LDR X8, [X19 + 0x20]
	0x026B2E48 LDR X8, [X8 + 0xC0]
	0x026B2E4C LDR X0, [X8 + 0x70]
	0x026B2E50 LDRB W8, [X0 + 0x135]
	0x026B2E54 TBNZ X8, 0x0, 0x26B2E5C
	0x026B2E58 BL 0x1C5C684
	0x026B2E5C CBZ X22, 0x26B32A4
	0x026B2E60 ADRP X10, 0x1A42000
	0x026B2E64 LDR X9, [X0 + 0xB8]
	0x026B2E68 LDR X10, [X10 + 0x1B8]
	0x026B2E6C LDR W11, [X22 + 0x1C]
	0x026B2E70 LDR X8, [X22 + 0x10]
	0x026B2E74 LDR X1, [X9 + 0x28]
	0x026B2E78 LDR X9, [X10]
	0x026B2E7C ADD W10, W11, 0x1
	0x026B2E80 STR W10, [X22 + 0x1C]
	0x026B2E84 CBZ X8, 0x26B32A4
	0x026B2E88 LDRSW X10, [X22 + 0x18]
	0x026B2E8C LDR W11, [X8 + 0x18]
	0x026B2E90 CMP W10, W11
	0x026B2E94 B.CS 0x26B31D0
	0x026B2E98 ADD W9, W10, 0x1
	0x026B2E9C ADD X8, X8, X10, 0x3, LSL
	0x026B2EA0 STR W9, [X22 + 0x18]
	0x026B2EA4 STR X1, [X8 + 0x20]
	0x026B2EA8 B 0x26B31E4
	0x026B2EAC ADRP X8, 0x1A6B000
	0x026B2EB0 LDR X8, [X8 + 0x678]
	0x026B2EB4 LDR X0, [X8]
	0x026B2EB8 BL 0x1C16F10
	0x026B2EBC MOV X1, X31
	0x026B2EC0 MOV X21, X0
	0x026B2EC4 BL 0x3D7F2FC
	0x026B2EC8 STR X21, [X20 + 0x3D0]
	0x026B2ECC CBZ X21, 0x26B32A4
	0x026B2ED0 LDR X1, [X20 + 0x3C8]
	0x026B2ED4 MOV X0, X21
	0x026B2ED8 MOV X2, X31
	0x026B2EDC BL 0x3DF60E8
	0x026B2EE0 LDR X1, [X20 + 0x3D0]
	0x026B2EE4 MOV X0, X20
	0x026B2EE8 MOV X2, X31
	0x026B2EEC BL 0x3DF60E8
	0x026B2EF0 LDR X8, [X19 + 0x20]
	0x026B2EF4 MOV X0, X20
	0x026B2EF8 LDR X8, [X8 + 0xC0]
	0x026B2EFC LDR X1, [X8 + 0xB0]
	0x026B2F00 BL 0x26B3FCC
	0x026B2F04 LDR X0, [X20 + 0x3D0]
	0x026B2F08 CBZ X0, 0x26B32A4
	0x026B2F0C MOVZ W1, 0x2
	0x026B2F10 MOV X2, X31
	0x026B2F14 BL 0x3D7D940
	0x026B2F18 LDR X0, [X20 + 0x3D0]
	0x026B2F1C CBZ X0, 0x26B32A4
	0x026B2F20 LDR W1, [X20 + 0x3F8]
	0x026B2F24 MOV X2, X31
	0x026B2F28 BL 0x3D7DE9C
	0x026B2F2C LDR X8, [X19 + 0x20]
	0x026B2F30 LDR X21, [X20 + 0x3D0]
	0x026B2F34 LDR X8, [X8 + 0xC0]
	0x026B2F38 LDR X0, [X8 + 0x98]
	0x026B2F3C LDRB W8, [X0 + 0x135]
	0x026B2F40 TBNZ X8, 0x0, 0x26B2F48
	0x026B2F44 BL 0x1C5C684
	0x026B2F48 LDR W8, [X0 + 0xE0]
	0x026B2F4C CBNZ W8, 0x26B2F54
	0x026B2F50 BL 0x1C16DFC
	0x026B2F54 LDR X8, [X19 + 0x20]
	0x026B2F58 LDR X8, [X8 + 0xC0]
	0x026B2F5C LDR X0, [X8 + 0x98]
	0x026B2F60 LDRB W8, [X0 + 0x135]
	0x026B2F64 TBNZ X8, 0x0, 0x26B2F6C
	0x026B2F68 BL 0x1C5C684
	0x026B2F6C CBZ X21, 0x26B32A4
	0x026B2F70 LDR X8, [X0 + 0xB8]
	0x026B2F74 MOV X0, X21
	0x026B2F78 MOV X2, X31
	0x026B2F7C LDR X1, [X8 + 0x30]
	0x026B2F80 BL 0x3DF1C70
	0x026B2F84 LDR X8, [X20 + 0x3D0]
	0x026B2F88 CBZ X8, 0x26B32A4
	0x026B2F8C LDR X9, [X19 + 0x20]
	0x026B2F90 LDR X21, [X8 + 0x418]
	0x026B2F94 LDR X9, [X9 + 0xC0]
	0x026B2F98 LDR X0, [X9 + 0x98]
	0x026B2F9C LDRB W9, [X0 + 0x135]
	0x026B2FA0 TBNZ X9, 0x0, 0x26B2FA8
	0x026B2FA4 BL 0x1C5C684
	0x026B2FA8 CBZ X21, 0x26B32A4
	0x026B2FAC LDR X8, [X0 + 0xB8]
	0x026B2FB0 MOV X0, X21
	0x026B2FB4 MOV X2, X31
	0x026B2FB8 LDR X1, [X8 + 0x38]
	0x026B2FBC BL 0x3DF1C70
	0x026B2FC0 LDR X0, [X20 + 0x3D0]
	0x026B2FC4 CBZ X0, 0x26B32A4
	0x026B2FC8 LDR X8, [X0]
	0x026B2FCC LDR X9, [X8 + 0x768]
	0x026B2FD0 LDR X1, [X8 + 0x770]
	0x026B2FD4 BLR X9
	0x026B2FD8 LDR X8, [X19 + 0x20]
	0x026B2FDC MOV X21, X0
	0x026B2FE0 LDR X8, [X8 + 0xC0]
	0x026B2FE4 LDR X8, [X8 + 0x98]
	0x026B2FE8 LDRB W9, [X8 + 0x135]
	0x026B2FEC TBNZ X9, 0x0, 0x26B2FFC
	0x026B2FF0 MOV X0, X8
	0x026B2FF4 BL 0x1C5C684
	0x026B2FF8 MOV X8, X0
	0x026B2FFC CBZ X21, 0x26B32A4
	0x026B3000 LDR X8, [X8 + 0xB8]
	0x026B3004 MOV X0, X21
	0x026B3008 MOV X2, X31
	0x026B300C LDR X1, [X8 + 0x40]
	0x026B3010 BL 0x3DF1C70
	0x026B3014 LDR X0, [X20 + 0x3D0]
	0x026B3018 CBZ X0, 0x26B32A4
	0x026B301C LDR X8, [X0]
	0x026B3020 LDR X9, [X8 + 0x768]
	0x026B3024 LDR X1, [X8 + 0x770]
	0x026B3028 BLR X9
	0x026B302C ADRP X8, 0x1A6A000
	0x026B3030 LDR X8, [X8 + 0x660]
	0x026B3034 MOV X21, X0
	0x026B3038 LDR X8, [X8]
	0x026B303C MOV X0, X8
	0x026B3040 BL 0x1C16F10
	0x026B3044 LDR X8, [X19 + 0x20]
	0x026B3048 MOV X1, X20
	0x026B304C MOV X3, X31
	0x026B3050 MOV X22, X0
	0x026B3054 LDR X8, [X8 + 0xC0]
	0x026B3058 LDR X2, [X8 + 0xB8]
	0x026B305C BL 0x2D0E824
	0x026B3060 CBZ X21, 0x26B32A4
	0x026B3064 ADRP X8, 0x1A6A000
	0x026B3068 LDR X8, [X8 + 0x658]
	0x026B306C MOV X0, X21
	0x026B3070 MOV X1, X22
	0x026B3074 MOV W2, W31
	0x026B3078 LDR X3, [X8]
	0x026B307C BL 0x21A1534
	0x026B3080 LDR X8, [X20 + 0x3D0]
	0x026B3084 CBZ X8, 0x26B32A4
	0x026B3088 LDR X8, [X8 + 0x428]
	0x026B308C CBZ X8, 0x26B32A4
	0x026B3090 ADRP X23, 0x1A6A000
	0x026B3094 LDR X21, [X8 + 0x3D0]
	0x026B3098 LDR X23, [X23 + 0x668]
	0x026B309C LDR X0, [X23]
	0x026B30A0 BL 0x1C16F10
	0x026B30A4 LDR X8, [X19 + 0x20]
	0x026B30A8 MOV X1, X20
	0x026B30AC MOV X3, X31
	0x026B30B0 MOV X22, X0
	0x026B30B4 LDR X8, [X8 + 0xC0]
	0x026B30B8 LDR X2, [X8 + 0xC0]
	0x026B30BC BL 0x2D0E824
	0x026B30C0 ADRP X24, 0x1A6A000
	0x026B30C4 LDR X24, [X24 + 0x670]
	0x026B30C8 MOV X0, X21
	0x026B30CC MOV X1, X22
	0x026B30D0 LDR X2, [X24]
	0x026B30D4 BL 0x21EF314
	0x026B30D8 LDR X8, [X20 + 0x3D0]
	0x026B30DC CBZ X8, 0x26B32A4
	0x026B30E0 LDR X9, [X8 + 0x428]
	0x026B30E4 CBZ X9, 0x26B32A4
	0x026B30E8 LDR X9, [X9 + 0x3D0]
	0x026B30EC CBZ X9, 0x26B32A4
	0x026B30F0 STRB W31, [X9 + 0x20]
	0x026B30F4 LDR X8, [X8 + 0x420]
	0x026B30F8 CBZ X8, 0x26B32A4
	0x026B30FC LDR X0, [X23]
	0x026B3100 LDR X21, [X8 + 0x3D0]
	0x026B3104 BL 0x1C16F10
	0x026B3108 LDR X8, [X19 + 0x20]
	0x026B310C MOV X1, X20
	0x026B3110 MOV X3, X31
	0x026B3114 MOV X22, X0
	0x026B3118 LDR X8, [X8 + 0xC0]
	0x026B311C LDR X2, [X8 + 0xC0]
	0x026B3120 BL 0x2D0E824
	0x026B3124 LDR X2, [X24]
	0x026B3128 MOV X0, X21
	0x026B312C MOV X1, X22
	0x026B3130 BL 0x21EF314
	0x026B3134 LDR X8, [X20 + 0x3D0]
	0x026B3138 CBZ X8, 0x26B32A4
	0x026B313C LDR X8, [X8 + 0x420]
	0x026B3140 CBZ X8, 0x26B32A4
	0x026B3144 LDR X8, [X8 + 0x3D0]
	0x026B3148 CBZ X8, 0x26B32A4
	0x026B314C STRB W31, [X8 + 0x20]
	0x026B3150 LDR X8, [X19 + 0x20]
	0x026B3154 LDR X8, [X8 + 0xC0]
	0x026B3158 LDR X0, [X8 + 0x70]
	0x026B315C LDRB W8, [X0 + 0x135]
	0x026B3160 TBNZ X8, 0x0, 0x26B3168
	0x026B3164 BL 0x1C5C684
	0x026B3168 LDR W8, [X0 + 0xE0]
	0x026B316C CBNZ W8, 0x26B3174
	0x026B3170 BL 0x1C16DFC
	0x026B3174 LDR X8, [X19 + 0x20]
	0x026B3178 LDR X8, [X8 + 0xC0]
	0x026B317C LDR X0, [X8 + 0x70]
	0x026B3180 LDRB W8, [X0 + 0x135]
	0x026B3184 TBNZ X8, 0x0, 0x26B318C
	0x026B3188 BL 0x1C5C684
	0x026B318C LDR X8, [X0 + 0xB8]
	0x026B3190 MOV X0, X20
	0x026B3194 MOV X2, X31
	0x026B3198 LDR X1, [X8 + 0x40]
	0x026B319C BL 0x3DF1C70
	0x026B31A0 LDR X8, [X19 + 0x20]
	0x026B31A4 LDR X19, [X20 + 0x3C8]
	0x026B31A8 LDR X8, [X8 + 0xC0]
	0x026B31AC LDR X0, [X8 + 0x98]
	0x026B31B0 LDRB W8, [X0 + 0x135]
	0x026B31B4 TBNZ X8, 0x0, 0x26B31BC
	0x026B31B8 BL 0x1C5C684
	0x026B31BC CBZ X19, 0x26B32A4
	0x026B31C0 LDR X8, [X0 + 0xB8]
	0x026B31C4 MOV X0, X19
	0x026B31C8 LDR X1, [X8 + 0x10]
	0x026B31CC B 0x26B328C
	0x026B31D0 LDR X8, [X9 + 0x20]
	0x026B31D4 MOV X0, X22
	0x026B31D8 LDR X8, [X8 + 0xC0]
	0x026B31DC LDR X2, [X8 + 0x70]
	0x026B31E0 BL 0x301BF90
	0x026B31E4 LDR X1, [X20 + 0x3C8]
	0x026B31E8 MOV X0, X21
	0x026B31EC MOV X2, X31
	0x026B31F0 STR X21, [X20 + 0x3D8]
	0x026B31F4 BL 0x3DF60E8
	0x026B31F8 LDR X1, [X20 + 0x3D8]
	0x026B31FC MOV X0, X20
	0x026B3200 MOV X2, X31
	0x026B3204 BL 0x3DF60E8
	0x026B3208 MOV X0, X20
	0x026B320C BL 0x26B42FC
	0x026B3210 LDR X8, [X19 + 0x20]
	0x026B3214 LDR X8, [X8 + 0xC0]
	0x026B3218 LDR X0, [X8 + 0x70]
	0x026B321C LDRB W8, [X0 + 0x135]
	0x026B3220 TBNZ X8, 0x0, 0x26B3228
	0x026B3224 BL 0x1C5C684
	0x026B3228 LDR X8, [X0 + 0xB8]
	0x026B322C MOV X0, X20
	0x026B3230 MOV X2, X31
	0x026B3234 LDR X1, [X8 + 0x38]
	0x026B3238 BL 0x3DF1C70
	0x026B323C LDR X8, [X19 + 0x20]
	0x026B3240 LDR X20, [X20 + 0x3C8]
	0x026B3244 LDR X8, [X8 + 0xC0]
	0x026B3248 LDR X0, [X8 + 0x98]
	0x026B324C LDRB W8, [X0 + 0x135]
	0x026B3250 TBNZ X8, 0x0, 0x26B3258
	0x026B3254 BL 0x1C5C684
	0x026B3258 LDR W8, [X0 + 0xE0]
	0x026B325C CBNZ W8, 0x26B3264
	0x026B3260 BL 0x1C16DFC
	0x026B3264 LDR X8, [X19 + 0x20]
	0x026B3268 LDR X8, [X8 + 0xC0]
	0x026B326C LDR X0, [X8 + 0x98]
	0x026B3270 LDRB W8, [X0 + 0x135]
	0x026B3274 TBNZ X8, 0x0, 0x26B327C
	0x026B3278 BL 0x1C5C684
	0x026B327C CBZ X20, 0x26B32A4
	0x026B3280 LDR X8, [X0 + 0xB8]
	0x026B3284 MOV X0, X20
	0x026B3288 LDR X1, [X8 + 0x8]
	0x026B328C LDP X20, X19, [X31 + 0x30]
	0x026B3290 LDP X22, X21, [X31 + 0x20]
	0x026B3294 LDP X24, X23, [X31 + 0x10]
	0x026B3298 MOV X2, X31
	0x026B329C LDR X30, [X31], #0x40
	0x026B32A0 B 0x3DF1C70
	0x026B32A4 BL 0x1C16F20
	0x026B32A8 STR X30, [X31 - 0x10]!
	0x026B32AC CBZ X1, 0x26B3304
	0x026B32B0 LDUR V0, [X1 + 0x8C]
	0x026B32B4 LDUR V1, [X1 + 0x9C]
	0x026B32B8 ADRP X8, 0xFFFFFFFFFE436000
	0x026B32BC LDR V2, [X8 + 0xF20]
	0x026B32C0 FSUB V0.2S, V0.2S, V1.2S
	0x00000000 INVALID
	0x026B32C8 FADDP S0, V0.2S
	0x026B32CC FCMP S0, S2
	0x026B32D0 B.MI 0x26B32FC
	0x026B32D4 LDR X8, [X2 + 0x20]
	0x026B32D8 MOV W1, W31
	0x026B32DC MOV W2, W31
	0x026B32E0 LDR X8, [X8 + 0xC0]
	0x026B32E4 LDR X8, [X8 + 0x50]
	0x026B32E8 LDR X8, [X8 + 0x20]
	0x026B32EC LDR X8, [X8 + 0xC0]
	0x026B32F0 LDR X3, [X8 + 0xD0]
	0x026B32F4 LDR X30, [X31], #0x10
	0x026B32F8 B 0x26B3778
	0x026B32FC LDR X30, [X31], #0x10
	0x026B3300 RET
	0x026B3304 BL 0x1C16F20
	0x026B3308 SUB X31, X31, 0x40
	0x026B330C STR X30, [X31 + 0x10]
	0x026B3310 STP X22, X21, [X31 + 0x20]
	0x026B3314 STP X20, X19, [X31 + 0x30]
	0x026B3318 ADRP X22, 0x1D27000
	0x026B331C LDRB W8, [X22 + 0x3DB]
	0x026B3320 MOV X20, X2
	0x026B3324 MOV X21, X1
	0x026B3328 MOV X19, X0
	0x026B332C TBNZ X8, 0x0, 0x26B3344
	0x026B3330 ADRP X0, 0x1A40000
	0x026B3334 LDR X0, [X0 + 0x5A8]
	0x026B3338 BL 0x1C16CF4
	0x026B333C MOVZ W8, 0x1
	0x026B3340 STRB W8, [X22 + 0x3DB]
	0x026B3344 CBZ X21, 0x26B33DC
	0x026B3348 LDUR V0, [X21 + 0x8C]
	0x026B334C LDUR V1, [X21 + 0x9C]
	0x026B3350 ADRP X8, 0xFFFFFFFFFE436000
	0x026B3354 LDR V2, [X8 + 0xF20]
	0x026B3358 FSUB V1.2S, V0.2S, V1.2S
	0x00000000 INVALID
	0x026B3360 FADDP S0, V0.2S
	0x026B3364 FCMP S0, S2
	0x026B3368 B.MI 0x26B33C8
	0x026B336C ADRP X8, 0x1A40000
	0x026B3370 LDR X8, [X8 + 0x5A8]
	0x026B3374 LDR X0, [X8]
	0x026B3378 LDR W8, [X0 + 0xE0]
	0x026B337C CBNZ W8, 0x26B338C
	0x026B3380 STR V1, [X31]
	0x026B3384 BL 0x1C16DFC
	0x026B3388 LDR V1, [X31]
	0x026B338C LDR X8, [X20 + 0x20]
	0x026B3390 ADRP X9, 0xFFFFFFFFFE436000
	0x026B3394 LDR V0, [X9 + 0xF9C]
	0x026B3398 MOV X0, X19
	0x026B339C LDR X8, [X8 + 0xC0]
	0x026B33A0 LDP X20, X19, [X31 + 0x30]
	0x026B33A4 LDP X22, X21, [X31 + 0x20]
	0x026B33A8 LDR X30, [X31 + 0x10]
	0x026B33AC LDR X3, [X8 + 0xD0]
	0x026B33B0 FABS S1, S1
	0x026B33B4 FCMP S1, S0
	0x026B33B8 CSET W2, GT
	0x026B33BC MOV W1, W31
	0x026B33C0 ADD X31, X31, 0x40
	0x026B33C4 B 0x26B3778
	0x026B33C8 LDP X20, X19, [X31 + 0x30]
	0x026B33CC LDP X22, X21, [X31 + 0x20]
	0x026B33D0 LDR X30, [X31 + 0x10]
	0x026B33D4 ADD X31, X31, 0x40
	0x026B33D8 RET
	0x026B33DC BL 0x1C16F20
	0x026B33E0 SUB X31, X31, 0x70
	0x026B33E4 STP D11, D10, [X31 + 0x20]
	0x026B33E8 STP D9, D8, [X31 + 0x30]
	0x026B33EC STP X30, X23, [X31 + 0x40]
	0x026B33F0 STP X22, X21, [X31 + 0x50]
	0x026B33F4 STP X20, X19, [X31 + 0x60]
	0x026B33F8 ADRP X22, 0x1D27000
	0x026B33FC LDRB W8, [X22 + 0x3DC]
	0x026B3400 MOV X20, X2
	0x026B3404 MOV X21, X1
	0x026B3408 MOV X19, X0
	0x026B340C TBNZ X8, 0x0, 0x26B3430
	0x026B3410 ADRP X0, 0x1A6A000
	0x026B3414 LDR X0, [X0 + 0x680]
	0x026B3418 BL 0x1C16CF4
	0x026B341C ADRP X0, 0x1A6A000
	0x026B3420 LDR X0, [X0 + 0x628]
	0x026B3424 BL 0x1C16CF4
	0x026B3428 MOVZ W8, 0x1
	0x026B342C STRB W8, [X22 + 0x3DC]
	0x026B3430 STP X31, X31, [X31 + 0x10]
	0x026B3434 STP X31, X31, [X31]
	0x026B3438 CBZ X21, 0x26B371C
	0x026B343C MOV X0, X21
	0x026B3440 MOV X1, X31
	0x026B3444 BL 0x3DADB00
	0x026B3448 LDR X8, [X20 + 0x20]
	0x026B344C MOV X21, X0
	0x026B3450 LDR X8, [X8 + 0xC0]
	0x026B3454 LDR X8, [X8 + 0x70]
	0x026B3458 LDRB W9, [X8 + 0x135]
	0x026B345C TBNZ X9, 0x0, 0x26B346C
	0x026B3460 MOV X0, X8
	0x026B3464 BL 0x1C5C684
	0x026B3468 MOV X8, X0
	0x026B346C LDR W9, [X8 + 0xE0]
	0x026B3470 CBNZ W9, 0x26B347C
	0x026B3474 MOV X0, X8
	0x026B3478 BL 0x1C16DFC
	0x026B347C LDR X8, [X20 + 0x20]
	0x026B3480 LDR X8, [X8 + 0xC0]
	0x026B3484 LDR X0, [X8 + 0x70]
	0x026B3488 LDRB W8, [X0 + 0x135]
	0x026B348C TBNZ X8, 0x0, 0x26B3494
	0x026B3490 BL 0x1C5C684
	0x026B3494 CBZ X21, 0x26B371C
	0x026B3498 ADRP X23, 0x1A6A000
	0x026B349C LDR X9, [X0 + 0xB8]
	0x026B34A0 LDR X8, [X21]
	0x026B34A4 LDR X23, [X23 + 0x680]
	0x026B34A8 LDR X22, [X9]
	0x026B34AC LDRH W9, [X8 + 0x12E]
	0x026B34B0 LDR X1, [X23]
	0x026B34B4 CBZ X9, 0x26B34D8
	0x026B34B8 LDR X10, [X8 + 0xB0]
	0x026B34BC ADD X10, X10, 0x8
	0x026B34C0 LDUR X11, [X10 - 0x8]
	0x026B34C4 CMP X11, X1
	0x026B34C8 B.EQ 0x26B34E8
	0x026B34CC SUBS X9, X9, 0x1
	0x026B34D0 ADD X10, X10, 0x10
	0x026B34D4 B.NE 0x26B34C0
	0x026B34D8 MOVZ W2, 0x2
	0x026B34DC MOV X0, X21
	0x026B34E0 BL 0x1C5C788
	0x026B34E4 B 0x26B34F8
	0x026B34E8 LDR W9, [X10]
	0x026B34EC ADD W9, W9, 0x2
	0x026B34F0 ADD X8, X8, W9, 0x4, SXTW
	0x026B34F4 ADD X0, X8, 0x138
	0x026B34F8 LDP X8, X3, [X0]
	0x026B34FC ADD X2, X31, 0x10
	0x026B3500 MOV X0, X21
	0x026B3504 MOV X1, X22
	0x026B3508 BLR X8
	0x026B350C TBZ X0, 0x0, 0x26B35A4
	0x026B3510 LDR X0, [X19 + 0x3C8]
	0x026B3514 CBZ X0, 0x26B371C
	0x026B3518 MOV X1, X31
	0x026B351C BL 0x3E0C77C
	0x026B3520 CBZ X0, 0x26B371C
	0x026B3524 ADRP X10, 0x1A6A000
	0x026B3528 LDP S9, S8, [X31 + 0x18]
	0x026B352C LDR X8, [X0]
	0x026B3530 LDP S11, S10, [X31 + 0x10]
	0x026B3534 LDR X10, [X10 + 0x628]
	0x026B3538 MOV X22, X0
	0x026B353C LDRH W9, [X8 + 0x12E]
	0x026B3540 LDR X1, [X10]
	0x026B3544 CBZ X9, 0x26B3568
	0x026B3548 LDR X10, [X8 + 0xB0]
	0x026B354C ADD X10, X10, 0x8
	0x026B3550 LDUR X11, [X10 - 0x8]
	0x026B3554 CMP X11, X1
	0x026B3558 B.EQ 0x26B3578
	0x026B355C SUBS X9, X9, 0x1
	0x026B3560 ADD X10, X10, 0x10
	0x026B3564 B.NE 0x26B3550
	0x026B3568 MOVZ W2, 0xA
	0x026B356C MOV X0, X22
	0x026B3570 BL 0x1C5C788
	0x026B3574 B 0x26B3588
	0x026B3578 LDR W9, [X10]
	0x026B357C ADD W9, W9, 0xA
	0x026B3580 ADD X8, X8, W9, 0x4, SXTW
	0x026B3584 ADD X0, X8, 0x138
	0x026B3588 LDP X8, X1, [X0]
	0x026B358C MOV X0, X22
	0x026B3590 MOV V0.16B, V11.16B
	0x026B3594 MOV V1.16B, V10.16B
	0x026B3598 MOV V2.16B, V9.16B
	0x026B359C MOV V3.16B, V8.16B
	0x026B35A0 BLR X8
	0x026B35A4 LDR X8, [X20 + 0x20]
	0x026B35A8 LDR X8, [X8 + 0xC0]
	0x026B35AC LDR X0, [X8 + 0x70]
	0x026B35B0 LDRB W8, [X0 + 0x135]
	0x026B35B4 TBNZ X8, 0x0, 0x26B35BC
	0x026B35B8 BL 0x1C5C684
	0x026B35BC LDR W8, [X0 + 0xE0]
	0x026B35C0 CBNZ W8, 0x26B35C8
	0x026B35C4 BL 0x1C16DFC
	0x026B35C8 LDR X8, [X20 + 0x20]
	0x026B35CC LDR X8, [X8 + 0xC0]
	0x026B35D0 LDR X0, [X8 + 0x70]
	0x026B35D4 LDRB W8, [X0 + 0x135]
	0x026B35D8 TBNZ X8, 0x0, 0x26B35E0
	0x026B35DC BL 0x1C5C684
	0x026B35E0 LDR X9, [X0 + 0xB8]
	0x026B35E4 LDR X8, [X21]
	0x026B35E8 LDR X1, [X23]
	0x026B35EC LDR X22, [X9 + 0x8]
	0x026B35F0 LDRH W9, [X8 + 0x12E]
	0x026B35F4 CBZ X9, 0x26B3618
	0x026B35F8 LDR X10, [X8 + 0xB0]
	0x026B35FC ADD X10, X10, 0x8
	0x026B3600 LDUR X11, [X10 - 0x8]
	0x026B3604 CMP X11, X1
	0x026B3608 B.EQ 0x26B3628
	0x026B360C SUBS X9, X9, 0x1
	0x026B3610 ADD X10, X10, 0x10
	0x026B3614 B.NE 0x26B3600
	0x026B3618 MOVZ W2, 0x2
	0x026B361C MOV X0, X21
	0x026B3620 BL 0x1C5C788
	0x026B3624 B 0x26B3638
	0x026B3628 LDR W9, [X10]
	0x026B362C ADD W9, W9, 0x2
	0x026B3630 ADD X8, X8, W9, 0x4, SXTW
	0x026B3634 ADD X0, X8, 0x138
	0x026B3638 LDP X8, X3, [X0]
	0x026B363C ADD X2, X31, 0x0
	0x026B3640 MOV X0, X21
	0x026B3644 MOV X1, X22
	0x026B3648 BLR X8
	0x026B364C TBZ X0, 0x0, 0x26B36E4
	0x026B3650 LDR X0, [X19 + 0x3C8]
	0x026B3654 CBZ X0, 0x26B371C
	0x026B3658 MOV X1, X31
	0x026B365C BL 0x3E0C77C
	0x026B3660 CBZ X0, 0x26B371C
	0x026B3664 ADRP X10, 0x1A6A000
	0x026B3668 LDP S9, S8, [X31 + 0x8]
	0x026B366C LDR X8, [X0]
	0x026B3670 LDP S11, S10, [X31]
	0x026B3674 LDR X10, [X10 + 0x628]
	0x026B3678 MOV X21, X0
	0x026B367C LDRH W9, [X8 + 0x12E]
	0x026B3680 LDR X1, [X10]
	0x026B3684 CBZ X9, 0x26B36A8
	0x026B3688 LDR X10, [X8 + 0xB0]
	0x026B368C ADD X10, X10, 0x8
	0x026B3690 LDUR X11, [X10 - 0x8]
	0x026B3694 CMP X11, X1
	0x026B3698 B.EQ 0x26B36B8
	0x026B369C SUBS X9, X9, 0x1
	0x026B36A0 ADD X10, X10, 0x10
	0x026B36A4 B.NE 0x26B3690
	0x026B36A8 MOVZ W2, 0x3
	0x026B36AC MOV X0, X21
	0x026B36B0 BL 0x1C5C788
	0x026B36B4 B 0x26B36C8
	0x026B36B8 LDR W9, [X10]
	0x026B36BC ADD W9, W9, 0x3
	0x026B36C0 ADD X8, X8, W9, 0x4, SXTW
	0x026B36C4 ADD X0, X8, 0x138
	0x026B36C8 LDP X8, X1, [X0]
	0x026B36CC MOV X0, X21
	0x026B36D0 MOV V0.16B, V11.16B
	0x026B36D4 MOV V1.16B, V10.16B
	0x026B36D8 MOV V2.16B, V9.16B
	0x026B36DC MOV V3.16B, V8.16B
	0x026B36E0 BLR X8
	0x026B36E4 LDR X8, [X20 + 0x20]
	0x026B36E8 MOV X0, X19
	0x026B36EC LDR X8, [X8 + 0xC0]
	0x026B36F0 LDR X1, [X8 + 0xB0]
	0x026B36F4 BL 0x26B3FCC
	0x026B36F8 MOV X0, X19
	0x026B36FC BL 0x26B42FC
	0x026B3700 LDP X20, X19, [X31 + 0x60]
	0x026B3704 LDP X22, X21, [X31 + 0x50]
	0x026B3708 LDP X30, X23, [X31 + 0x40]
	0x026B370C LDP D9, D8, [X31 + 0x30]
	0x026B3710 LDP D11, D10, [X31 + 0x20]
	0x026B3714 ADD X31, X31, 0x70
	0x026B3718 RET
	0x026B371C BL 0x1C16F20
	0x026B3720 STP X30, X19, [X31 - 0x10]!
	0x026B3724 LDR X8, [X2 + 0x20]
	0x026B3728 MOV X19, X0
	0x026B372C LDR X8, [X8 + 0xC0]
	0x026B3730 LDR X1, [X8 + 0xD8]
	0x026B3734 BL 0x26B19E8
	0x026B3738 TBZ X0, 0x0, 0x26B3748
	0x026B373C MOV W0, W31
	0x026B3740 LDP X30, X19, [X31], #0x10
	0x026B3744 RET
	0x026B3748 CBZ X19, 0x26B375C
	0x026B374C MOV X0, X19
	0x026B3750 MOV X1, X31
	0x026B3754 LDP X30, X19, [X31], #0x10
	0x026B3758 B 0x3DEC00C
	0x026B375C BL 0x1C16F20
	0x026B3760 LDR X8, [X2 + 0x20]
	0x026B3764 AND W1, W1, 0x1
	0x026B3768 MOV W2, W31
	0x026B376C LDR X8, [X8 + 0xC0]
	0x026B3770 LDR X3, [X8 + 0xD0]
	0x026B3774 B 0x26B3778
	0x026B3778 STP D11, D10, [X31 - 0x50]!
	0x026B377C STP D9, D8, [X31 + 0x10]
	0x026B3780 STP X30, X23, [X31 + 0x20]
	0x026B3784 STP X22, X21, [X31 + 0x30]
	0x026B3788 STP X20, X19, [X31 + 0x40]
	0x026B378C ADRP X22, 0x1D27000
	0x026B3790 LDRB W8, [X22 + 0x3DD]
	0x026B3794 MOV X21, X3
	0x026B3798 MOV W20, W2
	0x026B379C MOV X19, X0
	0x026B37A0 TBNZ X8, 0x0, 0x26B37D0
	0x026B37A4 ADRP X0, 0x1A6A000
	0x026B37A8 LDR X0, [X0 + 0x628]
	0x026B37AC BL 0x1C16CF4
	0x026B37B0 ADRP X0, 0x1A6A000
	0x026B37B4 LDR X0, [X0 + 0x688]
	0x026B37B8 BL 0x1C16CF4
	0x026B37BC ADRP X0, 0x1A40000
	0x026B37C0 LDR X0, [X0 + 0x5A8]
	0x026B37C4 BL 0x1C16CF4
	0x026B37C8 MOVZ W8, 0x1
	0x026B37CC STRB W8, [X22 + 0x3DD]
	0x026B37D0 LDR X0, [X19 + 0x3C8]
	0x026B37D4 CBZ X0, 0x26B3B5C
	0x026B37D8 MOV X1, X31
	0x026B37DC BL 0x3E0C77C
	0x026B37E0 CBZ X0, 0x26B3B5C
	0x026B37E4 ADRP X10, 0x1A6A000
	0x026B37E8 LDR X8, [X0]
	0x026B37EC LDR X10, [X10 + 0x628]
	0x026B37F0 MOV X22, X0
	0x026B37F4 LDRH W9, [X8 + 0x12E]
	0x026B37F8 LDR X1, [X10]
	0x026B37FC CBZ X9, 0x26B3820
	0x026B3800 LDR X10, [X8 + 0xB0]
	0x026B3804 ADD X10, X10, 0x8
	0x026B3808 LDUR X11, [X10 - 0x8]
	0x026B380C CMP X11, X1
	0x026B3810 B.EQ 0x26B3830
	0x026B3814 SUBS X9, X9, 0x1
	0x026B3818 ADD X10, X10, 0x10
	0x026B381C B.NE 0x26B3808
	0x026B3820 MOVZ W2, 0x4
	0x026B3824 MOV X0, X22
	0x026B3828 BL 0x1C5C788
	0x026B382C B 0x26B3840
	0x026B3830 LDR W9, [X10]
	0x026B3834 ADD W9, W9, 0x4
	0x026B3838 ADD X8, X8, W9, 0x4, SXTW
	0x026B383C ADD X0, X8, 0x138
	0x026B3840 LDP X8, X1, [X0]
	0x026B3844 MOV X0, X22
	0x026B3848 BLR X8
	0x026B384C TBNZ X0, 0x1F, 0x26B3AB0
	0x026B3850 LDR X0, [X19 + 0x3D0]
	0x026B3854 CBZ X0, 0x26B38F0
	0x026B3858 MOV X1, X31
	0x026B385C BL 0x3D7E19C
	0x026B3860 LDR X0, [X19 + 0x3D0]
	0x026B3864 CBZ X0, 0x26B3B5C
	0x026B3868 MOV X1, X31
	0x026B386C MOV V8.16B, V0.16B
	0x026B3870 BL 0x3D7E19C
	0x026B3874 LDR X8, [X19 + 0x3D0]
	0x026B3878 CBZ X8, 0x26B3B5C
	0x026B387C LDR X0, [X8 + 0x418]
	0x026B3880 CBZ X0, 0x26B3B5C
	0x026B3884 MOV X1, X31
	0x026B3888 MOV V9.16B, V1.16B
	0x026B388C BL 0x3DEC528
	0x026B3890 LDR X8, [X21 + 0x20]
	0x026B3894 AND W2, W20, 0x1
	0x026B3898 MOV X0, X19
	0x026B389C MOV V0.16B, V8.16B
	0x026B38A0 LDR X8, [X8 + 0xC0]
	0x026B38A4 MOV V1.16B, V9.16B
	0x026B38A8 MOV W1, W31
	0x026B38AC LDR X3, [X8 + 0xE0]
	0x026B38B0 BL 0x26B3B60
	0x026B38B4 LDR X0, [X19 + 0x3D0]
	0x026B38B8 STR S0, [X19 + 0x3E4]
	0x026B38BC STR S1, [X19 + 0x3E8]
	0x026B38C0 CBZ X0, 0x26B3B5C
	0x026B38C4 MOV X1, X31
	0x026B38C8 BL 0x3D7E1E4
	0x026B38CC LDR X0, [X19 + 0x3D0]
	0x026B38D0 CBZ X0, 0x26B3B5C
	0x026B38D4 LDR V8, [X19 + 0x3E4]
	0x026B38D8 MOV X1, X31
	0x026B38DC BL 0x3D7E19C
	0x026B38E0 FCMP S8, S0
	0x026B38E4 B.LE 0x26B3950
	0x026B38E8 MOVZ W8, 0x1
	0x026B38EC B 0x26B396C
	0x026B38F0 LDR X0, [X19 + 0x3C8]
	0x026B38F4 CBZ X0, 0x26B3B5C
	0x026B38F8 MOV X1, X31
	0x026B38FC BL 0x3DEC1BC
	0x026B3900 CBZ X0, 0x26B3B5C
	0x026B3904 ADRP X23, 0x1A6A000
	0x026B3908 LDR X8, [X0]
	0x026B390C LDR X23, [X23 + 0x688]
	0x026B3910 MOV X22, X0
	0x026B3914 LDRH W9, [X8 + 0x12E]
	0x026B3918 LDR X1, [X23]
	0x026B391C CBZ X9, 0x26B3940
	0x026B3920 LDR X10, [X8 + 0xB0]
	0x026B3924 ADD X10, X10, 0x8
	0x026B3928 LDUR X11, [X10 - 0x8]
	0x026B392C CMP X11, X1
	0x026B3930 B.EQ 0x26B3974
	0x026B3934 SUBS X9, X9, 0x1
	0x026B3938 ADD X10, X10, 0x10
	0x026B393C B.NE 0x26B3928
	0x026B3940 MOV X0, X22
	0x026B3944 MOV W2, W31
	0x026B3948 BL 0x1C5C788
	0x026B394C B 0x26B3980
	0x026B3950 LDR X0, [X19 + 0x3D0]
	0x026B3954 CBZ X0, 0x26B3B5C
	0x026B3958 LDR V8, [X19 + 0x3E8]
	0x026B395C MOV X1, X31
	0x026B3960 BL 0x3D7E19C
	0x026B3964 FCMP S8, S1
	0x026B3968 CSET W8, GT
	0x026B396C STRB W8, [X19 + 0x3EC]
	0x026B3970 B 0x26B3AB0
	0x026B3974 LDRSW X9, [X10]
	0x026B3978 ADD X8, X8, X9, 0x4, LSL
	0x026B397C ADD X0, X8, 0x138
	0x026B3980 LDP X8, X1, [X0]
	0x026B3984 MOV X0, X22
	0x026B3988 BLR X8
	0x026B398C LDR V9, [X19 + 0x3E4]
	0x026B3990 LDR V10, [X19 + 0x3E8]
	0x026B3994 MOV X0, X19
	0x026B3998 MOV X1, X31
	0x026B399C MOV V8.16B, V2.16B
	0x026B39A0 BL 0x3DED364
	0x026B39A4 LDR X8, [X21 + 0x20]
	0x026B39A8 AND W2, W20, 0x1
	0x026B39AC MOV X0, X19
	0x026B39B0 MOV V0.16B, V9.16B
	0x026B39B4 LDR X8, [X8 + 0xC0]
	0x026B39B8 MOV V1.16B, V10.16B
	0x026B39BC MOV W1, W31
	0x026B39C0 LDR X3, [X8 + 0xE0]
	0x026B39C4 BL 0x26B3B60
	0x026B39C8 LDR X0, [X19 + 0x3C8]
	0x026B39CC STR S0, [X19 + 0x3E4]
	0x026B39D0 STR S1, [X19 + 0x3E8]
	0x026B39D4 CBZ X0, 0x26B3B5C
	0x026B39D8 MOV X1, X31
	0x026B39DC MOV V9.16B, V1.16B
	0x026B39E0 BL 0x3DED364
	0x026B39E4 MOV X0, X19
	0x026B39E8 MOV X1, X31
	0x026B39EC MOV V10.16B, V3.16B
	0x026B39F0 BL 0x3DED364
	0x026B39F4 ADRP X8, 0x1A40000
	0x026B39F8 LDR X8, [X8 + 0x5A8]
	0x026B39FC MOV V11.16B, V3.16B

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1D29000
	011 Move W8, [X21+984]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {50}
	018 Move X0, 0x1A42000
	019 Move X0, [X0+3368]
	020 Call 0x1C17CF4
	021 Move X0, 0x1A43000
	022 Move X0, [X0+3696]
	023 Call 0x1C17CF4
	024 Move X0, 0x1A6C000
	025 Move X0, [X0+1592]
	026 Call 0x1C17CF4
	027 Move X0, 0x1A6C000
	028 Move X0, [X0+1600]
	029 Call 0x1C17CF4
	030 Move X0, 0x1A6C000
	031 Move X0, [X0+1608]
	032 Call 0x1C17CF4
	033 Move X0, 0x1A6C000
	034 Move X0, [X0+1584]
	035 Call 0x1C17CF4
	036 Move X0, 0x1A6C000
	037 Move X0, [X0+1576]
	038 Call 0x1C17CF4
	039 Move X0, 0x1A6B000
	040 Move X0, [X0+3784]
	041 Call 0x1C17CF4
	042 Move X0, 0x1A6C000
	043 Move X0, [X0+1616]
	044 Call 0x1C17CF4
	045 Move X0, 0x1A6A000
	046 Move X0, [X0+2200]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+984], W8
	050 Move X22, 0x1D28000
	051 Move X21, 0x1A6A000
	052 Move W8, [X22+1935]
	053 Move X21, [X21+2200]
	054 Compare W8, 0
	055 JumpIfNotEqual {61}
	056 Move X0, 0x1A4A000
	057 Move X0, [X0+3848]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X22+1935], W8
	061 Move X8, 0x1A4A000
	062 Move X8, [X8+3848]
	063 Move X8, [X8]
	064 Move X9, [X8+184]
	065 Move V0, [X9]
	066 Add X9, X19, 996
	067 Move [X9], D0
	068 Move X8, [X8+184]
	069 Move V0, [X8]
	070 Move W8, 2
	071 Move [X19+1016], W8
	072 Move [X19+1008], D0
	073 Move X0, [X21]
	074 Move X21, 0x1A6B000
	075 Move W8, [X0+224]
	076 Move X21, [X21+3784]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X19
	081 Move X1, X31
	082 Call VisualElement..ctor, X0
	083 Move W1, 1
	084 Move X0, X19
	085 Move X2, X31
	086 Call Focusable.set_delegatesFocus, X0, X1
	087 Move X0, [X21]
	088 Call 0x1C17F10
	089 Move X1, X31
	090 Move X21, X0
	091 Call TextElement..ctor, X0
	092 Move [X19+968], X21
	093 Compare X21, 0
	094 JumpIfEqual {792}
	095 Move X0, X21
	096 Move W1, W31
	097 Move X2, X31
	098 Call TextElement.set_parseEscapeSequences, X0, X1
	099 Move X0, [X19+968]
	100 Compare X0, 0
	101 JumpIfEqual {792}
	102 Move X1, X31
	103 Call TextElement.get_selection, X0
	104 Compare X0, 0
	105 JumpIfEqual {792}
	106 Move X22, 0x1A6C000
	107 Move X8, [X0]
	108 Move X22, [X22+1576]
	109 Move X21, X0
	110 NotImplemented "Instruction LDRH not yet implemented."
	111 Move X1, [X22]
	112 Compare X9, 0
	113 JumpIfEqual {120}
	114 Move X10, [X8+176]
	115 Add X10, X10, 8
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Subtract X9, X9, 1
	119 Add X10, X10, 16
	120 Move W2, 1
	121 Move X0, X21
	122 Call 0x1C5D788
	123 Move W9, [X10]
	124 Add W9, W9, 1
	125 Add X8, X8, W9
	126 Add X0, X8, 312
	127 Move X8, [X0]
	128 Move X2, [X0+8]
	129 Move W1, 1
	130 Move X0, X21
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X0, [X19+968]
	133 Compare X0, 0
	134 JumpIfEqual {792}
	135 Move X1, X31
	136 Call TextElement.get_edition, X0
	137 Compare X0, 0
	138 JumpIfEqual {792}
	139 Move X26, 0x1A6B000
	140 Move X8, [X0]
	141 Move X26, [X26+1584]
	142 Move X21, X0
	143 NotImplemented "Instruction LDRH not yet implemented."
	144 Move X1, [X26]
	145 Compare X9, 0
	146 JumpIfEqual {153}
	147 Move X10, [X8+176]
	148 Add X10, X10, 8
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Subtract X9, X9, 1
	152 Add X10, X10, 16
	153 Move W2, 3
	154 Move X0, X21
	155 Call 0x1C5D788
	156 Move W9, [X10]
	157 Add W9, W9, 3
	158 Add X8, X8, W9
	159 Add X0, X8, 312
	160 Move X8, [X0]
	161 Move X2, [X0+8]
	162 Move X0, X21
	163 Move W1, W31
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X0, [X19+968]
	166 Compare X0, 0
	167 JumpIfEqual {792}
	168 Move X1, X31
	169 Call TextElement.get_edition, X0
	170 Compare X0, 0
	171 JumpIfEqual {792}
	172 Move X8, [X0]
	173 Move X1, [X26]
	174 Move X21, X0
	175 NotImplemented "Instruction LDRH not yet implemented."
	176 Compare X9, 0
	177 JumpIfEqual {184}
	178 Move X10, [X8+176]
	179 Add X10, X10, 8
	180 NotImplemented "Instruction LDUR not yet implemented."
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Subtract X9, X9, 1
	183 Add X10, X10, 16
	184 Move W2, 30
	185 Move X0, X21
	186 Call 0x1C5D788
	187 Move W9, [X10]
	188 Add W9, W9, 30
	189 Add X8, X8, W9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X2, [X0+8]
	193 Move X0, X21
	194 Move W1, W31
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Move X0, [X19+968]
	197 Compare X0, 0
	198 JumpIfEqual {792}
	199 Move X1, X31
	200 Call TextElement.get_edition, X0
	201 Compare X0, 0
	202 JumpIfEqual {792}
	203 Move X8, [X0]
	204 Move X1, [X26]
	205 Move X21, X0
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 Compare X9, 0
	208 JumpIfEqual {215}
	209 Move X10, [X8+176]
	210 Add X10, X10, 8
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Subtract X9, X9, 1
	214 Add X10, X10, 16
	215 Move W2, 26
	216 Move X0, X21
	217 Call 0x1C5D788
	218 Move W9, [X10]
	219 Add W9, W9, 26
	220 Add X8, X8, W9
	221 Add X0, X8, 312
	222 Move X8, [X0]
	223 Move X2, [X0+8]
	224 Move X0, X21
	225 Move W1, W31
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Move X0, [X19+968]
	228 Compare X0, 0
	229 JumpIfEqual {792}
	230 Move X1, X31
	231 Call TextElement.get_selection, X0
	232 Compare X0, 0
	233 JumpIfEqual {792}
	234 Move X8, [X0]
	235 Move X1, [X22]
	236 Move X21, X0
	237 NotImplemented "Instruction LDRH not yet implemented."
	238 Compare X9, 0
	239 JumpIfEqual {246}
	240 Move X10, [X8+176]
	241 Add X10, X10, 8
	242 NotImplemented "Instruction LDUR not yet implemented."
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Subtract X9, X9, 1
	245 Add X10, X10, 16
	246 Move W2, 1
	247 Move X0, X21
	248 Call 0x1C5D788
	249 Move W9, [X10]
	250 Add W9, W9, 1
	251 Add X8, X8, W9
	252 Add X0, X8, 312
	253 Move X8, [X0]
	254 Move X2, [X0+8]
	255 Move W1, 1
	256 Move X0, X21
	257 NotImplemented "Instruction BLR not yet implemented."
	258 Move X0, [X19+968]
	259 Compare X0, 0
	260 JumpIfEqual {792}
	261 Move W1, W31
	262 Move X2, X31
	263 Call TextElement.set_enableRichText, X0, X1
	264 Move X0, [X19+968]
	265 Compare X0, 0
	266 JumpIfEqual {792}
	267 Move X1, X31
	268 Call TextElement.get_selection, X0
	269 Compare X0, 0
	270 JumpIfEqual {792}
	271 Move X8, [X0]
	272 Move X1, [X22]
	273 Move X21, X0
	274 NotImplemented "Instruction LDRH not yet implemented."
	275 Compare X9, 0
	276 JumpIfEqual {283}
	277 Move X10, [X8+176]
	278 Add X10, X10, 8
	279 NotImplemented "Instruction LDUR not yet implemented."
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Subtract X9, X9, 1
	282 Add X10, X10, 16
	283 Move W2, 16
	284 Move X0, X21
	285 Call 0x1C5D788
	286 Move W9, [X10]
	287 Add W9, W9, 16
	288 Add X8, X8, W9
	289 Add X0, X8, 312
	290 Move X8, [X0]
	291 Move X2, [X0+8]
	292 Move W1, 1
	293 Move X0, X21
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Move X0, [X19+968]
	296 Compare X0, 0
	297 JumpIfEqual {792}
	298 Move X1, X31
	299 Call TextElement.get_selection, X0
	300 Compare X0, 0
	301 JumpIfEqual {792}
	302 Move X8, [X0]
	303 Move X1, [X22]
	304 Move X21, X0
	305 NotImplemented "Instruction LDRH not yet implemented."
	306 Compare X9, 0
	307 JumpIfEqual {314}
	308 Move X10, [X8+176]
	309 Add X10, X10, 8
	310 NotImplemented "Instruction LDUR not yet implemented."
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Subtract X9, X9, 1
	313 Add X10, X10, 16
	314 Move W2, 18
	315 Move X0, X21
	316 Call 0x1C5D788
	317 Move W9, [X10]
	318 Add W9, W9, 18
	319 Add X8, X8, W9
	320 Add X0, X8, 312
	321 Move X8, [X0]
	322 Move X2, [X0+8]
	323 Move W1, 1
	324 Move X0, X21
	325 NotImplemented "Instruction BLR not yet implemented."
	326 Move X0, [X19+968]
	327 Compare X0, 0
	328 JumpIfEqual {792}
	329 Move X1, X31
	330 Move [X0+36], W31
	331 Call TextElement.get_edition, X0
	332 Compare X0, 0
	333 JumpIfEqual {792}
	334 Move X8, [X0]
	335 Move X25, 0x1A6B000
	336 Move X1, [X26]
	337 Move X21, X0
	338 NotImplemented "Instruction LDRH not yet implemented."
	339 Move X25, [X25+1608]
	340 Compare X9, 0
	341 JumpIfEqual {348}
	342 Move X10, [X8+176]
	343 Add X10, X10, 8
	344 NotImplemented "Instruction LDUR not yet implemented."
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Subtract X9, X9, 1
	347 Add X10, X10, 16
	348 Move W2, 10
	349 Move X0, X21
	350 Call 0x1C5D788
	351 Move W9, [X10]
	352 Add W9, W9, 10
	353 Add X8, X8, W9
	354 Add X0, X8, 312
	355 Move X8, [X0]
	356 Move X1, [X0+8]
	357 Move X0, X21
	358 NotImplemented "Instruction BLR not yet implemented."
	359 Move X8, [X25]
	360 Move X22, X0
	361 Move X0, X8
	362 Call 0x1C17F10
	363 Move X8, [X19]
	364 Move X1, X19
	365 Move X3, X31
	366 Move X23, X0
	367 Move X2, [X8+1968]
	368 Call Func`2<Char, Boolean>..ctor, X0, X1, X2
	369 Move X0, X22
	370 Move X1, X23
	371 Move X2, X31
	372 Call Delegate.Combine, X0, X1
	373 Move X23, [X26]
	374 Compare X0, 0
	375 JumpIfEqual {383}
	376 Move X25, [X25]
	377 Move X24, X0
	378 Move X1, X25
	379 Call 0x1C17E00
	380 Move X22, X0
	381 Compare X0, 0
	382 JumpIfNotEqual {384}
	383 Move X22, X31
	384 Move X8, [X21]
	385 NotImplemented "Instruction LDRH not yet implemented."
	386 Compare X9, 0
	387 JumpIfEqual {394}
	388 Move X10, [X8+176]
	389 Add X10, X10, 8
	390 NotImplemented "Instruction LDUR not yet implemented."
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Subtract X9, X9, 1
	393 Add X10, X10, 16
	394 Move W2, 11
	395 Move X0, X21
	396 Move X1, X23
	397 Call 0x1C5D788
	398 Move W9, [X10]
	399 Add W9, W9, 11
	400 Add X8, X8, W9
	401 Add X0, X8, 312
	402 Move X8, [X0]
	403 Move X2, [X0+8]
	404 Move X0, X21
	405 Move X1, X22
	406 NotImplemented "Instruction BLR not yet implemented."
	407 Move X0, [X19+968]
	408 Compare X0, 0
	409 JumpIfEqual {792}
	410 Move X1, X31
	411 Call TextElement.get_edition, X0
	412 Compare X0, 0
	413 JumpIfEqual {792}
	414 Move X8, [X0]
	415 Move X25, 0x1A41000
	416 Move X1, [X26]
	417 Move X21, X0
	418 NotImplemented "Instruction LDRH not yet implemented."
	419 Move X25, [X25+3368]
	420 Compare X9, 0
	421 JumpIfEqual {428}
	422 Move X10, [X8+176]
	423 Add X10, X10, 8
	424 NotImplemented "Instruction LDUR not yet implemented."
	425 NotImplemented "Instruction CMP not yet implemented."
	426 Subtract X9, X9, 1
	427 Add X10, X10, 16
	428 Move W2, 12
	429 Move X0, X21
	430 Call 0x1C5D788
	431 Move W9, [X10]
	432 Add W9, W9, 12
	433 Add X8, X8, W9
	434 Add X0, X8, 312
	435 Move X8, [X0]
	436 Move X1, [X0+8]
	437 Move X0, X21
	438 NotImplemented "Instruction BLR not yet implemented."
	439 Move X8, [X25]
	440 Move X22, X0
	441 Move X0, X8
	442 Call 0x1C17F10
	443 Move X8, [X20+32]
	444 Move X1, X19
	445 Move X3, X31
	446 Move X23, X0
	447 Move X8, [X8+192]
	448 Move X2, [X8+80]
	449 Call Action`1<Boolean>..ctor, X0, X1, X2
	450 Move X0, X22
	451 Move X1, X23
	452 Move X2, X31
	453 Call Delegate.Combine, X0, X1
	454 Move X23, [X26]
	455 Compare X0, 0
	456 JumpIfEqual {467}
	457 Move X25, [X25]
	458 Move X24, X0
	459 Move X1, X25
	460 Call 0x1C17E00
	461 Move X22, X0
	462 Compare X0, 0
	463 JumpIfNotEqual {468}
	464 Move X0, X24
	465 Move X1, X25
	466 Call 0x1C181E0
	467 Move X22, X31
	468 Move X8, [X21]
	469 NotImplemented "Instruction LDRH not yet implemented."
	470 Compare X9, 0
	471 JumpIfEqual {478}
	472 Move X10, [X8+176]
	473 Add X10, X10, 8
	474 NotImplemented "Instruction LDUR not yet implemented."
	475 NotImplemented "Instruction CMP not yet implemented."
	476 Subtract X9, X9, 1
	477 Add X10, X10, 16
	478 Move W2, 13
	479 Move X0, X21
	480 Move X1, X23
	481 Call 0x1C5D788
	482 Move W9, [X10]
	483 Add W9, W9, 13
	484 Add X8, X8, W9
	485 Add X0, X8, 312
	486 Move X8, [X0]
	487 Move X2, [X0+8]
	488 Move X0, X21
	489 Move X1, X22
	490 NotImplemented "Instruction BLR not yet implemented."
	491 Move X0, [X19+968]
	492 Compare X0, 0
	493 JumpIfEqual {792}
	494 Move X1, X31
	495 Call TextElement.get_edition, X0
	496 Compare X0, 0
	497 JumpIfEqual {792}
	498 Move X8, [X0]
	499 Move X24, 0x1A42000
	500 Move X1, [X26]
	501 Move X21, X0
	502 NotImplemented "Instruction LDRH not yet implemented."
	503 Move X24, [X24+3696]
	504 Compare X9, 0
	505 JumpIfEqual {512}
	506 Move X10, [X8+176]
	507 Add X10, X10, 8
	508 NotImplemented "Instruction LDUR not yet implemented."
	509 NotImplemented "Instruction CMP not yet implemented."
	510 Subtract X9, X9, 1
	511 Add X10, X10, 16
	512 Move W2, 14
	513 Move X0, X21
	514 Call 0x1C5D788
	515 Move W9, [X10]
	516 Add W9, W9, 14
	517 Add X8, X8, W9
	518 Add X0, X8, 312
	519 Move X8, [X0]
	520 Move X1, [X0+8]
	521 Move X0, X21
	522 NotImplemented "Instruction BLR not yet implemented."
	523 Move X8, [X24]
	524 Move X22, X0
	525 Move X0, X8
	526 Call 0x1C17F10
	527 Move X8, [X20+32]
	528 Move X1, X19
	529 Move X3, X31
	530 Move X23, X0
	531 Move X8, [X8+192]
	532 Move X2, [X8+88]
	533 Call Action..ctor, X0, X1, X2
	534 Move X0, X22
	535 Move X1, X23
	536 Move X2, X31
	537 Call Delegate.Combine, X0, X1
	538 Move X1, [X26]
	539 Move X22, X0
	540 Compare X0, 0
	541 JumpIfEqual {545}
	542 Move X8, [X24]
	543 Move X9, [X22]
	544 NotImplemented "Instruction CMP not yet implemented."
	545 Move X8, [X21]
	546 NotImplemented "Instruction LDRH not yet implemented."
	547 Compare X9, 0
	548 JumpIfEqual {555}
	549 Move X10, [X8+176]
	550 Add X10, X10, 8
	551 NotImplemented "Instruction LDUR not yet implemented."
	552 NotImplemented "Instruction CMP not yet implemented."
	553 Subtract X9, X9, 1
	554 Add X10, X10, 16
	555 Move W2, 15
	556 Move X0, X21
	557 Call 0x1C5D788
	558 Move W9, [X10]
	559 Add W9, W9, 15
	560 Add X8, X8, W9
	561 Add X0, X8, 312
	562 Move X8, [X0]
	563 Move X2, [X0+8]
	564 Move X0, X21
	565 Move X1, X22
	566 NotImplemented "Instruction BLR not yet implemented."
	567 Move X0, [X19+968]
	568 Compare X0, 0
	569 JumpIfEqual {792}
	570 Move X1, X31
	571 Call TextElement.get_edition, X0
	572 Compare X0, 0
	573 JumpIfEqual {792}
	574 Move X8, [X0]
	575 Move X1, [X26]
	576 Move X21, X0
	577 NotImplemented "Instruction LDRH not yet implemented."
	578 Compare X9, 0
	579 JumpIfEqual {586}
	580 Move X10, [X8+176]
	581 Add X10, X10, 8
	582 NotImplemented "Instruction LDUR not yet implemented."
	583 NotImplemented "Instruction CMP not yet implemented."
	584 Subtract X9, X9, 1
	585 Add X10, X10, 16
	586 Move W2, 16
	587 Move X0, X21
	588 Call 0x1C5D788
	589 Move W9, [X10]
	590 Add W9, W9, 16
	591 Add X8, X8, W9
	592 Add X0, X8, 312
	593 Move X8, [X0]
	594 Move X1, [X0+8]
	595 Move X0, X21
	596 NotImplemented "Instruction BLR not yet implemented."
	597 Move X8, [X24]
	598 Move X22, X0
	599 Move X0, X8
	600 Call 0x1C17F10
	601 Move X8, [X20+32]
	602 Move X1, X19
	603 Move X3, X31
	604 Move X23, X0
	605 Move X8, [X8+192]
	606 Move X2, [X8+96]
	607 Call Action..ctor, X0, X1, X2
	608 Move X0, X22
	609 Move X1, X23
	610 Move X2, X31
	611 Call Delegate.Combine, X0, X1
	612 Move X1, [X26]
	613 Move X22, X0
	614 Compare X0, 0
	615 JumpIfEqual {619}
	616 Move X8, [X24]
	617 Move X9, [X22]
	618 NotImplemented "Instruction CMP not yet implemented."
	619 Move X8, [X21]
	620 NotImplemented "Instruction LDRH not yet implemented."
	621 Compare X9, 0
	622 JumpIfEqual {629}
	623 Move X10, [X8+176]
	624 Add X10, X10, 8
	625 NotImplemented "Instruction LDUR not yet implemented."
	626 NotImplemented "Instruction CMP not yet implemented."
	627 Subtract X9, X9, 1
	628 Add X10, X10, 16
	629 Move W2, 17
	630 Move X0, X21
	631 Call 0x1C5D788
	632 Move W9, [X10]
	633 Add W9, W9, 17
	634 Add X8, X8, W9
	635 Add X0, X8, 312
	636 Move X8, [X0]
	637 Move X2, [X0+8]
	638 Move X0, X21
	639 Move X1, X22
	640 NotImplemented "Instruction BLR not yet implemented."
	641 Move X0, [X19+968]
	642 Compare X0, 0
	643 JumpIfEqual {792}
	644 Move X1, X31
	645 Call TextElement.get_edition, X0
	646 Compare X0, 0
	647 JumpIfEqual {792}
	648 Move X8, [X0]
	649 Move X1, [X26]
	650 Move X21, X0
	651 NotImplemented "Instruction LDRH not yet implemented."
	652 Compare X9, 0
	653 JumpIfEqual {660}
	654 Move X10, [X8+176]
	655 Add X10, X10, 8
	656 NotImplemented "Instruction LDUR not yet implemented."
	657 NotImplemented "Instruction CMP not yet implemented."
	658 Subtract X9, X9, 1
	659 Add X10, X10, 16
	660 Move W2, 18
	661 Move X0, X21
	662 Call 0x1C5D788
	663 Move W9, [X10]
	664 Add W9, W9, 18
	665 Add X8, X8, W9
	666 Add X0, X8, 312
	667 Move X8, [X0]
	668 Move X1, [X0+8]
	669 Move X0, X21
	670 NotImplemented "Instruction BLR not yet implemented."
	671 Move X8, [X24]
	672 Move X22, X0
	673 Move X0, X8
	674 Call 0x1C17F10
	675 Move X8, [X20+32]
	676 Move X1, X19
	677 Move X3, X31
	678 Move X23, X0
	679 Move X8, [X8+192]
	680 Move X2, [X8+104]
	681 Call Action..ctor, X0, X1, X2
	682 Move X0, X22
	683 Move X1, X23
	684 Move X2, X31
	685 Call Delegate.Combine, X0, X1
	686 Move X1, [X26]
	687 Move X22, X0
	688 Compare X0, 0
	689 JumpIfEqual {693}
	690 Move X8, [X24]
	691 Move X9, [X22]
	692 NotImplemented "Instruction CMP not yet implemented."
	693 Move X8, [X21]
	694 NotImplemented "Instruction LDRH not yet implemented."
	695 Compare X9, 0
	696 JumpIfEqual {703}
	697 Move X10, [X8+176]
	698 Add X10, X10, 8
	699 NotImplemented "Instruction LDUR not yet implemented."
	700 NotImplemented "Instruction CMP not yet implemented."
	701 Subtract X9, X9, 1
	702 Add X10, X10, 16
	703 Move W2, 19
	704 Move X0, X21
	705 Call 0x1C5D788
	706 Move W9, [X10]
	707 Add W9, W9, 19
	708 Add X8, X8, W9
	709 Add X0, X8, 312
	710 Move X8, [X0]
	711 Move X2, [X0+8]
	712 Move X0, X21
	713 Move X1, X22
	714 NotImplemented "Instruction BLR not yet implemented."
	715 Move X8, [X20+32]
	716 Move X8, [X8+192]
	717 Move X0, [X8+112]
	718 Move W8, [X0+309]
	719 Move TEMP, X8
	720 And TEMP, TEMP, 1
	721 Compare TEMP, 1
	722 JumpIfEqual {724}
	723 Call 0x1C5D684
	724 Move W8, [X0+224]
	725 Compare W8, 0
	726 JumpIfNotEqual {728}
	727 Call 0x1C17DFC
	728 Move X8, [X20+32]
	729 Move X23, 0x1A6B000
	730 Move X8, [X8+192]
	731 Move X0, [X8+112]
	732 Move W8, [X0+309]
	733 Move X23, [X23+1616]
	734 Move TEMP, X8
	735 And TEMP, TEMP, 1
	736 Compare TEMP, 1
	737 JumpIfEqual {739}
	738 Call 0x1C5D684
	739 Move X8, [X0+184]
	740 Move X22, 0x1A6B000
	741 Move X21, 0x1A6B000
	742 Move X0, X19
	743 Move X1, [X8+32]
	744 Move X22, [X22+1600]
	745 Move X21, [X21+1592]
	746 Move X2, X31
	747 Call VisualElement.AddToClassList, X0, X1
	748 Move X0, [X23]
	749 Move W8, [X0+224]
	750 Compare W8, 0
	751 JumpIfNotEqual {754}
	752 Call 0x1C17DFC
	753 Move X0, [X23]
	754 Move X8, [X0+184]
	755 Move X0, X19
	756 Move X2, X31
	757 Move X1, [X8+72]
	758 Call VisualElement.set_name, X0, X1
	759 Move X8, [X20+32]
	760 Move X0, X19
	761 Move X8, [X8+192]
	762 Move X1, [X8+128]
	763 Call 0x26B3A18, X0
	764 Move X0, [X22]
	765 Call 0x1C17F10
	766 Move X8, [X20+32]
	767 Move X1, X19
	768 Move X3, X31
	769 Move X20, X0
	770 Move X8, [X8+192]
	771 Move X2, [X8+136]
	772 Call 0x2D0F824, X0, X1, X2
	773 Move X3, [X21]
	774 Move X0, X19
	775 Move X1, X20
	776 Move W2, W31
	777 Call 0x21A2534, X0, X1, X2
	778 Move TEMP, 0
	779 Not TEMP
	780 Move W8, TEMP
	781 Move [X19+36], W8
	782 Move X20, [X31+64]
	783 Move X19, [X31+72]
	784 Move X22, [X31+48]
	785 Move X21, [X31+56]
	786 Move X24, [X31+32]
	787 Move X23, [X31+40]
	788 Move X26, [X31+16]
	789 Move X25, [X31+24]
	790 Move X30, [X31+80]
	791 Return 
	792 Call 0x1C17F20
	793 Move X0, X22
	794 Move X1, X8
	795 Call 0x1C181E0

Method: System.Void MakeSureScrollViewDoesNotLeakEvents(UnityEngine.UIElements.ChangeEvent`1<System.Single> evt)

Disassembly:
	0x026B3A00 LDR X0, [X8]
	0x026B3A04 LDR W8, [X0 + 0xE0]
	0x026B3A08 CBNZ W8, 0x26B3A10
	0x026B3A0C BL 0x1C16DFC
	0x026B3A10 LDR X0, [X19 + 0x3C8]
	0x026B3A14 FABD S0, S10, S10

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {7}
	003 Move X0, X1
	004 Move X1, X31
	005 Call EventBase.StopPropagation, X0
	006 Return 
	007 Move [X31-16], X30
	008 Call 0x1C17F20

Method: System.Void SetSingleLine()

Disassembly:
	0x026B3A18 FCMP S9, S0
	0x026B3A1C FCSEL S9, S9, S0, MI
	0x026B3A20 CBZ X0, 0x26B3B5C
	0x026B3A24 LDR V10, [X19 + 0x3E4]
	0x026B3A28 MOV X1, X31
	0x026B3A2C BL 0x3DEC1BC
	0x026B3A30 CBZ X0, 0x26B3B5C
	0x026B3A34 LDR X8, [X0]
	0x026B3A38 LDR X1, [X23]
	0x026B3A3C MOV X20, X0
	0x026B3A40 LDRH W9, [X8 + 0x12E]
	0x026B3A44 CBZ X9, 0x26B3A68
	0x026B3A48 LDR X10, [X8 + 0xB0]
	0x026B3A4C ADD X10, X10, 0x8
	0x026B3A50 LDUR X11, [X10 - 0x8]
	0x026B3A54 CMP X11, X1
	0x026B3A58 B.EQ 0x26B3A78
	0x026B3A5C SUBS X9, X9, 0x1
	0x026B3A60 ADD X10, X10, 0x10
	0x026B3A64 B.NE 0x26B3A50
	0x026B3A68 MOV X0, X20
	0x026B3A6C MOV W2, W31
	0x026B3A70 BL 0x1C5C788
	0x026B3A74 B 0x26B3A84
	0x026B3A78 LDRSW X9, [X10]
	0x026B3A7C ADD X8, X8, X9, 0x4, LSL
	0x026B3A80 ADD X0, X8, 0x138
	0x026B3A84 LDP X8, X1, [X0]
	0x026B3A88 MOV X0, X20
	0x026B3A8C FNEG S9, S9
	0x026B3A90 FNEG S10, S10
	0x026B3A94 BLR X8
	0x026B3A98 FCMP S8, S2
	0x026B3A9C B.NE 0x26B3AC8
	0x026B3AA0 FCMP S0, S10
	0x026B3AA4 B.NE 0x26B3AC8
	0x026B3AA8 FCMP S1, S9
	0x026B3AAC B.NE 0x26B3AC8
	0x026B3AB0 LDP X20, X19, [X31 + 0x40]
	0x026B3AB4 LDP X22, X21, [X31 + 0x30]
	0x026B3AB8 LDP X30, X23, [X31 + 0x20]
	0x026B3ABC LDP D9, D8, [X31 + 0x10]
	0x026B3AC0 LDP D11, D10, [X31], #0x50
	0x026B3AC4 RET
	0x026B3AC8 LDR X0, [X19 + 0x3C8]
	0x026B3ACC CBZ X0, 0x26B3B5C
	0x026B3AD0 MOV X1, X31
	0x026B3AD4 BL 0x3DEC1BC
	0x026B3AD8 CBZ X0, 0x26B3B5C
	0x026B3ADC LDR X8, [X0]
	0x026B3AE0 LDR X1, [X23]
	0x026B3AE4 MOV X19, X0
	0x026B3AE8 LDRH W9, [X8 + 0x12E]
	0x026B3AEC CBZ X9, 0x26B3B10
	0x026B3AF0 LDR X10, [X8 + 0xB0]
	0x026B3AF4 ADD X10, X10, 0x8
	0x026B3AF8 LDUR X11, [X10 - 0x8]
	0x026B3AFC CMP X11, X1
	0x026B3B00 B.EQ 0x26B3B20
	0x026B3B04 SUBS X9, X9, 0x1
	0x026B3B08 ADD X10, X10, 0x10
	0x026B3B0C B.NE 0x26B3AF8
	0x026B3B10 MOVZ W2, 0x1
	0x026B3B14 MOV X0, X19
	0x026B3B18 BL 0x1C5C788
	0x026B3B1C B 0x26B3B30
	0x026B3B20 LDR W9, [X10]
	0x026B3B24 ADD W9, W9, 0x1
	0x026B3B28 ADD X8, X8, W9, 0x4, SXTW
	0x026B3B2C ADD X0, X8, 0x138
	0x026B3B30 LDP X2, X1, [X0]
	0x026B3B34 MOV X0, X19
	0x026B3B38 MOV V1.16B, V9.16B
	0x026B3B3C MOV V2.16B, V8.16B
	0x026B3B40 LDP X20, X19, [X31 + 0x40]
	0x026B3B44 LDP X22, X21, [X31 + 0x30]
	0x026B3B48 LDP X30, X23, [X31 + 0x20]
	0x026B3B4C LDP D9, D8, [X31 + 0x10]
	0x026B3B50 MOV V0.16B, V10.16B
	0x026B3B54 LDP D11, D10, [X31], #0x50
	0x026B3B58 BR X2
	0x026B3B5C BL 0x1C16F20
	0x026B3B60 STP D15, D14, [X31 - 0x70]!
	0x026B3B64 STP D13, D12, [X31 + 0x10]
	0x026B3B68 STP D11, D10, [X31 + 0x20]
	0x026B3B6C STP D9, D8, [X31 + 0x30]
	0x026B3B70 STP X30, X23, [X31 + 0x40]
	0x026B3B74 STP X22, X21, [X31 + 0x50]
	0x026B3B78 STP X20, X19, [X31 + 0x60]
	0x026B3B7C ADRP X21, 0x1D27000
	0x026B3B80 LDRB W8, [X21 + 0x3DE]
	0x026B3B84 MOV W20, W2
	0x026B3B88 MOV V13.16B, V2.16B
	0x026B3B8C MOV V8.16B, V1.16B
	0x026B3B90 MOV V9.16B, V0.16B
	0x026B3B94 MOV X19, X0
	0x026B3B98 TBNZ X8, 0x0, 0x26B3BC8
	0x026B3B9C ADRP X0, 0x1A6A000
	0x026B3BA0 LDR X0, [X0 + 0x630]
	0x026B3BA4 BL 0x1C16CF4
	0x026B3BA8 ADRP X0, 0x1A6A000
	0x026B3BAC LDR X0, [X0 + 0x628]
	0x026B3BB0 BL 0x1C16CF4
	0x026B3BB4 ADRP X0, 0x1A40000
	0x026B3BB8 LDR X0, [X0 + 0x5A8]
	0x026B3BBC BL 0x1C16CF4
	0x026B3BC0 MOVZ W8, 0x1
	0x026B3BC4 STRB W8, [X21 + 0x3DE]
	0x026B3BC8 LDR X0, [X19 + 0x3C8]
	0x026B3BCC CBZ X0, 0x26B3FC8
	0x026B3BD0 MOV X1, X31
	0x026B3BD4 BL 0x3E0C77C
	0x026B3BD8 CBZ X0, 0x26B3FC8
	0x026B3BDC ADRP X23, 0x1A6A000
	0x026B3BE0 LDR X8, [X0]
	0x026B3BE4 LDR X23, [X23 + 0x628]
	0x026B3BE8 MOV X21, X0
	0x026B3BEC LDRH W9, [X8 + 0x12E]
	0x026B3BF0 LDR X1, [X23]
	0x026B3BF4 CBZ X9, 0x26B3C18
	0x026B3BF8 LDR X10, [X8 + 0xB0]
	0x026B3BFC ADD X10, X10, 0x8
	0x026B3C00 LDUR X11, [X10 - 0x8]
	0x026B3C04 CMP X11, X1
	0x026B3C08 B.EQ 0x26B3C28
	0x026B3C0C SUBS X9, X9, 0x1
	0x026B3C10 ADD X10, X10, 0x10
	0x026B3C14 B.NE 0x26B3C00
	0x026B3C18 MOVZ W2, 0x13
	0x026B3C1C MOV X0, X21
	0x026B3C20 BL 0x1C5C788
	0x026B3C24 B 0x26B3C38
	0x026B3C28 LDR W9, [X10]
	0x026B3C2C ADD W9, W9, 0x13
	0x026B3C30 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1D28000
	009 Move W8, [X21+985]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1A6B000
	017 Move X0, [X0+1624]
	018 Call 0x1C17CF4
	019 Move X0, 0x1A6B000
	020 Move X0, [X0+1632]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+985], W8
	024 Compare X19, 0
	025 JumpIfEqual {159}
	026 Move X8, [X19+888]
	027 Add X0, X31, 8
	028 Move X1, X31
	029 Move [X31+8], X8
	030 Call Hierarchy.Clear, X0
	031 Move X8, [X20+32]
	032 Move X0, X19
	033 Move X8, [X8+192]
	034 Move X1, [X8+144]
	035 Call 0x26B55AC, X0
	036 Move X1, [X19+968]
	037 Move X0, X19
	038 Move X2, X31
	039 Call VisualElement.Add, X0, X1
	040 Move X8, [X20+32]
	041 Move X8, [X8+192]
	042 Move X0, [X8+112]
	043 Move W8, [X0+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X8, [X20+32]
	054 Move X8, [X8+192]
	055 Move X0, [X8+112]
	056 Move W8, [X0+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Move X8, [X0+184]
	063 Move X0, X19
	064 Move X2, X31
	065 Move X1, [X8+48]
	066 Call VisualElement.AddToClassList, X0, X1
	067 Move X8, [X20+32]
	068 Move X21, [X19+968]
	069 Move X8, [X8+192]
	070 Move X0, [X8+152]
	071 Move W8, [X0+309]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {77}
	076 Call 0x1C5D684
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X8, [X20+32]
	082 Move X8, [X8+192]
	083 Move X0, [X8+152]
	084 Move W8, [X0+309]
	085 Move TEMP, X8
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {90}
	089 Call 0x1C5D684
	090 Compare X21, 0
	091 JumpIfEqual {159}
	092 Move X8, [X0+184]
	093 Move X22, 0x1A6B000
	094 Move X0, X21
	095 Move X2, X31
	096 Move X1, [X8+8]
	097 Move X22, [X22+1632]
	098 Call VisualElement.AddToClassList, X0, X1
	099 Move X0, [X22]
	100 Move X21, [X19+968]
	101 Call 0x1C17F10
	102 Move X8, [X20+32]
	103 Move X1, X19
	104 Move X3, X31
	105 Move X22, X0
	106 Move X8, [X8+192]
	107 Move X2, [X8+160]
	108 Call 0x2D0F824, X0, X1, X2
	109 Compare X21, 0
	110 JumpIfEqual {159}
	111 Move X8, 0x1A6B000
	112 Move X8, [X8+1624]
	113 Move X0, X21
	114 Move X1, X22
	115 Move W2, W31
	116 Move X3, [X8]
	117 Call 0x21A2534, X0, X1, X2
	118 Add X8, X19, 996
	119 Move X21, 0x1D27000
	120 Move W9, [X21+1935]
	121 Move V8, [X8]
	122 Compare W9, 0
	123 JumpIfNotEqual {129}
	124 Move X0, 0x1A49000
	125 Move X0, [X0+3848]
	126 Call 0x1C17CF4
	127 Move W8, 1
	128 Move [X21+1935], W8
	129 Move X8, 0x1A49000
	130 Move X8, [X8+3848]
	131 Move X8, [X8]
	132 Move X8, [X8+184]
	133 Move V0, [X8]
	134 Move X8, -29134848
	135 Move V1, [X8+3872]
	136 Subtract V0, V8, V0
	137 NotImplemented "Instruction INVALID not yet implemented."
	138 NotImplemented "Instruction FADDP not yet implemented."
	139 NotImplemented "Instruction FCMP not yet implemented."
	140 Move [X19+1000], W31
	141 Move X8, [X20+32]
	142 Move X0, X19
	143 Move W1, W31
	144 Move W2, W31
	145 Move X8, [X8+192]
	146 Move X8, [X8+80]
	147 Move X8, [X8+32]
	148 Move X8, [X8+192]
	149 Move X3, [X8+208]
	150 Call 0x26B4778, X0, X1, X2
	151 Move X20, [X31+48]
	152 Move X19, [X31+56]
	153 Move X22, [X31+32]
	154 Move X21, [X31+40]
	155 Move X30, [X31+24]
	156 Move V8, [X31+16]
	157 Add X31, X31, 64
	158 Return 
	159 Call 0x1C17F20

Method: System.Void SetMultiline()

Disassembly:
	0x026B3C34 ADD X0, X8, 0x138
	0x026B3C38 LDP X8, X1, [X0]
	0x026B3C3C MOV X0, X21
	0x026B3C40 BLR X8
	0x026B3C44 LDR X0, [X19 + 0x3C8]
	0x026B3C48 CBZ X0, 0x26B3FC8
	0x026B3C4C MOV X1, X31
	0x026B3C50 MOV V10.16B, V0.16B
	0x026B3C54 MOV V11.16B, V1.16B
	0x026B3C58 BL 0x3E0C77C
	0x026B3C5C CBZ X0, 0x26B3FC8
	0x026B3C60 LDR X8, [X0]
	0x026B3C64 ADRP X22, 0x1A40000
	0x026B3C68 LDR X1, [X23]
	0x026B3C6C MOV X21, X0
	0x026B3C70 LDRH W9, [X8 + 0x12E]
	0x026B3C74 LDR X22, [X22 + 0x5A8]
	0x026B3C78 CBZ X9, 0x26B3C9C
	0x026B3C7C LDR X10, [X8 + 0xB0]
	0x026B3C80 ADD X10, X10, 0x8
	0x026B3C84 LDUR X11, [X10 - 0x8]
	0x026B3C88 CMP X11, X1
	0x026B3C8C B.EQ 0x26B3CAC
	0x026B3C90 SUBS X9, X9, 0x1
	0x026B3C94 ADD X10, X10, 0x10
	0x026B3C98 B.NE 0x26B3C84
	0x026B3C9C MOVZ W2, 0x15
	0x026B3CA0 MOV X0, X21
	0x026B3CA4 BL 0x1C5C788
	0x026B3CA8 B 0x26B3CBC
	0x026B3CAC LDR W9, [X10]
	0x026B3CB0 ADD W9, W9, 0x15
	0x026B3CB4 ADD X8, X8, W9, 0x4, SXTW
	0x026B3CB8 ADD X0, X8, 0x138
	0x026B3CBC LDP X8, X1, [X0]
	0x026B3CC0 MOV X0, X21
	0x026B3CC4 BLR X8
	0x026B3CC8 LDR X0, [X22]
	0x026B3CCC LDR V12, [X19 + 0x3F0]
	0x026B3CD0 MOV V14.16B, V0.16B
	0x026B3CD4 LDR W8, [X0 + 0xE0]
	0x026B3CD8 CBNZ W8, 0x26B3CE0
	0x026B3CDC BL 0x1C16DFC
	0x026B3CE0 ADRP X8, 0xFFFFFFFFFE437000
	0x026B3CE4 LDR V15, [X8 + 0x200]
	0x026B3CE8 FABD S0, S12, S12
	0x026B3CEC FCMP S0, S15
	0x026B3CF0 B.LE 0x26B3CFC
	0x026B3CF4 MOVZ W8, 0x1
	0x026B3CF8 B 0x26B3D00
	0x026B3CFC LDRB W8, [X19 + 0x3EC]
	0x026B3D00 AND W9, W20, 0x1
	0x026B3D04 ORR W8, W8, W9, 0x0
	0x026B3D08 MOV V12.16B, V9.16B
	0x026B3D0C CBZ W8, 0x26B3D64
	0x026B3D10 FCMP S9, 0x0
	0x026B3D14 CSET W8, GT
	0x026B3D18 AND W8, W8, W20, 0x0
	0x026B3D1C TBNZ X8, 0x0, 0x26B3D50
	0x026B3D20 FADD S0, S9, S13
	0x026B3D24 FSUB S0, S0, S14
	0x026B3D28 FCMP S10, S0
	0x026B3D2C B.GT 0x26B3D50
	0x026B3D30 FMOV S0, 5
	0x026B3D34 FADD S0, S9, S0
	0x026B3D38 FCMP S10, S0
	0x026B3D3C MOV V12.16B, V9.16B
	0x026B3D40 B.PL 0x26B3D64
	0x026B3D44 FMOV S0, -5
	0x026B3D48 FADD S0, S10, S0
	0x026B3D4C B 0x26B3D5C
	0x026B3D50 FADD S0, S10, S14
	0x026B3D54 FSUB S0, S0, S13
	0x026B3D58 FRINTP S0, S0
	0x026B3D5C FMOV S1, W31
	0x026B3D60 FMAXNM S12, S0, S1
	0x026B3D64 LDR X0, [X19 + 0x3C8]
	0x026B3D68 CBZ X0, 0x26B3FC8
	0x026B3D6C MOV X1, X31
	0x026B3D70 BL 0x3E0AF0C
	0x026B3D74 CBZ X0, 0x26B3FC8
	0x026B3D78 ADRP X10, 0x1A6A000
	0x026B3D7C LDR X8, [X0]
	0x026B3D80 LDR X10, [X10 + 0x630]
	0x026B3D84 MOV X20, X0
	0x026B3D88 LDRH W9, [X8 + 0x12E]
	0x026B3D8C LDR X1, [X10]
	0x026B3D90 CBZ X9, 0x26B3DB4
	0x026B3D94 LDR X10, [X8 + 0xB0]
	0x026B3D98 ADD X10, X10, 0x8
	0x026B3D9C LDUR X11, [X10 - 0x8]
	0x026B3DA0 CMP X11, X1
	0x026B3DA4 B.EQ 0x26B3DC4
	0x026B3DA8 SUBS X9, X9, 0x1
	0x026B3DAC ADD X10, X10, 0x10
	0x026B3DB0 B.NE 0x26B3D9C
	0x026B3DB4 MOV X0, X20
	0x026B3DB8 MOV W2, W31
	0x026B3DBC BL 0x1C5C788
	0x026B3DC0 B 0x26B3DD0
	0x026B3DC4 LDRSW X9, [X10]
	0x026B3DC8 ADD X8, X8, X9, 0x4, LSL
	0x026B3DCC ADD X0, X8, 0x138
	0x026B3DD0 LDP X8, X1, [X0]
	0x026B3DD4 MOV X0, X20
	0x026B3DD8 BLR X8
	0x026B3DDC MOV V13.16B, V8.16B
	0x026B3DE0 TBZ X0, 0x0, 0x26B3F3C
	0x026B3DE4 LDR X0, [X22]
	0x026B3DE8 LDR V13, [X19 + 0x3F4]
	0x026B3DEC LDR W8, [X0 + 0xE0]
	0x026B3DF0 CBNZ W8, 0x26B3DF8
	0x026B3DF4 BL 0x1C16DFC
	0x026B3DF8 FABD S0, S13, S13
	0x026B3DFC FCMP S0, S15
	0x026B3E00 B.GT 0x26B3E10
	0x026B3E04 LDRB W8, [X19 + 0x3EC]
	0x026B3E08 MOV V13.16B, V8.16B
	0x026B3E0C CBZ W8, 0x26B3F3C
	0x026B3E10 MOV X0, X19
	0x026B3E14 MOV X1, X31
	0x026B3E18 BL 0x3DED364
	0x026B3E1C FADD S0, S3, S8
	0x026B3E20 FCMP S11, S0
	0x026B3E24 B.LE 0x26B3E3C
	0x026B3E28 MOV X0, X19
	0x026B3E2C MOV X1, X31
	0x026B3E30 BL 0x3DED364
	0x026B3E34 FSUB S13, S11, S3
	0x026B3E38 B 0x26B3F3C
	0x026B3E3C LDR X0, [X19 + 0x3C8]
	0x026B3E40 CBZ X0, 0x26B3FC8
	0x026B3E44 MOV X1, X31
	0x026B3E48 BL 0x3E0C77C
	0x026B3E4C CBZ X0, 0x26B3FC8
	0x026B3E50 LDR X8, [X0]
	0x026B3E54 LDR X1, [X23]
	0x026B3E58 MOV X20, X0
	0x026B3E5C LDRH W9, [X8 + 0x12E]
	0x026B3E60 CBZ X9, 0x26B3E84
	0x026B3E64 LDR X10, [X8 + 0xB0]
	0x026B3E68 ADD X10, X10, 0x8
	0x026B3E6C LDUR X11, [X10 - 0x8]
	0x026B3E70 CMP X11, X1
	0x026B3E74 B.EQ 0x26B3E94
	0x026B3E78 SUBS X9, X9, 0x1
	0x026B3E7C ADD X10, X10, 0x10
	0x026B3E80 B.NE 0x26B3E6C
	0x026B3E84 MOVZ W2, 0x14
	0x026B3E88 MOV X0, X20
	0x026B3E8C BL 0x1C5C788
	0x026B3E90 B 0x26B3EA4
	0x026B3E94 LDR W9, [X10]
	0x026B3E98 ADD W9, W9, 0x14
	0x026B3E9C ADD X8, X8, W9, 0x4, SXTW
	0x026B3EA0 ADD X0, X8, 0x138
	0x026B3EA4 LDP X8, X1, [X0]
	0x026B3EA8 MOV X0, X20
	0x026B3EAC BLR X8
	0x026B3EB0 FADD S0, S0, S8
	0x026B3EB4 FADD S0, S0, S15
	0x026B3EB8 FCMP S11, S0
	0x026B3EBC MOV V13.16B, V8.16B
	0x026B3EC0 B.PL 0x26B3F3C
	0x026B3EC4 LDR X0, [X19 + 0x3C8]
	0x026B3EC8 CBZ X0, 0x26B3FC8
	0x026B3ECC MOV X1, X31
	0x026B3ED0 BL 0x3E0C77C
	0x026B3ED4 CBZ X0, 0x26B3FC8
	0x026B3ED8 LDR X8, [X0]
	0x026B3EDC LDR X1, [X23]
	0x026B3EE0 MOV X20, X0
	0x026B3EE4 LDRH W9, [X8 + 0x12E]
	0x026B3EE8 CBZ X9, 0x26B3F0C
	0x026B3EEC LDR X10, [X8 + 0xB0]
	0x026B3EF0 ADD X10, X10, 0x8
	0x026B3EF4 LDUR X11, [X10 - 0x8]
	0x026B3EF8 CMP X11, X1
	0x026B3EFC B.EQ 0x26B3F1C
	0x026B3F00 SUBS X9, X9, 0x1
	0x026B3F04 ADD X10, X10, 0x10
	0x026B3F08 B.NE 0x26B3EF4
	0x026B3F0C MOVZ W2, 0x14
	0x026B3F10 MOV X0, X20
	0x026B3F14 BL 0x1C5C788
	0x026B3F18 B 0x26B3F2C
	0x026B3F1C LDR W9, [X10]
	0x026B3F20 ADD W9, W9, 0x14
	0x026B3F24 ADD X8, X8, W9, 0x4, SXTW
	0x026B3F28 ADD X0, X8, 0x138
	0x026B3F2C LDP X8, X1, [X0]
	0x026B3F30 MOV X0, X20
	0x026B3F34 BLR X8
	0x026B3F38 FSUB S13, S11, S0
	0x026B3F3C STR S10, [X19 + 0x3F0]
	0x026B3F40 STR S11, [X19 + 0x3F4]
	0x026B3F44 LDR X0, [X22]
	0x026B3F48 LDR W8, [X0 + 0xE0]
	0x026B3F4C CBNZ W8, 0x26B3F54
	0x026B3F50 BL 0x1C16DFC
	0x026B3F54 FABD S0, S9, S9
	0x026B3F58 FCMP S0, S15
	0x026B3F5C B.GT 0x26B3FA0
	0x026B3F60 LDR X0, [X22]
	0x026B3F64 LDR W8, [X0 + 0xE0]
	0x026B3F68 CBNZ W8, 0x26B3F70
	0x026B3F6C BL 0x1C16DFC
	0x026B3F70 FABD S0, S8, S8
	0x026B3F74 FCMP S0, S15
	0x026B3F78 B.GT 0x26B3FA0
	0x026B3F7C LDR X0, [X19 + 0x3D0]
	0x026B3F80 CBZ X0, 0x26B3F98
	0x026B3F84 MOV X1, X31
	0x026B3F88 BL 0x3D7E19C
	0x026B3F8C MOV V12.16B, V0.16B
	0x026B3F90 MOV V13.16B, V1.16B
	0x026B3F94 B 0x26B3FA0
	0x026B3F98 LDR V12, [X19 + 0x3E4]
	0x026B3F9C LDR V13, [X19 + 0x3E8]
	0x026B3FA0 MOV V0.16B, V12.16B
	0x026B3FA4 MOV V1.16B, V13.16B
	0x026B3FA8 LDP X20, X19, [X31 + 0x60]
	0x026B3FAC LDP X22, X21, [X31 + 0x50]
	0x026B3FB0 LDP X30, X23, [X31 + 0x40]
	0x026B3FB4 LDP D9, D8, [X31 + 0x30]
	0x026B3FB8 LDP D11, D10, [X31 + 0x20]
	0x026B3FBC LDP D13, D12, [X31 + 0x10]
	0x026B3FC0 LDP D15, D14, [X31], #0x70
	0x026B3FC4 RET
	0x026B3FC8 BL 0x1C16F20
	0x026B3FCC STR X30, [X31 - 0x30]!
	0x026B3FD0 STP X22, X21, [X31 + 0x10]
	0x026B3FD4 STP X20, X19, [X31 + 0x20]
	0x026B3FD8 ADRP X21, 0x1D27000
	0x026B3FDC LDRB W8, [X21 + 0x3DF]
	0x026B3FE0 MOV X20, X1
	0x026B3FE4 MOV X19, X0
	0x026B3FE8 TBNZ X8, 0x0, 0x26B4000
	0x026B3FEC ADRP X0, 0x1A6A000
	0x026B3FF0 LDR X0, [X0 + 0x630]
	0x026B3FF4 BL 0x1C16CF4
	0x026B3FF8 MOVZ W8, 0x1
	0x026B3FFC STRB W8, [X21 + 0x3DF]
	0x026B4000 LDR X8, [X19 + 0x3D0]
	0x026B4004 CBZ X8, 0x26B4128
	0x026B4008 LDR X8, [X20 + 0x20]
	0x026B400C LDR X21, [X19 + 0x3C8]
	0x026B4010 LDR X8, [X8 + 0xC0]
	0x026B4014 LDR X0, [X8 + 0x98]
	0x026B4018 LDRB W8, [X0 + 0x135]
	0x026B401C TBNZ X8, 0x0, 0x26B4024
	0x026B4020 BL 0x1C5C684
	0x026B4024 LDR W8, [X0 + 0xE0]
	0x026B4028 CBNZ W8, 0x26B4030
	0x026B402C BL 0x1C16DFC
	0x026B4030 LDR X8, [X20 + 0x20]
	0x026B4034 LDR X8, [X8 + 0xC0]
	0x026B4038 LDR X0, [X8 + 0x98]
	0x026B403C LDRB W8, [X0 + 0x135]
	0x026B4040 TBNZ X8, 0x0, 0x26B4048
	0x026B4044 BL 0x1C5C684
	0x026B4048 CBZ X21, 0x26B42F8
	0x026B404C LDR X8, [X0 + 0xB8]
	0x026B4050 MOV X0, X21
	0x026B4054 MOV X2, X31
	0x026B4058 LDR X1, [X8 + 0x20]
	0x026B405C BL 0x3DF1B54
	0x026B4060 LDR X8, [X20 + 0x20]
	0x026B4064 LDR X21, [X19 + 0x3C8]
	0x026B4068 LDR X8, [X8 + 0xC0]
	0x026B406C LDR X0, [X8 + 0x98]
	0x026B4070 LDRB W8, [X0 + 0x135]
	0x026B4074 TBNZ X8, 0x0, 0x26B407C
	0x026B4078 BL 0x1C5C684
	0x026B407C CBZ X21, 0x26B42F8
	0x026B4080 LDR X8, [X0 + 0xB8]
	0x026B4084 MOV X0, X21
	0x026B4088 MOV X2, X31
	0x026B408C LDR X1, [X8 + 0x28]
	0x026B4090 BL 0x3DF1B54
	0x026B4094 LDR X8, [X20 + 0x20]
	0x026B4098 LDR X21, [X19 + 0x3C8]
	0x026B409C LDR X8, [X8 + 0xC0]
	0x026B40A0 LDR X0, [X8 + 0x98]
	0x026B40A4 LDRB W8, [X0 + 0x135]
	0x026B40A8 TBNZ X8, 0x0, 0x26B40B0
	0x026B40AC BL 0x1C5C684
	0x026B40B0 CBZ X21, 0x26B42F8
	0x026B40B4 LDR X8, [X0 + 0xB8]
	0x026B40B8 MOV X0, X21
	0x026B40BC MOV X2, X31
	0x026B40C0 LDR X1, [X8 + 0x18]
	0x026B40C4 BL 0x3DF1B54
	0x026B40C8 LDR X0, [X19 + 0x3C8]
	0x026B40CC CBZ X0, 0x26B42F8
	0x026B40D0 MOV X1, X31
	0x026B40D4 BL 0x3E0AF0C
	0x026B40D8 CBZ X0, 0x26B42F8
	0x026B40DC ADRP X22, 0x1A69000
	0x026B40E0 LDR X8, [X0]
	0x026B40E4 LDR X22, [X22 + 0x630]
	0x026B40E8 MOV X21, X0
	0x026B40EC LDRH W9, [X8 + 0x12E]
	0x026B40F0 LDR X1, [X22]
	0x026B40F4 CBZ X9, 0x26B4118
	0x026B40F8 LDR X10, [X8 + 0xB0]
	0x026B40FC ADD X10, X10, 0x8
	0x026B4100 LDUR X11, [X10 - 0x8]
	0x026B4104 CMP X11, X1
	0x026B4108 B.EQ 0x26B4138
	0x026B410C SUBS X9, X9, 0x1
	0x026B4110 ADD X10, X10, 0x10
	0x026B4114 B.NE 0x26B4100
	0x026B4118 MOV X0, X21
	0x026B411C MOV W2, W31
	0x026B4120 BL 0x1C5C788
	0x026B4124 B 0x26B4144
	0x026B4128 LDP X20, X19, [X31 + 0x20]
	0x026B412C LDP X22, X21, [X31 + 0x10]
	0x026B4130 LDR X30, [X31], #0x30
	0x026B4134 RET
	0x026B4138 LDRSW X9, [X10]
	0x026B413C ADD X8, X8, X9, 0x4, LSL
	0x026B4140 ADD X0, X8, 0x138
	0x026B4144 LDP X8, X1, [X0]
	0x026B4148 MOV X0, X21
	0x026B414C BLR X8
	0x026B4150 TBZ X0, 0x0, 0x26B4170
	0x026B4154 CBZ X19, 0x26B42F8
	0x026B4158 MOV X0, X19
	0x026B415C MOV X1, X31
	0x026B4160 BL 0x3DE0F44
	0x026B4164 MOV X1, X31
	0x026B4168 BL 0x3DCA400
	0x026B416C CBZ W0, 0x26B4280
	0x026B4170 LDR X0, [X19 + 0x3C8]
	0x026B4174 CBZ X0, 0x26B42F8
	0x026B4178 MOV X1, X31
	0x026B417C BL 0x3E0AF0C
	0x026B4180 CBZ X0, 0x26B42F8
	0x026B4184 LDR X8, [X0]
	0x026B4188 LDR X1, [X22]
	0x026B418C MOV X21, X0
	0x026B4190 LDRH W9, [X8 + 0x12E]
	0x026B4194 CBZ X9, 0x26B41B8
	0x026B4198 LDR X10, [X8 + 0xB0]
	0x026B419C ADD X10, X10, 0x8
	0x026B41A0 LDUR X11, [X10 - 0x8]
	0x026B41A4 CMP X11, X1
	0x026B41A8 B.EQ 0x26B41C8
	0x026B41AC SUBS X9, X9, 0x1
	0x026B41B0 ADD X10, X10, 0x10
	0x026B41B4 B.NE 0x26B41A0
	0x026B41B8 MOV X0, X21
	0x026B41BC MOV W2, W31
	0x026B41C0 BL 0x1C5C788
	0x026B41C4 B 0x26B41D4
	0x026B41C8 LDRSW X9, [X10]
	0x026B41CC ADD X8, X8, X9, 0x4, LSL
	0x026B41D0 ADD X0, X8, 0x138
	0x026B41D4 LDP X8, X1, [X0]
	0x026B41D8 MOV X0, X21
	0x026B41DC BLR X8
	0x026B41E0 LDR X8, [X20 + 0x20]
	0x026B41E4 LDR X21, [X19 + 0x3C8]
	0x026B41E8 MOV W22, W0
	0x026B41EC LDR X8, [X8 + 0xC0]
	0x026B41F0 LDR X8, [X8 + 0x98]
	0x026B41F4 LDRB W9, [X8 + 0x135]
	0x026B41F8 TBNZ X9, 0x0, 0x26B4208
	0x026B41FC MOV X0, X8
	0x026B4200 BL 0x1C5C684
	0x026B4204 MOV X8, X0
	0x026B4208 LDR W9, [X8 + 0xE0]
	0x026B420C CBNZ W9, 0x26B4218
	0x026B4210 MOV X0, X8
	0x026B4214 BL 0x1C16DFC
	0x026B4218 LDR X8, [X20 + 0x20]
	0x026B421C LDR X8, [X8 + 0xC0]
	0x026B4220 LDR X0, [X8 + 0x98]
	0x026B4224 LDRB W8, [X0 + 0x135]
	0x026B4228 TBNZ X8, 0x0, 0x26B4230
	0x026B422C BL 0x1C5C684
	0x026B4230 LDR X8, [X0 + 0xB8]
	0x026B4234 TBZ X22, 0x0, 0x26B425C
	0x026B4238 CBZ X21, 0x26B42F8
	0x026B423C LDR X1, [X8 + 0x28]
	0x026B4240 MOV X0, X21
	0x026B4244 MOV X2, X31
	0x026B4248 BL 0x3DF1C70
	0x026B424C LDR X0, [X19 + 0x3D0]
	0x026B4250 CBZ X0, 0x26B42F8
	0x026B4254 MOVZ W1, 0x2
	0x026B4258 B 0x26B42E4
	0x026B425C CBZ X21, 0x26B42F8
	0x026B4260 LDR X1, [X8 + 0x18]
	0x026B4264 MOV X0, X21
	0x026B4268 MOV X2, X31
	0x026B426C BL 0x3DF1C70
	0x026B4270 LDR X0, [X19 + 0x3D0]
	0x026B4274 CBZ X0, 0x26B42F8
	0x026B4278 MOVZ W1, 0x1
	0x026B427C B 0x26B42E4
	0x026B4280 LDR X8, [X20 + 0x20]
	0x026B4284 LDR X21, [X19 + 0x3C8]
	0x026B4288 LDR X8, [X8 + 0xC0]
	0x026B428C LDR X0, [X8 + 0x98]
	0x026B4290 LDRB W8, [X0 + 0x135]
	0x026B4294 TBNZ X8, 0x0, 0x26B429C
	0x026B4298 BL 0x1C5C684
	0x026B429C LDR W8, [X0 + 0xE0]
	0x026B42A0 CBNZ W8, 0x26B42A8
	0x026B42A4 BL 0x1C16DFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1D28000
	009 Move W8, [X21+986]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x1A6B000
	017 Move X0, [X0+1624]
	018 Call 0x1C17CF4
	019 Move X0, 0x1A6B000
	020 Move X0, [X0+1632]
	021 Call 0x1C17CF4
	022 Move X0, 0x1A6B000
	023 Move X0, [X0+1640]
	024 Call 0x1C17CF4
	025 Move X0, 0x1A6B000
	026 Move X0, [X0+1648]
	027 Call 0x1C17CF4
	028 Move X0, 0x1A6B000
	029 Move X0, [X0+1584]
	030 Call 0x1C17CF4
	031 Move X0, 0x1A42000
	032 Move X0, [X0+440]
	033 Call 0x1C17CF4
	034 Move X0, 0x1A6B000
	035 Move X0, [X0+1656]
	036 Call 0x1C17CF4
	037 Move X0, 0x1A69000
	038 Move X0, [X0+2200]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+986], W8
	042 Move X0, [X20+968]
	043 Compare X0, 0
	044 JumpIfEqual {493}
	045 Move X1, X31
	046 Call TextElement.get_edition, X0
	047 Compare X0, 0
	048 JumpIfEqual {493}
	049 Move X10, 0x1A6B000
	050 Move X8, [X0]
	051 Move X10, [X10+1584]
	052 Move X21, X0
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move X0, X21
	064 Move W2, W31
	065 Call 0x1C5D788
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Add X8, X8, X9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X1, [X0+8]
	071 Move X0, X21
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {95}
	077 Move X8, [X19+32]
	078 Move X0, X20
	079 Move X8, [X8+192]
	080 Move X1, [X8+168]
	081 Call 0x26B5450, X0
	082 Move X8, [X19+32]
	083 Move X0, X20
	084 Move X8, [X8+192]
	085 Move X1, [X8+144]
	086 Call 0x26B55AC, X0
	087 Move W8, [X20+1016]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X8, [X20+976]
	090 Compare X8, 0
	091 JumpIfEqual {182}
	092 Move X8, [X20+984]
	093 Compare X8, 0
	094 JumpIfEqual {103}
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X24, [X31+16]
	100 Move X23, [X31+24]
	101 Move X30, [X31+64]
	102 Return 
	103 Move X8, 0x1A6B000
	104 Move X21, [X20+968]
	105 Move X8, [X8+1632]
	106 Move X0, [X8]
	107 Call 0x1C17F10
	108 Move X8, [X19+32]
	109 Move X1, X20
	110 Move X3, X31
	111 Move X22, X0
	112 Move X8, [X8+192]
	113 Move X2, [X8+160]
	114 Call 0x2D0F824, X0, X1, X2
	115 Compare X21, 0
	116 JumpIfEqual {493}
	117 Move X8, 0x1A6B000
	118 Move X8, [X8+1624]
	119 Move X0, X21
	120 Move X1, X22
	121 Move W2, W31
	122 Move X3, [X8]
	123 Call 0x21A2534, X0, X1, X2
	124 Move X8, 0x1A69000
	125 Move X8, [X8+2200]
	126 Move X0, [X8]
	127 Call 0x1C17F10
	128 Move X1, X31
	129 Move X21, X0
	130 Call VisualElement..ctor, X0
	131 Compare X21, 0
	132 JumpIfEqual {493}
	133 Move X0, X21
	134 Move X1, X31
	135 Call VisualElement.get_classList, X0
	136 Move X8, [X19+32]
	137 Move X22, X0
	138 Move X8, [X8+192]
	139 Move X8, [X8+112]
	140 Move W9, [X8+309]
	141 Move TEMP, X9
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {148}
	145 Move X0, X8
	146 Call 0x1C5D684
	147 Move X8, X0
	148 Move W9, [X8+224]
	149 Compare W9, 0
	150 JumpIfNotEqual {153}
	151 Move X0, X8
	152 Call 0x1C17DFC
	153 Move X8, [X19+32]
	154 Move X8, [X8+192]
	155 Move X0, [X8+112]
	156 Move W8, [X0+309]
	157 Move TEMP, X8
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {162}
	161 Call 0x1C5D684
	162 Compare X22, 0
	163 JumpIfEqual {493}
	164 Move X10, 0x1A42000
	165 Move X9, [X0+184]
	166 Move X10, [X10+440]
	167 Move W11, [X22+28]
	168 Move X8, [X22+16]
	169 Move X1, [X9+40]
	170 Move X9, [X10]
	171 Add W10, W11, 1
	172 Move [X22+28], W10
	173 Compare X8, 0
	174 JumpIfEqual {493}
	175 NotImplemented "Instruction LDRSW not yet implemented."
	176 Move W11, [X8+24]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Add W9, W10, 1
	179 Add X8, X8, X10
	180 Move [X22+24], W9
	181 Move [X8+32], X1
	182 Move X8, 0x1A6B000
	183 Move X8, [X8+1656]
	184 Move X0, [X8]
	185 Call 0x1C17F10
	186 Move X1, X31
	187 Move X21, X0
	188 Call ScrollView..ctor, X0
	189 Move [X20+976], X21
	190 Compare X21, 0
	191 JumpIfEqual {493}
	192 Move X1, [X20+968]
	193 Move X0, X21
	194 Move X2, X31
	195 Call VisualElement.Add, X0, X1
	196 Move X1, [X20+976]
	197 Move X0, X20
	198 Move X2, X31
	199 Call VisualElement.Add, X0, X1
	200 Move X8, [X19+32]
	201 Move X0, X20
	202 Move X8, [X8+192]
	203 Move X1, [X8+176]
	204 Call 0x26B4FCC, X0
	205 Move X0, [X20+976]
	206 Compare X0, 0
	207 JumpIfEqual {493}
	208 Move W1, 2
	209 Move X2, X31
	210 Call ScrollView.set_horizontalScrollerVisibility, X0, X1
	211 Move X0, [X20+976]
	212 Compare X0, 0
	213 JumpIfEqual {493}
	214 Move W1, [X20+1016]
	215 Move X2, X31
	216 Call ScrollView.set_verticalScrollerVisibility, X0, X1
	217 Move X8, [X19+32]
	218 Move X21, [X20+976]
	219 Move X8, [X8+192]
	220 Move X0, [X8+152]
	221 Move W8, [X0+309]
	222 Move TEMP, X8
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfEqual {227}
	226 Call 0x1C5D684
	227 Move W8, [X0+224]
	228 Compare W8, 0
	229 JumpIfNotEqual {231}
	230 Call 0x1C17DFC
	231 Move X8, [X19+32]
	232 Move X8, [X8+192]
	233 Move X0, [X8+152]
	234 Move W8, [X0+309]
	235 Move TEMP, X8
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfEqual {240}
	239 Call 0x1C5D684
	240 Compare X21, 0
	241 JumpIfEqual {493}
	242 Move X8, [X0+184]
	243 Move X0, X21
	244 Move X2, X31
	245 Move X1, [X8+48]
	246 Call VisualElement.AddToClassList, X0, X1
	247 Move X8, [X20+976]
	248 Compare X8, 0
	249 JumpIfEqual {493}
	250 Move X9, [X19+32]
	251 Move X21, [X8+1048]
	252 Move X9, [X9+192]
	253 Move X0, [X9+152]
	254 Move W9, [X0+309]
	255 Move TEMP, X9
	256 And TEMP, TEMP, 1
	257 Compare TEMP, 1
	258 JumpIfEqual {260}
	259 Call 0x1C5D684
	260 Compare X21, 0
	261 JumpIfEqual {493}
	262 Move X8, [X0+184]
	263 Move X0, X21
	264 Move X2, X31
	265 Move X1, [X8+56]
	266 Call VisualElement.AddToClassList, X0, X1
	267 Move X0, [X20+976]
	268 Compare X0, 0
	269 JumpIfEqual {493}
	270 Move X8, [X0]
	271 Move X9, [X8+1896]
	272 Move X1, [X8+1904]
	273 NotImplemented "Instruction BLR not yet implemented."
	274 Move X8, [X19+32]
	275 Move X21, X0
	276 Move X8, [X8+192]
	277 Move X8, [X8+152]
	278 Move W9, [X8+309]
	279 Move TEMP, X9
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfEqual {286}
	283 Move X0, X8
	284 Call 0x1C5D684
	285 Move X8, X0
	286 Compare X21, 0
	287 JumpIfEqual {493}
	288 Move X8, [X8+184]
	289 Move X0, X21
	290 Move X2, X31
	291 Move X1, [X8+64]
	292 Call VisualElement.AddToClassList, X0, X1
	293 Move X0, [X20+976]
	294 Compare X0, 0
	295 JumpIfEqual {493}
	296 Move X8, [X0]
	297 Move X9, [X8+1896]
	298 Move X1, [X8+1904]
	299 NotImplemented "Instruction BLR not yet implemented."
	300 Move X8, 0x1A6A000
	301 Move X8, [X8+1632]
	302 Move X21, X0
	303 Move X8, [X8]
	304 Move X0, X8
	305 Call 0x1C17F10
	306 Move X8, [X19+32]
	307 Move X1, X20
	308 Move X3, X31
	309 Move X22, X0
	310 Move X8, [X8+192]
	311 Move X2, [X8+184]
	312 Call 0x2D0F824, X0, X1, X2
	313 Compare X21, 0
	314 JumpIfEqual {493}
	315 Move X8, 0x1A6A000
	316 Move X8, [X8+1624]
	317 Move X0, X21
	318 Move X1, X22
	319 Move W2, W31
	320 Move X3, [X8]
	321 Call 0x21A2534, X0, X1, X2
	322 Move X8, [X20+976]
	323 Compare X8, 0
	324 JumpIfEqual {493}
	325 Move X8, [X8+1064]
	326 Compare X8, 0
	327 JumpIfEqual {493}
	328 Move X23, 0x1A6A000
	329 Move X21, [X8+976]
	330 Move X23, [X23+1640]
	331 Move X0, [X23]
	332 Call 0x1C17F10
	333 Move X8, [X19+32]
	334 Move X1, X20
	335 Move X3, X31
	336 Move X22, X0
	337 Move X8, [X8+192]
	338 Move X2, [X8+192]
	339 Call 0x2D0F824, X0, X1, X2
	340 Move X24, 0x1A6A000
	341 Move X24, [X24+1648]
	342 Move X0, X21
	343 Move X1, X22
	344 Move X2, [X24]
	345 Call INotifyValueChangedExtensions.RegisterValueChangedCallback, X0, X1
	346 Move X8, [X20+976]
	347 Compare X8, 0
	348 JumpIfEqual {493}
	349 Move X9, [X8+1064]
	350 Compare X9, 0
	351 JumpIfEqual {493}
	352 Move X9, [X9+976]
	353 Compare X9, 0
	354 JumpIfEqual {493}
	355 Move [X9+32], W31
	356 Move X8, [X8+1056]
	357 Compare X8, 0
	358 JumpIfEqual {493}
	359 Move X0, [X23]
	360 Move X21, [X8+976]
	361 Call 0x1C17F10
	362 Move X8, [X19+32]
	363 Move X1, X20
	364 Move X3, X31
	365 Move X22, X0
	366 Move X8, [X8+192]
	367 Move X2, [X8+192]
	368 Call 0x2D0F824, X0, X1, X2
	369 Move X2, [X24]
	370 Move X0, X21
	371 Move X1, X22
	372 Call INotifyValueChangedExtensions.RegisterValueChangedCallback, X0, X1
	373 Move X8, [X20+976]
	374 Compare X8, 0
	375 JumpIfEqual {493}
	376 Move X8, [X8+1056]
	377 Compare X8, 0
	378 JumpIfEqual {493}
	379 Move X8, [X8+976]
	380 Compare X8, 0
	381 JumpIfEqual {493}
	382 Move [X8+32], W31
	383 Move X8, [X19+32]
	384 Move X8, [X8+192]
	385 Move X0, [X8+112]
	386 Move W8, [X0+309]
	387 Move TEMP, X8
	388 And TEMP, TEMP, 1
	389 Compare TEMP, 1
	390 JumpIfEqual {392}
	391 Call 0x1C5D684
	392 Move W8, [X0+224]
	393 Compare W8, 0
	394 JumpIfNotEqual {396}
	395 Call 0x1C17DFC
	396 Move X8, [X19+32]
	397 Move X8, [X8+192]
	398 Move X0, [X8+112]
	399 Move W8, [X0+309]
	400 Move TEMP, X8
	401 And TEMP, TEMP, 1
	402 Compare TEMP, 1
	403 JumpIfEqual {405}
	404 Call 0x1C5D684
	405 Move X8, [X0+184]
	406 Move X0, X20
	407 Move X2, X31
	408 Move X1, [X8+64]
	409 Call VisualElement.AddToClassList, X0, X1
	410 Move X8, [X19+32]
	411 Move X19, [X20+968]
	412 Move X8, [X8+192]
	413 Move X0, [X8+152]
	414 Move W8, [X0+309]
	415 Move TEMP, X8
	416 And TEMP, TEMP, 1
	417 Compare TEMP, 1
	418 JumpIfEqual {420}
	419 Call 0x1C5D684
	420 Compare X19, 0
	421 JumpIfEqual {493}
	422 Move X8, [X0+184]
	423 Move X0, X19
	424 Move X1, [X8+16]
	425 Move X8, [X9+32]
	426 Move X0, X22
	427 Move X8, [X8+192]
	428 Move X2, [X8+112]
	429 Call List`1<Object>.AddWithResize, X0, X1
	430 Move X1, [X20+968]
	431 Move X0, X21
	432 Move X2, X31
	433 Move [X20+984], X21
	434 Call VisualElement.Add, X0, X1
	435 Move X1, [X20+984]
	436 Move X0, X20
	437 Move X2, X31
	438 Call VisualElement.Add, X0, X1
	439 Move X0, X20
	440 Call 0x26B52FC, X0
	441 Move X8, [X19+32]
	442 Move X8, [X8+192]
	443 Move X0, [X8+112]
	444 Move W8, [X0+309]
	445 Move TEMP, X8
	446 And TEMP, TEMP, 1
	447 Compare TEMP, 1
	448 JumpIfEqual {450}
	449 Call 0x1C5D684
	450 Move X8, [X0+184]
	451 Move X0, X20
	452 Move X2, X31
	453 Move X1, [X8+56]
	454 Call VisualElement.AddToClassList, X0, X1
	455 Move X8, [X19+32]
	456 Move X20, [X20+968]
	457 Move X8, [X8+192]
	458 Move X0, [X8+152]
	459 Move W8, [X0+309]
	460 Move TEMP, X8
	461 And TEMP, TEMP, 1
	462 Compare TEMP, 1
	463 JumpIfEqual {465}
	464 Call 0x1C5D684
	465 Move W8, [X0+224]
	466 Compare W8, 0
	467 JumpIfNotEqual {469}
	468 Call 0x1C17DFC
	469 Move X8, [X19+32]
	470 Move X8, [X8+192]
	471 Move X0, [X8+152]
	472 Move W8, [X0+309]
	473 Move TEMP, X8
	474 And TEMP, TEMP, 1
	475 Compare TEMP, 1
	476 JumpIfEqual {478}
	477 Call 0x1C5D684
	478 Compare X20, 0
	479 JumpIfEqual {493}
	480 Move X8, [X0+184]
	481 Move X0, X20
	482 Move X1, [X8+8]
	483 Move X20, [X31+48]
	484 Move X19, [X31+56]
	485 Move X22, [X31+32]
	486 Move X21, [X31+40]
	487 Move X24, [X31+16]
	488 Move X23, [X31+24]
	489 Move X2, X31
	490 Move X30, [X31+64]
	491 Call VisualElement.AddToClassList, X0, X1
	492 Return 
	493 Call 0x1C17F20

Method: System.Void ScrollViewOnGeometryChangedEvent(UnityEngine.UIElements.GeometryChangedEvent e)

Disassembly:
	0x026B42A8 LDR X8, [X20 + 0x20]
	0x026B42AC LDR X8, [X8 + 0xC0]
	0x026B42B0 LDR X0, [X8 + 0x98]
	0x026B42B4 LDRB W8, [X0 + 0x135]
	0x026B42B8 TBNZ X8, 0x0, 0x26B42C0
	0x026B42BC BL 0x1C5C684
	0x026B42C0 CBZ X21, 0x26B42F8
	0x026B42C4 LDR X8, [X0 + 0xB8]
	0x026B42C8 MOV X0, X21
	0x026B42CC MOV X2, X31
	0x026B42D0 LDR X1, [X8 + 0x20]
	0x026B42D4 BL 0x3DF1C70
	0x026B42D8 LDR X0, [X19 + 0x3D0]
	0x026B42DC CBZ X0, 0x26B42F8
	0x026B42E0 MOV W1, W31
	0x026B42E4 LDP X20, X19, [X31 + 0x20]
	0x026B42E8 LDP X22, X21, [X31 + 0x10]
	0x026B42EC MOV X2, X31
	0x026B42F0 LDR X30, [X31], #0x30
	0x026B42F4 B 0x3D801F4
	0x026B42F8 BL 0x1C16F20
	0x026B42FC STP X30, X21, [X31 - 0x20]!
	0x026B4300 STP X20, X19, [X31 + 0x10]
	0x026B4304 ADRP X20, 0x1D26000

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {25}
	004 NotImplemented "Instruction LDUR not yet implemented."
	005 NotImplemented "Instruction LDUR not yet implemented."
	006 Move X8, -29138944
	007 Move V2, [X8+3872]
	008 Subtract V0, V0, V1
	009 NotImplemented "Instruction INVALID not yet implemented."
	010 NotImplemented "Instruction FADDP not yet implemented."
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 Move X8, [X2+32]
	013 Move W1, W31
	014 Move W2, W31
	015 Move X8, [X8+192]
	016 Move X8, [X8+80]
	017 Move X8, [X8+32]
	018 Move X8, [X8+192]
	019 Move X3, [X8+208]
	020 Move X30, [X31+16]
	021 Call 0x26B4778, X0, X1, X2
	022 Return 
	023 Move X30, [X31+16]
	024 Return 
	025 Call 0x1C17F20

Method: System.Void TextElementOnGeometryChangedEvent(UnityEngine.UIElements.GeometryChangedEvent e)

Disassembly:
	0x026B4308 LDRB W8, [X20 + 0x3E0]
	0x026B430C MOV X19, X0
	0x026B4310 TBNZ X8, 0x0, 0x26B4334
	0x026B4314 ADRP X0, 0x1A68000
	0x026B4318 LDR X0, [X0 + 0x128]
	0x026B431C BL 0x1C16CF4
	0x026B4320 ADRP X0, 0x1A69000
	0x026B4324 LDR X0, [X0 + 0x690]
	0x026B4328 BL 0x1C16CF4
	0x026B432C MOVZ W8, 0x1
	0x026B4330 STRB W8, [X20 + 0x3E0]
	0x026B4334 LDR X8, [X19 + 0x3D8]
	0x026B4338 CBZ X8, 0x26B43C0
	0x026B433C ADRP X21, 0x1A69000
	0x026B4340 LDR X21, [X21 + 0x690]
	0x026B4344 MOV X0, X19
	0x026B4348 MOV X1, X31
	0x026B434C BL 0x3DE0F44
	0x026B4350 MOV X1, X31
	0x026B4354 BL 0x3DCA400
	0x026B4358 MOV W20, W0
	0x026B435C MOV X0, X19
	0x026B4360 MOV X1, X31
	0x026B4364 BL 0x3DE7EEC
	0x026B4368 LDR X1, [X21]
	0x026B436C MOV X19, X0
	0x026B4370 CBZ W20, 0x26B43CC
	0x026B4374 MOVZ W0, 0x2
	0x026B4378 BL 0x266EACC
	0x026B437C CBZ X19, 0x26B444C
	0x026B4380 ADRP X10, 0x1A68000
	0x026B4384 LDR X8, [X19]
	0x026B4388 LDR X10, [X10 + 0x128]
	0x026B438C MOV X20, X0
	0x026B4390 LDRH W9, [X8 + 0x12E]
	0x026B4394 LDR X1, [X10]
	0x026B4398 CBZ X9, 0x26B4414
	0x026B439C LDR X10, [X8 + 0xB0]
	0x026B43A0 ADD X10, X10, 0x8
	0x026B43A4 LDUR X11, [X10 - 0x8]
	0x026B43A8 CMP X11, X1
	0x026B43AC B.EQ 0x26B4424
	0x026B43B0 SUBS X9, X9, 0x1
	0x026B43B4 ADD X10, X10, 0x10
	0x026B43B8 B.NE 0x26B43A4
	0x026B43BC B 0x26B4414
	0x026B43C0 LDP X20, X19, [X31 + 0x10]
	0x026B43C4 LDP X30, X21, [X31], #0x20
	0x026B43C8 RET
	0x026B43CC MOVZ W0, 0x1
	0x026B43D0 BL 0x266EACC
	0x026B43D4 CBZ X19, 0x26B444C
	0x026B43D8 ADRP X10, 0x1A68000
	0x026B43DC LDR X8, [X19]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x1D27000
	008 Move W8, [X22+987]
	009 Move X20, X2
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1A40000
	017 Move X0, [X0+1448]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+987], W8
	021 Compare X21, 0
	022 JumpIfEqual {65}
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 Move X8, -29138944
	026 Move V2, [X8+3872]
	027 Subtract V1, V0, V1
	028 NotImplemented "Instruction INVALID not yet implemented."
	029 NotImplemented "Instruction FADDP not yet implemented."
	030 NotImplemented "Instruction FCMP not yet implemented."
	031 Move X8, 0x1A40000
	032 Move X8, [X8+1448]
	033 Move X0, [X8]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {40}
	037 Move [X31], V1
	038 Call 0x1C17DFC
	039 Move V1, [X31]
	040 Move X8, [X20+32]
	041 Move X9, -29138944
	042 Move V0, [X9+3996]
	043 Move X0, X19
	044 Move X8, [X8+192]
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X30, [X31+16]
	050 Move X3, [X8+208]
	051 NotImplemented "Instruction FABS not yet implemented."
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 NotImplemented "Instruction CSET not yet implemented."
	054 Move W1, W31
	055 Add X31, X31, 64
	056 Call 0x26B4778, X0, X1, X2
	057 Return 
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X30, [X31+16]
	063 Add X31, X31, 64
	064 Return 
	065 Call 0x1C17F20

Method: System.Void OnInputCustomStyleResolved(UnityEngine.UIElements.CustomStyleResolvedEvent e)

Disassembly:
	0x026B43E0 LDR X10, [X10 + 0x128]
	0x026B43E4 MOV X20, X0
	0x026B43E8 LDRH W9, [X8 + 0x12E]
	0x026B43EC LDR X1, [X10]
	0x026B43F0 CBZ X9, 0x26B4414
	0x026B43F4 LDR X10, [X8 + 0xB0]
	0x026B43F8 ADD X10, X10, 0x8
	0x026B43FC LDUR X11, [X10 - 0x8]
	0x026B4400 CMP X11, X1
	0x026B4404 B.EQ 0x26B4424
	0x026B4408 SUBS X9, X9, 0x1
	0x026B440C ADD X10, X10, 0x10
	0x026B4410 B.NE 0x26B43FC
	0x026B4414 MOVZ W2, 0x22
	0x026B4418 MOV X0, X19
	0x026B441C BL 0x1C5C788
	0x026B4420 B 0x26B4434
	0x026B4424 LDR W9, [X10]
	0x026B4428 ADD W9, W9, 0x22
	0x026B442C ADD X8, X8, W9, 0x4, SXTW
	0x026B4430 ADD X0, X8, 0x138
	0x026B4434 LDP X3, X2, [X0]
	0x026B4438 MOV X0, X19
	0x026B443C MOV X1, X20
	0x026B4440 LDP X20, X19, [X31 + 0x10]
	0x026B4444 LDP X30, X21, [X31], #0x20
	0x026B4448 BR X3
	0x026B444C BL 0x1C16F20
	0x026B4450 STR X30, [X31 - 0x30]!
	0x026B4454 STP X22, X21, [X31 + 0x10]
	0x026B4458 STP X20, X19, [X31 + 0x20]
	0x026B445C ADRP X21, 0x1D26000
	0x026B4460 LDRB W8, [X21 + 0x3E1]
	0x026B4464 MOV X20, X1
	0x026B4468 MOV X19, X0
	0x026B446C TBNZ X8, 0x0, 0x26B4490
	0x026B4470 ADRP X0, 0x1A69000
	0x026B4474 LDR X0, [X0 + 0x698]
	0x026B4478 BL 0x1C16CF4
	0x026B447C ADRP X0, 0x1A69000
	0x026B4480 LDR X0, [X0 + 0x660]
	0x026B4484 BL 0x1C16CF4
	0x026B4488 MOVZ W8, 0x1
	0x026B448C STRB W8, [X21 + 0x3E1]
	0x026B4490 LDR X8, [X20 + 0x20]
	0x026B4494 LDR X8, [X8 + 0xC0]
	0x026B4498 LDR X0, [X8 + 0x70]
	0x026B449C LDRB W8, [X0 + 0x135]
	0x026B44A0 TBNZ X8, 0x0, 0x26B44A8
	0x026B44A4 BL 0x1C5C684
	0x026B44A8 LDR W8, [X0 + 0xE0]
	0x026B44AC CBNZ W8, 0x26B44B4
	0x026B44B0 BL 0x1C16DFC
	0x026B44B4 LDR X8, [X20 + 0x20]
	0x026B44B8 LDR X8, [X8 + 0xC0]
	0x026B44BC LDR X0, [X8 + 0x70]
	0x026B44C0 LDRB W8, [X0 + 0x135]
	0x026B44C4 TBNZ X8, 0x0, 0x26B44CC
	0x026B44C8 BL 0x1C5C684
	0x026B44CC CBZ X19, 0x26B45A8
	0x026B44D0 LDR X8, [X0 + 0xB8]
	0x026B44D4 MOV X0, X19
	0x026B44D8 MOV X2, X31
	0x026B44DC LDR X1, [X8 + 0x30]
	0x026B44E0 BL 0x3DF1B54
	0x026B44E4 LDR X8, [X20 + 0x20]
	0x026B44E8 LDR X21, [X19 + 0x3C8]
	0x026B44EC LDR X8, [X8 + 0xC0]
	0x026B44F0 LDR X0, [X8 + 0x98]
	0x026B44F4 LDRB W8, [X0 + 0x135]
	0x026B44F8 TBNZ X8, 0x0, 0x26B4500
	0x026B44FC BL 0x1C5C684
	0x026B4500 LDR W8, [X0 + 0xE0]
	0x026B4504 CBNZ W8, 0x26B450C
	0x026B4508 BL 0x1C16DFC
	0x026B450C LDR X8, [X20 + 0x20]
	0x026B4510 LDR X8, [X8 + 0xC0]
	0x026B4514 LDR X0, [X8 + 0x98]
	0x026B4518 LDRB W8, [X0 + 0x135]
	0x026B451C TBNZ X8, 0x0, 0x26B4524
	0x026B4520 BL 0x1C5C684
	0x026B4524 CBZ X21, 0x26B45A8
	0x026B4528 LDR X8, [X0 + 0xB8]
	0x026B452C MOV X0, X21
	0x026B4530 MOV X2, X31
	0x026B4534 LDR X1, [X8 + 0x8]
	0x026B4538 BL 0x3DF1B54
	0x026B453C LDR X0, [X19 + 0x3C8]
	0x026B4540 CBZ X0, 0x26B45A8
	0x026B4544 ADRP X22, 0x1A69000
	0x026B4548 LDR X22, [X22 + 0x660]
	0x026B454C MOV X1, X31
	0x026B4550 BL 0x3DF6948
	0x026B4554 LDR X0, [X22]
	0x026B4558 LDR X21, [X19 + 0x3C8]
	0x026B455C BL 0x1C16F10
	0x026B4560 LDR X8, [X20 + 0x20]
	0x026B4564 MOV X1, X19
	0x026B4568 MOV X3, X31
	0x026B456C MOV X20, X0
	0x026B4570 LDR X8, [X8 + 0xC0]
	0x026B4574 LDR X2, [X8 + 0xA0]
	0x026B4578 BL 0x2D0E824
	0x026B457C CBZ X21, 0x26B45A8
	0x026B4580 ADRP X8, 0x1A69000
	0x026B4584 LDR X8, [X8 + 0x698]
	0x026B4588 MOV X0, X21
	0x026B458C MOV X1, X20
	0x026B4590 LDP X20, X19, [X31 + 0x20]
	0x026B4594 LDR X3, [X8]
	0x026B4598 LDP X22, X21, [X31 + 0x10]
	0x026B459C MOV W2, W31
	0x026B45A0 LDR X30, [X31], #0x30
	0x026B45A4 B 0x21A18B4
	0x026B45A8 BL 0x1C16F20
	0x026B45AC STR D10, [X31 - 0x60]!
	0x026B45B0 STP D9, D8, [X31 + 0x8]
	0x026B45B4 STR X30, [X31 + 0x18]
	0x026B45B8 STP X26, X25, [X31 + 0x20]
	0x026B45BC STP X24, X23, [X31 + 0x30]
	0x026B45C0 STP X22, X21, [X31 + 0x40]
	0x026B45C4 STP X20, X19, [X31 + 0x50]
	0x026B45C8 ADRP X21, 0x1D26000
	0x026B45CC LDRB W8, [X21 + 0x3E2]
	0x026B45D0 MOV X20, X1
	0x026B45D4 MOV X19, X0
	0x026B45D8 TBNZ X8, 0x0, 0x26B4620
	0x026B45DC ADRP X0, 0x1A69000
	0x026B45E0 LDR X0, [X0 + 0x698]
	0x026B45E4 BL 0x1C16CF4
	0x026B45E8 ADRP X0, 0x1A69000
	0x026B45EC LDR X0, [X0 + 0x660]
	0x026B45F0 BL 0x1C16CF4
	0x026B45F4 ADRP X0, 0x1A69000
	0x026B45F8 LDR X0, [X0 + 0x668]
	0x026B45FC BL 0x1C16CF4
	0x026B4600 ADRP X0, 0x1A69000
	0x026B4604 LDR X0, [X0 + 0x6A0]
	0x026B4608 BL 0x1C16CF4
	0x026B460C ADRP X0, 0x1A69000
	0x026B4610 LDR X0, [X0 + 0x688]
	0x026B4614 BL 0x1C16CF4
	0x026B4618 MOVZ W8, 0x1
	0x026B461C STRB W8, [X21 + 0x3E2]
	0x026B4620 ADRP X24, 0x1A69000
	0x026B4624 ADRP X23, 0x1A69000
	0x026B4628 LDR X0, [X19 + 0x3D0]
	0x026B462C LDR X24, [X24 + 0x660]
	0x026B4630 LDR X23, [X23 + 0x698]
	0x026B4634 CBZ X0, 0x26B4884
	0x026B4638 MOV X1, X31
	0x026B463C BL 0x3DF6948
	0x026B4640 LDR X0, [X19 + 0x3D0]
	0x026B4644 CBZ X0, 0x26B4A2C
	0x026B4648 LDR X8, [X0]
	0x026B464C LDR X9, [X8 + 0x768]
	0x026B4650 LDR X1, [X8 + 0x770]
	0x026B4654 BLR X9
	0x026B4658 LDR X8, [X24]
	0x026B465C MOV X21, X0
	0x026B4660 MOV X0, X8
	0x026B4664 BL 0x1C16F10
	0x026B4668 LDR X8, [X20 + 0x20]
	0x026B466C MOV X1, X19
	0x026B4670 MOV X3, X31
	0x026B4674 MOV X22, X0
	0x026B4678 LDR X8, [X8 + 0xC0]
	0x026B467C LDR X2, [X8 + 0xB8]
	0x026B4680 BL 0x2D0E824
	0x026B4684 CBZ X21, 0x26B4A2C
	0x026B4688 LDR X3, [X23]
	0x026B468C MOV X0, X21
	0x026B4690 MOV X1, X22
	0x026B4694 MOV W2, W31
	0x026B4698 BL 0x21A18B4
	0x026B469C LDR X8, [X19 + 0x3D0]
	0x026B46A0 CBZ X8, 0x26B4A2C
	0x026B46A4 LDR X8, [X8 + 0x428]
	0x026B46A8 CBZ X8, 0x26B4A2C
	0x026B46AC ADRP X26, 0x1A69000
	0x026B46B0 LDR X26, [X26 + 0x668]
	0x026B46B4 ADRP X25, 0x1A69000
	0x026B46B8 LDR X21, [X8 + 0x3D0]
	0x026B46BC LDR X0, [X26]
	0x026B46C0 LDR X25, [X25 + 0x6A0]
	0x026B46C4 BL 0x1C16F10
	0x026B46C8 LDR X8, [X20 + 0x20]
	0x026B46CC MOV X1, X19
	0x026B46D0 MOV X3, X31
	0x026B46D4 MOV X22, X0
	0x026B46D8 LDR X8, [X8 + 0xC0]
	0x026B46DC LDR X2, [X8 + 0xC0]
	0x026B46E0 BL 0x2D0E824
	0x026B46E4 LDR X2, [X25]
	0x026B46E8 MOV X0, X21
	0x026B46EC MOV X1, X22
	0x026B46F0 BL 0x21EF720
	0x026B46F4 LDR X8, [X19 + 0x3D0]
	0x026B46F8 CBZ X8, 0x26B4A2C
	0x026B46FC LDR X8, [X8 + 0x420]
	0x026B4700 CBZ X8, 0x26B4A2C
	0x026B4704 LDR X0, [X26]
	0x026B4708 LDR X21, [X8 + 0x3D0]
	0x026B470C BL 0x1C16F10
	0x026B4710 LDR X8, [X20 + 0x20]
	0x026B4714 MOV X1, X19
	0x026B4718 MOV X3, X31
	0x026B471C MOV X22, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D11
	003 Move [X31+40], D10
	004 Move [X31+48], D9
	005 Move [X31+56], D8
	006 Move [X31+64], X30
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X22, 0x1D27000
	013 Move W8, [X22+988]
	014 Move X20, X2
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x1A6A000
	022 Move X0, [X0+1664]
	023 Call 0x1C17CF4
	024 Move X0, 0x1A6A000
	025 Move X0, [X0+1576]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+988], W8
	029 Move [X31+16], X31
	030 Move [X31+24], X31
	031 Move [X31], X31
	032 Move [X31+8], X31
	033 Compare X21, 0
	034 JumpIfEqual {249}
	035 Move X0, X21
	036 Move X1, X31
	037 Call CustomStyleResolvedEvent.get_customStyle, X0
	038 Move X8, [X20+32]
	039 Move X21, X0
	040 Move X8, [X8+192]
	041 Move X8, [X8+112]
	042 Move W9, [X8+309]
	043 Move TEMP, X9
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {50}
	047 Move X0, X8
	048 Call 0x1C5D684
	049 Move X8, X0
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X8, [X20+32]
	056 Move X8, [X8+192]
	057 Move X0, [X8+112]
	058 Move W8, [X0+309]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {64}
	063 Call 0x1C5D684
	064 Compare X21, 0
	065 JumpIfEqual {249}
	066 Move X23, 0x1A6A000
	067 Move X9, [X0+184]
	068 Move X8, [X21]
	069 Move X23, [X23+1664]
	070 Move X22, [X9]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Move X1, [X23]
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move W2, 2
	082 Move X0, X21
	083 Call 0x1C5D788
	084 Move W9, [X10]
	085 Add W9, W9, 2
	086 Add X8, X8, W9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X3, [X0+8]
	090 Add X2, X31, 16
	091 Move X0, X21
	092 Move X1, X22
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {138}
	098 Move X0, [X19+968]
	099 Compare X0, 0
	100 JumpIfEqual {249}
	101 Move X1, X31
	102 Call TextElement.get_selection, X0
	103 Compare X0, 0
	104 JumpIfEqual {249}
	105 Move X10, 0x1A6A000
	106 Move S9, [X31+24]
	107 Move S8, [X31+28]
	108 Move X8, [X0]
	109 Move S11, [X31+16]
	110 Move S10, [X31+20]
	111 Move X10, [X10+1576]
	112 Move X22, X0
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Move X1, [X10]
	115 Compare X9, 0
	116 JumpIfEqual {123}
	117 Move X10, [X8+176]
	118 Add X10, X10, 8
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Subtract X9, X9, 1
	122 Add X10, X10, 16
	123 Move W2, 10
	124 Move X0, X22
	125 Call 0x1C5D788
	126 Move W9, [X10]
	127 Add W9, W9, 10
	128 Add X8, X8, W9
	129 Add X0, X8, 312
	130 Move X8, [X0]
	131 Move X1, [X0+8]
	132 Move X0, X22
	133 Move V0, V11
	134 Move V1, V10
	135 Move V2, V9
	136 Move V3, V8
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move X8, [X20+32]
	139 Move X8, [X8+192]
	140 Move X0, [X8+112]
	141 Move W8, [X0+309]
	142 Move TEMP, X8
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {147}
	146 Call 0x1C5D684
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X8, [X20+32]
	152 Move X8, [X8+192]
	153 Move X0, [X8+112]
	154 Move W8, [X0+309]
	155 Move TEMP, X8
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfEqual {160}
	159 Call 0x1C5D684
	160 Move X9, [X0+184]
	161 Move X8, [X21]
	162 Move X1, [X23]
	163 Move X22, [X9+8]
	164 NotImplemented "Instruction LDRH not yet implemented."
	165 Compare X9, 0
	166 JumpIfEqual {173}
	167 Move X10, [X8+176]
	168 Add X10, X10, 8
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Subtract X9, X9, 1
	172 Add X10, X10, 16
	173 Move W2, 2
	174 Move X0, X21
	175 Call 0x1C5D788
	176 Move W9, [X10]
	177 Add W9, W9, 2
	178 Add X8, X8, W9
	179 Add X0, X8, 312
	180 Move X8, [X0]
	181 Move X3, [X0+8]
	182 Add X2, X31, 0
	183 Move X0, X21
	184 Move X1, X22
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {230}
	190 Move X0, [X19+968]
	191 Compare X0, 0
	192 JumpIfEqual {249}
	193 Move X1, X31
	194 Call TextElement.get_selection, X0
	195 Compare X0, 0
	196 JumpIfEqual {249}
	197 Move X10, 0x1A6A000
	198 Move S9, [X31+8]
	199 Move S8, [X31+12]
	200 Move X8, [X0]
	201 Move S11, [X31]
	202 Move S10, [X31+4]
	203 Move X10, [X10+1576]
	204 Move X21, X0
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Move X1, [X10]
	207 Compare X9, 0
	208 JumpIfEqual {215}
	209 Move X10, [X8+176]
	210 Add X10, X10, 8
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Subtract X9, X9, 1
	214 Add X10, X10, 16
	215 Move W2, 3
	216 Move X0, X21
	217 Call 0x1C5D788
	218 Move W9, [X10]
	219 Add W9, W9, 3
	220 Add X8, X8, W9
	221 Add X0, X8, 312
	222 Move X8, [X0]
	223 Move X1, [X0+8]
	224 Move X0, X21
	225 Move V0, V11
	226 Move V1, V10
	227 Move V2, V9
	228 Move V3, V8
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move X8, [X20+32]
	231 Move X0, X19
	232 Move X8, [X8+192]
	233 Move X1, [X8+176]
	234 Call 0x26B4FCC, X0
	235 Move X0, X19
	236 Call 0x26B52FC, X0
	237 Move X20, [X31+96]
	238 Move X19, [X31+104]
	239 Move X22, [X31+80]
	240 Move X21, [X31+88]
	241 Move X30, [X31+64]
	242 Move X23, [X31+72]
	243 Move D9, [X31+48]
	244 Move D8, [X31+56]
	245 Move D11, [X31+32]
	246 Move D10, [X31+40]
	247 Add X31, X31, 112
	248 Return 
	249 Call 0x1C17F20

Method: System.Boolean AcceptCharacter(System.Char c)

Disassembly:
	0x026B4720 LDR X8, [X8 + 0xC0]
	0x026B4724 LDR X2, [X8 + 0xC0]
	0x026B4728 BL 0x2D0E824
	0x026B472C LDR X2, [X25]
	0x026B4730 MOV X0, X21
	0x026B4734 MOV X1, X22
	0x026B4738 BL 0x21EF720
	0x026B473C STR X31, [X19 + 0x3D0]
	0x026B4740 LDR X8, [X20 + 0x20]
	0x026B4744 LDR X21, [X19 + 0x3C8]
	0x026B4748 LDR X8, [X8 + 0xC0]
	0x026B474C LDR X0, [X8 + 0x98]
	0x026B4750 LDRB W8, [X0 + 0x135]
	0x026B4754 TBNZ X8, 0x0, 0x26B475C
	0x026B4758 BL 0x1C5C684
	0x026B475C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X2+32]
	004 Move X19, X0
	005 Move X8, [X8+192]
	006 Move X1, [X8+216]
	007 Call 0x26B29E8, X0
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {16}
	012 Move W0, W31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0
	016 Compare X19, 0
	017 JumpIfEqual {24}
	018 Move X0, X19
	019 Move X1, X31
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Call VisualElement.get_enabledInHierarchy, X0
	023 Return X0
	024 Call 0x1C17F20

Method: System.Void UpdateScrollOffset(System.Boolean isBackspace = False)

Disassembly:
	0x026B4760 CBNZ W8, 0x26B4768
	0x026B4764 BL 0x1C16DFC
	0x026B4768 LDR X8, [X20 + 0x20]
	0x026B476C LDR X8, [X8 + 0xC0]
	0x026B4770 LDR X0, [X8 + 0x98]
	0x026B4774 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move X8, [X2+32]
	002 And W1, W1, 1
	003 Move W2, W31
	004 Move X8, [X8+192]
	005 Move X3, [X8+208]

Method: System.Void UpdateScrollOffset(System.Boolean isBackspace, System.Boolean widthChanged)

Disassembly:
	0x026B4778 TBNZ X8, 0x0, 0x26B4780
	0x026B477C BL 0x1C5C684
	0x026B4780 CBZ X21, 0x26B4A2C
	0x026B4784 LDR X8, [X0 + 0xB8]
	0x026B4788 MOV X0, X21
	0x026B478C MOV X2, X31
	0x026B4790 LDR X1, [X8 + 0x20]
	0x026B4794 BL 0x3DF1B54
	0x026B4798 LDR X8, [X20 + 0x20]
	0x026B479C LDR X21, [X19 + 0x3C8]
	0x026B47A0 LDR X8, [X8 + 0xC0]
	0x026B47A4 LDR X0, [X8 + 0x98]
	0x026B47A8 LDRB W8, [X0 + 0x135]
	0x026B47AC TBNZ X8, 0x0, 0x26B47B4
	0x026B47B0 BL 0x1C5C684
	0x026B47B4 CBZ X21, 0x26B4A2C
	0x026B47B8 LDR X8, [X0 + 0xB8]
	0x026B47BC MOV X0, X21
	0x026B47C0 MOV X2, X31
	0x026B47C4 LDR X1, [X8 + 0x28]
	0x026B47C8 BL 0x3DF1B54
	0x026B47CC LDR X8, [X20 + 0x20]
	0x026B47D0 LDR X21, [X19 + 0x3C8]
	0x026B47D4 LDR X8, [X8 + 0xC0]
	0x026B47D8 LDR X0, [X8 + 0x98]
	0x026B47DC LDRB W8, [X0 + 0x135]
	0x026B47E0 TBNZ X8, 0x0, 0x26B47E8
	0x026B47E4 BL 0x1C5C684
	0x026B47E8 CBZ X21, 0x26B4A2C
	0x026B47EC LDR X8, [X0 + 0xB8]
	0x026B47F0 MOV X0, X21
	0x026B47F4 MOV X2, X31
	0x026B47F8 LDR X1, [X8 + 0x18]
	0x026B47FC BL 0x3DF1B54
	0x026B4800 LDR X8, [X20 + 0x20]
	0x026B4804 LDR X8, [X8 + 0xC0]
	0x026B4808 LDR X0, [X8 + 0x70]
	0x026B480C LDRB W8, [X0 + 0x135]
	0x026B4810 TBNZ X8, 0x0, 0x26B4818
	0x026B4814 BL 0x1C5C684
	0x026B4818 LDR W8, [X0 + 0xE0]
	0x026B481C CBNZ W8, 0x26B4824
	0x026B4820 BL 0x1C16DFC
	0x026B4824 LDR X8, [X20 + 0x20]
	0x026B4828 LDR X8, [X8 + 0xC0]
	0x026B482C LDR X0, [X8 + 0x70]
	0x026B4830 LDRB W8, [X0 + 0x135]
	0x026B4834 TBNZ X8, 0x0, 0x26B483C
	0x026B4838 BL 0x1C5C684
	0x026B483C LDR X8, [X0 + 0xB8]
	0x026B4840 MOV X0, X19
	0x026B4844 MOV X2, X31
	0x026B4848 LDR X1, [X8 + 0x40]
	0x026B484C BL 0x3DF1B54
	0x026B4850 LDR X8, [X20 + 0x20]
	0x026B4854 LDR X21, [X19 + 0x3C8]
	0x026B4858 LDR X8, [X8 + 0xC0]
	0x026B485C LDR X0, [X8 + 0x98]
	0x026B4860 LDRB W8, [X0 + 0x135]
	0x026B4864 TBNZ X8, 0x0, 0x26B486C
	0x026B4868 BL 0x1C5C684
	0x026B486C CBZ X21, 0x26B4A2C
	0x026B4870 LDR X8, [X0 + 0xB8]
	0x026B4874 MOV X0, X21
	0x026B4878 MOV X2, X31
	0x026B487C LDR X1, [X8 + 0x10]
	0x026B4880 BL 0x3DF1B54
	0x026B4884 LDR X8, [X19 + 0x3D8]
	0x026B4888 CBZ X8, 0x26B4924
	0x026B488C LDR X0, [X19 + 0x3C8]
	0x026B4890 CBZ X0, 0x26B4A2C
	0x026B4894 MOV X1, X31
	0x026B4898 BL 0x3DEC1BC
	0x026B489C ADRP X22, 0x1D24000
	0x026B48A0 LDRB W8, [X22 + 0x783]
	0x026B48A4 MOV X21, X0
	0x026B48A8 CBNZ W8, 0x26B48C0
	0x026B48AC ADRP X0, 0x1A3F000
	0x026B48B0 LDR X0, [X0 + 0x5A0]
	0x026B48B4 BL 0x1C16CF4
	0x026B48B8 MOVZ W8, 0x1
	0x026B48BC STRB W8, [X22 + 0x783]
	0x026B48C0 CBZ X21, 0x26B4A2C
	0x026B48C4 ADRP X8, 0x1A3F000
	0x026B48C8 LDR X8, [X8 + 0x5A0]
	0x026B48CC ADRP X11, 0x1A69000
	0x026B48D0 LDR X9, [X8]
	0x026B48D4 LDR X8, [X21]
	0x026B48D8 LDR X10, [X9 + 0xB8]
	0x026B48DC LDR X11, [X11 + 0x688]
	0x026B48E0 LDRH W9, [X8 + 0x12E]
	0x026B48E4 LDP S9, S8, [X10 + 0x4]
	0x026B48E8 LDR V10, [X10]
	0x026B48EC LDR X1, [X11]
	0x026B48F0 CBZ X9, 0x26B4914
	0x026B48F4 LDR X10, [X8 + 0xB0]
	0x026B48F8 ADD X10, X10, 0x8
	0x026B48FC LDUR X11, [X10 - 0x8]
	0x026B4900 CMP X11, X1
	0x026B4904 B.EQ 0x26B4944
	0x026B4908 SUBS X9, X9, 0x1
	0x026B490C ADD X10, X10, 0x10
	0x026B4910 B.NE 0x26B48FC
	0x026B4914 MOVZ W2, 0x1
	0x026B4918 MOV X0, X21
	0x026B491C BL 0x1C5C788
	0x026B4920 B 0x26B4954
	0x026B4924 LDP X20, X19, [X31 + 0x50]
	0x026B4928 LDP X22, X21, [X31 + 0x40]
	0x026B492C LDP X24, X23, [X31 + 0x30]
	0x026B4930 LDP X26, X25, [X31 + 0x20]
	0x026B4934 LDR X30, [X31 + 0x18]
	0x026B4938 LDP D9, D8, [X31 + 0x8]
	0x026B493C LDR V10, [X31], #0x60
	0x026B4940 RET
	0x026B4944 LDR W9, [X10]
	0x026B4948 ADD W9, W9, 0x1
	0x026B494C ADD X8, X8, W9, 0x4, SXTW
	0x026B4950 ADD X0, X8, 0x138
	0x026B4954 LDP X8, X1, [X0]
	0x026B4958 MOV X0, X21
	0x026B495C MOV V0.16B, V10.16B
	0x026B4960 MOV V1.16B, V9.16B
	0x026B4964 MOV V2.16B, V8.16B
	0x026B4968 BLR X8
	0x026B496C LDR X0, [X19 + 0x3D8]
	0x026B4970 CBZ X0, 0x26B4A2C
	0x026B4974 MOV X1, X31
	0x026B4978 BL 0x3DF6948
	0x026B497C LDR X0, [X24]
	0x026B4980 LDR X21, [X19 + 0x3C8]
	0x026B4984 BL 0x1C16F10
	0x026B4988 LDR X8, [X20 + 0x20]
	0x026B498C MOV X1, X19
	0x026B4990 MOV X3, X31
	0x026B4994 MOV X22, X0
	0x026B4998 LDR X8, [X8 + 0xC0]
	0x026B499C LDR X2, [X8 + 0xA0]
	0x026B49A0 BL 0x2D0E824
	0x026B49A4 CBZ X21, 0x26B4A2C
	0x026B49A8 LDR X3, [X23]
	0x026B49AC MOV X0, X21
	0x026B49B0 MOV X1, X22
	0x026B49B4 MOV W2, W31
	0x026B49B8 BL 0x21A18B4
	0x026B49BC STR X31, [X19 + 0x3D8]
	0x026B49C0 LDR X8, [X20 + 0x20]
	0x026B49C4 LDR X8, [X8 + 0xC0]
	0x026B49C8 LDR X0, [X8 + 0x70]
	0x026B49CC LDRB W8, [X0 + 0x135]
	0x026B49D0 TBNZ X8, 0x0, 0x26B49D8
	0x026B49D4 BL 0x1C5C684
	0x026B49D8 LDR W8, [X0 + 0xE0]
	0x026B49DC CBNZ W8, 0x26B49E4
	0x026B49E0 BL 0x1C16DFC
	0x026B49E4 LDR X8, [X20 + 0x20]
	0x026B49E8 LDR X8, [X8 + 0xC0]
	0x026B49EC LDR X0, [X8 + 0x70]
	0x026B49F0 LDRB W8, [X0 + 0x135]
	0x026B49F4 TBNZ X8, 0x0, 0x26B49FC
	0x026B49F8 BL 0x1C5C684
	0x026B49FC LDR X8, [X0 + 0xB8]
	0x026B4A00 MOV X0, X19
	0x026B4A04 LDP X20, X19, [X31 + 0x50]
	0x026B4A08 LDP X22, X21, [X31 + 0x40]
	0x026B4A0C LDR X1, [X8 + 0x38]
	0x026B4A10 LDP X24, X23, [X31 + 0x30]
	0x026B4A14 LDP X26, X25, [X31 + 0x20]
	0x026B4A18 LDR X30, [X31 + 0x18]
	0x026B4A1C LDP D9, D8, [X31 + 0x8]
	0x026B4A20 MOV X2, X31
	0x026B4A24 LDR V10, [X31], #0x60
	0x026B4A28 B 0x3DF1B54
	0x026B4A2C BL 0x1C16F20
	0x026B4A30 STR X30, [X31 - 0x30]!
	0x026B4A34 STP X22, X21, [X31 + 0x10]
	0x026B4A38 STP X20, X19, [X31 + 0x20]
	0x026B4A3C ADRP X20, 0x1D26000
	0x026B4A40 ADRP X21, 0x1A69000
	0x026B4A44 LDRB W8, [X20 + 0x3E3]
	0x026B4A48 LDR X21, [X21 + 0x6A8]
	0x026B4A4C MOV X19, X0
	0x026B4A50 TBNZ X8, 0x0, 0x26B4AB0
	0x026B4A54 ADRP X0, 0x1A69000
	0x026B4A58 LDR X0, [X0 + 0x678]
	0x026B4A5C BL 0x1C16CF4
	0x026B4A60 ADRP X0, 0x1A68000
	0x026B4A64 LDR X0, [X0 + 0xEC8]
	0x026B4A68 BL 0x1C16CF4
	0x026B4A6C ADRP X0, 0x1A69000
	0x026B4A70 LDR X0, [X0 + 0x6B0]
	0x026B4A74 BL 0x1C16CF4
	0x026B4A78 ADRP X0, 0x1A69000
	0x026B4A7C LDR X0, [X0 + 0x6B8]
	0x026B4A80 BL 0x1C16CF4
	0x026B4A84 ADRP X0, 0x1A69000
	0x026B4A88 LDR X0, [X0 + 0x6C0]
	0x026B4A8C BL 0x1C16CF4
	0x026B4A90 ADRP X0, 0x1A69000
	0x026B4A94 LDR X0, [X0 + 0x6A8]
	0x026B4A98 BL 0x1C16CF4
	0x026B4A9C ADRP X0, 0x1A69000
	0x026B4AA0 LDR X0, [X0 + 0x6C8]
	0x026B4AA4 BL 0x1C16CF4
	0x026B4AA8 MOVZ W8, 0x1
	0x026B4AAC STRB W8, [X20 + 0x3E3]
	0x026B4AB0 LDR X20, [X21]
	0x026B4AB4 LDR X0, [X19 + 0x20]!
	0x026B4AB8 LDRB W8, [X0 + 0x135]
	0x026B4ABC TBNZ X8, 0x0, 0x26B4AC4
	0x026B4AC0 BL 0x1C5C684
	0x026B4AC4 LDR X8, [X0 + 0xC0]
	0x026B4AC8 LDR X0, [X8 + 0x98]
	0x026B4ACC LDRB W8, [X0 + 0x135]
	0x026B4AD0 TBNZ X8, 0x0, 0x26B4AD8
	0x026B4AD4 BL 0x1C5C684
	0x026B4AD8 LDR X8, [X0 + 0xB8]
	0x026B4ADC STR X20, [X8]
	0x026B4AE0 LDR X0, [X19]
	0x026B4AE4 LDRB W8, [X0 + 0x135]
	0x026B4AE8 TBNZ X8, 0x0, 0x26B4AF0
	0x026B4AEC BL 0x1C5C684
	0x026B4AF0 LDR X8, [X0 + 0xC0]
	0x026B4AF4 ADRP X21, 0x1A68000
	0x026B4AF8 LDR X0, [X8 + 0x98]
	0x026B4AFC LDRB W8, [X0 + 0x135]
	0x026B4B00 LDR X21, [X21 + 0xEC8]
	0x026B4B04 TBNZ X8, 0x0, 0x26B4B0C
	0x026B4B08 BL 0x1C5C684
	0x026B4B0C LDR X0, [X21]
	0x026B4B10 LDR W8, [X0 + 0xE0]
	0x026B4B14 CBNZ W8, 0x26B4B20
	0x026B4B18 BL 0x1C16DFC
	0x026B4B1C LDR X0, [X21]
	0x026B4B20 LDR X8, [X19]
	0x026B4B24 LDR X9, [X0 + 0xB8]
	0x026B4B28 LDRB W10, [X8 + 0x135]
	0x026B4B2C LDR X20, [X9]
	0x026B4B30 TBNZ X10, 0x0, 0x26B4B40
	0x026B4B34 MOV X0, X8
	0x026B4B38 BL 0x1C5C684
	0x026B4B3C MOV X8, X0
	0x026B4B40 LDR X8, [X8 + 0xC0]
	0x026B4B44 LDR X0, [X8 + 0x98]
	0x026B4B48 LDRB W8, [X0 + 0x135]
	0x026B4B4C TBNZ X8, 0x0, 0x26B4B54
	0x026B4B50 BL 0x1C5C684
	0x026B4B54 LDR X8, [X0 + 0xB8]
	0x026B4B58 MOV X0, X20
	0x026B4B5C MOV X2, X31

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x1D27000
	012 Move W8, [X22+989]
	013 Move X21, X3
	014 Move W20, W2
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x1A6A000
	021 Move X0, [X0+1576]
	022 Call 0x1C17CF4
	023 Move X0, 0x1A6A000
	024 Move X0, [X0+1672]
	025 Call 0x1C17CF4
	026 Move X0, 0x1A40000
	027 Move X0, [X0+1448]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+989], W8
	031 Move X0, [X19+968]
	032 Compare X0, 0
	033 JumpIfEqual {278}
	034 Move X1, X31
	035 Call TextElement.get_selection, X0
	036 Compare X0, 0
	037 JumpIfEqual {278}
	038 Move X10, 0x1A6A000
	039 Move X8, [X0]
	040 Move X10, [X10+1576]
	041 Move X22, X0
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move X1, [X10]
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move W2, 4
	053 Move X0, X22
	054 Call 0x1C5D788
	055 Move W9, [X10]
	056 Add W9, W9, 4
	057 Add X8, X8, W9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X0, X22
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move TEMP, X0
	064 And TEMP, TEMP, -2147483648
	065 Compare TEMP, -2147483648
	066 JumpIfEqual {224}
	067 Move X0, [X19+976]
	068 Compare X0, 0
	069 JumpIfEqual {111}
	070 Move X1, X31
	071 Call ScrollView.get_scrollOffset, X0
	072 Move X0, [X19+976]
	073 Compare X0, 0
	074 JumpIfEqual {278}
	075 Move X1, X31
	076 Move V8, V0
	077 Call ScrollView.get_scrollOffset, X0
	078 Move X8, [X19+976]
	079 Compare X8, 0
	080 JumpIfEqual {278}
	081 Move X0, [X8+1048]
	082 Compare X0, 0
	083 JumpIfEqual {278}
	084 Move X1, X31
	085 Move V9, V1
	086 Call VisualElement.get_layout, X0
	087 Move X8, [X21+32]
	088 And W2, W20, 1
	089 Move X0, X19
	090 Move V0, V8
	091 Move X8, [X8+192]
	092 Move V1, V9
	093 Move W1, W31
	094 Move X3, [X8+224]
	095 Call 0x26B4B60, X0, V0, V1, V2, X1, X2
	096 Move X0, [X19+976]
	097 Move [X19+996], S0
	098 Move [X19+1000], S1
	099 Compare X0, 0
	100 JumpIfEqual {278}
	101 Move X1, X31
	102 Call ScrollView.set_scrollOffset, X0, X1
	103 Move X0, [X19+976]
	104 Compare X0, 0
	105 JumpIfEqual {278}
	106 Move V8, [X19+996]
	107 Move X1, X31
	108 Call ScrollView.get_scrollOffset, X0
	109 NotImplemented "Instruction FCMP not yet implemented."
	110 Move W8, 1
	111 Move X0, [X19+968]
	112 Compare X0, 0
	113 JumpIfEqual {278}
	114 Move X1, X31
	115 Call VisualElement.get_transform, X0
	116 Compare X0, 0
	117 JumpIfEqual {278}
	118 Move X23, 0x1A6A000
	119 Move X8, [X0]
	120 Move X23, [X23+1672]
	121 Move X22, X0
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move X0, X22
	133 Move W2, W31
	134 Call 0x1C5D788
	135 Move X0, [X19+976]
	136 Compare X0, 0
	137 JumpIfEqual {278}
	138 Move V8, [X19+1000]
	139 Move X1, X31
	140 Call ScrollView.get_scrollOffset, X0
	141 NotImplemented "Instruction FCMP not yet implemented."
	142 NotImplemented "Instruction CSET not yet implemented."
	143 Move [X19+1004], W8
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Add X8, X8, X9
	146 Add X0, X8, 312
	147 Move X8, [X0]
	148 Move X1, [X0+8]
	149 Move X0, X22
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move V9, [X19+996]
	152 Move V10, [X19+1000]
	153 Move X0, X19
	154 Move X1, X31
	155 Move V8, V2
	156 Call VisualElement.get_contentRect, X0
	157 Move X8, [X21+32]
	158 And W2, W20, 1
	159 Move X0, X19
	160 Move V0, V9
	161 Move X8, [X8+192]
	162 Move V1, V10
	163 Move W1, W31
	164 Move X3, [X8+224]
	165 Call 0x26B4B60, X0, V0, V1, V2, X1, X2
	166 Move X0, [X19+968]
	167 Move [X19+996], S0
	168 Move [X19+1000], S1
	169 Compare X0, 0
	170 JumpIfEqual {278}
	171 Move X1, X31
	172 Move V9, V1
	173 Call VisualElement.get_contentRect, X0
	174 Move X0, X19
	175 Move X1, X31
	176 Move V10, V3
	177 Call VisualElement.get_contentRect, X0
	178 Move X8, 0x1A40000
	179 Move X8, [X8+1448]
	180 Move V11, V3
	181 Move X0, [X8]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move X0, [X19+968]
	187 NotImplemented "Instruction FABD not yet implemented."
	188 NotImplemented "Instruction FCMP not yet implemented."
	189 NotImplemented "Instruction FCSEL not yet implemented."
	190 Compare X0, 0
	191 JumpIfEqual {278}
	192 Move V10, [X19+996]
	193 Move X1, X31
	194 Call VisualElement.get_transform, X0
	195 Compare X0, 0
	196 JumpIfEqual {278}
	197 Move X8, [X0]
	198 Move X1, [X23]
	199 Move X20, X0
	200 NotImplemented "Instruction LDRH not yet implemented."
	201 Compare X9, 0
	202 JumpIfEqual {209}
	203 Move X10, [X8+176]
	204 Add X10, X10, 8
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Subtract X9, X9, 1
	208 Add X10, X10, 16
	209 Move X0, X20
	210 Move W2, W31
	211 Call 0x1C5D788
	212 NotImplemented "Instruction LDRSW not yet implemented."
	213 Add X8, X8, X9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X1, [X0+8]
	217 Move X0, X20
	218 NotImplemented "Instruction FNEG not yet implemented."
	219 NotImplemented "Instruction FNEG not yet implemented."
	220 NotImplemented "Instruction BLR not yet implemented."
	221 NotImplemented "Instruction FCMP not yet implemented."
	222 NotImplemented "Instruction FCMP not yet implemented."
	223 NotImplemented "Instruction FCMP not yet implemented."
	224 Move X20, [X31+64]
	225 Move X19, [X31+72]
	226 Move X22, [X31+48]
	227 Move X21, [X31+56]
	228 Move X30, [X31+32]
	229 Move X23, [X31+40]
	230 Move D9, [X31+16]
	231 Move D8, [X31+24]
	232 Move D11, [X31+80]
	233 Move D10, [X31+88]
	234 Return 
	235 Move X0, [X19+968]
	236 Compare X0, 0
	237 JumpIfEqual {278}
	238 Move X1, X31
	239 Call VisualElement.get_transform, X0
	240 Compare X0, 0
	241 JumpIfEqual {278}
	242 Move X8, [X0]
	243 Move X1, [X23]
	244 Move X19, X0
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 Compare X9, 0
	247 JumpIfEqual {254}
	248 Move X10, [X8+176]
	249 Add X10, X10, 8
	250 NotImplemented "Instruction LDUR not yet implemented."
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Subtract X9, X9, 1
	253 Add X10, X10, 16
	254 Move W2, 1
	255 Move X0, X19
	256 Call 0x1C5D788
	257 Move W9, [X10]
	258 Add W9, W9, 1
	259 Add X8, X8, W9
	260 Add X0, X8, 312
	261 Move X2, [X0]
	262 Move X1, [X0+8]
	263 Move X0, X19
	264 Move V1, V9
	265 Move V2, V8
	266 Move X20, [X31+64]
	267 Move X19, [X31+72]
	268 Move X22, [X31+48]
	269 Move X21, [X31+56]
	270 Move X30, [X31+32]
	271 Move X23, [X31+40]
	272 Move D9, [X31+16]
	273 Move D8, [X31+24]
	274 Move V0, V10
	275 Move D11, [X31+80]
	276 Move D10, [X31+88]
	277 CallNoReturn X2
	278 Call 0x1C17F20

Method: UnityEngine.Vector2 GetScrollOffset(System.Single xOffset, System.Single yOffset, System.Single contentViewportWidth, System.Boolean isBackspace, System.Boolean widthChanged)

Disassembly:
	0x026B4B60 LDR X1, [X8]
	0x026B4B64 BL 0x321B938
	0x026B4B68 LDR X8, [X19]
	0x026B4B6C MOV X20, X0
	0x026B4B70 LDRB W9, [X8 + 0x135]
	0x026B4B74 TBNZ X9, 0x0, 0x26B4B84
	0x026B4B78 MOV X0, X8
	0x026B4B7C BL 0x1C5C684
	0x026B4B80 MOV X8, X0
	0x026B4B84 LDR X8, [X8 + 0xC0]
	0x026B4B88 LDR X0, [X8 + 0x98]
	0x026B4B8C LDRB W8, [X0 + 0x135]
	0x026B4B90 TBNZ X8, 0x0, 0x26B4B98
	0x026B4B94 BL 0x1C5C684
	0x026B4B98 LDR X8, [X0 + 0xB8]
	0x026B4B9C STR X20, [X8 + 0x8]
	0x026B4BA0 LDR X0, [X19]
	0x026B4BA4 LDRB W8, [X0 + 0x135]
	0x026B4BA8 TBNZ X8, 0x0, 0x26B4BB0
	0x026B4BAC BL 0x1C5C684
	0x026B4BB0 LDR X8, [X0 + 0xC0]
	0x026B4BB4 LDR X0, [X8 + 0x98]
	0x026B4BB8 LDRB W8, [X0 + 0x135]
	0x026B4BBC TBNZ X8, 0x0, 0x26B4BC4
	0x026B4BC0 BL 0x1C5C684
	0x026B4BC4 LDR X8, [X21]
	0x026B4BC8 LDR X0, [X19]
	0x026B4BCC LDR X8, [X8 + 0xB8]
	0x026B4BD0 LDRB W9, [X0 + 0x135]
	0x026B4BD4 LDR X20, [X8]
	0x026B4BD8 TBNZ X9, 0x0, 0x26B4BE0
	0x026B4BDC BL 0x1C5C684
	0x026B4BE0 LDR X8, [X0 + 0xC0]
	0x026B4BE4 ADRP X22, 0x1A69000
	0x026B4BE8 LDR X0, [X8 + 0x98]
	0x026B4BEC LDRB W8, [X0 + 0x135]
	0x026B4BF0 LDR X22, [X22 + 0x6B8]
	0x026B4BF4 TBNZ X8, 0x0, 0x26B4BFC
	0x026B4BF8 BL 0x1C5C684
	0x026B4BFC LDR X8, [X0 + 0xB8]
	0x026B4C00 LDR X2, [X22]
	0x026B4C04 MOV X0, X20
	0x026B4C08 MOV X3, X31
	0x026B4C0C LDR X1, [X8]
	0x026B4C10 BL 0x32274B8
	0x026B4C14 LDR X8, [X19]
	0x026B4C18 MOV X20, X0
	0x026B4C1C LDRB W9, [X8 + 0x135]
	0x026B4C20 TBNZ X9, 0x0, 0x26B4C30
	0x026B4C24 MOV X0, X8
	0x026B4C28 BL 0x1C5C684
	0x026B4C2C MOV X8, X0
	0x026B4C30 LDR X8, [X8 + 0xC0]
	0x026B4C34 LDR X0, [X8 + 0x98]
	0x026B4C38 LDRB W8, [X0 + 0x135]
	0x026B4C3C TBNZ X8, 0x0, 0x26B4C44
	0x026B4C40 BL 0x1C5C684
	0x026B4C44 LDR X8, [X0 + 0xB8]
	0x026B4C48 STR X20, [X8 + 0x10]
	0x026B4C4C LDR X0, [X19]
	0x026B4C50 LDRB W8, [X0 + 0x135]
	0x026B4C54 TBNZ X8, 0x0, 0x26B4C5C
	0x026B4C58 BL 0x1C5C684
	0x026B4C5C LDR X8, [X0 + 0xC0]
	0x026B4C60 LDR X0, [X8 + 0x98]
	0x026B4C64 LDRB W8, [X0 + 0x135]
	0x026B4C68 TBNZ X8, 0x0, 0x26B4C70
	0x026B4C6C BL 0x1C5C684
	0x026B4C70 LDR X8, [X21]
	0x026B4C74 LDR X0, [X19]
	0x026B4C78 LDR X8, [X8 + 0xB8]
	0x026B4C7C LDRB W9, [X0 + 0x135]
	0x026B4C80 LDR X20, [X8]
	0x026B4C84 TBNZ X9, 0x0, 0x26B4C8C
	0x026B4C88 BL 0x1C5C684
	0x026B4C8C LDR X8, [X0 + 0xC0]
	0x026B4C90 ADRP X22, 0x1A69000
	0x026B4C94 LDR X0, [X8 + 0x98]
	0x026B4C98 LDRB W8, [X0 + 0x135]
	0x026B4C9C LDR X22, [X22 + 0x6B0]
	0x026B4CA0 TBNZ X8, 0x0, 0x26B4CA8
	0x026B4CA4 BL 0x1C5C684
	0x026B4CA8 LDR X8, [X0 + 0xB8]
	0x026B4CAC LDR X2, [X22]
	0x026B4CB0 MOV X0, X20
	0x026B4CB4 MOV X3, X31
	0x026B4CB8 LDR X1, [X8]
	0x026B4CBC BL 0x32274B8
	0x026B4CC0 LDR X8, [X19]
	0x026B4CC4 MOV X20, X0
	0x026B4CC8 LDRB W9, [X8 + 0x135]
	0x026B4CCC TBNZ X9, 0x0, 0x26B4CDC
	0x026B4CD0 MOV X0, X8
	0x026B4CD4 BL 0x1C5C684
	0x026B4CD8 MOV X8, X0
	0x026B4CDC LDR X8, [X8 + 0xC0]
	0x026B4CE0 LDR X0, [X8 + 0x98]
	0x026B4CE4 LDRB W8, [X0 + 0x135]
	0x026B4CE8 TBNZ X8, 0x0, 0x26B4CF0
	0x026B4CEC BL 0x1C5C684
	0x026B4CF0 LDR X8, [X0 + 0xB8]
	0x026B4CF4 STR X20, [X8 + 0x18]
	0x026B4CF8 LDR X0, [X19]
	0x026B4CFC LDRB W8, [X0 + 0x135]
	0x026B4D00 TBNZ X8, 0x0, 0x26B4D08
	0x026B4D04 BL 0x1C5C684
	0x026B4D08 LDR X8, [X0 + 0xC0]
	0x026B4D0C LDR X0, [X8 + 0x98]
	0x026B4D10 LDRB W8, [X0 + 0x135]
	0x026B4D14 TBNZ X8, 0x0, 0x26B4D1C
	0x026B4D18 BL 0x1C5C684
	0x026B4D1C LDR X8, [X21]
	0x026B4D20 LDR X0, [X19]
	0x026B4D24 LDR X8, [X8 + 0xB8]
	0x026B4D28 LDRB W9, [X0 + 0x135]
	0x026B4D2C LDR X20, [X8]
	0x026B4D30 TBNZ X9, 0x0, 0x26B4D38
	0x026B4D34 BL 0x1C5C684
	0x026B4D38 LDR X8, [X0 + 0xC0]
	0x026B4D3C ADRP X22, 0x1A69000
	0x026B4D40 LDR X0, [X8 + 0x98]
	0x026B4D44 LDRB W8, [X0 + 0x135]
	0x026B4D48 LDR X22, [X22 + 0x6C0]
	0x026B4D4C TBNZ X8, 0x0, 0x26B4D54
	0x026B4D50 BL 0x1C5C684
	0x026B4D54 LDR X8, [X0 + 0xB8]
	0x026B4D58 LDR X2, [X22]
	0x026B4D5C MOV X0, X20
	0x026B4D60 MOV X3, X31
	0x026B4D64 LDR X1, [X8]
	0x026B4D68 BL 0x32274B8
	0x026B4D6C LDR X8, [X19]
	0x026B4D70 MOV X20, X0
	0x026B4D74 LDRB W9, [X8 + 0x135]
	0x026B4D78 TBNZ X9, 0x0, 0x26B4D88
	0x026B4D7C MOV X0, X8
	0x026B4D80 BL 0x1C5C684
	0x026B4D84 MOV X8, X0
	0x026B4D88 LDR X8, [X8 + 0xC0]
	0x026B4D8C LDR X0, [X8 + 0x98]
	0x026B4D90 LDRB W8, [X0 + 0x135]
	0x026B4D94 TBNZ X8, 0x0, 0x26B4D9C
	0x026B4D98 BL 0x1C5C684
	0x026B4D9C LDR X8, [X0 + 0xB8]
	0x026B4DA0 STR X20, [X8 + 0x20]
	0x026B4DA4 LDR X0, [X19]
	0x026B4DA8 LDRB W8, [X0 + 0x135]
	0x026B4DAC TBNZ X8, 0x0, 0x26B4DB4
	0x026B4DB0 BL 0x1C5C684
	0x026B4DB4 LDR X8, [X0 + 0xC0]
	0x026B4DB8 LDR X0, [X8 + 0x98]
	0x026B4DBC LDRB W8, [X0 + 0x135]
	0x026B4DC0 TBNZ X8, 0x0, 0x26B4DC8
	0x026B4DC4 BL 0x1C5C684
	0x026B4DC8 LDR X8, [X21]
	0x026B4DCC LDR X0, [X19]
	0x026B4DD0 LDR X8, [X8 + 0xB8]
	0x026B4DD4 LDRB W9, [X0 + 0x135]
	0x026B4DD8 LDR X20, [X8]
	0x026B4DDC TBNZ X9, 0x0, 0x26B4DE4
	0x026B4DE0 BL 0x1C5C684
	0x026B4DE4 LDR X8, [X0 + 0xC0]
	0x026B4DE8 ADRP X21, 0x1A69000
	0x026B4DEC LDR X0, [X8 + 0x98]
	0x026B4DF0 LDRB W8, [X0 + 0x135]
	0x026B4DF4 LDR X21, [X21 + 0x6C8]
	0x026B4DF8 TBNZ X8, 0x0, 0x26B4E00
	0x026B4DFC BL 0x1C5C684
	0x026B4E00 LDR X8, [X0 + 0xB8]
	0x026B4E04 LDR X2, [X21]
	0x026B4E08 MOV X0, X20
	0x026B4E0C MOV X3, X31
	0x026B4E10 LDR X1, [X8]
	0x026B4E14 BL 0x32274B8
	0x026B4E18 LDR X8, [X19]
	0x026B4E1C MOV X20, X0
	0x026B4E20 LDRB W9, [X8 + 0x135]
	0x026B4E24 TBNZ X9, 0x0, 0x26B4E34
	0x026B4E28 MOV X0, X8
	0x026B4E2C BL 0x1C5C684
	0x026B4E30 MOV X8, X0
	0x026B4E34 LDR X8, [X8 + 0xC0]
	0x026B4E38 LDR X0, [X8 + 0x98]
	0x026B4E3C LDRB W8, [X0 + 0x135]
	0x026B4E40 TBNZ X8, 0x0, 0x26B4E48
	0x026B4E44 BL 0x1C5C684
	0x026B4E48 LDR X8, [X0 + 0xB8]
	0x026B4E4C STR X20, [X8 + 0x28]
	0x026B4E50 LDR X0, [X19]
	0x026B4E54 LDRB W8, [X0 + 0x135]
	0x026B4E58 TBNZ X8, 0x0, 0x26B4E60
	0x026B4E5C BL 0x1C5C684
	0x026B4E60 LDR X8, [X0 + 0xC0]
	0x026B4E64 ADRP X21, 0x1A69000
	0x026B4E68 LDR X0, [X8 + 0x98]
	0x026B4E6C LDRB W8, [X0 + 0x135]
	0x026B4E70 LDR X21, [X21 + 0x678]
	0x026B4E74 TBNZ X8, 0x0, 0x26B4E7C
	0x026B4E78 BL 0x1C5C684
	0x026B4E7C LDR X0, [X21]
	0x026B4E80 LDR W8, [X0 + 0xE0]
	0x026B4E84 CBNZ W8, 0x26B4E90
	0x026B4E88 BL 0x1C16DFC
	0x026B4E8C LDR X0, [X21]
	0x026B4E90 LDR X8, [X19]
	0x026B4E94 LDR X9, [X0 + 0xB8]
	0x026B4E98 LDRB W10, [X8 + 0x135]
	0x026B4E9C LDR X20, [X9 + 0x10]
	0x026B4EA0 TBNZ X10, 0x0, 0x26B4EB0
	0x026B4EA4 MOV X0, X8
	0x026B4EA8 BL 0x1C5C684
	0x026B4EAC MOV X8, X0
	0x026B4EB0 LDR X8, [X8 + 0xC0]
	0x026B4EB4 LDR X0, [X8 + 0x98]
	0x026B4EB8 LDRB W8, [X0 + 0x135]
	0x026B4EBC TBNZ X8, 0x0, 0x26B4EC4
	0x026B4EC0 BL 0x1C5C684
	0x026B4EC4 LDR X8, [X0 + 0xB8]
	0x026B4EC8 MOV X0, X20
	0x026B4ECC MOV X2, X31
	0x026B4ED0 LDR X1, [X8]
	0x026B4ED4 BL 0x321B938
	0x026B4ED8 LDR X8, [X19]
	0x026B4EDC MOV X20, X0
	0x026B4EE0 LDRB W9, [X8 + 0x135]
	0x026B4EE4 TBNZ X9, 0x0, 0x26B4EF4
	0x026B4EE8 MOV X0, X8
	0x026B4EEC BL 0x1C5C684
	0x026B4EF0 MOV X8, X0
	0x026B4EF4 LDR X8, [X8 + 0xC0]
	0x026B4EF8 LDR X0, [X8 + 0x98]
	0x026B4EFC LDRB W8, [X0 + 0x135]
	0x026B4F00 TBNZ X8, 0x0, 0x26B4F08
	0x026B4F04 BL 0x1C5C684
	0x026B4F08 LDR X8, [X0 + 0xB8]
	0x026B4F0C STR X20, [X8 + 0x30]
	0x026B4F10 LDR X0, [X19]
	0x026B4F14 LDRB W8, [X0 + 0x135]
	0x026B4F18 TBNZ X8, 0x0, 0x26B4F20
	0x026B4F1C BL 0x1C5C684
	0x026B4F20 LDR X8, [X0 + 0xC0]
	0x026B4F24 LDR X0, [X8 + 0x98]
	0x026B4F28 LDRB W8, [X0 + 0x135]
	0x026B4F2C TBNZ X8, 0x0, 0x26B4F34
	0x026B4F30 BL 0x1C5C684
	0x026B4F34 LDR X8, [X21]
	0x026B4F38 LDR X0, [X19]
	0x026B4F3C LDR X8, [X8 + 0xB8]
	0x026B4F40 LDRB W9, [X0 + 0x135]
	0x026B4F44 LDR X20, [X8 + 0x18]
	0x026B4F48 TBNZ X9, 0x0, 0x26B4F50
	0x026B4F4C BL 0x1C5C684
	0x026B4F50 LDR X8, [X0 + 0xC0]
	0x026B4F54 LDR X0, [X8 + 0x98]
	0x026B4F58 LDRB W8, [X0 + 0x135]
	0x026B4F5C TBNZ X8, 0x0, 0x26B4F64
	0x026B4F60 BL 0x1C5C684
	0x026B4F64 LDR X8, [X0 + 0xB8]
	0x026B4F68 MOV X0, X20
	0x026B4F6C MOV X2, X31
	0x026B4F70 LDR X1, [X8]
	0x026B4F74 BL 0x321B938
	0x026B4F78 LDR X8, [X19]
	0x026B4F7C MOV X20, X0
	0x026B4F80 LDRB W9, [X8 + 0x135]
	0x026B4F84 TBNZ X9, 0x0, 0x26B4F94
	0x026B4F88 MOV X0, X8
	0x026B4F8C BL 0x1C5C684
	0x026B4F90 MOV X8, X0
	0x026B4F94 LDR X8, [X8 + 0xC0]
	0x026B4F98 LDR X0, [X8 + 0x98]
	0x026B4F9C LDRB W8, [X0 + 0x135]
	0x026B4FA0 TBNZ X8, 0x0, 0x26B4FA8
	0x026B4FA4 BL 0x1C5C684
	0x026B4FA8 LDR X8, [X0 + 0xB8]
	0x026B4FAC STR X20, [X8 + 0x38]
	0x026B4FB0 LDR X0, [X19]
	0x026B4FB4 LDRB W8, [X0 + 0x135]
	0x026B4FB8 TBNZ X8, 0x0, 0x26B4FC0
	0x026B4FBC BL 0x1C5C684
	0x026B4FC0 LDR X8, [X0 + 0xC0]
	0x026B4FC4 LDR X0, [X8 + 0x98]
	0x026B4FC8 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-112], D15
	002 Move [X31-104], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X21, 0x1D27000
	016 Move W8, [X21+990]
	017 Move W20, W2
	018 Move V13, V2
	019 Move V8, V1
	020 Move V9, V0
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {37}
	026 Move X0, 0x1A6A000
	027 Move X0, [X0+1584]
	028 Call 0x1C17CF4
	029 Move X0, 0x1A6A000
	030 Move X0, [X0+1576]
	031 Call 0x1C17CF4
	032 Move X0, 0x1A40000
	033 Move X0, [X0+1448]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+990], W8
	037 Move X0, [X19+968]
	038 Compare X0, 0
	039 JumpIfEqual {306}
	040 Move X1, X31
	041 Call TextElement.get_selection, X0
	042 Compare X0, 0
	043 JumpIfEqual {306}
	044 Move X23, 0x1A6A000
	045 Move X8, [X0]
	046 Move X23, [X23+1576]
	047 Move X21, X0
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move X1, [X23]
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move W2, 19
	059 Move X0, X21
	060 Call 0x1C5D788
	061 Move W9, [X10]
	062 Add W9, W9, 19
	063 Add X8, X8, W9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X1, [X0+8]
	067 Move X0, X21
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X0, [X19+968]
	070 Compare X0, 0
	071 JumpIfEqual {306}
	072 Move X1, X31
	073 Move V10, V0
	074 Move V11, V1
	075 Call TextElement.get_selection, X0
	076 Compare X0, 0
	077 JumpIfEqual {306}
	078 Move X8, [X0]
	079 Move X22, 0x1A40000
	080 Move X1, [X23]
	081 Move X21, X0
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Move X22, [X22+1448]
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move W2, 21
	093 Move X0, X21
	094 Call 0x1C5D788
	095 Move W9, [X10]
	096 Add W9, W9, 21
	097 Add X8, X8, W9
	098 Add X0, X8, 312
	099 Move X8, [X0]
	100 Move X1, [X0+8]
	101 Move X0, X21
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X0, [X22]
	104 Move V12, [X19+1008]
	105 Move V14, V0
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X8, -29134848
	111 Move V15, [X8+512]
	112 NotImplemented "Instruction FABD not yet implemented."
	113 NotImplemented "Instruction FCMP not yet implemented."
	114 Move W8, 1
	115 Move W8, [X19+1004]
	116 And W9, W20, 1
	117 Or W8, W8, W9
	118 Move V12, V9
	119 Compare W8, 0
	120 JumpIfEqual {142}
	121 NotImplemented "Instruction FCMP not yet implemented."
	122 NotImplemented "Instruction CSET not yet implemented."
	123 And W8, W8, W20
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {137}
	128 Add S0, S9, S13
	129 Subtract S0, S0, S14
	130 NotImplemented "Instruction FCMP not yet implemented."
	131 Move S0, 5
	132 Add S0, S9, S0
	133 NotImplemented "Instruction FCMP not yet implemented."
	134 Move V12, V9
	135 Move S0, -5
	136 Add S0, S10, S0
	137 Add S0, S10, S14
	138 Subtract S0, S0, S13
	139 NotImplemented "Instruction FRINTP not yet implemented."
	140 Move S1, W31
	141 NotImplemented "Instruction FMAXNM not yet implemented."
	142 Move X0, [X19+968]
	143 Compare X0, 0
	144 JumpIfEqual {306}
	145 Move X1, X31
	146 Call TextElement.get_edition, X0
	147 Compare X0, 0
	148 JumpIfEqual {306}
	149 Move X10, 0x1A6A000
	150 Move X8, [X0]
	151 Move X10, [X10+1584]
	152 Move X20, X0
	153 NotImplemented "Instruction LDRH not yet implemented."
	154 Move X1, [X10]
	155 Compare X9, 0
	156 JumpIfEqual {163}
	157 Move X10, [X8+176]
	158 Add X10, X10, 8
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Subtract X9, X9, 1
	162 Add X10, X10, 16
	163 Move X0, X20
	164 Move W2, W31
	165 Call 0x1C5D788
	166 NotImplemented "Instruction LDRSW not yet implemented."
	167 Add X8, X8, X9
	168 Add X0, X8, 312
	169 Move X8, [X0]
	170 Move X1, [X0+8]
	171 Move X0, X20
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move V13, V8
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfNotEqual {264}
	178 Move X0, [X22]
	179 Move V13, [X19+1012]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 NotImplemented "Instruction FABD not yet implemented."
	185 NotImplemented "Instruction FCMP not yet implemented."
	186 Move W8, [X19+1004]
	187 Move V13, V8
	188 Compare W8, 0
	189 JumpIfEqual {264}
	190 Move X0, X19
	191 Move X1, X31
	192 Call VisualElement.get_contentRect, X0
	193 Add S0, S3, S8
	194 NotImplemented "Instruction FCMP not yet implemented."
	195 Move X0, X19
	196 Move X1, X31
	197 Call VisualElement.get_contentRect, X0
	198 Subtract S13, S11, S3
	199 Move X0, [X19+968]
	200 Compare X0, 0
	201 JumpIfEqual {306}
	202 Move X1, X31
	203 Call TextElement.get_selection, X0
	204 Compare X0, 0
	205 JumpIfEqual {306}
	206 Move X8, [X0]
	207 Move X1, [X23]
	208 Move X20, X0
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Compare X9, 0
	211 JumpIfEqual {218}
	212 Move X10, [X8+176]
	213 Add X10, X10, 8
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract X9, X9, 1
	217 Add X10, X10, 16
	218 Move W2, 20
	219 Move X0, X20
	220 Call 0x1C5D788
	221 Move W9, [X10]
	222 Add W9, W9, 20
	223 Add X8, X8, W9
	224 Add X0, X8, 312
	225 Move X8, [X0]
	226 Move X1, [X0+8]
	227 Move X0, X20
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Add S0, S0, S8
	230 Add S0, S0, S15
	231 NotImplemented "Instruction FCMP not yet implemented."
	232 Move V13, V8
	233 Move X0, [X19+968]
	234 Compare X0, 0
	235 JumpIfEqual {306}
	236 Move X1, X31
	237 Call TextElement.get_selection, X0
	238 Compare X0, 0
	239 JumpIfEqual {306}
	240 Move X8, [X0]
	241 Move X1, [X23]
	242 Move X20, X0
	243 NotImplemented "Instruction LDRH not yet implemented."
	244 Compare X9, 0
	245 JumpIfEqual {252}
	246 Move X10, [X8+176]
	247 Add X10, X10, 8
	248 NotImplemented "Instruction LDUR not yet implemented."
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Subtract X9, X9, 1
	251 Add X10, X10, 16
	252 Move W2, 20
	253 Move X0, X20
	254 Call 0x1C5D788
	255 Move W9, [X10]
	256 Add W9, W9, 20
	257 Add X8, X8, W9
	258 Add X0, X8, 312
	259 Move X8, [X0]
	260 Move X1, [X0+8]
	261 Move X0, X20
	262 NotImplemented "Instruction BLR not yet implemented."
	263 Subtract S13, S11, S0
	264 Move [X19+1008], S10
	265 Move [X19+1012], S11
	266 Move X0, [X22]
	267 Move W8, [X0+224]
	268 Compare W8, 0
	269 JumpIfNotEqual {271}
	270 Call 0x1C17DFC
	271 NotImplemented "Instruction FABD not yet implemented."
	272 NotImplemented "Instruction FCMP not yet implemented."
	273 Move X0, [X22]
	274 Move W8, [X0+224]
	275 Compare W8, 0
	276 JumpIfNotEqual {278}
	277 Call 0x1C17DFC
	278 NotImplemented "Instruction FABD not yet implemented."
	279 NotImplemented "Instruction FCMP not yet implemented."
	280 Move X0, [X19+976]
	281 Compare X0, 0
	282 JumpIfEqual {287}
	283 Move X1, X31
	284 Call ScrollView.get_scrollOffset, X0
	285 Move V12, V0
	286 Move V13, V1
	287 Move V12, [X19+996]
	288 Move V13, [X19+1000]
	289 Move V0, V12
	290 Move V1, V13
	291 Move X20, [X31+96]
	292 Move X19, [X31+104]
	293 Move X22, [X31+80]
	294 Move X21, [X31+88]
	295 Move X30, [X31+64]
	296 Move X23, [X31+72]
	297 Move D9, [X31+48]
	298 Move D8, [X31+56]
	299 Move D11, [X31+32]
	300 Move D10, [X31+40]
	301 Move D13, [X31+16]
	302 Move D12, [X31+24]
	303 Move D15, [X31+112]
	304 Move D14, [X31+120]
	305 Return X0
	306 Call 0x1C17F20

Method: System.Void SetScrollViewMode()

Disassembly:
	0x026B4FCC TBNZ X8, 0x0, 0x26B4FD4
	0x026B4FD0 BL 0x1C5C684
	0x026B4FD4 LDR X8, [X21]
	0x026B4FD8 LDR X0, [X19]
	0x026B4FDC LDR X8, [X8 + 0xB8]
	0x026B4FE0 LDRB W9, [X0 + 0x135]
	0x026B4FE4 LDR X20, [X8 + 0x40]
	0x026B4FE8 TBNZ X9, 0x0, 0x26B4FF0
	0x026B4FEC BL 0x1C5C684
	0x026B4FF0 LDR X8, [X0 + 0xC0]
	0x026B4FF4 LDR X0, [X8 + 0x98]
	0x026B4FF8 LDRB W8, [X0 + 0x135]
	0x026B4FFC TBNZ X8, 0x0, 0x26B5004
	0x026B5000 BL 0x1C5C684
	0x026B5004 LDR X8, [X0 + 0xB8]
	0x026B5008 MOV X0, X20
	0x026B500C MOV X2, X31
	0x026B5010 LDR X1, [X8]
	0x026B5014 BL 0x321B938
	0x026B5018 LDR X8, [X19]
	0x026B501C MOV X20, X0
	0x026B5020 LDRB W9, [X8 + 0x135]
	0x026B5024 TBNZ X9, 0x0, 0x26B5034
	0x026B5028 MOV X0, X8
	0x026B502C BL 0x1C5C684
	0x026B5030 MOV X8, X0
	0x026B5034 LDR X8, [X8 + 0xC0]
	0x026B5038 LDR X0, [X8 + 0x98]
	0x026B503C LDRB W8, [X0 + 0x135]
	0x026B5040 TBNZ X8, 0x0, 0x26B5048
	0x026B5044 BL 0x1C5C684
	0x026B5048 LDR X8, [X0 + 0xB8]
	0x026B504C STR X20, [X8 + 0x40]
	0x026B5050 LDR X0, [X19]
	0x026B5054 LDRB W8, [X0 + 0x135]
	0x026B5058 TBNZ X8, 0x0, 0x26B5060
	0x026B505C BL 0x1C5C684
	0x026B5060 LDR X8, [X0 + 0xC0]
	0x026B5064 LDR X0, [X8 + 0x98]
	0x026B5068 LDRB W8, [X0 + 0x135]
	0x026B506C TBNZ X8, 0x0, 0x26B5080
	0x026B5070 LDP X20, X19, [X31 + 0x20]
	0x026B5074 LDP X22, X21, [X31 + 0x10]
	0x026B5078 LDR X30, [X31], #0x30
	0x026B507C B 0x1C5C684
	0x026B5080 LDP X20, X19, [X31 + 0x20]
	0x026B5084 LDP X22, X21, [X31 + 0x10]
	0x026B5088 LDR X30, [X31], #0x30
	0x026B508C RET
	0x026B5090 LDR X0, [X0 + 0x3C8]
	0x026B5094 RET
	0x026B5098 STR X1, [X0 + 0x3C8]
	0x026B509C RET
	0x026B50A0 STR X30, [X31 - 0x10]!
	0x026B50A4 LDR X0, [X0 + 0x3C8]
	0x026B50A8 CBZ X0, 0x26B50B8
	0x026B50AC MOV X1, X31
	0x026B50B0 LDR X30, [X31], #0x10
	0x026B50B4 B 0x3E0C77C
	0x026B50B8 BL 0x1C16F20
	0x026B50BC STR X30, [X31 - 0x10]!
	0x026B50C0 LDR X0, [X0 + 0x3C8]
	0x026B50C4 CBZ X0, 0x26B50D4
	0x026B50C8 MOV X1, X31
	0x026B50CC LDR X30, [X31], #0x10
	0x026B50D0 B 0x3E0AF0C
	0x026B50D4 BL 0x1C16F20
	0x026B50D8 STR X30, [X31 - 0x20]!
	0x026B50DC STP X20, X19, [X31 + 0x10]
	0x026B50E0 ADRP X20, 0x1D25000
	0x026B50E4 LDRB W8, [X20 + 0x3E4]
	0x026B50E8 MOV X19, X0
	0x026B50EC TBNZ X8, 0x0, 0x26B5104
	0x026B50F0 ADRP X0, 0x1A68000
	0x026B50F4 LDR X0, [X0 + 0x628]
	0x026B50F8 BL 0x1C16CF4
	0x026B50FC MOVZ W8, 0x1
	0x026B5100 STRB W8, [X20 + 0x3E4]
	0x026B5104 LDR X0, [X19 + 0x3C8]
	0x026B5108 CBZ X0, 0x26B5188
	0x026B510C MOV X1, X31
	0x026B5110 BL 0x3E0C77C
	0x026B5114 CBZ X0, 0x26B5188
	0x026B5118 ADRP X10, 0x1A68000
	0x026B511C LDR X8, [X0]
	0x026B5120 LDR X10, [X10 + 0x628]
	0x026B5124 MOV X19, X0
	0x026B5128 LDRH W9, [X8 + 0x12E]
	0x026B512C LDR X1, [X10]
	0x026B5130 CBZ X9, 0x26B5154
	0x026B5134 LDR X10, [X8 + 0xB0]
	0x026B5138 ADD X10, X10, 0x8
	0x026B513C LDUR X11, [X10 - 0x8]
	0x026B5140 CMP X11, X1
	0x026B5144 B.EQ 0x26B5164
	0x026B5148 SUBS X9, X9, 0x1
	0x026B514C ADD X10, X10, 0x10
	0x026B5150 B.NE 0x26B513C
	0x026B5154 MOVZ W2, 0xD
	0x026B5158 MOV X0, X19
	0x026B515C BL 0x1C5C788
	0x026B5160 B 0x26B5174
	0x026B5164 LDR W9, [X10]
	0x026B5168 ADD W9, W9, 0xD
	0x026B516C ADD X8, X8, W9, 0x4, SXTW
	0x026B5170 ADD X0, X8, 0x138
	0x026B5174 LDP X2, X1, [X0]
	0x026B5178 MOV X0, X19
	0x026B517C LDP X20, X19, [X31 + 0x10]
	0x026B5180 LDR X30, [X31], #0x20
	0x026B5184 BR X2
	0x026B5188 BL 0x1C16F20
	0x026B518C STR X30, [X31 - 0x20]!
	0x026B5190 STP X20, X19, [X31 + 0x10]
	0x026B5194 ADRP X20, 0x1D25000
	0x026B5198 LDRB W8, [X20 + 0x3E5]
	0x026B519C MOV X19, X0
	0x026B51A0 TBNZ X8, 0x0, 0x26B51B8
	0x026B51A4 ADRP X0, 0x1A68000
	0x026B51A8 LDR X0, [X0 + 0x628]
	0x026B51AC BL 0x1C16CF4
	0x026B51B0 MOVZ W8, 0x1
	0x026B51B4 STRB W8, [X20 + 0x3E5]
	0x026B51B8 LDR X0, [X19 + 0x3C8]
	0x026B51BC CBZ X0, 0x26B523C
	0x026B51C0 MOV X1, X31
	0x026B51C4 BL 0x3E0C77C
	0x026B51C8 CBZ X0, 0x26B523C
	0x026B51CC ADRP X10, 0x1A68000
	0x026B51D0 LDR X8, [X0]
	0x026B51D4 LDR X10, [X10 + 0x628]
	0x026B51D8 MOV X19, X0
	0x026B51DC LDRH W9, [X8 + 0x12E]
	0x026B51E0 LDR X1, [X10]
	0x026B51E4 CBZ X9, 0x26B5208
	0x026B51E8 LDR X10, [X8 + 0xB0]
	0x026B51EC ADD X10, X10, 0x8
	0x026B51F0 LDUR X11, [X10 - 0x8]
	0x026B51F4 CMP X11, X1
	0x026B51F8 B.EQ 0x26B5218
	0x026B51FC SUBS X9, X9, 0x1
	0x026B5200 ADD X10, X10, 0x10
	0x026B5204 B.NE 0x26B51F0
	0x026B5208 MOVZ W2, 0xE
	0x026B520C MOV X0, X19
	0x026B5210 BL 0x1C5C788
	0x026B5214 B 0x26B5228
	0x026B5218 LDR W9, [X10]
	0x026B521C ADD W9, W9, 0xE
	0x026B5220 ADD X8, X8, W9, 0x4, SXTW
	0x026B5224 ADD X0, X8, 0x138
	0x026B5228 LDP X2, X1, [X0]
	0x026B522C MOV X0, X19
	0x026B5230 LDP X20, X19, [X31 + 0x10]
	0x026B5234 LDR X30, [X31], #0x20
	0x026B5238 BR X2
	0x026B523C BL 0x1C16F20
	0x026B5240 STR X30, [X31 - 0x10]!
	0x026B5244 LDR X8, [X0 + 0x3C8]
	0x026B5248 CBZ X8, 0x26B5258
	0x026B524C LDR X0, [X8 + 0x458]
	0x026B5250 LDR X30, [X31], #0x10
	0x026B5254 RET
	0x026B5258 BL 0x1C16F20
	0x026B525C STR X30, [X31 - 0x20]!
	0x026B5260 STP X20, X19, [X31 + 0x10]
	0x026B5264 ADRP X0, 0x1A3E000
	0x026B5268 LDR X0, [X0 + 0xB40]
	0x026B526C MOV X19, X2
	0x026B5270 BL 0x1C16D08
	0x026B5274 BL 0x1C16F10
	0x026B5278 MOV X1, X31
	0x026B527C MOV X20, X0
	0x026B5280 BL 0x3380310
	0x026B5284 MOV X0, X20
	0x026B5288 MOV X1, X19
	0x026B528C BL 0x1C16DEC
	0x026B5290 STP X30, X19, [X31 - 0x10]!
	0x026B5294 CBZ X0, 0x26B5308
	0x026B5298 MOV X19, X1
	0x026B529C MOV X1, X31
	0x026B52A0 BL 0x3DEBF58
	0x026B52A4 LDR X8, [X19 + 0x20]
	0x026B52A8 MOV X19, X0
	0x026B52AC LDR X8, [X8 + 0xC0]
	0x026B52B0 LDR X1, [X8 + 0x20]
	0x026B52B4 LDRB W8, [X1 + 0x135]
	0x026B52B8 TBNZ X8, 0x0, 0x26B52C8
	0x026B52BC MOV X0, X1
	0x026B52C0 BL 0x1C5C684
	0x026B52C4 MOV X1, X0
	0x026B52C8 CBZ X19, 0x26B5308
	0x026B52CC LDR X8, [X19]
	0x026B52D0 LDRB W9, [X1 + 0x130]
	0x026B52D4 LDRB W10, [X8 + 0x130]
	0x026B52D8 CMP W10, W9
	0x026B52DC B.CC 0x26B530C
	0x026B52E0 LDR X10, [X8 + 0xC8]
	0x026B52E4 ADD X9, X10, X9, 0x3, LSL
	0x026B52E8 LDUR X9, [X9 - 0x8]
	0x026B52EC CMP X9, X1
	0x026B52F0 B.NE 0x26B530C
	0x026B52F4 LDR X2, [X8 + 0x8B8]
	0x026B52F8 LDR X1, [X8 + 0x8C0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1D27000
	007 Move W8, [X21+991]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1A6A000
	015 Move X0, [X0+1584]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+991], W8
	019 Move X8, [X19+976]
	020 Compare X8, 0
	021 JumpIfEqual {110}
	022 Move X8, [X20+32]
	023 Move X21, [X19+968]
	024 Move X8, [X8+192]
	025 Move X0, [X8+152]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X8, [X20+32]
	037 Move X8, [X8+192]
	038 Move X0, [X8+152]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Compare X21, 0
	046 JumpIfEqual {259}
	047 Move X8, [X0+184]
	048 Move X0, X21
	049 Move X2, X31
	050 Move X1, [X8+32]
	051 Call VisualElement.RemoveFromClassList, X0, X1
	052 Move X8, [X20+32]
	053 Move X21, [X19+968]
	054 Move X8, [X8+192]
	055 Move X0, [X8+152]
	056 Move W8, [X0+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Compare X21, 0
	063 JumpIfEqual {259}
	064 Move X8, [X0+184]
	065 Move X0, X21
	066 Move X2, X31
	067 Move X1, [X8+40]
	068 Call VisualElement.RemoveFromClassList, X0, X1
	069 Move X8, [X20+32]
	070 Move X21, [X19+968]
	071 Move X8, [X8+192]
	072 Move X0, [X8+152]
	073 Move W8, [X0+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {79}
	078 Call 0x1C5D684
	079 Compare X21, 0
	080 JumpIfEqual {259}
	081 Move X8, [X0+184]
	082 Move X0, X21
	083 Move X2, X31
	084 Move X1, [X8+24]
	085 Call VisualElement.RemoveFromClassList, X0, X1
	086 Move X0, [X19+968]
	087 Compare X0, 0
	088 JumpIfEqual {259}
	089 Move X1, X31
	090 Call TextElement.get_edition, X0
	091 Compare X0, 0
	092 JumpIfEqual {259}
	093 Move X22, 0x1A69000
	094 Move X8, [X0]
	095 Move X22, [X22+1584]
	096 Move X21, X0
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Move X1, [X22]
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move X0, X21
	108 Move W2, W31
	109 Call 0x1C5D788
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X22, [X31+16]
	113 Move X21, [X31+24]
	114 Move X30, [X31+48]
	115 Return 
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 Add X8, X8, X9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X1, [X0+8]
	121 Move X0, X21
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {136}
	127 Compare X19, 0
	128 JumpIfEqual {259}
	129 Move X0, X19
	130 Move X1, X31
	131 Call VisualElement.get_computedStyle, X0
	132 Move X1, X31
	133 Call ComputedStyle.get_whiteSpace, X0
	134 Compare W0, 0
	135 JumpIfEqual {217}
	136 Move X0, [X19+968]
	137 Compare X0, 0
	138 JumpIfEqual {259}
	139 Move X1, X31
	140 Call TextElement.get_edition, X0
	141 Compare X0, 0
	142 JumpIfEqual {259}
	143 Move X8, [X0]
	144 Move X1, [X22]
	145 Move X21, X0
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move X0, X21
	156 Move W2, W31
	157 Call 0x1C5D788
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Add X8, X8, X9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, X21
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X8, [X20+32]
	166 Move X21, [X19+968]
	167 Move W22, W0
	168 Move X8, [X8+192]
	169 Move X8, [X8+152]
	170 Move W9, [X8+309]
	171 Move TEMP, X9
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfEqual {178}
	175 Move X0, X8
	176 Call 0x1C5D684
	177 Move X8, X0
	178 Move W9, [X8+224]
	179 Compare W9, 0
	180 JumpIfNotEqual {183}
	181 Move X0, X8
	182 Call 0x1C17DFC
	183 Move X8, [X20+32]
	184 Move X8, [X8+192]
	185 Move X0, [X8+152]
	186 Move W8, [X0+309]
	187 Move TEMP, X8
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfEqual {192}
	191 Call 0x1C5D684
	192 Move X8, [X0+184]
	193 Move TEMP, X22
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {207}
	197 Compare X21, 0
	198 JumpIfEqual {259}
	199 Move X1, [X8+40]
	200 Move X0, X21
	201 Move X2, X31
	202 Call VisualElement.AddToClassList, X0, X1
	203 Move X0, [X19+976]
	204 Compare X0, 0
	205 JumpIfEqual {259}
	206 Move W1, 2
	207 Compare X21, 0
	208 JumpIfEqual {259}
	209 Move X1, [X8+24]
	210 Move X0, X21
	211 Move X2, X31
	212 Call VisualElement.AddToClassList, X0, X1
	213 Move X0, [X19+976]
	214 Compare X0, 0
	215 JumpIfEqual {259}
	216 Move W1, 1
	217 Move X8, [X20+32]
	218 Move X21, [X19+968]
	219 Move X8, [X8+192]
	220 Move X0, [X8+152]
	221 Move W8, [X0+309]
	222 Move TEMP, X8
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfEqual {227}
	226 Call 0x1C5D684
	227 Move W8, [X0+224]
	228 Compare W8, 0
	229 JumpIfNotEqual {231}
	230 Call 0x1C17DFC
	231 Move X8, [X20+32]
	232 Move X8, [X8+192]
	233 Move X0, [X8+152]
	234 Move W8, [X0+309]
	235 Move TEMP, X8
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfEqual {240}
	239 Call 0x1C5D684
	240 Compare X21, 0
	241 JumpIfEqual {259}
	242 Move X8, [X0+184]
	243 Move X0, X21
	244 Move X2, X31
	245 Move X1, [X8+32]
	246 Call VisualElement.AddToClassList, X0, X1
	247 Move X0, [X19+976]
	248 Compare X0, 0
	249 JumpIfEqual {259}
	250 Move W1, W31
	251 Move X20, [X31+32]
	252 Move X19, [X31+40]
	253 Move X22, [X31+16]
	254 Move X21, [X31+24]
	255 Move X2, X31
	256 Move X30, [X31+48]
	257 Call ScrollView.set_mode, X0, X1
	258 Return 
	259 Call 0x1C17F20

Method: System.Void SetMultilineContainerStyle()

Disassembly:
	0x026B52FC MOV X0, X19
	0x026B5300 LDP X30, X19, [X31], #0x10
	0x026B5304 BR X2
	0x026B5308 BL 0x1C16F20
	0x026B530C MOV X0, X19
	0x026B5310 BL 0x1C171E0
	0x026B5314 STP X30, X19, [X31 - 0x10]!
	0x026B5318 CBZ X0, 0x26B538C
	0x026B531C MOV X19, X1
	0x026B5320 MOV X1, X31
	0x026B5324 BL 0x3DEBF58
	0x026B5328 LDR X8, [X19 + 0x20]
	0x026B532C MOV X19, X0
	0x026B5330 LDR X8, [X8 + 0xC0]
	0x026B5334 LDR X1, [X8 + 0x20]
	0x026B5338 LDRB W8, [X1 + 0x135]
	0x026B533C TBNZ X8, 0x0, 0x26B534C
	0x026B5340 MOV X0, X1
	0x026B5344 BL 0x1C5C684
	0x026B5348 MOV X1, X0
	0x026B534C CBZ X19, 0x26B538C
	0x026B5350 LDR X8, [X19]
	0x026B5354 LDRB W9, [X1 + 0x130]
	0x026B5358 LDRB W10, [X8 + 0x130]
	0x026B535C CMP W10, W9
	0x026B5360 B.CC 0x26B5390
	0x026B5364 LDR X10, [X8 + 0xC8]
	0x026B5368 ADD X9, X10, X9, 0x3, LSL
	0x026B536C LDUR X9, [X9 - 0x8]
	0x026B5370 CMP X9, X1
	0x026B5374 B.NE 0x26B5390
	0x026B5378 LDR X2, [X8 + 0x8C8]
	0x026B537C LDR X1, [X8 + 0x8D0]
	0x026B5380 MOV X0, X19
	0x026B5384 LDP X30, X19, [X31], #0x10
	0x026B5388 BR X2
	0x026B538C BL 0x1C16F20
	0x026B5390 MOV X0, X19
	0x026B5394 BL 0x1C171E0
	0x026B5398 STP X30, X19, [X31 - 0x10]!
	0x026B539C CBZ X0, 0x26B5410
	0x026B53A0 MOV X19, X1
	0x026B53A4 MOV X1, X31
	0x026B53A8 BL 0x3DEBF58
	0x026B53AC LDR X8, [X19 + 0x20]
	0x026B53B0 MOV X19, X0
	0x026B53B4 LDR X8, [X8 + 0xC0]
	0x026B53B8 LDR X1, [X8 + 0x20]
	0x026B53BC LDRB W8, [X1 + 0x135]
	0x026B53C0 TBNZ X8, 0x0, 0x26B53D0
	0x026B53C4 MOV X0, X1
	0x026B53C8 BL 0x1C5C684
	0x026B53CC MOV X1, X0
	0x026B53D0 CBZ X19, 0x26B5410
	0x026B53D4 LDR X8, [X19]
	0x026B53D8 LDRB W9, [X1 + 0x130]
	0x026B53DC LDRB W10, [X8 + 0x130]
	0x026B53E0 CMP W10, W9
	0x026B53E4 B.CC 0x26B5414
	0x026B53E8 LDR X10, [X8 + 0xC8]
	0x026B53EC ADD X9, X10, X9, 0x3, LSL
	0x026B53F0 LDUR X9, [X9 - 0x8]
	0x026B53F4 CMP X9, X1
	0x026B53F8 B.NE 0x26B5414
	0x026B53FC LDR X2, [X8 + 0x248]
	0x026B5400 LDR X1, [X8 + 0x250]
	0x026B5404 MOV X0, X19
	0x026B5408 LDP X30, X19, [X31], #0x10
	0x026B540C BR X2
	0x026B5410 BL 0x1C16F20
	0x026B5414 MOV X0, X19
	0x026B5418 BL 0x1C171E0
	0x026B541C STR X30, [X31 - 0x20]!
	0x026B5420 STP X20, X19, [X31 + 0x10]
	0x026B5424 ADRP X20, 0x1D25000
	0x026B5428 LDRB W8, [X20 + 0x3E6]
	0x026B542C MOV X19, X0
	0x026B5430 TBNZ X8, 0x0, 0x26B5448
	0x026B5434 ADRP X0, 0x1A68000
	0x026B5438 LDR X0, [X0 + 0x630]
	0x026B543C BL 0x1C16CF4
	0x026B5440 MOVZ W8, 0x1
	0x026B5444 STRB W8, [X20 + 0x3E6]
	0x026B5448 LDR X0, [X19 + 0x3C8]
	0x026B544C CBZ X0, 0x26B54CC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1D26000
	006 Move W8, [X20+992]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x1A68000
	013 Move X0, [X0+296]
	014 Call 0x1C17CF4
	015 Move X0, 0x1A69000
	016 Move X0, [X0+1680]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+992], W8
	020 Move X8, [X19+984]
	021 Compare X8, 0
	022 JumpIfEqual {56}
	023 Move X21, 0x1A69000
	024 Move X21, [X21+1680]
	025 Move X0, X19
	026 Move X1, X31
	027 Call VisualElement.get_computedStyle, X0
	028 Move X1, X31
	029 Call ComputedStyle.get_whiteSpace, X0
	030 Move W20, W0
	031 Move X0, X19
	032 Move X1, X31
	033 Call VisualElement.get_style, X0
	034 Move X1, [X21]
	035 Move X19, X0
	036 Compare W20, 0
	037 JumpIfEqual {61}
	038 Move W0, 2
	039 Call 0x266FACC, X0
	040 Compare X19, 0
	041 JumpIfEqual {95}
	042 Move X10, 0x1A68000
	043 Move X8, [X19]
	044 Move X10, [X10+296]
	045 Move X20, X0
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move X1, [X10]
	048 Compare X9, 0
	049 JumpIfEqual {79}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return 
	061 Move W0, 1
	062 Call 0x266FACC, X0
	063 Compare X19, 0
	064 JumpIfEqual {95}
	065 Move X10, 0x1A68000
	066 Move X8, [X19]
	067 Move X10, [X10+296]
	068 Move X20, X0
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Move X1, [X10]
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move W2, 34
	080 Move X0, X19
	081 Call 0x1C5D788
	082 Move W9, [X10]
	083 Add W9, W9, 34
	084 Add X8, X8, W9
	085 Add X0, X8, 312
	086 Move X3, [X0]
	087 Move X2, [X0+8]
	088 Move X0, X19
	089 Move X1, X20
	090 Move X20, [X31+16]
	091 Move X19, [X31+24]
	092 Move X30, [X31+32]
	093 Move X21, [X31+40]
	094 CallNoReturn X3
	095 Call 0x1C17F20

Method: System.Void RemoveSingleLineComponents()

Disassembly:
	0x026B5450 MOV X1, X31
	0x026B5454 BL 0x3E0AF0C
	0x026B5458 CBZ X0, 0x26B54CC
	0x026B545C ADRP X10, 0x1A68000
	0x026B5460 LDR X8, [X0]
	0x026B5464 LDR X10, [X10 + 0x630]
	0x026B5468 MOV X19, X0
	0x026B546C LDRH W9, [X8 + 0x12E]
	0x026B5470 LDR X1, [X10]
	0x026B5474 CBZ X9, 0x26B5498
	0x026B5478 LDR X10, [X8 + 0xB0]
	0x026B547C ADD X10, X10, 0x8
	0x026B5480 LDUR X11, [X10 - 0x8]
	0x026B5484 CMP X11, X1
	0x026B5488 B.EQ 0x26B54A8
	0x026B548C SUBS X9, X9, 0x1
	0x026B5490 ADD X10, X10, 0x10
	0x026B5494 B.NE 0x26B5480
	0x026B5498 MOVZ W2, 0x2
	0x026B549C MOV X0, X19
	0x026B54A0 BL 0x1C5C788
	0x026B54A4 B 0x26B54B8
	0x026B54A8 LDR W9, [X10]
	0x026B54AC ADD W9, W9, 0x2
	0x026B54B0 ADD X8, X8, W9, 0x4, SXTW
	0x026B54B4 ADD X0, X8, 0x138
	0x026B54B8 LDP X2, X1, [X0]
	0x026B54BC MOV X0, X19
	0x026B54C0 LDP X20, X19, [X31 + 0x10]
	0x026B54C4 LDR X30, [X31], #0x20
	0x026B54C8 BR X2
	0x026B54CC BL 0x1C16F20
	0x026B54D0 STP X30, X21, [X31 - 0x20]!
	0x026B54D4 STP X20, X19, [X31 + 0x10]
	0x026B54D8 ADRP X21, 0x1D25000
	0x026B54DC LDRB W8, [X21 + 0x3E7]
	0x026B54E0 MOV W19, W1
	0x026B54E4 MOV X20, X0
	0x026B54E8 TBNZ X8, 0x0, 0x26B5500
	0x026B54EC ADRP X0, 0x1A68000
	0x026B54F0 LDR X0, [X0 + 0x630]
	0x026B54F4 BL 0x1C16CF4
	0x026B54F8 MOVZ W8, 0x1
	0x026B54FC STRB W8, [X21 + 0x3E7]
	0x026B5500 LDR X0, [X20 + 0x3C8]
	0x026B5504 CBZ X0, 0x26B5588
	0x026B5508 MOV X1, X31
	0x026B550C BL 0x3E0AF0C
	0x026B5510 CBZ X0, 0x26B5588
	0x026B5514 ADRP X10, 0x1A68000
	0x026B5518 LDR X8, [X0]
	0x026B551C LDR X10, [X10 + 0x630]
	0x026B5520 MOV X20, X0
	0x026B5524 LDRH W9, [X8 + 0x12E]
	0x026B5528 LDR X1, [X10]
	0x026B552C CBZ X9, 0x26B5550
	0x026B5530 LDR X10, [X8 + 0xB0]
	0x026B5534 ADD X10, X10, 0x8
	0x026B5538 LDUR X11, [X10 - 0x8]
	0x026B553C CMP X11, X1
	0x026B5540 B.EQ 0x26B5560
	0x026B5544 SUBS X9, X9, 0x1
	0x026B5548 ADD X10, X10, 0x10
	0x026B554C B.NE 0x26B5538
	0x026B5550 MOVZ W2, 0x5
	0x026B5554 MOV X0, X20
	0x026B5558 BL 0x1C5C788
	0x026B555C B 0x26B5570
	0x026B5560 LDR W9, [X10]
	0x026B5564 ADD W9, W9, 0x5
	0x026B5568 ADD X8, X8, W9, 0x4, SXTW
	0x026B556C ADD X0, X8, 0x138
	0x026B5570 LDP X3, X2, [X0]
	0x026B5574 MOV X0, X20
	0x026B5578 MOV W1, W19
	0x026B557C LDP X20, X19, [X31 + 0x10]
	0x026B5580 LDP X30, X21, [X31], #0x20
	0x026B5584 BR X3
	0x026B5588 BL 0x1C16F20
	0x026B558C STP X30, X21, [X31 - 0x20]!
	0x026B5590 STP X20, X19, [X31 + 0x10]
	0x026B5594 ADRP X21, 0x1D25000
	0x026B5598 LDRB W8, [X21 + 0x3E8]
	0x026B559C MOV W19, W1
	0x026B55A0 MOV X20, X0
	0x026B55A4 TBNZ X8, 0x0, 0x26B55BC
	0x026B55A8 ADRP X0, 0x1A68000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1D26000
	007 Move W8, [X21+993]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x1A69000
	015 Move X0, [X0+1688]
	016 Call 0x1C17CF4
	017 Move X0, 0x1A69000
	018 Move X0, [X0+1632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+993], W8
	022 Move X8, [X20+32]
	023 Move X8, [X8+192]
	024 Move X0, [X8+112]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X8, [X20+32]
	036 Move X8, [X8+192]
	037 Move X0, [X8+112]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Compare X19, 0
	045 JumpIfEqual {113}
	046 Move X8, [X0+184]
	047 Move X0, X19
	048 Move X2, X31
	049 Move X1, [X8+48]
	050 Call VisualElement.RemoveFromClassList, X0, X1
	051 Move X8, [X20+32]
	052 Move X21, [X19+968]
	053 Move X8, [X8+192]
	054 Move X0, [X8+152]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X8, [X20+32]
	066 Move X8, [X8+192]
	067 Move X0, [X8+152]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Compare X21, 0
	075 JumpIfEqual {113}
	076 Move X8, [X0+184]
	077 Move X0, X21
	078 Move X2, X31
	079 Move X1, [X8+8]
	080 Call VisualElement.RemoveFromClassList, X0, X1
	081 Move X0, [X19+968]
	082 Compare X0, 0
	083 JumpIfEqual {113}
	084 Move X22, 0x1A69000
	085 Move X22, [X22+1632]
	086 Move X1, X31
	087 Call VisualElement.RemoveFromHierarchy, X0
	088 Move X0, [X22]
	089 Move X21, [X19+968]
	090 Call 0x1C17F10
	091 Move X8, [X20+32]
	092 Move X1, X19
	093 Move X3, X31
	094 Move X20, X0
	095 Move X8, [X8+192]
	096 Move X2, [X8+160]
	097 Call 0x2D0F824, X0, X1, X2
	098 Compare X21, 0
	099 JumpIfEqual {113}
	100 Move X8, 0x1A69000
	101 Move X8, [X8+1688]
	102 Move X0, X21
	103 Move X1, X20
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X3, [X8]
	107 Move X22, [X31+16]
	108 Move X21, [X31+24]
	109 Move W2, W31
	110 Move X30, [X31+48]
	111 Call 0x21A28B4, X0, X1, X2
	112 Return 
	113 Call 0x1C17F20

Method: System.Void RemoveMultilineComponents()

Disassembly:
	0x026B55AC LDR X0, [X0 + 0x630]
	0x026B55B0 BL 0x1C16CF4
	0x026B55B4 MOVZ W8, 0x1
	0x026B55B8 STRB W8, [X21 + 0x3E8]
	0x026B55BC LDR X0, [X20 + 0x3C8]
	0x026B55C0 CBZ X0, 0x26B5644
	0x026B55C4 MOV X1, X31
	0x026B55C8 BL 0x3E0AF0C
	0x026B55CC CBZ X0, 0x26B5644
	0x026B55D0 ADRP X10, 0x1A68000
	0x026B55D4 LDR X8, [X0]
	0x026B55D8 LDR X10, [X10 + 0x630]
	0x026B55DC MOV X20, X0
	0x026B55E0 LDRH W9, [X8 + 0x12E]
	0x026B55E4 LDR X1, [X10]
	0x026B55E8 CBZ X9, 0x26B560C
	0x026B55EC LDR X10, [X8 + 0xB0]
	0x026B55F0 ADD X10, X10, 0x8
	0x026B55F4 LDUR X11, [X10 - 0x8]
	0x026B55F8 CMP X11, X1
	0x026B55FC B.EQ 0x26B561C
	0x026B5600 SUBS X9, X9, 0x1
	0x026B5604 ADD X10, X10, 0x10
	0x026B5608 B.NE 0x26B55F4
	0x026B560C MOVZ W2, 0x16
	0x026B5610 MOV X0, X20
	0x026B5614 BL 0x1C5C788
	0x026B5618 B 0x26B562C
	0x026B561C LDR W9, [X10]
	0x026B5620 ADD W9, W9, 0x16
	0x026B5624 ADD X8, X8, W9, 0x4, SXTW
	0x026B5628 ADD X0, X8, 0x138
	0x026B562C LDP X3, X2, [X0]
	0x026B5630 MOV X0, X20
	0x026B5634 MOV W1, W19
	0x026B5638 LDP X20, X19, [X31 + 0x10]
	0x026B563C LDP X30, X21, [X31], #0x20
	0x026B5640 BR X3
	0x026B5644 BL 0x1C16F20
	0x026B5648 STR X30, [X31 - 0x20]!
	0x026B564C STP X20, X19, [X31 + 0x10]
	0x026B5650 ADRP X20, 0x1D25000
	0x026B5654 LDRB W8, [X20 + 0x3E9]
	0x026B5658 MOV X19, X0
	0x026B565C TBNZ X8, 0x0, 0x26B5674
	0x026B5660 ADRP X0, 0x1A68000
	0x026B5664 LDR X0, [X0 + 0x630]
	0x026B5668 BL 0x1C16CF4
	0x026B566C MOVZ W8, 0x1
	0x026B5670 STRB W8, [X20 + 0x3E9]
	0x026B5674 LDR X0, [X19 + 0x3C8]
	0x026B5678 CBZ X0, 0x26B56F8
	0x026B567C MOV X1, X31
	0x026B5680 BL 0x3E0AF0C
	0x026B5684 CBZ X0, 0x26B56F8
	0x026B5688 ADRP X10, 0x1A68000
	0x026B568C LDR X8, [X0]
	0x026B5690 LDR X10, [X10 + 0x630]
	0x026B5694 MOV X19, X0
	0x026B5698 LDRH W9, [X8 + 0x12E]
	0x026B569C LDR X1, [X10]
	0x026B56A0 CBZ X9, 0x26B56C4
	0x026B56A4 LDR X10, [X8 + 0xB0]
	0x026B56A8 ADD X10, X10, 0x8
	0x026B56AC LDUR X11, [X10 - 0x8]
	0x026B56B0 CMP X11, X1
	0x026B56B4 B.EQ 0x26B56D4
	0x026B56B8 SUBS X9, X9, 0x1
	0x026B56BC ADD X10, X10, 0x10
	0x026B56C0 B.NE 0x26B56AC
	0x026B56C4 MOVZ W2, 0x17
	0x026B56C8 MOV X0, X19
	0x026B56CC BL 0x1C5C788
	0x026B56D0 B 0x26B56E4
	0x026B56D4 LDR W9, [X10]
	0x026B56D8 ADD W9, W9, 0x17
	0x026B56DC ADD X8, X8, W9, 0x4, SXTW
	0x026B56E0 ADD X0, X8, 0x138
	0x026B56E4 LDP X2, X1, [X0]
	0x026B56E8 MOV X0, X19
	0x026B56EC LDP X20, X19, [X31 + 0x10]
	0x026B56F0 LDR X30, [X31], #0x20
	0x026B56F4 BR X2
	0x026B56F8 BL 0x1C16F20
	0x026B56FC STP X30, X21, [X31 - 0x20]!
	0x026B5700 STP X20, X19, [X31 + 0x10]
	0x026B5704 ADRP X21, 0x1D25000
	0x026B5708 LDRB W8, [X21 + 0x3EA]
	0x026B570C MOV W19, W1
	0x026B5710 MOV X20, X0
	0x026B5714 TBNZ X8, 0x0, 0x26B572C
	0x026B5718 ADRP X0, 0x1A68000
	0x026B571C LDR X0, [X0 + 0x630]
	0x026B5720 BL 0x1C16CF4
	0x026B5724 MOVZ W8, 0x1
	0x026B5728 STRB W8, [X21 + 0x3EA]
	0x026B572C LDR X0, [X20 + 0x3C8]
	0x026B5730 CBZ X0, 0x26B57B4
	0x026B5734 MOV X1, X31
	0x026B5738 BL 0x3E0AF0C
	0x026B573C CBZ X0, 0x26B57B4
	0x026B5740 ADRP X10, 0x1A68000
	0x026B5744 LDR X8, [X0]
	0x026B5748 LDR X10, [X10 + 0x630]
	0x026B574C MOV X20, X0
	0x026B5750 LDRH W9, [X8 + 0x12E]
	0x026B5754 LDR X1, [X10]
	0x026B5758 CBZ X9, 0x26B577C
	0x026B575C LDR X10, [X8 + 0xB0]
	0x026B5760 ADD X10, X10, 0x8
	0x026B5764 LDUR X11, [X10 - 0x8]
	0x026B5768 CMP X11, X1
	0x026B576C B.EQ 0x26B578C
	0x026B5770 SUBS X9, X9, 0x1
	0x026B5774 ADD X10, X10, 0x10
	0x026B5778 B.NE 0x26B5764
	0x026B577C MOVZ W2, 0x18
	0x026B5780 MOV X0, X20
	0x026B5784 BL 0x1C5C788
	0x026B5788 B 0x26B579C
	0x026B578C LDR W9, [X10]
	0x026B5790 ADD W9, W9, 0x18
	0x026B5794 ADD X8, X8, W9, 0x4, SXTW
	0x026B5798 ADD X0, X8, 0x138
	0x026B579C LDP X3, X2, [X0]
	0x026B57A0 AND W1, W19, 0x1
	0x026B57A4 MOV X0, X20
	0x026B57A8 LDP X20, X19, [X31 + 0x10]
	0x026B57AC LDP X30, X21, [X31], #0x20
	0x026B57B0 BR X3
	0x026B57B4 BL 0x1C16F20
	0x026B57B8 AND W8, W1, 0x1
	0x026B57BC STRB W8, [X0 + 0x3E0]
	0x026B57C0 RET
	0x026B57C4 STR X30, [X31 - 0x10]!
	0x026B57C8 LDR X0, [X0 + 0x3C8]
	0x026B57CC CBZ X0, 0x26B57E4
	0x026B57D0 LDR X8, [X0]
	0x026B57D4 LDR X2, [X8 + 0xB18]
	0x026B57D8 LDR X1, [X8 + 0xB20]
	0x026B57DC LDR X30, [X31], #0x10
	0x026B57E0 BR X2
	0x026B57E4 BL 0x1C16F20
	0x026B57E8 STR X30, [X31 - 0x20]!
	0x026B57EC STP X20, X19, [X31 + 0x10]
	0x026B57F0 MOV X20, X0
	0x026B57F4 LDR X0, [X0 + 0x3C8]
	0x026B57F8 CBZ X0, 0x26B5850
	0x026B57FC LDR X8, [X0]
	0x026B5800 MOV X19, X1
	0x026B5804 LDR X9, [X8 + 0xB18]
	0x026B5808 LDR X1, [X8 + 0xB20]
	0x026B580C BLR X9
	0x026B5810 MOV X1, X19
	0x026B5814 MOV X2, X31
	0x026B5818 BL 0x321BA08
	0x026B581C TBZ X0, 0x0, 0x26B582C
	0x026B5820 LDP X20, X19, [X31 + 0x10]
	0x026B5824 LDR X30, [X31], #0x20
	0x026B5828 RET
	0x026B582C LDR X0, [X20 + 0x3C8]
	0x026B5830 CBZ X0, 0x26B5850
	0x026B5834 LDR X8, [X0]
	0x026B5838 MOV X1, X19
	0x026B583C LDP X20, X19, [X31 + 0x10]
	0x026B5840 LDR X3, [X8 + 0xB28]
	0x026B5844 LDR X2, [X8 + 0xB30]
	0x026B5848 LDR X30, [X31], #0x20
	0x026B584C BR X3
	0x026B5850 BL 0x1C16F20
	0x026B5854 STR X30, [X31 - 0x50]!
	0x026B5858 STP X26, X25, [X31 + 0x10]
	0x026B585C STP X24, X23, [X31 + 0x20]
	0x026B5860 STP X22, X21, [X31 + 0x30]
	0x026B5864 STP X20, X19, [X31 + 0x40]
	0x026B5868 ADRP X21, 0x1D25000
	0x026B586C LDRB W8, [X21 + 0x3EB]
	0x026B5870 MOV X20, X1
	0x026B5874 MOV X19, X0
	0x026B5878 TBNZ X8, 0x0, 0x26B58FC
	0x026B587C ADRP X0, 0x1A3E000
	0x026B5880 LDR X0, [X0 + 0xD28]
	0x026B5884 BL 0x1C16CF4
	0x026B5888 ADRP X0, 0x1A3F000
	0x026B588C LDR X0, [X0 + 0xE70]
	0x026B5890 BL 0x1C16CF4
	0x026B5894 ADRP X0, 0x1A68000
	0x026B5898 LDR X0, [X0 + 0x638]
	0x026B589C BL 0x1C16CF4
	0x026B58A0 ADRP X0, 0x1A68000
	0x026B58A4 LDR X0, [X0 + 0x640]
	0x026B58A8 BL 0x1C16CF4
	0x026B58AC ADRP X0, 0x1A68000
	0x026B58B0 LDR X0, [X0 + 0x648]
	0x026B58B4 BL 0x1C16CF4
	0x026B58B8 ADRP X0, 0x1A68000
	0x026B58BC LDR X0, [X0 + 0x630]
	0x026B58C0 BL 0x1C16CF4
	0x026B58C4 ADRP X0, 0x1A68000
	0x026B58C8 LDR X0, [X0 + 0x628]
	0x026B58CC BL 0x1C16CF4
	0x026B58D0 ADRP X0, 0x1A67000
	0x026B58D4 LDR X0, [X0 + 0xEC8]
	0x026B58D8 BL 0x1C16CF4
	0x026B58DC ADRP X0, 0x1A68000
	0x026B58E0 LDR X0, [X0 + 0x650]
	0x026B58E4 BL 0x1C16CF4
	0x026B58E8 ADRP X0, 0x1A66000
	0x026B58EC LDR X0, [X0 + 0x898]
	0x026B58F0 BL 0x1C16CF4
	0x026B58F4 MOVZ W8, 0x1
	0x026B58F8 STRB W8, [X21 + 0x3EB]
	0x026B58FC ADRP X22, 0x1D24000
	0x026B5900 ADRP X21, 0x1A66000
	0x026B5904 LDRB W8, [X22 + 0x78F]
	0x026B5908 LDR X21, [X21 + 0x898]
	0x026B590C CBNZ W8, 0x26B5924
	0x026B5910 ADRP X0, 0x1A46000
	0x026B5914 LDR X0, [X0 + 0xF08]
	0x026B5918 BL 0x1C16CF4
	0x026B591C MOVZ W8, 0x1
	0x026B5920 STRB W8, [X22 + 0x78F]
	0x026B5924 ADRP X8, 0x1A46000
	0x026B5928 LDR X8, [X8 + 0xF08]
	0x026B592C LDR X8, [X8]
	0x026B5930 LDR X9, [X8 + 0xB8]
	0x026B5934 LDR V0, [X9]
	0x026B5938 ADD X9, X19, 0x3E4
	0x026B593C STR D0, [X9]
	0x026B5940 LDR X8, [X8 + 0xB8]
	0x026B5944 LDR V0, [X8]
	0x026B5948 MOVZ W8, 0x2
	0x026B594C STR W8, [X19 + 0x3F8]
	0x026B5950 STR D0, [X19 + 0x3F0]
	0x026B5954 LDR X0, [X21]
	0x026B5958 ADRP X21, 0x1A67000
	0x026B595C LDR W8, [X0 + 0xE0]
	0x026B5960 LDR X21, [X21 + 0xEC8]
	0x026B5964 CBNZ W8, 0x26B596C
	0x026B5968 BL 0x1C16DFC
	0x026B596C MOV X0, X19
	0x026B5970 MOV X1, X31
	0x026B5974 BL 0x3DEF578
	0x026B5978 MOVZ W1, 0x1
	0x026B597C MOV X0, X19
	0x026B5980 MOV X2, X31
	0x026B5984 BL 0x3DAED80
	0x026B5988 LDR X0, [X21]
	0x026B598C BL 0x1C16F10
	0x026B5990 MOV X1, X31
	0x026B5994 MOV X21, X0
	0x026B5998 BL 0x3E0F684
	0x026B599C STR X21, [X19 + 0x3C8]
	0x026B59A0 CBZ X21, 0x26B6424
	0x026B59A4 MOV X0, X21
	0x026B59A8 MOV W1, W31
	0x026B59AC MOV X2, X31
	0x026B59B0 BL 0x3E0FB34
	0x026B59B4 LDR X0, [X19 + 0x3C8]
	0x026B59B8 CBZ X0, 0x26B6424
	0x026B59BC MOV X1, X31
	0x026B59C0 BL 0x3E0C77C
	0x026B59C4 CBZ X0, 0x26B6424
	0x026B59C8 ADRP X22, 0x1A68000
	0x026B59CC LDR X8, [X0]
	0x026B59D0 LDR X22, [X22 + 0x628]
	0x026B59D4 MOV X21, X0
	0x026B59D8 LDRH W9, [X8 + 0x12E]
	0x026B59DC LDR X1, [X22]
	0x026B59E0 CBZ X9, 0x26B5A04
	0x026B59E4 LDR X10, [X8 + 0xB0]
	0x026B59E8 ADD X10, X10, 0x8
	0x026B59EC LDUR X11, [X10 - 0x8]
	0x026B59F0 CMP X11, X1
	0x026B59F4 B.EQ 0x26B5A14
	0x026B59F8 SUBS X9, X9, 0x1
	0x026B59FC ADD X10, X10, 0x10
	0x026B5A00 B.NE 0x26B59EC
	0x026B5A04 MOVZ W2, 0x1
	0x026B5A08 MOV X0, X21
	0x026B5A0C BL 0x1C5C788
	0x026B5A10 B 0x26B5A24
	0x026B5A14 LDR W9, [X10]
	0x026B5A18 ADD W9, W9, 0x1
	0x026B5A1C ADD X8, X8, W9, 0x4, SXTW
	0x026B5A20 ADD X0, X8, 0x138
	0x026B5A24 LDP X8, X2, [X0]
	0x026B5A28 MOVZ W1, 0x1
	0x026B5A2C MOV X0, X21

ISIL:
	001 Move [X31-96], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x1D26000
	014 Move W8, [X21+994]
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x1A69000
	022 Move X0, [X0+1688]
	023 Call 0x1C17CF4
	024 Move X0, 0x1A69000
	025 Move X0, [X0+1632]
	026 Call 0x1C17CF4
	027 Move X0, 0x1A69000
	028 Move X0, [X0+1640]
	029 Call 0x1C17CF4
	030 Move X0, 0x1A69000
	031 Move X0, [X0+1696]
	032 Call 0x1C17CF4
	033 Move X0, 0x1A69000
	034 Move X0, [X0+1672]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+994], W8
	038 Move X24, 0x1A69000
	039 Move X23, 0x1A69000
	040 Move X0, [X19+976]
	041 Move X24, [X24+1632]
	042 Move X23, [X23+1688]
	043 Compare X0, 0
	044 JumpIfEqual {225}
	045 Move X1, X31
	046 Call VisualElement.RemoveFromHierarchy, X0
	047 Move X0, [X19+976]
	048 Compare X0, 0
	049 JumpIfEqual {355}
	050 Move X8, [X0]
	051 Move X9, [X8+1896]
	052 Move X1, [X8+1904]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, [X24]
	055 Move X21, X0
	056 Move X0, X8
	057 Call 0x1C17F10
	058 Move X8, [X20+32]
	059 Move X1, X19
	060 Move X3, X31
	061 Move X22, X0
	062 Move X8, [X8+192]
	063 Move X2, [X8+184]
	064 Call 0x2D0F824, X0, X1, X2
	065 Compare X21, 0
	066 JumpIfEqual {355}
	067 Move X3, [X23]
	068 Move X0, X21
	069 Move X1, X22
	070 Move W2, W31
	071 Call 0x21A28B4, X0, X1, X2
	072 Move X8, [X19+976]
	073 Compare X8, 0
	074 JumpIfEqual {355}
	075 Move X8, [X8+1064]
	076 Compare X8, 0
	077 JumpIfEqual {355}
	078 Move X26, 0x1A69000
	079 Move X26, [X26+1640]
	080 Move X25, 0x1A69000
	081 Move X21, [X8+976]
	082 Move X0, [X26]
	083 Move X25, [X25+1696]
	084 Call 0x1C17F10
	085 Move X8, [X20+32]
	086 Move X1, X19
	087 Move X3, X31
	088 Move X22, X0
	089 Move X8, [X8+192]
	090 Move X2, [X8+192]
	091 Call 0x2D0F824, X0, X1, X2
	092 Move X2, [X25]
	093 Move X0, X21
	094 Move X1, X22
	095 Call INotifyValueChangedExtensions.UnregisterValueChangedCallback, X0, X1
	096 Move X8, [X19+976]
	097 Compare X8, 0
	098 JumpIfEqual {355}
	099 Move X8, [X8+1056]
	100 Compare X8, 0
	101 JumpIfEqual {355}
	102 Move X0, [X26]
	103 Move X21, [X8+976]
	104 Call 0x1C17F10
	105 Move X8, [X20+32]
	106 Move X1, X19
	107 Move X3, X31
	108 Move X22, X0
	109 Move X8, [X8+192]
	110 Move X2, [X8+192]
	111 Call 0x2D0F824, X0, X1, X2
	112 Move X2, [X25]
	113 Move X0, X21
	114 Move X1, X22
	115 Call INotifyValueChangedExtensions.UnregisterValueChangedCallback, X0, X1
	116 Move [X19+976], X31
	117 Move X8, [X20+32]
	118 Move X21, [X19+968]
	119 Move X8, [X8+192]
	120 Move X0, [X8+152]
	121 Move W8, [X0+309]
	122 Move TEMP, X8
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfEqual {127}
	126 Call 0x1C5D684
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X8, [X20+32]
	132 Move X8, [X8+192]
	133 Move X0, [X8+152]
	134 Move W8, [X0+309]
	135 Move TEMP, X8
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {140}
	139 Call 0x1C5D684
	140 Compare X21, 0
	141 JumpIfEqual {355}
	142 Move X8, [X0+184]
	143 Move X0, X21
	144 Move X2, X31
	145 Move X1, [X8+32]
	146 Call VisualElement.RemoveFromClassList, X0, X1
	147 Move X8, [X20+32]
	148 Move X21, [X19+968]
	149 Move X8, [X8+192]
	150 Move X0, [X8+152]
	151 Move W8, [X0+309]
	152 Move TEMP, X8
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfEqual {157}
	156 Call 0x1C5D684
	157 Compare X21, 0
	158 JumpIfEqual {355}
	159 Move X8, [X0+184]
	160 Move X0, X21
	161 Move X2, X31
	162 Move X1, [X8+40]
	163 Call VisualElement.RemoveFromClassList, X0, X1
	164 Move X8, [X20+32]
	165 Move X21, [X19+968]
	166 Move X8, [X8+192]
	167 Move X0, [X8+152]
	168 Move W8, [X0+309]
	169 Move TEMP, X8
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfEqual {174}
	173 Call 0x1C5D684
	174 Compare X21, 0
	175 JumpIfEqual {355}
	176 Move X8, [X0+184]
	177 Move X0, X21
	178 Move X2, X31
	179 Move X1, [X8+24]
	180 Call VisualElement.RemoveFromClassList, X0, X1
	181 Move X8, [X20+32]
	182 Move X8, [X8+192]
	183 Move X0, [X8+112]
	184 Move W8, [X0+309]
	185 Move TEMP, X8
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfEqual {190}
	189 Call 0x1C5D684
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 Move X8, [X20+32]
	195 Move X8, [X8+192]
	196 Move X0, [X8+112]
	197 Move W8, [X0+309]
	198 Move TEMP, X8
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfEqual {203}
	202 Call 0x1C5D684
	203 Move X8, [X0+184]
	204 Move X0, X19
	205 Move X2, X31
	206 Move X1, [X8+64]
	207 Call VisualElement.RemoveFromClassList, X0, X1
	208 Move X8, [X20+32]
	209 Move X21, [X19+968]
	210 Move X8, [X8+192]
	211 Move X0, [X8+152]
	212 Move W8, [X0+309]
	213 Move TEMP, X8
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfEqual {218}
	217 Call 0x1C5D684
	218 Compare X21, 0
	219 JumpIfEqual {355}
	220 Move X8, [X0+184]
	221 Move X0, X21
	222 Move X2, X31
	223 Move X1, [X8+16]
	224 Call VisualElement.RemoveFromClassList, X0, X1
	225 Move X8, [X19+984]
	226 Compare X8, 0
	227 JumpIfEqual {268}
	228 Move X0, [X19+968]
	229 Compare X0, 0
	230 JumpIfEqual {355}
	231 Move X1, X31
	232 Call VisualElement.get_transform, X0
	233 Move X22, 0x1D24000
	234 Move W8, [X22+1923]
	235 Move X21, X0
	236 Compare W8, 0
	237 JumpIfNotEqual {243}
	238 Move X0, 0x1A3F000
	239 Move X0, [X0+1440]
	240 Call 0x1C17CF4
	241 Move W8, 1
	242 Move [X22+1923], W8
	243 Compare X21, 0
	244 JumpIfEqual {355}
	245 Move X8, 0x1A3F000
	246 Move X8, [X8+1440]
	247 Move X11, 0x1A69000
	248 Move X9, [X8]
	249 Move X8, [X21]
	250 Move X10, [X9+184]
	251 Move X11, [X11+1672]
	252 NotImplemented "Instruction LDRH not yet implemented."
	253 Move S9, [X10+4]
	254 Move S8, [X10+8]
	255 Move V10, [X10]
	256 Move X1, [X11]
	257 Compare X9, 0
	258 JumpIfEqual {265}
	259 Move X10, [X8+176]
	260 Add X10, X10, 8
	261 NotImplemented "Instruction LDUR not yet implemented."
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Subtract X9, X9, 1
	264 Add X10, X10, 16
	265 Move W2, 1
	266 Move X0, X21
	267 Call 0x1C5D788
	268 Move X20, [X31+80]
	269 Move X19, [X31+88]
	270 Move X22, [X31+64]
	271 Move X21, [X31+72]
	272 Move X24, [X31+48]
	273 Move X23, [X31+56]
	274 Move X26, [X31+32]
	275 Move X25, [X31+40]
	276 Move X30, [X31+24]
	277 Move D9, [X31+8]
	278 Move D8, [X31+16]
	279 Move V10, [X31+96]
	280 Return 
	281 Move W9, [X10]
	282 Add W9, W9, 1
	283 Add X8, X8, W9
	284 Add X0, X8, 312
	285 Move X8, [X0]
	286 Move X1, [X0+8]
	287 Move X0, X21
	288 Move V0, V10
	289 Move V1, V9
	290 Move V2, V8
	291 NotImplemented "Instruction BLR not yet implemented."
	292 Move X0, [X19+984]
	293 Compare X0, 0
	294 JumpIfEqual {355}
	295 Move X1, X31
	296 Call VisualElement.RemoveFromHierarchy, X0
	297 Move X0, [X24]
	298 Move X21, [X19+968]
	299 Call 0x1C17F10
	300 Move X8, [X20+32]
	301 Move X1, X19
	302 Move X3, X31
	303 Move X22, X0
	304 Move X8, [X8+192]
	305 Move X2, [X8+160]
	306 Call 0x2D0F824, X0, X1, X2
	307 Compare X21, 0
	308 JumpIfEqual {355}
	309 Move X3, [X23]
	310 Move X0, X21
	311 Move X1, X22
	312 Move W2, W31
	313 Call 0x21A28B4, X0, X1, X2
	314 Move [X19+984], X31
	315 Move X8, [X20+32]
	316 Move X8, [X8+192]
	317 Move X0, [X8+112]
	318 Move W8, [X0+309]
	319 Move TEMP, X8
	320 And TEMP, TEMP, 1
	321 Compare TEMP, 1
	322 JumpIfEqual {324}
	323 Call 0x1C5D684
	324 Move W8, [X0+224]
	325 Compare W8, 0
	326 JumpIfNotEqual {328}
	327 Call 0x1C17DFC
	328 Move X8, [X20+32]
	329 Move X8, [X8+192]
	330 Move X0, [X8+112]
	331 Move W8, [X0+309]
	332 Move TEMP, X8
	333 And TEMP, TEMP, 1
	334 Compare TEMP, 1
	335 JumpIfEqual {337}
	336 Call 0x1C5D684
	337 Move X8, [X0+184]
	338 Move X0, X19
	339 Move X20, [X31+80]
	340 Move X19, [X31+88]
	341 Move X22, [X31+64]
	342 Move X21, [X31+72]
	343 Move X1, [X8+56]
	344 Move X24, [X31+48]
	345 Move X23, [X31+56]
	346 Move X26, [X31+32]
	347 Move X25, [X31+40]
	348 Move X30, [X31+24]
	349 Move D9, [X31+8]
	350 Move D8, [X31+16]
	351 Move X2, X31
	352 Move V10, [X31+96]
	353 Call VisualElement.RemoveFromClassList, X0, X1
	354 Return 
	355 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x026B5A30 BLR X8
	0x026B5A34 LDR X0, [X19 + 0x3C8]
	0x026B5A38 CBZ X0, 0x26B6424
	0x026B5A3C MOV X1, X31
	0x026B5A40 BL 0x3E0AF0C
	0x026B5A44 CBZ X0, 0x26B6424
	0x026B5A48 ADRP X26, 0x1A68000
	0x026B5A4C LDR X8, [X0]
	0x026B5A50 LDR X26, [X26 + 0x630]
	0x026B5A54 MOV X21, X0
	0x026B5A58 LDRH W9, [X8 + 0x12E]
	0x026B5A5C LDR X1, [X26]
	0x026B5A60 CBZ X9, 0x26B5A84
	0x026B5A64 LDR X10, [X8 + 0xB0]
	0x026B5A68 ADD X10, X10, 0x8
	0x026B5A6C LDUR X11, [X10 - 0x8]
	0x026B5A70 CMP X11, X1
	0x026B5A74 B.EQ 0x26B5A94
	0x026B5A78 SUBS X9, X9, 0x1
	0x026B5A7C ADD X10, X10, 0x10
	0x026B5A80 B.NE 0x26B5A6C
	0x026B5A84 MOVZ W2, 0x3
	0x026B5A88 MOV X0, X21
	0x026B5A8C BL 0x1C5C788
	0x026B5A90 B 0x26B5AA4
	0x026B5A94 LDR W9, [X10]
	0x026B5A98 ADD W9, W9, 0x3
	0x026B5A9C ADD X8, X8, W9, 0x4, SXTW
	0x026B5AA0 ADD X0, X8, 0x138
	0x026B5AA4 LDP X8, X2, [X0]
	0x026B5AA8 MOV X0, X21
	0x026B5AAC MOV W1, W31
	0x026B5AB0 BLR X8
	0x026B5AB4 LDR X0, [X19 + 0x3C8]
	0x026B5AB8 CBZ X0, 0x26B6424
	0x026B5ABC MOV X1, X31
	0x026B5AC0 BL 0x3E0AF0C
	0x026B5AC4 CBZ X0, 0x26B6424
	0x026B5AC8 LDR X8, [X0]
	0x026B5ACC LDR X1, [X26]
	0x026B5AD0 MOV X21, X0
	0x026B5AD4 LDRH W9, [X8 + 0x12E]
	0x026B5AD8 CBZ X9, 0x26B5AFC
	0x026B5ADC LDR X10, [X8 + 0xB0]
	0x026B5AE0 ADD X10, X10, 0x8
	0x026B5AE4 LDUR X11, [X10 - 0x8]
	0x026B5AE8 CMP X11, X1
	0x026B5AEC B.EQ 0x26B5B0C
	0x026B5AF0 SUBS X9, X9, 0x1
	0x026B5AF4 ADD X10, X10, 0x10
	0x026B5AF8 B.NE 0x26B5AE4
	0x026B5AFC MOVZ W2, 0x1E
	0x026B5B00 MOV X0, X21
	0x026B5B04 BL 0x1C5C788
	0x026B5B08 B 0x26B5B1C
	0x026B5B0C LDR W9, [X10]
	0x026B5B10 ADD W9, W9, 0x1E
	0x026B5B14 ADD X8, X8, W9, 0x4, SXTW
	0x026B5B18 ADD X0, X8, 0x138
	0x026B5B1C LDP X8, X2, [X0]
	0x026B5B20 MOV X0, X21
	0x026B5B24 MOV W1, W31
	0x026B5B28 BLR X8
	0x026B5B2C LDR X0, [X19 + 0x3C8]
	0x026B5B30 CBZ X0, 0x26B6424
	0x026B5B34 MOV X1, X31
	0x026B5B38 BL 0x3E0AF0C
	0x026B5B3C CBZ X0, 0x26B6424
	0x026B5B40 LDR X8, [X0]
	0x026B5B44 LDR X1, [X26]
	0x026B5B48 MOV X21, X0
	0x026B5B4C LDRH W9, [X8 + 0x12E]
	0x026B5B50 CBZ X9, 0x26B5B74
	0x026B5B54 LDR X10, [X8 + 0xB0]
	0x026B5B58 ADD X10, X10, 0x8
	0x026B5B5C LDUR X11, [X10 - 0x8]
	0x026B5B60 CMP X11, X1
	0x026B5B64 B.EQ 0x26B5B84
	0x026B5B68 SUBS X9, X9, 0x1
	0x026B5B6C ADD X10, X10, 0x10
	0x026B5B70 B.NE 0x26B5B5C
	0x026B5B74 MOVZ W2, 0x1A
	0x026B5B78 MOV X0, X21
	0x026B5B7C BL 0x1C5C788
	0x026B5B80 B 0x26B5B94
	0x026B5B84 LDR W9, [X10]
	0x026B5B88 ADD W9, W9, 0x1A
	0x026B5B8C ADD X8, X8, W9, 0x4, SXTW
	0x026B5B90 ADD X0, X8, 0x138
	0x026B5B94 LDP X8, X2, [X0]
	0x026B5B98 MOV X0, X21
	0x026B5B9C MOV W1, W31
	0x026B5BA0 BLR X8
	0x026B5BA4 LDR X0, [X19 + 0x3C8]
	0x026B5BA8 CBZ X0, 0x26B6424
	0x026B5BAC MOV X1, X31
	0x026B5BB0 BL 0x3E0C77C
	0x026B5BB4 CBZ X0, 0x26B6424
	0x026B5BB8 LDR X8, [X0]
	0x026B5BBC LDR X1, [X22]
	0x026B5BC0 MOV X21, X0
	0x026B5BC4 LDRH W9, [X8 + 0x12E]
	0x026B5BC8 CBZ X9, 0x26B5BEC
	0x026B5BCC LDR X10, [X8 + 0xB0]
	0x026B5BD0 ADD X10, X10, 0x8
	0x026B5BD4 LDUR X11, [X10 - 0x8]
	0x026B5BD8 CMP X11, X1
	0x026B5BDC B.EQ 0x26B5BFC
	0x026B5BE0 SUBS X9, X9, 0x1
	0x026B5BE4 ADD X10, X10, 0x10
	0x026B5BE8 B.NE 0x26B5BD4
	0x026B5BEC MOVZ W2, 0x1
	0x026B5BF0 MOV X0, X21
	0x026B5BF4 BL 0x1C5C788
	0x026B5BF8 B 0x26B5C0C
	0x026B5BFC LDR W9, [X10]
	0x026B5C00 ADD W9, W9, 0x1
	0x026B5C04 ADD X8, X8, W9, 0x4, SXTW
	0x026B5C08 ADD X0, X8, 0x138
	0x026B5C0C LDP X8, X2, [X0]
	0x026B5C10 MOVZ W1, 0x1
	0x026B5C14 MOV X0, X21
	0x026B5C18 BLR X8
	0x026B5C1C LDR X0, [X19 + 0x3C8]
	0x026B5C20 CBZ X0, 0x26B6424
	0x026B5C24 MOV W1, W31
	0x026B5C28 MOV X2, X31
	0x026B5C2C BL 0x3E0FB0C
	0x026B5C30 LDR X0, [X19 + 0x3C8]
	0x026B5C34 CBZ X0, 0x26B6424
	0x026B5C38 MOV X1, X31
	0x026B5C3C BL 0x3E0C77C
	0x026B5C40 CBZ X0, 0x26B6424
	0x026B5C44 LDR X8, [X0]
	0x026B5C48 LDR X1, [X22]
	0x026B5C4C MOV X21, X0
	0x026B5C50 LDRH W9, [X8 + 0x12E]
	0x026B5C54 CBZ X9, 0x26B5C78
	0x026B5C58 LDR X10, [X8 + 0xB0]
	0x026B5C5C ADD X10, X10, 0x8
	0x026B5C60 LDUR X11, [X10 - 0x8]
	0x026B5C64 CMP X11, X1
	0x026B5C68 B.EQ 0x26B5C88
	0x026B5C6C SUBS X9, X9, 0x1
	0x026B5C70 ADD X10, X10, 0x10
	0x026B5C74 B.NE 0x26B5C60
	0x026B5C78 MOVZ W2, 0x10
	0x026B5C7C MOV X0, X21
	0x026B5C80 BL 0x1C5C788
	0x026B5C84 B 0x26B5C98
	0x026B5C88 LDR W9, [X10]
	0x026B5C8C ADD W9, W9, 0x10
	0x026B5C90 ADD X8, X8, W9, 0x4, SXTW
	0x026B5C94 ADD X0, X8, 0x138
	0x026B5C98 LDP X8, X2, [X0]
	0x026B5C9C MOVZ W1, 0x1
	0x026B5CA0 MOV X0, X21
	0x026B5CA4 BLR X8
	0x026B5CA8 LDR X0, [X19 + 0x3C8]
	0x026B5CAC CBZ X0, 0x26B6424
	0x026B5CB0 MOV X1, X31
	0x026B5CB4 BL 0x3E0C77C
	0x026B5CB8 CBZ X0, 0x26B6424
	0x026B5CBC LDR X8, [X0]
	0x026B5CC0 LDR X1, [X22]
	0x026B5CC4 MOV X21, X0
	0x026B5CC8 LDRH W9, [X8 + 0x12E]
	0x026B5CCC CBZ X9, 0x26B5CF0
	0x026B5CD0 LDR X10, [X8 + 0xB0]
	0x026B5CD4 ADD X10, X10, 0x8
	0x026B5CD8 LDUR X11, [X10 - 0x8]
	0x026B5CDC CMP X11, X1
	0x026B5CE0 B.EQ 0x26B5D00
	0x026B5CE4 SUBS X9, X9, 0x1
	0x026B5CE8 ADD X10, X10, 0x10
	0x026B5CEC B.NE 0x26B5CD8
	0x026B5CF0 MOVZ W2, 0x12
	0x026B5CF4 MOV X0, X21
	0x026B5CF8 BL 0x1C5C788
	0x026B5CFC B 0x26B5D10
	0x026B5D00 LDR W9, [X10]
	0x026B5D04 ADD W9, W9, 0x12
	0x026B5D08 ADD X8, X8, W9, 0x4, SXTW
	0x026B5D0C ADD X0, X8, 0x138
	0x026B5D10 LDP X8, X2, [X0]
	0x026B5D14 MOVZ W1, 0x1
	0x026B5D18 MOV X0, X21
	0x026B5D1C BLR X8
	0x026B5D20 LDR X0, [X19 + 0x3C8]
	0x026B5D24 CBZ X0, 0x26B6424
	0x026B5D28 MOV X1, X31
	0x026B5D2C STR W31, [X0 + 0x24]
	0x026B5D30 BL 0x3E0AF0C
	0x026B5D34 CBZ X0, 0x26B6424
	0x026B5D38 LDR X8, [X0]
	0x026B5D3C ADRP X25, 0x1A68000
	0x026B5D40 LDR X1, [X26]
	0x026B5D44 MOV X21, X0
	0x026B5D48 LDRH W9, [X8 + 0x12E]
	0x026B5D4C LDR X25, [X25 + 0x648]
	0x026B5D50 CBZ X9, 0x26B5D74
	0x026B5D54 LDR X10, [X8 + 0xB0]
	0x026B5D58 ADD X10, X10, 0x8
	0x026B5D5C LDUR X11, [X10 - 0x8]
	0x026B5D60 CMP X11, X1
	0x026B5D64 B.EQ 0x26B5D84
	0x026B5D68 SUBS X9, X9, 0x1
	0x026B5D6C ADD X10, X10, 0x10
	0x026B5D70 B.NE 0x26B5D5C
	0x026B5D74 MOVZ W2, 0xA
	0x026B5D78 MOV X0, X21
	0x026B5D7C BL 0x1C5C788
	0x026B5D80 B 0x26B5D94
	0x026B5D84 LDR W9, [X10]
	0x026B5D88 ADD W9, W9, 0xA
	0x026B5D8C ADD X8, X8, W9, 0x4, SXTW
	0x026B5D90 ADD X0, X8, 0x138
	0x026B5D94 LDP X8, X1, [X0]
	0x026B5D98 MOV X0, X21
	0x026B5D9C BLR X8
	0x026B5DA0 LDR X8, [X25]
	0x026B5DA4 MOV X22, X0
	0x026B5DA8 MOV X0, X8
	0x026B5DAC BL 0x1C16F10
	0x026B5DB0 LDR X8, [X19]
	0x026B5DB4 MOV X1, X19
	0x026B5DB8 MOV X3, X31
	0x026B5DBC MOV X23, X0
	0x026B5DC0 LDR X2, [X8 + 0x7B0]
	0x026B5DC4 BL 0x2D2BA94
	0x026B5DC8 MOV X0, X22
	0x026B5DCC MOV X1, X23
	0x026B5DD0 MOV X2, X31
	0x026B5DD4 BL 0x33C0DE4
	0x026B5DD8 LDR X23, [X26]
	0x026B5DDC CBZ X0, 0x26B5DFC
	0x026B5DE0 LDR X25, [X25]
	0x026B5DE4 MOV X24, X0
	0x026B5DE8 MOV X1, X25
	0x026B5DEC BL 0x1C16E00
	0x026B5DF0 MOV X22, X0
	0x026B5DF4 CBNZ X0, 0x26B5E00
	0x026B5DF8 B 0x26B5F38
	0x026B5DFC MOV X22, X31
	0x026B5E00 LDR X8, [X21]
	0x026B5E04 LDRH W9, [X8 + 0x12E]
	0x026B5E08 CBZ X9, 0x26B5E2C
	0x026B5E0C LDR X10, [X8 + 0xB0]
	0x026B5E10 ADD X10, X10, 0x8
	0x026B5E14 LDUR X11, [X10 - 0x8]
	0x026B5E18 CMP X11, X23
	0x026B5E1C B.EQ 0x26B5E40
	0x026B5E20 SUBS X9, X9, 0x1
	0x026B5E24 ADD X10, X10, 0x10
	0x026B5E28 B.NE 0x26B5E14
	0x026B5E2C MOVZ W2, 0xB
	0x026B5E30 MOV X0, X21
	0x026B5E34 MOV X1, X23
	0x026B5E38 BL 0x1C5C788
	0x026B5E3C B 0x26B5E50
	0x026B5E40 LDR W9, [X10]
	0x026B5E44 ADD W9, W9, 0xB
	0x026B5E48 ADD X8, X8, W9, 0x4, SXTW
	0x026B5E4C ADD X0, X8, 0x138
	0x026B5E50 LDP X8, X2, [X0]
	0x026B5E54 MOV X0, X21
	0x026B5E58 MOV X1, X22
	0x026B5E5C BLR X8
	0x026B5E60 LDR X0, [X19 + 0x3C8]
	0x026B5E64 CBZ X0, 0x26B6424
	0x026B5E68 MOV X1, X31
	0x026B5E6C BL 0x3E0AF0C
	0x026B5E70 CBZ X0, 0x26B6424
	0x026B5E74 LDR X8, [X0]
	0x026B5E78 ADRP X25, 0x1A3E000
	0x026B5E7C LDR X1, [X26]
	0x026B5E80 MOV X21, X0
	0x026B5E84 LDRH W9, [X8 + 0x12E]
	0x026B5E88 LDR X25, [X25 + 0xD28]
	0x026B5E8C CBZ X9, 0x26B5EB0
	0x026B5E90 LDR X10, [X8 + 0xB0]
	0x026B5E94 ADD X10, X10, 0x8
	0x026B5E98 LDUR X11, [X10 - 0x8]
	0x026B5E9C CMP X11, X1
	0x026B5EA0 B.EQ 0x26B5EC0
	0x026B5EA4 SUBS X9, X9, 0x1
	0x026B5EA8 ADD X10, X10, 0x10
	0x026B5EAC B.NE 0x26B5E98
	0x026B5EB0 MOVZ W2, 0xC
	0x026B5EB4 MOV X0, X21
	0x026B5EB8 BL 0x1C5C788
	0x026B5EBC B 0x26B5ED0
	0x026B5EC0 LDR W9, [X10]
	0x026B5EC4 ADD W9, W9, 0xC
	0x026B5EC8 ADD X8, X8, W9, 0x4, SXTW
	0x026B5ECC ADD X0, X8, 0x138
	0x026B5ED0 LDP X8, X1, [X0]
	0x026B5ED4 MOV X0, X21
	0x026B5ED8 BLR X8
	0x026B5EDC LDR X8, [X25]
	0x026B5EE0 MOV X22, X0
	0x026B5EE4 MOV X0, X8
	0x026B5EE8 BL 0x1C16F10
	0x026B5EEC LDR X8, [X20 + 0x20]
	0x026B5EF0 MOV X1, X19
	0x026B5EF4 MOV X3, X31
	0x026B5EF8 MOV X23, X0
	0x026B5EFC LDR X8, [X8 + 0xC0]
	0x026B5F00 LDR X2, [X8 + 0x50]
	0x026B5F04 BL 0x29818C8
	0x026B5F08 MOV X0, X22
	0x026B5F0C MOV X1, X23
	0x026B5F10 MOV X2, X31
	0x026B5F14 BL 0x33C0DE4
	0x026B5F18 LDR X23, [X26]
	0x026B5F1C CBZ X0, 0x26B5F44
	0x026B5F20 LDR X25, [X25]
	0x026B5F24 MOV X24, X0
	0x026B5F28 MOV X1, X25
	0x026B5F2C BL 0x1C16E00
	0x026B5F30 MOV X22, X0
	0x026B5F34 CBNZ X0, 0x26B5F48
	0x026B5F38 MOV X0, X24
	0x026B5F3C MOV X1, X25
	0x026B5F40 BL 0x1C171E0
	0x026B5F44 MOV X22, X31
	0x026B5F48 LDR X8, [X21]
	0x026B5F4C LDRH W9, [X8 + 0x12E]
	0x026B5F50 CBZ X9, 0x26B5F74
	0x026B5F54 LDR X10, [X8 + 0xB0]
	0x026B5F58 ADD X10, X10, 0x8
	0x026B5F5C LDUR X11, [X10 - 0x8]
	0x026B5F60 CMP X11, X23
	0x026B5F64 B.EQ 0x26B5F88
	0x026B5F68 SUBS X9, X9, 0x1
	0x026B5F6C ADD X10, X10, 0x10
	0x026B5F70 B.NE 0x26B5F5C
	0x026B5F74 MOVZ W2, 0xD
	0x026B5F78 MOV X0, X21
	0x026B5F7C MOV X1, X23
	0x026B5F80 BL 0x1C5C788
	0x026B5F84 B 0x26B5F98
	0x026B5F88 LDR W9, [X10]
	0x026B5F8C ADD W9, W9, 0xD
	0x026B5F90 ADD X8, X8, W9, 0x4, SXTW
	0x026B5F94 ADD X0, X8, 0x138
	0x026B5F98 LDP X8, X2, [X0]
	0x026B5F9C MOV X0, X21
	0x026B5FA0 MOV X1, X22
	0x026B5FA4 BLR X8
	0x026B5FA8 LDR X0, [X19 + 0x3C8]
	0x026B5FAC CBZ X0, 0x26B6424
	0x026B5FB0 MOV X1, X31
	0x026B5FB4 BL 0x3E0AF0C
	0x026B5FB8 CBZ X0, 0x26B6424
	0x026B5FBC LDR X8, [X0]
	0x026B5FC0 ADRP X24, 0x1A3F000
	0x026B5FC4 LDR X1, [X26]
	0x026B5FC8 MOV X21, X0
	0x026B5FCC LDRH W9, [X8 + 0x12E]
	0x026B5FD0 LDR X24, [X24 + 0xE70]
	0x026B5FD4 CBZ X9, 0x26B5FF8
	0x026B5FD8 LDR X10, [X8 + 0xB0]
	0x026B5FDC ADD X10, X10, 0x8
	0x026B5FE0 LDUR X11, [X10 - 0x8]
	0x026B5FE4 CMP X11, X1
	0x026B5FE8 B.EQ 0x26B6008
	0x026B5FEC SUBS X9, X9, 0x1
	0x026B5FF0 ADD X10, X10, 0x10
	0x026B5FF4 B.NE 0x26B5FE0
	0x026B5FF8 MOVZ W2, 0xE
	0x026B5FFC MOV X0, X21
	0x026B6000 BL 0x1C5C788
	0x026B6004 B 0x26B6018
	0x026B6008 LDR W9, [X10]
	0x026B600C ADD W9, W9, 0xE
	0x026B6010 ADD X8, X8, W9, 0x4, SXTW
	0x026B6014 ADD X0, X8, 0x138
	0x026B6018 LDP X8, X1, [X0]
	0x026B601C MOV X0, X21
	0x026B6020 BLR X8
	0x026B6024 LDR X8, [X24]
	0x026B6028 MOV X22, X0
	0x026B602C MOV X0, X8
	0x026B6030 BL 0x1C16F10
	0x026B6034 LDR X8, [X20 + 0x20]
	0x026B6038 MOV X1, X19
	0x026B603C MOV X3, X31
	0x026B6040 MOV X23, X0
	0x026B6044 LDR X8, [X8 + 0xC0]
	0x026B6048 LDR X2, [X8 + 0x58]
	0x026B604C BL 0x3314368
	0x026B6050 MOV X0, X22
	0x026B6054 MOV X1, X23
	0x026B6058 MOV X2, X31
	0x026B605C BL 0x33C0DE4
	0x026B6060 LDR X1, [X26]
	0x026B6064 MOV X22, X0
	0x026B6068 CBZ X0, 0x26B607C
	0x026B606C LDR X8, [X24]
	0x026B6070 LDR X9, [X22]
	0x026B6074 CMP X9, X8
	0x026B6078 B.NE 0x26B6428
	0x026B607C LDR X8, [X21]
	0x026B6080 LDRH W9, [X8 + 0x12E]
	0x026B6084 CBZ X9, 0x26B60A8
	0x026B6088 LDR X10, [X8 + 0xB0]
	0x026B608C ADD X10, X10, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1D26000
	007 Move X21, 0x1A69000
	008 Move W8, [X20+995]
	009 Move X21, [X21+1704]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x1A69000
	016 Move X0, [X0+1656]
	017 Call 0x1C17CF4
	018 Move X0, 0x1A68000
	019 Move X0, [X0+3784]
	020 Call 0x1C17CF4
	021 Move X0, 0x1A69000
	022 Move X0, [X0+1712]
	023 Call 0x1C17CF4
	024 Move X0, 0x1A69000
	025 Move X0, [X0+1720]
	026 Call 0x1C17CF4
	027 Move X0, 0x1A69000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move X0, 0x1A69000
	031 Move X0, [X0+1704]
	032 Call 0x1C17CF4
	033 Move X0, 0x1A69000
	034 Move X0, [X0+1736]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+995], W8
	038 Move X20, [X21]
	039 Add X19, X19, 32
	040 Move X0, [X19]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Move X8, [X0+192]
	048 Move X0, [X8+152]
	049 Move W8, [X0+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {55}
	054 Call 0x1C5D684
	055 Move X8, [X0+184]
	056 Move [X8], X20
	057 Move X0, [X19]
	058 Move W8, [X0+309]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {64}
	063 Call 0x1C5D684
	064 Move X8, [X0+192]
	065 Move X21, 0x1A68000
	066 Move X0, [X8+152]
	067 Move W8, [X0+309]
	068 Move X21, [X21+3784]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move X0, [X21]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X21]
	080 Move X8, [X19]
	081 Move X9, [X0+184]
	082 Move W10, [X8+309]
	083 Move X20, [X9]
	084 Move TEMP, X10
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {91}
	088 Move X0, X8
	089 Call 0x1C5D684
	090 Move X8, X0
	091 Move X8, [X8+192]
	092 Move X0, [X8+152]
	093 Move W8, [X0+309]
	094 Move TEMP, X8
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {99}
	098 Call 0x1C5D684
	099 Move X8, [X0+184]
	100 Move X0, X20
	101 Move X2, X31
	102 Move X1, [X8]
	103 Call String.Concat, X0, X1
	104 Move X8, [X19]
	105 Move X20, X0
	106 Move W9, [X8+309]
	107 Move TEMP, X9
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {114}
	111 Move X0, X8
	112 Call 0x1C5D684
	113 Move X8, X0
	114 Move X8, [X8+192]
	115 Move X0, [X8+152]
	116 Move W8, [X0+309]
	117 Move TEMP, X8
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {122}
	121 Call 0x1C5D684
	122 Move X8, [X0+184]
	123 Move [X8+8], X20
	124 Move X0, [X19]
	125 Move W8, [X0+309]
	126 Move TEMP, X8
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {131}
	130 Call 0x1C5D684
	131 Move X8, [X0+192]
	132 Move X0, [X8+152]
	133 Move W8, [X0+309]
	134 Move TEMP, X8
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {139}
	138 Call 0x1C5D684
	139 Move X8, [X21]
	140 Move X0, [X19]
	141 Move X8, [X8+184]
	142 Move W9, [X0+309]
	143 Move X20, [X8]
	144 Move TEMP, X9
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfEqual {149}
	148 Call 0x1C5D684
	149 Move X8, [X0+192]
	150 Move X22, 0x1A69000
	151 Move X0, [X8+152]
	152 Move W8, [X0+309]
	153 Move X22, [X22+1720]
	154 Move TEMP, X8
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {159}
	158 Call 0x1C5D684
	159 Move X8, [X0+184]
	160 Move X2, [X22]
	161 Move X0, X20
	162 Move X3, X31
	163 Move X1, [X8]
	164 Call String.Concat, X0, X1, X2
	165 Move X8, [X19]
	166 Move X20, X0
	167 Move W9, [X8+309]
	168 Move TEMP, X9
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {175}
	172 Move X0, X8
	173 Call 0x1C5D684
	174 Move X8, X0
	175 Move X8, [X8+192]
	176 Move X0, [X8+152]
	177 Move W8, [X0+309]
	178 Move TEMP, X8
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfEqual {183}
	182 Call 0x1C5D684
	183 Move X8, [X0+184]
	184 Move [X8+16], X20
	185 Move X0, [X19]
	186 Move W8, [X0+309]
	187 Move TEMP, X8
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfEqual {192}
	191 Call 0x1C5D684
	192 Move X8, [X0+192]
	193 Move X0, [X8+152]
	194 Move W8, [X0+309]
	195 Move TEMP, X8
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfEqual {200}
	199 Call 0x1C5D684
	200 Move X8, [X21]
	201 Move X0, [X19]
	202 Move X8, [X8+184]
	203 Move W9, [X0+309]
	204 Move X20, [X8]
	205 Move TEMP, X9
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfEqual {210}
	209 Call 0x1C5D684
	210 Move X8, [X0+192]
	211 Move X22, 0x1A69000
	212 Move X0, [X8+152]
	213 Move W8, [X0+309]
	214 Move X22, [X22+1712]
	215 Move TEMP, X8
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfEqual {220}
	219 Call 0x1C5D684
	220 Move X8, [X0+184]
	221 Move X2, [X22]
	222 Move X0, X20
	223 Move X3, X31
	224 Move X1, [X8]
	225 Call String.Concat, X0, X1, X2
	226 Move X8, [X19]
	227 Move X20, X0
	228 Move W9, [X8+309]
	229 Move TEMP, X9
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {236}
	233 Move X0, X8
	234 Call 0x1C5D684
	235 Move X8, X0
	236 Move X8, [X8+192]
	237 Move X0, [X8+152]
	238 Move W8, [X0+309]
	239 Move TEMP, X8
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfEqual {244}
	243 Call 0x1C5D684
	244 Move X8, [X0+184]
	245 Move [X8+24], X20
	246 Move X0, [X19]
	247 Move W8, [X0+309]
	248 Move TEMP, X8
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfEqual {253}
	252 Call 0x1C5D684
	253 Move X8, [X0+192]
	254 Move X0, [X8+152]
	255 Move W8, [X0+309]
	256 Move TEMP, X8
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfEqual {261}
	260 Call 0x1C5D684
	261 Move X8, [X21]
	262 Move X0, [X19]
	263 Move X8, [X8+184]
	264 Move W9, [X0+309]
	265 Move X20, [X8]
	266 Move TEMP, X9
	267 And TEMP, TEMP, 1
	268 Compare TEMP, 1
	269 JumpIfEqual {271}
	270 Call 0x1C5D684
	271 Move X8, [X0+192]
	272 Move X22, 0x1A69000
	273 Move X0, [X8+152]
	274 Move W8, [X0+309]
	275 Move X22, [X22+1728]
	276 Move TEMP, X8
	277 And TEMP, TEMP, 1
	278 Compare TEMP, 1
	279 JumpIfEqual {281}
	280 Call 0x1C5D684
	281 Move X8, [X0+184]
	282 Move X2, [X22]
	283 Move X0, X20
	284 Move X3, X31
	285 Move X1, [X8]
	286 Call String.Concat, X0, X1, X2
	287 Move X8, [X19]
	288 Move X20, X0
	289 Move W9, [X8+309]
	290 Move TEMP, X9
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfEqual {297}
	294 Move X0, X8
	295 Call 0x1C5D684
	296 Move X8, X0
	297 Move X8, [X8+192]
	298 Move X0, [X8+152]
	299 Move W8, [X0+309]
	300 Move TEMP, X8
	301 And TEMP, TEMP, 1
	302 Compare TEMP, 1
	303 JumpIfEqual {305}
	304 Call 0x1C5D684
	305 Move X8, [X0+184]
	306 Move [X8+32], X20
	307 Move X0, [X19]
	308 Move W8, [X0+309]
	309 Move TEMP, X8
	310 And TEMP, TEMP, 1
	311 Compare TEMP, 1
	312 JumpIfEqual {314}
	313 Call 0x1C5D684
	314 Move X8, [X0+192]
	315 Move X0, [X8+152]
	316 Move W8, [X0+309]
	317 Move TEMP, X8
	318 And TEMP, TEMP, 1
	319 Compare TEMP, 1
	320 JumpIfEqual {322}
	321 Call 0x1C5D684
	322 Move X8, [X21]
	323 Move X0, [X19]
	324 Move X8, [X8+184]
	325 Move W9, [X0+309]
	326 Move X20, [X8]
	327 Move TEMP, X9
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfEqual {332}
	331 Call 0x1C5D684
	332 Move X8, [X0+192]
	333 Move X21, 0x1A69000
	334 Move X0, [X8+152]
	335 Move W8, [X0+309]
	336 Move X21, [X21+1736]
	337 Move TEMP, X8
	338 And TEMP, TEMP, 1
	339 Compare TEMP, 1
	340 JumpIfEqual {342}
	341 Call 0x1C5D684
	342 Move X8, [X0+184]
	343 Move X2, [X21]
	344 Move X0, X20
	345 Move X3, X31
	346 Move X1, [X8]
	347 Call String.Concat, X0, X1, X2
	348 Move X8, [X19]
	349 Move X20, X0
	350 Move W9, [X8+309]
	351 Move TEMP, X9
	352 And TEMP, TEMP, 1
	353 Compare TEMP, 1
	354 JumpIfEqual {358}
	355 Move X0, X8
	356 Call 0x1C5D684
	357 Move X8, X0
	358 Move X8, [X8+192]
	359 Move X0, [X8+152]
	360 Move W8, [X0+309]
	361 Move TEMP, X8
	362 And TEMP, TEMP, 1
	363 Compare TEMP, 1
	364 JumpIfEqual {366}
	365 Call 0x1C5D684
	366 Move X8, [X0+184]
	367 Move [X8+40], X20
	368 Move X0, [X19]
	369 Move W8, [X0+309]
	370 Move TEMP, X8
	371 And TEMP, TEMP, 1
	372 Compare TEMP, 1
	373 JumpIfEqual {375}
	374 Call 0x1C5D684
	375 Move X8, [X0+192]
	376 Move X21, 0x1A69000
	377 Move X0, [X8+152]
	378 Move W8, [X0+309]
	379 Move X21, [X21+1656]
	380 Move TEMP, X8
	381 And TEMP, TEMP, 1
	382 Compare TEMP, 1
	383 JumpIfEqual {385}
	384 Call 0x1C5D684
	385 Move X0, [X21]
	386 Move W8, [X0+224]
	387 Compare W8, 0
	388 JumpIfNotEqual {391}
	389 Call 0x1C17DFC
	390 Move X0, [X21]
	391 Move X8, [X19]
	392 Move X9, [X0+184]
	393 Move W10, [X8+309]
	394 Move X20, [X9+16]
	395 Move TEMP, X10
	396 And TEMP, TEMP, 1
	397 Compare TEMP, 1
	398 JumpIfEqual {402}
	399 Move X0, X8
	400 Call 0x1C5D684
	401 Move X8, X0
	402 Move X8, [X8+192]
	403 Move X0, [X8+152]
	404 Move W8, [X0+309]
	405 Move TEMP, X8
	406 And TEMP, TEMP, 1
	407 Compare TEMP, 1
	408 JumpIfEqual {410}
	409 Call 0x1C5D684
	410 Move X8, [X0+184]
	411 Move X0, X20
	412 Move X2, X31
	413 Move X1, [X8]
	414 Call String.Concat, X0, X1
	415 Move X8, [X19]
	416 Move X20, X0
	417 Move W9, [X8+309]
	418 Move TEMP, X9
	419 And TEMP, TEMP, 1
	420 Compare TEMP, 1
	421 JumpIfEqual {425}
	422 Move X0, X8
	423 Call 0x1C5D684
	424 Move X8, X0
	425 Move X8, [X8+192]
	426 Move X0, [X8+152]
	427 Move W8, [X0+309]
	428 Move TEMP, X8
	429 And TEMP, TEMP, 1
	430 Compare TEMP, 1
	431 JumpIfEqual {433}
	432 Call 0x1C5D684
	433 Move X8, [X0+184]
	434 Move [X8+48], X20
	435 Move X0, [X19]
	436 Move W8, [X0+309]
	437 Move TEMP, X8
	438 And TEMP, TEMP, 1
	439 Compare TEMP, 1
	440 JumpIfEqual {442}
	441 Call 0x1C5D684
	442 Move X8, [X0+192]
	443 Move X0, [X8+152]
	444 Move W8, [X0+309]
	445 Move TEMP, X8
	446 And TEMP, TEMP, 1
	447 Compare TEMP, 1
	448 JumpIfEqual {450}
	449 Call 0x1C5D684
	450 Move X8, [X21]
	451 Move X0, [X19]
	452 Move X8, [X8+184]
	453 Move W9, [X0+309]
	454 Move X20, [X8+24]
	455 Move TEMP, X9
	456 And TEMP, TEMP, 1
	457 Compare TEMP, 1
	458 JumpIfEqual {460}
	459 Call 0x1C5D684
	460 Move X8, [X0+192]
	461 Move X0, [X8+152]
	462 Move W8, [X0+309]
	463 Move TEMP, X8
	464 And TEMP, TEMP, 1
	465 Compare TEMP, 1
	466 JumpIfEqual {468}
	467 Call 0x1C5D684
	468 Move X8, [X0+184]
	469 Move X0, X20
	470 Move X2, X31
	471 Move X1, [X8]
	472 Call String.Concat, X0, X1
	473 Move X8, [X19]
	474 Move X20, X0
	475 Move W9, [X8+309]
	476 Move TEMP, X9
	477 And TEMP, TEMP, 1
	478 Compare TEMP, 1
	479 JumpIfEqual {483}
	480 Move X0, X8
	481 Call 0x1C5D684
	482 Move X8, X0
	483 Move X8, [X8+192]
	484 Move X0, [X8+152]
	485 Move W8, [X0+309]
	486 Move TEMP, X8
	487 And TEMP, TEMP, 1
	488 Compare TEMP, 1
	489 JumpIfEqual {491}
	490 Call 0x1C5D684
	491 Move X8, [X0+184]
	492 Move [X8+56], X20
	493 Move X0, [X19]
	494 Move W8, [X0+309]
	495 Move TEMP, X8
	496 And TEMP, TEMP, 1
	497 Compare TEMP, 1
	498 JumpIfEqual {500}
	499 Call 0x1C5D684
	500 Move X8, [X0+192]
	501 Move X0, [X8+152]
	502 Move W8, [X0+309]
	503 Move TEMP, X8
	504 And TEMP, TEMP, 1
	505 Compare TEMP, 1
	506 JumpIfEqual {508}
	507 Call 0x1C5D684
	508 Move X8, [X21]
	509 Move X0, [X19]
	510 Move X8, [X8+184]
	511 Move W9, [X0+309]
	512 Move X20, [X8+64]
	513 Move TEMP, X9
	514 And TEMP, TEMP, 1
	515 Compare TEMP, 1
	516 JumpIfEqual {518}
	517 Call 0x1C5D684
	518 Move X8, [X0+192]
	519 Move X0, [X8+152]
	520 Move W8, [X0+309]
	521 Move TEMP, X8
	522 And TEMP, TEMP, 1
	523 Compare TEMP, 1
	524 JumpIfEqual {526}
	525 Call 0x1C5D684
	526 Move X8, [X0+184]
	527 Move X0, X20
	528 Move X2, X31
	529 Move X1, [X8]
	530 Call String.Concat, X0, X1
	531 Move X8, [X19]
	532 Move X20, X0
	533 Move W9, [X8+309]
	534 Move TEMP, X9
	535 And TEMP, TEMP, 1
	536 Compare TEMP, 1
	537 JumpIfEqual {541}
	538 Move X0, X8
	539 Call 0x1C5D684
	540 Move X8, X0
	541 Move X8, [X8+192]
	542 Move X0, [X8+152]
	543 Move W8, [X0+309]
	544 Move TEMP, X8
	545 And TEMP, TEMP, 1
	546 Compare TEMP, 1
	547 JumpIfEqual {549}
	548 Call 0x1C5D684
	549 Move X8, [X0+184]
	550 Move [X8+64], X20
	551 Move X0, [X19]
	552 Move W8, [X0+309]
	553 Move TEMP, X8
	554 And TEMP, TEMP, 1
	555 Compare TEMP, 1
	556 JumpIfEqual {558}
	557 Call 0x1C5D684
	558 Move X8, [X0+192]
	559 Move X0, [X8+152]
	560 Move W8, [X0+309]
	561 Move TEMP, X8
	562 And TEMP, TEMP, 1
	563 Compare TEMP, 1
	564 JumpIfEqual {572}
	565 Move X20, [X31+32]
	566 Move X19, [X31+40]
	567 Move X22, [X31+16]
	568 Move X21, [X31+24]
	569 Move X30, [X31+48]
	570 Call 0x1C5D684
	571 Return 
	572 Move X20, [X31+32]
	573 Move X19, [X31+40]
	574 Move X22, [X31+16]
	575 Move X21, [X31+24]
	576 Move X30, [X31+48]
	577 Return 

