Type: UnityEngine.UIElements.Foldout

Method: UnityEngine.UIElements.VisualElement get_contentContainer()

Disassembly:
	0x03D0F5D0 RET
	0x03D0F5D4 STR X30, [X31 - 0x10]!

ISIL:
	001 Move X0, [X0+992]
	002 Return X0

Method: System.Void set_text(System.String value)

Disassembly:
	0x03D0F5D8 LDR X0, [X0 + 0x28]
	0x03D0F5DC CBZ X0, 0x3D0F5F4
	0x03D0F5E0 LDR X8, [X0]
	0x03D0F5E4 LDR X2, [X8 + 0x768]
	0x03D0F5E8 LDR X1, [X8 + 0x770]
	0x03D0F5EC LDR X30, [X31], #0x10
	0x03D0F5F0 BR X2
	0x03D0F5F4 BL 0x1C16F20
	0x03D0F5F8 STP X30, X25, [X31 - 0x40]!
	0x03D0F5FC STP X24, X23, [X31 + 0x10]
	0x03D0F600 STP X22, X21, [X31 + 0x20]
	0x03D0F604 STP X20, X19, [X31 + 0x30]
	0x03D0F608 ADRP X21, 0x6D8000
	0x03D0F60C LDRB W8, [X21 + 0x8B0]
	0x03D0F610 MOV X20, X1
	0x03D0F614 MOV X19, X0
	0x03D0F618 TBNZ X8, 0x0, 0x3D0F720
	0x03D0F61C ADRP X0, 0x454000
	0x03D0F620 LDR X0, [X0 + 0x88]
	0x03D0F624 BL 0x1C16CF4
	0x03D0F628 ADRP X0, 0x40E000
	0x03D0F62C LDR X0, [X0 + 0xDA8]
	0x03D0F630 BL 0x1C16CF4
	0x03D0F634 ADRP X0, 0x40E000
	0x03D0F638 LDR X0, [X0 + 0x658]
	0x03D0F63C BL 0x1C16CF4
	0x03D0F640 ADRP X0, 0x40E000
	0x03D0F644 LDR X0, [X0 + 0x770]
	0x03D0F648 BL 0x1C16CF4
	0x03D0F64C ADRP X0, 0x40F000
	0x03D0F650 LDR X0, [X0 + 0x98]
	0x03D0F654 BL 0x1C16CF4
	0x03D0F658 ADRP X0, 0x40E000
	0x03D0F65C LDR X0, [X0 + 0x778]
	0x03D0F660 BL 0x1C16CF4
	0x03D0F664 ADRP X0, 0x40E000
	0x03D0F668 LDR X0, [X0 + 0x660]
	0x03D0F66C BL 0x1C16CF4
	0x03D0F670 ADRP X0, 0x40F000
	0x03D0F674 LDR X0, [X0 + 0xA0]
	0x03D0F678 BL 0x1C16CF4
	0x03D0F67C ADRP X0, 0x40E000
	0x03D0F680 LDR X0, [X0 + 0xDB0]
	0x03D0F684 BL 0x1C16CF4
	0x03D0F688 ADRP X0, 0x40E000
	0x03D0F68C LDR X0, [X0 + 0x780]
	0x03D0F690 BL 0x1C16CF4
	0x03D0F694 ADRP X0, 0x40E000
	0x03D0F698 LDR X0, [X0 + 0x788]
	0x03D0F69C BL 0x1C16CF4
	0x03D0F6A0 ADRP X0, 0x454000
	0x03D0F6A4 LDR X0, [X0 + 0xB60]
	0x03D0F6A8 BL 0x1C16CF4
	0x03D0F6AC ADRP X0, 0x454000
	0x03D0F6B0 LDR X0, [X0 + 0xB68]
	0x03D0F6B4 BL 0x1C16CF4
	0x03D0F6B8 ADRP X0, 0x454000
	0x03D0F6BC LDR X0, [X0 + 0xB70]
	0x03D0F6C0 BL 0x1C16CF4
	0x03D0F6C4 ADRP X0, 0x454000
	0x03D0F6C8 LDR X0, [X0 + 0xB78]
	0x03D0F6CC BL 0x1C16CF4
	0x03D0F6D0 ADRP X0, 0x454000
	0x03D0F6D4 LDR X0, [X0 + 0xB80]
	0x03D0F6D8 BL 0x1C16CF4
	0x03D0F6DC ADRP X0, 0x454000
	0x03D0F6E0 LDR X0, [X0 + 0xB88]
	0x03D0F6E4 BL 0x1C16CF4
	0x03D0F6E8 ADRP X0, 0x454000
	0x03D0F6EC LDR X0, [X0 + 0xB90]
	0x03D0F6F0 BL 0x1C16CF4
	0x03D0F6F4 ADRP X0, 0x40D000
	0x03D0F6F8 LDR X0, [X0 + 0xE80]
	0x03D0F6FC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6D9000
	006 Move W8, [X21+2214]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x454000
	014 Move X0, [X0+3200]
	015 Call 0x1C17CF4
	016 Move X0, 0x454000
	017 Move X0, [X0+3208]
	018 Call 0x1C17CF4
	019 Move X0, 0x454000
	020 Move X0, [X0+2944]
	021 Call 0x1C17CF4
	022 Move X0, 0x40E000
	023 Move X0, [X0+2096]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2214], W8
	027 Move X0, [X19+984]
	028 Compare X0, 0
	029 JumpIfEqual {90}
	030 Move X1, X20
	031 Move X2, X31
	032 Call BaseBoolField.set_text, X0, X1
	033 Move X0, [X19+984]
	034 Compare X0, 0
	035 JumpIfEqual {90}
	036 Move X8, 0x454000
	037 Move X8, [X8+3200]
	038 Move X21, 0x454000
	039 Move X20, 0x40E000
	040 Move X1, [X8]
	041 Move X21, [X21+2944]
	042 Move X20, [X20+2096]
	043 Call 0x2773DDC, X0
	044 Move X8, [X21]
	045 Move X19, X0
	046 Move W9, [X8+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {52}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Move X8, [X21]
	052 Move X0, [X20]
	053 Move X8, [X8+184]
	054 Move W9, [X0+224]
	055 Move X20, [X8+40]
	056 Compare W9, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X19
	060 Move X1, X31
	061 Move X2, X20
	062 Move X3, X31
	063 Call UQueryExtensions.Q, X0, X1, X2
	064 Compare X0, 0
	065 JumpIfEqual {85}
	066 Move X20, 0x454000
	067 Move X20, [X20+3208]
	068 Move X19, X0
	069 Move X0, [X20]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X20]
	075 Move X8, [X0+184]
	076 Move X0, X19
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X2, X31
	080 Move X1, [X8+40]
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 Call VisualElement.AddToClassList, X0, X1
	084 Return 
	085 Move X20, [X31+16]
	086 Move X19, [X31+24]
	087 Move X30, [X31+32]
	088 Move X21, [X31+40]
	089 Return 
	090 Call 0x1C17F20

Method: System.Boolean get_value()

Disassembly:
	0x03D0F700 ADRP X0, 0x454000
	0x03D0F704 LDR X0, [X0 + 0xC0]

ISIL:
	001 Move W0, [X0+1000]
	002 Return X0

Method: System.Void set_value(System.Boolean value)

Disassembly:
	0x03D0F708 BL 0x1C16CF4
	0x03D0F70C ADRP X0, 0x40E000
	0x03D0F710 LDR X0, [X0 + 0xD80]
	0x03D0F714 BL 0x1C16CF4
	0x03D0F718 MOVZ W8, 0x1
	0x03D0F71C STRB W8, [X21 + 0x8B0]
	0x03D0F720 CBZ X20, 0x3D0FA0C
	0x03D0F724 LDR X8, [X20 + 0x90]
	0x03D0F728 CBZ X8, 0x3D0F8FC
	0x03D0F72C LDR X0, [X19 + 0x28]
	0x03D0F730 CBZ X0, 0x3D0FA0C
	0x03D0F734 LDR X8, [X0]
	0x03D0F738 ADRP X21, 0x454000
	0x03D0F73C ADRP X22, 0x454000
	0x03D0F740 LDR X21, [X21 + 0x88]
	0x03D0F744 LDR X22, [X22 + 0xB60]
	0x03D0F748 LDR X9, [X8 + 0x768]
	0x03D0F74C LDR X1, [X8 + 0x770]
	0x03D0F750 ADRP X23, 0x454000
	0x03D0F754 ADRP X24, 0x40E000
	0x03D0F758 ADRP X25, 0x454000
	0x03D0F75C LDR X23, [X23 + 0xC0]
	0x03D0F760 LDR X24, [X24 + 0x780]
	0x03D0F764 LDR X25, [X25 + 0xB80]
	0x03D0F768 BLR X9
	0x03D0F76C LDR X8, [X21]
	0x03D0F770 MOV X21, X0
	0x03D0F774 MOV X0, X8
	0x03D0F778 BL 0x1C16F10
	0x03D0F77C LDR X2, [X22]
	0x03D0F780 MOV X1, X19
	0x03D0F784 MOV X3, X31
	0x03D0F788 MOV X22, X0
	0x03D0F78C BL 0x2A762F4
	0x03D0F790 LDR X0, [X23]
	0x03D0F794 BL 0x1C16F10
	0x03D0F798 MOV X1, X22
	0x03D0F79C MOV X2, X31
	0x03D0F7A0 MOV X23, X0
	0x03D0F7A4 BL 0x3DB9C3C
	0x03D0F7A8 MOV X0, X21
	0x03D0F7AC MOV X1, X23
	0x03D0F7B0 MOV X2, X31
	0x03D0F7B4 STR X23, [X19 + 0x50]
	0x03D0F7B8 BL 0x3D16A80
	0x03D0F7BC LDR X0, [X24]
	0x03D0F7C0 LDR X21, [X19 + 0x18]
	0x03D0F7C4 BL 0x1C16F10
	0x03D0F7C8 LDR X2, [X25]
	0x03D0F7CC MOV X1, X19
	0x03D0F7D0 MOV X3, X31
	0x03D0F7D4 MOV X22, X0
	0x03D0F7D8 BL 0x2D0E824
	0x03D0F7DC CBZ X21, 0x3D0FA0C
	0x03D0F7E0 ADRP X8, 0x40E000
	0x03D0F7E4 LDR X8, [X8 + 0x770]
	0x03D0F7E8 ADRP X23, 0x40F000
	0x03D0F7EC ADRP X24, 0x454000
	0x03D0F7F0 MOV X0, X21
	0x03D0F7F4 LDR X3, [X8]
	0x03D0F7F8 LDR X23, [X23 + 0xA0]
	0x03D0F7FC LDR X24, [X24 + 0xB88]
	0x03D0F800 MOV X1, X22
	0x03D0F804 MOV W2, W31
	0x03D0F808 BL 0x21A1534
	0x03D0F80C LDR X0, [X23]
	0x03D0F810 LDR X21, [X19 + 0x18]
	0x03D0F814 BL 0x1C16F10
	0x03D0F818 LDR X2, [X24]
	0x03D0F81C MOV X1, X19
	0x03D0F820 MOV X3, X31
	0x03D0F824 MOV X22, X0
	0x03D0F828 BL 0x2D0E824
	0x03D0F82C CBZ X21, 0x3D0FA0C
	0x03D0F830 ADRP X8, 0x40F000
	0x03D0F834 LDR X8, [X8 + 0x98]
	0x03D0F838 ADRP X23, 0x40E000
	0x03D0F83C ADRP X24, 0x454000
	0x03D0F840 MOV X0, X21
	0x03D0F844 LDR X3, [X8]
	0x03D0F848 LDR X23, [X23 + 0x788]
	0x03D0F84C LDR X24, [X24 + 0xB90]
	0x03D0F850 MOV X1, X22
	0x03D0F854 MOV W2, W31
	0x03D0F858 BL 0x21A1534
	0x03D0F85C LDR X0, [X23]
	0x03D0F860 LDR X21, [X19 + 0x18]
	0x03D0F864 BL 0x1C16F10
	0x03D0F868 LDR X2, [X24]
	0x03D0F86C MOV X1, X19
	0x03D0F870 MOV X3, X31
	0x03D0F874 MOV X22, X0
	0x03D0F878 BL 0x2D0E824
	0x03D0F87C CBZ X21, 0x3D0FA0C
	0x03D0F880 ADRP X8, 0x40E000
	0x03D0F884 LDR X8, [X8 + 0x778]
	0x03D0F888 MOV X0, X21
	0x03D0F88C MOV X1, X22
	0x03D0F890 MOV W2, W31
	0x03D0F894 LDR X3, [X8]
	0x03D0F898 BL 0x21A1534
	0x03D0F89C LDR X20, [X20 + 0x90]
	0x03D0F8A0 CBZ X20, 0x3D0FA0C
	0x03D0F8A4 ADRP X10, 0x40D000
	0x03D0F8A8 LDR X8, [X20]
	0x03D0F8AC LDR X10, [X10 + 0xE80]
	0x03D0F8B0 ADRP X22, 0x40E000
	0x03D0F8B4 ADRP X21, 0x454000
	0x03D0F8B8 LDRH W9, [X8 + 0x12E]
	0x03D0F8BC LDR X1, [X10]
	0x03D0F8C0 LDR X22, [X22 + 0x660]
	0x03D0F8C4 LDR X21, [X21 + 0xB78]
	0x03D0F8C8 CBZ X9, 0x3D0F8EC
	0x03D0F8CC LDR X10, [X8 + 0xB0]
	0x03D0F8D0 ADD X10, X10, 0x8
	0x03D0F8D4 LDUR X11, [X10 - 0x8]
	0x03D0F8D8 CMP X11, X1
	0x03D0F8DC B.EQ 0x3D0F910
	0x03D0F8E0 SUBS X9, X9, 0x1
	0x03D0F8E4 ADD X10, X10, 0x10
	0x03D0F8E8 B.NE 0x3D0F8D4
	0x03D0F8EC MOV X0, X20
	0x03D0F8F0 MOV W2, W31
	0x03D0F8F4 BL 0x1C5C788
	0x03D0F8F8 B 0x3D0F91C
	0x03D0F8FC LDP X20, X19, [X31 + 0x30]
	0x03D0F900 LDP X22, X21, [X31 + 0x20]
	0x03D0F904 LDP X24, X23, [X31 + 0x10]
	0x03D0F908 LDP X30, X25, [X31], #0x40
	0x03D0F90C RET
	0x03D0F910 LDRSW X9, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x6D9000
	007 Move W8, [X19+2215]
	008 Move W21, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x455000
	015 Move X0, [X0+2784]
	016 Call 0x1C17CF4
	017 Move X0, 0x455000
	018 Move X0, [X0+2792]
	019 Call 0x1C17CF4
	020 Move X0, 0x3E5000
	021 Move X0, [X0+3584]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+2215], W8
	025 Move W19, [X20+1000]
	026 And W8, W21, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, 0x455000
	029 Move X8, [X8+2792]
	030 Move X22, 0x455000
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Move X22, [X22+2784]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X2, [X22]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 And W1, W21, 1
	041 Call 0x28F3FFC, X0, X1
	042 Move X19, X0
	043 Compare X0, 0
	044 JumpIfEqual {93}
	045 Move X0, X19
	046 Move X1, X20
	047 Move X2, X31
	048 Call EventBase.set_target, X0, X1
	049 And W1, W21, 1
	050 Move X0, X20
	051 Call Foldout.SetValueWithoutNotify, X0, X1
	052 Move X8, [X20]
	053 Move X9, [X8+408]
	054 Move X2, [X8+416]
	055 Move X0, X20
	056 Move X1, X19
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X0, X20
	059 Move X1, X31
	060 Call VisualElement.SaveViewData, X0
	061 Move X20, X31
	062 Move X10, 0x3E5000
	063 Move X8, [X19]
	064 Move X10, [X10+3584]
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Move X1, [X10]
	067 Compare X9, 0
	068 JumpIfEqual {75}
	069 Move X10, [X8+176]
	070 Add X10, X10, 8
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract X9, X9, 1
	074 Add X10, X10, 16
	075 Move X0, X19
	076 Move W2, W31
	077 Call 0x1C5D788
	078 NotImplemented "Instruction LDRSW not yet implemented."
	079 Add X8, X8, X9
	080 Add X0, X8, 312
	081 Move X8, [X0]
	082 Move X1, [X0+8]
	083 Move X0, X19
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Compare X20, 0
	086 JumpIfNotEqual {94}
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 Move X30, [X31+48]
	092 Return 
	093 Call 0x1C17F20
	094 Move X0, X20
	095 Call 0x1C17F18
	096 Move X21, X0
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, X21
	099 Call 0x3EB2AD0
	100 Move X20, [X0]
	101 Call 0x3EB2AE0
	102 Compare X19, 0
	103 JumpIfNotEqual {62}
	104 Move X20, X31
	105 Move X21, X0
	106 Compare X19, 0
	107 JumpIfEqual {131}
	108 Move X10, 0x3E5000
	109 Move X8, [X19]
	110 Move X10, [X10+3584]
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Move X1, [X10]
	113 Compare X9, 0
	114 JumpIfEqual {121}
	115 Move X10, [X8+176]
	116 Add X10, X10, 8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract X9, X9, 1
	120 Add X10, X10, 16
	121 Move X0, X19
	122 Move W2, W31
	123 Call 0x1C5D788
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Add X8, X8, X9
	126 Add X0, X8, 312
	127 Move X8, [X0]
	128 Move X1, [X0+8]
	129 Move X0, X19
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Compare X20, 0
	132 JumpIfNotEqual {135}
	133 Move X0, X21
	134 Call 0x1D2D690
	135 Move X0, X20
	136 Call 0x1C17F18
	137 Call 0x1991590

Method: System.Void SetValueWithoutNotify(System.Boolean newValue)

Disassembly:
	0x03D0F914 ADD X8, X8, X9, 0x4, LSL
	0x03D0F918 ADD X0, X8, 0x138
	0x03D0F91C LDP X8, X1, [X0]
	0x03D0F920 MOV X0, X20
	0x03D0F924 BLR X8
	0x03D0F928 LDR X8, [X22]
	0x03D0F92C MOV X20, X0
	0x03D0F930 MOV X0, X8
	0x03D0F934 BL 0x1C16F10
	0x03D0F938 LDR X2, [X21]
	0x03D0F93C MOV X1, X19
	0x03D0F940 MOV X3, X31
	0x03D0F944 MOV X21, X0
	0x03D0F948 BL 0x2D0E824
	0x03D0F94C CBZ X20, 0x3D0FA0C
	0x03D0F950 ADRP X23, 0x40E000
	0x03D0F954 LDR X23, [X23 + 0x658]
	0x03D0F958 ADRP X24, 0x454000
	0x03D0F95C MOV X0, X20
	0x03D0F960 MOV X1, X21
	0x03D0F964 LDR X3, [X23]
	0x03D0F968 LDR X24, [X24 + 0xB68]
	0x03D0F96C MOV W2, W31
	0x03D0F970 BL 0x21A1534
	0x03D0F974 LDR X0, [X22]
	0x03D0F978 LDR X20, [X19 + 0x28]
	0x03D0F97C BL 0x1C16F10
	0x03D0F980 LDR X2, [X24]
	0x03D0F984 MOV X1, X19
	0x03D0F988 MOV X3, X31
	0x03D0F98C MOV X21, X0
	0x03D0F990 BL 0x2D0E824
	0x03D0F994 CBZ X20, 0x3D0FA0C
	0x03D0F998 LDR X3, [X23]
	0x03D0F99C ADRP X22, 0x40E000
	0x03D0F9A0 ADRP X23, 0x454000
	0x03D0F9A4 LDR X22, [X22 + 0xDB0]
	0x03D0F9A8 LDR X23, [X23 + 0xB70]
	0x03D0F9AC MOV X0, X20
	0x03D0F9B0 MOV X1, X21
	0x03D0F9B4 MOV W2, W31
	0x03D0F9B8 BL 0x21A1534
	0x03D0F9BC LDR X0, [X22]
	0x03D0F9C0 LDR X20, [X19 + 0x28]
	0x03D0F9C4 BL 0x1C16F10
	0x03D0F9C8 LDR X2, [X23]
	0x03D0F9CC MOV X1, X19
	0x03D0F9D0 MOV X3, X31
	0x03D0F9D4 MOV X21, X0
	0x03D0F9D8 BL 0x2D0E824
	0x03D0F9DC CBZ X20, 0x3D0FA0C
	0x03D0F9E0 ADRP X8, 0x40E000
	0x03D0F9E4 LDR X8, [X8 + 0xDA8]
	0x03D0F9E8 MOV X0, X20
	0x03D0F9EC MOV X1, X21
	0x03D0F9F0 LDP X20, X19, [X31 + 0x30]
	0x03D0F9F4 LDR X3, [X8]
	0x03D0F9F8 LDP X22, X21, [X31 + 0x20]
	0x03D0F9FC LDP X24, X23, [X31 + 0x10]
	0x03D0FA00 MOV W2, W31
	0x03D0FA04 LDP X30, X25, [X31], #0x40
	0x03D0FA08 B 0x21A1534
	0x03D0FA0C BL 0x1C16F20
	0x03D0FA10 STR X30, [X31 - 0x40]!
	0x03D0FA14 STP X24, X23, [X31 + 0x10]
	0x03D0FA18 STP X22, X21, [X31 + 0x20]
	0x03D0FA1C STP X20, X19, [X31 + 0x30]
	0x03D0FA20 ADRP X21, 0x6D8000
	0x03D0FA24 LDRB W8, [X21 + 0x8B1]
	0x03D0FA28 MOV X20, X1
	0x03D0FA2C MOV X19, X0
	0x03D0FA30 TBNZ X8, 0x0, 0x3D0FB14
	0x03D0FA34 ADRP X0, 0x40E000
	0x03D0FA38 LDR X0, [X0 + 0xDC0]
	0x03D0FA3C BL 0x1C16CF4
	0x03D0FA40 ADRP X0, 0x40E000
	0x03D0FA44 LDR X0, [X0 + 0x698]
	0x03D0FA48 BL 0x1C16CF4
	0x03D0FA4C ADRP X0, 0x40E000
	0x03D0FA50 LDR X0, [X0 + 0x790]
	0x03D0FA54 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6D9000
	007 Move W8, [X22+2216]
	008 Move W21, W1
	009 Move X19, X0
	010 And W20, W1, 1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x40E000
	016 Move X0, [X0+296]
	017 Call 0x1C17CF4
	018 Move X0, 0x40F000
	019 Move X0, [X0+3856]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2216], W8
	023 Move X0, [X19+984]
	024 Move [X19+1000], W20
	025 Compare X0, 0
	026 JumpIfEqual {91}
	027 Move X8, [X0]
	028 And W1, W21, 1
	029 Move X9, [X8+2184]
	030 Move X2, [X8+2192]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+1896]
	035 Move X1, [X8+1904]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Compare X0, 0
	038 JumpIfEqual {91}
	039 Move X22, 0x40F000
	040 Move X22, [X22+3856]
	041 Move X1, X31
	042 Call VisualElement.get_style, X0
	043 Move X1, [X22]
	044 NotImplemented "Instruction ORN not yet implemented."
	045 Move X20, X0
	046 And W0, W8, 1
	047 Call 0x266FACC, X0
	048 Compare X20, 0
	049 JumpIfEqual {91}
	050 Move X10, 0x40E000
	051 Move X8, [X20]
	052 Move X10, [X10+296]
	053 Move X21, X0
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X1, [X10]
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move W2, 18
	065 Move X0, X20
	066 Call 0x1C5D788
	067 Move W9, [X10]
	068 Add W9, W9, 18
	069 Add X8, X8, W9
	070 Add X0, X8, 312
	071 Move X8, [X0]
	072 Move X2, [X0+8]
	073 Move X0, X20
	074 Move X1, X21
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move W20, [X19+1000]
	077 Move X0, X19
	078 Move X1, X31
	079 Call VisualElement.get_pseudoStates, X0
	080 And W8, W0, 0xFFFFFFF7
	081 Or W1, W8, W20
	082 Move X0, X19
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X2, X31
	088 Move X30, [X31+48]
	089 Call VisualElement.set_pseudoStates, X0, X1
	090 Return 
	091 Call 0x1C17F20

Method: System.Void OnViewDataReady()

Disassembly:
	0x03D0FA58 ADRP X0, 0x40F000
	0x03D0FA5C LDR X0, [X0 + 0xD28]
	0x03D0FA60 BL 0x1C16CF4
	0x03D0FA64 ADRP X0, 0x40E000
	0x03D0FA68 LDR X0, [X0 + 0x798]
	0x03D0FA6C BL 0x1C16CF4
	0x03D0FA70 ADRP X0, 0x40E000
	0x03D0FA74 LDR X0, [X0 + 0x660]
	0x03D0FA78 BL 0x1C16CF4
	0x03D0FA7C ADRP X0, 0x40F000
	0x03D0FA80 LDR X0, [X0 + 0xA0]
	0x03D0FA84 BL 0x1C16CF4
	0x03D0FA88 ADRP X0, 0x40E000
	0x03D0FA8C LDR X0, [X0 + 0xDB0]
	0x03D0FA90 BL 0x1C16CF4
	0x03D0FA94 ADRP X0, 0x40E000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call VisualElement.OnViewDataReady, X0
	006 Move X0, X19
	007 Move X1, X31
	008 Call VisualElement.GetFullHierarchicalViewDataKey, X0
	009 Move X2, X0
	010 Move X0, X19
	011 Move X1, X19
	012 Move X3, X31
	013 Call VisualElement.OverwriteFromViewData, X0, X1, X2
	014 Move W1, [X19+1000]
	015 Move X0, X19
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call Foldout.SetValueWithoutNotify, X0, X1
	019 Return 

Method: System.Void Apply(UnityEngine.UIElements.KeyboardNavigationOperation op, UnityEngine.UIElements.EventBase sourceEvent)

Disassembly:
	0x03D0FA98 LDR X0, [X0 + 0x780]
	0x03D0FA9C BL 0x1C16CF4
	0x03D0FAA0 ADRP X0, 0x40E000
	0x03D0FAA4 LDR X0, [X0 + 0x788]
	0x03D0FAA8 BL 0x1C16CF4
	0x03D0FAAC ADRP X0, 0x454000
	0x03D0FAB0 LDR X0, [X0 + 0xB68]
	0x03D0FAB4 BL 0x1C16CF4
	0x03D0FAB8 ADRP X0, 0x454000
	0x03D0FABC LDR X0, [X0 + 0xB70]
	0x03D0FAC0 BL 0x1C16CF4
	0x03D0FAC4 ADRP X0, 0x454000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X2
	004 Call Foldout.Apply, X0, X1
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {17}
	009 Compare X19, 0
	010 JumpIfEqual {20}
	011 Move X0, X19
	012 Move X1, X31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call EventBase.StopPropagation, X0
	016 Return 
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 
	020 Call 0x1C17F20

Method: System.Boolean Apply(UnityEngine.UIElements.KeyboardNavigationOperation op)

Disassembly:
	0x03D0FAC8 LDR X0, [X0 + 0xB78]
	0x03D0FACC BL 0x1C16CF4
	0x03D0FAD0 ADRP X0, 0x454000
	0x03D0FAD4 LDR X0, [X0 + 0xB80]
	0x03D0FAD8 BL 0x1C16CF4
	0x03D0FADC ADRP X0, 0x454000
	0x03D0FAE0 LDR X0, [X0 + 0xB88]
	0x03D0FAE4 BL 0x1C16CF4
	0x03D0FAE8 ADRP X0, 0x454000
	0x03D0FAEC LDR X0, [X0 + 0xB90]
	0x03D0FAF0 BL 0x1C16CF4
	0x03D0FAF4 ADRP X0, 0x40D000
	0x03D0FAF8 LDR X0, [X0 + 0xE80]
	0x03D0FAFC BL 0x1C16CF4
	0x03D0FB00 ADRP X0, 0x454000
	0x03D0FB04 LDR X0, [X0 + 0xC8]
	0x03D0FB08 BL 0x1C16CF4
	0x03D0FB0C MOVZ W8, 0x1
	0x03D0FB10 STRB W8, [X21 + 0x8B1]
	0x03D0FB14 CBZ X20, 0x3D0FDA4
	0x03D0FB18 LDR X8, [X20 + 0x88]
	0x03D0FB1C CBZ X8, 0x3D0FC94
	0x03D0FB20 LDR X0, [X19 + 0x28]
	0x03D0FB24 CBZ X0, 0x3D0FDA4
	0x03D0FB28 LDR X8, [X0]
	0x03D0FB2C ADRP X22, 0x40E000
	0x03D0FB30 ADRP X23, 0x454000
	0x03D0FB34 LDR X9, [X8 + 0x768]
	0x03D0FB38 LDR X1, [X8 + 0x770]
	0x03D0FB3C LDR X22, [X22 + 0x780]
	0x03D0FB40 LDR X23, [X23 + 0xB80]
	0x03D0FB44 BLR X9
	0x03D0FB48 LDR X1, [X19 + 0x50]
	0x03D0FB4C MOV X2, X31
	0x03D0FB50 BL 0x3D16B2C
	0x03D0FB54 LDR X0, [X22]
	0x03D0FB58 LDR X21, [X19 + 0x18]
	0x03D0FB5C BL 0x1C16F10
	0x03D0FB60 LDR X2, [X23]
	0x03D0FB64 MOV X1, X19
	0x03D0FB68 MOV X3, X31
	0x03D0FB6C MOV X22, X0
	0x03D0FB70 BL 0x2D0E824
	0x03D0FB74 CBZ X21, 0x3D0FDA4
	0x03D0FB78 ADRP X8, 0x40E000
	0x03D0FB7C LDR X8, [X8 + 0x790]
	0x03D0FB80 ADRP X23, 0x40F000
	0x03D0FB84 ADRP X24, 0x454000
	0x03D0FB88 MOV X0, X21
	0x03D0FB8C LDR X3, [X8]
	0x03D0FB90 LDR X23, [X23 + 0xA0]
	0x03D0FB94 LDR X24, [X24 + 0xB88]
	0x03D0FB98 MOV X1, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W8, 1
	006 NotImplemented "Instruction LSLV not yet implemented."
	007 Move W9, 3902
	008 And W31, W8, W9
	009 Move W19, W31
	010 Move W0, W19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return X0
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W1, W31
	018 Call Foldout.SetValueWithoutNotify, X0, X1
	019 Move W19, 1
	020 Move W1, 1
	021 Move W19, 1
	022 Call Foldout.SetValueWithoutNotify, X0, X1
	023 Move [X31+12], W1
	024 Move X0, 0x455000
	025 Move X0, [X0+208]
	026 Call 0x1C17D08
	027 Add X1, X31, 12
	028 Call 0x1C17E04
	029 Move X19, X0
	030 Move X0, 0x3ED000
	031 Move X0, [X0+1888]
	032 Call 0x1C17D08
	033 Call 0x1C17F10
	034 Move X20, X0
	035 Move X0, 0x3F0000
	036 Move X0, [X0+3320]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X20
	040 Move X2, X19
	041 Move X3, X31
	042 Move X4, X31
	043 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	044 Move X0, 0x455000
	045 Move X0, [X0+2800]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X20
	049 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x03D0FB9C MOV W2, W31
	0x03D0FBA0 BL 0x21A18B4
	0x03D0FBA4 LDR X0, [X23]
	0x03D0FBA8 LDR X21, [X19 + 0x18]
	0x03D0FBAC BL 0x1C16F10
	0x03D0FBB0 LDR X2, [X24]
	0x03D0FBB4 MOV X1, X19
	0x03D0FBB8 MOV X3, X31
	0x03D0FBBC MOV X22, X0
	0x03D0FBC0 BL 0x2D0E824
	0x03D0FBC4 CBZ X21, 0x3D0FDA4
	0x03D0FBC8 ADRP X8, 0x40F000
	0x03D0FBCC LDR X8, [X8 + 0xD28]
	0x03D0FBD0 ADRP X23, 0x40E000
	0x03D0FBD4 ADRP X24, 0x454000
	0x03D0FBD8 MOV X0, X21
	0x03D0FBDC LDR X3, [X8]
	0x03D0FBE0 LDR X23, [X23 + 0x788]
	0x03D0FBE4 LDR X24, [X24 + 0xB90]
	0x03D0FBE8 MOV X1, X22
	0x03D0FBEC MOV W2, W31
	0x03D0FBF0 BL 0x21A18B4
	0x03D0FBF4 LDR X0, [X23]
	0x03D0FBF8 LDR X21, [X19 + 0x18]
	0x03D0FBFC BL 0x1C16F10
	0x03D0FC00 LDR X2, [X24]
	0x03D0FC04 MOV X1, X19
	0x03D0FC08 MOV X3, X31
	0x03D0FC0C MOV X22, X0
	0x03D0FC10 BL 0x2D0E824
	0x03D0FC14 CBZ X21, 0x3D0FDA4
	0x03D0FC18 ADRP X8, 0x40E000
	0x03D0FC1C LDR X8, [X8 + 0x798]
	0x03D0FC20 MOV X0, X21
	0x03D0FC24 MOV X1, X22
	0x03D0FC28 MOV W2, W31
	0x03D0FC2C LDR X3, [X8]
	0x03D0FC30 BL 0x21A18B4
	0x03D0FC34 LDR X20, [X20 + 0x88]
	0x03D0FC38 CBZ X20, 0x3D0FDA4
	0x03D0FC3C ADRP X10, 0x40D000
	0x03D0FC40 LDR X8, [X20]
	0x03D0FC44 LDR X10, [X10 + 0xE80]
	0x03D0FC48 ADRP X22, 0x40E000
	0x03D0FC4C ADRP X21, 0x454000
	0x03D0FC50 LDRH W9, [X8 + 0x12E]
	0x03D0FC54 LDR X1, [X10]
	0x03D0FC58 LDR X22, [X22 + 0x660]
	0x03D0FC5C LDR X21, [X21 + 0xB78]
	0x03D0FC60 CBZ X9, 0x3D0FC84
	0x03D0FC64 LDR X10, [X8 + 0xB0]
	0x03D0FC68 ADD X10, X10, 0x8
	0x03D0FC6C LDUR X11, [X10 - 0x8]
	0x03D0FC70 CMP X11, X1
	0x03D0FC74 B.EQ 0x3D0FCA8
	0x03D0FC78 SUBS X9, X9, 0x1
	0x03D0FC7C ADD X10, X10, 0x10
	0x03D0FC80 B.NE 0x3D0FC6C
	0x03D0FC84 MOV X0, X20
	0x03D0FC88 MOV W2, W31
	0x03D0FC8C BL 0x1C5C788
	0x03D0FC90 B 0x3D0FCB4
	0x03D0FC94 LDP X20, X19, [X31 + 0x30]
	0x03D0FC98 LDP X22, X21, [X31 + 0x20]
	0x03D0FC9C LDP X24, X23, [X31 + 0x10]
	0x03D0FCA0 LDR X30, [X31], #0x40
	0x03D0FCA4 RET
	0x03D0FCA8 LDRSW X9, [X10]
	0x03D0FCAC ADD X8, X8, X9, 0x4, LSL
	0x03D0FCB0 ADD X0, X8, 0x138
	0x03D0FCB4 LDP X8, X1, [X0]
	0x03D0FCB8 MOV X0, X20
	0x03D0FCBC BLR X8
	0x03D0FCC0 LDR X8, [X22]
	0x03D0FCC4 MOV X20, X0
	0x03D0FCC8 MOV X0, X8
	0x03D0FCCC BL 0x1C16F10
	0x03D0FCD0 LDR X2, [X21]
	0x03D0FCD4 MOV X1, X19
	0x03D0FCD8 MOV X3, X31
	0x03D0FCDC MOV X21, X0
	0x03D0FCE0 BL 0x2D0E824
	0x03D0FCE4 CBZ X20, 0x3D0FDA4
	0x03D0FCE8 ADRP X23, 0x40E000
	0x03D0FCEC LDR X23, [X23 + 0x698]
	0x03D0FCF0 ADRP X24, 0x454000
	0x03D0FCF4 MOV X0, X20
	0x03D0FCF8 MOV X1, X21
	0x03D0FCFC LDR X3, [X23]
	0x03D0FD00 LDR X24, [X24 + 0xB68]
	0x03D0FD04 MOV W2, W31
	0x03D0FD08 BL 0x21A18B4
	0x03D0FD0C LDR X0, [X22]
	0x03D0FD10 LDR X20, [X19 + 0x28]
	0x03D0FD14 BL 0x1C16F10
	0x03D0FD18 LDR X2, [X24]
	0x03D0FD1C MOV X1, X19
	0x03D0FD20 MOV X3, X31
	0x03D0FD24 MOV X21, X0
	0x03D0FD28 BL 0x2D0E824
	0x03D0FD2C CBZ X20, 0x3D0FDA4
	0x03D0FD30 LDR X3, [X23]
	0x03D0FD34 ADRP X22, 0x40E000
	0x03D0FD38 ADRP X23, 0x454000
	0x03D0FD3C LDR X22, [X22 + 0xDB0]
	0x03D0FD40 LDR X23, [X23 + 0xB70]
	0x03D0FD44 MOV X0, X20
	0x03D0FD48 MOV X1, X21
	0x03D0FD4C MOV W2, W31
	0x03D0FD50 BL 0x21A18B4
	0x03D0FD54 LDR X0, [X22]
	0x03D0FD58 LDR X20, [X19 + 0x28]
	0x03D0FD5C BL 0x1C16F10
	0x03D0FD60 LDR X2, [X23]
	0x03D0FD64 MOV X1, X19
	0x03D0FD68 MOV X3, X31
	0x03D0FD6C MOV X21, X0
	0x03D0FD70 BL 0x2D0E824
	0x03D0FD74 CBZ X20, 0x3D0FDA4
	0x03D0FD78 ADRP X8, 0x40E000
	0x03D0FD7C LDR X8, [X8 + 0xDC0]
	0x03D0FD80 MOV X0, X20
	0x03D0FD84 MOV X1, X21
	0x03D0FD88 LDP X20, X19, [X31 + 0x30]
	0x03D0FD8C LDR X3, [X8]
	0x03D0FD90 LDP X22, X21, [X31 + 0x20]
	0x03D0FD94 LDP X24, X23, [X31 + 0x10]
	0x03D0FD98 MOV W2, W31
	0x03D0FD9C LDR X30, [X31], #0x40
	0x03D0FDA0 B 0x21A18B4
	0x03D0FDA4 BL 0x1C16F20
	0x03D0FDA8 STP X30, X21, [X31 - 0x20]!
	0x03D0FDAC STP X20, X19, [X31 + 0x10]
	0x03D0FDB0 MOV X19, X0
	0x03D0FDB4 LDR X0, [X0 + 0x18]
	0x03D0FDB8 CBZ X0, 0x3D0FE34
	0x03D0FDBC MOV W20, W1
	0x03D0FDC0 MOV X1, X31
	0x03D0FDC4 BL 0x3DF6948
	0x03D0FDC8 LDR X21, [X19 + 0x38]
	0x03D0FDCC CBZ X21, 0x3D0FE24
	0x03D0FDD0 MOV X0, X21
	0x03D0FDD4 MOV X1, X31
	0x03D0FDD8 BL 0x3DEEF88
	0x03D0FDDC EOR W1, W0, 0x1
	0x03D0FDE0 MOV X0, X21
	0x03D0FDE4 MOV X2, X31
	0x03D0FDE8 BL 0x3DEEF90
	0x03D0FDEC TBZ X20, 0x0, 0x3D0FE24
	0x03D0FDF0 LDR X0, [X19 + 0x38]
	0x03D0FDF4 CBZ X0, 0x3D0FE34
	0x03D0FDF8 LDR X8, [X0]
	0x03D0FDFC LDR X9, [X8 + 0x238]
	0x03D0FE00 LDR X1, [X8 + 0x240]
	0x03D0FE04 BLR X9
	0x03D0FE08 TBZ X0, 0x0, 0x3D0FE24
	0x03D0FE0C LDR X0, [X19 + 0x38]
	0x03D0FE10 CBZ X0, 0x3D0FE34
	0x03D0FE14 LDR X8, [X0]
	0x03D0FE18 LDR X9, [X8 + 0x248]
	0x03D0FE1C LDR X1, [X8 + 0x250]
	0x03D0FE20 BLR X9
	0x03D0FE24 STR X31, [X19 + 0x38]
	0x03D0FE28 LDP X20, X19, [X31 + 0x10]
	0x03D0FE2C LDP X30, X21, [X31], #0x20
	0x03D0FE30 RET
	0x03D0FE34 BL 0x1C16F20
	0x03D0FE38 STP X30, X19, [X31 - 0x10]!
	0x03D0FE3C MOV X19, X2
	0x03D0FE40 BL 0x3D0FE74
	0x03D0FE44 TBZ X0, 0x0, 0x3D0FE68
	0x03D0FE48 CBZ X19, 0x3D0FE70
	0x03D0FE4C MOV X0, X19
	0x03D0FE50 MOV X1, X31
	0x03D0FE54 BL 0x3D9D950
	0x03D0FE58 MOV X0, X19
	0x03D0FE5C MOV X1, X31
	0x03D0FE60 LDP X30, X19, [X31], #0x10
	0x03D0FE64 B 0x3D9D960
	0x03D0FE68 LDP X30, X19, [X31], #0x10
	0x03D0FE6C RET
	0x03D0FE70 BL 0x1C16F20
	0x03D0FE74 SUB X31, X31, 0x40
	0x03D0FE78 STR X30, [X31 + 0x10]
	0x03D0FE7C STP X22, X21, [X31 + 0x20]
	0x03D0FE80 STP X20, X19, [X31 + 0x30]
	0x03D0FE84 ADRP X20, 0x6D8000
	0x03D0FE88 LDRB W8, [X20 + 0x8B2]
	0x03D0FE8C MOV W22, W1
	0x03D0FE90 MOV X19, X0
	0x03D0FE94 TBNZ X8, 0x0, 0x3D0FEB8
	0x03D0FE98 ADRP X0, 0x454000
	0x03D0FE9C LDR X0, [X0 + 0xB98]
	0x03D0FEA0 BL 0x1C16CF4
	0x03D0FEA4 ADRP X0, 0x454000
	0x03D0FEA8 LDR X0, [X0 + 0xBA0]
	0x03D0FEAC BL 0x1C16CF4
	0x03D0FEB0 MOVZ W8, 0x1
	0x03D0FEB4 STRB W8, [X20 + 0x8B2]
	0x03D0FEB8 MOV X0, X19
	0x03D0FEBC STP X19, X31, [X31]
	0x03D0FEC0 BL 0x3D10008
	0x03D0FEC4 SUB W8, W22, 0x2
	0x03D0FEC8 MOV W20, W31
	0x03D0FECC CMP W8, 0x9
	0x03D0FED0 STR W0, [X31 + 0x8]
	0x03D0FED4 B.HI 0x3D0FFEC
	0x03D0FED8 ADRP X9, 0xFFFFFFFFFCE88000
	0x03D0FEDC ADD X9, X9, 0xF84
	0x03D0FEE0 ADR X10, 0x14
	0x03D0FEE4 LDRB W11, [X9, X8, LSL]
	0x03D0FEE8 ADD X10, X10, X11, 0x2, LSL
	0x03D0FEEC MOV W21, W0
	0x03D0FEF0 BR X10
	0x03D0FEF4 ADD X2, X31, 0x0
	0x03D0FEF8 MOV X0, X19
	0x03D0FEFC MOV W1, W31
	0x03D0FF00 B 0x3D0FFC4
	0x03D0FF04 LDR X8, [X19 + 0x10]
	0x03D0FF08 CBZ X8, 0x3D10004
	0x03D0FF0C LDR W8, [X8 + 0x18]
	0x03D0FF10 SUB W1, W8, 0x1
	0x03D0FF14 B 0x3D0FFDC
	0x03D0FF18 LDR X0, [X19 + 0x10]
	0x03D0FF1C CBZ X0, 0x3D10004
	0x03D0FF20 ADRP X8, 0x454000
	0x03D0FF24 LDR X8, [X8 + 0xBA0]
	0x03D0FF28 MOV W1, W21
	0x03D0FF2C LDR X2, [X8]
	0x03D0FF30 BL 0x301BCCC
	0x03D0FF34 TBNZ X21, 0x1F, 0x3D0FF98
	0x03D0FF38 MOV X20, X0
	0x03D0FF3C CBZ X0, 0x3D10004
	0x03D0FF40 LDR X8, [X20 + 0x18]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x6D9000
	011 Move X23, 0x454000
	012 Move W8, [X20+2217]
	013 Move X23, [X23+3208]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {66}
	019 Move X0, 0x455000
	020 Move X0, [X0+136]
	021 Call 0x1C17CF4
	022 Move X0, 0x454000
	023 Move X0, [X0+3200]
	024 Call 0x1C17CF4
	025 Move X0, 0x40F000
	026 Move X0, [X0+3424]
	027 Call 0x1C17CF4
	028 Move X0, 0x454000
	029 Move X0, [X0+3232]
	030 Call 0x1C17CF4
	031 Move X0, 0x40F000
	032 Move X0, [X0+3440]
	033 Call 0x1C17CF4
	034 Move X0, 0x455000
	035 Move X0, [X0+2808]
	036 Call 0x1C17CF4
	037 Move X0, 0x455000
	038 Move X0, [X0+2816]
	039 Call 0x1C17CF4
	040 Move X0, 0x455000
	041 Move X0, [X0+2824]
	042 Call 0x1C17CF4
	043 Move X0, 0x454000
	044 Move X0, [X0+3208]
	045 Call 0x1C17CF4
	046 Move X0, 0x454000
	047 Move X0, [X0+3256]
	048 Call 0x1C17CF4
	049 Move X0, 0x455000
	050 Move X0, [X0+192]
	051 Call 0x1C17CF4
	052 Move X0, 0x454000
	053 Move X0, [X0+2944]
	054 Call 0x1C17CF4
	055 Move X0, 0x40E000
	056 Move X0, [X0+2096]
	057 Call 0x1C17CF4
	058 Move X0, 0x40D000
	059 Move X0, [X0+2200]
	060 Call 0x1C17CF4
	061 Move X0, 0x455000
	062 Move X0, [X0+2832]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X20+2217], W8
	066 Move X22, 0x454000
	067 Move X21, 0x40D000
	068 Move X22, [X22+2944]
	069 Move X21, [X21+2200]
	070 Move X0, X19
	071 Move X1, X31
	072 Move [X31+8], X31
	073 Call BindableElement..ctor, X0
	074 Move X0, [X23]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X23]
	080 Move X8, [X0+184]
	081 Move X0, X19
	082 Move X2, X31
	083 Move X1, [X8]
	084 Call VisualElement.AddToClassList, X0, X1
	085 Move X0, [X22]
	086 Call 0x1C17F10
	087 Move X1, X31
	088 Move X20, X0
	089 Call Toggle..ctor, X0
	090 Move [X19+984], X20
	091 Move X0, [X21]
	092 Call 0x1C17F10
	093 Move X1, X31
	094 Move X20, X0
	095 Call VisualElement..ctor, X0
	096 Compare X20, 0
	097 JumpIfEqual {255}
	098 Move X8, 0x455000
	099 Move X8, [X8+2832]
	100 Move X21, 0x454000
	101 Move X24, 0x455000
	102 Move X25, 0x454000
	103 Move X1, [X8]
	104 Move X21, [X21+3232]
	105 Move X24, [X24+2824]
	106 Move X25, [X25+3256]
	107 Move X0, X20
	108 Move X2, X31
	109 Call VisualElement.set_name, X0, X1
	110 Move [X19+992], X20
	111 Move X0, [X21]
	112 Move X20, [X19+984]
	113 Call 0x1C17F10
	114 Move X2, [X24]
	115 Move X1, X19
	116 Move X3, X31
	117 Move X21, X0
	118 Call 0x2D0F824, X0, X1, X2
	119 Move X2, [X25]
	120 Move X0, X20
	121 Move X1, X21
	122 Call 0x21F0110, X0, X1
	123 Move X0, [X19+984]
	124 Compare X0, 0
	125 JumpIfEqual {255}
	126 Move X8, [X23]
	127 Move X2, X31
	128 Move X8, [X8+184]
	129 Move X1, [X8+8]
	130 Call VisualElement.AddToClassList, X0, X1
	131 Move X0, [X19+984]
	132 Compare X0, 0
	133 JumpIfEqual {255}
	134 Move X20, 0x454000
	135 Move X20, [X20+3200]
	136 Move X1, [X20]
	137 Call 0x2773DDC, X0
	138 Compare X0, 0
	139 JumpIfEqual {255}
	140 Move X8, [X23]
	141 Move X2, X31
	142 Move X8, [X8+184]
	143 Move X1, [X8+24]
	144 Call VisualElement.AddToClassList, X0, X1
	145 Move X0, [X19+984]
	146 Compare X0, 0
	147 JumpIfEqual {255}
	148 Move X1, [X20]
	149 Move X21, 0x40E000
	150 Move X21, [X21+2096]
	151 Call 0x2773DDC, X0
	152 Move X8, [X22]
	153 Move X20, X0
	154 Move W9, [X8+224]
	155 Compare W9, 0
	156 JumpIfNotEqual {160}
	157 Move X0, X8
	158 Call 0x1C17DFC
	159 Move X8, [X22]
	160 Move X0, [X21]
	161 Move X8, [X8+184]
	162 Move W9, [X0+224]
	163 Move X21, [X8+32]
	164 Compare W9, 0
	165 JumpIfNotEqual {167}
	166 Call 0x1C17DFC
	167 Move X0, X20
	168 Move X1, X31
	169 Move X2, X21
	170 Move X3, X31
	171 Call UQueryExtensions.Q, X0, X1, X2
	172 Compare X0, 0
	173 JumpIfEqual {255}
	174 Move X8, [X23]
	175 Move X21, 0x455000
	176 Move X22, 0x455000
	177 Move X24, 0x455000
	178 Move X8, [X8+184]
	179 Move X2, X31
	180 Move X1, [X8+32]
	181 Move X21, [X21+136]
	182 Move X22, [X22+2808]
	183 Move X24, [X24+192]
	184 Call VisualElement.AddToClassList, X0, X1
	185 Move X0, [X21]
	186 Move X20, [X19+984]
	187 Call 0x1C17F10
	188 Move X2, [X22]
	189 Move X1, X19
	190 Move X3, X31
	191 Move X21, X0
	192 Call Action`2<Int32Enum, Object>..ctor, X0, X1, X2
	193 Move X0, [X24]
	194 Call 0x1C17F10
	195 Move X1, X21
	196 Move X2, X31
	197 Move X22, X0
	198 Call KeyboardNavigationManipulator..ctor, X0, X1
	199 Move X0, X20
	200 Move X1, X22
	201 Move X2, X31
	202 Move [X19+1008], X22
	203 Call VisualElementExtensions.AddManipulator, X0, X1
	204 Move X8, [X19+888]
	205 Add X0, X31, 8
	206 Move X2, X31
	207 Move [X31+8], X8
	208 Move X1, [X19+984]
	209 Call Hierarchy.Add, X0, X1
	210 Move X0, [X19+992]
	211 Compare X0, 0
	212 JumpIfEqual {255}
	213 Move X8, [X23]
	214 Move X20, 0x40F000
	215 Move X21, 0x455000
	216 Move X22, 0x40F000
	217 Move X8, [X8+184]
	218 Move X2, X31
	219 Move X1, [X8+16]
	220 Move X20, [X20+3440]
	221 Move X21, [X21+2816]
	222 Move X22, [X22+3424]
	223 Call VisualElement.AddToClassList, X0, X1
	224 Move X8, [X19+888]
	225 Add X0, X31, 8
	226 Move X2, X31
	227 Move [X31+8], X8
	228 Move X1, [X19+992]
	229 Call Hierarchy.Add, X0, X1
	230 Move X0, [X20]
	231 Call 0x1C17F10
	232 Move X2, [X21]
	233 Move X1, X19
	234 Move X3, X31
	235 Move X20, X0
	236 Call 0x2D0F824, X0, X1, X2
	237 Move X3, [X22]
	238 Move X0, X19
	239 Move X1, X20
	240 Move W2, W31
	241 Call 0x21A2534, X0, X1, X2
	242 Move W1, 1
	243 Move X0, X19
	244 Call Foldout.SetValueWithoutNotify, X0, X1
	245 Move X20, [X31+64]
	246 Move X19, [X31+72]
	247 Move X22, [X31+48]
	248 Move X21, [X31+56]
	249 Move X24, [X31+32]
	250 Move X23, [X31+40]
	251 Move X30, [X31+16]
	252 Move X25, [X31+24]
	253 Add X31, X31, 80
	254 Return 
	255 Call 0x1C17F20

Method: System.Void OnAttachToPanel(UnityEngine.UIElements.AttachToPanelEvent evt)

Disassembly:
	0x03D0FF44 CBZ X8, 0x3D10004
	0x03D0FF48 LDRB W8, [X8 + 0x32C]
	0x03D0FF4C CBZ W8, 0x3D0FF98
	0x03D0FF50 LDR X8, [X20 + 0x20]
	0x03D0FF54 CBZ X8, 0x3D0FF68
	0x03D0FF58 LDR X9, [X8 + 0x18]
	0x03D0FF5C LDR X0, [X8 + 0x40]
	0x03D0FF60 LDR X1, [X8 + 0x28]
	0x03D0FF64 BLR X9
	0x03D0FF68 LDR X21, [X20 + 0x28]
	0x03D0FF6C CBZ X21, 0x3D0FF98
	0x03D0FF70 LDR X0, [X20 + 0x18]
	0x03D0FF74 CBZ X0, 0x3D10004
	0x03D0FF78 MOV X1, X31
	0x03D0FF7C BL 0x3DEBA30
	0x03D0FF80 LDR X8, [X21 + 0x40]
	0x03D0FF84 LDR X9, [X21 + 0x18]
	0x03D0FF88 LDR X2, [X21 + 0x28]
	0x03D0FF8C MOV X1, X0
	0x03D0FF90 MOV X0, X8
	0x03D0FF94 BLR X9
	0x03D0FF98 MOVZ W1, 0x1
	0x03D0FF9C MOV X0, X19
	0x03D0FFA0 MOVZ W20, 0x1
	0x03D0FFA4 BL 0x3D0FDA8
	0x03D0FFA8 B 0x3D0FFEC
	0x03D0FFAC TBNZ X21, 0x1F, 0x3D0FFCC
	0x03D0FFB0 CBNZ X19, 0x3D0FFD8
	0x03D0FFB4 B 0x3D10004
	0x03D0FFB8 ADD W1, W21, 0x1
	0x03D0FFBC ADD X2, X31, 0x0
	0x03D0FFC0 MOV X0, X19
	0x03D0FFC4 BL 0x3D10150
	0x03D0FFC8 B 0x3D0FFE8
	0x03D0FFCC LDR X8, [X19 + 0x10]
	0x03D0FFD0 CBZ X8, 0x3D10004
	0x03D0FFD4 LDR W21, [X8 + 0x18]
	0x03D0FFD8 SUB W1, W21, 0x1
	0x03D0FFDC ADD X2, X31, 0x0
	0x03D0FFE0 MOV X0, X19
	0x03D0FFE4 BL 0x3D100A8
	0x03D0FFE8 MOVZ W20, 0x1
	0x03D0FFEC MOV W0, W20
	0x03D0FFF0 LDP X20, X19, [X31 + 0x30]
	0x03D0FFF4 LDP X22, X21, [X31 + 0x20]
	0x03D0FFF8 LDR X30, [X31 + 0x10]
	0x03D0FFFC ADD X31, X31, 0x40
	0x03D10000 RET
	0x03D10004 BL 0x1C16F20
	0x03D10008 STP X30, X21, [X31 - 0x20]!
	0x03D1000C STP X20, X19, [X31 + 0x10]
	0x03D10010 ADRP X20, 0x6D7000
	0x03D10014 LDRB W8, [X20 + 0x8B9]
	0x03D10018 MOV X19, X0
	0x03D1001C TBNZ X8, 0x0, 0x3D10040
	0x03D10020 ADRP X0, 0x453000
	0x03D10024 LDR X0, [X0 + 0xB98]
	0x03D10028 BL 0x1C16CF4
	0x03D1002C ADRP X0, 0x453000
	0x03D10030 LDR X0, [X0 + 0xBA0]
	0x03D10034 BL 0x1C16CF4
	0x03D10038 MOVZ W8, 0x1
	0x03D1003C STRB W8, [X20 + 0x8B9]
	0x03D10040 LDR X0, [X19 + 0x10]
	0x03D10044 CBZ X0, 0x3D10090
	0x03D10048 ADRP X21, 0x453000
	0x03D1004C LDR X21, [X21 + 0xBA0]
	0x03D10050 MOV W20, W31
	0x03D10054 LDR W8, [X0 + 0x18]
	0x03D10058 CMP W20, W8
	0x03D1005C B.GE 0x3D10094
	0x03D10060 LDR X2, [X21]
	0x03D10064 MOV W1, W20
	0x03D10068 BL 0x301BCCC
	0x03D1006C CBZ X0, 0x3D10090
	0x03D10070 LDR X0, [X0 + 0x18]
	0x03D10074 CBZ X0, 0x3D10090
	0x03D10078 MOV X1, X31
	0x03D1007C BL 0x3DEEF88
	0x03D10080 TBNZ X0, 0x1, 0x3D10098
	0x03D10084 LDR X0, [X19 + 0x10]
	0x03D10088 ADD W20, W20, 0x1
	0x03D1008C CBNZ X0, 0x3D10054
	0x03D10090 BL 0x1C16F20
	0x03D10094 MOVN W20, 0x0
	0x03D10098 MOV W0, W20
	0x03D1009C LDP X20, X19, [X31 + 0x10]
	0x03D100A0 LDP X30, X21, [X31], #0x20
	0x03D100A4 RET
	0x03D100A8 STR X30, [X31 - 0x30]!
	0x03D100AC STP X22, X21, [X31 + 0x10]
	0x03D100B0 STP X20, X19, [X31 + 0x20]
	0x03D100B4 ADRP X22, 0x6D7000
	0x03D100B8 LDRB W8, [X22 + 0x8C0]
	0x03D100BC MOV X20, X2
	0x03D100C0 MOV W19, W1
	0x03D100C4 MOV X21, X0
	0x03D100C8 TBNZ X8, 0x0, 0x3D100E0
	0x03D100CC ADRP X0, 0x453000
	0x03D100D0 LDR X0, [X0 + 0xBA0]
	0x03D100D4 BL 0x1C16CF4
	0x03D100D8 MOVZ W8, 0x1
	0x03D100DC STRB W8, [X22 + 0x8C0]
	0x03D100E0 TBNZ X19, 0x1F, 0x3D10120
	0x03D100E4 ADRP X22, 0x453000
	0x03D100E8 LDR X22, [X22 + 0xBA0]
	0x03D100EC LDR X0, [X21 + 0x10]
	0x03D100F0 CBZ X0, 0x3D1014C
	0x03D100F4 LDR X2, [X22]
	0x03D100F8 MOV W1, W19
	0x03D100FC BL 0x301BCCC
	0x03D10100 CBZ X0, 0x3D1014C
	0x03D10104 LDR X8, [X0 + 0x18]
	0x03D10108 CBZ X8, 0x3D1014C
	0x03D1010C LDRB W8, [X8 + 0x32C]
	0x03D10110 CBNZ W8, 0x3D10130
	0x03D10114 CMP W19, 0x0
	0x03D10118 SUB W19, W19, 0x1
	0x03D1011C B.GT 0x3D100EC
	0x03D10120 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x6D9000
	011 Move W8, [X20+2218]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x454000
	018 Move X0, [X0+3208]
	019 Call 0x1C17CF4
	020 Move X0, 0x455000
	021 Move X0, [X0+2840]
	022 Call 0x1C17CF4
	023 Move X0, 0x455000
	024 Move X0, [X0+2848]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2218], W8
	028 Move X23, 0x454000
	029 Move X22, 0x455000
	030 Move X21, 0x455000
	031 Move X23, [X23+3208]
	032 Move X22, [X22+2848]
	033 Move X21, [X21+2840]
	034 Move W24, W31
	035 Move [X31+12], W31
	036 Move X0, [X23]
	037 Move [X31+8], W24
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfEqual {45}
	041 Move X8, [X0+184]
	042 Move W9, [X8+64]
	043 Move X20, [X8+56]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Call 0x1C17DFC
	046 Move X0, [X23]
	047 Move X8, [X0+184]
	048 Move W9, [X0+224]
	049 Move W25, [X8+64]
	050 Compare W9, 0
	051 JumpIfNotEqual {55}
	052 Call 0x1C17DFC
	053 Move X8, [X23]
	054 Move X8, [X8+184]
	055 Move X20, [X8+56]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add X0, X31, 8
	058 Move X1, X31
	059 Call Int32.ToString, X0
	060 Move X1, X0
	061 Move X0, X20
	062 Move X2, X31
	063 Call String.Concat, X0, X1
	064 Move X1, X0
	065 Move X0, X19
	066 Move X2, X31
	067 Call VisualElement.RemoveFromClassList, X0, X1
	068 Move W8, [X31+8]
	069 Add W24, W8, 1
	070 Move X1, [X22]
	071 Move X0, X20
	072 Move X2, X31
	073 Call String.Concat, X0, X1
	074 Move X1, X0
	075 Move X0, X19
	076 Move X2, X31
	077 Call VisualElement.RemoveFromClassList, X0, X1
	078 Move X8, [X23]
	079 Move X0, [X21]
	080 Move X20, [X19+984]
	081 Move X8, [X8+184]
	082 Move W9, [X0+224]
	083 Move X21, [X8+48]
	084 Compare W9, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X20
	088 Move X1, X21
	089 Move X2, X31
	090 Call VisualElementUtils.AssignInspectorStyleIfNecessary, X0, X1
	091 Move X0, X19
	092 Move X1, X31
	093 Call VisualElementUtils.GetFoldoutDepth, X0
	094 Move X8, [X23]
	095 Move [X31+12], W0
	096 Move W21, W0
	097 Move X9, [X8+184]
	098 Move W10, [X8+224]
	099 Move W24, [X9+64]
	100 Compare W10, 0
	101 JumpIfNotEqual {106}
	102 Move X0, X8
	103 Call 0x1C17DFC
	104 Move X8, [X23]
	105 Move X9, [X8+184]
	106 Move X20, [X9+56]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X1, [X22]
	109 Add X0, X31, 12
	110 Move X1, X31
	111 Call Int32.ToString, X0
	112 Move X1, X0
	113 Move X0, X20
	114 Move X2, X31
	115 Call String.Concat, X0, X1
	116 Move X1, X0
	117 Move X0, X19
	118 Move X2, X31
	119 Call VisualElement.AddToClassList, X0, X1
	120 Move X20, [X31+64]
	121 Move X19, [X31+72]
	122 Move X22, [X31+48]
	123 Move X21, [X31+56]
	124 Move X24, [X31+32]
	125 Move X23, [X31+40]
	126 Move X30, [X31+16]
	127 Move X25, [X31+24]
	128 Add X31, X31, 80
	129 Return 

Method: System.Void .cctor()

Disassembly:
	0x03D10124 LDP X22, X21, [X31 + 0x10]
	0x03D10128 LDR X30, [X31], #0x30
	0x03D1012C RET
	0x03D10130 LDR W2, [X20 + 0x8]
	0x03D10134 MOV X0, X21
	0x03D10138 MOV W1, W19
	0x03D1013C LDP X20, X19, [X31 + 0x20]
	0x03D10140 LDP X22, X21, [X31 + 0x10]
	0x03D10144 LDR X30, [X31], #0x30
	0x03D10148 B 0x3D10838
	0x03D1014C BL 0x1C16F20
	0x03D10150 STR X30, [X31 - 0x30]!
	0x03D10154 STP X22, X21, [X31 + 0x10]
	0x03D10158 STP X20, X19, [X31 + 0x20]
	0x03D1015C ADRP X22, 0x6D7000
	0x03D10160 LDRB W8, [X22 + 0x8BF]
	0x03D10164 MOV X20, X2
	0x03D10168 MOV W19, W1
	0x03D1016C MOV X21, X0
	0x03D10170 TBNZ X8, 0x0, 0x3D10194
	0x03D10174 ADRP X0, 0x453000
	0x03D10178 LDR X0, [X0 + 0xB98]
	0x03D1017C BL 0x1C16CF4
	0x03D10180 ADRP X0, 0x453000
	0x03D10184 LDR X0, [X0 + 0xBA0]
	0x03D10188 BL 0x1C16CF4
	0x03D1018C MOVZ W8, 0x1
	0x03D10190 STRB W8, [X22 + 0x8BF]
	0x03D10194 LDR X0, [X21 + 0x10]
	0x03D10198 CBZ X0, 0x3D101DC
	0x03D1019C ADRP X22, 0x453000
	0x03D101A0 LDR X22, [X22 + 0xBA0]
	0x03D101A4 LDR W8, [X0 + 0x18]
	0x03D101A8 CMP W19, W8
	0x03D101AC B.GE 0x3D101E0
	0x03D101B0 LDR X2, [X22]
	0x03D101B4 MOV W1, W19
	0x03D101B8 BL 0x301BCCC
	0x03D101BC CBZ X0, 0x3D101DC
	0x03D101C0 LDR X8, [X0 + 0x18]
	0x03D101C4 CBZ X8, 0x3D101DC
	0x03D101C8 LDRB W8, [X8 + 0x32C]
	0x03D101CC CBNZ W8, 0x3D101F0
	0x03D101D0 LDR X0, [X21 + 0x10]
	0x03D101D4 ADD W19, W19, 0x1
	0x03D101D8 CBNZ X0, 0x3D101A4
	0x03D101DC BL 0x1C16F20
	0x03D101E0 LDP X20, X19, [X31 + 0x20]
	0x03D101E4 LDP X22, X21, [X31 + 0x10]
	0x03D101E8 LDR X30, [X31], #0x30
	0x03D101EC RET
	0x03D101F0 LDR W2, [X20 + 0x8]
	0x03D101F4 MOV X0, X21
	0x03D101F8 MOV W1, W19
	0x03D101FC LDP X20, X19, [X31 + 0x20]
	0x03D10200 LDP X22, X21, [X31 + 0x10]
	0x03D10204 LDR X30, [X31], #0x30
	0x03D10208 B 0x3D10838
	0x03D1020C STR X30, [X31 - 0x30]!
	0x03D10210 STP X22, X21, [X31 + 0x10]
	0x03D10214 STP X20, X19, [X31 + 0x20]
	0x03D10218 ADRP X21, 0x6D7000
	0x03D1021C LDRB W8, [X21 + 0x8B3]
	0x03D10220 MOV X19, X1
	0x03D10224 MOV X20, X0
	0x03D10228 TBNZ X8, 0x0, 0x3D10264
	0x03D1022C ADRP X0, 0x40E000
	0x03D10230 LDR X0, [X0 + 0xCF8]
	0x03D10234 BL 0x1C16CF4
	0x03D10238 ADRP X0, 0x453000
	0x03D1023C LDR X0, [X0 + 0xBA8]
	0x03D10240 BL 0x1C16CF4
	0x03D10244 ADRP X0, 0x40C000
	0x03D10248 LDR X0, [X0 + 0xE50]
	0x03D1024C BL 0x1C16CF4
	0x03D10250 ADRP X0, 0x40B000
	0x03D10254 LDR X0, [X0 + 0x898]
	0x03D10258 BL 0x1C16CF4
	0x03D1025C MOVZ W8, 0x1
	0x03D10260 STRB W8, [X21 + 0x8B3]
	0x03D10264 CBZ X19, 0x3D10334
	0x03D10268 LDR X0, [X20 + 0x28]
	0x03D1026C LDP S0, S1, [X19 + 0xB4]
	0x03D10270 ADRP X21, 0x40C000
	0x03D10274 LDR X21, [X21 + 0xE50]
	0x03D10278 MOV X1, X31
	0x03D1027C BL 0x3D16BD4
	0x03D10280 MOV X0, X19
	0x03D10284 MOV X1, X31
	0x03D10288 STP S0, S1, [X20 + 0x5C]
	0x03D1028C BL 0x3D9C848
	0x03D10290 CBZ X0, 0x3D102B4
	0x03D10294 ADRP X8, 0x40B000
	0x03D10298 LDR X8, [X8 + 0x898]
	0x03D1029C LDR X9, [X0]
	0x03D102A0 LDR X8, [X8]
	0x03D102A4 LDRB W11, [X9 + 0x130]
	0x03D102A8 LDRB W10, [X8 + 0x130]
	0x03D102AC CMP W11, W10
	0x03D102B0 B.CS 0x3D102BC
	0x03D102B4 MOV X1, X31
	0x03D102B8 B 0x3D102D0
	0x03D102BC LDR X9, [X9 + 0xC8]
	0x03D102C0 ADD X9, X9, X10, 0x3, LSL
	0x03D102C4 LDUR X9, [X9 - 0x8]
	0x03D102C8 CMP X9, X8
	0x03D102CC CSEL X1, X0, X31, EQ
	0x03D102D0 MOV X0, X20
	0x03D102D4 BL 0x3D10338
	0x03D102D8 LDR X0, [X21]
	0x03D102DC LDR W22, [X19 + 0x9C]
	0x03D102E0 LDR W8, [X0 + 0xE0]
	0x03D102E4 CBNZ W8, 0x3D102F0
	0x03D102E8 BL 0x1C16DFC
	0x03D102EC LDR X0, [X21]
	0x03D102F0 LDR X8, [X0 + 0xB8]
	0x03D102F4 LDR W8, [X8 + 0x8]
	0x03D102F8 CMP W22, W8
	0x03D102FC B.EQ 0x3D1031C
	0x03D10300 LDR X0, [X20 + 0x18]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x6D8000
	013 Move X27, 0x454000
	014 Move X19, 0x453000
	015 Move X26, 0x454000
	016 Move X25, 0x454000
	017 Move X24, 0x40D000
	018 Move X23, 0x454000
	019 Move X22, 0x40F000
	020 Move X21, 0x454000
	021 Move X20, 0x454000
	022 Move X27, [X27+2856]
	023 Move X19, [X19+3208]
	024 Move X26, [X26+2864]
	025 Move X25, [X25+2872]
	026 Move W8, [X28+2219]
	027 Move X24, [X24+3776]
	028 Move X23, [X23+2880]
	029 Move X22, [X22+216]
	030 Move X21, [X21+2888]
	031 Move X20, [X20+2896]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {65}
	036 Move X0, 0x453000
	037 Move X0, [X0+3208]
	038 Call 0x1C17CF4
	039 Move X0, 0x454000
	040 Move X0, [X0+2896]
	041 Call 0x1C17CF4
	042 Move X0, 0x454000
	043 Move X0, [X0+2880]
	044 Call 0x1C17CF4
	045 Move X0, 0x40F000
	046 Move X0, [X0+216]
	047 Call 0x1C17CF4
	048 Move X0, 0x454000
	049 Move X0, [X0+2872]
	050 Call 0x1C17CF4
	051 Move X0, 0x454000
	052 Move X0, [X0+2864]
	053 Call 0x1C17CF4
	054 Move X0, 0x454000
	055 Move X0, [X0+2888]
	056 Call 0x1C17CF4
	057 Move X0, 0x454000
	058 Move X0, [X0+2856]
	059 Call 0x1C17CF4
	060 Move X0, 0x40D000
	061 Move X0, [X0+3776]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X28+2219], W8
	065 Move X8, [X19]
	066 Move X9, [X27]
	067 Move X2, X31
	068 Move X8, [X8+184]
	069 Move [X8], X9
	070 Move X8, [X19]
	071 Move X1, [X26]
	072 Move X8, [X8+184]
	073 Move X0, [X8]
	074 Call String.Concat, X0, X1
	075 Move X8, [X19]
	076 Move X2, X31
	077 Move X8, [X8+184]
	078 Move [X8+8], X0
	079 Move X0, [X8]
	080 Move X1, [X25]
	081 Call String.Concat, X0, X1
	082 Move X8, [X19]
	083 Move X2, X31
	084 Move X8, [X8+184]
	085 Move [X8+16], X0
	086 Move X0, [X8]
	087 Move X1, [X24]
	088 Call String.Concat, X0, X1
	089 Move X8, [X19]
	090 Move X2, X31
	091 Move X8, [X8+184]
	092 Move [X8+24], X0
	093 Move X0, [X8]
	094 Move X1, [X23]
	095 Call String.Concat, X0, X1
	096 Move X8, [X19]
	097 Move X2, X31
	098 Move X8, [X8+184]
	099 Move [X8+32], X0
	100 Move X0, [X8]
	101 Move X1, [X22]
	102 Call String.Concat, X0, X1
	103 Move X8, [X19]
	104 Move X2, X31
	105 Move X8, [X8+184]
	106 Move [X8+40], X0
	107 Move X0, [X8+8]
	108 Move X1, [X21]
	109 Call String.Concat, X0, X1
	110 Move X8, [X19]
	111 Move X2, X31
	112 Move X8, [X8+184]
	113 Move [X8+48], X0
	114 Move X0, [X8]
	115 Move X1, [X20]
	116 Call String.Concat, X0, X1
	117 Move X8, [X19]
	118 Move X20, [X31+80]
	119 Move X19, [X31+88]
	120 Move X22, [X31+64]
	121 Move X21, [X31+72]
	122 Move X24, [X31+48]
	123 Move X23, [X31+56]
	124 Move X8, [X8+184]
	125 Move X26, [X31+32]
	126 Move X25, [X31+40]
	127 Move X28, [X31+16]
	128 Move X27, [X31+24]
	129 Move W9, 4
	130 Move [X8+56], X0
	131 Move [X8+64], W9
	132 Move X30, [X31+96]
	133 Return 

Method: System.Void <.ctor>b__29_0(UnityEngine.UIElements.ChangeEvent`1<System.Boolean> evt)

Disassembly:
	0x03D10304 CBZ X0, 0x3D10334
	0x03D10308 MOV X1, X31
	0x03D1030C BL 0x3DEC0CC
	0x03D10310 LDR W1, [X19 + 0x9C]
	0x03D10314 MOV X2, X31
	0x03D10318 BL 0x3DBF888
	0x03D1031C MOV X0, X19
	0x03D10320 LDP X20, X19, [X31 + 0x20]
	0x03D10324 LDP X22, X21, [X31 + 0x10]
	0x03D10328 MOV X1, X31
	0x03D1032C LDR X30, [X31], #0x30
	0x03D10330 B 0x3D9D950
	0x03D10334 BL 0x1C16F20
	0x03D10338 STP X30, X21, [X31 - 0x20]!
	0x03D1033C STP X20, X19, [X31 + 0x10]
	0x03D10340 ADRP X21, 0x6D7000
	0x03D10344 LDRB W8, [X21 + 0x8B7]
	0x03D10348 MOV X19, X1
	0x03D1034C MOV X20, X0
	0x03D10350 TBNZ X8, 0x0, 0x3D10368

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+984]
	006 Compare X0, 0
	007 JumpIfEqual {25}
	008 Move X8, [X0]
	009 Move X19, X1
	010 Move X9, [X8+2024]
	011 Move X1, [X8+2032]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 And W1, W0, 1
	014 Move X0, X20
	015 Call Foldout.set_value, X0, X1
	016 Compare X19, 0
	017 JumpIfEqual {25}
	018 Move X0, X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X1, X31
	022 Move X30, [X31+32]
	023 Call EventBase.StopPropagation, X0
	024 Return 
	025 Call 0x1C17F20

