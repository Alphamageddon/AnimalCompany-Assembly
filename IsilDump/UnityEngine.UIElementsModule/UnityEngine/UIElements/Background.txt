Type: UnityEngine.UIElements.Background

Method: UnityEngine.Texture2D get_texture()

Disassembly:
	0x03DE3228 B 0x3DE3234
	0x03DE322C B 0x3DE3288

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void set_texture(UnityEngine.Texture2D value)

Disassembly:
	0x03DE3230 B 0x3DE32E0
	0x03DE3234 MOV X23, X0
	0x03DE3238 CMP W1, 0x1
	0x03DE323C B.NE 0x3DE3264
	0x03DE3240 MOV X0, X23
	0x03DE3244 BL 0x3EB1AD0
	0x03DE3248 LDR X22, [X0]
	0x03DE324C BL 0x3EB1AE0
	0x03DE3250 LDR X1, [X26]
	0x03DE3254 ADD X0, X31, 0x60
	0x03DE3258 BL 0x2BCAC34
	0x03DE325C CBZ X22, 0x3DE319C
	0x03DE3260 B 0x3DE32B4
	0x03DE3264 MOV X22, X31
	0x03DE3268 B 0x3DE3270
	0x03DE326C MOV X23, X0
	0x03DE3270 LDR X1, [X26]
	0x03DE3274 ADD X0, X31, 0x60
	0x03DE3278 BL 0x2BCAC34
	0x03DE327C CBZ X22, 0x3DE33A4
	0x03DE3280 MOV X0, X22
	0x03DE3284 BL 0x1C16F18
	0x03DE3288 MOV X23, X0
	0x03DE328C CMP W1, 0x1
	0x03DE3290 B.NE 0x3DE32BC
	0x03DE3294 MOV X0, X23
	0x03DE3298 BL 0x3EB1AD0
	0x03DE329C LDR X22, [X0]
	0x03DE32A0 BL 0x3EB1AE0
	0x03DE32A4 LDR X1, [X29]
	0x03DE32A8 ADD X0, X31, 0x90

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x606000
	007 Move X21, 0x311000
	008 Move W8, [X22+493]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x311000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+493], W8
	021 Move X0, [X21]
	022 Move X21, [X19]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X20
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {39}
	035 Move [X19], X20
	036 Move [X19+8], X31
	037 Move [X19+16], X31
	038 Move [X19+24], X31
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 

Method: UnityEngine.Sprite get_sprite()

Disassembly:
	0x03DE32AC BL 0x2BCC874
	0x03DE32B0 CBZ X22, 0x3DE3138

ISIL:
	001 Move X0, [X0+8]
	002 Return X0

Method: System.Void set_sprite(UnityEngine.Sprite value)

Disassembly:
	0x03DE32B4 MOV X0, X22
	0x03DE32B8 BL 0x1C16F18
	0x03DE32BC MOV X22, X31
	0x03DE32C0 B 0x3DE32C8
	0x03DE32C4 MOV X23, X0
	0x03DE32C8 LDR X1, [X29]
	0x03DE32CC ADD X0, X31, 0x90
	0x03DE32D0 BL 0x2BCC874
	0x03DE32D4 CBZ X22, 0x3DE33A4
	0x03DE32D8 MOV X0, X22
	0x03DE32DC BL 0x1C16F18
	0x03DE32E0 MOV X23, X0
	0x03DE32E4 CMP W1, 0x1
	0x03DE32E8 B.NE 0x3DE331C
	0x03DE32EC MOV X0, X23
	0x03DE32F0 BL 0x3EB1AD0
	0x03DE32F4 LDR X8, [X0]
	0x03DE32F8 STR X8, [X31 + 0x8]
	0x03DE32FC BL 0x3EB1AE0
	0x03DE3300 LDR X1, [X29]
	0x03DE3304 ADD X0, X31, 0xB0
	0x03DE3308 BL 0x2BCC874
	0x03DE330C LDR X8, [X31 + 0x8]
	0x03DE3310 CBZ X8, 0x3DE30CC
	0x03DE3314 LDR X0, [X31 + 0x8]
	0x03DE3318 BL 0x1C16F18
	0x03DE331C STR X31, [X31 + 0x8]
	0x03DE3320 B 0x3DE3328
	0x03DE3324 MOV X23, X0
	0x03DE3328 LDR X1, [X29]
	0x03DE332C ADD X0, X31, 0xB0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x606000
	007 Move X21, 0x311000
	008 Move W8, [X22+494]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x311000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+494], W8
	021 Move X0, [X21]
	022 Move X21, [X19+8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X20
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {39}
	035 Move [X19], X31
	036 Move [X19+8], X20
	037 Move [X19+16], X31
	038 Move [X19+24], X31
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 

Method: UnityEngine.RenderTexture get_renderTexture()

Disassembly:
	0x03DE3330 BL 0x2BCC874
	0x03DE3334 LDR X8, [X31 + 0x8]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_renderTexture(UnityEngine.RenderTexture value)

Disassembly:
	0x03DE3338 CBZ X8, 0x3DE33A4
	0x03DE333C LDR X0, [X31 + 0x8]
	0x03DE3340 BL 0x1C16F18
	0x03DE3344 CMP W1, 0x1
	0x03DE3348 MOV X23, X0
	0x03DE334C B.NE 0x3DE3380
	0x03DE3350 MOV X0, X23
	0x03DE3354 BL 0x3EB1AD0
	0x03DE3358 LDR X19, [X0]
	0x03DE335C BL 0x3EB1AE0
	0x03DE3360 ADRP X8, 0x386000
	0x03DE3364 LDR X8, [X8 + 0x6F0]
	0x03DE3368 ADD X0, X31, 0x30
	0x03DE336C LDR X1, [X8]
	0x03DE3370 BL 0x2BBADC8
	0x03DE3374 CBZ X19, 0x3DE3200
	0x03DE3378 MOV X0, X19
	0x03DE337C BL 0x1C16F18
	0x03DE3380 MOV X19, X31
	0x03DE3384 B 0x3DE338C
	0x03DE3388 MOV X23, X0
	0x03DE338C ADRP X8, 0x386000
	0x03DE3390 LDR X8, [X8 + 0x6F0]
	0x03DE3394 LDR X1, [X8]
	0x03DE3398 ADD X0, X31, 0x30
	0x03DE339C BL 0x2BBADC8
	0x03DE33A0 CBNZ X19, 0x3DE33AC
	0x03DE33A4 MOV X0, X23
	0x03DE33A8 BL 0x1D2C690
	0x03DE33AC MOV X0, X19
	0x03DE33B0 BL 0x1C16F18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x606000
	007 Move X21, 0x311000
	008 Move W8, [X22+495]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x311000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+495], W8
	021 Move X0, [X21]
	022 Move X21, [X19+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X20
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {39}
	035 Move [X19], X31
	036 Move [X19+8], X31
	037 Move [X19+16], X20
	038 Move [X19+24], X31
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 

Method: UnityEngine.UIElements.VectorImage get_vectorImage()

Disassembly:
	0x03DE1F4C FMOV S0, W0
	0x03DE1F50 FMOV S1, W1

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_vectorImage(UnityEngine.UIElements.VectorImage value)

Disassembly:
	0x03DE33B4 BL 0x1990590
	0x03DE33B8 SUB X31, X31, 0x90
	0x03DE33BC STP X29, X30, [X31 + 0x30]
	0x03DE33C0 STP X28, X27, [X31 + 0x40]
	0x03DE33C4 STP X26, X25, [X31 + 0x50]
	0x03DE33C8 STP X24, X23, [X31 + 0x60]
	0x03DE33CC STP X22, X21, [X31 + 0x70]
	0x03DE33D0 STP X20, X19, [X31 + 0x80]
	0x03DE33D4 ADRP X20, 0x605000
	0x03DE33D8 LDRB W8, [X20 + 0x1FE]
	0x03DE33DC MOV X19, X1
	0x03DE33E0 MOV X23, X0
	0x03DE33E4 TBNZ X8, 0x0, 0x3DE3444
	0x03DE33E8 ADRP X0, 0x386000
	0x03DE33EC LDR X0, [X0 + 0x730]
	0x03DE33F0 BL 0x1C16CF4
	0x03DE33F4 ADRP X0, 0x386000
	0x03DE33F8 LDR X0, [X0 + 0x738]
	0x03DE33FC BL 0x1C16CF4
	0x03DE3400 ADRP X0, 0x381000
	0x03DE3404 LDR X0, [X0 + 0x268]
	0x03DE3408 BL 0x1C16CF4
	0x03DE340C ADRP X0, 0x386000
	0x03DE3410 LDR X0, [X0 + 0x740]
	0x03DE3414 BL 0x1C16CF4
	0x03DE3418 ADRP X0, 0x386000
	0x03DE341C LDR X0, [X0 + 0x748]
	0x03DE3420 BL 0x1C16CF4
	0x03DE3424 ADRP X0, 0x382000
	0x03DE3428 LDR X0, [X0 + 0x3B8]
	0x03DE342C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x606000
	007 Move X21, 0x311000
	008 Move W8, [X22+496]
	009 Move X21, [X21+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x311000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+496], W8
	021 Move X0, [X21]
	022 Move X21, [X20+24]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X19
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {39}
	035 Move [X20], X31
	036 Move [X20+8], X31
	037 Move [X20+16], X31
	038 Move [X20+24], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 

Method: UnityEngine.UIElements.Background FromTexture2D(UnityEngine.Texture2D t)

Disassembly:
	0x03DE3430 ADRP X0, 0x380000
	0x03DE3434 LDR X0, [X0 + 0xD68]
	0x03DE3438 BL 0x1C16CF4
	0x03DE343C MOVZ W8, 0x1
	0x03DE3440 STRB W8, [X20 + 0x1FE]
	0x03DE3444 MOV X0, X23
	0x03DE3448 MOV X1, X31
	0x03DE344C BL 0x3DC9DEC
	0x03DE3450 CBZ X0, 0x3DE3634
	0x03DE3454 LDR W8, [X0 + 0x18]
	0x03DE3458 MOV X20, X0
	0x03DE345C CBZ W8, 0x3DE3634
	0x03DE3460 MOV X0, X23

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X1, X0
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Add X0, X31, 0
	007 Move X19, X8
	008 Move [X31], V0
	009 Move [X31+8], V0
	010 Call Background.set_texture, X0, X1
	011 Move V1, [X31]
	012 Move V0, [X31+16]
	013 Move [X19], V1
	014 Move [X19+8], V0
	015 Move X30, [X31+32]
	016 Move X19, [X31+40]
	017 Add X31, X31, 48
	018 Return X0

Method: UnityEngine.UIElements.Background FromRenderTexture(UnityEngine.RenderTexture rt)

Disassembly:
	0x03DE3464 MOV X1, X31
	0x03DE3468 BL 0x3DC9D9C
	0x03DE346C MOV X21, X0
	0x03DE3470 MOV X0, X23
	0x03DE3474 MOV X1, X31
	0x03DE3478 BL 0x3DC9D4C
	0x03DE347C MOV X22, X0
	0x03DE3480 MOV X0, X23
	0x03DE3484 MOV X1, X31
	0x03DE3488 BL 0x3DC9E3C
	0x03DE348C LDR W28, [X20 + 0x18]
	0x03DE3490 STR X0, [X31 + 0x8]
	0x03DE3494 CMP W28, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X1, X0
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Add X0, X31, 0
	007 Move X19, X8
	008 Move [X31], V0
	009 Move [X31+8], V0
	010 Call Background.set_renderTexture, X0, X1
	011 Move V1, [X31]
	012 Move V0, [X31+16]
	013 Move [X19], V1
	014 Move [X19+8], V0
	015 Move X30, [X31+32]
	016 Move X19, [X31+40]
	017 Add X31, X31, 48
	018 Return X0

Method: UnityEngine.UIElements.Background FromSprite(UnityEngine.Sprite s)

Disassembly:
	0x03DE3498 B.LT 0x3DE3634
	0x03DE349C ADRP X29, 0x382000
	0x03DE34A0 ADRP X23, 0x386000
	0x03DE34A4 LDR X29, [X29 + 0x3B8]
	0x03DE34A8 LDR X23, [X23 + 0x738]
	0x03DE34AC MOV W24, W31
	0x03DE34B0 LDR X2, [X29]
	0x03DE34B4 MOV X0, X20
	0x03DE34B8 MOV W1, W24
	0x03DE34BC BL 0x30650A8
	0x03DE34C0 MOV X25, X0
	0x03DE34C4 CBZ W25, 0x3DE3628
	0x03DE34C8 ADRP X8, 0x380000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X1, X0
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Add X0, X31, 0
	007 Move X19, X8
	008 Move [X31], V0
	009 Move [X31+8], V0
	010 Call Background.set_sprite, X0, X1
	011 Move V1, [X31]
	012 Move V0, [X31+16]
	013 Move [X19], V1
	014 Move [X19+8], V0
	015 Move X30, [X31+32]
	016 Move X19, [X31+40]
	017 Add X31, X31, 48
	018 Return X0

Method: UnityEngine.UIElements.Background FromVectorImage(UnityEngine.UIElements.VectorImage vi)

Disassembly:
	0x03DE34CC LDR X8, [X8 + 0xD68]
	0x03DE34D0 LDR X0, [X8]
	0x03DE34D4 LDR W8, [X0 + 0xE0]
	0x03DE34D8 CBNZ W8, 0x3DE34E0
	0x03DE34DC BL 0x1C16DFC
	0x03DE34E0 MOV W0, W25
	0x03DE34E4 MOV X1, X31
	0x03DE34E8 BL 0x3D4C2A0
	0x03DE34EC TBZ X0, 0x0, 0x3DE3628
	0x03DE34F0 ADD X0, X31, 0x18
	0x03DE34F4 FMOV S0, W31
	0x03DE34F8 MOV X1, X31
	0x03DE34FC STR X31, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X1, X0
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Add X0, X31, 0
	007 Move X19, X8
	008 Move [X31], V0
	009 Move [X31+8], V0
	010 Call Background.set_vectorImage, X0, X1
	011 Move V1, [X31]
	012 Move V0, [X31+16]
	013 Move [X19], V1
	014 Move [X19+8], V0
	015 Move X30, [X31+32]
	016 Move X19, [X31+40]
	017 Add X31, X31, 48
	018 Return X0

Method: UnityEngine.UIElements.Background FromObject(System.Object obj)

Disassembly:
	0x03DE3500 BL 0x3E0055C
	0x03DE3504 ADRP X8, 0x381000
	0x03DE3508 LDR X8, [X8 + 0x268]
	0x03DE350C LDR X0, [X8]
	0x03DE3510 LDR W8, [X0 + 0xE0]
	0x03DE3514 CBNZ W8, 0x3DE351C
	0x03DE3518 BL 0x1C16DFC
	0x03DE351C LDR X2, [X31 + 0x18]
	0x03DE3520 LDR X3, [X23]
	0x03DE3524 MOV X0, X21
	0x03DE3528 MOV W1, W24
	0x03DE352C BL 0x21A4C84
	0x03DE3530 BL 0x3DE3984
	0x03DE3534 MOV W26, W0
	0x03DE3538 ADD X0, X31, 0x10
	0x03DE353C FMOV S0, W31
	0x03DE3540 MOV X1, X31
	0x03DE3544 STR X31, [X31 + 0x10]
	0x03DE3548 BL 0x3E0055C
	0x03DE354C LDR X2, [X31 + 0x10]
	0x03DE3550 LDR X3, [X23]
	0x03DE3554 MOV X0, X22
	0x03DE3558 MOV W1, W24
	0x03DE355C BL 0x21A4C84
	0x03DE3560 BL 0x3DE3984
	0x03DE3564 BIC W8, W26, W26, 0x1F
	0x03DE3568 ADD W8, W0, W8
	0x03DE356C CMP W8, 0x1
	0x03DE3570 B.LT 0x3DE3628
	0x03DE3574 ADRP X8, 0x381000
	0x03DE3578 LDR X8, [X8 + 0x268]
	0x03DE357C MOV W27, W0
	0x03DE3580 LDR X0, [X8]
	0x03DE3584 LDR W8, [X0 + 0xE0]
	0x03DE3588 CBNZ W8, 0x3DE3590
	0x03DE358C BL 0x1C16DFC
	0x03DE3590 ADRP X8, 0x386000
	0x03DE3594 LDR X8, [X8 + 0x730]
	0x03DE3598 LDR X0, [X31 + 0x8]
	0x03DE359C MOV W1, W24
	0x03DE35A0 MOV X2, X31
	0x03DE35A4 LDR X3, [X8]
	0x03DE35A8 BL 0x21A4C18
	0x03DE35AC BL 0x3DE3A80
	0x03DE35B0 CBZ X19, 0x3DE3654
	0x03DE35B4 ADRP X9, 0x386000
	0x03DE35B8 LDR W10, [X19 + 0x1C]
	0x03DE35BC LDR X8, [X19 + 0x10]
	0x03DE35C0 LDR X9, [X9 + 0x740]
	0x03DE35C4 ADD W10, W10, 0x1
	0x03DE35C8 LDR X9, [X9]
	0x03DE35CC STR W10, [X19 + 0x1C]
	0x03DE35D0 CBZ X8, 0x3DE3654
	0x03DE35D4 LDRSW X10, [X19 + 0x18]
	0x03DE35D8 LDR W11, [X8 + 0x18]
	0x03DE35DC CMP W10, W11
	0x03DE35E0 B.CS 0x3DE3604
	0x03DE35E4 MOVZ W11, 0x18
	0x03DE35E8 ADD W9, W10, 0x1
	0x03DE35EC MADD X8, X10, X11, X8
	0x03DE35F0 STR W9, [X19 + 0x18]
	0x03DE35F4 STP W25, W26, [X8 + 0x20]
	0x03DE35F8 STP W27, W31, [X8 + 0x28]
	0x03DE35FC STR X0, [X8 + 0x30]
	0x03DE3600 B 0x3DE3628
	0x03DE3604 LDR X8, [X9 + 0x20]
	0x03DE3608 ADD X1, X31, 0x18
	0x03DE360C LDR X8, [X8 + 0xC0]
	0x03DE3610 LDR X2, [X8 + 0x70]
	0x03DE3614 STR X0, [X31 + 0x28]
	0x03DE3618 MOV X0, X19
	0x03DE361C STP W25, W26, [X31 + 0x18]
	0x03DE3620 STP W27, W31, [X31 + 0x20]
	0x03DE3624 BL 0x2F75E74
	0x03DE3628 ADD W24, W24, 0x1
	0x03DE362C CMP W28, W24
	0x03DE3630 B.NE 0x3DE34B0
	0x03DE3634 LDP X20, X19, [X31 + 0x80]
	0x03DE3638 LDP X22, X21, [X31 + 0x70]
	0x03DE363C LDP X24, X23, [X31 + 0x60]
	0x03DE3640 LDP X26, X25, [X31 + 0x50]
	0x03DE3644 LDP X28, X27, [X31 + 0x40]
	0x03DE3648 LDP X29, X30, [X31 + 0x30]
	0x03DE364C ADD X31, X31, 0x90
	0x03DE3650 RET
	0x03DE3654 BL 0x1C16F20
	0x03DE3658 LDR W0, [X0]
	0x03DE365C RET
	0x03DE3660 STP X30, X23, [X31 - 0x30]!
	0x03DE3664 STP X22, X21, [X31 + 0x10]
	0x03DE3668 STP X20, X19, [X31 + 0x20]
	0x03DE366C ADRP X21, 0x605000
	0x03DE3670 LDRB W8, [X21 + 0x1FB]
	0x03DE3674 MOV X19, X1
	0x03DE3678 MOV X20, X0
	0x03DE367C TBNZ X8, 0x0, 0x3DE3694
	0x03DE3680 ADRP X0, 0x381000
	0x03DE3684 LDR X0, [X0 + 0x268]
	0x03DE3688 BL 0x1C16CF4
	0x03DE368C MOVZ W8, 0x1
	0x03DE3690 STRB W8, [X21 + 0x1FB]
	0x03DE3694 LDR X8, [X20 + 0x50]
	0x03DE3698 CBZ X8, 0x3DE36B0
	0x03DE369C LDR X9, [X19 + 0x50]
	0x03DE36A0 CMP X8, X9
	0x03DE36A4 B.NE 0x3DE36B0
	0x03DE36A8 MOVZ W0, 0x1
	0x03DE36AC B 0x3DE3790
	0x03DE36B0 ADRP X23, 0x381000
	0x03DE36B4 LDR X23, [X23 + 0x268]
	0x03DE36B8 MOV X0, X20
	0x03DE36BC MOV X1, X31
	0x03DE36C0 BL 0x3DC9DEC
	0x03DE36C4 MOV X21, X0
	0x03DE36C8 MOV X0, X19
	0x03DE36CC MOV X1, X31
	0x03DE36D0 BL 0x3DC9DEC
	0x03DE36D4 LDR X8, [X23]
	0x03DE36D8 MOV X22, X0
	0x03DE36DC LDR W9, [X8 + 0xE0]
	0x03DE36E0 CBNZ W9, 0x3DE36EC
	0x03DE36E4 MOV X0, X8
	0x03DE36E8 BL 0x1C16DFC
	0x03DE36EC MOV X0, X21
	0x03DE36F0 MOV X1, X22
	0x03DE36F4 BL 0x3DE37A0
	0x03DE36F8 TBZ X0, 0x0, 0x3DE378C
	0x03DE36FC MOV X0, X20
	0x03DE3700 MOV X1, X31
	0x03DE3704 BL 0x3DC9D9C
	0x03DE3708 MOV X21, X0
	0x03DE370C MOV X0, X19
	0x03DE3710 MOV X1, X31
	0x03DE3714 BL 0x3DC9D9C
	0x03DE3718 LDR X8, [X23]
	0x03DE371C MOV X22, X0
	0x03DE3720 LDR W9, [X8 + 0xE0]
	0x03DE3724 CBNZ W9, 0x3DE3730
	0x03DE3728 MOV X0, X8
	0x03DE372C BL 0x1C16DFC
	0x03DE3730 MOV X0, X21
	0x03DE3734 MOV X1, X22
	0x03DE3738 BL 0x3DE3898
	0x03DE373C TBZ X0, 0x0, 0x3DE378C
	0x03DE3740 MOV X0, X20
	0x03DE3744 MOV X1, X31
	0x03DE3748 BL 0x3DC9D4C
	0x03DE374C MOV X20, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X21, 0x606000
	008 Move W9, [X21+497]
	009 Move X20, X0
	010 Move X19, X8
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x311000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x313000
	019 Move X0, [X0+304]
	020 Call 0x1C17CF4
	021 Move X0, 0x383000
	022 Move X0, [X0+2920]
	023 Call 0x1C17CF4
	024 Move X0, 0x33B000
	025 Move X0, [X0+592]
	026 Call 0x1C17CF4
	027 Move X0, 0x383000
	028 Move X0, [X0+2944]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+497], W8
	032 Move X22, 0x311000
	033 Move X22, [X22+1432]
	034 Compare X20, 0
	035 JumpIfEqual {42}
	036 Move X8, 0x33B000
	037 Move X8, [X8+592]
	038 Move X9, [X20]
	039 Move X8, [X8]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Move X21, X31
	043 Move X0, [X22]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X21
	049 Move X1, X31
	050 Move X2, X31
	051 Call Object.op_Inequality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {62}
	056 NotImplemented "Instruction MOVI not yet implemented."
	057 Add X0, X31, 32
	058 Move X1, X21
	059 Move [X31+32], V0
	060 Move [X31+40], V0
	061 Call Background.set_texture, X0, X1
	062 Compare X20, 0
	063 JumpIfEqual {71}
	064 Move X8, 0x313000
	065 Move X8, [X8+304]
	066 Move X9, [X20]
	067 Move X8, [X8]
	068 Move W11, [X9+304]
	069 Move W10, [X8+304]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X21, X31
	072 Move X9, [X9+200]
	073 Add X9, X9, X10
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CSEL not yet implemented."
	077 Move X0, [X22]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X21
	083 Move X1, X31
	084 Move X2, X31
	085 Call Object.op_Inequality, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {96}
	090 NotImplemented "Instruction MOVI not yet implemented."
	091 Add X0, X31, 32
	092 Move X1, X21
	093 Move [X31+32], V0
	094 Move [X31+40], V0
	095 Call Background.set_renderTexture, X0, X1
	096 Compare X20, 0
	097 JumpIfEqual {104}
	098 Move X8, 0x383000
	099 Move X8, [X8+2920]
	100 Move X9, [X20]
	101 Move X8, [X8]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction CSEL not yet implemented."
	104 Move X21, X31
	105 Move X0, [X22]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, X21
	111 Move X1, X31
	112 Move X2, X31
	113 Call Object.op_Inequality, X0, X1
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {124}
	118 NotImplemented "Instruction MOVI not yet implemented."
	119 Add X0, X31, 32
	120 Move X1, X21
	121 Move [X31+32], V0
	122 Move [X31+40], V0
	123 Call Background.set_sprite, X0, X1
	124 Compare X20, 0
	125 JumpIfEqual {139}
	126 Move X8, 0x383000
	127 Move X8, [X8+2944]
	128 Move X9, [X20]
	129 Move X8, [X8]
	130 Move W11, [X9+304]
	131 Move W10, [X8+304]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X20, X31
	134 Move X9, [X9+200]
	135 Add X9, X9, X10
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 NotImplemented "Instruction CSEL not yet implemented."
	139 Move X0, [X22]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move X0, X20
	145 Move X1, X31
	146 Move X2, X31
	147 Call Object.op_Inequality, X0, X1
	148 NotImplemented "Instruction MOVI not yet implemented."
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {173}
	153 Add X0, X31, 32
	154 Move X1, X20
	155 Move [X31+32], V0
	156 Move [X31+40], V0
	157 Call Background.set_vectorImage, X0, X1
	158 Move V0, [X31+32]
	159 Move V1, [X31+48]
	160 Move [X31], V0
	161 Move [X31+8], V1
	162 Move V1, [X31]
	163 Move V0, [X31+16]
	164 Move X22, [X31+80]
	165 Move X21, [X31+88]
	166 Move X30, [X31+64]
	167 Move [X19], V1
	168 Move [X19+8], V0
	169 Move X20, [X31+96]
	170 Move X19, [X31+104]
	171 Add X31, X31, 112
	172 Return X0
	173 Move [X31], V0
	174 Move [X31+8], V0

Method: System.Boolean op_Equality(UnityEngine.UIElements.Background lhs, UnityEngine.UIElements.Background rhs)

Disassembly:
	0x03DE3750 MOV X0, X19
	0x03DE3754 MOV X1, X31
	0x03DE3758 BL 0x3DC9D4C
	0x03DE375C LDR X8, [X23]
	0x03DE3760 MOV X19, X0
	0x03DE3764 LDR W9, [X8 + 0xE0]
	0x03DE3768 CBNZ W9, 0x3DE3774
	0x03DE376C MOV X0, X8
	0x03DE3770 BL 0x1C16DFC
	0x03DE3774 MOV X0, X20
	0x03DE3778 MOV X1, X19
	0x03DE377C LDP X20, X19, [X31 + 0x20]
	0x03DE3780 LDP X22, X21, [X31 + 0x10]
	0x03DE3784 LDP X30, X23, [X31], #0x30
	0x03DE3788 B 0x3DE3898
	0x03DE378C MOV W0, W31
	0x03DE3790 LDP X20, X19, [X31 + 0x20]
	0x03DE3794 LDP X22, X21, [X31 + 0x10]
	0x03DE3798 LDP X30, X23, [X31], #0x30
	0x03DE379C RET
	0x03DE37A0 STP X30, X25, [X31 - 0x40]!
	0x03DE37A4 STP X24, X23, [X31 + 0x10]
	0x03DE37A8 STP X22, X21, [X31 + 0x20]
	0x03DE37AC STP X20, X19, [X31 + 0x30]
	0x03DE37B0 ADRP X21, 0x605000
	0x03DE37B4 LDRB W8, [X21 + 0x1FC]
	0x03DE37B8 MOV X19, X1
	0x03DE37BC MOV X20, X0
	0x03DE37C0 TBNZ X8, 0x0, 0x3DE37E4
	0x03DE37C4 ADRP X0, 0x386000
	0x03DE37C8 LDR X0, [X0 + 0x748]
	0x03DE37CC BL 0x1C16CF4
	0x03DE37D0 ADRP X0, 0x382000
	0x03DE37D4 LDR X0, [X0 + 0x3B8]
	0x03DE37D8 BL 0x1C16CF4
	0x03DE37DC MOVZ W8, 0x1
	0x03DE37E0 STRB W8, [X21 + 0x1FC]
	0x03DE37E4 CMP X20, X19
	0x03DE37E8 B.EQ 0x3DE3874
	0x03DE37EC MOV W8, W31
	0x03DE37F0 CBZ X20, 0x3DE3880
	0x03DE37F4 CBZ X19, 0x3DE3880
	0x03DE37F8 LDR W8, [X20 + 0x18]
	0x03DE37FC LDR W9, [X19 + 0x18]
	0x03DE3800 CMP W8, W9
	0x03DE3804 B.NE 0x3DE387C
	0x03DE3808 SUBS W24, W8, 0x1
	0x03DE380C B.LT 0x3DE3874
	0x03DE3810 ADRP X25, 0x382000
	0x03DE3814 LDR X25, [X25 + 0x3B8]
	0x03DE3818 MOV W21, W31
	0x03DE381C LDR X2, [X25]
	0x03DE3820 MOV X0, X20
	0x03DE3824 MOV W1, W21
	0x03DE3828 BL 0x30650A8
	0x03DE382C LDR X2, [X25]
	0x03DE3830 MOV X22, X0
	0x03DE3834 MOV X23, X1
	0x03DE3838 MOV X0, X19
	0x03DE383C MOV W1, W21
	0x03DE3840 BL 0x30650A8
	0x03DE3844 MOV X2, X0
	0x03DE3848 MOV X3, X1
	0x03DE384C MOV X0, X22
	0x03DE3850 MOV X1, X23
	0x03DE3854 MOV X4, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x606000
	008 Move X23, 0x311000
	009 Move W8, [X21+498]
	010 Move X23, [X23+1432]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x311000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+498], W8
	022 Move X0, [X23]
	023 Move X21, [X20]
	024 Move X22, [X19]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X21
	030 Move X1, X22
	031 Move X2, X31
	032 Call Object.op_Equality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {85}
	037 Move X0, [X23]
	038 Move X21, [X20+8]
	039 Move X22, [X19+8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move X1, X22
	046 Move X2, X31
	047 Call Object.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {85}
	052 Move X0, [X23]
	053 Move X21, [X20+16]
	054 Move X22, [X19+16]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X21
	060 Move X1, X22
	061 Move X2, X31
	062 Call Object.op_Equality, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {85}
	067 Move X0, [X23]
	068 Move X20, [X20+24]
	069 Move X19, [X19+24]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X20
	075 Move X1, X19
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move X2, X31
	081 Move X30, [X31+48]
	082 Move X23, [X31+56]
	083 Call Object.op_Equality, X0, X1
	084 Return X0
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move W0, W31
	090 Move X30, [X31+48]
	091 Move X23, [X31+56]
	092 Return X0

Method: System.Boolean op_Inequality(UnityEngine.UIElements.Background lhs, UnityEngine.UIElements.Background rhs)

Disassembly:
	0x03DE3858 BL 0x3E05708
	0x03DE385C TBNZ X0, 0x0, 0x3DE386C
	0x03DE3860 CMP W24, W21
	0x03DE3864 ADD W21, W21, 0x1
	0x03DE3868 B.NE 0x3DE381C
	0x03DE386C EOR W8, W0, 0x1
	0x03DE3870 B 0x3DE3880
	0x03DE3874 MOVZ W8, 0x1
	0x03DE3878 B 0x3DE3880
	0x03DE387C MOV W8, W31
	0x03DE3880 LDP X20, X19, [X31 + 0x30]
	0x03DE3884 LDP X22, X21, [X31 + 0x20]
	0x03DE3888 LDP X24, X23, [X31 + 0x10]
	0x03DE388C AND W0, W8, 0x1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move V1, [X0]
	004 Move V0, [X0+16]
	005 Add X0, X31, 32
	006 Move [X31+32], V1
	007 Move [X31+40], V0
	008 Move V1, [X1]
	009 Move V0, [X1+16]
	010 Add X1, X31, 0
	011 Move [X31], V1
	012 Move [X31+8], V0
	013 Call Background.op_Equality, X0, X1
	014 Move X30, [X31+64]
	015 NotImplemented "Instruction ORN not yet implemented."
	016 And W0, W8, 1
	017 Add X31, X31, 80
	018 Return X0

Method: System.Boolean Equals(UnityEngine.UIElements.Background other)

Disassembly:
	0x03DE3890 LDP X30, X25, [X31], #0x40
	0x03DE3894 RET
	0x03DE3898 STR X30, [X31 - 0x40]!
	0x03DE389C STP X24, X23, [X31 + 0x10]
	0x03DE38A0 STP X22, X21, [X31 + 0x20]
	0x03DE38A4 STP X20, X19, [X31 + 0x30]
	0x03DE38A8 ADRP X21, 0x605000
	0x03DE38AC LDRB W8, [X21 + 0x1FD]
	0x03DE38B0 MOV X19, X1
	0x03DE38B4 MOV X20, X0
	0x03DE38B8 TBNZ X8, 0x0, 0x3DE38DC
	0x03DE38BC ADRP X0, 0x386000
	0x03DE38C0 LDR X0, [X0 + 0x750]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move V1, [X1]
	004 Move V0, [X1+16]
	005 Add X1, X31, 0
	006 Move [X31+32], V1
	007 Move [X31+40], V0
	008 Move V1, [X0]
	009 Move V0, [X0+16]
	010 Add X0, X31, 32
	011 Move [X31], V1
	012 Move [X31+8], V0
	013 Call Background.op_Equality, X0, X1
	014 Move X30, [X31+64]
	015 And W0, W0, 1
	016 Add X31, X31, 80
	017 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03DE38C4 BL 0x1C16CF4
	0x03DE38C8 ADRP X0, 0x382000
	0x03DE38CC LDR X0, [X0 + 0x3C0]
	0x03DE38D0 BL 0x1C16CF4
	0x03DE38D4 MOVZ W8, 0x1
	0x03DE38D8 STRB W8, [X21 + 0x1FD]
	0x03DE38DC CMP X20, X19
	0x03DE38E0 B.EQ 0x3DE3960
	0x03DE38E4 MOV W8, W31
	0x03DE38E8 CBZ X20, 0x3DE396C
	0x03DE38EC CBZ X19, 0x3DE396C
	0x03DE38F0 LDR W8, [X20 + 0x18]
	0x03DE38F4 LDR W9, [X19 + 0x18]
	0x03DE38F8 CMP W8, W9
	0x03DE38FC B.NE 0x3DE3968
	0x03DE3900 SUBS W23, W8, 0x1
	0x03DE3904 B.LT 0x3DE3960
	0x03DE3908 ADRP X24, 0x382000
	0x03DE390C LDR X24, [X24 + 0x3C0]
	0x03DE3910 MOV W21, W31
	0x03DE3914 LDR X2, [X24]
	0x03DE3918 MOV X0, X20
	0x03DE391C MOV W1, W21
	0x03DE3920 BL 0x3084854
	0x03DE3924 LDR X2, [X24]
	0x03DE3928 MOV X22, X0
	0x03DE392C MOV X0, X19
	0x03DE3930 MOV W1, W21
	0x03DE3934 BL 0x3084854
	0x03DE3938 MOV X1, X0
	0x03DE393C MOV X0, X22
	0x03DE3940 MOV X2, X31
	0x03DE3944 BL 0x3E005A4
	0x03DE3948 TBNZ X0, 0x0, 0x3DE3958
	0x03DE394C CMP W23, W21
	0x03DE3950 ADD W21, W21, 0x1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x606000
	007 Move W8, [X21+499]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x33C000
	015 Move X0, [X0+3544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+499], W8
	019 Compare X20, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x33C000
	022 Move X8, [X8+3544]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X0, X20
	028 Call 0x1C17E08
	029 Move V0, [X0]
	030 Move V1, [X0+16]
	031 Add X0, X31, 32
	032 Add X1, X31, 0
	033 Move [X31+32], V0
	034 Move [X31+40], V1
	035 Move V0, [X19]
	036 Move V1, [X19+16]
	037 Move [X31], V0
	038 Move [X31+8], V1
	039 Call Background.op_Equality, X0, X1
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X30, [X31+64]
	043 Move X21, [X31+72]
	044 And W0, W0, 1
	045 Add X31, X31, 96
	046 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03DE3954 B.NE 0x3DE3914
	0x03DE3958 EOR W8, W0, 0x1
	0x03DE395C B 0x3DE396C
	0x03DE3960 MOVZ W8, 0x1
	0x03DE3964 B 0x3DE396C
	0x03DE3968 MOV W8, W31
	0x03DE396C LDP X20, X19, [X31 + 0x30]
	0x03DE3970 LDP X22, X21, [X31 + 0x20]
	0x03DE3974 LDP X24, X23, [X31 + 0x10]
	0x03DE3978 AND W0, W8, 0x1
	0x03DE397C LDR X30, [X31], #0x40
	0x03DE3980 RET
	0x03DE3984 SUB X31, X31, 0x30
	0x03DE3988 STP D9, D8, [X31 + 0x10]
	0x03DE398C STP X30, X19, [X31 + 0x20]
	0x03DE3990 ADRP X19, 0x5F6000
	0x03DE3994 MOVZ W8, 0x447A0000
	0x03DE3998 LDRB W9, [X19 + 0x5D7]
	0x03DE399C UBFM X10, X0, 0x20, 0x3F
	0x03DE39A0 FMOV S0, W0
	0x03DE39A4 FMOV S1, W8
	0x03DE39A8 FMUL S1, S0, S1
	0x03DE39AC CMP X10, 0x1
	0x03DE39B0 FCSEL S9, S0, S1, EQ
	0x03DE39B4 CBNZ W9, 0x3DE39CC
	0x03DE39B8 ADRP X0, 0x310000
	0x03DE39BC LDR X0, [X0 + 0x5A8]
	0x03DE39C0 BL 0x1C16CF4
	0x03DE39C4 MOVZ W8, 0x1
	0x03DE39C8 STRB W8, [X19 + 0x5D7]
	0x03DE39CC ADRP X8, 0x310000
	0x03DE39D0 LDR X8, [X8 + 0x5A8]
	0x03DE39D4 LDR X0, [X8]
	0x03DE39D8 LDR W8, [X0 + 0xE0]
	0x03DE39DC CBNZ W8, 0x3DE39E4
	0x03DE39E0 BL 0x1C16DFC
	0x03DE39E4 FCVT S8, S9
	0x03DE39E8 ADD X0, X31, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X0
	006 Move X0, [X0]
	007 Compare X0, 0
	008 JumpIfEqual {16}
	009 Move X8, [X0]
	010 Move X9, [X8+344]
	011 Move X1, [X8+352]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move W8, 0x23E7
	014 NotImplemented "Instruction MOVK not yet implemented."
	015 Add W19, W0, W8
	016 Move W19, 0x428F
	017 NotImplemented "Instruction MOVK not yet implemented."
	018 Move X0, [X20+8]
	019 Move W21, 0x5529
	020 NotImplemented "Instruction MOVK not yet implemented."
	021 Compare X0, 0
	022 JumpIfEqual {28}
	023 Move X8, [X0]
	024 Move X9, [X8+344]
	025 Move X1, [X8+352]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 NotImplemented "Instruction MADD not yet implemented."
	028 Move X0, [X20+16]
	029 Compare X0, 0
	030 JumpIfEqual {36}
	031 Move X8, [X0]
	032 Move X9, [X8+344]
	033 Move X1, [X8+352]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 NotImplemented "Instruction MADD not yet implemented."
	036 Move X0, [X20+24]
	037 Compare X0, 0
	038 JumpIfEqual {44}
	039 Move X8, [X0]
	040 Move X9, [X8+344]
	041 Move X1, [X8+352]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 NotImplemented "Instruction MADD not yet implemented."
	044 Move W0, W19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return X0

Method: System.String ToString()

Disassembly:
	0x03DE39EC MOV V0.16B, V8.16B
	0x03DE39F0 BL 0x3EB1C00
	0x03DE39F4 FCMP S9, 0x0
	0x03DE39F8 B.GE 0x3DE3A14
	0x03DE39FC FMOV D1, -0.5
	0x03DE3A00 FCMP D0, D1
	0x03DE3A04 B.NE 0x3DE3A3C
	0x03DE3A08 LDR V0, [X31 + 0x8]
	0x03DE3A0C FMOV D1, -1
	0x03DE3A10 B 0x3DE3A28
	0x03DE3A14 FMOV D1, 0.5
	0x03DE3A18 FCMP D0, D1
	0x03DE3A1C B.NE 0x3DE3A48
	0x03DE3A20 LDR V0, [X31 + 0x8]
	0x03DE3A24 FMOV D1, 1
	0x03DE3A28 FCVTZS X8, D0
	0x03DE3A2C FADD D1, D0, D1
	0x03DE3A30 ANDS X31, X8, 0x1
	0x03DE3A34 FCSEL D0, D0, D1, EQ
	0x03DE3A38 B 0x3DE3A50
	0x03DE3A3C FADD D0, D8, D1
	0x03DE3A40 FRINTP D0, D0
	0x03DE3A44 B 0x3DE3A50
	0x03DE3A48 FADD D0, D8, D1
	0x03DE3A4C FRINTM D0, D0
	0x03DE3A50 MOVZ X8, 0x7FF00000
	0x03DE3A54 LDP X30, X19, [X31 + 0x20]
	0x03DE3A58 LDP D9, D8, [X31 + 0x10]
	0x03DE3A5C FMOV D1, X8
	0x03DE3A60 FCVTZS W9, D0
	0x03DE3A64 FCMP D0, D1
	0x03DE3A68 MOVZ W8, 0x80000000
	0x03DE3A6C CSEL W0, W8, W9, EQ
	0x03DE3A70 ADD X31, X31, 0x30
	0x03DE3A74 RET
	0x03DE3A78 MOV W0, W0
	0x03DE3A7C RET
	0x03DE3A80 STP X30, X21, [X31 - 0x20]!
	0x03DE3A84 STP X20, X19, [X31 + 0x10]
	0x03DE3A88 ADRP X20, 0x605000
	0x03DE3A8C LDRB W8, [X20 + 0x1FF]
	0x03DE3A90 MOV W19, W0
	0x03DE3A94 TBNZ X8, 0x0, 0x3DE3BCC
	0x03DE3A98 ADRP X0, 0x33A000
	0x03DE3A9C LDR X0, [X0 + 0xD10]
	0x03DE3AA0 BL 0x1C16CF4
	0x03DE3AA4 ADRP X0, 0x386000
	0x03DE3AA8 LDR X0, [X0 + 0x758]
	0x03DE3AAC BL 0x1C16CF4
	0x03DE3AB0 ADRP X0, 0x386000
	0x03DE3AB4 LDR X0, [X0 + 0x760]
	0x03DE3AB8 BL 0x1C16CF4
	0x03DE3ABC ADRP X0, 0x386000
	0x03DE3AC0 LDR X0, [X0 + 0x768]
	0x03DE3AC4 BL 0x1C16CF4
	0x03DE3AC8 ADRP X0, 0x386000
	0x03DE3ACC LDR X0, [X0 + 0x770]
	0x03DE3AD0 BL 0x1C16CF4
	0x03DE3AD4 ADRP X0, 0x386000
	0x03DE3AD8 LDR X0, [X0 + 0x778]
	0x03DE3ADC BL 0x1C16CF4
	0x03DE3AE0 ADRP X0, 0x386000
	0x03DE3AE4 LDR X0, [X0 + 0x780]
	0x03DE3AE8 BL 0x1C16CF4
	0x03DE3AEC ADRP X0, 0x386000
	0x03DE3AF0 LDR X0, [X0 + 0x788]
	0x03DE3AF4 BL 0x1C16CF4
	0x03DE3AF8 ADRP X0, 0x386000
	0x03DE3AFC LDR X0, [X0 + 0x790]
	0x03DE3B00 BL 0x1C16CF4
	0x03DE3B04 ADRP X0, 0x386000
	0x03DE3B08 LDR X0, [X0 + 0x798]
	0x03DE3B0C BL 0x1C16CF4
	0x03DE3B10 ADRP X0, 0x386000
	0x03DE3B14 LDR X0, [X0 + 0x7A0]
	0x03DE3B18 BL 0x1C16CF4
	0x03DE3B1C ADRP X0, 0x386000
	0x03DE3B20 LDR X0, [X0 + 0x7A8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x606000
	006 Move X21, 0x311000
	007 Move W8, [X20+500]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x311000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x311000
	018 Move X0, [X0+2440]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+500], W8
	022 Move X0, [X21]
	023 Move X20, [X19]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {47}
	036 Move X0, [X19]
	037 Compare X0, 0
	038 JumpIfEqual {64}
	039 Move X8, [X0]
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X2, [X8+360]
	043 Move X1, [X8+368]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 CallNoReturn X2
	047 Move X0, [X21]
	048 Move X20, [X19+8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X20
	054 Move X1, X31
	055 Move X2, X31
	056 Call Object.op_Inequality, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {65}
	061 Move X0, [X19+8]
	062 Compare X0, 0
	063 JumpIfNotEqual {39}
	064 Call 0x1C17F20
	065 Move X0, [X21]
	066 Move X20, [X19+16]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X20
	072 Move X1, X31
	073 Move X2, X31
	074 Call Object.op_Inequality, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {82}
	079 Move X0, [X19+16]
	080 Compare X0, 0
	081 JumpIfNotEqual {39}
	082 Move X0, [X21]
	083 Move X20, [X19+24]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, X20
	089 Move X1, X31
	090 Move X2, X31
	091 Call Object.op_Inequality, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {99}
	096 Move X0, [X19+24]
	097 Compare X0, 0
	098 JumpIfNotEqual {39}
	099 Move X8, 0x311000
	100 Move X8, [X8+2440]
	101 Move X20, [X31+16]
	102 Move X19, [X31+24]
	103 Move X0, [X8]
	104 Move X30, [X31+32]
	105 Move X21, [X31+40]
	106 Return X0

