Type: UnityEngine.UIElements.RareData

Method: UnityEngine.UIElements.RareData Copy()

Disassembly:
	0x03DFC8E4 FADD V0.2S, V1.2S, V0.2S
	0x03DFC8E8 FCMP S0, S8
	0x03DFC8EC B.PL 0x3DFCA58
	0x03DFC8F0 LDR V0, [X20 + 0x74]
	0x03DFC8F4 LDR V1, [X19 + 0x74]
	0x03DFC8F8 MOV W0, W31
	0x03DFC8FC FCMP S0, S1

ISIL:
	001 Move [X31-16], X30
	002 Move X1, X0
	003 Move X0, X8
	004 Move W2, 72
	005 Call 0x3EB2AC0
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Void CopyFrom(ref UnityEngine.UIElements.RareData other)

Disassembly:
	0x03DFC900 B.NE 0x3DFCA5C
	0x03DFC904 LDR W8, [X20 + 0x78]
	0x03DFC908 LDR W9, [X19 + 0x78]
	0x03DFC90C CMP W8, W9
	0x03DFC910 B.NE 0x3DFCA5C

ISIL:
	001 Move [X31-16], X30
	002 Move W2, 72
	003 Call 0x3EB2B30
	004 Move X30, [X31+16]
	005 Return 

Method: System.Boolean op_Equality(UnityEngine.UIElements.RareData lhs, UnityEngine.UIElements.RareData rhs)

Disassembly:
	0x03DFC914 LDR V0, [X20 + 0x7C]
	0x03DFC918 LDR V1, [X19 + 0x7C]
	0x03DFC91C MOV W0, W31
	0x03DFC920 FCMP S0, S1
	0x03DFC924 B.NE 0x3DFCA5C
	0x03DFC928 LDR W8, [X20 + 0x80]
	0x03DFC92C LDR W9, [X19 + 0x80]
	0x03DFC930 CMP W8, W9
	0x03DFC934 B.NE 0x3DFCA5C
	0x03DFC938 LDUR V0, [X20 + 0x84]
	0x03DFC93C LDUR V2, [X19 + 0x84]
	0x03DFC940 LDUR V1, [X20 + 0x8C]
	0x03DFC944 LDUR V3, [X19 + 0x8C]
	0x03DFC948 FSUB V0.2S, V0.2S, V2.2S
	0x00000000 INVALID
	0x03DFC950 FSUB V1.2S, V1.2S, V3.2S
	0x03DFC954 UNIMPLEMENTED
	0x00000000 INVALID
	0x03DFC95C FADD V0.2S, V0.2S, V2.2S
	0x03DFC960 FADD V0.2S, V1.2S, V0.2S
	0x03DFC964 UNIMPLEMENTED
	0x03DFC968 FADD V0.2S, V1.2S, V0.2S
	0x03DFC96C FCMP S0, S8
	0x03DFC970 B.PL 0x3DFCA58
	0x03DFC974 LDUR V0, [X20 + 0x94]
	0x03DFC978 LDUR V2, [X19 + 0x94]
	0x03DFC97C LDUR V1, [X20 + 0x9C]
	0x03DFC980 LDUR V3, [X19 + 0x9C]
	0x03DFC984 FSUB V0.2S, V0.2S, V2.2S
	0x00000000 INVALID
	0x03DFC98C FSUB V1.2S, V1.2S, V3.2S
	0x03DFC990 UNIMPLEMENTED
	0x00000000 INVALID
	0x03DFC998 FADD V0.2S, V0.2S, V2.2S
	0x03DFC99C FADD V0.2S, V1.2S, V0.2S
	0x03DFC9A0 UNIMPLEMENTED
	0x03DFC9A4 FADD V0.2S, V1.2S, V0.2S
	0x03DFC9A8 FCMP S0, S8
	0x03DFC9AC B.PL 0x3DFCA58
	0x03DFC9B0 LDUR V0, [X20 + 0xA4]
	0x03DFC9B4 LDUR V2, [X19 + 0xA4]
	0x03DFC9B8 LDUR V1, [X20 + 0xAC]
	0x03DFC9BC LDUR V3, [X19 + 0xAC]
	0x03DFC9C0 FSUB V0.2S, V0.2S, V2.2S
	0x00000000 INVALID
	0x03DFC9C8 FSUB V1.2S, V1.2S, V3.2S
	0x03DFC9CC UNIMPLEMENTED
	0x00000000 INVALID
	0x03DFC9D4 FADD V0.2S, V0.2S, V2.2S
	0x03DFC9D8 FADD V0.2S, V1.2S, V0.2S
	0x03DFC9DC UNIMPLEMENTED
	0x03DFC9E0 FADD V0.2S, V1.2S, V0.2S
	0x03DFC9E4 FCMP S0, S8
	0x03DFC9E8 B.PL 0x3DFCA58
	0x03DFC9EC LDR V0, [X20 + 0xB4]
	0x03DFC9F0 LDR V1, [X19 + 0xB4]
	0x03DFC9F4 MOV W0, W31
	0x03DFC9F8 FCMP S0, S1
	0x03DFC9FC B.NE 0x3DFCA5C
	0x03DFCA00 LDR W8, [X20 + 0xB8]
	0x03DFCA04 LDR W9, [X19 + 0xB8]
	0x03DFCA08 CMP W8, W9
	0x03DFCA0C B.NE 0x3DFCA5C
	0x03DFCA10 LDR V0, [X20 + 0xBC]
	0x03DFCA14 LDR V1, [X19 + 0xBC]
	0x03DFCA18 MOV W0, W31
	0x03DFCA1C FCMP S0, S1
	0x03DFCA20 B.NE 0x3DFCA5C
	0x03DFCA24 LDR W8, [X20 + 0xC0]
	0x03DFCA28 LDR W9, [X19 + 0xC0]
	0x03DFCA2C CMP W8, W9
	0x03DFCA30 B.NE 0x3DFCA5C
	0x03DFCA34 LDR V0, [X20 + 0xC4]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+80], X20
	004 Move [X31+88], X19
	005 Move X8, [X0+16]
	006 Move V0, [X0]
	007 Move X19, X1
	008 Move X20, X0
	009 Move [X31+48], X8
	010 Move [X31+2], V0
	011 Move X8, [X1+16]
	012 Move V0, [X1]
	013 Add X0, X31, 32
	014 Add X1, X31, 0
	015 Move X2, X31
	016 Move [X31+16], X8
	017 Move [X31], V0
	018 Call Cursor.op_Equality, X0, X1
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {64}
	023 Move W8, [X20+24]
	024 Move W9, [X19+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 Move X8, -53551104
	031 Subtract V0, V0, V1
	032 NotImplemented "Instruction INVALID not yet implemented."
	033 Move V1, [X8+3872]
	034 Subtract V2, V2, V3
	035 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	036 NotImplemented "Instruction INVALID not yet implemented."
	037 Add V0, V0, V3
	038 Add V0, V2, V0
	039 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	040 Add V0, V2, V0
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 Move W8, [X20+44]
	043 Move W9, [X19+44]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W8, [X20+48]
	046 Move W9, [X19+48]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W8, [X20+52]
	049 Move W9, [X19+52]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W8, [X20+56]
	052 Move W9, [X19+56]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move V0, [X20+60]
	055 Move V1, [X19+60]
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 Move W8, [X20+64]
	058 Move W9, [X19+64]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W8, [X20+68]
	061 Move W9, [X19+68]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CSET not yet implemented."
	064 Move W0, W31
	065 Move X20, [X31+80]
	066 Move X19, [X31+88]
	067 Move X30, [X31+64]
	068 Add X31, X31, 96
	069 Return X0

Method: System.Boolean Equals(UnityEngine.UIElements.RareData other)

Disassembly:
	0x03DFCA38 LDR V1, [X19 + 0xC4]
	0x03DFCA3C FCMP S0, S1
	0x03DFCA40 B.NE 0x3DFCA58
	0x03DFCA44 LDR W8, [X20 + 0xC8]
	0x03DFCA48 LDR W9, [X19 + 0xC8]
	0x03DFCA4C CMP W8, W9
	0x03DFCA50 CSET W0, EQ
	0x03DFCA54 B 0x3DFCA5C
	0x03DFCA58 MOV W0, W31
	0x03DFCA5C ADD X31, X31, 0x220
	0x03DFCA60 LDP X20, X19, [X31 + 0x20]
	0x03DFCA64 LDP X29, X30, [X31 + 0x10]
	0x03DFCA68 LDR V8, [X31], #0x30
	0x03DFCA6C RET
	0x03DFCA70 SUB X31, X31, 0x1C0
	0x03DFCA74 STR X29, [X31 + 0x1A0]
	0x03DFCA78 STP X30, X19, [X31 + 0x1B0]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+144], X30
	003 Move [X31+152], X19
	004 Move X19, X0
	005 Add X0, X31, 72
	006 Move W2, 72
	007 Call 0x3EB2AC0
	008 Add X0, X31, 0
	009 Move W2, 72
	010 Move X1, X19
	011 Call 0x3EB2AC0
	012 Add X0, X31, 72
	013 Add X1, X31, 0
	014 Call RareData.op_Equality, X0, X1
	015 Move X30, [X31+144]
	016 Move X19, [X31+152]
	017 And W0, W0, 1
	018 Add X31, X31, 160
	019 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03DFCA7C MOV X19, X0
	0x03DFCA80 ADD X0, X31, 0xD0
	0x03DFCA84 MOVZ W2, 0xD0
	0x03DFCA88 BL 0x3EB1AC0
	0x03DFCA8C ADD X0, X31, 0x0
	0x03DFCA90 MOVZ W2, 0xD0
	0x03DFCA94 MOV X1, X19
	0x03DFCA98 BL 0x3EB1AC0
	0x03DFCA9C ADD X0, X31, 0xD0
	0x03DFCAA0 ADD X1, X31, 0x0
	0x03DFCAA4 BL 0x3DFC77C
	0x03DFCAA8 LDP X30, X19, [X31 + 0x1B0]
	0x03DFCAAC LDR X29, [X31 + 0x1A0]
	0x03DFCAB0 AND W0, W0, 0x1
	0x03DFCAB4 ADD X31, X31, 0x1C0
	0x03DFCAB8 RET
	0x03DFCABC SUB X31, X31, 0x1D0
	0x03DFCAC0 STR X29, [X31 + 0x1A0]
	0x03DFCAC4 STP X30, X21, [X31 + 0x1B0]
	0x03DFCAC8 STP X20, X19, [X31 + 0x1C0]
	0x03DFCACC ADRP X21, 0x5EC000
	0x03DFCAD0 LDRB W8, [X21 + 0x2B3]
	0x03DFCAD4 MOV X20, X1
	0x03DFCAD8 MOV X19, X0
	0x03DFCADC TBNZ X8, 0x0, 0x3DFCAF4
	0x03DFCAE0 ADRP X0, 0x36D000
	0x03DFCAE4 LDR X0, [X0 + 0xCD0]
	0x03DFCAE8 BL 0x1C16CF4
	0x03DFCAEC MOVZ W8, 0x1
	0x03DFCAF0 STRB W8, [X21 + 0x2B3]
	0x03DFCAF4 CBZ X20, 0x3DFCB10
	0x03DFCAF8 ADRP X8, 0x36D000
	0x03DFCAFC LDR X8, [X8 + 0xCD0]
	0x03DFCB00 LDR X9, [X20]
	0x03DFCB04 LDR X8, [X8]
	0x03DFCB08 CMP X9, X8
	0x03DFCB0C B.EQ 0x3DFCB18
	0x03DFCB10 MOV W0, W31
	0x03DFCB14 B 0x3DFCB4C
	0x03DFCB18 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+144], X30
	003 Move [X31+152], X21
	004 Move [X31+160], X20
	005 Move [X31+168], X19
	006 Move X21, 0x5ED000
	007 Move W8, [X21+686]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x36E000
	015 Move X0, [X0+3208]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+686], W8
	019 Compare X20, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x36E000
	022 Move X8, [X8+3208]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X0, X20
	028 Call 0x1C17E08
	029 Move X1, X0
	030 Add X0, X31, 72
	031 Move W2, 72
	032 Call 0x3EB2AC0
	033 Add X0, X31, 0
	034 Move W2, 72
	035 Move X1, X19
	036 Call 0x3EB2AC0
	037 Add X0, X31, 72
	038 Add X1, X31, 0
	039 Call RareData.op_Equality, X0, X1
	040 Move X20, [X31+160]
	041 Move X19, [X31+168]
	042 Move X30, [X31+144]
	043 Move X21, [X31+152]
	044 And W0, W0, 1
	045 Add X31, X31, 176
	046 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03DFCB1C BL 0x1C16E08
	0x03DFCB20 MOV X1, X0
	0x03DFCB24 ADD X0, X31, 0xD0
	0x03DFCB28 MOVZ W2, 0xD0
	0x03DFCB2C BL 0x3EB1B30
	0x03DFCB30 ADD X0, X31, 0x0
	0x03DFCB34 MOVZ W2, 0xD0
	0x03DFCB38 MOV X1, X19
	0x03DFCB3C BL 0x3EB1AC0
	0x03DFCB40 ADD X0, X31, 0xD0
	0x03DFCB44 ADD X1, X31, 0x0
	0x03DFCB48 BL 0x3DFC77C
	0x03DFCB4C LDP X20, X19, [X31 + 0x1C0]
	0x03DFCB50 LDP X30, X21, [X31 + 0x1B0]
	0x03DFCB54 LDR X29, [X31 + 0x1A0]
	0x03DFCB58 AND W0, W0, 0x1
	0x03DFCB5C ADD X31, X31, 0x1D0
	0x03DFCB60 RET
	0x03DFCB64 SUB X31, X31, 0x60
	0x03DFCB68 STP X30, X27, [X31 + 0x10]
	0x03DFCB6C STP X26, X25, [X31 + 0x20]
	0x03DFCB70 STP X24, X23, [X31 + 0x30]
	0x03DFCB74 STP X22, X21, [X31 + 0x40]
	0x03DFCB78 STP X20, X19, [X31 + 0x50]
	0x03DFCB7C LDR V0, [X0]
	0x03DFCB80 MOV X19, X0
	0x03DFCB84 ADD X8, X31, 0x0
	0x03DFCB88 ADD X0, X31, 0x0
	0x03DFCB8C MOV X1, X31
	0x03DFCB90 ORR X22, X8, 0x7
	0x03DFCB94 ORR X21, X8, 0xF
	0x03DFCB98 ORR X20, X8, 0xF
	0x03DFCB9C STR V0, [X31]
	0x03DFCBA0 BL 0x338FE0C
	0x03DFCBA4 MOV W23, W0
	0x03DFCBA8 MOV X0, X22
	0x03DFCBAC MOV X1, X31
	0x03DFCBB0 BL 0x338FE0C
	0x03DFCBB4 MOV W24, W0
	0x03DFCBB8 MOV X0, X21
	0x03DFCBBC MOV X1, X31
	0x03DFCBC0 BL 0x338FE0C
	0x03DFCBC4 MOV W25, W0
	0x03DFCBC8 MOV X0, X20
	0x03DFCBCC MOV X1, X31
	0x03DFCBD0 BL 0x338FE0C
	0x03DFCBD4 EOR W8, W23, W24, 0x2
	0x03DFCBD8 EOR W8, W8, W25, 0x2
	0x03DFCBDC EOR W23, W8, W0, 0x1
	0x03DFCBE0 ADD X0, X19, 0x10
	0x03DFCBE4 MOV X1, X31
	0x03DFCBE8 BL 0x3DE2954
	0x03DFCBEC MOVZ W26, 0x18D
	0x03DFCBF0 MUL W8, W23, W26
	0x03DFCBF4 EOR W23, W8, W0, 0x0
	0x03DFCBF8 ADD X0, X19, 0x30
	0x03DFCBFC MOV X1, X31
	0x03DFCC00 BL 0x3CE93A8
	0x03DFCC04 MUL W8, W23, W26
	0x03DFCC08 EOR W23, W8, W0, 0x0
	0x03DFCC0C ADD X0, X19, 0x3C
	0x03DFCC10 MOV X1, X31
	0x03DFCC14 BL 0x3CE93A8
	0x03DFCC18 MUL W8, W23, W26

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X1, X31
	011 Move X19, X0
	012 Call Cursor.GetHashCode, X0
	013 Move W8, [X19+24]
	014 NotImplemented "Instruction LDUR not yet implemented."
	015 Move W24, 397
	016 Add X9, X31, 0
	017 Multiply W10, W0, W24
	018 Add X0, X31, 0
	019 Move X1, X31
	020 Or X20, X9, 7
	021 Or X21, X9, 15
	022 Or X22, X9, 15
	023 Xor W25, W10, W8
	024 Move [X31], V0
	025 Call Single.GetHashCode, X0
	026 Move W23, W0
	027 Move X0, X20
	028 Move X1, X31
	029 Call Single.GetHashCode, X0
	030 Move W20, W0
	031 Move X0, X21
	032 Move X1, X31
	033 Call Single.GetHashCode, X0
	034 Move W21, W0
	035 Move X0, X22
	036 Move X1, X31
	037 Call Single.GetHashCode, X0
	038 Multiply W8, W25, W24
	039 Xor W8, W23, W8
	040 Xor W8, W8, W20
	041 Move W9, [X19+44]
	042 Move W10, [X19+48]
	043 Xor W8, W8, W21
	044 Xor W8, W8, W0
	045 Multiply W8, W8, W24
	046 Move W11, [X19+52]
	047 Move W12, [X19+56]
	048 Xor W8, W8, W9
	049 Multiply W8, W8, W24
	050 Xor W8, W8, W10
	051 Multiply W8, W8, W24
	052 Xor W8, W8, W11
	053 Multiply W8, W8, W24
	054 Add X0, X19, 60
	055 Move X1, X31
	056 Xor W20, W8, W12
	057 Call Single.GetHashCode, X0
	058 Move W9, [X19+64]
	059 Move W10, [X19+68]
	060 Multiply W8, W20, W24
	061 Xor W8, W8, W0
	062 Multiply W8, W8, W24
	063 Xor W8, W8, W9
	064 Multiply W8, W8, W24
	065 Move X20, [X31+64]
	066 Move X19, [X31+72]
	067 Move X22, [X31+48]
	068 Move X21, [X31+56]
	069 Move X24, [X31+32]
	070 Move X23, [X31+40]
	071 Move X30, [X31+16]
	072 Move X25, [X31+24]
	073 Xor W0, W8, W10
	074 Add X31, X31, 80
	075 Return X0

