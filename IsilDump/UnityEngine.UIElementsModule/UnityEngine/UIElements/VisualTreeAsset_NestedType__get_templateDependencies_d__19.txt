Type: UnityEngine.UIElements.VisualTreeAsset/<get_templateDependencies>d__19

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x03D16780 ADRP X0, 0x406000
	0x03D16784 LDR X0, [X0 + 0x128]
	0x03D16788 BL 0x1C16CF4
	0x03D1678C ADRP X0, 0x44C000
	0x03D16790 LDR X0, [X0 + 0xAA8]
	0x03D16794 BL 0x1C16CF4
	0x03D16798 MOVZ W8, 0x1
	0x03D1679C STRB W8, [X20 + 0x8FD]
	0x03D167A0 CBZ X19, 0x3D16A34
	0x03D167A4 ADRP X20, 0x44C000
	0x03D167A8 LDR X20, [X20 + 0xAA8]
	0x03D167AC MOV X0, X19
	0x03D167B0 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03D167B4 BL 0x3DE7EEC
	0x03D167B8 LDR X1, [X20]
	0x03D167BC MOV X19, X0
	0x03D167C0 MOVZ W0, 0x1
	0x03D167C4 BL 0x266EACC
	0x03D167C8 CBZ X19, 0x3D16A7C
	0x03D167CC ADRP X22, 0x406000
	0x03D167D0 LDR X8, [X19]
	0x03D167D4 LDR X22, [X22 + 0x128]
	0x03D167D8 MOV X20, X0
	0x03D167DC LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move W8, [X0+16]
	002 Add W8, W8, 3
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W9, 1
	005 NotImplemented "Instruction LSLV not yet implemented."
	006 Move W9, 49
	007 And W31, W8, W9
	008 Call <get_templateDependencies>d__19.<>m__Finally1, X0
	009 Return 
	010 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x03D167E0 LDR X1, [X22]
	0x03D167E4 CBZ X9, 0x3D16808
	0x03D167E8 LDR X10, [X8 + 0xB0]
	0x03D167EC ADD X10, X10, 0x8
	0x03D167F0 LDUR X11, [X10 - 0x8]
	0x03D167F4 CMP X11, X1
	0x03D167F8 B.EQ 0x3D16818
	0x03D167FC SUBS X9, X9, 0x1
	0x03D16800 ADD X10, X10, 0x10
	0x03D16804 B.NE 0x3D167F0
	0x03D16808 MOVZ W2, 0x28
	0x03D1680C MOV X0, X19
	0x03D16810 BL 0x1C5C788
	0x03D16814 B 0x3D16828
	0x03D16818 LDR W9, [X10]
	0x03D1681C ADD W9, W9, 0x28
	0x03D16820 ADD X8, X8, W9, 0x4, SXTW
	0x03D16824 ADD X0, X8, 0x138
	0x03D16828 LDP X8, X2, [X0]
	0x03D1682C MOV X0, X19
	0x03D16830 MOV X1, X20
	0x03D16834 BLR X8
	0x03D16838 FMOV S0, W31
	0x03D1683C MOV X0, X31
	0x03D16840 BL 0x3DFED98
	0x03D16844 LDR X9, [X19]
	0x03D16848 LDR X8, [X22]
	0x03D1684C MOV X20, X0
	0x03D16850 AND X21, X1, 0x0
	0x03D16854 LDRH W10, [X9 + 0x12E]
	0x03D16858 CBZ X10, 0x3D1687C
	0x03D1685C LDR X11, [X9 + 0xB0]
	0x03D16860 ADD X11, X11, 0x8
	0x03D16864 LDUR X12, [X11 - 0x8]
	0x03D16868 CMP X12, X8
	0x03D1686C B.EQ 0x3D16890
	0x03D16870 SUBS X10, X10, 0x1
	0x03D16874 ADD X11, X11, 0x10
	0x03D16878 B.NE 0x3D16864
	0x03D1687C MOVZ W2, 0x19
	0x03D16880 MOV X0, X19
	0x03D16884 MOV X1, X8
	0x03D16888 BL 0x1C5C788
	0x03D1688C B 0x3D168A0
	0x03D16890 LDR W8, [X11]
	0x03D16894 ADD W8, W8, 0x19
	0x03D16898 ADD X8, X9, W8, 0x4, SXTW
	0x03D1689C ADD X0, X8, 0x138
	0x03D168A0 LDP X8, X3, [X0]
	0x03D168A4 MOV X0, X19
	0x03D168A8 MOV X1, X20
	0x03D168AC MOV X2, X21
	0x03D168B0 BLR X8
	0x03D168B4 FMOV S0, W31
	0x03D168B8 MOV X0, X31
	0x03D168BC BL 0x3DFED98
	0x03D168C0 LDR X9, [X19]
	0x03D168C4 LDR X8, [X22]
	0x03D168C8 MOV X20, X0
	0x03D168CC AND X21, X1, 0x0
	0x03D168D0 LDRH W10, [X9 + 0x12E]
	0x03D168D4 CBZ X10, 0x3D168F8
	0x03D168D8 LDR X11, [X9 + 0xB0]
	0x03D168DC ADD X11, X11, 0x8
	0x03D168E0 LDUR X12, [X11 - 0x8]
	0x03D168E4 CMP X12, X8
	0x03D168E8 B.EQ 0x3D1690C
	0x03D168EC SUBS X10, X10, 0x1
	0x03D168F0 ADD X11, X11, 0x10
	0x03D168F4 B.NE 0x3D168E0
	0x03D168F8 MOVZ W2, 0x2D
	0x03D168FC MOV X0, X19
	0x03D16900 MOV X1, X8
	0x03D16904 BL 0x1C5C788
	0x03D16908 B 0x3D1691C
	0x03D1690C LDR W8, [X11]
	0x03D16910 ADD W8, W8, 0x2D
	0x03D16914 ADD X8, X9, W8, 0x4, SXTW
	0x03D16918 ADD X0, X8, 0x138
	0x03D1691C LDP X8, X3, [X0]
	0x03D16920 MOV X0, X19
	0x03D16924 MOV X1, X20
	0x03D16928 MOV X2, X21
	0x03D1692C BLR X8
	0x03D16930 FMOV S0, W31
	0x03D16934 MOV X0, X31
	0x03D16938 BL 0x3DFED98
	0x03D1693C LDR X9, [X19]
	0x03D16940 LDR X8, [X22]
	0x03D16944 MOV X20, X0
	0x03D16948 AND X21, X1, 0x0
	0x03D1694C LDRH W10, [X9 + 0x12E]
	0x03D16950 CBZ X10, 0x3D16974
	0x03D16954 LDR X11, [X9 + 0xB0]
	0x03D16958 ADD X11, X11, 0x8
	0x03D1695C LDUR X12, [X11 - 0x8]
	0x03D16960 CMP X12, X8
	0x03D16964 B.EQ 0x3D16988
	0x03D16968 SUBS X10, X10, 0x1
	0x03D1696C ADD X11, X11, 0x10
	0x03D16970 B.NE 0x3D1695C
	0x03D16974 MOVZ W2, 0x29
	0x03D16978 MOV X0, X19
	0x03D1697C MOV X1, X8
	0x03D16980 BL 0x1C5C788
	0x03D16984 B 0x3D16998
	0x03D16988 LDR W8, [X11]
	0x03D1698C ADD W8, W8, 0x29
	0x03D16990 ADD X8, X9, W8, 0x4, SXTW
	0x03D16994 ADD X0, X8, 0x138
	0x03D16998 LDP X8, X3, [X0]
	0x03D1699C MOV X0, X19
	0x03D169A0 MOV X1, X20
	0x03D169A4 MOV X2, X21
	0x03D169A8 BLR X8
	0x03D169AC FMOV S0, W31
	0x03D169B0 MOV X0, X31
	0x03D169B4 BL 0x3DFED98
	0x03D169B8 LDR X9, [X19]
	0x03D169BC LDR X8, [X22]
	0x03D169C0 MOV X20, X0
	0x03D169C4 MOV X21, X1
	0x03D169C8 LDRH W10, [X9 + 0x12E]
	0x03D169CC CBZ X10, 0x3D169F0
	0x03D169D0 LDR X11, [X9 + 0xB0]
	0x03D169D4 ADD X11, X11, 0x8
	0x03D169D8 LDUR X12, [X11 - 0x8]
	0x03D169DC CMP X12, X8
	0x03D169E0 B.EQ 0x3D16A04
	0x03D169E4 SUBS X10, X10, 0x1
	0x03D169E8 ADD X11, X11, 0x10
	0x03D169EC B.NE 0x3D169D8
	0x03D169F0 MOVZ W2, 0xE
	0x03D169F4 MOV X0, X19
	0x03D169F8 MOV X1, X8
	0x03D169FC BL 0x1C5C788
	0x03D16A00 B 0x3D16A14
	0x03D16A04 LDR W8, [X11]
	0x03D16A08 ADD W8, W8, 0xE
	0x03D16A0C ADD X8, X9, W8, 0x4, SXTW
	0x03D16A10 ADD X0, X8, 0x138
	0x03D16A14 LDP X4, X3, [X0]
	0x03D16A18 AND X2, X21, 0x0
	0x03D16A1C MOV X0, X19
	0x03D16A20 MOV X1, X20
	0x03D16A24 LDP X20, X19, [X31 + 0x20]
	0x03D16A28 LDP X22, X21, [X31 + 0x10]
	0x03D16A2C LDR X30, [X31], #0x30
	0x03D16A30 BR X4
	0x03D16A34 ADRP X0, 0x3E2000
	0x03D16A38 LDR X0, [X0 + 0x528]
	0x03D16A3C BL 0x1C16D08
	0x03D16A40 BL 0x1C16F10
	0x03D16A44 MOV X19, X0
	0x03D16A48 ADRP X0, 0x44D000
	0x03D16A4C LDR X0, [X0 + 0xF20]
	0x03D16A50 BL 0x1C16D08
	0x03D16A54 MOV X1, X0
	0x03D16A58 MOV X0, X19
	0x03D16A5C MOV X2, X31
	0x03D16A60 BL 0x330E100
	0x03D16A64 ADRP X0, 0x44D000
	0x03D16A68 LDR X0, [X0 + 0xF28]
	0x03D16A6C BL 0x1C16D08
	0x03D16A70 MOV X1, X0
	0x03D16A74 MOV X0, X19
	0x03D16A78 BL 0x1C16DEC
	0x03D16A7C BL 0x1C16F20
	0x03D16A80 STP X30, X21, [X31 - 0x20]!
	0x03D16A84 STP X20, X19, [X31 + 0x10]
	0x03D16A88 ADRP X21, 0x6D1000
	0x03D16A8C LDRB W8, [X21 + 0x8FE]
	0x03D16A90 MOV X19, X1
	0x03D16A94 MOV X20, X0
	0x03D16A98 TBNZ X8, 0x0, 0x3D16AB0
	0x03D16A9C ADRP X0, 0x44D000
	0x03D16AA0 LDR X0, [X0 + 0xF30]
	0x03D16AA4 BL 0x1C16CF4
	0x03D16AA8 MOVZ W8, 0x1
	0x03D16AAC STRB W8, [X21 + 0x8FE]
	0x03D16AB0 CBZ X19, 0x3D16AFC
	0x03D16AB4 ADRP X10, 0x44D000
	0x03D16AB8 LDR X8, [X19]
	0x03D16ABC LDR X10, [X10 + 0xF30]
	0x03D16AC0 LDRH W9, [X8 + 0x12E]
	0x03D16AC4 LDR X1, [X10]
	0x03D16AC8 CBZ X9, 0x3D16AEC
	0x03D16ACC LDR X10, [X8 + 0xB0]
	0x03D16AD0 ADD X10, X10, 0x8
	0x03D16AD4 LDUR X11, [X10 - 0x8]
	0x03D16AD8 CMP X11, X1
	0x03D16ADC B.EQ 0x3D16B08
	0x03D16AE0 SUBS X9, X9, 0x1
	0x03D16AE4 ADD X10, X10, 0x10
	0x03D16AE8 B.NE 0x3D16AD4
	0x03D16AEC MOV X0, X19
	0x03D16AF0 MOV W2, W31
	0x03D16AF4 BL 0x1C5C788
	0x03D16AF8 B 0x3D16B14
	0x03D16AFC LDP X20, X19, [X31 + 0x10]
	0x03D16B00 LDP X30, X21, [X31], #0x20
	0x03D16B04 RET
	0x03D16B08 LDRSW X9, [X10]
	0x03D16B0C ADD X8, X8, X9, 0x4, LSL
	0x03D16B10 ADD X0, X8, 0x138
	0x03D16B14 LDP X3, X2, [X0]
	0x03D16B18 MOV X0, X19
	0x03D16B1C MOV X1, X20
	0x03D16B20 LDP X20, X19, [X31 + 0x10]
	0x03D16B24 LDP X30, X21, [X31], #0x20
	0x03D16B28 BR X3
	0x03D16B2C STR X30, [X31 - 0x20]!
	0x03D16B30 STP X20, X19, [X31 + 0x10]
	0x03D16B34 ADRP X20, 0x6D1000
	0x03D16B38 LDRB W8, [X20 + 0x8FF]
	0x03D16B3C MOV X19, X1
	0x03D16B40 TBNZ X8, 0x0, 0x3D16B58
	0x03D16B44 ADRP X0, 0x44D000
	0x03D16B48 LDR X0, [X0 + 0xF30]
	0x03D16B4C BL 0x1C16CF4
	0x03D16B50 MOVZ W8, 0x1
	0x03D16B54 STRB W8, [X20 + 0x8FF]
	0x03D16B58 CBZ X19, 0x3D16BA4
	0x03D16B5C ADRP X10, 0x44D000
	0x03D16B60 LDR X8, [X19]
	0x03D16B64 LDR X10, [X10 + 0xF30]
	0x03D16B68 LDRH W9, [X8 + 0x12E]
	0x03D16B6C LDR X1, [X10]
	0x03D16B70 CBZ X9, 0x3D16B94
	0x03D16B74 LDR X10, [X8 + 0xB0]
	0x03D16B78 ADD X10, X10, 0x8
	0x03D16B7C LDUR X11, [X10 - 0x8]
	0x03D16B80 CMP X11, X1
	0x03D16B84 B.EQ 0x3D16BB0
	0x03D16B88 SUBS X9, X9, 0x1
	0x03D16B8C ADD X10, X10, 0x10
	0x03D16B90 B.NE 0x3D16B7C
	0x03D16B94 MOV X0, X19
	0x03D16B98 MOV W2, W31
	0x03D16B9C BL 0x1C5C788
	0x03D16BA0 B 0x3D16BBC
	0x03D16BA4 LDP X20, X19, [X31 + 0x10]
	0x03D16BA8 LDR X30, [X31], #0x20
	0x03D16BAC RET
	0x03D16BB0 LDRSW X9, [X10]
	0x03D16BB4 ADD X8, X8, X9, 0x4, LSL
	0x03D16BB8 ADD X0, X8, 0x138
	0x03D16BBC LDP X3, X2, [X0]
	0x03D16BC0 MOV X0, X19
	0x03D16BC4 LDP X20, X19, [X31 + 0x10]
	0x03D16BC8 MOV X1, X31
	0x03D16BCC LDR X30, [X31], #0x20
	0x03D16BD0 BR X3
	0x03D16BD4 SUB X31, X31, 0x40
	0x03D16BD8 STR X30, [X31 + 0x20]
	0x03D16BDC STP X20, X19, [X31 + 0x30]
	0x03D16BE0 ADRP X20, 0x6D1000
	0x03D16BE4 LDRB W8, [X20 + 0x900]
	0x03D16BE8 MOV X19, X0
	0x03D16BEC STR D1, [X31 + 0x10]
	0x03D16BF0 STR D0, [X31]
	0x03D16BF4 TBNZ X8, 0x0, 0x3D16C0C
	0x03D16BF8 ADRP X0, 0x405000
	0x03D16BFC LDR X0, [X0 + 0x898]
	0x03D16C00 BL 0x1C16CF4
	0x03D16C04 MOVZ W8, 0x1
	0x03D16C08 STRB W8, [X20 + 0x900]
	0x03D16C0C CBZ X19, 0x3D16C74
	0x03D16C10 ADRP X20, 0x405000
	0x03D16C14 LDR X20, [X20 + 0x898]
	0x03D16C18 MOV X0, X19
	0x03D16C1C MOV X1, X31
	0x03D16C20 BL 0x3DEE078
	0x03D16C24 LDR X8, [X20]
	0x03D16C28 MOV X19, X0
	0x03D16C2C LDR W9, [X8 + 0xE0]
	0x03D16C30 CBNZ W9, 0x3D16C3C
	0x03D16C34 MOV X0, X8
	0x03D16C38 BL 0x1C16DFC
	0x03D16C3C LDR V0, [X19]
	0x03D16C40 LDR V3, [X31]
	0x03D16C44 LDR V1, [X19 + 0x10]
	0x03D16C48 LDR V2, [X19 + 0x30]
	0x03D16C4C LDP X20, X19, [X31 + 0x30]
	0x00000000 INVALID
	0x03D16C54 LDR V3, [X31 + 0x1]
	0x03D16C58 LDR X30, [X31 + 0x20]
	0x00000000 INVALID
	0x03D16C60 FADD V0.2S, V0.2S, V1.2S
	0x03D16C64 FADD V0.2S, V2.2S, V0.2S
	0x03D16C68 MOV S1, V0.S[1]
	0x03D16C6C ADD X31, X31, 0x40
	0x03D16C70 RET
	0x03D16C74 ADRP X0, 0x3E2000
	0x03D16C78 LDR X0, [X0 + 0x528]
	0x03D16C7C BL 0x1C16D08
	0x03D16C80 BL 0x1C16F10
	0x03D16C84 MOV X19, X0
	0x03D16C88 ADRP X0, 0x44D000
	0x03D16C8C LDR X0, [X0 + 0xF38]
	0x03D16C90 BL 0x1C16D08
	0x03D16C94 MOV X1, X0
	0x03D16C98 MOV X0, X19
	0x03D16C9C MOV X2, X31
	0x03D16CA0 BL 0x330E100
	0x03D16CA4 ADRP X0, 0x44D000
	0x03D16CA8 LDR X0, [X0 + 0xF40]
	0x03D16CAC BL 0x1C16D08
	0x03D16CB0 MOV X1, X0
	0x03D16CB4 MOV X0, X19
	0x03D16CB8 BL 0x1C16DEC
	0x03D16CBC SUB X31, X31, 0x40
	0x03D16CC0 STR X30, [X31 + 0x20]
	0x03D16CC4 STP X20, X19, [X31 + 0x30]
	0x03D16CC8 ADRP X20, 0x6D1000
	0x03D16CCC LDRB W8, [X20 + 0x901]
	0x03D16CD0 MOV X19, X0
	0x03D16CD4 STR D1, [X31 + 0x10]
	0x03D16CD8 STR D0, [X31]
	0x03D16CDC TBNZ X8, 0x0, 0x3D16CF4

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], D8
	003 Move [X31+120], X30
	004 Move [X31+128], X22
	005 Move [X31+136], X21
	006 Move [X31+144], X20
	007 Move [X31+152], X19
	008 Move X20, 0x6D2000
	009 Move W8, [X20+2286]
	010 Move X19, X0
	011 Move [X31+104], X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {60}
	016 Move X0, 0x44E000
	017 Move X0, [X0+3648]
	018 Call 0x1C17CF4
	019 Move X0, 0x44E000
	020 Move X0, [X0+3656]
	021 Call 0x1C17CF4
	022 Move X0, 0x40A000
	023 Move X0, [X0+1480]
	024 Call 0x1C17CF4
	025 Move X0, 0x44E000
	026 Move X0, [X0+3664]
	027 Call 0x1C17CF4
	028 Move X0, 0x44E000
	029 Move X0, [X0+3672]
	030 Call 0x1C17CF4
	031 Move X0, 0x44E000
	032 Move X0, [X0+3680]
	033 Call 0x1C17CF4
	034 Move X0, 0x44E000
	035 Move X0, [X0+3688]
	036 Call 0x1C17CF4
	037 Move X0, 0x44E000
	038 Move X0, [X0+3696]
	039 Call 0x1C17CF4
	040 Move X0, 0x44E000
	041 Move X0, [X0+3704]
	042 Call 0x1C17CF4
	043 Move X0, 0x3DE000
	044 Move X0, [X0+1432]
	045 Call 0x1C17CF4
	046 Move X0, 0x408000
	047 Move X0, [X0+3336]
	048 Call 0x1C17CF4
	049 Move X0, 0x3DE000
	050 Move X0, [X0+1728]
	051 Call 0x1C17CF4
	052 Move X0, 0x44E000
	053 Move X0, [X0+3712]
	054 Call 0x1C17CF4
	055 Move X0, 0x44E000
	056 Move X0, [X0+3720]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X20+2286], W8
	060 Add X8, X31, 104
	061 Move [X31+96], X8
	062 Move W8, [X19+16]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Compare W8, 0
	066 JumpIfNotEqual {127}
	067 Move X8, [X19+40]
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W9, TEMP
	071 Move [X19+16], W9
	072 Compare X8, 0
	073 JumpIfEqual {124}
	074 Move X8, [X8+32]
	075 Compare X8, 0
	076 JumpIfEqual {298}
	077 Move W8, [X8+24]
	078 Compare W8, 0
	079 JumpIfEqual {298}
	080 Move X8, 0x44E000
	081 Move X8, [X8+3688]
	082 Move X0, [X8]
	083 Call 0x1C17F10
	084 Move X8, 0x44E000
	085 Move X8, [X8+3680]
	086 Move X19, X0
	087 Move X1, [X8]
	088 Call HashSet`1<Object>..ctor, X0
	089 Move X9, [X31+104]
	090 Move X8, [X9+40]
	091 Move [X9+48], X19
	092 Compare X8, 0
	093 JumpIfEqual {125}
	094 Move X0, [X8+32]
	095 Compare X0, 0
	096 JumpIfEqual {126}
	097 Move X8, 0x44E000
	098 Move X8, [X8+3696]
	099 Move X1, [X8]
	100 Add X8, X31, 8
	101 Call List`1<UsingEntry>.GetEnumerator, X0
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 Move X8, [X31+40]
	105 Move X19, [X31+104]
	106 Move TEMP, 2
	107 Not TEMP
	108 Move W9, TEMP
	109 Move [X31+48], V0
	110 Move [X31+56], V1
	111 Move [X31+80], X8
	112 Move [X19+88], X8
	113 Move [X19+72], V1
	114 Move [X19+56], V0
	115 Move [X19+16], W9
	116 Move TEMP, 2
	117 Not TEMP
	118 Move W8, TEMP
	119 Move [X19+16], W8
	120 Move TEMP, 2
	121 Not TEMP
	122 Move W8, TEMP
	123 Move [X19+16], W8
	124 Call 0x1C17F20
	125 Call 0x1C17F20
	126 Call 0x1C17F20
	127 Move W8, W31
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 Move X19, [X0+88]
	130 Move X22, 0x3DE000
	131 Move X22, [X22+1432]
	132 Move [X0+6], V0
	133 Move [X0+112], X19
	134 Move X0, [X22]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X0, X19
	140 Move X1, X31
	141 Move X2, X31
	142 Call Object.op_Inequality, X0, X1
	143 Move X21, 0x44E000
	144 Move X8, [X31+104]
	145 Move X21, [X21+3672]
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {161}
	150 Move X0, [X8+48]
	151 Compare X0, 0
	152 JumpIfEqual {307}
	153 Move X1, [X8+112]
	154 Move X2, [X21]
	155 Call HashSet`1<Object>.Contains, X0, X1
	156 Move X8, [X31+104]
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {270}
	161 Move X0, [X8+104]
	162 Move X1, X31
	163 Call String.IsNullOrEmpty, X0
	164 Move X19, [X31+104]
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {249}
	169 Move X8, 0x3DE000
	170 Move X8, [X8+1728]
	171 Move X0, [X8]
	172 Move X8, 0x44E000
	173 Move X8, [X8+3712]
	174 Move X19, [X19+104]
	175 Move W9, [X0+224]
	176 Move X20, [X8]
	177 Compare W9, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move X0, X20
	181 Move X1, X31
	182 Call Type.GetTypeFromHandle, X0
	183 Move X8, 0x40A000
	184 Move X8, [X8+1480]
	185 Move X20, X0
	186 Move X0, [X8]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {191}
	190 Call 0x1C17DFC
	191 Move X0, X31
	192 Call GUIUtility.get_pixelsPerPoint
	193 Move X8, 0x408000
	194 Move X8, [X8+3336]
	195 Move V8, V0
	196 Move X0, [X8]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move X0, X19
	202 Move X1, X20
	203 Move V0, V8
	204 Move X2, X31
	205 Call Panel.LoadResource, X0, X1, V0
	206 Compare X0, 0
	207 JumpIfEqual {215}
	208 Move X8, 0x44E000
	209 Move X8, [X8+3720]
	210 Move X9, [X0]
	211 Move X8, [X8]
	212 Move W11, [X9+304]
	213 Move W10, [X8+304]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X19, X31
	216 Move X9, [X9+200]
	217 Add X9, X9, X10
	218 NotImplemented "Instruction LDUR not yet implemented."
	219 NotImplemented "Instruction CMP not yet implemented."
	220 NotImplemented "Instruction CSEL not yet implemented."
	221 Move X8, [X31+104]
	222 Move [X8+120], X19
	223 Move X0, [X22]
	224 Move W8, [X0+224]
	225 Compare W8, 0
	226 JumpIfNotEqual {228}
	227 Call 0x1C17DFC
	228 Move X0, X19
	229 Move X1, X31
	230 Move X2, X31
	231 Call Object.op_Inequality, X0, X1
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {247}
	236 Move X8, [X31+104]
	237 Move X0, [X8+48]
	238 Compare X0, 0
	239 JumpIfEqual {308}
	240 Move X1, [X8+112]
	241 Move X2, [X21]
	242 Call HashSet`1<Object>.Contains, X0, X1
	243 Move TEMP, X0
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfNotEqual {283}
	247 Move X19, [X31+104]
	248 Move [X19+120], X31
	249 Move [X19+96], X31
	250 Move [X19+104], X31
	251 Move [X19+112], X31
	252 Move X8, 0x44E000
	253 Move X8, [X8+3648]
	254 Add X0, X19, 56
	255 Move X1, [X8]
	256 Call Enumerator<UsingEntry>.MoveNext, X0
	257 Move W8, W0
	258 Move X0, [X31+104]
	259 Move TEMP, X8
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfEqual {128}
	263 Call <get_templateDependencies>d__19.<>m__Finally1, X0
	264 Move X9, [X31+104]
	265 Move W8, W31
	266 NotImplemented "Instruction MOVI not yet implemented."
	267 Move [X9+88], X31
	268 Move [X9+72], V0
	269 Move [X9+56], V0
	270 Move X0, [X8+48]
	271 Compare X0, 0
	272 JumpIfEqual {309}
	273 Move X1, [X8+112]
	274 Move X8, 0x44E000
	275 Move X8, [X8+3664]
	276 Move X2, [X8]
	277 Call HashSet`1<Object>.Add, X0, X1
	278 Move X9, [X31+104]
	279 Move W8, 1
	280 Move X10, [X9+112]
	281 Move [X9+16], W8
	282 Move [X9+24], X10
	283 Move X8, [X31+104]
	284 Move X0, [X8+48]
	285 Compare X0, 0
	286 JumpIfEqual {310}
	287 Move X1, [X8+112]
	288 Move X8, 0x44E000
	289 Move X8, [X8+3664]
	290 Move X2, [X8]
	291 Call HashSet`1<Object>.Add, X0, X1
	292 Move X8, [X31+104]
	293 Move W10, 2
	294 Move X9, [X8+120]
	295 Move [X8+16], W10
	296 Move [X8+24], X9
	297 Move W8, 1
	298 Move X20, [X31+144]
	299 Move X19, [X31+152]
	300 Move X22, [X31+128]
	301 Move X21, [X31+136]
	302 Move X30, [X31+120]
	303 Move V8, [X31+112]
	304 Move W0, W8
	305 Add X31, X31, 160
	306 Return X0
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F20
	310 Call 0x1C17F20
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Call 0x3EB2AD0
	313 Move X19, [X0]
	314 Move [X31+88], X19
	315 Call 0x3EB2AE0
	316 Compare X19, 0
	317 JumpIfEqual {127}
	318 Add X8, X31, 88
	319 Add X0, X8, 8
	320 Call 0x1C10C94
	321 Move X0, X19
	322 Call 0x1C17F18
	323 Compare X19, 0
	324 JumpIfNotEqual {326}
	325 Call 0x1D2D690
	326 Move X0, [X31+104]
	327 Move W8, [X0+16]
	328 Add W8, W8, 3
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Move W9, 1
	331 NotImplemented "Instruction LSLV not yet implemented."
	332 Move W9, 49
	333 And W31, W8, W9
	334 Call <get_templateDependencies>d__19.<>m__Finally1, X0
	335 Move X0, X19
	336 Call 0x1C17F18
	337 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x03D16CE0 ADRP X0, 0x405000
	0x03D16CE4 LDR X0, [X0 + 0x898]
	0x03D16CE8 BL 0x1C16CF4
	0x03D16CEC MOVZ W8, 0x1
	0x03D16CF0 STRB W8, [X20 + 0x901]
	0x03D16CF4 CBZ X19, 0x3D16D5C
	0x03D16CF8 ADRP X20, 0x405000
	0x03D16CFC LDR X20, [X20 + 0x898]
	0x03D16D00 MOV X0, X19
	0x03D16D04 MOV X1, X31
	0x03D16D08 BL 0x3DEDBEC
	0x03D16D0C LDR X8, [X20]
	0x03D16D10 MOV X19, X0
	0x03D16D14 LDR W9, [X8 + 0xE0]
	0x03D16D18 CBNZ W9, 0x3D16D24
	0x03D16D1C MOV X0, X8
	0x03D16D20 BL 0x1C16DFC
	0x03D16D24 LDR V0, [X19]
	0x03D16D28 LDR V3, [X31]
	0x03D16D2C LDR V1, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6D2000
	006 Move X20, 0x44E000
	007 Move W8, [X21+2287]
	008 Move X20, [X20+3728]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x44E000
	015 Move X0, [X0+3728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2287], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 56
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<UsingEntry>.Dispose, X0
	030 Return 

Method: UnityEngine.UIElements.VisualTreeAsset System.Collections.Generic.IEnumerator<UnityEngine.UIElements.VisualTreeAsset>.get_Current()

Disassembly:
	0x03D16D30 LDR V2, [X19 + 0x30]
	0x03D16D34 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x00000000 INVALID
	0x03D16D3C LDR V3, [X31 + 0x1]
	0x03D16D40 LDR X30, [X31 + 0x20]
	0x00000000 INVALID
	0x03D16D48 FADD V0.2S, V0.2S, V1.2S
	0x03D16D4C FADD V0.2S, V2.2S, V0.2S
	0x03D16D50 MOV S1, V0.S[1]
	0x03D16D54 ADD X31, X31, 0x40
	0x03D16D58 RET
	0x03D16D5C ADRP X0, 0x3E2000
	0x03D16D60 LDR X0, [X0 + 0x528]
	0x03D16D64 BL 0x1C16D08
	0x03D16D68 BL 0x1C16F10
	0x03D16D6C MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x3DE000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x44E000
	011 Move X0, [X0+3736]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03D16D70 ADRP X0, 0x44D000
	0x03D16D74 LDR X0, [X0 + 0xF38]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<UnityEngine.UIElements.VisualTreeAsset> System.Collections.Generic.IEnumerable<UnityEngine.UIElements.VisualTreeAsset>.GetEnumerator()

Disassembly:
	0x03D16D78 BL 0x1C16D08
	0x03D16D7C MOV X1, X0
	0x03D16D80 MOV X0, X19
	0x03D16D84 MOV X2, X31
	0x03D16D88 BL 0x330E100
	0x03D16D8C ADRP X0, 0x44D000
	0x03D16D90 LDR X0, [X0 + 0xF48]
	0x03D16D94 BL 0x1C16D08
	0x03D16D98 MOV X1, X0
	0x03D16D9C MOV X0, X19
	0x03D16DA0 BL 0x1C16DEC
	0x03D16DA4 STP D11, D10, [X31 - 0x40]!
	0x03D16DA8 STP D9, D8, [X31 + 0x10]
	0x03D16DAC STR X30, [X31 + 0x20]
	0x03D16DB0 STP X20, X19, [X31 + 0x30]
	0x03D16DB4 ADRP X20, 0x6D1000
	0x03D16DB8 LDRB W8, [X20 + 0x902]
	0x03D16DBC MOV V8.16B, V3.16B
	0x03D16DC0 MOV V9.16B, V2.16B
	0x03D16DC4 MOV V10.16B, V1.16B
	0x03D16DC8 MOV V11.16B, V0.16B
	0x03D16DCC MOV X19, X0
	0x03D16DD0 TBNZ X8, 0x0, 0x3D16DE8
	0x03D16DD4 ADRP X0, 0x405000
	0x03D16DD8 LDR X0, [X0 + 0x898]
	0x03D16DDC BL 0x1C16CF4
	0x03D16DE0 MOVZ W8, 0x1
	0x03D16DE4 STRB W8, [X20 + 0x902]
	0x03D16DE8 CBZ X19, 0x3D16E44
	0x03D16DEC ADRP X20, 0x405000
	0x03D16DF0 LDR X20, [X20 + 0x898]
	0x03D16DF4 MOV X0, X19
	0x03D16DF8 MOV X1, X31
	0x03D16DFC BL 0x3DEE078
	0x03D16E00 LDR X8, [X20]
	0x03D16E04 MOV X19, X0
	0x03D16E08 LDR W9, [X8 + 0xE0]
	0x03D16E0C CBNZ W9, 0x3D16E18
	0x03D16E10 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6D2000
	005 Move W8, [X20+2288]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x44E000
	012 Move X0, [X0+3744]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2288], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X8, 0x44E000
	024 Move X8, [X8+3744]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call Object..ctor, X0
	030 Move X0, X31
	031 Move [X20+16], W31
	032 Call Environment.get_CurrentManagedThreadId
	033 Move [X20+32], W0
	034 Move X8, [X19+40]
	035 Move X19, X20
	036 Move [X20+40], X8
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03D16E14 BL 0x1C16DFC

ISIL:
	001 Call <get_templateDependencies>d__19.System.Collections.Generic.IEnumerable<UnityEngine.UIElements.VisualTreeAsset>.GetEnumerator, X0
	002 Return X0

