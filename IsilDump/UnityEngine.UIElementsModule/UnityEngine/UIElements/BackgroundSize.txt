Type: UnityEngine.UIElements.BackgroundSize

Method: UnityEngine.UIElements.BackgroundSizeType get_sizeType()

Disassembly:
	0x03CEAC18 ADRP X0, 0x478000
	0x03CEAC1C LDR X0, [X0 + 0x850]

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Void set_sizeType(UnityEngine.UIElements.BackgroundSizeType value)

Disassembly:
	0x03CEAC20 BL 0x1C16CF4
	0x03CEAC24 ADRP X0, 0x478000
	0x03CEAC28 LDR X0, [X0 + 0x7B8]
	0x03CEAC2C BL 0x1C16CF4
	0x03CEAC30 MOVZ W8, 0x1
	0x03CEAC34 STRB W8, [X20 + 0x73C]
	0x03CEAC38 MOV X0, X19
	0x03CEAC3C MOV X1, X31
	0x03CEAC40 STP X31, X31, [X31 + 0x20]
	0x03CEAC44 STR X31, [X31 + 0x30]
	0x03CEAC48 BL 0x3D1AF5C
	0x03CEAC4C LDR X8, [X19 + 0x58]
	0x03CEAC50 CBZ X8, 0x3CEB030
	0x03CEAC54 LDR W8, [X8 + 0x20]
	0x03CEAC58 ADRP X26, 0x478000
	0x03CEAC5C LDR X26, [X26 + 0x7B8]
	0x03CEAC60 CMP W8, 0x1
	0x03CEAC64 B.LT 0x3CEAF48
	0x03CEAC68 LDR X0, [X26]
	0x03CEAC6C LDR W8, [X0 + 0xE0]
	0x03CEAC70 CBNZ W8, 0x3CEAC7C

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move [X0], W1
	006 Add X0, X31, 8
	007 Move S0, W31
	008 Move X1, X31
	009 Move [X31+8], X31
	010 Call Length..ctor, X0, V0
	011 Move X8, [X31+8]
	012 Add X0, X31, 0
	013 Move S0, W31
	014 Move X1, X31
	015 Move [X19+4], X8
	016 Move [X31], X31
	017 Call Length..ctor, X0, V0
	018 Move X8, [X31]
	019 Move [X19+12], X8
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Add X31, X31, 32
	023 Return 

Method: UnityEngine.UIElements.Length get_x()

Disassembly:
	0x03CEAC74 BL 0x1C16DFC
	0x03CEAC78 LDR X0, [X26]

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Return X0

Method: System.Void set_x(UnityEngine.UIElements.Length value)

Disassembly:
	0x03CEAC7C LDR X8, [X0 + 0xB8]
	0x03CEAC80 MOV X1, X31
	0x03CEAC84 MOV X2, X31

ISIL:
	001 Move [X0+4], X1
	002 Move [X0], W31
	003 Return 

Method: UnityEngine.UIElements.Length get_y()

Disassembly:
	0x03CEAC88 LDR X20, [X8 + 0x18]
	0x03CEAC8C MOV X0, X20

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Return X0

Method: System.Void set_y(UnityEngine.UIElements.Length value)

Disassembly:
	0x03CEAC90 BL 0x33C5D2C
	0x03CEAC94 TBZ X0, 0x0, 0x3CEACA4
	0x03CEAC98 MOV X0, X20

ISIL:
	001 Move [X0+12], X1
	002 Move [X0], W31
	003 Return 

Method: System.Void .ctor(UnityEngine.UIElements.Length sizeX, UnityEngine.UIElements.Length sizeY)

Disassembly:
	0x03CEA658 CMP W21, W22
	0x03CEA65C B.NE 0x3CEA630
	0x03CEA660 LDP X20, X19, [X31 + 0x20]
	0x03CEA664 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X0], W31
	002 Move [X0+4], X1
	003 Move [X0+12], X2
	004 Return 

Method: System.Void .ctor(UnityEngine.UIElements.BackgroundSizeType sizeType)

Disassembly:
	0x03CEA604 LDR X2, [X8]
	0x03CEA608 BL 0x2DBEF30
	0x03CEA60C LDR X8, [X19 + 0x378]
	0x03CEA610 ADD X0, X31, 0x8
	0x03CEA614 MOV X1, X31
	0x03CEA618 STR X8, [X31 + 0x8]
	0x03CEA61C BL 0x3DF8994
	0x03CEA620 CMP W0, 0x1
	0x03CEA624 B.LT 0x3CEA660
	0x03CEA628 MOV W21, W0
	0x03CEA62C MOV W22, W31
	0x03CEA630 LDR X8, [X19 + 0x378]
	0x03CEA634 ADD X0, X31, 0x8
	0x03CEA638 MOV W1, W22
	0x03CEA63C MOV X2, X31
	0x03CEA640 STR X8, [X31 + 0x8]
	0x03CEA644 BL 0x3DF98E4
	0x03CEA648 MOV X1, X0
	0x03CEA64C MOV X0, X20
	0x03CEA650 BL 0x3CEA55C
	0x03CEA654 ADD W22, W22, 0x1

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move [X0], W1
	006 Add X0, X31, 8
	007 Move S0, W31
	008 Move X1, X31
	009 Move [X31+8], X31
	010 Call Length..ctor, X0, V0
	011 Move X8, [X31+8]
	012 Add X0, X31, 0
	013 Move S0, W31
	014 Move X1, X31
	015 Move [X19+4], X8
	016 Move [X31], X31
	017 Call Length..ctor, X0, V0
	018 Move X8, [X31]
	019 Move [X19+12], X8
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Add X31, X31, 32
	023 Return 

Method: UnityEngine.UIElements.BackgroundSize Initial()

Disassembly:
	0x03CEAC9C MOV X1, X31
	0x03CEACA0 BL 0x3BFE970
	0x03CEACA4 LDR X0, [X26]
	0x03CEACA8 STR X20, [X31]
	0x03CEACAC LDR W8, [X0 + 0xE0]
	0x03CEACB0 CBNZ W8, 0x3CEACB8
	0x03CEACB4 BL 0x1C16DFC
	0x03CEACB8 BL 0x3CEA890
	0x03CEACBC LDR X8, [X19 + 0x58]
	0x03CEACC0 CBZ X8, 0x3CEB028
	0x03CEACC4 ADRP X28, 0x478000
	0x03CEACC8 ADRP X29, 0x478000
	0x03CEACCC ADRP X24, 0x478000
	0x03CEACD0 ADRP X20, 0x478000
	0x03CEACD4 ADRP X27, 0x478000
	0x03CEACD8 LDR X28, [X28 + 0x808]
	0x03CEACDC LDR X29, [X29 + 0x7D0]
	0x03CEACE0 LDR X24, [X24 + 0x840]
	0x03CEACE4 LDR X20, [X20 + 0x818]
	0x03CEACE8 LDR X27, [X27 + 0x830]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X8
	006 Move W8, 0x42C80000
	007 Move S8, W8
	008 Move V0, V8
	009 Move X0, X31
	010 Call Length.Percent, V0
	011 Move X20, X0
	012 Move V0, V8
	013 Move X0, X31
	014 Call Length.Percent, V0
	015 Move [X19], W31
	016 Move [X19+4], X20
	017 Move [X19+12], X0
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+8]
	021 Move V8, [X31+32]
	022 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03CEACEC MOV X21, X0
	0x03CEACF0 LDR W8, [X8 + 0x20]
	0x03CEACF4 CMP W8, 0x1
	0x03CEACF8 B.LT 0x3CEAF0C
	0x03CEACFC LDR X0, [X26]
	0x03CEAD00 LDR W8, [X0 + 0xE0]
	0x03CEAD04 CBNZ W8, 0x3CEAD0C
	0x03CEAD08 BL 0x1C16DFC
	0x03CEAD0C BL 0x3CEA890
	0x03CEAD10 SUB X8, X0, X21
	0x03CEAD14 CMP X8, 0x63
	0x03CEAD18 B.GT 0x3CEAF0C
	0x03CEAD1C LDR X0, [X19 + 0x58]
	0x03CEAD20 LDR X1, [X28]
	0x03CEAD24 BL 0x21C4D84
	0x03CEAD28 MOV X23, X0
	0x03CEAD2C CBZ X0, 0x3CEAF0C
	0x03CEAD30 LDR X0, [X19 + 0x58]
	0x03CEAD34 CBZ X0, 0x3CEB02C
	0x03CEAD38 LDR X2, [X29]
	0x03CEAD3C MOV X1, X23
	0x03CEAD40 BL 0x2DBE67C
	0x03CEAD44 LDR X0, [X26]
	0x03CEAD48 LDR W8, [X0 + 0xE0]
	0x03CEAD4C CBNZ W8, 0x3CEAD58
	0x03CEAD50 BL 0x1C16DFC
	0x03CEAD54 LDR X0, [X26]
	0x03CEAD58 LDR X8, [X0 + 0xB8]
	0x03CEAD5C LDR W1, [X8]
	0x03CEAD60 MOV X0, X23
	0x03CEAD64 MOV X2, X31
	0x03CEAD68 BL 0x3DF3018
	0x03CEAD6C MOV X22, X0
	0x03CEAD70 CBZ X0, 0x3CEAECC
	0x03CEAD74 LDR X9, [X22]
	0x03CEAD78 LDR X8, [X24]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x6FE000
	007 Move W8, [X21+1835]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x435000
	015 Move X0, [X0+3568]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1835], W8
	019 Compare X20, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x435000
	022 Move X8, [X8+3568]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X0, X20
	028 Call 0x1C17E08
	029 Move V0, [X0]
	030 Move W8, [X0+16]
	031 Add X1, X31, 0
	032 Move X0, X19
	033 Move [X31], V0
	034 Move [X31+16], W8
	035 Call BackgroundSize.Equals, X0, X1
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 And W0, W0, 1
	041 Add X31, X31, 64
	042 Return X0

Method: System.Boolean Equals(UnityEngine.UIElements.BackgroundSize other)

Disassembly:
	0x03CEAD7C LDRB W11, [X9 + 0x130]
	0x03CEAD80 LDRB W10, [X8 + 0x130]
	0x03CEAD84 CMP W11, W10
	0x03CEAD88 B.CC 0x3CEAECC
	0x03CEAD8C LDR X9, [X9 + 0xC8]
	0x03CEAD90 ADD X9, X9, X10, 0x3, LSL
	0x03CEAD94 LDUR X9, [X9 - 0x8]
	0x03CEAD98 CMP X9, X8
	0x03CEAD9C B.NE 0x3CEAECC
	0x03CEADA0 LDR X0, [X26]
	0x03CEADA4 LDR W8, [X0 + 0xE0]
	0x03CEADA8 CBNZ W8, 0x3CEADB4
	0x03CEADAC BL 0x1C16DFC
	0x03CEADB0 LDR X0, [X26]
	0x03CEADB4 LDR X8, [X0 + 0xB8]
	0x03CEADB8 LDR W1, [X8]
	0x03CEADBC MOV X0, X23
	0x03CEADC0 MOV X2, X31
	0x03CEADC4 MOV X3, X31
	0x03CEADC8 BL 0x3DF31F4
	0x03CEADCC ADRP X8, 0x478000
	0x03CEADD0 LDR X8, [X8 + 0x838]
	0x03CEADD4 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X20, X1
	006 NotImplemented "Instruction LDUR not yet implemented."
	007 NotImplemented "Instruction LDUR not yet implemented."
	008 Move X2, X31
	009 Call Length.op_Equality, X0, X1
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {26}
	014 NotImplemented "Instruction LDUR not yet implemented."
	015 NotImplemented "Instruction LDUR not yet implemented."
	016 Move X2, X31
	017 Call Length.op_Equality, X0, X1
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {26}
	022 Move W8, [X20]
	023 Move W9, [X19]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSET not yet implemented."
	026 Move W0, W31
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03CEADD8 ADD X8, X31, 0x8
	0x03CEADDC MOV X0, X22
	0x03CEADE0 BL 0x301CB58
	0x03CEADE4 LDUR V0, [X31 + 0x8]
	0x03CEADE8 LDR X8, [X31 + 0x18]
	0x03CEADEC STR V0, [X31 + 0x2]
	0x03CEADF0 STR X8, [X31 + 0x30]
	0x03CEADF4 LDR X1, [X20]
	0x03CEADF8 ADD X0, X31, 0x20
	0x03CEADFC BL 0x2BC4350
	0x03CEAE00 TBZ X0, 0x0, 0x3CEAE6C
	0x03CEAE04 LDR X24, [X31 + 0x30]
	0x03CEAE08 CBZ X24, 0x3CEAED8
	0x03CEAE0C LDR X8, [X24]
	0x03CEAE10 LDR X1, [X27]
	0x03CEAE14 LDRH W9, [X8 + 0x12E]
	0x03CEAE18 CBZ X9, 0x3CEAE3C
	0x03CEAE1C LDR X10, [X8 + 0xB0]
	0x03CEAE20 ADD X10, X10, 0x8
	0x03CEAE24 LDUR X11, [X10 - 0x8]
	0x03CEAE28 CMP X11, X1
	0x03CEAE2C B.EQ 0x3CEAE4C
	0x03CEAE30 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X1, X31
	006 Move X19, X0
	007 Call Int32.GetHashCode, X0
	008 Move W20, W0
	009 Add X0, X19, 4
	010 Move X1, X31
	011 Call Length.GetHashCode, X0
	012 Move W21, 0x5529
	013 NotImplemented "Instruction MOVK not yet implemented."
	014 NotImplemented "Instruction MADD not yet implemented."
	015 Add X0, X19, 12
	016 Move X1, X31
	017 Call Length.GetHashCode, X0
	018 Move W8, 0xA091
	019 NotImplemented "Instruction MOVK not yet implemented."
	020 Multiply W8, W8, W21
	021 NotImplemented "Instruction MADD not yet implemented."
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Add W0, W8, W0
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: System.Boolean op_Equality(UnityEngine.UIElements.BackgroundSize style1, UnityEngine.UIElements.BackgroundSize style2)

Disassembly:
	0x03CEAA28 ADD X8, X31, 0x18
	0x03CEAA2C BL 0x2DBE924
	0x03CEAA30 LDR X1, [X24]
	0x03CEAA34 ADD X0, X31, 0x18
	0x03CEAA38 BL 0x2BC3C64
	0x03CEAA3C TBZ X0, 0x0, 0x3CEAA58
	0x03CEAA40 LDR X0, [X19 + 0x38]
	0x03CEAA44 CBZ X0, 0x3CEAA90
	0x03CEAA48 LDR X1, [X31 + 0x28]
	0x03CEAA4C LDR X2, [X25]
	0x03CEAA50 BL 0x2DBE67C
	0x03CEAA54 B 0x3CEAA30

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move W8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X31, 0
	006 Move [X31+16], W8
	007 Move [X31], V0
	008 Call BackgroundSize.Equals, X0, X1
	009 Move X30, [X31+32]
	010 And W0, W0, 1
	011 Add X31, X31, 48
	012 Return X0

Method: System.Boolean op_Inequality(UnityEngine.UIElements.BackgroundSize style1, UnityEngine.UIElements.BackgroundSize style2)

Disassembly:
	0x03CEAE34 ADD X10, X10, 0x10
	0x03CEAE38 B.NE 0x3CEAE24
	0x03CEAE3C MOV X0, X24
	0x03CEAE40 MOV W2, W31
	0x03CEAE44 BL 0x1C5C788
	0x03CEAE48 B 0x3CEAE58
	0x03CEAE4C LDRSW X9, [X10]
	0x03CEAE50 ADD X8, X8, X9, 0x4, LSL
	0x03CEAE54 ADD X0, X8, 0x138
	0x03CEAE58 LDP X8, X2, [X0]
	0x03CEAE5C MOV X0, X24
	0x03CEAE60 MOV X1, X23
	0x03CEAE64 BLR X8
	0x03CEAE68 B 0x3CEADF4
	0x03CEAE6C MOV X25, X31
	0x03CEAE70 MOVZ W23, 0x9
	0x03CEAE74 ADRP X8, 0x478000
	0x03CEAE78 LDR X8, [X8 + 0x810]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move W8, [X0+16]
	004 Move V0, [X0]
	005 Add X0, X31, 0
	006 Move [X31+16], W8
	007 Move [X31], V0
	008 Move W8, [X1+16]
	009 Move V0, [X1]
	010 Add X1, X31, 32
	011 Move [X31+48], W8
	012 Move [X31+2], V0
	013 Call BackgroundSize.Equals, X0, X1
	014 Move X30, [X31+64]
	015 NotImplemented "Instruction ORN not yet implemented."
	016 And W0, W8, 1
	017 Add X31, X31, 80
	018 Return X0

Method: System.String ToString()

Disassembly:
	0x03CEAE7C LDR X1, [X8]
	0x03CEAE80 ADD X0, X31, 0x20
	0x03CEAE84 BL 0x2BC434C
	0x03CEAE88 CBNZ X25, 0x3CEB05C
	0x03CEAE8C CMP W23, 0x9
	0x03CEAE90 B.EQ 0x3CEAE98
	0x03CEAE94 CBNZ W23, 0x3CEB020
	0x03CEAE98 ADRP X8, 0x478000
	0x03CEAE9C LDR X8, [X8 + 0x850]
	0x03CEAEA0 ADRP X24, 0x478000
	0x03CEAEA4 LDR X0, [X8]
	0x03CEAEA8 LDR W8, [X0 + 0xE0]
	0x03CEAEAC LDR X24, [X24 + 0x840]
	0x03CEAEB0 CBNZ W8, 0x3CEAEB8
	0x03CEAEB4 BL 0x1C16DFC
	0x03CEAEB8 ADRP X8, 0x478000
	0x03CEAEBC LDR X8, [X8 + 0x848]
	0x03CEAEC0 LDR X1, [X8]
	0x03CEAEC4 MOV X0, X22
	0x03CEAEC8 BL 0x2491D90
	0x03CEAECC LDR X8, [X19 + 0x58]
	0x03CEAED0 CBNZ X8, 0x3CEACF0
	0x03CEAED4 B 0x3CEB028
	0x03CEAED8 BL 0x1C16F20
	0x03CEAEDC B 0x3CEB06C
	0x03CEAEE0 B 0x3CEAEE8
	0x03CEAEE4 B 0x3CEAEE8
	0x03CEAEE8 MOV X24, X0
	0x03CEAEEC CMP W1, 0x1
	0x03CEAEF0 B.NE 0x3CEB034
	0x03CEAEF4 MOV X0, X24
	0x03CEAEF8 BL 0x3EB1AD0
	0x03CEAEFC LDR X25, [X0]
	0x03CEAF00 BL 0x3EB1AE0
	0x03CEAF04 MOV W23, W31
	0x03CEAF08 B 0x3CEAE74
	0x03CEAF0C MOV X21, X31
	0x03CEAF10 MOVZ W23, 0xE
	0x03CEAF14 LDR X20, [X31]
	0x03CEAF18 MOV X1, X31
	0x03CEAF1C MOV X2, X31
	0x03CEAF20 MOV X0, X20
	0x03CEAF24 BL 0x33C5D2C
	0x03CEAF28 TBZ X0, 0x0, 0x3CEAF38
	0x03CEAF2C MOV X0, X20
	0x03CEAF30 MOV X1, X31
	0x03CEAF34 BL 0x3BFEA0C
	0x03CEAF38 CBNZ X21, 0x3CEB064
	0x03CEAF3C CMP W23, 0xE
	0x03CEAF40 B.EQ 0x3CEAF48
	0x03CEAF44 CBNZ W23, 0x3CEB000
	0x03CEAF48 MOV X0, X19
	0x03CEAF4C BL 0x3CEA8E0
	0x03CEAF50 LDR X8, [X19 + 0x38]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0x6FE000
	009 Move X20, 0x479000
	010 Move X23, 0x435000
	011 Move X22, 0x479000
	012 Move W8, [X21+1836]
	013 Move X20, [X20+1936]
	014 Move X23, [X23+3592]
	015 Move X22, [X22+1944]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0x479000
	022 Move X0, [X0+1936]
	023 Call 0x1C17CF4
	024 Move X0, 0x435000
	025 Move X0, [X0+3592]
	026 Call 0x1C17CF4
	027 Move X0, 0x479000
	028 Move X0, [X0+1944]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+1836], W8
	032 Move W8, [X19]
	033 Move X0, [X20]
	034 Add X1, X31, 28
	035 Move [X31+28], W8
	036 Call 0x1C17E04
	037 Move X20, X0
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 Move X0, [X23]
	040 Add X1, X31, 16
	041 Move [X31+16], X8
	042 Call 0x1C17E04
	043 Move X21, X0
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Move X0, [X23]
	046 Add X1, X31, 8
	047 Move [X31+8], X8
	048 Call 0x1C17E04
	049 Move X8, [X22]
	050 Move X3, X0
	051 Move X1, X20
	052 Move X2, X21
	053 Move X0, X8
	054 Move X4, X31
	055 Call String.Format, X0, X1, X2, X3
	056 Move X20, [X31+64]
	057 Move X19, [X31+72]
	058 Move X22, [X31+48]
	059 Move X21, [X31+56]
	060 Move X30, [X31+32]
	061 Move X23, [X31+40]
	062 Add X31, X31, 80
	063 Return X0

