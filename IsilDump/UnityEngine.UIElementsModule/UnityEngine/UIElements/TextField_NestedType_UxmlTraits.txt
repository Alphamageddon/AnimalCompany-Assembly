Type: UnityEngine.UIElements.TextField/UxmlTraits

Method: System.Void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc)

Disassembly:
	0x03D69B7C ADD X10, X10, 0x10
	0x03D69B80 B.NE 0x3D69B6C
	0x03D69B84 MOVZ W2, 0x7
	0x03D69B88 MOV X0, X22
	0x03D69B8C BL 0x1C5C788
	0x03D69B90 B 0x3D69BA4
	0x03D69B94 LDR W9, [X10]
	0x03D69B98 ADD W9, W9, 0x7
	0x03D69B9C ADD X8, X8, W9, 0x4, SXTW
	0x03D69BA0 ADD X0, X8, 0x138
	0x03D69BA4 LDP X8, X1, [X0]
	0x03D69BA8 MOV X0, X22
	0x03D69BAC BLR X8
	0x03D69BB0 CMP W0, W21
	0x03D69BB4 B.EQ 0x3D69C30
	0x03D69BB8 LDR X0, [X20 + 0x10]
	0x03D69BBC CBZ X0, 0x3D69D38
	0x03D69BC0 MOV X1, X31
	0x03D69BC4 BL 0x3E0C77C
	0x03D69BC8 CBZ X0, 0x3D69D38
	0x03D69BCC LDR X8, [X0]
	0x03D69BD0 LDR X1, [X23]
	0x03D69BD4 MOV X22, X0
	0x03D69BD8 LDRH W9, [X8 + 0x12E]
	0x03D69BDC CBZ X9, 0x3D69C00
	0x03D69BE0 LDR X10, [X8 + 0xB0]
	0x03D69BE4 ADD X10, X10, 0x8
	0x03D69BE8 LDUR X11, [X10 - 0x8]
	0x03D69BEC CMP X11, X1
	0x03D69BF0 B.EQ 0x3D69C10
	0x03D69BF4 SUBS X9, X9, 0x1
	0x03D69BF8 ADD X10, X10, 0x10
	0x03D69BFC B.NE 0x3D69BE8
	0x03D69C00 MOVZ W2, 0x8
	0x03D69C04 MOV X0, X22
	0x03D69C08 BL 0x1C5C788
	0x03D69C0C B 0x3D69C20
	0x03D69C10 LDR W9, [X10]
	0x03D69C14 ADD W9, W9, 0x8
	0x03D69C18 ADD X8, X8, W9, 0x4, SXTW
	0x03D69C1C ADD X0, X8, 0x138
	0x03D69C20 LDP X8, X2, [X0]
	0x03D69C24 MOV X0, X22
	0x03D69C28 MOV W1, W21
	0x03D69C2C BLR X8
	0x03D69C30 LDR X0, [X20 + 0x10]
	0x03D69C34 CBZ X0, 0x3D69D38
	0x03D69C38 MOV X1, X31
	0x03D69C3C BL 0x3E0C77C
	0x03D69C40 CBZ X0, 0x3D69D38
	0x03D69C44 LDR X8, [X0]
	0x03D69C48 LDR X1, [X23]
	0x03D69C4C MOV X21, X0
	0x03D69C50 LDRH W9, [X8 + 0x12E]
	0x03D69C54 CBZ X9, 0x3D69C78
	0x03D69C58 LDR X10, [X8 + 0xB0]
	0x03D69C5C ADD X10, X10, 0x8
	0x03D69C60 LDUR X11, [X10 - 0x8]
	0x03D69C64 CMP X11, X1
	0x03D69C68 B.EQ 0x3D69C88
	0x03D69C6C SUBS X9, X9, 0x1
	0x03D69C70 ADD X10, X10, 0x10
	0x03D69C74 B.NE 0x3D69C60
	0x03D69C78 MOVZ W2, 0x4
	0x03D69C7C MOV X0, X21
	0x03D69C80 BL 0x1C5C788
	0x03D69C84 B 0x3D69C98
	0x03D69C88 LDR W9, [X10]
	0x03D69C8C ADD W9, W9, 0x4
	0x03D69C90 ADD X8, X8, W9, 0x4, SXTW
	0x03D69C94 ADD X0, X8, 0x138
	0x03D69C98 LDP X8, X1, [X0]
	0x03D69C9C MOV X0, X21
	0x03D69CA0 BLR X8
	0x03D69CA4 CMP W0, W19
	0x03D69CA8 B.EQ 0x3D69D24
	0x03D69CAC LDR X0, [X20 + 0x10]
	0x03D69CB0 CBZ X0, 0x3D69D38
	0x03D69CB4 MOV X1, X31
	0x03D69CB8 BL 0x3E0C77C
	0x03D69CBC CBZ X0, 0x3D69D38
	0x03D69CC0 LDR X8, [X0]
	0x03D69CC4 LDR X1, [X23]
	0x03D69CC8 MOV X20, X0
	0x03D69CCC LDRH W9, [X8 + 0x12E]
	0x03D69CD0 CBZ X9, 0x3D69CF4
	0x03D69CD4 LDR X10, [X8 + 0xB0]
	0x03D69CD8 ADD X10, X10, 0x8
	0x03D69CDC LDUR X11, [X10 - 0x8]
	0x03D69CE0 CMP X11, X1
	0x03D69CE4 B.EQ 0x3D69D04
	0x03D69CE8 SUBS X9, X9, 0x1
	0x03D69CEC ADD X10, X10, 0x10
	0x03D69CF0 B.NE 0x3D69CDC
	0x03D69CF4 MOVZ W2, 0x5
	0x03D69CF8 MOV X0, X20
	0x03D69CFC BL 0x1C5C788
	0x03D69D00 B 0x3D69D14
	0x03D69D04 LDR W9, [X10]
	0x03D69D08 ADD W9, W9, 0x5
	0x03D69D0C ADD X8, X8, W9, 0x4, SXTW
	0x03D69D10 ADD X0, X8, 0x138
	0x03D69D14 LDP X8, X2, [X0]
	0x03D69D18 MOV X0, X20
	0x03D69D1C MOV W1, W19
	0x03D69D20 BLR X8
	0x03D69D24 LDP X20, X19, [X31 + 0x30]
	0x03D69D28 LDP X22, X21, [X31 + 0x20]
	0x03D69D2C LDP X30, X23, [X31 + 0x10]
	0x03D69D30 ADD X31, X31, 0x40

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+144], X30
	003 Move [X31+152], X25
	004 Move [X31+160], X24
	005 Move [X31+168], X23
	006 Move [X31+176], X22
	007 Move [X31+184], X21
	008 Move [X31+192], X20
	009 Move [X31+200], X19
	010 Move X23, 0x67F000
	011 Move W8, [X23+3286]
	012 Move X21, X3
	013 Move X20, X2
	014 Move X19, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x38D000
	021 Move X0, [X0+632]
	022 Call 0x1C17CF4
	023 Move X0, 0x3B6000
	024 Move X0, [X0+392]
	025 Call 0x1C17CF4
	026 Move X0, 0x3FE000
	027 Move X0, [X0+2736]
	028 Call 0x1C17CF4
	029 Move X0, 0x3FE000
	030 Move X0, [X0+2744]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+3286], W8
	034 Move [X31+104], X31
	035 Compare X19, 0
	036 JumpIfEqual {48}
	037 Move X9, 0x3B6000
	038 Move X9, [X9+392]
	039 Move X8, [X19]
	040 Move X1, [X9]
	041 Move W10, [X8+304]
	042 Move W9, [X1+304]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, [X8+200]
	045 Add X8, X8, X9
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move V0, [X21]
	049 Move V1, [X21+16]
	050 Move X0, [X22+200]
	051 Move [X31+64], V0
	052 Move [X31+72], V1
	053 Compare X0, 0
	054 JumpIfEqual {137}
	055 Move X8, [X0]
	056 Move V0, [X31+64]
	057 Move V1, [X31+80]
	058 Add X2, X31, 112
	059 Move X1, X20
	060 Move X9, [X8+376]
	061 Move [X31+112], V0
	062 Move [X31+120], V1
	063 Move X3, [X8+384]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Compare X19, 0
	066 JumpIfEqual {137}
	067 Move X24, 0x3FE000
	068 Move X25, 0x38D000
	069 Move X23, 0x3FE000
	070 Move X24, [X24+2736]
	071 Move X25, [X25+632]
	072 Move X23, [X23+2744]
	073 And W1, W0, 1
	074 Move X0, X19
	075 Call TextField.set_multiline, X0, X1
	076 Move V1, [X21]
	077 Move V0, [X21+16]
	078 Move X4, [X24]
	079 Add X3, X31, 112
	080 Move X0, X22
	081 Move [X31+32], V1
	082 Move [X31+40], V0
	083 Move V0, [X31+32]
	084 Move V1, [X31+48]
	085 Move X1, X19
	086 Move X2, X20
	087 Move [X31+112], V0
	088 Move [X31+120], V1
	089 Call 0x273B3A8, X0, X1, X2, X3
	090 Move X8, [X25]
	091 Move X0, [X23]
	092 Move X8, [X8+184]
	093 Move X8, [X8]
	094 Move [X31+104], X8
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {100}
	098 Call 0x1C17DFC
	099 Move X0, [X23]
	100 Move X8, [X0+184]
	101 Move V0, [X21]
	102 Move V1, [X21+16]
	103 Move X0, [X8]
	104 Move [X31+112], V0
	105 Move [X31+120], V1
	106 Compare X0, 0
	107 JumpIfEqual {137}
	108 Move V0, [X31+112]
	109 Move V1, [X31+128]
	110 Add X2, X31, 0
	111 Add X3, X31, 104
	112 Move X1, X20
	113 Move X4, X31
	114 Move [X31], V0
	115 Move [X31+8], V1
	116 Call UxmlStringAttributeDescription.TryGetValueFromBag, X0, X1, X2, X3
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {127}
	121 Move X8, [X19]
	122 Move X1, [X31+104]
	123 Move X0, X19
	124 Move X9, [X8+2184]
	125 Move X2, [X8+2192]
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X20, [X31+192]
	128 Move X19, [X31+200]
	129 Move X22, [X31+176]
	130 Move X21, [X31+184]
	131 Move X24, [X31+160]
	132 Move X23, [X31+168]
	133 Move X30, [X31+144]
	134 Move X25, [X31+152]
	135 Add X31, X31, 208
	136 Return 
	137 Call 0x1C17F20
	138 Move X0, X19
	139 Call 0x1C181E0

Method: System.Void .ctor()

Disassembly:
	0x03D69D34 RET
	0x03D69D38 BL 0x1C16F20
	0x03D69D3C STR X30, [X31 - 0x60]!
	0x03D69D40 STP X28, X27, [X31 + 0x10]
	0x03D69D44 STP X26, X25, [X31 + 0x20]
	0x03D69D48 STP X24, X23, [X31 + 0x30]
	0x03D69D4C STP X22, X21, [X31 + 0x40]
	0x03D69D50 STP X20, X19, [X31 + 0x50]
	0x03D69D54 ADRP X20, 0x67E000
	0x03D69D58 LDRB W8, [X20 + 0xCE0]
	0x03D69D5C MOV X19, X0
	0x03D69D60 TBNZ X8, 0x0, 0x3D69D84
	0x03D69D64 ADRP X0, 0x3B4000
	0x03D69D68 LDR X0, [X0 + 0x630]
	0x03D69D6C BL 0x1C16CF4
	0x03D69D70 ADRP X0, 0x3B4000
	0x03D69D74 LDR X0, [X0 + 0x628]
	0x03D69D78 BL 0x1C16CF4
	0x03D69D7C MOVZ W8, 0x1
	0x03D69D80 STRB W8, [X20 + 0xCE0]
	0x03D69D84 LDR X0, [X19 + 0x10]
	0x03D69D88 CBZ X0, 0x3D6A240
	0x03D69D8C MOV X1, X31
	0x03D69D90 BL 0x3E0AF0C
	0x03D69D94 CBZ X0, 0x3D6A240
	0x03D69D98 ADRP X27, 0x3B4000
	0x03D69D9C LDR X8, [X0]
	0x03D69DA0 LDR X27, [X27 + 0x630]
	0x03D69DA4 MOV X20, X0
	0x03D69DA8 LDRH W9, [X8 + 0x12E]
	0x03D69DAC LDR X1, [X27]
	0x03D69DB0 CBZ X9, 0x3D69DD4
	0x03D69DB4 LDR X10, [X8 + 0xB0]
	0x03D69DB8 ADD X10, X10, 0x8
	0x03D69DBC LDUR X11, [X10 - 0x8]
	0x03D69DC0 CMP X11, X1
	0x03D69DC4 B.EQ 0x3D69DE4
	0x03D69DC8 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x67F000
	006 Move X21, 0x3B5000
	007 Move W8, [X20+3287]
	008 Move X21, [X21+1880]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x3B5000
	015 Move X0, [X0+1880]
	016 Call 0x1C17CF4
	017 Move X0, 0x3FE000
	018 Move X0, [X0+2752]
	019 Call 0x1C17CF4
	020 Move X0, 0x3FE000
	021 Move X0, [X0+2760]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3287], W8
	025 Move X0, [X21]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call UxmlBoolAttributeDescription..ctor, X0
	030 Compare X20, 0
	031 JumpIfEqual {47}
	032 Move X8, 0x3FE000
	033 Move X8, [X8+2760]
	034 Move X9, 0x3FE000
	035 Move X0, X19
	036 Move X8, [X8]
	037 Move X9, [X9+2752]
	038 Move [X20+16], X8
	039 Move [X19+200], X20
	040 Move X1, [X9]
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call 0x273B704, X0
	046 Return 
	047 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D69DCC ADD X10, X10, 0x10
	0x03D69DD0 B.NE 0x3D69DBC
	0x03D69DD4 MOVZ W2, 0x1B
	0x03D69DD8 MOV X0, X20
	0x03D69DDC BL 0x1C5C788
	0x03D69DE0 B 0x3D69DF4
	0x03D69DE4 LDR W9, [X10]
	0x03D69DE8 ADD W9, W9, 0x1B
	0x03D69DEC ADD X8, X8, W9, 0x4, SXTW
	0x03D69DF0 ADD X0, X8, 0x138
	0x03D69DF4 LDP X8, X1, [X0]
	0x03D69DF8 MOV X0, X20
	0x03D69DFC BLR X8
	0x03D69E00 AND W0, W0, 0x1
	0x03D69E04 MOV X1, X31
	0x03D69E08 BL 0x3C3CF9C
	0x03D69E0C LDR X21, [X19 + 0x10]
	0x03D69E10 CBZ X21, 0x3D6A240
	0x03D69E14 LDR X8, [X21]
	0x03D69E18 MOV X0, X21
	0x03D69E1C LDR X9, [X8 + 0xB18]
	0x03D69E20 LDR X1, [X8 + 0xB20]
	0x03D69E24 BLR X9
	0x03D69E28 LDR X8, [X20]
	0x03D69E2C LDR X1, [X27]
	0x03D69E30 MOV X25, X0
	0x03D69E34 LDRH W9, [X8 + 0x12E]
	0x03D69E38 CBZ X9, 0x3D69E5C
	0x03D69E3C LDR X10, [X8 + 0xB0]
	0x03D69E40 ADD X10, X10, 0x8
	0x03D69E44 LDUR X11, [X10 - 0x8]
	0x03D69E48 CMP X11, X1
	0x03D69E4C B.EQ 0x3D69E6C
	0x03D69E50 SUBS X9, X9, 0x1
	0x03D69E54 ADD X10, X10, 0x10
	0x03D69E58 B.NE 0x3D69E44
	0x03D69E5C MOVZ W2, 0x1D
	0x03D69E60 MOV X0, X20
	0x03D69E64 BL 0x1C5C788
	0x03D69E68 B 0x3D69E7C
	0x03D69E6C LDR W9, [X10]
	0x03D69E70 ADD W9, W9, 0x1D
	0x03D69E74 ADD X8, X8, W9, 0x4, SXTW
	0x03D69E78 ADD X0, X8, 0x138
	0x03D69E7C LDP X8, X1, [X0]
	0x03D69E80 MOV X0, X20
	0x03D69E84 BLR X8
	0x03D69E88 LDR X8, [X20]
	0x03D69E8C LDR X1, [X27]
	0x03D69E90 MOV W26, W0
	0x03D69E94 LDRH W9, [X8 + 0x12E]
	0x03D69E98 CBZ X9, 0x3D69EBC
	0x03D69E9C LDR X10, [X8 + 0xB0]
	0x03D69EA0 ADD X10, X10, 0x8
	0x03D69EA4 LDUR X11, [X10 - 0x8]
	0x03D69EA8 CMP X11, X1
	0x03D69EAC B.EQ 0x3D69ECC
	0x03D69EB0 SUBS X9, X9, 0x1
	0x03D69EB4 ADD X10, X10, 0x10
	0x03D69EB8 B.NE 0x3D69EA4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x67F000
	005 Move X20, 0x3B5000
	006 Move W8, [X19+3288]
	007 Move X20, [X20+2848]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {29}
	012 Move X0, 0x38B000
	013 Move X0, [X0+2760]
	014 Call 0x1C17CF4
	015 Move X0, 0x3B5000
	016 Move X0, [X0+2848]
	017 Call 0x1C17CF4
	018 Move X0, 0x3FE000
	019 Move X0, [X0+2744]
	020 Call 0x1C17CF4
	021 Move X0, 0x395000
	022 Move X0, [X0+3784]
	023 Call 0x1C17CF4
	024 Move X0, 0x3DE000
	025 Move X0, [X0+992]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+3288], W8
	029 Move X0, [X20]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X19, X0
	033 Call UxmlStringAttributeDescription..ctor, X0
	034 Compare X19, 0
	035 JumpIfEqual {67}
	036 Move X8, 0x395000
	037 Move X8, [X8+3784]
	038 Move X9, 0x38B000
	039 Move W1, 1
	040 Move X8, [X8]
	041 Move X9, [X9+2760]
	042 Move [X19+16], X8
	043 Move X0, [X9]
	044 Call 0x1C17D6C
	045 Compare X0, 0
	046 JumpIfEqual {67}
	047 Move W8, [X0+24]
	048 Move X1, X0
	049 Compare W8, 0
	050 JumpIfEqual {68}
	051 Move X8, 0x3DE000
	052 Move X8, [X8+992]
	053 Move X20, 0x3FE000
	054 Move X0, X19
	055 Move X2, X31
	056 Move X8, [X8]
	057 Move X20, [X20+2744]
	058 Move [X1+32], X8
	059 Call UxmlAttributeDescription.set_obsoleteNames, X0, X1
	060 Move X8, [X20]
	061 Move X8, [X8+184]
	062 Move [X8], X19
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Return 
	067 Call 0x1C17F20
	068 Call 0x1C17F28

