Type: UnityEngine.UIElements.BaseField`1

Method: UnityEngine.UIElements.VisualElement get_visualInput()

Disassembly:
	0x02773DDC TBNZ X8, 0x0, 0x2773DF4
	0x02773DE0 ADRP X0, 0x19AA000

ISIL:
	001 Move X0, [X0+1000]
	002 Return X0

Method: System.Void set_visualInput(UnityEngine.UIElements.VisualElement value)

Disassembly:
	0x02773DE4 LDR X0, [X0 + 0xDC8]
	0x02773DE8 BL 0x1C16CF4
	0x02773DEC MOVZ W8, 0x1
	0x02773DF0 STRB W8, [X20 + 0x7D7]
	0x02773DF4 CBZ X19, 0x2773E84
	0x02773DF8 ADRP X10, 0x19AA000
	0x02773DFC LDR X8, [X19]
	0x02773E00 LDR X10, [X10 + 0xDC8]
	0x02773E04 LDRH W9, [X8 + 0x12E]
	0x02773E08 LDR X1, [X10]
	0x02773E0C CBZ X9, 0x2773E30
	0x02773E10 LDR X10, [X8 + 0xB0]
	0x02773E14 ADD X10, X10, 0x8
	0x02773E18 LDUR X11, [X10 - 0x8]
	0x02773E1C CMP X11, X1
	0x02773E20 B.EQ 0x2773E40
	0x02773E24 SUBS X9, X9, 0x1
	0x02773E28 ADD X10, X10, 0x10
	0x02773E2C B.NE 0x2773E18
	0x02773E30 MOV X0, X19
	0x02773E34 MOV W2, W31
	0x02773E38 BL 0x1C5C788
	0x02773E3C B 0x2773E4C
	0x02773E40 LDRSW X9, [X10]
	0x02773E44 ADD X8, X8, X9, 0x4, LSL
	0x02773E48 ADD X0, X8, 0x138
	0x02773E4C LDP X8, X1, [X0]
	0x02773E50 MOV X0, X19
	0x02773E54 BLR X8
	0x02773E58 CBZ X0, 0x2773E78
	0x02773E5C LDR X8, [X0 + 0x40]
	0x02773E60 LDR X2, [X0 + 0x18]
	0x02773E64 LDR X1, [X0 + 0x28]
	0x02773E68 LDP X20, X19, [X31 + 0x10]
	0x02773E6C MOV X0, X8
	0x02773E70 LDR X30, [X31], #0x20
	0x02773E74 BR X2
	0x02773E78 LDP X20, X19, [X31 + 0x10]
	0x02773E7C LDR X30, [X31], #0x20
	0x02773E80 RET
	0x02773E84 BL 0x1C16F20
	0x02773E88 STR X30, [X31 - 0x20]!
	0x02773E8C STP X20, X19, [X31 + 0x10]
	0x02773E90 ADRP X20, 0x1C67000
	0x02773E94 LDRB W8, [X20 + 0x7D8]
	0x02773E98 MOV X19, X0
	0x02773E9C TBNZ X8, 0x0, 0x2773EB4
	0x02773EA0 ADRP X0, 0x19AA000
	0x02773EA4 LDR X0, [X0 + 0xDC8]
	0x02773EA8 BL 0x1C16CF4
	0x02773EAC MOVZ W8, 0x1
	0x02773EB0 STRB W8, [X20 + 0x7D8]
	0x02773EB4 CBZ X19, 0x2773F48
	0x02773EB8 ADRP X10, 0x19AA000
	0x02773EBC LDR X8, [X19]
	0x02773EC0 LDR X10, [X10 + 0xDC8]
	0x02773EC4 LDRH W9, [X8 + 0x12E]
	0x02773EC8 LDR X1, [X10]
	0x02773ECC CBZ X9, 0x2773EF0
	0x02773ED0 LDR X10, [X8 + 0xB0]
	0x02773ED4 ADD X10, X10, 0x8
	0x02773ED8 LDUR X11, [X10 - 0x8]
	0x02773EDC CMP X11, X1
	0x02773EE0 B.EQ 0x2773F00
	0x02773EE4 SUBS X9, X9, 0x1
	0x02773EE8 ADD X10, X10, 0x10
	0x02773EEC B.NE 0x2773ED8
	0x02773EF0 MOVZ W2, 0x1
	0x02773EF4 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1C68000
	007 Move W8, [X22+2000]
	008 Move X21, X2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x19A9000
	016 Move X0, [X0+2200]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2000], W8
	020 Move X0, [X19+1000]
	021 Compare X0, 0
	022 JumpIfEqual {32}
	023 Move X1, X31
	024 Call VisualElement.get_parent, X0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, [X19+1000]
	027 Compare X0, 0
	028 JumpIfEqual {87}
	029 Move X1, X31
	030 Call VisualElement.RemoveFromHierarchy, X0
	031 Move [X19+1000], X31
	032 Compare X20, 0
	033 JumpIfNotEqual {47}
	034 Move X8, 0x19A9000
	035 Move X8, [X8+2200]
	036 Move X0, [X8]
	037 Call 0x1C17F10
	038 Move X1, X31
	039 Move X20, X0
	040 Call VisualElement..ctor, X0
	041 Compare X20, 0
	042 JumpIfEqual {87}
	043 Move W1, 1
	044 Move X0, X20
	045 Move X2, X31
	046 Call VisualElement.set_pickingMode, X0, X1
	047 Move W8, 1
	048 Move [X19+1000], X20
	049 Move [X20+32], W8
	050 Move X8, [X21+32]
	051 Move X8, [X8+192]
	052 Move X0, [X8+8]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X8, [X21+32]
	064 Move X8, [X8+192]
	065 Move X0, [X8+8]
	066 Move W8, [X0+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {72}
	071 Call 0x1C5D684
	072 Move X8, [X0+184]
	073 Move X0, X20
	074 Move X2, X31
	075 Move X1, [X8+16]
	076 Call VisualElement.AddToClassList, X0, X1
	077 Move X1, [X19+1000]
	078 Move X0, X19
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X2, X31
	084 Move X30, [X31+48]
	085 Call VisualElement.Add, X0, X1
	086 Return 
	087 Call 0x1C17F20

Method: TValueType get_rawValue()

Disassembly:
	0x02773EF8 BL 0x1C5C788
	0x02773EFC B 0x2773F10

ISIL:
	001 Move W0, [X0+1008]
	002 Return X0

Method: System.Void set_rawValue(TValueType value)

Disassembly:
	0x02773F00 LDR W9, [X10]
	0x02773F04 ADD W9, W9, 0x1
	0x02773F08 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 And W8, W1, 1
	002 Move [X0+1008], W8
	003 Return 

Method: System.Void add_onValidateValue(System.Func`2<TValueType, TValueType> value)

Disassembly:
	0x02773F0C ADD X0, X8, 0x138
	0x02773F10 LDP X8, X1, [X0]
	0x02773F14 MOV X0, X19
	0x02773F18 BLR X8
	0x02773F1C CBZ X0, 0x2773F3C
	0x02773F20 LDR X8, [X0 + 0x40]
	0x02773F24 LDR X2, [X0 + 0x18]
	0x02773F28 LDR X1, [X0 + 0x28]
	0x02773F2C LDP X20, X19, [X31 + 0x10]
	0x02773F30 MOV X0, X8
	0x02773F34 LDR X30, [X31], #0x20
	0x02773F38 BR X2
	0x02773F3C LDP X20, X19, [X31 + 0x10]
	0x02773F40 LDR X30, [X31], #0x20
	0x02773F44 RET
	0x02773F48 BL 0x1C16F20
	0x02773F4C SUB X31, X31, 0x50
	0x02773F50 STR X30, [X31 + 0x10]
	0x02773F54 STP X24, X23, [X31 + 0x20]
	0x02773F58 STP X22, X21, [X31 + 0x30]
	0x02773F5C STP X20, X19, [X31 + 0x40]
	0x02773F60 ADRP X22, 0x1C67000
	0x02773F64 LDRB W8, [X22 + 0x7D9]
	0x02773F68 MOV X19, X2
	0x02773F6C MOV X21, X1
	0x02773F70 MOV X20, X0
	0x02773F74 TBNZ X8, 0x0, 0x2773F8C
	0x02773F78 ADRP X0, 0x19AA000
	0x02773F7C LDR X0, [X0 + 0x680]
	0x02773F80 BL 0x1C16CF4
	0x02773F84 MOVZ W8, 0x1
	0x02773F88 STRB W8, [X22 + 0x7D9]
	0x02773F8C STR X31, [X31 + 0x18]
	0x02773F90 STR X31, [X31 + 0x8]
	0x02773F94 CBZ X21, 0x277430C
	0x02773F98 MOV X0, X21
	0x02773F9C MOV X1, X31
	0x02773FA0 BL 0x3DADB00
	0x02773FA4 LDR X8, [X19 + 0x20]
	0x02773FA8 MOV X22, X0
	0x02773FAC LDR X8, [X8 + 0xC0]
	0x02773FB0 LDR X8, [X8 + 0x8]
	0x02773FB4 LDRB W9, [X8 + 0x135]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, [X0+1016]
	009 Move X19, X2
	010 Move X20, X1
	011 Add X21, X0, 1016
	012 Move X0, X22
	013 Move X1, X20
	014 Move X2, X31
	015 Call Delegate.Combine, X0, X1
	016 Move X8, [X19+32]
	017 Move X24, X0
	018 Move X8, [X8+192]
	019 Move X23, [X8+24]
	020 Move W8, [X23+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X23
	026 Call 0x1C5D684
	027 Move X23, X0
	028 Compare X24, 0
	029 JumpIfEqual {36}
	030 Move X0, X24
	031 Move X1, X23
	032 Call 0x1C17E00
	033 Move X1, X0
	034 Compare X0, 0
	035 JumpIfNotEqual {37}
	036 Move X1, X31
	037 Move X0, X21
	038 Move X2, X22
	039 Call 0x1C25138
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X22, X0
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X24, [X31+16]
	047 Move X23, [X31+24]
	048 Move X30, [X31+64]
	049 Return 
	050 Move X0, X24
	051 Move X1, X23
	052 Call 0x1C181E0

Method: System.Void remove_onValidateValue(System.Func`2<TValueType, TValueType> value)

Disassembly:
	0x02773FB8 TBNZ X9, 0x0, 0x2773FC8
	0x02773FBC MOV X0, X8
	0x02773FC0 BL 0x1C5C684
	0x02773FC4 MOV X8, X0
	0x02773FC8 LDR W9, [X8 + 0xE0]
	0x02773FCC CBNZ W9, 0x2773FD8
	0x02773FD0 MOV X0, X8
	0x02773FD4 BL 0x1C16DFC
	0x02773FD8 LDR X8, [X19 + 0x20]
	0x02773FDC LDR X8, [X8 + 0xC0]
	0x02773FE0 LDR X0, [X8 + 0x8]
	0x02773FE4 LDRB W8, [X0 + 0x135]
	0x02773FE8 TBNZ X8, 0x0, 0x2773FF0
	0x02773FEC BL 0x1C5C684
	0x02773FF0 CBZ X22, 0x277430C
	0x02773FF4 ADRP X24, 0x19AA000
	0x02773FF8 LDR X9, [X0 + 0xB8]
	0x02773FFC LDR X8, [X22]
	0x02774000 LDR X24, [X24 + 0x680]
	0x02774004 LDR X23, [X9 + 0x50]
	0x02774008 LDRH W9, [X8 + 0x12E]
	0x0277400C LDR X1, [X24]
	0x02774010 CBZ X9, 0x2774034
	0x02774014 LDR X10, [X8 + 0xB0]
	0x02774018 ADD X10, X10, 0x8
	0x0277401C LDUR X11, [X10 - 0x8]
	0x02774020 CMP X11, X1
	0x02774024 B.EQ 0x2774044
	0x02774028 SUBS X9, X9, 0x1
	0x0277402C ADD X10, X10, 0x10
	0x02774030 B.NE 0x277401C
	0x02774034 MOV X0, X22
	0x02774038 MOV W2, W31
	0x0277403C BL 0x1C5C788
	0x02774040 B 0x2774050
	0x02774044 LDRSW X9, [X10]
	0x02774048 ADD X8, X8, X9, 0x4, LSL
	0x0277404C ADD X0, X8, 0x138
	0x02774050 LDP X8, X3, [X0]
	0x02774054 ADD X2, X31, 0x1C
	0x02774058 MOV X0, X22
	0x0277405C MOV X1, X23
	0x02774060 BLR X8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, [X0+1016]
	009 Move X19, X2
	010 Move X20, X1
	011 Add X21, X0, 1016
	012 Move X0, X22
	013 Move X1, X20
	014 Move X2, X31
	015 Call Delegate.Remove, X0, X1
	016 Move X8, [X19+32]
	017 Move X24, X0
	018 Move X8, [X8+192]
	019 Move X23, [X8+24]
	020 Move W8, [X23+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X23
	026 Call 0x1C5D684
	027 Move X23, X0
	028 Compare X24, 0
	029 JumpIfEqual {36}
	030 Move X0, X24
	031 Move X1, X23
	032 Call 0x1C17E00
	033 Move X1, X0
	034 Compare X0, 0
	035 JumpIfNotEqual {37}
	036 Move X1, X31
	037 Move X0, X21
	038 Move X2, X22
	039 Call 0x1C25138
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X22, X0
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X24, [X31+16]
	047 Move X23, [X31+24]
	048 Move X30, [X31+64]
	049 Return 
	050 Move X0, X24
	051 Move X1, X23
	052 Call 0x1C181E0

Method: TValueType get_value()

Disassembly:
	0x02774064 TBZ X0, 0x0, 0x2774070
	0x02774068 LDR V0, [X31 + 0x1C]

ISIL:
	001 Move W0, [X0+1008]
	002 Return X0

Method: System.Void set_value(TValueType value)

Disassembly:
	0x0277406C STR S0, [X20 + 0x3D8]
	0x02774070 MOV X0, X21
	0x02774074 MOV X1, X31
	0x02774078 BL 0x3DADB00
	0x0277407C LDR X8, [X19 + 0x20]
	0x02774080 MOV X22, X0
	0x02774084 LDR X8, [X8 + 0xC0]
	0x02774088 LDR X8, [X8 + 0x8]
	0x0277408C LDRB W9, [X8 + 0x135]
	0x02774090 TBNZ X9, 0x0, 0x27740A0
	0x02774094 MOV X0, X8
	0x02774098 BL 0x1C5C684
	0x0277409C MOV X8, X0
	0x027740A0 LDR W9, [X8 + 0xE0]
	0x027740A4 CBNZ W9, 0x27740B0
	0x027740A8 MOV X0, X8
	0x027740AC BL 0x1C16DFC
	0x027740B0 LDR X8, [X19 + 0x20]
	0x027740B4 LDR X8, [X8 + 0xC0]
	0x027740B8 LDR X0, [X8 + 0x8]
	0x027740BC LDRB W8, [X0 + 0x135]
	0x027740C0 TBNZ X8, 0x0, 0x27740C8
	0x027740C4 BL 0x1C5C684
	0x027740C8 CBZ X22, 0x277430C
	0x027740CC LDR X9, [X0 + 0xB8]
	0x027740D0 LDR X8, [X22]
	0x027740D4 LDR X1, [X24]
	0x027740D8 LDR X23, [X9 + 0x58]
	0x027740DC LDRH W9, [X8 + 0x12E]
	0x027740E0 CBZ X9, 0x2774104
	0x027740E4 LDR X10, [X8 + 0xB0]
	0x027740E8 ADD X10, X10, 0x8
	0x027740EC LDUR X11, [X10 - 0x8]
	0x027740F0 CMP X11, X1
	0x027740F4 B.EQ 0x2774114
	0x027740F8 SUBS X9, X9, 0x1
	0x027740FC ADD X10, X10, 0x10
	0x02774100 B.NE 0x27740EC
	0x02774104 MOV X0, X22
	0x02774108 MOV W2, W31
	0x0277410C BL 0x1C5C788
	0x02774110 B 0x2774120
	0x02774114 LDRSW X9, [X10]
	0x02774118 ADD X8, X8, X9, 0x4, LSL
	0x0277411C ADD X0, X8, 0x138
	0x02774120 LDP X8, X3, [X0]
	0x02774124 ADD X2, X31, 0x18
	0x02774128 MOV X0, X22
	0x0277412C MOV X1, X23
	0x02774130 BLR X8
	0x02774134 TBZ X0, 0x0, 0x2774140
	0x02774138 LDR V0, [X31 + 0x18]
	0x0277413C STR S0, [X20 + 0x3DC]
	0x02774140 MOV X0, X21
	0x02774144 MOV X1, X31
	0x02774148 BL 0x3DADB00
	0x0277414C LDR X8, [X19 + 0x20]
	0x02774150 MOV X22, X0
	0x02774154 LDR X8, [X8 + 0xC0]
	0x02774158 LDR X8, [X8 + 0x8]
	0x0277415C LDRB W9, [X8 + 0x135]
	0x02774160 TBNZ X9, 0x0, 0x2774170
	0x02774164 MOV X0, X8
	0x02774168 BL 0x1C5C684
	0x0277416C MOV X8, X0
	0x02774170 LDR W9, [X8 + 0xE0]
	0x02774174 CBNZ W9, 0x2774180
	0x02774178 MOV X0, X8
	0x0277417C BL 0x1C16DFC
	0x02774180 LDR X8, [X19 + 0x20]
	0x02774184 LDR X8, [X8 + 0xC0]
	0x02774188 LDR X0, [X8 + 0x8]
	0x0277418C LDRB W8, [X0 + 0x135]
	0x02774190 TBNZ X8, 0x0, 0x2774198
	0x02774194 BL 0x1C5C684
	0x02774198 CBZ X22, 0x277430C
	0x0277419C LDR X9, [X0 + 0xB8]
	0x027741A0 LDR X8, [X22]
	0x027741A4 LDR X1, [X24]
	0x027741A8 LDR X23, [X9 + 0x60]
	0x027741AC LDRH W9, [X8 + 0x12E]
	0x027741B0 CBZ X9, 0x27741D4
	0x027741B4 LDR X10, [X8 + 0xB0]
	0x027741B8 ADD X10, X10, 0x8
	0x027741BC LDUR X11, [X10 - 0x8]
	0x027741C0 CMP X11, X1
	0x027741C4 B.EQ 0x27741E4
	0x027741C8 SUBS X9, X9, 0x1
	0x027741CC ADD X10, X10, 0x10
	0x027741D0 B.NE 0x27741BC
	0x027741D4 MOV X0, X22
	0x027741D8 MOV W2, W31
	0x027741DC BL 0x1C5C788
	0x027741E0 B 0x27741F0
	0x027741E4 LDRSW X9, [X10]
	0x027741E8 ADD X8, X8, X9, 0x4, LSL
	0x027741EC ADD X0, X8, 0x138
	0x027741F0 LDP X8, X3, [X0]
	0x027741F4 ADD X2, X31, 0xC
	0x027741F8 MOV X0, X22
	0x027741FC MOV X1, X23
	0x02774200 BLR X8
	0x02774204 TBZ X0, 0x0, 0x2774210
	0x02774208 LDR V0, [X31 + 0xC]
	0x0277420C STR S0, [X20 + 0x3E0]
	0x02774210 MOV X0, X21
	0x02774214 MOV X1, X31
	0x02774218 BL 0x3DADB00
	0x0277421C LDR X8, [X19 + 0x20]
	0x02774220 MOV X21, X0
	0x02774224 LDR X8, [X8 + 0xC0]
	0x02774228 LDR X8, [X8 + 0x8]
	0x0277422C LDRB W9, [X8 + 0x135]
	0x02774230 TBNZ X9, 0x0, 0x2774240
	0x02774234 MOV X0, X8
	0x02774238 BL 0x1C5C684
	0x0277423C MOV X8, X0
	0x02774240 LDR W9, [X8 + 0xE0]
	0x02774244 CBNZ W9, 0x2774250
	0x02774248 MOV X0, X8
	0x0277424C BL 0x1C16DFC
	0x02774250 LDR X8, [X19 + 0x20]
	0x02774254 LDR X8, [X8 + 0xC0]
	0x02774258 LDR X0, [X8 + 0x8]
	0x0277425C LDRB W8, [X0 + 0x135]
	0x02774260 TBNZ X8, 0x0, 0x2774268
	0x02774264 BL 0x1C5C684
	0x02774268 CBZ X21, 0x277430C
	0x0277426C LDR X9, [X0 + 0xB8]
	0x02774270 LDR X8, [X21]
	0x02774274 LDR X1, [X24]
	0x02774278 LDR X22, [X9 + 0x68]
	0x0277427C LDRH W9, [X8 + 0x12E]
	0x02774280 CBZ X9, 0x27742A4
	0x02774284 LDR X10, [X8 + 0xB0]
	0x02774288 ADD X10, X10, 0x8
	0x0277428C LDUR X11, [X10 - 0x8]
	0x02774290 CMP X11, X1
	0x02774294 B.EQ 0x27742B4
	0x02774298 SUBS X9, X9, 0x1
	0x0277429C ADD X10, X10, 0x10
	0x027742A0 B.NE 0x277428C
	0x027742A4 MOV X0, X21
	0x027742A8 MOV W2, W31
	0x027742AC BL 0x1C5C788
	0x027742B0 B 0x27742C0
	0x027742B4 LDRSW X9, [X10]
	0x027742B8 ADD X8, X8, X9, 0x4, LSL
	0x027742BC ADD X0, X8, 0x138
	0x027742C0 LDP X8, X3, [X0]
	0x027742C4 ADD X2, X31, 0x8
	0x027742C8 MOV X0, X21
	0x027742CC MOV X1, X22
	0x027742D0 BLR X8
	0x027742D4 TBZ X0, 0x0, 0x27742E0
	0x027742D8 LDR V0, [X31 + 0x8]
	0x027742DC STR S0, [X20 + 0x3E4]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1C67000
	008 Move W8, [X22+2001]
	009 Move X21, X2
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1980000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2001], W8
	021 Move X8, [X20]
	022 And W1, W19, 1
	023 Move X0, X20
	024 Move X9, [X8+2120]
	025 Move X2, [X8+2128]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move W8, [X20+1032]
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {35}
	032 Compare W8, 0
	033 JumpIfEqual {129}
	034 Add X21, X21, 32
	035 Add X21, X21, 32
	036 Compare W8, 0
	037 JumpIfEqual {44}
	038 Move X8, [X20]
	039 Move [X20+1032], W31
	040 Move X0, X20
	041 Move X9, [X8+2168]
	042 Move X1, [X8+2176]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X0, X20
	045 Move X1, X31
	046 Call VisualElement.get_panel, X0
	047 Compare X0, 0
	048 JumpIfEqual {108}
	049 Move X8, [X20]
	050 Move W23, [X20+1008]
	051 And W1, W19, 1
	052 Move X0, X20
	053 Move X9, [X8+2184]
	054 Move X2, [X8+2192]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X21]
	057 Move W19, [X20+1008]
	058 Move X8, [X8+192]
	059 Move X0, [X8+80]
	060 Move W8, [X0+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {66}
	065 Call 0x1C5D684
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X8, [X21]
	071 Move X22, 0x1980000
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CSET not yet implemented."
	074 Move X8, [X8+192]
	075 Move X22, [X22+3584]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSET not yet implemented."
	078 Move X2, [X8+72]
	079 Call 0x28F3FFC, X0, X1
	080 Move X19, X0
	081 Compare X0, 0
	082 JumpIfEqual {136}
	083 Move X0, X19
	084 Move X1, X20
	085 Move X2, X31
	086 Call EventBase.set_target, X0, X1
	087 Move X8, [X20]
	088 Move X9, [X8+408]
	089 Move X2, [X8+416]
	090 Move X0, X20
	091 Move X1, X19
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X20, X31
	094 Move X8, [X19]
	095 Move X1, [X22]
	096 NotImplemented "Instruction LDRH not yet implemented."
	097 Compare X9, 0
	098 JumpIfEqual {105}
	099 Move X10, [X8+176]
	100 Add X10, X10, 8
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Subtract X9, X9, 1
	104 Add X10, X10, 16
	105 Move X0, X19
	106 Move W2, W31
	107 Call 0x1C5D788
	108 Move X8, [X20]
	109 And W1, W19, 1
	110 Move X0, X20
	111 Move X20, [X31+32]
	112 Move X19, [X31+40]
	113 Move X3, [X8+2184]
	114 Move X2, [X8+2192]
	115 Move X22, [X31+16]
	116 Move X21, [X31+24]
	117 Move X30, [X31+48]
	118 Move X23, [X31+56]
	119 CallNoReturn X3
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Add X8, X8, X9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X1, [X0+8]
	125 Move X0, X19
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Compare X20, 0
	128 JumpIfNotEqual {137}
	129 Move X20, [X31+32]
	130 Move X19, [X31+40]
	131 Move X22, [X31+16]
	132 Move X21, [X31+24]
	133 Move X30, [X31+48]
	134 Move X23, [X31+56]
	135 Return 
	136 Call 0x1C17F20
	137 Move X0, X20
	138 Call 0x1C17F18
	139 Move X21, X0
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X0, X21
	142 Call 0x3EB2AD0
	143 Move X20, [X0]
	144 Call 0x3EB2AE0
	145 Compare X19, 0
	146 JumpIfNotEqual {94}
	147 Move X20, X31
	148 Move X21, X0
	149 Compare X19, 0
	150 JumpIfEqual {172}
	151 Move X8, [X19]
	152 Move X1, [X22]
	153 NotImplemented "Instruction LDRH not yet implemented."
	154 Compare X9, 0
	155 JumpIfEqual {162}
	156 Move X10, [X8+176]
	157 Add X10, X10, 8
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Subtract X9, X9, 1
	161 Add X10, X10, 16
	162 Move X0, X19
	163 Move W2, W31
	164 Call 0x1C5D788
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Add X8, X8, X9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X1, [X0+8]
	170 Move X0, X19
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Compare X20, 0
	173 JumpIfNotEqual {176}
	174 Move X0, X21
	175 Call 0x1D2D690
	176 Move X0, X20
	177 Call 0x1C17F18
	178 Call 0x1991590

Method: UnityEngine.UIElements.Label get_labelElement()

Disassembly:
	0x027742E0 LDR X8, [X19 + 0x20]
	0x027742E4 MOV X0, X20

ISIL:
	001 Move X0, [X0+1024]
	002 Return X0

Method: System.Void set_labelElement(UnityEngine.UIElements.Label value)

Disassembly:
	0x027742E8 LDR X8, [X8 + 0xC0]
	0x027742EC LDR X1, [X8 + 0xF8]

ISIL:
	001 Move [X0+1024], X1
	002 Return 

Method: System.String get_label()

Disassembly:
	0x027742F0 BL 0x2774320
	0x027742F4 LDP X20, X19, [X31 + 0x40]
	0x027742F8 LDP X22, X21, [X31 + 0x30]
	0x027742FC LDP X24, X23, [X31 + 0x20]
	0x02774300 LDR X30, [X31 + 0x10]
	0x02774304 ADD X31, X31, 0x50
	0x02774308 RET
	0x0277430C BL 0x1C16F20
	0x02774310 LDR X8, [X2 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+1024]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+2840]
	007 Move X1, [X8+2848]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void set_label(System.String value)

Disassembly:
	0x02774314 LDR X8, [X8 + 0xC0]
	0x02774318 LDR X1, [X8 + 0xF8]
	0x0277431C B 0x2774320
	0x02774320 STP D13, D12, [X31 - 0x70]!
	0x02774324 STP D11, D10, [X31 + 0x10]
	0x02774328 STP D9, D8, [X31 + 0x20]
	0x0277432C STP X30, X25, [X31 + 0x30]
	0x02774330 STP X24, X23, [X31 + 0x40]
	0x02774334 STP X22, X21, [X31 + 0x50]
	0x02774338 STP X20, X19, [X31 + 0x60]
	0x0277433C ADRP X21, 0x1C66000
	0x02774340 LDRB W8, [X21 + 0x7DA]
	0x02774344 MOV X20, X1
	0x02774348 MOV X19, X0
	0x0277434C TBNZ X8, 0x0, 0x2774370
	0x02774350 ADRP X0, 0x19A8000
	0x02774354 LDR X0, [X0 + 0x120]
	0x02774358 BL 0x1C16CF4
	0x0277435C ADRP X0, 0x19A8000
	0x02774360 LDR X0, [X0 + 0x128]
	0x02774364 BL 0x1C16CF4
	0x02774368 MOVZ W8, 0x1
	0x0277436C STRB W8, [X21 + 0x7DA]
	0x02774370 LDR X8, [X20 + 0x20]
	0x02774374 LDR X8, [X8 + 0xC0]
	0x02774378 LDR X0, [X8 + 0x8]
	0x0277437C LDRB W8, [X0 + 0x135]
	0x02774380 TBNZ X8, 0x0, 0x2774388
	0x02774384 BL 0x1C5C684
	0x02774388 LDR W8, [X0 + 0xE0]
	0x0277438C CBNZ W8, 0x2774394
	0x02774390 BL 0x1C16DFC
	0x02774394 LDR X8, [X20 + 0x20]
	0x02774398 LDR X8, [X8 + 0xC0]
	0x0277439C LDR X0, [X8 + 0x8]
	0x027743A0 LDRB W8, [X0 + 0x135]
	0x027743A4 TBNZ X8, 0x0, 0x27743AC
	0x027743A8 BL 0x1C5C684
	0x027743AC CBZ X19, 0x2774804
	0x027743B0 LDR X8, [X0 + 0xB8]
	0x027743B4 MOV X0, X19
	0x027743B8 MOV X2, X31
	0x027743BC LDR X1, [X8 + 0x30]
	0x027743C0 BL 0x3DF2F6C
	0x027743C4 TBZ X0, 0x0, 0x27747A4
	0x027743C8 LDR V12, [X19 + 0x3DC]
	0x027743CC MOV X0, X19
	0x027743D0 MOV X1, X31
	0x027743D4 BL 0x3DEDC10
	0x027743D8 LDR X0, [X19 + 0x428]
	0x027743DC CBZ X0, 0x2774804
	0x027743E0 MOV X1, X31
	0x027743E4 MOV V9.16B, V0.16B
	0x027743E8 BL 0x3DEDC10
	0x027743EC LDR X0, [X19 + 0x428]
	0x027743F0 CBZ X0, 0x2774804
	0x027743F4 MOV X1, X31
	0x027743F8 MOV V10.16B, V0.16B
	0x027743FC BL 0x3DE0EB8
	0x02774400 CBZ X0, 0x2774804
	0x02774404 ADRP X24, 0x19A8000
	0x02774408 LDR X8, [X0]
	0x0277440C LDR X24, [X24 + 0x120]
	0x02774410 MOV X20, X0
	0x02774414 LDRH W9, [X8 + 0x12E]
	0x02774418 LDR X1, [X24]
	0x0277441C CBZ X9, 0x2774440
	0x02774420 LDR X10, [X8 + 0xB0]
	0x02774424 ADD X10, X10, 0x8
	0x02774428 LDUR X11, [X10 - 0x8]
	0x0277442C CMP X11, X1
	0x02774430 B.EQ 0x2774450
	0x02774434 SUBS X9, X9, 0x1
	0x02774438 ADD X10, X10, 0x10
	0x0277443C B.NE 0x2774428
	0x02774440 MOVZ W2, 0x1D
	0x02774444 MOV X0, X20
	0x02774448 BL 0x1C5C788
	0x0277444C B 0x2774460
	0x02774450 LDR W9, [X10]
	0x02774454 ADD W9, W9, 0x1D
	0x02774458 ADD X8, X8, W9, 0x4, SXTW
	0x0277445C ADD X0, X8, 0x138
	0x02774460 LDP X8, X1, [X0]
	0x02774464 MOV X0, X20
	0x02774468 BLR X8
	0x0277446C MOV X0, X19
	0x02774470 MOV X1, X31
	0x02774474 MOV V11.16B, V0.16B
	0x02774478 BL 0x3DE0EB8
	0x0277447C CBZ X0, 0x2774804
	0x02774480 LDR X8, [X0]
	0x02774484 LDR X1, [X24]
	0x02774488 MOV X20, X0
	0x0277448C LDRH W9, [X8 + 0x12E]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+8], X31
	007 Move X19, X0
	008 Move X0, [X0+1024]
	009 Compare X0, 0
	010 JumpIfEqual {125}
	011 Move X8, [X0]
	012 Move X21, X1
	013 Move X20, X2
	014 Move X9, [X8+2840]
	015 Move X1, [X8+2848]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move X1, X21
	018 Move X2, X31
	019 Call String.op_Inequality, X0, X1
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {119}
	024 Move X0, [X19+1024]
	025 Compare X0, 0
	026 JumpIfEqual {125}
	027 Move X8, [X0]
	028 Move X1, X21
	029 Move X9, [X8+2856]
	030 Move X2, [X8+2864]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X0, [X19+1024]
	033 Compare X0, 0
	034 JumpIfEqual {125}
	035 Move X8, [X0]
	036 Move X9, [X8+2840]
	037 Move X1, [X8+2848]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X1, X31
	040 Call String.IsNullOrEmpty, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {77}
	045 Move X8, [X20+32]
	046 Move X8, [X8+192]
	047 Move X0, [X8+8]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X8, [X20+32]
	059 Move X8, [X8+192]
	060 Move X0, [X8+8]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X8, [X0+184]
	068 Move X0, X19
	069 Move X2, X31
	070 Move X1, [X8+24]
	071 Call VisualElement.AddToClassList, X0, X1
	072 Move X0, [X19+1024]
	073 Compare X0, 0
	074 JumpIfEqual {125}
	075 Move X1, X31
	076 Call VisualElement.RemoveFromHierarchy, X0
	077 Move X1, [X19+1024]
	078 Move X0, X19
	079 Move X2, X31
	080 Call VisualElement.Contains, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {119}
	085 Move X8, [X19+888]
	086 Add X0, X31, 8
	087 Move W1, W31
	088 Move X3, X31
	089 Move [X31+8], X8
	090 Move X2, [X19+1024]
	091 Call Hierarchy.Insert, X0, X1, X2
	092 Move X8, [X20+32]
	093 Move X8, [X8+192]
	094 Move X0, [X8+8]
	095 Move W8, [X0+309]
	096 Move TEMP, X8
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {101}
	100 Call 0x1C5D684
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X8, [X20+32]
	106 Move X8, [X8+192]
	107 Move X0, [X8+8]
	108 Move W8, [X0+309]
	109 Move TEMP, X8
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {114}
	113 Call 0x1C5D684
	114 Move X8, [X0+184]
	115 Move X0, X19
	116 Move X2, X31
	117 Move X1, [X8+24]
	118 Call VisualElement.RemoveFromClassList, X0, X1
	119 Move X20, [X31+32]
	120 Move X19, [X31+40]
	121 Move X30, [X31+16]
	122 Move X21, [X31+24]
	123 Add X31, X31, 48
	124 Return 
	125 Call 0x1C17F20

Method: System.Boolean get_showMixedValue()

Disassembly:
	0x02774490 CBZ X9, 0x27744B4
	0x02774494 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move W0, [X0+1032]
	002 Return X0

Method: System.Void set_showMixedValue(System.Boolean value)

Disassembly:
	0x02774498 ADD X10, X10, 0x8
	0x0277449C LDUR X11, [X10 - 0x8]
	0x027744A0 CMP X11, X1
	0x027744A4 B.EQ 0x27744C4
	0x027744A8 SUBS X9, X9, 0x1
	0x027744AC ADD X10, X10, 0x10
	0x027744B0 B.NE 0x277449C
	0x027744B4 MOVZ W2, 0x1D
	0x027744B8 MOV X0, X20
	0x027744BC BL 0x1C5C788

ISIL:
	001 Move W9, [X0+1032]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Return 
	005 Move X9, [X0]
	006 Move [X0+1032], W8
	007 Move X2, [X9+2168]
	008 Move X1, [X9+2176]
	009 CallNoReturn X2

Method: UnityEngine.UIElements.Label get_mixedValueLabel()

Disassembly:
	0x027744C0 B 0x27744D4
	0x027744C4 LDR W9, [X10]
	0x027744C8 ADD W9, W9, 0x1D
	0x027744CC ADD X8, X8, W9, 0x4, SXTW
	0x027744D0 ADD X0, X8, 0x138
	0x027744D4 LDP X8, X1, [X0]
	0x027744D8 MOV X0, X20
	0x027744DC BLR X8
	0x027744E0 LDR V13, [X19 + 0x3E0]
	0x027744E4 MOV X0, X19
	0x027744E8 MOV X1, X31
	0x027744EC MOV V8.16B, V0.16B
	0x027744F0 BL 0x3DE0EB8
	0x027744F4 CBZ X0, 0x2774804
	0x027744F8 LDR X8, [X0]
	0x027744FC LDR X1, [X24]
	0x02774500 MOV X20, X0
	0x02774504 LDRH W9, [X8 + 0x12E]
	0x02774508 CBZ X9, 0x277452C
	0x0277450C LDR X10, [X8 + 0xB0]
	0x02774510 ADD X10, X10, 0x8
	0x02774514 LDUR X11, [X10 - 0x8]
	0x02774518 CMP X11, X1
	0x0277451C B.EQ 0x277453C
	0x02774520 SUBS X9, X9, 0x1
	0x02774524 ADD X10, X10, 0x10
	0x02774528 B.NE 0x2774514
	0x0277452C MOVZ W2, 0x1D
	0x02774530 MOV X0, X20
	0x02774534 BL 0x1C5C788
	0x02774538 B 0x277454C
	0x0277453C LDR W9, [X10]
	0x02774540 ADD W9, W9, 0x1D
	0x02774544 ADD X8, X8, W9, 0x4, SXTW
	0x02774548 ADD X0, X8, 0x138
	0x0277454C LDP X8, X1, [X0]
	0x02774550 MOV X0, X20
	0x02774554 BLR X8
	0x02774558 LDR X20, [X19 + 0x420]
	0x0277455C CBNZ X20, 0x2774564
	0x02774560 LDR X20, [X19 + 0x428]
	0x02774564 LDR X0, [X19 + 0x400]
	0x02774568 CBZ X0, 0x2774804
	0x0277456C FSUB S1, S9, S10
	0x02774570 FSUB S10, S1, S11
	0x02774574 FSUB S1, S13, S10
	0x02774578 MOV X1, X31
	0x0277457C FSUB S9, S1, S0
	0x02774580 BL 0x3DE7EEC
	0x02774584 FMOV S0, W31
	0x02774588 MOV X21, X0
	0x0277458C FMAXNM S0, S9, S0
	0x02774590 MOV X0, X31
	0x02774594 BL 0x3DFED98
	0x02774598 CBZ X21, 0x2774804
	0x0277459C ADRP X25, 0x19A8000
	0x027745A0 LDR X9, [X21]
	0x027745A4 LDR X25, [X25 + 0x128]
	0x027745A8 MOV X8, X1
	0x027745AC MOV X22, X0
	0x027745B0 LDRH W10, [X9 + 0x12E]
	0x027745B4 LDR X1, [X25]
	0x027745B8 AND X23, X8, 0x0
	0x027745BC CBZ X10, 0x27745E0
	0x027745C0 LDR X8, [X9 + 0xB0]
	0x027745C4 ADD X8, X8, 0x8
	0x027745C8 LDUR X11, [X8 - 0x8]
	0x027745CC CMP X11, X1
	0x027745D0 B.EQ 0x27745F0
	0x027745D4 SUBS X10, X10, 0x1
	0x027745D8 ADD X8, X8, 0x10
	0x027745DC B.NE 0x27745C8
	0x027745E0 MOVZ W2, 0x20
	0x027745E4 MOV X0, X21
	0x027745E8 BL 0x1C5C788
	0x027745EC B 0x2774600

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1C67000
	007 Move W8, [X21+2002]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x19A9000
	015 Move X0, [X0+304]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2002], W8
	019 Move X0, [X19+1040]
	020 Compare X0, 0
	021 JumpIfNotEqual {95}
	022 Move X8, [X20+32]
	023 Move X8, [X8+192]
	024 Move X0, [X8+8]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X8, [X20+32]
	036 Move X8, [X8+192]
	037 Move X0, [X8+8]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X9, 0x19A9000
	045 Move X8, [X0+184]
	046 Move X9, [X9+304]
	047 Move X22, [X8+64]
	048 Move X0, [X9]
	049 Call 0x1C17F10
	050 Move X1, X22
	051 Move X2, X31
	052 Move X21, X0
	053 Call Label..ctor, X0, X1
	054 Compare X21, 0
	055 JumpIfEqual {101}
	056 Move W8, 1
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W9, TEMP
	060 Move [X21+32], W8
	061 Move [X21+36], W9
	062 Move [X19+1040], X21
	063 Move X8, [X20+32]
	064 Move X8, [X8+192]
	065 Move X0, [X8+8]
	066 Move W8, [X0+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {72}
	071 Call 0x1C5D684
	072 Move X8, [X0+184]
	073 Move X0, X21
	074 Move X2, X31
	075 Move X1, [X8+8]
	076 Call VisualElement.AddToClassList, X0, X1
	077 Move X8, [X20+32]
	078 Move X20, [X19+1040]
	079 Move X8, [X8+192]
	080 Move X0, [X8+8]
	081 Move W8, [X0+309]
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {87}
	086 Call 0x1C5D684
	087 Compare X20, 0
	088 JumpIfEqual {101}
	089 Move X8, [X0+184]
	090 Move X0, X20
	091 Move X2, X31
	092 Move X1, [X8+40]
	093 Call VisualElement.AddToClassList, X0, X1
	094 Move X0, [X19+1040]
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 Return X0
	101 Call 0x1C17F20

Method: System.Action UnityEngine.UIElements.IEditableElement.get_editingStarted()

Disassembly:
	0x027745F0 LDR W8, [X8]
	0x027745F4 ADD W8, W8, 0x20

ISIL:
	001 Move X0, [X0+1072]
	002 Return X0

Method: System.Action UnityEngine.UIElements.IEditableElement.get_editingEnded()

Disassembly:
	0x027745F8 ADD X8, X9, W8, 0x4, SXTW
	0x027745FC ADD X0, X8, 0x138

ISIL:
	001 Move X0, [X0+1080]
	002 Return X0

Method: System.Void .ctor(System.String label)

Disassembly:
	0x02774600 LDP X8, X3, [X0]
	0x02774604 MOV X0, X21
	0x02774608 MOV X1, X22
	0x0277460C MOV X2, X23
	0x02774610 BLR X8
	0x02774614 CBZ X20, 0x2774804
	0x02774618 MOV X0, X20
	0x0277461C MOV X1, X31
	0x02774620 BL 0x3DE0EB8
	0x02774624 CBZ X0, 0x2774804
	0x02774628 LDR X8, [X0]
	0x0277462C LDR X1, [X24]
	0x02774630 MOV X20, X0
	0x02774634 LDRH W9, [X8 + 0x12E]
	0x02774638 CBZ X9, 0x277465C
	0x0277463C LDR X10, [X8 + 0xB0]
	0x02774640 ADD X10, X10, 0x8
	0x02774644 LDUR X11, [X10 - 0x8]
	0x02774648 CMP X11, X1
	0x0277464C B.EQ 0x277466C
	0x02774650 SUBS X9, X9, 0x1
	0x02774654 ADD X10, X10, 0x10
	0x02774658 B.NE 0x2774644
	0x0277465C MOVZ W2, 0x2C
	0x02774660 MOV X0, X20
	0x02774664 BL 0x1C5C788
	0x02774668 B 0x277467C
	0x0277466C LDR W9, [X10]
	0x02774670 ADD W9, W9, 0x2C
	0x02774674 ADD X8, X8, W9, 0x4, SXTW
	0x02774678 ADD X0, X8, 0x138
	0x0277467C LDP X8, X1, [X0]
	0x02774680 MOV X0, X20
	0x02774684 BLR X8
	0x02774688 LDR X0, [X19 + 0x400]
	0x0277468C CBZ X0, 0x2774804
	0x02774690 LDR V11, [X19 + 0x3E4]
	0x02774694 LDR V13, [X19 + 0x3D8]
	0x02774698 MOV X1, X31
	0x0277469C MOV V9.16B, V0.16B
	0x027746A0 BL 0x3DE0EB8
	0x027746A4 CBZ X0, 0x2774804
	0x027746A8 LDR X8, [X0]
	0x027746AC LDR X1, [X24]
	0x027746B0 FADD S0, S12, S10
	0x027746B4 FADD S1, S9, S11
	0x027746B8 LDRH W9, [X8 + 0x12E]
	0x027746BC FADD S0, S0, S8
	0x027746C0 FMUL S1, S1, S13
	0x027746C4 MOV X20, X0
	0x027746C8 FSUB S8, S1, S0
	0x027746CC CBZ X9, 0x27746F0
	0x027746D0 LDR X10, [X8 + 0xB0]
	0x027746D4 ADD X10, X10, 0x8
	0x027746D8 LDUR X11, [X10 - 0x8]
	0x027746DC CMP X11, X1
	0x027746E0 B.EQ 0x2774700
	0x027746E4 SUBS X9, X9, 0x1
	0x027746E8 ADD X10, X10, 0x10
	0x027746EC B.NE 0x27746D8
	0x027746F0 MOVZ W2, 0x2C
	0x027746F4 MOV X0, X20
	0x027746F8 BL 0x1C5C788
	0x027746FC B 0x2774710
	0x02774700 LDR W9, [X10]
	0x02774704 ADD W9, W9, 0x2C
	0x02774708 ADD X8, X8, W9, 0x4, SXTW
	0x0277470C ADD X0, X8, 0x138
	0x02774710 LDP X8, X1, [X0]
	0x02774714 MOV X0, X20
	0x02774718 BLR X8
	0x0277471C ADRP X8, 0xFFFFFFFFFE375000
	0x02774720 LDR V1, [X8 + 0xF9C]
	0x02774724 FABD S0, S0, S0
	0x02774728 FCMP S0, S1
	0x0277472C B.LE 0x27747A4
	0x02774730 LDR X0, [X19 + 0x400]
	0x02774734 CBZ X0, 0x2774804
	0x02774738 MOV X1, X31
	0x0277473C BL 0x3DE7EEC
	0x02774740 FMOV S0, W31
	0x02774744 MOV X19, X0
	0x02774748 FMAX S0, S8, S0
	0x0277474C MOV X0, X31
	0x02774750 BL 0x3DFED98
	0x02774754 CBZ X19, 0x2774804
	0x02774758 LDR X9, [X19]
	0x0277475C MOV X8, X1
	0x02774760 LDR X1, [X25]
	0x02774764 MOV X20, X0
	0x02774768 LDRH W10, [X9 + 0x12E]
	0x0277476C AND X21, X8, 0x0
	0x02774770 CBZ X10, 0x2774794
	0x02774774 LDR X8, [X9 + 0xB0]
	0x02774778 ADD X8, X8, 0x8
	0x0277477C LDUR X11, [X8 - 0x8]
	0x02774780 CMP X11, X1
	0x02774784 B.EQ 0x27747C4
	0x02774788 SUBS X10, X10, 0x1
	0x0277478C ADD X8, X8, 0x10
	0x02774790 B.NE 0x277477C
	0x02774794 MOVZ W2, 0x36
	0x02774798 MOV X0, X19
	0x0277479C BL 0x1C5C788
	0x027747A0 B 0x27747D4
	0x027747A4 LDP X20, X19, [X31 + 0x60]
	0x027747A8 LDP X22, X21, [X31 + 0x50]
	0x027747AC LDP X24, X23, [X31 + 0x40]
	0x027747B0 LDP X30, X25, [X31 + 0x30]
	0x027747B4 LDP D9, D8, [X31 + 0x20]
	0x027747B8 LDP D11, D10, [X31 + 0x10]
	0x027747BC LDP D13, D12, [X31], #0x70
	0x027747C0 RET
	0x027747C4 LDR W8, [X8]
	0x027747C8 ADD W8, W8, 0x36
	0x027747CC ADD X8, X9, W8, 0x4, SXTW
	0x027747D0 ADD X0, X8, 0x138
	0x027747D4 LDP X4, X3, [X0]
	0x027747D8 MOV X0, X19
	0x027747DC MOV X1, X20
	0x027747E0 MOV X2, X21
	0x027747E4 LDP X20, X19, [X31 + 0x60]
	0x027747E8 LDP X22, X21, [X31 + 0x50]
	0x027747EC LDP X24, X23, [X31 + 0x40]
	0x027747F0 LDP X30, X25, [X31 + 0x30]
	0x027747F4 LDP D9, D8, [X31 + 0x20]
	0x027747F8 LDP D11, D10, [X31 + 0x10]
	0x027747FC LDP D13, D12, [X31], #0x70
	0x02774800 BR X4
	0x02774804 BL 0x1C16F20
	0x02774808 LDR X8, [X0 + 0x3F8]
	0x0277480C CBZ X8, 0x2774824
	0x02774810 LDR X3, [X8 + 0x18]
	0x02774814 LDR X0, [X8 + 0x40]
	0x02774818 LDR X2, [X8 + 0x28]
	0x0277481C AND W1, W1, 0x1
	0x02774820 BR X3
	0x02774824 AND W0, W1, 0x1
	0x02774828 RET
	0x0277482C STR X30, [X31 - 0x20]!
	0x02774830 STP X20, X19, [X31 + 0x10]
	0x02774834 ADRP X0, 0x1988000
	0x02774838 LDR X0, [X0 + 0x758]
	0x0277483C MOV X19, X1
	0x02774840 BL 0x1C16D08
	0x02774844 BL 0x1C16F10
	0x02774848 MOV X1, X31
	0x0277484C MOV X20, X0
	0x02774850 BL 0x3380288
	0x02774854 MOV X0, X20
	0x02774858 MOV X1, X19
	0x0277485C BL 0x1C16DEC
	0x02774860 STP X30, X19, [X31 - 0x10]!
	0x02774864 LDRB W8, [X0 + 0x418]
	0x02774868 MOV X19, X0
	0x0277486C CBNZ W8, 0x2774890
	0x02774870 LDR X8, [X19 + 0x3F8]
	0x02774874 CBZ X8, 0x2774890
	0x02774878 LDR X9, [X8 + 0x18]
	0x0277487C LDR X0, [X8 + 0x40]
	0x02774880 LDR X2, [X8 + 0x28]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1C67000
	011 Move W8, [X22+2003]
	012 Move X20, X2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x19AA000
	020 Move X0, [X0+3424]
	021 Call 0x1C17CF4
	022 Move X0, 0x19AA000
	023 Move X0, [X0+3432]
	024 Call 0x1C17CF4
	025 Move X0, 0x19AA000
	026 Move X0, [X0+3440]
	027 Call 0x1C17CF4
	028 Move X0, 0x19AA000
	029 Move X0, [X0+3448]
	030 Call 0x1C17CF4
	031 Move X0, 0x19A9000
	032 Move X0, [X0+304]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2003], W8
	036 Move X0, X19
	037 Move X1, X31
	038 Call BindableElement..ctor, X0
	039 Compare X19, 0
	040 JumpIfEqual {193}
	041 Move W1, 1
	042 Move X0, X19
	043 Move X2, X31
	044 Move W22, 1
	045 Call VisualElement.set_isCompositeRoot, X0, X1
	046 Move W1, 1
	047 Move X0, X19
	048 Move X2, X31
	049 Move [X19+32], W22
	050 Move [X19+36], W31
	051 Call Focusable.set_excludeFromFocusRing, X0, X1
	052 Move W1, 1
	053 Move X0, X19
	054 Move X2, X31
	055 Call Focusable.set_delegatesFocus, X0, X1
	056 Move X8, [X20+32]
	057 Move X8, [X8+192]
	058 Move X0, [X8+8]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X8, [X20+32]
	070 Move X22, 0x19A9000
	071 Move X8, [X8+192]
	072 Move X0, [X8+8]
	073 Move W8, [X0+309]
	074 Move X22, [X22+304]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move X8, [X0+184]
	081 Move X0, X19
	082 Move X2, X31
	083 Move X1, [X8]
	084 Call VisualElement.AddToClassList, X0, X1
	085 Move X0, [X22]
	086 Call 0x1C17F10
	087 Move X1, X31
	088 Move X22, X0
	089 Call Label..ctor, X0
	090 Compare X22, 0
	091 JumpIfEqual {193}
	092 Move W8, 1
	093 Move TEMP, 0
	094 Not TEMP
	095 Move W9, TEMP
	096 Move [X22+32], W8
	097 Move [X22+36], W9
	098 Move X8, [X20+32]
	099 Move X8, [X8+192]
	100 Move [X19+1024], X22
	101 Move X0, [X8+8]
	102 Move W8, [X0+309]
	103 Move TEMP, X8
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {108}
	107 Call 0x1C5D684
	108 Move X8, [X0+184]
	109 Move X26, 0x19AA000
	110 Move X26, [X26+3440]
	111 Move X25, 0x19AA000
	112 Move X1, [X8+8]
	113 Move X24, 0x19AA000
	114 Move X23, 0x19AA000
	115 Move X25, [X25+3424]
	116 Move X24, [X24+3448]
	117 Move X23, [X23+3432]
	118 Move X0, X22
	119 Move X2, X31
	120 Call VisualElement.AddToClassList, X0, X1
	121 Move X8, [X20+32]
	122 Move X8, [X8+192]
	123 Compare X21, 0
	124 JumpIfEqual {129}
	125 Move X2, [X8+128]
	126 Move X0, X19
	127 Move X1, X21
	128 Call 0x2774314, X0, X1
	129 Move X0, [X8+8]
	130 Move W8, [X0+309]
	131 Move TEMP, X8
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {136}
	135 Call 0x1C5D684
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X8, [X20+32]
	141 Move X8, [X8+192]
	142 Move X0, [X8+8]
	143 Move W8, [X0+309]
	144 Move TEMP, X8
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfEqual {149}
	148 Call 0x1C5D684
	149 Move X8, [X0+184]
	150 Move X0, X19
	151 Move X2, X31
	152 Move X1, [X8+24]
	153 Call VisualElement.AddToClassList, X0, X1
	154 Move X0, [X26]
	155 Call 0x1C17F10
	156 Move X8, [X20+32]
	157 Move X1, X19
	158 Move X3, X31
	159 Move X21, X0
	160 Move X8, [X8+192]
	161 Move X2, [X8+136]
	162 Call 0x2D0F824, X0, X1, X2
	163 Move X3, [X25]
	164 Move X0, X19
	165 Move X1, X21
	166 Move W2, W31
	167 Call 0x21A2534, X0, X1, X2
	168 Move X0, [X24]
	169 Call 0x1C17F10
	170 Move X8, [X20+32]
	171 Move X1, X19
	172 Move X3, X31
	173 Move X20, X0
	174 Move X8, [X8+192]
	175 Move X2, [X8+144]
	176 Call 0x2D0F824, X0, X1, X2
	177 Move X3, [X23]
	178 Move X0, X19
	179 Move X1, X20
	180 Move W2, W31
	181 Call 0x21A2534, X0, X1, X2
	182 Move [X19+1000], X31
	183 Move X20, [X31+64]
	184 Move X19, [X31+72]
	185 Move X22, [X31+48]
	186 Move X21, [X31+56]
	187 Move X24, [X31+32]
	188 Move X23, [X31+40]
	189 Move X26, [X31+16]
	190 Move X25, [X31+24]
	191 Move X30, [X31+80]
	192 Return 
	193 Call 0x1C17F20

Method: System.Void .ctor(System.String label, UnityEngine.UIElements.VisualElement visualInput)

Disassembly:
	0x02774884 AND W1, W1, 0x1
	0x02774888 BLR X9
	0x0277488C MOV W1, W0
	0x02774890 LDR X0, [X19 + 0x58]
	0x02774894 AND W8, W1, 0x1
	0x02774898 MOV X1, X31
	0x0277489C STRB W8, [X19 + 0x3F0]
	0x027748A0 BL 0x32277A8
	0x027748A4 TBNZ X0, 0x0, 0x27748B4
	0x027748A8 MOV X0, X19
	0x027748AC MOV X1, X31
	0x027748B0 BL 0x3DF276C
	0x027748B4 MOV X0, X19
	0x027748B8 MOV X1, X31
	0x027748BC BL 0x3DF2134
	0x027748C0 LDRB W8, [X19 + 0x408]
	0x027748C4 CBZ W8, 0x27748E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X3+32]
	006 Move X20, X2
	007 Move X19, X3
	008 Move X21, X0
	009 Move X8, [X8+192]
	010 Move X2, [X8+152]
	011 Call 0x2774600, X0, X1
	012 Move X8, [X19+32]
	013 Move X1, X20
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X0, X21
	017 Move X8, [X8+192]
	018 Move X2, [X8+160]
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]
	021 Call 0x2773DE4, X0, X1
	022 Return 

Method: System.Boolean EqualsCurrentValue(TValueType value)

Disassembly:
	0x027748C8 LDR X8, [X19]
	0x027748CC MOV X0, X19
	0x027748D0 LDR X2, [X8 + 0x878]
	0x027748D4 LDR X1, [X8 + 0x880]
	0x027748D8 LDP X30, X19, [X31], #0x10
	0x027748DC BR X2
	0x027748E0 LDP X30, X19, [X31], #0x10
	0x027748E4 RET
	0x027748E8 STR X30, [X31 - 0x30]!
	0x027748EC STP X22, X21, [X31 + 0x10]
	0x027748F0 STP X20, X19, [X31 + 0x20]
	0x027748F4 ADRP X21, 0x1C66000
	0x027748F8 LDRB W8, [X21 + 0x7DB]
	0x027748FC MOV X19, X1
	0x02774900 MOV X20, X0
	0x02774904 TBNZ X8, 0x0, 0x277491C
	0x02774908 ADRP X0, 0x197F000
	0x0277490C LDR X0, [X0 + 0xE00]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X20, X0
	006 Move W19, W1
	007 Move X8, [X8+192]
	008 Move X8, [X8+168]
	009 Move X0, X8
	010 Call 0x21199DC
	011 Compare X0, 0
	012 JumpIfEqual {22}
	013 Move X8, [X0]
	014 Move W1, [X20+1008]
	015 And W2, W19, 1
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X4, [X8+440]
	019 Move X3, [X8+448]
	020 Move X30, [X31+32]
	021 CallNoReturn X4
	022 Call 0x1C17F20

Method: System.Void OnAttachToPanel(UnityEngine.UIElements.AttachToPanelEvent e)

Disassembly:
	0x02774910 BL 0x1C16CF4
	0x02774914 MOVZ W8, 0x1
	0x02774918 STRB W8, [X21 + 0x7DB]
	0x0277491C CBZ X20, 0x2774A8C
	0x02774920 MOV X0, X20
	0x02774924 MOV X1, X31
	0x02774928 BL 0x3DF28A0
	0x0277492C LDR X8, [X20 + 0x3E8]
	0x02774930 CBZ X8, 0x2774A7C
	0x02774934 MOV X0, X20
	0x02774938 MOV X1, X31
	0x0277493C BL 0x3DF23E8
	0x02774940 LDRB W21, [X20 + 0x3F0]
	0x02774944 MOV X2, X0
	0x02774948 MOV X0, X20
	0x0277494C MOV X1, X20
	0x02774950 MOV X3, X31
	0x02774954 BL 0x3DF245C
	0x02774958 LDR X8, [X19 + 0x20]
	0x0277495C LDR X8, [X8 + 0xC0]
	0x02774960 LDR X0, [X8 + 0xA8]
	0x02774964 BL 0x21189DC
	0x02774968 CBZ X0, 0x2774A8C
	0x0277496C LDR X8, [X0]
	0x02774970 LDRB W2, [X20 + 0x3F0]
	0x02774974 CMP W21, 0x0
	0x02774978 CSET W1, NE
	0x0277497C LDP X9, X3, [X8 + 0x1B8]
	0x02774980 BLR X9
	0x02774984 TBNZ X0, 0x0, 0x2774A7C
	0x02774988 LDR X8, [X19 + 0x20]
	0x0277498C LDRB W22, [X20 + 0x3F0]
	0x02774990 LDR X8, [X8 + 0xC0]
	0x02774994 LDR X0, [X8 + 0x50]
	0x02774998 LDRB W8, [X0 + 0x135]
	0x0277499C TBNZ X8, 0x0, 0x27749A4
	0x027749A0 BL 0x1C5C684
	0x027749A4 LDR W8, [X0 + 0xE0]
	0x027749A8 CBNZ W8, 0x27749B0
	0x027749AC BL 0x1C16DFC
	0x027749B0 LDR X8, [X19 + 0x20]
	0x027749B4 CMP W22, 0x0
	0x027749B8 CSET W1, NE
	0x027749BC CMP W21, 0x0
	0x027749C0 LDR X8, [X8 + 0xC0]
	0x027749C4 CSET W0, NE
	0x027749C8 LDR X2, [X8 + 0x48]
	0x027749CC BL 0x28F2FFC
	0x027749D0 MOV X19, X0
	0x027749D4 CBZ X0, 0x2774A90
	0x027749D8 MOV X0, X19
	0x027749DC MOV X1, X20
	0x027749E0 MOV X2, X31
	0x027749E4 BL 0x3D9C6C8
	0x027749E8 LDR X8, [X20]
	0x027749EC LDRB W1, [X20 + 0x3F0]
	0x027749F0 LDR X9, [X8 + 0x888]
	0x027749F4 LDR X2, [X8 + 0x890]
	0x027749F8 MOV X0, X20
	0x027749FC BLR X9
	0x02774A00 LDR X8, [X20]
	0x02774A04 LDP X9, X2, [X8 + 0x198]
	0x02774A08 MOV X0, X20
	0x02774A0C MOV X1, X19
	0x02774A10 BLR X9
	0x02774A14 MOV X20, X31
	0x02774A18 ADRP X10, 0x197F000
	0x02774A1C LDR X8, [X19]
	0x02774A20 LDR X10, [X10 + 0xE00]
	0x02774A24 LDRH W9, [X8 + 0x12E]
	0x02774A28 LDR X1, [X10]
	0x02774A2C CBZ X9, 0x2774A50
	0x02774A30 LDR X10, [X8 + 0xB0]
	0x02774A34 ADD X10, X10, 0x8
	0x02774A38 LDUR X11, [X10 - 0x8]
	0x02774A3C CMP X11, X1
	0x02774A40 B.EQ 0x2774A60
	0x02774A44 SUBS X9, X9, 0x1
	0x02774A48 ADD X10, X10, 0x10
	0x02774A4C B.NE 0x2774A38
	0x02774A50 MOV X0, X19
	0x02774A54 MOV W2, W31
	0x02774A58 BL 0x1C5C788
	0x02774A5C B 0x2774A6C
	0x02774A60 LDRSW X9, [X10]
	0x02774A64 ADD X8, X8, X9, 0x4, LSL
	0x02774A68 ADD X0, X8, 0x138
	0x02774A6C LDP X8, X1, [X0]
	0x02774A70 MOV X0, X19
	0x02774A74 BLR X8
	0x02774A78 CBNZ X20, 0x2774A94
	0x02774A7C LDP X20, X19, [X31 + 0x20]
	0x02774A80 LDP X22, X21, [X31 + 0x10]
	0x02774A84 LDR X30, [X31], #0x30
	0x02774A88 RET
	0x02774A8C BL 0x1C16F20
	0x02774A90 BL 0x1C16F20
	0x02774A94 MOV X0, X20
	0x02774A98 BL 0x1C16F18
	0x02774A9C B 0x2774AA4
	0x02774AA0 B 0x2774AA4
	0x02774AA4 MOV X21, X0
	0x02774AA8 CMP W1, 0x1
	0x02774AAC B.NE 0x2774AC8
	0x02774AB0 MOV X0, X21
	0x02774AB4 BL 0x3EB1AD0
	0x02774AB8 LDR X20, [X0]
	0x02774ABC BL 0x3EB1AE0
	0x02774AC0 CBNZ X19, 0x2774A18
	0x02774AC4 B 0x2774A78
	0x02774AC8 MOV X20, X31
	0x02774ACC B 0x2774AD4
	0x02774AD0 MOV X21, X0
	0x02774AD4 CBZ X19, 0x2774B38
	0x02774AD8 ADRP X10, 0x197F000
	0x02774ADC LDR X8, [X19]
	0x02774AE0 LDR X10, [X10 + 0xE00]
	0x02774AE4 LDRH W9, [X8 + 0x12E]
	0x02774AE8 LDR X1, [X10]
	0x02774AEC CBZ X9, 0x2774B10
	0x02774AF0 LDR X10, [X8 + 0xB0]
	0x02774AF4 ADD X10, X10, 0x8
	0x02774AF8 LDUR X11, [X10 - 0x8]
	0x02774AFC CMP X11, X1
	0x02774B00 B.EQ 0x2774B20
	0x02774B04 SUBS X9, X9, 0x1
	0x02774B08 ADD X10, X10, 0x10
	0x02774B0C B.NE 0x2774AF8
	0x02774B10 MOV X0, X19
	0x02774B14 MOV W2, W31
	0x02774B18 BL 0x1C5C788
	0x02774B1C B 0x2774B2C
	0x02774B20 LDRSW X9, [X10]
	0x02774B24 ADD X8, X8, X9, 0x4, LSL
	0x02774B28 ADD X0, X8, 0x138
	0x02774B2C LDP X8, X1, [X0]
	0x02774B30 MOV X0, X19
	0x02774B34 BLR X8
	0x02774B38 CBNZ X20, 0x2774B44
	0x02774B3C MOV X0, X21
	0x02774B40 BL 0x1D2C690
	0x02774B44 MOV X0, X20
	0x02774B48 BL 0x1C16F18
	0x02774B4C BL 0x1990590
	0x02774B50 STP X30, X19, [X31 - 0x10]!
	0x02774B54 MOV X19, X0
	0x02774B58 LDR X0, [X0 + 0x400]
	0x02774B5C CBZ X0, 0x2774B94
	0x02774B60 LDR X8, [X0]
	0x02774B64 LDR X9, [X8 + 0xB18]
	0x02774B68 LDR X1, [X8 + 0xB20]
	0x02774B6C BLR X9
	0x02774B70 MOV X1, X31
	0x02774B74 BL 0x32277A8
	0x02774B78 TBNZ X0, 0x0, 0x2774B84
	0x02774B7C LDR X19, [X19 + 0x400]
	0x02774B80 CBZ X19, 0x2774B94
	0x02774B84 MOV X0, X19
	0x02774B88 MOV X1, X31
	0x02774B8C LDP X30, X19, [X31], #0x10
	0x02774B90 B 0x3DEDC10
	0x02774B94 BL 0x1C16F20
	0x02774B98 SUB X31, X31, 0x50
	0x02774B9C STR X30, [X31 + 0x20]
	0x02774BA0 STP X22, X21, [X31 + 0x30]
	0x02774BA4 STP X20, X19, [X31 + 0x40]
	0x02774BA8 ADRP X20, 0x1C66000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1C67000
	008 Move W8, [X22+2004]
	009 Move X20, X2
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x19AA000
	017 Move X0, [X0+1592]
	018 Call 0x1C17CF4
	019 Move X0, 0x19AA000
	020 Move X0, [X0+1624]
	021 Call 0x1C17CF4
	022 Move X0, 0x19AA000
	023 Move X0, [X0+1632]
	024 Call 0x1C17CF4
	025 Move X0, 0x19AA000
	026 Move X0, [X0+1600]
	027 Call 0x1C17CF4
	028 Move X0, 0x19A9000
	029 Move X0, [X0+3712]
	030 Call 0x1C17CF4
	031 Move X0, 0x19AA000
	032 Move X0, [X0+3456]
	033 Call 0x1C17CF4
	034 Move X0, 0x19AA000
	035 Move X0, [X0+3464]
	036 Call 0x1C17CF4
	037 Move X0, 0x19AA000
	038 Move X0, [X0+3472]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+2004], W8
	042 Move X8, [X19]
	043 Move X0, X19
	044 Move X9, [X8+2136]
	045 Move X1, [X8+2144]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Compare X21, 0
	048 JumpIfEqual {198}
	049 Move X21, [X21+144]
	050 Compare X21, 0
	051 JumpIfEqual {191}
	052 Move X10, 0x19A9000
	053 Move X8, [X21]
	054 Move X10, [X10+3712]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Move X1, [X10]
	057 Compare X9, 0
	058 JumpIfEqual {65}
	059 Move X10, [X8+176]
	060 Add X10, X10, 8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract X9, X9, 1
	064 Add X10, X10, 16
	065 Move W2, 2
	066 Move X0, X21
	067 Call 0x1C5D788
	068 Move W9, [X10]
	069 Add W9, W9, 2
	070 Add X8, X8, W9
	071 Add X0, X8, 312
	072 Move X8, [X0]
	073 Move X1, [X0+8]
	074 Move X0, X21
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare W0, 0
	077 JumpIfEqual {191}
	078 Compare X19, 0
	079 JumpIfEqual {198}
	080 Move X0, X19
	081 Move X1, X31
	082 Call VisualElement.get_parent, X0
	083 Compare X0, 0
	084 JumpIfEqual {114}
	085 Move X22, 0x19AA000
	086 Move X23, 0x19AA000
	087 Move X22, [X22+3464]
	088 Move X23, [X23+3472]
	089 Move X21, X0
	090 Move X1, [X22]
	091 Move X0, X21
	092 Move X2, X31
	093 Call VisualElement.ClassListContains, X0, X1
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {99}
	098 Move [X19+1064], X21
	099 Move X1, [X23]
	100 Move X0, X21
	101 Move X2, X31
	102 Call VisualElement.ClassListContains, X0, X1
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {113}
	107 Move X0, X21
	108 Move X1, X31
	109 Call VisualElement.get_parent, X0
	110 Move X21, X0
	111 Compare X0, 0
	112 JumpIfNotEqual {90}
	113 Move [X19+1056], X21
	114 Move X8, [X19+1064]
	115 Compare X8, 0
	116 JumpIfEqual {191}
	117 Move X8, -29917184
	118 Move V0, [X8+125]
	119 Add X8, X19, 984
	120 Move [X8], V0
	121 Move X8, 0x19AA000
	122 Move X8, [X8+1600]
	123 Move X0, [X8]
	124 Call 0x1C17F10
	125 Move X8, [X20+32]
	126 Move X1, X19
	127 Move X3, X31
	128 Move X21, X0
	129 Move X8, [X8+192]
	130 Move X2, [X8+208]
	131 Call 0x2D0F824, X0, X1, X2
	132 Move X8, 0x19AA000
	133 Move X8, [X8+1592]
	134 Move X0, X19
	135 Move X1, X21
	136 Move W2, W31
	137 Move X3, [X8]
	138 Call 0x21A2534, X0, X1, X2
	139 Move X8, [X20+32]
	140 Move X8, [X8+192]
	141 Move X0, [X8+8]
	142 Move W8, [X0+309]
	143 Move TEMP, X8
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {148}
	147 Call 0x1C5D684
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move X8, [X20+32]
	153 Move X8, [X8+192]
	154 Move X0, [X8+8]
	155 Move W8, [X0+309]
	156 Move TEMP, X8
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {161}
	160 Call 0x1C5D684
	161 Move X8, [X0+184]
	162 Move X0, X19
	163 Move X2, X31
	164 Move X1, [X8+56]
	165 Call VisualElement.AddToClassList, X0, X1
	166 Move X8, 0x19AA000
	167 Move X8, [X8+1632]
	168 Move X0, [X8]
	169 Call 0x1C17F10
	170 Move X8, [X20+32]
	171 Move X1, X19
	172 Move X3, X31
	173 Move X20, X0
	174 Move X8, [X8+192]
	175 Move X2, [X8+216]
	176 Call 0x2D0F824, X0, X1, X2
	177 Move X8, 0x19AA000
	178 Move X8, [X8+1624]
	179 Move X0, X19
	180 Move X1, X20
	181 Move X20, [X31+32]
	182 Move X19, [X31+40]
	183 Move X3, [X8]
	184 Move X22, [X31+16]
	185 Move X21, [X31+24]
	186 Move W2, W31
	187 Move X30, [X31+48]
	188 Move X23, [X31+56]
	189 Call 0x21A2534, X0, X1, X2
	190 Return 
	191 Move X20, [X31+32]
	192 Move X19, [X31+40]
	193 Move X22, [X31+16]
	194 Move X21, [X31+24]
	195 Move X30, [X31+48]
	196 Move X23, [X31+56]
	197 Return 
	198 Call 0x1C17F20

Method: System.Void OnDetachFromPanel(UnityEngine.UIElements.DetachFromPanelEvent e)

Disassembly:
	0x02774BAC ADRP X21, 0x19A9000
	0x02774BB0 LDRB W8, [X20 + 0x7DC]
	0x02774BB4 LDR X21, [X21 + 0xDD0]
	0x02774BB8 MOV X19, X0
	0x02774BBC TBNZ X8, 0x0, 0x2774C7C
	0x02774BC0 ADRP X0, 0x19A9000
	0x02774BC4 LDR X0, [X0 + 0xDD8]
	0x02774BC8 BL 0x1C16CF4
	0x02774BCC ADRP X0, 0x19A9000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+2152]
	006 Move X1, [X8+2160]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move [X19+1016], X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.Void RegisterEditingCallbacks()

Disassembly:
	0x02774BD0 LDR X0, [X0 + 0xDE0]
	0x02774BD4 BL 0x1C16CF4
	0x02774BD8 ADRP X0, 0x19A9000
	0x02774BDC LDR X0, [X0 + 0xDE8]
	0x02774BE0 BL 0x1C16CF4
	0x02774BE4 ADRP X0, 0x19A9000
	0x02774BE8 LDR X0, [X0 + 0xDF0]
	0x02774BEC BL 0x1C16CF4
	0x02774BF0 ADRP X0, 0x19A9000
	0x02774BF4 LDR X0, [X0 + 0xDF8]
	0x02774BF8 BL 0x1C16CF4
	0x02774BFC ADRP X0, 0x19A9000
	0x02774C00 LDR X0, [X0 + 0xE00]
	0x02774C04 BL 0x1C16CF4
	0x02774C08 ADRP X0, 0x19A9000
	0x02774C0C LDR X0, [X0 + 0xE08]
	0x02774C10 BL 0x1C16CF4
	0x02774C14 ADRP X0, 0x19A9000
	0x02774C18 LDR X0, [X0 + 0xE10]
	0x02774C1C BL 0x1C16CF4
	0x02774C20 ADRP X0, 0x19A9000
	0x02774C24 LDR X0, [X0 + 0xDD0]
	0x02774C28 BL 0x1C16CF4
	0x02774C2C ADRP X0, 0x19A9000
	0x02774C30 LDR X0, [X0 + 0xE18]
	0x02774C34 BL 0x1C16CF4
	0x02774C38 ADRP X0, 0x19A9000
	0x02774C3C LDR X0, [X0 + 0xE20]
	0x02774C40 BL 0x1C16CF4
	0x02774C44 ADRP X0, 0x19A9000
	0x02774C48 LDR X0, [X0 + 0xE28]
	0x02774C4C BL 0x1C16CF4
	0x02774C50 ADRP X0, 0x19A8000
	0x02774C54 LDR X0, [X0 + 0xEB8]
	0x02774C58 BL 0x1C16CF4
	0x02774C5C ADRP X0, 0x19A9000
	0x02774C60 LDR X0, [X0 + 0xE30]
	0x02774C64 BL 0x1C16CF4
	0x02774C68 ADRP X0, 0x19A8000
	0x02774C6C LDR X0, [X0 + 0xEC0]
	0x02774C70 BL 0x1C16CF4
	0x02774C74 MOVZ W8, 0x1
	0x02774C78 STRB W8, [X20 + 0x7DC]
	0x02774C7C LDR X20, [X21]
	0x02774C80 LDR X0, [X19 + 0x20]!
	0x02774C84 LDRB W8, [X0 + 0x135]
	0x02774C88 TBNZ X8, 0x0, 0x2774C90
	0x02774C8C BL 0x1C5C684
	0x02774C90 LDR X8, [X0 + 0xC0]
	0x02774C94 LDR X0, [X8 + 0x8]
	0x02774C98 LDRB W8, [X0 + 0x135]
	0x02774C9C TBNZ X8, 0x0, 0x2774CA4
	0x02774CA0 BL 0x1C5C684
	0x02774CA4 LDR X8, [X0 + 0xB8]
	0x02774CA8 STR X20, [X8]
	0x02774CAC LDR X0, [X19]
	0x02774CB0 LDRB W8, [X0 + 0x135]
	0x02774CB4 TBNZ X8, 0x0, 0x2774CBC
	0x02774CB8 BL 0x1C5C684
	0x02774CBC LDR X8, [X0 + 0xC0]
	0x02774CC0 LDR X0, [X8 + 0x8]
	0x02774CC4 LDRB W8, [X0 + 0x135]
	0x02774CC8 TBNZ X8, 0x0, 0x2774CD0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1C67000
	008 Move X22, 0x19AA000
	009 Move W8, [X21+2005]
	010 Move X22, [X22+3480]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x19AA000
	018 Move X0, [X0+3488]
	019 Call 0x1C17CF4
	020 Move X0, 0x19AA000
	021 Move X0, [X0+3496]
	022 Call 0x1C17CF4
	023 Move X0, 0x19AA000
	024 Move X0, [X0+3480]
	025 Call 0x1C17CF4
	026 Move X0, 0x19AA000
	027 Move X0, [X0+3504]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2005], W8
	031 Move X0, [X22]
	032 Call 0x1C17F10
	033 Move X8, [X20+32]
	034 Move X1, X19
	035 Move X3, X31
	036 Move X21, X0
	037 Move X8, [X8+192]
	038 Move X2, [X8+232]
	039 Call 0x2D0F824, X0, X1, X2
	040 Compare X19, 0
	041 JumpIfEqual {74}
	042 Move X8, 0x19AA000
	043 Move X8, [X8+3488]
	044 Move X22, 0x19AA000
	045 Move X23, 0x19AA000
	046 Move X0, X19
	047 Move X3, [X8]
	048 Move X22, [X22+3504]
	049 Move X23, [X23+3496]
	050 Move X1, X21
	051 Move W2, W31
	052 Call 0x21A2534, X0, X1, X2
	053 Move X0, [X22]
	054 Call 0x1C17F10
	055 Move X8, [X20+32]
	056 Move X1, X19
	057 Move X3, X31
	058 Move X20, X0
	059 Move X8, [X8+192]
	060 Move X2, [X8+240]
	061 Call 0x2D0F824, X0, X1, X2
	062 Move X3, [X23]
	063 Move X0, X19
	064 Move X1, X20
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move W2, W31
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Call 0x21A2534, X0, X1, X2
	073 Return 
	074 Call 0x1C17F20

Method: System.Void UnregisterEditingCallbacks()

Disassembly:
	0x02774CCC BL 0x1C5C684
	0x02774CD0 LDR X0, [X19]
	0x02774CD4 LDRB W8, [X0 + 0x135]
	0x02774CD8 TBNZ X8, 0x0, 0x2774CE0
	0x02774CDC BL 0x1C5C684
	0x02774CE0 LDR X8, [X0 + 0xC0]
	0x02774CE4 ADRP X20, 0x19A8000
	0x02774CE8 LDR X0, [X8 + 0x8]
	0x02774CEC LDRB W8, [X0 + 0x135]
	0x02774CF0 LDR X20, [X20 + 0xEB8]
	0x02774CF4 TBNZ X8, 0x0, 0x2774CFC
	0x02774CF8 BL 0x1C5C684
	0x02774CFC LDR X8, [X0 + 0xB8]
	0x02774D00 LDR X1, [X20]
	0x02774D04 MOV X2, X31
	0x02774D08 LDR X0, [X8]
	0x02774D0C BL 0x321B938
	0x02774D10 LDR X8, [X19]
	0x02774D14 MOV X20, X0
	0x02774D18 LDRB W9, [X8 + 0x135]
	0x02774D1C TBNZ X9, 0x0, 0x2774D2C
	0x02774D20 MOV X0, X8
	0x02774D24 BL 0x1C5C684
	0x02774D28 MOV X8, X0
	0x02774D2C LDR X8, [X8 + 0xC0]
	0x02774D30 LDR X0, [X8 + 0x8]
	0x02774D34 LDRB W8, [X0 + 0x135]
	0x02774D38 TBNZ X8, 0x0, 0x2774D40
	0x02774D3C BL 0x1C5C684
	0x02774D40 LDR X8, [X0 + 0xB8]
	0x02774D44 STR X20, [X8 + 0x8]
	0x02774D48 LDR X0, [X19]
	0x02774D4C LDRB W8, [X0 + 0x135]
	0x02774D50 TBNZ X8, 0x0, 0x2774D58
	0x02774D54 BL 0x1C5C684
	0x02774D58 LDR X8, [X0 + 0xC0]
	0x02774D5C LDR X0, [X8 + 0x8]
	0x02774D60 LDRB W8, [X0 + 0x135]
	0x02774D64 TBNZ X8, 0x0, 0x2774D6C
	0x02774D68 BL 0x1C5C684
	0x02774D6C LDR X0, [X19]
	0x02774D70 LDRB W8, [X0 + 0x135]
	0x02774D74 TBNZ X8, 0x0, 0x2774D7C
	0x02774D78 BL 0x1C5C684
	0x02774D7C LDR X8, [X0 + 0xC0]
	0x02774D80 ADRP X20, 0x19A8000
	0x02774D84 LDR X0, [X8 + 0x8]
	0x02774D88 LDRB W8, [X0 + 0x135]
	0x02774D8C LDR X20, [X20 + 0xEC0]
	0x02774D90 TBNZ X8, 0x0, 0x2774D98
	0x02774D94 BL 0x1C5C684
	0x02774D98 LDR X8, [X0 + 0xB8]
	0x02774D9C LDR X1, [X20]
	0x02774DA0 MOV X2, X31
	0x02774DA4 LDR X0, [X8]
	0x02774DA8 BL 0x321B938
	0x02774DAC LDR X8, [X19]
	0x02774DB0 MOV X20, X0
	0x02774DB4 LDRB W9, [X8 + 0x135]
	0x02774DB8 TBNZ X9, 0x0, 0x2774DC8
	0x02774DBC MOV X0, X8
	0x02774DC0 BL 0x1C5C684
	0x02774DC4 MOV X8, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1C67000
	008 Move X22, 0x19AA000
	009 Move W8, [X21+2006]
	010 Move X22, [X22+3480]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x19AA000
	018 Move X0, [X0+3512]
	019 Call 0x1C17CF4
	020 Move X0, 0x19AA000
	021 Move X0, [X0+3520]
	022 Call 0x1C17CF4
	023 Move X0, 0x19AA000
	024 Move X0, [X0+3480]
	025 Call 0x1C17CF4
	026 Move X0, 0x19AA000
	027 Move X0, [X0+3504]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2006], W8
	031 Move X0, [X22]
	032 Call 0x1C17F10
	033 Move X8, [X20+32]
	034 Move X1, X19
	035 Move X3, X31
	036 Move X21, X0
	037 Move X8, [X8+192]
	038 Move X2, [X8+232]
	039 Call 0x2D0F824, X0, X1, X2
	040 Compare X19, 0
	041 JumpIfEqual {74}
	042 Move X8, 0x19AA000
	043 Move X8, [X8+3512]
	044 Move X22, 0x19AA000
	045 Move X23, 0x19AA000
	046 Move X0, X19
	047 Move X3, [X8]
	048 Move X22, [X22+3504]
	049 Move X23, [X23+3520]
	050 Move X1, X21
	051 Move W2, W31
	052 Call 0x21A28B4, X0, X1, X2
	053 Move X0, [X22]
	054 Call 0x1C17F10
	055 Move X8, [X20+32]
	056 Move X1, X19
	057 Move X3, X31
	058 Move X20, X0
	059 Move X8, [X8+192]
	060 Move X2, [X8+240]
	061 Call 0x2D0F824, X0, X1, X2
	062 Move X3, [X23]
	063 Move X0, X19
	064 Move X1, X20
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move W2, W31
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Call 0x21A28B4, X0, X1, X2
	073 Return 
	074 Call 0x1C17F20

Method: System.Void StartEditing(UnityEngine.UIElements.EventBase e)

Disassembly:
	0x02774DC8 LDR X8, [X8 + 0xC0]
	0x02774DCC LDR X0, [X8 + 0x8]
	0x02774DD0 LDRB W8, [X0 + 0x135]
	0x02774DD4 TBNZ X8, 0x0, 0x2774DDC
	0x02774DD8 BL 0x1C5C684
	0x02774DDC LDR X8, [X0 + 0xB8]
	0x02774DE0 STR X20, [X8 + 0x10]
	0x02774DE4 LDR X0, [X19]
	0x02774DE8 LDRB W8, [X0 + 0x135]
	0x02774DEC TBNZ X8, 0x0, 0x2774DF4
	0x02774DF0 BL 0x1C5C684
	0x02774DF4 LDR X8, [X0 + 0xC0]
	0x02774DF8 LDR X0, [X8 + 0x8]
	0x02774DFC LDRB W8, [X0 + 0x135]
	0x02774E00 TBNZ X8, 0x0, 0x2774E08
	0x02774E04 BL 0x1C5C684
	0x02774E08 LDR X0, [X19]
	0x02774E0C LDRB W8, [X0 + 0x135]
	0x02774E10 TBNZ X8, 0x0, 0x2774E18
	0x02774E14 BL 0x1C5C684
	0x02774E18 LDR X8, [X0 + 0xC0]
	0x02774E1C ADRP X20, 0x19A9000
	0x02774E20 LDR X0, [X8 + 0x8]
	0x02774E24 LDRB W8, [X0 + 0x135]
	0x02774E28 LDR X20, [X20 + 0xE18]
	0x02774E2C TBNZ X8, 0x0, 0x2774E34
	0x02774E30 BL 0x1C5C684
	0x02774E34 LDR X8, [X0 + 0xB8]
	0x02774E38 LDR X1, [X20]
	0x02774E3C MOV X2, X31
	0x02774E40 LDR X0, [X8]
	0x02774E44 BL 0x321B938
	0x02774E48 LDR X8, [X19]
	0x02774E4C MOV X20, X0
	0x02774E50 LDRB W9, [X8 + 0x135]
	0x02774E54 TBNZ X9, 0x0, 0x2774E64
	0x02774E58 MOV X0, X8
	0x02774E5C BL 0x1C5C684
	0x02774E60 MOV X8, X0
	0x02774E64 LDR X8, [X8 + 0xC0]
	0x02774E68 LDR X0, [X8 + 0x8]
	0x02774E6C LDRB W8, [X0 + 0x135]
	0x02774E70 TBNZ X8, 0x0, 0x2774E78
	0x02774E74 BL 0x1C5C684
	0x02774E78 LDR X8, [X0 + 0xB8]
	0x02774E7C STR X20, [X8 + 0x18]
	0x02774E80 LDR X0, [X19]
	0x02774E84 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1C67000
	005 Move W8, [X20+2007]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x19AA000
	012 Move X0, [X0+3528]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2007], W8
	016 Compare X19, 0
	017 JumpIfEqual {55}
	018 Move X10, 0x19AA000
	019 Move X8, [X19]
	020 Move X10, [X10+3528]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X1, [X10]
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move X0, X19
	032 Move W2, W31
	033 Call 0x1C5D788
	034 NotImplemented "Instruction LDRSW not yet implemented."
	035 Add X8, X8, X9
	036 Add X0, X8, 312
	037 Move X8, [X0]
	038 Move X1, [X0+8]
	039 Move X0, X19
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Compare X0, 0
	042 JumpIfEqual {51}
	043 Move X8, [X0+64]
	044 Move X2, [X0+24]
	045 Move X1, [X0+40]
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X0, X8
	049 Move X30, [X31+32]
	050 CallNoReturn X2
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Return 
	055 Call 0x1C17F20

Method: System.Void EndEditing(UnityEngine.UIElements.EventBase e)

Disassembly:
	0x02774E88 TBNZ X8, 0x0, 0x2774E90
	0x02774E8C BL 0x1C5C684
	0x02774E90 LDR X8, [X0 + 0xC0]
	0x02774E94 LDR X0, [X8 + 0x8]
	0x02774E98 LDRB W8, [X0 + 0x135]
	0x02774E9C TBNZ X8, 0x0, 0x2774EA4
	0x02774EA0 BL 0x1C5C684
	0x02774EA4 LDR X0, [X19]
	0x02774EA8 LDRB W8, [X0 + 0x135]
	0x02774EAC TBNZ X8, 0x0, 0x2774EB4
	0x02774EB0 BL 0x1C5C684
	0x02774EB4 LDR X8, [X0 + 0xC0]
	0x02774EB8 ADRP X20, 0x19A9000
	0x02774EBC LDR X0, [X8 + 0x8]
	0x02774EC0 LDRB W8, [X0 + 0x135]
	0x02774EC4 LDR X20, [X20 + 0xDF8]
	0x02774EC8 TBNZ X8, 0x0, 0x2774ED0
	0x02774ECC BL 0x1C5C684
	0x02774ED0 LDR X8, [X0 + 0xB8]
	0x02774ED4 LDR X1, [X20]
	0x02774ED8 MOV X2, X31
	0x02774EDC LDR X0, [X8 + 0x8]
	0x02774EE0 BL 0x321B938
	0x02774EE4 LDR X8, [X19]
	0x02774EE8 MOV X20, X0
	0x02774EEC LDRB W9, [X8 + 0x135]
	0x02774EF0 TBNZ X9, 0x0, 0x2774F00
	0x02774EF4 MOV X0, X8
	0x02774EF8 BL 0x1C5C684
	0x02774EFC MOV X8, X0
	0x02774F00 LDR X8, [X8 + 0xC0]
	0x02774F04 LDR X0, [X8 + 0x8]
	0x02774F08 LDRB W8, [X0 + 0x135]
	0x02774F0C TBNZ X8, 0x0, 0x2774F14
	0x02774F10 BL 0x1C5C684
	0x02774F14 LDR X8, [X0 + 0xB8]
	0x02774F18 STR X20, [X8 + 0x20]
	0x02774F1C LDR X0, [X19]
	0x02774F20 LDRB W8, [X0 + 0x135]
	0x02774F24 TBNZ X8, 0x0, 0x2774F2C
	0x02774F28 BL 0x1C5C684
	0x02774F2C LDR X8, [X0 + 0xC0]
	0x02774F30 LDR X0, [X8 + 0x8]
	0x02774F34 LDRB W8, [X0 + 0x135]
	0x02774F38 TBNZ X8, 0x0, 0x2774F40
	0x02774F3C BL 0x1C5C684
	0x02774F40 LDR X0, [X19]
	0x02774F44 LDRB W8, [X0 + 0x135]
	0x02774F48 TBNZ X8, 0x0, 0x2774F50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1C67000
	005 Move W8, [X20+2008]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x19AA000
	012 Move X0, [X0+3528]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2008], W8
	016 Compare X19, 0
	017 JumpIfEqual {56}
	018 Move X10, 0x19AA000
	019 Move X8, [X19]
	020 Move X10, [X10+3528]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X1, [X10]
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 1
	032 Move X0, X19
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 1
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X8, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Compare X0, 0
	043 JumpIfEqual {52}
	044 Move X8, [X0+64]
	045 Move X2, [X0+24]
	046 Move X1, [X0+40]
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X0, X8
	050 Move X30, [X31+32]
	051 CallNoReturn X2
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Return 
	056 Call 0x1C17F20

Method: System.Void OnCustomStyleResolved(UnityEngine.UIElements.CustomStyleResolvedEvent evt)

Disassembly:
	0x02774F4C BL 0x1C5C684
	0x02774F50 LDR X8, [X0 + 0xC0]
	0x02774F54 ADRP X20, 0x19A9000
	0x02774F58 LDR X0, [X8 + 0x8]
	0x02774F5C LDRB W8, [X0 + 0x135]
	0x02774F60 LDR X20, [X20 + 0xE00]
	0x02774F64 TBNZ X8, 0x0, 0x2774F6C
	0x02774F68 BL 0x1C5C684
	0x02774F6C LDR X8, [X0 + 0xB8]
	0x02774F70 LDR X1, [X20]
	0x02774F74 MOV X2, X31
	0x02774F78 LDR X0, [X8 + 0x8]
	0x02774F7C BL 0x321B938
	0x02774F80 LDR X8, [X19]
	0x02774F84 MOV X20, X0
	0x02774F88 LDRB W9, [X8 + 0x135]
	0x02774F8C TBNZ X9, 0x0, 0x2774F9C
	0x02774F90 MOV X0, X8
	0x02774F94 BL 0x1C5C684
	0x02774F98 MOV X8, X0
	0x02774F9C LDR X8, [X8 + 0xC0]
	0x02774FA0 LDR X0, [X8 + 0x8]
	0x02774FA4 LDRB W8, [X0 + 0x135]
	0x02774FA8 TBNZ X8, 0x0, 0x2774FB0
	0x02774FAC BL 0x1C5C684
	0x02774FB0 LDR X8, [X0 + 0xB8]
	0x02774FB4 STR X20, [X8 + 0x28]
	0x02774FB8 LDR X0, [X19]
	0x02774FBC LDRB W8, [X0 + 0x135]
	0x02774FC0 TBNZ X8, 0x0, 0x2774FC8
	0x02774FC4 BL 0x1C5C684
	0x02774FC8 LDR X8, [X0 + 0xC0]
	0x02774FCC LDR X0, [X8 + 0x8]
	0x02774FD0 LDRB W8, [X0 + 0x135]
	0x02774FD4 TBNZ X8, 0x0, 0x2774FDC
	0x02774FD8 BL 0x1C5C684
	0x02774FDC LDR X0, [X19]
	0x02774FE0 LDRB W8, [X0 + 0x135]
	0x02774FE4 TBNZ X8, 0x0, 0x2774FEC
	0x02774FE8 BL 0x1C5C684
	0x02774FEC LDR X8, [X0 + 0xC0]
	0x02774FF0 ADRP X20, 0x19A9000
	0x02774FF4 LDR X0, [X8 + 0x8]
	0x02774FF8 LDRB W8, [X0 + 0x135]
	0x02774FFC LDR X20, [X20 + 0xE10]
	0x02775000 TBNZ X8, 0x0, 0x2775008
	0x02775004 BL 0x1C5C684
	0x02775008 LDR X8, [X0 + 0xB8]
	0x0277500C LDR X1, [X20]
	0x02775010 MOV X2, X31
	0x02775014 LDR X0, [X8]
	0x02775018 BL 0x321B938
	0x0277501C LDR X8, [X19]
	0x02775020 MOV X20, X0
	0x02775024 LDRB W9, [X8 + 0x135]
	0x02775028 TBNZ X9, 0x0, 0x2775038
	0x0277502C MOV X0, X8
	0x02775030 BL 0x1C5C684
	0x02775034 MOV X8, X0
	0x02775038 LDR X8, [X8 + 0xC0]
	0x0277503C LDR X0, [X8 + 0x8]
	0x02775040 LDRB W8, [X0 + 0x135]
	0x02775044 TBNZ X8, 0x0, 0x277504C
	0x02775048 BL 0x1C5C684
	0x0277504C LDR X8, [X0 + 0xB8]
	0x02775050 STR X20, [X8 + 0x30]
	0x02775054 LDR X0, [X19]
	0x02775058 LDRB W8, [X0 + 0x135]
	0x0277505C TBNZ X8, 0x0, 0x2775064
	0x02775060 BL 0x1C5C684
	0x02775064 LDR X8, [X0 + 0xC0]
	0x02775068 LDR X0, [X8 + 0x8]
	0x0277506C LDRB W8, [X0 + 0x135]
	0x02775070 TBNZ X8, 0x0, 0x2775078
	0x02775074 BL 0x1C5C684
	0x02775078 LDR X0, [X19]
	0x0277507C LDRB W8, [X0 + 0x135]
	0x02775080 TBNZ X8, 0x0, 0x2775088
	0x02775084 BL 0x1C5C684
	0x02775088 LDR X8, [X0 + 0xC0]
	0x0277508C ADRP X20, 0x19A8000
	0x02775090 LDR X0, [X8 + 0x8]
	0x02775094 LDRB W8, [X0 + 0x135]
	0x02775098 LDR X20, [X20 + 0xE20]
	0x0277509C TBNZ X8, 0x0, 0x27750A4
	0x027750A0 BL 0x1C5C684
	0x027750A4 LDR X8, [X0 + 0xB8]
	0x027750A8 LDR X1, [X20]
	0x027750AC MOV X2, X31
	0x027750B0 LDR X0, [X8]
	0x027750B4 BL 0x321B938
	0x027750B8 LDR X8, [X19]
	0x027750BC MOV X20, X0
	0x027750C0 LDRB W9, [X8 + 0x135]
	0x027750C4 TBNZ X9, 0x0, 0x27750D4
	0x027750C8 MOV X0, X8
	0x027750CC BL 0x1C5C684
	0x027750D0 MOV X8, X0
	0x027750D4 LDR X8, [X8 + 0xC0]
	0x027750D8 LDR X0, [X8 + 0x8]
	0x027750DC LDRB W8, [X0 + 0x135]
	0x027750E0 TBNZ X8, 0x0, 0x27750E8
	0x027750E4 BL 0x1C5C684
	0x027750E8 LDR X8, [X0 + 0xB8]
	0x027750EC STR X20, [X8 + 0x38]
	0x027750F0 LDR X0, [X19]
	0x027750F4 LDRB W8, [X0 + 0x135]
	0x027750F8 TBNZ X8, 0x0, 0x2775100
	0x027750FC BL 0x1C5C684
	0x02775100 LDR X8, [X0 + 0xC0]
	0x02775104 ADRP X20, 0x19A8000
	0x02775108 LDR X0, [X8 + 0x8]
	0x0277510C LDRB W8, [X0 + 0x135]
	0x02775110 LDR X20, [X20 + 0xE30]
	0x02775114 TBNZ X8, 0x0, 0x277511C
	0x02775118 BL 0x1C5C684
	0x0277511C LDR X0, [X19]
	0x02775120 LDR X20, [X20]
	0x02775124 LDRB W8, [X0 + 0x135]
	0x02775128 TBNZ X8, 0x0, 0x2775130
	0x0277512C BL 0x1C5C684
	0x02775130 LDR X8, [X0 + 0xC0]
	0x02775134 LDR X0, [X8 + 0x8]
	0x02775138 LDRB W8, [X0 + 0x135]
	0x0277513C TBNZ X8, 0x0, 0x2775144
	0x02775140 BL 0x1C5C684
	0x02775144 LDR X8, [X0 + 0xB8]
	0x02775148 STR X20, [X8 + 0x40]
	0x0277514C LDR X0, [X19]
	0x02775150 LDRB W8, [X0 + 0x135]
	0x02775154 TBNZ X8, 0x0, 0x277515C
	0x02775158 BL 0x1C5C684
	0x0277515C LDR X8, [X0 + 0xC0]
	0x02775160 ADRP X20, 0x19A8000
	0x02775164 LDR X0, [X8 + 0x8]
	0x02775168 LDRB W8, [X0 + 0x135]
	0x0277516C LDR X20, [X20 + 0xE28]
	0x02775170 TBNZ X8, 0x0, 0x2775178
	0x02775174 BL 0x1C5C684
	0x02775178 LDR X0, [X20]
	0x0277517C MOV X1, X31
	0x02775180 BL 0x3C30760
	0x02775184 LDR X8, [X19]
	0x02775188 MOV X20, X0
	0x0277518C LDRB W9, [X8 + 0x135]
	0x02775190 TBNZ X9, 0x0, 0x27751A0
	0x02775194 MOV X0, X8
	0x02775198 BL 0x1C5C684
	0x0277519C MOV X8, X0
	0x027751A0 LDR X8, [X8 + 0xC0]
	0x027751A4 ADRP X22, 0x19A8000
	0x027751A8 ADRP X21, 0x19A8000
	0x027751AC LDR X0, [X8 + 0x8]
	0x027751B0 LDRB W8, [X0 + 0x135]
	0x027751B4 LDR X22, [X22 + 0xDE0]
	0x027751B8 LDR X21, [X21 + 0xDD8]
	0x027751BC TBNZ X8, 0x0, 0x27751C4
	0x027751C0 BL 0x1C5C684
	0x027751C4 LDR X8, [X0 + 0xB8]
	0x027751C8 ADD X0, X31, 0x28
	0x027751CC STR W20, [X8 + 0x48]
	0x027751D0 LDR X1, [X22]
	0x027751D4 LDR X2, [X21]
	0x027751D8 STR X31, [X31 + 0x28]
	0x027751DC BL 0x29AAA44
	0x027751E0 LDR X0, [X19]
	0x027751E4 LDRB W8, [X0 + 0x135]
	0x027751E8 TBNZ X8, 0x0, 0x27751F0
	0x027751EC BL 0x1C5C684
	0x027751F0 LDR X8, [X0 + 0xC0]
	0x027751F4 LDR X0, [X8 + 0x8]
	0x027751F8 LDRB W8, [X0 + 0x135]
	0x027751FC TBNZ X8, 0x0, 0x2775204
	0x02775200 BL 0x1C5C684
	0x02775204 LDR X8, [X0 + 0xB8]
	0x02775208 LDR X9, [X31 + 0x28]
	0x0277520C STR X9, [X8 + 0x50]
	0x02775210 LDR X0, [X19]
	0x02775214 LDRB W8, [X0 + 0x135]
	0x02775218 TBNZ X8, 0x0, 0x2775220
	0x0277521C BL 0x1C5C684
	0x02775220 LDR X8, [X0 + 0xC0]
	0x02775224 ADRP X20, 0x19A8000
	0x02775228 LDR X0, [X8 + 0x8]
	0x0277522C LDRB W8, [X0 + 0x135]
	0x02775230 LDR X20, [X20 + 0xDF0]
	0x02775234 TBNZ X8, 0x0, 0x277523C
	0x02775238 BL 0x1C5C684
	0x0277523C LDR X1, [X20]
	0x02775240 LDR X2, [X21]
	0x02775244 ADD X0, X31, 0x18
	0x02775248 STR X31, [X31 + 0x18]
	0x0277524C BL 0x29AAA44
	0x02775250 LDR X0, [X19]
	0x02775254 LDRB W8, [X0 + 0x135]
	0x02775258 TBNZ X8, 0x0, 0x2775260
	0x0277525C BL 0x1C5C684
	0x02775260 LDR X8, [X0 + 0xC0]
	0x02775264 LDR X0, [X8 + 0x8]
	0x02775268 LDRB W8, [X0 + 0x135]
	0x0277526C TBNZ X8, 0x0, 0x2775274
	0x02775270 BL 0x1C5C684
	0x02775274 LDR X8, [X0 + 0xB8]
	0x02775278 LDR X9, [X31 + 0x18]
	0x0277527C STR X9, [X8 + 0x58]
	0x02775280 LDR X0, [X19]
	0x02775284 LDRB W8, [X0 + 0x135]
	0x02775288 TBNZ X8, 0x0, 0x2775290
	0x0277528C BL 0x1C5C684
	0x02775290 LDR X8, [X0 + 0xC0]
	0x02775294 ADRP X20, 0x19A8000
	0x02775298 LDR X0, [X8 + 0x8]
	0x0277529C LDRB W8, [X0 + 0x135]
	0x027752A0 LDR X20, [X20 + 0xE08]
	0x027752A4 TBNZ X8, 0x0, 0x27752AC
	0x027752A8 BL 0x1C5C684
	0x027752AC LDR X1, [X20]
	0x027752B0 LDR X2, [X21]
	0x027752B4 ADD X0, X31, 0x10
	0x027752B8 STR X31, [X31 + 0x10]
	0x027752BC BL 0x29AAA44
	0x027752C0 LDR X0, [X19]
	0x027752C4 LDRB W8, [X0 + 0x135]
	0x027752C8 TBNZ X8, 0x0, 0x27752D0
	0x027752CC BL 0x1C5C684
	0x027752D0 LDR X8, [X0 + 0xC0]
	0x027752D4 LDR X0, [X8 + 0x8]
	0x027752D8 LDRB W8, [X0 + 0x135]
	0x027752DC TBNZ X8, 0x0, 0x27752E4
	0x027752E0 BL 0x1C5C684
	0x027752E4 LDR X8, [X0 + 0xB8]
	0x027752E8 LDR X9, [X31 + 0x10]
	0x027752EC STR X9, [X8 + 0x60]
	0x027752F0 LDR X0, [X19]
	0x027752F4 LDRB W8, [X0 + 0x135]
	0x027752F8 TBNZ X8, 0x0, 0x2775300
	0x027752FC BL 0x1C5C684
	0x02775300 LDR X8, [X0 + 0xC0]
	0x02775304 ADRP X20, 0x19A8000
	0x02775308 LDR X0, [X8 + 0x8]
	0x0277530C LDRB W8, [X0 + 0x135]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X22, 0x1C67000
	010 Move W8, [X22+2009]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x19AA000
	019 Move X0, [X0+1664]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2009], W8
	023 Move [X31+24], X31
	024 Move [X31+8], X31
	025 Compare X21, 0
	026 JumpIfEqual {291}
	027 Move X0, X21
	028 Move X1, X31
	029 Call CustomStyleResolvedEvent.get_customStyle, X0
	030 Move X8, [X19+32]
	031 Move X22, X0
	032 Move X8, [X8+192]
	033 Move X8, [X8+8]
	034 Move W9, [X8+309]
	035 Move TEMP, X9
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {42}
	039 Move X0, X8
	040 Call 0x1C5D684
	041 Move X8, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X8, [X19+32]
	048 Move X8, [X8+192]
	049 Move X0, [X8+8]
	050 Move W8, [X0+309]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Compare X22, 0
	057 JumpIfEqual {291}
	058 Move X24, 0x19AA000
	059 Move X9, [X0+184]
	060 Move X8, [X22]
	061 Move X24, [X24+1664]
	062 Move X23, [X9+80]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Move X1, [X24]
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move X0, X22
	074 Move W2, W31
	075 Call 0x1C5D788
	076 NotImplemented "Instruction LDRSW not yet implemented."
	077 Add X8, X8, X9
	078 Add X0, X8, 312
	079 Move X8, [X0]
	080 Move X3, [X0+8]
	081 Add X2, X31, 28
	082 Move X0, X22
	083 Move X1, X23
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {91}
	089 Move V0, [X31+28]
	090 Move [X20+984], S0
	091 Move X0, X21
	092 Move X1, X31
	093 Call CustomStyleResolvedEvent.get_customStyle, X0
	094 Move X8, [X19+32]
	095 Move X22, X0
	096 Move X8, [X8+192]
	097 Move X8, [X8+8]
	098 Move W9, [X8+309]
	099 Move TEMP, X9
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {106}
	103 Move X0, X8
	104 Call 0x1C5D684
	105 Move X8, X0
	106 Move W9, [X8+224]
	107 Compare W9, 0
	108 JumpIfNotEqual {111}
	109 Move X0, X8
	110 Call 0x1C17DFC
	111 Move X8, [X19+32]
	112 Move X8, [X8+192]
	113 Move X0, [X8+8]
	114 Move W8, [X0+309]
	115 Move TEMP, X8
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {120}
	119 Call 0x1C5D684
	120 Compare X22, 0
	121 JumpIfEqual {291}
	122 Move X9, [X0+184]
	123 Move X8, [X22]
	124 Move X1, [X24]
	125 Move X23, [X9+88]
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Compare X9, 0
	128 JumpIfEqual {135}
	129 Move X10, [X8+176]
	130 Add X10, X10, 8
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract X9, X9, 1
	134 Add X10, X10, 16
	135 Move X0, X22
	136 Move W2, W31
	137 Call 0x1C5D788
	138 NotImplemented "Instruction LDRSW not yet implemented."
	139 Add X8, X8, X9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X3, [X0+8]
	143 Add X2, X31, 24
	144 Move X0, X22
	145 Move X1, X23
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {153}
	151 Move V0, [X31+24]
	152 Move [X20+988], S0
	153 Move X0, X21
	154 Move X1, X31
	155 Call CustomStyleResolvedEvent.get_customStyle, X0
	156 Move X8, [X19+32]
	157 Move X22, X0
	158 Move X8, [X8+192]
	159 Move X8, [X8+8]
	160 Move W9, [X8+309]
	161 Move TEMP, X9
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {168}
	165 Move X0, X8
	166 Call 0x1C5D684
	167 Move X8, X0
	168 Move W9, [X8+224]
	169 Compare W9, 0
	170 JumpIfNotEqual {173}
	171 Move X0, X8
	172 Call 0x1C17DFC
	173 Move X8, [X19+32]
	174 Move X8, [X8+192]
	175 Move X0, [X8+8]
	176 Move W8, [X0+309]
	177 Move TEMP, X8
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfEqual {182}
	181 Call 0x1C5D684
	182 Compare X22, 0
	183 JumpIfEqual {291}
	184 Move X9, [X0+184]
	185 Move X8, [X22]
	186 Move X1, [X24]
	187 Move X23, [X9+96]
	188 NotImplemented "Instruction LDRH not yet implemented."
	189 Compare X9, 0
	190 JumpIfEqual {197}
	191 Move X10, [X8+176]
	192 Add X10, X10, 8
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Subtract X9, X9, 1
	196 Add X10, X10, 16
	197 Move X0, X22
	198 Move W2, W31
	199 Call 0x1C5D788
	200 NotImplemented "Instruction LDRSW not yet implemented."
	201 Add X8, X8, X9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X3, [X0+8]
	205 Add X2, X31, 12
	206 Move X0, X22
	207 Move X1, X23
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Move TEMP, X0
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfNotEqual {215}
	213 Move V0, [X31+12]
	214 Move [X20+992], S0
	215 Move X0, X21
	216 Move X1, X31
	217 Call CustomStyleResolvedEvent.get_customStyle, X0
	218 Move X8, [X19+32]
	219 Move X21, X0
	220 Move X8, [X8+192]
	221 Move X8, [X8+8]
	222 Move W9, [X8+309]
	223 Move TEMP, X9
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfEqual {230}
	227 Move X0, X8
	228 Call 0x1C5D684
	229 Move X8, X0
	230 Move W9, [X8+224]
	231 Compare W9, 0
	232 JumpIfNotEqual {235}
	233 Move X0, X8
	234 Call 0x1C17DFC
	235 Move X8, [X19+32]
	236 Move X8, [X8+192]
	237 Move X0, [X8+8]
	238 Move W8, [X0+309]
	239 Move TEMP, X8
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfEqual {244}
	243 Call 0x1C5D684
	244 Compare X21, 0
	245 JumpIfEqual {291}
	246 Move X9, [X0+184]
	247 Move X8, [X21]
	248 Move X1, [X24]
	249 Move X22, [X9+104]
	250 NotImplemented "Instruction LDRH not yet implemented."
	251 Compare X9, 0
	252 JumpIfEqual {259}
	253 Move X10, [X8+176]
	254 Add X10, X10, 8
	255 NotImplemented "Instruction LDUR not yet implemented."
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Subtract X9, X9, 1
	258 Add X10, X10, 16
	259 Move X0, X21
	260 Move W2, W31
	261 Call 0x1C5D788
	262 NotImplemented "Instruction LDRSW not yet implemented."
	263 Add X8, X8, X9
	264 Add X0, X8, 312
	265 Move X8, [X0]
	266 Move X3, [X0+8]
	267 Add X2, X31, 8
	268 Move X0, X21
	269 Move X1, X22
	270 NotImplemented "Instruction BLR not yet implemented."
	271 Move TEMP, X0
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfNotEqual {277}
	275 Move V0, [X31+8]
	276 Move [X20+996], S0
	277 Move X8, [X19+32]
	278 Move X0, X20
	279 Move X8, [X8+192]
	280 Move X1, [X8+248]
	281 Call 0x2775320, X0
	282 Move X20, [X31+64]
	283 Move X19, [X31+72]
	284 Move X22, [X31+48]
	285 Move X21, [X31+56]
	286 Move X24, [X31+32]
	287 Move X23, [X31+40]
	288 Move X30, [X31+16]
	289 Add X31, X31, 80
	290 Return 
	291 Call 0x1C17F20

Method: System.Void OnInspectorFieldGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent e)

Disassembly:
	0x02775310 LDR X20, [X20 + 0xDE8]
	0x02775314 TBNZ X8, 0x0, 0x277531C
	0x02775318 BL 0x1C5C684
	0x0277531C LDR X1, [X20]

ISIL:
	001 Move X8, [X2+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+248]

Method: System.Void AlignLabel()

Disassembly:
	0x02775320 LDR X2, [X21]
	0x02775324 ADD X0, X31, 0x8
	0x02775328 STR X31, [X31 + 0x8]
	0x0277532C BL 0x29AAA44
	0x02775330 LDR X0, [X19]
	0x02775334 LDRB W8, [X0 + 0x135]
	0x02775338 TBNZ X8, 0x0, 0x2775340
	0x0277533C BL 0x1C5C684
	0x02775340 LDR X8, [X0 + 0xC0]
	0x02775344 LDR X0, [X8 + 0x8]
	0x02775348 LDRB W8, [X0 + 0x135]
	0x0277534C TBNZ X8, 0x0, 0x2775354
	0x02775350 BL 0x1C5C684
	0x02775354 LDR X8, [X0 + 0xB8]
	0x02775358 LDR X9, [X31 + 0x8]
	0x0277535C STR X9, [X8 + 0x68]
	0x02775360 LDR X0, [X19]
	0x02775364 LDRB W8, [X0 + 0x135]
	0x02775368 TBNZ X8, 0x0, 0x2775370
	0x0277536C BL 0x1C5C684
	0x02775370 LDR X8, [X0 + 0xC0]
	0x02775374 LDR X0, [X8 + 0x8]
	0x02775378 LDRB W8, [X0 + 0x135]
	0x0277537C TBNZ X8, 0x0, 0x2775384
	0x02775380 BL 0x1C5C684
	0x02775384 LDP X20, X19, [X31 + 0x40]
	0x02775388 LDP X22, X21, [X31 + 0x30]
	0x0277538C LDR X30, [X31 + 0x20]
	0x02775390 ADD X31, X31, 0x50
	0x02775394 RET
	0x02775398 LDR X0, [X0 + 0x3E8]
	0x0277539C RET
	0x027753A0 STR X30, [X31 - 0x30]!
	0x027753A4 STP X22, X21, [X31 + 0x10]
	0x027753A8 STP X20, X19, [X31 + 0x20]
	0x027753AC ADRP X22, 0x1C65000
	0x027753B0 LDRB W8, [X22 + 0x7DD]
	0x027753B4 MOV X21, X2
	0x027753B8 MOV X20, X1
	0x027753BC MOV X19, X0
	0x027753C0 TBNZ X8, 0x0, 0x27753D8
	0x027753C4 ADRP X0, 0x19A6000
	0x027753C8 LDR X0, [X0 + 0x898]
	0x027753CC BL 0x1C16CF4
	0x027753D0 MOVZ W8, 0x1
	0x027753D4 STRB W8, [X22 + 0x7DD]
	0x027753D8 LDR X0, [X19 + 0x3E8]
	0x027753DC CBZ X0, 0x2775404
	0x027753E0 MOV X1, X31
	0x027753E4 BL 0x3DEBF58
	0x027753E8 CMP X0, X19
	0x027753EC B.NE 0x2775400
	0x027753F0 LDR X0, [X19 + 0x3E8]
	0x027753F4 CBZ X0, 0x27754B0
	0x027753F8 MOV X1, X31
	0x027753FC BL 0x3DF6948
	0x02775400 STR X31, [X19 + 0x3E8]
	0x02775404 CBNZ X20, 0x2775438
	0x02775408 ADRP X8, 0x19A6000
	0x0277540C LDR X8, [X8 + 0x898]
	0x02775410 LDR X0, [X8]
	0x02775414 BL 0x1C16F10
	0x02775418 MOV X1, X31
	0x0277541C MOV X20, X0
	0x02775420 BL 0x3DEF578
	0x02775424 CBZ X20, 0x27754B0
	0x02775428 MOVZ W1, 0x1
	0x0277542C MOV X0, X20
	0x02775430 MOV X2, X31
	0x02775434 BL 0x3DEF238
	0x02775438 MOVZ W8, 0x1
	0x0277543C STR X20, [X19 + 0x3E8]
	0x02775440 STRB W8, [X20 + 0x20]
	0x02775444 LDR X8, [X21 + 0x20]
	0x02775448 LDR X8, [X8 + 0xC0]
	0x0277544C LDR X0, [X8 + 0x8]
	0x02775450 LDRB W8, [X0 + 0x135]
	0x02775454 TBNZ X8, 0x0, 0x277545C
	0x02775458 BL 0x1C5C684
	0x0277545C LDR W8, [X0 + 0xE0]
	0x02775460 CBNZ W8, 0x2775468
	0x02775464 BL 0x1C16DFC
	0x02775468 LDR X8, [X21 + 0x20]
	0x0277546C LDR X8, [X8 + 0xC0]
	0x02775470 LDR X0, [X8 + 0x8]
	0x02775474 LDRB W8, [X0 + 0x135]
	0x02775478 TBNZ X8, 0x0, 0x2775480
	0x0277547C BL 0x1C5C684
	0x02775480 LDR X8, [X0 + 0xB8]
	0x02775484 MOV X0, X20
	0x02775488 MOV X2, X31
	0x0277548C LDR X1, [X8 + 0x10]
	0x02775490 BL 0x3DF1C70
	0x02775494 LDR X1, [X19 + 0x3E8]
	0x02775498 MOV X0, X19
	0x0277549C LDP X20, X19, [X31 + 0x20]
	0x027754A0 LDP X22, X21, [X31 + 0x10]
	0x027754A4 MOV X2, X31
	0x027754A8 LDR X30, [X31], #0x30
	0x027754AC B 0x3DF60E8
	0x027754B0 BL 0x1C16F20
	0x027754B4 LDR X9, [X0 + 0x400]
	0x027754B8 LDR V0, [X0 + 0x3F]
	0x027754BC STR X9, [X8 + 0x10]
	0x027754C0 STR V0, [X8]
	0x027754C4 RET
	0x027754C8 LDR X8, [X1 + 0x10]
	0x027754CC LDR V0, [X1]
	0x027754D0 STR X8, [X0 + 0x400]
	0x027754D4 STR V0, [X0 + 0x3F]
	0x027754D8 RET
	0x027754DC STR X30, [X31 - 0x40]!
	0x027754E0 STP X24, X23, [X31 + 0x10]
	0x027754E4 STP X22, X21, [X31 + 0x20]
	0x027754E8 STP X20, X19, [X31 + 0x30]
	0x027754EC LDR X22, [X0 + 0x408]
	0x027754F0 MOV X19, X2
	0x027754F4 MOV X20, X1
	0x027754F8 ADD X21, X0, 0x408
	0x027754FC MOV X0, X22
	0x02775500 MOV X1, X20
	0x02775504 MOV X2, X31
	0x02775508 BL 0x33C0DE4
	0x0277550C LDR X8, [X19 + 0x20]
	0x02775510 MOV X24, X0
	0x02775514 LDR X8, [X8 + 0xC0]
	0x02775518 LDR X23, [X8 + 0x18]
	0x0277551C LDRB W8, [X23 + 0x135]
	0x02775520 TBNZ X8, 0x0, 0x2775530
	0x02775524 MOV X0, X23
	0x02775528 BL 0x1C5C684
	0x0277552C MOV X23, X0
	0x02775530 CBZ X24, 0x277554C
	0x02775534 MOV X0, X24
	0x02775538 MOV X1, X23
	0x0277553C BL 0x1C16E00
	0x02775540 MOV X1, X0
	0x02775544 CBNZ X0, 0x2775550
	0x02775548 B 0x277557C
	0x0277554C MOV X1, X31
	0x02775550 MOV X0, X21
	0x02775554 MOV X2, X22
	0x02775558 BL 0x1C24138
	0x0277555C CMP X22, X0
	0x02775560 MOV X22, X0
	0x02775564 B.NE 0x27754FC
	0x02775568 LDP X20, X19, [X31 + 0x30]
	0x0277556C LDP X22, X21, [X31 + 0x20]
	0x02775570 LDP X24, X23, [X31 + 0x10]
	0x02775574 LDR X30, [X31], #0x40
	0x02775578 RET
	0x0277557C MOV X0, X24
	0x02775580 MOV X1, X23
	0x02775584 BL 0x1C171E0
	0x02775588 STR X30, [X31 - 0x40]!
	0x0277558C STP X24, X23, [X31 + 0x10]
	0x02775590 STP X22, X21, [X31 + 0x20]
	0x02775594 STP X20, X19, [X31 + 0x30]
	0x02775598 LDR X22, [X0 + 0x408]
	0x0277559C MOV X19, X2
	0x027755A0 MOV X20, X1
	0x027755A4 ADD X21, X0, 0x408
	0x027755A8 MOV X0, X22
	0x027755AC MOV X1, X20
	0x027755B0 MOV X2, X31
	0x027755B4 BL 0x33C0FDC
	0x027755B8 LDR X8, [X19 + 0x20]
	0x027755BC MOV X24, X0
	0x027755C0 LDR X8, [X8 + 0xC0]
	0x027755C4 LDR X23, [X8 + 0x18]
	0x027755C8 LDRB W8, [X23 + 0x135]
	0x027755CC TBNZ X8, 0x0, 0x27755DC
	0x027755D0 MOV X0, X23
	0x027755D4 BL 0x1C5C684
	0x027755D8 MOV X23, X0
	0x027755DC CBZ X24, 0x27755F8
	0x027755E0 MOV X0, X24
	0x027755E4 MOV X1, X23
	0x027755E8 BL 0x1C16E00
	0x027755EC MOV X1, X0
	0x027755F0 CBNZ X0, 0x27755FC
	0x027755F4 B 0x2775628
	0x027755F8 MOV X1, X31
	0x027755FC MOV X0, X21
	0x02775600 MOV X2, X22
	0x02775604 BL 0x1C24138
	0x02775608 CMP X22, X0
	0x0277560C MOV X22, X0
	0x02775610 B.NE 0x27755A8
	0x02775614 LDP X20, X19, [X31 + 0x30]
	0x02775618 LDP X22, X21, [X31 + 0x20]
	0x0277561C LDP X24, X23, [X31 + 0x10]
	0x02775620 LDR X30, [X31], #0x40
	0x02775624 RET
	0x02775628 MOV X0, X24
	0x0277562C MOV X1, X23
	0x02775630 BL 0x1C171E0
	0x02775634 LDR X9, [X0 + 0x400]
	0x02775638 LDR V0, [X0 + 0x3F]
	0x0277563C STR X9, [X8 + 0x10]
	0x02775640 STR V0, [X8]
	0x02775644 RET
	0x02775648 SUB X31, X31, 0x130
	0x0277564C STP X29, X30, [X31 + 0x100]
	0x02775650 STP X22, X21, [X31 + 0x110]
	0x02775654 STP X20, X19, [X31 + 0x120]
	0x02775658 ADRP X22, 0x1C65000
	0x0277565C LDRB W8, [X22 + 0x7DE]
	0x02775660 MOV X21, X2
	0x02775664 MOV X19, X1
	0x02775668 MOV X20, X0
	0x0277566C TBNZ X8, 0x0, 0x2775684
	0x02775670 ADRP X0, 0x197E000
	0x02775674 LDR X0, [X0 + 0xE00]
	0x02775678 BL 0x1C16CF4
	0x0277567C MOVZ W8, 0x1
	0x02775680 STRB W8, [X22 + 0x7DE]
	0x02775684 LDR X8, [X19 + 0x10]
	0x02775688 LDR V0, [X19]
	0x0277568C ADD X1, X31, 0xE0
	0x02775690 MOV X0, X20
	0x02775694 STR X8, [X31 + 0x90]
	0x02775698 STR V0, [X31 + 0x8]
	0x0277569C LDR X9, [X20]
	0x027756A0 LDR X10, [X9 + 0x848]
	0x027756A4 STR V0, [X31 + 0xE]
	0x027756A8 STR X8, [X31 + 0xF0]
	0x027756AC LDR X2, [X9 + 0x850]
	0x027756B0 BLR X10
	0x027756B4 LDRB W8, [X20 + 0x418]
	0x027756B8 TBZ X0, 0x0, 0x27756C8
	0x027756BC CBZ W8, 0x277587C
	0x027756C0 ADD X21, X21, 0x20
	0x027756C4 B 0x27756D0
	0x027756C8 ADD X21, X21, 0x20
	0x027756CC CBZ W8, 0x27756E8
	0x027756D0 LDR X8, [X20]
	0x027756D4 STRB W31, [X20 + 0x418]
	0x027756D8 MOV X0, X20
	0x027756DC LDR X9, [X8 + 0x878]
	0x027756E0 LDR X1, [X8 + 0x880]
	0x027756E4 BLR X9
	0x027756E8 MOV X0, X20
	0x027756EC MOV X1, X31
	0x027756F0 BL 0x3DEC0CC
	0x027756F4 CBZ X0, 0x277582C
	0x027756F8 LDR X8, [X20 + 0x400]
	0x027756FC LDR V0, [X20 + 0x3F]
	0x02775700 ADD X1, X31, 0xE0
	0x02775704 MOV X0, X20
	0x02775708 STR X8, [X31 + 0xB0]
	0x0277570C STR V0, [X31 + 0xA]
	0x02775710 LDR X8, [X19 + 0x10]
	0x02775714 LDR V0, [X19]
	0x02775718 STR X8, [X31 + 0x70]
	0x0277571C STR V0, [X31 + 0x6]
	0x02775720 LDR X9, [X20]
	0x02775724 LDR X10, [X9 + 0x888]
	0x02775728 STR V0, [X31 + 0xE]
	0x0277572C STR X8, [X31 + 0xF0]
	0x02775730 LDR X2, [X9 + 0x890]
	0x02775734 BLR X10
	0x02775738 LDR V0, [X31 + 0xA]
	0x0277573C LDR X8, [X31 + 0xB0]
	0x02775740 STR V0, [X31 + 0x4]
	0x02775744 STR X8, [X31 + 0x50]
	0x02775748 LDR X8, [X20 + 0x400]
	0x0277574C LDR V0, [X20 + 0x3F]
	0x02775750 STR X8, [X31 + 0x30]
	0x02775754 STR V0, [X31 + 0x2]
	0x02775758 LDR X8, [X21]
	0x0277575C LDR X8, [X8 + 0xC0]
	0x02775760 LDR X0, [X8 + 0x50]
	0x02775764 LDRB W8, [X0 + 0x135]
	0x02775768 TBNZ X8, 0x0, 0x2775770
	0x0277576C BL 0x1C5C684
	0x02775770 LDR W8, [X0 + 0xE0]
	0x02775774 CBNZ W8, 0x277577C
	0x02775778 BL 0x1C16DFC
	0x0277577C LDR X8, [X21]
	0x02775780 ADRP X22, 0x197E000
	0x02775784 LDR X22, [X22 + 0xE00]
	0x02775788 LDR V0, [X31 + 0x4]
	0x0277578C LDR X8, [X8 + 0xC0]
	0x02775790 LDR X9, [X31 + 0x50]
	0x02775794 LDR V1, [X31 + 0x2]
	0x02775798 LDR X10, [X31 + 0x30]
	0x0277579C LDR X2, [X8 + 0x48]
	0x027757A0 ADD X0, X31, 0xE0
	0x027757A4 ADD X1, X31, 0xC0
	0x027757A8 STR V0, [X31 + 0xE]
	0x027757AC STR X9, [X31 + 0xF0]
	0x027757B0 STR V1, [X31 + 0xC]
	0x027757B4 STR X10, [X31 + 0xD0]
	0x027757B8 BL 0x28F3348
	0x027757BC MOV X19, X0
	0x027757C0 CBZ X0, 0x2775890
	0x027757C4 MOV X0, X19
	0x027757C8 MOV X1, X20
	0x027757CC MOV X2, X31
	0x027757D0 BL 0x3D9C6C8
	0x027757D4 LDR X8, [X20]
	0x027757D8 LDP X9, X2, [X8 + 0x198]
	0x027757DC MOV X0, X20
	0x027757E0 MOV X1, X19
	0x027757E4 BLR X9
	0x027757E8 MOV X20, X31
	0x027757EC LDR X8, [X19]
	0x027757F0 LDR X1, [X22]
	0x027757F4 LDRH W9, [X8 + 0x12E]
	0x027757F8 CBZ X9, 0x277581C
	0x027757FC LDR X10, [X8 + 0xB0]
	0x02775800 ADD X10, X10, 0x8
	0x02775804 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-112], D13
	002 Move [X31-104], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X21, 0x1C66000
	016 Move W8, [X21+2010]
	017 Move X20, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x19A8000
	024 Move X0, [X0+288]
	025 Call 0x1C17CF4
	026 Move X0, 0x19A8000
	027 Move X0, [X0+296]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2010], W8
	031 Move X8, [X20+32]
	032 Move X8, [X8+192]
	033 Move X0, [X8+8]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X8, [X20+32]
	045 Move X8, [X8+192]
	046 Move X0, [X8+8]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Compare X19, 0
	054 JumpIfEqual {355}
	055 Move X8, [X0+184]
	056 Move X0, X19
	057 Move X2, X31
	058 Move X1, [X8+48]
	059 Call VisualElement.ClassListContains, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {316}
	064 Move V12, [X19+988]
	065 Move X0, X19
	066 Move X1, X31
	067 Call VisualElement.get_worldBound, X0
	068 Move X0, [X19+1064]
	069 Compare X0, 0
	070 JumpIfEqual {355}
	071 Move X1, X31
	072 Move V9, V0
	073 Call VisualElement.get_worldBound, X0
	074 Move X0, [X19+1064]
	075 Compare X0, 0
	076 JumpIfEqual {355}
	077 Move X1, X31
	078 Move V10, V0
	079 Call VisualElement.get_resolvedStyle, X0
	080 Compare X0, 0
	081 JumpIfEqual {355}
	082 Move X24, 0x19A8000
	083 Move X8, [X0]
	084 Move X24, [X24+288]
	085 Move X20, X0
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Move X1, [X24]
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move W2, 29
	097 Move X0, X20
	098 Call 0x1C5D788
	099 Move W9, [X10]
	100 Add W9, W9, 29
	101 Add X8, X8, W9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X1, [X0+8]
	105 Move X0, X20
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X0, X19
	108 Move X1, X31
	109 Move V11, V0
	110 Call VisualElement.get_resolvedStyle, X0
	111 Compare X0, 0
	112 JumpIfEqual {355}
	113 Move X8, [X0]
	114 Move X1, [X24]
	115 Move X20, X0
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Compare X9, 0
	118 JumpIfEqual {125}
	119 Move X10, [X8+176]
	120 Add X10, X10, 8
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract X9, X9, 1
	124 Add X10, X10, 16
	125 Move W2, 29
	126 Move X0, X20
	127 Call 0x1C5D788
	128 Move W9, [X10]
	129 Add W9, W9, 29
	130 Add X8, X8, W9
	131 Add X0, X8, 312
	132 Move X8, [X0]
	133 Move X1, [X0+8]
	134 Move X0, X20
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move V13, [X19+992]
	137 Move X0, X19
	138 Move X1, X31
	139 Move V8, V0
	140 Call VisualElement.get_resolvedStyle, X0
	141 Compare X0, 0
	142 JumpIfEqual {355}
	143 Move X8, [X0]
	144 Move X1, [X24]
	145 Move X20, X0
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move W2, 29
	156 Move X0, X20
	157 Call 0x1C5D788
	158 Move W9, [X10]
	159 Add W9, W9, 29
	160 Add X8, X8, W9
	161 Add X0, X8, 312
	162 Move X8, [X0]
	163 Move X1, [X0+8]
	164 Move X0, X20
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Move X20, [X19+1056]
	167 Compare X20, 0
	168 JumpIfNotEqual {170}
	169 Move X20, [X19+1064]
	170 Move X0, [X19+1024]
	171 Compare X0, 0
	172 JumpIfEqual {355}
	173 Subtract S1, S9, S10
	174 Subtract S10, S1, S11
	175 Subtract S1, S13, S10
	176 Move X1, X31
	177 Subtract S9, S1, S0
	178 Call VisualElement.get_style, X0
	179 Move S0, W31
	180 Move X21, X0
	181 NotImplemented "Instruction FMAXNM not yet implemented."
	182 Move X0, X31
	183 Call StyleLength.op_Implicit, V0
	184 Compare X21, 0
	185 JumpIfEqual {355}
	186 Move X25, 0x19A8000
	187 Move X9, [X21]
	188 Move X25, [X25+296]
	189 Move X8, X1
	190 Move X22, X0
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X1, [X25]
	193 And X23, X8, 0
	194 Compare X10, 0
	195 JumpIfEqual {202}
	196 Move X8, [X9+176]
	197 Add X8, X8, 8
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Subtract X10, X10, 1
	201 Add X8, X8, 16
	202 Move W2, 32
	203 Move X0, X21
	204 Call 0x1C5D788
	205 Move W8, [X8]
	206 Add W8, W8, 32
	207 Add X8, X9, W8
	208 Add X0, X8, 312
	209 Move X8, [X0]
	210 Move X3, [X0+8]
	211 Move X0, X21
	212 Move X1, X22
	213 Move X2, X23
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Compare X20, 0
	216 JumpIfEqual {355}
	217 Move X0, X20
	218 Move X1, X31
	219 Call VisualElement.get_resolvedStyle, X0
	220 Compare X0, 0
	221 JumpIfEqual {355}
	222 Move X8, [X0]
	223 Move X1, [X24]
	224 Move X20, X0
	225 NotImplemented "Instruction LDRH not yet implemented."
	226 Compare X9, 0
	227 JumpIfEqual {234}
	228 Move X10, [X8+176]
	229 Add X10, X10, 8
	230 NotImplemented "Instruction LDUR not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Subtract X9, X9, 1
	233 Add X10, X10, 16
	234 Move W2, 44
	235 Move X0, X20
	236 Call 0x1C5D788
	237 Move W9, [X10]
	238 Add W9, W9, 44
	239 Add X8, X8, W9
	240 Add X0, X8, 312
	241 Move X8, [X0]
	242 Move X1, [X0+8]
	243 Move X0, X20
	244 NotImplemented "Instruction BLR not yet implemented."
	245 Move X0, [X19+1024]
	246 Compare X0, 0
	247 JumpIfEqual {355}
	248 Move V11, [X19+996]
	249 Move V13, [X19+984]
	250 Move X1, X31
	251 Move V9, V0
	252 Call VisualElement.get_resolvedStyle, X0
	253 Compare X0, 0
	254 JumpIfEqual {355}
	255 Move X8, [X0]
	256 Move X1, [X24]
	257 Add S0, S12, S10
	258 Add S1, S9, S11
	259 NotImplemented "Instruction LDRH not yet implemented."
	260 Add S0, S0, S8
	261 Multiply S1, S1, S13
	262 Move X20, X0
	263 Subtract S8, S1, S0
	264 Compare X9, 0
	265 JumpIfEqual {272}
	266 Move X10, [X8+176]
	267 Add X10, X10, 8
	268 NotImplemented "Instruction LDUR not yet implemented."
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Subtract X9, X9, 1
	271 Add X10, X10, 16
	272 Move W2, 44
	273 Move X0, X20
	274 Call 0x1C5D788
	275 Move W9, [X10]
	276 Add W9, W9, 44
	277 Add X8, X8, W9
	278 Add X0, X8, 312
	279 Move X8, [X0]
	280 Move X1, [X0+8]
	281 Move X0, X20
	282 NotImplemented "Instruction BLR not yet implemented."
	283 Move X8, -29929472
	284 Move V1, [X8+3996]
	285 NotImplemented "Instruction FABD not yet implemented."
	286 NotImplemented "Instruction FCMP not yet implemented."
	287 Move X0, [X19+1024]
	288 Compare X0, 0
	289 JumpIfEqual {355}
	290 Move X1, X31
	291 Call VisualElement.get_style, X0
	292 Move S0, W31
	293 Move X19, X0
	294 NotImplemented "Instruction FMAX not yet implemented."
	295 Move X0, X31
	296 Call StyleLength.op_Implicit, V0
	297 Compare X19, 0
	298 JumpIfEqual {355}
	299 Move X9, [X19]
	300 Move X8, X1
	301 Move X1, [X25]
	302 Move X20, X0
	303 NotImplemented "Instruction LDRH not yet implemented."
	304 And X21, X8, 0
	305 Compare X10, 0
	306 JumpIfEqual {313}
	307 Move X8, [X9+176]
	308 Add X8, X8, 8
	309 NotImplemented "Instruction LDUR not yet implemented."
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Subtract X10, X10, 1
	312 Add X8, X8, 16
	313 Move W2, 54
	314 Move X0, X19
	315 Call 0x1C5D788
	316 Move X20, [X31+96]
	317 Move X19, [X31+104]
	318 Move X22, [X31+80]
	319 Move X21, [X31+88]
	320 Move X24, [X31+64]
	321 Move X23, [X31+72]
	322 Move X30, [X31+48]
	323 Move X25, [X31+56]
	324 Move D9, [X31+32]
	325 Move D8, [X31+40]
	326 Move D11, [X31+16]
	327 Move D10, [X31+24]
	328 Move D13, [X31+112]
	329 Move D12, [X31+120]
	330 Return 
	331 Move W8, [X8]
	332 Add W8, W8, 54
	333 Add X8, X9, W8
	334 Add X0, X8, 312
	335 Move X4, [X0]
	336 Move X3, [X0+8]
	337 Move X0, X19
	338 Move X1, X20
	339 Move X2, X21
	340 Move X20, [X31+96]
	341 Move X19, [X31+104]
	342 Move X22, [X31+80]
	343 Move X21, [X31+88]
	344 Move X24, [X31+64]
	345 Move X23, [X31+72]
	346 Move X30, [X31+48]
	347 Move X25, [X31+56]
	348 Move D9, [X31+32]
	349 Move D8, [X31+40]
	350 Move D11, [X31+16]
	351 Move D10, [X31+24]
	352 Move D13, [X31+112]
	353 Move D12, [X31+120]
	354 CallNoReturn X4
	355 Call 0x1C17F20

Method: TValueType ValidatedValue(TValueType value)

Disassembly:
	0x02775808 CMP X11, X1
	0x0277580C B.EQ 0x2775860
	0x02775810 SUBS X9, X9, 0x1
	0x02775814 ADD X10, X10, 0x10
	0x02775818 B.NE 0x2775804
	0x0277581C MOV X0, X19
	0x02775820 MOV W2, W31
	0x02775824 BL 0x1C5C788
	0x02775828 B 0x277586C

ISIL:
	001 Move X8, [X0+1016]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move X3, [X8+24]
	005 Move X0, [X8+64]
	006 Move X2, [X8+40]
	007 And W1, W1, 1
	008 CallNoReturn X3
	009 And W0, W1, 1
	010 Return X0

Method: System.Void UpdateMixedValueContent()

Disassembly:
	0x0277582C LDR X8, [X19 + 0x10]
	0x02775830 LDR V0, [X19]
	0x02775834 ADD X1, X31, 0xE0
	0x02775838 MOV X0, X20
	0x0277583C STR X8, [X31 + 0x10]
	0x02775840 STR V0, [X31]
	0x02775844 LDR X9, [X20]
	0x02775848 LDR X10, [X9 + 0x888]
	0x0277584C STR V0, [X31 + 0xE]
	0x02775850 STR X8, [X31 + 0xF0]
	0x02775854 LDR X2, [X9 + 0x890]
	0x02775858 BLR X10
	0x0277585C B 0x277587C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1988000
	005 Move X0, [X0+1880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotImplementedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Void SetValueWithoutNotify(TValueType newValue)

Disassembly:
	0x02775860 LDRSW X9, [X10]
	0x02775864 ADD X8, X8, X9, 0x4, LSL
	0x02775868 ADD X0, X8, 0x138
	0x0277586C LDP X8, X1, [X0]
	0x02775870 MOV X0, X19
	0x02775874 BLR X8
	0x02775878 CBNZ X20, 0x2775894
	0x0277587C LDP X20, X19, [X31 + 0x120]
	0x02775880 LDP X22, X21, [X31 + 0x110]
	0x02775884 LDP X29, X30, [X31 + 0x100]
	0x02775888 ADD X31, X31, 0x130
	0x0277588C RET
	0x02775890 BL 0x1C16F20
	0x02775894 MOV X0, X20
	0x02775898 BL 0x1C16F18
	0x0277589C B 0x27758A0
	0x027758A0 MOV X21, X0
	0x027758A4 CMP W1, 0x1
	0x027758A8 B.NE 0x27758C4
	0x027758AC MOV X0, X21
	0x027758B0 BL 0x3EB1AD0
	0x027758B4 LDR X20, [X0]
	0x027758B8 BL 0x3EB1AE0
	0x027758BC CBNZ X19, 0x27757EC
	0x027758C0 B 0x2775878
	0x027758C4 MOV X20, X31
	0x027758C8 B 0x27758D0
	0x027758CC MOV X21, X0
	0x027758D0 CBZ X19, 0x277592C
	0x027758D4 LDR X8, [X19]
	0x027758D8 LDR X1, [X22]
	0x027758DC LDRH W9, [X8 + 0x12E]
	0x027758E0 CBZ X9, 0x2775904
	0x027758E4 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+1048]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfNotEqual {16}
	007 Move X8, [X19+1016]
	008 Compare X8, 0
	009 JumpIfEqual {16}
	010 Move X9, [X8+24]
	011 Move X0, [X8+64]
	012 Move X2, [X8+40]
	013 And W1, W1, 1
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move W1, W0
	016 Move X0, [X19+88]
	017 And W8, W1, 1
	018 Move X1, X31
	019 Move [X19+1008], W8
	020 Call String.IsNullOrEmpty, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X19
	026 Move X1, X31
	027 Call VisualElement.SaveViewData, X0
	028 Move X0, X19
	029 Move X1, X31
	030 Call VisualElement.MarkDirtyRepaint, X0
	031 Move W8, [X19+1032]
	032 Compare W8, 0
	033 JumpIfEqual {41}
	034 Move X8, [X19]
	035 Move X0, X19
	036 Move X2, [X8+2168]
	037 Move X1, [X8+2176]
	038 Move X30, [X31+16]
	039 Move X19, [X31+24]
	040 CallNoReturn X2
	041 Move X30, [X31+16]
	042 Move X19, [X31+24]
	043 Return 

Method: System.Void OnViewDataReady()

Disassembly:
	0x027758E8 ADD X10, X10, 0x8
	0x027758EC LDUR X11, [X10 - 0x8]
	0x027758F0 CMP X11, X1
	0x027758F4 B.EQ 0x2775914
	0x027758F8 SUBS X9, X9, 0x1
	0x027758FC ADD X10, X10, 0x10
	0x02775900 B.NE 0x27758EC
	0x02775904 MOV X0, X19
	0x02775908 MOV W2, W31
	0x0277590C BL 0x1C5C788
	0x02775910 B 0x2775920
	0x02775914 LDRSW X9, [X10]
	0x02775918 ADD X8, X8, X9, 0x4, LSL
	0x0277591C ADD X0, X8, 0x138
	0x02775920 LDP X8, X1, [X0]
	0x02775924 MOV X0, X19
	0x02775928 BLR X8
	0x0277592C CBNZ X20, 0x2775938
	0x02775930 MOV X0, X21
	0x02775934 BL 0x1D2C690
	0x02775938 MOV X0, X20
	0x0277593C BL 0x1C16F18
	0x02775940 BL 0x1990590
	0x02775944 LDR X0, [X0 + 0x410]
	0x02775948 RET
	0x0277594C STR X1, [X0 + 0x410]
	0x02775950 RET
	0x02775954 STR X30, [X31 - 0x10]!
	0x02775958 LDR X0, [X0 + 0x410]
	0x0277595C CBZ X0, 0x2775974
	0x02775960 LDR X8, [X0]
	0x02775964 LDR X2, [X8 + 0xB18]
	0x02775968 LDR X1, [X8 + 0xB20]
	0x0277596C LDR X30, [X31], #0x10
	0x02775970 BR X2
	0x02775974 BL 0x1C16F20
	0x02775978 SUB X31, X31, 0x30
	0x0277597C STP X30, X21, [X31 + 0x10]
	0x02775980 STP X20, X19, [X31 + 0x20]
	0x02775984 STR X31, [X31 + 0x8]
	0x02775988 MOV X19, X0
	0x0277598C LDR X0, [X0 + 0x410]
	0x02775990 CBZ X0, 0x2775AF0
	0x02775994 LDR X8, [X0]
	0x02775998 MOV X21, X1
	0x0277599C MOV X20, X2
	0x027759A0 LDR X9, [X8 + 0xB18]
	0x027759A4 LDR X1, [X8 + 0xB20]
	0x027759A8 BLR X9
	0x027759AC MOV X1, X21
	0x027759B0 MOV X2, X31
	0x027759B4 BL 0x3226EF8
	0x027759B8 TBZ X0, 0x0, 0x2775AE0
	0x027759BC LDR X0, [X19 + 0x410]
	0x027759C0 CBZ X0, 0x2775AF0
	0x027759C4 LDR X8, [X0]
	0x027759C8 MOV X1, X21
	0x027759CC LDR X9, [X8 + 0xB28]
	0x027759D0 LDR X2, [X8 + 0xB30]
	0x027759D4 BLR X9
	0x027759D8 LDR X0, [X19 + 0x410]
	0x027759DC CBZ X0, 0x2775AF0
	0x027759E0 LDR X8, [X0]
	0x027759E4 LDR X9, [X8 + 0xB18]
	0x027759E8 LDR X1, [X8 + 0xB20]
	0x027759EC BLR X9
	0x027759F0 MOV X1, X31
	0x027759F4 BL 0x32277A8
	0x027759F8 TBZ X0, 0x0, 0x2775A60
	0x027759FC LDR X8, [X20 + 0x20]
	0x02775A00 LDR X8, [X8 + 0xC0]
	0x02775A04 LDR X0, [X8 + 0x8]
	0x02775A08 LDRB W8, [X0 + 0x135]
	0x02775A0C TBNZ X8, 0x0, 0x2775A14
	0x02775A10 BL 0x1C5C684
	0x02775A14 LDR W8, [X0 + 0xE0]
	0x02775A18 CBNZ W8, 0x2775A20
	0x02775A1C BL 0x1C16DFC
	0x02775A20 LDR X8, [X20 + 0x20]
	0x02775A24 LDR X8, [X8 + 0xC0]
	0x02775A28 LDR X0, [X8 + 0x8]
	0x02775A2C LDRB W8, [X0 + 0x135]
	0x02775A30 TBNZ X8, 0x0, 0x2775A38
	0x02775A34 BL 0x1C5C684
	0x02775A38 LDR X8, [X0 + 0xB8]
	0x02775A3C MOV X0, X19
	0x02775A40 MOV X2, X31
	0x02775A44 LDR X1, [X8 + 0x18]
	0x02775A48 BL 0x3DF1C70
	0x02775A4C LDR X0, [X19 + 0x410]
	0x02775A50 CBZ X0, 0x2775AF0
	0x02775A54 MOV X1, X31
	0x02775A58 BL 0x3DF6948
	0x02775A5C B 0x2775AE0
	0x02775A60 LDR X1, [X19 + 0x410]
	0x02775A64 MOV X0, X19
	0x02775A68 MOV X2, X31
	0x02775A6C BL 0x3DEF1C0
	0x02775A70 TBNZ X0, 0x0, 0x2775AE0
	0x02775A74 LDR X8, [X19 + 0x378]
	0x02775A78 ADD X0, X31, 0x8
	0x02775A7C MOV W1, W31
	0x02775A80 MOV X3, X31
	0x02775A84 STR X8, [X31 + 0x8]
	0x02775A88 LDR X2, [X19 + 0x410]
	0x02775A8C BL 0x3DF89E4
	0x02775A90 LDR X8, [X20 + 0x20]
	0x02775A94 LDR X8, [X8 + 0xC0]
	0x02775A98 LDR X0, [X8 + 0x8]
	0x02775A9C LDRB W8, [X0 + 0x135]
	0x02775AA0 TBNZ X8, 0x0, 0x2775AA8
	0x02775AA4 BL 0x1C5C684
	0x02775AA8 LDR W8, [X0 + 0xE0]
	0x02775AAC CBNZ W8, 0x2775AB4
	0x02775AB0 BL 0x1C16DFC
	0x02775AB4 LDR X8, [X20 + 0x20]
	0x02775AB8 LDR X8, [X8 + 0xC0]
	0x02775ABC LDR X0, [X8 + 0x8]
	0x02775AC0 LDRB W8, [X0 + 0x135]
	0x02775AC4 TBNZ X8, 0x0, 0x2775ACC
	0x02775AC8 BL 0x1C5C684
	0x02775ACC LDR X8, [X0 + 0xB8]
	0x02775AD0 MOV X0, X19
	0x02775AD4 MOV X2, X31
	0x02775AD8 LDR X1, [X8 + 0x18]
	0x02775ADC BL 0x3DF1B54
	0x02775AE0 LDP X20, X19, [X31 + 0x20]
	0x02775AE4 LDP X30, X21, [X31 + 0x10]
	0x02775AE8 ADD X31, X31, 0x30
	0x02775AEC RET
	0x02775AF0 BL 0x1C16F20
	0x02775AF4 LDRB W0, [X0 + 0x418]
	0x02775AF8 RET
	0x02775AFC LDRB W9, [X0 + 0x418]
	0x02775B00 AND W8, W1, 0x1
	0x02775B04 CMP W9, W8
	0x02775B08 B.NE 0x2775B10
	0x02775B0C RET
	0x02775B10 LDR X9, [X0]
	0x02775B14 STRB W8, [X0 + 0x418]
	0x02775B18 LDR X2, [X9 + 0x878]
	0x02775B1C LDR X1, [X9 + 0x880]
	0x02775B20 BR X2
	0x02775B24 STR X30, [X31 - 0x30]!
	0x02775B28 STP X22, X21, [X31 + 0x10]
	0x02775B2C STP X20, X19, [X31 + 0x20]
	0x02775B30 ADRP X21, 0x1C65000
	0x02775B34 LDRB W8, [X21 + 0x7DF]
	0x02775B38 MOV X20, X1
	0x02775B3C MOV X19, X0
	0x02775B40 TBNZ X8, 0x0, 0x2775B58
	0x02775B44 ADRP X0, 0x19A7000
	0x02775B48 LDR X0, [X0 + 0x130]
	0x02775B4C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1C66000
	007 Move W8, [X21+2011]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x197F000
	015 Move X0, [X0+3584]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2011], W8
	019 Compare X20, 0
	020 JumpIfEqual {126}
	021 Move X0, X20
	022 Move X1, X31
	023 Call VisualElement.OnViewDataReady, X0
	024 Move X8, [X20+1000]
	025 Compare X8, 0
	026 JumpIfEqual {120}
	027 Move X0, X20
	028 Move X1, X31
	029 Call VisualElement.GetFullHierarchicalViewDataKey, X0
	030 Move W21, [X20+1008]
	031 Move X2, X0
	032 Move X0, X20
	033 Move X1, X20
	034 Move X3, X31
	035 Call VisualElement.OverwriteFromViewData, X0, X1, X2
	036 Move X8, [X19+32]
	037 Move X8, [X8+192]
	038 Move X0, [X8+168]
	039 Call 0x21199DC
	040 Compare X0, 0
	041 JumpIfEqual {126}
	042 Move X8, [X0]
	043 Move W2, [X20+1008]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 Move X9, [X8+440]
	047 Move X3, [X8+448]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {120}
	053 Move X8, [X19+32]
	054 Move W22, [X20+1008]
	055 Move X8, [X8+192]
	056 Move X0, [X8+80]
	057 Move W8, [X0+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X8, [X19+32]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CSET not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X8+192]
	072 NotImplemented "Instruction CSET not yet implemented."
	073 Move X2, [X8+72]
	074 Call 0x28F3FFC, X0, X1
	075 Move X19, X0
	076 Compare X0, 0
	077 JumpIfEqual {127}
	078 Move X0, X19
	079 Move X1, X20
	080 Move X2, X31
	081 Call EventBase.set_target, X0, X1
	082 Move X8, [X20]
	083 Move W1, [X20+1008]
	084 Move X9, [X8+2184]
	085 Move X2, [X8+2192]
	086 Move X0, X20
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X8, [X20]
	089 Move X9, [X8+408]
	090 Move X2, [X8+416]
	091 Move X0, X20
	092 Move X1, X19
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X20, X31
	095 Move X10, 0x197F000
	096 Move X8, [X19]
	097 Move X10, [X10+3584]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Move X1, [X10]
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X19
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X1, [X0+8]
	116 Move X0, X19
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Compare X20, 0
	119 JumpIfNotEqual {128}
	120 Move X20, [X31+32]
	121 Move X19, [X31+40]
	122 Move X22, [X31+16]
	123 Move X21, [X31+24]
	124 Move X30, [X31+48]
	125 Return 
	126 Call 0x1C17F20
	127 Call 0x1C17F20
	128 Move X0, X20
	129 Call 0x1C17F18
	130 Move X21, X0
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, X21
	133 Call 0x3EB2AD0
	134 Move X20, [X0]
	135 Call 0x3EB2AE0
	136 Compare X19, 0
	137 JumpIfNotEqual {95}
	138 Move X20, X31
	139 Move X21, X0
	140 Compare X19, 0
	141 JumpIfEqual {165}
	142 Move X10, 0x197F000
	143 Move X8, [X19]
	144 Move X10, [X10+3584]
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Move X1, [X10]
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move X0, X19
	156 Move W2, W31
	157 Call 0x1C5D788
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Add X8, X8, X9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, X19
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Compare X20, 0
	166 JumpIfNotEqual {169}
	167 Move X0, X21
	168 Call 0x1D2D690
	169 Move X0, X20
	170 Call 0x1C17F18
	171 Call 0x1991590

Method: UnityEngine.Rect GetTooltipRect()

Disassembly:
	0x02775B50 MOVZ W8, 0x1
	0x02775B54 STRB W8, [X21 + 0x7DF]
	0x02775B58 LDR X0, [X19 + 0x420]
	0x02775B5C CBNZ X0, 0x2775C40
	0x02775B60 LDR X8, [X20 + 0x20]
	0x02775B64 LDR X8, [X8 + 0xC0]
	0x02775B68 LDR X0, [X8 + 0x8]
	0x02775B6C LDRB W8, [X0 + 0x135]
	0x02775B70 TBNZ X8, 0x0, 0x2775B78
	0x02775B74 BL 0x1C5C684
	0x02775B78 LDR W8, [X0 + 0xE0]
	0x02775B7C CBNZ W8, 0x2775B84
	0x02775B80 BL 0x1C16DFC
	0x02775B84 LDR X8, [X20 + 0x20]
	0x02775B88 LDR X8, [X8 + 0xC0]
	0x02775B8C LDR X0, [X8 + 0x8]
	0x02775B90 LDRB W8, [X0 + 0x135]
	0x02775B94 TBNZ X8, 0x0, 0x2775B9C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+1024]
	005 Compare X0, 0
	006 JumpIfEqual {26}
	007 Move X8, [X0]
	008 Move X9, [X8+2840]
	009 Move X1, [X8+2848]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X1, X31
	012 Call String.IsNullOrEmpty, X0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X19, [X19+1024]
	018 Compare X19, 0
	019 JumpIfEqual {26}
	020 Move X0, X19
	021 Move X1, X31
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Call VisualElement.get_worldBound, X0
	025 Return X0
	026 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x02775B98 BL 0x1C5C684
	0x02775B9C ADRP X9, 0x19A7000
	0x02775BA0 LDR X8, [X0 + 0xB8]
	0x02775BA4 LDR X9, [X9 + 0x130]
	0x02775BA8 LDR X22, [X8 + 0x40]
	0x02775BAC LDR X0, [X9]
	0x02775BB0 BL 0x1C16F10
	0x02775BB4 MOV X1, X22
	0x02775BB8 MOV X2, X31
	0x02775BBC MOV X21, X0
	0x02775BC0 BL 0x3D6B65C
	0x02775BC4 CBZ X21, 0x2775C50
	0x02775BC8 MOVZ W8, 0x1
	0x02775BCC MOVN W9, 0x0
	0x02775BD0 STRB W8, [X21 + 0x20]
	0x02775BD4 STR W9, [X21 + 0x24]
	0x02775BD8 STR X21, [X19 + 0x420]
	0x02775BDC LDR X8, [X20 + 0x20]
	0x02775BE0 LDR X8, [X8 + 0xC0]
	0x02775BE4 LDR X0, [X8 + 0x8]
	0x02775BE8 LDRB W8, [X0 + 0x135]
	0x02775BEC TBNZ X8, 0x0, 0x2775BF4
	0x02775BF0 BL 0x1C5C684
	0x02775BF4 LDR X8, [X0 + 0xB8]
	0x02775BF8 MOV X0, X21
	0x02775BFC MOV X2, X31
	0x02775C00 LDR X1, [X8 + 0x8]
	0x02775C04 BL 0x3DF1C70
	0x02775C08 LDR X8, [X20 + 0x20]
	0x02775C0C LDR X20, [X19 + 0x420]
	0x02775C10 LDR X8, [X8 + 0xC0]
	0x02775C14 LDR X0, [X8 + 0x8]
	0x02775C18 LDRB W8, [X0 + 0x135]
	0x02775C1C TBNZ X8, 0x0, 0x2775C24
	0x02775C20 BL 0x1C5C684
	0x02775C24 CBZ X20, 0x2775C50
	0x02775C28 LDR X8, [X0 + 0xB8]
	0x02775C2C MOV X0, X20
	0x02775C30 MOV X2, X31
	0x02775C34 LDR X1, [X8 + 0x28]
	0x02775C38 BL 0x3DF1C70
	0x02775C3C LDR X0, [X19 + 0x420]
	0x02775C40 LDP X20, X19, [X31 + 0x20]
	0x02775C44 LDP X22, X21, [X31 + 0x10]
	0x02775C48 LDR X30, [X31], #0x30
	0x02775C4C RET
	0x02775C50 BL 0x1C16F20
	0x02775C54 LDR X0, [X0 + 0x440]
	0x02775C58 RET
	0x02775C5C LDR X0, [X0 + 0x448]
	0x02775C60 RET
	0x02775C64 STR X30, [X31 - 0x50]!
	0x02775C68 STP X26, X25, [X31 + 0x10]
	0x02775C6C STP X24, X23, [X31 + 0x20]
	0x02775C70 STP X22, X21, [X31 + 0x30]
	0x02775C74 STP X20, X19, [X31 + 0x40]
	0x02775C78 ADRP X22, 0x1C65000
	0x02775C7C LDRB W8, [X22 + 0x7E0]
	0x02775C80 MOV X20, X2
	0x02775C84 MOV X21, X1
	0x02775C88 MOV X19, X0
	0x02775C8C TBNZ X8, 0x0, 0x2775CD4
	0x02775C90 ADRP X0, 0x19A8000
	0x02775C94 LDR X0, [X0 + 0xD60]
	0x02775C98 BL 0x1C16CF4
	0x02775C9C ADRP X0, 0x19A8000
	0x02775CA0 LDR X0, [X0 + 0xD68]
	0x02775CA4 BL 0x1C16CF4
	0x02775CA8 ADRP X0, 0x19A8000
	0x02775CAC LDR X0, [X0 + 0xD70]
	0x02775CB0 BL 0x1C16CF4
	0x02775CB4 ADRP X0, 0x19A8000
	0x02775CB8 LDR X0, [X0 + 0xD78]
	0x02775CBC BL 0x1C16CF4
	0x02775CC0 ADRP X0, 0x19A7000
	0x02775CC4 LDR X0, [X0 + 0x130]
	0x02775CC8 BL 0x1C16CF4
	0x02775CCC MOVZ W8, 0x1
	0x02775CD0 STRB W8, [X22 + 0x7E0]
	0x02775CD4 MOV X0, X19
	0x02775CD8 MOV X1, X31
	0x02775CDC BL 0x3CE9F64
	0x02775CE0 CBZ X19, 0x2775EE4
	0x02775CE4 MOVZ W1, 0x1
	0x02775CE8 MOV X0, X19
	0x02775CEC MOV X2, X31
	0x02775CF0 MOVZ W22, 0x1
	0x02775CF4 BL 0x3DEB85C
	0x02775CF8 MOVZ W1, 0x1
	0x02775CFC MOV X0, X19
	0x02775D00 MOV X2, X31
	0x02775D04 STRB W22, [X19 + 0x20]
	0x02775D08 STR W31, [X19 + 0x24]
	0x02775D0C BL 0x3DAED94
	0x02775D10 MOVZ W1, 0x1
	0x02775D14 MOV X0, X19
	0x02775D18 MOV X2, X31
	0x02775D1C BL 0x3DAED80
	0x02775D20 LDR X8, [X20 + 0x20]
	0x02775D24 LDR X8, [X8 + 0xC0]
	0x02775D28 LDR X0, [X8 + 0x8]
	0x02775D2C LDRB W8, [X0 + 0x135]
	0x02775D30 TBNZ X8, 0x0, 0x2775D38
	0x02775D34 BL 0x1C5C684
	0x02775D38 LDR W8, [X0 + 0xE0]
	0x02775D3C CBNZ W8, 0x2775D44
	0x02775D40 BL 0x1C16DFC
	0x02775D44 LDR X8, [X20 + 0x20]
	0x02775D48 ADRP X22, 0x19A7000
	0x02775D4C LDR X8, [X8 + 0xC0]
	0x02775D50 LDR X0, [X8 + 0x8]
	0x02775D54 LDRB W8, [X0 + 0x135]
	0x02775D58 LDR X22, [X22 + 0x130]
	0x02775D5C TBNZ X8, 0x0, 0x2775D64
	0x02775D60 BL 0x1C5C684
	0x02775D64 LDR X8, [X0 + 0xB8]
	0x02775D68 MOV X0, X19
	0x02775D6C MOV X2, X31
	0x02775D70 LDR X1, [X8]
	0x02775D74 BL 0x3DF1C70
	0x02775D78 LDR X0, [X22]
	0x02775D7C BL 0x1C16F10
	0x02775D80 MOV X1, X31
	0x02775D84 MOV X22, X0
	0x02775D88 BL 0x3D6B60C
	0x02775D8C CBZ X22, 0x2775EE4
	0x02775D90 MOVZ W8, 0x1
	0x02775D94 MOVN W9, 0x0
	0x02775D98 STRB W8, [X22 + 0x20]
	0x02775D9C STR W9, [X22 + 0x24]
	0x02775DA0 LDR X8, [X20 + 0x20]
	0x02775DA4 LDR X8, [X8 + 0xC0]
	0x02775DA8 STR X22, [X19 + 0x410]
	0x02775DAC LDR X0, [X8 + 0x8]
	0x02775DB0 LDRB W8, [X0 + 0x135]
	0x02775DB4 TBNZ X8, 0x0, 0x2775DBC
	0x02775DB8 BL 0x1C5C684
	0x02775DBC LDR X8, [X0 + 0xB8]
	0x02775DC0 ADRP X26, 0x19A8000
	0x02775DC4 LDR X26, [X26 + 0xD70]
	0x02775DC8 ADRP X25, 0x19A8000
	0x02775DCC LDR X1, [X8 + 0x8]
	0x02775DD0 ADRP X24, 0x19A8000
	0x02775DD4 ADRP X23, 0x19A8000
	0x02775DD8 LDR X25, [X25 + 0xD60]
	0x02775DDC LDR X24, [X24 + 0xD78]
	0x02775DE0 LDR X23, [X23 + 0xD68]
	0x02775DE4 MOV X0, X22
	0x02775DE8 MOV X2, X31
	0x02775DEC BL 0x3DF1C70
	0x02775DF0 LDR X8, [X20 + 0x20]
	0x02775DF4 LDR X8, [X8 + 0xC0]
	0x02775DF8 CBZ X21, 0x2775E10
	0x02775DFC LDR X2, [X8 + 0x80]
	0x02775E00 MOV X0, X19
	0x02775E04 MOV X1, X21
	0x02775E08 BL 0x2775978
	0x02775E0C B 0x2775E58
	0x02775E10 LDR X0, [X8 + 0x8]
	0x02775E14 LDRB W8, [X0 + 0x135]
	0x02775E18 TBNZ X8, 0x0, 0x2775E20
	0x02775E1C BL 0x1C5C684
	0x02775E20 LDR W8, [X0 + 0xE0]
	0x02775E24 CBNZ W8, 0x2775E2C
	0x02775E28 BL 0x1C16DFC
	0x02775E2C LDR X8, [X20 + 0x20]
	0x02775E30 LDR X8, [X8 + 0xC0]
	0x02775E34 LDR X0, [X8 + 0x8]
	0x02775E38 LDRB W8, [X0 + 0x135]
	0x02775E3C TBNZ X8, 0x0, 0x2775E44
	0x02775E40 BL 0x1C5C684
	0x02775E44 LDR X8, [X0 + 0xB8]
	0x02775E48 MOV X0, X19
	0x02775E4C MOV X2, X31
	0x02775E50 LDR X1, [X8 + 0x18]
	0x02775E54 BL 0x3DF1C70
	0x02775E58 LDR X0, [X26]
	0x02775E5C BL 0x1C16F10
	0x02775E60 LDR X8, [X20 + 0x20]
	0x02775E64 MOV X1, X19
	0x02775E68 MOV X3, X31
	0x02775E6C MOV X21, X0
	0x02775E70 LDR X8, [X8 + 0xC0]
	0x02775E74 LDR X2, [X8 + 0x88]
	0x02775E78 BL 0x2D0E824
	0x02775E7C LDR X3, [X25]
	0x02775E80 MOV X0, X19
	0x02775E84 MOV X1, X21
	0x02775E88 MOV W2, W31
	0x02775E8C BL 0x21A1534
	0x02775E90 LDR X0, [X24]
	0x02775E94 BL 0x1C16F10
	0x02775E98 LDR X8, [X20 + 0x20]
	0x02775E9C MOV X1, X19
	0x02775EA0 MOV X3, X31
	0x02775EA4 MOV X20, X0
	0x02775EA8 LDR X8, [X8 + 0xC0]
	0x02775EAC LDR X2, [X8 + 0x90]
	0x02775EB0 BL 0x2D0E824
	0x02775EB4 LDR X3, [X23]
	0x02775EB8 MOV X0, X19
	0x02775EBC MOV X1, X20
	0x02775EC0 MOV W2, W31
	0x02775EC4 BL 0x21A1534
	0x02775EC8 STR X31, [X19 + 0x3E8]
	0x02775ECC LDP X20, X19, [X31 + 0x40]
	0x02775ED0 LDP X22, X21, [X31 + 0x30]
	0x02775ED4 LDP X24, X23, [X31 + 0x20]
	0x02775ED8 LDP X26, X25, [X31 + 0x10]
	0x02775EDC LDR X30, [X31], #0x50
	0x02775EE0 RET
	0x02775EE4 BL 0x1C16F20
	0x02775EE8 STP X30, X21, [X31 - 0x20]!
	0x02775EEC STP X20, X19, [X31 + 0x10]
	0x02775EF0 LDR X8, [X3 + 0x20]
	0x02775EF4 MOV X20, X2
	0x02775EF8 MOV X19, X3
	0x02775EFC MOV X21, X0
	0x02775F00 LDR X8, [X8 + 0xC0]
	0x02775F04 LDR X2, [X8 + 0x98]
	0x02775F08 BL 0x2775C64
	0x02775F0C LDR X8, [X19 + 0x20]
	0x02775F10 MOV X1, X20
	0x02775F14 LDP X20, X19, [X31 + 0x10]
	0x02775F18 MOV X0, X21
	0x02775F1C LDR X8, [X8 + 0xC0]
	0x02775F20 LDR X2, [X8 + 0xA0]
	0x02775F24 LDP X30, X21, [X31], #0x20
	0x02775F28 B 0x27753A0
	0x02775F2C SUB X31, X31, 0xA0
	0x02775F30 STR X30, [X31 + 0x80]
	0x02775F34 STP X20, X19, [X31 + 0x90]
	0x02775F38 LDR X8, [X2 + 0x20]
	0x02775F3C MOV X20, X0
	0x02775F40 MOV X19, X1
	0x02775F44 LDR X8, [X8 + 0xC0]
	0x02775F48 LDR X8, [X8 + 0xA8]
	0x02775F4C MOV X0, X8
	0x02775F50 BL 0x2118AA0
	0x02775F54 LDR X8, [X20 + 0x400]
	0x02775F58 LDR V0, [X20 + 0x3F]
	0x02775F5C STR X8, [X31 + 0x30]
	0x02775F60 STR V0, [X31 + 0x2]
	0x02775F64 LDR X8, [X19 + 0x10]
	0x02775F68 LDR V0, [X19]
	0x02775F6C STR X8, [X31 + 0x10]
	0x02775F70 STR V0, [X31]
	0x02775F74 CBZ X0, 0x2775FC4
	0x02775F78 LDR X8, [X0]
	0x02775F7C LDR V0, [X31 + 0x2]
	0x02775F80 LDR X9, [X31 + 0x30]
	0x02775F84 LDR V1, [X31]
	0x02775F88 LDR X10, [X31 + 0x10]
	0x02775F8C LDR X11, [X8 + 0x1B8]
	0x02775F90 STR V0, [X31 + 0x6]
	0x02775F94 STR X9, [X31 + 0x70]
	0x02775F98 STR V1, [X31 + 0x4]
	0x02775F9C STR X10, [X31 + 0x50]
	0x02775FA0 LDR X3, [X8 + 0x1C0]
	0x02775FA4 ADD X1, X31, 0x60
	0x02775FA8 ADD X2, X31, 0x40
	0x02775FAC BLR X11
	0x02775FB0 LDP X20, X19, [X31 + 0x90]
	0x02775FB4 LDR X30, [X31 + 0x80]
	0x02775FB8 AND W0, W0, 0x1
	0x02775FBC ADD X31, X31, 0xA0
	0x02775FC0 RET
	0x02775FC4 BL 0x1C16F20
	0x02775FC8 STP X30, X23, [X31 - 0x30]!
	0x02775FCC STP X22, X21, [X31 + 0x10]
	0x02775FD0 STP X20, X19, [X31 + 0x20]
	0x02775FD4 ADRP X22, 0x1C65000
	0x02775FD8 LDRB W8, [X22 + 0x7E1]
	0x02775FDC MOV X20, X2
	0x02775FE0 MOV X21, X1
	0x02775FE4 MOV X19, X0
	0x02775FE8 TBNZ X8, 0x0, 0x2776054
	0x02775FEC ADRP X0, 0x19A8000
	0x02775FF0 LDR X0, [X0 + 0x638]
	0x02775FF4 BL 0x1C16CF4
	0x02775FF8 ADRP X0, 0x19A8000
	0x02775FFC LDR X0, [X0 + 0x658]
	0x02776000 BL 0x1C16CF4
	0x02776004 ADRP X0, 0x19A7000
	0x02776008 LDR X0, [X0 + 0x660]
	0x0277600C BL 0x1C16CF4
	0x02776010 ADRP X0, 0x19A7000
	0x02776014 LDR X0, [X0 + 0x640]
	0x02776018 BL 0x1C16CF4
	0x0277601C ADRP X0, 0x19A6000
	0x02776020 LDR X0, [X0 + 0xE80]
	0x02776024 BL 0x1C16CF4
	0x02776028 ADRP X0, 0x19A7000
	0x0277602C LDR X0, [X0 + 0xD80]
	0x02776030 BL 0x1C16CF4
	0x02776034 ADRP X0, 0x19A7000
	0x02776038 LDR X0, [X0 + 0xD88]
	0x0277603C BL 0x1C16CF4
	0x02776040 ADRP X0, 0x19A7000
	0x02776044 LDR X0, [X0 + 0xD90]
	0x02776048 BL 0x1C16CF4
	0x0277604C MOVZ W8, 0x1
	0x02776050 STRB W8, [X22 + 0x7E1]
	0x02776054 LDR X8, [X19]
	0x02776058 MOV X0, X19
	0x0277605C LDR X9, [X8 + 0x858]
	0x02776060 LDR X1, [X8 + 0x860]
	0x02776064 BLR X9
	0x02776068 CBZ X21, 0x2776260
	0x0277606C LDR X21, [X21 + 0x90]
	0x02776070 CBZ X21, 0x2776250
	0x02776074 ADRP X10, 0x19A6000
	0x02776078 LDR X8, [X21]
	0x0277607C LDR X10, [X10 + 0xE80]
	0x02776080 LDRH W9, [X8 + 0x12E]
	0x02776084 LDR X1, [X10]
	0x02776088 CBZ X9, 0x27760AC
	0x0277608C LDR X10, [X8 + 0xB0]
	0x02776090 ADD X10, X10, 0x8
	0x02776094 LDUR X11, [X10 - 0x8]
	0x02776098 CMP X11, X1
	0x0277609C B.EQ 0x27760BC
	0x027760A0 SUBS X9, X9, 0x1
	0x027760A4 ADD X10, X10, 0x10
	0x027760A8 B.NE 0x2776094
	0x027760AC MOVZ W2, 0x2
	0x027760B0 MOV X0, X21
	0x027760B4 BL 0x1C5C788
	0x027760B8 B 0x27760CC
	0x027760BC LDR W9, [X10]
	0x027760C0 ADD W9, W9, 0x2
	0x027760C4 ADD X8, X8, W9, 0x4, SXTW
	0x027760C8 ADD X0, X8, 0x138
	0x027760CC LDP X8, X1, [X0]
	0x027760D0 MOV X0, X21
	0x027760D4 BLR X8
	0x027760D8 CBZ W0, 0x2776250
	0x027760DC CBZ X19, 0x2776260
	0x027760E0 MOV X0, X19
	0x027760E4 MOV X1, X31
	0x027760E8 BL 0x3DEBF58
	0x027760EC CBZ X0, 0x277614C
	0x027760F0 ADRP X22, 0x19A7000
	0x027760F4 ADRP X23, 0x19A7000
	0x027760F8 LDR X22, [X22 + 0xD88]
	0x027760FC LDR X23, [X23 + 0xD90]
	0x02776100 MOV X21, X0
	0x02776104 LDR X1, [X22]
	0x02776108 MOV X0, X21
	0x0277610C MOV X2, X31
	0x02776110 BL 0x3DF2F6C
	0x02776114 TBZ X0, 0x0, 0x277611C
	0x02776118 STR X21, [X19 + 0x438]
	0x0277611C LDR X1, [X23]
	0x02776120 MOV X0, X21
	0x02776124 MOV X2, X31
	0x02776128 BL 0x3DF2F6C
	0x0277612C TBNZ X0, 0x0, 0x2776148
	0x02776130 MOV X0, X21
	0x02776134 MOV X1, X31
	0x02776138 BL 0x3DEBF58
	0x0277613C MOV X21, X0
	0x02776140 CBNZ X0, 0x2776104
	0x02776144 B 0x277614C
	0x02776148 STR X21, [X19 + 0x430]
	0x0277614C LDR X8, [X19 + 0x438]
	0x02776150 CBZ X8, 0x2776250
	0x02776154 ADRP X8, 0xFFFFFFFFFE375000
	0x02776158 LDR V0, [X8 + 0x7D]
	0x0277615C ADD X8, X19, 0x3D8
	0x02776160 STR V0, [X8]
	0x02776164 ADRP X8, 0x19A7000
	0x02776168 LDR X8, [X8 + 0x640]
	0x0277616C LDR X0, [X8]
	0x02776170 BL 0x1C16F10
	0x02776174 LDR X8, [X20 + 0x20]
	0x02776178 MOV X1, X19
	0x0277617C MOV X3, X31
	0x02776180 MOV X21, X0
	0x02776184 LDR X8, [X8 + 0xC0]
	0x02776188 LDR X2, [X8 + 0xD0]
	0x0277618C BL 0x2D0E824
	0x02776190 ADRP X8, 0x19A7000
	0x02776194 LDR X8, [X8 + 0x638]
	0x02776198 MOV X0, X19
	0x0277619C MOV X1, X21
	0x027761A0 MOV W2, W31
	0x027761A4 LDR X3, [X8]
	0x027761A8 BL 0x21A1534
	0x027761AC LDR X8, [X20 + 0x20]
	0x027761B0 LDR X8, [X8 + 0xC0]
	0x027761B4 LDR X0, [X8 + 0x8]
	0x027761B8 LDRB W8, [X0 + 0x135]
	0x027761BC TBNZ X8, 0x0, 0x27761C4
	0x027761C0 BL 0x1C5C684
	0x027761C4 LDR W8, [X0 + 0xE0]
	0x027761C8 CBNZ W8, 0x27761D0
	0x027761CC BL 0x1C16DFC
	0x027761D0 LDR X8, [X20 + 0x20]
	0x027761D4 LDR X8, [X8 + 0xC0]
	0x027761D8 LDR X0, [X8 + 0x8]
	0x027761DC LDRB W8, [X0 + 0x135]
	0x027761E0 TBNZ X8, 0x0, 0x27761E8
	0x027761E4 BL 0x1C5C684
	0x027761E8 LDR X8, [X0 + 0xB8]
	0x027761EC MOV X0, X19
	0x027761F0 MOV X2, X31
	0x027761F4 LDR X1, [X8 + 0x38]
	0x027761F8 BL 0x3DF1C70
	0x027761FC ADRP X8, 0x19A7000
	0x02776200 LDR X8, [X8 + 0x660]
	0x02776204 LDR X0, [X8]
	0x02776208 BL 0x1C16F10
	0x0277620C LDR X8, [X20 + 0x20]
	0x02776210 MOV X1, X19
	0x02776214 MOV X3, X31
	0x02776218 MOV X20, X0
	0x0277621C LDR X8, [X8 + 0xC0]
	0x02776220 LDR X2, [X8 + 0xD8]
	0x02776224 BL 0x2D0E824
	0x02776228 ADRP X8, 0x19A7000
	0x0277622C LDR X8, [X8 + 0x658]
	0x02776230 MOV X0, X19
	0x02776234 MOV X1, X20
	0x02776238 LDP X20, X19, [X31 + 0x20]
	0x0277623C LDR X3, [X8]
	0x02776240 LDP X22, X21, [X31 + 0x10]
	0x02776244 MOV W2, W31
	0x02776248 LDP X30, X23, [X31], #0x30
	0x0277624C B 0x21A1534
	0x02776250 LDP X20, X19, [X31 + 0x20]
	0x02776254 LDP X22, X21, [X31 + 0x10]
	0x02776258 LDP X30, X23, [X31], #0x30
	0x0277625C RET
	0x02776260 BL 0x1C16F20
	0x02776264 STP X30, X19, [X31 - 0x10]!
	0x02776268 LDR X8, [X0]
	0x0277626C MOV X19, X0
	0x02776270 LDR X9, [X8 + 0x868]
	0x02776274 LDR X1, [X8 + 0x870]
	0x02776278 BLR X9
	0x0277627C STR X31, [X19 + 0x408]
	0x02776280 LDP X30, X19, [X31], #0x10
	0x02776284 RET
	0x02776288 STP X30, X23, [X31 - 0x30]!
	0x0277628C STP X22, X21, [X31 + 0x10]
	0x02776290 STP X20, X19, [X31 + 0x20]
	0x02776294 ADRP X21, 0x1C64000
	0x02776298 ADRP X22, 0x19A7000
	0x0277629C LDRB W8, [X21 + 0x7E2]
	0x027762A0 LDR X22, [X22 + 0xD98]
	0x027762A4 MOV X20, X1
	0x027762A8 MOV X19, X0
	0x027762AC TBNZ X8, 0x0, 0x27762E8
	0x027762B0 ADRP X0, 0x19A7000
	0x027762B4 LDR X0, [X0 + 0xDA0]
	0x027762B8 BL 0x1C16CF4
	0x027762BC ADRP X0, 0x19A7000
	0x027762C0 LDR X0, [X0 + 0xDA8]
	0x027762C4 BL 0x1C16CF4
	0x027762C8 ADRP X0, 0x19A7000
	0x027762CC LDR X0, [X0 + 0xD98]
	0x027762D0 BL 0x1C16CF4
	0x027762D4 ADRP X0, 0x19A7000
	0x027762D8 LDR X0, [X0 + 0xDB0]
	0x027762DC BL 0x1C16CF4
	0x027762E0 MOVZ W8, 0x1
	0x027762E4 STRB W8, [X21 + 0x7E2]
	0x027762E8 LDR X0, [X22]
	0x027762EC BL 0x1C16F10
	0x027762F0 LDR X8, [X20 + 0x20]
	0x027762F4 MOV X1, X19
	0x027762F8 MOV X3, X31
	0x027762FC MOV X21, X0
	0x02776300 LDR X8, [X8 + 0xC0]
	0x02776304 LDR X2, [X8 + 0xE8]
	0x02776308 BL 0x2D0E824
	0x0277630C CBZ X19, 0x2776380
	0x02776310 ADRP X8, 0x19A7000
	0x02776314 LDR X8, [X8 + 0xDA0]
	0x02776318 ADRP X22, 0x19A7000
	0x0277631C ADRP X23, 0x19A7000
	0x02776320 MOV X0, X19
	0x02776324 LDR X3, [X8]
	0x02776328 LDR X22, [X22 + 0xDB0]
	0x0277632C LDR X23, [X23 + 0xDA8]
	0x02776330 MOV X1, X21
	0x02776334 MOV W2, W31
	0x02776338 BL 0x21A1534
	0x0277633C LDR X0, [X22]
	0x02776340 BL 0x1C16F10
	0x02776344 LDR X8, [X20 + 0x20]
	0x02776348 MOV X1, X19
	0x0277634C MOV X3, X31
	0x02776350 MOV X20, X0
	0x02776354 LDR X8, [X8 + 0xC0]
	0x02776358 LDR X2, [X8 + 0xF0]
	0x0277635C BL 0x2D0E824
	0x02776360 LDR X3, [X23]
	0x02776364 MOV X0, X19
	0x02776368 MOV X1, X20
	0x0277636C LDP X20, X19, [X31 + 0x20]
	0x02776370 LDP X22, X21, [X31 + 0x10]
	0x02776374 MOV W2, W31
	0x02776378 LDP X30, X23, [X31], #0x30
	0x0277637C B 0x21A1534
	0x02776380 BL 0x1C16F20
	0x02776384 STP X30, X23, [X31 - 0x30]!
	0x02776388 STP X22, X21, [X31 + 0x10]
	0x0277638C STP X20, X19, [X31 + 0x20]
	0x02776390 ADRP X21, 0x1C64000
	0x02776394 ADRP X22, 0x19A7000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0x1C66000
	008 Move X21, 0x19A9000
	009 Move W8, [X20+2012]
	010 Move X21, [X21+3536]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {63}
	016 Move X0, 0x19A9000
	017 Move X0, [X0+3544]
	018 Call 0x1C17CF4
	019 Move X0, 0x19A9000
	020 Move X0, [X0+3552]
	021 Call 0x1C17CF4
	022 Move X0, 0x19A9000
	023 Move X0, [X0+3560]
	024 Call 0x1C17CF4
	025 Move X0, 0x19A9000
	026 Move X0, [X0+3568]
	027 Call 0x1C17CF4
	028 Move X0, 0x19A9000
	029 Move X0, [X0+3576]
	030 Call 0x1C17CF4
	031 Move X0, 0x19A9000
	032 Move X0, [X0+3584]
	033 Call 0x1C17CF4
	034 Move X0, 0x19A9000
	035 Move X0, [X0+3592]
	036 Call 0x1C17CF4
	037 Move X0, 0x19A9000
	038 Move X0, [X0+3600]
	039 Call 0x1C17CF4
	040 Move X0, 0x19A9000
	041 Move X0, [X0+3536]
	042 Call 0x1C17CF4
	043 Move X0, 0x19A9000
	044 Move X0, [X0+3608]
	045 Call 0x1C17CF4
	046 Move X0, 0x19A9000
	047 Move X0, [X0+3616]
	048 Call 0x1C17CF4
	049 Move X0, 0x19A9000
	050 Move X0, [X0+3624]
	051 Call 0x1C17CF4
	052 Move X0, 0x19A8000
	053 Move X0, [X0+3768]
	054 Call 0x1C17CF4
	055 Move X0, 0x19A9000
	056 Move X0, [X0+3632]
	057 Call 0x1C17CF4
	058 Move X0, 0x19A8000
	059 Move X0, [X0+3776]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X20+2012], W8
	063 Move X20, [X21]
	064 Add X19, X19, 32
	065 Move X0, [X19]
	066 Move W8, [X0+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {72}
	071 Call 0x1C5D684
	072 Move X8, [X0+192]
	073 Move X0, [X8+8]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move X8, [X0+184]
	081 Move [X8], X20
	082 Move X0, [X19]
	083 Move W8, [X0+309]
	084 Move TEMP, X8
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {89}
	088 Call 0x1C5D684
	089 Move X8, [X0+192]
	090 Move X0, [X8+8]
	091 Move W8, [X0+309]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {97}
	096 Call 0x1C5D684
	097 Move X0, [X19]
	098 Move W8, [X0+309]
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {104}
	103 Call 0x1C5D684
	104 Move X8, [X0+192]
	105 Move X20, 0x19A8000
	106 Move X0, [X8+8]
	107 Move W8, [X0+309]
	108 Move X20, [X20+3768]
	109 Move TEMP, X8
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {114}
	113 Call 0x1C5D684
	114 Move X8, [X0+184]
	115 Move X1, [X20]
	116 Move X2, X31
	117 Move X0, [X8]
	118 Call String.Concat, X0, X1
	119 Move X8, [X19]
	120 Move X20, X0
	121 Move W9, [X8+309]
	122 Move TEMP, X9
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfEqual {129}
	126 Move X0, X8
	127 Call 0x1C5D684
	128 Move X8, X0
	129 Move X8, [X8+192]
	130 Move X0, [X8+8]
	131 Move W8, [X0+309]
	132 Move TEMP, X8
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {137}
	136 Call 0x1C5D684
	137 Move X8, [X0+184]
	138 Move [X8+8], X20
	139 Move X0, [X19]
	140 Move W8, [X0+309]
	141 Move TEMP, X8
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {146}
	145 Call 0x1C5D684
	146 Move X8, [X0+192]
	147 Move X0, [X8+8]
	148 Move W8, [X0+309]
	149 Move TEMP, X8
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {154}
	153 Call 0x1C5D684
	154 Move X0, [X19]
	155 Move W8, [X0+309]
	156 Move TEMP, X8
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {161}
	160 Call 0x1C5D684
	161 Move X8, [X0+192]
	162 Move X20, 0x19A8000
	163 Move X0, [X8+8]
	164 Move W8, [X0+309]
	165 Move X20, [X20+3776]
	166 Move TEMP, X8
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfEqual {171}
	170 Call 0x1C5D684
	171 Move X8, [X0+184]
	172 Move X1, [X20]
	173 Move X2, X31
	174 Move X0, [X8]
	175 Call String.Concat, X0, X1
	176 Move X8, [X19]
	177 Move X20, X0
	178 Move W9, [X8+309]
	179 Move TEMP, X9
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfEqual {186}
	183 Move X0, X8
	184 Call 0x1C5D684
	185 Move X8, X0
	186 Move X8, [X8+192]
	187 Move X0, [X8+8]
	188 Move W8, [X0+309]
	189 Move TEMP, X8
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfEqual {194}
	193 Call 0x1C5D684
	194 Move X8, [X0+184]
	195 Move [X8+16], X20
	196 Move X0, [X19]
	197 Move W8, [X0+309]
	198 Move TEMP, X8
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfEqual {203}
	202 Call 0x1C5D684
	203 Move X8, [X0+192]
	204 Move X0, [X8+8]
	205 Move W8, [X0+309]
	206 Move TEMP, X8
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfEqual {211}
	210 Call 0x1C5D684
	211 Move X0, [X19]
	212 Move W8, [X0+309]
	213 Move TEMP, X8
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfEqual {218}
	217 Call 0x1C5D684
	218 Move X8, [X0+192]
	219 Move X20, 0x19A9000
	220 Move X0, [X8+8]
	221 Move W8, [X0+309]
	222 Move X20, [X20+3608]
	223 Move TEMP, X8
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfEqual {228}
	227 Call 0x1C5D684
	228 Move X8, [X0+184]
	229 Move X1, [X20]
	230 Move X2, X31
	231 Move X0, [X8]
	232 Call String.Concat, X0, X1
	233 Move X8, [X19]
	234 Move X20, X0
	235 Move W9, [X8+309]
	236 Move TEMP, X9
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfEqual {243}
	240 Move X0, X8
	241 Call 0x1C5D684
	242 Move X8, X0
	243 Move X8, [X8+192]
	244 Move X0, [X8+8]
	245 Move W8, [X0+309]
	246 Move TEMP, X8
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfEqual {251}
	250 Call 0x1C5D684
	251 Move X8, [X0+184]
	252 Move [X8+24], X20
	253 Move X0, [X19]
	254 Move W8, [X0+309]
	255 Move TEMP, X8
	256 And TEMP, TEMP, 1
	257 Compare TEMP, 1
	258 JumpIfEqual {260}
	259 Call 0x1C5D684
	260 Move X8, [X0+192]
	261 Move X0, [X8+8]
	262 Move W8, [X0+309]
	263 Move TEMP, X8
	264 And TEMP, TEMP, 1
	265 Compare TEMP, 1
	266 JumpIfEqual {268}
	267 Call 0x1C5D684
	268 Move X0, [X19]
	269 Move W8, [X0+309]
	270 Move TEMP, X8
	271 And TEMP, TEMP, 1
	272 Compare TEMP, 1
	273 JumpIfEqual {275}
	274 Call 0x1C5D684
	275 Move X8, [X0+192]
	276 Move X20, 0x19A9000
	277 Move X0, [X8+8]
	278 Move W8, [X0+309]
	279 Move X20, [X20+3576]
	280 Move TEMP, X8
	281 And TEMP, TEMP, 1
	282 Compare TEMP, 1
	283 JumpIfEqual {285}
	284 Call 0x1C5D684
	285 Move X8, [X0+184]
	286 Move X1, [X20]
	287 Move X2, X31
	288 Move X0, [X8+8]
	289 Call String.Concat, X0, X1
	290 Move X8, [X19]
	291 Move X20, X0
	292 Move W9, [X8+309]
	293 Move TEMP, X9
	294 And TEMP, TEMP, 1
	295 Compare TEMP, 1
	296 JumpIfEqual {300}
	297 Move X0, X8
	298 Call 0x1C5D684
	299 Move X8, X0
	300 Move X8, [X8+192]
	301 Move X0, [X8+8]
	302 Move W8, [X0+309]
	303 Move TEMP, X8
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfEqual {308}
	307 Call 0x1C5D684
	308 Move X8, [X0+184]
	309 Move [X8+32], X20
	310 Move X0, [X19]
	311 Move W8, [X0+309]
	312 Move TEMP, X8
	313 And TEMP, TEMP, 1
	314 Compare TEMP, 1
	315 JumpIfEqual {317}
	316 Call 0x1C5D684
	317 Move X8, [X0+192]
	318 Move X0, [X8+8]
	319 Move W8, [X0+309]
	320 Move TEMP, X8
	321 And TEMP, TEMP, 1
	322 Compare TEMP, 1
	323 JumpIfEqual {325}
	324 Call 0x1C5D684
	325 Move X0, [X19]
	326 Move W8, [X0+309]
	327 Move TEMP, X8
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfEqual {332}
	331 Call 0x1C5D684
	332 Move X8, [X0+192]
	333 Move X20, 0x19A9000
	334 Move X0, [X8+8]
	335 Move W8, [X0+309]
	336 Move X20, [X20+3584]
	337 Move TEMP, X8
	338 And TEMP, TEMP, 1
	339 Compare TEMP, 1
	340 JumpIfEqual {342}
	341 Call 0x1C5D684
	342 Move X8, [X0+184]
	343 Move X1, [X20]
	344 Move X2, X31
	345 Move X0, [X8+8]
	346 Call String.Concat, X0, X1
	347 Move X8, [X19]
	348 Move X20, X0
	349 Move W9, [X8+309]
	350 Move TEMP, X9
	351 And TEMP, TEMP, 1
	352 Compare TEMP, 1
	353 JumpIfEqual {357}
	354 Move X0, X8
	355 Call 0x1C5D684
	356 Move X8, X0
	357 Move X8, [X8+192]
	358 Move X0, [X8+8]
	359 Move W8, [X0+309]
	360 Move TEMP, X8
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfEqual {365}
	364 Call 0x1C5D684
	365 Move X8, [X0+184]
	366 Move [X8+40], X20
	367 Move X0, [X19]
	368 Move W8, [X0+309]
	369 Move TEMP, X8
	370 And TEMP, TEMP, 1
	371 Compare TEMP, 1
	372 JumpIfEqual {374}
	373 Call 0x1C5D684
	374 Move X8, [X0+192]
	375 Move X0, [X8+8]
	376 Move W8, [X0+309]
	377 Move TEMP, X8
	378 And TEMP, TEMP, 1
	379 Compare TEMP, 1
	380 JumpIfEqual {382}
	381 Call 0x1C5D684
	382 Move X0, [X19]
	383 Move W8, [X0+309]
	384 Move TEMP, X8
	385 And TEMP, TEMP, 1
	386 Compare TEMP, 1
	387 JumpIfEqual {389}
	388 Call 0x1C5D684
	389 Move X8, [X0+192]
	390 Move X20, 0x19A9000
	391 Move X0, [X8+8]
	392 Move W8, [X0+309]
	393 Move X20, [X20+3600]
	394 Move TEMP, X8
	395 And TEMP, TEMP, 1
	396 Compare TEMP, 1
	397 JumpIfEqual {399}
	398 Call 0x1C5D684
	399 Move X8, [X0+184]
	400 Move X1, [X20]
	401 Move X2, X31
	402 Move X0, [X8]
	403 Call String.Concat, X0, X1
	404 Move X8, [X19]
	405 Move X20, X0
	406 Move W9, [X8+309]
	407 Move TEMP, X9
	408 And TEMP, TEMP, 1
	409 Compare TEMP, 1
	410 JumpIfEqual {414}
	411 Move X0, X8
	412 Call 0x1C5D684
	413 Move X8, X0
	414 Move X8, [X8+192]
	415 Move X0, [X8+8]
	416 Move W8, [X0+309]
	417 Move TEMP, X8
	418 And TEMP, TEMP, 1
	419 Compare TEMP, 1
	420 JumpIfEqual {422}
	421 Call 0x1C5D684
	422 Move X8, [X0+184]
	423 Move [X8+48], X20
	424 Move X0, [X19]
	425 Move W8, [X0+309]
	426 Move TEMP, X8
	427 And TEMP, TEMP, 1
	428 Compare TEMP, 1
	429 JumpIfEqual {431}
	430 Call 0x1C5D684
	431 Move X8, [X0+192]
	432 Move X0, [X8+8]
	433 Move W8, [X0+309]
	434 Move TEMP, X8
	435 And TEMP, TEMP, 1
	436 Compare TEMP, 1
	437 JumpIfEqual {439}
	438 Call 0x1C5D684
	439 Move X0, [X19]
	440 Move W8, [X0+309]
	441 Move TEMP, X8
	442 And TEMP, TEMP, 1
	443 Compare TEMP, 1
	444 JumpIfEqual {446}
	445 Call 0x1C5D684
	446 Move X8, [X0+192]
	447 Move X20, 0x19A8000
	448 Move X0, [X8+8]
	449 Move W8, [X0+309]
	450 Move X20, [X20+3616]
	451 Move TEMP, X8
	452 And TEMP, TEMP, 1
	453 Compare TEMP, 1
	454 JumpIfEqual {456}
	455 Call 0x1C5D684
	456 Move X8, [X0+184]
	457 Move X1, [X20]
	458 Move X2, X31
	459 Move X0, [X8]
	460 Call String.Concat, X0, X1
	461 Move X8, [X19]
	462 Move X20, X0
	463 Move W9, [X8+309]
	464 Move TEMP, X9
	465 And TEMP, TEMP, 1
	466 Compare TEMP, 1
	467 JumpIfEqual {471}
	468 Move X0, X8
	469 Call 0x1C5D684
	470 Move X8, X0
	471 Move X8, [X8+192]
	472 Move X0, [X8+8]
	473 Move W8, [X0+309]
	474 Move TEMP, X8
	475 And TEMP, TEMP, 1
	476 Compare TEMP, 1
	477 JumpIfEqual {479}
	478 Call 0x1C5D684
	479 Move X8, [X0+184]
	480 Move [X8+56], X20
	481 Move X0, [X19]
	482 Move W8, [X0+309]
	483 Move TEMP, X8
	484 And TEMP, TEMP, 1
	485 Compare TEMP, 1
	486 JumpIfEqual {488}
	487 Call 0x1C5D684
	488 Move X8, [X0+192]
	489 Move X20, 0x19A8000
	490 Move X0, [X8+8]
	491 Move W8, [X0+309]
	492 Move X20, [X20+3632]
	493 Move TEMP, X8
	494 And TEMP, TEMP, 1
	495 Compare TEMP, 1
	496 JumpIfEqual {498}
	497 Call 0x1C5D684
	498 Move X0, [X19]
	499 Move X20, [X20]
	500 Move W8, [X0+309]
	501 Move TEMP, X8
	502 And TEMP, TEMP, 1
	503 Compare TEMP, 1
	504 JumpIfEqual {506}
	505 Call 0x1C5D684
	506 Move X8, [X0+192]
	507 Move X0, [X8+8]
	508 Move W8, [X0+309]
	509 Move TEMP, X8
	510 And TEMP, TEMP, 1
	511 Compare TEMP, 1
	512 JumpIfEqual {514}
	513 Call 0x1C5D684
	514 Move X8, [X0+184]
	515 Move [X8+64], X20
	516 Move X0, [X19]
	517 Move W8, [X0+309]
	518 Move TEMP, X8
	519 And TEMP, TEMP, 1
	520 Compare TEMP, 1
	521 JumpIfEqual {523}
	522 Call 0x1C5D684
	523 Move X8, [X0+192]
	524 Move X20, 0x19A8000
	525 Move X0, [X8+8]
	526 Move W8, [X0+309]
	527 Move X20, [X20+3624]
	528 Move TEMP, X8
	529 And TEMP, TEMP, 1
	530 Compare TEMP, 1
	531 JumpIfEqual {533}
	532 Call 0x1C5D684
	533 Move X0, [X20]
	534 Move X1, X31
	535 Call PropertyName.op_Implicit, X0
	536 Move X8, [X19]
	537 Move X20, X0
	538 Move W9, [X8+309]
	539 Move TEMP, X9
	540 And TEMP, TEMP, 1
	541 Compare TEMP, 1
	542 JumpIfEqual {546}
	543 Move X0, X8
	544 Call 0x1C5D684
	545 Move X8, X0
	546 Move X8, [X8+192]
	547 Move X22, 0x19A8000
	548 Move X21, 0x19A8000
	549 Move X0, [X8+8]
	550 Move W8, [X0+309]
	551 Move X22, [X22+3552]
	552 Move X21, [X21+3544]
	553 Move TEMP, X8
	554 And TEMP, TEMP, 1
	555 Compare TEMP, 1
	556 JumpIfEqual {558}
	557 Call 0x1C5D684
	558 Move X8, [X0+184]
	559 Add X0, X31, 40
	560 Move [X8+72], W20
	561 Move X1, [X22]
	562 Move X2, [X21]
	563 Move [X31+40], X31
	564 Call CustomStyleProperty`1<Single>..ctor, X0, X1
	565 Move X0, [X19]
	566 Move W8, [X0+309]
	567 Move TEMP, X8
	568 And TEMP, TEMP, 1
	569 Compare TEMP, 1
	570 JumpIfEqual {572}
	571 Call 0x1C5D684
	572 Move X8, [X0+192]
	573 Move X0, [X8+8]
	574 Move W8, [X0+309]
	575 Move TEMP, X8
	576 And TEMP, TEMP, 1
	577 Compare TEMP, 1
	578 JumpIfEqual {580}
	579 Call 0x1C5D684
	580 Move X8, [X0+184]
	581 Move X9, [X31+40]
	582 Move [X8+80], X9
	583 Move X0, [X19]
	584 Move W8, [X0+309]
	585 Move TEMP, X8
	586 And TEMP, TEMP, 1
	587 Compare TEMP, 1
	588 JumpIfEqual {590}
	589 Call 0x1C5D684
	590 Move X8, [X0+192]
	591 Move X20, 0x19A8000
	592 Move X0, [X8+8]
	593 Move W8, [X0+309]
	594 Move X20, [X20+3568]
	595 Move TEMP, X8
	596 And TEMP, TEMP, 1
	597 Compare TEMP, 1
	598 JumpIfEqual {600}
	599 Call 0x1C5D684
	600 Move X1, [X20]
	601 Move X2, [X21]
	602 Add X0, X31, 24
	603 Move [X31+24], X31
	604 Call CustomStyleProperty`1<Single>..ctor, X0, X1
	605 Move X0, [X19]
	606 Move W8, [X0+309]
	607 Move TEMP, X8
	608 And TEMP, TEMP, 1
	609 Compare TEMP, 1
	610 JumpIfEqual {612}
	611 Call 0x1C5D684
	612 Move X8, [X0+192]
	613 Move X0, [X8+8]
	614 Move W8, [X0+309]
	615 Move TEMP, X8
	616 And TEMP, TEMP, 1
	617 Compare TEMP, 1
	618 JumpIfEqual {620}
	619 Call 0x1C5D684
	620 Move X8, [X0+184]
	621 Move X9, [X31+24]
	622 Move [X8+88], X9
	623 Move X0, [X19]
	624 Move W8, [X0+309]
	625 Move TEMP, X8
	626 And TEMP, TEMP, 1
	627 Compare TEMP, 1
	628 JumpIfEqual {630}
	629 Call 0x1C5D684
	630 Move X8, [X0+192]
	631 Move X20, 0x19A8000
	632 Move X0, [X8+8]
	633 Move W8, [X0+309]
	634 Move X20, [X20+3592]
	635 Move TEMP, X8
	636 And TEMP, TEMP, 1
	637 Compare TEMP, 1
	638 JumpIfEqual {640}
	639 Call 0x1C5D684
	640 Move X1, [X20]
	641 Move X2, [X21]
	642 Add X0, X31, 16
	643 Move [X31+16], X31
	644 Call CustomStyleProperty`1<Single>..ctor, X0, X1
	645 Move X0, [X19]
	646 Move W8, [X0+309]
	647 Move TEMP, X8
	648 And TEMP, TEMP, 1
	649 Compare TEMP, 1
	650 JumpIfEqual {652}
	651 Call 0x1C5D684
	652 Move X8, [X0+192]
	653 Move X0, [X8+8]
	654 Move W8, [X0+309]
	655 Move TEMP, X8
	656 And TEMP, TEMP, 1
	657 Compare TEMP, 1
	658 JumpIfEqual {660}
	659 Call 0x1C5D684
	660 Move X8, [X0+184]
	661 Move X9, [X31+16]
	662 Move [X8+96], X9
	663 Move X0, [X19]
	664 Move W8, [X0+309]
	665 Move TEMP, X8
	666 And TEMP, TEMP, 1
	667 Compare TEMP, 1
	668 JumpIfEqual {670}
	669 Call 0x1C5D684
	670 Move X8, [X0+192]
	671 Move X20, 0x19A8000
	672 Move X0, [X8+8]
	673 Move W8, [X0+309]
	674 Move X20, [X20+3560]
	675 Move TEMP, X8
	676 And TEMP, TEMP, 1
	677 Compare TEMP, 1
	678 JumpIfEqual {680}
	679 Call 0x1C5D684
	680 Move X1, [X20]
	681 Move X2, [X21]
	682 Add X0, X31, 8
	683 Move [X31+8], X31
	684 Call CustomStyleProperty`1<Single>..ctor, X0, X1
	685 Move X0, [X19]
	686 Move W8, [X0+309]
	687 Move TEMP, X8
	688 And TEMP, TEMP, 1
	689 Compare TEMP, 1
	690 JumpIfEqual {692}
	691 Call 0x1C5D684
	692 Move X8, [X0+192]
	693 Move X0, [X8+8]
	694 Move W8, [X0+309]
	695 Move TEMP, X8
	696 And TEMP, TEMP, 1
	697 Compare TEMP, 1
	698 JumpIfEqual {700}
	699 Call 0x1C5D684
	700 Move X8, [X0+184]
	701 Move X9, [X31+8]
	702 Move [X8+104], X9
	703 Move X0, [X19]
	704 Move W8, [X0+309]
	705 Move TEMP, X8
	706 And TEMP, TEMP, 1
	707 Compare TEMP, 1
	708 JumpIfEqual {710}
	709 Call 0x1C5D684
	710 Move X8, [X0+192]
	711 Move X0, [X8+8]
	712 Move W8, [X0+309]
	713 Move TEMP, X8
	714 And TEMP, TEMP, 1
	715 Compare TEMP, 1
	716 JumpIfEqual {718}
	717 Call 0x1C5D684
	718 Move X20, [X31+64]
	719 Move X19, [X31+72]
	720 Move X22, [X31+48]
	721 Move X21, [X31+56]
	722 Move X30, [X31+32]
	723 Add X31, X31, 80
	724 Return 

