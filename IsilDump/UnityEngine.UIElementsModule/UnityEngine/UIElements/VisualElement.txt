Type: UnityEngine.UIElements.VisualElement

Method: UnityEngine.UIElements.IResolvedStyle get_resolvedStyle()

Disassembly:
	0x03DE1EB8 STR W1, [X0 + 0x4]

ISIL:
	001 Return X0

Method: UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_backgroundColor()

Disassembly:
	0x03DE9C18 MOV V2.16B, V13.16B
	0x03DE9C1C MOV V3.16B, V12.16B
	0x03DE9C20 MOV V4.16B, V11.16B

ISIL:
	001 Add X0, X0, 704
	002 Move X1, X31
	003 Call ComputedStyle.get_backgroundColor, X0
	004 Return X0

Method: UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_borderBottomColor()

Disassembly:
	0x03DE9C24 MOV V5.16B, V10.16B
	0x03DE9C28 MOV V6.16B, V9.16B
	0x03DE9C2C MOV V7.16B, V8.16B

ISIL:
	001 Add X0, X0, 704
	002 Move X1, X31
	003 Call ComputedStyle.get_borderBottomColor, X0
	004 Return X0

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_borderBottomLeftRadius()

Disassembly:
	0x03DE9C30 MOV X0, X24
	0x03DE9C34 MOV X1, X23
	0x03DE9C38 MOV W2, W22
	0x03DE9C3C MOV W3, W21
	0x03DE9C40 MOV W4, W20
	0x03DE9C44 MOV X5, X19
	0x03DE9C48 LDP X20, X19, [X31 + 0x70]

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X0, 704
	003 Move X1, X31
	004 Call ComputedStyle.get_borderBottomLeftRadius, X0
	005 Move S0, W0
	006 Move X30, [X31+16]
	007 Return V0

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_borderBottomRightRadius()

Disassembly:
	0x03DE9C4C LDP X22, X21, [X31 + 0x60]
	0x03DE9C50 LDP X24, X23, [X31 + 0x50]
	0x03DE9C54 LDR X30, [X31 + 0x40]
	0x03DE9C58 LDP D9, D8, [X31 + 0x30]
	0x03DE9C5C LDP D11, D10, [X31 + 0x20]
	0x03DE9C60 LDP D13, D12, [X31 + 0x10]
	0x03DE9C64 MOV V0.16B, V15.16B

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X0, 704
	003 Move X1, X31
	004 Call ComputedStyle.get_borderBottomRightRadius, X0
	005 Move S0, W0
	006 Move X30, [X31+16]
	007 Return V0

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_borderBottomWidth()

Disassembly:
	0x03DE9C68 MOV V1.16B, V14.16B
	0x03DE9C6C LDP D15, D14, [X31], #0x80
	0x03DE9C70 BR X7
	0x03DE9C74 BL 0x1C16F20
	0x03DE9C78 SUB X31, X31, 0x60
	0x03DE9C7C STR X30, [X31 + 0x10]
	0x03DE9C80 STP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+696]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call YogaNode.get_LayoutBorderBottom, X0
	008 Return V0
	009 Call 0x1C17F20

Method: UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_borderLeftColor()

Disassembly:
	0x03DE9C84 STP X24, X23, [X31 + 0x30]
	0x03DE9C88 STP X22, X21, [X31 + 0x40]
	0x03DE9C8C STP X20, X19, [X31 + 0x50]

ISIL:
	001 Add X0, X0, 704
	002 Move X1, X31
	003 Call ComputedStyle.get_borderLeftColor, X0
	004 Return X0

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_borderLeftWidth()

Disassembly:
	0x03DE9C90 ADRP X26, 0x5FF000
	0x03DE9C94 LDRB W8, [X26 + 0x21F]
	0x03DE9C98 MOV X19, X6
	0x03DE9C9C MOV W20, W5
	0x03DE9CA0 MOV W21, W4
	0x03DE9CA4 MOV W22, W3
	0x03DE9CA8 MOV W23, W2

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+696]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call YogaNode.get_LayoutBorderLeft, X0
	008 Return V0
	009 Call 0x1C17F20

Method: UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_borderRightColor()

Disassembly:
	0x03DE9CAC MOV W24, W1
	0x03DE9CB0 MOV X25, X0
	0x03DE9CB4 TBNZ X8, 0x0, 0x3DE9CCC

ISIL:
	001 Add X0, X0, 704
	002 Move X1, X31
	003 Call ComputedStyle.get_borderRightColor, X0
	004 Return X0

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_borderRightWidth()

Disassembly:
	0x03DE9CB8 ADRP X0, 0x37B000
	0x03DE9CBC LDR X0, [X0 + 0x1A8]
	0x03DE9CC0 BL 0x1C16CF4
	0x03DE9CC4 MOVZ W8, 0x1
	0x03DE9CC8 STRB W8, [X26 + 0x21F]
	0x03DE9CCC LDR X0, [X25 + 0x3A0]
	0x03DE9CD0 CBZ X0, 0x3DE9D90

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+696]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call YogaNode.get_LayoutBorderRight, X0
	008 Return V0
	009 Call 0x1C17F20

Method: UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_borderTopColor()

Disassembly:
	0x03DE9CD4 LDR X8, [X0]
	0x03DE9CD8 LDR X9, [X8 + 0x3D8]
	0x03DE9CDC LDR X1, [X8 + 0x3E0]

ISIL:
	001 Add X0, X0, 704
	002 Move X1, X31
	003 Call ComputedStyle.get_borderTopColor, X0
	004 Return X0

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_borderTopLeftRadius()

Disassembly:
	0x03DE9CE0 BLR X9
	0x03DE9CE4 CBZ X0, 0x3DE9D90
	0x03DE9CE8 ADRP X10, 0x37B000
	0x03DE9CEC LDR X8, [X0]
	0x03DE9CF0 LDR X10, [X10 + 0x1A8]
	0x03DE9CF4 MOV X26, X0
	0x03DE9CF8 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X0, 704
	003 Move X1, X31
	004 Call ComputedStyle.get_borderTopLeftRadius, X0
	005 Move S0, W0
	006 Move X30, [X31+16]
	007 Return V0

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_borderTopRightRadius()

Disassembly:
	0x03DE9CFC LDR X1, [X10]
	0x03DE9D00 CBZ X9, 0x3DE9D24
	0x03DE9D04 LDR X10, [X8 + 0xB0]
	0x03DE9D08 ADD X10, X10, 0x8
	0x03DE9D0C LDUR X11, [X10 - 0x8]
	0x03DE9D10 CMP X11, X1
	0x03DE9D14 B.EQ 0x3DE9D34

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X0, 704
	003 Move X1, X31
	004 Call ComputedStyle.get_borderTopRightRadius, X0
	005 Move S0, W0
	006 Move X30, [X31+16]
	007 Return V0

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_borderTopWidth()

Disassembly:
	0x03DE9D18 SUBS X9, X9, 0x1
	0x03DE9D1C ADD X10, X10, 0x10
	0x03DE9D20 B.NE 0x3DE9D0C
	0x03DE9D24 MOVZ W2, 0x1
	0x03DE9D28 MOV X0, X26
	0x03DE9D2C BL 0x1C5C788
	0x03DE9D30 B 0x3DE9D44

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+696]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call YogaNode.get_LayoutBorderTop, X0
	008 Return V0
	009 Call 0x1C17F20

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_bottom()

Disassembly:
	0x03DE9D34 LDR W9, [X10]
	0x03DE9D38 ADD W9, W9, 0x1
	0x03DE9D3C ADD X8, X8, W9, 0x4, SXTW
	0x03DE9D40 ADD X0, X8, 0x138
	0x03DE9D44 LDP X8, X9, [X0]
	0x03DE9D48 MOV X0, X26
	0x03DE9D4C MOV X1, X25

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+696]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call YogaNode.get_LayoutBottom, X0
	008 Return V0
	009 Call 0x1C17F20

Method: UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_color()

Disassembly:
	0x03DE9D50 MOV W2, W24
	0x03DE9D54 MOV W3, W23
	0x03DE9D58 MOV W4, W22

ISIL:
	001 Add X0, X0, 704
	002 Move X1, X31
	003 Call ComputedStyle.get_color, X0
	004 Return X0

Method: UnityEngine.UIElements.DisplayStyle UnityEngine.UIElements.IResolvedStyle.get_display()

Disassembly:
	0x03DE9D5C MOV W5, W21
	0x03DE9D60 MOV W6, W20
	0x03DE9D64 MOV X7, X19

ISIL:
	001 Add X0, X0, 704
	002 Move X1, X31
	003 Call ComputedStyle.get_display, X0
	004 Return X0

Method: UnityEngine.UIElements.FlexDirection UnityEngine.UIElements.IResolvedStyle.get_flexDirection()

Disassembly:
	0x03DE9D68 STR X9, [X31]
	0x03DE9D6C BLR X8
	0x03DE9D70 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Add X0, X0, 704
	002 Move X1, X31
	003 Call ComputedStyle.get_flexDirection, X0
	004 Return X0

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_flexGrow()

Disassembly:
	0x03DE9D74 LDP X22, X21, [X31 + 0x40]
	0x03DE9D78 LDP X24, X23, [X31 + 0x30]
	0x03DE9D7C LDP X26, X25, [X31 + 0x20]

ISIL:
	001 Add X0, X0, 704
	002 Move X1, X31
	003 Call ComputedStyle.get_flexGrow, X0
	004 Return V0

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_flexShrink()

Disassembly:
	0x03DE9D80 LDR X30, [X31 + 0x10]
	0x03DE9D84 AND W0, W0, 0x1
	0x03DE9D88 ADD X31, X31, 0x60

ISIL:
	001 Add X0, X0, 704
	002 Move X1, X31
	003 Call ComputedStyle.get_flexShrink, X0
	004 Return V0

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_height()

Disassembly:
	0x03DE9D8C RET
	0x03DE9D90 BL 0x1C16F20
	0x03DE9D94 SUB X31, X31, 0x120
	0x03DE9D98 STP X29, X30, [X31 + 0xD0]
	0x03DE9D9C STP X26, X25, [X31 + 0xE0]
	0x03DE9DA0 STP X24, X23, [X31 + 0xF0]
	0x03DE9DA4 STP X22, X21, [X31 + 0x100]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+696]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call YogaNode.get_LayoutHeight, X0
	008 Return V0
	009 Call 0x1C17F20

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_left()

Disassembly:
	0x03DE9DA8 STP X20, X19, [X31 + 0x110]
	0x03DE9DAC ADRP X24, 0x5FF000
	0x03DE9DB0 LDRB W8, [X24 + 0x220]
	0x03DE9DB4 MOV X19, X6
	0x03DE9DB8 MOV W20, W5
	0x03DE9DBC MOV W21, W4
	0x03DE9DC0 MOV X25, X3

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+696]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call YogaNode.get_LayoutX, X0
	008 Return V0
	009 Call 0x1C17F20

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_marginBottom()

Disassembly:
	0x03DE9DC4 MOV X26, X2
	0x03DE9DC8 MOV W22, W1
	0x03DE9DCC MOV X23, X0
	0x03DE9DD0 TBNZ X8, 0x0, 0x3DE9DE8
	0x03DE9DD4 ADRP X0, 0x37B000
	0x03DE9DD8 LDR X0, [X0 + 0x1A8]
	0x03DE9DDC BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+696]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call YogaNode.get_LayoutMarginBottom, X0
	008 Return V0
	009 Call 0x1C17F20

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_marginLeft()

Disassembly:
	0x03DE9DE0 MOVZ W8, 0x1
	0x03DE9DE4 STRB W8, [X24 + 0x220]
	0x03DE9DE8 LDR X0, [X23 + 0x3A0]
	0x03DE9DEC CBZ X0, 0x3DE9E08
	0x03DE9DF0 LDR X8, [X0]
	0x03DE9DF4 LDR X9, [X8 + 0x3D8]
	0x03DE9DF8 LDR X1, [X8 + 0x3E0]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+696]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call YogaNode.get_LayoutMarginLeft, X0
	008 Return V0
	009 Call 0x1C17F20

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_marginRight()

Disassembly:
	0x03DE9DFC BLR X9
	0x03DE9E00 MOV X24, X0
	0x03DE9E04 B 0x3DE9E0C
	0x03DE9E08 MOV X24, X31
	0x03DE9E0C LDP V1, V0, [X26]
	0x03DE9E10 STP V1, V0, [X31 + 0x70]
	0x03DE9E14 LDP V1, V0, [X25]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+696]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call YogaNode.get_LayoutMarginRight, X0
	008 Return V0
	009 Call 0x1C17F20

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_marginTop()

Disassembly:
	0x03DE9E18 STP V1, V0, [X31 + 0x50]
	0x03DE9E1C CBZ X24, 0x3DE9EE8
	0x03DE9E20 LDP V0, V1, [X31 + 0x70]
	0x03DE9E24 LDP V2, V3, [X31 + 0x50]
	0x03DE9E28 ADRP X10, 0x37B000
	0x03DE9E2C STP V0, V1, [X31 + 0x30]
	0x03DE9E30 STP V2, V3, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+696]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call YogaNode.get_LayoutMarginTop, X0
	008 Return V0
	009 Call 0x1C17F20

Method: UnityEngine.UIElements.StyleFloat UnityEngine.UIElements.IResolvedStyle.get_minHeight()

Disassembly:
	0x03DE9E34 LDR X8, [X24]
	0x03DE9E38 LDR X10, [X10 + 0x1A8]
	0x03DE9E3C LDRH W9, [X8 + 0x12E]
	0x03DE9E40 LDR X1, [X10]
	0x03DE9E44 CBZ X9, 0x3DE9E68
	0x03DE9E48 LDR X10, [X8 + 0xB0]
	0x03DE9E4C ADD X10, X10, 0x8
	0x03DE9E50 LDUR X11, [X10 - 0x8]
	0x03DE9E54 CMP X11, X1
	0x03DE9E58 B.EQ 0x3DE9E78

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Add X0, X0, 704
	005 Move X1, X31
	006 Call ComputedStyle.get_minHeight, X0
	007 Move X1, X0
	008 Move X0, X19
	009 Move W2, W31
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]

Method: UnityEngine.UIElements.StyleFloat UnityEngine.UIElements.IResolvedStyle.get_minWidth()

Disassembly:
	0x03DE9FF8 LDP X22, X21, [X31 + 0x60]
	0x03DE9FFC LDP X24, X23, [X31 + 0x50]
	0x03DEA000 LDP X26, X25, [X31 + 0x40]
	0x03DEA004 LDP X28, X27, [X31 + 0x30]
	0x03DEA008 LDR X30, [X31 + 0x20]
	0x03DEA00C AND W0, W0, 0x1
	0x03DEA010 ADD X31, X31, 0x80
	0x03DEA014 RET
	0x03DEA018 BL 0x1C16F20
	0x03DEA01C SUB X31, X31, 0x60

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Add X0, X0, 704
	005 Move X1, X31
	006 Call ComputedStyle.get_minWidth, X0
	007 Move W2, 1
	008 Move X1, X0
	009 Move X0, X19
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call VisualElement.ResolveLengthValue, X0, X1, X2
	013 Return X0

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_opacity()

Disassembly:
	0x03DEA020 STR X30, [X31 + 0x10]
	0x03DEA024 STP X26, X25, [X31 + 0x20]
	0x03DEA028 STP X24, X23, [X31 + 0x30]

ISIL:
	001 Add X0, X0, 704
	002 Move X1, X31
	003 Call ComputedStyle.get_opacity, X0
	004 Return V0

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_paddingBottom()

Disassembly:
	0x03DEA02C STP X22, X21, [X31 + 0x40]
	0x03DEA030 STP X20, X19, [X31 + 0x50]
	0x03DEA034 ADRP X26, 0x5FE000
	0x03DEA038 LDRB W8, [X26 + 0x222]
	0x03DEA03C MOV X19, X6
	0x03DEA040 MOV W20, W5
	0x03DEA044 MOV W21, W4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+696]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call YogaNode.get_LayoutPaddingBottom, X0
	008 Return V0
	009 Call 0x1C17F20

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_paddingLeft()

Disassembly:
	0x03DEA048 MOV X22, X3
	0x03DEA04C MOV X23, X2
	0x03DEA050 MOV W24, W1
	0x03DEA054 MOV X25, X0
	0x03DEA058 TBNZ X8, 0x0, 0x3DEA070
	0x03DEA05C ADRP X0, 0x37A000
	0x03DEA060 LDR X0, [X0 + 0x1A8]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+696]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call YogaNode.get_LayoutPaddingLeft, X0
	008 Return V0
	009 Call 0x1C17F20

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_paddingRight()

Disassembly:
	0x03DEA064 BL 0x1C16CF4
	0x03DEA068 MOVZ W8, 0x1
	0x03DEA06C STRB W8, [X26 + 0x222]
	0x03DEA070 LDR X0, [X25 + 0x3A0]
	0x03DEA074 CBZ X0, 0x3DEA134
	0x03DEA078 LDR X8, [X0]
	0x03DEA07C LDR X9, [X8 + 0x3D8]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+696]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call YogaNode.get_LayoutPaddingRight, X0
	008 Return V0
	009 Call 0x1C17F20

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_paddingTop()

Disassembly:
	0x03DEA080 LDR X1, [X8 + 0x3E0]
	0x03DEA084 BLR X9
	0x03DEA088 CBZ X0, 0x3DEA134
	0x03DEA08C ADRP X10, 0x37A000
	0x03DEA090 LDR X8, [X0]
	0x03DEA094 LDR X10, [X10 + 0x1A8]
	0x03DEA098 MOV X26, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+696]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call YogaNode.get_LayoutPaddingTop, X0
	008 Return V0
	009 Call 0x1C17F20

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_right()

Disassembly:
	0x03DEA09C LDRH W9, [X8 + 0x12E]
	0x03DEA0A0 LDR X1, [X10]
	0x03DEA0A4 CBZ X9, 0x3DEA0C8
	0x03DEA0A8 LDR X10, [X8 + 0xB0]
	0x03DEA0AC ADD X10, X10, 0x8
	0x03DEA0B0 LDUR X11, [X10 - 0x8]
	0x03DEA0B4 CMP X11, X1

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+696]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call YogaNode.get_LayoutRight, X0
	008 Return V0
	009 Call 0x1C17F20

Method: UnityEngine.UIElements.Scale UnityEngine.UIElements.IResolvedStyle.get_scale()

Disassembly:
	0x03DEA0B8 B.EQ 0x3DEA0D8
	0x03DEA0BC SUBS X9, X9, 0x1
	0x03DEA0C0 ADD X10, X10, 0x10

ISIL:
	001 Add X0, X0, 704
	002 Move X1, X31
	003 Call ComputedStyle.get_scale, X0
	004 Return X0

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_top()

Disassembly:
	0x03DEA0C4 B.NE 0x3DEA0B0
	0x03DEA0C8 MOVZ W2, 0x6
	0x03DEA0CC MOV X0, X26
	0x03DEA0D0 BL 0x1C5C788
	0x03DEA0D4 B 0x3DEA0E8
	0x03DEA0D8 LDR W9, [X10]
	0x03DEA0DC ADD W9, W9, 0x6

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+696]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call YogaNode.get_LayoutY, X0
	008 Return V0
	009 Call 0x1C17F20

Method: UnityEngine.Vector3 UnityEngine.UIElements.IResolvedStyle.get_transformOrigin()

Disassembly:
	0x03DEA0E0 ADD X8, X8, W9, 0x4, SXTW

ISIL:
No ISIL was generated
Method: UnityEngine.Vector3 UnityEngine.UIElements.IResolvedStyle.get_translate()

Disassembly:
	0x03DEA3E8 ADD X31, X31, 0x80

ISIL:
No ISIL was generated
Method: UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_unityBackgroundImageTintColor()

Disassembly:
	0x03DEA5E8 MOV X24, X0
	0x03DEA5EC B 0x3DEA5F4
	0x03DEA5F0 MOV X24, X31

ISIL:
	001 Add X0, X0, 704
	002 Move X1, X31
	003 Call ComputedStyle.get_unityBackgroundImageTintColor, X0
	004 Return X0

Method: System.Int32 UnityEngine.UIElements.IResolvedStyle.get_unitySliceLeft()

Disassembly:
	0x03DEA5F4 LDR X8, [X26 + 0x10]
	0x03DEA5F8 LDR V0, [X26]
	0x03DEA5FC STR X8, [X31 + 0x80]

ISIL:
	001 Add X0, X0, 704
	002 Move X1, X31
	003 Call ComputedStyle.get_unitySliceLeft, X0
	004 Return X0

Method: System.Int32 UnityEngine.UIElements.IResolvedStyle.get_unitySliceRight()

Disassembly:
	0x03DEA600 STR V0, [X31 + 0x7]
	0x03DEA604 LDR X8, [X25 + 0x10]
	0x03DEA608 LDR V0, [X25]

ISIL:
	001 Add X0, X0, 704
	002 Move X1, X31
	003 Call ComputedStyle.get_unitySliceRight, X0
	004 Return X0

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_unitySliceScale()

Disassembly:
	0x03DEA60C STR X8, [X31 + 0x60]
	0x03DEA610 STR V0, [X31 + 0x5]
	0x03DEA614 CBZ X24, 0x3DEA700

ISIL:
	001 Add X0, X0, 704
	002 Move X1, X31
	003 Call ComputedStyle.get_unitySliceScale, X0
	004 Return V0

Method: UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_unityTextOutlineColor()

Disassembly:
	0x03DEA618 LDR V0, [X31 + 0x7]
	0x03DEA61C LDR X8, [X31 + 0x80]
	0x03DEA620 LDR V1, [X31 + 0x5]

ISIL:
	001 Add X0, X0, 704
	002 Move X1, X31
	003 Call ComputedStyle.get_unityTextOutlineColor, X0
	004 Return X0

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_unityTextOutlineWidth()

Disassembly:
	0x03DEA624 LDR X9, [X31 + 0x60]
	0x03DEA628 STR V0, [X31 + 0x3]
	0x03DEA62C STR X8, [X31 + 0x40]

ISIL:
	001 Add X0, X0, 704
	002 Move X1, X31
	003 Call ComputedStyle.get_unityTextOutlineWidth, X0
	004 Return V0

Method: UnityEngine.UIElements.Visibility UnityEngine.UIElements.IResolvedStyle.get_visibility()

Disassembly:
	0x03DEA630 STR V1, [X31 + 0x1]
	0x03DEA634 STR X9, [X31 + 0x20]
	0x03DEA638 ADRP X10, 0x37A000

ISIL:
	001 Add X0, X0, 704
	002 Move X1, X31
	003 Call ComputedStyle.get_visibility, X0
	004 Return X0

Method: System.Single UnityEngine.UIElements.IResolvedStyle.get_width()

Disassembly:
	0x03DEA63C LDR X8, [X24]
	0x03DEA640 LDR X10, [X10 + 0x1A8]
	0x03DEA644 LDRH W9, [X8 + 0x12E]
	0x03DEA648 LDR X1, [X10]
	0x03DEA64C CBZ X9, 0x3DEA670
	0x03DEA650 LDR X10, [X8 + 0xB0]
	0x03DEA654 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+696]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call YogaNode.get_LayoutWidth, X0
	008 Return V0
	009 Call 0x1C17F20

Method: System.Boolean get_hasRunningAnimations()

Disassembly:
	0x03DEA658 LDUR X11, [X10 - 0x8]
	0x03DEA65C CMP X11, X1
	0x03DEA660 B.EQ 0x3DEA680
	0x03DEA664 SUBS X9, X9, 0x1
	0x03DEA668 ADD X10, X10, 0x10
	0x03DEA66C B.NE 0x3DEA658
	0x03DEA670 MOVZ W2, 0xB
	0x03DEA674 MOV X0, X24
	0x03DEA678 BL 0x1C5C788
	0x03DEA67C B 0x3DEA690
	0x03DEA680 LDR W9, [X10]
	0x03DEA684 ADD W9, W9, 0xB
	0x03DEA688 ADD X8, X8, W9, 0x4, SXTW
	0x03DEA68C ADD X0, X8, 0x138
	0x03DEA690 LDR V0, [X31 + 0x3]
	0x03DEA694 LDR X9, [X31 + 0x40]
	0x03DEA698 LDR V1, [X31 + 0x1]
	0x03DEA69C LDR X10, [X31 + 0x20]
	0x03DEA6A0 LDR X8, [X0]
	0x03DEA6A4 STR V0, [X31 + 0xB]
	0x03DEA6A8 STR X9, [X31 + 0xC0]
	0x03DEA6AC STR V1, [X31 + 0x9]
	0x03DEA6B0 STR X10, [X31 + 0xA0]
	0x03DEA6B4 LDR X9, [X0 + 0x8]
	0x03DEA6B8 ADD X3, X31, 0xB0
	0x03DEA6BC ADD X4, X31, 0x90
	0x03DEA6C0 MOV X0, X24
	0x03DEA6C4 MOV X1, X23
	0x03DEA6C8 MOV W2, W22
	0x03DEA6CC MOV W5, W21
	0x03DEA6D0 MOV W6, W20
	0x03DEA6D4 MOV X7, X19
	0x03DEA6D8 STR X9, [X31]
	0x03DEA6DC BLR X8
	0x03DEA6E0 LDP X20, X19, [X31 + 0x110]
	0x03DEA6E4 LDP X22, X21, [X31 + 0x100]
	0x03DEA6E8 LDP X24, X23, [X31 + 0xF0]
	0x03DEA6EC LDP X26, X25, [X31 + 0xE0]
	0x03DEA6F0 LDP X29, X30, [X31 + 0xD0]
	0x03DEA6F4 AND W0, W0, 0x1
	0x03DEA6F8 ADD X31, X31, 0x120
	0x03DEA6FC RET
	0x03DEA700 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5FF000
	005 Move W8, [X20+537]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x334000
	012 Move X0, [X0+3792]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+537], W8
	016 Compare X19, 0
	017 JumpIfEqual {48}
	018 Move X10, 0x334000
	019 Move X8, [X19]
	020 Move X10, [X10+3792]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X1, [X10]
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 20
	032 Move X0, X19
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 20
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X8, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 Move X30, [X31+32]
	047 Return X0
	048 Call 0x1C17F20

Method: System.Boolean get_hasCompletedAnimations()

Disassembly:
	0x03DEA704 SUB X31, X31, 0x120
	0x03DEA708 STP X29, X30, [X31 + 0xD0]
	0x03DEA70C STP X26, X25, [X31 + 0xE0]
	0x03DEA710 STP X24, X23, [X31 + 0xF0]
	0x03DEA714 STP X22, X21, [X31 + 0x100]
	0x03DEA718 STP X20, X19, [X31 + 0x110]
	0x03DEA71C ADRP X24, 0x5FE000
	0x03DEA720 LDRB W8, [X24 + 0x227]
	0x03DEA724 MOV X19, X6
	0x03DEA728 MOV W20, W5
	0x03DEA72C MOV W21, W4
	0x03DEA730 MOV X25, X3
	0x03DEA734 MOV X26, X2
	0x03DEA738 MOV W22, W1
	0x03DEA73C MOV X23, X0
	0x03DEA740 TBNZ X8, 0x0, 0x3DEA758
	0x03DEA744 ADRP X0, 0x37A000
	0x03DEA748 LDR X0, [X0 + 0x1A8]
	0x03DEA74C BL 0x1C16CF4
	0x03DEA750 MOVZ W8, 0x1
	0x03DEA754 STRB W8, [X24 + 0x227]
	0x03DEA758 LDR X0, [X23 + 0x3A0]
	0x03DEA75C CBZ X0, 0x3DEA778
	0x03DEA760 LDR X8, [X0]
	0x03DEA764 LDR X9, [X8 + 0x3D8]
	0x03DEA768 LDR X1, [X8 + 0x3E0]
	0x03DEA76C BLR X9
	0x03DEA770 MOV X24, X0
	0x03DEA774 B 0x3DEA77C
	0x03DEA778 MOV X24, X31
	0x03DEA77C LDR W8, [X26 + 0x10]
	0x03DEA780 LDR V0, [X26]
	0x03DEA784 STR W8, [X31 + 0x80]
	0x03DEA788 STR V0, [X31 + 0x7]
	0x03DEA78C LDR W8, [X25 + 0x10]
	0x03DEA790 LDR V0, [X25]
	0x03DEA794 STR W8, [X31 + 0x60]
	0x03DEA798 STR V0, [X31 + 0x5]
	0x03DEA79C CBZ X24, 0x3DEA888
	0x03DEA7A0 LDR V0, [X31 + 0x7]
	0x03DEA7A4 LDR W8, [X31 + 0x80]
	0x03DEA7A8 LDR V1, [X31 + 0x5]
	0x03DEA7AC LDR W9, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5FF000
	005 Move W8, [X20+538]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x334000
	012 Move X0, [X0+3792]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+538], W8
	016 Compare X19, 0
	017 JumpIfEqual {48}
	018 Move X10, 0x334000
	019 Move X8, [X19]
	020 Move X10, [X10+3792]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X1, [X10]
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 22
	032 Move X0, X19
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 22
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X8, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 Move X30, [X31+32]
	047 Return X0
	048 Call 0x1C17F20

Method: System.Int32 UnityEngine.UIElements.IStylePropertyAnimations.get_runningAnimationCount()

Disassembly:
	0x03DEA7B0 STR V0, [X31 + 0x3]
	0x03DEA7B4 STR W8, [X31 + 0x40]

ISIL:
	001 Move W0, [X0+44]
	002 Return X0

Method: System.Void UnityEngine.UIElements.IStylePropertyAnimations.set_runningAnimationCount(System.Int32 value)

Disassembly:
	0x03DEA7B8 STR V1, [X31 + 0x1]
	0x03DEA7BC STR W9, [X31 + 0x20]

ISIL:
	001 Move [X0+44], W1
	002 Return 

Method: System.Int32 UnityEngine.UIElements.IStylePropertyAnimations.get_completedAnimationCount()

Disassembly:
	0x03DEA7C0 ADRP X10, 0x37A000
	0x03DEA7C4 LDR X8, [X24]

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void UnityEngine.UIElements.IStylePropertyAnimations.set_completedAnimationCount(System.Int32 value)

Disassembly:
	0x03DEA7C8 LDR X10, [X10 + 0x1A8]
	0x03DEA7CC LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X0+48], W1
	002 Return 

Method: UnityEngine.UIElements.IStylePropertyAnimationSystem GetStylePropertyAnimationSystem()

Disassembly:
	0x03DEA7D0 LDR X1, [X10]
	0x03DEA7D4 CBZ X9, 0x3DEA7F8
	0x03DEA7D8 LDR X10, [X8 + 0xB0]
	0x03DEA7DC ADD X10, X10, 0x8
	0x03DEA7E0 LDUR X11, [X10 - 0x8]
	0x03DEA7E4 CMP X11, X1
	0x03DEA7E8 B.EQ 0x3DEA808

ISIL:
	001 Move X0, [X0+928]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0]
	005 Move X2, [X8+984]
	006 Move X1, [X8+992]
	007 CallNoReturn X2
	008 Return X0

Method: UnityEngine.UIElements.IStylePropertyAnimations get_styleAnimation()

Disassembly:
	0x03DE99D4 MOV W5, W21

ISIL:
	001 Return X0

Method: System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, System.Single from, System.Single to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DEA7EC SUBS X9, X9, 0x1
	0x03DEA7F0 ADD X10, X10, 0x10
	0x03DEA7F4 B.NE 0x3DEA7E0
	0x03DEA7F8 MOVZ W2, 0x9
	0x03DEA7FC MOV X0, X24
	0x03DEA800 BL 0x1C5C788
	0x03DEA804 B 0x3DEA818
	0x03DEA808 LDR W9, [X10]
	0x03DEA80C ADD W9, W9, 0x9
	0x03DEA810 ADD X8, X8, W9, 0x4, SXTW
	0x03DEA814 ADD X0, X8, 0x138
	0x03DEA818 LDR V0, [X31 + 0x3]
	0x03DEA81C LDR W9, [X31 + 0x40]
	0x03DEA820 LDR V1, [X31 + 0x1]
	0x03DEA824 LDR W10, [X31 + 0x20]
	0x03DEA828 LDR X8, [X0]
	0x03DEA82C STR V0, [X31 + 0xB]
	0x03DEA830 STR W9, [X31 + 0xC0]
	0x03DEA834 STR V1, [X31 + 0x9]
	0x03DEA838 STR W10, [X31 + 0xA0]
	0x03DEA83C LDR X9, [X0 + 0x8]
	0x03DEA840 ADD X3, X31, 0xB0
	0x03DEA844 ADD X4, X31, 0x90
	0x03DEA848 MOV X0, X24
	0x03DEA84C MOV X1, X23
	0x03DEA850 MOV W2, W22
	0x03DEA854 MOV W5, W21
	0x03DEA858 MOV W6, W20
	0x03DEA85C MOV X7, X19
	0x03DEA860 STR X9, [X31]
	0x03DEA864 BLR X8
	0x03DEA868 LDP X20, X19, [X31 + 0x110]
	0x03DEA86C LDP X22, X21, [X31 + 0x100]
	0x03DEA870 LDP X24, X23, [X31 + 0xF0]
	0x03DEA874 LDP X26, X25, [X31 + 0xE0]
	0x03DEA878 LDP X29, X30, [X31 + 0xD0]
	0x03DEA87C AND W0, W0, 0x1
	0x03DEA880 ADD X31, X31, 0x120
	0x03DEA884 RET
	0x03DEA888 BL 0x1C16F20
	0x03DEA88C SUB X31, X31, 0x80
	0x03DEA890 STR X30, [X31 + 0x20]
	0x03DEA894 STP X28, X27, [X31 + 0x30]
	0x03DEA898 STP X26, X25, [X31 + 0x40]
	0x03DEA89C STP X24, X23, [X31 + 0x50]
	0x03DEA8A0 STP X22, X21, [X31 + 0x60]
	0x03DEA8A4 STP X20, X19, [X31 + 0x70]
	0x03DEA8A8 ADRP X27, 0x5FE000
	0x03DEA8AC LDRB W8, [X27 + 0x228]
	0x03DEA8B0 MOV W21, W7
	0x03DEA8B4 MOV W19, W6
	0x03DEA8B8 MOV X24, X5
	0x03DEA8BC MOV X20, X4
	0x03DEA8C0 MOV X26, X3
	0x03DEA8C4 MOV X22, X2
	0x03DEA8C8 MOV W23, W1
	0x03DEA8CC MOV X25, X0
	0x03DEA8D0 TBNZ X8, 0x0, 0x3DEA8E8
	0x03DEA8D4 ADRP X0, 0x37A000
	0x03DEA8D8 LDR X0, [X0 + 0x1A8]
	0x03DEA8DC BL 0x1C16CF4
	0x03DEA8E0 MOVZ W8, 0x1
	0x03DEA8E4 STRB W8, [X27 + 0x228]
	0x03DEA8E8 LDR X0, [X25 + 0x3A0]
	0x03DEA8EC CBZ X0, 0x3DEA9B8

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x5FF000
	011 Move W8, [X24+539]
	012 Move X19, X4
	013 Move W20, W3
	014 Move W21, W2
	015 Move V8, V1
	016 Move V9, V0
	017 Move W22, W1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x37B000
	024 Move X0, [X0+424]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+539], W8
	028 Move X0, [X23+928]
	029 Compare X0, 0
	030 JumpIfEqual {77}
	031 Move X8, [X0]
	032 Move X9, [X8+984]
	033 Move X1, [X8+992]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Compare X0, 0
	036 JumpIfEqual {77}
	037 Move X10, 0x37B000
	038 Move X8, [X0]
	039 Move X10, [X10+424]
	040 Move X24, X0
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move X0, X24
	052 Move W2, W31
	053 Call 0x1C5D788
	054 NotImplemented "Instruction LDRSW not yet implemented."
	055 Add X8, X8, X9
	056 Add X0, X8, 312
	057 Move X7, [X0]
	058 Move X6, [X0+8]
	059 Move X0, X24
	060 Move X1, X23
	061 Move W2, W22
	062 Move W3, W21
	063 Move W4, W20
	064 Move X5, X19
	065 Move X20, [X31+64]
	066 Move X19, [X31+72]
	067 Move X22, [X31+48]
	068 Move X21, [X31+56]
	069 Move X24, [X31+32]
	070 Move X23, [X31+40]
	071 Move X30, [X31+16]
	072 Move V0, V9
	073 Move V1, V8
	074 Move D9, [X31+80]
	075 Move D8, [X31+88]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, System.Int32 from, System.Int32 to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DEA8F0 LDR X8, [X0]
	0x03DEA8F4 LDR X9, [X8 + 0x3D8]
	0x03DEA8F8 LDR X1, [X8 + 0x3E0]
	0x03DEA8FC BLR X9
	0x03DEA900 CBZ X0, 0x3DEA9B8
	0x03DEA904 ADRP X10, 0x37A000
	0x03DEA908 LDR X8, [X0]
	0x03DEA90C LDR X10, [X10 + 0x1A8]
	0x03DEA910 LDR X28, [X31 + 0x80]
	0x03DEA914 MOV X27, X0
	0x03DEA918 LDRH W9, [X8 + 0x12E]
	0x03DEA91C LDR X1, [X10]
	0x03DEA920 CBZ X9, 0x3DEA944
	0x03DEA924 LDR X10, [X8 + 0xB0]
	0x03DEA928 ADD X10, X10, 0x8
	0x03DEA92C LDUR X11, [X10 - 0x8]
	0x03DEA930 CMP X11, X1
	0x03DEA934 B.EQ 0x3DEA954
	0x03DEA938 SUBS X9, X9, 0x1
	0x03DEA93C ADD X10, X10, 0x10
	0x03DEA940 B.NE 0x3DEA92C
	0x03DEA944 MOVZ W2, 0xC
	0x03DEA948 MOV X0, X27
	0x03DEA94C BL 0x1C5C788
	0x03DEA950 B 0x3DEA964
	0x03DEA954 LDR W9, [X10]
	0x03DEA958 ADD W9, W9, 0xC
	0x03DEA95C ADD X8, X8, W9, 0x4, SXTW
	0x03DEA960 ADD X0, X8, 0x138
	0x03DEA964 LDP X8, X9, [X0]
	0x03DEA968 AND X6, X24, 0x0
	0x03DEA96C AND X4, X26, 0x0
	0x03DEA970 MOV X0, X27
	0x03DEA974 MOV X1, X25
	0x03DEA978 MOV W2, W23
	0x03DEA97C MOV X3, X22
	0x03DEA980 MOV X5, X20
	0x03DEA984 MOV W7, W19
	0x03DEA988 STP X28, X9, [X31 + 0x8]
	0x03DEA98C STR W21, [X31]
	0x03DEA990 BLR X8
	0x03DEA994 LDP X20, X19, [X31 + 0x70]
	0x03DEA998 LDP X22, X21, [X31 + 0x60]
	0x03DEA99C LDP X24, X23, [X31 + 0x50]
	0x03DEA9A0 LDP X26, X25, [X31 + 0x40]
	0x03DEA9A4 LDP X28, X27, [X31 + 0x30]
	0x03DEA9A8 LDR X30, [X31 + 0x20]
	0x03DEA9AC AND W0, W0, 0x1
	0x03DEA9B0 ADD X31, X31, 0x80
	0x03DEA9B4 RET
	0x03DEA9B8 BL 0x1C16F20
	0x03DEA9BC SUB X31, X31, 0x60
	0x03DEA9C0 STR X30, [X31 + 0x10]
	0x03DEA9C4 STP X26, X25, [X31 + 0x20]
	0x03DEA9C8 STP X24, X23, [X31 + 0x30]
	0x03DEA9CC STP X22, X21, [X31 + 0x40]
	0x03DEA9D0 STP X20, X19, [X31 + 0x50]
	0x03DEA9D4 ADRP X26, 0x5FE000
	0x03DEA9D8 LDRB W8, [X26 + 0x229]
	0x03DEA9DC MOV X19, X6
	0x03DEA9E0 MOV W20, W5
	0x03DEA9E4 MOV W21, W4
	0x03DEA9E8 MOV X22, X3
	0x03DEA9EC MOV X23, X2
	0x03DEA9F0 MOV W24, W1
	0x03DEA9F4 MOV X25, X0
	0x03DEA9F8 TBNZ X8, 0x0, 0x3DEAA10
	0x03DEA9FC ADRP X0, 0x37A000
	0x03DEAA00 LDR X0, [X0 + 0x1A8]
	0x03DEAA04 BL 0x1C16CF4
	0x03DEAA08 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X26, 0x5FF000
	012 Move W8, [X26+540]
	013 Move X19, X6
	014 Move W20, W5
	015 Move W21, W4
	016 Move W22, W3
	017 Move W23, W2
	018 Move W24, W1
	019 Move X25, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x37B000
	025 Move X0, [X0+424]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X26+540], W8
	029 Move X0, [X25+928]
	030 Compare X0, 0
	031 JumpIfEqual {83}
	032 Move X8, [X0]
	033 Move X9, [X8+984]
	034 Move X1, [X8+992]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Compare X0, 0
	037 JumpIfEqual {83}
	038 Move X10, 0x37B000
	039 Move X8, [X0]
	040 Move X10, [X10+424]
	041 Move X26, X0
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move X1, [X10]
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move W2, 1
	053 Move X0, X26
	054 Call 0x1C5D788
	055 Move W9, [X10]
	056 Add W9, W9, 1
	057 Add X8, X8, W9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X9, [X0+8]
	061 Move X0, X26
	062 Move X1, X25
	063 Move W2, W24
	064 Move W3, W23
	065 Move W4, W22
	066 Move W5, W21
	067 Move W6, W20
	068 Move X7, X19
	069 Move [X31], X9
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X20, [X31+80]
	072 Move X19, [X31+88]
	073 Move X22, [X31+64]
	074 Move X21, [X31+72]
	075 Move X24, [X31+48]
	076 Move X23, [X31+56]
	077 Move X26, [X31+32]
	078 Move X25, [X31+40]
	079 Move X30, [X31+16]
	080 And W0, W0, 1
	081 Add X31, X31, 96
	082 Return X0
	083 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Length from, UnityEngine.UIElements.Length to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DEAA0C STRB W8, [X26 + 0x229]
	0x03DEAA10 LDR X0, [X25 + 0x3A0]
	0x03DEAA14 CBZ X0, 0x3DEAAD4
	0x03DEAA18 LDR X8, [X0]
	0x03DEAA1C LDR X9, [X8 + 0x3D8]
	0x03DEAA20 LDR X1, [X8 + 0x3E0]
	0x03DEAA24 BLR X9
	0x03DEAA28 CBZ X0, 0x3DEAAD4
	0x03DEAA2C ADRP X10, 0x37A000
	0x03DEAA30 LDR X8, [X0]
	0x03DEAA34 LDR X10, [X10 + 0x1A8]
	0x03DEAA38 MOV X26, X0
	0x03DEAA3C LDRH W9, [X8 + 0x12E]
	0x03DEAA40 LDR X1, [X10]
	0x03DEAA44 CBZ X9, 0x3DEAA68
	0x03DEAA48 LDR X10, [X8 + 0xB0]
	0x03DEAA4C ADD X10, X10, 0x8
	0x03DEAA50 LDUR X11, [X10 - 0x8]
	0x03DEAA54 CMP X11, X1
	0x03DEAA58 B.EQ 0x3DEAA78
	0x03DEAA5C SUBS X9, X9, 0x1
	0x03DEAA60 ADD X10, X10, 0x10
	0x03DEAA64 B.NE 0x3DEAA50
	0x03DEAA68 MOVZ W2, 0xD
	0x03DEAA6C MOV X0, X26
	0x03DEAA70 BL 0x1C5C788
	0x03DEAA74 B 0x3DEAA88
	0x03DEAA78 LDR W9, [X10]
	0x03DEAA7C ADD W9, W9, 0xD
	0x03DEAA80 ADD X8, X8, W9, 0x4, SXTW
	0x03DEAA84 ADD X0, X8, 0x138
	0x03DEAA88 LDP X8, X9, [X0]
	0x03DEAA8C MOV X0, X26
	0x03DEAA90 MOV X1, X25
	0x03DEAA94 MOV W2, W24
	0x03DEAA98 MOV X3, X23
	0x03DEAA9C MOV X4, X22
	0x03DEAAA0 MOV W5, W21
	0x03DEAAA4 MOV W6, W20
	0x03DEAAA8 MOV X7, X19
	0x03DEAAAC STR X9, [X31]
	0x03DEAAB0 BLR X8
	0x03DEAAB4 LDP X20, X19, [X31 + 0x50]
	0x03DEAAB8 LDP X22, X21, [X31 + 0x40]
	0x03DEAABC LDP X24, X23, [X31 + 0x30]
	0x03DEAAC0 LDP X26, X25, [X31 + 0x20]
	0x03DEAAC4 LDR X30, [X31 + 0x10]
	0x03DEAAC8 AND W0, W0, 0x1
	0x03DEAACC ADD X31, X31, 0x60
	0x03DEAAD0 RET
	0x03DEAAD4 BL 0x1C16F20
	0x03DEAAD8 SUB X31, X31, 0x120
	0x03DEAADC STP X29, X30, [X31 + 0xD0]
	0x03DEAAE0 STP X26, X25, [X31 + 0xE0]
	0x03DEAAE4 STP X24, X23, [X31 + 0xF0]
	0x03DEAAE8 STP X22, X21, [X31 + 0x100]
	0x03DEAAEC STP X20, X19, [X31 + 0x110]
	0x03DEAAF0 ADRP X24, 0x5FE000
	0x03DEAAF4 LDRB W8, [X24 + 0x22A]
	0x03DEAAF8 MOV X19, X6
	0x03DEAAFC MOV W20, W5
	0x03DEAB00 MOV W21, W4
	0x03DEAB04 MOV X25, X3
	0x03DEAB08 MOV X26, X2
	0x03DEAB0C MOV W22, W1
	0x03DEAB10 MOV X23, X0
	0x03DEAB14 TBNZ X8, 0x0, 0x3DEAB2C
	0x03DEAB18 ADRP X0, 0x37A000
	0x03DEAB1C LDR X0, [X0 + 0x1A8]
	0x03DEAB20 BL 0x1C16CF4
	0x03DEAB24 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X26, 0x5FF000
	012 Move W8, [X26+541]
	013 Move X19, X6
	014 Move W20, W5
	015 Move W21, W4
	016 Move X22, X3
	017 Move X23, X2
	018 Move W24, W1
	019 Move X25, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x37B000
	025 Move X0, [X0+424]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X26+541], W8
	029 Move X0, [X25+928]
	030 Compare X0, 0
	031 JumpIfEqual {83}
	032 Move X8, [X0]
	033 Move X9, [X8+984]
	034 Move X1, [X8+992]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Compare X0, 0
	037 JumpIfEqual {83}
	038 Move X10, 0x37B000
	039 Move X8, [X0]
	040 Move X10, [X10+424]
	041 Move X26, X0
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move X1, [X10]
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move W2, 2
	053 Move X0, X26
	054 Call 0x1C5D788
	055 Move W9, [X10]
	056 Add W9, W9, 2
	057 Add X8, X8, W9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X9, [X0+8]
	061 Move X0, X26
	062 Move X1, X25
	063 Move W2, W24
	064 Move X3, X23
	065 Move X4, X22
	066 Move W5, W21
	067 Move W6, W20
	068 Move X7, X19
	069 Move [X31], X9
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X20, [X31+80]
	072 Move X19, [X31+88]
	073 Move X22, [X31+64]
	074 Move X21, [X31+72]
	075 Move X24, [X31+48]
	076 Move X23, [X31+56]
	077 Move X26, [X31+32]
	078 Move X25, [X31+40]
	079 Move X30, [X31+16]
	080 And W0, W0, 1
	081 Add X31, X31, 96
	082 Return X0
	083 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.Color from, UnityEngine.Color to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DEAB28 STRB W8, [X24 + 0x22A]
	0x03DEAB2C LDR X0, [X23 + 0x3A0]
	0x03DEAB30 CBZ X0, 0x3DEAB4C
	0x03DEAB34 LDR X8, [X0]
	0x03DEAB38 LDR X9, [X8 + 0x3D8]
	0x03DEAB3C LDR X1, [X8 + 0x3E0]
	0x03DEAB40 BLR X9
	0x03DEAB44 MOV X24, X0
	0x03DEAB48 B 0x3DEAB50
	0x03DEAB4C MOV X24, X31
	0x03DEAB50 LDR W8, [X26 + 0x10]
	0x03DEAB54 LDR V0, [X26]
	0x03DEAB58 STR W8, [X31 + 0x80]
	0x03DEAB5C STR V0, [X31 + 0x7]
	0x03DEAB60 LDR W8, [X25 + 0x10]
	0x03DEAB64 LDR V0, [X25]
	0x03DEAB68 STR W8, [X31 + 0x60]
	0x03DEAB6C STR V0, [X31 + 0x5]
	0x03DEAB70 CBZ X24, 0x3DEAC5C
	0x03DEAB74 LDR V0, [X31 + 0x7]
	0x03DEAB78 LDR W8, [X31 + 0x80]
	0x03DEAB7C LDR V1, [X31 + 0x5]
	0x03DEAB80 LDR W9, [X31 + 0x60]
	0x03DEAB84 STR V0, [X31 + 0x3]
	0x03DEAB88 STR W8, [X31 + 0x40]
	0x03DEAB8C STR V1, [X31 + 0x1]
	0x03DEAB90 STR W9, [X31 + 0x20]
	0x03DEAB94 ADRP X10, 0x37A000
	0x03DEAB98 LDR X8, [X24]
	0x03DEAB9C LDR X10, [X10 + 0x1A8]
	0x03DEABA0 LDRH W9, [X8 + 0x12E]
	0x03DEABA4 LDR X1, [X10]
	0x03DEABA8 CBZ X9, 0x3DEABCC
	0x03DEABAC LDR X10, [X8 + 0xB0]
	0x03DEABB0 ADD X10, X10, 0x8
	0x03DEABB4 LDUR X11, [X10 - 0x8]
	0x03DEABB8 CMP X11, X1
	0x03DEABBC B.EQ 0x3DEABDC
	0x03DEABC0 SUBS X9, X9, 0x1
	0x03DEABC4 ADD X10, X10, 0x10
	0x03DEABC8 B.NE 0x3DEABB4
	0x03DEABCC MOVZ W2, 0xE
	0x03DEABD0 MOV X0, X24
	0x03DEABD4 BL 0x1C5C788
	0x03DEABD8 B 0x3DEABEC
	0x03DEABDC LDR W9, [X10]
	0x03DEABE0 ADD W9, W9, 0xE
	0x03DEABE4 ADD X8, X8, W9, 0x4, SXTW
	0x03DEABE8 ADD X0, X8, 0x138
	0x03DEABEC LDR V0, [X31 + 0x3]
	0x03DEABF0 LDR W9, [X31 + 0x40]
	0x03DEABF4 LDR V1, [X31 + 0x1]
	0x03DEABF8 LDR W10, [X31 + 0x20]
	0x03DEABFC LDR X8, [X0]
	0x03DEAC00 STR V0, [X31 + 0xB]
	0x03DEAC04 STR W9, [X31 + 0xC0]
	0x03DEAC08 STR V1, [X31 + 0x9]
	0x03DEAC0C STR W10, [X31 + 0xA0]
	0x03DEAC10 LDR X9, [X0 + 0x8]
	0x03DEAC14 ADD X3, X31, 0xB0
	0x03DEAC18 ADD X4, X31, 0x90
	0x03DEAC1C MOV X0, X24
	0x03DEAC20 MOV X1, X23
	0x03DEAC24 MOV W2, W22
	0x03DEAC28 MOV W5, W21
	0x03DEAC2C MOV W6, W20
	0x03DEAC30 MOV X7, X19
	0x03DEAC34 STR X9, [X31]
	0x03DEAC38 BLR X8
	0x03DEAC3C LDP X20, X19, [X31 + 0x110]
	0x03DEAC40 LDP X22, X21, [X31 + 0x100]
	0x03DEAC44 LDP X24, X23, [X31 + 0xF0]
	0x03DEAC48 LDP X26, X25, [X31 + 0xE0]
	0x03DEAC4C LDP X29, X30, [X31 + 0xD0]
	0x03DEAC50 AND W0, W0, 0x1
	0x03DEAC54 ADD X31, X31, 0x120
	0x03DEAC58 RET
	0x03DEAC5C BL 0x1C16F20
	0x03DEAC60 STP X30, X21, [X31 - 0x20]!
	0x03DEAC64 STP X20, X19, [X31 + 0x10]
	0x03DEAC68 ADRP X21, 0x5FE000
	0x03DEAC6C LDRB W8, [X21 + 0x22B]
	0x03DEAC70 MOV W19, W1
	0x03DEAC74 MOV X20, X0

ISIL:
	001 Move [X31-128], D15
	002 Move [X31-120], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X24, 0x5FF000
	017 Move W8, [X24+542]
	018 Move X19, X4
	019 Move W20, W3
	020 Move W21, W2
	021 Move V8, V7
	022 Move V9, V6
	023 Move V10, V5
	024 Move V11, V4
	025 Move V12, V3
	026 Move V13, V2
	027 Move V14, V1
	028 Move V15, V0
	029 Move W22, W1
	030 Move X23, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {40}
	035 Move X0, 0x37B000
	036 Move X0, [X0+424]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X24+542], W8
	040 Move X0, [X23+928]
	041 Compare X0, 0
	042 JumpIfEqual {102}
	043 Move X8, [X0]
	044 Move X9, [X8+984]
	045 Move X1, [X8+992]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Compare X0, 0
	048 JumpIfEqual {102}
	049 Move X10, 0x37B000
	050 Move X8, [X0]
	051 Move X10, [X10+424]
	052 Move X24, X0
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move W2, 3
	064 Move X0, X24
	065 Call 0x1C5D788
	066 Move W9, [X10]
	067 Add W9, W9, 3
	068 Add X8, X8, W9
	069 Add X0, X8, 312
	070 Move X7, [X0]
	071 Move X6, [X0+8]
	072 Move V2, V13
	073 Move V3, V12
	074 Move V4, V11
	075 Move V5, V10
	076 Move V6, V9
	077 Move V7, V8
	078 Move X0, X24
	079 Move X1, X23
	080 Move W2, W22
	081 Move W3, W21
	082 Move W4, W20
	083 Move X5, X19
	084 Move X20, [X31+112]
	085 Move X19, [X31+120]
	086 Move X22, [X31+96]
	087 Move X21, [X31+104]
	088 Move X24, [X31+80]
	089 Move X23, [X31+88]
	090 Move X30, [X31+64]
	091 Move D9, [X31+48]
	092 Move D8, [X31+56]
	093 Move D11, [X31+32]
	094 Move D10, [X31+40]
	095 Move D13, [X31+16]
	096 Move D12, [X31+24]
	097 Move V0, V15
	098 Move V1, V14
	099 Move D15, [X31+128]
	100 Move D14, [X31+136]
	101 CallNoReturn X7
	102 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.StartEnum(UnityEngine.UIElements.StyleSheets.StylePropertyId id, System.Int32 from, System.Int32 to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DEAC78 TBNZ X8, 0x0, 0x3DEAC90
	0x03DEAC7C ADRP X0, 0x37A000
	0x03DEAC80 LDR X0, [X0 + 0x1A8]
	0x03DEAC84 BL 0x1C16CF4
	0x03DEAC88 MOVZ W8, 0x1
	0x03DEAC8C STRB W8, [X21 + 0x22B]
	0x03DEAC90 LDR X0, [X20 + 0x3A0]
	0x03DEAC94 CBZ X0, 0x3DEACF8
	0x03DEAC98 LDR X8, [X0]
	0x03DEAC9C LDR X9, [X8 + 0x3D8]
	0x03DEACA0 LDR X1, [X8 + 0x3E0]
	0x03DEACA4 BLR X9
	0x03DEACA8 CBZ X0, 0x3DEACF8
	0x03DEACAC ADRP X10, 0x37A000
	0x03DEACB0 LDR X8, [X0]
	0x03DEACB4 LDR X10, [X10 + 0x1A8]
	0x03DEACB8 MOV X21, X0
	0x03DEACBC LDRH W9, [X8 + 0x12E]
	0x03DEACC0 LDR X1, [X10]
	0x03DEACC4 CBZ X9, 0x3DEACE8
	0x03DEACC8 LDR X10, [X8 + 0xB0]
	0x03DEACCC ADD X10, X10, 0x8
	0x03DEACD0 LDUR X11, [X10 - 0x8]
	0x03DEACD4 CMP X11, X1
	0x03DEACD8 B.EQ 0x3DEAD04
	0x03DEACDC SUBS X9, X9, 0x1
	0x03DEACE0 ADD X10, X10, 0x10
	0x03DEACE4 B.NE 0x3DEACD0
	0x03DEACE8 MOVZ W2, 0x11
	0x03DEACEC MOV X0, X21
	0x03DEACF0 BL 0x1C5C788
	0x03DEACF4 B 0x3DEAD14
	0x03DEACF8 LDP X20, X19, [X31 + 0x10]
	0x03DEACFC LDP X30, X21, [X31], #0x20
	0x03DEAD00 RET
	0x03DEAD04 LDR W9, [X10]
	0x03DEAD08 ADD W9, W9, 0x11
	0x03DEAD0C ADD X8, X8, W9, 0x4, SXTW
	0x03DEAD10 ADD X0, X8, 0x138
	0x03DEAD14 LDP X4, X3, [X0]
	0x03DEAD18 MOV X1, X20
	0x03DEAD1C MOV W2, W19
	0x03DEAD20 LDP X20, X19, [X31 + 0x10]
	0x03DEAD24 MOV X0, X21
	0x03DEAD28 LDP X30, X21, [X31], #0x20
	0x03DEAD2C BR X4
	0x03DEAD30 STR X30, [X31 - 0x20]!
	0x03DEAD34 STP X20, X19, [X31 + 0x10]
	0x03DEAD38 ADRP X20, 0x5FE000
	0x03DEAD3C LDRB W8, [X20 + 0x22C]
	0x03DEAD40 MOV X19, X0
	0x03DEAD44 TBNZ X8, 0x0, 0x3DEAD5C
	0x03DEAD48 ADRP X0, 0x37A000
	0x03DEAD4C LDR X0, [X0 + 0x1A8]
	0x03DEAD50 BL 0x1C16CF4
	0x03DEAD54 MOVZ W8, 0x1
	0x03DEAD58 STRB W8, [X20 + 0x22C]
	0x03DEAD5C MOV X0, X19
	0x03DEAD60 BL 0x3DE9658
	0x03DEAD64 TBNZ X0, 0x0, 0x3DEAD74
	0x03DEAD68 MOV X0, X19
	0x03DEAD6C BL 0x3DE9704
	0x03DEAD70 TBZ X0, 0x0, 0x3DEADDC
	0x03DEAD74 LDR X0, [X19 + 0x3A0]
	0x03DEAD78 CBZ X0, 0x3DEADDC
	0x03DEAD7C LDR X8, [X0]
	0x03DEAD80 LDR X9, [X8 + 0x3D8]
	0x03DEAD84 LDR X1, [X8 + 0x3E0]
	0x03DEAD88 BLR X9
	0x03DEAD8C CBZ X0, 0x3DEADDC
	0x03DEAD90 ADRP X10, 0x37A000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X26, 0x5FF000
	012 Move W8, [X26+543]
	013 Move X19, X6
	014 Move W20, W5
	015 Move W21, W4
	016 Move W22, W3
	017 Move W23, W2
	018 Move W24, W1
	019 Move X25, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x37B000
	025 Move X0, [X0+424]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X26+543], W8
	029 Move X0, [X25+928]
	030 Compare X0, 0
	031 JumpIfEqual {83}
	032 Move X8, [X0]
	033 Move X9, [X8+984]
	034 Move X1, [X8+992]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Compare X0, 0
	037 JumpIfEqual {83}
	038 Move X10, 0x37B000
	039 Move X8, [X0]
	040 Move X10, [X10+424]
	041 Move X26, X0
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move X1, [X10]
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move W2, 1
	053 Move X0, X26
	054 Call 0x1C5D788
	055 Move W9, [X10]
	056 Add W9, W9, 1
	057 Add X8, X8, W9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X9, [X0+8]
	061 Move X0, X26
	062 Move X1, X25
	063 Move W2, W24
	064 Move W3, W23
	065 Move W4, W22
	066 Move W5, W21
	067 Move W6, W20
	068 Move X7, X19
	069 Move [X31], X9
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X20, [X31+80]
	072 Move X19, [X31+88]
	073 Move X22, [X31+64]
	074 Move X21, [X31+72]
	075 Move X24, [X31+48]
	076 Move X23, [X31+56]
	077 Move X26, [X31+32]
	078 Move X25, [X31+40]
	079 Move X30, [X31+16]
	080 And W0, W0, 1
	081 Add X31, X31, 96
	082 Return X0
	083 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Background from, UnityEngine.UIElements.Background to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DEAD94 LDR X8, [X0]
	0x03DEAD98 LDR X10, [X10 + 0x1A8]
	0x03DEAD9C MOV X20, X0
	0x03DEADA0 LDRH W9, [X8 + 0x12E]
	0x03DEADA4 LDR X1, [X10]
	0x03DEADA8 CBZ X9, 0x3DEADCC
	0x03DEADAC LDR X10, [X8 + 0xB0]
	0x03DEADB0 ADD X10, X10, 0x8
	0x03DEADB4 LDUR X11, [X10 - 0x8]
	0x03DEADB8 CMP X11, X1
	0x03DEADBC B.EQ 0x3DEADE8
	0x03DEADC0 SUBS X9, X9, 0x1
	0x03DEADC4 ADD X10, X10, 0x10
	0x03DEADC8 B.NE 0x3DEADB4
	0x03DEADCC MOVZ W2, 0x10
	0x03DEADD0 MOV X0, X20
	0x03DEADD4 BL 0x1C5C788
	0x03DEADD8 B 0x3DEADF8
	0x03DEADDC LDP X20, X19, [X31 + 0x10]
	0x03DEADE0 LDR X30, [X31], #0x20
	0x03DEADE4 RET
	0x03DEADE8 LDR W9, [X10]
	0x03DEADEC ADD W9, W9, 0x10
	0x03DEADF0 ADD X8, X8, W9, 0x4, SXTW
	0x03DEADF4 ADD X0, X8, 0x138
	0x03DEADF8 LDP X3, X2, [X0]
	0x03DEADFC MOV X0, X20
	0x03DEAE00 MOV X1, X19
	0x03DEAE04 LDP X20, X19, [X31 + 0x10]
	0x03DEAE08 LDR X30, [X31], #0x20
	0x03DEAE0C BR X3
	0x03DEAE10 STP X30, X21, [X31 - 0x20]!
	0x03DEAE14 STP X20, X19, [X31 + 0x10]
	0x03DEAE18 ADRP X21, 0x5FE000
	0x03DEAE1C LDRB W8, [X21 + 0x22D]
	0x03DEAE20 MOV W19, W1
	0x03DEAE24 MOV X20, X0
	0x03DEAE28 TBNZ X8, 0x0, 0x3DEAE40
	0x03DEAE2C ADRP X0, 0x37A000
	0x03DEAE30 LDR X0, [X0 + 0x1A8]
	0x03DEAE34 BL 0x1C16CF4
	0x03DEAE38 MOVZ W8, 0x1
	0x03DEAE3C STRB W8, [X21 + 0x22D]
	0x03DEAE40 LDR X0, [X20 + 0x3A0]
	0x03DEAE44 CBZ X0, 0x3DEAED4
	0x03DEAE48 LDR X8, [X0]
	0x03DEAE4C LDR X9, [X8 + 0x3D8]
	0x03DEAE50 LDR X1, [X8 + 0x3E0]
	0x03DEAE54 BLR X9
	0x03DEAE58 CBZ X0, 0x3DEAED4
	0x03DEAE5C ADRP X10, 0x37A000
	0x03DEAE60 LDR X8, [X0]
	0x03DEAE64 LDR X10, [X10 + 0x1A8]
	0x03DEAE68 MOV X21, X0
	0x03DEAE6C LDRH W9, [X8 + 0x12E]
	0x03DEAE70 LDR X1, [X10]
	0x03DEAE74 CBZ X9, 0x3DEAE98
	0x03DEAE78 LDR X10, [X8 + 0xB0]
	0x03DEAE7C ADD X10, X10, 0x8
	0x03DEAE80 LDUR X11, [X10 - 0x8]
	0x03DEAE84 CMP X11, X1
	0x03DEAE88 B.EQ 0x3DEAEA8
	0x03DEAE8C SUBS X9, X9, 0x1
	0x03DEAE90 ADD X10, X10, 0x10
	0x03DEAE94 B.NE 0x3DEAE80
	0x03DEAE98 MOVZ W2, 0x12
	0x03DEAE9C MOV X0, X21
	0x03DEAEA0 BL 0x1C5C788
	0x03DEAEA4 B 0x3DEAEB8
	0x03DEAEA8 LDR W9, [X10]
	0x03DEAEAC ADD W9, W9, 0x12
	0x03DEAEB0 ADD X8, X8, W9, 0x4, SXTW
	0x03DEAEB4 ADD X0, X8, 0x138
	0x03DEAEB8 LDP X4, X3, [X0]
	0x03DEAEBC MOV X1, X20
	0x03DEAEC0 MOV W2, W19
	0x03DEAEC4 LDP X20, X19, [X31 + 0x10]
	0x03DEAEC8 MOV X0, X21
	0x03DEAECC LDP X30, X21, [X31], #0x20
	0x03DEAED0 BR X4
	0x03DEAED4 BL 0x1C16F20
	0x03DEAED8 STP X30, X21, [X31 - 0x20]!
	0x03DEAEDC STP X20, X19, [X31 + 0x10]
	0x03DEAEE0 ADRP X21, 0x5FE000
	0x03DEAEE4 LDRB W8, [X21 + 0x22E]
	0x03DEAEE8 MOV X19, X1

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X26
	005 Move [X31+232], X25
	006 Move [X31+240], X24
	007 Move [X31+248], X23
	008 Move [X31+256], X22
	009 Move [X31+264], X21
	010 Move [X31+272], X20
	011 Move [X31+280], X19
	012 Move X24, 0x5FF000
	013 Move W8, [X24+544]
	014 Move X19, X6
	015 Move W20, W5
	016 Move W21, W4
	017 Move X25, X3
	018 Move X26, X2
	019 Move W22, W1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x37B000
	026 Move X0, [X0+424]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+544], W8
	030 Move X0, [X23+928]
	031 Compare X0, 0
	032 JumpIfEqual {38}
	033 Move X8, [X0]
	034 Move X9, [X8+984]
	035 Move X1, [X8+992]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X24, X0
	038 Move X24, X31
	039 Move V1, [X26]
	040 Move V0, [X26+16]
	041 Move [X31+112], V1
	042 Move [X31+120], V0
	043 Move V1, [X25]
	044 Move V0, [X25+16]
	045 Move [X31+80], V1
	046 Move [X31+88], V0
	047 Compare X24, 0
	048 JumpIfEqual {110}
	049 Move V0, [X31+112]
	050 Move V1, [X31+128]
	051 Move V2, [X31+80]
	052 Move V3, [X31+96]
	053 Move X10, 0x37B000
	054 Move [X31+48], V0
	055 Move [X31+56], V1
	056 Move [X31+16], V2
	057 Move [X31+24], V3
	058 Move X8, [X24]
	059 Move X10, [X10+424]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move X1, [X10]
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move W2, 4
	071 Move X0, X24
	072 Call 0x1C5D788
	073 Move W9, [X10]
	074 Add W9, W9, 4
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move V0, [X31+48]
	078 Move V1, [X31+64]
	079 Move V2, [X31+16]
	080 Move V3, [X31+32]
	081 Move X8, [X0]
	082 Add X3, X31, 176
	083 Move [X31+176], V0
	084 Move [X31+184], V1
	085 Move [X31+144], V2
	086 Move [X31+152], V3
	087 Move X9, [X0+8]
	088 Add X4, X31, 144
	089 Move X0, X24
	090 Move X1, X23
	091 Move W2, W22
	092 Move W5, W21
	093 Move W6, W20
	094 Move X7, X19
	095 Move [X31], X9
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X20, [X31+272]
	098 Move X19, [X31+280]
	099 Move X22, [X31+256]
	100 Move X21, [X31+264]
	101 Move X24, [X31+240]
	102 Move X23, [X31+248]
	103 Move X26, [X31+224]
	104 Move X25, [X31+232]
	105 Move X29, [X31+208]
	106 Move X30, [X31+216]
	107 And W0, W0, 1
	108 Add X31, X31, 288
	109 Return X0
	110 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.FontDefinition from, UnityEngine.UIElements.FontDefinition to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DEAEEC MOV X20, X0
	0x03DEAEF0 TBNZ X8, 0x0, 0x3DEAF08
	0x03DEAEF4 ADRP X0, 0x37A000
	0x03DEAEF8 LDR X0, [X0 + 0x1A8]
	0x03DEAEFC BL 0x1C16CF4
	0x03DEAF00 MOVZ W8, 0x1
	0x03DEAF04 STRB W8, [X21 + 0x22E]
	0x03DEAF08 MOV X0, X20
	0x03DEAF0C BL 0x3DE9658
	0x03DEAF10 TBNZ X0, 0x0, 0x3DEAF20
	0x03DEAF14 MOV X0, X20
	0x03DEAF18 BL 0x3DE9704
	0x03DEAF1C TBZ X0, 0x0, 0x3DEAF88
	0x03DEAF20 LDR X0, [X20 + 0x3A0]
	0x03DEAF24 CBZ X0, 0x3DEAFC0
	0x03DEAF28 LDR X8, [X0]
	0x03DEAF2C LDR X9, [X8 + 0x3D8]
	0x03DEAF30 LDR X1, [X8 + 0x3E0]
	0x03DEAF34 BLR X9
	0x03DEAF38 CBZ X0, 0x3DEAFC0
	0x03DEAF3C ADRP X10, 0x37A000
	0x03DEAF40 LDR X8, [X0]
	0x03DEAF44 LDR X10, [X10 + 0x1A8]
	0x03DEAF48 MOV X21, X0
	0x03DEAF4C LDRH W9, [X8 + 0x12E]
	0x03DEAF50 LDR X1, [X10]
	0x03DEAF54 CBZ X9, 0x3DEAF78
	0x03DEAF58 LDR X10, [X8 + 0xB0]
	0x03DEAF5C ADD X10, X10, 0x8
	0x03DEAF60 LDUR X11, [X10 - 0x8]
	0x03DEAF64 CMP X11, X1
	0x03DEAF68 B.EQ 0x3DEAF94
	0x03DEAF6C SUBS X9, X9, 0x1
	0x03DEAF70 ADD X10, X10, 0x10
	0x03DEAF74 B.NE 0x3DEAF60
	0x03DEAF78 MOVZ W2, 0x13
	0x03DEAF7C MOV X0, X21
	0x03DEAF80 BL 0x1C5C788
	0x03DEAF84 B 0x3DEAFA4
	0x03DEAF88 LDP X20, X19, [X31 + 0x10]
	0x03DEAF8C LDP X30, X21, [X31], #0x20
	0x03DEAF90 RET
	0x03DEAF94 LDR W9, [X10]
	0x03DEAF98 ADD W9, W9, 0x13
	0x03DEAF9C ADD X8, X8, W9, 0x4, SXTW
	0x03DEAFA0 ADD X0, X8, 0x138
	0x03DEAFA4 LDP X4, X3, [X0]
	0x03DEAFA8 MOV X1, X20
	0x03DEAFAC MOV X2, X19
	0x03DEAFB0 LDP X20, X19, [X31 + 0x10]
	0x03DEAFB4 MOV X0, X21
	0x03DEAFB8 LDP X30, X21, [X31], #0x20
	0x03DEAFBC BR X4
	0x03DEAFC0 BL 0x1C16F20
	0x03DEAFC4 SUB X31, X31, 0x60
	0x03DEAFC8 STR D8, [X31 + 0x20]
	0x03DEAFCC STR X30, [X31 + 0x28]
	0x03DEAFD0 STP X24, X23, [X31 + 0x30]
	0x03DEAFD4 STP X22, X21, [X31 + 0x40]
	0x03DEAFD8 STP X20, X19, [X31 + 0x50]
	0x03DEAFDC ADRP X24, 0x5FE000
	0x03DEAFE0 LDRB W8, [X24 + 0x22F]
	0x03DEAFE4 MOV W20, W4
	0x03DEAFE8 MOV X23, X3
	0x03DEAFEC MOV X19, X2
	0x03DEAFF0 MOV W21, W1
	0x03DEAFF4 MOV X22, X0
	0x03DEAFF8 TBNZ X8, 0x0, 0x3DEB034
	0x03DEAFFC ADRP X0, 0x37F000
	0x03DEB000 LDR X0, [X0 + 0x8A0]
	0x03DEB004 BL 0x1C16CF4
	0x03DEB008 ADRP X0, 0x330000
	0x03DEB00C LDR X0, [X0 + 0x7F0]
	0x03DEB010 BL 0x1C16CF4
	0x03DEB014 ADRP X0, 0x30C000
	0x03DEB018 LDR X0, [X0 + 0xC0]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X30
	003 Move [X31+48], X28
	004 Move [X31+56], X27
	005 Move [X31+64], X26
	006 Move [X31+72], X25
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X27, 0x5FF000
	014 Move W8, [X27+545]
	015 Move W23, W7
	016 Move W19, W6
	017 Move X20, X5
	018 Move X21, X4
	019 Move X22, X3
	020 Move X24, X2
	021 Move W25, W1
	022 Move X26, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x37B000
	028 Move X0, [X0+424]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X27+545], W8
	032 Move X0, [X26+928]
	033 Compare X0, 0
	034 JumpIfEqual {91}
	035 Move X8, [X0]
	036 Move X9, [X8+984]
	037 Move X1, [X8+992]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Compare X0, 0
	040 JumpIfEqual {91}
	041 Move X10, 0x37B000
	042 Move X8, [X0]
	043 Move X10, [X10+424]
	044 Move X28, [X31+128]
	045 Move X27, X0
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move X1, [X10]
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move W2, 5
	057 Move X0, X27
	058 Call 0x1C5D788
	059 Move W9, [X10]
	060 Add W9, W9, 5
	061 Add X8, X8, W9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X9, [X0+8]
	065 Move X0, X27
	066 Move X1, X26
	067 Move W2, W25
	068 Move X3, X24
	069 Move X4, X22
	070 Move X5, X21
	071 Move X6, X20
	072 Move W7, W19
	073 Move [X31+8], X28
	074 Move [X31+16], X9
	075 Move [X31], W23
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X20, [X31+112]
	078 Move X19, [X31+120]
	079 Move X22, [X31+96]
	080 Move X21, [X31+104]
	081 Move X24, [X31+80]
	082 Move X23, [X31+88]
	083 Move X26, [X31+64]
	084 Move X25, [X31+72]
	085 Move X28, [X31+48]
	086 Move X27, [X31+56]
	087 Move X30, [X31+32]
	088 And W0, W0, 1
	089 Add X31, X31, 128
	090 Return X0
	091 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.Font from, UnityEngine.Font to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DEB01C BL 0x1C16CF4
	0x03DEB020 ADRP X0, 0x30C000
	0x03DEB024 LDR X0, [X0 + 0x118]
	0x03DEB028 BL 0x1C16CF4
	0x03DEB02C MOVZ W8, 0x1
	0x03DEB030 STRB W8, [X24 + 0x22F]
	0x03DEB034 MOV X0, X19
	0x03DEB038 MOV X1, X31
	0x03DEB03C STP X31, X31, [X31 + 0x10]
	0x03DEB040 BL 0x3DFD4D0
	0x03DEB044 TBNZ X0, 0x0, 0x3DEB218
	0x03DEB048 MOV X0, X19
	0x03DEB04C MOV X1, X31
	0x03DEB050 BL 0x3DFD4E0
	0x03DEB054 TBNZ X0, 0x0, 0x3DEB218
	0x03DEB058 MOV X0, X23
	0x03DEB05C MOV X1, X31
	0x03DEB060 BL 0x3DFD4D0
	0x03DEB064 TBNZ X0, 0x0, 0x3DEB218
	0x03DEB068 MOV X0, X23
	0x03DEB06C MOV X1, X31
	0x03DEB070 BL 0x3DFD4E0
	0x03DEB074 TBNZ X0, 0x0, 0x3DEB218
	0x03DEB078 LDR V8, [X19]
	0x03DEB07C FMOV W8, S8
	0x03DEB080 AND W9, W8, 0x7FFFFFFF
	0x03DEB084 MOVZ W8, 0x7F800000
	0x03DEB088 CMP W9, W8
	0x03DEB08C B.HI 0x3DEB218
	0x03DEB090 LDR W9, [X23]
	0x03DEB094 AND W9, W9, 0x7FFFFFFF
	0x03DEB098 CMP W9, W8
	0x03DEB09C B.HI 0x3DEB218
	0x03DEB0A0 LDR W8, [X19 + 0x4]
	0x03DEB0A4 LDR W23, [X23 + 0x4]
	0x03DEB0A8 CMP W8, W23
	0x03DEB0AC B.NE 0x3DEB0B8
	0x03DEB0B0 MOVZ W20, 0x1
	0x03DEB0B4 B 0x3DEB21C
	0x03DEB0B8 CBZ W23, 0x3DEB168
	0x03DEB0BC ADRP X8, 0x330000
	0x03DEB0C0 LDR X8, [X8 + 0x7F0]
	0x03DEB0C4 LDR X0, [X8]
	0x03DEB0C8 LDR W8, [X0 + 0xE0]
	0x03DEB0CC CBNZ W8, 0x3DEB0D4
	0x03DEB0D0 BL 0x1C16DFC
	0x03DEB0D4 ADRP X8, 0x37E000
	0x03DEB0D8 LDR X8, [X8 + 0x8A0]
	0x03DEB0DC MOVZ W0, 0x1
	0x03DEB0E0 MOV W1, W23
	0x03DEB0E4 LDR X2, [X8]
	0x03DEB0E8 BL 0x218335C
	0x03DEB0EC MOV X0, X22
	0x03DEB0F0 MOV W1, W21
	0x03DEB0F4 MOV W2, W20
	0x03DEB0F8 BL 0x3DEB27C
	0x03DEB0FC ANDS W31, W0, 0xFF
	0x03DEB100 STR X0, [X31 + 0x10]
	0x03DEB104 B.EQ 0x3DEB218
	0x03DEB108 ADRP X20, 0x30C000
	0x03DEB10C LDR X20, [X20 + 0x118]
	0x03DEB110 ADD X0, X31, 0x10
	0x03DEB114 LDR X1, [X20]
	0x03DEB118 BL 0x243AC20
	0x03DEB11C FCMP S0, 0x0
	0x03DEB120 B.LE 0x3DEB218
	0x03DEB124 LDR X1, [X20]
	0x03DEB128 LDR V8, [X19]
	0x03DEB12C ADD X0, X31, 0x10
	0x03DEB130 BL 0x243AC20
	0x03DEB134 MOVZ W8, 0x42C80000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X26, 0x5FE000
	012 Move W8, [X26+546]
	013 Move X19, X6
	014 Move W20, W5
	015 Move W21, W4
	016 Move X22, X3
	017 Move X23, X2
	018 Move W24, W1
	019 Move X25, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x37A000
	025 Move X0, [X0+424]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X26+546], W8
	029 Move X0, [X25+928]
	030 Compare X0, 0
	031 JumpIfEqual {83}
	032 Move X8, [X0]
	033 Move X9, [X8+984]
	034 Move X1, [X8+992]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Compare X0, 0
	037 JumpIfEqual {83}
	038 Move X10, 0x37A000
	039 Move X8, [X0]
	040 Move X10, [X10+424]
	041 Move X26, X0
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move X1, [X10]
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move W2, 6
	053 Move X0, X26
	054 Call 0x1C5D788
	055 Move W9, [X10]
	056 Add W9, W9, 6
	057 Add X8, X8, W9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X9, [X0+8]
	061 Move X0, X26
	062 Move X1, X25
	063 Move W2, W24
	064 Move X3, X23
	065 Move X4, X22
	066 Move W5, W21
	067 Move W6, W20
	068 Move X7, X19
	069 Move [X31], X9
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X20, [X31+80]
	072 Move X19, [X31+88]
	073 Move X22, [X31+64]
	074 Move X21, [X31+72]
	075 Move X24, [X31+48]
	076 Move X23, [X31+56]
	077 Move X26, [X31+32]
	078 Move X25, [X31+40]
	079 Move X30, [X31+16]
	080 And W0, W0, 1
	081 Add X31, X31, 96
	082 Return X0
	083 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.TextShadow from, UnityEngine.UIElements.TextShadow to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DEB138 FMOV S1, W8
	0x03DEB13C FMUL S1, S8, S1
	0x03DEB140 FDIV S0, S1, S0
	0x03DEB144 ADD X0, X31, 0x8
	0x03DEB148 MOVZ W1, 0x1
	0x03DEB14C MOV X2, X31
	0x03DEB150 STR X31, [X31 + 0x8]
	0x03DEB154 MOVZ W20, 0x1
	0x03DEB158 BL 0x3DFD43C
	0x03DEB15C LDR X8, [X31 + 0x8]
	0x03DEB160 STR X8, [X19]
	0x03DEB164 B 0x3DEB21C
	0x03DEB168 ADRP X23, 0x5EE000
	0x03DEB16C LDRB W8, [X23 + 0x5AA]
	0x03DEB170 CBNZ W8, 0x3DEB188
	0x03DEB174 ADRP X0, 0x30F000
	0x03DEB178 LDR X0, [X0 + 0x4B8]
	0x03DEB17C BL 0x1C16CF4
	0x03DEB180 MOVZ W8, 0x1
	0x03DEB184 STRB W8, [X23 + 0x5AA]
	0x03DEB188 ADRP X8, 0x30F000
	0x03DEB18C LDR X8, [X8 + 0x4B8]
	0x03DEB190 ADRP X9, 0xFFFFFFFFFCCFF000
	0x03DEB194 LDR V0, [X9 + 0x240]
	0x03DEB198 FABS S1, S8
	0x03DEB19C LDR X8, [X8]
	0x03DEB1A0 FMOV S2, W31
	0x03DEB1A4 FMAXNM S1, S1, S2
	0x03DEB1A8 FMUL S0, S1, S0
	0x03DEB1AC LDR X8, [X8 + 0xB8]
	0x03DEB1B0 FMOV S1, 8
	0x03DEB1B4 LDR V3, [X8]
	0x03DEB1B8 FMUL S1, S3, S1
	0x03DEB1BC FCMP S0, S1
	0x03DEB1C0 FCSEL S0, S0, S1, GT
	0x03DEB1C4 FABD S1, S2, S2
	0x03DEB1C8 FCMP S1, S0
	0x03DEB1CC B.PL 0x3DEB1E0
	0x03DEB1D0 ADD X0, X31, 0x8
	0x03DEB1D4 FMOV S0, W31
	0x03DEB1D8 STR X31, [X31 + 0x8]
	0x03DEB1DC B 0x3DEB264
	0x03DEB1E0 MOV X0, X22
	0x03DEB1E4 MOV W1, W21
	0x03DEB1E8 MOV W2, W20
	0x03DEB1EC BL 0x3DEB27C
	0x03DEB1F0 ANDS W31, W0, 0xFF
	0x03DEB1F4 STR X0, [X31 + 0x18]
	0x03DEB1F8 B.EQ 0x3DEB218
	0x03DEB1FC ADRP X20, 0x30C000
	0x03DEB200 LDR X20, [X20 + 0x118]
	0x03DEB204 ADD X0, X31, 0x18
	0x03DEB208 LDR X1, [X20]
	0x03DEB20C BL 0x243AC20
	0x03DEB210 FCMP S0, 0x0
	0x03DEB214 B.GE 0x3DEB23C
	0x03DEB218 MOV W20, W31
	0x03DEB21C MOV W0, W20
	0x03DEB220 LDP X20, X19, [X31 + 0x50]
	0x03DEB224 LDP X22, X21, [X31 + 0x40]
	0x03DEB228 LDP X24, X23, [X31 + 0x30]
	0x03DEB22C LDR X30, [X31 + 0x28]
	0x03DEB230 LDR V8, [X31 + 0x20]
	0x03DEB234 ADD X31, X31, 0x60
	0x03DEB238 RET
	0x03DEB23C LDR X1, [X20]
	0x03DEB240 LDR V8, [X19]
	0x03DEB244 ADD X0, X31, 0x18
	0x03DEB248 BL 0x243AC20
	0x03DEB24C MOVZ W8, 0x42C80000
	0x03DEB250 FMUL S0, S8, S0
	0x03DEB254 FMOV S1, W8
	0x03DEB258 STR X31, [X31 + 0x8]
	0x03DEB25C FDIV S0, S0, S1
	0x03DEB260 ADD X0, X31, 0x8
	0x03DEB264 MOV W1, W31
	0x03DEB268 MOV X2, X31
	0x03DEB26C BL 0x3DFD43C
	0x03DEB270 LDR X8, [X31 + 0x8]
	0x03DEB274 STR X8, [X19]
	0x03DEB278 B 0x3DEB0B0
	0x03DEB27C SUB X31, X31, 0x40
	0x03DEB280 STR X30, [X31 + 0x10]
	0x03DEB284 STP X22, X21, [X31 + 0x20]
	0x03DEB288 STP X20, X19, [X31 + 0x30]
	0x03DEB28C ADRP X22, 0x5FD000
	0x03DEB290 LDRB W8, [X22 + 0x230]
	0x03DEB294 MOV W20, W2
	0x03DEB298 MOV W21, W1
	0x03DEB29C MOV X19, X0
	0x03DEB2A0 TBNZ X8, 0x0, 0x3DEB2C4
	0x03DEB2A4 ADRP X0, 0x331000
	0x03DEB2A8 LDR X0, [X0 + 0x120]
	0x03DEB2AC BL 0x1C16CF4
	0x03DEB2B0 ADRP X0, 0x30C000
	0x03DEB2B4 LDR X0, [X0 + 0x138]
	0x03DEB2B8 BL 0x1C16CF4
	0x03DEB2BC MOVZ W8, 0x1
	0x03DEB2C0 STRB W8, [X22 + 0x230]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X26
	005 Move [X31+232], X25
	006 Move [X31+240], X24
	007 Move [X31+248], X23
	008 Move [X31+256], X22
	009 Move [X31+264], X21
	010 Move [X31+272], X20
	011 Move [X31+280], X19
	012 Move X24, 0x5FE000
	013 Move W8, [X24+547]
	014 Move X19, X6
	015 Move W20, W5
	016 Move W21, W4
	017 Move X25, X3
	018 Move X26, X2
	019 Move W22, W1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x37A000
	026 Move X0, [X0+424]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+547], W8
	030 Move X0, [X23+928]
	031 Compare X0, 0
	032 JumpIfEqual {38}
	033 Move X8, [X0]
	034 Move X9, [X8+984]
	035 Move X1, [X8+992]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X24, X0
	038 Move X24, X31
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 Move V1, [X26]
	041 Move [X31+124], V0
	042 Move [X31+7], V1
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 Move V1, [X25]
	045 Move [X31+92], V0
	046 Move [X31+5], V1
	047 Compare X24, 0
	048 JumpIfEqual {111}
	049 Move V0, [X31+7]
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move V2, [X31+5]
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 Move [X31+3], V0
	054 Move [X31+60], V1
	055 Move [X31+1], V2
	056 Move [X31+28], V3
	057 Move X10, 0x37A000
	058 Move X8, [X24]
	059 Move X10, [X10+424]
	060 Add X25, X31, 144
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X1, [X10]
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move W2, 7
	072 Move X0, X24
	073 Call 0x1C5D788
	074 Move W9, [X10]
	075 Add W9, W9, 7
	076 Add X8, X8, W9
	077 Add X0, X8, 312
	078 Move V0, [X31+3]
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 Move V2, [X31+1]
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 Move X8, [X0]
	083 Move [X31+11], V0
	084 Move [X25+44], V1
	085 Move [X31+9], V2
	086 Move [X25+12], V3
	087 Move X9, [X0+8]
	088 Add X3, X31, 176
	089 Add X4, X31, 144
	090 Move X0, X24
	091 Move X1, X23
	092 Move W2, W22
	093 Move W5, W21
	094 Move W6, W20
	095 Move X7, X19
	096 Move [X31], X9
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X20, [X31+272]
	099 Move X19, [X31+280]
	100 Move X22, [X31+256]
	101 Move X21, [X31+264]
	102 Move X24, [X31+240]
	103 Move X23, [X31+248]
	104 Move X26, [X31+224]
	105 Move X25, [X31+232]
	106 Move X29, [X31+208]
	107 Move X30, [X31+216]
	108 And W0, W0, 1
	109 Add X31, X31, 288
	110 Return X0
	111 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Scale from, UnityEngine.UIElements.Scale to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DEB2C4 MOVZ W8, 0xE
	0x03DEB2C8 MOVK W8, 0x10000
	0x03DEB2CC MOV X0, X31
	0x03DEB2D0 CMP W21, W8
	0x03DEB2D4 STR X31, [X31 + 0x18]
	0x03DEB2D8 B.LT 0x3DEB62C
	0x03DEB2DC MOVZ W8, 0x2
	0x03DEB2E0 MOVK W8, 0x50000
	0x03DEB2E4 ORR W9, W8, 0x1
	0x03DEB2E8 CMP W21, W9
	0x03DEB2EC B.LE 0x3DEB35C
	0x03DEB2F0 MOVZ W8, 0xFFF9
	0x03DEB2F4 MOVK W8, 0xFFF80000
	0x03DEB2F8 ADD W8, W21, W8
	0x03DEB2FC CMP W8, 0x6
	0x03DEB300 MOV X0, X31
	0x03DEB304 B.HI 0x3DEB62C
	0x03DEB308 MOVZ W9, 0x1
	0x03DEB30C LSLV W8, W9, W8
	0x03DEB310 MOVZ W9, 0x63
	0x03DEB314 ANDS W31, W8, W9, 0x0
	0x03DEB318 B.EQ 0x3DEB62C
	0x03DEB31C CBZ X19, 0x3DEB640
	0x03DEB320 ADRP X10, 0x331000
	0x03DEB324 LDR X8, [X19]
	0x03DEB328 LDR X10, [X10 + 0x120]
	0x03DEB32C LDRH W9, [X8 + 0x12E]
	0x03DEB330 LDR X1, [X10]
	0x03DEB334 CBZ X9, 0x3DEB3E0
	0x03DEB338 LDR X10, [X8 + 0xB0]
	0x03DEB33C ADD X10, X10, 0x8
	0x03DEB340 LDUR X11, [X10 - 0x8]
	0x03DEB344 CMP X11, X1
	0x03DEB348 B.EQ 0x3DEB5F4
	0x03DEB34C SUBS X9, X9, 0x1
	0x03DEB350 ADD X10, X10, 0x10
	0x03DEB354 B.NE 0x3DEB340
	0x03DEB358 B 0x3DEB3E0
	0x03DEB35C MOVZ W9, 0xFFF9
	0x03DEB360 MOVK W9, 0xFFFD0000
	0x03DEB364 ADD W9, W21, W9
	0x03DEB368 CMP W9, 0x19
	0x03DEB36C B.HI 0x3DEB44C
	0x03DEB370 ADRP X8, 0xFFFFFFFFFCDAD000
	0x03DEB374 ADD X8, X8, 0x4FE
	0x03DEB378 ADR X10, 0x14
	0x03DEB37C LDRB W11, [X8, X9, LSL]
	0x03DEB380 ADD X10, X10, X11, 0x2, LSL
	0x03DEB384 MOV X0, X31
	0x03DEB388 BR X10
	0x03DEB38C LDR X8, [X19 + 0x378]
	0x03DEB390 ADD X0, X31, 0x18
	0x03DEB394 MOV X1, X31
	0x03DEB398 STR X8, [X31 + 0x18]
	0x03DEB39C BL 0x3DF88DC
	0x03DEB3A0 CBZ X0, 0x3DEB62C
	0x03DEB3A4 ADRP X10, 0x331000
	0x03DEB3A8 LDR X8, [X0]
	0x03DEB3AC LDR X10, [X10 + 0x120]
	0x03DEB3B0 MOV X19, X0
	0x03DEB3B4 LDRH W9, [X8 + 0x12E]
	0x03DEB3B8 LDR X1, [X10]
	0x03DEB3BC CBZ X9, 0x3DEB3E0
	0x03DEB3C0 LDR X10, [X8 + 0xB0]
	0x03DEB3C4 ADD X10, X10, 0x8
	0x03DEB3C8 LDUR X11, [X10 - 0x8]
	0x03DEB3CC CMP X11, X1
	0x03DEB3D0 B.EQ 0x3DEB5F4
	0x03DEB3D4 SUBS X9, X9, 0x1
	0x03DEB3D8 ADD X10, X10, 0x10
	0x03DEB3DC B.NE 0x3DEB3C8
	0x03DEB3E0 MOVZ W2, 0x2C
	0x03DEB3E4 MOV X0, X19
	0x03DEB3E8 BL 0x1C5C788
	0x03DEB3EC B 0x3DEB604
	0x03DEB3F0 LDR X8, [X19 + 0x378]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X30
	003 Move [X31+48], X28
	004 Move [X31+56], X27
	005 Move [X31+64], X26
	006 Move [X31+72], X25
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X27, 0x5FE000
	014 Move W8, [X27+548]
	015 Move W23, W7
	016 Move W19, W6
	017 Move X20, X5
	018 Move X21, X4
	019 Move X22, X3
	020 Move X24, X2
	021 Move W25, W1
	022 Move X26, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x37A000
	028 Move X0, [X0+424]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X27+548], W8
	032 Move X0, [X26+928]
	033 Compare X0, 0
	034 JumpIfEqual {91}
	035 Move X8, [X0]
	036 Move X9, [X8+984]
	037 Move X1, [X8+992]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Compare X0, 0
	040 JumpIfEqual {91}
	041 Move X10, 0x37A000
	042 Move X8, [X0]
	043 Move X10, [X10+424]
	044 Move X28, [X31+128]
	045 Move X27, X0
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move X1, [X10]
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move W2, 8
	057 Move X0, X27
	058 Call 0x1C5D788
	059 Move W9, [X10]
	060 Add W9, W9, 8
	061 Add X8, X8, W9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X9, [X0+8]
	065 Move X0, X27
	066 Move X1, X26
	067 Move W2, W25
	068 Move X3, X24
	069 Move X4, X22
	070 Move X5, X21
	071 Move X6, X20
	072 Move W7, W19
	073 Move [X31+8], X28
	074 Move [X31+16], X9
	075 Move [X31], W23
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X20, [X31+112]
	078 Move X19, [X31+120]
	079 Move X22, [X31+96]
	080 Move X21, [X31+104]
	081 Move X24, [X31+80]
	082 Move X23, [X31+88]
	083 Move X26, [X31+64]
	084 Move X25, [X31+72]
	085 Move X28, [X31+48]
	086 Move X27, [X31+56]
	087 Move X30, [X31+32]
	088 And W0, W0, 1
	089 Add X31, X31, 128
	090 Return X0
	091 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Translate from, UnityEngine.UIElements.Translate to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DEB3F4 ADD X0, X31, 0x18
	0x03DEB3F8 MOV X1, X31
	0x03DEB3FC STR X8, [X31 + 0x18]
	0x03DEB400 BL 0x3DF88DC
	0x03DEB404 CBZ X0, 0x3DEB62C
	0x03DEB408 ADRP X10, 0x331000
	0x03DEB40C LDR X8, [X0]
	0x03DEB410 LDR X10, [X10 + 0x120]
	0x03DEB414 MOV X19, X0
	0x03DEB418 LDRH W9, [X8 + 0x12E]
	0x03DEB41C LDR X1, [X10]
	0x03DEB420 CBZ X9, 0x3DEB444
	0x03DEB424 LDR X10, [X8 + 0xB0]
	0x03DEB428 ADD X10, X10, 0x8
	0x03DEB42C LDUR X11, [X10 - 0x8]
	0x03DEB430 CMP X11, X1
	0x03DEB434 B.EQ 0x3DEB5C0
	0x03DEB438 SUBS X9, X9, 0x1
	0x03DEB43C ADD X10, X10, 0x10
	0x03DEB440 B.NE 0x3DEB42C
	0x03DEB444 MOVZ W2, 0x13
	0x03DEB448 B 0x3DEB3E4
	0x03DEB44C AND W9, W21, 0xFFFFFFFE
	0x03DEB450 CMP W9, W8
	0x03DEB454 B.NE 0x3DEB518
	0x03DEB458 CBZ X19, 0x3DEB640
	0x03DEB45C ADRP X9, 0x331000
	0x03DEB460 LDR X8, [X19]
	0x03DEB464 LDR X9, [X9 + 0x120]
	0x03DEB468 LDR X1, [X9]
	0x03DEB46C LDRH W9, [X8 + 0x12E]
	0x03DEB470 CBZ W20, 0x3DEB5CC
	0x03DEB474 CBZ W9, 0x3DEB444
	0x03DEB478 LDR X10, [X8 + 0xB0]
	0x03DEB47C ADD X10, X10, 0x8
	0x03DEB480 LDUR X11, [X10 - 0x8]
	0x03DEB484 CMP X11, X1
	0x03DEB488 B.EQ 0x3DEB5C0
	0x03DEB48C SUBS X9, X9, 0x1
	0x03DEB490 ADD X10, X10, 0x10
	0x03DEB494 B.NE 0x3DEB480
	0x03DEB498 B 0x3DEB444
	0x03DEB49C LDR X8, [X19 + 0x378]
	0x03DEB4A0 ADD X0, X31, 0x18
	0x03DEB4A4 MOV X1, X31
	0x03DEB4A8 STR X8, [X31 + 0x18]
	0x03DEB4AC BL 0x3DF88DC
	0x03DEB4B0 CBZ X0, 0x3DEB62C
	0x03DEB4B4 LDR X8, [X19 + 0x378]
	0x03DEB4B8 ADD X0, X31, 0x18
	0x03DEB4BC MOV X1, X31
	0x03DEB4C0 STR X8, [X31 + 0x18]
	0x03DEB4C4 BL 0x3DF88DC
	0x03DEB4C8 CBZ X0, 0x3DEB640
	0x03DEB4CC ADRP X21, 0x331000
	0x03DEB4D0 LDR X8, [X0]
	0x03DEB4D4 LDR X21, [X21 + 0x120]
	0x03DEB4D8 MOV X20, X0
	0x03DEB4DC LDRH W9, [X8 + 0x12E]
	0x03DEB4E0 LDR X1, [X21]
	0x03DEB4E4 CBZ X9, 0x3DEB508
	0x03DEB4E8 LDR X10, [X8 + 0xB0]
	0x03DEB4EC ADD X10, X10, 0x8
	0x03DEB4F0 LDUR X11, [X10 - 0x8]
	0x03DEB4F4 CMP X11, X1
	0x03DEB4F8 B.EQ 0x3DEB520
	0x03DEB4FC SUBS X9, X9, 0x1
	0x03DEB500 ADD X10, X10, 0x10
	0x03DEB504 B.NE 0x3DEB4F0
	0x03DEB508 MOVZ W2, 0x10
	0x03DEB50C MOV X0, X20
	0x03DEB510 BL 0x1C5C788
	0x03DEB514 B 0x3DEB530
	0x03DEB518 MOV X0, X31
	0x03DEB51C B 0x3DEB62C
	0x03DEB520 LDR W9, [X10]
	0x03DEB524 ADD W9, W9, 0x10
	0x03DEB528 ADD X8, X8, W9, 0x4, SXTW
	0x03DEB52C ADD X0, X8, 0x138
	0x03DEB530 LDP X8, X1, [X0]
	0x03DEB534 MOV X0, X20
	0x03DEB538 BLR X8
	0x03DEB53C LDR X8, [X19 + 0x378]
	0x03DEB540 MOV W20, W0
	0x03DEB544 ADD X0, X31, 0x18
	0x03DEB548 MOV X1, X31
	0x03DEB54C STR X8, [X31 + 0x18]
	0x03DEB550 BL 0x3DF88DC
	0x03DEB554 CBZ X0, 0x3DEB640
	0x03DEB558 LDR X8, [X0]
	0x03DEB55C LDR X1, [X21]
	0x03DEB560 MOV X19, X0
	0x03DEB564 CMP W20, 0x1
	0x03DEB568 LDRH W9, [X8 + 0x12E]
	0x03DEB56C B.LS 0x3DEB598
	0x03DEB570 CBZ W9, 0x3DEB3E0
	0x03DEB574 LDR X10, [X8 + 0xB0]
	0x03DEB578 ADD X10, X10, 0x8

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X26
	005 Move [X31+232], X25
	006 Move [X31+240], X24
	007 Move [X31+248], X23
	008 Move [X31+256], X22
	009 Move [X31+264], X21
	010 Move [X31+272], X20
	011 Move [X31+280], X19
	012 Move X24, 0x5FE000
	013 Move W8, [X24+549]
	014 Move X19, X6
	015 Move W20, W5
	016 Move W21, W4
	017 Move X25, X3
	018 Move X26, X2
	019 Move W22, W1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x37A000
	026 Move X0, [X0+424]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+549], W8
	030 Move X0, [X23+928]
	031 Compare X0, 0
	032 JumpIfEqual {38}
	033 Move X8, [X0]
	034 Move X9, [X8+984]
	035 Move X1, [X8+992]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X24, X0
	038 Move X24, X31
	039 Move X8, [X26+16]
	040 Move V0, [X26]
	041 Move [X31+128], X8
	042 Move [X31+7], V0
	043 Move X8, [X25+16]
	044 Move V0, [X25]
	045 Move [X31+96], X8
	046 Move [X31+5], V0
	047 Compare X24, 0
	048 JumpIfEqual {110}
	049 Move V0, [X31+7]
	050 Move X8, [X31+128]
	051 Move V1, [X31+5]
	052 Move X9, [X31+96]
	053 Move [X31+3], V0
	054 Move [X31+64], X8
	055 Move [X31+1], V1
	056 Move [X31+32], X9
	057 Move X10, 0x37A000
	058 Move X8, [X24]
	059 Move X10, [X10+424]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move X1, [X10]
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move W2, 10
	071 Move X0, X24
	072 Call 0x1C5D788
	073 Move W9, [X10]
	074 Add W9, W9, 10
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move V0, [X31+3]
	078 Move X9, [X31+64]
	079 Move V1, [X31+1]
	080 Move X10, [X31+32]
	081 Move X8, [X0]
	082 Move [X31+11], V0
	083 Move [X31+192], X9
	084 Move [X31+9], V1
	085 Move [X31+160], X10
	086 Move X9, [X0+8]
	087 Add X3, X31, 176
	088 Add X4, X31, 144
	089 Move X0, X24
	090 Move X1, X23
	091 Move W2, W22
	092 Move W5, W21
	093 Move W6, W20
	094 Move X7, X19
	095 Move [X31], X9
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X20, [X31+272]
	098 Move X19, [X31+280]
	099 Move X22, [X31+256]
	100 Move X21, [X31+264]
	101 Move X24, [X31+240]
	102 Move X23, [X31+248]
	103 Move X26, [X31+224]
	104 Move X25, [X31+232]
	105 Move X29, [X31+208]
	106 Move X30, [X31+216]
	107 And W0, W0, 1
	108 Add X31, X31, 288
	109 Return X0
	110 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Rotate from, UnityEngine.UIElements.Rotate to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DEB57C LDUR X11, [X10 - 0x8]
	0x03DEB580 CMP X11, X1
	0x03DEB584 B.EQ 0x3DEB5F4
	0x03DEB588 SUBS X9, X9, 0x1
	0x03DEB58C ADD X10, X10, 0x10
	0x03DEB590 B.NE 0x3DEB57C
	0x03DEB594 B 0x3DEB3E0
	0x03DEB598 CBZ W9, 0x3DEB444
	0x03DEB59C LDR X10, [X8 + 0xB0]
	0x03DEB5A0 ADD X10, X10, 0x8
	0x03DEB5A4 LDUR X11, [X10 - 0x8]
	0x03DEB5A8 CMP X11, X1
	0x03DEB5AC B.EQ 0x3DEB5C0
	0x03DEB5B0 SUBS X9, X9, 0x1
	0x03DEB5B4 ADD X10, X10, 0x10
	0x03DEB5B8 B.NE 0x3DEB5A4
	0x03DEB5BC B 0x3DEB444
	0x03DEB5C0 LDR W9, [X10]
	0x03DEB5C4 ADD W9, W9, 0x13
	0x03DEB5C8 B 0x3DEB5FC
	0x03DEB5CC CBZ W9, 0x3DEB3E0
	0x03DEB5D0 LDR X10, [X8 + 0xB0]
	0x03DEB5D4 ADD X10, X10, 0x8
	0x03DEB5D8 LDUR X11, [X10 - 0x8]
	0x03DEB5DC CMP X11, X1
	0x03DEB5E0 B.EQ 0x3DEB5F4
	0x03DEB5E4 SUBS X9, X9, 0x1
	0x03DEB5E8 ADD X10, X10, 0x10
	0x03DEB5EC B.NE 0x3DEB5D8
	0x03DEB5F0 B 0x3DEB3E0
	0x03DEB5F4 LDR W9, [X10]
	0x03DEB5F8 ADD W9, W9, 0x2C
	0x03DEB5FC ADD X8, X8, W9, 0x4, SXTW
	0x03DEB600 ADD X0, X8, 0x138
	0x03DEB604 LDP X8, X1, [X0]
	0x03DEB608 MOV X0, X19
	0x03DEB60C BLR X8
	0x03DEB610 ADRP X8, 0x30C000
	0x03DEB614 LDR X8, [X8 + 0x138]
	0x03DEB618 ADD X0, X31, 0x8
	0x03DEB61C STR X31, [X31 + 0x8]
	0x03DEB620 LDR X1, [X8]
	0x03DEB624 BL 0x243AC08
	0x03DEB628 LDR X0, [X31 + 0x8]
	0x03DEB62C LDP X20, X19, [X31 + 0x30]
	0x03DEB630 LDP X22, X21, [X31 + 0x20]
	0x03DEB634 LDR X30, [X31 + 0x10]
	0x03DEB638 ADD X31, X31, 0x40
	0x03DEB63C RET
	0x03DEB640 BL 0x1C16F20
	0x03DEB644 SUB X31, X31, 0x40
	0x03DEB648 STP X20, X19, [X31 + 0x30]
	0x03DEB64C LDR X8, [X1]
	0x03DEB650 MOV X19, X1
	0x03DEB654 ADD X3, X31, 0x10
	0x03DEB658 MOV W4, W31
	0x03DEB65C STP X30, X8, [X31 + 0x20]
	0x03DEB660 LDR X9, [X1 + 0x8]
	0x03DEB664 LDR X8, [X2]
	0x03DEB668 MOVZ W1, 0x2
	0x03DEB66C MOVK W1, 0x50000
	0x03DEB670 MOV X20, X0
	0x03DEB674 STP X8, X9, [X31 + 0x10]
	0x03DEB678 LDR X8, [X2 + 0x8]
	0x03DEB67C ADD X2, X31, 0x28
	0x03DEB680 STR X8, [X31 + 0x8]
	0x03DEB684 BL 0x3DEAFC4
	0x03DEB688 MOV W8, W0
	0x03DEB68C MOV W0, W31
	0x03DEB690 TBZ X8, 0x0, 0x3DEB6CC
	0x03DEB694 MOVZ W1, 0x2
	0x03DEB698 ADD X2, X31, 0x18
	0x03DEB69C ADD X3, X31, 0x8
	0x03DEB6A0 MOVK W1, 0x50000
	0x03DEB6A4 MOVZ W4, 0x1
	0x03DEB6A8 MOV X0, X20
	0x03DEB6AC BL 0x3DEAFC4
	0x03DEB6B0 TBZ X0, 0x0, 0x3DEB6C8
	0x03DEB6B4 LDR X9, [X31 + 0x28]
	0x03DEB6B8 LDR X8, [X31 + 0x18]
	0x03DEB6BC MOVZ W0, 0x1
	0x03DEB6C0 STP X9, X8, [X19]
	0x03DEB6C4 B 0x3DEB6CC
	0x03DEB6C8 MOV W0, W31
	0x03DEB6CC LDP X20, X19, [X31 + 0x30]
	0x03DEB6D0 LDR X30, [X31 + 0x20]
	0x03DEB6D4 ADD X31, X31, 0x40
	0x03DEB6D8 RET
	0x03DEB6DC SUB X31, X31, 0x40
	0x03DEB6E0 STP X20, X19, [X31 + 0x30]
	0x03DEB6E4 LDR X8, [X1]
	0x03DEB6E8 MOV X19, X1
	0x03DEB6EC ADD X3, X31, 0x10
	0x03DEB6F0 MOV W4, W31
	0x03DEB6F4 STP X30, X8, [X31 + 0x20]
	0x03DEB6F8 LDR X9, [X1 + 0x8]
	0x03DEB6FC LDR X8, [X2]
	0x03DEB700 MOVZ W1, 0x3

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X26
	005 Move [X31+232], X25
	006 Move [X31+240], X24
	007 Move [X31+248], X23
	008 Move [X31+256], X22
	009 Move [X31+264], X21
	010 Move [X31+272], X20
	011 Move [X31+280], X19
	012 Move X24, 0x5FE000
	013 Move W8, [X24+550]
	014 Move X19, X6
	015 Move W20, W5
	016 Move W21, W4
	017 Move X25, X3
	018 Move X26, X2
	019 Move W22, W1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x37A000
	026 Move X0, [X0+424]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+550], W8
	030 Move X0, [X23+928]
	031 Compare X0, 0
	032 JumpIfEqual {38}
	033 Move X8, [X0]
	034 Move X9, [X8+984]
	035 Move X1, [X8+992]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X24, X0
	038 Move X24, X31
	039 Move X8, [X26+16]
	040 Move V0, [X26]
	041 Move [X31+128], X8
	042 Move [X31+7], V0
	043 Move X8, [X25+16]
	044 Move V0, [X25]
	045 Move [X31+96], X8
	046 Move [X31+5], V0
	047 Compare X24, 0
	048 JumpIfEqual {110}
	049 Move V0, [X31+7]
	050 Move X8, [X31+128]
	051 Move V1, [X31+5]
	052 Move X9, [X31+96]
	053 Move [X31+3], V0
	054 Move [X31+64], X8
	055 Move [X31+1], V1
	056 Move [X31+32], X9
	057 Move X10, 0x37A000
	058 Move X8, [X24]
	059 Move X10, [X10+424]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move X1, [X10]
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move W2, 11
	071 Move X0, X24
	072 Call 0x1C5D788
	073 Move W9, [X10]
	074 Add W9, W9, 11
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move V0, [X31+3]
	078 Move X9, [X31+64]
	079 Move V1, [X31+1]
	080 Move X10, [X31+32]
	081 Move X8, [X0]
	082 Move [X31+11], V0
	083 Move [X31+192], X9
	084 Move [X31+9], V1
	085 Move [X31+160], X10
	086 Move X9, [X0+8]
	087 Add X3, X31, 176
	088 Add X4, X31, 144
	089 Move X0, X24
	090 Move X1, X23
	091 Move W2, W22
	092 Move W5, W21
	093 Move W6, W20
	094 Move X7, X19
	095 Move [X31], X9
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X20, [X31+272]
	098 Move X19, [X31+280]
	099 Move X22, [X31+256]
	100 Move X21, [X31+264]
	101 Move X24, [X31+240]
	102 Move X23, [X31+248]
	103 Move X26, [X31+224]
	104 Move X25, [X31+232]
	105 Move X29, [X31+208]
	106 Move X30, [X31+216]
	107 And W0, W0, 1
	108 Add X31, X31, 288
	109 Return X0
	110 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.TransformOrigin from, UnityEngine.UIElements.TransformOrigin to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DEB704 MOVK W1, 0x50000
	0x03DEB708 MOV X20, X0
	0x03DEB70C STP X8, X9, [X31 + 0x10]
	0x03DEB710 LDR X8, [X2 + 0x8]
	0x03DEB714 ADD X2, X31, 0x28
	0x03DEB718 STR X8, [X31 + 0x8]
	0x03DEB71C BL 0x3DEAFC4
	0x03DEB720 MOV W8, W0
	0x03DEB724 MOV W0, W31
	0x03DEB728 TBZ X8, 0x0, 0x3DEB764
	0x03DEB72C MOVZ W1, 0x3
	0x03DEB730 ADD X2, X31, 0x18
	0x03DEB734 ADD X3, X31, 0x8
	0x03DEB738 MOVK W1, 0x50000
	0x03DEB73C MOVZ W4, 0x1
	0x03DEB740 MOV X0, X20
	0x03DEB744 BL 0x3DEAFC4
	0x03DEB748 TBZ X0, 0x0, 0x3DEB760
	0x03DEB74C LDR X9, [X31 + 0x28]
	0x03DEB750 LDR X8, [X31 + 0x18]
	0x03DEB754 MOVZ W0, 0x1
	0x03DEB758 STP X9, X8, [X19]
	0x03DEB75C B 0x3DEB764
	0x03DEB760 MOV W0, W31
	0x03DEB764 LDP X20, X19, [X31 + 0x30]
	0x03DEB768 LDR X30, [X31 + 0x20]
	0x03DEB76C ADD X31, X31, 0x40
	0x03DEB770 RET
	0x03DEB774 SUB X31, X31, 0x40
	0x03DEB778 STP X30, X21, [X31 + 0x20]
	0x03DEB77C STP X20, X19, [X31 + 0x30]
	0x03DEB780 MOV X19, X1
	0x03DEB784 MOV X20, X0
	0x03DEB788 MOV X0, X1
	0x03DEB78C MOV X1, X31
	0x03DEB790 MOV X21, X2
	0x03DEB794 BL 0x3CE9C74
	0x03DEB798 STR X0, [X31 + 0x18]
	0x03DEB79C MOV X0, X19
	0x03DEB7A0 MOV X1, X31
	0x03DEB7A4 BL 0x3CE9C88
	0x03DEB7A8 STR X0, [X31 + 0x10]
	0x03DEB7AC MOV X0, X21
	0x03DEB7B0 MOV X1, X31
	0x03DEB7B4 BL 0x3CE9C74
	0x03DEB7B8 STR X0, [X31 + 0x8]
	0x03DEB7BC MOV X0, X21
	0x03DEB7C0 MOV X1, X31
	0x03DEB7C4 BL 0x3CE9C88
	0x03DEB7C8 MOVZ W1, 0x5
	0x03DEB7CC STR X0, [X31]
	0x03DEB7D0 ADD X2, X31, 0x18
	0x03DEB7D4 ADD X3, X31, 0x8
	0x03DEB7D8 MOVK W1, 0x70000
	0x03DEB7DC MOV X0, X20
	0x03DEB7E0 MOV W4, W31
	0x03DEB7E4 BL 0x3DEAFC4
	0x03DEB7E8 MOV W8, W0
	0x03DEB7EC MOV W0, W31
	0x03DEB7F0 TBZ X8, 0x0, 0x3DEB840
	0x03DEB7F4 MOVZ W1, 0x5
	0x03DEB7F8 ADD X2, X31, 0x10
	0x03DEB7FC ADD X3, X31, 0x0
	0x03DEB800 MOVK W1, 0x70000
	0x03DEB804 MOVZ W4, 0x1
	0x03DEB808 MOV X0, X20
	0x03DEB80C BL 0x3DEAFC4
	0x03DEB810 TBZ X0, 0x0, 0x3DEB83C
	0x03DEB814 LDR X1, [X31 + 0x18]
	0x03DEB818 MOV X0, X19
	0x03DEB81C MOV X2, X31
	0x03DEB820 BL 0x3CE9C7C
	0x03DEB824 LDR X1, [X31 + 0x10]
	0x03DEB828 MOV X0, X19
	0x03DEB82C MOV X2, X31
	0x03DEB830 BL 0x3CE9C90
	0x03DEB834 MOVZ W0, 0x1
	0x03DEB838 B 0x3DEB840
	0x03DEB83C MOV W0, W31
	0x03DEB840 LDP X20, X19, [X31 + 0x30]
	0x03DEB844 LDP X30, X21, [X31 + 0x20]
	0x03DEB848 ADD X31, X31, 0x40
	0x03DEB84C RET
	0x03DEB850 LDRB W8, [X0 + 0x50]
	0x03DEB854 UBFM W0, W8, 0x7, 0x1F
	0x03DEB858 RET
	0x03DEB85C STR X30, [X31 - 0x10]!
	0x03DEB860 CBZ X0, 0x3DEB894
	0x03DEB864 LDR W8, [X0 + 0x50]
	0x03DEB868 ANDS W31, W1, 0x1
	0x03DEB86C MOVZ W9, 0x80
	0x03DEB870 CSEL W9, W9, W31, NE
	0x03DEB874 AND W8, W8, 0xFFFFFF7F
	0x03DEB878 ORR W8, W8, W9, 0x0
	0x03DEB87C STR W8, [X0 + 0x50]
	0x03DEB880 TBZ X1, 0x0, 0x3DEB88C
	0x03DEB884 LDR X30, [X31], #0x10
	0x03DEB888 B 0x3DEB898

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X26
	005 Move [X31+232], X25
	006 Move [X31+240], X24
	007 Move [X31+248], X23
	008 Move [X31+256], X22
	009 Move [X31+264], X21
	010 Move [X31+272], X20
	011 Move [X31+280], X19
	012 Move X24, 0x5FE000
	013 Move W8, [X24+551]
	014 Move X19, X6
	015 Move W20, W5
	016 Move W21, W4
	017 Move X25, X3
	018 Move X26, X2
	019 Move W22, W1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x37A000
	026 Move X0, [X0+424]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+551], W8
	030 Move X0, [X23+928]
	031 Compare X0, 0
	032 JumpIfEqual {38}
	033 Move X8, [X0]
	034 Move X9, [X8+984]
	035 Move X1, [X8+992]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X24, X0
	038 Move X24, X31
	039 Move W8, [X26+16]
	040 Move V0, [X26]
	041 Move [X31+128], W8
	042 Move [X31+7], V0
	043 Move W8, [X25+16]
	044 Move V0, [X25]
	045 Move [X31+96], W8
	046 Move [X31+5], V0
	047 Compare X24, 0
	048 JumpIfEqual {110}
	049 Move V0, [X31+7]
	050 Move W8, [X31+128]
	051 Move V1, [X31+5]
	052 Move W9, [X31+96]
	053 Move [X31+3], V0
	054 Move [X31+64], W8
	055 Move [X31+1], V1
	056 Move [X31+32], W9
	057 Move X10, 0x37A000
	058 Move X8, [X24]
	059 Move X10, [X10+424]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move X1, [X10]
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move W2, 9
	071 Move X0, X24
	072 Call 0x1C5D788
	073 Move W9, [X10]
	074 Add W9, W9, 9
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move V0, [X31+3]
	078 Move W9, [X31+64]
	079 Move V1, [X31+1]
	080 Move W10, [X31+32]
	081 Move X8, [X0]
	082 Move [X31+11], V0
	083 Move [X31+192], W9
	084 Move [X31+9], V1
	085 Move [X31+160], W10
	086 Move X9, [X0+8]
	087 Add X3, X31, 176
	088 Add X4, X31, 144
	089 Move X0, X24
	090 Move X1, X23
	091 Move W2, W22
	092 Move W5, W21
	093 Move W6, W20
	094 Move X7, X19
	095 Move [X31], X9
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X20, [X31+272]
	098 Move X19, [X31+280]
	099 Move X22, [X31+256]
	100 Move X21, [X31+264]
	101 Move X24, [X31+240]
	102 Move X23, [X31+248]
	103 Move X26, [X31+224]
	104 Move X25, [X31+232]
	105 Move X29, [X31+208]
	106 Move X30, [X31+216]
	107 And W0, W0, 1
	108 Add X31, X31, 288
	109 Return X0
	110 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.BackgroundPosition from, UnityEngine.UIElements.BackgroundPosition to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DEB88C LDR X30, [X31], #0x10
	0x03DEB890 RET
	0x03DEB894 BL 0x1C16F20
	0x03DEB898 STP X30, X21, [X31 - 0x20]!
	0x03DEB89C STP X20, X19, [X31 + 0x10]
	0x03DEB8A0 ADRP X20, 0x5FD000
	0x03DEB8A4 LDRB W8, [X20 + 0x26E]
	0x03DEB8A8 MOV X19, X0
	0x03DEB8AC TBNZ X8, 0x0, 0x3DEB8C4
	0x03DEB8B0 ADRP X0, 0x330000
	0x03DEB8B4 LDR X0, [X0 + 0x898]
	0x03DEB8B8 BL 0x1C16CF4
	0x03DEB8BC MOVZ W8, 0x1
	0x03DEB8C0 STRB W8, [X20 + 0x26E]
	0x03DEB8C4 LDR W8, [X19 + 0x35C]
	0x03DEB8C8 CBZ W8, 0x3DEB8D8
	0x03DEB8CC LDP X20, X19, [X31 + 0x10]
	0x03DEB8D0 LDP X30, X21, [X31], #0x20
	0x03DEB8D4 RET
	0x03DEB8D8 ADRP X20, 0x330000
	0x03DEB8DC LDR X20, [X20 + 0x898]
	0x03DEB8E0 LDR X0, [X20]
	0x03DEB8E4 LDR W8, [X0 + 0xE0]
	0x03DEB8E8 CBNZ W8, 0x3DEB8F4
	0x03DEB8EC BL 0x1C16DFC
	0x03DEB8F0 LDR X0, [X20]
	0x03DEB8F4 LDR X8, [X0 + 0xB8]
	0x03DEB8F8 LDR W9, [X8 + 0x40]!
	0x03DEB8FC ADD W9, W9, 0x1
	0x03DEB900 STR W9, [X8]
	0x03DEB904 LDR X21, [X19 + 0x360]
	0x03DEB908 STR W9, [X19 + 0x35C]
	0x03DEB90C CBZ X21, 0x3DEB8CC
	0x03DEB910 LDR W10, [X19 + 0x358]
	0x03DEB914 LDR W11, [X21 + 0x35C]
	0x03DEB918 CMP W10, W11
	0x03DEB91C B.NE 0x3DEB8CC
	0x03DEB920 LDR W10, [X0 + 0xE0]
	0x03DEB924 CBNZ W10, 0x3DEB938
	0x03DEB928 BL 0x1C16DFC
	0x03DEB92C LDR X8, [X20]
	0x03DEB930 LDR X8, [X8 + 0xB8]
	0x03DEB934 LDR W9, [X8 + 0x40]!
	0x03DEB938 ADD W9, W9, 0x1
	0x03DEB93C STR W9, [X8]
	0x03DEB940 STR W9, [X21 + 0x35C]
	0x03DEB944 B 0x3DEB8CC
	0x03DEB948 LDRB W8, [X0 + 0x51]
	0x03DEB94C UBFM W0, W8, 0x4, 0x4
	0x03DEB950 RET
	0x03DEB954 STR X30, [X31 - 0x10]!
	0x03DEB958 CBZ X0, 0x3DEB980
	0x03DEB95C LDR W8, [X0 + 0x50]
	0x03DEB960 ANDS W31, W1, 0x1
	0x03DEB964 MOVZ W9, 0x1000
	0x03DEB968 CSEL W9, W9, W31, NE
	0x03DEB96C AND W8, W8, 0xFFFFEFFF
	0x03DEB970 ORR W8, W8, W9, 0x0
	0x03DEB974 STR W8, [X0 + 0x50]
	0x03DEB978 LDR X30, [X31], #0x10
	0x03DEB97C RET
	0x03DEB980 BL 0x1C16F20
	0x03DEB984 LDR X0, [X0 + 0x58]
	0x03DEB988 RET
	0x03DEB98C STR X30, [X31 - 0x20]!
	0x03DEB990 STP X20, X19, [X31 + 0x10]
	0x03DEB994 MOV X19, X0
	0x03DEB998 LDR X0, [X0 + 0x58]
	0x03DEB99C MOV X2, X31
	0x03DEB9A0 MOV X20, X1
	0x03DEB9A4 BL 0x3226EF8
	0x03DEB9A8 TBZ X0, 0x0, 0x3DEB9E8
	0x03DEB9AC MOV X0, X20
	0x03DEB9B0 MOV X1, X31
	0x03DEB9B4 STR X20, [X19 + 0x58]
	0x03DEB9B8 BL 0x32277A8

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X30
	003 Move [X31+48], X28
	004 Move [X31+56], X27
	005 Move [X31+64], X26
	006 Move [X31+72], X25
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X27, 0x5FE000
	014 Move W8, [X27+552]
	015 Move W21, W7
	016 Move W19, W6
	017 Move X24, X5
	018 Move X20, X4
	019 Move X26, X3
	020 Move X22, X2
	021 Move W23, W1
	022 Move X25, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x37A000
	028 Move X0, [X0+424]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X27+552], W8
	032 Move X0, [X25+928]
	033 Compare X0, 0
	034 JumpIfEqual {91}
	035 Move X8, [X0]
	036 Move X9, [X8+984]
	037 Move X1, [X8+992]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Compare X0, 0
	040 JumpIfEqual {91}
	041 Move X10, 0x37A000
	042 Move X8, [X0]
	043 Move X10, [X10+424]
	044 Move X28, [X31+128]
	045 Move X27, X0
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move X1, [X10]
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move W2, 12
	057 Move X0, X27
	058 Call 0x1C5D788
	059 Move W9, [X10]
	060 Add W9, W9, 12
	061 Add X8, X8, W9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X9, [X0+8]
	065 And X6, X24, 0
	066 And X4, X26, 0
	067 Move X0, X27
	068 Move X1, X25
	069 Move W2, W23
	070 Move X3, X22
	071 Move X5, X20
	072 Move W7, W19
	073 Move [X31+8], X28
	074 Move [X31+16], X9
	075 Move [X31], W21
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X20, [X31+112]
	078 Move X19, [X31+120]
	079 Move X22, [X31+96]
	080 Move X21, [X31+104]
	081 Move X24, [X31+80]
	082 Move X23, [X31+88]
	083 Move X26, [X31+64]
	084 Move X25, [X31+72]
	085 Move X28, [X31+48]
	086 Move X27, [X31+56]
	087 Move X30, [X31+32]
	088 And W0, W0, 1
	089 Add X31, X31, 128
	090 Return X0
	091 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.BackgroundRepeat from, UnityEngine.UIElements.BackgroundRepeat to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DEB9BC TBNZ X0, 0x0, 0x3DEB9E8
	0x03DEB9C0 LDR X0, [X19 + 0x3A0]
	0x03DEB9C4 CBZ X0, 0x3DEB9E8
	0x03DEB9C8 LDR X8, [X0]
	0x03DEB9CC MOV X1, X19
	0x03DEB9D0 LDP X20, X19, [X31 + 0x10]
	0x03DEB9D4 MOVZ W2, 0x2
	0x03DEB9D8 LDR X4, [X8 + 0x338]
	0x03DEB9DC LDR X3, [X8 + 0x340]
	0x03DEB9E0 LDR X30, [X31], #0x20
	0x03DEB9E4 BR X4
	0x03DEB9E8 LDP X20, X19, [X31 + 0x10]
	0x03DEB9EC LDR X30, [X31], #0x20
	0x03DEB9F0 RET
	0x03DEB9F4 LDRB W8, [X0 + 0x51]
	0x03DEB9F8 UBFM W0, W8, 0x1, 0x1
	0x03DEB9FC RET
	0x03DEBA00 STR X30, [X31 - 0x10]!
	0x03DEBA04 CBZ X0, 0x3DEBA2C
	0x03DEBA08 LDR W8, [X0 + 0x50]
	0x03DEBA0C ANDS W31, W1, 0x1
	0x03DEBA10 MOVZ W9, 0x200
	0x03DEBA14 CSEL W9, W9, W31, NE
	0x03DEBA18 AND W8, W8, 0xFFFFFDFF
	0x03DEBA1C ORR W8, W8, W9, 0x0
	0x03DEBA20 STR W8, [X0 + 0x50]
	0x03DEBA24 LDR X30, [X31], #0x10
	0x03DEBA28 RET
	0x03DEBA2C BL 0x1C16F20
	0x03DEBA30 SUB X31, X31, 0x30
	0x03DEBA34 STP X30, X21, [X31 + 0x10]
	0x03DEBA38 STP X20, X19, [X31 + 0x20]
	0x03DEBA3C ADRP X21, 0x5FD000
	0x03DEBA40 ADRP X20, 0x330000
	0x03DEBA44 LDRB W8, [X21 + 0x231]
	0x03DEBA48 LDR X20, [X20 + 0x898]
	0x03DEBA4C MOV X19, X0
	0x03DEBA50 TBNZ X8, 0x0, 0x3DEBA68
	0x03DEBA54 ADRP X0, 0x330000
	0x03DEBA58 LDR X0, [X0 + 0x898]
	0x03DEBA5C BL 0x1C16CF4
	0x03DEBA60 MOVZ W8, 0x1
	0x03DEBA64 STRB W8, [X21 + 0x231]
	0x03DEBA68 LDR X0, [X20]
	0x03DEBA6C STR X31, [X31 + 0x8]
	0x03DEBA70 LDR W8, [X0 + 0xE0]
	0x03DEBA74 CBNZ W8, 0x3DEBA80
	0x03DEBA78 BL 0x1C16DFC
	0x03DEBA7C LDR X0, [X20]
	0x03DEBA80 LDR X8, [X0 + 0xB8]
	0x03DEBA84 ADD X2, X31, 0x8
	0x03DEBA88 MOV X0, X19
	0x03DEBA8C LDR W1, [X8 + 0x10]
	0x03DEBA90 BL 0x3DEBAA8
	0x03DEBA94 LDR X0, [X31 + 0x8]
	0x03DEBA98 LDP X20, X19, [X31 + 0x20]
	0x03DEBA9C LDP X30, X21, [X31 + 0x10]
	0x03DEBAA0 ADD X31, X31, 0x30
	0x03DEBAA4 RET
	0x03DEBAA8 STP X30, X23, [X31 - 0x30]!
	0x03DEBAAC STP X22, X21, [X31 + 0x10]
	0x03DEBAB0 STP X20, X19, [X31 + 0x20]
	0x03DEBAB4 ADRP X21, 0x5FD000
	0x03DEBAB8 LDRB W8, [X21 + 0x260]
	0x03DEBABC MOV X19, X2
	0x03DEBAC0 MOV X22, X1
	0x03DEBAC4 MOV X20, X0
	0x03DEBAC8 TBNZ X8, 0x0, 0x3DEBB04
	0x03DEBACC ADRP X0, 0x37E000
	0x03DEBAD0 LDR X0, [X0 + 0x8A8]
	0x03DEBAD4 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X26, 0x5FE000
	012 Move W8, [X26+553]
	013 Move X19, X6
	014 Move W20, W5
	015 Move W21, W4
	016 Move X22, X3
	017 Move X23, X2
	018 Move W24, W1
	019 Move X25, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x37A000
	025 Move X0, [X0+424]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X26+553], W8
	029 Move X0, [X25+928]
	030 Compare X0, 0
	031 JumpIfEqual {83}
	032 Move X8, [X0]
	033 Move X9, [X8+984]
	034 Move X1, [X8+992]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Compare X0, 0
	037 JumpIfEqual {83}
	038 Move X10, 0x37A000
	039 Move X8, [X0]
	040 Move X10, [X10+424]
	041 Move X26, X0
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move X1, [X10]
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move W2, 13
	053 Move X0, X26
	054 Call 0x1C5D788
	055 Move W9, [X10]
	056 Add W9, W9, 13
	057 Add X8, X8, W9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X9, [X0+8]
	061 Move X0, X26
	062 Move X1, X25
	063 Move W2, W24
	064 Move X3, X23
	065 Move X4, X22
	066 Move W5, W21
	067 Move W6, W20
	068 Move X7, X19
	069 Move [X31], X9
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X20, [X31+80]
	072 Move X19, [X31+88]
	073 Move X22, [X31+64]
	074 Move X21, [X31+72]
	075 Move X24, [X31+48]
	076 Move X23, [X31+56]
	077 Move X26, [X31+32]
	078 Move X25, [X31+40]
	079 Move X30, [X31+16]
	080 And W0, W0, 1
	081 Add X31, X31, 96
	082 Return X0
	083 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.BackgroundSize from, UnityEngine.UIElements.BackgroundSize to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DEBAD8 ADRP X0, 0x37E000
	0x03DEBADC LDR X0, [X0 + 0x8B0]
	0x03DEBAE0 BL 0x1C16CF4
	0x03DEBAE4 ADRP X0, 0x37E000
	0x03DEBAE8 LDR X0, [X0 + 0x8B8]
	0x03DEBAEC BL 0x1C16CF4
	0x03DEBAF0 ADRP X0, 0x37E000
	0x03DEBAF4 LDR X0, [X0 + 0x8C0]
	0x03DEBAF8 BL 0x1C16CF4
	0x03DEBAFC MOVZ W8, 0x1
	0x03DEBB00 STRB W8, [X21 + 0x260]
	0x03DEBB04 STR X31, [X19]
	0x03DEBB08 LDR X0, [X20 + 0x48]
	0x03DEBB0C CBZ X0, 0x3DEBB80
	0x03DEBB10 ADRP X23, 0x37E000
	0x03DEBB14 LDR X23, [X23 + 0x8C0]
	0x03DEBB18 MOV W21, W31
	0x03DEBB1C AND X22, X22, 0x0
	0x03DEBB20 LDR W8, [X0 + 0x18]
	0x03DEBB24 CMP W21, W8
	0x03DEBB28 B.GE 0x3DEBB5C
	0x03DEBB2C LDR X2, [X23]
	0x03DEBB30 MOV W1, W21
	0x03DEBB34 BL 0x2F09A1C
	0x03DEBB38 AND X0, X0, 0x0
	0x03DEBB3C MOV X1, X22
	0x03DEBB40 MOV X2, X31
	0x03DEBB44 BL 0x3C306C4
	0x03DEBB48 TBNZ X0, 0x0, 0x3DEBB64
	0x03DEBB4C LDR X0, [X20 + 0x48]
	0x03DEBB50 ADD W21, W21, 0x1
	0x03DEBB54 CBNZ X0, 0x3DEBB20
	0x03DEBB58 BL 0x1C16F20
	0x03DEBB5C MOV W0, W31
	0x03DEBB60 B 0x3DEBB80
	0x03DEBB64 LDR X0, [X20 + 0x48]
	0x03DEBB68 CBZ X0, 0x3DEBB58
	0x03DEBB6C LDR X2, [X23]
	0x03DEBB70 MOV W1, W21
	0x03DEBB74 BL 0x2F09A1C
	0x03DEBB78 STR X1, [X19]
	0x03DEBB7C MOVZ W0, 0x1
	0x03DEBB80 LDP X20, X19, [X31 + 0x20]
	0x03DEBB84 LDP X22, X21, [X31 + 0x10]
	0x03DEBB88 LDP X30, X23, [X31], #0x30
	0x03DEBB8C RET
	0x03DEBB90 STR X30, [X31 - 0x30]!
	0x03DEBB94 STP X22, X21, [X31 + 0x10]
	0x03DEBB98 STP X20, X19, [X31 + 0x20]
	0x03DEBB9C ADRP X22, 0x5FD000
	0x03DEBBA0 ADRP X21, 0x330000
	0x03DEBBA4 LDRB W8, [X22 + 0x232]
	0x03DEBBA8 LDR X21, [X21 + 0x898]
	0x03DEBBAC MOV X19, X1
	0x03DEBBB0 MOV X20, X0
	0x03DEBBB4 TBNZ X8, 0x0, 0x3DEBBCC
	0x03DEBBB8 ADRP X0, 0x330000
	0x03DEBBBC LDR X0, [X0 + 0x898]
	0x03DEBBC0 BL 0x1C16CF4
	0x03DEBBC4 MOVZ W8, 0x1
	0x03DEBBC8 STRB W8, [X22 + 0x232]
	0x03DEBBCC LDR X0, [X21]
	0x03DEBBD0 LDR W8, [X0 + 0xE0]
	0x03DEBBD4 CBNZ W8, 0x3DEBBE0
	0x03DEBBD8 BL 0x1C16DFC
	0x03DEBBDC LDR X0, [X21]
	0x03DEBBE0 LDR X8, [X0 + 0xB8]
	0x03DEBBE4 MOV X0, X20
	0x03DEBBE8 MOV X2, X19
	0x03DEBBEC LDP X20, X19, [X31 + 0x20]
	0x03DEBBF0 LDR W1, [X8 + 0x10]
	0x03DEBBF4 LDP X22, X21, [X31 + 0x10]
	0x03DEBBF8 LDR X30, [X31], #0x30
	0x03DEBBFC B 0x3DEBC00
	0x03DEBC00 SUB X31, X31, 0x40
	0x03DEBC04 STP X30, X23, [X31 + 0x10]
	0x03DEBC08 STP X22, X21, [X31 + 0x20]
	0x03DEBC0C STP X20, X19, [X31 + 0x30]
	0x03DEBC10 ADRP X23, 0x5FD000
	0x03DEBC14 ADRP X22, 0x37E000
	0x03DEBC18 LDRB W8, [X23 + 0x262]
	0x03DEBC1C LDR X22, [X22 + 0x8C8]
	0x03DEBC20 MOV X20, X2
	0x03DEBC24 MOV X21, X1
	0x03DEBC28 MOV X19, X0
	0x03DEBC2C TBNZ X8, 0x0, 0x3DEBCB0
	0x03DEBC30 ADRP X0, 0x37E000
	0x03DEBC34 LDR X0, [X0 + 0x8C8]
	0x03DEBC38 BL 0x1C16CF4
	0x03DEBC3C ADRP X0, 0x37E000
	0x03DEBC40 LDR X0, [X0 + 0x8A8]
	0x03DEBC44 BL 0x1C16CF4
	0x03DEBC48 ADRP X0, 0x37E000
	0x03DEBC4C LDR X0, [X0 + 0x8D0]
	0x03DEBC50 BL 0x1C16CF4
	0x03DEBC54 ADRP X0, 0x37E000
	0x03DEBC58 LDR X0, [X0 + 0x8D8]
	0x03DEBC5C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X26
	005 Move [X31+232], X25
	006 Move [X31+240], X24
	007 Move [X31+248], X23
	008 Move [X31+256], X22
	009 Move [X31+264], X21
	010 Move [X31+272], X20
	011 Move [X31+280], X19
	012 Move X24, 0x5FE000
	013 Move W8, [X24+554]
	014 Move X19, X6
	015 Move W20, W5
	016 Move W21, W4
	017 Move X25, X3
	018 Move X26, X2
	019 Move W22, W1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x37A000
	026 Move X0, [X0+424]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+554], W8
	030 Move X0, [X23+928]
	031 Compare X0, 0
	032 JumpIfEqual {38}
	033 Move X8, [X0]
	034 Move X9, [X8+984]
	035 Move X1, [X8+992]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X24, X0
	038 Move X24, X31
	039 Move W8, [X26+16]
	040 Move V0, [X26]
	041 Move [X31+128], W8
	042 Move [X31+7], V0
	043 Move W8, [X25+16]
	044 Move V0, [X25]
	045 Move [X31+96], W8
	046 Move [X31+5], V0
	047 Compare X24, 0
	048 JumpIfEqual {110}
	049 Move V0, [X31+7]
	050 Move W8, [X31+128]
	051 Move V1, [X31+5]
	052 Move W9, [X31+96]
	053 Move [X31+3], V0
	054 Move [X31+64], W8
	055 Move [X31+1], V1
	056 Move [X31+32], W9
	057 Move X10, 0x37A000
	058 Move X8, [X24]
	059 Move X10, [X10+424]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move X1, [X10]
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move W2, 14
	071 Move X0, X24
	072 Call 0x1C5D788
	073 Move W9, [X10]
	074 Add W9, W9, 14
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move V0, [X31+3]
	078 Move W9, [X31+64]
	079 Move V1, [X31+1]
	080 Move W10, [X31+32]
	081 Move X8, [X0]
	082 Move [X31+11], V0
	083 Move [X31+192], W9
	084 Move [X31+9], V1
	085 Move [X31+160], W10
	086 Move X9, [X0+8]
	087 Add X3, X31, 176
	088 Add X4, X31, 144
	089 Move X0, X24
	090 Move X1, X23
	091 Move W2, W22
	092 Move W5, W21
	093 Move W6, W20
	094 Move X7, X19
	095 Move [X31], X9
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X20, [X31+272]
	098 Move X19, [X31+280]
	099 Move X22, [X31+256]
	100 Move X21, [X31+264]
	101 Move X24, [X31+240]
	102 Move X23, [X31+248]
	103 Move X26, [X31+224]
	104 Move X25, [X31+232]
	105 Move X29, [X31+208]
	106 Move X30, [X31+216]
	107 And W0, W0, 1
	108 Add X31, X31, 288
	109 Return X0
	110 Call 0x1C17F20

Method: System.Void UnityEngine.UIElements.IStylePropertyAnimations.CancelAnimation(UnityEngine.UIElements.StyleSheets.StylePropertyId id)

Disassembly:
	0x03DEBC60 ADRP X0, 0x37E000
	0x03DEBC64 LDR X0, [X0 + 0x8E0]
	0x03DEBC68 BL 0x1C16CF4
	0x03DEBC6C ADRP X0, 0x37E000
	0x03DEBC70 LDR X0, [X0 + 0x8B8]
	0x03DEBC74 BL 0x1C16CF4
	0x03DEBC78 ADRP X0, 0x37E000
	0x03DEBC7C LDR X0, [X0 + 0x8C0]
	0x03DEBC80 BL 0x1C16CF4
	0x03DEBC84 ADRP X0, 0x37E000
	0x03DEBC88 LDR X0, [X0 + 0x8E8]
	0x03DEBC8C BL 0x1C16CF4
	0x03DEBC90 ADRP X0, 0x37E000
	0x03DEBC94 LDR X0, [X0 + 0x8F0]
	0x03DEBC98 BL 0x1C16CF4
	0x03DEBC9C ADRP X0, 0x37E000
	0x03DEBCA0 LDR X0, [X0 + 0x8F8]
	0x03DEBCA4 BL 0x1C16CF4
	0x03DEBCA8 MOVZ W8, 0x1
	0x03DEBCAC STRB W8, [X23 + 0x262]
	0x03DEBCB0 LDR X3, [X22]
	0x03DEBCB4 AND X21, X21, 0x0
	0x03DEBCB8 ADD X0, X31, 0x0
	0x03DEBCBC MOV X1, X21
	0x03DEBCC0 MOV X2, X20
	0x03DEBCC4 STP X31, X31, [X31]
	0x03DEBCC8 BL 0x2EE41D8
	0x03DEBCCC LDR X0, [X19 + 0x48]
	0x03DEBCD0 CBZ X0, 0x3DEBD1C
	0x03DEBCD4 ADRP X22, 0x37E000
	0x03DEBCD8 LDR X22, [X22 + 0x8C0]
	0x03DEBCDC MOV W20, W31
	0x03DEBCE0 LDR W8, [X0 + 0x18]
	0x03DEBCE4 CMP W20, W8
	0x03DEBCE8 B.GE 0x3DEBD54
	0x03DEBCEC LDR X2, [X22]
	0x03DEBCF0 MOV W1, W20
	0x03DEBCF4 BL 0x2F09A1C
	0x03DEBCF8 AND X0, X0, 0x0
	0x03DEBCFC MOV X1, X21
	0x03DEBD00 MOV X2, X31
	0x03DEBD04 BL 0x3C306C4
	0x03DEBD08 TBNZ X0, 0x0, 0x3DEBE0C
	0x03DEBD0C LDR X0, [X19 + 0x48]
	0x03DEBD10 ADD W20, W20, 0x1
	0x03DEBD14 CBNZ X0, 0x3DEBCE0
	0x03DEBD18 BL 0x1C16F20
	0x03DEBD1C ADRP X8, 0x37E000
	0x03DEBD20 LDR X8, [X8 + 0x8F8]
	0x03DEBD24 LDR X0, [X8]
	0x03DEBD28 BL 0x1C16F10
	0x03DEBD2C ADRP X8, 0x37E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5FE000
	006 Move W8, [X21+555]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x37A000
	014 Move X0, [X0+424]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+555], W8
	018 Move X0, [X20+928]
	019 Compare X0, 0
	020 JumpIfEqual {44}
	021 Move X8, [X0]
	022 Move X9, [X8+984]
	023 Move X1, [X8+992]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Compare X0, 0
	026 JumpIfEqual {44}
	027 Move X10, 0x37A000
	028 Move X8, [X0]
	029 Move X10, [X10+424]
	030 Move X21, X0
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 17
	042 Move X0, X21
	043 Call 0x1C5D788
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 
	049 Move W9, [X10]
	050 Add W9, W9, 17
	051 Add X8, X8, W9
	052 Add X0, X8, 312
	053 Move X4, [X0]
	054 Move X3, [X0+8]
	055 Move X1, X20
	056 Move W2, W19
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X0, X21
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 CallNoReturn X4

Method: System.Void UnityEngine.UIElements.IStylePropertyAnimations.CancelAllAnimations()

Disassembly:
	0x03DEBD30 LDR X8, [X8 + 0x8D8]
	0x03DEBD34 MOVZ W1, 0x1
	0x03DEBD38 MOV X20, X0
	0x03DEBD3C LDR X2, [X8]
	0x03DEBD40 BL 0x2F09580
	0x03DEBD44 STR X20, [X19 + 0x48]
	0x03DEBD48 CBZ X20, 0x3DEBD18
	0x03DEBD4C LDP X1, X2, [X31]
	0x03DEBD50 B 0x3DEBDB0
	0x03DEBD54 ADRP X21, 0x37E000
	0x03DEBD58 LDR X21, [X21 + 0x8E0]
	0x03DEBD5C LDR X1, [X21]
	0x03DEBD60 BL 0x2F0987C
	0x03DEBD64 LDR X20, [X19 + 0x48]
	0x03DEBD68 CBZ X20, 0x3DEBD18
	0x03DEBD6C LDR W8, [X20 + 0x18]
	0x03DEBD70 CMP W0, W8
	0x03DEBD74 B.NE 0x3DEBDA4
	0x03DEBD78 LDR X1, [X21]
	0x03DEBD7C MOV X0, X20
	0x03DEBD80 BL 0x2F0987C
	0x03DEBD84 ADRP X8, 0x37E000
	0x03DEBD88 LDR X8, [X8 + 0x8E8]
	0x03DEBD8C ADD W1, W0, 0x1
	0x03DEBD90 MOV X0, X20
	0x03DEBD94 LDR X2, [X8]
	0x03DEBD98 BL 0x2F09898
	0x03DEBD9C LDR X20, [X19 + 0x48]
	0x03DEBDA0 CBZ X20, 0x3DEBD18
	0x03DEBDA4 ADD X8, X31, 0x0
	0x03DEBDA8 LDR X1, [X31]
	0x03DEBDAC LDR X2, [X8 + 0x8]!
	0x03DEBDB0 ADRP X9, 0x37E000
	0x03DEBDB4 LDR X9, [X9 + 0x8D0]
	0x03DEBDB8 LDR W10, [X20 + 0x1C]
	0x03DEBDBC LDR X8, [X20 + 0x10]
	0x03DEBDC0 LDR X9, [X9]
	0x03DEBDC4 ADD W10, W10, 0x1
	0x03DEBDC8 STR W10, [X20 + 0x1C]
	0x03DEBDCC CBZ X8, 0x3DEBD18
	0x03DEBDD0 LDRSW X10, [X20 + 0x18]
	0x03DEBDD4 LDR W11, [X8 + 0x18]
	0x03DEBDD8 CMP W10, W11
	0x03DEBDDC B.CS 0x3DEBDF4
	0x03DEBDE0 ADD W9, W10, 0x1
	0x03DEBDE4 ADD X8, X8, X10, 0x4, LSL
	0x03DEBDE8 STR W9, [X20 + 0x18]
	0x03DEBDEC STP X1, X2, [X8 + 0x20]
	0x03DEBDF0 B 0x3DEBE2C
	0x03DEBDF4 LDR X8, [X9 + 0x20]
	0x03DEBDF8 MOV X0, X20
	0x03DEBDFC LDR X8, [X8 + 0xC0]
	0x03DEBE00 LDR X3, [X8 + 0x70]
	0x03DEBE04 BL 0x2F09D20
	0x03DEBE08 B 0x3DEBE2C
	0x03DEBE0C LDR X0, [X19 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5FE000
	005 Move W8, [X20+556]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x37A000
	012 Move X0, [X0+424]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+556], W8
	016 Move X0, X19
	017 Call VisualElement.get_hasRunningAnimations, X0
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {28}
	022 Move X0, X19
	023 Call VisualElement.get_hasCompletedAnimations, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {54}
	028 Move X0, [X19+928]
	029 Compare X0, 0
	030 JumpIfEqual {54}
	031 Move X8, [X0]
	032 Move X9, [X8+984]
	033 Move X1, [X8+992]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Compare X0, 0
	036 JumpIfEqual {54}
	037 Move X10, 0x37A000
	038 Move X8, [X0]
	039 Move X10, [X10+424]
	040 Move X20, X0
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 16
	052 Move X0, X20
	053 Call 0x1C5D788
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Return 
	058 Move W9, [X10]
	059 Add W9, W9, 16
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X3, [X0]
	063 Move X2, [X0+8]
	064 Move X0, X20
	065 Move X1, X19
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 CallNoReturn X3

Method: System.Void UnityEngine.UIElements.IStylePropertyAnimations.UpdateAnimation(UnityEngine.UIElements.StyleSheets.StylePropertyId id)

Disassembly:
	0x03DEBE10 CBZ X0, 0x3DEBD18
	0x03DEBE14 ADRP X8, 0x37E000
	0x03DEBE18 LDP X2, X3, [X31]
	0x03DEBE1C LDR X8, [X8 + 0x8F0]
	0x03DEBE20 MOV W1, W20
	0x03DEBE24 LDR X4, [X8]
	0x03DEBE28 BL 0x2F09A74
	0x03DEBE2C LDP X20, X19, [X31 + 0x30]
	0x03DEBE30 LDP X22, X21, [X31 + 0x20]
	0x03DEBE34 LDP X30, X23, [X31 + 0x10]
	0x03DEBE38 ADD X31, X31, 0x40
	0x03DEBE3C RET
	0x03DEBE40 STR X30, [X31 - 0x20]!
	0x03DEBE44 STP X20, X19, [X31 + 0x10]
	0x03DEBE48 ADRP X20, 0x5FD000
	0x03DEBE4C LDRB W8, [X20 + 0x233]
	0x03DEBE50 MOV X19, X0
	0x03DEBE54 TBNZ X8, 0x0, 0x3DEBE6C
	0x03DEBE58 ADRP X0, 0x331000
	0x03DEBE5C LDR X0, [X0 + 0x120]
	0x03DEBE60 BL 0x1C16CF4
	0x03DEBE64 MOVZ W8, 0x1
	0x03DEBE68 STRB W8, [X20 + 0x233]
	0x03DEBE6C LDR X8, [X19 + 0x378]
	0x03DEBE70 ADD X0, X31, 0x8
	0x03DEBE74 MOV X1, X31
	0x03DEBE78 STR X8, [X31 + 0x8]
	0x03DEBE7C BL 0x3DF88DC
	0x03DEBE80 CBZ X0, 0x3DEBEAC
	0x03DEBE84 LDRB W8, [X0 + 0x50]
	0x03DEBE88 TBNZ X8, 0x7, 0x3DEBE98
	0x03DEBE8C LDR X0, [X0 + 0x390]
	0x03DEBE90 CBNZ X0, 0x3DEBE84
	0x03DEBE94 B 0x3DEBEAC
	0x03DEBE98 LDR X8, [X0]
	0x03DEBE9C LDR X9, [X8 + 0x238]
	0x03DEBEA0 LDR X1, [X8 + 0x240]
	0x03DEBEA4 BLR X9
	0x03DEBEA8 TBZ X0, 0x0, 0x3DEBF40
	0x03DEBEAC MOV X0, X19
	0x03DEBEB0 BL 0x3DEBF60
	0x03DEBEB4 TBZ X0, 0x0, 0x3DEBF40
	0x03DEBEB8 CBZ X19, 0x3DEBF54
	0x03DEBEBC ADRP X10, 0x331000
	0x03DEBEC0 LDR X8, [X19]
	0x03DEBEC4 LDR X10, [X10 + 0x120]
	0x03DEBEC8 LDRH W9, [X8 + 0x12E]
	0x03DEBECC LDR X1, [X10]
	0x03DEBED0 CBZ X9, 0x3DEBEF4
	0x03DEBED4 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5FE000
	006 Move W8, [X21+557]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x37A000
	014 Move X0, [X0+424]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+557], W8
	018 Move X0, [X20+928]
	019 Compare X0, 0
	020 JumpIfEqual {58}
	021 Move X8, [X0]
	022 Move X9, [X8+984]
	023 Move X1, [X8+992]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Compare X0, 0
	026 JumpIfEqual {58}
	027 Move X10, 0x37A000
	028 Move X8, [X0]
	029 Move X10, [X10+424]
	030 Move X21, X0
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 18
	042 Move X0, X21
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 18
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X4, [X0]
	049 Move X3, [X0+8]
	050 Move X1, X20
	051 Move W2, W19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X0, X21
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 CallNoReturn X4
	058 Call 0x1C17F20

Method: System.Void UnityEngine.UIElements.IStylePropertyAnimations.GetAllAnimations(System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheets.StylePropertyId> outPropertyIds)

Disassembly:
	0x03DEBED8 ADD X10, X10, 0x8
	0x03DEBEDC LDUR X11, [X10 - 0x8]
	0x03DEBEE0 CMP X11, X1
	0x03DEBEE4 B.EQ 0x3DEBF04
	0x03DEBEE8 SUBS X9, X9, 0x1
	0x03DEBEEC ADD X10, X10, 0x10
	0x03DEBEF0 B.NE 0x3DEBEDC
	0x03DEBEF4 MOVZ W2, 0xF
	0x03DEBEF8 MOV X0, X19
	0x03DEBEFC BL 0x1C5C788
	0x03DEBF00 B 0x3DEBF14
	0x03DEBF04 LDR W9, [X10]
	0x03DEBF08 ADD W9, W9, 0xF
	0x03DEBF0C ADD X8, X8, W9, 0x4, SXTW
	0x03DEBF10 ADD X0, X8, 0x138
	0x03DEBF14 LDP X8, X1, [X0]
	0x03DEBF18 MOV X0, X19
	0x03DEBF1C BLR X8
	0x03DEBF20 CMP W0, 0x1
	0x03DEBF24 B.EQ 0x3DEBF40
	0x03DEBF28 LDRB W8, [X19 + 0x2AC]
	0x03DEBF2C TBNZ X8, 0x5, 0x3DEBF40
	0x03DEBF30 MOV X0, X19
	0x03DEBF34 MOV X1, X31
	0x03DEBF38 BL 0x3DAEE74
	0x03DEBF3C B 0x3DEBF44
	0x03DEBF40 MOV W0, W31
	0x03DEBF44 LDP X20, X19, [X31 + 0x10]
	0x03DEBF48 AND W0, W0, 0x1
	0x03DEBF4C LDR X30, [X31], #0x20
	0x03DEBF50 RET
	0x03DEBF54 BL 0x1C16F20
	0x03DEBF58 LDR X0, [X0 + 0x390]
	0x03DEBF5C RET
	0x03DEBF60 STR X30, [X31 - 0x20]!
	0x03DEBF64 STP X20, X19, [X31 + 0x10]
	0x03DEBF68 ADRP X20, 0x5FD000
	0x03DEBF6C LDRB W8, [X20 + 0x24F]
	0x03DEBF70 MOV X19, X0
	0x03DEBF74 TBNZ X8, 0x0, 0x3DEBF8C
	0x03DEBF78 ADRP X0, 0x331000
	0x03DEBF7C LDR X0, [X0 + 0x120]
	0x03DEBF80 BL 0x1C16CF4
	0x03DEBF84 MOVZ W8, 0x1
	0x03DEBF88 STRB W8, [X20 + 0x24F]
	0x03DEBF8C CBZ X19, 0x3DEC008
	0x03DEBF90 ADRP X10, 0x331000
	0x03DEBF94 LDR X8, [X19]
	0x03DEBF98 LDR X10, [X10 + 0x120]
	0x03DEBF9C LDRH W9, [X8 + 0x12E]
	0x03DEBFA0 LDR X1, [X10]
	0x03DEBFA4 CBZ X9, 0x3DEBFC8
	0x03DEBFA8 LDR X10, [X8 + 0xB0]
	0x03DEBFAC ADD X10, X10, 0x8
	0x03DEBFB0 LDUR X11, [X10 - 0x8]
	0x03DEBFB4 CMP X11, X1
	0x03DEBFB8 B.EQ 0x3DEBFD8
	0x03DEBFBC SUBS X9, X9, 0x1
	0x03DEBFC0 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5FE000
	006 Move W8, [X21+558]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x37A000
	014 Move X0, [X0+424]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+558], W8
	018 Move X0, X20
	019 Call VisualElement.get_hasRunningAnimations, X0
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {30}
	024 Move X0, X20
	025 Call VisualElement.get_hasCompletedAnimations, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {56}
	030 Move X0, [X20+928]
	031 Compare X0, 0
	032 JumpIfEqual {75}
	033 Move X8, [X0]
	034 Move X9, [X8+984]
	035 Move X1, [X8+992]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Compare X0, 0
	038 JumpIfEqual {75}
	039 Move X10, 0x37A000
	040 Move X8, [X0]
	041 Move X10, [X10+424]
	042 Move X21, X0
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 19
	054 Move X0, X21
	055 Call 0x1C5D788
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return 
	061 Move W9, [X10]
	062 Add W9, W9, 19
	063 Add X8, X8, W9
	064 Add X0, X8, 312
	065 Move X4, [X0]
	066 Move X3, [X0+8]
	067 Move X1, X20
	068 Move X2, X19
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X0, X21
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 CallNoReturn X4
	075 Call 0x1C17F20

Method: System.Boolean TryConvertLengthUnits(UnityEngine.UIElements.StyleSheets.StylePropertyId id, ref UnityEngine.UIElements.Length from, ref UnityEngine.UIElements.Length to, System.Int32 subPropertyIndex = 0)

Disassembly:
	0x03DEBFC4 B.NE 0x3DEBFB0
	0x03DEBFC8 MOVZ W2, 0x2B
	0x03DEBFCC MOV X0, X19
	0x03DEBFD0 BL 0x1C5C788
	0x03DEBFD4 B 0x3DEBFE8
	0x03DEBFD8 LDR W9, [X10]
	0x03DEBFDC ADD W9, W9, 0x2B
	0x03DEBFE0 ADD X8, X8, W9, 0x4, SXTW
	0x03DEBFE4 ADD X0, X8, 0x138
	0x03DEBFE8 LDP X8, X1, [X0]
	0x03DEBFEC MOV X0, X19
	0x03DEBFF0 BLR X8
	0x03DEBFF4 LDP X20, X19, [X31 + 0x10]
	0x03DEBFF8 CMP W0, 0x0
	0x03DEBFFC CSET W0, EQ
	0x03DEC000 LDR X30, [X31], #0x20
	0x03DEC004 RET
	0x03DEC008 BL 0x1C16F20
	0x03DEC00C LDRB W8, [X0 + 0x2AC]
	0x03DEC010 ANDS W31, W8, 0x20
	0x03DEC014 CSET W0, EQ
	0x03DEC018 RET
	0x03DEC01C STR X30, [X31 - 0x20]!
	0x03DEC020 STP X20, X19, [X31 + 0x10]
	0x03DEC024 ADRP X20, 0x5FC000
	0x03DEC028 LDRB W8, [X20 + 0x234]
	0x03DEC02C MOV X19, X0
	0x03DEC030 TBNZ X8, 0x0, 0x3DEC048
	0x03DEC034 ADRP X0, 0x330000
	0x03DEC038 LDR X0, [X0 + 0xE80]
	0x03DEC03C BL 0x1C16CF4
	0x03DEC040 MOVZ W8, 0x1
	0x03DEC044 STRB W8, [X20 + 0x234]
	0x03DEC048 LDR X19, [X19 + 0x3A0]
	0x03DEC04C CBZ X19, 0x3DEC098
	0x03DEC050 ADRP X10, 0x330000
	0x03DEC054 LDR X8, [X19]
	0x03DEC058 LDR X10, [X10 + 0xE80]
	0x03DEC05C LDRH W9, [X8 + 0x12E]
	0x03DEC060 LDR X1, [X10]
	0x03DEC064 CBZ X9, 0x3DEC088
	0x03DEC068 LDR X10, [X8 + 0xB0]
	0x03DEC06C ADD X10, X10, 0x8
	0x03DEC070 LDUR X11, [X10 - 0x8]
	0x03DEC074 CMP X11, X1
	0x03DEC078 B.EQ 0x3DEC0A8
	0x03DEC07C SUBS X9, X9, 0x1
	0x03DEC080 ADD X10, X10, 0x10
	0x03DEC084 B.NE 0x3DEC070
	0x03DEC088 MOVZ W2, 0x3
	0x03DEC08C MOV X0, X19
	0x03DEC090 BL 0x1C5C788
	0x03DEC094 B 0x3DEC0B8
	0x03DEC098 LDP X20, X19, [X31 + 0x10]
	0x03DEC09C MOV X0, X31
	0x03DEC0A0 LDR X30, [X31], #0x20
	0x03DEC0A4 RET
	0x03DEC0A8 LDR W9, [X10]
	0x03DEC0AC ADD W9, W9, 0x3
	0x03DEC0B0 ADD X8, X8, W9, 0x4, SXTW
	0x03DEC0B4 ADD X0, X8, 0x138
	0x03DEC0B8 LDP X2, X1, [X0]
	0x03DEC0BC MOV X0, X19
	0x03DEC0C0 LDP X20, X19, [X31 + 0x10]
	0x03DEC0C4 LDR X30, [X31], #0x20
	0x03DEC0C8 BR X2
	0x03DEC0CC LDR X0, [X0 + 0x3A0]
	0x03DEC0D0 RET
	0x03DEC0D4 LDR W8, [X0 + 0x60]
	0x03DEC0D8 UBFM W9, W8, 0x1, 0x1F
	0x03DEC0DC RBIT W8, W8
	0x03DEC0E0 AND W10, W9, 0x4
	0x03DEC0E4 BFM W10, W8, 0x1E, 0x1F
	0x03DEC0E8 AND W8, W9, 0x8
	0x03DEC0EC ORR W0, W10, W8, 0x0
	0x03DEC0F0 RET
	0x03DEC0F4 LDR W0, [X0 + 0x60]
	0x03DEC0F8 RET
	0x03DEC0FC STR X30, [X31 - 0x30]!
	0x03DEC100 STP X22, X21, [X31 + 0x10]
	0x03DEC104 STP X20, X19, [X31 + 0x20]
	0x03DEC108 MOV W19, W1
	0x03DEC10C LDR W1, [X0 + 0x60]
	0x03DEC110 MOV X20, X0
	0x03DEC114 UBFM W21, W19, 0x3, 0x1F
	0x03DEC118 UBFM W22, W19, 0x2, 0x1F
	0x03DEC11C BFM W1, W19, 0x1, 0x1
	0x03DEC120 BL 0x3DEC160
	0x03DEC124 LDR W1, [X20 + 0x60]
	0x03DEC128 MOV X0, X20
	0x03DEC12C BFM W1, W19, 0x1F, 0x0
	0x03DEC130 BL 0x3DEC160
	0x03DEC134 LDR W1, [X20 + 0x60]
	0x03DEC138 MOV X0, X20
	0x03DEC13C BFM W1, W22, 0x1D, 0x0
	0x03DEC140 BL 0x3DEC160
	0x03DEC144 LDR W1, [X20 + 0x60]
	0x03DEC148 MOV X0, X20
	0x03DEC14C LDP X20, X19, [X31 + 0x20]
	0x03DEC150 BFM W1, W21, 0x1C, 0x0
	0x03DEC154 LDP X22, X21, [X31 + 0x10]
	0x03DEC158 LDR X30, [X31], #0x30
	0x03DEC15C B 0x3DEC160
	0x03DEC160 LDR W9, [X0 + 0x60]
	0x03DEC164 AND W10, W1, 0xFFFFFC1F
	0x03DEC168 AND W11, W9, 0xFFFFFC1F
	0x03DEC16C EOR W11, W11, W10, 0x0
	0x03DEC170 CBZ W11, 0x3DEC1A8
	0x03DEC174 MOV X8, X0
	0x03DEC178 LDR X0, [X0 + 0x3A0]
	0x03DEC17C AND W9, W9, 0x3E0
	0x03DEC180 ORR W9, W9, W10, 0x0
	0x03DEC184 ORR W9, W9, W11, 0x5
	0x03DEC188 STR W9, [X8 + 0x60]
	0x03DEC18C CBZ X0, 0x3DEC1A8
	0x03DEC190 LDR X9, [X0]
	0x03DEC194 MOVZ W2, 0x4000
	0x03DEC198 MOV X1, X8
	0x03DEC19C LDR X4, [X9 + 0x338]
	0x03DEC1A0 LDR X3, [X9 + 0x340]
	0x03DEC1A4 BR X4
	0x03DEC1A8 RET
	0x03DEC1AC LDR W8, [X0 + 0x60]
	0x03DEC1B0 AND W8, W8, 0xFFFFFC1F
	0x03DEC1B4 STR W8, [X0 + 0x60]
	0x03DEC1B8 RET
	0x03DEC1BC RET
	0x03DEC1C0 STR X30, [X31 - 0x20]!
	0x03DEC1C4 STP X20, X19, [X31 + 0x10]
	0x03DEC1C8 ADRP X20, 0x5FC000
	0x03DEC1CC LDRB W8, [X20 + 0x235]
	0x03DEC1D0 MOV X19, X0
	0x03DEC1D4 TBNZ X8, 0x0, 0x3DEC1EC
	0x03DEC1D8 ADRP X0, 0x330000
	0x03DEC1DC LDR X0, [X0 + 0x120]
	0x03DEC1E0 BL 0x1C16CF4
	0x03DEC1E4 MOVZ W8, 0x1
	0x03DEC1E8 STRB W8, [X20 + 0x235]
	0x03DEC1EC CBZ X19, 0x3DEC25C
	0x03DEC1F0 ADRP X10, 0x330000
	0x03DEC1F4 LDR X8, [X19]
	0x03DEC1F8 LDR X10, [X10 + 0x120]
	0x03DEC1FC LDRH W9, [X8 + 0x12E]
	0x03DEC200 LDR X1, [X10]
	0x03DEC204 CBZ X9, 0x3DEC228
	0x03DEC208 LDR X10, [X8 + 0xB0]
	0x03DEC20C ADD X10, X10, 0x8
	0x03DEC210 LDUR X11, [X10 - 0x8]
	0x03DEC214 CMP X11, X1
	0x03DEC218 B.EQ 0x3DEC238
	0x03DEC21C SUBS X9, X9, 0x1
	0x03DEC220 ADD X10, X10, 0x10
	0x03DEC224 B.NE 0x3DEC210
	0x03DEC228 MOVZ W2, 0x24
	0x03DEC22C MOV X0, X19
	0x03DEC230 BL 0x1C5C788
	0x03DEC234 B 0x3DEC248
	0x03DEC238 LDR W9, [X10]
	0x03DEC23C ADD W9, W9, 0x24
	0x03DEC240 ADD X8, X8, W9, 0x4, SXTW
	0x03DEC244 ADD X0, X8, 0x138
	0x03DEC248 LDP X2, X1, [X0]
	0x03DEC24C MOV X0, X19
	0x03DEC250 LDP X20, X19, [X31 + 0x10]
	0x03DEC254 LDR X30, [X31], #0x20
	0x03DEC258 BR X2
	0x03DEC25C BL 0x1C16F20
	0x03DEC260 SUB X31, X31, 0xE0
	0x03DEC264 STR D10, [X31 + 0xA0]
	0x03DEC268 STP D9, D8, [X31 + 0xB0]
	0x03DEC26C STP X30, X21, [X31 + 0xC0]
	0x03DEC270 STP X20, X19, [X31 + 0xD0]
	0x03DEC274 ADRP X20, 0x5FC000
	0x03DEC278 LDRB W8, [X20 + 0x236]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], D8
	003 Move [X31+40], X30
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X24, 0x5FE000
	011 Move W8, [X24+559]
	012 Move W20, W4
	013 Move X23, X3
	014 Move X19, X2
	015 Move W21, W1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x37F000
	022 Move X0, [X0+2208]
	023 Call 0x1C17CF4
	024 Move X0, 0x330000
	025 Move X0, [X0+2032]
	026 Call 0x1C17CF4
	027 Move X0, 0x30C000
	028 Move X0, [X0+192]
	029 Call 0x1C17CF4
	030 Move X0, 0x30C000
	031 Move X0, [X0+280]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X24+559], W8
	035 Move X0, X19
	036 Move X1, X31
	037 Move [X31+16], X31
	038 Move [X31+24], X31
	039 Call Length.IsAuto, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {161}
	044 Move X0, X19
	045 Move X1, X31
	046 Call Length.IsNone, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {161}
	051 Move X0, X23
	052 Move X1, X31
	053 Call Length.IsAuto, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {161}
	058 Move X0, X23
	059 Move X1, X31
	060 Call Length.IsNone, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {161}
	065 Move V8, [X19]
	066 Move W8, S8
	067 And W9, W8, 0x7FFFFFFF
	068 Move W8, 0x7F800000
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W9, [X23]
	071 And W9, W9, 0x7FFFFFFF
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W8, [X19+4]
	074 Move W23, [X23+4]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move W20, 1
	077 Compare W23, 0
	078 JumpIfEqual {120}
	079 Move X8, 0x330000
	080 Move X8, [X8+2032]
	081 Move X0, [X8]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X8, 0x37E000
	087 Move X8, [X8+2208]
	088 Move W0, 1
	089 Move W1, W23
	090 Move X2, [X8]
	091 Call 0x218435C, X0, X1
	092 Move X0, X22
	093 Move W1, W21
	094 Move W2, W20
	095 Call VisualElement.GetParentSizeForLengthConversion, X0, X1, X2
	096 And W31, W0, 255
	097 Move [X31+16], X0
	098 Move X20, 0x30C000
	099 Move X20, [X20+280]
	100 Add X0, X31, 16
	101 Move X1, [X20]
	102 Call Nullable`1<Single>.get_Value, X0
	103 NotImplemented "Instruction FCMP not yet implemented."
	104 Move X1, [X20]
	105 Move V8, [X19]
	106 Add X0, X31, 16
	107 Call Nullable`1<Single>.get_Value, X0
	108 Move W8, 0x42C80000
	109 Move S1, W8
	110 Multiply S1, S8, S1
	111 NotImplemented "Instruction FDIV not yet implemented."
	112 Add X0, X31, 8
	113 Move W1, 1
	114 Move X2, X31
	115 Move [X31+8], X31
	116 Move W20, 1
	117 Call Length..ctor, X0, V0, X1
	118 Move X8, [X31+8]
	119 Move [X19], X8
	120 Move X23, 0x5EE000
	121 Move W8, [X23+1450]
	122 Compare W8, 0
	123 JumpIfNotEqual {129}
	124 Move X0, 0x30F000
	125 Move X0, [X0+1208]
	126 Call 0x1C17CF4
	127 Move W8, 1
	128 Move [X23+1450], W8
	129 Move X8, 0x30F000
	130 Move X8, [X8+1208]
	131 Move X9, -53481472
	132 Move V0, [X9+576]
	133 NotImplemented "Instruction FABS not yet implemented."
	134 Move X8, [X8]
	135 Move S2, W31
	136 NotImplemented "Instruction FMAXNM not yet implemented."
	137 Multiply S0, S1, S0
	138 Move X8, [X8+184]
	139 Move S1, 8
	140 Move V3, [X8]
	141 Multiply S1, S3, S1
	142 NotImplemented "Instruction FCMP not yet implemented."
	143 NotImplemented "Instruction FCSEL not yet implemented."
	144 NotImplemented "Instruction FABD not yet implemented."
	145 NotImplemented "Instruction FCMP not yet implemented."
	146 Add X0, X31, 8
	147 Move S0, W31
	148 Move [X31+8], X31
	149 Move X0, X22
	150 Move W1, W21
	151 Move W2, W20
	152 Call VisualElement.GetParentSizeForLengthConversion, X0, X1, X2
	153 And W31, W0, 255
	154 Move [X31+24], X0
	155 Move X20, 0x30C000
	156 Move X20, [X20+280]
	157 Add X0, X31, 24
	158 Move X1, [X20]
	159 Call Nullable`1<Single>.get_Value, X0
	160 NotImplemented "Instruction FCMP not yet implemented."
	161 Move W20, W31
	162 Move W0, W20
	163 Move X20, [X31+80]
	164 Move X19, [X31+88]
	165 Move X22, [X31+64]
	166 Move X21, [X31+72]
	167 Move X24, [X31+48]
	168 Move X23, [X31+56]
	169 Move X30, [X31+40]
	170 Move V8, [X31+32]
	171 Add X31, X31, 96
	172 Return X0
	173 Move X1, [X20]
	174 Move V8, [X19]
	175 Add X0, X31, 24
	176 Call Nullable`1<Single>.get_Value, X0
	177 Move W8, 0x42C80000
	178 Multiply S0, S8, S0
	179 Move S1, W8
	180 Move [X31+8], X31
	181 NotImplemented "Instruction FDIV not yet implemented."
	182 Add X0, X31, 8
	183 Move W1, W31
	184 Move X2, X31
	185 Call Length..ctor, X0, V0, X1
	186 Move X8, [X31+8]
	187 Move [X19], X8

Method: System.Boolean TryConvertTransformOriginUnits(ref UnityEngine.UIElements.TransformOrigin from, ref UnityEngine.UIElements.TransformOrigin to)

Disassembly:
	0x03DEC644 MOV X1, X31
	0x03DEC648 MOV X2, X31
	0x03DEC64C MOV X20, X0
	0x03DEC650 BL 0x3CE6CD0
	0x03DEC654 STR X20, [X19 + 0x2B8]
	0x03DEC658 LDRB W8, [X19 + 0x50]
	0x03DEC65C TBZ X8, 0x6, 0x3DEC690
	0x03DEC660 LDR V0, [X19 + 0x1D0]
	0x03DEC664 FCMP S0, S11
	0x03DEC668 B.NE 0x3DEC690
	0x03DEC66C LDR V0, [X19 + 0x1DC]
	0x03DEC670 FCMP S0, S8
	0x03DEC674 B.NE 0x3DEC690
	0x03DEC678 LDR V0, [X19 + 0x1D8]
	0x03DEC67C FCMP S0, S9
	0x03DEC680 B.NE 0x3DEC690
	0x03DEC684 LDR V0, [X19 + 0x1D4]
	0x03DEC688 FCMP S0, S10
	0x03DEC68C B.EQ 0x3DECD78
	0x03DEC690 MOV X0, X19
	0x03DEC694 BL 0x3DEC528
	0x03DEC698 ADRP X20, 0x5ED000
	0x03DEC69C LDRB W8, [X20 + 0x5AA]
	0x03DEC6A0 MOV V15.16B, V0.16B
	0x03DEC6A4 MOV V14.16B, V1.16B
	0x03DEC6A8 MOV V13.16B, V2.16B
	0x03DEC6AC MOV V12.16B, V3.16B
	0x03DEC6B0 CBNZ W8, 0x3DEC6C8
	0x03DEC6B4 ADRP X0, 0x30E000
	0x03DEC6B8 LDR X0, [X0 + 0x4B8]
	0x03DEC6BC BL 0x1C16CF4
	0x03DEC6C0 MOVZ W8, 0x1
	0x03DEC6C4 STRB W8, [X20 + 0x5AA]
	0x03DEC6C8 ADRP X8, 0x30E000
	0x03DEC6CC LDR X8, [X8 + 0x4B8]
	0x03DEC6D0 ADRP X9, 0xFFFFFFFFFCCFE000
	0x03DEC6D4 LDR V0, [X9 + 0x240]
	0x03DEC6D8 FABS S1, S15

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X20
	003 Move [X31+56], X19
	004 Move X8, [X1]
	005 Move X19, X1
	006 Add X3, X31, 16
	007 Move W4, W31
	008 Move [X31+32], X30
	009 Move [X31+40], X8
	010 Move X9, [X1+8]
	011 Move X8, [X2]
	012 Move W1, 2
	013 NotImplemented "Instruction MOVK not yet implemented."
	014 Move X20, X0
	015 Move [X31+16], X8
	016 Move [X31+24], X9
	017 Move X8, [X2+8]
	018 Add X2, X31, 40
	019 Move [X31+8], X8
	020 Call VisualElement.TryConvertLengthUnits, X0, X1, X2, X3, X4
	021 Move W8, W0
	022 Move W0, W31
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {44}
	027 Move W1, 2
	028 Add X2, X31, 24
	029 Add X3, X31, 8
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 Move W4, 1
	032 Move X0, X20
	033 Call VisualElement.TryConvertLengthUnits, X0, X1, X2, X3, X4
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {43}
	038 Move X9, [X31+40]
	039 Move X8, [X31+24]
	040 Move W0, 1
	041 Move [X19], X9
	042 Move [X19+8], X8
	043 Move W0, W31
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X30, [X31+32]
	047 Add X31, X31, 64
	048 Return X0

Method: System.Boolean TryConvertTranslateUnits(ref UnityEngine.UIElements.Translate from, ref UnityEngine.UIElements.Translate to)

Disassembly:
	0x03DEC6DC LDR X8, [X8]
	0x03DEC6E0 FABS S2, S11
	0x03DEC6E4 FCMP S1, S2
	0x03DEC6E8 FCSEL S2, S1, S2, GT
	0x03DEC6EC LDR X9, [X8 + 0xB8]
	0x03DEC6F0 FMOV S1, 8
	0x03DEC6F4 FMUL S4, S2, S0
	0x03DEC6F8 LDR V3, [X9]
	0x03DEC6FC FMUL S2, S3, S1
	0x03DEC700 FCMP S4, S2
	0x03DEC704 FCSEL S3, S4, S2, GT
	0x03DEC708 FABD S4, S11, S11
	0x03DEC70C FCMP S4, S3
	0x03DEC710 B.PL 0x3DEC744
	0x03DEC714 FABS S3, S14
	0x03DEC718 FABS S4, S10
	0x03DEC71C FCMP S3, S4
	0x03DEC720 FCSEL S3, S3, S4, GT
	0x03DEC724 FMUL S3, S3, S0
	0x03DEC728 FCMP S3, S2
	0x03DEC72C FCSEL S2, S3, S2, GT
	0x03DEC730 FABD S3, S10, S10
	0x03DEC734 FCMP S3, S2
	0x03DEC738 B.PL 0x3DEC744
	0x03DEC73C MOV W20, W31
	0x03DEC740 B 0x3DEC748
	0x03DEC744 MOVZ W20, 0x200
	0x03DEC748 LDR X8, [X8 + 0xB8]
	0x03DEC74C FABS S2, S13
	0x03DEC750 FABS S3, S9
	0x03DEC754 FCMP S2, S3
	0x03DEC758 LDR V4, [X8]
	0x03DEC75C FCSEL S2, S2, S3, GT
	0x03DEC760 ADRP X21, 0x376000
	0x03DEC764 FMUL S2, S2, S0
	0x03DEC768 FMUL S1, S4, S1
	0x03DEC76C LDR X21, [X21 + 0xAA8]
	0x03DEC770 FCMP S2, S1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X20
	003 Move [X31+56], X19
	004 Move X8, [X1]
	005 Move X19, X1
	006 Add X3, X31, 16
	007 Move W4, W31
	008 Move [X31+32], X30
	009 Move [X31+40], X8
	010 Move X9, [X1+8]
	011 Move X8, [X2]
	012 Move W1, 3
	013 NotImplemented "Instruction MOVK not yet implemented."
	014 Move X20, X0
	015 Move [X31+16], X8
	016 Move [X31+24], X9
	017 Move X8, [X2+8]
	018 Add X2, X31, 40
	019 Move [X31+8], X8
	020 Call VisualElement.TryConvertLengthUnits, X0, X1, X2, X3, X4
	021 Move W8, W0
	022 Move W0, W31
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {44}
	027 Move W1, 3
	028 Add X2, X31, 24
	029 Add X3, X31, 8
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 Move W4, 1
	032 Move X0, X20
	033 Call VisualElement.TryConvertLengthUnits, X0, X1, X2, X3, X4
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {43}
	038 Move X9, [X31+40]
	039 Move X8, [X31+24]
	040 Move W0, 1
	041 Move [X19], X9
	042 Move [X19+8], X8
	043 Move W0, W31
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X30, [X31+32]
	047 Add X31, X31, 64
	048 Return X0

Method: System.Boolean TryConvertBackgroundSizeUnits(ref UnityEngine.UIElements.BackgroundSize from, ref UnityEngine.UIElements.BackgroundSize to)

Disassembly:
	0x03DEC774 FCSEL S2, S2, S1, GT
	0x03DEC778 FABD S3, S9, S9
	0x03DEC77C FCMP S3, S2
	0x03DEC780 B.PL 0x3DEC7AC
	0x03DEC784 FABS S2, S12
	0x03DEC788 FABS S3, S8
	0x03DEC78C FCMP S2, S3
	0x03DEC790 FCSEL S2, S2, S3, GT
	0x03DEC794 FMUL S0, S2, S0
	0x03DEC798 FCMP S0, S1
	0x03DEC79C FCSEL S0, S0, S1, GT
	0x03DEC7A0 FABD S1, S8, S8
	0x03DEC7A4 FCMP S1, S0
	0x03DEC7A8 B.MI 0x3DEC7B0
	0x03DEC7AC ORR W20, W20, 0x400
	0x03DEC7B0 LDR W8, [X19 + 0x50]
	0x03DEC7B4 MOV X0, X19
	0x03DEC7B8 STR S11, [X19 + 0x1D0]
	0x03DEC7BC STR S10, [X19 + 0x1D4]
	0x03DEC7C0 ORR W8, W8, 0x40
	0x03DEC7C4 STR S9, [X19 + 0x1D8]
	0x03DEC7C8 STR S8, [X19 + 0x1DC]
	0x03DEC7CC STR W8, [X19 + 0x50]
	0x03DEC7D0 BL 0x3DE7EEC
	0x03DEC7D4 LDR X1, [X21]
	0x03DEC7D8 MOV X21, X0
	0x03DEC7DC MOVZ W0, 0x1
	0x03DEC7E0 BL 0x266EACC
	0x03DEC7E4 CBZ X21, 0x3DECD9C
	0x03DEC7E8 ADRP X24, 0x330000
	0x03DEC7EC LDR X8, [X21]
	0x03DEC7F0 LDR X24, [X24 + 0x128]
	0x03DEC7F4 MOV X22, X0
	0x03DEC7F8 LDRH W9, [X8 + 0x12E]
	0x03DEC7FC LDR X1, [X24]
	0x03DEC800 CBZ X9, 0x3DEC824
	0x03DEC804 LDR X10, [X8 + 0xB0]
	0x03DEC808 ADD X10, X10, 0x8
	0x03DEC80C LDUR X11, [X10 - 0x8]
	0x03DEC810 CMP X11, X1
	0x03DEC814 B.EQ 0x3DEC834
	0x03DEC818 SUBS X9, X9, 0x1
	0x03DEC81C ADD X10, X10, 0x10
	0x03DEC820 B.NE 0x3DEC80C
	0x03DEC824 MOVZ W2, 0x28
	0x03DEC828 MOV X0, X21
	0x03DEC82C BL 0x1C5C788
	0x03DEC830 B 0x3DEC844
	0x03DEC834 LDR W9, [X10]
	0x03DEC838 ADD W9, W9, 0x28
	0x03DEC83C ADD X8, X8, W9, 0x4, SXTW
	0x03DEC840 ADD X0, X8, 0x138
	0x03DEC844 LDP X8, X2, [X0]
	0x03DEC848 MOV X0, X21
	0x03DEC84C MOV X1, X22

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, X1
	009 Move X1, X31
	010 Move X21, X2
	011 Call BackgroundSize.get_x, X0
	012 Move [X31+24], X0
	013 Move X0, X19
	014 Move X1, X31
	015 Call BackgroundSize.get_y, X0
	016 Move [X31+16], X0
	017 Move X0, X21
	018 Move X1, X31
	019 Call BackgroundSize.get_x, X0
	020 Move [X31+8], X0
	021 Move X0, X21
	022 Move X1, X31
	023 Call BackgroundSize.get_y, X0
	024 Move W1, 5
	025 Move [X31], X0
	026 Add X2, X31, 24
	027 Add X3, X31, 8
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 Move X0, X20
	030 Move W4, W31
	031 Call VisualElement.TryConvertLengthUnits, X0, X1, X2, X3, X4
	032 Move W8, W0
	033 Move W0, W31
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {59}
	038 Move W1, 5
	039 Add X2, X31, 16
	040 Add X3, X31, 0
	041 NotImplemented "Instruction MOVK not yet implemented."
	042 Move W4, 1
	043 Move X0, X20
	044 Call VisualElement.TryConvertLengthUnits, X0, X1, X2, X3, X4
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {58}
	049 Move X1, [X31+24]
	050 Move X0, X19
	051 Move X2, X31
	052 Call BackgroundSize.set_x, X0, X1
	053 Move X1, [X31+16]
	054 Move X0, X19
	055 Move X2, X31
	056 Call BackgroundSize.set_y, X0, X1
	057 Move W0, 1
	058 Move W0, W31
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Add X31, X31, 64
	064 Return X0

Method: System.Nullable`1<System.Single> GetParentSizeForLengthConversion(UnityEngine.UIElements.StyleSheets.StylePropertyId id, System.Int32 subPropertyIndex = 0)

Disassembly:
	0x03DEC27C MOV V8.16B, V2.16B
	0x03DEC280 MOV V9.16B, V1.16B
	0x03DEC284 MOV V10.16B, V0.16B
	0x03DEC288 MOV X19, X0
	0x03DEC28C ADD X21, X31, 0x80
	0x03DEC290 TBNZ X8, 0x0, 0x3DEC2A8
	0x03DEC294 ADRP X0, 0x330000
	0x03DEC298 LDR X0, [X0 + 0x128]
	0x03DEC29C BL 0x1C16CF4
	0x03DEC2A0 MOVZ W8, 0x1
	0x03DEC2A4 STRB W8, [X20 + 0x236]
	0x03DEC2A8 MOV X0, X19
	0x03DEC2AC BL 0x3DE7EEC
	0x03DEC2B0 MOV X19, X0
	0x03DEC2B4 MOV V0.16B, V10.16B
	0x03DEC2B8 MOV X0, X31
	0x03DEC2BC BL 0x3DFD518
	0x03DEC2C0 MOV X20, X0
	0x03DEC2C4 MOV V0.16B, V9.16B
	0x03DEC2C8 MOV X0, X31
	0x03DEC2CC BL 0x3DFD518
	0x03DEC2D0 MOV X2, X0
	0x03DEC2D4 ADD X0, X31, 0x68
	0x03DEC2D8 MOV X1, X20
	0x03DEC2DC MOV V0.16B, V8.16B
	0x03DEC2E0 MOV X3, X31
	0x03DEC2E4 STP X31, X31, [X31 + 0x68]
	0x03DEC2E8 STR X31, [X31 + 0x78]
	0x03DEC2EC BL 0x3E00AB0
	0x03DEC2F0 LDR X8, [X31 + 0x78]
	0x03DEC2F4 LDUR V0, [X31 + 0x68]
	0x03DEC2F8 ADD X0, X31, 0x20
	0x03DEC2FC MOV X1, X31
	0x03DEC300 STR X8, [X31 + 0x30]
	0x03DEC304 ADD X8, X31, 0x80
	0x03DEC308 STR V0, [X31 + 0x2]
	0x03DEC30C BL 0x3DFF7E8
	0x03DEC310 LDR V0, [X31 + 0x8]
	0x03DEC314 LDUR V1, [X21 + 0xC]
	0x03DEC318 STR V0, [X31 + 0x4]
	0x03DEC31C STUR V1, [X31 + 0x4C]
	0x03DEC320 CBZ X19, 0x3DEC3C8
	0x03DEC324 LDR V0, [X31 + 0x4]
	0x03DEC328 LDUR V1, [X31 + 0x4C]
	0x03DEC32C ADRP X10, 0x330000
	0x03DEC330 STR V0, [X31]
	0x03DEC334 STUR V1, [X31 + 0xC]
	0x03DEC338 LDR X8, [X19]
	0x03DEC33C LDR X10, [X10 + 0x128]
	0x03DEC340 LDRH W9, [X8 + 0x12E]
	0x03DEC344 LDR X1, [X10]
	0x03DEC348 CBZ X9, 0x3DEC36C
	0x03DEC34C LDR X10, [X8 + 0xB0]
	0x03DEC350 ADD X10, X10, 0x8
	0x03DEC354 LDUR X11, [X10 - 0x8]
	0x03DEC358 CMP X11, X1
	0x03DEC35C B.EQ 0x3DEC37C
	0x03DEC360 SUBS X9, X9, 0x1
	0x03DEC364 ADD X10, X10, 0x10
	0x03DEC368 B.NE 0x3DEC354
	0x03DEC36C MOVZ W2, 0x30
	0x03DEC370 MOV X0, X19
	0x03DEC374 BL 0x1C5C788
	0x03DEC378 B 0x3DEC38C
	0x03DEC37C LDR W9, [X10]
	0x03DEC380 ADD W9, W9, 0x30
	0x03DEC384 ADD X8, X8, W9, 0x4, SXTW
	0x03DEC388 ADD X0, X8, 0x138
	0x03DEC38C LDR V0, [X31]
	0x03DEC390 LDUR V1, [X31 + 0xC]
	0x03DEC394 LDR X8, [X0]
	0x03DEC398 ADD X1, X31, 0x80
	0x03DEC39C STR V0, [X31 + 0x8]
	0x03DEC3A0 STUR V1, [X21 + 0xC]
	0x03DEC3A4 LDR X2, [X0 + 0x8]
	0x03DEC3A8 MOV X0, X19
	0x03DEC3AC BLR X8
	0x03DEC3B0 LDP X20, X19, [X31 + 0xD0]
	0x03DEC3B4 LDP X30, X21, [X31 + 0xC0]
	0x03DEC3B8 LDP D9, D8, [X31 + 0xB0]
	0x03DEC3BC LDR V10, [X31 + 0xA0]
	0x03DEC3C0 ADD X31, X31, 0xE0
	0x03DEC3C4 RET
	0x03DEC3C8 BL 0x1C16F20
	0x03DEC3CC STR X30, [X31 - 0x20]!
	0x03DEC3D0 STP X20, X19, [X31 + 0x10]
	0x03DEC3D4 ADRP X20, 0x5FC000
	0x03DEC3D8 LDRB W8, [X20 + 0x237]
	0x03DEC3DC MOV X19, X0
	0x03DEC3E0 TBNZ X8, 0x0, 0x3DEC3F8
	0x03DEC3E4 ADRP X0, 0x330000
	0x03DEC3E8 LDR X0, [X0 + 0x120]
	0x03DEC3EC BL 0x1C16CF4
	0x03DEC3F0 MOVZ W8, 0x1
	0x03DEC3F4 STRB W8, [X20 + 0x237]
	0x03DEC3F8 CBZ X19, 0x3DEC47C
	0x03DEC3FC ADRP X10, 0x330000
	0x03DEC400 LDR X8, [X19]
	0x03DEC404 LDR X10, [X10 + 0x120]
	0x03DEC408 LDRH W9, [X8 + 0x12E]
	0x03DEC40C LDR X1, [X10]
	0x03DEC410 CBZ X9, 0x3DEC434
	0x03DEC414 LDR X10, [X8 + 0xB0]
	0x03DEC418 ADD X10, X10, 0x8
	0x03DEC41C LDUR X11, [X10 - 0x8]
	0x03DEC420 CMP X11, X1
	0x03DEC424 B.EQ 0x3DEC444
	0x03DEC428 SUBS X9, X9, 0x1
	0x03DEC42C ADD X10, X10, 0x10
	0x03DEC430 B.NE 0x3DEC41C
	0x03DEC434 MOVZ W2, 0x21
	0x03DEC438 MOV X0, X19
	0x03DEC43C BL 0x1C5C788
	0x03DEC440 B 0x3DEC454
	0x03DEC444 LDR W9, [X10]
	0x03DEC448 ADD W9, W9, 0x21
	0x03DEC44C ADD X8, X8, W9, 0x4, SXTW
	0x03DEC450 ADD X0, X8, 0x138
	0x03DEC454 LDP X8, X1, [X0]
	0x03DEC458 MOV X0, X19
	0x03DEC45C BLR X8
	0x03DEC460 LDP X20, X19, [X31 + 0x10]
	0x03DEC464 UBFM X8, X0, 0x20, 0x3F
	0x03DEC468 FMOV S0, W0
	0x03DEC46C FMOV S1, W8
	0x03DEC470 FMOV S2, W1
	0x03DEC474 LDR X30, [X31], #0x20
	0x03DEC478 RET
	0x03DEC47C BL 0x1C16F20
	0x03DEC480 LDRB W8, [X0 + 0x50]
	0x03DEC484 UBFM W0, W8, 0x6, 0x6
	0x03DEC488 RET
	0x03DEC48C STR X30, [X31 - 0x10]!
	0x03DEC490 CBZ X0, 0x3DEC4B8
	0x03DEC494 LDR W8, [X0 + 0x50]
	0x03DEC498 ANDS W31, W1, 0x1
	0x03DEC49C MOVZ W9, 0x40
	0x03DEC4A0 CSEL W9, W9, W31, NE
	0x03DEC4A4 AND W8, W8, 0xFFFFFFBF
	0x03DEC4A8 ORR W8, W8, W9, 0x0
	0x03DEC4AC STR W8, [X0 + 0x50]
	0x03DEC4B0 LDR X30, [X31], #0x10
	0x03DEC4B4 RET
	0x03DEC4B8 BL 0x1C16F20
	0x03DEC4BC STR X30, [X31 - 0x20]!
	0x03DEC4C0 STP X20, X19, [X31 + 0x10]
	0x03DEC4C4 ADRP X20, 0x5FC000
	0x03DEC4C8 LDRB W8, [X20 + 0x238]
	0x03DEC4CC MOV X19, X0
	0x03DEC4D0 TBNZ X8, 0x0, 0x3DEC4E8
	0x03DEC4D4 ADRP X0, 0x333000
	0x03DEC4D8 LDR X0, [X0 + 0x5C8]
	0x03DEC4DC BL 0x1C16CF4
	0x03DEC4E0 MOVZ W8, 0x1
	0x03DEC4E4 STRB W8, [X20 + 0x238]
	0x03DEC4E8 LDR X0, [X19 + 0x3A0]
	0x03DEC4EC CBZ X0, 0x3DEC500
	0x03DEC4F0 LDP X20, X19, [X31 + 0x10]
	0x03DEC4F4 MOV X1, X31
	0x03DEC4F8 LDR X30, [X31], #0x20
	0x03DEC4FC B 0x3DBBED8
	0x03DEC500 ADRP X8, 0x333000
	0x03DEC504 LDR X8, [X8 + 0x5C8]
	0x03DEC508 LDR X0, [X8]
	0x03DEC50C LDR W8, [X0 + 0xE0]
	0x03DEC510 CBNZ W8, 0x3DEC518
	0x03DEC514 BL 0x1C16DFC
	0x03DEC518 LDP X20, X19, [X31 + 0x10]
	0x03DEC51C MOV X0, X31
	0x03DEC520 LDR X30, [X31], #0x20
	0x03DEC524 B 0x3C6FDD0
	0x03DEC528 STR D10, [X31 - 0x30]!
	0x03DEC52C STP D9, D8, [X31 + 0x10]
	0x03DEC530 STP X30, X19, [X31 + 0x20]
	0x03DEC534 MOV X19, X0
	0x03DEC538 LDR V8, [X0 + 0x1D0]
	0x03DEC53C LDR V9, [X0 + 0x1D4]
	0x03DEC540 LDR V10, [X0 + 0x1D8]
	0x03DEC544 LDR X0, [X0 + 0x2B8]
	0x03DEC548 LDR V3, [X19 + 0x1DC]
	0x03DEC54C CBZ X0, 0x3DEC5A0
	0x03DEC550 LDRB W8, [X19 + 0x50]
	0x03DEC554 TBNZ X8, 0x6, 0x3DEC5A0
	0x03DEC558 MOV X1, X31
	0x03DEC55C BL 0x3CE7768
	0x03DEC560 LDR X0, [X19 + 0x2B8]
	0x03DEC564 CBZ X0, 0x3DEC5BC
	0x03DEC568 MOV X1, X31
	0x03DEC56C MOV V8.16B, V0.16B
	0x03DEC570 BL 0x3CE77A4
	0x03DEC574 LDR X0, [X19 + 0x2B8]
	0x03DEC578 CBZ X0, 0x3DEC5BC
	0x03DEC57C MOV X1, X31
	0x03DEC580 MOV V9.16B, V0.16B
	0x03DEC584 BL 0x3CE7858
	0x03DEC588 LDR X0, [X19 + 0x2B8]
	0x03DEC58C CBZ X0, 0x3DEC5BC
	0x03DEC590 MOV X1, X31
	0x03DEC594 MOV V10.16B, V0.16B
	0x03DEC598 BL 0x3CE7894
	0x03DEC59C MOV V3.16B, V0.16B
	0x03DEC5A0 MOV V0.16B, V8.16B
	0x03DEC5A4 MOV V1.16B, V9.16B
	0x03DEC5A8 LDP X30, X19, [X31 + 0x20]
	0x03DEC5AC LDP D9, D8, [X31 + 0x10]
	0x03DEC5B0 MOV V2.16B, V10.16B
	0x03DEC5B4 LDR V10, [X31], #0x30
	0x03DEC5B8 RET
	0x03DEC5BC BL 0x1C16F20
	0x03DEC5C0 STP D15, D14, [X31 - 0x80]!
	0x03DEC5C4 STP D13, D12, [X31 + 0x10]
	0x03DEC5C8 STP D11, D10, [X31 + 0x20]
	0x03DEC5CC STP D9, D8, [X31 + 0x30]
	0x03DEC5D0 STR X30, [X31 + 0x40]
	0x03DEC5D4 STP X24, X23, [X31 + 0x50]
	0x03DEC5D8 STP X22, X21, [X31 + 0x60]
	0x03DEC5DC STP X20, X19, [X31 + 0x70]
	0x03DEC5E0 ADRP X20, 0x5FC000
	0x03DEC5E4 LDRB W8, [X20 + 0x239]
	0x03DEC5E8 MOV V8.16B, V3.16B
	0x03DEC5EC MOV V9.16B, V2.16B
	0x03DEC5F0 MOV V10.16B, V1.16B
	0x03DEC5F4 MOV V11.16B, V0.16B
	0x03DEC5F8 MOV X19, X0
	0x03DEC5FC TBNZ X8, 0x0, 0x3DEC62C
	0x03DEC600 ADRP X0, 0x330000
	0x03DEC604 LDR X0, [X0 + 0x128]
	0x03DEC608 BL 0x1C16CF4
	0x03DEC60C ADRP X0, 0x376000
	0x03DEC610 LDR X0, [X0 + 0xAA8]
	0x03DEC614 BL 0x1C16CF4
	0x03DEC618 ADRP X0, 0x37D000
	0x03DEC61C LDR X0, [X0 + 0x258]
	0x03DEC620 BL 0x1C16CF4
	0x03DEC624 MOVZ W8, 0x1
	0x03DEC628 STRB W8, [X20 + 0x239]
	0x03DEC62C LDR X8, [X19 + 0x2B8]
	0x03DEC630 CBNZ X8, 0x3DEC658
	0x03DEC634 ADRP X8, 0x37D000
	0x03DEC638 LDR X8, [X8 + 0x258]
	0x03DEC63C LDR X0, [X8]
	0x03DEC640 BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x5FD000
	008 Move W8, [X22+560]
	009 Move W20, W2
	010 Move W21, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x331000
	017 Move X0, [X0+288]
	018 Call 0x1C17CF4
	019 Move X0, 0x30C000
	020 Move X0, [X0+312]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+560], W8
	024 Move W8, 14
	025 NotImplemented "Instruction MOVK not yet implemented."
	026 Move X0, X31
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move [X31+24], X31
	029 Move W8, 2
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 Or W9, W8, 1
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, 0xFFF9
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 Add W8, W21, W8
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X31
	038 Move W9, 1
	039 NotImplemented "Instruction LSLV not yet implemented."
	040 Move W9, 99
	041 And W31, W8, W9
	042 Compare X19, 0
	043 JumpIfEqual {234}
	044 Move X10, 0x331000
	045 Move X8, [X19]
	046 Move X10, [X10+288]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {89}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move W9, 0xFFF9
	058 NotImplemented "Instruction MOVK not yet implemented."
	059 Add W9, W21, W9
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, -52768768
	062 Add X8, X8, 1278
	063 NotImplemented "Instruction ADR not yet implemented."
	064 Move W11, [X8]
	065 Add X10, X10, X11
	066 Move X0, X31
	067 CallNoReturn X10
	068 Move X8, [X19+888]
	069 Add X0, X31, 24
	070 Move X1, X31
	071 Move [X31+24], X8
	072 Call Hierarchy.get_parent, X0
	073 Compare X0, 0
	074 JumpIfEqual {227}
	075 Move X10, 0x331000
	076 Move X8, [X0]
	077 Move X10, [X10+288]
	078 Move X19, X0
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Move X1, [X10]
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move W2, 44
	090 Move X0, X19
	091 Call 0x1C5D788
	092 Move X8, [X19+888]
	093 Add X0, X31, 24
	094 Move X1, X31
	095 Move [X31+24], X8
	096 Call Hierarchy.get_parent, X0
	097 Compare X0, 0
	098 JumpIfEqual {227}
	099 Move X10, 0x331000
	100 Move X8, [X0]
	101 Move X10, [X10+288]
	102 Move X19, X0
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Move X1, [X10]
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move W2, 19
	114 And W9, W21, 0xFFFFFFFE
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Compare X19, 0
	117 JumpIfEqual {234}
	118 Move X9, 0x331000
	119 Move X8, [X19]
	120 Move X9, [X9+288]
	121 Move X1, [X9]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Compare W20, 0
	124 JumpIfEqual {204}
	125 Compare W9, 0
	126 JumpIfEqual {113}
	127 Move X10, [X8+176]
	128 Add X10, X10, 8
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Subtract X9, X9, 1
	132 Add X10, X10, 16
	133 Move X8, [X19+888]
	134 Add X0, X31, 24
	135 Move X1, X31
	136 Move [X31+24], X8
	137 Call Hierarchy.get_parent, X0
	138 Compare X0, 0
	139 JumpIfEqual {227}
	140 Move X8, [X19+888]
	141 Add X0, X31, 24
	142 Move X1, X31
	143 Move [X31+24], X8
	144 Call Hierarchy.get_parent, X0
	145 Compare X0, 0
	146 JumpIfEqual {234}
	147 Move X21, 0x331000
	148 Move X8, [X0]
	149 Move X21, [X21+288]
	150 Move X20, X0
	151 NotImplemented "Instruction LDRH not yet implemented."
	152 Move X1, [X21]
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move W2, 16
	162 Move X0, X20
	163 Call 0x1C5D788
	164 Move X0, X31
	165 Move W9, [X10]
	166 Add W9, W9, 16
	167 Add X8, X8, W9
	168 Add X0, X8, 312
	169 Move X8, [X0]
	170 Move X1, [X0+8]
	171 Move X0, X20
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X8, [X19+888]
	174 Move W20, W0
	175 Add X0, X31, 24
	176 Move X1, X31
	177 Move [X31+24], X8
	178 Call Hierarchy.get_parent, X0
	179 Compare X0, 0
	180 JumpIfEqual {234}
	181 Move X8, [X0]
	182 Move X1, [X21]
	183 Move X19, X0
	184 NotImplemented "Instruction CMP not yet implemented."
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Compare W9, 0
	187 JumpIfEqual {89}
	188 Move X10, [X8+176]
	189 Add X10, X10, 8
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Subtract X9, X9, 1
	193 Add X10, X10, 16
	194 Compare W9, 0
	195 JumpIfEqual {113}
	196 Move X10, [X8+176]
	197 Add X10, X10, 8
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Subtract X9, X9, 1
	201 Add X10, X10, 16
	202 Move W9, [X10]
	203 Add W9, W9, 19
	204 Compare W9, 0
	205 JumpIfEqual {89}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move W9, [X10]
	213 Add W9, W9, 44
	214 Add X8, X8, W9
	215 Add X0, X8, 312
	216 Move X8, [X0]
	217 Move X1, [X0+8]
	218 Move X0, X19
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move X8, 0x30C000
	221 Move X8, [X8+312]
	222 Add X0, X31, 8
	223 Move [X31+8], X31
	224 Move X1, [X8]
	225 Call Nullable`1<Single>..ctor, X0, V0
	226 Move X0, [X31+8]
	227 Move X20, [X31+48]
	228 Move X19, [X31+56]
	229 Move X22, [X31+32]
	230 Move X21, [X31+40]
	231 Move X30, [X31+16]
	232 Add X31, X31, 64
	233 Return X0
	234 Call 0x1C17F20

Method: System.Boolean get_isCompositeRoot()

Disassembly:
	0x03DEC850 BLR X8
	0x03DEC854 FMOV S0, W31
	0x03DEC858 MOV X0, X31

ISIL:
	001 Move W8, [X0+80]
	002 Move W0, W8
	003 ShiftRight W0, 7
	004 And W0, W0, 0x7FFFFFFF
	005 Return X0

Method: System.Void set_isCompositeRoot(System.Boolean value)

Disassembly:
	0x03DEC85C BL 0x3DFED98
	0x03DEC860 LDR X9, [X21]
	0x03DEC864 LDR X8, [X24]
	0x03DEC868 MOV X22, X0
	0x03DEC86C AND X23, X1, 0x0
	0x03DEC870 LDRH W10, [X9 + 0x12E]
	0x03DEC874 CBZ X10, 0x3DEC898
	0x03DEC878 LDR X11, [X9 + 0xB0]
	0x03DEC87C ADD X11, X11, 0x8
	0x03DEC880 LDUR X12, [X11 - 0x8]
	0x03DEC884 CMP X12, X8
	0x03DEC888 B.EQ 0x3DEC8AC
	0x03DEC88C SUBS X10, X10, 0x1
	0x03DEC890 ADD X11, X11, 0x10
	0x03DEC894 B.NE 0x3DEC880

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {18}
	004 Move W8, [X0+80]
	005 And W31, W1, 1
	006 Move W9, 128
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFFF7F
	009 Or W8, W8, W9
	010 Move [X0+80], W8
	011 Move TEMP, X1
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {16}
	015 Move X30, [X31+16]
	016 Move X30, [X31+16]
	017 Return 
	018 Call 0x1C17F20

Method: System.Boolean get_isHierarchyDisplayed()

Disassembly:
	0x03DEC948 BLR X8
	0x03DEC94C FMOV S0, W31
	0x03DEC950 MOV X0, X31

ISIL:
	001 Move W8, [X0+81]
	002 Move W0, W8
	003 ShiftRight W0, 4
	004 And W0, W0, 15
	005 Return X0

Method: System.Void set_isHierarchyDisplayed(System.Boolean value)

Disassembly:
	0x03DEC954 BL 0x3DFED98
	0x03DEC958 LDR X9, [X21]
	0x03DEC95C LDR X8, [X24]
	0x03DEC960 MOV X22, X0
	0x03DEC964 AND X23, X1, 0x0
	0x03DEC968 LDRH W10, [X9 + 0x12E]
	0x03DEC96C CBZ X10, 0x3DEC990
	0x03DEC970 LDR X11, [X9 + 0xB0]
	0x03DEC974 ADD X11, X11, 0x8
	0x03DEC978 LDUR X12, [X11 - 0x8]
	0x03DEC97C CMP X12, X8
	0x03DEC980 B.EQ 0x3DEC9A4

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+80]
	005 And W31, W1, 1
	006 Move W9, 4096
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFEFFF
	009 Or W8, W8, W9
	010 Move [X0+80], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.String get_viewDataKey()

Disassembly:
	0x03DEC984 SUBS X10, X10, 0x1
	0x03DEC988 ADD X11, X11, 0x10

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_viewDataKey(System.String value)

Disassembly:
	0x03DEC98C B.NE 0x3DEC978
	0x03DEC990 MOVZ W2, 0x1A
	0x03DEC994 MOV X0, X21
	0x03DEC998 MOV X1, X8
	0x03DEC99C BL 0x1C5C788
	0x03DEC9A0 B 0x3DEC9B4
	0x03DEC9A4 LDR W8, [X11]
	0x03DEC9A8 ADD W8, W8, 0x1A
	0x03DEC9AC ADD X8, X9, W8, 0x4, SXTW
	0x03DEC9B0 ADD X0, X8, 0x138
	0x03DEC9B4 LDP X8, X3, [X0]
	0x03DEC9B8 MOV X0, X21
	0x03DEC9BC MOV X1, X22
	0x03DEC9C0 MOV X2, X23
	0x03DEC9C4 BLR X8
	0x03DEC9C8 FMOV S0, W31
	0x03DEC9CC MOV X0, X31
	0x03DEC9D0 BL 0x3DFED98
	0x03DEC9D4 LDR X9, [X21]
	0x03DEC9D8 LDR X8, [X24]
	0x03DEC9DC MOV X22, X0
	0x03DEC9E0 AND X23, X1, 0x0
	0x03DEC9E4 LDRH W10, [X9 + 0x12E]
	0x03DEC9E8 CBZ X10, 0x3DECA0C
	0x03DEC9EC LDR X11, [X9 + 0xB0]
	0x03DEC9F0 ADD X11, X11, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+88]
	006 Move X2, X31
	007 Move X20, X1
	008 Call String.op_Inequality, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {33}
	013 Move X0, X20
	014 Move X1, X31
	015 Move [X19+88], X20
	016 Call String.IsNullOrEmpty, X0
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {33}
	021 Move X0, [X19+928]
	022 Compare X0, 0
	023 JumpIfEqual {33}
	024 Move X8, [X0]
	025 Move X1, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move W2, 2
	029 Move X4, [X8+824]
	030 Move X3, [X8+832]
	031 Move X30, [X31+32]
	032 CallNoReturn X4
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Boolean get_enableViewDataPersistence()

Disassembly:
	0x03DEC9F4 LDUR X12, [X11 - 0x8]
	0x03DEC9F8 CMP X12, X8
	0x03DEC9FC B.EQ 0x3DECA20

ISIL:
	001 Move W8, [X0+81]
	002 Move W0, W8
	003 ShiftRight W0, 1
	004 And W0, W0, 1
	005 Return X0

Method: System.Void set_enableViewDataPersistence(System.Boolean value)

Disassembly:
	0x03DECA00 SUBS X10, X10, 0x1
	0x03DECA04 ADD X11, X11, 0x10
	0x03DECA08 B.NE 0x3DEC9F4
	0x03DECA0C MOVZ W2, 0x1D
	0x03DECA10 MOV X0, X21
	0x03DECA14 MOV X1, X8
	0x03DECA18 BL 0x1C5C788
	0x03DECA1C B 0x3DECA30
	0x03DECA20 LDR W8, [X11]
	0x03DECA24 ADD W8, W8, 0x1D
	0x03DECA28 ADD X8, X9, W8, 0x4, SXTW
	0x03DECA2C ADD X0, X8, 0x138

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+80]
	005 And W31, W1, 1
	006 Move W9, 512
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFFDFF
	009 Or W8, W8, W9
	010 Move [X0+80], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Object get_userData()

Disassembly:
	0x03DECA30 LDP X8, X3, [X0]
	0x03DECA34 MOV X0, X21
	0x03DECA38 MOV X1, X22
	0x03DECA3C MOV X2, X23
	0x03DECA40 BLR X8
	0x03DECA44 MOV V0.16B, V11.16B
	0x03DECA48 MOV X0, X31
	0x03DECA4C BL 0x3DFED98
	0x03DECA50 LDR X9, [X21]
	0x03DECA54 LDR X8, [X24]
	0x03DECA58 MOV X22, X0
	0x03DECA5C AND X23, X1, 0x0
	0x03DECA60 LDRH W10, [X9 + 0x12E]
	0x03DECA64 CBZ X10, 0x3DECA88
	0x03DECA68 LDR X11, [X9 + 0xB0]
	0x03DECA6C ADD X11, X11, 0x8
	0x03DECA70 LDUR X12, [X11 - 0x8]
	0x03DECA74 CMP X12, X8
	0x03DECA78 B.EQ 0x3DECA9C
	0x03DECA7C SUBS X10, X10, 0x1
	0x03DECA80 ADD X11, X11, 0x10
	0x03DECA84 B.NE 0x3DECA70
	0x03DECA88 MOVZ W2, 0x19
	0x03DECA8C MOV X0, X21
	0x03DECA90 MOV X1, X8
	0x03DECA94 BL 0x1C5C788
	0x03DECA98 B 0x3DECAAC
	0x03DECA9C LDR W8, [X11]
	0x03DECAA0 ADD W8, W8, 0x19
	0x03DECAA4 ADD X8, X9, W8, 0x4, SXTW

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5FD000
	007 Move X20, 0x330000
	008 Move W8, [X21+561]
	009 Move X20, [X20+2200]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x330000
	016 Move X0, [X0+2200]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+561], W8
	020 Move X0, [X20]
	021 Move [X31+8], X31
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X20]
	027 Move X8, [X0+184]
	028 Add X2, X31, 8
	029 Move X0, X19
	030 Move W1, [X8+16]
	031 Call VisualElement.TryGetPropertyInternal, X0, X1, X2
	032 Move X0, [X31+8]
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X30, [X31+16]
	036 Move X21, [X31+24]
	037 Add X31, X31, 48
	038 Return X0

Method: System.Void set_userData(System.Object value)

Disassembly:
	0x03DECB90 BL 0x1C5C788
	0x03DECB94 B 0x3DECBA8
	0x03DECB98 LDR W8, [X11]
	0x03DECB9C ADD W8, W8, 0x29
	0x03DECBA0 ADD X8, X9, W8, 0x4, SXTW
	0x03DECBA4 ADD X0, X8, 0x138
	0x03DECBA8 LDP X8, X3, [X0]
	0x03DECBAC MOV X0, X21
	0x03DECBB0 MOV X1, X22
	0x03DECBB4 MOV X2, X23
	0x03DECBB8 BLR X8
	0x03DECBBC MOVZ W8, 0x7FC00000
	0x03DECBC0 FMOV S0, W8
	0x03DECBC4 MOV X0, X31
	0x03DECBC8 BL 0x3DFED98
	0x03DECBCC LDR X9, [X21]
	0x03DECBD0 LDR X8, [X24]
	0x03DECBD4 MOV X22, X0
	0x03DECBD8 AND X23, X1, 0x0
	0x03DECBDC LDRH W10, [X9 + 0x12E]
	0x03DECBE0 CBZ X10, 0x3DECC04
	0x03DECBE4 LDR X11, [X9 + 0xB0]
	0x03DECBE8 ADD X11, X11, 0x8
	0x03DECBEC LDUR X12, [X11 - 0x8]
	0x03DECBF0 CMP X12, X8
	0x03DECBF4 B.EQ 0x3DECC18
	0x03DECBF8 SUBS X10, X10, 0x1
	0x03DECBFC ADD X11, X11, 0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5FD000
	007 Move X21, 0x330000
	008 Move W8, [X22+562]
	009 Move X21, [X21+2200]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x330000
	017 Move X0, [X0+2200]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+562], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move X0, X20
	029 Move X2, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move W1, [X8+16]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]

Method: System.Boolean get_canGrabFocus()

Disassembly:
	0x03DECE40 SUBS X9, X9, 0x1
	0x03DECE44 ADD X10, X10, 0x10
	0x03DECE48 B.NE 0x3DECE34
	0x03DECE4C MOVZ W2, 0x28
	0x03DECE50 MOV X0, X19
	0x03DECE54 BL 0x1C5C788
	0x03DECE58 B 0x3DECE6C
	0x03DECE5C LDR W9, [X10]
	0x03DECE60 ADD W9, W9, 0x28
	0x03DECE64 ADD X8, X8, W9, 0x4, SXTW
	0x03DECE68 ADD X0, X8, 0x138
	0x03DECE6C LDP X8, X2, [X0]
	0x03DECE70 MOV X0, X19
	0x03DECE74 MOV X1, X20
	0x03DECE78 BLR X8
	0x03DECE7C MOVZ W0, 0x1
	0x03DECE80 MOV X1, X31
	0x03DECE84 BL 0x3DFD0B0
	0x03DECE88 LDR X9, [X19]
	0x03DECE8C LDR X8, [X22]
	0x03DECE90 MOV X20, X0
	0x03DECE94 AND X21, X1, 0x0
	0x03DECE98 LDRH W10, [X9 + 0x12E]
	0x03DECE9C CBZ X10, 0x3DECEC0
	0x03DECEA0 LDR X11, [X9 + 0xB0]
	0x03DECEA4 ADD X11, X11, 0x8
	0x03DECEA8 LDUR X12, [X11 - 0x8]
	0x03DECEAC CMP X12, X8
	0x03DECEB0 B.EQ 0x3DECED4
	0x03DECEB4 SUBS X10, X10, 0x1
	0x03DECEB8 ADD X11, X11, 0x10
	0x03DECEBC B.NE 0x3DECEA8
	0x03DECEC0 MOVZ W2, 0x1B
	0x03DECEC4 MOV X0, X19
	0x03DECEC8 MOV X1, X8
	0x03DECECC BL 0x1C5C788
	0x03DECED0 B 0x3DECEE4
	0x03DECED4 LDR W8, [X11]
	0x03DECED8 ADD W8, W8, 0x1B
	0x03DECEDC ADD X8, X9, W8, 0x4, SXTW
	0x03DECEE0 ADD X0, X8, 0x138
	0x03DECEE4 LDP X8, X3, [X0]
	0x03DECEE8 MOV X0, X19
	0x03DECEEC MOV X1, X20
	0x03DECEF0 MOV X2, X21
	0x03DECEF4 BLR X8
	0x03DECEF8 MOVZ W0, 0x1
	0x03DECEFC MOV X1, X31
	0x03DECF00 BL 0x3DFD0B0
	0x03DECF04 LDR X9, [X19]
	0x03DECF08 LDR X8, [X22]
	0x03DECF0C MOV X20, X0
	0x03DECF10 AND X21, X1, 0x0
	0x03DECF14 LDRH W10, [X9 + 0x12E]
	0x03DECF18 CBZ X10, 0x3DECF3C
	0x03DECF1C LDR X11, [X9 + 0xB0]
	0x03DECF20 ADD X11, X11, 0x8
	0x03DECF24 LDUR X12, [X11 - 0x8]
	0x03DECF28 CMP X12, X8
	0x03DECF2C B.EQ 0x3DECF50
	0x03DECF30 SUBS X10, X10, 0x1
	0x03DECF34 ADD X11, X11, 0x10
	0x03DECF38 B.NE 0x3DECF24
	0x03DECF3C MOVZ W2, 0x1C
	0x03DECF40 MOV X0, X19
	0x03DECF44 MOV X1, X8
	0x03DECF48 BL 0x1C5C788
	0x03DECF4C B 0x3DECF60
	0x03DECF50 LDR W8, [X11]
	0x03DECF54 ADD W8, W8, 0x1C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5FD000
	005 Move W8, [X20+563]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x331000
	012 Move X0, [X0+288]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+563], W8
	016 Move X8, [X19+888]
	017 Add X0, X31, 8
	018 Move X1, X31
	019 Move [X31+8], X8
	020 Call Hierarchy.get_parent, X0
	021 Compare X0, 0
	022 JumpIfEqual {39}
	023 Move W8, [X0+80]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 128
	026 Compare TEMP, 128
	027 JumpIfEqual {31}
	028 Move X0, [X0+912]
	029 Compare X0, 0
	030 JumpIfNotEqual {23}
	031 Move X8, [X0]
	032 Move X9, [X8+568]
	033 Move X1, [X8+576]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {80}
	039 Move X0, X19
	040 Call VisualElement.get_visible, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {80}
	045 Compare X19, 0
	046 JumpIfEqual {86}
	047 Move X10, 0x331000
	048 Move X8, [X19]
	049 Move X10, [X10+288]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Move X1, [X10]
	052 Compare X9, 0
	053 JumpIfEqual {60}
	054 Move X10, [X8+176]
	055 Add X10, X10, 8
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X9, X9, 1
	059 Add X10, X10, 16
	060 Move W2, 15
	061 Move X0, X19
	062 Call 0x1C5D788
	063 Move W9, [X10]
	064 Add W9, W9, 15
	065 Add X8, X8, W9
	066 Add X0, X8, 312
	067 Move X8, [X0]
	068 Move X1, [X0+8]
	069 Move X0, X19
	070 NotImplemented "Instruction BLR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W8, [X19+684]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 32
	075 Compare TEMP, 32
	076 JumpIfEqual {80}
	077 Move X0, X19
	078 Move X1, X31
	079 Call Focusable.get_canGrabFocus, X0
	080 Move W0, W31
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 And W0, W0, 1
	084 Move X30, [X31+32]
	085 Return X0
	086 Call 0x1C17F20

Method: UnityEngine.UIElements.FocusController get_focusController()

Disassembly:
	0x03DED01C LDUR X12, [X11 - 0x8]
	0x03DED020 CMP X12, X8
	0x03DED024 B.EQ 0x3DED048
	0x03DED028 SUBS X10, X10, 0x1
	0x03DED02C ADD X11, X11, 0x10
	0x03DED030 B.NE 0x3DED01C
	0x03DED034 MOVZ W2, 0x1D
	0x03DED038 MOV X0, X19
	0x03DED03C MOV X1, X8
	0x03DED040 BL 0x1C5C788
	0x03DED044 B 0x3DED058
	0x03DED048 LDR W8, [X11]
	0x03DED04C ADD W8, W8, 0x1D
	0x03DED050 ADD X8, X9, W8, 0x4, SXTW
	0x03DED054 ADD X0, X8, 0x138
	0x03DED058 LDP X8, X3, [X0]
	0x03DED05C MOV X0, X19
	0x03DED060 MOV X1, X20
	0x03DED064 MOV X2, X21
	0x03DED068 BLR X8
	0x03DED06C MOVZ W0, 0x1
	0x03DED070 MOV X1, X31
	0x03DED074 BL 0x3DFD0B0
	0x03DED078 LDR X9, [X19]
	0x03DED07C LDR X8, [X22]
	0x03DED080 MOV X20, X0
	0x03DED084 AND X21, X1, 0x0
	0x03DED088 LDRH W10, [X9 + 0x12E]
	0x03DED08C CBZ X10, 0x3DED0B0
	0x03DED090 LDR X11, [X9 + 0xB0]
	0x03DED094 ADD X11, X11, 0x8
	0x03DED098 LDUR X12, [X11 - 0x8]
	0x03DED09C CMP X12, X8
	0x03DED0A0 B.EQ 0x3DED0C4
	0x03DED0A4 SUBS X10, X10, 0x1
	0x03DED0A8 ADD X11, X11, 0x10
	0x03DED0AC B.NE 0x3DED098
	0x03DED0B0 MOVZ W2, 0x19
	0x03DED0B4 MOV X0, X19
	0x03DED0B8 MOV X1, X8
	0x03DED0BC BL 0x1C5C788
	0x03DED0C0 B 0x3DED0D4
	0x03DED0C4 LDR W8, [X11]
	0x03DED0C8 ADD W8, W8, 0x19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5FC000
	005 Move W8, [X20+564]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x330000
	012 Move X0, [X0+3712]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+564], W8
	016 Move X19, [X19+928]
	017 Compare X19, 0
	018 JumpIfEqual {35}
	019 Move X10, 0x330000
	020 Move X8, [X19]
	021 Move X10, [X10+3712]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 3
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X0, X31
	038 Move X30, [X31+32]
	039 Return X0
	040 Move W9, [X10]
	041 Add W9, W9, 3
	042 Add X8, X8, W9
	043 Add X0, X8, 312
	044 Move X2, [X0]
	045 Move X1, [X0+8]
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 CallNoReturn X2

Method: UnityEngine.UIElements.UsageHints get_usageHints()

Disassembly:
	0x03DED0D4 LDP X8, X3, [X0]
	0x03DED0D8 MOV X0, X19
	0x03DED0DC MOV X1, X20
	0x03DED0E0 MOV X2, X21
	0x03DED0E4 BLR X8
	0x03DED0E8 MOVZ W0, 0x1
	0x03DED0EC MOV X1, X31
	0x03DED0F0 BL 0x3DFD0B0

ISIL:
	001 Move W8, [X0+96]
	002 Move W9, W8
	003 ShiftRight W9, 1
	004 And W9, W9, 0x7FFFFFFF
	005 NotImplemented "Instruction RBIT not yet implemented."
	006 And W10, W9, 4
	007 NotImplemented "Instruction BFM not yet implemented."
	008 And W8, W9, 8
	009 Or W0, W10, W8
	010 Return X0

Method: System.Void set_usageHints(UnityEngine.UIElements.UsageHints value)

Disassembly:
	0x03DED0FC MOV X20, X0
	0x03DED100 AND X21, X1, 0x0
	0x03DED104 LDRH W10, [X9 + 0x12E]
	0x03DED108 CBZ X10, 0x3DED12C
	0x03DED10C LDR X11, [X9 + 0xB0]
	0x03DED110 ADD X11, X11, 0x8
	0x03DED114 LDUR X12, [X11 - 0x8]
	0x03DED118 CMP X12, X8
	0x03DED11C B.EQ 0x3DED140
	0x03DED120 SUBS X10, X10, 0x1
	0x03DED124 ADD X11, X11, 0x10
	0x03DED128 B.NE 0x3DED114
	0x03DED12C MOVZ W2, 0x2D
	0x03DED130 MOV X0, X19
	0x03DED134 MOV X1, X8
	0x03DED138 BL 0x1C5C788
	0x03DED13C B 0x3DED150
	0x03DED140 LDR W8, [X11]
	0x03DED144 ADD W8, W8, 0x2D
	0x03DED148 ADD X8, X9, W8, 0x4, SXTW
	0x03DED14C ADD X0, X8, 0x138
	0x03DED150 LDP X8, X3, [X0]
	0x03DED154 MOV X0, X19
	0x03DED158 MOV X1, X20
	0x03DED15C MOV X2, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W19, W1
	007 Move W1, [X0+96]
	008 Move X20, X0
	009 Move W21, W19
	010 ShiftRight W21, 3
	011 And W21, W21, 0x7FFFFFFF
	012 Move W22, W19
	013 ShiftRight W22, 2
	014 And W22, W22, 0x7FFFFFFF
	015 NotImplemented "Instruction BFM not yet implemented."
	016 Call VisualElement.set_renderHints, X0, X1
	017 Move W1, [X20+96]
	018 Move X0, X20
	019 NotImplemented "Instruction BFM not yet implemented."
	020 Call VisualElement.set_renderHints, X0, X1
	021 Move W1, [X20+96]
	022 Move X0, X20
	023 NotImplemented "Instruction BFM not yet implemented."
	024 Call VisualElement.set_renderHints, X0, X1
	025 Move W1, [X20+96]
	026 Move X0, X20
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 NotImplemented "Instruction BFM not yet implemented."
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]

Method: UnityEngine.UIElements.RenderHints get_renderHints()

Disassembly:
	0x03DED0F4 LDR X9, [X19]
	0x03DED0F8 LDR X8, [X22]

ISIL:
	001 Move W0, [X0+96]
	002 Return X0

Method: System.Void set_renderHints(UnityEngine.UIElements.RenderHints value)

Disassembly:
	0x03DED160 BLR X8
	0x03DED164 MOVZ W0, 0x1
	0x03DED168 MOV X1, X31
	0x03DED16C BL 0x3DFD0B0
	0x03DED170 LDR X9, [X19]
	0x03DED174 LDR X8, [X22]
	0x03DED178 MOV X20, X0
	0x03DED17C AND X21, X1, 0x0
	0x03DED180 LDRH W10, [X9 + 0x12E]
	0x03DED184 CBZ X10, 0x3DED1A8
	0x03DED188 LDR X11, [X9 + 0xB0]
	0x03DED18C ADD X11, X11, 0x8
	0x03DED190 LDUR X12, [X11 - 0x8]
	0x03DED194 CMP X12, X8
	0x03DED198 B.EQ 0x3DED1BC
	0x03DED19C SUBS X10, X10, 0x1
	0x03DED1A0 ADD X11, X11, 0x10
	0x03DED1A4 B.NE 0x3DED190
	0x03DED1A8 MOVZ W2, 0x29

ISIL:
	001 Move W9, [X0+96]
	002 And W10, W1, 0xFFFFFC1F
	003 And W11, W9, 0xFFFFFC1F
	004 Xor W11, W11, W10
	005 Compare W11, 0
	006 JumpIfEqual {21}
	007 Move X8, X0
	008 Move X0, [X0+928]
	009 And W9, W9, 992
	010 Or W9, W9, W10
	011 Or W9, W9, W11
	012 Move [X8+96], W9
	013 Compare X0, 0
	014 JumpIfEqual {21}
	015 Move X9, [X0]
	016 Move W2, 0x4000
	017 Move X1, X8
	018 Move X4, [X9+824]
	019 Move X3, [X9+832]
	020 CallNoReturn X4
	021 Return 

Method: System.Void MarkRenderHintsClean()

Disassembly:
	0x03DED1AC MOV X0, X19
	0x03DED1B0 MOV X1, X8
	0x03DED1B4 BL 0x1C5C788
	0x03DED1B8 B 0x3DED1CC

ISIL:
	001 Move W8, [X0+96]
	002 And W8, W8, 0xFFFFFC1F
	003 Move [X0+96], W8
	004 Return 

Method: UnityEngine.UIElements.ITransform get_transform()

Disassembly:
	0x03DED1BC LDR W8, [X11]

ISIL:
	001 Return X0

Method: UnityEngine.Vector3 UnityEngine.UIElements.ITransform.get_position()

Disassembly:
	0x03DED1C0 ADD W8, W8, 0x29
	0x03DED1C4 ADD X8, X9, W8, 0x4, SXTW
	0x03DED1C8 ADD X0, X8, 0x138
	0x03DED1CC LDP X8, X3, [X0]
	0x03DED1D0 MOV X0, X19
	0x03DED1D4 MOV X1, X20
	0x03DED1D8 MOV X2, X21
	0x03DED1DC BLR X8
	0x03DED1E0 MOVZ W0, 0x1
	0x03DED1E4 MOV X1, X31
	0x03DED1E8 BL 0x3DFD0B0
	0x03DED1EC LDR X9, [X19]
	0x03DED1F0 LDR X8, [X22]
	0x03DED1F4 MOV X20, X0
	0x03DED1F8 AND X21, X1, 0x0
	0x03DED1FC LDRH W10, [X9 + 0x12E]
	0x03DED200 CBZ X10, 0x3DED224
	0x03DED204 LDR X11, [X9 + 0xB0]
	0x03DED208 ADD X11, X11, 0x8
	0x03DED20C LDUR X12, [X11 - 0x8]
	0x03DED210 CMP X12, X8
	0x03DED214 B.EQ 0x3DED238
	0x03DED218 SUBS X10, X10, 0x1
	0x03DED21C ADD X11, X11, 0x10
	0x03DED220 B.NE 0x3DED20C
	0x03DED224 MOVZ W2, 0xE
	0x03DED228 MOV X0, X19
	0x03DED22C MOV X1, X8
	0x03DED230 BL 0x1C5C788
	0x03DED234 B 0x3DED248
	0x03DED238 LDR W8, [X11]
	0x03DED23C ADD W8, W8, 0xE
	0x03DED240 ADD X8, X9, W8, 0x4, SXTW
	0x03DED244 ADD X0, X8, 0x138
	0x03DED248 LDP X8, X3, [X0]
	0x03DED24C MOV X0, X19
	0x03DED250 MOV X1, X20
	0x03DED254 MOV X2, X21
	0x03DED258 BLR X8
	0x03DED25C MOVZ W0, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5FC000
	005 Move W8, [X20+565]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x330000
	012 Move X0, [X0+288]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+565], W8
	016 Compare X19, 0
	017 JumpIfEqual {45}
	018 Move X10, 0x330000
	019 Move X8, [X19]
	020 Move X10, [X10+288]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X1, [X10]
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 36
	032 Move X0, X19
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 36
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.Void UnityEngine.UIElements.ITransform.set_position(UnityEngine.Vector3 value)

Disassembly:
	0x03DED260 MOV X1, X31
	0x03DED264 BL 0x3DFD0B0
	0x03DED268 LDR X9, [X19]
	0x03DED26C LDR X8, [X22]
	0x03DED270 MOV X20, X0
	0x03DED274 AND X21, X1, 0x0
	0x03DED278 LDRH W10, [X9 + 0x12E]
	0x03DED27C CBZ X10, 0x3DED2A0
	0x03DED280 LDR X11, [X9 + 0xB0]
	0x03DED284 ADD X11, X11, 0x8
	0x03DED288 LDUR X12, [X11 - 0x8]
	0x03DED28C CMP X12, X8
	0x03DED290 B.EQ 0x3DED2B4
	0x03DED294 SUBS X10, X10, 0x1
	0x03DED298 ADD X11, X11, 0x10
	0x03DED29C B.NE 0x3DED288
	0x03DED2A0 MOVZ W2, 0x36
	0x03DED2A4 MOV X0, X19
	0x03DED2A8 MOV X1, X8
	0x03DED2AC BL 0x1C5C788
	0x03DED2B0 B 0x3DED2C4
	0x03DED2B4 LDR W8, [X11]
	0x03DED2B8 ADD W8, W8, 0x36
	0x03DED2BC ADD X8, X9, W8, 0x4, SXTW
	0x03DED2C0 ADD X0, X8, 0x138
	0x03DED2C4 LDP X8, X3, [X0]
	0x03DED2C8 MOV X0, X19
	0x03DED2CC MOV X1, X20
	0x03DED2D0 MOV X2, X21
	0x03DED2D4 BLR X8
	0x03DED2D8 MOVZ W0, 0x1
	0x03DED2DC MOV X1, X31
	0x03DED2E0 BL 0x3DFD0B0
	0x03DED2E4 LDR X9, [X19]
	0x03DED2E8 LDR X8, [X22]
	0x03DED2EC MOV X20, X0
	0x03DED2F0 MOV X21, X1
	0x03DED2F4 LDRH W10, [X9 + 0x12E]
	0x03DED2F8 CBZ X10, 0x3DED31C
	0x03DED2FC LDR X11, [X9 + 0xB0]
	0x03DED300 ADD X11, X11, 0x8
	0x03DED304 LDUR X12, [X11 - 0x8]
	0x03DED308 CMP X12, X8
	0x03DED30C B.EQ 0x3DED330
	0x03DED310 SUBS X10, X10, 0x1
	0x03DED314 ADD X11, X11, 0x10
	0x03DED318 B.NE 0x3DED304
	0x03DED31C MOVZ W2, 0x18
	0x03DED320 MOV X0, X19
	0x03DED324 MOV X1, X8
	0x03DED328 BL 0x1C5C788
	0x03DED32C B 0x3DED340
	0x03DED330 LDR W8, [X11]
	0x03DED334 ADD W8, W8, 0x18
	0x03DED338 ADD X8, X9, W8, 0x4, SXTW
	0x03DED33C ADD X0, X8, 0x138
	0x03DED340 LDP X4, X3, [X0]
	0x03DED344 AND X2, X21, 0x0
	0x03DED348 MOV X0, X19
	0x03DED34C MOV X1, X20
	0x03DED350 LDP X20, X19, [X31 + 0x20]
	0x03DED354 LDP X22, X21, [X31 + 0x10]
	0x03DED358 LDR X30, [X31], #0x30
	0x03DED35C BR X4
	0x03DED360 BL 0x1C16F20
	0x03DED364 STP D11, D10, [X31 - 0x40]!
	0x03DED368 STP D9, D8, [X31 + 0x10]
	0x03DED36C STR X30, [X31 + 0x20]
	0x03DED370 STP X20, X19, [X31 + 0x30]
	0x03DED374 ADRP X20, 0x5FB000
	0x03DED378 LDRB W8, [X20 + 0x23B]
	0x03DED37C MOV X19, X0
	0x03DED380 TBNZ X8, 0x0, 0x3DED398
	0x03DED384 ADRP X0, 0x32F000
	0x03DED388 LDR X0, [X0 + 0x120]
	0x03DED38C BL 0x1C16CF4
	0x03DED390 MOVZ W8, 0x1
	0x03DED394 STRB W8, [X20 + 0x23B]
	0x03DED398 CBZ X19, 0x3DED564
	0x03DED39C ADRP X20, 0x32F000
	0x03DED3A0 LDR X8, [X19]
	0x03DED3A4 LDR X20, [X20 + 0x120]
	0x03DED3A8 LDRH W9, [X8 + 0x12E]
	0x03DED3AC LDR X1, [X20]
	0x03DED3B0 CBZ X9, 0x3DED3D4
	0x03DED3B4 LDR X10, [X8 + 0xB0]
	0x03DED3B8 ADD X10, X10, 0x8
	0x03DED3BC LDUR X11, [X10 - 0x8]
	0x03DED3C0 CMP X11, X1
	0x03DED3C4 B.EQ 0x3DED3E4
	0x03DED3C8 SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+160], D10
	003 Move [X31+176], D9
	004 Move [X31+184], D8
	005 Move [X31+192], X30
	006 Move [X31+200], X21
	007 Move [X31+208], X20
	008 Move [X31+216], X19
	009 Move X20, 0x5FC000
	010 Move W8, [X20+566]
	011 Move V8, V2
	012 Move V9, V1
	013 Move V10, V0
	014 Move X19, X0
	015 Add X21, X31, 128
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x330000
	021 Move X0, [X0+296]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+566], W8
	025 Move X0, X19
	026 Call VisualElement.get_style, X0
	027 Move X19, X0
	028 Move V0, V10
	029 Move X0, X31
	030 Call Length.op_Implicit, V0
	031 Move X20, X0
	032 Move V0, V9
	033 Move X0, X31
	034 Call Length.op_Implicit, V0
	035 Move X2, X0
	036 Add X0, X31, 104
	037 Move X1, X20
	038 Move V0, V8
	039 Move X3, X31
	040 Move [X31+104], X31
	041 Move [X31+112], X31
	042 Move [X31+120], X31
	043 Call Translate..ctor, X0, X1, X2, V0
	044 Move X8, [X31+120]
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Add X0, X31, 32
	047 Move X1, X31
	048 Move [X31+48], X8
	049 Add X8, X31, 128
	050 Move [X31+2], V0
	051 Call StyleTranslate.op_Implicit, X0
	052 Move V0, [X31+8]
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move [X31+4], V0
	055 Move [X31+76], V1
	056 Compare X19, 0
	057 JumpIfEqual {100}
	058 Move V0, [X31+4]
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move X10, 0x330000
	061 Move [X31], V0
	062 Move [X31+12], V1
	063 Move X8, [X19]
	064 Move X10, [X10+296]
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Move X1, [X10]
	067 Compare X9, 0
	068 JumpIfEqual {75}
	069 Move X10, [X8+176]
	070 Add X10, X10, 8
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract X9, X9, 1
	074 Add X10, X10, 16
	075 Move W2, 48
	076 Move X0, X19
	077 Call 0x1C5D788
	078 Move W9, [X10]
	079 Add W9, W9, 48
	080 Add X8, X8, W9
	081 Add X0, X8, 312
	082 Move V0, [X31]
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 Move X8, [X0]
	085 Add X1, X31, 128
	086 Move [X31+8], V0
	087 Move [X21+12], V1
	088 Move X2, [X0+8]
	089 Move X0, X19
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X20, [X31+208]
	092 Move X19, [X31+216]
	093 Move X30, [X31+192]
	094 Move X21, [X31+200]
	095 Move D9, [X31+176]
	096 Move D8, [X31+184]
	097 Move V10, [X31+160]
	098 Add X31, X31, 224
	099 Return 
	100 Call 0x1C17F20

Method: UnityEngine.Vector3 UnityEngine.UIElements.ITransform.get_scale()

Disassembly:
	0x03DED3CC ADD X10, X10, 0x10
	0x03DED3D0 B.NE 0x3DED3BC
	0x03DED3D4 MOVZ W2, 0x1D
	0x03DED3D8 MOV X0, X19
	0x03DED3DC BL 0x1C5C788
	0x03DED3E0 B 0x3DED3F4
	0x03DED3E4 LDR W9, [X10]
	0x03DED3E8 ADD W9, W9, 0x1D
	0x03DED3EC ADD X8, X8, W9, 0x4, SXTW
	0x03DED3F0 ADD X0, X8, 0x138
	0x03DED3F4 LDP X8, X1, [X0]
	0x03DED3F8 MOV X0, X19
	0x03DED3FC BLR X8
	0x03DED400 LDR X8, [X19]
	0x03DED404 LDR X1, [X20]
	0x03DED408 MOV V8.16B, V0.16B
	0x03DED40C LDRH W9, [X8 + 0x12E]
	0x03DED410 CBZ X9, 0x3DED434
	0x03DED414 LDR X10, [X8 + 0xB0]
	0x03DED418 ADD X10, X10, 0x8
	0x03DED41C LDUR X11, [X10 - 0x8]
	0x03DED420 CMP X11, X1
	0x03DED424 B.EQ 0x3DED444
	0x03DED428 SUBS X9, X9, 0x1
	0x03DED42C ADD X10, X10, 0x10
	0x03DED430 B.NE 0x3DED41C
	0x03DED434 MOVZ W2, 0x1F
	0x03DED438 MOV X0, X19
	0x03DED43C BL 0x1C5C788
	0x03DED440 B 0x3DED454
	0x03DED444 LDR W9, [X10]
	0x03DED448 ADD W9, W9, 0x1F
	0x03DED44C ADD X8, X8, W9, 0x4, SXTW
	0x03DED450 ADD X0, X8, 0x138
	0x03DED454 LDP X8, X1, [X0]
	0x03DED458 MOV X0, X19
	0x03DED45C BLR X8
	0x03DED460 LDR X8, [X19]
	0x03DED464 LDR X1, [X20]
	0x03DED468 MOV V9.16B, V0.16B
	0x03DED46C LDRH W9, [X8 + 0x12E]
	0x03DED470 CBZ X9, 0x3DED494
	0x03DED474 LDR X10, [X8 + 0xB0]
	0x03DED478 ADD X10, X10, 0x8
	0x03DED47C LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5FC000
	005 Move W8, [X20+567]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x330000
	012 Move X0, [X0+288]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+567], W8
	016 Compare X19, 0
	017 JumpIfEqual {52}
	018 Move X10, 0x330000
	019 Move X8, [X19]
	020 Move X10, [X10+288]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X1, [X10]
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 33
	032 Move X0, X19
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 33
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X8, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X8, X0
	045 ShiftRight X8, 32
	046 And X8, X8, 0x7FFFFFFF
	047 Move S0, W0
	048 Move S1, W8
	049 Move S2, W1
	050 Move X30, [X31+32]
	051 Return X0
	052 Call 0x1C17F20

Method: System.Boolean get_isLayoutManual()

Disassembly:
	0x03DED480 CMP X11, X1
	0x03DED484 B.EQ 0x3DED4A4
	0x03DED488 SUBS X9, X9, 0x1

ISIL:
	001 Move W8, [X0+80]
	002 Move W0, W8
	003 ShiftRight W0, 6
	004 And W0, W0, 63
	005 Return X0

Method: System.Void set_isLayoutManual(System.Boolean value)

Disassembly:
	0x03DED48C ADD X10, X10, 0x10
	0x03DED490 B.NE 0x3DED47C
	0x03DED494 MOVZ W2, 0x1E
	0x03DED498 MOV X0, X19
	0x03DED49C BL 0x1C5C788
	0x03DED4A0 B 0x3DED4B4
	0x03DED4A4 LDR W9, [X10]
	0x03DED4A8 ADD W9, W9, 0x1E
	0x03DED4AC ADD X8, X8, W9, 0x4, SXTW
	0x03DED4B0 ADD X0, X8, 0x138
	0x03DED4B4 LDP X8, X1, [X0]
	0x03DED4B8 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+80]
	005 And W31, W1, 1
	006 Move W9, 64
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFFFBF
	009 Or W8, W8, W9
	010 Move [X0+80], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Single get_scaledPixelsPerPoint()

Disassembly:
	0x03DED4BC BLR X8
	0x03DED4C0 LDR X8, [X19]
	0x03DED4C4 LDR X1, [X20]
	0x03DED4C8 MOV V10.16B, V0.16B
	0x03DED4CC LDRH W9, [X8 + 0x12E]
	0x03DED4D0 CBZ X9, 0x3DED4F4
	0x03DED4D4 LDR X10, [X8 + 0xB0]
	0x03DED4D8 ADD X10, X10, 0x8
	0x03DED4DC LDUR X11, [X10 - 0x8]
	0x03DED4E0 CMP X11, X1
	0x03DED4E4 B.EQ 0x3DED504
	0x03DED4E8 SUBS X9, X9, 0x1
	0x03DED4EC ADD X10, X10, 0x10
	0x03DED4F0 B.NE 0x3DED4DC
	0x03DED4F4 MOVZ W2, 0x1C
	0x03DED4F8 MOV X0, X19
	0x03DED4FC BL 0x1C5C788
	0x03DED500 B 0x3DED514
	0x03DED504 LDR W9, [X10]
	0x03DED508 ADD W9, W9, 0x1C
	0x03DED50C ADD X8, X8, W9, 0x4, SXTW
	0x03DED510 ADD X0, X8, 0x138
	0x03DED514 LDP X8, X1, [X0]
	0x03DED518 MOV X0, X19
	0x03DED51C BLR X8
	0x03DED520 MOV X0, X19
	0x03DED524 MOV V11.16B, V0.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5FC000
	005 Move W8, [X20+568]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x333000
	012 Move X0, [X0+1480]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+568], W8
	016 Move X0, [X19+928]
	017 Compare X0, 0
	018 JumpIfEqual {25}
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X1, X31
	022 Move X30, [X31+32]
	023 Call BaseVisualElementPanel.get_scaledPixelsPerPoint, X0
	024 Return V0
	025 Move X8, 0x333000
	026 Move X8, [X8+1480]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X0, X31
	035 Move X30, [X31+32]
	036 Call GUIUtility.get_pixelsPerPoint
	037 Return V0

Method: UnityEngine.Rect get_layout()

Disassembly:
	0x03DED528 BL 0x3DED568
	0x03DED52C FADD S0, S8, S0
	0x03DED530 FADD S1, S9, S1
	0x03DED534 FADD S4, S8, S10
	0x03DED538 FADD S6, S9, S11
	0x03DED53C LDP X20, X19, [X31 + 0x30]
	0x03DED540 LDR X30, [X31 + 0x20]
	0x03DED544 LDP D9, D8, [X31 + 0x10]
	0x03DED548 FMOV S5, W31
	0x03DED54C FSUB S2, S2, S4
	0x03DED550 FSUB S3, S3, S6
	0x03DED554 FMAX S2, S2, S5
	0x03DED558 FMAX S3, S3, S5
	0x03DED55C LDP D11, D10, [X31], #0x40
	0x03DED560 RET
	0x03DED564 BL 0x1C16F20
	0x03DED568 STP D11, D10, [X31 - 0x40]!
	0x03DED56C STP D9, D8, [X31 + 0x10]
	0x03DED570 STR X30, [X31 + 0x20]
	0x03DED574 STP X20, X19, [X31 + 0x30]
	0x03DED578 ADRP X20, 0x5FB000
	0x03DED57C LDRB W8, [X20 + 0x23C]
	0x03DED580 MOV X19, X0
	0x03DED584 TBNZ X8, 0x0, 0x3DED59C
	0x03DED588 ADRP X0, 0x32F000
	0x03DED58C LDR X0, [X0 + 0x120]
	0x03DED590 BL 0x1C16CF4
	0x03DED594 MOVZ W8, 0x1
	0x03DED598 STRB W8, [X20 + 0x23C]
	0x03DED59C CBZ X19, 0x3DED768
	0x03DED5A0 ADRP X20, 0x32F000
	0x03DED5A4 LDR X8, [X19]
	0x03DED5A8 LDR X20, [X20 + 0x120]
	0x03DED5AC LDRH W9, [X8 + 0x12E]
	0x03DED5B0 LDR X1, [X20]
	0x03DED5B4 CBZ X9, 0x3DED5D8
	0x03DED5B8 LDR X10, [X8 + 0xB0]
	0x03DED5BC ADD X10, X10, 0x8

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move V8, [X0+464]
	008 Move V9, [X0+468]
	009 Move V10, [X0+472]
	010 Move X0, [X0+696]
	011 Move V3, [X19+476]
	012 Compare X0, 0
	013 JumpIfEqual {40}
	014 Move W8, [X19+80]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 64
	017 Compare TEMP, 64
	018 JumpIfEqual {40}
	019 Move X1, X31
	020 Call YogaNode.get_LayoutX, X0
	021 Move X0, [X19+696]
	022 Compare X0, 0
	023 JumpIfEqual {49}
	024 Move X1, X31
	025 Move V8, V0
	026 Call YogaNode.get_LayoutY, X0
	027 Move X0, [X19+696]
	028 Compare X0, 0
	029 JumpIfEqual {49}
	030 Move X1, X31
	031 Move V9, V0
	032 Call YogaNode.get_LayoutWidth, X0
	033 Move X0, [X19+696]
	034 Compare X0, 0
	035 JumpIfEqual {49}
	036 Move X1, X31
	037 Move V10, V0
	038 Call YogaNode.get_LayoutHeight, X0
	039 Move V3, V0
	040 Move V0, V8
	041 Move V1, V9
	042 Move X30, [X31+32]
	043 Move X19, [X31+40]
	044 Move D9, [X31+16]
	045 Move D8, [X31+24]
	046 Move V2, V10
	047 Move V10, [X31+48]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Void set_layout(UnityEngine.Rect value)

Disassembly:
	0x03DED5C0 LDUR X11, [X10 - 0x8]
	0x03DED5C4 CMP X11, X1
	0x03DED5C8 B.EQ 0x3DED5E8
	0x03DED5CC SUBS X9, X9, 0x1
	0x03DED5D0 ADD X10, X10, 0x10
	0x03DED5D4 B.NE 0x3DED5C0
	0x03DED5D8 MOVZ W2, 0x6
	0x03DED5DC MOV X0, X19
	0x03DED5E0 BL 0x1C5C788
	0x03DED5E4 B 0x3DED5F8
	0x03DED5E8 LDR W9, [X10]
	0x03DED5EC ADD W9, W9, 0x6
	0x03DED5F0 ADD X8, X8, W9, 0x4, SXTW
	0x03DED5F4 ADD X0, X8, 0x138
	0x03DED5F8 LDP X8, X1, [X0]
	0x03DED5FC MOV X0, X19
	0x03DED600 BLR X8
	0x03DED604 LDR X8, [X19]
	0x03DED608 LDR X1, [X20]
	0x03DED60C MOV V8.16B, V0.16B
	0x03DED610 LDRH W9, [X8 + 0x12E]
	0x03DED614 CBZ X9, 0x3DED638
	0x03DED618 LDR X10, [X8 + 0xB0]
	0x03DED61C ADD X10, X10, 0x8
	0x03DED620 LDUR X11, [X10 - 0x8]
	0x03DED624 CMP X11, X1
	0x03DED628 B.EQ 0x3DED648
	0x03DED62C SUBS X9, X9, 0x1
	0x03DED630 ADD X10, X10, 0x10
	0x03DED634 B.NE 0x3DED620
	0x03DED638 MOVZ W2, 0xC
	0x03DED63C MOV X0, X19
	0x03DED640 BL 0x1C5C788
	0x03DED644 B 0x3DED658
	0x03DED648 LDR W9, [X10]
	0x03DED64C ADD W9, W9, 0xC
	0x03DED650 ADD X8, X8, W9, 0x4, SXTW
	0x03DED654 ADD X0, X8, 0x138
	0x03DED658 LDP X8, X1, [X0]
	0x03DED65C MOV X0, X19
	0x03DED660 BLR X8
	0x03DED664 LDR X8, [X19]
	0x03DED668 LDR X1, [X20]
	0x03DED66C MOV V9.16B, V0.16B
	0x03DED670 LDRH W9, [X8 + 0x12E]
	0x03DED674 CBZ X9, 0x3DED698
	0x03DED678 LDR X10, [X8 + 0xB0]
	0x03DED67C ADD X10, X10, 0x8
	0x03DED680 LDUR X11, [X10 - 0x8]
	0x03DED684 CMP X11, X1
	0x03DED688 B.EQ 0x3DED6A8
	0x03DED68C SUBS X9, X9, 0x1
	0x03DED690 ADD X10, X10, 0x10
	0x03DED694 B.NE 0x3DED680
	0x03DED698 MOVZ W2, 0x8
	0x03DED69C MOV X0, X19
	0x03DED6A0 BL 0x1C5C788
	0x03DED6A4 B 0x3DED6B8
	0x03DED6A8 LDR W9, [X10]
	0x03DED6AC ADD W9, W9, 0x8
	0x03DED6B0 ADD X8, X8, W9, 0x4, SXTW
	0x03DED6B4 ADD X0, X8, 0x138
	0x03DED6B8 LDP X8, X1, [X0]
	0x03DED6BC MOV X0, X19
	0x03DED6C0 BLR X8
	0x03DED6C4 LDR X8, [X19]
	0x03DED6C8 LDR X1, [X20]
	0x03DED6CC MOV V10.16B, V0.16B
	0x03DED6D0 LDRH W9, [X8 + 0x12E]
	0x03DED6D4 CBZ X9, 0x3DED6F8
	0x03DED6D8 LDR X10, [X8 + 0xB0]
	0x03DED6DC ADD X10, X10, 0x8
	0x03DED6E0 LDUR X11, [X10 - 0x8]
	0x03DED6E4 CMP X11, X1
	0x03DED6E8 B.EQ 0x3DED708
	0x03DED6EC SUBS X9, X9, 0x1
	0x03DED6F0 ADD X10, X10, 0x10
	0x03DED6F4 B.NE 0x3DED6E0
	0x03DED6F8 MOVZ W2, 0x4
	0x03DED6FC MOV X0, X19
	0x03DED700 BL 0x1C5C788
	0x03DED704 B 0x3DED718
	0x03DED708 LDR W9, [X10]
	0x03DED70C ADD W9, W9, 0x4
	0x03DED710 ADD X8, X8, W9, 0x4, SXTW
	0x03DED714 ADD X0, X8, 0x138
	0x03DED718 LDP X8, X1, [X0]
	0x03DED71C MOV X0, X19
	0x03DED720 BLR X8
	0x03DED724 MOV X0, X19
	0x03DED728 MOV V11.16B, V0.16B
	0x03DED72C BL 0x3DEC528
	0x03DED730 FMOV S4, W31
	0x03DED734 FADD S5, S8, S10
	0x03DED738 FADD S6, S9, S11
	0x03DED73C FADD S0, S8, S4
	0x03DED740 FADD S1, S9, S4
	0x03DED744 LDP X20, X19, [X31 + 0x30]
	0x03DED748 LDR X30, [X31 + 0x20]
	0x03DED74C LDP D9, D8, [X31 + 0x10]
	0x03DED750 FSUB S2, S2, S5
	0x03DED754 FSUB S3, S3, S6
	0x03DED758 FMAX S2, S2, S4
	0x03DED75C FMAX S3, S3, S4
	0x03DED760 LDP D11, D10, [X31], #0x40
	0x03DED764 RET
	0x03DED768 BL 0x1C16F20
	0x03DED76C STR X30, [X31 - 0x10]!
	0x03DED770 BL 0x3DEC528
	0x03DED774 FMOV S0, W31
	0x03DED778 FMOV S1, W31
	0x03DED77C LDR X30, [X31], #0x10
	0x03DED780 RET
	0x03DED784 LDRB W8, [X0 + 0x50]
	0x03DED788 UBFM W0, W8, 0x3, 0x3
	0x03DED78C RET
	0x03DED790 STR X30, [X31 - 0x10]!
	0x03DED794 CBZ X0, 0x3DED7BC
	0x03DED798 LDR W8, [X0 + 0x50]
	0x03DED79C ANDS W31, W1, 0x1
	0x03DED7A0 MOVZ W9, 0x8
	0x03DED7A4 CSEL W9, W9, W31, NE
	0x03DED7A8 AND W8, W8, 0xFFFFFFF7
	0x03DED7AC ORR W8, W8, W9, 0x0
	0x03DED7B0 STR W8, [X0 + 0x50]
	0x03DED7B4 LDR X30, [X31], #0x10
	0x03DED7B8 RET
	0x03DED7BC BL 0x1C16F20
	0x03DED7C0 STR X30, [X31 - 0x10]!
	0x03DED7C4 CBZ X0, 0x3DED7EC
	0x03DED7C8 LDR W8, [X0 + 0x50]
	0x03DED7CC ANDS W31, W1, 0x1
	0x03DED7D0 MOVZ W9, 0x10
	0x03DED7D4 CSEL W9, W9, W31, NE
	0x03DED7D8 AND W8, W8, 0xFFFFFFEF
	0x03DED7DC ORR W8, W8, W9, 0x0
	0x03DED7E0 STR W8, [X0 + 0x50]
	0x03DED7E4 LDR X30, [X31], #0x10
	0x03DED7E8 RET
	0x03DED7EC BL 0x1C16F20
	0x03DED7F0 LDRB W8, [X0 + 0x50]
	0x03DED7F4 MOVZ W9, 0x19
	0x03DED7F8 ANDS W31, W8, W9, 0x0
	0x03DED7FC CSET W0, NE
	0x03DED800 RET
	0x03DED804 STP X30, X19, [X31 - 0x10]!
	0x03DED808 LDRB W8, [X0 + 0x50]
	0x03DED80C MOV X19, X0
	0x03DED810 TBZ X8, 0x3, 0x3DED828
	0x03DED814 MOV X0, X19
	0x03DED818 BL 0x3DED840
	0x03DED81C LDR W8, [X19 + 0x50]
	0x03DED820 AND W8, W8, 0xFFFFFFF7
	0x03DED824 STR W8, [X19 + 0x50]
	0x03DED828 LDR V3, [X19 + 0x1EC]
	0x03DED82C LDR V2, [X19 + 0x1E8]
	0x03DED830 LDR V1, [X19 + 0x1E4]
	0x03DED834 LDR V0, [X19 + 0x1E0]
	0x03DED838 LDP X30, X19, [X31], #0x10
	0x03DED83C RET
	0x03DED840 STR D12, [X31 - 0x60]!
	0x03DED844 STP D11, D10, [X31 + 0x10]
	0x03DED848 STP D9, D8, [X31 + 0x20]
	0x03DED84C STP X30, X23, [X31 + 0x30]
	0x03DED850 STP X22, X21, [X31 + 0x40]
	0x03DED854 STP X20, X19, [X31 + 0x50]
	0x03DED858 ADRP X20, 0x5FB000
	0x03DED85C LDRB W8, [X20 + 0x23D]
	0x03DED860 MOV X19, X0
	0x03DED864 TBNZ X8, 0x0, 0x3DED894
	0x03DED868 ADRP X0, 0x32F000
	0x03DED86C LDR X0, [X0 + 0xE8]
	0x03DED870 BL 0x1C16CF4
	0x03DED874 ADRP X0, 0x32F000
	0x03DED878 LDR X0, [X0 + 0xF0]
	0x03DED87C BL 0x1C16CF4
	0x03DED880 ADRP X0, 0x306000
	0x03DED884 LDR X0, [X0 + 0x5A8]
	0x03DED888 BL 0x1C16CF4
	0x03DED88C MOVZ W8, 0x1
	0x03DED890 STRB W8, [X20 + 0x23D]
	0x03DED894 MOV X0, X19
	0x03DED898 BL 0x3DEC528
	0x03DED89C MOV X0, X19
	0x03DED8A0 BL 0x3DEC528
	0x03DED8A4 MOV X0, X19
	0x03DED8A8 BL 0x3DEC528
	0x03DED8AC FMOV W8, S2
	0x03DED8B0 AND W8, W8, 0x7FFFFFFF
	0x03DED8B4 MOVZ W9, 0x7F800000
	0x03DED8B8 CMP W8, W9
	0x03DED8BC B.HI 0x3DEDA10
	0x03DED8C0 MOV X0, X19
	0x03DED8C4 BL 0x3DEC528
	0x03DED8C8 FMOV W8, S3
	0x03DED8CC MOVZ W9, 0x1
	0x03DED8D0 AND W8, W8, 0x7FFFFFFF
	0x03DED8D4 MOVK W9, 0x7F800000
	0x03DED8D8 CMP W8, W9
	0x03DED8DC B.CS 0x3DEDA10
	0x03DED8E0 MOV X0, X19
	0x03DED8E4 BL 0x3DEC528
	0x03DED8E8 ADD X0, X19, 0x2C0
	0x03DED8EC MOV X1, X31
	0x03DED8F0 STR X31, [X19 + 0x1E0]
	0x03DED8F4 STR S2, [X19 + 0x1E8]
	0x03DED8F8 STR S3, [X19 + 0x1EC]
	0x03DED8FC BL 0x3DC6CF4
	0x03DED900 CBZ W0, 0x3DED90C
	0x03DED904 LDRB W8, [X19 + 0x51]
	0x03DED908 TBZ X8, 0x2, 0x3DEDA28
	0x03DED90C LDR X0, [X19 + 0x398]
	0x03DED910 CBZ X0, 0x3DEDA0C
	0x03DED914 LDR W21, [X0 + 0x18]
	0x03DED918 CMP W21, 0x1
	0x03DED91C B.LT 0x3DEDA28
	0x03DED920 ADRP X22, 0x32F000
	0x03DED924 ADRP X23, 0x306000
	0x03DED928 LDR X22, [X22 + 0xF0]
	0x03DED92C LDR X23, [X23 + 0x5A8]
	0x03DED930 MOV W20, W31
	0x03DED934 LDR X2, [X22]
	0x03DED938 MOV W1, W20
	0x03DED93C BL 0x301BCCC
	0x03DED940 CBZ X0, 0x3DEDA0C
	0x03DED944 BL 0x3DEDB84
	0x03DED948 LDR X0, [X23]
	0x03DED94C LDR V12, [X19 + 0x1E0]
	0x03DED950 MOV V10.16B, V0.16B
	0x03DED954 MOV V8.16B, V1.16B
	0x03DED958 LDR W8, [X0 + 0xE0]
	0x03DED95C MOV V11.16B, V2.16B
	0x03DED960 MOV V9.16B, V3.16B
	0x03DED964 CBNZ W8, 0x3DED96C
	0x03DED968 BL 0x1C16DFC
	0x03DED96C MOV V0.16B, V12.16B
	0x03DED970 MOV V1.16B, V10.16B
	0x03DED974 MOV X0, X31
	0x03DED978 BL 0x337EEBC
	0x03DED97C LDR V1, [X19 + 0x1E8]
	0x03DED980 LDR V2, [X19 + 0x1E0]
	0x03DED984 STR S0, [X19 + 0x1E0]
	0x03DED988 MOV X0, X31
	0x03DED98C FADD S1, S1, S2
	0x03DED990 FSUB S1, S1, S0
	0x03DED994 STR S1, [X19 + 0x1E8]
	0x03DED998 FADD S0, S0, S1
	0x03DED99C FADD S1, S11, S10
	0x03DED9A0 BL 0x337EE18
	0x03DED9A4 LDR V2, [X19 + 0x1E0]
	0x03DED9A8 LDR V1, [X19 + 0x1E4]
	0x03DED9AC MOV X0, X31
	0x03DED9B0 FSUB S0, S0, S2
	0x03DED9B4 STR S0, [X19 + 0x1E8]
	0x03DED9B8 MOV V0.16B, V1.16B
	0x03DED9BC MOV V1.16B, V8.16B
	0x03DED9C0 BL 0x337EEBC
	0x03DED9C4 LDR V1, [X19 + 0x1EC]
	0x03DED9C8 LDR V2, [X19 + 0x1E4]
	0x03DED9CC STR S0, [X19 + 0x1E4]
	0x03DED9D0 MOV X0, X31
	0x03DED9D4 FADD S1, S1, S2
	0x03DED9D8 FSUB S1, S1, S0
	0x03DED9DC STR S1, [X19 + 0x1EC]
	0x03DED9E0 FADD S0, S0, S1
	0x03DED9E4 FADD S1, S9, S8
	0x03DED9E8 BL 0x337EE18
	0x03DED9EC LDR V1, [X19 + 0x1E4]
	0x03DED9F0 ADD W20, W20, 0x1
	0x03DED9F4 CMP W21, W20
	0x03DED9F8 FSUB S0, S0, S1
	0x03DED9FC STR S0, [X19 + 0x1EC]
	0x03DEDA00 B.EQ 0x3DEDA28
	0x03DEDA04 LDR X0, [X19 + 0x398]
	0x03DEDA08 CBNZ X0, 0x3DED934
	0x03DEDA0C BL 0x1C16F20
	0x03DEDA10 MOV X0, X31
	0x03DEDA14 BL 0x3C0B398
	0x03DEDA18 STR S0, [X19 + 0x1E0]
	0x03DEDA1C STR S1, [X19 + 0x1E4]
	0x03DEDA20 STR S2, [X19 + 0x1E8]
	0x03DEDA24 STR S3, [X19 + 0x1EC]
	0x03DEDA28 LDR W8, [X19 + 0x50]
	0x03DEDA2C LDP X22, X21, [X31 + 0x40]
	0x03DEDA30 LDP X30, X23, [X31 + 0x30]
	0x03DEDA34 LDP D9, D8, [X31 + 0x20]
	0x03DEDA38 ORR W8, W8, 0x10
	0x03DEDA3C STR W8, [X19 + 0x50]
	0x03DEDA40 LDP X20, X19, [X31 + 0x50]
	0x03DEDA44 LDP D11, D10, [X31 + 0x10]
	0x03DEDA48 LDR V12, [X31], #0x60
	0x03DEDA4C RET
	0x03DEDA50 STP X30, X19, [X31 - 0x10]!
	0x03DEDA54 LDRB W8, [X0 + 0x50]
	0x03DEDA58 MOVZ W9, 0x19
	0x03DEDA5C MOV X19, X0
	0x03DEDA60 ANDS W31, W8, W9, 0x0
	0x03DEDA64 B.EQ 0x3DEDA7C
	0x03DEDA68 MOV X0, X19
	0x03DEDA6C BL 0x3DEDA94
	0x03DEDA70 LDR W8, [X19 + 0x50]
	0x03DEDA74 AND W8, W8, 0xFFFFFFEF
	0x03DEDA78 STR W8, [X19 + 0x50]
	0x03DEDA7C LDR V3, [X19 + 0x1FC]
	0x03DEDA80 LDR V2, [X19 + 0x1F8]
	0x03DEDA84 LDR V1, [X19 + 0x1F4]
	0x03DEDA88 LDR V0, [X19 + 0x1F0]
	0x03DEDA8C LDP X30, X19, [X31], #0x10
	0x03DEDA90 RET
	0x03DEDA94 STP D11, D10, [X31 - 0x40]!
	0x03DEDA98 STP D9, D8, [X31 + 0x10]
	0x03DEDA9C STP X30, X21, [X31 + 0x20]
	0x03DEDAA0 STP X20, X19, [X31 + 0x30]
	0x03DEDAA4 ADRP X20, 0x5FB000
	0x03DEDAA8 LDRB W8, [X20 + 0x23E]
	0x03DEDAAC MOV X19, X0
	0x03DEDAB0 TBNZ X8, 0x0, 0x3DEDAC8
	0x03DEDAB4 ADRP X0, 0x32E000
	0x03DEDAB8 LDR X0, [X0 + 0x898]
	0x03DEDABC BL 0x1C16CF4
	0x03DEDAC0 MOVZ W8, 0x1
	0x03DEDAC4 STRB W8, [X20 + 0x23E]
	0x03DEDAC8 ADRP X20, 0x32E000
	0x03DEDACC LDR X20, [X20 + 0x898]
	0x03DEDAD0 MOV X0, X19
	0x03DEDAD4 BL 0x3DED804
	0x03DEDAD8 LDRB W8, [X19 + 0x50]
	0x03DEDADC STR S0, [X19 + 0x1F0]
	0x03DEDAE0 STR S1, [X19 + 0x1F4]
	0x03DEDAE4 STR S2, [X19 + 0x1F8]
	0x03DEDAE8 STR S3, [X19 + 0x1FC]
	0x03DEDAEC TBZ X8, 0x0, 0x3DEDAF8
	0x03DEDAF0 MOV X0, X19
	0x03DEDAF4 BL 0x3DEDDB0
	0x03DEDAF8 LDR X0, [X20]
	0x03DEDAFC LDR W8, [X0 + 0xE0]
	0x03DEDB00 CBNZ W8, 0x3DEDB08
	0x03DEDB04 BL 0x1C16DFC
	0x03DEDB08 ADRP X21, 0x5FA000
	0x03DEDB0C LDRB W8, [X21 + 0xBE1]
	0x03DEDB10 CBNZ W8, 0x3DEDB28
	0x03DEDB14 ADRP X0, 0x32E000
	0x03DEDB18 LDR X0, [X0 + 0x898]
	0x03DEDB1C BL 0x1C16CF4
	0x03DEDB20 MOVZ W8, 0x1
	0x03DEDB24 STRB W8, [X21 + 0xBE1]
	0x03DEDB28 LDR X0, [X20]
	0x03DEDB2C LDR V11, [X19 + 0x1F0]
	0x03DEDB30 LDR V10, [X19 + 0x1F4]
	0x03DEDB34 LDR V8, [X19 + 0x1F8]
	0x03DEDB38 LDR W8, [X0 + 0xE0]
	0x03DEDB3C LDR V9, [X19 + 0x1FC]
	0x03DEDB40 CBNZ W8, 0x3DEDB48
	0x03DEDB44 BL 0x1C16DFC
	0x03DEDB48 ADD X0, X19, 0x200
	0x03DEDB4C MOV V0.16B, V11.16B
	0x03DEDB50 MOV V1.16B, V10.16B
	0x03DEDB54 MOV V2.16B, V8.16B
	0x03DEDB58 MOV V3.16B, V9.16B
	0x03DEDB5C BL 0x3DF7298
	0x03DEDB60 STR S0, [X19 + 0x1F0]
	0x03DEDB64 STR S1, [X19 + 0x1F4]
	0x03DEDB68 STR S2, [X19 + 0x1F8]
	0x03DEDB6C STR S3, [X19 + 0x1FC]
	0x03DEDB70 LDP X20, X19, [X31 + 0x30]
	0x03DEDB74 LDP X30, X21, [X31 + 0x20]
	0x03DEDB78 LDP D9, D8, [X31 + 0x10]
	0x03DEDB7C LDP D11, D10, [X31], #0x40
	0x03DEDB80 RET
	0x03DEDB84 SUB X31, X31, 0x20
	0x03DEDB88 STP X30, X19, [X31 + 0x10]
	0x03DEDB8C MOV X19, X0
	0x03DEDB90 BL 0x3DED804
	0x03DEDB94 ADD X1, X31, 0x0
	0x03DEDB98 MOV X0, X19
	0x03DEDB9C MOV X2, X31
	0x03DEDBA0 STP S0, S1, [X31]
	0x03DEDBA4 STP S2, S3, [X31 + 0x8]
	0x03DEDBA8 BL 0x3DF8034
	0x03DEDBAC LDP S0, S1, [X31]
	0x03DEDBB0 LDP S2, S3, [X31 + 0x8]
	0x03DEDBB4 LDP X30, X19, [X31 + 0x10]
	0x03DEDBB8 ADD X31, X31, 0x20
	0x03DEDBBC RET
	0x03DEDBC0 STP X30, X19, [X31 - 0x10]!
	0x03DEDBC4 MOV X19, X0
	0x03DEDBC8 ADD X0, X0, 0x2C0
	0x03DEDBCC MOV X1, X31
	0x03DEDBD0 BL 0x3DC6CF4
	0x03DEDBD4 CBZ W0, 0x3DEDBE4
	0x03DEDBD8 LDRB W8, [X19 + 0x51]
	0x03DEDBDC ANDS W31, W8, 0x4
	0x03DEDBE0 CSET W0, EQ
	0x03DEDBE4 LDP X30, X19, [X31], #0x10
	0x03DEDBE8 RET
	0x03DEDBEC STP X30, X19, [X31 - 0x10]!
	0x03DEDBF0 LDRB W8, [X0 + 0x50]
	0x03DEDBF4 MOV X19, X0
	0x03DEDBF8 TBZ X8, 0x0, 0x3DEDC04
	0x03DEDBFC MOV X0, X19
	0x03DEDC00 BL 0x3DEDDB0
	0x03DEDC04 ADD X0, X19, 0x200
	0x03DEDC08 LDP X30, X19, [X31], #0x10
	0x03DEDC0C RET
	0x03DEDC10 STP D9, D8, [X31 - 0x30]!
	0x03DEDC14 STP X30, X21, [X31 + 0x10]
	0x03DEDC18 STP X20, X19, [X31 + 0x20]
	0x03DEDC1C ADRP X20, 0x5FB000
	0x03DEDC20 LDRB W8, [X20 + 0x23F]
	0x03DEDC24 MOV X19, X0
	0x03DEDC28 TBNZ X8, 0x0, 0x3DEDC40
	0x03DEDC2C ADRP X0, 0x32E000
	0x03DEDC30 LDR X0, [X0 + 0x898]
	0x03DEDC34 BL 0x1C16CF4
	0x03DEDC38 MOVZ W8, 0x1
	0x03DEDC3C STRB W8, [X20 + 0x23F]
	0x03DEDC40 ADRP X20, 0x32E000
	0x03DEDC44 LDR X20, [X20 + 0x898]
	0x03DEDC48 MOV X0, X19
	0x03DEDC4C BL 0x3DEC528
	0x03DEDC50 LDRB W8, [X19 + 0x50]
	0x03DEDC54 MOV V8.16B, V2.16B
	0x03DEDC58 MOV V9.16B, V3.16B
	0x03DEDC5C TBZ X8, 0x0, 0x3DEDC68
	0x03DEDC60 MOV X0, X19
	0x03DEDC64 BL 0x3DEDDB0
	0x03DEDC68 LDR X0, [X20]
	0x03DEDC6C LDR W8, [X0 + 0xE0]
	0x03DEDC70 CBNZ W8, 0x3DEDC78
	0x03DEDC74 BL 0x1C16DFC
	0x03DEDC78 ADRP X21, 0x5FA000
	0x03DEDC7C LDRB W8, [X21 + 0xBE1]
	0x03DEDC80 CBNZ W8, 0x3DEDC98
	0x03DEDC84 ADRP X0, 0x32E000
	0x03DEDC88 LDR X0, [X0 + 0x898]
	0x03DEDC8C BL 0x1C16CF4
	0x03DEDC90 MOVZ W8, 0x1
	0x03DEDC94 STRB W8, [X21 + 0xBE1]
	0x03DEDC98 LDR X0, [X20]
	0x03DEDC9C LDR W8, [X0 + 0xE0]
	0x03DEDCA0 CBNZ W8, 0x3DEDCA8
	0x03DEDCA4 BL 0x1C16DFC
	0x03DEDCA8 ADD X0, X19, 0x200
	0x03DEDCAC LDP X20, X19, [X31 + 0x20]
	0x03DEDCB0 LDP X30, X21, [X31 + 0x10]
	0x03DEDCB4 FMOV S0, W31
	0x03DEDCB8 FMOV S1, W31
	0x03DEDCBC MOV V2.16B, V8.16B
	0x03DEDCC0 MOV V3.16B, V9.16B
	0x03DEDCC4 LDP D9, D8, [X31], #0x30
	0x03DEDCC8 B 0x3DF7298
	0x03DEDCCC SUB X31, X31, 0x20
	0x03DEDCD0 STP X30, X19, [X31 + 0x10]
	0x03DEDCD4 MOV X19, X0
	0x03DEDCD8 BL 0x3DEC528
	0x03DEDCDC ADD X1, X31, 0x0
	0x03DEDCE0 MOV X0, X19
	0x03DEDCE4 MOV X2, X31
	0x03DEDCE8 STR X31, [X31]
	0x03DEDCEC STP S2, S3, [X31 + 0x8]
	0x03DEDCF0 BL 0x3DF8034
	0x03DEDCF4 LDP S0, S1, [X31]
	0x03DEDCF8 LDP S2, S3, [X31 + 0x8]
	0x03DEDCFC LDP X30, X19, [X31 + 0x10]
	0x03DEDD00 ADD X31, X31, 0x20
	0x03DEDD04 RET
	0x03DEDD08 LDR W8, [X0 + 0x50]
	0x03DEDD0C AND W0, W8, 0x1
	0x03DEDD10 RET
	0x03DEDD14 STR X30, [X31 - 0x10]!
	0x03DEDD18 CBZ X0, 0x3DEDD30
	0x03DEDD1C LDR W8, [X0 + 0x50]
	0x03DEDD20 BFM W8, W1, 0x0, 0x0
	0x03DEDD24 STR W8, [X0 + 0x50]
	0x03DEDD28 LDR X30, [X31], #0x10
	0x03DEDD2C RET
	0x03DEDD30 BL 0x1C16F20
	0x03DEDD34 STR X30, [X31 - 0x10]!
	0x03DEDD38 CBZ X0, 0x3DEDD60
	0x03DEDD3C LDR W8, [X0 + 0x50]
	0x03DEDD40 ANDS W31, W1, 0x1
	0x03DEDD44 MOVZ W9, 0x2
	0x03DEDD48 CSEL W9, W9, W31, NE
	0x03DEDD4C AND W8, W8, 0xFFFFFFFD
	0x03DEDD50 ORR W8, W8, W9, 0x0
	0x03DEDD54 STR W8, [X0 + 0x50]
	0x03DEDD58 LDR X30, [X31], #0x10
	0x03DEDD5C RET
	0x03DEDD60 BL 0x1C16F20
	0x03DEDD64 LDRB W8, [X0 + 0x50]
	0x03DEDD68 ANDS W31, W8, 0x3
	0x03DEDD6C CSET W0, NE
	0x03DEDD70 RET
	0x03DEDD74 STR X30, [X31 - 0x20]!
	0x03DEDD78 STP X20, X19, [X31 + 0x10]
	0x03DEDD7C LDRB W9, [X0 + 0x50]
	0x03DEDD80 MOV X20, X0
	0x03DEDD84 MOV X19, X8
	0x03DEDD88 TBZ X9, 0x0, 0x3DEDD94
	0x03DEDD8C MOV X0, X20
	0x03DEDD90 BL 0x3DEDDB0
	0x03DEDD94 LDP V1, V0, [X20 + 0x220]
	0x03DEDD98 LDP V3, V2, [X20 + 0x200]
	0x03DEDD9C STP V1, V0, [X19 + 0x20]

ISIL:
	001 Move [X31-128], D15
	002 Move [X31-120], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X20, 0x5FC000
	017 Move W8, [X20+569]
	018 Move V8, V3
	019 Move V9, V2
	020 Move V10, V1
	021 Move V11, V0
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, 0x330000
	028 Move X0, [X0+296]
	029 Call 0x1C17CF4
	030 Move X0, 0x376000
	031 Move X0, [X0+2728]
	032 Call 0x1C17CF4
	033 Move X0, 0x37D000
	034 Move X0, [X0+600]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+569], W8
	038 Move X8, [X19+696]
	039 Compare X8, 0
	040 JumpIfNotEqual {50}
	041 Move X8, 0x37D000
	042 Move X8, [X8+600]
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X2, X31
	047 Move X20, X0
	048 Call YogaNode..ctor, X0, X1
	049 Move [X19+696], X20
	050 Move W8, [X19+80]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 64
	053 Compare TEMP, 64
	054 JumpIfNotEqual {63}
	055 Move V0, [X19+464]
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 Move V0, [X19+476]
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 Move V0, [X19+472]
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 Move V0, [X19+468]
	062 NotImplemented "Instruction FCMP not yet implemented."
	063 Move X0, X19
	064 Call VisualElement.get_layout, X0
	065 Move X20, 0x5ED000
	066 Move W8, [X20+1450]
	067 Move V15, V0
	068 Move V14, V1
	069 Move V13, V2
	070 Move V12, V3
	071 Compare W8, 0
	072 JumpIfNotEqual {78}
	073 Move X0, 0x30E000
	074 Move X0, [X0+1208]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X20+1450], W8
	078 Move X8, 0x30E000
	079 Move X8, [X8+1208]
	080 Move X9, -53485568
	081 Move V0, [X9+576]
	082 NotImplemented "Instruction FABS not yet implemented."
	083 Move X8, [X8]
	084 NotImplemented "Instruction FABS not yet implemented."
	085 NotImplemented "Instruction FCMP not yet implemented."
	086 NotImplemented "Instruction FCSEL not yet implemented."
	087 Move X9, [X8+184]
	088 Move S1, 8
	089 Multiply S4, S2, S0
	090 Move V3, [X9]
	091 Multiply S2, S3, S1
	092 NotImplemented "Instruction FCMP not yet implemented."
	093 NotImplemented "Instruction FCSEL not yet implemented."
	094 NotImplemented "Instruction FABD not yet implemented."
	095 NotImplemented "Instruction FCMP not yet implemented."
	096 NotImplemented "Instruction FABS not yet implemented."
	097 NotImplemented "Instruction FABS not yet implemented."
	098 NotImplemented "Instruction FCMP not yet implemented."
	099 NotImplemented "Instruction FCSEL not yet implemented."
	100 Multiply S3, S3, S0
	101 NotImplemented "Instruction FCMP not yet implemented."
	102 NotImplemented "Instruction FCSEL not yet implemented."
	103 NotImplemented "Instruction FABD not yet implemented."
	104 NotImplemented "Instruction FCMP not yet implemented."
	105 Move W20, W31
	106 Move W20, 512
	107 Move X8, [X8+184]
	108 NotImplemented "Instruction FABS not yet implemented."
	109 NotImplemented "Instruction FABS not yet implemented."
	110 NotImplemented "Instruction FCMP not yet implemented."
	111 Move V4, [X8]
	112 NotImplemented "Instruction FCSEL not yet implemented."
	113 Move X21, 0x376000
	114 Multiply S2, S2, S0
	115 Multiply S1, S4, S1
	116 Move X21, [X21+2728]
	117 NotImplemented "Instruction FCMP not yet implemented."
	118 NotImplemented "Instruction FCSEL not yet implemented."
	119 NotImplemented "Instruction FABD not yet implemented."
	120 NotImplemented "Instruction FCMP not yet implemented."
	121 NotImplemented "Instruction FABS not yet implemented."
	122 NotImplemented "Instruction FABS not yet implemented."
	123 NotImplemented "Instruction FCMP not yet implemented."
	124 NotImplemented "Instruction FCSEL not yet implemented."
	125 Multiply S0, S2, S0
	126 NotImplemented "Instruction FCMP not yet implemented."
	127 NotImplemented "Instruction FCSEL not yet implemented."
	128 NotImplemented "Instruction FABD not yet implemented."
	129 NotImplemented "Instruction FCMP not yet implemented."
	130 Or W20, W20, 1024
	131 Move W8, [X19+80]
	132 Move X0, X19
	133 Move [X19+464], S11
	134 Move [X19+468], S10
	135 Or W8, W8, 64
	136 Move [X19+472], S9
	137 Move [X19+476], S8
	138 Move [X19+80], W8
	139 Call VisualElement.get_style, X0
	140 Move X1, [X21]
	141 Move X21, X0
	142 Move W0, 1
	143 Call 0x266FACC, X0
	144 Compare X21, 0
	145 JumpIfEqual {516}
	146 Move X24, 0x330000
	147 Move X8, [X21]
	148 Move X24, [X24+296]
	149 Move X22, X0
	150 NotImplemented "Instruction LDRH not yet implemented."
	151 Move X1, [X24]
	152 Compare X9, 0
	153 JumpIfEqual {160}
	154 Move X10, [X8+176]
	155 Add X10, X10, 8
	156 NotImplemented "Instruction LDUR not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Subtract X9, X9, 1
	159 Add X10, X10, 16
	160 Move W2, 40
	161 Move X0, X21
	162 Call 0x1C5D788
	163 Move W9, [X10]
	164 Add W9, W9, 40
	165 Add X8, X8, W9
	166 Add X0, X8, 312
	167 Move X8, [X0]
	168 Move X2, [X0+8]
	169 Move X0, X21
	170 Move X1, X22
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move S0, W31
	173 Move X0, X31
	174 Call StyleLength.op_Implicit, V0
	175 Move X9, [X21]
	176 Move X8, [X24]
	177 Move X22, X0
	178 And X23, X1, 0
	179 NotImplemented "Instruction LDRH not yet implemented."
	180 Compare X10, 0
	181 JumpIfEqual {188}
	182 Move X11, [X9+176]
	183 Add X11, X11, 8
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract X10, X10, 1
	187 Add X11, X11, 16
	188 Move W2, 27
	189 Move X0, X21
	190 Move X1, X8
	191 Call 0x1C5D788
	192 Move W8, [X11]
	193 Add W8, W8, 27
	194 Add X8, X9, W8
	195 Add X0, X8, 312
	196 Move X8, [X0]
	197 Move X3, [X0+8]
	198 Move X0, X21
	199 Move X1, X22
	200 Move X2, X23
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Move S0, W31
	203 Move X0, X31
	204 Call StyleLength.op_Implicit, V0
	205 Move X9, [X21]
	206 Move X8, [X24]
	207 Move X22, X0
	208 And X23, X1, 0
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Compare X10, 0
	211 JumpIfEqual {218}
	212 Move X11, [X9+176]
	213 Add X11, X11, 8
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract X10, X10, 1
	217 Add X11, X11, 16
	218 Move W2, 28
	219 Move X0, X21
	220 Move X1, X8
	221 Call 0x1C5D788
	222 Move W8, [X11]
	223 Add W8, W8, 28
	224 Add X8, X9, W8
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X3, [X0+8]
	228 Move X0, X21
	229 Move X1, X22
	230 Move X2, X23
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Move S0, W31
	233 Move X0, X31
	234 Call StyleLength.op_Implicit, V0
	235 Move X9, [X21]
	236 Move X8, [X24]
	237 Move X22, X0
	238 And X23, X1, 0
	239 NotImplemented "Instruction LDRH not yet implemented."
	240 Compare X10, 0
	241 JumpIfEqual {248}
	242 Move X11, [X9+176]
	243 Add X11, X11, 8
	244 NotImplemented "Instruction LDUR not yet implemented."
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Subtract X10, X10, 1
	247 Add X11, X11, 16
	248 Move W2, 26
	249 Move X0, X21
	250 Move X1, X8
	251 Call 0x1C5D788
	252 Move W8, [X11]
	253 Add W8, W8, 26
	254 Add X8, X9, W8
	255 Add X0, X8, 312
	256 Move X8, [X0]
	257 Move X3, [X0+8]
	258 Move X0, X21
	259 Move X1, X22
	260 Move X2, X23
	261 NotImplemented "Instruction BLR not yet implemented."
	262 Move S0, W31
	263 Move X0, X31
	264 Call StyleLength.op_Implicit, V0
	265 Move X9, [X21]
	266 Move X8, [X24]
	267 Move X22, X0
	268 And X23, X1, 0
	269 NotImplemented "Instruction LDRH not yet implemented."
	270 Compare X10, 0
	271 JumpIfEqual {278}
	272 Move X11, [X9+176]
	273 Add X11, X11, 8
	274 NotImplemented "Instruction LDUR not yet implemented."
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Subtract X10, X10, 1
	277 Add X11, X11, 16
	278 Move W2, 29
	279 Move X0, X21
	280 Move X1, X8
	281 Call 0x1C5D788
	282 Move W8, [X11]
	283 Add W8, W8, 29
	284 Add X8, X9, W8
	285 Add X0, X8, 312
	286 Move X8, [X0]
	287 Move X3, [X0+8]
	288 Move X0, X21
	289 Move X1, X22
	290 Move X2, X23
	291 NotImplemented "Instruction BLR not yet implemented."
	292 Move V0, V11
	293 Move X0, X31
	294 Call StyleLength.op_Implicit, V0
	295 Move X9, [X21]
	296 Move X8, [X24]
	297 Move X22, X0
	298 And X23, X1, 0
	299 NotImplemented "Instruction LDRH not yet implemented."
	300 Compare X10, 0
	301 JumpIfEqual {308}
	302 Move X11, [X9+176]
	303 Add X11, X11, 8
	304 NotImplemented "Instruction LDUR not yet implemented."
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Subtract X10, X10, 1
	307 Add X11, X11, 16
	308 Move W2, 25
	309 Move X0, X21
	310 Move X1, X8
	311 Call 0x1C5D788
	312 Move W8, [X11]
	313 Add W8, W8, 25
	314 Add X8, X9, W8
	315 Add X0, X8, 312
	316 Move X8, [X0]
	317 Move X3, [X0+8]
	318 Move X0, X21
	319 Move X1, X22
	320 Move X2, X23
	321 NotImplemented "Instruction BLR not yet implemented."
	322 Move V0, V10
	323 Move X0, X31
	324 Call StyleLength.op_Implicit, V0
	325 Move X9, [X21]
	326 Move X8, [X24]
	327 Move X22, X0
	328 And X23, X1, 0
	329 NotImplemented "Instruction LDRH not yet implemented."
	330 Compare X10, 0
	331 JumpIfEqual {338}
	332 Move X11, [X9+176]
	333 Add X11, X11, 8
	334 NotImplemented "Instruction LDUR not yet implemented."
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Subtract X10, X10, 1
	337 Add X11, X11, 16
	338 Move W2, 45
	339 Move X0, X21
	340 Move X1, X8
	341 Call 0x1C5D788
	342 Move W8, [X11]
	343 Add W8, W8, 45
	344 Add X8, X9, W8
	345 Add X0, X8, 312
	346 Move X8, [X0]
	347 Move X3, [X0+8]
	348 Move X0, X21
	349 Move X1, X22
	350 Move X2, X23
	351 NotImplemented "Instruction BLR not yet implemented."
	352 Move W8, 0x7FC00000
	353 Move S0, W8
	354 Move X0, X31
	355 Call StyleLength.op_Implicit, V0
	356 Move X9, [X21]
	357 Move X8, [X24]
	358 Move X22, X0
	359 And X23, X1, 0
	360 NotImplemented "Instruction LDRH not yet implemented."
	361 Compare X10, 0
	362 JumpIfEqual {369}
	363 Move X11, [X9+176]
	364 Add X11, X11, 8
	365 NotImplemented "Instruction LDUR not yet implemented."
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Subtract X10, X10, 1
	368 Add X11, X11, 16
	369 Move W2, 41
	370 Move X0, X21
	371 Move X1, X8
	372 Call 0x1C5D788
	373 Move W8, [X11]
	374 Add W8, W8, 41
	375 Add X8, X9, W8
	376 Add X0, X8, 312
	377 Move X8, [X0]
	378 Move X3, [X0+8]
	379 Move X0, X21
	380 Move X1, X22
	381 Move X2, X23
	382 NotImplemented "Instruction BLR not yet implemented."
	383 Move W8, 0x7FC00000
	384 Move S0, W8
	385 Move X0, X31
	386 Call StyleLength.op_Implicit, V0
	387 Move X9, [X21]
	388 Move X8, [X24]
	389 Move X22, X0
	390 And X23, X1, 0
	391 NotImplemented "Instruction LDRH not yet implemented."
	392 Compare X10, 0
	393 JumpIfEqual {400}
	394 Move X11, [X9+176]
	395 Add X11, X11, 8
	396 NotImplemented "Instruction LDUR not yet implemented."
	397 NotImplemented "Instruction CMP not yet implemented."
	398 Subtract X10, X10, 1
	399 Add X11, X11, 16
	400 Move W2, 14
	401 Move X0, X21
	402 Move X1, X8
	403 Call 0x1C5D788
	404 Move W8, [X11]
	405 Add W8, W8, 14
	406 Add X8, X9, W8
	407 Add X0, X8, 312
	408 Move X8, [X0]
	409 Move X3, [X0+8]
	410 Move X0, X21
	411 Move X1, X22
	412 Move X2, X23
	413 NotImplemented "Instruction BLR not yet implemented."
	414 Move V0, V9
	415 Move X0, X31
	416 Call StyleLength.op_Implicit, V0
	417 Move X9, [X21]
	418 Move X8, [X24]
	419 Move X22, X0
	420 And X23, X1, 0
	421 NotImplemented "Instruction LDRH not yet implemented."
	422 Compare X10, 0
	423 JumpIfEqual {430}
	424 Move X11, [X9+176]
	425 Add X11, X11, 8
	426 NotImplemented "Instruction LDUR not yet implemented."
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Subtract X10, X10, 1
	429 Add X11, X11, 16
	430 Move W2, 54
	431 Move X0, X21
	432 Move X1, X8
	433 Call 0x1C5D788
	434 Move W8, [X11]
	435 Add W8, W8, 54
	436 Add X8, X9, W8
	437 Add X0, X8, 312
	438 Move X8, [X0]
	439 Move X3, [X0+8]
	440 Move X0, X21
	441 Move X1, X22
	442 Move X2, X23
	443 NotImplemented "Instruction BLR not yet implemented."
	444 Move V0, V8
	445 Move X0, X31
	446 Call StyleLength.op_Implicit, V0
	447 Move X9, [X21]
	448 Move X8, [X24]
	449 Move X22, X0
	450 And X23, X1, 0
	451 NotImplemented "Instruction LDRH not yet implemented."
	452 Compare X10, 0
	453 JumpIfEqual {460}
	454 Move X11, [X9+176]
	455 Add X11, X11, 8
	456 NotImplemented "Instruction LDUR not yet implemented."
	457 NotImplemented "Instruction CMP not yet implemented."
	458 Subtract X10, X10, 1
	459 Add X11, X11, 16
	460 Move W2, 24
	461 Move X0, X21
	462 Move X1, X8
	463 Call 0x1C5D788
	464 Move W8, [X11]
	465 Add W8, W8, 24
	466 Add X8, X9, W8
	467 Add X0, X8, 312
	468 Move X8, [X0]
	469 Move X3, [X0+8]
	470 Move X0, X21
	471 Move X1, X22
	472 Move X2, X23
	473 NotImplemented "Instruction BLR not yet implemented."
	474 Compare W20, 0
	475 JumpIfEqual {500}
	476 Move X0, [X19+928]
	477 Compare X0, 0
	478 JumpIfEqual {500}
	479 Move X8, [X0]
	480 Move X1, X19
	481 Move W2, W20
	482 Move X20, [X31+112]
	483 Move X19, [X31+120]
	484 Move X4, [X8+824]
	485 Move X3, [X8+832]
	486 Move X22, [X31+96]
	487 Move X21, [X31+104]
	488 Move X24, [X31+80]
	489 Move X23, [X31+88]
	490 Move X30, [X31+64]
	491 Move D9, [X31+48]
	492 Move D8, [X31+56]
	493 Move D11, [X31+32]
	494 Move D10, [X31+40]
	495 Move D13, [X31+16]
	496 Move D12, [X31+24]
	497 Move D15, [X31+128]
	498 Move D14, [X31+136]
	499 CallNoReturn X4
	500 Move X20, [X31+112]
	501 Move X19, [X31+120]
	502 Move X22, [X31+96]
	503 Move X21, [X31+104]
	504 Move X24, [X31+80]
	505 Move X23, [X31+88]
	506 Move X30, [X31+64]
	507 Move D9, [X31+48]
	508 Move D8, [X31+56]
	509 Move D11, [X31+32]
	510 Move D10, [X31+40]
	511 Move D13, [X31+16]
	512 Move D12, [X31+24]
	513 Move D15, [X31+128]
	514 Move D14, [X31+136]
	515 Return 
	516 Call 0x1C17F20

Method: System.Void ClearManualLayout()

Disassembly:
	0x03DEDDA0 STP V3, V2, [X19]
	0x03DEDDA4 LDP X20, X19, [X31 + 0x10]
	0x03DEDDA8 LDR X30, [X31], #0x20
	0x03DEDDAC RET
	0x03DEDDB0 SUB X31, X31, 0xD0
	0x03DEDDB4 STR D8, [X31 + 0x90]
	0x03DEDDB8 STP X30, X23, [X31 + 0xA0]
	0x03DEDDBC STP X22, X21, [X31 + 0xB0]
	0x03DEDDC0 STP X20, X19, [X31 + 0xC0]
	0x03DEDDC4 ADRP X20, 0x5FB000
	0x03DEDDC8 LDRB W8, [X20 + 0x240]
	0x03DEDDCC MOV X19, X0
	0x03DEDDD0 TBNZ X8, 0x0, 0x3DEDDE8
	0x03DEDDD4 ADRP X0, 0x32E000
	0x03DEDDD8 LDR X0, [X0 + 0x898]
	0x03DEDDDC BL 0x1C16CF4
	0x03DEDDE0 MOVZ W8, 0x1
	0x03DEDDE4 STRB W8, [X20 + 0x240]
	0x03DEDDE8 MOVI V0.2D, 0x0
	0x03DEDDEC STP V0, V0, [X31 + 0x50]
	0x03DEDDF0 STP V0, V0, [X31 + 0x30]
	0x03DEDDF4 LDR X8, [X19 + 0x3A0]
	0x03DEDDF8 CBZ X8, 0x3DEDE10
	0x03DEDDFC LDRB W8, [X8 + 0x4C]
	0x03DEDE00 CBNZ W8, 0x3DEDE10
	0x03DEDE04 LDR W8, [X19 + 0x50]
	0x03DEDE08 AND W8, W8, 0xFFFFFFFE
	0x03DEDE0C STR W8, [X19 + 0x50]
	0x03DEDE10 LDR X8, [X19 + 0x378]
	0x03DEDE14 ADD X0, X31, 0x98
	0x03DEDE18 MOV X1, X31
	0x03DEDE1C STR X8, [X31 + 0x98]
	0x03DEDE20 BL 0x3DF88DC
	0x03DEDE24 CBZ X0, 0x3DEE040
	0x03DEDE28 ADD X20, X19, 0x2C0
	0x03DEDE2C ADD X8, X31, 0x78
	0x03DEDE30 MOV X0, X20
	0x03DEDE34 MOV X1, X31
	0x03DEDE38 BL 0x3DC9B70
	0x03DEDE3C LDR V0, [X31 + 0x78]
	0x03DEDE40 FCMP S0, 0x0
	0x03DEDE44 B.NE 0x3DEDFD4
	0x03DEDE48 MOV X0, X20
	0x03DEDE4C MOV X1, X31
	0x03DEDE50 BL 0x3DC9BD8
	0x03DEDE54 ADRP X20, 0x5EB000
	0x03DEDE58 LDRB W8, [X20 + 0x85B]
	0x03DEDE5C UBFM X9, X0, 0x20, 0x3F
	0x03DEDE60 FMOV S3, W9
	0x03DEDE64 FMOV S8, W0
	0x03DEDE68 UNIMPLEMENTED
	0x03DEDE6C CBNZ W8, 0x3DEDE8C
	0x03DEDE70 ADRP X0, 0x306000
	0x03DEDE74 LDR X0, [X0 + 0x5A0]
	0x03DEDE78 STR V3, [X31 + 0x2]
	0x03DEDE7C BL 0x1C16CF4
	0x03DEDE80 LDR V3, [X31 + 0x2]
	0x03DEDE84 MOVZ W8, 0x1
	0x03DEDE88 STRB W8, [X20 + 0x85B]
	0x03DEDE8C ADRP X8, 0x306000
	0x03DEDE90 LDR X8, [X8 + 0x5A0]
	0x03DEDE94 LDR X8, [X8]
	0x03DEDE98 LDR X8, [X8 + 0xB8]
	0x03DEDE9C LDR V0, [X8 + 0xC]
	0x03DEDEA0 LDR V1, [X8 + 0x10]
	0x03DEDEA4 ADRP X8, 0xFFFFFFFFFCCFC000
	0x03DEDEA8 LDR V2, [X8 + 0xF20]
	0x03DEDEAC FSUB S0, S8, S0
	0x03DEDEB0 FSUB V1.2S, V3.2S, V1.2S
	0x03DEDEB4 FMUL S0, S0, S0
	0x00000000 INVALID
	0x03DEDEBC FADD S0, S0, S1
	0x03DEDEC0 MOV S1, V1.S[1]
	0x03DEDEC4 FADD S0, S1, S0
	0x03DEDEC8 FCMP S0, S2
	0x03DEDECC B.PL 0x3DEDFD4
	0x03DEDED0 LDR X8, [X19 + 0x378]
	0x03DEDED4 ADD X0, X31, 0x98
	0x03DEDED8 MOV X1, X31
	0x03DEDEDC STR X8, [X31 + 0x98]
	0x03DEDEE0 BL 0x3DF88DC
	0x03DEDEE4 CBZ X0, 0x3DEE074
	0x03DEDEE8 LDRB W8, [X0 + 0x50]
	0x03DEDEEC MOV X20, X0
	0x03DEDEF0 TBZ X8, 0x0, 0x3DEDEFC
	0x03DEDEF4 MOV X0, X20
	0x03DEDEF8 BL 0x3DEDDB0
	0x03DEDEFC MOV X0, X19
	0x03DEDF00 BL 0x3DEE0F4
	0x03DEDF04 STR D0, [X31 + 0x20]
	0x03DEDF08 STR D1, [X31 + 0x10]
	0x03DEDF0C ADRP X21, 0x32E000
	0x03DEDF10 LDR X21, [X21 + 0x898]
	0x03DEDF14 STR D2, [X31]
	0x03DEDF18 LDR X0, [X21]
	0x03DEDF1C LDR W8, [X0 + 0xE0]
	0x03DEDF20 CBNZ W8, 0x3DEDF28
	0x03DEDF24 BL 0x1C16DFC
	0x03DEDF28 ADRP X23, 0x5FB000
	0x03DEDF2C LDRB W8, [X23 + 0x289]
	0x03DEDF30 ADD X22, X20, 0x200
	0x03DEDF34 ADD X20, X19, 0x200
	0x03DEDF38 CBNZ W8, 0x3DEDF50
	0x03DEDF3C ADRP X0, 0x32E000
	0x03DEDF40 LDR X0, [X0 + 0x898]
	0x03DEDF44 BL 0x1C16CF4
	0x03DEDF48 MOVZ W8, 0x1
	0x03DEDF4C STRB W8, [X23 + 0x289]
	0x03DEDF50 LDP V1, V0, [X22 + 0x20]
	0x03DEDF54 LDP V3, V2, [X22]
	0x03DEDF58 STP V1, V0, [X20 + 0x20]
	0x03DEDF5C STP V3, V2, [X20]
	0x03DEDF60 LDR X0, [X21]
	0x03DEDF64 LDR W8, [X0 + 0xE0]
	0x03DEDF68 CBNZ W8, 0x3DEDF70
	0x03DEDF6C BL 0x1C16DFC
	0x03DEDF70 LDR V0, [X19 + 0x200]
	0x03DEDF74 LDR V1, [X19 + 0x210]
	0x03DEDF78 LDR V2, [X19 + 0x208]
	0x03DEDF7C LDR V4, [X19 + 0x218]
	0x03DEDF80 LDP V6, V5, [X31 + 0x10]
	0x03DEDF84 LDR V3, [X19 + 0x220]
	0x00000000 INVALID
	0x03DEDF8C FMUL S2, S5, S2
	0x03DEDF90 LDR V5, [X19 + 0x228]
	0x00000000 INVALID
	0x03DEDF98 FMUL S4, S6, S4
	0x03DEDF9C LDR V6, [X31]
	0x03DEDFA0 FADD V0.2S, V0.2S, V1.2S
	0x03DEDFA4 LDR V1, [X19 + 0x238]
	0x03DEDFA8 FADD S2, S2, S4
	0x00000000 INVALID
	0x03DEDFB0 FMUL S5, S6, S5
	0x03DEDFB4 LDR V6, [X19 + 0x230]
	0x03DEDFB8 FADD V0.2S, V0.2S, V3.2S
	0x03DEDFBC FADD S2, S2, S5
	0x03DEDFC0 FADD S1, S1, S2
	0x03DEDFC4 FADD V0.2S, V6.2S, V0.2S
	0x03DEDFC8 STR D0, [X19 + 0x230]
	0x03DEDFCC STR S1, [X19 + 0x238]
	0x03DEDFD0 B 0x3DEE04C
	0x03DEDFD4 ADD X1, X31, 0x30
	0x03DEDFD8 MOV X0, X19
	0x03DEDFDC BL 0x3DEE13C
	0x03DEDFE0 LDR X8, [X19 + 0x378]
	0x03DEDFE4 ADD X0, X31, 0x98
	0x03DEDFE8 MOV X1, X31
	0x03DEDFEC STR X8, [X31 + 0x98]
	0x03DEDFF0 BL 0x3DF88DC
	0x03DEDFF4 CBZ X0, 0x3DEE074
	0x03DEDFF8 LDRB W8, [X0 + 0x50]
	0x03DEDFFC MOV X20, X0
	0x03DEE000 TBZ X8, 0x0, 0x3DEE00C
	0x03DEE004 MOV X0, X20
	0x03DEE008 BL 0x3DEDDB0
	0x03DEE00C ADRP X8, 0x32D000
	0x03DEE010 LDR X8, [X8 + 0x898]
	0x03DEE014 ADD X21, X20, 0x200
	0x03DEE018 ADD X20, X19, 0x200
	0x03DEE01C LDR X0, [X8]
	0x03DEE020 LDR W8, [X0 + 0xE0]
	0x03DEE024 CBNZ W8, 0x3DEE02C
	0x03DEE028 BL 0x1C16DFC
	0x03DEE02C ADD X1, X31, 0x30
	0x03DEE030 MOV X0, X21
	0x03DEE034 MOV X2, X20
	0x03DEE038 BL 0x3DEE2C4
	0x03DEE03C B 0x3DEE04C
	0x03DEE040 ADD X1, X19, 0x200
	0x03DEE044 MOV X0, X19
	0x03DEE048 BL 0x3DEE13C
	0x03DEE04C LDR W8, [X19 + 0x50]
	0x03DEE050 MOVZ W9, 0x12
	0x03DEE054 LDP X22, X21, [X31 + 0xB0]
	0x03DEE058 LDP X30, X23, [X31 + 0xA0]
	0x03DEE05C ORR W8, W8, W9, 0x0
	0x03DEE060 STR W8, [X19 + 0x50]
	0x03DEE064 LDP X20, X19, [X31 + 0xC0]
	0x03DEE068 LDR V8, [X31 + 0x90]
	0x03DEE06C ADD X31, X31, 0xD0
	0x03DEE070 RET
	0x03DEE074 BL 0x1C16F20
	0x03DEE078 STP X30, X19, [X31 - 0x10]!
	0x03DEE07C LDRB W8, [X0 + 0x50]
	0x03DEE080 MOV X19, X0
	0x03DEE084 ANDS W31, W8, 0x3
	0x03DEE088 B.EQ 0x3DEE094
	0x03DEE08C MOV X0, X19
	0x03DEE090 BL 0x3DEE0A0
	0x03DEE094 ADD X0, X19, 0x240
	0x03DEE098 LDP X30, X19, [X31], #0x10
	0x03DEE09C RET
	0x03DEE0A0 SUB X31, X31, 0x50
	0x03DEE0A4 STP X30, X19, [X31 + 0x40]
	0x03DEE0A8 LDRB W8, [X0 + 0x50]
	0x03DEE0AC MOV X19, X0
	0x03DEE0B0 TBZ X8, 0x0, 0x3DEE0BC
	0x03DEE0B4 MOV X0, X19
	0x03DEE0B8 BL 0x3DEDDB0
	0x03DEE0BC LDP V1, V0, [X19 + 0x220]
	0x03DEE0C0 LDP V3, V2, [X19 + 0x200]
	0x03DEE0C4 ADD X1, X19, 0x240
	0x03DEE0C8 ADD X0, X31, 0x0
	0x03DEE0CC MOV X2, X31
	0x03DEE0D0 STP V1, V0, [X31 + 0x20]
	0x03DEE0D4 STP V3, V2, [X31]
	0x03DEE0D8 BL 0x3C27094
	0x03DEE0DC LDR W8, [X19 + 0x50]
	0x03DEE0E0 AND W8, W8, 0xFFFFFFFD
	0x03DEE0E4 STR W8, [X19 + 0x50]
	0x03DEE0E8 LDP X30, X19, [X31 + 0x40]
	0x03DEE0EC ADD X31, X31, 0x50
	0x03DEE0F0 RET
	0x03DEE0F4 STR D10, [X31 - 0x30]!
	0x03DEE0F8 STP D9, D8, [X31 + 0x10]
	0x03DEE0FC STP X30, X19, [X31 + 0x20]
	0x03DEE100 MOV X19, X0
	0x03DEE104 BL 0x3DE93EC
	0x03DEE108 MOV X0, X19
	0x03DEE10C MOV V8.16B, V0.16B
	0x03DEE110 MOV V9.16B, V1.16B
	0x03DEE114 MOV V10.16B, V2.16B
	0x03DEE118 BL 0x3DEC528
	0x03DEE11C FADD S0, S8, S0
	0x03DEE120 FADD S1, S9, S1
	0x03DEE124 LDP X30, X19, [X31 + 0x20]
	0x03DEE128 LDP D9, D8, [X31 + 0x10]
	0x03DEE12C FMOV S2, W31
	0x03DEE130 FADD S2, S10, S2
	0x03DEE134 LDR V10, [X31], #0x30
	0x03DEE138 RET
	0x03DEE13C SUB X31, X31, 0x130
	0x03DEE140 STP D15, D14, [X31 + 0xC0]
	0x03DEE144 STP D13, D12, [X31 + 0xD0]
	0x03DEE148 STP D11, D10, [X31 + 0xE0]
	0x03DEE14C STP D9, D8, [X31 + 0xF0]
	0x03DEE150 STP X29, X30, [X31 + 0x100]
	0x03DEE154 STP X22, X21, [X31 + 0x110]
	0x03DEE158 STP X20, X19, [X31 + 0x120]
	0x03DEE15C ADRP X22, 0x5FA000
	0x03DEE160 ADRP X21, 0x32D000
	0x03DEE164 LDRB W8, [X22 + 0x276]
	0x03DEE168 LDR X21, [X21 + 0x898]
	0x03DEE16C MOV X19, X1
	0x03DEE170 MOV X20, X0
	0x03DEE174 TBNZ X8, 0x0, 0x3DEE18C
	0x03DEE178 ADRP X0, 0x32D000
	0x03DEE17C LDR X0, [X0 + 0x898]
	0x03DEE180 BL 0x1C16CF4
	0x03DEE184 MOVZ W8, 0x1
	0x03DEE188 STRB W8, [X22 + 0x276]
	0x03DEE18C MOV X0, X20
	0x03DEE190 BL 0x3DE90E4
	0x03DEE194 MOV X0, X20
	0x03DEE198 STR D0, [X31 + 0x30]
	0x03DEE19C MOV V8.16B, V1.16B
	0x03DEE1A0 STR D2, [X31 + 0x20]
	0x03DEE1A4 BL 0x3DEE0F4
	0x03DEE1A8 LDR V3, [X31 + 0x3]
	0x03DEE1AC MOV X0, X20
	0x03DEE1B0 FADD S10, S8, S1
	0x03DEE1B4 FADD S9, S3, S0
	0x03DEE1B8 LDR V0, [X31 + 0x2]
	0x03DEE1BC FADD S11, S0, S2
	0x03DEE1C0 BL 0x3DF6EE0
	0x03DEE1C4 MOV X0, X20
	0x03DEE1C8 MOV V12.16B, V0.16B
	0x03DEE1CC MOV V13.16B, V1.16B
	0x03DEE1D0 MOV V14.16B, V2.16B
	0x03DEE1D4 MOV V15.16B, V3.16B
	0x03DEE1D8 BL 0x3DF6F90
	0x03DEE1DC STP S1, S2, [X31 + 0x4]
	0x03DEE1E0 ADD X8, X31, 0x40
	0x03DEE1E4 STR S0, [X31]
	0x03DEE1E8 MOV V0.16B, V9.16B
	0x03DEE1EC MOV V1.16B, V10.16B
	0x03DEE1F0 MOV V2.16B, V11.16B
	0x03DEE1F4 MOV V3.16B, V12.16B
	0x03DEE1F8 MOV V4.16B, V13.16B
	0x03DEE1FC MOV V5.16B, V14.16B
	0x03DEE200 MOV V6.16B, V15.16B
	0x03DEE204 MOV X0, X31
	0x03DEE208 BL 0x3C26FA8
	0x03DEE20C LDP V1, V0, [X31 + 0x60]
	0x03DEE210 LDP V3, V2, [X31 + 0x40]
	0x03DEE214 FNEG S5, S8
	0x03DEE218 STP V1, V0, [X31 + 0xA0]
	0x03DEE21C STP V3, V2, [X31 + 0x80]
	0x03DEE220 STP V1, V0, [X19 + 0x20]
	0x03DEE224 STP V3, V2, [X19]
	0x03DEE228 LDR X0, [X21]
	0x03DEE22C LDR W8, [X0 + 0xE0]
	0x03DEE230 CBNZ W8, 0x3DEE240
	0x03DEE234 STR V5, [X31 + 0x1]
	0x03DEE238 BL 0x1C16DFC
	0x03DEE23C LDR V5, [X31 + 0x1]
	0x03DEE240 LDR V0, [X19]
	0x03DEE244 LDR V1, [X19 + 0x10]
	0x03DEE248 LDR V2, [X19 + 0x18]
	0x03DEE24C LDR V4, [X19 + 0x8]
	0x03DEE250 LDR V6, [X31 + 0x3]
	0x03DEE254 LDR V3, [X19 + 0x20]
	0x00000000 INVALID
	0x03DEE25C FMUL S2, S2, S5
	0x03DEE260 LDR V5, [X19 + 0x28]
	0x00000000 INVALID
	0x03DEE268 FMUL S4, S6, S4
	0x03DEE26C LDR V6, [X31 + 0x2]
	0x03DEE270 FSUB V0.2S, V1.2S, V0.2S
	0x03DEE274 LDR V1, [X19 + 0x38]
	0x03DEE278 FSUB S2, S2, S4
	0x00000000 INVALID
	0x03DEE280 FMUL S5, S6, S5
	0x03DEE284 LDR V6, [X19 + 0x30]
	0x03DEE288 FSUB V0.2S, V0.2S, V3.2S
	0x03DEE28C FSUB S2, S2, S5
	0x03DEE290 FADD S1, S1, S2
	0x03DEE294 FADD V0.2S, V6.2S, V0.2S
	0x03DEE298 STR D0, [X19 + 0x30]
	0x03DEE29C STR S1, [X19 + 0x38]
	0x03DEE2A0 LDP X20, X19, [X31 + 0x120]
	0x03DEE2A4 LDP X22, X21, [X31 + 0x110]
	0x03DEE2A8 LDP X29, X30, [X31 + 0x100]
	0x03DEE2AC LDP D9, D8, [X31 + 0xF0]
	0x03DEE2B0 LDP D11, D10, [X31 + 0xE0]
	0x03DEE2B4 LDP D13, D12, [X31 + 0xD0]
	0x03DEE2B8 LDP D15, D14, [X31 + 0xC0]
	0x03DEE2BC ADD X31, X31, 0x130
	0x03DEE2C0 RET
	0x03DEE2C4 LDR V0, [X0]
	0x03DEE2C8 LDR V3, [X0 + 0x10]
	0x03DEE2CC LDP S2, S4, [X1]
	0x03DEE2D0 LDR V5, [X0 + 0x20]
	0x03DEE2D4 LDR V1, [X1 + 0x8]
	0x03DEE2D8 MOVZ W8, 0x3F800000
	0x03DEE2DC FMUL S0, S0, S2
	0x03DEE2E0 FMUL S2, S3, S4
	0x03DEE2E4 FMUL S6, S5, S1
	0x03DEE2E8 FADD S0, S0, S2
	0x03DEE2EC FADD S0, S0, S6
	0x03DEE2F0 STR S0, [X2]
	0x03DEE2F4 LDR V6, [X0]
	0x03DEE2F8 LDP S0, S7, [X1 + 0x10]
	0x03DEE2FC LDR V2, [X1 + 0x18]
	0x03DEE300 FMUL S0, S6, S0
	0x03DEE304 FMUL S3, S3, S7
	0x03DEE308 FMUL S16, S5, S2
	0x03DEE30C FADD S0, S0, S3
	0x03DEE310 FADD S0, S0, S16
	0x03DEE314 STR S0, [X2 + 0x10]
	0x03DEE318 LDR V16, [X0 + 0x10]
	0x03DEE31C LDP S0, S17, [X1 + 0x20]
	0x03DEE320 LDR V3, [X1 + 0x28]
	0x03DEE324 FMUL S0, S6, S0
	0x03DEE328 FMUL S18, S16, S17
	0x03DEE32C FMUL S5, S5, S3
	0x03DEE330 FADD S0, S0, S18
	0x03DEE334 FADD S0, S0, S5
	0x03DEE338 STR S0, [X2 + 0x20]
	0x03DEE33C LDP S5, S18, [X1 + 0x30]
	0x03DEE340 LDR V19, [X0 + 0x20]
	0x03DEE344 LDR V0, [X1 + 0x38]
	0x03DEE348 LDR V20, [X0 + 0x30]
	0x03DEE34C FMUL S5, S6, S5
	0x03DEE350 FMUL S6, S16, S18
	0x03DEE354 FMUL S16, S19, S0
	0x03DEE358 FADD S5, S5, S6
	0x03DEE35C FADD S5, S5, S16
	0x03DEE360 FADD S5, S20, S5

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5FC000
	007 Move W8, [X20+570]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x330000
	014 Move X0, [X0+296]
	015 Call 0x1C17CF4
	016 Move X0, 0x37D000
	017 Move X0, [X0+2304]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+570], W8
	021 Compare X19, 0
	022 JumpIfEqual {367}
	023 Move W8, [X19+80]
	024 Move X20, 0x37D000
	025 Move X20, [X20+2304]
	026 Move X0, X19
	027 And W8, W8, 0xFFFFFFBF
	028 Move [X19+80], W8
	029 Call VisualElement.get_style, X0
	030 Move X1, [X20]
	031 Move X19, X0
	032 Move W0, 1
	033 Call 0x266FA88, X0
	034 Compare X19, 0
	035 JumpIfEqual {367}
	036 Move X22, 0x330000
	037 Move X8, [X19]
	038 Move X22, [X22+296]
	039 Move X20, X0
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, [X22]
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move W2, 40
	051 Move X0, X19
	052 Call 0x1C5D788
	053 Move W9, [X10]
	054 Add W9, W9, 40
	055 Add X8, X8, W9
	056 Add X0, X8, 312
	057 Move X8, [X0]
	058 Move X2, [X0+8]
	059 Move X0, X19
	060 Move X1, X20
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move W0, 1
	063 Move X1, X31
	064 Call StyleLength.op_Implicit, X0
	065 Move X9, [X19]
	066 Move X8, [X22]
	067 Move X20, X0
	068 And X21, X1, 0
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Compare X10, 0
	071 JumpIfEqual {78}
	072 Move X11, [X9+176]
	073 Add X11, X11, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X10, X10, 1
	077 Add X11, X11, 16
	078 Move W2, 27
	079 Move X0, X19
	080 Move X1, X8
	081 Call 0x1C5D788
	082 Move W8, [X11]
	083 Add W8, W8, 27
	084 Add X8, X9, W8
	085 Add X0, X8, 312
	086 Move X8, [X0]
	087 Move X3, [X0+8]
	088 Move X0, X19
	089 Move X1, X20
	090 Move X2, X21
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move W0, 1
	093 Move X1, X31
	094 Call StyleLength.op_Implicit, X0
	095 Move X9, [X19]
	096 Move X8, [X22]
	097 Move X20, X0
	098 And X21, X1, 0
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare X10, 0
	101 JumpIfEqual {108}
	102 Move X11, [X9+176]
	103 Add X11, X11, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X10, X10, 1
	107 Add X11, X11, 16
	108 Move W2, 28
	109 Move X0, X19
	110 Move X1, X8
	111 Call 0x1C5D788
	112 Move W8, [X11]
	113 Add W8, W8, 28
	114 Add X8, X9, W8
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X3, [X0+8]
	118 Move X0, X19
	119 Move X1, X20
	120 Move X2, X21
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move W0, 1
	123 Move X1, X31
	124 Call StyleLength.op_Implicit, X0
	125 Move X9, [X19]
	126 Move X8, [X22]
	127 Move X20, X0
	128 And X21, X1, 0
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X10, 0
	131 JumpIfEqual {138}
	132 Move X11, [X9+176]
	133 Add X11, X11, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X10, X10, 1
	137 Add X11, X11, 16
	138 Move W2, 26
	139 Move X0, X19
	140 Move X1, X8
	141 Call 0x1C5D788
	142 Move W8, [X11]
	143 Add W8, W8, 26
	144 Add X8, X9, W8
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X3, [X0+8]
	148 Move X0, X19
	149 Move X1, X20
	150 Move X2, X21
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move W0, 1
	153 Move X1, X31
	154 Call StyleLength.op_Implicit, X0
	155 Move X9, [X19]
	156 Move X8, [X22]
	157 Move X20, X0
	158 And X21, X1, 0
	159 NotImplemented "Instruction LDRH not yet implemented."
	160 Compare X10, 0
	161 JumpIfEqual {168}
	162 Move X11, [X9+176]
	163 Add X11, X11, 8
	164 NotImplemented "Instruction LDUR not yet implemented."
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Subtract X10, X10, 1
	167 Add X11, X11, 16
	168 Move W2, 29
	169 Move X0, X19
	170 Move X1, X8
	171 Call 0x1C5D788
	172 Move W8, [X11]
	173 Add W8, W8, 29
	174 Add X8, X9, W8
	175 Add X0, X8, 312
	176 Move X8, [X0]
	177 Move X3, [X0+8]
	178 Move X0, X19
	179 Move X1, X20
	180 Move X2, X21
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Move W0, 1
	183 Move X1, X31
	184 Call StyleLength.op_Implicit, X0
	185 Move X9, [X19]
	186 Move X8, [X22]
	187 Move X20, X0
	188 And X21, X1, 0
	189 NotImplemented "Instruction LDRH not yet implemented."
	190 Compare X10, 0
	191 JumpIfEqual {198}
	192 Move X11, [X9+176]
	193 Add X11, X11, 8
	194 NotImplemented "Instruction LDUR not yet implemented."
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Subtract X10, X10, 1
	197 Add X11, X11, 16
	198 Move W2, 25
	199 Move X0, X19
	200 Move X1, X8
	201 Call 0x1C5D788
	202 Move W8, [X11]
	203 Add W8, W8, 25
	204 Add X8, X9, W8
	205 Add X0, X8, 312
	206 Move X8, [X0]
	207 Move X3, [X0+8]
	208 Move X0, X19
	209 Move X1, X20
	210 Move X2, X21
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Move W0, 1
	213 Move X1, X31
	214 Call StyleLength.op_Implicit, X0
	215 Move X9, [X19]
	216 Move X8, [X22]
	217 Move X20, X0
	218 And X21, X1, 0
	219 NotImplemented "Instruction LDRH not yet implemented."
	220 Compare X10, 0
	221 JumpIfEqual {228}
	222 Move X11, [X9+176]
	223 Add X11, X11, 8
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Subtract X10, X10, 1
	227 Add X11, X11, 16
	228 Move W2, 45
	229 Move X0, X19
	230 Move X1, X8
	231 Call 0x1C5D788
	232 Move W8, [X11]
	233 Add W8, W8, 45
	234 Add X8, X9, W8
	235 Add X0, X8, 312
	236 Move X8, [X0]
	237 Move X3, [X0+8]
	238 Move X0, X19
	239 Move X1, X20
	240 Move X2, X21
	241 NotImplemented "Instruction BLR not yet implemented."
	242 Move W0, 1
	243 Move X1, X31
	244 Call StyleLength.op_Implicit, X0
	245 Move X9, [X19]
	246 Move X8, [X22]
	247 Move X20, X0
	248 And X21, X1, 0
	249 NotImplemented "Instruction LDRH not yet implemented."
	250 Compare X10, 0
	251 JumpIfEqual {258}
	252 Move X11, [X9+176]
	253 Add X11, X11, 8
	254 NotImplemented "Instruction LDUR not yet implemented."
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Subtract X10, X10, 1
	257 Add X11, X11, 16
	258 Move W2, 41
	259 Move X0, X19
	260 Move X1, X8
	261 Call 0x1C5D788
	262 Move W8, [X11]
	263 Add W8, W8, 41
	264 Add X8, X9, W8
	265 Add X0, X8, 312
	266 Move X8, [X0]
	267 Move X3, [X0+8]
	268 Move X0, X19
	269 Move X1, X20
	270 Move X2, X21
	271 NotImplemented "Instruction BLR not yet implemented."
	272 Move W0, 1
	273 Move X1, X31
	274 Call StyleLength.op_Implicit, X0
	275 Move X9, [X19]
	276 Move X8, [X22]
	277 Move X20, X0
	278 And X21, X1, 0
	279 NotImplemented "Instruction LDRH not yet implemented."
	280 Compare X10, 0
	281 JumpIfEqual {288}
	282 Move X11, [X9+176]
	283 Add X11, X11, 8
	284 NotImplemented "Instruction LDUR not yet implemented."
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Subtract X10, X10, 1
	287 Add X11, X11, 16
	288 Move W2, 14
	289 Move X0, X19
	290 Move X1, X8
	291 Call 0x1C5D788
	292 Move W8, [X11]
	293 Add W8, W8, 14
	294 Add X8, X9, W8
	295 Add X0, X8, 312
	296 Move X8, [X0]
	297 Move X3, [X0+8]
	298 Move X0, X19
	299 Move X1, X20
	300 Move X2, X21
	301 NotImplemented "Instruction BLR not yet implemented."
	302 Move W0, 1
	303 Move X1, X31
	304 Call StyleLength.op_Implicit, X0
	305 Move X9, [X19]
	306 Move X8, [X22]
	307 Move X20, X0
	308 And X21, X1, 0
	309 NotImplemented "Instruction LDRH not yet implemented."
	310 Compare X10, 0
	311 JumpIfEqual {318}
	312 Move X11, [X9+176]
	313 Add X11, X11, 8
	314 NotImplemented "Instruction LDUR not yet implemented."
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Subtract X10, X10, 1
	317 Add X11, X11, 16
	318 Move W2, 54
	319 Move X0, X19
	320 Move X1, X8
	321 Call 0x1C5D788
	322 Move W8, [X11]
	323 Add W8, W8, 54
	324 Add X8, X9, W8
	325 Add X0, X8, 312
	326 Move X8, [X0]
	327 Move X3, [X0+8]
	328 Move X0, X19
	329 Move X1, X20
	330 Move X2, X21
	331 NotImplemented "Instruction BLR not yet implemented."
	332 Move W0, 1
	333 Move X1, X31
	334 Call StyleLength.op_Implicit, X0
	335 Move X9, [X19]
	336 Move X8, [X22]
	337 Move X20, X0
	338 Move X21, X1
	339 NotImplemented "Instruction LDRH not yet implemented."
	340 Compare X10, 0
	341 JumpIfEqual {348}
	342 Move X11, [X9+176]
	343 Add X11, X11, 8
	344 NotImplemented "Instruction LDUR not yet implemented."
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Subtract X10, X10, 1
	347 Add X11, X11, 16
	348 Move W2, 24
	349 Move X0, X19
	350 Move X1, X8
	351 Call 0x1C5D788
	352 Move W8, [X11]
	353 Add W8, W8, 24
	354 Add X8, X9, W8
	355 Add X0, X8, 312
	356 Move X4, [X0]
	357 Move X3, [X0+8]
	358 And X2, X21, 0
	359 Move X0, X19
	360 Move X1, X20
	361 Move X20, [X31+32]
	362 Move X19, [X31+40]
	363 Move X22, [X31+16]
	364 Move X21, [X31+24]
	365 Move X30, [X31+48]
	366 CallNoReturn X4
	367 Call 0x1C17F20

Method: UnityEngine.Rect get_contentRect()

Disassembly:
	0x03DEE364 STR S5, [X2 + 0x30]
	0x03DEE368 LDR V5, [X0 + 0x4]
	0x03DEE36C LDR V6, [X1]
	0x03DEE370 LDR V16, [X0 + 0x14]
	0x03DEE374 LDR V19, [X0 + 0x24]
	0x03DEE378 FMUL S5, S5, S6
	0x03DEE37C FMUL S4, S4, S16
	0x03DEE380 FMUL S20, S1, S19
	0x03DEE384 FADD S4, S5, S4
	0x03DEE388 FADD S4, S4, S20
	0x03DEE38C STR S4, [X2 + 0x4]
	0x03DEE390 LDR V4, [X0 + 0x4]
	0x03DEE394 LDR V5, [X1 + 0x10]
	0x03DEE398 FMUL S7, S7, S16
	0x03DEE39C FMUL S16, S2, S19
	0x03DEE3A0 FMUL S19, S3, S19
	0x03DEE3A4 FMUL S20, S4, S5
	0x03DEE3A8 FADD S7, S7, S20
	0x03DEE3AC FADD S7, S16, S7
	0x03DEE3B0 STR S7, [X2 + 0x14]
	0x03DEE3B4 LDR V7, [X1 + 0x20]
	0x03DEE3B8 LDR V16, [X0 + 0x14]
	0x03DEE3BC FMUL S20, S4, S7
	0x03DEE3C0 FMUL S17, S17, S16
	0x03DEE3C4 FADD S17, S20, S17
	0x03DEE3C8 FADD S17, S19, S17
	0x03DEE3CC STR S17, [X2 + 0x24]
	0x03DEE3D0 LDR V17, [X1 + 0x30]
	0x03DEE3D4 LDR V19, [X0 + 0x24]
	0x03DEE3D8 FMUL S16, S18, S16
	0x03DEE3DC LDR V18, [X0 + 0x34]
	0x03DEE3E0 FMUL S4, S4, S17
	0x03DEE3E4 FMUL S19, S0, S19
	0x03DEE3E8 FADD S4, S16, S4
	0x03DEE3EC FADD S4, S4, S19
	0x03DEE3F0 FADD S4, S18, S4
	0x03DEE3F4 STR S4, [X2 + 0x34]
	0x03DEE3F8 LDR V4, [X0 + 0x8]
	0x03DEE3FC LDR V16, [X0 + 0x18]
	0x03DEE400 LDR V18, [X1 + 0x4]
	0x03DEE404 LDR V19, [X0 + 0x28]
	0x03DEE408 FMUL S4, S6, S4
	0x03DEE40C FMUL S6, S16, S18
	0x03DEE410 FMUL S1, S1, S19
	0x03DEE414 FADD S4, S4, S6
	0x03DEE418 FADD S1, S4, S1
	0x03DEE41C STR S1, [X2 + 0x8]
	0x03DEE420 LDR V1, [X0 + 0x8]
	0x03DEE424 LDR V4, [X1 + 0x14]
	0x03DEE428 FMUL S2, S2, S19
	0x03DEE42C FMUL S3, S3, S19
	0x03DEE430 FMUL S5, S5, S1
	0x03DEE434 FMUL S4, S16, S4
	0x03DEE438 FADD S4, S5, S4
	0x03DEE43C FADD S2, S2, S4
	0x03DEE440 STR S2, [X2 + 0x18]
	0x03DEE444 LDR V2, [X0 + 0x18]
	0x03DEE448 LDR V4, [X1 + 0x24]
	0x03DEE44C FMUL S5, S7, S1
	0x03DEE450 FMUL S1, S17, S1
	0x03DEE454 FMUL S4, S2, S4
	0x03DEE458 FADD S4, S5, S4
	0x03DEE45C FADD S3, S3, S4
	0x03DEE460 STR S3, [X2 + 0x28]
	0x03DEE464 LDR V3, [X1 + 0x34]
	0x03DEE468 LDR V4, [X0 + 0x28]
	0x03DEE46C LDR V5, [X0 + 0x38]
	0x03DEE470 STR W31, [X2 + 0xC]
	0x03DEE474 FMUL S2, S2, S3
	0x03DEE478 FMUL S0, S0, S4
	0x03DEE47C FADD S1, S1, S2
	0x03DEE480 FADD S0, S1, S0
	0x03DEE484 FADD S0, S5, S0
	0x03DEE488 STR W31, [X2 + 0x1C]
	0x03DEE48C STR W31, [X2 + 0x2C]
	0x03DEE490 STR S0, [X2 + 0x38]
	0x03DEE494 STR W8, [X2 + 0x3C]
	0x03DEE498 RET
	0x03DEE49C LDRB W8, [X0 + 0x50]
	0x03DEE4A0 UBFM W0, W8, 0x2, 0x2
	0x03DEE4A4 RET
	0x03DEE4A8 STR X30, [X31 - 0x10]!
	0x03DEE4AC CBZ X0, 0x3DEE4D4
	0x03DEE4B0 LDR W8, [X0 + 0x50]
	0x03DEE4B4 ANDS W31, W1, 0x1
	0x03DEE4B8 MOVZ W9, 0x4
	0x03DEE4BC CSEL W9, W9, W31, NE
	0x03DEE4C0 AND W8, W8, 0xFFFFFFFB
	0x03DEE4C4 ORR W8, W8, W9, 0x0
	0x03DEE4C8 STR W8, [X0 + 0x50]
	0x03DEE4CC LDR X30, [X31], #0x10
	0x03DEE4D0 RET
	0x03DEE4D4 BL 0x1C16F20
	0x03DEE4D8 STP X30, X19, [X31 - 0x10]!
	0x03DEE4DC LDRB W8, [X0 + 0x50]
	0x03DEE4E0 MOV X19, X0
	0x03DEE4E4 TBZ X8, 0x2, 0x3DEE4FC
	0x03DEE4E8 MOV X0, X19
	0x03DEE4EC BL 0x3DEE514
	0x03DEE4F0 LDR W8, [X19 + 0x50]
	0x03DEE4F4 AND W8, W8, 0xFFFFFFFB
	0x03DEE4F8 STR W8, [X19 + 0x50]
	0x03DEE4FC LDR V3, [X19 + 0x28C]
	0x03DEE500 LDR V2, [X19 + 0x288]
	0x03DEE504 LDR V1, [X19 + 0x284]
	0x03DEE508 LDR V0, [X19 + 0x280]
	0x03DEE50C LDP X30, X19, [X31], #0x10
	0x03DEE510 RET
	0x03DEE514 SUB X31, X31, 0x50
	0x03DEE518 STP D11, D10, [X31 + 0x10]
	0x03DEE51C STP D9, D8, [X31 + 0x20]
	0x03DEE520 STP X30, X21, [X31 + 0x30]
	0x03DEE524 STP X20, X19, [X31 + 0x40]
	0x03DEE528 ADRP X20, 0x5FA000
	0x03DEE52C LDRB W8, [X20 + 0x241]
	0x03DEE530 MOV X19, X0
	0x03DEE534 TBNZ X8, 0x0, 0x3DEE558
	0x03DEE538 ADRP X0, 0x32E000
	0x03DEE53C LDR X0, [X0 + 0xE80]
	0x03DEE540 BL 0x1C16CF4
	0x03DEE544 ADRP X0, 0x32D000
	0x03DEE548 LDR X0, [X0 + 0x898]
	0x03DEE54C BL 0x1C16CF4
	0x03DEE550 MOVZ W8, 0x1
	0x03DEE554 STRB W8, [X20 + 0x241]
	0x03DEE558 LDR X8, [X19 + 0x378]
	0x03DEE55C ADD X0, X31, 0x8
	0x03DEE560 MOV X1, X31
	0x03DEE564 STR X8, [X31 + 0x8]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x5FB000
	009 Move W8, [X20+571]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x32F000
	016 Move X0, [X0+288]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+571], W8
	020 Compare X19, 0
	021 JumpIfEqual {135}
	022 Move X20, 0x32F000
	023 Move X8, [X19]
	024 Move X20, [X20+288]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X20]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 29
	036 Move X0, X19
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 29
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X19
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X8, [X19]
	047 Move X1, [X20]
	048 Move V8, V0
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move W2, 31
	059 Move X0, X19
	060 Call 0x1C5D788
	061 Move W9, [X10]
	062 Add W9, W9, 31
	063 Add X8, X8, W9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X1, [X0+8]
	067 Move X0, X19
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X8, [X19]
	070 Move X1, [X20]
	071 Move V9, V0
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move W2, 30
	082 Move X0, X19
	083 Call 0x1C5D788
	084 Move W9, [X10]
	085 Add W9, W9, 30
	086 Add X8, X8, W9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X1, [X0+8]
	090 Move X0, X19
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X8, [X19]
	093 Move X1, [X20]
	094 Move V10, V0
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move W2, 28
	105 Move X0, X19
	106 Call 0x1C5D788
	107 Move W9, [X10]
	108 Add W9, W9, 28
	109 Add X8, X8, W9
	110 Add X0, X8, 312
	111 Move X8, [X0]
	112 Move X1, [X0+8]
	113 Move X0, X19
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move X0, X19
	116 Move V11, V0
	117 Call VisualElement.get_paddingRect, X0
	118 Add S0, S8, S0
	119 Add S1, S9, S1
	120 Add S4, S8, S10
	121 Add S6, S9, S11
	122 Move X20, [X31+48]
	123 Move X19, [X31+56]
	124 Move X30, [X31+32]
	125 Move D9, [X31+16]
	126 Move D8, [X31+24]
	127 Move S5, W31
	128 Subtract S2, S2, S4
	129 Subtract S3, S3, S6
	130 NotImplemented "Instruction FMAX not yet implemented."
	131 NotImplemented "Instruction FMAX not yet implemented."
	132 Move D11, [X31+64]
	133 Move D10, [X31+72]
	134 Return X0
	135 Call 0x1C17F20

Method: UnityEngine.Rect get_paddingRect()

Disassembly:
	0x03DEE568 BL 0x3DF88DC
	0x03DEE56C CBZ X0, 0x3DEE60C
	0x03DEE570 LDR X8, [X19 + 0x378]
	0x03DEE574 ADD X0, X31, 0x8
	0x03DEE578 MOV X1, X31
	0x03DEE57C STR X8, [X31 + 0x8]
	0x03DEE580 BL 0x3DF88DC
	0x03DEE584 CBZ X0, 0x3DEE7E0
	0x03DEE588 BL 0x3DEE4D8
	0x03DEE58C LDR X8, [X19 + 0x378]
	0x03DEE590 ADD X0, X31, 0x8
	0x03DEE594 MOV X1, X31
	0x03DEE598 STR S0, [X19 + 0x280]
	0x03DEE59C STR S1, [X19 + 0x284]
	0x03DEE5A0 STR S2, [X19 + 0x288]
	0x03DEE5A4 STR S3, [X19 + 0x28C]
	0x03DEE5A8 STR X8, [X31 + 0x8]
	0x03DEE5AC BL 0x3DF88DC
	0x03DEE5B0 CBZ X0, 0x3DEE7E0
	0x03DEE5B4 BL 0x3DEE820
	0x03DEE5B8 LDR X8, [X19 + 0x378]
	0x03DEE5BC MOV W20, W0
	0x03DEE5C0 ADD X0, X31, 0x8
	0x03DEE5C4 MOV X1, X31
	0x03DEE5C8 STR X8, [X31 + 0x8]
	0x03DEE5CC BL 0x3DF88DC
	0x03DEE5D0 LDR X8, [X19 + 0x98]
	0x03DEE5D4 CMP X0, X8
	0x03DEE5D8 B.EQ 0x3DEE664
	0x03DEE5DC LDR X8, [X19 + 0x378]
	0x03DEE5E0 ADD X0, X31, 0x8
	0x03DEE5E4 MOV X1, X31
	0x03DEE5E8 STR X8, [X31 + 0x8]
	0x03DEE5EC BL 0x3DF88DC
	0x03DEE5F0 CBZ X0, 0x3DEE7E0
	0x03DEE5F4 BL 0x3DEE7E4
	0x03DEE5F8 STR S0, [X19 + 0x290]
	0x03DEE5FC STR S1, [X19 + 0x294]
	0x03DEE600 STR S2, [X19 + 0x298]
	0x03DEE604 STR S3, [X19 + 0x29C]
	0x03DEE608 B 0x3DEE690
	0x03DEE60C LDR X20, [X19 + 0x3A0]
	0x03DEE610 CMP X20, 0x0
	0x03DEE614 CSEL X21, X31, X19, EQ
	0x03DEE618 CBZ X20, 0x3DEE744
	0x03DEE61C ADRP X10, 0x32E000
	0x03DEE620 LDR X8, [X20]
	0x03DEE624 LDR X10, [X10 + 0xE80]
	0x03DEE628 LDRH W9, [X8 + 0x12E]
	0x03DEE62C LDR X1, [X10]
	0x03DEE630 CBZ X9, 0x3DEE654
	0x03DEE634 LDR X10, [X8 + 0xB0]
	0x03DEE638 ADD X10, X10, 0x8
	0x03DEE63C LDUR X11, [X10 - 0x8]
	0x03DEE640 CMP X11, X1
	0x03DEE644 B.EQ 0x3DEE774
	0x03DEE648 SUBS X9, X9, 0x1
	0x03DEE64C ADD X10, X10, 0x10
	0x03DEE650 B.NE 0x3DEE63C
	0x03DEE654 MOV X0, X20
	0x03DEE658 MOV W2, W31
	0x03DEE65C BL 0x1C5C788
	0x03DEE660 B 0x3DEE780
	0x03DEE664 ADRP X20, 0x32D000
	0x03DEE668 LDR X20, [X20 + 0x898]
	0x03DEE66C LDR X0, [X20]
	0x03DEE670 LDR W8, [X0 + 0xE0]
	0x03DEE674 CBNZ W8, 0x3DEE680
	0x03DEE678 BL 0x1C16DFC
	0x03DEE67C LDR X0, [X20]
	0x03DEE680 LDR X8, [X0 + 0xB8]
	0x03DEE684 MOVZ W20, 0x1
	0x03DEE688 LDR V0, [X8 + 0x2]
	0x03DEE68C STR V0, [X19 + 0x29]
	0x03DEE690 ADD X0, X19, 0x2C0
	0x03DEE694 MOV X1, X31
	0x03DEE698 BL 0x3DC6CF4
	0x03DEE69C CBZ W0, 0x3DEE73C
	0x03DEE6A0 LDRB W8, [X19 + 0x51]
	0x03DEE6A4 TBNZ X8, 0x2, 0x3DEE73C
	0x03DEE6A8 MOV X0, X19
	0x03DEE6AC BL 0x3DEDC10
	0x03DEE6B0 MOV X0, X19
	0x03DEE6B4 BL 0x3DEE88C
	0x03DEE6B8 LDR V4, [X19 + 0x280]
	0x03DEE6BC LDR V5, [X19 + 0x284]
	0x03DEE6C0 LDR V6, [X19 + 0x288]
	0x03DEE6C4 LDR V7, [X19 + 0x28C]
	0x03DEE6C8 MOV V10.16B, V0.16B
	0x03DEE6CC MOV V9.16B, V1.16B
	0x03DEE6D0 MOV V8.16B, V2.16B
	0x03DEE6D4 MOV V11.16B, V3.16B
	0x03DEE6D8 BL 0x3DEEE2C
	0x03DEE6DC STR S0, [X19 + 0x280]
	0x03DEE6E0 STR S1, [X19 + 0x284]
	0x03DEE6E4 STR S2, [X19 + 0x288]
	0x03DEE6E8 STR S3, [X19 + 0x28C]
	0x03DEE6EC TBNZ X20, 0x0, 0x3DEE724
	0x03DEE6F0 LDR V4, [X19 + 0x290]
	0x03DEE6F4 LDR V5, [X19 + 0x294]
	0x03DEE6F8 LDR V6, [X19 + 0x298]
	0x03DEE6FC LDR V7, [X19 + 0x29C]
	0x03DEE700 MOV V0.16B, V10.16B
	0x03DEE704 MOV V1.16B, V9.16B
	0x03DEE708 MOV V2.16B, V8.16B
	0x03DEE70C MOV V3.16B, V11.16B
	0x03DEE710 BL 0x3DEEE2C
	0x03DEE714 MOV V10.16B, V0.16B
	0x03DEE718 MOV V9.16B, V1.16B
	0x03DEE71C MOV V8.16B, V2.16B
	0x03DEE720 MOV V11.16B, V3.16B
	0x03DEE724 MOV W8, W31
	0x03DEE728 STR S10, [X19 + 0x290]
	0x03DEE72C STR S9, [X19 + 0x294]
	0x03DEE730 STR S8, [X19 + 0x298]
	0x03DEE734 STR S11, [X19 + 0x29C]
	0x03DEE738 B 0x3DEE7C4
	0x03DEE73C AND W8, W20, 0x1
	0x03DEE740 B 0x3DEE7C4
	0x03DEE744 ADRP X20, 0x32D000
	0x03DEE748 LDR X20, [X20 + 0x898]
	0x03DEE74C LDR X0, [X20]
	0x03DEE750 LDR W8, [X0 + 0xE0]
	0x03DEE754 CBNZ W8, 0x3DEE760
	0x03DEE758 BL 0x1C16DFC
	0x03DEE75C LDR X0, [X20]
	0x03DEE760 LDR X8, [X0 + 0xB8]
	0x03DEE764 MOV X21, X19
	0x03DEE768 LDP S0, S1, [X8 + 0x20]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x5FB000
	009 Move W8, [X20+572]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x32F000
	016 Move X0, [X0+288]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+572], W8
	020 Compare X19, 0
	021 JumpIfEqual {135}
	022 Move X20, 0x32F000
	023 Move X8, [X19]
	024 Move X20, [X20+288]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X20]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 6
	036 Move X0, X19
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 6
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X19
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X8, [X19]
	047 Move X1, [X20]
	048 Move V8, V0
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move W2, 12
	059 Move X0, X19
	060 Call 0x1C5D788
	061 Move W9, [X10]
	062 Add W9, W9, 12
	063 Add X8, X8, W9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X1, [X0+8]
	067 Move X0, X19
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X8, [X19]
	070 Move X1, [X20]
	071 Move V9, V0
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move W2, 8
	082 Move X0, X19
	083 Call 0x1C5D788
	084 Move W9, [X10]
	085 Add W9, W9, 8
	086 Add X8, X8, W9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X1, [X0+8]
	090 Move X0, X19
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X8, [X19]
	093 Move X1, [X20]
	094 Move V10, V0
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move W2, 4
	105 Move X0, X19
	106 Call 0x1C5D788
	107 Move W9, [X10]
	108 Add W9, W9, 4
	109 Add X8, X8, W9
	110 Add X0, X8, 312
	111 Move X8, [X0]
	112 Move X1, [X0+8]
	113 Move X0, X19
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move X0, X19
	116 Move V11, V0
	117 Call VisualElement.get_layout, X0
	118 Move S4, W31
	119 Add S5, S8, S10
	120 Add S6, S9, S11
	121 Add S0, S8, S4
	122 Add S1, S9, S4
	123 Move X20, [X31+48]
	124 Move X19, [X31+56]
	125 Move X30, [X31+32]
	126 Move D9, [X31+16]
	127 Move D8, [X31+24]
	128 Subtract S2, S2, S5
	129 Subtract S3, S3, S6
	130 NotImplemented "Instruction FMAX not yet implemented."
	131 NotImplemented "Instruction FMAX not yet implemented."
	132 Move D11, [X31+64]
	133 Move D10, [X31+72]
	134 Return X0
	135 Call 0x1C17F20

Method: System.Boolean get_isBoundingBoxDirty()

Disassembly:
	0x03DEE784 MOV X0, X20
	0x03DEE788 BLR X8
	0x03DEE78C CBZ X0, 0x3DEE7E0

ISIL:
	001 Move W8, [X0+80]
	002 Move W0, W8
	003 ShiftRight W0, 3
	004 And W0, W0, 7
	005 Return X0

Method: System.Void set_isBoundingBoxDirty(System.Boolean value)

Disassembly:
	0x03DEE790 BL 0x3DEC528
	0x03DEE794 CBZ X21, 0x3DEE7E0
	0x03DEE798 FMOV S0, W31
	0x03DEE79C FMOV S1, W31
	0x03DEE7A0 MOVZ W8, 0x1
	0x03DEE7A4 STR S0, [X21 + 0x280]
	0x03DEE7A8 STR S1, [X21 + 0x284]
	0x03DEE7AC STR S2, [X21 + 0x288]
	0x03DEE7B0 STR S3, [X21 + 0x28C]
	0x03DEE7B4 STR S0, [X21 + 0x290]
	0x03DEE7B8 STR S1, [X21 + 0x294]
	0x03DEE7BC STR S2, [X21 + 0x298]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+80]
	005 And W31, W1, 1
	006 Move W9, 8
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFFFF7
	009 Or W8, W8, W9
	010 Move [X0+80], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Void set_isWorldBoundingBoxDirty(System.Boolean value)

Disassembly:
	0x03DEE7C0 STR S3, [X21 + 0x29C]
	0x03DEE7C4 STRB W8, [X19 + 0x2A0]
	0x03DEE7C8 LDP X20, X19, [X31 + 0x40]
	0x03DEE7CC LDP X30, X21, [X31 + 0x30]
	0x03DEE7D0 LDP D9, D8, [X31 + 0x20]
	0x03DEE7D4 LDP D11, D10, [X31 + 0x10]
	0x03DEE7D8 ADD X31, X31, 0x50
	0x03DEE7DC RET
	0x03DEE7E0 BL 0x1C16F20
	0x03DEE7E4 STP X30, X19, [X31 - 0x10]!
	0x03DEE7E8 LDRB W8, [X0 + 0x50]
	0x03DEE7EC MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+80]
	005 And W31, W1, 1
	006 Move W9, 16
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFFFEF
	009 Or W8, W8, W9
	010 Move [X0+80], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Boolean get_isWorldBoundingBoxOrDependenciesDirty()

Disassembly:
	0x03DEE7F0 TBZ X8, 0x2, 0x3DEE808
	0x03DEE7F4 MOV X0, X19
	0x03DEE7F8 BL 0x3DEE514
	0x03DEE7FC LDR W8, [X19 + 0x50]
	0x03DEE800 AND W8, W8, 0xFFFFFFFB

ISIL:
	001 Move W8, [X0+80]
	002 Move W9, 25
	003 And W31, W8, W9
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: UnityEngine.Rect get_boundingBox()

Disassembly:
	0x03DEE804 STR W8, [X19 + 0x50]
	0x03DEE808 LDR V3, [X19 + 0x29C]
	0x03DEE80C LDR V2, [X19 + 0x298]
	0x03DEE810 LDR V1, [X19 + 0x294]
	0x03DEE814 LDR V0, [X19 + 0x290]
	0x03DEE818 LDP X30, X19, [X31], #0x10
	0x03DEE81C RET
	0x03DEE820 STP X30, X19, [X31 - 0x10]!
	0x03DEE824 LDRB W8, [X0 + 0x50]
	0x03DEE828 MOV X19, X0
	0x03DEE82C TBZ X8, 0x2, 0x3DEE844
	0x03DEE830 MOV X0, X19
	0x03DEE834 BL 0x3DEE514
	0x03DEE838 LDR W8, [X19 + 0x50]
	0x03DEE83C AND W8, W8, 0xFFFFFFFB

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+80]
	004 Move X19, X0
	005 Move TEMP, X8
	006 And TEMP, TEMP, 8
	007 Compare TEMP, 8
	008 JumpIfNotEqual {14}
	009 Move X0, X19
	010 Call VisualElement.UpdateBoundingBox, X0
	011 Move W8, [X19+80]
	012 And W8, W8, 0xFFFFFFF7
	013 Move [X19+80], W8
	014 Move V3, [X19+492]
	015 Move V2, [X19+488]
	016 Move V1, [X19+484]
	017 Move V0, [X19+480]
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0

Method: UnityEngine.Rect get_worldBoundingBox()

Disassembly:
	0x03DEEA50 ADD X10, X10, 0x8
	0x03DEEA54 LDUR X11, [X10 - 0x8]
	0x03DEEA58 CMP X11, X1
	0x03DEEA5C B.EQ 0x3DEEA7C
	0x03DEEA60 SUBS X9, X9, 0x1
	0x03DEEA64 ADD X10, X10, 0x10
	0x03DEEA68 B.NE 0x3DEEA54
	0x03DEEA6C MOVZ W2, 0x8
	0x03DEEA70 MOV X0, X19
	0x03DEEA74 BL 0x1C5C788
	0x03DEEA78 B 0x3DEEA8C
	0x03DEEA7C LDR W9, [X10]
	0x03DEEA80 ADD W9, W9, 0x8
	0x03DEEA84 ADD X8, X8, W9, 0x4, SXTW
	0x03DEEA88 ADD X0, X8, 0x138
	0x03DEEA8C LDP X8, X1, [X0]
	0x03DEEA90 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+80]
	004 Move W9, 25
	005 Move X19, X0
	006 And W31, W8, W9
	007 Move X0, X19
	008 Call VisualElement.UpdateWorldBoundingBox, X0
	009 Move W8, [X19+80]
	010 And W8, W8, 0xFFFFFFEF
	011 Move [X19+80], W8
	012 Move V3, [X19+508]
	013 Move V2, [X19+504]
	014 Move V1, [X19+500]
	015 Move V0, [X19+496]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return X0

Method: UnityEngine.Rect get_boundingBoxInParentSpace()

Disassembly:
	0x03DEEB84 FMUL S0, S1, S0
	0x03DEEB88 FSUB S8, S15, S0
	0x03DEEB8C BL 0x3DCA03C
	0x03DEEB90 CMP W0, 0x1
	0x03DEEB94 B.NE 0x3DEEE00
	0x03DEEB98 LDR X8, [X19]
	0x03DEEB9C LDR X1, [X20]
	0x03DEEBA0 LDRH W9, [X8 + 0x12E]
	0x03DEEBA4 CBZ X9, 0x3DEEBC8
	0x03DEEBA8 LDR X10, [X8 + 0xB0]
	0x03DEEBAC ADD X10, X10, 0x8
	0x03DEEBB0 LDUR X11, [X10 - 0x8]
	0x03DEEBB4 CMP X11, X1
	0x03DEEBB8 B.EQ 0x3DEEBD8
	0x03DEEBBC SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Call VisualElement.get_boundingBox, X0
	006 Add X1, X31, 0
	007 Move X0, X19
	008 Move X2, X31
	009 Move [X31], S0
	010 Move [X31+8], S1
	011 Move [X31+8], S2
	012 Move [X31+16], S3
	013 Call 0x3DF9034
	014 Move S0, [X31]
	015 Move S1, [X31+4]
	016 Move S2, [X31+8]
	017 Move S3, [X31+12]
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Add X31, X31, 32
	021 Return X0

Method: System.Void UpdateBoundingBox()

Disassembly:
	0x03DEE840 STR W8, [X19 + 0x50]
	0x03DEE844 LDRB W0, [X19 + 0x2A0]
	0x03DEE848 LDP X30, X19, [X31], #0x10
	0x03DEE84C RET
	0x03DEE850 STP X30, X19, [X31 - 0x10]!
	0x03DEE854 LDR W8, [X0 + 0x50]
	0x03DEE858 MOV X19, X0
	0x03DEE85C TBZ X8, 0x0, 0x3DEE86C
	0x03DEE860 MOV X0, X19
	0x03DEE864 BL 0x3DEDDB0
	0x03DEE868 LDR W8, [X19 + 0x50]
	0x03DEE86C TBZ X8, 0x2, 0x3DEE884
	0x03DEE870 MOV X0, X19
	0x03DEE874 BL 0x3DEE514
	0x03DEE878 LDR W8, [X19 + 0x50]
	0x03DEE87C AND W8, W8, 0xFFFFFFFB
	0x03DEE880 STR W8, [X19 + 0x50]
	0x03DEE884 LDP X30, X19, [X31], #0x10
	0x03DEE888 RET
	0x03DEE88C STP D15, D14, [X31 - 0x60]!
	0x03DEE890 STP D13, D12, [X31 + 0x10]
	0x03DEE894 STP D11, D10, [X31 + 0x20]
	0x03DEE898 STP D9, D8, [X31 + 0x30]
	0x03DEE89C STR X30, [X31 + 0x40]
	0x03DEE8A0 STP X20, X19, [X31 + 0x50]
	0x03DEE8A4 ADRP X20, 0x5FA000
	0x03DEE8A8 LDRB W8, [X20 + 0x242]
	0x03DEE8AC MOV V15.16B, V3.16B
	0x03DEE8B0 MOV V9.16B, V2.16B
	0x03DEE8B4 MOV V10.16B, V1.16B
	0x03DEE8B8 MOV V11.16B, V0.16B
	0x03DEE8BC MOV X19, X0
	0x03DEE8C0 TBNZ X8, 0x0, 0x3DEE8D8
	0x03DEE8C4 ADRP X0, 0x32E000
	0x03DEE8C8 LDR X0, [X0 + 0x120]
	0x03DEE8CC BL 0x1C16CF4
	0x03DEE8D0 MOVZ W8, 0x1
	0x03DEE8D4 STRB W8, [X20 + 0x242]
	0x03DEE8D8 ADRP X20, 0x32E000
	0x03DEE8DC LDRB W8, [X19 + 0x50]
	0x03DEE8E0 LDR X20, [X20 + 0x120]
	0x03DEE8E4 TBNZ X8, 0x0, 0x3DEE8F4
	0x03DEE8E8 LDR V0, [X19 + 0x200]
	0x03DEE8EC STR S0, [X31 + 0x48]
	0x03DEE8F0 B 0x3DEE914
	0x03DEE8F4 MOV X0, X19
	0x03DEE8F8 BL 0x3DEDDB0
	0x03DEE8FC LDRB W8, [X19 + 0x50]
	0x03DEE900 LDR V0, [X19 + 0x200]
	0x03DEE904 STR S0, [X31 + 0x48]
	0x03DEE908 TBZ X8, 0x0, 0x3DEE914
	0x03DEE90C MOV X0, X19
	0x03DEE910 BL 0x3DEDDB0
	0x03DEE914 LDR X8, [X19]
	0x03DEE918 LDR V0, [X19 + 0x214]
	0x03DEE91C LDR X1, [X20]
	0x03DEE920 LDRH W9, [X8 + 0x12E]
	0x03DEE924 STR S0, [X31 + 0x4C]
	0x03DEE928 CBZ X9, 0x3DEE94C
	0x03DEE92C LDR X10, [X8 + 0xB0]
	0x03DEE930 ADD X10, X10, 0x8
	0x03DEE934 LDUR X11, [X10 - 0x8]
	0x03DEE938 CMP X11, X1
	0x03DEE93C B.EQ 0x3DEE95C
	0x03DEE940 SUBS X9, X9, 0x1
	0x03DEE944 ADD X10, X10, 0x10
	0x03DEE948 B.NE 0x3DEE934
	0x03DEE94C MOVZ W2, 0x6
	0x03DEE950 MOV X0, X19
	0x03DEE954 BL 0x1C5C788
	0x03DEE958 B 0x3DEE96C
	0x03DEE95C LDR W9, [X10]
	0x03DEE960 ADD W9, W9, 0x6
	0x03DEE964 ADD X8, X8, W9, 0x4, SXTW
	0x03DEE968 ADD X0, X8, 0x138
	0x03DEE96C LDP X8, X1, [X0]
	0x03DEE970 MOV X0, X19
	0x03DEE974 BLR X8
	0x03DEE978 LDR X8, [X19]
	0x03DEE97C LDR X1, [X20]
	0x03DEE980 MOV V12.16B, V0.16B
	0x03DEE984 LDRH W9, [X8 + 0x12E]
	0x03DEE988 CBZ X9, 0x3DEE9AC
	0x03DEE98C LDR X10, [X8 + 0xB0]
	0x03DEE990 ADD X10, X10, 0x8
	0x03DEE994 LDUR X11, [X10 - 0x8]
	0x03DEE998 CMP X11, X1
	0x03DEE99C B.EQ 0x3DEE9BC
	0x03DEE9A0 SUBS X9, X9, 0x1
	0x03DEE9A4 ADD X10, X10, 0x10
	0x03DEE9A8 B.NE 0x3DEE994
	0x03DEE9AC MOVZ W2, 0xC
	0x03DEE9B0 MOV X0, X19
	0x03DEE9B4 BL 0x1C5C788
	0x03DEE9B8 B 0x3DEE9CC
	0x03DEE9BC LDR W9, [X10]
	0x03DEE9C0 ADD W9, W9, 0xC
	0x03DEE9C4 ADD X8, X8, W9, 0x4, SXTW
	0x03DEE9C8 ADD X0, X8, 0x138
	0x03DEE9CC LDP X8, X1, [X0]
	0x03DEE9D0 MOV X0, X19
	0x03DEE9D4 BLR X8
	0x03DEE9D8 LDR X8, [X19]
	0x03DEE9DC LDR X1, [X20]
	0x03DEE9E0 MOV V13.16B, V0.16B
	0x03DEE9E4 LDRH W9, [X8 + 0x12E]
	0x03DEE9E8 CBZ X9, 0x3DEEA0C
	0x03DEE9EC LDR X10, [X8 + 0xB0]
	0x03DEE9F0 ADD X10, X10, 0x8
	0x03DEE9F4 LDUR X11, [X10 - 0x8]
	0x03DEE9F8 CMP X11, X1
	0x03DEE9FC B.EQ 0x3DEEA1C
	0x03DEEA00 SUBS X9, X9, 0x1
	0x03DEEA04 ADD X10, X10, 0x10
	0x03DEEA08 B.NE 0x3DEE9F4
	0x03DEEA0C MOVZ W2, 0x6
	0x03DEEA10 MOV X0, X19
	0x03DEEA14 BL 0x1C5C788
	0x03DEEA18 B 0x3DEEA2C
	0x03DEEA1C LDR W9, [X10]
	0x03DEEA20 ADD W9, W9, 0x6
	0x03DEEA24 ADD X8, X8, W9, 0x4, SXTW
	0x03DEEA28 ADD X0, X8, 0x138
	0x03DEEA2C LDP X8, X1, [X0]
	0x03DEEA30 MOV X0, X19
	0x03DEEA34 BLR X8
	0x03DEEA38 LDR X8, [X19]
	0x03DEEA3C LDR X1, [X20]
	0x03DEEA40 MOV V14.16B, V0.16B
	0x03DEEA44 LDRH W9, [X8 + 0x12E]
	0x03DEEA48 CBZ X9, 0x3DEEA6C
	0x03DEEA4C LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-96], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x5FB000
	013 Move W8, [X20+573]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x32F000
	020 Move X0, [X0+232]
	021 Call 0x1C17CF4
	022 Move X0, 0x32F000
	023 Move X0, [X0+240]
	024 Call 0x1C17CF4
	025 Move X0, 0x306000
	026 Move X0, [X0+1448]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+573], W8
	030 Move X0, X19
	031 Call VisualElement.get_layout, X0
	032 Move X0, X19
	033 Call VisualElement.get_layout, X0
	034 Move X0, X19
	035 Call VisualElement.get_layout, X0
	036 Move W8, S2
	037 And W8, W8, 0x7FFFFFFF
	038 Move W9, 0x7F800000
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X19
	041 Call VisualElement.get_layout, X0
	042 Move W8, S3
	043 Move W9, 1
	044 And W8, W8, 0x7FFFFFFF
	045 NotImplemented "Instruction MOVK not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, X19
	048 Call VisualElement.get_layout, X0
	049 Add X0, X19, 704
	050 Move X1, X31
	051 Move [X19+480], X31
	052 Move [X19+488], S2
	053 Move [X19+492], S3
	054 Call ComputedStyle.get_overflow, X0
	055 Compare W0, 0
	056 JumpIfEqual {62}
	057 Move W8, [X19+81]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 4
	060 Compare TEMP, 4
	061 JumpIfNotEqual {135}
	062 Move X0, [X19+920]
	063 Compare X0, 0
	064 JumpIfEqual {128}
	065 Move W21, [X0+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X22, 0x32F000
	068 Move X23, 0x306000
	069 Move X22, [X22+240]
	070 Move X23, [X23+1448]
	071 Move W20, W31
	072 Move X2, [X22]
	073 Move W1, W20
	074 Call List`1<Object>.get_Item, X0, X1
	075 Compare X0, 0
	076 JumpIfEqual {128}
	077 Call VisualElement.get_boundingBoxInParentSpace, X0
	078 Move X0, [X23]
	079 Move V12, [X19+480]
	080 Move V10, V0
	081 Move V8, V1
	082 Move W8, [X0+224]
	083 Move V11, V2
	084 Move V9, V3
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move V0, V12
	089 Move V1, V10
	090 Move X0, X31
	091 Call Math.Min, V0, V1
	092 Move V1, [X19+488]
	093 Move V2, [X19+480]
	094 Move [X19+480], S0
	095 Move X0, X31
	096 Add S1, S1, S2
	097 Subtract S1, S1, S0
	098 Move [X19+488], S1
	099 Add S0, S0, S1
	100 Add S1, S11, S10
	101 Call Math.Max, V0, V1
	102 Move V2, [X19+480]
	103 Move V1, [X19+484]
	104 Move X0, X31
	105 Subtract S0, S0, S2
	106 Move [X19+488], S0
	107 Move V0, V1
	108 Move V1, V8
	109 Call Math.Min, V0, V1
	110 Move V1, [X19+492]
	111 Move V2, [X19+484]
	112 Move [X19+484], S0
	113 Move X0, X31
	114 Add S1, S1, S2
	115 Subtract S1, S1, S0
	116 Move [X19+492], S1
	117 Add S0, S0, S1
	118 Add S1, S9, S8
	119 Call Math.Max, V0, V1
	120 Move V1, [X19+484]
	121 Add W20, W20, 1
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract S0, S0, S1
	124 Move [X19+492], S0
	125 Move X0, [X19+920]
	126 Compare X0, 0
	127 JumpIfNotEqual {72}
	128 Call 0x1C17F20
	129 Move X0, X31
	130 Call Rect.get_zero
	131 Move [X19+480], S0
	132 Move [X19+484], S1
	133 Move [X19+488], S2
	134 Move [X19+492], S3
	135 Move W8, [X19+80]
	136 Move X22, [X31+64]
	137 Move X21, [X31+72]
	138 Move X30, [X31+48]
	139 Move X23, [X31+56]
	140 Move D9, [X31+32]
	141 Move D8, [X31+40]
	142 Or W8, W8, 16
	143 Move [X19+80], W8
	144 Move X20, [X31+80]
	145 Move X19, [X31+88]
	146 Move D11, [X31+16]
	147 Move D10, [X31+24]
	148 Move V12, [X31+96]
	149 Return 

Method: System.Void UpdateWorldBoundingBox()

Disassembly:
	0x03DEEA94 BLR X8
	0x03DEEA98 LDR X8, [X19]
	0x03DEEA9C LDR X1, [X20]
	0x03DEEAA0 FADD S8, S14, S0
	0x03DEEAA4 LDRH W9, [X8 + 0x12E]
	0x03DEEAA8 CBZ X9, 0x3DEEACC
	0x03DEEAAC LDR X10, [X8 + 0xB0]
	0x03DEEAB0 ADD X10, X10, 0x8
	0x03DEEAB4 LDUR X11, [X10 - 0x8]
	0x03DEEAB8 CMP X11, X1
	0x03DEEABC B.EQ 0x3DEEADC
	0x03DEEAC0 SUBS X9, X9, 0x1
	0x03DEEAC4 ADD X10, X10, 0x10
	0x03DEEAC8 B.NE 0x3DEEAB4
	0x03DEEACC MOVZ W2, 0xC
	0x03DEEAD0 MOV X0, X19
	0x03DEEAD4 BL 0x1C5C788
	0x03DEEAD8 B 0x3DEEAEC
	0x03DEEADC LDR W9, [X10]
	0x03DEEAE0 ADD W9, W9, 0xC
	0x03DEEAE4 ADD X8, X8, W9, 0x4, SXTW
	0x03DEEAE8 ADD X0, X8, 0x138
	0x03DEEAEC LDP X8, X1, [X0]
	0x03DEEAF0 LDP S1, S0, [X31 + 0x48]
	0x03DEEAF4 MOV X0, X19
	0x03DEEAF8 FMUL S14, S1, S12
	0x03DEEAFC FMUL S13, S0, S13
	0x03DEEB00 FMUL S8, S1, S8
	0x03DEEB04 BLR X8
	0x03DEEB08 LDR X8, [X19]
	0x03DEEB0C LDR X1, [X20]
	0x03DEEB10 MOV V12.16B, V0.16B
	0x03DEEB14 LDRH W9, [X8 + 0x12E]
	0x03DEEB18 CBZ X9, 0x3DEEB3C
	0x03DEEB1C LDR X10, [X8 + 0xB0]
	0x03DEEB20 ADD X10, X10, 0x8
	0x03DEEB24 LDUR X11, [X10 - 0x8]
	0x03DEEB28 CMP X11, X1
	0x03DEEB2C B.EQ 0x3DEEB4C
	0x03DEEB30 SUBS X9, X9, 0x1
	0x03DEEB34 ADD X10, X10, 0x10
	0x03DEEB38 B.NE 0x3DEEB24
	0x03DEEB3C MOVZ W2, 0x4
	0x03DEEB40 MOV X0, X19
	0x03DEEB44 BL 0x1C5C788
	0x03DEEB48 B 0x3DEEB5C
	0x03DEEB4C LDR W9, [X10]
	0x03DEEB50 ADD W9, W9, 0x4
	0x03DEEB54 ADD X8, X8, W9, 0x4, SXTW
	0x03DEEB58 ADD X0, X8, 0x138
	0x03DEEB5C LDP X8, X1, [X0]
	0x03DEEB60 MOV X0, X19
	0x03DEEB64 FADD S11, S11, S14
	0x03DEEB68 FADD S10, S10, S13
	0x03DEEB6C FSUB S9, S9, S8
	0x03DEEB70 BLR X8
	0x03DEEB74 LDR V1, [X31 + 0x4C]
	0x03DEEB78 FADD S0, S12, S0
	0x03DEEB7C ADD X0, X19, 0x2C0
	0x03DEEB80 MOV X1, X31

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x5FB000
	010 Move W8, [X20+574]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x32E000
	017 Move X0, [X0+2200]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+574], W8
	021 Move X20, 0x32E000
	022 Move X20, [X20+2200]
	023 Move X0, X19
	024 Call VisualElement.get_boundingBox, X0
	025 Move W8, [X19+80]
	026 Move [X19+496], S0
	027 Move [X19+500], S1
	028 Move [X19+504], S2
	029 Move [X19+508], S3
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {36}
	034 Move X0, X19
	035 Call VisualElement.UpdateWorldTransform, X0
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X21, 0x5FA000
	042 Move W8, [X21+3041]
	043 Compare W8, 0
	044 JumpIfNotEqual {50}
	045 Move X0, 0x32E000
	046 Move X0, [X0+2200]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+3041], W8
	050 Move X0, [X20]
	051 Move V11, [X19+496]
	052 Move V10, [X19+500]
	053 Move V8, [X19+504]
	054 Move W8, [X0+224]
	055 Move V9, [X19+508]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Add X0, X19, 512
	060 Move V0, V11
	061 Move V1, V10
	062 Move V2, V8
	063 Move V3, V9
	064 Call VisualElement.CalculateConservativeRect, X0, X1
	065 Move [X19+496], S0
	066 Move [X19+500], S1
	067 Move [X19+504], S2
	068 Move [X19+508], S3
	069 Move X20, [X31+48]
	070 Move X19, [X31+56]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Move D9, [X31+16]
	074 Move D8, [X31+24]
	075 Move D11, [X31+64]
	076 Move D10, [X31+72]
	077 Return 

Method: UnityEngine.Rect get_worldBound()

Disassembly:
	0x03DEEC10 LDUR X11, [X10 - 0x8]
	0x03DEEC14 CMP X11, X1
	0x03DEEC18 B.EQ 0x3DEEC38
	0x03DEEC1C SUBS X9, X9, 0x1
	0x03DEEC20 ADD X10, X10, 0x10
	0x03DEEC24 B.NE 0x3DEEC10
	0x03DEEC28 MOVZ W2, 0x1F
	0x03DEEC2C MOV X0, X19
	0x03DEEC30 BL 0x1C5C788
	0x03DEEC34 B 0x3DEEC48
	0x03DEEC38 LDR W9, [X10]
	0x03DEEC3C ADD W9, W9, 0x1F
	0x03DEEC40 ADD X8, X8, W9, 0x4, SXTW
	0x03DEEC44 ADD X0, X8, 0x138
	0x03DEEC48 LDP X8, X1, [X0]
	0x03DEEC4C MOV X0, X19
	0x03DEEC50 BLR X8
	0x03DEEC54 LDR X8, [X19]
	0x03DEEC58 LDR X1, [X20]
	0x03DEEC5C MOV V13.16B, V0.16B
	0x03DEEC60 LDRH W9, [X8 + 0x12E]
	0x03DEEC64 CBZ X9, 0x3DEEC88
	0x03DEEC68 LDR X10, [X8 + 0xB0]
	0x03DEEC6C ADD X10, X10, 0x8
	0x03DEEC70 LDUR X11, [X10 - 0x8]
	0x03DEEC74 CMP X11, X1
	0x03DEEC78 B.EQ 0x3DEEC98
	0x03DEEC7C SUBS X9, X9, 0x1
	0x03DEEC80 ADD X10, X10, 0x10
	0x03DEEC84 B.NE 0x3DEEC70
	0x03DEEC88 MOVZ W2, 0x1D
	0x03DEEC8C MOV X0, X19
	0x03DEEC90 BL 0x1C5C788
	0x03DEEC94 B 0x3DEECA8
	0x03DEEC98 LDR W9, [X10]
	0x03DEEC9C ADD W9, W9, 0x1D
	0x03DEECA0 ADD X8, X8, W9, 0x4, SXTW
	0x03DEECA4 ADD X0, X8, 0x138
	0x03DEECA8 LDP X8, X1, [X0]
	0x03DEECAC MOV X0, X19
	0x03DEECB0 BLR X8
	0x03DEECB4 LDR X8, [X19]
	0x03DEECB8 LDR X1, [X20]
	0x03DEECBC MOV V14.16B, V0.16B
	0x03DEECC0 LDRH W9, [X8 + 0x12E]
	0x03DEECC4 CBZ X9, 0x3DEECE8
	0x03DEECC8 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x5FB000
	008 Move W8, [X20+575]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x32E000
	015 Move X0, [X0+2200]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+575], W8
	019 Move X20, 0x32E000
	020 Move X20, [X20+2200]
	021 Move X0, X19
	022 Call VisualElement.get_layout, X0
	023 Move W8, [X19+80]
	024 Move V8, V2
	025 Move V9, V3
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {32}
	030 Move X0, X19
	031 Call VisualElement.UpdateWorldTransform, X0
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X21, 0x5FA000
	038 Move W8, [X21+3041]
	039 Compare W8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, 0x32E000
	042 Move X0, [X0+2200]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+3041], W8
	046 Move X0, [X20]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Add X0, X19, 512
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+16]
	055 Move X21, [X31+24]
	056 Move S0, W31
	057 Move S1, W31
	058 Move V2, V8
	059 Move V3, V9
	060 Move D9, [X31+48]
	061 Move D8, [X31+56]
	062 Call VisualElement.CalculateConservativeRect, X0, X1
	063 Return X0

Method: UnityEngine.Rect get_localBound()

Disassembly:
	0x03DEECCC ADD X10, X10, 0x8
	0x03DEECD0 LDUR X11, [X10 - 0x8]
	0x03DEECD4 CMP X11, X1
	0x03DEECD8 B.EQ 0x3DEECF8
	0x03DEECDC SUBS X9, X9, 0x1
	0x03DEECE0 ADD X10, X10, 0x10
	0x03DEECE4 B.NE 0x3DEECD0
	0x03DEECE8 MOVZ W2, 0x1E
	0x03DEECEC MOV X0, X19
	0x03DEECF0 BL 0x1C5C788
	0x03DEECF4 B 0x3DEED08
	0x03DEECF8 LDR W9, [X10]
	0x03DEECFC ADD W9, W9, 0x1E
	0x03DEED00 ADD X8, X8, W9, 0x4, SXTW
	0x03DEED04 ADD X0, X8, 0x138

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Call VisualElement.get_layout, X0
	006 Add X1, X31, 0
	007 Move X0, X19
	008 Move X2, X31
	009 Move [X31], X31
	010 Move [X31+8], S2
	011 Move [X31+16], S3
	012 Call 0x3DF9034
	013 Move S0, [X31]
	014 Move S1, [X31+4]
	015 Move S2, [X31+8]
	016 Move S3, [X31+12]
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Add X31, X31, 32
	020 Return X0

Method: UnityEngine.Rect get_rect()

Disassembly:
	0x03DEE76C LDP S2, S3, [X8 + 0x28]
	0x03DEE770 B 0x3DEE7A0
	0x03DEE774 LDRSW X9, [X10]
	0x03DEE778 ADD X8, X8, X9, 0x4, LSL
	0x03DEE77C ADD X0, X8, 0x138
	0x03DEE780 LDP X8, X1, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Call VisualElement.get_layout, X0
	003 Move S0, W31
	004 Move S1, W31
	005 Move X30, [X31+16]
	006 Return X0

Method: System.Boolean get_isWorldTransformDirty()

Disassembly:
	0x03DEED08 LDP X8, X1, [X0]
	0x03DEED0C MOV X0, X19
	0x03DEED10 BLR X8

ISIL:
	001 Move W8, [X0+80]
	002 And W0, W8, 1
	003 Return X0

Method: System.Void set_isWorldTransformDirty(System.Boolean value)

Disassembly:
	0x03DEED14 LDR X8, [X19]
	0x03DEED18 LDR X1, [X20]
	0x03DEED1C FADD S12, S14, S0
	0x03DEED20 LDRH W9, [X8 + 0x12E]
	0x03DEED24 CBZ X9, 0x3DEED48
	0x03DEED28 LDR X10, [X8 + 0xB0]
	0x03DEED2C ADD X10, X10, 0x8
	0x03DEED30 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move W8, [X0+80]
	005 NotImplemented "Instruction BFM not yet implemented."
	006 Move [X0+80], W8
	007 Move X30, [X31+16]
	008 Return 
	009 Call 0x1C17F20

Method: System.Void set_isWorldTransformInverseDirty(System.Boolean value)

Disassembly:
	0x03DEED34 CMP X11, X1
	0x03DEED38 B.EQ 0x3DEED58
	0x03DEED3C SUBS X9, X9, 0x1
	0x03DEED40 ADD X10, X10, 0x10
	0x03DEED44 B.NE 0x3DEED30
	0x03DEED48 MOVZ W2, 0x1F
	0x03DEED4C MOV X0, X19
	0x03DEED50 BL 0x1C5C788
	0x03DEED54 B 0x3DEED68
	0x03DEED58 LDR W9, [X10]
	0x03DEED5C ADD W9, W9, 0x1F
	0x03DEED60 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+80]
	005 And W31, W1, 1
	006 Move W9, 2
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFFFFD
	009 Or W8, W8, W9
	010 Move [X0+80], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Boolean get_isWorldTransformInverseOrDependenciesDirty()

Disassembly:
	0x03DEED64 ADD X0, X8, 0x138
	0x03DEED68 LDP X8, X1, [X0]
	0x03DEED6C LDP S1, S0, [X31 + 0x48]
	0x03DEED70 MOV X0, X19

ISIL:
	001 Move W8, [X0+80]
	002 And W31, W8, 3
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: UnityEngine.Matrix4x4 get_worldTransform()

Disassembly:
	0x03DEED74 FMUL S14, S1, S15
	0x03DEED78 FMUL S13, S0, S13
	0x03DEED7C FMUL S15, S1, S12
	0x03DEED80 BLR X8
	0x03DEED84 LDR X8, [X19]
	0x03DEED88 LDR X1, [X20]
	0x03DEED8C MOV V12.16B, V0.16B
	0x03DEED90 LDRH W9, [X8 + 0x12E]
	0x03DEED94 CBZ X9, 0x3DEEDB8
	0x03DEED98 LDR X10, [X8 + 0xB0]
	0x03DEED9C ADD X10, X10, 0x8
	0x03DEEDA0 LDUR X11, [X10 - 0x8]
	0x03DEEDA4 CMP X11, X1
	0x03DEEDA8 B.EQ 0x3DEEDC8
	0x03DEEDAC SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W9, [X0+80]
	005 Move X20, X0
	006 Move X19, X8
	007 Move TEMP, X9
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {13}
	011 Move X0, X20
	012 Call VisualElement.UpdateWorldTransform, X0
	013 Move V1, [X20+544]
	014 Move V0, [X20+560]
	015 Move V3, [X20+512]
	016 Move V2, [X20+528]
	017 Move [X19+32], V1
	018 Move [X19+40], V0
	019 Move [X19], V3
	020 Move [X19+8], V2
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return X0

Method: UnityEngine.Matrix4x4 get_worldTransformRef()

Disassembly:
	0x03DEEBEC MOV X0, X19
	0x03DEEBF0 BLR X8
	0x03DEEBF4 LDR X8, [X19]
	0x03DEEBF8 LDR X1, [X20]
	0x03DEEBFC MOV V15.16B, V0.16B
	0x03DEEC00 LDRH W9, [X8 + 0x12E]
	0x03DEEC04 CBZ X9, 0x3DEEC28
	0x03DEEC08 LDR X10, [X8 + 0xB0]
	0x03DEEC0C ADD X10, X10, 0x8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+80]
	004 Move X19, X0
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {11}
	009 Move X0, X19
	010 Call VisualElement.UpdateWorldTransform, X0
	011 Add X0, X19, 512
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0

Method: UnityEngine.Matrix4x4 get_worldTransformInverse()

Disassembly:
	0x03DEF078 LDR X21, [X21 + 0xE50]
	0x03DEF07C LDR X22, [X22 + 0x898]
	0x03DEF080 MOV W20, W31
	0x03DEF084 LDR X0, [X21]
	0x03DEF088 LDR W8, [X0 + 0xE0]
	0x03DEF08C CBNZ W8, 0x3DEF098
	0x03DEF090 BL 0x1C16DFC
	0x03DEF094 LDR X0, [X21]
	0x03DEF098 LDR X8, [X0 + 0xB8]
	0x03DEF09C LDR W8, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+80]
	004 Move X19, X0
	005 And W31, W8, 3
	006 Move X0, X19
	007 Call VisualElement.UpdateWorldTransformInverse, X0
	008 Add X0, X19, 576
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0

Method: System.Void UpdateWorldTransform()

Disassembly:
	0x03DEEDB0 ADD X10, X10, 0x10
	0x03DEEDB4 B.NE 0x3DEEDA0
	0x03DEEDB8 MOVZ W2, 0x1C
	0x03DEEDBC MOV X0, X19
	0x03DEEDC0 BL 0x1C5C788
	0x03DEEDC4 B 0x3DEEDD8
	0x03DEEDC8 LDR W9, [X10]
	0x03DEEDCC ADD W9, W9, 0x1C
	0x03DEEDD0 ADD X8, X8, W9, 0x4, SXTW
	0x03DEEDD4 ADD X0, X8, 0x138
	0x03DEEDD8 LDP X8, X1, [X0]
	0x03DEEDDC MOV X0, X19
	0x03DEEDE0 FADD S11, S11, S14
	0x03DEEDE4 FADD S10, S10, S13
	0x03DEEDE8 FSUB S9, S9, S15
	0x03DEEDEC BLR X8
	0x03DEEDF0 LDR V1, [X31 + 0x4C]
	0x03DEEDF4 FADD S0, S12, S0
	0x03DEEDF8 FMUL S0, S1, S0
	0x03DEEDFC FSUB S8, S8, S0
	0x03DEEE00 MOV V0.16B, V11.16B
	0x03DEEE04 MOV V1.16B, V10.16B
	0x03DEEE08 MOV V2.16B, V9.16B
	0x03DEEE0C MOV V3.16B, V8.16B
	0x03DEEE10 LDP X20, X19, [X31 + 0x50]
	0x03DEEE14 LDR X30, [X31 + 0x40]
	0x03DEEE18 LDP D9, D8, [X31 + 0x30]
	0x03DEEE1C LDP D11, D10, [X31 + 0x20]
	0x03DEEE20 LDP D13, D12, [X31 + 0x10]
	0x03DEEE24 LDP D15, D14, [X31], #0x60
	0x03DEEE28 RET
	0x03DEEE2C FCMP S0, S4
	0x03DEEE30 FADD S2, S2, S0
	0x03DEEE34 FADD S6, S6, S4
	0x03DEEE38 FCSEL S0, S0, S4, GT
	0x03DEEE3C FCMP S2, S6
	0x03DEEE40 FADD S3, S3, S1
	0x03DEEE44 FADD S7, S7, S5
	0x03DEEE48 FCSEL S2, S2, S6, MI
	0x03DEEE4C FCMP S1, S5
	0x03DEEE50 FCSEL S1, S1, S5, GT
	0x03DEEE54 FCMP S3, S7
	0x03DEEE58 FCSEL S3, S3, S7, MI
	0x03DEEE5C FMOV S16, W31
	0x03DEEE60 FSUB S2, S2, S0
	0x03DEEE64 FSUB S3, S3, S1
	0x03DEEE68 FMAXNM S2, S2, S16
	0x03DEEE6C FMAXNM S3, S3, S16
	0x03DEEE70 RET
	0x03DEEE74 STP D15, D14, [X31 - 0x50]!
	0x03DEEE78 STP D13, D12, [X31 + 0x10]
	0x03DEEE7C STP D11, D10, [X31 + 0x20]
	0x03DEEE80 STP D9, D8, [X31 + 0x30]
	0x03DEEE84 STP X30, X19, [X31 + 0x40]
	0x03DEEE88 MOV V9.16B, V2.16B
	0x03DEEE8C FMOV S2, W31
	0x03DEEE90 MOV X1, X31
	0x03DEEE94 MOV X19, X0
	0x03DEEE98 MOV V8.16B, V3.16B
	0x03DEEE9C MOV V10.16B, V1.16B
	0x03DEEEA0 MOV V11.16B, V0.16B
	0x03DEEEA4 BL 0x3C28278
	0x03DEEEA8 FADD S9, S11, S9
	0x03DEEEAC MOV V12.16B, V0.16B
	0x03DEEEB0 MOV V13.16B, V1.16B
	0x03DEEEB4 FMOV S2, W31
	0x03DEEEB8 MOV X0, X19
	0x03DEEEBC MOV V0.16B, V9.16B
	0x03DEEEC0 MOV V1.16B, V10.16B
	0x03DEEEC4 MOV X1, X31
	0x03DEEEC8 BL 0x3C28278
	0x03DEEECC FADD S8, S10, S8
	0x03DEEED0 MOV V14.16B, V0.16B
	0x03DEEED4 MOV V15.16B, V1.16B
	0x03DEEED8 FMOV S2, W31
	0x03DEEEDC MOV X0, X19
	0x03DEEEE0 MOV V0.16B, V11.16B
	0x03DEEEE4 MOV V1.16B, V8.16B
	0x03DEEEE8 MOV X1, X31
	0x03DEEEEC BL 0x3C28278
	0x03DEEEF0 MOV V10.16B, V0.16B
	0x03DEEEF4 MOV V11.16B, V1.16B
	0x03DEEEF8 FMOV S2, W31
	0x03DEEEFC MOV X0, X19
	0x03DEEF00 MOV V0.16B, V9.16B
	0x03DEEF04 MOV V1.16B, V8.16B
	0x03DEEF08 MOV X1, X31
	0x03DEEF0C BL 0x3C28278
	0x03DEEF10 FCMP S11, S1
	0x03DEEF14 FCSEL S2, S11, S1, MI
	0x03DEEF18 FCSEL S3, S11, S1, GT
	0x03DEEF1C FCMP S10, S0
	0x03DEEF20 FCSEL S1, S10, S0, MI
	0x03DEEF24 FCSEL S4, S10, S0, GT
	0x03DEEF28 FCMP S14, S1
	0x03DEEF2C FCSEL S0, S14, S1, MI
	0x03DEEF30 FCMP S12, S0
	0x03DEEF34 FCSEL S0, S12, S0, MI
	0x03DEEF38 FCMP S15, S2
	0x03DEEF3C FCSEL S1, S15, S2, MI
	0x03DEEF40 FCMP S13, S1
	0x03DEEF44 FCSEL S1, S13, S1, MI
	0x03DEEF48 FCMP S14, S4
	0x03DEEF4C FCSEL S2, S14, S4, GT
	0x03DEEF50 FCMP S12, S2
	0x03DEEF54 FCSEL S2, S12, S2, GT
	0x03DEEF58 FCMP S15, S3
	0x03DEEF5C FCSEL S3, S15, S3, GT
	0x03DEEF60 FCMP S13, S3
	0x03DEEF64 FCSEL S3, S13, S3, GT
	0x03DEEF68 LDP X30, X19, [X31 + 0x40]
	0x03DEEF6C LDP D9, D8, [X31 + 0x30]
	0x03DEEF70 LDP D11, D10, [X31 + 0x20]
	0x03DEEF74 LDP D13, D12, [X31 + 0x10]
	0x03DEEF78 FSUB S2, S2, S0
	0x03DEEF7C FSUB S3, S3, S1
	0x03DEEF80 LDP D15, D14, [X31], #0x50
	0x03DEEF84 RET
	0x03DEEF88 LDR W0, [X0 + 0x2AC]
	0x03DEEF8C RET
	0x03DEEF90 STR X30, [X31 - 0x20]!
	0x03DEEF94 STP X20, X19, [X31 + 0x10]
	0x03DEEF98 LDR W8, [X0 + 0x2AC]
	0x03DEEF9C EOR W9, W8, W1, 0x0
	0x03DEEFA0 CMP W9, 0x1
	0x03DEEFA4 B.LT 0x3DEF008
	0x03DEEFA8 MOV X19, X0
	0x03DEEFAC MOV W20, W1
	0x03DEEFB0 TBZ X1, 0x7, 0x3DEEFBC
	0x03DEEFB4 MOVZ W10, 0x1
	0x03DEEFB8 STRB W10, [X19 + 0x380]
	0x03DEEFBC CMP W9, 0x80
	0x03DEEFC0 B.EQ 0x3DEF004
	0x03DEEFC4 LDR W10, [X19 + 0x2A4]
	0x03DEEFC8 AND W11, W9, W20, 0x0
	0x03DEEFCC ANDS W31, W11, W10, 0x0
	0x03DEEFD0 B.NE 0x3DEEFE4
	0x03DEEFD4 LDR W10, [X19 + 0x2A8]
	0x03DEEFD8 AND W8, W9, W8, 0x0
	0x03DEEFDC ANDS W31, W8, W10, 0x0
	0x03DEEFE0 B.EQ 0x3DEF004
	0x03DEEFE4 LDR X0, [X19 + 0x3A0]
	0x03DEEFE8 CBZ X0, 0x3DEF004
	0x03DEEFEC LDR X8, [X0]
	0x03DEEFF0 MOVZ W2, 0x10
	0x03DEEFF4 MOV X1, X19
	0x03DEEFF8 LDR X9, [X8 + 0x338]
	0x03DEEFFC LDR X3, [X8 + 0x340]
	0x03DEF000 BLR X9
	0x03DEF004 STR W20, [X19 + 0x2AC]
	0x03DEF008 LDP X20, X19, [X31 + 0x10]
	0x03DEF00C LDR X30, [X31], #0x20
	0x03DEF010 RET
	0x03DEF014 LDR W0, [X0 + 0x2B0]
	0x03DEF018 RET
	0x03DEF01C STR W1, [X0 + 0x2B0]
	0x03DEF020 RET
	0x03DEF024 STR X30, [X31 - 0x30]!
	0x03DEF028 STP X22, X21, [X31 + 0x10]
	0x03DEF02C STP X20, X19, [X31 + 0x20]
	0x03DEF030 ADRP X20, 0x5F9000
	0x03DEF034 LDRB W8, [X20 + 0x243]
	0x03DEF038 MOV X19, X0
	0x03DEF03C TBNZ X8, 0x0, 0x3DEF060
	0x03DEF040 ADRP X0, 0x32D000
	0x03DEF044 LDR X0, [X0 + 0xE50]
	0x03DEF048 BL 0x1C16CF4
	0x03DEF04C ADRP X0, 0x32C000
	0x03DEF050 LDR X0, [X0 + 0x898]
	0x03DEF054 BL 0x1C16CF4
	0x03DEF058 MOVZ W8, 0x1
	0x03DEF05C STRB W8, [X20 + 0x243]
	0x03DEF060 LDR W8, [X19 + 0x2B0]
	0x03DEF064 CBZ W8, 0x3DEF0F4
	0x03DEF068 LDR X8, [X19 + 0x3A0]
	0x03DEF06C CBZ X8, 0x3DEF0F4
	0x03DEF070 ADRP X21, 0x32D000
	0x03DEF074 ADRP X22, 0x32C000

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+144], D8
	003 Move [X31+160], X30
	004 Move [X31+168], X23
	005 Move [X31+176], X22
	006 Move [X31+184], X21
	007 Move [X31+192], X20
	008 Move [X31+200], X19
	009 Move X20, 0x5FB000
	010 Move W8, [X20+576]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x32E000
	017 Move X0, [X0+2200]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+576], W8
	021 NotImplemented "Instruction MOVI not yet implemented."
	022 Move [X31+80], V0
	023 Move [X31+88], V0
	024 Move [X31+48], V0
	025 Move [X31+56], V0
	026 Move X8, [X19+928]
	027 Compare X8, 0
	028 JumpIfEqual {35}
	029 Move W8, [X8+76]
	030 Compare W8, 0
	031 JumpIfNotEqual {35}
	032 Move W8, [X19+80]
	033 And W8, W8, 0xFFFFFFFE
	034 Move [X19+80], W8
	035 Move X8, [X19+888]
	036 Add X0, X31, 152
	037 Move X1, X31
	038 Move [X31+152], X8
	039 Call Hierarchy.get_parent, X0
	040 Compare X0, 0
	041 JumpIfEqual {192}
	042 Add X20, X19, 704
	043 Add X8, X31, 120
	044 Move X0, X20
	045 Move X1, X31
	046 Call ComputedStyle.get_rotate, X0
	047 Move V0, [X31+120]
	048 NotImplemented "Instruction FCMP not yet implemented."
	049 Move X0, X20
	050 Move X1, X31
	051 Call ComputedStyle.get_scale, X0
	052 Move X20, 0x5EB000
	053 Move W8, [X20+2139]
	054 Move X9, X0
	055 ShiftRight X9, 32
	056 And X9, X9, 0x7FFFFFFF
	057 Move S3, W9
	058 Move S8, W0
	059 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	060 Compare W8, 0
	061 JumpIfNotEqual {69}
	062 Move X0, 0x306000
	063 Move X0, [X0+1440]
	064 Move [X31+2], V3
	065 Call 0x1C17CF4
	066 Move V3, [X31+2]
	067 Move W8, 1
	068 Move [X20+2139], W8
	069 Move X8, 0x306000
	070 Move X8, [X8+1440]
	071 Move X8, [X8]
	072 Move X8, [X8+184]
	073 Move V0, [X8+12]
	074 Move V1, [X8+16]
	075 Move X8, -53493760
	076 Move V2, [X8+3872]
	077 Subtract S0, S8, S0
	078 Subtract V1, V3, V1
	079 Multiply S0, S0, S0
	080 NotImplemented "Instruction INVALID not yet implemented."
	081 Add S0, S0, S1
	082 Move S1, V1.S[1]
	083 Add S0, S1, S0
	084 NotImplemented "Instruction FCMP not yet implemented."
	085 Move X8, [X19+888]
	086 Add X0, X31, 152
	087 Move X1, X31
	088 Move [X31+152], X8
	089 Call Hierarchy.get_parent, X0
	090 Compare X0, 0
	091 JumpIfEqual {208}
	092 Move W8, [X0+80]
	093 Move X20, X0
	094 Move TEMP, X8
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {100}
	098 Move X0, X20
	099 Call VisualElement.UpdateWorldTransform, X0
	100 Move X0, X19
	101 Call VisualElement.get_positionWithLayout, X0
	102 Move [X31+32], D0
	103 Move [X31+16], D1
	104 Move X21, 0x32E000
	105 Move X21, [X21+2200]
	106 Move [X31], D2
	107 Move X0, [X21]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X23, 0x5FB000
	113 Move W8, [X23+649]
	114 Add X22, X20, 512
	115 Add X20, X19, 512
	116 Compare W8, 0
	117 JumpIfNotEqual {123}
	118 Move X0, 0x32E000
	119 Move X0, [X0+2200]
	120 Call 0x1C17CF4
	121 Move W8, 1
	122 Move [X23+649], W8
	123 Move V1, [X22+32]
	124 Move V0, [X22+48]
	125 Move V3, [X22]
	126 Move V2, [X22+16]
	127 Move [X20+32], V1
	128 Move [X20+40], V0
	129 Move [X20], V3
	130 Move [X20+8], V2
	131 Move X0, [X21]
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move V0, [X19+512]
	137 Move V1, [X19+528]
	138 Move V2, [X19+520]
	139 Move V4, [X19+536]
	140 Move V6, [X31+16]
	141 Move V5, [X31+32]
	142 Move V3, [X19+544]
	143 NotImplemented "Instruction INVALID not yet implemented."
	144 Multiply S2, S5, S2
	145 Move V5, [X19+552]
	146 NotImplemented "Instruction INVALID not yet implemented."
	147 Multiply S4, S6, S4
	148 Move V6, [X31]
	149 Add V0, V0, V1
	150 Move V1, [X19+568]
	151 Add S2, S2, S4
	152 NotImplemented "Instruction INVALID not yet implemented."
	153 Multiply S5, S6, S5
	154 Move V6, [X19+560]
	155 Add V0, V0, V3
	156 Add S2, S2, S5
	157 Add S1, S1, S2
	158 Add V0, V6, V0
	159 Move [X19+560], D0
	160 Move [X19+568], S1
	161 Add X1, X31, 48
	162 Move X0, X19
	163 Call VisualElement.GetPivotedMatrixWithLayout, X0, X1
	164 Move X8, [X19+888]
	165 Add X0, X31, 152
	166 Move X1, X31
	167 Move [X31+152], X8
	168 Call Hierarchy.get_parent, X0
	169 Compare X0, 0
	170 JumpIfEqual {208}
	171 Move W8, [X0+80]
	172 Move X20, X0
	173 Move TEMP, X8
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {179}
	177 Move X0, X20
	178 Call VisualElement.UpdateWorldTransform, X0
	179 Move X8, 0x32D000
	180 Move X8, [X8+2200]
	181 Add X21, X20, 512
	182 Add X20, X19, 512
	183 Move X0, [X8]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Add X1, X31, 48
	189 Move X0, X21
	190 Move X2, X20
	191 Call VisualElement.MultiplyMatrix34, X0, X1, X2
	192 Add X1, X19, 512
	193 Move X0, X19
	194 Call VisualElement.GetPivotedMatrixWithLayout, X0, X1
	195 Move W8, [X19+80]
	196 Move W9, 18
	197 Move X22, [X31+176]
	198 Move X21, [X31+184]
	199 Move X30, [X31+160]
	200 Move X23, [X31+168]
	201 Or W8, W8, W9
	202 Move [X19+80], W8
	203 Move X20, [X31+192]
	204 Move X19, [X31+200]
	205 Move V8, [X31+144]
	206 Add X31, X31, 208
	207 Return 
	208 Call 0x1C17F20

Method: System.Void UpdateWorldTransformInverse()

Disassembly:
	0x03DEF0A0 CMP W20, W8
	0x03DEF0A4 B.GE 0x3DEF0F4
	0x03DEF0A8 LDR W8, [X19 + 0x2B0]
	0x03DEF0AC LSRV W8, W8, W20
	0x03DEF0B0 TBZ X8, 0x0, 0x3DEF0EC
	0x03DEF0B4 LDR X0, [X19 + 0x3A0]
	0x03DEF0B8 MOV W1, W20
	0x03DEF0BC MOV X2, X31
	0x03DEF0C0 BL 0x3DBF5D4
	0x03DEF0C4 LDR X8, [X22]
	0x03DEF0C8 STR X0, [X31 + 0x8]
	0x03DEF0CC LDR W9, [X8 + 0xE0]
	0x03DEF0D0 CBNZ W9, 0x3DEF0DC
	0x03DEF0D4 MOV X0, X8
	0x03DEF0D8 BL 0x1C16DFC
	0x03DEF0DC ADD X1, X31, 0x8
	0x03DEF0E0 MOV X0, X19
	0x03DEF0E4 BL 0x3DEF11C
	0x03DEF0E8 TBNZ X0, 0x0, 0x3DEF110
	0x03DEF0EC ADD W20, W20, 0x1
	0x03DEF0F0 B 0x3DEF084

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 Move W8, [X0+80]
	005 Move X19, X0
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfNotEqual {12}
	010 Move X0, X19
	011 Call VisualElement.UpdateWorldTransform, X0
	012 Move V1, [X19+544]
	013 Move V0, [X19+560]
	014 Move V3, [X19+512]
	015 Move V2, [X19+528]
	016 Add X1, X19, 576
	017 Add X0, X31, 0
	018 Move X2, X31
	019 Move [X31+32], V1
	020 Move [X31+40], V0
	021 Move [X31], V3
	022 Move [X31+8], V2
	023 Call Matrix4x4.Inverse3DAffine, X0, X1
	024 Move W8, [X19+80]
	025 And W8, W8, 0xFFFFFFFD
	026 Move [X19+80], W8
	027 Move X30, [X31+64]
	028 Move X19, [X31+72]
	029 Add X31, X31, 80
	030 Return 

Method: System.Boolean get_isWorldClipDirty()

Disassembly:
	0x03DEF49C ADRP X8, 0x37A000
	0x03DEF4A0 LDR X2, [X19]
	0x03DEF4A4 LDR X8, [X8 + 0x918]

ISIL:
	001 Move W8, [X0+80]
	002 Move W0, W8
	003 ShiftRight W0, 2
	004 And W0, W0, 3
	005 Return X0

Method: System.Void set_isWorldClipDirty(System.Boolean value)

Disassembly:
	0x03DEF4A8 MOV X1, X20
	0x03DEF4AC LDR X3, [X8]
	0x03DEF4B0 BL 0x2AA5098
	0x03DEF4B4 LDR X0, [X19]
	0x03DEF4B8 LDP X20, X19, [X31 + 0x20]
	0x03DEF4BC LDP X22, X21, [X31 + 0x10]
	0x03DEF4C0 LDR X30, [X31], #0x30
	0x03DEF4C4 RET
	0x03DEF4C8 BL 0x1C16F20
	0x03DEF4CC STR X30, [X31 - 0x10]!
	0x03DEF4D0 BL 0x3DEF3A0
	0x03DEF4D4 CBZ X0, 0x3DEF4E4

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+80]
	005 And W31, W1, 1
	006 Move W9, 4
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFFFFB
	009 Or W8, W8, W9
	010 Move [X0+80], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: UnityEngine.Rect get_worldClip()

Disassembly:
	0x03DEF4D8 MOV X1, X31
	0x03DEF4DC LDR X30, [X31], #0x10
	0x03DEF4E0 B 0x3DFA9A8
	0x03DEF4E4 BL 0x1C16F20
	0x03DEF4E8 LDR X0, [X0 + 0x2B8]
	0x03DEF4EC RET
	0x03DEF4F0 STR X1, [X0 + 0x2B8]
	0x03DEF4F4 RET
	0x03DEF4F8 LDR X8, [X0 + 0x3B0]
	0x03DEF4FC CMP X8, 0x0
	0x03DEF500 CSET W0, NE
	0x03DEF504 RET
	0x03DEF508 STR X30, [X31 - 0x10]!
	0x03DEF50C CBZ X0, 0x3DEF534
	0x03DEF510 LDR W8, [X0 + 0x50]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+80]
	004 Move X19, X0
	005 Move TEMP, X8
	006 And TEMP, TEMP, 4
	007 Compare TEMP, 4
	008 JumpIfNotEqual {14}
	009 Move X0, X19
	010 Call VisualElement.UpdateWorldClip, X0
	011 Move W8, [X19+80]
	012 And W8, W8, 0xFFFFFFFB
	013 Move [X19+80], W8
	014 Move V3, [X19+652]
	015 Move V2, [X19+648]
	016 Move V1, [X19+644]
	017 Move V0, [X19+640]
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0

Method: UnityEngine.Rect get_worldClipMinusGroup()

Disassembly:
	0x03DEF7E4 BL 0x3DEC160
	0x03DEF7E8 MOV X0, X19
	0x03DEF7EC MOV X1, X31
	0x03DEF7F0 BL 0x33BE520
	0x03DEF7F4 LDR X8, [X21]
	0x03DEF7F8 MOV X20, X0
	0x03DEF7FC LDR W9, [X8 + 0xE0]
	0x03DEF800 CBNZ W9, 0x3DEF80C
	0x03DEF804 MOV X0, X8
	0x03DEF808 BL 0x1C16DFC
	0x03DEF80C ADD X2, X19, 0x374
	0x03DEF810 ADD X1, X19, 0x370
	0x03DEF814 MOV X0, X20
	0x03DEF818 MOV X3, X31
	0x03DEF81C BL 0x3D16EA4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+80]
	004 Move X19, X0
	005 Move TEMP, X8
	006 And TEMP, TEMP, 4
	007 Compare TEMP, 4
	008 JumpIfNotEqual {14}
	009 Move X0, X19
	010 Call VisualElement.UpdateWorldClip, X0
	011 Move W8, [X19+80]
	012 And W8, W8, 0xFFFFFFFB
	013 Move [X19+80], W8
	014 Move V3, [X19+668]
	015 Move V2, [X19+664]
	016 Move V1, [X19+660]
	017 Move V0, [X19+656]
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0

Method: System.Boolean get_worldClipIsInfinite()

Disassembly:
	0x03DEF820 LDP X20, X19, [X31 + 0xD0]
	0x03DEF824 LDP X22, X21, [X31 + 0xC0]
	0x03DEF828 LDP X30, X23, [X31 + 0xB0]
	0x03DEF82C ADD X31, X31, 0xE0
	0x03DEF830 RET
	0x03DEF834 LDRB W8, [X0 + 0x32C]
	0x03DEF838 AND W1, W1, 0x1
	0x03DEF83C CMP W8, 0x0
	0x03DEF840 CSET W8, NE
	0x03DEF844 CMP W8, W1
	0x03DEF848 B.EQ 0x3DEF854
	0x03DEF84C STRB W1, [X0 + 0x32C]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+80]
	004 Move X19, X0
	005 Move TEMP, X8
	006 And TEMP, TEMP, 4
	007 Compare TEMP, 4
	008 JumpIfNotEqual {14}
	009 Move X0, X19
	010 Call VisualElement.UpdateWorldClip, X0
	011 Move W8, [X19+80]
	012 And W8, W8, 0xFFFFFFFB
	013 Move [X19+80], W8
	014 Move W0, [X19+672]
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0

Method: System.Void EnsureWorldTransformAndClipUpToDate()

Disassembly:
	0x03DEF850 B 0x3DF1EA0
	0x03DEF854 RET
	0x03DEF858 STP X30, X23, [X31 - 0x30]!
	0x03DEF85C STP X22, X21, [X31 + 0x10]
	0x03DEF860 STP X20, X19, [X31 + 0x20]
	0x03DEF864 ADRP X21, 0x5F9000
	0x03DEF868 LDRB W8, [X21 + 0x247]
	0x03DEF86C MOV X20, X1
	0x03DEF870 MOV X19, X0
	0x03DEF874 TBNZ X8, 0x0, 0x3DEF994
	0x03DEF878 ADRP X0, 0x379000
	0x03DEF87C LDR X0, [X0 + 0x350]
	0x03DEF880 BL 0x1C16CF4
	0x03DEF884 ADRP X0, 0x37A000
	0x03DEF888 LDR X0, [X0 + 0x930]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+80]
	004 Move X19, X0
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {12}
	009 Move X0, X19
	010 Call VisualElement.UpdateWorldTransform, X0
	011 Move W8, [X19+80]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 4
	014 Compare TEMP, 4
	015 JumpIfNotEqual {21}
	016 Move X0, X19
	017 Call VisualElement.UpdateWorldClip, X0
	018 Move W8, [X19+80]
	019 And W8, W8, 0xFFFFFFFB
	020 Move [X19+80], W8
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return 

Method: System.Void UpdateWorldClip()

Disassembly:
	0x03DEF514 ANDS W31, W1, 0x1
	0x03DEF518 MOVZ W9, 0x2000
	0x03DEF51C CSEL W9, W9, W31, NE
	0x03DEF520 AND W8, W8, 0xFFFFDFFF
	0x03DEF524 ORR W8, W8, W9, 0x0
	0x03DEF528 STR W8, [X0 + 0x50]
	0x03DEF52C LDR X30, [X31], #0x10
	0x03DEF530 RET
	0x03DEF534 BL 0x1C16F20
	0x03DEF538 SUB X31, X31, 0x20
	0x03DEF53C STP X30, X19, [X31 + 0x10]
	0x03DEF540 CBZ X0, 0x3DEF56C
	0x03DEF544 MOV W19, W1
	0x03DEF548 LDR W8, [X0 + 0x328]
	0x03DEF54C LDR X9, [X0 + 0x378]
	0x03DEF550 MOV X1, X31
	0x03DEF554 ADD W8, W8, W19
	0x03DEF558 STR W8, [X0 + 0x328]
	0x03DEF55C ADD X0, X31, 0x8
	0x03DEF560 STR X9, [X31 + 0x8]
	0x03DEF564 BL 0x3DF88DC
	0x03DEF568 CBNZ X0, 0x3DEF548
	0x03DEF56C LDP X30, X19, [X31 + 0x10]
	0x03DEF570 ADD X31, X31, 0x20
	0x03DEF574 RET
	0x03DEF578 SUB X31, X31, 0xE0
	0x03DEF57C STP X30, X23, [X31 + 0xB0]
	0x03DEF580 STP X22, X21, [X31 + 0xC0]
	0x03DEF584 STP X20, X19, [X31 + 0xD0]
	0x03DEF588 ADRP X20, 0x5F9000
	0x03DEF58C LDRB W8, [X20 + 0x246]
	0x03DEF590 MOV X19, X0
	0x03DEF594 TBNZ X8, 0x0, 0x3DEF5E8
	0x03DEF598 ADRP X0, 0x32F000
	0x03DEF59C LDR X0, [X0 + 0xCC0]
	0x03DEF5A0 BL 0x1C16CF4
	0x03DEF5A4 ADRP X0, 0x375000
	0x03DEF5A8 LDR X0, [X0 + 0x358]
	0x03DEF5AC BL 0x1C16CF4
	0x03DEF5B0 ADRP X0, 0x306000
	0x03DEF5B4 LDR X0, [X0 + 0x278]
	0x03DEF5B8 BL 0x1C16CF4
	0x03DEF5BC ADRP X0, 0x375000
	0x03DEF5C0 LDR X0, [X0 + 0x2A8]
	0x03DEF5C4 BL 0x1C16CF4
	0x03DEF5C8 ADRP X0, 0x32C000
	0x03DEF5CC LDR X0, [X0 + 0x898]
	0x03DEF5D0 BL 0x1C16CF4
	0x03DEF5D4 ADRP X0, 0x37A000
	0x03DEF5D8 LDR X0, [X0 + 0x258]
	0x03DEF5DC BL 0x1C16CF4
	0x03DEF5E0 MOVZ W8, 0x1
	0x03DEF5E4 STRB W8, [X20 + 0x246]
	0x03DEF5E8 ADRP X21, 0x5E9000
	0x03DEF5EC ADRP X20, 0x375000
	0x03DEF5F0 LDRB W8, [X21 + 0xAC0]
	0x03DEF5F4 LDR X20, [X20 + 0x358]
	0x03DEF5F8 CBNZ W8, 0x3DEF610
	0x03DEF5FC ADRP X0, 0x308000
	0x03DEF600 LDR X0, [X0 + 0x270]
	0x03DEF604 BL 0x1C16CF4
	0x03DEF608 MOVZ W8, 0x1
	0x03DEF60C STRB W8, [X21 + 0xAC0]
	0x03DEF610 ADRP X8, 0x308000
	0x03DEF614 LDR X8, [X8 + 0x270]
	0x03DEF618 ADRP X21, 0x375000
	0x03DEF61C MOV X0, X31
	0x03DEF620 LDR X8, [X8]
	0x03DEF624 LDR X9, [X8 + 0xB8]
	0x03DEF628 LDP V1, V0, [X9 + 0x60]
	0x03DEF62C LDP V3, V2, [X9 + 0x40]
	0x03DEF630 STP V1, V0, [X19 + 0x220]
	0x03DEF634 STP V3, V2, [X19 + 0x200]
	0x03DEF638 LDR X8, [X8 + 0xB8]
	0x03DEF63C LDP V0, V1, [X8 + 0x60]
	0x03DEF640 LDP V2, V3, [X8 + 0x40]
	0x03DEF644 LDR X21, [X21 + 0x2A8]
	0x03DEF648 STP V0, V1, [X19 + 0x260]
	0x03DEF64C STP V2, V3, [X19 + 0x240]
	0x03DEF650 BL 0x3C0B398
	0x03DEF654 MOV X0, X31
	0x03DEF658 STR S0, [X19 + 0x280]
	0x03DEF65C STR S1, [X19 + 0x284]
	0x03DEF660 STR S2, [X19 + 0x288]
	0x03DEF664 STR S3, [X19 + 0x28C]
	0x03DEF668 BL 0x3C0B398
	0x03DEF66C STR S0, [X19 + 0x290]
	0x03DEF670 STR S1, [X19 + 0x294]
	0x03DEF674 STR S2, [X19 + 0x298]
	0x03DEF678 STR S3, [X19 + 0x29C]
	0x03DEF67C STRB W31, [X19 + 0x2A0]
	0x03DEF680 LDR X0, [X20]
	0x03DEF684 LDR W8, [X0 + 0xE0]
	0x03DEF688 CBNZ W8, 0x3DEF690
	0x03DEF68C BL 0x1C16DFC
	0x03DEF690 ADRP X20, 0x32C000
	0x03DEF694 LDR X20, [X20 + 0x898]
	0x03DEF698 ADD X8, X31, 0x0
	0x03DEF69C MOV X0, X31
	0x03DEF6A0 BL 0x3D44118
	0x03DEF6A4 ADD X0, X31, 0x58
	0x03DEF6A8 ADD X1, X31, 0x0
	0x03DEF6AC MOVZ W2, 0x58
	0x03DEF6B0 BL 0x3EB1AC0
	0x03DEF6B4 ADD X0, X19, 0x2C0
	0x03DEF6B8 ADD X1, X31, 0x58
	0x03DEF6BC MOVZ W2, 0x58
	0x03DEF6C0 BL 0x3EB1AC0
	0x03DEF6C4 LDR X0, [X21]
	0x03DEF6C8 LDR W8, [X0 + 0xE0]
	0x03DEF6CC CBNZ W8, 0x3DEF6D8
	0x03DEF6D0 BL 0x1C16DFC
	0x03DEF6D4 LDR X0, [X21]
	0x03DEF6D8 LDR X8, [X0 + 0xB8]
	0x03DEF6DC MOVI V0.2D, 0x0
	0x03DEF6E0 MOV X0, X19
	0x03DEF6E4 MOV X1, X31
	0x03DEF6E8 LDR X8, [X8]
	0x03DEF6EC STR W31, [X19 + 0x320]
	0x03DEF6F0 STR W31, [X19 + 0x328]
	0x03DEF6F4 STR W31, [X19 + 0x340]
	0x03DEF6F8 STR D0, [X19 + 0x368]
	0x03DEF6FC STR X8, [X19 + 0x318]
	0x03DEF700 STR X31, [X19 + 0x3A8]
	0x03DEF704 BL 0x3DAED2C
	0x03DEF708 MOV X0, X31
	0x03DEF70C BL 0x3DBB8BC
	0x03DEF710 LDR X0, [X20]
	0x03DEF714 LDR W8, [X0 + 0xE0]
	0x03DEF718 CBNZ W8, 0x3DEF724
	0x03DEF71C BL 0x1C16DFC
	0x03DEF720 LDR X0, [X20]
	0x03DEF724 LDR X8, [X0 + 0xB8]
	0x03DEF728 ADRP X23, 0x306000
	0x03DEF72C ADRP X22, 0x37A000
	0x03DEF730 ADRP X21, 0x32F000
	0x03DEF734 LDR X9, [X8 + 0x48]
	0x03DEF738 ADD X0, X31, 0x0
	0x03DEF73C MOV X1, X19
	0x03DEF740 MOV X2, X31
	0x03DEF744 STR X9, [X19 + 0x398]
	0x03DEF748 LDR W9, [X8]
	0x03DEF74C LDR X23, [X23 + 0x278]
	0x03DEF750 LDR X22, [X22 + 0x258]
	0x03DEF754 LDR X21, [X21 + 0xCC0]
	0x03DEF758 ADD W9, W9, 0x1
	0x03DEF75C STR W9, [X8]
	0x03DEF760 STR W9, [X19 + 0x324]
	0x03DEF764 STR X31, [X31]
	0x03DEF768 BL 0x3DF8914
	0x03DEF76C LDR X8, [X31]
	0x03DEF770 LDRB W9, [X19 + 0x32C]
	0x03DEF774 MOVZ W10, 0x103F
	0x03DEF778 STR X8, [X19 + 0x378]
	0x03DEF77C LDR X8, [X20]
	0x03DEF780 LDR X8, [X8 + 0xB8]
	0x03DEF784 LDR X8, [X8 + 0x8]
	0x03DEF788 STR W10, [X19 + 0x50]
	0x03DEF78C STR X8, [X19 + 0x40]
	0x03DEF790 CBNZ W9, 0x3DEF7A8
	0x03DEF794 MOVZ W8, 0x1
	0x03DEF798 MOVZ W1, 0x1
	0x03DEF79C MOV X0, X19
	0x03DEF7A0 STRB W8, [X19 + 0x32C]
	0x03DEF7A4 BL 0x3DF1EA0
	0x03DEF7A8 STRB W31, [X19 + 0x20]
	0x03DEF7AC LDR X8, [X23]
	0x03DEF7B0 MOV X0, X19
	0x03DEF7B4 LDR X8, [X8 + 0xB8]
	0x03DEF7B8 LDR X1, [X8]
	0x03DEF7BC BL 0x3DEF278
	0x03DEF7C0 LDR X0, [X22]
	0x03DEF7C4 BL 0x1C16F10
	0x03DEF7C8 MOV X1, X31
	0x03DEF7CC MOV X2, X31
	0x03DEF7D0 MOV X20, X0
	0x03DEF7D4 BL 0x3CE6CD0
	0x03DEF7D8 MOV X0, X19
	0x03DEF7DC MOV W1, W31
	0x03DEF7E0 STR X20, [X19 + 0x2B8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x5FA000
	011 Move W8, [X20+577]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x32E000
	018 Move X0, [X0+3712]
	019 Call 0x1C17CF4
	020 Move X0, 0x32D000
	021 Move X0, [X0+2200]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+577], W8
	025 Move X8, [X19+888]
	026 Add X0, X31, 8
	027 Move X1, X31
	028 Move [X31+8], X8
	029 Call Hierarchy.get_parent, X0
	030 Compare X0, 0
	031 JumpIfEqual {72}
	032 Move X8, [X19+888]
	033 Add X0, X31, 8
	034 Move X1, X31
	035 Move [X31+8], X8
	036 Call Hierarchy.get_parent, X0
	037 Compare X0, 0
	038 JumpIfEqual {203}
	039 Call VisualElement.get_worldClip, X0
	040 Move X8, [X19+888]
	041 Add X0, X31, 8
	042 Move X1, X31
	043 Move [X19+640], S0
	044 Move [X19+644], S1
	045 Move [X19+648], S2
	046 Move [X19+652], S3
	047 Move [X31+8], X8
	048 Call Hierarchy.get_parent, X0
	049 Compare X0, 0
	050 JumpIfEqual {203}
	051 Call VisualElement.get_worldClipIsInfinite, X0
	052 Move X8, [X19+888]
	053 Move W20, W0
	054 Add X0, X31, 8
	055 Move X1, X31
	056 Move [X31+8], X8
	057 Call Hierarchy.get_parent, X0
	058 Move X8, [X19+152]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X8, [X19+888]
	061 Add X0, X31, 8
	062 Move X1, X31
	063 Move [X31+8], X8
	064 Call Hierarchy.get_parent, X0
	065 Compare X0, 0
	066 JumpIfEqual {203}
	067 Call VisualElement.get_worldClipMinusGroup, X0
	068 Move [X19+656], S0
	069 Move [X19+660], S1
	070 Move [X19+664], S2
	071 Move [X19+668], S3
	072 Move X20, [X19+928]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CSEL not yet implemented."
	075 Compare X20, 0
	076 JumpIfEqual {155}
	077 Move X10, 0x32E000
	078 Move X8, [X20]
	079 Move X10, [X10+3712]
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Move X1, [X10]
	082 Compare X9, 0
	083 JumpIfEqual {90}
	084 Move X10, [X8+176]
	085 Add X10, X10, 8
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract X9, X9, 1
	089 Add X10, X10, 16
	090 Move X0, X20
	091 Move W2, W31
	092 Call 0x1C5D788
	093 Move X20, 0x32D000
	094 Move X20, [X20+2200]
	095 Move X0, [X20]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {101}
	099 Call 0x1C17DFC
	100 Move X0, [X20]
	101 Move X8, [X0+184]
	102 Move W20, 1
	103 Move V0, [X8+2]
	104 Move [X19+41], V0
	105 Add X0, X19, 704
	106 Move X1, X31
	107 Call ComputedStyle.get_overflow, X0
	108 Compare W0, 0
	109 JumpIfEqual {154}
	110 Move W8, [X19+81]
	111 Move TEMP, X8
	112 And TEMP, TEMP, 4
	113 Compare TEMP, 4
	114 JumpIfEqual {154}
	115 Move X0, X19
	116 Call VisualElement.get_worldBound, X0
	117 Move X0, X19
	118 Call VisualElement.SubstractBorderPadding, X0, X1
	119 Move V4, [X19+640]
	120 Move V5, [X19+644]
	121 Move V6, [X19+648]
	122 Move V7, [X19+652]
	123 Move V10, V0
	124 Move V9, V1
	125 Move V8, V2
	126 Move V11, V3
	127 Call VisualElement.CombineClipRects, X0, X1, X2
	128 Move [X19+640], S0
	129 Move [X19+644], S1
	130 Move [X19+648], S2
	131 Move [X19+652], S3
	132 Move TEMP, X20
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {149}
	136 Move V4, [X19+656]
	137 Move V5, [X19+660]
	138 Move V6, [X19+664]
	139 Move V7, [X19+668]
	140 Move V0, V10
	141 Move V1, V9
	142 Move V2, V8
	143 Move V3, V11
	144 Call VisualElement.CombineClipRects, X0, X1, X2
	145 Move V10, V0
	146 Move V9, V1
	147 Move V8, V2
	148 Move V11, V3
	149 Move W8, W31
	150 Move [X19+656], S10
	151 Move [X19+660], S9
	152 Move [X19+664], S8
	153 Move [X19+668], S11
	154 And W8, W20, 1
	155 Move X20, 0x32D000
	156 Move X20, [X20+2200]
	157 Move X0, [X20]
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {163}
	161 Call 0x1C17DFC
	162 Move X0, [X20]
	163 Move X8, [X0+184]
	164 Move X21, X19
	165 Move S0, [X8+32]
	166 Move S1, [X8+36]
	167 Move S2, [X8+40]
	168 Move S3, [X8+44]
	169 NotImplemented "Instruction LDRSW not yet implemented."
	170 Add X8, X8, X9
	171 Add X0, X8, 312
	172 Move X8, [X0]
	173 Move X1, [X0+8]
	174 Move X0, X20
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Compare X0, 0
	177 JumpIfEqual {203}
	178 Call VisualElement.get_layout, X0
	179 Compare X21, 0
	180 JumpIfEqual {203}
	181 Move S0, W31
	182 Move S1, W31
	183 Move W8, 1
	184 Move [X21+640], S0
	185 Move [X21+644], S1
	186 Move [X21+648], S2
	187 Move [X21+652], S3
	188 Move [X21+656], S0
	189 Move [X21+660], S1
	190 Move [X21+664], S2
	191 Move [X21+668], S3
	192 Move [X19+672], W8
	193 Move X20, [X31+64]
	194 Move X19, [X31+72]
	195 Move X30, [X31+48]
	196 Move X21, [X31+56]
	197 Move D9, [X31+32]
	198 Move D8, [X31+40]
	199 Move D11, [X31+16]
	200 Move D10, [X31+24]
	201 Add X31, X31, 80
	202 Return 
	203 Call 0x1C17F20

Method: UnityEngine.Rect CombineClipRects(UnityEngine.Rect rect, UnityEngine.Rect parentRect)

Disassembly:
	0x03DEFE2C CMP X20, X19
	0x03DEFE30 B.EQ 0x3DEFF3C
	0x03DEFE34 MOV X0, X20
	0x03DEFE38 BL 0x3DEF024
	0x03DEFE3C LDR X20, [X20 + 0x390]
	0x03DEFE40 CBNZ X20, 0x3DEFE2C
	0x03DEFE44 B 0x3DEFF3C
	0x03DEFE48 LDR X8, [X20]
	0x03DEFE4C MOV X0, X20
	0x03DEFE50 LDP X9, X1, [X8 + 0x188]
	0x03DEFE54 BLR X9
	0x03DEFE58 ADRP X8, 0x32E000
	0x03DEFE5C LDR X8, [X8 + 0x700]
	0x03DEFE60 MOV X21, X0
	0x03DEFE64 LDR X8, [X8]
	0x03DEFE68 LDR W9, [X8 + 0xE0]
	0x03DEFE6C CBNZ W9, 0x3DEFE78
	0x03DEFE70 MOV X0, X8

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 Add S2, S2, S0
	003 Add S6, S6, S4
	004 NotImplemented "Instruction FCSEL not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Add S3, S3, S1
	007 Add S7, S7, S5
	008 NotImplemented "Instruction FCSEL not yet implemented."
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 NotImplemented "Instruction FCSEL not yet implemented."
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 NotImplemented "Instruction FCSEL not yet implemented."
	013 Move S16, W31
	014 Subtract S2, S2, S0
	015 Subtract S3, S3, S1
	016 NotImplemented "Instruction FMAXNM not yet implemented."
	017 NotImplemented "Instruction FMAXNM not yet implemented."
	018 Return X0

Method: UnityEngine.Rect SubstractBorderPadding(UnityEngine.Rect worldRect)

Disassembly:
	0x03DEF88C BL 0x1C16CF4
	0x03DEF890 ADRP X0, 0x37A000
	0x03DEF894 LDR X0, [X0 + 0x938]
	0x03DEF898 BL 0x1C16CF4
	0x03DEF89C ADRP X0, 0x37A000
	0x03DEF8A0 LDR X0, [X0 + 0x940]
	0x03DEF8A4 BL 0x1C16CF4
	0x03DEF8A8 ADRP X0, 0x32E000
	0x03DEF8AC LDR X0, [X0 + 0x6D0]
	0x03DEF8B0 BL 0x1C16CF4
	0x03DEF8B4 ADRP X0, 0x37A000
	0x03DEF8B8 LDR X0, [X0 + 0x948]
	0x03DEF8BC BL 0x1C16CF4
	0x03DEF8C0 ADRP X0, 0x379000
	0x03DEF8C4 LDR X0, [X0 + 0x798]
	0x03DEF8C8 BL 0x1C16CF4
	0x03DEF8CC ADRP X0, 0x32E000
	0x03DEF8D0 LDR X0, [X0 + 0x6E8]
	0x03DEF8D4 BL 0x1C16CF4
	0x03DEF8D8 ADRP X0, 0x37A000
	0x03DEF8DC LDR X0, [X0 + 0x950]
	0x03DEF8E0 BL 0x1C16CF4
	0x03DEF8E4 ADRP X0, 0x379000
	0x03DEF8E8 LDR X0, [X0 + 0x7A0]
	0x03DEF8EC BL 0x1C16CF4
	0x03DEF8F0 ADRP X0, 0x378000
	0x03DEF8F4 LDR X0, [X0 + 0xF20]
	0x03DEF8F8 BL 0x1C16CF4
	0x03DEF8FC ADRP X0, 0x379000
	0x03DEF900 LDR X0, [X0 + 0x950]
	0x03DEF904 BL 0x1C16CF4
	0x03DEF908 ADRP X0, 0x378000
	0x03DEF90C LDR X0, [X0 + 0xEE8]
	0x03DEF910 BL 0x1C16CF4
	0x03DEF914 ADRP X0, 0x32E000
	0x03DEF918 LDR X0, [X0 + 0x6F8]
	0x03DEF91C BL 0x1C16CF4
	0x03DEF920 ADRP X0, 0x379000
	0x03DEF924 LDR X0, [X0 + 0x990]
	0x03DEF928 BL 0x1C16CF4
	0x03DEF92C ADRP X0, 0x32E000
	0x03DEF930 LDR X0, [X0 + 0x700]
	0x03DEF934 BL 0x1C16CF4
	0x03DEF938 ADRP X0, 0x379000
	0x03DEF93C LDR X0, [X0 + 0x5C8]
	0x03DEF940 BL 0x1C16CF4
	0x03DEF944 ADRP X0, 0x379000
	0x03DEF948 LDR X0, [X0 + 0x600]
	0x03DEF94C BL 0x1C16CF4
	0x03DEF950 ADRP X0, 0x379000
	0x03DEF954 LDR X0, [X0 + 0xA98]
	0x03DEF958 BL 0x1C16CF4
	0x03DEF95C ADRP X0, 0x378000
	0x03DEF960 LDR X0, [X0 + 0xEB0]
	0x03DEF964 BL 0x1C16CF4
	0x03DEF968 ADRP X0, 0x37A000
	0x03DEF96C LDR X0, [X0 + 0x958]
	0x03DEF970 BL 0x1C16CF4
	0x03DEF974 ADRP X0, 0x32D000
	0x03DEF978 LDR X0, [X0 + 0xE78]
	0x03DEF97C BL 0x1C16CF4
	0x03DEF980 ADRP X0, 0x379000
	0x03DEF984 LDR X0, [X0 + 0xAC0]
	0x03DEF988 BL 0x1C16CF4
	0x03DEF98C MOVZ W8, 0x1
	0x03DEF990 STRB W8, [X21 + 0x247]
	0x03DEF994 MOV X0, X19
	0x03DEF998 MOV X1, X20
	0x03DEF99C MOV X2, X31
	0x03DEF9A0 BL 0x3DAF258
	0x03DEF9A4 CBZ X20, 0x3DEFF3C
	0x03DEF9A8 LDR X8, [X20]
	0x03DEF9AC ADRP X21, 0x379000
	0x03DEF9B0 ADRP X22, 0x37A000
	0x03DEF9B4 MOV X0, X20
	0x03DEF9B8 LDP X9, X1, [X8 + 0x188]
	0x03DEF9BC LDR X21, [X21 + 0x5C8]
	0x03DEF9C0 LDR X22, [X22 + 0x930]
	0x03DEF9C4 BLR X9
	0x03DEF9C8 LDR X8, [X21]
	0x03DEF9CC MOV X21, X0
	0x03DEF9D0 LDR W9, [X8 + 0xE0]
	0x03DEF9D4 CBNZ W9, 0x3DEF9E0
	0x03DEF9D8 MOV X0, X8
	0x03DEF9DC BL 0x1C16DFC
	0x03DEF9E0 LDR X0, [X22]
	0x03DEF9E4 BL 0x2D0D5C8
	0x03DEF9E8 CMP X21, X0
	0x03DEF9EC B.EQ 0x3DEFA38
	0x03DEF9F0 LDR X8, [X20]
	0x03DEF9F4 MOV X0, X20
	0x03DEF9F8 LDP X9, X1, [X8 + 0x188]
	0x03DEF9FC BLR X9
	0x03DEFA00 ADRP X8, 0x379000
	0x03DEFA04 LDR X8, [X8 + 0x600]
	0x03DEFA08 MOV X21, X0
	0x03DEFA0C LDR X8, [X8]
	0x03DEFA10 LDR W9, [X8 + 0xE0]
	0x03DEFA14 CBNZ W9, 0x3DEFA20
	0x03DEFA18 MOV X0, X8
	0x03DEFA1C BL 0x1C16DFC
	0x03DEFA20 ADRP X8, 0x37A000
	0x03DEFA24 LDR X8, [X8 + 0x938]
	0x03DEFA28 LDR X0, [X8]
	0x03DEFA2C BL 0x2D0D5C8
	0x03DEFA30 CMP X21, X0
	0x03DEFA34 B.NE 0x3DEFA40
	0x03DEFA38 MOVZ W22, 0x1
	0x03DEFA3C B 0x3DEFA88
	0x03DEFA40 LDR X8, [X20]
	0x03DEFA44 MOV X0, X20
	0x03DEFA48 LDP X9, X1, [X8 + 0x188]
	0x03DEFA4C BLR X9
	0x03DEFA50 ADRP X8, 0x378000
	0x03DEFA54 LDR X8, [X8 + 0xF20]
	0x03DEFA58 MOV X21, X0
	0x03DEFA5C LDR X8, [X8]
	0x03DEFA60 LDR W9, [X8 + 0xE0]
	0x03DEFA64 CBNZ W9, 0x3DEFA70
	0x03DEFA68 MOV X0, X8
	0x03DEFA6C BL 0x1C16DFC
	0x03DEFA70 ADRP X8, 0x379000
	0x03DEFA74 LDR X8, [X8 + 0x350]
	0x03DEFA78 LDR X0, [X8]
	0x03DEFA7C BL 0x2D0D5C8
	0x03DEFA80 CMP X21, X0
	0x03DEFA84 CSET W22, EQ
	0x03DEFA88 LDR X8, [X20]
	0x03DEFA8C MOV X0, X20
	0x03DEFA90 LDP X9, X1, [X8 + 0x188]
	0x03DEFA94 BLR X9
	0x03DEFA98 MOV X21, X0
	0x03DEFA9C CBZ W22, 0x3DEFAB8
	0x03DEFAA0 MOV X0, X19
	0x03DEFAA4 MOV X1, X21
	0x03DEFAA8 LDP X20, X19, [X31 + 0x20]
	0x03DEFAAC LDP X22, X21, [X31 + 0x10]
	0x03DEFAB0 LDP X30, X23, [X31], #0x30
	0x03DEFAB4 B 0x3DEFF78
	0x03DEFAB8 ADRP X8, 0x379000
	0x03DEFABC LDR X8, [X8 + 0x950]
	0x03DEFAC0 LDR X0, [X8]
	0x03DEFAC4 LDR W8, [X0 + 0xE0]
	0x03DEFAC8 CBNZ W8, 0x3DEFAD0
	0x03DEFACC BL 0x1C16DFC
	0x03DEFAD0 ADRP X8, 0x37A000
	0x03DEFAD4 LDR X8, [X8 + 0x940]
	0x03DEFAD8 LDR X0, [X8]
	0x03DEFADC BL 0x2D0D5C8
	0x03DEFAE0 CMP X21, X0
	0x03DEFAE4 B.NE 0x3DEFB60
	0x03DEFAE8 ADRP X22, 0x32D000
	0x03DEFAEC LDR W23, [X19 + 0x2B0]
	0x03DEFAF0 LDR X22, [X22 + 0xE78]
	0x03DEFAF4 MOV X0, X20
	0x03DEFAF8 LDR X21, [X22]
	0x03DEFAFC MOV X1, X21
	0x03DEFB00 BL 0x1C16E00
	0x03DEFB04 CBZ X0, 0x3DEFF58
	0x03DEFB08 LDR X22, [X22]
	0x03DEFB0C MOV X0, X20
	0x03DEFB10 MOV X1, X22
	0x03DEFB14 BL 0x1C16E00
	0x03DEFB18 CBZ X0, 0x3DEFF4C
	0x03DEFB1C LDR X8, [X0]
	0x03DEFB20 MOV X21, X0
	0x03DEFB24 LDRH W9, [X8 + 0x12E]
	0x03DEFB28 CBZ X9, 0x3DEFB4C
	0x03DEFB2C LDR X10, [X8 + 0xB0]
	0x03DEFB30 ADD X10, X10, 0x8
	0x03DEFB34 LDUR X11, [X10 - 0x8]
	0x03DEFB38 CMP X11, X22
	0x03DEFB3C B.EQ 0x3DEFD44
	0x03DEFB40 SUBS X9, X9, 0x1
	0x03DEFB44 ADD X10, X10, 0x10
	0x03DEFB48 B.NE 0x3DEFB34
	0x03DEFB4C MOV X0, X21
	0x03DEFB50 MOV X1, X22
	0x03DEFB54 MOV W2, W31
	0x03DEFB58 BL 0x1C5C788
	0x03DEFB5C B 0x3DEFD50
	0x03DEFB60 LDR X8, [X20]
	0x03DEFB64 MOV X0, X20
	0x03DEFB68 LDP X9, X1, [X8 + 0x188]
	0x03DEFB6C BLR X9
	0x03DEFB70 ADRP X8, 0x379000
	0x03DEFB74 LDR X8, [X8 + 0x990]
	0x03DEFB78 MOV X21, X0
	0x03DEFB7C LDR X8, [X8]
	0x03DEFB80 LDR W9, [X8 + 0xE0]
	0x03DEFB84 CBNZ W9, 0x3DEFB90
	0x03DEFB88 MOV X0, X8
	0x03DEFB8C BL 0x1C16DFC
	0x03DEFB90 ADRP X8, 0x37A000
	0x03DEFB94 LDR X8, [X8 + 0x948]
	0x03DEFB98 LDR X0, [X8]
	0x03DEFB9C BL 0x2D0D5C8
	0x03DEFBA0 CMP X21, X0
	0x03DEFBA4 B.NE 0x3DEFC20
	0x03DEFBA8 ADRP X22, 0x32D000
	0x03DEFBAC LDR W23, [X19 + 0x2B0]
	0x03DEFBB0 LDR X22, [X22 + 0xE78]
	0x03DEFBB4 MOV X0, X20
	0x03DEFBB8 LDR X21, [X22]
	0x03DEFBBC MOV X1, X21
	0x03DEFBC0 BL 0x1C16E00
	0x03DEFBC4 CBZ X0, 0x3DEFF58
	0x03DEFBC8 LDR X22, [X22]
	0x03DEFBCC MOV X0, X20
	0x03DEFBD0 MOV X1, X22
	0x03DEFBD4 BL 0x1C16E00
	0x03DEFBD8 CBZ X0, 0x3DEFF4C
	0x03DEFBDC LDR X8, [X0]
	0x03DEFBE0 MOV X21, X0
	0x03DEFBE4 LDRH W9, [X8 + 0x12E]
	0x03DEFBE8 CBZ X9, 0x3DEFC0C
	0x03DEFBEC LDR X10, [X8 + 0xB0]
	0x03DEFBF0 ADD X10, X10, 0x8
	0x03DEFBF4 LDUR X11, [X10 - 0x8]
	0x03DEFBF8 CMP X11, X22
	0x03DEFBFC B.EQ 0x3DEFD6C
	0x03DEFC00 SUBS X9, X9, 0x1
	0x03DEFC04 ADD X10, X10, 0x10
	0x03DEFC08 B.NE 0x3DEFBF4
	0x03DEFC0C MOV X0, X21
	0x03DEFC10 MOV X1, X22
	0x03DEFC14 MOV W2, W31
	0x03DEFC18 BL 0x1C5C788
	0x03DEFC1C B 0x3DEFD78
	0x03DEFC20 LDR X8, [X20]
	0x03DEFC24 MOV X0, X20
	0x03DEFC28 LDP X9, X1, [X8 + 0x188]
	0x03DEFC2C BLR X9
	0x03DEFC30 ADRP X8, 0x378000
	0x03DEFC34 LDR X8, [X8 + 0xEE8]
	0x03DEFC38 MOV X21, X0
	0x03DEFC3C LDR X8, [X8]
	0x03DEFC40 LDR W9, [X8 + 0xE0]
	0x03DEFC44 CBNZ W9, 0x3DEFC50
	0x03DEFC48 MOV X0, X8
	0x03DEFC4C BL 0x1C16DFC
	0x03DEFC50 ADRP X8, 0x379000
	0x03DEFC54 LDR X8, [X8 + 0x7A0]
	0x03DEFC58 LDR X0, [X8]
	0x03DEFC5C BL 0x2D0D5C8
	0x03DEFC60 CMP X21, X0
	0x03DEFC64 B.EQ 0x3DEFCB0
	0x03DEFC68 LDR X8, [X20]
	0x03DEFC6C MOV X0, X20
	0x03DEFC70 LDP X9, X1, [X8 + 0x188]
	0x03DEFC74 BLR X9
	0x03DEFC78 ADRP X8, 0x378000
	0x03DEFC7C LDR X8, [X8 + 0xEB0]
	0x03DEFC80 MOV X21, X0
	0x03DEFC84 LDR X8, [X8]
	0x03DEFC88 LDR W9, [X8 + 0xE0]
	0x03DEFC8C CBNZ W9, 0x3DEFC98
	0x03DEFC90 MOV X0, X8
	0x03DEFC94 BL 0x1C16DFC
	0x03DEFC98 ADRP X8, 0x379000
	0x03DEFC9C LDR X8, [X8 + 0x798]
	0x03DEFCA0 LDR X0, [X8]
	0x03DEFCA4 BL 0x2D0D5C8
	0x03DEFCA8 CMP X21, X0
	0x03DEFCAC B.NE 0x3DEFDA8
	0x03DEFCB0 CBZ X19, 0x3DEFCC8
	0x03DEFCB4 MOV X21, X19
	0x03DEFCB8 MOV X0, X21
	0x03DEFCBC BL 0x3DEF024
	0x03DEFCC0 LDR X21, [X21 + 0x390]
	0x03DEFCC4 CBNZ X21, 0x3DEFCB8
	0x03DEFCC8 LDR X21, [X19 + 0x3A0]
	0x03DEFCCC CBZ X21, 0x3DEFF3C
	0x03DEFCD0 ADRP X23, 0x37A000
	0x03DEFCD4 LDR X23, [X23 + 0x958]
	0x03DEFCD8 MOV X0, X20
	0x03DEFCDC LDR X22, [X23]
	0x03DEFCE0 MOV X1, X22
	0x03DEFCE4 BL 0x1C16E00
	0x03DEFCE8 CBZ X0, 0x3DEFF4C
	0x03DEFCEC LDR X23, [X23]
	0x03DEFCF0 MOV X0, X20
	0x03DEFCF4 MOV X1, X23
	0x03DEFCF8 BL 0x1C16E00
	0x03DEFCFC CBZ X0, 0x3DEFF64
	0x03DEFD00 LDR X8, [X0]
	0x03DEFD04 MOV X22, X0
	0x03DEFD08 LDRH W9, [X8 + 0x12E]
	0x03DEFD0C CBZ X9, 0x3DEFD30
	0x03DEFD10 LDR X10, [X8 + 0xB0]
	0x03DEFD14 ADD X10, X10, 0x8
	0x03DEFD18 LDUR X11, [X10 - 0x8]
	0x03DEFD1C CMP X11, X23
	0x03DEFD20 B.EQ 0x3DEFDFC
	0x03DEFD24 SUBS X9, X9, 0x1
	0x03DEFD28 ADD X10, X10, 0x10
	0x03DEFD2C B.NE 0x3DEFD18
	0x03DEFD30 MOV X0, X22
	0x03DEFD34 MOV X1, X23
	0x03DEFD38 MOV W2, W31
	0x03DEFD3C BL 0x1C5C788
	0x03DEFD40 B 0x3DEFE08
	0x03DEFD44 LDRSW X9, [X10]
	0x03DEFD48 ADD X8, X8, X9, 0x4, LSL
	0x03DEFD4C ADD X0, X8, 0x138
	0x03DEFD50 LDP X8, X1, [X0]
	0x03DEFD54 MOV X0, X21
	0x03DEFD58 BLR X8
	0x03DEFD5C MOVZ W8, 0x1
	0x03DEFD60 LSLV W8, W8, W0
	0x03DEFD64 ORR W8, W8, W23, 0x0
	0x03DEFD68 B 0x3DEFD90
	0x03DEFD6C LDRSW X9, [X10]
	0x03DEFD70 ADD X8, X8, X9, 0x4, LSL
	0x03DEFD74 ADD X0, X8, 0x138
	0x03DEFD78 LDP X8, X1, [X0]
	0x03DEFD7C MOV X0, X21
	0x03DEFD80 BLR X8
	0x03DEFD84 MOVZ W8, 0x1
	0x03DEFD88 LSLV W8, W8, W0
	0x03DEFD8C BIC W8, W23, W8, 0x0
	0x03DEFD90 STR W8, [X19 + 0x2B0]
	0x03DEFD94 MOV X0, X19
	0x03DEFD98 LDP X20, X19, [X31 + 0x20]
	0x03DEFD9C LDP X22, X21, [X31 + 0x10]
	0x03DEFDA0 LDP X30, X23, [X31], #0x30
	0x03DEFDA4 B 0x3DEF024
	0x03DEFDA8 LDR X8, [X20]
	0x03DEFDAC MOV X0, X20
	0x03DEFDB0 LDP X9, X1, [X8 + 0x188]
	0x03DEFDB4 BLR X9
	0x03DEFDB8 ADRP X8, 0x32E000
	0x03DEFDBC LDR X8, [X8 + 0x6F8]
	0x03DEFDC0 MOV X21, X0
	0x03DEFDC4 LDR X8, [X8]
	0x03DEFDC8 LDR W9, [X8 + 0xE0]
	0x03DEFDCC CBNZ W9, 0x3DEFDD8
	0x03DEFDD0 MOV X0, X8
	0x03DEFDD4 BL 0x1C16DFC
	0x03DEFDD8 ADRP X8, 0x32E000
	0x03DEFDDC LDR X8, [X8 + 0x6E8]
	0x03DEFDE0 LDR X0, [X8]
	0x03DEFDE4 BL 0x2D0D5C8
	0x03DEFDE8 CMP X21, X0
	0x03DEFDEC B.NE 0x3DEFE48
	0x03DEFDF0 LDR W8, [X19 + 0x2AC]
	0x03DEFDF4 AND W1, W8, 0xFFFFFFBF
	0x03DEFDF8 B 0x3DEFE98
	0x03DEFDFC LDRSW X9, [X10]
	0x03DEFE00 ADD X8, X8, X9, 0x4, LSL
	0x03DEFE04 ADD X0, X8, 0x138
	0x03DEFE08 LDP X8, X1, [X0]
	0x03DEFE0C MOV X0, X22
	0x03DEFE10 BLR X8
	0x03DEFE14 MOV W1, W0
	0x03DEFE18 MOV X0, X21
	0x03DEFE1C MOV X2, X31
	0x03DEFE20 BL 0x3DBC148
	0x03DEFE24 CBZ X0, 0x3DEFF3C
	0x03DEFE28 MOV X20, X0

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x5FA000
	013 Move W8, [X20+578]
	014 Move V15, V3
	015 Move V9, V2
	016 Move V10, V1
	017 Move V11, V0
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x32E000
	024 Move X0, [X0+288]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+578], W8
	028 Move X20, 0x32E000
	029 Move W8, [X19+80]
	030 Move X20, [X20+288]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {37}
	035 Move V0, [X19+512]
	036 Move [X31+72], S0
	037 Move X0, X19
	038 Call VisualElement.UpdateWorldTransform, X0
	039 Move W8, [X19+80]
	040 Move V0, [X19+512]
	041 Move [X31+72], S0
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {48}
	046 Move X0, X19
	047 Call VisualElement.UpdateWorldTransform, X0
	048 Move X8, [X19]
	049 Move V0, [X19+532]
	050 Move X1, [X20]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move [X31+76], S0
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 6
	062 Move X0, X19
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 6
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X1, [X0+8]
	070 Move X0, X19
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X8, [X19]
	073 Move X1, [X20]
	074 Move V12, V0
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move W2, 12
	085 Move X0, X19
	086 Call 0x1C5D788
	087 Move W9, [X10]
	088 Add W9, W9, 12
	089 Add X8, X8, W9
	090 Add X0, X8, 312
	091 Move X8, [X0]
	092 Move X1, [X0+8]
	093 Move X0, X19
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X8, [X19]
	096 Move X1, [X20]
	097 Move V13, V0
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move W2, 6
	108 Move X0, X19
	109 Call 0x1C5D788
	110 Move W9, [X10]
	111 Add W9, W9, 6
	112 Add X8, X8, W9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X1, [X0+8]
	116 Move X0, X19
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X8, [X19]
	119 Move X1, [X20]
	120 Move V14, V0
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 Compare X9, 0
	123 JumpIfEqual {130}
	124 Move X10, [X8+176]
	125 Add X10, X10, 8
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract X9, X9, 1
	129 Add X10, X10, 16
	130 Move W2, 8
	131 Move X0, X19
	132 Call 0x1C5D788
	133 Move W9, [X10]
	134 Add W9, W9, 8
	135 Add X8, X8, W9
	136 Add X0, X8, 312
	137 Move X8, [X0]
	138 Move X1, [X0+8]
	139 Move X0, X19
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X8, [X19]
	142 Move X1, [X20]
	143 Add S8, S14, S0
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 Compare X9, 0
	146 JumpIfEqual {153}
	147 Move X10, [X8+176]
	148 Add X10, X10, 8
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Subtract X9, X9, 1
	152 Add X10, X10, 16
	153 Move W2, 12
	154 Move X0, X19
	155 Call 0x1C5D788
	156 Move W9, [X10]
	157 Add W9, W9, 12
	158 Add X8, X8, W9
	159 Add X0, X8, 312
	160 Move X8, [X0]
	161 Move X1, [X0+8]
	162 Move S1, [X31+72]
	163 Move S0, [X31+76]
	164 Move X0, X19
	165 Multiply S14, S1, S12
	166 Multiply S13, S0, S13
	167 Multiply S8, S1, S8
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move X8, [X19]
	170 Move X1, [X20]
	171 Move V12, V0
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Compare X9, 0
	174 JumpIfEqual {181}
	175 Move X10, [X8+176]
	176 Add X10, X10, 8
	177 NotImplemented "Instruction LDUR not yet implemented."
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Subtract X9, X9, 1
	180 Add X10, X10, 16
	181 Move W2, 4
	182 Move X0, X19
	183 Call 0x1C5D788
	184 Move W9, [X10]
	185 Add W9, W9, 4
	186 Add X8, X8, W9
	187 Add X0, X8, 312
	188 Move X8, [X0]
	189 Move X1, [X0+8]
	190 Move X0, X19
	191 Add S11, S11, S14
	192 Add S10, S10, S13
	193 Subtract S9, S9, S8
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Move V1, [X31+76]
	196 Add S0, S12, S0
	197 Add X0, X19, 704
	198 Move X1, X31
	199 Multiply S0, S1, S0
	200 Subtract S8, S15, S0
	201 Call ComputedStyle.get_unityOverflowClipBox, X0
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X8, [X19]
	204 Move X1, [X20]
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Compare X9, 0
	207 JumpIfEqual {214}
	208 Move X10, [X8+176]
	209 Add X10, X10, 8
	210 NotImplemented "Instruction LDUR not yet implemented."
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Subtract X9, X9, 1
	213 Add X10, X10, 16
	214 Move W2, 29
	215 Move X0, X19
	216 Call 0x1C5D788
	217 Move W9, [X10]
	218 Add W9, W9, 29
	219 Add X8, X8, W9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X1, [X0+8]
	223 Move X0, X19
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Move X8, [X19]
	226 Move X1, [X20]
	227 Move V15, V0
	228 NotImplemented "Instruction LDRH not yet implemented."
	229 Compare X9, 0
	230 JumpIfEqual {237}
	231 Move X10, [X8+176]
	232 Add X10, X10, 8
	233 NotImplemented "Instruction LDUR not yet implemented."
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Subtract X9, X9, 1
	236 Add X10, X10, 16
	237 Move W2, 31
	238 Move X0, X19
	239 Call 0x1C5D788
	240 Move W9, [X10]
	241 Add W9, W9, 31
	242 Add X8, X8, W9
	243 Add X0, X8, 312
	244 Move X8, [X0]
	245 Move X1, [X0+8]
	246 Move X0, X19
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Move X8, [X19]
	249 Move X1, [X20]
	250 Move V13, V0
	251 NotImplemented "Instruction LDRH not yet implemented."
	252 Compare X9, 0
	253 JumpIfEqual {260}
	254 Move X10, [X8+176]
	255 Add X10, X10, 8
	256 NotImplemented "Instruction LDUR not yet implemented."
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Subtract X9, X9, 1
	259 Add X10, X10, 16
	260 Move W2, 29
	261 Move X0, X19
	262 Call 0x1C5D788
	263 Move W9, [X10]
	264 Add W9, W9, 29
	265 Add X8, X8, W9
	266 Add X0, X8, 312
	267 Move X8, [X0]
	268 Move X1, [X0+8]
	269 Move X0, X19
	270 NotImplemented "Instruction BLR not yet implemented."
	271 Move X8, [X19]
	272 Move X1, [X20]
	273 Move V14, V0
	274 NotImplemented "Instruction LDRH not yet implemented."
	275 Compare X9, 0
	276 JumpIfEqual {283}
	277 Move X10, [X8+176]
	278 Add X10, X10, 8
	279 NotImplemented "Instruction LDUR not yet implemented."
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Subtract X9, X9, 1
	282 Add X10, X10, 16
	283 Move W2, 30
	284 Move X0, X19
	285 Call 0x1C5D788
	286 Move W9, [X10]
	287 Add W9, W9, 30
	288 Add X8, X8, W9
	289 Add X0, X8, 312
	290 Move X8, [X0]
	291 Move X1, [X0+8]
	292 Move X0, X19
	293 NotImplemented "Instruction BLR not yet implemented."
	294 Move X8, [X19]
	295 Move X1, [X20]
	296 Add S12, S14, S0
	297 NotImplemented "Instruction LDRH not yet implemented."
	298 Compare X9, 0
	299 JumpIfEqual {306}
	300 Move X10, [X8+176]
	301 Add X10, X10, 8
	302 NotImplemented "Instruction LDUR not yet implemented."
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Subtract X9, X9, 1
	305 Add X10, X10, 16
	306 Move W2, 31
	307 Move X0, X19
	308 Call 0x1C5D788
	309 Move W9, [X10]
	310 Add W9, W9, 31
	311 Add X8, X8, W9
	312 Add X0, X8, 312
	313 Move X8, [X0]
	314 Move X1, [X0+8]
	315 Move S1, [X31+72]
	316 Move S0, [X31+76]
	317 Move X0, X19
	318 Multiply S14, S1, S15
	319 Multiply S13, S0, S13
	320 Multiply S15, S1, S12
	321 NotImplemented "Instruction BLR not yet implemented."
	322 Move X8, [X19]
	323 Move X1, [X20]
	324 Move V12, V0
	325 NotImplemented "Instruction LDRH not yet implemented."
	326 Compare X9, 0
	327 JumpIfEqual {334}
	328 Move X10, [X8+176]
	329 Add X10, X10, 8
	330 NotImplemented "Instruction LDUR not yet implemented."
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Subtract X9, X9, 1
	333 Add X10, X10, 16
	334 Move W2, 28
	335 Move X0, X19
	336 Call 0x1C5D788
	337 Move W9, [X10]
	338 Add W9, W9, 28
	339 Add X8, X8, W9
	340 Add X0, X8, 312
	341 Move X8, [X0]
	342 Move X1, [X0+8]
	343 Move X0, X19
	344 Add S11, S11, S14
	345 Add S10, S10, S13
	346 Subtract S9, S9, S15
	347 NotImplemented "Instruction BLR not yet implemented."
	348 Move V1, [X31+76]
	349 Add S0, S12, S0
	350 Multiply S0, S1, S0
	351 Subtract S8, S8, S0
	352 Move V0, V11
	353 Move V1, V10
	354 Move V2, V9
	355 Move V3, V8
	356 Move X20, [X31+80]
	357 Move X19, [X31+88]
	358 Move X30, [X31+64]
	359 Move D9, [X31+48]
	360 Move D8, [X31+56]
	361 Move D11, [X31+32]
	362 Move D10, [X31+40]
	363 Move D13, [X31+16]
	364 Move D12, [X31+24]
	365 Move D15, [X31+96]
	366 Move D14, [X31+104]
	367 Return X0

Method: UnityEngine.Rect ComputeAAAlignedBound(UnityEngine.Rect position, UnityEngine.Matrix4x4 mat)

Disassembly:
	0x03DEFE74 BL 0x1C16DFC
	0x03DEFE78 ADRP X8, 0x32E000
	0x03DEFE7C LDR X8, [X8 + 0x6D0]
	0x03DEFE80 LDR X0, [X8]
	0x03DEFE84 BL 0x2D0D5C8
	0x03DEFE88 CMP X21, X0
	0x03DEFE8C B.NE 0x3DEFEAC
	0x03DEFE90 LDR W8, [X19 + 0x2AC]
	0x03DEFE94 ORR W1, W8, 0x40
	0x03DEFE98 MOV X0, X19
	0x03DEFE9C LDP X20, X19, [X31 + 0x20]
	0x03DEFEA0 LDP X22, X21, [X31 + 0x10]
	0x03DEFEA4 LDP X30, X23, [X31], #0x30
	0x03DEFEA8 B 0x3DEEF90
	0x03DEFEAC LDR X8, [X20]
	0x03DEFEB0 MOV X0, X20
	0x03DEFEB4 LDP X9, X1, [X8 + 0x188]
	0x03DEFEB8 BLR X9
	0x03DEFEBC ADRP X8, 0x379000
	0x03DEFEC0 LDR X8, [X8 + 0xA98]
	0x03DEFEC4 MOV X19, X0
	0x03DEFEC8 LDR X8, [X8]
	0x03DEFECC LDR W9, [X8 + 0xE0]
	0x03DEFED0 CBNZ W9, 0x3DEFEDC
	0x03DEFED4 MOV X0, X8
	0x03DEFED8 BL 0x1C16DFC
	0x03DEFEDC ADRP X8, 0x37A000
	0x03DEFEE0 LDR X8, [X8 + 0x950]
	0x03DEFEE4 LDR X0, [X8]
	0x03DEFEE8 BL 0x2D0D5C8
	0x03DEFEEC CMP X19, X0
	0x03DEFEF0 B.NE 0x3DEFF3C
	0x03DEFEF4 ADRP X9, 0x379000
	0x03DEFEF8 LDR X9, [X9 + 0xAC0]
	0x03DEFEFC LDR X8, [X20]
	0x03DEFF00 LDR X1, [X9]
	0x03DEFF04 LDRB W10, [X8 + 0x130]
	0x03DEFF08 LDRB W9, [X1 + 0x130]
	0x03DEFF0C CMP W10, W9
	0x03DEFF10 B.CC 0x3DEFF70
	0x03DEFF14 LDR X8, [X8 + 0xC8]
	0x03DEFF18 ADD X8, X8, X9, 0x3, LSL
	0x03DEFF1C LDUR X8, [X8 - 0x8]
	0x03DEFF20 CMP X8, X1
	0x03DEFF24 B.NE 0x3DEFF70
	0x03DEFF28 MOV X1, X20
	0x03DEFF2C LDP X20, X19, [X31 + 0x20]
	0x03DEFF30 LDP X22, X21, [X31 + 0x10]
	0x03DEFF34 LDP X30, X23, [X31], #0x30
	0x03DEFF38 B 0x3DF03BC
	0x03DEFF3C LDP X20, X19, [X31 + 0x20]
	0x03DEFF40 LDP X22, X21, [X31 + 0x10]
	0x03DEFF44 LDP X30, X23, [X31], #0x30
	0x03DEFF48 RET
	0x03DEFF4C MOV X0, X20
	0x03DEFF50 MOV X1, X22
	0x03DEFF54 BL 0x1C171E0
	0x03DEFF58 MOV X0, X20
	0x03DEFF5C MOV X1, X21
	0x03DEFF60 BL 0x1C171E0
	0x03DEFF64 MOV X0, X20
	0x03DEFF68 MOV X1, X23
	0x03DEFF6C BL 0x1C171E0
	0x03DEFF70 MOV X0, X20
	0x03DEFF74 BL 0x1C171E0
	0x03DEFF78 SUB X31, X31, 0xB0
	0x03DEFF7C STP X30, X23, [X31 + 0x80]
	0x03DEFF80 STP X22, X21, [X31 + 0x90]
	0x03DEFF84 STP X20, X19, [X31 + 0xA0]

ISIL:
	001 Move [X31-80], D15
	002 Move [X31-72], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X19
	011 Move V9, V2
	012 Move S2, W31
	013 Move X1, X31
	014 Move X19, X0
	015 Move V8, V3
	016 Move V10, V1
	017 Move V11, V0
	018 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	019 Add S9, S11, S9
	020 Move V12, V0
	021 Move V13, V1
	022 Move S2, W31
	023 Move X0, X19
	024 Move V0, V9
	025 Move V1, V10
	026 Move X1, X31
	027 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	028 Add S8, S10, S8
	029 Move V14, V0
	030 Move V15, V1
	031 Move S2, W31
	032 Move X0, X19
	033 Move V0, V11
	034 Move V1, V8
	035 Move X1, X31
	036 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	037 Move V10, V0
	038 Move V11, V1
	039 Move S2, W31
	040 Move X0, X19
	041 Move V0, V9
	042 Move V1, V8
	043 Move X1, X31
	044 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	045 NotImplemented "Instruction FCMP not yet implemented."
	046 NotImplemented "Instruction FCSEL not yet implemented."
	047 NotImplemented "Instruction FCSEL not yet implemented."
	048 NotImplemented "Instruction FCMP not yet implemented."
	049 NotImplemented "Instruction FCSEL not yet implemented."
	050 NotImplemented "Instruction FCSEL not yet implemented."
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 NotImplemented "Instruction FCSEL not yet implemented."
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 NotImplemented "Instruction FCSEL not yet implemented."
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 NotImplemented "Instruction FCSEL not yet implemented."
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 NotImplemented "Instruction FCSEL not yet implemented."
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 NotImplemented "Instruction FCSEL not yet implemented."
	061 NotImplemented "Instruction FCMP not yet implemented."
	062 NotImplemented "Instruction FCSEL not yet implemented."
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 NotImplemented "Instruction FCSEL not yet implemented."
	065 NotImplemented "Instruction FCMP not yet implemented."
	066 NotImplemented "Instruction FCSEL not yet implemented."
	067 Move X30, [X31+64]
	068 Move X19, [X31+72]
	069 Move D9, [X31+48]
	070 Move D8, [X31+56]
	071 Move D11, [X31+32]
	072 Move D10, [X31+40]
	073 Move D13, [X31+16]
	074 Move D12, [X31+24]
	075 Subtract S2, S2, S0
	076 Subtract S3, S3, S1
	077 Move D15, [X31+80]
	078 Move D14, [X31+88]
	079 Return X0

Method: UnityEngine.UIElements.PseudoStates get_pseudoStates()

Disassembly:
	0x03DEFF88 ADRP X21, 0x5F9000
	0x03DEFF8C LDRB W8, [X21 + 0x263]

ISIL:
	001 Move W0, [X0+684]
	002 Return X0

Method: System.Void set_pseudoStates(UnityEngine.UIElements.PseudoStates value)

Disassembly:
	0x03DEFF90 MOV X20, X1
	0x03DEFF94 MOV X19, X0
	0x03DEFF98 TBNZ X8, 0x0, 0x3DF0004
	0x03DEFF9C ADRP X0, 0x379000
	0x03DEFFA0 LDR X0, [X0 + 0x350]
	0x03DEFFA4 BL 0x1C16CF4
	0x03DEFFA8 ADRP X0, 0x37A000
	0x03DEFFAC LDR X0, [X0 + 0x930]
	0x03DEFFB0 BL 0x1C16CF4
	0x03DEFFB4 ADRP X0, 0x37A000
	0x03DEFFB8 LDR X0, [X0 + 0x938]
	0x03DEFFBC BL 0x1C16CF4
	0x03DEFFC0 ADRP X0, 0x378000
	0x03DEFFC4 LDR X0, [X0 + 0xF20]
	0x03DEFFC8 BL 0x1C16CF4
	0x03DEFFCC ADRP X0, 0x379000
	0x03DEFFD0 LDR X0, [X0 + 0x5C8]
	0x03DEFFD4 BL 0x1C16CF4
	0x03DEFFD8 ADRP X0, 0x379000
	0x03DEFFDC LDR X0, [X0 + 0x600]
	0x03DEFFE0 BL 0x1C16CF4
	0x03DEFFE4 ADRP X0, 0x378000
	0x03DEFFE8 LDR X0, [X0 + 0xBE8]
	0x03DEFFEC BL 0x1C16CF4
	0x03DEFFF0 ADRP X0, 0x32D000
	0x03DEFFF4 LDR X0, [X0 + 0xE50]
	0x03DEFFF8 BL 0x1C16CF4
	0x03DEFFFC MOVZ W8, 0x1
	0x03DF0000 STRB W8, [X21 + 0x263]
	0x03DF0004 LDR X8, [X19 + 0x3A0]
	0x03DF0008 CBZ X8, 0x3DF02B0
	0x03DF000C ADRP X8, 0x377000
	0x03DF0010 LDR X8, [X8 + 0xF20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+684]
	005 Xor W9, W8, W1
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X19, X0
	008 Move W20, W1
	009 Move TEMP, X1
	010 And TEMP, TEMP, 128
	011 Compare TEMP, 128
	012 JumpIfNotEqual {15}
	013 Move W10, 1
	014 Move [X19+896], W10
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W10, [X19+676]
	017 And W11, W9, W20
	018 And W31, W11, W10
	019 Move W10, [X19+680]
	020 And W8, W9, W8
	021 And W31, W8, W10
	022 Move X0, [X19+928]
	023 Compare X0, 0
	024 JumpIfEqual {31}
	025 Move X8, [X0]
	026 Move W2, 16
	027 Move X1, X19
	028 Move X9, [X8+824]
	029 Move X3, [X8+832]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move [X19+684], W20
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return 

Method: System.Int32 get_containedPointerIds()

Disassembly:
	0x03DF0014 ADRP X21, 0x378000
	0x03DF0018 ADRP X23, 0x32C000

ISIL:
	001 Move W0, [X0+688]
	002 Return X0

Method: System.Void set_containedPointerIds(System.Int32 value)

Disassembly:
	0x03DF001C LDR X0, [X8]
	0x03DF0020 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X0+688], W1
	002 Return 

Method: System.Void UpdateHoverPseudoState()

Disassembly:
	0x03DF0024 LDR X21, [X21 + 0x350]
	0x03DF0028 LDR X23, [X23 + 0xE50]
	0x03DF002C CBNZ W8, 0x3DF0034
	0x03DF0030 BL 0x1C16DFC
	0x03DF0034 LDR X0, [X21]
	0x03DF0038 BL 0x2D0D5C8
	0x03DF003C LDR X8, [X23]
	0x03DF0040 LDR X21, [X19 + 0x3A0]
	0x03DF0044 MOV X22, X0
	0x03DF0048 LDR W9, [X8 + 0xE0]
	0x03DF004C CBNZ W9, 0x3DF005C
	0x03DF0050 MOV X0, X8
	0x03DF0054 BL 0x1C16DFC
	0x03DF0058 LDR X8, [X23]
	0x03DF005C LDR X8, [X8 + 0xB8]
	0x03DF0060 CMP X22, X20
	0x03DF0064 LDR W1, [X8 + 0x8]
	0x03DF0068 B.NE 0x3DF0120
	0x03DF006C CBZ X21, 0x3DF03B8
	0x03DF0070 MOV X0, X21
	0x03DF0074 MOV X2, X31
	0x03DF0078 BL 0x3DBC148
	0x03DF007C LDR X8, [X19 + 0x3A0]
	0x03DF0080 CBZ X8, 0x3DF03B8
	0x03DF0084 LDR X9, [X8]
	0x03DF0088 MOV X20, X0
	0x03DF008C MOV X0, X8
	0x03DF0090 LDR X10, [X9 + 0x368]
	0x03DF0094 LDR X1, [X9 + 0x370]
	0x03DF0098 BLR X10
	0x03DF009C MOV X19, X0
	0x03DF00A0 CBZ X20, 0x3DF0234
	0x03DF00A4 ADD X0, X20, 0x2C0
	0x03DF00A8 ADD X8, X31, 0x60
	0x03DF00AC MOV X1, X31
	0x03DF00B0 BL 0x3DC9A68
	0x03DF00B4 LDR V0, [X31 + 0x6]
	0x03DF00B8 LDR X8, [X31 + 0x70]
	0x03DF00BC STR V0, [X31 + 0x4]
	0x03DF00C0 STR X8, [X31 + 0x50]
	0x03DF00C4 CBZ X19, 0x3DF03B8
	0x03DF00C8 LDR V0, [X31 + 0x4]
	0x03DF00CC LDR X8, [X31 + 0x50]
	0x03DF00D0 ADRP X10, 0x377000
	0x03DF00D4 STR V0, [X31 + 0x2]
	0x03DF00D8 STR X8, [X31 + 0x30]
	0x03DF00DC LDR X8, [X19]
	0x03DF00E0 LDR X10, [X10 + 0xBE8]
	0x03DF00E4 LDRH W9, [X8 + 0x12E]
	0x03DF00E8 LDR X1, [X10]
	0x03DF00EC CBZ X9, 0x3DF0110
	0x03DF00F0 LDR X10, [X8 + 0xB0]
	0x03DF00F4 ADD X10, X10, 0x8
	0x03DF00F8 LDUR X11, [X10 - 0x8]
	0x03DF00FC CMP X11, X1
	0x03DF0100 B.EQ 0x3DF0280
	0x03DF0104 SUBS X9, X9, 0x1
	0x03DF0108 ADD X10, X10, 0x10
	0x03DF010C B.NE 0x3DF00F8
	0x03DF0110 MOV X0, X19
	0x03DF0114 MOV W2, W31
	0x03DF0118 BL 0x1C5C788

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5F9000
	007 Move W8, [X20+579]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x32D000
	014 Move X0, [X0+3664]
	015 Call 0x1C17CF4
	016 Move X0, 0x32C000
	017 Move X0, [X0+2200]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+579], W8
	021 Move W8, [X19+688]
	022 Compare W8, 0
	023 JumpIfEqual {66}
	024 Move X8, [X19+928]
	025 Compare X8, 0
	026 JumpIfEqual {66}
	027 Move X21, 0x32D000
	028 Move X22, 0x32C000
	029 Move X21, [X21+3664]
	030 Move X22, [X22+2200]
	031 Move W20, W31
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X21]
	038 Move X8, [X0+184]
	039 Move W8, [X8]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W8, [X19+688]
	042 NotImplemented "Instruction LSRV not yet implemented."
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {65}
	047 Move X0, [X19+928]
	048 Move W1, W20
	049 Move X2, X31
	050 Call PointerCaptureHelper.GetCapturingElement, X0, X1
	051 Move X8, [X22]
	052 Move [X31+8], X0
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {58}
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Add X1, X31, 8
	059 Move X0, X19
	060 Call VisualElement.IsPartOfCapturedChain, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {76}
	065 Add W20, W20, 1
	066 Move W8, [X19+684]
	067 And W1, W8, 0xFFFFFFFD
	068 Move X0, X19
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Call VisualElement.set_pseudoStates, X0, X1
	075 Return 
	076 Move W8, [X19+684]
	077 Or W1, W8, 2

Method: System.Boolean IsPartOfCapturedChain(UnityEngine.UIElements.VisualElement self, in UnityEngine.UIElements.IEventHandler capturingElement)

Disassembly:
	0x03DF011C B 0x3DF028C
	0x03DF0120 MOV X0, X21
	0x03DF0124 MOV X2, X31
	0x03DF0128 BL 0x3DBF5D4
	0x03DF012C MOV X21, X0
	0x03DF0130 CBZ X0, 0x3DF013C
	0x03DF0134 CMP X21, X19
	0x03DF0138 B.NE 0x3DF02B0
	0x03DF013C ADRP X8, 0x378000
	0x03DF0140 LDR X8, [X8 + 0x5C8]
	0x03DF0144 LDR X0, [X8]
	0x03DF0148 LDR W8, [X0 + 0xE0]
	0x03DF014C CBNZ W8, 0x3DF0154
	0x03DF0150 BL 0x1C16DFC
	0x03DF0154 ADRP X8, 0x379000
	0x03DF0158 LDR X8, [X8 + 0x930]
	0x03DF015C LDR X0, [X8]
	0x03DF0160 BL 0x2D0D5C8
	0x03DF0164 CMP X0, X20
	0x03DF0168 B.NE 0x3DF01A4
	0x03DF016C LDR X0, [X23]
	0x03DF0170 LDR X22, [X19 + 0x3A0]
	0x03DF0174 LDR W8, [X0 + 0xE0]
	0x03DF0178 CBNZ W8, 0x3DF0180
	0x03DF017C BL 0x1C16DFC
	0x03DF0180 CBZ X22, 0x3DF03B8
	0x03DF0184 LDR X8, [X23]
	0x03DF0188 MOV X0, X22
	0x03DF018C MOV X2, X31
	0x03DF0190 LDR X8, [X8 + 0xB8]
	0x03DF0194 LDR W1, [X8 + 0x8]
	0x03DF0198 BL 0x3DBC148
	0x03DF019C CMP X0, X19
	0x03DF01A0 B.EQ 0x3DF02F0
	0x03DF01A4 ADRP X8, 0x378000
	0x03DF01A8 LDR X8, [X8 + 0x600]
	0x03DF01AC LDR X0, [X8]
	0x03DF01B0 LDR W8, [X0 + 0xE0]
	0x03DF01B4 CBNZ W8, 0x3DF01BC
	0x03DF01B8 BL 0x1C16DFC
	0x03DF01BC ADRP X8, 0x379000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5F9000
	006 Move W8, [X21+580]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x32C000
	014 Move X0, [X0+2200]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+580], W8
	018 Compare X19, 0
	019 JumpIfEqual {33}
	020 Move X8, [X20]
	021 Move W0, 1
	022 Compare X8, 0
	023 JumpIfEqual {34}
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X9, 0x32C000
	026 Move X9, [X9+2200]
	027 Move X10, [X8]
	028 Move X9, [X9]
	029 Move W12, [X10+304]
	030 Move W11, [X9+304]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X1, X31
	033 Move W0, W31
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Move X10, [X10+200]
	040 Add X10, X10, X11
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 Move X0, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]

Method: UnityEngine.UIElements.PickingMode get_pickingMode()

Disassembly:
	0x03DF0230 B 0x3DF0270
	0x03DF0234 CBZ X19, 0x3DF03B8

ISIL:
	001 Move W0, [X0+692]
	002 Return X0

Method: System.Void set_pickingMode(UnityEngine.UIElements.PickingMode value)

Disassembly:
	0x03DF0238 ADRP X10, 0x377000
	0x03DF023C LDR X8, [X19]
	0x03DF0240 LDR X10, [X10 + 0xBE8]
	0x03DF0244 LDRH W9, [X8 + 0x12E]
	0x03DF0248 LDR X1, [X10]
	0x03DF024C CBZ X9, 0x3DF0270
	0x03DF0250 LDR X10, [X8 + 0xB0]
	0x03DF0254 ADD X10, X10, 0x8
	0x03DF0258 LDUR X11, [X10 - 0x8]
	0x03DF025C CMP X11, X1
	0x03DF0260 B.EQ 0x3DF02C4
	0x03DF0264 SUBS X9, X9, 0x1
	0x03DF0268 ADD X10, X10, 0x10
	0x03DF026C B.NE 0x3DF0258

ISIL:
	001 Move W9, [X0+692]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X8, X0
	004 Move X0, [X0+928]
	005 Move [X8+692], W1
	006 Compare X0, 0
	007 JumpIfEqual {14}
	008 Move X9, [X0]
	009 Move W2, 0x100000
	010 Move X1, X8
	011 Move X4, [X9+824]
	012 Move X3, [X9+832]
	013 CallNoReturn X4
	014 Return 

Method: System.String get_name()

Disassembly:
	0x03DF0270 MOVZ W2, 0x1
	0x03DF0274 MOV X0, X19

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_name(System.String value)

Disassembly:
	0x03DF0278 BL 0x1C5C788
	0x03DF027C B 0x3DF02D4
	0x03DF0280 LDRSW X9, [X10]
	0x03DF0284 ADD X8, X8, X9, 0x4, LSL
	0x03DF0288 ADD X0, X8, 0x138
	0x03DF028C LDR V0, [X31 + 0x2]
	0x03DF0290 LDR X8, [X31 + 0x30]
	0x03DF0294 LDR X9, [X0]
	0x03DF0298 ADD X1, X31, 0x60
	0x03DF029C STR V0, [X31 + 0x6]
	0x03DF02A0 STR X8, [X31 + 0x70]
	0x03DF02A4 LDR X2, [X0 + 0x8]
	0x03DF02A8 MOV X0, X19
	0x03DF02AC BLR X9
	0x03DF02B0 LDP X20, X19, [X31 + 0xA0]
	0x03DF02B4 LDP X22, X21, [X31 + 0x90]
	0x03DF02B8 LDP X30, X23, [X31 + 0x80]
	0x03DF02BC ADD X31, X31, 0xB0
	0x03DF02C0 RET
	0x03DF02C4 LDR W9, [X10]
	0x03DF02C8 ADD W9, W9, 0x1
	0x03DF02CC ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+56]
	006 Move X2, X31
	007 Move X20, X1
	008 Call String.op_Equality, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {26}
	013 Move X0, [X19+928]
	014 Move [X19+56], X20
	015 Compare X0, 0
	016 JumpIfEqual {26}
	017 Move X8, [X0]
	018 Move X1, X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move W2, 16
	022 Move X4, [X8+824]
	023 Move X3, [X8+832]
	024 Move X30, [X31+32]
	025 CallNoReturn X4
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

Method: System.Collections.Generic.List`1<System.String> get_classList()

Disassembly:
	0x03DF02D0 ADD X0, X8, 0x138
	0x03DF02D4 LDP X2, X1, [X0]
	0x03DF02D8 MOV X0, X19
	0x03DF02DC LDP X20, X19, [X31 + 0xA0]
	0x03DF02E0 LDP X22, X21, [X31 + 0x90]
	0x03DF02E4 LDP X30, X23, [X31 + 0x80]
	0x03DF02E8 ADD X31, X31, 0xB0
	0x03DF02EC BR X2
	0x03DF02F0 LDR X0, [X19 + 0x3A0]
	0x03DF02F4 CBZ X0, 0x3DF03B8
	0x03DF02F8 LDR X8, [X0]
	0x03DF02FC LDR X9, [X8 + 0x368]
	0x03DF0300 LDR X1, [X8 + 0x370]
	0x03DF0304 BLR X9
	0x03DF0308 MOV X20, X0
	0x03DF030C ADD X0, X19, 0x2C0
	0x03DF0310 ADD X8, X31, 0x60
	0x03DF0314 MOV X1, X31
	0x03DF0318 BL 0x3DC9A68
	0x03DF031C LDR V0, [X31 + 0x6]
	0x03DF0320 LDR X8, [X31 + 0x70]
	0x03DF0324 STR V0, [X31 + 0x4]
	0x03DF0328 STR X8, [X31 + 0x50]
	0x03DF032C CBZ X20, 0x3DF03B8
	0x03DF0330 LDR V0, [X31 + 0x4]
	0x03DF0334 LDR X8, [X31 + 0x50]
	0x03DF0338 ADRP X10, 0x377000
	0x03DF033C STR V0, [X31]
	0x03DF0340 STR X8, [X31 + 0x10]
	0x03DF0344 LDR X8, [X20]
	0x03DF0348 LDR X10, [X10 + 0xBE8]
	0x03DF034C LDRH W9, [X8 + 0x12E]
	0x03DF0350 LDR X1, [X10]
	0x03DF0354 CBZ X9, 0x3DF0378
	0x03DF0358 LDR X10, [X8 + 0xB0]
	0x03DF035C ADD X10, X10, 0x8
	0x03DF0360 LDUR X11, [X10 - 0x8]
	0x03DF0364 CMP X11, X1
	0x03DF0368 B.EQ 0x3DF0388
	0x03DF036C SUBS X9, X9, 0x1
	0x03DF0370 ADD X10, X10, 0x10
	0x03DF0374 B.NE 0x3DF0360
	0x03DF0378 MOV X0, X20
	0x03DF037C MOV W2, W31
	0x03DF0380 BL 0x1C5C788

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5F9000
	006 Move X20, 0x32C000
	007 Move W8, [X21+581]
	008 Move X20, [X20+2200]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x37A000
	015 Move X0, [X0+2312]
	016 Call 0x1C17CF4
	017 Move X0, 0x37A000
	018 Move X0, [X0+2320]
	019 Call 0x1C17CF4
	020 Move X0, 0x32C000
	021 Move X0, [X0+2200]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+581], W8
	025 Move X0, [X20]
	026 Move X21, [X19+64]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X20]
	032 Move X8, [X0+184]
	033 Move X8, [X8+8]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, [X19+64]
	036 Move X8, 0x37A000
	037 Move X8, [X8+2320]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X8, 0x37A000
	044 Move X8, [X8+2312]
	045 Move X0, [X8]
	046 Call 0x2492CF8
	047 Move [X19+64], X0
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return X0

Method: System.String get_fullTypeName()

Disassembly:
	0x03DF0384 B 0x3DF0394
	0x03DF0388 LDRSW X9, [X10]
	0x03DF038C ADD X8, X8, X9, 0x4, LSL
	0x03DF0390 ADD X0, X8, 0x138
	0x03DF0394 LDR V0, [X31]
	0x03DF0398 LDR X8, [X31 + 0x10]
	0x03DF039C LDR X9, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Call VisualElement.get_typeData, X0
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call TypeData.get_fullTypeName, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.String get_typeName()

Disassembly:
	0x03DF04CC LDR X0, [X0 + 0x898]
	0x03DF04D0 BL 0x1C16CF4
	0x03DF04D4 MOVZ W8, 0x1
	0x03DF04D8 STRB W8, [X21 + 0x283]
	0x03DF04DC LDR X0, [X20]
	0x03DF04E0 ADRP X21, 0x305000
	0x03DF04E4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Call VisualElement.get_typeData, X0
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call TypeData.get_typeName, X0
	008 Return X0
	009 Call 0x1C17F20

Method: UnityEngine.Yoga.YogaNode get_yogaNode()

Disassembly:
	0x03DF04E8 LDR X21, [X21 + 0x278]
	0x03DF04EC CBNZ W8, 0x3DF04F8

ISIL:
	001 Move X0, [X0+696]
	002 Return X0

Method: System.Void set_yogaNode(UnityEngine.Yoga.YogaNode value)

Disassembly:
	0x03DF04F0 BL 0x1C16DFC
	0x03DF04F4 LDR X0, [X20]

ISIL:
	001 Move [X0+696], X1
	002 Return 

Method: UnityEngine.UIElements.ComputedStyle get_computedStyle()

Disassembly:
	0x03DE1F44 FMOV W0, S0
	0x03DE1F48 RET

ISIL:
	001 Add X0, X0, 704
	002 Return X0

Method: System.Boolean get_hasInlineStyle()

Disassembly:
	0x03DF04F8 LDR X8, [X0 + 0xB8]
	0x03DF04FC MOV X0, X19
	0x03DF0500 LDR W1, [X8 + 0x60]
	0x03DF0504 BL 0x3DF3018

ISIL:
	001 Move X8, [X0+944]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_styleInitialized()

Disassembly:
	0x03DE99C8 MOV W2, W24
	0x03DE99CC MOV W3, W23
	0x03DE99D0 MOV W4, W22

ISIL:
	001 Move W8, [X0+81]
	002 Move W0, W8
	003 ShiftRight W0, 5
	004 And W0, W0, 31
	005 Return X0

Method: System.Void set_styleInitialized(System.Boolean value)

Disassembly:
	0x03DF0508 LDR X8, [X21]
	0x03DF050C CBZ X0, 0x3DF051C
	0x03DF0510 LDR X9, [X0]
	0x03DF0514 CMP X9, X8
	0x03DF0518 B.EQ 0x3DF0524
	0x03DF051C LDR X8, [X8 + 0xB8]
	0x03DF0520 LDR X0, [X8]
	0x03DF0524 LDP X20, X19, [X31 + 0x10]
	0x03DF0528 LDP X30, X21, [X31], #0x20
	0x03DF052C RET
	0x03DF0530 SUB X31, X31, 0x20
	0x03DF0534 STP X30, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+80]
	005 And W31, W1, 1
	006 Move W9, 0x2000
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFDFFF
	009 Or W8, W8, W9
	010 Move [X0+80], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Void ChangeIMGUIContainerCount(System.Int32 delta)

Disassembly:
	0x03DF0538 STR X31, [X31 + 0x8]
	0x03DF053C LDR X8, [X0]
	0x03DF0540 MOV X19, X0
	0x03DF0544 LDR X9, [X8 + 0x238]
	0x03DF0548 LDR X1, [X8 + 0x240]
	0x03DF054C BLR X9
	0x03DF0550 TBNZ X0, 0x0, 0x3DF0598
	0x03DF0554 LDR X8, [X19 + 0x378]
	0x03DF0558 ADD X0, X31, 0x8
	0x03DF055C MOV X1, X31
	0x03DF0560 STR X8, [X31 + 0x8]
	0x03DF0564 BL 0x3DF88DC
	0x03DF0568 CBZ X0, 0x3DF0598
	0x03DF056C LDR X8, [X19 + 0x378]
	0x03DF0570 ADD X0, X31, 0x8
	0x03DF0574 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {17}
	006 Move W19, W1
	007 Move W8, [X0+808]
	008 Move X9, [X0+888]
	009 Move X1, X31
	010 Add W8, W8, W19
	011 Move [X0+808], W8
	012 Add X0, X31, 8
	013 Move [X31+8], X9
	014 Call Hierarchy.get_parent, X0
	015 Compare X0, 0
	016 JumpIfNotEqual {7}
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Add X31, X31, 32
	020 Return 

Method: System.Void .ctor()

Disassembly:
	0x03DF0578 STR X8, [X31 + 0x8]
	0x03DF057C BL 0x3DF88DC
	0x03DF0580 CBZ X0, 0x3DF05B0
	0x03DF0584 LDR X8, [X0]
	0x03DF0588 LDR X9, [X8 + 0x248]
	0x03DF058C LDR X1, [X8 + 0x250]
	0x03DF0590 BLR X9
	0x03DF0594 B 0x3DF05A4
	0x03DF0598 MOV X0, X19
	0x03DF059C MOV X1, X31
	0x03DF05A0 BL 0x3DAEE7C
	0x03DF05A4 LDP X30, X19, [X31 + 0x10]
	0x03DF05A8 ADD X31, X31, 0x20
	0x03DF05AC RET
	0x03DF05B0 BL 0x1C16F20
	0x03DF05B4 SUB X31, X31, 0x120
	0x03DF05B8 STP X29, X30, [X31 + 0xC0]
	0x03DF05BC STP X28, X27, [X31 + 0xD0]
	0x03DF05C0 STP X26, X25, [X31 + 0xE0]
	0x03DF05C4 STP X24, X23, [X31 + 0xF0]
	0x03DF05C8 STP X22, X21, [X31 + 0x100]
	0x03DF05CC STP X20, X19, [X31 + 0x110]
	0x03DF05D0 ADRP X19, 0x5F8000
	0x03DF05D4 LDRB W8, [X19 + 0x249]
	0x03DF05D8 MOV X20, X1
	0x03DF05DC MOV X21, X0
	0x03DF05E0 TBNZ X8, 0x0, 0x3DF0670
	0x03DF05E4 ADRP X0, 0x377000
	0x03DF05E8 LDR X0, [X0 + 0xD90]
	0x03DF05EC BL 0x1C16CF4
	0x03DF05F0 ADRP X0, 0x377000
	0x03DF05F4 LDR X0, [X0 + 0xD98]
	0x03DF05F8 BL 0x1C16CF4
	0x03DF05FC ADRP X0, 0x377000
	0x03DF0600 LDR X0, [X0 + 0xDA0]
	0x03DF0604 BL 0x1C16CF4
	0x03DF0608 ADRP X0, 0x32C000
	0x03DF060C LDR X0, [X0 + 0xE80]
	0x03DF0610 BL 0x1C16CF4
	0x03DF0614 ADRP X0, 0x32C000
	0x03DF0618 LDR X0, [X0 + 0xE0]
	0x03DF061C BL 0x1C16CF4
	0x03DF0620 ADRP X0, 0x373000
	0x03DF0624 LDR X0, [X0 + 0xED8]
	0x03DF0628 BL 0x1C16CF4
	0x03DF062C ADRP X0, 0x377000
	0x03DF0630 LDR X0, [X0 + 0xDA8]
	0x03DF0634 BL 0x1C16CF4
	0x03DF0638 ADRP X0, 0x379000
	0x03DF063C LDR X0, [X0 + 0x960]
	0x03DF0640 BL 0x1C16CF4
	0x03DF0644 ADRP X0, 0x379000
	0x03DF0648 LDR X0, [X0 + 0x968]
	0x03DF064C BL 0x1C16CF4
	0x03DF0650 ADRP X0, 0x379000
	0x03DF0654 LDR X0, [X0 + 0x970]
	0x03DF0658 BL 0x1C16CF4
	0x03DF065C ADRP X0, 0x32C000
	0x03DF0660 LDR X0, [X0 + 0xF8]
	0x03DF0664 BL 0x1C16CF4
	0x03DF0668 MOVZ W8, 0x1
	0x03DF066C STRB W8, [X19 + 0x249]
	0x03DF0670 STP X31, X31, [X31 + 0xB0]
	0x03DF0674 STP X31, X31, [X31 + 0xA0]
	0x03DF0678 STP X31, X31, [X31 + 0x80]
	0x03DF067C STR X31, [X31 + 0x90]
	0x03DF0680 STP X31, X31, [X31 + 0x60]
	0x03DF0684 STR X31, [X31 + 0x70]
	0x03DF0688 STP X31, X31, [X31 + 0x40]
	0x03DF068C STR X31, [X31 + 0x50]
	0x03DF0690 STR X31, [X31 + 0x38]
	0x03DF0694 LDR X8, [X21 + 0x3A0]
	0x03DF0698 CMP X8, X20
	0x03DF069C B.EQ 0x3DF0C80
	0x03DF06A0 ADRP X8, 0x32C000
	0x03DF06A4 LDR X8, [X8 + 0xF8]
	0x03DF06A8 LDR X0, [X8]
	0x03DF06AC LDR W8, [X0 + 0xE0]
	0x03DF06B0 CBNZ W8, 0x3DF06B8
	0x03DF06B4 BL 0x1C16DFC
	0x03DF06B8 MOV W0, W31
	0x03DF06BC MOV X1, X31
	0x03DF06C0 BL 0x3D163F4
	0x03DF06C4 MOV X19, X0
	0x03DF06C8 CBZ X0, 0x3DF0CAC
	0x03DF06CC ADRP X26, 0x32C000
	0x03DF06D0 LDR X26, [X26 + 0xE0]
	0x03DF06D4 LDR W10, [X19 + 0x1C]
	0x03DF06D8 LDR X8, [X19 + 0x10]
	0x03DF06DC LDR X9, [X26]
	0x03DF06E0 ADD W10, W10, 0x1
	0x03DF06E4 STR W10, [X19 + 0x1C]
	0x03DF06E8 CBZ X8, 0x3DF0CB8
	0x03DF06EC LDRSW X10, [X19 + 0x18]
	0x03DF06F0 LDR W11, [X8 + 0x18]
	0x03DF06F4 CMP W10, W11
	0x03DF06F8 B.CS 0x3DF0710
	0x03DF06FC ADD W9, W10, 0x1
	0x03DF0700 ADD X8, X8, X10, 0x3, LSL
	0x03DF0704 STR W9, [X19 + 0x18]
	0x03DF0708 STR X21, [X8 + 0x20]
	0x03DF070C B 0x3DF0728
	0x03DF0710 LDR X8, [X9 + 0x20]
	0x03DF0714 LDR X8, [X8 + 0xC0]
	0x03DF0718 LDR X2, [X8 + 0x70]
	0x03DF071C MOV X0, X19
	0x03DF0720 MOV X1, X21
	0x03DF0724 BL 0x301BF90
	0x03DF0728 MOV X0, X21
	0x03DF072C MOV X1, X19
	0x03DF0730 BL 0x3DF0FA0
	0x03DF0734 STP X31, X31, [X31 + 0xB0]
	0x03DF0738 CBZ X20, 0x3DF0794
	0x03DF073C LDR X8, [X20]
	0x03DF0740 LDR X1, [X8 + 0x3B0]
	0x03DF0744 LDR X9, [X8 + 0x3A8]
	0x03DF0748 MOV X0, X20
	0x03DF074C BLR X9
	0x03DF0750 CBZ X0, 0x3DF0794
	0x03DF0754 LDR X8, [X20]
	0x03DF0758 LDR X1, [X8 + 0x3B0]
	0x03DF075C LDR X9, [X8 + 0x3A8]
	0x03DF0760 MOV X0, X20
	0x03DF0764 BLR X9
	0x03DF0768 MOV X1, X0
	0x03DF076C STR X31, [X31 + 0x20]
	0x03DF0770 ADD X0, X31, 0x20
	0x03DF0774 MOV X2, X31
	0x03DF0778 BL 0x3D9B238
	0x03DF077C ADRP X8, 0x379000
	0x03DF0780 LDR X1, [X31 + 0x20]
	0x03DF0784 LDR X8, [X8 + 0x968]
	0x03DF0788 LDR X2, [X8]
	0x03DF078C ADD X0, X31, 0xB0
	0x03DF0790 BL 0x2431BAC
	0x03DF0794 STP X31, X31, [X31 + 0xA0]
	0x03DF0798 LDR X22, [X21 + 0x3A0]
	0x03DF079C CBZ X22, 0x3DF0954
	0x03DF07A0 ADRP X23, 0x32C000
	0x03DF07A4 LDR X8, [X22]
	0x03DF07A8 LDR X23, [X23 + 0xE80]
	0x03DF07AC LDRH W9, [X8 + 0x12E]
	0x03DF07B0 LDR X1, [X23]
	0x03DF07B4 CBZ X9, 0x3DF07D8
	0x03DF07B8 LDR X10, [X8 + 0xB0]
	0x03DF07BC ADD X10, X10, 0x8
	0x03DF07C0 LDUR X11, [X10 - 0x8]
	0x03DF07C4 CMP X11, X1
	0x03DF07C8 B.EQ 0x3DF07E8
	0x03DF07CC SUBS X9, X9, 0x1
	0x03DF07D0 ADD X10, X10, 0x10
	0x03DF07D4 B.NE 0x3DF07C0
	0x03DF07D8 MOVZ W2, 0x1
	0x03DF07DC MOV X0, X22
	0x03DF07E0 BL 0x1C5C788
	0x03DF07E4 B 0x3DF07F8
	0x03DF07E8 LDR W9, [X10]
	0x03DF07EC ADD W9, W9, 0x1
	0x03DF07F0 ADD X8, X8, W9, 0x4, SXTW
	0x03DF07F4 ADD X0, X8, 0x138
	0x03DF07F8 LDP X8, X1, [X0]
	0x03DF07FC MOV X0, X22
	0x03DF0800 BLR X8
	0x03DF0804 CBZ X0, 0x3DF0928
	0x03DF0808 LDR X22, [X21 + 0x3A0]
	0x03DF080C CBZ X22, 0x3DF0CE4
	0x03DF0810 LDR X8, [X22]
	0x03DF0814 LDR X1, [X23]
	0x03DF0818 LDRH W9, [X8 + 0x12E]
	0x03DF081C CBZ X9, 0x3DF0840
	0x03DF0820 LDR X10, [X8 + 0xB0]
	0x03DF0824 ADD X10, X10, 0x8
	0x03DF0828 LDUR X11, [X10 - 0x8]
	0x03DF082C CMP X11, X1
	0x03DF0830 B.EQ 0x3DF0850

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+176], X30
	003 Move [X31+184], X23
	004 Move [X31+192], X22
	005 Move [X31+200], X21
	006 Move [X31+208], X20
	007 Move [X31+216], X19
	008 Move X20, 0x5F9000
	009 Move W8, [X20+582]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x32F000
	016 Move X0, [X0+3264]
	017 Call 0x1C17CF4
	018 Move X0, 0x375000
	019 Move X0, [X0+856]
	020 Call 0x1C17CF4
	021 Move X0, 0x306000
	022 Move X0, [X0+632]
	023 Call 0x1C17CF4
	024 Move X0, 0x375000
	025 Move X0, [X0+680]
	026 Call 0x1C17CF4
	027 Move X0, 0x32C000
	028 Move X0, [X0+2200]
	029 Call 0x1C17CF4
	030 Move X0, 0x37A000
	031 Move X0, [X0+600]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+582], W8
	035 Move X21, 0x5E9000
	036 Move X20, 0x375000
	037 Move W8, [X21+2752]
	038 Move X20, [X20+856]
	039 Compare W8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, 0x308000
	042 Move X0, [X0+624]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+2752], W8
	046 Move X8, 0x308000
	047 Move X8, [X8+624]
	048 Move X21, 0x375000
	049 Move X0, X31
	050 Move X8, [X8]
	051 Move X9, [X8+184]
	052 Move V1, [X9+96]
	053 Move V0, [X9+112]
	054 Move V3, [X9+64]
	055 Move V2, [X9+80]
	056 Move [X19+544], V1
	057 Move [X19+552], V0
	058 Move [X19+512], V3
	059 Move [X19+520], V2
	060 Move X8, [X8+184]
	061 Move V0, [X8+96]
	062 Move V1, [X8+112]
	063 Move V2, [X8+64]
	064 Move V3, [X8+80]
	065 Move X21, [X21+680]
	066 Move [X19+608], V0
	067 Move [X19+616], V1
	068 Move [X19+576], V2
	069 Move [X19+584], V3
	070 Call Rect.get_zero
	071 Move X0, X31
	072 Move [X19+640], S0
	073 Move [X19+644], S1
	074 Move [X19+648], S2
	075 Move [X19+652], S3
	076 Call Rect.get_zero
	077 Move [X19+656], S0
	078 Move [X19+660], S1
	079 Move [X19+664], S2
	080 Move [X19+668], S3
	081 Move [X19+672], W31
	082 Move X0, [X20]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X20, 0x32C000
	088 Move X20, [X20+2200]
	089 Add X8, X31, 0
	090 Move X0, X31
	091 Call InitialStyle.Acquire
	092 Add X0, X31, 88
	093 Add X1, X31, 0
	094 Move W2, 88
	095 Call 0x3EB2AC0
	096 Add X0, X19, 704
	097 Add X1, X31, 88
	098 Move W2, 88
	099 Call 0x3EB2AC0
	100 Move X0, [X21]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {106}
	104 Call 0x1C17DFC
	105 Move X0, [X21]
	106 Move X8, [X0+184]
	107 NotImplemented "Instruction MOVI not yet implemented."
	108 Move X0, X19
	109 Move X1, X31
	110 Move X8, [X8]
	111 Move [X19+800], W31
	112 Move [X19+808], W31
	113 Move [X19+832], W31
	114 Move [X19+872], D0
	115 Move [X19+792], X8
	116 Move [X19+936], X31
	117 Call Focusable..ctor, X0
	118 Move X0, X31
	119 Call UIElementsRuntimeUtilityNative.VisualElementCreation
	120 Move X0, [X20]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {126}
	124 Call 0x1C17DFC
	125 Move X0, [X20]
	126 Move X8, [X0+184]
	127 Move X23, 0x306000
	128 Move X22, 0x37A000
	129 Move X21, 0x32F000
	130 Move X9, [X8+72]
	131 Add X0, X31, 0
	132 Move X1, X19
	133 Move X2, X31
	134 Move [X19+920], X9
	135 Move W9, [X8]
	136 Move X23, [X23+632]
	137 Move X22, [X22+600]
	138 Move X21, [X21+3264]
	139 Add W9, W9, 1
	140 Move [X8], W9
	141 Move [X19+804], W9
	142 Move [X31], X31
	143 Call Hierarchy..ctor, X0, X1
	144 Move X8, [X31]
	145 Move W9, [X19+812]
	146 Move W10, 0x103F
	147 Move [X19+888], X8
	148 Move X8, [X20]
	149 Move X8, [X8+184]
	150 Move X8, [X8+8]
	151 Move [X19+80], W10
	152 Move [X19+64], X8
	153 Compare W9, 0
	154 JumpIfNotEqual {160}
	155 Move W8, 1
	156 Move W1, 1
	157 Move X0, X19
	158 Move [X19+812], W8
	159 Call VisualElement.PropagateEnabledToChildren, X0, X1
	160 Move [X19+32], W31
	161 Move X8, [X23]
	162 Move X0, X19
	163 Move X8, [X8+184]
	164 Move X1, [X8]
	165 Call VisualElement.set_name, X0, X1
	166 Move X0, [X22]
	167 Call 0x1C17F10
	168 Move X1, X31
	169 Move X2, X31
	170 Move X20, X0
	171 Call YogaNode..ctor, X0, X1
	172 Move X0, X19
	173 Move W1, W31
	174 Move [X19+696], X20
	175 Call VisualElement.set_renderHints, X0, X1
	176 Move X0, X19
	177 Move X1, X31
	178 Call "il2cpp_vm_object_is_inst", X0
	179 Move X8, [X21]
	180 Move X20, X0
	181 Move W9, [X8+224]
	182 Compare W9, 0
	183 JumpIfNotEqual {186}
	184 Move X0, X8
	185 Call 0x1C17DFC
	186 Add X2, X19, 884
	187 Add X1, X19, 880
	188 Move X0, X20
	189 Move X3, X31
	190 Call EventInterestReflectionUtils.GetDefaultEventInterests, X0, X1, X2
	191 Move X20, [X31+208]
	192 Move X19, [X31+216]
	193 Move X22, [X31+192]
	194 Move X21, [X31+200]
	195 Move X30, [X31+176]
	196 Move X23, [X31+184]
	197 Add X31, X31, 224
	198 Return 

Method: System.Void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03DF0858 ADD X8, X8, W9, 0x4, SXTW
	0x03DF085C ADD X0, X8, 0x138
	0x03DF0860 LDP X8, X1, [X0]
	0x03DF0864 MOV X0, X22
	0x03DF0868 BLR X8
	0x03DF086C MOV X22, X0
	0x03DF0870 CBZ X20, 0x3DF088C
	0x03DF0874 LDR X8, [X20]
	0x03DF0878 LDR X1, [X8 + 0x3B0]
	0x03DF087C LDR X9, [X8 + 0x3A8]
	0x03DF0880 MOV X0, X20
	0x03DF0884 BLR X9
	0x03DF0888 B 0x3DF0890
	0x03DF088C MOV X0, X31
	0x03DF0890 CMP X22, X0
	0x03DF0894 B.EQ 0x3DF0928
	0x03DF0898 LDR X22, [X21 + 0x3A0]
	0x03DF089C CBZ X22, 0x3DF0CF0
	0x03DF08A0 LDR X8, [X22]
	0x03DF08A4 LDR X1, [X23]
	0x03DF08A8 LDRH W9, [X8 + 0x12E]
	0x03DF08AC CBZ X9, 0x3DF08D0
	0x03DF08B0 LDR X10, [X8 + 0xB0]
	0x03DF08B4 ADD X10, X10, 0x8
	0x03DF08B8 LDUR X11, [X10 - 0x8]
	0x03DF08BC CMP X11, X1
	0x03DF08C0 B.EQ 0x3DF08E0
	0x03DF08C4 SUBS X9, X9, 0x1
	0x03DF08C8 ADD X10, X10, 0x10
	0x03DF08CC B.NE 0x3DF08B8
	0x03DF08D0 MOVZ W2, 0x1
	0x03DF08D4 MOV X0, X22
	0x03DF08D8 BL 0x1C5C788
	0x03DF08DC B 0x3DF08F0
	0x03DF08E0 LDR W9, [X10]
	0x03DF08E4 ADD W9, W9, 0x1
	0x03DF08E8 ADD X8, X8, W9, 0x4, SXTW
	0x03DF08EC ADD X0, X8, 0x138
	0x03DF08F0 LDP X8, X1, [X0]
	0x03DF08F4 MOV X0, X22
	0x03DF08F8 BLR X8
	0x03DF08FC MOV X1, X0
	0x03DF0900 STR X31, [X31 + 0x20]
	0x03DF0904 ADD X0, X31, 0x20
	0x03DF0908 MOV X2, X31
	0x03DF090C BL 0x3D9B238
	0x03DF0910 ADRP X8, 0x379000
	0x03DF0914 LDR X1, [X31 + 0x20]
	0x03DF0918 LDR X8, [X8 + 0x968]
	0x03DF091C LDR X2, [X8]
	0x03DF0920 ADD X0, X31, 0xA0
	0x03DF0924 BL 0x2431BAC
	0x03DF0928 LDR X22, [X21 + 0x3A0]
	0x03DF092C CBZ X22, 0x3DF0954
	0x03DF0930 LDR X8, [X22]
	0x03DF0934 LDR X1, [X8 + 0x330]
	0x03DF0938 LDR X9, [X8 + 0x328]
	0x03DF093C MOV X0, X22
	0x03DF0940 BLR X9
	0x03DF0944 LDR X23, [X21 + 0x3A0]
	0x03DF0948 MOV W24, W0
	0x03DF094C MOV W28, W31
	0x03DF0950 B 0x3DF0960
	0x03DF0954 MOV X23, X31
	0x03DF0958 MOV W24, W31
	0x03DF095C MOVZ W28, 0x1
	0x03DF0960 LDRB W9, [X31 + 0xB0]
	0x03DF0964 LDRB W8, [X31 + 0xA0]
	0x03DF0968 LDR X10, [X31 + 0xB8]
	0x03DF096C STP W8, W9, [X31 + 0x18]
	0x03DF0970 LDR X8, [X31 + 0xA8]
	0x03DF0974 STP X10, X8, [X31 + 0x8]
	0x03DF0978 CBZ X23, 0x3DF09F8
	0x03DF097C ADRP X10, 0x32C000
	0x03DF0980 LDR X8, [X23]
	0x03DF0984 LDR X10, [X10 + 0xE80]
	0x03DF0988 LDRH W9, [X8 + 0x12E]
	0x03DF098C LDR X1, [X10]
	0x03DF0990 CBZ X9, 0x3DF09B4
	0x03DF0994 LDR X10, [X8 + 0xB0]
	0x03DF0998 ADD X10, X10, 0x8
	0x03DF099C LDUR X11, [X10 - 0x8]
	0x03DF09A0 CMP X11, X1
	0x03DF09A4 B.EQ 0x3DF09C4
	0x03DF09A8 SUBS X9, X9, 0x1
	0x03DF09AC ADD X10, X10, 0x10
	0x03DF09B0 B.NE 0x3DF099C
	0x03DF09B4 MOVZ W2, 0x1
	0x03DF09B8 MOV X0, X23
	0x03DF09BC BL 0x1C5C788
	0x03DF09C0 B 0x3DF09D4
	0x03DF09C4 LDR W9, [X10]
	0x03DF09C8 ADD W9, W9, 0x1
	0x03DF09CC ADD X8, X8, W9, 0x4, SXTW
	0x03DF09D0 ADD X0, X8, 0x138
	0x03DF09D4 LDP X8, X1, [X0]
	0x03DF09D8 MOV X0, X23
	0x03DF09DC BLR X8
	0x03DF09E0 CBZ X0, 0x3DF09F8
	0x03DF09E4 LDR X0, [X0 + 0x10]
	0x03DF09E8 CBZ X0, 0x3DF0CE8
	0x03DF09EC MOV X1, X19
	0x03DF09F0 MOV X2, X31
	0x03DF09F4 BL 0x3CECA88
	0x03DF09F8 ADRP X29, 0x377000
	0x03DF09FC LDR X29, [X29 + 0xDA8]
	0x03DF0A00 LDR X1, [X29]
	0x03DF0A04 ADD X8, X31, 0x20
	0x03DF0A08 MOV X0, X19
	0x03DF0A0C BL 0x301CB58
	0x03DF0A10 LDR V0, [X31 + 0x2]
	0x03DF0A14 LDR X8, [X31 + 0x30]
	0x03DF0A18 ADRP X27, 0x377000
	0x03DF0A1C LDR X27, [X27 + 0xD98]
	0x03DF0A20 STR V0, [X31 + 0x8]
	0x03DF0A24 STR X8, [X31 + 0x90]
	0x03DF0A28 LDR X1, [X27]
	0x03DF0A2C ADD X0, X31, 0x80
	0x03DF0A30 BL 0x2BC4350
	0x03DF0A34 TBZ X0, 0x0, 0x3DF0A4C
	0x03DF0A38 LDR X0, [X31 + 0x90]
	0x03DF0A3C CBZ X0, 0x3DF0CA0
	0x03DF0A40 MOV X1, X20
	0x03DF0A44 BL 0x3DF1078
	0x03DF0A48 B 0x3DF0A28
	0x03DF0A4C MOV X23, X31
	0x03DF0A50 MOVZ W25, 0x15
	0x03DF0A54 ADRP X8, 0x377000
	0x03DF0A58 LDR X8, [X8 + 0xD90]
	0x03DF0A5C LDR X1, [X8]
	0x03DF0A60 ADD X0, X31, 0x80
	0x03DF0A64 BL 0x2BC434C
	0x03DF0A68 CBNZ X23, 0x3DF0CCC
	0x03DF0A6C CMP W25, 0x15
	0x03DF0A70 B.EQ 0x3DF0A78
	0x03DF0A74 CBNZ W25, 0x3DF0BF0
	0x03DF0A78 TBZ X28, 0x0, 0x3DF0A84
	0x03DF0A7C MOV W0, W31
	0x03DF0A80 B 0x3DF0A98
	0x03DF0A84 LDR X8, [X22]
	0x03DF0A88 LDR X1, [X8 + 0x330]
	0x03DF0A8C LDR X9, [X8 + 0x328]
	0x03DF0A90 MOV X0, X22
	0x03DF0A94 BLR X9
	0x03DF0A98 CMP W24, W0
	0x03DF0A9C B.EQ 0x3DF0B24
	0x03DF0AA0 LDP W2, W8, [X19 + 0x18]
	0x03DF0AA4 ADD W8, W8, 0x1
	0x03DF0AA8 CMP W2, 0x1
	0x03DF0AAC STP W31, W8, [X19 + 0x18]
	0x03DF0AB0 B.LT 0x3DF0AC4
	0x03DF0AB4 LDR X0, [X19 + 0x10]
	0x03DF0AB8 MOV W1, W31
	0x03DF0ABC MOV X3, X31
	0x03DF0AC0 BL 0x339FA34
	0x03DF0AC4 LDR W10, [X19 + 0x1C]
	0x03DF0AC8 LDR X8, [X19 + 0x10]
	0x03DF0ACC LDR X9, [X26]
	0x03DF0AD0 ADD W10, W10, 0x1
	0x03DF0AD4 STR W10, [X19 + 0x1C]
	0x03DF0AD8 CBZ X8, 0x3DF0CEC
	0x03DF0ADC LDRSW X10, [X19 + 0x18]
	0x03DF0AE0 LDR W11, [X8 + 0x18]
	0x03DF0AE4 CMP W10, W11
	0x03DF0AE8 B.CS 0x3DF0B00
	0x03DF0AEC ADD W9, W10, 0x1
	0x03DF0AF0 ADD X8, X8, X10, 0x3, LSL
	0x03DF0AF4 STR W9, [X19 + 0x18]
	0x03DF0AF8 STR X21, [X8 + 0x20]
	0x03DF0AFC B 0x3DF0B18
	0x03DF0B00 LDR X8, [X9 + 0x20]
	0x03DF0B04 LDR X8, [X8 + 0xC0]
	0x03DF0B08 LDR X2, [X8 + 0x70]
	0x03DF0B0C MOV X0, X19
	0x03DF0B10 MOV X1, X21
	0x03DF0B14 BL 0x301BF90
	0x03DF0B18 MOV X0, X21
	0x03DF0B1C MOV X1, X19
	0x03DF0B20 BL 0x3DF0FA0
	0x03DF0B24 LDR X1, [X29]
	0x03DF0B28 CMP X20, 0x0
	0x03DF0B2C CSET W21, NE
	0x03DF0B30 ADD X8, X31, 0x20
	0x03DF0B34 MOV X0, X19
	0x03DF0B38 BL 0x301CB58
	0x03DF0B3C LDR V0, [X31 + 0x2]
	0x03DF0B40 LDR X8, [X31 + 0x30]
	0x03DF0B44 UBFM W21, W21, 0x15, 0x14
	0x03DF0B48 STR V0, [X31 + 0x6]
	0x03DF0B4C STR X8, [X31 + 0x70]
	0x03DF0B50 LDR X1, [X27]
	0x03DF0B54 ADD X0, X31, 0x60
	0x03DF0B58 BL 0x2BC4350
	0x03DF0B5C TBZ X0, 0x0, 0x3DF0B80
	0x03DF0B60 LDR X8, [X31 + 0x70]
	0x03DF0B64 CBZ X8, 0x3DF0CA4
	0x03DF0B68 LDR W9, [X8 + 0x50]
	0x03DF0B6C STR X20, [X8 + 0x3A0]
	0x03DF0B70 STR X31, [X8 + 0x360]
	0x03DF0B74 ORR W9, W9, W21, 0x0
	0x03DF0B78 STR W9, [X8 + 0x50]
	0x03DF0B7C B 0x3DF0B50
	0x03DF0B80 MOV X21, X31
	0x03DF0B84 MOVZ W20, 0x1D
	0x03DF0B88 ADRP X8, 0x377000
	0x03DF0B8C LDR X8, [X8 + 0xD90]
	0x03DF0B90 LDR X1, [X8]
	0x03DF0B94 ADD X0, X31, 0x60
	0x03DF0B98 BL 0x2BC434C
	0x03DF0B9C CBNZ X21, 0x3DF0CD4
	0x03DF0BA0 CMP W20, 0x1D
	0x03DF0BA4 B.EQ 0x3DF0BAC
	0x03DF0BA8 CBNZ W20, 0x3DF0BF0
	0x03DF0BAC LDR X1, [X29]
	0x03DF0BB0 ADD X8, X31, 0x20
	0x03DF0BB4 MOV X0, X19
	0x03DF0BB8 BL 0x301CB58
	0x03DF0BBC LDR V0, [X31 + 0x2]
	0x03DF0BC0 LDR X8, [X31 + 0x30]
	0x03DF0BC4 STR V0, [X31 + 0x4]
	0x03DF0BC8 STR X8, [X31 + 0x50]
	0x03DF0BCC LDR X1, [X27]
	0x03DF0BD0 ADD X0, X31, 0x40
	0x03DF0BD4 BL 0x2BC4350
	0x03DF0BD8 TBZ X0, 0x0, 0x3DF0BF8
	0x03DF0BDC LDR X0, [X31 + 0x50]
	0x03DF0BE0 CBZ X0, 0x3DF0CA8
	0x03DF0BE4 MOV X1, X22
	0x03DF0BE8 BL 0x3DF12B8
	0x03DF0BEC B 0x3DF0BCC
	0x03DF0BF0 MOV X21, X31
	0x03DF0BF4 B 0x3DF0C14
	0x03DF0BF8 MOV X21, X31
	0x03DF0BFC ADRP X8, 0x377000
	0x03DF0C00 LDR X8, [X8 + 0xD90]
	0x03DF0C04 LDR X1, [X8]
	0x03DF0C08 ADD X0, X31, 0x40
	0x03DF0C0C BL 0x2BC434C
	0x03DF0C10 CBNZ X21, 0x3DF0CDC
	0x03DF0C14 LDR W8, [X31 + 0x18]
	0x03DF0C18 CBZ W8, 0x3DF0C30
	0x03DF0C1C LDR X8, [X31 + 0x10]
	0x03DF0C20 STR X8, [X31 + 0x38]
	0x03DF0C24 ADD X0, X31, 0x38
	0x03DF0C28 MOV X1, X31
	0x03DF0C2C BL 0x3D9B2B0
	0x03DF0C30 CBNZ X21, 0x3DF0CC4
	0x03DF0C34 LDR W8, [X31 + 0x1C]
	0x03DF0C38 CBZ W8, 0x3DF0C50
	0x03DF0C3C LDR X8, [X31 + 0x8]
	0x03DF0C40 STR X8, [X31 + 0x38]
	0x03DF0C44 ADD X0, X31, 0x38
	0x03DF0C48 MOV X1, X31
	0x03DF0C4C BL 0x3D9B2B0
	0x03DF0C50 CBNZ X21, 0x3DF0CBC
	0x03DF0C54 MOV X20, X31
	0x03DF0C58 ADRP X8, 0x32C000
	0x03DF0C5C LDR X8, [X8 + 0xF8]
	0x03DF0C60 LDR X0, [X8]
	0x03DF0C64 LDR W8, [X0 + 0xE0]
	0x03DF0C68 CBNZ W8, 0x3DF0C70
	0x03DF0C6C BL 0x1C16DFC
	0x03DF0C70 MOV X0, X19
	0x03DF0C74 MOV X1, X31
	0x03DF0C78 BL 0x3D164D4
	0x03DF0C7C CBNZ X20, 0x3DF0CB0
	0x03DF0C80 LDP X20, X19, [X31 + 0x110]
	0x03DF0C84 LDP X22, X21, [X31 + 0x100]
	0x03DF0C88 LDP X24, X23, [X31 + 0xF0]
	0x03DF0C8C LDP X26, X25, [X31 + 0xE0]
	0x03DF0C90 LDP X28, X27, [X31 + 0xD0]
	0x03DF0C94 LDP X29, X30, [X31 + 0xC0]
	0x03DF0C98 ADD X31, X31, 0x120
	0x03DF0C9C RET
	0x03DF0CA0 BL 0x1C16F20
	0x03DF0CA4 BL 0x1C16F20
	0x03DF0CA8 BL 0x1C16F20
	0x03DF0CAC BL 0x1C16F20
	0x03DF0CB0 MOV X0, X20
	0x03DF0CB4 BL 0x1C16F18
	0x03DF0CB8 BL 0x1C16F20
	0x03DF0CBC MOV X0, X21
	0x03DF0CC0 BL 0x1C16F18
	0x03DF0CC4 MOV X0, X21
	0x03DF0CC8 BL 0x1C16F18
	0x03DF0CCC MOV X0, X23
	0x03DF0CD0 BL 0x1C16F18
	0x03DF0CD4 MOV X0, X21
	0x03DF0CD8 BL 0x1C16F18
	0x03DF0CDC MOV X0, X21
	0x03DF0CE0 BL 0x1C16F18
	0x03DF0CE4 BL 0x1C16F20
	0x03DF0CE8 BL 0x1C16F20
	0x03DF0CEC BL 0x1C16F20
	0x03DF0CF0 BL 0x1C16F20
	0x03DF0CF4 B 0x3DF0D6C
	0x03DF0CF8 B 0x3DF0D60
	0x03DF0CFC B 0x3DF0D60
	0x03DF0D00 B 0x3DF0D6C
	0x03DF0D04 B 0x3DF0D6C
	0x03DF0D08 B 0x3DF0D60
	0x03DF0D0C B 0x3DF0D60
	0x03DF0D10 B 0x3DF0D60
	0x03DF0D14 B 0x3DF0D60
	0x03DF0D18 B 0x3DF0D6C
	0x03DF0D1C B 0x3DF0D60
	0x03DF0D20 B 0x3DF0D6C
	0x03DF0D24 B 0x3DF0D60
	0x03DF0D28 B 0x3DF0D60
	0x03DF0D2C B 0x3DF0D6C
	0x03DF0D30 B 0x3DF0D6C
	0x03DF0D34 B 0x3DF0D60
	0x03DF0D38 B 0x3DF0D6C
	0x03DF0D3C B 0x3DF0D6C
	0x03DF0D40 B 0x3DF0D60
	0x03DF0D44 B 0x3DF0D6C
	0x03DF0D48 B 0x3DF0D60
	0x03DF0D4C B 0x3DF0D6C
	0x03DF0D50 MOV X25, X0
	0x03DF0D54 MOVZ W8, 0x1
	0x03DF0D58 MOV W20, W1
	0x03DF0D5C B 0x3DF0EC4
	0x03DF0D60 MOV X25, X0
	0x03DF0D64 MOV W20, W1
	0x03DF0D68 B 0x3DF0F04
	0x03DF0D6C MOV X25, X0
	0x03DF0D70 MOV W20, W1
	0x03DF0D74 B 0x3DF0E80
	0x03DF0D78 MOV X20, X1
	0x03DF0D7C MOV X25, X0
	0x03DF0D80 B 0x3DF0F04
	0x03DF0D84 B 0x3DF0D8C
	0x03DF0D88 B 0x3DF0D8C
	0x03DF0D8C MOV X25, X0
	0x03DF0D90 CMP W1, 0x1
	0x03DF0D94 B.NE 0x3DF0DAC
	0x03DF0D98 MOV X0, X25
	0x03DF0D9C BL 0x3EB1AD0
	0x03DF0DA0 LDR X21, [X0]
	0x03DF0DA4 BL 0x3EB1AE0
	0x03DF0DA8 B 0x3DF0BFC
	0x03DF0DAC MOV X21, X31
	0x03DF0DB0 ADRP X8, 0x377000
	0x03DF0DB4 LDR X8, [X8 + 0xD90]
	0x03DF0DB8 MOV W20, W1
	0x03DF0DBC LDR X1, [X8]
	0x03DF0DC0 ADD X0, X31, 0x40
	0x03DF0DC4 BL 0x2BC434C
	0x03DF0DC8 CBZ X21, 0x3DF0E80
	0x03DF0DCC MOV X0, X21
	0x03DF0DD0 BL 0x1C16F18
	0x03DF0DD4 MOV X25, X0
	0x03DF0DD8 B 0x3DF0DB0
	0x03DF0DDC B 0x3DF0DE0
	0x03DF0DE0 MOV X25, X0
	0x03DF0DE4 CMP W1, 0x1
	0x03DF0DE8 B.NE 0x3DF0E04
	0x03DF0DEC MOV X0, X25
	0x03DF0DF0 BL 0x3EB1AD0
	0x03DF0DF4 LDR X21, [X0]
	0x03DF0DF8 BL 0x3EB1AE0
	0x03DF0DFC MOV W20, W31
	0x03DF0E00 B 0x3DF0B88
	0x03DF0E04 MOV X21, X31
	0x03DF0E08 ADRP X8, 0x377000
	0x03DF0E0C LDR X8, [X8 + 0xD90]
	0x03DF0E10 MOV W20, W1
	0x03DF0E14 LDR X1, [X8]
	0x03DF0E18 ADD X0, X31, 0x60
	0x03DF0E1C BL 0x2BC434C
	0x03DF0E20 CBZ X21, 0x3DF0E80
	0x03DF0E24 MOV X0, X21
	0x03DF0E28 BL 0x1C16F18
	0x03DF0E2C MOV X25, X0
	0x03DF0E30 B 0x3DF0E08
	0x03DF0E34 B 0x3DF0E3C
	0x03DF0E38 B 0x3DF0E3C
	0x03DF0E3C MOV X25, X0
	0x03DF0E40 CMP W1, 0x1
	0x03DF0E44 B.NE 0x3DF0E60
	0x03DF0E48 MOV X0, X25
	0x03DF0E4C BL 0x3EB1AD0
	0x03DF0E50 LDR X23, [X0]
	0x03DF0E54 BL 0x3EB1AE0
	0x03DF0E58 MOV W25, W31
	0x03DF0E5C B 0x3DF0A54
	0x03DF0E60 MOV X23, X31
	0x03DF0E64 ADRP X8, 0x377000
	0x03DF0E68 LDR X8, [X8 + 0xD90]
	0x03DF0E6C MOV W20, W1
	0x03DF0E70 LDR X1, [X8]
	0x03DF0E74 ADD X0, X31, 0x80
	0x03DF0E78 BL 0x2BC434C
	0x03DF0E7C CBNZ X23, 0x3DF0F28
	0x03DF0E80 CMP W20, 0x1
	0x03DF0E84 B.NE 0x3DF0E9C
	0x03DF0E88 MOV X0, X25
	0x03DF0E8C BL 0x3EB1AD0
	0x03DF0E90 LDR X21, [X0]
	0x03DF0E94 BL 0x3EB1AE0
	0x03DF0E98 B 0x3DF0C14
	0x03DF0E9C MOV X21, X31
	0x03DF0EA0 LDR W8, [X31 + 0x18]
	0x03DF0EA4 CBZ W8, 0x3DF0EBC
	0x03DF0EA8 LDR X8, [X31 + 0x10]
	0x03DF0EAC STR X8, [X31 + 0x38]
	0x03DF0EB0 ADD X0, X31, 0x38
	0x03DF0EB4 MOV X1, X31
	0x03DF0EB8 BL 0x3D9B2B0
	0x03DF0EBC CBNZ X21, 0x3DF0F20
	0x03DF0EC0 MOVZ W8, 0x1
	0x03DF0EC4 CMP W20, W8
	0x03DF0EC8 B.NE 0x3DF0EE0
	0x03DF0ECC MOV X0, X25
	0x03DF0ED0 BL 0x3EB1AD0
	0x03DF0ED4 LDR X21, [X0]
	0x03DF0ED8 BL 0x3EB1AE0
	0x03DF0EDC B 0x3DF0C34
	0x03DF0EE0 MOV X21, X31
	0x03DF0EE4 LDR W8, [X31 + 0x1C]
	0x03DF0EE8 CBZ W8, 0x3DF0F00
	0x03DF0EEC LDR X8, [X31 + 0x8]
	0x03DF0EF0 STR X8, [X31 + 0x38]
	0x03DF0EF4 ADD X0, X31, 0x38
	0x03DF0EF8 MOV X1, X31
	0x03DF0EFC BL 0x3D9B2B0
	0x03DF0F00 CBNZ X21, 0x3DF0F38
	0x03DF0F04 CMP W20, 0x1
	0x03DF0F08 B.NE 0x3DF0F30
	0x03DF0F0C MOV X0, X25
	0x03DF0F10 BL 0x3EB1AD0
	0x03DF0F14 LDR X20, [X0]
	0x03DF0F18 BL 0x3EB1AE0
	0x03DF0F1C B 0x3DF0C58
	0x03DF0F20 MOV X0, X21
	0x03DF0F24 BL 0x1C16F18
	0x03DF0F28 MOV X0, X23
	0x03DF0F2C BL 0x1C16F18
	0x03DF0F30 MOV X20, X31
	0x03DF0F34 B 0x3DF0F50
	0x03DF0F38 MOV X0, X21
	0x03DF0F3C BL 0x1C16F18
	0x03DF0F40 MOV X25, X0
	0x03DF0F44 MOV W20, W1
	0x03DF0F48 B 0x3DF0EE4
	0x03DF0F4C MOV X25, X0
	0x03DF0F50 ADRP X8, 0x32C000
	0x03DF0F54 LDR X8, [X8 + 0xF8]
	0x03DF0F58 LDR X0, [X8]
	0x03DF0F5C LDR W8, [X0 + 0xE0]
	0x03DF0F60 CBNZ W8, 0x3DF0F68
	0x03DF0F64 BL 0x1C16DFC
	0x03DF0F68 MOV X0, X19
	0x03DF0F6C MOV X1, X31
	0x03DF0F70 BL 0x3D164D4
	0x03DF0F74 CBNZ X20, 0x3DF0F80

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x5F9000
	008 Move W8, [X21+583]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {86}
	015 Move X0, 0x379000
	016 Move X0, [X0+848]
	017 Call 0x1C17CF4
	018 Move X0, 0x37A000
	019 Move X0, [X0+2352]
	020 Call 0x1C17CF4
	021 Move X0, 0x37A000
	022 Move X0, [X0+2360]
	023 Call 0x1C17CF4
	024 Move X0, 0x37A000
	025 Move X0, [X0+2368]
	026 Call 0x1C17CF4
	027 Move X0, 0x32E000
	028 Move X0, [X0+1744]
	029 Call 0x1C17CF4
	030 Move X0, 0x37A000
	031 Move X0, [X0+2376]
	032 Call 0x1C17CF4
	033 Move X0, 0x379000
	034 Move X0, [X0+1944]
	035 Call 0x1C17CF4
	036 Move X0, 0x32E000
	037 Move X0, [X0+1768]
	038 Call 0x1C17CF4
	039 Move X0, 0x37A000
	040 Move X0, [X0+2384]
	041 Call 0x1C17CF4
	042 Move X0, 0x379000
	043 Move X0, [X0+1952]
	044 Call 0x1C17CF4
	045 Move X0, 0x378000
	046 Move X0, [X0+3872]
	047 Call 0x1C17CF4
	048 Move X0, 0x379000
	049 Move X0, [X0+2384]
	050 Call 0x1C17CF4
	051 Move X0, 0x378000
	052 Move X0, [X0+3816]
	053 Call 0x1C17CF4
	054 Move X0, 0x32E000
	055 Move X0, [X0+1784]
	056 Call 0x1C17CF4
	057 Move X0, 0x379000
	058 Move X0, [X0+2448]
	059 Call 0x1C17CF4
	060 Move X0, 0x32E000
	061 Move X0, [X0+1792]
	062 Call 0x1C17CF4
	063 Move X0, 0x379000
	064 Move X0, [X0+1480]
	065 Call 0x1C17CF4
	066 Move X0, 0x379000
	067 Move X0, [X0+1536]
	068 Call 0x1C17CF4
	069 Move X0, 0x379000
	070 Move X0, [X0+2712]
	071 Call 0x1C17CF4
	072 Move X0, 0x378000
	073 Move X0, [X0+3760]
	074 Call 0x1C17CF4
	075 Move X0, 0x37A000
	076 Move X0, [X0+2392]
	077 Call 0x1C17CF4
	078 Move X0, 0x32D000
	079 Move X0, [X0+3704]
	080 Call 0x1C17CF4
	081 Move X0, 0x379000
	082 Move X0, [X0+2752]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X21+583], W8
	086 Move X0, X19
	087 Move X1, X20
	088 Move X2, X31
	089 Call Focusable.ExecuteDefaultAction, X0, X1
	090 Compare X20, 0
	091 JumpIfEqual {476}
	092 Move X8, [X20]
	093 Move X21, 0x379000
	094 Move X22, 0x37A000
	095 Move X0, X20
	096 Move X9, [X8+392]
	097 Move X1, [X8+400]
	098 Move X21, [X21+1480]
	099 Move X22, [X22+2352]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X8, [X21]
	102 Move X21, X0
	103 Move W9, [X8+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {108}
	106 Move X0, X8
	107 Call 0x1C17DFC
	108 Move X0, [X22]
	109 Call 0x2D0E5C8
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X8, [X20]
	112 Move X0, X20
	113 Move X9, [X8+392]
	114 Move X1, [X8+400]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X8, 0x379000
	117 Move X8, [X8+1536]
	118 Move X21, X0
	119 Move X8, [X8]
	120 Move W9, [X8+224]
	121 Compare W9, 0
	122 JumpIfNotEqual {125}
	123 Move X0, X8
	124 Call 0x1C17DFC
	125 Move X8, 0x37A000
	126 Move X8, [X8+2360]
	127 Move X0, [X8]
	128 Call 0x2D0E5C8
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move W22, 1
	131 Move X8, [X20]
	132 Move X0, X20
	133 Move X9, [X8+392]
	134 Move X1, [X8+400]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move X8, 0x378000
	137 Move X8, [X8+3872]
	138 Move X21, X0
	139 Move X8, [X8]
	140 Move W9, [X8+224]
	141 Compare W9, 0
	142 JumpIfNotEqual {145}
	143 Move X0, X8
	144 Call 0x1C17DFC
	145 Move X8, 0x379000
	146 Move X8, [X8+848]
	147 Move X0, [X8]
	148 Call 0x2D0E5C8
	149 NotImplemented "Instruction CMP not yet implemented."
	150 NotImplemented "Instruction CSET not yet implemented."
	151 Move X8, [X20]
	152 Move X0, X20
	153 Move X9, [X8+392]
	154 Move X1, [X8+400]
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move X21, X0
	157 Compare W22, 0
	158 JumpIfEqual {167}
	159 Move X0, X19
	160 Move X1, X21
	161 Move X20, [X31+32]
	162 Move X19, [X31+40]
	163 Move X22, [X31+16]
	164 Move X21, [X31+24]
	165 Move X30, [X31+48]
	166 Move X23, [X31+56]
	167 Move X8, 0x379000
	168 Move X8, [X8+2384]
	169 Move X0, [X8]
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move X8, 0x37A000
	175 Move X8, [X8+2368]
	176 Move X0, [X8]
	177 Call 0x2D0E5C8
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X22, 0x32D000
	180 Move W23, [X19+688]
	181 Move X22, [X22+3704]
	182 Move X0, X20
	183 Move X21, [X22]
	184 Move X1, X21
	185 Call 0x1C17E00
	186 Compare X0, 0
	187 JumpIfEqual {486}
	188 Move X22, [X22]
	189 Move X0, X20
	190 Move X1, X22
	191 Call 0x1C17E00
	192 Compare X0, 0
	193 JumpIfEqual {483}
	194 Move X8, [X0]
	195 Move X21, X0
	196 NotImplemented "Instruction LDRH not yet implemented."
	197 Compare X9, 0
	198 JumpIfEqual {205}
	199 Move X10, [X8+176]
	200 Add X10, X10, 8
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Subtract X9, X9, 1
	204 Add X10, X10, 16
	205 Move X0, X21
	206 Move X1, X22
	207 Move W2, W31
	208 Call 0x1C5D788
	209 Move X8, [X20]
	210 Move X0, X20
	211 Move X9, [X8+392]
	212 Move X1, [X8+400]
	213 NotImplemented "Instruction BLR not yet implemented."
	214 Move X8, 0x379000
	215 Move X8, [X8+2448]
	216 Move X21, X0
	217 Move X8, [X8]
	218 Move W9, [X8+224]
	219 Compare W9, 0
	220 JumpIfNotEqual {223}
	221 Move X0, X8
	222 Call 0x1C17DFC
	223 Move X8, 0x37A000
	224 Move X8, [X8+2376]
	225 Move X0, [X8]
	226 Call 0x2D0E5C8
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X22, 0x32D000
	229 Move W23, [X19+688]
	230 Move X22, [X22+3704]
	231 Move X0, X20
	232 Move X21, [X22]
	233 Move X1, X21
	234 Call 0x1C17E00
	235 Compare X0, 0
	236 JumpIfEqual {486}
	237 Move X22, [X22]
	238 Move X0, X20
	239 Move X1, X22
	240 Call 0x1C17E00
	241 Compare X0, 0
	242 JumpIfEqual {483}
	243 Move X8, [X0]
	244 Move X21, X0
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 Compare X9, 0
	247 JumpIfEqual {254}
	248 Move X10, [X8+176]
	249 Add X10, X10, 8
	250 NotImplemented "Instruction LDUR not yet implemented."
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Subtract X9, X9, 1
	253 Add X10, X10, 16
	254 Move X0, X21
	255 Move X1, X22
	256 Move W2, W31
	257 Call 0x1C5D788
	258 Move X8, [X20]
	259 Move X0, X20
	260 Move X9, [X8+392]
	261 Move X1, [X8+400]
	262 NotImplemented "Instruction BLR not yet implemented."
	263 Move X8, 0x378000
	264 Move X8, [X8+3816]
	265 Move X21, X0
	266 Move X8, [X8]
	267 Move W9, [X8+224]
	268 Compare W9, 0
	269 JumpIfNotEqual {272}
	270 Move X0, X8
	271 Call 0x1C17DFC
	272 Move X8, 0x379000
	273 Move X8, [X8+1952]
	274 Move X0, [X8]
	275 Call 0x2D0E5C8
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move X8, [X20]
	278 Move X0, X20
	279 Move X9, [X8+392]
	280 Move X1, [X8+400]
	281 NotImplemented "Instruction BLR not yet implemented."
	282 Move X8, 0x378000
	283 Move X8, [X8+3760]
	284 Move X21, X0
	285 Move X8, [X8]
	286 Move W9, [X8+224]
	287 Compare W9, 0
	288 JumpIfNotEqual {291}
	289 Move X0, X8
	290 Call 0x1C17DFC
	291 Move X8, 0x379000
	292 Move X8, [X8+1944]
	293 Move X0, [X8]
	294 Call 0x2D0E5C8
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Compare X19, 0
	297 JumpIfEqual {304}
	298 Move X21, X19
	299 Move X0, X21
	300 Call VisualElement.UpdateHoverPseudoState, X0
	301 Move X21, [X21+912]
	302 Compare X21, 0
	303 JumpIfNotEqual {299}
	304 Move X21, [X19+928]
	305 Compare X21, 0
	306 JumpIfEqual {476}
	307 Move X23, 0x37A000
	308 Move X23, [X23+2392]
	309 Move X0, X20
	310 Move X22, [X23]
	311 Move X1, X22
	312 Call 0x1C17E00
	313 Compare X0, 0
	314 JumpIfEqual {483}
	315 Move X23, [X23]
	316 Move X0, X20
	317 Move X1, X23
	318 Call 0x1C17E00
	319 Compare X0, 0
	320 JumpIfEqual {489}
	321 Move X8, [X0]
	322 Move X22, X0
	323 NotImplemented "Instruction LDRH not yet implemented."
	324 Compare X9, 0
	325 JumpIfEqual {332}
	326 Move X10, [X8+176]
	327 Add X10, X10, 8
	328 NotImplemented "Instruction LDUR not yet implemented."
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Subtract X9, X9, 1
	331 Add X10, X10, 16
	332 Move X0, X22
	333 Move X1, X23
	334 Move W2, W31
	335 Call 0x1C5D788
	336 NotImplemented "Instruction LDRSW not yet implemented."
	337 Add X8, X8, X9
	338 Add X0, X8, 312
	339 Move X8, [X0]
	340 Move X1, [X0+8]
	341 Move X0, X21
	342 NotImplemented "Instruction BLR not yet implemented."
	343 Move W8, 1
	344 NotImplemented "Instruction LSLV not yet implemented."
	345 Or W8, W8, W23
	346 NotImplemented "Instruction LDRSW not yet implemented."
	347 Add X8, X8, X9
	348 Add X0, X8, 312
	349 Move X8, [X0]
	350 Move X1, [X0+8]
	351 Move X0, X21
	352 NotImplemented "Instruction BLR not yet implemented."
	353 Move W8, 1
	354 NotImplemented "Instruction LSLV not yet implemented."
	355 NotImplemented "Instruction BIC not yet implemented."
	356 Move [X19+688], W8
	357 Move X0, X19
	358 Move X20, [X31+32]
	359 Move X19, [X31+40]
	360 Move X22, [X31+16]
	361 Move X21, [X31+24]
	362 Move X30, [X31+48]
	363 Move X23, [X31+56]
	364 Call VisualElement.UpdateHoverPseudoState, X0
	365 Return 
	366 Move X8, [X20]
	367 Move X0, X20
	368 Move X9, [X8+392]
	369 Move X1, [X8+400]
	370 NotImplemented "Instruction BLR not yet implemented."
	371 Move X8, 0x32E000
	372 Move X8, [X8+1784]
	373 Move X21, X0
	374 Move X8, [X8]
	375 Move W9, [X8+224]
	376 Compare W9, 0
	377 JumpIfNotEqual {380}
	378 Move X0, X8
	379 Call 0x1C17DFC
	380 Move X8, 0x32E000
	381 Move X8, [X8+1768]
	382 Move X0, [X8]
	383 Call 0x2D0E5C8
	384 NotImplemented "Instruction CMP not yet implemented."
	385 Move W8, [X19+684]
	386 And W1, W8, 0xFFFFFFBF
	387 NotImplemented "Instruction LDRSW not yet implemented."
	388 Add X8, X8, X9
	389 Add X0, X8, 312
	390 Move X8, [X0]
	391 Move X1, [X0+8]
	392 Move X0, X22
	393 NotImplemented "Instruction BLR not yet implemented."
	394 Move W1, W0
	395 Move X0, X21
	396 Move X2, X31
	397 Call BaseVisualElementPanel.GetTopElementUnderPointer, X0, X1
	398 Compare X0, 0
	399 JumpIfEqual {476}
	400 Move X20, X0
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Move X0, X20
	403 Call VisualElement.UpdateHoverPseudoState, X0
	404 Move X20, [X20+912]
	405 Compare X20, 0
	406 JumpIfNotEqual {401}
	407 Move X8, [X20]
	408 Move X0, X20
	409 Move X9, [X8+392]
	410 Move X1, [X8+400]
	411 NotImplemented "Instruction BLR not yet implemented."
	412 Move X8, 0x32E000
	413 Move X8, [X8+1792]
	414 Move X21, X0
	415 Move X8, [X8]
	416 Move W9, [X8+224]
	417 Compare W9, 0
	418 JumpIfNotEqual {421}
	419 Move X0, X8
	420 Call 0x1C17DFC
	421 Move X8, 0x32E000
	422 Move X8, [X8+1744]
	423 Move X0, [X8]
	424 Call 0x2D0E5C8
	425 NotImplemented "Instruction CMP not yet implemented."
	426 Move W8, [X19+684]
	427 Or W1, W8, 64
	428 Move X0, X19
	429 Move X20, [X31+32]
	430 Move X19, [X31+40]
	431 Move X22, [X31+16]
	432 Move X21, [X31+24]
	433 Move X30, [X31+48]
	434 Move X23, [X31+56]
	435 Call VisualElement.set_pseudoStates, X0, X1
	436 Return 
	437 Move X8, [X20]
	438 Move X0, X20
	439 Move X9, [X8+392]
	440 Move X1, [X8+400]
	441 NotImplemented "Instruction BLR not yet implemented."
	442 Move X8, 0x379000
	443 Move X8, [X8+2712]
	444 Move X19, X0
	445 Move X8, [X8]
	446 Move W9, [X8+224]
	447 Compare W9, 0
	448 JumpIfNotEqual {451}
	449 Move X0, X8
	450 Call 0x1C17DFC
	451 Move X8, 0x37A000
	452 Move X8, [X8+2384]
	453 Move X0, [X8]
	454 Call 0x2D0E5C8
	455 NotImplemented "Instruction CMP not yet implemented."
	456 Move X9, 0x379000
	457 Move X9, [X9+2752]
	458 Move X8, [X20]
	459 Move X1, [X9]
	460 Move W10, [X8+304]
	461 Move W9, [X1+304]
	462 NotImplemented "Instruction CMP not yet implemented."
	463 Move X8, [X8+200]
	464 Add X8, X8, X9
	465 NotImplemented "Instruction LDUR not yet implemented."
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Move X1, X20
	468 Move X20, [X31+32]
	469 Move X19, [X31+40]
	470 Move X22, [X31+16]
	471 Move X21, [X31+24]
	472 Move X30, [X31+48]
	473 Move X23, [X31+56]
	474 Call VisualElement.SetTooltip, X0, X1
	475 Return 
	476 Move X20, [X31+32]
	477 Move X19, [X31+40]
	478 Move X22, [X31+16]
	479 Move X21, [X31+24]
	480 Move X30, [X31+48]
	481 Move X23, [X31+56]
	482 Return 
	483 Move X0, X20
	484 Move X1, X22
	485 Call 0x1C181E0
	486 Move X0, X20
	487 Move X1, X21
	488 Call 0x1C181E0
	489 Move X0, X20
	490 Move X1, X23
	491 Call 0x1C181E0
	492 Move X0, X20
	493 Call 0x1C181E0

Method: UnityEngine.Rect GetTooltipRect()

Disassembly:
	0x03DF1498 AND W8, W8, 0xFFFFDFFF

ISIL:
	001 Call VisualElement.get_worldBound, X0
	002 Return X0

Method: System.Void SetTooltip(UnityEngine.UIElements.TooltipEvent e)

Disassembly:
	0x03DF13BC MOV X2, X31
	0x03DF13C0 BL 0x3D9C6C8
	0x03DF13C4 MOV X0, X19
	0x03DF13C8 MOV X1, X20
	0x03DF13CC MOV X2, X31
	0x03DF13D0 BL 0x3DA1680
	0x03DF13D4 MOV X21, X31
	0x03DF13D8 MOVZ W22, 0x5
	0x03DF13DC ADRP X10, 0x302000
	0x03DF13E0 LDR X8, [X20]
	0x03DF13E4 LDR X10, [X10 + 0xE00]
	0x03DF13E8 LDRH W9, [X8 + 0x12E]
	0x03DF13EC LDR X1, [X10]
	0x03DF13F0 CBZ X9, 0x3DF1414
	0x03DF13F4 LDR X10, [X8 + 0xB0]
	0x03DF13F8 ADD X10, X10, 0x8
	0x03DF13FC LDUR X11, [X10 - 0x8]
	0x03DF1400 CMP X11, X1
	0x03DF1404 B.EQ 0x3DF1460
	0x03DF1408 SUBS X9, X9, 0x1
	0x03DF140C ADD X10, X10, 0x10
	0x03DF1410 B.NE 0x3DF13FC
	0x03DF1414 MOV X0, X20
	0x03DF1418 MOV W2, W31
	0x03DF141C BL 0x1C5C788
	0x03DF1420 B 0x3DF146C
	0x03DF1424 ADRP X20, 0x371000
	0x03DF1428 LDR X20, [X20 + 0x630]
	0x03DF142C LDR X0, [X20]
	0x03DF1430 LDR W8, [X0 + 0xE0]
	0x03DF1434 CBNZ W8, 0x3DF143C
	0x03DF1438 BL 0x1C16DFC
	0x03DF143C CBZ X21, 0x3DF1508
	0x03DF1440 LDR X8, [X20]
	0x03DF1444 MOV X0, X21
	0x03DF1448 MOV X2, X31
	0x03DF144C LDR X8, [X8 + 0xB8]
	0x03DF1450 LDR X1, [X8]
	0x03DF1454 BL 0x3CE6E70
	0x03DF1458 LDR W8, [X19 + 0x50]
	0x03DF145C B 0x3DF1494
	0x03DF1460 LDRSW X9, [X10]
	0x03DF1464 ADD X8, X8, X9, 0x4, LSL
	0x03DF1468 ADD X0, X8, 0x138
	0x03DF146C LDP X8, X1, [X0]
	0x03DF1470 MOV X0, X20
	0x03DF1474 BLR X8
	0x03DF1478 CBNZ X21, 0x3DF1510
	0x03DF147C CMP W22, 0x5
	0x03DF1480 B.EQ 0x3DF1488
	0x03DF1484 CBNZ W22, 0x3DF14F8
	0x03DF1488 LDR W8, [X19 + 0x50]
	0x03DF148C AND W8, W8, 0xFFFFF7FF
	0x03DF1490 STR W8, [X19 + 0x50]
	0x03DF1494 LDR X0, [X19 + 0x3A0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5F8000
	005 Move W8, [X20+584]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x32B000
	012 Move X0, [X0+2200]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+584], W8
	016 Compare X19, 0
	017 JumpIfEqual {68}
	018 Move X8, [X19]
	019 Move X0, X19
	020 Move X9, [X8+472]
	021 Move X1, [X8+480]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Compare X0, 0
	024 JumpIfEqual {45}
	025 Move X8, 0x32B000
	026 Move X8, [X8+2200]
	027 Move X9, [X0]
	028 Move X20, X0
	029 Move X8, [X8]
	030 Move W11, [X9+304]
	031 Move W10, [X8+304]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X9, [X9+200]
	034 Add X9, X9, X10
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X20
	038 Call VisualElement.get_tooltip, X0
	039 Move X1, X31
	040 Call String.IsNullOrEmpty, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {49}
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Return 
	049 Move X8, [X20]
	050 Move X0, X20
	051 Move X9, [X8+1832]
	052 Move X1, [X8+1840]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X0, X20
	055 Move [X19+144], S0
	056 Move [X19+152], S1
	057 Move [X19+152], S2
	058 Move [X19+160], S3
	059 Call VisualElement.get_tooltip, X0
	060 Move [X19+136], X0
	061 Move X0, X19
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X1, X31
	065 Move X30, [X31+32]
	066 Call EventBase.StopImmediatePropagation, X0
	067 Return 
	068 Call 0x1C17F20

Method: System.Void Focus()

Disassembly:
	0x03DF1530 LDR X21, [X0]
	0x03DF1534 BL 0x3EB1AE0
	0x03DF1538 MOV W22, W31
	0x03DF153C CBNZ X20, 0x3DF13DC
	0x03DF1540 B 0x3DF1478
	0x03DF1544 MOV X21, X31
	0x03DF1548 B 0x3DF1550
	0x03DF154C MOV X22, X0
	0x03DF1550 CBZ X20, 0x3DF15B4
	0x03DF1554 ADRP X10, 0x302000
	0x03DF1558 LDR X8, [X20]
	0x03DF155C LDR X10, [X10 + 0xE00]
	0x03DF1560 LDRH W9, [X8 + 0x12E]
	0x03DF1564 LDR X1, [X10]
	0x03DF1568 CBZ X9, 0x3DF158C
	0x03DF156C LDR X10, [X8 + 0xB0]
	0x03DF1570 ADD X10, X10, 0x8
	0x03DF1574 LDUR X11, [X10 - 0x8]
	0x03DF1578 CMP X11, X1
	0x03DF157C B.EQ 0x3DF159C
	0x03DF1580 SUBS X9, X9, 0x1
	0x03DF1584 ADD X10, X10, 0x10
	0x03DF1588 B.NE 0x3DF1574
	0x03DF158C MOV X0, X20
	0x03DF1590 MOV W2, W31
	0x03DF1594 BL 0x1C5C788
	0x03DF1598 B 0x3DF15A8
	0x03DF159C LDRSW X9, [X10]
	0x03DF15A0 ADD X8, X8, X9, 0x4, LSL
	0x03DF15A4 ADD X0, X8, 0x138
	0x03DF15A8 LDP X8, X1, [X0]
	0x03DF15AC MOV X0, X20
	0x03DF15B0 BLR X8

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move [X31+8], X31
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+568]
	008 Move X1, [X8+576]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {32}
	014 Move X8, [X19+888]
	015 Add X0, X31, 8
	016 Move X1, X31
	017 Move [X31+8], X8
	018 Call Hierarchy.get_parent, X0
	019 Compare X0, 0
	020 JumpIfEqual {32}
	021 Move X8, [X19+888]
	022 Add X0, X31, 8
	023 Move X1, X31
	024 Move [X31+8], X8
	025 Call Hierarchy.get_parent, X0
	026 Compare X0, 0
	027 JumpIfEqual {39}
	028 Move X8, [X0]
	029 Move X9, [X8+584]
	030 Move X1, [X8+592]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X0, X19
	033 Move X1, X31
	034 Call Focusable.Focus, X0
	035 Move X30, [X31+16]
	036 Move X19, [X31+24]
	037 Add X31, X31, 32
	038 Return 
	039 Call 0x1C17F20

Method: System.Void SetPanel(UnityEngine.UIElements.BaseVisualElementPanel p)

Disassembly:
	0x03DF15B4 CBNZ X21, 0x3DF15C0
	0x03DF15B8 MOV X0, X22
	0x03DF15BC BL 0x1D2C690
	0x03DF15C0 MOV X0, X21
	0x03DF15C4 BL 0x1C16F18
	0x03DF15C8 BL 0x1990590
	0x03DF15CC STR X30, [X31 - 0x20]!
	0x03DF15D0 STP X20, X19, [X31 + 0x10]
	0x03DF15D4 ADRP X20, 0x5F7000
	0x03DF15D8 LDRB W8, [X20 + 0x267]
	0x03DF15DC MOV X19, X0
	0x03DF15E0 TBNZ X8, 0x0, 0x3DF1604
	0x03DF15E4 ADRP X0, 0x32C000
	0x03DF15E8 LDR X0, [X0 + 0xED0]
	0x03DF15EC BL 0x1C16CF4
	0x03DF15F0 ADRP X0, 0x378000
	0x03DF15F4 LDR X0, [X0 + 0x988]
	0x03DF15F8 BL 0x1C16CF4
	0x03DF15FC MOVZ W8, 0x1
	0x03DF1600 STRB W8, [X20 + 0x267]
	0x03DF1604 ADRP X20, 0x32C000
	0x03DF1608 LDR X8, [X19 + 0x350]
	0x03DF160C LDR X20, [X20 + 0xED0]
	0x03DF1610 CBZ X8, 0x3DF1638
	0x03DF1614 LDR W8, [X8 + 0x18]
	0x03DF1618 CMP W8, 0x1
	0x03DF161C B.LT 0x3DF1638
	0x03DF1620 MOV X0, X19
	0x03DF1624 BL 0x3DF32FC
	0x03DF1628 CBZ X0, 0x3DF1638
	0x03DF162C LDR X1, [X19 + 0x350]
	0x03DF1630 MOV X2, X31
	0x03DF1634 BL 0x3D1A0E8
	0x03DF1638 LDR X8, [X19]
	0x03DF163C LDR X1, [X20]
	0x03DF1640 LDRH W9, [X8 + 0x12E]
	0x03DF1644 CBZ X9, 0x3DF1668
	0x03DF1648 LDR X10, [X8 + 0xB0]
	0x03DF164C ADD X10, X10, 0x8
	0x03DF1650 LDUR X11, [X10 - 0x8]
	0x03DF1654 CMP X11, X1
	0x03DF1658 B.EQ 0x3DF1678
	0x03DF165C SUBS X9, X9, 0x1
	0x03DF1660 ADD X10, X10, 0x10
	0x03DF1664 B.NE 0x3DF1650
	0x03DF1668 MOVZ W2, 0x13
	0x03DF166C MOV X0, X19
	0x03DF1670 BL 0x1C5C788
	0x03DF1674 B 0x3DF1688
	0x03DF1678 LDR W9, [X10]
	0x03DF167C ADD W9, W9, 0x13
	0x03DF1680 ADD X8, X8, W9, 0x4, SXTW
	0x03DF1684 ADD X0, X8, 0x138
	0x03DF1688 LDP X2, X1, [X0]
	0x03DF168C MOV X0, X19
	0x03DF1690 LDP X20, X19, [X31 + 0x10]
	0x03DF1694 LDR X30, [X31], #0x20
	0x03DF1698 BR X2
	0x03DF169C LDR W8, [X0 + 0x370]
	0x03DF16A0 LDR W9, [X0 + 0x374]
	0x03DF16A4 LDR W10, [X0 + 0x368]
	0x03DF16A8 ORR W8, W9, W8, 0x0
	0x03DF16AC ORR W8, W8, W10, 0x0
	0x03DF16B0 LSRV W8, W8, W1
	0x03DF16B4 AND W0, W8, 0x1
	0x03DF16B8 RET
	0x03DF16BC STR X30, [X31 - 0x20]!
	0x03DF16C0 STP X20, X19, [X31 + 0x10]
	0x03DF16C4 ADRP X20, 0x5F7000
	0x03DF16C8 LDRB W8, [X20 + 0x268]
	0x03DF16CC MOV X19, X0
	0x03DF16D0 TBNZ X8, 0x0, 0x3DF16E8
	0x03DF16D4 ADRP X0, 0x378000
	0x03DF16D8 LDR X0, [X0 + 0x988]
	0x03DF16DC BL 0x1C16CF4
	0x03DF16E0 MOVZ W8, 0x1
	0x03DF16E4 STRB W8, [X20 + 0x268]
	0x03DF16E8 LDR X8, [X19 + 0x350]
	0x03DF16EC CBZ X8, 0x3DF171C
	0x03DF16F0 LDR W8, [X8 + 0x18]
	0x03DF16F4 CMP W8, 0x1
	0x03DF16F8 B.LT 0x3DF171C
	0x03DF16FC MOV X0, X19
	0x03DF1700 BL 0x3DF32FC
	0x03DF1704 CBZ X0, 0x3DF171C
	0x03DF1708 LDR X1, [X19 + 0x350]
	0x03DF170C LDP X20, X19, [X31 + 0x10]
	0x03DF1710 MOV X2, X31
	0x03DF1714 LDR X30, [X31], #0x20
	0x03DF1718 B 0x3D1A2C4
	0x03DF171C LDP X20, X19, [X31 + 0x10]
	0x03DF1720 LDR X30, [X31], #0x20
	0x03DF1724 RET
	0x03DF1728 LDR X0, [X0 + 0x3A0]
	0x03DF172C CBZ X0, 0x3DF173C
	0x03DF1730 MOVZ W2, 0x1
	0x03DF1734 MOV X3, X31
	0x03DF1738 B 0x3DBC070
	0x03DF173C RET
	0x03DF1740 LDR X0, [X0 + 0x3A0]
	0x03DF1744 CBZ X0, 0x3DF1750
	0x03DF1748 MOV X3, X31
	0x03DF174C B 0x3DBC070
	0x03DF1750 RET
	0x03DF1754 MOV X8, X0
	0x03DF1758 LDR X0, [X0 + 0x3A0]
	0x03DF175C CBZ X0, 0x3DF1770
	0x03DF1760 MOV W2, W1
	0x03DF1764 MOV X1, X8
	0x03DF1768 MOV X3, X31
	0x03DF176C B 0x3DBC83C
	0x03DF1770 RET
	0x03DF1774 SUB X31, X31, 0x60
	0x03DF1778 STR X30, [X31 + 0x20]
	0x03DF177C STP X24, X23, [X31 + 0x30]
	0x03DF1780 STP X22, X21, [X31 + 0x40]
	0x03DF1784 STP X20, X19, [X31 + 0x50]
	0x03DF1788 ADRP X21, 0x5F7000
	0x03DF178C LDRB W8, [X21 + 0x24C]
	0x03DF1790 MOV W20, W1
	0x03DF1794 MOV X19, X0
	0x03DF1798 TBNZ X8, 0x0, 0x3DF17E0
	0x03DF179C ADRP X0, 0x32B000
	0x03DF17A0 LDR X0, [X0 + 0xE80]
	0x03DF17A4 BL 0x1C16CF4
	0x03DF17A8 ADRP X0, 0x378000
	0x03DF17AC LDR X0, [X0 + 0x960]
	0x03DF17B0 BL 0x1C16CF4
	0x03DF17B4 ADRP X0, 0x378000
	0x03DF17B8 LDR X0, [X0 + 0x968]
	0x03DF17BC BL 0x1C16CF4
	0x03DF17C0 ADRP X0, 0x378000
	0x03DF17C4 LDR X0, [X0 + 0x970]
	0x03DF17C8 BL 0x1C16CF4
	0x03DF17CC ADRP X0, 0x32A000
	0x03DF17D0 LDR X0, [X0 + 0x898]
	0x03DF17D4 BL 0x1C16CF4
	0x03DF17D8 MOVZ W8, 0x1
	0x03DF17DC STRB W8, [X21 + 0x24C]
	0x03DF17E0 STP X31, X31, [X31 + 0x10]
	0x03DF17E4 STR X31, [X31 + 0x28]
	0x03DF17E8 LDR W22, [X19 + 0x2AC]
	0x03DF17EC TBZ X20, 0x0, 0x3DF183C
	0x03DF17F0 MOV X0, X19
	0x03DF17F4 BL 0x3DF1AF4
	0x03DF17F8 TBZ X0, 0x0, 0x3DF187C
	0x03DF17FC ADRP X21, 0x32A000
	0x03DF1800 LDR X21, [X21 + 0x898]
	0x03DF1804 LDRB W20, [X19 + 0x32C]
	0x03DF1808 LDR X0, [X21]
	0x03DF180C LDR W8, [X0 + 0xE0]
	0x03DF1810 CBNZ W8, 0x3DF181C
	0x03DF1814 BL 0x1C16DFC
	0x03DF1818 LDR X0, [X21]
	0x03DF181C LDR X8, [X0 + 0xB8]
	0x03DF1820 MOV X0, X19
	0x03DF1824 LDR X1, [X8 + 0x18]
	0x03DF1828 CBZ W20, 0x3DF1874
	0x03DF182C BL 0x3DF1B54
	0x03DF1830 LDR W8, [X19 + 0x2AC]
	0x03DF1834 AND W1, W8, 0xFFFFFFDF
	0x03DF1838 B 0x3DF1A4C
	0x03DF183C ADRP X20, 0x32A000
	0x03DF1840 LDR X20, [X20 + 0x898]
	0x03DF1844 LDR X0, [X20]
	0x03DF1848 LDR W8, [X0 + 0xE0]
	0x03DF184C CBNZ W8, 0x3DF1858
	0x03DF1850 BL 0x1C16DFC
	0x03DF1854 LDR X0, [X20]
	0x03DF1858 LDR X8, [X0 + 0xB8]
	0x03DF185C MOV X0, X19
	0x03DF1860 LDR X20, [X8 + 0x18]
	0x03DF1864 BL 0x3DF1AF4
	0x03DF1868 TBZ X0, 0x0, 0x3DF18A8
	0x03DF186C MOV X0, X19
	0x03DF1870 MOV X1, X20
	0x03DF1874 BL 0x3DF1C70
	0x03DF1878 B 0x3DF18B4
	0x03DF187C ADRP X20, 0x32A000
	0x03DF1880 LDR X20, [X20 + 0x898]
	0x03DF1884 LDR X0, [X20]
	0x03DF1888 LDR W8, [X0 + 0xE0]
	0x03DF188C CBNZ W8, 0x3DF1898
	0x03DF1890 BL 0x1C16DFC
	0x03DF1894 LDR X0, [X20]
	0x03DF1898 LDR X8, [X0 + 0xB8]
	0x03DF189C MOV X0, X19
	0x03DF18A0 LDR X1, [X8 + 0x18]
	0x03DF18A4 B 0x3DF18B0
	0x03DF18A8 MOV X0, X19
	0x03DF18AC MOV X1, X20
	0x03DF18B0 BL 0x3DF1B54
	0x03DF18B4 LDR X8, [X19]
	0x03DF18B8 MOV X0, X19
	0x03DF18BC LDR X9, [X8 + 0x228]
	0x03DF18C0 LDR X1, [X8 + 0x230]
	0x03DF18C4 BLR X9
	0x03DF18C8 CBZ X0, 0x3DF1A44
	0x03DF18CC LDR X8, [X19]
	0x03DF18D0 MOV X0, X19
	0x03DF18D4 LDR X9, [X8 + 0x228]
	0x03DF18D8 LDR X1, [X8 + 0x230]
	0x03DF18DC BLR X9
	0x03DF18E0 CBZ X0, 0x3DF1A88
	0x03DF18E4 MOV X1, X19
	0x03DF18E8 MOV X2, X31
	0x03DF18EC BL 0x3DAFDF0
	0x03DF18F0 TBZ X0, 0x0, 0x3DF1A44
	0x03DF18F4 STP X31, X31, [X31 + 0x10]
	0x03DF18F8 LDR X20, [X19 + 0x3A0]
	0x03DF18FC CBZ X20, 0x3DF19B0
	0x03DF1900 ADRP X21, 0x32B000
	0x03DF1904 LDR X8, [X20]
	0x03DF1908 LDR X21, [X21 + 0xE80]
	0x03DF190C LDRH W9, [X8 + 0x12E]
	0x03DF1910 LDR X1, [X21]
	0x03DF1914 CBZ X9, 0x3DF1938
	0x03DF1918 LDR X10, [X8 + 0xB0]
	0x03DF191C ADD X10, X10, 0x8
	0x03DF1920 LDUR X11, [X10 - 0x8]
	0x03DF1924 CMP X11, X1
	0x03DF1928 B.EQ 0x3DF1948
	0x03DF192C SUBS X9, X9, 0x1
	0x03DF1930 ADD X10, X10, 0x10
	0x03DF1934 B.NE 0x3DF1920
	0x03DF1938 MOVZ W2, 0x1
	0x03DF193C MOV X0, X20
	0x03DF1940 BL 0x1C5C788
	0x03DF1944 B 0x3DF1958
	0x03DF1948 LDR W9, [X10]
	0x03DF194C ADD W9, W9, 0x1
	0x03DF1950 ADD X8, X8, W9, 0x4, SXTW
	0x03DF1954 ADD X0, X8, 0x138
	0x03DF1958 LDP X8, X1, [X0]
	0x03DF195C MOV X0, X20
	0x03DF1960 BLR X8
	0x03DF1964 CBZ X0, 0x3DF19B0
	0x03DF1968 LDR X20, [X19 + 0x3A0]
	0x03DF196C CBZ X20, 0x3DF1A88
	0x03DF1970 LDR X8, [X20]
	0x03DF1974 LDR X1, [X21]
	0x03DF1978 LDRH W9, [X8 + 0x12E]
	0x03DF197C CBZ X9, 0x3DF19A0
	0x03DF1980 LDR X10, [X8 + 0xB0]
	0x03DF1984 ADD X10, X10, 0x8
	0x03DF1988 LDUR X11, [X10 - 0x8]
	0x03DF198C CMP X11, X1
	0x03DF1990 B.EQ 0x3DF19BC
	0x03DF1994 SUBS X9, X9, 0x1
	0x03DF1998 ADD X10, X10, 0x10
	0x03DF199C B.NE 0x3DF1988
	0x03DF19A0 MOVZ W2, 0x1
	0x03DF19A4 MOV X0, X20
	0x03DF19A8 BL 0x1C5C788
	0x03DF19AC B 0x3DF19CC
	0x03DF19B0 MOV X23, X31
	0x03DF19B4 MOV W24, W31
	0x03DF19B8 B 0x3DF1A0C
	0x03DF19BC LDR W9, [X10]
	0x03DF19C0 ADD W9, W9, 0x1
	0x03DF19C4 ADD X8, X8, W9, 0x4, SXTW
	0x03DF19C8 ADD X0, X8, 0x138
	0x03DF19CC LDP X8, X1, [X0]
	0x03DF19D0 MOV X0, X20
	0x03DF19D4 BLR X8
	0x03DF19D8 MOV X1, X0
	0x03DF19DC ADD X0, X31, 0x8
	0x03DF19E0 MOV X2, X31
	0x03DF19E4 STR X31, [X31 + 0x8]
	0x03DF19E8 BL 0x3D9B238
	0x03DF19EC ADRP X8, 0x378000
	0x03DF19F0 LDR X1, [X31 + 0x8]
	0x03DF19F4 LDR X8, [X8 + 0x968]
	0x03DF19F8 ADD X0, X31, 0x10
	0x03DF19FC LDR X2, [X8]
	0x03DF1A00 BL 0x2431BAC
	0x03DF1A04 LDRB W24, [X31 + 0x10]
	0x03DF1A08 LDR X23, [X31 + 0x18]
	0x03DF1A0C MOV X0, X19
	0x03DF1A10 MOV X1, X31
	0x03DF1A14 BL 0x3DAF104
	0x03DF1A18 MOV X20, X31
	0x03DF1A1C MOVZ W21, 0xF
	0x03DF1A20 CBZ W24, 0x3DF1A34
	0x03DF1A24 ADD X0, X31, 0x28
	0x03DF1A28 MOV X1, X31
	0x03DF1A2C STR X23, [X31 + 0x28]
	0x03DF1A30 BL 0x3D9B2B0
	0x03DF1A34 CBNZ X20, 0x3DF1A8C
	0x03DF1A38 CMP W21, 0xF
	0x03DF1A3C B.EQ 0x3DF1A44
	0x03DF1A40 CBNZ W21, 0x3DF1A6C
	0x03DF1A44 LDR W8, [X19 + 0x2AC]
	0x03DF1A48 ORR W1, W8, 0x20
	0x03DF1A4C MOV X0, X19
	0x03DF1A50 BL 0x3DEEF90
	0x03DF1A54 LDRB W8, [X19 + 0x2AC]
	0x03DF1A58 ANDS W31, W22, 0x20
	0x03DF1A5C CSET W9, EQ
	0x03DF1A60 ANDS W31, W8, 0x20
	0x03DF1A64 CSET W8, EQ
	0x03DF1A68 EOR W8, W9, W8, 0x0
	0x03DF1A6C LDP X20, X19, [X31 + 0x50]
	0x03DF1A70 LDP X22, X21, [X31 + 0x40]
	0x03DF1A74 LDP X24, X23, [X31 + 0x30]
	0x03DF1A78 LDR X30, [X31 + 0x20]
	0x03DF1A7C AND W0, W8, 0x1
	0x03DF1A80 ADD X31, X31, 0x60
	0x03DF1A84 RET
	0x03DF1A88 BL 0x1C16F20
	0x03DF1A8C MOV X0, X20
	0x03DF1A90 BL 0x1C16F18
	0x03DF1A94 CMP W1, 0x1
	0x03DF1A98 MOV X21, X0
	0x03DF1A9C B.NE 0x3DF1ABC
	0x03DF1AA0 MOV X0, X21
	0x03DF1AA4 BL 0x3EB1AD0
	0x03DF1AA8 LDR X20, [X0]
	0x03DF1AAC BL 0x3EB1AE0
	0x03DF1AB0 MOV W21, W31
	0x03DF1AB4 CBNZ W24, 0x3DF1A24
	0x03DF1AB8 B 0x3DF1A34
	0x03DF1ABC MOV X20, X31
	0x03DF1AC0 B 0x3DF1AC8
	0x03DF1AC4 MOV X21, X0
	0x03DF1AC8 CBZ W24, 0x3DF1ADC
	0x03DF1ACC STR X23, [X31 + 0x28]
	0x03DF1AD0 ADD X0, X31, 0x28
	0x03DF1AD4 MOV X1, X31
	0x03DF1AD8 BL 0x3D9B2B0
	0x03DF1ADC CBNZ X20, 0x3DF1AE8
	0x03DF1AE0 MOV X0, X21
	0x03DF1AE4 BL 0x1D2C690
	0x03DF1AE8 MOV X0, X20
	0x03DF1AEC BL 0x1C16F18
	0x03DF1AF0 BL 0x1990590
	0x03DF1AF4 SUB X31, X31, 0x20
	0x03DF1AF8 STP X30, X19, [X31 + 0x10]
	0x03DF1AFC LDR X8, [X0 + 0x378]
	0x03DF1B00 MOV X19, X0
	0x03DF1B04 ADD X0, X31, 0x8
	0x03DF1B08 MOV X1, X31
	0x03DF1B0C STR X8, [X31 + 0x8]
	0x03DF1B10 BL 0x3DF88DC
	0x03DF1B14 CBZ X0, 0x3DF1B40
	0x03DF1B18 LDR X8, [X19 + 0x378]
	0x03DF1B1C ADD X0, X31, 0x8
	0x03DF1B20 MOV X1, X31
	0x03DF1B24 STR X8, [X31 + 0x8]
	0x03DF1B28 BL 0x3DF88DC
	0x03DF1B2C CBZ X0, 0x3DF1B50
	0x03DF1B30 LDRB W8, [X0 + 0x2AC]
	0x03DF1B34 ANDS W31, W8, 0x20
	0x03DF1B38 CSET W0, EQ
	0x03DF1B3C B 0x3DF1B44
	0x03DF1B40 MOVZ W0, 0x1
	0x03DF1B44 LDP X30, X19, [X31 + 0x10]
	0x03DF1B48 ADD X31, X31, 0x20
	0x03DF1B4C RET
	0x03DF1B50 BL 0x1C16F20
	0x03DF1B54 STP X30, X21, [X31 - 0x20]!
	0x03DF1B58 STP X20, X19, [X31 + 0x10]
	0x03DF1B5C ADRP X21, 0x5F7000
	0x03DF1B60 LDRB W8, [X21 + 0x25B]
	0x03DF1B64 MOV X20, X1
	0x03DF1B68 MOV X19, X0
	0x03DF1B6C TBNZ X8, 0x0, 0x3DF1BB4
	0x03DF1B70 ADRP X0, 0x361000
	0x03DF1B74 LDR X0, [X0 + 0xD88]
	0x03DF1B78 BL 0x1C16CF4
	0x03DF1B7C ADRP X0, 0x303000
	0x03DF1B80 LDR X0, [X0 + 0x1C8]
	0x03DF1B84 BL 0x1C16CF4
	0x03DF1B88 ADRP X0, 0x378000
	0x03DF1B8C LDR X0, [X0 + 0x990]
	0x03DF1B90 BL 0x1C16CF4
	0x03DF1B94 ADRP X0, 0x378000
	0x03DF1B98 LDR X0, [X0 + 0x910]
	0x03DF1B9C BL 0x1C16CF4
	0x03DF1BA0 ADRP X0, 0x32A000
	0x03DF1BA4 LDR X0, [X0 + 0x898]
	0x03DF1BA8 BL 0x1C16CF4
	0x03DF1BAC MOVZ W8, 0x1
	0x03DF1BB0 STRB W8, [X21 + 0x25B]
	0x03DF1BB4 LDR X0, [X19 + 0x40]
	0x03DF1BB8 CBZ X0, 0x3DF1C6C
	0x03DF1BBC ADRP X8, 0x361000
	0x03DF1BC0 LDR X8, [X8 + 0xD88]
	0x03DF1BC4 MOV X1, X20
	0x03DF1BC8 LDR X2, [X8]
	0x03DF1BCC BL 0x301D7A8
	0x03DF1BD0 TBZ X0, 0x0, 0x3DF1C60
	0x03DF1BD4 LDR X20, [X19 + 0x40]
	0x03DF1BD8 CBZ X20, 0x3DF1C6C
	0x03DF1BDC LDR W8, [X20 + 0x18]
	0x03DF1BE0 CBNZ W8, 0x3DF1C38
	0x03DF1BE4 ADRP X8, 0x378000
	0x03DF1BE8 LDR X8, [X8 + 0x910]
	0x03DF1BEC LDR X0, [X8]
	0x03DF1BF0 LDR W8, [X0 + 0xE0]
	0x03DF1BF4 CBNZ W8, 0x3DF1BFC
	0x03DF1BF8 BL 0x1C16DFC
	0x03DF1BFC ADRP X8, 0x378000
	0x03DF1C00 LDR X8, [X8 + 0x990]
	0x03DF1C04 MOV X0, X20
	0x03DF1C08 LDR X1, [X8]
	0x03DF1C0C BL 0x2491D90
	0x03DF1C10 ADRP X20, 0x32A000
	0x03DF1C14 LDR X20, [X20 + 0x898]
	0x03DF1C18 LDR X0, [X20]
	0x03DF1C1C LDR W8, [X0 + 0xE0]
	0x03DF1C20 CBNZ W8, 0x3DF1C2C
	0x03DF1C24 BL 0x1C16DFC
	0x03DF1C28 LDR X0, [X20]
	0x03DF1C2C LDR X8, [X0 + 0xB8]
	0x03DF1C30 LDR X8, [X8 + 0x8]
	0x03DF1C34 STR X8, [X19 + 0x40]
	0x03DF1C38 LDR X0, [X19 + 0x3A0]
	0x03DF1C3C CBZ X0, 0x3DF1C60
	0x03DF1C40 LDR X8, [X0]
	0x03DF1C44 MOV X1, X19
	0x03DF1C48 LDP X20, X19, [X31 + 0x10]
	0x03DF1C4C MOVZ W2, 0x10
	0x03DF1C50 LDR X4, [X8 + 0x338]
	0x03DF1C54 LDR X3, [X8 + 0x340]
	0x03DF1C58 LDP X30, X21, [X31], #0x20
	0x03DF1C5C BR X4
	0x03DF1C60 LDP X20, X19, [X31 + 0x10]
	0x03DF1C64 LDP X30, X21, [X31], #0x20
	0x03DF1C68 RET
	0x03DF1C6C BL 0x1C16F20
	0x03DF1C70 STR X30, [X31 - 0x30]!
	0x03DF1C74 STP X22, X21, [X31 + 0x10]
	0x03DF1C78 STP X20, X19, [X31 + 0x20]
	0x03DF1C7C ADRP X21, 0x5F7000
	0x03DF1C80 LDRB W8, [X21 + 0x25A]
	0x03DF1C84 MOV X20, X1
	0x03DF1C88 MOV X19, X0
	0x03DF1C8C TBNZ X8, 0x0, 0x3DF1CF8
	0x03DF1C90 ADRP X0, 0x303000
	0x03DF1C94 LDR X0, [X0 + 0x1B8]
	0x03DF1C98 BL 0x1C16CF4
	0x03DF1C9C ADRP X0, 0x30B000
	0x03DF1CA0 LDR X0, [X0 + 0x110]
	0x03DF1CA4 BL 0x1C16CF4
	0x03DF1CA8 ADRP X0, 0x378000
	0x03DF1CAC LDR X0, [X0 + 0x998]
	0x03DF1CB0 BL 0x1C16CF4
	0x03DF1CB4 ADRP X0, 0x303000
	0x03DF1CB8 LDR X0, [X0 + 0x1C8]
	0x03DF1CBC BL 0x1C16CF4
	0x03DF1CC0 ADRP X0, 0x378000
	0x03DF1CC4 LDR X0, [X0 + 0x9A0]
	0x03DF1CC8 BL 0x1C16CF4
	0x03DF1CCC ADRP X0, 0x378000
	0x03DF1CD0 LDR X0, [X0 + 0x908]
	0x03DF1CD4 BL 0x1C16CF4
	0x03DF1CD8 ADRP X0, 0x378000
	0x03DF1CDC LDR X0, [X0 + 0x910]
	0x03DF1CE0 BL 0x1C16CF4
	0x03DF1CE4 ADRP X0, 0x32A000
	0x03DF1CE8 LDR X0, [X0 + 0x898]
	0x03DF1CEC BL 0x1C16CF4
	0x03DF1CF0 MOVZ W8, 0x1
	0x03DF1CF4 STRB W8, [X21 + 0x25A]
	0x03DF1CF8 MOV X0, X20
	0x03DF1CFC MOV X1, X31
	0x03DF1D00 BL 0x32277A8
	0x03DF1D04 TBNZ X0, 0x0, 0x3DF1E6C
	0x03DF1D08 ADRP X22, 0x32A000
	0x03DF1D0C LDR X22, [X22 + 0x898]
	0x03DF1D10 LDR X21, [X19 + 0x40]
	0x03DF1D14 LDR X0, [X22]
	0x03DF1D18 LDR W8, [X0 + 0xE0]
	0x03DF1D1C CBNZ W8, 0x3DF1D28
	0x03DF1D20 BL 0x1C16DFC
	0x03DF1D24 LDR X0, [X22]
	0x03DF1D28 LDR X8, [X0 + 0xB8]
	0x03DF1D2C LDR X8, [X8 + 0x8]
	0x03DF1D30 CMP X21, X8
	0x03DF1D34 B.EQ 0x3DF1DB0
	0x03DF1D38 LDR X0, [X19 + 0x40]
	0x03DF1D3C CBZ X0, 0x3DF1E7C
	0x03DF1D40 ADRP X8, 0x30B000
	0x03DF1D44 LDR X8, [X8 + 0x110]
	0x03DF1D48 MOV X1, X20
	0x03DF1D4C LDR X2, [X8]
	0x03DF1D50 BL 0x301C318
	0x03DF1D54 TBNZ X0, 0x0, 0x3DF1E6C
	0x03DF1D58 LDR X0, [X19 + 0x40]
	0x03DF1D5C CBZ X0, 0x3DF1E7C
	0x03DF1D60 ADRP X22, 0x378000
	0x03DF1D64 LDR X22, [X22 + 0x998]
	0x03DF1D68 LDR X1, [X22]
	0x03DF1D6C BL 0x301BB2C
	0x03DF1D70 LDR X21, [X19 + 0x40]
	0x03DF1D74 CBZ X21, 0x3DF1E7C
	0x03DF1D78 LDR W8, [X21 + 0x18]
	0x03DF1D7C CMP W0, W8
	0x03DF1D80 B.NE 0x3DF1DE4
	0x03DF1D84 LDR X1, [X22]
	0x03DF1D88 MOV X0, X21
	0x03DF1D8C BL 0x301BB2C
	0x03DF1D90 ADRP X8, 0x378000
	0x03DF1D94 LDR X8, [X8 + 0x9A0]
	0x03DF1D98 ADD W1, W0, 0x1
	0x03DF1D9C MOV X0, X21
	0x03DF1DA0 LDR X2, [X8]
	0x03DF1DA4 BL 0x301BB48
	0x03DF1DA8 LDR X21, [X19 + 0x40]
	0x03DF1DAC B 0x3DF1DE0
	0x03DF1DB0 ADRP X8, 0x378000
	0x03DF1DB4 LDR X8, [X8 + 0x910]
	0x03DF1DB8 LDR X0, [X8]
	0x03DF1DBC LDR W8, [X0 + 0xE0]
	0x03DF1DC0 CBNZ W8, 0x3DF1DC8
	0x03DF1DC4 BL 0x1C16DFC
	0x03DF1DC8 ADRP X8, 0x378000
	0x03DF1DCC LDR X8, [X8 + 0x908]
	0x03DF1DD0 LDR X0, [X8]
	0x03DF1DD4 BL 0x2491CF8
	0x03DF1DD8 MOV X21, X0
	0x03DF1DDC STR X0, [X19 + 0x40]
	0x03DF1DE0 CBZ X21, 0x3DF1E7C
	0x03DF1DE4 ADRP X9, 0x303000
	0x03DF1DE8 LDR X9, [X9 + 0x1B8]
	0x03DF1DEC LDR W10, [X21 + 0x1C]
	0x03DF1DF0 LDR X8, [X21 + 0x10]
	0x03DF1DF4 LDR X9, [X9]
	0x03DF1DF8 ADD W10, W10, 0x1
	0x03DF1DFC STR W10, [X21 + 0x1C]
	0x03DF1E00 CBZ X8, 0x3DF1E7C
	0x03DF1E04 LDRSW X10, [X21 + 0x18]
	0x03DF1E08 LDR W11, [X8 + 0x18]
	0x03DF1E0C CMP W10, W11
	0x03DF1E10 B.CS 0x3DF1E28
	0x03DF1E14 ADD W9, W10, 0x1
	0x03DF1E18 ADD X8, X8, X10, 0x3, LSL
	0x03DF1E1C STR W9, [X21 + 0x18]
	0x03DF1E20 STR X20, [X8 + 0x20]
	0x03DF1E24 B 0x3DF1E40
	0x03DF1E28 LDR X8, [X9 + 0x20]
	0x03DF1E2C MOV X0, X21
	0x03DF1E30 MOV X1, X20
	0x03DF1E34 LDR X8, [X8 + 0xC0]
	0x03DF1E38 LDR X2, [X8 + 0x70]
	0x03DF1E3C BL 0x301BF90
	0x03DF1E40 LDR X0, [X19 + 0x3A0]
	0x03DF1E44 CBZ X0, 0x3DF1E6C
	0x03DF1E48 LDR X8, [X0]
	0x03DF1E4C MOV X1, X19
	0x03DF1E50 LDP X20, X19, [X31 + 0x20]
	0x03DF1E54 LDP X22, X21, [X31 + 0x10]
	0x03DF1E58 LDR X4, [X8 + 0x338]
	0x03DF1E5C LDR X3, [X8 + 0x340]
	0x03DF1E60 MOVZ W2, 0x10
	0x03DF1E64 LDR X30, [X31], #0x30
	0x03DF1E68 BR X4
	0x03DF1E6C LDP X20, X19, [X31 + 0x20]
	0x03DF1E70 LDP X22, X21, [X31 + 0x10]
	0x03DF1E74 LDR X30, [X31], #0x30
	0x03DF1E78 RET
	0x03DF1E7C BL 0x1C16F20
	0x03DF1E80 TBZ X2, 0x0, 0x3DF1E88
	0x03DF1E84 B 0x3DF1C70
	0x03DF1E88 B 0x3DF1B54
	0x03DF1E8C LDRB W0, [X0 + 0x32C]
	0x03DF1E90 RET
	0x03DF1E94 AND W8, W1, 0x1
	0x03DF1E98 STRB W8, [X0 + 0x32C]
	0x03DF1E9C RET
	0x03DF1EA0 STP X30, X23, [X31 - 0x30]!
	0x03DF1EA4 STP X22, X21, [X31 + 0x10]
	0x03DF1EA8 STP X20, X19, [X31 + 0x20]
	0x03DF1EAC ADRP X21, 0x5F7000
	0x03DF1EB0 LDRB W8, [X21 + 0x24D]
	0x03DF1EB4 MOV W19, W1
	0x03DF1EB8 MOV X20, X0
	0x03DF1EBC TBNZ X8, 0x0, 0x3DF1EE0
	0x03DF1EC0 ADRP X0, 0x32B000
	0x03DF1EC4 LDR X0, [X0 + 0xE8]
	0x03DF1EC8 BL 0x1C16CF4
	0x03DF1ECC ADRP X0, 0x32B000
	0x03DF1ED0 LDR X0, [X0 + 0xF0]
	0x03DF1ED4 BL 0x1C16CF4
	0x03DF1ED8 MOVZ W8, 0x1
	0x03DF1EDC STRB W8, [X21 + 0x24D]
	0x03DF1EE0 AND W1, W19, 0x1
	0x03DF1EE4 MOV X0, X20
	0x03DF1EE8 BL 0x3DF1774
	0x03DF1EEC TBZ X0, 0x0, 0x3DF1F40
	0x03DF1EF0 LDR X0, [X20 + 0x398]
	0x03DF1EF4 CBZ X0, 0x3DF1F3C
	0x03DF1EF8 LDR W22, [X0 + 0x18]
	0x03DF1EFC CMP W22, 0x1
	0x03DF1F00 B.LT 0x3DF1F40
	0x03DF1F04 ADRP X23, 0x32B000
	0x03DF1F08 LDR X23, [X23 + 0xF0]
	0x03DF1F0C MOV W21, W31
	0x03DF1F10 LDR X2, [X23]
	0x03DF1F14 MOV W1, W21
	0x03DF1F18 BL 0x301BCCC
	0x03DF1F1C CBZ X0, 0x3DF1F3C
	0x03DF1F20 AND W1, W19, 0x1
	0x03DF1F24 BL 0x3DF1EA0
	0x03DF1F28 ADD W21, W21, 0x1
	0x03DF1F2C CMP W22, W21
	0x03DF1F30 B.EQ 0x3DF1F40
	0x03DF1F34 LDR X0, [X20 + 0x398]
	0x03DF1F38 CBNZ X0, 0x3DF1F10
	0x03DF1F3C BL 0x1C16F20
	0x03DF1F40 LDP X20, X19, [X31 + 0x20]
	0x03DF1F44 LDP X22, X21, [X31 + 0x10]
	0x03DF1F48 LDP X30, X23, [X31], #0x30
	0x03DF1F4C RET
	0x03DF1F50 LDR W0, [X0 + 0x330]
	0x03DF1F54 RET
	0x03DF1F58 LDR W0, [X0 + 0x334]
	0x03DF1F5C RET
	0x03DF1F60 STR X30, [X31 - 0x30]!
	0x03DF1F64 STP X22, X21, [X31 + 0x10]
	0x03DF1F68 STP X20, X19, [X31 + 0x20]
	0x03DF1F6C ADRP X21, 0x5F7000
	0x03DF1F70 LDRB W8, [X21 + 0x24E]
	0x03DF1F74 MOV W20, W1
	0x03DF1F78 MOV X19, X0
	0x03DF1F7C TBNZ X8, 0x0, 0x3DF1FA0
	0x03DF1F80 ADRP X0, 0x32B000
	0x03DF1F84 LDR X0, [X0 + 0xE8]
	0x03DF1F88 BL 0x1C16CF4
	0x03DF1F8C ADRP X0, 0x32B000
	0x03DF1F90 LDR X0, [X0 + 0xF0]
	0x03DF1F94 BL 0x1C16CF4
	0x03DF1F98 MOVZ W8, 0x1
	0x03DF1F9C STRB W8, [X21 + 0x24E]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X19, 0x5F8000
	015 Move W8, [X19+585]
	016 Move X20, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {57}
	022 Move X0, 0x377000
	023 Move X0, [X0+3472]
	024 Call 0x1C17CF4
	025 Move X0, 0x377000
	026 Move X0, [X0+3480]
	027 Call 0x1C17CF4
	028 Move X0, 0x377000
	029 Move X0, [X0+3488]
	030 Call 0x1C17CF4
	031 Move X0, 0x32C000
	032 Move X0, [X0+3712]
	033 Call 0x1C17CF4
	034 Move X0, 0x32C000
	035 Move X0, [X0+224]
	036 Call 0x1C17CF4
	037 Move X0, 0x373000
	038 Move X0, [X0+3800]
	039 Call 0x1C17CF4
	040 Move X0, 0x377000
	041 Move X0, [X0+3496]
	042 Call 0x1C17CF4
	043 Move X0, 0x379000
	044 Move X0, [X0+2400]
	045 Call 0x1C17CF4
	046 Move X0, 0x379000
	047 Move X0, [X0+2408]
	048 Call 0x1C17CF4
	049 Move X0, 0x379000
	050 Move X0, [X0+2416]
	051 Call 0x1C17CF4
	052 Move X0, 0x32C000
	053 Move X0, [X0+248]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X19+585], W8
	057 Move [X31+176], X31
	058 Move [X31+184], X31
	059 Move [X31+160], X31
	060 Move [X31+168], X31
	061 Move [X31+128], X31
	062 Move [X31+136], X31
	063 Move [X31+144], X31
	064 Move [X31+96], X31
	065 Move [X31+104], X31
	066 Move [X31+112], X31
	067 Move [X31+64], X31
	068 Move [X31+72], X31
	069 Move [X31+80], X31
	070 Move [X31+56], X31
	071 Move X8, [X21+928]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X8, 0x32C000
	074 Move X8, [X8+248]
	075 Move X0, [X8]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move W0, W31
	081 Move X1, X31
	082 Call VisualElementListPool.Get, X0
	083 Move X19, X0
	084 Compare X0, 0
	085 JumpIfEqual {495}
	086 Move X26, 0x32C000
	087 Move X26, [X26+224]
	088 Move W10, [X19+28]
	089 Move X8, [X19+16]
	090 Move X9, [X26]
	091 Add W10, W10, 1
	092 Move [X19+28], W10
	093 Compare X8, 0
	094 JumpIfEqual {498}
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Move W11, [X8+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Add W9, W10, 1
	099 Add X8, X8, X10
	100 Move [X19+24], W9
	101 Move [X8+32], X21
	102 Move X8, [X9+32]
	103 Move X8, [X8+192]
	104 Move X2, [X8+112]
	105 Move X0, X19
	106 Move X1, X21
	107 Call List`1<Object>.AddWithResize, X0, X1
	108 Move X0, X21
	109 Move X1, X19
	110 Call VisualElement.GatherAllChildren, X0, X1
	111 Move [X31+176], X31
	112 Move [X31+184], X31
	113 Compare X20, 0
	114 JumpIfEqual {138}
	115 Move X8, [X20]
	116 Move X1, [X8+944]
	117 Move X9, [X8+936]
	118 Move X0, X20
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Compare X0, 0
	121 JumpIfEqual {138}
	122 Move X8, [X20]
	123 Move X1, [X8+944]
	124 Move X9, [X8+936]
	125 Move X0, X20
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X1, X0
	128 Move [X31+32], X31
	129 Add X0, X31, 32
	130 Move X2, X31
	131 Call EventDispatcherGate..ctor, X0, X1
	132 Move X8, 0x379000
	133 Move X1, [X31+32]
	134 Move X8, [X8+2408]
	135 Move X2, [X8]
	136 Add X0, X31, 176
	137 Call Nullable`1<EventDispatcherGate>..ctor, X0, X1
	138 Move [X31+160], X31
	139 Move [X31+168], X31
	140 Move X22, [X21+928]
	141 Compare X22, 0
	142 JumpIfEqual {251}
	143 Move X23, 0x32C000
	144 Move X8, [X22]
	145 Move X23, [X23+3712]
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Move X1, [X23]
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move W2, 1
	157 Move X0, X22
	158 Call 0x1C5D788
	159 Move W9, [X10]
	160 Add W9, W9, 1
	161 Add X8, X8, W9
	162 Add X0, X8, 312
	163 Move X8, [X0]
	164 Move X1, [X0+8]
	165 Move X0, X22
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Compare X0, 0
	168 JumpIfEqual {240}
	169 Move X22, [X21+928]
	170 Compare X22, 0
	171 JumpIfEqual {509}
	172 Move X8, [X22]
	173 Move X1, [X23]
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move W2, 1
	184 Move X0, X22
	185 Call 0x1C5D788
	186 Move W9, [X10]
	187 Add W9, W9, 1
	188 Add X8, X8, W9
	189 Add X0, X8, 312
	190 Move X8, [X0]
	191 Move X1, [X0+8]
	192 Move X0, X22
	193 NotImplemented "Instruction BLR not yet implemented."
	194 Move X22, X0
	195 Compare X20, 0
	196 JumpIfEqual {202}
	197 Move X8, [X20]
	198 Move X1, [X8+944]
	199 Move X9, [X8+936]
	200 Move X0, X20
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Move X0, X31
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X22, [X21+928]
	205 Compare X22, 0
	206 JumpIfEqual {512}
	207 Move X8, [X22]
	208 Move X1, [X23]
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Compare X9, 0
	211 JumpIfEqual {218}
	212 Move X10, [X8+176]
	213 Add X10, X10, 8
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract X9, X9, 1
	217 Add X10, X10, 16
	218 Move W2, 1
	219 Move X0, X22
	220 Call 0x1C5D788
	221 Move W9, [X10]
	222 Add W9, W9, 1
	223 Add X8, X8, W9
	224 Add X0, X8, 312
	225 Move X8, [X0]
	226 Move X1, [X0+8]
	227 Move X0, X22
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move X1, X0
	230 Move [X31+32], X31
	231 Add X0, X31, 32
	232 Move X2, X31
	233 Call EventDispatcherGate..ctor, X0, X1
	234 Move X8, 0x379000
	235 Move X1, [X31+32]
	236 Move X8, [X8+2408]
	237 Move X2, [X8]
	238 Add X0, X31, 160
	239 Call Nullable`1<EventDispatcherGate>..ctor, X0, X1
	240 Move X22, [X21+928]
	241 Compare X22, 0
	242 JumpIfEqual {251}
	243 Move X8, [X22]
	244 Move X1, [X8+816]
	245 Move X9, [X8+808]
	246 Move X0, X22
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Move X23, [X21+928]
	249 Move W24, W0
	250 Move W28, W31
	251 Move X23, X31
	252 Move W24, W31
	253 Move W28, 1
	254 Move W9, [X31+176]
	255 Move W8, [X31+160]
	256 Move X10, [X31+184]
	257 Move [X31+24], W8
	258 Move [X31+28], W9
	259 Move X8, [X31+168]
	260 Move [X31+8], X10
	261 Move [X31+16], X8
	262 Compare X23, 0
	263 JumpIfEqual {296}
	264 Move X10, 0x32C000
	265 Move X8, [X23]
	266 Move X10, [X10+3712]
	267 NotImplemented "Instruction LDRH not yet implemented."
	268 Move X1, [X10]
	269 Compare X9, 0
	270 JumpIfEqual {277}
	271 Move X10, [X8+176]
	272 Add X10, X10, 8
	273 NotImplemented "Instruction LDUR not yet implemented."
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Subtract X9, X9, 1
	276 Add X10, X10, 16
	277 Move W2, 1
	278 Move X0, X23
	279 Call 0x1C5D788
	280 Move W9, [X10]
	281 Add W9, W9, 1
	282 Add X8, X8, W9
	283 Add X0, X8, 312
	284 Move X8, [X0]
	285 Move X1, [X0+8]
	286 Move X0, X23
	287 NotImplemented "Instruction BLR not yet implemented."
	288 Compare X0, 0
	289 JumpIfEqual {296}
	290 Move X0, [X0+16]
	291 Compare X0, 0
	292 JumpIfEqual {510}
	293 Move X1, X19
	294 Move X2, X31
	295 Call ClickDetector.Cleanup, X0, X1
	296 Move X29, 0x377000
	297 Move X29, [X29+3496]
	298 Move X1, [X29]
	299 Add X8, X31, 32
	300 Move X0, X19
	301 Call List`1<Object>.GetEnumerator, X0
	302 Move V0, [X31+2]
	303 Move X8, [X31+48]
	304 Move X27, 0x377000
	305 Move X27, [X27+3480]
	306 Move [X31+8], V0
	307 Move [X31+144], X8
	308 Move X1, [X27]
	309 Add X0, X31, 128
	310 Call Enumerator<Object>.MoveNext, X0
	311 Move TEMP, X0
	312 And TEMP, TEMP, 1
	313 Compare TEMP, 1
	314 JumpIfNotEqual {320}
	315 Move X0, [X31+144]
	316 Compare X0, 0
	317 JumpIfEqual {492}
	318 Move X1, X20
	319 Call VisualElement.WillChangePanel, X0, X1
	320 Move X23, X31
	321 Move W25, 21
	322 Move X8, 0x377000
	323 Move X8, [X8+3472]
	324 Move X1, [X8]
	325 Add X0, X31, 128
	326 Call Enumerator<Object>.Dispose, X0
	327 Compare X23, 0
	328 JumpIfNotEqual {503}
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Compare W25, 0
	331 JumpIfNotEqual {436}
	332 Move TEMP, X28
	333 And TEMP, TEMP, 1
	334 Compare TEMP, 1
	335 JumpIfNotEqual {337}
	336 Move W0, W31
	337 Move X8, [X22]
	338 Move X1, [X8+816]
	339 Move X9, [X8+808]
	340 Move X0, X22
	341 NotImplemented "Instruction BLR not yet implemented."
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Move W2, [X19+24]
	344 Move W8, [X19+28]
	345 Add W8, W8, 1
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Move [X19+24], W31
	348 Move [X19+28], W8
	349 Move X0, [X19+16]
	350 Move W1, W31
	351 Move X3, X31
	352 Call Array.Clear, X0, X1, X2
	353 Move W10, [X19+28]
	354 Move X8, [X19+16]
	355 Move X9, [X26]
	356 Add W10, W10, 1
	357 Move [X19+28], W10
	358 Compare X8, 0
	359 JumpIfEqual {511}
	360 NotImplemented "Instruction LDRSW not yet implemented."
	361 Move W11, [X8+24]
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Add W9, W10, 1
	364 Add X8, X8, X10
	365 Move [X19+24], W9
	366 Move [X8+32], X21
	367 Move X8, [X9+32]
	368 Move X8, [X8+192]
	369 Move X2, [X8+112]
	370 Move X0, X19
	371 Move X1, X21
	372 Call List`1<Object>.AddWithResize, X0, X1
	373 Move X0, X21
	374 Move X1, X19
	375 Call VisualElement.GatherAllChildren, X0, X1
	376 Move X1, [X29]
	377 NotImplemented "Instruction CMP not yet implemented."
	378 NotImplemented "Instruction CSET not yet implemented."
	379 Add X8, X31, 32
	380 Move X0, X19
	381 Call List`1<Object>.GetEnumerator, X0
	382 Move V0, [X31+2]
	383 Move X8, [X31+48]
	384 Move W21, W21
	385 ShiftRight W21, 21
	386 And W21, W21, 0xFFFFF
	387 Move [X31+6], V0
	388 Move [X31+112], X8
	389 Move X1, [X27]
	390 Add X0, X31, 96
	391 Call Enumerator<Object>.MoveNext, X0
	392 Move TEMP, X0
	393 And TEMP, TEMP, 1
	394 Compare TEMP, 1
	395 JumpIfNotEqual {404}
	396 Move X8, [X31+112]
	397 Compare X8, 0
	398 JumpIfEqual {493}
	399 Move W9, [X8+80]
	400 Move [X8+928], X20
	401 Move [X8+864], X31
	402 Or W9, W9, W21
	403 Move [X8+80], W9
	404 Move X21, X31
	405 Move W20, 29
	406 Move X8, 0x377000
	407 Move X8, [X8+3472]
	408 Move X1, [X8]
	409 Add X0, X31, 96
	410 Call Enumerator<Object>.Dispose, X0
	411 Compare X21, 0
	412 JumpIfNotEqual {505}
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Compare W20, 0
	415 JumpIfNotEqual {436}
	416 Move X1, [X29]
	417 Add X8, X31, 32
	418 Move X0, X19
	419 Call List`1<Object>.GetEnumerator, X0
	420 Move V0, [X31+2]
	421 Move X8, [X31+48]
	422 Move [X31+4], V0
	423 Move [X31+80], X8
	424 Move X1, [X27]
	425 Add X0, X31, 64
	426 Call Enumerator<Object>.MoveNext, X0
	427 Move TEMP, X0
	428 And TEMP, TEMP, 1
	429 Compare TEMP, 1
	430 JumpIfNotEqual {437}
	431 Move X0, [X31+80]
	432 Compare X0, 0
	433 JumpIfEqual {494}
	434 Move X1, X22
	435 Call VisualElement.HasChangedPanel, X0, X1
	436 Move X21, X31
	437 Move X21, X31
	438 Move X8, 0x377000
	439 Move X8, [X8+3472]
	440 Move X1, [X8]
	441 Add X0, X31, 64
	442 Call Enumerator<Object>.Dispose, X0
	443 Compare X21, 0
	444 JumpIfNotEqual {507}
	445 Move W8, [X31+24]
	446 Compare W8, 0
	447 JumpIfEqual {453}
	448 Move X8, [X31+16]
	449 Move [X31+56], X8
	450 Add X0, X31, 56
	451 Move X1, X31
	452 Call EventDispatcherGate.Dispose, X0
	453 Compare X21, 0
	454 JumpIfNotEqual {501}
	455 Move W8, [X31+28]
	456 Compare W8, 0
	457 JumpIfEqual {463}
	458 Move X8, [X31+8]
	459 Move [X31+56], X8
	460 Add X0, X31, 56
	461 Move X1, X31
	462 Call EventDispatcherGate.Dispose, X0
	463 Compare X21, 0
	464 JumpIfNotEqual {499}
	465 Move X20, X31
	466 Move X8, 0x32C000
	467 Move X8, [X8+248]
	468 Move X0, [X8]
	469 Move W8, [X0+224]
	470 Compare W8, 0
	471 JumpIfNotEqual {473}
	472 Call 0x1C17DFC
	473 Move X0, X19
	474 Move X1, X31
	475 Call VisualElementListPool.Release, X0
	476 Compare X20, 0
	477 JumpIfNotEqual {496}
	478 Move X20, [X31+272]
	479 Move X19, [X31+280]
	480 Move X22, [X31+256]
	481 Move X21, [X31+264]
	482 Move X24, [X31+240]
	483 Move X23, [X31+248]
	484 Move X26, [X31+224]
	485 Move X25, [X31+232]
	486 Move X28, [X31+208]
	487 Move X27, [X31+216]
	488 Move X29, [X31+192]
	489 Move X30, [X31+200]
	490 Add X31, X31, 288
	491 Return 
	492 Call 0x1C17F20
	493 Call 0x1C17F20
	494 Call 0x1C17F20
	495 Call 0x1C17F20
	496 Move X0, X20
	497 Call 0x1C17F18
	498 Call 0x1C17F20
	499 Move X0, X21
	500 Call 0x1C17F18
	501 Move X0, X21
	502 Call 0x1C17F18
	503 Move X0, X23
	504 Call 0x1C17F18
	505 Move X0, X21
	506 Call 0x1C17F18
	507 Move X0, X21
	508 Call 0x1C17F18
	509 Call 0x1C17F20
	510 Call 0x1C17F20
	511 Call 0x1C17F20
	512 Call 0x1C17F20
	513 Move X25, X0
	514 Move W8, 1
	515 Move W20, W1
	516 Move X25, X0
	517 Move W20, W1
	518 Move X25, X0
	519 Move W20, W1
	520 Move X20, X1
	521 Move X25, X0
	522 Move X25, X0
	523 NotImplemented "Instruction CMP not yet implemented."
	524 Move X0, X25
	525 Call 0x3EB2AD0
	526 Move X21, [X0]
	527 Call 0x3EB2AE0
	528 Move X21, X31
	529 Move X8, 0x377000
	530 Move X8, [X8+3472]
	531 Move W20, W1
	532 Move X1, [X8]
	533 Add X0, X31, 64
	534 Call Enumerator<Object>.Dispose, X0
	535 Compare X21, 0
	536 JumpIfEqual {575}
	537 Move X0, X21
	538 Call 0x1C17F18
	539 Move X25, X0
	540 Move X25, X0
	541 NotImplemented "Instruction CMP not yet implemented."
	542 Move X0, X25
	543 Call 0x3EB2AD0
	544 Move X21, [X0]
	545 Call 0x3EB2AE0
	546 Move W20, W31
	547 Move X21, X31
	548 Move X8, 0x377000
	549 Move X8, [X8+3472]
	550 Move W20, W1
	551 Move X1, [X8]
	552 Add X0, X31, 96
	553 Call Enumerator<Object>.Dispose, X0
	554 Compare X21, 0
	555 JumpIfEqual {575}
	556 Move X0, X21
	557 Call 0x1C17F18
	558 Move X25, X0
	559 Move X25, X0
	560 NotImplemented "Instruction CMP not yet implemented."
	561 Move X0, X25
	562 Call 0x3EB2AD0
	563 Move X23, [X0]
	564 Call 0x3EB2AE0
	565 Move W25, W31
	566 Move X23, X31
	567 Move X8, 0x377000
	568 Move X8, [X8+3472]
	569 Move W20, W1
	570 Move X1, [X8]
	571 Add X0, X31, 128
	572 Call Enumerator<Object>.Dispose, X0
	573 Compare X23, 0
	574 JumpIfNotEqual {615}
	575 NotImplemented "Instruction CMP not yet implemented."
	576 Move X0, X25
	577 Call 0x3EB2AD0
	578 Move X21, [X0]
	579 Call 0x3EB2AE0
	580 Move X21, X31
	581 Move W8, [X31+24]
	582 Compare W8, 0
	583 JumpIfEqual {589}
	584 Move X8, [X31+16]
	585 Move [X31+56], X8
	586 Add X0, X31, 56
	587 Move X1, X31
	588 Call EventDispatcherGate.Dispose, X0
	589 Compare X21, 0
	590 JumpIfNotEqual {613}
	591 Move W8, 1
	592 NotImplemented "Instruction CMP not yet implemented."
	593 Move X0, X25
	594 Call 0x3EB2AD0
	595 Move X21, [X0]
	596 Call 0x3EB2AE0
	597 Move X21, X31
	598 Move W8, [X31+28]
	599 Compare W8, 0
	600 JumpIfEqual {606}
	601 Move X8, [X31+8]
	602 Move [X31+56], X8
	603 Add X0, X31, 56
	604 Move X1, X31
	605 Call EventDispatcherGate.Dispose, X0
	606 Compare X21, 0
	607 JumpIfNotEqual {618}
	608 NotImplemented "Instruction CMP not yet implemented."
	609 Move X0, X25
	610 Call 0x3EB2AD0
	611 Move X20, [X0]
	612 Call 0x3EB2AE0
	613 Move X0, X21
	614 Call 0x1C17F18
	615 Move X0, X23
	616 Call 0x1C17F18
	617 Move X20, X31
	618 Move X0, X21
	619 Call 0x1C17F18
	620 Move X25, X0
	621 Move W20, W1
	622 Move X25, X0
	623 Move X8, 0x32C000
	624 Move X8, [X8+248]
	625 Move X0, [X8]
	626 Move W8, [X0+224]
	627 Compare W8, 0
	628 JumpIfNotEqual {630}
	629 Call 0x1C17DFC
	630 Move X0, X19
	631 Move X1, X31
	632 Call VisualElementListPool.Release, X0
	633 Compare X20, 0
	634 JumpIfNotEqual {637}
	635 Move X0, X25
	636 Call 0x1D2D690
	637 Move X0, X20
	638 Call 0x1C17F18
	639 Move X25, X0
	640 Move X25, X0
	641 Move W20, W1
	642 Call 0x1991590

Method: System.Void WillChangePanel(UnityEngine.UIElements.BaseVisualElementPanel destinationPanel)

Disassembly:
	0x03DF2078 ADRP X0, 0x32A000
	0x03DF207C LDR X0, [X0 + 0x128]
	0x03DF2080 BL 0x1C16CF4
	0x03DF2084 ADRP X0, 0x375000
	0x03DF2088 LDR X0, [X0 + 0xBC0]
	0x03DF208C BL 0x1C16CF4
	0x03DF2090 MOVZ W8, 0x1
	0x03DF2094 STRB W8, [X22 + 0x250]
	0x03DF2098 MOV X0, X19
	0x03DF209C BL 0x3DE7EEC
	0x03DF20A0 LDR X1, [X21]
	0x03DF20A4 ORN W8, W31, W20, 0x0
	0x03DF20A8 MOV X19, X0
	0x03DF20AC AND W0, W8, 0x1
	0x03DF20B0 BL 0x266EACC
	0x03DF20B4 CBZ X19, 0x3DF2130
	0x03DF20B8 ADRP X10, 0x32A000
	0x03DF20BC LDR X8, [X19]
	0x03DF20C0 LDR X10, [X10 + 0x128]
	0x03DF20C4 MOV X20, X0
	0x03DF20C8 LDRH W9, [X8 + 0x12E]
	0x03DF20CC LDR X1, [X10]
	0x03DF20D0 CBZ X9, 0x3DF20F4
	0x03DF20D4 LDR X10, [X8 + 0xB0]
	0x03DF20D8 ADD X10, X10, 0x8
	0x03DF20DC LDUR X11, [X10 - 0x8]
	0x03DF20E0 CMP X11, X1
	0x03DF20E4 B.EQ 0x3DF2104
	0x03DF20E8 SUBS X9, X9, 0x1
	0x03DF20EC ADD X10, X10, 0x10
	0x03DF20F0 B.NE 0x3DF20DC
	0x03DF20F4 MOVZ W2, 0x34
	0x03DF20F8 MOV X0, X19
	0x03DF20FC BL 0x1C5C788
	0x03DF2100 B 0x3DF2114
	0x03DF2104 LDR W9, [X10]
	0x03DF2108 ADD W9, W9, 0x34
	0x03DF210C ADD X8, X8, W9, 0x4, SXTW
	0x03DF2110 ADD X0, X8, 0x138
	0x03DF2114 LDP X3, X2, [X0]
	0x03DF2118 MOV X0, X19
	0x03DF211C MOV X1, X20
	0x03DF2120 LDP X20, X19, [X31 + 0x20]
	0x03DF2124 LDP X22, X21, [X31 + 0x10]
	0x03DF2128 LDR X30, [X31], #0x30
	0x03DF212C BR X3
	0x03DF2130 BL 0x1C16F20
	0x03DF2134 MOV X1, X0
	0x03DF2138 LDR X0, [X0 + 0x3A0]
	0x03DF213C CBZ X0, 0x3DF2154
	0x03DF2140 LDR X8, [X0]
	0x03DF2144 MOVZ W2, 0x800
	0x03DF2148 LDR X4, [X8 + 0x338]
	0x03DF214C LDR X3, [X8 + 0x340]
	0x03DF2150 BR X4
	0x03DF2154 RET
	0x03DF2158 LDR X0, [X0 + 0x338]
	0x03DF215C RET
	0x03DF2160 STR X1, [X0 + 0x338]
	0x03DF2164 RET
	0x03DF2168 STR X30, [X31 - 0x30]!
	0x03DF216C STP X22, X21, [X31 + 0x10]
	0x03DF2170 STP X20, X19, [X31 + 0x20]
	0x03DF2174 ADRP X19, 0x5F6000
	0x03DF2178 LDRB W8, [X19 + 0x251]
	0x03DF217C MOV X20, X1
	0x03DF2180 MOV X21, X0
	0x03DF2184 TBNZ X8, 0x0, 0x3DF219C
	0x03DF2188 ADRP X0, 0x329000
	0x03DF218C LDR X0, [X0 + 0x898]
	0x03DF2190 BL 0x1C16CF4
	0x03DF2194 MOVZ W8, 0x1
	0x03DF2198 STRB W8, [X19 + 0x251]
	0x03DF219C LDR X8, [X21 + 0x338]
	0x03DF21A0 CBZ X8, 0x3DF222C
	0x03DF21A4 ADRP X19, 0x329000
	0x03DF21A8 LDR X19, [X19 + 0x898]
	0x03DF21AC LDR X0, [X19]
	0x03DF21B0 LDR W8, [X0 + 0xE0]
	0x03DF21B4 CBNZ W8, 0x3DF21C0
	0x03DF21B8 BL 0x1C16DFC
	0x03DF21BC LDR X0, [X19]
	0x03DF21C0 LDR X8, [X0 + 0xB8]
	0x03DF21C4 LDR X19, [X8 + 0x30]
	0x03DF21C8 MOV X0, X19
	0x03DF21CC MOV X1, X31
	0x03DF21D0 MOV X2, X31
	0x03DF21D4 BL 0x33C5D2C
	0x03DF21D8 TBZ X0, 0x0, 0x3DF21E8
	0x03DF21DC MOV X0, X19
	0x03DF21E0 MOV X1, X31
	0x03DF21E4 BL 0x3BFE970
	0x03DF21E8 LDR X8, [X21 + 0x338]
	0x03DF21EC CBZ X8, 0x3DF223C
	0x03DF21F0 LDR X0, [X8 + 0x40]
	0x03DF21F4 LDR X9, [X8 + 0x18]
	0x03DF21F8 LDR X2, [X8 + 0x28]
	0x03DF21FC MOV X1, X20
	0x03DF2200 BLR X9
	0x03DF2204 MOV X20, X31
	0x03DF2208 MOV X0, X19
	0x03DF220C MOV X1, X31
	0x03DF2210 MOV X2, X31
	0x03DF2214 BL 0x33C5D2C
	0x03DF2218 TBZ X0, 0x0, 0x3DF2228
	0x03DF221C MOV X0, X19
	0x03DF2220 MOV X1, X31
	0x03DF2224 BL 0x3BFEA0C
	0x03DF2228 CBNZ X20, 0x3DF2240
	0x03DF222C LDP X20, X19, [X31 + 0x20]
	0x03DF2230 LDP X22, X21, [X31 + 0x10]
	0x03DF2234 LDR X30, [X31], #0x30
	0x03DF2238 RET
	0x03DF223C BL 0x1C16F20
	0x03DF2240 MOV X0, X20
	0x03DF2244 BL 0x1C16F18
	0x03DF2248 B 0x3DF22B0
	0x03DF224C B 0x3DF22B0
	0x03DF2250 MOV X22, X1
	0x03DF2254 CMP W22, 0x1
	0x03DF2258 MOV X21, X0
	0x03DF225C B.NE 0x3DF2274
	0x03DF2260 MOV X0, X21
	0x03DF2264 BL 0x3EB1AD0
	0x03DF2268 LDR X20, [X0]
	0x03DF226C BL 0x3EB1AE0
	0x03DF2270 B 0x3DF2208
	0x03DF2274 MOV X20, X31
	0x03DF2278 MOV X0, X19
	0x03DF227C MOV X1, X31
	0x03DF2280 MOV X2, X31
	0x03DF2284 BL 0x33C5D2C
	0x03DF2288 TBZ X0, 0x0, 0x3DF2298
	0x03DF228C MOV X0, X19
	0x03DF2290 MOV X1, X31
	0x03DF2294 BL 0x3BFEA0C
	0x03DF2298 CBZ X20, 0x3DF22B8
	0x03DF229C MOV X0, X20
	0x03DF22A0 BL 0x1C16F18
	0x03DF22A4 MOV X22, X1
	0x03DF22A8 MOV X21, X0
	0x03DF22AC B 0x3DF2278
	0x03DF22B0 MOV X22, X1
	0x03DF22B4 MOV X21, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5F7000
	007 Move W8, [X21+586]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x377000
	015 Move X0, [X0+1904]
	016 Call 0x1C17CF4
	017 Move X0, 0x302000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0x378000
	021 Move X0, [X0+2424]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+586], W8
	025 Move X8, [X19+928]
	026 Compare X8, 0
	027 JumpIfEqual {110}
	028 Move X0, X19
	029 Call VisualElement.UnregisterRunningAnimations, X0
	030 Move W8, [X19+81]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 8
	033 Compare TEMP, 8
	034 JumpIfEqual {102}
	035 Move X21, 0x377000
	036 Move X21, [X21+1904]
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X21]
	043 Move X8, [X0+184]
	044 Move W9, [X19+880]
	045 Move W10, [X19+884]
	046 Move W11, [X19+872]
	047 Move W8, [X8+16]
	048 Or W9, W10, W9
	049 Or W9, W9, W11
	050 NotImplemented "Instruction LSRV not yet implemented."
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {102}
	055 Move X8, 0x378000
	056 Move X0, [X19+928]
	057 Move X8, [X8+2424]
	058 Move X1, X20
	059 Move X2, [X8]
	060 Call 0x24A2370, X0, X1
	061 Move X20, X0
	062 Compare X0, 0
	063 JumpIfEqual {116}
	064 Move X0, X20
	065 Move X1, X19
	066 Move X2, X31
	067 Call EventBase.set_target, X0, X1
	068 Move X0, X19
	069 Move X1, X20
	070 Move X2, X31
	071 Call CallbackEventHandler.HandleEventAtTargetAndDefaultPhase, X0, X1
	072 Move X21, X31
	073 Move W22, 5
	074 Move X10, 0x302000
	075 Move X8, [X20]
	076 Move X10, [X10+3584]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Move X1, [X10]
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move X0, X20
	088 Move W2, W31
	089 Call 0x1C5D788
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 Add X8, X8, X9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X1, [X0+8]
	095 Move X0, X20
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Compare X21, 0
	098 JumpIfNotEqual {117}
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Compare W22, 0
	101 JumpIfNotEqual {110}
	102 Move X0, X19
	103 Move X20, [X31+32]
	104 Move X19, [X31+40]
	105 Move X22, [X31+16]
	106 Move X21, [X31+24]
	107 Move X30, [X31+48]
	108 Call VisualElement.UnregisterRunningAnimations, X0
	109 Return 
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X22, [X31+16]
	113 Move X21, [X31+24]
	114 Move X30, [X31+48]
	115 Return 
	116 Call 0x1C17F20
	117 Move X0, X21
	118 Call 0x1C17F18
	119 Move X22, X0
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X0, X22
	122 Call 0x3EB2AD0
	123 Move X21, [X0]
	124 Call 0x3EB2AE0
	125 Move W22, W31
	126 Compare X20, 0
	127 JumpIfNotEqual {74}
	128 Move X21, X31
	129 Move X22, X0
	130 Compare X20, 0
	131 JumpIfEqual {155}
	132 Move X10, 0x302000
	133 Move X8, [X20]
	134 Move X10, [X10+3584]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Move X1, [X10]
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move X0, X20
	146 Move W2, W31
	147 Call 0x1C5D788
	148 NotImplemented "Instruction LDRSW not yet implemented."
	149 Add X8, X8, X9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X1, [X0+8]
	153 Move X0, X20
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Compare X21, 0
	156 JumpIfNotEqual {159}
	157 Move X0, X22
	158 Call 0x1D2D690
	159 Move X0, X21
	160 Call 0x1C17F18
	161 Call 0x1991590

Method: System.Void HasChangedPanel(UnityEngine.UIElements.BaseVisualElementPanel prevPanel)

Disassembly:
	0x03DF22B8 CMP W22, 0x1
	0x03DF22BC B.NE 0x3DF2348
	0x03DF22C0 MOV X0, X21
	0x03DF22C4 BL 0x3EB1AD0
	0x03DF22C8 MOV X19, X0
	0x03DF22CC ADRP X0, 0x301000
	0x03DF22D0 LDR X0, [X0 + 0x7D0]
	0x03DF22D4 BL 0x1C16D08
	0x03DF22D8 LDR X8, [X19]
	0x03DF22DC LDR X1, [X8]
	0x03DF22E0 BL 0x1C17270
	0x03DF22E4 TBZ X0, 0x0, 0x3DF2320
	0x03DF22E8 LDR X19, [X19]
	0x03DF22EC BL 0x3EB1AE0
	0x03DF22F0 ADRP X0, 0x301000
	0x03DF22F4 LDR X0, [X0 + 0xA28]
	0x03DF22F8 BL 0x1C16D08
	0x03DF22FC LDR W8, [X0 + 0xE0]
	0x03DF2300 CBNZ W8, 0x3DF2308
	0x03DF2304 BL 0x1C16DFC
	0x03DF2308 MOV X0, X19
	0x03DF230C LDP X20, X19, [X31 + 0x20]
	0x03DF2310 LDP X22, X21, [X31 + 0x10]
	0x03DF2314 MOV X1, X31
	0x03DF2318 LDR X30, [X31], #0x30
	0x03DF231C B 0x3C02C84
	0x03DF2320 MOVZ W0, 0x8
	0x03DF2324 BL 0x3EB1AF0
	0x03DF2328 LDR X8, [X19]
	0x03DF232C STR X8, [X0]
	0x03DF2330 ADRP X1, 0xC2000
	0x03DF2334 ADD X1, X1, 0xE58
	0x03DF2338 MOV X2, X31
	0x03DF233C BL 0x3EB1B00
	0x03DF2340 MOV X21, X0
	0x03DF2344 BL 0x3EB1AE0
	0x03DF2348 MOV X0, X21
	0x03DF234C BL 0x1D2C690
	0x03DF2350 BL 0x1990590
	0x03DF2354 STP X30, X21, [X31 - 0x20]!
	0x03DF2358 STP X20, X19, [X31 + 0x10]
	0x03DF235C ADRP X21, 0x5F6000
	0x03DF2360 LDRB W8, [X21 + 0x252]
	0x03DF2364 MOV X19, X1
	0x03DF2368 MOV X20, X0
	0x03DF236C TBNZ X8, 0x0, 0x3DF2384
	0x03DF2370 ADRP X0, 0x32A000
	0x03DF2374 LDR X0, [X0 + 0x8D0]
	0x03DF2378 BL 0x1C16CF4
	0x03DF237C MOVZ W8, 0x1
	0x03DF2380 STRB W8, [X21 + 0x252]
	0x03DF2384 LDR X0, [X20 + 0x390]
	0x03DF2388 CBZ X0, 0x3DF2394
	0x03DF238C MOV X1, X19
	0x03DF2390 BL 0x3DF2354
	0x03DF2394 LDR X0, [X20 + 0x58]
	0x03DF2398 MOV X1, X31
	0x03DF239C BL 0x32277A8
	0x03DF23A0 TBZ X0, 0x0, 0x3DF23B0
	0x03DF23A4 LDP X20, X19, [X31 + 0x10]
	0x03DF23A8 LDP X30, X21, [X31], #0x20
	0x03DF23AC RET
	0x03DF23B0 CBZ X19, 0x3DF23E4
	0x03DF23B4 ADRP X8, 0x32A000
	0x03DF23B8 LDR X8, [X8 + 0x8D0]
	0x03DF23BC MOV X0, X19
	0x03DF23C0 MOV X2, X31
	0x03DF23C4 LDR X1, [X8]
	0x03DF23C8 BL 0x32333E0
	0x03DF23CC LDR X1, [X20 + 0x58]
	0x03DF23D0 MOV X0, X19
	0x03DF23D4 LDP X20, X19, [X31 + 0x10]
	0x03DF23D8 MOV X2, X31
	0x03DF23DC LDP X30, X21, [X31], #0x20
	0x03DF23E0 B 0x32333E0
	0x03DF23E4 BL 0x1C16F20
	0x03DF23E8 STP X30, X21, [X31 - 0x20]!
	0x03DF23EC STP X20, X19, [X31 + 0x10]
	0x03DF23F0 ADRP X20, 0x5F6000
	0x03DF23F4 ADRP X21, 0x301000
	0x03DF23F8 LDRB W8, [X20 + 0x253]
	0x03DF23FC LDR X21, [X21 + 0x8F0]
	0x03DF2400 MOV X19, X0
	0x03DF2404 TBNZ X8, 0x0, 0x3DF241C
	0x03DF2408 ADRP X0, 0x301000
	0x03DF240C LDR X0, [X0 + 0x8F0]
	0x03DF2410 BL 0x1C16CF4
	0x03DF2414 MOVZ W8, 0x1
	0x03DF2418 STRB W8, [X20 + 0x253]
	0x03DF241C LDR X0, [X21]
	0x03DF2420 BL 0x1C16F10
	0x03DF2424 MOV X1, X31
	0x03DF2428 MOV X20, X0
	0x03DF242C BL 0x3231AC4
	0x03DF2430 MOV X0, X19
	0x03DF2434 MOV X1, X20
	0x03DF2438 BL 0x3DF2354
	0x03DF243C CBZ X20, 0x3DF2458
	0x03DF2440 LDR X8, [X20]
	0x03DF2444 MOV X0, X20
	0x03DF2448 LDP X20, X19, [X31 + 0x10]
	0x03DF244C LDP X2, X1, [X8 + 0x168]
	0x03DF2450 LDP X30, X21, [X31], #0x20
	0x03DF2454 BR X2
	0x03DF2458 BL 0x1C16F20
	0x03DF245C STP X30, X23, [X31 - 0x30]!
	0x03DF2460 STP X22, X21, [X31 + 0x10]
	0x03DF2464 STP X20, X19, [X31 + 0x20]
	0x03DF2468 ADRP X20, 0x5F6000
	0x03DF246C LDRB W8, [X20 + 0x254]
	0x03DF2470 MOV X21, X2
	0x03DF2474 MOV X19, X1
	0x03DF2478 MOV X22, X0
	0x03DF247C TBNZ X8, 0x0, 0x3DF24C4
	0x03DF2480 ADRP X0, 0x301000
	0x03DF2484 LDR X0, [X0 + 0xA28]
	0x03DF2488 BL 0x1C16CF4
	0x03DF248C ADRP X0, 0x377000
	0x03DF2490 LDR X0, [X0 + 0x9A8]
	0x03DF2494 BL 0x1C16CF4
	0x03DF2498 ADRP X0, 0x32A000
	0x03DF249C LDR X0, [X0 + 0x8C8]
	0x03DF24A0 BL 0x1C16CF4
	0x03DF24A4 ADRP X0, 0x377000
	0x03DF24A8 LDR X0, [X0 + 0x9B0]
	0x03DF24AC BL 0x1C16CF4
	0x03DF24B0 ADRP X0, 0x32A000
	0x03DF24B4 LDR X0, [X0 + 0x8D0]
	0x03DF24B8 BL 0x1C16CF4
	0x03DF24BC MOVZ W8, 0x1
	0x03DF24C0 STRB W8, [X20 + 0x254]
	0x03DF24C4 CBZ X19, 0x3DF2720
	0x03DF24C8 ADRP X8, 0x301000
	0x03DF24CC LDR X8, [X8 + 0xA28]
	0x03DF24D0 ADRP X23, 0x377000
	0x03DF24D4 LDR X20, [X22 + 0x3A0]
	0x03DF24D8 LDR X0, [X8]
	0x03DF24DC LDR W8, [X0 + 0xE0]
	0x03DF24E0 LDR X23, [X23 + 0x9B0]
	0x03DF24E4 CBNZ W8, 0x3DF24EC
	0x03DF24E8 BL 0x1C16DFC
	0x03DF24EC LDR X1, [X23]
	0x03DF24F0 CMP X20, 0x0
	0x03DF24F4 CSET W0, NE
	0x03DF24F8 MOV X2, X31
	0x03DF24FC BL 0x3C06F88
	0x03DF2500 LDR X0, [X22 + 0x3A0]
	0x03DF2504 CBZ X0, 0x3DF256C
	0x03DF2508 LDR X8, [X0]
	0x03DF250C LDR X9, [X8 + 0x248]
	0x03DF2510 LDR X1, [X8 + 0x250]
	0x03DF2514 BLR X9
	0x03DF2518 CBZ X0, 0x3DF256C
	0x03DF251C LDR X0, [X22 + 0x3A0]
	0x03DF2520 CBZ X0, 0x3DF2768
	0x03DF2524 LDR X8, [X0]
	0x03DF2528 LDR X9, [X8 + 0x248]
	0x03DF252C LDR X1, [X8 + 0x250]
	0x03DF2530 BLR X9
	0x03DF2534 CBZ X0, 0x3DF2768
	0x03DF2538 LDR X8, [X0 + 0x40]
	0x03DF253C LDR X9, [X0 + 0x18]
	0x03DF2540 LDR X1, [X0 + 0x28]
	0x03DF2544 MOV X0, X8
	0x03DF2548 BLR X9
	0x03DF254C CBZ X0, 0x3DF256C
	0x03DF2550 MOV X20, X0
	0x03DF2554 LDR X0, [X22 + 0x58]
	0x03DF2558 MOV X1, X31
	0x03DF255C BL 0x32277A8
	0x03DF2560 TBNZ X0, 0x0, 0x3DF256C
	0x03DF2564 LDRB W8, [X22 + 0x51]
	0x03DF2568 TBNZ X8, 0x1, 0x3DF257C
	0x03DF256C LDP X20, X19, [X31 + 0x20]
	0x03DF2570 LDP X22, X21, [X31 + 0x10]
	0x03DF2574 LDP X30, X23, [X31], #0x30
	0x03DF2578 RET
	0x03DF257C MOV X0, X19
	0x03DF2580 MOV X1, X31
	0x03DF2584 BL 0x33BE520
	0x03DF2588 ADRP X8, 0x32A000
	0x03DF258C LDR X8, [X8 + 0x8D0]
	0x03DF2590 LDR X22, [X8]
	0x03DF2594 CBZ X0, 0x3DF25AC
	0x03DF2598 LDR X8, [X0]
	0x03DF259C LDP X9, X1, [X8 + 0x168]
	0x03DF25A0 BLR X9
	0x03DF25A4 MOV X2, X0
	0x03DF25A8 B 0x3DF25B0
	0x03DF25AC MOV X2, X31
	0x03DF25B0 MOV X0, X21
	0x03DF25B4 MOV X1, X22
	0x03DF25B8 MOV X3, X31
	0x03DF25BC BL 0x32274B8
	0x03DF25C0 ADRP X22, 0x32A000
	0x03DF25C4 LDR X8, [X20]
	0x03DF25C8 LDR X22, [X22 + 0x8C8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5F7000
	007 Move W8, [X21+587]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x377000
	015 Move X0, [X0+1848]
	016 Call 0x1C17CF4
	017 Move X0, 0x302000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0x378000
	021 Move X0, [X0+2432]
	022 Call 0x1C17CF4
	023 Move X0, 0x371000
	024 Move X0, [X0+1584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+587], W8
	028 Move X8, [X19+928]
	029 Move X21, [X19+696]
	030 Compare X8, 0
	031 JumpIfEqual {107}
	032 Compare X21, 0
	033 JumpIfEqual {176}
	034 Move X1, [X8+40]
	035 Move X0, X21
	036 Move X2, X31
	037 Call YogaNode.set_Config, X0, X1
	038 Move X0, X19
	039 Call VisualElement.RegisterRunningAnimations, X0
	040 Move W8, [X19+684]
	041 Move TEMP, 67
	042 Not TEMP
	043 Move W9, TEMP
	044 Move X0, X19
	045 And W1, W8, W9
	046 Call VisualElement.set_pseudoStates, X0, X1
	047 Move W8, [X19+80]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 2048
	050 Compare TEMP, 2048
	051 JumpIfNotEqual {138}
	052 Move X21, 0x377000
	053 Move X21, [X21+1848]
	054 Move X0, [X21]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X21]
	060 Move X8, [X0+184]
	061 Move W9, [X19+880]
	062 Move W10, [X19+884]
	063 Move W11, [X19+872]
	064 Move W8, [X8+16]
	065 Or W9, W10, W9
	066 Or W9, W9, W11
	067 NotImplemented "Instruction LSRV not yet implemented."
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {135}
	072 Move X8, 0x378000
	073 Move X1, [X19+928]
	074 Move X8, [X8+2432]
	075 Move X0, X20
	076 Move X2, [X8]
	077 Call 0x24A2370, X0, X1
	078 Move X20, X0
	079 Compare X0, 0
	080 JumpIfEqual {177}
	081 Move X0, X20
	082 Move X1, X19
	083 Move X2, X31
	084 Call EventBase.set_target, X0, X1
	085 Move X0, X19
	086 Move X1, X20
	087 Move X2, X31
	088 Call CallbackEventHandler.HandleEventAtTargetAndDefaultPhase, X0, X1
	089 Move X21, X31
	090 Move W22, 5
	091 Move X10, 0x302000
	092 Move X8, [X20]
	093 Move X10, [X10+3584]
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Move X1, [X10]
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move X0, X20
	105 Move W2, W31
	106 Call 0x1C5D788
	107 Move X20, 0x371000
	108 Move X20, [X20+1584]
	109 Move X0, [X20]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Compare X21, 0
	115 JumpIfEqual {176}
	116 Move X8, [X20]
	117 Move X0, X21
	118 Move X2, X31
	119 Move X8, [X8+184]
	120 Move X1, [X8]
	121 Call YogaNode.set_Config, X0, X1
	122 Move W8, [X19+80]
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Add X8, X8, X9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X1, [X0+8]
	128 Move X0, X20
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Compare X21, 0
	131 JumpIfNotEqual {178}
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Compare W22, 0
	134 JumpIfNotEqual {170}
	135 Move W8, [X19+80]
	136 And W8, W8, 0xFFFFF7FF
	137 Move [X19+80], W8
	138 Move X0, [X19+928]
	139 And W8, W8, 0xFFFFDFFF
	140 Move [X19+80], W8
	141 Compare X0, 0
	142 JumpIfEqual {149}
	143 Move X8, [X0]
	144 Move W2, 536
	145 Move X1, X19
	146 Move X9, [X8+824]
	147 Move X3, [X8+832]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X0, [X19+88]
	150 Move X1, X31
	151 Call String.IsNullOrEmpty, X0
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfEqual {170}
	156 Move X0, [X19+928]
	157 Compare X0, 0
	158 JumpIfEqual {170}
	159 Move X8, [X0]
	160 Move X1, X19
	161 Move X20, [X31+32]
	162 Move X19, [X31+40]
	163 Move X22, [X31+16]
	164 Move X21, [X31+24]
	165 Move X4, [X8+824]
	166 Move X3, [X8+832]
	167 Move W2, 2
	168 Move X30, [X31+48]
	169 CallNoReturn X4
	170 Move X20, [X31+32]
	171 Move X19, [X31+40]
	172 Move X22, [X31+16]
	173 Move X21, [X31+24]
	174 Move X30, [X31+48]
	175 Return 
	176 Call 0x1C17F20
	177 Call 0x1C17F20
	178 Move X0, X21
	179 Call 0x1C17F18
	180 Move X22, X0
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X0, X22
	183 Call 0x3EB2AD0
	184 Move X21, [X0]
	185 Call 0x3EB2AE0
	186 Move W22, W31
	187 Compare X20, 0
	188 JumpIfNotEqual {91}
	189 Move X21, X31
	190 Move X22, X0
	191 Compare X20, 0
	192 JumpIfEqual {216}
	193 Move X10, 0x302000
	194 Move X8, [X20]
	195 Move X10, [X10+3584]
	196 NotImplemented "Instruction LDRH not yet implemented."
	197 Move X1, [X10]
	198 Compare X9, 0
	199 JumpIfEqual {206}
	200 Move X10, [X8+176]
	201 Add X10, X10, 8
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Subtract X9, X9, 1
	205 Add X10, X10, 16
	206 Move X0, X20
	207 Move W2, W31
	208 Call 0x1C5D788
	209 NotImplemented "Instruction LDRSW not yet implemented."
	210 Add X8, X8, X9
	211 Add X0, X8, 312
	212 Move X8, [X0]
	213 Move X1, [X0+8]
	214 Move X0, X20
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Compare X21, 0
	217 JumpIfNotEqual {220}
	218 Move X0, X22
	219 Call 0x1D2D690
	220 Move X0, X21
	221 Call 0x1C17F18
	222 Call 0x1991590

Method: System.Void SendEvent(UnityEngine.UIElements.EventBase e)

Disassembly:
	0x03DF2728 BL 0x1C16D08
	0x03DF272C BL 0x1C16F10
	0x03DF2730 MOV X19, X0
	0x03DF2734 ADRP X0, 0x30C000
	0x03DF2738 LDR X0, [X0 + 0x8A8]
	0x03DF273C BL 0x1C16D08

ISIL:
	001 Move X0, [X0+928]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move W2, 1
	005 Move X3, X31
	006 Call BaseVisualElementPanel.SendEvent, X0, X1, X2
	007 Return 
	008 Return 

Method: System.Void SendEvent(UnityEngine.UIElements.EventBase e, UnityEngine.UIElements.DispatchMode dispatchMode)

Disassembly:
	0x03DF2740 MOV X1, X0
	0x03DF2744 MOV X0, X19
	0x03DF2748 MOV X2, X31
	0x03DF274C BL 0x330E100
	0x03DF2750 ADRP X0, 0x377000

ISIL:
	001 Move X0, [X0+928]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X3, X31
	005 Call BaseVisualElementPanel.SendEvent, X0, X1, X2
	006 Return 
	007 Return 

Method: System.Void IncrementVersion(UnityEngine.UIElements.VersionChangeType changeType)

Disassembly:
	0x03DE6048 LDR X0, [X1 + 0x3A0]
	0x03DE604C CBZ X0, 0x3DE606C
	0x03DE6050 LDR X8, [X0]
	0x03DE6054 MOVZ W2, 0x28
	0x03DE6058 LDR X9, [X8 + 0x338]
	0x03DE605C LDR X3, [X8 + 0x340]
	0x03DE6060 BLR X9
	0x03DE6064 LDR X1, [X19 + 0x20]
	0x03DE6068 CBZ X1, 0x3DE60A4
	0x03DE606C LDR X19, [X1 + 0x2B8]

ISIL:
	001 Move X8, X0
	002 Move X0, [X0+928]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X9, [X0]
	006 Move W2, W1
	007 Move X1, X8
	008 Move X4, [X9+824]
	009 Move X3, [X9+832]
	010 CallNoReturn X4
	011 Return 

Method: System.Void InvokeHierarchyChanged(UnityEngine.UIElements.HierarchyChangeType changeType)

Disassembly:
	0x03DF2754 LDR X0, [X0 + 0x9B8]
	0x03DF2758 BL 0x1C16D08
	0x03DF275C MOV X1, X0
	0x03DF2760 MOV X0, X19
	0x03DF2764 BL 0x1C16DEC
	0x03DF2768 BL 0x1C16F20
	0x03DF276C STP X30, X19, [X31 - 0x10]!
	0x03DF2770 MOV X19, X0

ISIL:
	001 Move X8, X0
	002 Move X0, [X0+928]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move W2, W1
	006 Move X1, X8
	007 Move X3, X31
	008 Call BaseVisualElementPanel.InvokeHierarchyChanged, X0, X1, X2
	009 Return 
	010 Return 

Method: System.Boolean SetEnabledFromHierarchyPrivate(System.Boolean state)

Disassembly:
	0x03DF2774 LDR X0, [X0 + 0x3A0]
	0x03DF2778 CBZ X0, 0x3DF27A8
	0x03DF277C LDR X8, [X0]
	0x03DF2780 LDR X9, [X8 + 0x238]
	0x03DF2784 LDR X1, [X8 + 0x240]
	0x03DF2788 BLR X9
	0x03DF278C CBZ X0, 0x3DF27A8
	0x03DF2790 LDR X0, [X19 + 0x58]
	0x03DF2794 MOV X1, X31
	0x03DF2798 BL 0x32277A8
	0x03DF279C TBNZ X0, 0x0, 0x3DF27A8
	0x03DF27A0 LDRB W8, [X19 + 0x51]
	0x03DF27A4 TBNZ X8, 0x1, 0x3DF27B0
	0x03DF27A8 LDP X30, X19, [X31], #0x10
	0x03DF27AC RET
	0x03DF27B0 LDR X0, [X19 + 0x3A0]
	0x03DF27B4 CBZ X0, 0x3DF27E4
	0x03DF27B8 LDR X8, [X0]
	0x03DF27BC LDR X9, [X8 + 0x238]
	0x03DF27C0 LDR X1, [X8 + 0x240]
	0x03DF27C4 BLR X9
	0x03DF27C8 CBZ X0, 0x3DF27E4
	0x03DF27CC LDR X8, [X0 + 0x40]
	0x03DF27D0 LDR X2, [X0 + 0x18]
	0x03DF27D4 LDR X1, [X0 + 0x28]
	0x03DF27D8 MOV X0, X8
	0x03DF27DC LDP X30, X19, [X31], #0x10
	0x03DF27E0 BR X2
	0x03DF27E4 BL 0x1C16F20
	0x03DF27E8 STR X30, [X31 - 0x20]!
	0x03DF27EC STP X20, X19, [X31 + 0x10]
	0x03DF27F0 MOV X19, X0
	0x03DF27F4 LDR X0, [X0 + 0x58]
	0x03DF27F8 MOV W20, W1
	0x03DF27FC MOV X1, X31
	0x03DF2800 BL 0x32277A8
	0x03DF2804 TBZ X0, 0x0, 0x3DF2828
	0x03DF2808 LDR X8, [X19]
	0x03DF280C MOV X0, X19
	0x03DF2810 LDR X9, [X8 + 0x768]
	0x03DF2814 LDR X1, [X8 + 0x770]
	0x03DF2818 BLR X9
	0x03DF281C CMP X0, X19
	0x03DF2820 B.EQ 0x3DF2828
	0x03DF2824 MOV W20, W31
	0x03DF2828 LDR X0, [X19 + 0x390]
	0x03DF282C CBZ X0, 0x3DF2854
	0x03DF2830 LDR X8, [X0]
	0x03DF2834 LDR X9, [X8 + 0x768]
	0x03DF2838 LDR X1, [X8 + 0x770]
	0x03DF283C BLR X9
	0x03DF2840 CMP X0, X19
	0x03DF2844 CSET W8, EQ
	0x03DF2848 ORR W8, W20, W8, 0x0
	0x03DF284C AND W0, W8, 0x1
	0x03DF2850 B 0x3DF2858
	0x03DF2854 AND W0, W20, 0x1
	0x03DF2858 LDP X20, X19, [X31 + 0x10]
	0x03DF285C LDR X30, [X31], #0x20
	0x03DF2860 RET
	0x03DF2864 STR X30, [X31 - 0x10]!
	0x03DF2868 CBZ X0, 0x3DF289C
	0x03DF286C LDR W8, [X0 + 0x50]
	0x03DF2870 ANDS W31, W1, 0x1
	0x03DF2874 MOVZ W9, 0x200
	0x03DF2878 LDR X10, [X0]
	0x03DF287C CSEL W9, W9, W31, NE
	0x03DF2880 AND W8, W8, 0xFFFFFDFF
	0x03DF2884 ORR W8, W8, W9, 0x0
	0x03DF2888 STR W8, [X0 + 0x50]
	0x03DF288C LDR X2, [X10 + 0x738]
	0x03DF2890 LDR X1, [X10 + 0x740]
	0x03DF2894 LDR X30, [X31], #0x10
	0x03DF2898 BR X2
	0x03DF289C BL 0x1C16F20
	0x03DF28A0 RET
	0x03DF28A4 STP D9, D8, [X31 - 0x20]!
	0x03DF28A8 STR X30, [X31 + 0x10]
	0x03DF28AC MOV V8.16B, V1.16B
	0x03DF28B0 MOV V9.16B, V0.16B
	0x03DF28B4 BL 0x3DEC528
	0x03DF28B8 FCMP S8, 0x0
	0x03DF28BC MOV W0, W31
	0x03DF28C0 B.LT 0x3DF28EC
	0x03DF28C4 FCMP S9, 0x0
	0x03DF28C8 B.LT 0x3DF28EC
	0x03DF28CC FMOV S0, W31
	0x03DF28D0 FADD S0, S2, S0
	0x03DF28D4 FCMP S9, S0
	0x03DF28D8 B.PL 0x3DF28EC
	0x03DF28DC FMOV S0, W31
	0x03DF28E0 FADD S0, S3, S0
	0x03DF28E4 FCMP S8, S0
	0x03DF28E8 CSET W0, MI
	0x03DF28EC LDR X30, [X31 + 0x10]
	0x03DF28F0 LDP D9, D8, [X31], #0x20
	0x03DF28F4 RET
	0x03DF28F8 LDRB W8, [X0 + 0x51]
	0x03DF28FC AND W0, W8, 0x1
	0x03DF2900 RET
	0x03DF2904 STP X30, X19, [X31 - 0x10]!
	0x03DF2908 CBZ X0, 0x3DF2974
	0x03DF290C LDR W8, [X0 + 0x50]
	0x03DF2910 MOV X19, X0
	0x03DF2914 LDR X0, [X0 + 0x2B8]
	0x03DF2918 ANDS W31, W1, 0x1
	0x03DF291C MOVZ W9, 0x100
	0x03DF2920 AND W8, W8, 0xFFFFFEFF
	0x03DF2924 CSEL W9, W9, W31, NE
	0x03DF2928 ORR W8, W8, W9, 0x0
	0x03DF292C STR W8, [X19 + 0x50]
	0x03DF2930 TBZ X1, 0x0, 0x3DF2950
	0x03DF2934 CBZ X0, 0x3DF2974
	0x03DF2938 MOV X1, X31
	0x03DF293C BL 0x3CE6FD4
	0x03DF2940 TBNZ X0, 0x0, 0x3DF296C
	0x03DF2944 MOV X0, X19
	0x03DF2948 LDP X30, X19, [X31], #0x10
	0x03DF294C B 0x3DF2978
	0x03DF2950 CBZ X0, 0x3DF2974
	0x03DF2954 MOV X1, X31
	0x03DF2958 BL 0x3CE6FD4
	0x03DF295C TBZ X0, 0x0, 0x3DF296C
	0x03DF2960 MOV X0, X19
	0x03DF2964 LDP X30, X19, [X31], #0x10
	0x03DF2968 B 0x3DF2A08
	0x03DF296C LDP X30, X19, [X31], #0x10
	0x03DF2970 RET
	0x03DF2974 BL 0x1C16F20
	0x03DF2978 STR X30, [X31 - 0x30]!
	0x03DF297C STP X22, X21, [X31 + 0x10]
	0x03DF2980 STP X20, X19, [X31 + 0x20]
	0x03DF2984 ADRP X20, 0x5F6000
	0x03DF2988 ADRP X22, 0x377000
	0x03DF298C ADRP X21, 0x377000
	0x03DF2990 LDRB W8, [X20 + 0x255]
	0x03DF2994 LDR X22, [X22 + 0x9C0]
	0x03DF2998 LDR X21, [X21 + 0x9C8]
	0x03DF299C MOV X19, X0
	0x03DF29A0 TBNZ X8, 0x0, 0x3DF29C4
	0x03DF29A4 ADRP X0, 0x377000
	0x03DF29A8 LDR X0, [X0 + 0x9C0]
	0x03DF29AC BL 0x1C16CF4
	0x03DF29B0 ADRP X0, 0x377000
	0x03DF29B4 LDR X0, [X0 + 0x9C8]
	0x03DF29B8 BL 0x1C16CF4
	0x03DF29BC MOVZ W8, 0x1
	0x03DF29C0 STRB W8, [X20 + 0x255]
	0x03DF29C4 LDR X0, [X22]
	0x03DF29C8 LDR X20, [X19 + 0x2B8]
	0x03DF29CC BL 0x1C16F10
	0x03DF29D0 LDR X2, [X21]
	0x03DF29D4 MOV X1, X19
	0x03DF29D8 MOV X3, X31
	0x03DF29DC MOV X21, X0
	0x03DF29E0 BL 0x3CE4D54
	0x03DF29E4 CBZ X20, 0x3DF2A04
	0x03DF29E8 MOV X0, X20
	0x03DF29EC MOV X1, X21
	0x03DF29F0 LDP X20, X19, [X31 + 0x20]
	0x03DF29F4 LDP X22, X21, [X31 + 0x10]
	0x03DF29F8 MOV X2, X31
	0x03DF29FC LDR X30, [X31], #0x30
	0x03DF2A00 B 0x3CE7BEC
	0x03DF2A04 BL 0x1C16F20
	0x03DF2A08 STR X30, [X31 - 0x10]!
	0x03DF2A0C LDR X0, [X0 + 0x2B8]
	0x03DF2A10 CBZ X0, 0x3DF2A24
	0x03DF2A14 MOV X1, X31
	0x03DF2A18 MOV X2, X31
	0x03DF2A1C LDR X30, [X31], #0x10
	0x03DF2A20 B 0x3CE7BEC
	0x03DF2A24 BL 0x1C16F20
	0x03DF2A28 MOVZ W8, 0x7FC00000
	0x03DF2A2C FMOV S0, W8
	0x03DF2A30 MOV V1.16B, V0.16B
	0x03DF2A34 RET
	0x03DF2A38 STP D11, D10, [X31 - 0x60]!
	0x03DF2A3C STP D9, D8, [X31 + 0x10]
	0x03DF2A40 STR X30, [X31 + 0x20]
	0x03DF2A44 STP X24, X23, [X31 + 0x30]
	0x03DF2A48 STP X22, X21, [X31 + 0x40]
	0x03DF2A4C STP X20, X19, [X31 + 0x50]
	0x03DF2A50 ADRP X24, 0x5F6000
	0x03DF2A54 ADRP X23, 0x301000
	0x03DF2A58 LDRB W8, [X24 + 0x256]
	0x03DF2A5C LDR X23, [X23 + 0xA28]
	0x03DF2A60 MOV W20, W3
	0x03DF2A64 MOV V8.16B, V1.16B
	0x03DF2A68 MOV W21, W2
	0x03DF2A6C MOV V9.16B, V0.16B
	0x03DF2A70 MOV X22, X1
	0x03DF2A74 MOV X19, X0
	0x03DF2A78 TBNZ X8, 0x0, 0x3DF2A9C
	0x03DF2A7C ADRP X0, 0x301000
	0x03DF2A80 LDR X0, [X0 + 0xA28]
	0x03DF2A84 BL 0x1C16CF4
	0x03DF2A88 ADRP X0, 0x377000
	0x03DF2A8C LDR X0, [X0 + 0x9D0]
	0x03DF2A90 BL 0x1C16CF4
	0x03DF2A94 MOVZ W8, 0x1
	0x03DF2A98 STRB W8, [X24 + 0x256]
	0x03DF2A9C LDR X0, [X23]
	0x03DF2AA0 ADRP X24, 0x377000
	0x03DF2AA4 LDR X23, [X19 + 0x2B8]
	0x03DF2AA8 LDR W8, [X0 + 0xE0]
	0x03DF2AAC LDR X24, [X24 + 0x9D0]
	0x03DF2AB0 CBNZ W8, 0x3DF2AB8
	0x03DF2AB4 BL 0x1C16DFC
	0x03DF2AB8 LDR X1, [X24]
	0x03DF2ABC CMP X23, X22
	0x03DF2AC0 CSET W0, EQ
	0x03DF2AC4 MOV X2, X31
	0x03DF2AC8 BL 0x3C06F88
	0x03DF2ACC LDR X8, [X19]
	0x03DF2AD0 MOV X0, X19
	0x03DF2AD4 MOV V0.16B, V9.16B
	0x03DF2AD8 MOV W1, W21
	0x03DF2ADC LDR X9, [X8 + 0x758]
	0x03DF2AE0 LDR X3, [X8 + 0x760]
	0x03DF2AE4 MOV V1.16B, V8.16B
	0x03DF2AE8 MOV W2, W20
	0x03DF2AEC BLR X9
	0x03DF2AF0 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X21, 0x5F7000
	010 Move W8, [X21+588]
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x32B000
	018 Move X0, [X0+3712]
	019 Call 0x1C17CF4
	020 Move X0, 0x378000
	021 Move X0, [X0+2400]
	022 Call 0x1C17CF4
	023 Move X0, 0x378000
	024 Move X0, [X0+2408]
	025 Call 0x1C17CF4
	026 Move X0, 0x378000
	027 Move X0, [X0+2416]
	028 Call 0x1C17CF4
	029 Move X0, 0x32A000
	030 Move X0, [X0+2200]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+588], W8
	034 Move [X31+16], X31
	035 Move [X31+24], X31
	036 Move [X31+40], X31
	037 Move W22, [X19+684]
	038 Move TEMP, X20
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {65}
	042 Move X0, X19
	043 Call VisualElement.get_isParentEnabledInHierarchy, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {84}
	048 Move X21, 0x32A000
	049 Move X21, [X21+2200]
	050 Move W20, [X19+812]
	051 Move X0, [X21]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X21]
	057 Move X8, [X0+184]
	058 Move X0, X19
	059 Move X1, [X8+24]
	060 Compare W20, 0
	061 JumpIfEqual {83}
	062 Call VisualElement.RemoveFromClassList, X0, X1
	063 Move W8, [X19+684]
	064 And W1, W8, 0xFFFFFFDF
	065 Move X20, 0x32A000
	066 Move X20, [X20+2200]
	067 Move X0, [X20]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X20]
	073 Move X8, [X0+184]
	074 Move X0, X19
	075 Move X20, [X8+24]
	076 Call VisualElement.get_isParentEnabledInHierarchy, X0
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {95}
	081 Move X0, X19
	082 Move X1, X20
	083 Call VisualElement.AddToClassList, X0, X1
	084 Move X20, 0x32A000
	085 Move X20, [X20+2200]
	086 Move X0, [X20]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {92}
	090 Call 0x1C17DFC
	091 Move X0, [X20]
	092 Move X8, [X0+184]
	093 Move X0, X19
	094 Move X1, [X8+24]
	095 Move X0, X19
	096 Move X1, X20
	097 Call VisualElement.RemoveFromClassList, X0, X1
	098 Move X8, [X19]
	099 Move X0, X19
	100 Move X9, [X8+552]
	101 Move X1, [X8+560]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Compare X0, 0
	104 JumpIfEqual {206}
	105 Move X8, [X19]
	106 Move X0, X19
	107 Move X9, [X8+552]
	108 Move X1, [X8+560]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Compare X0, 0
	111 JumpIfEqual {226}
	112 Move X1, X19
	113 Move X2, X31
	114 Call FocusController.IsFocused, X0, X1
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {206}
	119 Move [X31+16], X31
	120 Move [X31+24], X31
	121 Move X20, [X19+928]
	122 Compare X20, 0
	123 JumpIfEqual {167}
	124 Move X21, 0x32B000
	125 Move X8, [X20]
	126 Move X21, [X21+3712]
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 Move X1, [X21]
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move W2, 1
	138 Move X0, X20
	139 Call 0x1C5D788
	140 Move W9, [X10]
	141 Add W9, W9, 1
	142 Add X8, X8, W9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X20
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Compare X0, 0
	149 JumpIfEqual {167}
	150 Move X20, [X19+928]
	151 Compare X20, 0
	152 JumpIfEqual {226}
	153 Move X8, [X20]
	154 Move X1, [X21]
	155 NotImplemented "Instruction LDRH not yet implemented."
	156 Compare X9, 0
	157 JumpIfEqual {164}
	158 Move X10, [X8+176]
	159 Add X10, X10, 8
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Subtract X9, X9, 1
	163 Add X10, X10, 16
	164 Move W2, 1
	165 Move X0, X20
	166 Call 0x1C5D788
	167 Move X23, X31
	168 Move W24, W31
	169 Move W9, [X10]
	170 Add W9, W9, 1
	171 Add X8, X8, W9
	172 Add X0, X8, 312
	173 Move X8, [X0]
	174 Move X1, [X0+8]
	175 Move X0, X20
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move X1, X0
	178 Add X0, X31, 8
	179 Move X2, X31
	180 Move [X31+8], X31
	181 Call EventDispatcherGate..ctor, X0, X1
	182 Move X8, 0x378000
	183 Move X1, [X31+8]
	184 Move X8, [X8+2408]
	185 Add X0, X31, 16
	186 Move X2, [X8]
	187 Call Nullable`1<EventDispatcherGate>..ctor, X0, X1
	188 Move W24, [X31+16]
	189 Move X23, [X31+24]
	190 Move X0, X19
	191 Move X1, X31
	192 Call Focusable.BlurImmediately, X0
	193 Move X20, X31
	194 Move W21, 15
	195 Compare W24, 0
	196 JumpIfEqual {201}
	197 Add X0, X31, 40
	198 Move X1, X31
	199 Move [X31+40], X23
	200 Call EventDispatcherGate.Dispose, X0
	201 Compare X20, 0
	202 JumpIfNotEqual {227}
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Compare W21, 0
	205 JumpIfNotEqual {216}
	206 Move W8, [X19+684]
	207 Or W1, W8, 32
	208 Move X0, X19
	209 Call VisualElement.set_pseudoStates, X0, X1
	210 Move W8, [X19+684]
	211 And W31, W22, 32
	212 NotImplemented "Instruction CSET not yet implemented."
	213 And W31, W8, 32
	214 NotImplemented "Instruction CSET not yet implemented."
	215 Xor W8, W9, W8
	216 Move X20, [X31+80]
	217 Move X19, [X31+88]
	218 Move X22, [X31+64]
	219 Move X21, [X31+72]
	220 Move X24, [X31+48]
	221 Move X23, [X31+56]
	222 Move X30, [X31+32]
	223 And W0, W8, 1
	224 Add X31, X31, 96
	225 Return X0
	226 Call 0x1C17F20
	227 Move X0, X20
	228 Call 0x1C17F18
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X21, X0
	231 Move X0, X21
	232 Call 0x3EB2AD0
	233 Move X20, [X0]
	234 Call 0x3EB2AE0
	235 Move W21, W31
	236 Compare W24, 0
	237 JumpIfNotEqual {197}
	238 Move X20, X31
	239 Move X21, X0
	240 Compare W24, 0
	241 JumpIfEqual {246}
	242 Move [X31+40], X23
	243 Add X0, X31, 40
	244 Move X1, X31
	245 Call EventDispatcherGate.Dispose, X0
	246 Compare X20, 0
	247 JumpIfNotEqual {250}
	248 Move X0, X21
	249 Call 0x1D2D690
	250 Move X0, X20
	251 Call 0x1C17F18
	252 Call 0x1991590

Method: System.Boolean get_isParentEnabledInHierarchy()

Disassembly:
	0x03DF2AF4 MOV V8.16B, V0.16B
	0x03DF2AF8 MOV V9.16B, V1.16B
	0x03DF2AFC BL 0x3DEC4BC
	0x03DF2B00 ADRP X8, 0xFFFFFFFFFCCF8000
	0x03DF2B04 LDR V11, [X8 + 0x20C]
	0x03DF2B08 MOV V10.16B, V0.16B
	0x03DF2B0C MOV V0.16B, V8.16B
	0x03DF2B10 MOV V1.16B, V10.16B
	0x03DF2B14 MOV V2.16B, V11.16B
	0x03DF2B18 MOV X0, X31
	0x03DF2B1C BL 0x3CE8140
	0x03DF2B20 MOV V8.16B, V0.16B
	0x03DF2B24 MOV V0.16B, V9.16B
	0x03DF2B28 MOV V1.16B, V10.16B
	0x03DF2B2C MOV V2.16B, V11.16B
	0x03DF2B30 MOV X0, X31
	0x03DF2B34 BL 0x3CE8140
	0x03DF2B38 MOV V1.16B, V0.16B
	0x03DF2B3C MOV V0.16B, V8.16B
	0x03DF2B40 LDP X20, X19, [X31 + 0x50]
	0x03DF2B44 LDP X22, X21, [X31 + 0x40]
	0x03DF2B48 LDP X24, X23, [X31 + 0x30]
	0x03DF2B4C LDR X30, [X31 + 0x20]
	0x03DF2B50 LDP D9, D8, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X8, [X0+888]
	005 Move X19, X0
	006 Add X0, X31, 8
	007 Move X1, X31
	008 Move [X31+8], X8
	009 Call Hierarchy.get_parent, X0
	010 Compare X0, 0
	011 JumpIfEqual {22}
	012 Move X8, [X19+888]
	013 Add X0, X31, 8
	014 Move X1, X31
	015 Move [X31+8], X8
	016 Call Hierarchy.get_parent, X0
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move W8, [X0+684]
	020 And W31, W8, 32
	021 NotImplemented "Instruction CSET not yet implemented."
	022 Move W0, 1
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Add X31, X31, 32
	026 Return X0
	027 Call 0x1C17F20

Method: System.Boolean get_enabledInHierarchy()

Disassembly:
	0x03DED00C LDRH W10, [X9 + 0x12E]
	0x03DED010 CBZ X10, 0x3DED034
	0x03DED014 LDR X11, [X9 + 0xB0]
	0x03DED018 ADD X11, X11, 0x8

ISIL:
	001 Move W8, [X0+684]
	002 And W31, W8, 32
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_enabledSelf()

Disassembly:
	0x03DF2E8C B.EQ 0x3DF2F5C
	0x03DF2E90 ADRP X9, 0x301000

ISIL:
	001 Move W0, [X0+812]
	002 Return X0

Method: System.Void set_enabledSelf(System.Boolean value)

Disassembly:
	0x03DF2E94 LDR X9, [X9 + 0xDD8]
	0x03DF2E98 CMP W8, 0x2
	0x03DF2E9C LDR X10, [X9]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+812], W8
	003 Return 

Method: System.Void SetEnabled(System.Boolean value)

Disassembly:
	0x03DF0834 SUBS X9, X9, 0x1
	0x03DF0838 ADD X10, X10, 0x10
	0x03DF083C B.NE 0x3DF0828
	0x03DF0840 MOVZ W2, 0x1
	0x03DF0844 MOV X0, X22
	0x03DF0848 BL 0x1C5C788
	0x03DF084C B 0x3DF0860
	0x03DF0850 LDR W9, [X10]
	0x03DF0854 ADD W9, W9, 0x1

ISIL:
	001 Move W8, [X0+812]
	002 And W1, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move [X0+812], W1
	007 Call VisualElement.PropagateEnabledToChildren, X0, X1
	008 Return 
	009 Return 

Method: System.Void PropagateEnabledToChildren(System.Boolean value)

Disassembly:
	0x03DF2EA0 STR X10, [X20 + 0x28]
	0x03DF2EA4 B.LS 0x3DF2F5C
	0x03DF2EA8 LDR X10, [X19 + 0x38]
	0x03DF2EAC CMP W8, 0x3
	0x03DF2EB0 STR X10, [X20 + 0x30]
	0x03DF2EB4 B.EQ 0x3DF2F5C
	0x03DF2EB8 LDR X8, [X9]
	0x03DF2EBC MOV X0, X19
	0x03DF2EC0 STR X8, [X20 + 0x38]
	0x03DF2EC4 BL 0x3DEC528
	0x03DF2EC8 ADD X0, X31, 0x0
	0x03DF2ECC MOV X1, X31
	0x03DF2ED0 MOV X2, X31
	0x03DF2ED4 MOV X3, X31
	0x03DF2ED8 STP S0, S1, [X31]
	0x03DF2EDC STP S2, S3, [X31 + 0x8]
	0x03DF2EE0 BL 0x3C0B938
	0x03DF2EE4 LDR W8, [X20 + 0x18]
	0x03DF2EE8 CMP W8, 0x4
	0x03DF2EEC B.LS 0x3DF2F5C
	0x03DF2EF0 CMP W8, 0x5
	0x03DF2EF4 STR X0, [X20 + 0x40]
	0x03DF2EF8 B.EQ 0x3DF2F5C
	0x03DF2EFC ADRP X8, 0x377000
	0x03DF2F00 LDR X8, [X8 + 0x9D8]
	0x03DF2F04 MOV X0, X19
	0x03DF2F08 LDR X8, [X8]
	0x03DF2F0C STR X8, [X20 + 0x48]
	0x03DF2F10 BL 0x3DEDC10
	0x03DF2F14 ADD X0, X31, 0x0
	0x03DF2F18 MOV X1, X31
	0x03DF2F1C MOV X2, X31
	0x03DF2F20 MOV X3, X31
	0x03DF2F24 STP S0, S1, [X31]
	0x03DF2F28 STP S2, S3, [X31 + 0x8]
	0x03DF2F2C BL 0x3C0B938
	0x03DF2F30 LDR W8, [X20 + 0x18]
	0x03DF2F34 CMP W8, 0x6
	0x03DF2F38 B.LS 0x3DF2F5C
	0x03DF2F3C STR X0, [X20 + 0x50]
	0x03DF2F40 MOV X0, X20
	0x03DF2F44 MOV X1, X31
	0x03DF2F48 BL 0x32278CC
	0x03DF2F4C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x5F7000
	008 Move W8, [X21+589]
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x32B000
	016 Move X0, [X0+232]
	017 Call 0x1C17CF4
	018 Move X0, 0x32B000
	019 Move X0, [X0+240]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+589], W8
	023 And W1, W19, 1
	024 Move X0, X20
	025 Call VisualElement.SetEnabledFromHierarchyPrivate, X0, X1
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {51}
	030 Move X0, [X20+920]
	031 Compare X0, 0
	032 JumpIfEqual {50}
	033 Move W22, [X0+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X23, 0x32B000
	036 Move X23, [X23+240]
	037 Move W21, W31
	038 Move X2, [X23]
	039 Move W1, W21
	040 Call List`1<Object>.get_Item, X0, X1
	041 Compare X0, 0
	042 JumpIfEqual {50}
	043 And W1, W19, 1
	044 Call VisualElement.PropagateEnabledToChildren, X0, X1
	045 Add W21, W21, 1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, [X20+920]
	048 Compare X0, 0
	049 JumpIfNotEqual {38}
	050 Call 0x1C17F20
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Return 

Method: UnityEngine.UIElements.LanguageDirection get_languageDirection()

Disassembly:
	0x03DF2F50 LDP X30, X21, [X31 + 0x10]
	0x03DF2F54 ADD X31, X31, 0x30

ISIL:
	001 Move W0, [X0+816]
	002 Return X0

Method: UnityEngine.UIElements.LanguageDirection get_localLanguageDirection()

Disassembly:
	0x03DF2F58 RET
	0x03DF2F5C BL 0x1C16F28

ISIL:
	001 Move W0, [X0+820]
	002 Return X0

Method: System.Void set_localLanguageDirection(UnityEngine.UIElements.LanguageDirection value)

Disassembly:
	0x03DF2F60 BL 0x1C16F20
	0x03DF2F64 LDR X0, [X0 + 0x40]
	0x03DF2F68 RET
	0x03DF2F6C STP X30, X23, [X31 - 0x30]!
	0x03DF2F70 STP X22, X21, [X31 + 0x10]
	0x03DF2F74 STP X20, X19, [X31 + 0x20]
	0x03DF2F78 ADRP X21, 0x5F6000
	0x03DF2F7C LDRB W8, [X21 + 0x25C]
	0x03DF2F80 MOV X19, X1
	0x03DF2F84 MOV X20, X0
	0x03DF2F88 TBNZ X8, 0x0, 0x3DF2FAC
	0x03DF2F8C ADRP X0, 0x302000
	0x03DF2F90 LDR X0, [X0 + 0x1C8]
	0x03DF2F94 BL 0x1C16CF4
	0x03DF2F98 ADRP X0, 0x329000
	0x03DF2F9C LDR X0, [X0 + 0xB58]
	0x03DF2FA0 BL 0x1C16CF4
	0x03DF2FA4 MOVZ W8, 0x1
	0x03DF2FA8 STRB W8, [X21 + 0x25C]
	0x03DF2FAC LDR X0, [X20 + 0x40]
	0x03DF2FB0 CBZ X0, 0x3DF2FFC
	0x03DF2FB4 ADRP X22, 0x329000
	0x03DF2FB8 LDR X22, [X22 + 0xB58]
	0x03DF2FBC MOV W21, W31
	0x03DF2FC0 LDR W23, [X0 + 0x18]
	0x03DF2FC4 CMP W21, W23
	0x03DF2FC8 B.GE 0x3DF3000
	0x03DF2FCC LDR X2, [X22]
	0x03DF2FD0 MOV W1, W21
	0x03DF2FD4 BL 0x301BCCC
	0x03DF2FD8 CBZ X0, 0x3DF2FFC
	0x03DF2FDC MOVZ W2, 0x4
	0x03DF2FE0 MOV X1, X19
	0x03DF2FE4 MOV X3, X31
	0x03DF2FE8 BL 0x322697C
	0x03DF2FEC TBNZ X0, 0x0, 0x3DF3000
	0x03DF2FF0 LDR X0, [X20 + 0x40]
	0x03DF2FF4 ADD W21, W21, 0x1
	0x03DF2FF8 CBNZ X0, 0x3DF2FC0
	0x03DF2FFC BL 0x1C16F20
	0x03DF3000 CMP W21, W23
	0x03DF3004 LDP X20, X19, [X31 + 0x20]
	0x03DF3008 LDP X22, X21, [X31 + 0x10]
	0x03DF300C CSET W0, LT
	0x03DF3010 LDP X30, X23, [X31], #0x30
	0x03DF3014 RET
	0x03DF3018 STR X30, [X31 - 0x30]!
	0x03DF301C STP X22, X21, [X31 + 0x10]
	0x03DF3020 STP X20, X19, [X31 + 0x20]
	0x03DF3024 ADRP X22, 0x5F5000
	0x03DF3028 ADRP X21, 0x328000
	0x03DF302C LDRB W8, [X22 + 0x25D]
	0x03DF3030 LDR X21, [X21 + 0x898]
	0x03DF3034 MOV X20, X1
	0x03DF3038 MOV X19, X0
	0x03DF303C TBNZ X8, 0x0, 0x3DF3054
	0x03DF3040 ADRP X0, 0x328000
	0x03DF3044 LDR X0, [X0 + 0x898]
	0x03DF3048 BL 0x1C16CF4
	0x03DF304C MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5F7000
	007 Move W8, [X21+590]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x32B000
	015 Move X0, [X0+232]
	016 Call 0x1C17CF4
	017 Move X0, 0x32B000
	018 Move X0, [X0+240]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+590], W8
	022 Move W8, [X19+820]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X0, [X19+928]
	025 Move [X19+820], W20
	026 Compare X0, 0
	027 JumpIfEqual {34}
	028 Move X8, [X0]
	029 Move W2, 8
	030 Move X1, X19
	031 Move X9, [X8+824]
	032 Move X3, [X8+832]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X0, [X19+920]
	035 Compare X0, 0
	036 JumpIfEqual {65}
	037 Move W8, [X0+24]
	038 Subtract W21, W8, 1
	039 Move X22, 0x32B000
	040 Move X22, [X22+240]
	041 Move W20, W31
	042 Move X2, [X22]
	043 Move W1, W20
	044 Call List`1<Object>.get_Item, X0, X1
	045 Compare X0, 0
	046 JumpIfEqual {65}
	047 Move W8, [X0+816]
	048 Compare W8, 0
	049 JumpIfNotEqual {60}
	050 Move X0, [X19+920]
	051 Compare X0, 0
	052 JumpIfEqual {65}
	053 Move X2, [X22]
	054 Move W1, W20
	055 Call List`1<Object>.get_Item, X0, X1
	056 Compare X0, 0
	057 JumpIfEqual {65}
	058 Move W1, [X19+820]
	059 Call VisualElement.set_localLanguageDirection, X0, X1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, [X19+920]
	062 Add W20, W20, 1
	063 Compare X0, 0
	064 JumpIfNotEqual {42}
	065 Call 0x1C17F20
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Return 

Method: System.Boolean get_visible()

Disassembly:
	0x03DECF60 LDP X8, X3, [X0]
	0x03DECF64 MOV X0, X19
	0x03DECF68 MOV X1, X20
	0x03DECF6C MOV X2, X21
	0x03DECF70 BLR X8
	0x03DECF74 MOVZ W0, 0x1
	0x03DECF78 MOV X1, X31
	0x03DECF7C BL 0x3DFD0B0
	0x03DECF80 LDR X9, [X19]
	0x03DECF84 LDR X8, [X22]
	0x03DECF88 MOV X20, X0
	0x03DECF8C AND X21, X1, 0x0
	0x03DECF90 LDRH W10, [X9 + 0x12E]
	0x03DECF94 CBZ X10, 0x3DECFB8
	0x03DECF98 LDR X11, [X9 + 0xB0]
	0x03DECF9C ADD X11, X11, 0x8
	0x03DECFA0 LDUR X12, [X11 - 0x8]
	0x03DECFA4 CMP X12, X8
	0x03DECFA8 B.EQ 0x3DECFCC
	0x03DECFAC SUBS X10, X10, 0x1
	0x03DECFB0 ADD X11, X11, 0x10
	0x03DECFB4 B.NE 0x3DECFA0
	0x03DECFB8 MOVZ W2, 0x1A
	0x03DECFBC MOV X0, X19
	0x03DECFC0 MOV X1, X8
	0x03DECFC4 BL 0x1C5C788
	0x03DECFC8 B 0x3DECFDC
	0x03DECFCC LDR W8, [X11]
	0x03DECFD0 ADD W8, W8, 0x1A
	0x03DECFD4 ADD X8, X9, W8, 0x4, SXTW
	0x03DECFD8 ADD X0, X8, 0x138
	0x03DECFDC LDP X8, X3, [X0]
	0x03DECFE0 MOV X0, X19
	0x03DECFE4 MOV X1, X20
	0x03DECFE8 MOV X2, X21
	0x03DECFEC BLR X8
	0x03DECFF0 MOVZ W0, 0x1
	0x03DECFF4 MOV X1, X31
	0x03DECFF8 BL 0x3DFD0B0
	0x03DECFFC LDR X9, [X19]
	0x03DED000 LDR X8, [X22]
	0x03DED004 MOV X20, X0
	0x03DED008 AND X21, X1, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5FD000
	005 Move W8, [X20+591]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x331000
	012 Move X0, [X0+288]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+591], W8
	016 Compare X19, 0
	017 JumpIfEqual {48}
	018 Move X10, 0x331000
	019 Move X8, [X19]
	020 Move X10, [X10+288]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X1, [X10]
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 43
	032 Move X0, X19
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 43
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X8, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 Move X30, [X31+32]
	047 Return X0
	048 Call 0x1C17F20

Method: System.Void set_visible(System.Boolean value)

Disassembly:
	0x03DF3050 STRB W8, [X22 + 0x25D]
	0x03DF3054 LDR X0, [X21]
	0x03DF3058 STR X31, [X31 + 0x8]
	0x03DF305C LDR W8, [X0 + 0xE0]
	0x03DF3060 CBNZ W8, 0x3DF3068
	0x03DF3064 BL 0x1C16DFC
	0x03DF3068 AND X20, X20, 0x0
	0x03DF306C MOV X0, X20
	0x03DF3070 BL 0x3DF3098
	0x03DF3074 ADD X2, X31, 0x8
	0x03DF3078 MOV X0, X19
	0x03DF307C MOV X1, X20
	0x03DF3080 BL 0x3DEBAA8
	0x03DF3084 LDR X0, [X31 + 0x8]
	0x03DF3088 LDP X20, X19, [X31 + 0x20]
	0x03DF308C LDP X22, X21, [X31 + 0x10]
	0x03DF3090 LDR X30, [X31], #0x30
	0x03DF3094 RET
	0x03DF3098 STR X30, [X31 - 0x20]!
	0x03DF309C STP X20, X19, [X31 + 0x10]
	0x03DF30A0 ADRP X20, 0x5F5000
	0x03DF30A4 LDRB W8, [X20 + 0x261]
	0x03DF30A8 MOV X19, X0
	0x03DF30AC TBNZ X8, 0x0, 0x3DF30C4
	0x03DF30B0 ADRP X0, 0x328000
	0x03DF30B4 LDR X0, [X0 + 0x898]
	0x03DF30B8 BL 0x1C16CF4
	0x03DF30BC MOVZ W8, 0x1
	0x03DF30C0 STRB W8, [X20 + 0x261]
	0x03DF30C4 AND X19, X19, 0x0
	0x03DF30C8 MOV X0, X19
	0x03DF30CC MOV X1, X31
	0x03DF30D0 BL 0x3C306B8
	0x03DF30D4 TBNZ X0, 0x0, 0x3DF3118
	0x03DF30D8 ADRP X20, 0x328000
	0x03DF30DC LDR X20, [X20 + 0x898]
	0x03DF30E0 LDR X0, [X20]
	0x03DF30E4 LDR W8, [X0 + 0xE0]
	0x03DF30E8 CBNZ W8, 0x3DF30F4
	0x03DF30EC BL 0x1C16DFC
	0x03DF30F0 LDR X0, [X20]
	0x03DF30F4 LDR X8, [X0 + 0xB8]
	0x03DF30F8 MOV X0, X19
	0x03DF30FC MOV X2, X31
	0x03DF3100 LDR W1, [X8 + 0x10]
	0x03DF3104 BL 0x3C306C4
	0x03DF3108 TBNZ X0, 0x0, 0x3DF3160
	0x03DF310C LDP X20, X19, [X31 + 0x10]
	0x03DF3110 LDR X30, [X31], #0x20
	0x03DF3114 RET
	0x03DF3118 ADRP X0, 0x305000
	0x03DF311C LDR X0, [X0 + 0x528]
	0x03DF3120 BL 0x1C16D08
	0x03DF3124 BL 0x1C16F10
	0x03DF3128 MOV X19, X0
	0x03DF312C ADRP X0, 0x32A000
	0x03DF3130 LDR X0, [X0 + 0x70]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5F6000
	007 Move X21, 0x375000
	008 Move W8, [X22+592]
	009 Move X21, [X21+3008]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x32A000
	017 Move X0, [X0+296]
	018 Call 0x1C17CF4
	019 Move X0, 0x375000
	020 Move X0, [X0+3008]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+592], W8
	024 Move X0, X19
	025 Call VisualElement.get_style, X0
	026 Move X1, [X21]
	027 NotImplemented "Instruction ORN not yet implemented."
	028 Move X19, X0
	029 And W0, W8, 1
	030 Call 0x266FACC, X0
	031 Compare X19, 0
	032 JumpIfEqual {64}
	033 Move X10, 0x32A000
	034 Move X8, [X19]
	035 Move X10, [X10+296]
	036 Move X20, X0
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X10]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move W2, 52
	048 Move X0, X19
	049 Call 0x1C5D788
	050 Move W9, [X10]
	051 Add W9, W9, 52
	052 Add X8, X8, W9
	053 Add X0, X8, 312
	054 Move X3, [X0]
	055 Move X2, [X0+8]
	056 Move X0, X19
	057 Move X1, X20
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 CallNoReturn X3
	064 Call 0x1C17F20

Method: System.Void MarkDirtyRepaint()

Disassembly:
	0x03DF3134 BL 0x1C16D08
	0x03DF3138 MOV X1, X0
	0x03DF313C MOV X0, X19
	0x03DF3140 MOV X2, X31
	0x03DF3144 BL 0x330E100
	0x03DF3148 ADRP X0, 0x376000
	0x03DF314C LDR X0, [X0 + 0x9E0]
	0x03DF3150 BL 0x1C16D08
	0x03DF3154 MOV X1, X0

ISIL:
	001 Move X1, X0
	002 Move X0, [X0+928]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move W2, 2048
	007 Move X4, [X8+824]
	008 Move X3, [X8+832]
	009 CallNoReturn X4
	010 Return 

Method: System.Action`1<UnityEngine.UIElements.MeshGenerationContext> get_generateVisualContent()

Disassembly:
	0x03DF3158 MOV X0, X19
	0x03DF315C BL 0x1C16DEC

ISIL:
	001 Move X0, [X0+824]
	002 Return X0

Method: System.Void set_generateVisualContent(System.Action`1<UnityEngine.UIElements.MeshGenerationContext> value)

Disassembly:
	0x03DF3160 ADRP X19, 0x328000
	0x03DF3164 LDR X19, [X19 + 0x898]

ISIL:
	001 Move [X0+824], X1
	002 Return 

Method: System.Void InvokeGenerateVisualContent(UnityEngine.UIElements.MeshGenerationContext mgc)

Disassembly:
	0x03DF3168 MOV X0, X19
	0x03DF316C BL 0x1C16D08
	0x03DF3170 BL 0x19903D0
	0x03DF3174 MOV X0, X19
	0x03DF3178 BL 0x1C16D08
	0x03DF317C LDR X8, [X0 + 0xB8]
	0x03DF3180 ADRP X0, 0x36C000
	0x03DF3184 LDR W8, [X8 + 0x10]
	0x03DF3188 STR W8, [X31 + 0x8]
	0x03DF318C LDR X0, [X0 + 0x350]
	0x03DF3190 BL 0x1C16D08
	0x03DF3194 ADD X1, X31, 0x8
	0x03DF3198 BL 0x1C16E04
	0x03DF319C MOV X19, X0
	0x03DF31A0 ADRP X0, 0x376000
	0x03DF31A4 LDR X0, [X0 + 0x9E8]
	0x03DF31A8 BL 0x1C16D08
	0x03DF31AC MOV X1, X19
	0x03DF31B0 MOV X2, X31
	0x03DF31B4 BL 0x321EFD0
	0x03DF31B8 MOV X19, X0
	0x03DF31BC ADRP X0, 0x300000
	0x03DF31C0 LDR X0, [X0 + 0x5B0]
	0x03DF31C4 BL 0x1C16D08
	0x03DF31C8 BL 0x1C16F10
	0x03DF31CC MOV X1, X19
	0x03DF31D0 MOV X2, X31
	0x03DF31D4 MOV X20, X0
	0x03DF31D8 BL 0x337DF1C
	0x03DF31DC ADRP X0, 0x376000
	0x03DF31E0 LDR X0, [X0 + 0x9E0]
	0x03DF31E4 BL 0x1C16D08
	0x03DF31E8 MOV X1, X0
	0x03DF31EC MOV X0, X20
	0x03DF31F0 BL 0x1C16DEC
	0x03DF31F4 STP X30, X23, [X31 - 0x30]!
	0x03DF31F8 STP X22, X21, [X31 + 0x10]
	0x03DF31FC STP X20, X19, [X31 + 0x20]
	0x03DF3200 ADRP X22, 0x5F5000
	0x03DF3204 ADRP X23, 0x328000
	0x03DF3208 LDRB W8, [X22 + 0x25E]
	0x03DF320C LDR X23, [X23 + 0x898]
	0x03DF3210 MOV X19, X2
	0x03DF3214 MOV X21, X1
	0x03DF3218 MOV X20, X0
	0x03DF321C TBNZ X8, 0x0, 0x3DF3234
	0x03DF3220 ADRP X0, 0x328000
	0x03DF3224 LDR X0, [X0 + 0x898]
	0x03DF3228 BL 0x1C16CF4
	0x03DF322C MOVZ W8, 0x1
	0x03DF3230 STRB W8, [X22 + 0x25E]
	0x03DF3234 LDR X0, [X23]
	0x03DF3238 LDR W8, [X0 + 0xE0]
	0x03DF323C CBNZ W8, 0x3DF3244
	0x03DF3240 BL 0x1C16DFC
	0x03DF3244 AND X21, X21, 0x0
	0x03DF3248 MOV X0, X21
	0x03DF324C BL 0x3DF3098
	0x03DF3250 MOV X0, X20
	0x03DF3254 MOV X1, X21
	0x03DF3258 MOV X2, X19
	0x03DF325C LDP X20, X19, [X31 + 0x20]
	0x03DF3260 LDP X22, X21, [X31 + 0x10]
	0x03DF3264 LDP X30, X23, [X31], #0x30
	0x03DF3268 B 0x3DEBC00
	0x03DF326C STR X30, [X31 - 0x30]!
	0x03DF3270 STP X22, X21, [X31 + 0x10]
	0x03DF3274 STP X20, X19, [X31 + 0x20]
	0x03DF3278 ADRP X22, 0x5F5000
	0x03DF327C ADRP X21, 0x328000
	0x03DF3280 LDRB W8, [X22 + 0x25F]
	0x03DF3284 LDR X21, [X21 + 0x898]
	0x03DF3288 MOV X20, X1
	0x03DF328C MOV X19, X0
	0x03DF3290 TBNZ X8, 0x0, 0x3DF32A8
	0x03DF3294 ADRP X0, 0x328000
	0x03DF3298 LDR X0, [X0 + 0x898]
	0x03DF329C BL 0x1C16CF4
	0x03DF32A0 MOVZ W8, 0x1
	0x03DF32A4 STRB W8, [X22 + 0x25F]
	0x03DF32A8 LDR X0, [X21]
	0x03DF32AC STR X31, [X31 + 0x8]
	0x03DF32B0 LDR W8, [X0 + 0xE0]
	0x03DF32B4 CBNZ W8, 0x3DF32BC
	0x03DF32B8 BL 0x1C16DFC
	0x03DF32BC AND X20, X20, 0x0
	0x03DF32C0 MOV X0, X20
	0x03DF32C4 BL 0x3DF3098
	0x03DF32C8 ADD X2, X31, 0x8
	0x03DF32CC MOV X0, X19
	0x03DF32D0 MOV X1, X20
	0x03DF32D4 BL 0x3DEBAA8
	0x03DF32D8 LDP X20, X19, [X31 + 0x20]
	0x03DF32DC LDP X22, X21, [X31 + 0x10]
	0x03DF32E0 AND W0, W0, 0x1
	0x03DF32E4 LDR X30, [X31], #0x30
	0x03DF32E8 RET
	0x03DF32EC LDR W0, [X0 + 0x340]
	0x03DF32F0 RET
	0x03DF32F4 LDR X0, [X0 + 0x348]
	0x03DF32F8 RET
	0x03DF32FC STR X30, [X31 - 0x20]!
	0x03DF3300 STP X20, X19, [X31 + 0x10]
	0x03DF3304 ADRP X20, 0x5F5000
	0x03DF3308 LDRB W8, [X20 + 0x264]
	0x03DF330C MOV X19, X0
	0x03DF3310 TBNZ X8, 0x0, 0x3DF3328
	0x03DF3314 ADRP X0, 0x371000
	0x03DF3318 LDR X0, [X0 + 0x168]
	0x03DF331C BL 0x1C16CF4
	0x03DF3320 MOVZ W8, 0x1
	0x03DF3324 STRB W8, [X20 + 0x264]
	0x03DF3328 LDR X0, [X19 + 0x3A0]
	0x03DF332C CBZ X0, 0x3DF3384
	0x03DF3330 LDR X8, [X0]
	0x03DF3334 MOVZ W1, 0x2
	0x03DF3338 LDR X9, [X8 + 0x438]
	0x03DF333C LDR X2, [X8 + 0x440]
	0x03DF3340 BLR X9
	0x03DF3344 CBZ X0, 0x3DF3384
	0x03DF3348 ADRP X8, 0x371000
	0x03DF334C LDR X8, [X8 + 0x168]
	0x03DF3350 LDR X9, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x5F6000
	007 Move W8, [X19+593]
	008 Move X20, X1
	009 Move X21, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x329000
	015 Move X0, [X0+2200]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+593], W8
	019 Move X8, [X21+824]
	020 Compare X8, 0
	021 JumpIfEqual {65}
	022 Move X19, 0x329000
	023 Move X19, [X19+2200]
	024 Move X0, [X19]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X19]
	030 Move X8, [X0+184]
	031 Move X19, [X8+48]
	032 Move X0, X19
	033 Move X1, X31
	034 Move X2, X31
	035 Call IntPtr.op_Inequality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {43}
	040 Move X0, X19
	041 Move X1, X31
	042 Call ProfilerUnsafeUtility.BeginSample, X0
	043 Move X8, [X21+824]
	044 Compare X8, 0
	045 JumpIfEqual {71}
	046 Move X0, [X8+64]
	047 Move X9, [X8+24]
	048 Move X2, [X8+40]
	049 Move X1, X20
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X20, X31
	052 Move X0, X19
	053 Move X1, X31
	054 Move X2, X31
	055 Call IntPtr.op_Inequality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {63}
	060 Move X0, X19
	061 Move X1, X31
	062 Call ProfilerUnsafeUtility.EndSample, X0
	063 Compare X20, 0
	064 JumpIfNotEqual {72}
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return 
	071 Call 0x1C17F20
	072 Move X0, X20
	073 Call 0x1C17F18
	074 Move X22, X1
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X21, X0
	077 Move X0, X21
	078 Call 0x3EB2AD0
	079 Move X20, [X0]
	080 Call 0x3EB2AE0
	081 Move X20, X31
	082 Move X0, X19
	083 Move X1, X31
	084 Move X2, X31
	085 Call IntPtr.op_Inequality, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {93}
	090 Move X0, X19
	091 Move X1, X31
	092 Call ProfilerUnsafeUtility.EndSample, X0
	093 Compare X20, 0
	094 JumpIfEqual {101}
	095 Move X0, X20
	096 Call 0x1C17F18
	097 Move X22, X1
	098 Move X21, X0
	099 Move X22, X1
	100 Move X21, X0
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, X21
	103 Call 0x3EB2AD0
	104 Move X19, X0
	105 Move X0, 0x301000
	106 Move X0, [X0+2000]
	107 Call 0x1C17D08
	108 Move X8, [X19]
	109 Move X1, [X8]
	110 Call 0x1C18270
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {133}
	115 Move X19, [X19]
	116 Call 0x3EB2AE0
	117 Move X0, 0x301000
	118 Move X0, [X0+2600]
	119 Call 0x1C17D08
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X0, X19
	125 Move X20, [X31+32]
	126 Move X19, [X31+40]
	127 Move X22, [X31+16]
	128 Move X21, [X31+24]
	129 Move X1, X31
	130 Move X30, [X31+48]
	131 Call Debug.LogException, X0
	132 Return 
	133 Move W0, 8
	134 Call 0x3EB2AF0
	135 Move X8, [X19]
	136 Move [X0], X8
	137 Move X1, 0xC2000
	138 Add X1, X1, 3672
	139 Move X2, X31
	140 Call 0x3EB2B00
	141 Move X21, X0
	142 Call 0x3EB2AE0
	143 Move X0, X21
	144 Call 0x1D2D690
	145 Call 0x1991590

Method: System.Void GetFullHierarchicalViewDataKey(System.Text.StringBuilder key)

Disassembly:
	0x03DF3354 LDR X8, [X8]
	0x03DF3358 LDRB W11, [X9 + 0x130]
	0x03DF335C LDRB W10, [X8 + 0x130]
	0x03DF3360 CMP W11, W10
	0x03DF3364 B.CS 0x3DF3370
	0x03DF3368 MOV X0, X31
	0x03DF336C B 0x3DF3384
	0x03DF3370 LDR X9, [X9 + 0xC8]
	0x03DF3374 ADD X9, X9, X10, 0x3, LSL
	0x03DF3378 LDUR X9, [X9 - 0x8]
	0x03DF337C CMP X9, X8
	0x03DF3380 CSEL X0, X0, X31, EQ
	0x03DF3384 LDP X20, X19, [X31 + 0x10]
	0x03DF3388 LDR X30, [X31], #0x20
	0x03DF338C RET
	0x03DF3390 STP X30, X21, [X31 - 0x20]!
	0x03DF3394 STP X20, X19, [X31 + 0x10]
	0x03DF3398 ADRP X21, 0x5F5000
	0x03DF339C LDRB W8, [X21 + 0x265]
	0x03DF33A0 MOV X19, X1
	0x03DF33A4 MOV X20, X0
	0x03DF33A8 TBNZ X8, 0x0, 0x3DF33D8
	0x03DF33AC ADRP X0, 0x376000
	0x03DF33B0 LDR X0, [X0 + 0x9F0]
	0x03DF33B4 BL 0x1C16CF4
	0x03DF33B8 ADRP X0, 0x371000
	0x03DF33BC LDR X0, [X0 + 0x1D0]
	0x03DF33C0 BL 0x1C16CF4
	0x03DF33C4 ADRP X0, 0x371000
	0x03DF33C8 LDR X0, [X0 + 0x1C8]
	0x03DF33CC BL 0x1C16CF4
	0x03DF33D0 MOVZ W8, 0x1
	0x03DF33D4 STRB W8, [X21 + 0x265]
	0x03DF33D8 LDR X21, [X20 + 0x350]
	0x03DF33DC CBNZ X21, 0x3DF340C
	0x03DF33E0 ADRP X8, 0x371000
	0x03DF33E4 LDR X8, [X8 + 0x1C8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5F6000
	006 Move W8, [X21+594]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x32A000
	014 Move X0, [X0+2256]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+594], W8
	018 Move X0, [X20+912]
	019 Compare X0, 0
	020 JumpIfEqual {23}
	021 Move X1, X19
	022 Call VisualElement.GetFullHierarchicalViewDataKey, X0, X1
	023 Move X0, [X20+88]
	024 Move X1, X31
	025 Call String.IsNullOrEmpty, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {35}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Compare X19, 0
	036 JumpIfEqual {52}
	037 Move X8, 0x32A000
	038 Move X8, [X8+2256]
	039 Move X0, X19
	040 Move X2, X31
	041 Move X1, [X8]
	042 Call StringBuilder.Append, X0, X1
	043 Move X1, [X20+88]
	044 Move X0, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X2, X31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call StringBuilder.Append, X0, X1
	051 Return 
	052 Call 0x1C17F20

Method: System.String GetFullHierarchicalViewDataKey()

Disassembly:
	0x03DF33E8 LDR X0, [X8]
	0x03DF33EC BL 0x1C16F10
	0x03DF33F0 ADRP X8, 0x371000
	0x03DF33F4 LDR X8, [X8 + 0x1D0]
	0x03DF33F8 MOV X21, X0
	0x03DF33FC LDR X1, [X8]
	0x03DF3400 BL 0x301B7C4
	0x03DF3404 STR X21, [X20 + 0x350]
	0x03DF3408 CBZ X21, 0x3DF3494
	0x03DF340C ADRP X9, 0x376000
	0x03DF3410 LDR X9, [X9 + 0x9F0]
	0x03DF3414 LDR W10, [X21 + 0x1C]
	0x03DF3418 LDR X8, [X21 + 0x10]
	0x03DF341C LDR X9, [X9]
	0x03DF3420 ADD W10, W10, 0x1
	0x03DF3424 STR W10, [X21 + 0x1C]
	0x03DF3428 CBZ X8, 0x3DF3494
	0x03DF342C LDRSW X10, [X21 + 0x18]
	0x03DF3430 LDR W11, [X8 + 0x18]
	0x03DF3434 CMP W10, W11
	0x03DF3438 B.CS 0x3DF3450
	0x03DF343C ADD W9, W10, 0x1
	0x03DF3440 ADD X8, X8, X10, 0x3, LSL
	0x03DF3444 STR W9, [X21 + 0x18]
	0x03DF3448 STR X19, [X8 + 0x20]
	0x03DF344C B 0x3DF3468
	0x03DF3450 LDR X8, [X9 + 0x20]
	0x03DF3454 MOV X0, X21
	0x03DF3458 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5F6000
	006 Move X21, 0x301000
	007 Move W8, [X20+595]
	008 Move X21, [X21+2288]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x301000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+595], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call StringBuilder..ctor, X0
	024 Move X0, X19
	025 Move X1, X20
	026 Call VisualElement.GetFullHierarchicalViewDataKey, X0, X1
	027 Compare X20, 0
	028 JumpIfEqual {38}
	029 Move X8, [X20]
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X2, [X8+360]
	034 Move X1, [X8+368]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 CallNoReturn X2
	038 Call 0x1C17F20

Method: T GetOrCreateViewData(System.Object existing, System.String key)

Disassembly:
	0x022AAE7C MOV X21, X2
	0x022AAE80 MOV W19, W1
	0x022AAE84 MOV X20, X0
	0x022AAE88 CBNZ X8, 0x22AAEB4
	0x022AAE8C ADRP X0, 0x1E49000
	0x022AAE90 LDR X0, [X0 + 0xE00]
	0x022AAE94 BL 0x1C16CF4
	0x022AAE98 ADRP X0, 0x1E72000
	0x022AAE9C LDR X0, [X0 + 0x928]
	0x022AAEA0 BL 0x1C16CF4
	0x022AAEA4 LDR X8, [X21 + 0x38]
	0x022AAEA8 CBNZ X8, 0x22AAEB4
	0x022AAEAC MOV X0, X21
	0x022AAEB0 BL 0x1C5C6E0
	0x022AAEB4 LDR X0, [X20 + 0x18]
	0x022AAEB8 CBZ X0, 0x22AAFD0
	0x022AAEBC MOV W1, W19
	0x022AAEC0 MOV X2, X31
	0x022AAEC4 BL 0x3D1DEB8
	0x022AAEC8 CBZ X0, 0x22AAF30
	0x022AAECC ADRP X10, 0x1E49000
	0x022AAED0 LDR X8, [X0]
	0x022AAED4 LDR X10, [X10 + 0xE00]
	0x022AAED8 MOV X22, X0
	0x022AAEDC LDRH W9, [X8 + 0x12E]
	0x022AAEE0 LDR X1, [X10]
	0x022AAEE4 CBZ X9, 0x22AAF08
	0x022AAEE8 LDR X10, [X8 + 0xB0]
	0x022AAEEC ADD X10, X10, 0x8
	0x022AAEF0 LDUR X11, [X10 - 0x8]
	0x022AAEF4 CMP X11, X1
	0x022AAEF8 B.EQ 0x22AAF18
	0x022AAEFC SUBS X9, X9, 0x1
	0x022AAF00 ADD X10, X10, 0x10
	0x022AAF04 B.NE 0x22AAEF0
	0x022AAF08 MOV X0, X22
	0x022AAF0C MOV W2, W31
	0x022AAF10 BL 0x1C5C788
	0x022AAF14 B 0x22AAF24
	0x022AAF18 LDRSW X9, [X10]
	0x022AAF1C ADD X8, X8, X9, 0x4, LSL
	0x022AAF20 ADD X0, X8, 0x138
	0x022AAF24 LDP X8, X1, [X0]
	0x022AAF28 MOV X0, X22
	0x022AAF2C BLR X8
	0x022AAF30 LDR X8, [X21 + 0x38]
	0x022AAF34 LDR X0, [X8]
	0x022AAF38 BL 0x2278924
	0x022AAF3C CBZ X0, 0x22AAFD0
	0x022AAF40 ADRP X10, 0x1E72000
	0x022AAF44 LDR X8, [X0]
	0x022AAF48 LDR X22, [X20 + 0x10]
	0x022AAF4C LDR X10, [X10 + 0x928]
	0x022AAF50 MOV X21, X0
	0x022AAF54 LDRH W9, [X8 + 0x12E]
	0x022AAF58 LDR X1, [X10]
	0x022AAF5C CBZ X9, 0x22AAF80
	0x022AAF60 LDR X10, [X8 + 0xB0]
	0x022AAF64 ADD X10, X10, 0x8
	0x022AAF68 LDUR X11, [X10 - 0x8]
	0x022AAF6C CMP X11, X1
	0x022AAF70 B.EQ 0x22AAF90
	0x022AAF74 SUBS X9, X9, 0x1
	0x022AAF78 ADD X10, X10, 0x10
	0x022AAF7C B.NE 0x22AAF68
	0x022AAF80 MOV X0, X21
	0x022AAF84 MOV W2, W31
	0x022AAF88 BL 0x1C5C788
	0x022AAF8C B 0x22AAF9C
	0x022AAF90 LDRSW X9, [X10]
	0x022AAF94 ADD X8, X8, X9, 0x4, LSL
	0x022AAF98 ADD X0, X8, 0x138
	0x022AAF9C LDP X8, X2, [X0]
	0x022AAFA0 MOV X0, X21
	0x022AAFA4 MOV X1, X22
	0x022AAFA8 BLR X8
	0x022AAFAC LDR X0, [X20 + 0x18]
	0x022AAFB0 CBZ X0, 0x22AAFD0
	0x022AAFB4 MOV W1, W19
	0x022AAFB8 MOV X2, X21
	0x022AAFBC LDP X20, X19, [X31 + 0x20]
	0x022AAFC0 LDP X22, X21, [X31 + 0x10]
	0x022AAFC4 MOV X3, X31
	0x022AAFC8 LDR X30, [X31], #0x30
	0x022AAFCC B 0x3D1DFE8
	0x022AAFD0 BL 0x1C16F20
	0x022AAFD4 STP X29, X30, [X31 - 0x60]!
	0x022AAFD8 STP X28, X27, [X31 + 0x10]
	0x022AAFDC STP X26, X25, [X31 + 0x20]
	0x022AAFE0 STP X24, X23, [X31 + 0x30]
	0x022AAFE4 STP X22, X21, [X31 + 0x40]
	0x022AAFE8 STP X20, X19, [X31 + 0x50]
	0x022AAFEC ADD X29, X31, 0x0
	0x022AAFF0 SUB X31, X31, 0x20
	0x022AAFF4 STUR W1, [X29 - 0x14]
	0x022AAFF8 MRS X8, 0xC000
	0x022AAFFC STUR X8, [X29 - 0x20]
	0x022AB000 LDR X8, [X8 + 0x28]
	0x022AB004 MOV X20, X2
	0x022AB008 MOV X21, X0
	0x022AB00C STUR X8, [X29 - 0x8]
	0x022AB010 LDR X8, [X2 + 0x38]
	0x022AB014 CBNZ X8, 0x22AB038
	0x022AB018 ADRP X0, 0x1E48000
	0x022AB01C LDR X0, [X0 + 0xE00]
	0x022AB020 BL 0x1C16CF4
	0x022AB024 LDR X8, [X20 + 0x38]
	0x022AB028 CBNZ X8, 0x22AB038
	0x022AB02C MOV X0, X20
	0x022AB030 BL 0x1C5C6E0
	0x022AB034 LDR X8, [X20 + 0x38]
	0x022AB038 LDR X0, [X8 + 0x8]
	0x022AB03C LDR W22, [X0 + 0xFC]
	0x022AB040 LDRB W9, [X0 + 0x135]
	0x022AB044 MOV W8, W22
	0x022AB048 TBNZ X9, 0x0, 0x22AB054
	0x022AB04C BL 0x1C5C684
	0x022AB050 LDR W8, [X0 + 0xFC]
	0x022AB054 ADD W8, W8, 0x10
	0x022AB058 ADD X8, X8, 0xF
	0x022AB05C ADD X9, X31, 0x0
	0x022AB060 AND X8, X8, 0x1FFFFFFFF
	0x022AB064 SUB X24, X9, X8
	0x022AB068 ADD X31, X24, 0x0
	0x022AB06C ADD X9, X22, 0xF
	0x022AB070 ADD X8, X31, 0x0
	0x022AB074 AND X19, X9, 0x1FFFFFFFF
	0x022AB078 SUB X28, X8, X19
	0x022AB07C ADD X31, X28, 0x0
	0x022AB080 ADD X8, X31, 0x0
	0x022AB084 SUB X25, X8, X19
	0x022AB088 ADD X31, X25, 0x0
	0x022AB08C ADD X8, X31, 0x0
	0x022AB090 SUB X23, X8, X19
	0x022AB094 ADD X31, X23, 0x0
	0x022AB098 ADD X8, X31, 0x0
	0x022AB09C SUB X26, X8, X19
	0x022AB0A0 ADD X31, X26, 0x0
	0x022AB0A4 MOV X0, X26
	0x022AB0A8 MOV W1, W31
	0x022AB0AC MOV X2, X22
	0x022AB0B0 BL 0x3EB1B10
	0x022AB0B4 ADD X8, X31, 0x0
	0x022AB0B8 SUB X27, X8, X19
	0x022AB0BC ADD X31, X27, 0x0
	0x022AB0C0 MOV X0, X27
	0x022AB0C4 MOV W1, W31
	0x022AB0C8 MOV X2, X22
	0x022AB0CC BL 0x3EB1B10
	0x022AB0D0 LDR X0, [X21 + 0x18]
	0x022AB0D4 CBZ X0, 0x22AB248
	0x022AB0D8 LDUR W1, [X29 - 0x14]
	0x022AB0DC MOV X2, X31
	0x022AB0E0 BL 0x3D1DEB8
	0x022AB0E4 CBZ X0, 0x22AB14C
	0x022AB0E8 ADRP X10, 0x1E48000
	0x022AB0EC LDR X8, [X0]
	0x022AB0F0 LDR X10, [X10 + 0xE00]
	0x022AB0F4 MOV X19, X0
	0x022AB0F8 LDRH W9, [X8 + 0x12E]
	0x022AB0FC LDR X1, [X10]
	0x022AB100 CBZ X9, 0x22AB124
	0x022AB104 LDR X10, [X8 + 0xB0]
	0x022AB108 ADD X10, X10, 0x8
	0x022AB10C LDUR X11, [X10 - 0x8]
	0x022AB110 CMP X11, X1
	0x022AB114 B.EQ 0x22AB134
	0x022AB118 SUBS X9, X9, 0x1
	0x022AB11C ADD X10, X10, 0x10
	0x022AB120 B.NE 0x22AB10C
	0x022AB124 MOV X0, X19
	0x022AB128 MOV W2, W31
	0x022AB12C BL 0x1C5C788
	0x022AB130 B 0x22AB140
	0x022AB134 LDRSW X9, [X10]
	0x022AB138 ADD X8, X8, X9, 0x4, LSL
	0x022AB13C ADD X0, X8, 0x138
	0x022AB140 LDP X8, X1, [X0]
	0x022AB144 MOV X0, X19
	0x022AB148 BLR X8
	0x022AB14C LDR X8, [X20 + 0x38]
	0x022AB150 SUB X3, X29, 0x10
	0x022AB154 MOV X2, X31
	0x022AB158 MOV X4, X28
	0x022AB15C LDR X1, [X8]
	0x022AB160 LDR X0, [X1]
	0x022AB164 STUR X28, [X29 - 0x10]
	0x022AB168 LDR X8, [X1 + 0x10]
	0x022AB16C BLR X8
	0x022AB170 MOV X0, X27
	0x022AB174 MOV X1, X28
	0x022AB178 MOV X2, X22
	0x022AB17C BL 0x3EB1AC0
	0x022AB180 LDR X8, [X20 + 0x38]
	0x022AB184 LDR X19, [X21 + 0x10]
	0x022AB188 LDR X0, [X8 + 0x8]
	0x022AB18C LDRB W9, [X0 + 0x135]
	0x022AB190 TBNZ X9, 0x0, 0x22AB19C
	0x022AB194 BL 0x1C5C684
	0x022AB198 LDR X8, [X20 + 0x38]
	0x022AB19C LDR X1, [X8 + 0x10]
	0x022AB1A0 SUB X4, X29, 0x10
	0x022AB1A4 MOV X2, X24
	0x022AB1A8 MOV X3, X27
	0x022AB1AC MOV X5, X19
	0x022AB1B0 STUR X19, [X29 - 0x10]
	0x022AB1B4 BL 0x1C17728
	0x022AB1B8 MOV X0, X25
	0x022AB1BC MOV X1, X27
	0x022AB1C0 MOV X2, X22
	0x022AB1C4 BL 0x3EB1AC0
	0x022AB1C8 MOV X0, X26
	0x022AB1CC MOV X1, X25
	0x022AB1D0 MOV X2, X22
	0x022AB1D4 BL 0x3EB1AC0
	0x022AB1D8 LDR X19, [X21 + 0x18]
	0x022AB1DC MOV X0, X23
	0x022AB1E0 MOV X1, X26
	0x022AB1E4 MOV X2, X22
	0x022AB1E8 BL 0x3EB1AC0
	0x022AB1EC LDR X8, [X20 + 0x38]
	0x022AB1F0 MOV X1, X23
	0x022AB1F4 LDR X0, [X8 + 0x8]
	0x022AB1F8 BL 0x1C16E04
	0x022AB1FC CBZ X19, 0x22AB248
	0x022AB200 LDUR W1, [X29 - 0x14]
	0x022AB204 MOV X2, X0
	0x022AB208 MOV X0, X19
	0x022AB20C MOV X3, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+56]
	008 Move X19, X3
	009 Move X21, X2
	010 Move X22, X1
	011 Move X23, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X0, 0x1E4A000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x1E73000
	018 Move X0, [X0+2248]
	019 Call 0x1C17CF4
	020 Move X0, 0x1E4A000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move X0, 0x1E73000
	024 Move X0, [X0+2256]
	025 Call 0x1C17CF4
	026 Move X0, 0x1E73000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X8, [X19+56]
	030 Compare X8, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X19
	033 Call 0x1C5D6E0
	034 Move X8, 0x1E4A000
	035 Move X8, [X8+2600]
	036 Move X20, [X23+928]
	037 Move X0, [X8]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X8, 0x1E73000
	043 Move X8, [X8+2264]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 Move X2, X31
	047 Move X1, [X8]
	048 Call Debug.Assert, X0, X1
	049 Move X0, [X23+928]
	050 Compare X0, 0
	051 JumpIfEqual {111}
	052 Move X8, [X0]
	053 Move X9, [X8+584]
	054 Move X1, [X8+592]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Compare X0, 0
	057 JumpIfEqual {111}
	058 Move X0, [X23+928]
	059 Compare X0, 0
	060 JumpIfEqual {265}
	061 Move X8, [X0]
	062 Move X9, [X8+584]
	063 Move X1, [X8+592]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Compare X0, 0
	066 JumpIfEqual {265}
	067 Move X8, [X0+64]
	068 Move X9, [X0+24]
	069 Move X1, [X0+40]
	070 Move X0, X8
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Compare X0, 0
	073 JumpIfEqual {111}
	074 Move X20, X0
	075 Move X0, [X23+88]
	076 Move X1, X31
	077 Call String.IsNullOrEmpty, X0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {111}
	082 Move X0, X23
	083 Move X1, X31
	084 Call VisualElement.get_enableViewDataPersistence, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {111}
	089 Move X8, 0x1E4A000
	090 Move X8, [X8+1728]
	091 Move X0, [X8]
	092 Move X8, [X19+56]
	093 Move W9, [X0+224]
	094 Move X22, [X8+16]
	095 Compare W9, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X22
	099 Move X1, X31
	100 Call Type.GetTypeFromHandle, X0
	101 Move X8, 0x1E73000
	102 Move X8, [X8+2256]
	103 Move X22, [X8]
	104 Compare X0, 0
	105 JumpIfEqual {163}
	106 Move X8, [X0]
	107 Move X9, [X8+360]
	108 Move X1, [X8+368]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X2, X0
	111 Move X8, [X19+56]
	112 Compare X22, 0
	113 JumpIfEqual {146}
	114 Move X1, [X8]
	115 Move W8, [X1+309]
	116 Move TEMP, X8
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {123}
	120 Move X0, X1
	121 Call 0x1C5D684
	122 Move X1, X0
	123 Move X0, X22
	124 Call 0x1C17E00
	125 Move X8, [X19+56]
	126 Move X20, X0
	127 Move X19, [X8]
	128 Move W8, [X19+309]
	129 Move TEMP, X8
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {136}
	133 Move X0, X19
	134 Call 0x1C5D684
	135 Move X19, X0
	136 Compare X20, 0
	137 JumpIfEqual {155}
	138 Move X0, X20
	139 Move X1, X19
	140 Call 0x1C17E00
	141 Compare X0, 0
	142 JumpIfNotEqual {156}
	143 Move X0, X20
	144 Move X1, X19
	145 Call 0x1C181E0
	146 Move X0, [X8+8]
	147 Move X20, [X31+32]
	148 Move X19, [X31+40]
	149 Move X22, [X31+16]
	150 Move X21, [X31+24]
	151 Move X30, [X31+48]
	152 Move X23, [X31+56]
	153 Call Activator.CreateInstance
	154 Return X0
	155 Move X0, X31
	156 Move X20, [X31+32]
	157 Move X19, [X31+40]
	158 Move X22, [X31+16]
	159 Move X21, [X31+24]
	160 Move X30, [X31+48]
	161 Move X23, [X31+56]
	162 Return X0
	163 Move X2, X31
	164 Move X0, X21
	165 Move X1, X22
	166 Move X3, X31
	167 Call String.Concat, X0, X1, X2
	168 Move X10, 0x1E72000
	169 Move X8, [X20]
	170 Move X10, [X10+2248]
	171 Move X21, X0
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Move X1, [X10]
	174 Compare X9, 0
	175 JumpIfEqual {182}
	176 Move X10, [X8+176]
	177 Add X10, X10, 8
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Subtract X9, X9, 1
	181 Add X10, X10, 16
	182 Move W2, 3
	183 Move X0, X20
	184 Call 0x1C5D788
	185 Move W9, [X10]
	186 Add W9, W9, 3
	187 Add X8, X8, W9
	188 Add X0, X8, 312
	189 Move X8, [X0]
	190 Move X2, [X0+8]
	191 Move X0, X20
	192 Move X1, X21
	193 NotImplemented "Instruction BLR not yet implemented."
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfEqual {231}
	198 Move X8, [X19+56]
	199 Move X0, [X8+8]
	200 Call Activator.CreateInstance
	201 Move X9, [X19+56]
	202 Move X8, [X20]
	203 Move X22, X0
	204 Move X23, [X9+24]
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Move X1, [X23+32]
	207 NotImplemented "Instruction LDRH not yet implemented."
	208 Compare X9, 0
	209 JumpIfEqual {216}
	210 Move X10, [X8+176]
	211 Add X10, X10, 8
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract X9, X9, 1
	215 Add X10, X10, 16
	216 Move X0, X20
	217 Call 0x1C5D788
	218 Move W9, [X10]
	219 Add W9, W9, W2
	220 Add X8, X8, W9
	221 Add X0, X8, 312
	222 Move X0, [X0+8]
	223 Move X1, X23
	224 Call 0x1C17DF8
	225 Move X8, [X0+8]
	226 Move X3, X0
	227 Move X0, X20
	228 Move X1, X21
	229 Move X2, X22
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Move X9, [X19+56]
	232 Move X8, [X20]
	233 Move X19, [X9+32]
	234 NotImplemented "Instruction LDRH not yet implemented."
	235 Move X1, [X19+32]
	236 NotImplemented "Instruction LDRH not yet implemented."
	237 Compare X9, 0
	238 JumpIfEqual {245}
	239 Move X10, [X8+176]
	240 Add X10, X10, 8
	241 NotImplemented "Instruction LDUR not yet implemented."
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Subtract X9, X9, 1
	244 Add X10, X10, 16
	245 Move X0, X20
	246 Call 0x1C5D788
	247 Move W9, [X10]
	248 Add W9, W9, W2
	249 Add X8, X8, W9
	250 Add X0, X8, 312
	251 Move X0, [X0+8]
	252 Move X1, X19
	253 Call 0x1C17DF8
	254 Move X2, X0
	255 Move X3, [X0+8]
	256 Move X0, X20
	257 Move X1, X21
	258 Move X20, [X31+32]
	259 Move X19, [X31+40]
	260 Move X22, [X31+16]
	261 Move X21, [X31+24]
	262 Move X30, [X31+48]
	263 Move X23, [X31+56]
	264 CallNoReturn X3
	265 Call 0x1C17F20

Method: System.Void OverwriteFromViewData(System.Object obj, System.String key)

Disassembly:
	0x03DF345C LDR X8, [X8 + 0xC0]
	0x03DF3460 LDR X2, [X8 + 0x70]
	0x03DF3464 BL 0x301BF90
	0x03DF3468 MOV X0, X20
	0x03DF346C BL 0x3DF32FC
	0x03DF3470 CBZ X0, 0x3DF3488
	0x03DF3474 MOV X1, X19
	0x03DF3478 LDP X20, X19, [X31 + 0x10]
	0x03DF347C MOV X2, X31
	0x03DF3480 LDP X30, X21, [X31], #0x20
	0x03DF3484 B 0x3D1A260
	0x03DF3488 LDP X20, X19, [X31 + 0x10]
	0x03DF348C LDP X30, X21, [X31], #0x20
	0x03DF3490 RET
	0x03DF3494 BL 0x1C16F20
	0x03DF3498 STP X30, X21, [X31 - 0x20]!
	0x03DF349C STP X20, X19, [X31 + 0x10]
	0x03DF34A0 ADRP X21, 0x5F5000
	0x03DF34A4 LDRB W8, [X21 + 0x266]
	0x03DF34A8 MOV X19, X1
	0x03DF34AC MOV X20, X0
	0x03DF34B0 TBNZ X8, 0x0, 0x3DF34C8
	0x03DF34B4 ADRP X0, 0x376000
	0x03DF34B8 LDR X0, [X0 + 0x9F8]
	0x03DF34BC BL 0x1C16CF4
	0x03DF34C0 MOVZ W8, 0x1
	0x03DF34C4 STRB W8, [X21 + 0x266]
	0x03DF34C8 LDR X0, [X20 + 0x350]
	0x03DF34CC CBZ X0, 0x3DF34E4
	0x03DF34D0 ADRP X8, 0x376000
	0x03DF34D4 LDR X8, [X8 + 0x9F8]
	0x03DF34D8 MOV X1, X19
	0x03DF34DC LDR X2, [X8]
	0x03DF34E0 BL 0x301D7A8
	0x03DF34E4 MOV X0, X20
	0x03DF34E8 BL 0x3DF32FC
	0x03DF34EC CBZ X0, 0x3DF3504
	0x03DF34F0 MOV X1, X19
	0x03DF34F4 LDP X20, X19, [X31 + 0x10]
	0x03DF34F8 MOV X2, X31
	0x03DF34FC LDP X30, X21, [X31], #0x20
	0x03DF3500 B 0x3D1A084
	0x03DF3504 LDP X20, X19, [X31 + 0x10]
	0x03DF3508 LDP X30, X21, [X31], #0x20
	0x03DF350C RET
	0x03DF3510 SUB X31, X31, 0x1F0
	0x03DF3514 STP D11, D10, [X31 + 0x170]
	0x03DF3518 STP D9, D8, [X31 + 0x180]
	0x03DF351C STP X29, X30, [X31 + 0x190]
	0x03DF3520 STP X28, X27, [X31 + 0x1A0]
	0x03DF3524 STP X26, X25, [X31 + 0x1B0]
	0x03DF3528 STP X24, X23, [X31 + 0x1C0]
	0x03DF352C STP X22, X21, [X31 + 0x1D0]
	0x03DF3530 STP X20, X19, [X31 + 0x1E0]
	0x03DF3534 MRS X22, 0xC000
	0x03DF3538 LDR X8, [X22 + 0x28]
	0x03DF353C ADRP X21, 0x5F5000
	0x03DF3540 MOV X20, X1
	0x03DF3544 MOV X19, X0
	0x03DF3548 STR X8, [X31 + 0x168]
	0x03DF354C LDRB W8, [X21 + 0x269]
	0x03DF3550 TBNZ X8, 0x0, 0x3DF3598
	0x03DF3554 ADRP X0, 0x373000
	0x03DF3558 LDR X0, [X0 + 0x488]
	0x03DF355C BL 0x1C16CF4
	0x03DF3560 ADRP X0, 0x373000
	0x03DF3564 LDR X0, [X0 + 0x490]
	0x03DF3568 BL 0x1C16CF4
	0x03DF356C ADRP X0, 0x373000
	0x03DF3570 LDR X0, [X0 + 0x498]
	0x03DF3574 BL 0x1C16CF4
	0x03DF3578 ADRP X0, 0x329000
	0x03DF357C LDR X0, [X0 + 0x128]
	0x03DF3580 BL 0x1C16CF4
	0x03DF3584 ADRP X0, 0x373000
	0x03DF3588 LDR X0, [X0 + 0x4A0]
	0x03DF358C BL 0x1C16CF4
	0x03DF3590 MOVZ W8, 0x1
	0x03DF3594 STRB W8, [X21 + 0x269]
	0x03DF3598 MOVI V0.2D, 0x0
	0x03DF359C STR X31, [X31 + 0x160]
	0x03DF35A0 STP V0, V0, [X31 + 0x140]
	0x03DF35A4 CBZ X19, 0x3DF4890
	0x03DF35A8 MOV X0, X19
	0x03DF35AC BL 0x3DE7EEC
	0x03DF35B0 CBZ X20, 0x3DF4854
	0x03DF35B4 MOV X19, X0
	0x03DF35B8 LDR X0, [X20 + 0x10]
	0x03DF35BC STR X22, [X31 + 0x8]
	0x03DF35C0 CBZ X0, 0x3DF4890
	0x03DF35C4 ADRP X8, 0x373000
	0x03DF35C8 LDR X8, [X8 + 0x4A0]
	0x03DF35CC ADRP X24, 0x373000
	0x03DF35D0 ADRP X25, 0x329000
	0x03DF35D4 LDR X1, [X8]
	0x03DF35D8 LDR X24, [X24 + 0x490]
	0x03DF35DC LDR X25, [X25 + 0x128]
	0x03DF35E0 ADD X8, X31, 0x110
	0x03DF35E4 BL 0x3071EC8
	0x03DF35E8 LDP V0, V1, [X31 + 0x110]
	0x03DF35EC LDR X8, [X31 + 0x130]
	0x03DF35F0 MOVZ W26, 0x20
	0x03DF35F4 MOVZ W27, 0x2
	0x03DF35F8 ADRP X28, 0xFFFFFFFFFCDA5000
	0x03DF35FC MOVZ W29, 0x2
	0x03DF3600 ADRP X22, 0xFFFFFFFFFCDA5000
	0x03DF3604 MOVK W26, 0x20000
	0x03DF3608 MOVK W27, 0x40000
	0x03DF360C ADD X28, X28, 0x554
	0x03DF3610 MOVK W29, 0x30000
	0x03DF3614 ORR W23, W31, 0xFFFDFFFD
	0x03DF3618 ADD X22, X22, 0x518
	0x03DF361C STP V0, V1, [X31 + 0x140]
	0x03DF3620 STR X8, [X31 + 0x160]
	0x03DF3624 LDR X1, [X24]
	0x03DF3628 ADD X0, X31, 0x140
	0x03DF362C BL 0x2BCB40C
	0x03DF3630 TBZ X0, 0x0, 0x3DF483C
	0x03DF3634 LDR W8, [X31 + 0x150]
	0x03DF3638 LDR V8, [X31 + 0x158]
	0x03DF363C LDR V11, [X31 + 0x15C]
	0x03DF3640 LDR V10, [X31 + 0x160]
	0x03DF3644 LDR V9, [X31 + 0x164]
	0x03DF3648 CMP W8, W26
	0x03DF364C B.LE 0x3DF36F4
	0x03DF3650 CMP W8, W27
	0x03DF3654 B.LE 0x3DF376C
	0x03DF3658 SUB W8, W8, 0x70000
	0x03DF365C CMP W8, 0xE
	0x03DF3660 B.HI 0x3DF3624
	0x03DF3664 ADR X9, 0xFFFFFFFFFFFFFFC0
	0x03DF3668 LDRH W10, [X28, X8, LSL #1]
	0x03DF366C ADD X9, X9, X10, 0x2, LSL
	0x03DF3670 BR X9
	0x03DF3674 ADD X8, X31, 0x110
	0x03DF3678 MOV V0.16B, V8.16B
	0x03DF367C MOV V1.16B, V11.16B
	0x03DF3680 MOV V2.16B, V10.16B
	0x03DF3684 MOV V3.16B, V9.16B
	0x03DF3688 MOV X0, X31
	0x03DF368C BL 0x3DFE154
	0x03DF3690 LDR V0, [X31 + 0x11]
	0x03DF3694 LDR W8, [X31 + 0x120]
	0x03DF3698 STR V0, [X31 + 0xF]
	0x03DF369C STR W8, [X31 + 0x100]
	0x03DF36A0 CBZ X19, 0x3DF48A4
	0x03DF36A4 LDR V0, [X31 + 0xF]
	0x03DF36A8 LDR W8, [X31 + 0x100]
	0x03DF36AC LDR X1, [X25]
	0x03DF36B0 STR V0, [X31 + 0xB]
	0x03DF36B4 STR W8, [X31 + 0xC0]
	0x03DF36B8 LDR X8, [X19]
	0x03DF36BC LDRH W9, [X8 + 0x12E]
	0x03DF36C0 CBZ X9, 0x3DF36E4
	0x03DF36C4 LDR X10, [X8 + 0xB0]
	0x03DF36C8 ADD X10, X10, 0x8
	0x03DF36CC LDUR X11, [X10 - 0x8]
	0x03DF36D0 CMP X11, X1
	0x03DF36D4 B.EQ 0x3DF448C
	0x03DF36D8 SUBS X9, X9, 0x1
	0x03DF36DC ADD X10, X10, 0x10
	0x03DF36E0 B.NE 0x3DF36CC
	0x03DF36E4 MOV X0, X19
	0x03DF36E8 MOV W2, W31
	0x03DF36EC BL 0x1C5C788
	0x03DF36F0 B 0x3DF4498
	0x03DF36F4 CMP W8, 0x10000
	0x03DF36F8 B.LE 0x3DF37FC
	0x03DF36FC ADD W9, W8, W23
	0x03DF3700 CMP W9, 0x1D
	0x03DF3704 B.HI 0x3DF3D3C
	0x03DF3708 ADR X8, 0xFFFFFFFFFFFFFF1C
	0x03DF370C LDRH W10, [X22, X9, LSL #1]
	0x03DF3710 ADD X8, X8, X10, 0x2, LSL
	0x03DF3714 BR X8
	0x03DF3718 MOV V0.16B, V8.16B
	0x03DF371C MOV X0, X31
	0x03DF3720 BL 0x3DFE658
	0x03DF3724 CBZ X19, 0x3DF48C4
	0x03DF3728 LDR X8, [X19]
	0x03DF372C LDR X1, [X25]
	0x03DF3730 MOV X20, X0
	0x03DF3734 LDRH W9, [X8 + 0x12E]
	0x03DF3738 CBZ X9, 0x3DF375C
	0x03DF373C LDR X10, [X8 + 0xB0]
	0x03DF3740 ADD X10, X10, 0x8
	0x03DF3744 LDUR X11, [X10 - 0x8]
	0x03DF3748 CMP X11, X1
	0x03DF374C B.EQ 0x3DF4694
	0x03DF3750 SUBS X9, X9, 0x1
	0x03DF3754 ADD X10, X10, 0x10
	0x03DF3758 B.NE 0x3DF3744
	0x03DF375C MOVZ W2, 0x5
	0x03DF3760 MOV X0, X19
	0x03DF3764 BL 0x1C5C788
	0x03DF3768 B 0x3DF46A4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x5F6000
	008 Move W8, [X20+596]
	009 Move X21, X2
	010 Move X19, X1
	011 Move X22, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x301000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x377000
	020 Move X0, [X0+2472]
	021 Call 0x1C17CF4
	022 Move X0, 0x32A000
	023 Move X0, [X0+2248]
	024 Call 0x1C17CF4
	025 Move X0, 0x377000
	026 Move X0, [X0+2480]
	027 Call 0x1C17CF4
	028 Move X0, 0x32A000
	029 Move X0, [X0+2256]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+596], W8
	033 Compare X19, 0
	034 JumpIfEqual {202}
	035 Move X8, 0x301000
	036 Move X8, [X8+2600]
	037 Move X23, 0x377000
	038 Move X20, [X22+928]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Move X23, [X23+2480]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X1, [X23]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSET not yet implemented."
	048 Move X2, X31
	049 Call Debug.Assert, X0, X1
	050 Move X0, [X22+928]
	051 Compare X0, 0
	052 JumpIfEqual {88}
	053 Move X8, [X0]
	054 Move X9, [X8+584]
	055 Move X1, [X8+592]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Compare X0, 0
	058 JumpIfEqual {88}
	059 Move X0, [X22+928]
	060 Compare X0, 0
	061 JumpIfEqual {220}
	062 Move X8, [X0]
	063 Move X9, [X8+584]
	064 Move X1, [X8+592]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Compare X0, 0
	067 JumpIfEqual {220}
	068 Move X8, [X0+64]
	069 Move X9, [X0+24]
	070 Move X1, [X0+40]
	071 Move X0, X8
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Compare X0, 0
	074 JumpIfEqual {88}
	075 Move X20, X0
	076 Move X0, [X22+88]
	077 Move X1, X31
	078 Call String.IsNullOrEmpty, X0
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {88}
	083 Move W8, [X22+81]
	084 Move TEMP, X8
	085 And TEMP, TEMP, 2
	086 Compare TEMP, 2
	087 JumpIfEqual {95}
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X30, [X31+48]
	093 Move X23, [X31+56]
	094 Return 
	095 Move X0, X19
	096 Move X1, X31
	097 Call "il2cpp_vm_object_is_inst", X0
	098 Move X8, 0x32A000
	099 Move X8, [X8+2256]
	100 Move X22, [X8]
	101 Compare X0, 0
	102 JumpIfEqual {108}
	103 Move X8, [X0]
	104 Move X9, [X8+360]
	105 Move X1, [X8+368]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X2, X0
	108 Move X2, X31
	109 Move X0, X21
	110 Move X1, X22
	111 Move X3, X31
	112 Call String.Concat, X0, X1, X2
	113 Move X22, 0x32A000
	114 Move X8, [X20]
	115 Move X22, [X22+2248]
	116 Move X21, X0
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Move X1, [X22]
	119 Compare X9, 0
	120 JumpIfEqual {127}
	121 Move X10, [X8+176]
	122 Add X10, X10, 8
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Subtract X9, X9, 1
	126 Add X10, X10, 16
	127 Move W2, 3
	128 Move X0, X20
	129 Call 0x1C5D788
	130 Move W9, [X10]
	131 Add W9, W9, 3
	132 Add X8, X8, W9
	133 Add X0, X8, 312
	134 Move X8, [X0]
	135 Move X2, [X0+8]
	136 Move X0, X20
	137 Move X1, X21
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {157}
	143 Move X8, [X20]
	144 Move X1, [X22]
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move W2, 2
	155 Move X0, X20
	156 Call 0x1C5D788
	157 Move X9, 0x377000
	158 Move X9, [X9+2472]
	159 Move X8, [X20]
	160 Move X22, [X9]
	161 NotImplemented "Instruction LDRH not yet implemented."
	162 Move X1, [X22+32]
	163 NotImplemented "Instruction LDRH not yet implemented."
	164 Compare X9, 0
	165 JumpIfEqual {172}
	166 Move X10, [X8+176]
	167 Add X10, X10, 8
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Subtract X9, X9, 1
	171 Add X10, X10, 16
	172 Move X0, X20
	173 Call 0x1C5D788
	174 Move W9, [X10]
	175 Add W9, W9, 2
	176 Add X8, X8, W9
	177 Add X0, X8, 312
	178 Move X4, [X0]
	179 Move X3, [X0+8]
	180 Move X0, X20
	181 Move X1, X19
	182 Move X2, X21
	183 Move W9, [X10]
	184 Add W9, W9, W2
	185 Add X8, X8, W9
	186 Add X0, X8, 312
	187 Move X0, [X0+8]
	188 Move X1, X22
	189 Call 0x1C17DF8
	190 Move X4, [X0+8]
	191 Move X3, X0
	192 Move X0, X20
	193 Move X1, X21
	194 Move X2, X19
	195 Move X20, [X31+32]
	196 Move X19, [X31+40]
	197 Move X22, [X31+16]
	198 Move X21, [X31+24]
	199 Move X30, [X31+48]
	200 Move X23, [X31+56]
	201 CallNoReturn X4
	202 Move X0, 0x306000
	203 Move X0, [X0+1320]
	204 Call 0x1C17D08
	205 Call 0x1C17F10
	206 Move X19, X0
	207 Move X0, 0x30C000
	208 Move X0, [X0+2216]
	209 Call 0x1C17D08
	210 Move X1, X0
	211 Move X0, X19
	212 Move X2, X31
	213 Call ArgumentNullException..ctor, X0, X1
	214 Move X0, 0x377000
	215 Move X0, [X0+2488]
	216 Call 0x1C17D08
	217 Move X1, X0
	218 Move X0, X19
	219 Call 0x1C17DEC
	220 Call 0x1C17F20

Method: System.Void SaveViewData()

Disassembly:
	0x03DF376C CMP W8, W29
	0x03DF3770 B.EQ 0x3DF3880
	0x03DF3774 CMP W8, W27
	0x03DF3778 B.NE 0x3DF3624
	0x03DF377C ADD X8, X31, 0x110
	0x03DF3780 MOV V0.16B, V8.16B
	0x03DF3784 MOV V1.16B, V11.16B
	0x03DF3788 MOV V2.16B, V10.16B
	0x03DF378C MOV V3.16B, V9.16B
	0x03DF3790 MOV X0, X31
	0x03DF3794 BL 0x3DFE154
	0x03DF3798 LDR V0, [X31 + 0x11]
	0x03DF379C LDR W8, [X31 + 0x120]
	0x03DF37A0 STR V0, [X31 + 0xF]
	0x03DF37A4 STR W8, [X31 + 0x100]
	0x03DF37A8 CBZ X19, 0x3DF4894
	0x03DF37AC LDR V0, [X31 + 0xF]
	0x03DF37B0 LDR W8, [X31 + 0x100]
	0x03DF37B4 LDR X1, [X25]
	0x03DF37B8 STR V0, [X31 + 0x9]
	0x03DF37BC STR W8, [X31 + 0xA0]
	0x03DF37C0 LDR X8, [X19]
	0x03DF37C4 LDRH W9, [X8 + 0x12E]
	0x03DF37C8 CBZ X9, 0x3DF37EC
	0x03DF37CC LDR X10, [X8 + 0xB0]
	0x03DF37D0 ADD X10, X10, 0x8
	0x03DF37D4 LDUR X11, [X10 - 0x8]
	0x03DF37D8 CMP X11, X1
	0x03DF37DC B.EQ 0x3DF3AEC
	0x03DF37E0 SUBS X9, X9, 0x1
	0x03DF37E4 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+928]
	005 Compare X0, 0
	006 JumpIfEqual {25}
	007 Move X8, [X0]
	008 Move X9, [X8+568]
	009 Move X1, [X8+576]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Compare X0, 0
	012 JumpIfEqual {25}
	013 Move X0, [X19+88]
	014 Move X1, X31
	015 Call String.IsNullOrEmpty, X0
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move W8, [X19+81]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 2
	023 Compare TEMP, 2
	024 JumpIfEqual {28}
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Return 
	028 Move X0, [X19+928]
	029 Compare X0, 0
	030 JumpIfEqual {44}
	031 Move X8, [X0]
	032 Move X9, [X8+568]
	033 Move X1, [X8+576]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Compare X0, 0
	036 JumpIfEqual {44}
	037 Move X8, [X0+64]
	038 Move X2, [X0+24]
	039 Move X1, [X0+40]
	040 Move X0, X8
	041 Move X30, [X31+16]
	042 Move X19, [X31+24]
	043 CallNoReturn X2
	044 Call 0x1C17F20

Method: System.Boolean IsViewDataPersitenceSupportedOnChildren(System.Boolean existingState)

Disassembly:
	0x03DF37E8 B.NE 0x3DF37D4
	0x03DF37EC MOVZ W2, 0x6
	0x03DF37F0 MOV X0, X19
	0x03DF37F4 BL 0x1C5C788
	0x03DF37F8 B 0x3DF3AFC
	0x03DF37FC B.NE 0x3DF3624
	0x03DF3800 ADD X8, X31, 0x110
	0x03DF3804 MOV V0.16B, V8.16B
	0x03DF3808 MOV V1.16B, V11.16B
	0x03DF380C MOV V2.16B, V10.16B
	0x03DF3810 MOV V3.16B, V9.16B
	0x03DF3814 MOV X0, X31
	0x03DF3818 BL 0x3DFE154
	0x03DF381C LDR V0, [X31 + 0x11]
	0x03DF3820 LDR W8, [X31 + 0x120]
	0x03DF3824 STR V0, [X31 + 0xF]
	0x03DF3828 STR W8, [X31 + 0x100]
	0x03DF382C CBZ X19, 0x3DF488C
	0x03DF3830 LDR V0, [X31 + 0xF]
	0x03DF3834 LDR W8, [X31 + 0x100]
	0x03DF3838 LDR X1, [X25]
	0x03DF383C STR V0, [X31 + 0xD]
	0x03DF3840 STR W8, [X31 + 0xE0]
	0x03DF3844 LDR X8, [X19]
	0x03DF3848 LDRH W9, [X8 + 0x12E]
	0x03DF384C CBZ X9, 0x3DF3870
	0x03DF3850 LDR X10, [X8 + 0xB0]
	0x03DF3854 ADD X10, X10, 0x8
	0x03DF3858 LDUR X11, [X10 - 0x8]
	0x03DF385C CMP X11, X1
	0x03DF3860 B.EQ 0x3DF3900

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+88]
	006 Move W20, W1
	007 Move X1, X31
	008 Call String.IsNullOrEmpty, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {20}
	013 Move X8, [X19]
	014 Move X0, X19
	015 Move X9, [X8+1896]
	016 Move X1, [X8+1904]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W20, W31
	020 Move X0, [X19+912]
	021 Compare X0, 0
	022 JumpIfEqual {31}
	023 Move X8, [X0]
	024 Move X9, [X8+1896]
	025 Move X1, [X8+1904]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Or W8, W20, W8
	030 And W0, W8, 1
	031 And W0, W20, 1
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Void OnViewDataReady(System.Boolean enablePersistence)

Disassembly:
	0x03DF3864 SUBS X9, X9, 0x1
	0x03DF3868 ADD X10, X10, 0x10
	0x03DF386C B.NE 0x3DF3858
	0x03DF3870 MOVZ W2, 0xF
	0x03DF3874 MOV X0, X19
	0x03DF3878 BL 0x1C5C788
	0x03DF387C B 0x3DF3910
	0x03DF3880 ADD X8, X31, 0x110
	0x03DF3884 MOV V0.16B, V8.16B
	0x03DF3888 MOV V1.16B, V11.16B
	0x03DF388C MOV V2.16B, V10.16B
	0x03DF3890 MOV V3.16B, V9.16B
	0x03DF3894 MOV X0, X31
	0x03DF3898 BL 0x3DFE154
	0x03DF389C LDR V0, [X31 + 0x11]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {16}
	004 Move W8, [X0+80]
	005 And W31, W1, 1
	006 Move W9, 512
	007 Move X10, [X0]
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 And W8, W8, 0xFFFFFDFF
	010 Or W8, W8, W9
	011 Move [X0+80], W8
	012 Move X2, [X10+1848]
	013 Move X1, [X10+1856]
	014 Move X30, [X31+16]
	015 CallNoReturn X2
	016 Call 0x1C17F20

Method: System.Void OnViewDataReady()

Disassembly:
	0x03DF38A0 LDR W8, [X31 + 0x120]

ISIL:
	001 Return 

Method: System.Boolean ContainsPoint(UnityEngine.Vector2 localPoint)

Disassembly:
	0x03DF38A4 STR V0, [X31 + 0xF]
	0x03DF38A8 STR W8, [X31 + 0x100]
	0x03DF38AC CBZ X19, 0x3DF4898
	0x03DF38B0 LDR V0, [X31 + 0xF]
	0x03DF38B4 LDR W8, [X31 + 0x100]
	0x03DF38B8 LDR X1, [X25]
	0x03DF38BC STR V0, [X31 + 0x1]
	0x03DF38C0 STR W8, [X31 + 0x20]
	0x03DF38C4 LDR X8, [X19]
	0x03DF38C8 LDRH W9, [X8 + 0x12E]
	0x03DF38CC CBZ X9, 0x3DF38F0
	0x03DF38D0 LDR X10, [X8 + 0xB0]
	0x03DF38D4 ADD X10, X10, 0x8
	0x03DF38D8 LDUR X11, [X10 - 0x8]
	0x03DF38DC CMP X11, X1
	0x03DF38E0 B.EQ 0x3DF3B8C
	0x03DF38E4 SUBS X9, X9, 0x1
	0x03DF38E8 ADD X10, X10, 0x10
	0x03DF38EC B.NE 0x3DF38D8
	0x03DF38F0 MOVZ W2, 0x31
	0x03DF38F4 MOV X0, X19

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move V8, V1
	005 Move V9, V0
	006 Call VisualElement.get_layout, X0
	007 NotImplemented "Instruction FCMP not yet implemented."
	008 Move W0, W31
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 Move S0, W31
	011 Add S0, S2, S0
	012 NotImplemented "Instruction FCMP not yet implemented."
	013 Move S0, W31
	014 Add S0, S3, S0
	015 NotImplemented "Instruction FCMP not yet implemented."
	016 NotImplemented "Instruction CSET not yet implemented."
	017 Move X30, [X31+16]
	018 Move D9, [X31+32]
	019 Move D8, [X31+40]
	020 Return X0

Method: System.Boolean get_requireMeasureFunction()

Disassembly:
	0x03DF38F8 BL 0x1C5C788
	0x03DF38FC B 0x3DF3B9C
	0x03DF3900 LDR W9, [X10]

ISIL:
	001 Move W8, [X0+81]
	002 And W0, W8, 1
	003 Return X0

Method: System.Void set_requireMeasureFunction(System.Boolean value)

Disassembly:
	0x03DF3904 ADD W9, W9, 0xF
	0x03DF3908 ADD X8, X8, W9, 0x4, SXTW
	0x03DF390C ADD X0, X8, 0x138
	0x03DF3910 LDR V0, [X31 + 0xD]
	0x03DF3914 LDR W8, [X31 + 0xE0]
	0x03DF3918 LDR X9, [X0]
	0x03DF391C STR V0, [X31 + 0x11]
	0x03DF3920 STR W8, [X31 + 0x120]
	0x03DF3924 LDR X2, [X0 + 0x8]
	0x03DF3928 ADD X1, X31, 0x110
	0x03DF392C MOV X0, X19
	0x03DF3930 BLR X9
	0x03DF3934 B 0x3DF3624
	0x03DF3938 MOV V0.16B, V8.16B
	0x03DF393C MOV X0, X31
	0x03DF3940 BL 0x3DFED98
	0x03DF3944 CBZ X19, 0x3DF48AC
	0x03DF3948 LDR X8, [X19]
	0x03DF394C MOV X21, X1
	0x03DF3950 LDR X1, [X25]
	0x03DF3954 MOV X20, X0
	0x03DF3958 LDRH W9, [X8 + 0x12E]
	0x03DF395C CBZ X9, 0x3DF3980
	0x03DF3960 LDR X10, [X8 + 0xB0]
	0x03DF3964 ADD X10, X10, 0x8
	0x03DF3968 LDUR X11, [X10 - 0x8]
	0x03DF396C CMP X11, X1
	0x03DF3970 B.EQ 0x3DF4414
	0x03DF3974 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {45}
	005 Move W8, [X0+80]
	006 Move X19, X0
	007 Move X0, [X0+696]
	008 And W31, W1, 1
	009 Move W9, 256
	010 And W8, W8, 0xFFFFFEFF
	011 NotImplemented "Instruction CSEL not yet implemented."
	012 Or W8, W8, W9
	013 Move [X19+80], W8
	014 Move TEMP, X1
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {29}
	018 Compare X0, 0
	019 JumpIfEqual {45}
	020 Move X1, X31
	021 Call YogaNode.get_IsMeasureDefined, X0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {42}
	026 Move X0, X19
	027 Move X30, [X31+16]
	028 Move X19, [X31+24]
	029 Compare X0, 0
	030 JumpIfEqual {45}
	031 Move X1, X31
	032 Call YogaNode.get_IsMeasureDefined, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {42}
	037 Move X0, X19
	038 Move X30, [X31+16]
	039 Move X19, [X31+24]
	040 Call VisualElement.RemoveMeasureFunction, X0
	041 Return 
	042 Move X30, [X31+16]
	043 Move X19, [X31+24]
	044 Return 
	045 Call 0x1C17F20

Method: System.Void AssignMeasureFunction()

Disassembly:
	0x03DF3978 ADD X10, X10, 0x10
	0x03DF397C B.NE 0x3DF3968
	0x03DF3980 MOVZ W2, 0xC
	0x03DF3984 MOV X0, X19
	0x03DF3988 BL 0x1C5C788
	0x03DF398C B 0x3DF4424
	0x03DF3990 MOV V0.16B, V8.16B
	0x03DF3994 MOV X0, X31
	0x03DF3998 BL 0x3DFED98
	0x03DF399C CBZ X19, 0x3DF48A8
	0x03DF39A0 LDR X8, [X19]
	0x03DF39A4 MOV X21, X1
	0x03DF39A8 LDR X1, [X25]
	0x03DF39AC MOV X20, X0
	0x03DF39B0 LDRH W9, [X8 + 0x12E]
	0x03DF39B4 CBZ X9, 0x3DF39D8
	0x03DF39B8 LDR X10, [X8 + 0xB0]
	0x03DF39BC ADD X10, X10, 0x8
	0x03DF39C0 LDUR X11, [X10 - 0x8]
	0x03DF39C4 CMP X11, X1
	0x03DF39C8 B.EQ 0x3DF443C
	0x03DF39CC SUBS X9, X9, 0x1
	0x03DF39D0 ADD X10, X10, 0x10
	0x03DF39D4 B.NE 0x3DF39C0
	0x03DF39D8 MOVZ W2, 0x4
	0x03DF39DC MOV X0, X19
	0x03DF39E0 BL 0x1C5C788
	0x03DF39E4 B 0x3DF444C
	0x03DF39E8 MOV V0.16B, V8.16B
	0x03DF39EC MOV X0, X31
	0x03DF39F0 BL 0x3DFED98
	0x03DF39F4 CBZ X19, 0x3DF48A0
	0x03DF39F8 LDR X8, [X19]
	0x03DF39FC MOV X21, X1
	0x03DF3A00 LDR X1, [X25]
	0x03DF3A04 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5F6000
	007 Move X22, 0x377000
	008 Move X21, 0x377000
	009 Move W8, [X20+597]
	010 Move X22, [X22+2496]
	011 Move X21, [X21+2504]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x377000
	018 Move X0, [X0+2496]
	019 Call 0x1C17CF4
	020 Move X0, 0x377000
	021 Move X0, [X0+2504]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+597], W8
	025 Move X0, [X22]
	026 Move X20, [X19+696]
	027 Call 0x1C17F10
	028 Move X2, [X21]
	029 Move X1, X19
	030 Move X3, X31
	031 Move X21, X0
	032 Call MeasureFunction..ctor, X0, X1, X2
	033 Compare X20, 0
	034 JumpIfEqual {45}
	035 Move X0, X20
	036 Move X1, X21
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X2, X31
	042 Move X30, [X31+48]
	043 Call YogaNode.SetMeasureFunction, X0, X1
	044 Return 
	045 Call 0x1C17F20

Method: System.Void RemoveMeasureFunction()

Disassembly:
	0x03DF3A08 LDRH W9, [X8 + 0x12E]
	0x03DF3A0C CBZ X9, 0x3DF3A30
	0x03DF3A10 LDR X10, [X8 + 0xB0]
	0x03DF3A14 ADD X10, X10, 0x8
	0x03DF3A18 LDUR X11, [X10 - 0x8]
	0x03DF3A1C CMP X11, X1
	0x03DF3A20 B.EQ 0x3DF4464
	0x03DF3A24 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+696]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X1, X31
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call YogaNode.SetMeasureFunction, X0, X1
	009 Return 
	010 Call 0x1C17F20

Method: UnityEngine.Vector2 DoMeasure(System.Single desiredWidth, UnityEngine.UIElements.VisualElement/MeasureMode widthMode, System.Single desiredHeight, UnityEngine.UIElements.VisualElement/MeasureMode heightMode)

Disassembly:
	0x03DF3A28 ADD X10, X10, 0x10
	0x03DF3A2C B.NE 0x3DF3A18
	0x03DF3A30 MOVZ W2, 0xB
	0x03DF3A34 MOV X0, X19

ISIL:
	001 Move W8, 0x7FC00000
	002 Move S0, W8
	003 Move V1, V0
	004 Return X0

Method: UnityEngine.Yoga.YogaSize Measure(UnityEngine.Yoga.YogaNode node, System.Single width, UnityEngine.Yoga.YogaMeasureMode widthMode, System.Single height, UnityEngine.Yoga.YogaMeasureMode heightMode)

Disassembly:
	0x03DF3A38 BL 0x1C5C788
	0x03DF3A3C B 0x3DF4474
	0x03DF3A40 MOV V0.16B, V8.16B
	0x03DF3A44 MOV X0, X31
	0x03DF3A48 BL 0x3DFED98
	0x03DF3A4C CBZ X19, 0x3DF48B0
	0x03DF3A50 LDR X8, [X19]
	0x03DF3A54 MOV X21, X1
	0x03DF3A58 LDR X1, [X25]
	0x03DF3A5C MOV X20, X0
	0x03DF3A60 LDRH W9, [X8 + 0x12E]
	0x03DF3A64 CBZ X9, 0x3DF3A88
	0x03DF3A68 LDR X10, [X8 + 0xB0]
	0x03DF3A6C ADD X10, X10, 0x8
	0x03DF3A70 LDUR X11, [X10 - 0x8]
	0x03DF3A74 CMP X11, X1
	0x03DF3A78 B.EQ 0x3DF44C0
	0x03DF3A7C SUBS X9, X9, 0x1
	0x03DF3A80 ADD X10, X10, 0x10
	0x03DF3A84 B.NE 0x3DF3A70
	0x03DF3A88 MOVZ W2, 0x3
	0x03DF3A8C MOV X0, X19
	0x03DF3A90 BL 0x1C5C788
	0x03DF3A94 B 0x3DF44D0
	0x03DF3A98 MOV V0.16B, V8.16B
	0x03DF3A9C MOV X0, X31
	0x03DF3AA0 BL 0x3DFE658
	0x03DF3AA4 CBZ X19, 0x3DF489C
	0x03DF3AA8 LDR X8, [X19]
	0x03DF3AAC LDR X1, [X25]
	0x03DF3AB0 MOV X20, X0
	0x03DF3AB4 LDRH W9, [X8 + 0x12E]
	0x03DF3AB8 CBZ X9, 0x3DF3ADC
	0x03DF3ABC LDR X10, [X8 + 0xB0]
	0x03DF3AC0 ADD X10, X10, 0x8
	0x03DF3AC4 LDUR X11, [X10 - 0x8]
	0x03DF3AC8 CMP X11, X1
	0x03DF3ACC B.EQ 0x3DF44E8
	0x03DF3AD0 SUBS X9, X9, 0x1
	0x03DF3AD4 ADD X10, X10, 0x10
	0x03DF3AD8 B.NE 0x3DF3AC4
	0x03DF3ADC MOVZ W2, 0x21
	0x03DF3AE0 MOV X0, X19
	0x03DF3AE4 BL 0x1C5C788
	0x03DF3AE8 B 0x3DF44F8
	0x03DF3AEC LDR W9, [X10]
	0x03DF3AF0 ADD W9, W9, 0x6
	0x03DF3AF4 ADD X8, X8, W9, 0x4, SXTW
	0x03DF3AF8 ADD X0, X8, 0x138
	0x03DF3AFC LDR V0, [X31 + 0x9]
	0x03DF3B00 LDR W8, [X31 + 0xA0]
	0x03DF3B04 LDR X9, [X0]
	0x03DF3B08 STR V0, [X31 + 0x11]
	0x03DF3B0C STR W8, [X31 + 0x120]
	0x03DF3B10 LDR X2, [X0 + 0x8]
	0x03DF3B14 ADD X1, X31, 0x110
	0x03DF3B18 MOV X0, X19
	0x03DF3B1C BLR X9
	0x03DF3B20 ADD X8, X31, 0x110
	0x03DF3B24 MOV V0.16B, V8.16B
	0x03DF3B28 MOV V1.16B, V11.16B
	0x03DF3B2C MOV V2.16B, V10.16B
	0x03DF3B30 MOV V3.16B, V9.16B
	0x03DF3B34 MOV X0, X31
	0x03DF3B38 BL 0x3DFE154
	0x03DF3B3C LDR V0, [X31 + 0x11]
	0x03DF3B40 LDR W8, [X31 + 0x120]
	0x03DF3B44 LDR X1, [X25]
	0x03DF3B48 STR V0, [X31 + 0x7]
	0x03DF3B4C STR W8, [X31 + 0x80]
	0x03DF3B50 LDR X8, [X19]
	0x03DF3B54 LDRH W9, [X8 + 0x12E]
	0x03DF3B58 CBZ X9, 0x3DF3B7C
	0x03DF3B5C LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X24, 0x5F6000
	013 Move X23, 0x301000
	014 Move W8, [X24+598]
	015 Move X23, [X23+2600]
	016 Move W20, W3
	017 Move V8, V1
	018 Move W21, W2
	019 Move V9, V0
	020 Move X22, X1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x301000
	027 Move X0, [X0+2600]
	028 Call 0x1C17CF4
	029 Move X0, 0x377000
	030 Move X0, [X0+2512]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X24+598], W8
	034 Move X0, [X23]
	035 Move X24, 0x377000
	036 Move X23, [X19+696]
	037 Move W8, [X0+224]
	038 Move X24, [X24+2512]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X1, [X24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSET not yet implemented."
	045 Move X2, X31
	046 Call Debug.Assert, X0, X1
	047 Move X8, [X19]
	048 Move X0, X19
	049 Move V0, V9
	050 Move W1, W21
	051 Move X9, [X8+1880]
	052 Move X3, [X8+1888]
	053 Move V1, V8
	054 Move W2, W20
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X0, X19
	057 Move V8, V0
	058 Move V9, V1
	059 Call VisualElement.get_scaledPixelsPerPoint, X0
	060 Move X8, -53510144
	061 Move V11, [X8+524]
	062 Move V10, V0
	063 Move V0, V8
	064 Move V1, V10
	065 Move V2, V11
	066 Move X0, X31
	067 Call AlignmentUtils.RoundToPixelGrid, V0, V1, V2
	068 Move V8, V0
	069 Move V0, V9
	070 Move V1, V10
	071 Move V2, V11
	072 Move X0, X31
	073 Call AlignmentUtils.RoundToPixelGrid, V0, V1, V2
	074 Move V1, V0
	075 Move V0, V8
	076 Move X20, [X31+80]
	077 Move X19, [X31+88]
	078 Move X22, [X31+64]
	079 Move X21, [X31+72]
	080 Move X24, [X31+48]
	081 Move X23, [X31+56]
	082 Move X30, [X31+32]
	083 Move D9, [X31+16]
	084 Move D8, [X31+24]
	085 Move X0, X31
	086 Move D11, [X31+96]
	087 Move D10, [X31+104]
	088 Call MeasureOutput.Make, V0, V1
	089 Return X0

Method: System.Void FinalizeLayout()

Disassembly:
	0x03DF3B60 ADD X10, X10, 0x8
	0x03DF3B64 LDUR X11, [X10 - 0x8]
	0x03DF3B68 CMP X11, X1
	0x03DF3B6C B.EQ 0x3DF3BC4
	0x03DF3B70 SUBS X9, X9, 0x1
	0x03DF3B74 ADD X10, X10, 0x10
	0x03DF3B78 B.NE 0x3DF3B64
	0x03DF3B7C MOVZ W2, 0xA
	0x03DF3B80 MOV X0, X19
	0x03DF3B84 BL 0x1C5C788
	0x03DF3B88 B 0x3DF3BD4
	0x03DF3B8C LDR W9, [X10]
	0x03DF3B90 ADD W9, W9, 0x31
	0x03DF3B94 ADD X8, X8, W9, 0x4, SXTW
	0x03DF3B98 ADD X0, X8, 0x138
	0x03DF3B9C LDR V0, [X31 + 0x1]
	0x03DF3BA0 LDR W8, [X31 + 0x20]
	0x03DF3BA4 LDR X9, [X0]
	0x03DF3BA8 STR V0, [X31 + 0x11]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+944]
	004 Move X19, X0
	005 Compare X8, 0
	006 JumpIfNotEqual {13}
	007 Move X0, X19
	008 Call VisualElement.get_hasRunningAnimations, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {20}
	013 Move X1, [X19+696]
	014 Add X0, X19, 704
	015 Move X2, X31
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call ComputedStyle.SyncWithLayout, X0, X1
	019 Return 
	020 Move X0, [X19+696]
	021 Compare X0, 0
	022 JumpIfEqual {29}
	023 Move X1, [X19+752]
	024 Move X2, X31
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Call YogaNode.CopyStyle, X0, X1
	028 Return 
	029 Call 0x1C17F20

Method: System.Void SetInlineRule(UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleRule rule)

Disassembly:
	0x03DF3BAC STR W8, [X31 + 0x120]
	0x03DF3BB0 LDR X2, [X0 + 0x8]
	0x03DF3BB4 ADD X1, X31, 0x110
	0x03DF3BB8 MOV X0, X19
	0x03DF3BBC BLR X9
	0x03DF3BC0 B 0x3DF3624
	0x03DF3BC4 LDR W9, [X10]
	0x03DF3BC8 ADD W9, W9, 0xA
	0x03DF3BCC ADD X8, X8, W9, 0x4, SXTW
	0x03DF3BD0 ADD X0, X8, 0x138
	0x03DF3BD4 LDR V0, [X31 + 0x7]
	0x03DF3BD8 LDR W8, [X31 + 0x80]
	0x03DF3BDC LDR X9, [X0]
	0x03DF3BE0 STR V0, [X31 + 0x11]
	0x03DF3BE4 STR W8, [X31 + 0x120]
	0x03DF3BE8 LDR X2, [X0 + 0x8]
	0x03DF3BEC ADD X1, X31, 0x110
	0x03DF3BF0 MOV X0, X19
	0x03DF3BF4 BLR X9
	0x03DF3BF8 ADD X8, X31, 0x110
	0x03DF3BFC MOV V0.16B, V8.16B
	0x03DF3C00 MOV V1.16B, V11.16B
	0x03DF3C04 MOV V2.16B, V10.16B
	0x03DF3C08 MOV V3.16B, V9.16B
	0x03DF3C0C MOV X0, X31
	0x03DF3C10 BL 0x3DFE154
	0x03DF3C14 LDR V0, [X31 + 0x11]
	0x03DF3C18 LDR W8, [X31 + 0x120]
	0x03DF3C1C LDR X1, [X25]
	0x03DF3C20 STR V0, [X31 + 0x5]
	0x03DF3C24 STR W8, [X31 + 0x60]
	0x03DF3C28 LDR X8, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5F6000
	007 Move W8, [X22+599]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x377000
	016 Move X0, [X0+2192]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+599], W8
	020 Move X22, [X21+944]
	021 Compare X22, 0
	022 JumpIfNotEqual {32}
	023 Move X8, 0x377000
	024 Move X8, [X8+2192]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X22, X0
	029 Call StyleValueCollection..ctor, X0
	030 Move [X22+32], X21
	031 Move [X21+944], X22
	032 Move X0, X22
	033 Move X1, X20
	034 Move X2, X19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Call InlineStyleAccess.SetInlineRule, X0, X1, X2
	041 Return 

Method: System.Void SetComputedStyle(ref UnityEngine.UIElements.ComputedStyle newStyle)

Disassembly:
	0x03DF3C2C LDRH W9, [X8 + 0x12E]
	0x03DF3C30 CBZ X9, 0x3DF3C54
	0x03DF3C34 LDR X10, [X8 + 0xB0]
	0x03DF3C38 ADD X10, X10, 0x8
	0x03DF3C3C LDUR X11, [X10 - 0x8]
	0x03DF3C40 CMP X11, X1
	0x03DF3C44 B.EQ 0x3DF3C64
	0x03DF3C48 SUBS X9, X9, 0x1
	0x03DF3C4C ADD X10, X10, 0x10
	0x03DF3C50 B.NE 0x3DF3C3C
	0x03DF3C54 MOVZ W2, 0x8
	0x03DF3C58 MOV X0, X19
	0x03DF3C5C BL 0x1C5C788
	0x03DF3C60 B 0x3DF3C74
	0x03DF3C64 LDR W9, [X10]
	0x03DF3C68 ADD W9, W9, 0x8
	0x03DF3C6C ADD X8, X8, W9, 0x4, SXTW
	0x03DF3C70 ADD X0, X8, 0x138
	0x03DF3C74 LDR V0, [X31 + 0x5]
	0x03DF3C78 LDR W8, [X31 + 0x60]
	0x03DF3C7C LDR X9, [X0]
	0x03DF3C80 STR V0, [X31 + 0x11]
	0x03DF3C84 STR W8, [X31 + 0x120]
	0x03DF3C88 LDR X2, [X0 + 0x8]
	0x03DF3C8C ADD X1, X31, 0x110
	0x03DF3C90 MOV X0, X19
	0x03DF3C94 BLR X9
	0x03DF3C98 ADD X8, X31, 0x110
	0x03DF3C9C MOV V0.16B, V8.16B
	0x03DF3CA0 MOV V1.16B, V11.16B
	0x03DF3CA4 MOV V2.16B, V10.16B
	0x03DF3CA8 MOV V3.16B, V9.16B
	0x03DF3CAC MOV X0, X31
	0x03DF3CB0 BL 0x3DFE154
	0x03DF3CB4 LDR V0, [X31 + 0x11]
	0x03DF3CB8 LDR W8, [X31 + 0x120]
	0x03DF3CBC LDR X1, [X25]
	0x03DF3CC0 STR V0, [X31 + 0x3]
	0x03DF3CC4 STR W8, [X31 + 0x40]
	0x03DF3CC8 LDR X8, [X19]
	0x03DF3CCC LDRH W9, [X8 + 0x12E]
	0x03DF3CD0 CBZ X9, 0x3DF3CF4
	0x03DF3CD4 LDR X10, [X8 + 0xB0]
	0x03DF3CD8 ADD X10, X10, 0x8
	0x03DF3CDC LDUR X11, [X10 - 0x8]
	0x03DF3CE0 CMP X11, X1
	0x03DF3CE4 B.EQ 0x3DF3D04
	0x03DF3CE8 SUBS X9, X9, 0x1
	0x03DF3CEC ADD X10, X10, 0x10
	0x03DF3CF0 B.NE 0x3DF3CDC
	0x03DF3CF4 MOVZ W2, 0x2
	0x03DF3CF8 MOV X0, X19
	0x03DF3CFC BL 0x1C5C788
	0x03DF3D00 B 0x3DF3D14
	0x03DF3D04 LDR W9, [X10]
	0x03DF3D08 ADD W9, W9, 0x2
	0x03DF3D0C ADD X8, X8, W9, 0x4, SXTW
	0x03DF3D10 ADD X0, X8, 0x138
	0x03DF3D14 LDR V0, [X31 + 0x3]
	0x03DF3D18 LDR W8, [X31 + 0x40]
	0x03DF3D1C LDR X9, [X0]
	0x03DF3D20 STR V0, [X31 + 0x11]
	0x03DF3D24 STR W8, [X31 + 0x120]
	0x03DF3D28 LDR X2, [X0 + 0x8]
	0x03DF3D2C ADD X1, X31, 0x110
	0x03DF3D30 MOV X0, X19
	0x03DF3D34 BLR X9
	0x03DF3D38 B 0x3DF3624
	0x03DF3D3C ORR W9, W31, 0x10001
	0x03DF3D40 CMP W8, W9
	0x03DF3D44 B.NE 0x3DF3624
	0x03DF3D48 MOV V0.16B, V8.16B
	0x03DF3D4C MOV X0, X31
	0x03DF3D50 BL 0x3DFED98
	0x03DF3D54 CBZ X19, 0x3DF4904
	0x03DF3D58 LDR X8, [X19]
	0x03DF3D5C MOV X21, X1
	0x03DF3D60 LDR X1, [X25]
	0x03DF3D64 MOV X20, X0
	0x03DF3D68 LDRH W9, [X8 + 0x12E]
	0x03DF3D6C CBZ X9, 0x3DF3D90
	0x03DF3D70 LDR X10, [X8 + 0xB0]
	0x03DF3D74 ADD X10, X10, 0x8
	0x03DF3D78 LDUR X11, [X10 - 0x8]
	0x03DF3D7C CMP X11, X1
	0x03DF3D80 B.EQ 0x3DF4814
	0x03DF3D84 SUBS X9, X9, 0x1
	0x03DF3D88 ADD X10, X10, 0x10
	0x03DF3D8C B.NE 0x3DF3D78
	0x03DF3D90 MOVZ W2, 0x17
	0x03DF3D94 MOV X0, X19
	0x03DF3D98 BL 0x1C5C788
	0x03DF3D9C B 0x3DF4824
	0x03DF3DA0 MOV V0.16B, V8.16B
	0x03DF3DA4 MOV X0, X31
	0x03DF3DA8 BL 0x3DFED98
	0x03DF3DAC CBZ X19, 0x3DF48D8
	0x03DF3DB0 LDR X8, [X19]
	0x03DF3DB4 MOV X21, X1
	0x03DF3DB8 LDR X1, [X25]
	0x03DF3DBC MOV X20, X0
	0x03DF3DC0 LDRH W9, [X8 + 0x12E]
	0x03DF3DC4 CBZ X9, 0x3DF3DE8
	0x03DF3DC8 LDR X10, [X8 + 0xB0]
	0x03DF3DCC ADD X10, X10, 0x8
	0x03DF3DD0 LDUR X11, [X10 - 0x8]
	0x03DF3DD4 CMP X11, X1
	0x03DF3DD8 B.EQ 0x3DF450C
	0x03DF3DDC SUBS X9, X9, 0x1
	0x03DF3DE0 ADD X10, X10, 0x10
	0x03DF3DE4 B.NE 0x3DF3DD0
	0x03DF3DE8 MOVZ W2, 0x27
	0x03DF3DEC MOV X0, X19
	0x03DF3DF0 BL 0x1C5C788
	0x03DF3DF4 B 0x3DF451C

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X20, 0x5F6000
	009 Move W8, [X20+600]
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x375000
	017 Move X0, [X0+3048]
	018 Call 0x1C17CF4
	019 Move X0, 0x32A000
	020 Move X0, [X0+3664]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+600], W8
	024 Move X8, [X19+768]
	025 Move X9, [X21+64]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Add X22, X19, 704
	028 Move X0, X22
	029 Move X1, X21
	030 Move X2, X31
	031 Call ComputedStyle.CompareChanges, X0, X1
	032 Move W20, W0
	033 Move X0, X22
	034 Move X1, X21
	035 Move X2, X31
	036 Call ComputedStyle.CopyFrom, X0, X1
	037 Move X0, X19
	038 Call VisualElement.FinalizeLayout, X0
	039 Move X21, [X19+928]
	040 Compare X21, 0
	041 JumpIfEqual {55}
	042 Move X23, 0x32A000
	043 Move X23, [X23+3664]
	044 Move X0, [X23]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X23]
	050 Move X8, [X0+184]
	051 Move X0, X21
	052 Move X2, X31
	053 Move W1, [X8+8]
	054 Call BaseVisualElementPanel.GetTopElementUnderPointer, X0, X1
	055 Move X0, X31
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, [X19+928]
	058 Compare X0, 0
	059 JumpIfEqual {124}
	060 Move X8, [X0]
	061 Move X9, [X8+872]
	062 Move X1, [X8+880]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X21, X0
	065 Add X8, X31, 64
	066 Move X0, X22
	067 Move X1, X31
	068 Call ComputedStyle.get_cursor, X0
	069 Move V0, [X31+4]
	070 Move X8, [X31+80]
	071 Move [X31+2], V0
	072 Move [X31+48], X8
	073 Compare X21, 0
	074 JumpIfEqual {124}
	075 Move V0, [X31+2]
	076 Move X8, [X31+48]
	077 Move X10, 0x375000
	078 Move [X31], V0
	079 Move [X31+16], X8
	080 Move X8, [X21]
	081 Move X10, [X10+3048]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Move X1, [X10]
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move X0, X21
	093 Move W2, W31
	094 Call 0x1C5D788
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Add X8, X8, X9
	097 Add X0, X8, 312
	098 Move V0, [X31]
	099 Move X8, [X31+16]
	100 Move X9, [X0]
	101 Add X1, X31, 64
	102 Move [X31+4], V0
	103 Move [X31+80], X8
	104 Move X2, [X0+8]
	105 Move X0, X21
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X0, [X19+928]
	108 Compare X0, 0
	109 JumpIfEqual {116}
	110 Move X8, [X0]
	111 Move X1, X19
	112 Move W2, W20
	113 Move X9, [X8+824]
	114 Move X3, [X8+832]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X20, [X31+128]
	117 Move X19, [X31+136]
	118 Move X22, [X31+112]
	119 Move X21, [X31+120]
	120 Move X30, [X31+96]
	121 Move X23, [X31+104]
	122 Add X31, X31, 144
	123 Return 
	124 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03DF3DF8 MOV V0.16B, V8.16B
	0x03DF3DFC MOV X0, X31
	0x03DF3E00 BL 0x3DFED98
	0x03DF3E04 CBZ X19, 0x3DF48E4
	0x03DF3E08 LDR X8, [X19]
	0x03DF3E0C MOV X21, X1
	0x03DF3E10 LDR X1, [X25]
	0x03DF3E14 MOV X20, X0
	0x03DF3E18 LDRH W9, [X8 + 0x12E]
	0x03DF3E1C CBZ X9, 0x3DF3E40
	0x03DF3E20 LDR X10, [X8 + 0xB0]
	0x03DF3E24 ADD X10, X10, 0x8
	0x03DF3E28 LDUR X11, [X10 - 0x8]
	0x03DF3E2C CMP X11, X1
	0x03DF3E30 B.EQ 0x3DF4534
	0x03DF3E34 SUBS X9, X9, 0x1
	0x03DF3E38 ADD X10, X10, 0x10
	0x03DF3E3C B.NE 0x3DF3E28
	0x03DF3E40 MOVZ W2, 0x24
	0x03DF3E44 MOV X0, X19
	0x03DF3E48 BL 0x1C5C788
	0x03DF3E4C B 0x3DF4544
	0x03DF3E50 MOV V0.16B, V8.16B
	0x03DF3E54 MOV X0, X31
	0x03DF3E58 BL 0x3DFED98
	0x03DF3E5C CBZ X19, 0x3DF48D0
	0x03DF3E60 LDR X8, [X19]
	0x03DF3E64 MOV X21, X1
	0x03DF3E68 LDR X1, [X25]
	0x03DF3E6C MOV X20, X0
	0x03DF3E70 LDRH W9, [X8 + 0x12E]
	0x03DF3E74 CBZ X9, 0x3DF3E98
	0x03DF3E78 LDR X10, [X8 + 0xB0]
	0x03DF3E7C ADD X10, X10, 0x8
	0x03DF3E80 LDUR X11, [X10 - 0x8]
	0x03DF3E84 CMP X11, X1
	0x03DF3E88 B.EQ 0x3DF455C
	0x03DF3E8C SUBS X9, X9, 0x1
	0x03DF3E90 ADD X10, X10, 0x10
	0x03DF3E94 B.NE 0x3DF3E80
	0x03DF3E98 MOVZ W2, 0x1C
	0x03DF3E9C MOV X0, X19
	0x03DF3EA0 BL 0x1C5C788
	0x03DF3EA4 B 0x3DF456C
	0x03DF3EA8 MOV V0.16B, V8.16B
	0x03DF3EAC MOV X0, X31
	0x03DF3EB0 BL 0x3DFED98
	0x03DF3EB4 CBZ X19, 0x3DF48BC
	0x03DF3EB8 LDR X8, [X19]
	0x03DF3EBC MOV X21, X1
	0x03DF3EC0 LDR X1, [X25]
	0x03DF3EC4 MOV X20, X0
	0x03DF3EC8 LDRH W9, [X8 + 0x12E]
	0x03DF3ECC CBZ X9, 0x3DF3EF0
	0x03DF3ED0 LDR X10, [X8 + 0xB0]
	0x03DF3ED4 ADD X10, X10, 0x8
	0x03DF3ED8 LDUR X11, [X10 - 0x8]
	0x03DF3EDC CMP X11, X1
	0x03DF3EE0 B.EQ 0x3DF4584
	0x03DF3EE4 SUBS X9, X9, 0x1
	0x03DF3EE8 ADD X10, X10, 0x10
	0x03DF3EEC B.NE 0x3DF3ED8
	0x03DF3EF0 MOVZ W2, 0xE
	0x03DF3EF4 MOV X0, X19
	0x03DF3EF8 BL 0x1C5C788
	0x03DF3EFC B 0x3DF4594
	0x03DF3F00 MOV V0.16B, V8.16B
	0x03DF3F04 MOV X0, X31
	0x03DF3F08 BL 0x3DFED98
	0x03DF3F0C CBZ X19, 0x3DF48DC
	0x03DF3F10 LDR X8, [X19]
	0x03DF3F14 MOV X21, X1
	0x03DF3F18 LDR X1, [X25]
	0x03DF3F1C MOV X20, X0
	0x03DF3F20 LDRH W9, [X8 + 0x12E]
	0x03DF3F24 CBZ X9, 0x3DF3F48
	0x03DF3F28 LDR X10, [X8 + 0xB0]
	0x03DF3F2C ADD X10, X10, 0x8
	0x03DF3F30 LDUR X11, [X10 - 0x8]
	0x03DF3F34 CMP X11, X1
	0x03DF3F38 B.EQ 0x3DF45AC
	0x03DF3F3C SUBS X9, X9, 0x1
	0x03DF3F40 ADD X10, X10, 0x10
	0x03DF3F44 B.NE 0x3DF3F30
	0x03DF3F48 MOVZ W2, 0x1D
	0x03DF3F4C MOV X0, X19
	0x03DF3F50 BL 0x1C5C788
	0x03DF3F54 B 0x3DF45BC
	0x03DF3F58 MOV V0.16B, V8.16B
	0x03DF3F5C MOV X0, X31
	0x03DF3F60 BL 0x3DFED98

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5F6000
	007 Move X20, 0x301000
	008 Move W8, [X21+601]
	009 Move X20, [X20+2760]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x301000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move X0, 0x301000
	019 Move X0, [X0+3544]
	020 Call 0x1C17CF4
	021 Move X0, 0x377000
	022 Move X0, [X0+2520]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+601], W8
	026 Move X0, [X20]
	027 Move W1, 7
	028 Move [X31], X31
	029 Move [X31+8], X31
	030 Call 0x1C17D6C
	031 Move X20, X0
	032 Move X0, X19
	033 Move X1, X31
	034 Call "il2cpp_vm_object_is_inst", X0
	035 Compare X0, 0
	036 JumpIfEqual {101}
	037 Move X8, [X0]
	038 Move X9, [X8+424]
	039 Move X1, [X8+432]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Compare X20, 0
	042 JumpIfEqual {101}
	043 Move W8, [X20+24]
	044 Compare W8, 0
	045 JumpIfEqual {100}
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X20+32], X0
	048 Move X9, 0x301000
	049 Move X9, [X9+3544]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X10, [X9]
	052 Move [X20+40], X10
	053 Move X10, [X19+56]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move [X20+48], X10
	056 Move X8, [X9]
	057 Move X0, X19
	058 Move [X20+56], X8
	059 Call VisualElement.get_layout, X0
	060 Add X0, X31, 0
	061 Move X1, X31
	062 Move X2, X31
	063 Move X3, X31
	064 Move [X31], S0
	065 Move [X31+8], S1
	066 Move [X31+8], S2
	067 Move [X31+16], S3
	068 Call Rect.ToString, X0, X1, X2
	069 Move W8, [X20+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X20+64], X0
	073 Move X8, 0x377000
	074 Move X8, [X8+2520]
	075 Move X0, X19
	076 Move X8, [X8]
	077 Move [X20+72], X8
	078 Call VisualElement.get_worldBound, X0
	079 Add X0, X31, 0
	080 Move X1, X31
	081 Move X2, X31
	082 Move X3, X31
	083 Move [X31], S0
	084 Move [X31+8], S1
	085 Move [X31+8], S2
	086 Move [X31+16], S3
	087 Call Rect.ToString, X0, X1, X2
	088 Move W8, [X20+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X20+80], X0
	091 Move X0, X20
	092 Move X1, X31
	093 Call String.Concat, X0
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X30, [X31+16]
	097 Move X21, [X31+24]
	098 Add X31, X31, 48
	099 Return X0
	100 Call 0x1C17F28
	101 Call 0x1C17F20

Method: System.Collections.Generic.List`1<System.String> GetClassesForIteration()

Disassembly:
	0x03DF3F64 CBZ X19, 0x3DF48CC
	0x03DF3F68 LDR X8, [X19]

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void AddToClassList(System.String className)

Disassembly:
	0x03DF2C70 LDR X8, [X19 + 0x300]
	0x03DF2C74 LDR X9, [X21 + 0x40]
	0x03DF2C78 CMP X8, X9
	0x03DF2C7C B.EQ 0x3DF2DE0
	0x03DF2C80 ADD X22, X19, 0x2C0
	0x03DF2C84 MOV X0, X22
	0x03DF2C88 MOV X1, X21
	0x03DF2C8C MOV X2, X31
	0x03DF2C90 BL 0x3DDDFCC
	0x03DF2C94 MOV W20, W0
	0x03DF2C98 MOV X0, X22
	0x03DF2C9C MOV X1, X21
	0x03DF2CA0 MOV X2, X31
	0x03DF2CA4 BL 0x3DC91E0
	0x03DF2CA8 MOV X0, X19
	0x03DF2CAC BL 0x3DF2B60
	0x03DF2CB0 LDR X21, [X19 + 0x3A0]
	0x03DF2CB4 CBZ X21, 0x3DF2CEC
	0x03DF2CB8 ADRP X23, 0x32A000
	0x03DF2CBC LDR X23, [X23 + 0xE50]
	0x03DF2CC0 LDR X0, [X23]
	0x03DF2CC4 LDR W8, [X0 + 0xE0]
	0x03DF2CC8 CBNZ W8, 0x3DF2CD4
	0x03DF2CCC BL 0x1C16DFC
	0x03DF2CD0 LDR X0, [X23]
	0x03DF2CD4 LDR X8, [X0 + 0xB8]
	0x03DF2CD8 MOV X0, X21
	0x03DF2CDC MOV X2, X31
	0x03DF2CE0 LDR W1, [X8 + 0x8]
	0x03DF2CE4 BL 0x3DBC148
	0x03DF2CE8 B 0x3DF2CF0
	0x03DF2CEC MOV X0, X31
	0x03DF2CF0 CMP X0, X19
	0x03DF2CF4 B.NE 0x3DF2DC0
	0x03DF2CF8 LDR X0, [X19 + 0x3A0]
	0x03DF2CFC CBZ X0, 0x3DF2DF4
	0x03DF2D00 LDR X8, [X0]
	0x03DF2D04 LDR X9, [X8 + 0x368]
	0x03DF2D08 LDR X1, [X8 + 0x370]
	0x03DF2D0C BLR X9
	0x03DF2D10 MOV X21, X0
	0x03DF2D14 ADD X8, X31, 0x40
	0x03DF2D18 MOV X0, X22
	0x03DF2D1C MOV X1, X31
	0x03DF2D20 BL 0x3DC9A68
	0x03DF2D24 LDR V0, [X31 + 0x4]
	0x03DF2D28 LDR X8, [X31 + 0x50]
	0x03DF2D2C STR V0, [X31 + 0x2]
	0x03DF2D30 STR X8, [X31 + 0x30]
	0x03DF2D34 CBZ X21, 0x3DF2DF4
	0x03DF2D38 LDR V0, [X31 + 0x2]
	0x03DF2D3C LDR X8, [X31 + 0x30]
	0x03DF2D40 ADRP X10, 0x375000
	0x03DF2D44 STR V0, [X31]
	0x03DF2D48 STR X8, [X31 + 0x10]
	0x03DF2D4C LDR X8, [X21]
	0x03DF2D50 LDR X10, [X10 + 0xBE8]
	0x03DF2D54 LDRH W9, [X8 + 0x12E]
	0x03DF2D58 LDR X1, [X10]
	0x03DF2D5C CBZ X9, 0x3DF2D80
	0x03DF2D60 LDR X10, [X8 + 0xB0]
	0x03DF2D64 ADD X10, X10, 0x8
	0x03DF2D68 LDUR X11, [X10 - 0x8]
	0x03DF2D6C CMP X11, X1
	0x03DF2D70 B.EQ 0x3DF2D90
	0x03DF2D74 SUBS X9, X9, 0x1
	0x03DF2D78 ADD X10, X10, 0x10
	0x03DF2D7C B.NE 0x3DF2D68
	0x03DF2D80 MOV X0, X21
	0x03DF2D84 MOV W2, W31
	0x03DF2D88 BL 0x1C5C788
	0x03DF2D8C B 0x3DF2D9C
	0x03DF2D90 LDRSW X9, [X10]
	0x03DF2D94 ADD X8, X8, X9, 0x4, LSL
	0x03DF2D98 ADD X0, X8, 0x138
	0x03DF2D9C LDR V0, [X31]
	0x03DF2DA0 LDR X8, [X31 + 0x10]
	0x03DF2DA4 LDR X9, [X0]
	0x03DF2DA8 ADD X1, X31, 0x40
	0x03DF2DAC STR V0, [X31 + 0x4]
	0x03DF2DB0 STR X8, [X31 + 0x50]
	0x03DF2DB4 LDR X2, [X0 + 0x8]
	0x03DF2DB8 MOV X0, X21
	0x03DF2DBC BLR X9
	0x03DF2DC0 LDR X0, [X19 + 0x3A0]
	0x03DF2DC4 CBZ X0, 0x3DF2DE0
	0x03DF2DC8 LDR X8, [X0]
	0x03DF2DCC MOV X1, X19
	0x03DF2DD0 MOV W2, W20
	0x03DF2DD4 LDR X9, [X8 + 0x338]
	0x03DF2DD8 LDR X3, [X8 + 0x340]
	0x03DF2DDC BLR X9
	0x03DF2DE0 LDP X20, X19, [X31 + 0x80]
	0x03DF2DE4 LDP X22, X21, [X31 + 0x70]
	0x03DF2DE8 LDP X30, X23, [X31 + 0x60]
	0x03DF2DEC ADD X31, X31, 0x90
	0x03DF2DF0 RET
	0x03DF2DF4 BL 0x1C16F20
	0x03DF2DF8 SUB X31, X31, 0x30
	0x03DF2DFC STP X30, X21, [X31 + 0x10]
	0x03DF2E00 STP X20, X19, [X31 + 0x20]
	0x03DF2E04 ADRP X21, 0x5F6000
	0x03DF2E08 ADRP X20, 0x301000
	0x03DF2E0C LDRB W8, [X21 + 0x259]
	0x03DF2E10 LDR X20, [X20 + 0xAC8]
	0x03DF2E14 MOV X19, X0
	0x03DF2E18 TBNZ X8, 0x0, 0x3DF2E48
	0x03DF2E1C ADRP X0, 0x301000
	0x03DF2E20 LDR X0, [X0 + 0xAC8]
	0x03DF2E24 BL 0x1C16CF4
	0x03DF2E28 ADRP X0, 0x301000
	0x03DF2E2C LDR X0, [X0 + 0xDD8]
	0x03DF2E30 BL 0x1C16CF4
	0x03DF2E34 ADRP X0, 0x377000
	0x03DF2E38 LDR X0, [X0 + 0x9D8]
	0x03DF2E3C BL 0x1C16CF4
	0x03DF2E40 MOVZ W8, 0x1
	0x03DF2E44 STRB W8, [X21 + 0x259]
	0x03DF2E48 LDR X0, [X20]
	0x03DF2E4C MOVZ W1, 0x7
	0x03DF2E50 STP X31, X31, [X31]
	0x03DF2E54 BL 0x1C16D6C
	0x03DF2E58 MOV X20, X0
	0x03DF2E5C MOV X0, X19
	0x03DF2E60 MOV X1, X31
	0x03DF2E64 BL 0x33BE520
	0x03DF2E68 CBZ X0, 0x3DF2F60
	0x03DF2E6C LDR X8, [X0]
	0x03DF2E70 LDP X9, X1, [X8 + 0x1A8]
	0x03DF2E74 BLR X9
	0x03DF2E78 CBZ X20, 0x3DF2F60
	0x03DF2E7C LDR W8, [X20 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5F7000
	007 Move W8, [X21+602]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {40}
	014 Move X0, 0x303000
	015 Move X0, [X0+440]
	016 Call 0x1C17CF4
	017 Move X0, 0x30B000
	018 Move X0, [X0+272]
	019 Call 0x1C17CF4
	020 Move X0, 0x378000
	021 Move X0, [X0+2456]
	022 Call 0x1C17CF4
	023 Move X0, 0x303000
	024 Move X0, [X0+456]
	025 Call 0x1C17CF4
	026 Move X0, 0x378000
	027 Move X0, [X0+2464]
	028 Call 0x1C17CF4
	029 Move X0, 0x378000
	030 Move X0, [X0+2312]
	031 Call 0x1C17CF4
	032 Move X0, 0x378000
	033 Move X0, [X0+2320]
	034 Call 0x1C17CF4
	035 Move X0, 0x32A000
	036 Move X0, [X0+2200]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+602], W8
	040 Move X0, X20
	041 Move X1, X31
	042 Call String.IsNullOrEmpty, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {144}
	047 Move X22, 0x32A000
	048 Move X22, [X22+2200]
	049 Move X21, [X19+64]
	050 Move X0, [X22]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X22]
	056 Move X8, [X0+184]
	057 Move X8, [X8+8]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, [X19+64]
	060 Compare X0, 0
	061 JumpIfEqual {150}
	062 Move X8, 0x30B000
	063 Move X8, [X8+272]
	064 Move X1, X20
	065 Move X2, [X8]
	066 Call List`1<Object>.Contains, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {144}
	071 Move X0, [X19+64]
	072 Compare X0, 0
	073 JumpIfEqual {150}
	074 Move X22, 0x378000
	075 Move X22, [X22+2456]
	076 Move X1, [X22]
	077 Call List`1<Object>.get_Capacity, X0
	078 Move X21, [X19+64]
	079 Compare X21, 0
	080 JumpIfEqual {150}
	081 Move W8, [X21+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X1, [X22]
	084 Move X0, X21
	085 Call List`1<Object>.get_Capacity, X0
	086 Move X8, 0x378000
	087 Move X8, [X8+2464]
	088 Add W1, W0, 1
	089 Move X0, X21
	090 Move X2, [X8]
	091 Call List`1<Object>.set_Capacity, X0, X1
	092 Move X21, [X19+64]
	093 Move X8, 0x378000
	094 Move X8, [X8+2320]
	095 Move X0, [X8]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X8, 0x378000
	101 Move X8, [X8+2312]
	102 Move X0, [X8]
	103 Call 0x2492CF8
	104 Move X21, X0
	105 Move [X19+64], X0
	106 Compare X21, 0
	107 JumpIfEqual {150}
	108 Move X9, 0x303000
	109 Move X9, [X9+440]
	110 Move W10, [X21+28]
	111 Move X8, [X21+16]
	112 Move X9, [X9]
	113 Add W10, W10, 1
	114 Move [X21+28], W10
	115 Compare X8, 0
	116 JumpIfEqual {150}
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Move W11, [X8+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Add W9, W10, 1
	121 Add X8, X8, X10
	122 Move [X21+24], W9
	123 Move [X8+32], X20
	124 Move X8, [X9+32]
	125 Move X0, X21
	126 Move X1, X20
	127 Move X8, [X8+192]
	128 Move X2, [X8+112]
	129 Call List`1<Object>.AddWithResize, X0, X1
	130 Move X0, [X19+928]
	131 Compare X0, 0
	132 JumpIfEqual {144}
	133 Move X8, [X0]
	134 Move X1, X19
	135 Move X20, [X31+32]
	136 Move X19, [X31+40]
	137 Move X22, [X31+16]
	138 Move X21, [X31+24]
	139 Move X4, [X8+824]
	140 Move X3, [X8+832]
	141 Move W2, 16
	142 Move X30, [X31+48]
	143 CallNoReturn X4
	144 Move X20, [X31+32]
	145 Move X19, [X31+40]
	146 Move X22, [X31+16]
	147 Move X21, [X31+24]
	148 Move X30, [X31+48]
	149 Return 
	150 Call 0x1C17F20

Method: System.Void RemoveFromClassList(System.String className)

Disassembly:
	0x03DF2B54 MOV X0, X31
	0x03DF2B58 LDP D11, D10, [X31], #0x60
	0x03DF2B5C B 0x3CE4E6C
	0x03DF2B60 STP X30, X19, [X31 - 0x10]!
	0x03DF2B64 LDR X8, [X0 + 0x3B0]
	0x03DF2B68 MOV X19, X0
	0x03DF2B6C CBNZ X8, 0x3DF2B7C
	0x03DF2B70 MOV X0, X19
	0x03DF2B74 BL 0x3DE9658
	0x03DF2B78 TBZ X0, 0x0, 0x3DF2B90
	0x03DF2B7C LDR X1, [X19 + 0x2B8]
	0x03DF2B80 ADD X0, X19, 0x2C0
	0x03DF2B84 MOV X2, X31
	0x03DF2B88 LDP X30, X19, [X31], #0x10
	0x03DF2B8C B 0x3DC6230
	0x03DF2B90 LDR X0, [X19 + 0x2B8]
	0x03DF2B94 CBZ X0, 0x3DF2BA8
	0x03DF2B98 LDR X1, [X19 + 0x2F0]
	0x03DF2B9C MOV X2, X31
	0x03DF2BA0 LDP X30, X19, [X31], #0x10
	0x03DF2BA4 B 0x3CE6FF4
	0x03DF2BA8 BL 0x1C16F20
	0x03DF2BAC STR X30, [X31 - 0x30]!
	0x03DF2BB0 STP X22, X21, [X31 + 0x10]
	0x03DF2BB4 STP X20, X19, [X31 + 0x20]
	0x03DF2BB8 ADRP X22, 0x5F6000
	0x03DF2BBC LDRB W8, [X22 + 0x257]
	0x03DF2BC0 MOV X19, X2
	0x03DF2BC4 MOV X20, X1
	0x03DF2BC8 MOV X21, X0
	0x03DF2BCC TBNZ X8, 0x0, 0x3DF2BE4
	0x03DF2BD0 ADRP X0, 0x377000
	0x03DF2BD4 LDR X0, [X0 + 0x890]
	0x03DF2BD8 BL 0x1C16CF4
	0x03DF2BDC MOVZ W8, 0x1
	0x03DF2BE0 STRB W8, [X22 + 0x257]
	0x03DF2BE4 LDR X22, [X21 + 0x3B0]
	0x03DF2BE8 CBNZ X22, 0x3DF2C10
	0x03DF2BEC ADRP X8, 0x377000
	0x03DF2BF0 LDR X8, [X8 + 0x890]
	0x03DF2BF4 LDR X0, [X8]
	0x03DF2BF8 BL 0x1C16F10
	0x03DF2BFC MOV X1, X31
	0x03DF2C00 MOV X22, X0
	0x03DF2C04 BL 0x3DFD398
	0x03DF2C08 STR X21, [X22 + 0x20]
	0x03DF2C0C STR X22, [X21 + 0x3B0]
	0x03DF2C10 MOV X0, X22
	0x03DF2C14 MOV X1, X20
	0x03DF2C18 MOV X2, X19
	0x03DF2C1C LDP X20, X19, [X31 + 0x20]
	0x03DF2C20 LDP X22, X21, [X31 + 0x10]
	0x03DF2C24 LDR X30, [X31], #0x30
	0x03DF2C28 B 0x3DE70F8
	0x03DF2C2C SUB X31, X31, 0x90
	0x03DF2C30 STP X30, X23, [X31 + 0x60]
	0x03DF2C34 STP X22, X21, [X31 + 0x70]
	0x03DF2C38 STP X20, X19, [X31 + 0x80]
	0x03DF2C3C ADRP X20, 0x5F6000
	0x03DF2C40 LDRB W8, [X20 + 0x258]
	0x03DF2C44 MOV X21, X1
	0x03DF2C48 MOV X19, X0
	0x03DF2C4C TBNZ X8, 0x0, 0x3DF2C70
	0x03DF2C50 ADRP X0, 0x375000
	0x03DF2C54 LDR X0, [X0 + 0xBE8]
	0x03DF2C58 BL 0x1C16CF4
	0x03DF2C5C ADRP X0, 0x32A000
	0x03DF2C60 LDR X0, [X0 + 0xE50]
	0x03DF2C64 BL 0x1C16CF4
	0x03DF2C68 MOVZ W8, 0x1
	0x03DF2C6C STRB W8, [X20 + 0x258]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5F7000
	006 Move W8, [X21+603]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x361000
	014 Move X0, [X0+3464]
	015 Call 0x1C17CF4
	016 Move X0, 0x303000
	017 Move X0, [X0+456]
	018 Call 0x1C17CF4
	019 Move X0, 0x378000
	020 Move X0, [X0+2448]
	021 Call 0x1C17CF4
	022 Move X0, 0x378000
	023 Move X0, [X0+2320]
	024 Call 0x1C17CF4
	025 Move X0, 0x32A000
	026 Move X0, [X0+2200]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+603], W8
	030 Move X0, [X19+64]
	031 Compare X0, 0
	032 JumpIfEqual {89}
	033 Move X8, 0x361000
	034 Move X8, [X8+3464]
	035 Move X1, X20
	036 Move X2, [X8]
	037 Call List`1<Object>.Remove, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {84}
	042 Move X20, [X19+64]
	043 Compare X20, 0
	044 JumpIfEqual {89}
	045 Move W8, [X20+24]
	046 Compare W8, 0
	047 JumpIfNotEqual {71}
	048 Move X8, 0x378000
	049 Move X8, [X8+2320]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X8, 0x378000
	056 Move X8, [X8+2448]
	057 Move X0, X20
	058 Move X1, [X8]
	059 Call 0x2492D90, X0
	060 Move X20, 0x32A000
	061 Move X20, [X20+2200]
	062 Move X0, [X20]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X20]
	068 Move X8, [X0+184]
	069 Move X8, [X8+8]
	070 Move [X19+64], X8
	071 Move X0, [X19+928]
	072 Compare X0, 0
	073 JumpIfEqual {84}
	074 Move X8, [X0]
	075 Move X1, X19
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move W2, 16
	079 Move X4, [X8+824]
	080 Move X3, [X8+832]
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 CallNoReturn X4
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X30, [X31+32]
	087 Move X21, [X31+40]
	088 Return 
	089 Call 0x1C17F20

Method: System.Void EnableInClassList(System.String className, System.Boolean enable)

Disassembly:
	0x03DF2E80 CBZ W8, 0x3DF2F5C
	0x03DF2E84 CMP W8, 0x1
	0x03DF2E88 STR X0, [X20 + 0x20]

ISIL:
	001 Move TEMP, X2
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfNotEqual {7}
	005 Call VisualElement.AddToClassList, X0, X1
	006 Return 
	007 Call VisualElement.RemoveFromClassList, X0, X1
	008 Return 

Method: System.Boolean ClassListContains(System.String cls)

Disassembly:
	0x03DF3F6C MOV X21, X1
	0x03DF3F70 LDR X1, [X25]
	0x03DF3F74 MOV X20, X0
	0x03DF3F78 LDRH W9, [X8 + 0x12E]
	0x03DF3F7C CBZ X9, 0x3DF3FA0
	0x03DF3F80 LDR X10, [X8 + 0xB0]
	0x03DF3F84 ADD X10, X10, 0x8
	0x03DF3F88 LDUR X11, [X10 - 0x8]
	0x03DF3F8C CMP X11, X1
	0x03DF3F90 B.EQ 0x3DF45D4
	0x03DF3F94 SUBS X9, X9, 0x1
	0x03DF3F98 ADD X10, X10, 0x10
	0x03DF3F9C B.NE 0x3DF3F88
	0x03DF3FA0 MOVZ W2, 0x1A
	0x03DF3FA4 MOV X0, X19
	0x03DF3FA8 BL 0x1C5C788
	0x03DF3FAC B 0x3DF45E4
	0x03DF3FB0 MOV V0.16B, V8.16B
	0x03DF3FB4 MOV X0, X31
	0x03DF3FB8 BL 0x3DFE658
	0x03DF3FBC CBZ X19, 0x3DF48C0
	0x03DF3FC0 LDR X8, [X19]
	0x03DF3FC4 LDR X1, [X25]
	0x03DF3FC8 MOV X20, X0
	0x03DF3FCC LDRH W9, [X8 + 0x12E]
	0x03DF3FD0 CBZ X9, 0x3DF3FF4
	0x03DF3FD4 LDR X10, [X8 + 0xB0]
	0x03DF3FD8 ADD X10, X10, 0x8
	0x03DF3FDC LDUR X11, [X10 - 0x8]
	0x03DF3FE0 CMP X11, X1
	0x03DF3FE4 B.EQ 0x3DF45FC
	0x03DF3FE8 SUBS X9, X9, 0x1
	0x03DF3FEC ADD X10, X10, 0x10
	0x03DF3FF0 B.NE 0x3DF3FDC
	0x03DF3FF4 MOVZ W2, 0x9
	0x03DF3FF8 MOV X0, X19
	0x03DF3FFC BL 0x1C5C788
	0x03DF4000 B 0x3DF460C
	0x03DF4004 MOV V0.16B, V8.16B
	0x03DF4008 MOV X0, X31
	0x03DF400C BL 0x3DFED98
	0x03DF4010 CBZ X19, 0x3DF48F4
	0x03DF4014 LDR X8, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x5F6000
	008 Move W8, [X21+604]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x302000
	016 Move X0, [X0+456]
	017 Call 0x1C17CF4
	018 Move X0, 0x329000
	019 Move X0, [X0+2904]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+604], W8
	023 Move X0, [X20+64]
	024 Compare X0, 0
	025 JumpIfEqual {48}
	026 Move X22, 0x329000
	027 Move X22, [X22+2904]
	028 Move W21, W31
	029 Move W23, [X0+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X2, [X22]
	032 Move W1, W21
	033 Call List`1<Object>.get_Item, X0, X1
	034 Compare X0, 0
	035 JumpIfEqual {48}
	036 Move W2, 4
	037 Move X1, X19
	038 Move X3, X31
	039 Call String.Equals, X0, X1, X2
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {49}
	044 Move X0, [X20+64]
	045 Add W21, W21, 1
	046 Compare X0, 0
	047 JumpIfNotEqual {29}
	048 Call 0x1C17F20
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 NotImplemented "Instruction CSET not yet implemented."
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Return X0

Method: System.Object GetProperty(UnityEngine.PropertyName key)

Disassembly:
	0x03DF4018 MOV X21, X1
	0x03DF401C LDR X1, [X25]
	0x03DF4020 MOV X20, X0
	0x03DF4024 LDRH W9, [X8 + 0x12E]
	0x03DF4028 CBZ X9, 0x3DF404C
	0x03DF402C LDR X10, [X8 + 0xB0]
	0x03DF4030 ADD X10, X10, 0x8
	0x03DF4034 LDUR X11, [X10 - 0x8]
	0x03DF4038 CMP X11, X1
	0x03DF403C B.EQ 0x3DF4620
	0x03DF4040 SUBS X9, X9, 0x1
	0x03DF4044 ADD X10, X10, 0x10
	0x03DF4048 B.NE 0x3DF4034
	0x03DF404C MOVZ W2, 0x25
	0x03DF4050 MOV X0, X19
	0x03DF4054 BL 0x1C5C788
	0x03DF4058 B 0x3DF4630
	0x03DF405C MOV V0.16B, V8.16B
	0x03DF4060 MOV X0, X31
	0x03DF4064 BL 0x3DFE658
	0x03DF4068 CBZ X19, 0x3DF48EC
	0x03DF406C LDR X8, [X19]
	0x03DF4070 LDR X1, [X25]
	0x03DF4074 MOV X20, X0
	0x03DF4078 LDRH W9, [X8 + 0x12E]
	0x03DF407C CBZ X9, 0x3DF40A0
	0x03DF4080 LDR X10, [X8 + 0xB0]
	0x03DF4084 ADD X10, X10, 0x8
	0x03DF4088 LDUR X11, [X10 - 0x8]
	0x03DF408C CMP X11, X1
	0x03DF4090 B.EQ 0x3DF4648
	0x03DF4094 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5F5000
	007 Move X21, 0x328000
	008 Move W8, [X22+605]
	009 Move X21, [X21+2200]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x328000
	017 Move X0, [X0+2200]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+605], W8
	021 Move X0, [X21]
	022 Move [X31+8], X31
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 And X20, X20, 0
	028 Move X0, X20
	029 Call VisualElement.CheckUserKeyArgument, X0
	030 Add X2, X31, 8
	031 Move X0, X19
	032 Move X1, X20
	033 Call VisualElement.TryGetPropertyInternal, X0, X1, X2
	034 Move X0, [X31+8]
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return X0

Method: System.Void SetProperty(UnityEngine.PropertyName key, System.Object value)

Disassembly:
	0x03DF41F4 B.NE 0x3DF41E0
	0x03DF41F8 MOVZ W2, 0x15
	0x03DF41FC MOV X0, X19
	0x03DF4200 BL 0x1C5C788
	0x03DF4204 B 0x3DF4714
	0x03DF4208 MOV V0.16B, V8.16B
	0x03DF420C MOV X0, X31
	0x03DF4210 BL 0x3DFED98
	0x03DF4214 CBZ X19, 0x3DF48FC
	0x03DF4218 LDR X8, [X19]
	0x03DF421C MOV X21, X1
	0x03DF4220 LDR X1, [X25]
	0x03DF4224 MOV X20, X0
	0x03DF4228 LDRH W9, [X8 + 0x12E]
	0x03DF422C CBZ X9, 0x3DF4250
	0x03DF4230 LDR X10, [X8 + 0xB0]
	0x03DF4234 ADD X10, X10, 0x8
	0x03DF4238 LDUR X11, [X10 - 0x8]
	0x03DF423C CMP X11, X1
	0x03DF4240 B.EQ 0x3DF4728
	0x03DF4244 SUBS X9, X9, 0x1
	0x03DF4248 ADD X10, X10, 0x10
	0x03DF424C B.NE 0x3DF4238
	0x03DF4250 MOVZ W2, 0x23
	0x03DF4254 MOV X0, X19
	0x03DF4258 BL 0x1C5C788
	0x03DF425C B 0x3DF4738
	0x03DF4260 MOV V0.16B, V8.16B
	0x03DF4264 MOV X0, X31
	0x03DF4268 BL 0x3DFE658

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x5F5000
	008 Move X23, 0x328000
	009 Move W8, [X22+606]
	010 Move X23, [X23+2200]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x328000
	019 Move X0, [X0+2200]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+606], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 And X21, X21, 0
	029 Move X0, X21
	030 Call VisualElement.CheckUserKeyArgument, X0
	031 Move X0, X20
	032 Move X1, X21
	033 Move X2, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Call VisualElement.SetPropertyInternal, X0, X1, X2
	041 Return 

Method: System.Boolean HasProperty(UnityEngine.PropertyName key)

Disassembly:
	0x03DF426C CBZ X19, 0x3DF48B8
	0x03DF4270 LDR X8, [X19]
	0x03DF4274 LDR X1, [X25]
	0x03DF4278 MOV X20, X0
	0x03DF427C LDRH W9, [X8 + 0x12E]
	0x03DF4280 CBZ X9, 0x3DF42A4
	0x03DF4284 LDR X10, [X8 + 0xB0]
	0x03DF4288 ADD X10, X10, 0x8
	0x03DF428C LDUR X11, [X10 - 0x8]
	0x03DF4290 CMP X11, X1
	0x03DF4294 B.EQ 0x3DF4750
	0x03DF4298 SUBS X9, X9, 0x1
	0x03DF429C ADD X10, X10, 0x10
	0x03DF42A0 B.NE 0x3DF428C
	0x03DF42A4 MOVZ W2, 0x16
	0x03DF42A8 MOV X0, X19
	0x03DF42AC BL 0x1C5C788
	0x03DF42B0 B 0x3DF4760
	0x03DF42B4 MOV V0.16B, V8.16B
	0x03DF42B8 MOV X0, X31
	0x03DF42BC BL 0x3DFED98
	0x03DF42C0 CBZ X19, 0x3DF48E8
	0x03DF42C4 LDR X8, [X19]
	0x03DF42C8 MOV X21, X1
	0x03DF42CC LDR X1, [X25]
	0x03DF42D0 MOV X20, X0
	0x03DF42D4 LDRH W9, [X8 + 0x12E]
	0x03DF42D8 CBZ X9, 0x3DF42FC
	0x03DF42DC LDR X10, [X8 + 0xB0]
	0x03DF42E0 ADD X10, X10, 0x8
	0x03DF42E4 LDUR X11, [X10 - 0x8]
	0x03DF42E8 CMP X11, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5F5000
	007 Move X21, 0x328000
	008 Move W8, [X22+607]
	009 Move X21, [X21+2200]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x328000
	017 Move X0, [X0+2200]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+607], W8
	021 Move X0, [X21]
	022 Move [X31+8], X31
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 And X20, X20, 0
	028 Move X0, X20
	029 Call VisualElement.CheckUserKeyArgument, X0
	030 Add X2, X31, 8
	031 Move X0, X19
	032 Move X1, X20
	033 Call VisualElement.TryGetPropertyInternal, X0, X1, X2
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 And W0, W0, 1
	039 Move X30, [X31+48]
	040 Return X0

Method: System.Boolean TryGetPropertyInternal(UnityEngine.PropertyName key, out System.Object value)

Disassembly:
	0x03DECAA8 ADD X0, X8, 0x138
	0x03DECAAC LDP X8, X3, [X0]
	0x03DECAB0 MOV X0, X21
	0x03DECAB4 MOV X1, X22
	0x03DECAB8 MOV X2, X23
	0x03DECABC BLR X8
	0x03DECAC0 MOV V0.16B, V10.16B
	0x03DECAC4 MOV X0, X31
	0x03DECAC8 BL 0x3DFED98
	0x03DECACC LDR X9, [X21]
	0x03DECAD0 LDR X8, [X24]
	0x03DECAD4 MOV X22, X0
	0x03DECAD8 AND X23, X1, 0x0
	0x03DECADC LDRH W10, [X9 + 0x12E]
	0x03DECAE0 CBZ X10, 0x3DECB04
	0x03DECAE4 LDR X11, [X9 + 0xB0]
	0x03DECAE8 ADD X11, X11, 0x8
	0x03DECAEC LDUR X12, [X11 - 0x8]
	0x03DECAF0 CMP X12, X8
	0x03DECAF4 B.EQ 0x3DECB18
	0x03DECAF8 SUBS X10, X10, 0x1
	0x03DECAFC ADD X11, X11, 0x10
	0x03DECB00 B.NE 0x3DECAEC
	0x03DECB04 MOVZ W2, 0x2D
	0x03DECB08 MOV X0, X21
	0x03DECB0C MOV X1, X8
	0x03DECB10 BL 0x1C5C788
	0x03DECB14 B 0x3DECB28
	0x03DECB18 LDR W8, [X11]
	0x03DECB1C ADD W8, W8, 0x2D
	0x03DECB20 ADD X8, X9, W8, 0x4, SXTW
	0x03DECB24 ADD X0, X8, 0x138
	0x03DECB28 LDP X8, X3, [X0]
	0x03DECB2C MOV X0, X21
	0x03DECB30 MOV X1, X22
	0x03DECB34 MOV X2, X23
	0x03DECB38 BLR X8
	0x03DECB3C MOVZ W8, 0x7FC00000
	0x03DECB40 FMOV S0, W8
	0x03DECB44 MOV X0, X31
	0x03DECB48 BL 0x3DFED98
	0x03DECB4C LDR X9, [X21]
	0x03DECB50 LDR X8, [X24]
	0x03DECB54 MOV X22, X0
	0x03DECB58 AND X23, X1, 0x0
	0x03DECB5C LDRH W10, [X9 + 0x12E]
	0x03DECB60 CBZ X10, 0x3DECB84
	0x03DECB64 LDR X11, [X9 + 0xB0]
	0x03DECB68 ADD X11, X11, 0x8
	0x03DECB6C LDUR X12, [X11 - 0x8]
	0x03DECB70 CMP X12, X8
	0x03DECB74 B.EQ 0x3DECB98
	0x03DECB78 SUBS X10, X10, 0x1
	0x03DECB7C ADD X11, X11, 0x10
	0x03DECB80 B.NE 0x3DECB6C
	0x03DECB84 MOVZ W2, 0x29
	0x03DECB88 MOV X0, X21
	0x03DECB8C MOV X1, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x5FD000
	008 Move W8, [X21+608]
	009 Move X19, X2
	010 Move X22, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x37E000
	017 Move X0, [X0+2216]
	018 Call 0x1C17CF4
	019 Move X0, 0x37E000
	020 Move X0, [X0+2224]
	021 Call 0x1C17CF4
	022 Move X0, 0x37E000
	023 Move X0, [X0+2232]
	024 Call 0x1C17CF4
	025 Move X0, 0x37E000
	026 Move X0, [X0+2240]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+608], W8
	030 Move [X19], X31
	031 Move X0, [X20+72]
	032 Compare X0, 0
	033 JumpIfEqual {65}
	034 Move X23, 0x37E000
	035 Move X23, [X23+2240]
	036 Move W21, W31
	037 And X22, X22, 0
	038 Move W8, [X0+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X2, [X23]
	041 Move W1, W21
	042 Call List`1<KeyValuePair`2<PropertyName, Object>>.get_Item, X0, X1
	043 And X0, X0, 0
	044 Move X1, X22
	045 Move X2, X31
	046 Call PropertyName.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {57}
	051 Move X0, [X20+72]
	052 Add W21, W21, 1
	053 Compare X0, 0
	054 JumpIfNotEqual {38}
	055 Call 0x1C17F20
	056 Move W0, W31
	057 Move X0, [X20+72]
	058 Compare X0, 0
	059 JumpIfEqual {55}
	060 Move X2, [X23]
	061 Move W1, W21
	062 Call List`1<KeyValuePair`2<PropertyName, Object>>.get_Item, X0, X1
	063 Move [X19], X1
	064 Move W0, 1
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Move X23, [X31+56]
	071 Return X0

Method: System.Void CheckUserKeyArgument(UnityEngine.PropertyName key)

Disassembly:
	0x03DF4098 ADD X10, X10, 0x10
	0x03DF409C B.NE 0x3DF4088
	0x03DF40A0 MOVZ W2, 0xD
	0x03DF40A4 MOV X0, X19
	0x03DF40A8 BL 0x1C5C788
	0x03DF40AC B 0x3DF4658
	0x03DF40B0 MOV V0.16B, V8.16B
	0x03DF40B4 MOV X0, X31
	0x03DF40B8 BL 0x3DFED98
	0x03DF40BC CBZ X19, 0x3DF4900
	0x03DF40C0 LDR X8, [X19]
	0x03DF40C4 MOV X21, X1
	0x03DF40C8 LDR X1, [X25]
	0x03DF40CC MOV X20, X0
	0x03DF40D0 LDRH W9, [X8 + 0x12E]
	0x03DF40D4 CBZ X9, 0x3DF40F8
	0x03DF40D8 LDR X10, [X8 + 0xB0]
	0x03DF40DC ADD X10, X10, 0x8
	0x03DF40E0 LDUR X11, [X10 - 0x8]
	0x03DF40E4 CMP X11, X1
	0x03DF40E8 B.EQ 0x3DF466C
	0x03DF40EC SUBS X9, X9, 0x1
	0x03DF40F0 ADD X10, X10, 0x10
	0x03DF40F4 B.NE 0x3DF40E0
	0x03DF40F8 MOVZ W2, 0x18
	0x03DF40FC MOV X0, X19
	0x03DF4100 BL 0x1C5C788
	0x03DF4104 B 0x3DF467C
	0x03DF4108 MOV V0.16B, V8.16B
	0x03DF410C MOV X0, X31
	0x03DF4110 BL 0x3DFE658
	0x03DF4114 CBZ X19, 0x3DF48D4
	0x03DF4118 LDR X8, [X19]
	0x03DF411C LDR X1, [X25]
	0x03DF4120 MOV X20, X0
	0x03DF4124 LDRH W9, [X8 + 0x12E]
	0x03DF4128 CBZ X9, 0x3DF414C
	0x03DF412C LDR X10, [X8 + 0xB0]
	0x03DF4130 ADD X10, X10, 0x8
	0x03DF4134 LDUR X11, [X10 - 0x8]
	0x03DF4138 CMP X11, X1
	0x03DF413C B.EQ 0x3DF46B8
	0x03DF4140 SUBS X9, X9, 0x1
	0x03DF4144 ADD X10, X10, 0x10
	0x03DF4148 B.NE 0x3DF4134
	0x03DF414C MOVZ W2, 0x7
	0x03DF4150 MOV X0, X19
	0x03DF4154 BL 0x1C5C788
	0x03DF4158 B 0x3DF46C8
	0x03DF415C MOV V0.16B, V8.16B
	0x03DF4160 MOV X0, X31
	0x03DF4164 BL 0x3DFED98
	0x03DF4168 CBZ X19, 0x3DF48F8
	0x03DF416C LDR X8, [X19]
	0x03DF4170 MOV X21, X1
	0x03DF4174 LDR X1, [X25]
	0x03DF4178 MOV X20, X0
	0x03DF417C LDRH W9, [X8 + 0x12E]
	0x03DF4180 CBZ X9, 0x3DF41A4
	0x03DF4184 LDR X10, [X8 + 0xB0]
	0x03DF4188 ADD X10, X10, 0x8
	0x03DF418C LDUR X11, [X10 - 0x8]
	0x03DF4190 CMP X11, X1
	0x03DF4194 B.EQ 0x3DF46DC
	0x03DF4198 SUBS X9, X9, 0x1
	0x03DF419C ADD X10, X10, 0x10
	0x03DF41A0 B.NE 0x3DF418C
	0x03DF41A4 MOVZ W2, 0x29
	0x03DF41A8 MOV X0, X19
	0x03DF41AC BL 0x1C5C788
	0x03DF41B0 B 0x3DF46EC
	0x03DF41B4 MOV V0.16B, V8.16B
	0x03DF41B8 MOV X0, X31
	0x03DF41BC BL 0x3DFE658
	0x03DF41C0 CBZ X19, 0x3DF48C8
	0x03DF41C4 LDR X8, [X19]
	0x03DF41C8 LDR X1, [X25]
	0x03DF41CC MOV X20, X0
	0x03DF41D0 LDRH W9, [X8 + 0x12E]
	0x03DF41D4 CBZ X9, 0x3DF41F8
	0x03DF41D8 LDR X10, [X8 + 0xB0]
	0x03DF41DC ADD X10, X10, 0x8
	0x03DF41E0 LDUR X11, [X10 - 0x8]
	0x03DF41E4 CMP X11, X1
	0x03DF41E8 B.EQ 0x3DF4704
	0x03DF41EC SUBS X9, X9, 0x1
	0x03DF41F0 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5F5000
	005 Move W8, [X20+609]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x328000
	012 Move X0, [X0+2200]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+609], W8
	016 And X19, X19, 0
	017 Move X0, X19
	018 Move X1, X31
	019 Call PropertyName.IsNullOrEmpty, X0
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {45}
	024 Move X20, 0x328000
	025 Move X20, [X20+2200]
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X20]
	032 Move X8, [X0+184]
	033 Move X0, X19
	034 Move X2, X31
	035 Move W1, [X8+16]
	036 Call PropertyName.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {63}
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return 
	045 Move X0, 0x305000
	046 Move X0, [X0+1320]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X19, X0
	050 Move X0, 0x32A000
	051 Move X0, [X0+112]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Move X2, X31
	056 Call ArgumentNullException..ctor, X0, X1
	057 Move X0, 0x376000
	058 Move X0, [X0+2528]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X19
	062 Call 0x1C17DEC
	063 Move X19, 0x328000
	064 Move X19, [X19+2200]
	065 Move X0, X19
	066 Call 0x1C17D08
	067 Call 0x19913D0
	068 Move X0, X19
	069 Call 0x1C17D08
	070 Move X8, [X0+184]
	071 Move X0, 0x36C000
	072 Move W8, [X8+16]
	073 Move [X31+8], W8
	074 Move X0, [X0+848]
	075 Call 0x1C17D08
	076 Add X1, X31, 8
	077 Call 0x1C17E04
	078 Move X19, X0
	079 Move X0, 0x376000
	080 Move X0, [X0+2536]
	081 Call 0x1C17D08
	082 Move X1, X19
	083 Move X2, X31
	084 Call String.Format, X0, X1
	085 Move X19, X0
	086 Move X0, 0x300000
	087 Move X0, [X0+1456]
	088 Call 0x1C17D08
	089 Call 0x1C17F10
	090 Move X1, X19
	091 Move X2, X31
	092 Move X20, X0
	093 Call InvalidOperationException..ctor, X0, X1
	094 Move X0, 0x376000
	095 Move X0, [X0+2528]
	096 Call 0x1C17D08
	097 Move X1, X0
	098 Move X0, X20
	099 Call 0x1C17DEC

Method: System.Void SetPropertyInternal(UnityEngine.PropertyName key, System.Object value)

Disassembly:
	0x03DECC00 B.NE 0x3DECBEC
	0x03DECC04 MOVZ W2, 0xE
	0x03DECC08 MOV X0, X21
	0x03DECC0C MOV X1, X8
	0x03DECC10 BL 0x1C5C788
	0x03DECC14 B 0x3DECC28
	0x03DECC18 LDR W8, [X11]
	0x03DECC1C ADD W8, W8, 0xE
	0x03DECC20 ADD X8, X9, W8, 0x4, SXTW
	0x03DECC24 ADD X0, X8, 0x138
	0x03DECC28 LDP X8, X3, [X0]
	0x03DECC2C MOV X0, X21
	0x03DECC30 MOV X1, X22
	0x03DECC34 MOV X2, X23
	0x03DECC38 BLR X8
	0x03DECC3C MOV V0.16B, V9.16B
	0x03DECC40 MOV X0, X31
	0x03DECC44 BL 0x3DFED98
	0x03DECC48 LDR X9, [X21]
	0x03DECC4C LDR X8, [X24]
	0x03DECC50 MOV X22, X0
	0x03DECC54 AND X23, X1, 0x0
	0x03DECC58 LDRH W10, [X9 + 0x12E]
	0x03DECC5C CBZ X10, 0x3DECC80
	0x03DECC60 LDR X11, [X9 + 0xB0]
	0x03DECC64 ADD X11, X11, 0x8
	0x03DECC68 LDUR X12, [X11 - 0x8]
	0x03DECC6C CMP X12, X8
	0x03DECC70 B.EQ 0x3DECC94
	0x03DECC74 SUBS X10, X10, 0x1
	0x03DECC78 ADD X11, X11, 0x10
	0x03DECC7C B.NE 0x3DECC68
	0x03DECC80 MOVZ W2, 0x36
	0x03DECC84 MOV X0, X21
	0x03DECC88 MOV X1, X8
	0x03DECC8C BL 0x1C5C788
	0x03DECC90 B 0x3DECCA4
	0x03DECC94 LDR W8, [X11]
	0x03DECC98 ADD W8, W8, 0x36
	0x03DECC9C ADD X8, X9, W8, 0x4, SXTW
	0x03DECCA0 ADD X0, X8, 0x138
	0x03DECCA4 LDP X8, X3, [X0]
	0x03DECCA8 MOV X0, X21
	0x03DECCAC MOV X1, X22
	0x03DECCB0 MOV X2, X23
	0x03DECCB4 BLR X8
	0x03DECCB8 MOV V0.16B, V8.16B
	0x03DECCBC MOV X0, X31
	0x03DECCC0 BL 0x3DFED98
	0x03DECCC4 LDR X9, [X21]
	0x03DECCC8 LDR X8, [X24]
	0x03DECCCC MOV X22, X0
	0x03DECCD0 AND X23, X1, 0x0
	0x03DECCD4 LDRH W10, [X9 + 0x12E]
	0x03DECCD8 CBZ X10, 0x3DECCFC
	0x03DECCDC LDR X11, [X9 + 0xB0]
	0x03DECCE0 ADD X11, X11, 0x8
	0x03DECCE4 LDUR X12, [X11 - 0x8]
	0x03DECCE8 CMP X12, X8
	0x03DECCEC B.EQ 0x3DECD10
	0x03DECCF0 SUBS X10, X10, 0x1
	0x03DECCF4 ADD X11, X11, 0x10
	0x03DECCF8 B.NE 0x3DECCE4
	0x03DECCFC MOVZ W2, 0x18
	0x03DECD00 MOV X0, X21
	0x03DECD04 MOV X1, X8
	0x03DECD08 BL 0x1C5C788
	0x03DECD0C B 0x3DECD20
	0x03DECD10 LDR W8, [X11]
	0x03DECD14 ADD W8, W8, 0x18
	0x03DECD18 ADD X8, X9, W8, 0x4, SXTW
	0x03DECD1C ADD X0, X8, 0x138
	0x03DECD20 LDP X8, X3, [X0]
	0x03DECD24 MOV X0, X21
	0x03DECD28 MOV X1, X22
	0x03DECD2C MOV X2, X23
	0x03DECD30 BLR X8
	0x03DECD34 CBZ W20, 0x3DECD78
	0x03DECD38 LDR X0, [X19 + 0x3A0]
	0x03DECD3C CBZ X0, 0x3DECD78
	0x03DECD40 LDR X8, [X0]
	0x03DECD44 MOV X1, X19
	0x03DECD48 MOV W2, W20
	0x03DECD4C LDP X20, X19, [X31 + 0x70]
	0x03DECD50 LDR X4, [X8 + 0x338]
	0x03DECD54 LDR X3, [X8 + 0x340]
	0x03DECD58 LDP X22, X21, [X31 + 0x60]
	0x03DECD5C LDP X24, X23, [X31 + 0x50]
	0x03DECD60 LDR X30, [X31 + 0x40]
	0x03DECD64 LDP D9, D8, [X31 + 0x30]
	0x03DECD68 LDP D11, D10, [X31 + 0x20]
	0x03DECD6C LDP D13, D12, [X31 + 0x10]
	0x03DECD70 LDP D15, D14, [X31], #0x80
	0x03DECD74 BR X4
	0x03DECD78 LDP X20, X19, [X31 + 0x70]
	0x03DECD7C LDP X22, X21, [X31 + 0x60]
	0x03DECD80 LDP X24, X23, [X31 + 0x50]
	0x03DECD84 LDR X30, [X31 + 0x40]
	0x03DECD88 LDP D9, D8, [X31 + 0x30]
	0x03DECD8C LDP D11, D10, [X31 + 0x20]
	0x03DECD90 LDP D13, D12, [X31 + 0x10]
	0x03DECD94 LDP D15, D14, [X31], #0x80
	0x03DECD98 RET
	0x03DECD9C BL 0x1C16F20
	0x03DECDA0 STR X30, [X31 - 0x30]!
	0x03DECDA4 STP X22, X21, [X31 + 0x10]
	0x03DECDA8 STP X20, X19, [X31 + 0x20]
	0x03DECDAC ADRP X20, 0x5FC000
	0x03DECDB0 LDRB W8, [X20 + 0x23A]
	0x03DECDB4 MOV X19, X0
	0x03DECDB8 TBNZ X8, 0x0, 0x3DECDDC
	0x03DECDBC ADRP X0, 0x330000
	0x03DECDC0 LDR X0, [X0 + 0x128]
	0x03DECDC4 BL 0x1C16CF4
	0x03DECDC8 ADRP X0, 0x37D000
	0x03DECDCC LDR X0, [X0 + 0x900]
	0x03DECDD0 BL 0x1C16CF4
	0x03DECDD4 MOVZ W8, 0x1
	0x03DECDD8 STRB W8, [X20 + 0x23A]
	0x03DECDDC CBZ X19, 0x3DED360
	0x03DECDE0 LDR W8, [X19 + 0x50]
	0x03DECDE4 ADRP X20, 0x37D000
	0x03DECDE8 LDR X20, [X20 + 0x900]
	0x03DECDEC MOV X0, X19
	0x03DECDF0 AND W8, W8, 0xFFFFFFBF
	0x03DECDF4 STR W8, [X19 + 0x50]
	0x03DECDF8 BL 0x3DE7EEC
	0x03DECDFC LDR X1, [X20]
	0x03DECE00 MOV X19, X0
	0x03DECE04 MOVZ W0, 0x1
	0x03DECE08 BL 0x266EA88
	0x03DECE0C CBZ X19, 0x3DED360
	0x03DECE10 ADRP X22, 0x330000
	0x03DECE14 LDR X8, [X19]
	0x03DECE18 LDR X22, [X22 + 0x128]
	0x03DECE1C MOV X20, X0
	0x03DECE20 LDRH W9, [X8 + 0x12E]
	0x03DECE24 LDR X1, [X22]
	0x03DECE28 CBZ X9, 0x3DECE4C
	0x03DECE2C LDR X10, [X8 + 0xB0]
	0x03DECE30 ADD X10, X10, 0x8
	0x03DECE34 LDUR X11, [X10 - 0x8]
	0x03DECE38 CMP X11, X1
	0x03DECE3C B.EQ 0x3DECE5C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x5FD000
	009 Move X22, 0x37E000
	010 Move W8, [X23+610]
	011 Move X22, [X22+2248]
	012 Move X20, X2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {51}
	019 Move X0, 0x37E000
	020 Move X0, [X0+2248]
	021 Call 0x1C17CF4
	022 Move X0, 0x37E000
	023 Move X0, [X0+2216]
	024 Call 0x1C17CF4
	025 Move X0, 0x37E000
	026 Move X0, [X0+2256]
	027 Call 0x1C17CF4
	028 Move X0, 0x37E000
	029 Move X0, [X0+2264]
	030 Call 0x1C17CF4
	031 Move X0, 0x37E000
	032 Move X0, [X0+2272]
	033 Call 0x1C17CF4
	034 Move X0, 0x37E000
	035 Move X0, [X0+2232]
	036 Call 0x1C17CF4
	037 Move X0, 0x37E000
	038 Move X0, [X0+2240]
	039 Call 0x1C17CF4
	040 Move X0, 0x37E000
	041 Move X0, [X0+2280]
	042 Call 0x1C17CF4
	043 Move X0, 0x37E000
	044 Move X0, [X0+2288]
	045 Call 0x1C17CF4
	046 Move X0, 0x37E000
	047 Move X0, [X0+2296]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X23+610], W8
	051 Move X3, [X22]
	052 And X21, X21, 0
	053 Add X0, X31, 0
	054 Move X1, X21
	055 Move X2, X20
	056 Move [X31], X31
	057 Move [X31+8], X31
	058 Call KeyValuePair`2<PropertyName, Object>..ctor, X0, X1, X2
	059 Move X0, [X19+72]
	060 Compare X0, 0
	061 JumpIfEqual {83}
	062 Move X22, 0x37E000
	063 Move X22, [X22+2240]
	064 Move W20, W31
	065 Move W8, [X0+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X2, [X22]
	068 Move W1, W20
	069 Call List`1<KeyValuePair`2<PropertyName, Object>>.get_Item, X0, X1
	070 And X0, X0, 0
	071 Move X1, X21
	072 Move X2, X31
	073 Call PropertyName.op_Equality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {145}
	078 Move X0, [X19+72]
	079 Add W20, W20, 1
	080 Compare X0, 0
	081 JumpIfNotEqual {65}
	082 Call 0x1C17F20
	083 Move X8, 0x37E000
	084 Move X8, [X8+2296]
	085 Move X0, [X8]
	086 Call 0x1C17F10
	087 Move X8, 0x37E000
	088 Move X8, [X8+2264]
	089 Move W1, 1
	090 Move X20, X0
	091 Move X2, [X8]
	092 Call List`1<KeyValuePair`2<PropertyName, Object>>..ctor, X0, X1
	093 Move [X19+72], X20
	094 Compare X20, 0
	095 JumpIfEqual {82}
	096 Move X1, [X31]
	097 Move X2, [X31+8]
	098 Move X21, 0x37E000
	099 Move X21, [X21+2272]
	100 Move X1, [X21]
	101 Call List`1<KeyValuePair`2<PropertyName, Object>>.get_Capacity, X0
	102 Move X20, [X19+72]
	103 Compare X20, 0
	104 JumpIfEqual {82}
	105 Move W8, [X20+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X1, [X21]
	108 Move X0, X20
	109 Call List`1<KeyValuePair`2<PropertyName, Object>>.get_Capacity, X0
	110 Move X8, 0x37E000
	111 Move X8, [X8+2280]
	112 Add W1, W0, 1
	113 Move X0, X20
	114 Move X2, [X8]
	115 Call List`1<KeyValuePair`2<PropertyName, Object>>.set_Capacity, X0, X1
	116 Move X20, [X19+72]
	117 Compare X20, 0
	118 JumpIfEqual {82}
	119 Add X8, X31, 0
	120 Move X1, [X31]
	121 Add X8, X8, 8
	122 Move X2, [X8]
	123 Move X9, 0x37E000
	124 Move X9, [X9+2256]
	125 Move W10, [X20+28]
	126 Move X8, [X20+16]
	127 Move X9, [X9]
	128 Add W10, W10, 1
	129 Move [X20+28], W10
	130 Compare X8, 0
	131 JumpIfEqual {82}
	132 NotImplemented "Instruction LDRSW not yet implemented."
	133 Move W11, [X8+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Add W9, W10, 1
	136 Add X8, X8, X10
	137 Move [X20+24], W9
	138 Move [X8+32], X1
	139 Move [X8+40], X2
	140 Move X8, [X9+32]
	141 Move X0, X20
	142 Move X8, [X8+192]
	143 Move X3, [X8+112]
	144 Call List`1<KeyValuePair`2<PropertyName, Object>>.AddWithResize, X0, X1
	145 Move X0, [X19+72]
	146 Compare X0, 0
	147 JumpIfEqual {82}
	148 Move X8, 0x37E000
	149 Move X2, [X31]
	150 Move X3, [X31+8]
	151 Move X8, [X8+2288]
	152 Move W1, W20
	153 Move X4, [X8]
	154 Call List`1<KeyValuePair`2<PropertyName, Object>>.set_Item, X0, X1, X2
	155 Move X20, [X31+48]
	156 Move X19, [X31+56]
	157 Move X22, [X31+32]
	158 Move X21, [X31+40]
	159 Move X30, [X31+16]
	160 Move X23, [X31+24]
	161 Add X31, X31, 64
	162 Return 

Method: System.Void UpdateCursorStyle(System.Int64 eventType)

Disassembly:
	0x03DF0F78 MOV X0, X25
	0x03DF0F7C BL 0x1D2C690
	0x03DF0F80 MOV X0, X20
	0x03DF0F84 BL 0x1C16F18
	0x03DF0F88 MOV X25, X0
	0x03DF0F8C B 0x3DF0E64
	0x03DF0F90 MOV X25, X0
	0x03DF0F94 MOV W20, W1
	0x03DF0F98 B 0x3DF0EA0
	0x03DF0F9C BL 0x1990590
	0x03DF0FA0 STR X30, [X31 - 0x30]!
	0x03DF0FA4 STP X22, X21, [X31 + 0x10]
	0x03DF0FA8 STP X20, X19, [X31 + 0x20]
	0x03DF0FAC ADRP X21, 0x5F8000
	0x03DF0FB0 LDRB W8, [X21 + 0x272]
	0x03DF0FB4 MOV X19, X1
	0x03DF0FB8 MOV X20, X0
	0x03DF0FBC TBNZ X8, 0x0, 0x3DF0FEC
	0x03DF0FC0 ADRP X0, 0x373000
	0x03DF0FC4 LDR X0, [X0 + 0xEB8]
	0x03DF0FC8 BL 0x1C16CF4
	0x03DF0FCC ADRP X0, 0x32C000
	0x03DF0FD0 LDR X0, [X0 + 0xE8]
	0x03DF0FD4 BL 0x1C16CF4
	0x03DF0FD8 ADRP X0, 0x32C000
	0x03DF0FDC LDR X0, [X0 + 0xF0]
	0x03DF0FE0 BL 0x1C16CF4
	0x03DF0FE4 MOVZ W8, 0x1
	0x03DF0FE8 STRB W8, [X21 + 0x272]
	0x03DF0FEC LDR X1, [X20 + 0x398]
	0x03DF0FF0 CBZ X1, 0x3DF1074
	0x03DF0FF4 LDR W8, [X1 + 0x18]
	0x03DF0FF8 CMP W8, 0x1
	0x03DF0FFC B.LT 0x3DF1064
	0x03DF1000 CBZ X19, 0x3DF1074
	0x03DF1004 ADRP X21, 0x372000
	0x03DF1008 LDR X21, [X21 + 0xEB8]
	0x03DF100C LDR W20, [X19 + 0x18]
	0x03DF1010 MOV X0, X19
	0x03DF1014 LDR X2, [X21]
	0x03DF1018 BL 0x301C194
	0x03DF101C LDR W8, [X19 + 0x18]
	0x03DF1020 CMP W20, W8
	0x03DF1024 B.GE 0x3DF1064
	0x03DF1028 ADRP X22, 0x32B000
	0x03DF102C LDR X22, [X22 + 0xF0]
	0x03DF1030 LDR X2, [X22]
	0x03DF1034 MOV X0, X19
	0x03DF1038 MOV W1, W20
	0x03DF103C BL 0x301BCCC
	0x03DF1040 CBZ X0, 0x3DF1074
	0x03DF1044 LDR X1, [X0 + 0x398]
	0x03DF1048 LDR X2, [X21]
	0x03DF104C MOV X0, X19
	0x03DF1050 BL 0x301C194
	0x03DF1054 LDR W8, [X19 + 0x18]
	0x03DF1058 ADD W20, W20, 0x1
	0x03DF105C CMP W20, W8
	0x03DF1060 B.LT 0x3DF1030
	0x03DF1064 LDP X20, X19, [X31 + 0x20]
	0x03DF1068 LDP X22, X21, [X31 + 0x10]
	0x03DF106C LDR X30, [X31], #0x30
	0x03DF1070 RET
	0x03DF1074 BL 0x1C16F20
	0x03DF1078 STR X30, [X31 - 0x30]!
	0x03DF107C STP X22, X21, [X31 + 0x10]
	0x03DF1080 STP X20, X19, [X31 + 0x20]
	0x03DF1084 ADRP X21, 0x5F7000
	0x03DF1088 LDRB W8, [X21 + 0x24A]
	0x03DF108C MOV X20, X1
	0x03DF1090 MOV X19, X0
	0x03DF1094 TBNZ X8, 0x0, 0x3DF10C4
	0x03DF1098 ADRP X0, 0x377000
	0x03DF109C LDR X0, [X0 + 0x770]
	0x03DF10A0 BL 0x1C16CF4
	0x03DF10A4 ADRP X0, 0x302000
	0x03DF10A8 LDR X0, [X0 + 0xE00]
	0x03DF10AC BL 0x1C16CF4
	0x03DF10B0 ADRP X0, 0x378000
	0x03DF10B4 LDR X0, [X0 + 0x978]
	0x03DF10B8 BL 0x1C16CF4
	0x03DF10BC MOVZ W8, 0x1
	0x03DF10C0 STRB W8, [X21 + 0x24A]
	0x03DF10C4 LDR X8, [X19 + 0x3A0]
	0x03DF10C8 CBZ X8, 0x3DF11E8
	0x03DF10CC MOV X0, X19
	0x03DF10D0 BL 0x3DF15CC
	0x03DF10D4 LDRB W8, [X19 + 0x51]
	0x03DF10D8 TBNZ X8, 0x3, 0x3DF11D4
	0x03DF10DC ADRP X21, 0x377000
	0x03DF10E0 LDR X21, [X21 + 0x770]
	0x03DF10E4 LDR X0, [X21]
	0x03DF10E8 LDR W8, [X0 + 0xE0]
	0x03DF10EC CBNZ W8, 0x3DF10F8
	0x03DF10F0 BL 0x1C16DFC
	0x03DF10F4 LDR X0, [X21]
	0x03DF10F8 LDR X8, [X0 + 0xB8]
	0x03DF10FC LDR W9, [X19 + 0x370]
	0x03DF1100 LDR W10, [X19 + 0x374]
	0x03DF1104 LDR W11, [X19 + 0x368]
	0x03DF1108 LDR W8, [X8 + 0x10]
	0x03DF110C ORR W9, W10, W9, 0x0
	0x03DF1110 ORR W9, W9, W11, 0x0
	0x03DF1114 LSRV W8, W9, W8
	0x03DF1118 TBZ X8, 0x0, 0x3DF11D4
	0x03DF111C ADRP X8, 0x378000
	0x03DF1120 LDR X0, [X19 + 0x3A0]
	0x03DF1124 LDR X8, [X8 + 0x978]
	0x03DF1128 MOV X1, X20
	0x03DF112C LDR X2, [X8]
	0x03DF1130 BL 0x24A1370
	0x03DF1134 MOV X20, X0
	0x03DF1138 CBZ X0, 0x3DF11F8
	0x03DF113C MOV X0, X20
	0x03DF1140 MOV X1, X19
	0x03DF1144 MOV X2, X31
	0x03DF1148 BL 0x3D9C6C8
	0x03DF114C MOV X0, X19
	0x03DF1150 MOV X1, X20
	0x03DF1154 MOV X2, X31
	0x03DF1158 BL 0x3DA1680
	0x03DF115C MOV X21, X31
	0x03DF1160 MOVZ W22, 0x5
	0x03DF1164 ADRP X10, 0x302000
	0x03DF1168 LDR X8, [X20]
	0x03DF116C LDR X10, [X10 + 0xE00]
	0x03DF1170 LDRH W9, [X8 + 0x12E]
	0x03DF1174 LDR X1, [X10]
	0x03DF1178 CBZ X9, 0x3DF119C
	0x03DF117C LDR X10, [X8 + 0xB0]
	0x03DF1180 ADD X10, X10, 0x8
	0x03DF1184 LDUR X11, [X10 - 0x8]
	0x03DF1188 CMP X11, X1
	0x03DF118C B.EQ 0x3DF11AC
	0x03DF1190 SUBS X9, X9, 0x1
	0x03DF1194 ADD X10, X10, 0x10
	0x03DF1198 B.NE 0x3DF1184
	0x03DF119C MOV X0, X20
	0x03DF11A0 MOV W2, W31
	0x03DF11A4 BL 0x1C5C788
	0x03DF11A8 B 0x3DF11B8
	0x03DF11AC LDRSW X9, [X10]
	0x03DF11B0 ADD X8, X8, X9, 0x4, LSL
	0x03DF11B4 ADD X0, X8, 0x138
	0x03DF11B8 LDP X8, X1, [X0]
	0x03DF11BC MOV X0, X20
	0x03DF11C0 BLR X8
	0x03DF11C4 CBNZ X21, 0x3DF11FC
	0x03DF11C8 CMP W22, 0x5
	0x03DF11CC B.EQ 0x3DF11D4
	0x03DF11D0 CBNZ W22, 0x3DF11E8
	0x03DF11D4 MOV X0, X19
	0x03DF11D8 LDP X20, X19, [X31 + 0x20]
	0x03DF11DC LDP X22, X21, [X31 + 0x10]
	0x03DF11E0 LDR X30, [X31], #0x30
	0x03DF11E4 B 0x3DF15CC
	0x03DF11E8 LDP X20, X19, [X31 + 0x20]
	0x03DF11EC LDP X22, X21, [X31 + 0x10]
	0x03DF11F0 LDR X30, [X31], #0x30
	0x03DF11F4 RET
	0x03DF11F8 BL 0x1C16F20
	0x03DF11FC MOV X0, X21
	0x03DF1200 BL 0x1C16F18
	0x03DF1204 B 0x3DF1208
	0x03DF1208 MOV X22, X0
	0x03DF120C CMP W1, 0x1
	0x03DF1210 B.NE 0x3DF1230
	0x03DF1214 MOV X0, X22
	0x03DF1218 BL 0x3EB1AD0
	0x03DF121C LDR X21, [X0]
	0x03DF1220 BL 0x3EB1AE0
	0x03DF1224 MOV W22, W31
	0x03DF1228 CBNZ X20, 0x3DF1164
	0x03DF122C B 0x3DF11C4
	0x03DF1230 MOV X21, X31
	0x03DF1234 B 0x3DF123C
	0x03DF1238 MOV X22, X0
	0x03DF123C CBZ X20, 0x3DF12A0
	0x03DF1240 ADRP X10, 0x302000
	0x03DF1244 LDR X8, [X20]
	0x03DF1248 LDR X10, [X10 + 0xE00]
	0x03DF124C LDRH W9, [X8 + 0x12E]
	0x03DF1250 LDR X1, [X10]
	0x03DF1254 CBZ X9, 0x3DF1278
	0x03DF1258 LDR X10, [X8 + 0xB0]
	0x03DF125C ADD X10, X10, 0x8
	0x03DF1260 LDUR X11, [X10 - 0x8]
	0x03DF1264 CMP X11, X1
	0x03DF1268 B.EQ 0x3DF1288
	0x03DF126C SUBS X9, X9, 0x1
	0x03DF1270 ADD X10, X10, 0x10
	0x03DF1274 B.NE 0x3DF1260
	0x03DF1278 MOV X0, X20
	0x03DF127C MOV W2, W31
	0x03DF1280 BL 0x1C5C788
	0x03DF1284 B 0x3DF1294
	0x03DF1288 LDRSW X9, [X10]
	0x03DF128C ADD X8, X8, X9, 0x4, LSL
	0x03DF1290 ADD X0, X8, 0x138
	0x03DF1294 LDP X8, X1, [X0]
	0x03DF1298 MOV X0, X20
	0x03DF129C BLR X8
	0x03DF12A0 CBNZ X21, 0x3DF12AC
	0x03DF12A4 MOV X0, X22
	0x03DF12A8 BL 0x1D2C690
	0x03DF12AC MOV X0, X21
	0x03DF12B0 BL 0x1C16F18
	0x03DF12B4 BL 0x1990590
	0x03DF12B8 STR X30, [X31 - 0x30]!
	0x03DF12BC STP X22, X21, [X31 + 0x10]
	0x03DF12C0 STP X20, X19, [X31 + 0x20]
	0x03DF12C4 ADRP X21, 0x5F7000
	0x03DF12C8 LDRB W8, [X21 + 0x24B]
	0x03DF12CC MOV X20, X1
	0x03DF12D0 MOV X19, X0
	0x03DF12D4 TBNZ X8, 0x0, 0x3DF1310
	0x03DF12D8 ADRP X0, 0x377000
	0x03DF12DC LDR X0, [X0 + 0x738]
	0x03DF12E0 BL 0x1C16CF4
	0x03DF12E4 ADRP X0, 0x302000
	0x03DF12E8 LDR X0, [X0 + 0xE00]
	0x03DF12EC BL 0x1C16CF4
	0x03DF12F0 ADRP X0, 0x378000
	0x03DF12F4 LDR X0, [X0 + 0x980]
	0x03DF12F8 BL 0x1C16CF4
	0x03DF12FC ADRP X0, 0x371000
	0x03DF1300 LDR X0, [X0 + 0x630]
	0x03DF1304 BL 0x1C16CF4
	0x03DF1308 MOVZ W8, 0x1
	0x03DF130C STRB W8, [X21 + 0x24B]
	0x03DF1310 LDR X8, [X19 + 0x3A0]
	0x03DF1314 LDR X21, [X19 + 0x2B8]
	0x03DF1318 CBZ X8, 0x3DF1424
	0x03DF131C CBZ X21, 0x3DF1508
	0x03DF1320 LDR X1, [X8 + 0x28]
	0x03DF1324 MOV X0, X21
	0x03DF1328 MOV X2, X31
	0x03DF132C BL 0x3CE6E70
	0x03DF1330 MOV X0, X19
	0x03DF1334 BL 0x3DF16BC
	0x03DF1338 LDR W8, [X19 + 0x2AC]
	0x03DF133C MOVN W9, 0x43
	0x03DF1340 MOV X0, X19
	0x03DF1344 AND W1, W8, W9, 0x0
	0x03DF1348 BL 0x3DEEF90
	0x03DF134C LDR W8, [X19 + 0x50]
	0x03DF1350 TBZ X8, 0xB, 0x3DF1494
	0x03DF1354 ADRP X21, 0x377000
	0x03DF1358 LDR X21, [X21 + 0x738]
	0x03DF135C LDR X0, [X21]
	0x03DF1360 LDR W8, [X0 + 0xE0]
	0x03DF1364 CBNZ W8, 0x3DF1370
	0x03DF1368 BL 0x1C16DFC
	0x03DF136C LDR X0, [X21]
	0x03DF1370 LDR X8, [X0 + 0xB8]
	0x03DF1374 LDR W9, [X19 + 0x370]
	0x03DF1378 LDR W10, [X19 + 0x374]
	0x03DF137C LDR W11, [X19 + 0x368]
	0x03DF1380 LDR W8, [X8 + 0x10]
	0x03DF1384 ORR W9, W10, W9, 0x0
	0x03DF1388 ORR W9, W9, W11, 0x0
	0x03DF138C LSRV W8, W9, W8
	0x03DF1390 TBZ X8, 0x0, 0x3DF1488
	0x03DF1394 ADRP X8, 0x378000
	0x03DF1398 LDR X1, [X19 + 0x3A0]
	0x03DF139C LDR X8, [X8 + 0x980]
	0x03DF13A0 MOV X0, X20
	0x03DF13A4 LDR X2, [X8]
	0x03DF13A8 BL 0x24A1370
	0x03DF13AC MOV X20, X0
	0x03DF13B0 CBZ X0, 0x3DF150C
	0x03DF13B4 MOV X0, X20
	0x03DF13B8 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+136], X23
	004 Move [X31+144], X22
	005 Move [X31+152], X21
	006 Move [X31+160], X20
	007 Move [X31+168], X19
	008 Move X21, 0x5F9000
	009 Move W8, [X21+611]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x379000
	017 Move X0, [X0+848]
	018 Call 0x1C17CF4
	019 Move X0, 0x37A000
	020 Move X0, [X0+2352]
	021 Call 0x1C17CF4
	022 Move X0, 0x37A000
	023 Move X0, [X0+2360]
	024 Call 0x1C17CF4
	025 Move X0, 0x378000
	026 Move X0, [X0+3872]
	027 Call 0x1C17CF4
	028 Move X0, 0x379000
	029 Move X0, [X0+1480]
	030 Call 0x1C17CF4
	031 Move X0, 0x379000
	032 Move X0, [X0+1536]
	033 Call 0x1C17CF4
	034 Move X0, 0x378000
	035 Move X0, [X0+3048]
	036 Call 0x1C17CF4
	037 Move X0, 0x32D000
	038 Move X0, [X0+3664]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+611], W8
	042 Move X8, [X19+928]
	043 Compare X8, 0
	044 JumpIfEqual {218}
	045 Move X8, 0x377000
	046 Move X8, [X8+3872]
	047 Move X21, 0x378000
	048 Move X23, 0x32C000
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Move X21, [X21+848]
	052 Move X23, [X23+3664]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, [X21]
	057 Call 0x2D0E5C8
	058 Move X8, [X23]
	059 Move X21, [X19+928]
	060 Move X22, X0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {67}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X8, [X23]
	067 Move X8, [X8+184]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W1, [X8+8]
	070 Compare X21, 0
	071 JumpIfEqual {290}
	072 Move X0, X21
	073 Move X2, X31
	074 Call BaseVisualElementPanel.GetTopElementUnderPointer, X0, X1
	075 Move X8, [X19+928]
	076 Compare X8, 0
	077 JumpIfEqual {290}
	078 Move X9, [X8]
	079 Move X20, X0
	080 Move X0, X8
	081 Move X10, [X9+872]
	082 Move X1, [X9+880]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X19, X0
	085 Compare X20, 0
	086 JumpIfEqual {188}
	087 Add X0, X20, 704
	088 Add X8, X31, 96
	089 Move X1, X31
	090 Call ComputedStyle.get_cursor, X0
	091 Move V0, [X31+6]
	092 Move X8, [X31+112]
	093 Move [X31+4], V0
	094 Move [X31+80], X8
	095 Compare X19, 0
	096 JumpIfEqual {290}
	097 Move V0, [X31+4]
	098 Move X8, [X31+80]
	099 Move X10, 0x377000
	100 Move [X31+2], V0
	101 Move [X31+48], X8
	102 Move X8, [X19]
	103 Move X10, [X10+3048]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Move X1, [X10]
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move X0, X19
	115 Move W2, W31
	116 Call 0x1C5D788
	117 Move X0, X21
	118 Move X2, X31
	119 Call PointerCaptureHelper.GetCapturingElement, X0, X1
	120 Move X21, X0
	121 Compare X0, 0
	122 JumpIfEqual {124}
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X8, 0x378000
	125 Move X8, [X8+1480]
	126 Move X0, [X8]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X8, 0x379000
	132 Move X8, [X8+2352]
	133 Move X0, [X8]
	134 Call 0x2D0E5C8
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X0, [X23]
	137 Move X22, [X19+928]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Compare X22, 0
	143 JumpIfEqual {290}
	144 Move X8, [X23]
	145 Move X0, X22
	146 Move X2, X31
	147 Move X8, [X8+184]
	148 Move W1, [X8+8]
	149 Call BaseVisualElementPanel.GetTopElementUnderPointer, X0, X1
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X8, 0x378000
	152 Move X8, [X8+1536]
	153 Move X0, [X8]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Move X8, 0x379000
	159 Move X8, [X8+2360]
	160 Move X0, [X8]
	161 Call 0x2D0E5C8
	162 Compare X21, 0
	163 JumpIfNotEqual {218}
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X0, [X19+928]
	166 Compare X0, 0
	167 JumpIfEqual {290}
	168 Move X8, [X0]
	169 Move X9, [X8+872]
	170 Move X1, [X8+880]
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Compare X0, 0
	173 JumpIfEqual {290}
	174 Move X10, 0x377000
	175 Move X8, [X0]
	176 Move X10, [X10+3048]
	177 Move X19, X0
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Move X1, [X10]
	180 Compare X9, 0
	181 JumpIfEqual {203}
	182 Move X10, [X8+176]
	183 Add X10, X10, 8
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract X9, X9, 1
	187 Add X10, X10, 16
	188 Compare X19, 0
	189 JumpIfEqual {290}
	190 Move X10, 0x377000
	191 Move X8, [X19]
	192 Move X10, [X10+3048]
	193 NotImplemented "Instruction LDRH not yet implemented."
	194 Move X1, [X10]
	195 Compare X9, 0
	196 JumpIfEqual {203}
	197 Move X10, [X8+176]
	198 Add X10, X10, 8
	199 NotImplemented "Instruction LDUR not yet implemented."
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Subtract X9, X9, 1
	202 Add X10, X10, 16
	203 Move W2, 1
	204 Move X0, X19
	205 Call 0x1C5D788
	206 NotImplemented "Instruction LDRSW not yet implemented."
	207 Add X8, X8, X9
	208 Add X0, X8, 312
	209 Move V0, [X31+2]
	210 Move X8, [X31+48]
	211 Move X9, [X0]
	212 Add X1, X31, 96
	213 Move [X31+6], V0
	214 Move [X31+112], X8
	215 Move X2, [X0+8]
	216 Move X0, X19
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Move X20, [X31+160]
	219 Move X19, [X31+168]
	220 Move X22, [X31+144]
	221 Move X21, [X31+152]
	222 Move X30, [X31+128]
	223 Move X23, [X31+136]
	224 Add X31, X31, 176
	225 Return 
	226 Move W9, [X10]
	227 Add W9, W9, 1
	228 Add X8, X8, W9
	229 Add X0, X8, 312
	230 Move X2, [X0]
	231 Move X1, [X0+8]
	232 Move X0, X19
	233 Move X20, [X31+160]
	234 Move X19, [X31+168]
	235 Move X22, [X31+144]
	236 Move X21, [X31+152]
	237 Move X30, [X31+128]
	238 Move X23, [X31+136]
	239 Add X31, X31, 176
	240 CallNoReturn X2
	241 Move X0, [X19+928]
	242 Compare X0, 0
	243 JumpIfEqual {290}
	244 Move X8, [X0]
	245 Move X9, [X8+872]
	246 Move X1, [X8+880]
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Move X20, X0
	249 Add X0, X19, 704
	250 Add X8, X31, 96
	251 Move X1, X31
	252 Call ComputedStyle.get_cursor, X0
	253 Move V0, [X31+6]
	254 Move X8, [X31+112]
	255 Move [X31+4], V0
	256 Move [X31+80], X8
	257 Compare X20, 0
	258 JumpIfEqual {290}
	259 Move V0, [X31+4]
	260 Move X8, [X31+80]
	261 Move X10, 0x377000
	262 Move [X31], V0
	263 Move [X31+16], X8
	264 Move X8, [X20]
	265 Move X10, [X10+3048]
	266 NotImplemented "Instruction LDRH not yet implemented."
	267 Move X1, [X10]
	268 Compare X9, 0
	269 JumpIfEqual {276}
	270 Move X10, [X8+176]
	271 Add X10, X10, 8
	272 NotImplemented "Instruction LDUR not yet implemented."
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Subtract X9, X9, 1
	275 Add X10, X10, 16
	276 Move X0, X20
	277 Move W2, W31
	278 Call 0x1C5D788
	279 NotImplemented "Instruction LDRSW not yet implemented."
	280 Add X8, X8, X9
	281 Add X0, X8, 312
	282 Move V0, [X31]
	283 Move X8, [X31+16]
	284 Move X9, [X0]
	285 Add X1, X31, 96
	286 Move [X31+6], V0
	287 Move [X31+112], X8
	288 Move X2, [X0+8]
	289 Move X0, X20
	290 Call 0x1C17F20

Method: UnityEngine.UIElements.VisualElement/RenderTargetMode get_subRenderTargetMode()

Disassembly:
	0x03DF42EC B.EQ 0x3DF4774
	0x03DF42F0 SUBS X9, X9, 0x1

ISIL:
	001 Move W0, [X0+832]
	002 Return X0

Method: UnityEngine.Material get_defaultMaterial()

Disassembly:
	0x03DF42F4 ADD X10, X10, 0x10
	0x03DF42F8 B.NE 0x3DF42E4

ISIL:
	001 Move X0, [X0+840]
	002 Return X0

Method: UnityEngine.UIElements.VisualElementAnimationSystem GetAnimationSystem()

Disassembly:
	0x03DF42FC MOVZ W2, 0x2D
	0x03DF4300 MOV X0, X19
	0x03DF4304 BL 0x1C5C788
	0x03DF4308 B 0x3DF4784
	0x03DF430C MOV V0.16B, V8.16B
	0x03DF4310 MOV X0, X31
	0x03DF4314 BL 0x3DFED98
	0x03DF4318 CBZ X19, 0x3DF48E0
	0x03DF431C LDR X8, [X19]
	0x03DF4320 MOV X21, X1
	0x03DF4324 LDR X1, [X25]
	0x03DF4328 MOV X20, X0
	0x03DF432C LDRH W9, [X8 + 0x12E]
	0x03DF4330 CBZ X9, 0x3DF4354
	0x03DF4334 LDR X10, [X8 + 0xB0]
	0x03DF4338 ADD X10, X10, 0x8
	0x03DF433C LDUR X11, [X10 - 0x8]
	0x03DF4340 CMP X11, X1
	0x03DF4344 B.EQ 0x3DF479C
	0x03DF4348 SUBS X9, X9, 0x1
	0x03DF434C ADD X10, X10, 0x10
	0x03DF4350 B.NE 0x3DF433C
	0x03DF4354 MOVZ W2, 0x1B
	0x03DF4358 MOV X0, X19
	0x03DF435C BL 0x1C5C788
	0x03DF4360 B 0x3DF47AC
	0x03DF4364 MOV V0.16B, V8.16B
	0x03DF4368 MOV X0, X31
	0x03DF436C BL 0x3DFED98
	0x03DF4370 CBZ X19, 0x3DF48B4
	0x03DF4374 LDR X8, [X19]
	0x03DF4378 MOV X21, X1
	0x03DF437C LDR X1, [X25]
	0x03DF4380 MOV X20, X0
	0x03DF4384 LDRH W9, [X8 + 0x12E]
	0x03DF4388 CBZ X9, 0x3DF43AC
	0x03DF438C LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5F5000
	005 Move W8, [X20+612]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x371000
	012 Move X0, [X0+360]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+612], W8
	016 Move X0, [X19+928]
	017 Compare X0, 0
	018 JumpIfEqual {39}
	019 Move X8, [X0]
	020 Move W1, 2
	021 Move X9, [X8+1080]
	022 Move X2, [X8+1088]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Compare X0, 0
	025 JumpIfEqual {39}
	026 Move X8, 0x371000
	027 Move X8, [X8+360]
	028 Move X9, [X0]
	029 Move X8, [X8]
	030 Move W11, [X9+304]
	031 Move W10, [X8+304]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X31
	034 Move X9, [X9+200]
	035 Add X9, X9, X10
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return X0

Method: System.Void RegisterAnimation(UnityEngine.UIElements.Experimental.IValueAnimationUpdate anim)

Disassembly:
	0x03DF4390 ADD X10, X10, 0x8
	0x03DF4394 LDUR X11, [X10 - 0x8]
	0x03DF4398 CMP X11, X1
	0x03DF439C B.EQ 0x3DF47C4
	0x03DF43A0 SUBS X9, X9, 0x1
	0x03DF43A4 ADD X10, X10, 0x10
	0x03DF43A8 B.NE 0x3DF4394
	0x03DF43AC MOVZ W2, 0x19
	0x03DF43B0 MOV X0, X19
	0x03DF43B4 BL 0x1C5C788
	0x03DF43B8 B 0x3DF47D4
	0x03DF43BC MOV V0.16B, V8.16B
	0x03DF43C0 MOV X0, X31
	0x03DF43C4 BL 0x3DFED98
	0x03DF43C8 CBZ X19, 0x3DF48F0
	0x03DF43CC LDR X8, [X19]
	0x03DF43D0 MOV X21, X1
	0x03DF43D4 LDR X1, [X25]
	0x03DF43D8 MOV X20, X0
	0x03DF43DC LDRH W9, [X8 + 0x12E]
	0x03DF43E0 CBZ X9, 0x3DF4404
	0x03DF43E4 LDR X10, [X8 + 0xB0]
	0x03DF43E8 ADD X10, X10, 0x8
	0x03DF43EC LDUR X11, [X10 - 0x8]
	0x03DF43F0 CMP X11, X1
	0x03DF43F4 B.EQ 0x3DF47EC
	0x03DF43F8 SUBS X9, X9, 0x1
	0x03DF43FC ADD X10, X10, 0x10
	0x03DF4400 B.NE 0x3DF43EC
	0x03DF4404 MOVZ W2, 0x36
	0x03DF4408 MOV X0, X19
	0x03DF440C BL 0x1C5C788
	0x03DF4410 B 0x3DF47FC
	0x03DF4414 LDR W9, [X10]
	0x03DF4418 ADD W9, W9, 0xC
	0x03DF441C ADD X8, X8, W9, 0x4, SXTW
	0x03DF4420 ADD X0, X8, 0x138
	0x03DF4424 LDP X8, X3, [X0]
	0x03DF4428 AND X2, X21, 0x0
	0x03DF442C MOV X0, X19
	0x03DF4430 MOV X1, X20
	0x03DF4434 BLR X8
	0x03DF4438 B 0x3DF3624
	0x03DF443C LDR W9, [X10]
	0x03DF4440 ADD W9, W9, 0x4
	0x03DF4444 ADD X8, X8, W9, 0x4, SXTW
	0x03DF4448 ADD X0, X8, 0x138
	0x03DF444C LDP X8, X3, [X0]
	0x03DF4450 AND X2, X21, 0x0
	0x03DF4454 MOV X0, X19
	0x03DF4458 MOV X1, X20
	0x03DF445C BLR X8
	0x03DF4460 B 0x3DF3624
	0x03DF4464 LDR W9, [X10]
	0x03DF4468 ADD W9, W9, 0xB
	0x03DF446C ADD X8, X8, W9, 0x4, SXTW
	0x03DF4470 ADD X0, X8, 0x138
	0x03DF4474 LDP X8, X3, [X0]
	0x03DF4478 AND X2, X21, 0x0
	0x03DF447C MOV X0, X19
	0x03DF4480 MOV X1, X20
	0x03DF4484 BLR X8
	0x03DF4488 B 0x3DF3624
	0x03DF448C LDRSW X9, [X10]
	0x03DF4490 ADD X8, X8, X9, 0x4, LSL
	0x03DF4494 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5F5000
	006 Move W8, [X21+613]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x376000
	014 Move X0, [X0+2544]
	015 Call 0x1C17CF4
	016 Move X0, 0x371000
	017 Move X0, [X0+464]
	018 Call 0x1C17CF4
	019 Move X0, 0x371000
	020 Move X0, [X0+456]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+613], W8
	024 Move X21, [X20+848]
	025 Compare X21, 0
	026 JumpIfNotEqual {39}
	027 Move X8, 0x371000
	028 Move X8, [X8+456]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X8, 0x371000
	032 Move X8, [X8+464]
	033 Move X21, X0
	034 Move X1, [X8]
	035 Call List`1<Object>..ctor, X0
	036 Move [X20+848], X21
	037 Compare X21, 0
	038 JumpIfEqual {78}
	039 Move X9, 0x376000
	040 Move X9, [X9+2544]
	041 Move W10, [X21+28]
	042 Move X8, [X21+16]
	043 Move X9, [X9]
	044 Add W10, W10, 1
	045 Move [X21+28], W10
	046 Compare X8, 0
	047 JumpIfEqual {78}
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Move W11, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add W9, W10, 1
	052 Add X8, X8, X10
	053 Move [X21+24], W9
	054 Move [X8+32], X19
	055 Move X8, [X9+32]
	056 Move X0, X21
	057 Move X1, X19
	058 Move X8, [X8+192]
	059 Move X2, [X8+112]
	060 Call List`1<Object>.AddWithResize, X0, X1
	061 Move X0, X20
	062 Call VisualElement.GetAnimationSystem, X0
	063 Compare X0, 0
	064 JumpIfEqual {73}
	065 Move X1, X19
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X2, X31
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 Call VisualElementAnimationSystem.RegisterAnimation, X0, X1
	072 Return 
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move X30, [X31+32]
	076 Move X21, [X31+40]
	077 Return 
	078 Call 0x1C17F20

Method: System.Void UnregisterAnimation(UnityEngine.UIElements.Experimental.IValueAnimationUpdate anim)

Disassembly:
	0x03DF4498 LDR V0, [X31 + 0xB]
	0x03DF449C LDR W8, [X31 + 0xC0]
	0x03DF44A0 LDR X9, [X0]
	0x03DF44A4 STR V0, [X31 + 0x11]
	0x03DF44A8 STR W8, [X31 + 0x120]
	0x03DF44AC LDR X2, [X0 + 0x8]
	0x03DF44B0 ADD X1, X31, 0x110
	0x03DF44B4 MOV X0, X19
	0x03DF44B8 BLR X9
	0x03DF44BC B 0x3DF3624
	0x03DF44C0 LDR W9, [X10]
	0x03DF44C4 ADD W9, W9, 0x3
	0x03DF44C8 ADD X8, X8, W9, 0x4, SXTW
	0x03DF44CC ADD X0, X8, 0x138
	0x03DF44D0 LDP X8, X3, [X0]
	0x03DF44D4 AND X2, X21, 0x0
	0x03DF44D8 MOV X0, X19
	0x03DF44DC MOV X1, X20
	0x03DF44E0 BLR X8
	0x03DF44E4 B 0x3DF3624
	0x03DF44E8 LDR W9, [X10]
	0x03DF44EC ADD W9, W9, 0x21
	0x03DF44F0 ADD X8, X8, W9, 0x4, SXTW
	0x03DF44F4 ADD X0, X8, 0x138
	0x03DF44F8 LDP X8, X2, [X0]
	0x03DF44FC MOV X0, X19
	0x03DF4500 MOV X1, X20
	0x03DF4504 BLR X8
	0x03DF4508 B 0x3DF3624
	0x03DF450C LDR W9, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5F5000
	006 Move W8, [X21+614]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x376000
	014 Move X0, [X0+2552]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+614], W8
	018 Move X0, [X20+848]
	019 Compare X0, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x376000
	022 Move X8, [X8+2552]
	023 Move X1, X19
	024 Move X2, [X8]
	025 Call List`1<Object>.Remove, X0, X1
	026 Move X0, X20
	027 Call VisualElement.GetAnimationSystem, X0
	028 Compare X0, 0
	029 JumpIfEqual {38}
	030 Move X1, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X2, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call VisualElementAnimationSystem.UnregisterAnimation, X0, X1
	037 Return 
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 

Method: System.Void UnregisterRunningAnimations()

Disassembly:
	0x03DF25CC MOV X21, X0
	0x03DF25D0 LDRH W9, [X8 + 0x12E]
	0x03DF25D4 LDR X1, [X22]
	0x03DF25D8 CBZ X9, 0x3DF25FC
	0x03DF25DC LDR X10, [X8 + 0xB0]
	0x03DF25E0 ADD X10, X10, 0x8
	0x03DF25E4 LDUR X11, [X10 - 0x8]
	0x03DF25E8 CMP X11, X1
	0x03DF25EC B.EQ 0x3DF260C
	0x03DF25F0 SUBS X9, X9, 0x1
	0x03DF25F4 ADD X10, X10, 0x10
	0x03DF25F8 B.NE 0x3DF25E4
	0x03DF25FC MOVZ W2, 0x3
	0x03DF2600 MOV X0, X20
	0x03DF2604 BL 0x1C5C788
	0x03DF2608 B 0x3DF261C
	0x03DF260C LDR W9, [X10]
	0x03DF2610 ADD W9, W9, 0x3
	0x03DF2614 ADD X8, X8, W9, 0x4, SXTW
	0x03DF2618 ADD X0, X8, 0x138
	0x03DF261C LDP X8, X2, [X0]
	0x03DF2620 MOV X0, X20
	0x03DF2624 MOV X1, X21
	0x03DF2628 BLR X8
	0x03DF262C TBZ X0, 0x0, 0x3DF2670
	0x03DF2630 LDR X8, [X20]
	0x03DF2634 LDR X1, [X22]
	0x03DF2638 LDRH W9, [X8 + 0x12E]
	0x03DF263C CBZ X9, 0x3DF2660
	0x03DF2640 LDR X10, [X8 + 0xB0]
	0x03DF2644 ADD X10, X10, 0x8
	0x03DF2648 LDUR X11, [X10 - 0x8]
	0x03DF264C CMP X11, X1
	0x03DF2650 B.EQ 0x3DF26BC
	0x03DF2654 SUBS X9, X9, 0x1
	0x03DF2658 ADD X10, X10, 0x10
	0x03DF265C B.NE 0x3DF2648
	0x03DF2660 MOVZ W2, 0x2
	0x03DF2664 MOV X0, X20
	0x03DF2668 BL 0x1C5C788
	0x03DF266C B 0x3DF26CC
	0x03DF2670 ADRP X9, 0x377000
	0x03DF2674 LDR X9, [X9 + 0x9A8]
	0x03DF2678 LDR X8, [X20]
	0x03DF267C LDR X22, [X9]
	0x03DF2680 LDRH W9, [X8 + 0x12E]
	0x03DF2684 LDR X1, [X22 + 0x20]
	0x03DF2688 LDRH W2, [X22 + 0x50]
	0x03DF268C CBZ X9, 0x3DF26B0
	0x03DF2690 LDR X10, [X8 + 0xB0]
	0x03DF2694 ADD X10, X10, 0x8
	0x03DF2698 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5F7000
	005 Move W8, [X20+615]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x32C000
	012 Move X0, [X0+3792]
	013 Call 0x1C17CF4
	014 Move X0, 0x378000
	015 Move X0, [X0+2440]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+615], W8
	019 Move X20, 0x32C000
	020 Move X8, [X19+848]
	021 Move X20, [X20+3792]
	022 Compare X8, 0
	023 JumpIfEqual {33}
	024 Move W8, [X8+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, X19
	027 Call VisualElement.GetAnimationSystem, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X19+848]
	031 Move X2, X31
	032 Call VisualElementAnimationSystem.UnregisterAnimations, X0, X1
	033 Move X8, [X19]
	034 Move X1, [X20]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move W2, 19
	045 Move X0, X19
	046 Call 0x1C5D788
	047 Move W9, [X10]
	048 Add W9, W9, 19
	049 Add X8, X8, W9
	050 Add X0, X8, 312
	051 Move X2, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 CallNoReturn X2

Method: System.Void RegisterRunningAnimations()

Disassembly:
	0x03DF26BC LDR W9, [X10]
	0x03DF26C0 ADD W9, W9, 0x2
	0x03DF26C4 ADD X8, X8, W9, 0x4, SXTW
	0x03DF26C8 ADD X0, X8, 0x138
	0x03DF26CC LDP X4, X3, [X0]
	0x03DF26D0 MOV X0, X20
	0x03DF26D4 MOV X1, X19
	0x03DF26D8 MOV X2, X21
	0x03DF26DC B 0x3DF2710
	0x03DF26E0 LDR W9, [X10]
	0x03DF26E4 ADD W9, W9, W2
	0x03DF26E8 ADD X8, X8, W9, 0x4, SXTW
	0x03DF26EC ADD X0, X8, 0x138
	0x03DF26F0 LDR X0, [X0 + 0x8]
	0x03DF26F4 MOV X1, X22
	0x03DF26F8 BL 0x1C16DF8
	0x03DF26FC LDR X4, [X0 + 0x8]
	0x03DF2700 MOV X3, X0
	0x03DF2704 MOV X0, X20
	0x03DF2708 MOV X1, X21
	0x03DF270C MOV X2, X19
	0x03DF2710 LDP X20, X19, [X31 + 0x20]
	0x03DF2714 LDP X22, X21, [X31 + 0x10]
	0x03DF2718 LDP X30, X23, [X31], #0x30
	0x03DF271C BR X4
	0x03DF2720 ADRP X0, 0x306000
	0x03DF2724 LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5F7000
	005 Move W8, [X20+616]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x378000
	012 Move X0, [X0+2440]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+616], W8
	016 Move X8, [X19+848]
	017 Compare X8, 0
	018 JumpIfEqual {32}
	019 Move W8, [X8+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X0, X19
	022 Call VisualElement.GetAnimationSystem, X0
	023 Compare X0, 0
	024 JumpIfEqual {32}
	025 Move X1, [X19+848]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X2, X31
	029 Move X30, [X31+32]
	030 Call VisualElementAnimationSystem.RegisterAnimations, X0, X1
	031 Return 
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return 

Method: UnityEngine.UIElements.Experimental.ValueAnimation`1<T> StartAnimation(UnityEngine.UIElements.Experimental.ValueAnimation`1<T> anim, System.Func`2<UnityEngine.UIElements.VisualElement, T> fromValueGetter, T to, System.Int32 durationMs, System.Action`2<UnityEngine.UIElements.VisualElement, T> onValueChanged)

Disassembly:
	0x022AB210 BL 0x3D1DFE8
	0x022AB214 LDUR X8, [X29 - 0x20]
	0x022AB218 LDR X8, [X8 + 0x28]
	0x022AB21C LDUR X9, [X29 - 0x8]
	0x022AB220 CMP X8, X9
	0x022AB224 B.NE 0x22AB24C
	0x022AB228 ADD X31, X29, 0x0
	0x022AB22C LDP X20, X19, [X31 + 0x50]
	0x022AB230 LDP X22, X21, [X31 + 0x40]
	0x022AB234 LDP X24, X23, [X31 + 0x30]
	0x022AB238 LDP X26, X25, [X31 + 0x20]
	0x022AB23C LDP X28, X27, [X31 + 0x10]
	0x022AB240 LDP X29, X30, [X31], #0x60
	0x022AB244 RET
	0x022AB248 BL 0x1C16F20
	0x022AB24C BL 0x3EB1B20
	0x022AB250 STP X30, X25, [X31 - 0x40]!
	0x022AB254 STP X24, X23, [X31 + 0x10]
	0x022AB258 STP X22, X21, [X31 + 0x20]
	0x022AB25C STP X20, X19, [X31 + 0x30]
	0x022AB260 LDR X8, [X5 + 0x38]
	0x022AB264 MOV X19, X5
	0x022AB268 MOV X22, X4
	0x022AB26C MOV W20, W3
	0x022AB270 MOV X23, X2
	0x022AB274 MOV X24, X1
	0x022AB278 MOV X21, X0
	0x022AB27C CBNZ X8, 0x22AB2A0
	0x022AB280 ADRP X0, 0x1E71000
	0x022AB284 LDR X0, [X0 + 0x930]
	0x022AB288 BL 0x1C16CF4
	0x022AB28C LDR X8, [X19 + 0x38]
	0x022AB290 CBNZ X8, 0x22AB2A0
	0x022AB294 MOV X0, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X5+56]
	009 Move X20, X5
	010 Move X21, X4
	011 Move W22, W3
	012 Move X23, X2
	013 Move X24, X1
	014 Move X19, X0
	015 Compare X8, 0
	016 JumpIfNotEqual {19}
	017 Move X0, X20
	018 Call 0x1C5D6E0
	019 Compare X19, 0
	020 JumpIfEqual {42}
	021 Move [X19+80], X24
	022 Move [X19+112], X23
	023 Move X8, [X20+56]
	024 Move X0, X19
	025 Move W1, W22
	026 Move X2, [X8+40]
	027 Call 0x273F0F4, X0, X1
	028 Move [X19+72], X21
	029 Move X8, [X20+56]
	030 Move X0, X19
	031 Move X1, [X8+64]
	032 Call 0x273F23C, X0
	033 Move X0, X19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X30, [X31+64]
	041 Return X0
	042 Call 0x1C17F20

Method: System.Void AssignStyleValues(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.Experimental.StyleValues src)

Disassembly:
	0x03DF4510 ADD W9, W9, 0x27
	0x03DF4514 ADD X8, X8, W9, 0x4, SXTW
	0x03DF4518 ADD X0, X8, 0x138
	0x03DF451C LDP X8, X3, [X0]
	0x03DF4520 AND X2, X21, 0x0
	0x03DF4524 MOV X0, X19
	0x03DF4528 MOV X1, X20
	0x03DF452C BLR X8
	0x03DF4530 B 0x3DF3624
	0x03DF4534 LDR W9, [X10]
	0x03DF4538 ADD W9, W9, 0x24
	0x03DF453C ADD X8, X8, W9, 0x4, SXTW
	0x03DF4540 ADD X0, X8, 0x138
	0x03DF4544 LDP X8, X3, [X0]
	0x03DF4548 AND X2, X21, 0x0
	0x03DF454C MOV X0, X19
	0x03DF4550 MOV X1, X20
	0x03DF4554 BLR X8
	0x03DF4558 B 0x3DF3624
	0x03DF455C LDR W9, [X10]
	0x03DF4560 ADD W9, W9, 0x1C
	0x03DF4564 ADD X8, X8, W9, 0x4, SXTW
	0x03DF4568 ADD X0, X8, 0x138
	0x03DF456C LDP X8, X3, [X0]
	0x03DF4570 AND X2, X21, 0x0
	0x03DF4574 MOV X0, X19
	0x03DF4578 MOV X1, X20
	0x03DF457C BLR X8
	0x03DF4580 B 0x3DF3624
	0x03DF4584 LDR W9, [X10]
	0x03DF4588 ADD W9, W9, 0xE
	0x03DF458C ADD X8, X8, W9, 0x4, SXTW
	0x03DF4590 ADD X0, X8, 0x138
	0x03DF4594 LDP X8, X3, [X0]
	0x03DF4598 AND X2, X21, 0x0
	0x03DF459C MOV X0, X19
	0x03DF45A0 MOV X1, X20
	0x03DF45A4 BLR X8
	0x03DF45A8 B 0x3DF3624
	0x03DF45AC LDR W9, [X10]
	0x03DF45B0 ADD W9, W9, 0x1D
	0x03DF45B4 ADD X8, X8, W9, 0x4, SXTW
	0x03DF45B8 ADD X0, X8, 0x138
	0x03DF45BC LDP X8, X3, [X0]
	0x03DF45C0 AND X2, X21, 0x0
	0x03DF45C4 MOV X0, X19
	0x03DF45C8 MOV X1, X20
	0x03DF45CC BLR X8
	0x03DF45D0 B 0x3DF3624
	0x03DF45D4 LDR W9, [X10]
	0x03DF45D8 ADD W9, W9, 0x1A
	0x03DF45DC ADD X8, X8, W9, 0x4, SXTW
	0x03DF45E0 ADD X0, X8, 0x138
	0x03DF45E4 LDP X8, X3, [X0]
	0x03DF45E8 AND X2, X21, 0x0
	0x03DF45EC MOV X0, X19
	0x03DF45F0 MOV X1, X20
	0x03DF45F4 BLR X8
	0x03DF45F8 B 0x3DF3624
	0x03DF45FC LDR W9, [X10]
	0x03DF4600 ADD W9, W9, 0x9
	0x03DF4604 ADD X8, X8, W9, 0x4, SXTW
	0x03DF4608 ADD X0, X8, 0x138
	0x03DF460C LDP X8, X2, [X0]
	0x03DF4610 MOV X0, X19
	0x03DF4614 MOV X1, X20
	0x03DF4618 BLR X8
	0x03DF461C B 0x3DF3624
	0x03DF4620 LDR W9, [X10]
	0x03DF4624 ADD W9, W9, 0x25
	0x03DF4628 ADD X8, X8, W9, 0x4, SXTW
	0x03DF462C ADD X0, X8, 0x138
	0x03DF4630 LDP X8, X3, [X0]
	0x03DF4634 AND X2, X21, 0x0
	0x03DF4638 MOV X0, X19
	0x03DF463C MOV X1, X20
	0x03DF4640 BLR X8
	0x03DF4644 B 0x3DF3624
	0x03DF4648 LDR W9, [X10]
	0x03DF464C ADD W9, W9, 0xD
	0x03DF4650 ADD X8, X8, W9, 0x4, SXTW
	0x03DF4654 ADD X0, X8, 0x138
	0x03DF4658 LDP X8, X2, [X0]
	0x03DF465C MOV X0, X19
	0x03DF4660 MOV X1, X20
	0x03DF4664 BLR X8
	0x03DF4668 B 0x3DF3624
	0x03DF466C LDR W9, [X10]
	0x03DF4670 ADD W9, W9, 0x18
	0x03DF4674 ADD X8, X8, W9, 0x4, SXTW
	0x03DF4678 ADD X0, X8, 0x138
	0x03DF467C LDP X8, X3, [X0]
	0x03DF4680 AND X2, X21, 0x0
	0x03DF4684 MOV X0, X19
	0x03DF4688 MOV X1, X20
	0x03DF468C BLR X8
	0x03DF4690 B 0x3DF3624
	0x03DF4694 LDR W9, [X10]
	0x03DF4698 ADD W9, W9, 0x5
	0x03DF469C ADD X8, X8, W9, 0x4, SXTW
	0x03DF46A0 ADD X0, X8, 0x138
	0x03DF46A4 LDP X8, X2, [X0]
	0x03DF46A8 MOV X0, X19
	0x03DF46AC MOV X1, X20
	0x03DF46B0 BLR X8
	0x03DF46B4 B 0x3DF3624
	0x03DF46B8 LDR W9, [X10]
	0x03DF46BC ADD W9, W9, 0x7
	0x03DF46C0 ADD X8, X8, W9, 0x4, SXTW
	0x03DF46C4 ADD X0, X8, 0x138
	0x03DF46C8 LDP X8, X2, [X0]
	0x03DF46CC MOV X0, X19
	0x03DF46D0 MOV X1, X20
	0x03DF46D4 BLR X8
	0x03DF46D8 B 0x3DF3624
	0x03DF46DC LDR W9, [X10]
	0x03DF46E0 ADD W9, W9, 0x29
	0x03DF46E4 ADD X8, X8, W9, 0x4, SXTW
	0x03DF46E8 ADD X0, X8, 0x138
	0x03DF46EC LDP X8, X3, [X0]
	0x03DF46F0 AND X2, X21, 0x0
	0x03DF46F4 MOV X0, X19
	0x03DF46F8 MOV X1, X20
	0x03DF46FC BLR X8
	0x03DF4700 B 0x3DF3624
	0x03DF4704 LDR W9, [X10]
	0x03DF4708 ADD W9, W9, 0x15
	0x03DF470C ADD X8, X8, W9, 0x4, SXTW
	0x03DF4710 ADD X0, X8, 0x138
	0x03DF4714 LDP X8, X2, [X0]
	0x03DF4718 MOV X0, X19
	0x03DF471C MOV X1, X20
	0x03DF4720 BLR X8
	0x03DF4724 B 0x3DF3624
	0x03DF4728 LDR W9, [X10]
	0x03DF472C ADD W9, W9, 0x23
	0x03DF4730 ADD X8, X8, W9, 0x4, SXTW
	0x03DF4734 ADD X0, X8, 0x138
	0x03DF4738 LDP X8, X3, [X0]
	0x03DF473C AND X2, X21, 0x0
	0x03DF4740 MOV X0, X19
	0x03DF4744 MOV X1, X20
	0x03DF4748 BLR X8
	0x03DF474C B 0x3DF3624
	0x03DF4750 LDR W9, [X10]
	0x03DF4754 ADD W9, W9, 0x16
	0x03DF4758 ADD X8, X8, W9, 0x4, SXTW
	0x03DF475C ADD X0, X8, 0x138
	0x03DF4760 LDP X8, X2, [X0]
	0x03DF4764 MOV X0, X19
	0x03DF4768 MOV X1, X20
	0x03DF476C BLR X8
	0x03DF4770 B 0x3DF3624
	0x03DF4774 LDR W9, [X10]
	0x03DF4778 ADD W9, W9, 0x2D
	0x03DF477C ADD X8, X8, W9, 0x4, SXTW
	0x03DF4780 ADD X0, X8, 0x138
	0x03DF4784 LDP X8, X3, [X0]
	0x03DF4788 AND X2, X21, 0x0
	0x03DF478C MOV X0, X19
	0x03DF4790 MOV X1, X20
	0x03DF4794 BLR X8
	0x03DF4798 B 0x3DF3624
	0x03DF479C LDR W9, [X10]
	0x03DF47A0 ADD W9, W9, 0x1B
	0x03DF47A4 ADD X8, X8, W9, 0x4, SXTW
	0x03DF47A8 ADD X0, X8, 0x138
	0x03DF47AC LDP X8, X3, [X0]
	0x03DF47B0 AND X2, X21, 0x0
	0x03DF47B4 MOV X0, X19
	0x03DF47B8 MOV X1, X20
	0x03DF47BC BLR X8
	0x03DF47C0 B 0x3DF3624
	0x03DF47C4 LDR W9, [X10]
	0x03DF47C8 ADD W9, W9, 0x19
	0x03DF47CC ADD X8, X8, W9, 0x4, SXTW
	0x03DF47D0 ADD X0, X8, 0x138
	0x03DF47D4 LDP X8, X3, [X0]
	0x03DF47D8 AND X2, X21, 0x0
	0x03DF47DC MOV X0, X19
	0x03DF47E0 MOV X1, X20
	0x03DF47E4 BLR X8
	0x03DF47E8 B 0x3DF3624
	0x03DF47EC LDR W9, [X10]
	0x03DF47F0 ADD W9, W9, 0x36
	0x03DF47F4 ADD X8, X8, W9, 0x4, SXTW
	0x03DF47F8 ADD X0, X8, 0x138
	0x03DF47FC LDP X8, X3, [X0]
	0x03DF4800 AND X2, X21, 0x0
	0x03DF4804 MOV X0, X19
	0x03DF4808 MOV X1, X20
	0x03DF480C BLR X8
	0x03DF4810 B 0x3DF3624
	0x03DF4814 LDR W9, [X10]
	0x03DF4818 ADD W9, W9, 0x17
	0x03DF481C ADD X8, X8, W9, 0x4, SXTW
	0x03DF4820 ADD X0, X8, 0x138
	0x03DF4824 LDP X8, X3, [X0]
	0x03DF4828 AND X2, X21, 0x0
	0x03DF482C MOV X0, X19
	0x03DF4830 MOV X1, X20
	0x03DF4834 BLR X8
	0x03DF4838 B 0x3DF3624
	0x03DF483C ADRP X8, 0x372000
	0x03DF4840 LDR X8, [X8 + 0x488]
	0x03DF4844 ADD X0, X31, 0x140
	0x03DF4848 LDR X1, [X8]
	0x03DF484C BL 0x2BCB408
	0x03DF4850 LDR X22, [X31 + 0x8]
	0x03DF4854 LDR X8, [X22 + 0x28]
	0x03DF4858 LDR X9, [X31 + 0x168]
	0x03DF485C CMP X8, X9
	0x03DF4860 B.NE 0x3DF4908
	0x03DF4864 LDP X20, X19, [X31 + 0x1E0]
	0x03DF4868 LDP X22, X21, [X31 + 0x1D0]
	0x03DF486C LDP X24, X23, [X31 + 0x1C0]
	0x03DF4870 LDP X26, X25, [X31 + 0x1B0]
	0x03DF4874 LDP X28, X27, [X31 + 0x1A0]
	0x03DF4878 LDP X29, X30, [X31 + 0x190]
	0x03DF487C LDP D9, D8, [X31 + 0x180]
	0x03DF4880 LDP D11, D10, [X31 + 0x170]
	0x03DF4884 ADD X31, X31, 0x1F0
	0x03DF4888 RET
	0x03DF488C BL 0x1C16F20
	0x03DF4890 BL 0x1C16F20
	0x03DF4894 BL 0x1C16F20
	0x03DF4898 BL 0x1C16F20
	0x03DF489C BL 0x1C16F20
	0x03DF48A0 BL 0x1C16F20
	0x03DF48A4 BL 0x1C16F20
	0x03DF48A8 BL 0x1C16F20
	0x03DF48AC BL 0x1C16F20
	0x03DF48B0 BL 0x1C16F20
	0x03DF48B4 BL 0x1C16F20
	0x03DF48B8 BL 0x1C16F20
	0x03DF48BC BL 0x1C16F20
	0x03DF48C0 BL 0x1C16F20
	0x03DF48C4 BL 0x1C16F20
	0x03DF48C8 BL 0x1C16F20
	0x03DF48CC BL 0x1C16F20
	0x03DF48D0 BL 0x1C16F20
	0x03DF48D4 BL 0x1C16F20
	0x03DF48D8 BL 0x1C16F20
	0x03DF48DC BL 0x1C16F20
	0x03DF48E0 BL 0x1C16F20
	0x03DF48E4 BL 0x1C16F20
	0x03DF48E8 BL 0x1C16F20
	0x03DF48EC BL 0x1C16F20
	0x03DF48F0 BL 0x1C16F20
	0x03DF48F4 BL 0x1C16F20
	0x03DF48F8 BL 0x1C16F20
	0x03DF48FC BL 0x1C16F20
	0x03DF4900 BL 0x1C16F20
	0x03DF4904 BL 0x1C16F20
	0x03DF4908 BL 0x3EB1B20
	0x03DF490C B 0x3DF4A8C
	0x03DF4910 B 0x3DF4A8C
	0x03DF4914 B 0x3DF4A8C
	0x03DF4918 B 0x3DF4A8C
	0x03DF491C B 0x3DF4A8C
	0x03DF4920 B 0x3DF4A8C
	0x03DF4924 B 0x3DF4A8C
	0x03DF4928 B 0x3DF4A8C
	0x03DF492C B 0x3DF4A8C
	0x03DF4930 B 0x3DF4A8C
	0x03DF4934 B 0x3DF4A8C
	0x03DF4938 B 0x3DF4A8C
	0x03DF493C B 0x3DF4A8C
	0x03DF4940 B 0x3DF4A8C
	0x03DF4944 B 0x3DF4A8C
	0x03DF4948 B 0x3DF4A8C
	0x03DF494C B 0x3DF4A8C
	0x03DF4950 B 0x3DF4A8C
	0x03DF4954 B 0x3DF4A8C
	0x03DF4958 B 0x3DF4A8C
	0x03DF495C B 0x3DF4A8C
	0x03DF4960 B 0x3DF4A8C
	0x03DF4964 B 0x3DF4A8C
	0x03DF4968 B 0x3DF4A8C
	0x03DF496C B 0x3DF4A8C
	0x03DF4970 B 0x3DF4A8C
	0x03DF4974 B 0x3DF4A8C
	0x03DF4978 B 0x3DF4A8C
	0x03DF497C B 0x3DF4A8C
	0x03DF4980 B 0x3DF4A8C
	0x03DF4984 B 0x3DF4A8C
	0x03DF4988 B 0x3DF4A8C
	0x03DF498C B 0x3DF4A8C
	0x03DF4990 B 0x3DF4A8C
	0x03DF4994 B 0x3DF4A8C
	0x03DF4998 B 0x3DF4A8C
	0x03DF499C B 0x3DF4A8C
	0x03DF49A0 B 0x3DF4A8C
	0x03DF49A4 B 0x3DF4A8C
	0x03DF49A8 B 0x3DF4A8C
	0x03DF49AC B 0x3DF4A8C
	0x03DF49B0 B 0x3DF4A8C
	0x03DF49B4 B 0x3DF4A8C
	0x03DF49B8 B 0x3DF4A8C
	0x03DF49BC B 0x3DF4A8C
	0x03DF49C0 B 0x3DF4A8C
	0x03DF49C4 B 0x3DF4A8C
	0x03DF49C8 B 0x3DF4A8C
	0x03DF49CC B 0x3DF4A8C
	0x03DF49D0 B 0x3DF4A8C
	0x03DF49D4 B 0x3DF4A8C
	0x03DF49D8 B 0x3DF4A8C
	0x03DF49DC B 0x3DF4A8C
	0x03DF49E0 B 0x3DF4A8C
	0x03DF49E4 B 0x3DF4A8C
	0x03DF49E8 B 0x3DF4A8C
	0x03DF49EC B 0x3DF4A8C
	0x03DF49F0 B 0x3DF4A8C
	0x03DF49F4 B 0x3DF4A8C
	0x03DF49F8 B 0x3DF4A8C
	0x03DF49FC B 0x3DF4A8C
	0x03DF4A00 B 0x3DF4A8C
	0x03DF4A04 B 0x3DF4A8C
	0x03DF4A08 B 0x3DF4A8C
	0x03DF4A0C B 0x3DF4A8C
	0x03DF4A10 B 0x3DF4A8C
	0x03DF4A14 B 0x3DF4A8C
	0x03DF4A18 B 0x3DF4A8C
	0x03DF4A1C B 0x3DF4A8C
	0x03DF4A20 B 0x3DF4A8C
	0x03DF4A24 B 0x3DF4A8C
	0x03DF4A28 B 0x3DF4A8C
	0x03DF4A2C B 0x3DF4A8C
	0x03DF4A30 B 0x3DF4A8C
	0x03DF4A34 B 0x3DF4A8C
	0x03DF4A38 B 0x3DF4A8C
	0x03DF4A3C B 0x3DF4A8C
	0x03DF4A40 B 0x3DF4A8C
	0x03DF4A44 B 0x3DF4A8C
	0x03DF4A48 B 0x3DF4A8C
	0x03DF4A4C B 0x3DF4A8C
	0x03DF4A50 B 0x3DF4A8C
	0x03DF4A54 B 0x3DF4A8C
	0x03DF4A58 B 0x3DF4A8C
	0x03DF4A5C B 0x3DF4A8C
	0x03DF4A60 B 0x3DF4A8C
	0x03DF4A64 B 0x3DF4A8C
	0x03DF4A68 B 0x3DF4A8C
	0x03DF4A6C B 0x3DF4A8C
	0x03DF4A70 B 0x3DF4A8C
	0x03DF4A74 B 0x3DF4A8C
	0x03DF4A78 B 0x3DF4A8C
	0x03DF4A7C B 0x3DF4A8C
	0x03DF4A80 B 0x3DF4A8C
	0x03DF4A84 B 0x3DF4A8C
	0x03DF4A88 B 0x3DF4A8C
	0x03DF4A8C MOV X19, X0
	0x03DF4A90 CMP W1, 0x1
	0x03DF4A94 B.NE 0x3DF4ACC
	0x03DF4A98 MOV X0, X19
	0x03DF4A9C BL 0x3EB1AD0
	0x03DF4AA0 LDR X20, [X0]
	0x03DF4AA4 BL 0x3EB1AE0
	0x03DF4AA8 ADRP X8, 0x372000
	0x03DF4AAC LDR X8, [X8 + 0x488]
	0x03DF4AB0 ADD X0, X31, 0x140
	0x03DF4AB4 LDR X1, [X8]
	0x03DF4AB8 BL 0x2BCB408
	0x03DF4ABC LDR X22, [X31 + 0x8]
	0x03DF4AC0 CBZ X20, 0x3DF4854
	0x03DF4AC4 MOV X0, X20
	0x03DF4AC8 BL 0x1C16F18
	0x03DF4ACC MOV X20, X31
	0x03DF4AD0 B 0x3DF4AD8
	0x03DF4AD4 MOV X19, X0
	0x03DF4AD8 ADRP X8, 0x372000
	0x03DF4ADC LDR X8, [X8 + 0x488]
	0x03DF4AE0 LDR X1, [X8]
	0x03DF4AE4 ADD X0, X31, 0x140
	0x03DF4AE8 BL 0x2BCB408
	0x03DF4AEC CBNZ X20, 0x3DF4AF8
	0x03DF4AF0 MOV X0, X19
	0x03DF4AF4 BL 0x1D2C690
	0x03DF4AF8 MOV X0, X20
	0x03DF4AFC BL 0x1C16F18
	0x03DF4B00 BL 0x1990590
	0x03DF4B04 SUB X31, X31, 0xC0
	0x03DF4B08 STP X29, X30, [X31 + 0x60]
	0x03DF4B0C STP X28, X27, [X31 + 0x70]
	0x03DF4B10 STP X26, X25, [X31 + 0x80]
	0x03DF4B14 STP X24, X23, [X31 + 0x90]
	0x03DF4B18 STP X22, X21, [X31 + 0xA0]
	0x03DF4B1C STP X20, X19, [X31 + 0xB0]
	0x03DF4B20 MRS X21, 0xC000
	0x03DF4B24 LDR X8, [X21 + 0x28]
	0x03DF4B28 ADRP X22, 0x5F4000
	0x03DF4B2C MOV X20, X2
	0x03DF4B30 MOV X19, X1
	0x03DF4B34 STR X8, [X31 + 0x58]
	0x03DF4B38 LDRB W8, [X22 + 0x26A]
	0x03DF4B3C TBNZ X8, 0x0, 0x3DF4B84
	0x03DF4B40 ADRP X0, 0x372000
	0x03DF4B44 LDR X0, [X0 + 0x488]
	0x03DF4B48 BL 0x1C16CF4
	0x03DF4B4C ADRP X0, 0x372000
	0x03DF4B50 LDR X0, [X0 + 0x490]
	0x03DF4B54 BL 0x1C16CF4
	0x03DF4B58 ADRP X0, 0x372000
	0x03DF4B5C LDR X0, [X0 + 0x498]
	0x03DF4B60 BL 0x1C16CF4
	0x03DF4B64 ADRP X0, 0x328000
	0x03DF4B68 LDR X0, [X0 + 0x120]
	0x03DF4B6C BL 0x1C16CF4
	0x03DF4B70 ADRP X0, 0x372000
	0x03DF4B74 LDR X0, [X0 + 0x4A0]
	0x03DF4B78 BL 0x1C16CF4
	0x03DF4B7C MOVZ W8, 0x1
	0x03DF4B80 STRB W8, [X22 + 0x26A]
	0x03DF4B84 MOVI V0.2D, 0x0
	0x03DF4B88 STR X31, [X31 + 0x50]
	0x03DF4B8C STP V0, V0, [X31 + 0x30]
	0x03DF4B90 STR X31, [X31]
	0x03DF4B94 CBZ X19, 0x3DF58FC
	0x03DF4B98 CBZ X20, 0x3DF58C8
	0x03DF4B9C LDR X0, [X20 + 0x10]
	0x03DF4BA0 CBZ X0, 0x3DF58FC
	0x03DF4BA4 ADRP X8, 0x372000
	0x03DF4BA8 LDR X8, [X8 + 0x4A0]
	0x03DF4BAC ADRP X22, 0x372000
	0x03DF4BB0 ADRP X23, 0x328000
	0x03DF4BB4 ADRP X20, 0x372000
	0x03DF4BB8 LDR X1, [X8]
	0x03DF4BBC LDR X22, [X22 + 0x490]
	0x03DF4BC0 LDR X23, [X23 + 0x120]
	0x03DF4BC4 LDR X20, [X20 + 0x488]
	0x03DF4BC8 ADD X8, X31, 0x8
	0x03DF4BCC BL 0x3071EC8
	0x03DF4BD0 LDUR V0, [X31 + 0x8]
	0x03DF4BD4 LDUR V1, [X31 + 0x18]
	0x03DF4BD8 LDR X8, [X31 + 0x28]
	0x03DF4BDC MOVZ W24, 0x20
	0x03DF4BE0 MOVZ W25, 0x2
	0x03DF4BE4 ADRP X26, 0xFFFFFFFFFCDA4000
	0x03DF4BE8 MOVZ W27, 0x2
	0x03DF4BEC ADRP X29, 0xFFFFFFFFFCDA4000
	0x03DF4BF0 MOVK W24, 0x20000
	0x03DF4BF4 MOVK W25, 0x40000
	0x03DF4BF8 ADD X26, X26, 0x5AE
	0x03DF4BFC MOVK W27, 0x30000
	0x03DF4C00 ORR W28, W31, 0xFFFDFFFD
	0x03DF4C04 STP V0, V1, [X31 + 0x30]
	0x03DF4C08 STR X8, [X31 + 0x50]
	0x03DF4C0C ADD X29, X29, 0x572
	0x03DF4C10 LDR X1, [X22]
	0x03DF4C14 ADD X0, X31, 0x30
	0x03DF4C18 BL 0x2BCB40C
	0x03DF4C1C TBZ X0, 0x0, 0x3DF58BC
	0x03DF4C20 LDR W8, [X31 + 0x40]
	0x03DF4C24 CMP W8, W24
	0x03DF4C28 B.LE 0x3DF4C90
	0x03DF4C2C CMP W8, W25
	0x03DF4C30 B.LE 0x3DF4CEC
	0x03DF4C34 SUB W8, W8, 0x70000
	0x03DF4C38 CMP W8, 0xE
	0x03DF4C3C B.HI 0x3DF4C10
	0x03DF4C40 ADR X9, 0xFFFFFFFFFFFFFFD0
	0x03DF4C44 LDRB W10, [X26, X8, LSL]
	0x03DF4C48 ADD X9, X9, X10, 0x2, LSL
	0x03DF4C4C BR X9
	0x03DF4C50 LDR X8, [X19]
	0x03DF4C54 LDR X1, [X23]
	0x03DF4C58 LDRH W9, [X8 + 0x12E]
	0x03DF4C5C CBZ X9, 0x3DF4C80
	0x03DF4C60 LDR X10, [X8 + 0xB0]
	0x03DF4C64 ADD X10, X10, 0x8
	0x03DF4C68 LDUR X11, [X10 - 0x8]
	0x03DF4C6C CMP X11, X1
	0x03DF4C70 B.EQ 0x3DF54A0
	0x03DF4C74 SUBS X9, X9, 0x1
	0x03DF4C78 ADD X10, X10, 0x10
	0x03DF4C7C B.NE 0x3DF4C68
	0x03DF4C80 MOV X0, X19
	0x03DF4C84 MOV W2, W31
	0x03DF4C88 BL 0x1C5C788
	0x03DF4C8C B 0x3DF54AC
	0x03DF4C90 ADD W9, W8, W28
	0x03DF4C94 CMP W9, 0x1D
	0x03DF4C98 B.HI 0x3DF4EBC
	0x03DF4C9C ADR X8, 0xFFFFFFFFFFFFFF74
	0x03DF4CA0 LDRH W10, [X29, X9, LSL #1]
	0x03DF4CA4 ADD X8, X8, X10, 0x2, LSL
	0x03DF4CA8 BR X8
	0x03DF4CAC LDR X8, [X19]
	0x03DF4CB0 LDR X1, [X23]
	0x03DF4CB4 LDRH W9, [X8 + 0x12E]
	0x03DF4CB8 CBZ X9, 0x3DF4CDC
	0x03DF4CBC LDR X10, [X8 + 0xB0]
	0x03DF4CC0 ADD X10, X10, 0x8
	0x03DF4CC4 LDUR X11, [X10 - 0x8]
	0x03DF4CC8 CMP X11, X1
	0x03DF4CCC B.EQ 0x3DF56D8
	0x03DF4CD0 SUBS X9, X9, 0x1
	0x03DF4CD4 ADD X10, X10, 0x10
	0x03DF4CD8 B.NE 0x3DF4CC4
	0x03DF4CDC MOVZ W2, 0x4
	0x03DF4CE0 MOV X0, X19
	0x03DF4CE4 BL 0x1C5C788
	0x03DF4CE8 B 0x3DF56E8
	0x03DF4CEC CMP W8, W27
	0x03DF4CF0 B.EQ 0x3DF4D3C
	0x03DF4CF4 CMP W8, W25
	0x03DF4CF8 B.NE 0x3DF4C10
	0x03DF4CFC LDR X8, [X19]
	0x03DF4D00 LDR X1, [X23]
	0x03DF4D04 LDRH W9, [X8 + 0x12E]
	0x03DF4D08 CBZ X9, 0x3DF4D2C
	0x03DF4D0C LDR X10, [X8 + 0xB0]
	0x03DF4D10 ADD X10, X10, 0x8
	0x03DF4D14 LDUR X11, [X10 - 0x8]
	0x03DF4D18 CMP X11, X1
	0x03DF4D1C B.EQ 0x3DF4F04
	0x03DF4D20 SUBS X9, X9, 0x1
	0x03DF4D24 ADD X10, X10, 0x10
	0x03DF4D28 B.NE 0x3DF4D14
	0x03DF4D2C MOVZ W2, 0x5
	0x03DF4D30 MOV X0, X19
	0x03DF4D34 BL 0x1C5C788
	0x03DF4D38 B 0x3DF4F14
	0x03DF4D3C LDR X8, [X19]
	0x03DF4D40 LDR X1, [X23]
	0x03DF4D44 LDRH W9, [X8 + 0x12E]
	0x03DF4D48 CBZ X9, 0x3DF4D6C
	0x03DF4D4C LDR X10, [X8 + 0xB0]
	0x03DF4D50 ADD X10, X10, 0x8
	0x03DF4D54 LDUR X11, [X10 - 0x8]
	0x03DF4D58 CMP X11, X1
	0x03DF4D5C B.EQ 0x3DF4F30
	0x03DF4D60 SUBS X9, X9, 0x1
	0x03DF4D64 ADD X10, X10, 0x10
	0x03DF4D68 B.NE 0x3DF4D54
	0x03DF4D6C MOVZ W2, 0x25
	0x03DF4D70 MOV X0, X19
	0x03DF4D74 BL 0x1C5C788
	0x03DF4D78 B 0x3DF4F40
	0x03DF4D7C LDR X8, [X19]
	0x03DF4D80 LDR X1, [X23]
	0x03DF4D84 LDRH W9, [X8 + 0x12E]
	0x03DF4D88 CBZ X9, 0x3DF4DAC
	0x03DF4D8C LDR X10, [X8 + 0xB0]
	0x03DF4D90 ADD X10, X10, 0x8
	0x03DF4D94 LDUR X11, [X10 - 0x8]
	0x03DF4D98 CMP X11, X1
	0x03DF4D9C B.EQ 0x3DF541C
	0x03DF4DA0 SUBS X9, X9, 0x1
	0x03DF4DA4 ADD X10, X10, 0x10
	0x03DF4DA8 B.NE 0x3DF4D94
	0x03DF4DAC MOVZ W2, 0xB
	0x03DF4DB0 MOV X0, X19
	0x03DF4DB4 BL 0x1C5C788
	0x03DF4DB8 B 0x3DF542C
	0x03DF4DBC LDR X8, [X19]
	0x03DF4DC0 LDR X1, [X23]
	0x03DF4DC4 LDRH W9, [X8 + 0x12E]
	0x03DF4DC8 CBZ X9, 0x3DF4DEC
	0x03DF4DCC LDR X10, [X8 + 0xB0]
	0x03DF4DD0 ADD X10, X10, 0x8
	0x03DF4DD4 LDUR X11, [X10 - 0x8]
	0x03DF4DD8 CMP X11, X1
	0x03DF4DDC B.EQ 0x3DF5448
	0x03DF4DE0 SUBS X9, X9, 0x1
	0x03DF4DE4 ADD X10, X10, 0x10
	0x03DF4DE8 B.NE 0x3DF4DD4
	0x03DF4DEC MOVZ W2, 0x3
	0x03DF4DF0 MOV X0, X19
	0x03DF4DF4 BL 0x1C5C788
	0x03DF4DF8 B 0x3DF5458
	0x03DF4DFC LDR X8, [X19]
	0x03DF4E00 LDR X1, [X23]
	0x03DF4E04 LDRH W9, [X8 + 0x12E]
	0x03DF4E08 CBZ X9, 0x3DF4E2C
	0x03DF4E0C LDR X10, [X8 + 0xB0]
	0x03DF4E10 ADD X10, X10, 0x8
	0x03DF4E14 LDUR X11, [X10 - 0x8]
	0x03DF4E18 CMP X11, X1
	0x03DF4E1C B.EQ 0x3DF5474
	0x03DF4E20 SUBS X9, X9, 0x1
	0x03DF4E24 ADD X10, X10, 0x10
	0x03DF4E28 B.NE 0x3DF4E14
	0x03DF4E2C MOVZ W2, 0xA
	0x03DF4E30 MOV X0, X19
	0x03DF4E34 BL 0x1C5C788
	0x03DF4E38 B 0x3DF5484
	0x03DF4E3C LDR X8, [X19]
	0x03DF4E40 LDR X1, [X23]
	0x03DF4E44 LDRH W9, [X8 + 0x12E]
	0x03DF4E48 CBZ X9, 0x3DF4E6C
	0x03DF4E4C LDR X10, [X8 + 0xB0]
	0x03DF4E50 ADD X10, X10, 0x8
	0x03DF4E54 LDUR X11, [X10 - 0x8]
	0x03DF4E58 CMP X11, X1
	0x03DF4E5C B.EQ 0x3DF54C8
	0x03DF4E60 SUBS X9, X9, 0x1
	0x03DF4E64 ADD X10, X10, 0x10
	0x03DF4E68 B.NE 0x3DF4E54
	0x03DF4E6C MOVZ W2, 0x2
	0x03DF4E70 MOV X0, X19
	0x03DF4E74 BL 0x1C5C788
	0x03DF4E78 B 0x3DF54D8
	0x03DF4E7C LDR X8, [X19]
	0x03DF4E80 LDR X1, [X23]
	0x03DF4E84 LDRH W9, [X8 + 0x12E]
	0x03DF4E88 CBZ X9, 0x3DF4EAC
	0x03DF4E8C LDR X10, [X8 + 0xB0]
	0x03DF4E90 ADD X10, X10, 0x8
	0x03DF4E94 LDUR X11, [X10 - 0x8]
	0x03DF4E98 CMP X11, X1
	0x03DF4E9C B.EQ 0x3DF54F4
	0x03DF4EA0 SUBS X9, X9, 0x1
	0x03DF4EA4 ADD X10, X10, 0x10
	0x03DF4EA8 B.NE 0x3DF4E94
	0x03DF4EAC MOVZ W2, 0x1B
	0x03DF4EB0 MOV X0, X19
	0x03DF4EB4 BL 0x1C5C788
	0x03DF4EB8 B 0x3DF5504
	0x03DF4EBC CMP W8, 0x10000
	0x03DF4EC0 B.NE 0x3DF4C10
	0x03DF4EC4 LDR X8, [X19]
	0x03DF4EC8 LDR X1, [X23]
	0x03DF4ECC LDRH W9, [X8 + 0x12E]
	0x03DF4ED0 CBZ X9, 0x3DF4EF4
	0x03DF4ED4 LDR X10, [X8 + 0xB0]
	0x03DF4ED8 ADD X10, X10, 0x8
	0x03DF4EDC LDUR X11, [X10 - 0x8]
	0x03DF4EE0 CMP X11, X1
	0x03DF4EE4 B.EQ 0x3DF5890
	0x03DF4EE8 SUBS X9, X9, 0x1
	0x03DF4EEC ADD X10, X10, 0x10
	0x03DF4EF0 B.NE 0x3DF4EDC
	0x03DF4EF4 MOVZ W2, 0xE
	0x03DF4EF8 MOV X0, X19
	0x03DF4EFC BL 0x1C5C788
	0x03DF4F00 B 0x3DF58A0
	0x03DF4F04 LDR W9, [X10]
	0x03DF4F08 ADD W9, W9, 0x5
	0x03DF4F0C ADD X8, X8, W9, 0x4, SXTW
	0x03DF4F10 ADD X0, X8, 0x138
	0x03DF4F14 LDP X8, X1, [X0]
	0x03DF4F18 MOV X0, X19
	0x03DF4F1C BLR X8
	0x03DF4F20 ADD X0, X31, 0x0
	0x03DF4F24 MOV X1, X31
	0x03DF4F28 BL 0x3D5ACD8
	0x03DF4F2C B 0x3DF4C10
	0x03DF4F30 LDR W9, [X10]
	0x03DF4F34 ADD W9, W9, 0x25
	0x03DF4F38 ADD X8, X8, W9, 0x4, SXTW
	0x03DF4F3C ADD X0, X8, 0x138
	0x03DF4F40 LDP X8, X1, [X0]
	0x03DF4F44 MOV X0, X19
	0x03DF4F48 BLR X8
	0x03DF4F4C ADD X0, X31, 0x0
	0x03DF4F50 MOV X1, X31
	0x03DF4F54 BL 0x3D5ACCC
	0x03DF4F58 B 0x3DF4C10
	0x03DF4F5C LDR X8, [X19]
	0x03DF4F60 LDR X1, [X23]
	0x03DF4F64 LDRH W9, [X8 + 0x12E]
	0x03DF4F68 CBZ X9, 0x3DF4F8C
	0x03DF4F6C LDR X10, [X8 + 0xB0]
	0x03DF4F70 ADD X10, X10, 0x8
	0x03DF4F74 LDUR X11, [X10 - 0x8]
	0x03DF4F78 CMP X11, X1
	0x03DF4F7C B.EQ 0x3DF5520
	0x03DF4F80 SUBS X9, X9, 0x1
	0x03DF4F84 ADD X10, X10, 0x10
	0x03DF4F88 B.NE 0x3DF4F74
	0x03DF4F8C MOVZ W2, 0x1F
	0x03DF4F90 MOV X0, X19
	0x03DF4F94 BL 0x1C5C788
	0x03DF4F98 B 0x3DF5530
	0x03DF4F9C LDR X8, [X19]
	0x03DF4FA0 LDR X1, [X23]
	0x03DF4FA4 LDRH W9, [X8 + 0x12E]
	0x03DF4FA8 CBZ X9, 0x3DF4FCC
	0x03DF4FAC LDR X10, [X8 + 0xB0]
	0x03DF4FB0 ADD X10, X10, 0x8
	0x03DF4FB4 LDUR X11, [X10 - 0x8]
	0x03DF4FB8 CMP X11, X1
	0x03DF4FBC B.EQ 0x3DF554C
	0x03DF4FC0 SUBS X9, X9, 0x1
	0x03DF4FC4 ADD X10, X10, 0x10
	0x03DF4FC8 B.NE 0x3DF4FB4
	0x03DF4FCC MOVZ W2, 0x1D
	0x03DF4FD0 MOV X0, X19
	0x03DF4FD4 BL 0x1C5C788
	0x03DF4FD8 B 0x3DF555C
	0x03DF4FDC LDR X8, [X19]
	0x03DF4FE0 LDR X1, [X23]
	0x03DF4FE4 LDRH W9, [X8 + 0x12E]
	0x03DF4FE8 CBZ X9, 0x3DF500C
	0x03DF4FEC LDR X10, [X8 + 0xB0]
	0x03DF4FF0 ADD X10, X10, 0x8
	0x03DF4FF4 LDUR X11, [X10 - 0x8]
	0x03DF4FF8 CMP X11, X1
	0x03DF4FFC B.EQ 0x3DF5578
	0x03DF5000 SUBS X9, X9, 0x1
	0x03DF5004 ADD X10, X10, 0x10
	0x03DF5008 B.NE 0x3DF4FF4
	0x03DF500C MOVZ W2, 0x17
	0x03DF5010 MOV X0, X19
	0x03DF5014 BL 0x1C5C788
	0x03DF5018 B 0x3DF5588
	0x03DF501C LDR X8, [X19]
	0x03DF5020 LDR X1, [X23]
	0x03DF5024 LDRH W9, [X8 + 0x12E]
	0x03DF5028 CBZ X9, 0x3DF504C
	0x03DF502C LDR X10, [X8 + 0xB0]
	0x03DF5030 ADD X10, X10, 0x8
	0x03DF5034 LDUR X11, [X10 - 0x8]
	0x03DF5038 CMP X11, X1
	0x03DF503C B.EQ 0x3DF55A4
	0x03DF5040 SUBS X9, X9, 0x1
	0x03DF5044 ADD X10, X10, 0x10
	0x03DF5048 B.NE 0x3DF5034
	0x03DF504C MOVZ W2, 0xD
	0x03DF5050 MOV X0, X19
	0x03DF5054 BL 0x1C5C788
	0x03DF5058 B 0x3DF55B4
	0x03DF505C LDR X8, [X19]
	0x03DF5060 LDR X1, [X23]
	0x03DF5064 LDRH W9, [X8 + 0x12E]
	0x03DF5068 CBZ X9, 0x3DF508C
	0x03DF506C LDR X10, [X8 + 0xB0]
	0x03DF5070 ADD X10, X10, 0x8
	0x03DF5074 LDUR X11, [X10 - 0x8]
	0x03DF5078 CMP X11, X1
	0x03DF507C B.EQ 0x3DF55D0
	0x03DF5080 SUBS X9, X9, 0x1
	0x03DF5084 ADD X10, X10, 0x10
	0x03DF5088 B.NE 0x3DF5074
	0x03DF508C MOVZ W2, 0x18
	0x03DF5090 MOV X0, X19
	0x03DF5094 BL 0x1C5C788
	0x03DF5098 B 0x3DF55E0
	0x03DF509C LDR X8, [X19]
	0x03DF50A0 LDR X1, [X23]
	0x03DF50A4 LDRH W9, [X8 + 0x12E]
	0x03DF50A8 CBZ X9, 0x3DF50CC
	0x03DF50AC LDR X10, [X8 + 0xB0]
	0x03DF50B0 ADD X10, X10, 0x8
	0x03DF50B4 LDUR X11, [X10 - 0x8]
	0x03DF50B8 CMP X11, X1
	0x03DF50BC B.EQ 0x3DF55FC
	0x03DF50C0 SUBS X9, X9, 0x1
	0x03DF50C4 ADD X10, X10, 0x10
	0x03DF50C8 B.NE 0x3DF50B4
	0x03DF50CC MOVZ W2, 0x15
	0x03DF50D0 MOV X0, X19
	0x03DF50D4 BL 0x1C5C788
	0x03DF50D8 B 0x3DF560C
	0x03DF50DC LDR X8, [X19]
	0x03DF50E0 LDR X1, [X23]
	0x03DF50E4 LDRH W9, [X8 + 0x12E]
	0x03DF50E8 CBZ X9, 0x3DF510C
	0x03DF50EC LDR X10, [X8 + 0xB0]
	0x03DF50F0 ADD X10, X10, 0x8
	0x03DF50F4 LDUR X11, [X10 - 0x8]
	0x03DF50F8 CMP X11, X1
	0x03DF50FC B.EQ 0x3DF5628
	0x03DF5100 SUBS X9, X9, 0x1
	0x03DF5104 ADD X10, X10, 0x10
	0x03DF5108 B.NE 0x3DF50F4
	0x03DF510C MOVZ W2, 0x8
	0x03DF5110 MOV X0, X19
	0x03DF5114 BL 0x1C5C788
	0x03DF5118 B 0x3DF5638
	0x03DF511C LDR X8, [X19]
	0x03DF5120 LDR X1, [X23]
	0x03DF5124 LDRH W9, [X8 + 0x12E]
	0x03DF5128 CBZ X9, 0x3DF514C
	0x03DF512C LDR X10, [X8 + 0xB0]
	0x03DF5130 ADD X10, X10, 0x8
	0x03DF5134 LDUR X11, [X10 - 0x8]
	0x03DF5138 CMP X11, X1
	0x03DF513C B.EQ 0x3DF5654
	0x03DF5140 SUBS X9, X9, 0x1
	0x03DF5144 ADD X10, X10, 0x10
	0x03DF5148 B.NE 0x3DF5134
	0x03DF514C MOVZ W2, 0x1E
	0x03DF5150 MOV X0, X19
	0x03DF5154 BL 0x1C5C788
	0x03DF5158 B 0x3DF5664
	0x03DF515C LDR X8, [X19]
	0x03DF5160 LDR X1, [X23]
	0x03DF5164 LDRH W9, [X8 + 0x12E]
	0x03DF5168 CBZ X9, 0x3DF518C
	0x03DF516C LDR X10, [X8 + 0xB0]
	0x03DF5170 ADD X10, X10, 0x8
	0x03DF5174 LDUR X11, [X10 - 0x8]
	0x03DF5178 CMP X11, X1
	0x03DF517C B.EQ 0x3DF5680
	0x03DF5180 SUBS X9, X9, 0x1
	0x03DF5184 ADD X10, X10, 0x10
	0x03DF5188 B.NE 0x3DF5174
	0x03DF518C MOVZ W2, 0xC
	0x03DF5190 MOV X0, X19
	0x03DF5194 BL 0x1C5C788
	0x03DF5198 B 0x3DF5690
	0x03DF519C LDR X8, [X19]
	0x03DF51A0 LDR X1, [X23]
	0x03DF51A4 LDRH W9, [X8 + 0x12E]
	0x03DF51A8 CBZ X9, 0x3DF51CC
	0x03DF51AC LDR X10, [X8 + 0xB0]
	0x03DF51B0 ADD X10, X10, 0x8
	0x03DF51B4 LDUR X11, [X10 - 0x8]
	0x03DF51B8 CMP X11, X1
	0x03DF51BC B.EQ 0x3DF56AC
	0x03DF51C0 SUBS X9, X9, 0x1
	0x03DF51C4 ADD X10, X10, 0x10
	0x03DF51C8 B.NE 0x3DF51B4
	0x03DF51CC MOVZ W2, 0x13
	0x03DF51D0 MOV X0, X19
	0x03DF51D4 BL 0x1C5C788
	0x03DF51D8 B 0x3DF56BC
	0x03DF51DC LDR X8, [X19]
	0x03DF51E0 LDR X1, [X23]
	0x03DF51E4 LDRH W9, [X8 + 0x12E]
	0x03DF51E8 CBZ X9, 0x3DF520C
	0x03DF51EC LDR X10, [X8 + 0xB0]
	0x03DF51F0 ADD X10, X10, 0x8
	0x03DF51F4 LDUR X11, [X10 - 0x8]
	0x03DF51F8 CMP X11, X1
	0x03DF51FC B.EQ 0x3DF5704
	0x03DF5200 SUBS X9, X9, 0x1
	0x03DF5204 ADD X10, X10, 0x10
	0x03DF5208 B.NE 0x3DF51F4
	0x03DF520C MOVZ W2, 0x6
	0x03DF5210 MOV X0, X19
	0x03DF5214 BL 0x1C5C788
	0x03DF5218 B 0x3DF5714
	0x03DF521C LDR X8, [X19]
	0x03DF5220 LDR X1, [X23]
	0x03DF5224 LDRH W9, [X8 + 0x12E]
	0x03DF5228 CBZ X9, 0x3DF524C
	0x03DF522C LDR X10, [X8 + 0xB0]
	0x03DF5230 ADD X10, X10, 0x8
	0x03DF5234 LDUR X11, [X10 - 0x8]
	0x03DF5238 CMP X11, X1
	0x03DF523C B.EQ 0x3DF5730
	0x03DF5240 SUBS X9, X9, 0x1
	0x03DF5244 ADD X10, X10, 0x10
	0x03DF5248 B.NE 0x3DF5234
	0x03DF524C MOVZ W2, 0x20
	0x03DF5250 MOV X0, X19
	0x03DF5254 BL 0x1C5C788
	0x03DF5258 B 0x3DF5740
	0x03DF525C LDR X8, [X19]
	0x03DF5260 LDR X1, [X23]
	0x03DF5264 LDRH W9, [X8 + 0x12E]
	0x03DF5268 CBZ X9, 0x3DF528C
	0x03DF526C LDR X10, [X8 + 0xB0]
	0x03DF5270 ADD X10, X10, 0x8
	0x03DF5274 LDUR X11, [X10 - 0x8]
	0x03DF5278 CMP X11, X1
	0x03DF527C B.EQ 0x3DF575C
	0x03DF5280 SUBS X9, X9, 0x1
	0x03DF5284 ADD X10, X10, 0x10
	0x03DF5288 B.NE 0x3DF5274
	0x03DF528C MOVZ W2, 0x11
	0x03DF5290 MOV X0, X19
	0x03DF5294 BL 0x1C5C788
	0x03DF5298 B 0x3DF576C
	0x03DF529C LDR X8, [X19]
	0x03DF52A0 LDR X1, [X23]
	0x03DF52A4 LDRH W9, [X8 + 0x12E]
	0x03DF52A8 CBZ X9, 0x3DF52CC
	0x03DF52AC LDR X10, [X8 + 0xB0]
	0x03DF52B0 ADD X10, X10, 0x8
	0x03DF52B4 LDUR X11, [X10 - 0x8]
	0x03DF52B8 CMP X11, X1
	0x03DF52BC B.EQ 0x3DF5788
	0x03DF52C0 SUBS X9, X9, 0x1
	0x03DF52C4 ADD X10, X10, 0x10
	0x03DF52C8 B.NE 0x3DF52B4
	0x03DF52CC MOVZ W2, 0x1C
	0x03DF52D0 MOV X0, X19
	0x03DF52D4 BL 0x1C5C788
	0x03DF52D8 B 0x3DF5798
	0x03DF52DC LDR X8, [X19]
	0x03DF52E0 LDR X1, [X23]
	0x03DF52E4 LDRH W9, [X8 + 0x12E]
	0x03DF52E8 CBZ X9, 0x3DF530C
	0x03DF52EC LDR X10, [X8 + 0xB0]
	0x03DF52F0 ADD X10, X10, 0x8
	0x03DF52F4 LDUR X11, [X10 - 0x8]
	0x03DF52F8 CMP X11, X1
	0x03DF52FC B.EQ 0x3DF57B4
	0x03DF5300 SUBS X9, X9, 0x1
	0x03DF5304 ADD X10, X10, 0x10
	0x03DF5308 B.NE 0x3DF52F4
	0x03DF530C MOVZ W2, 0x12
	0x03DF5310 MOV X0, X19
	0x03DF5314 BL 0x1C5C788
	0x03DF5318 B 0x3DF57C4
	0x03DF531C LDR X8, [X19]
	0x03DF5320 LDR X1, [X23]
	0x03DF5324 LDRH W9, [X8 + 0x12E]
	0x03DF5328 CBZ X9, 0x3DF534C
	0x03DF532C LDR X10, [X8 + 0xB0]
	0x03DF5330 ADD X10, X10, 0x8
	0x03DF5334 LDUR X11, [X10 - 0x8]
	0x03DF5338 CMP X11, X1
	0x03DF533C B.EQ 0x3DF57E0
	0x03DF5340 SUBS X9, X9, 0x1
	0x03DF5344 ADD X10, X10, 0x10
	0x03DF5348 B.NE 0x3DF5334
	0x03DF534C MOVZ W2, 0x22
	0x03DF5350 MOV X0, X19
	0x03DF5354 BL 0x1C5C788
	0x03DF5358 B 0x3DF57F0
	0x03DF535C LDR X8, [X19]
	0x03DF5360 LDR X1, [X23]
	0x03DF5364 LDRH W9, [X8 + 0x12E]
	0x03DF5368 CBZ X9, 0x3DF538C
	0x03DF536C LDR X10, [X8 + 0xB0]
	0x03DF5370 ADD X10, X10, 0x8
	0x03DF5374 LDUR X11, [X10 - 0x8]
	0x03DF5378 CMP X11, X1
	0x03DF537C B.EQ 0x3DF580C
	0x03DF5380 SUBS X9, X9, 0x1
	0x03DF5384 ADD X10, X10, 0x10
	0x03DF5388 B.NE 0x3DF5374
	0x03DF538C MOVZ W2, 0x16
	0x03DF5390 MOV X0, X19
	0x03DF5394 BL 0x1C5C788
	0x03DF5398 B 0x3DF581C
	0x03DF539C LDR X8, [X19]
	0x03DF53A0 LDR X1, [X23]
	0x03DF53A4 LDRH W9, [X8 + 0x12E]
	0x03DF53A8 CBZ X9, 0x3DF53CC
	0x03DF53AC LDR X10, [X8 + 0xB0]
	0x03DF53B0 ADD X10, X10, 0x8
	0x03DF53B4 LDUR X11, [X10 - 0x8]
	0x03DF53B8 CMP X11, X1
	0x03DF53BC B.EQ 0x3DF5838
	0x03DF53C0 SUBS X9, X9, 0x1
	0x03DF53C4 ADD X10, X10, 0x10
	0x03DF53C8 B.NE 0x3DF53B4
	0x03DF53CC MOVZ W2, 0x14
	0x03DF53D0 MOV X0, X19
	0x03DF53D4 BL 0x1C5C788
	0x03DF53D8 B 0x3DF5848
	0x03DF53DC LDR X8, [X19]
	0x03DF53E0 LDR X1, [X23]
	0x03DF53E4 LDRH W9, [X8 + 0x12E]
	0x03DF53E8 CBZ X9, 0x3DF540C
	0x03DF53EC LDR X10, [X8 + 0xB0]
	0x03DF53F0 ADD X10, X10, 0x8
	0x03DF53F4 LDUR X11, [X10 - 0x8]
	0x03DF53F8 CMP X11, X1
	0x03DF53FC B.EQ 0x3DF5864
	0x03DF5400 SUBS X9, X9, 0x1
	0x03DF5404 ADD X10, X10, 0x10
	0x03DF5408 B.NE 0x3DF53F4
	0x03DF540C MOVZ W2, 0x2C
	0x03DF5410 MOV X0, X19
	0x03DF5414 BL 0x1C5C788
	0x03DF5418 B 0x3DF5874
	0x03DF541C LDR W9, [X10]
	0x03DF5420 ADD W9, W9, 0xB
	0x03DF5424 ADD X8, X8, W9, 0x4, SXTW
	0x03DF5428 ADD X0, X8, 0x138
	0x03DF542C LDP X8, X1, [X0]
	0x03DF5430 MOV X0, X19
	0x03DF5434 BLR X8
	0x03DF5438 ADD X0, X31, 0x0
	0x03DF543C MOV X1, X31
	0x03DF5440 BL 0x3D5AE1C
	0x03DF5444 B 0x3DF4C10
	0x03DF5448 LDR W9, [X10]
	0x03DF544C ADD W9, W9, 0x3
	0x03DF5450 ADD X8, X8, W9, 0x4, SXTW
	0x03DF5454 ADD X0, X8, 0x138
	0x03DF5458 LDP X8, X1, [X0]
	0x03DF545C MOV X0, X19
	0x03DF5460 BLR X8
	0x03DF5464 ADD X0, X31, 0x0
	0x03DF5468 MOV X1, X31
	0x03DF546C BL 0x3D5AE30
	0x03DF5470 B 0x3DF4C10
	0x03DF5474 LDR W9, [X10]
	0x03DF5478 ADD W9, W9, 0xA
	0x03DF547C ADD X8, X8, W9, 0x4, SXTW
	0x03DF5480 ADD X0, X8, 0x138
	0x03DF5484 LDP X8, X1, [X0]
	0x03DF5488 MOV X0, X19
	0x03DF548C BLR X8
	0x03DF5490 ADD X0, X31, 0x0
	0x03DF5494 MOV X1, X31
	0x03DF5498 BL 0x3D5AE10
	0x03DF549C B 0x3DF4C10
	0x03DF54A0 LDRSW X9, [X10]
	0x03DF54A4 ADD X8, X8, X9, 0x4, LSL
	0x03DF54A8 ADD X0, X8, 0x138
	0x03DF54AC LDP X8, X1, [X0]
	0x03DF54B0 MOV X0, X19
	0x03DF54B4 BLR X8
	0x03DF54B8 ADD X0, X31, 0x0
	0x03DF54BC MOV X1, X31
	0x03DF54C0 BL 0x3D5ACC4
	0x03DF54C4 B 0x3DF4C10
	0x03DF54C8 LDR W9, [X10]
	0x03DF54CC ADD W9, W9, 0x2
	0x03DF54D0 ADD X8, X8, W9, 0x4, SXTW
	0x03DF54D4 ADD X0, X8, 0x138
	0x03DF54D8 LDP X8, X1, [X0]
	0x03DF54DC MOV X0, X19
	0x03DF54E0 BLR X8
	0x03DF54E4 ADD X0, X31, 0x0
	0x03DF54E8 MOV X1, X31
	0x03DF54EC BL 0x3D5AE28
	0x03DF54F0 B 0x3DF4C10
	0x03DF54F4 LDR W9, [X10]
	0x03DF54F8 ADD W9, W9, 0x1B
	0x03DF54FC ADD X8, X8, W9, 0x4, SXTW
	0x03DF5500 ADD X0, X8, 0x138
	0x03DF5504 LDP X8, X1, [X0]
	0x03DF5508 MOV X0, X19
	0x03DF550C BLR X8
	0x03DF5510 ADD X0, X31, 0x0
	0x03DF5514 MOV X1, X31
	0x03DF5518 BL 0x3D5AE3C
	0x03DF551C B 0x3DF4C10
	0x03DF5520 LDR W9, [X10]
	0x03DF5524 ADD W9, W9, 0x1F
	0x03DF5528 ADD X8, X8, W9, 0x4, SXTW
	0x03DF552C ADD X0, X8, 0x138
	0x03DF5530 LDP X8, X1, [X0]
	0x03DF5534 MOV X0, X19
	0x03DF5538 BLR X8
	0x03DF553C ADD X0, X31, 0x0
	0x03DF5540 MOV X1, X31
	0x03DF5544 BL 0x3D5ADBC
	0x03DF5548 B 0x3DF4C10
	0x03DF554C LDR W9, [X10]
	0x03DF5550 ADD W9, W9, 0x1D
	0x03DF5554 ADD X8, X8, W9, 0x4, SXTW
	0x03DF5558 ADD X0, X8, 0x138
	0x03DF555C LDP X8, X1, [X0]
	0x03DF5560 MOV X0, X19
	0x03DF5564 BLR X8
	0x03DF5568 ADD X0, X31, 0x0
	0x03DF556C MOV X1, X31
	0x03DF5570 BL 0x3D5AD14
	0x03DF5574 B 0x3DF4C10
	0x03DF5578 LDR W9, [X10]
	0x03DF557C ADD W9, W9, 0x17
	0x03DF5580 ADD X8, X8, W9, 0x4, SXTW
	0x03DF5584 ADD X0, X8, 0x138
	0x03DF5588 LDP X8, X1, [X0]
	0x03DF558C MOV X0, X19
	0x03DF5590 BLR X8
	0x03DF5594 ADD X0, X31, 0x0
	0x03DF5598 MOV X1, X31
	0x03DF559C BL 0x3D5ACFC
	0x03DF55A0 B 0x3DF4C10
	0x03DF55A4 LDR W9, [X10]
	0x03DF55A8 ADD W9, W9, 0xD
	0x03DF55AC ADD X8, X8, W9, 0x4, SXTW
	0x03DF55B0 ADD X0, X8, 0x138
	0x03DF55B4 LDP X8, X1, [X0]
	0x03DF55B8 MOV X0, X19
	0x03DF55BC BLR X8
	0x03DF55C0 ADD X0, X31, 0x0
	0x03DF55C4 MOV X1, X31
	0x03DF55C8 BL 0x3D5AC2C
	0x03DF55CC B 0x3DF4C10
	0x03DF55D0 LDR W9, [X10]
	0x03DF55D4 ADD W9, W9, 0x18
	0x03DF55D8 ADD X8, X8, W9, 0x4, SXTW
	0x03DF55DC ADD X0, X8, 0x138
	0x03DF55E0 LDP X8, X1, [X0]
	0x03DF55E4 MOV X0, X19
	0x03DF55E8 BLR X8
	0x03DF55EC ADD X0, X31, 0x0
	0x03DF55F0 MOV X1, X31
	0x03DF55F4 BL 0x3D5ACF0
	0x03DF55F8 B 0x3DF4C10
	0x03DF55FC LDR W9, [X10]
	0x03DF5600 ADD W9, W9, 0x15
	0x03DF5604 ADD X8, X8, W9, 0x4, SXTW
	0x03DF5608 ADD X0, X8, 0x138
	0x03DF560C LDP X8, X1, [X0]
	0x03DF5610 MOV X0, X19
	0x03DF5614 BLR X8
	0x03DF5618 ADD X0, X31, 0x0
	0x03DF561C MOV X1, X31
	0x03DF5620 BL 0x3D5AD08
	0x03DF5624 B 0x3DF4C10
	0x03DF5628 LDR W9, [X10]
	0x03DF562C ADD W9, W9, 0x8
	0x03DF5630 ADD X8, X8, W9, 0x4, SXTW
	0x03DF5634 ADD X0, X8, 0x138
	0x03DF5638 LDP X8, X1, [X0]
	0x03DF563C MOV X0, X19
	0x03DF5640 BLR X8
	0x03DF5644 ADD X0, X31, 0x0
	0x03DF5648 MOV X1, X31
	0x03DF564C BL 0x3D5ADEC
	0x03DF5650 B 0x3DF4C10
	0x03DF5654 LDR W9, [X10]
	0x03DF5658 ADD W9, W9, 0x1E
	0x03DF565C ADD X8, X8, W9, 0x4, SXTW
	0x03DF5660 ADD X0, X8, 0x138
	0x03DF5664 LDP X8, X1, [X0]
	0x03DF5668 MOV X0, X19
	0x03DF566C BLR X8
	0x03DF5670 ADD X0, X31, 0x0
	0x03DF5674 MOV X1, X31
	0x03DF5678 BL 0x3D5ADC8
	0x03DF567C B 0x3DF4C10
	0x03DF5680 LDR W9, [X10]
	0x03DF5684 ADD W9, W9, 0xC
	0x03DF5688 ADD X8, X8, W9, 0x4, SXTW
	0x03DF568C ADD X0, X8, 0x138
	0x03DF5690 LDP X8, X1, [X0]
	0x03DF5694 MOV X0, X19
	0x03DF5698 BLR X8
	0x03DF569C ADD X0, X31, 0x0
	0x03DF56A0 MOV X1, X31
	0x03DF56A4 BL 0x3D5ADF8
	0x03DF56A8 B 0x3DF4C10
	0x03DF56AC LDR W9, [X10]
	0x03DF56B0 ADD W9, W9, 0x13
	0x03DF56B4 ADD X8, X8, W9, 0x4, SXTW
	0x03DF56B8 ADD X0, X8, 0x138
	0x03DF56BC LDP X8, X1, [X0]
	0x03DF56C0 MOV X0, X19
	0x03DF56C4 BLR X8
	0x03DF56C8 ADD X0, X31, 0x0
	0x03DF56CC MOV X1, X31
	0x03DF56D0 BL 0x3D5AC14
	0x03DF56D4 B 0x3DF4C10
	0x03DF56D8 LDR W9, [X10]
	0x03DF56DC ADD W9, W9, 0x4
	0x03DF56E0 ADD X8, X8, W9, 0x4, SXTW
	0x03DF56E4 ADD X0, X8, 0x138
	0x03DF56E8 LDP X8, X1, [X0]
	0x03DF56EC MOV X0, X19
	0x03DF56F0 BLR X8
	0x03DF56F4 ADD X0, X31, 0x0
	0x03DF56F8 MOV X1, X31
	0x03DF56FC BL 0x3D5AE04
	0x03DF5700 B 0x3DF4C10
	0x03DF5704 LDR W9, [X10]
	0x03DF5708 ADD W9, W9, 0x6
	0x03DF570C ADD X8, X8, W9, 0x4, SXTW
	0x03DF5710 ADD X0, X8, 0x138
	0x03DF5714 LDP X8, X1, [X0]
	0x03DF5718 MOV X0, X19
	0x03DF571C BLR X8
	0x03DF5720 ADD X0, X31, 0x0
	0x03DF5724 MOV X1, X31
	0x03DF5728 BL 0x3D5ADE0
	0x03DF572C B 0x3DF4C10
	0x03DF5730 LDR W9, [X10]
	0x03DF5734 ADD W9, W9, 0x20
	0x03DF5738 ADD X8, X8, W9, 0x4, SXTW
	0x03DF573C ADD X0, X8, 0x138
	0x03DF5740 LDP X8, X1, [X0]
	0x03DF5744 MOV X0, X19
	0x03DF5748 BLR X8
	0x03DF574C ADD X0, X31, 0x0
	0x03DF5750 MOV X1, X31
	0x03DF5754 BL 0x3D5AC20
	0x03DF5758 B 0x3DF4C10
	0x03DF575C LDR W9, [X10]
	0x03DF5760 ADD W9, W9, 0x11
	0x03DF5764 ADD X8, X8, W9, 0x4, SXTW
	0x03DF5768 ADD X0, X8, 0x138
	0x03DF576C LDP X8, X1, [X0]
	0x03DF5770 MOV X0, X19
	0x03DF5774 BLR X8
	0x03DF5778 ADD X0, X31, 0x0
	0x03DF577C MOV X1, X31
	0x03DF5780 BL 0x3D5AE48
	0x03DF5784 B 0x3DF4C10
	0x03DF5788 LDR W9, [X10]
	0x03DF578C ADD W9, W9, 0x1C
	0x03DF5790 ADD X8, X8, W9, 0x4, SXTW
	0x03DF5794 ADD X0, X8, 0x138
	0x03DF5798 LDP X8, X1, [X0]
	0x03DF579C MOV X0, X19
	0x03DF57A0 BLR X8
	0x03DF57A4 ADD X0, X31, 0x0
	0x03DF57A8 MOV X1, X31
	0x03DF57AC BL 0x3D5ADD4
	0x03DF57B0 B 0x3DF4C10
	0x03DF57B4 LDR W9, [X10]
	0x03DF57B8 ADD W9, W9, 0x12
	0x03DF57BC ADD X8, X8, W9, 0x4, SXTW
	0x03DF57C0 ADD X0, X8, 0x138
	0x03DF57C4 LDP X8, X1, [X0]
	0x03DF57C8 MOV X0, X19
	0x03DF57CC BLR X8
	0x03DF57D0 ADD X0, X31, 0x0
	0x03DF57D4 MOV X1, X31
	0x03DF57D8 BL 0x3D5AE54
	0x03DF57DC B 0x3DF4C10
	0x03DF57E0 LDR W9, [X10]
	0x03DF57E4 ADD W9, W9, 0x22
	0x03DF57E8 ADD X8, X8, W9, 0x4, SXTW
	0x03DF57EC ADD X0, X8, 0x138
	0x03DF57F0 LDP X8, X1, [X0]
	0x03DF57F4 MOV X0, X19
	0x03DF57F8 BLR X8
	0x03DF57FC ADD X0, X31, 0x0
	0x03DF5800 MOV X1, X31
	0x03DF5804 BL 0x3D5AB6C
	0x03DF5808 B 0x3DF4C10
	0x03DF580C LDR W9, [X10]
	0x03DF5810 ADD W9, W9, 0x16
	0x03DF5814 ADD X8, X8, W9, 0x4, SXTW
	0x03DF5818 ADD X0, X8, 0x138
	0x03DF581C LDP X8, X1, [X0]
	0x03DF5820 MOV X0, X19
	0x03DF5824 BLR X8
	0x03DF5828 ADD X0, X31, 0x0
	0x03DF582C MOV X1, X31
	0x03DF5830 BL 0x3D5ACE4
	0x03DF5834 B 0x3DF4C10
	0x03DF5838 LDR W9, [X10]
	0x03DF583C ADD W9, W9, 0x14
	0x03DF5840 ADD X8, X8, W9, 0x4, SXTW
	0x03DF5844 ADD X0, X8, 0x138
	0x03DF5848 LDP X8, X1, [X0]
	0x03DF584C MOV X0, X19
	0x03DF5850 BLR X8
	0x03DF5854 ADD X0, X31, 0x0
	0x03DF5858 MOV X1, X31
	0x03DF585C BL 0x3D5ABFC
	0x03DF5860 B 0x3DF4C10
	0x03DF5864 LDR W9, [X10]
	0x03DF5868 ADD W9, W9, 0x2C
	0x03DF586C ADD X8, X8, W9, 0x4, SXTW
	0x03DF5870 ADD X0, X8, 0x138
	0x03DF5874 LDP X8, X1, [X0]
	0x03DF5878 MOV X0, X19
	0x03DF587C BLR X8
	0x03DF5880 ADD X0, X31, 0x0
	0x03DF5884 MOV X1, X31
	0x03DF5888 BL 0x3D5AC08
	0x03DF588C B 0x3DF4C10
	0x03DF5890 LDR W9, [X10]
	0x03DF5894 ADD W9, W9, 0xE
	0x03DF5898 ADD X8, X8, W9, 0x4, SXTW
	0x03DF589C ADD X0, X8, 0x138
	0x03DF58A0 LDP X8, X1, [X0]
	0x03DF58A4 MOV X0, X19
	0x03DF58A8 BLR X8
	0x03DF58AC ADD X0, X31, 0x0
	0x03DF58B0 MOV X1, X31
	0x03DF58B4 BL 0x3D5AC38
	0x03DF58B8 B 0x3DF4C10
	0x03DF58BC LDR X1, [X20]
	0x03DF58C0 ADD X0, X31, 0x30
	0x03DF58C4 BL 0x2BCB408
	0x03DF58C8 LDR X0, [X31]
	0x03DF58CC LDR X8, [X21 + 0x28]
	0x03DF58D0 LDR X9, [X31 + 0x58]
	0x03DF58D4 CMP X8, X9
	0x03DF58D8 B.NE 0x3DF5900
	0x03DF58DC LDP X20, X19, [X31 + 0xB0]
	0x03DF58E0 LDP X22, X21, [X31 + 0xA0]
	0x03DF58E4 LDP X24, X23, [X31 + 0x90]
	0x03DF58E8 LDP X26, X25, [X31 + 0x80]
	0x03DF58EC LDP X28, X27, [X31 + 0x70]
	0x03DF58F0 LDP X29, X30, [X31 + 0x60]
	0x03DF58F4 ADD X31, X31, 0xC0
	0x03DF58F8 RET
	0x03DF58FC BL 0x1C16F20
	0x03DF5900 BL 0x3EB1B20
	0x03DF5904 B 0x3DF5988
	0x03DF5908 B 0x3DF5988
	0x03DF590C B 0x3DF5988
	0x03DF5910 B 0x3DF5988
	0x03DF5914 B 0x3DF5988
	0x03DF5918 B 0x3DF5988
	0x03DF591C B 0x3DF5988
	0x03DF5920 B 0x3DF5988
	0x03DF5924 B 0x3DF5988
	0x03DF5928 B 0x3DF5988
	0x03DF592C B 0x3DF5988
	0x03DF5930 B 0x3DF5988
	0x03DF5934 B 0x3DF5988
	0x03DF5938 B 0x3DF5988
	0x03DF593C B 0x3DF5988
	0x03DF5940 B 0x3DF5988
	0x03DF5944 B 0x3DF5988
	0x03DF5948 B 0x3DF5988
	0x03DF594C B 0x3DF5988
	0x03DF5950 B 0x3DF5988
	0x03DF5954 B 0x3DF5988
	0x03DF5958 B 0x3DF5988
	0x03DF595C B 0x3DF5988
	0x03DF5960 B 0x3DF5988
	0x03DF5964 B 0x3DF5988
	0x03DF5968 B 0x3DF5988
	0x03DF596C B 0x3DF5988
	0x03DF5970 B 0x3DF5988
	0x03DF5974 B 0x3DF5988
	0x03DF5978 B 0x3DF5988
	0x03DF597C B 0x3DF5988
	0x03DF5980 B 0x3DF5988
	0x03DF5984 B 0x3DF5988
	0x03DF5988 MOV X22, X20
	0x03DF598C MOV X19, X0
	0x03DF5990 CMP W1, 0x1
	0x03DF5994 B.NE 0x3DF59C0
	0x03DF5998 MOV X0, X19
	0x03DF599C BL 0x3EB1AD0
	0x03DF59A0 LDR X20, [X0]
	0x03DF59A4 BL 0x3EB1AE0
	0x03DF59A8 LDR X1, [X22]
	0x03DF59AC ADD X0, X31, 0x30
	0x03DF59B0 BL 0x2BCB408
	0x03DF59B4 CBZ X20, 0x3DF58C8
	0x03DF59B8 MOV X0, X20
	0x03DF59BC BL 0x1C16F18
	0x03DF59C0 MOV X20, X31
	0x03DF59C4 B 0x3DF59CC
	0x03DF59C8 MOV X19, X0
	0x03DF59CC LDR X1, [X22]
	0x03DF59D0 ADD X0, X31, 0x30
	0x03DF59D4 BL 0x2BCB408
	0x03DF59D8 CBNZ X20, 0x3DF59E4
	0x03DF59DC MOV X0, X19
	0x03DF59E0 BL 0x1D2C690
	0x03DF59E4 MOV X0, X20
	0x03DF59E8 BL 0x1C16F18
	0x03DF59EC BL 0x1990590
	0x03DF59F0 STR X30, [X31 - 0x40]!
	0x03DF59F4 STP X24, X23, [X31 + 0x10]
	0x03DF59F8 STP X22, X21, [X31 + 0x20]
	0x03DF59FC STP X20, X19, [X31 + 0x30]
	0x03DF5A00 ADRP X22, 0x5F3000
	0x03DF5A04 ADRP X23, 0x374000
	0x03DF5A08 LDRB W8, [X22 + 0x26B]
	0x03DF5A0C LDR X23, [X23 + 0xA00]
	0x03DF5A10 MOV W19, W2
	0x03DF5A14 MOV X21, X1
	0x03DF5A18 MOV X20, X0
	0x03DF5A1C TBNZ X8, 0x0, 0x3DF5A4C
	0x03DF5A20 ADRP X0, 0x374000
	0x03DF5A24 LDR X0, [X0 + 0xA08]
	0x03DF5A28 BL 0x1C16CF4
	0x03DF5A2C ADRP X0, 0x374000
	0x03DF5A30 LDR X0, [X0 + 0xA10]
	0x03DF5A34 BL 0x1C16CF4
	0x03DF5A38 ADRP X0, 0x374000
	0x03DF5A3C LDR X0, [X0 + 0xA00]
	0x03DF5A40 BL 0x1C16CF4
	0x03DF5A44 MOVZ W8, 0x1
	0x03DF5A48 STRB W8, [X22 + 0x26B]
	0x03DF5A4C LDR X0, [X23]
	0x03DF5A50 BL 0x1C16F10
	0x03DF5A54 MOV X1, X31
	0x03DF5A58 MOV X22, X0
	0x03DF5A5C BL 0x3DFAA88
	0x03DF5A60 CBZ X22, 0x3DF5ACC
	0x03DF5A64 ADRP X24, 0x374000
	0x03DF5A68 ADRP X23, 0x374000
	0x03DF5A6C LDR X24, [X24 + 0xA08]
	0x03DF5A70 LDR X23, [X23 + 0xA10]
	0x03DF5A74 MOV X0, X22
	0x03DF5A78 STR X21, [X0 + 0x18]!
	0x03DF5A7C STUR X20, [X0 - 0x8]
	0x03DF5A80 CBNZ X21, 0x3DF5A8C
	0x03DF5A84 MOV X1, X31
	0x03DF5A88 BL 0x3D5AD58
	0x03DF5A8C LDR X0, [X24]
	0x03DF5A90 BL 0x1C16F10
	0x03DF5A94 LDR X2, [X23]
	0x03DF5A98 MOV X1, X22
	0x03DF5A9C MOV X3, X31
	0x03DF5AA0 MOV X21, X0
	0x03DF5AA4 BL 0x2D30BF0
	0x03DF5AA8 LDR X2, [X22 + 0x18]
	0x03DF5AAC MOV X0, X20
	0x03DF5AB0 MOV X1, X21
	0x03DF5AB4 MOV W3, W19
	0x03DF5AB8 LDP X20, X19, [X31 + 0x30]
	0x03DF5ABC LDP X22, X21, [X31 + 0x20]
	0x03DF5AC0 LDP X24, X23, [X31 + 0x10]
	0x03DF5AC4 LDR X30, [X31], #0x40
	0x03DF5AC8 B 0x3DF5AD0
	0x03DF5ACC BL 0x1C16F20
	0x03DF5AD0 STR X30, [X31 - 0x60]!
	0x03DF5AD4 STP X28, X27, [X31 + 0x10]
	0x03DF5AD8 STP X26, X25, [X31 + 0x20]
	0x03DF5ADC STP X24, X23, [X31 + 0x30]
	0x03DF5AE0 STP X22, X21, [X31 + 0x40]
	0x03DF5AE4 STP X20, X19, [X31 + 0x50]
	0x03DF5AE8 ADRP X26, 0x5F3000
	0x03DF5AEC ADRP X25, 0x374000
	0x03DF5AF0 ADRP X23, 0x371000
	0x03DF5AF4 ADRP X24, 0x374000
	0x03DF5AF8 LDRB W8, [X26 + 0x26C]
	0x03DF5AFC LDR X25, [X25 + 0xA18]
	0x03DF5B00 LDR X23, [X23 + 0x4B8]

ISIL:
	001 Subtract X31, X31, 496
	002 Move [X31+368], D11
	003 Move [X31+376], D10
	004 Move [X31+384], D9
	005 Move [X31+392], D8
	006 Move [X31+400], X29
	007 Move [X31+408], X30
	008 Move [X31+416], X28
	009 Move [X31+424], X27
	010 Move [X31+432], X26
	011 Move [X31+440], X25
	012 Move [X31+448], X24
	013 Move [X31+456], X23
	014 Move [X31+464], X22
	015 Move [X31+472], X21
	016 Move [X31+480], X20
	017 Move [X31+488], X19
	018 NotImplemented "Instruction MRS not yet implemented."
	019 Move X8, [X22+40]
	020 Move X21, 0x5F5000
	021 Move X20, X1
	022 Move X19, X0
	023 Move [X31+360], X8
	024 Move W8, [X21+617]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {46}
	029 Move X0, 0x373000
	030 Move X0, [X0+1160]
	031 Call 0x1C17CF4
	032 Move X0, 0x373000
	033 Move X0, [X0+1168]
	034 Call 0x1C17CF4
	035 Move X0, 0x373000
	036 Move X0, [X0+1176]
	037 Call 0x1C17CF4
	038 Move X0, 0x329000
	039 Move X0, [X0+296]
	040 Call 0x1C17CF4
	041 Move X0, 0x373000
	042 Move X0, [X0+1184]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+617], W8
	046 NotImplemented "Instruction MOVI not yet implemented."
	047 Move [X31+352], X31
	048 Move [X31+320], V0
	049 Move [X31+328], V0
	050 Compare X19, 0
	051 JumpIfEqual {1227}
	052 Move X0, X19
	053 Call VisualElement.get_style, X0
	054 Compare X20, 0
	055 JumpIfEqual {1205}
	056 Move X19, X0
	057 Move X0, [X20+16]
	058 Move [X31+8], X22
	059 Compare X0, 0
	060 JumpIfEqual {1227}
	061 Move X8, 0x373000
	062 Move X8, [X8+1184]
	063 Move X24, 0x373000
	064 Move X25, 0x329000
	065 Move X1, [X8]
	066 Move X24, [X24+1168]
	067 Move X25, [X25+296]
	068 Add X8, X31, 272
	069 Call List`1<StyleValue>.GetEnumerator, X0
	070 Move V0, [X31+272]
	071 Move V1, [X31+288]
	072 Move X8, [X31+304]
	073 Move W26, 32
	074 Move W27, 2
	075 Move X28, -52801536
	076 Move W29, 2
	077 Move X22, -52801536
	078 NotImplemented "Instruction MOVK not yet implemented."
	079 NotImplemented "Instruction MOVK not yet implemented."
	080 Add X28, X28, 1364
	081 NotImplemented "Instruction MOVK not yet implemented."
	082 Or W23, W31, 0xFFFDFFFD
	083 Add X22, X22, 1304
	084 Move [X31+320], V0
	085 Move [X31+328], V1
	086 Move [X31+352], X8
	087 Move X1, [X24]
	088 Add X0, X31, 320
	089 Call Enumerator<StyleValue>.MoveNext, X0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {1199}
	094 Move W8, [X31+336]
	095 Move V8, [X31+344]
	096 Move V11, [X31+348]
	097 Move V10, [X31+352]
	098 Move V9, [X31+356]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract W8, W8, 0x70000
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction ADR not yet implemented."
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Add X9, X9, X10
	106 CallNoReturn X9
	107 Add X8, X31, 272
	108 Move V0, V8
	109 Move V1, V11
	110 Move V2, V10
	111 Move V3, V9
	112 Move X0, X31
	113 Call StyleColor.op_Implicit, X0
	114 Move V0, [X31+17]
	115 Move W8, [X31+288]
	116 Move [X31+15], V0
	117 Move [X31+256], W8
	118 Compare X19, 0
	119 JumpIfEqual {1232}
	120 Move V0, [X31+15]
	121 Move W8, [X31+256]
	122 Move X1, [X25]
	123 Move [X31+11], V0
	124 Move [X31+192], W8
	125 Move X8, [X19]
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Compare X9, 0
	128 JumpIfEqual {135}
	129 Move X10, [X8+176]
	130 Add X10, X10, 8
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract X9, X9, 1
	134 Add X10, X10, 16
	135 Move X0, X19
	136 Move W2, W31
	137 Call 0x1C5D788
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Add W9, W8, W23
	140 NotImplemented "Instruction CMP not yet implemented."
	141 NotImplemented "Instruction ADR not yet implemented."
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Add X8, X8, X10
	144 CallNoReturn X8
	145 Move V0, V8
	146 Move X0, X31
	147 Call StyleFloat.op_Implicit, V0
	148 Compare X19, 0
	149 JumpIfEqual {1240}
	150 Move X8, [X19]
	151 Move X1, [X25]
	152 Move X20, X0
	153 NotImplemented "Instruction LDRH not yet implemented."
	154 Compare X9, 0
	155 JumpIfEqual {162}
	156 Move X10, [X8+176]
	157 Add X10, X10, 8
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Subtract X9, X9, 1
	161 Add X10, X10, 16
	162 Move W2, 5
	163 Move X0, X19
	164 Call 0x1C5D788
	165 NotImplemented "Instruction CMP not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Add X8, X31, 272
	168 Move V0, V8
	169 Move V1, V11
	170 Move V2, V10
	171 Move V3, V9
	172 Move X0, X31
	173 Call StyleColor.op_Implicit, X0
	174 Move V0, [X31+17]
	175 Move W8, [X31+288]
	176 Move [X31+15], V0
	177 Move [X31+256], W8
	178 Compare X19, 0
	179 JumpIfEqual {1228}
	180 Move V0, [X31+15]
	181 Move W8, [X31+256]
	182 Move X1, [X25]
	183 Move [X31+9], V0
	184 Move [X31+160], W8
	185 Move X8, [X19]
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move W2, 6
	196 Move X0, X19
	197 Call 0x1C5D788
	198 Add X8, X31, 272
	199 Move V0, V8
	200 Move V1, V11
	201 Move V2, V10
	202 Move V3, V9
	203 Move X0, X31
	204 Call StyleColor.op_Implicit, X0
	205 Move V0, [X31+17]
	206 Move W8, [X31+288]
	207 Move [X31+15], V0
	208 Move [X31+256], W8
	209 Compare X19, 0
	210 JumpIfEqual {1226}
	211 Move V0, [X31+15]
	212 Move W8, [X31+256]
	213 Move X1, [X25]
	214 Move [X31+13], V0
	215 Move [X31+224], W8
	216 Move X8, [X19]
	217 NotImplemented "Instruction LDRH not yet implemented."
	218 Compare X9, 0
	219 JumpIfEqual {226}
	220 Move X10, [X8+176]
	221 Add X10, X10, 8
	222 NotImplemented "Instruction LDUR not yet implemented."
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Subtract X9, X9, 1
	225 Add X10, X10, 16
	226 Move W2, 15
	227 Move X0, X19
	228 Call 0x1C5D788
	229 Add X8, X31, 272
	230 Move V0, V8
	231 Move V1, V11
	232 Move V2, V10
	233 Move V3, V9
	234 Move X0, X31
	235 Call StyleColor.op_Implicit, X0
	236 Move V0, [X31+17]
	237 Move W8, [X31+288]
	238 Move [X31+15], V0
	239 Move [X31+256], W8
	240 Compare X19, 0
	241 JumpIfEqual {1229}
	242 Move V0, [X31+15]
	243 Move W8, [X31+256]
	244 Move X1, [X25]
	245 Move [X31+1], V0
	246 Move [X31+32], W8
	247 Move X8, [X19]
	248 NotImplemented "Instruction LDRH not yet implemented."
	249 Compare X9, 0
	250 JumpIfEqual {257}
	251 Move X10, [X8+176]
	252 Add X10, X10, 8
	253 NotImplemented "Instruction LDUR not yet implemented."
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Subtract X9, X9, 1
	256 Add X10, X10, 16
	257 Move W2, 49
	258 Move X0, X19
	259 Call 0x1C5D788
	260 Move W9, [X10]
	261 Add W9, W9, 15
	262 Add X8, X8, W9
	263 Add X0, X8, 312
	264 Move V0, [X31+13]
	265 Move W8, [X31+224]
	266 Move X9, [X0]
	267 Move [X31+17], V0
	268 Move [X31+288], W8
	269 Move X2, [X0+8]
	270 Add X1, X31, 272
	271 Move X0, X19
	272 NotImplemented "Instruction BLR not yet implemented."
	273 Move V0, V8
	274 Move X0, X31
	275 Call StyleLength.op_Implicit, V0
	276 Compare X19, 0
	277 JumpIfEqual {1234}
	278 Move X8, [X19]
	279 Move X21, X1
	280 Move X1, [X25]
	281 Move X20, X0
	282 NotImplemented "Instruction LDRH not yet implemented."
	283 Compare X9, 0
	284 JumpIfEqual {291}
	285 Move X10, [X8+176]
	286 Add X10, X10, 8
	287 NotImplemented "Instruction LDUR not yet implemented."
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Subtract X9, X9, 1
	290 Add X10, X10, 16
	291 Move W2, 12
	292 Move X0, X19
	293 Call 0x1C5D788
	294 Move V0, V8
	295 Move X0, X31
	296 Call StyleLength.op_Implicit, V0
	297 Compare X19, 0
	298 JumpIfEqual {1233}
	299 Move X8, [X19]
	300 Move X21, X1
	301 Move X1, [X25]
	302 Move X20, X0
	303 NotImplemented "Instruction LDRH not yet implemented."
	304 Compare X9, 0
	305 JumpIfEqual {312}
	306 Move X10, [X8+176]
	307 Add X10, X10, 8
	308 NotImplemented "Instruction LDUR not yet implemented."
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Subtract X9, X9, 1
	311 Add X10, X10, 16
	312 Move W2, 4
	313 Move X0, X19
	314 Call 0x1C5D788
	315 Move V0, V8
	316 Move X0, X31
	317 Call StyleLength.op_Implicit, V0
	318 Compare X19, 0
	319 JumpIfEqual {1231}
	320 Move X8, [X19]
	321 Move X21, X1
	322 Move X1, [X25]
	323 Move X20, X0
	324 NotImplemented "Instruction LDRH not yet implemented."
	325 Compare X9, 0
	326 JumpIfEqual {333}
	327 Move X10, [X8+176]
	328 Add X10, X10, 8
	329 NotImplemented "Instruction LDUR not yet implemented."
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Subtract X9, X9, 1
	332 Add X10, X10, 16
	333 Move W2, 11
	334 Move X0, X19
	335 Call 0x1C5D788
	336 Move V0, V8
	337 Move X0, X31
	338 Call StyleLength.op_Implicit, V0
	339 Compare X19, 0
	340 JumpIfEqual {1235}
	341 Move X8, [X19]
	342 Move X21, X1
	343 Move X1, [X25]
	344 Move X20, X0
	345 NotImplemented "Instruction LDRH not yet implemented."
	346 Compare X9, 0
	347 JumpIfEqual {354}
	348 Move X10, [X8+176]
	349 Add X10, X10, 8
	350 NotImplemented "Instruction LDUR not yet implemented."
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Subtract X9, X9, 1
	353 Add X10, X10, 16
	354 Move W2, 3
	355 Move X0, X19
	356 Call 0x1C5D788
	357 Move V0, V8
	358 Move X0, X31
	359 Call StyleFloat.op_Implicit, V0
	360 Compare X19, 0
	361 JumpIfEqual {1230}
	362 Move X8, [X19]
	363 Move X1, [X25]
	364 Move X20, X0
	365 NotImplemented "Instruction LDRH not yet implemented."
	366 Compare X9, 0
	367 JumpIfEqual {374}
	368 Move X10, [X8+176]
	369 Add X10, X10, 8
	370 NotImplemented "Instruction LDUR not yet implemented."
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Subtract X9, X9, 1
	373 Add X10, X10, 16
	374 Move W2, 33
	375 Move X0, X19
	376 Call 0x1C5D788
	377 Move W9, [X10]
	378 Add W9, W9, 6
	379 Add X8, X8, W9
	380 Add X0, X8, 312
	381 Move V0, [X31+9]
	382 Move W8, [X31+160]
	383 Move X9, [X0]
	384 Move [X31+17], V0
	385 Move [X31+288], W8
	386 Move X2, [X0+8]
	387 Add X1, X31, 272
	388 Move X0, X19
	389 NotImplemented "Instruction BLR not yet implemented."
	390 Add X8, X31, 272
	391 Move V0, V8
	392 Move V1, V11
	393 Move V2, V10
	394 Move V3, V9
	395 Move X0, X31
	396 Call StyleColor.op_Implicit, X0
	397 Move V0, [X31+17]
	398 Move W8, [X31+288]
	399 Move X1, [X25]
	400 Move [X31+7], V0
	401 Move [X31+128], W8
	402 Move X8, [X19]
	403 NotImplemented "Instruction LDRH not yet implemented."
	404 Compare X9, 0
	405 JumpIfEqual {412}
	406 Move X10, [X8+176]
	407 Add X10, X10, 8
	408 NotImplemented "Instruction LDUR not yet implemented."
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Subtract X9, X9, 1
	411 Add X10, X10, 16
	412 Move W2, 10
	413 Move X0, X19
	414 Call 0x1C5D788
	415 Move W9, [X10]
	416 Add W9, W9, 49
	417 Add X8, X8, W9
	418 Add X0, X8, 312
	419 Move V0, [X31+1]
	420 Move W8, [X31+32]
	421 Move X9, [X0]
	422 Move [X31+17], V0
	423 Move [X31+288], W8
	424 Move X2, [X0+8]
	425 Add X1, X31, 272
	426 Move X0, X19
	427 NotImplemented "Instruction BLR not yet implemented."
	428 Move W9, [X10]
	429 Add W9, W9, 10
	430 Add X8, X8, W9
	431 Add X0, X8, 312
	432 Move V0, [X31+7]
	433 Move W8, [X31+128]
	434 Move X9, [X0]
	435 Move [X31+17], V0
	436 Move [X31+288], W8
	437 Move X2, [X0+8]
	438 Add X1, X31, 272
	439 Move X0, X19
	440 NotImplemented "Instruction BLR not yet implemented."
	441 Add X8, X31, 272
	442 Move V0, V8
	443 Move V1, V11
	444 Move V2, V10
	445 Move V3, V9
	446 Move X0, X31
	447 Call StyleColor.op_Implicit, X0
	448 Move V0, [X31+17]
	449 Move W8, [X31+288]
	450 Move X1, [X25]
	451 Move [X31+5], V0
	452 Move [X31+96], W8
	453 Move X8, [X19]
	454 NotImplemented "Instruction LDRH not yet implemented."
	455 Compare X9, 0
	456 JumpIfEqual {463}
	457 Move X10, [X8+176]
	458 Add X10, X10, 8
	459 NotImplemented "Instruction LDUR not yet implemented."
	460 NotImplemented "Instruction CMP not yet implemented."
	461 Subtract X9, X9, 1
	462 Add X10, X10, 16
	463 Move W2, 8
	464 Move X0, X19
	465 Call 0x1C5D788
	466 Move W9, [X10]
	467 Add W9, W9, 8
	468 Add X8, X8, W9
	469 Add X0, X8, 312
	470 Move V0, [X31+5]
	471 Move W8, [X31+96]
	472 Move X9, [X0]
	473 Move [X31+17], V0
	474 Move [X31+288], W8
	475 Move X2, [X0+8]
	476 Add X1, X31, 272
	477 Move X0, X19
	478 NotImplemented "Instruction BLR not yet implemented."
	479 Add X8, X31, 272
	480 Move V0, V8
	481 Move V1, V11
	482 Move V2, V10
	483 Move V3, V9
	484 Move X0, X31
	485 Call StyleColor.op_Implicit, X0
	486 Move V0, [X31+17]
	487 Move W8, [X31+288]
	488 Move X1, [X25]
	489 Move [X31+3], V0
	490 Move [X31+64], W8
	491 Move X8, [X19]
	492 NotImplemented "Instruction LDRH not yet implemented."
	493 Compare X9, 0
	494 JumpIfEqual {501}
	495 Move X10, [X8+176]
	496 Add X10, X10, 8
	497 NotImplemented "Instruction LDUR not yet implemented."
	498 NotImplemented "Instruction CMP not yet implemented."
	499 Subtract X9, X9, 1
	500 Add X10, X10, 16
	501 Move W2, 2
	502 Move X0, X19
	503 Call 0x1C5D788
	504 Move W9, [X10]
	505 Add W9, W9, 2
	506 Add X8, X8, W9
	507 Add X0, X8, 312
	508 Move V0, [X31+3]
	509 Move W8, [X31+64]
	510 Move X9, [X0]
	511 Move [X31+17], V0
	512 Move [X31+288], W8
	513 Move X2, [X0+8]
	514 Add X1, X31, 272
	515 Move X0, X19
	516 NotImplemented "Instruction BLR not yet implemented."
	517 Or W9, W31, 0x10001
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Move V0, V8
	520 Move X0, X31
	521 Call StyleLength.op_Implicit, V0
	522 Compare X19, 0
	523 JumpIfEqual {1256}
	524 Move X8, [X19]
	525 Move X21, X1
	526 Move X1, [X25]
	527 Move X20, X0
	528 NotImplemented "Instruction LDRH not yet implemented."
	529 Compare X9, 0
	530 JumpIfEqual {537}
	531 Move X10, [X8+176]
	532 Add X10, X10, 8
	533 NotImplemented "Instruction LDUR not yet implemented."
	534 NotImplemented "Instruction CMP not yet implemented."
	535 Subtract X9, X9, 1
	536 Add X10, X10, 16
	537 Move W2, 23
	538 Move X0, X19
	539 Call 0x1C5D788
	540 Move V0, V8
	541 Move X0, X31
	542 Call StyleLength.op_Implicit, V0
	543 Compare X19, 0
	544 JumpIfEqual {1245}
	545 Move X8, [X19]
	546 Move X21, X1
	547 Move X1, [X25]
	548 Move X20, X0
	549 NotImplemented "Instruction LDRH not yet implemented."
	550 Compare X9, 0
	551 JumpIfEqual {558}
	552 Move X10, [X8+176]
	553 Add X10, X10, 8
	554 NotImplemented "Instruction LDUR not yet implemented."
	555 NotImplemented "Instruction CMP not yet implemented."
	556 Subtract X9, X9, 1
	557 Add X10, X10, 16
	558 Move W2, 39
	559 Move X0, X19
	560 Call 0x1C5D788
	561 Move V0, V8
	562 Move X0, X31
	563 Call StyleLength.op_Implicit, V0
	564 Compare X19, 0
	565 JumpIfEqual {1248}
	566 Move X8, [X19]
	567 Move X21, X1
	568 Move X1, [X25]
	569 Move X20, X0
	570 NotImplemented "Instruction LDRH not yet implemented."
	571 Compare X9, 0
	572 JumpIfEqual {579}
	573 Move X10, [X8+176]
	574 Add X10, X10, 8
	575 NotImplemented "Instruction LDUR not yet implemented."
	576 NotImplemented "Instruction CMP not yet implemented."
	577 Subtract X9, X9, 1
	578 Add X10, X10, 16
	579 Move W2, 36
	580 Move X0, X19
	581 Call 0x1C5D788
	582 Move V0, V8
	583 Move X0, X31
	584 Call StyleLength.op_Implicit, V0
	585 Compare X19, 0
	586 JumpIfEqual {1243}
	587 Move X8, [X19]
	588 Move X21, X1
	589 Move X1, [X25]
	590 Move X20, X0
	591 NotImplemented "Instruction LDRH not yet implemented."
	592 Compare X9, 0
	593 JumpIfEqual {600}
	594 Move X10, [X8+176]
	595 Add X10, X10, 8
	596 NotImplemented "Instruction LDUR not yet implemented."
	597 NotImplemented "Instruction CMP not yet implemented."
	598 Subtract X9, X9, 1
	599 Add X10, X10, 16
	600 Move W2, 28
	601 Move X0, X19
	602 Call 0x1C5D788
	603 Move V0, V8
	604 Move X0, X31
	605 Call StyleLength.op_Implicit, V0
	606 Compare X19, 0
	607 JumpIfEqual {1238}
	608 Move X8, [X19]
	609 Move X21, X1
	610 Move X1, [X25]
	611 Move X20, X0
	612 NotImplemented "Instruction LDRH not yet implemented."
	613 Compare X9, 0
	614 JumpIfEqual {621}
	615 Move X10, [X8+176]
	616 Add X10, X10, 8
	617 NotImplemented "Instruction LDUR not yet implemented."
	618 NotImplemented "Instruction CMP not yet implemented."
	619 Subtract X9, X9, 1
	620 Add X10, X10, 16
	621 Move W2, 14
	622 Move X0, X19
	623 Call 0x1C5D788
	624 Move V0, V8
	625 Move X0, X31
	626 Call StyleLength.op_Implicit, V0
	627 Compare X19, 0
	628 JumpIfEqual {1246}
	629 Move X8, [X19]
	630 Move X21, X1
	631 Move X1, [X25]
	632 Move X20, X0
	633 NotImplemented "Instruction LDRH not yet implemented."
	634 Compare X9, 0
	635 JumpIfEqual {642}
	636 Move X10, [X8+176]
	637 Add X10, X10, 8
	638 NotImplemented "Instruction LDUR not yet implemented."
	639 NotImplemented "Instruction CMP not yet implemented."
	640 Subtract X9, X9, 1
	641 Add X10, X10, 16
	642 Move W2, 29
	643 Move X0, X19
	644 Call 0x1C5D788
	645 Move V0, V8
	646 Move X0, X31
	647 Call StyleLength.op_Implicit, V0
	648 Compare X19, 0
	649 JumpIfEqual {1242}
	650 Move X8, [X19]
	651 Move X21, X1
	652 Move X1, [X25]
	653 Move X20, X0
	654 NotImplemented "Instruction LDRH not yet implemented."
	655 Compare X9, 0
	656 JumpIfEqual {663}
	657 Move X10, [X8+176]
	658 Add X10, X10, 8
	659 NotImplemented "Instruction LDUR not yet implemented."
	660 NotImplemented "Instruction CMP not yet implemented."
	661 Subtract X9, X9, 1
	662 Add X10, X10, 16
	663 Move W2, 26
	664 Move X0, X19
	665 Call 0x1C5D788
	666 Move V0, V8
	667 Move X0, X31
	668 Call StyleFloat.op_Implicit, V0
	669 Compare X19, 0
	670 JumpIfEqual {1239}
	671 Move X8, [X19]
	672 Move X1, [X25]
	673 Move X20, X0
	674 NotImplemented "Instruction LDRH not yet implemented."
	675 Compare X9, 0
	676 JumpIfEqual {683}
	677 Move X10, [X8+176]
	678 Add X10, X10, 8
	679 NotImplemented "Instruction LDUR not yet implemented."
	680 NotImplemented "Instruction CMP not yet implemented."
	681 Subtract X9, X9, 1
	682 Add X10, X10, 16
	683 Move W2, 9
	684 Move X0, X19
	685 Call 0x1C5D788
	686 Move V0, V8
	687 Move X0, X31
	688 Call StyleLength.op_Implicit, V0
	689 Compare X19, 0
	690 JumpIfEqual {1252}
	691 Move X8, [X19]
	692 Move X21, X1
	693 Move X1, [X25]
	694 Move X20, X0
	695 NotImplemented "Instruction LDRH not yet implemented."
	696 Compare X9, 0
	697 JumpIfEqual {704}
	698 Move X10, [X8+176]
	699 Add X10, X10, 8
	700 NotImplemented "Instruction LDUR not yet implemented."
	701 NotImplemented "Instruction CMP not yet implemented."
	702 Subtract X9, X9, 1
	703 Add X10, X10, 16
	704 Move W2, 37
	705 Move X0, X19
	706 Call 0x1C5D788
	707 Move V0, V8
	708 Move X0, X31
	709 Call StyleFloat.op_Implicit, V0
	710 Compare X19, 0
	711 JumpIfEqual {1250}
	712 Move X8, [X19]
	713 Move X1, [X25]
	714 Move X20, X0
	715 NotImplemented "Instruction LDRH not yet implemented."
	716 Compare X9, 0
	717 JumpIfEqual {724}
	718 Move X10, [X8+176]
	719 Add X10, X10, 8
	720 NotImplemented "Instruction LDUR not yet implemented."
	721 NotImplemented "Instruction CMP not yet implemented."
	722 Subtract X9, X9, 1
	723 Add X10, X10, 16
	724 Move W2, 13
	725 Move X0, X19
	726 Call 0x1C5D788
	727 Move V0, V8
	728 Move X0, X31
	729 Call StyleLength.op_Implicit, V0
	730 Compare X19, 0
	731 JumpIfEqual {1255}
	732 Move X8, [X19]
	733 Move X21, X1
	734 Move X1, [X25]
	735 Move X20, X0
	736 NotImplemented "Instruction LDRH not yet implemented."
	737 Compare X9, 0
	738 JumpIfEqual {745}
	739 Move X10, [X8+176]
	740 Add X10, X10, 8
	741 NotImplemented "Instruction LDUR not yet implemented."
	742 NotImplemented "Instruction CMP not yet implemented."
	743 Subtract X9, X9, 1
	744 Add X10, X10, 16
	745 Move W2, 24
	746 Move X0, X19
	747 Call 0x1C5D788
	748 Move V0, V8
	749 Move X0, X31
	750 Call StyleFloat.op_Implicit, V0
	751 Compare X19, 0
	752 JumpIfEqual {1244}
	753 Move X8, [X19]
	754 Move X1, [X25]
	755 Move X20, X0
	756 NotImplemented "Instruction LDRH not yet implemented."
	757 Compare X9, 0
	758 JumpIfEqual {765}
	759 Move X10, [X8+176]
	760 Add X10, X10, 8
	761 NotImplemented "Instruction LDUR not yet implemented."
	762 NotImplemented "Instruction CMP not yet implemented."
	763 Subtract X9, X9, 1
	764 Add X10, X10, 16
	765 Move W2, 7
	766 Move X0, X19
	767 Call 0x1C5D788
	768 Move V0, V8
	769 Move X0, X31
	770 Call StyleLength.op_Implicit, V0
	771 Compare X19, 0
	772 JumpIfEqual {1253}
	773 Move X8, [X19]
	774 Move X21, X1
	775 Move X1, [X25]
	776 Move X20, X0
	777 NotImplemented "Instruction LDRH not yet implemented."
	778 Compare X9, 0
	779 JumpIfEqual {786}
	780 Move X10, [X8+176]
	781 Add X10, X10, 8
	782 NotImplemented "Instruction LDUR not yet implemented."
	783 NotImplemented "Instruction CMP not yet implemented."
	784 Subtract X9, X9, 1
	785 Add X10, X10, 16
	786 Move W2, 41
	787 Move X0, X19
	788 Call 0x1C5D788
	789 Move V0, V8
	790 Move X0, X31
	791 Call StyleFloat.op_Implicit, V0
	792 Compare X19, 0
	793 JumpIfEqual {1241}
	794 Move X8, [X19]
	795 Move X1, [X25]
	796 Move X20, X0
	797 NotImplemented "Instruction LDRH not yet implemented."
	798 Compare X9, 0
	799 JumpIfEqual {806}
	800 Move X10, [X8+176]
	801 Add X10, X10, 8
	802 NotImplemented "Instruction LDUR not yet implemented."
	803 NotImplemented "Instruction CMP not yet implemented."
	804 Subtract X9, X9, 1
	805 Add X10, X10, 16
	806 Move W2, 21
	807 Move X0, X19
	808 Call 0x1C5D788
	809 Move V0, V8
	810 Move X0, X31
	811 Call StyleLength.op_Implicit, V0
	812 Compare X19, 0
	813 JumpIfEqual {1254}
	814 Move X8, [X19]
	815 Move X21, X1
	816 Move X1, [X25]
	817 Move X20, X0
	818 NotImplemented "Instruction LDRH not yet implemented."
	819 Compare X9, 0
	820 JumpIfEqual {827}
	821 Move X10, [X8+176]
	822 Add X10, X10, 8
	823 NotImplemented "Instruction LDUR not yet implemented."
	824 NotImplemented "Instruction CMP not yet implemented."
	825 Subtract X9, X9, 1
	826 Add X10, X10, 16
	827 Move W2, 35
	828 Move X0, X19
	829 Call 0x1C5D788
	830 Move V0, V8
	831 Move X0, X31
	832 Call StyleFloat.op_Implicit, V0
	833 Compare X19, 0
	834 JumpIfEqual {1237}
	835 Move X8, [X19]
	836 Move X1, [X25]
	837 Move X20, X0
	838 NotImplemented "Instruction LDRH not yet implemented."
	839 Compare X9, 0
	840 JumpIfEqual {847}
	841 Move X10, [X8+176]
	842 Add X10, X10, 8
	843 NotImplemented "Instruction LDUR not yet implemented."
	844 NotImplemented "Instruction CMP not yet implemented."
	845 Subtract X9, X9, 1
	846 Add X10, X10, 16
	847 Move W2, 22
	848 Move X0, X19
	849 Call 0x1C5D788
	850 Move V0, V8
	851 Move X0, X31
	852 Call StyleLength.op_Implicit, V0
	853 Compare X19, 0
	854 JumpIfEqual {1249}
	855 Move X8, [X19]
	856 Move X21, X1
	857 Move X1, [X25]
	858 Move X20, X0
	859 NotImplemented "Instruction LDRH not yet implemented."
	860 Compare X9, 0
	861 JumpIfEqual {868}
	862 Move X10, [X8+176]
	863 Add X10, X10, 8
	864 NotImplemented "Instruction LDUR not yet implemented."
	865 NotImplemented "Instruction CMP not yet implemented."
	866 Subtract X9, X9, 1
	867 Add X10, X10, 16
	868 Move W2, 45
	869 Move X0, X19
	870 Call 0x1C5D788
	871 Move V0, V8
	872 Move X0, X31
	873 Call StyleLength.op_Implicit, V0
	874 Compare X19, 0
	875 JumpIfEqual {1247}
	876 Move X8, [X19]
	877 Move X21, X1
	878 Move X1, [X25]
	879 Move X20, X0
	880 NotImplemented "Instruction LDRH not yet implemented."
	881 Compare X9, 0
	882 JumpIfEqual {889}
	883 Move X10, [X8+176]
	884 Add X10, X10, 8
	885 NotImplemented "Instruction LDUR not yet implemented."
	886 NotImplemented "Instruction CMP not yet implemented."
	887 Subtract X9, X9, 1
	888 Add X10, X10, 16
	889 Move W2, 27
	890 Move X0, X19
	891 Call 0x1C5D788
	892 Move V0, V8
	893 Move X0, X31
	894 Call StyleLength.op_Implicit, V0
	895 Compare X19, 0
	896 JumpIfEqual {1236}
	897 Move X8, [X19]
	898 Move X21, X1
	899 Move X1, [X25]
	900 Move X20, X0
	901 NotImplemented "Instruction LDRH not yet implemented."
	902 Compare X9, 0
	903 JumpIfEqual {910}
	904 Move X10, [X8+176]
	905 Add X10, X10, 8
	906 NotImplemented "Instruction LDUR not yet implemented."
	907 NotImplemented "Instruction CMP not yet implemented."
	908 Subtract X9, X9, 1
	909 Add X10, X10, 16
	910 Move W2, 25
	911 Move X0, X19
	912 Call 0x1C5D788
	913 Move V0, V8
	914 Move X0, X31
	915 Call StyleLength.op_Implicit, V0
	916 Compare X19, 0
	917 JumpIfEqual {1251}
	918 Move X8, [X19]
	919 Move X21, X1
	920 Move X1, [X25]
	921 Move X20, X0
	922 NotImplemented "Instruction LDRH not yet implemented."
	923 Compare X9, 0
	924 JumpIfEqual {931}
	925 Move X10, [X8+176]
	926 Add X10, X10, 8
	927 NotImplemented "Instruction LDUR not yet implemented."
	928 NotImplemented "Instruction CMP not yet implemented."
	929 Subtract X9, X9, 1
	930 Add X10, X10, 16
	931 Move W2, 54
	932 Move X0, X19
	933 Call 0x1C5D788
	934 Move W9, [X10]
	935 Add W9, W9, 12
	936 Add X8, X8, W9
	937 Add X0, X8, 312
	938 Move X8, [X0]
	939 Move X3, [X0+8]
	940 And X2, X21, 0
	941 Move X0, X19
	942 Move X1, X20
	943 NotImplemented "Instruction BLR not yet implemented."
	944 Move W9, [X10]
	945 Add W9, W9, 4
	946 Add X8, X8, W9
	947 Add X0, X8, 312
	948 Move X8, [X0]
	949 Move X3, [X0+8]
	950 And X2, X21, 0
	951 Move X0, X19
	952 Move X1, X20
	953 NotImplemented "Instruction BLR not yet implemented."
	954 Move W9, [X10]
	955 Add W9, W9, 11
	956 Add X8, X8, W9
	957 Add X0, X8, 312
	958 Move X8, [X0]
	959 Move X3, [X0+8]
	960 And X2, X21, 0
	961 Move X0, X19
	962 Move X1, X20
	963 NotImplemented "Instruction BLR not yet implemented."
	964 NotImplemented "Instruction LDRSW not yet implemented."
	965 Add X8, X8, X9
	966 Add X0, X8, 312
	967 Move V0, [X31+11]
	968 Move W8, [X31+192]
	969 Move X9, [X0]
	970 Move [X31+17], V0
	971 Move [X31+288], W8
	972 Move X2, [X0+8]
	973 Add X1, X31, 272
	974 Move X0, X19
	975 NotImplemented "Instruction BLR not yet implemented."
	976 Move W9, [X10]
	977 Add W9, W9, 3
	978 Add X8, X8, W9
	979 Add X0, X8, 312
	980 Move X8, [X0]
	981 Move X3, [X0+8]
	982 And X2, X21, 0
	983 Move X0, X19
	984 Move X1, X20
	985 NotImplemented "Instruction BLR not yet implemented."
	986 Move W9, [X10]
	987 Add W9, W9, 33
	988 Add X8, X8, W9
	989 Add X0, X8, 312
	990 Move X8, [X0]
	991 Move X2, [X0+8]
	992 Move X0, X19
	993 Move X1, X20
	994 NotImplemented "Instruction BLR not yet implemented."
	995 Move W9, [X10]
	996 Add W9, W9, 39
	997 Add X8, X8, W9
	998 Add X0, X8, 312
	999 Move X8, [X0]
	1000 Move X3, [X0+8]
	1001 And X2, X21, 0
	1002 Move X0, X19
	1003 Move X1, X20
	1004 NotImplemented "Instruction BLR not yet implemented."
	1005 Move W9, [X10]
	1006 Add W9, W9, 36
	1007 Add X8, X8, W9
	1008 Add X0, X8, 312
	1009 Move X8, [X0]
	1010 Move X3, [X0+8]
	1011 And X2, X21, 0
	1012 Move X0, X19
	1013 Move X1, X20
	1014 NotImplemented "Instruction BLR not yet implemented."
	1015 Move W9, [X10]
	1016 Add W9, W9, 28
	1017 Add X8, X8, W9
	1018 Add X0, X8, 312
	1019 Move X8, [X0]
	1020 Move X3, [X0+8]
	1021 And X2, X21, 0
	1022 Move X0, X19
	1023 Move X1, X20
	1024 NotImplemented "Instruction BLR not yet implemented."
	1025 Move W9, [X10]
	1026 Add W9, W9, 14
	1027 Add X8, X8, W9
	1028 Add X0, X8, 312
	1029 Move X8, [X0]
	1030 Move X3, [X0+8]
	1031 And X2, X21, 0
	1032 Move X0, X19
	1033 Move X1, X20
	1034 NotImplemented "Instruction BLR not yet implemented."
	1035 Move W9, [X10]
	1036 Add W9, W9, 29
	1037 Add X8, X8, W9
	1038 Add X0, X8, 312
	1039 Move X8, [X0]
	1040 Move X3, [X0+8]
	1041 And X2, X21, 0
	1042 Move X0, X19
	1043 Move X1, X20
	1044 NotImplemented "Instruction BLR not yet implemented."
	1045 Move W9, [X10]
	1046 Add W9, W9, 26
	1047 Add X8, X8, W9
	1048 Add X0, X8, 312
	1049 Move X8, [X0]
	1050 Move X3, [X0+8]
	1051 And X2, X21, 0
	1052 Move X0, X19
	1053 Move X1, X20
	1054 NotImplemented "Instruction BLR not yet implemented."
	1055 Move W9, [X10]
	1056 Add W9, W9, 9
	1057 Add X8, X8, W9
	1058 Add X0, X8, 312
	1059 Move X8, [X0]
	1060 Move X2, [X0+8]
	1061 Move X0, X19
	1062 Move X1, X20
	1063 NotImplemented "Instruction BLR not yet implemented."
	1064 Move W9, [X10]
	1065 Add W9, W9, 37
	1066 Add X8, X8, W9
	1067 Add X0, X8, 312
	1068 Move X8, [X0]
	1069 Move X3, [X0+8]
	1070 And X2, X21, 0
	1071 Move X0, X19
	1072 Move X1, X20
	1073 NotImplemented "Instruction BLR not yet implemented."
	1074 Move W9, [X10]
	1075 Add W9, W9, 13
	1076 Add X8, X8, W9
	1077 Add X0, X8, 312
	1078 Move X8, [X0]
	1079 Move X2, [X0+8]
	1080 Move X0, X19
	1081 Move X1, X20
	1082 NotImplemented "Instruction BLR not yet implemented."
	1083 Move W9, [X10]
	1084 Add W9, W9, 24
	1085 Add X8, X8, W9
	1086 Add X0, X8, 312
	1087 Move X8, [X0]
	1088 Move X3, [X0+8]
	1089 And X2, X21, 0
	1090 Move X0, X19
	1091 Move X1, X20
	1092 NotImplemented "Instruction BLR not yet implemented."
	1093 Move W9, [X10]
	1094 Add W9, W9, 5
	1095 Add X8, X8, W9
	1096 Add X0, X8, 312
	1097 Move X8, [X0]
	1098 Move X2, [X0+8]
	1099 Move X0, X19
	1100 Move X1, X20
	1101 NotImplemented "Instruction BLR not yet implemented."
	1102 Move W9, [X10]
	1103 Add W9, W9, 7
	1104 Add X8, X8, W9
	1105 Add X0, X8, 312
	1106 Move X8, [X0]
	1107 Move X2, [X0+8]
	1108 Move X0, X19
	1109 Move X1, X20
	1110 NotImplemented "Instruction BLR not yet implemented."
	1111 Move W9, [X10]
	1112 Add W9, W9, 41
	1113 Add X8, X8, W9
	1114 Add X0, X8, 312
	1115 Move X8, [X0]
	1116 Move X3, [X0+8]
	1117 And X2, X21, 0
	1118 Move X0, X19
	1119 Move X1, X20
	1120 NotImplemented "Instruction BLR not yet implemented."
	1121 Move W9, [X10]
	1122 Add W9, W9, 21
	1123 Add X8, X8, W9
	1124 Add X0, X8, 312
	1125 Move X8, [X0]
	1126 Move X2, [X0+8]
	1127 Move X0, X19
	1128 Move X1, X20
	1129 NotImplemented "Instruction BLR not yet implemented."
	1130 Move W9, [X10]
	1131 Add W9, W9, 35
	1132 Add X8, X8, W9
	1133 Add X0, X8, 312
	1134 Move X8, [X0]
	1135 Move X3, [X0+8]
	1136 And X2, X21, 0
	1137 Move X0, X19
	1138 Move X1, X20
	1139 NotImplemented "Instruction BLR not yet implemented."
	1140 Move W9, [X10]
	1141 Add W9, W9, 22
	1142 Add X8, X8, W9
	1143 Add X0, X8, 312
	1144 Move X8, [X0]
	1145 Move X2, [X0+8]
	1146 Move X0, X19
	1147 Move X1, X20
	1148 NotImplemented "Instruction BLR not yet implemented."
	1149 Move W9, [X10]
	1150 Add W9, W9, 45
	1151 Add X8, X8, W9
	1152 Add X0, X8, 312
	1153 Move X8, [X0]
	1154 Move X3, [X0+8]
	1155 And X2, X21, 0
	1156 Move X0, X19
	1157 Move X1, X20
	1158 NotImplemented "Instruction BLR not yet implemented."
	1159 Move W9, [X10]
	1160 Add W9, W9, 27
	1161 Add X8, X8, W9
	1162 Add X0, X8, 312
	1163 Move X8, [X0]
	1164 Move X3, [X0+8]
	1165 And X2, X21, 0
	1166 Move X0, X19
	1167 Move X1, X20
	1168 NotImplemented "Instruction BLR not yet implemented."
	1169 Move W9, [X10]
	1170 Add W9, W9, 25
	1171 Add X8, X8, W9
	1172 Add X0, X8, 312
	1173 Move X8, [X0]
	1174 Move X3, [X0+8]
	1175 And X2, X21, 0
	1176 Move X0, X19
	1177 Move X1, X20
	1178 NotImplemented "Instruction BLR not yet implemented."
	1179 Move W9, [X10]
	1180 Add W9, W9, 54
	1181 Add X8, X8, W9
	1182 Add X0, X8, 312
	1183 Move X8, [X0]
	1184 Move X3, [X0+8]
	1185 And X2, X21, 0
	1186 Move X0, X19
	1187 Move X1, X20
	1188 NotImplemented "Instruction BLR not yet implemented."
	1189 Move W9, [X10]
	1190 Add W9, W9, 23
	1191 Add X8, X8, W9
	1192 Add X0, X8, 312
	1193 Move X8, [X0]
	1194 Move X3, [X0+8]
	1195 And X2, X21, 0
	1196 Move X0, X19
	1197 Move X1, X20
	1198 NotImplemented "Instruction BLR not yet implemented."
	1199 Move X8, 0x372000
	1200 Move X8, [X8+1160]
	1201 Add X0, X31, 320
	1202 Move X1, [X8]
	1203 Call Enumerator<StyleValue>.Dispose, X0
	1204 Move X22, [X31+8]
	1205 Move X8, [X22+40]
	1206 Move X9, [X31+360]
	1207 NotImplemented "Instruction CMP not yet implemented."
	1208 Move X20, [X31+480]
	1209 Move X19, [X31+488]
	1210 Move X22, [X31+464]
	1211 Move X21, [X31+472]
	1212 Move X24, [X31+448]
	1213 Move X23, [X31+456]
	1214 Move X26, [X31+432]
	1215 Move X25, [X31+440]
	1216 Move X28, [X31+416]
	1217 Move X27, [X31+424]
	1218 Move X29, [X31+400]
	1219 Move X30, [X31+408]
	1220 Move D9, [X31+384]
	1221 Move D8, [X31+392]
	1222 Move D11, [X31+368]
	1223 Move D10, [X31+376]
	1224 Add X31, X31, 496
	1225 Return 
	1226 Call 0x1C17F20
	1227 Call 0x1C17F20
	1228 Call 0x1C17F20
	1229 Call 0x1C17F20
	1230 Call 0x1C17F20
	1231 Call 0x1C17F20
	1232 Call 0x1C17F20
	1233 Call 0x1C17F20
	1234 Call 0x1C17F20
	1235 Call 0x1C17F20
	1236 Call 0x1C17F20
	1237 Call 0x1C17F20
	1238 Call 0x1C17F20
	1239 Call 0x1C17F20
	1240 Call 0x1C17F20
	1241 Call 0x1C17F20
	1242 Call 0x1C17F20
	1243 Call 0x1C17F20
	1244 Call 0x1C17F20
	1245 Call 0x1C17F20
	1246 Call 0x1C17F20
	1247 Call 0x1C17F20
	1248 Call 0x1C17F20
	1249 Call 0x1C17F20
	1250 Call 0x1C17F20
	1251 Call 0x1C17F20
	1252 Call 0x1C17F20
	1253 Call 0x1C17F20
	1254 Call 0x1C17F20
	1255 Call 0x1C17F20
	1256 Call 0x1C17F20
	1257 Call 0x3EB2B20
	1258 Move X19, X0
	1259 NotImplemented "Instruction CMP not yet implemented."
	1260 Move X0, X19
	1261 Call 0x3EB2AD0
	1262 Move X20, [X0]
	1263 Call 0x3EB2AE0
	1264 Move X8, 0x372000
	1265 Move X8, [X8+1160]
	1266 Add X0, X31, 320
	1267 Move X1, [X8]
	1268 Call Enumerator<StyleValue>.Dispose, X0
	1269 Move X22, [X31+8]
	1270 Compare X20, 0
	1271 JumpIfEqual {1205}
	1272 Move X0, X20
	1273 Call 0x1C17F18
	1274 Move X20, X31
	1275 Move X19, X0
	1276 Move X8, 0x372000
	1277 Move X8, [X8+1160]
	1278 Move X1, [X8]
	1279 Add X0, X31, 320
	1280 Call Enumerator<StyleValue>.Dispose, X0
	1281 Compare X20, 0
	1282 JumpIfNotEqual {1285}
	1283 Move X0, X19
	1284 Call 0x1D2D690
	1285 Move X0, X20
	1286 Call 0x1C17F18
	1287 Call 0x1991590

Method: UnityEngine.UIElements.Experimental.StyleValues ReadCurrentValues(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.Experimental.StyleValues targetValuesToRead)

Disassembly:
	0x03DF5B04 LDR X24, [X24 + 0xA20]
	0x03DF5B08 MOV W19, W3
	0x03DF5B0C MOV X20, X2
	0x03DF5B10 MOV X21, X1
	0x03DF5B14 MOV X22, X0
	0x03DF5B18 TBNZ X8, 0x0, 0x3DF5B84
	0x03DF5B1C ADRP X0, 0x374000
	0x03DF5B20 LDR X0, [X0 + 0xA28]
	0x03DF5B24 BL 0x1C16CF4
	0x03DF5B28 ADRP X0, 0x374000
	0x03DF5B2C LDR X0, [X0 + 0xA18]
	0x03DF5B30 BL 0x1C16CF4
	0x03DF5B34 ADRP X0, 0x371000
	0x03DF5B38 LDR X0, [X0 + 0x4B8]
	0x03DF5B3C BL 0x1C16CF4
	0x03DF5B40 ADRP X0, 0x374000
	0x03DF5B44 LDR X0, [X0 + 0xA30]
	0x03DF5B48 BL 0x1C16CF4
	0x03DF5B4C ADRP X0, 0x374000
	0x03DF5B50 LDR X0, [X0 + 0xA20]
	0x03DF5B54 BL 0x1C16CF4
	0x03DF5B58 ADRP X0, 0x374000
	0x03DF5B5C LDR X0, [X0 + 0xA38]
	0x03DF5B60 BL 0x1C16CF4
	0x03DF5B64 ADRP X0, 0x374000
	0x03DF5B68 LDR X0, [X0 + 0xA40]
	0x03DF5B6C BL 0x1C16CF4
	0x03DF5B70 ADRP X0, 0x326000
	0x03DF5B74 LDR X0, [X0 + 0x898]
	0x03DF5B78 BL 0x1C16CF4
	0x03DF5B7C MOVZ W8, 0x1
	0x03DF5B80 STRB W8, [X26 + 0x26C]
	0x03DF5B84 ADRP X28, 0x374000
	0x03DF5B88 LDR X28, [X28 + 0xA30]
	0x03DF5B8C LDR X0, [X25]
	0x03DF5B90 ADRP X27, 0x374000
	0x03DF5B94 ADRP X26, 0x374000
	0x03DF5B98 ADRP X25, 0x326000
	0x03DF5B9C LDR X27, [X27 + 0xA28]
	0x03DF5BA0 LDR X26, [X26 + 0xA38]
	0x03DF5BA4 LDR X25, [X25 + 0x898]
	0x03DF5BA8 BL 0x1C16F10
	0x03DF5BAC LDR X2, [X23]
	0x03DF5BB0 MOV X1, X31
	0x03DF5BB4 MOV X3, X31
	0x03DF5BB8 MOV X23, X0
	0x03DF5BBC BL 0x2D40BC8
	0x03DF5BC0 LDR X0, [X24]
	0x03DF5BC4 LDR W8, [X0 + 0xE0]
	0x03DF5BC8 CBNZ W8, 0x3DF5BD0
	0x03DF5BCC BL 0x1C16DFC
	0x03DF5BD0 LDR X2, [X28]
	0x03DF5BD4 ADRP X24, 0x374000
	0x03DF5BD8 LDR X24, [X24 + 0xA40]
	0x03DF5BDC MOV X0, X22
	0x03DF5BE0 MOV X1, X23
	0x03DF5BE4 BL 0x273E700
	0x03DF5BE8 LDR X8, [X27]
	0x03DF5BEC MOV X22, X0
	0x03DF5BF0 MOV X0, X8
	0x03DF5BF4 BL 0x1C16F10
	0x03DF5BF8 LDR X2, [X26]
	0x03DF5BFC MOV X1, X31
	0x03DF5C00 MOV X3, X31
	0x03DF5C04 MOV X23, X0
	0x03DF5C08 BL 0x2A77164
	0x03DF5C0C LDR X0, [X25]
	0x03DF5C10 LDR W8, [X0 + 0xE0]
	0x03DF5C14 CBNZ W8, 0x3DF5C1C
	0x03DF5C18 BL 0x1C16DFC
	0x03DF5C1C LDR X5, [X24]
	0x03DF5C20 MOV X0, X22
	0x03DF5C24 MOV X1, X21
	0x03DF5C28 MOV X2, X20
	0x03DF5C2C MOV W3, W19
	0x03DF5C30 MOV X4, X23
	0x03DF5C34 LDP X20, X19, [X31 + 0x50]
	0x03DF5C38 LDP X22, X21, [X31 + 0x40]
	0x03DF5C3C LDP X24, X23, [X31 + 0x30]
	0x03DF5C40 LDP X26, X25, [X31 + 0x20]
	0x03DF5C44 LDP X28, X27, [X31 + 0x10]
	0x03DF5C48 LDR X30, [X31], #0x60
	0x03DF5C4C B 0x22AA210
	0x03DF5C50 STR X30, [X31 - 0x20]!
	0x03DF5C54 STP X20, X19, [X31 + 0x10]
	0x03DF5C58 ADRP X20, 0x5F3000
	0x03DF5C5C LDRB W8, [X20 + 0x26D]
	0x03DF5C60 MOV X19, X0
	0x03DF5C64 TBNZ X8, 0x0, 0x3DF5C7C
	0x03DF5C68 ADRP X0, 0x326000
	0x03DF5C6C LDR X0, [X0 + 0x898]
	0x03DF5C70 BL 0x1C16CF4
	0x03DF5C74 MOVZ W8, 0x1
	0x03DF5C78 STRB W8, [X20 + 0x26D]
	0x03DF5C7C LDR X20, [X19 + 0x360]
	0x03DF5C80 CBZ X20, 0x3DF5CC4
	0x03DF5C84 LDR W8, [X19 + 0x358]
	0x03DF5C88 LDR W9, [X20 + 0x35C]
	0x03DF5C8C CMP W8, W9
	0x03DF5C90 B.NE 0x3DF5CC4
	0x03DF5C94 ADRP X19, 0x326000
	0x03DF5C98 LDR X19, [X19 + 0x898]
	0x03DF5C9C LDR X0, [X19]
	0x03DF5CA0 LDR W8, [X0 + 0xE0]
	0x03DF5CA4 CBNZ W8, 0x3DF5CB0
	0x03DF5CA8 BL 0x1C16DFC
	0x03DF5CAC LDR X0, [X19]
	0x03DF5CB0 LDR X8, [X0 + 0xB8]
	0x03DF5CB4 LDR W9, [X8 + 0x40]
	0x03DF5CB8 ADD W9, W9, 0x1
	0x03DF5CBC STR W9, [X8 + 0x40]
	0x03DF5CC0 STR W9, [X20 + 0x35C]
	0x03DF5CC4 LDP X20, X19, [X31 + 0x10]
	0x03DF5CC8 LDR X30, [X31], #0x20
	0x03DF5CCC RET
	0x03DF5CD0 LDR X8, [X0 + 0x360]
	0x03DF5CD4 STR X8, [X1]
	0x03DF5CD8 CBZ X8, 0x3DF5CF0
	0x03DF5CDC LDR W8, [X8 + 0x35C]
	0x03DF5CE0 LDR W9, [X0 + 0x358]
	0x03DF5CE4 CMP W8, W9
	0x03DF5CE8 CSET W0, EQ
	0x03DF5CEC RET
	0x03DF5CF0 MOV W0, W31
	0x03DF5CF4 RET
	0x03DF5CF8 SUB X31, X31, 0x30
	0x03DF5CFC STP X30, X21, [X31 + 0x10]
	0x03DF5D00 STP X20, X19, [X31 + 0x20]
	0x03DF5D04 LDR X20, [X0 + 0x360]
	0x03DF5D08 MOV X19, X0
	0x03DF5D0C CBZ X20, 0x3DF5D20
	0x03DF5D10 LDR W8, [X20 + 0x35C]
	0x03DF5D14 LDR W9, [X19 + 0x358]
	0x03DF5D18 CMP W8, W9
	0x03DF5D1C B.EQ 0x3DF5DAC
	0x03DF5D20 LDR X8, [X19 + 0x378]
	0x03DF5D24 ADD X0, X31, 0x8
	0x03DF5D28 MOV X1, X31
	0x03DF5D2C STR X8, [X31 + 0x8]
	0x03DF5D30 BL 0x3DF88DC
	0x03DF5D34 CBZ X0, 0x3DF5D78
	0x03DF5D38 MOV X20, X0
	0x03DF5D3C LDR W8, [X20 + 0x35C]
	0x03DF5D40 CBNZ W8, 0x3DF5D84
	0x03DF5D44 LDR X21, [X20 + 0x360]
	0x03DF5D48 CBZ X21, 0x3DF5D5C
	0x03DF5D4C LDR W8, [X21 + 0x35C]
	0x03DF5D50 LDR W9, [X20 + 0x358]
	0x03DF5D54 CMP W8, W9
	0x03DF5D58 B.EQ 0x3DF5D98
	0x03DF5D5C LDR X8, [X20 + 0x378]
	0x03DF5D60 ADD X0, X31, 0x8
	0x03DF5D64 MOV X1, X31
	0x03DF5D68 STR X8, [X31 + 0x8]
	0x03DF5D6C BL 0x3DF88DC
	0x03DF5D70 MOV X20, X0
	0x03DF5D74 CBNZ X0, 0x3DF5D3C
	0x03DF5D78 MOV X20, X31
	0x03DF5D7C STR X31, [X19 + 0x360]
	0x03DF5D80 B 0x3DF5DAC
	0x03DF5D84 MOV X0, X19
	0x03DF5D88 MOV X1, X20
	0x03DF5D8C MOV X2, X20
	0x03DF5D90 BL 0x3DF5DC0
	0x03DF5D94 B 0x3DF5DAC
	0x03DF5D98 MOV X0, X19
	0x03DF5D9C MOV X1, X21
	0x03DF5DA0 MOV X2, X20
	0x03DF5DA4 BL 0x3DF5DC0
	0x03DF5DA8 MOV X20, X21
	0x03DF5DAC MOV X0, X20
	0x03DF5DB0 LDP X20, X19, [X31 + 0x20]
	0x03DF5DB4 LDP X30, X21, [X31 + 0x10]
	0x03DF5DB8 ADD X31, X31, 0x30
	0x03DF5DBC RET
	0x03DF5DC0 STR X30, [X31 - 0x20]!
	0x03DF5DC4 STP X20, X19, [X31 + 0x10]
	0x03DF5DC8 CMP X0, X2
	0x03DF5DCC STR X31, [X31 + 0x8]
	0x03DF5DD0 B.EQ 0x3DF5E0C
	0x03DF5DD4 MOV X19, X2
	0x03DF5DD8 MOV X20, X1
	0x03DF5DDC CBZ X0, 0x3DF5E18
	0x03DF5DE0 STR X20, [X0 + 0x360]
	0x03DF5DE4 CBZ X20, 0x3DF5E18
	0x03DF5DE8 LDR W8, [X20 + 0x35C]
	0x03DF5DEC LDR X9, [X0 + 0x378]
	0x03DF5DF0 MOV X1, X31
	0x03DF5DF4 STR W8, [X0 + 0x358]
	0x03DF5DF8 ADD X0, X31, 0x8
	0x03DF5DFC STR X9, [X31 + 0x8]
	0x03DF5E00 BL 0x3DF88DC
	0x03DF5E04 CMP X0, X19
	0x03DF5E08 B.NE 0x3DF5DDC
	0x03DF5E0C LDP X20, X19, [X31 + 0x10]
	0x03DF5E10 LDR X30, [X31], #0x20
	0x03DF5E14 RET
	0x03DF5E18 BL 0x1C16F20
	0x03DF5E1C LDR W0, [X0 + 0x368]
	0x03DF5E20 RET
	0x03DF5E24 STR X30, [X31 - 0x20]!
	0x03DF5E28 STP X20, X19, [X31 + 0x10]
	0x03DF5E2C LDR W8, [X0 + 0x368]
	0x03DF5E30 CMP W8, W1
	0x03DF5E34 B.EQ 0x3DF5E8C
	0x03DF5E38 EOR W8, W8, W1, 0x0
	0x03DF5E3C MOVN W9, 0xAD0
	0x03DF5E40 MOV X19, X0
	0x03DF5E44 MOV W20, W1
	0x03DF5E48 ANDS W31, W8, W9, 0x0
	0x03DF5E4C B.EQ 0x3DF5E7C
	0x03DF5E50 MOV X0, X19
	0x03DF5E54 BL 0x3DEB898
	0x03DF5E58 LDR X0, [X19 + 0x3A0]
	0x03DF5E5C CBZ X0, 0x3DF5E88
	0x03DF5E60 LDR X8, [X0]
	0x03DF5E64 MOVZ W2, 0x10000
	0x03DF5E68 MOV X1, X19
	0x03DF5E6C LDR X9, [X8 + 0x338]
	0x03DF5E70 LDR X3, [X8 + 0x340]
	0x03DF5E74 BLR X9
	0x03DF5E78 B 0x3DF5E88
	0x03DF5E7C LDR W8, [X19 + 0x36C]
	0x03DF5E80 ORR W8, W8, W20, 0x0
	0x03DF5E84 STR W8, [X19 + 0x36C]
	0x03DF5E88 STR W20, [X19 + 0x368]
	0x03DF5E8C LDP X20, X19, [X31 + 0x10]
	0x03DF5E90 LDR X30, [X31], #0x20
	0x03DF5E94 RET
	0x03DF5E98 STP X30, X19, [X31 - 0x10]!
	0x03DF5E9C LDR X8, [X0 + 0x3A0]
	0x03DF5EA0 CBZ X8, 0x3DF5ECC
	0x03DF5EA4 LDRB W8, [X0 + 0x50]
	0x03DF5EA8 MOV X19, X0
	0x03DF5EAC TBZ X8, 0x5, 0x3DF5EC4
	0x03DF5EB0 MOV X0, X19
	0x03DF5EB4 BL 0x3DF5EE4
	0x03DF5EB8 LDR W8, [X19 + 0x50]
	0x03DF5EBC AND W8, W8, 0xFFFFFFDF
	0x03DF5EC0 STR W8, [X19 + 0x50]
	0x03DF5EC4 LDR W0, [X19 + 0x36C]
	0x03DF5EC8 B 0x3DF5ED0
	0x03DF5ECC MOVN W0, 0x0
	0x03DF5ED0 LDP X30, X19, [X31], #0x10
	0x03DF5ED4 RET
	0x03DF5ED8 LDRB W8, [X0 + 0x50]
	0x03DF5EDC UBFM W0, W8, 0x5, 0x5
	0x03DF5EE0 RET
	0x03DF5EE4 SUB X31, X31, 0x30
	0x03DF5EE8 STP X30, X21, [X31 + 0x10]
	0x03DF5EEC STP X20, X19, [X31 + 0x20]
	0x03DF5EF0 LDR W8, [X0 + 0x368]
	0x03DF5EF4 LDRB W9, [X0 + 0x50]
	0x03DF5EF8 MOV X19, X0
	0x03DF5EFC STR W8, [X0 + 0x36C]
	0x03DF5F00 TBZ X9, 0x7, 0x3DF5F10
	0x03DF5F04 LDR W9, [X19 + 0x370]
	0x03DF5F08 ORR W8, W9, W8, 0x0
	0x03DF5F0C STR W8, [X19 + 0x36C]
	0x03DF5F10 MOV X0, X19
	0x03DF5F14 BL 0x3DF5CF8
	0x03DF5F18 CBZ X0, 0x3DF5F88
	0x03DF5F1C LDR W21, [X19 + 0x36C]
	0x03DF5F20 MOV X20, X0
	0x03DF5F24 BL 0x3DF5E98
	0x03DF5F28 LDR X8, [X19 + 0x378]
	0x03DF5F2C ORR W9, W0, W21, 0x0
	0x03DF5F30 ADD X0, X31, 0x8
	0x03DF5F34 MOV X1, X31
	0x03DF5F38 STR W9, [X19 + 0x36C]
	0x03DF5F3C STR X8, [X31 + 0x8]
	0x03DF5F40 BL 0x3DF88DC
	0x03DF5F44 CBZ X0, 0x3DF5F88
	0x03DF5F48 LDR X8, [X19 + 0x378]
	0x03DF5F4C STR X8, [X31 + 0x8]
	0x03DF5F50 ADD X0, X31, 0x8
	0x03DF5F54 MOV X1, X31
	0x03DF5F58 BL 0x3DF88DC
	0x03DF5F5C CMP X0, X20
	0x03DF5F60 B.EQ 0x3DF5F88
	0x03DF5F64 CBZ X0, 0x3DF5F98
	0x03DF5F68 LDR W8, [X19 + 0x36C]
	0x03DF5F6C LDR W9, [X0 + 0x50]
	0x03DF5F70 LDR X10, [X0 + 0x378]
	0x03DF5F74 STR W8, [X0 + 0x36C]
	0x03DF5F78 AND W8, W9, 0xFFFFFFDF
	0x03DF5F7C STR W8, [X0 + 0x50]
	0x03DF5F80 STR X10, [X31 + 0x8]
	0x03DF5F84 B 0x3DF5F50
	0x03DF5F88 LDP X20, X19, [X31 + 0x20]
	0x03DF5F8C LDP X30, X21, [X31 + 0x10]
	0x03DF5F90 ADD X31, X31, 0x30
	0x03DF5F94 RET
	0x03DF5F98 BL 0x1C16F20
	0x03DF5F9C STR X30, [X31 - 0x10]!
	0x03DF5FA0 CBZ X0, 0x3DF5FC8
	0x03DF5FA4 LDR W8, [X0 + 0x50]
	0x03DF5FA8 ANDS W31, W1, 0x1
	0x03DF5FAC MOVZ W9, 0x20
	0x03DF5FB0 CSEL W9, W9, W31, NE
	0x03DF5FB4 AND W8, W8, 0xFFFFFFDF
	0x03DF5FB8 ORR W8, W8, W9, 0x0
	0x03DF5FBC STR W8, [X0 + 0x50]
	0x03DF5FC0 LDR X30, [X31], #0x10
	0x03DF5FC4 RET
	0x03DF5FC8 BL 0x1C16F20
	0x03DF5FCC LDR W8, [X0 + 0x368]
	0x03DF5FD0 LSRV W8, W8, W1
	0x03DF5FD4 AND W0, W8, 0x1
	0x03DF5FD8 RET
	0x03DF5FDC STP X30, X21, [X31 - 0x20]!
	0x03DF5FE0 STP X20, X19, [X31 + 0x10]
	0x03DF5FE4 LDR W20, [X0 + 0x370]
	0x03DF5FE8 LDR W21, [X0 + 0x374]
	0x03DF5FEC MOV W19, W1
	0x03DF5FF0 BL 0x3DF5E98
	0x03DF5FF4 ORR W8, W21, W20, 0x0
	0x03DF5FF8 ORR W8, W8, W0, 0x0
	0x03DF5FFC LSRV W8, W8, W19
	0x03DF6000 LDP X20, X19, [X31 + 0x10]
	0x03DF6004 AND W0, W8, 0x1
	0x03DF6008 LDP X30, X21, [X31], #0x20
	0x03DF600C RET
	0x03DF6010 STR X30, [X31 - 0x20]!
	0x03DF6014 STP X20, X19, [X31 + 0x10]
	0x03DF6018 LDR W20, [X0 + 0x374]
	0x03DF601C MOV W19, W1
	0x03DF6020 BL 0x3DF5E98
	0x03DF6024 ORR W8, W0, W20, 0x0
	0x03DF6028 LSRV W8, W8, W19
	0x03DF602C LDP X20, X19, [X31 + 0x10]
	0x03DF6030 AND W0, W8, 0x1
	0x03DF6034 LDR X30, [X31], #0x20
	0x03DF6038 RET
	0x03DF603C LDR W8, [X0 + 0x374]
	0x03DF6040 LDR W9, [X0 + 0x368]
	0x03DF6044 ORR W8, W9, W8, 0x0
	0x03DF6048 LSRV W8, W8, W1
	0x03DF604C AND W0, W8, 0x1
	0x03DF6050 RET
	0x03DF6054 LDR W8, [X0 + 0x370]
	0x03DF6058 LSRV W8, W8, W1
	0x03DF605C AND W0, W8, 0x1
	0x03DF6060 RET
	0x03DF6064 RET
	0x03DF6068 RET
	0x03DF606C LDR X0, [X0 + 0x378]
	0x03DF6070 RET
	0x03DF6074 STR X1, [X0 + 0x378]
	0x03DF6078 RET
	0x03DF607C LDRB W0, [X0 + 0x380]
	0x03DF6080 RET
	0x03DF6084 AND W8, W1, 0x1
	0x03DF6088 STRB W8, [X0 + 0x380]
	0x03DF608C RET
	0x03DF6090 LDRB W8, [X0 + 0x51]
	0x03DF6094 UBFM W0, W8, 0x2, 0x2
	0x03DF6098 RET
	0x03DF609C STR X30, [X31 - 0x10]!
	0x03DF60A0 CBZ X0, 0x3DF60C8
	0x03DF60A4 LDR W8, [X0 + 0x50]
	0x03DF60A8 ANDS W31, W1, 0x1
	0x03DF60AC MOVZ W9, 0x400
	0x03DF60B0 CSEL W9, W9, W31, NE
	0x03DF60B4 AND W8, W8, 0xFFFFFBFF
	0x03DF60B8 ORR W8, W8, W9, 0x0
	0x03DF60BC STR W8, [X0 + 0x50]
	0x03DF60C0 LDR X30, [X31], #0x10
	0x03DF60C4 RET
	0x03DF60C8 BL 0x1C16F20
	0x03DF60CC LDR X0, [X0 + 0x3A0]
	0x03DF60D0 RET
	0x03DF60D4 STR X1, [X0 + 0x3A0]
	0x03DF60D8 RET
	0x03DF60DC RET
	0x03DF60E0 STR X1, [X0 + 0x3A8]
	0x03DF60E4 RET
	0x03DF60E8 STR X30, [X31 - 0x20]!
	0x03DF60EC STP X20, X19, [X31 + 0x10]
	0x03DF60F0 STR X31, [X31 + 0x8]
	0x03DF60F4 CBZ X1, 0x3DF6144
	0x03DF60F8 LDR X8, [X0]
	0x03DF60FC MOV X19, X1
	0x03DF6100 MOV X20, X0
	0x03DF6104 LDR X9, [X8 + 0x768]
	0x03DF6108 LDR X1, [X8 + 0x770]
	0x03DF610C BLR X9
	0x03DF6110 CBZ X0, 0x3DF6150
	0x03DF6114 CMP X0, X20
	0x03DF6118 B.EQ 0x3DF6128
	0x03DF611C MOV X1, X19
	0x03DF6120 BL 0x3DF60E8
	0x03DF6124 B 0x3DF6140
	0x03DF6128 LDR X8, [X20 + 0x378]
	0x03DF612C ADD X0, X31, 0x8
	0x03DF6130 MOV X1, X19
	0x03DF6134 MOV X2, X31
	0x03DF6138 STR X8, [X31 + 0x8]
	0x03DF613C BL 0x3DF891C
	0x03DF6140 STR X20, [X19 + 0x390]
	0x03DF6144 LDP X20, X19, [X31 + 0x10]
	0x03DF6148 LDR X30, [X31], #0x20
	0x03DF614C RET
	0x03DF6150 ADRP X0, 0x2FD000
	0x03DF6154 LDR X0, [X0 + 0x5B0]
	0x03DF6158 BL 0x1C16D08
	0x03DF615C BL 0x1C16F10
	0x03DF6160 MOV X19, X0
	0x03DF6164 ADRP X0, 0x373000
	0x03DF6168 LDR X0, [X0 + 0xA48]
	0x03DF616C BL 0x1C16D08
	0x03DF6170 MOV X1, X0
	0x03DF6174 MOV X0, X19
	0x03DF6178 MOV X2, X31
	0x03DF617C BL 0x337DF1C
	0x03DF6180 ADRP X0, 0x373000
	0x03DF6184 LDR X0, [X0 + 0xA50]
	0x03DF6188 BL 0x1C16D08
	0x03DF618C MOV X1, X0
	0x03DF6190 MOV X0, X19
	0x03DF6194 BL 0x1C16DEC
	0x03DF6198 SUB X31, X31, 0x30
	0x03DF619C STP X30, X21, [X31 + 0x10]
	0x03DF61A0 STP X20, X19, [X31 + 0x20]
	0x03DF61A4 STR X31, [X31 + 0x8]
	0x03DF61A8 CBZ X2, 0x3DF6218
	0x03DF61AC LDR X8, [X0]
	0x03DF61B0 MOV W21, W1
	0x03DF61B4 MOV X19, X2
	0x03DF61B8 MOV X20, X0
	0x03DF61BC LDR X9, [X8 + 0x768]
	0x03DF61C0 LDR X1, [X8 + 0x770]
	0x03DF61C4 BLR X9
	0x03DF61C8 CMP X0, X20
	0x03DF61CC B.EQ 0x3DF61F8
	0x03DF61D0 LDR X8, [X20]
	0x03DF61D4 MOV X0, X20
	0x03DF61D8 LDR X9, [X8 + 0x768]
	0x03DF61DC LDR X1, [X8 + 0x770]
	0x03DF61E0 BLR X9
	0x03DF61E4 CBZ X0, 0x3DF6214
	0x03DF61E8 MOV W1, W21
	0x03DF61EC MOV X2, X19
	0x03DF61F0 BL 0x3DF6198
	0x03DF61F4 B 0x3DF6214
	0x03DF61F8 LDR X8, [X20 + 0x378]
	0x03DF61FC ADD X0, X31, 0x8
	0x03DF6200 MOV W1, W21
	0x03DF6204 MOV X2, X19
	0x03DF6208 MOV X3, X31
	0x03DF620C STR X8, [X31 + 0x8]
	0x03DF6210 BL 0x3DF89E4
	0x03DF6214 STR X20, [X19 + 0x390]
	0x03DF6218 LDP X20, X19, [X31 + 0x20]
	0x03DF621C LDP X30, X21, [X31 + 0x10]
	0x03DF6220 ADD X31, X31, 0x30
	0x03DF6224 RET
	0x03DF6228 SUB X31, X31, 0x20
	0x03DF622C STP X30, X19, [X31 + 0x10]
	0x03DF6230 STR X31, [X31 + 0x8]
	0x03DF6234 LDR X8, [X0]
	0x03DF6238 MOV X19, X0
	0x03DF623C LDR X9, [X8 + 0x768]
	0x03DF6240 LDR X1, [X8 + 0x770]
	0x03DF6244 BLR X9
	0x03DF6248 CMP X0, X19
	0x03DF624C B.EQ 0x3DF6270
	0x03DF6250 LDR X8, [X19]
	0x03DF6254 MOV X0, X19
	0x03DF6258 LDR X9, [X8 + 0x768]
	0x03DF625C LDR X1, [X8 + 0x770]
	0x03DF6260 BLR X9
	0x03DF6264 CBZ X0, 0x3DF6284
	0x03DF6268 BL 0x3DF6228
	0x03DF626C B 0x3DF6284
	0x03DF6270 LDR X8, [X19 + 0x378]
	0x03DF6274 ADD X0, X31, 0x8
	0x03DF6278 MOV X1, X31
	0x03DF627C STR X8, [X31 + 0x8]
	0x03DF6280 BL 0x3DF92C4
	0x03DF6284 LDP X30, X19, [X31 + 0x10]
	0x03DF6288 ADD X31, X31, 0x20
	0x03DF628C RET
	0x03DF6290 B 0x3DF6294
	0x03DF6294 STR X30, [X31 - 0x20]!
	0x03DF6298 STP X20, X19, [X31 + 0x10]
	0x03DF629C STR X31, [X31 + 0x8]
	0x03DF62A0 LDR X8, [X0]
	0x03DF62A4 MOV W19, W1
	0x03DF62A8 MOV X20, X0
	0x03DF62AC LDR X9, [X8 + 0x768]
	0x03DF62B0 LDR X8, [X8 + 0x770]
	0x03DF62B4 MOV X1, X8
	0x03DF62B8 BLR X9
	0x03DF62BC CMP X0, X20
	0x03DF62C0 B.EQ 0x3DF62E8
	0x03DF62C4 LDR X8, [X20]
	0x03DF62C8 MOV X0, X20
	0x03DF62CC LDR X9, [X8 + 0x768]
	0x03DF62D0 LDR X1, [X8 + 0x770]
	0x03DF62D4 BLR X9
	0x03DF62D8 CBZ X0, 0x3DF6300
	0x03DF62DC MOV W1, W19
	0x03DF62E0 BL 0x3DF6294
	0x03DF62E4 B 0x3DF6300
	0x03DF62E8 LDR X8, [X20 + 0x378]
	0x03DF62EC ADD X0, X31, 0x8
	0x03DF62F0 MOV W1, W19
	0x03DF62F4 MOV X2, X31
	0x03DF62F8 STR X8, [X31 + 0x8]
	0x03DF62FC BL 0x3DF98E4
	0x03DF6300 LDP X20, X19, [X31 + 0x10]
	0x03DF6304 LDR X30, [X31], #0x20
	0x03DF6308 RET
	0x03DF630C SUB X31, X31, 0x20
	0x03DF6310 STP X30, X19, [X31 + 0x10]
	0x03DF6314 STR X31, [X31 + 0x8]
	0x03DF6318 LDR X8, [X0]
	0x03DF631C MOV X19, X0
	0x03DF6320 LDR X9, [X8 + 0x768]
	0x03DF6324 LDR X1, [X8 + 0x770]
	0x03DF6328 BLR X9
	0x03DF632C CMP X0, X19
	0x03DF6330 B.EQ 0x3DF6354
	0x03DF6334 LDR X8, [X19]
	0x03DF6338 MOV X0, X19
	0x03DF633C LDR X9, [X8 + 0x768]
	0x03DF6340 LDR X1, [X8 + 0x770]
	0x03DF6344 BLR X9
	0x03DF6348 CBZ X0, 0x3DF6368
	0x03DF634C BL 0x3DF630C
	0x03DF6350 B 0x3DF6368
	0x03DF6354 LDR X8, [X19 + 0x378]
	0x03DF6358 ADD X0, X31, 0x8
	0x03DF635C MOV X1, X31
	0x03DF6360 STR X8, [X31 + 0x8]
	0x03DF6364 BL 0x3DF8994
	0x03DF6368 LDP X30, X19, [X31 + 0x10]
	0x03DF636C ADD X31, X31, 0x20
	0x03DF6370 RET
	0x03DF6374 STR X30, [X31 - 0x20]!
	0x03DF6378 STP X20, X19, [X31 + 0x10]
	0x03DF637C STR X31, [X31 + 0x8]
	0x03DF6380 LDR X8, [X0]
	0x03DF6384 MOV X19, X1
	0x03DF6388 MOV X20, X0
	0x03DF638C LDR X9, [X8 + 0x768]
	0x03DF6390 LDR X8, [X8 + 0x770]
	0x03DF6394 MOV X1, X8
	0x03DF6398 BLR X9
	0x03DF639C CMP X0, X20
	0x03DF63A0 B.EQ 0x3DF63C8
	0x03DF63A4 LDR X8, [X20]
	0x03DF63A8 MOV X0, X20
	0x03DF63AC LDR X9, [X8 + 0x768]
	0x03DF63B0 LDR X1, [X8 + 0x770]
	0x03DF63B4 BLR X9
	0x03DF63B8 CBZ X0, 0x3DF63E4
	0x03DF63BC MOV X1, X19
	0x03DF63C0 BL 0x3DF6374
	0x03DF63C4 B 0x3DF63E8
	0x03DF63C8 LDR X8, [X20 + 0x378]
	0x03DF63CC ADD X0, X31, 0x8
	0x03DF63D0 MOV X1, X19
	0x03DF63D4 MOV X2, X31
	0x03DF63D8 STR X8, [X31 + 0x8]
	0x03DF63DC BL 0x3DF9944
	0x03DF63E0 B 0x3DF63E8
	0x03DF63E4 MOVN W0, 0x0
	0x03DF63E8 LDP X20, X19, [X31 + 0x10]
	0x03DF63EC LDR X30, [X31], #0x20
	0x03DF63F0 RET
	0x03DF63F4 SUB X31, X31, 0x70
	0x03DF63F8 STR X30, [X31 + 0x40]
	0x03DF63FC STP X22, X21, [X31 + 0x50]
	0x03DF6400 STP X20, X19, [X31 + 0x60]
	0x03DF6404 ADRP X21, 0x5F2000
	0x03DF6408 LDRB W8, [X21 + 0x26F]
	0x03DF640C MOV X19, X1
	0x03DF6410 MOV X20, X0
	0x03DF6414 TBNZ X8, 0x0, 0x3DF6450
	0x03DF6418 ADRP X0, 0x328000
	0x03DF641C LDR X0, [X0 + 0xB18]
	0x03DF6420 BL 0x1C16CF4
	0x03DF6424 ADRP X0, 0x328000
	0x03DF6428 LDR X0, [X0 + 0xB28]
	0x03DF642C BL 0x1C16CF4
	0x03DF6430 ADRP X0, 0x328000
	0x03DF6434 LDR X0, [X0 + 0xB38]
	0x03DF6438 BL 0x1C16CF4
	0x03DF643C ADRP X0, 0x328000
	0x03DF6440 LDR X0, [X0 + 0xB50]
	0x03DF6444 BL 0x1C16CF4
	0x03DF6448 MOVZ W8, 0x1
	0x03DF644C STRB W8, [X21 + 0x26F]
	0x03DF6450 STP X31, X31, [X31 + 0x20]
	0x03DF6454 STR X31, [X31 + 0x30]
	0x03DF6458 STR X31, [X31 + 0x48]
	0x03DF645C CBZ X19, 0x3DF6520
	0x03DF6460 ADRP X8, 0x328000
	0x03DF6464 LDR X8, [X8 + 0xB50]
	0x03DF6468 ADRP X22, 0x328000
	0x03DF646C ADRP X21, 0x328000
	0x03DF6470 MOV X0, X19
	0x03DF6474 LDR X1, [X8]
	0x03DF6478 LDR X22, [X22 + 0xB28]
	0x03DF647C LDR X21, [X21 + 0xB18]
	0x03DF6480 ADD X8, X31, 0x8
	0x03DF6484 BL 0x2FDD2BC
	0x03DF6488 LDUR V0, [X31 + 0x8]
	0x03DF648C LDR X8, [X31 + 0x18]
	0x03DF6490 STR V0, [X31 + 0x2]
	0x03DF6494 STR X8, [X31 + 0x30]
	0x03DF6498 LDR X1, [X22]
	0x03DF649C MOV X19, X20
	0x03DF64A0 ADD X0, X31, 0x20
	0x03DF64A4 BL 0x2BBDDA0
	0x03DF64A8 TBZ X0, 0x0, 0x3DF64F8
	0x03DF64AC LDR W20, [X31 + 0x30]
	0x03DF64B0 TBNZ X20, 0x1F, 0x3DF64F4
	0x03DF64B4 CBZ X19, 0x3DF651C
	0x03DF64B8 LDR X8, [X19 + 0x378]
	0x03DF64BC STR X8, [X31 + 0x48]
	0x03DF64C0 ADD X0, X31, 0x48
	0x03DF64C4 MOV X1, X31
	0x03DF64C8 BL 0x3DF8994
	0x03DF64CC CMP W20, W0
	0x03DF64D0 B.GE 0x3DF64F4
	0x03DF64D4 LDR X8, [X19 + 0x378]
	0x03DF64D8 STR X8, [X31 + 0x48]
	0x03DF64DC ADD X0, X31, 0x48
	0x03DF64E0 MOV W1, W20
	0x03DF64E4 MOV X2, X31
	0x03DF64E8 BL 0x3DF98E4
	0x03DF64EC MOV X20, X0
	0x03DF64F0 B 0x3DF6498
	0x03DF64F4 MOV X19, X31
	0x03DF64F8 LDR X1, [X21]
	0x03DF64FC ADD X0, X31, 0x20
	0x03DF6500 BL 0x2BBDD9C
	0x03DF6504 MOV X0, X19
	0x03DF6508 LDP X20, X19, [X31 + 0x60]
	0x03DF650C LDP X22, X21, [X31 + 0x50]
	0x03DF6510 LDR X30, [X31 + 0x40]
	0x03DF6514 ADD X31, X31, 0x70
	0x03DF6518 RET
	0x03DF651C BL 0x1C16F20
	0x03DF6520 BL 0x1C16F20
	0x03DF6524 B 0x3DF6530
	0x03DF6528 B 0x3DF6530
	0x03DF652C B 0x3DF6530
	0x03DF6530 MOV X20, X0
	0x03DF6534 CMP W1, 0x1
	0x03DF6538 B.NE 0x3DF656C
	0x03DF653C MOV X0, X20
	0x03DF6540 BL 0x3EB1AD0
	0x03DF6544 LDR X21, [X0]
	0x03DF6548 BL 0x3EB1AE0
	0x03DF654C ADRP X8, 0x328000
	0x03DF6550 LDR X8, [X8 + 0xB18]
	0x03DF6554 ADD X0, X31, 0x20
	0x03DF6558 LDR X1, [X8]
	0x03DF655C BL 0x2BBDD9C
	0x03DF6560 CBZ X21, 0x3DF6504
	0x03DF6564 MOV X0, X21
	0x03DF6568 BL 0x1C16F18
	0x03DF656C MOV X21, X31
	0x03DF6570 B 0x3DF6578
	0x03DF6574 MOV X20, X0
	0x03DF6578 ADRP X8, 0x328000
	0x03DF657C LDR X8, [X8 + 0xB18]
	0x03DF6580 LDR X1, [X8]
	0x03DF6584 ADD X0, X31, 0x20
	0x03DF6588 BL 0x2BBDD9C
	0x03DF658C CBNZ X21, 0x3DF6598
	0x03DF6590 MOV X0, X20
	0x03DF6594 BL 0x1D2C690
	0x03DF6598 MOV X0, X21
	0x03DF659C BL 0x1C16F18
	0x03DF65A0 BL 0x1990590
	0x03DF65A4 SUB X31, X31, 0x40
	0x03DF65A8 STP X30, X23, [X31 + 0x10]
	0x03DF65AC STP X22, X21, [X31 + 0x20]
	0x03DF65B0 STP X20, X19, [X31 + 0x30]
	0x03DF65B4 ADRP X22, 0x5F2000
	0x03DF65B8 LDRB W8, [X22 + 0x270]
	0x03DF65BC MOV X19, X2
	0x03DF65C0 MOV X21, X1
	0x03DF65C4 MOV X20, X0
	0x03DF65C8 TBNZ X8, 0x0, 0x3DF65EC
	0x03DF65CC ADRP X0, 0x304000
	0x03DF65D0 LDR X0, [X0 + 0x858]
	0x03DF65D4 BL 0x1C16CF4
	0x03DF65D8 ADRP X0, 0x359000
	0x03DF65DC LDR X0, [X0 + 0x380]
	0x03DF65E0 BL 0x1C16CF4
	0x03DF65E4 MOVZ W8, 0x1
	0x03DF65E8 STRB W8, [X22 + 0x270]
	0x03DF65EC CBZ X21, 0x3DF66A0
	0x03DF65F0 LDR X8, [X21 + 0x378]
	0x03DF65F4 ADD X0, X31, 0x8
	0x03DF65F8 MOV X1, X31
	0x03DF65FC STR X8, [X31 + 0x8]
	0x03DF6600 BL 0x3DF88DC
	0x03DF6604 CBZ X0, 0x3DF6670
	0x03DF6608 ADRP X23, 0x359000
	0x03DF660C LDR X23, [X23 + 0x380]
	0x03DF6610 MOV X22, X0
	0x03DF6614 LDR X8, [X22 + 0x378]
	0x03DF6618 ADD X0, X31, 0x8
	0x03DF661C MOV X1, X21
	0x03DF6620 MOV X2, X31
	0x03DF6624 STR X8, [X31 + 0x8]
	0x03DF6628 BL 0x3DF9944
	0x03DF662C CBZ X19, 0x3DF66A0
	0x03DF6630 LDR X3, [X23]
	0x03DF6634 MOV W2, W0
	0x03DF6638 MOV X0, X19
	0x03DF663C MOV W1, W31
	0x03DF6640 BL 0x2FDD648
	0x03DF6644 CMP X22, X20
	0x03DF6648 B.EQ 0x3DF6688
	0x03DF664C LDR X8, [X22 + 0x378]
	0x03DF6650 ADD X0, X31, 0x8
	0x03DF6654 MOV X1, X31
	0x03DF6658 STR X8, [X31 + 0x8]
	0x03DF665C BL 0x3DF88DC
	0x03DF6660 MOV X21, X22
	0x03DF6664 MOV X22, X0
	0x03DF6668 CBNZ X0, 0x3DF6614
	0x03DF666C B 0x3DF6674
	0x03DF6670 CBZ X19, 0x3DF66A0
	0x03DF6674 LDR W8, [X19 + 0x1C]
	0x03DF6678 MOV W0, W31
	0x03DF667C ADD W8, W8, 0x1
	0x03DF6680 STP W31, W8, [X19 + 0x18]
	0x03DF6684 B 0x3DF668C
	0x03DF6688 MOVZ W0, 0x1
	0x03DF668C LDP X20, X19, [X31 + 0x30]
	0x03DF6690 LDP X22, X21, [X31 + 0x20]
	0x03DF6694 LDP X30, X23, [X31 + 0x10]
	0x03DF6698 ADD X31, X31, 0x40
	0x03DF669C RET
	0x03DF66A0 BL 0x1C16F20
	0x03DF66A4 STR X30, [X31 - 0x20]!
	0x03DF66A8 STP X20, X19, [X31 + 0x10]
	0x03DF66AC ADRP X20, 0x5F2000
	0x03DF66B0 LDRB W8, [X20 + 0x271]
	0x03DF66B4 MOV X19, X0
	0x03DF66B8 TBNZ X8, 0x0, 0x3DF66D0
	0x03DF66BC ADRP X0, 0x325000
	0x03DF66C0 LDR X0, [X0 + 0x898]
	0x03DF66C4 BL 0x1C16CF4
	0x03DF66C8 MOVZ W8, 0x1
	0x03DF66CC STRB W8, [X20 + 0x271]
	0x03DF66D0 STR X31, [X31 + 0x8]
	0x03DF66D4 LDR X8, [X19]
	0x03DF66D8 MOV X0, X19
	0x03DF66DC LDR X9, [X8 + 0x768]
	0x03DF66E0 LDR X1, [X8 + 0x770]
	0x03DF66E4 BLR X9
	0x03DF66E8 CMP X0, X19
	0x03DF66EC B.EQ 0x3DF6738
	0x03DF66F0 LDR X8, [X19]
	0x03DF66F4 MOV X0, X19
	0x03DF66F8 LDR X9, [X8 + 0x768]
	0x03DF66FC LDR X1, [X8 + 0x770]
	0x03DF6700 BLR X9
	0x03DF6704 CBZ X0, 0x3DF6710
	0x03DF6708 BL 0x3DF66A4
	0x03DF670C CBNZ X0, 0x3DF674C
	0x03DF6710 ADRP X19, 0x325000
	0x03DF6714 LDR X19, [X19 + 0x898]
	0x03DF6718 LDR X0, [X19]
	0x03DF671C LDR W8, [X0 + 0xE0]
	0x03DF6720 CBNZ W8, 0x3DF672C
	0x03DF6724 BL 0x1C16DFC
	0x03DF6728 LDR X0, [X19]
	0x03DF672C LDR X8, [X0 + 0xB8]
	0x03DF6730 LDR X0, [X8 + 0x48]
	0x03DF6734 B 0x3DF674C
	0x03DF6738 LDR X8, [X19 + 0x378]
	0x03DF673C ADD X0, X31, 0x8
	0x03DF6740 MOV X1, X31
	0x03DF6744 STR X8, [X31 + 0x8]
	0x03DF6748 BL 0x3DF99A8
	0x03DF674C LDP X20, X19, [X31 + 0x10]
	0x03DF6750 LDR X30, [X31], #0x20
	0x03DF6754 RET
	0x03DF6758 SUB X31, X31, 0x20
	0x03DF675C STP X30, X19, [X31 + 0x10]
	0x03DF6760 LDR X8, [X0 + 0x378]
	0x03DF6764 MOV X19, X0
	0x03DF6768 ADD X0, X31, 0x8
	0x03DF676C MOV X1, X31
	0x03DF6770 STR X8, [X31 + 0x8]
	0x03DF6774 BL 0x3DF88DC
	0x03DF6778 CBZ X0, 0x3DF67AC
	0x03DF677C LDR X8, [X19 + 0x378]
	0x03DF6780 ADD X0, X31, 0x8
	0x03DF6784 MOV X1, X31
	0x03DF6788 STR X8, [X31 + 0x8]
	0x03DF678C BL 0x3DF88DC
	0x03DF6790 CBZ X0, 0x3DF67B8
	0x03DF6794 LDR X8, [X0 + 0x378]
	0x03DF6798 ADD X0, X31, 0x8
	0x03DF679C MOV X1, X19
	0x03DF67A0 MOV X2, X31
	0x03DF67A4 STR X8, [X31 + 0x8]
	0x03DF67A8 BL 0x3DF95E0
	0x03DF67AC LDP X30, X19, [X31 + 0x10]
	0x03DF67B0 ADD X31, X31, 0x20
	0x03DF67B4 RET
	0x03DF67B8 BL 0x1C16F20
	0x03DF67BC SUB X31, X31, 0x20
	0x03DF67C0 STP X30, X19, [X31 + 0x10]
	0x03DF67C4 LDR X8, [X0 + 0x378]
	0x03DF67C8 MOV X19, X0
	0x03DF67CC ADD X0, X31, 0x8
	0x03DF67D0 MOV X1, X31
	0x03DF67D4 STR X8, [X31 + 0x8]
	0x03DF67D8 BL 0x3DF88DC
	0x03DF67DC CBZ X0, 0x3DF6810
	0x03DF67E0 LDR X8, [X19 + 0x378]
	0x03DF67E4 ADD X0, X31, 0x8
	0x03DF67E8 MOV X1, X31
	0x03DF67EC STR X8, [X31 + 0x8]
	0x03DF67F0 BL 0x3DF88DC
	0x03DF67F4 CBZ X0, 0x3DF681C
	0x03DF67F8 LDR X8, [X0 + 0x378]
	0x03DF67FC ADD X0, X31, 0x8
	0x03DF6800 MOV X1, X19
	0x03DF6804 MOV X2, X31
	0x03DF6808 STR X8, [X31 + 0x8]
	0x03DF680C BL 0x3DF9774
	0x03DF6810 LDP X30, X19, [X31 + 0x10]
	0x03DF6814 ADD X31, X31, 0x20
	0x03DF6818 RET
	0x03DF681C BL 0x1C16F20
	0x03DF6820 SUB X31, X31, 0x30
	0x03DF6824 STP X30, X21, [X31 + 0x10]
	0x03DF6828 STP X20, X19, [X31 + 0x20]
	0x03DF682C CBZ X1, 0x3DF68FC
	0x03DF6830 LDR X8, [X0 + 0x378]
	0x03DF6834 MOV X19, X1
	0x03DF6838 MOV X20, X0
	0x03DF683C ADD X0, X31, 0x8
	0x03DF6840 MOV X1, X31
	0x03DF6844 STR X8, [X31 + 0x8]
	0x03DF6848 BL 0x3DF88DC
	0x03DF684C CBZ X0, 0x3DF68C8
	0x03DF6850 LDR X8, [X19 + 0x378]
	0x03DF6854 ADD X0, X31, 0x8
	0x03DF6858 MOV X1, X31
	0x03DF685C STR X8, [X31 + 0x8]
	0x03DF6860 BL 0x3DF88DC
	0x03DF6864 LDR X8, [X20 + 0x378]
	0x03DF6868 MOV X21, X0
	0x03DF686C ADD X0, X31, 0x8
	0x03DF6870 MOV X1, X31
	0x03DF6874 STR X8, [X31 + 0x8]
	0x03DF6878 BL 0x3DF88DC
	0x03DF687C CMP X21, X0
	0x03DF6880 B.NE 0x3DF68C8
	0x03DF6884 LDR X8, [X20 + 0x378]
	0x03DF6888 ADD X0, X31, 0x8
	0x03DF688C MOV X1, X31
	0x03DF6890 STR X8, [X31 + 0x8]
	0x03DF6894 BL 0x3DF88DC
	0x03DF6898 CBZ X0, 0x3DF6944
	0x03DF689C LDR X8, [X0 + 0x378]
	0x03DF68A0 ADD X0, X31, 0x8
	0x03DF68A4 MOV X1, X20
	0x03DF68A8 MOV X2, X19
	0x03DF68AC MOV X3, X31
	0x03DF68B0 STR X8, [X31 + 0x8]
	0x03DF68B4 BL 0x3DF980C
	0x03DF68B8 LDP X20, X19, [X31 + 0x20]
	0x03DF68BC LDP X30, X21, [X31 + 0x10]
	0x03DF68C0 ADD X31, X31, 0x30
	0x03DF68C4 RET
	0x03DF68C8 ADRP X0, 0x305000
	0x03DF68CC LDR X0, [X0 + 0x578]
	0x03DF68D0 BL 0x1C16D08
	0x03DF68D4 BL 0x1C16F10
	0x03DF68D8 MOV X19, X0
	0x03DF68DC ADRP X0, 0x373000
	0x03DF68E0 LDR X0, [X0 + 0xA58]
	0x03DF68E4 BL 0x1C16D08
	0x03DF68E8 MOV X1, X0
	0x03DF68EC MOV X0, X19
	0x03DF68F0 MOV X2, X31
	0x03DF68F4 BL 0x3314A68
	0x03DF68F8 B 0x3DF692C
	0x03DF68FC ADRP X0, 0x302000
	0x03DF6900 LDR X0, [X0 + 0x528]
	0x03DF6904 BL 0x1C16D08
	0x03DF6908 BL 0x1C16F10
	0x03DF690C MOV X19, X0
	0x03DF6910 ADRP X0, 0x373000
	0x03DF6914 LDR X0, [X0 + 0xA60]
	0x03DF6918 BL 0x1C16D08
	0x03DF691C MOV X1, X0
	0x03DF6920 MOV X0, X19
	0x03DF6924 MOV X2, X31
	0x03DF6928 BL 0x330E100
	0x03DF692C ADRP X0, 0x373000
	0x03DF6930 LDR X0, [X0 + 0xA68]
	0x03DF6934 BL 0x1C16D08
	0x03DF6938 MOV X1, X0
	0x03DF693C MOV X0, X19
	0x03DF6940 BL 0x1C16DEC
	0x03DF6944 BL 0x1C16F20
	0x03DF6948 SUB X31, X31, 0x20
	0x03DF694C STP X30, X19, [X31 + 0x10]
	0x03DF6950 LDR X8, [X0 + 0x378]
	0x03DF6954 MOV X19, X0
	0x03DF6958 ADD X0, X31, 0x8
	0x03DF695C MOV X1, X31
	0x03DF6960 STR X8, [X31 + 0x8]
	0x03DF6964 BL 0x3DF88DC
	0x03DF6968 CBZ X0, 0x3DF699C
	0x03DF696C LDR X8, [X19 + 0x378]
	0x03DF6970 ADD X0, X31, 0x8
	0x03DF6974 MOV X1, X31
	0x03DF6978 STR X8, [X31 + 0x8]
	0x03DF697C BL 0x3DF88DC
	0x03DF6980 CBZ X0, 0x3DF69A8
	0x03DF6984 LDR X8, [X0 + 0x378]
	0x03DF6988 ADD X0, X31, 0x8
	0x03DF698C MOV X1, X19
	0x03DF6990 MOV X2, X31
	0x03DF6994 STR X8, [X31 + 0x8]
	0x03DF6998 BL 0x3DF8E64
	0x03DF699C LDP X30, X19, [X31 + 0x10]
	0x03DF69A0 ADD X31, X31, 0x20
	0x03DF69A4 RET
	0x03DF69A8 BL 0x1C16F20
	0x03DF69AC STR X30, [X31 - 0x20]!
	0x03DF69B0 STP X20, X19, [X31 + 0x10]
	0x03DF69B4 LDR X8, [X0 + 0x378]
	0x03DF69B8 MOV X19, X1
	0x03DF69BC ADD X0, X31, 0x8
	0x03DF69C0 MOV X1, X31
	0x03DF69C4 STR X8, [X31 + 0x8]
	0x03DF69C8 BL 0x3DF88DC
	0x03DF69CC MOV X20, X0
	0x03DF69D0 CBZ X0, 0x3DF6A0C
	0x03DF69D4 CBZ X19, 0x3DF6A1C
	0x03DF69D8 LDR X8, [X19 + 0x18]
	0x03DF69DC LDR X0, [X19 + 0x40]
	0x03DF69E0 LDR X2, [X19 + 0x28]
	0x03DF69E4 MOV X1, X20
	0x03DF69E8 BLR X8
	0x03DF69EC TBNZ X0, 0x0, 0x3DF6A0C

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X21+40]
	016 Move X22, 0x5F4000
	017 Move X20, X2
	018 Move X19, X1
	019 Move [X31+88], X8
	020 Move W8, [X22+618]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {42}
	025 Move X0, 0x372000
	026 Move X0, [X0+1160]
	027 Call 0x1C17CF4
	028 Move X0, 0x372000
	029 Move X0, [X0+1168]
	030 Call 0x1C17CF4
	031 Move X0, 0x372000
	032 Move X0, [X0+1176]
	033 Call 0x1C17CF4
	034 Move X0, 0x328000
	035 Move X0, [X0+288]
	036 Call 0x1C17CF4
	037 Move X0, 0x372000
	038 Move X0, [X0+1184]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+618], W8
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Move [X31+80], X31
	044 Move [X31+48], V0
	045 Move [X31+56], V0
	046 Move [X31], X31
	047 Compare X19, 0
	048 JumpIfEqual {852}
	049 Compare X20, 0
	050 JumpIfEqual {834}
	051 Move X0, [X20+16]
	052 Compare X0, 0
	053 JumpIfEqual {852}
	054 Move X8, 0x372000
	055 Move X8, [X8+1184]
	056 Move X22, 0x372000
	057 Move X23, 0x328000
	058 Move X20, 0x372000
	059 Move X1, [X8]
	060 Move X22, [X22+1168]
	061 Move X23, [X23+288]
	062 Move X20, [X20+1160]
	063 Add X8, X31, 8
	064 Call List`1<StyleValue>.GetEnumerator, X0
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 Move X8, [X31+40]
	068 Move W24, 32
	069 Move W25, 2
	070 Move X26, -52805632
	071 Move W27, 2
	072 Move X29, -52805632
	073 NotImplemented "Instruction MOVK not yet implemented."
	074 NotImplemented "Instruction MOVK not yet implemented."
	075 Add X26, X26, 1454
	076 NotImplemented "Instruction MOVK not yet implemented."
	077 Or W28, W31, 0xFFFDFFFD
	078 Move [X31+48], V0
	079 Move [X31+56], V1
	080 Move [X31+80], X8
	081 Add X29, X29, 1394
	082 Move X1, [X22]
	083 Add X0, X31, 48
	084 Call Enumerator<StyleValue>.MoveNext, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {831}
	089 Move W8, [X31+64]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract W8, W8, 0x70000
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction ADR not yet implemented."
	095 Move W10, [X26]
	096 Add X9, X9, X10
	097 CallNoReturn X9
	098 Move X8, [X19]
	099 Move X1, [X23]
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move X0, X19
	110 Move W2, W31
	111 Call 0x1C5D788
	112 Add W9, W8, W28
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction ADR not yet implemented."
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Add X8, X8, X10
	117 CallNoReturn X8
	118 Move X8, [X19]
	119 Move X1, [X23]
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 Compare X9, 0
	122 JumpIfEqual {129}
	123 Move X10, [X8+176]
	124 Add X10, X10, 8
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Subtract X9, X9, 1
	128 Add X10, X10, 16
	129 Move W2, 4
	130 Move X0, X19
	131 Call 0x1C5D788
	132 NotImplemented "Instruction CMP not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X8, [X19]
	135 Move X1, [X23]
	136 NotImplemented "Instruction LDRH not yet implemented."
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move W2, 5
	146 Move X0, X19
	147 Call 0x1C5D788
	148 Move X8, [X19]
	149 Move X1, [X23]
	150 NotImplemented "Instruction LDRH not yet implemented."
	151 Compare X9, 0
	152 JumpIfEqual {159}
	153 Move X10, [X8+176]
	154 Add X10, X10, 8
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Subtract X9, X9, 1
	158 Add X10, X10, 16
	159 Move W2, 37
	160 Move X0, X19
	161 Call 0x1C5D788
	162 Move X8, [X19]
	163 Move X1, [X23]
	164 NotImplemented "Instruction LDRH not yet implemented."
	165 Compare X9, 0
	166 JumpIfEqual {173}
	167 Move X10, [X8+176]
	168 Add X10, X10, 8
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Subtract X9, X9, 1
	172 Add X10, X10, 16
	173 Move W2, 11
	174 Move X0, X19
	175 Call 0x1C5D788
	176 Move X8, [X19]
	177 Move X1, [X23]
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Compare X9, 0
	180 JumpIfEqual {187}
	181 Move X10, [X8+176]
	182 Add X10, X10, 8
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Subtract X9, X9, 1
	186 Add X10, X10, 16
	187 Move W2, 3
	188 Move X0, X19
	189 Call 0x1C5D788
	190 Move X8, [X19]
	191 Move X1, [X23]
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 10
	202 Move X0, X19
	203 Call 0x1C5D788
	204 Move X8, [X19]
	205 Move X1, [X23]
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 Compare X9, 0
	208 JumpIfEqual {215}
	209 Move X10, [X8+176]
	210 Add X10, X10, 8
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Subtract X9, X9, 1
	214 Add X10, X10, 16
	215 Move W2, 2
	216 Move X0, X19
	217 Call 0x1C5D788
	218 Move X8, [X19]
	219 Move X1, [X23]
	220 NotImplemented "Instruction LDRH not yet implemented."
	221 Compare X9, 0
	222 JumpIfEqual {229}
	223 Move X10, [X8+176]
	224 Add X10, X10, 8
	225 NotImplemented "Instruction LDUR not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Subtract X9, X9, 1
	228 Add X10, X10, 16
	229 Move W2, 27
	230 Move X0, X19
	231 Call 0x1C5D788
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move X8, [X19]
	234 Move X1, [X23]
	235 NotImplemented "Instruction LDRH not yet implemented."
	236 Compare X9, 0
	237 JumpIfEqual {244}
	238 Move X10, [X8+176]
	239 Add X10, X10, 8
	240 NotImplemented "Instruction LDUR not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Subtract X9, X9, 1
	243 Add X10, X10, 16
	244 Move W2, 14
	245 Move X0, X19
	246 Call 0x1C5D788
	247 Move W9, [X10]
	248 Add W9, W9, 5
	249 Add X8, X8, W9
	250 Add X0, X8, 312
	251 Move X8, [X0]
	252 Move X1, [X0+8]
	253 Move X0, X19
	254 NotImplemented "Instruction BLR not yet implemented."
	255 Add X0, X31, 0
	256 Move X1, X31
	257 Call StyleValues.set_borderColor, X0, X1
	258 Move W9, [X10]
	259 Add W9, W9, 37
	260 Add X8, X8, W9
	261 Add X0, X8, 312
	262 Move X8, [X0]
	263 Move X1, [X0+8]
	264 Move X0, X19
	265 NotImplemented "Instruction BLR not yet implemented."
	266 Add X0, X31, 0
	267 Move X1, X31
	268 Call StyleValues.set_unityBackgroundImageTintColor, X0, X1
	269 Move X8, [X19]
	270 Move X1, [X23]
	271 NotImplemented "Instruction LDRH not yet implemented."
	272 Compare X9, 0
	273 JumpIfEqual {280}
	274 Move X10, [X8+176]
	275 Add X10, X10, 8
	276 NotImplemented "Instruction LDUR not yet implemented."
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Subtract X9, X9, 1
	279 Add X10, X10, 16
	280 Move W2, 31
	281 Move X0, X19
	282 Call 0x1C5D788
	283 Move X8, [X19]
	284 Move X1, [X23]
	285 NotImplemented "Instruction LDRH not yet implemented."
	286 Compare X9, 0
	287 JumpIfEqual {294}
	288 Move X10, [X8+176]
	289 Add X10, X10, 8
	290 NotImplemented "Instruction LDUR not yet implemented."
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Subtract X9, X9, 1
	293 Add X10, X10, 16
	294 Move W2, 29
	295 Move X0, X19
	296 Call 0x1C5D788
	297 Move X8, [X19]
	298 Move X1, [X23]
	299 NotImplemented "Instruction LDRH not yet implemented."
	300 Compare X9, 0
	301 JumpIfEqual {308}
	302 Move X10, [X8+176]
	303 Add X10, X10, 8
	304 NotImplemented "Instruction LDUR not yet implemented."
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Subtract X9, X9, 1
	307 Add X10, X10, 16
	308 Move W2, 23
	309 Move X0, X19
	310 Call 0x1C5D788
	311 Move X8, [X19]
	312 Move X1, [X23]
	313 NotImplemented "Instruction LDRH not yet implemented."
	314 Compare X9, 0
	315 JumpIfEqual {322}
	316 Move X10, [X8+176]
	317 Add X10, X10, 8
	318 NotImplemented "Instruction LDUR not yet implemented."
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Subtract X9, X9, 1
	321 Add X10, X10, 16
	322 Move W2, 13
	323 Move X0, X19
	324 Call 0x1C5D788
	325 Move X8, [X19]
	326 Move X1, [X23]
	327 NotImplemented "Instruction LDRH not yet implemented."
	328 Compare X9, 0
	329 JumpIfEqual {336}
	330 Move X10, [X8+176]
	331 Add X10, X10, 8
	332 NotImplemented "Instruction LDUR not yet implemented."
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Subtract X9, X9, 1
	335 Add X10, X10, 16
	336 Move W2, 24
	337 Move X0, X19
	338 Call 0x1C5D788
	339 Move X8, [X19]
	340 Move X1, [X23]
	341 NotImplemented "Instruction LDRH not yet implemented."
	342 Compare X9, 0
	343 JumpIfEqual {350}
	344 Move X10, [X8+176]
	345 Add X10, X10, 8
	346 NotImplemented "Instruction LDUR not yet implemented."
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Subtract X9, X9, 1
	349 Add X10, X10, 16
	350 Move W2, 21
	351 Move X0, X19
	352 Call 0x1C5D788
	353 Move X8, [X19]
	354 Move X1, [X23]
	355 NotImplemented "Instruction LDRH not yet implemented."
	356 Compare X9, 0
	357 JumpIfEqual {364}
	358 Move X10, [X8+176]
	359 Add X10, X10, 8
	360 NotImplemented "Instruction LDUR not yet implemented."
	361 NotImplemented "Instruction CMP not yet implemented."
	362 Subtract X9, X9, 1
	363 Add X10, X10, 16
	364 Move W2, 8
	365 Move X0, X19
	366 Call 0x1C5D788
	367 Move X8, [X19]
	368 Move X1, [X23]
	369 NotImplemented "Instruction LDRH not yet implemented."
	370 Compare X9, 0
	371 JumpIfEqual {378}
	372 Move X10, [X8+176]
	373 Add X10, X10, 8
	374 NotImplemented "Instruction LDUR not yet implemented."
	375 NotImplemented "Instruction CMP not yet implemented."
	376 Subtract X9, X9, 1
	377 Add X10, X10, 16
	378 Move W2, 30
	379 Move X0, X19
	380 Call 0x1C5D788
	381 Move X8, [X19]
	382 Move X1, [X23]
	383 NotImplemented "Instruction LDRH not yet implemented."
	384 Compare X9, 0
	385 JumpIfEqual {392}
	386 Move X10, [X8+176]
	387 Add X10, X10, 8
	388 NotImplemented "Instruction LDUR not yet implemented."
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Subtract X9, X9, 1
	391 Add X10, X10, 16
	392 Move W2, 12
	393 Move X0, X19
	394 Call 0x1C5D788
	395 Move X8, [X19]
	396 Move X1, [X23]
	397 NotImplemented "Instruction LDRH not yet implemented."
	398 Compare X9, 0
	399 JumpIfEqual {406}
	400 Move X10, [X8+176]
	401 Add X10, X10, 8
	402 NotImplemented "Instruction LDUR not yet implemented."
	403 NotImplemented "Instruction CMP not yet implemented."
	404 Subtract X9, X9, 1
	405 Add X10, X10, 16
	406 Move W2, 19
	407 Move X0, X19
	408 Call 0x1C5D788
	409 Move X8, [X19]
	410 Move X1, [X23]
	411 NotImplemented "Instruction LDRH not yet implemented."
	412 Compare X9, 0
	413 JumpIfEqual {420}
	414 Move X10, [X8+176]
	415 Add X10, X10, 8
	416 NotImplemented "Instruction LDUR not yet implemented."
	417 NotImplemented "Instruction CMP not yet implemented."
	418 Subtract X9, X9, 1
	419 Add X10, X10, 16
	420 Move W2, 6
	421 Move X0, X19
	422 Call 0x1C5D788
	423 Move X8, [X19]
	424 Move X1, [X23]
	425 NotImplemented "Instruction LDRH not yet implemented."
	426 Compare X9, 0
	427 JumpIfEqual {434}
	428 Move X10, [X8+176]
	429 Add X10, X10, 8
	430 NotImplemented "Instruction LDUR not yet implemented."
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Subtract X9, X9, 1
	433 Add X10, X10, 16
	434 Move W2, 32
	435 Move X0, X19
	436 Call 0x1C5D788
	437 Move X8, [X19]
	438 Move X1, [X23]
	439 NotImplemented "Instruction LDRH not yet implemented."
	440 Compare X9, 0
	441 JumpIfEqual {448}
	442 Move X10, [X8+176]
	443 Add X10, X10, 8
	444 NotImplemented "Instruction LDUR not yet implemented."
	445 NotImplemented "Instruction CMP not yet implemented."
	446 Subtract X9, X9, 1
	447 Add X10, X10, 16
	448 Move W2, 17
	449 Move X0, X19
	450 Call 0x1C5D788
	451 Move X8, [X19]
	452 Move X1, [X23]
	453 NotImplemented "Instruction LDRH not yet implemented."
	454 Compare X9, 0
	455 JumpIfEqual {462}
	456 Move X10, [X8+176]
	457 Add X10, X10, 8
	458 NotImplemented "Instruction LDUR not yet implemented."
	459 NotImplemented "Instruction CMP not yet implemented."
	460 Subtract X9, X9, 1
	461 Add X10, X10, 16
	462 Move W2, 28
	463 Move X0, X19
	464 Call 0x1C5D788
	465 Move X8, [X19]
	466 Move X1, [X23]
	467 NotImplemented "Instruction LDRH not yet implemented."
	468 Compare X9, 0
	469 JumpIfEqual {476}
	470 Move X10, [X8+176]
	471 Add X10, X10, 8
	472 NotImplemented "Instruction LDUR not yet implemented."
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Subtract X9, X9, 1
	475 Add X10, X10, 16
	476 Move W2, 18
	477 Move X0, X19
	478 Call 0x1C5D788
	479 Move X8, [X19]
	480 Move X1, [X23]
	481 NotImplemented "Instruction LDRH not yet implemented."
	482 Compare X9, 0
	483 JumpIfEqual {490}
	484 Move X10, [X8+176]
	485 Add X10, X10, 8
	486 NotImplemented "Instruction LDUR not yet implemented."
	487 NotImplemented "Instruction CMP not yet implemented."
	488 Subtract X9, X9, 1
	489 Add X10, X10, 16
	490 Move W2, 34
	491 Move X0, X19
	492 Call 0x1C5D788
	493 Move X8, [X19]
	494 Move X1, [X23]
	495 NotImplemented "Instruction LDRH not yet implemented."
	496 Compare X9, 0
	497 JumpIfEqual {504}
	498 Move X10, [X8+176]
	499 Add X10, X10, 8
	500 NotImplemented "Instruction LDUR not yet implemented."
	501 NotImplemented "Instruction CMP not yet implemented."
	502 Subtract X9, X9, 1
	503 Add X10, X10, 16
	504 Move W2, 22
	505 Move X0, X19
	506 Call 0x1C5D788
	507 Move X8, [X19]
	508 Move X1, [X23]
	509 NotImplemented "Instruction LDRH not yet implemented."
	510 Compare X9, 0
	511 JumpIfEqual {518}
	512 Move X10, [X8+176]
	513 Add X10, X10, 8
	514 NotImplemented "Instruction LDUR not yet implemented."
	515 NotImplemented "Instruction CMP not yet implemented."
	516 Subtract X9, X9, 1
	517 Add X10, X10, 16
	518 Move W2, 20
	519 Move X0, X19
	520 Call 0x1C5D788
	521 Move X8, [X19]
	522 Move X1, [X23]
	523 NotImplemented "Instruction LDRH not yet implemented."
	524 Compare X9, 0
	525 JumpIfEqual {532}
	526 Move X10, [X8+176]
	527 Add X10, X10, 8
	528 NotImplemented "Instruction LDUR not yet implemented."
	529 NotImplemented "Instruction CMP not yet implemented."
	530 Subtract X9, X9, 1
	531 Add X10, X10, 16
	532 Move W2, 44
	533 Move X0, X19
	534 Call 0x1C5D788
	535 Move W9, [X10]
	536 Add W9, W9, 11
	537 Add X8, X8, W9
	538 Add X0, X8, 312
	539 Move X8, [X0]
	540 Move X1, [X0+8]
	541 Move X0, X19
	542 NotImplemented "Instruction BLR not yet implemented."
	543 Add X0, X31, 0
	544 Move X1, X31
	545 Call StyleValues.set_borderTopRightRadius, X0, V0
	546 Move W9, [X10]
	547 Add W9, W9, 3
	548 Add X8, X8, W9
	549 Add X0, X8, 312
	550 Move X8, [X0]
	551 Move X1, [X0+8]
	552 Move X0, X19
	553 NotImplemented "Instruction BLR not yet implemented."
	554 Add X0, X31, 0
	555 Move X1, X31
	556 Call StyleValues.set_borderBottomRightRadius, X0, V0
	557 Move W9, [X10]
	558 Add W9, W9, 10
	559 Add X8, X8, W9
	560 Add X0, X8, 312
	561 Move X8, [X0]
	562 Move X1, [X0+8]
	563 Move X0, X19
	564 NotImplemented "Instruction BLR not yet implemented."
	565 Add X0, X31, 0
	566 Move X1, X31
	567 Call StyleValues.set_borderTopLeftRadius, X0, V0
	568 NotImplemented "Instruction LDRSW not yet implemented."
	569 Add X8, X8, X9
	570 Add X0, X8, 312
	571 Move X8, [X0]
	572 Move X1, [X0+8]
	573 Move X0, X19
	574 NotImplemented "Instruction BLR not yet implemented."
	575 Add X0, X31, 0
	576 Move X1, X31
	577 Call StyleValues.set_backgroundColor, X0, X1
	578 Move W9, [X10]
	579 Add W9, W9, 2
	580 Add X8, X8, W9
	581 Add X0, X8, 312
	582 Move X8, [X0]
	583 Move X1, [X0+8]
	584 Move X0, X19
	585 NotImplemented "Instruction BLR not yet implemented."
	586 Add X0, X31, 0
	587 Move X1, X31
	588 Call StyleValues.set_borderBottomLeftRadius, X0, V0
	589 Move W9, [X10]
	590 Add W9, W9, 27
	591 Add X8, X8, W9
	592 Add X0, X8, 312
	593 Move X8, [X0]
	594 Move X1, [X0+8]
	595 Move X0, X19
	596 NotImplemented "Instruction BLR not yet implemented."
	597 Add X0, X31, 0
	598 Move X1, X31
	599 Call StyleValues.set_opacity, X0, V0
	600 Move W9, [X10]
	601 Add W9, W9, 31
	602 Add X8, X8, W9
	603 Add X0, X8, 312
	604 Move X8, [X0]
	605 Move X1, [X0+8]
	606 Move X0, X19
	607 NotImplemented "Instruction BLR not yet implemented."
	608 Add X0, X31, 0
	609 Move X1, X31
	610 Call StyleValues.set_paddingTop, X0, V0
	611 Move W9, [X10]
	612 Add W9, W9, 29
	613 Add X8, X8, W9
	614 Add X0, X8, 312
	615 Move X8, [X0]
	616 Move X1, [X0+8]
	617 Move X0, X19
	618 NotImplemented "Instruction BLR not yet implemented."
	619 Add X0, X31, 0
	620 Move X1, X31
	621 Call StyleValues.set_paddingLeft, X0, V0
	622 Move W9, [X10]
	623 Add W9, W9, 23
	624 Add X8, X8, W9
	625 Add X0, X8, 312
	626 Move X8, [X0]
	627 Move X1, [X0+8]
	628 Move X0, X19
	629 NotImplemented "Instruction BLR not yet implemented."
	630 Add X0, X31, 0
	631 Move X1, X31
	632 Call StyleValues.set_marginRight, X0, V0
	633 Move W9, [X10]
	634 Add W9, W9, 13
	635 Add X8, X8, W9
	636 Add X0, X8, 312
	637 Move X8, [X0]
	638 Move X1, [X0+8]
	639 Move X0, X19
	640 NotImplemented "Instruction BLR not yet implemented."
	641 Add X0, X31, 0
	642 Move X1, X31
	643 Call StyleValues.set_bottom, X0, V0
	644 Move W9, [X10]
	645 Add W9, W9, 24
	646 Add X8, X8, W9
	647 Add X0, X8, 312
	648 Move X8, [X0]
	649 Move X1, [X0+8]
	650 Move X0, X19
	651 NotImplemented "Instruction BLR not yet implemented."
	652 Add X0, X31, 0
	653 Move X1, X31
	654 Call StyleValues.set_marginTop, X0, V0
	655 Move W9, [X10]
	656 Add W9, W9, 21
	657 Add X8, X8, W9
	658 Add X0, X8, 312
	659 Move X8, [X0]
	660 Move X1, [X0+8]
	661 Move X0, X19
	662 NotImplemented "Instruction BLR not yet implemented."
	663 Add X0, X31, 0
	664 Move X1, X31
	665 Call StyleValues.set_marginBottom, X0, V0
	666 Move W9, [X10]
	667 Add W9, W9, 8
	668 Add X8, X8, W9
	669 Add X0, X8, 312
	670 Move X8, [X0]
	671 Move X1, [X0+8]
	672 Move X0, X19
	673 NotImplemented "Instruction BLR not yet implemented."
	674 Add X0, X31, 0
	675 Move X1, X31
	676 Call StyleValues.set_borderRightWidth, X0, V0
	677 Move W9, [X10]
	678 Add W9, W9, 30
	679 Add X8, X8, W9
	680 Add X0, X8, 312
	681 Move X8, [X0]
	682 Move X1, [X0+8]
	683 Move X0, X19
	684 NotImplemented "Instruction BLR not yet implemented."
	685 Add X0, X31, 0
	686 Move X1, X31
	687 Call StyleValues.set_paddingRight, X0, V0
	688 Move W9, [X10]
	689 Add W9, W9, 12
	690 Add X8, X8, W9
	691 Add X0, X8, 312
	692 Move X8, [X0]
	693 Move X1, [X0+8]
	694 Move X0, X19
	695 NotImplemented "Instruction BLR not yet implemented."
	696 Add X0, X31, 0
	697 Move X1, X31
	698 Call StyleValues.set_borderTopWidth, X0, V0
	699 Move W9, [X10]
	700 Add W9, W9, 19
	701 Add X8, X8, W9
	702 Add X0, X8, 312
	703 Move X8, [X0]
	704 Move X1, [X0+8]
	705 Move X0, X19
	706 NotImplemented "Instruction BLR not yet implemented."
	707 Add X0, X31, 0
	708 Move X1, X31
	709 Call StyleValues.set_height, X0, V0
	710 Move W9, [X10]
	711 Add W9, W9, 4
	712 Add X8, X8, W9
	713 Add X0, X8, 312
	714 Move X8, [X0]
	715 Move X1, [X0+8]
	716 Move X0, X19
	717 NotImplemented "Instruction BLR not yet implemented."
	718 Add X0, X31, 0
	719 Move X1, X31
	720 Call StyleValues.set_borderBottomWidth, X0, V0
	721 Move W9, [X10]
	722 Add W9, W9, 6
	723 Add X8, X8, W9
	724 Add X0, X8, 312
	725 Move X8, [X0]
	726 Move X1, [X0+8]
	727 Move X0, X19
	728 NotImplemented "Instruction BLR not yet implemented."
	729 Add X0, X31, 0
	730 Move X1, X31
	731 Call StyleValues.set_borderLeftWidth, X0, V0
	732 Move W9, [X10]
	733 Add W9, W9, 32
	734 Add X8, X8, W9
	735 Add X0, X8, 312
	736 Move X8, [X0]
	737 Move X1, [X0+8]
	738 Move X0, X19
	739 NotImplemented "Instruction BLR not yet implemented."
	740 Add X0, X31, 0
	741 Move X1, X31
	742 Call StyleValues.set_right, X0, V0
	743 Move W9, [X10]
	744 Add W9, W9, 17
	745 Add X8, X8, W9
	746 Add X0, X8, 312
	747 Move X8, [X0]
	748 Move X1, [X0+8]
	749 Move X0, X19
	750 NotImplemented "Instruction BLR not yet implemented."
	751 Add X0, X31, 0
	752 Move X1, X31
	753 Call StyleValues.set_flexGrow, X0, V0
	754 Move W9, [X10]
	755 Add W9, W9, 28
	756 Add X8, X8, W9
	757 Add X0, X8, 312
	758 Move X8, [X0]
	759 Move X1, [X0+8]
	760 Move X0, X19
	761 NotImplemented "Instruction BLR not yet implemented."
	762 Add X0, X31, 0
	763 Move X1, X31
	764 Call StyleValues.set_paddingBottom, X0, V0
	765 Move W9, [X10]
	766 Add W9, W9, 18
	767 Add X8, X8, W9
	768 Add X0, X8, 312
	769 Move X8, [X0]
	770 Move X1, [X0+8]
	771 Move X0, X19
	772 NotImplemented "Instruction BLR not yet implemented."
	773 Add X0, X31, 0
	774 Move X1, X31
	775 Call StyleValues.set_flexShrink, X0, V0
	776 Move W9, [X10]
	777 Add W9, W9, 34
	778 Add X8, X8, W9
	779 Add X0, X8, 312
	780 Move X8, [X0]
	781 Move X1, [X0+8]
	782 Move X0, X19
	783 NotImplemented "Instruction BLR not yet implemented."
	784 Add X0, X31, 0
	785 Move X1, X31
	786 Call StyleValues.set_top, X0, V0
	787 Move W9, [X10]
	788 Add W9, W9, 22
	789 Add X8, X8, W9
	790 Add X0, X8, 312
	791 Move X8, [X0]
	792 Move X1, [X0+8]
	793 Move X0, X19
	794 NotImplemented "Instruction BLR not yet implemented."
	795 Add X0, X31, 0
	796 Move X1, X31
	797 Call StyleValues.set_marginLeft, X0, V0
	798 Move W9, [X10]
	799 Add W9, W9, 20
	800 Add X8, X8, W9
	801 Add X0, X8, 312
	802 Move X8, [X0]
	803 Move X1, [X0+8]
	804 Move X0, X19
	805 NotImplemented "Instruction BLR not yet implemented."
	806 Add X0, X31, 0
	807 Move X1, X31
	808 Call StyleValues.set_left, X0, V0
	809 Move W9, [X10]
	810 Add W9, W9, 44
	811 Add X8, X8, W9
	812 Add X0, X8, 312
	813 Move X8, [X0]
	814 Move X1, [X0+8]
	815 Move X0, X19
	816 NotImplemented "Instruction BLR not yet implemented."
	817 Add X0, X31, 0
	818 Move X1, X31
	819 Call StyleValues.set_width, X0, V0
	820 Move W9, [X10]
	821 Add W9, W9, 14
	822 Add X8, X8, W9
	823 Add X0, X8, 312
	824 Move X8, [X0]
	825 Move X1, [X0+8]
	826 Move X0, X19
	827 NotImplemented "Instruction BLR not yet implemented."
	828 Add X0, X31, 0
	829 Move X1, X31
	830 Call StyleValues.set_color, X0, X1
	831 Move X1, [X20]
	832 Add X0, X31, 48
	833 Call Enumerator<StyleValue>.Dispose, X0
	834 Move X0, [X31]
	835 Move X8, [X21+40]
	836 Move X9, [X31+88]
	837 NotImplemented "Instruction CMP not yet implemented."
	838 Move X20, [X31+176]
	839 Move X19, [X31+184]
	840 Move X22, [X31+160]
	841 Move X21, [X31+168]
	842 Move X24, [X31+144]
	843 Move X23, [X31+152]
	844 Move X26, [X31+128]
	845 Move X25, [X31+136]
	846 Move X28, [X31+112]
	847 Move X27, [X31+120]
	848 Move X29, [X31+96]
	849 Move X30, [X31+104]
	850 Add X31, X31, 192
	851 Return X0
	852 Call 0x1C17F20
	853 Call 0x3EB2B20
	854 Move X22, X20
	855 Move X19, X0
	856 NotImplemented "Instruction CMP not yet implemented."
	857 Move X0, X19
	858 Call 0x3EB2AD0
	859 Move X20, [X0]
	860 Call 0x3EB2AE0
	861 Move X1, [X22]
	862 Add X0, X31, 48
	863 Call Enumerator<StyleValue>.Dispose, X0
	864 Compare X20, 0
	865 JumpIfEqual {834}
	866 Move X0, X20
	867 Call 0x1C17F18
	868 Move X20, X31
	869 Move X19, X0
	870 Move X1, [X22]
	871 Add X0, X31, 48
	872 Call Enumerator<StyleValue>.Dispose, X0
	873 Compare X20, 0
	874 JumpIfNotEqual {877}
	875 Move X0, X19
	876 Call 0x1D2D690
	877 Move X0, X20
	878 Call 0x1C17F18
	879 Call 0x1991590

Method: UnityEngine.UIElements.Experimental.ValueAnimation`1<UnityEngine.UIElements.Experimental.StyleValues> UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(UnityEngine.UIElements.Experimental.StyleValues to, System.Int32 durationMs)

Disassembly:
	0x03DF69F0 LDR X8, [X20 + 0x378]
	0x03DF69F4 ADD X0, X31, 0x8
	0x03DF69F8 MOV X1, X31
	0x03DF69FC STR X8, [X31 + 0x8]
	0x03DF6A00 BL 0x3DF88DC
	0x03DF6A04 MOV X20, X0
	0x03DF6A08 CBNZ X0, 0x3DF69D8
	0x03DF6A0C MOV X0, X20
	0x03DF6A10 LDP X20, X19, [X31 + 0x10]
	0x03DF6A14 LDR X30, [X31], #0x20
	0x03DF6A18 RET
	0x03DF6A1C BL 0x1C16F20
	0x03DF6A20 STR X30, [X31 - 0x30]!
	0x03DF6A24 STP X22, X21, [X31 + 0x10]
	0x03DF6A28 STP X20, X19, [X31 + 0x20]
	0x03DF6A2C CBZ X1, 0x3DF6B5C
	0x03DF6A30 LDR X8, [X0 + 0x3A0]
	0x03DF6A34 LDR X9, [X1 + 0x3A0]
	0x03DF6A38 MOV X20, X1
	0x03DF6A3C MOV X19, X0
	0x03DF6A40 CMP X8, X9
	0x03DF6A44 B.EQ 0x3DF6A50
	0x03DF6A48 MOV X19, X31
	0x03DF6A4C B 0x3DF6B44
	0x03DF6A50 MOV W21, W31
	0x03DF6A54 MOV X0, X19
	0x03DF6A58 LDR X8, [X0 + 0x378]
	0x03DF6A5C ADD X0, X31, 0x8
	0x03DF6A60 MOV X1, X31
	0x03DF6A64 ADD W21, W21, 0x1
	0x03DF6A68 STR X8, [X31 + 0x8]
	0x03DF6A6C BL 0x3DF88DC
	0x03DF6A70 CBNZ X0, 0x3DF6A58
	0x03DF6A74 MOV W22, W31
	0x03DF6A78 MOV X0, X20
	0x03DF6A7C LDR X8, [X0 + 0x378]
	0x03DF6A80 ADD X0, X31, 0x8
	0x03DF6A84 MOV X1, X31
	0x03DF6A88 ADD W22, W22, 0x1
	0x03DF6A8C STR X8, [X31 + 0x8]
	0x03DF6A90 BL 0x3DF88DC
	0x03DF6A94 CBNZ X0, 0x3DF6A7C
	0x03DF6A98 CMP W21, W22
	0x03DF6A9C B.LE 0x3DF6ACC
	0x03DF6AA0 CBZ X19, 0x3DF6B58
	0x03DF6AA4 LDR X8, [X19 + 0x378]
	0x03DF6AA8 ADD X0, X31, 0x8
	0x03DF6AAC MOV X1, X31
	0x03DF6AB0 SUB W21, W21, 0x1
	0x03DF6AB4 STR X8, [X31 + 0x8]
	0x03DF6AB8 BL 0x3DF88DC
	0x03DF6ABC CMP W21, W22
	0x03DF6AC0 MOV X19, X0
	0x03DF6AC4 B.GT 0x3DF6AA0
	0x03DF6AC8 B 0x3DF6AFC
	0x03DF6ACC CMP W22, W21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x5F3000
	009 Move X23, 0x374000
	010 Move W8, [X22+619]
	011 Move X23, [X23+2560]
	012 Move W19, W2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x374000
	020 Move X0, [X0+2568]
	021 Call 0x1C17CF4
	022 Move X0, 0x374000
	023 Move X0, [X0+2576]
	024 Call 0x1C17CF4
	025 Move X0, 0x374000
	026 Move X0, [X0+2560]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+619], W8
	030 Move X0, [X23]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X22, X0
	034 Call <>c__DisplayClass492_0..ctor, X0
	035 Compare X22, 0
	036 JumpIfEqual {66}
	037 Move X24, 0x374000
	038 Move X23, 0x374000
	039 Move X24, [X24+2568]
	040 Move X23, [X23+2576]
	041 Move X0, X22
	042 Move [X0+24], X21
	043 Move [X0-8], X20
	044 Compare X21, 0
	045 JumpIfNotEqual {48}
	046 Move X1, X31
	047 Call StyleValues.Values, X0
	048 Move X0, [X24]
	049 Call 0x1C17F10
	050 Move X2, [X23]
	051 Move X1, X22
	052 Move X3, X31
	053 Move X21, X0
	054 Call Func`2<Object, StyleValues>..ctor, X0, X1, X2
	055 Move X2, [X22+24]
	056 Move X0, X20
	057 Move X1, X21
	058 Move W3, W19
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X24, [X31+16]
	064 Move X23, [X31+24]
	065 Move X30, [X31+64]
	066 Call 0x1C17F20

Method: UnityEngine.UIElements.Experimental.ValueAnimation`1<UnityEngine.UIElements.Experimental.StyleValues> Start(System.Func`2<UnityEngine.UIElements.VisualElement, UnityEngine.UIElements.Experimental.StyleValues> fromValueGetter, UnityEngine.UIElements.Experimental.StyleValues to, System.Int32 durationMs)

Disassembly:
	0x03DF6AD0 B.LE 0x3DF6AFC
	0x03DF6AD4 CBZ X20, 0x3DF6B58
	0x03DF6AD8 LDR X8, [X20 + 0x378]
	0x03DF6ADC ADD X0, X31, 0x8
	0x03DF6AE0 MOV X1, X31
	0x03DF6AE4 SUB W22, W22, 0x1
	0x03DF6AE8 STR X8, [X31 + 0x8]
	0x03DF6AEC BL 0x3DF88DC
	0x03DF6AF0 CMP W22, W21
	0x03DF6AF4 MOV X20, X0
	0x03DF6AF8 B.GT 0x3DF6AD4
	0x03DF6AFC CMP X19, X20
	0x03DF6B00 B.EQ 0x3DF6B44
	0x03DF6B04 CBZ X19, 0x3DF6B58
	0x03DF6B08 LDR X8, [X19 + 0x378]
	0x03DF6B0C ADD X0, X31, 0x8
	0x03DF6B10 MOV X1, X31
	0x03DF6B14 STR X8, [X31 + 0x8]
	0x03DF6B18 BL 0x3DF88DC
	0x03DF6B1C CBZ X20, 0x3DF6B58
	0x03DF6B20 LDR X8, [X20 + 0x378]
	0x03DF6B24 MOV X19, X0
	0x03DF6B28 ADD X0, X31, 0x8
	0x03DF6B2C MOV X1, X31
	0x03DF6B30 STR X8, [X31 + 0x8]
	0x03DF6B34 BL 0x3DF88DC
	0x03DF6B38 MOV X20, X0
	0x03DF6B3C CMP X19, X0
	0x03DF6B40 B.NE 0x3DF6B04
	0x03DF6B44 MOV X0, X19
	0x03DF6B48 LDP X20, X19, [X31 + 0x20]
	0x03DF6B4C LDP X22, X21, [X31 + 0x10]
	0x03DF6B50 LDR X30, [X31], #0x30
	0x03DF6B54 RET
	0x03DF6B58 BL 0x1C16F20
	0x03DF6B5C ADRP X0, 0x302000
	0x03DF6B60 LDR X0, [X0 + 0x528]
	0x03DF6B64 BL 0x1C16D08
	0x03DF6B68 BL 0x1C16F10
	0x03DF6B6C MOV X19, X0
	0x03DF6B70 ADRP X0, 0x327000
	0x03DF6B74 LDR X0, [X0 + 0x928]
	0x03DF6B78 BL 0x1C16D08
	0x03DF6B7C MOV X1, X0
	0x03DF6B80 MOV X0, X19
	0x03DF6B84 MOV X2, X31
	0x03DF6B88 BL 0x330E100
	0x03DF6B8C ADRP X0, 0x373000
	0x03DF6B90 LDR X0, [X0 + 0xA70]
	0x03DF6B94 BL 0x1C16D08
	0x03DF6B98 MOV X1, X0
	0x03DF6B9C MOV X0, X19
	0x03DF6BA0 BL 0x1C16DEC
	0x03DF6BA4 STR X30, [X31 - 0x20]!
	0x03DF6BA8 STP X20, X19, [X31 + 0x10]
	0x03DF6BAC ADRP X19, 0x5F2000
	0x03DF6BB0 LDRB W8, [X19 + 0x273]
	0x03DF6BB4 MOV X20, X0
	0x03DF6BB8 TBNZ X8, 0x0, 0x3DF6BD0
	0x03DF6BBC ADRP X0, 0x326000
	0x03DF6BC0 LDR X0, [X0 + 0xE80]
	0x03DF6BC4 BL 0x1C16CF4
	0x03DF6BC8 MOVZ W8, 0x1
	0x03DF6BCC STRB W8, [X19 + 0x273]
	0x03DF6BD0 LDR X19, [X20 + 0x3A0]
	0x03DF6BD4 CBZ X19, 0x3DF6C20
	0x03DF6BD8 ADRP X10, 0x326000
	0x03DF6BDC LDR X8, [X19]
	0x03DF6BE0 LDR X10, [X10 + 0xE80]
	0x03DF6BE4 LDRH W9, [X8 + 0x12E]
	0x03DF6BE8 LDR X1, [X10]
	0x03DF6BEC CBZ X9, 0x3DF6C10
	0x03DF6BF0 LDR X10, [X8 + 0xB0]
	0x03DF6BF4 ADD X10, X10, 0x8
	0x03DF6BF8 LDUR X11, [X10 - 0x8]
	0x03DF6BFC CMP X11, X1
	0x03DF6C00 B.EQ 0x3DF6C44
	0x03DF6C04 SUBS X9, X9, 0x1
	0x03DF6C08 ADD X10, X10, 0x10
	0x03DF6C0C B.NE 0x3DF6BF8
	0x03DF6C10 MOV X0, X19
	0x03DF6C14 MOV W2, W31
	0x03DF6C18 BL 0x1C5C788
	0x03DF6C1C B 0x3DF6C50
	0x03DF6C20 LDR X8, [X20 + 0x388]
	0x03DF6C24 CBZ X8, 0x3DF6C34
	0x03DF6C28 MOV X20, X8
	0x03DF6C2C LDR X8, [X8 + 0x388]
	0x03DF6C30 CBNZ X8, 0x3DF6C28
	0x03DF6C34 MOV X0, X20
	0x03DF6C38 LDP X20, X19, [X31 + 0x10]
	0x03DF6C3C LDR X30, [X31], #0x20
	0x03DF6C40 RET
	0x03DF6C44 LDRSW X9, [X10]
	0x03DF6C48 ADD X8, X8, X9, 0x4, LSL
	0x03DF6C4C ADD X0, X8, 0x138

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X26, 0x5F3000
	013 Move X25, 0x374000
	014 Move X23, 0x371000
	015 Move X24, 0x374000
	016 Move W8, [X26+620]
	017 Move X25, [X25+2584]
	018 Move X23, [X23+1208]
	019 Move X24, [X24+2592]
	020 Move W19, W3
	021 Move X20, X2
	022 Move X21, X1
	023 Move X22, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {54}
	028 Move X0, 0x374000
	029 Move X0, [X0+2600]
	030 Call 0x1C17CF4
	031 Move X0, 0x374000
	032 Move X0, [X0+2584]
	033 Call 0x1C17CF4
	034 Move X0, 0x371000
	035 Move X0, [X0+1208]
	036 Call 0x1C17CF4
	037 Move X0, 0x374000
	038 Move X0, [X0+2608]
	039 Call 0x1C17CF4
	040 Move X0, 0x374000
	041 Move X0, [X0+2592]
	042 Call 0x1C17CF4
	043 Move X0, 0x374000
	044 Move X0, [X0+2616]
	045 Call 0x1C17CF4
	046 Move X0, 0x374000
	047 Move X0, [X0+2624]
	048 Call 0x1C17CF4
	049 Move X0, 0x326000
	050 Move X0, [X0+2200]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X26+620], W8
	054 Move X28, 0x374000
	055 Move X28, [X28+2608]
	056 Move X0, [X25]
	057 Move X27, 0x374000
	058 Move X26, 0x374000
	059 Move X25, 0x326000
	060 Move X27, [X27+2600]
	061 Move X26, [X26+2616]
	062 Move X25, [X25+2200]
	063 Call 0x1C17F10
	064 Move X2, [X23]
	065 Move X1, X31
	066 Move X3, X31
	067 Move X23, X0
	068 Call Func`4<StyleValues, StyleValues, Single, StyleValues>..ctor, X0, X1, X2
	069 Move X0, [X24]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X2, [X28]
	075 Move X24, 0x374000
	076 Move X24, [X24+2624]
	077 Move X0, X22
	078 Move X1, X23
	079 Call 0x273F700, X0, X1
	080 Move X8, [X27]
	081 Move X22, X0
	082 Move X0, X8
	083 Call 0x1C17F10
	084 Move X2, [X26]
	085 Move X1, X31
	086 Move X3, X31
	087 Move X23, X0
	088 Call Action`2<Object, StyleValues>..ctor, X0, X1, X2
	089 Move X0, [X25]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X5, [X24]
	095 Move X0, X22
	096 Move X1, X21
	097 Move X2, X20
	098 Move W3, W19
	099 Move X4, X23
	100 Move X20, [X31+80]
	101 Move X19, [X31+88]
	102 Move X22, [X31+64]
	103 Move X21, [X31+72]
	104 Move X24, [X31+48]
	105 Move X23, [X31+56]
	106 Move X26, [X31+32]
	107 Move X25, [X31+40]
	108 Move X28, [X31+16]
	109 Move X27, [X31+24]
	110 Move X30, [X31+96]
	111 Call 0x22AB210, X0, X1, X2, X3, X4
	112 Return X0

Method: System.Void DirtyNextParentWithEventCallback()

Disassembly:
	0x03DF6C50 LDP X2, X1, [X0]
	0x03DF6C54 MOV X0, X19
	0x03DF6C58 LDP X20, X19, [X31 + 0x10]
	0x03DF6C5C LDR X30, [X31], #0x20
	0x03DF6C60 BR X2
	0x03DF6C64 SUB X31, X31, 0x20
	0x03DF6C68 STP X30, X19, [X31 + 0x10]
	0x03DF6C6C MOV X19, X31
	0x03DF6C70 CBZ X0, 0x3DF6C98
	0x03DF6C74 LDRB W8, [X0 + 0x380]
	0x03DF6C78 LDR X9, [X0 + 0x378]
	0x03DF6C7C MOV X1, X31
	0x03DF6C80 CMP W8, 0x0
	0x03DF6C84 CSEL X19, X19, X0, EQ
	0x03DF6C88 ADD X0, X31, 0x8
	0x03DF6C8C STR X9, [X31 + 0x8]
	0x03DF6C90 BL 0x3DF88DC
	0x03DF6C94 CBNZ X0, 0x3DF6C74
	0x03DF6C98 MOV X0, X19
	0x03DF6C9C LDP X30, X19, [X31 + 0x10]
	0x03DF6CA0 ADD X31, X31, 0x20
	0x03DF6CA4 RET
	0x03DF6CA8 STP X30, X23, [X31 - 0x30]!
	0x03DF6CAC STP X22, X21, [X31 + 0x10]
	0x03DF6CB0 STP X20, X19, [X31 + 0x20]
	0x03DF6CB4 ADRP X20, 0x5F2000
	0x03DF6CB8 LDRB W8, [X20 + 0x274]
	0x03DF6CBC MOV X19, X0
	0x03DF6CC0 TBNZ X8, 0x0, 0x3DF6CE4
	0x03DF6CC4 ADRP X0, 0x326000
	0x03DF6CC8 LDR X0, [X0 + 0xE8]
	0x03DF6CCC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5F3000
	005 Move W8, [X20+621]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x326000
	012 Move X0, [X0+2200]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+621], W8
	016 Move X20, [X19+864]
	017 Compare X20, 0
	018 JumpIfEqual {35}
	019 Move W8, [X19+856]
	020 Move W9, [X20+860]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X19, 0x326000
	023 Move X19, [X19+2200]
	024 Move X0, [X19]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X19]
	030 Move X8, [X0+184]
	031 Move W9, [X8+64]
	032 Add W9, W9, 1
	033 Move [X8+64], W9
	034 Move [X20+860], W9
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return 

Method: System.Void SetAsNextParentWithEventCallback()

Disassembly:
	0x03DEC898 MOVZ W2, 0x1B
	0x03DEC89C MOV X0, X21
	0x03DEC8A0 MOV X1, X8
	0x03DEC8A4 BL 0x1C5C788
	0x03DEC8A8 B 0x3DEC8BC
	0x03DEC8AC LDR W8, [X11]
	0x03DEC8B0 ADD W8, W8, 0x1B
	0x03DEC8B4 ADD X8, X9, W8, 0x4, SXTW
	0x03DEC8B8 ADD X0, X8, 0x138
	0x03DEC8BC LDP X8, X3, [X0]
	0x03DEC8C0 MOV X0, X21
	0x03DEC8C4 MOV X1, X22
	0x03DEC8C8 MOV X2, X23
	0x03DEC8CC BLR X8
	0x03DEC8D0 FMOV S0, W31
	0x03DEC8D4 MOV X0, X31
	0x03DEC8D8 BL 0x3DFED98
	0x03DEC8DC LDR X9, [X21]
	0x03DEC8E0 LDR X8, [X24]
	0x03DEC8E4 MOV X22, X0
	0x03DEC8E8 AND X23, X1, 0x0
	0x03DEC8EC LDRH W10, [X9 + 0x12E]
	0x03DEC8F0 CBZ X10, 0x3DEC914
	0x03DEC8F4 LDR X11, [X9 + 0xB0]
	0x03DEC8F8 ADD X11, X11, 0x8
	0x03DEC8FC LDUR X12, [X11 - 0x8]
	0x03DEC900 CMP X12, X8
	0x03DEC904 B.EQ 0x3DEC928
	0x03DEC908 SUBS X10, X10, 0x1
	0x03DEC90C ADD X11, X11, 0x10
	0x03DEC910 B.NE 0x3DEC8FC
	0x03DEC914 MOVZ W2, 0x1C
	0x03DEC918 MOV X0, X21
	0x03DEC91C MOV X1, X8
	0x03DEC920 BL 0x1C5C788
	0x03DEC924 B 0x3DEC938
	0x03DEC928 LDR W8, [X11]
	0x03DEC92C ADD W8, W8, 0x1C
	0x03DEC930 ADD X8, X9, W8, 0x4, SXTW
	0x03DEC934 ADD X0, X8, 0x138
	0x03DEC938 LDP X8, X3, [X0]
	0x03DEC93C MOV X0, X21
	0x03DEC940 MOV X1, X22
	0x03DEC944 MOV X2, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5FD000
	006 Move W8, [X20+622]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x330000
	013 Move X0, [X0+2200]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+622], W8
	017 Move W8, [X19+860]
	018 Compare W8, 0
	019 JumpIfEqual {25}
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Return 
	025 Move X20, 0x330000
	026 Move X20, [X20+2200]
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X8, [X0+184]
	034 Add X8, X8, 64
	035 Move W9, [X8]
	036 Add W9, W9, 1
	037 Move [X8], W9
	038 Move X21, [X19+864]
	039 Move [X19+860], W9
	040 Compare X21, 0
	041 JumpIfEqual {20}
	042 Move W10, [X19+856]
	043 Move W11, [X21+860]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W10, [X0+224]
	046 Compare W10, 0
	047 JumpIfNotEqual {53}
	048 Call 0x1C17DFC
	049 Move X8, [X20]
	050 Move X8, [X8+184]
	051 Add X8, X8, 64
	052 Move W9, [X8]
	053 Add W9, W9, 1
	054 Move [X8], W9
	055 Move [X21+860], W9

Method: System.Boolean GetCachedNextParentWithEventCallback(out UnityEngine.UIElements.VisualElement nextParent)

Disassembly:
	0x03DF6CD0 ADRP X0, 0x326000
	0x03DF6CD4 LDR X0, [X0 + 0xF0]
	0x03DF6CD8 BL 0x1C16CF4
	0x03DF6CDC MOVZ W8, 0x1
	0x03DF6CE0 STRB W8, [X20 + 0x274]
	0x03DF6CE4 LDR X0, [X19 + 0x398]
	0x03DF6CE8 CBZ X0, 0x3DF6D94
	0x03DF6CEC LDR W8, [X0 + 0x18]
	0x03DF6CF0 ADRP X22, 0x326000
	0x03DF6CF4 LDR X22, [X22 + 0xF0]

ISIL:
	001 Move X8, [X0+864]
	002 Move [X1], X8
	003 Compare X8, 0
	004 JumpIfEqual {10}
	005 Move W8, [X8+860]
	006 Move W9, [X0+856]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Return X0
	010 Move W0, W31
	011 Return X0

Method: UnityEngine.UIElements.VisualElement get_nextParentWithEventCallback()

Disassembly:
	0x03DF6CF8 CMP W8, 0x0
	0x03DF6CFC B.LE 0x3DF6D74
	0x03DF6D00 MOV W20, W31
	0x03DF6D04 LDR X2, [X22]
	0x03DF6D08 MOV W1, W20
	0x03DF6D0C LDP X20, X19, [X31 + 0x20]
	0x03DF6D10 LDP X22, X21, [X31 + 0x10]
	0x03DF6D14 LDP X30, X23, [X31], #0x30
	0x03DF6D18 B 0x301BCCC
	0x03DF6D1C LDR X0, [X19 + 0x398]
	0x03DF6D20 CBZ X0, 0x3DF6D94
	0x03DF6D24 MOVZ W20, 0x1
	0x03DF6D28 LDR W8, [X0 + 0x18]
	0x03DF6D2C SUB W21, W20, 0x1
	0x03DF6D30 CMP W21, W8
	0x03DF6D34 B.GE 0x3DF6D64
	0x03DF6D38 LDR X2, [X22]
	0x03DF6D3C MOV W1, W21
	0x03DF6D40 BL 0x301BCCC
	0x03DF6D44 CMP X23, X0
	0x03DF6D48 B.EQ 0x3DF6D5C
	0x03DF6D4C LDR X0, [X19 + 0x398]
	0x03DF6D50 ADD W20, W20, 0x1
	0x03DF6D54 CBNZ X0, 0x3DF6D28
	0x03DF6D58 B 0x3DF6D94
	0x03DF6D5C LDR X0, [X19 + 0x398]
	0x03DF6D60 CBZ X0, 0x3DF6D94
	0x03DF6D64 LDR W8, [X0 + 0x18]
	0x03DF6D68 SUB W8, W8, 0x1
	0x03DF6D6C CMP W21, W8
	0x03DF6D70 B.LT 0x3DF6D04
	0x03DF6D74 MOV X23, X19
	0x03DF6D78 LDR X19, [X19 + 0x388]
	0x03DF6D7C CBNZ X19, 0x3DF6D1C
	0x03DF6D80 LDP X20, X19, [X31 + 0x20]
	0x03DF6D84 LDP X22, X21, [X31 + 0x10]
	0x03DF6D88 MOV X0, X31
	0x03DF6D8C LDP X30, X23, [X31], #0x30
	0x03DF6D90 RET
	0x03DF6D94 BL 0x1C16F20
	0x03DF6D98 STP X30, X21, [X31 - 0x20]!
	0x03DF6D9C STP X20, X19, [X31 + 0x10]
	0x03DF6DA0 ADRP X20, 0x5F2000
	0x03DF6DA4 LDRB W8, [X20 + 0x275]
	0x03DF6DA8 MOV X19, X0
	0x03DF6DAC TBNZ X8, 0x0, 0x3DF6DD0
	0x03DF6DB0 ADRP X0, 0x326000
	0x03DF6DB4 LDR X0, [X0 + 0xE8]
	0x03DF6DB8 BL 0x1C16CF4
	0x03DF6DBC ADRP X0, 0x326000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, [X0+864]
	007 Move X19, X0
	008 Compare X20, 0
	009 JumpIfEqual {13}
	010 Move W8, [X20+860]
	011 Move W9, [X19+856]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X8, [X19+888]
	014 Add X0, X31, 8
	015 Move X1, X31
	016 Move [X31+8], X8
	017 Call Hierarchy.get_parent, X0
	018 Compare X0, 0
	019 JumpIfEqual {38}
	020 Move X20, X0
	021 Move W8, [X20+860]
	022 Compare W8, 0
	023 JumpIfNotEqual {40}
	024 Move X21, [X20+864]
	025 Compare X21, 0
	026 JumpIfEqual {30}
	027 Move W8, [X21+860]
	028 Move W9, [X20+856]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X20+888]
	031 Add X0, X31, 8
	032 Move X1, X31
	033 Move [X31+8], X8
	034 Call Hierarchy.get_parent, X0
	035 Move X20, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {21}
	038 Move X20, X31
	039 Move [X19+864], X31
	040 Move X0, X19
	041 Move X1, X20
	042 Move X2, X20
	043 Call VisualElement.PropagateCachedNextParentWithEventCallback, X0, X1, X2
	044 Move X0, X19
	045 Move X1, X21
	046 Move X2, X20
	047 Call VisualElement.PropagateCachedNextParentWithEventCallback, X0, X1, X2
	048 Move X20, X21
	049 Move X0, X20
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X30, [X31+16]
	053 Move X21, [X31+24]
	054 Add X31, X31, 48
	055 Return X0

Method: System.Void PropagateCachedNextParentWithEventCallback(UnityEngine.UIElements.VisualElement nextParent, UnityEngine.UIElements.VisualElement stopParent)

Disassembly:
	0x03DF6DC0 LDR X0, [X0 + 0xF0]
	0x03DF6DC4 BL 0x1C16CF4
	0x03DF6DC8 MOVZ W8, 0x1
	0x03DF6DCC STRB W8, [X20 + 0x275]
	0x03DF6DD0 LDR X0, [X19 + 0x388]
	0x03DF6DD4 CBZ X0, 0x3DF6E6C
	0x03DF6DD8 ADRP X21, 0x326000
	0x03DF6DDC LDR X21, [X21 + 0xF0]
	0x03DF6DE0 MOVN W20, 0x0
	0x03DF6DE4 LDR X8, [X0 + 0x398]
	0x03DF6DE8 CBZ X8, 0x3DF6E78
	0x03DF6DEC LDR W9, [X8 + 0x18]
	0x03DF6DF0 ADD W1, W20, 0x1
	0x03DF6DF4 CMP W1, W9
	0x03DF6DF8 B.GE 0x3DF6E24
	0x03DF6DFC LDR X2, [X21]
	0x03DF6E00 MOV X0, X8
	0x03DF6E04 BL 0x301BCCC
	0x03DF6E08 CMP X0, X19
	0x03DF6E0C B.EQ 0x3DF6E20
	0x03DF6E10 LDR X0, [X19 + 0x388]
	0x03DF6E14 ADD W20, W20, 0x1
	0x03DF6E18 CBNZ X0, 0x3DF6DE4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move [X31+8], X31
	006 Move X19, X2
	007 Move X20, X1
	008 Compare X0, 0
	009 JumpIfEqual {25}
	010 Move [X0+864], X20
	011 Compare X20, 0
	012 JumpIfEqual {25}
	013 Move W8, [X20+860]
	014 Move X9, [X0+888]
	015 Move X1, X31
	016 Move [X0+856], W8
	017 Add X0, X31, 8
	018 Move [X31+8], X9
	019 Call Hierarchy.get_parent, X0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 
	025 Call 0x1C17F20

Method: System.Int32 get_eventCallbackCategories()

Disassembly:
	0x03DF6E1C B 0x3DF6E78
	0x03DF6E20 LDR X0, [X19 + 0x388]

ISIL:
	001 Move W0, [X0+872]
	002 Return X0

Method: System.Void set_eventCallbackCategories(System.Int32 value)

Disassembly:
	0x03DF6E24 ADDS W31, W20, 0x1
	0x03DF6E28 B.EQ 0x3DF6E6C
	0x03DF6E2C CBZ X0, 0x3DF6E78
	0x03DF6E30 LDR X0, [X0 + 0x398]
	0x03DF6E34 CBZ X0, 0x3DF6E78
	0x03DF6E38 LDR X2, [X21]
	0x03DF6E3C MOV W1, W20
	0x03DF6E40 BL 0x301BCCC
	0x03DF6E44 CBZ X0, 0x3DF6E78
	0x03DF6E48 LDR X8, [X0 + 0x398]
	0x03DF6E4C CBZ X8, 0x3DF6E78
	0x03DF6E50 LDR W9, [X8 + 0x18]
	0x03DF6E54 CMP W9, 0x0
	0x03DF6E58 B.LE 0x3DF6E6C
	0x03DF6E5C LDR X2, [X21]
	0x03DF6E60 SUB W1, W9, 0x1
	0x03DF6E64 MOV X0, X8
	0x03DF6E68 B 0x3DF6E40
	0x03DF6E6C LDP X20, X19, [X31 + 0x10]
	0x03DF6E70 LDP X30, X21, [X31], #0x20
	0x03DF6E74 RET
	0x03DF6E78 BL 0x1C16F20
	0x03DF6E7C CBZ X1, 0x3DF6ED4
	0x03DF6E80 LDR X8, [X1 + 0x388]
	0x03DF6E84 CMP X8, 0x0
	0x03DF6E88 CSEL X9, X1, X8, EQ
	0x03DF6E8C MOV X8, X9
	0x03DF6E90 LDR X9, [X9 + 0x388]
	0x03DF6E94 CBZ X9, 0x3DF6EA0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+872]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Xor W8, W8, W1
	007 Move TEMP, 2768
	008 Not TEMP
	009 Move W9, TEMP
	010 Move X19, X0
	011 Move W20, W1
	012 And W31, W8, W9
	013 Move X0, X19
	014 Call VisualElement.SetAsNextParentWithEventCallback, X0
	015 Move X0, [X19+928]
	016 Compare X0, 0
	017 JumpIfEqual {27}
	018 Move X8, [X0]
	019 Move W2, 0x10000
	020 Move X1, X19
	021 Move X9, [X8+824]
	022 Move X3, [X8+832]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move W8, [X19+876]
	025 Or W8, W8, W20
	026 Move [X19+876], W8
	027 Move [X19+872], W20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return 

Method: System.Int32 get_eventCallbackParentCategories()

Disassembly:
	0x03DF6E98 LDRB W10, [X8 + 0x50]
	0x03DF6E9C TBZ X10, 0x7, 0x3DF6E8C
	0x03DF6EA0 LDR X9, [X0 + 0x388]
	0x03DF6EA4 CBZ X9, 0x3DF6ED4
	0x03DF6EA8 MOV X1, X0
	0x03DF6EAC LDR X9, [X9 + 0x388]
	0x03DF6EB0 CMP X9, X8
	0x03DF6EB4 B.EQ 0x3DF6ED8
	0x03DF6EB8 CBZ X9, 0x3DF6EC8
	0x03DF6EBC LDRB W10, [X9 + 0x50]
	0x03DF6EC0 MOV X2, X9
	0x03DF6EC4 TBNZ X10, 0x7, 0x3DF6ECC
	0x03DF6EC8 MOV X2, X1
	0x03DF6ECC MOV X1, X2
	0x03DF6ED0 CBNZ X9, 0x3DF6EAC
	0x03DF6ED4 RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+928]
	004 Compare X8, 0
	005 JumpIfEqual {18}
	006 Move W8, [X0+80]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 32
	010 Compare TEMP, 32
	011 JumpIfNotEqual {17}
	012 Move X0, X19
	013 Call VisualElement.UpdateCallbackParentCategories, X0
	014 Move W8, [X19+80]
	015 And W8, W8, 0xFFFFFFDF
	016 Move [X19+80], W8
	017 Move W0, [X19+876]
	018 Move TEMP, 0
	019 Not TEMP
	020 Move W0, TEMP
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return X0

Method: System.Boolean get_isEventCallbackParentCategoriesDirty()

Disassembly:
	0x03DF6ED8 MOV X0, X1
	0x03DF6EDC RET
	0x03DF6EE0 SUB X31, X31, 0x50

ISIL:
	001 Move W8, [X0+80]
	002 Move W0, W8
	003 ShiftRight W0, 5
	004 And W0, W0, 31
	005 Return X0

Method: System.Void set_isEventCallbackParentCategoriesDirty(System.Boolean value)

Disassembly:
	0x03DF6F9C BL 0x3DC9BD8
	0x03DF6FA0 AND W9, W0, 0x7FFFFFFF
	0x03DF6FA4 MOVZ W8, 0x7F800000
	0x03DF6FA8 CMP W9, W8
	0x03DF6FAC B.HI 0x3DF6FD0
	0x03DF6FB0 UBFM X9, X0, 0x20, 0x3E
	0x03DF6FB4 CMP W9, W8
	0x03DF6FB8 B.HI 0x3DF6FD0
	0x03DF6FBC MOVZ W9, 0x1
	0x03DF6FC0 AND W8, W1, 0x7FFFFFFF
	0x03DF6FC4 MOVK W9, 0x7F800000
	0x03DF6FC8 CMP W8, W9

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+80]
	005 And W31, W1, 1
	006 Move W9, 32
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFFFDF
	009 Or W8, W8, W9
	010 Move [X0+80], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Void UpdateCallbackParentCategories()

Disassembly:
	0x03DF6EE4 STR X30, [X31 + 0x40]
	0x03DF6EE8 ADD X0, X0, 0x2C0
	0x03DF6EEC ADD X8, X31, 0x8
	0x03DF6EF0 MOV X1, X31
	0x03DF6EF4 STP X31, X31, [X31 + 0x20]
	0x03DF6EF8 STR X31, [X31 + 0x30]
	0x03DF6EFC BL 0x3DC9B70
	0x03DF6F00 LDR X8, [X31 + 0x18]
	0x03DF6F04 LDUR V0, [X31 + 0x8]
	0x03DF6F08 STR X8, [X31 + 0x30]
	0x03DF6F0C AND W9, W8, 0x7FFFFFFF
	0x03DF6F10 MOVZ W8, 0x7F800000
	0x03DF6F14 CMP W9, W8
	0x03DF6F18 STR V0, [X31 + 0x2]
	0x03DF6F1C B.HI 0x3DF6F5C
	0x03DF6F20 LDR W9, [X31 + 0x2C]
	0x03DF6F24 AND W9, W9, 0x7FFFFFFF
	0x03DF6F28 CMP W9, W8
	0x03DF6F2C B.HI 0x3DF6F5C
	0x03DF6F30 LDR W8, [X31 + 0x28]
	0x03DF6F34 MOVZ W9, 0x7F800000
	0x03DF6F38 AND W8, W8, 0x7FFFFFFF
	0x03DF6F3C CMP W8, W9
	0x03DF6F40 B.HI 0x3DF6F5C
	0x03DF6F44 LDR W8, [X31 + 0x20]
	0x03DF6F48 MOVZ W9, 0x1
	0x03DF6F4C MOVK W9, 0x7F800000
	0x03DF6F50 AND W8, W8, 0x7FFFFFFF
	0x03DF6F54 CMP W8, W9
	0x03DF6F58 B.CC 0x3DF6F78
	0x03DF6F5C ADD X8, X31, 0x8
	0x03DF6F60 MOV X0, X31
	0x03DF6F64 BL 0x3DFD838
	0x03DF6F68 LDUR V0, [X31 + 0x8]
	0x03DF6F6C LDR X8, [X31 + 0x18]
	0x03DF6F70 STR V0, [X31 + 0x2]
	0x03DF6F74 STR X8, [X31 + 0x30]
	0x03DF6F78 ADD X0, X31, 0x20
	0x03DF6F7C MOV X1, X31
	0x03DF6F80 BL 0x3DFDAF4
	0x03DF6F84 LDR X30, [X31 + 0x40]
	0x03DF6F88 ADD X31, X31, 0x50
	0x03DF6F8C RET
	0x03DF6F90 STP X30, X19, [X31 - 0x10]!
	0x03DF6F94 ADD X0, X0, 0x2C0
	0x03DF6F98 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+872]
	007 Move W9, [X0+80]
	008 Move X19, X0
	009 Move [X0+876], W8
	010 Move TEMP, X9
	011 And TEMP, TEMP, 128
	012 Compare TEMP, 128
	013 JumpIfNotEqual {17}
	014 Move W9, [X19+880]
	015 Or W8, W9, W8
	016 Move [X19+876], W8
	017 Move X0, X19
	018 Call VisualElement.get_nextParentWithEventCallback, X0
	019 Compare X0, 0
	020 JumpIfEqual {48}
	021 Move W21, [X19+876]
	022 Move X20, X0
	023 Call VisualElement.get_eventCallbackParentCategories, X0
	024 Move X8, [X19+888]
	025 Or W9, W0, W21
	026 Add X0, X31, 8
	027 Move X1, X31
	028 Move [X19+876], W9
	029 Move [X31+8], X8
	030 Call Hierarchy.get_parent, X0
	031 Compare X0, 0
	032 JumpIfEqual {48}
	033 Move X8, [X19+888]
	034 Move [X31+8], X8
	035 Add X0, X31, 8
	036 Move X1, X31
	037 Call Hierarchy.get_parent, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Compare X0, 0
	040 JumpIfEqual {54}
	041 Move W8, [X19+876]
	042 Move W9, [X0+80]
	043 Move X10, [X0+888]
	044 Move [X0+876], W8
	045 And W8, W9, 0xFFFFFFDF
	046 Move [X0+80], W8
	047 Move [X31+8], X10
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X30, [X31+16]
	051 Move X21, [X31+24]
	052 Add X31, X31, 48
	053 Return 
	054 Call 0x1C17F20

Method: System.Boolean HasEventCallbacks(UnityEngine.UIElements.EventCategory eventCategory)

Disassembly:
	0x03DF6FCC B.CC 0x3DF700C
	0x03DF6FD0 ADRP X19, 0x5E2000
	0x03DF6FD4 LDRB W8, [X19 + 0x85B]
	0x03DF6FD8 CBNZ W8, 0x3DF6FF0

ISIL:
	001 Move W8, [X0+872]
	002 NotImplemented "Instruction LSRV not yet implemented."
	003 And W0, W8, 1
	004 Return X0

Method: System.Boolean HasParentEventCallbacksOrDefaultActions(UnityEngine.UIElements.EventCategory eventCategory)

Disassembly:
	0x03DF6FDC ADRP X0, 0x2FD000
	0x03DF6FE0 LDR X0, [X0 + 0x5A0]
	0x03DF6FE4 BL 0x1C16CF4
	0x03DF6FE8 MOVZ W8, 0x1
	0x03DF6FEC STRB W8, [X19 + 0x85B]
	0x03DF6FF0 ADRP X8, 0x2FD000
	0x03DF6FF4 LDR X8, [X8 + 0x5A0]
	0x03DF6FF8 LDR X8, [X8]
	0x03DF6FFC LDR X8, [X8 + 0xB8]
	0x03DF7000 LDP S0, S1, [X8 + 0xC]
	0x03DF7004 LDR V2, [X8 + 0x14]
	0x03DF7008 B 0x3DF701C
	0x03DF700C UBFM X8, X0, 0x20, 0x3F

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, [X0+880]
	006 Move W21, [X0+884]
	007 Move W19, W1
	008 Call VisualElement.get_eventCallbackParentCategories, X0
	009 Or W8, W21, W20
	010 Or W8, W8, W0
	011 NotImplemented "Instruction LSRV not yet implemented."
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 And W0, W8, 1
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Return X0

Method: System.Boolean HasEventCallbacksOrDefaultActions(UnityEngine.UIElements.EventCategory eventCategory)

Disassembly:
	0x03DF269C CMP X11, X1
	0x03DF26A0 B.EQ 0x3DF26E0
	0x03DF26A4 SUBS X9, X9, 0x1
	0x03DF26A8 ADD X10, X10, 0x10
	0x03DF26AC B.NE 0x3DF2698
	0x03DF26B0 MOV X0, X20
	0x03DF26B4 BL 0x1C5C788
	0x03DF26B8 B 0x3DF26F0

ISIL:
	001 Move W8, [X0+880]
	002 Move W9, [X0+884]
	003 Move W10, [X0+872]
	004 Or W8, W9, W8
	005 Or W8, W8, W10
	006 NotImplemented "Instruction LSRV not yet implemented."
	007 And W0, W8, 1
	008 Return X0

Method: System.Boolean HasParentEventCallbacksOrDefaultActionAtTarget(UnityEngine.UIElements.EventCategory eventCategory)

Disassembly:
	0x03DF7010 FMOV S2, W1
	0x03DF7014 FMOV S1, W8
	0x03DF7018 FMOV S0, W0
	0x03DF701C LDP X30, X19, [X31], #0x10
	0x03DF7020 RET
	0x03DF7024 SUB X31, X31, 0x50
	0x03DF7028 STR D8, [X31 + 0x30]
	0x03DF702C STP X30, X19, [X31 + 0x40]
	0x03DF7030 ADD X19, X0, 0x2C0
	0x03DF7034 ADD X8, X31, 0x18
	0x03DF7038 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, [X0+884]
	005 Move W19, W1
	006 Call VisualElement.get_eventCallbackParentCategories, X0
	007 Or W8, W0, W20
	008 NotImplemented "Instruction LSRV not yet implemented."
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 And W0, W8, 1
	012 Move X30, [X31+32]
	013 Return X0

Method: System.Boolean HasEventCallbacksOrDefaultActionAtTarget(UnityEngine.UIElements.EventCategory eventCategory)

Disassembly:
	0x03DF703C MOV X1, X31
	0x03DF7040 BL 0x3DC9B70
	0x03DF7044 LDR V0, [X31 + 0x18]
	0x03DF7048 FCMP S0, 0x0
	0x03DF704C B.NE 0x3DF70DC
	0x03DF7050 MOV X0, X19

ISIL:
	001 Move W8, [X0+884]
	002 Move W9, [X0+872]
	003 Or W8, W9, W8
	004 NotImplemented "Instruction LSRV not yet implemented."
	005 And W0, W8, 1
	006 Return X0

Method: System.Boolean HasDefaultAction(UnityEngine.UIElements.EventCategory eventCategory)

Disassembly:
	0x03DF7054 MOV X1, X31
	0x03DF7058 BL 0x3DC9BD8
	0x03DF705C ADRP X19, 0x5E1000
	0x03DF7060 LDRB W8, [X19 + 0x85B]

ISIL:
	001 Move W8, [X0+880]
	002 NotImplemented "Instruction LSRV not yet implemented."
	003 And W0, W8, 1
	004 Return X0

Method: UnityEngine.UIElements.IExperimentalFeatures get_experimental()

Disassembly:
	0x03DF7064 UBFM X9, X0, 0x20, 0x3F

ISIL:
	001 Return X0

Method: UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures.get_animation()

Disassembly:
	0x03DF7068 FMOV S3, W9

ISIL:
	001 Return X0

Method: UnityEngine.UIElements.VisualElement/Hierarchy get_hierarchy()

Disassembly:
	0x03DF706C FMOV S8, W0
	0x03DF7070 UNIMPLEMENTED

ISIL:
	001 Move X0, [X0+888]
	002 Return X0

Method: System.Void set_hierarchy(UnityEngine.UIElements.VisualElement/Hierarchy value)

Disassembly:
	0x03DF7074 CBNZ W8, 0x3DF7094
	0x03DF7078 ADRP X0, 0x2FC000

ISIL:
	001 Move [X0+888], X1
	002 Return 

Method: System.Boolean get_isRootVisualContainer()

Disassembly:
	0x03DF707C LDR X0, [X0 + 0x5A0]
	0x03DF7080 STR V3, [X31]

ISIL:
	001 Move W0, [X0+896]
	002 Return X0

Method: System.Void set_isRootVisualContainer(System.Boolean value)

Disassembly:
	0x03DF7084 BL 0x1C16CF4
	0x03DF7088 LDR V3, [X31]
	0x03DF708C MOVZ W8, 0x1

ISIL:
	001 And W8, W1, 1
	002 Move [X0+896], W8
	003 Return 

Method: System.Boolean get_disableClipping()

Disassembly:
	0x03DF7090 STRB W8, [X19 + 0x85B]
	0x03DF7094 ADRP X8, 0x2FC000
	0x03DF7098 LDR X8, [X8 + 0x5A0]

ISIL:
	001 Move W8, [X0+81]
	002 Move W0, W8
	003 ShiftRight W0, 2
	004 And W0, W0, 3
	005 Return X0

Method: System.Void set_disableClipping(System.Boolean value)

Disassembly:
	0x03DF709C LDR X8, [X8]
	0x03DF70A0 LDR X8, [X8 + 0xB8]
	0x03DF70A4 LDR V0, [X8 + 0xC]
	0x03DF70A8 LDR V1, [X8 + 0x10]
	0x03DF70AC ADRP X8, 0xFFFFFFFFFCCF2000
	0x03DF70B0 LDR V2, [X8 + 0xF20]
	0x03DF70B4 FSUB S0, S8, S0
	0x03DF70B8 FSUB V1.2S, V3.2S, V1.2S
	0x03DF70BC FMUL S0, S0, S0
	0x00000000 INVALID
	0x03DF70C4 FADD S0, S0, S1
	0x03DF70C8 MOV S1, V1.S[1]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+80]
	005 And W31, W1, 1
	006 Move W9, 1024
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFFBFF
	009 Or W8, W8, W9
	010 Move [X0+80], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Boolean ShouldClip()

Disassembly:
	0x03DEEBC0 ADD X10, X10, 0x10
	0x03DEEBC4 B.NE 0x3DEEBB0
	0x03DEEBC8 MOVZ W2, 0x1D
	0x03DEEBCC MOV X0, X19
	0x03DEEBD0 BL 0x1C5C788
	0x03DEEBD4 B 0x3DEEBE8
	0x03DEEBD8 LDR W9, [X10]
	0x03DEEBDC ADD W9, W9, 0x1D
	0x03DEEBE0 ADD X8, X8, W9, 0x4, SXTW
	0x03DEEBE4 ADD X0, X8, 0x138
	0x03DEEBE8 LDP X8, X1, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Add X0, X0, 704
	005 Move X1, X31
	006 Call ComputedStyle.get_overflow, X0
	007 Compare W0, 0
	008 JumpIfEqual {12}
	009 Move W8, [X19+81]
	010 And W31, W8, 4
	011 NotImplemented "Instruction CSET not yet implemented."
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0

Method: UnityEngine.UIElements.VisualElement get_parent()

Disassembly:
	0x03DECF58 ADD X8, X9, W8, 0x4, SXTW
	0x03DECF5C ADD X0, X8, 0x138

ISIL:
	001 Move X0, [X0+912]
	002 Return X0

Method: UnityEngine.UIElements.BaseVisualElementPanel get_elementPanel()

Disassembly:
	0x03DF70CC FADD S0, S1, S0
	0x03DF70D0 FCMP S0, S2

ISIL:
	001 Move X0, [X0+928]
	002 Return X0

Method: System.Void set_elementPanel(UnityEngine.UIElements.BaseVisualElementPanel value)

Disassembly:
	0x03DF70D4 CSET W0, MI
	0x03DF70D8 B 0x3DF70E0

ISIL:
	001 Move [X0+928], X1
	002 Return 

Method: UnityEngine.UIElements.IPanel get_panel()

Disassembly:
	0x03DED0CC ADD X8, X9, W8, 0x4, SXTW
	0x03DED0D0 ADD X0, X8, 0x138

ISIL:
	001 Move X0, [X0+928]
	002 Return X0

Method: UnityEngine.UIElements.VisualElement get_contentContainer()

Disassembly:
	0x03DF70DC MOV W0, W31

ISIL:
	001 Return X0

Method: System.Void set_visualTreeAssetSource(UnityEngine.UIElements.VisualTreeAsset value)

Disassembly:
	0x03DF70E0 LDP X30, X19, [X31 + 0x40]
	0x03DF70E4 LDR V8, [X31 + 0x30]

ISIL:
	001 Move [X0+936], X1
	002 Return 

Method: System.Void Add(UnityEngine.UIElements.VisualElement child)

Disassembly:
	0x03DF70E8 ADD X31, X31, 0x50
	0x03DF70EC RET
	0x03DF70F0 FCMP S0, S1
	0x03DF70F4 FCSEL S0, S0, S1, MI
	0x03DF70F8 FCMP S2, S3
	0x03DF70FC FCSEL S1, S2, S3, MI
	0x03DF7100 FCMP S0, S1
	0x03DF7104 FCSEL S0, S0, S1, MI
	0x03DF7108 RET
	0x03DF710C FCMP S0, S1
	0x03DF7110 FCSEL S0, S0, S1, GT
	0x03DF7114 FCMP S2, S3
	0x03DF7118 FCSEL S1, S2, S3, GT
	0x03DF711C FCMP S0, S1
	0x03DF7120 FCSEL S0, S0, S1, GT
	0x03DF7124 RET
	0x03DF7128 SUB X31, X31, 0xB0
	0x03DF712C STP D11, D10, [X31 + 0x70]
	0x03DF7130 STP D9, D8, [X31 + 0x80]
	0x03DF7134 STP X30, X21, [X31 + 0x90]
	0x03DF7138 STP X20, X19, [X31 + 0xA0]
	0x03DF713C ADRP X21, 0x5F1000
	0x03DF7140 LDRB W8, [X21 + 0x277]
	0x03DF7144 MOV X19, X1
	0x03DF7148 MOV X20, X0
	0x03DF714C TBNZ X8, 0x0, 0x3DF7164
	0x03DF7150 ADRP X0, 0x324000
	0x03DF7154 LDR X0, [X0 + 0x898]
	0x03DF7158 BL 0x1C16CF4
	0x03DF715C MOVZ W8, 0x1
	0x03DF7160 STRB W8, [X21 + 0x277]
	0x03DF7164 ADD X21, X20, 0x2C0
	0x03DF7168 MOVI V0.2D, 0x0
	0x03DF716C ADD X8, X31, 0x58
	0x03DF7170 MOV X0, X21
	0x03DF7174 MOV X1, X31
	0x03DF7178 STP V0, V0, [X31 + 0x30]
	0x03DF717C STP V0, V0, [X31 + 0x10]
	0x03DF7180 BL 0x3DC9B70
	0x03DF7184 LDR V0, [X31 + 0x58]
	0x03DF7188 FCMP S0, 0x0
	0x03DF718C B.NE 0x3DF7234
	0x03DF7190 MOV X0, X21
	0x03DF7194 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X31+8], X31
	005 Compare X1, 0
	006 JumpIfEqual {25}
	007 Move X8, [X0]
	008 Move X19, X1
	009 Move X20, X0
	010 Move X9, [X8+1896]
	011 Move X1, [X8+1904]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Compare X0, 0
	014 JumpIfEqual {29}
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X1, X19
	017 Call VisualElement.Add, X0, X1
	018 Move X8, [X20+888]
	019 Add X0, X31, 8
	020 Move X1, X19
	021 Move X2, X31
	022 Move [X31+8], X8
	023 Call Hierarchy.Add, X0, X1
	024 Move [X19+912], X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 
	029 Move X0, 0x2FD000
	030 Move X0, [X0+1456]
	031 Call 0x1C17D08
	032 Call 0x1C17F10
	033 Move X19, X0
	034 Move X0, 0x373000
	035 Move X0, [X0+2632]
	036 Call 0x1C17D08
	037 Move X1, X0
	038 Move X0, X19
	039 Move X2, X31
	040 Call InvalidOperationException..ctor, X0, X1
	041 Move X0, 0x373000
	042 Move X0, [X0+2640]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X19
	046 Call 0x1C17DEC

Method: System.Void Insert(System.Int32 index, UnityEngine.UIElements.VisualElement element)

Disassembly:
	0x03DF7198 BL 0x3DC9BD8
	0x03DF719C ADRP X21, 0x5E1000
	0x03DF71A0 LDRB W8, [X21 + 0x85B]
	0x03DF71A4 UBFM X9, X0, 0x20, 0x3F
	0x03DF71A8 FMOV S3, W9
	0x03DF71AC FMOV S8, W0
	0x03DF71B0 UNIMPLEMENTED
	0x03DF71B4 CBNZ W8, 0x3DF71D4
	0x03DF71B8 ADRP X0, 0x2FC000
	0x03DF71BC LDR X0, [X0 + 0x5A0]
	0x03DF71C0 STR V3, [X31]
	0x03DF71C4 BL 0x1C16CF4
	0x03DF71C8 LDR V3, [X31]
	0x03DF71CC MOVZ W8, 0x1
	0x03DF71D0 STRB W8, [X21 + 0x85B]
	0x03DF71D4 ADRP X8, 0x2FC000
	0x03DF71D8 LDR X8, [X8 + 0x5A0]
	0x03DF71DC LDR X8, [X8]
	0x03DF71E0 LDR X8, [X8 + 0xB8]
	0x03DF71E4 LDR V0, [X8 + 0xC]
	0x03DF71E8 LDR V1, [X8 + 0x10]
	0x03DF71EC ADRP X8, 0xFFFFFFFFFCCF2000
	0x03DF71F0 LDR V2, [X8 + 0xF20]
	0x03DF71F4 FSUB S0, S8, S0
	0x03DF71F8 FSUB V1.2S, V3.2S, V1.2S
	0x03DF71FC FMUL S0, S0, S0
	0x00000000 INVALID
	0x03DF7204 FADD S0, S0, S1
	0x03DF7208 MOV S1, V1.S[1]
	0x03DF720C FADD S0, S1, S0
	0x03DF7210 FCMP S0, S2
	0x03DF7214 B.PL 0x3DF7234
	0x03DF7218 LDR V8, [X19]
	0x03DF721C MOV X0, X20
	0x03DF7220 BL 0x3DEE0F4
	0x03DF7224 MOV V0.S[1], V1.S[0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+8], X31
	007 Compare X2, 0
	008 JumpIfEqual {35}
	009 Move X8, [X0]
	010 Move W21, W1
	011 Move X19, X2
	012 Move X20, X0
	013 Move X9, [X8+1896]
	014 Move X1, [X8+1904]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X8, [X20]
	018 Move X0, X20
	019 Move X9, [X8+1896]
	020 Move X1, [X8+1904]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Compare X0, 0
	023 JumpIfEqual {34}
	024 Move W1, W21
	025 Move X2, X19
	026 Call VisualElement.Insert, X0, X1, X2
	027 Move X8, [X20+888]
	028 Add X0, X31, 8
	029 Move W1, W21
	030 Move X2, X19
	031 Move X3, X31
	032 Move [X31+8], X8
	033 Call Hierarchy.Insert, X0, X1, X2
	034 Move [X19+912], X20
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+16]
	038 Move X21, [X31+24]
	039 Add X31, X31, 48
	040 Return 

Method: System.Void Clear()

Disassembly:
	0x03DF7228 FADD V0.2S, V8.2S, V0.2S
	0x03DF722C STR D0, [X19]
	0x03DF7230 B 0x3DF7280
	0x03DF7234 ADRP X21, 0x324000
	0x03DF7238 LDR X21, [X21 + 0x898]
	0x03DF723C ADD X1, X31, 0x10
	0x03DF7240 MOV X0, X20
	0x03DF7244 BL 0x3DEE13C
	0x03DF7248 LDR X0, [X21]
	0x03DF724C LDP S11, S10, [X19]
	0x03DF7250 LDP S9, S8, [X19 + 0x8]
	0x03DF7254 LDR W8, [X0 + 0xE0]
	0x03DF7258 CBNZ W8, 0x3DF7260
	0x03DF725C BL 0x1C16DFC
	0x03DF7260 ADD X0, X31, 0x10
	0x03DF7264 MOV V0.16B, V11.16B
	0x03DF7268 MOV V1.16B, V10.16B
	0x03DF726C MOV V2.16B, V9.16B
	0x03DF7270 MOV V3.16B, V8.16B
	0x03DF7274 BL 0x3DF7298
	0x03DF7278 STP S0, S1, [X19]
	0x03DF727C STP S2, S3, [X19 + 0x8]
	0x03DF7280 LDP X20, X19, [X31 + 0xA0]
	0x03DF7284 LDP X30, X21, [X31 + 0x90]
	0x03DF7288 LDP D9, D8, [X31 + 0x80]
	0x03DF728C LDP D11, D10, [X31 + 0x70]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move [X31+8], X31
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+1896]
	008 Move X1, [X8+1904]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X8, [X19]
	012 Move X0, X19
	013 Move X9, [X8+1896]
	014 Move X1, [X8+1904]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Compare X0, 0
	017 JumpIfEqual {24}
	018 Call VisualElement.Clear, X0
	019 Move X8, [X19+888]
	020 Add X0, X31, 8
	021 Move X1, X31
	022 Move [X31+8], X8
	023 Call Hierarchy.Clear, X0
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Add X31, X31, 32
	027 Return 

Method: UnityEngine.UIElements.VisualElement ElementAt(System.Int32 index)

Disassembly:
	0x03DF7290 ADD X31, X31, 0xB0

ISIL:
No ISIL was generated
Method: UnityEngine.UIElements.VisualElement get_Item(System.Int32 key)

Disassembly:
	0x03DF7294 RET
	0x03DF7298 STP D15, D14, [X31 - 0x60]!
	0x03DF729C STP D13, D12, [X31 + 0x10]
	0x03DF72A0 STP D11, D10, [X31 + 0x20]
	0x03DF72A4 STP D9, D8, [X31 + 0x30]
	0x03DF72A8 STR X30, [X31 + 0x40]
	0x03DF72AC STP X20, X19, [X31 + 0x50]
	0x03DF72B0 ADRP X20, 0x5F1000
	0x03DF72B4 LDRB W8, [X20 + 0x278]
	0x03DF72B8 MOV V10.16B, V3.16B
	0x03DF72BC MOV V11.16B, V2.16B
	0x03DF72C0 MOV V9.16B, V1.16B
	0x03DF72C4 MOV V8.16B, V0.16B
	0x03DF72C8 MOV X19, X0
	0x03DF72CC TBNZ X8, 0x0, 0x3DF72E4
	0x03DF72D0 ADRP X0, 0x324000
	0x03DF72D4 LDR X0, [X0 + 0x898]
	0x03DF72D8 BL 0x1C16CF4
	0x03DF72DC MOVZ W8, 0x1
	0x03DF72E0 STRB W8, [X20 + 0x278]
	0x03DF72E4 ADRP X20, 0x324000
	0x03DF72E8 LDR X20, [X20 + 0x898]
	0x03DF72EC FMOV W8, S9
	0x03DF72F0 AND W9, W8, 0x7FFFFFFF
	0x03DF72F4 MOVZ W8, 0x7F800000
	0x03DF72F8 CMP W9, W8
	0x03DF72FC B.HI 0x3DF7430
	0x03DF7300 FMOV W9, S8
	0x03DF7304 AND W9, W9, 0x7FFFFFFF
	0x03DF7308 CMP W9, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X31+8], X31
	005 Move X8, [X0]
	006 Move W19, W1
	007 Move X20, X0
	008 Move X9, [X8+1896]
	009 Move X8, [X8+1904]
	010 Move X1, X8
	011 NotImplemented "Instruction BLR not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X8, [X20]
	014 Move X0, X20
	015 Move X9, [X8+1896]
	016 Move X1, [X8+1904]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Compare X0, 0
	019 JumpIfEqual {28}
	020 Move W1, W19
	021 Call VisualElement.get_Item, X0, X1
	022 Move X8, [X20+888]
	023 Add X0, X31, 8
	024 Move W1, W19
	025 Move X2, X31
	026 Move [X31+8], X8
	027 Call Hierarchy.get_Item, X0, X1
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Int32 get_childCount()

Disassembly:
	0x03DF730C B.HI 0x3DF7430
	0x03DF7310 FMOV W8, S10
	0x03DF7314 AND W8, W8, 0x7FFFFFFF
	0x03DF7318 MOVZ W9, 0x7F800000
	0x03DF731C CMP W8, W9
	0x03DF7320 B.HI 0x3DF7430
	0x03DF7324 FMOV W8, S11
	0x03DF7328 MOVZ W9, 0x1
	0x03DF732C AND W8, W8, 0x7FFFFFFF
	0x03DF7330 MOVK W9, 0x7F800000
	0x03DF7334 CMP W8, W9
	0x03DF7338 B.CS 0x3DF7430
	0x03DF733C FMOV S2, W31
	0x03DF7340 MOV X0, X19
	0x03DF7344 MOV V0.16B, V8.16B
	0x03DF7348 MOV V1.16B, V9.16B
	0x03DF734C MOV X1, X31
	0x03DF7350 FADD S14, S11, S8
	0x03DF7354 FADD S15, S10, S9
	0x03DF7358 BL 0x3C28278
	0x03DF735C MOV V10.16B, V0.16B
	0x03DF7360 MOV V11.16B, V1.16B
	0x03DF7364 FMOV S2, W31
	0x03DF7368 MOV X0, X19
	0x03DF736C MOV V0.16B, V14.16B
	0x03DF7370 MOV V1.16B, V15.16B

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move [X31+8], X31
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+1896]
	008 Move X1, [X8+1904]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X8, [X19]
	012 Move X0, X19
	013 Move X9, [X8+1896]
	014 Move X1, [X8+1904]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Compare X0, 0
	017 JumpIfEqual {24}
	018 Call VisualElement.get_childCount, X0
	019 Move X8, [X19+888]
	020 Add X0, X31, 8
	021 Move X1, X31
	022 Move [X31+8], X8
	023 Call Hierarchy.get_childCount, X0
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Add X31, X31, 32
	027 Return X0

Method: System.Int32 IndexOf(UnityEngine.UIElements.VisualElement element)

Disassembly:
	0x03DF7374 MOV X1, X31
	0x03DF7378 BL 0x3C28278
	0x03DF737C MOV V12.16B, V0.16B
	0x03DF7380 MOV V13.16B, V1.16B
	0x03DF7384 FMOV S2, W31
	0x03DF7388 MOV X0, X19
	0x03DF738C MOV V0.16B, V14.16B
	0x03DF7390 MOV V1.16B, V9.16B
	0x03DF7394 MOV X1, X31
	0x03DF7398 BL 0x3C28278
	0x03DF739C MOV V9.16B, V0.16B
	0x03DF73A0 MOV V14.16B, V1.16B
	0x03DF73A4 FMOV S2, W31
	0x03DF73A8 MOV X0, X19
	0x03DF73AC MOV V0.16B, V8.16B
	0x03DF73B0 MOV V1.16B, V15.16B
	0x03DF73B4 MOV X1, X31
	0x03DF73B8 BL 0x3C28278
	0x03DF73BC LDR X0, [X20]
	0x03DF73C0 MOV V8.16B, V0.16B
	0x03DF73C4 MOV V15.16B, V1.16B
	0x03DF73C8 LDR W8, [X0 + 0xE0]
	0x03DF73CC CBNZ W8, 0x3DF73D4
	0x03DF73D0 BL 0x1C16DFC
	0x03DF73D4 FCMP S14, S15
	0x03DF73D8 FCSEL S1, S14, S15, MI
	0x03DF73DC FCSEL S2, S14, S15, GT
	0x03DF73E0 FCMP S11, S13
	0x03DF73E4 FCSEL S3, S11, S13, MI
	0x03DF73E8 FCSEL S4, S11, S13, GT
	0x03DF73EC FCMP S9, S8
	0x03DF73F0 FCSEL S0, S9, S8, MI

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X31+8], X31
	005 Move X8, [X0]
	006 Move X19, X1
	007 Move X20, X0
	008 Move X9, [X8+1896]
	009 Move X8, [X8+1904]
	010 Move X1, X8
	011 NotImplemented "Instruction BLR not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X8, [X20]
	014 Move X0, X20
	015 Move X9, [X8+1896]
	016 Move X1, [X8+1904]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Compare X0, 0
	019 JumpIfEqual {28}
	020 Move X1, X19
	021 Call VisualElement.IndexOf, X0, X1
	022 Move X8, [X20+888]
	023 Add X0, X31, 8
	024 Move X1, X19
	025 Move X2, X31
	026 Move [X31+8], X8
	027 Call Hierarchy.IndexOf, X0, X1
	028 Move TEMP, 0
	029 Not TEMP
	030 Move W0, TEMP
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0

Method: UnityEngine.UIElements.VisualElement ElementAtTreePath(System.Collections.Generic.List`1<System.Int32> childIndexes)

Disassembly:
	0x03DF73F4 FCSEL S5, S9, S8, GT
	0x03DF73F8 FCMP S10, S12
	0x03DF73FC FCSEL S6, S10, S12, MI
	0x03DF7400 FCSEL S7, S10, S12, GT
	0x03DF7404 FCMP S6, S0
	0x03DF7408 FCSEL S0, S6, S0, MI
	0x03DF740C FCMP S3, S1
	0x03DF7410 FCSEL S1, S3, S1, MI
	0x03DF7414 FCMP S7, S5
	0x03DF7418 FCSEL S3, S7, S5, GT
	0x03DF741C FCMP S4, S2
	0x03DF7420 FCSEL S4, S4, S2, GT
	0x03DF7424 FSUB S2, S3, S0
	0x03DF7428 FSUB S3, S4, S1
	0x03DF742C B 0x3DF74A8
	0x03DF7430 LDR X0, [X20]
	0x03DF7434 LDR W8, [X0 + 0xE0]
	0x03DF7438 CBNZ W8, 0x3DF7440
	0x03DF743C BL 0x1C16DFC
	0x03DF7440 LDP S0, S2, [X19]
	0x03DF7444 LDP S1, S3, [X19 + 0x10]
	0x03DF7448 LDP S16, S17, [X19 + 0x30]
	0x03DF744C FMUL S4, S8, S0
	0x03DF7450 FMUL S5, S9, S1
	0x03DF7454 FMUL S0, S11, S0
	0x03DF7458 FMUL S1, S10, S1
	0x03DF745C FADD S4, S4, S5
	0x03DF7460 FMUL S6, S8, S2
	0x03DF7464 FMUL S7, S9, S3
	0x03DF7468 FMUL S2, S11, S2
	0x03DF746C FMUL S3, S10, S3
	0x03DF7470 FADD S0, S0, S1
	0x03DF7474 FADD S1, S16, S4
	0x03DF7478 FADD S5, S6, S7
	0x03DF747C FADD S3, S2, S3
	0x03DF7480 FNEG S2, S0
	0x03DF7484 FCMP S0, 0x0
	0x03DF7488 FADD S4, S0, S1
	0x03DF748C FCSEL S2, S2, S0, MI
	0x03DF7490 FCSEL S0, S4, S1, MI
	0x03DF7494 FCMP S3, 0x0
	0x03DF7498 FADD S1, S17, S5
	0x03DF749C B.PL 0x3DF74A8
	0x03DF74A0 FADD S1, S3, S1
	0x03DF74A4 FNEG S3, S3
	0x03DF74A8 LDP X20, X19, [X31 + 0x50]
	0x03DF74AC LDR X30, [X31 + 0x40]
	0x03DF74B0 LDP D9, D8, [X31 + 0x30]
	0x03DF74B4 LDP D11, D10, [X31 + 0x20]
	0x03DF74B8 LDP D13, D12, [X31 + 0x10]
	0x03DF74BC LDP D15, D14, [X31], #0x60
	0x03DF74C0 RET
	0x03DF74C4 LDR V0, [X0 + 0x8]
	0x03DF74C8 FCMP S0, 0x0
	0x03DF74CC B.PL 0x3DF74E4
	0x03DF74D0 LDR V1, [X0]
	0x03DF74D4 FNEG S2, S0
	0x03DF74D8 STR S2, [X0 + 0x8]
	0x03DF74DC FADD S0, S0, S1
	0x03DF74E0 STR S0, [X0]
	0x03DF74E4 LDR V0, [X0 + 0xC]
	0x03DF74E8 FCMP S0, 0x0
	0x03DF74EC B.PL 0x3DF7504
	0x03DF74F0 LDR V1, [X0 + 0x4]
	0x03DF74F4 FNEG S2, S0
	0x03DF74F8 STR S2, [X0 + 0xC]
	0x03DF74FC FADD S0, S0, S1
	0x03DF7500 STR S0, [X0 + 0x4]
	0x03DF7504 RET
	0x03DF7508 STP D11, D10, [X31 - 0x50]!
	0x03DF750C STP D9, D8, [X31 + 0x10]
	0x03DF7510 STR X30, [X31 + 0x20]
	0x03DF7514 STP X22, X21, [X31 + 0x30]
	0x03DF7518 STP X20, X19, [X31 + 0x40]
	0x03DF751C ADRP X22, 0x5F1000
	0x03DF7520 ADRP X21, 0x324000
	0x03DF7524 LDRB W8, [X22 + 0x279]
	0x03DF7528 LDR X21, [X21 + 0x898]
	0x03DF752C MOV X19, X1
	0x03DF7530 MOV X20, X0
	0x03DF7534 TBNZ X8, 0x0, 0x3DF754C
	0x03DF7538 ADRP X0, 0x324000
	0x03DF753C LDR X0, [X0 + 0x898]
	0x03DF7540 BL 0x1C16CF4
	0x03DF7544 MOVZ W8, 0x1
	0x03DF7548 STRB W8, [X22 + 0x279]
	0x03DF754C LDR X0, [X21]
	0x03DF7550 LDP S11, S10, [X19]
	0x03DF7554 LDP S9, S8, [X19 + 0x8]
	0x03DF7558 LDR W8, [X0 + 0xE0]
	0x03DF755C CBNZ W8, 0x3DF7564
	0x03DF7560 BL 0x1C16DFC
	0x03DF7564 MOV X0, X20
	0x03DF7568 MOV V0.16B, V11.16B
	0x03DF756C MOV V1.16B, V10.16B
	0x03DF7570 MOV V2.16B, V9.16B
	0x03DF7574 MOV V3.16B, V8.16B
	0x03DF7578 BL 0x3DF7298
	0x03DF757C STP S0, S1, [X19]
	0x03DF7580 STP S2, S3, [X19 + 0x8]
	0x03DF7584 LDP X20, X19, [X31 + 0x40]
	0x03DF7588 LDP X22, X21, [X31 + 0x30]
	0x03DF758C LDR X30, [X31 + 0x20]
	0x03DF7590 LDP D9, D8, [X31 + 0x10]
	0x03DF7594 LDP D11, D10, [X31], #0x50
	0x03DF7598 RET
	0x03DF759C LDR V2, [X0]
	0x03DF75A0 LDR V3, [X0 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X21, 0x5F2000
	008 Move W8, [X21+623]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x328000
	016 Move X0, [X0+2840]
	017 Call 0x1C17CF4
	018 Move X0, 0x328000
	019 Move X0, [X0+2856]
	020 Call 0x1C17CF4
	021 Move X0, 0x328000
	022 Move X0, [X0+2872]
	023 Call 0x1C17CF4
	024 Move X0, 0x328000
	025 Move X0, [X0+2896]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+623], W8
	029 Move [X31+32], X31
	030 Move [X31+40], X31
	031 Move [X31+48], X31
	032 Move [X31+72], X31
	033 Compare X19, 0
	034 JumpIfEqual {90}
	035 Move X8, 0x328000
	036 Move X8, [X8+2896]
	037 Move X22, 0x328000
	038 Move X21, 0x328000
	039 Move X0, X19
	040 Move X1, [X8]
	041 Move X22, [X22+2856]
	042 Move X21, [X21+2840]
	043 Add X8, X31, 8
	044 Call List`1<Int32>.GetEnumerator, X0
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move X8, [X31+24]
	047 Move [X31+2], V0
	048 Move [X31+48], X8
	049 Move X1, [X22]
	050 Move X19, X20
	051 Add X0, X31, 32
	052 Call Enumerator<Int32>.MoveNext, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {78}
	057 Move W20, [X31+48]
	058 Move TEMP, X20
	059 And TEMP, TEMP, -2147483648
	060 Compare TEMP, -2147483648
	061 JumpIfEqual {77}
	062 Compare X19, 0
	063 JumpIfEqual {89}
	064 Move X8, [X19+888]
	065 Move [X31+72], X8
	066 Add X0, X31, 72
	067 Move X1, X31
	068 Call Hierarchy.get_childCount, X0
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, [X19+888]
	071 Move [X31+72], X8
	072 Add X0, X31, 72
	073 Move W1, W20
	074 Move X2, X31
	075 Call Hierarchy.get_Item, X0, X1
	076 Move X20, X0
	077 Move X19, X31
	078 Move X1, [X21]
	079 Add X0, X31, 32
	080 Call Enumerator<Int32>.Dispose, X0
	081 Move X0, X19
	082 Move X20, [X31+96]
	083 Move X19, [X31+104]
	084 Move X22, [X31+80]
	085 Move X21, [X31+88]
	086 Move X30, [X31+64]
	087 Add X31, X31, 112
	088 Return X0
	089 Call 0x1C17F20
	090 Call 0x1C17F20
	091 Move X20, X0
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, X20
	094 Call 0x3EB2AD0
	095 Move X21, [X0]
	096 Call 0x3EB2AE0
	097 Move X8, 0x328000
	098 Move X8, [X8+2840]
	099 Add X0, X31, 32
	100 Move X1, [X8]
	101 Call Enumerator<Int32>.Dispose, X0
	102 Compare X21, 0
	103 JumpIfEqual {81}
	104 Move X0, X21
	105 Call 0x1C17F18
	106 Move X21, X31
	107 Move X20, X0
	108 Move X8, 0x328000
	109 Move X8, [X8+2840]
	110 Move X1, [X8]
	111 Add X0, X31, 32
	112 Call Enumerator<Int32>.Dispose, X0
	113 Compare X21, 0
	114 JumpIfNotEqual {117}
	115 Move X0, X20
	116 Call 0x1D2D690
	117 Move X0, X21
	118 Call 0x1C17F18
	119 Call 0x1991590

Method: System.Boolean FindElementInTree(UnityEngine.UIElements.VisualElement element, System.Collections.Generic.List`1<System.Int32> outChildIndexes)

Disassembly:
	0x03DF75A4 LDR V4, [X0 + 0x30]
	0x00000000 INVALID
	0x00000000 INVALID
	0x03DF75B0 FADD V0.2S, V0.2S, V1.2S
	0x03DF75B4 FADD V0.2S, V4.2S, V0.2S
	0x03DF75B8 MOV S1, V0.S[1]
	0x03DF75BC RET
	0x03DF75C0 LDR V2, [X0]
	0x03DF75C4 LDR V3, [X0 + 0x10]
	0x00000000 INVALID
	0x00000000 INVALID
	0x03DF75D0 FADD V0.2S, V0.2S, V1.2S
	0x03DF75D4 MOV S1, V0.S[1]
	0x03DF75D8 RET
	0x03DF75DC SUB X31, X31, 0x60
	0x03DF75E0 STR X30, [X31 + 0x30]
	0x03DF75E4 STP X22, X21, [X31 + 0x40]
	0x03DF75E8 STP X20, X19, [X31 + 0x50]
	0x03DF75EC ADRP X22, 0x5F1000
	0x03DF75F0 ADRP X21, 0x324000
	0x03DF75F4 LDRB W8, [X22 + 0x27A]
	0x03DF75F8 LDR X21, [X21 + 0x898]
	0x03DF75FC MOV X19, X1
	0x03DF7600 MOV X20, X0
	0x03DF7604 TBNZ X8, 0x0, 0x3DF762C
	0x03DF7608 ADRP X0, 0x324000
	0x03DF760C LDR X0, [X0 + 0x898]
	0x03DF7610 STP V1, V2, [X31 + 0x10]
	0x03DF7614 STR V0, [X31]
	0x03DF7618 BL 0x1C16CF4
	0x03DF761C LDP V0, V1, [X31]
	0x03DF7620 LDR V2, [X31 + 0x2]
	0x03DF7624 MOVZ W8, 0x1
	0x03DF7628 STRB W8, [X22 + 0x27A]
	0x03DF762C LDP V5, V6, [X20 + 0x20]
	0x03DF7630 LDP V3, V4, [X20]
	0x03DF7634 STP V5, V6, [X19 + 0x20]
	0x03DF7638 STP V3, V4, [X19]
	0x03DF763C LDR X0, [X21]
	0x03DF7640 LDR W8, [X0 + 0xE0]
	0x03DF7644 CBNZ W8, 0x3DF765C
	0x03DF7648 STP V1, V2, [X31 + 0x10]
	0x03DF764C STR V0, [X31]
	0x03DF7650 BL 0x1C16DFC
	0x03DF7654 LDP V0, V1, [X31]
	0x03DF7658 LDR V2, [X31 + 0x2]
	0x03DF765C LDR V7, [X19]
	0x03DF7660 LDR V5, [X19 + 0x8]
	0x03DF7664 LDR V6, [X19 + 0x10]
	0x03DF7668 LDR V4, [X19 + 0x18]
	0x03DF766C LDR V3, [X19 + 0x20]
	0x00000000 INVALID
	0x03DF7674 FMUL S7, S0, S5
	0x03DF7678 LDR V5, [X19 + 0x28]
	0x00000000 INVALID
	0x03DF7680 FMUL S4, S1, S4
	0x03DF7684 LDR V6, [X19 + 0x30]
	0x03DF7688 LDR V1, [X19 + 0x38]
	0x00000000 INVALID
	0x03DF7690 FMUL S5, S2, S5
	0x03DF7694 FADD V0.2S, V17.2S, V16.2S
	0x03DF7698 FADD S2, S7, S4
	0x03DF769C FADD V0.2S, V0.2S, V3.2S
	0x03DF76A0 FADD S2, S2, S5

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x5F2000
	009 Move W8, [X22+624]
	010 Move X19, X2
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x304000
	018 Move X0, [X0+2136]
	019 Call 0x1C17CF4
	020 Move X0, 0x359000
	021 Move X0, [X0+896]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+624], W8
	025 Compare X21, 0
	026 JumpIfEqual {76}
	027 Move X8, [X21+888]
	028 Add X0, X31, 8
	029 Move X1, X31
	030 Move [X31+8], X8
	031 Call Hierarchy.get_parent, X0
	032 Compare X0, 0
	033 JumpIfEqual {60}
	034 Move X23, 0x359000
	035 Move X23, [X23+896]
	036 Move X22, X0
	037 Move X8, [X22+888]
	038 Add X0, X31, 8
	039 Move X1, X21
	040 Move X2, X31
	041 Move [X31+8], X8
	042 Call Hierarchy.IndexOf, X0, X1
	043 Compare X19, 0
	044 JumpIfEqual {76}
	045 Move X3, [X23]
	046 Move W2, W0
	047 Move X0, X19
	048 Move W1, W31
	049 Call List`1<Int32>.Insert, X0, X1, X2
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, [X22+888]
	052 Add X0, X31, 8
	053 Move X1, X31
	054 Move [X31+8], X8
	055 Call Hierarchy.get_parent, X0
	056 Move X21, X22
	057 Move X22, X0
	058 Compare X0, 0
	059 JumpIfNotEqual {37}
	060 Compare X19, 0
	061 JumpIfEqual {76}
	062 Move W8, [X19+28]
	063 Move W0, W31
	064 Add W8, W8, 1
	065 Move [X19+24], W31
	066 Move [X19+28], W8
	067 Move W0, 1
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X30, [X31+16]
	073 Move X23, [X31+24]
	074 Add X31, X31, 64
	075 Return X0
	076 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.UIElements.VisualElement> Children()

Disassembly:
	0x03DF76A4 FADD V0.2S, V6.2S, V0.2S
	0x03DF76A8 FADD S1, S1, S2
	0x03DF76AC STR D0, [X19 + 0x30]
	0x03DF76B0 STR S1, [X19 + 0x38]
	0x03DF76B4 LDP X20, X19, [X31 + 0x50]
	0x03DF76B8 LDP X22, X21, [X31 + 0x40]
	0x03DF76BC LDR X30, [X31 + 0x30]
	0x03DF76C0 ADD X31, X31, 0x60
	0x03DF76C4 RET
	0x03DF76C8 LDR V3, [X0]
	0x03DF76CC LDR V5, [X0 + 0x8]
	0x03DF76D0 LDR V4, [X0 + 0x10]
	0x03DF76D4 LDR V6, [X0 + 0x20]
	0x00000000 INVALID
	0x03DF76DC FMUL S0, S0, S5
	0x03DF76E0 LDR V5, [X0 + 0x28]
	0x03DF76E4 LDR V7, [X0 + 0x18]
	0x00000000 INVALID
	0x00000000 INVALID
	0x03DF76F0 FMUL S2, S2, S5
	0x03DF76F4 LDR V5, [X0 + 0x30]
	0x03DF76F8 FADD V3.2S, V3.2S, V4.2S
	0x03DF76FC LDR V4, [X0 + 0x38]
	0x03DF7700 FMUL S1, S1, S7
	0x03DF7704 FADD S0, S0, S1
	0x03DF7708 FADD V1.2S, V3.2S, V6.2S
	0x03DF770C FADD S0, S0, S2
	0x03DF7710 FADD V1.2S, V5.2S, V1.2S
	0x03DF7714 FADD S0, S4, S0
	0x03DF7718 STR D1, [X0 + 0x30]
	0x03DF771C STR S0, [X0 + 0x38]
	0x03DF7720 RET
	0x03DF7724 RET
	0x03DF7728 STP X30, X23, [X31 - 0x30]!
	0x03DF772C STP X22, X21, [X31 + 0x10]
	0x03DF7730 STP X20, X19, [X31 + 0x20]
	0x03DF7734 ADRP X19, 0x5F1000
	0x03DF7738 ADRP X23, 0x372000
	0x03DF773C ADRP X22, 0x372000
	0x03DF7740 LDRB W8, [X19 + 0x27B]
	0x03DF7744 LDR X23, [X23 + 0xA78]
	0x03DF7748 LDR X22, [X22 + 0x5B8]
	0x03DF774C MOV X20, X1
	0x03DF7750 MOV X21, X0
	0x03DF7754 TBNZ X8, 0x0, 0x3DF7778

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5F2000
	005 Move W8, [X20+625]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x325000
	012 Move X0, [X0+2200]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+625], W8
	016 Move [X31+8], X31
	017 Move X8, [X19]
	018 Move X0, X19
	019 Move X9, [X8+1896]
	020 Move X1, [X8+1904]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, [X19]
	024 Move X0, X19
	025 Move X9, [X8+1896]
	026 Move X1, [X8+1904]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Call VisualElement.Children, X0
	031 Compare X0, 0
	032 JumpIfNotEqual {48}
	033 Move X19, 0x325000
	034 Move X19, [X19+2200]
	035 Move X0, [X19]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X19]
	041 Move X8, [X0+184]
	042 Move X0, [X8+72]
	043 Move X8, [X19+888]
	044 Add X0, X31, 8
	045 Move X1, X31
	046 Move [X31+8], X8
	047 Call Hierarchy.Children, X0
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return X0

Method: System.Void BringToFront()

Disassembly:
	0x03DF7758 ADRP X0, 0x372000
	0x03DF775C LDR X0, [X0 + 0x5B8]
	0x03DF7760 BL 0x1C16CF4
	0x03DF7764 ADRP X0, 0x372000
	0x03DF7768 LDR X0, [X0 + 0xA78]
	0x03DF776C BL 0x1C16CF4
	0x03DF7770 MOVZ W8, 0x1
	0x03DF7774 STRB W8, [X19 + 0x27B]
	0x03DF7778 LDR X0, [X23]
	0x03DF777C BL 0x1C16F10
	0x03DF7780 MOV X1, X21
	0x03DF7784 MOV X2, X20
	0x03DF7788 MOV X3, X31
	0x03DF778C MOV X19, X0
	0x03DF7790 BL 0x3DF9E90
	0x03DF7794 LDR X0, [X22]
	0x03DF7798 LDR W8, [X0 + 0xE0]
	0x03DF779C CBNZ W8, 0x3DF77A4
	0x03DF77A0 BL 0x1C16DFC
	0x03DF77A4 CBZ X19, 0x3DF77D8
	0x03DF77A8 LDR X8, [X22]
	0x03DF77AC MOV X0, X19
	0x03DF77B0 MOV X1, X31
	0x03DF77B4 LDR X8, [X8 + 0xB8]
	0x03DF77B8 LDR X8, [X8]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X8, [X0+888]
	005 Move X19, X0
	006 Add X0, X31, 8
	007 Move X1, X31
	008 Move [X31+8], X8
	009 Call Hierarchy.get_parent, X0
	010 Compare X0, 0
	011 JumpIfEqual {25}
	012 Move X8, [X19+888]
	013 Add X0, X31, 8
	014 Move X1, X31
	015 Move [X31+8], X8
	016 Call Hierarchy.get_parent, X0
	017 Compare X0, 0
	018 JumpIfEqual {29}
	019 Move X8, [X0+888]
	020 Add X0, X31, 8
	021 Move X1, X19
	022 Move X2, X31
	023 Move [X31+8], X8
	024 Call Hierarchy.BringToFront, X0, X1
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Add X31, X31, 32
	028 Return 
	029 Call 0x1C17F20

Method: System.Void SendToBack()

Disassembly:
	0x03DF77BC STR X8, [X19 + 0x10]
	0x03DF77C0 BL 0x3DF9C0C
	0x03DF77C4 MOV X0, X19
	0x03DF77C8 LDP X20, X19, [X31 + 0x20]
	0x03DF77CC LDP X22, X21, [X31 + 0x10]
	0x03DF77D0 LDP X30, X23, [X31], #0x30
	0x03DF77D4 RET
	0x03DF77D8 BL 0x1C16F20
	0x03DF77DC STP X30, X23, [X31 - 0x30]!
	0x03DF77E0 STP X22, X21, [X31 + 0x10]
	0x03DF77E4 STP X20, X19, [X31 + 0x20]
	0x03DF77E8 ADRP X19, 0x5F1000
	0x03DF77EC ADRP X23, 0x372000
	0x03DF77F0 ADRP X22, 0x372000
	0x03DF77F4 LDRB W8, [X19 + 0x27C]
	0x03DF77F8 LDR X23, [X23 + 0xA80]
	0x03DF77FC LDR X22, [X22 + 0x5B8]
	0x03DF7800 MOV X20, X1
	0x03DF7804 MOV X21, X0
	0x03DF7808 TBNZ X8, 0x0, 0x3DF782C
	0x03DF780C ADRP X0, 0x372000
	0x03DF7810 LDR X0, [X0 + 0x5B8]
	0x03DF7814 BL 0x1C16CF4
	0x03DF7818 ADRP X0, 0x372000
	0x03DF781C LDR X0, [X0 + 0xA80]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X8, [X0+888]
	005 Move X19, X0
	006 Add X0, X31, 8
	007 Move X1, X31
	008 Move [X31+8], X8
	009 Call Hierarchy.get_parent, X0
	010 Compare X0, 0
	011 JumpIfEqual {25}
	012 Move X8, [X19+888]
	013 Add X0, X31, 8
	014 Move X1, X31
	015 Move [X31+8], X8
	016 Call Hierarchy.get_parent, X0
	017 Compare X0, 0
	018 JumpIfEqual {29}
	019 Move X8, [X0+888]
	020 Add X0, X31, 8
	021 Move X1, X19
	022 Move X2, X31
	023 Move [X31+8], X8
	024 Call Hierarchy.SendToBack, X0, X1
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Add X31, X31, 32
	028 Return 
	029 Call 0x1C17F20

Method: System.Void PlaceBehind(UnityEngine.UIElements.VisualElement sibling)

Disassembly:
	0x03DF7820 BL 0x1C16CF4
	0x03DF7824 MOVZ W8, 0x1
	0x03DF7828 STRB W8, [X19 + 0x27C]
	0x03DF782C LDR X0, [X23]
	0x03DF7830 BL 0x1C16F10
	0x03DF7834 MOV X1, X21
	0x03DF7838 MOV X2, X20
	0x03DF783C MOV X3, X31
	0x03DF7840 MOV X19, X0
	0x03DF7844 BL 0x3DF9F24
	0x03DF7848 LDR X0, [X22]
	0x03DF784C LDR W8, [X0 + 0xE0]
	0x03DF7850 CBNZ W8, 0x3DF7858
	0x03DF7854 BL 0x1C16DFC
	0x03DF7858 CBZ X19, 0x3DF788C
	0x03DF785C LDR X8, [X22]
	0x03DF7860 MOV X0, X19
	0x03DF7864 MOV X1, X31
	0x03DF7868 LDR X8, [X8 + 0xB8]
	0x03DF786C LDR X8, [X8]
	0x03DF7870 STR X8, [X19 + 0x10]
	0x03DF7874 BL 0x3DF9C0C
	0x03DF7878 MOV X0, X19
	0x03DF787C LDP X20, X19, [X31 + 0x20]
	0x03DF7880 LDP X22, X21, [X31 + 0x10]
	0x03DF7884 LDP X30, X23, [X31], #0x30
	0x03DF7888 RET
	0x03DF788C BL 0x1C16F20
	0x03DF7890 STP X30, X21, [X31 - 0x20]!
	0x03DF7894 STP X20, X19, [X31 + 0x10]
	0x03DF7898 ADRP X21, 0x5F1000
	0x03DF789C ADRP X20, 0x324000
	0x03DF78A0 LDRB W8, [X21 + 0x27E]
	0x03DF78A4 LDR X20, [X20 + 0x898]
	0x03DF78A8 MOV X19, X0
	0x03DF78AC TBNZ X8, 0x0, 0x3DF78C4
	0x03DF78B0 ADRP X0, 0x324000
	0x03DF78B4 LDR X0, [X0 + 0x898]
	0x03DF78B8 BL 0x1C16CF4
	0x03DF78BC MOVZ W8, 0x1
	0x03DF78C0 STRB W8, [X21 + 0x27E]
	0x03DF78C4 LDR X0, [X20]
	0x03DF78C8 LDR W8, [X0 + 0xE0]
	0x03DF78CC CBNZ W8, 0x3DF78D8
	0x03DF78D0 BL 0x1C16DFC
	0x03DF78D4 LDR X0, [X20]
	0x03DF78D8 LDR X8, [X0 + 0xB8]
	0x03DF78DC LDR X0, [X8 + 0x50]
	0x03DF78E0 CBZ X0, 0x3DF790C
	0x03DF78E4 LDR V0, [X19 + 0x308]
	0x03DF78E8 LDR X1, [X19 + 0x2F8]
	0x03DF78EC MOV X2, X31
	0x03DF78F0 BL 0x3DF9FB8
	0x03DF78F4 LDR X8, [X20]
	0x03DF78F8 LDP X20, X19, [X31 + 0x10]
	0x03DF78FC LDR X8, [X8 + 0xB8]
	0x03DF7900 LDR X0, [X8 + 0x50]
	0x03DF7904 LDP X30, X21, [X31], #0x20
	0x03DF7908 RET
	0x03DF790C BL 0x1C16F20
	0x03DF7910 STR X30, [X31 - 0x10]!
	0x03DF7914 MOV X1, X0
	0x03DF7918 ADD X0, X31, 0x8
	0x03DF791C MOV X2, X31
	0x03DF7920 STR X31, [X31 + 0x8]
	0x03DF7924 BL 0x3D19770
	0x03DF7928 LDR X0, [X31 + 0x8]
	0x03DF792C LDR X30, [X31], #0x10
	0x03DF7930 RET
	0x03DF7934 SUB X31, X31, 0x50
	0x03DF7938 STR D8, [X31 + 0x10]
	0x03DF793C STP X30, X23, [X31 + 0x20]
	0x03DF7940 STP X22, X21, [X31 + 0x30]
	0x03DF7944 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {61}
	008 Move X8, [X0+888]
	009 Move X19, X1
	010 Move X20, X0
	011 Add X0, X31, 8
	012 Move X1, X31
	013 Move [X31+8], X8
	014 Call Hierarchy.get_parent, X0
	015 Compare X0, 0
	016 JumpIfEqual {49}
	017 Move X8, [X19+888]
	018 Add X0, X31, 8
	019 Move X1, X31
	020 Move [X31+8], X8
	021 Call Hierarchy.get_parent, X0
	022 Move X8, [X20+888]
	023 Move X21, X0
	024 Add X0, X31, 8
	025 Move X1, X31
	026 Move [X31+8], X8
	027 Call Hierarchy.get_parent, X0
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X20+888]
	030 Add X0, X31, 8
	031 Move X1, X31
	032 Move [X31+8], X8
	033 Call Hierarchy.get_parent, X0
	034 Compare X0, 0
	035 JumpIfEqual {79}
	036 Move X8, [X0+888]
	037 Add X0, X31, 8
	038 Move X1, X20
	039 Move X2, X19
	040 Move X3, X31
	041 Move [X31+8], X8
	042 Call Hierarchy.PlaceBehind, X0, X1, X2
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+16]
	046 Move X21, [X31+24]
	047 Add X31, X31, 48
	048 Return 
	049 Move X0, 0x305000
	050 Move X0, [X0+1400]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0x373000
	055 Move X0, [X0+2648]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Move X2, X31
	060 Call ArgumentException..ctor, X0, X1
	061 Move X0, 0x302000
	062 Move X0, [X0+1320]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0x373000
	067 Move X0, [X0+2656]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Move X2, X31
	072 Call ArgumentNullException..ctor, X0, X1
	073 Move X0, 0x373000
	074 Move X0, [X0+2664]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Call 0x1C17DEC
	079 Call 0x1C17F20

Method: System.Void RemoveFromHierarchy()

Disassembly:
	0x03DF7948 ADRP X23, 0x5F1000
	0x03DF794C ADRP X21, 0x36C000
	0x03DF7950 ADRP X22, 0x2FC000
	0x03DF7954 LDRB W8, [X23 + 0x27F]
	0x03DF7958 LDR X21, [X21 + 0xE10]
	0x03DF795C LDR X22, [X22 + 0x6C0]
	0x03DF7960 MOV X19, X1
	0x03DF7964 MOV X20, X0
	0x03DF7968 TBNZ X8, 0x0, 0x3DF79D4
	0x03DF796C ADRP X0, 0x2FC000
	0x03DF7970 LDR X0, [X0 + 0xA28]
	0x03DF7974 BL 0x1C16CF4
	0x03DF7978 ADRP X0, 0x2FC000
	0x03DF797C LDR X0, [X0 + 0x598]
	0x03DF7980 BL 0x1C16CF4
	0x03DF7984 ADRP X0, 0x326000
	0x03DF7988 LDR X0, [X0 + 0xD08]
	0x03DF798C BL 0x1C16CF4
	0x03DF7990 ADRP X0, 0x36C000
	0x03DF7994 LDR X0, [X0 + 0xE10]
	0x03DF7998 BL 0x1C16CF4
	0x03DF799C ADRP X0, 0x36C000
	0x03DF79A0 LDR X0, [X0 + 0xE18]
	0x03DF79A4 BL 0x1C16CF4
	0x03DF79A8 ADRP X0, 0x2FC000

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X8, [X0+888]
	005 Move X19, X0
	006 Add X0, X31, 8
	007 Move X1, X31
	008 Move [X31+8], X8
	009 Call Hierarchy.get_parent, X0
	010 Compare X0, 0
	011 JumpIfEqual {25}
	012 Move X8, [X19+888]
	013 Add X0, X31, 8
	014 Move X1, X31
	015 Move [X31+8], X8
	016 Call Hierarchy.get_parent, X0
	017 Compare X0, 0
	018 JumpIfEqual {29}
	019 Move X8, [X0+888]
	020 Add X0, X31, 8
	021 Move X1, X19
	022 Move X2, X31
	023 Move [X31+8], X8
	024 Call Hierarchy.Remove, X0, X1
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Add X31, X31, 32
	028 Return 
	029 Call 0x1C17F20

Method: T GetFirstOfType()

Disassembly:
	0x022AADC8 BL 0x2BC434C
	0x022AADCC B 0x22AAB54
	0x022AADD0 BL 0x1C16F20
	0x022AADD4 BL 0x1C16F20
	0x022AADD8 BL 0x3EB1B20
	0x022AADDC B 0x22AADF8
	0x022AADE0 B 0x22AADF8
	0x022AADE4 B 0x22AADF8
	0x022AADE8 B 0x22AADF8
	0x022AADEC B 0x22AADF8
	0x022AADF0 B 0x22AADF8
	0x022AADF4 B 0x22AADF8
	0x022AADF8 MOV X20, X0
	0x022AADFC CMP W1, 0x1
	0x022AAE00 B.NE 0x22AAE34
	0x022AAE04 MOV X0, X20
	0x022AAE08 BL 0x3EB1AD0
	0x022AAE0C LDR X21, [X0]
	0x022AAE10 BL 0x3EB1AE0
	0x022AAE14 ADRP X8, 0x1E72000
	0x022AAE18 LDR X8, [X8 + 0x900]
	0x022AAE1C SUB X0, X29, 0x40
	0x022AAE20 LDR X1, [X8]
	0x022AAE24 BL 0x2BC434C
	0x022AAE28 CBZ X21, 0x22AAB54
	0x022AAE2C MOV X0, X21
	0x022AAE30 BL 0x1C16F18
	0x022AAE34 MOV X21, X31
	0x022AAE38 B 0x22AAE40
	0x022AAE3C MOV X20, X0
	0x022AAE40 ADRP X8, 0x1E72000
	0x022AAE44 LDR X8, [X8 + 0x900]
	0x022AAE48 LDR X1, [X8]
	0x022AAE4C SUB X0, X29, 0x40
	0x022AAE50 BL 0x2BC434C
	0x022AAE54 CBNZ X21, 0x22AAE60
	0x022AAE58 MOV X0, X20
	0x022AAE5C BL 0x1D2C690
	0x022AAE60 MOV X0, X21
	0x022AAE64 BL 0x1C16F18
	0x022AAE68 BL 0x1990590
	0x022AAE6C STR X30, [X31 - 0x30]!
	0x022AAE70 STP X22, X21, [X31 + 0x10]
	0x022AAE74 STP X20, X19, [X31 + 0x20]
	0x022AAE78 LDR X8, [X2 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {14}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Move X8, [X19+56]
	014 Move X1, [X8]
	015 Move W8, [X1+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X1
	021 Call 0x1C5D684
	022 Move X1, X0
	023 Move X0, X20
	024 Call 0x1C17E00
	025 Move X8, [X19+56]
	026 Move X22, X0
	027 Move X21, [X8]
	028 Move W8, [X21+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Move X0, X21
	034 Call 0x1C5D684
	035 Move X21, X0
	036 Compare X22, 0
	037 JumpIfEqual {49}
	038 Move X0, X22
	039 Move X1, X21
	040 Call 0x1C17E00
	041 Compare X0, 0
	042 JumpIfEqual {59}
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Return X0
	049 Move X8, [X19+56]
	050 Move X0, X20
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X1, [X8+8]
	056 Move X30, [X31+48]
	057 Call 0x22AACF4, X0
	058 Return X0
	059 Move X0, X22
	060 Move X1, X21
	061 Call 0x1C181E0

Method: T GetFirstAncestorOfType()

Disassembly:
	0x022AACF4 MOV X0, X24
	0x022AACF8 MOV X1, X25
	0x022AACFC MOV X2, X23
	0x022AAD00 BL 0x3EB1AC0
	0x022AAD04 LDR X8, [X20 + 0x38]
	0x022AAD08 MOV X4, X24
	0x022AAD0C LDR X9, [X8 + 0x10]
	0x022AAD10 LDR W9, [X9 + 0x28]
	0x022AAD14 TBNZ X9, 0x1F, 0x22AAD1C
	0x022AAD18 LDR X4, [X24]
	0x022AAD1C LDR X1, [X8 + 0x28]
	0x022AAD20 LDR X0, [X1]
	0x022AAD24 STUR X4, [X29 - 0x60]
	0x022AAD28 LDR X8, [X1 + 0x10]
	0x022AAD2C SUB X3, X29, 0x60
	0x022AAD30 MOV X2, X19
	0x022AAD34 BLR X8
	0x022AAD38 B 0x22AABEC
	0x022AAD3C LDR X8, [X20 + 0x38]
	0x022AAD40 LDR X0, [X8 + 0x18]
	0x022AAD44 LDRB W8, [X0 + 0x135]
	0x022AAD48 TBNZ X8, 0x0, 0x22AAD50
	0x022AAD4C BL 0x1C5C684
	0x022AAD50 BL 0x1C16F10
	0x022AAD54 LDR X8, [X20 + 0x38]
	0x022AAD58 MOV X26, X0
	0x022AAD5C LDR X1, [X8 + 0x20]
	0x022AAD60 LDR X8, [X1]
	0x022AAD64 BLR X8
	0x022AAD68 MOV X0, X24
	0x022AAD6C MOV X1, X25
	0x022AAD70 MOV X2, X23
	0x022AAD74 BL 0x3EB1AC0
	0x022AAD78 CBZ X26, 0x22AADD4
	0x022AAD7C LDR X8, [X20 + 0x38]
	0x022AAD80 MOV X4, X24
	0x022AAD84 LDR X9, [X8 + 0x10]
	0x022AAD88 LDR W9, [X9 + 0x28]
	0x022AAD8C TBNZ X9, 0x1F, 0x22AAD94
	0x022AAD90 LDR X4, [X24]
	0x022AAD94 LDR X1, [X8 + 0x28]
	0x022AAD98 LDR X0, [X1]
	0x022AAD9C STUR X4, [X29 - 0x60]
	0x022AADA0 LDR X8, [X1 + 0x10]
	0x022AADA4 SUB X3, X29, 0x60
	0x022AADA8 MOV X2, X26
	0x022AADAC BLR X8
	0x022AADB0 MOV X19, X26
	0x022AADB4 B 0x22AABEC
	0x022AADB8 ADRP X8, 0x1E72000
	0x022AADBC LDR X8, [X8 + 0x900]
	0x022AADC0 SUB X0, X29, 0x40
	0x022AADC4 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Move X8, [X20+888]
	014 Add X0, X31, 8
	015 Move X1, X31
	016 Move [X31+8], X8
	017 Call Hierarchy.get_parent, X0
	018 Compare X0, 0
	019 JumpIfEqual {59}
	020 Move X20, X0
	021 Move X8, [X19+56]
	022 Move X1, [X8]
	023 Move W8, [X1+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X1
	029 Call 0x1C5D684
	030 Move X1, X0
	031 Move X0, X20
	032 Call 0x1C17E00
	033 Move X8, [X19+56]
	034 Move X22, X0
	035 Move X21, [X8]
	036 Move W8, [X21+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move X0, X21
	042 Call 0x1C5D684
	043 Move X21, X0
	044 Compare X22, 0
	045 JumpIfNotEqual {54}
	046 Move X8, [X20+888]
	047 Add X0, X31, 8
	048 Move X1, X31
	049 Move [X31+8], X8
	050 Call Hierarchy.get_parent, X0
	051 Move X20, X0
	052 Compare X0, 0
	053 JumpIfNotEqual {21}
	054 Move X0, X22
	055 Move X1, X21
	056 Call 0x1C17E00
	057 Compare X0, 0
	058 JumpIfEqual {65}
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Return X0
	065 Move X0, X22
	066 Move X1, X21
	067 Call 0x1C181E0

Method: UnityEngine.UIElements.VisualElement GetFirstAncestorWhere(System.Predicate`1<UnityEngine.UIElements.VisualElement> predicate)

Disassembly:
	0x03DF79AC LDR X0, [X0 + 0x6C0]
	0x03DF79B0 BL 0x1C16CF4
	0x03DF79B4 ADRP X0, 0x324000
	0x03DF79B8 LDR X0, [X0 + 0x898]
	0x03DF79BC BL 0x1C16CF4
	0x03DF79C0 ADRP X0, 0x372000
	0x03DF79C4 LDR X0, [X0 + 0xA88]
	0x03DF79C8 BL 0x1C16CF4
	0x03DF79CC MOVZ W8, 0x1
	0x03DF79D0 STRB W8, [X23 + 0x27F]
	0x03DF79D4 LDR X0, [X22]
	0x03DF79D8 STR X31, [X31 + 0x8]
	0x03DF79DC ADRP X22, 0x326000
	0x03DF79E0 LDR X21, [X21]
	0x03DF79E4 LDR W8, [X0 + 0xE0]
	0x03DF79E8 LDR X22, [X22 + 0xD08]
	0x03DF79EC CBNZ W8, 0x3DF79F4
	0x03DF79F0 BL 0x1C16DFC
	0x03DF79F4 MOV X0, X21
	0x03DF79F8 MOV X1, X31
	0x03DF79FC BL 0x338C698
	0x03DF7A00 MOV X21, X0
	0x03DF7A04 MOV X0, X20
	0x03DF7A08 BL 0x3DEC4BC
	0x03DF7A0C LDR X0, [X22]
	0x03DF7A10 MOV V8.16B, V0.16B
	0x03DF7A14 LDR W8, [X0 + 0xE0]
	0x03DF7A18 CBNZ W8, 0x3DF7A20
	0x03DF7A1C BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+888]
	005 Move X19, X1
	006 Add X0, X31, 8
	007 Move X1, X31
	008 Move [X31+8], X8
	009 Call Hierarchy.get_parent, X0
	010 Move X20, X0
	011 Compare X0, 0
	012 JumpIfEqual {32}
	013 Compare X19, 0
	014 JumpIfEqual {37}
	015 Move X8, [X19+24]
	016 Move X0, [X19+64]
	017 Move X2, [X19+40]
	018 Move X1, X20
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X8, [X20+888]
	025 Add X0, X31, 8
	026 Move X1, X31
	027 Move [X31+8], X8
	028 Call Hierarchy.get_parent, X0
	029 Move X20, X0
	030 Compare X0, 0
	031 JumpIfNotEqual {15}
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0
	037 Call 0x1C17F20

Method: System.Boolean Contains(UnityEngine.UIElements.VisualElement child)

Disassembly:
	0x03DF01C0 LDR X8, [X8 + 0x938]
	0x03DF01C4 LDR X0, [X8]
	0x03DF01C8 BL 0x2D0D5C8
	0x03DF01CC CBNZ X21, 0x3DF02B0
	0x03DF01D0 CMP X0, X20
	0x03DF01D4 B.NE 0x3DF02B0
	0x03DF01D8 LDR X0, [X19 + 0x3A0]
	0x03DF01DC CBZ X0, 0x3DF03B8
	0x03DF01E0 LDR X8, [X0]
	0x03DF01E4 LDR X9, [X8 + 0x368]
	0x03DF01E8 LDR X1, [X8 + 0x370]
	0x03DF01EC BLR X9
	0x03DF01F0 CBZ X0, 0x3DF03B8
	0x03DF01F4 ADRP X10, 0x377000
	0x03DF01F8 LDR X8, [X0]
	0x03DF01FC LDR X10, [X10 + 0xBE8]
	0x03DF0200 MOV X19, X0
	0x03DF0204 LDRH W9, [X8 + 0x12E]
	0x03DF0208 LDR X1, [X10]
	0x03DF020C CBZ X9, 0x3DF0270
	0x03DF0210 LDR X10, [X8 + 0xB0]
	0x03DF0214 ADD X10, X10, 0x8
	0x03DF0218 LDUR X11, [X10 - 0x8]
	0x03DF021C CMP X11, X1
	0x03DF0220 B.EQ 0x3DF02C4
	0x03DF0224 SUBS X9, X9, 0x1
	0x03DF0228 ADD X10, X10, 0x10
	0x03DF022C B.NE 0x3DF0218

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {25}
	008 Move X20, X1
	009 Move X19, X0
	010 Move X8, [X20+888]
	011 Add X0, X31, 8
	012 Move X1, X31
	013 Move [X31+8], X8
	014 Call Hierarchy.get_parent, X0
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CSET not yet implemented."
	017 Move X8, [X20+888]
	018 Add X0, X31, 8
	019 Move X1, X31
	020 Move [X31+8], X8
	021 Call Hierarchy.get_parent, X0
	022 Move X20, X0
	023 Compare X0, 0
	024 JumpIfNotEqual {10}
	025 Move W21, W31
	026 Move W0, W21
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Add X31, X31, 48
	032 Return X0

Method: System.Void GatherAllChildren(System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> elements)

Disassembly:
	0x03DF1FA0 LDR W8, [X19 + 0x334]
	0x03DF1FA4 CMP W8, W20
	0x03DF1FA8 B.EQ 0x3DF2040
	0x03DF1FAC LDR X0, [X19 + 0x3A0]
	0x03DF1FB0 STR W20, [X19 + 0x334]
	0x03DF1FB4 CBZ X0, 0x3DF1FD0
	0x03DF1FB8 LDR X8, [X0]
	0x03DF1FBC MOVZ W2, 0x8
	0x03DF1FC0 MOV X1, X19
	0x03DF1FC4 LDR X9, [X8 + 0x338]
	0x03DF1FC8 LDR X3, [X8 + 0x340]
	0x03DF1FCC BLR X9
	0x03DF1FD0 LDR X0, [X19 + 0x398]
	0x03DF1FD4 CBZ X0, 0x3DF203C
	0x03DF1FD8 LDR W8, [X0 + 0x18]
	0x03DF1FDC SUBS W21, W8, 0x1
	0x03DF1FE0 B.LT 0x3DF2040
	0x03DF1FE4 ADRP X22, 0x32B000
	0x03DF1FE8 LDR X22, [X22 + 0xF0]
	0x03DF1FEC MOV W20, W31
	0x03DF1FF0 LDR X2, [X22]
	0x03DF1FF4 MOV W1, W20
	0x03DF1FF8 BL 0x301BCCC
	0x03DF1FFC CBZ X0, 0x3DF203C
	0x03DF2000 LDR W8, [X0 + 0x330]
	0x03DF2004 CBNZ W8, 0x3DF2028
	0x03DF2008 LDR X0, [X19 + 0x398]
	0x03DF200C CBZ X0, 0x3DF203C
	0x03DF2010 LDR X2, [X22]
	0x03DF2014 MOV W1, W20
	0x03DF2018 BL 0x301BCCC
	0x03DF201C CBZ X0, 0x3DF203C
	0x03DF2020 LDR W1, [X19 + 0x334]
	0x03DF2024 BL 0x3DF1F60
	0x03DF2028 CMP W21, W20
	0x03DF202C B.EQ 0x3DF2040
	0x03DF2030 LDR X0, [X19 + 0x398]
	0x03DF2034 ADD W20, W20, 0x1
	0x03DF2038 CBNZ X0, 0x3DF1FF0
	0x03DF203C BL 0x1C16F20
	0x03DF2040 LDP X20, X19, [X31 + 0x20]
	0x03DF2044 LDP X22, X21, [X31 + 0x10]
	0x03DF2048 LDR X30, [X31], #0x30
	0x03DF204C RET
	0x03DF2050 STR X30, [X31 - 0x30]!
	0x03DF2054 STP X22, X21, [X31 + 0x10]
	0x03DF2058 STP X20, X19, [X31 + 0x20]
	0x03DF205C ADRP X22, 0x5F6000
	0x03DF2060 ADRP X21, 0x375000
	0x03DF2064 LDRB W8, [X22 + 0x250]
	0x03DF2068 LDR X21, [X21 + 0xBC0]
	0x03DF206C MOV W20, W1
	0x03DF2070 MOV X19, X0
	0x03DF2074 TBNZ X8, 0x0, 0x3DF2098

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5F8000
	007 Move W8, [X21+626]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x373000
	015 Move X0, [X0+3768]
	016 Call 0x1C17CF4
	017 Move X0, 0x32C000
	018 Move X0, [X0+232]
	019 Call 0x1C17CF4
	020 Move X0, 0x32C000
	021 Move X0, [X0+240]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+626], W8
	025 Move X1, [X20+920]
	026 Compare X1, 0
	027 JumpIfEqual {61}
	028 Move W8, [X1+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Compare X19, 0
	031 JumpIfEqual {61}
	032 Move X21, 0x372000
	033 Move X21, [X21+3768]
	034 Move W20, [X19+24]
	035 Move X0, X19
	036 Move X2, [X21]
	037 Call List`1<Object>.AddRange, X0, X1
	038 Move W8, [X19+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X22, 0x32B000
	041 Move X22, [X22+240]
	042 Move X2, [X22]
	043 Move X0, X19
	044 Move W1, W20
	045 Call List`1<Object>.get_Item, X0, X1
	046 Compare X0, 0
	047 JumpIfEqual {61}
	048 Move X1, [X0+920]
	049 Move X2, [X21]
	050 Move X0, X19
	051 Call List`1<Object>.AddRange, X0, X1
	052 Move W8, [X19+24]
	053 Add W20, W20, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return 
	061 Call 0x1C17F20

Method: UnityEngine.UIElements.VisualElement FindCommonAncestor(UnityEngine.UIElements.VisualElement other)

Disassembly:
	0x03DF7A20 ADRP X22, 0x2FC000
	0x03DF7A24 LDR X22, [X22 + 0x598]
	0x03DF7A28 MOV X0, X19
	0x03DF7A2C MOV X1, X21
	0x03DF7A30 MOV V0.16B, V8.16B
	0x03DF7A34 MOV X2, X31
	0x03DF7A38 BL 0x3DBCEFC
	0x03DF7A3C CBZ X0, 0x3DF7A60
	0x03DF7A40 ADRP X8, 0x36C000
	0x03DF7A44 LDR X8, [X8 + 0xE18]
	0x03DF7A48 LDR X9, [X0]
	0x03DF7A4C LDR X8, [X8]
	0x03DF7A50 LDRB W11, [X9 + 0x130]
	0x03DF7A54 LDRB W10, [X8 + 0x130]
	0x03DF7A58 CMP W11, W10
	0x03DF7A5C B.CS 0x3DF7A68
	0x03DF7A60 MOV X21, X31
	0x03DF7A64 B 0x3DF7A7C
	0x03DF7A68 LDR X9, [X9 + 0xC8]
	0x03DF7A6C ADD X9, X9, X10, 0x3, LSL
	0x03DF7A70 LDUR X9, [X9 - 0x8]
	0x03DF7A74 CMP X9, X8
	0x03DF7A78 CSEL X21, X0, X31, EQ
	0x03DF7A7C LDR X0, [X22]
	0x03DF7A80 LDR W8, [X0 + 0xE0]
	0x03DF7A84 CBNZ W8, 0x3DF7A8C
	0x03DF7A88 BL 0x1C16DFC
	0x03DF7A8C MOV X0, X21
	0x03DF7A90 MOV X1, X31
	0x03DF7A94 MOV X2, X31
	0x03DF7A98 BL 0x3C3883C
	0x03DF7A9C TBZ X0, 0x0, 0x3DF7B20
	0x03DF7AA0 ADRP X20, 0x324000
	0x03DF7AA4 LDR X20, [X20 + 0x898]
	0x03DF7AA8 LDR X0, [X20]
	0x03DF7AAC LDR W8, [X0 + 0xE0]
	0x03DF7AB0 CBNZ W8, 0x3DF7ABC
	0x03DF7AB4 BL 0x1C16DFC
	0x03DF7AB8 LDR X0, [X20]
	0x03DF7ABC LDR X8, [X0 + 0xB8]
	0x03DF7AC0 LDR X0, [X8 + 0x58]
	0x03DF7AC4 CBZ X0, 0x3DF7B64
	0x03DF7AC8 MOV X1, X19
	0x03DF7ACC MOV X2, X31
	0x03DF7AD0 BL 0x3632A38
	0x03DF7AD4 TBNZ X0, 0x0, 0x3DF7B4C
	0x03DF7AD8 ADRP X8, 0x372000
	0x03DF7ADC LDR X8, [X8 + 0xA88]
	0x03DF7AE0 MOV X1, X19
	0x03DF7AE4 MOV X2, X31
	0x03DF7AE8 LDR X0, [X8]
	0x03DF7AEC BL 0x321EFD0
	0x03DF7AF0 ADRP X8, 0x2FC000
	0x03DF7AF4 LDR X8, [X8 + 0xA28]
	0x03DF7AF8 MOV X19, X0
	0x03DF7AFC LDR X8, [X8]
	0x03DF7B00 LDR W9, [X8 + 0xE0]
	0x03DF7B04 CBNZ W9, 0x3DF7B10
	0x03DF7B08 MOV X0, X8
	0x03DF7B0C BL 0x1C16DFC
	0x03DF7B10 MOV X0, X19
	0x03DF7B14 MOV X1, X31
	0x03DF7B18 BL 0x3C06A04
	0x03DF7B1C B 0x3DF7B4C
	0x03DF7B20 ADD X0, X31, 0x18
	0x03DF7B24 MOV X1, X20
	0x03DF7B28 MOV X2, X31
	0x03DF7B2C STR X31, [X31 + 0x18]
	0x03DF7B30 BL 0x3D19770
	0x03DF7B34 LDR X8, [X31 + 0x18]
	0x03DF7B38 ADD X0, X31, 0x8
	0x03DF7B3C MOV X1, X21
	0x03DF7B40 MOV X2, X31
	0x03DF7B44 STR X8, [X31 + 0x8]
	0x03DF7B48 BL 0x3D19778
	0x03DF7B4C LDP X20, X19, [X31 + 0x40]
	0x03DF7B50 LDP X22, X21, [X31 + 0x30]
	0x03DF7B54 LDP X30, X23, [X31 + 0x20]
	0x03DF7B58 LDR V8, [X31 + 0x10]
	0x03DF7B5C ADD X31, X31, 0x50
	0x03DF7B60 RET
	0x03DF7B64 BL 0x1C16F20
	0x03DF7B68 STR X30, [X31 - 0x30]!
	0x03DF7B6C STP X22, X21, [X31 + 0x10]
	0x03DF7B70 STP X20, X19, [X31 + 0x20]
	0x03DF7B74 ADRP X21, 0x5F1000
	0x03DF7B78 ADRP X22, 0x324000
	0x03DF7B7C LDRB W8, [X21 + 0x284]
	0x03DF7B80 LDR X22, [X22 + 0x898]
	0x03DF7B84 MOV X19, X1
	0x03DF7B88 MOV X20, X0
	0x03DF7B8C TBNZ X8, 0x0, 0x3DF7BC8
	0x03DF7B90 ADRP X0, 0x372000
	0x03DF7B94 LDR X0, [X0 + 0xA90]
	0x03DF7B98 BL 0x1C16CF4
	0x03DF7B9C ADRP X0, 0x372000
	0x03DF7BA0 LDR X0, [X0 + 0xA98]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {82}
	008 Move X8, [X0+928]
	009 Move X9, [X1+928]
	010 Move X20, X1
	011 Move X19, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X19, X31
	014 Move W21, W31
	015 Move X0, X19
	016 Move X8, [X0+888]
	017 Add X0, X31, 8
	018 Move X1, X31
	019 Add W21, W21, 1
	020 Move [X31+8], X8
	021 Call Hierarchy.get_parent, X0
	022 Compare X0, 0
	023 JumpIfNotEqual {16}
	024 Move W22, W31
	025 Move X0, X20
	026 Move X8, [X0+888]
	027 Add X0, X31, 8
	028 Move X1, X31
	029 Add W22, W22, 1
	030 Move [X31+8], X8
	031 Call Hierarchy.get_parent, X0
	032 Compare X0, 0
	033 JumpIfNotEqual {26}
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare X19, 0
	036 JumpIfEqual {81}
	037 Move X8, [X19+888]
	038 Add X0, X31, 8
	039 Move X1, X31
	040 Subtract W21, W21, 1
	041 Move [X31+8], X8
	042 Call Hierarchy.get_parent, X0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X19, X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Compare X20, 0
	047 JumpIfEqual {81}
	048 Move X8, [X20+888]
	049 Add X0, X31, 8
	050 Move X1, X31
	051 Subtract W22, W22, 1
	052 Move [X31+8], X8
	053 Call Hierarchy.get_parent, X0
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X20, X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Compare X19, 0
	058 JumpIfEqual {81}
	059 Move X8, [X19+888]
	060 Add X0, X31, 8
	061 Move X1, X31
	062 Move [X31+8], X8
	063 Call Hierarchy.get_parent, X0
	064 Compare X20, 0
	065 JumpIfEqual {81}
	066 Move X8, [X20+888]
	067 Move X19, X0
	068 Add X0, X31, 8
	069 Move X1, X31
	070 Move [X31+8], X8
	071 Call Hierarchy.get_parent, X0
	072 Move X20, X0
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X19
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Return X0
	081 Call 0x1C17F20
	082 Move X0, 0x302000
	083 Move X0, [X0+1320]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X19, X0
	087 Move X0, 0x327000
	088 Move X0, [X0+2344]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Move X2, X31
	093 Call ArgumentNullException..ctor, X0, X1
	094 Move X0, 0x373000
	095 Move X0, [X0+2672]
	096 Call 0x1C17D08
	097 Move X1, X0
	098 Move X0, X19
	099 Call 0x1C17DEC

Method: UnityEngine.UIElements.VisualElement GetRoot()

Disassembly:
	0x03DF7BA4 BL 0x1C16CF4
	0x03DF7BA8 ADRP X0, 0x372000
	0x03DF7BAC LDR X0, [X0 + 0xAA0]
	0x03DF7BB0 BL 0x1C16CF4
	0x03DF7BB4 ADRP X0, 0x324000
	0x03DF7BB8 LDR X0, [X0 + 0x898]
	0x03DF7BBC BL 0x1C16CF4
	0x03DF7BC0 MOVZ W8, 0x1
	0x03DF7BC4 STRB W8, [X21 + 0x284]
	0x03DF7BC8 LDR X0, [X22]
	0x03DF7BCC LDR W8, [X0 + 0xE0]
	0x03DF7BD0 CBNZ W8, 0x3DF7BDC
	0x03DF7BD4 BL 0x1C16DFC
	0x03DF7BD8 LDR X0, [X22]
	0x03DF7BDC LDR X8, [X0 + 0xB8]
	0x03DF7BE0 MOV X0, X20
	0x03DF7BE4 LDR W1, [X8 + 0x60]
	0x03DF7BE8 BL 0x3DF326C
	0x03DF7BEC TBNZ X0, 0x0, 0x3DF7C58
	0x03DF7BF0 MOV X0, X19
	0x03DF7BF4 MOV X1, X31
	0x03DF7BF8 BL 0x32277A8
	0x03DF7BFC TBZ X0, 0x0, 0x3DF7C10
	0x03DF7C00 LDP X20, X19, [X31 + 0x20]
	0x03DF7C04 LDP X22, X21, [X31 + 0x10]
	0x03DF7C08 LDR X30, [X31], #0x30
	0x03DF7C0C RET
	0x03DF7C10 ADRP X8, 0x372000
	0x03DF7C14 LDR X8, [X8 + 0xA98]
	0x03DF7C18 LDR X0, [X8]
	0x03DF7C1C BL 0x1C16F10
	0x03DF7C20 ADRP X8, 0x372000
	0x03DF7C24 LDR X8, [X8 + 0xAA0]
	0x03DF7C28 MOV X1, X20
	0x03DF7C2C MOV X3, X31
	0x03DF7C30 MOV X21, X0
	0x03DF7C34 LDR X2, [X8]
	0x03DF7C38 BL 0x2D0E824
	0x03DF7C3C ADRP X8, 0x372000
	0x03DF7C40 LDR X8, [X8 + 0xA90]
	0x03DF7C44 MOV X0, X20
	0x03DF7C48 MOV X1, X21
	0x03DF7C4C MOV W2, W31
	0x03DF7C50 LDR X3, [X8]
	0x03DF7C54 BL 0x21A1534
	0x03DF7C58 LDR X0, [X22]
	0x03DF7C5C LDR W8, [X0 + 0xE0]
	0x03DF7C60 CBNZ W8, 0x3DF7C6C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x5F2000
	005 Move W8, [X19+627]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x326000
	012 Move X0, [X0+3712]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+627], W8
	016 Move X19, [X20+928]
	017 Compare X19, 0
	018 JumpIfEqual {35}
	019 Move X10, 0x326000
	020 Move X8, [X19]
	021 Move X10, [X10+3712]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X19
	033 Move W2, W31
	034 Call 0x1C5D788
	035 Move X8, [X20+904]
	036 Compare X8, 0
	037 JumpIfEqual {42}
	038 Move X20, X8
	039 Move X8, [X8+904]
	040 Compare X8, 0
	041 JumpIfNotEqual {38}
	042 Move X0, X20
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Return X0
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Add X8, X8, X9
	049 Add X0, X8, 312
	050 Move X2, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 CallNoReturn X2

Method: UnityEngine.UIElements.VisualElement GetRootVisualContainer()

Disassembly:
	0x03DF7C64 BL 0x1C16DFC
	0x03DF7C68 LDR X0, [X22]
	0x03DF7C6C LDR X8, [X0 + 0xB8]
	0x03DF7C70 MOV X0, X20
	0x03DF7C74 MOV X2, X19
	0x03DF7C78 LDP X20, X19, [X31 + 0x20]
	0x03DF7C7C LDR W1, [X8 + 0x60]
	0x03DF7C80 LDP X22, X21, [X31 + 0x10]
	0x03DF7C84 LDR X30, [X31], #0x30
	0x03DF7C88 B 0x3DF31F4
	0x03DF7C8C SUB X31, X31, 0x30
	0x03DF7C90 STP X30, X21, [X31 + 0x10]
	0x03DF7C94 STP X20, X19, [X31 + 0x20]
	0x03DF7C98 ADRP X20, 0x5F1000
	0x03DF7C9C ADRP X21, 0x324000
	0x03DF7CA0 LDRB W8, [X20 + 0x285]
	0x03DF7CA4 LDR X21, [X21 + 0x898]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X31
	005 Compare X0, 0
	006 JumpIfEqual {17}
	007 Move W8, [X0+896]
	008 Move X9, [X0+888]
	009 Move X1, X31
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CSEL not yet implemented."
	012 Add X0, X31, 8
	013 Move [X31+8], X9
	014 Call Hierarchy.get_parent, X0
	015 Compare X0, 0
	016 JumpIfNotEqual {7}
	017 Move X0, X19
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Add X31, X31, 32
	021 Return X0

Method: UnityEngine.UIElements.VisualElement GetNextElementDepthFirst()

Disassembly:
	0x03DF7CA8 MOV X19, X0
	0x03DF7CAC TBNZ X8, 0x0, 0x3DF7CE8
	0x03DF7CB0 ADRP X0, 0x372000
	0x03DF7CB4 LDR X0, [X0 + 0x918]
	0x03DF7CB8 BL 0x1C16CF4
	0x03DF7CBC ADRP X0, 0x372000
	0x03DF7CC0 LDR X0, [X0 + 0x920]
	0x03DF7CC4 BL 0x1C16CF4
	0x03DF7CC8 ADRP X0, 0x372000
	0x03DF7CCC LDR X0, [X0 + 0x928]
	0x03DF7CD0 BL 0x1C16CF4
	0x03DF7CD4 ADRP X0, 0x324000
	0x03DF7CD8 LDR X0, [X0 + 0x898]
	0x03DF7CDC BL 0x1C16CF4
	0x03DF7CE0 MOVZ W8, 0x1
	0x03DF7CE4 STRB W8, [X20 + 0x285]
	0x03DF7CE8 LDR X0, [X21]
	0x03DF7CEC STR X31, [X31 + 0x8]
	0x03DF7CF0 LDR W8, [X0 + 0xE0]
	0x03DF7CF4 CBNZ W8, 0x3DF7D00
	0x03DF7CF8 BL 0x1C16DFC
	0x03DF7CFC LDR X0, [X21]
	0x03DF7D00 LDR X8, [X0 + 0xB8]
	0x03DF7D04 LDR X0, [X8 + 0x68]
	0x03DF7D08 CBZ X0, 0x3DF7D98
	0x03DF7D0C ADRP X8, 0x372000
	0x03DF7D10 LDR X8, [X8 + 0x920]
	0x03DF7D14 ADD X2, X31, 0x8
	0x03DF7D18 MOV X1, X19
	0x03DF7D1C LDR X3, [X8]
	0x03DF7D20 BL 0x2AA6B2C
	0x03DF7D24 TBNZ X0, 0x0, 0x3DF7D84
	0x03DF7D28 ADRP X8, 0x372000
	0x03DF7D2C LDR X8, [X8 + 0x928]
	0x03DF7D30 LDR X0, [X8]
	0x03DF7D34 BL 0x1C16F10
	0x03DF7D38 MOV X1, X19
	0x03DF7D3C MOV X2, X31
	0x03DF7D40 MOV X20, X0
	0x03DF7D44 BL 0x3DFA8F0
	0x03DF7D48 LDR X0, [X21]
	0x03DF7D4C STR X20, [X31 + 0x8]
	0x03DF7D50 LDR W8, [X0 + 0xE0]
	0x03DF7D54 CBNZ W8, 0x3DF7D60
	0x03DF7D58 BL 0x1C16DFC
	0x03DF7D5C LDR X0, [X21]
	0x03DF7D60 LDR X8, [X0 + 0xB8]
	0x03DF7D64 LDR X0, [X8 + 0x68]
	0x03DF7D68 CBZ X0, 0x3DF7D98
	0x03DF7D6C ADRP X8, 0x372000
	0x03DF7D70 LDR X2, [X31 + 0x8]
	0x03DF7D74 LDR X8, [X8 + 0x918]
	0x03DF7D78 MOV X1, X19
	0x03DF7D7C LDR X3, [X8]
	0x03DF7D80 BL 0x2AA5098
	0x03DF7D84 LDR X0, [X31 + 0x8]
	0x03DF7D88 LDP X20, X19, [X31 + 0x20]
	0x03DF7D8C LDP X30, X21, [X31 + 0x10]
	0x03DF7D90 ADD X31, X31, 0x30
	0x03DF7D94 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x5F2000
	008 Move W8, [X20+628]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x326000
	015 Move X0, [X0+232]
	016 Call 0x1C17CF4
	017 Move X0, 0x326000
	018 Move X0, [X0+240]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+628], W8
	022 Move X0, [X19+920]
	023 Compare X0, 0
	024 JumpIfEqual {73}
	025 Move W8, [X0+24]
	026 Move X22, 0x326000
	027 Move X22, [X22+240]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W20, W31
	030 Move X2, [X22]
	031 Move W1, W20
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call List`1<Object>.get_Item, X0, X1
	039 Return X0
	040 Move X0, [X19+920]
	041 Compare X0, 0
	042 JumpIfEqual {73}
	043 Move W20, 1
	044 Move W8, [X0+24]
	045 Subtract W21, W20, 1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X2, [X22]
	048 Move W1, W21
	049 Call List`1<Object>.get_Item, X0, X1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X19+920]
	052 Add W20, W20, 1
	053 Compare X0, 0
	054 JumpIfNotEqual {44}
	055 Move X0, [X19+920]
	056 Compare X0, 0
	057 JumpIfEqual {73}
	058 Move W8, [X0+24]
	059 Subtract W8, W8, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X23, X19
	062 Move X19, [X19+904]
	063 Compare X19, 0
	064 JumpIfNotEqual {40}
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X0, X31
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Return X0
	073 Call 0x1C17F20

Method: UnityEngine.UIElements.VisualElement GetPreviousElementDepthFirst()

Disassembly:
	0x03DF7D98 BL 0x1C16F20
	0x03DF7D9C SUB X31, X31, 0x70
	0x03DF7DA0 STP X29, X30, [X31 + 0x10]
	0x03DF7DA4 STP X28, X27, [X31 + 0x20]
	0x03DF7DA8 STP X26, X25, [X31 + 0x30]
	0x03DF7DAC STP X24, X23, [X31 + 0x40]
	0x03DF7DB0 STP X22, X21, [X31 + 0x50]
	0x03DF7DB4 STP X20, X19, [X31 + 0x60]
	0x03DF7DB8 ADRP X23, 0x5F1000
	0x03DF7DBC ADRP X24, 0x2FD000
	0x03DF7DC0 ADRP X19, 0x305000
	0x03DF7DC4 ADRP X20, 0x324000
	0x03DF7DC8 ADRP X22, 0x372000
	0x03DF7DCC ADRP X21, 0x372000
	0x03DF7DD0 ADRP X29, 0x372000
	0x03DF7DD4 ADRP X28, 0x36C000
	0x03DF7DD8 ADRP X27, 0x36C000
	0x03DF7DDC ADRP X26, 0x372000
	0x03DF7DE0 ADRP X25, 0x304000
	0x03DF7DE4 LDR X24, [X24 + 0x1D0]
	0x03DF7DE8 LDR X19, [X19 + 0x118]
	0x03DF7DEC LDR X20, [X20 + 0x898]
	0x03DF7DF0 LDR X22, [X22 + 0xAA8]
	0x03DF7DF4 LDR X21, [X21 + 0xAB0]
	0x03DF7DF8 LDR X29, [X29 + 0xAB8]
	0x03DF7DFC LDR X28, [X28 + 0xF10]
	0x03DF7E00 LDR X27, [X27 + 0xF18]
	0x03DF7E04 LDR X26, [X26 + 0xAC0]
	0x03DF7E08 LDRB W8, [X23 + 0x287]
	0x03DF7E0C LDR X25, [X25 + 0x600]
	0x03DF7E10 TBNZ X8, 0x0, 0x3DF7EC4
	0x03DF7E14 ADRP X0, 0x372000
	0x03DF7E18 LDR X0, [X0 + 0xAC0]
	0x03DF7E1C BL 0x1C16CF4
	0x03DF7E20 ADRP X0, 0x372000
	0x03DF7E24 LDR X0, [X0 + 0xAC8]
	0x03DF7E28 BL 0x1C16CF4
	0x03DF7E2C ADRP X0, 0x372000
	0x03DF7E30 LDR X0, [X0 + 0xAD0]
	0x03DF7E34 BL 0x1C16CF4
	0x03DF7E38 ADRP X0, 0x305000
	0x03DF7E3C LDR X0, [X0 + 0x118]
	0x03DF7E40 BL 0x1C16CF4
	0x03DF7E44 ADRP X0, 0x36C000
	0x03DF7E48 LDR X0, [X0 + 0xF18]
	0x03DF7E4C BL 0x1C16CF4
	0x03DF7E50 ADRP X0, 0x36C000
	0x03DF7E54 LDR X0, [X0 + 0xF10]
	0x03DF7E58 BL 0x1C16CF4
	0x03DF7E5C ADRP X0, 0x2FD000
	0x03DF7E60 LDR X0, [X0 + 0x1D0]
	0x03DF7E64 BL 0x1C16CF4
	0x03DF7E68 ADRP X0, 0x304000
	0x03DF7E6C LDR X0, [X0 + 0x600]
	0x03DF7E70 BL 0x1C16CF4
	0x03DF7E74 ADRP X0, 0x324000
	0x03DF7E78 LDR X0, [X0 + 0x898]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5F2000
	006 Move W8, [X20+629]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x326000
	013 Move X0, [X0+232]
	014 Call 0x1C17CF4
	015 Move X0, 0x326000
	016 Move X0, [X0+240]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+629], W8
	020 Move X0, [X19+904]
	021 Compare X0, 0
	022 JumpIfEqual {62}
	023 Move X21, 0x326000
	024 Move X21, [X21+240]
	025 Move TEMP, 0
	026 Not TEMP
	027 Move W20, TEMP
	028 Move X8, [X0+920]
	029 Compare X8, 0
	030 JumpIfEqual {67}
	031 Move W9, [X8+24]
	032 Add W1, W20, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X2, [X21]
	035 Move X0, X8
	036 Call List`1<Object>.get_Item, X0, X1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, [X19+904]
	039 Add W20, W20, 1
	040 Compare X0, 0
	041 JumpIfNotEqual {28}
	042 Move X0, [X19+904]
	043 Add W31, W20, 1
	044 Compare X0, 0
	045 JumpIfEqual {67}
	046 Move X0, [X0+920]
	047 Compare X0, 0
	048 JumpIfEqual {67}
	049 Move X2, [X21]
	050 Move W1, W20
	051 Call List`1<Object>.get_Item, X0, X1
	052 Compare X0, 0
	053 JumpIfEqual {67}
	054 Move X8, [X0+920]
	055 Compare X8, 0
	056 JumpIfEqual {67}
	057 Move W9, [X8+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X2, [X21]
	060 Subtract W1, W9, 1
	061 Move X0, X8
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Return X0
	067 Call 0x1C17F20

Method: UnityEngine.UIElements.VisualElement RetargetElement(UnityEngine.UIElements.VisualElement retargetAgainst)

Disassembly:
	0x03DF7E7C BL 0x1C16CF4
	0x03DF7E80 ADRP X0, 0x372000
	0x03DF7E84 LDR X0, [X0 + 0xAB0]
	0x03DF7E88 BL 0x1C16CF4
	0x03DF7E8C ADRP X0, 0x372000
	0x03DF7E90 LDR X0, [X0 + 0xAB8]
	0x03DF7E94 BL 0x1C16CF4
	0x03DF7E98 ADRP X0, 0x372000
	0x03DF7E9C LDR X0, [X0 + 0xAD8]
	0x03DF7EA0 BL 0x1C16CF4
	0x03DF7EA4 ADRP X0, 0x372000
	0x03DF7EA8 LDR X0, [X0 + 0xAE0]
	0x03DF7EAC BL 0x1C16CF4
	0x03DF7EB0 ADRP X0, 0x372000
	0x03DF7EB4 LDR X0, [X0 + 0xAA8]
	0x03DF7EB8 BL 0x1C16CF4
	0x03DF7EBC MOVZ W8, 0x1
	0x03DF7EC0 STRB W8, [X23 + 0x287]
	0x03DF7EC4 LDR X0, [X24]
	0x03DF7EC8 BL 0x1C16F10
	0x03DF7ECC LDR X2, [X19]
	0x03DF7ED0 MOV W1, W31
	0x03DF7ED4 MOV X19, X0
	0x03DF7ED8 BL 0x301B830
	0x03DF7EDC LDR X8, [X20]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {33}
	003 Move X8, [X1+904]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Move X8, X9
	007 Move X9, [X9+904]
	008 Compare X9, 0
	009 JumpIfEqual {15}
	010 Move W10, [X8+80]
	011 Move TEMP, X10
	012 And TEMP, TEMP, 128
	013 Compare TEMP, 128
	014 JumpIfNotEqual {6}
	015 Move X9, [X0+904]
	016 Compare X9, 0
	017 JumpIfEqual {33}
	018 Move X1, X0
	019 Move X9, [X9+904]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move W10, [X9+80]
	024 Move X2, X9
	025 Move TEMP, X10
	026 And TEMP, TEMP, 128
	027 Compare TEMP, 128
	028 JumpIfEqual {30}
	029 Move X2, X1
	030 Move X1, X2
	031 Compare X9, 0
	032 JumpIfNotEqual {19}
	033 Return X0
	034 Move X0, X1
	035 Return X0

Method: UnityEngine.Vector3 get_positionWithLayout()

Disassembly:
	0x03DEF0F4 LDR W8, [X19 + 0x2AC]
	0x03DEF0F8 AND W1, W8, 0xFFFFFFFD
	0x03DEF0FC MOV X0, X19
	0x03DEF100 LDP X20, X19, [X31 + 0x20]
	0x03DEF104 LDP X22, X21, [X31 + 0x10]
	0x03DEF108 LDR X30, [X31], #0x30
	0x03DEF10C B 0x3DEEF90
	0x03DEF110 LDR W8, [X19 + 0x2AC]
	0x03DEF114 ORR W1, W8, 0x2
	0x03DEF118 B 0x3DEF0FC
	0x03DEF11C STP X30, X21, [X31 - 0x20]!
	0x03DEF120 STP X20, X19, [X31 + 0x10]
	0x03DEF124 ADRP X21, 0x5F9000
	0x03DEF128 LDRB W8, [X21 + 0x244]
	0x03DEF12C MOV X20, X1
	0x03DEF130 MOV X19, X0
	0x03DEF134 TBNZ X8, 0x0, 0x3DEF14C
	0x03DEF138 ADRP X0, 0x32C000

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Call VisualElement.ResolveTranslate, X0
	008 Move X0, X19
	009 Move V8, V0
	010 Move V9, V1
	011 Move V10, V2
	012 Call VisualElement.get_layout, X0
	013 Add S0, S8, S0
	014 Add S1, S9, S1
	015 Move X30, [X31+32]
	016 Move X19, [X31+40]
	017 Move D9, [X31+16]
	018 Move D8, [X31+24]
	019 Move S2, W31
	020 Add S2, S10, S2
	021 Move V10, [X31+48]
	022 Return X0

Method: System.Void GetPivotedMatrixWithLayout(out UnityEngine.Matrix4x4 result)

Disassembly:
	0x03DEF13C LDR X0, [X0 + 0x898]
	0x03DEF140 BL 0x1C16CF4
	0x03DEF144 MOVZ W8, 0x1
	0x03DEF148 STRB W8, [X21 + 0x244]
	0x03DEF14C CBZ X19, 0x3DEF18C
	0x03DEF150 LDR X8, [X20]
	0x03DEF154 MOVZ W0, 0x1
	0x03DEF158 CBZ X8, 0x3DEF190
	0x03DEF15C CMP X8, X19
	0x03DEF160 B.EQ 0x3DEF190
	0x03DEF164 ADRP X9, 0x32C000
	0x03DEF168 LDR X9, [X9 + 0x898]
	0x03DEF16C LDR X10, [X8]
	0x03DEF170 LDR X9, [X9]
	0x03DEF174 LDRB W12, [X10 + 0x130]
	0x03DEF178 LDRB W11, [X9 + 0x130]
	0x03DEF17C CMP W12, W11
	0x03DEF180 B.CS 0x3DEF19C
	0x03DEF184 MOV X1, X31
	0x03DEF188 B 0x3DEF1B0
	0x03DEF18C MOV W0, W31
	0x03DEF190 LDP X20, X19, [X31 + 0x10]
	0x03DEF194 LDP X30, X21, [X31], #0x20
	0x03DEF198 RET
	0x03DEF19C LDR X10, [X10 + 0xC8]
	0x03DEF1A0 ADD X10, X10, X11, 0x3, LSL
	0x03DEF1A4 LDUR X10, [X10 - 0x8]
	0x03DEF1A8 CMP X10, X9
	0x03DEF1AC CSEL X1, X8, X31, EQ
	0x03DEF1B0 MOV X0, X19
	0x03DEF1B4 LDP X20, X19, [X31 + 0x10]
	0x03DEF1B8 LDP X30, X21, [X31], #0x20
	0x03DEF1BC B 0x3DEF1C0
	0x03DEF1C0 SUB X31, X31, 0x30
	0x03DEF1C4 STP X30, X21, [X31 + 0x10]
	0x03DEF1C8 STP X20, X19, [X31 + 0x20]
	0x03DEF1CC CBZ X1, 0x3DEF218
	0x03DEF1D0 MOV X20, X1
	0x03DEF1D4 MOV X19, X0
	0x03DEF1D8 LDR X8, [X20 + 0x378]
	0x03DEF1DC ADD X0, X31, 0x8
	0x03DEF1E0 MOV X1, X31
	0x03DEF1E4 STR X8, [X31 + 0x8]
	0x03DEF1E8 BL 0x3DF88DC
	0x03DEF1EC CMP X0, X19
	0x03DEF1F0 CSET W21, EQ
	0x03DEF1F4 B.EQ 0x3DEF21C
	0x03DEF1F8 LDR X8, [X20 + 0x378]
	0x03DEF1FC ADD X0, X31, 0x8
	0x03DEF200 MOV X1, X31
	0x03DEF204 STR X8, [X31 + 0x8]
	0x03DEF208 BL 0x3DF88DC
	0x03DEF20C MOV X20, X0
	0x03DEF210 CBNZ X0, 0x3DEF1D8
	0x03DEF214 B 0x3DEF21C
	0x03DEF218 MOV W21, W31
	0x03DEF21C MOV W0, W21
	0x03DEF220 LDP X20, X19, [X31 + 0x20]
	0x03DEF224 LDP X30, X21, [X31 + 0x10]
	0x03DEF228 ADD X31, X31, 0x30
	0x03DEF22C RET
	0x03DEF230 LDR W0, [X0 + 0x2B4]
	0x03DEF234 RET
	0x03DEF238 LDR W9, [X0 + 0x2B4]
	0x03DEF23C CMP W9, W1
	0x03DEF240 B.EQ 0x3DEF26C
	0x03DEF244 MOV X8, X0
	0x03DEF248 LDR X0, [X0 + 0x3A0]
	0x03DEF24C STR W1, [X8 + 0x2B4]
	0x03DEF250 CBZ X0, 0x3DEF26C
	0x03DEF254 LDR X9, [X0]
	0x03DEF258 MOVZ W2, 0x100000
	0x03DEF25C MOV X1, X8
	0x03DEF260 LDR X4, [X9 + 0x338]
	0x03DEF264 LDR X3, [X9 + 0x340]
	0x03DEF268 BR X4
	0x03DEF26C RET
	0x03DEF270 LDR X0, [X0 + 0x38]
	0x03DEF274 RET
	0x03DEF278 STR X30, [X31 - 0x20]!
	0x03DEF27C STP X20, X19, [X31 + 0x10]
	0x03DEF280 MOV X19, X0
	0x03DEF284 LDR X0, [X0 + 0x38]
	0x03DEF288 MOV X2, X31
	0x03DEF28C MOV X20, X1
	0x03DEF290 BL 0x321BA08
	0x03DEF294 TBNZ X0, 0x0, 0x3DEF2C4
	0x03DEF298 LDR X0, [X19 + 0x3A0]
	0x03DEF29C STR X20, [X19 + 0x38]
	0x03DEF2A0 CBZ X0, 0x3DEF2C4
	0x03DEF2A4 LDR X8, [X0]
	0x03DEF2A8 MOV X1, X19
	0x03DEF2AC LDP X20, X19, [X31 + 0x10]
	0x03DEF2B0 MOVZ W2, 0x10
	0x03DEF2B4 LDR X4, [X8 + 0x338]
	0x03DEF2B8 LDR X3, [X8 + 0x340]
	0x03DEF2BC LDR X30, [X31], #0x20
	0x03DEF2C0 BR X4

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+192], D15
	003 Move [X31+200], D14
	004 Move [X31+208], D13
	005 Move [X31+216], D12
	006 Move [X31+224], D11
	007 Move [X31+232], D10
	008 Move [X31+240], D9
	009 Move [X31+248], D8
	010 Move [X31+256], X29
	011 Move [X31+264], X30
	012 Move [X31+272], X22
	013 Move [X31+280], X21
	014 Move [X31+288], X20
	015 Move [X31+296], X19
	016 Move X22, 0x5FA000
	017 Move X21, 0x32D000
	018 Move W8, [X22+630]
	019 Move X21, [X21+2200]
	020 Move X19, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x32D000
	027 Move X0, [X0+2200]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+630], W8
	031 Move X0, X20
	032 Call VisualElement.ResolveTransformOrigin, X0
	033 Move X0, X20
	034 Move [X31+48], D0
	035 Move V8, V1
	036 Move [X31+32], D2
	037 Call VisualElement.get_positionWithLayout, X0
	038 Move V3, [X31+3]
	039 Move X0, X20
	040 Add S10, S8, S1
	041 Add S9, S3, S0
	042 Move V0, [X31+2]
	043 Add S11, S0, S2
	044 Call VisualElement.ResolveRotation, X0
	045 Move X0, X20
	046 Move V12, V0
	047 Move V13, V1
	048 Move V14, V2
	049 Move V15, V3
	050 Call VisualElement.ResolveScale, X0
	051 Move [X31+4], S1
	052 Move [X31+12], S2
	053 Add X8, X31, 64
	054 Move [X31], S0
	055 Move V0, V9
	056 Move V1, V10
	057 Move V2, V11
	058 Move V3, V12
	059 Move V4, V13
	060 Move V5, V14
	061 Move V6, V15
	062 Move X0, X31
	063 Call Matrix4x4.TRS, X0, X1, X2
	064 Move V1, [X31+96]
	065 Move V0, [X31+112]
	066 Move V3, [X31+64]
	067 Move V2, [X31+80]
	068 NotImplemented "Instruction FNEG not yet implemented."
	069 Move [X31+160], V1
	070 Move [X31+168], V0
	071 Move [X31+128], V3
	072 Move [X31+136], V2
	073 Move [X19+32], V1
	074 Move [X19+40], V0
	075 Move [X19], V3
	076 Move [X19+8], V2
	077 Move X0, [X21]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {84}
	081 Move [X31+1], V5
	082 Call 0x1C17DFC
	083 Move V5, [X31+1]
	084 Move V0, [X19]
	085 Move V1, [X19+16]
	086 Move V2, [X19+24]
	087 Move V4, [X19+8]
	088 Move V6, [X31+3]
	089 Move V3, [X19+32]
	090 NotImplemented "Instruction INVALID not yet implemented."
	091 Multiply S2, S2, S5
	092 Move V5, [X19+40]
	093 NotImplemented "Instruction INVALID not yet implemented."
	094 Multiply S4, S6, S4
	095 Move V6, [X31+2]
	096 Subtract V0, V1, V0
	097 Move V1, [X19+56]
	098 Subtract S2, S2, S4
	099 NotImplemented "Instruction INVALID not yet implemented."
	100 Multiply S5, S6, S5
	101 Move V6, [X19+48]
	102 Subtract V0, V0, V3
	103 Subtract S2, S2, S5
	104 Add S1, S1, S2
	105 Add V0, V6, V0
	106 Move [X19+48], D0
	107 Move [X19+56], S1
	108 Move X20, [X31+288]
	109 Move X19, [X31+296]
	110 Move X22, [X31+272]
	111 Move X21, [X31+280]
	112 Move X29, [X31+256]
	113 Move X30, [X31+264]
	114 Move D9, [X31+240]
	115 Move D8, [X31+248]
	116 Move D11, [X31+224]
	117 Move D10, [X31+232]
	118 Move D13, [X31+208]
	119 Move D12, [X31+216]
	120 Move D15, [X31+192]
	121 Move D14, [X31+200]
	122 Add X31, X31, 304
	123 Return 

Method: System.Boolean get_hasDefaultRotationAndScale()

Disassembly:
	0x03DF8024 LDP X20, X19, [X31 + 0x60]
	0x03DF8028 ADD X31, X31, 0x70
	0x03DF802C RET
	0x03DF8030 B 0x3DF2A38
	0x03DF8034 SUB X31, X31, 0xB0
	0x03DF8038 STP D11, D10, [X31 + 0x70]
	0x03DF803C STP D9, D8, [X31 + 0x80]
	0x03DF8040 STP X30, X21, [X31 + 0x90]
	0x03DF8044 STP X20, X19, [X31 + 0xA0]
	0x03DF8048 ADRP X21, 0x5F0000
	0x03DF804C LDRB W8, [X21 + 0x288]
	0x03DF8050 MOV X19, X1
	0x03DF8054 MOV X20, X0
	0x03DF8058 CBNZ W8, 0x3DF8070
	0x03DF805C ADRP X0, 0x323000
	0x03DF8060 LDR X0, [X0 + 0x898]
	0x03DF8064 BL 0x1C16CF4
	0x03DF8068 MOVZ W8, 0x1
	0x03DF806C STRB W8, [X21 + 0x288]
	0x03DF8070 ADD X21, X20, 0x2C0
	0x03DF8074 MOVI V0.2D, 0x0
	0x03DF8078 ADD X8, X31, 0x58
	0x03DF807C MOV X0, X21
	0x03DF8080 MOV X1, X31
	0x03DF8084 STP V0, V0, [X31 + 0x30]
	0x03DF8088 STP V0, V0, [X31 + 0x10]
	0x03DF808C BL 0x3DC9B70
	0x03DF8090 LDR V0, [X31 + 0x58]
	0x03DF8094 FCMP S0, 0x0
	0x03DF8098 B.NE 0x3DF8140
	0x03DF809C MOV X0, X21
	0x03DF80A0 MOV X1, X31
	0x03DF80A4 BL 0x3DC9BD8
	0x03DF80A8 ADRP X21, 0x5E0000
	0x03DF80AC LDRB W8, [X21 + 0x85B]
	0x03DF80B0 UBFM X9, X0, 0x20, 0x3F
	0x03DF80B4 FMOV S3, W9
	0x03DF80B8 FMOV S8, W0
	0x03DF80BC UNIMPLEMENTED
	0x03DF80C0 CBNZ W8, 0x3DF80E0
	0x03DF80C4 ADRP X0, 0x2FB000
	0x03DF80C8 LDR X0, [X0 + 0x5A0]
	0x03DF80CC STR V3, [X31]
	0x03DF80D0 BL 0x1C16CF4
	0x03DF80D4 LDR V3, [X31]
	0x03DF80D8 MOVZ W8, 0x1
	0x03DF80DC STRB W8, [X21 + 0x85B]
	0x03DF80E0 ADRP X8, 0x2FB000
	0x03DF80E4 LDR X8, [X8 + 0x5A0]
	0x03DF80E8 LDR X8, [X8]
	0x03DF80EC LDR X8, [X8 + 0xB8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], D8
	003 Move [X31+64], X30
	004 Move [X31+72], X19
	005 Add X19, X0, 704
	006 Add X8, X31, 24
	007 Move X0, X19
	008 Move X1, X31
	009 Call ComputedStyle.get_rotate, X0
	010 Move V0, [X31+24]
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 Move X0, X19
	013 Move X1, X31
	014 Call ComputedStyle.get_scale, X0
	015 Move X19, 0x5E1000
	016 Move W8, [X19+2139]
	017 Move X9, X0
	018 ShiftRight X9, 32
	019 And X9, X9, 0x7FFFFFFF
	020 Move S3, W9
	021 Move S8, W0
	022 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	023 Compare W8, 0
	024 JumpIfNotEqual {32}
	025 Move X0, 0x2FC000
	026 Move X0, [X0+1440]
	027 Move [X31], V3
	028 Call 0x1C17CF4
	029 Move V3, [X31]
	030 Move W8, 1
	031 Move [X19+2139], W8
	032 Move X8, 0x2FC000
	033 Move X8, [X8+1440]
	034 Move X8, [X8]
	035 Move X8, [X8+184]
	036 Move V0, [X8+12]
	037 Move V1, [X8+16]
	038 Move X8, -53534720
	039 Move V2, [X8+3872]
	040 Subtract S0, S8, S0
	041 Subtract V1, V3, V1
	042 Multiply S0, S0, S0
	043 NotImplemented "Instruction INVALID not yet implemented."
	044 Add S0, S0, S1
	045 Move S1, V1.S[1]
	046 Add S0, S1, S0
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 Move W0, W31
	050 Move X30, [X31+64]
	051 Move X19, [X31+72]
	052 Move V8, [X31+48]
	053 Add X31, X31, 80
	054 Return X0

Method: System.Single Min(System.Single a, System.Single b, System.Single c, System.Single d)

Disassembly:
	0x03DF80F0 LDR V0, [X8 + 0xC]
	0x03DF80F4 LDR V1, [X8 + 0x10]
	0x03DF80F8 ADRP X8, 0xFFFFFFFFFCCF1000
	0x03DF80FC LDR V2, [X8 + 0xF20]
	0x03DF8100 FSUB S0, S8, S0
	0x03DF8104 FSUB V1.2S, V3.2S, V1.2S
	0x03DF8108 FMUL S0, S0, S0

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction FCSEL not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction FCSEL not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 NotImplemented "Instruction FCSEL not yet implemented."
	007 Return V0

Method: System.Single Max(System.Single a, System.Single b, System.Single c, System.Single d)

Disassembly:
	0x00000000 INVALID
	0x03DF8110 FADD S0, S0, S1
	0x03DF8114 MOV S1, V1.S[1]
	0x03DF8118 FADD S0, S1, S0
	0x03DF811C FCMP S0, S2
	0x03DF8120 B.PL 0x3DF8140
	0x03DF8124 LDR V8, [X19]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction FCSEL not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction FCSEL not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 NotImplemented "Instruction FCSEL not yet implemented."
	007 Return V0

Method: System.Void TransformAlignedRectToParentSpace(ref UnityEngine.Rect rect)

Disassembly:
	0x03DF8128 MOV X0, X20
	0x03DF812C BL 0x3DEE0F4
	0x03DF8130 MOV V0.S[1], V1.S[0]
	0x03DF8134 FADD V0.2S, V8.2S, V0.2S
	0x03DF8138 STR D0, [X19]
	0x03DF813C B 0x3DF818C
	0x03DF8140 ADD X1, X31, 0x10
	0x03DF8144 MOV X0, X20
	0x03DF8148 BL 0x3DEE13C
	0x03DF814C ADRP X8, 0x323000
	0x03DF8150 LDR X8, [X8 + 0x898]
	0x03DF8154 LDP S11, S10, [X19]
	0x03DF8158 LDP S9, S8, [X19 + 0x8]
	0x03DF815C LDR X0, [X8]
	0x03DF8160 LDR W8, [X0 + 0xE0]
	0x03DF8164 CBNZ W8, 0x3DF816C
	0x03DF8168 BL 0x1C16DFC
	0x03DF816C ADD X0, X31, 0x10
	0x03DF8170 MOV V0.16B, V11.16B
	0x03DF8174 MOV V1.16B, V10.16B
	0x03DF8178 MOV V2.16B, V9.16B
	0x03DF817C MOV V3.16B, V8.16B
	0x03DF8180 BL 0x3DF7298
	0x03DF8184 STP S0, S1, [X19]
	0x03DF8188 STP S2, S3, [X19 + 0x8]
	0x03DF818C LDP X20, X19, [X31 + 0xA0]
	0x03DF8190 LDP X30, X21, [X31 + 0x90]
	0x03DF8194 LDP D9, D8, [X31 + 0x80]
	0x03DF8198 LDP D11, D10, [X31 + 0x70]
	0x03DF819C ADD X31, X31, 0xB0
	0x03DF81A0 RET
	0x03DF81A4 STP X30, X21, [X31 - 0x20]!
	0x03DF81A8 STP X20, X19, [X31 + 0x10]
	0x03DF81AC ADRP X20, 0x5F0000
	0x03DF81B0 ADRP X21, 0x371000
	0x03DF81B4 LDRB W8, [X20 + 0x28A]
	0x03DF81B8 LDR X21, [X21 + 0xAE8]
	0x03DF81BC MOV X19, X0
	0x03DF81C0 TBNZ X8, 0x0, 0x3DF81D8
	0x03DF81C4 ADRP X0, 0x371000
	0x03DF81C8 LDR X0, [X0 + 0xAE8]
	0x03DF81CC BL 0x1C16CF4
	0x03DF81D0 MOVZ W8, 0x1
	0x03DF81D4 STRB W8, [X20 + 0x28A]
	0x03DF81D8 LDR X1, [X21]
	0x03DF81DC MOV X0, X19
	0x03DF81E0 LDP X20, X19, [X31 + 0x10]
	0x03DF81E4 LDP X30, X21, [X31], #0x20
	0x03DF81E8 B 0x2736468
	0x03DF81EC LDR X0, [X0 + 0x40]
	0x03DF81F0 RET
	0x03DF81F4 LDR X0, [X0 + 0x50]
	0x03DF81F8 RET
	0x03DF81FC SUB X31, X31, 0x140
	0x03DF8200 STP X29, X30, [X31 + 0x110]
	0x03DF8204 STP X22, X21, [X31 + 0x120]
	0x03DF8208 STP X20, X19, [X31 + 0x130]
	0x03DF820C STR W31, [X31 + 0xEC]
	0x03DF8210 LDP V1, V0, [X3]
	0x03DF8214 MOV X21, X3
	0x03DF8218 ADD X3, X31, 0xC0
	0x03DF821C MOV X4, X31
	0x03DF8220 MOV X20, X2
	0x03DF8224 MOV X19, X1
	0x03DF8228 MOV X22, X0
	0x03DF822C STP V1, V0, [X31 + 0xC0]
	0x03DF8230 BL 0x3E1CE20
	0x03DF8234 CBZ X19, 0x3DF8448
	0x03DF8238 LDP V0, V1, [X21]
	0x03DF823C LDR X0, [X22 + 0x18]
	0x03DF8240 STP V0, V1, [X31 + 0xA0]
	0x03DF8244 CBZ X0, 0x3DF8444
	0x03DF8248 LDR X8, [X0]
	0x03DF824C LDP V0, V1, [X31 + 0xA0]
	0x03DF8250 ADD X2, X31, 0xF0
	0x03DF8254 MOV X1, X20
	0x03DF8258 LDR X9, [X8 + 0x178]
	0x03DF825C STP V0, V1, [X31 + 0xF0]
	0x03DF8260 LDR X3, [X8 + 0x180]
	0x03DF8264 BLR X9
	0x03DF8268 MOV X1, X0
	0x03DF826C MOV X0, X19
	0x03DF8270 MOV X2, X31
	0x03DF8274 BL 0x3DEF278
	0x03DF8278 LDP V0, V1, [X21]
	0x03DF827C LDR X0, [X22 + 0x20]
	0x03DF8280 STP V0, V1, [X31 + 0x80]
	0x03DF8284 CBZ X0, 0x3DF8444
	0x03DF8288 LDR X8, [X0]
	0x03DF828C LDP V0, V1, [X31 + 0x80]
	0x03DF8290 ADD X2, X31, 0xF0
	0x03DF8294 MOV X1, X20

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], D11
	003 Move [X31+120], D10
	004 Move [X31+128], D9
	005 Move [X31+136], D8
	006 Move [X31+144], X30
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X21, 0x5F1000
	011 Move W8, [X21+631]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x324000
	019 Move X0, [X0+2200]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+631], W8
	023 Add X21, X20, 704
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Add X8, X31, 88
	026 Move X0, X21
	027 Move X1, X31
	028 Move [X31+48], V0
	029 Move [X31+56], V0
	030 Move [X31+16], V0
	031 Move [X31+24], V0
	032 Call ComputedStyle.get_rotate, X0
	033 Move V0, [X31+88]
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 Move X0, X21
	036 Move X1, X31
	037 Call ComputedStyle.get_scale, X0
	038 Move X21, 0x5E1000
	039 Move W8, [X21+2139]
	040 Move X9, X0
	041 ShiftRight X9, 32
	042 And X9, X9, 0x7FFFFFFF
	043 Move S3, W9
	044 Move S8, W0
	045 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	046 Compare W8, 0
	047 JumpIfNotEqual {55}
	048 Move X0, 0x2FC000
	049 Move X0, [X0+1440]
	050 Move [X31], V3
	051 Call 0x1C17CF4
	052 Move V3, [X31]
	053 Move W8, 1
	054 Move [X21+2139], W8
	055 Move X8, 0x2FC000
	056 Move X8, [X8+1440]
	057 Move X8, [X8]
	058 Move X8, [X8+184]
	059 Move V0, [X8+12]
	060 Move V1, [X8+16]
	061 Move X8, -53534720
	062 Move V2, [X8+3872]
	063 Subtract S0, S8, S0
	064 Subtract V1, V3, V1
	065 Multiply S0, S0, S0
	066 NotImplemented "Instruction INVALID not yet implemented."
	067 Add S0, S0, S1
	068 Move S1, V1.S[1]
	069 Add S0, S1, S0
	070 NotImplemented "Instruction FCMP not yet implemented."
	071 Move V8, [X19]
	072 Move X0, X20
	073 Call VisualElement.get_positionWithLayout, X0
	074 Move V0.S[1], V1.S[0]
	075 Add V0, V8, V0
	076 Move [X19], D0
	077 Move X21, 0x324000
	078 Move X21, [X21+2200]
	079 Add X1, X31, 16
	080 Move X0, X20
	081 Call VisualElement.GetPivotedMatrixWithLayout, X0, X1
	082 Move X0, [X21]
	083 Move S11, [X19]
	084 Move S10, [X19+4]
	085 Move S9, [X19+8]
	086 Move S8, [X19+12]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Add X0, X31, 16
	092 Move V0, V11
	093 Move V1, V10
	094 Move V2, V9
	095 Move V3, V8
	096 Call VisualElement.CalculateConservativeRect, X0, X1
	097 Move [X19], S0
	098 Move [X19+8], S1
	099 Move [X19+8], S2
	100 Move [X19+16], S3
	101 Move X20, [X31+160]
	102 Move X19, [X31+168]
	103 Move X30, [X31+144]
	104 Move X21, [X31+152]
	105 Move D9, [X31+128]
	106 Move D8, [X31+136]
	107 Move D11, [X31+112]
	108 Move D10, [X31+120]
	109 Add X31, X31, 176
	110 Return 

Method: UnityEngine.Rect CalculateConservativeRect(ref UnityEngine.Matrix4x4 matrix, UnityEngine.Rect rect)

Disassembly:
	0x03DF8298 LDR X9, [X8 + 0x178]
	0x03DF829C STP V0, V1, [X31 + 0xF0]
	0x03DF82A0 LDR X3, [X8 + 0x180]
	0x03DF82A4 BLR X9
	0x03DF82A8 MOV X1, X0
	0x03DF82AC MOV X0, X19
	0x03DF82B0 MOV X2, X31
	0x03DF82B4 BL 0x3DEB98C
	0x03DF82B8 LDP V0, V1, [X21]
	0x03DF82BC LDR X0, [X22 + 0x28]
	0x03DF82C0 STP V0, V1, [X31 + 0x60]
	0x03DF82C4 CBZ X0, 0x3DF8444
	0x03DF82C8 LDR X8, [X0]
	0x03DF82CC LDP V0, V1, [X31 + 0x60]
	0x03DF82D0 ADD X2, X31, 0xF0
	0x03DF82D4 MOV X1, X20
	0x03DF82D8 LDR X9, [X8 + 0x178]
	0x03DF82DC STP V0, V1, [X31 + 0xF0]
	0x03DF82E0 LDR X3, [X8 + 0x180]
	0x03DF82E4 BLR X9
	0x03DF82E8 MOV W1, W0
	0x03DF82EC MOV X0, X19
	0x03DF82F0 MOV X2, X31
	0x03DF82F4 BL 0x3DEF238
	0x03DF82F8 LDP V0, V1, [X21]
	0x03DF82FC LDR X0, [X22 + 0x38]
	0x03DF8300 STP V0, V1, [X31 + 0x40]
	0x03DF8304 CBZ X0, 0x3DF8444
	0x03DF8308 LDR X8, [X0]
	0x03DF830C LDP V0, V1, [X31 + 0x40]
	0x03DF8310 ADD X2, X31, 0xF0
	0x03DF8314 MOV X1, X20
	0x03DF8318 LDR X9, [X8 + 0x178]
	0x03DF831C STP V0, V1, [X31 + 0xF0]
	0x03DF8320 LDR X3, [X8 + 0x180]
	0x03DF8324 BLR X9
	0x03DF8328 MOV W1, W0
	0x03DF832C MOV X0, X19
	0x03DF8330 MOV X2, X31
	0x03DF8334 BL 0x3DEC0FC
	0x03DF8338 LDP V0, V1, [X21]
	0x03DF833C LDR X0, [X22 + 0x30]
	0x03DF8340 STP V0, V1, [X31 + 0x20]
	0x03DF8344 CBZ X0, 0x3DF8444
	0x03DF8348 LDR X8, [X0]
	0x03DF834C LDP V0, V1, [X31 + 0x20]
	0x03DF8350 ADD X2, X31, 0xF0
	0x03DF8354 MOV X1, X20
	0x03DF8358 LDR X9, [X8 + 0x178]
	0x03DF835C STP V0, V1, [X31 + 0xF0]
	0x03DF8360 LDR X3, [X8 + 0x180]
	0x03DF8364 BLR X9
	0x03DF8368 MOV X1, X0
	0x03DF836C MOV X0, X19
	0x03DF8370 MOV X2, X31
	0x03DF8374 BL 0x3DF7B68
	0x03DF8378 STR W31, [X31 + 0xEC]
	0x03DF837C LDP V0, V1, [X21]
	0x03DF8380 LDR X0, [X22 + 0x40]
	0x03DF8384 STP V0, V1, [X31 + 0xF0]
	0x03DF8388 CBZ X0, 0x3DF8444
	0x03DF838C LDP V0, V1, [X31 + 0xF0]
	0x03DF8390 ADD X2, X31, 0x0
	0x03DF8394 ADD X3, X31, 0xEC
	0x03DF8398 MOV X1, X20
	0x03DF839C MOV X4, X31
	0x03DF83A0 STP V0, V1, [X31]
	0x03DF83A4 BL 0x3E1BE88
	0x03DF83A8 TBZ X0, 0x0, 0x3DF83C4
	0x03DF83AC LDR W8, [X31 + 0xEC]
	0x03DF83B0 BIC W9, W8, W8, 0x1F
	0x03DF83B4 ORN W8, W31, W8, 0x0
	0x03DF83B8 UBFM W8, W8, 0x1F, 0x1F
	0x03DF83BC STR W9, [X19 + 0x24]
	0x03DF83C0 STRB W8, [X19 + 0x20]
	0x03DF83C4 LDP V0, V1, [X21]
	0x03DF83C8 LDR X0, [X22 + 0x48]
	0x03DF83CC STP V0, V1, [X31 + 0xA0]
	0x03DF83D0 CBZ X0, 0x3DF8444
	0x03DF83D4 LDR X8, [X0]
	0x03DF83D8 LDP V0, V1, [X31 + 0xA0]
	0x03DF83DC ADD X2, X31, 0xF0
	0x03DF83E0 MOV X1, X20
	0x03DF83E4 LDR X9, [X8 + 0x178]
	0x03DF83E8 STP V0, V1, [X31 + 0xF0]
	0x03DF83EC LDR X3, [X8 + 0x180]
	0x03DF83F0 BLR X9
	0x03DF83F4 STR W0, [X19 + 0x24]
	0x03DF83F8 LDP V0, V1, [X21]
	0x03DF83FC LDR X0, [X22 + 0x50]
	0x03DF8400 STP V0, V1, [X31 + 0x80]
	0x03DF8404 CBZ X0, 0x3DF8444
	0x03DF8408 LDR X8, [X0]
	0x03DF840C LDP V0, V1, [X31 + 0x80]
	0x03DF8410 ADD X2, X31, 0xF0
	0x03DF8414 MOV X1, X20
	0x03DF8418 LDR X9, [X8 + 0x178]
	0x03DF841C STP V0, V1, [X31 + 0xF0]
	0x03DF8420 LDR X3, [X8 + 0x180]
	0x03DF8424 BLR X9
	0x03DF8428 AND W8, W0, 0x1
	0x03DF842C STRB W8, [X19 + 0x20]
	0x03DF8430 LDP X20, X19, [X31 + 0x130]
	0x03DF8434 LDP X22, X21, [X31 + 0x120]
	0x03DF8438 LDP X29, X30, [X31 + 0x110]
	0x03DF843C ADD X31, X31, 0x140
	0x03DF8440 RET
	0x03DF8444 BL 0x1C16F20
	0x03DF8448 ADRP X0, 0x300000
	0x03DF844C LDR X0, [X0 + 0x528]
	0x03DF8450 BL 0x1C16D08
	0x03DF8454 BL 0x1C16F10
	0x03DF8458 MOV X19, X0
	0x03DF845C ADRP X0, 0x371000
	0x03DF8460 LDR X0, [X0 + 0xAF0]
	0x03DF8464 BL 0x1C16D08
	0x03DF8468 MOV X1, X0
	0x03DF846C MOV X0, X19
	0x03DF8470 MOV X2, X31
	0x03DF8474 BL 0x330E100
	0x03DF8478 ADRP X0, 0x371000
	0x03DF847C LDR X0, [X0 + 0xAF8]
	0x03DF8480 BL 0x1C16D08
	0x03DF8484 MOV X1, X0
	0x03DF8488 MOV X0, X19
	0x03DF848C BL 0x1C16DEC
	0x03DF8490 STP X30, X23, [X31 - 0x30]!
	0x03DF8494 STP X22, X21, [X31 + 0x10]
	0x03DF8498 STP X20, X19, [X31 + 0x20]
	0x03DF849C ADRP X20, 0x5F0000
	0x03DF84A0 ADRP X21, 0x325000
	0x03DF84A4 LDRB W8, [X20 + 0x28B]
	0x03DF84A8 LDR X21, [X21 + 0xB20]
	0x03DF84AC MOV X19, X0
	0x03DF84B0 TBNZ X8, 0x0, 0x3DF85DC
	0x03DF84B4 ADRP X0, 0x2FB000
	0x03DF84B8 LDR X0, [X0 + 0xAC8]
	0x03DF84BC BL 0x1C16CF4
	0x03DF84C0 ADRP X0, 0x325000

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x5F1000
	013 Move W8, [X20+632]
	014 Move V10, V3
	015 Move V11, V2
	016 Move V9, V1
	017 Move V8, V0
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x324000
	024 Move X0, [X0+2200]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+632], W8
	028 Move X20, 0x324000
	029 Move X20, [X20+2200]
	030 Move W8, S9
	031 And W9, W8, 0x7FFFFFFF
	032 Move W8, 0x7F800000
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W9, S8
	035 And W9, W9, 0x7FFFFFFF
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, S10
	038 And W8, W8, 0x7FFFFFFF
	039 Move W9, 0x7F800000
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W8, S11
	042 Move W9, 1
	043 And W8, W8, 0x7FFFFFFF
	044 NotImplemented "Instruction MOVK not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move S2, W31
	047 Move X0, X19
	048 Move V0, V8
	049 Move V1, V9
	050 Move X1, X31
	051 Add S14, S11, S8
	052 Add S15, S10, S9
	053 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	054 Move V10, V0
	055 Move V11, V1
	056 Move S2, W31
	057 Move X0, X19
	058 Move V0, V14
	059 Move V1, V15
	060 Move X1, X31
	061 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	062 Move V12, V0
	063 Move V13, V1
	064 Move S2, W31
	065 Move X0, X19
	066 Move V0, V14
	067 Move V1, V9
	068 Move X1, X31
	069 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	070 Move V9, V0
	071 Move V14, V1
	072 Move S2, W31
	073 Move X0, X19
	074 Move V0, V8
	075 Move V1, V15
	076 Move X1, X31
	077 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	078 Move X0, [X20]
	079 Move V8, V0
	080 Move V15, V1
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 NotImplemented "Instruction FCMP not yet implemented."
	086 NotImplemented "Instruction FCSEL not yet implemented."
	087 NotImplemented "Instruction FCSEL not yet implemented."
	088 NotImplemented "Instruction FCMP not yet implemented."
	089 NotImplemented "Instruction FCSEL not yet implemented."
	090 NotImplemented "Instruction FCSEL not yet implemented."
	091 NotImplemented "Instruction FCMP not yet implemented."
	092 NotImplemented "Instruction FCSEL not yet implemented."
	093 NotImplemented "Instruction FCSEL not yet implemented."
	094 NotImplemented "Instruction FCMP not yet implemented."
	095 NotImplemented "Instruction FCSEL not yet implemented."
	096 NotImplemented "Instruction FCSEL not yet implemented."
	097 NotImplemented "Instruction FCMP not yet implemented."
	098 NotImplemented "Instruction FCSEL not yet implemented."
	099 NotImplemented "Instruction FCMP not yet implemented."
	100 NotImplemented "Instruction FCSEL not yet implemented."
	101 NotImplemented "Instruction FCMP not yet implemented."
	102 NotImplemented "Instruction FCSEL not yet implemented."
	103 NotImplemented "Instruction FCMP not yet implemented."
	104 NotImplemented "Instruction FCSEL not yet implemented."
	105 Subtract S2, S3, S0
	106 Subtract S3, S4, S1
	107 Move X0, [X20]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move S0, [X19]
	113 Move S2, [X19+4]
	114 Move S1, [X19+16]
	115 Move S3, [X19+20]
	116 Move S16, [X19+48]
	117 Move S17, [X19+52]
	118 Multiply S4, S8, S0
	119 Multiply S5, S9, S1
	120 Multiply S0, S11, S0
	121 Multiply S1, S10, S1
	122 Add S4, S4, S5
	123 Multiply S6, S8, S2
	124 Multiply S7, S9, S3
	125 Multiply S2, S11, S2
	126 Multiply S3, S10, S3
	127 Add S0, S0, S1
	128 Add S1, S16, S4
	129 Add S5, S6, S7
	130 Add S3, S2, S3
	131 NotImplemented "Instruction FNEG not yet implemented."
	132 NotImplemented "Instruction FCMP not yet implemented."
	133 Add S4, S0, S1
	134 NotImplemented "Instruction FCSEL not yet implemented."
	135 NotImplemented "Instruction FCSEL not yet implemented."
	136 NotImplemented "Instruction FCMP not yet implemented."
	137 Add S1, S17, S5
	138 Add S1, S3, S1
	139 NotImplemented "Instruction FNEG not yet implemented."
	140 Move X20, [X31+80]
	141 Move X19, [X31+88]
	142 Move X30, [X31+64]
	143 Move D9, [X31+48]
	144 Move D8, [X31+56]
	145 Move D11, [X31+32]
	146 Move D10, [X31+40]
	147 Move D13, [X31+16]
	148 Move D12, [X31+24]
	149 Move D15, [X31+96]
	150 Move D14, [X31+104]
	151 Return X0

Method: System.Void TransformAlignedRect(ref UnityEngine.Matrix4x4 matrix, ref UnityEngine.Rect rect)

Disassembly:
	0x03DF8508 ADRP X0, 0x371000
	0x03DF850C LDR X0, [X0 + 0xB18]
	0x03DF8510 BL 0x1C16CF4
	0x03DF8514 ADRP X0, 0x325000
	0x03DF8518 LDR X0, [X0 + 0xC08]
	0x03DF851C BL 0x1C16CF4
	0x03DF8520 ADRP X0, 0x325000
	0x03DF8524 LDR X0, [X0 + 0xB20]
	0x03DF8528 BL 0x1C16CF4
	0x03DF852C ADRP X0, 0x371000
	0x03DF8530 LDR X0, [X0 + 0xB20]
	0x03DF8534 BL 0x1C16CF4
	0x03DF8538 ADRP X0, 0x371000
	0x03DF853C LDR X0, [X0 + 0xB28]
	0x03DF8540 BL 0x1C16CF4
	0x03DF8544 ADRP X0, 0x371000
	0x03DF8548 LDR X0, [X0 + 0xB30]
	0x03DF854C BL 0x1C16CF4
	0x03DF8550 ADRP X0, 0x371000
	0x03DF8554 LDR X0, [X0 + 0xB38]
	0x03DF8558 BL 0x1C16CF4
	0x03DF855C ADRP X0, 0x371000
	0x03DF8560 LDR X0, [X0 + 0xB40]
	0x03DF8564 BL 0x1C16CF4
	0x03DF8568 ADRP X0, 0x371000
	0x03DF856C LDR X0, [X0 + 0xB48]
	0x03DF8570 BL 0x1C16CF4
	0x03DF8574 ADRP X0, 0x371000
	0x03DF8578 LDR X0, [X0 + 0xB50]
	0x03DF857C BL 0x1C16CF4
	0x03DF8580 ADRP X0, 0x371000
	0x03DF8584 LDR X0, [X0 + 0xB58]
	0x03DF8588 BL 0x1C16CF4
	0x03DF858C ADRP X0, 0x371000
	0x03DF8590 LDR X0, [X0 + 0xB60]
	0x03DF8594 BL 0x1C16CF4
	0x03DF8598 ADRP X0, 0x371000

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x5F1000
	011 Move X21, 0x324000
	012 Move W8, [X22+633]
	013 Move X21, [X21+2200]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x324000
	021 Move X0, [X0+2200]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+633], W8
	025 Move X0, [X21]
	026 Move S11, [X19]
	027 Move S10, [X19+4]
	028 Move S9, [X19+8]
	029 Move S8, [X19+12]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move V0, V11
	036 Move V1, V10
	037 Move V2, V9
	038 Move V3, V8
	039 Call VisualElement.CalculateConservativeRect, X0, X1
	040 Move [X19], S0
	041 Move [X19+8], S1
	042 Move [X19+8], S2
	043 Move [X19+16], S3
	044 Move X20, [X31+64]
	045 Move X19, [X31+72]
	046 Move X22, [X31+48]
	047 Move X21, [X31+56]
	048 Move X30, [X31+32]
	049 Move D9, [X31+16]
	050 Move D8, [X31+24]
	051 Move D11, [X31+80]
	052 Move D10, [X31+88]
	053 Return 

Method: System.Void OrderMinMaxRect(ref UnityEngine.Rect rect)

Disassembly:
	0x03DF84C4 LDR X0, [X0 + 0xB28]
	0x03DF84C8 BL 0x1C16CF4
	0x03DF84CC ADRP X0, 0x325000
	0x03DF84D0 LDR X0, [X0 + 0xBF0]
	0x03DF84D4 BL 0x1C16CF4
	0x03DF84D8 ADRP X0, 0x325000
	0x03DF84DC LDR X0, [X0 + 0x758]
	0x03DF84E0 BL 0x1C16CF4
	0x03DF84E4 ADRP X0, 0x371000
	0x03DF84E8 LDR X0, [X0 + 0xB00]
	0x03DF84EC BL 0x1C16CF4
	0x03DF84F0 ADRP X0, 0x371000
	0x03DF84F4 LDR X0, [X0 + 0xB08]
	0x03DF84F8 BL 0x1C16CF4
	0x03DF84FC ADRP X0, 0x371000
	0x03DF8500 LDR X0, [X0 + 0xB10]
	0x03DF8504 BL 0x1C16CF4

ISIL:
	001 Move V0, [X0+8]
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 Move V1, [X0]
	004 NotImplemented "Instruction FNEG not yet implemented."
	005 Move [X0+8], S2
	006 Add S0, S0, S1
	007 Move [X0], S0
	008 Move V0, [X0+12]
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 Move V1, [X0+4]
	011 NotImplemented "Instruction FNEG not yet implemented."
	012 Move [X0+12], S2
	013 Add S0, S0, S1
	014 Move [X0+4], S0
	015 Return 

Method: UnityEngine.Vector2 MultiplyMatrix44Point2(ref UnityEngine.Matrix4x4 lhs, UnityEngine.Vector2 point)

Disassembly:
	0x03DF859C LDR X0, [X0 + 0xB68]
	0x03DF85A0 BL 0x1C16CF4
	0x03DF85A4 ADRP X0, 0x371000
	0x03DF85A8 LDR X0, [X0 + 0xB70]
	0x03DF85AC BL 0x1C16CF4
	0x03DF85B0 ADRP X0, 0x303000
	0x03DF85B4 LDR X0, [X0 + 0x588]
	0x03DF85B8 BL 0x1C16CF4
	0x03DF85BC ADRP X0, 0x371000

ISIL:
	001 Move V2, [X0]
	002 Move V3, [X0+16]
	003 Move V4, [X0+48]
	004 NotImplemented "Instruction INVALID not yet implemented."
	005 NotImplemented "Instruction INVALID not yet implemented."
	006 Add V0, V0, V1
	007 Add V0, V4, V0
	008 Move S1, V0.S[1]
	009 Return X0

Method: UnityEngine.Vector2 MultiplyVector2(ref UnityEngine.Matrix4x4 lhs, UnityEngine.Vector2 vector)

Disassembly:
	0x03DF85C0 LDR X0, [X0 + 0xB78]
	0x03DF85C4 BL 0x1C16CF4
	0x03DF85C8 ADRP X0, 0x330000
	0x03DF85CC LDR X0, [X0 + 0xAB8]
	0x03DF85D0 BL 0x1C16CF4
	0x03DF85D4 MOVZ W8, 0x1
	0x03DF85D8 STRB W8, [X20 + 0x28B]

ISIL:
	001 Move V2, [X0]
	002 Move V3, [X0+16]
	003 NotImplemented "Instruction INVALID not yet implemented."
	004 NotImplemented "Instruction INVALID not yet implemented."
	005 Add V0, V0, V1
	006 Move S1, V0.S[1]
	007 Return X0

Method: System.Void MultiplyMatrix34(ref UnityEngine.Matrix4x4 lhs, ref UnityEngine.Matrix4x4 rhs, out UnityEngine.Matrix4x4 res)

Disassembly:
	0x03DEF2C4 LDP X20, X19, [X31 + 0x10]
	0x03DEF2C8 LDR X30, [X31], #0x20
	0x03DEF2CC RET
	0x03DEF2D0 STP X30, X21, [X31 - 0x20]!
	0x03DEF2D4 STP X20, X19, [X31 + 0x10]
	0x03DEF2D8 ADRP X21, 0x5F9000
	0x03DEF2DC ADRP X20, 0x32C000
	0x03DEF2E0 LDRB W8, [X21 + 0x245]
	0x03DEF2E4 LDR X20, [X20 + 0x898]
	0x03DEF2E8 MOV X19, X0
	0x03DEF2EC TBNZ X8, 0x0, 0x3DEF31C
	0x03DEF2F0 ADRP X0, 0x37A000
	0x03DEF2F4 LDR X0, [X0 + 0x908]
	0x03DEF2F8 BL 0x1C16CF4
	0x03DEF2FC ADRP X0, 0x37A000
	0x03DEF300 LDR X0, [X0 + 0x910]
	0x03DEF304 BL 0x1C16CF4
	0x03DEF308 ADRP X0, 0x32C000
	0x03DEF30C LDR X0, [X0 + 0x898]
	0x03DEF310 BL 0x1C16CF4
	0x03DEF314 MOVZ W8, 0x1
	0x03DEF318 STRB W8, [X21 + 0x245]
	0x03DEF31C LDR X0, [X20]
	0x03DEF320 LDR X21, [X19 + 0x40]
	0x03DEF324 LDR W8, [X0 + 0xE0]
	0x03DEF328 CBNZ W8, 0x3DEF334
	0x03DEF32C BL 0x1C16DFC
	0x03DEF330 LDR X0, [X20]
	0x03DEF334 LDR X8, [X0 + 0xB8]
	0x03DEF338 LDR X8, [X8 + 0x8]
	0x03DEF33C CMP X21, X8
	0x03DEF340 B.EQ 0x3DEF34C
	0x03DEF344 LDR X0, [X19 + 0x40]
	0x03DEF348 B 0x3DEF378
	0x03DEF34C ADRP X8, 0x37A000
	0x03DEF350 LDR X8, [X8 + 0x910]
	0x03DEF354 LDR X0, [X8]
	0x03DEF358 LDR W8, [X0 + 0xE0]
	0x03DEF35C CBNZ W8, 0x3DEF364
	0x03DEF360 BL 0x1C16DFC
	0x03DEF364 ADRP X8, 0x37A000
	0x03DEF368 LDR X8, [X8 + 0x908]
	0x03DEF36C LDR X0, [X8]
	0x03DEF370 BL 0x2491CF8
	0x03DEF374 STR X0, [X19 + 0x40]
	0x03DEF378 LDP X20, X19, [X31 + 0x10]
	0x03DEF37C LDP X30, X21, [X31], #0x20
	0x03DEF380 RET
	0x03DEF384 STR X30, [X31 - 0x10]!
	0x03DEF388 BL 0x3DEF3A0
	0x03DEF38C CBZ X0, 0x3DEF39C
	0x03DEF390 MOV X1, X31
	0x03DEF394 LDR X30, [X31], #0x10
	0x03DEF398 B 0x3DFA960
	0x03DEF39C BL 0x1C16F20
	0x03DEF3A0 STR X30, [X31 - 0x30]!
	0x03DEF3A4 STP X22, X21, [X31 + 0x10]
	0x03DEF3A8 STP X20, X19, [X31 + 0x20]
	0x03DEF3AC ADRP X19, 0x5F9000
	0x03DEF3B0 LDRB W8, [X19 + 0x286]
	0x03DEF3B4 MOV X20, X0
	0x03DEF3B8 TBNZ X8, 0x0, 0x3DEF3F4
	0x03DEF3BC ADRP X0, 0x37A000
	0x03DEF3C0 LDR X0, [X0 + 0x918]
	0x03DEF3C4 BL 0x1C16CF4
	0x03DEF3C8 ADRP X0, 0x37A000
	0x03DEF3CC LDR X0, [X0 + 0x920]
	0x03DEF3D0 BL 0x1C16CF4
	0x03DEF3D4 ADRP X0, 0x37A000
	0x03DEF3D8 LDR X0, [X0 + 0x928]
	0x03DEF3DC BL 0x1C16CF4
	0x03DEF3E0 ADRP X0, 0x32C000
	0x03DEF3E4 LDR X0, [X0 + 0x898]
	0x03DEF3E8 BL 0x1C16CF4
	0x03DEF3EC MOVZ W8, 0x1
	0x03DEF3F0 STRB W8, [X19 + 0x286]
	0x03DEF3F4 LDR X8, [X20 + 0x3C0]
	0x03DEF3F8 ADD X19, X20, 0x3C0
	0x03DEF3FC CBNZ X8, 0x3DEF4B4
	0x03DEF400 MOV X0, X20
	0x03DEF404 MOV X1, X31
	0x03DEF408 BL 0x33BE520
	0x03DEF40C ADRP X22, 0x32C000
	0x03DEF410 LDR X22, [X22 + 0x898]
	0x03DEF414 MOV X20, X0
	0x03DEF418 LDR X8, [X22]
	0x03DEF41C LDR W9, [X8 + 0xE0]
	0x03DEF420 CBNZ W9, 0x3DEF430
	0x03DEF424 MOV X0, X8
	0x03DEF428 BL 0x1C16DFC
	0x03DEF42C LDR X8, [X22]
	0x03DEF430 LDR X8, [X8 + 0xB8]
	0x03DEF434 LDR X0, [X8 + 0x68]
	0x03DEF438 CBZ X0, 0x3DEF4C8
	0x03DEF43C ADRP X8, 0x37A000
	0x03DEF440 LDR X8, [X8 + 0x920]
	0x03DEF444 MOV X1, X20
	0x03DEF448 MOV X2, X19
	0x03DEF44C LDR X3, [X8]
	0x03DEF450 BL 0x2AA6B2C
	0x03DEF454 TBNZ X0, 0x0, 0x3DEF4B4
	0x03DEF458 ADRP X8, 0x37A000
	0x03DEF45C LDR X8, [X8 + 0x928]
	0x03DEF460 LDR X0, [X8]
	0x03DEF464 BL 0x1C16F10
	0x03DEF468 MOV X1, X20
	0x03DEF46C MOV X2, X31
	0x03DEF470 MOV X21, X0
	0x03DEF474 BL 0x3DFA8F0
	0x03DEF478 STR X21, [X19]
	0x03DEF47C LDR X0, [X22]
	0x03DEF480 LDR W8, [X0 + 0xE0]
	0x03DEF484 CBNZ W8, 0x3DEF490
	0x03DEF488 BL 0x1C16DFC
	0x03DEF48C LDR X0, [X22]
	0x03DEF490 LDR X8, [X0 + 0xB8]
	0x03DEF494 LDR X0, [X8 + 0x68]
	0x03DEF498 CBZ X0, 0x3DEF4C8

ISIL:
	001 Move V0, [X0]
	002 Move V3, [X0+16]
	003 Move S2, [X1]
	004 Move S4, [X1+4]
	005 Move V5, [X0+32]
	006 Move V1, [X1+8]
	007 Move W8, 0x3F800000
	008 Multiply S0, S0, S2
	009 Multiply S2, S3, S4
	010 Multiply S6, S5, S1
	011 Add S0, S0, S2
	012 Add S0, S0, S6
	013 Move [X2], S0
	014 Move V6, [X0]
	015 Move S0, [X1+16]
	016 Move S7, [X1+20]
	017 Move V2, [X1+24]
	018 Multiply S0, S6, S0
	019 Multiply S3, S3, S7
	020 Multiply S16, S5, S2
	021 Add S0, S0, S3
	022 Add S0, S0, S16
	023 Move [X2+16], S0
	024 Move V16, [X0+16]
	025 Move S0, [X1+32]
	026 Move S17, [X1+36]
	027 Move V3, [X1+40]
	028 Multiply S0, S6, S0
	029 Multiply S18, S16, S17
	030 Multiply S5, S5, S3
	031 Add S0, S0, S18
	032 Add S0, S0, S5
	033 Move [X2+32], S0
	034 Move S5, [X1+48]
	035 Move S18, [X1+52]
	036 Move V19, [X0+32]
	037 Move V0, [X1+56]
	038 Move V20, [X0+48]
	039 Multiply S5, S6, S5
	040 Multiply S6, S16, S18
	041 Multiply S16, S19, S0
	042 Add S5, S5, S6
	043 Add S5, S5, S16
	044 Add S5, S20, S5
	045 Move [X2+48], S5
	046 Move V5, [X0+4]
	047 Move V6, [X1]
	048 Move V16, [X0+20]
	049 Move V19, [X0+36]
	050 Multiply S5, S5, S6
	051 Multiply S4, S4, S16
	052 Multiply S20, S1, S19
	053 Add S4, S5, S4
	054 Add S4, S4, S20
	055 Move [X2+4], S4
	056 Move V4, [X0+4]
	057 Move V5, [X1+16]
	058 Multiply S7, S7, S16
	059 Multiply S16, S2, S19
	060 Multiply S19, S3, S19
	061 Multiply S20, S4, S5
	062 Add S7, S7, S20
	063 Add S7, S16, S7
	064 Move [X2+20], S7
	065 Move V7, [X1+32]
	066 Move V16, [X0+20]
	067 Multiply S20, S4, S7
	068 Multiply S17, S17, S16
	069 Add S17, S20, S17
	070 Add S17, S19, S17
	071 Move [X2+36], S17
	072 Move V17, [X1+48]
	073 Move V19, [X0+36]
	074 Multiply S16, S18, S16
	075 Move V18, [X0+52]
	076 Multiply S4, S4, S17
	077 Multiply S19, S0, S19
	078 Add S4, S16, S4
	079 Add S4, S4, S19
	080 Add S4, S18, S4
	081 Move [X2+52], S4
	082 Move V4, [X0+8]
	083 Move V16, [X0+24]
	084 Move V18, [X1+4]
	085 Move V19, [X0+40]
	086 Multiply S4, S6, S4
	087 Multiply S6, S16, S18
	088 Multiply S1, S1, S19
	089 Add S4, S4, S6
	090 Add S1, S4, S1
	091 Move [X2+8], S1
	092 Move V1, [X0+8]
	093 Move V4, [X1+20]
	094 Multiply S2, S2, S19
	095 Multiply S3, S3, S19
	096 Multiply S5, S5, S1
	097 Multiply S4, S16, S4
	098 Add S4, S5, S4
	099 Add S2, S2, S4
	100 Move [X2+24], S2
	101 Move V2, [X0+24]
	102 Move V4, [X1+36]
	103 Multiply S5, S7, S1
	104 Multiply S1, S17, S1
	105 Multiply S4, S2, S4
	106 Add S4, S5, S4
	107 Add S3, S3, S4
	108 Move [X2+40], S3
	109 Move V3, [X1+52]
	110 Move V4, [X0+40]
	111 Move V5, [X0+56]
	112 Move [X2+12], W31
	113 Multiply S2, S2, S3
	114 Multiply S0, S0, S4
	115 Add S1, S1, S2
	116 Add S0, S1, S0
	117 Add S0, S5, S0
	118 Move [X2+28], W31
	119 Move [X2+44], W31
	120 Move [X2+56], S0
	121 Move [X2+60], W8
	122 Return 

Method: System.Void TranslateMatrix34(ref UnityEngine.Matrix4x4 lhs, UnityEngine.Vector3 rhs, out UnityEngine.Matrix4x4 res)

Disassembly:
	0x03DF85DC LDR X0, [X21]
	0x03DF85E0 BL 0x1C16F10
	0x03DF85E4 MOV X1, X31
	0x03DF85E8 MOV X20, X0
	0x03DF85EC BL 0x3E0A2F4
	0x03DF85F0 CBZ X20, 0x3DF88D4
	0x03DF85F4 ADRP X8, 0x303000
	0x03DF85F8 LDR X8, [X8 + 0x588]
	0x03DF85FC LDR X8, [X8]
	0x03DF8600 STR X8, [X20 + 0x10]
	0x03DF8604 STR X20, [X19 + 0x18]
	0x03DF8608 LDR X0, [X21]
	0x03DF860C BL 0x1C16F10
	0x03DF8610 MOV X1, X31
	0x03DF8614 MOV X20, X0
	0x03DF8618 BL 0x3E0A2F4
	0x03DF861C CBZ X20, 0x3DF88D4
	0x03DF8620 ADRP X8, 0x371000
	0x03DF8624 LDR X8, [X8 + 0xB68]
	0x03DF8628 ADRP X9, 0x371000
	0x03DF862C LDR X8, [X8]
	0x03DF8630 LDR X9, [X9 + 0xB18]
	0x03DF8634 STR X8, [X20 + 0x10]
	0x03DF8638 STR X20, [X19 + 0x20]
	0x03DF863C LDR X0, [X9]
	0x03DF8640 ADRP X20, 0x371000
	0x03DF8644 LDR X20, [X20 + 0xB08]
	0x03DF8648 BL 0x1C16F10
	0x03DF864C LDR X1, [X20]
	0x03DF8650 MOV X20, X0
	0x03DF8654 BL 0x2734B10
	0x03DF8658 CBZ X20, 0x3DF88D4
	0x03DF865C ADRP X8, 0x371000
	0x03DF8660 LDR X8, [X8 + 0xB20]
	0x03DF8664 ADRP X22, 0x2FB000
	0x03DF8668 MOVZ W1, 0x1
	0x03DF866C LDR X8, [X8]
	0x03DF8670 LDR X22, [X22 + 0xAC8]
	0x03DF8674 STR X8, [X20 + 0x10]
	0x03DF8678 LDR X0, [X22]
	0x03DF867C BL 0x1C16D6C
	0x03DF8680 CBZ X0, 0x3DF88D4
	0x03DF8684 LDR W8, [X0 + 0x18]
	0x03DF8688 MOV X1, X0
	0x03DF868C CBZ W8, 0x3DF88D8
	0x03DF8690 ADRP X8, 0x371000
	0x03DF8694 LDR X8, [X8 + 0xB78]
	0x03DF8698 MOV X0, X20
	0x03DF869C MOV X2, X31
	0x03DF86A0 LDR X8, [X8]
	0x03DF86A4 STR X8, [X1 + 0x20]
	0x03DF86A8 BL 0x3E1AE24
	0x03DF86AC STR X20, [X19 + 0x28]
	0x03DF86B0 LDR X0, [X21]
	0x03DF86B4 BL 0x1C16F10
	0x03DF86B8 MOV X1, X31
	0x03DF86BC MOV X20, X0
	0x03DF86C0 BL 0x3E0A2F4
	0x03DF86C4 CBZ X20, 0x3DF88D4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0x5F1000
	008 Move X21, 0x324000
	009 Move W8, [X22+634]
	010 Move X21, [X21+2200]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x324000
	018 Move X0, [X0+2200]
	019 Move [X31+16], V1
	020 Move [X31+24], V2
	021 Move [X31], V0
	022 Call 0x1C17CF4
	023 Move V0, [X31]
	024 Move V1, [X31+16]
	025 Move V2, [X31+2]
	026 Move W8, 1
	027 Move [X22+634], W8
	028 Move V5, [X20+32]
	029 Move V6, [X20+48]
	030 Move V3, [X20]
	031 Move V4, [X20+16]
	032 Move [X19+32], V5
	033 Move [X19+40], V6
	034 Move [X19], V3
	035 Move [X19+8], V4
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {47}
	040 Move [X31+16], V1
	041 Move [X31+24], V2
	042 Move [X31], V0
	043 Call 0x1C17DFC
	044 Move V0, [X31]
	045 Move V1, [X31+16]
	046 Move V2, [X31+2]
	047 Move V7, [X19]
	048 Move V5, [X19+8]
	049 Move V6, [X19+16]
	050 Move V4, [X19+24]
	051 Move V3, [X19+32]
	052 NotImplemented "Instruction INVALID not yet implemented."
	053 Multiply S7, S0, S5
	054 Move V5, [X19+40]
	055 NotImplemented "Instruction INVALID not yet implemented."
	056 Multiply S4, S1, S4
	057 Move V6, [X19+48]
	058 Move V1, [X19+56]
	059 NotImplemented "Instruction INVALID not yet implemented."
	060 Multiply S5, S2, S5
	061 Add V0, V17, V16
	062 Add S2, S7, S4
	063 Add V0, V0, V3
	064 Add S2, S2, S5
	065 Add V0, V6, V0
	066 Add S1, S1, S2
	067 Move [X19+48], D0
	068 Move [X19+56], S1
	069 Move X20, [X31+80]
	070 Move X19, [X31+88]
	071 Move X22, [X31+64]
	072 Move X21, [X31+72]
	073 Move X30, [X31+48]
	074 Add X31, X31, 96
	075 Return 

Method: System.Void TranslateMatrix34InPlace(ref UnityEngine.Matrix4x4 lhs, UnityEngine.Vector3 rhs)

Disassembly:
	0x03DF86C8 ADRP X8, 0x371000
	0x03DF86CC LDR X8, [X8 + 0xB58]
	0x03DF86D0 ADRP X9, 0x371000
	0x03DF86D4 LDR X8, [X8]
	0x03DF86D8 LDR X9, [X9 + 0xB10]
	0x03DF86DC STR X8, [X20 + 0x10]
	0x03DF86E0 STR X20, [X19 + 0x30]
	0x03DF86E4 LDR X0, [X9]
	0x03DF86E8 ADRP X20, 0x371000
	0x03DF86EC LDR X20, [X20 + 0xB00]
	0x03DF86F0 BL 0x1C16F10
	0x03DF86F4 LDR X1, [X20]
	0x03DF86F8 MOV X20, X0
	0x03DF86FC BL 0x2734B10
	0x03DF8700 CBZ X20, 0x3DF88D4
	0x03DF8704 ADRP X8, 0x371000
	0x03DF8708 LDR X8, [X8 + 0xB38]
	0x03DF870C ADRP X23, 0x325000
	0x03DF8710 LDR X8, [X8]
	0x03DF8714 LDR X23, [X23 + 0xC08]
	0x03DF8718 STR X8, [X20 + 0x10]
	0x03DF871C STR X20, [X19 + 0x38]
	0x03DF8720 LDR X0, [X23]

ISIL:
	001 Move V3, [X0]
	002 Move V5, [X0+8]
	003 Move V4, [X0+16]
	004 Move V6, [X0+32]
	005 NotImplemented "Instruction INVALID not yet implemented."
	006 Multiply S0, S0, S5
	007 Move V5, [X0+40]
	008 Move V7, [X0+24]
	009 NotImplemented "Instruction INVALID not yet implemented."
	010 NotImplemented "Instruction INVALID not yet implemented."
	011 Multiply S2, S2, S5
	012 Move V5, [X0+48]
	013 Add V3, V3, V4
	014 Move V4, [X0+56]
	015 Multiply S1, S1, S7
	016 Add S0, S0, S1
	017 Add V1, V3, V6
	018 Add S0, S0, S2
	019 Add V1, V5, V1
	020 Add S0, S4, S0
	021 Move [X0+48], D1
	022 Move [X0+56], S0
	023 Return 

Method: UnityEngine.UIElements.IVisualElementScheduler get_schedule()

Disassembly:
	0x03DF8724 BL 0x1C16F10

ISIL:
	001 Return X0

Method: UnityEngine.UIElements.IVisualElementScheduledItem UnityEngine.UIElements.IVisualElementScheduler.Execute(System.Action`1<UnityEngine.UIElements.TimerState> timerUpdateEvent)

Disassembly:
	0x03DF8728 MOV X1, X31
	0x03DF872C MOV X20, X0
	0x03DF8730 BL 0x3E1BCA4
	0x03DF8734 CBZ X20, 0x3DF88D4
	0x03DF8738 STR X31, [X20 + 0x10]
	0x03DF873C LDR X0, [X22]
	0x03DF8740 MOVZ W1, 0x2
	0x03DF8744 BL 0x1C16D6C
	0x03DF8748 CBZ X0, 0x3DF88D4
	0x03DF874C LDR W8, [X0 + 0x18]
	0x03DF8750 MOV X1, X0
	0x03DF8754 CBZ W8, 0x3DF88D8
	0x03DF8758 ADRP X9, 0x371000
	0x03DF875C LDR X9, [X9 + 0xB40]
	0x03DF8760 CMP W8, 0x1
	0x03DF8764 LDR X9, [X9]
	0x03DF8768 STR X9, [X1 + 0x20]
	0x03DF876C B.EQ 0x3DF88D8
	0x03DF8770 ADRP X8, 0x371000
	0x03DF8774 LDR X8, [X8 + 0xB28]
	0x03DF8778 MOV X0, X20
	0x03DF877C MOV X2, X31
	0x03DF8780 LDR X8, [X8]
	0x03DF8784 STR X8, [X1 + 0x28]
	0x03DF8788 BL 0x3E1AE24
	0x03DF878C MOVN W8, 0x0
	0x03DF8790 STR W8, [X20 + 0x40]
	0x03DF8794 STR X20, [X19 + 0x40]
	0x03DF8798 LDR X0, [X23]
	0x03DF879C BL 0x1C16F10
	0x03DF87A0 MOV X1, X31
	0x03DF87A4 MOV X20, X0
	0x03DF87A8 BL 0x3E1BCA4
	0x03DF87AC CBZ X20, 0x3DF88D4
	0x03DF87B0 ADRP X8, 0x371000
	0x03DF87B4 LDR X8, [X8 + 0xB60]
	0x03DF87B8 ADRP X9, 0x325000
	0x03DF87BC LDR X8, [X8]
	0x03DF87C0 LDR X9, [X9 + 0x758]
	0x03DF87C4 STR W31, [X20 + 0x40]
	0x03DF87C8 STR X8, [X20 + 0x10]
	0x03DF87CC STR X20, [X19 + 0x48]
	0x03DF87D0 LDR X0, [X9]
	0x03DF87D4 BL 0x1C16F10
	0x03DF87D8 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x5F1000
	008 Move X23, 0x372000
	009 Move X22, 0x372000
	010 Move W8, [X19+635]
	011 Move X23, [X23+2680]
	012 Move X22, [X22+1464]
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x372000
	020 Move X0, [X0+1464]
	021 Call 0x1C17CF4
	022 Move X0, 0x372000
	023 Move X0, [X0+2680]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+635], W8
	027 Move X0, [X23]
	028 Call 0x1C17F10
	029 Move X1, X21
	030 Move X2, X20
	031 Move X3, X31
	032 Move X19, X0
	033 Call TimerStateScheduledItem..ctor, X0, X1, X2
	034 Move X0, [X22]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Compare X19, 0
	040 JumpIfEqual {56}
	041 Move X8, [X22]
	042 Move X0, X19
	043 Move X1, X31
	044 Move X8, [X8+184]
	045 Move X8, [X8]
	046 Move [X19+16], X8
	047 Call BaseVisualElementScheduledItem.Resume, X0
	048 Move X0, X19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Move X23, [X31+56]
	055 Return X0
	056 Call 0x1C17F20

Method: UnityEngine.UIElements.IVisualElementScheduledItem UnityEngine.UIElements.IVisualElementScheduler.Execute(System.Action updateEvent)

Disassembly:
	0x03DF87DC MOV X20, X0
	0x03DF87E0 BL 0x3E13BD4
	0x03DF87E4 CBZ X20, 0x3DF88D4
	0x03DF87E8 ADRP X8, 0x371000
	0x03DF87EC LDR X8, [X8 + 0xB50]
	0x03DF87F0 LDR X8, [X8]
	0x03DF87F4 STRB W31, [X20 + 0x40]
	0x03DF87F8 STR X8, [X20 + 0x10]
	0x03DF87FC STR X20, [X19 + 0x50]
	0x03DF8800 LDR X0, [X21]
	0x03DF8804 BL 0x1C16F10
	0x03DF8808 MOV X1, X31
	0x03DF880C MOV X20, X0
	0x03DF8810 BL 0x3E0A2F4
	0x03DF8814 CBZ X20, 0x3DF88D4
	0x03DF8818 ADRP X8, 0x371000
	0x03DF881C LDR X8, [X8 + 0xB48]
	0x03DF8820 LDR X8, [X8]
	0x03DF8824 STR X8, [X20 + 0x10]
	0x03DF8828 STR X20, [X19 + 0x58]
	0x03DF882C LDR X0, [X21]
	0x03DF8830 BL 0x1C16F10
	0x03DF8834 MOV X1, X31
	0x03DF8838 MOV X20, X0
	0x03DF883C BL 0x3E0A2F4
	0x03DF8840 CBZ X20, 0x3DF88D4
	0x03DF8844 ADRP X8, 0x371000
	0x03DF8848 LDR X8, [X8 + 0xB30]
	0x03DF884C MOVZ W1, 0x1
	0x03DF8850 LDR X8, [X8]
	0x03DF8854 STR X8, [X20 + 0x10]
	0x03DF8858 LDR X0, [X22]
	0x03DF885C BL 0x1C16D6C
	0x03DF8860 CBZ X0, 0x3DF88D4
	0x03DF8864 LDR W8, [X0 + 0x18]
	0x03DF8868 MOV X1, X0
	0x03DF886C CBZ W8, 0x3DF88D8
	0x03DF8870 ADRP X8, 0x371000
	0x03DF8874 LDR X8, [X8 + 0xB70]
	0x03DF8878 MOV X0, X20
	0x03DF887C MOV X2, X31
	0x03DF8880 LDR X8, [X8]
	0x03DF8884 STR X8, [X1 + 0x20]
	0x03DF8888 BL 0x3E1AE24
	0x03DF888C STR X20, [X19 + 0x60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x5F1000
	008 Move X23, 0x372000
	009 Move X22, 0x372000
	010 Move W8, [X19+636]
	011 Move X23, [X23+2688]
	012 Move X22, [X22+1464]
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x372000
	020 Move X0, [X0+1464]
	021 Call 0x1C17CF4
	022 Move X0, 0x372000
	023 Move X0, [X0+2688]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+636], W8
	027 Move X0, [X23]
	028 Call 0x1C17F10
	029 Move X1, X21
	030 Move X2, X20
	031 Move X3, X31
	032 Move X19, X0
	033 Call SimpleScheduledItem..ctor, X0, X1, X2
	034 Move X0, [X22]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Compare X19, 0
	040 JumpIfEqual {56}
	041 Move X8, [X22]
	042 Move X0, X19
	043 Move X1, X31
	044 Move X8, [X8+184]
	045 Move X8, [X8]
	046 Move [X19+16], X8
	047 Call BaseVisualElementScheduledItem.Resume, X0
	048 Move X0, X19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Move X23, [X31+56]
	055 Return X0
	056 Call 0x1C17F20

Method: UnityEngine.UIElements.IStyle get_style()

Disassembly:
	0x03DE8EEC RET
	0x03DE8EF0 LDR W8, [X31 + 0x1C]
	0x03DE8EF4 CMP W8, 0x1
	0x03DE8EF8 B.NE 0x3DE8F5C
	0x03DE8EFC LDR X8, [X19 + 0x378]
	0x03DE8F00 ADD X0, X31, 0x10
	0x03DE8F04 MOV X1, X31
	0x03DE8F08 STR X8, [X31 + 0x10]
	0x03DE8F0C BL 0x3DF88DC
	0x03DE8F10 CBZ X0, 0x3DE8F74
	0x03DE8F14 ADRP X9, 0x334000
	0x03DE8F18 LDR X8, [X0]
	0x03DE8F1C LDR X9, [X9 + 0x120]
	0x03DE8F20 MOV X19, X0
	0x03DE8F24 LDR X1, [X9]
	0x03DE8F28 LDRH W9, [X8 + 0x12E]
	0x03DE8F2C TBZ X20, 0x0, 0x3DE8F7C
	0x03DE8F30 CBZ W9, 0x3DE8F54
	0x03DE8F34 LDR X10, [X8 + 0xB0]
	0x03DE8F38 ADD X10, X10, 0x8
	0x03DE8F3C LDUR X11, [X10 - 0x8]
	0x03DE8F40 CMP X11, X1
	0x03DE8F44 B.EQ 0x3DE8FB0
	0x03DE8F48 SUBS X9, X9, 0x1
	0x03DE8F4C ADD X10, X10, 0x10
	0x03DE8F50 B.NE 0x3DE8F3C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x601000
	005 Move W8, [X20+637]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x382000
	012 Move X0, [X0+2192]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+637], W8
	016 Move X20, [X19+944]
	017 Compare X20, 0
	018 JumpIfNotEqual {28}
	019 Move X8, 0x382000
	020 Move X8, [X8+2192]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call StyleValueCollection..ctor, X0
	026 Move [X20+32], X19
	027 Move [X19+944], X20
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: UnityEngine.UIElements.ICustomStyle get_customStyle()

Disassembly:
	0x03DF8890 LDR X0, [X21]
	0x03DF8894 BL 0x1C16F10
	0x03DF8898 MOV X1, X31
	0x03DF889C MOV X20, X0
	0x03DF88A0 BL 0x3E0A2F4
	0x03DF88A4 CBZ X20, 0x3DF88D4
	0x03DF88A8 ADRP X8, 0x330000
	0x03DF88AC LDR X8, [X8 + 0xAB8]
	0x03DF88B0 MOV X0, X19
	0x03DF88B4 LDP X22, X21, [X31 + 0x10]
	0x03DF88B8 MOV X1, X31
	0x03DF88BC LDR X8, [X8]
	0x03DF88C0 STR X8, [X20 + 0x10]
	0x03DF88C4 STR X20, [X19 + 0x68]
	0x03DF88C8 LDP X20, X19, [X31 + 0x20]
	0x03DF88CC LDP X30, X23, [X31], #0x30
	0x03DF88D0 B 0x3E1A838
	0x03DF88D4 BL 0x1C16F20
	0x03DF88D8 BL 0x1C16F28
	0x03DF88DC STR X30, [X31 - 0x10]!
	0x03DF88E0 LDR X8, [X0]
	0x03DF88E4 CBZ X8, 0x3DF88F4
	0x03DF88E8 LDR X0, [X8 + 0x388]
	0x03DF88EC LDR X30, [X31], #0x10
	0x03DF88F0 RET
	0x03DF88F4 BL 0x1C16F20
	0x03DF88F8 STR X30, [X31 - 0x10]!
	0x03DF88FC LDR X8, [X0]
	0x03DF8900 CBZ X8, 0x3DF8910
	0x03DF8904 LDR X0, [X8 + 0x398]
	0x03DF8908 LDR X30, [X31], #0x10
	0x03DF890C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5F1000
	006 Move X20, 0x324000
	007 Move W8, [X21+638]
	008 Move X20, [X20+2200]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x324000
	015 Move X0, [X0+2200]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+638], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X0, [X8+80]
	027 Compare X0, 0
	028 JumpIfEqual {41}
	029 Move V0, [X19+776]
	030 Move X1, [X19+760]
	031 Move X2, X31
	032 Call CustomStyleAccess.SetContext, X0, X1, V0
	033 Move X8, [X20]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X8, [X8+184]
	037 Move X0, [X8+80]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return X0
	041 Call 0x1C17F20

Method: UnityEngine.UIElements.VisualElementStyleSheetSet get_styleSheets()

Disassembly:
	0x03DF8910 BL 0x1C16F20
	0x03DF8914 STR X1, [X0]
	0x03DF8918 RET
	0x03DF891C STR X30, [X31 - 0x20]!
	0x03DF8920 STP X20, X19, [X31 + 0x10]
	0x03DF8924 CBZ X1, 0x3DF894C
	0x03DF8928 MOV X19, X1
	0x03DF892C MOV X20, X0
	0x03DF8930 BL 0x3DF8994

ISIL:
	001 Move [X31-16], X30
	002 Move X1, X0
	003 Add X0, X31, 8
	004 Move X2, X31
	005 Move [X31+8], X31
	006 Call VisualElementStyleSheetSet..ctor, X0, X1
	007 Move X0, [X31+8]
	008 Move X30, [X31+16]
	009 Return X0

Method: System.Void AddStyleSheetPath(System.String sheetPath)

Disassembly:
	0x03DF8934 MOV W1, W0
	0x03DF8938 MOV X0, X20
	0x03DF893C MOV X2, X19
	0x03DF8940 LDP X20, X19, [X31 + 0x10]
	0x03DF8944 LDR X30, [X31], #0x20
	0x03DF8948 B 0x3DF89E4
	0x03DF894C ADRP X0, 0x303000
	0x03DF8950 LDR X0, [X0 + 0x578]
	0x03DF8954 BL 0x1C16D08
	0x03DF8958 BL 0x1C16F10
	0x03DF895C MOV X19, X0
	0x03DF8960 ADRP X0, 0x371000
	0x03DF8964 LDR X0, [X0 + 0xB80]
	0x03DF8968 BL 0x1C16D08
	0x03DF896C MOV X1, X0
	0x03DF8970 MOV X0, X19
	0x03DF8974 MOV X2, X31
	0x03DF8978 BL 0x3314A68
	0x03DF897C ADRP X0, 0x371000
	0x03DF8980 LDR X0, [X0 + 0xB88]
	0x03DF8984 BL 0x1C16D08
	0x03DF8988 MOV X1, X0
	0x03DF898C MOV X0, X19
	0x03DF8990 BL 0x1C16DEC
	0x03DF8994 STR X30, [X31 - 0x20]!
	0x03DF8998 STP X20, X19, [X31 + 0x10]
	0x03DF899C ADRP X20, 0x5F0000
	0x03DF89A0 LDRB W8, [X20 + 0x293]
	0x03DF89A4 MOV X19, X0
	0x03DF89A8 TBNZ X8, 0x0, 0x3DF89C0
	0x03DF89AC ADRP X0, 0x324000
	0x03DF89B0 LDR X0, [X0 + 0xE8]
	0x03DF89B4 BL 0x1C16CF4
	0x03DF89B8 MOVZ W8, 0x1
	0x03DF89BC STRB W8, [X20 + 0x293]
	0x03DF89C0 LDR X8, [X19]
	0x03DF89C4 CBZ X8, 0x3DF89E0
	0x03DF89C8 LDR X8, [X8 + 0x398]
	0x03DF89CC CBZ X8, 0x3DF89E0
	0x03DF89D0 LDR W0, [X8 + 0x18]
	0x03DF89D4 LDP X20, X19, [X31 + 0x10]
	0x03DF89D8 LDR X30, [X31], #0x20
	0x03DF89DC RET
	0x03DF89E0 BL 0x1C16F20
	0x03DF89E4 SUB X31, X31, 0x40
	0x03DF89E8 STP X30, X23, [X31 + 0x10]
	0x03DF89EC STP X22, X21, [X31 + 0x20]
	0x03DF89F0 STP X20, X19, [X31 + 0x30]
	0x03DF89F4 ADRP X22, 0x5F0000
	0x03DF89F8 LDRB W8, [X22 + 0x28C]
	0x03DF89FC MOV X20, X2
	0x03DF8A00 MOV W21, W1
	0x03DF8A04 MOV X19, X0
	0x03DF8A08 STR W1, [X31 + 0xC]
	0x03DF8A0C TBNZ X8, 0x0, 0x3DF8A30
	0x03DF8A10 ADRP X0, 0x324000
	0x03DF8A14 LDR X0, [X0 + 0xF8]
	0x03DF8A18 BL 0x1C16CF4
	0x03DF8A1C ADRP X0, 0x323000
	0x03DF8A20 LDR X0, [X0 + 0x898]
	0x03DF8A24 BL 0x1C16CF4
	0x03DF8A28 MOVZ W8, 0x1
	0x03DF8A2C STRB W8, [X22 + 0x28C]
	0x03DF8A30 CBZ X20, 0x3DF8BD4
	0x03DF8A34 MOV X0, X19
	0x03DF8A38 BL 0x3DF8994
	0x03DF8A3C CMP W0, W21
	0x03DF8A40 B.LT 0x3DF8BF4
	0x03DF8A44 LDR X8, [X19]
	0x03DF8A48 CMP X20, X8
	0x03DF8A4C B.EQ 0x3DF8C58
	0x03DF8A50 CBZ X8, 0x3DF8BD0
	0x03DF8A54 LDR X8, [X8 + 0x3A0]
	0x03DF8A58 CBZ X8, 0x3DF8A64
	0x03DF8A5C LDRB W8, [X8 + 0x4C]
	0x03DF8A60 CBNZ W8, 0x3DF8C8C
	0x03DF8A64 MOV X0, X20
	0x03DF8A68 MOV X1, X31
	0x03DF8A6C BL 0x3DF6948
	0x03DF8A70 LDR X8, [X19]
	0x03DF8A74 CBZ X8, 0x3DF8BD0
	0x03DF8A78 ADRP X23, 0x323000
	0x03DF8A7C LDR X23, [X23 + 0x898]
	0x03DF8A80 LDR X22, [X8 + 0x398]
	0x03DF8A84 LDR X0, [X23]
	0x03DF8A88 LDR W9, [X0 + 0xE0]
	0x03DF8A8C CBNZ W9, 0x3DF8A98
	0x03DF8A90 BL 0x1C16DFC
	0x03DF8A94 LDR X0, [X23]
	0x03DF8A98 LDR X8, [X0 + 0xB8]
	0x03DF8A9C LDR X8, [X8 + 0x48]
	0x03DF8AA0 CMP X22, X8
	0x03DF8AA4 B.NE 0x3DF8AD8
	0x03DF8AA8 ADRP X8, 0x324000
	0x03DF8AAC LDR X8, [X8 + 0xF8]
	0x03DF8AB0 LDR X22, [X19]
	0x03DF8AB4 LDR X0, [X8]
	0x03DF8AB8 LDR W8, [X0 + 0xE0]
	0x03DF8ABC CBNZ W8, 0x3DF8AC4
	0x03DF8AC0 BL 0x1C16DFC
	0x03DF8AC4 MOV W0, W31
	0x03DF8AC8 MOV X1, X31
	0x03DF8ACC BL 0x3D163F4
	0x03DF8AD0 CBZ X22, 0x3DF8BD0
	0x03DF8AD4 STR X0, [X22 + 0x398]
	0x03DF8AD8 LDR X8, [X19]
	0x03DF8ADC CBZ X8, 0x3DF8BD0
	0x03DF8AE0 LDR X0, [X8 + 0x2B8]
	0x03DF8AE4 CBZ X0, 0x3DF8BD0
	0x03DF8AE8 MOV X1, X31
	0x03DF8AEC BL 0x3CE6FD4
	0x03DF8AF0 TBZ X0, 0x0, 0x3DF8B04
	0x03DF8AF4 LDR X0, [X19]
	0x03DF8AF8 CBZ X0, 0x3DF8BD0
	0x03DF8AFC MOV X1, X31
	0x03DF8B00 BL 0x3DF2A08
	0x03DF8B04 MOV X0, X19
	0x03DF8B08 MOV X1, X20
	0x03DF8B0C MOV W2, W21
	0x03DF8B10 BL 0x3DF8CD4
	0x03DF8B14 LDR W8, [X20 + 0x328]
	0x03DF8B18 LDRB W9, [X20 + 0x10]
	0x03DF8B1C ADD W1, W8, W9
	0x03DF8B20 CMP W1, 0x1
	0x03DF8B24 B.LT 0x3DF8B38
	0x03DF8B28 LDR X0, [X19]
	0x03DF8B2C CBZ X0, 0x3DF8BD0
	0x03DF8B30 MOV X2, X31
	0x03DF8B34 BL 0x3DEF538
	0x03DF8B38 LDR X8, [X20 + 0x378]
	0x03DF8B3C ADD X0, X31, 0x0
	0x03DF8B40 STR X8, [X31]
	0x03DF8B44 LDR X1, [X19]
	0x03DF8B48 BL 0x3DF8E10
	0x03DF8B4C LDR X0, [X19]
	0x03DF8B50 CBZ X0, 0x3DF8BD0
	0x03DF8B54 MOV X1, X31
	0x03DF8B58 BL 0x3DEC00C
	0x03DF8B5C AND W1, W0, 0x1
	0x03DF8B60 MOV X0, X20
	0x03DF8B64 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D8
	003 Move [X31+32], X30
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X23, 0x5F1000
	010 Move X21, 0x36C000
	011 Move X22, 0x2FC000
	012 Move W8, [X23+639]
	013 Move X21, [X21+3600]
	014 Move X22, [X22+1728]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {47}
	021 Move X0, 0x2FC000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move X0, 0x2FC000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0x326000
	028 Move X0, [X0+3336]
	029 Call 0x1C17CF4
	030 Move X0, 0x36C000
	031 Move X0, [X0+3600]
	032 Call 0x1C17CF4
	033 Move X0, 0x36C000
	034 Move X0, [X0+3608]
	035 Call 0x1C17CF4
	036 Move X0, 0x2FC000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move X0, 0x324000
	040 Move X0, [X0+2200]
	041 Call 0x1C17CF4
	042 Move X0, 0x372000
	043 Move X0, [X0+2696]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X23+639], W8
	047 Move X0, [X22]
	048 Move [X31+8], X31
	049 Move X22, 0x326000
	050 Move X21, [X21]
	051 Move W8, [X0+224]
	052 Move X22, [X22+3336]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X21
	057 Move X1, X31
	058 Call Type.GetTypeFromHandle, X0
	059 Move X21, X0
	060 Move X0, X20
	061 Call VisualElement.get_scaledPixelsPerPoint, X0
	062 Move X0, [X22]
	063 Move V8, V0
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X22, 0x2FC000
	069 Move X22, [X22+1432]
	070 Move X0, X19
	071 Move X1, X21
	072 Move V0, V8
	073 Move X2, X31
	074 Call Panel.LoadResource, X0, X1, V0
	075 Compare X0, 0
	076 JumpIfEqual {84}
	077 Move X8, 0x36C000
	078 Move X8, [X8+3608]
	079 Move X9, [X0]
	080 Move X8, [X8]
	081 Move W11, [X9+304]
	082 Move W10, [X8+304]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X21, X31
	085 Move X9, [X9+200]
	086 Add X9, X9, X10
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSEL not yet implemented."
	090 Move X0, [X22]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X21
	096 Move X1, X31
	097 Move X2, X31
	098 Call Object.op_Equality, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {140}
	103 Move X20, 0x324000
	104 Move X20, [X20+2200]
	105 Move X0, [X20]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {111}
	109 Call 0x1C17DFC
	110 Move X0, [X20]
	111 Move X8, [X0+184]
	112 Move X0, [X8+88]
	113 Compare X0, 0
	114 JumpIfEqual {160}
	115 Move X1, X19
	116 Move X2, X31
	117 Call Regex.IsMatch, X0, X1
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {151}
	122 Move X8, 0x372000
	123 Move X8, [X8+2696]
	124 Move X1, X19
	125 Move X2, X31
	126 Move X0, [X8]
	127 Call String.Format, X0, X1
	128 Move X8, 0x2FC000
	129 Move X8, [X8+2600]
	130 Move X19, X0
	131 Move X8, [X8]
	132 Move W9, [X8+224]
	133 Compare W9, 0
	134 JumpIfNotEqual {137}
	135 Move X0, X8
	136 Call 0x1C17DFC
	137 Move X0, X19
	138 Move X1, X31
	139 Call Debug.LogWarning, X0
	140 Add X0, X31, 24
	141 Move X1, X20
	142 Move X2, X31
	143 Move [X31+24], X31
	144 Call VisualElementStyleSheetSet..ctor, X0, X1
	145 Move X8, [X31+24]
	146 Add X0, X31, 8
	147 Move X1, X21
	148 Move X2, X31
	149 Move [X31+8], X8
	150 Call VisualElementStyleSheetSet.Add, X0, X1
	151 Move X20, [X31+64]
	152 Move X19, [X31+72]
	153 Move X22, [X31+48]
	154 Move X21, [X31+56]
	155 Move X30, [X31+32]
	156 Move X23, [X31+40]
	157 Move V8, [X31+16]
	158 Add X31, X31, 80
	159 Return 
	160 Call 0x1C17F20

Method: UnityEngine.UIElements.StyleFloat ResolveLengthValue(UnityEngine.UIElements.Length length, System.Boolean isRow)

Disassembly:
	0x03DE9E5C SUBS X9, X9, 0x1
	0x03DE9E60 ADD X10, X10, 0x10
	0x03DE9E64 B.NE 0x3DE9E50
	0x03DE9E68 MOVZ W2, 0x4
	0x03DE9E6C MOV X0, X24
	0x03DE9E70 BL 0x1C5C788
	0x03DE9E74 B 0x3DE9E88
	0x03DE9E78 LDR W9, [X10]
	0x03DE9E7C ADD W9, W9, 0x4
	0x03DE9E80 ADD X8, X8, W9, 0x4, SXTW
	0x03DE9E84 ADD X0, X8, 0x138
	0x03DE9E88 LDP V0, V1, [X31 + 0x30]
	0x03DE9E8C LDP V2, V3, [X31 + 0x10]
	0x03DE9E90 LDR X8, [X0]
	0x03DE9E94 ADD X3, X31, 0xB0
	0x03DE9E98 STP V0, V1, [X31 + 0xB0]
	0x03DE9E9C STP V2, V3, [X31 + 0x90]
	0x03DE9EA0 LDR X9, [X0 + 0x8]
	0x03DE9EA4 ADD X4, X31, 0x90
	0x03DE9EA8 MOV X0, X24
	0x03DE9EAC MOV X1, X23
	0x03DE9EB0 MOV W2, W22
	0x03DE9EB4 MOV W5, W21
	0x03DE9EB8 MOV W6, W20
	0x03DE9EBC MOV X7, X19
	0x03DE9EC0 STR X9, [X31]
	0x03DE9EC4 BLR X8
	0x03DE9EC8 LDP X20, X19, [X31 + 0x110]
	0x03DE9ECC LDP X22, X21, [X31 + 0x100]
	0x03DE9ED0 LDP X24, X23, [X31 + 0xF0]
	0x03DE9ED4 LDP X26, X25, [X31 + 0xE0]
	0x03DE9ED8 LDP X29, X30, [X31 + 0xD0]
	0x03DE9EDC AND W0, W0, 0x1
	0x03DE9EE0 ADD X31, X31, 0x120
	0x03DE9EE4 RET
	0x03DE9EE8 BL 0x1C16F20
	0x03DE9EEC SUB X31, X31, 0x80
	0x03DE9EF0 STR X30, [X31 + 0x20]
	0x03DE9EF4 STP X28, X27, [X31 + 0x30]
	0x03DE9EF8 STP X26, X25, [X31 + 0x40]
	0x03DE9EFC STP X24, X23, [X31 + 0x50]
	0x03DE9F00 STP X22, X21, [X31 + 0x60]
	0x03DE9F04 STP X20, X19, [X31 + 0x70]
	0x03DE9F08 ADRP X27, 0x5FF000
	0x03DE9F0C LDRB W8, [X27 + 0x221]
	0x03DE9F10 MOV W23, W7
	0x03DE9F14 MOV W19, W6
	0x03DE9F18 MOV X20, X5
	0x03DE9F1C MOV X21, X4
	0x03DE9F20 MOV X22, X3
	0x03DE9F24 MOV X24, X2
	0x03DE9F28 MOV W25, W1
	0x03DE9F2C MOV X26, X0
	0x03DE9F30 TBNZ X8, 0x0, 0x3DE9F48
	0x03DE9F34 ADRP X0, 0x37B000
	0x03DE9F38 LDR X0, [X0 + 0x1A8]
	0x03DE9F3C BL 0x1C16CF4
	0x03DE9F40 MOVZ W8, 0x1
	0x03DE9F44 STRB W8, [X27 + 0x221]
	0x03DE9F48 LDR X0, [X26 + 0x3A0]
	0x03DE9F4C CBZ X0, 0x3DEA018
	0x03DE9F50 LDR X8, [X0]
	0x03DE9F54 LDR X9, [X8 + 0x3D8]
	0x03DE9F58 LDR X1, [X8 + 0x3E0]
	0x03DE9F5C BLR X9
	0x03DE9F60 CBZ X0, 0x3DEA018
	0x03DE9F64 ADRP X10, 0x37B000
	0x03DE9F68 LDR X8, [X0]
	0x03DE9F6C LDR X10, [X10 + 0x1A8]
	0x03DE9F70 LDR X28, [X31 + 0x80]
	0x03DE9F74 MOV X27, X0
	0x03DE9F78 LDRH W9, [X8 + 0x12E]
	0x03DE9F7C LDR X1, [X10]
	0x03DE9F80 CBZ X9, 0x3DE9FA4
	0x03DE9F84 LDR X10, [X8 + 0xB0]
	0x03DE9F88 ADD X10, X10, 0x8
	0x03DE9F8C LDUR X11, [X10 - 0x8]
	0x03DE9F90 CMP X11, X1
	0x03DE9F94 B.EQ 0x3DE9FB4
	0x03DE9F98 SUBS X9, X9, 0x1
	0x03DE9F9C ADD X10, X10, 0x10
	0x03DE9FA0 B.NE 0x3DE9F8C
	0x03DE9FA4 MOVZ W2, 0x5
	0x03DE9FA8 MOV X0, X27
	0x03DE9FAC BL 0x1C5C788
	0x03DE9FB0 B 0x3DE9FC4
	0x03DE9FB4 LDR W9, [X10]
	0x03DE9FB8 ADD W9, W9, 0x5
	0x03DE9FBC ADD X8, X8, W9, 0x4, SXTW
	0x03DE9FC0 ADD X0, X8, 0x138
	0x03DE9FC4 LDP X8, X9, [X0]
	0x03DE9FC8 MOV X0, X27
	0x03DE9FCC MOV X1, X26
	0x03DE9FD0 MOV W2, W25
	0x03DE9FD4 MOV X3, X24
	0x03DE9FD8 MOV X4, X22
	0x03DE9FDC MOV X5, X21
	0x03DE9FE0 MOV X6, X20
	0x03DE9FE4 MOV W7, W19
	0x03DE9FE8 STP X28, X9, [X31 + 0x8]
	0x03DE9FEC STR W23, [X31]
	0x03DE9FF0 BLR X8
	0x03DE9FF4 LDP X20, X19, [X31 + 0x70]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x600000
	007 Move W8, [X21+640]
	008 Move W20, W2
	009 Move X19, X0
	010 Move [X31+24], X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x334000
	016 Move X0, [X0+288]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+640], W8
	020 Add X0, X31, 24
	021 Move X1, X31
	022 Move [X31+16], X31
	023 Call Length.IsAuto, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {31}
	028 Add X0, X31, 8
	029 Move W1, 2
	030 Move [X31+8], X31
	031 Add X0, X31, 24
	032 Move X1, X31
	033 Call Length.IsNone, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {50}
	038 Move [X31+8], X31
	039 Add X0, X31, 8
	040 Move W1, 3
	041 Move X2, X31
	042 Call StyleFloat..ctor, X0, X1
	043 Move X0, [X31+8]
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Add X31, X31, 64
	049 Return X0
	050 Move W8, [X31+28]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, [X19+888]
	053 Add X0, X31, 16
	054 Move X1, X31
	055 Move [X31+16], X8
	056 Call Hierarchy.get_parent, X0
	057 Compare X0, 0
	058 JumpIfEqual {83}
	059 Move X9, 0x334000
	060 Move X8, [X0]
	061 Move X9, [X9+288]
	062 Move X19, X0
	063 Move X1, [X9]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move TEMP, X20
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {84}
	069 Compare W9, 0
	070 JumpIfEqual {77}
	071 Move X10, [X8+176]
	072 Add X10, X10, 8
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Subtract X9, X9, 1
	076 Add X10, X10, 16
	077 Move W2, 44
	078 Move V0, [X31+24]
	079 Add X0, X31, 8
	080 Move X1, X31
	081 Move [X31+8], X31
	082 Call StyleFloat..ctor, X0, V0
	083 Move S0, W31
	084 Compare W9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move W2, 19
	093 Move X0, X19
	094 Call 0x1C5D788
	095 Move W9, [X10]
	096 Add W9, W9, 44
	097 Move W9, [X10]
	098 Add W9, W9, 19
	099 Add X8, X8, W9
	100 Add X0, X8, 312
	101 Move X8, [X0]
	102 Move X1, [X0+8]
	103 Move X0, X19
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move V1, [X31+24]
	106 Move W8, 0x42C80000
	107 Move X0, X31
	108 Multiply S0, S0, S1
	109 Move S1, W8
	110 NotImplemented "Instruction FDIV not yet implemented."
	111 Call StyleFloat.op_Implicit, V0

Method: UnityEngine.Vector3 ResolveTranslate()

Disassembly:
	0x03DEA3EC RET
	0x03DEA3F0 BL 0x1C16F20
	0x03DEA3F4 SUB X31, X31, 0x120
	0x03DEA3F8 STP X29, X30, [X31 + 0xD0]
	0x03DEA3FC STP X26, X25, [X31 + 0xE0]
	0x03DEA400 STP X24, X23, [X31 + 0xF0]
	0x03DEA404 STP X22, X21, [X31 + 0x100]
	0x03DEA408 STP X20, X19, [X31 + 0x110]
	0x03DEA40C ADRP X24, 0x5FE000
	0x03DEA410 LDRB W8, [X24 + 0x225]
	0x03DEA414 MOV X19, X6
	0x03DEA418 MOV W20, W5
	0x03DEA41C MOV W21, W4
	0x03DEA420 MOV X25, X3
	0x03DEA424 MOV X26, X2
	0x03DEA428 MOV W22, W1
	0x03DEA42C MOV X23, X0
	0x03DEA430 TBNZ X8, 0x0, 0x3DEA448
	0x03DEA434 ADRP X0, 0x37A000
	0x03DEA438 LDR X0, [X0 + 0x1A8]
	0x03DEA43C BL 0x1C16CF4
	0x03DEA440 MOVZ W8, 0x1
	0x03DEA444 STRB W8, [X24 + 0x225]
	0x03DEA448 LDR X0, [X23 + 0x3A0]
	0x03DEA44C CBZ X0, 0x3DEA468
	0x03DEA450 LDR X8, [X0]
	0x03DEA454 LDR X9, [X8 + 0x3D8]
	0x03DEA458 LDR X1, [X8 + 0x3E0]
	0x03DEA45C BLR X9
	0x03DEA460 MOV X24, X0
	0x03DEA464 B 0x3DEA46C
	0x03DEA468 MOV X24, X31
	0x03DEA46C LDR X8, [X26 + 0x10]
	0x03DEA470 LDR V0, [X26]
	0x03DEA474 STR X8, [X31 + 0x80]
	0x03DEA478 STR V0, [X31 + 0x7]
	0x03DEA47C LDR X8, [X25 + 0x10]
	0x03DEA480 LDR V0, [X25]
	0x03DEA484 STR X8, [X31 + 0x60]
	0x03DEA488 STR V0, [X31 + 0x5]
	0x03DEA48C CBZ X24, 0x3DEA578
	0x03DEA490 LDR V0, [X31 + 0x7]
	0x03DEA494 LDR X8, [X31 + 0x80]
	0x03DEA498 LDR V1, [X31 + 0x5]
	0x03DEA49C LDR X9, [X31 + 0x60]
	0x03DEA4A0 STR V0, [X31 + 0x3]
	0x03DEA4A4 STR X8, [X31 + 0x40]
	0x03DEA4A8 STR V1, [X31 + 0x1]
	0x03DEA4AC STR X9, [X31 + 0x20]
	0x03DEA4B0 ADRP X10, 0x37A000
	0x03DEA4B4 LDR X8, [X24]
	0x03DEA4B8 LDR X10, [X10 + 0x1A8]
	0x03DEA4BC LDRH W9, [X8 + 0x12E]
	0x03DEA4C0 LDR X1, [X10]
	0x03DEA4C4 CBZ X9, 0x3DEA4E8
	0x03DEA4C8 LDR X10, [X8 + 0xB0]
	0x03DEA4CC ADD X10, X10, 0x8
	0x03DEA4D0 LDUR X11, [X10 - 0x8]
	0x03DEA4D4 CMP X11, X1
	0x03DEA4D8 B.EQ 0x3DEA4F8
	0x03DEA4DC SUBS X9, X9, 0x1
	0x03DEA4E0 ADD X10, X10, 0x10
	0x03DEA4E4 B.NE 0x3DEA4D0
	0x03DEA4E8 MOVZ W2, 0xA
	0x03DEA4EC MOV X0, X24
	0x03DEA4F0 BL 0x1C5C788
	0x03DEA4F4 B 0x3DEA508
	0x03DEA4F8 LDR W9, [X10]
	0x03DEA4FC ADD W9, W9, 0xA
	0x03DEA500 ADD X8, X8, W9, 0x4, SXTW
	0x03DEA504 ADD X0, X8, 0x138
	0x03DEA508 LDR V0, [X31 + 0x3]
	0x03DEA50C LDR X9, [X31 + 0x40]
	0x03DEA510 LDR V1, [X31 + 0x1]
	0x03DEA514 LDR X10, [X31 + 0x20]
	0x03DEA518 LDR X8, [X0]
	0x03DEA51C STR V0, [X31 + 0xB]
	0x03DEA520 STR X9, [X31 + 0xC0]
	0x03DEA524 STR V1, [X31 + 0x9]
	0x03DEA528 STR X10, [X31 + 0xA0]
	0x03DEA52C LDR X9, [X0 + 0x8]
	0x03DEA530 ADD X3, X31, 0xB0
	0x03DEA534 ADD X4, X31, 0x90
	0x03DEA538 MOV X0, X24
	0x03DEA53C MOV X1, X23
	0x03DEA540 MOV W2, W22
	0x03DEA544 MOV W5, W21
	0x03DEA548 MOV W6, W20
	0x03DEA54C MOV X7, X19
	0x03DEA550 STR X9, [X31]
	0x03DEA554 BLR X8
	0x03DEA558 LDP X20, X19, [X31 + 0x110]
	0x03DEA55C LDP X22, X21, [X31 + 0x100]
	0x03DEA560 LDP X24, X23, [X31 + 0xF0]
	0x03DEA564 LDP X26, X25, [X31 + 0xE0]
	0x03DEA568 LDP X29, X30, [X31 + 0xD0]
	0x03DEA56C AND W0, W0, 0x1
	0x03DEA570 ADD X31, X31, 0x120
	0x03DEA574 RET
	0x03DEA578 BL 0x1C16F20
	0x03DEA57C SUB X31, X31, 0x120
	0x03DEA580 STP X29, X30, [X31 + 0xD0]
	0x03DEA584 STP X26, X25, [X31 + 0xE0]
	0x03DEA588 STP X24, X23, [X31 + 0xF0]
	0x03DEA58C STP X22, X21, [X31 + 0x100]
	0x03DEA590 STP X20, X19, [X31 + 0x110]
	0x03DEA594 ADRP X24, 0x5FE000
	0x03DEA598 LDRB W8, [X24 + 0x226]
	0x03DEA59C MOV X19, X6
	0x03DEA5A0 MOV W20, W5
	0x03DEA5A4 MOV W21, W4
	0x03DEA5A8 MOV X25, X3
	0x03DEA5AC MOV X26, X2
	0x03DEA5B0 MOV W22, W1
	0x03DEA5B4 MOV X23, X0
	0x03DEA5B8 TBNZ X8, 0x0, 0x3DEA5D0
	0x03DEA5BC ADRP X0, 0x37A000
	0x03DEA5C0 LDR X0, [X0 + 0x1A8]
	0x03DEA5C4 BL 0x1C16CF4
	0x03DEA5C8 MOVZ W8, 0x1
	0x03DEA5CC STRB W8, [X24 + 0x226]
	0x03DEA5D0 LDR X0, [X23 + 0x3A0]
	0x03DEA5D4 CBZ X0, 0x3DEA5F0
	0x03DEA5D8 LDR X8, [X0]
	0x03DEA5DC LDR X9, [X8 + 0x3D8]
	0x03DEA5E0 LDR X1, [X8 + 0x3E0]
	0x03DEA5E4 BLR X9

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], D9
	003 Move [X31+40], D8
	004 Move [X31+48], X30
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X20, 0x5FF000
	010 Move W8, [X20+641]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x333000
	017 Move X0, [X0+288]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+641], W8
	021 Add X0, X19, 704
	022 Add X8, X31, 8
	023 Move X1, X31
	024 Call ComputedStyle.get_translate, X0
	025 Move W22, [X31+8]
	026 Move W8, [X31+12]
	027 Move W20, [X31+16]
	028 Move W21, [X31+20]
	029 Move V9, [X31+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Compare X19, 0
	032 JumpIfEqual {132}
	033 Move X10, 0x333000
	034 Move X8, [X19]
	035 Move X10, [X10+288]
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X1, [X10]
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move W2, 44
	047 Move X0, X19
	048 Call 0x1C5D788
	049 And W8, W22, 0x7FFFFFFF
	050 Move W9, 0x7F800000
	051 Move S0, W22
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move S1, W31
	054 NotImplemented "Instruction FCSEL not yet implemented."
	055 Move W9, [X10]
	056 Add W9, W9, 44
	057 Add X8, X8, W9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X0, X19
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move W8, S0
	064 And W8, W8, 0x7FFFFFFF
	065 Move W9, 0x7F800000
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move S8, W31
	068 Move S1, W22
	069 Move W8, 0x42C80000
	070 Multiply S0, S0, S1
	071 Move S1, W8
	072 NotImplemented "Instruction FDIV not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Compare X19, 0
	075 JumpIfEqual {132}
	076 Move X10, 0x333000
	077 Move X8, [X19]
	078 Move X10, [X10+288]
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Move X1, [X10]
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move W2, 19
	090 Move X0, X19
	091 Call 0x1C5D788
	092 And W8, W20, 0x7FFFFFFF
	093 Move W9, 0x7F800000
	094 Move S0, W20
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move S1, W31
	097 NotImplemented "Instruction FCSEL not yet implemented."
	098 Move W9, [X10]
	099 Add W9, W9, 19
	100 Add X8, X8, W9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X1, [X0+8]
	104 Move X0, X19
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move W8, S0
	107 And W8, W8, 0x7FFFFFFF
	108 Move W9, 0x7F800000
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move S1, W31
	111 Move S1, W20
	112 Move W8, 0x42C80000
	113 Multiply S0, S0, S1
	114 Move S1, W8
	115 NotImplemented "Instruction FDIV not yet implemented."
	116 Move W8, S9
	117 And W8, W8, 0x7FFFFFFF
	118 Move W9, 0x7F800000
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move S0, W31
	121 NotImplemented "Instruction FCSEL not yet implemented."
	122 Move V0, V8
	123 Move X20, [X31+80]
	124 Move X19, [X31+88]
	125 Move X22, [X31+64]
	126 Move X21, [X31+72]
	127 Move X30, [X31+48]
	128 Move D9, [X31+32]
	129 Move D8, [X31+40]
	130 Add X31, X31, 96
	131 Return X0
	132 Call 0x1C17F20

Method: UnityEngine.Vector3 ResolveTransformOrigin()

Disassembly:
	0x03DEA0E4 ADD X0, X8, 0x138
	0x03DEA0E8 LDP X8, X9, [X0]
	0x03DEA0EC MOV X0, X26
	0x03DEA0F0 MOV X1, X25
	0x03DEA0F4 MOV W2, W24
	0x03DEA0F8 MOV X3, X23
	0x03DEA0FC MOV X4, X22
	0x03DEA100 MOV W5, W21
	0x03DEA104 MOV W6, W20
	0x03DEA108 MOV X7, X19
	0x03DEA10C STR X9, [X31]
	0x03DEA110 BLR X8
	0x03DEA114 LDP X20, X19, [X31 + 0x50]
	0x03DEA118 LDP X22, X21, [X31 + 0x40]
	0x03DEA11C LDP X24, X23, [X31 + 0x30]
	0x03DEA120 LDP X26, X25, [X31 + 0x20]
	0x03DEA124 LDR X30, [X31 + 0x10]
	0x03DEA128 AND W0, W0, 0x1
	0x03DEA12C ADD X31, X31, 0x60
	0x03DEA130 RET
	0x03DEA134 BL 0x1C16F20
	0x03DEA138 SUB X31, X31, 0x120
	0x03DEA13C STP X29, X30, [X31 + 0xD0]
	0x03DEA140 STP X26, X25, [X31 + 0xE0]
	0x03DEA144 STP X24, X23, [X31 + 0xF0]
	0x03DEA148 STP X22, X21, [X31 + 0x100]
	0x03DEA14C STP X20, X19, [X31 + 0x110]
	0x03DEA150 ADRP X24, 0x5FE000
	0x03DEA154 LDRB W8, [X24 + 0x223]
	0x03DEA158 MOV X19, X6
	0x03DEA15C MOV W20, W5
	0x03DEA160 MOV W21, W4
	0x03DEA164 MOV X25, X3
	0x03DEA168 MOV X26, X2
	0x03DEA16C MOV W22, W1
	0x03DEA170 MOV X23, X0
	0x03DEA174 TBNZ X8, 0x0, 0x3DEA18C
	0x03DEA178 ADRP X0, 0x37A000
	0x03DEA17C LDR X0, [X0 + 0x1A8]
	0x03DEA180 BL 0x1C16CF4
	0x03DEA184 MOVZ W8, 0x1
	0x03DEA188 STRB W8, [X24 + 0x223]
	0x03DEA18C LDR X0, [X23 + 0x3A0]
	0x03DEA190 CBZ X0, 0x3DEA1AC
	0x03DEA194 LDR X8, [X0]
	0x03DEA198 LDR X9, [X8 + 0x3D8]
	0x03DEA19C LDR X1, [X8 + 0x3E0]
	0x03DEA1A0 BLR X9
	0x03DEA1A4 MOV X24, X0
	0x03DEA1A8 B 0x3DEA1B0
	0x03DEA1AC MOV X24, X31
	0x03DEA1B0 LDUR V0, [X26 + 0xC]
	0x03DEA1B4 LDR V1, [X26]
	0x03DEA1B8 STUR V0, [X31 + 0x7C]
	0x03DEA1BC STR V1, [X31 + 0x7]
	0x03DEA1C0 LDUR V0, [X25 + 0xC]
	0x03DEA1C4 LDR V1, [X25]
	0x03DEA1C8 STUR V0, [X31 + 0x5C]
	0x03DEA1CC STR V1, [X31 + 0x5]
	0x03DEA1D0 CBZ X24, 0x3DEA2C0
	0x03DEA1D4 LDR V0, [X31 + 0x7]
	0x03DEA1D8 LDUR V1, [X31 + 0x7C]
	0x03DEA1DC LDR V2, [X31 + 0x5]
	0x03DEA1E0 LDUR V3, [X31 + 0x5C]
	0x03DEA1E4 STR V0, [X31 + 0x3]
	0x03DEA1E8 STUR V1, [X31 + 0x3C]
	0x03DEA1EC STR V2, [X31 + 0x1]
	0x03DEA1F0 STUR V3, [X31 + 0x1C]
	0x03DEA1F4 ADRP X10, 0x37A000
	0x03DEA1F8 LDR X8, [X24]
	0x03DEA1FC LDR X10, [X10 + 0x1A8]
	0x03DEA200 ADD X25, X31, 0x90
	0x03DEA204 LDRH W9, [X8 + 0x12E]
	0x03DEA208 LDR X1, [X10]
	0x03DEA20C CBZ X9, 0x3DEA230
	0x03DEA210 LDR X10, [X8 + 0xB0]
	0x03DEA214 ADD X10, X10, 0x8
	0x03DEA218 LDUR X11, [X10 - 0x8]
	0x03DEA21C CMP X11, X1
	0x03DEA220 B.EQ 0x3DEA240
	0x03DEA224 SUBS X9, X9, 0x1
	0x03DEA228 ADD X10, X10, 0x10
	0x03DEA22C B.NE 0x3DEA218
	0x03DEA230 MOVZ W2, 0x7
	0x03DEA234 MOV X0, X24
	0x03DEA238 BL 0x1C5C788
	0x03DEA23C B 0x3DEA250
	0x03DEA240 LDR W9, [X10]
	0x03DEA244 ADD W9, W9, 0x7
	0x03DEA248 ADD X8, X8, W9, 0x4, SXTW
	0x03DEA24C ADD X0, X8, 0x138
	0x03DEA250 LDR V0, [X31 + 0x3]
	0x03DEA254 LDUR V1, [X31 + 0x3C]
	0x03DEA258 LDR V2, [X31 + 0x1]
	0x03DEA25C LDUR V3, [X31 + 0x1C]
	0x03DEA260 LDR X8, [X0]
	0x03DEA264 STR V0, [X31 + 0xB]
	0x03DEA268 STUR V1, [X25 + 0x2C]
	0x03DEA26C STR V2, [X31 + 0x9]
	0x03DEA270 STUR V3, [X25 + 0xC]
	0x03DEA274 LDR X9, [X0 + 0x8]
	0x03DEA278 ADD X3, X31, 0xB0
	0x03DEA27C ADD X4, X31, 0x90
	0x03DEA280 MOV X0, X24
	0x03DEA284 MOV X1, X23
	0x03DEA288 MOV W2, W22
	0x03DEA28C MOV W5, W21
	0x03DEA290 MOV W6, W20
	0x03DEA294 MOV X7, X19
	0x03DEA298 STR X9, [X31]
	0x03DEA29C BLR X8
	0x03DEA2A0 LDP X20, X19, [X31 + 0x110]
	0x03DEA2A4 LDP X22, X21, [X31 + 0x100]
	0x03DEA2A8 LDP X24, X23, [X31 + 0xF0]
	0x03DEA2AC LDP X26, X25, [X31 + 0xE0]
	0x03DEA2B0 LDP X29, X30, [X31 + 0xD0]
	0x03DEA2B4 AND W0, W0, 0x1
	0x03DEA2B8 ADD X31, X31, 0x120
	0x03DEA2BC RET
	0x03DEA2C0 BL 0x1C16F20
	0x03DEA2C4 SUB X31, X31, 0x80
	0x03DEA2C8 STR X30, [X31 + 0x20]
	0x03DEA2CC STP X28, X27, [X31 + 0x30]
	0x03DEA2D0 STP X26, X25, [X31 + 0x40]
	0x03DEA2D4 STP X24, X23, [X31 + 0x50]
	0x03DEA2D8 STP X22, X21, [X31 + 0x60]
	0x03DEA2DC STP X20, X19, [X31 + 0x70]
	0x03DEA2E0 ADRP X27, 0x5FE000
	0x03DEA2E4 LDRB W8, [X27 + 0x224]
	0x03DEA2E8 MOV W23, W7
	0x03DEA2EC MOV W19, W6
	0x03DEA2F0 MOV X20, X5
	0x03DEA2F4 MOV X21, X4
	0x03DEA2F8 MOV X22, X3
	0x03DEA2FC MOV X24, X2
	0x03DEA300 MOV W25, W1
	0x03DEA304 MOV X26, X0
	0x03DEA308 TBNZ X8, 0x0, 0x3DEA320
	0x03DEA30C ADRP X0, 0x37A000
	0x03DEA310 LDR X0, [X0 + 0x1A8]
	0x03DEA314 BL 0x1C16CF4
	0x03DEA318 MOVZ W8, 0x1
	0x03DEA31C STRB W8, [X27 + 0x224]
	0x03DEA320 LDR X0, [X26 + 0x3A0]
	0x03DEA324 CBZ X0, 0x3DEA3F0
	0x03DEA328 LDR X8, [X0]
	0x03DEA32C LDR X9, [X8 + 0x3D8]
	0x03DEA330 LDR X1, [X8 + 0x3E0]
	0x03DEA334 BLR X9
	0x03DEA338 CBZ X0, 0x3DEA3F0
	0x03DEA33C ADRP X10, 0x37A000
	0x03DEA340 LDR X8, [X0]
	0x03DEA344 LDR X10, [X10 + 0x1A8]
	0x03DEA348 LDR X28, [X31 + 0x80]
	0x03DEA34C MOV X27, X0
	0x03DEA350 LDRH W9, [X8 + 0x12E]
	0x03DEA354 LDR X1, [X10]
	0x03DEA358 CBZ X9, 0x3DEA37C
	0x03DEA35C LDR X10, [X8 + 0xB0]
	0x03DEA360 ADD X10, X10, 0x8
	0x03DEA364 LDUR X11, [X10 - 0x8]
	0x03DEA368 CMP X11, X1
	0x03DEA36C B.EQ 0x3DEA38C
	0x03DEA370 SUBS X9, X9, 0x1
	0x03DEA374 ADD X10, X10, 0x10
	0x03DEA378 B.NE 0x3DEA364
	0x03DEA37C MOVZ W2, 0x8
	0x03DEA380 MOV X0, X27
	0x03DEA384 BL 0x1C5C788
	0x03DEA388 B 0x3DEA39C
	0x03DEA38C LDR W9, [X10]
	0x03DEA390 ADD W9, W9, 0x8
	0x03DEA394 ADD X8, X8, W9, 0x4, SXTW
	0x03DEA398 ADD X0, X8, 0x138
	0x03DEA39C LDP X8, X9, [X0]
	0x03DEA3A0 MOV X0, X27
	0x03DEA3A4 MOV X1, X26
	0x03DEA3A8 MOV W2, W25
	0x03DEA3AC MOV X3, X24
	0x03DEA3B0 MOV X4, X22
	0x03DEA3B4 MOV X5, X21
	0x03DEA3B8 MOV X6, X20
	0x03DEA3BC MOV W7, W19
	0x03DEA3C0 STP X28, X9, [X31 + 0x8]
	0x03DEA3C4 STR W23, [X31]
	0x03DEA3C8 BLR X8
	0x03DEA3CC LDP X20, X19, [X31 + 0x70]
	0x03DEA3D0 LDP X22, X21, [X31 + 0x60]
	0x03DEA3D4 LDP X24, X23, [X31 + 0x50]
	0x03DEA3D8 LDP X26, X25, [X31 + 0x40]
	0x03DEA3DC LDP X28, X27, [X31 + 0x30]
	0x03DEA3E0 LDR X30, [X31 + 0x20]
	0x03DEA3E4 AND W0, W0, 0x1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], D9
	003 Move [X31+40], D8
	004 Move [X31+48], X30
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0x5FF000
	008 Move W8, [X20+642]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x333000
	015 Move X0, [X0+288]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+642], W8
	019 Add X0, X19, 704
	020 Add X8, X31, 0
	021 Move X1, X31
	022 Move [X31+56], X31
	023 Move [X31+24], X31
	024 Call ComputedStyle.get_transformOrigin, X0
	025 Move X8, [X31]
	026 Move X20, [X31+8]
	027 Move V8, [X31+16]
	028 Add X0, X31, 56
	029 Move X1, X31
	030 Move [X31+56], X8
	031 Call Length.IsNone, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {54}
	036 Compare X19, 0
	037 JumpIfEqual {199}
	038 Move X10, 0x333000
	039 Move X8, [X19]
	040 Move X10, [X10+288]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 44
	052 Move X0, X19
	053 Call 0x1C5D788
	054 Move W8, [X31+60]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Compare X19, 0
	057 JumpIfEqual {199}
	058 Move X10, 0x333000
	059 Move X8, [X19]
	060 Move X10, [X10+288]
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X1, [X10]
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move W2, 44
	072 Move X0, X19
	073 Call 0x1C5D788
	074 Move V9, [X31+56]
	075 Move W9, [X10]
	076 Add W9, W9, 44
	077 Add X8, X8, W9
	078 Add X0, X8, 312
	079 Move X8, [X0]
	080 Move X1, [X0+8]
	081 Move X0, X19
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move W9, S0
	084 Move S1, 0.5
	085 Move W8, 0x7F800000
	086 And W9, W9, 0x7FFFFFFF
	087 Multiply S1, S0, S1
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move S0, W31
	090 NotImplemented "Instruction FCSEL not yet implemented."
	091 Add X0, X31, 24
	092 Move X1, X31
	093 Move [X31+24], X20
	094 Call Length.IsNone, X0
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {117}
	099 Compare X19, 0
	100 JumpIfEqual {199}
	101 Move X10, 0x333000
	102 Move X8, [X19]
	103 Move X10, [X10+288]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Move X1, [X10]
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move W2, 19
	115 Move X0, X19
	116 Call 0x1C5D788
	117 Move W8, [X31+28]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Compare X19, 0
	120 JumpIfEqual {199}
	121 Move X10, 0x333000
	122 Move X8, [X19]
	123 Move X10, [X10+288]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Move X1, [X10]
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move W2, 19
	135 Move X0, X19
	136 Call 0x1C5D788
	137 Move V1, [X31+24]
	138 Move W9, [X10]
	139 Add W9, W9, 19
	140 Add X8, X8, W9
	141 Add X0, X8, 312
	142 Move X8, [X0]
	143 Move X1, [X0+8]
	144 Move X0, X19
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move W9, S0
	147 Move S1, 0.5
	148 Move W8, 0x7F800000
	149 And W9, W9, 0x7FFFFFFF
	150 Multiply S1, S0, S1
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move S0, W31
	153 NotImplemented "Instruction FCSEL not yet implemented."
	154 Move W9, [X10]
	155 Add W9, W9, 44
	156 Add X8, X8, W9
	157 Add X0, X8, 312
	158 Move X8, [X0]
	159 Move X1, [X0+8]
	160 Move X0, X19
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move W8, S0
	163 And W8, W8, 0x7FFFFFFF
	164 Move W9, 0x7F800000
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move S9, W31
	167 Move V1, [X31+56]
	168 Move W8, 0x42C80000
	169 Multiply S0, S0, S1
	170 Move S1, W8
	171 NotImplemented "Instruction FDIV not yet implemented."
	172 Move W9, [X10]
	173 Add W9, W9, 19
	174 Add X8, X8, W9
	175 Add X0, X8, 312
	176 Move X8, [X0]
	177 Move X1, [X0+8]
	178 Move X0, X19
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Move W8, S0
	181 And W8, W8, 0x7FFFFFFF
	182 Move W9, 0x7F800000
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move S1, W31
	185 Move V1, [X31+24]
	186 Move W8, 0x42C80000
	187 Multiply S0, S0, S1
	188 Move S1, W8
	189 NotImplemented "Instruction FDIV not yet implemented."
	190 Move V0, V9
	191 Move V2, V8
	192 Move X20, [X31+64]
	193 Move X19, [X31+72]
	194 Move X30, [X31+48]
	195 Move D9, [X31+32]
	196 Move D8, [X31+40]
	197 Add X31, X31, 80
	198 Return X0
	199 Call 0x1C17F20

Method: UnityEngine.Quaternion ResolveRotation()

Disassembly:
	0x03DF7EE0 ADD X0, X31, 0x8
	0x03DF7EE4 MOV X2, X31
	0x03DF7EE8 LDR X8, [X8 + 0xB8]
	0x03DF7EEC STR X19, [X8 + 0x8]
	0x03DF7EF0 LDR X1, [X22]
	0x03DF7EF4 STR W31, [X31 + 0x8]
	0x03DF7EF8 BL 0x3C30654
	0x03DF7EFC LDR X8, [X20]
	0x03DF7F00 LDR W9, [X31 + 0x8]
	0x03DF7F04 ADRP X10, 0xFFFFFFFFFCCF5000
	0x03DF7F08 LDR V0, [X10 + 0xAA]
	0x03DF7F0C LDR X8, [X8 + 0xB8]
	0x03DF7F10 MOVZ W1, 0x1
	0x03DF7F14 MOV W2, W31
	0x03DF7F18 MOV W3, W31
	0x03DF7F1C STR W9, [X8 + 0x10]
	0x03DF7F20 LDR X9, [X21]
	0x03DF7F24 STR V0, [X8 + 0x2]
	0x03DF7F28 MOV X4, X31
	0x03DF7F2C STR X9, [X8 + 0x18]
	0x03DF7F30 LDR X0, [X29]
	0x03DF7F34 BL 0x3BFE7FC
	0x03DF7F38 LDR X8, [X20]
	0x03DF7F3C LDR X8, [X8 + 0xB8]
	0x03DF7F40 STR X0, [X8 + 0x30]
	0x03DF7F44 LDR X0, [X28]
	0x03DF7F48 BL 0x1C16F10
	0x03DF7F4C LDR X1, [X27]
	0x03DF7F50 MOV X19, X0
	0x03DF7F54 BL 0x301B7C4
	0x03DF7F58 LDR X8, [X20]
	0x03DF7F5C LDR X8, [X8 + 0xB8]
	0x03DF7F60 STR X19, [X8 + 0x48]
	0x03DF7F64 LDR X0, [X26]
	0x03DF7F68 BL 0x1C16F10
	0x03DF7F6C MOV X1, X31
	0x03DF7F70 MOV X19, X0
	0x03DF7F74 BL 0x3DFA8E0
	0x03DF7F78 LDR X8, [X20]
	0x03DF7F7C LDR X8, [X8 + 0xB8]
	0x03DF7F80 STR X19, [X8 + 0x50]
	0x03DF7F84 LDR X0, [X25]
	0x03DF7F88 BL 0x1C16F10
	0x03DF7F8C ADRP X8, 0x372000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Add X0, X0, 704
	004 Add X8, X31, 8
	005 Move X1, X31
	006 Move [X31+32], X31
	007 Move [X31+40], X31
	008 Move [X31+48], X31
	009 Call ComputedStyle.get_rotate, X0
	010 Move X8, [X31+24]
	011 NotImplemented "Instruction LDUR not yet implemented."
	012 Move [X31+48], X8
	013 And W9, W8, 0x7FFFFFFF
	014 Move W8, 0x7F800000
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move [X31+2], V0
	017 Move W9, [X31+44]
	018 And W9, W9, 0x7FFFFFFF
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W8, [X31+40]
	021 Move W9, 0x7F800000
	022 And W8, W8, 0x7FFFFFFF
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W8, [X31+32]
	025 Move W9, 1
	026 NotImplemented "Instruction MOVK not yet implemented."
	027 And W8, W8, 0x7FFFFFFF
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Add X8, X31, 8
	030 Move X0, X31
	031 Call Rotate.Initial
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 Move X8, [X31+24]
	034 Move [X31+2], V0
	035 Move [X31+48], X8
	036 Add X0, X31, 32
	037 Move X1, X31
	038 Call Rotate.ToQuaternion, X0
	039 Move X30, [X31+64]
	040 Add X31, X31, 80
	041 Return X0

Method: UnityEngine.Vector3 ResolveScale()

Disassembly:
	0x03DF7F90 LDR X8, [X8 + 0xAE0]
	0x03DF7F94 MOVZ W2, 0x8
	0x03DF7F98 MOV X3, X31
	0x03DF7F9C MOV X19, X0
	0x03DF7FA0 LDR X1, [X8]
	0x03DF7FA4 BL 0x3633518
	0x03DF7FA8 LDR X8, [X20]
	0x03DF7FAC ADD X0, X31, 0x0
	0x03DF7FB0 MOV X2, X31
	0x03DF7FB4 LDR X8, [X8 + 0xB8]
	0x03DF7FB8 STR X19, [X8 + 0x58]
	0x03DF7FBC ADRP X8, 0x372000
	0x03DF7FC0 LDR X8, [X8 + 0xAD8]
	0x03DF7FC4 STR W31, [X31]
	0x03DF7FC8 LDR X1, [X8]
	0x03DF7FCC BL 0x3C30654
	0x03DF7FD0 LDR X8, [X20]
	0x03DF7FD4 LDR W9, [X31]
	0x03DF7FD8 LDR X8, [X8 + 0xB8]
	0x03DF7FDC STR W9, [X8 + 0x60]
	0x03DF7FE0 ADRP X8, 0x372000
	0x03DF7FE4 LDR X8, [X8 + 0xAD0]
	0x03DF7FE8 LDR X0, [X8]
	0x03DF7FEC BL 0x1C16F10
	0x03DF7FF0 ADRP X8, 0x372000
	0x03DF7FF4 LDR X8, [X8 + 0xAC8]
	0x03DF7FF8 MOV X19, X0
	0x03DF7FFC LDR X1, [X8]
	0x03DF8000 BL 0x2AA4804
	0x03DF8004 LDR X8, [X20]
	0x03DF8008 LDP X22, X21, [X31 + 0x50]
	0x03DF800C LDP X24, X23, [X31 + 0x40]
	0x03DF8010 LDP X26, X25, [X31 + 0x30]
	0x03DF8014 LDR X8, [X8 + 0xB8]
	0x03DF8018 LDP X28, X27, [X31 + 0x20]
	0x03DF801C LDP X29, X30, [X31 + 0x10]
	0x03DF8020 STR X19, [X8 + 0x68]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Add X0, X0, 704
	004 Move X1, X31
	005 Call ComputedStyle.get_scale, X0
	006 And W9, W0, 0x7FFFFFFF
	007 Move W8, 0x7F800000
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X9, X0
	010 ShiftRight X9, 32
	011 And X9, X9, 0x3FFFFFFF
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W9, 1
	014 And W8, W1, 0x7FFFFFFF
	015 NotImplemented "Instruction MOVK not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X19, 0x5E2000
	018 Move W8, [X19+2139]
	019 Compare W8, 0
	020 JumpIfNotEqual {26}
	021 Move X0, 0x2FD000
	022 Move X0, [X0+1440]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+2139], W8
	026 Move X8, 0x2FD000
	027 Move X8, [X8+1440]
	028 Move X8, [X8]
	029 Move X8, [X8+184]
	030 Move S0, [X8+12]
	031 Move S1, [X8+16]
	032 Move V2, [X8+20]
	033 Move X8, X0
	034 ShiftRight X8, 32
	035 And X8, X8, 0x7FFFFFFF
	036 Move S2, W1
	037 Move S1, W8
	038 Move S0, W0
	039 Move X30, [X31+16]
	040 Move X19, [X31+24]
	041 Return X0

Method: System.String get_tooltip()

Disassembly:
	0x03DF149C STR W8, [X19 + 0x50]
	0x03DF14A0 CBZ X0, 0x3DF14BC
	0x03DF14A4 LDR X8, [X0]
	0x03DF14A8 MOVZ W2, 0x218
	0x03DF14AC MOV X1, X19
	0x03DF14B0 LDR X9, [X8 + 0x338]
	0x03DF14B4 LDR X3, [X8 + 0x340]
	0x03DF14B8 BLR X9
	0x03DF14BC LDR X0, [X19 + 0x58]
	0x03DF14C0 MOV X1, X31
	0x03DF14C4 BL 0x32277A8
	0x03DF14C8 TBNZ X0, 0x0, 0x3DF14F8
	0x03DF14CC LDR X0, [X19 + 0x3A0]
	0x03DF14D0 CBZ X0, 0x3DF14F8
	0x03DF14D4 LDR X8, [X0]
	0x03DF14D8 MOV X1, X19
	0x03DF14DC LDP X20, X19, [X31 + 0x20]
	0x03DF14E0 LDP X22, X21, [X31 + 0x10]
	0x03DF14E4 LDR X4, [X8 + 0x338]
	0x03DF14E8 LDR X3, [X8 + 0x340]
	0x03DF14EC MOVZ W2, 0x2
	0x03DF14F0 LDR X30, [X31], #0x30
	0x03DF14F4 BR X4
	0x03DF14F8 LDP X20, X19, [X31 + 0x20]
	0x03DF14FC LDP X22, X21, [X31 + 0x10]
	0x03DF1500 LDR X30, [X31], #0x30
	0x03DF1504 RET
	0x03DF1508 BL 0x1C16F20
	0x03DF150C BL 0x1C16F20
	0x03DF1510 MOV X0, X21
	0x03DF1514 BL 0x1C16F18
	0x03DF1518 B 0x3DF151C
	0x03DF151C MOV X22, X0
	0x03DF1520 CMP W1, 0x1
	0x03DF1524 B.NE 0x3DF1544
	0x03DF1528 MOV X0, X22
	0x03DF152C BL 0x3EB1AD0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5F8000
	006 Move X20, 0x32B000
	007 Move W8, [X21+643]
	008 Move X20, [X20+2200]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x305000
	015 Move X0, [X0+632]
	016 Call 0x1C17CF4
	017 Move X0, 0x32B000
	018 Move X0, [X0+2200]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+643], W8
	022 Move X0, [X20]
	023 Move X21, 0x305000
	024 Move W8, [X0+224]
	025 Move X21, [X21+632]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Move X8, [X0+184]
	031 Move X0, X19
	032 Move W1, [X8+96]
	033 Call VisualElement.GetProperty, X0, X1
	034 Move X8, [X21]
	035 Compare X0, 0
	036 JumpIfEqual {39}
	037 Move X9, [X0]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, [X8+184]
	040 Move X0, [X8]
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0

Method: System.Void set_tooltip(System.String value)

Disassembly:
	0x03DF8B68 BL 0x3DF1EA0
	0x03DF8B6C LDR W8, [X20 + 0x330]
	0x03DF8B70 CBNZ W8, 0x3DF8B8C
	0x03DF8B74 LDR X8, [X19]
	0x03DF8B78 CBZ X8, 0x3DF8BD0
	0x03DF8B7C LDR W1, [X8 + 0x334]
	0x03DF8B80 MOV X0, X20
	0x03DF8B84 MOV X2, X31
	0x03DF8B88 BL 0x3DF1F60
	0x03DF8B8C MOV X0, X20
	0x03DF8B90 MOV W1, W31
	0x03DF8B94 MOV X2, X31
	0x03DF8B98 BL 0x3DF1754
	0x03DF8B9C MOVZ W1, 0x4
	0x03DF8BA0 MOV X0, X20
	0x03DF8BA4 MOV X2, X31
	0x03DF8BA8 BL 0x3DE5048
	0x03DF8BAC LDR X0, [X19]
	0x03DF8BB0 CBZ X0, 0x3DF8BD0
	0x03DF8BB4 LDP X20, X19, [X31 + 0x30]
	0x03DF8BB8 LDP X22, X21, [X31 + 0x20]
	0x03DF8BBC LDP X30, X23, [X31 + 0x10]
	0x03DF8BC0 MOVZ W1, 0x4
	0x03DF8BC4 MOV X2, X31
	0x03DF8BC8 ADD X31, X31, 0x40
	0x03DF8BCC B 0x3DE5048
	0x03DF8BD0 BL 0x1C16F20
	0x03DF8BD4 ADRP X0, 0x303000
	0x03DF8BD8 LDR X0, [X0 + 0x578]
	0x03DF8BDC BL 0x1C16D08
	0x03DF8BE0 BL 0x1C16F10
	0x03DF8BE4 MOV X19, X0
	0x03DF8BE8 ADRP X0, 0x371000
	0x03DF8BEC LDR X0, [X0 + 0xB90]
	0x03DF8BF0 B 0x3DF8C74
	0x03DF8BF4 ADD X0, X31, 0xC
	0x03DF8BF8 MOV X1, X31
	0x03DF8BFC BL 0x337B6E0
	0x03DF8C00 MOV X19, X0
	0x03DF8C04 ADRP X0, 0x371000
	0x03DF8C08 LDR X0, [X0 + 0xB98]
	0x03DF8C0C BL 0x1C16D08
	0x03DF8C10 MOV X1, X19
	0x03DF8C14 MOV X2, X31
	0x03DF8C18 BL 0x321B938
	0x03DF8C1C MOV X19, X0
	0x03DF8C20 ADRP X0, 0x303000
	0x03DF8C24 LDR X0, [X0 + 0x760]
	0x03DF8C28 BL 0x1C16D08
	0x03DF8C2C BL 0x1C16F10
	0x03DF8C30 MOV X1, X19
	0x03DF8C34 MOV X2, X31
	0x03DF8C38 MOV X20, X0
	0x03DF8C3C BL 0x3316014
	0x03DF8C40 ADRP X0, 0x371000
	0x03DF8C44 LDR X0, [X0 + 0xBA0]
	0x03DF8C48 BL 0x1C16D08
	0x03DF8C4C MOV X1, X0
	0x03DF8C50 MOV X0, X20
	0x03DF8C54 BL 0x1C16DEC
	0x03DF8C58 ADRP X0, 0x303000
	0x03DF8C5C LDR X0, [X0 + 0x578]
	0x03DF8C60 BL 0x1C16D08
	0x03DF8C64 BL 0x1C16F10
	0x03DF8C68 MOV X19, X0
	0x03DF8C6C ADRP X0, 0x371000
	0x03DF8C70 LDR X0, [X0 + 0xBA8]
	0x03DF8C74 BL 0x1C16D08
	0x03DF8C78 MOV X1, X0
	0x03DF8C7C MOV X0, X19
	0x03DF8C80 MOV X2, X31
	0x03DF8C84 BL 0x3314A68
	0x03DF8C88 B 0x3DF8CBC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5F1000
	007 Move X22, 0x324000
	008 Move W8, [X21+644]
	009 Move X22, [X22+2200]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x372000
	017 Move X0, [X0+2704]
	018 Call 0x1C17CF4
	019 Move X0, 0x372000
	020 Move X0, [X0+2712]
	021 Call 0x1C17CF4
	022 Move X0, 0x372000
	023 Move X0, [X0+2720]
	024 Call 0x1C17CF4
	025 Move X0, 0x324000
	026 Move X0, [X0+2200]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+644], W8
	030 Move X0, [X22]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X22]
	036 Move X8, [X0+184]
	037 Move X0, X20
	038 Move W1, [X8+96]
	039 Call VisualElement.HasProperty, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {75}
	044 Move X0, X19
	045 Move X1, X31
	046 Call String.IsNullOrEmpty, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {57}
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return 
	057 Move X8, 0x372000
	058 Move X8, [X8+2712]
	059 Move X0, [X8]
	060 Call 0x1C17F10
	061 Move X8, 0x372000
	062 Move X8, [X8+2720]
	063 Move X1, X20
	064 Move X3, X31
	065 Move X21, X0
	066 Move X2, [X8]
	067 Call 0x2D0F824, X0, X1, X2
	068 Move X8, 0x372000
	069 Move X8, [X8+2704]
	070 Move X0, X20
	071 Move X1, X21
	072 Move W2, W31
	073 Move X3, [X8]
	074 Call 0x21A2534, X0, X1, X2
	075 Move X0, [X22]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Call 0x1C17DFC
	080 Move X0, [X22]
	081 Move X8, [X0+184]
	082 Move X0, X20
	083 Move X2, X19
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move W1, [X8+96]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X30, [X31+48]
	090 Call VisualElement.SetProperty, X0, X1, X2
	091 Return 

Method: UnityEngine.UIElements.VisualElement/TypeData GetOrCreateTypeData(System.Type t)

Disassembly:
	0x03DF8C8C ADRP X0, 0x2FB000
	0x03DF8C90 LDR X0, [X0 + 0x5B0]
	0x03DF8C94 BL 0x1C16D08
	0x03DF8C98 BL 0x1C16F10
	0x03DF8C9C MOV X19, X0
	0x03DF8CA0 ADRP X0, 0x371000
	0x03DF8CA4 LDR X0, [X0 + 0xBB0]
	0x03DF8CA8 BL 0x1C16D08
	0x03DF8CAC MOV X1, X0
	0x03DF8CB0 MOV X0, X19
	0x03DF8CB4 MOV X2, X31
	0x03DF8CB8 BL 0x337DF1C
	0x03DF8CBC ADRP X0, 0x371000
	0x03DF8CC0 LDR X0, [X0 + 0xBA0]
	0x03DF8CC4 BL 0x1C16D08
	0x03DF8CC8 MOV X1, X0
	0x03DF8CCC MOV X0, X19
	0x03DF8CD0 BL 0x1C16DEC
	0x03DF8CD4 STR X30, [X31 - 0x30]!
	0x03DF8CD8 STP X22, X21, [X31 + 0x10]
	0x03DF8CDC STP X20, X19, [X31 + 0x20]
	0x03DF8CE0 ADRP X22, 0x5F0000
	0x03DF8CE4 LDRB W8, [X22 + 0x296]
	0x03DF8CE8 MOV W21, W2
	0x03DF8CEC MOV X19, X1
	0x03DF8CF0 MOV X20, X0
	0x03DF8CF4 TBNZ X8, 0x0, 0x3DF8D18
	0x03DF8CF8 ADRP X0, 0x324000
	0x03DF8CFC LDR X0, [X0 + 0xE0]
	0x03DF8D00 BL 0x1C16CF4
	0x03DF8D04 ADRP X0, 0x371000
	0x03DF8D08 LDR X0, [X0 + 0xBB8]
	0x03DF8D0C BL 0x1C16CF4
	0x03DF8D10 MOVZ W8, 0x1
	0x03DF8D14 STRB W8, [X22 + 0x296]
	0x03DF8D18 MOV X0, X20
	0x03DF8D1C BL 0x3DF8994
	0x03DF8D20 LDR X9, [X20]
	0x03DF8D24 CBZ X9, 0x3DF8E0C
	0x03DF8D28 MOV W8, W0
	0x03DF8D2C LDR X0, [X9 + 0x398]
	0x03DF8D30 CBZ X0, 0x3DF8E0C
	0x03DF8D34 CMP W8, W21
	0x03DF8D38 B.LE 0x3DF8D74
	0x03DF8D3C ADRP X8, 0x371000
	0x03DF8D40 LDR X8, [X8 + 0xBB8]
	0x03DF8D44 MOV W1, W21
	0x03DF8D48 MOV X2, X19
	0x03DF8D4C LDR X3, [X8]
	0x03DF8D50 BL 0x301CEEC
	0x03DF8D54 LDR X8, [X20]
	0x03DF8D58 CBZ X8, 0x3DF8E0C
	0x03DF8D5C CBZ X19, 0x3DF8E0C
	0x03DF8D60 LDR X0, [X8 + 0x2B8]
	0x03DF8D64 CBZ X0, 0x3DF8E0C
	0x03DF8D68 LDR X2, [X19 + 0x2B8]
	0x03DF8D6C MOV W1, W21
	0x03DF8D70 B 0x3DF8DF8
	0x03DF8D74 ADRP X9, 0x324000
	0x03DF8D78 LDR X9, [X9 + 0xE0]
	0x03DF8D7C LDR W10, [X0 + 0x1C]
	0x03DF8D80 LDR X8, [X0 + 0x10]
	0x03DF8D84 LDR X9, [X9]
	0x03DF8D88 ADD W10, W10, 0x1
	0x03DF8D8C STR W10, [X0 + 0x1C]
	0x03DF8D90 CBZ X8, 0x3DF8E0C
	0x03DF8D94 LDRSW X10, [X0 + 0x18]
	0x03DF8D98 LDR W11, [X8 + 0x18]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5F1000
	007 Move X21, 0x324000
	008 Move W8, [X20+645]
	009 Move X21, [X21+2200]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x372000
	016 Move X0, [X0+2328]
	017 Call 0x1C17CF4
	018 Move X0, 0x372000
	019 Move X0, [X0+2336]
	020 Call 0x1C17CF4
	021 Move X0, 0x372000
	022 Move X0, [X0+2344]
	023 Call 0x1C17CF4
	024 Move X0, 0x324000
	025 Move X0, [X0+2200]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+645], W8
	029 Move X0, [X21]
	030 Move [X31+8], X31
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X21]
	036 Move X8, [X0+184]
	037 Move X0, [X8+104]
	038 Compare X0, 0
	039 JumpIfEqual {82}
	040 Move X8, 0x372000
	041 Move X8, [X8+2336]
	042 Add X2, X31, 8
	043 Move X1, X19
	044 Move X3, [X8]
	045 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {75}
	050 Move X8, 0x372000
	051 Move X8, [X8+2344]
	052 Move X0, [X8]
	053 Call 0x1C17F10
	054 Move X1, X19
	055 Move X2, X31
	056 Move X20, X0
	057 Call TypeData..ctor, X0, X1
	058 Move X0, [X21]
	059 Move [X31+8], X20
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X21]
	065 Move X8, [X0+184]
	066 Move X0, [X8+104]
	067 Compare X0, 0
	068 JumpIfEqual {82}
	069 Move X8, 0x372000
	070 Move X2, [X31+8]
	071 Move X8, [X8+2328]
	072 Move X1, X19
	073 Move X3, [X8]
	074 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	075 Move X0, [X31+8]
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X30, [X31+16]
	079 Move X21, [X31+24]
	080 Add X31, X31, 48
	081 Return X0
	082 Call 0x1C17F20

Method: UnityEngine.UIElements.VisualElement/TypeData get_typeData()

Disassembly:
	0x03DF03A0 ADD X1, X31, 0x60
	0x03DF03A4 STR V0, [X31 + 0x6]
	0x03DF03A8 STR X8, [X31 + 0x70]
	0x03DF03AC LDR X2, [X0 + 0x8]
	0x03DF03B0 MOV X0, X20
	0x03DF03B4 B 0x3DF02AC
	0x03DF03B8 BL 0x1C16F20
	0x03DF03BC STR X30, [X31 - 0x20]!
	0x03DF03C0 STP X20, X19, [X31 + 0x10]
	0x03DF03C4 ADRP X20, 0x5F8000
	0x03DF03C8 LDRB W8, [X20 + 0x248]
	0x03DF03CC MOV X19, X1
	0x03DF03D0 TBNZ X8, 0x0, 0x3DF03E8
	0x03DF03D4 ADRP X0, 0x32B000
	0x03DF03D8 LDR X0, [X0 + 0x898]
	0x03DF03DC BL 0x1C16CF4
	0x03DF03E0 MOVZ W8, 0x1
	0x03DF03E4 STRB W8, [X20 + 0x248]
	0x03DF03E8 CBZ X19, 0x3DF0494
	0x03DF03EC LDR X8, [X19]
	0x03DF03F0 MOV X0, X19
	0x03DF03F4 LDP X9, X1, [X8 + 0x1D8]
	0x03DF03F8 BLR X9
	0x03DF03FC CBZ X0, 0x3DF044C
	0x03DF0400 ADRP X8, 0x32B000
	0x03DF0404 LDR X8, [X8 + 0x898]
	0x03DF0408 LDR X9, [X0]
	0x03DF040C MOV X20, X0
	0x03DF0410 LDR X8, [X8]
	0x03DF0414 LDRB W11, [X9 + 0x130]
	0x03DF0418 LDRB W10, [X8 + 0x130]
	0x03DF041C CMP W11, W10
	0x03DF0420 B.CC 0x3DF044C
	0x03DF0424 LDR X9, [X9 + 0xC8]
	0x03DF0428 ADD X9, X9, X10, 0x3, LSL
	0x03DF042C LDUR X9, [X9 - 0x8]
	0x03DF0430 CMP X9, X8
	0x03DF0434 B.NE 0x3DF044C
	0x03DF0438 MOV X0, X20
	0x03DF043C BL 0x3DF049C
	0x03DF0440 MOV X1, X31
	0x03DF0444 BL 0x32277A8
	0x03DF0448 TBZ X0, 0x0, 0x3DF0458
	0x03DF044C LDP X20, X19, [X31 + 0x10]
	0x03DF0450 LDR X30, [X31], #0x20
	0x03DF0454 RET
	0x03DF0458 LDR X8, [X20]
	0x03DF045C MOV X0, X20
	0x03DF0460 LDR X9, [X8 + 0x728]
	0x03DF0464 LDR X1, [X8 + 0x730]
	0x03DF0468 BLR X9
	0x03DF046C MOV X0, X20
	0x03DF0470 STP S0, S1, [X19 + 0x90]
	0x03DF0474 STP S2, S3, [X19 + 0x98]
	0x03DF0478 BL 0x3DF049C
	0x03DF047C STR X0, [X19 + 0x88]
	0x03DF0480 MOV X0, X19
	0x03DF0484 LDP X20, X19, [X31 + 0x10]
	0x03DF0488 MOV X1, X31
	0x03DF048C LDR X30, [X31], #0x20
	0x03DF0490 B 0x3DA02EC
	0x03DF0494 BL 0x1C16F20
	0x03DF0498 B 0x3DEDC10
	0x03DF049C STP X30, X21, [X31 - 0x20]!
	0x03DF04A0 STP X20, X19, [X31 + 0x10]
	0x03DF04A4 ADRP X21, 0x5F8000
	0x03DF04A8 ADRP X20, 0x32B000
	0x03DF04AC LDRB W8, [X21 + 0x283]
	0x03DF04B0 LDR X20, [X20 + 0x898]
	0x03DF04B4 MOV X19, X0
	0x03DF04B8 TBNZ X8, 0x0, 0x3DF04DC
	0x03DF04BC ADRP X0, 0x305000
	0x03DF04C0 LDR X0, [X0 + 0x278]
	0x03DF04C4 BL 0x1C16CF4
	0x03DF04C8 ADRP X0, 0x32B000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x5F9000
	007 Move W8, [X19+646]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x37A000
	014 Move X0, [X0+2328]
	015 Call 0x1C17CF4
	016 Move X0, 0x37A000
	017 Move X0, [X0+2336]
	018 Call 0x1C17CF4
	019 Move X0, 0x37A000
	020 Move X0, [X0+2344]
	021 Call 0x1C17CF4
	022 Move X0, 0x32C000
	023 Move X0, [X0+2200]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+646], W8
	027 Move X8, [X20+960]
	028 Add X19, X20, 960
	029 Compare X8, 0
	030 JumpIfNotEqual {83}
	031 Move X0, X20
	032 Move X1, X31
	033 Call "il2cpp_vm_object_is_inst", X0
	034 Move X22, 0x32C000
	035 Move X22, [X22+2200]
	036 Move X20, X0
	037 Move X8, [X22]
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {44}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X8, [X22]
	044 Move X8, [X8+184]
	045 Move X0, [X8+104]
	046 Compare X0, 0
	047 JumpIfEqual {90}
	048 Move X8, 0x37A000
	049 Move X8, [X8+2336]
	050 Move X1, X20
	051 Move X2, X19
	052 Move X3, [X8]
	053 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {83}
	058 Move X8, 0x37A000
	059 Move X8, [X8+2344]
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 Move X1, X20
	063 Move X2, X31
	064 Move X21, X0
	065 Call TypeData..ctor, X0, X1
	066 Move [X19], X21
	067 Move X0, [X22]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X22]
	073 Move X8, [X0+184]
	074 Move X0, [X8+104]
	075 Compare X0, 0
	076 JumpIfEqual {90}
	077 Move X8, 0x37A000
	078 Move X2, [X19]
	079 Move X8, [X8+2328]
	080 Move X1, X20
	081 Move X3, [X8]
	082 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	083 Move X0, [X19]
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X30, [X31+48]
	089 Return X0
	090 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03DF8D9C CMP W10, W11
	0x03DF8DA0 B.CS 0x3DF8DB8
	0x03DF8DA4 ADD W9, W10, 0x1
	0x03DF8DA8 ADD X8, X8, X10, 0x3, LSL
	0x03DF8DAC STR W9, [X0 + 0x18]
	0x03DF8DB0 STR X19, [X8 + 0x20]
	0x03DF8DB4 B 0x3DF8DCC
	0x03DF8DB8 LDR X8, [X9 + 0x20]
	0x03DF8DBC MOV X1, X19
	0x03DF8DC0 LDR X8, [X8 + 0xC0]
	0x03DF8DC4 LDR X2, [X8 + 0x70]
	0x03DF8DC8 BL 0x301BF90
	0x03DF8DCC LDR X8, [X20]
	0x03DF8DD0 CBZ X8, 0x3DF8E0C
	0x03DF8DD4 LDR X20, [X8 + 0x2B8]
	0x03DF8DD8 CBZ X20, 0x3DF8E0C
	0x03DF8DDC MOV X0, X20
	0x03DF8DE0 MOV X1, X31
	0x03DF8DE4 BL 0x3CE7914
	0x03DF8DE8 CBZ X19, 0x3DF8E0C
	0x03DF8DEC LDR X2, [X19 + 0x2B8]
	0x03DF8DF0 MOV W1, W0
	0x03DF8DF4 MOV X0, X20
	0x03DF8DF8 LDP X20, X19, [X31 + 0x20]
	0x03DF8DFC LDP X22, X21, [X31 + 0x10]
	0x03DF8E00 MOV X3, X31
	0x03DF8E04 LDR X30, [X31], #0x30
	0x03DF8E08 B 0x3CE79A0
	0x03DF8E0C BL 0x1C16F20
	0x03DF8E10 STR X30, [X31 - 0x20]!
	0x03DF8E14 STP X20, X19, [X31 + 0x10]
	0x03DF8E18 MOV X20, X0
	0x03DF8E1C LDR X0, [X0]
	0x03DF8E20 CBZ X0, 0x3DF8E60
	0x03DF8E24 MOV X19, X1
	0x03DF8E28 STR X1, [X0 + 0x388]
	0x03DF8E2C STR X1, [X0 + 0x390]
	0x03DF8E30 MOV X1, X31
	0x03DF8E34 BL 0x3DF5C50
	0x03DF8E38 LDR X0, [X20]
	0x03DF8E3C CBZ X19, 0x3DF8E58
	0x03DF8E40 LDR X1, [X19 + 0x3A0]
	0x03DF8E44 CBZ X0, 0x3DF8E60
	0x03DF8E48 LDP X20, X19, [X31 + 0x10]
	0x03DF8E4C MOV X2, X31
	0x03DF8E50 LDR X30, [X31], #0x20
	0x03DF8E54 B 0x3DF05B4
	0x03DF8E58 MOV X1, X31
	0x03DF8E5C CBNZ X0, 0x3DF8E48
	0x03DF8E60 BL 0x1C16F20
	0x03DF8E64 STP X30, X21, [X31 - 0x20]!
	0x03DF8E68 STP X20, X19, [X31 + 0x10]
	0x03DF8E6C ADRP X21, 0x5F0000
	0x03DF8E70 LDRB W8, [X21 + 0x28D]
	0x03DF8E74 MOV X20, X1
	0x03DF8E78 MOV X19, X0
	0x03DF8E7C TBNZ X8, 0x0, 0x3DF8E94
	0x03DF8E80 ADRP X0, 0x371000
	0x03DF8E84 LDR X0, [X0 + 0xBC0]
	0x03DF8E88 BL 0x1C16CF4
	0x03DF8E8C MOVZ W8, 0x1
	0x03DF8E90 STRB W8, [X21 + 0x28D]
	0x03DF8E94 CBZ X20, 0x3DF8EE8
	0x03DF8E98 LDR X8, [X20 + 0x378]
	0x03DF8E9C CBZ X8, 0x3DF8EE4
	0x03DF8EA0 LDR X9, [X8 + 0x388]
	0x03DF8EA4 LDR X8, [X19]
	0x03DF8EA8 CMP X9, X8
	0x03DF8EAC B.NE 0x3DF8F08
	0x03DF8EB0 CBZ X8, 0x3DF8EE4
	0x03DF8EB4 LDR X0, [X8 + 0x398]
	0x03DF8EB8 CBZ X0, 0x3DF8EE4
	0x03DF8EBC ADRP X8, 0x371000
	0x03DF8EC0 LDR X8, [X8 + 0xBC0]
	0x03DF8EC4 MOV X1, X20
	0x03DF8EC8 LDR X2, [X8]
	0x03DF8ECC BL 0x301CD00
	0x03DF8ED0 MOV W1, W0
	0x03DF8ED4 MOV X0, X19
	0x03DF8ED8 LDP X20, X19, [X31 + 0x10]
	0x03DF8EDC LDP X30, X21, [X31], #0x20
	0x03DF8EE0 B 0x3DF8F50
	0x03DF8EE4 BL 0x1C16F20
	0x03DF8EE8 ADRP X0, 0x303000
	0x03DF8EEC LDR X0, [X0 + 0x578]
	0x03DF8EF0 BL 0x1C16D08
	0x03DF8EF4 BL 0x1C16F10
	0x03DF8EF8 MOV X19, X0
	0x03DF8EFC ADRP X0, 0x371000
	0x03DF8F00 LDR X0, [X0 + 0xBC8]
	0x03DF8F04 B 0x3DF8F24
	0x03DF8F08 ADRP X0, 0x303000
	0x03DF8F0C LDR X0, [X0 + 0x578]
	0x03DF8F10 BL 0x1C16D08
	0x03DF8F14 BL 0x1C16F10
	0x03DF8F18 MOV X19, X0
	0x03DF8F1C ADRP X0, 0x371000
	0x03DF8F20 LDR X0, [X0 + 0xBD0]
	0x03DF8F24 BL 0x1C16D08
	0x03DF8F28 MOV X1, X0
	0x03DF8F2C MOV X0, X19
	0x03DF8F30 MOV X2, X31
	0x03DF8F34 BL 0x3314A68
	0x03DF8F38 ADRP X0, 0x371000
	0x03DF8F3C LDR X0, [X0 + 0xBD8]
	0x03DF8F40 BL 0x1C16D08
	0x03DF8F44 MOV X1, X0
	0x03DF8F48 MOV X0, X19
	0x03DF8F4C BL 0x1C16DEC
	0x03DF8F50 SUB X31, X31, 0x30
	0x03DF8F54 STP X30, X21, [X31 + 0x10]
	0x03DF8F58 STP X20, X19, [X31 + 0x20]
	0x03DF8F5C ADRP X20, 0x5F0000
	0x03DF8F60 LDRB W8, [X20 + 0x28E]
	0x03DF8F64 MOV W21, W1
	0x03DF8F68 MOV X19, X0
	0x03DF8F6C STR W1, [X31 + 0xC]
	0x03DF8F70 TBNZ X8, 0x0, 0x3DF8F88
	0x03DF8F74 ADRP X0, 0x324000
	0x03DF8F78 LDR X0, [X0 + 0xF0]
	0x03DF8F7C BL 0x1C16CF4
	0x03DF8F80 MOVZ W8, 0x1
	0x03DF8F84 STRB W8, [X20 + 0x28E]
	0x03DF8F88 LDR X8, [X19]
	0x03DF8F8C CBZ X8, 0x3DF90B8
	0x03DF8F90 LDR X8, [X8 + 0x3A0]
	0x03DF8F94 CBZ X8, 0x3DF8FA0
	0x03DF8F98 LDRB W8, [X8 + 0x4C]
	0x03DF8F9C CBNZ W8, 0x3DF9120
	0x03DF8FA0 TBNZ X21, 0x1F, 0x3DF90BC
	0x03DF8FA4 MOV X0, X19
	0x03DF8FA8 BL 0x3DF8994
	0x03DF8FAC CMP W0, W21
	0x03DF8FB0 B.LE 0x3DF90BC
	0x03DF8FB4 LDR X8, [X19]
	0x03DF8FB8 CBZ X8, 0x3DF90B8
	0x03DF8FBC LDR X0, [X8 + 0x398]
	0x03DF8FC0 CBZ X0, 0x3DF90B8
	0x03DF8FC4 ADRP X8, 0x324000
	0x03DF8FC8 LDR X8, [X8 + 0xF0]
	0x03DF8FCC MOV W1, W21
	0x03DF8FD0 LDR X2, [X8]
	0x03DF8FD4 BL 0x301BCCC
	0x03DF8FD8 CBZ X0, 0x3DF90B8
	0x03DF8FDC MOVZ W1, 0x1
	0x03DF8FE0 MOV X2, X31
	0x03DF8FE4 MOV X20, X0
	0x03DF8FE8 BL 0x3DF1754
	0x03DF8FEC MOV X0, X19
	0x03DF8FF0 MOV W1, W21
	0x03DF8FF4 BL 0x3DF9168
	0x03DF8FF8 LDR W8, [X20 + 0x328]
	0x03DF8FFC LDRB W9, [X20 + 0x10]
	0x03DF9000 ADD W8, W8, W9
	0x03DF9004 CMP W8, 0x1
	0x03DF9008 B.LT 0x3DF9020
	0x03DF900C LDR X0, [X19]
	0x03DF9010 CBZ X0, 0x3DF90B8
	0x03DF9014 SUB W1, W31, W8
	0x03DF9018 MOV X2, X31
	0x03DF901C BL 0x3DEF538
	0x03DF9020 LDR X8, [X20 + 0x378]
	0x03DF9024 ADD X0, X31, 0x0
	0x03DF9028 MOV X1, X31
	0x03DF902C STR X8, [X31]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0x5F1000
	015 Move X24, 0x2FD000
	016 Move X19, 0x305000
	017 Move X20, 0x324000
	018 Move X22, 0x372000
	019 Move X21, 0x372000
	020 Move X29, 0x372000
	021 Move X28, 0x36C000
	022 Move X27, 0x36C000
	023 Move X26, 0x372000
	024 Move X25, 0x304000
	025 Move X24, [X24+464]
	026 Move X19, [X19+280]
	027 Move X20, [X20+2200]
	028 Move X22, [X22+2728]
	029 Move X21, [X21+2736]
	030 Move X29, [X29+2744]
	031 Move X28, [X28+3856]
	032 Move X27, [X27+3864]
	033 Move X26, [X26+2752]
	034 Move W8, [X23+647]
	035 Move X25, [X25+1536]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {84}
	040 Move X0, 0x372000
	041 Move X0, [X0+2752]
	042 Call 0x1C17CF4
	043 Move X0, 0x372000
	044 Move X0, [X0+2760]
	045 Call 0x1C17CF4
	046 Move X0, 0x372000
	047 Move X0, [X0+2768]
	048 Call 0x1C17CF4
	049 Move X0, 0x305000
	050 Move X0, [X0+280]
	051 Call 0x1C17CF4
	052 Move X0, 0x36C000
	053 Move X0, [X0+3864]
	054 Call 0x1C17CF4
	055 Move X0, 0x36C000
	056 Move X0, [X0+3856]
	057 Call 0x1C17CF4
	058 Move X0, 0x2FD000
	059 Move X0, [X0+464]
	060 Call 0x1C17CF4
	061 Move X0, 0x304000
	062 Move X0, [X0+1536]
	063 Call 0x1C17CF4
	064 Move X0, 0x324000
	065 Move X0, [X0+2200]
	066 Call 0x1C17CF4
	067 Move X0, 0x372000
	068 Move X0, [X0+2736]
	069 Call 0x1C17CF4
	070 Move X0, 0x372000
	071 Move X0, [X0+2744]
	072 Call 0x1C17CF4
	073 Move X0, 0x372000
	074 Move X0, [X0+2776]
	075 Call 0x1C17CF4
	076 Move X0, 0x372000
	077 Move X0, [X0+2784]
	078 Call 0x1C17CF4
	079 Move X0, 0x372000
	080 Move X0, [X0+2728]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X23+647], W8
	084 Move X0, [X24]
	085 Call 0x1C17F10
	086 Move X2, [X19]
	087 Move W1, W31
	088 Move X19, X0
	089 Call List`1<Object>..ctor, X0, X1
	090 Move X8, [X20]
	091 Add X0, X31, 8
	092 Move X2, X31
	093 Move X8, [X8+184]
	094 Move [X8+8], X19
	095 Move X1, [X22]
	096 Move [X31+8], W31
	097 Call PropertyName..ctor, X0, X1
	098 Move X8, [X20]
	099 Move W9, [X31+8]
	100 Move X10, -53522432
	101 Move V0, [X10+170]
	102 Move X8, [X8+184]
	103 Move W1, 1
	104 Move W2, W31
	105 Move W3, W31
	106 Move [X8+16], W9
	107 Move X9, [X21]
	108 Move [X8+2], V0
	109 Move X4, X31
	110 Move [X8+24], X9
	111 Move X0, [X29]
	112 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	113 Move X8, [X20]
	114 Move X8, [X8+184]
	115 Move [X8+48], X0
	116 Move X0, [X28]
	117 Call 0x1C17F10
	118 Move X1, [X27]
	119 Move X19, X0
	120 Call List`1<Object>..ctor, X0
	121 Move X8, [X20]
	122 Move X8, [X8+184]
	123 Move [X8+72], X19
	124 Move X0, [X26]
	125 Call 0x1C17F10
	126 Move X1, X31
	127 Move X19, X0
	128 Call CustomStyleAccess..ctor, X0
	129 Move X8, [X20]
	130 Move X8, [X8+184]
	131 Move [X8+80], X19
	132 Move X0, [X25]
	133 Call 0x1C17F10
	134 Move X8, 0x372000
	135 Move X8, [X8+2784]
	136 Move W2, 8
	137 Move X3, X31
	138 Move X19, X0
	139 Move X1, [X8]
	140 Call Regex..ctor, X0, X1, X2
	141 Move X8, [X20]
	142 Add X0, X31, 0
	143 Move X2, X31
	144 Move X8, [X8+184]
	145 Move [X8+88], X19
	146 Move X8, 0x372000
	147 Move X8, [X8+2776]
	148 Move [X31], W31
	149 Move X1, [X8]
	150 Call PropertyName..ctor, X0, X1
	151 Move X8, [X20]
	152 Move W9, [X31]
	153 Move X8, [X8+184]
	154 Move [X8+96], W9
	155 Move X8, 0x372000
	156 Move X8, [X8+2768]
	157 Move X0, [X8]
	158 Call 0x1C17F10
	159 Move X8, 0x372000
	160 Move X8, [X8+2760]
	161 Move X19, X0
	162 Move X1, [X8]
	163 Call Dictionary`2<Object, Object>..ctor, X0
	164 Move X8, [X20]
	165 Move X22, [X31+80]
	166 Move X21, [X31+88]
	167 Move X24, [X31+64]
	168 Move X23, [X31+72]
	169 Move X26, [X31+48]
	170 Move X25, [X31+56]
	171 Move X8, [X8+184]
	172 Move X28, [X31+32]
	173 Move X27, [X31+40]
	174 Move X29, [X31+16]
	175 Move X30, [X31+24]
	176 Move [X8+104], X19
	177 Move X20, [X31+96]
	178 Move X19, [X31+104]
	179 Add X31, X31, 112
	180 Return 

Method: UnityEngine.Yoga.YogaSize <AssignMeasureFunction>b__432_0(UnityEngine.Yoga.YogaNode node, System.Single f, UnityEngine.Yoga.YogaMeasureMode mode, System.Single f1, UnityEngine.Yoga.YogaMeasureMode heightMode)

Disassembly:
	0x03DF9030 BL 0x3DF8E10
	0x03DF9034 MOV X0, X19
	0x03DF9038 BL 0x3DF8994
	0x03DF903C CBNZ W0, 0x3DF906C
	0x03DF9040 MOV X0, X19
	0x03DF9044 BL 0x3DF91E4
	0x03DF9048 LDR X0, [X19]
	0x03DF904C CBZ X0, 0x3DF90B8
	0x03DF9050 MOV X1, X31
	0x03DF9054 BL 0x3DF28F8
	0x03DF9058 TBZ X0, 0x0, 0x3DF906C
	0x03DF905C LDR X0, [X19]
	0x03DF9060 CBZ X0, 0x3DF90B8
	0x03DF9064 MOV X1, X31
	0x03DF9068 BL 0x3DF2978
	0x03DF906C LDR X0, [X19]
	0x03DF9070 CBZ X0, 0x3DF90B8
	0x03DF9074 LDR X8, [X0 + 0x3A0]
	0x03DF9078 CBZ X8, 0x3DF90A0
	0x03DF907C LDR X9, [X8]
	0x03DF9080 MOVZ W2, 0x4
	0x03DF9084 MOV X0, X8
	0x03DF9088 MOV X1, X20
	0x03DF908C LDR X10, [X9 + 0x338]
	0x03DF9090 LDR X3, [X9 + 0x340]
	0x03DF9094 BLR X10
	0x03DF9098 LDR X0, [X19]
	0x03DF909C CBZ X0, 0x3DF90B8
	0x03DF90A0 LDP X20, X19, [X31 + 0x20]
	0x03DF90A4 LDP X30, X21, [X31 + 0x10]
	0x03DF90A8 MOVZ W1, 0x4
	0x03DF90AC MOV X2, X31
	0x03DF90B0 ADD X31, X31, 0x30
	0x03DF90B4 B 0x3DE5048
	0x03DF90B8 BL 0x1C16F20
	0x03DF90BC ADD X0, X31, 0xC
	0x03DF90C0 MOV X1, X31
	0x03DF90C4 BL 0x337B6E0
	0x03DF90C8 MOV X19, X0
	0x03DF90CC ADRP X0, 0x370000
	0x03DF90D0 LDR X0, [X0 + 0xB98]
	0x03DF90D4 BL 0x1C16D08
	0x03DF90D8 MOV X1, X19
	0x03DF90DC MOV X2, X31
	0x03DF90E0 BL 0x321B938
	0x03DF90E4 MOV X19, X0
	0x03DF90E8 ADRP X0, 0x302000
	0x03DF90EC LDR X0, [X0 + 0x760]
	0x03DF90F0 BL 0x1C16D08
	0x03DF90F4 BL 0x1C16F10
	0x03DF90F8 MOV X1, X19
	0x03DF90FC MOV X2, X31
	0x03DF9100 MOV X20, X0
	0x03DF9104 BL 0x3316014
	0x03DF9108 ADRP X0, 0x370000
	0x03DF910C LDR X0, [X0 + 0xBE0]
	0x03DF9110 BL 0x1C16D08
	0x03DF9114 MOV X1, X0
	0x03DF9118 MOV X0, X20
	0x03DF911C BL 0x1C16DEC
	0x03DF9120 ADRP X0, 0x2FA000
	0x03DF9124 LDR X0, [X0 + 0x5B0]
	0x03DF9128 BL 0x1C16D08
	0x03DF912C BL 0x1C16F10
	0x03DF9130 MOV X19, X0
	0x03DF9134 ADRP X0, 0x370000
	0x03DF9138 LDR X0, [X0 + 0xBB0]
	0x03DF913C BL 0x1C16D08
	0x03DF9140 MOV X1, X0
	0x03DF9144 MOV X0, X19
	0x03DF9148 MOV X2, X31
	0x03DF914C BL 0x337DF1C
	0x03DF9150 ADRP X0, 0x370000
	0x03DF9154 LDR X0, [X0 + 0xBE0]
	0x03DF9158 BL 0x1C16D08
	0x03DF915C MOV X1, X0
	0x03DF9160 MOV X0, X19
	0x03DF9164 BL 0x1C16DEC
	0x03DF9168 STP X30, X21, [X31 - 0x20]!
	0x03DF916C STP X20, X19, [X31 + 0x10]
	0x03DF9170 ADRP X21, 0x5EF000
	0x03DF9174 LDRB W8, [X21 + 0x297]
	0x03DF9178 MOV W19, W1
	0x03DF917C MOV X20, X0
	0x03DF9180 TBNZ X8, 0x0, 0x3DF9198
	0x03DF9184 ADRP X0, 0x370000
	0x03DF9188 LDR X0, [X0 + 0xBE8]
	0x03DF918C BL 0x1C16CF4
	0x03DF9190 MOVZ W8, 0x1
	0x03DF9194 STRB W8, [X21 + 0x297]
	0x03DF9198 LDR X8, [X20]
	0x03DF919C CBZ X8, 0x3DF91E0
	0x03DF91A0 LDR X0, [X8 + 0x398]

ISIL:
	001 Call VisualElement.Measure, X0, X1, V0, X2, V1, X3
	002 Return X0
	003 Subtract X31, X31, 176
	004 Move [X31+112], D11
	005 Move [X31+120], D10
	006 Move [X31+128], D9
	007 Move [X31+136], D8
	008 Move [X31+144], X30
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X21, 0x5F0000
	013 Move W8, [X21+648]
	014 Move X19, X1
	015 Move X20, X0
	016 Compare W8, 0
	017 JumpIfNotEqual {23}
	018 Move X0, 0x323000
	019 Move X0, [X0+2200]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+648], W8
	023 Add X21, X20, 704
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Add X8, X31, 88
	026 Move X0, X21
	027 Move X1, X31
	028 Move [X31+48], V0
	029 Move [X31+56], V0
	030 Move [X31+16], V0
	031 Move [X31+24], V0
	032 Call ComputedStyle.get_rotate, X0
	033 Move V0, [X31+88]
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 Move X0, X21
	036 Move X1, X31
	037 Call ComputedStyle.get_scale, X0
	038 Move X21, 0x5E0000
	039 Move W8, [X21+2139]
	040 Move X9, X0
	041 ShiftRight X9, 32
	042 And X9, X9, 0x7FFFFFFF
	043 Move S3, W9
	044 Move S8, W0
	045 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	046 Compare W8, 0
	047 JumpIfNotEqual {55}
	048 Move X0, 0x2FB000
	049 Move X0, [X0+1440]
	050 Move [X31], V3
	051 Call 0x1C17CF4
	052 Move V3, [X31]
	053 Move W8, 1
	054 Move [X21+2139], W8
	055 Move X8, 0x2FB000
	056 Move X8, [X8+1440]
	057 Move X8, [X8]
	058 Move X8, [X8+184]
	059 Move V0, [X8+12]
	060 Move V1, [X8+16]
	061 Move X8, -53538816
	062 Move V2, [X8+3872]
	063 Subtract S0, S8, S0
	064 Subtract V1, V3, V1
	065 Multiply S0, S0, S0
	066 NotImplemented "Instruction INVALID not yet implemented."
	067 Add S0, S0, S1
	068 Move S1, V1.S[1]
	069 Add S0, S1, S0
	070 NotImplemented "Instruction FCMP not yet implemented."
	071 Move V8, [X19]
	072 Move X0, X20
	073 Call VisualElement.get_positionWithLayout, X0
	074 Move V0.S[1], V1.S[0]
	075 Add V0, V8, V0
	076 Move [X19], D0
	077 Add X1, X31, 16
	078 Move X0, X20
	079 Call VisualElement.GetPivotedMatrixWithLayout, X0, X1
	080 Move X8, 0x323000
	081 Move X8, [X8+2200]
	082 Move S11, [X19]
	083 Move S10, [X19+4]
	084 Move S9, [X19+8]
	085 Move S8, [X19+12]
	086 Move X0, [X8]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Add X0, X31, 16
	092 Move V0, V11
	093 Move V1, V10
	094 Move V2, V9
	095 Move V3, V8
	096 Call VisualElement.CalculateConservativeRect, X0, X1
	097 Move [X19], S0
	098 Move [X19+8], S1
	099 Move [X19+8], S2
	100 Move [X19+16], S3
	101 Move X20, [X31+160]
	102 Move X19, [X31+168]
	103 Move X30, [X31+144]
	104 Move X21, [X31+152]
	105 Move D9, [X31+128]
	106 Move D8, [X31+136]
	107 Move D11, [X31+112]
	108 Move D10, [X31+120]
	109 Add X31, X31, 176
	110 Return X0

