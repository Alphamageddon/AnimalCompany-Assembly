Type: UnityEngine.UIElements.TextValueField`1

Method: UnityEngine.UIElements.TextValueField`1/TextValueInput<TValueType> get_textValueInput()

Disassembly:
	0x026E7FEC B 0x26E8048
	0x026E7FF0 LDRB W8, [X19 + 0x460]
	0x026E7FF4 CBZ W8, 0x26E8044
	0x026E7FF8 LDR X8, [X20 + 0x20]
	0x026E7FFC LDR X8, [X8 + 0xC0]
	0x026E8000 LDR X0, [X8 + 0xE0]
	0x026E8004 BL 0x211A010
	0x026E8008 LDR X8, [X20 + 0x20]
	0x026E800C MOV X22, X0
	0x026E8010 MOV X0, X19
	0x026E8014 LDR X8, [X8 + 0xC0]
	0x026E8018 LDR X1, [X8 + 0x50]
	0x026E801C BL 0x277F03C
	0x026E8020 CBZ X22, 0x26E812C
	0x026E8024 LDR X8, [X22]
	0x026E8028 MOV W1, W0
	0x026E802C MOV X0, X22
	0x026E8030 MOV W2, W21
	0x026E8034 LDP X9, X3, [X8 + 0x1B8]
	0x026E8038 BLR X9
	0x026E803C MOV W22, W0
	0x026E8040 B 0x26E8048
	0x026E8044 MOVZ W22, 0x1
	0x026E8048 LDR X8, [X20 + 0x20]
	0x026E804C MOV X0, X19
	0x026E8050 MOV W1, W21
	0x026E8054 LDR X8, [X8 + 0xC0]
	0x026E8058 LDR X2, [X8 + 0x100]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {33}
	005 Move X8, [X1+32]
	006 Move X19, [X0+1096]
	007 Move X8, [X8+192]
	008 Move X1, [X8+16]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Compare X19, 0
	018 JumpIfEqual {27}
	019 Move X8, [X19]
	020 Move W9, [X1+304]
	021 Move W10, [X8+304]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, [X8+200]
	024 Add X8, X8, X9
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, X19
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 Return X0
	031 Move X0, X19
	032 Call 0x1C181E0
	033 Call 0x1C17F20

Method: System.String get_formatString()

Disassembly:
	0x026E805C BL 0x2780994
	0x026E8060 TBNZ X22, 0x0, 0x26E8118
	0x026E8064 LDR X8, [X20 + 0x20]
	0x026E8068 MOV X0, X19
	0x026E806C LDR X8, [X8 + 0xC0]
	0x026E8070 LDR X1, [X8 + 0x48]
	0x026E8074 BL 0x26D5FB4
	0x026E8078 LDR X8, [X20 + 0x20]
	0x026E807C MOV X20, X0
	0x026E8080 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X1+32]
	003 Move X8, [X8+192]
	004 Move X1, [X8+24]
	005 Call 0x26E7FEC, X0
	006 Compare X0, 0
	007 JumpIfEqual {11}
	008 Move X0, [X0+1024]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.Void .ctor(System.String label, System.Int32 maxLength, UnityEngine.UIElements.TextValueField`1/TextValueInput<TValueType> textValueInput)

Disassembly:
	0x026E8084 LDR X8, [X8 + 0xC0]
	0x026E8088 LDR X1, [X8 + 0x50]
	0x026E808C BL 0x277F03C
	0x026E8090 LDR X8, [X19]
	0x026E8094 MOV W1, W0
	0x026E8098 MOV X0, X19
	0x026E809C LDR X9, [X8 + 0x898]
	0x026E80A0 LDR X2, [X8 + 0x8A0]
	0x026E80A4 BLR X9
	0x026E80A8 CBZ X20, 0x26E812C
	0x026E80AC ADRP X10, 0x1A35000
	0x026E80B0 LDR X8, [X20]
	0x026E80B4 LDR X10, [X10 + 0x630]
	0x026E80B8 MOV X21, X0
	0x026E80BC LDRH W9, [X8 + 0x12E]
	0x026E80C0 LDR X1, [X10]
	0x026E80C4 CBZ X9, 0x26E80E8
	0x026E80C8 LDR X10, [X8 + 0xB0]
	0x026E80CC ADD X10, X10, 0x8
	0x026E80D0 LDUR X11, [X10 - 0x8]
	0x026E80D4 CMP X11, X1
	0x026E80D8 B.EQ 0x26E80F8
	0x026E80DC SUBS X9, X9, 0x1
	0x026E80E0 ADD X10, X10, 0x10
	0x026E80E4 B.NE 0x26E80D0
	0x026E80E8 MOVZ W2, 0x14
	0x026E80EC MOV X0, X20
	0x026E80F0 BL 0x1C5C788
	0x026E80F4 B 0x26E8108
	0x026E80F8 LDR W9, [X10]
	0x026E80FC ADD W9, W9, 0x14
	0x026E8100 ADD X8, X8, W9, 0x4, SXTW
	0x026E8104 ADD X0, X8, 0x138
	0x026E8108 LDP X8, X2, [X0]
	0x026E810C MOV X0, X20
	0x026E8110 MOV X1, X21
	0x026E8114 BLR X8
	0x026E8118 STRB W31, [X19 + 0x461]
	0x026E811C LDP X20, X19, [X31 + 0x20]
	0x026E8120 LDP X22, X21, [X31 + 0x10]
	0x026E8124 LDR X30, [X31], #0x30
	0x026E8128 RET
	0x026E812C BL 0x1C16F20
	0x026E8130 STP X30, X23, [X31 - 0x30]!
	0x026E8134 STP X22, X21, [X31 + 0x10]
	0x026E8138 STP X20, X19, [X31 + 0x20]
	0x026E813C ADRP X22, 0x1CF2000
	0x026E8140 LDRB W8, [X22 + 0x512]
	0x026E8144 MOV X19, X2
	0x026E8148 MOV X21, X1
	0x026E814C MOV X20, X0
	0x026E8150 TBNZ X8, 0x0, 0x26E8198
	0x026E8154 ADRP X0, 0x1A35000
	0x026E8158 LDR X0, [X0 + 0x6D0]
	0x026E815C BL 0x1C16CF4
	0x026E8160 ADRP X0, 0x1A35000
	0x026E8164 LDR X0, [X0 + 0x6E8]
	0x026E8168 BL 0x1C16CF4
	0x026E816C ADRP X0, 0x1A35000
	0x026E8170 LDR X0, [X0 + 0x6F8]
	0x026E8174 BL 0x1C16CF4
	0x026E8178 ADRP X0, 0x1A35000
	0x026E817C LDR X0, [X0 + 0x700]
	0x026E8180 BL 0x1C16CF4
	0x026E8184 ADRP X0, 0x1A0B000
	0x026E8188 LDR X0, [X0 + 0x988]
	0x026E818C BL 0x1C16CF4
	0x026E8190 MOVZ W8, 0x1
	0x026E8194 STRB W8, [X22 + 0x512]
	0x026E8198 CBZ X20, 0x26E831C
	0x026E819C MOV X0, X20
	0x026E81A0 MOV X1, X21
	0x026E81A4 MOV X2, X31
	0x026E81A8 BL 0x3DEF858
	0x026E81AC CBZ X21, 0x26E82A0
	0x026E81B0 LDR X8, [X21]
	0x026E81B4 ADRP X22, 0x1A35000
	0x026E81B8 ADRP X23, 0x1A35000
	0x026E81BC MOV X0, X21
	0x026E81C0 LDP X9, X1, [X8 + 0x188]
	0x026E81C4 LDR X22, [X22 + 0x6F8]
	0x026E81C8 LDR X23, [X23 + 0x6E8]
	0x026E81CC BLR X9
	0x026E81D0 LDR X8, [X22]
	0x026E81D4 MOV X22, X0
	0x026E81D8 LDR W9, [X8 + 0xE0]
	0x026E81DC CBNZ W9, 0x26E81E8
	0x026E81E0 MOV X0, X8
	0x026E81E4 BL 0x1C16DFC
	0x026E81E8 LDR X0, [X23]
	0x026E81EC BL 0x2D0D5C8
	0x026E81F0 CMP X22, X0
	0x026E81F4 B.NE 0x26E8220
	0x026E81F8 LDRB W8, [X20 + 0x408]
	0x026E81FC CBZ W8, 0x26E82B0
	0x026E8200 LDR X8, [X20]
	0x026E8204 MOV X0, X20
	0x026E8208 LDP X20, X19, [X31 + 0x20]
	0x026E820C LDP X22, X21, [X31 + 0x10]
	0x026E8210 LDR X2, [X8 + 0x878]
	0x026E8214 LDR X1, [X8 + 0x880]
	0x026E8218 LDP X30, X23, [X31], #0x30
	0x026E821C BR X2
	0x026E8220 LDR X8, [X21]
	0x026E8224 MOV X0, X21
	0x026E8228 LDP X9, X1, [X8 + 0x188]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1CF3000
	009 Move W8, [X24+1291]
	010 Move X19, X4
	011 Move X21, X3
	012 Move W22, W2
	013 Move X23, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x1A0C000
	020 Move X0, [X0+3368]
	021 Call 0x1C17CF4
	022 Move X0, 0x1A36000
	023 Move X0, [X0+1584]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+1291], W8
	027 Move X8, [X19+32]
	028 Move X8, [X8+192]
	029 Move X0, [X8+48]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X8, [X19+32]
	041 Move X0, X20
	042 Move X1, X23
	043 Move W2, W22
	044 Move X8, [X8+192]
	045 Move W3, W31
	046 Move X4, X21
	047 Move X5, [X8+40]
	048 Call 0x26D40F0, X0, X1, X2, X3, X4
	049 Move W8, 1
	050 Move [X20+1120], W8
	051 Move X8, [X19+32]
	052 Move X0, X20
	053 Move X8, [X8+192]
	054 Move X1, [X8+72]
	055 Call 0x26D3DAC, X0
	056 Move X8, [X19+32]
	057 Move X21, X0
	058 Move X0, X20
	059 Move X8, [X8+192]
	060 Move X1, [X8+80]
	061 Call BaseField`1<Double>.get_rawValue, X0
	062 Move X8, [X20]
	063 Move X0, X20
	064 Move X9, [X8+2200]
	065 Move X1, [X8+2208]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Compare X21, 0
	068 JumpIfEqual {120}
	069 Move X10, 0x1A36000
	070 Move X8, [X21]
	071 Move X10, [X10+1584]
	072 Move X23, 0x1A0C000
	073 Move X22, X0
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move X1, [X10]
	076 Move X23, [X23+3368]
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move W2, 20
	086 Move X0, X21
	087 Call 0x1C5D788
	088 Move W9, [X10]
	089 Add W9, W9, 20
	090 Add X8, X8, W9
	091 Add X0, X8, 312
	092 Move X8, [X0]
	093 Move X2, [X0+8]
	094 Move X0, X21
	095 Move X1, X22
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X0, [X23]
	098 Call 0x1C17F10
	099 Move X8, [X19+32]
	100 Move X1, X20
	101 Move X3, X31
	102 Move X21, X0
	103 Move X8, [X8+192]
	104 Move X2, [X8+112]
	105 Call Action`1<Boolean>..ctor, X0, X1, X2
	106 Move X8, [X19+32]
	107 Move X0, X20
	108 Move X1, X21
	109 Move X20, [X31+48]
	110 Move X19, [X31+56]
	111 Move X8, [X8+192]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 Move X2, [X8+120]
	117 Move X30, [X31+64]
	118 Call 0x26D37A8, X0, X1
	119 Return 
	120 Call 0x1C17F20

Method: System.Void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, TValueType startValue)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void StartDragging()

Disassembly:
	0x026E822C BLR X9
	0x026E8230 ADRP X8, 0x1A35000
	0x026E8234 LDR X8, [X8 + 0x700]
	0x026E8238 MOV X21, X0
	0x026E823C LDR X8, [X8]
	0x026E8240 LDR W9, [X8 + 0xE0]
	0x026E8244 CBNZ W9, 0x26E8250
	0x026E8248 MOV X0, X8
	0x026E824C BL 0x1C16DFC
	0x026E8250 ADRP X8, 0x1A35000
	0x026E8254 LDR X8, [X8 + 0x6D0]
	0x026E8258 LDR X0, [X8]
	0x026E825C BL 0x2D0D5C8
	0x026E8260 CMP X21, X0
	0x026E8264 B.NE 0x26E82A0
	0x026E8268 LDRB W8, [X20 + 0x408]
	0x026E826C CBZ W8, 0x26E82A0
	0x026E8270 LDR X0, [X20 + 0x448]
	0x026E8274 CBZ X0, 0x26E831C
	0x026E8278 LDR X8, [X19 + 0x20]
	0x026E827C ADRP X9, 0x1A0B000
	0x026E8280 LDR X8, [X8 + 0xC0]
	0x026E8284 LDR X9, [X9 + 0x988]
	0x026E8288 LDP X20, X19, [X31 + 0x20]
	0x026E828C LDP X22, X21, [X31 + 0x10]
	0x026E8290 LDR X2, [X8 + 0x120]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {32}
	006 Move W8, [X0+1032]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare W8, 0
	010 JumpIfEqual {17}
	011 Move X8, [X20]
	012 Move D0, X31
	013 Move X0, X20
	014 Move X9, [X8+2040]
	015 Move X1, [X8+2048]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move X8, [X19+32]
	018 Move X0, X20
	019 Move X8, [X8+192]
	020 Move X1, [X8+24]
	021 Call 0x26E7FEC, X0
	022 Compare X0, 0
	023 JumpIfEqual {32}
	024 Move X8, [X19+32]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X8, [X8+192]
	028 Move X1, [X8+152]
	029 Move X30, [X31+32]
	030 Call 0x26ED5C8, X0
	031 Return 
	032 Call 0x1C17F20

Method: System.Void StopDragging()

Disassembly:
	0x026E8294 LDR X1, [X9]
	0x026E8298 LDP X30, X23, [X31], #0x30
	0x026E829C B 0x26B921C
	0x026E82A0 LDP X20, X19, [X31 + 0x20]
	0x026E82A4 LDP X22, X21, [X31 + 0x10]
	0x026E82A8 LDP X30, X23, [X31], #0x30
	0x026E82AC RET
	0x026E82B0 LDR X8, [X19 + 0x20]
	0x026E82B4 MOV X0, X20
	0x026E82B8 LDR X8, [X8 + 0xC0]
	0x026E82BC LDR X1, [X8 + 0xB0]
	0x026E82C0 BL 0x26D5968
	0x026E82C4 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X1
	005 Move X8, [X8+192]
	006 Move X1, [X8+24]
	007 Call 0x26E7FEC, X0
	008 Compare X0, 0
	009 JumpIfEqual {17}
	010 Move X8, [X19+32]
	011 Move X8, [X8+192]
	012 Move X1, [X8+160]
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call 0x26ED600, X0
	016 Return 
	017 Call 0x1C17F20

Method: TValueType get_value()

Disassembly:
	0x026E82C8 BL 0x32277A8
	0x026E82CC LDR X8, [X20 + 0x448]
	0x026E82D0 CBZ X8, 0x26E831C
	0x026E82D4 LDR X9, [X19 + 0x20]
	0x026E82D8 LDR X9, [X9 + 0xC0]
	0x026E82DC TBZ X0, 0x0, 0x26E82EC
	0x026E82E0 LDR X1, [X9 + 0x110]
	0x026E82E4 MOV X0, X8

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {10}
	004 Move X8, [X1+32]
	005 Move X8, [X8+192]
	006 Move X1, [X8+168]
	007 Move X30, [X31+16]
	008 Call BaseField`1<Double>.get_value, X0
	009 Return X0
	010 Call 0x1C17F20

Method: System.Void set_value(TValueType value)

Disassembly:
	0x026E82E8 B 0x26E830C
	0x026E82EC LDR X1, [X9 + 0x118]
	0x026E82F0 MOV X0, X8
	0x026E82F4 BL 0x26B8CC4
	0x026E82F8 LDR X0, [X20 + 0x448]
	0x026E82FC CBZ X0, 0x26E831C
	0x026E8300 LDR X8, [X19 + 0x20]
	0x026E8304 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {10}
	004 Move X8, [X1+32]
	005 Move X8, [X8+192]
	006 Move X1, [X8+144]
	007 Move X30, [X31+16]
	008 Call BaseField`1<Double>.set_value, X0, V0
	009 Return 
	010 Call 0x1C17F20

Method: System.Void UpdateValueFromText()

Disassembly:
	0x026E8308 LDR X1, [X8 + 0x110]
	0x026E830C LDP X20, X19, [X31 + 0x20]
	0x026E8310 LDP X22, X21, [X31 + 0x10]
	0x026E8314 LDP X30, X23, [X31], #0x30
	0x026E8318 B 0x26B8D48
	0x026E831C BL 0x1C16F20
	0x026E8320 MOVZ W8, 0x1
	0x026E8324 STRB W8, [X0 + 0x461]
	0x026E8328 LDR X8, [X1 + 0x20]
	0x026E832C LDR X8, [X8 + 0xC0]
	0x026E8330 LDR X1, [X8 + 0x128]
	0x026E8334 B 0x2780A14
	0x026E8338 STP X30, X23, [X31 - 0x30]!
	0x026E833C STP X22, X21, [X31 + 0x10]
	0x026E8340 STP X20, X19, [X31 + 0x20]
	0x026E8344 ADRP X21, 0x1CF2000
	0x026E8348 LDRB W8, [X21 + 0x513]
	0x026E834C MOV X20, X1
	0x026E8350 MOV X19, X0
	0x026E8354 TBNZ X8, 0x0, 0x26E8390
	0x026E8358 ADRP X0, 0x1A35000
	0x026E835C LDR X0, [X0 + 0x770]
	0x026E8360 BL 0x1C16CF4
	0x026E8364 ADRP X0, 0x1A35000
	0x026E8368 LDR X0, [X0 + 0x778]
	0x026E836C BL 0x1C16CF4
	0x026E8370 ADRP X0, 0x1A35000
	0x026E8374 LDR X0, [X0 + 0x780]
	0x026E8378 BL 0x1C16CF4
	0x026E837C ADRP X0, 0x1A35000
	0x026E8380 LDR X0, [X0 + 0x788]
	0x026E8384 BL 0x1C16CF4
	0x026E8388 MOVZ W8, 0x1
	0x026E838C STRB W8, [X21 + 0x513]
	0x026E8390 CBZ X19, 0x26E8454
	0x026E8394 LDR X8, [X20 + 0x20]
	0x026E8398 ADRP X22, 0x1A35000
	0x026E839C MOV X0, X19
	0x026E83A0 LDR X8, [X8 + 0xC0]
	0x026E83A4 LDR X1, [X8 + 0x130]
	0x026E83A8 LDR X22, [X22 + 0x780]
	0x026E83AC BL 0x277FD08
	0x026E83B0 LDR X0, [X22]
	0x026E83B4 LDR X21, [X19 + 0x400]
	0x026E83B8 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X0+1120], W31
	005 Move X8, [X1+32]
	006 Move X19, X0
	007 Move X8, [X8+192]
	008 Move X1, [X8+176]
	009 Call 0x26D3760, X0
	010 Move X1, X0
	011 Move X8, [X19]
	012 Move X9, [X8+2216]
	013 Move X2, [X8+2224]
	014 Move X0, X19
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X8, [X19]
	017 Move X1, [X8+2048]
	018 Move X9, [X8+2040]
	019 Move X0, X19
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move W8, 1
	022 Move [X19+1120], W8
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return 
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Call 0x3EB2AD0
	029 Move X20, [X0]
	030 Call 0x3EB2AE0
	031 Move W8, 1
	032 Move [X19+1120], W8
	033 Compare X20, 0
	034 JumpIfEqual {23}
	035 Move X0, X20
	036 Call 0x1C17F18
	037 Move W8, 1
	038 Move [X19+1120], W8
	039 Move W8, 1
	040 Move [X19+1120], W8
	041 Compare X20, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1D2D690
	044 Move X0, X20
	045 Call 0x1C17F18
	046 Call 0x1991590

Method: System.Void UpdateTextFromValue()

Disassembly:
	0x026E83BC LDR X8, [X20 + 0x20]
	0x026E83C0 MOV X1, X19
	0x026E83C4 MOV X3, X31
	0x026E83C8 MOV X22, X0
	0x026E83CC LDR X8, [X8 + 0xC0]
	0x026E83D0 LDR X2, [X8 + 0x138]
	0x026E83D4 BL 0x2D0E824
	0x026E83D8 CBZ X21, 0x26E8454
	0x026E83DC ADRP X8, 0x1A35000
	0x026E83E0 LDR X8, [X8 + 0x770]
	0x026E83E4 ADRP X23, 0x1A35000
	0x026E83E8 MOVZ W2, 0x1
	0x026E83EC MOV X0, X21
	0x026E83F0 LDR X3, [X8]
	0x026E83F4 LDR X23, [X23 + 0x788]
	0x026E83F8 MOV X1, X22
	0x026E83FC BL 0x21A1534
	0x026E8400 LDR X0, [X23]
	0x026E8404 LDR X21, [X19 + 0x400]
	0x026E8408 BL 0x1C16F10
	0x026E840C LDR X8, [X20 + 0x20]
	0x026E8410 MOV X1, X19
	0x026E8414 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {27}
	006 Move X8, [X1+32]
	007 Move X20, X1
	008 Move X19, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8+80]
	011 Call BaseField`1<Double>.get_rawValue, X0
	012 Move X8, [X19]
	013 Move X0, X19
	014 Move X9, [X8+2200]
	015 Move X1, [X8+2208]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move X8, [X20+32]
	018 Move X1, X0
	019 Move X0, X19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X8, [X8+192]
	023 Move X2, [X8+192]
	024 Move X30, [X31+32]
	025 Call 0x26D3784, X0, X1
	026 Return 
	027 Call 0x1C17F20

Method: System.Void OnIsReadOnlyChanged(System.Boolean newValue)

Disassembly:
	0x026E8418 MOV X20, X0
	0x026E841C LDR X8, [X8 + 0xC0]
	0x026E8420 LDR X2, [X8 + 0x140]
	0x026E8424 BL 0x2D0E824
	0x026E8428 CBZ X21, 0x26E8454
	0x026E842C ADRP X8, 0x1A35000

ISIL:
	001 Move X8, [X2+32]
	002 Move X8, [X8+192]
	003 Move X2, [X8+200]
	004 NotImplemented "Instruction ORN not yet implemented."
	005 And W1, W8, 1
	006 Call 0x26E8438, X0, X1
	007 Return 

Method: System.Boolean CanTryParse(System.String textString)

Disassembly:
	0x026E8430 LDR X8, [X8 + 0x778]
	0x026E8434 MOV X0, X21

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void AddLabelDragger()

Disassembly:
	0x0213D7D0 CBNZ X8, 0x213D7E0
	0x0213D7D4 MOV X0, X20
	0x0213D7D8 BL 0x1C5C6E0
	0x0213D7DC LDR X8, [X20 + 0x38]
	0x0213D7E0 LDR X0, [X8 + 0x8]
	0x0213D7E4 LDP X22, X21, [X21 + 0x20]
	0x0213D7E8 LDRB W8, [X0 + 0x135]
	0x0213D7EC TBNZ X8, 0x0, 0x213D7F4
	0x0213D7F0 BL 0x1C5C684
	0x0213D7F4 BL 0x1C16F10
	0x0213D7F8 LDR X8, [X20 + 0x38]
	0x0213D7FC MOV X1, X22
	0x0213D800 MOV X2, X21
	0x0213D804 MOV X3, X19
	0x0213D808 LDR X4, [X8 + 0x10]
	0x0213D80C MOV X20, X0
	0x0213D810 BL 0x2861E0C
	0x0213D814 MOV X0, X20
	0x0213D818 LDP X20, X19, [X31 + 0x20]
	0x0213D81C LDP X22, X21, [X31 + 0x10]
	0x0213D820 LDR X30, [X31], #0x30
	0x0213D824 RET
	0x0213D828 STR X30, [X31 - 0x30]!
	0x0213D82C STP X22, X21, [X31 + 0x10]
	0x0213D830 STP X20, X19, [X31 + 0x20]
	0x0213D834 LDR X8, [X2 + 0x38]
	0x0213D838 MOV X20, X2
	0x0213D83C MOV X19, X1
	0x0213D840 MOV X21, X0
	0x0213D844 CBNZ X8, 0x213D854
	0x0213D848 MOV X0, X20
	0x0213D84C BL 0x1C5C6E0
	0x0213D850 LDR X8, [X20 + 0x38]
	0x0213D854 LDR X0, [X8 + 0x8]
	0x0213D858 LDP X22, X21, [X21 + 0x20]
	0x0213D85C LDRB W8, [X0 + 0x135]
	0x0213D860 TBNZ X8, 0x0, 0x213D868
	0x0213D864 BL 0x1C5C684
	0x0213D868 BL 0x1C16F10
	0x0213D86C LDR X8, [X20 + 0x38]
	0x0213D870 MOV X1, X22
	0x0213D874 MOV X2, X21
	0x0213D878 MOV X3, X19
	0x0213D87C LDR X4, [X8 + 0x10]
	0x0213D880 MOV X20, X0
	0x0213D884 BL 0x28621CC
	0x0213D888 MOV X0, X20
	0x0213D88C LDP X20, X19, [X31 + 0x20]
	0x0213D890 LDP X22, X21, [X31 + 0x10]
	0x0213D894 LDR X30, [X31], #0x30
	0x0213D898 RET
	0x0213D89C STR X30, [X31 - 0x30]!
	0x0213D8A0 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X20, X1
	008 Move X19, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {14}
	011 Move X0, X20
	012 Call 0x1C5D6E0
	013 Move X8, [X20+56]
	014 Move X0, [X8+8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X20+56]
	023 Move X21, X0
	024 Move X22, [X8]
	025 Move W8, [X22+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {33}
	030 Move X0, X22
	031 Call 0x1C5D684
	032 Move X22, X0
	033 Compare X19, 0
	034 JumpIfEqual {44}
	035 Move X0, X19
	036 Move X1, X22
	037 Call 0x1C17E00
	038 Move X1, X0
	039 Compare X0, 0
	040 JumpIfNotEqual {45}
	041 Move X0, X19
	042 Move X1, X22
	043 Call 0x1C181E0
	044 Move X1, X31
	045 Move X8, [X20+56]
	046 Move X0, X21
	047 Move X2, [X8+16]
	048 Call 0x2D13A90, X0, X1
	049 Move [X19+1112], X21
	050 Move X8, [X20+32]
	051 Move X0, X19
	052 Move X8, [X8+192]
	053 Move X1, [X8+208]
	054 Call 0x26D3910, X0
	055 Move X8, [X20+32]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X8, [X8+192]
	059 Move X2, [X8+200]
	060 NotImplemented "Instruction ORN not yet implemented."
	061 Move X0, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 And W1, W8, 1
	065 Move X30, [X31+48]
	066 Call 0x26E8438, X0, X1
	067 Return 

Method: System.Void EnableLabelDragger(System.Boolean enable)

Disassembly:
	0x026E8438 MOV X1, X20
	0x026E843C LDP X20, X19, [X31 + 0x20]
	0x026E8440 LDR X3, [X8]
	0x026E8444 LDP X22, X21, [X31 + 0x10]
	0x026E8448 MOV W2, W31
	0x026E844C LDP X30, X23, [X31], #0x30
	0x026E8450 B 0x21A1534
	0x026E8454 BL 0x1C16F20
	0x026E8458 STP X30, X23, [X31 - 0x30]!
	0x026E845C STP X22, X21, [X31 + 0x10]
	0x026E8460 STP X20, X19, [X31 + 0x20]
	0x026E8464 ADRP X21, 0x1CF2000
	0x026E8468 LDRB W8, [X21 + 0x514]
	0x026E846C MOV X20, X1
	0x026E8470 MOV X19, X0
	0x026E8474 TBNZ X8, 0x0, 0x26E84B0
	0x026E8478 ADRP X0, 0x1A35000
	0x026E847C LDR X0, [X0 + 0x790]
	0x026E8480 BL 0x1C16CF4
	0x026E8484 ADRP X0, 0x1A35000
	0x026E8488 LDR X0, [X0 + 0x798]
	0x026E848C BL 0x1C16CF4
	0x026E8490 ADRP X0, 0x1A35000
	0x026E8494 LDR X0, [X0 + 0x780]
	0x026E8498 BL 0x1C16CF4
	0x026E849C ADRP X0, 0x1A35000
	0x026E84A0 LDR X0, [X0 + 0x788]
	0x026E84A4 BL 0x1C16CF4
	0x026E84A8 MOVZ W8, 0x1
	0x026E84AC STRB W8, [X21 + 0x514]
	0x026E84B0 CBZ X19, 0x26E8574
	0x026E84B4 LDR X8, [X20 + 0x20]
	0x026E84B8 ADRP X22, 0x1A35000
	0x026E84BC MOV X0, X19
	0x026E84C0 LDR X8, [X8 + 0xC0]
	0x026E84C4 LDR X1, [X8 + 0x148]
	0x026E84C8 LDR X22, [X22 + 0x780]
	0x026E84CC BL 0x277FE04
	0x026E84D0 LDR X0, [X22]
	0x026E84D4 LDR X21, [X19 + 0x400]
	0x026E84D8 BL 0x1C16F10
	0x026E84DC LDR X8, [X20 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X0
	006 Move X0, [X0+1112]
	007 Compare X0, 0
	008 JumpIfEqual {16}
	009 Move X20, X2
	010 Move W19, W1
	011 Move TEMP, X1
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {21}
	015 Move X1, [X21+1024]
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Move X21, [X31+40]
	020 Return 
	021 Move X1, X31
	022 Move X2, X31
	023 Call BaseFieldMouseDragger.SetDragZone, X0, X1
	024 Move X8, [X20+32]
	025 Move X21, [X21+1024]
	026 Move X8, [X8+192]
	027 Move X0, [X8+56]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X8, [X20+32]
	039 Move X8, [X8+192]
	040 Move X0, [X8+56]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Compare X21, 0
	048 JumpIfEqual {60}
	049 Move X8, [X0+184]
	050 And W2, W19, 1
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X0, X21
	054 Move X1, [X8+32]
	055 Move X3, X31
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Call VisualElement.EnableInClassList, X0, X1, X2
	059 Return 
	060 Call 0x1C17F20

Method: System.Void SetValueWithoutNotify(TValueType newValue)

Disassembly:
	0x026E84E0 MOV X1, X19
	0x026E84E4 MOV X3, X31
	0x026E84E8 MOV X22, X0
	0x026E84EC LDR X8, [X8 + 0xC0]
	0x026E84F0 LDR X2, [X8 + 0x138]
	0x026E84F4 BL 0x2D0E824
	0x026E84F8 CBZ X21, 0x26E8574
	0x026E84FC ADRP X8, 0x1A35000
	0x026E8500 LDR X8, [X8 + 0x790]
	0x026E8504 ADRP X23, 0x1A35000
	0x026E8508 MOVZ W2, 0x1
	0x026E850C MOV X0, X21
	0x026E8510 LDR X3, [X8]
	0x026E8514 LDR X23, [X23 + 0x788]
	0x026E8518 MOV X1, X22
	0x026E851C BL 0x21A18B4
	0x026E8520 LDR X0, [X23]
	0x026E8524 LDR X21, [X19 + 0x400]
	0x026E8528 BL 0x1C16F10
	0x026E852C LDR X8, [X20 + 0x20]
	0x026E8530 MOV X1, X19
	0x026E8534 MOV X3, X31
	0x026E8538 MOV X20, X0
	0x026E853C LDR X8, [X8 + 0xC0]
	0x026E8540 LDR X2, [X8 + 0x140]
	0x026E8544 BL 0x2D0E824
	0x026E8548 CBZ X21, 0x26E8574
	0x026E854C ADRP X8, 0x1A35000
	0x026E8550 LDR X8, [X8 + 0x798]
	0x026E8554 MOV X0, X21
	0x026E8558 MOV X1, X20
	0x026E855C LDP X20, X19, [X31 + 0x20]
	0x026E8560 LDR X3, [X8]
	0x026E8564 LDP X22, X21, [X31 + 0x10]
	0x026E8568 MOV W2, W31
	0x026E856C LDP X30, X23, [X31], #0x30
	0x026E8570 B 0x21A18B4
	0x026E8574 BL 0x1C16F20
	0x026E8578 STP X30, X19, [X31 - 0x10]!
	0x026E857C CBZ X0, 0x26E85E4
	0x026E8580 LDR X8, [X1 + 0x20]
	0x026E8584 LDR X19, [X0 + 0x448]
	0x026E8588 LDR X8, [X8 + 0xC0]
	0x026E858C LDR X1, [X8 + 0x10]
	0x026E8590 LDRB W8, [X1 + 0x135]
	0x026E8594 TBNZ X8, 0x0, 0x26E85A4
	0x026E8598 MOV X0, X1
	0x026E859C BL 0x1C5C684
	0x026E85A0 MOV X1, X0
	0x026E85A4 CBZ X19, 0x26E85D0
	0x026E85A8 LDR X8, [X19]
	0x026E85AC LDRB W9, [X1 + 0x130]
	0x026E85B0 LDRB W10, [X8 + 0x130]
	0x026E85B4 CMP W10, W9
	0x026E85B8 B.CC 0x26E85DC
	0x026E85BC LDR X8, [X8 + 0xC8]
	0x026E85C0 ADD X8, X8, X9, 0x3, LSL
	0x026E85C4 LDUR X8, [X8 - 0x8]
	0x026E85C8 CMP X8, X1
	0x026E85CC B.NE 0x26E85DC
	0x026E85D0 MOV X0, X19
	0x026E85D4 LDP X30, X19, [X31], #0x10
	0x026E85D8 RET
	0x026E85DC MOV X0, X19
	0x026E85E0 BL 0x1C171E0
	0x026E85E4 BL 0x1C16F20
	0x026E85E8 STR X30, [X31 - 0x10]!
	0x026E85EC LDR X8, [X1 + 0x20]
	0x026E85F0 LDR X8, [X8 + 0xC0]
	0x026E85F4 LDR X1, [X8 + 0x18]
	0x026E85F8 BL 0x26E8578
	0x026E85FC CBZ X0, 0x26E860C
	0x026E8600 LDR X0, [X0 + 0x400]
	0x026E8604 LDR X30, [X31], #0x10
	0x026E8608 RET
	0x026E860C BL 0x1C16F20
	0x026E8610 STR X30, [X31 - 0x40]!
	0x026E8614 STP X24, X23, [X31 + 0x10]
	0x026E8618 STP X22, X21, [X31 + 0x20]
	0x026E861C STP X20, X19, [X31 + 0x30]
	0x026E8620 ADRP X24, 0x1CF2000
	0x026E8624 LDRB W8, [X24 + 0x515]
	0x026E8628 MOV X19, X4
	0x026E862C MOV X21, X3
	0x026E8630 MOV W22, W2
	0x026E8634 MOV X23, X1
	0x026E8638 MOV X20, X0
	0x026E863C TBNZ X8, 0x0, 0x26E8660
	0x026E8640 ADRP X0, 0x1A0B000
	0x026E8644 LDR X0, [X0 + 0xD28]
	0x026E8648 BL 0x1C16CF4
	0x026E864C ADRP X0, 0x1A35000
	0x026E8650 LDR X0, [X0 + 0x630]
	0x026E8654 BL 0x1C16CF4
	0x026E8658 MOVZ W8, 0x1
	0x026E865C STRB W8, [X24 + 0x515]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1CF3000
	007 Move W8, [X21+1292]
	008 Move X20, X1
	009 Move V8, V0
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1A36000
	016 Move X0, [X0+1584]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1292], W8
	020 Move W8, [X19+1121]
	021 Compare W8, 0
	022 JumpIfEqual {24}
	023 Move W21, W31
	024 Move W8, [X19+1120]
	025 Compare W8, 0
	026 JumpIfEqual {46}
	027 Move X8, [X20+32]
	028 Move X8, [X8+192]
	029 Move X0, [X8+224]
	030 Call 0x211A494
	031 Move X8, [X20+32]
	032 Move X21, X0
	033 Move X0, X19
	034 Move X8, [X8+192]
	035 Move X1, [X8+80]
	036 Call BaseField`1<Double>.get_rawValue, X0
	037 Compare X21, 0
	038 JumpIfEqual {108}
	039 Move X8, [X21]
	040 Move X0, X21
	041 Move V1, V8
	042 Move X9, [X8+440]
	043 Move X1, [X8+448]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move W21, W0
	046 Move W21, 1
	047 Move X8, [X20+32]
	048 Move X0, X19
	049 Move V0, V8
	050 Move X8, [X8+192]
	051 Move X1, [X8+256]
	052 Call BaseField`1<Double>.SetValueWithoutNotify, X0, V0
	053 Move TEMP, X21
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {101}
	057 Move X8, [X20+32]
	058 Move X0, X19
	059 Move X8, [X8+192]
	060 Move X1, [X8+72]
	061 Call 0x26D3DAC, X0
	062 Move X8, [X20+32]
	063 Move X20, X0
	064 Move X0, X19
	065 Move X8, [X8+192]
	066 Move X1, [X8+80]
	067 Call BaseField`1<Double>.get_rawValue, X0
	068 Move X8, [X19]
	069 Move X0, X19
	070 Move X9, [X8+2200]
	071 Move X1, [X8+2208]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Compare X20, 0
	074 JumpIfEqual {108}
	075 Move X10, 0x1A36000
	076 Move X8, [X20]
	077 Move X10, [X10+1584]
	078 Move X21, X0
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Move X1, [X10]
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move W2, 20
	090 Move X0, X20
	091 Call 0x1C5D788
	092 Move W9, [X10]
	093 Add W9, W9, 20
	094 Add X8, X8, W9
	095 Add X0, X8, 312
	096 Move X8, [X0]
	097 Move X2, [X0+8]
	098 Move X0, X20
	099 Move X1, X21
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move [X19+1121], W31
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X30, [X31+16]
	105 Move X21, [X31+24]
	106 Move V8, [X31+48]
	107 Return 
	108 Call 0x1C17F20

Method: System.Void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x026E8660 LDR X8, [X19 + 0x20]
	0x026E8664 LDR X8, [X8 + 0xC0]
	0x026E8668 LDR X0, [X8 + 0x30]
	0x026E866C LDRB W8, [X0 + 0x135]
	0x026E8670 TBNZ X8, 0x0, 0x26E8678
	0x026E8674 BL 0x1C5C684
	0x026E8678 LDR W8, [X0 + 0xE0]
	0x026E867C CBNZ W8, 0x26E8684
	0x026E8680 BL 0x1C16DFC
	0x026E8684 LDR X8, [X19 + 0x20]
	0x026E8688 MOV X0, X20
	0x026E868C MOV X1, X23
	0x026E8690 MOV W2, W22
	0x026E8694 LDR X8, [X8 + 0xC0]
	0x026E8698 MOV W3, W31
	0x026E869C MOV X4, X21
	0x026E86A0 LDR X5, [X8 + 0x28]
	0x026E86A4 BL 0x26D7C00
	0x026E86A8 MOVZ W8, 0x1
	0x026E86AC STRB W8, [X20 + 0x460]
	0x026E86B0 LDR X8, [X19 + 0x20]
	0x026E86B4 MOV X0, X20
	0x026E86B8 LDR X8, [X8 + 0xC0]
	0x026E86BC LDR X1, [X8 + 0x48]
	0x026E86C0 BL 0x26D78BC
	0x026E86C4 LDR X8, [X19 + 0x20]
	0x026E86C8 MOV X21, X0
	0x026E86CC MOV X0, X20
	0x026E86D0 LDR X8, [X8 + 0xC0]
	0x026E86D4 LDR X1, [X8 + 0x50]
	0x026E86D8 BL 0x27815D4
	0x026E86DC LDR X8, [X20]
	0x026E86E0 MOV X1, X0
	0x026E86E4 MOV X0, X20
	0x026E86E8 LDR X9, [X8 + 0x898]
	0x026E86EC LDR X2, [X8 + 0x8A0]
	0x026E86F0 BLR X9
	0x026E86F4 CBZ X21, 0x26E87B8
	0x026E86F8 ADRP X10, 0x1A35000
	0x026E86FC LDR X8, [X21]
	0x026E8700 LDR X10, [X10 + 0x630]
	0x026E8704 ADRP X23, 0x1A0B000
	0x026E8708 MOV X22, X0
	0x026E870C LDRH W9, [X8 + 0x12E]
	0x026E8710 LDR X1, [X10]
	0x026E8714 LDR X23, [X23 + 0xD28]
	0x026E8718 CBZ X9, 0x26E873C
	0x026E871C LDR X10, [X8 + 0xB0]
	0x026E8720 ADD X10, X10, 0x8
	0x026E8724 LDUR X11, [X10 - 0x8]
	0x026E8728 CMP X11, X1
	0x026E872C B.EQ 0x26E874C
	0x026E8730 SUBS X9, X9, 0x1
	0x026E8734 ADD X10, X10, 0x10
	0x026E8738 B.NE 0x26E8724
	0x026E873C MOVZ W2, 0x14
	0x026E8740 MOV X0, X21
	0x026E8744 BL 0x1C5C788
	0x026E8748 B 0x26E875C
	0x026E874C LDR W9, [X10]
	0x026E8750 ADD W9, W9, 0x14
	0x026E8754 ADD X8, X8, W9, 0x4, SXTW
	0x026E8758 ADD X0, X8, 0x138
	0x026E875C LDP X8, X2, [X0]
	0x026E8760 MOV X0, X21
	0x026E8764 MOV X1, X22
	0x026E8768 BLR X8
	0x026E876C LDR X0, [X23]
	0x026E8770 BL 0x1C16F10
	0x026E8774 LDR X8, [X19 + 0x20]
	0x026E8778 MOV X1, X20
	0x026E877C MOV X3, X31
	0x026E8780 MOV X21, X0
	0x026E8784 LDR X8, [X8 + 0xC0]
	0x026E8788 LDR X2, [X8 + 0x70]
	0x026E878C BL 0x29818C8
	0x026E8790 LDR X8, [X19 + 0x20]
	0x026E8794 MOV X0, X20
	0x026E8798 MOV X1, X21
	0x026E879C LDP X20, X19, [X31 + 0x30]
	0x026E87A0 LDR X8, [X8 + 0xC0]
	0x026E87A4 LDP X22, X21, [X31 + 0x20]
	0x026E87A8 LDP X24, X23, [X31 + 0x10]
	0x026E87AC LDR X2, [X8 + 0x78]
	0x026E87B0 LDR X30, [X31], #0x40
	0x026E87B4 B 0x26D72B8
	0x026E87B8 BL 0x1C16F20
	0x026E87BC STR X30, [X31 - 0x20]!
	0x026E87C0 STP X20, X19, [X31 + 0x10]
	0x026E87C4 CBZ X0, 0x26E8820
	0x026E87C8 LDRB W8, [X0 + 0x408]
	0x026E87CC MOV X19, X1
	0x026E87D0 MOV X20, X0
	0x026E87D4 CBZ W8, 0x26E87F0
	0x026E87D8 LDR X8, [X20]
	0x026E87DC MOV X0, X20
	0x026E87E0 MOV X1, X31
	0x026E87E4 LDR X9, [X8 + 0x7F8]
	0x026E87E8 LDR X2, [X8 + 0x800]
	0x026E87EC BLR X9
	0x026E87F0 LDR X8, [X19 + 0x20]
	0x026E87F4 MOV X0, X20
	0x026E87F8 LDR X8, [X8 + 0xC0]
	0x026E87FC LDR X1, [X8 + 0x18]
	0x026E8800 BL 0x26E8578
	0x026E8804 CBZ X0, 0x26E8820
	0x026E8808 LDR X8, [X19 + 0x20]
	0x026E880C LDP X20, X19, [X31 + 0x10]
	0x026E8810 LDR X8, [X8 + 0xC0]
	0x026E8814 LDR X1, [X8 + 0x98]
	0x026E8818 LDR X30, [X31], #0x20
	0x026E881C B 0x26ECBF0
	0x026E8820 BL 0x1C16F20
	0x026E8824 STP X30, X19, [X31 - 0x10]!
	0x026E8828 LDR X8, [X1 + 0x20]
	0x026E882C MOV X19, X1
	0x026E8830 LDR X8, [X8 + 0xC0]
	0x026E8834 LDR X1, [X8 + 0x18]
	0x026E8838 BL 0x26E8578
	0x026E883C CBZ X0, 0x26E8854
	0x026E8840 LDR X8, [X19 + 0x20]
	0x026E8844 LDR X8, [X8 + 0xC0]
	0x026E8848 LDR X1, [X8 + 0xA0]
	0x026E884C LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1CF3000
	008 Move W8, [X22+1293]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x1A36000
	017 Move X0, [X0+1744]
	018 Call 0x1C17CF4
	019 Move X0, 0x1A36000
	020 Move X0, [X0+1768]
	021 Call 0x1C17CF4
	022 Move X0, 0x1A36000
	023 Move X0, [X0+1784]
	024 Call 0x1C17CF4
	025 Move X0, 0x1A36000
	026 Move X0, [X0+1792]
	027 Call 0x1C17CF4
	028 Move X0, 0x1A0C000
	029 Move X0, [X0+2440]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+1293], W8
	033 Compare X20, 0
	034 JumpIfEqual {155}
	035 Move X0, X20
	036 Move X1, X21
	037 Move X2, X31
	038 Call VisualElement.ExecuteDefaultAction, X0, X1
	039 Compare X21, 0
	040 JumpIfEqual {113}
	041 Move X8, [X21]
	042 Move X22, 0x1A36000
	043 Move X23, 0x1A36000
	044 Move X0, X21
	045 Move X9, [X8+392]
	046 Move X1, [X8+400]
	047 Move X22, [X22+1784]
	048 Move X23, [X23+1768]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X22]
	051 Move X22, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, [X23]
	058 Call 0x2D0E5C8
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W8, [X20+1032]
	061 Compare W8, 0
	062 JumpIfEqual {120}
	063 Move X8, [X20]
	064 Move X0, X20
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X2, [X8+2168]
	070 Move X1, [X8+2176]
	071 Move X30, [X31+48]
	072 Move X23, [X31+56]
	073 CallNoReturn X2
	074 Move X8, [X21]
	075 Move X0, X21
	076 Move X9, [X8+392]
	077 Move X1, [X8+400]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X8, 0x1A36000
	080 Move X8, [X8+1792]
	081 Move X21, X0
	082 Move X8, [X8]
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X8, 0x1A36000
	089 Move X8, [X8+1744]
	090 Move X0, [X8]
	091 Call 0x2D0E5C8
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W8, [X20+1032]
	094 Compare W8, 0
	095 JumpIfEqual {113}
	096 Move X0, [X20+1096]
	097 Compare X0, 0
	098 JumpIfEqual {155}
	099 Move X8, [X19+32]
	100 Move X9, 0x1A0C000
	101 Move X8, [X8+192]
	102 Move X9, [X9+2440]
	103 Move X20, [X31+32]
	104 Move X19, [X31+40]
	105 Move X22, [X31+16]
	106 Move X21, [X31+24]
	107 Move X2, [X8+288]
	108 Move X1, [X9]
	109 Move X30, [X31+48]
	110 Move X23, [X31+56]
	111 Call 0x26B2DB4, X0, X1
	112 Return 
	113 Move X20, [X31+32]
	114 Move X19, [X31+40]
	115 Move X22, [X31+16]
	116 Move X21, [X31+24]
	117 Move X30, [X31+48]
	118 Move X23, [X31+56]
	119 Return 
	120 Move X8, [X19+32]
	121 Move X0, X20
	122 Move X8, [X8+192]
	123 Move X1, [X8+176]
	124 Call 0x26D3760, X0
	125 Move X1, X31
	126 Call String.IsNullOrEmpty, X0
	127 Move X8, [X20+1096]
	128 Compare X8, 0
	129 JumpIfEqual {155}
	130 Move X9, [X19+32]
	131 Move X9, [X9+192]
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {138}
	136 Move X1, [X9+272]
	137 Move X0, X8
	138 Move X1, [X9+280]
	139 Move X0, X8
	140 Call 0x26B285C, X0
	141 Move X0, [X20+1096]
	142 Compare X0, 0
	143 JumpIfEqual {155}
	144 Move X8, [X19+32]
	145 Move X8, [X8+192]
	146 Move X1, [X8+272]
	147 Move X20, [X31+32]
	148 Move X19, [X31+40]
	149 Move X22, [X31+16]
	150 Move X21, [X31+24]
	151 Move X30, [X31+48]
	152 Move X23, [X31+56]
	153 Call 0x26B28E0, X0
	154 Return 
	155 Call 0x1C17F20

Method: System.Void OnViewDataReady()

Disassembly:
	0x026E8850 B 0x26ECC28
	0x026E8854 BL 0x1C16F20
	0x026E8858 STR X30, [X31 - 0x10]!
	0x026E885C CBZ X0, 0x26E8874
	0x026E8860 LDR X8, [X1 + 0x20]
	0x026E8864 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move W8, 1
	002 Move [X0+1121], W8
	003 Move X8, [X1+32]
	004 Move X8, [X8+192]
	005 Move X1, [X8+296]
	006 Call BaseField`1<Double>.OnViewDataReady, X0
	007 Return 

Method: System.Void RegisterEditingCallbacks()

Disassembly:
	0x026E8868 LDR X1, [X8 + 0xA8]
	0x026E886C LDR X30, [X31], #0x10
	0x026E8870 B 0x278173C
	0x026E8874 BL 0x1C16F20
	0x026E8878 STR X30, [X31 - 0x10]!
	0x026E887C CBZ X0, 0x26E8894
	0x026E8880 LDR X8, [X2 + 0x20]
	0x026E8884 LDR X8, [X8 + 0xC0]
	0x026E8888 LDR X2, [X8 + 0x90]
	0x026E888C LDR X30, [X31], #0x10
	0x026E8890 B 0x2781744
	0x026E8894 BL 0x1C16F20
	0x026E8898 STR X30, [X31 - 0x20]!
	0x026E889C STP X20, X19, [X31 + 0x10]
	0x026E88A0 STRB W31, [X0 + 0x460]
	0x026E88A4 LDR X8, [X1 + 0x20]
	0x026E88A8 MOV X19, X0
	0x026E88AC LDR X8, [X8 + 0xC0]
	0x026E88B0 LDR X1, [X8 + 0xB0]
	0x026E88B4 BL 0x26D7268
	0x026E88B8 MOV X1, X0
	0x026E88BC LDR X8, [X19]
	0x026E88C0 LDR X9, [X8 + 0x8A8]
	0x026E88C4 LDR X2, [X8 + 0x8B0]
	0x026E88C8 MOV X0, X19
	0x026E88CC BLR X9
	0x026E88D0 MOV X1, X0
	0x026E88D4 LDR X8, [X19]
	0x026E88D8 LDR X9, [X8 + 0x7F8]
	0x026E88DC LDR X2, [X8 + 0x800]
	0x026E88E0 MOV X0, X19
	0x026E88E4 BLR X9
	0x026E88E8 MOVZ W8, 0x1
	0x026E88EC STRB W8, [X19 + 0x460]
	0x026E88F0 LDP X20, X19, [X31 + 0x10]
	0x026E88F4 LDR X30, [X31], #0x20
	0x026E88F8 RET
	0x026E88FC B 0x26E8900
	0x026E8900 CMP W1, 0x1
	0x026E8904 B.NE 0x26E8928
	0x026E8908 BL 0x3EB1AD0
	0x026E890C LDR X20, [X0]
	0x026E8910 BL 0x3EB1AE0
	0x026E8914 MOVZ W8, 0x1
	0x026E8918 STRB W8, [X19 + 0x460]
	0x026E891C CBZ X20, 0x26E88F0
	0x026E8920 MOV X0, X20
	0x026E8924 BL 0x1C16F18
	0x026E8928 MOVZ W8, 0x1
	0x026E892C STRB W8, [X19 + 0x460]
	0x026E8930 B 0x26E8940
	0x026E8934 MOVZ W8, 0x1
	0x026E8938 STRB W8, [X19 + 0x460]
	0x026E893C CBNZ X20, 0x26E8944
	0x026E8940 BL 0x1D2C690
	0x026E8944 MOV X0, X20
	0x026E8948 BL 0x1C16F18
	0x026E894C BL 0x1990590
	0x026E8950 STR X30, [X31 - 0x20]!
	0x026E8954 STP X20, X19, [X31 + 0x10]
	0x026E8958 CBZ X0, 0x26E89AC
	0x026E895C LDR X8, [X1 + 0x20]
	0x026E8960 MOV X20, X1
	0x026E8964 MOV X19, X0
	0x026E8968 LDR X8, [X8 + 0xC0]
	0x026E896C LDR X1, [X8 + 0x50]
	0x026E8970 BL 0x27815D4
	0x026E8974 LDR X8, [X19]
	0x026E8978 MOV X1, X0
	0x026E897C MOV X0, X19
	0x026E8980 LDR X9, [X8 + 0x898]
	0x026E8984 LDR X2, [X8 + 0x8A0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1CF3000
	008 Move W8, [X21+1294]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x1A36000
	016 Move X0, [X0+1904]
	017 Call 0x1C17CF4
	018 Move X0, 0x1A36000
	019 Move X0, [X0+1912]
	020 Call 0x1C17CF4
	021 Move X0, 0x1A36000
	022 Move X0, [X0+1920]
	023 Call 0x1C17CF4
	024 Move X0, 0x1A36000
	025 Move X0, [X0+1928]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1294], W8
	029 Compare X19, 0
	030 JumpIfEqual {85}
	031 Move X8, [X20+32]
	032 Move X22, 0x1A36000
	033 Move X0, X19
	034 Move X8, [X8+192]
	035 Move X1, [X8+304]
	036 Move X22, [X22+1920]
	037 Call BaseField`1<Double>.RegisterEditingCallbacks, X0
	038 Move X0, [X22]
	039 Move X21, [X19+1024]
	040 Call 0x1C17F10
	041 Move X8, [X20+32]
	042 Move X1, X19
	043 Move X3, X31
	044 Move X22, X0
	045 Move X8, [X8+192]
	046 Move X2, [X8+312]
	047 Call 0x2D0F824, X0, X1, X2
	048 Compare X21, 0
	049 JumpIfEqual {85}
	050 Move X8, 0x1A36000
	051 Move X8, [X8+1904]
	052 Move X23, 0x1A36000
	053 Move W2, 1
	054 Move X0, X21
	055 Move X3, [X8]
	056 Move X23, [X23+1928]
	057 Move X1, X22
	058 Call 0x21A2534, X0, X1, X2
	059 Move X0, [X23]
	060 Move X21, [X19+1024]
	061 Call 0x1C17F10
	062 Move X8, [X20+32]
	063 Move X1, X19
	064 Move X3, X31
	065 Move X20, X0
	066 Move X8, [X8+192]
	067 Move X2, [X8+320]
	068 Call 0x2D0F824, X0, X1, X2
	069 Compare X21, 0
	070 JumpIfEqual {85}
	071 Move X8, 0x1A36000
	072 Move X8, [X8+1912]
	073 Move X0, X21
	074 Move X1, X20
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X3, [X8]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move W2, W31
	081 Move X30, [X31+48]
	082 Move X23, [X31+56]
	083 Call 0x21A2534, X0, X1, X2
	084 Return 
	085 Call 0x1C17F20

Method: System.Void UnregisterEditingCallbacks()

Disassembly:
	0x026E8988 BLR X9
	0x026E898C LDR X8, [X20 + 0x20]
	0x026E8990 MOV X1, X0
	0x026E8994 MOV X0, X19
	0x026E8998 LDP X20, X19, [X31 + 0x10]
	0x026E899C LDR X8, [X8 + 0xC0]
	0x026E89A0 LDR X2, [X8 + 0xC0]
	0x026E89A4 LDR X30, [X31], #0x20
	0x026E89A8 B 0x26D7294
	0x026E89AC BL 0x1C16F20
	0x026E89B0 LDR X8, [X2 + 0x20]
	0x026E89B4 LDR X8, [X8 + 0xC0]
	0x026E89B8 LDR X2, [X8 + 0xC8]
	0x026E89BC ORN W8, W31, W1, 0x0
	0x026E89C0 AND W1, W8, 0x1
	0x026E89C4 B 0x26E89D0
	0x026E89C8 MOV W0, W31
	0x026E89CC RET
	0x026E89D0 STP X30, X21, [X31 - 0x20]!
	0x026E89D4 STP X20, X19, [X31 + 0x10]
	0x026E89D8 MOV X21, X0
	0x026E89DC LDR X0, [X0 + 0x458]
	0x026E89E0 CBZ X0, 0x26E89F8
	0x026E89E4 MOV X20, X2
	0x026E89E8 MOV W19, W1
	0x026E89EC TBZ X1, 0x0, 0x26E8A04
	0x026E89F0 LDR X1, [X21 + 0x400]
	0x026E89F4 B 0x26E8A08
	0x026E89F8 LDP X20, X19, [X31 + 0x10]
	0x026E89FC LDP X30, X21, [X31], #0x20
	0x026E8A00 RET
	0x026E8A04 MOV X1, X31
	0x026E8A08 MOV X2, X31
	0x026E8A0C BL 0x3DAED08
	0x026E8A10 LDR X8, [X20 + 0x20]
	0x026E8A14 LDR X21, [X21 + 0x400]
	0x026E8A18 LDR X8, [X8 + 0xC0]
	0x026E8A1C LDR X0, [X8 + 0x38]
	0x026E8A20 LDRB W8, [X0 + 0x135]
	0x026E8A24 TBNZ X8, 0x0, 0x26E8A2C
	0x026E8A28 BL 0x1C5C684
	0x026E8A2C LDR W8, [X0 + 0xE0]
	0x026E8A30 CBNZ W8, 0x26E8A38
	0x026E8A34 BL 0x1C16DFC
	0x026E8A38 LDR X8, [X20 + 0x20]
	0x026E8A3C LDR X8, [X8 + 0xC0]
	0x026E8A40 LDR X0, [X8 + 0x38]
	0x026E8A44 LDRB W8, [X0 + 0x135]
	0x026E8A48 TBNZ X8, 0x0, 0x26E8A50
	0x026E8A4C BL 0x1C5C684
	0x026E8A50 CBZ X21, 0x26E8A74
	0x026E8A54 LDR X8, [X0 + 0xB8]
	0x026E8A58 AND W2, W19, 0x1
	0x026E8A5C LDP X20, X19, [X31 + 0x10]
	0x026E8A60 MOV X0, X21
	0x026E8A64 LDR X1, [X8 + 0x20]
	0x026E8A68 MOV X3, X31
	0x026E8A6C LDP X30, X21, [X31], #0x20
	0x026E8A70 B 0x3DF1E80
	0x026E8A74 BL 0x1C16F20
	0x026E8A78 STR X30, [X31 - 0x30]!
	0x026E8A7C STP X22, X21, [X31 + 0x10]
	0x026E8A80 STP X20, X19, [X31 + 0x20]
	0x026E8A84 ADRP X22, 0x1CF2000
	0x026E8A88 LDRB W8, [X22 + 0x516]
	0x026E8A8C MOV X20, X2
	0x026E8A90 MOV X21, X1
	0x026E8A94 MOV X19, X0
	0x026E8A98 TBNZ X8, 0x0, 0x26E8AB0
	0x026E8A9C ADRP X0, 0x1A35000
	0x026E8AA0 LDR X0, [X0 + 0x630]
	0x026E8AA4 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1CF3000
	008 Move W8, [X21+1295]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x1A36000
	016 Move X0, [X0+1936]
	017 Call 0x1C17CF4
	018 Move X0, 0x1A36000
	019 Move X0, [X0+1944]
	020 Call 0x1C17CF4
	021 Move X0, 0x1A36000
	022 Move X0, [X0+1920]
	023 Call 0x1C17CF4
	024 Move X0, 0x1A36000
	025 Move X0, [X0+1928]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1295], W8
	029 Compare X19, 0
	030 JumpIfEqual {85}
	031 Move X8, [X20+32]
	032 Move X22, 0x1A36000
	033 Move X0, X19
	034 Move X8, [X8+192]
	035 Move X1, [X8+328]
	036 Move X22, [X22+1920]
	037 Call BaseField`1<Double>.UnregisterEditingCallbacks, X0
	038 Move X0, [X22]
	039 Move X21, [X19+1024]
	040 Call 0x1C17F10
	041 Move X8, [X20+32]
	042 Move X1, X19
	043 Move X3, X31
	044 Move X22, X0
	045 Move X8, [X8+192]
	046 Move X2, [X8+312]
	047 Call 0x2D0F824, X0, X1, X2
	048 Compare X21, 0
	049 JumpIfEqual {85}
	050 Move X8, 0x1A36000
	051 Move X8, [X8+1936]
	052 Move X23, 0x1A36000
	053 Move W2, 1
	054 Move X0, X21
	055 Move X3, [X8]
	056 Move X23, [X23+1928]
	057 Move X1, X22
	058 Call 0x21A28B4, X0, X1, X2
	059 Move X0, [X23]
	060 Move X21, [X19+1024]
	061 Call 0x1C17F10
	062 Move X8, [X20+32]
	063 Move X1, X19
	064 Move X3, X31
	065 Move X20, X0
	066 Move X8, [X8+192]
	067 Move X2, [X8+320]
	068 Call 0x2D0F824, X0, X1, X2
	069 Compare X21, 0
	070 JumpIfEqual {85}
	071 Move X8, 0x1A36000
	072 Move X8, [X8+1944]
	073 Move X0, X21
	074 Move X1, X20
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X3, [X8]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move W2, W31
	081 Move X30, [X31+48]
	082 Move X23, [X31+56]
	083 Call 0x21A28B4, X0, X1, X2
	084 Return 
	085 Call 0x1C17F20

