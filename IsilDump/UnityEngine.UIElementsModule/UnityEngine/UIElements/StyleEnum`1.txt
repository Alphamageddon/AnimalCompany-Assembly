Type: UnityEngine.UIElements.StyleEnum`1

Method: T get_value()

Disassembly:
	0x0266F940 LDP X20, X19, [X31 + 0x50]
	0x0266F944 LDP X22, X21, [X31 + 0x40]
	0x0266F948 LDP X24, X23, [X31 + 0x30]
	0x0266F94C LDP X26, X25, [X31 + 0x20]
	0x0266F950 LDP X28, X27, [X31 + 0x10]
	0x0266F954 LDP X29, X30, [X31], #0x60

ISIL:
	001 Move W8, [X0+4]
	002 Compare W8, 0
	003 JumpIfEqual {6}
	004 Move W0, W31
	005 Return X0
	006 Move W0, [X0]
	007 Return X0

Method: UnityEngine.UIElements.StyleKeyword get_keyword()

Disassembly:
	0x0266F958 RET
	0x0266F95C BL 0x3EB1B20

ISIL:
	001 Move W0, [X0+4]
	002 Return X0

Method: System.Void .ctor(T v)

Disassembly:
	0x0266F960 STP X29, X30, [X31 - 0x50]!
	0x0266F964 STP X26, X25, [X31 + 0x10]
	0x0266F968 STP X24, X23, [X31 + 0x20]
	0x0266F96C STP X22, X21, [X31 + 0x30]
	0x0266F970 STP X20, X19, [X31 + 0x40]
	0x0266F974 ADD X29, X31, 0x0
	0x0266F978 SUB X31, X31, 0x20
	0x0266F97C MRS X26, 0xC000
	0x0266F980 LDR X8, [X26 + 0x28]
	0x0266F984 MOV X21, X2
	0x0266F988 MOV X23, X1
	0x0266F98C MOV X24, X0
	0x0266F990 STUR X8, [X29 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move W19, W1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {14}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move [X20], W19
	015 Move [X20+4], W31
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 

Method: System.Void .ctor(UnityEngine.UIElements.StyleKeyword keyword)

Disassembly:
	0x0266F994 LDR X19, [X2 + 0x20]
	0x0266F998 LDRB W8, [X19 + 0x135]
	0x0266F99C TBNZ X8, 0x0, 0x266F9B0
	0x0266F9A0 MOV X0, X19
	0x0266F9A4 BL 0x1C5C684
	0x0266F9A8 LDR X19, [X21 + 0x20]
	0x0266F9AC B 0x266F9B4
	0x0266F9B0 MOV X0, X19
	0x0266F9B4 LDR X8, [X0 + 0xC0]
	0x0266F9B8 LDR X8, [X8]
	0x0266F9BC LDR W25, [X8 + 0xFC]
	0x0266F9C0 ADD X8, X31, 0x0
	0x0266F9C4 ADD X9, X25, 0xF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move W19, W1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {14}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move [X20], W31
	015 Move [X20+4], W19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 

Method: System.Void .ctor(T v, UnityEngine.UIElements.StyleKeyword keyword)

Disassembly:
	0x0266F9C8 AND X9, X9, 0x1FFFFFFFF
	0x0266F9CC SUB X20, X8, X9

ISIL:
	001 Move [X0], W1
	002 Move [X0+4], W2
	003 Return 

Method: System.Boolean op_Equality(UnityEngine.UIElements.StyleEnum`1<T> lhs, UnityEngine.UIElements.StyleEnum`1<T> rhs)

Disassembly:
	0x0266F9D0 ADD X31, X20, 0x0
	0x0266F9D4 ADD X8, X31, 0x0
	0x0266F9D8 SUB X22, X8, X9
	0x0266F9DC ADD X31, X22, 0x0
	0x0266F9E0 MOV X0, X20
	0x0266F9E4 MOV X1, X23
	0x0266F9E8 MOV X2, X25
	0x0266F9EC BL 0x3EB1AC0
	0x0266F9F0 MOV X0, X22
	0x0266F9F4 MOV X1, X24
	0x0266F9F8 MOV X2, X25
	0x0266F9FC BL 0x3EB1AC0
	0x0266FA00 ADD X8, X19, 0x135
	0x0266FA04 LDRH W8, [X8]
	0x0266FA08 TBNZ X8, 0x0, 0x266FA24
	0x0266FA0C MOV X0, X19
	0x0266FA10 BL 0x1C5C684
	0x0266FA14 LDR X19, [X21 + 0x20]
	0x0266FA18 ADD X8, X19, 0x135

ISIL:
	001 Move X8, X0
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFFFFFF
	004 Move X9, X1
	005 ShiftRight X9, 32
	006 And X9, X9, 0x7FFFFFFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move [X31-32], X30
	009 Move [X31+16], X20
	010 Move [X31+24], X19
	011 Move X20, X0
	012 Move X0, [X2+32]
	013 Move X19, X1
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Move X30, [X31+32]
	025 Return X0
	026 Move W0, W31
	027 Return X0

Method: System.Boolean op_Inequality(UnityEngine.UIElements.StyleEnum`1<T> lhs, UnityEngine.UIElements.StyleEnum`1<T> rhs)

Disassembly:
	0x0266FA1C LDRH W8, [X8]
	0x0266FA20 B 0x266FA28
	0x0266FA24 MOV X0, X19
	0x0266FA28 LDR X9, [X0 + 0xC0]
	0x0266FA2C LDR X9, [X9 + 0x28]
	0x0266FA30 LDR X21, [X9]
	0x0266FA34 TBNZ X8, 0x0, 0x266FA44
	0x0266FA38 MOV X0, X19
	0x0266FA3C BL 0x1C5C684
	0x0266FA40 MOV X19, X0
	0x0266FA44 LDR X8, [X19 + 0xC0]
	0x0266FA48 SUB X3, X29, 0x20
	0x0266FA4C SUB X4, X29, 0xC
	0x0266FA50 MOV X0, X21
	0x0266FA54 LDR X1, [X8 + 0x28]
	0x0266FA58 STP X20, X22, [X29 - 0x20]
	0x0266FA5C MOV X2, X31
	0x0266FA60 LDR X8, [X1 + 0x10]
	0x0266FA64 BLR X8
	0x0266FA68 LDURB W8, [X29 - 0xC]
	0x0266FA6C LDR X9, [X26 + 0x28]
	0x0266FA70 LDUR X10, [X29 - 0x8]
	0x0266FA74 CMP W8, 0x0
	0x0266FA78 CSET W0, NE
	0x0266FA7C CMP X9, X10
	0x0266FA80 B.NE 0x266FAA0
	0x0266FA84 ADD X31, X29, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X9, X20
	016 ShiftRight X9, 32
	017 And X9, X9, 0x7FFFFFFF
	018 Move X10, X19
	019 ShiftRight X10, 32
	020 And X10, X10, 0x7FFFFFFF
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, [X8+192]
	023 Move X8, [X8+40]
	024 Move X0, [X8+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move W0, 1
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0

Method: UnityEngine.UIElements.StyleEnum`1<T> op_Implicit(UnityEngine.UIElements.StyleKeyword keyword)

Disassembly:
	0x0266FA88 LDP X20, X19, [X31 + 0x40]
	0x0266FA8C LDP X22, X21, [X31 + 0x30]
	0x0266FA90 LDP X24, X23, [X31 + 0x20]
	0x0266FA94 LDP X26, X25, [X31 + 0x10]
	0x0266FA98 LDP X29, X30, [X31], #0x50
	0x0266FA9C RET
	0x0266FAA0 BL 0x3EB1B20
	0x0266FAA4 STP X29, X30, [X31 - 0x60]!
	0x0266FAA8 STR X27, [X31 + 0x10]
	0x0266FAAC STP X26, X25, [X31 + 0x20]
	0x0266FAB0 STP X24, X23, [X31 + 0x30]
	0x0266FAB4 STP X22, X21, [X31 + 0x40]
	0x0266FAB8 STP X20, X19, [X31 + 0x50]
	0x0266FABC ADD X29, X31, 0x0
	0x0266FAC0 SUB X31, X31, 0x20
	0x0266FAC4 MRS X26, 0xC000
	0x0266FAC8 LDR X8, [X26 + 0x28]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move W19, W0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {13}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Move X8, X0
	013 Move X8, [X8+192]
	014 Move X8, [X8+48]
	015 Move X0, [X8+32]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Move X0, X19
	023 ShiftRight X0, 32
	024 And X0, X0, 0x7FFFFFFF
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Return X0

Method: UnityEngine.UIElements.StyleEnum`1<T> op_Implicit(T v)

Disassembly:
	0x0266FACC MOV X20, X2
	0x0266FAD0 MOV X22, X1
	0x0266FAD4 MOV X19, X0
	0x0266FAD8 STUR X8, [X29 - 0x8]
	0x0266FADC LDR X25, [X2 + 0x20]
	0x0266FAE0 ADD X8, X25, 0x135
	0x0266FAE4 LDRH W27, [X8]
	0x0266FAE8 TBNZ X27, 0x0, 0x266FB04
	0x0266FAEC MOV X0, X25
	0x0266FAF0 BL 0x1C5C684
	0x0266FAF4 LDR X25, [X20 + 0x20]
	0x0266FAF8 ADD X8, X25, 0x135
	0x0266FAFC LDRH W27, [X8]
	0x0266FB00 B 0x266FB08
	0x0266FB04 MOV X0, X25
	0x0266FB08 LDR X8, [X0 + 0xC0]
	0x0266FB0C LDR X8, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move W19, W0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {13}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Move X8, X0
	013 Move X8, [X8+192]
	014 Move X8, [X8+56]
	015 Move X0, [X8+32]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Move W0, W19
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Return X0

Method: System.Boolean Equals(UnityEngine.UIElements.StyleEnum`1<T> other)

Disassembly:
	0x0266FB10 LDR W23, [X8 + 0xFC]
	0x0266FB14 ADD X8, X31, 0x0
	0x0266FB18 ADD X9, X23, 0xF
	0x0266FB1C AND X9, X9, 0x1FFFFFFFF
	0x0266FB20 SUB X21, X8, X9
	0x0266FB24 ADD X31, X21, 0x0
	0x0266FB28 ADD X8, X31, 0x0
	0x0266FB2C SUB X24, X8, X9
	0x0266FB30 ADD X31, X24, 0x0
	0x0266FB34 MOV X0, X24
	0x0266FB38 MOV W1, W31
	0x0266FB3C MOV X2, X23
	0x0266FB40 BL 0x3EB1B10
	0x0266FB44 TBNZ X27, 0x0, 0x266FB54
	0x0266FB48 MOV X0, X25
	0x0266FB4C BL 0x1C5C684
	0x0266FB50 MOV X25, X0
	0x0266FB54 LDR X8, [X25 + 0xC0]
	0x0266FB58 LDR X0, [X8]
	0x0266FB5C LDRB W8, [X0 + 0x135]
	0x0266FB60 TBNZ X8, 0x0, 0x266FB68
	0x0266FB64 BL 0x1C5C684
	0x0266FB68 CBZ X22, 0x266FB78
	0x0266FB6C LDR X8, [X22]
	0x0266FB70 CMP X8, X0
	0x0266FB74 B.EQ 0x266FB80

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, X0
	005 Move X0, [X2+32]
	006 Move X20, [X8]
	007 Move X19, X1
	008 Move W9, [X0+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {14}
	013 Call 0x1C5D684
	014 Move X8, X19
	015 ShiftRight X8, 32
	016 And X8, X8, 0x7FFFFFFF
	017 Move X9, X20
	018 ShiftRight X9, 32
	019 And X9, X9, 0x7FFFFFFF
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, [X0+192]
	022 Move X8, [X8+40]
	023 Move X0, [X8+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move W0, W31
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0266FB78 MOV W0, W31
	0x0266FB7C B 0x266FC60
	0x0266FB80 LDR X0, [X20 + 0x20]
	0x0266FB84 LDRB W8, [X0 + 0x135]
	0x0266FB88 TBNZ X8, 0x0, 0x266FB90
	0x0266FB8C BL 0x1C5C684
	0x0266FB90 LDR X8, [X0 + 0xC0]
	0x0266FB94 LDR X1, [X8]
	0x0266FB98 LDRB W8, [X1 + 0x135]
	0x0266FB9C TBNZ X8, 0x0, 0x266FBAC
	0x0266FBA0 MOV X0, X1
	0x0266FBA4 BL 0x1C5C684
	0x0266FBA8 MOV X1, X0
	0x0266FBAC LDR X8, [X22]
	0x0266FBB0 LDR X9, [X1 + 0x40]
	0x0266FBB4 MOV X0, X22
	0x0266FBB8 LDR X8, [X8 + 0x40]
	0x0266FBBC CMP X8, X9
	0x0266FBC0 B.NE 0x266FC90
	0x0266FBC4 BL 0x1C16E08
	0x0266FBC8 MOV X1, X0
	0x0266FBCC MOV X0, X24
	0x0266FBD0 MOV X2, X23
	0x0266FBD4 BL 0x3EB1AC0
	0x0266FBD8 MOV X0, X21
	0x0266FBDC MOV X1, X24
	0x0266FBE0 MOV X2, X23
	0x0266FBE4 BL 0x3EB1AC0
	0x0266FBE8 LDR X8, [X20 + 0x20]
	0x0266FBEC ADD X9, X8, 0x135
	0x0266FBF0 LDRH W9, [X9]
	0x0266FBF4 TBNZ X9, 0x0, 0x266FC10
	0x0266FBF8 MOV X0, X8
	0x0266FBFC BL 0x1C5C684
	0x0266FC00 LDR X8, [X20 + 0x20]
	0x0266FC04 ADD X9, X8, 0x135
	0x0266FC08 LDRH W9, [X9]
	0x0266FC0C B 0x266FC14
	0x0266FC10 MOV X0, X8
	0x0266FC14 LDR X10, [X0 + 0xC0]
	0x0266FC18 LDR X10, [X10 + 0x40]
	0x0266FC1C LDR X20, [X10]
	0x0266FC20 TBNZ X9, 0x0, 0x266FC30
	0x0266FC24 MOV X0, X8
	0x0266FC28 BL 0x1C5C684
	0x0266FC2C MOV X8, X0
	0x0266FC30 LDR X8, [X8 + 0xC0]
	0x0266FC34 SUB X3, X29, 0x18
	0x0266FC38 SUB X4, X29, 0xC
	0x0266FC3C MOV X0, X20
	0x0266FC40 LDR X1, [X8 + 0x40]
	0x0266FC44 STUR X21, [X29 - 0x18]
	0x0266FC48 MOV X2, X19
	0x0266FC4C LDR X8, [X1 + 0x10]
	0x0266FC50 BLR X8
	0x0266FC54 LDURB W8, [X29 - 0xC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X20, X2
	007 Move X21, X1
	008 Move X19, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Compare X21, 0
	026 JumpIfEqual {29}
	027 Move X8, [X21]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move W0, W31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0
	035 Move X0, [X20+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X1, [X8]
	044 Move W8, [X1+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {52}
	049 Move X0, X1
	050 Call 0x1C5D684
	051 Move X1, X0
	052 Move X8, [X21]
	053 Move X9, [X1+64]
	054 Move X0, X21
	055 Move X8, [X8+64]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Call 0x1C17E08
	058 Move X8, X0
	059 Move X0, [X20+32]
	060 Move X20, [X8]
	061 Move W9, [X0+309]
	062 Move TEMP, X9
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X8, [X0+192]
	068 Move X0, X19
	069 Move X1, X20
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X2, [X8+64]
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Call 0x266FB10, X0, X1
	076 Return X0
	077 Call 0x1C181E0

Method: System.Int32 GetHashCode()

Disassembly:
	0x0266FC58 CMP W8, 0x0
	0x0266FC5C CSET W0, NE
	0x0266FC60 LDR X8, [X26 + 0x28]
	0x0266FC64 LDUR X9, [X29 - 0x8]
	0x0266FC68 CMP X8, X9
	0x0266FC6C B.NE 0x266FC94
	0x0266FC70 ADD X31, X29, 0x0
	0x0266FC74 LDP X20, X19, [X31 + 0x50]
	0x0266FC78 LDP X22, X21, [X31 + 0x40]
	0x0266FC7C LDP X24, X23, [X31 + 0x30]
	0x0266FC80 LDP X26, X25, [X31 + 0x20]
	0x0266FC84 LDR X27, [X31 + 0x10]
	0x0266FC88 LDP X29, X30, [X31], #0x60
	0x0266FC8C RET
	0x0266FC90 BL 0x1C171E0
	0x0266FC94 BL 0x3EB1B20
	0x0266FC98 STP X29, X30, [X31 - 0x40]!
	0x0266FC9C STR X23, [X31 + 0x10]
	0x0266FCA0 STP X22, X21, [X31 + 0x20]
	0x0266FCA4 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X1+32]
	006 Move W20, [X19]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Move X8, [X0+192]
	014 Move X0, [X8+72]
	015 Move X8, [X0+56]
	016 Compare X8, 0
	017 JumpIfNotEqual {19}
	018 Call 0x1C5D6E0
	019 Move W8, [X19+4]
	020 Move W9, 397
	021 Multiply W9, W20, W9
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Xor W0, W8, W9
	025 Move X30, [X31+32]
	026 Return X0

Method: System.String ToString()

Disassembly:
	0x0266FCA8 ADD X29, X31, 0x0
	0x0266FCAC SUB X31, X31, 0x20
	0x0266FCB0 MRS X23, 0xC000
	0x0266FCB4 LDR X8, [X23 + 0x28]
	0x0266FCB8 MOV X20, X1
	0x0266FCBC MOV X19, X0
	0x0266FCC0 STUR X8, [X29 - 0x8]
	0x0266FCC4 LDR X8, [X1 + 0x20]
	0x0266FCC8 ADD X9, X8, 0x135
	0x0266FCCC LDRH W9, [X9]
	0x0266FCD0 TBNZ X9, 0x0, 0x266FCEC
	0x0266FCD4 MOV X0, X8
	0x0266FCD8 BL 0x1C5C684
	0x0266FCDC LDR X8, [X20 + 0x20]
	0x0266FCE0 ADD X9, X8, 0x135
	0x0266FCE4 LDRH W9, [X9]
	0x0266FCE8 B 0x266FCF0
	0x0266FCEC MOV X0, X8
	0x0266FCF0 LDR X10, [X0 + 0xC0]
	0x0266FCF4 LDR X10, [X10 + 0x8]
	0x0266FCF8 LDR W22, [X10 + 0xFC]
	0x0266FCFC ADD X10, X31, 0x0
	0x0266FD00 ADD X11, X22, 0xF
	0x0266FD04 AND X11, X11, 0x1FFFFFFFF
	0x0266FD08 SUB X21, X10, X11
	0x0266FD0C ADD X31, X21, 0x0
	0x0266FD10 TBNZ X9, 0x0, 0x266FD20

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X1
	006 Move [X31+8], X8
	007 Move X0, [X1+32]
	008 Move W8, [X0+309]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {14}
	013 Call 0x1C5D684
	014 Move X8, [X0+192]
	015 Add X1, X31, 8
	016 Move X0, [X8]
	017 Call 0x1C17E04
	018 Move X8, [X19+32]
	019 Move X19, X0
	020 Move W9, [X8+309]
	021 Move TEMP, X9
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X8
	026 Call 0x1C5D684
	027 Move X8, X0
	028 Move X8, [X8+192]
	029 Move X0, X19
	030 Move X1, [X8+80]
	031 Call StyleValueExtensions.DebugString, X0
	032 Move X30, [X31+16]
	033 Move X19, [X31+24]
	034 Add X31, X31, 32
	035 Return X0

