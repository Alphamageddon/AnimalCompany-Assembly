Type: UnityEngine.UIElements.BaseListView

Method: System.Boolean get_showBoundCollectionSize()

Disassembly:
	0x03CFB0D4 ADD X8, X8, W9, 0x4, SXTW
	0x03CFB0D8 ADD X0, X8, 0x138

ISIL:
	001 Move W0, [X0+1196]
	002 Return X0

Method: System.Void set_showBoundCollectionSize(System.Boolean value)

Disassembly:
	0x03CFB0DC LDP X8, X2, [X0]
	0x03CFB0E0 MOV X0, X20
	0x03CFB0E4 MOV X1, X21
	0x03CFB0E8 BLR X8
	0x03CFB0EC CBZ X0, 0x3CFB1E4
	0x03CFB0F0 ADRP X10, 0x423000
	0x03CFB0F4 LDR X8, [X0]

ISIL:
	001 Move W9, [X0+1196]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Return 
	005 Move [X0+1196], W8

Method: System.Boolean get_showFoldoutHeader()

Disassembly:
	0x03CFB3F0 LDP X20, X19, [X31 + 0x10]
	0x03CFB3F4 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move W0, [X0+1197]
	002 Return X0

Method: System.Void set_showFoldoutHeader(System.Boolean value)

Disassembly:
	0x03CFB3F8 RET
	0x03CFB3FC BL 0x1C16F20
	0x03CFB400 LDR X0, [X0 + 0x4F0]
	0x03CFB404 RET
	0x03CFB408 STP X30, X21, [X31 - 0x20]!
	0x03CFB40C STP X20, X19, [X31 + 0x10]
	0x03CFB410 ADRP X20, 0x6EC000
	0x03CFB414 ADRP X21, 0x467000
	0x03CFB418 LDRB W8, [X20 + 0x7DA]
	0x03CFB41C LDR X21, [X21 + 0xE20]
	0x03CFB420 MOV X19, X0
	0x03CFB424 TBNZ X8, 0x0, 0x3CFB43C
	0x03CFB428 ADRP X0, 0x467000
	0x03CFB42C LDR X0, [X0 + 0xE20]
	0x03CFB430 BL 0x1C16CF4
	0x03CFB434 MOVZ W8, 0x1
	0x03CFB438 STRB W8, [X20 + 0x7DA]
	0x03CFB43C LDR X1, [X21]
	0x03CFB440 MOV X0, X19
	0x03CFB444 LDP X20, X19, [X31 + 0x10]
	0x03CFB448 LDP X30, X21, [X31], #0x20
	0x03CFB44C B 0x219FCE8
	0x03CFB450 STP X30, X21, [X31 - 0x20]!
	0x03CFB454 STP X20, X19, [X31 + 0x10]
	0x03CFB458 ADRP X21, 0x6EC000
	0x03CFB45C LDRB W8, [X21 + 0x7DB]
	0x03CFB460 MOV X20, X1
	0x03CFB464 MOV X19, X0
	0x03CFB468 TBNZ X8, 0x0, 0x3CFB4B0
	0x03CFB46C ADRP X0, 0x467000
	0x03CFB470 LDR X0, [X0 + 0xA90]
	0x03CFB474 BL 0x1C16CF4
	0x03CFB478 ADRP X0, 0x3F9000
	0x03CFB47C LDR X0, [X0 + 0xE70]
	0x03CFB480 BL 0x1C16CF4
	0x03CFB484 ADRP X0, 0x467000
	0x03CFB488 LDR X0, [X0 + 0xE28]
	0x03CFB48C BL 0x1C16CF4
	0x03CFB490 ADRP X0, 0x467000
	0x03CFB494 LDR X0, [X0 + 0xE30]
	0x03CFB498 BL 0x1C16CF4
	0x03CFB49C ADRP X0, 0x467000
	0x03CFB4A0 LDR X0, [X0 + 0xE38]
	0x03CFB4A4 BL 0x1C16CF4
	0x03CFB4A8 MOVZ W8, 0x1
	0x03CFB4AC STRB W8, [X21 + 0x7DB]
	0x03CFB4B0 LDR X8, [X19 + 0x508]
	0x03CFB4B4 CBNZ X8, 0x3CFB4E8
	0x03CFB4B8 ADRP X8, 0x467000
	0x03CFB4BC LDR X8, [X8 + 0xA90]
	0x03CFB4C0 LDR X0, [X8]
	0x03CFB4C4 BL 0x1C16F10
	0x03CFB4C8 ADRP X8, 0x467000
	0x03CFB4CC LDR X8, [X8 + 0xE28]
	0x03CFB4D0 MOV X1, X19
	0x03CFB4D4 MOV X3, X31
	0x03CFB4D8 MOV X21, X0
	0x03CFB4DC LDR X2, [X8]
	0x03CFB4E0 BL 0x2A6B948
	0x03CFB4E4 STR X21, [X19 + 0x508]
	0x03CFB4E8 LDR X8, [X19 + 0x510]
	0x03CFB4EC CBNZ X8, 0x3CFB520
	0x03CFB4F0 ADRP X8, 0x467000
	0x03CFB4F4 LDR X8, [X8 + 0xA90]
	0x03CFB4F8 LDR X0, [X8]
	0x03CFB4FC BL 0x1C16F10
	0x03CFB500 ADRP X8, 0x467000
	0x03CFB504 LDR X8, [X8 + 0xE30]
	0x03CFB508 MOV X1, X19
	0x03CFB50C MOV X3, X31
	0x03CFB510 MOV X21, X0
	0x03CFB514 LDR X2, [X8]
	0x03CFB518 BL 0x2A6B948
	0x03CFB51C STR X21, [X19 + 0x510]
	0x03CFB520 LDR X8, [X19 + 0x518]
	0x03CFB524 CBNZ X8, 0x3CFB558
	0x03CFB528 ADRP X8, 0x3F9000
	0x03CFB52C LDR X8, [X8 + 0xE70]
	0x03CFB530 LDR X0, [X8]
	0x03CFB534 BL 0x1C16F10
	0x03CFB538 ADRP X8, 0x467000
	0x03CFB53C LDR X8, [X8 + 0xE38]
	0x03CFB540 MOV X1, X19
	0x03CFB544 MOV X3, X31
	0x03CFB548 MOV X21, X0
	0x03CFB54C LDR X2, [X8]
	0x03CFB550 BL 0x3314368
	0x03CFB554 STR X21, [X19 + 0x518]
	0x03CFB558 MOV X0, X19
	0x03CFB55C BL 0x3CFAD24
	0x03CFB560 CBZ X0, 0x3CFB5A0
	0x03CFB564 MOV X0, X19
	0x03CFB568 BL 0x3CFAD24
	0x03CFB56C CBZ X0, 0x3CFB60C
	0x03CFB570 LDR X1, [X19 + 0x508]
	0x03CFB574 BL 0x3CEEF38
	0x03CFB578 MOV X0, X19
	0x03CFB57C BL 0x3CFAD24
	0x03CFB580 CBZ X0, 0x3CFB60C
	0x03CFB584 LDR X1, [X19 + 0x510]
	0x03CFB588 BL 0x3CEF098
	0x03CFB58C MOV X0, X19
	0x03CFB590 BL 0x3CFAD24
	0x03CFB594 CBZ X0, 0x3CFB60C
	0x03CFB598 LDR X1, [X19 + 0x518]
	0x03CFB59C BL 0x3CEEDEC
	0x03CFB5A0 MOV X0, X19
	0x03CFB5A4 MOV X1, X20
	0x03CFB5A8 MOV X2, X31
	0x03CFB5AC BL 0x3CFD060
	0x03CFB5B0 MOV X0, X19
	0x03CFB5B4 BL 0x3CFAD24
	0x03CFB5B8 CBZ X0, 0x3CFB600
	0x03CFB5BC MOV X0, X19
	0x03CFB5C0 BL 0x3CFAD24
	0x03CFB5C4 CBZ X0, 0x3CFB60C
	0x03CFB5C8 LDR X1, [X19 + 0x508]
	0x03CFB5CC BL 0x3CEEE88
	0x03CFB5D0 MOV X0, X19
	0x03CFB5D4 BL 0x3CFAD24
	0x03CFB5D8 CBZ X0, 0x3CFB60C
	0x03CFB5DC LDR X1, [X19 + 0x510]
	0x03CFB5E0 BL 0x3CEEFE8
	0x03CFB5E4 MOV X0, X19
	0x03CFB5E8 BL 0x3CFAD24
	0x03CFB5EC CBZ X0, 0x3CFB60C
	0x03CFB5F0 LDR X1, [X19 + 0x518]
	0x03CFB5F4 LDP X20, X19, [X31 + 0x10]
	0x03CFB5F8 LDP X30, X21, [X31], #0x20
	0x03CFB5FC B 0x3CEED50
	0x03CFB600 LDP X20, X19, [X31 + 0x10]
	0x03CFB604 LDP X30, X21, [X31], #0x20
	0x03CFB608 RET
	0x03CFB60C BL 0x1C16F20
	0x03CFB610 LDR X8, [X0 + 0x4B8]
	0x03CFB614 CBZ X8, 0x3CFB628
	0x03CFB618 LDR X3, [X8 + 0x18]
	0x03CFB61C LDR X0, [X8 + 0x40]
	0x03CFB620 LDR X2, [X8 + 0x28]
	0x03CFB624 BR X3
	0x03CFB628 RET
	0x03CFB62C LDR X8, [X0 + 0x4C0]
	0x03CFB630 CBZ X8, 0x3CFB644
	0x03CFB634 LDR X3, [X8 + 0x18]
	0x03CFB638 LDR X0, [X8 + 0x40]
	0x03CFB63C LDR X2, [X8 + 0x28]
	0x03CFB640 BR X3
	0x03CFB644 RET
	0x03CFB648 STP X30, X21, [X31 - 0x20]!
	0x03CFB64C STP X20, X19, [X31 + 0x10]
	0x03CFB650 ADRP X20, 0x6EC000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6ED000
	007 Move W8, [X22+2001]
	008 Move W20, W1
	009 Move X19, X0
	010 And W21, W1, 1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x468000
	016 Move X0, [X0+2712]
	017 Call 0x1C17CF4
	018 Move X0, 0x468000
	019 Move X0, [X0+3208]
	020 Call 0x1C17CF4
	021 Move X0, 0x468000
	022 Move X0, [X0+2936]
	023 Call 0x1C17CF4
	024 Move X0, 0x422000
	025 Move X0, [X0+2096]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2001], W8
	029 Move [X31+8], X31
	030 Move W8, [X19+1197]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move [X19+1197], W21
	033 Move X22, 0x468000
	034 Move X22, [X22+2712]
	035 Move X0, [X22]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X22]
	041 Move X8, [X0+184]
	042 And W2, W20, 1
	043 Move X0, X19
	044 Move X3, X31
	045 Move X1, [X8+120]
	046 Call VisualElement.EnableInClassList, X0, X1, X2
	047 Move W8, [X19+1197]
	048 Move X0, [X19+1240]
	049 Compare W8, 0
	050 JumpIfEqual {144}
	051 Compare X0, 0
	052 JumpIfNotEqual {165}
	053 Move X21, 0x468000
	054 Move X21, [X21+3208]
	055 Move X0, [X21]
	056 Call 0x1C17F10
	057 Move X1, X31
	058 Move X20, X0
	059 Call Foldout..ctor, X0
	060 Move X0, [X22]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Compare X20, 0
	066 JumpIfEqual {171}
	067 Move X8, [X22]
	068 Move X0, X20
	069 Move X2, X31
	070 Move X8, [X8+184]
	071 Move X1, [X8+88]
	072 Call VisualElement.set_name, X0, X1
	073 Move X1, [X19+1200]
	074 Move X0, X20
	075 Move X2, X31
	076 Call Foldout.set_text, X0, X1
	077 Move [X19+1240], X20
	078 Move X0, [X21]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X21]
	084 Move X8, 0x422000
	085 Move X8, [X8+2096]
	086 Move X9, [X0+184]
	087 Move X8, [X8]
	088 Move X21, [X9+8]
	089 Move W10, [X8+224]
	090 Compare W10, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X8
	093 Call 0x1C17DFC
	094 Move X8, 0x468000
	095 Move X8, [X8+2936]
	096 Move X0, X20
	097 Move X1, X31
	098 Move X2, X21
	099 Move X3, [X8]
	100 Call 0x22A27C4, X0, X1, X2
	101 Compare X0, 0
	102 JumpIfEqual {171}
	103 Move X20, [X0+1104]
	104 Compare X20, 0
	105 JumpIfEqual {171}
	106 Move W8, [X20+96]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X8, [X20]
	109 Move X0, X20
	110 Move X9, [X8+408]
	111 Move X1, [X8+416]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move X8, [X20]
	114 Move W9, 1
	115 Move [X20+96], W9
	116 Move X0, X20
	117 Move X9, [X8+392]
	118 Move X1, [X8+400]
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X0, [X19+1240]
	121 Compare X0, 0
	122 JumpIfEqual {171}
	123 Move X8, [X22]
	124 Move X2, X31
	125 Move X8, [X8+184]
	126 Move X1, [X8+88]
	127 Call VisualElement.AddToClassList, X0, X1
	128 Move X1, [X19+1240]
	129 Compare X1, 0
	130 JumpIfEqual {171}
	131 Move W8, 1
	132 Move [X1+36], W8
	133 Move X8, [X19+888]
	134 Add X0, X31, 8
	135 Move X2, X31
	136 Move [X31+8], X8
	137 Call Hierarchy.Add, X0, X1
	138 Move X0, [X19+1240]
	139 Compare X0, 0
	140 JumpIfEqual {171}
	141 Move X1, [X19+1088]
	142 Move X2, X31
	143 Call VisualElement.Add, X0, X1
	144 Compare X0, 0
	145 JumpIfEqual {155}
	146 Move X1, X31
	147 Call VisualElement.RemoveFromHierarchy, X0
	148 Move X8, [X19+888]
	149 Move [X19+1240], X31
	150 Add X0, X31, 8
	151 Move X2, X31
	152 Move [X31+8], X8
	153 Move X1, [X19+1088]
	154 Call Hierarchy.Add, X0, X1
	155 Move X0, X19
	156 Call BaseListView.SetupArraySizeField, X0
	157 Move X0, X19
	158 Call BaseListView.UpdateListViewLabel, X0
	159 Move X8, [X19+1264]
	160 Compare X8, 0
	161 JumpIfEqual {165}
	162 Move W1, 1
	163 Move X0, X19
	164 Call BaseListView.EnableFooter, X0, X1
	165 Move X20, [X31+32]
	166 Move X19, [X31+40]
	167 Move X22, [X31+16]
	168 Move X21, [X31+24]
	169 Move X30, [X31+48]
	170 Return 
	171 Call 0x1C17F20

Method: System.Void SetupArraySizeField()

Disassembly:
	0x03CFB0F8 LDR X10, [X10 + 0xAB8]
	0x03CFB0FC MOV X20, X0
	0x03CFB100 LDRH W9, [X8 + 0x12E]
	0x03CFB104 LDR X1, [X10]
	0x03CFB108 CBZ X9, 0x3CFB12C
	0x03CFB10C LDR X10, [X8 + 0xB0]
	0x03CFB110 ADD X10, X10, 0x8
	0x03CFB114 LDUR X11, [X10 - 0x8]
	0x03CFB118 CMP X11, X1
	0x03CFB11C B.EQ 0x3CFB13C
	0x03CFB120 SUBS X9, X9, 0x1
	0x03CFB124 ADD X10, X10, 0x10
	0x03CFB128 B.NE 0x3CFB114
	0x03CFB12C MOVZ W2, 0x2
	0x03CFB130 MOV X0, X20
	0x03CFB134 BL 0x1C5C788
	0x03CFB138 B 0x3CFB14C
	0x03CFB13C LDR W9, [X10]
	0x03CFB140 ADD W9, W9, 0x2
	0x03CFB144 ADD X8, X8, W9, 0x4, SXTW
	0x03CFB148 ADD X0, X8, 0x138
	0x03CFB14C LDP X8, X2, [X0]
	0x03CFB150 MOVZ W1, 0x64
	0x03CFB154 MOV X0, X20
	0x03CFB158 BLR X8
	0x03CFB15C B 0x3CFB19C
	0x03CFB160 LDR W9, [X10]
	0x03CFB164 ADD W9, W9, 0x1
	0x03CFB168 ADD X8, X8, W9, 0x4, SXTW
	0x03CFB16C ADD X0, X8, 0x138
	0x03CFB170 LDP X8, X1, [X0]
	0x03CFB174 MOV X0, X20
	0x03CFB178 BLR X8
	0x03CFB17C SUB W1, W0, 0x1
	0x03CFB180 MOV X0, X19
	0x03CFB184 MOV X2, X31
	0x03CFB188 BL 0x3CFDD8C
	0x03CFB18C MOVN W1, 0x0
	0x03CFB190 MOV X0, X19
	0x03CFB194 MOV X2, X31
	0x03CFB198 BL 0x3CFDE14
	0x03CFB19C LDR X8, [X19]
	0x03CFB1A0 MOV X0, X19
	0x03CFB1A4 LDR X9, [X8 + 0x808]
	0x03CFB1A8 LDR X1, [X8 + 0x810]
	0x03CFB1AC BLR X9
	0x03CFB1B0 TBZ X0, 0x0, 0x3CFB1D8
	0x03CFB1B4 LDR X0, [X19 + 0x4E0]
	0x03CFB1B8 CBZ X0, 0x3CFB1D8
	0x03CFB1BC ADRP X8, 0x467000
	0x03CFB1C0 LDR X8, [X8 + 0xE10]
	0x03CFB1C4 LDP X20, X19, [X31 + 0x10]
	0x03CFB1C8 MOV W1, W31
	0x03CFB1CC LDR X2, [X8]
	0x03CFB1D0 LDP X30, X21, [X31], #0x20
	0x03CFB1D4 B 0x289A390
	0x03CFB1D8 LDP X20, X19, [X31 + 0x10]
	0x03CFB1DC LDP X30, X21, [X31], #0x20
	0x03CFB1E0 RET
	0x03CFB1E4 BL 0x1C16F20
	0x03CFB1E8 STP X30, X21, [X31 - 0x20]!
	0x03CFB1EC STP X20, X19, [X31 + 0x10]
	0x03CFB1F0 ADRP X21, 0x6EC000
	0x03CFB1F4 ADRP X20, 0x452000
	0x03CFB1F8 LDRB W8, [X21 + 0x7D8]
	0x03CFB1FC LDR X20, [X20 + 0xAA0]
	0x03CFB200 MOV X19, X0
	0x03CFB204 TBNZ X8, 0x0, 0x3CFB240
	0x03CFB208 ADRP X0, 0x467000
	0x03CFB20C LDR X0, [X0 + 0xE10]
	0x03CFB210 BL 0x1C16CF4
	0x03CFB214 ADRP X0, 0x452000
	0x03CFB218 LDR X0, [X0 + 0xAA0]
	0x03CFB21C BL 0x1C16CF4
	0x03CFB220 ADRP X0, 0x453000
	0x03CFB224 LDR X0, [X0 + 0x2A8]
	0x03CFB228 BL 0x1C16CF4
	0x03CFB22C ADRP X0, 0x3FF000
	0x03CFB230 LDR X0, [X0 + 0x2F0]
	0x03CFB234 BL 0x1C16CF4
	0x03CFB238 MOVZ W8, 0x1
	0x03CFB23C STRB W8, [X21 + 0x7D8]
	0x03CFB240 LDR X0, [X19 + 0x470]
	0x03CFB244 LDR X1, [X20]
	0x03CFB248 BL 0x21B23E0
	0x03CFB24C TBZ X0, 0x0, 0x3CFB2A0
	0x03CFB250 ADRP X20, 0x453000
	0x03CFB254 LDR X20, [X20 + 0x2A8]
	0x03CFB258 MOV X0, X19
	0x03CFB25C BL 0x3CFAD24
	0x03CFB260 LDR X8, [X19 + 0x470]
	0x03CFB264 LDR X1, [X20]
	0x03CFB268 MOV X20, X0
	0x03CFB26C MOV X0, X8
	0x03CFB270 BL 0x21D7880
	0x03CFB274 CBZ X20, 0x3CFB3FC
	0x03CFB278 LDR X8, [X20]
	0x03CFB27C MOV X1, X0
	0x03CFB280 MOV X0, X20
	0x03CFB284 LDR X9, [X8 + 0x2D8]
	0x03CFB288 LDR X2, [X8 + 0x2E0]
	0x03CFB28C BLR X9
	0x03CFB290 MOV X0, X19
	0x03CFB294 MOV X1, X31
	0x03CFB298 BL 0x3CFEB78
	0x03CFB29C B 0x3CFB3B4
	0x03CFB2A0 MOV X0, X19
	0x03CFB2A4 MOV X1, X31
	0x03CFB2A8 BL 0x3CFE9FC
	0x03CFB2AC CBZ X0, 0x3CFB3FC
	0x03CFB2B0 ADRP X21, 0x3FF000
	0x03CFB2B4 LDR X8, [X0]
	0x03CFB2B8 LDR X21, [X21 + 0x2F0]
	0x03CFB2BC MOV X20, X0
	0x03CFB2C0 LDRH W9, [X8 + 0x12E]
	0x03CFB2C4 LDR X1, [X21]
	0x03CFB2C8 CBZ X9, 0x3CFB2EC
	0x03CFB2CC LDR X10, [X8 + 0xB0]
	0x03CFB2D0 ADD X10, X10, 0x8
	0x03CFB2D4 LDUR X11, [X10 - 0x8]
	0x03CFB2D8 CMP X11, X1
	0x03CFB2DC B.EQ 0x3CFB2FC
	0x03CFB2E0 SUBS X9, X9, 0x1
	0x03CFB2E4 ADD X10, X10, 0x10
	0x03CFB2E8 B.NE 0x3CFB2D4
	0x03CFB2EC MOVZ W2, 0x1
	0x03CFB2F0 MOV X0, X20
	0x03CFB2F4 BL 0x1C5C788
	0x03CFB2F8 B 0x3CFB30C
	0x03CFB2FC LDR W9, [X10]
	0x03CFB300 ADD W9, W9, 0x1
	0x03CFB304 ADD X8, X8, W9, 0x4, SXTW
	0x03CFB308 ADD X0, X8, 0x138
	0x03CFB30C LDP X8, X1, [X0]
	0x03CFB310 MOV X0, X20
	0x03CFB314 BLR X8
	0x03CFB318 CMP W0, 0x1
	0x03CFB31C B.LT 0x3CFB3B4
	0x03CFB320 MOV X0, X19
	0x03CFB324 MOV X1, X31
	0x03CFB328 BL 0x3CFE9FC
	0x03CFB32C CBZ X0, 0x3CFB3FC
	0x03CFB330 LDR X8, [X0]
	0x03CFB334 LDR X1, [X21]
	0x03CFB338 MOV X20, X0
	0x03CFB33C LDRH W9, [X8 + 0x12E]
	0x03CFB340 CBZ X9, 0x3CFB364
	0x03CFB344 LDR X10, [X8 + 0xB0]
	0x03CFB348 ADD X10, X10, 0x8
	0x03CFB34C LDUR X11, [X10 - 0x8]
	0x03CFB350 CMP X11, X1
	0x03CFB354 B.EQ 0x3CFB374
	0x03CFB358 SUBS X9, X9, 0x1
	0x03CFB35C ADD X10, X10, 0x10
	0x03CFB360 B.NE 0x3CFB34C
	0x03CFB364 MOVZ W2, 0x1
	0x03CFB368 MOV X0, X20
	0x03CFB36C BL 0x1C5C788
	0x03CFB370 B 0x3CFB384
	0x03CFB374 LDR W9, [X10]
	0x03CFB378 ADD W9, W9, 0x1
	0x03CFB37C ADD X8, X8, W9, 0x4, SXTW
	0x03CFB380 ADD X0, X8, 0x138
	0x03CFB384 LDP X8, X1, [X0]
	0x03CFB388 MOV X0, X20
	0x03CFB38C BLR X8
	0x03CFB390 MOV W20, W0
	0x03CFB394 MOV X0, X19
	0x03CFB398 BL 0x3CFAD24
	0x03CFB39C CBZ X0, 0x3CFB3FC
	0x03CFB3A0 LDR X8, [X0]
	0x03CFB3A4 SUB W1, W20, 0x1
	0x03CFB3A8 LDR X9, [X8 + 0x2C8]
	0x03CFB3AC LDR X2, [X8 + 0x2D0]
	0x03CFB3B0 BLR X9
	0x03CFB3B4 LDR X8, [X19]
	0x03CFB3B8 MOV X0, X19
	0x03CFB3BC LDR X9, [X8 + 0x808]
	0x03CFB3C0 LDR X1, [X8 + 0x810]
	0x03CFB3C4 BLR X9
	0x03CFB3C8 TBZ X0, 0x0, 0x3CFB3F0
	0x03CFB3CC LDR X0, [X19 + 0x4E0]
	0x03CFB3D0 CBZ X0, 0x3CFB3F0
	0x03CFB3D4 ADRP X8, 0x467000
	0x03CFB3D8 LDR X8, [X8 + 0xE10]
	0x03CFB3DC LDP X20, X19, [X31 + 0x10]
	0x03CFB3E0 MOV W1, W31
	0x03CFB3E4 LDR X2, [X8]
	0x03CFB3E8 LDP X30, X21, [X31], #0x20
	0x03CFB3EC B 0x289A390

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x6ED000
	009 Move W8, [X20+2002]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {44}
	015 Move X0, 0x468000
	016 Move X0, [X0+3528]
	017 Call 0x1C17CF4
	018 Move X0, 0x468000
	019 Move X0, [X0+3536]
	020 Call 0x1C17CF4
	021 Move X0, 0x468000
	022 Move X0, [X0+2712]
	023 Call 0x1C17CF4
	024 Move X0, 0x424000
	025 Move X0, [X0+368]
	026 Call 0x1C17CF4
	027 Move X0, 0x424000
	028 Move X0, [X0+376]
	029 Call 0x1C17CF4
	030 Move X0, 0x3FB000
	031 Move X0, [X0+632]
	032 Call 0x1C17CF4
	033 Move X0, 0x424000
	034 Move X0, [X0+392]
	035 Call 0x1C17CF4
	036 Move X0, 0x468000
	037 Move X0, [X0+3544]
	038 Call 0x1C17CF4
	039 Move X0, 0x468000
	040 Move X0, [X0+3064]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+2002], W8
	044 Move [X31+8], X31
	045 Move W8, [X19+1196]
	046 Compare W8, 0
	047 JumpIfEqual {52}
	048 Move W8, [X19+1197]
	049 Compare W8, 0
	050 JumpIfEqual {58}
	051 Add X22, X19, 1248
	052 Add X22, X19, 1248
	053 Move X0, [X22]
	054 Compare X0, 0
	055 JumpIfEqual {204}
	056 Move X1, X31
	057 Call VisualElement.RemoveFromHierarchy, X0
	058 Move X8, 0x468000
	059 Move X8, [X8+3064]
	060 Move X1, X31
	061 Move X0, [X8]
	062 Call PropertyName.op_Implicit, X0
	063 And X1, X0, 0
	064 Move X0, X19
	065 Move X2, X31
	066 Call VisualElement.GetProperty, X0, X1
	067 Add X22, X19, 1248
	068 Compare X0, 0
	069 JumpIfEqual {53}
	070 Move X23, 0x468000
	071 Move X20, [X22]
	072 Move X23, [X23+2712]
	073 Compare X20, 0
	074 JumpIfNotEqual {133}
	075 Move X8, 0x424000
	076 Move X8, [X8+392]
	077 Move X0, [X8]
	078 Call 0x1C17F10
	079 Move X1, X31
	080 Move X20, X0
	081 Call TextField..ctor, X0
	082 Move X0, [X23]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Compare X20, 0
	088 JumpIfEqual {212}
	089 Move X8, [X23]
	090 Move X0, X20
	091 Move X2, X31
	092 Move X8, [X8+184]
	093 Move X1, [X8+96]
	094 Call VisualElement.set_name, X0, X1
	095 Move [X22], X20
	096 Move X8, [X23]
	097 Move X0, X20
	098 Move X2, X31
	099 Move X8, [X8+184]
	100 Move X1, [X8+96]
	101 Call VisualElement.AddToClassList, X0, X1
	102 Move X8, 0x424000
	103 Move X20, [X22]
	104 Move X8, [X8+368]
	105 Move X0, [X8]
	106 Call 0x1C17F10
	107 Move X8, 0x468000
	108 Move X8, [X8+3536]
	109 Move X1, X19
	110 Move X3, X31
	111 Move X21, X0
	112 Move X2, [X8]
	113 Call 0x2D0F824, X0, X1, X2
	114 Move X8, 0x424000
	115 Move X8, [X8+376]
	116 Move X0, X20
	117 Move X1, X21
	118 Move X2, [X8]
	119 Call INotifyValueChangedExtensions.RegisterValueChangedCallback, X0, X1
	120 Move X0, [X19+1248]
	121 Compare X0, 0
	122 JumpIfEqual {212}
	123 Move X8, 0x468000
	124 Move X8, [X8+3544]
	125 Move W1, 1
	126 Move W21, 1
	127 Move X2, [X8]
	128 Call TextInputBaseField`1<Object>.set_isDelayed, X0, X1
	129 Move X20, [X22]
	130 Compare X20, 0
	131 JumpIfEqual {212}
	132 Move [X20+32], W21
	133 Move X0, [X23]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Compare X20, 0
	139 JumpIfEqual {212}
	140 Move X8, [X23]
	141 Move X9, [X19+1264]
	142 Move X0, X20
	143 Move X3, X31
	144 Move X8, [X8+184]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction CSET not yet implemented."
	147 Move X1, [X8+112]
	148 Call VisualElement.EnableInClassList, X0, X1, X2
	149 Move X0, [X19+1248]
	150 Compare X0, 0
	151 JumpIfEqual {212}
	152 Move X8, [X23]
	153 Move W2, [X19+1197]
	154 Move X3, X31
	155 Move X8, [X8+184]
	156 Move X1, [X8+104]
	157 Call VisualElement.EnableInClassList, X0, X1, X2
	158 Move W8, [X19+1197]
	159 Move X20, [X19+1248]
	160 Compare W8, 0
	161 JumpIfEqual {180}
	162 Compare X20, 0
	163 JumpIfEqual {212}
	164 Move X8, 0x3FB000
	165 Move X8, [X8+632]
	166 Move X9, 0x468000
	167 Move X0, X20
	168 Move X8, [X8]
	169 Move X8, [X8+184]
	170 Move X9, [X9+3528]
	171 Move X1, [X8]
	172 Move X2, [X9]
	173 Call BaseField`1<Object>.set_label, X0, X1
	174 Move X8, [X19+888]
	175 Add X0, X31, 8
	176 Move X2, X31
	177 Move [X31+8], X8
	178 Move X1, [X22]
	179 Call Hierarchy.Add, X0, X1
	180 Move X0, [X23]
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Compare X20, 0
	186 JumpIfEqual {212}
	187 Move X8, [X23]
	188 Move X9, 0x468000
	189 Move X0, X20
	190 Move X8, [X8+184]
	191 Move X9, [X9+3528]
	192 Move X1, [X8]
	193 Move X2, [X9]
	194 Call BaseField`1<Object>.set_label, X0, X1
	195 Move X8, [X19+888]
	196 Add X0, X31, 8
	197 Move W1, W31
	198 Move X3, X31
	199 Move [X31+8], X8
	200 Move X2, [X22]
	201 Call Hierarchy.Insert, X0, X1, X2
	202 Move X0, X19
	203 Call BaseListView.UpdateArraySizeField, X0
	204 Move X20, [X31+48]
	205 Move X19, [X31+56]
	206 Move X22, [X31+32]
	207 Move X21, [X31+40]
	208 Move X30, [X31+16]
	209 Move X23, [X31+24]
	210 Add X31, X31, 64
	211 Return 
	212 Call 0x1C17F20

Method: System.Void set_headerTitle(System.String value)

Disassembly:
	0x03CFBCD4 ADD X10, X10, 0x8
	0x03CFBCD8 LDUR X11, [X10 - 0x8]
	0x03CFBCDC CMP X11, X1
	0x03CFBCE0 B.EQ 0x3CFBD00
	0x03CFBCE4 SUBS X9, X9, 0x1
	0x03CFBCE8 ADD X10, X10, 0x10
	0x03CFBCEC B.NE 0x3CFBCD8

ISIL:
	001 Move X8, X0
	002 Move X0, [X0+1240]
	003 Move [X8+1200], X1
	004 Compare X0, 0
	005 JumpIfEqual {9}
	006 Move X2, X31
	007 Call Foldout.set_text, X0, X1
	008 Return 
	009 Return 

Method: System.Boolean get_showAddRemoveFooter()

Disassembly:
	0x03CFB8A8 LDR X0, [X20]
	0x03CFB8AC LDR X8, [X0 + 0xB8]
	0x03CFB8B0 MOV X0, X19
	0x03CFB8B4 MOV X2, X31

ISIL:
	001 Move X8, [X0+1264]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void set_showAddRemoveFooter(System.Boolean value)

Disassembly:
	0x03CFBCF0 MOV X0, X22
	0x03CFBCF4 MOV W2, W31

ISIL:
	001 And W1, W1, 1
	002 Call BaseListView.EnableFooter, X0, X1
	003 Return 

Method: System.Void EnableFooter(System.Boolean enabled)

Disassembly:
	0x03CFB8B8 LDR X1, [X8 + 0x8]
	0x03CFB8BC BL 0x3DF1C70
	0x03CFB8C0 MOV X0, X19
	0x03CFB8C4 LDP X20, X19, [X31 + 0x10]
	0x03CFB8C8 MOVZ W1, 0x1
	0x03CFB8CC MOV X2, X31
	0x03CFB8D0 LDP X30, X21, [X31], #0x20
	0x03CFB8D4 B 0x3DEF238
	0x03CFB8D8 STP X30, X19, [X31 - 0x10]!
	0x03CFB8DC MOV X19, X0
	0x03CFB8E0 BL 0x3CFAC10
	0x03CFB8E4 MOV X0, X19
	0x03CFB8E8 BL 0x3CFA654
	0x03CFB8EC MOV X0, X19
	0x03CFB8F0 MOV X1, X31
	0x03CFB8F4 LDP X30, X19, [X31], #0x10
	0x03CFB8F8 B 0x3D00364
	0x03CFB8FC SUB X31, X31, 0x70
	0x03CFB900 STP X29, X30, [X31 + 0x10]
	0x03CFB904 STP X28, X27, [X31 + 0x20]
	0x03CFB908 STP X26, X25, [X31 + 0x30]
	0x03CFB90C STP X24, X23, [X31 + 0x40]
	0x03CFB910 STP X22, X21, [X31 + 0x50]
	0x03CFB914 STP X20, X19, [X31 + 0x60]
	0x03CFB918 ADRP X19, 0x6EC000
	0x03CFB91C LDRB W8, [X19 + 0x7E2]
	0x03CFB920 MOV W22, W1
	0x03CFB924 MOV X20, X0
	0x03CFB928 TBNZ X8, 0x0, 0x3CFB9A0
	0x03CFB92C ADRP X0, 0x3F8000
	0x03CFB930 LDR X0, [X0 + 0xE00]
	0x03CFB934 BL 0x1C16CF4
	0x03CFB938 ADRP X0, 0x422000
	0x03CFB93C LDR X0, [X0 + 0xF20]
	0x03CFB940 BL 0x1C16CF4
	0x03CFB944 ADRP X0, 0x420000
	0x03CFB948 LDR X0, [X0 + 0x7B8]
	0x03CFB94C BL 0x1C16CF4
	0x03CFB950 ADRP X0, 0x422000
	0x03CFB954 LDR X0, [X0 + 0xF28]
	0x03CFB958 BL 0x1C16CF4
	0x03CFB95C ADRP X0, 0x420000
	0x03CFB960 LDR X0, [X0 + 0x7C0]
	0x03CFB964 BL 0x1C16CF4
	0x03CFB968 ADRP X0, 0x3F8000
	0x03CFB96C LDR X0, [X0 + 0xE18]
	0x03CFB970 BL 0x1C16CF4
	0x03CFB974 ADRP X0, 0x467000
	0x03CFB978 LDR X0, [X0 + 0xE50]
	0x03CFB97C BL 0x1C16CF4
	0x03CFB980 ADRP X0, 0x421000
	0x03CFB984 LDR X0, [X0 + 0x830]
	0x03CFB988 BL 0x1C16CF4
	0x03CFB98C ADRP X0, 0x467000
	0x03CFB990 LDR X0, [X0 + 0xBF8]
	0x03CFB994 BL 0x1C16CF4
	0x03CFB998 MOVZ W8, 0x1
	0x03CFB99C STRB W8, [X19 + 0x7E2]
	0x03CFB9A0 LDR X19, [X20 + 0x470]
	0x03CFB9A4 CBZ X19, 0x3CFBEA4
	0x03CFB9A8 ADRP X10, 0x420000
	0x03CFB9AC LDR X8, [X19]
	0x03CFB9B0 LDR X10, [X10 + 0x7B8]
	0x03CFB9B4 LDRH W9, [X8 + 0x12E]
	0x03CFB9B8 LDR X1, [X10]
	0x03CFB9BC CBZ X9, 0x3CFB9E0
	0x03CFB9C0 LDR X10, [X8 + 0xB0]
	0x03CFB9C4 ADD X10, X10, 0x8
	0x03CFB9C8 LDUR X11, [X10 - 0x8]
	0x03CFB9CC CMP X11, X1
	0x03CFB9D0 B.EQ 0x3CFB9F0
	0x03CFB9D4 SUBS X9, X9, 0x1
	0x03CFB9D8 ADD X10, X10, 0x10
	0x03CFB9DC B.NE 0x3CFB9C8
	0x03CFB9E0 MOV X0, X19
	0x03CFB9E4 MOV W2, W31
	0x03CFB9E8 BL 0x1C5C788
	0x03CFB9EC B 0x3CFB9FC
	0x03CFB9F0 LDRSW X9, [X10]
	0x03CFB9F4 ADD X8, X8, X9, 0x4, LSL
	0x03CFB9F8 ADD X0, X8, 0x138
	0x03CFB9FC LDP X8, X1, [X0]
	0x03CFBA00 MOV X0, X19
	0x03CFBA04 BLR X8
	0x03CFBA08 MOV X19, X0
	0x03CFBA0C CBZ X0, 0x3CFBEA8
	0x03CFBA10 ADRP X26, 0x3F8000
	0x03CFBA14 ADRP X29, 0x422000
	0x03CFBA18 ADRP X25, 0x467000
	0x03CFBA1C ADRP X21, 0x421000
	0x03CFBA20 ADRP X27, 0x467000
	0x03CFBA24 LDR X26, [X26 + 0xE18]
	0x03CFBA28 LDR X29, [X29 + 0xF28]
	0x03CFBA2C LDR X25, [X25 + 0xBF8]
	0x03CFBA30 LDR X21, [X21 + 0x830]
	0x03CFBA34 LDR X27, [X27 + 0xE50]
	0x03CFBA38 MOV W28, W31
	0x03CFBA3C AND W8, W22, 0x1
	0x03CFBA40 STR W8, [X31 + 0xC]
	0x03CFBA44 LDR X8, [X19]
	0x03CFBA48 LDR X1, [X26]
	0x03CFBA4C LDRH W9, [X8 + 0x12E]
	0x03CFBA50 CBZ X9, 0x3CFBA74
	0x03CFBA54 LDR X10, [X8 + 0xB0]
	0x03CFBA58 ADD X10, X10, 0x8
	0x03CFBA5C LDUR X11, [X10 - 0x8]
	0x03CFBA60 CMP X11, X1
	0x03CFBA64 B.EQ 0x3CFBA84
	0x03CFBA68 SUBS X9, X9, 0x1
	0x03CFBA6C ADD X10, X10, 0x10
	0x03CFBA70 B.NE 0x3CFBA5C
	0x03CFBA74 MOV X0, X19
	0x03CFBA78 MOV W2, W31
	0x03CFBA7C BL 0x1C5C788
	0x03CFBA80 B 0x3CFBA90
	0x03CFBA84 LDRSW X9, [X10]
	0x03CFBA88 ADD X8, X8, X9, 0x4, LSL
	0x03CFBA8C ADD X0, X8, 0x138
	0x03CFBA90 LDP X8, X1, [X0]
	0x03CFBA94 MOV X0, X19
	0x03CFBA98 BLR X8
	0x03CFBA9C TBZ X0, 0x0, 0x3CFBD8C
	0x03CFBAA0 LDR X8, [X19]
	0x03CFBAA4 ADRP X10, 0x420000
	0x03CFBAA8 LDRH W9, [X8 + 0x12E]
	0x03CFBAAC LDR X10, [X10 + 0x7C0]
	0x03CFBAB0 LDR X1, [X10]
	0x03CFBAB4 CBZ X9, 0x3CFBAD8
	0x03CFBAB8 LDR X10, [X8 + 0xB0]
	0x03CFBABC ADD X10, X10, 0x8
	0x03CFBAC0 LDUR X11, [X10 - 0x8]
	0x03CFBAC4 CMP X11, X1
	0x03CFBAC8 B.EQ 0x3CFBAE8
	0x03CFBACC SUBS X9, X9, 0x1
	0x03CFBAD0 ADD X10, X10, 0x10
	0x03CFBAD4 B.NE 0x3CFBAC0
	0x03CFBAD8 MOV X0, X19
	0x03CFBADC MOV W2, W31
	0x03CFBAE0 BL 0x1C5C788
	0x03CFBAE4 B 0x3CFBAF4
	0x03CFBAE8 LDRSW X9, [X10]
	0x03CFBAEC ADD X8, X8, X9, 0x4, LSL
	0x03CFBAF0 ADD X0, X8, 0x138
	0x03CFBAF4 LDP X8, X1, [X0]
	0x03CFBAF8 MOV X0, X19
	0x03CFBAFC BLR X8
	0x03CFBB00 MOV W23, W0
	0x03CFBB04 MOV X0, X20
	0x03CFBB08 MOV X1, X31
	0x03CFBB0C BL 0x3CFEC08
	0x03CFBB10 MOV X22, X0
	0x03CFBB14 CBZ X0, 0x3CFBEA0
	0x03CFBB18 LDR X8, [X22]
	0x03CFBB1C ADRP X10, 0x422000
	0x03CFBB20 LDRH W9, [X8 + 0x12E]
	0x03CFBB24 LDR X10, [X10 + 0xF20]
	0x03CFBB28 LDR X1, [X10]
	0x03CFBB2C CBZ X9, 0x3CFBB50
	0x03CFBB30 LDR X10, [X8 + 0xB0]
	0x03CFBB34 ADD X10, X10, 0x8
	0x03CFBB38 LDUR X11, [X10 - 0x8]
	0x03CFBB3C CMP X11, X1
	0x03CFBB40 B.EQ 0x3CFBB60
	0x03CFBB44 SUBS X9, X9, 0x1
	0x03CFBB48 ADD X10, X10, 0x10
	0x03CFBB4C B.NE 0x3CFBB38
	0x03CFBB50 MOV X0, X22
	0x03CFBB54 MOV W2, W31
	0x03CFBB58 BL 0x1C5C788
	0x03CFBB5C B 0x3CFBB6C
	0x03CFBB60 LDRSW X9, [X10]
	0x03CFBB64 ADD X8, X8, X9, 0x4, LSL
	0x03CFBB68 ADD X0, X8, 0x138
	0x03CFBB6C LDP X8, X1, [X0]
	0x03CFBB70 MOV X0, X22
	0x03CFBB74 BLR X8
	0x03CFBB78 MOV X22, X0
	0x03CFBB7C CBZ X0, 0x3CFBD34
	0x03CFBB80 LDR X8, [X22]
	0x03CFBB84 LDR X1, [X26]
	0x03CFBB88 LDRH W9, [X8 + 0x12E]
	0x03CFBB8C CBZ X9, 0x3CFBBB0
	0x03CFBB90 LDR X10, [X8 + 0xB0]
	0x03CFBB94 ADD X10, X10, 0x8
	0x03CFBB98 LDUR X11, [X10 - 0x8]
	0x03CFBB9C CMP X11, X1
	0x03CFBBA0 B.EQ 0x3CFBBC0
	0x03CFBBA4 SUBS X9, X9, 0x1
	0x03CFBBA8 ADD X10, X10, 0x10
	0x03CFBBAC B.NE 0x3CFBB98
	0x03CFBBB0 MOV X0, X22
	0x03CFBBB4 MOV W2, W31
	0x03CFBBB8 BL 0x1C5C788
	0x03CFBBBC B 0x3CFBBCC
	0x03CFBBC0 LDRSW X9, [X10]
	0x03CFBBC4 ADD X8, X8, X9, 0x4, LSL
	0x03CFBBC8 ADD X0, X8, 0x138
	0x03CFBBCC LDP X8, X1, [X0]
	0x03CFBBD0 MOV X0, X22
	0x03CFBBD4 BLR X8
	0x03CFBBD8 TBZ X0, 0x0, 0x3CFBCAC
	0x03CFBBDC LDR X8, [X22]
	0x03CFBBE0 LDR X1, [X29]
	0x03CFBBE4 LDRH W9, [X8 + 0x12E]
	0x03CFBBE8 CBZ X9, 0x3CFBC0C
	0x03CFBBEC LDR X10, [X8 + 0xB0]
	0x03CFBBF0 ADD X10, X10, 0x8
	0x03CFBBF4 LDUR X11, [X10 - 0x8]
	0x03CFBBF8 CMP X11, X1
	0x03CFBBFC B.EQ 0x3CFBC1C
	0x03CFBC00 SUBS X9, X9, 0x1
	0x03CFBC04 ADD X10, X10, 0x10
	0x03CFBC08 B.NE 0x3CFBBF4
	0x03CFBC0C MOV X0, X22

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6ED000
	009 Move X22, 0x468000
	010 Move W8, [X21+2003]
	011 Move X22, [X22+2712]
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0x3FA000
	019 Move X0, [X0+3696]
	020 Call 0x1C17CF4
	021 Move X0, 0x468000
	022 Move X0, [X0+3552]
	023 Call 0x1C17CF4
	024 Move X0, 0x468000
	025 Move X0, [X0+3560]
	026 Call 0x1C17CF4
	027 Move X0, 0x468000
	028 Move X0, [X0+2712]
	029 Call 0x1C17CF4
	030 Move X0, 0x468000
	031 Move X0, [X0+3568]
	032 Call 0x1C17CF4
	033 Move X0, 0x421000
	034 Move X0, [X0+2200]
	035 Call 0x1C17CF4
	036 Move X0, 0x3FE000
	037 Move X0, [X0+1016]
	038 Call 0x1C17CF4
	039 Move X0, 0x3FA000
	040 Move X0, [X0+680]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X21+2003], W8
	044 Move X0, [X22]
	045 Move [X31+8], X31
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Move X8, [X0+184]
	052 And W21, W20, 1
	053 Move X0, X19
	054 Move W2, W21
	055 Move X1, [X8+128]
	056 Move X3, X31
	057 Call VisualElement.EnableInClassList, X0, X1, X2
	058 Move X0, [X19+1088]
	059 Compare X0, 0
	060 JumpIfEqual {241}
	061 Move X8, [X22]
	062 Move W2, W21
	063 Move X3, X31
	064 Move X8, [X8+184]
	065 Move X1, [X8+136]
	066 Call VisualElement.EnableInClassList, X0, X1, X2
	067 Move X21, [X19+1248]
	068 Compare X21, 0
	069 JumpIfEqual {82}
	070 Move X0, [X22]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X8, [X22]
	076 And W2, W20, 1
	077 Move X0, X21
	078 Move X3, X31
	079 Move X8, [X8+184]
	080 Move X1, [X8+112]
	081 Call VisualElement.EnableInClassList, X0, X1, X2
	082 Move TEMP, X20
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {208}
	086 Move X8, [X19+1264]
	087 Compare X8, 0
	088 JumpIfNotEqual {196}
	089 Move X8, 0x421000
	090 Move X8, [X8+2200]
	091 Move X0, [X8]
	092 Call 0x1C17F10
	093 Move X1, X31
	094 Move X20, X0
	095 Call VisualElement..ctor, X0
	096 Move X0, [X22]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Compare X20, 0
	102 JumpIfEqual {241}
	103 Move X8, [X22]
	104 Move X0, X20
	105 Move X2, X31
	106 Move X8, [X8+184]
	107 Move X1, [X8+80]
	108 Call VisualElement.set_name, X0, X1
	109 Move [X19+1264], X20
	110 Move X8, [X22]
	111 Move X0, X20
	112 Move X2, X31
	113 Move X8, [X8+184]
	114 Move X1, [X8+80]
	115 Call VisualElement.AddToClassList, X0, X1
	116 Move X23, 0x3FA000
	117 Move X23, [X23+3696]
	118 Move X0, [X23]
	119 Call 0x1C17F10
	120 Move X8, 0x468000
	121 Move X8, [X8+3560]
	122 Move X1, X19
	123 Move X3, X31
	124 Move X21, X0
	125 Move X2, [X8]
	126 Call Action..ctor, X0, X1, X2
	127 Move X24, 0x468000
	128 Move X24, [X24+3568]
	129 Move X0, [X24]
	130 Call 0x1C17F10
	131 Move X1, X21
	132 Move X2, X31
	133 Move X20, X0
	134 Call Button..ctor, X0, X1
	135 Compare X20, 0
	136 JumpIfEqual {241}
	137 Move X8, [X22]
	138 Move X0, X20
	139 Move X2, X31
	140 Move X8, [X8+184]
	141 Move X1, [X8+152]
	142 Call VisualElement.set_name, X0, X1
	143 Move X9, 0x3FA000
	144 Move X8, [X20]
	145 Move X9, [X9+680]
	146 Move X0, X20
	147 Move X2, [X8+2864]
	148 Move X1, [X9]
	149 Move X9, [X8+2856]
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move X0, [X19+1264]
	152 Move [X19+1280], X20
	153 Compare X0, 0
	154 JumpIfEqual {241}
	155 Move X1, X20
	156 Move X2, X31
	157 Call VisualElement.Add, X0, X1
	158 Move X0, [X23]
	159 Call 0x1C17F10
	160 Move X8, 0x468000
	161 Move X8, [X8+3552]
	162 Move X1, X19
	163 Move X3, X31
	164 Move X21, X0
	165 Move X2, [X8]
	166 Call Action..ctor, X0, X1, X2
	167 Move X0, [X24]
	168 Call 0x1C17F10
	169 Move X1, X21
	170 Move X2, X31
	171 Move X20, X0
	172 Call Button..ctor, X0, X1
	173 Compare X20, 0
	174 JumpIfEqual {241}
	175 Move X8, [X22]
	176 Move X0, X20
	177 Move X2, X31
	178 Move X8, [X8+184]
	179 Move X1, [X8+144]
	180 Call VisualElement.set_name, X0, X1
	181 Move X9, 0x3FE000
	182 Move X8, [X20]
	183 Move X9, [X9+1016]
	184 Move X0, X20
	185 Move X2, [X8+2864]
	186 Move X1, [X9]
	187 Move X9, [X8+2856]
	188 NotImplemented "Instruction BLR not yet implemented."
	189 Move X0, [X19+1264]
	190 Move [X19+1272], X20
	191 Compare X0, 0
	192 JumpIfEqual {241}
	193 Move X1, X20
	194 Move X2, X31
	195 Call VisualElement.Add, X0, X1
	196 Move X0, [X19+1240]
	197 Compare X0, 0
	198 JumpIfEqual {227}
	199 Move X8, [X0]
	200 Move X9, [X8+1896]
	201 Move X1, [X8+1904]
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Compare X0, 0
	204 JumpIfEqual {241}
	205 Move X1, [X19+1264]
	206 Move X2, X31
	207 Call VisualElement.Add, X0, X1
	208 Move X0, [X19+1280]
	209 Compare X0, 0
	210 JumpIfEqual {213}
	211 Move X1, X31
	212 Call VisualElement.RemoveFromHierarchy, X0
	213 Move X0, [X19+1272]
	214 Compare X0, 0
	215 JumpIfEqual {218}
	216 Move X1, X31
	217 Call VisualElement.RemoveFromHierarchy, X0
	218 Move X0, [X19+1264]
	219 Add X19, X19, 1264
	220 Compare X0, 0
	221 JumpIfEqual {224}
	222 Move X1, X31
	223 Call VisualElement.RemoveFromHierarchy, X0
	224 Move [X19], X31
	225 Move [X19+8], X31
	226 Move [X19+16], X31
	227 Move X8, [X19+888]
	228 Add X0, X31, 8
	229 Move X2, X31
	230 Move [X31+8], X8
	231 Move X1, [X19+1264]
	232 Call Hierarchy.Add, X0, X1
	233 Move X20, [X31+48]
	234 Move X19, [X31+56]
	235 Move X22, [X31+32]
	236 Move X21, [X31+40]
	237 Move X24, [X31+16]
	238 Move X23, [X31+24]
	239 Move X30, [X31+64]
	240 Return 
	241 Call 0x1C17F20

Method: System.Void AddItems(System.Int32 itemCount)

Disassembly:
	0x03CFBCF8 BL 0x1C5C788
	0x03CFBCFC B 0x3CFBD0C
	0x03CFBD00 LDRSW X9, [X10]
	0x03CFBD04 ADD X8, X8, X9, 0x4, LSL
	0x03CFBD08 ADD X0, X8, 0x138
	0x03CFBD0C LDP X8, X1, [X0]
	0x03CFBD10 MOV X0, X22
	0x03CFBD14 BLR X8
	0x03CFBD18 CBNZ X24, 0x3CFBE98
	0x03CFBD1C CBZ W23, 0x3CFBA44
	0x03CFBD20 CMP W23, 0xA

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W19, W1
	004 Call BaseListView.get_viewController, X0
	005 Compare X0, 0
	006 JumpIfEqual {14}
	007 Move X8, [X0]
	008 Move W1, W19
	009 Move X3, [X8+680]
	010 Move X2, [X8+688]
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X3
	014 Call 0x1C17F20

Method: System.Void OnArraySizeFieldChanged(UnityEngine.UIElements.ChangeEvent`1<System.String> evt)

Disassembly:
	0x03CFBDA0 LDR X10, [X10 + 0xE00]
	0x03CFBDA4 LDR X1, [X10]
	0x03CFBDA8 CBZ X9, 0x3CFBDCC
	0x03CFBDAC LDR X10, [X8 + 0xB0]
	0x03CFBDB0 ADD X10, X10, 0x8
	0x03CFBDB4 LDUR X11, [X10 - 0x8]
	0x03CFBDB8 CMP X11, X1
	0x03CFBDBC B.EQ 0x3CFBDDC
	0x03CFBDC0 SUBS X9, X9, 0x1
	0x03CFBDC4 ADD X10, X10, 0x10
	0x03CFBDC8 B.NE 0x3CFBDB4
	0x03CFBDCC MOV X0, X19
	0x03CFBDD0 MOV W2, W31
	0x03CFBDD4 BL 0x1C5C788
	0x03CFBDD8 B 0x3CFBDE8
	0x03CFBDDC LDRSW X9, [X10]
	0x03CFBDE0 ADD X8, X8, X9, 0x4, LSL
	0x03CFBDE4 ADD X0, X8, 0x138
	0x03CFBDE8 LDP X8, X1, [X0]
	0x03CFBDEC MOV X0, X19
	0x03CFBDF0 BLR X8
	0x03CFBDF4 CBNZ X20, 0x3CFBEAC
	0x03CFBDF8 AND W0, W28, 0x1
	0x03CFBDFC LDP X20, X19, [X31 + 0x60]
	0x03CFBE00 LDP X22, X21, [X31 + 0x50]
	0x03CFBE04 LDP X24, X23, [X31 + 0x40]
	0x03CFBE08 LDP X26, X25, [X31 + 0x30]
	0x03CFBE0C LDP X28, X27, [X31 + 0x20]
	0x03CFBE10 LDP X29, X30, [X31 + 0x10]
	0x03CFBE14 ADD X31, X31, 0x70
	0x03CFBE18 RET
	0x03CFBE1C MOV X20, X1
	0x03CFBE20 MOV X24, X31
	0x03CFBE24 CBZ X22, 0x3CFBE88
	0x03CFBE28 LDR X8, [X22]
	0x03CFBE2C ADRP X10, 0x3F8000
	0x03CFBE30 LDRH W9, [X8 + 0x12E]
	0x03CFBE34 LDR X10, [X10 + 0xE00]
	0x03CFBE38 LDR X1, [X10]
	0x03CFBE3C CBZ X9, 0x3CFBE60
	0x03CFBE40 LDR X10, [X8 + 0xB0]
	0x03CFBE44 ADD X10, X10, 0x8
	0x03CFBE48 LDUR X11, [X10 - 0x8]
	0x03CFBE4C CMP X11, X1
	0x03CFBE50 B.EQ 0x3CFBE70
	0x03CFBE54 SUBS X9, X9, 0x1
	0x03CFBE58 ADD X10, X10, 0x10
	0x03CFBE5C B.NE 0x3CFBE48
	0x03CFBE60 MOV X0, X22
	0x03CFBE64 MOV W2, W31
	0x03CFBE68 BL 0x1C5C788
	0x03CFBE6C B 0x3CFBE7C
	0x03CFBE70 LDRSW X9, [X10]
	0x03CFBE74 ADD X8, X8, X9, 0x4, LSL
	0x03CFBE78 ADD X0, X8, 0x138
	0x03CFBE7C LDP X8, X1, [X0]
	0x03CFBE80 MOV X0, X22
	0x03CFBE84 BLR X8
	0x03CFBE88 MOV X1, X20
	0x03CFBE8C CBZ X24, 0x3CFBEEC
	0x03CFBE90 MOV X0, X24
	0x03CFBE94 BL 0x1C16F18
	0x03CFBE98 MOV X0, X24
	0x03CFBE9C BL 0x1C16F18
	0x03CFBEA0 BL 0x1C16F20
	0x03CFBEA4 BL 0x1C16F20
	0x03CFBEA8 BL 0x1C16F20
	0x03CFBEAC MOV X0, X20
	0x03CFBEB0 BL 0x1C16F18
	0x03CFBEB4 MOV X20, X1
	0x03CFBEB8 MOV X23, X0
	0x03CFBEBC CBNZ X22, 0x3CFBE28
	0x03CFBEC0 B 0x3CFBE88
	0x03CFBEC4 MOV X23, X0
	0x03CFBEC8 MOV W28, W31
	0x03CFBECC B 0x3CFBEEC
	0x03CFBED0 B 0x3CFBEE8
	0x03CFBED4 B 0x3CFBEE8
	0x03CFBED8 B 0x3CFBEE8
	0x03CFBEDC B 0x3CFBEE8
	0x03CFBEE0 B 0x3CFBEE8
	0x03CFBEE4 B 0x3CFBEE8
	0x03CFBEE8 MOV X23, X0
	0x03CFBEEC CMP W1, 0x1
	0x03CFBEF0 B.NE 0x3CFBF08
	0x03CFBEF4 MOV X0, X23
	0x03CFBEF8 BL 0x3EB1AD0
	0x03CFBEFC LDR X20, [X0]
	0x03CFBF00 BL 0x3EB1AE0
	0x03CFBF04 B 0x3CFBD90
	0x03CFBF08 MOV X20, X31
	0x03CFBF0C B 0x3CFBF14
	0x03CFBF10 MOV X23, X0
	0x03CFBF14 CBZ X19, 0x3CFBF78
	0x03CFBF18 LDR X8, [X19]
	0x03CFBF1C ADRP X10, 0x3F8000
	0x03CFBF20 LDRH W9, [X8 + 0x12E]
	0x03CFBF24 LDR X10, [X10 + 0xE00]
	0x03CFBF28 LDR X1, [X10]
	0x03CFBF2C CBZ X9, 0x3CFBF50
	0x03CFBF30 LDR X10, [X8 + 0xB0]
	0x03CFBF34 ADD X10, X10, 0x8
	0x03CFBF38 LDUR X11, [X10 - 0x8]
	0x03CFBF3C CMP X11, X1
	0x03CFBF40 B.EQ 0x3CFBF60
	0x03CFBF44 SUBS X9, X9, 0x1
	0x03CFBF48 ADD X10, X10, 0x10
	0x03CFBF4C B.NE 0x3CFBF38
	0x03CFBF50 MOV X0, X19
	0x03CFBF54 MOV W2, W31
	0x03CFBF58 BL 0x1C5C788
	0x03CFBF5C B 0x3CFBF6C
	0x03CFBF60 LDRSW X9, [X10]
	0x03CFBF64 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6ED000
	007 Move W8, [X21+2004]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x468000
	015 Move X0, [X0+3576]
	016 Call 0x1C17CF4
	017 Move X0, 0x468000
	018 Move X0, [X0+3592]
	019 Call 0x1C17CF4
	020 Move X0, 0x424000
	021 Move X0, [X0+416]
	022 Call 0x1C17CF4
	023 Move X0, 0x424000
	024 Move X0, [X0+424]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2004], W8
	028 Move [X31+12], W31
	029 Move X8, [X19+1248]
	030 Compare X8, 0
	031 JumpIfEqual {138}
	032 Move W8, [X8+1032]
	033 Compare W8, 0
	034 JumpIfEqual {54}
	035 Move X21, 0x468000
	036 Move X21, [X21+3592]
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Compare X20, 0
	043 JumpIfEqual {138}
	044 Move X8, [X21]
	045 Move X1, [X20+144]
	046 Move X2, X31
	047 Move X8, [X8+184]
	048 Move X0, [X8+64]
	049 Call String.op_Equality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {56}
	054 Compare X20, 0
	055 JumpIfEqual {138}
	056 Move X0, [X20+144]
	057 Add X1, X31, 12
	058 Move X2, X31
	059 Call Int32.TryParse, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {101}
	064 Move W8, [X31+12]
	065 Move TEMP, X8
	066 And TEMP, TEMP, -2147483648
	067 Compare TEMP, -2147483648
	068 JumpIfEqual {101}
	069 Move X0, X19
	070 Call BaseListView.get_viewController, X0
	071 Compare X0, 0
	072 JumpIfEqual {138}
	073 Move X8, [X0]
	074 Move X9, [X8+456]
	075 Move X1, [X8+464]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move W20, W0
	078 Compare W0, 0
	079 JumpIfNotEqual {90}
	080 Move W21, [X31+12]
	081 Move X0, X19
	082 Call BaseListView.get_viewController, X0
	083 Compare X0, 0
	084 JumpIfEqual {138}
	085 Move X8, [X0]
	086 Move X9, [X8+472]
	087 Move X1, [X8+480]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move W8, [X31+12]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X19
	093 Call BaseListView.get_viewController, X0
	094 Compare X0, 0
	095 JumpIfEqual {138}
	096 Move X8, [X0]
	097 Move W9, [X31+12]
	098 Move X10, [X8+680]
	099 Move X2, [X8+688]
	100 Subtract W1, W9, W20
	101 Move X0, [X19+1248]
	102 Compare X0, 0
	103 JumpIfEqual {138}
	104 Move X8, [X0]
	105 Move X1, [X20+136]
	106 Move X9, [X8+2184]
	107 Move X2, [X8+2192]
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X0, X19
	110 Call BaseListView.get_viewController, X0
	111 Compare X0, 0
	112 JumpIfEqual {138}
	113 Move X8, [X0]
	114 Move W9, [X31+12]
	115 Move X10, [X8+744]
	116 Move X2, [X8+752]
	117 Subtract W1, W20, W9
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X0, X19
	120 Call BaseListView.UpdateListViewLabel, X0
	121 Move X20, [X31+32]
	122 Move X19, [X31+40]
	123 Move X30, [X31+16]
	124 Move X21, [X31+24]
	125 Add X31, X31, 48
	126 Return 
	127 Compare W8, 0
	128 JumpIfNotEqual {119}
	129 Move X0, X19
	130 Call BaseListView.get_viewController, X0
	131 Compare X0, 0
	132 JumpIfEqual {138}
	133 Move X8, [X0]
	134 Move X9, [X8+760]
	135 Move X1, [X8+768]
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move [X19+1256], W31
	138 Call 0x1C17F20

Method: System.Void UpdateArraySizeField()

Disassembly:
	0x03CFBC10 MOV W2, W31
	0x03CFBC14 BL 0x1C5C788
	0x03CFBC18 B 0x3CFBC28
	0x03CFBC1C LDRSW X9, [X10]
	0x03CFBC20 ADD X8, X8, X9, 0x4, LSL
	0x03CFBC24 ADD X0, X8, 0x138
	0x03CFBC28 LDP X8, X1, [X0]
	0x03CFBC2C MOV X0, X22
	0x03CFBC30 BLR X8
	0x03CFBC34 MOV X24, X0
	0x03CFBC38 CBZ X0, 0x3CFBD2C
	0x03CFBC3C LDR W8, [X24 + 0x20]
	0x03CFBC40 CMP W8, W23
	0x03CFBC44 B.NE 0x3CFBB80
	0x03CFBC48 LDR X0, [X25]
	0x03CFBC4C MOV X1, X31
	0x03CFBC50 BL 0x3C30760
	0x03CFBC54 AND X1, X0, 0x0
	0x03CFBC58 MOV X0, X20
	0x03CFBC5C MOV X2, X31
	0x03CFBC60 BL 0x3DF3018
	0x03CFBC64 CBZ X0, 0x3CFBB80
	0x03CFBC68 LDR X0, [X21]
	0x03CFBC6C LDR X24, [X24 + 0x10]
	0x03CFBC70 LDR W8, [X0 + 0xE0]
	0x03CFBC74 CBNZ W8, 0x3CFBC7C
	0x03CFBC78 BL 0x1C16DFC
	0x03CFBC7C LDR X3, [X27]
	0x03CFBC80 MOV X0, X24
	0x03CFBC84 MOV X1, X31
	0x03CFBC88 MOV X2, X31
	0x03CFBC8C BL 0x22A17C4
	0x03CFBC90 CBZ X0, 0x3CFBB80
	0x03CFBC94 MOV W24, W28
	0x03CFBC98 MOVZ W28, 0x1
	0x03CFBC9C LDR W1, [X31 + 0xC]
	0x03CFBCA0 MOV X2, X31
	0x03CFBCA4 BL 0x3D0E708
	0x03CFBCA8 B 0x3CFBB80
	0x03CFBCAC MOV X24, X31
	0x03CFBCB0 MOVZ W23, 0xA
	0x03CFBCB4 CBZ X22, 0x3CFBD18
	0x03CFBCB8 LDR X8, [X22]
	0x03CFBCBC ADRP X10, 0x3F8000
	0x03CFBCC0 LDRH W9, [X8 + 0x12E]
	0x03CFBCC4 LDR X10, [X10 + 0xE00]
	0x03CFBCC8 LDR X1, [X10]
	0x03CFBCCC CBZ X9, 0x3CFBCF0
	0x03CFBCD0 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6ED000
	005 Move W8, [X20+2005]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x468000
	012 Move X0, [X0+3576]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2005], W8
	016 Move [X31+12], W31
	017 Move X8, [X19]
	018 Move X0, X19
	019 Move X9, [X8+2056]
	020 Move X1, [X8+2064]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {58}
	026 Move X20, [X19+1248]
	027 Compare X20, 0
	028 JumpIfEqual {58}
	029 Move W8, [X20+1032]
	030 Compare W8, 0
	031 JumpIfNotEqual {50}
	032 Move X0, X19
	033 Call BaseListView.get_viewController, X0
	034 Compare X0, 0
	035 JumpIfEqual {62}
	036 Move X8, [X0]
	037 Move X9, [X8+472]
	038 Move X1, [X8+480]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move [X31+12], W0
	041 Add X0, X31, 12
	042 Move X1, X31
	043 Call Int32.ToString, X0
	044 Move X8, [X20]
	045 Move X1, X0
	046 Move X0, X20
	047 Move X9, [X8+2184]
	048 Move X2, [X8+2192]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X0, [X19+1264]
	051 Compare X0, 0
	052 JumpIfEqual {58}
	053 Move W8, [X19+1256]
	054 Move X2, X31
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSET not yet implemented."
	057 Call VisualElement.SetEnabled, X0, X1
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Return 
	062 Call 0x1C17F20

Method: System.Void UpdateListViewLabel()

Disassembly:
	0x03CFB654 ADRP X21, 0x467000
	0x03CFB658 LDRB W8, [X20 + 0x7DC]
	0x03CFB65C LDR X21, [X21 + 0xBF8]
	0x03CFB660 MOV X19, X0
	0x03CFB664 TBNZ X8, 0x0, 0x3CFB67C
	0x03CFB668 ADRP X0, 0x467000
	0x03CFB66C LDR X0, [X0 + 0xBF8]
	0x03CFB670 BL 0x1C16CF4
	0x03CFB674 MOVZ W8, 0x1
	0x03CFB678 STRB W8, [X20 + 0x7DC]
	0x03CFB67C LDR X0, [X21]
	0x03CFB680 MOV X1, X31
	0x03CFB684 BL 0x3C30760
	0x03CFB688 AND X1, X0, 0x0
	0x03CFB68C MOV X0, X19
	0x03CFB690 MOV X2, X31
	0x03CFB694 BL 0x3DF3018
	0x03CFB698 CBNZ X0, 0x3CFB6A8
	0x03CFB69C MOV X0, X19
	0x03CFB6A0 MOV X1, X31
	0x03CFB6A4 BL 0x3CFD108
	0x03CFB6A8 LDR X8, [X19 + 0x4C8]
	0x03CFB6AC CBZ X8, 0x3CFB6C8
	0x03CFB6B0 LDR X2, [X8 + 0x18]
	0x03CFB6B4 LDR X0, [X8 + 0x40]
	0x03CFB6B8 LDR X1, [X8 + 0x28]
	0x03CFB6BC LDP X20, X19, [X31 + 0x10]
	0x03CFB6C0 LDP X30, X21, [X31], #0x20
	0x03CFB6C4 BR X2
	0x03CFB6C8 LDP X20, X19, [X31 + 0x10]
	0x03CFB6CC LDP X30, X21, [X31], #0x20
	0x03CFB6D0 RET
	0x03CFB6D4 LDR W0, [X0 + 0x520]
	0x03CFB6D8 RET
	0x03CFB6DC STP X30, X19, [X31 - 0x10]!
	0x03CFB6E0 LDR W8, [X0 + 0x520]
	0x03CFB6E4 CMP W8, W1
	0x03CFB6E8 B.NE 0x3CFB6F4
	0x03CFB6EC LDP X30, X19, [X31], #0x10
	0x03CFB6F0 RET
	0x03CFB6F4 STR W1, [X0 + 0x520]
	0x03CFB6F8 MOV X1, X31
	0x03CFB6FC MOV X19, X0
	0x03CFB700 BL 0x3CFEE30
	0x03CFB704 AND W1, W0, 0x1
	0x03CFB708 MOV X0, X19
	0x03CFB70C MOV X2, X31
	0x03CFB710 BL 0x3CFF44C
	0x03CFB714 LDR X8, [X19 + 0x528]
	0x03CFB718 CBZ X8, 0x3CFB72C
	0x03CFB71C LDR X9, [X8 + 0x18]
	0x03CFB720 LDR X0, [X8 + 0x40]
	0x03CFB724 LDR X1, [X8 + 0x28]
	0x03CFB728 BLR X9
	0x03CFB72C MOV X0, X19
	0x03CFB730 MOV X1, X31
	0x03CFB734 LDP X30, X19, [X31], #0x10
	0x03CFB738 B 0x3CFF05C
	0x03CFB73C STR X30, [X31 - 0x20]!
	0x03CFB740 STP X20, X19, [X31 + 0x10]
	0x03CFB744 ADRP X20, 0x6EC000
	0x03CFB748 LDRB W8, [X20 + 0x7DF]
	0x03CFB74C MOV X19, X0
	0x03CFB750 TBNZ X8, 0x0, 0x3CFB774
	0x03CFB754 ADRP X0, 0x422000
	0x03CFB758 LDR X0, [X0 + 0xF48]
	0x03CFB75C BL 0x1C16CF4
	0x03CFB760 ADRP X0, 0x467000
	0x03CFB764 LDR X0, [X0 + 0xE40]
	0x03CFB768 BL 0x1C16CF4
	0x03CFB76C MOVZ W8, 0x1
	0x03CFB770 STRB W8, [X20 + 0x7DF]
	0x03CFB774 LDR W8, [X19 + 0x520]
	0x03CFB778 CBZ W8, 0x3CFB7A0
	0x03CFB77C ADRP X8, 0x422000
	0x03CFB780 LDR X8, [X8 + 0xF48]
	0x03CFB784 LDR X0, [X8]
	0x03CFB788 BL 0x1C16F10
	0x03CFB78C MOV X1, X19
	0x03CFB790 MOV X2, X31
	0x03CFB794 MOV X20, X0
	0x03CFB798 BL 0x3D9700C
	0x03CFB79C B 0x3CFB7C0
	0x03CFB7A0 ADRP X8, 0x467000
	0x03CFB7A4 LDR X8, [X8 + 0xE40]
	0x03CFB7A8 LDR X0, [X8]
	0x03CFB7AC BL 0x1C16F10
	0x03CFB7B0 MOV X1, X19
	0x03CFB7B4 MOV X2, X31
	0x03CFB7B8 MOV X20, X0
	0x03CFB7BC BL 0x3D934D0
	0x03CFB7C0 MOV X0, X20
	0x03CFB7C4 LDP X20, X19, [X31 + 0x10]
	0x03CFB7C8 LDR X30, [X31], #0x20
	0x03CFB7CC RET
	0x03CFB7D0 STP X30, X21, [X31 - 0x20]!
	0x03CFB7D4 STP X20, X19, [X31 + 0x10]
	0x03CFB7D8 ADRP X20, 0x6EC000
	0x03CFB7DC ADRP X21, 0x467000
	0x03CFB7E0 LDRB W8, [X20 + 0x7E0]
	0x03CFB7E4 LDR X21, [X21 + 0xE48]
	0x03CFB7E8 MOV X19, X0
	0x03CFB7EC TBNZ X8, 0x0, 0x3CFB804
	0x03CFB7F0 ADRP X0, 0x467000
	0x03CFB7F4 LDR X0, [X0 + 0xE48]
	0x03CFB7F8 BL 0x1C16CF4
	0x03CFB7FC MOVZ W8, 0x1
	0x03CFB800 STRB W8, [X20 + 0x7E0]
	0x03CFB804 LDR X0, [X21]
	0x03CFB808 BL 0x1C16F10
	0x03CFB80C MOV X1, X19
	0x03CFB810 MOV X2, X31
	0x03CFB814 MOV X20, X0
	0x03CFB818 BL 0x3D987A4
	0x03CFB81C MOV X0, X20
	0x03CFB820 LDP X20, X19, [X31 + 0x10]
	0x03CFB824 LDP X30, X21, [X31], #0x20
	0x03CFB828 RET
	0x03CFB82C STP X30, X21, [X31 - 0x20]!
	0x03CFB830 STP X20, X19, [X31 + 0x10]
	0x03CFB834 ADRP X21, 0x6EC000
	0x03CFB838 ADRP X20, 0x422000
	0x03CFB83C LDRB W8, [X21 + 0x7E1]
	0x03CFB840 LDR X20, [X20 + 0xF18]
	0x03CFB844 MOV X19, X0
	0x03CFB848 TBNZ X8, 0x0, 0x3CFB86C
	0x03CFB84C ADRP X0, 0x467000
	0x03CFB850 LDR X0, [X0 + 0xA98]
	0x03CFB854 BL 0x1C16CF4
	0x03CFB858 ADRP X0, 0x422000
	0x03CFB85C LDR X0, [X0 + 0xF18]
	0x03CFB860 BL 0x1C16CF4
	0x03CFB864 MOVZ W8, 0x1
	0x03CFB868 STRB W8, [X21 + 0x7E1]
	0x03CFB86C MOVZ W8, 0x1
	0x03CFB870 STRB W8, [X19 + 0x4AC]
	0x03CFB874 LDR X0, [X20]
	0x03CFB878 ADRP X20, 0x467000
	0x03CFB87C LDR W8, [X0 + 0xE0]
	0x03CFB880 LDR X20, [X20 + 0xA98]
	0x03CFB884 CBNZ W8, 0x3CFB88C
	0x03CFB888 BL 0x1C16DFC
	0x03CFB88C MOV X0, X19
	0x03CFB890 MOV X1, X31
	0x03CFB894 BL 0x3CFF568
	0x03CFB898 LDR X0, [X20]
	0x03CFB89C LDR W8, [X0 + 0xE0]
	0x03CFB8A0 CBNZ W8, 0x3CFB8AC
	0x03CFB8A4 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x6ED000
	007 Move W8, [X20+2006]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x468000
	014 Move X0, [X0+2712]
	015 Call 0x1C17CF4
	016 Move X0, 0x400000
	017 Move X0, [X0+752]
	018 Call 0x1C17CF4
	019 Move X0, 0x422000
	020 Move X0, [X0+304]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2006], W8
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move X9, [X8+2056]
	027 Move X1, [X8+2064]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {142}
	033 Move X0, X19
	034 Move X1, X31
	035 Call BaseVerticalCollectionView.get_itemsSource, X0
	036 Compare X0, 0
	037 JumpIfEqual {175}
	038 Move X10, 0x400000
	039 Move X8, [X0]
	040 Move X10, [X10+752]
	041 Move X20, X0
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move X1, [X10]
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move W2, 1
	053 Move X0, X20
	054 Call 0x1C5D788
	055 Move W9, [X10]
	056 Add W9, W9, 1
	057 Add X8, X8, W9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X0, X20
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move W8, [X19+1256]
	064 Move X21, [X19+1232]
	065 Move W20, W0
	066 Compare W8, 0
	067 JumpIfEqual {134}
	068 Compare X21, 0
	069 JumpIfNotEqual {80}
	070 Move X8, 0x422000
	071 Move X8, [X8+304]
	072 Move X0, [X8]
	073 Call 0x1C17F10
	074 Move X1, X31
	075 Move X21, X0
	076 Call Label..ctor, X0
	077 Move [X19+1232], X21
	078 Compare X21, 0
	079 JumpIfEqual {175}
	080 Move X8, [X21]
	081 Move X1, [X19+1328]
	082 Move X0, X21
	083 Move X9, [X8+2856]
	084 Move X2, [X8+2864]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X8, [X19+1088]
	087 Compare X8, 0
	088 JumpIfEqual {175}
	089 Move X0, [X8+1048]
	090 Compare X0, 0
	091 JumpIfEqual {175}
	092 Move X1, [X19+1232]
	093 Move X2, X31
	094 Call VisualElement.Add, X0, X1
	095 Move X21, [X19+1232]
	096 Compare X21, 0
	097 JumpIfEqual {142}
	098 Move X22, 0x468000
	099 Move X22, [X22+2712]
	100 Move X0, [X22]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {106}
	104 Call 0x1C17DFC
	105 Move X0, [X22]
	106 Move X8, [X0+184]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 NotImplemented "Instruction CSET not yet implemented."
	109 Move X0, X21
	110 Move X1, [X8+24]
	111 Move X3, X31
	112 Call VisualElement.EnableInClassList, X0, X1, X2
	113 Move X20, [X19+1232]
	114 Compare X20, 0
	115 JumpIfEqual {142}
	116 Move X0, [X22]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {122}
	120 Call 0x1C17DFC
	121 Move X0, [X22]
	122 Move X8, [X0+184]
	123 Move W2, [X19+1256]
	124 Move X0, X20
	125 Move X20, [X31+32]
	126 Move X19, [X31+40]
	127 Move X1, [X8+32]
	128 Move X22, [X31+16]
	129 Move X21, [X31+24]
	130 Move X3, X31
	131 Move X30, [X31+48]
	132 Call VisualElement.EnableInClassList, X0, X1, X2
	133 Return 
	134 Compare W20, 0
	135 JumpIfEqual {148}
	136 Compare X21, 0
	137 JumpIfEqual {141}
	138 Move X0, X21
	139 Move X1, X31
	140 Call VisualElement.RemoveFromHierarchy, X0
	141 Move [X19+1232], X31
	142 Move X20, [X31+32]
	143 Move X19, [X31+40]
	144 Move X22, [X31+16]
	145 Move X21, [X31+24]
	146 Move X30, [X31+48]
	147 Return 
	148 Compare X21, 0
	149 JumpIfNotEqual {158}
	150 Move X8, 0x422000
	151 Move X8, [X8+304]
	152 Move X0, [X8]
	153 Call 0x1C17F10
	154 Move X1, X31
	155 Move X21, X0
	156 Call Label..ctor, X0
	157 Move [X19+1232], X21
	158 Move X22, 0x468000
	159 Move X22, [X22+2712]
	160 Move X0, [X22]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Compare X21, 0
	166 JumpIfEqual {175}
	167 Move X8, [X22]
	168 Move X9, [X21]
	169 Move X0, X21
	170 Move X8, [X8+184]
	171 Move X10, [X9+2856]
	172 Move X2, [X9+2864]
	173 Move X1, [X8+160]
	174 NotImplemented "Instruction BLR not yet implemented."
	175 Call 0x1C17F20

Method: System.Void OnAddClicked()

Disassembly:
	0x03CFBF68 ADD X0, X8, 0x138
	0x03CFBF6C LDP X8, X1, [X0]
	0x03CFBF70 MOV X0, X19
	0x03CFBF74 BLR X8
	0x03CFBF78 CBNZ X20, 0x3CFBF84
	0x03CFBF7C MOV X0, X23
	0x03CFBF80 BL 0x1D2C690
	0x03CFBF84 MOV X0, X20
	0x03CFBF88 BL 0x1C16F18
	0x03CFBF8C BL 0x1990590
	0x03CFBF90 STP X29, X30, [X31 - 0x60]!
	0x03CFBF94 STP X28, X27, [X31 + 0x10]
	0x03CFBF98 STP X26, X25, [X31 + 0x20]
	0x03CFBF9C STP X24, X23, [X31 + 0x30]
	0x03CFBFA0 STP X22, X21, [X31 + 0x40]
	0x03CFBFA4 STP X20, X19, [X31 + 0x50]
	0x03CFBFA8 ADRP X21, 0x6EC000
	0x03CFBFAC ADRP X20, 0x405000
	0x03CFBFB0 ADRP X19, 0x467000
	0x03CFBFB4 ADRP X29, 0x467000
	0x03CFBFB8 ADRP X28, 0x467000
	0x03CFBFBC ADRP X27, 0x467000
	0x03CFBFC0 ADRP X26, 0x467000
	0x03CFBFC4 ADRP X23, 0x467000
	0x03CFBFC8 ADRP X22, 0x467000
	0x03CFBFCC ADRP X25, 0x467000
	0x03CFBFD0 ADRP X24, 0x467000
	0x03CFBFD4 LDR X20, [X20 + 0x840]
	0x03CFBFD8 LDR X19, [X19 + 0xA98]
	0x03CFBFDC LDR X29, [X29 + 0xE58]
	0x03CFBFE0 LDR X28, [X28 + 0xE60]
	0x03CFBFE4 LDR X27, [X27 + 0xE68]
	0x03CFBFE8 LDR X26, [X26 + 0xE70]
	0x03CFBFEC LDR X23, [X23 + 0xE78]
	0x03CFBFF0 LDR X22, [X22 + 0xE80]
	0x03CFBFF4 LDR X25, [X25 + 0xE88]
	0x03CFBFF8 LDRB W8, [X21 + 0x7E3]
	0x03CFBFFC LDR X24, [X24 + 0xE90]
	0x03CFC000 TBNZ X8, 0x0, 0x3CFC0FC
	0x03CFC004 ADRP X0, 0x466000
	0x03CFC008 LDR X0, [X0 + 0xA98]
	0x03CFC00C BL 0x1C16CF4
	0x03CFC010 ADRP X0, 0x466000
	0x03CFC014 LDR X0, [X0 + 0xE98]
	0x03CFC018 BL 0x1C16CF4
	0x03CFC01C ADRP X0, 0x466000
	0x03CFC020 LDR X0, [X0 + 0xE70]
	0x03CFC024 BL 0x1C16CF4
	0x03CFC028 ADRP X0, 0x466000
	0x03CFC02C LDR X0, [X0 + 0xEA0]
	0x03CFC030 BL 0x1C16CF4
	0x03CFC034 ADRP X0, 0x466000
	0x03CFC038 LDR X0, [X0 + 0xE78]
	0x03CFC03C BL 0x1C16CF4
	0x03CFC040 ADRP X0, 0x466000
	0x03CFC044 LDR X0, [X0 + 0xEA8]
	0x03CFC048 BL 0x1C16CF4
	0x03CFC04C ADRP X0, 0x466000
	0x03CFC050 LDR X0, [X0 + 0xE58]
	0x03CFC054 BL 0x1C16CF4
	0x03CFC058 ADRP X0, 0x466000
	0x03CFC05C LDR X0, [X0 + 0xE80]
	0x03CFC060 BL 0x1C16CF4
	0x03CFC064 ADRP X0, 0x466000
	0x03CFC068 LDR X0, [X0 + 0xE60]
	0x03CFC06C BL 0x1C16CF4
	0x03CFC070 ADRP X0, 0x466000
	0x03CFC074 LDR X0, [X0 + 0xEB0]
	0x03CFC078 BL 0x1C16CF4
	0x03CFC07C ADRP X0, 0x466000
	0x03CFC080 LDR X0, [X0 + 0xEB8]
	0x03CFC084 BL 0x1C16CF4
	0x03CFC088 ADRP X0, 0x466000
	0x03CFC08C LDR X0, [X0 + 0xEC0]
	0x03CFC090 BL 0x1C16CF4
	0x03CFC094 ADRP X0, 0x466000
	0x03CFC098 LDR X0, [X0 + 0xE68]
	0x03CFC09C BL 0x1C16CF4
	0x03CFC0A0 ADRP X0, 0x420000
	0x03CFC0A4 LDR X0, [X0 + 0xBE0]
	0x03CFC0A8 BL 0x1C16CF4
	0x03CFC0AC ADRP X0, 0x466000
	0x03CFC0B0 LDR X0, [X0 + 0xEC8]
	0x03CFC0B4 BL 0x1C16CF4
	0x03CFC0B8 ADRP X0, 0x404000
	0x03CFC0BC LDR X0, [X0 + 0x840]
	0x03CFC0C0 BL 0x1C16CF4
	0x03CFC0C4 ADRP X0, 0x466000
	0x03CFC0C8 LDR X0, [X0 + 0xED0]
	0x03CFC0CC BL 0x1C16CF4
	0x03CFC0D0 ADRP X0, 0x466000
	0x03CFC0D4 LDR X0, [X0 + 0xED8]
	0x03CFC0D8 BL 0x1C16CF4
	0x03CFC0DC ADRP X0, 0x466000
	0x03CFC0E0 LDR X0, [X0 + 0xE90]
	0x03CFC0E4 BL 0x1C16CF4
	0x03CFC0E8 ADRP X0, 0x466000
	0x03CFC0EC LDR X0, [X0 + 0xE88]
	0x03CFC0F0 BL 0x1C16CF4
	0x03CFC0F4 MOVZ W8, 0x1
	0x03CFC0F8 STRB W8, [X21 + 0x7E3]
	0x03CFC0FC LDR X8, [X19]
	0x03CFC100 LDR X9, [X20]
	0x03CFC104 MOV X2, X31
	0x03CFC108 LDR X8, [X8 + 0xB8]
	0x03CFC10C STR X9, [X8]
	0x03CFC110 LDR X8, [X19]
	0x03CFC114 LDR X0, [X29]
	0x03CFC118 LDR X8, [X8 + 0xB8]
	0x03CFC11C STR X0, [X8 + 0x8]
	0x03CFC120 LDR X1, [X28]
	0x03CFC124 BL 0x321B938
	0x03CFC128 LDR X8, [X19]
	0x03CFC12C MOV X2, X31
	0x03CFC130 LDR X8, [X8 + 0xB8]
	0x03CFC134 STR X0, [X8 + 0x10]
	0x03CFC138 LDR X0, [X8 + 0x8]
	0x03CFC13C LDR X1, [X27]
	0x03CFC140 BL 0x321B938
	0x03CFC144 LDR X8, [X19]
	0x03CFC148 MOV X2, X31
	0x03CFC14C LDR X8, [X8 + 0xB8]
	0x03CFC150 STR X0, [X8 + 0x18]
	0x03CFC154 LDR X0, [X8 + 0x8]
	0x03CFC158 LDR X1, [X26]
	0x03CFC15C BL 0x321B938
	0x03CFC160 LDR X8, [X19]
	0x03CFC164 MOV X2, X31
	0x03CFC168 LDR X8, [X8 + 0xB8]
	0x03CFC16C STR X0, [X8 + 0x20]
	0x03CFC170 LDR X0, [X8 + 0x8]
	0x03CFC174 LDR X1, [X23]
	0x03CFC178 BL 0x321B938
	0x03CFC17C LDR X8, [X19]
	0x03CFC180 MOV X2, X31
	0x03CFC184 LDR X8, [X8 + 0xB8]
	0x03CFC188 STR X0, [X8 + 0x28]
	0x03CFC18C LDR X1, [X22]
	0x03CFC190 BL 0x321B938
	0x03CFC194 LDR X8, [X19]
	0x03CFC198 MOV X2, X31
	0x03CFC19C LDR X8, [X8 + 0xB8]
	0x03CFC1A0 STR X0, [X8 + 0x30]
	0x03CFC1A4 ADRP X8, 0x466000
	0x03CFC1A8 LDR X8, [X8 + 0xED8]
	0x03CFC1AC LDR X1, [X8]
	0x03CFC1B0 BL 0x321B938
	0x03CFC1B4 LDR X8, [X19]
	0x03CFC1B8 MOV X2, X31
	0x03CFC1BC LDR X8, [X8 + 0xB8]
	0x03CFC1C0 STR X0, [X8 + 0x38]
	0x03CFC1C4 LDR X0, [X8 + 0x28]
	0x03CFC1C8 ADRP X8, 0x466000
	0x03CFC1CC LDR X8, [X8 + 0xEB8]
	0x03CFC1D0 LDR X1, [X8]
	0x03CFC1D4 BL 0x321B938
	0x03CFC1D8 LDR X8, [X19]
	0x03CFC1DC MOV X2, X31
	0x03CFC1E0 LDR X8, [X8 + 0xB8]
	0x03CFC1E4 STR X0, [X8 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6ED000
	006 Move W8, [X20+2007]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {32}
	012 Move X0, 0x3FA000
	013 Move X0, [X0+3696]
	014 Call 0x1C17CF4
	015 Move X0, 0x468000
	016 Move X0, [X0+3600]
	017 Call 0x1C17CF4
	018 Move X0, 0x468000
	019 Move X0, [X0+3608]
	020 Call 0x1C17CF4
	021 Move X0, 0x400000
	022 Move X0, [X0+752]
	023 Call 0x1C17CF4
	024 Move X0, 0x424000
	025 Move X0, [X0+2744]
	026 Call 0x1C17CF4
	027 Move X0, 0x421000
	028 Move X0, [X0+1664]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+2007], W8
	032 Move W1, 1
	033 Move X0, X19
	034 Call BaseListView.AddItems, X0, X1
	035 Move X8, [X19+968]
	036 Compare X8, 0
	037 JumpIfEqual {72}
	038 Move X20, 0x3FA000
	039 Move X21, 0x468000
	040 Move X20, [X20+3696]
	041 Move X21, [X21+3608]
	042 Move X0, X19
	043 Move X1, X31
	044 Call VisualElement.get_schedule, X0
	045 Move X8, [X20]
	046 Move X20, X0
	047 Move X0, X8
	048 Call 0x1C17F10
	049 Move X2, [X21]
	050 Move X1, X19
	051 Move X3, X31
	052 Move X21, X0
	053 Call Action..ctor, X0, X1, X2
	054 Compare X20, 0
	055 JumpIfEqual {176}
	056 Move X10, 0x420000
	057 Move X8, [X20]
	058 Move X10, [X10+1664]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X1, [X10]
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 1
	070 Move X0, X20
	071 Call 0x1C5D788
	072 Move X0, X19
	073 Move X1, X31
	074 Call BaseVerticalCollectionView.get_itemsSource, X0
	075 Compare X0, 0
	076 JumpIfEqual {176}
	077 Move X10, 0x3FF000
	078 Move X8, [X0]
	079 Move X10, [X10+752]
	080 Move X20, X0
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Move X1, [X10]
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move W2, 1
	092 Move X0, X20
	093 Call 0x1C5D788
	094 Move W9, [X10]
	095 Add W9, W9, 1
	096 Add X8, X8, W9
	097 Add X0, X8, 312
	098 Move X8, [X0]
	099 Move X2, [X0+8]
	100 Move X0, X20
	101 Move X1, X21
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Compare X0, 0
	104 JumpIfEqual {176}
	105 Move X10, 0x423000
	106 Move X8, [X0]
	107 Move X10, [X10+2744]
	108 Move X20, X0
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Move X1, [X10]
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move W2, 2
	120 Move X0, X20
	121 Call 0x1C5D788
	122 Move W9, [X10]
	123 Add W9, W9, 2
	124 Add X8, X8, W9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X2, [X0+8]
	128 Move W1, 100
	129 Move X0, X20
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move W9, [X10]
	132 Add W9, W9, 1
	133 Add X8, X8, W9
	134 Add X0, X8, 312
	135 Move X8, [X0]
	136 Move X1, [X0+8]
	137 Move X0, X20
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Subtract W1, W0, 1
	140 Move X0, X19
	141 Move X2, X31
	142 Call BaseVerticalCollectionView.SetSelection, X0, X1
	143 Move TEMP, 0
	144 Not TEMP
	145 Move W1, TEMP
	146 Move X0, X19
	147 Move X2, X31
	148 Call BaseVerticalCollectionView.ScrollToItem, X0, X1
	149 Move X8, [X19]
	150 Move X0, X19
	151 Move X9, [X8+2056]
	152 Move X1, [X8+2064]
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {171}
	158 Move X0, [X19+1248]
	159 Compare X0, 0
	160 JumpIfEqual {171}
	161 Move X8, 0x467000
	162 Move X8, [X8+3600]
	163 Move X20, [X31+16]
	164 Move X19, [X31+24]
	165 Move W1, W31
	166 Move X2, [X8]
	167 Move X30, [X31+32]
	168 Move X21, [X31+40]
	169 Call BaseField`1<Object>.set_showMixedValue, X0, X1
	170 Return 
	171 Move X20, [X31+16]
	172 Move X19, [X31+24]
	173 Move X30, [X31+32]
	174 Move X21, [X31+40]
	175 Return 
	176 Call 0x1C17F20

Method: System.Void OnRemoveClicked()

Disassembly:
	0x03CFC1E8 ADRP X8, 0x466000
	0x03CFC1EC LDR X8, [X8 + 0xEC8]
	0x03CFC1F0 LDR X1, [X8]
	0x03CFC1F4 BL 0x321B938
	0x03CFC1F8 LDR X8, [X19]
	0x03CFC1FC MOV X2, X31
	0x03CFC200 LDR X8, [X8 + 0xB8]
	0x03CFC204 STR X0, [X8 + 0x48]
	0x03CFC208 LDR X0, [X8 + 0x8]
	0x03CFC20C ADRP X8, 0x466000
	0x03CFC210 LDR X8, [X8 + 0xEC0]
	0x03CFC214 LDR X1, [X8]
	0x03CFC218 BL 0x321B938
	0x03CFC21C LDR X8, [X19]
	0x03CFC220 MOV X2, X31
	0x03CFC224 LDR X8, [X8 + 0xB8]
	0x03CFC228 STR X0, [X8 + 0x50]
	0x03CFC22C LDR X0, [X8 + 0x8]
	0x03CFC230 ADRP X8, 0x466000
	0x03CFC234 LDR X8, [X8 + 0xEA0]
	0x03CFC238 LDR X1, [X8]
	0x03CFC23C BL 0x321B938
	0x03CFC240 LDR X8, [X19]
	0x03CFC244 MOV X2, X31
	0x03CFC248 LDR X8, [X8 + 0xB8]
	0x03CFC24C STR X0, [X8 + 0x58]
	0x03CFC250 LDR X0, [X8 + 0x8]
	0x03CFC254 ADRP X8, 0x466000
	0x03CFC258 LDR X8, [X8 + 0xEB0]
	0x03CFC25C LDR X1, [X8]
	0x03CFC260 BL 0x321B938
	0x03CFC264 LDR X8, [X19]
	0x03CFC268 MOV X2, X31
	0x03CFC26C LDR X8, [X8 + 0xB8]
	0x03CFC270 STR X0, [X8 + 0x60]
	0x03CFC274 LDR X1, [X25]
	0x03CFC278 BL 0x321B938
	0x03CFC27C LDR X8, [X19]
	0x03CFC280 MOV X2, X31
	0x03CFC284 LDR X8, [X8 + 0xB8]
	0x03CFC288 STR X0, [X8 + 0x68]
	0x03CFC28C LDR X0, [X8 + 0x60]
	0x03CFC290 LDR X1, [X24]
	0x03CFC294 BL 0x321B938
	0x03CFC298 LDR X8, [X19]
	0x03CFC29C MOV X2, X31
	0x03CFC2A0 LDR X8, [X8 + 0xB8]
	0x03CFC2A4 STR X0, [X8 + 0x70]
	0x03CFC2A8 LDR X0, [X8 + 0x8]
	0x03CFC2AC LDR X1, [X25]
	0x03CFC2B0 BL 0x321B938
	0x03CFC2B4 LDR X8, [X19]
	0x03CFC2B8 MOV X2, X31
	0x03CFC2BC LDR X8, [X8 + 0xB8]
	0x03CFC2C0 STR X0, [X8 + 0x78]
	0x03CFC2C4 LDR X0, [X8 + 0x8]
	0x03CFC2C8 LDR X1, [X24]
	0x03CFC2CC BL 0x321B938
	0x03CFC2D0 LDR X8, [X19]
	0x03CFC2D4 MOV X2, X31
	0x03CFC2D8 LDR X8, [X8 + 0xB8]
	0x03CFC2DC STR X0, [X8 + 0x80]
	0x03CFC2E0 LDR X0, [X8 + 0x8]
	0x03CFC2E4 ADRP X8, 0x466000
	0x03CFC2E8 LDR X8, [X8 + 0xED0]
	0x03CFC2EC LDR X1, [X8]
	0x03CFC2F0 BL 0x321B938
	0x03CFC2F4 LDR X8, [X19]
	0x03CFC2F8 MOV X2, X31
	0x03CFC2FC LDR X8, [X8 + 0xB8]
	0x03CFC300 STR X0, [X8 + 0x88]
	0x03CFC304 LDR X0, [X8 + 0x8]
	0x03CFC308 ADRP X8, 0x466000
	0x03CFC30C LDR X8, [X8 + 0xEA8]
	0x03CFC310 LDR X1, [X8]
	0x03CFC314 BL 0x321B938
	0x03CFC318 LDR X8, [X19]
	0x03CFC31C MOV X2, X31
	0x03CFC320 LDR X8, [X8 + 0xB8]
	0x03CFC324 STR X0, [X8 + 0x90]
	0x03CFC328 LDR X0, [X8 + 0x8]
	0x03CFC32C ADRP X8, 0x466000
	0x03CFC330 LDR X8, [X8 + 0xE98]
	0x03CFC334 LDR X1, [X8]
	0x03CFC338 BL 0x321B938
	0x03CFC33C LDR X8, [X19]
	0x03CFC340 ADRP X9, 0x420000
	0x03CFC344 LDR X8, [X8 + 0xB8]
	0x03CFC348 STR X0, [X8 + 0x98]
	0x03CFC34C LDR X9, [X9 + 0xBE0]
	0x03CFC350 LDP X20, X19, [X31 + 0x50]
	0x03CFC354 LDP X22, X21, [X31 + 0x40]
	0x03CFC358 LDP X24, X23, [X31 + 0x30]
	0x03CFC35C LDR X9, [X9]
	0x03CFC360 LDP X26, X25, [X31 + 0x20]
	0x03CFC364 LDP X28, X27, [X31 + 0x10]
	0x03CFC368 STR X9, [X8 + 0xA0]
	0x03CFC36C LDP X29, X30, [X31], #0x60
	0x03CFC370 RET
	0x03CFC374 STR X30, [X31 - 0x20]!
	0x03CFC378 STP X20, X19, [X31 + 0x10]
	0x03CFC37C ADRP X20, 0x6EB000
	0x03CFC380 LDRB W8, [X20 + 0x7E4]
	0x03CFC384 MOV X19, X0
	0x03CFC388 TBNZ X8, 0x0, 0x3CFC3A0
	0x03CFC38C ADRP X0, 0x3FE000
	0x03CFC390 LDR X0, [X0 + 0x2F0]
	0x03CFC394 BL 0x1C16CF4
	0x03CFC398 MOVZ W8, 0x1
	0x03CFC39C STRB W8, [X20 + 0x7E4]
	0x03CFC3A0 MOV X0, X19
	0x03CFC3A4 MOV X1, X31
	0x03CFC3A8 BL 0x3CFE9FC
	0x03CFC3AC CBZ X0, 0x3CFC440
	0x03CFC3B0 ADRP X10, 0x3FE000
	0x03CFC3B4 LDR X8, [X0]
	0x03CFC3B8 LDR X10, [X10 + 0x2F0]
	0x03CFC3BC MOV X20, X0
	0x03CFC3C0 LDRH W9, [X8 + 0x12E]
	0x03CFC3C4 LDR X1, [X10]
	0x03CFC3C8 CBZ X9, 0x3CFC3EC
	0x03CFC3CC LDR X10, [X8 + 0xB0]
	0x03CFC3D0 ADD X10, X10, 0x8
	0x03CFC3D4 LDUR X11, [X10 - 0x8]
	0x03CFC3D8 CMP X11, X1
	0x03CFC3DC B.EQ 0x3CFC3FC
	0x03CFC3E0 SUBS X9, X9, 0x1
	0x03CFC3E4 ADD X10, X10, 0x10
	0x03CFC3E8 B.NE 0x3CFC3D4
	0x03CFC3EC MOVZ W2, 0x1
	0x03CFC3F0 MOV X0, X20
	0x03CFC3F4 BL 0x1C5C788
	0x03CFC3F8 B 0x3CFC40C
	0x03CFC3FC LDR W9, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6EC000
	006 Move X20, 0x452000
	007 Move W8, [X21+2008]
	008 Move X20, [X20+2720]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x467000
	015 Move X0, [X0+3600]
	016 Call 0x1C17CF4
	017 Move X0, 0x452000
	018 Move X0, [X0+2720]
	019 Call 0x1C17CF4
	020 Move X0, 0x453000
	021 Move X0, [X0+680]
	022 Call 0x1C17CF4
	023 Move X0, 0x3FF000
	024 Move X0, [X0+752]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2008], W8
	028 Move X0, [X19+1136]
	029 Move X1, [X20]
	030 Call Enumerable.Any, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {55}
	035 Move X20, 0x453000
	036 Move X20, [X20+680]
	037 Move X0, X19
	038 Call BaseListView.get_viewController, X0
	039 Move X8, [X19+1136]
	040 Move X1, [X20]
	041 Move X20, X0
	042 Move X0, X8
	043 Call Enumerable.ToList, X0
	044 Compare X20, 0
	045 JumpIfEqual {151}
	046 Move X8, [X20]
	047 Move X1, X0
	048 Move X0, X20
	049 Move X9, [X8+728]
	050 Move X2, [X8+736]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X0, X19
	053 Move X1, X31
	054 Call BaseVerticalCollectionView.ClearSelection, X0
	055 Move X0, X19
	056 Move X1, X31
	057 Call BaseVerticalCollectionView.get_itemsSource, X0
	058 Compare X0, 0
	059 JumpIfEqual {151}
	060 Move X21, 0x3FF000
	061 Move X8, [X0]
	062 Move X21, [X21+752]
	063 Move X20, X0
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move X1, [X21]
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move W2, 1
	075 Move X0, X20
	076 Call 0x1C5D788
	077 Move W9, [X10]
	078 Add W9, W9, 1
	079 Add X8, X8, W9
	080 Add X0, X8, 312
	081 Move X8, [X0]
	082 Move X1, [X0+8]
	083 Move X0, X20
	084 NotImplemented "Instruction BLR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, X19
	087 Move X1, X31
	088 Call BaseVerticalCollectionView.get_itemsSource, X0
	089 Compare X0, 0
	090 JumpIfEqual {151}
	091 Move X8, [X0]
	092 Move X1, [X21]
	093 Move X20, X0
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Compare X9, 0
	096 JumpIfEqual {103}
	097 Move X10, [X8+176]
	098 Add X10, X10, 8
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract X9, X9, 1
	102 Add X10, X10, 16
	103 Move W2, 1
	104 Move X0, X20
	105 Call 0x1C5D788
	106 Move W9, [X10]
	107 Add W9, W9, 1
	108 Add X8, X8, W9
	109 Add X0, X8, 312
	110 Move X8, [X0]
	111 Move X1, [X0+8]
	112 Move X0, X20
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move W20, W0
	115 Move X0, X19
	116 Call BaseListView.get_viewController, X0
	117 Compare X0, 0
	118 JumpIfEqual {151}
	119 Move X8, [X0]
	120 Subtract W1, W20, 1
	121 Move X9, [X8+712]
	122 Move X2, [X8+720]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X8, [X19]
	125 Move X0, X19
	126 Move X9, [X8+2056]
	127 Move X1, [X8+2064]
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {146}
	133 Move X0, [X19+1248]
	134 Compare X0, 0
	135 JumpIfEqual {146}
	136 Move X8, 0x467000
	137 Move X8, [X8+3600]
	138 Move X20, [X31+16]
	139 Move X19, [X31+24]
	140 Move W1, W31
	141 Move X2, [X8]
	142 Move X30, [X31+32]
	143 Move X21, [X31+40]
	144 Call BaseField`1<Object>.set_showMixedValue, X0, X1
	145 Return 
	146 Move X20, [X31+16]
	147 Move X19, [X31+24]
	148 Move X30, [X31+32]
	149 Move X21, [X31+40]
	150 Return 
	151 Call 0x1C17F20

Method: UnityEngine.UIElements.VisualElement get_footer()

Disassembly:
	0x03CFC400 ADD W9, W9, 0x1
	0x03CFC404 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move X0, [X0+1264]
	002 Return X0

Method: UnityEngine.UIElements.BaseListViewController get_viewController()

Disassembly:
	0x03CFBD24 B.EQ 0x3CFBA44
	0x03CFBD28 B 0x3CFBD8C
	0x03CFBD2C BL 0x1C16F20
	0x03CFBD30 B 0x3CFBEB4
	0x03CFBD34 BL 0x1C16F20
	0x03CFBD38 B 0x3CFBEB4
	0x03CFBD3C MOV X23, X0
	0x03CFBD40 MOV W28, W24
	0x03CFBD44 B 0x3CFBD68
	0x03CFBD48 B 0x3CFBD64
	0x03CFBD4C B 0x3CFBD64
	0x03CFBD50 B 0x3CFBD64
	0x03CFBD54 B 0x3CFBD64
	0x03CFBD58 B 0x3CFBD64
	0x03CFBD5C B 0x3CFBD64
	0x03CFBD60 B 0x3CFBD64
	0x03CFBD64 MOV X23, X0
	0x03CFBD68 CMP W1, 0x1
	0x03CFBD6C B.NE 0x3CFBE1C
	0x03CFBD70 MOV X0, X23
	0x03CFBD74 BL 0x3EB1AD0
	0x03CFBD78 LDR X24, [X0]
	0x03CFBD7C BL 0x3EB1AE0
	0x03CFBD80 MOV W23, W31
	0x03CFBD84 CBNZ X22, 0x3CFBCB8
	0x03CFBD88 B 0x3CFBD18
	0x03CFBD8C MOV X20, X31
	0x03CFBD90 CBZ X19, 0x3CFBDF4
	0x03CFBD94 LDR X8, [X19]
	0x03CFBD98 ADRP X10, 0x3F8000
	0x03CFBD9C LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6ED000
	005 Move W8, [X20+2009]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x468000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2009], W8
	016 Move X8, [X19+1096]
	017 Compare X8, 0
	018 JumpIfEqual {26}
	019 Move X9, 0x468000
	020 Move X9, [X9+3584]
	021 Move X10, [X8]
	022 Move X9, [X9]
	023 Move W12, [X10+304]
	024 Move W11, [X9+304]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, X31
	027 Move X10, [X10+200]
	028 Add X10, X10, X11
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Void CreateVirtualizationController()

Disassembly:
	0x03CFC408 ADD X0, X8, 0x138
	0x03CFC40C LDP X8, X1, [X0]
	0x03CFC410 MOV X0, X20
	0x03CFC414 BLR X8
	0x03CFC418 SUB W1, W0, 0x1
	0x03CFC41C MOV X0, X19
	0x03CFC420 MOV X2, X31
	0x03CFC424 BL 0x3CFDD8C
	0x03CFC428 MOV X0, X19
	0x03CFC42C LDP X20, X19, [X31 + 0x10]
	0x03CFC430 MOVN W1, 0x0
	0x03CFC434 MOV X2, X31
	0x03CFC438 LDR X30, [X31], #0x20
	0x03CFC43C B 0x3CFDE14
	0x03CFC440 BL 0x1C16F20
	0x03CFC444 SUB X31, X31, 0x120
	0x03CFC448 STR X29, [X31 + 0xE0]
	0x03CFC44C STP X30, X23, [X31 + 0xF0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6EC000
	006 Move X21, 0x467000
	007 Move W8, [X20+2010]
	008 Move X21, [X21+3616]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x467000
	015 Move X0, [X0+3616]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2010], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x21A0CE8, X0
	026 Return 

Method: System.Void SetViewController(UnityEngine.UIElements.CollectionViewController controller)

Disassembly:
	0x03CFC450 STP X22, X21, [X31 + 0x100]
	0x03CFC454 STP X20, X19, [X31 + 0x110]
	0x03CFC458 ADRP X23, 0x6EB000
	0x03CFC45C LDRB W8, [X23 + 0x7E9]
	0x03CFC460 MOV X21, X3
	0x03CFC464 MOV X20, X2
	0x03CFC468 MOV X19, X1
	0x03CFC46C MOV X22, X0
	0x03CFC470 TBNZ X8, 0x0, 0x3CFC488
	0x03CFC474 ADRP X0, 0x466000
	0x03CFC478 LDR X0, [X0 + 0xA98]
	0x03CFC47C BL 0x1C16CF4
	0x03CFC480 MOVZ W8, 0x1
	0x03CFC484 STRB W8, [X23 + 0x7E9]
	0x03CFC488 LDP V1, V0, [X21]
	0x03CFC48C ADD X3, X31, 0xA0
	0x03CFC490 MOV X0, X22
	0x03CFC494 MOV X1, X19
	0x03CFC498 MOV X2, X20
	0x03CFC49C STP V1, V0, [X31 + 0xA0]
	0x03CFC4A0 BL 0x3CFC644
	0x03CFC4A4 CBZ X19, 0x3CFC4DC
	0x03CFC4A8 ADRP X9, 0x466000
	0x03CFC4AC LDR X9, [X9 + 0xA98]
	0x03CFC4B0 LDR X8, [X19]
	0x03CFC4B4 LDR X1, [X9]
	0x03CFC4B8 LDRB W10, [X8 + 0x130]
	0x03CFC4BC LDRB W9, [X1 + 0x130]
	0x03CFC4C0 CMP W10, W9
	0x03CFC4C4 B.CC 0x3CFC63C
	0x03CFC4C8 LDR X8, [X8 + 0xC8]
	0x03CFC4CC ADD X8, X8, X9, 0x3, LSL
	0x03CFC4D0 LDUR X8, [X8 - 0x8]
	0x03CFC4D4 CMP X8, X1
	0x03CFC4D8 B.NE 0x3CFC63C
	0x03CFC4DC LDP V0, V1, [X21]
	0x03CFC4E0 LDR X0, [X22 + 0xC8]
	0x03CFC4E4 STP V0, V1, [X31 + 0x80]
	0x03CFC4E8 CBZ X0, 0x3CFC638
	0x03CFC4EC LDR X8, [X0]
	0x03CFC4F0 LDP V0, V1, [X31 + 0x80]
	0x03CFC4F4 ADD X2, X31, 0xC0
	0x03CFC4F8 MOV X1, X20
	0x03CFC4FC LDR X9, [X8 + 0x178]
	0x03CFC500 STP V0, V1, [X31 + 0xC0]
	0x03CFC504 LDR X3, [X8 + 0x180]
	0x03CFC508 BLR X9
	0x03CFC50C CBZ X19, 0x3CFC638
	0x03CFC510 MOV W1, W0
	0x03CFC514 MOV X0, X19
	0x03CFC518 MOV X2, X31
	0x03CFC51C BL 0x3CFB6DC
	0x03CFC520 LDP V0, V1, [X21]
	0x03CFC524 LDR X0, [X22 + 0xB0]
	0x03CFC528 STP V0, V1, [X31 + 0x60]
	0x03CFC52C CBZ X0, 0x3CFC638
	0x03CFC530 LDR X8, [X0]
	0x03CFC534 LDP V0, V1, [X31 + 0x60]
	0x03CFC538 ADD X2, X31, 0xC0
	0x03CFC53C MOV X1, X20
	0x03CFC540 LDR X9, [X8 + 0x178]
	0x03CFC544 STP V0, V1, [X31 + 0xC0]
	0x03CFC548 LDR X3, [X8 + 0x180]
	0x03CFC54C BLR X9
	0x03CFC550 AND W1, W0, 0x1
	0x03CFC554 MOV X0, X19
	0x03CFC558 MOV X2, X31
	0x03CFC55C BL 0x3CFA3F8
	0x03CFC560 LDP V0, V1, [X21]
	0x03CFC564 LDR X0, [X22 + 0xB8]
	0x03CFC568 STP V0, V1, [X31 + 0x40]
	0x03CFC56C CBZ X0, 0x3CFC638
	0x03CFC570 LDR X8, [X0]
	0x03CFC574 LDP V0, V1, [X31 + 0x40]
	0x03CFC578 ADD X2, X31, 0xC0
	0x03CFC57C MOV X1, X20
	0x03CFC580 LDR X9, [X8 + 0x178]
	0x03CFC584 STP V0, V1, [X31 + 0xC0]
	0x03CFC588 LDR X3, [X8 + 0x180]
	0x03CFC58C BLR X9
	0x03CFC590 MOV X1, X0
	0x03CFC594 MOV X0, X19
	0x03CFC598 MOV X2, X31
	0x03CFC59C BL 0x3CFACD4
	0x03CFC5A0 LDP V0, V1, [X21]
	0x03CFC5A4 LDR X0, [X22 + 0xC0]
	0x03CFC5A8 STP V0, V1, [X31 + 0x20]
	0x03CFC5AC CBZ X0, 0x3CFC638
	0x03CFC5B0 LDR X8, [X0]
	0x03CFC5B4 LDP V0, V1, [X31 + 0x20]
	0x03CFC5B8 ADD X2, X31, 0xC0
	0x03CFC5BC MOV X1, X20
	0x03CFC5C0 LDR X9, [X8 + 0x178]
	0x03CFC5C4 STP V0, V1, [X31 + 0xC0]
	0x03CFC5C8 LDR X3, [X8 + 0x180]
	0x03CFC5CC BLR X9
	0x03CFC5D0 AND W1, W0, 0x1
	0x03CFC5D4 MOV X0, X19
	0x03CFC5D8 MOV X2, X31
	0x03CFC5DC BL 0x3CFACF0
	0x03CFC5E0 LDP V0, V1, [X21]
	0x03CFC5E4 LDR X0, [X22 + 0xD0]
	0x03CFC5E8 STP V0, V1, [X31]
	0x03CFC5EC CBZ X0, 0x3CFC638
	0x03CFC5F0 LDR X8, [X0]
	0x03CFC5F4 LDP V0, V1, [X31]
	0x03CFC5F8 ADD X2, X31, 0xC0
	0x03CFC5FC MOV X1, X20
	0x03CFC600 LDR X9, [X8 + 0x178]
	0x03CFC604 STP V0, V1, [X31 + 0xC0]
	0x03CFC608 LDR X3, [X8 + 0x180]
	0x03CFC60C BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6EC000
	006 Move W8, [X21+2011]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x467000
	014 Move X0, [X0+2704]
	015 Call 0x1C17CF4
	016 Move X0, 0x3F9000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x467000
	020 Move X0, [X0+3624]
	021 Call 0x1C17CF4
	022 Move X0, 0x467000
	023 Move X0, [X0+3632]
	024 Call 0x1C17CF4
	025 Move X0, 0x467000
	026 Move X0, [X0+3640]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2011], W8
	030 Move X8, [X19+1288]
	031 Compare X8, 0
	032 JumpIfNotEqual {45}
	033 Move X8, 0x467000
	034 Move X8, [X8+2704]
	035 Move X0, [X8]
	036 Call 0x1C17F10
	037 Move X8, 0x467000
	038 Move X8, [X8+3624]
	039 Move X1, X19
	040 Move X3, X31
	041 Move X21, X0
	042 Move X2, [X8]
	043 Call Action`1<Object>..ctor, X0, X1, X2
	044 Move [X19+1288], X21
	045 Move X8, [X19+1296]
	046 Compare X8, 0
	047 JumpIfNotEqual {60}
	048 Move X8, 0x467000
	049 Move X8, [X8+2704]
	050 Move X0, [X8]
	051 Call 0x1C17F10
	052 Move X8, 0x467000
	053 Move X8, [X8+3632]
	054 Move X1, X19
	055 Move X3, X31
	056 Move X21, X0
	057 Move X2, [X8]
	058 Call Action`1<Object>..ctor, X0, X1, X2
	059 Move [X19+1296], X21
	060 Move X8, [X19+1304]
	061 Compare X8, 0
	062 JumpIfNotEqual {75}
	063 Move X8, 0x3F9000
	064 Move X8, [X8+3696]
	065 Move X0, [X8]
	066 Call 0x1C17F10
	067 Move X8, 0x467000
	068 Move X8, [X8+3640]
	069 Move X1, X19
	070 Move X3, X31
	071 Move X21, X0
	072 Move X2, [X8]
	073 Call Action..ctor, X0, X1, X2
	074 Move [X19+1304], X21
	075 Move X0, X19
	076 Call BaseListView.get_viewController, X0
	077 Compare X0, 0
	078 JumpIfEqual {97}
	079 Move X0, X19
	080 Call BaseListView.get_viewController, X0
	081 Compare X0, 0
	082 JumpIfEqual {133}
	083 Move X1, [X19+1288]
	084 Call BaseListViewController.remove_itemsAdded, X0, X1
	085 Move X0, X19
	086 Call BaseListView.get_viewController, X0
	087 Compare X0, 0
	088 JumpIfEqual {133}
	089 Move X1, [X19+1296]
	090 Call BaseListViewController.remove_itemsRemoved, X0, X1
	091 Move X0, X19
	092 Call BaseListView.get_viewController, X0
	093 Compare X0, 0
	094 JumpIfEqual {133}
	095 Move X1, [X19+1304]
	096 Call BaseListViewController.remove_itemsSourceSizeChanged, X0, X1
	097 Move X0, X19
	098 Move X1, X20
	099 Move X2, X31
	100 Call BaseVerticalCollectionView.SetViewController, X0, X1
	101 Move X0, X19
	102 Call BaseListView.get_viewController, X0
	103 Compare X0, 0
	104 JumpIfEqual {128}
	105 Move X0, X19
	106 Call BaseListView.get_viewController, X0
	107 Compare X0, 0
	108 JumpIfEqual {133}
	109 Move X1, [X19+1288]
	110 Call BaseListViewController.add_itemsAdded, X0, X1
	111 Move X0, X19
	112 Call BaseListView.get_viewController, X0
	113 Compare X0, 0
	114 JumpIfEqual {133}
	115 Move X1, [X19+1296]
	116 Call BaseListViewController.add_itemsRemoved, X0, X1
	117 Move X0, X19
	118 Call BaseListView.get_viewController, X0
	119 Compare X0, 0
	120 JumpIfEqual {133}
	121 Move X1, [X19+1304]
	122 Move X20, [X31+16]
	123 Move X19, [X31+24]
	124 Move X30, [X31+32]
	125 Move X21, [X31+40]
	126 Call BaseListViewController.add_itemsSourceSizeChanged, X0, X1
	127 Return 
	128 Move X20, [X31+16]
	129 Move X19, [X31+24]
	130 Move X30, [X31+32]
	131 Move X21, [X31+40]
	132 Return 
	133 Call 0x1C17F20

Method: System.Void OnItemAdded(System.Collections.Generic.IEnumerable`1<System.Int32> indices)

Disassembly:
	0x03CFC610 AND W1, W0, 0x1
	0x03CFC614 MOV X0, X19
	0x03CFC618 MOV X2, X31
	0x03CFC61C BL 0x3CFA0DC
	0x03CFC620 LDP X20, X19, [X31 + 0x110]
	0x03CFC624 LDP X22, X21, [X31 + 0x100]
	0x03CFC628 LDP X30, X23, [X31 + 0xF0]

ISIL:
	001 Move X8, [X0+1208]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X3, [X8+24]
	005 Move X0, [X8+64]
	006 Move X2, [X8+40]
	007 CallNoReturn X3
	008 Return 

Method: System.Void OnItemsRemoved(System.Collections.Generic.IEnumerable`1<System.Int32> indices)

Disassembly:
	0x03CFC62C LDR X29, [X31 + 0xE0]
	0x03CFC630 ADD X31, X31, 0x120
	0x03CFC634 RET
	0x03CFC638 BL 0x1C16F20
	0x03CFC63C MOV X0, X19
	0x03CFC640 BL 0x1C171E0
	0x03CFC644 SUB X31, X31, 0x140

ISIL:
	001 Move X8, [X0+1216]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X3, [X8+24]
	005 Move X0, [X8+64]
	006 Move X2, [X8+40]
	007 CallNoReturn X3
	008 Return 

Method: System.Void OnItemsSourceSizeChanged()

Disassembly:
	0x03CFC648 STR X29, [X31 + 0x100]
	0x03CFC64C STP X30, X23, [X31 + 0x110]
	0x03CFC650 STP X22, X21, [X31 + 0x120]
	0x03CFC654 STP X20, X19, [X31 + 0x130]
	0x03CFC658 ADRP X23, 0x6EB000
	0x03CFC65C LDRB W8, [X23 + 0x823]
	0x03CFC660 MOV X21, X3
	0x03CFC664 MOV X20, X2
	0x03CFC668 MOV X19, X1
	0x03CFC66C MOV X22, X0
	0x03CFC670 TBNZ X8, 0x0, 0x3CFC688
	0x03CFC674 ADRP X0, 0x421000
	0x03CFC678 LDR X0, [X0 + 0xF18]
	0x03CFC67C BL 0x1C16CF4
	0x03CFC680 MOVZ W8, 0x1
	0x03CFC684 STRB W8, [X23 + 0x823]
	0x03CFC688 STR W31, [X31 + 0x10C]
	0x03CFC68C LDP V1, V0, [X21]
	0x03CFC690 ADD X3, X31, 0xC0
	0x03CFC694 MOV X0, X22
	0x03CFC698 MOV X1, X19
	0x03CFC69C MOV X2, X20
	0x03CFC6A0 MOV X4, X31
	0x03CFC6A4 STP V1, V0, [X31 + 0xC0]
	0x03CFC6A8 BL 0x3CEA08C
	0x03CFC6AC STR W31, [X31 + 0x10C]
	0x03CFC6B0 CBZ X19, 0x3CFC6E8
	0x03CFC6B4 ADRP X9, 0x421000
	0x03CFC6B8 LDR X9, [X9 + 0xF18]
	0x03CFC6BC LDR X8, [X19]
	0x03CFC6C0 LDR X1, [X9]
	0x03CFC6C4 LDRB W10, [X8 + 0x130]
	0x03CFC6C8 LDRB W9, [X1 + 0x130]
	0x03CFC6CC CMP W10, W9
	0x03CFC6D0 B.CC 0x3CFC8DC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6EC000
	006 Move X21, 0x467000
	007 Move W8, [X20+2012]
	008 Move X21, [X21+3064]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x467000
	015 Move X0, [X0+3064]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2012], W8
	019 Move X0, [X21]
	020 Move X1, X31
	021 Call PropertyName.op_Implicit, X0
	022 And X1, X0, 0
	023 Move X0, X19
	024 Move X2, X31
	025 Call VisualElement.GetProperty, X0, X1
	026 Compare X0, 0
	027 JumpIfNotEqual {31}
	028 Move X0, X19
	029 Move X1, X31
	030 Call BaseVerticalCollectionView.RefreshItems, X0
	031 Move X8, [X19+1224]
	032 Compare X8, 0
	033 JumpIfEqual {42}
	034 Move X2, [X8+24]
	035 Move X0, [X8+64]
	036 Move X1, [X8+40]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 CallNoReturn X2
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return 

Method: System.Void add_reorderModeChanged(System.Action value)

Disassembly:
	0x03CF7048 CBZ X0, 0x3CF7068
	0x03CF704C LDR X23, [X24]
	0x03CF7050 MOV X22, X0
	0x03CF7054 MOV X1, X23
	0x03CF7058 BL 0x1C16E00
	0x03CF705C MOV X1, X0
	0x03CF7060 CBNZ X0, 0x3CF706C
	0x03CF7064 B 0x3CF7098
	0x03CF7068 MOV X1, X31
	0x03CF706C MOV X0, X20
	0x03CF7070 MOV X2, X21
	0x03CF7074 BL 0x1C24138
	0x03CF7078 CMP X21, X0
	0x03CF707C MOV X21, X0
	0x03CF7080 B.NE 0x3CF7038
	0x03CF7084 LDP X20, X19, [X31 + 0x30]
	0x03CF7088 LDP X22, X21, [X31 + 0x20]
	0x03CF708C LDP X24, X23, [X31 + 0x10]
	0x03CF7090 LDR X30, [X31], #0x40
	0x03CF7094 RET
	0x03CF7098 MOV X0, X22
	0x03CF709C MOV X1, X23
	0x03CF70A0 BL 0x1C171E0
	0x03CF70A4 STR X30, [X31 - 0x30]!
	0x03CF70A8 STP X22, X21, [X31 + 0x10]
	0x03CF70AC STP X20, X19, [X31 + 0x20]
	0x03CF70B0 ADRP X22, 0x6F0000
	0x03CF70B4 ADRP X21, 0x426000
	0x03CF70B8 ADRP X20, 0x46B000
	0x03CF70BC LDRB W8, [X22 + 0x7AC]
	0x03CF70C0 LDR X21, [X21 + 0x660]
	0x03CF70C4 LDR X20, [X20 + 0xC78]
	0x03CF70C8 MOV X19, X0
	0x03CF70CC TBNZ X8, 0x0, 0x3CF70F0
	0x03CF70D0 ADRP X0, 0x426000
	0x03CF70D4 LDR X0, [X0 + 0x660]
	0x03CF70D8 BL 0x1C16CF4
	0x03CF70DC ADRP X0, 0x46B000
	0x03CF70E0 LDR X0, [X0 + 0xC78]
	0x03CF70E4 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6F1000
	007 Move W8, [X21+2013]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3FE000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2013], W8
	019 Move X22, 0x3FE000
	020 Move X21, [X20+1320]
	021 Move X22, [X22+3696]
	022 Add X20, X20, 1320
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Combine, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void remove_reorderModeChanged(System.Action value)

Disassembly:
	0x03CF71A0 BL 0x1C16DFC
	0x03CF71A4 CBZ X20, 0x3CF71F4
	0x03CF71A8 LDR X8, [X21]
	0x03CF71AC MOV X0, X20
	0x03CF71B0 MOV X2, X31
	0x03CF71B4 LDR X8, [X8 + 0xB8]
	0x03CF71B8 LDR X1, [X8 + 0x38]
	0x03CF71BC BL 0x3DF1C70
	0x03CF71C0 LDR X8, [X19]
	0x03CF71C4 MOV X0, X19
	0x03CF71C8 LDP X9, X1, [X8 + 0x178]
	0x03CF71CC BLR X9
	0x03CF71D0 CBZ X0, 0x3CF71F4
	0x03CF71D4 ADRP X8, 0x426000
	0x03CF71D8 LDR X8, [X8 + 0x658]
	0x03CF71DC LDR X1, [X19 + 0x38]
	0x03CF71E0 LDP X20, X19, [X31 + 0x10]
	0x03CF71E4 MOV W2, W31
	0x03CF71E8 LDR X3, [X8]
	0x03CF71EC LDP X30, X21, [X31], #0x20
	0x03CF71F0 B 0x21A1534
	0x03CF71F4 BL 0x1C16F20
	0x03CF71F8 STP X30, X21, [X31 - 0x20]!
	0x03CF71FC STP X20, X19, [X31 + 0x10]
	0x03CF7200 ADRP X20, 0x6F0000
	0x03CF7204 ADRP X21, 0x426000
	0x03CF7208 LDRB W8, [X20 + 0x7AE]
	0x03CF720C LDR X21, [X21 + 0xF18]
	0x03CF7210 MOV X19, X0
	0x03CF7214 TBNZ X8, 0x0, 0x3CF7238
	0x03CF7218 ADRP X0, 0x426000
	0x03CF721C LDR X0, [X0 + 0xF18]
	0x03CF7220 BL 0x1C16CF4
	0x03CF7224 ADRP X0, 0x426000
	0x03CF7228 LDR X0, [X0 + 0x698]
	0x03CF722C BL 0x1C16CF4
	0x03CF7230 MOVZ W8, 0x1
	0x03CF7234 STRB W8, [X20 + 0x7AE]
	0x03CF7238 LDR X8, [X19]
	0x03CF723C MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6F1000
	007 Move W8, [X21+2014]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3FE000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2014], W8
	019 Move X22, 0x3FE000
	020 Move X21, [X20+1320]
	021 Move X22, [X22+3696]
	022 Add X20, X20, 1320
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Remove, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: UnityEngine.UIElements.ListViewReorderMode get_reorderMode()

Disassembly:
	0x03CFC6D4 LDR X8, [X8 + 0xC8]
	0x03CFC6D8 ADD X8, X8, X9, 0x3, LSL

ISIL:
	001 Move W0, [X0+1312]
	002 Return X0

Method: System.Void set_reorderMode(UnityEngine.UIElements.ListViewReorderMode value)

Disassembly:
	0x03CFC6DC LDUR X8, [X8 - 0x8]
	0x03CFC6E0 CMP X8, X1
	0x03CFC6E4 B.NE 0x3CFC8DC
	0x03CFC6E8 LDP V0, V1, [X21]
	0x03CFC6EC LDR X0, [X22 + 0xA0]
	0x03CFC6F0 STP V0, V1, [X31 + 0xA0]
	0x03CFC6F4 CBZ X0, 0x3CFC8D8
	0x03CFC6F8 LDR X8, [X0]
	0x03CFC6FC LDP V0, V1, [X31 + 0xA0]
	0x03CFC700 ADD X2, X31, 0xE0
	0x03CFC704 MOV X1, X20
	0x03CFC708 LDR X9, [X8 + 0x178]
	0x03CFC70C STP V0, V1, [X31 + 0xE0]
	0x03CFC710 LDR X3, [X8 + 0x180]
	0x03CFC714 BLR X9
	0x03CFC718 CBZ X19, 0x3CFC8D8
	0x03CFC71C AND W1, W0, 0x1
	0x03CFC720 MOV X0, X19
	0x03CFC724 BL 0x3CFEF20
	0x03CFC728 LDP V0, V1, [X21]
	0x03CFC72C LDR X0, [X22 + 0x78]
	0x03CFC730 STP V0, V1, [X31 + 0xE0]
	0x03CFC734 CBZ X0, 0x3CFC8D8
	0x03CFC738 LDP V0, V1, [X31 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+1312]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X30, [X31+16]
	006 Move X19, [X31+24]
	007 Return 
	008 Move [X0+1312], W1
	009 Move X1, X31
	010 Move X19, X0
	011 Call BaseVerticalCollectionView.get_reorderable, X0
	012 And W1, W0, 1
	013 Move X0, X19
	014 Move X2, X31
	015 Call BaseVerticalCollectionView.InitializeDragAndDropController, X0, X1
	016 Move X8, [X19+1320]
	017 Compare X8, 0
	018 JumpIfEqual {23}
	019 Move X9, [X8+24]
	020 Move X0, [X8+64]
	021 Move X1, [X8+40]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X0, X19
	024 Move X1, X31
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Call BaseVerticalCollectionView.Rebuild, X0
	028 Return 

Method: UnityEngine.UIElements.ListViewDragger CreateDragger()

Disassembly:
	0x03CFC73C ADD X2, X31, 0x80
	0x03CFC740 ADD X3, X31, 0x10C
	0x03CFC744 MOV X1, X20
	0x03CFC748 MOV X4, X31
	0x03CFC74C STP V0, V1, [X31 + 0x80]
	0x03CFC750 BL 0x3E1BE88
	0x03CFC754 TBZ X0, 0x0, 0x3CFC768
	0x03CFC758 LDR V0, [X31 + 0x10C]
	0x03CFC75C MOV X0, X19
	0x03CFC760 SCVTF S0, S0
	0x03CFC764 BL 0x3CFF2A8
	0x03CFC768 LDP V0, V1, [X21]
	0x03CFC76C LDR X0, [X22 + 0x80]
	0x03CFC770 STP V0, V1, [X31 + 0xA0]
	0x03CFC774 CBZ X0, 0x3CFC8D8
	0x03CFC778 LDR X8, [X0]
	0x03CFC77C LDP V0, V1, [X31 + 0xA0]
	0x03CFC780 ADD X2, X31, 0xE0
	0x03CFC784 MOV X1, X20
	0x03CFC788 LDR X9, [X8 + 0x178]
	0x03CFC78C STP V0, V1, [X31 + 0xE0]
	0x03CFC790 LDR X3, [X8 + 0x180]
	0x03CFC794 BLR X9
	0x03CFC798 LDR W8, [X19 + 0x43C]
	0x03CFC79C STR W0, [X19 + 0x43C]
	0x03CFC7A0 CMP W8, W0
	0x03CFC7A4 B.EQ 0x3CFC7C4
	0x03CFC7A8 LDR X8, [X19]
	0x03CFC7AC MOV X0, X19
	0x03CFC7B0 LDR X9, [X8 + 0x7B8]
	0x03CFC7B4 LDR X1, [X8 + 0x7C0]
	0x03CFC7B8 BLR X9
	0x03CFC7BC MOV X0, X19
	0x03CFC7C0 BL 0x3CFF05C
	0x03CFC7C4 LDP V0, V1, [X21]
	0x03CFC7C8 LDR X0, [X22 + 0x88]
	0x03CFC7CC STP V0, V1, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6EC000
	005 Move W8, [X20+2015]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x422000
	012 Move X0, [X0+3912]
	013 Call 0x1C17CF4
	014 Move X0, 0x467000
	015 Move X0, [X0+3648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2015], W8
	019 Move W8, [X19+1312]
	020 Compare W8, 0
	021 JumpIfEqual {30}
	022 Move X8, 0x422000
	023 Move X8, [X8+3912]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X1, X19
	027 Move X2, X31
	028 Move X20, X0
	029 Call ListViewDraggerAnimated..ctor, X0, X1
	030 Move X8, 0x467000
	031 Move X8, [X8+3648]
	032 Move X0, [X8]
	033 Call 0x1C17F10
	034 Move X1, X19
	035 Move X2, X31
	036 Move X20, X0
	037 Call ListViewDragger..ctor, X0, X1
	038 Move X0, X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return X0

Method: UnityEngine.UIElements.ICollectionDragAndDropController CreateDragAndDropController()

Disassembly:
	0x03CFC7D0 CBZ X0, 0x3CFC8D8
	0x03CFC7D4 LDR X8, [X0]
	0x03CFC7D8 LDP V0, V1, [X31 + 0x60]
	0x03CFC7DC ADD X2, X31, 0xE0
	0x03CFC7E0 MOV X1, X20
	0x03CFC7E4 LDR X9, [X8 + 0x178]
	0x03CFC7E8 STP V0, V1, [X31 + 0xE0]
	0x03CFC7EC LDR X3, [X8 + 0x180]
	0x03CFC7F0 BLR X9
	0x03CFC7F4 AND W1, W0, 0x1
	0x03CFC7F8 MOV X0, X19
	0x03CFC7FC BL 0x3CFEDB0
	0x03CFC800 LDP V0, V1, [X21]
	0x03CFC804 LDR X0, [X22 + 0x90]
	0x03CFC808 STP V0, V1, [X31 + 0x40]
	0x03CFC80C CBZ X0, 0x3CFC8D8
	0x03CFC810 LDR X8, [X0]
	0x03CFC814 LDP V0, V1, [X31 + 0x40]
	0x03CFC818 ADD X2, X31, 0xE0
	0x03CFC81C MOV X1, X20
	0x03CFC820 LDR X9, [X8 + 0x178]
	0x03CFC824 STP V0, V1, [X31 + 0xE0]
	0x03CFC828 LDR X3, [X8 + 0x180]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6EC000
	006 Move X21, 0x467000
	007 Move W8, [X20+2016]
	008 Move X21, [X21+3656]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x467000
	015 Move X0, [X0+3656]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2016], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X2, X31
	023 Move X20, X0
	024 Call ListViewReorderableDragAndDropController..ctor, X0, X1
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03CFC82C BLR X9
	0x03CFC830 MOV W1, W0
	0x03CFC834 MOV X0, X19
	0x03CFC838 BL 0x3CFEAD4
	0x03CFC83C LDP V0, V1, [X21]
	0x03CFC840 LDR X0, [X22 + 0x98]
	0x03CFC844 STP V0, V1, [X31 + 0x20]
	0x03CFC848 CBZ X0, 0x3CFC8D8
	0x03CFC84C LDR X8, [X0]
	0x03CFC850 LDP V0, V1, [X31 + 0x20]
	0x03CFC854 ADD X2, X31, 0xE0
	0x03CFC858 MOV X1, X20
	0x03CFC85C LDR X9, [X8 + 0x178]
	0x03CFC860 STP V0, V1, [X31 + 0xE0]
	0x03CFC864 LDR X3, [X8 + 0x180]
	0x03CFC868 BLR X9
	0x03CFC86C LDR W8, [X19 + 0x430]
	0x03CFC870 CMP W8, W0
	0x03CFC874 B.EQ 0x3CFC884
	0x03CFC878 STR W0, [X19 + 0x430]
	0x03CFC87C MOV X0, X19
	0x03CFC880 BL 0x3CFD108
	0x03CFC884 LDP V0, V1, [X21]
	0x03CFC888 LDR X0, [X22 + 0xA8]
	0x03CFC88C STP V0, V1, [X31]
	0x03CFC890 CBZ X0, 0x3CFC8D8
	0x03CFC894 LDR X8, [X0]
	0x03CFC898 LDP V0, V1, [X31]
	0x03CFC89C ADD X2, X31, 0xE0
	0x03CFC8A0 MOV X1, X20
	0x03CFC8A4 LDR X9, [X8 + 0x178]
	0x03CFC8A8 STP V0, V1, [X31 + 0xE0]
	0x03CFC8AC LDR X3, [X8 + 0x180]
	0x03CFC8B0 BLR X9
	0x03CFC8B4 AND W1, W0, 0x1
	0x03CFC8B8 MOV X0, X19
	0x03CFC8BC BL 0x3CFF1CC
	0x03CFC8C0 LDP X20, X19, [X31 + 0x130]
	0x03CFC8C4 LDP X22, X21, [X31 + 0x120]
	0x03CFC8C8 LDP X30, X23, [X31 + 0x110]
	0x03CFC8CC LDR X29, [X31 + 0x100]
	0x03CFC8D0 ADD X31, X31, 0x140
	0x03CFC8D4 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6EC000
	006 Move X20, 0x422000
	007 Move W8, [X21+2017]
	008 Move X20, [X20+3864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x467000
	015 Move X0, [X0+2712]
	016 Call 0x1C17CF4
	017 Move X0, 0x422000
	018 Move X0, [X0+3864]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2017], W8
	022 Move W8, 1
	023 Move [X19+1196], W8
	024 Move X0, [X20]
	025 Move X20, 0x467000
	026 Move W8, [X0+224]
	027 Move X20, [X20+2712]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Move X1, X31
	033 Call BaseVerticalCollectionView..ctor, X0
	034 Move X0, [X20]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X20]
	040 Move X8, [X0+184]
	041 Move X0, X19
	042 Move X2, X31
	043 Move X1, [X8+8]
	044 Call VisualElement.AddToClassList, X0, X1
	045 Move X0, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move W1, 1
	049 Move X2, X31
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Call VisualElement.set_pickingMode, X0, X1
	053 Return 

Method: System.Void PostRefresh()

Disassembly:
	0x03CFC8D8 BL 0x1C16F20
	0x03CFC8DC MOV X0, X19
	0x03CFC8E0 BL 0x1C171E0
	0x03CFC8E4 STP X30, X21, [X31 - 0x20]!
	0x03CFC8E8 STP X20, X19, [X31 + 0x10]
	0x03CFC8EC ADRP X20, 0x6EB000
	0x03CFC8F0 ADRP X21, 0x421000
	0x03CFC8F4 LDRB W8, [X20 + 0x7EA]
	0x03CFC8F8 LDR X21, [X21 + 0x758]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call BaseListView.UpdateArraySizeField, X0
	005 Move X0, X19
	006 Call BaseListView.UpdateListViewLabel, X0
	007 Move X0, X19
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call BaseVerticalCollectionView.PostRefresh, X0
	012 Return 

Method: System.Boolean HandleItemNavigation(System.Boolean moveIn, System.Boolean altPressed)

Disassembly:
	0x03CFC8FC MOV X19, X0
	0x03CFC900 TBNZ X8, 0x0, 0x3CFC9B4
	0x03CFC904 ADRP X0, 0x3F9000
	0x03CFC908 LDR X0, [X0 + 0x278]
	0x03CFC90C BL 0x1C16CF4
	0x03CFC910 ADRP X0, 0x466000
	0x03CFC914 LDR X0, [X0 + 0xEE0]
	0x03CFC918 BL 0x1C16CF4
	0x03CFC91C ADRP X0, 0x421000
	0x03CFC920 LDR X0, [X0 + 0xC78]
	0x03CFC924 BL 0x1C16CF4
	0x03CFC928 ADRP X0, 0x421000
	0x03CFC92C LDR X0, [X0 + 0xB28]
	0x03CFC930 BL 0x1C16CF4
	0x03CFC934 ADRP X0, 0x421000
	0x03CFC938 LDR X0, [X0 + 0xC60]
	0x03CFC93C BL 0x1C16CF4
	0x03CFC940 ADRP X0, 0x421000
	0x03CFC944 LDR X0, [X0 + 0x758]
	0x03CFC948 BL 0x1C16CF4
	0x03CFC94C ADRP X0, 0x466000
	0x03CFC950 LDR X0, [X0 + 0xEE8]
	0x03CFC954 BL 0x1C16CF4
	0x03CFC958 ADRP X0, 0x466000
	0x03CFC95C LDR X0, [X0 + 0xEF0]
	0x03CFC960 BL 0x1C16CF4
	0x03CFC964 ADRP X0, 0x421000
	0x03CFC968 LDR X0, [X0 + 0xB20]
	0x03CFC96C BL 0x1C16CF4
	0x03CFC970 ADRP X0, 0x466000
	0x03CFC974 LDR X0, [X0 + 0xEF8]
	0x03CFC978 BL 0x1C16CF4
	0x03CFC97C ADRP X0, 0x466000
	0x03CFC980 LDR X0, [X0 + 0xF00]
	0x03CFC984 BL 0x1C16CF4
	0x03CFC988 ADRP X0, 0x466000
	0x03CFC98C LDR X0, [X0 + 0xF08]
	0x03CFC990 BL 0x1C16CF4
	0x03CFC994 ADRP X0, 0x466000
	0x03CFC998 LDR X0, [X0 + 0xF10]
	0x03CFC99C BL 0x1C16CF4
	0x03CFC9A0 ADRP X0, 0x466000
	0x03CFC9A4 LDR X0, [X0 + 0xF18]
	0x03CFC9A8 BL 0x1C16CF4
	0x03CFC9AC MOVZ W8, 0x1
	0x03CFC9B0 STRB W8, [X20 + 0x7EA]
	0x03CFC9B4 LDR X0, [X21]
	0x03CFC9B8 BL 0x1C16F10
	0x03CFC9BC MOV X1, X31
	0x03CFC9C0 MOV X20, X0
	0x03CFC9C4 BL 0x3E13BD4
	0x03CFC9C8 CBZ X20, 0x3CFCAF4
	0x03CFC9CC ADRP X8, 0x466000
	0x03CFC9D0 LDR X8, [X8 + 0xEF8]
	0x03CFC9D4 ADRP X9, 0x421000
	0x03CFC9D8 LDR X8, [X8]
	0x03CFC9DC LDR X9, [X9 + 0xB20]
	0x03CFC9E0 STRB W31, [X20 + 0x40]
	0x03CFC9E4 STR X8, [X20 + 0x10]
	0x03CFC9E8 STR X20, [X19 + 0xB0]
	0x03CFC9EC LDR X0, [X9]
	0x03CFC9F0 BL 0x1C16F10
	0x03CFC9F4 MOV X1, X31
	0x03CFC9F8 MOV X20, X0
	0x03CFC9FC BL 0x3E0A2F4
	0x03CFCA00 CBZ X20, 0x3CFCAF4
	0x03CFCA04 ADRP X8, 0x466000
	0x03CFCA08 LDR X8, [X8 + 0xF00]
	0x03CFCA0C ADRP X9, 0x3F9000
	0x03CFCA10 LDR X8, [X8]
	0x03CFCA14 LDR X9, [X9 + 0x278]
	0x03CFCA18 STR X8, [X20 + 0x10]
	0x03CFCA1C LDR X8, [X9]
	0x03CFCA20 LDR X8, [X8 + 0xB8]
	0x03CFCA24 LDR X8, [X8]
	0x03CFCA28 STR X8, [X20 + 0x40]
	0x03CFCA2C STR X20, [X19 + 0xB8]
	0x03CFCA30 LDR X0, [X21]
	0x03CFCA34 BL 0x1C16F10
	0x03CFCA38 MOV X1, X31
	0x03CFCA3C MOV X20, X0
	0x03CFCA40 BL 0x3E13BD4
	0x03CFCA44 CBZ X20, 0x3CFCAF4
	0x03CFCA48 ADRP X8, 0x466000
	0x03CFCA4C LDR X8, [X8 + 0xF10]
	0x03CFCA50 ADRP X9, 0x466000
	0x03CFCA54 LDR X8, [X8]
	0x03CFCA58 LDR X9, [X9 + 0xEF0]
	0x03CFCA5C STRB W31, [X20 + 0x40]
	0x03CFCA60 STR X8, [X20 + 0x10]
	0x03CFCA64 STR X20, [X19 + 0xC0]
	0x03CFCA68 LDR X0, [X9]
	0x03CFCA6C ADRP X20, 0x466000
	0x03CFCA70 LDR X20, [X20 + 0xEE8]
	0x03CFCA74 BL 0x1C16F10
	0x03CFCA78 LDR X1, [X20]
	0x03CFCA7C MOV X20, X0
	0x03CFCA80 BL 0x2734B10
	0x03CFCA84 CBZ X20, 0x3CFCAF4
	0x03CFCA88 ADRP X8, 0x466000
	0x03CFCA8C LDR X8, [X8 + 0xF08]
	0x03CFCA90 LDR X8, [X8]
	0x03CFCA94 STR W31, [X20 + 0x40]
	0x03CFCA98 STR X8, [X20 + 0x10]
	0x03CFCA9C STR X20, [X19 + 0xC8]
	0x03CFCAA0 LDR X0, [X21]
	0x03CFCAA4 BL 0x1C16F10
	0x03CFCAA8 MOV X1, X31
	0x03CFCAAC MOV X20, X0
	0x03CFCAB0 BL 0x3E13BD4
	0x03CFCAB4 CBZ X20, 0x3CFCAF4
	0x03CFCAB8 ADRP X8, 0x466000
	0x03CFCABC LDR X8, [X8 + 0xF18]
	0x03CFCAC0 MOVZ W21, 0x1
	0x03CFCAC4 MOV X0, X19
	0x03CFCAC8 LDR X8, [X8]
	0x03CFCACC STRB W21, [X20 + 0x40]
	0x03CFCAD0 STR X8, [X20 + 0x10]
	0x03CFCAD4 STR X20, [X19 + 0xD0]
	0x03CFCAD8 BL 0x3CFCAF8
	0x03CFCADC LDR X8, [X19 + 0x28]
	0x03CFCAE0 CBZ X8, 0x3CFCAF4
	0x03CFCAE4 LDP X20, X19, [X31 + 0x10]
	0x03CFCAE8 STR W21, [X8 + 0x40]
	0x03CFCAEC LDP X30, X21, [X31], #0x20
	0x03CFCAF0 RET
	0x03CFCAF4 BL 0x1C16F20
	0x03CFCAF8 STP X30, X23, [X31 - 0x30]!
	0x03CFCAFC STP X22, X21, [X31 + 0x10]
	0x03CFCB00 STP X20, X19, [X31 + 0x20]
	0x03CFCB04 ADRP X20, 0x6EB000
	0x03CFCB08 ADRP X21, 0x421000
	0x03CFCB0C LDRB W8, [X20 + 0x822]
	0x03CFCB10 LDR X21, [X21 + 0xC08]
	0x03CFCB14 MOV X19, X0
	0x03CFCB18 TBNZ X8, 0x0, 0x3CFCC38
	0x03CFCB1C ADRP X0, 0x421000
	0x03CFCB20 LDR X0, [X0 + 0xF18]
	0x03CFCB24 BL 0x1C16CF4
	0x03CFCB28 ADRP X0, 0x3F7000
	0x03CFCB2C LDR X0, [X0 + 0xAC8]
	0x03CFCB30 BL 0x1C16CF4
	0x03CFCB34 ADRP X0, 0x466000
	0x03CFCB38 LDR X0, [X0 + 0xF20]
	0x03CFCB3C BL 0x1C16CF4
	0x03CFCB40 ADRP X0, 0x466000
	0x03CFCB44 LDR X0, [X0 + 0xF28]
	0x03CFCB48 BL 0x1C16CF4
	0x03CFCB4C ADRP X0, 0x421000
	0x03CFCB50 LDR X0, [X0 + 0xB28]
	0x03CFCB54 BL 0x1C16CF4
	0x03CFCB58 ADRP X0, 0x466000
	0x03CFCB5C LDR X0, [X0 + 0xF30]
	0x03CFCB60 BL 0x1C16CF4
	0x03CFCB64 ADRP X0, 0x421000
	0x03CFCB68 LDR X0, [X0 + 0xBF0]
	0x03CFCB6C BL 0x1C16CF4
	0x03CFCB70 ADRP X0, 0x421000
	0x03CFCB74 LDR X0, [X0 + 0x758]
	0x03CFCB78 BL 0x1C16CF4
	0x03CFCB7C ADRP X0, 0x466000
	0x03CFCB80 LDR X0, [X0 + 0xF38]
	0x03CFCB84 BL 0x1C16CF4
	0x03CFCB88 ADRP X0, 0x466000
	0x03CFCB8C LDR X0, [X0 + 0xF40]
	0x03CFCB90 BL 0x1C16CF4
	0x03CFCB94 ADRP X0, 0x466000
	0x03CFCB98 LDR X0, [X0 + 0xF48]
	0x03CFCB9C BL 0x1C16CF4
	0x03CFCBA0 ADRP X0, 0x466000
	0x03CFCBA4 LDR X0, [X0 + 0xF50]
	0x03CFCBA8 BL 0x1C16CF4
	0x03CFCBAC ADRP X0, 0x466000
	0x03CFCBB0 LDR X0, [X0 + 0xF58]
	0x03CFCBB4 BL 0x1C16CF4
	0x03CFCBB8 ADRP X0, 0x466000
	0x03CFCBBC LDR X0, [X0 + 0xF60]
	0x03CFCBC0 BL 0x1C16CF4
	0x03CFCBC4 ADRP X0, 0x421000
	0x03CFCBC8 LDR X0, [X0 + 0xC08]
	0x03CFCBCC BL 0x1C16CF4
	0x03CFCBD0 ADRP X0, 0x466000
	0x03CFCBD4 LDR X0, [X0 + 0xF68]
	0x03CFCBD8 BL 0x1C16CF4
	0x03CFCBDC ADRP X0, 0x466000
	0x03CFCBE0 LDR X0, [X0 + 0xF70]
	0x03CFCBE4 BL 0x1C16CF4
	0x03CFCBE8 ADRP X0, 0x466000
	0x03CFCBEC LDR X0, [X0 + 0xF78]
	0x03CFCBF0 BL 0x1C16CF4
	0x03CFCBF4 ADRP X0, 0x466000
	0x03CFCBF8 LDR X0, [X0 + 0xF80]
	0x03CFCBFC BL 0x1C16CF4
	0x03CFCC00 ADRP X0, 0x466000
	0x03CFCC04 LDR X0, [X0 + 0xF88]
	0x03CFCC08 BL 0x1C16CF4
	0x03CFCC0C ADRP X0, 0x421000
	0x03CFCC10 LDR X0, [X0 + 0xBE0]
	0x03CFCC14 BL 0x1C16CF4
	0x03CFCC18 ADRP X0, 0x466000
	0x03CFCC1C LDR X0, [X0 + 0xF90]
	0x03CFCC20 BL 0x1C16CF4
	0x03CFCC24 ADRP X0, 0x466000
	0x03CFCC28 LDR X0, [X0 + 0xF98]
	0x03CFCC2C BL 0x1C16CF4
	0x03CFCC30 MOVZ W8, 0x1
	0x03CFCC34 STRB W8, [X20 + 0x822]
	0x03CFCC38 LDR X0, [X21]
	0x03CFCC3C BL 0x1C16F10
	0x03CFCC40 MOV X1, X31
	0x03CFCC44 MOV X20, X0
	0x03CFCC48 BL 0x3E1BCA4
	0x03CFCC4C CBZ X20, 0x3CFCE54
	0x03CFCC50 ADRP X8, 0x466000
	0x03CFCC54 LDR X8, [X8 + 0xF68]
	0x03CFCC58 ADRP X9, 0x3F7000
	0x03CFCC5C MOVZ W1, 0x1
	0x03CFCC60 LDR X8, [X8]
	0x03CFCC64 LDR X9, [X9 + 0xAC8]
	0x03CFCC68 STR X8, [X20 + 0x10]
	0x03CFCC6C LDR X0, [X9]
	0x03CFCC70 BL 0x1C16D6C
	0x03CFCC74 CBZ X0, 0x3CFCE54
	0x03CFCC78 LDR W8, [X0 + 0x18]
	0x03CFCC7C MOV X1, X0
	0x03CFCC80 CBZ W8, 0x3CFCE58
	0x03CFCC84 ADRP X8, 0x466000
	0x03CFCC88 LDR X8, [X8 + 0xF98]
	0x03CFCC8C ADRP X23, 0x421000
	0x03CFCC90 ADRP X22, 0x466000
	0x03CFCC94 ADRP X21, 0x466000
	0x03CFCC98 LDR X8, [X8]
	0x03CFCC9C LDR X23, [X23 + 0xF18]
	0x03CFCCA0 LDR X22, [X22 + 0xF58]
	0x03CFCCA4 LDR X21, [X21 + 0xF40]
	0x03CFCCA8 MOV X0, X20
	0x03CFCCAC MOV X2, X31
	0x03CFCCB0 STR X8, [X1 + 0x20]
	0x03CFCCB4 BL 0x3E1AE24
	0x03CFCCB8 LDR X0, [X23]
	0x03CFCCBC LDR W8, [X0 + 0xE0]
	0x03CFCCC0 CBNZ W8, 0x3CFCCCC
	0x03CFCCC4 BL 0x1C16DFC
	0x03CFCCC8 LDR X0, [X23]
	0x03CFCCCC LDR X8, [X0 + 0xB8]
	0x03CFCCD0 LDR W8, [X8 + 0x18]
	0x03CFCCD4 STR W8, [X20 + 0x40]
	0x03CFCCD8 STR X20, [X19 + 0x78]
	0x03CFCCDC LDR X0, [X22]
	0x03CFCCE0 BL 0x1C16F10
	0x03CFCCE4 LDR X1, [X21]
	0x03CFCCE8 MOV X20, X0
	0x03CFCCEC BL 0x2734B10
	0x03CFCCF0 CBZ X20, 0x3CFCE54
	0x03CFCCF4 ADRP X8, 0x466000
	0x03CFCCF8 LDR X8, [X8 + 0xF70]
	0x03CFCCFC ADRP X21, 0x421000
	0x03CFCD00 LDR X8, [X8]
	0x03CFCD04 LDR X21, [X21 + 0x758]
	0x03CFCD08 STR W31, [X20 + 0x40]
	0x03CFCD0C STR X8, [X20 + 0x10]
	0x03CFCD10 STR X20, [X19 + 0x80]
	0x03CFCD14 LDR X0, [X21]
	0x03CFCD18 BL 0x1C16F10
	0x03CFCD1C MOV X1, X31
	0x03CFCD20 MOV X20, X0
	0x03CFCD24 BL 0x3E13BD4
	0x03CFCD28 CBZ X20, 0x3CFCE54
	0x03CFCD2C ADRP X8, 0x466000
	0x03CFCD30 LDR X8, [X8 + 0xF80]
	0x03CFCD34 ADRP X9, 0x466000
	0x03CFCD38 LDR X8, [X8]
	0x03CFCD3C LDR X9, [X9 + 0xF50]
	0x03CFCD40 STRB W31, [X20 + 0x40]
	0x03CFCD44 STR X8, [X20 + 0x10]
	0x03CFCD48 STR X20, [X19 + 0x88]
	0x03CFCD4C LDR X0, [X9]
	0x03CFCD50 ADRP X20, 0x466000
	0x03CFCD54 LDR X20, [X20 + 0xF38]
	0x03CFCD58 BL 0x1C16F10
	0x03CFCD5C LDR X1, [X20]
	0x03CFCD60 MOV X20, X0
	0x03CFCD64 BL 0x2734B10
	0x03CFCD68 CBZ X20, 0x3CFCE54
	0x03CFCD6C ADRP X8, 0x466000
	0x03CFCD70 LDR X8, [X8 + 0xF90]
	0x03CFCD74 ADRP X9, 0x466000
	0x03CFCD78 MOVZ W10, 0x1
	0x03CFCD7C LDR X8, [X8]
	0x03CFCD80 LDR X9, [X9 + 0xF60]
	0x03CFCD84 STR W10, [X20 + 0x40]
	0x03CFCD88 STR X8, [X20 + 0x10]
	0x03CFCD8C STR X20, [X19 + 0x90]
	0x03CFCD90 LDR X0, [X9]
	0x03CFCD94 ADRP X20, 0x466000
	0x03CFCD98 LDR X20, [X20 + 0xF48]
	0x03CFCD9C BL 0x1C16F10
	0x03CFCDA0 LDR X1, [X20]
	0x03CFCDA4 MOV X20, X0
	0x03CFCDA8 BL 0x2734B10
	0x03CFCDAC CBZ X20, 0x3CFCE54
	0x03CFCDB0 ADRP X8, 0x466000
	0x03CFCDB4 LDR X8, [X8 + 0xF88]
	0x03CFCDB8 LDR X8, [X8]
	0x03CFCDBC STR W31, [X20 + 0x40]
	0x03CFCDC0 STR X8, [X20 + 0x10]
	0x03CFCDC4 STR X20, [X19 + 0x98]
	0x03CFCDC8 LDR X0, [X21]
	0x03CFCDCC BL 0x1C16F10
	0x03CFCDD0 MOV X1, X31
	0x03CFCDD4 MOV X20, X0
	0x03CFCDD8 BL 0x3E13BD4
	0x03CFCDDC CBZ X20, 0x3CFCE54
	0x03CFCDE0 ADRP X8, 0x421000
	0x03CFCDE4 LDR X8, [X8 + 0xBE0]
	0x03CFCDE8 LDR X8, [X8]
	0x03CFCDEC STRB W31, [X20 + 0x40]
	0x03CFCDF0 STR X8, [X20 + 0x10]
	0x03CFCDF4 STR X20, [X19 + 0xA0]
	0x03CFCDF8 LDR X0, [X21]
	0x03CFCDFC BL 0x1C16F10
	0x03CFCE00 MOV X1, X31
	0x03CFCE04 MOV X20, X0
	0x03CFCE08 BL 0x3E13BD4
	0x03CFCE0C CBZ X20, 0x3CFCE54
	0x03CFCE10 ADRP X8, 0x466000
	0x03CFCE14 LDR X8, [X8 + 0xF78]
	0x03CFCE18 MOV X0, X19
	0x03CFCE1C MOV X1, X31
	0x03CFCE20 LDR X8, [X8]
	0x03CFCE24 STRB W31, [X20 + 0x40]
	0x03CFCE28 STR X8, [X20 + 0x10]
	0x03CFCE2C STR X20, [X19 + 0xA8]
	0x03CFCE30 BL 0x3CEA004
	0x03CFCE34 LDR X8, [X19 + 0x50]
	0x03CFCE38 CBZ X8, 0x3CFCE54
	0x03CFCE3C LDP X20, X19, [X31 + 0x20]
	0x03CFCE40 LDP X22, X21, [X31 + 0x10]
	0x03CFCE44 MOVZ W9, 0x1
	0x03CFCE48 STRB W9, [X8 + 0x40]
	0x03CFCE4C LDP X30, X23, [X31], #0x30
	0x03CFCE50 RET
	0x03CFCE54 BL 0x1C16F20
	0x03CFCE58 BL 0x1C16F28
	0x03CFCE5C STR X30, [X31 - 0x10]!
	0x03CFCE60 BL 0x3CFCE7C
	0x03CFCE64 CBZ X0, 0x3CFCE78
	0x03CFCE68 LDR X8, [X0]
	0x03CFCE6C LDP X2, X1, [X8 + 0x188]
	0x03CFCE70 LDR X30, [X31], #0x10
	0x03CFCE74 BR X2
	0x03CFCE78 BL 0x1C16F20
	0x03CFCE7C STR X30, [X31 - 0x20]!
	0x03CFCE80 STP X20, X19, [X31 + 0x10]
	0x03CFCE84 ADRP X20, 0x6EB000
	0x03CFCE88 LDRB W8, [X20 + 0x7EB]
	0x03CFCE8C MOV X19, X0
	0x03CFCE90 TBNZ X8, 0x0, 0x3CFCEA8
	0x03CFCE94 ADRP X0, 0x466000
	0x03CFCE98 LDR X0, [X0 + 0xB98]
	0x03CFCE9C BL 0x1C16CF4
	0x03CFCEA0 MOVZ W8, 0x1
	0x03CFCEA4 STRB W8, [X20 + 0x7EB]
	0x03CFCEA8 LDR X8, [X19 + 0x448]
	0x03CFCEAC CBZ X8, 0x3CFCED0
	0x03CFCEB0 ADRP X9, 0x466000
	0x03CFCEB4 LDR X9, [X9 + 0xB98]
	0x03CFCEB8 LDR X10, [X8]
	0x03CFCEBC LDR X9, [X9]
	0x03CFCEC0 LDRB W12, [X10 + 0x130]
	0x03CFCEC4 LDRB W11, [X9 + 0x130]
	0x03CFCEC8 CMP W12, W11
	0x03CFCECC B.CS 0x3CFCED8
	0x03CFCED0 MOV X0, X31
	0x03CFCED4 B 0x3CFCEEC
	0x03CFCED8 LDR X10, [X10 + 0xC8]
	0x03CFCEDC ADD X10, X10, X11, 0x3, LSL
	0x03CFCEE0 LDUR X10, [X10 - 0x8]
	0x03CFCEE4 CMP X10, X9
	0x03CFCEE8 CSEL X0, X8, X31, EQ
	0x03CFCEEC LDP X20, X19, [X31 + 0x10]
	0x03CFCEF0 LDR X30, [X31], #0x20
	0x03CFCEF4 RET
	0x03CFCEF8 STP X30, X21, [X31 - 0x20]!
	0x03CFCEFC STP X20, X19, [X31 + 0x10]
	0x03CFCF00 ADRP X20, 0x6EB000
	0x03CFCF04 ADRP X21, 0x466000
	0x03CFCF08 LDRB W8, [X20 + 0x7EC]
	0x03CFCF0C LDR X21, [X21 + 0xFA0]
	0x03CFCF10 MOV X19, X0
	0x03CFCF14 TBNZ X8, 0x0, 0x3CFCF2C
	0x03CFCF18 ADRP X0, 0x466000
	0x03CFCF1C LDR X0, [X0 + 0xFA0]
	0x03CFCF20 BL 0x1C16CF4
	0x03CFCF24 MOVZ W8, 0x1
	0x03CFCF28 STRB W8, [X20 + 0x7EC]
	0x03CFCF2C LDR X1, [X21]
	0x03CFCF30 MOV X0, X19
	0x03CFCF34 LDP X20, X19, [X31 + 0x10]
	0x03CFCF38 LDP X30, X21, [X31], #0x20
	0x03CFCF3C B 0x219FCE8
	0x03CFCF40 STR X30, [X31 - 0x40]!
	0x03CFCF44 STP X24, X23, [X31 + 0x10]
	0x03CFCF48 STP X22, X21, [X31 + 0x20]
	0x03CFCF4C STP X20, X19, [X31 + 0x30]
	0x03CFCF50 ADRP X21, 0x6EB000
	0x03CFCF54 LDRB W8, [X21 + 0x7ED]
	0x03CFCF58 MOV X20, X1
	0x03CFCF5C MOV X19, X0
	0x03CFCF60 TBNZ X8, 0x0, 0x3CFCF84
	0x03CFCF64 ADRP X0, 0x466000
	0x03CFCF68 LDR X0, [X0 + 0xBF0]
	0x03CFCF6C BL 0x1C16CF4
	0x03CFCF70 ADRP X0, 0x466000
	0x03CFCF74 LDR X0, [X0 + 0xFA8]
	0x03CFCF78 BL 0x1C16CF4
	0x03CFCF7C MOVZ W8, 0x1
	0x03CFCF80 STRB W8, [X21 + 0x7ED]
	0x03CFCF84 ADRP X24, 0x466000
	0x03CFCF88 ADRP X23, 0x466000
	0x03CFCF8C LDR X24, [X24 + 0xBF0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x6EC000
	015 Move W8, [X19+2018]
	016 Move W22, W1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {51}
	022 Move X0, 0x3F8000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move X0, 0x422000
	026 Move X0, [X0+3872]
	027 Call 0x1C17CF4
	028 Move X0, 0x420000
	029 Move X0, [X0+1976]
	030 Call 0x1C17CF4
	031 Move X0, 0x422000
	032 Move X0, [X0+3880]
	033 Call 0x1C17CF4
	034 Move X0, 0x420000
	035 Move X0, [X0+1984]
	036 Call 0x1C17CF4
	037 Move X0, 0x3F8000
	038 Move X0, [X0+3608]
	039 Call 0x1C17CF4
	040 Move X0, 0x467000
	041 Move X0, [X0+3664]
	042 Call 0x1C17CF4
	043 Move X0, 0x421000
	044 Move X0, [X0+2096]
	045 Call 0x1C17CF4
	046 Move X0, 0x467000
	047 Move X0, [X0+3064]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X19+2018], W8
	051 Move X19, [X20+1136]
	052 Compare X19, 0
	053 JumpIfEqual {375}
	054 Move X10, 0x420000
	055 Move X8, [X19]
	056 Move X10, [X10+1976]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Move X1, [X10]
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move X0, X19
	068 Move W2, W31
	069 Call 0x1C5D788
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Add X8, X8, X9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X1, [X0+8]
	075 Move X0, X19
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X19, X0
	078 Compare X0, 0
	079 JumpIfEqual {376}
	080 Move X26, 0x3F8000
	081 Move X29, 0x422000
	082 Move X25, 0x467000
	083 Move X21, 0x421000
	084 Move X27, 0x467000
	085 Move X26, [X26+3608]
	086 Move X29, [X29+3880]
	087 Move X25, [X25+3064]
	088 Move X21, [X21+2096]
	089 Move X27, [X27+3664]
	090 Move W28, W31
	091 And W8, W22, 1
	092 Move [X31+12], W8
	093 Move X8, [X19]
	094 Move X1, [X26]
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move X0, X19
	105 Move W2, W31
	106 Call 0x1C5D788
	107 NotImplemented "Instruction LDRSW not yet implemented."
	108 Add X8, X8, X9
	109 Add X0, X8, 312
	110 Move X8, [X0]
	111 Move X1, [X0+8]
	112 Move X0, X19
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {297}
	118 Move X8, [X19]
	119 Move X10, 0x420000
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 Move X10, [X10+1984]
	122 Move X1, [X10]
	123 Compare X9, 0
	124 JumpIfEqual {131}
	125 Move X10, [X8+176]
	126 Add X10, X10, 8
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Subtract X9, X9, 1
	130 Add X10, X10, 16
	131 Move X0, X19
	132 Move W2, W31
	133 Call 0x1C5D788
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Add X8, X8, X9
	136 Add X0, X8, 312
	137 Move X8, [X0]
	138 Move X1, [X0+8]
	139 Move X0, X19
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move W23, W0
	142 Move X0, X20
	143 Move X1, X31
	144 Call BaseVerticalCollectionView.get_activeItems, X0
	145 Move X22, X0
	146 Compare X0, 0
	147 JumpIfEqual {374}
	148 Move X8, [X22]
	149 Move X10, 0x422000
	150 NotImplemented "Instruction LDRH not yet implemented."
	151 Move X10, [X10+3872]
	152 Move X1, [X10]
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move X0, X22
	162 Move W2, W31
	163 Call 0x1C5D788
	164 NotImplemented "Instruction LDRSW not yet implemented."
	165 Add X8, X8, X9
	166 Add X0, X8, 312
	167 Move X8, [X0]
	168 Move X1, [X0+8]
	169 Move X0, X22
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Move X22, X0
	172 Compare X0, 0
	173 JumpIfEqual {285}
	174 Move X8, [X22]
	175 Move X1, [X26]
	176 NotImplemented "Instruction LDRH not yet implemented."
	177 Compare X9, 0
	178 JumpIfEqual {185}
	179 Move X10, [X8+176]
	180 Add X10, X10, 8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Subtract X9, X9, 1
	184 Add X10, X10, 16
	185 Move X0, X22
	186 Move W2, W31
	187 Call 0x1C5D788
	188 NotImplemented "Instruction LDRSW not yet implemented."
	189 Add X8, X8, X9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X1, [X0+8]
	193 Move X0, X22
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Move TEMP, X0
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfNotEqual {252}
	199 Move X8, [X22]
	200 Move X1, [X29]
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Compare X9, 0
	203 JumpIfEqual {210}
	204 Move X10, [X8+176]
	205 Add X10, X10, 8
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Subtract X9, X9, 1
	209 Add X10, X10, 16
	210 Move X0, X22
	211 Move W2, W31
	212 Call 0x1C5D788
	213 NotImplemented "Instruction LDRSW not yet implemented."
	214 Add X8, X8, X9
	215 Add X0, X8, 312
	216 Move X8, [X0]
	217 Move X1, [X0+8]
	218 Move X0, X22
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move X24, X0
	221 Compare X0, 0
	222 JumpIfEqual {284}
	223 Move W8, [X24+32]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X0, [X25]
	226 Move X1, X31
	227 Call PropertyName.op_Implicit, X0
	228 And X1, X0, 0
	229 Move X0, X20
	230 Move X2, X31
	231 Call VisualElement.GetProperty, X0, X1
	232 Compare X0, 0
	233 JumpIfEqual {174}
	234 Move X0, [X21]
	235 Move X24, [X24+16]
	236 Move W8, [X0+224]
	237 Compare W8, 0
	238 JumpIfNotEqual {240}
	239 Call 0x1C17DFC
	240 Move X3, [X27]
	241 Move X0, X24
	242 Move X1, X31
	243 Move X2, X31
	244 Call 0x22A27C4, X0, X1, X2
	245 Compare X0, 0
	246 JumpIfEqual {174}
	247 Move W24, W28
	248 Move W28, 1
	249 Move W1, [X31+12]
	250 Move X2, X31
	251 Call Foldout.set_value, X0, X1
	252 Move X24, X31
	253 Move W23, 10
	254 Compare X22, 0
	255 JumpIfEqual {279}
	256 Move X8, [X22]
	257 Move X10, 0x3F8000
	258 NotImplemented "Instruction LDRH not yet implemented."
	259 Move X10, [X10+3584]
	260 Move X1, [X10]
	261 Compare X9, 0
	262 JumpIfEqual {269}
	263 Move X10, [X8+176]
	264 Add X10, X10, 8
	265 NotImplemented "Instruction LDUR not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Subtract X9, X9, 1
	268 Add X10, X10, 16
	269 Move X0, X22
	270 Move W2, W31
	271 Call 0x1C5D788
	272 NotImplemented "Instruction LDRSW not yet implemented."
	273 Add X8, X8, X9
	274 Add X0, X8, 312
	275 Move X8, [X0]
	276 Move X1, [X0+8]
	277 Move X0, X22
	278 NotImplemented "Instruction BLR not yet implemented."
	279 Compare X24, 0
	280 JumpIfNotEqual {372}
	281 Compare W23, 0
	282 JumpIfEqual {93}
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Call 0x1C17F20
	285 Call 0x1C17F20
	286 Move X23, X0
	287 Move W28, W24
	288 Move X23, X0
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move X0, X23
	291 Call 0x3EB2AD0
	292 Move X24, [X0]
	293 Call 0x3EB2AE0
	294 Move W23, W31
	295 Compare X22, 0
	296 JumpIfNotEqual {256}
	297 Move X20, X31
	298 Compare X19, 0
	299 JumpIfEqual {323}
	300 Move X8, [X19]
	301 Move X10, 0x3F8000
	302 NotImplemented "Instruction LDRH not yet implemented."
	303 Move X10, [X10+3584]
	304 Move X1, [X10]
	305 Compare X9, 0
	306 JumpIfEqual {313}
	307 Move X10, [X8+176]
	308 Add X10, X10, 8
	309 NotImplemented "Instruction LDUR not yet implemented."
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Subtract X9, X9, 1
	312 Add X10, X10, 16
	313 Move X0, X19
	314 Move W2, W31
	315 Call 0x1C5D788
	316 NotImplemented "Instruction LDRSW not yet implemented."
	317 Add X8, X8, X9
	318 Add X0, X8, 312
	319 Move X8, [X0]
	320 Move X1, [X0+8]
	321 Move X0, X19
	322 NotImplemented "Instruction BLR not yet implemented."
	323 Compare X20, 0
	324 JumpIfNotEqual {377}
	325 And W0, W28, 1
	326 Move X20, [X31+96]
	327 Move X19, [X31+104]
	328 Move X22, [X31+80]
	329 Move X21, [X31+88]
	330 Move X24, [X31+64]
	331 Move X23, [X31+72]
	332 Move X26, [X31+48]
	333 Move X25, [X31+56]
	334 Move X28, [X31+32]
	335 Move X27, [X31+40]
	336 Move X29, [X31+16]
	337 Move X30, [X31+24]
	338 Add X31, X31, 112
	339 Return X0
	340 Move X20, X1
	341 Move X24, X31
	342 Compare X22, 0
	343 JumpIfEqual {367}
	344 Move X8, [X22]
	345 Move X10, 0x3F8000
	346 NotImplemented "Instruction LDRH not yet implemented."
	347 Move X10, [X10+3584]
	348 Move X1, [X10]
	349 Compare X9, 0
	350 JumpIfEqual {357}
	351 Move X10, [X8+176]
	352 Add X10, X10, 8
	353 NotImplemented "Instruction LDUR not yet implemented."
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Subtract X9, X9, 1
	356 Add X10, X10, 16
	357 Move X0, X22
	358 Move W2, W31
	359 Call 0x1C5D788
	360 NotImplemented "Instruction LDRSW not yet implemented."
	361 Add X8, X8, X9
	362 Add X0, X8, 312
	363 Move X8, [X0]
	364 Move X1, [X0+8]
	365 Move X0, X22
	366 NotImplemented "Instruction BLR not yet implemented."
	367 Move X1, X20
	368 Compare X24, 0
	369 JumpIfEqual {386}
	370 Move X0, X24
	371 Call 0x1C17F18
	372 Move X0, X24
	373 Call 0x1C17F18
	374 Call 0x1C17F20
	375 Call 0x1C17F20
	376 Call 0x1C17F20
	377 Move X0, X20
	378 Call 0x1C17F18
	379 Move X20, X1
	380 Move X23, X0
	381 Compare X22, 0
	382 JumpIfNotEqual {344}
	383 Move X23, X0
	384 Move W28, W31
	385 Move X23, X0
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Move X0, X23
	388 Call 0x3EB2AD0
	389 Move X20, [X0]
	390 Call 0x3EB2AE0
	391 Move X20, X31
	392 Move X23, X0
	393 Compare X19, 0
	394 JumpIfEqual {418}
	395 Move X8, [X19]
	396 Move X10, 0x3F8000
	397 NotImplemented "Instruction LDRH not yet implemented."
	398 Move X10, [X10+3584]
	399 Move X1, [X10]
	400 Compare X9, 0
	401 JumpIfEqual {408}
	402 Move X10, [X8+176]
	403 Add X10, X10, 8
	404 NotImplemented "Instruction LDUR not yet implemented."
	405 NotImplemented "Instruction CMP not yet implemented."
	406 Subtract X9, X9, 1
	407 Add X10, X10, 16
	408 Move X0, X19
	409 Move W2, W31
	410 Call 0x1C5D788
	411 NotImplemented "Instruction LDRSW not yet implemented."
	412 Add X8, X8, X9
	413 Add X0, X8, 312
	414 Move X8, [X0]
	415 Move X1, [X0+8]
	416 Move X0, X19
	417 NotImplemented "Instruction BLR not yet implemented."
	418 Compare X20, 0
	419 JumpIfNotEqual {422}
	420 Move X0, X23
	421 Call 0x1D2D690
	422 Move X0, X20
	423 Call 0x1C17F18
	424 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03CFCF90 LDR X23, [X23 + 0xFA8]
	0x03CFCF94 MOV X0, X19
	0x03CFCF98 BL 0x3CFCE7C
	0x03CFCF9C CBZ X0, 0x3CFCFE0
	0x03CFCFA0 MOV X0, X19
	0x03CFCFA4 BL 0x3CFCE7C
	0x03CFCFA8 LDR X8, [X24]
	0x03CFCFAC MOV X21, X0
	0x03CFCFB0 MOV X0, X8
	0x03CFCFB4 BL 0x1C16F10
	0x03CFCFB8 LDR X2, [X23]
	0x03CFCFBC MOV X1, X19
	0x03CFCFC0 MOV X3, X31
	0x03CFCFC4 MOV X22, X0
	0x03CFCFC8 BL 0x2A75FD0
	0x03CFCFCC CBZ X21, 0x3CFD05C
	0x03CFCFD0 MOV X0, X21
	0x03CFCFD4 MOV X1, X22
	0x03CFCFD8 MOV X2, X31
	0x03CFCFDC BL 0x3CF5098
	0x03CFCFE0 MOV X0, X19
	0x03CFCFE4 MOV X1, X20
	0x03CFCFE8 BL 0x3CFD060
	0x03CFCFEC MOV X0, X19
	0x03CFCFF0 BL 0x3CFCE7C
	0x03CFCFF4 CBZ X0, 0x3CFD048
	0x03CFCFF8 MOV X0, X19
	0x03CFCFFC BL 0x3CFCE7C
	0x03CFD000 LDR X8, [X24]
	0x03CFD004 MOV X20, X0
	0x03CFD008 MOV X0, X8
	0x03CFD00C BL 0x1C16F10
	0x03CFD010 LDR X2, [X23]
	0x03CFD014 MOV X1, X19
	0x03CFD018 MOV X3, X31
	0x03CFD01C MOV X21, X0
	0x03CFD020 BL 0x2A75FD0
	0x03CFD024 CBZ X20, 0x3CFD05C
	0x03CFD028 MOV X0, X20
	0x03CFD02C MOV X1, X21
	0x03CFD030 LDP X20, X19, [X31 + 0x30]
	0x03CFD034 LDP X22, X21, [X31 + 0x20]
	0x03CFD038 LDP X24, X23, [X31 + 0x10]
	0x03CFD03C MOV X2, X31
	0x03CFD040 LDR X30, [X31], #0x40
	0x03CFD044 B 0x3CF4FE8
	0x03CFD048 LDP X20, X19, [X31 + 0x30]
	0x03CFD04C LDP X22, X21, [X31 + 0x20]
	0x03CFD050 LDP X24, X23, [X31 + 0x10]
	0x03CFD054 LDR X30, [X31], #0x40
	0x03CFD058 RET
	0x03CFD05C BL 0x1C16F20
	0x03CFD060 STR X30, [X31 - 0x20]!
	0x03CFD064 STP X20, X19, [X31 + 0x10]
	0x03CFD068 MOV X19, X0
	0x03CFD06C LDR X0, [X0 + 0x448]
	0x03CFD070 MOV X20, X1
	0x03CFD074 CBZ X0, 0x3CFD0AC
	0x03CFD078 LDR X1, [X19 + 0x490]
	0x03CFD07C MOV X2, X31
	0x03CFD080 BL 0x3CF5098
	0x03CFD084 LDR X0, [X19 + 0x448]
	0x03CFD088 CBZ X0, 0x3CFD100
	0x03CFD08C LDR X1, [X19 + 0x498]
	0x03CFD090 MOV X2, X31
	0x03CFD094 BL 0x3CF4F4C
	0x03CFD098 LDR X0, [X19 + 0x448]
	0x03CFD09C CBZ X0, 0x3CFD100
	0x03CFD0A0 LDR X8, [X0]
	0x03CFD0A4 LDP X9, X1, [X8 + 0x1B8]
	0x03CFD0A8 BLR X9
	0x03CFD0AC STR X20, [X19 + 0x448]
	0x03CFD0B0 CBZ X20, 0x3CFD0F4
	0x03CFD0B4 MOV X0, X20
	0x03CFD0B8 MOV X1, X19
	0x03CFD0BC MOV X2, X31
	0x03CFD0C0 BL 0x3CF5224
	0x03CFD0C4 LDR X0, [X19 + 0x448]
	0x03CFD0C8 CBZ X0, 0x3CFD100
	0x03CFD0CC LDR X1, [X19 + 0x490]
	0x03CFD0D0 MOV X2, X31
	0x03CFD0D4 BL 0x3CF4FE8
	0x03CFD0D8 LDR X0, [X19 + 0x448]
	0x03CFD0DC CBZ X0, 0x3CFD100
	0x03CFD0E0 LDR X1, [X19 + 0x498]
	0x03CFD0E4 LDP X20, X19, [X31 + 0x10]
	0x03CFD0E8 MOV X2, X31
	0x03CFD0EC LDR X30, [X31], #0x20
	0x03CFD0F0 B 0x3CF4EB0
	0x03CFD0F4 LDP X20, X19, [X31 + 0x10]
	0x03CFD0F8 LDR X30, [X31], #0x20
	0x03CFD0FC RET
	0x03CFD100 BL 0x1C16F20
	0x03CFD104 B 0x3CFD108
	0x03CFD108 STP X30, X21, [X31 - 0x20]!
	0x03CFD10C STP X20, X19, [X31 + 0x10]
	0x03CFD110 ADRP X21, 0x6EA000
	0x03CFD114 ADRP X19, 0x420000
	0x03CFD118 LDRB W8, [X21 + 0x804]
	0x03CFD11C LDR X19, [X19 + 0xF18]
	0x03CFD120 MOV X20, X0
	0x03CFD124 TBNZ X8, 0x0, 0x3CFD13C
	0x03CFD128 ADRP X0, 0x420000
	0x03CFD12C LDR X0, [X0 + 0xF18]
	0x03CFD130 BL 0x1C16CF4
	0x03CFD134 MOVZ W8, 0x1
	0x03CFD138 STRB W8, [X21 + 0x804]
	0x03CFD13C LDR X0, [X19]
	0x03CFD140 LDR W8, [X0 + 0xE0]
	0x03CFD144 CBNZ W8, 0x3CFD150
	0x03CFD148 BL 0x1C16DFC
	0x03CFD14C LDR X0, [X19]
	0x03CFD150 LDR X8, [X0 + 0xB8]
	0x03CFD154 MOV X1, X31
	0x03CFD158 MOV X2, X31
	0x03CFD15C LDR X19, [X8]
	0x03CFD160 MOV X0, X19
	0x03CFD164 BL 0x33C5D2C
	0x03CFD168 TBZ X0, 0x0, 0x3CFD178
	0x03CFD16C MOV X0, X19
	0x03CFD170 MOV X1, X31
	0x03CFD174 BL 0x3BFE970
	0x03CFD178 LDR X8, [X20 + 0x448]
	0x03CFD17C CBZ X8, 0x3CFD1D0
	0x03CFD180 MOV X0, X20
	0x03CFD184 BL 0x3CFFCAC
	0x03CFD188 LDR X0, [X20 + 0x450]
	0x03CFD18C CBNZ X0, 0x3CFD1A8
	0x03CFD190 LDR X8, [X20]
	0x03CFD194 LDR X1, [X8 + 0x7C0]
	0x03CFD198 LDR X9, [X8 + 0x7B8]
	0x03CFD19C MOV X0, X20
	0x03CFD1A0 BLR X9
	0x03CFD1A4 LDR X0, [X20 + 0x450]
	0x03CFD1A8 CBZ X0, 0x3CFD20C
	0x03CFD1AC LDR X8, [X0]
	0x03CFD1B0 LDP X9, X2, [X8 + 0x1A8]
	0x03CFD1B4 MOV W1, W31
	0x03CFD1B8 BLR X9
	0x03CFD1BC LDR X8, [X20]
	0x03CFD1C0 LDR X1, [X8 + 0x820]
	0x03CFD1C4 LDR X9, [X8 + 0x818]
	0x03CFD1C8 MOV X0, X20
	0x03CFD1CC BLR X9
	0x03CFD1D0 MOV X20, X31
	0x03CFD1D4 MOV X0, X19
	0x03CFD1D8 MOV X1, X31
	0x03CFD1DC MOV X2, X31
	0x03CFD1E0 BL 0x33C5D2C
	0x03CFD1E4 TBZ X0, 0x0, 0x3CFD1F4
	0x03CFD1E8 MOV X0, X19
	0x03CFD1EC MOV X1, X31
	0x03CFD1F0 BL 0x3BFEA0C
	0x03CFD1F4 CBNZ X20, 0x3CFD204
	0x03CFD1F8 LDP X20, X19, [X31 + 0x10]
	0x03CFD1FC LDP X30, X21, [X31], #0x20
	0x03CFD200 RET
	0x03CFD204 MOV X0, X20
	0x03CFD208 BL 0x1C16F18
	0x03CFD20C BL 0x1C16F20
	0x03CFD210 B 0x3CFD214
	0x03CFD214 MOV X21, X0
	0x03CFD218 CMP W1, 0x1
	0x03CFD21C B.NE 0x3CFD234
	0x03CFD220 MOV X0, X21
	0x03CFD224 BL 0x3EB1AD0
	0x03CFD228 LDR X20, [X0]
	0x03CFD22C BL 0x3EB1AE0
	0x03CFD230 B 0x3CFD1D4
	0x03CFD234 MOV X20, X31
	0x03CFD238 B 0x3CFD240
	0x03CFD23C MOV X21, X0
	0x03CFD240 MOV X0, X19
	0x03CFD244 MOV X1, X31
	0x03CFD248 MOV X2, X31
	0x03CFD24C BL 0x33C5D2C
	0x03CFD250 TBZ X0, 0x0, 0x3CFD260
	0x03CFD254 MOV X0, X19
	0x03CFD258 MOV X1, X31
	0x03CFD25C BL 0x3BFEA0C
	0x03CFD260 CBNZ X20, 0x3CFD26C
	0x03CFD264 MOV X0, X21
	0x03CFD268 BL 0x1D2C690
	0x03CFD26C MOV X0, X20
	0x03CFD270 BL 0x1C16F18
	0x03CFD274 BL 0x1990590
	0x03CFD278 STP X30, X21, [X31 - 0x20]!
	0x03CFD27C STP X20, X19, [X31 + 0x10]
	0x03CFD280 ADRP X20, 0x6EA000
	0x03CFD284 ADRP X21, 0x465000
	0x03CFD288 LDRB W8, [X20 + 0x7EE]
	0x03CFD28C LDR X21, [X21 + 0xFB0]
	0x03CFD290 MOV X19, X0
	0x03CFD294 TBNZ X8, 0x0, 0x3CFD2AC
	0x03CFD298 ADRP X0, 0x465000
	0x03CFD29C LDR X0, [X0 + 0xFB0]
	0x03CFD2A0 BL 0x1C16CF4
	0x03CFD2A4 MOVZ W8, 0x1
	0x03CFD2A8 STRB W8, [X20 + 0x7EE]
	0x03CFD2AC LDR X0, [X21]
	0x03CFD2B0 BL 0x1C16F10
	0x03CFD2B4 MOV X1, X19
	0x03CFD2B8 MOV X2, X31
	0x03CFD2BC MOV X20, X0
	0x03CFD2C0 BL 0x3D98BCC
	0x03CFD2C4 MOV X0, X20
	0x03CFD2C8 LDP X20, X19, [X31 + 0x10]
	0x03CFD2CC LDP X30, X21, [X31], #0x20
	0x03CFD2D0 RET
	0x03CFD2D4 LDRB W0, [X0 + 0x4AC]
	0x03CFD2D8 RET
	0x03CFD2DC STP X30, X19, [X31 - 0x10]!
	0x03CFD2E0 AND W8, W1, 0x1
	0x03CFD2E4 MOV X19, X0
	0x03CFD2E8 STRB W8, [X0 + 0x4AC]
	0x03CFD2EC BL 0x3CFCE7C
	0x03CFD2F0 CBZ X0, 0x3CFD2FC
	0x03CFD2F4 MOV X1, X31
	0x03CFD2F8 BL 0x3CF1868
	0x03CFD2FC MOV X0, X19
	0x03CFD300 LDP X30, X19, [X31], #0x10
	0x03CFD304 B 0x3CFD108
	0x03CFD308 LDR X0, [X0 + 0x4B0]
	0x03CFD30C RET
	0x03CFD310 STR X1, [X0 + 0x4B0]
	0x03CFD314 RET
	0x03CFD318 MOVN W1, 0x0
	0x03CFD31C B 0x3CFD320
	0x03CFD320 STR X30, [X31 - 0x50]!
	0x03CFD324 STP X26, X25, [X31 + 0x10]
	0x03CFD328 STP X24, X23, [X31 + 0x20]
	0x03CFD32C STP X22, X21, [X31 + 0x30]
	0x03CFD330 STP X20, X19, [X31 + 0x40]
	0x03CFD334 ADRP X22, 0x6EA000
	0x03CFD338 ADRP X21, 0x420000
	0x03CFD33C LDRB W8, [X22 + 0x7EF]
	0x03CFD340 LDR X21, [X21 + 0xF18]
	0x03CFD344 MOV W20, W1
	0x03CFD348 MOV X19, X0
	0x03CFD34C TBNZ X8, 0x0, 0x3CFD3AC
	0x03CFD350 ADRP X0, 0x465000
	0x03CFD354 LDR X0, [X0 + 0xFB8]
	0x03CFD358 BL 0x1C16CF4
	0x03CFD35C ADRP X0, 0x465000
	0x03CFD360 LDR X0, [X0 + 0xB00]
	0x03CFD364 BL 0x1C16CF4
	0x03CFD368 ADRP X0, 0x420000
	0x03CFD36C LDR X0, [X0 + 0xF18]
	0x03CFD370 BL 0x1C16CF4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x6EC000
	014 Move X20, 0x405000
	015 Move X19, 0x467000
	016 Move X29, 0x467000
	017 Move X28, 0x467000
	018 Move X27, 0x467000
	019 Move X26, 0x467000
	020 Move X23, 0x467000
	021 Move X22, 0x467000
	022 Move X25, 0x467000
	023 Move X24, 0x467000
	024 Move X20, [X20+2112]
	025 Move X19, [X19+2712]
	026 Move X29, [X29+3672]
	027 Move X28, [X28+3680]
	028 Move X27, [X27+3688]
	029 Move X26, [X26+3696]
	030 Move X23, [X23+3704]
	031 Move X22, [X22+3712]
	032 Move X25, [X25+3720]
	033 Move W8, [X21+2019]
	034 Move X24, [X24+3728]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {101}
	039 Move X0, 0x466000
	040 Move X0, [X0+2712]
	041 Call 0x1C17CF4
	042 Move X0, 0x466000
	043 Move X0, [X0+3736]
	044 Call 0x1C17CF4
	045 Move X0, 0x466000
	046 Move X0, [X0+3696]
	047 Call 0x1C17CF4
	048 Move X0, 0x466000
	049 Move X0, [X0+3744]
	050 Call 0x1C17CF4
	051 Move X0, 0x466000
	052 Move X0, [X0+3704]
	053 Call 0x1C17CF4
	054 Move X0, 0x466000
	055 Move X0, [X0+3752]
	056 Call 0x1C17CF4
	057 Move X0, 0x466000
	058 Move X0, [X0+3672]
	059 Call 0x1C17CF4
	060 Move X0, 0x466000
	061 Move X0, [X0+3712]
	062 Call 0x1C17CF4
	063 Move X0, 0x466000
	064 Move X0, [X0+3680]
	065 Call 0x1C17CF4
	066 Move X0, 0x466000
	067 Move X0, [X0+3760]
	068 Call 0x1C17CF4
	069 Move X0, 0x466000
	070 Move X0, [X0+3768]
	071 Call 0x1C17CF4
	072 Move X0, 0x466000
	073 Move X0, [X0+3776]
	074 Call 0x1C17CF4
	075 Move X0, 0x466000
	076 Move X0, [X0+3688]
	077 Call 0x1C17CF4
	078 Move X0, 0x420000
	079 Move X0, [X0+3040]
	080 Call 0x1C17CF4
	081 Move X0, 0x466000
	082 Move X0, [X0+3784]
	083 Call 0x1C17CF4
	084 Move X0, 0x404000
	085 Move X0, [X0+2112]
	086 Call 0x1C17CF4
	087 Move X0, 0x466000
	088 Move X0, [X0+3792]
	089 Call 0x1C17CF4
	090 Move X0, 0x466000
	091 Move X0, [X0+3800]
	092 Call 0x1C17CF4
	093 Move X0, 0x466000
	094 Move X0, [X0+3728]
	095 Call 0x1C17CF4
	096 Move X0, 0x466000
	097 Move X0, [X0+3720]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X21+2019], W8
	101 Move X8, [X19]
	102 Move X9, [X20]
	103 Move X2, X31
	104 Move X8, [X8+184]
	105 Move [X8], X9
	106 Move X8, [X19]
	107 Move X0, [X29]
	108 Move X8, [X8+184]
	109 Move [X8+8], X0
	110 Move X1, [X28]
	111 Call String.Concat, X0, X1
	112 Move X8, [X19]
	113 Move X2, X31
	114 Move X8, [X8+184]
	115 Move [X8+16], X0
	116 Move X0, [X8+8]
	117 Move X1, [X27]
	118 Call String.Concat, X0, X1
	119 Move X8, [X19]
	120 Move X2, X31
	121 Move X8, [X8+184]
	122 Move [X8+24], X0
	123 Move X0, [X8+8]
	124 Move X1, [X26]
	125 Call String.Concat, X0, X1
	126 Move X8, [X19]
	127 Move X2, X31
	128 Move X8, [X8+184]
	129 Move [X8+32], X0
	130 Move X0, [X8+8]
	131 Move X1, [X23]
	132 Call String.Concat, X0, X1
	133 Move X8, [X19]
	134 Move X2, X31
	135 Move X8, [X8+184]
	136 Move [X8+40], X0
	137 Move X1, [X22]
	138 Call String.Concat, X0, X1
	139 Move X8, [X19]
	140 Move X2, X31
	141 Move X8, [X8+184]
	142 Move [X8+48], X0
	143 Move X8, 0x466000
	144 Move X8, [X8+3800]
	145 Move X1, [X8]
	146 Call String.Concat, X0, X1
	147 Move X8, [X19]
	148 Move X2, X31
	149 Move X8, [X8+184]
	150 Move [X8+56], X0
	151 Move X0, [X8+40]
	152 Move X8, 0x466000
	153 Move X8, [X8+3768]
	154 Move X1, [X8]
	155 Call String.Concat, X0, X1
	156 Move X8, [X19]
	157 Move X2, X31
	158 Move X8, [X8+184]
	159 Move [X8+64], X0
	160 Move X8, 0x466000
	161 Move X8, [X8+3784]
	162 Move X1, [X8]
	163 Call String.Concat, X0, X1
	164 Move X8, [X19]
	165 Move X2, X31
	166 Move X8, [X8+184]
	167 Move [X8+72], X0
	168 Move X0, [X8+8]
	169 Move X8, 0x466000
	170 Move X8, [X8+3776]
	171 Move X1, [X8]
	172 Call String.Concat, X0, X1
	173 Move X8, [X19]
	174 Move X2, X31
	175 Move X8, [X8+184]
	176 Move [X8+80], X0
	177 Move X0, [X8+8]
	178 Move X8, 0x466000
	179 Move X8, [X8+3744]
	180 Move X1, [X8]
	181 Call String.Concat, X0, X1
	182 Move X8, [X19]
	183 Move X2, X31
	184 Move X8, [X8+184]
	185 Move [X8+88], X0
	186 Move X0, [X8+8]
	187 Move X8, 0x466000
	188 Move X8, [X8+3760]
	189 Move X1, [X8]
	190 Call String.Concat, X0, X1
	191 Move X8, [X19]
	192 Move X2, X31
	193 Move X8, [X8+184]
	194 Move [X8+96], X0
	195 Move X1, [X25]
	196 Call String.Concat, X0, X1
	197 Move X8, [X19]
	198 Move X2, X31
	199 Move X8, [X8+184]
	200 Move [X8+104], X0
	201 Move X0, [X8+96]
	202 Move X1, [X24]
	203 Call String.Concat, X0, X1
	204 Move X8, [X19]
	205 Move X2, X31
	206 Move X8, [X8+184]
	207 Move [X8+112], X0
	208 Move X0, [X8+8]
	209 Move X1, [X25]
	210 Call String.Concat, X0, X1
	211 Move X8, [X19]
	212 Move X2, X31
	213 Move X8, [X8+184]
	214 Move [X8+120], X0
	215 Move X0, [X8+8]
	216 Move X1, [X24]
	217 Call String.Concat, X0, X1
	218 Move X8, [X19]
	219 Move X2, X31
	220 Move X8, [X8+184]
	221 Move [X8+128], X0
	222 Move X0, [X8+8]
	223 Move X8, 0x466000
	224 Move X8, [X8+3792]
	225 Move X1, [X8]
	226 Call String.Concat, X0, X1
	227 Move X8, [X19]
	228 Move X2, X31
	229 Move X8, [X8+184]
	230 Move [X8+136], X0
	231 Move X0, [X8+8]
	232 Move X8, 0x466000
	233 Move X8, [X8+3752]
	234 Move X1, [X8]
	235 Call String.Concat, X0, X1
	236 Move X8, [X19]
	237 Move X2, X31
	238 Move X8, [X8+184]
	239 Move [X8+144], X0
	240 Move X0, [X8+8]
	241 Move X8, 0x466000
	242 Move X8, [X8+3736]
	243 Move X1, [X8]
	244 Call String.Concat, X0, X1
	245 Move X8, [X19]
	246 Move X9, 0x420000
	247 Move X8, [X8+184]
	248 Move [X8+152], X0
	249 Move X9, [X9+3040]
	250 Move X20, [X31+80]
	251 Move X19, [X31+88]
	252 Move X22, [X31+64]
	253 Move X21, [X31+72]
	254 Move X24, [X31+48]
	255 Move X23, [X31+56]
	256 Move X9, [X9]
	257 Move X26, [X31+32]
	258 Move X25, [X31+40]
	259 Move X28, [X31+16]
	260 Move X27, [X31+24]
	261 Move [X8+160], X9
	262 Move X29, [X31+96]
	263 Move X30, [X31+104]
	264 Return 

Method: System.Void <OnAddClicked>b__36_0()

Disassembly:
	0x03CFD374 ADRP X0, 0x420000
	0x03CFD378 LDR X0, [X0 + 0x778]
	0x03CFD37C BL 0x1C16CF4
	0x03CFD380 ADRP X0, 0x420000
	0x03CFD384 LDR X0, [X0 + 0x788]
	0x03CFD388 BL 0x1C16CF4
	0x03CFD38C ADRP X0, 0x3FA000
	0x03CFD390 LDR X0, [X0 + 0xB70]
	0x03CFD394 BL 0x1C16CF4
	0x03CFD398 ADRP X0, 0x3F7000
	0x03CFD39C LDR X0, [X0 + 0xE30]
	0x03CFD3A0 BL 0x1C16CF4
	0x03CFD3A4 MOVZ W8, 0x1
	0x03CFD3A8 STRB W8, [X22 + 0x7EF]
	0x03CFD3AC LDR X0, [X21]
	0x03CFD3B0 ADRP X26, 0x3F7000
	0x03CFD3B4 ADRP X25, 0x3FA000
	0x03CFD3B8 ADRP X24, 0x465000
	0x03CFD3BC LDR W8, [X0 + 0xE0]
	0x03CFD3C0 LDR X26, [X26 + 0xE30]
	0x03CFD3C4 LDR X25, [X25 + 0xB70]
	0x03CFD3C8 LDR X24, [X24 + 0xB00]
	0x03CFD3CC CBNZ W8, 0x3CFD3D4
	0x03CFD3D0 BL 0x1C16DFC
	0x03CFD3D4 ADRP X23, 0x420000
	0x03CFD3D8 ADRP X22, 0x465000
	0x03CFD3DC ADRP X21, 0x420000
	0x03CFD3E0 LDR X23, [X23 + 0x788]
	0x03CFD3E4 LDR X22, [X22 + 0xFB8]
	0x03CFD3E8 LDR X21, [X21 + 0x778]
	0x03CFD3EC SCVTF S0, W20
	0x03CFD3F0 MOV X0, X19
	0x03CFD3F4 MOV X1, X31
	0x03CFD3F8 BL 0x3CFD480
	0x03CFD3FC LDR X0, [X26]
	0x03CFD400 BL 0x1C16F10
	0x03CFD404 LDR X1, [X25]
	0x03CFD408 MOV X20, X0
	0x03CFD40C BL 0x2FDBF14
	0x03CFD410 STR X20, [X19 + 0x4B0]
	0x03CFD414 LDR X0, [X24]
	0x03CFD418 LDR W8, [X0 + 0xE0]
	0x03CFD41C CBNZ W8, 0x3CFD428
	0x03CFD420 BL 0x1C16DFC
	0x03CFD424 LDR X0, [X24]
	0x03CFD428 LDR X8, [X0 + 0xB8]
	0x03CFD42C MOV X0, X19
	0x03CFD430 MOV X2, X31
	0x03CFD434 LDR X1, [X8]
	0x03CFD438 BL 0x3DF1C70
	0x03CFD43C LDR X0, [X23]
	0x03CFD440 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6EB000
	005 Move W8, [X20+2020]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3FE000
	012 Move X0, [X0+752]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2020], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Call BaseVerticalCollectionView.get_itemsSource, X0
	019 Compare X0, 0
	020 JumpIfEqual {60}
	021 Move X10, 0x3FE000
	022 Move X8, [X0]
	023 Move X10, [X10+752]
	024 Move X20, X0
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 1
	036 Move X0, X20
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 1
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X20
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Subtract W1, W0, 1
	047 Move X0, X19
	048 Move X2, X31
	049 Call BaseVerticalCollectionView.SetSelection, X0, X1
	050 Move X0, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move TEMP, 0
	054 Not TEMP
	055 Move W1, TEMP
	056 Move X2, X31
	057 Move X30, [X31+32]
	058 Call BaseVerticalCollectionView.ScrollToItem, X0, X1
	059 Return 
	060 Call 0x1C17F20

