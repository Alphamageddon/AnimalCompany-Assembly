Type: UnityEngine.UIElements.TextValueField`1/TextValueInput

Method: UnityEngine.UIElements.TextValueField`1<TValueType> get_textValueFieldParent()

Disassembly:
	0x026ED394 LDR X0, [X0 + 0x648]
	0x026ED398 BL 0x1C16CF4
	0x026ED39C ADRP X0, 0x1A30000
	0x026ED3A0 LDR X0, [X0 + 0x630]
	0x026ED3A4 BL 0x1C16CF4
	0x026ED3A8 MOVZ W8, 0x1
	0x026ED3AC STRB W8, [X21 + 0x533]
	0x026ED3B0 LDR X8, [X20 + 0x20]
	0x026ED3B4 LDR X8, [X8 + 0xC0]
	0x026ED3B8 LDR X0, [X8 + 0x10]
	0x026ED3BC LDRB W8, [X0 + 0x135]
	0x026ED3C0 TBNZ X8, 0x0, 0x26ED3C8
	0x026ED3C4 BL 0x1C5C684
	0x026ED3C8 LDR W8, [X0 + 0xE0]
	0x026ED3CC CBNZ W8, 0x26ED3D4
	0x026ED3D0 BL 0x1C16DFC
	0x026ED3D4 LDR X8, [X20 + 0x20]
	0x026ED3D8 MOV X0, X19
	0x026ED3DC LDR X8, [X8 + 0xC0]
	0x026ED3E0 LDR X1, [X8 + 0x8]
	0x026ED3E4 BL 0x26CB58C
	0x026ED3E8 CBZ X19, 0x26ED4A4
	0x026ED3EC LDR X8, [X20 + 0x20]
	0x026ED3F0 ADRP X20, 0x1A30000
	0x026ED3F4 MOV X0, X19
	0x026ED3F8 LDR X8, [X8 + 0xC0]
	0x026ED3FC LDR X1, [X8 + 0x18]
	0x026ED400 LDR X20, [X20 + 0x648]
	0x026ED404 BL 0x26CADF4
	0x026ED408 LDR X8, [X20]
	0x026ED40C MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {36}
	005 Move X19, X1
	006 Move X1, X31
	007 Call VisualElement.get_parent, X0
	008 Move X8, [X19+32]
	009 Move X19, X0
	010 Move X8, [X8+192]
	011 Move X1, [X8]
	012 Move W8, [X1+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X0, X1
	018 Call 0x1C5D684
	019 Move X1, X0
	020 Compare X19, 0
	021 JumpIfEqual {30}
	022 Move X8, [X19]
	023 Move W9, [X1+304]
	024 Move W10, [X8+304]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X8+200]
	027 Add X8, X8, X9
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, X19
	031 Move X30, [X31+16]
	032 Move X19, [X31+24]
	033 Return X0
	034 Move X0, X19
	035 Call 0x1C181E0
	036 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x026ED410 MOV X0, X8
	0x026ED414 BL 0x1C16F10
	0x026ED418 LDR X8, [X19]
	0x026ED41C MOV X1, X19
	0x026ED420 MOV X3, X31
	0x026ED424 MOV X21, X0
	0x026ED428 LDR X2, [X8 + 0x7B0]
	0x026ED42C BL 0x2D2BA94
	0x026ED430 CBZ X20, 0x26ED4A4
	0x026ED434 ADRP X10, 0x1A30000
	0x026ED438 LDR X8, [X20]
	0x026ED43C LDR X10, [X10 + 0x630]
	0x026ED440 LDRH W9, [X8 + 0x12E]
	0x026ED444 LDR X1, [X10]
	0x026ED448 CBZ X9, 0x26ED46C
	0x026ED44C LDR X10, [X8 + 0xB0]
	0x026ED450 ADD X10, X10, 0x8
	0x026ED454 LDUR X11, [X10 - 0x8]
	0x026ED458 CMP X11, X1
	0x026ED45C B.EQ 0x26ED47C
	0x026ED460 SUBS X9, X9, 0x1
	0x026ED464 ADD X10, X10, 0x10
	0x026ED468 B.NE 0x26ED454
	0x026ED46C MOVZ W2, 0xB
	0x026ED470 MOV X0, X20
	0x026ED474 BL 0x1C5C788
	0x026ED478 B 0x26ED48C
	0x026ED47C LDR W9, [X10]
	0x026ED480 ADD W9, W9, 0xB
	0x026ED484 ADD X8, X8, W9, 0x4, SXTW
	0x026ED488 ADD X0, X8, 0x138
	0x026ED48C LDP X3, X2, [X0]
	0x026ED490 MOV X0, X20
	0x026ED494 LDP X20, X19, [X31 + 0x10]
	0x026ED498 MOV X1, X21
	0x026ED49C LDP X30, X21, [X31], #0x20
	0x026ED4A0 BR X3
	0x026ED4A4 BL 0x1C16F20
	0x026ED4A8 STR X30, [X31 - 0x20]!
	0x026ED4AC STP X20, X19, [X31 + 0x10]
	0x026ED4B0 CBZ X0, 0x26ED518
	0x026ED4B4 LDR X8, [X2 + 0x20]
	0x026ED4B8 MOV W19, W1
	0x026ED4BC MOV X20, X0
	0x026ED4C0 LDR X8, [X8 + 0xC0]
	0x026ED4C4 LDR X2, [X8 + 0x20]
	0x026ED4C8 BL 0x26CCE8C
	0x026ED4CC MOV W8, W0
	0x026ED4D0 ANDS W31, W19, 0xFFFF
	0x026ED4D4 MOV W0, W31
	0x026ED4D8 B.EQ 0x26ED50C
	0x026ED4DC TBZ X8, 0x0, 0x26ED50C
	0x026ED4E0 LDR X8, [X20]
	0x026ED4E4 MOV X0, X20
	0x026ED4E8 LDR X9, [X8 + 0x7B8]
	0x026ED4EC LDR X1, [X8 + 0x7C0]
	0x026ED4F0 BLR X9
	0x026ED4F4 CBZ X0, 0x26ED518
	0x026ED4F8 MOV W1, W19
	0x026ED4FC MOV X2, X31
	0x026ED500 BL 0x322BD98
	0x026ED504 ADDS W31, W0, 0x1
	0x026ED508 CSET W0, NE
	0x026ED50C LDP X20, X19, [X31 + 0x10]
	0x026ED510 LDR X30, [X31], #0x20
	0x026ED514 RET
	0x026ED518 BL 0x1C16F20
	0x026ED51C LDR X0, [X0 + 0x400]
	0x026ED520 RET
	0x026ED524 STR X1, [X0 + 0x400]
	0x026ED528 RET
	0x026ED52C STP X30, X19, [X31 - 0x10]!
	0x026ED530 CBZ X0, 0x26ED560
	0x026ED534 LDR X8, [X1 + 0x20]
	0x026ED538 MOVZ W9, 0x1
	0x026ED53C MOV X19, X0
	0x026ED540 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1CEE000
	006 Move W8, [X21+1326]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x1A31000
	014 Move X0, [X0+1608]
	015 Call 0x1C17CF4
	016 Move X0, 0x1A31000
	017 Move X0, [X0+1584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1326], W8
	021 Move X8, [X20+32]
	022 Move X8, [X8+192]
	023 Move X0, [X8+16]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X8, [X20+32]
	035 Move X0, X19
	036 Move X8, [X8+192]
	037 Move X1, [X8+8]
	038 Call 0x26B2E20, X0
	039 Compare X19, 0
	040 JumpIfEqual {89}
	041 Move X8, [X20+32]
	042 Move X20, 0x1A31000
	043 Move X0, X19
	044 Move X8, [X8+192]
	045 Move X1, [X8+24]
	046 Move X20, [X20+1608]
	047 Call 0x26B2688, X0
	048 Move X8, [X20]
	049 Move X20, X0
	050 Move X0, X8
	051 Call 0x1C17F10
	052 Move X8, [X19]
	053 Move X1, X19
	054 Move X3, X31
	055 Move X21, X0
	056 Move X2, [X8+1968]
	057 Call Func`2<Char, Boolean>..ctor, X0, X1, X2
	058 Compare X20, 0
	059 JumpIfEqual {89}
	060 Move X10, 0x1A31000
	061 Move X8, [X20]
	062 Move X10, [X10+1584]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Move X1, [X10]
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move W2, 11
	074 Move X0, X20
	075 Call 0x1C5D788
	076 Move W9, [X10]
	077 Add W9, W9, 11
	078 Add X8, X8, W9
	079 Add X0, X8, 312
	080 Move X3, [X0]
	081 Move X2, [X0+8]
	082 Move X0, X20
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move X1, X21
	086 Move X30, [X31+32]
	087 Move X21, [X31+40]
	088 CallNoReturn X3
	089 Call 0x1C17F20

Method: System.Boolean AcceptCharacter(System.Char c)

Disassembly:
	0x026ED544 STRB W9, [X0 + 0x3E0]
	0x026ED548 LDR X1, [X8 + 0x40]
	0x026ED54C BL 0x26CAEC4
	0x026ED550 MOV X0, X19
	0x026ED554 MOV X1, X31
	0x026ED558 LDP X30, X19, [X31], #0x10
	0x026ED55C B 0x3DF2134
	0x026ED560 BL 0x1C16F20
	0x026ED564 STR X30, [X31 - 0x20]!
	0x026ED568 STP X20, X19, [X31 + 0x10]
	0x026ED56C LDR X8, [X1 + 0x20]
	0x026ED570 MOV X20, X1
	0x026ED574 MOV X19, X0
	0x026ED578 LDR X8, [X8 + 0xC0]
	0x026ED57C LDR X1, [X8 + 0x48]
	0x026ED580 BL 0x26ED2F8
	0x026ED584 CBZ X0, 0x26ED5E8
	0x026ED588 LDR X8, [X20 + 0x20]
	0x026ED58C LDR X8, [X8 + 0xC0]
	0x026ED590 LDR X1, [X8 + 0x58]
	0x026ED594 BL 0x26DDDB0
	0x026ED598 TBZ X0, 0x0, 0x26ED5B8
	0x026ED59C CBZ X19, 0x26ED5E8
	0x026ED5A0 LDR X8, [X20 + 0x20]
	0x026ED5A4 MOV X0, X19
	0x026ED5A8 LDR X8, [X8 + 0xC0]
	0x026ED5AC LDR X1, [X8 + 0x60]
	0x026ED5B0 BL 0x26CAFC8
	0x026ED5B4 B 0x26ED5BC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {35}
	006 Move X8, [X2+32]
	007 Move W19, W1
	008 Move X20, X0
	009 Move X8, [X8+192]
	010 Move X2, [X8+32]
	011 Call 0x26B4720, X0, X1
	012 Move W8, W0
	013 And W31, W19, 0xFFFF
	014 Move W0, W31
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {31}
	019 Move X8, [X20]
	020 Move X0, X20
	021 Move X9, [X8+1976]
	022 Move X1, [X8+1984]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Compare X0, 0
	025 JumpIfEqual {35}
	026 Move W1, W19
	027 Move X2, X31
	028 Call String.IndexOf, X0, X1
	029 Add W31, W0, 1
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0
	035 Call 0x1C17F20

Method: System.String get_allowedCharacters()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.String get_formatString()

Disassembly:
	0x026ED5B8 CBZ X19, 0x26ED5E8
	0x026ED5BC LDR X8, [X20 + 0x20]

ISIL:
	001 Move X0, [X0+1024]
	002 Return X0

Method: System.Void set_formatString(System.String value)

Disassembly:
	0x026ED5C0 MOV X0, X19
	0x026ED5C4 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X0+1024], X1
	002 Return 

Method: System.Void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, TValueType startValue)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void StartDragging()

Disassembly:
	0x026ED5C8 STRB W31, [X19 + 0x3E0]
	0x026ED5CC LDR X1, [X8 + 0x68]
	0x026ED5D0 BL 0x26CAE10
	0x026ED5D4 MOV X0, X19
	0x026ED5D8 LDP X20, X19, [X31 + 0x10]
	0x026ED5DC MOV X1, X31
	0x026ED5E0 LDR X30, [X31], #0x20
	0x026ED5E4 B 0x3DF2134
	0x026ED5E8 BL 0x1C16F20
	0x026ED5EC STR X30, [X31 - 0x10]!
	0x026ED5F0 CBZ X0, 0x26ED608
	0x026ED5F4 LDR X8, [X2 + 0x20]
	0x026ED5F8 LDR X8, [X8 + 0xC0]
	0x026ED5FC LDR X2, [X8 + 0x70]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {18}
	005 Move X8, [X1+32]
	006 Move W9, 1
	007 Move X19, X0
	008 Move X8, [X8+192]
	009 Move [X0+992], W9
	010 Move X1, [X8+64]
	011 Call 0x26B2758, X0
	012 Move X0, X19
	013 Move X1, X31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call VisualElement.MarkDirtyRepaint, X0
	017 Return 
	018 Call 0x1C17F20

Method: System.Void StopDragging()

Disassembly:
	0x026ED600 LDR X30, [X31], #0x10
	0x026ED604 B 0x26CAF94
	0x026ED608 BL 0x1C16F20
	0x026ED60C STP X30, X19, [X31 - 0x10]!
	0x026ED610 CBZ X0, 0x26ED684
	0x026ED614 MOV X19, X1
	0x026ED618 MOV X1, X31
	0x026ED61C BL 0x3DEBF58
	0x026ED620 LDR X8, [X19 + 0x20]
	0x026ED624 MOV X19, X0
	0x026ED628 LDR X8, [X8 + 0xC0]
	0x026ED62C LDR X1, [X8]
	0x026ED630 LDRB W8, [X1 + 0x135]
	0x026ED634 TBNZ X8, 0x0, 0x26ED644
	0x026ED638 MOV X0, X1
	0x026ED63C BL 0x1C5C684
	0x026ED640 MOV X1, X0
	0x026ED644 CBZ X19, 0x26ED670
	0x026ED648 LDR X8, [X19]
	0x026ED64C LDRB W9, [X1 + 0x130]
	0x026ED650 LDRB W10, [X8 + 0x130]
	0x026ED654 CMP W10, W9
	0x026ED658 B.CC 0x26ED67C
	0x026ED65C LDR X8, [X8 + 0xC8]
	0x026ED660 ADD X8, X8, X9, 0x3, LSL
	0x026ED664 LDUR X8, [X8 - 0x8]
	0x026ED668 CMP X8, X1
	0x026ED66C B.NE 0x26ED67C
	0x026ED670 MOV X0, X19
	0x026ED674 LDP X30, X19, [X31], #0x10
	0x026ED678 RET
	0x026ED67C MOV X0, X19
	0x026ED680 BL 0x1C171E0
	0x026ED684 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, X1
	006 Move X19, X0
	007 Move X8, [X8+192]
	008 Move X1, [X8+72]
	009 Call 0x26ED394, X0
	010 Compare X0, 0
	011 JumpIfEqual {42}
	012 Move X8, [X20+32]
	013 Move X8, [X8+192]
	014 Move X1, [X8+88]
	015 Call 0x26D3E9C, X0
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {27}
	020 Compare X19, 0
	021 JumpIfEqual {42}
	022 Move X8, [X20+32]
	023 Move X0, X19
	024 Move X8, [X8+192]
	025 Move X1, [X8+96]
	026 Call 0x26B285C, X0
	027 Compare X19, 0
	028 JumpIfEqual {42}
	029 Move X8, [X20+32]
	030 Move X0, X19
	031 Move X8, [X8+192]
	032 Move [X19+992], W31
	033 Move X1, [X8+104]
	034 Call 0x26B26A4, X0
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X1, X31
	039 Move X30, [X31+32]
	040 Call VisualElement.MarkDirtyRepaint, X0
	041 Return 
	042 Call 0x1C17F20

Method: System.String ValueToString(TValueType value)

Disassembly:
	

ISIL:
No ISIL was generated
Method: TValueType StringToValue(System.String str)

Disassembly:
	0x026ED688 STP X30, X21, [X31 - 0x20]!
	0x026ED68C STP X20, X19, [X31 + 0x10]
	0x026ED690 ADRP X21, 0x1CED000
	0x026ED694 LDRB W8, [X21 + 0x534]
	0x026ED698 MOV X20, X1
	0x026ED69C MOV X19, X0
	0x026ED6A0 TBNZ X8, 0x0, 0x26ED6C4
	0x026ED6A4 ADRP X0, 0x1A30000

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {10}
	004 Move X8, [X2+32]
	005 Move X8, [X8+192]
	006 Move X2, [X8+112]
	007 Move X30, [X31+16]
	008 Call 0x26B2828, X0, X1
	009 Return X0
	010 Call 0x1C17F20

