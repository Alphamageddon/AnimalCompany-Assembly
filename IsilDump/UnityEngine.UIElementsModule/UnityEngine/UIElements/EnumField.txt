Type: UnityEngine.UIElements.EnumField

Method: System.Boolean get_includeObsoleteValues()

Disassembly:
	0x03D0D5B4 STRH W8, [X19 + 0x58]
	0x03D0D5B8 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move W0, [X0+1096]
	002 Return X0

Method: System.Void Initialize(System.Enum defaultValue)

Disassembly:
	0x03D0D5BC LDP X22, X21, [X31 + 0x20]
	0x03D0D5C0 LDP X24, X23, [X31 + 0x10]
	0x03D0D5C4 LDR X30, [X31], #0x40
	0x03D0D5C8 RET
	0x03D0D5CC BL 0x1C16F20
	0x03D0D5D0 STP X30, X21, [X31 - 0x20]!
	0x03D0D5D4 STP X20, X19, [X31 + 0x10]
	0x03D0D5D8 ADRP X21, 0x6DA000
	0x03D0D5DC LDRB W8, [X21 + 0x891]
	0x03D0D5E0 MOV X20, X1
	0x03D0D5E4 MOV X19, X0
	0x03D0D5E8 TBNZ X8, 0x0, 0x3D0D600
	0x03D0D5EC ADRP X0, 0x3E6000
	0x03D0D5F0 LDR X0, [X0 + 0xDF8]
	0x03D0D5F4 BL 0x1C16CF4
	0x03D0D5F8 MOVZ W8, 0x1
	0x03D0D5FC STRB W8, [X21 + 0x891]
	0x03D0D600 CBZ X20, 0x3D0D624
	0x03D0D604 ADRP X8, 0x3E6000
	0x03D0D608 LDR X8, [X8 + 0xDF8]
	0x03D0D60C LDR X9, [X20]
	0x03D0D610 LDR X8, [X8]
	0x03D0D614 LDRB W11, [X9 + 0x130]
	0x03D0D618 LDRB W10, [X8 + 0x130]
	0x03D0D61C CMP W11, W10
	0x03D0D620 B.CS 0x3D0D62C
	0x03D0D624 MOV X1, X31
	0x03D0D628 B 0x3D0D640
	0x03D0D62C LDR X9, [X9 + 0xC8]
	0x03D0D630 ADD X9, X9, X10, 0x3, LSL
	0x03D0D634 LDUR X9, [X9 - 0x8]
	0x03D0D638 CMP X9, X8
	0x03D0D63C CSEL X1, X20, X31, EQ
	0x03D0D640 LDR X8, [X19]
	0x03D0D644 MOV X0, X19
	0x03D0D648 LDP X20, X19, [X31 + 0x10]
	0x03D0D64C LDR X3, [X8 + 0x7F8]
	0x03D0D650 LDR X2, [X8 + 0x800]
	0x03D0D654 LDP X30, X21, [X31], #0x20
	0x03D0D658 BR X3
	0x03D0D65C STR X30, [X31 - 0x30]!
	0x03D0D660 STP X22, X21, [X31 + 0x10]
	0x03D0D664 STP X20, X19, [X31 + 0x20]
	0x03D0D668 ADRP X20, 0x6DA000
	0x03D0D66C LDRB W8, [X20 + 0x892]
	0x03D0D670 MOV X19, X0
	0x03D0D674 TBNZ X8, 0x0, 0x3D0D6A4
	0x03D0D678 ADRP X0, 0x456000
	0x03D0D67C LDR X0, [X0 + 0xA20]
	0x03D0D680 BL 0x1C16CF4
	0x03D0D684 ADRP X0, 0x456000
	0x03D0D688 LDR X0, [X0 + 0x980]
	0x03D0D68C BL 0x1C16CF4
	0x03D0D690 ADRP X0, 0x456000
	0x03D0D694 LDR X0, [X0 + 0x970]
	0x03D0D698 BL 0x1C16CF4
	0x03D0D69C MOVZ W8, 0x1
	0x03D0D6A0 STRB W8, [X20 + 0x892]
	0x03D0D6A4 ADRP X21, 0x456000
	0x03D0D6A8 LDRB W8, [X19 + 0x408]
	0x03D0D6AC LDR X21, [X21 + 0x980]
	0x03D0D6B0 CBZ W8, 0x3D0D6F0
	0x03D0D6B4 LDR X0, [X21]
	0x03D0D6B8 LDR X20, [X19 + 0x450]
	0x03D0D6BC LDR W8, [X0 + 0xE0]
	0x03D0D6C0 CBNZ W8, 0x3D0D6C8
	0x03D0D6C4 BL 0x1C16DFC
	0x03D0D6C8 CBZ X20, 0x3D0D78C
	0x03D0D6CC LDR X8, [X21]
	0x03D0D6D0 LDR X9, [X20]
	0x03D0D6D4 MOV X0, X20
	0x03D0D6D8 LDR X8, [X8 + 0xB8]
	0x03D0D6DC LDR X10, [X9 + 0xB28]
	0x03D0D6E0 LDR X2, [X9 + 0xB30]
	0x03D0D6E4 LDR X1, [X8 + 0x40]
	0x03D0D6E8 BLR X10
	0x03D0D6EC B 0x3D0D710
	0x03D0D6F0 LDR X8, [X19]
	0x03D0D6F4 MOV X0, X19
	0x03D0D6F8 LDR X9, [X8 + 0x7E8]
	0x03D0D6FC LDR X1, [X8 + 0x7F0]
	0x03D0D700 BLR X9
	0x03D0D704 MOV X1, X0
	0x03D0D708 MOV X0, X19
	0x03D0D70C BL 0x3D0CC44
	0x03D0D710 ADRP X22, 0x456000
	0x03D0D714 LDR X22, [X22 + 0x970]
	0x03D0D718 LDR X20, [X19 + 0x450]
	0x03D0D71C LDR X0, [X22]
	0x03D0D720 LDR W8, [X0 + 0xE0]
	0x03D0D724 CBNZ W8, 0x3D0D72C
	0x03D0D728 BL 0x1C16DFC
	0x03D0D72C CBZ X20, 0x3D0D78C
	0x03D0D730 LDR X8, [X22]
	0x03D0D734 LDRB W2, [X19 + 0x408]
	0x03D0D738 MOV X0, X20
	0x03D0D73C MOV X3, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x6DB000
	008 Move X23, 0x410000
	009 Move X22, 0x457000
	010 Move W8, [X21+2183]
	011 Move X23, [X23+3784]
	012 Move X22, [X22+2416]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x457000
	020 Move X0, [X0+2424]
	021 Call 0x1C17CF4
	022 Move X0, 0x457000
	023 Move X0, [X0+2416]
	024 Call 0x1C17CF4
	025 Move X0, 0x410000
	026 Move X0, [X0+3784]
	027 Call 0x1C17CF4
	028 Move X0, 0x40F000
	029 Move X0, [X0+2200]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2183], W8
	033 Move X0, [X23]
	034 Call 0x1C17F10
	035 Move X1, X31
	036 Move X21, X0
	037 Call TextElement..ctor, X0
	038 Move [X20+1104], X21
	039 Move X0, [X22]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Compare X21, 0
	045 JumpIfEqual {118}
	046 Move X8, [X22]
	047 Move X0, X21
	048 Move X2, X31
	049 Move X8, [X8+184]
	050 Move X1, [X8+8]
	051 Call VisualElement.AddToClassList, X0, X1
	052 Move X0, [X20+1104]
	053 Compare X0, 0
	054 JumpIfEqual {118}
	055 Move X23, 0x457000
	056 Move X23, [X23+2424]
	057 Move W1, 1
	058 Move X2, X31
	059 Call VisualElement.set_pickingMode, X0, X1
	060 Move X1, [X23]
	061 Move X0, X20
	062 Call BaseField`1<Object>.get_visualInput, X0
	063 Compare X0, 0
	064 JumpIfEqual {118}
	065 Move X1, [X20+1104]
	066 Move X21, 0x40F000
	067 Move X21, [X21+2200]
	068 Move X2, X31
	069 Call VisualElement.Add, X0, X1
	070 Move X0, [X21]
	071 Call 0x1C17F10
	072 Move X1, X31
	073 Move X21, X0
	074 Call VisualElement..ctor, X0
	075 Move [X20+1112], X21
	076 Compare X21, 0
	077 JumpIfEqual {118}
	078 Move X8, [X22]
	079 Move X0, X21
	080 Move X2, X31
	081 Move X8, [X8+184]
	082 Move X1, [X8+16]
	083 Call VisualElement.AddToClassList, X0, X1
	084 Move X0, [X20+1112]
	085 Compare X0, 0
	086 JumpIfEqual {118}
	087 Move W1, 1
	088 Move X2, X31
	089 Call VisualElement.set_pickingMode, X0, X1
	090 Move X1, [X23]
	091 Move X0, X20
	092 Call BaseField`1<Object>.get_visualInput, X0
	093 Compare X0, 0
	094 JumpIfEqual {118}
	095 Move X1, [X20+1112]
	096 Move X2, X31
	097 Call VisualElement.Add, X0, X1
	098 Compare X19, 0
	099 JumpIfEqual {111}
	100 Move X0, X20
	101 Move X1, X19
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Move W2, W31
	107 Move X30, [X31+48]
	108 Move X23, [X31+56]
	109 Call EnumField.Init, X0, X1, X2
	110 Return 
	111 Move X20, [X31+32]
	112 Move X19, [X31+40]
	113 Move X22, [X31+16]
	114 Move X21, [X31+24]
	115 Move X30, [X31+48]
	116 Move X23, [X31+56]
	117 Return 
	118 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03D0D748 BL 0x3DF1E80
	0x03D0D74C LDR X0, [X21]
	0x03D0D750 LDR X20, [X19 + 0x450]

ISIL:
	001 Move X1, X31
	002 Move X2, X31

Method: System.Void .ctor(System.String label, System.Enum defaultValue = null)

Disassembly:
	0x03D0D754 LDR W8, [X0 + 0xE0]
	0x03D0D758 CBNZ W8, 0x3D0D760
	0x03D0D75C BL 0x1C16DFC
	0x03D0D760 CBZ X20, 0x3D0D78C
	0x03D0D764 LDR X8, [X21]
	0x03D0D768 LDRB W2, [X19 + 0x408]
	0x03D0D76C MOV X0, X20
	0x03D0D770 LDP X20, X19, [X31 + 0x20]
	0x03D0D774 LDR X8, [X8 + 0xB8]
	0x03D0D778 LDP X22, X21, [X31 + 0x10]
	0x03D0D77C MOV X3, X31
	0x03D0D780 LDR X1, [X8 + 0x28]
	0x03D0D784 LDR X30, [X31], #0x30
	0x03D0D788 B 0x3DF1E80
	0x03D0D78C BL 0x1C16F20
	0x03D0D790 STP X30, X25, [X31 - 0x40]!
	0x03D0D794 STP X24, X23, [X31 + 0x10]
	0x03D0D798 STP X22, X21, [X31 + 0x20]
	0x03D0D79C STP X20, X19, [X31 + 0x30]
	0x03D0D7A0 ADRP X25, 0x6DA000
	0x03D0D7A4 ADRP X24, 0x456000
	0x03D0D7A8 ADRP X19, 0x456000
	0x03D0D7AC ADRP X23, 0x411000
	0x03D0D7B0 ADRP X22, 0x411000
	0x03D0D7B4 ADRP X21, 0x40F000
	0x03D0D7B8 ADRP X20, 0x40F000
	0x03D0D7BC LDR X24, [X24 + 0xA28]
	0x03D0D7C0 LDRB W8, [X25 + 0x893]
	0x03D0D7C4 LDR X19, [X19 + 0x970]
	0x03D0D7C8 LDR X23, [X23 + 0xD8]
	0x03D0D7CC LDR X22, [X22 + 0xE0]
	0x03D0D7D0 LDR X21, [X21 + 0xEB8]
	0x03D0D7D4 LDR X20, [X20 + 0xEC0]
	0x03D0D7D8 TBNZ X8, 0x0, 0x3D0D82C
	0x03D0D7DC ADRP X0, 0x456000
	0x03D0D7E0 LDR X0, [X0 + 0x970]
	0x03D0D7E4 BL 0x1C16CF4
	0x03D0D7E8 ADRP X0, 0x456000
	0x03D0D7EC LDR X0, [X0 + 0xA28]
	0x03D0D7F0 BL 0x1C16CF4
	0x03D0D7F4 ADRP X0, 0x411000
	0x03D0D7F8 LDR X0, [X0 + 0xD8]
	0x03D0D7FC BL 0x1C16CF4
	0x03D0D800 ADRP X0, 0x40F000
	0x03D0D804 LDR X0, [X0 + 0xEB8]
	0x03D0D808 BL 0x1C16CF4
	0x03D0D80C ADRP X0, 0x411000
	0x03D0D810 LDR X0, [X0 + 0xE0]
	0x03D0D814 BL 0x1C16CF4
	0x03D0D818 ADRP X0, 0x40F000
	0x03D0D81C LDR X0, [X0 + 0xEC0]
	0x03D0D820 BL 0x1C16CF4
	0x03D0D824 MOVZ W8, 0x1
	0x03D0D828 STRB W8, [X25 + 0x893]
	0x03D0D82C LDR X8, [X19]
	0x03D0D830 LDR X9, [X24]
	0x03D0D834 MOV X2, X31
	0x03D0D838 LDR X8, [X8 + 0xB8]
	0x03D0D83C STR X9, [X8]
	0x03D0D840 LDR X8, [X19]
	0x03D0D844 LDR X1, [X23]
	0x03D0D848 LDR X8, [X8 + 0xB8]
	0x03D0D84C LDR X0, [X8]
	0x03D0D850 BL 0x321B938
	0x03D0D854 LDR X8, [X19]
	0x03D0D858 MOV X2, X31
	0x03D0D85C LDR X8, [X8 + 0xB8]
	0x03D0D860 STR X0, [X8 + 0x8]
	0x03D0D864 LDR X0, [X8]
	0x03D0D868 LDR X1, [X22]
	0x03D0D86C BL 0x321B938
	0x03D0D870 LDR X8, [X19]
	0x03D0D874 MOV X2, X31
	0x03D0D878 LDR X8, [X8 + 0xB8]
	0x03D0D87C STR X0, [X8 + 0x10]
	0x03D0D880 LDR X0, [X8]
	0x03D0D884 LDR X1, [X21]
	0x03D0D888 BL 0x321B938
	0x03D0D88C LDR X8, [X19]
	0x03D0D890 MOV X2, X31
	0x03D0D894 LDR X8, [X8 + 0xB8]
	0x03D0D898 STR X0, [X8 + 0x18]
	0x03D0D89C LDR X0, [X8]
	0x03D0D8A0 LDR X1, [X20]
	0x03D0D8A4 BL 0x321B938
	0x03D0D8A8 LDR X8, [X19]
	0x03D0D8AC LDP X20, X19, [X31 + 0x30]
	0x03D0D8B0 LDP X22, X21, [X31 + 0x20]
	0x03D0D8B4 LDP X24, X23, [X31 + 0x10]
	0x03D0D8B8 LDR X8, [X8 + 0xB8]
	0x03D0D8BC STR X0, [X8 + 0x20]
	0x03D0D8C0 LDP X30, X25, [X31], #0x40
	0x03D0D8C4 RET
	0x03D0D8C8 B 0x3D0D5D0
	0x03D0D8CC STP X30, X21, [X31 - 0x20]!
	0x03D0D8D0 STP X20, X19, [X31 + 0x10]
	0x03D0D8D4 ADRP X20, 0x6DA000
	0x03D0D8D8 ADRP X21, 0x456000
	0x03D0D8DC LDRB W8, [X20 + 0x894]
	0x03D0D8E0 LDR X21, [X21 + 0xA30]
	0x03D0D8E4 MOV X19, X0
	0x03D0D8E8 TBNZ X8, 0x0, 0x3D0D900
	0x03D0D8EC ADRP X0, 0x456000
	0x03D0D8F0 LDR X0, [X0 + 0xA30]
	0x03D0D8F4 BL 0x1C16CF4
	0x03D0D8F8 MOVZ W8, 0x1
	0x03D0D8FC STRB W8, [X20 + 0x894]
	0x03D0D900 LDR X1, [X21]
	0x03D0D904 MOV X0, X19
	0x03D0D908 LDP X20, X19, [X31 + 0x10]
	0x03D0D90C LDP X30, X21, [X31], #0x20
	0x03D0D910 B 0x2736468
	0x03D0D914 SUB X31, X31, 0xC0
	0x03D0D918 STP X30, X25, [X31 + 0x80]
	0x03D0D91C STP X24, X23, [X31 + 0x90]
	0x03D0D920 STP X22, X21, [X31 + 0xA0]
	0x03D0D924 STP X20, X19, [X31 + 0xB0]
	0x03D0D928 ADRP X25, 0x6DA000
	0x03D0D92C ADRP X24, 0x456000
	0x03D0D930 ADRP X23, 0x456000
	0x03D0D934 LDRB W8, [X25 + 0x895]
	0x03D0D938 LDR X24, [X24 + 0xA38]
	0x03D0D93C LDR X23, [X23 + 0x948]
	0x03D0D940 MOV X21, X3
	0x03D0D944 MOV X20, X2
	0x03D0D948 MOV X19, X1
	0x03D0D94C MOV X22, X0
	0x03D0D950 TBNZ X8, 0x0, 0x3D0D98C
	0x03D0D954 ADRP X0, 0x456000
	0x03D0D958 LDR X0, [X0 + 0x948]
	0x03D0D95C BL 0x1C16CF4
	0x03D0D960 ADRP X0, 0x456000
	0x03D0D964 LDR X0, [X0 + 0x970]
	0x03D0D968 BL 0x1C16CF4
	0x03D0D96C ADRP X0, 0x3E6000
	0x03D0D970 LDR X0, [X0 + 0x6C0]
	0x03D0D974 BL 0x1C16CF4
	0x03D0D978 ADRP X0, 0x456000
	0x03D0D97C LDR X0, [X0 + 0xA38]
	0x03D0D980 BL 0x1C16CF4
	0x03D0D984 MOVZ W8, 0x1
	0x03D0D988 STRB W8, [X25 + 0x895]
	0x03D0D98C STP X31, X31, [X31 + 0x50]
	0x03D0D990 STRB W31, [X31 + 0x4C]
	0x03D0D994 LDP V1, V0, [X21]
	0x03D0D998 LDR X4, [X24]
	0x03D0D99C ADD X3, X31, 0x60
	0x03D0D9A0 MOV X0, X22
	0x03D0D9A4 MOV X1, X19
	0x03D0D9A8 MOV X2, X20
	0x03D0D9AC STP V1, V0, [X31 + 0x20]
	0x03D0D9B0 STP V1, V0, [X31 + 0x60]
	0x03D0D9B4 BL 0x273A0F4
	0x03D0D9B8 LDP V1, V0, [X21]
	0x03D0D9BC LDR X0, [X23]
	0x03D0D9C0 STP V1, V0, [X31 + 0x60]
	0x03D0D9C4 LDR W8, [X0 + 0xE0]
	0x03D0D9C8 CBNZ W8, 0x3D0D9D0
	0x03D0D9CC BL 0x1C16DFC
	0x03D0D9D0 LDP V0, V1, [X31 + 0x60]
	0x03D0D9D4 ADD X1, X31, 0x0
	0x03D0D9D8 ADD X2, X31, 0x58
	0x03D0D9DC ADD X3, X31, 0x50
	0x03D0D9E0 ADD X4, X31, 0x4C
	0x03D0D9E4 MOV X0, X20
	0x03D0D9E8 STP V0, V1, [X31]
	0x03D0D9EC BL 0x3D0C0DC
	0x03D0D9F0 TBZ X0, 0x0, 0x3D0DA40
	0x03D0D9F4 CBZ X19, 0x3D0DB20
	0x03D0D9F8 ADRP X9, 0x456000
	0x03D0D9FC LDR X9, [X9 + 0x970]
	0x03D0DA00 LDR X8, [X19]
	0x03D0DA04 LDR X1, [X9]
	0x03D0DA08 LDRB W10, [X8 + 0x130]
	0x03D0DA0C LDRB W9, [X1 + 0x130]
	0x03D0DA10 CMP W10, W9
	0x03D0DA14 B.CC 0x3D0DB18
	0x03D0DA18 LDR X8, [X8 + 0xC8]
	0x03D0DA1C ADD X8, X8, X9, 0x3, LSL
	0x03D0DA20 LDUR X8, [X8 - 0x8]
	0x03D0DA24 CMP X8, X1
	0x03D0DA28 B.NE 0x3D0DB18
	0x03D0DA2C LDRB W2, [X31 + 0x4C]
	0x03D0DA30 LDR X1, [X31 + 0x50]
	0x03D0DA34 MOV X0, X19
	0x03D0DA38 BL 0x3D0CA9C
	0x03D0DA3C B 0x3D0DB00
	0x03D0DA40 ADRP X21, 0x3E6000
	0x03D0DA44 LDR X21, [X21 + 0x6C0]
	0x03D0DA48 LDR X20, [X31 + 0x58]
	0x03D0DA4C LDR X0, [X21]
	0x03D0DA50 LDR W8, [X0 + 0xE0]
	0x03D0DA54 CBNZ W8, 0x3D0DA5C
	0x03D0DA58 BL 0x1C16DFC
	0x03D0DA5C MOV X0, X31
	0x03D0DA60 MOV X1, X20
	0x03D0DA64 MOV X2, X31
	0x03D0DA68 BL 0x3395F0C
	0x03D0DA6C CBZ X19, 0x3D0DB20
	0x03D0DA70 ADRP X9, 0x456000
	0x03D0DA74 LDR X9, [X9 + 0x970]
	0x03D0DA78 LDR X8, [X19]
	0x03D0DA7C LDR X1, [X9]
	0x03D0DA80 LDRB W10, [X8 + 0x130]
	0x03D0DA84 LDRB W9, [X1 + 0x130]
	0x03D0DA88 CMP W10, W9
	0x03D0DA8C B.CC 0x3D0DB18
	0x03D0DA90 LDR X8, [X8 + 0xC8]
	0x03D0DA94 ADD X8, X8, X9, 0x3, LSL
	0x03D0DA98 LDUR X8, [X8 - 0x8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0x6DB000
	012 Move X22, 0x457000
	013 Move W8, [X23+2184]
	014 Move X22, [X22+2432]
	015 Move X20, X2
	016 Move X21, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {78}
	022 Move X0, 0x457000
	023 Move X0, [X0+2440]
	024 Call 0x1C17CF4
	025 Move X0, 0x457000
	026 Move X0, [X0+2448]
	027 Call 0x1C17CF4
	028 Move X0, 0x457000
	029 Move X0, [X0+2424]
	030 Call 0x1C17CF4
	031 Move X0, 0x457000
	032 Move X0, [X0+2432]
	033 Call 0x1C17CF4
	034 Move X0, 0x412000
	035 Move X0, [X0+136]
	036 Call 0x1C17CF4
	037 Move X0, 0x412000
	038 Move X0, [X0+144]
	039 Call 0x1C17CF4
	040 Move X0, 0x411000
	041 Move X0, [X0+1904]
	042 Call 0x1C17CF4
	043 Move X0, 0x412000
	044 Move X0, [X0+152]
	045 Call 0x1C17CF4
	046 Move X0, 0x457000
	047 Move X0, [X0+2456]
	048 Call 0x1C17CF4
	049 Move X0, 0x457000
	050 Move X0, [X0+2464]
	051 Call 0x1C17CF4
	052 Move X0, 0x457000
	053 Move X0, [X0+2472]
	054 Call 0x1C17CF4
	055 Move X0, 0x457000
	056 Move X0, [X0+2416]
	057 Call 0x1C17CF4
	058 Move X0, 0x412000
	059 Move X0, [X0+160]
	060 Call 0x1C17CF4
	061 Move X0, 0x411000
	062 Move X0, [X0+1920]
	063 Call 0x1C17CF4
	064 Move X0, 0x412000
	065 Move X0, [X0+168]
	066 Call 0x1C17CF4
	067 Move X0, 0x412000
	068 Move X0, [X0+176]
	069 Call 0x1C17CF4
	070 Move X0, 0x457000
	071 Move X0, [X0+2480]
	072 Call 0x1C17CF4
	073 Move X0, 0x457000
	074 Move X0, [X0+2488]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X23+2184], W8
	078 Move X0, [X22]
	079 Move X23, 0x457000
	080 Move X22, 0x457000
	081 Move W8, [X0+224]
	082 Move X23, [X23+2440]
	083 Move X22, [X22+2416]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X3, [X23]
	088 Move X0, X19
	089 Move X1, X21
	090 Move X2, X31
	091 Call BaseField`1<Object>..ctor, X0, X1, X2
	092 Move X0, [X22]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {98}
	096 Call 0x1C17DFC
	097 Move X0, [X22]
	098 Move X8, [X0+184]
	099 Move X0, X19
	100 Move X2, X31
	101 Move X1, [X8]
	102 Call VisualElement.AddToClassList, X0, X1
	103 Move X0, [X19+1024]
	104 Compare X0, 0
	105 JumpIfEqual {231}
	106 Move X8, [X22]
	107 Move X21, 0x457000
	108 Move X2, X31
	109 Move X8, [X8+184]
	110 Move X1, [X8+24]
	111 Move X21, [X21+2424]
	112 Call VisualElement.AddToClassList, X0, X1
	113 Move X1, [X21]
	114 Move X0, X19
	115 Call BaseField`1<Object>.get_visualInput, X0
	116 Compare X0, 0
	117 JumpIfEqual {231}
	118 Move X8, [X22]
	119 Move X21, 0x411000
	120 Move X21, [X21+1920]
	121 Move X23, 0x457000
	122 Move X8, [X8+184]
	123 Move X24, 0x411000
	124 Move X25, 0x412000
	125 Move X23, [X23+2464]
	126 Move X24, [X24+1904]
	127 Move X25, [X25+160]
	128 Move X1, [X8+32]
	129 Move X26, 0x457000
	130 Move X27, 0x412000
	131 Move X22, 0x457000
	132 Move X26, [X26+2472]
	133 Move X27, [X27+152]
	134 Move X22, [X22+2488]
	135 Move X2, X31
	136 Call VisualElement.AddToClassList, X0, X1
	137 Move X0, X19
	138 Move X1, X20
	139 Call EnumField.Initialize, X0, X1
	140 Move X0, [X21]
	141 Call 0x1C17F10
	142 Move X2, [X23]
	143 Move X1, X19
	144 Move X3, X31
	145 Move X20, X0
	146 Call 0x2D0F824, X0, X1, X2
	147 Move X3, [X24]
	148 Move X0, X19
	149 Move X1, X20
	150 Move W2, W31
	151 Call 0x21A2534, X0, X1, X2
	152 Move X0, [X25]
	153 Call 0x1C17F10
	154 Move X2, [X26]
	155 Move X1, X19
	156 Move X3, X31
	157 Move X20, X0
	158 Call 0x2D0F824, X0, X1, X2
	159 Move X3, [X27]
	160 Move X0, X19
	161 Move X1, X20
	162 Move W2, W31
	163 Call 0x21A2534, X0, X1, X2
	164 Move X0, [X22]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {170}
	168 Call 0x1C17DFC
	169 Move X0, [X22]
	170 Move X8, [X0+184]
	171 Move X26, 0x412000
	172 Move X25, 0x412000
	173 Move X24, 0x457000
	174 Move X23, 0x412000
	175 Move X20, [X8+8]
	176 Move X26, [X26+136]
	177 Move X25, [X25+168]
	178 Move X24, [X24+2456]
	179 Move X23, [X23+144]
	180 Compare X20, 0
	181 JumpIfNotEqual {203}
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {187}
	185 Call 0x1C17DFC
	186 Move X0, [X22]
	187 Move X9, 0x412000
	188 Move X8, [X0+184]
	189 Move X9, [X9+176]
	190 Move X21, [X8]
	191 Move X0, [X9]
	192 Call 0x1C17F10
	193 Move X8, 0x457000
	194 Move X8, [X8+2480]
	195 Move X1, X21
	196 Move X3, X31
	197 Move X20, X0
	198 Move X2, [X8]
	199 Call 0x2D0F824, X0, X1, X2
	200 Move X8, [X22]
	201 Move X8, [X8+184]
	202 Move [X8+8], X20
	203 Move X3, [X26]
	204 Move X0, X19
	205 Move X1, X20
	206 Move W2, W31
	207 Call 0x21A2534, X0, X1, X2
	208 Move X0, [X25]
	209 Call 0x1C17F10
	210 Move X2, [X24]
	211 Move X1, X19
	212 Move X3, X31
	213 Move X20, X0
	214 Call 0x2D0F824, X0, X1, X2
	215 Move X3, [X23]
	216 Move X0, X19
	217 Move X1, X20
	218 Move X20, [X31+64]
	219 Move X19, [X31+72]
	220 Move X22, [X31+48]
	221 Move X21, [X31+56]
	222 Move X24, [X31+32]
	223 Move X23, [X31+40]
	224 Move X26, [X31+16]
	225 Move X25, [X31+24]
	226 Move W2, W31
	227 Move X30, [X31+80]
	228 Move X27, [X31+88]
	229 Call 0x21A2534, X0, X1, X2
	230 Return 
	231 Call 0x1C17F20

Method: System.Void Init(System.Enum defaultValue)

Disassembly:
	0x03D0D740 LDR X8, [X8 + 0xB8]
	0x03D0D744 LDR X1, [X8 + 0x18]

ISIL:
	001 Move W2, W31
	002 Call EnumField.Init, X0, X1, X2
	003 Return 

Method: System.Void Init(System.Enum defaultValue, System.Boolean includeObsoleteValues)

Disassembly:
	0x03D0DA9C CMP X8, X1
	0x03D0DAA0 B.NE 0x3D0DB18
	0x03D0DAA4 TBZ X0, 0x0, 0x3D0DAE4
	0x03D0DAA8 STR X20, [X19 + 0x440]
	0x03D0DAAC LDR X0, [X21]
	0x03D0DAB0 LDR W8, [X0 + 0xE0]
	0x03D0DAB4 CBNZ W8, 0x3D0DABC
	0x03D0DAB8 BL 0x1C16DFC
	0x03D0DABC MOV X0, X20
	0x03D0DAC0 MOV X1, X31
	0x03D0DAC4 MOV X2, X31
	0x03D0DAC8 BL 0x3395F0C
	0x03D0DACC TBZ X0, 0x0, 0x3D0DADC
	0x03D0DAD0 LDR X1, [X19 + 0x440]
	0x03D0DAD4 MOV X0, X19
	0x03D0DAD8 BL 0x3D0CBA0
	0x03D0DADC LDR X8, [X19]
	0x03D0DAE0 B 0x3D0DAEC
	0x03D0DAE4 LDR X8, [X19]
	0x03D0DAE8 STR X31, [X19 + 0x440]
	0x03D0DAEC LDR X9, [X8 + 0x7F8]
	0x03D0DAF0 LDR X2, [X8 + 0x800]
	0x03D0DAF4 MOV X0, X19
	0x03D0DAF8 MOV X1, X31
	0x03D0DAFC BLR X9
	0x03D0DB00 LDP X20, X19, [X31 + 0xB0]
	0x03D0DB04 LDP X22, X21, [X31 + 0xA0]
	0x03D0DB08 LDP X24, X23, [X31 + 0x90]
	0x03D0DB0C LDP X30, X25, [X31 + 0x80]
	0x03D0DB10 ADD X31, X31, 0xC0
	0x03D0DB14 RET
	0x03D0DB18 MOV X0, X19
	0x03D0DB1C BL 0x1C171E0
	0x03D0DB20 BL 0x1C16F20
	0x03D0DB24 STP X30, X21, [X31 - 0x20]!
	0x03D0DB28 STP X20, X19, [X31 + 0x10]
	0x03D0DB2C ADRP X21, 0x6DA000
	0x03D0DB30 ADRP X20, 0x456000
	0x03D0DB34 LDRB W8, [X21 + 0x896]
	0x03D0DB38 LDR X20, [X20 + 0x948]
	0x03D0DB3C MOV X19, X0
	0x03D0DB40 TBNZ X8, 0x0, 0x3D0DB64
	0x03D0DB44 ADRP X0, 0x456000
	0x03D0DB48 LDR X0, [X0 + 0x948]
	0x03D0DB4C BL 0x1C16CF4
	0x03D0DB50 ADRP X0, 0x456000
	0x03D0DB54 LDR X0, [X0 + 0xA40]
	0x03D0DB58 BL 0x1C16CF4
	0x03D0DB5C MOVZ W8, 0x1
	0x03D0DB60 STRB W8, [X21 + 0x896]
	0x03D0DB64 LDR X0, [X20]
	0x03D0DB68 ADRP X21, 0x456000
	0x03D0DB6C LDR W8, [X0 + 0xE0]
	0x03D0DB70 LDR X21, [X21 + 0xA40]
	0x03D0DB74 CBNZ W8, 0x3D0DB80
	0x03D0DB78 BL 0x1C16DFC
	0x03D0DB7C LDR X0, [X20]
	0x03D0DB80 LDR X8, [X0 + 0xB8]
	0x03D0DB84 MOV X0, X19
	0x03D0DB88 LDR X9, [X8]
	0x03D0DB8C STR X9, [X19 + 0x80]
	0x03D0DB90 LDR X9, [X8 + 0x8]
	0x03D0DB94 STR X9, [X19 + 0x88]
	0x03D0DB98 LDR X8, [X8 + 0x10]
	0x03D0DB9C STR X8, [X19 + 0x90]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6DB000
	007 Move W8, [X22+2185]
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x457000
	016 Move X0, [X0+2496]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2185], W8
	020 Compare X19, 0
	021 JumpIfEqual {62}
	022 And W8, W21, 1
	023 Move X21, 0x457000
	024 Move X21, [X21+2496]
	025 Move X0, X19
	026 Move X1, X31
	027 Move [X20+1096], W8
	028 Call "il2cpp_vm_object_is_inst", X0
	029 Move X1, X0
	030 Move X0, X20
	031 Call EnumField.PopulateDataFromType, X0, X1
	032 Move X1, [X21]
	033 Move X0, X20
	034 Call BaseField`1<Object>.get_rawValue, X0
	035 Move X1, X19
	036 Move X2, X31
	037 Call Object.Equals, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {51}
	042 Move X0, X20
	043 Move X1, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Call EnumField.UpdateValueLabel, X0, X1
	050 Return 
	051 Move X8, [X20]
	052 Move X0, X20
	053 Move X1, X19
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X3, [X8+2184]
	057 Move X2, [X8+2192]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 CallNoReturn X3
	062 Move X0, 0x3EC000
	063 Move X0, [X0+1320]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X19, X0
	067 Move X0, 0x457000
	068 Move X0, [X0+2504]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X19
	072 Move X2, X31
	073 Call ArgumentNullException..ctor, X0, X1
	074 Move X0, 0x457000
	075 Move X0, [X0+2512]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X19
	079 Call 0x1C17DEC

Method: System.Void PopulateDataFromType(System.Type enumType)

Disassembly:
	0x03D0DBA0 LDR X1, [X21]
	0x03D0DBA4 LDP X20, X19, [X31 + 0x10]
	0x03D0DBA8 LDP X30, X21, [X31], #0x20
	0x03D0DBAC B 0x273A038
	0x03D0DBB0 STR X30, [X31 - 0x20]!
	0x03D0DBB4 STP X20, X19, [X31 + 0x10]
	0x03D0DBB8 ADRP X19, 0x6DA000
	0x03D0DBBC ADRP X20, 0x456000
	0x03D0DBC0 LDRB W8, [X19 + 0x897]
	0x03D0DBC4 LDR X20, [X20 + 0x9B8]
	0x03D0DBC8 TBNZ X8, 0x0, 0x3D0DBE0
	0x03D0DBCC ADRP X0, 0x456000
	0x03D0DBD0 LDR X0, [X0 + 0x9B8]
	0x03D0DBD4 BL 0x1C16CF4
	0x03D0DBD8 MOVZ W8, 0x1
	0x03D0DBDC STRB W8, [X19 + 0x897]
	0x03D0DBE0 LDR X0, [X20]
	0x03D0DBE4 BL 0x1C16F10
	0x03D0DBE8 MOV X1, X31
	0x03D0DBEC MOV X19, X0
	0x03D0DBF0 BL 0x33BDD8C
	0x03D0DBF4 LDR X8, [X20]
	0x03D0DBF8 LDR X8, [X8 + 0xB8]
	0x03D0DBFC STR X19, [X8]
	0x03D0DC00 LDP X20, X19, [X31 + 0x10]
	0x03D0DC04 LDR X30, [X31], #0x20
	0x03D0DC08 RET
	0x03D0DC0C MOV X1, X31
	0x03D0DC10 B 0x33BDD8C
	0x03D0DC14 STR X30, [X31 - 0x20]!
	0x03D0DC18 STP X20, X19, [X31 + 0x10]
	0x03D0DC1C ADRP X20, 0x6DA000
	0x03D0DC20 LDRB W8, [X20 + 0x898]
	0x03D0DC24 MOV X19, X1
	0x03D0DC28 TBNZ X8, 0x0, 0x3D0DC40
	0x03D0DC2C ADRP X0, 0x40F000
	0x03D0DC30 LDR X0, [X0 + 0xB48]
	0x03D0DC34 BL 0x1C16CF4
	0x03D0DC38 MOVZ W8, 0x1
	0x03D0DC3C STRB W8, [X20 + 0x898]
	0x03D0DC40 CBZ X19, 0x3D0DC6C

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move X22, 0x6DB000
	008 Move X21, 0x453000
	009 Move W8, [X22+2186]
	010 Move X21, [X21+1048]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x453000
	018 Move X0, [X0+1048]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+2186], W8
	022 Move [X19+1088], X20
	023 Move X0, [X21]
	024 Move W21, [X19+1096]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Add X8, X31, 0
	030 Move X0, X20
	031 Move W1, W21
	032 Move X2, X31
	033 Move X3, X31
	034 Call EnumDataUtility.GetCachedEnumData, X0, X1, X2
	035 Move V1, [X31+32]
	036 Move V0, [X31+48]
	037 Move V3, [X31]
	038 Move V2, [X31+16]
	039 Move X22, [X31+144]
	040 Move X21, [X31+152]
	041 Move X30, [X31+128]
	042 Move [X31+96], V1
	043 Move [X31+104], V0
	044 Move [X31+64], V3
	045 Move [X31+72], V2
	046 Move [X19+73], V0
	047 Move [X19+72], V1
	048 Move [X19+71], V2
	049 Move [X19+70], V3
	050 Move X20, [X31+160]
	051 Move X19, [X31+168]
	052 Add X31, X31, 176
	053 Return 

Method: System.Void SetValueWithoutNotify(System.Enum newValue)

Disassembly:
	0x03D0DD30 ADRP X0, 0x456000
	0x03D0DD34 LDR X0, [X0 + 0xA58]
	0x03D0DD38 BL 0x1C16CF4
	0x03D0DD3C MOVZ W8, 0x1
	0x03D0DD40 STRB W8, [X21 + 0x89A]
	0x03D0DD44 LDR X1, [X22]
	0x03D0DD48 MOV X0, X19
	0x03D0DD4C BL 0x26E90B8
	0x03D0DD50 LDR X8, [X20]
	0x03D0DD54 MOV X19, X0
	0x03D0DD58 LDR W9, [X8 + 0xE0]
	0x03D0DD5C CBNZ W9, 0x3D0DD68
	0x03D0DD60 MOV X0, X8
	0x03D0DD64 BL 0x1C16DFC
	0x03D0DD68 MOV X0, X31
	0x03D0DD6C BL 0x3338524
	0x03D0DD70 CBZ X0, 0x3D0DDA8
	0x03D0DD74 LDR X8, [X0]
	0x03D0DD78 LDR X9, [X8 + 0x218]
	0x03D0DD7C LDR X1, [X8 + 0x220]
	0x03D0DD80 BLR X9
	0x03D0DD84 MOV X2, X0
	0x03D0DD88 ADD X0, X31, 0xC
	0x03D0DD8C MOV X1, X19
	0x03D0DD90 MOV X3, X31
	0x03D0DD94 BL 0x338FFB4
	0x03D0DD98 LDP X20, X19, [X31 + 0x20]
	0x03D0DD9C LDP X22, X21, [X31 + 0x10]
	0x03D0DDA0 LDR X30, [X31], #0x30
	0x03D0DDA4 RET
	0x03D0DDA8 BL 0x1C16F20
	0x03D0DDAC SUB X31, X31, 0x30
	0x03D0DDB0 STP X30, X21, [X31 + 0x10]
	0x03D0DDB4 STP X20, X19, [X31 + 0x20]
	0x03D0DDB8 ADRP X21, 0x6DA000
	0x03D0DDBC LDRB W8, [X21 + 0x89B]
	0x03D0DDC0 MOV X20, X1
	0x03D0DDC4 MOV X19, X0
	0x03D0DDC8 TBNZ X8, 0x0, 0x3D0DE04
	0x03D0DDCC ADRP X0, 0x456000
	0x03D0DDD0 LDR X0, [X0 + 0xA60]
	0x03D0DDD4 BL 0x1C16CF4
	0x03D0DDD8 ADRP X0, 0x456000
	0x03D0DDDC LDR X0, [X0 + 0xA50]
	0x03D0DDE0 BL 0x1C16CF4
	0x03D0DDE4 ADRP X0, 0x456000
	0x03D0DDE8 LDR X0, [X0 + 0xA68]
	0x03D0DDEC BL 0x1C16CF4
	0x03D0DDF0 ADRP X0, 0x452000
	0x03D0DDF4 LDR X0, [X0 + 0x7A8]
	0x03D0DDF8 BL 0x1C16CF4
	0x03D0DDFC MOVZ W8, 0x1
	0x03D0DE00 STRB W8, [X21 + 0x89B]
	0x03D0DE04 STR W31, [X31 + 0xC]
	0x03D0DE08 LDR X0, [X19 + 0x448]
	0x03D0DE0C CBZ X0, 0x3D0DE84

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6DB000
	007 Move X22, 0x457000
	008 Move W8, [X21+2187]
	009 Move X22, [X22+2496]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x457000
	017 Move X0, [X0+2528]
	018 Call 0x1C17CF4
	019 Move X0, 0x457000
	020 Move X0, [X0+2496]
	021 Call 0x1C17CF4
	022 Move X0, 0x3E7000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2187], W8
	027 Move X1, [X22]
	028 Move X0, X20
	029 Call BaseField`1<Object>.get_rawValue, X0
	030 Move X1, X19
	031 Move X2, X31
	032 Call Object.Equals, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {59}
	037 Move X8, 0x457000
	038 Move X8, [X8+2528]
	039 Move X21, 0x3E7000
	040 Move X0, X20
	041 Move X1, X19
	042 Move X2, [X8]
	043 Move X21, [X21+1728]
	044 Call BaseField`1<Object>.SetValueWithoutNotify, X0, X1
	045 Move X0, [X21]
	046 Move X21, [X20+1088]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X21
	052 Move X1, X31
	053 Move X2, X31
	054 Call Type.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {65}
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Return 
	065 Move X0, X20
	066 Move X1, X19
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Call EnumField.UpdateValueLabel, X0, X1
	073 Return 

Method: System.Void UpdateValueLabel(System.Enum value)

Disassembly:
	0x03D0DC44 LDR W8, [X19 + 0xA4]
	0x03D0DC48 CBZ W8, 0x3D0DC58
	0x03D0DC4C LDP X20, X19, [X31 + 0x10]
	0x03D0DC50 LDR X30, [X31], #0x20
	0x03D0DC54 RET
	0x03D0DC58 MOV X0, X19
	0x03D0DC5C LDP X20, X19, [X31 + 0x10]
	0x03D0DC60 MOV X1, X31
	0x03D0DC64 LDR X30, [X31], #0x20
	0x03D0DC68 B 0x3D9D950
	0x03D0DC6C BL 0x1C16F20
	0x03D0DC70 STR X30, [X31 - 0x20]!
	0x03D0DC74 STP X20, X19, [X31 + 0x10]
	0x03D0DC78 ADRP X20, 0x6DA000
	0x03D0DC7C LDRB W8, [X20 + 0x899]
	0x03D0DC80 MOV X19, X0
	0x03D0DC84 TBNZ X8, 0x0, 0x3D0DCA8
	0x03D0DC88 ADRP X0, 0x456000
	0x03D0DC8C LDR X0, [X0 + 0xA48]
	0x03D0DC90 BL 0x1C16CF4
	0x03D0DC94 ADRP X0, 0x456000
	0x03D0DC98 LDR X0, [X0 + 0xA50]
	0x03D0DC9C BL 0x1C16CF4
	0x03D0DCA0 MOVZ W8, 0x1
	0x03D0DCA4 STRB W8, [X20 + 0x899]
	0x03D0DCA8 LDR X0, [X19 + 0x448]
	0x03D0DCAC CBZ X0, 0x3D0DCE4
	0x03D0DCB0 ADRP X9, 0x456000
	0x03D0DCB4 LDR X9, [X9 + 0xA48]
	0x03D0DCB8 LDR X8, [X0]
	0x03D0DCBC LDR X1, [X9]
	0x03D0DCC0 LDRB W10, [X8 + 0x130]
	0x03D0DCC4 LDRB W9, [X1 + 0x130]
	0x03D0DCC8 CMP W10, W9
	0x03D0DCCC B.CC 0x3D0DCF0
	0x03D0DCD0 LDR X8, [X8 + 0xC8]
	0x03D0DCD4 ADD X8, X8, X9, 0x3, LSL
	0x03D0DCD8 LDUR X8, [X8 - 0x8]
	0x03D0DCDC CMP X8, X1
	0x03D0DCE0 B.NE 0x3D0DCF0
	0x03D0DCE4 LDP X20, X19, [X31 + 0x10]
	0x03D0DCE8 LDR X30, [X31], #0x20
	0x03D0DCEC RET
	0x03D0DCF0 BL 0x1C171E0
	0x03D0DCF4 STR X30, [X31 - 0x30]!
	0x03D0DCF8 STP X22, X21, [X31 + 0x10]
	0x03D0DCFC STP X20, X19, [X31 + 0x20]
	0x03D0DD00 ADRP X21, 0x6DA000
	0x03D0DD04 STR S0, [X31 + 0xC]
	0x03D0DD08 ADRP X22, 0x456000
	0x03D0DD0C ADRP X20, 0x3E8000
	0x03D0DD10 LDRB W8, [X21 + 0x89A]
	0x03D0DD14 LDR X22, [X22 + 0xA58]
	0x03D0DD18 LDR X20, [X20 + 0xC48]
	0x03D0DD1C MOV X19, X0
	0x03D0DD20 TBNZ X8, 0x0, 0x3D0DD44
	0x03D0DD24 ADRP X0, 0x3E8000
	0x03D0DD28 LDR X0, [X0 + 0xC48]
	0x03D0DD2C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6DB000
	007 Move X21, 0x457000
	008 Move W8, [X22+2188]
	009 Move X21, [X21+2520]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x457000
	017 Move X0, [X0+2520]
	018 Call 0x1C17CF4
	019 Move X0, 0x3E9000
	020 Move X0, [X0+632]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2188], W8
	024 Move X0, [X19+1120]
	025 Move X2, [X21]
	026 Move X1, X20
	027 Call Array.IndexOf, X0, X1
	028 Move X9, [X19+1120]
	029 Compare X9, 0
	030 JumpIfEqual {66}
	031 Move W9, [X9+24]
	032 Move W8, W0
	033 NotImplemented "Instruction ORN not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, [X19+1104]
	036 NotImplemented "Instruction CSET not yet implemented."
	037 And W31, W9, W10
	038 Move X9, [X19+1136]
	039 Compare X9, 0
	040 JumpIfEqual {66}
	041 Move W10, [X9+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Compare X0, 0
	044 JumpIfEqual {66}
	045 Move X10, [X0]
	046 Add X8, X9, W8
	047 Move X1, [X8+32]
	048 Move X3, [X10+2856]
	049 Move X2, [X10+2864]
	050 Compare X0, 0
	051 JumpIfEqual {66}
	052 Move X8, 0x3E9000
	053 Move X8, [X8+632]
	054 Move X9, [X0]
	055 Move X8, [X8]
	056 Move X3, [X9+2856]
	057 Move X2, [X9+2864]
	058 Move X8, [X8+184]
	059 Move X1, [X8]
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 CallNoReturn X3
	066 Call 0x1C17F20
	067 Call 0x1C17F28

Method: System.Void OnPointerDownEvent(UnityEngine.UIElements.PointerDownEvent evt)

Disassembly:
	0x03D0DE10 ADRP X8, 0x456000
	0x03D0DE14 LDR X8, [X8 + 0xA68]
	0x03D0DE18 ADRP X21, 0x452000
	0x03D0DE1C LDR X1, [X8]
	0x03D0DE20 LDR X21, [X21 + 0x7A8]
	0x03D0DE24 BL 0x26C3B10
	0x03D0DE28 LDR X8, [X21]
	0x03D0DE2C MOV X21, X0
	0x03D0DE30 LDR W9, [X8 + 0xE0]
	0x03D0DE34 CBNZ W9, 0x3D0DE40
	0x03D0DE38 MOV X0, X8
	0x03D0DE3C BL 0x1C16DFC
	0x03D0DE40 ADD X2, X31, 0xC
	0x03D0DE44 MOV X0, X20
	0x03D0DE48 MOV X1, X21
	0x03D0DE4C MOV X3, X31
	0x03D0DE50 BL 0x3C3D5B0
	0x03D0DE54 TBZ X0, 0x0, 0x3D0DE60
	0x03D0DE58 LDR V0, [X31 + 0xC]
	0x03D0DE5C B 0x3D0DE74
	0x03D0DE60 ADRP X8, 0x456000
	0x03D0DE64 LDR X8, [X8 + 0xA60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6DB000
	007 Move X22, 0x457000
	008 Move W8, [X21+2189]
	009 Move X22, [X22+2536]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x457000
	017 Move X0, [X0+2536]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2189], W8
	021 Move X2, [X22]
	022 Move X0, X20
	023 Move X1, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call 0x21B1E48, X0, X1
	030 Return 

Method: System.Void OnPointerMoveEvent(UnityEngine.UIElements.PointerMoveEvent evt)

Disassembly:
	0x03D0DE68 MOV X0, X19
	0x03D0DE6C LDR X1, [X8]
	0x03D0DE70 BL 0x28A109C
	0x03D0DE74 LDP X20, X19, [X31 + 0x20]
	0x03D0DE78 LDP X30, X21, [X31 + 0x10]
	0x03D0DE7C ADD X31, X31, 0x30
	0x03D0DE80 RET
	0x03D0DE84 BL 0x1C16F20
	0x03D0DE88 MOVZ W2, 0x3E8
	0x03D0DE8C MOV X1, X31
	0x03D0DE90 B 0x3D0DE94
	0x03D0DE94 STP X30, X25, [X31 - 0x40]!
	0x03D0DE98 STP X24, X23, [X31 + 0x10]
	0x03D0DE9C STP X22, X21, [X31 + 0x20]
	0x03D0DEA0 STP X20, X19, [X31 + 0x30]
	0x03D0DEA4 ADRP X22, 0x6DA000
	0x03D0DEA8 ADRP X25, 0x456000
	0x03D0DEAC ADRP X24, 0x456000
	0x03D0DEB0 ADRP X23, 0x456000
	0x03D0DEB4 LDRB W8, [X22 + 0x89C]
	0x03D0DEB8 LDR X25, [X25 + 0xA48]
	0x03D0DEBC LDR X24, [X24 + 0xA70]
	0x03D0DEC0 LDR X23, [X23 + 0xA78]
	0x03D0DEC4 MOV W20, W2
	0x03D0DEC8 MOV X21, X1
	0x03D0DECC MOV X19, X0
	0x03D0DED0 TBNZ X8, 0x0, 0x3D0DF24
	0x03D0DED4 ADRP X0, 0x456000
	0x03D0DED8 LDR X0, [X0 + 0xA80]
	0x03D0DEDC BL 0x1C16CF4
	0x03D0DEE0 ADRP X0, 0x456000
	0x03D0DEE4 LDR X0, [X0 + 0xA88]
	0x03D0DEE8 BL 0x1C16CF4
	0x03D0DEEC ADRP X0, 0x456000
	0x03D0DEF0 LDR X0, [X0 + 0xA78]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6DB000
	006 Move W8, [X21+2190]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x457000
	014 Move X0, [X0+2544]
	015 Call 0x1C17CF4
	016 Move X0, 0x412000
	017 Move X0, [X0+184]
	018 Call 0x1C17CF4
	019 Move X0, 0x412000
	020 Move X0, [X0+192]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2190], W8
	024 Compare X19, 0
	025 JumpIfEqual {50}
	026 Move W8, [X19+172]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move W8, [X19+176]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {39}
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 
	039 Move X8, 0x457000
	040 Move X8, [X8+2544]
	041 Move X0, X20
	042 Move X1, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X2, [X8]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call 0x21B1E48, X0, X1
	049 Return 
	050 Call 0x1C17F20

Method: System.Boolean ContainsPointer(System.Int32 pointerId)

Disassembly:
	0x03D0DEF4 BL 0x1C16CF4
	0x03D0DEF8 ADRP X0, 0x456000
	0x03D0DEFC LDR X0, [X0 + 0xA48]
	0x03D0DF00 BL 0x1C16CF4
	0x03D0DF04 ADRP X0, 0x456000
	0x03D0DF08 LDR X0, [X0 + 0xA90]
	0x03D0DF0C BL 0x1C16CF4
	0x03D0DF10 ADRP X0, 0x456000
	0x03D0DF14 LDR X0, [X0 + 0xA70]
	0x03D0DF18 BL 0x1C16CF4
	0x03D0DF1C MOVZ W8, 0x1
	0x03D0DF20 STRB W8, [X22 + 0x89C]
	0x03D0DF24 LDR X0, [X25]
	0x03D0DF28 BL 0x1C16F10
	0x03D0DF2C MOV X22, X0
	0x03D0DF30 BL 0x3D0DFE4
	0x03D0DF34 LDR X4, [X24]
	0x03D0DF38 MOV X0, X19
	0x03D0DF3C MOV X1, X21
	0x03D0DF40 MOV W2, W20
	0x03D0DF44 MOV X3, X22
	0x03D0DF48 BL 0x26E90E0
	0x03D0DF4C LDR X0, [X23]
	0x03D0DF50 LDR W8, [X0 + 0xE0]
	0x03D0DF54 CBNZ W8, 0x3D0DF60
	0x03D0DF58 BL 0x1C16DFC
	0x03D0DF5C LDR X0, [X23]
	0x03D0DF60 LDR X8, [X0 + 0xB8]
	0x03D0DF64 MOV X0, X19
	0x03D0DF68 MOV X2, X31
	0x03D0DF6C LDR X1, [X8]
	0x03D0DF70 BL 0x3DF1C70
	0x03D0DF74 LDR X0, [X19 + 0x400]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6DB000
	006 Move W8, [X21+2191]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x457000
	014 Move X0, [X0+2424]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2191], W8
	018 Move X0, [X19+928]
	019 Compare X0, 0
	020 JumpIfEqual {39}
	021 Move W1, W20
	022 Move X2, X31
	023 Call BaseVisualElementPanel.GetTopElementUnderPointer, X0, X1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, 0x457000
	026 Move X8, [X8+2424]
	027 Move X20, X0
	028 Move X0, X19
	029 Move X1, [X8]
	030 Call BaseField`1<Object>.get_visualInput, X0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move W0, 1
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Call 0x1C17F20

Method: System.Void ProcessPointerDown(UnityEngine.UIElements.PointerEventBase`1<T> evt)

Disassembly:
	0x021B1E48 LDRSW X9, [X10]
	0x021B1E4C ADD X8, X8, X9, 0x4, LSL
	0x021B1E50 ADD X0, X8, 0x138
	0x021B1E54 LDP X8, X1, [X0]
	0x021B1E58 MOV X0, X19
	0x021B1E5C BLR X8
	0x021B1E60 MOV X19, X0
	0x021B1E64 CBZ X0, 0x21B207C
	0x021B1E68 ADRP X28, 0x1F42000
	0x021B1E6C LDR X28, [X28 + 0xE18]
	0x021B1E70 LDR X8, [X19]
	0x021B1E74 LDR X1, [X28]
	0x021B1E78 LDRH W9, [X8 + 0x12E]
	0x021B1E7C CBZ X9, 0x21B1EA0
	0x021B1E80 LDR X10, [X8 + 0xB0]
	0x021B1E84 ADD X10, X10, 0x8
	0x021B1E88 LDUR X11, [X10 - 0x8]
	0x021B1E8C CMP X11, X1
	0x021B1E90 B.EQ 0x21B1EB0
	0x021B1E94 SUBS X9, X9, 0x1
	0x021B1E98 ADD X10, X10, 0x10
	0x021B1E9C B.NE 0x21B1E88
	0x021B1EA0 MOV X0, X19
	0x021B1EA4 MOV W2, W31
	0x021B1EA8 BL 0x1C5C788
	0x021B1EAC B 0x21B1EBC
	0x021B1EB0 LDRSW X9, [X10]
	0x021B1EB4 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X2
	010 Call 0x1C5D6E0
	011 Compare X19, 0
	012 JumpIfEqual {38}
	013 Move W8, [X19+172]
	014 Compare W8, 0
	015 JumpIfNotEqual {34}
	016 Move W1, [X19+156]
	017 Move X0, X20
	018 Move X2, X31
	019 Call EnumField.ContainsPointer, X0, X1
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {34}
	024 Move X0, X20
	025 Move X1, X31
	026 Call EnumField.ShowMenu, X0
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Call EventBase.StopPropagation, X0
	033 Return 
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return 
	038 Call 0x1C17F20

Method: System.Void OnNavigationSubmit(UnityEngine.UIElements.NavigationSubmitEvent evt)

Disassembly:
	0x03D0DF78 CBZ X0, 0x3D0DFE0
	0x03D0DF7C LDR X8, [X23]
	0x03D0DF80 ADRP X20, 0x456000
	0x03D0DF84 MOV X2, X31
	0x03D0DF88 LDR X8, [X8 + 0xB8]
	0x03D0DF8C LDR X1, [X8 + 0x8]
	0x03D0DF90 LDR X20, [X20 + 0xA88]
	0x03D0DF94 BL 0x3DF1C70
	0x03D0DF98 LDR X1, [X20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X1
	004 Call EnumField.ShowMenu, X0
	005 Compare X19, 0
	006 JumpIfEqual {13}
	007 Move X0, X19
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call EventBase.StopPropagation, X0
	012 Return 
	013 Call 0x1C17F20

Method: System.Void ShowMenu()

Disassembly:
	0x03D0DF9C MOV X0, X19
	0x03D0DFA0 BL 0x28A0F80
	0x03D0DFA4 CBZ X0, 0x3D0DFE0
	0x03D0DFA8 LDR X8, [X23]
	0x03D0DFAC ADRP X20, 0x456000
	0x03D0DFB0 MOV X2, X31
	0x03D0DFB4 LDR X8, [X8 + 0xB8]
	0x03D0DFB8 LDR X1, [X8 + 0x10]
	0x03D0DFBC LDR X20, [X20 + 0xA90]
	0x03D0DFC0 BL 0x3DF1C70
	0x03D0DFC4 LDR X1, [X20]
	0x03D0DFC8 MOV X0, X19
	0x03D0DFCC LDP X20, X19, [X31 + 0x30]
	0x03D0DFD0 LDP X22, X21, [X31 + 0x20]
	0x03D0DFD4 LDP X24, X23, [X31 + 0x10]
	0x03D0DFD8 LDP X30, X25, [X31], #0x40
	0x03D0DFDC B 0x213CA4C
	0x03D0DFE0 BL 0x1C16F20
	0x03D0DFE4 STR X30, [X31 - 0x30]!
	0x03D0DFE8 STP X22, X21, [X31 + 0x10]
	0x03D0DFEC STP X20, X19, [X31 + 0x20]
	0x03D0DFF0 ADRP X21, 0x6DA000
	0x03D0DFF4 ADRP X22, 0x456000
	0x03D0DFF8 ADRP X20, 0x452000
	0x03D0DFFC LDRB W8, [X21 + 0x8A1]
	0x03D0E000 LDR X22, [X22 + 0xA98]
	0x03D0E004 B 0x3EB19F4
	0x03D0E008 MOV X19, X0
	0x03D0E00C TBNZ X8, 0x0, 0x3D0E03C
	0x03D0E010 ADRP X0, 0x455000
	0x03D0E014 LDR X0, [X0 + 0xA98]
	0x03D0E018 BL 0x1C16CF4
	0x03D0E01C ADRP X0, 0x455000
	0x03D0E020 LDR X0, [X0 + 0xAA0]
	0x03D0E024 BL 0x1C16CF4
	0x03D0E028 ADRP X0, 0x451000
	0x03D0E02C LDR X0, [X0 + 0x7A8]
	0x03D0E030 BL 0x1C16CF4
	0x03D0E034 MOVZ W8, 0x1
	0x03D0E038 STRB W8, [X21 + 0x8A1]
	0x03D0E03C LDR X1, [X22]
	0x03D0E040 MOV X0, X19
	0x03D0E044 BL 0x26ECD4C
	0x03D0E048 LDR X0, [X20]
	0x03D0E04C LDR W8, [X0 + 0xE0]
	0x03D0E050 CBNZ W8, 0x3D0E05C
	0x03D0E054 BL 0x1C16DFC
	0x03D0E058 LDR X0, [X20]
	0x03D0E05C LDR X8, [X0 + 0xB8]
	0x03D0E060 LDP X22, X21, [X31 + 0x10]
	0x03D0E064 LDR X8, [X8 + 0x18]
	0x03D0E068 STR X8, [X19 + 0x400]
	0x03D0E06C LDP X20, X19, [X31 + 0x20]
	0x03D0E070 LDR X30, [X31], #0x30
	0x03D0E074 RET
	0x03D0E078 STR X30, [X31 - 0x10]!
	0x03D0E07C MOV X0, X1
	0x03D0E080 ADD X1, X31, 0xC
	0x03D0E084 MOV X2, X31
	0x03D0E088 STR W31, [X31 + 0xC]
	0x03D0E08C BL 0x3390350
	0x03D0E090 AND W0, W0, 0x1
	0x03D0E094 LDR X30, [X31], #0x10
	0x03D0E098 RET
	0x03D0E09C STP D11, D10, [X31 - 0x30]!
	0x03D0E0A0 STP D9, D8, [X31 + 0x10]
	0x03D0E0A4 STP X30, X19, [X31 + 0x20]
	0x03D0E0A8 MOV V8.16B, V3.16B
	0x03D0E0AC MOV W19, W1
	0x03D0E0B0 MOV V9.16B, V2.16B
	0x03D0E0B4 MOV V10.16B, V1.16B
	0x03D0E0B8 MOV V11.16B, V0.16B
	0x03D0E0BC BL 0x3D0DC70
	0x03D0E0C0 CBZ X0, 0x3D0E0F4
	0x03D0E0C4 LDR X8, [X0]
	0x03D0E0C8 MOV V2.16B, V9.16B
	0x03D0E0CC MOV W1, W19
	0x03D0E0D0 MOV V3.16B, V8.16B
	0x03D0E0D4 LDR X3, [X8 + 0x7C8]
	0x03D0E0D8 LDR X2, [X8 + 0x7D0]
	0x03D0E0DC LDP X30, X19, [X31 + 0x20]
	0x03D0E0E0 LDP D9, D8, [X31 + 0x10]
	0x03D0E0E4 MOV V0.16B, V11.16B
	0x03D0E0E8 MOV V1.16B, V10.16B
	0x03D0E0EC LDP D11, D10, [X31], #0x30
	0x03D0E0F0 BR X3
	0x03D0E0F4 BL 0x1C16F20
	0x03D0E0F8 STP X30, X23, [X31 - 0x30]!
	0x03D0E0FC STP X22, X21, [X31 + 0x10]
	0x03D0E100 STP X20, X19, [X31 + 0x20]
	0x03D0E104 ADRP X23, 0x6D9000
	0x03D0E108 ADRP X22, 0x455000
	0x03D0E10C ADRP X19, 0x455000
	0x03D0E110 ADRP X21, 0x40E000
	0x03D0E114 ADRP X20, 0x40E000
	0x03D0E118 LDRB W8, [X23 + 0x89D]
	0x03D0E11C LDR X22, [X22 + 0xAA8]
	0x03D0E120 LDR X19, [X19 + 0xA78]
	0x03D0E124 LDR X21, [X21 + 0xEB8]
	0x03D0E128 LDR X20, [X20 + 0xEC0]
	0x03D0E12C TBNZ X8, 0x0, 0x3D0E168
	0x03D0E130 ADRP X0, 0x455000
	0x03D0E134 LDR X0, [X0 + 0xA78]
	0x03D0E138 BL 0x1C16CF4
	0x03D0E13C ADRP X0, 0x455000
	0x03D0E140 LDR X0, [X0 + 0xAA8]
	0x03D0E144 BL 0x1C16CF4
	0x03D0E148 ADRP X0, 0x40E000
	0x03D0E14C LDR X0, [X0 + 0xEB8]
	0x03D0E150 BL 0x1C16CF4
	0x03D0E154 ADRP X0, 0x40E000
	0x03D0E158 LDR X0, [X0 + 0xEC0]
	0x03D0E15C BL 0x1C16CF4
	0x03D0E160 MOVZ W8, 0x1
	0x03D0E164 STRB W8, [X23 + 0x89D]
	0x03D0E168 LDR X8, [X19]
	0x03D0E16C LDR X9, [X22]
	0x03D0E170 MOV X2, X31
	0x03D0E174 LDR X8, [X8 + 0xB8]
	0x03D0E178 STR X9, [X8]
	0x03D0E17C LDR X8, [X19]
	0x03D0E180 LDR X1, [X21]
	0x03D0E184 LDR X8, [X8 + 0xB8]
	0x03D0E188 LDR X0, [X8]
	0x03D0E18C BL 0x321B938
	0x03D0E190 LDR X8, [X19]
	0x03D0E194 MOV X2, X31
	0x03D0E198 LDR X8, [X8 + 0xB8]
	0x03D0E19C STR X0, [X8 + 0x8]
	0x03D0E1A0 LDR X0, [X8]
	0x03D0E1A4 LDR X1, [X20]
	0x03D0E1A8 BL 0x321B938
	0x03D0E1AC LDR X8, [X19]
	0x03D0E1B0 LDP X20, X19, [X31 + 0x20]
	0x03D0E1B4 LDP X22, X21, [X31 + 0x10]
	0x03D0E1B8 LDR X8, [X8 + 0xB8]
	0x03D0E1BC STR X0, [X8 + 0x10]
	0x03D0E1C0 LDP X30, X23, [X31], #0x30
	0x03D0E1C4 RET
	0x03D0E1C8 STP X30, X21, [X31 - 0x20]!
	0x03D0E1CC STP X20, X19, [X31 + 0x10]
	0x03D0E1D0 ADRP X20, 0x6D9000
	0x03D0E1D4 ADRP X21, 0x455000
	0x03D0E1D8 LDRB W8, [X20 + 0x89E]
	0x03D0E1DC LDR X21, [X21 + 0xAB0]
	0x03D0E1E0 MOV X19, X0
	0x03D0E1E4 TBNZ X8, 0x0, 0x3D0E1FC
	0x03D0E1E8 ADRP X0, 0x455000
	0x03D0E1EC LDR X0, [X0 + 0xAB0]
	0x03D0E1F0 BL 0x1C16CF4
	0x03D0E1F4 MOVZ W8, 0x1
	0x03D0E1F8 STRB W8, [X20 + 0x89E]
	0x03D0E1FC LDR X1, [X21]
	0x03D0E200 MOV X0, X19
	0x03D0E204 LDP X20, X19, [X31 + 0x10]
	0x03D0E208 LDP X30, X21, [X31], #0x20
	0x03D0E20C B 0x2736468
	0x03D0E210 STP X30, X21, [X31 - 0x20]!
	0x03D0E214 STP X20, X19, [X31 + 0x10]
	0x03D0E218 ADRP X20, 0x6D9000
	0x03D0E21C ADRP X21, 0x455000
	0x03D0E220 LDRB W8, [X20 + 0x89F]
	0x03D0E224 LDR X21, [X21 + 0xAB8]
	0x03D0E228 MOV X19, X0
	0x03D0E22C TBNZ X8, 0x0, 0x3D0E244
	0x03D0E230 ADRP X0, 0x455000
	0x03D0E234 LDR X0, [X0 + 0xAB8]
	0x03D0E238 BL 0x1C16CF4
	0x03D0E23C MOVZ W8, 0x1
	0x03D0E240 STRB W8, [X20 + 0x89F]
	0x03D0E244 LDR X1, [X21]
	0x03D0E248 MOV X0, X19
	0x03D0E24C LDP X20, X19, [X31 + 0x10]
	0x03D0E250 LDP X30, X21, [X31], #0x20
	0x03D0E254 B 0x26E68C0
	0x03D0E258 STR X30, [X31 - 0x20]!
	0x03D0E25C STP X20, X19, [X31 + 0x10]
	0x03D0E260 ADRP X20, 0x6D9000
	0x03D0E264 LDRB W8, [X20 + 0x8A0]
	0x03D0E268 MOV X19, X0
	0x03D0E26C TBNZ X8, 0x0, 0x3D0E284
	0x03D0E270 ADRP X0, 0x455000
	0x03D0E274 LDR X0, [X0 + 0xA78]
	0x03D0E278 BL 0x1C16CF4
	0x03D0E27C MOVZ W8, 0x1
	0x03D0E280 STRB W8, [X20 + 0x8A0]
	0x03D0E284 MOV X0, X19
	0x03D0E288 MOV X1, X31
	0x03D0E28C BL 0x3DEBF58
	0x03D0E290 CBZ X0, 0x3D0E2C8
	0x03D0E294 ADRP X9, 0x455000
	0x03D0E298 LDR X9, [X9 + 0xA78]
	0x03D0E29C LDR X8, [X0]
	0x03D0E2A0 LDR X1, [X9]
	0x03D0E2A4 LDRB W10, [X8 + 0x130]
	0x03D0E2A8 LDRB W9, [X1 + 0x130]
	0x03D0E2AC CMP W10, W9
	0x03D0E2B0 B.CC 0x3D0E2D4
	0x03D0E2B4 LDR X8, [X8 + 0xC8]
	0x03D0E2B8 ADD X8, X8, X9, 0x3, LSL
	0x03D0E2BC LDUR X8, [X8 - 0x8]
	0x03D0E2C0 CMP X8, X1
	0x03D0E2C4 B.NE 0x3D0E2D4
	0x03D0E2C8 LDP X20, X19, [X31 + 0x10]
	0x03D0E2CC LDR X30, [X31], #0x20
	0x03D0E2D0 RET
	0x03D0E2D4 BL 0x1C171E0
	0x03D0E2D8 STR X30, [X31 - 0x20]!
	0x03D0E2DC STP X20, X19, [X31 + 0x10]
	0x03D0E2E0 ADRP X20, 0x6D9000
	0x03D0E2E4 ADRP X19, 0x451000

ISIL:
	001 Move [X31-128], D11
	002 Move [X31-120], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X21, 0x6DB000
	017 Move X20, 0x3E7000
	018 Move W8, [X21+2192]
	019 Move X20, [X20+1728]
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {48}
	025 Move X0, 0x411000
	026 Move X0, [X0+3656]
	027 Call 0x1C17CF4
	028 Move X0, 0x457000
	029 Move X0, [X0+2520]
	030 Call 0x1C17CF4
	031 Move X0, 0x457000
	032 Move X0, [X0+2424]
	033 Call 0x1C17CF4
	034 Move X0, 0x457000
	035 Move X0, [X0+2552]
	036 Call 0x1C17CF4
	037 Move X0, 0x411000
	038 Move X0, [X0+200]
	039 Call 0x1C17CF4
	040 Move X0, 0x40F000
	041 Move X0, [X0+3744]
	042 Call 0x1C17CF4
	043 Move X0, 0x3E6000
	044 Move X0, [X0+1728]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+2192], W8
	048 Move X0, [X20]
	049 Move X20, [X19+1088]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X20
	055 Move X1, X31
	056 Move X2, X31
	057 Call Type.op_Equality, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {78}
	062 Move X20, [X31+112]
	063 Move X19, [X31+120]
	064 Move X22, [X31+96]
	065 Move X21, [X31+104]
	066 Move X24, [X31+80]
	067 Move X23, [X31+88]
	068 Move X26, [X31+64]
	069 Move X25, [X31+72]
	070 Move X28, [X31+48]
	071 Move X27, [X31+56]
	072 Move X30, [X31+32]
	073 Move D9, [X31+16]
	074 Move D8, [X31+24]
	075 Move D11, [X31+128]
	076 Move D10, [X31+136]
	077 Return 
	078 Move X22, 0x456000
	079 Move X8, [X19+1184]
	080 Move X22, [X22+2520]
	081 Compare X8, 0
	082 JumpIfEqual {87}
	083 Move X9, [X8+24]
	084 Move X0, [X8+64]
	085 Move X1, [X8+40]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X0, [X19+928]
	088 Compare X0, 0
	089 JumpIfEqual {96}
	090 Move X8, [X0]
	091 Move X9, [X8+1016]
	092 Move X1, [X8+1024]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Compare W0, 0
	095 JumpIfEqual {234}
	096 Move X0, X31
	097 Call DropdownUtility.CreateDropdown
	098 Move X20, X0
	099 Move X8, [X19]
	100 Move X21, [X19+1120]
	101 Move X0, X19
	102 Move X9, [X8+2024]
	103 Move X1, [X8+2032]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X2, [X22]
	106 Move X1, X0
	107 Move X0, X21
	108 Call Array.IndexOf, X0, X1
	109 Move X8, [X19+1120]
	110 Compare X8, 0
	111 JumpIfEqual {240}
	112 Move X27, 0x410000
	113 Move X28, 0x456000
	114 Move X24, 0x40F000
	115 Move X27, [X27+3656]
	116 Move X28, [X28+2552]
	117 Move X24, [X24+3744]
	118 Move X25, X31
	119 Move W26, W0
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X8, [X19+1136]
	123 Compare X8, 0
	124 JumpIfEqual {240}
	125 Move W9, [X8+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Add X8, X8, X25
	128 Move X0, [X27]
	129 Move X21, [X8+32]
	130 Call 0x1C17F10
	131 Move X2, [X28]
	132 Move X1, X19
	133 Move X3, X31
	134 Move X22, X0
	135 Call Action`1<Object>..ctor, X0, X1, X2
	136 Move X9, [X19+1120]
	137 Compare X9, 0
	138 JumpIfEqual {240}
	139 Move W8, [X9+24]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Compare X20, 0
	142 JumpIfEqual {240}
	143 Move X8, [X20]
	144 Add X9, X9, X25
	145 Move X23, [X9+32]
	146 Move X1, [X24]
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move W2, 1
	157 Move X0, X20
	158 Call 0x1C5D788
	159 Move W9, [X10]
	160 Add W9, W9, 1
	161 Add X8, X8, W9
	162 Add X0, X8, 312
	163 Move X8, [X0]
	164 Move X5, [X0+8]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 NotImplemented "Instruction CSET not yet implemented."
	167 Move X0, X20
	168 Move X1, X21
	169 Move X3, X22
	170 Move X4, X23
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X8, [X19+1120]
	173 Add X25, X25, 1
	174 Compare X8, 0
	175 JumpIfNotEqual {120}
	176 Move X8, 0x456000
	177 Move X8, [X8+2424]
	178 Move X0, X19
	179 Move X1, [X8]
	180 Call BaseField`1<Object>.get_visualInput, X0
	181 Compare X0, 0
	182 JumpIfEqual {240}
	183 Move X1, X31
	184 Call VisualElement.get_worldBound, X0
	185 Compare X20, 0
	186 JumpIfEqual {240}
	187 Move X8, [X20]
	188 Move X1, [X24]
	189 Move V8, V0
	190 Move V9, V1
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move V10, V2
	193 Move V11, V3
	194 Compare X9, 0
	195 JumpIfEqual {202}
	196 Move X10, [X8+176]
	197 Add X10, X10, 8
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Subtract X9, X9, 1
	201 Add X10, X10, 16
	202 Move W2, 2
	203 Move X0, X20
	204 Call 0x1C5D788
	205 Move W9, [X10]
	206 Add W9, W9, 2
	207 Add X8, X8, W9
	208 Add X0, X8, 312
	209 Move X4, [X0]
	210 Move X3, [X0+8]
	211 Move X0, X20
	212 Move V0, V8
	213 Move V1, V9
	214 Move X1, X19
	215 Move X20, [X31+112]
	216 Move X19, [X31+120]
	217 Move X22, [X31+96]
	218 Move X21, [X31+104]
	219 Move X24, [X31+80]
	220 Move X23, [X31+88]
	221 Move X26, [X31+64]
	222 Move X25, [X31+72]
	223 Move X28, [X31+48]
	224 Move X27, [X31+56]
	225 Move X30, [X31+32]
	226 Move D9, [X31+16]
	227 Move D8, [X31+24]
	228 Move W2, 1
	229 Move V2, V10
	230 Move V3, V11
	231 Move D11, [X31+128]
	232 Move D10, [X31+136]
	233 CallNoReturn X4
	234 Move X8, 0x411000
	235 Move X8, [X8+200]
	236 Move X0, [X8]
	237 Call 0x1C17F10
	238 Move X20, X0
	239 Call GenericDropdownMenu..ctor, X0
	240 Call 0x1C17F20
	241 Call 0x1C17F28

Method: System.Void ChangeValueFromMenu(System.Object menuItem)

Disassembly:
	0x03D0E5D0 LDR X0, [X0 + 0x3E0]
	0x03D0E5D4 RET
	0x03D0E5D8 STP X30, X21, [X31 - 0x20]!
	0x03D0E5DC STP X20, X19, [X31 + 0x10]
	0x03D0E5E0 ADRP X21, 0x6D9000
	0x03D0E5E4 LDRB W8, [X21 + 0x8A6]
	0x03D0E5E8 MOV X20, X1
	0x03D0E5EC MOV X19, X0
	0x03D0E5F0 TBNZ X8, 0x0, 0x3D0E62C
	0x03D0E5F4 ADRP X0, 0x454000
	0x03D0E5F8 LDR X0, [X0 + 0xC80]
	0x03D0E5FC BL 0x1C16CF4
	0x03D0E600 ADRP X0, 0x454000
	0x03D0E604 LDR X0, [X0 + 0xC88]
	0x03D0E608 BL 0x1C16CF4
	0x03D0E60C ADRP X0, 0x454000
	0x03D0E610 LDR X0, [X0 + 0xB80]
	0x03D0E614 BL 0x1C16CF4
	0x03D0E618 ADRP X0, 0x40E000
	0x03D0E61C LDR X0, [X0 + 0x830]
	0x03D0E620 BL 0x1C16CF4
	0x03D0E624 MOVZ W8, 0x1
	0x03D0E628 STRB W8, [X21 + 0x8A6]
	0x03D0E62C LDR X0, [X19 + 0x3D8]
	0x03D0E630 CBZ X0, 0x3D0E6FC
	0x03D0E634 MOV X1, X20
	0x03D0E638 MOV X2, X31
	0x03D0E63C BL 0x3CF9818
	0x03D0E640 LDR X0, [X19 + 0x3D8]
	0x03D0E644 CBZ X0, 0x3D0E6FC
	0x03D0E648 ADRP X8, 0x454000
	0x03D0E64C LDR X8, [X8 + 0xC80]
	0x03D0E650 ADRP X21, 0x454000
	0x03D0E654 ADRP X20, 0x40E000
	0x03D0E658 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6DA000
	006 Move W8, [X21+2193]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3E6000
	014 Move X0, [X0+3576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2193], W8
	018 Compare X20, 0
	019 JumpIfEqual {27}
	020 Move X8, 0x3E6000
	021 Move X8, [X8+3576]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X1, X31
	028 Move X9, [X9+200]
	029 Add X9, X9, X10
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move X8, [X19]
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X3, [X8+2040]
	038 Move X2, [X8+2048]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 CallNoReturn X3

Method: System.Void UpdateMixedValueContent()

Disassembly:
	0x03D0E65C LDR X21, [X21 + 0xB80]
	0x03D0E660 LDR X20, [X20 + 0x830]
	0x03D0E664 BL 0x2772DDC
	0x03D0E668 LDR X8, [X21]
	0x03D0E66C MOV X19, X0
	0x03D0E670 LDR W9, [X8 + 0xE0]
	0x03D0E674 CBNZ W9, 0x3D0E684
	0x03D0E678 MOV X0, X8
	0x03D0E67C BL 0x1C16DFC
	0x03D0E680 LDR X8, [X21]
	0x03D0E684 LDR X0, [X20]
	0x03D0E688 LDR X8, [X8 + 0xB8]
	0x03D0E68C LDR W9, [X0 + 0xE0]
	0x03D0E690 LDR X20, [X8 + 0x28]
	0x03D0E694 CBNZ W9, 0x3D0E69C
	0x03D0E698 BL 0x1C16DFC
	0x03D0E69C MOV X0, X19
	0x03D0E6A0 MOV X1, X31
	0x03D0E6A4 MOV X2, X20
	0x03D0E6A8 MOV X3, X31
	0x03D0E6AC BL 0x3E19D90
	0x03D0E6B0 CBZ X0, 0x3D0E6F0
	0x03D0E6B4 ADRP X20, 0x454000
	0x03D0E6B8 LDR X20, [X20 + 0xC88]
	0x03D0E6BC MOV X19, X0
	0x03D0E6C0 LDR X0, [X20]
	0x03D0E6C4 LDR W8, [X0 + 0xE0]
	0x03D0E6C8 CBNZ W8, 0x3D0E6D4
	0x03D0E6CC BL 0x1C16DFC
	0x03D0E6D0 LDR X0, [X20]
	0x03D0E6D4 LDR X8, [X0 + 0xB8]
	0x03D0E6D8 MOV X0, X19
	0x03D0E6DC LDP X20, X19, [X31 + 0x10]
	0x03D0E6E0 MOV X2, X31
	0x03D0E6E4 LDR X1, [X8 + 0x28]
	0x03D0E6E8 LDP X30, X21, [X31], #0x20
	0x03D0E6EC B 0x3DF1C70
	0x03D0E6F0 LDP X20, X19, [X31 + 0x10]
	0x03D0E6F4 LDP X30, X21, [X31], #0x20
	0x03D0E6F8 RET
	0x03D0E6FC BL 0x1C16F20
	0x03D0E700 LDRB W0, [X0 + 0x3E8]
	0x03D0E704 RET
	0x03D0E708 STR X30, [X31 - 0x30]!
	0x03D0E70C STP X22, X21, [X31 + 0x10]
	0x03D0E710 STP X20, X19, [X31 + 0x20]
	0x03D0E714 ADRP X19, 0x6D9000
	0x03D0E718 LDRB W8, [X19 + 0x8A7]
	0x03D0E71C MOV W21, W1
	0x03D0E720 MOV X20, X0
	0x03D0E724 TBNZ X8, 0x0, 0x3D0E754
	0x03D0E728 ADRP X0, 0x455000
	0x03D0E72C LDR X0, [X0 + 0xAE0]
	0x03D0E730 BL 0x1C16CF4
	0x03D0E734 ADRP X0, 0x455000
	0x03D0E738 LDR X0, [X0 + 0xAE8]
	0x03D0E73C BL 0x1C16CF4
	0x03D0E740 ADRP X0, 0x3E5000
	0x03D0E744 LDR X0, [X0 + 0xE00]
	0x03D0E748 BL 0x1C16CF4
	0x03D0E74C MOVZ W8, 0x1
	0x03D0E750 STRB W8, [X19 + 0x8A7]
	0x03D0E754 LDRB W19, [X20 + 0x3E8]
	0x03D0E758 AND W8, W21, 0x1
	0x03D0E75C CMP W19, W8
	0x03D0E760 B.EQ 0x3D0E844
	0x03D0E764 ADRP X8, 0x455000
	0x03D0E768 LDR X8, [X8 + 0xAE8]
	0x03D0E76C ADRP X22, 0x455000
	0x03D0E770 LDR X0, [X8]
	0x03D0E774 LDR W8, [X0 + 0xE0]
	0x03D0E778 LDR X22, [X22 + 0xAE0]
	0x03D0E77C CBNZ W8, 0x3D0E784
	0x03D0E780 BL 0x1C16DFC
	0x03D0E784 LDR X2, [X22]
	0x03D0E788 CMP W19, 0x0
	0x03D0E78C CSET W0, NE

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x6DA000
	007 Move W8, [X20+2194]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x456000
	014 Move X0, [X0+2592]
	015 Call 0x1C17CF4
	016 Move X0, 0x456000
	017 Move X0, [X0+2432]
	018 Call 0x1C17CF4
	019 Move X0, 0x456000
	020 Move X0, [X0+2416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2194], W8
	024 Move X21, 0x456000
	025 Move W8, [X19+1032]
	026 Move X21, [X21+2432]
	027 Compare W8, 0
	028 JumpIfEqual {45}
	029 Move X0, [X21]
	030 Move X20, [X19+1104]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Compare X20, 0
	036 JumpIfEqual {91}
	037 Move X8, [X21]
	038 Move X9, [X20]
	039 Move X0, X20
	040 Move X8, [X8+184]
	041 Move X10, [X9+2856]
	042 Move X2, [X9+2864]
	043 Move X1, [X8+64]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X8, [X19]
	046 Move X0, X19
	047 Move X9, [X8+2024]
	048 Move X1, [X8+2032]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X1, X0
	051 Move X0, X19
	052 Call EnumField.UpdateValueLabel, X0, X1
	053 Move X22, 0x456000
	054 Move X22, [X22+2416]
	055 Move X20, [X19+1104]
	056 Move X0, [X22]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Compare X20, 0
	062 JumpIfEqual {91}
	063 Move X8, [X22]
	064 Move W2, [X19+1032]
	065 Move X0, X20
	066 Move X3, X31
	067 Move X8, [X8+184]
	068 Move X1, [X8+24]
	069 Call VisualElement.EnableInClassList, X0, X1, X2
	070 Move X0, [X21]
	071 Move X20, [X19+1104]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Compare X20, 0
	077 JumpIfEqual {91}
	078 Move X8, [X21]
	079 Move W2, [X19+1032]
	080 Move X0, X20
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X8, [X8+184]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X3, X31
	087 Move X1, [X8+40]
	088 Move X30, [X31+48]
	089 Call VisualElement.EnableInClassList, X0, X1, X2
	090 Return 
	091 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D0E790 AND W1, W21, 0x1
	0x03D0E794 BL 0x28F2FFC
	0x03D0E798 MOV X19, X0
	0x03D0E79C CBZ X0, 0x3D0E854
	0x03D0E7A0 MOV X0, X19
	0x03D0E7A4 MOV X1, X20
	0x03D0E7A8 MOV X2, X31
	0x03D0E7AC BL 0x3D9C6C8
	0x03D0E7B0 AND W1, W21, 0x1
	0x03D0E7B4 MOV X0, X20
	0x03D0E7B8 BL 0x3D0E914
	0x03D0E7BC LDR X8, [X20]
	0x03D0E7C0 LDP X9, X2, [X8 + 0x198]
	0x03D0E7C4 MOV X0, X20
	0x03D0E7C8 MOV X1, X19
	0x03D0E7CC BLR X9
	0x03D0E7D0 MOV X0, X20
	0x03D0E7D4 MOV X1, X31
	0x03D0E7D8 BL 0x3DF276C
	0x03D0E7DC MOV X20, X31
	0x03D0E7E0 ADRP X10, 0x3E5000
	0x03D0E7E4 LDR X8, [X19]
	0x03D0E7E8 LDR X10, [X10 + 0xE00]
	0x03D0E7EC LDRH W9, [X8 + 0x12E]
	0x03D0E7F0 LDR X1, [X10]
	0x03D0E7F4 CBZ X9, 0x3D0E818
	0x03D0E7F8 LDR X10, [X8 + 0xB0]
	0x03D0E7FC ADD X10, X10, 0x8
	0x03D0E800 LDUR X11, [X10 - 0x8]
	0x03D0E804 CMP X11, X1
	0x03D0E808 B.EQ 0x3D0E828
	0x03D0E80C SUBS X9, X9, 0x1
	0x03D0E810 ADD X10, X10, 0x10
	0x03D0E814 B.NE 0x3D0E800
	0x03D0E818 MOV X0, X19
	0x03D0E81C MOV W2, W31
	0x03D0E820 BL 0x1C5C788
	0x03D0E824 B 0x3D0E834
	0x03D0E828 LDRSW X9, [X10]
	0x03D0E82C ADD X8, X8, X9, 0x4, LSL
	0x03D0E830 ADD X0, X8, 0x138
	0x03D0E834 LDP X8, X1, [X0]
	0x03D0E838 MOV X0, X19
	0x03D0E83C BLR X8
	0x03D0E840 CBNZ X20, 0x3D0E858
	0x03D0E844 LDP X20, X19, [X31 + 0x20]
	0x03D0E848 LDP X22, X21, [X31 + 0x10]
	0x03D0E84C LDR X30, [X31], #0x30
	0x03D0E850 RET
	0x03D0E854 BL 0x1C16F20
	0x03D0E858 MOV X0, X20
	0x03D0E85C BL 0x1C16F18
	0x03D0E860 B 0x3D0E868
	0x03D0E864 B 0x3D0E868
	0x03D0E868 MOV X21, X0
	0x03D0E86C CMP W1, 0x1
	0x03D0E870 B.NE 0x3D0E88C
	0x03D0E874 MOV X0, X21
	0x03D0E878 BL 0x3EB1AD0
	0x03D0E87C LDR X20, [X0]
	0x03D0E880 BL 0x3EB1AE0
	0x03D0E884 CBNZ X19, 0x3D0E7E0
	0x03D0E888 B 0x3D0E840
	0x03D0E88C MOV X20, X31
	0x03D0E890 B 0x3D0E898
	0x03D0E894 MOV X21, X0
	0x03D0E898 CBZ X19, 0x3D0E8FC
	0x03D0E89C ADRP X10, 0x3E5000
	0x03D0E8A0 LDR X8, [X19]
	0x03D0E8A4 LDR X10, [X10 + 0xE00]
	0x03D0E8A8 LDRH W9, [X8 + 0x12E]
	0x03D0E8AC LDR X1, [X10]
	0x03D0E8B0 CBZ X9, 0x3D0E8D4
	0x03D0E8B4 LDR X10, [X8 + 0xB0]
	0x03D0E8B8 ADD X10, X10, 0x8
	0x03D0E8BC LDUR X11, [X10 - 0x8]
	0x03D0E8C0 CMP X11, X1
	0x03D0E8C4 B.EQ 0x3D0E8E4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x6DA000
	010 Move X24, 0x456000
	011 Move X19, 0x456000
	012 Move X23, 0x411000
	013 Move X22, 0x411000
	014 Move X21, 0x40F000
	015 Move X20, 0x40F000
	016 Move X24, [X24+2600]
	017 Move W8, [X25+2195]
	018 Move X19, [X19+2416]
	019 Move X23, [X23+216]
	020 Move X22, [X22+224]
	021 Move X21, [X21+3768]
	022 Move X20, [X20+3776]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {47}
	027 Move X0, 0x456000
	028 Move X0, [X0+2416]
	029 Call 0x1C17CF4
	030 Move X0, 0x456000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0x411000
	034 Move X0, [X0+216]
	035 Call 0x1C17CF4
	036 Move X0, 0x40F000
	037 Move X0, [X0+3768]
	038 Call 0x1C17CF4
	039 Move X0, 0x411000
	040 Move X0, [X0+224]
	041 Call 0x1C17CF4
	042 Move X0, 0x40F000
	043 Move X0, [X0+3776]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X25+2195], W8
	047 Move X8, [X19]
	048 Move X9, [X24]
	049 Move X2, X31
	050 Move X8, [X8+184]
	051 Move [X8], X9
	052 Move X8, [X19]
	053 Move X1, [X23]
	054 Move X8, [X8+184]
	055 Move X0, [X8]
	056 Call String.Concat, X0, X1
	057 Move X8, [X19]
	058 Move X2, X31
	059 Move X8, [X8+184]
	060 Move [X8+8], X0
	061 Move X0, [X8]
	062 Move X1, [X22]
	063 Call String.Concat, X0, X1
	064 Move X8, [X19]
	065 Move X2, X31
	066 Move X8, [X8+184]
	067 Move [X8+16], X0
	068 Move X0, [X8]
	069 Move X1, [X21]
	070 Call String.Concat, X0, X1
	071 Move X8, [X19]
	072 Move X2, X31
	073 Move X8, [X8+184]
	074 Move [X8+24], X0
	075 Move X0, [X8]
	076 Move X1, [X20]
	077 Call String.Concat, X0, X1
	078 Move X8, [X19]
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move X8, [X8+184]
	086 Move [X8+32], X0
	087 Move X30, [X31+64]
	088 Move X25, [X31+72]
	089 Return 

Method: System.Void <ShowMenu>b__33_0(System.Object contentView)

Disassembly:
	0x03D0E8C8 SUBS X9, X9, 0x1

ISIL:
	001 Call EnumField.ChangeValueFromMenu, X0, X1
	002 Return 

