Type: UnityEngine.UIElements.StyleCursor

Method: UnityEngine.UIElements.Cursor get_value()

Disassembly:
	0x03DFF36C MOV X0, X19
	0x03DFF370 BL 0x1C16DEC
	0x03DFF374 LDR W0, [X0 + 0x10]
	0x03DFF378 RET
	0x03DFF37C STR W1, [X0 + 0x10]
	0x03DFF380 STP X31, X31, [X0]
	0x03DFF384 RET
	0x03DFF388 STR W3, [X0 + 0x10]
	0x03DFF38C STP X1, X2, [X0]
	0x03DFF390 RET
	0x03DFF394 LDR W8, [X0 + 0x10]
	0x03DFF398 LDR W9, [X1 + 0x10]
	0x03DFF39C CMP W8, W9
	0x03DFF3A0 B.NE 0x3DFF3FC
	0x03DFF3A4 LDR V0, [X0]
	0x03DFF3A8 LDR V1, [X1]

ISIL:
	001 Subtract X31, X31, 32
	002 Move W9, [X0+24]
	003 Compare W9, 0
	004 JumpIfEqual {8}
	005 Move [X31], X31
	006 Move [X31+8], X31
	007 Move [X31+16], X31
	008 Move X9, [X0+16]
	009 Move V0, [X0]
	010 Move [X31+16], X9
	011 Move [X31], V0
	012 Move X9, [X31+16]
	013 Move V0, [X31]
	014 Move [X8+16], X9
	015 Move [X8], V0
	016 Add X31, X31, 32
	017 Return X0

Method: UnityEngine.UIElements.StyleKeyword get_keyword()

Disassembly:
	0x03DFF3AC FMOV X8, D0
	0x03DFF3B0 FMOV X9, D1

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void .ctor(UnityEngine.UIElements.StyleKeyword keyword)

Disassembly:
	0x03DFF3B4 UBFM X8, X8, 0x20, 0x3F
	0x03DFF3B8 UBFM X9, X9, 0x20, 0x3F
	0x03DFF3BC UNIMPLEMENTED
	0x03DFF3C0 UNIMPLEMENTED

ISIL:
	001 Move [X0+24], W1
	002 Move [X0+8], X31
	003 Move [X0+16], X31
	004 Move [X0], X31
	005 Return 

Method: System.Void .ctor(UnityEngine.UIElements.Cursor v, UnityEngine.UIElements.StyleKeyword keyword)

Disassembly:
	0x03DFF3C4 FMOV S1, W8
	0x03DFF3C8 ADRP X8, 0xFFFFFFFFFCCEA000
	0x03DFF3CC FMOV S3, W9
	0x03DFF3D0 FSUB S1, S1, S3
	0x03DFF3D4 LDR V3, [X8 + 0xF20]
	0x03DFF3D8 FSUB V0.2S, V2.2S, V0.2S

ISIL:
	001 Move [X0+24], W2
	002 Move X8, [X1+16]
	003 Move V0, [X1]
	004 Move [X0+16], X8
	005 Move [X0], V0
	006 Return 

Method: System.Boolean op_Equality(UnityEngine.UIElements.StyleCursor lhs, UnityEngine.UIElements.StyleCursor rhs)

Disassembly:
	0x03DFF3DC FMUL S1, S1, S1
	0x00000000 INVALID
	0x03DFF3E4 FADD S1, S0, S1
	0x03DFF3E8 MOV S0, V0.S[1]
	0x03DFF3EC FADD S0, S0, S1
	0x03DFF3F0 FCMP S0, S3
	0x03DFF3F4 CSET W0, MI
	0x03DFF3F8 RET
	0x03DFF3FC MOV W0, W31
	0x03DFF400 RET
	0x03DFF404 STP X31, X31, [X8]
	0x03DFF408 STR W0, [X8 + 0x10]
	0x03DFF40C RET
	0x03DFF410 LDR W8, [X1 + 0x10]
	0x03DFF414 LDR W9, [X0 + 0x10]
	0x03DFF418 CMP W8, W9
	0x03DFF41C B.NE 0x3DFF47C
	0x03DFF420 LDR X8, [X1]
	0x03DFF424 LDR X9, [X0]
	0x03DFF428 LDR V0, [X1 + 0x8]
	0x03DFF42C LDR V1, [X0 + 0x8]
	0x03DFF430 ADRP X10, 0xFFFFFFFFFCCEA000
	0x03DFF434 LDR V2, [X10 + 0xF20]
	0x03DFF438 UBFM X10, X8, 0x20, 0x3F

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move W8, [X0+24]
	004 Move W9, [X1+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X8, [X0+16]
	007 Move V0, [X0]
	008 Add X0, X31, 32
	009 Move X2, X31
	010 Move [X31+48], X8
	011 Move [X31+2], V0
	012 Move X8, [X1+16]
	013 Move V0, [X1]
	014 Add X1, X31, 0
	015 Move [X31+16], X8
	016 Move [X31], V0
	017 Call Cursor.op_Equality, X0, X1
	018 Move W0, W31
	019 Move X30, [X31+64]
	020 And W0, W0, 1
	021 Add X31, X31, 80
	022 Return X0

Method: UnityEngine.UIElements.StyleCursor op_Implicit(UnityEngine.UIElements.StyleKeyword keyword)

Disassembly:
	0x03DFF43C FMOV S3, W8
	0x03DFF440 UBFM X8, X9, 0x20, 0x3F
	0x03DFF444 FMOV S4, W9
	0x03DFF448 FSUB S3, S3, S4

ISIL:
	001 Move [X8], X31
	002 Move [X8+8], X31
	003 Move [X8+16], X31
	004 Move [X8+24], W0
	005 Move [X8+28], W31
	006 Return X0

Method: System.Boolean Equals(UnityEngine.UIElements.StyleCursor other)

Disassembly:
	0x03DFF44C FSUB S0, S0, S1
	0x03DFF450 FMOV S1, W10
	0x03DFF454 FMOV S4, W8
	0x03DFF458 FSUB S1, S1, S4
	0x03DFF45C FMUL S3, S3, S3
	0x03DFF460 FMUL S1, S1, S1
	0x03DFF464 FADD S1, S3, S1
	0x03DFF468 FMUL S0, S0, S0
	0x03DFF46C FADD S0, S1, S0
	0x03DFF470 FCMP S0, S2
	0x03DFF474 CSET W0, MI
	0x03DFF478 RET
	0x03DFF47C MOV W0, W31
	0x03DFF480 RET
	0x03DFF484 STP X30, X21, [X31 - 0x20]!
	0x03DFF488 STP X20, X19, [X31 + 0x10]
	0x03DFF48C ADRP X21, 0x5E9000
	0x03DFF490 LDRB W8, [X21 + 0x2D1]
	0x03DFF494 MOV X20, X1
	0x03DFF498 MOV X19, X0
	0x03DFF49C TBNZ X8, 0x0, 0x3DFF4B4
	0x03DFF4A0 ADRP X0, 0x36A000
	0x03DFF4A4 LDR X0, [X0 + 0xDB0]
	0x03DFF4A8 BL 0x1C16CF4
	0x03DFF4AC MOVZ W8, 0x1
	0x03DFF4B0 STRB W8, [X21 + 0x2D1]
	0x03DFF4B4 CBZ X20, 0x3DFF544
	0x03DFF4B8 ADRP X8, 0x36A000
	0x03DFF4BC LDR X8, [X8 + 0xDB0]
	0x03DFF4C0 LDR X9, [X20]
	0x03DFF4C4 LDR X8, [X8]
	0x03DFF4C8 CMP X9, X8

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+128], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Move [X31+48], X8
	006 Move [X31+2], V0
	007 Move X8, [X0+16]
	008 Move V0, [X0]
	009 Move W9, [X1+24]
	010 Move [X31+16], X8
	011 Move [X31], V0
	012 Move W8, [X0+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move V0, [X31+2]
	015 Move X8, [X31+48]
	016 Move V1, [X31]
	017 Move X9, [X31+16]
	018 Add X0, X31, 96
	019 Add X1, X31, 64
	020 Move X2, X31
	021 Move [X31+6], V0
	022 Move [X31+112], X8
	023 Move [X31+4], V1
	024 Move [X31+80], X9
	025 Call Cursor.op_Equality, X0, X1
	026 Move W0, W31
	027 Move X30, [X31+128]
	028 And W0, W0, 1
	029 Add X31, X31, 144
	030 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03DFF4CC B.NE 0x3DFF544
	0x03DFF4D0 MOV X0, X20
	0x03DFF4D4 BL 0x1C16E08
	0x03DFF4D8 LDR W8, [X0 + 0x10]
	0x03DFF4DC LDR W9, [X19 + 0x10]
	0x03DFF4E0 CMP W8, W9
	0x03DFF4E4 B.NE 0x3DFF544
	0x03DFF4E8 LDR X8, [X0]
	0x03DFF4EC LDR X9, [X19]
	0x03DFF4F0 LDR V0, [X0 + 0x8]
	0x03DFF4F4 LDR V1, [X19 + 0x8]
	0x03DFF4F8 ADRP X10, 0xFFFFFFFFFCCEA000
	0x03DFF4FC LDR V2, [X10 + 0xF20]
	0x03DFF500 UBFM X10, X8, 0x20, 0x3F
	0x03DFF504 FMOV S3, W8
	0x03DFF508 UBFM X8, X9, 0x20, 0x3F
	0x03DFF50C FMOV S4, W9
	0x03DFF510 FSUB S3, S3, S4
	0x03DFF514 FSUB S0, S0, S1
	0x03DFF518 FMOV S1, W10
	0x03DFF51C FMOV S4, W8
	0x03DFF520 FSUB S1, S1, S4
	0x03DFF524 FMUL S3, S3, S3
	0x03DFF528 FMUL S1, S1, S1
	0x03DFF52C FADD S1, S3, S1
	0x03DFF530 FMUL S0, S0, S0
	0x03DFF534 FADD S0, S1, S0
	0x03DFF538 FCMP S0, S2
	0x03DFF53C CSET W0, MI
	0x03DFF540 B 0x3DFF548
	0x03DFF544 MOV W0, W31
	0x03DFF548 LDP X20, X19, [X31 + 0x10]
	0x03DFF54C LDP X30, X21, [X31], #0x20
	0x03DFF550 RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x5EA000
	007 Move W8, [X21+706]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x36B000
	015 Move X0, [X0+3384]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+706], W8
	019 Compare X20, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x36B000
	022 Move X8, [X8+3384]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X0, X20
	028 Call 0x1C17E08
	029 Move V0, [X0]
	030 Move V1, [X0+16]
	031 Add X1, X31, 0
	032 Move X0, X19
	033 Move [X31], V0
	034 Move [X31+8], V1
	035 Call StyleCursor.Equals, X0, X1
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 And W0, W0, 1
	041 Add X31, X31, 64
	042 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03DFF554 STP X30, X19, [X31 - 0x10]!
	0x03DFF558 MOV X19, X0
	0x03DFF55C BL 0x3DFC190
	0x03DFF560 LDR W8, [X19 + 0x10]
	0x03DFF564 MOVZ W9, 0x18D
	0x03DFF568 MUL W9, W0, W9
	0x03DFF56C EOR W0, W9, W8, 0x0
	0x03DFF570 LDP X30, X19, [X31], #0x10
	0x03DFF574 RET
	0x03DFF578 SUB X31, X31, 0x50

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Cursor.GetHashCode, X0
	006 Move W8, [X19+24]
	007 Move W9, 397
	008 Multiply W9, W0, W9
	009 Xor W0, W9, W8
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0

Method: System.String ToString()

Disassembly:
	0x03DFF57C STR X30, [X31 + 0x20]
	0x03DFF580 STP X22, X21, [X31 + 0x30]
	0x03DFF584 STP X20, X19, [X31 + 0x40]
	0x03DFF588 ADRP X22, 0x5E9000
	0x03DFF58C ADRP X21, 0x36A000
	0x03DFF590 ADRP X20, 0x36A000
	0x03DFF594 LDRB W8, [X22 + 0x2D2]
	0x03DFF598 LDR X21, [X21 + 0xDB0]
	0x03DFF59C LDR X20, [X20 + 0xDB8]
	0x03DFF5A0 MOV X19, X0
	0x03DFF5A4 TBNZ X8, 0x0, 0x3DFF5C8
	0x03DFF5A8 ADRP X0, 0x36A000
	0x03DFF5AC LDR X0, [X0 + 0xDB0]
	0x03DFF5B0 BL 0x1C16CF4
	0x03DFF5B4 ADRP X0, 0x36A000
	0x03DFF5B8 LDR X0, [X0 + 0xDB8]
	0x03DFF5BC BL 0x1C16CF4
	0x03DFF5C0 MOVZ W8, 0x1
	0x03DFF5C4 STRB W8, [X22 + 0x2D2]
	0x03DFF5C8 LDR W8, [X19 + 0x10]
	0x03DFF5CC LDR V0, [X19]
	0x03DFF5D0 LDR X0, [X21]
	0x03DFF5D4 ADD X1, X31, 0x0
	0x03DFF5D8 STR W8, [X31 + 0x10]
	0x03DFF5DC STR V0, [X31]
	0x03DFF5E0 BL 0x1C16E04
	0x03DFF5E4 LDR X1, [X20]
	0x03DFF5E8 BL 0x2296054
	0x03DFF5EC LDP X20, X19, [X31 + 0x40]
	0x03DFF5F0 LDP X22, X21, [X31 + 0x30]
	0x03DFF5F4 LDR X30, [X31 + 0x20]
	0x03DFF5F8 ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0x5EA000
	008 Move X21, 0x36B000
	009 Move X20, 0x36B000
	010 Move W8, [X22+707]
	011 Move X21, [X21+3384]
	012 Move X20, [X20+3392]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x36B000
	019 Move X0, [X0+3384]
	020 Call 0x1C17CF4
	021 Move X0, 0x36B000
	022 Move X0, [X0+3392]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+707], W8
	026 Move V1, [X19]
	027 Move V0, [X19+16]
	028 Move X0, [X21]
	029 Add X1, X31, 0
	030 Move [X31], V1
	031 Move [X31+8], V0
	032 Call 0x1C17E04
	033 Move X1, [X20]
	034 Call StyleValueExtensions.DebugString, X0
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X22, [X31+48]
	038 Move X21, [X31+56]
	039 Move X30, [X31+32]
	040 Add X31, X31, 80
	041 Return X0

