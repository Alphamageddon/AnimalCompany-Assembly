Type: UnityEngine.UIElements.InputEvent

Method: System.Void .cctor()

Disassembly:
	0x03DA3C40 LDRSW X9, [X10]
	0x03DA3C44 ADD X8, X8, X9, 0x4, LSL
	0x03DA3C48 ADD X0, X8, 0x138
	0x03DA3C4C LDP X8, X1, [X0]
	0x03DA3C50 MOV X0, X20
	0x03DA3C54 BLR X8
	0x03DA3C58 CBZ X21, 0x3DA3DAC
	0x03DA3C5C MOV X0, X21
	0x03DA3C60 BL 0x1C16F18
	0x03DA3C64 B 0x3DA3C70
	0x03DA3C68 B 0x3DA3C70
	0x03DA3C6C B 0x3DA3C70
	0x03DA3C70 MOV X19, X0
	0x03DA3C74 CMP W1, 0x1
	0x03DA3C78 B.NE 0x3DA3C90
	0x03DA3C7C MOV X0, X19
	0x03DA3C80 BL 0x3EB1AD0
	0x03DA3C84 LDR X21, [X0]
	0x03DA3C88 BL 0x3EB1AE0
	0x03DA3C8C B 0x3DA3844
	0x03DA3C90 MOV X21, X31
	0x03DA3C94 B 0x3DA3C9C
	0x03DA3C98 MOV X19, X0
	0x03DA3C9C CBZ X20, 0x3DA3D00
	0x03DA3CA0 ADRP X10, 0x350000
	0x03DA3CA4 LDR X8, [X20]
	0x03DA3CA8 LDR X10, [X10 + 0xE00]
	0x03DA3CAC LDRH W9, [X8 + 0x12E]
	0x03DA3CB0 LDR X1, [X10]
	0x03DA3CB4 CBZ X9, 0x3DA3CD8
	0x03DA3CB8 LDR X10, [X8 + 0xB0]
	0x03DA3CBC ADD X10, X10, 0x8
	0x03DA3CC0 LDUR X11, [X10 - 0x8]
	0x03DA3CC4 CMP X11, X1
	0x03DA3CC8 B.EQ 0x3DA3CE8
	0x03DA3CCC SUBS X9, X9, 0x1
	0x03DA3CD0 ADD X10, X10, 0x10
	0x03DA3CD4 B.NE 0x3DA3CC0
	0x03DA3CD8 MOV X0, X20
	0x03DA3CDC MOV W2, W31
	0x03DA3CE0 BL 0x1C5C788
	0x03DA3CE4 B 0x3DA3CF4
	0x03DA3CE8 LDRSW X9, [X10]
	0x03DA3CEC ADD X8, X8, X9, 0x4, LSL
	0x03DA3CF0 ADD X0, X8, 0x138
	0x03DA3CF4 LDP X8, X1, [X0]
	0x03DA3CF8 MOV X0, X20
	0x03DA3CFC BLR X8
	0x03DA3D00 CBZ X21, 0x3DA3DAC
	0x03DA3D04 MOV X0, X21
	0x03DA3D08 BL 0x1C16F18
	0x03DA3D0C B 0x3DA3D18
	0x03DA3D10 B 0x3DA3D18
	0x03DA3D14 B 0x3DA3D18
	0x03DA3D18 MOV X19, X0
	0x03DA3D1C CMP W1, 0x1
	0x03DA3D20 B.NE 0x3DA3D38

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x645000
	008 Move X19, 0x3C6000
	009 Move W8, [X20+3828]
	010 Move X19, [X19+584]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x3C6000
	016 Move X0, [X0+592]
	017 Call 0x1C17CF4
	018 Move X0, 0x3C6000
	019 Move X0, [X0+600]
	020 Call 0x1C17CF4
	021 Move X0, 0x3C6000
	022 Move X0, [X0+608]
	023 Call 0x1C17CF4
	024 Move X0, 0x3C6000
	025 Move X0, [X0+616]
	026 Call 0x1C17CF4
	027 Move X0, 0x3C6000
	028 Move X0, [X0+584]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3828], W8
	032 Move X0, [X19]
	033 Move X22, 0x3C6000
	034 Move X23, 0x3C6000
	035 Move X21, 0x3C6000
	036 Move W8, [X0+224]
	037 Move X22, [X22+608]
	038 Move X23, [X23+616]
	039 Move X21, [X21+600]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X19]
	044 Move X8, [X0+184]
	045 Move X0, [X22]
	046 Move X22, 0x3C6000
	047 Move X20, [X8]
	048 Move X22, [X22+592]
	049 Call 0x1C17F10
	050 Move X2, [X23]
	051 Move X1, X20
	052 Move X3, X31
	053 Move X19, X0
	054 Call Func`1<Object>..ctor, X0, X1, X2
	055 Move X0, [X21]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X1, [X22]
	061 Move X0, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Call 0x2D0E4C0, X0
	069 Return 

Method: System.Void set_previousData(System.String value)

Disassembly:
	0x03DA3D24 MOV X0, X19
	0x03DA3D28 BL 0x3EB1AD0

ISIL:
	001 Move [X0+136], X1
	002 Return 

Method: System.Void set_newData(System.String value)

Disassembly:
	0x03DA3D2C LDR X21, [X0]
	0x03DA3D30 BL 0x3EB1AE0

ISIL:
	001 Move [X0+144], X1
	002 Return 

Method: System.Void Init()

Disassembly:
	0x03DA3D34 B 0x3DA36A8
	0x03DA3D38 MOV X21, X31
	0x03DA3D3C B 0x3DA3D44
	0x03DA3D40 MOV X19, X0
	0x03DA3D44 CBZ X20, 0x3DA3DA8
	0x03DA3D48 ADRP X10, 0x350000
	0x03DA3D4C LDR X8, [X20]
	0x03DA3D50 LDR X10, [X10 + 0xE00]
	0x03DA3D54 LDRH W9, [X8 + 0x12E]
	0x03DA3D58 LDR X1, [X10]
	0x03DA3D5C CBZ X9, 0x3DA3D80
	0x03DA3D60 LDR X10, [X8 + 0xB0]
	0x03DA3D64 ADD X10, X10, 0x8
	0x03DA3D68 LDUR X11, [X10 - 0x8]
	0x03DA3D6C CMP X11, X1
	0x03DA3D70 B.EQ 0x3DA3D90
	0x03DA3D74 SUBS X9, X9, 0x1
	0x03DA3D78 ADD X10, X10, 0x10
	0x03DA3D7C B.NE 0x3DA3D68
	0x03DA3D80 MOV X0, X20
	0x03DA3D84 MOV W2, W31
	0x03DA3D88 BL 0x1C5C788

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x645000
	006 Move X21, 0x3C6000
	007 Move W8, [X20+3829]
	008 Move X21, [X21+624]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3C6000
	015 Move X0, [X0+624]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3829], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x2D0E634, X0
	022 Move W8, 3
	023 Move [X19+48], W8
	024 Move [X19+136], X31
	025 Move [X19+144], X31
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 

Method: System.Void LocalInit()

Disassembly:
	0x03DA3D8C B 0x3DA3D9C
	0x03DA3D90 LDRSW X9, [X10]
	0x03DA3D94 ADD X8, X8, X9, 0x4, LSL
	0x03DA3D98 ADD X0, X8, 0x138

ISIL:
	001 Move W8, 3
	002 Move [X0+48], W8
	003 Move [X0+136], X31
	004 Move [X0+144], X31
	005 Return 

Method: UnityEngine.UIElements.InputEvent GetPooled(System.String previousData, System.String newData)

Disassembly:
	0x03DA3D9C LDP X8, X1, [X0]
	0x03DA3DA0 MOV X0, X20
	0x03DA3DA4 BLR X8
	0x03DA3DA8 CBNZ X21, 0x3DA3DB4
	0x03DA3DAC MOV X0, X19
	0x03DA3DB0 BL 0x1D2C690
	0x03DA3DB4 MOV X0, X21
	0x03DA3DB8 BL 0x1C16F18
	0x03DA3DBC BL 0x1990590
	0x03DA3DC0 STR X30, [X31 - 0x20]!
	0x03DA3DC4 STP X20, X19, [X31 + 0x10]
	0x03DA3DC8 ADRP X20, 0x644000
	0x03DA3DCC LDRB W8, [X20 + 0xF03]
	0x03DA3DD0 MOV X19, X0
	0x03DA3DD4 TBNZ X8, 0x0, 0x3DA3E1C
	0x03DA3DD8 ADRP X0, 0x3C0000
	0x03DA3DDC LDR X0, [X0 + 0xF0]
	0x03DA3DE0 BL 0x1C16CF4
	0x03DA3DE4 ADRP X0, 0x3C5000
	0x03DA3DE8 LDR X0, [X0 + 0x2B8]
	0x03DA3DEC BL 0x1C16CF4
	0x03DA3DF0 ADRP X0, 0x3C5000
	0x03DA3DF4 LDR X0, [X0 + 0x2C0]
	0x03DA3DF8 BL 0x1C16CF4
	0x03DA3DFC ADRP X0, 0x3C5000
	0x03DA3E00 LDR X0, [X0 + 0x2C8]
	0x03DA3E04 BL 0x1C16CF4
	0x03DA3E08 ADRP X0, 0x37B000
	0x03DA3E0C LDR X0, [X0 + 0x130]
	0x03DA3E10 BL 0x1C16CF4
	0x03DA3E14 MOVZ W8, 0x1
	0x03DA3E18 STRB W8, [X20 + 0xF03]
	0x03DA3E1C CBZ X19, 0x3DA3EA4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x645000
	007 Move X21, 0x3C6000
	008 Move W8, [X22+3830]
	009 Move X21, [X21+600]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x3C6000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move X0, 0x3C6000
	020 Move X0, [X0+600]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3830], W8
	024 Move X0, [X21]
	025 Move X21, 0x3C6000
	026 Move W8, [X0+224]
	027 Move X21, [X21+632]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, [X21]
	032 Call 0x2D0E6C4
	033 Compare X0, 0
	034 JumpIfEqual {43}
	035 Move [X0+136], X20
	036 Move [X0+144], X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return X0
	043 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03DA3E20 LDR W8, [X19 + 0x8C]
	0x03DA3E24 CMP W8, 0x9
	0x03DA3E28 B.NE 0x3DA3E74
	0x03DA3E2C ADRP X8, 0x3C5000
	0x03DA3E30 LDR X8, [X8 + 0x2C0]
	0x03DA3E34 MOV X0, X19
	0x03DA3E38 LDR X1, [X8]
	0x03DA3E3C BL 0x2EE6C24
	0x03DA3E40 TBNZ X0, 0x0, 0x3DA3E74
	0x03DA3E44 ADRP X8, 0x3C0000
	0x03DA3E48 LDR X8, [X8 + 0xF0]
	0x03DA3E4C MOV X0, X19
	0x03DA3E50 LDR X1, [X8]
	0x03DA3E54 BL 0x2EE6C3C
	0x03DA3E58 TBNZ X0, 0x0, 0x3DA3E74
	0x03DA3E5C ADRP X8, 0x3C5000
	0x03DA3E60 LDR X8, [X8 + 0x2B8]
	0x03DA3E64 MOV X0, X19
	0x03DA3E68 LDR X1, [X8]
	0x03DA3E6C BL 0x2EE6C30
	0x03DA3E70 TBZ X0, 0x0, 0x3DA3E88
	0x03DA3E74 MOV W8, W31
	0x03DA3E78 LDP X20, X19, [X31 + 0x10]
	0x03DA3E7C AND W0, W8, 0x1
	0x03DA3E80 LDR X30, [X31], #0x20
	0x03DA3E84 RET
	0x03DA3E88 ADRP X8, 0x3C5000
	0x03DA3E8C LDR X8, [X8 + 0x2C8]
	0x03DA3E90 MOV X0, X19
	0x03DA3E94 LDR X1, [X8]
	0x03DA3E98 BL 0x2EE6C48

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x645000
	006 Move X20, 0x3C6000
	007 Move W8, [X21+3831]
	008 Move X20, [X20+600]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x3C6000
	015 Move X0, [X0+640]
	016 Call 0x1C17CF4
	017 Move X0, 0x3C6000
	018 Move X0, [X0+600]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3831], W8
	022 Move X0, [X20]
	023 Move X20, 0x3C6000
	024 Move W8, [X0+224]
	025 Move X20, [X20+640]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X1, [X20]
	030 Move X0, X19
	031 Call 0x2D0E54C, X0
	032 Move W8, 3
	033 Move [X19+48], W8
	034 Move [X19+136], X31
	035 Move [X19+144], X31
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 

