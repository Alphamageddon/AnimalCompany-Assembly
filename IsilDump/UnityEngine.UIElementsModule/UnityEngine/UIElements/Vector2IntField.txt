Type: UnityEngine.UIElements.Vector2IntField

Method: UnityEngine.UIElements.BaseCompositeField`3/FieldDescription<UnityEngine.Vector2Int, UnityEngine.UIElements.IntegerField, System.Int32>[] DescribeFields()

Disassembly:
	0x03D0B270 BLR X9
	0x03D0B274 LDP X20, X19, [X31 + 0xD0]
	0x03D0B278 LDP X22, X21, [X31 + 0xC0]
	0x03D0B27C LDP X24, X23, [X31 + 0xB0]
	0x03D0B280 LDR X30, [X31 + 0xA0]
	0x03D0B284 ADD X31, X31, 0xE0
	0x03D0B288 RET
	0x03D0B28C BL 0x1C16F20
	0x03D0B290 MOV X0, X19
	0x03D0B294 BL 0x1C171E0
	0x03D0B298 STP X30, X21, [X31 - 0x20]!
	0x03D0B29C STP X20, X19, [X31 + 0x10]
	0x03D0B2A0 ADRP X20, 0x6DC000
	0x03D0B2A4 ADRP X21, 0x412000
	0x03D0B2A8 LDRB W8, [X20 + 0x872]
	0x03D0B2AC LDR X21, [X21 + 0xC08]
	0x03D0B2B0 MOV X19, X0
	0x03D0B2B4 TBNZ X8, 0x0, 0x3D0B2FC
	0x03D0B2B8 ADRP X0, 0x412000
	0x03D0B2BC LDR X0, [X0 + 0xC08]
	0x03D0B2C0 BL 0x1C16CF4
	0x03D0B2C4 ADRP X0, 0x458000
	0x03D0B2C8 LDR X0, [X0 + 0x860]
	0x03D0B2CC BL 0x1C16CF4
	0x03D0B2D0 ADRP X0, 0x410000
	0x03D0B2D4 LDR X0, [X0 + 0x780]
	0x03D0B2D8 BL 0x1C16CF4
	0x03D0B2DC ADRP X0, 0x410000
	0x03D0B2E0 LDR X0, [X0 + 0x788]
	0x03D0B2E4 BL 0x1C16CF4
	0x03D0B2E8 ADRP X0, 0x415000
	0x03D0B2EC LDR X0, [X0 + 0x3D0]
	0x03D0B2F0 BL 0x1C16CF4
	0x03D0B2F4 MOVZ W8, 0x1
	0x03D0B2F8 STRB W8, [X20 + 0x872]
	0x03D0B2FC LDR X0, [X21]
	0x03D0B300 BL 0x1C16F10
	0x03D0B304 MOV X1, X31
	0x03D0B308 MOV X20, X0
	0x03D0B30C BL 0x3E1BCA4
	0x03D0B310 CBZ X20, 0x3D0B39C
	0x03D0B314 ADRP X8, 0x410000
	0x03D0B318 LDR X8, [X8 + 0x780]
	0x03D0B31C LDR X8, [X8]
	0x03D0B320 STR X8, [X20 + 0x10]
	0x03D0B324 STR X20, [X19 + 0x80]
	0x03D0B328 LDR X0, [X21]
	0x03D0B32C BL 0x1C16F10
	0x03D0B330 MOV X1, X31
	0x03D0B334 MOV X20, X0
	0x03D0B338 BL 0x3E1BCA4
	0x03D0B33C CBZ X20, 0x3D0B39C
	0x03D0B340 ADRP X8, 0x410000
	0x03D0B344 LDR X8, [X8 + 0x788]
	0x03D0B348 LDR X8, [X8]
	0x03D0B34C STR X8, [X20 + 0x10]
	0x03D0B350 STR X20, [X19 + 0x88]
	0x03D0B354 LDR X0, [X21]
	0x03D0B358 BL 0x1C16F10
	0x03D0B35C MOV X1, X31
	0x03D0B360 MOV X20, X0
	0x03D0B364 BL 0x3E1BCA4
	0x03D0B368 CBZ X20, 0x3D0B39C
	0x03D0B36C ADRP X8, 0x415000
	0x03D0B370 LDR X8, [X8 + 0x3D0]
	0x03D0B374 ADRP X9, 0x458000
	0x03D0B378 MOV X0, X19
	0x03D0B37C LDR X8, [X8]
	0x03D0B380 LDR X9, [X9 + 0x860]
	0x03D0B384 STR X8, [X20 + 0x10]
	0x03D0B388 STR X20, [X19 + 0x90]
	0x03D0B38C LDR X1, [X9]
	0x03D0B390 LDP X20, X19, [X31 + 0x10]
	0x03D0B394 LDP X30, X21, [X31], #0x20
	0x03D0B398 B 0x273C654
	0x03D0B39C BL 0x1C16F20
	0x03D0B3A0 STR X30, [X31 - 0x20]!
	0x03D0B3A4 STP X20, X19, [X31 + 0x10]
	0x03D0B3A8 ADRP X19, 0x6DC000
	0x03D0B3AC ADRP X20, 0x458000
	0x03D0B3B0 LDRB W8, [X19 + 0x873]
	0x03D0B3B4 LDR X20, [X20 + 0x7F8]
	0x03D0B3B8 TBNZ X8, 0x0, 0x3D0B3D0
	0x03D0B3BC ADRP X0, 0x458000
	0x03D0B3C0 LDR X0, [X0 + 0x7F8]
	0x03D0B3C4 BL 0x1C16CF4
	0x03D0B3C8 MOVZ W8, 0x1
	0x03D0B3CC STRB W8, [X19 + 0x873]
	0x03D0B3D0 LDR X0, [X20]
	0x03D0B3D4 BL 0x1C16F10
	0x03D0B3D8 MOV X1, X31
	0x03D0B3DC MOV X19, X0
	0x03D0B3E0 BL 0x33BDD8C
	0x03D0B3E4 LDR X8, [X20]
	0x03D0B3E8 LDR X8, [X8 + 0xB8]
	0x03D0B3EC STR X19, [X8]
	0x03D0B3F0 LDP X20, X19, [X31 + 0x10]
	0x03D0B3F4 LDR X30, [X31], #0x20
	0x03D0B3F8 RET
	0x03D0B3FC MOV X1, X31
	0x03D0B400 B 0x33BDD8C
	0x03D0B404 MOV X0, X1
	0x03D0B408 RET
	0x03D0B40C STR W2, [X1]
	0x03D0B410 RET
	0x03D0B414 UBFM X0, X1, 0x20, 0x3F
	0x03D0B418 RET
	0x03D0B41C STR W2, [X1 + 0x4]
	0x03D0B420 RET
	0x03D0B424 MOV X0, X2
	0x03D0B428 RET
	0x03D0B42C STR W2, [X1 + 0x8]
	0x03D0B430 RET
	0x03D0B434 STR X30, [X31 - 0x20]!
	0x03D0B438 STP X20, X19, [X31 + 0x10]
	0x03D0B43C ADRP X20, 0x6DC000
	0x03D0B440 LDRB W8, [X20 + 0x874]
	0x03D0B444 MOV X19, X0
	0x03D0B448 TBNZ X8, 0x0, 0x3D0B46C
	0x03D0B44C ADRP X0, 0x458000
	0x03D0B450 LDR X0, [X0 + 0x868]
	0x03D0B454 BL 0x1C16CF4
	0x03D0B458 ADRP X0, 0x458000
	0x03D0B45C LDR X0, [X0 + 0x870]
	0x03D0B460 BL 0x1C16CF4
	0x03D0B464 MOVZ W8, 0x1
	0x03D0B468 STRB W8, [X20 + 0x874]
	0x03D0B46C LDR X0, [X19 + 0x448]
	0x03D0B470 CBZ X0, 0x3D0B4A8
	0x03D0B474 ADRP X9, 0x458000
	0x03D0B478 LDR X9, [X9 + 0x868]
	0x03D0B47C LDR X8, [X0]
	0x03D0B480 LDR X1, [X9]
	0x03D0B484 LDRB W10, [X8 + 0x130]
	0x03D0B488 LDRB W9, [X1 + 0x130]
	0x03D0B48C CMP W10, W9
	0x03D0B490 B.CC 0x3D0B4B4
	0x03D0B494 LDR X8, [X8 + 0xC8]
	0x03D0B498 ADD X8, X8, X9, 0x3, LSL
	0x03D0B49C LDUR X8, [X8 - 0x8]
	0x03D0B4A0 CMP X8, X1
	0x03D0B4A4 B.NE 0x3D0B4B4
	0x03D0B4A8 LDP X20, X19, [X31 + 0x10]
	0x03D0B4AC LDR X30, [X31], #0x20
	0x03D0B4B0 RET
	0x03D0B4B4 BL 0x1C171E0
	0x03D0B4B8 STR X30, [X31 - 0x30]!
	0x03D0B4BC STP X22, X21, [X31 + 0x10]
	0x03D0B4C0 STP X20, X19, [X31 + 0x20]
	0x03D0B4C4 ADRP X21, 0x6DC000
	0x03D0B4C8 STR D0, [X31 + 0x8]
	0x03D0B4CC ADRP X22, 0x458000
	0x03D0B4D0 ADRP X20, 0x3EA000
	0x03D0B4D4 LDRB W8, [X21 + 0x875]
	0x03D0B4D8 LDR X22, [X22 + 0x878]
	0x03D0B4DC LDR X20, [X20 + 0xC48]
	0x03D0B4E0 MOV X19, X0
	0x03D0B4E4 TBNZ X8, 0x0, 0x3D0B508
	0x03D0B4E8 ADRP X0, 0x3EA000
	0x03D0B4EC LDR X0, [X0 + 0xC48]
	0x03D0B4F0 BL 0x1C16CF4
	0x03D0B4F4 ADRP X0, 0x458000
	0x03D0B4F8 LDR X0, [X0 + 0x878]
	0x03D0B4FC BL 0x1C16CF4
	0x03D0B500 MOVZ W8, 0x1
	0x03D0B504 STRB W8, [X21 + 0x875]
	0x03D0B508 LDR X1, [X22]
	0x03D0B50C MOV X0, X19
	0x03D0B510 BL 0x26E705C
	0x03D0B514 LDR X8, [X20]
	0x03D0B518 MOV X19, X0
	0x03D0B51C LDR W9, [X8 + 0xE0]
	0x03D0B520 CBNZ W9, 0x3D0B52C
	0x03D0B524 MOV X0, X8
	0x03D0B528 BL 0x1C16DFC
	0x03D0B52C MOV X0, X31
	0x03D0B530 BL 0x3338524
	0x03D0B534 CBZ X0, 0x3D0B56C
	0x03D0B538 LDR X8, [X0]
	0x03D0B53C LDR X9, [X8 + 0x218]
	0x03D0B540 LDR X1, [X8 + 0x220]
	0x03D0B544 BLR X9
	0x03D0B548 MOV X2, X0
	0x03D0B54C ADD X0, X31, 0x8
	0x03D0B550 MOV X1, X19
	0x03D0B554 MOV X3, X31
	0x03D0B558 BL 0x336636C
	0x03D0B55C LDP X20, X19, [X31 + 0x20]
	0x03D0B560 LDP X22, X21, [X31 + 0x10]
	0x03D0B564 LDR X30, [X31], #0x30
	0x03D0B568 RET
	0x03D0B56C BL 0x1C16F20
	0x03D0B570 SUB X31, X31, 0x30
	0x03D0B574 STP X30, X21, [X31 + 0x10]
	0x03D0B578 STP X20, X19, [X31 + 0x20]
	0x03D0B57C ADRP X21, 0x6DC000
	0x03D0B580 LDRB W8, [X21 + 0x876]
	0x03D0B584 MOV X20, X1
	0x03D0B588 MOV X19, X0
	0x03D0B58C TBNZ X8, 0x0, 0x3D0B5C8
	0x03D0B590 ADRP X0, 0x458000
	0x03D0B594 LDR X0, [X0 + 0x880]
	0x03D0B598 BL 0x1C16CF4
	0x03D0B59C ADRP X0, 0x458000
	0x03D0B5A0 LDR X0, [X0 + 0x870]
	0x03D0B5A4 BL 0x1C16CF4
	0x03D0B5A8 ADRP X0, 0x458000
	0x03D0B5AC LDR X0, [X0 + 0x888]
	0x03D0B5B0 BL 0x1C16CF4
	0x03D0B5B4 ADRP X0, 0x454000
	0x03D0B5B8 LDR X0, [X0 + 0x7A8]
	0x03D0B5BC BL 0x1C16CF4
	0x03D0B5C0 MOVZ W8, 0x1
	0x03D0B5C4 STRB W8, [X21 + 0x876]
	0x03D0B5C8 STR X31, [X31 + 0x8]
	0x03D0B5CC LDR X0, [X19 + 0x448]
	0x03D0B5D0 CBZ X0, 0x3D0B648
	0x03D0B5D4 ADRP X8, 0x458000
	0x03D0B5D8 LDR X8, [X8 + 0x888]
	0x03D0B5DC ADRP X21, 0x454000
	0x03D0B5E0 LDR X1, [X8]
	0x03D0B5E4 LDR X21, [X21 + 0x7A8]
	0x03D0B5E8 BL 0x26B180C
	0x03D0B5EC LDR X8, [X21]
	0x03D0B5F0 MOV X21, X0
	0x03D0B5F4 LDR W9, [X8 + 0xE0]
	0x03D0B5F8 CBNZ W9, 0x3D0B604
	0x03D0B5FC MOV X0, X8

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+112], X26
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X20, 0x6DD000
	012 Move X19, 0x459000
	013 Move X25, 0x459000
	014 Move W8, [X20+2150]
	015 Move X19, [X19+1888]
	016 Move X25, [X25+1896]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {62}
	021 Move X0, 0x459000
	022 Move X0, [X0+1888]
	023 Call 0x1C17CF4
	024 Move X0, 0x459000
	025 Move X0, [X0+1904]
	026 Call 0x1C17CF4
	027 Move X0, 0x459000
	028 Move X0, [X0+1912]
	029 Call 0x1C17CF4
	030 Move X0, 0x459000
	031 Move X0, [X0+1920]
	032 Call 0x1C17CF4
	033 Move X0, 0x459000
	034 Move X0, [X0+1928]
	035 Call 0x1C17CF4
	036 Move X0, 0x459000
	037 Move X0, [X0+1936]
	038 Call 0x1C17CF4
	039 Move X0, 0x459000
	040 Move X0, [X0+1944]
	041 Call 0x1C17CF4
	042 Move X0, 0x459000
	043 Move X0, [X0+1896]
	044 Call 0x1C17CF4
	045 Move X0, 0x459000
	046 Move X0, [X0+1952]
	047 Call 0x1C17CF4
	048 Move X0, 0x459000
	049 Move X0, [X0+1168]
	050 Call 0x1C17CF4
	051 Move X0, 0x418000
	052 Move X0, [X0+4008]
	053 Call 0x1C17CF4
	054 Move X0, 0x410000
	055 Move X0, [X0+2312]
	056 Call 0x1C17CF4
	057 Move X0, 0x459000
	058 Move X0, [X0+1176]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X20+2150], W8
	062 Move X0, [X19]
	063 Move X20, 0x459000
	064 Move X21, 0x410000
	065 Move X20, [X20+1176]
	066 Move X21, [X21+2312]
	067 Move W1, 2
	068 Call 0x1C17D6C
	069 Move X8, [X25]
	070 Move X19, X0
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {77}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X8, [X25]
	077 Move X9, [X8+184]
	078 Move X20, [X20]
	079 Move X21, [X21]
	080 Move X22, [X9+8]
	081 Compare X22, 0
	082 JumpIfNotEqual {105}
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {89}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X8, [X25]
	089 Move X9, 0x459000
	090 Move X8, [X8+184]
	091 Move X9, [X9+1912]
	092 Move X23, [X8]
	093 Move X0, [X9]
	094 Call 0x1C17F10
	095 Move X8, 0x459000
	096 Move X8, [X8+1920]
	097 Move X1, X23
	098 Move X3, X31
	099 Move X22, X0
	100 Move X2, [X8]
	101 Call Func`2<Vector2Int, Int32>..ctor, X0, X1, X2
	102 Move X8, [X25]
	103 Move X9, [X8+184]
	104 Move [X9+8], X22
	105 Move W9, [X8+224]
	106 Compare W9, 0
	107 JumpIfNotEqual {111}
	108 Move X0, X8
	109 Call 0x1C17DFC
	110 Move X8, [X25]
	111 Move X9, [X8+184]
	112 Move X26, 0x459000
	113 Move X23, [X9+16]
	114 Move X26, [X26+1904]
	115 Compare X23, 0
	116 JumpIfNotEqual {139}
	117 Move W9, [X8+224]
	118 Compare W9, 0
	119 JumpIfNotEqual {123}
	120 Move X0, X8
	121 Call 0x1C17DFC
	122 Move X8, [X25]
	123 Move X9, 0x459000
	124 Move X8, [X8+184]
	125 Move X9, [X9+1952]
	126 Move X24, [X8]
	127 Move X0, [X9]
	128 Call 0x1C17F10
	129 Move X8, 0x459000
	130 Move X8, [X8+1928]
	131 Move X1, X24
	132 Move X3, X31
	133 Move X23, X0
	134 Move X2, [X8]
	135 Call WriteDelegate<Vector2Int, Object, Int32>..ctor, X0, X1, X2
	136 Move X8, [X25]
	137 Move X8, [X8+184]
	138 Move [X8+16], X23
	139 Move X5, [X26]
	140 NotImplemented "Instruction MOVI not yet implemented."
	141 Add X0, X31, 64
	142 Move X1, X21
	143 Move X2, X20
	144 Move X3, X22
	145 Move X4, X23
	146 Move [X31+64], V0
	147 Move [X31+72], V0
	148 Call FieldDescription<Vector2Int, Object, Int32>..ctor, X0, X1, X2, X3, X4
	149 Compare X19, 0
	150 JumpIfEqual {262}
	151 Move V0, [X31+64]
	152 Move V1, [X31+80]
	153 Move [X31+32], V0
	154 Move [X31+40], V1
	155 Move W8, [X19+24]
	156 Compare W8, 0
	157 JumpIfEqual {261}
	158 Move V1, [X31+32]
	159 Move V0, [X31+48]
	160 Move X20, 0x459000
	161 Move X21, 0x418000
	162 Move [X19+32], V1
	163 Move [X19+40], V0
	164 Move X0, [X25]
	165 Move W8, [X0+224]
	166 Move X20, [X20+1168]
	167 Move X21, [X21+4008]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X25]
	172 Move X8, [X0+184]
	173 Move X20, [X20]
	174 Move X21, [X21]
	175 Move X22, [X8+24]
	176 Compare X22, 0
	177 JumpIfNotEqual {199}
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {183}
	181 Call 0x1C17DFC
	182 Move X0, [X25]
	183 Move X9, 0x459000
	184 Move X8, [X0+184]
	185 Move X9, [X9+1912]
	186 Move X23, [X8]
	187 Move X0, [X9]
	188 Call 0x1C17F10
	189 Move X8, 0x459000
	190 Move X8, [X8+1936]
	191 Move X1, X23
	192 Move X3, X31
	193 Move X22, X0
	194 Move X2, [X8]
	195 Call Func`2<Vector2Int, Int32>..ctor, X0, X1, X2
	196 Move X0, [X25]
	197 Move X8, [X0+184]
	198 Move [X8+24], X22
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {204}
	202 Call 0x1C17DFC
	203 Move X0, [X25]
	204 Move X8, [X0+184]
	205 Move X23, [X8+32]
	206 Compare X23, 0
	207 JumpIfNotEqual {229}
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {213}
	211 Call 0x1C17DFC
	212 Move X0, [X25]
	213 Move X9, 0x459000
	214 Move X8, [X0+184]
	215 Move X9, [X9+1952]
	216 Move X24, [X8]
	217 Move X0, [X9]
	218 Call 0x1C17F10
	219 Move X8, 0x459000
	220 Move X8, [X8+1944]
	221 Move X1, X24
	222 Move X3, X31
	223 Move X23, X0
	224 Move X2, [X8]
	225 Call WriteDelegate<Vector2Int, Object, Int32>..ctor, X0, X1, X2
	226 Move X8, [X25]
	227 Move X8, [X8+184]
	228 Move [X8+32], X23
	229 Move X5, [X26]
	230 NotImplemented "Instruction MOVI not yet implemented."
	231 Add X0, X31, 64
	232 Move X1, X21
	233 Move X2, X20
	234 Move X3, X22
	235 Move X4, X23
	236 Move [X31+64], V0
	237 Move [X31+72], V0
	238 Call FieldDescription<Vector2Int, Object, Int32>..ctor, X0, X1, X2, X3, X4
	239 Move V1, [X31+64]
	240 Move V0, [X31+80]
	241 Move [X31], V1
	242 Move [X31+8], V0
	243 Move W8, [X19+24]
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move V1, [X31]
	246 Move V0, [X31+16]
	247 Move X0, X19
	248 Move X22, [X31+144]
	249 Move X21, [X31+152]
	250 Move X24, [X31+128]
	251 Move X23, [X31+136]
	252 Move [X19+64], V1
	253 Move [X19+72], V0
	254 Move X20, [X31+160]
	255 Move X19, [X31+168]
	256 Move X26, [X31+112]
	257 Move X25, [X31+120]
	258 Move X30, [X31+96]
	259 Add X31, X31, 176
	260 Return X0
	261 Call 0x1C17F28
	262 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03D0B600 BL 0x1C16DFC
	0x03D0B604 ADD X2, X31, 0x8

ISIL:
	001 Move X1, X31

Method: System.Void .ctor(System.String label)

Disassembly:
	0x03D0B608 MOV X0, X20
	0x03D0B60C MOV X1, X21
	0x03D0B610 MOV X3, X31
	0x03D0B614 BL 0x3C3D4A8
	0x03D0B618 TBZ X0, 0x0, 0x3D0B624
	0x03D0B61C LDR V0, [X31 + 0x8]
	0x03D0B620 B 0x3D0B638
	0x03D0B624 ADRP X8, 0x458000
	0x03D0B628 LDR X8, [X8 + 0x880]
	0x03D0B62C MOV X0, X19
	0x03D0B630 LDR X1, [X8]
	0x03D0B634 BL 0x277A484
	0x03D0B638 LDP X20, X19, [X31 + 0x20]
	0x03D0B63C LDP X30, X21, [X31 + 0x10]
	0x03D0B640 ADD X31, X31, 0x30
	0x03D0B644 RET
	0x03D0B648 BL 0x1C16F20
	0x03D0B64C MOVZ W2, 0x3E8
	0x03D0B650 MOV X1, X31
	0x03D0B654 B 0x3D0B658
	0x03D0B658 STP X30, X25, [X31 - 0x40]!
	0x03D0B65C STP X24, X23, [X31 + 0x10]
	0x03D0B660 STP X22, X21, [X31 + 0x20]
	0x03D0B664 STP X20, X19, [X31 + 0x30]
	0x03D0B668 ADRP X22, 0x6DC000
	0x03D0B66C ADRP X25, 0x458000
	0x03D0B670 ADRP X24, 0x458000
	0x03D0B674 ADRP X23, 0x458000
	0x03D0B678 LDRB W8, [X22 + 0x877]
	0x03D0B67C LDR X25, [X25 + 0x868]
	0x03D0B680 LDR X24, [X24 + 0x890]
	0x03D0B684 LDR X23, [X23 + 0x898]
	0x03D0B688 MOV W20, W2
	0x03D0B68C MOV X21, X1
	0x03D0B690 MOV X19, X0
	0x03D0B694 TBNZ X8, 0x0, 0x3D0B6E8
	0x03D0B698 ADRP X0, 0x458000
	0x03D0B69C LDR X0, [X0 + 0x8A0]
	0x03D0B6A0 BL 0x1C16CF4
	0x03D0B6A4 ADRP X0, 0x458000
	0x03D0B6A8 LDR X0, [X0 + 0x8A8]
	0x03D0B6AC BL 0x1C16CF4
	0x03D0B6B0 ADRP X0, 0x458000
	0x03D0B6B4 LDR X0, [X0 + 0x898]
	0x03D0B6B8 BL 0x1C16CF4
	0x03D0B6BC ADRP X0, 0x458000
	0x03D0B6C0 LDR X0, [X0 + 0x868]
	0x03D0B6C4 BL 0x1C16CF4
	0x03D0B6C8 ADRP X0, 0x458000
	0x03D0B6CC LDR X0, [X0 + 0x8B0]
	0x03D0B6D0 BL 0x1C16CF4
	0x03D0B6D4 ADRP X0, 0x458000
	0x03D0B6D8 LDR X0, [X0 + 0x890]
	0x03D0B6DC BL 0x1C16CF4
	0x03D0B6E0 MOVZ W8, 0x1
	0x03D0B6E4 STRB W8, [X22 + 0x877]
	0x03D0B6E8 LDR X0, [X25]
	0x03D0B6EC BL 0x1C16F10
	0x03D0B6F0 MOV X22, X0
	0x03D0B6F4 BL 0x3D0B7A8
	0x03D0B6F8 LDR X4, [X24]
	0x03D0B6FC MOV X0, X19
	0x03D0B700 MOV X1, X21
	0x03D0B704 MOV W2, W20
	0x03D0B708 MOV X3, X22
	0x03D0B70C BL 0x26E7084
	0x03D0B710 LDR X0, [X23]
	0x03D0B714 LDR W8, [X0 + 0xE0]
	0x03D0B718 CBNZ W8, 0x3D0B724
	0x03D0B71C BL 0x1C16DFC
	0x03D0B720 LDR X0, [X23]
	0x03D0B724 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6DD000
	007 Move X21, 0x459000
	008 Move W8, [X22+2151]
	009 Move X21, [X21+1960]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x459000
	017 Move X0, [X0+1968]
	018 Call 0x1C17CF4
	019 Move X0, 0x459000
	020 Move X0, [X0+1960]
	021 Call 0x1C17CF4
	022 Move X0, 0x459000
	023 Move X0, [X0+1976]
	024 Call 0x1C17CF4
	025 Move X0, 0x459000
	026 Move X0, [X0+1984]
	027 Call 0x1C17CF4
	028 Move X0, 0x459000
	029 Move X0, [X0+1992]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+2151], W8
	033 Move X0, [X21]
	034 Move X22, 0x459000
	035 Move X21, 0x459000
	036 Move W8, [X0+224]
	037 Move X22, [X22+1968]
	038 Move X21, [X21+1992]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X3, [X22]
	043 Move W2, 2
	044 Move X0, X19
	045 Move X1, X20
	046 Call BaseCompositeField`3<Vector2Int, Object, Int32>..ctor, X0, X1, X2
	047 Move X0, [X21]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X21]
	053 Move X8, [X0+184]
	054 Move X0, X19
	055 Move X2, X31
	056 Move X1, [X8]
	057 Call VisualElement.AddToClassList, X0, X1
	058 Move X0, [X19+1024]
	059 Compare X0, 0
	060 JumpIfEqual {84}
	061 Move X8, [X21]
	062 Move X20, 0x459000
	063 Move X2, X31
	064 Move X8, [X8+184]
	065 Move X1, [X8+8]
	066 Move X20, [X20+1984]
	067 Call VisualElement.AddToClassList, X0, X1
	068 Move X1, [X20]
	069 Move X0, X19
	070 Call BaseField`1<Vector2Int>.get_visualInput, X0
	071 Compare X0, 0
	072 JumpIfEqual {84}
	073 Move X8, [X21]
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X2, X31
	079 Move X8, [X8+184]
	080 Move X1, [X8+16]
	081 Move X30, [X31+48]
	082 Call VisualElement.AddToClassList, X0, X1
	083 Return 
	084 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D0B728 MOV X0, X19
	0x03D0B72C MOV X2, X31
	0x03D0B730 LDR X1, [X8]
	0x03D0B734 BL 0x3DF1C70
	0x03D0B738 LDR X0, [X19 + 0x400]
	0x03D0B73C CBZ X0, 0x3D0B7A4
	0x03D0B740 LDR X8, [X23]
	0x03D0B744 ADRP X20, 0x458000
	0x03D0B748 MOV X2, X31
	0x03D0B74C LDR X8, [X8 + 0xB8]
	0x03D0B750 LDR X1, [X8 + 0x8]
	0x03D0B754 LDR X20, [X20 + 0x8A8]
	0x03D0B758 BL 0x3DF1C70
	0x03D0B75C LDR X1, [X20]
	0x03D0B760 MOV X0, X19
	0x03D0B764 BL 0x277A368
	0x03D0B768 CBZ X0, 0x3D0B7A4
	0x03D0B76C LDR X8, [X23]
	0x03D0B770 ADRP X20, 0x458000
	0x03D0B774 MOV X2, X31
	0x03D0B778 LDR X8, [X8 + 0xB8]
	0x03D0B77C LDR X1, [X8 + 0x10]
	0x03D0B780 LDR X20, [X20 + 0x8B0]
	0x03D0B784 BL 0x3DF1C70
	0x03D0B788 LDR X1, [X20]
	0x03D0B78C MOV X0, X19
	0x03D0B790 LDP X20, X19, [X31 + 0x30]
	0x03D0B794 LDP X22, X21, [X31 + 0x20]
	0x03D0B798 LDP X24, X23, [X31 + 0x10]
	0x03D0B79C LDP X30, X25, [X31], #0x40
	0x03D0B7A0 B 0x213C7D0
	0x03D0B7A4 BL 0x1C16F20
	0x03D0B7A8 STR X30, [X31 - 0x30]!
	0x03D0B7AC STP X22, X21, [X31 + 0x10]
	0x03D0B7B0 STP X20, X19, [X31 + 0x20]
	0x03D0B7B4 ADRP X21, 0x6DC000
	0x03D0B7B8 ADRP X22, 0x458000
	0x03D0B7BC ADRP X20, 0x454000
	0x03D0B7C0 LDRB W8, [X21 + 0x87C]
	0x03D0B7C4 LDR X22, [X22 + 0x8B8]
	0x03D0B7C8 LDR X20, [X20 + 0x7A8]
	0x03D0B7CC MOV X19, X0
	0x03D0B7D0 TBNZ X8, 0x0, 0x3D0B800
	0x03D0B7D4 ADRP X0, 0x458000
	0x03D0B7D8 LDR X0, [X0 + 0x8B8]
	0x03D0B7DC BL 0x1C16CF4
	0x03D0B7E0 ADRP X0, 0x458000
	0x03D0B7E4 LDR X0, [X0 + 0x8C0]
	0x03D0B7E8 BL 0x1C16CF4
	0x03D0B7EC ADRP X0, 0x454000
	0x03D0B7F0 LDR X0, [X0 + 0x7A8]
	0x03D0B7F4 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x6DD000
	008 Move X22, 0x459000
	009 Move X19, 0x459000
	010 Move X21, 0x412000
	011 Move X20, 0x412000
	012 Move W8, [X23+2152]
	013 Move X22, [X22+2000]
	014 Move X19, [X19+1992]
	015 Move X21, [X21+3768]
	016 Move X20, [X20+3776]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x459000
	022 Move X0, [X0+1992]
	023 Call 0x1C17CF4
	024 Move X0, 0x412000
	025 Move X0, [X0+3768]
	026 Call 0x1C17CF4
	027 Move X0, 0x459000
	028 Move X0, [X0+2000]
	029 Call 0x1C17CF4
	030 Move X0, 0x412000
	031 Move X0, [X0+3776]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+2152], W8
	035 Move X8, [X19]
	036 Move X9, [X22]
	037 Move X2, X31
	038 Move X8, [X8+184]
	039 Move [X8], X9
	040 Move X8, [X19]
	041 Move X1, [X21]
	042 Move X8, [X8+184]
	043 Move X0, [X8]
	044 Call String.Concat, X0, X1
	045 Move X8, [X19]
	046 Move X2, X31
	047 Move X8, [X8+184]
	048 Move [X8+8], X0
	049 Move X0, [X8]
	050 Move X1, [X20]
	051 Call String.Concat, X0, X1
	052 Move X8, [X19]
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X8, [X8+184]
	058 Move [X8+16], X0
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return 

