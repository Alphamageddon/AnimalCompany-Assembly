Type: UnityEngine.UIElements.ClampedDragger`1

Method: System.Void add_dragging(System.Action value)

Disassembly:
	0x028F8038 LDP X22, X21, [X31 + 0x20]
	0x028F803C LDR X30, [X31 + 0x10]
	0x028F8040 LDP D9, D8, [X31], #0x40
	0x028F8044 BR X2
	0x028F8048 LDP X20, X19, [X31 + 0x30]
	0x028F804C LDP X22, X21, [X31 + 0x20]
	0x028F8050 LDR X30, [X31 + 0x10]
	0x028F8054 LDP D9, D8, [X31], #0x40
	0x028F8058 RET
	0x028F805C BL 0x1C16F20
	0x028F8060 MOV X0, X19
	0x028F8064 BL 0x1C171E0
	0x028F8068 STR X30, [X31 - 0x30]!
	0x028F806C STP X22, X21, [X31 + 0x10]
	0x028F8070 STP X20, X19, [X31 + 0x20]
	0x028F8074 LDR X8, [X6 + 0x20]
	0x028F8078 MOV W20, W4
	0x028F807C MOV X21, X2
	0x028F8080 MOV X2, X31
	0x028F8084 LDR X8, [X8 + 0xC0]
	0x028F8088 MOV X19, X5
	0x028F808C MOV X22, X0
	0x028F8090 LDR X4, [X8]
	0x028F8094 BL 0x2DDF26C
	0x028F8098 MOVZ W8, 0x1
	0x028F809C STR W20, [X22 + 0x30]
	0x028F80A0 STRB W8, [X22 + 0x10]
	0x028F80A4 STP X19, X21, [X22 + 0x38]
	0x028F80A8 LDP X20, X19, [X31 + 0x20]
	0x028F80AC LDP X22, X21, [X31 + 0x10]
	0x028F80B0 LDR X30, [X31], #0x30
	0x028F80B4 RET
	0x028F80B8 LDR X0, [X0 + 0x38]
	0x028F80BC RET
	0x028F80C0 SUB X31, X31, 0x20
	0x028F80C4 STP X30, X19, [X31 + 0x10]
	0x028F80C8 STR X31, [X31 + 0x8]
	0x028F80CC LDR X8, [X0 + 0x40]
	0x028F80D0 CBZ X8, 0x28F810C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1AE3000
	007 Move W8, [X21+3416]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x17FD000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3416], W8
	019 Move X22, 0x17FD000
	020 Add X20, X20, 112
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Combine, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void remove_dragging(System.Action value)

Disassembly:
	0x028F80D4 MOV X19, X2
	0x028F80D8 LDR W2, [X0 + 0x30]
	0x028F80DC LDR X9, [X8 + 0x18]
	0x028F80E0 LDR X0, [X8 + 0x40]
	0x028F80E4 LDR X4, [X8 + 0x28]
	0x028F80E8 ADD X3, X31, 0x8
	0x028F80EC BLR X9
	0x028F80F0 LDR X8, [X31 + 0x8]
	0x028F80F4 ANDS W0, W0, 0x1
	0x028F80F8 CSEL X8, X8, X31, NE
	0x028F80FC STR X8, [X19]
	0x028F8100 LDP X30, X19, [X31 + 0x10]
	0x028F8104 ADD X31, X31, 0x20
	0x028F8108 RET
	0x028F810C BL 0x1C16F20
	0x028F8110 STR X30, [X31 - 0x30]!
	0x028F8114 STP X22, X21, [X31 + 0x10]
	0x028F8118 STP X20, X19, [X31 + 0x20]
	0x028F811C LDR X8, [X6 + 0x20]
	0x028F8120 MOV W20, W4
	0x028F8124 MOV X21, X2
	0x028F8128 MOV X2, X31
	0x028F812C LDR X8, [X8 + 0xC0]
	0x028F8130 MOV X19, X5
	0x028F8134 MOV X22, X0
	0x028F8138 LDR X4, [X8]
	0x028F813C LDR X8, [X4]
	0x028F8140 BLR X8
	0x028F8144 MOVZ W8, 0x1
	0x028F8148 STR W20, [X22 + 0x30]
	0x028F814C STRB W8, [X22 + 0x10]
	0x028F8150 STP X19, X21, [X22 + 0x38]
	0x028F8154 LDP X20, X19, [X31 + 0x20]
	0x028F8158 LDP X22, X21, [X31 + 0x10]
	0x028F815C LDR X30, [X31], #0x30
	0x028F8160 RET
	0x028F8164 LDR X0, [X0 + 0x38]
	0x028F8168 RET
	0x028F816C SUB X31, X31, 0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1AE3000
	007 Move W8, [X21+3417]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x17FD000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3417], W8
	019 Move X22, 0x17FD000
	020 Add X20, X20, 112
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Remove, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void add_draggingEnded(System.Action value)

Disassembly:
	0x028F8170 STP X30, X19, [X31 + 0x10]
	0x028F8174 STR X31, [X31 + 0x8]
	0x028F8178 MOV X8, X0
	0x028F817C LDR X0, [X0 + 0x40]
	0x028F8180 CBZ X0, 0x28F81C0
	0x028F8184 LDR X9, [X3 + 0x20]
	0x028F8188 MOV X19, X2
	0x028F818C LDR W2, [X8 + 0x30]
	0x028F8190 ADD X3, X31, 0x8
	0x028F8194 LDR X9, [X9 + 0xC0]
	0x028F8198 LDR X4, [X9 + 0x28]
	0x028F819C LDR X8, [X4]
	0x028F81A0 BLR X8
	0x028F81A4 LDR X8, [X31 + 0x8]
	0x028F81A8 ANDS W0, W0, 0x1
	0x028F81AC CSEL X8, X8, X31, NE
	0x028F81B0 STR X8, [X19]
	0x028F81B4 LDP X30, X19, [X31 + 0x10]
	0x028F81B8 ADD X31, X31, 0x20
	0x028F81BC RET
	0x028F81C0 BL 0x1C16F20
	0x028F81C4 STR X30, [X31 - 0x20]!
	0x028F81C8 STP X20, X19, [X31 + 0x10]
	0x028F81CC MOV X19, X0
	0x028F81D0 LDR X0, [X0 + 0x20]
	0x028F81D4 LDRB W8, [X0 + 0x135]
	0x028F81D8 TBNZ X8, 0x0, 0x28F81E0
	0x028F81DC BL 0x1C5C684
	0x028F81E0 LDR X8, [X0 + 0xC0]
	0x028F81E4 LDR X0, [X8 + 0x10]
	0x028F81E8 LDRB W8, [X0 + 0x135]
	0x028F81EC TBNZ X8, 0x0, 0x28F81F4
	0x028F81F0 BL 0x1C5C684
	0x028F81F4 LDR W8, [X0 + 0xE0]
	0x028F81F8 CBNZ W8, 0x28F8200
	0x028F81FC BL 0x1C16DFC
	0x028F8200 LDR X0, [X19 + 0x20]
	0x028F8204 LDRB W8, [X0 + 0x135]
	0x028F8208 TBNZ X8, 0x0, 0x28F8210

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1AE3000
	007 Move W8, [X21+3418]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x17FD000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3418], W8
	019 Move X22, 0x17FD000
	020 Add X20, X20, 120
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Combine, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void remove_draggingEnded(System.Action value)

Disassembly:
	0x028F820C BL 0x1C5C684
	0x028F8210 LDR X8, [X0 + 0xC0]
	0x028F8214 LDR X0, [X8 + 0x10]
	0x028F8218 LDRB W8, [X0 + 0x135]
	0x028F821C TBNZ X8, 0x0, 0x28F8224
	0x028F8220 BL 0x1C5C684
	0x028F8224 LDR X8, [X0 + 0xB8]
	0x028F8228 LDR X20, [X8]
	0x028F822C CBZ X20, 0x28F82EC
	0x028F8230 LDR X0, [X19 + 0x20]
	0x028F8234 ADD X8, X0, 0x135
	0x028F8238 LDRH W8, [X8]
	0x028F823C TBNZ X8, 0x0, 0x28F8250
	0x028F8240 BL 0x1C5C684
	0x028F8244 LDR X0, [X19 + 0x20]
	0x028F8248 ADD X8, X0, 0x135
	0x028F824C LDRH W8, [X8]
	0x028F8250 LDR W20, [X20 + 0x20]
	0x028F8254 TBNZ X8, 0x0, 0x28F825C
	0x028F8258 BL 0x1C5C684
	0x028F825C LDR X8, [X0 + 0xC0]
	0x028F8260 CMP W20, 0x0
	0x028F8264 B.LE 0x28F82DC
	0x028F8268 LDR X0, [X8 + 0x10]
	0x028F826C LDRB W8, [X0 + 0x135]
	0x028F8270 TBNZ X8, 0x0, 0x28F8278
	0x028F8274 BL 0x1C5C684
	0x028F8278 LDR W8, [X0 + 0xE0]
	0x028F827C CBNZ W8, 0x28F8284
	0x028F8280 BL 0x1C16DFC
	0x028F8284 LDR X0, [X19 + 0x20]
	0x028F8288 LDRB W8, [X0 + 0x135]
	0x028F828C TBNZ X8, 0x0, 0x28F8294
	0x028F8290 BL 0x1C5C684
	0x028F8294 LDR X8, [X0 + 0xC0]
	0x028F8298 LDR X0, [X8 + 0x10]
	0x028F829C LDRB W8, [X0 + 0x135]
	0x028F82A0 TBNZ X8, 0x0, 0x28F82A8
	0x028F82A4 BL 0x1C5C684

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1AE3000
	007 Move W8, [X21+3419]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x17FD000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3419], W8
	019 Move X22, 0x17FD000
	020 Add X20, X20, 120
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Remove, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: UnityEngine.UIElements.ClampedDragger`1/DragDirection<T> get_dragDirection()

Disassembly:
	0x028F82A8 LDR X8, [X0 + 0xB8]
	0x028F82AC LDR X20, [X8]

ISIL:
	001 Move W0, [X0+128]
	002 Return X0

Method: System.Void set_dragDirection(UnityEngine.UIElements.ClampedDragger`1/DragDirection<T> value)

Disassembly:
	0x028F82B0 CBZ X20, 0x28F82EC
	0x028F82B4 LDR X0, [X19 + 0x20]

ISIL:
	001 Move [X0+128], W1
	002 Return 

Method: System.Void set_slider(UnityEngine.UIElements.BaseSlider`1<T> value)

Disassembly:
	0x028F82B8 LDRB W8, [X0 + 0x135]
	0x028F82BC TBNZ X8, 0x0, 0x28F82C4

ISIL:
	001 Move [X0+136], X1
	002 Return 

Method: UnityEngine.Vector2 get_startMousePosition()

Disassembly:
	0x028F82C0 BL 0x1C5C684
	0x028F82C4 LDR X8, [X0 + 0xC0]

ISIL:
	001 Move S0, [X0+144]
	002 Move S1, [X0+148]
	003 Return X0

Method: System.Void set_startMousePosition(UnityEngine.Vector2 value)

Disassembly:
	0x028F82C8 MOV X0, X20
	0x028F82CC LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X0+144], S0
	002 Move [X0+152], S1
	003 Return 

Method: UnityEngine.Vector2 get_delta()

Disassembly:
	0x028F82D0 LDR X1, [X8 + 0x30]
	0x028F82D4 LDR X30, [X31], #0x20
	0x028F82D8 B 0x24F18D4
	0x028F82DC LDR X0, [X8 + 0x20]
	0x028F82E0 LDP X20, X19, [X31 + 0x10]
	0x028F82E4 LDR X30, [X31], #0x20
	0x028F82E8 B 0x2278924
	0x028F82EC BL 0x1C16F20
	0x028F82F0 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {10}
	004 NotImplemented "Instruction LDUR not yet implemented."
	005 Move V1, [X0+144]
	006 Subtract V0, V0, V1
	007 Move S1, V0.S[1]
	008 Move X30, [X31+16]
	009 Return X0
	010 Call 0x1C17F20

Method: System.Void .ctor(UnityEngine.UIElements.BaseSlider`1<T> slider, System.Action clickHandler, System.Action dragHandler)

Disassembly:
	0x028F82F4 STP X20, X19, [X31 + 0x10]
	0x028F82F8 CBZ X0, 0x28F8414
	0x028F82FC MOV X19, X0
	0x028F8300 LDR X0, [X1 + 0x20]
	0x028F8304 MOV X20, X1
	0x028F8308 LDRB W8, [X0 + 0x135]
	0x028F830C TBNZ X8, 0x0, 0x28F8314
	0x028F8310 BL 0x1C5C684
	0x028F8314 LDR X8, [X0 + 0xC0]
	0x028F8318 LDR X1, [X8 + 0x38]
	0x028F831C LDRB W8, [X1 + 0x135]
	0x028F8320 TBNZ X8, 0x0, 0x28F8330
	0x028F8324 MOV X0, X1
	0x028F8328 BL 0x1C5C684
	0x028F832C MOV X1, X0
	0x028F8330 LDR X8, [X19]
	0x028F8334 LDRH W9, [X8 + 0x12E]
	0x028F8338 CBZ X9, 0x28F835C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, X2
	006 Move X19, X3
	007 Move X20, X1
	008 Move W2, 250
	009 Move W3, 30
	010 Move X1, X8
	011 Move X4, X31
	012 Move X21, X0
	013 Call Clickable..ctor, X0, X1, X2, X3
	014 Move [X21+136], X20
	015 Move X1, X19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move [X21+128], W31
	019 Move X0, X21
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Call 0x28F8038, X0, X1
	023 Return 

Method: System.Void ProcessDownEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.Vector2 localPosition, System.Int32 pointerId)

Disassembly:
	0x028F833C LDR X10, [X8 + 0xB0]
	0x028F8340 ADD X10, X10, 0x8
	0x028F8344 LDUR X11, [X10 - 0x8]
	0x028F8348 CMP X11, X1
	0x028F834C B.EQ 0x28F836C
	0x028F8350 SUBS X9, X9, 0x1
	0x028F8354 ADD X10, X10, 0x10
	0x028F8358 B.NE 0x28F8344
	0x028F835C MOVZ W2, 0x3
	0x028F8360 MOV X0, X19
	0x028F8364 BL 0x1C5C788
	0x028F8368 B 0x28F837C
	0x028F836C LDR W9, [X10]
	0x028F8370 ADD W9, W9, 0x3
	0x028F8374 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X3, X31
	004 Move X19, X0
	005 Move [X0+144], S0
	006 Move [X0+152], S1
	007 Move [X0+128], W31
	008 Call Clickable.ProcessDownEvent, X0, X1, X2, X3
	009 Move X8, [X19+112]
	010 Compare X8, 0
	011 JumpIfEqual {18}
	012 Move X2, [X8+24]
	013 Move X0, [X8+64]
	014 Move X1, [X8+40]
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 CallNoReturn X2
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return 

Method: System.Void ProcessUpEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.Vector2 localPosition, System.Int32 pointerId)

Disassembly:
	0x028F8378 ADD X0, X8, 0x138
	0x028F837C LDP X8, X1, [X0]
	0x028F8380 MOV X0, X19
	0x028F8384 BLR X8
	0x028F8388 LDR X0, [X20 + 0x20]
	0x028F838C LDRB W8, [X0 + 0x135]
	0x028F8390 TBNZ X8, 0x0, 0x28F8398
	0x028F8394 BL 0x1C5C684
	0x028F8398 LDR X8, [X0 + 0xC0]
	0x028F839C LDR X0, [X8 + 0x10]
	0x028F83A0 LDRB W8, [X0 + 0x135]
	0x028F83A4 TBNZ X8, 0x0, 0x28F83AC
	0x028F83A8 BL 0x1C5C684
	0x028F83AC LDR W8, [X0 + 0xE0]
	0x028F83B0 CBNZ W8, 0x28F83B8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {20}
	005 Move X3, X31
	006 Move X19, X0
	007 Call Clickable.ProcessUpEvent, X0, X1, X2, X3
	008 Move X8, [X19+120]
	009 Compare X8, 0
	010 JumpIfEqual {17}
	011 Move X2, [X8+24]
	012 Move X0, [X8+64]
	013 Move X1, [X8+40]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 CallNoReturn X2
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 
	020 Call 0x1C17F20

Method: System.Void ProcessMoveEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.Vector2 localPosition)

Disassembly:
	0x028F83B4 BL 0x1C16DFC
	0x028F83B8 LDR X0, [X20 + 0x20]
	0x028F83BC LDRB W8, [X0 + 0x135]
	0x028F83C0 TBNZ X8, 0x0, 0x28F83C8
	0x028F83C4 BL 0x1C5C684
	0x028F83C8 LDR X8, [X0 + 0xC0]
	0x028F83CC LDR X0, [X8 + 0x10]
	0x028F83D0 LDRB W8, [X0 + 0x135]
	0x028F83D4 TBNZ X8, 0x0, 0x28F83DC
	0x028F83D8 BL 0x1C5C684
	0x028F83DC LDR X8, [X0 + 0xB8]
	0x028F83E0 LDR X21, [X8]
	0x028F83E4 CBZ X21, 0x28F8414
	0x028F83E8 LDR X0, [X20 + 0x20]
	0x028F83EC LDRB W8, [X0 + 0x135]
	0x028F83F0 TBNZ X8, 0x0, 0x28F83F8
	0x028F83F4 BL 0x1C5C684
	0x028F83F8 LDR X8, [X0 + 0xC0]
	0x028F83FC MOV X1, X19
	0x028F8400 LDP X20, X19, [X31 + 0x10]
	0x028F8404 MOV X0, X21
	0x028F8408 LDR X2, [X8 + 0x48]
	0x028F840C LDP X30, X21, [X31], #0x20
	0x028F8410 B 0x24F1750
	0x028F8414 BL 0x1C16F20
	0x028F8418 STR X30, [X31 - 0x20]!
	0x028F841C STP X20, X19, [X31 + 0x10]
	0x028F8420 MOV X19, X0
	0x028F8424 LDR X0, [X0 + 0x20]
	0x028F8428 LDRB W8, [X0 + 0x135]
	0x028F842C TBNZ X8, 0x0, 0x28F8434
	0x028F8430 BL 0x1C5C684
	0x028F8434 LDR X8, [X0 + 0xC0]
	0x028F8438 LDR X0, [X8 + 0x8]
	0x028F843C LDRB W8, [X0 + 0x135]
	0x028F8440 TBNZ X8, 0x0, 0x28F8448
	0x028F8444 BL 0x1C5C684
	0x028F8448 BL 0x1C16F10
	0x028F844C LDR X8, [X19 + 0x20]
	0x028F8450 MOV X20, X0
	0x028F8454 LDRB W9, [X8 + 0x135]
	0x028F8458 TBNZ X9, 0x0, 0x28F8468
	0x028F845C MOV X0, X8
	0x028F8460 BL 0x1C5C684
	0x028F8464 MOV X8, X0
	0x028F8468 LDR X8, [X8 + 0xC0]
	0x028F846C MOV X0, X20
	0x028F8470 LDR X1, [X8 + 0x50]
	0x028F8474 BL 0x24F1248
	0x028F8478 LDR X0, [X19 + 0x20]
	0x028F847C LDRB W8, [X0 + 0x135]
	0x028F8480 TBNZ X8, 0x0, 0x28F8488
	0x028F8484 BL 0x1C5C684
	0x028F8488 LDR X8, [X0 + 0xC0]
	0x028F848C LDR X0, [X8 + 0x10]
	0x028F8490 LDRB W8, [X0 + 0x135]
	0x028F8494 TBNZ X8, 0x0, 0x28F849C
	0x028F8498 BL 0x1C5C684
	0x028F849C LDR X8, [X0 + 0xB8]
	0x028F84A0 STR X20, [X8]
	0x028F84A4 LDR X0, [X19 + 0x20]
	0x028F84A8 LDRB W8, [X0 + 0x135]
	0x028F84AC TBNZ X8, 0x0, 0x28F84B4
	0x028F84B0 BL 0x1C5C684
	0x028F84B4 LDR X8, [X0 + 0xC0]
	0x028F84B8 LDR X0, [X8 + 0x10]
	0x028F84BC LDRB W8, [X0 + 0x135]
	0x028F84C0 TBNZ X8, 0x0, 0x28F84D0
	0x028F84C4 LDP X20, X19, [X31 + 0x10]
	0x028F84C8 LDR X30, [X31], #0x20
	0x028F84CC B 0x1C5C684
	0x028F84D0 LDP X20, X19, [X31 + 0x10]
	0x028F84D4 LDR X30, [X31], #0x20
	0x028F84D8 RET
	0x028F84DC STP X29, X30, [X31 - 0x50]!
	0x028F84E0 STR X25, [X31 + 0x10]
	0x028F84E4 STP X24, X23, [X31 + 0x20]
	0x028F84E8 STP X22, X21, [X31 + 0x30]
	0x028F84EC STP X20, X19, [X31 + 0x40]
	0x028F84F0 ADD X29, X31, 0x0
	0x028F84F4 SUB X31, X31, 0x10
	0x028F84F8 MRS X24, 0xC000
	0x028F84FC LDR X8, [X24 + 0x28]
	0x028F8500 MOV X22, X1
	0x028F8504 MOV X19, X0
	0x028F8508 STUR X8, [X29 - 0x8]
	0x028F850C LDR X8, [X1 + 0x20]
	0x028F8510 ADD X9, X8, 0x135
	0x028F8514 LDRH W9, [X9]
	0x028F8518 TBNZ X9, 0x0, 0x28F8534
	0x028F851C MOV X0, X8
	0x028F8520 BL 0x1C5C684
	0x028F8524 LDR X8, [X22 + 0x20]
	0x028F8528 ADD X9, X8, 0x135
	0x028F852C LDRH W9, [X9]
	0x028F8530 B 0x28F8538
	0x028F8534 MOV X0, X8
	0x028F8538 LDR X10, [X0 + 0xC0]

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1AE3000
	009 Move W8, [X21+3420]
	010 Move V8, V1
	011 Move V9, V0
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x1827000
	019 Move X0, [X0+512]
	020 Call 0x1C17CF4
	021 Move X0, 0x1827000
	022 Move X0, [X0+520]
	023 Call 0x1C17CF4
	024 Move X0, 0x1827000
	025 Move X0, [X0+528]
	026 Call 0x1C17CF4
	027 Move X0, 0x1825000
	028 Move X0, [X0+3664]
	029 Call 0x1C17CF4
	030 Move X0, 0x1827000
	031 Move X0, [X0+536]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+3420], W8
	035 Compare X20, 0
	036 JumpIfEqual {111}
	037 Move X0, X20
	038 Move X1, X19
	039 Move V0, V9
	040 Move V1, V8
	041 Move X2, X31
	042 Call Clickable.ProcessMoveEvent, X0, X1, X2
	043 Move W8, [X20+128]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Compare W8, 0
	046 JumpIfNotEqual {103}
	047 Move W8, 4
	048 Move [X20+128], W8
	049 Compare X19, 0
	050 JumpIfEqual {111}
	051 Move X8, [X19]
	052 Move X21, 0x1827000
	053 Move X22, 0x1827000
	054 Move X0, X19
	055 Move X9, [X8+392]
	056 Move X1, [X8+400]
	057 Move X21, [X21+520]
	058 Move X22, [X22+512]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X8, [X21]
	061 Move X21, X0
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X0, [X22]
	068 Call 0x2D0E5C8
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, 0x1827000
	071 Move X8, [X8+536]
	072 Move X1, [X8]
	073 Move X8, [X19]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X22, 0x1825000
	076 Move X22, [X22+3664]
	077 Move W21, [X19+156]
	078 Move X0, [X22]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X22]
	084 Move X8, [X0+184]
	085 Move W8, [X8+8]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W8, 1
	088 Move [X19+262], W8
	089 Move X8, [X20+112]
	090 Compare X8, 0
	091 JumpIfEqual {103}
	092 Move X2, [X8+24]
	093 Move X0, [X8+64]
	094 Move X1, [X8+40]
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X30, [X31+16]
	100 Move D9, [X31+64]
	101 Move D8, [X31+72]
	102 CallNoReturn X2
	103 Move X20, [X31+48]
	104 Move X19, [X31+56]
	105 Move X22, [X31+32]
	106 Move X21, [X31+40]
	107 Move X30, [X31+16]
	108 Move D9, [X31+64]
	109 Move D8, [X31+72]
	110 Return 
	111 Call 0x1C17F20
	112 Move X0, X19
	113 Call 0x1C181E0

