Type: UnityEngine.UIElements.TwoPaneSplitView

Method: UnityEngine.UIElements.VisualElement get_fixedPane()

Disassembly:
	0x03D8898C B.EQ 0x3D889AC
	0x03D88990 SUBS X9, X9, 0x1

ISIL:
	001 Move X0, [X0+984]
	002 Return X0

Method: UnityEngine.UIElements.VisualElement get_flexedPane()

Disassembly:
	0x03D88994 ADD X10, X10, 0x10
	0x03D88998 B.NE 0x3D88984

ISIL:
	001 Move X0, [X0+992]
	002 Return X0

Method: System.Int32 get_fixedPaneIndex()

Disassembly:
	0x03D8899C MOVZ W2, 0x15
	0x03D889A0 MOV X0, X20

ISIL:
	001 Move W0, [X0+1044]
	002 Return X0

Method: UnityEngine.UIElements.TwoPaneSplitViewOrientation get_orientation()

Disassembly:
	0x03D889A4 BL 0x1C5C788
	0x03D889A8 B 0x3D889BC

ISIL:
	001 Move W0, [X0+1040]
	002 Return X0

Method: System.Single get_fixedPaneDimension()

Disassembly:
	0x03D889AC LDR W9, [X10]
	0x03D889B0 ADD W9, W9, 0x15
	0x03D889B4 ADD X8, X8, W9, 0x4, SXTW
	0x03D889B8 ADD X0, X8, 0x138
	0x03D889BC LDP X8, X2, [X0]
	0x03D889C0 MOV X0, X20
	0x03D889C4 MOV X1, X21
	0x03D889C8 BLR X8
	0x03D889CC LDR X0, [X19 + 0x3E0]
	0x03D889D0 CBZ X0, 0x3D890AC
	0x03D889D4 MOV X1, X31
	0x03D889D8 BL 0x3DE7EEC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+88]
	005 Move X1, X31
	006 Call String.IsNullOrEmpty, X0
	007 And W31, W0, 1
	008 Move W8, 1000
	009 Move W9, 1048
	010 NotImplemented "Instruction CSEL not yet implemented."
	011 Move V0, [X19]
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return V0

Method: System.Void set_fixedPaneDimension(System.Single value)

Disassembly:
	0x03D889DC MOV X20, X0
	0x03D889E0 FMOV S0, W31
	0x03D889E4 MOV X0, X31
	0x03D889E8 BL 0x3DFE658
	0x03D889EC CBZ X20, 0x3D890AC
	0x03D889F0 LDR X8, [X20]
	0x03D889F4 LDR X1, [X23]

ISIL:
	001 Move V1, [X0+1000]
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 Move X1, X31
	004 Move [X0+1000], S0
	005 Call VisualElement.SaveViewData, X0
	006 Return 
	007 Return 

Method: System.Void .ctor()

Disassembly:
	0x03D889F8 MOV X21, X0
	0x03D889FC LDRH W9, [X8 + 0x12E]
	0x03D88A00 CBZ X9, 0x3D88A24
	0x03D88A04 LDR X10, [X8 + 0xB0]
	0x03D88A08 ADD X10, X10, 0x8
	0x03D88A0C LDUR X11, [X10 - 0x8]
	0x03D88A10 CMP X11, X1
	0x03D88A14 B.EQ 0x3D88A34
	0x03D88A18 SUBS X9, X9, 0x1
	0x03D88A1C ADD X10, X10, 0x10
	0x03D88A20 B.NE 0x3D88A0C
	0x03D88A24 MOVZ W2, 0x16
	0x03D88A28 MOV X0, X20
	0x03D88A2C BL 0x1C5C788
	0x03D88A30 B 0x3D88A44
	0x03D88A34 LDR W9, [X10]
	0x03D88A38 ADD W9, W9, 0x16
	0x03D88A3C ADD X8, X8, W9, 0x4, SXTW
	0x03D88A40 ADD X0, X8, 0x138
	0x03D88A44 LDP X8, X2, [X0]
	0x03D88A48 MOV X0, X20
	0x03D88A4C MOV X1, X21
	0x03D88A50 BLR X8
	0x03D88A54 LDR X0, [X19 + 0x3E0]
	0x03D88A58 CBZ X0, 0x3D890AC
	0x03D88A5C MOV X1, X31
	0x03D88A60 BL 0x3DE7EEC
	0x03D88A64 MOV X20, X0
	0x03D88A68 FMOV S0, W31
	0x03D88A6C MOV X0, X31
	0x03D88A70 BL 0x3DFED98
	0x03D88A74 CBZ X20, 0x3D890AC
	0x03D88A78 LDR X9, [X20]
	0x03D88A7C MOV X8, X1
	0x03D88A80 LDR X1, [X23]
	0x03D88A84 MOV X21, X0
	0x03D88A88 LDRH W10, [X9 + 0x12E]
	0x03D88A8C AND X22, X8, 0x0
	0x03D88A90 CBZ X10, 0x3D88AB4
	0x03D88A94 LDR X8, [X9 + 0xB0]
	0x03D88A98 ADD X8, X8, 0x8
	0x03D88A9C LDUR X11, [X8 - 0x8]
	0x03D88AA0 CMP X11, X1
	0x03D88AA4 B.EQ 0x3D88AC4
	0x03D88AA8 SUBS X10, X10, 0x1
	0x03D88AAC ADD X8, X8, 0x10
	0x03D88AB0 B.NE 0x3D88A9C
	0x03D88AB4 MOVZ W2, 0x13
	0x03D88AB8 MOV X0, X20
	0x03D88ABC BL 0x1C5C788
	0x03D88AC0 B 0x3D88AD4
	0x03D88AC4 LDR W8, [X8]
	0x03D88AC8 ADD W8, W8, 0x13
	0x03D88ACC ADD X8, X9, W8, 0x4, SXTW
	0x03D88AD0 ADD X0, X8, 0x138
	0x03D88AD4 LDP X8, X3, [X0]
	0x03D88AD8 MOV X0, X20
	0x03D88ADC MOV X1, X21
	0x03D88AE0 MOV X2, X22
	0x03D88AE4 BLR X8
	0x03D88AE8 LDR X0, [X19 + 0x3F8]
	0x03D88AEC CBZ X0, 0x3D890AC
	0x03D88AF0 MOV X1, X31
	0x03D88AF4 BL 0x3DE7EEC
	0x03D88AF8 MOV X20, X0
	0x03D88AFC FMOV S0, W31
	0x03D88B00 MOV X0, X31
	0x03D88B04 BL 0x3DFED98
	0x03D88B08 CBZ X20, 0x3D890AC
	0x03D88B0C LDR X9, [X20]
	0x03D88B10 MOV X8, X1
	0x03D88B14 LDR X1, [X23]
	0x03D88B18 MOV X21, X0
	0x03D88B1C LDRH W10, [X9 + 0x12E]
	0x03D88B20 AND X22, X8, 0x0
	0x03D88B24 CBZ X10, 0x3D88B48
	0x03D88B28 LDR X8, [X9 + 0xB0]
	0x03D88B2C ADD X8, X8, 0x8
	0x03D88B30 LDUR X11, [X8 - 0x8]
	0x03D88B34 CMP X11, X1
	0x03D88B38 B.EQ 0x3D88B58
	0x03D88B3C SUBS X10, X10, 0x1
	0x03D88B40 ADD X8, X8, 0x10
	0x03D88B44 B.NE 0x3D88B30
	0x03D88B48 MOVZ W2, 0x19
	0x03D88B4C MOV X0, X20
	0x03D88B50 BL 0x1C5C788
	0x03D88B54 B 0x3D88B68
	0x03D88B58 LDR W8, [X8]
	0x03D88B5C ADD W8, W8, 0x19
	0x03D88B60 ADD X8, X9, W8, 0x4, SXTW
	0x03D88B64 ADD X0, X8, 0x138
	0x03D88B68 LDP X8, X3, [X0]
	0x03D88B6C MOV X0, X20
	0x03D88B70 MOV X1, X21
	0x03D88B74 MOV X2, X22
	0x03D88B78 BLR X8
	0x03D88B7C LDR X0, [X19 + 0x3F8]
	0x03D88B80 CBZ X0, 0x3D890AC
	0x03D88B84 MOV X1, X31
	0x03D88B88 BL 0x3DE7EEC
	0x03D88B8C MOV X20, X0
	0x03D88B90 FMOV S0, W31
	0x03D88B94 MOV X0, X31
	0x03D88B98 BL 0x3DFED98
	0x03D88B9C CBZ X20, 0x3D890AC
	0x03D88BA0 LDR X9, [X20]
	0x03D88BA4 MOV X8, X1
	0x03D88BA8 LDR X1, [X23]
	0x03D88BAC MOV X21, X0
	0x03D88BB0 LDRH W10, [X9 + 0x12E]
	0x03D88BB4 AND X22, X8, 0x0
	0x03D88BB8 CBZ X10, 0x3D88BDC
	0x03D88BBC LDR X8, [X9 + 0xB0]
	0x03D88BC0 ADD X8, X8, 0x8
	0x03D88BC4 LDUR X11, [X8 - 0x8]
	0x03D88BC8 CMP X11, X1
	0x03D88BCC B.EQ 0x3D88BEC
	0x03D88BD0 SUBS X10, X10, 0x1
	0x03D88BD4 ADD X8, X8, 0x10
	0x03D88BD8 B.NE 0x3D88BC4
	0x03D88BDC MOVZ W2, 0x2D
	0x03D88BE0 MOV X0, X20
	0x03D88BE4 BL 0x1C5C788
	0x03D88BE8 B 0x3D88BFC
	0x03D88BEC LDR W8, [X8]
	0x03D88BF0 ADD W8, W8, 0x2D
	0x03D88BF4 ADD X8, X9, W8, 0x4, SXTW
	0x03D88BF8 ADD X0, X8, 0x138
	0x03D88BFC LDP X8, X3, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x660000
	007 Move X21, 0x394000
	008 Move W8, [X20+3587]
	009 Move X21, [X21+2200]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x3E0000
	016 Move X0, [X0+1856]
	017 Call 0x1C17CF4
	018 Move X0, 0x394000
	019 Move X0, [X0+2200]
	020 Call 0x1C17CF4
	021 Move X0, 0x3E0000
	022 Move X0, [X0+1864]
	023 Call 0x1C17CF4
	024 Move X0, 0x3E0000
	025 Move X0, [X0+1872]
	026 Call 0x1C17CF4
	027 Move X0, 0x3E0000
	028 Move X0, [X0+248]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3587], W8
	032 Move W8, 0xBF800000
	033 Move [X31+8], X31
	034 Move [X19+1000], W8
	035 Move X0, [X21]
	036 Move X22, 0x3E0000
	037 Move W8, [X0+224]
	038 Move X22, [X22+1856]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X19
	043 Move X1, X31
	044 Call VisualElement..ctor, X0
	045 Move X0, [X22]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Move X8, [X0+184]
	052 Move X0, X19
	053 Move X2, X31
	054 Move X1, [X8]
	055 Call VisualElement.AddToClassList, X0, X1
	056 Move X0, [X21]
	057 Call 0x1C17F10
	058 Move X1, X31
	059 Move X20, X0
	060 Call VisualElement..ctor, X0
	061 Move [X19+1032], X20
	062 Compare X20, 0
	063 JumpIfEqual {146}
	064 Move X8, 0x3E0000
	065 Move X8, [X8+248]
	066 Move X0, X20
	067 Move X2, X31
	068 Move X1, [X8]
	069 Call VisualElement.set_name, X0, X1
	070 Move X0, [X19+1032]
	071 Compare X0, 0
	072 JumpIfEqual {146}
	073 Move X8, [X22]
	074 Move X2, X31
	075 Move X8, [X8+184]
	076 Move X1, [X8+8]
	077 Call VisualElement.AddToClassList, X0, X1
	078 Move X8, [X19+888]
	079 Add X0, X31, 8
	080 Move X2, X31
	081 Move [X31+8], X8
	082 Move X1, [X19+1032]
	083 Call Hierarchy.Add, X0, X1
	084 Move X0, [X21]
	085 Call 0x1C17F10
	086 Move X1, X31
	087 Move X20, X0
	088 Call VisualElement..ctor, X0
	089 Move [X19+1016], X20
	090 Compare X20, 0
	091 JumpIfEqual {146}
	092 Move X8, 0x3E0000
	093 Move X8, [X8+1872]
	094 Move X0, X20
	095 Move X2, X31
	096 Move X1, [X8]
	097 Call VisualElement.set_name, X0, X1
	098 Move X0, [X19+1016]
	099 Compare X0, 0
	100 JumpIfEqual {146}
	101 Move X8, [X22]
	102 Move X2, X31
	103 Move X8, [X8+184]
	104 Move X1, [X8+40]
	105 Call VisualElement.AddToClassList, X0, X1
	106 Move X8, [X19+888]
	107 Add X0, X31, 8
	108 Move X2, X31
	109 Move [X31+8], X8
	110 Move X1, [X19+1016]
	111 Call Hierarchy.Add, X0, X1
	112 Move X0, [X21]
	113 Call 0x1C17F10
	114 Move X1, X31
	115 Move X20, X0
	116 Call VisualElement..ctor, X0
	117 Move [X19+1008], X20
	118 Compare X20, 0
	119 JumpIfEqual {146}
	120 Move X8, 0x3E0000
	121 Move X8, [X8+1864]
	122 Move X0, X20
	123 Move X2, X31
	124 Move X1, [X8]
	125 Call VisualElement.set_name, X0, X1
	126 Move X0, [X19+1008]
	127 Compare X0, 0
	128 JumpIfEqual {146}
	129 Move X8, [X22]
	130 Move X2, X31
	131 Move X8, [X8+184]
	132 Move X1, [X8+16]
	133 Call VisualElement.AddToClassList, X0, X1
	134 Move X0, [X19+1016]
	135 Compare X0, 0
	136 JumpIfEqual {146}
	137 Move X1, [X19+1008]
	138 Move X2, X31
	139 Call VisualElement.Add, X0, X1
	140 Move X20, [X31+32]
	141 Move X19, [X31+40]
	142 Move X22, [X31+16]
	143 Move X21, [X31+24]
	144 Move X30, [X31+48]
	145 Return 
	146 Call 0x1C17F20

Method: System.Void Init(System.Int32 fixedPaneIndex, System.Single fixedPaneInitialDimension, UnityEngine.UIElements.TwoPaneSplitViewOrientation orientation)

Disassembly:
	0x03D88C00 MOV X0, X20
	0x03D88C04 MOV X1, X21
	0x03D88C08 MOV X2, X22
	0x03D88C0C BLR X8
	0x03D88C10 LDR X0, [X19 + 0x3D8]
	0x03D88C14 CBZ X0, 0x3D890AC
	0x03D88C18 LDR W21, [X19 + 0x410]
	0x03D88C1C MOV X1, X31
	0x03D88C20 BL 0x3DE0EB8
	0x03D88C24 CBZ X0, 0x3D890AC
	0x03D88C28 ADRP X22, 0x394000
	0x03D88C2C LDR X8, [X0]
	0x03D88C30 LDR X22, [X22 + 0x120]
	0x03D88C34 MOV X20, X0
	0x03D88C38 LDRH W9, [X8 + 0x12E]
	0x03D88C3C LDR X1, [X22]
	0x03D88C40 CBZ W21, 0x3D88C78
	0x03D88C44 CBZ W9, 0x3D88C68
	0x03D88C48 LDR X10, [X8 + 0xB0]
	0x03D88C4C ADD X10, X10, 0x8
	0x03D88C50 LDUR X11, [X10 - 0x8]
	0x03D88C54 CMP X11, X1
	0x03D88C58 B.EQ 0x3D88CAC
	0x03D88C5C SUBS X9, X9, 0x1
	0x03D88C60 ADD X10, X10, 0x10
	0x03D88C64 B.NE 0x3D88C50
	0x03D88C68 MOVZ W2, 0x18
	0x03D88C6C MOV X0, X20
	0x03D88C70 BL 0x1C5C788
	0x03D88C74 B 0x3D88CBC
	0x03D88C78 CBZ W9, 0x3D88C9C
	0x03D88C7C LDR X10, [X8 + 0xB0]
	0x03D88C80 ADD X10, X10, 0x8
	0x03D88C84 LDUR X11, [X10 - 0x8]
	0x03D88C88 CMP X11, X1
	0x03D88C8C B.EQ 0x3D88E44
	0x03D88C90 SUBS X9, X9, 0x1
	0x03D88C94 ADD X10, X10, 0x10
	0x03D88C98 B.NE 0x3D88C84
	0x03D88C9C MOVZ W2, 0x16
	0x03D88CA0 MOV X0, X20
	0x03D88CA4 BL 0x1C5C788
	0x03D88CA8 B 0x3D88E54
	0x03D88CAC LDR W9, [X10]
	0x03D88CB0 ADD W9, W9, 0x18
	0x03D88CB4 ADD X8, X8, W9, 0x4, SXTW
	0x03D88CB8 ADD X0, X8, 0x138
	0x03D88CBC LDP X8, X1, [X0]
	0x03D88CC0 MOV X0, X20
	0x03D88CC4 BLR X8
	0x03D88CC8 LDR X0, [X19 + 0x3D8]
	0x03D88CCC CBZ X0, 0x3D890AC
	0x03D88CD0 MOV X1, X31
	0x03D88CD4 MOV V9.16B, V0.16B
	0x03D88CD8 BL 0x3DE0EB8
	0x03D88CDC CBZ X0, 0x3D890AC
	0x03D88CE0 LDR X8, [X0]
	0x03D88CE4 LDR X1, [X22]
	0x03D88CE8 MOV X20, X0
	0x03D88CEC LDRH W9, [X8 + 0x12E]
	0x03D88CF0 CBZ X9, 0x3D88D14
	0x03D88CF4 LDR X10, [X8 + 0xB0]
	0x03D88CF8 ADD X10, X10, 0x8
	0x03D88CFC LDUR X11, [X10 - 0x8]
	0x03D88D00 CMP X11, X1
	0x03D88D04 B.EQ 0x3D88D24
	0x03D88D08 SUBS X9, X9, 0x1
	0x03D88D0C ADD X10, X10, 0x10
	0x03D88D10 B.NE 0x3D88CFC
	0x03D88D14 MOVZ W2, 0x15
	0x03D88D18 MOV X0, X20
	0x03D88D1C BL 0x1C5C788
	0x03D88D20 B 0x3D88D34
	0x03D88D24 LDR W9, [X10]
	0x03D88D28 ADD W9, W9, 0x15
	0x03D88D2C ADD X8, X8, W9, 0x4, SXTW
	0x03D88D30 ADD X0, X8, 0x138
	0x03D88D34 LDP X8, X1, [X0]
	0x03D88D38 MOV X0, X20
	0x03D88D3C BLR X8
	0x03D88D40 LDR X0, [X19 + 0x3F8]
	0x03D88D44 CBZ X0, 0x3D890AC
	0x03D88D48 MOV X1, X31
	0x03D88D4C FADD S9, S9, S0
	0x03D88D50 BL 0x3DE7EEC
	0x03D88D54 LDR W8, [X19 + 0x414]
	0x03D88D58 CMP W8, 0x0
	0x03D88D5C CSEL X20, X31, X0, EQ
	0x03D88D60 CBZ W8, 0x3D88DB8
	0x03D88D64 MOV X0, X19
	0x03D88D68 MOV X1, X31
	0x03D88D6C BL 0x3DE0EB8
	0x03D88D70 CBZ X0, 0x3D890AC
	0x03D88D74 LDR X8, [X0]
	0x03D88D78 LDR X1, [X22]
	0x03D88D7C MOV X21, X0
	0x03D88D80 LDRH W9, [X8 + 0x12E]
	0x03D88D84 CBZ X9, 0x3D88DA8
	0x03D88D88 LDR X10, [X8 + 0xB0]
	0x03D88D8C ADD X10, X10, 0x8
	0x03D88D90 LDUR X11, [X10 - 0x8]
	0x03D88D94 CMP X11, X1
	0x03D88D98 B.EQ 0x3D88DC4
	0x03D88D9C SUBS X9, X9, 0x1
	0x03D88DA0 ADD X10, X10, 0x10
	0x03D88DA4 B.NE 0x3D88D90
	0x03D88DA8 MOVZ W2, 0x13
	0x03D88DAC MOV X0, X21
	0x03D88DB0 BL 0x1C5C788
	0x03D88DB4 B 0x3D88DD4
	0x03D88DB8 FADD S0, S8, S9
	0x03D88DBC MOV X20, X0
	0x03D88DC0 B 0x3D88DE8
	0x03D88DC4 LDR W9, [X10]
	0x03D88DC8 ADD W9, W9, 0x13
	0x03D88DCC ADD X8, X8, W9, 0x4, SXTW
	0x03D88DD0 ADD X0, X8, 0x138
	0x03D88DD4 LDP X8, X1, [X0]
	0x03D88DD8 MOV X0, X21
	0x03D88DDC BLR X8
	0x03D88DE0 FSUB S0, S0, S8
	0x03D88DE4 FSUB S0, S0, S9
	0x03D88DE8 MOV X0, X31
	0x03D88DEC BL 0x3DFED98
	0x03D88DF0 CBZ X20, 0x3D890AC
	0x03D88DF4 LDR X9, [X20]
	0x03D88DF8 MOV X8, X1
	0x03D88DFC LDR X1, [X23]
	0x03D88E00 MOV X21, X0
	0x03D88E04 LDRH W10, [X9 + 0x12E]
	0x03D88E08 AND X22, X8, 0x0
	0x03D88E0C CBZ X10, 0x3D88E30
	0x03D88E10 LDR X8, [X9 + 0xB0]
	0x03D88E14 ADD X8, X8, 0x8
	0x03D88E18 LDUR X11, [X8 - 0x8]
	0x03D88E1C CMP X11, X1
	0x03D88E20 B.EQ 0x3D88E38
	0x03D88E24 SUBS X10, X10, 0x1
	0x03D88E28 ADD X8, X8, 0x10
	0x03D88E2C B.NE 0x3D88E18
	0x03D88E30 MOVZ W2, 0x2D
	0x03D88E34 B 0x3D88FCC
	0x03D88E38 LDR W8, [X8]
	0x03D88E3C ADD W8, W8, 0x2D
	0x03D88E40 B 0x3D88FE0
	0x03D88E44 LDR W9, [X10]
	0x03D88E48 ADD W9, W9, 0x16
	0x03D88E4C ADD X8, X8, W9, 0x4, SXTW
	0x03D88E50 ADD X0, X8, 0x138
	0x03D88E54 LDP X8, X1, [X0]
	0x03D88E58 MOV X0, X20
	0x03D88E5C BLR X8
	0x03D88E60 LDR X0, [X19 + 0x3D8]
	0x03D88E64 CBZ X0, 0x3D890AC
	0x03D88E68 MOV X1, X31
	0x03D88E6C MOV V9.16B, V0.16B
	0x03D88E70 BL 0x3DE0EB8
	0x03D88E74 CBZ X0, 0x3D890AC
	0x03D88E78 LDR X8, [X0]
	0x03D88E7C LDR X1, [X22]
	0x03D88E80 MOV X20, X0
	0x03D88E84 LDRH W9, [X8 + 0x12E]
	0x03D88E88 CBZ X9, 0x3D88EAC
	0x03D88E8C LDR X10, [X8 + 0xB0]
	0x03D88E90 ADD X10, X10, 0x8
	0x03D88E94 LDUR X11, [X10 - 0x8]
	0x03D88E98 CMP X11, X1
	0x03D88E9C B.EQ 0x3D88EBC
	0x03D88EA0 SUBS X9, X9, 0x1
	0x03D88EA4 ADD X10, X10, 0x10
	0x03D88EA8 B.NE 0x3D88E94
	0x03D88EAC MOVZ W2, 0x17
	0x03D88EB0 MOV X0, X20
	0x03D88EB4 BL 0x1C5C788
	0x03D88EB8 B 0x3D88ECC
	0x03D88EBC LDR W9, [X10]
	0x03D88EC0 ADD W9, W9, 0x17
	0x03D88EC4 ADD X8, X8, W9, 0x4, SXTW
	0x03D88EC8 ADD X0, X8, 0x138
	0x03D88ECC LDP X8, X1, [X0]
	0x03D88ED0 MOV X0, X20
	0x03D88ED4 BLR X8

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x660000
	009 Move X22, 0x3E0000
	010 Move W8, [X23+3588]
	011 Move X22, [X22+1856]
	012 Move W20, W2
	013 Move V8, V0
	014 Move W21, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x396000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x396000
	024 Move X0, [X0+1632]
	025 Call 0x1C17CF4
	026 Move X0, 0x3E0000
	027 Move X0, [X0+1880]
	028 Call 0x1C17CF4
	029 Move X0, 0x3E0000
	030 Move X0, [X0+1856]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+3588], W8
	034 Move [X19+1040], W20
	035 Move [X19+1044], W21
	036 Move [X19+1048], S8
	037 Move X0, [X22]
	038 Move X20, [X19+1032]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Compare X20, 0
	044 JumpIfEqual {213}
	045 Move X8, [X22]
	046 Move X0, X20
	047 Move X2, X31
	048 Move X8, [X8+184]
	049 Move X1, [X8+72]
	050 Call VisualElement.RemoveFromClassList, X0, X1
	051 Move X0, [X19+1032]
	052 Compare X0, 0
	053 JumpIfEqual {213}
	054 Move X8, [X22]
	055 Move X2, X31
	056 Move X8, [X8+184]
	057 Move X1, [X8+64]
	058 Call VisualElement.RemoveFromClassList, X0, X1
	059 Move X0, [X22]
	060 Move W21, [X19+1040]
	061 Move X20, [X19+1032]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move X0, [X22]
	067 Move X8, [X0+184]
	068 Compare W21, 0
	069 JumpIfEqual {73}
	070 Compare X20, 0
	071 JumpIfEqual {213}
	072 Move W9, 64
	073 Compare X20, 0
	074 JumpIfEqual {213}
	075 Move W9, 72
	076 Move X1, [X8]
	077 Move X0, X20
	078 Move X2, X31
	079 Call VisualElement.AddToClassList, X0, X1
	080 Move X0, [X22]
	081 Move X20, [X19+1016]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Compare X20, 0
	087 JumpIfEqual {213}
	088 Move X8, [X22]
	089 Move X0, X20
	090 Move X2, X31
	091 Move X8, [X8+184]
	092 Move X1, [X8+56]
	093 Call VisualElement.RemoveFromClassList, X0, X1
	094 Move X0, [X19+1016]
	095 Compare X0, 0
	096 JumpIfEqual {213}
	097 Move X8, [X22]
	098 Move X2, X31
	099 Move X8, [X8+184]
	100 Move X1, [X8+48]
	101 Call VisualElement.RemoveFromClassList, X0, X1
	102 Move X0, [X22]
	103 Move W21, [X19+1040]
	104 Move X20, [X19+1016]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {110}
	108 Call 0x1C17DFC
	109 Move X0, [X22]
	110 Move X8, [X0+184]
	111 Compare W21, 0
	112 JumpIfEqual {116}
	113 Compare X20, 0
	114 JumpIfEqual {213}
	115 Move W9, 48
	116 Compare X20, 0
	117 JumpIfEqual {213}
	118 Move W9, 56
	119 Move X1, [X8]
	120 Move X0, X20
	121 Move X2, X31
	122 Call VisualElement.AddToClassList, X0, X1
	123 Move X0, [X22]
	124 Move X20, [X19+1008]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Compare X20, 0
	130 JumpIfEqual {213}
	131 Move X8, [X22]
	132 Move X0, X20
	133 Move X2, X31
	134 Move X8, [X8+184]
	135 Move X1, [X8+32]
	136 Call VisualElement.RemoveFromClassList, X0, X1
	137 Move X0, [X19+1008]
	138 Compare X0, 0
	139 JumpIfEqual {213}
	140 Move X8, [X22]
	141 Move X2, X31
	142 Move X8, [X8+184]
	143 Move X1, [X8+24]
	144 Call VisualElement.RemoveFromClassList, X0, X1
	145 Move X0, [X22]
	146 Move W21, [X19+1040]
	147 Move X20, [X19+1008]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {153}
	151 Call 0x1C17DFC
	152 Move X0, [X22]
	153 Move X8, [X0+184]
	154 Compare W21, 0
	155 JumpIfEqual {159}
	156 Compare X20, 0
	157 JumpIfEqual {213}
	158 Move W9, 24
	159 Compare X20, 0
	160 JumpIfEqual {213}
	161 Move W9, 32
	162 Move X1, [X8]
	163 Move X0, X20
	164 Move X2, X31
	165 Call VisualElement.AddToClassList, X0, X1
	166 Move X1, [X19+1056]
	167 Compare X1, 0
	168 JumpIfEqual {173}
	169 Move X0, [X19+1016]
	170 Move X2, X31
	171 Call VisualElementExtensions.RemoveManipulator, X0, X1
	172 Move [X19+1056], X31
	173 Move X0, [X19+1032]
	174 Compare X0, 0
	175 JumpIfEqual {213}
	176 Move X1, X31
	177 Call VisualElement.get_childCount, X0
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, X19
	180 Move X20, [X31+48]
	181 Move X19, [X31+56]
	182 Move X22, [X31+32]
	183 Move X21, [X31+40]
	184 Move X30, [X31+16]
	185 Move X23, [X31+24]
	186 Move V8, [X31+64]
	187 Move X8, 0x396000
	188 Move X8, [X8+1632]
	189 Move X0, [X8]
	190 Call 0x1C17F10
	191 Move X8, 0x3E0000
	192 Move X8, [X8+1880]
	193 Move X1, X19
	194 Move X3, X31
	195 Move X20, X0
	196 Move X2, [X8]
	197 Call 0x2D0F824, X0, X1, X2
	198 Move X8, 0x396000
	199 Move X8, [X8+1624]
	200 Move X0, X19
	201 Move X1, X20
	202 Move X20, [X31+48]
	203 Move X19, [X31+56]
	204 Move X3, [X8]
	205 Move X22, [X31+32]
	206 Move X21, [X31+40]
	207 Move X30, [X31+16]
	208 Move X23, [X31+24]
	209 Move W2, W31
	210 Move V8, [X31+64]
	211 Call 0x21A2534, X0, X1, X2
	212 Return 
	213 Call 0x1C17F20

Method: System.Void OnPostDisplaySetup(UnityEngine.UIElements.GeometryChangedEvent evt)

Disassembly:
	0x03D8A0B0 STR X9, [X8 + 0x48]
	0x03D8A0B4 LDR X30, [X31], #0x60
	0x03D8A0B8 RET
	0x03D8A0BC STP X30, X21, [X31 - 0x20]!
	0x03D8A0C0 STP X20, X19, [X31 + 0x10]
	0x03D8A0C4 ADRP X20, 0x65D000
	0x03D8A0C8 ADRP X21, 0x3DD000
	0x03D8A0CC LDRB W8, [X20 + 0xE0B]
	0x03D8A0D0 LDR X21, [X21 + 0x7A8]
	0x03D8A0D4 MOV X19, X0
	0x03D8A0D8 TBNZ X8, 0x0, 0x3D8A0F0
	0x03D8A0DC ADRP X0, 0x3DD000
	0x03D8A0E0 LDR X0, [X0 + 0x7A8]
	0x03D8A0E4 BL 0x1C16CF4
	0x03D8A0E8 MOVZ W8, 0x1
	0x03D8A0EC STRB W8, [X20 + 0xE0B]
	0x03D8A0F0 LDR X1, [X21]
	0x03D8A0F4 MOV X0, X19
	0x03D8A0F8 LDP X20, X19, [X31 + 0x10]
	0x03D8A0FC LDP X30, X21, [X31], #0x20
	0x03D8A100 B 0x2736468
	0x03D8A104 SUB X31, X31, 0xE0
	0x03D8A108 STR X30, [X31 + 0xA0]
	0x03D8A10C STP X24, X23, [X31 + 0xB0]
	0x03D8A110 STP X22, X21, [X31 + 0xC0]
	0x03D8A114 STP X20, X19, [X31 + 0xD0]
	0x03D8A118 ADRP X23, 0x65D000
	0x03D8A11C LDRB W8, [X23 + 0xE0C]
	0x03D8A120 MOV X21, X3
	0x03D8A124 MOV X20, X2
	0x03D8A128 MOV X19, X1
	0x03D8A12C MOV X22, X0
	0x03D8A130 TBNZ X8, 0x0, 0x3D8A148
	0x03D8A134 ADRP X0, 0x3DD000
	0x03D8A138 LDR X0, [X0 + 0x740]
	0x03D8A13C BL 0x1C16CF4
	0x03D8A140 MOVZ W8, 0x1
	0x03D8A144 STRB W8, [X23 + 0xE0C]
	0x03D8A148 LDP V1, V0, [X21]
	0x03D8A14C ADD X3, X31, 0x60
	0x03D8A150 MOV X0, X22
	0x03D8A154 MOV X1, X19
	0x03D8A158 MOV X2, X20
	0x03D8A15C MOV X4, X31
	0x03D8A160 STP V1, V0, [X31 + 0x60]
	0x03D8A164 BL 0x3DF81FC
	0x03D8A168 LDP V0, V1, [X21]
	0x03D8A16C LDR X0, [X22 + 0x70]
	0x03D8A170 STP V0, V1, [X31 + 0x40]
	0x03D8A174 CBZ X0, 0x3D8A264
	0x03D8A178 LDR X8, [X0]
	0x03D8A17C LDP V0, V1, [X31 + 0x40]
	0x03D8A180 ADD X2, X31, 0x80
	0x03D8A184 MOV X1, X20
	0x03D8A188 LDR X9, [X8 + 0x178]
	0x03D8A18C STP V0, V1, [X31 + 0x80]
	0x03D8A190 LDR X3, [X8 + 0x180]
	0x03D8A194 BLR X9
	0x03D8A198 MOV W23, W0
	0x03D8A19C LDP V0, V1, [X21]
	0x03D8A1A0 LDR X0, [X22 + 0x78]
	0x03D8A1A4 STP V0, V1, [X31 + 0x20]
	0x03D8A1A8 CBZ X0, 0x3D8A264
	0x03D8A1AC LDR X8, [X0]
	0x03D8A1B0 LDP V0, V1, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x65E000
	005 Move W8, [X20+3589]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {28}
	011 Move X0, 0x394000
	012 Move X0, [X0+1688]
	013 Call 0x1C17CF4
	014 Move X0, 0x36A000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x394000
	018 Move X0, [X0+1632]
	019 Call 0x1C17CF4
	020 Move X0, 0x3DE000
	021 Move X0, [X0+1880]
	022 Call 0x1C17CF4
	023 Move X0, 0x3DE000
	024 Move X0, [X0+1904]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3589], W8
	028 Move X0, [X19+1032]
	029 Compare X0, 0
	030 JumpIfEqual {74}
	031 Move X1, X31
	032 Call VisualElement.get_childCount, X0
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Call TwoPaneSplitView.PostDisplaySetup, X0
	036 Move X8, 0x394000
	037 Move X8, [X8+1632]
	038 Move X0, [X8]
	039 Call 0x1C17F10
	040 Move X8, 0x3DE000
	041 Move X8, [X8+1880]
	042 Move X1, X19
	043 Move X3, X31
	044 Move X20, X0
	045 Move X2, [X8]
	046 Call 0x2D0F824, X0, X1, X2
	047 Move X8, 0x394000
	048 Move X8, [X8+1688]
	049 Move X0, X19
	050 Move X1, X20
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X3, [X8]
	054 Move W2, W31
	055 Move X30, [X31+32]
	056 Call 0x21A28B4, X0, X1, X2
	057 Return 
	058 Move X8, 0x36A000
	059 Move X8, [X8+2600]
	060 Move X0, [X8]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X8, 0x3DE000
	066 Move X8, [X8+1904]
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X1, X31
	070 Move X0, [X8]
	071 Move X30, [X31+32]
	072 Call Debug.LogError, X0
	073 Return 
	074 Call 0x1C17F20

Method: System.Void PostDisplaySetup()

Disassembly:
	0x03D88ED8 LDR X0, [X19 + 0x3F8]
	0x03D88EDC CBZ X0, 0x3D890AC
	0x03D88EE0 MOV X1, X31
	0x03D88EE4 FADD S9, S9, S0
	0x03D88EE8 BL 0x3DE7EEC
	0x03D88EEC LDR W8, [X19 + 0x414]
	0x03D88EF0 CMP W8, 0x0
	0x03D88EF4 CSEL X20, X31, X0, EQ
	0x03D88EF8 CBZ W8, 0x3D88F50
	0x03D88EFC MOV X0, X19
	0x03D88F00 MOV X1, X31
	0x03D88F04 BL 0x3DE0EB8
	0x03D88F08 CBZ X0, 0x3D890AC
	0x03D88F0C LDR X8, [X0]
	0x03D88F10 LDR X1, [X22]
	0x03D88F14 MOV X21, X0
	0x03D88F18 LDRH W9, [X8 + 0x12E]
	0x03D88F1C CBZ X9, 0x3D88F40
	0x03D88F20 LDR X10, [X8 + 0xB0]
	0x03D88F24 ADD X10, X10, 0x8
	0x03D88F28 LDUR X11, [X10 - 0x8]
	0x03D88F2C CMP X11, X1
	0x03D88F30 B.EQ 0x3D88F5C
	0x03D88F34 SUBS X9, X9, 0x1
	0x03D88F38 ADD X10, X10, 0x10
	0x03D88F3C B.NE 0x3D88F28
	0x03D88F40 MOVZ W2, 0x2C
	0x03D88F44 MOV X0, X21
	0x03D88F48 BL 0x1C5C788
	0x03D88F4C B 0x3D88F6C
	0x03D88F50 FADD S0, S8, S9
	0x03D88F54 MOV X20, X0
	0x03D88F58 B 0x3D88F80
	0x03D88F5C LDR W9, [X10]
	0x03D88F60 ADD W9, W9, 0x2C
	0x03D88F64 ADD X8, X8, W9, 0x4, SXTW
	0x03D88F68 ADD X0, X8, 0x138
	0x03D88F6C LDP X8, X1, [X0]
	0x03D88F70 MOV X0, X21
	0x03D88F74 BLR X8
	0x03D88F78 FSUB S0, S0, S8
	0x03D88F7C FSUB S0, S0, S9
	0x03D88F80 MOV X0, X31
	0x03D88F84 BL 0x3DFED98
	0x03D88F88 CBZ X20, 0x3D890AC
	0x03D88F8C LDR X9, [X20]
	0x03D88F90 MOV X8, X1
	0x03D88F94 LDR X1, [X23]
	0x03D88F98 MOV X21, X0
	0x03D88F9C LDRH W10, [X9 + 0x12E]
	0x03D88FA0 AND X22, X8, 0x0
	0x03D88FA4 CBZ X10, 0x3D88FC8
	0x03D88FA8 LDR X8, [X9 + 0xB0]
	0x03D88FAC ADD X8, X8, 0x8
	0x03D88FB0 LDUR X11, [X8 - 0x8]
	0x03D88FB4 CMP X11, X1
	0x03D88FB8 B.EQ 0x3D88FD8
	0x03D88FBC SUBS X10, X10, 0x1
	0x03D88FC0 ADD X8, X8, 0x10
	0x03D88FC4 B.NE 0x3D88FB0
	0x03D88FC8 MOVZ W2, 0x19
	0x03D88FCC MOV X0, X20
	0x03D88FD0 BL 0x1C5C788
	0x03D88FD4 B 0x3D88FE8
	0x03D88FD8 LDR W8, [X8]
	0x03D88FDC ADD W8, W8, 0x19
	0x03D88FE0 ADD X8, X9, W8, 0x4, SXTW
	0x03D88FE4 ADD X0, X8, 0x138
	0x03D88FE8 LDP X8, X3, [X0]
	0x03D88FEC MOV X0, X20
	0x03D88FF0 MOV X1, X21
	0x03D88FF4 MOV X2, X22
	0x03D88FF8 BLR X8
	0x03D88FFC LDR W8, [X19 + 0x414]
	0x03D89000 LDR X1, [X19 + 0x420]
	0x03D89004 CMP W8, 0x0
	0x03D89008 MOVZ W8, 0x1
	0x03D8900C CSNEG W20, W8, W8, EQ
	0x03D89010 CBZ X1, 0x3D89020
	0x03D89014 LDR X0, [X19 + 0x3F8]
	0x03D89018 MOV X2, X31
	0x03D8901C BL 0x3D16B2C
	0x03D89020 ADRP X8, 0x3DE000
	0x03D89024 LDR X8, [X8 + 0x760]
	0x03D89028 LDR X0, [X8]
	0x03D8902C BL 0x1C16F10
	0x03D89030 MOV X1, X19
	0x03D89034 MOV W2, W20
	0x03D89038 MOV X21, X0
	0x03D8903C BL 0x3D891B4
	0x03D89040 LDR X0, [X19 + 0x3F8]
	0x03D89044 MOV X1, X21
	0x03D89048 MOV X2, X31
	0x03D8904C STR X21, [X19 + 0x420]
	0x03D89050 BL 0x3D16A80
	0x03D89054 ADRP X8, 0x394000
	0x03D89058 LDR X8, [X8 + 0x660]
	0x03D8905C LDR X0, [X8]
	0x03D89060 BL 0x1C16F10
	0x03D89064 ADRP X8, 0x3DE000
	0x03D89068 LDR X8, [X8 + 0x768]
	0x03D8906C MOV X1, X19
	0x03D89070 MOV X3, X31
	0x03D89074 MOV X20, X0
	0x03D89078 LDR X2, [X8]
	0x03D8907C BL 0x2D0E824
	0x03D89080 ADRP X8, 0x394000
	0x03D89084 LDR X8, [X8 + 0x658]
	0x03D89088 MOV X0, X19
	0x03D8908C MOV X1, X20
	0x03D89090 LDP X20, X19, [X31 + 0x30]
	0x03D89094 LDR X3, [X8]
	0x03D89098 LDP X22, X21, [X31 + 0x20]
	0x03D8909C LDP X30, X23, [X31 + 0x10]
	0x03D890A0 MOV W2, W31
	0x03D890A4 LDP D9, D8, [X31], #0x40
	0x03D890A8 B 0x21A1534
	0x03D890AC BL 0x1C16F20
	0x03D890B0 STR X30, [X31 - 0x20]!
	0x03D890B4 STP X20, X19, [X31 + 0x10]
	0x03D890B8 ADRP X20, 0x65E000
	0x03D890BC LDRB W8, [X20 + 0xE05]
	0x03D890C0 MOV X19, X0
	0x03D890C4 TBNZ X8, 0x0, 0x3D8910C
	0x03D890C8 ADRP X0, 0x394000
	0x03D890CC LDR X0, [X0 + 0x698]
	0x03D890D0 BL 0x1C16CF4
	0x03D890D4 ADRP X0, 0x36A000
	0x03D890D8 LDR X0, [X0 + 0xA28]
	0x03D890DC BL 0x1C16CF4
	0x03D890E0 ADRP X0, 0x394000
	0x03D890E4 LDR X0, [X0 + 0x660]
	0x03D890E8 BL 0x1C16CF4
	0x03D890EC ADRP X0, 0x3DE000
	0x03D890F0 LDR X0, [X0 + 0x758]
	0x03D890F4 BL 0x1C16CF4
	0x03D890F8 ADRP X0, 0x3DE000
	0x03D890FC LDR X0, [X0 + 0x770]
	0x03D89100 BL 0x1C16CF4
	0x03D89104 MOVZ W8, 0x1
	0x03D89108 STRB W8, [X20 + 0xE05]
	0x03D8910C LDR X0, [X19 + 0x408]
	0x03D89110 CBZ X0, 0x3D891B0
	0x03D89114 MOV X1, X31
	0x03D89118 BL 0x3DF630C
	0x03D8911C CMP W0, 0x2
	0x03D89120 B.NE 0x3D8917C
	0x03D89124 MOV X0, X19
	0x03D89128 BL 0x3D87ED8
	0x03D8912C ADRP X8, 0x394000
	0x03D89130 LDR X8, [X8 + 0x660]
	0x03D89134 LDR X0, [X8]
	0x03D89138 BL 0x1C16F10
	0x03D8913C ADRP X8, 0x3DE000
	0x03D89140 LDR X8, [X8 + 0x758]
	0x03D89144 MOV X1, X19
	0x03D89148 MOV X3, X31
	0x03D8914C MOV X20, X0
	0x03D89150 LDR X2, [X8]
	0x03D89154 BL 0x2D0E824
	0x03D89158 ADRP X8, 0x394000
	0x03D8915C LDR X8, [X8 + 0x698]
	0x03D89160 MOV X0, X19
	0x03D89164 MOV X1, X20
	0x03D89168 LDP X20, X19, [X31 + 0x10]
	0x03D8916C LDR X3, [X8]
	0x03D89170 MOV W2, W31
	0x03D89174 LDR X30, [X31], #0x20
	0x03D89178 B 0x21A18B4
	0x03D8917C ADRP X8, 0x36A000
	0x03D89180 LDR X8, [X8 + 0xA28]
	0x03D89184 LDR X0, [X8]
	0x03D89188 LDR W8, [X0 + 0xE0]
	0x03D8918C CBNZ W8, 0x3D89194
	0x03D89190 BL 0x1C16DFC
	0x03D89194 ADRP X8, 0x3DE000
	0x03D89198 LDR X8, [X8 + 0x770]
	0x03D8919C LDP X20, X19, [X31 + 0x10]
	0x03D891A0 MOV X1, X31
	0x03D891A4 LDR X0, [X8]
	0x03D891A8 LDR X30, [X31], #0x20
	0x03D891AC B 0x3C0649C
	0x03D891B0 BL 0x1C16F20
	0x03D891B4 STR X30, [X31 - 0x30]!
	0x03D891B8 STP X22, X21, [X31 + 0x10]
	0x03D891BC STP X20, X19, [X31 + 0x20]
	0x03D891C0 ADRP X22, 0x65E000
	0x03D891C4 LDRB W8, [X22 + 0xE12]
	0x03D891C8 MOV W20, W2
	0x03D891CC MOV X21, X1
	0x03D891D0 MOV X19, X0
	0x03D891D4 TBNZ X8, 0x0, 0x3D891EC
	0x03D891D8 ADRP X0, 0x3D9000
	0x03D891DC LDR X0, [X0 + 0x950]
	0x03D891E0 BL 0x1C16CF4
	0x03D891E4 MOVZ W8, 0x1
	0x03D891E8 STRB W8, [X22 + 0xE12]
	0x03D891EC MOV X0, X19
	0x03D891F0 MOV X1, X31
	0x03D891F4 BL 0x3DC096C
	0x03D891F8 LDR X0, [X19 + 0x18]
	0x03D891FC STR X21, [X19 + 0x40]
	0x03D89200 STR W20, [X19 + 0x48]
	0x03D89204 CBZ X0, 0x3D89280
	0x03D89208 ADRP X9, 0x3D9000
	0x03D8920C LDR X9, [X9 + 0x950]
	0x03D89210 LDR W10, [X0 + 0x1C]
	0x03D89214 LDR X8, [X0 + 0x10]
	0x03D89218 LDR X9, [X9]
	0x03D8921C ADD W10, W10, 0x1
	0x03D89220 STR W10, [X0 + 0x1C]
	0x03D89224 CBZ X8, 0x3D89280
	0x03D89228 LDRSW X10, [X0 + 0x18]
	0x03D8922C LDR W11, [X8 + 0x18]
	0x03D89230 CMP W10, W11
	0x03D89234 B.CS 0x3D89254
	0x03D89238 MOVZ W11, 0xC
	0x03D8923C ADD W9, W10, 0x1
	0x03D89240 MADD X8, X10, X11, X8
	0x03D89244 STR W9, [X0 + 0x18]
	0x03D89248 STR X31, [X8 + 0x20]
	0x03D8924C STR W31, [X8 + 0x28]
	0x03D89250 B 0x3D8926C
	0x03D89254 LDR X8, [X9 + 0x20]
	0x03D89258 MOV X1, X31
	0x03D8925C MOV X2, X31
	0x03D89260 LDR X8, [X8 + 0xC0]
	0x03D89264 LDR X3, [X8 + 0x70]
	0x03D89268 BL 0x2FF57C0
	0x03D8926C STRB W31, [X19 + 0x3C]
	0x03D89270 LDP X20, X19, [X31 + 0x20]
	0x03D89274 LDP X22, X21, [X31 + 0x10]
	0x03D89278 LDR X30, [X31], #0x30
	0x03D8927C RET
	0x03D89280 BL 0x1C16F20
	0x03D89284 MOVZ W1, 0x1
	0x03D89288 MOVZ W2, 0x1
	0x03D8928C B 0x3D89290
	0x03D89290 SUB X31, X31, 0x80
	0x03D89294 STP D15, D14, [X31 + 0x10]
	0x03D89298 STP D13, D12, [X31 + 0x20]
	0x03D8929C STP D11, D10, [X31 + 0x30]
	0x03D892A0 STP D9, D8, [X31 + 0x40]
	0x03D892A4 STP X30, X23, [X31 + 0x50]
	0x03D892A8 STP X22, X21, [X31 + 0x60]
	0x03D892AC STP X20, X19, [X31 + 0x70]
	0x03D892B0 ADRP X22, 0x65E000
	0x03D892B4 LDRB W8, [X22 + 0xE07]
	0x03D892B8 MOV W20, W2
	0x03D892BC MOV W21, W1
	0x03D892C0 MOV X19, X0
	0x03D892C4 TBNZ X8, 0x0, 0x3D892DC
	0x03D892C8 ADRP X0, 0x393000
	0x03D892CC LDR X0, [X0 + 0x120]
	0x03D892D0 BL 0x1C16CF4
	0x03D892D4 MOVZ W8, 0x1
	0x03D892D8 STRB W8, [X22 + 0xE07]
	0x03D892DC STR X31, [X31 + 0x8]
	0x03D892E0 LDRB W8, [X19 + 0x400]
	0x03D892E4 CBNZ W8, 0x3D89C64
	0x03D892E8 MOV X0, X19
	0x03D892EC MOV X1, X31
	0x03D892F0 BL 0x3DE0EB8
	0x03D892F4 CBZ X0, 0x3D89C88
	0x03D892F8 ADRP X23, 0x393000
	0x03D892FC LDR X8, [X0]
	0x03D89300 LDR X23, [X23 + 0x120]
	0x03D89304 MOV X22, X0
	0x03D89308 LDRH W9, [X8 + 0x12E]
	0x03D8930C LDR X1, [X23]
	0x03D89310 CBZ X9, 0x3D89334
	0x03D89314 LDR X10, [X8 + 0xB0]
	0x03D89318 ADD X10, X10, 0x8
	0x03D8931C LDUR X11, [X10 - 0x8]
	0x03D89320 CMP X11, X1
	0x03D89324 B.EQ 0x3D89344
	0x03D89328 SUBS X9, X9, 0x1
	0x03D8932C ADD X10, X10, 0x10
	0x03D89330 B.NE 0x3D8931C
	0x03D89334 MOVZ W2, 0xF
	0x03D89338 MOV X0, X22
	0x03D8933C BL 0x1C5C788
	0x03D89340 B 0x3D89354
	0x03D89344 LDR W9, [X10]
	0x03D89348 ADD W9, W9, 0xF
	0x03D8934C ADD X8, X8, W9, 0x4, SXTW
	0x03D89350 ADD X0, X8, 0x138
	0x03D89354 LDP X8, X1, [X0]
	0x03D89358 MOV X0, X22
	0x03D8935C BLR X8
	0x03D89360 CMP W0, 0x1
	0x03D89364 B.EQ 0x3D89C64
	0x03D89368 MOV X0, X19
	0x03D8936C MOV X1, X31
	0x03D89370 BL 0x3DE0EB8
	0x03D89374 CBZ X0, 0x3D89C88
	0x03D89378 LDR X8, [X0]
	0x03D8937C LDR X1, [X23]
	0x03D89380 MOV X22, X0
	0x03D89384 LDRH W9, [X8 + 0x12E]
	0x03D89388 CBZ X9, 0x3D893AC
	0x03D8938C LDR X10, [X8 + 0xB0]
	0x03D89390 ADD X10, X10, 0x8
	0x03D89394 LDUR X11, [X10 - 0x8]
	0x03D89398 CMP X11, X1
	0x03D8939C B.EQ 0x3D893BC
	0x03D893A0 SUBS X9, X9, 0x1
	0x03D893A4 ADD X10, X10, 0x10
	0x03D893A8 B.NE 0x3D89394
	0x03D893AC MOVZ W2, 0x2B
	0x03D893B0 MOV X0, X22
	0x03D893B4 BL 0x1C5C788
	0x03D893B8 B 0x3D893CC
	0x03D893BC LDR W9, [X10]
	0x03D893C0 ADD W9, W9, 0x2B
	0x03D893C4 ADD X8, X8, W9, 0x4, SXTW
	0x03D893C8 ADD X0, X8, 0x138
	0x03D893CC LDP X8, X1, [X0]
	0x03D893D0 MOV X0, X22
	0x03D893D4 BLR X8
	0x03D893D8 CMP W0, 0x1
	0x03D893DC B.EQ 0x3D89C64
	0x03D893E0 MOV X0, X19
	0x03D893E4 MOV X1, X31
	0x03D893E8 BL 0x3DE0EB8
	0x03D893EC CBZ X0, 0x3D89C88
	0x03D893F0 LDR X8, [X0]
	0x03D893F4 LDR X1, [X23]
	0x03D893F8 MOV X22, X0
	0x03D893FC LDRH W9, [X8 + 0x12E]
	0x03D89400 CBZ X9, 0x3D89424
	0x03D89404 LDR X10, [X8 + 0xB0]
	0x03D89408 ADD X10, X10, 0x8
	0x03D8940C LDUR X11, [X10 - 0x8]
	0x03D89410 CMP X11, X1
	0x03D89414 B.EQ 0x3D89434
	0x03D89418 SUBS X9, X9, 0x1
	0x03D8941C ADD X10, X10, 0x10
	0x03D89420 B.NE 0x3D8940C
	0x03D89424 MOVZ W2, 0x2C
	0x03D89428 MOV X0, X22
	0x03D8942C BL 0x1C5C788
	0x03D89430 B 0x3D89444
	0x03D89434 LDR W9, [X10]
	0x03D89438 ADD W9, W9, 0x2C
	0x03D8943C ADD X8, X8, W9, 0x4, SXTW
	0x03D89440 ADD X0, X8, 0x138
	0x03D89444 LDP X8, X1, [X0]
	0x03D89448 MOV X0, X22
	0x03D8944C BLR X8
	0x03D89450 LDR X0, [X19 + 0x3D8]
	0x03D89454 CBZ X0, 0x3D89C88
	0x03D89458 MOV X1, X31
	0x03D8945C MOV V8.16B, V0.16B
	0x03D89460 BL 0x3DE0EB8
	0x03D89464 CBZ X0, 0x3D89C88
	0x03D89468 LDR X8, [X0]
	0x03D8946C LDR X1, [X23]
	0x03D89470 MOV X22, X0
	0x03D89474 LDRH W9, [X8 + 0x12E]
	0x03D89478 CBZ X9, 0x3D8949C
	0x03D8947C LDR X10, [X8 + 0xB0]
	0x03D89480 ADD X10, X10, 0x8
	0x03D89484 LDUR X11, [X10 - 0x8]
	0x03D89488 CMP X11, X1
	0x03D8948C B.EQ 0x3D894AC
	0x03D89490 SUBS X9, X9, 0x1
	0x03D89494 ADD X10, X10, 0x10
	0x03D89498 B.NE 0x3D89484
	0x03D8949C MOVZ W2, 0x2C
	0x03D894A0 MOV X0, X22
	0x03D894A4 BL 0x1C5C788
	0x03D894A8 B 0x3D894BC
	0x03D894AC LDR W9, [X10]
	0x03D894B0 ADD W9, W9, 0x2C
	0x03D894B4 ADD X8, X8, W9, 0x4, SXTW
	0x03D894B8 ADD X0, X8, 0x138
	0x03D894BC LDP X8, X1, [X0]
	0x03D894C0 MOV X0, X22
	0x03D894C4 BLR X8
	0x03D894C8 LDR X0, [X19 + 0x3D8]
	0x03D894CC CBZ X0, 0x3D89C88
	0x03D894D0 MOV X1, X31
	0x03D894D4 MOV V9.16B, V0.16B
	0x03D894D8 BL 0x3DE0EB8
	0x03D894DC CBZ X0, 0x3D89C88
	0x03D894E0 LDR X8, [X0]
	0x03D894E4 LDR X1, [X23]
	0x03D894E8 MOV X22, X0
	0x03D894EC LDRH W9, [X8 + 0x12E]
	0x03D894F0 CBZ X9, 0x3D89514
	0x03D894F4 LDR X10, [X8 + 0xB0]
	0x03D894F8 ADD X10, X10, 0x8
	0x03D894FC LDUR X11, [X10 - 0x8]
	0x03D89500 CMP X11, X1
	0x03D89504 B.EQ 0x3D89524
	0x03D89508 SUBS X9, X9, 0x1
	0x03D8950C ADD X10, X10, 0x10
	0x03D89510 B.NE 0x3D894FC
	0x03D89514 MOVZ W2, 0x16
	0x03D89518 MOV X0, X22
	0x03D8951C BL 0x1C5C788
	0x03D89520 B 0x3D89534
	0x03D89524 LDR W9, [X10]
	0x03D89528 ADD W9, W9, 0x16
	0x03D8952C ADD X8, X8, W9, 0x4, SXTW
	0x03D89530 ADD X0, X8, 0x138
	0x03D89534 LDP X8, X1, [X0]
	0x03D89538 MOV X0, X22
	0x03D8953C BLR X8
	0x03D89540 LDR X0, [X19 + 0x3D8]
	0x03D89544 CBZ X0, 0x3D89C88
	0x03D89548 MOV X1, X31
	0x03D8954C MOV V11.16B, V0.16B
	0x03D89550 BL 0x3DE0EB8
	0x03D89554 CBZ X0, 0x3D89C88
	0x03D89558 LDR X8, [X0]
	0x03D8955C LDR X1, [X23]
	0x03D89560 MOV X22, X0
	0x03D89564 LDRH W9, [X8 + 0x12E]
	0x03D89568 CBZ X9, 0x3D8958C
	0x03D8956C LDR X10, [X8 + 0xB0]
	0x03D89570 ADD X10, X10, 0x8
	0x03D89574 LDUR X11, [X10 - 0x8]
	0x03D89578 CMP X11, X1
	0x03D8957C B.EQ 0x3D8959C
	0x03D89580 SUBS X9, X9, 0x1
	0x03D89584 ADD X10, X10, 0x10
	0x03D89588 B.NE 0x3D89574
	0x03D8958C MOVZ W2, 0x17
	0x03D89590 MOV X0, X22
	0x03D89594 BL 0x1C5C788
	0x03D89598 B 0x3D895AC
	0x03D8959C LDR W9, [X10]
	0x03D895A0 ADD W9, W9, 0x17
	0x03D895A4 ADD X8, X8, W9, 0x4, SXTW
	0x03D895A8 ADD X0, X8, 0x138
	0x03D895AC LDP X8, X1, [X0]
	0x03D895B0 MOV X0, X22
	0x03D895B4 BLR X8
	0x03D895B8 LDR X0, [X19 + 0x3D8]
	0x03D895BC CBZ X0, 0x3D89C88
	0x03D895C0 MOV X1, X31
	0x03D895C4 MOV V12.16B, V0.16B
	0x03D895C8 BL 0x3DE0EB8
	0x03D895CC CBZ X0, 0x3D89C88
	0x03D895D0 LDR X8, [X0]
	0x03D895D4 LDR X1, [X23]
	0x03D895D8 MOV X22, X0
	0x03D895DC LDRH W9, [X8 + 0x12E]
	0x03D895E0 CBZ X9, 0x3D89604
	0x03D895E4 LDR X10, [X8 + 0xB0]
	0x03D895E8 ADD X10, X10, 0x8
	0x03D895EC LDUR X11, [X10 - 0x8]
	0x03D895F0 CMP X11, X1
	0x03D895F4 B.EQ 0x3D89614
	0x03D895F8 SUBS X9, X9, 0x1
	0x03D895FC ADD X10, X10, 0x10
	0x03D89600 B.NE 0x3D895EC
	0x03D89604 MOVZ W2, 0x1A
	0x03D89608 MOV X0, X22
	0x03D8960C BL 0x1C5C788
	0x03D89610 B 0x3D89624
	0x03D89614 LDR W9, [X10]
	0x03D89618 ADD W9, W9, 0x1A
	0x03D8961C ADD X8, X8, W9, 0x4, SXTW
	0x03D89620 ADD X0, X8, 0x138
	0x03D89624 LDP X8, X1, [X0]
	0x03D89628 MOV X0, X22
	0x03D8962C BLR X8
	0x03D89630 STR X0, [X31 + 0x8]
	0x03D89634 ADD X0, X31, 0x8
	0x03D89638 MOV X1, X31
	0x03D8963C BL 0x3DFE5FC
	0x03D89640 LDR X0, [X19 + 0x3E0]
	0x03D89644 CBZ X0, 0x3D89C88
	0x03D89648 MOV X1, X31
	0x03D8964C MOV V10.16B, V0.16B
	0x03D89650 BL 0x3DE0EB8
	0x03D89654 CBZ X0, 0x3D89C88
	0x03D89658 LDR X8, [X0]
	0x03D8965C LDR X1, [X23]
	0x03D89660 MOV X22, X0
	0x03D89664 LDRH W9, [X8 + 0x12E]
	0x03D89668 CBZ X9, 0x3D8968C
	0x03D8966C LDR X10, [X8 + 0xB0]
	0x03D89670 ADD X10, X10, 0x8
	0x03D89674 LDUR X11, [X10 - 0x8]
	0x03D89678 CMP X11, X1
	0x03D8967C B.EQ 0x3D8969C
	0x03D89680 SUBS X9, X9, 0x1
	0x03D89684 ADD X10, X10, 0x10
	0x03D89688 B.NE 0x3D89674
	0x03D8968C MOVZ W2, 0x16
	0x03D89690 MOV X0, X22
	0x03D89694 BL 0x1C5C788
	0x03D89698 B 0x3D896AC
	0x03D8969C LDR W9, [X10]
	0x03D896A0 ADD W9, W9, 0x16
	0x03D896A4 ADD X8, X8, W9, 0x4, SXTW
	0x03D896A8 ADD X0, X8, 0x138
	0x03D896AC LDP X8, X1, [X0]
	0x03D896B0 MOV X0, X22
	0x03D896B4 BLR X8
	0x03D896B8 LDR X0, [X19 + 0x3E0]
	0x03D896BC CBZ X0, 0x3D89C88
	0x03D896C0 MOV X1, X31
	0x03D896C4 MOV V13.16B, V0.16B
	0x03D896C8 BL 0x3DE0EB8
	0x03D896CC CBZ X0, 0x3D89C88
	0x03D896D0 LDR X8, [X0]
	0x03D896D4 LDR X1, [X23]
	0x03D896D8 MOV X22, X0
	0x03D896DC LDRH W9, [X8 + 0x12E]
	0x03D896E0 CBZ X9, 0x3D89704
	0x03D896E4 LDR X10, [X8 + 0xB0]
	0x03D896E8 ADD X10, X10, 0x8
	0x03D896EC LDUR X11, [X10 - 0x8]
	0x03D896F0 CMP X11, X1
	0x03D896F4 B.EQ 0x3D89714
	0x03D896F8 SUBS X9, X9, 0x1
	0x03D896FC ADD X10, X10, 0x10
	0x03D89700 B.NE 0x3D896EC
	0x03D89704 MOVZ W2, 0x17
	0x03D89708 MOV X0, X22
	0x03D8970C BL 0x1C5C788
	0x03D89710 B 0x3D89724
	0x03D89714 LDR W9, [X10]
	0x03D89718 ADD W9, W9, 0x17
	0x03D8971C ADD X8, X8, W9, 0x4, SXTW
	0x03D89720 ADD X0, X8, 0x138
	0x03D89724 LDP X8, X1, [X0]
	0x03D89728 MOV X0, X22
	0x03D8972C BLR X8
	0x03D89730 LDR X0, [X19 + 0x3E0]
	0x03D89734 CBZ X0, 0x3D89C88
	0x03D89738 MOV X1, X31
	0x03D8973C MOV V14.16B, V0.16B
	0x03D89740 BL 0x3DE0EB8
	0x03D89744 CBZ X0, 0x3D89C88
	0x03D89748 LDR X8, [X0]
	0x03D8974C LDR X1, [X23]
	0x03D89750 MOV X22, X0
	0x03D89754 LDRH W9, [X8 + 0x12E]
	0x03D89758 CBZ X9, 0x3D8977C
	0x03D8975C LDR X10, [X8 + 0xB0]
	0x03D89760 ADD X10, X10, 0x8
	0x03D89764 LDUR X11, [X10 - 0x8]
	0x03D89768 CMP X11, X1
	0x03D8976C B.EQ 0x3D8978C
	0x03D89770 SUBS X9, X9, 0x1
	0x03D89774 ADD X10, X10, 0x10
	0x03D89778 B.NE 0x3D89764
	0x03D8977C MOVZ W2, 0x1A
	0x03D89780 MOV X0, X22
	0x03D89784 BL 0x1C5C788
	0x03D89788 B 0x3D8979C
	0x03D8978C LDR W9, [X10]
	0x03D89790 ADD W9, W9, 0x1A
	0x03D89794 ADD X8, X8, W9, 0x4, SXTW
	0x03D89798 ADD X0, X8, 0x138
	0x03D8979C LDP X8, X1, [X0]
	0x03D897A0 MOV X0, X22
	0x03D897A4 BLR X8
	0x03D897A8 STR X0, [X31 + 0x8]
	0x03D897AC ADD X0, X31, 0x8
	0x03D897B0 MOV X1, X31
	0x03D897B4 BL 0x3DFE5FC
	0x03D897B8 LDR W8, [X19 + 0x410]
	0x03D897BC CMP W8, 0x1
	0x03D897C0 B.NE 0x3D89818
	0x03D897C4 MOV X0, X19
	0x03D897C8 MOV X1, X31
	0x03D897CC BL 0x3DE0EB8
	0x03D897D0 CBZ X0, 0x3D89C88
	0x03D897D4 LDR X8, [X0]
	0x03D897D8 LDR X1, [X23]
	0x03D897DC MOV X22, X0
	0x03D897E0 LDRH W9, [X8 + 0x12E]
	0x03D897E4 CBZ X9, 0x3D89808
	0x03D897E8 LDR X10, [X8 + 0xB0]
	0x03D897EC ADD X10, X10, 0x8
	0x03D897F0 LDUR X11, [X10 - 0x8]
	0x03D897F4 CMP X11, X1
	0x03D897F8 B.EQ 0x3D89828
	0x03D897FC SUBS X9, X9, 0x1
	0x03D89800 ADD X10, X10, 0x10
	0x03D89804 B.NE 0x3D897F0
	0x03D89808 MOVZ W2, 0x13
	0x03D8980C MOV X0, X22
	0x03D89810 BL 0x1C5C788
	0x03D89814 B 0x3D89838
	0x03D89818 MOV V15.16B, V0.16B
	0x03D8981C FADD S12, S11, S12
	0x03D89820 FADD S11, S13, S14
	0x03D89824 B 0x3D89BB8
	0x03D89828 LDR W9, [X10]
	0x03D8982C ADD W9, W9, 0x13
	0x03D89830 ADD X8, X8, W9, 0x4, SXTW
	0x03D89834 ADD X0, X8, 0x138
	0x03D89838 LDP X8, X1, [X0]
	0x03D8983C MOV X0, X22
	0x03D89840 BLR X8
	0x03D89844 LDR X0, [X19 + 0x3D8]
	0x03D89848 CBZ X0, 0x3D89C88
	0x03D8984C MOV X1, X31
	0x03D89850 MOV V8.16B, V0.16B
	0x03D89854 BL 0x3DE0EB8
	0x03D89858 CBZ X0, 0x3D89C88
	0x03D8985C LDR X8, [X0]
	0x03D89860 LDR X1, [X23]
	0x03D89864 MOV X22, X0
	0x03D89868 LDRH W9, [X8 + 0x12E]
	0x03D8986C CBZ X9, 0x3D89890
	0x03D89870 LDR X10, [X8 + 0xB0]
	0x03D89874 ADD X10, X10, 0x8
	0x03D89878 LDUR X11, [X10 - 0x8]
	0x03D8987C CMP X11, X1
	0x03D89880 B.EQ 0x3D898A0
	0x03D89884 SUBS X9, X9, 0x1
	0x03D89888 ADD X10, X10, 0x10
	0x03D8988C B.NE 0x3D89878
	0x03D89890 MOVZ W2, 0x13
	0x03D89894 MOV X0, X22
	0x03D89898 BL 0x1C5C788
	0x03D8989C B 0x3D898B0
	0x03D898A0 LDR W9, [X10]
	0x03D898A4 ADD W9, W9, 0x13
	0x03D898A8 ADD X8, X8, W9, 0x4, SXTW
	0x03D898AC ADD X0, X8, 0x138
	0x03D898B0 LDP X8, X1, [X0]
	0x03D898B4 MOV X0, X22
	0x03D898B8 BLR X8
	0x03D898BC LDR X0, [X19 + 0x3D8]
	0x03D898C0 CBZ X0, 0x3D89C88
	0x03D898C4 MOV X1, X31
	0x03D898C8 MOV V9.16B, V0.16B
	0x03D898CC BL 0x3DE0EB8
	0x03D898D0 CBZ X0, 0x3D89C88
	0x03D898D4 LDR X8, [X0]
	0x03D898D8 LDR X1, [X23]
	0x03D898DC MOV X22, X0
	0x03D898E0 LDRH W9, [X8 + 0x12E]
	0x03D898E4 CBZ X9, 0x3D89908
	0x03D898E8 LDR X10, [X8 + 0xB0]
	0x03D898EC ADD X10, X10, 0x8
	0x03D898F0 LDUR X11, [X10 - 0x8]
	0x03D898F4 CMP X11, X1
	0x03D898F8 B.EQ 0x3D89918
	0x03D898FC SUBS X9, X9, 0x1
	0x03D89900 ADD X10, X10, 0x10
	0x03D89904 B.NE 0x3D898F0
	0x03D89908 MOVZ W2, 0x18
	0x03D8990C MOV X0, X22
	0x03D89910 BL 0x1C5C788
	0x03D89914 B 0x3D89928
	0x03D89918 LDR W9, [X10]
	0x03D8991C ADD W9, W9, 0x18
	0x03D89920 ADD X8, X8, W9, 0x4, SXTW
	0x03D89924 ADD X0, X8, 0x138
	0x03D89928 LDP X8, X1, [X0]
	0x03D8992C MOV X0, X22
	0x03D89930 BLR X8
	0x03D89934 LDR X0, [X19 + 0x3D8]
	0x03D89938 CBZ X0, 0x3D89C88
	0x03D8993C MOV X1, X31
	0x03D89940 MOV V11.16B, V0.16B
	0x03D89944 BL 0x3DE0EB8
	0x03D89948 CBZ X0, 0x3D89C88
	0x03D8994C LDR X8, [X0]
	0x03D89950 LDR X1, [X23]
	0x03D89954 MOV X22, X0
	0x03D89958 LDRH W9, [X8 + 0x12E]
	0x03D8995C CBZ X9, 0x3D89980
	0x03D89960 LDR X10, [X8 + 0xB0]
	0x03D89964 ADD X10, X10, 0x8
	0x03D89968 LDUR X11, [X10 - 0x8]
	0x03D8996C CMP X11, X1
	0x03D89970 B.EQ 0x3D89990
	0x03D89974 SUBS X9, X9, 0x1
	0x03D89978 ADD X10, X10, 0x10
	0x03D8997C B.NE 0x3D89968
	0x03D89980 MOVZ W2, 0x15
	0x03D89984 MOV X0, X22
	0x03D89988 BL 0x1C5C788
	0x03D8998C B 0x3D899A0
	0x03D89990 LDR W9, [X10]
	0x03D89994 ADD W9, W9, 0x15
	0x03D89998 ADD X8, X8, W9, 0x4, SXTW
	0x03D8999C ADD X0, X8, 0x138
	0x03D899A0 LDP X8, X1, [X0]
	0x03D899A4 MOV X0, X22
	0x03D899A8 BLR X8
	0x03D899AC LDR X0, [X19 + 0x3D8]
	0x03D899B0 CBZ X0, 0x3D89C88
	0x03D899B4 MOV X1, X31
	0x03D899B8 MOV V12.16B, V0.16B
	0x03D899BC BL 0x3DE0EB8
	0x03D899C0 CBZ X0, 0x3D89C88
	0x03D899C4 LDR X8, [X0]
	0x03D899C8 LDR X1, [X23]
	0x03D899CC MOV X22, X0
	0x03D899D0 LDRH W9, [X8 + 0x12E]
	0x03D899D4 CBZ X9, 0x3D899F8
	0x03D899D8 LDR X10, [X8 + 0xB0]
	0x03D899DC ADD X10, X10, 0x8
	0x03D899E0 LDUR X11, [X10 - 0x8]
	0x03D899E4 CMP X11, X1
	0x03D899E8 B.EQ 0x3D89A08
	0x03D899EC SUBS X9, X9, 0x1
	0x03D899F0 ADD X10, X10, 0x10
	0x03D899F4 B.NE 0x3D899E0
	0x03D899F8 MOVZ W2, 0x19
	0x03D899FC MOV X0, X22
	0x03D89A00 BL 0x1C5C788
	0x03D89A04 B 0x3D89A18
	0x03D89A08 LDR W9, [X10]
	0x03D89A0C ADD W9, W9, 0x19
	0x03D89A10 ADD X8, X8, W9, 0x4, SXTW
	0x03D89A14 ADD X0, X8, 0x138
	0x03D89A18 LDP X8, X1, [X0]
	0x03D89A1C MOV X0, X22
	0x03D89A20 BLR X8
	0x03D89A24 STR X0, [X31 + 0x8]
	0x03D89A28 ADD X0, X31, 0x8
	0x03D89A2C MOV X1, X31
	0x03D89A30 BL 0x3DFE5FC
	0x03D89A34 LDR X0, [X19 + 0x3E0]
	0x03D89A38 CBZ X0, 0x3D89C88
	0x03D89A3C MOV X1, X31
	0x03D89A40 MOV V10.16B, V0.16B
	0x03D89A44 BL 0x3DE0EB8
	0x03D89A48 CBZ X0, 0x3D89C88
	0x03D89A4C LDR X8, [X0]
	0x03D89A50 LDR X1, [X23]
	0x03D89A54 MOV X22, X0
	0x03D89A58 LDRH W9, [X8 + 0x12E]
	0x03D89A5C CBZ X9, 0x3D89A80
	0x03D89A60 LDR X10, [X8 + 0xB0]
	0x03D89A64 ADD X10, X10, 0x8
	0x03D89A68 LDUR X11, [X10 - 0x8]
	0x03D89A6C CMP X11, X1
	0x03D89A70 B.EQ 0x3D89A90
	0x03D89A74 SUBS X9, X9, 0x1
	0x03D89A78 ADD X10, X10, 0x10
	0x03D89A7C B.NE 0x3D89A68
	0x03D89A80 MOVZ W2, 0x18
	0x03D89A84 MOV X0, X22
	0x03D89A88 BL 0x1C5C788
	0x03D89A8C B 0x3D89AA0
	0x03D89A90 LDR W9, [X10]
	0x03D89A94 ADD W9, W9, 0x18
	0x03D89A98 ADD X8, X8, W9, 0x4, SXTW
	0x03D89A9C ADD X0, X8, 0x138
	0x03D89AA0 LDP X8, X1, [X0]
	0x03D89AA4 MOV X0, X22
	0x03D89AA8 BLR X8
	0x03D89AAC LDR X0, [X19 + 0x3E0]
	0x03D89AB0 CBZ X0, 0x3D89C88
	0x03D89AB4 MOV X1, X31
	0x03D89AB8 MOV V13.16B, V0.16B
	0x03D89ABC BL 0x3DE0EB8
	0x03D89AC0 CBZ X0, 0x3D89C88
	0x03D89AC4 LDR X8, [X0]
	0x03D89AC8 LDR X1, [X23]
	0x03D89ACC MOV X22, X0
	0x03D89AD0 LDRH W9, [X8 + 0x12E]
	0x03D89AD4 CBZ X9, 0x3D89AF8
	0x03D89AD8 LDR X10, [X8 + 0xB0]
	0x03D89ADC ADD X10, X10, 0x8
	0x03D89AE0 LDUR X11, [X10 - 0x8]
	0x03D89AE4 CMP X11, X1
	0x03D89AE8 B.EQ 0x3D89B08
	0x03D89AEC SUBS X9, X9, 0x1
	0x03D89AF0 ADD X10, X10, 0x10
	0x03D89AF4 B.NE 0x3D89AE0
	0x03D89AF8 MOVZ W2, 0x15
	0x03D89AFC MOV X0, X22
	0x03D89B00 BL 0x1C5C788
	0x03D89B04 B 0x3D89B18
	0x03D89B08 LDR W9, [X10]
	0x03D89B0C ADD W9, W9, 0x15
	0x03D89B10 ADD X8, X8, W9, 0x4, SXTW
	0x03D89B14 ADD X0, X8, 0x138
	0x03D89B18 LDP X8, X1, [X0]
	0x03D89B1C MOV X0, X22
	0x03D89B20 BLR X8
	0x03D89B24 LDR X0, [X19 + 0x3E0]
	0x03D89B28 CBZ X0, 0x3D89C88
	0x03D89B2C MOV X1, X31
	0x03D89B30 MOV V14.16B, V0.16B
	0x03D89B34 BL 0x3DE0EB8
	0x03D89B38 CBZ X0, 0x3D89C88
	0x03D89B3C LDR X8, [X0]
	0x03D89B40 LDR X1, [X23]
	0x03D89B44 MOV X22, X0
	0x03D89B48 LDRH W9, [X8 + 0x12E]
	0x03D89B4C CBZ X9, 0x3D89B70
	0x03D89B50 LDR X10, [X8 + 0xB0]
	0x03D89B54 ADD X10, X10, 0x8
	0x03D89B58 LDUR X11, [X10 - 0x8]
	0x03D89B5C CMP X11, X1
	0x03D89B60 B.EQ 0x3D89B80
	0x03D89B64 SUBS X9, X9, 0x1
	0x03D89B68 ADD X10, X10, 0x10
	0x03D89B6C B.NE 0x3D89B58
	0x03D89B70 MOVZ W2, 0x19
	0x03D89B74 MOV X0, X22
	0x03D89B78 BL 0x1C5C788
	0x03D89B7C B 0x3D89B90
	0x03D89B80 LDR W9, [X10]
	0x03D89B84 ADD W9, W9, 0x19
	0x03D89B88 ADD X8, X8, W9, 0x4, SXTW
	0x03D89B8C ADD X0, X8, 0x138
	0x03D89B90 LDP X8, X1, [X0]
	0x03D89B94 MOV X0, X22
	0x03D89B98 FADD S12, S11, S12
	0x03D89B9C FADD S11, S13, S14
	0x03D89BA0 BLR X8
	0x03D89BA4 STR X0, [X31 + 0x8]
	0x03D89BA8 ADD X0, X31, 0x8
	0x03D89BAC MOV X1, X31
	0x03D89BB0 BL 0x3DFE5FC
	0x03D89BB4 MOV V15.16B, V0.16B
	0x03D89BB8 FADD S0, S12, S9
	0x03D89BBC FADD S1, S15, S0
	0x03D89BC0 FADD S1, S11, S1
	0x03D89BC4 FCMP S8, S1
	0x03D89BC8 B.GE 0x3D89C0C
	0x03D89BCC FADD S9, S10, S12
	0x03D89BD0 FADD S0, S15, S9
	0x03D89BD4 FADD S0, S11, S0
	0x03D89BD8 FCMP S8, S0
	0x03D89BDC B.GE 0x3D89C24
	0x03D89BE0 TBZ X21, 0x0, 0x3D89BF0
	0x03D89BE4 MOV X0, X19
	0x03D89BE8 MOV V0.16B, V10.16B
	0x03D89BEC BL 0x3D89DB4
	0x03D89BF0 TBZ X20, 0x0, 0x3D89C64
	0x03D89BF4 CBZ X19, 0x3D89C88
	0x03D89BF8 LDR W8, [X19 + 0x414]
	0x03D89BFC FADD S0, S15, S11
	0x03D89C00 CMP W8, 0x0
	0x03D89C04 FCSEL S0, S9, S0, EQ
	0x03D89C08 B 0x3D89C5C
	0x03D89C0C TBZ X20, 0x0, 0x3D89C64
	0x03D89C10 CBZ X19, 0x3D89C88
	0x03D89C14 LDR W8, [X19 + 0x414]
	0x03D89C18 FSUB S1, S8, S9
	0x03D89C1C FSUB S1, S1, S12
	0x03D89C20 B 0x3D89C54
	0x03D89C24 FSUB S0, S8, S15
	0x03D89C28 FSUB S0, S0, S11
	0x03D89C2C FSUB S8, S0, S12
	0x03D89C30 TBZ X21, 0x0, 0x3D89C40
	0x03D89C34 MOV X0, X19
	0x03D89C38 MOV V0.16B, V8.16B
	0x03D89C3C BL 0x3D89DB4
	0x03D89C40 TBZ X20, 0x0, 0x3D89C64
	0x03D89C44 CBZ X19, 0x3D89C88
	0x03D89C48 LDR W8, [X19 + 0x414]
	0x03D89C4C FADD S0, S12, S8
	0x03D89C50 FADD S1, S15, S11
	0x03D89C54 CMP W8, 0x0
	0x03D89C58 FCSEL S0, S0, S1, EQ
	0x03D89C5C MOV X0, X19
	0x03D89C60 BL 0x3D89C8C
	0x03D89C64 LDP X20, X19, [X31 + 0x70]
	0x03D89C68 LDP X22, X21, [X31 + 0x60]
	0x03D89C6C LDP X30, X23, [X31 + 0x50]
	0x03D89C70 LDP D9, D8, [X31 + 0x40]
	0x03D89C74 LDP D11, D10, [X31 + 0x30]
	0x03D89C78 LDP D13, D12, [X31 + 0x20]
	0x03D89C7C LDP D15, D14, [X31 + 0x10]
	0x03D89C80 ADD X31, X31, 0x80
	0x03D89C84 RET
	0x03D89C88 BL 0x1C16F20
	0x03D89C8C STR D8, [X31 - 0x30]!
	0x03D89C90 STR X30, [X31 + 0x8]
	0x03D89C94 STP X22, X21, [X31 + 0x10]
	0x03D89C98 STP X20, X19, [X31 + 0x20]
	0x03D89C9C ADRP X20, 0x65E000
	0x03D89CA0 LDRB W8, [X20 + 0xE08]
	0x03D89CA4 MOV V8.16B, V0.16B
	0x03D89CA8 MOV X19, X0
	0x03D89CAC TBNZ X8, 0x0, 0x3D89CC4
	0x03D89CB0 ADRP X0, 0x393000
	0x03D89CB4 LDR X0, [X0 + 0x128]
	0x03D89CB8 BL 0x1C16CF4
	0x03D89CBC MOVZ W8, 0x1
	0x03D89CC0 STRB W8, [X20 + 0xE08]
	0x03D89CC4 LDR X0, [X19 + 0x3F8]
	0x03D89CC8 CBZ X0, 0x3D89DB0
	0x03D89CCC LDR W22, [X19 + 0x410]
	0x03D89CD0 MOV X1, X31
	0x03D89CD4 BL 0x3DE7EEC
	0x03D89CD8 MOV X19, X0
	0x03D89CDC MOV V0.16B, V8.16B
	0x03D89CE0 MOV X0, X31
	0x03D89CE4 BL 0x3DFED98
	0x03D89CE8 CBZ X19, 0x3D89DB0
	0x03D89CEC ADRP X10, 0x393000
	0x03D89CF0 LDR X9, [X19]
	0x03D89CF4 LDR X10, [X10 + 0x128]
	0x03D89CF8 MOV X8, X1
	0x03D89CFC MOV X20, X0
	0x03D89D00 AND X21, X8, 0x0
	0x03D89D04 LDR X1, [X10]
	0x03D89D08 LDRH W10, [X9 + 0x12E]
	0x03D89D0C CBZ W22, 0x3D89D3C
	0x03D89D10 CBZ W10, 0x3D89D34
	0x03D89D14 LDR X8, [X9 + 0xB0]
	0x03D89D18 ADD X8, X8, 0x8
	0x03D89D1C LDUR X11, [X8 - 0x8]
	0x03D89D20 CMP X11, X1
	0x03D89D24 B.EQ 0x3D89D70
	0x03D89D28 SUBS X10, X10, 0x1
	0x03D89D2C ADD X8, X8, 0x10
	0x03D89D30 B.NE 0x3D89D1C
	0x03D89D34 MOVZ W2, 0x2D
	0x03D89D38 B 0x3D89D64
	0x03D89D3C CBZ W10, 0x3D89D60
	0x03D89D40 LDR X8, [X9 + 0xB0]
	0x03D89D44 ADD X8, X8, 0x8
	0x03D89D48 LDUR X11, [X8 - 0x8]
	0x03D89D4C CMP X11, X1
	0x03D89D50 B.EQ 0x3D89D7C
	0x03D89D54 SUBS X10, X10, 0x1
	0x03D89D58 ADD X8, X8, 0x10
	0x03D89D5C B.NE 0x3D89D48
	0x03D89D60 MOVZ W2, 0x19
	0x03D89D64 MOV X0, X19
	0x03D89D68 BL 0x1C5C788
	0x03D89D6C B 0x3D89D8C
	0x03D89D70 LDR W8, [X8]
	0x03D89D74 ADD W8, W8, 0x2D
	0x03D89D78 B 0x3D89D84
	0x03D89D7C LDR W8, [X8]
	0x03D89D80 ADD W8, W8, 0x19
	0x03D89D84 ADD X8, X9, W8, 0x4, SXTW
	0x03D89D88 ADD X0, X8, 0x138
	0x03D89D8C LDP X4, X3, [X0]
	0x03D89D90 MOV X0, X19
	0x03D89D94 MOV X1, X20
	0x03D89D98 MOV X2, X21
	0x03D89D9C LDP X20, X19, [X31 + 0x20]
	0x03D89DA0 LDP X22, X21, [X31 + 0x10]
	0x03D89DA4 LDR X30, [X31 + 0x8]
	0x03D89DA8 LDR V8, [X31], #0x30
	0x03D89DAC BR X4
	0x03D89DB0 BL 0x1C16F20
	0x03D89DB4 STR D8, [X31 - 0x30]!
	0x03D89DB8 STR X30, [X31 + 0x8]
	0x03D89DBC STP X22, X21, [X31 + 0x10]
	0x03D89DC0 STP X20, X19, [X31 + 0x20]
	0x03D89DC4 ADRP X20, 0x65E000
	0x03D89DC8 LDRB W8, [X20 + 0xE09]
	0x03D89DCC MOV V8.16B, V0.16B
	0x03D89DD0 MOV X19, X0
	0x03D89DD4 TBNZ X8, 0x0, 0x3D89DEC
	0x03D89DD8 ADRP X0, 0x393000
	0x03D89DDC LDR X0, [X0 + 0x128]
	0x03D89DE0 BL 0x1C16CF4
	0x03D89DE4 MOVZ W8, 0x1
	0x03D89DE8 STRB W8, [X20 + 0xE09]
	0x03D89DEC LDR X0, [X19 + 0x3D8]
	0x03D89DF0 CBZ X0, 0x3D89ED8
	0x03D89DF4 LDR W22, [X19 + 0x410]
	0x03D89DF8 MOV X1, X31
	0x03D89DFC BL 0x3DE7EEC
	0x03D89E00 MOV X19, X0
	0x03D89E04 MOV V0.16B, V8.16B
	0x03D89E08 MOV X0, X31
	0x03D89E0C BL 0x3DFED98
	0x03D89E10 CBZ X19, 0x3D89ED8
	0x03D89E14 ADRP X10, 0x393000
	0x03D89E18 LDR X9, [X19]
	0x03D89E1C LDR X10, [X10 + 0x128]
	0x03D89E20 MOV X8, X1
	0x03D89E24 MOV X20, X0
	0x03D89E28 AND X21, X8, 0x0
	0x03D89E2C LDR X1, [X10]
	0x03D89E30 LDRH W10, [X9 + 0x12E]
	0x03D89E34 CBZ W22, 0x3D89E64
	0x03D89E38 CBZ W10, 0x3D89E5C
	0x03D89E3C LDR X8, [X9 + 0xB0]
	0x03D89E40 ADD X8, X8, 0x8
	0x03D89E44 LDUR X11, [X8 - 0x8]
	0x03D89E48 CMP X11, X1
	0x03D89E4C B.EQ 0x3D89E98
	0x03D89E50 SUBS X10, X10, 0x1
	0x03D89E54 ADD X8, X8, 0x10
	0x03D89E58 B.NE 0x3D89E44
	0x03D89E5C MOVZ W2, 0x18
	0x03D89E60 B 0x3D89E8C
	0x03D89E64 CBZ W10, 0x3D89E88
	0x03D89E68 LDR X8, [X9 + 0xB0]
	0x03D89E6C ADD X8, X8, 0x8
	0x03D89E70 LDUR X11, [X8 - 0x8]
	0x03D89E74 CMP X11, X1
	0x03D89E78 B.EQ 0x3D89EA4
	0x03D89E7C SUBS X10, X10, 0x1
	0x03D89E80 ADD X8, X8, 0x10
	0x03D89E84 B.NE 0x3D89E70
	0x03D89E88 MOVZ W2, 0x36
	0x03D89E8C MOV X0, X19
	0x03D89E90 BL 0x1C5C788
	0x03D89E94 B 0x3D89EB4
	0x03D89E98 LDR W8, [X8]
	0x03D89E9C ADD W8, W8, 0x18
	0x03D89EA0 B 0x3D89EAC
	0x03D89EA4 LDR W8, [X8]
	0x03D89EA8 ADD W8, W8, 0x36
	0x03D89EAC ADD X8, X9, W8, 0x4, SXTW
	0x03D89EB0 ADD X0, X8, 0x138
	0x03D89EB4 LDP X4, X3, [X0]
	0x03D89EB8 MOV X0, X19
	0x03D89EBC MOV X1, X20
	0x03D89EC0 MOV X2, X21
	0x03D89EC4 LDP X20, X19, [X31 + 0x20]
	0x03D89EC8 LDP X22, X21, [X31 + 0x10]
	0x03D89ECC LDR X30, [X31 + 0x8]
	0x03D89ED0 LDR V8, [X31], #0x30
	0x03D89ED4 BR X4
	0x03D89ED8 BL 0x1C16F20
	0x03D89EDC LDR X0, [X0 + 0x408]
	0x03D89EE0 RET
	0x03D89EE4 STP X30, X19, [X31 - 0x10]!
	0x03D89EE8 MOV X1, X31
	0x03D89EEC MOV X19, X0
	0x03D89EF0 BL 0x3DF28A0
	0x03D89EF4 MOV X0, X19
	0x03D89EF8 MOV X1, X31
	0x03D89EFC BL 0x3DF23E8
	0x03D89F00 MOV X2, X0
	0x03D89F04 MOV X0, X19
	0x03D89F08 MOV X1, X19
	0x03D89F0C MOV X3, X31
	0x03D89F10 BL 0x3DF245C
	0x03D89F14 MOV X0, X19
	0x03D89F18 LDP X30, X19, [X31], #0x10
	0x03D89F1C B 0x3D87ED8
	0x03D89F20 STR X30, [X31 - 0x60]!
	0x03D89F24 STP X28, X27, [X31 + 0x10]
	0x03D89F28 STP X26, X25, [X31 + 0x20]
	0x03D89F2C STP X24, X23, [X31 + 0x30]
	0x03D89F30 STP X22, X21, [X31 + 0x40]
	0x03D89F34 STP X20, X19, [X31 + 0x50]
	0x03D89F38 ADRP X28, 0x65E000
	0x03D89F3C ADRP X27, 0x3DE000
	0x03D89F40 ADRP X19, 0x3DE000
	0x03D89F44 ADRP X26, 0x3DE000
	0x03D89F48 ADRP X25, 0x3DE000
	0x03D89F4C ADRP X23, 0x394000
	0x03D89F50 ADRP X22, 0x394000
	0x03D89F54 ADRP X24, 0x3DE000
	0x03D89F58 ADRP X21, 0x3DE000
	0x03D89F5C ADRP X20, 0x3DE000
	0x03D89F60 LDR X27, [X27 + 0x778]
	0x03D89F64 LDR X19, [X19 + 0x740]
	0x03D89F68 LDR X26, [X26 + 0x780]
	0x03D89F6C LDR X25, [X25 + 0x788]
	0x03D89F70 LDRB W8, [X28 + 0xE0A]
	0x03D89F74 LDR X23, [X23 + 0x6C0]
	0x03D89F78 LDR X22, [X22 + 0x6B0]
	0x03D89F7C LDR X24, [X24 + 0x790]
	0x03D89F80 LDR X21, [X21 + 0x798]
	0x03D89F84 LDR X20, [X20 + 0x7A0]
	0x03D89F88 TBNZ X8, 0x0, 0x3D8A000
	0x03D89F8C ADRP X0, 0x3DE000
	0x03D89F90 LDR X0, [X0 + 0x740]
	0x03D89F94 BL 0x1C16CF4
	0x03D89F98 ADRP X0, 0x394000
	0x03D89F9C LDR X0, [X0 + 0x6B0]
	0x03D89FA0 BL 0x1C16CF4
	0x03D89FA4 ADRP X0, 0x394000
	0x03D89FA8 LDR X0, [X0 + 0x6C0]
	0x03D89FAC BL 0x1C16CF4
	0x03D89FB0 ADRP X0, 0x3DE000
	0x03D89FB4 LDR X0, [X0 + 0x7A0]
	0x03D89FB8 BL 0x1C16CF4
	0x03D89FBC ADRP X0, 0x3DE000
	0x03D89FC0 LDR X0, [X0 + 0x788]
	0x03D89FC4 BL 0x1C16CF4
	0x03D89FC8 ADRP X0, 0x3DE000
	0x03D89FCC LDR X0, [X0 + 0x778]
	0x03D89FD0 BL 0x1C16CF4
	0x03D89FD4 ADRP X0, 0x3DE000
	0x03D89FD8 LDR X0, [X0 + 0x790]
	0x03D89FDC BL 0x1C16CF4
	0x03D89FE0 ADRP X0, 0x3DE000
	0x03D89FE4 LDR X0, [X0 + 0x798]
	0x03D89FE8 BL 0x1C16CF4
	0x03D89FEC ADRP X0, 0x3DE000
	0x03D89FF0 LDR X0, [X0 + 0x780]
	0x03D89FF4 BL 0x1C16CF4
	0x03D89FF8 MOVZ W8, 0x1
	0x03D89FFC STRB W8, [X28 + 0xE0A]
	0x03D8A000 LDR X8, [X19]
	0x03D8A004 LDR X9, [X27]
	0x03D8A008 MOV X2, X31
	0x03D8A00C LDR X8, [X8 + 0xB8]
	0x03D8A010 STR X9, [X8]
	0x03D8A014 LDR X8, [X19]
	0x03D8A018 LDR X9, [X26]
	0x03D8A01C LDR X0, [X25]
	0x03D8A020 LDR X8, [X8 + 0xB8]
	0x03D8A024 STP X9, X0, [X8 + 0x8]
	0x03D8A028 LDR X1, [X23]
	0x03D8A02C BL 0x321B938
	0x03D8A030 LDR X8, [X19]
	0x03D8A034 MOV X2, X31
	0x03D8A038 LDR X8, [X8 + 0xB8]
	0x03D8A03C STR X0, [X8 + 0x18]
	0x03D8A040 LDR X0, [X8 + 0x10]
	0x03D8A044 LDR X1, [X22]
	0x03D8A048 BL 0x321B938
	0x03D8A04C LDR X8, [X19]
	0x03D8A050 MOV X2, X31
	0x03D8A054 LDR X8, [X8 + 0xB8]
	0x03D8A058 STR X0, [X8 + 0x20]
	0x03D8A05C LDR X0, [X24]
	0x03D8A060 STR X0, [X8 + 0x28]
	0x03D8A064 LDR X1, [X23]
	0x03D8A068 BL 0x321B938
	0x03D8A06C LDR X8, [X19]
	0x03D8A070 MOV X2, X31
	0x03D8A074 LDR X8, [X8 + 0xB8]
	0x03D8A078 STR X0, [X8 + 0x30]
	0x03D8A07C LDR X0, [X8 + 0x28]
	0x03D8A080 LDR X1, [X22]
	0x03D8A084 BL 0x321B938
	0x03D8A088 LDR X8, [X19]
	0x03D8A08C LDR X9, [X21]
	0x03D8A090 LDP X22, X21, [X31 + 0x40]
	0x03D8A094 LDP X24, X23, [X31 + 0x30]
	0x03D8A098 LDR X8, [X8 + 0xB8]
	0x03D8A09C LDP X26, X25, [X31 + 0x20]
	0x03D8A0A0 LDP X28, X27, [X31 + 0x10]
	0x03D8A0A4 STP X0, X9, [X8 + 0x38]
	0x03D8A0A8 LDR X9, [X20]
	0x03D8A0AC LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x660000
	010 Move W8, [X20+3590]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x396000
	017 Move X0, [X0+1624]
	018 Call 0x1C17CF4
	019 Move X0, 0x36C000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0x396000
	023 Move X0, [X0+1632]
	024 Call 0x1C17CF4
	025 Move X0, 0x395000
	026 Move X0, [X0+288]
	027 Call 0x1C17CF4
	028 Move X0, 0x395000
	029 Move X0, [X0+296]
	030 Call 0x1C17CF4
	031 Move X0, 0x3E0000
	032 Move X0, [X0+1888]
	033 Call 0x1C17CF4
	034 Move X0, 0x3E0000
	035 Move X0, [X0+1896]
	036 Call 0x1C17CF4
	037 Move X0, 0x3E0000
	038 Move X0, [X0+1904]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+3590], W8
	042 Move X0, [X19+1032]
	043 Compare X0, 0
	044 JumpIfEqual {1182}
	045 Move X1, X31
	046 Call VisualElement.get_childCount, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, [X19+88]
	049 Move X1, X31
	050 Call String.IsNullOrEmpty, X0
	051 And W31, W0, 1
	052 Move W8, 1000
	053 Move W9, 1048
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 Move V0, [X19]
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 Move V0, [X19+1048]
	058 Move V1, [X19+1000]
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Move X0, X19
	061 Move X1, X31
	062 Move [X19+1000], S0
	063 Call VisualElement.SaveViewData, X0
	064 Move X0, [X19+88]
	065 Move X1, X31
	066 Call String.IsNullOrEmpty, X0
	067 Move W8, W0
	068 Move X0, [X19+1032]
	069 And W31, W8, 1
	070 Move W8, 1000
	071 Move W9, 1048
	072 NotImplemented "Instruction CSEL not yet implemented."
	073 Compare X0, 0
	074 JumpIfEqual {1182}
	075 Move V8, [X19]
	076 Move W1, W31
	077 Move X2, X31
	078 Call VisualElement.get_Item, X0, X1
	079 Move W8, [X19+1044]
	080 Move W9, 992
	081 Move [X19+968], X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W8, 984
	084 NotImplemented "Instruction CSEL not yet implemented."
	085 Move [X19], X0
	086 Move X0, [X19+1032]
	087 Compare X0, 0
	088 JumpIfEqual {1182}
	089 Move W1, 1
	090 Move X2, X31
	091 Call VisualElement.get_Item, X0, X1
	092 Move W8, [X19+1044]
	093 Move [X19+976], X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move [X19+984], X0
	096 Move X8, 0x36B000
	097 Move X8, [X8+2600]
	098 Move X0, [X8]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X8, 0x3DF000
	104 Move X8, [X8+1904]
	105 Move X20, [X31+48]
	106 Move X19, [X31+56]
	107 Move X22, [X31+32]
	108 Move X21, [X31+40]
	109 Move X30, [X31+16]
	110 Move X23, [X31+24]
	111 Move X0, [X8]
	112 Move X1, X31
	113 Move D9, [X31+64]
	114 Move D8, [X31+72]
	115 Call Debug.LogError, X0
	116 Return 
	117 Move [X19+992], X0
	118 Move X0, [X19+984]
	119 Compare X0, 0
	120 JumpIfEqual {1182}
	121 Move X1, X31
	122 Call VisualElement.get_style, X0
	123 Move X20, X0
	124 Move W0, 1
	125 Move X1, X31
	126 Call StyleLength.op_Implicit, X0
	127 Compare X20, 0
	128 JumpIfEqual {1182}
	129 Move X23, 0x394000
	130 Move X9, [X20]
	131 Move X23, [X23+296]
	132 Move X8, X1
	133 Move X21, X0
	134 NotImplemented "Instruction LDRH not yet implemented."
	135 Move X1, [X23]
	136 And X22, X8, 0
	137 Compare X10, 0
	138 JumpIfEqual {145}
	139 Move X8, [X9+176]
	140 Add X8, X8, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X10, X10, 1
	144 Add X8, X8, 16
	145 Move W2, 19
	146 Move X0, X20
	147 Call 0x1C5D788
	148 Move W8, [X8]
	149 Add W8, W8, 19
	150 Add X8, X9, W8
	151 Add X0, X8, 312
	152 Move X8, [X0]
	153 Move X3, [X0+8]
	154 Move X0, X20
	155 Move X1, X21
	156 Move X2, X22
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X0, [X19+984]
	159 Compare X0, 0
	160 JumpIfEqual {1182}
	161 Move X1, X31
	162 Call VisualElement.get_style, X0
	163 Move X20, X0
	164 Move W0, 1
	165 Move X1, X31
	166 Call StyleFloat.op_Implicit, X0
	167 Compare X20, 0
	168 JumpIfEqual {1182}
	169 Move X8, [X20]
	170 Move X1, [X23]
	171 Move X21, X0
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Compare X9, 0
	174 JumpIfEqual {181}
	175 Move X10, [X8+176]
	176 Add X10, X10, 8
	177 NotImplemented "Instruction LDUR not yet implemented."
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Subtract X9, X9, 1
	180 Add X10, X10, 16
	181 Move W2, 22
	182 Move X0, X20
	183 Call 0x1C5D788
	184 Move W9, [X10]
	185 Add W9, W9, 22
	186 Add X8, X8, W9
	187 Add X0, X8, 312
	188 Move X8, [X0]
	189 Move X2, [X0+8]
	190 Move X0, X20
	191 Move X1, X21
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Move X0, [X19+984]
	194 Compare X0, 0
	195 JumpIfEqual {1182}
	196 Move X1, X31
	197 Call VisualElement.get_style, X0
	198 Move X20, X0
	199 Move W0, 1
	200 Move X1, X31
	201 Call StyleFloat.op_Implicit, X0
	202 Compare X20, 0
	203 JumpIfEqual {1182}
	204 Move X8, [X20]
	205 Move X1, [X23]
	206 Move X21, X0
	207 NotImplemented "Instruction LDRH not yet implemented."
	208 Compare X9, 0
	209 JumpIfEqual {216}
	210 Move X10, [X8+176]
	211 Add X10, X10, 8
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract X9, X9, 1
	215 Add X10, X10, 16
	216 Move W2, 21
	217 Move X0, X20
	218 Call 0x1C5D788
	219 Move W9, [X10]
	220 Add W9, W9, 21
	221 Add X8, X8, W9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X2, [X0+8]
	225 Move X0, X20
	226 Move X1, X21
	227 NotImplemented "Instruction BLR not yet implemented."
	228 Move X0, [X19+992]
	229 Compare X0, 0
	230 JumpIfEqual {1182}
	231 Move X1, X31
	232 Call VisualElement.get_style, X0
	233 Move X20, X0
	234 Move W0, 1
	235 Move X1, X31
	236 Call StyleFloat.op_Implicit, X0
	237 Compare X20, 0
	238 JumpIfEqual {1182}
	239 Move X8, [X20]
	240 Move X1, [X23]
	241 Move X21, X0
	242 NotImplemented "Instruction LDRH not yet implemented."
	243 Compare X9, 0
	244 JumpIfEqual {251}
	245 Move X10, [X8+176]
	246 Add X10, X10, 8
	247 NotImplemented "Instruction LDUR not yet implemented."
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Subtract X9, X9, 1
	250 Add X10, X10, 16
	251 Move W2, 21
	252 Move X0, X20
	253 Call 0x1C5D788
	254 Move W9, [X10]
	255 Add W9, W9, 21
	256 Add X8, X8, W9
	257 Add X0, X8, 312
	258 Move X8, [X0]
	259 Move X2, [X0+8]
	260 Move X0, X20
	261 Move X1, X21
	262 NotImplemented "Instruction BLR not yet implemented."
	263 Move X0, [X19+992]
	264 Compare X0, 0
	265 JumpIfEqual {1182}
	266 Move X1, X31
	267 Call VisualElement.get_style, X0
	268 Move X20, X0
	269 Move W0, 1
	270 Move X1, X31
	271 Call StyleFloat.op_Implicit, X0
	272 Compare X20, 0
	273 JumpIfEqual {1182}
	274 Move X8, [X20]
	275 Move X1, [X23]
	276 Move X21, X0
	277 NotImplemented "Instruction LDRH not yet implemented."
	278 Compare X9, 0
	279 JumpIfEqual {286}
	280 Move X10, [X8+176]
	281 Add X10, X10, 8
	282 NotImplemented "Instruction LDUR not yet implemented."
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Subtract X9, X9, 1
	285 Add X10, X10, 16
	286 Move W2, 22
	287 Move X0, X20
	288 Call 0x1C5D788
	289 Move W9, [X10]
	290 Add W9, W9, 22
	291 Add X8, X8, W9
	292 Add X0, X8, 312
	293 Move X8, [X0]
	294 Move X2, [X0+8]
	295 Move X0, X20
	296 Move X1, X21
	297 NotImplemented "Instruction BLR not yet implemented."
	298 Move X0, [X19+992]
	299 Compare X0, 0
	300 JumpIfEqual {1182}
	301 Move X1, X31
	302 Call VisualElement.get_style, X0
	303 Move X20, X0
	304 Move W0, 1
	305 Move X1, X31
	306 Call StyleLength.op_Implicit, X0
	307 Compare X20, 0
	308 JumpIfEqual {1182}
	309 Move X9, [X20]
	310 Move X8, X1
	311 Move X1, [X23]
	312 Move X21, X0
	313 NotImplemented "Instruction LDRH not yet implemented."
	314 And X22, X8, 0
	315 Compare X10, 0
	316 JumpIfEqual {323}
	317 Move X8, [X9+176]
	318 Add X8, X8, 8
	319 NotImplemented "Instruction LDUR not yet implemented."
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Subtract X10, X10, 1
	322 Add X8, X8, 16
	323 Move W2, 19
	324 Move X0, X20
	325 Call 0x1C5D788
	326 Move W8, [X8]
	327 Add W8, W8, 19
	328 Add X8, X9, W8
	329 Add X0, X8, 312
	330 Move X8, [X0]
	331 Move X3, [X0+8]
	332 Move X0, X20
	333 Move X1, X21
	334 Move X2, X22
	335 NotImplemented "Instruction BLR not yet implemented."
	336 Move X0, [X19+984]
	337 Compare X0, 0
	338 JumpIfEqual {1182}
	339 Move X1, X31
	340 Call VisualElement.get_style, X0
	341 Move X20, X0
	342 Move W0, 1
	343 Move X1, X31
	344 Call StyleLength.op_Implicit, X0
	345 Compare X20, 0
	346 JumpIfEqual {1182}
	347 Move X9, [X20]
	348 Move X8, X1
	349 Move X1, [X23]
	350 Move X21, X0
	351 NotImplemented "Instruction LDRH not yet implemented."
	352 And X22, X8, 0
	353 Compare X10, 0
	354 JumpIfEqual {361}
	355 Move X8, [X9+176]
	356 Add X8, X8, 8
	357 NotImplemented "Instruction LDUR not yet implemented."
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Subtract X10, X10, 1
	360 Add X8, X8, 16
	361 Move W2, 54
	362 Move X0, X20
	363 Call 0x1C5D788
	364 Move W8, [X8]
	365 Add W8, W8, 54
	366 Add X8, X9, W8
	367 Add X0, X8, 312
	368 Move X8, [X0]
	369 Move X3, [X0+8]
	370 Move X0, X20
	371 Move X1, X21
	372 Move X2, X22
	373 NotImplemented "Instruction BLR not yet implemented."
	374 Move X0, [X19+984]
	375 Compare X0, 0
	376 JumpIfEqual {1182}
	377 Move X1, X31
	378 Call VisualElement.get_style, X0
	379 Move X20, X0
	380 Move W0, 1
	381 Move X1, X31
	382 Call StyleLength.op_Implicit, X0
	383 Compare X20, 0
	384 JumpIfEqual {1182}
	385 Move X9, [X20]
	386 Move X8, X1
	387 Move X1, [X23]
	388 Move X21, X0
	389 NotImplemented "Instruction LDRH not yet implemented."
	390 And X22, X8, 0
	391 Compare X10, 0
	392 JumpIfEqual {399}
	393 Move X8, [X9+176]
	394 Add X8, X8, 8
	395 NotImplemented "Instruction LDUR not yet implemented."
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Subtract X10, X10, 1
	398 Add X8, X8, 16
	399 Move W2, 24
	400 Move X0, X20
	401 Call 0x1C5D788
	402 Move W8, [X8]
	403 Add W8, W8, 24
	404 Add X8, X9, W8
	405 Add X0, X8, 312
	406 Move X8, [X0]
	407 Move X3, [X0+8]
	408 Move X0, X20
	409 Move X1, X21
	410 Move X2, X22
	411 NotImplemented "Instruction BLR not yet implemented."
	412 Move X0, [X19+992]
	413 Compare X0, 0
	414 JumpIfEqual {1182}
	415 Move X1, X31
	416 Call VisualElement.get_style, X0
	417 Move X20, X0
	418 Move W0, 1
	419 Move X1, X31
	420 Call StyleLength.op_Implicit, X0
	421 Compare X20, 0
	422 JumpIfEqual {1182}
	423 Move X9, [X20]
	424 Move X8, X1
	425 Move X1, [X23]
	426 Move X21, X0
	427 NotImplemented "Instruction LDRH not yet implemented."
	428 And X22, X8, 0
	429 Compare X10, 0
	430 JumpIfEqual {437}
	431 Move X8, [X9+176]
	432 Add X8, X8, 8
	433 NotImplemented "Instruction LDUR not yet implemented."
	434 NotImplemented "Instruction CMP not yet implemented."
	435 Subtract X10, X10, 1
	436 Add X8, X8, 16
	437 Move W2, 54
	438 Move X0, X20
	439 Call 0x1C5D788
	440 Move W8, [X8]
	441 Add W8, W8, 54
	442 Add X8, X9, W8
	443 Add X0, X8, 312
	444 Move X8, [X0]
	445 Move X3, [X0+8]
	446 Move X0, X20
	447 Move X1, X21
	448 Move X2, X22
	449 NotImplemented "Instruction BLR not yet implemented."
	450 Move X0, [X19+992]
	451 Compare X0, 0
	452 JumpIfEqual {1182}
	453 Move X1, X31
	454 Call VisualElement.get_style, X0
	455 Move X20, X0
	456 Move W0, 1
	457 Move X1, X31
	458 Call StyleLength.op_Implicit, X0
	459 Compare X20, 0
	460 JumpIfEqual {1182}
	461 Move X9, [X20]
	462 Move X8, X1
	463 Move X1, [X23]
	464 Move X21, X0
	465 NotImplemented "Instruction LDRH not yet implemented."
	466 And X22, X8, 0
	467 Compare X10, 0
	468 JumpIfEqual {475}
	469 Move X8, [X9+176]
	470 Add X8, X8, 8
	471 NotImplemented "Instruction LDUR not yet implemented."
	472 NotImplemented "Instruction CMP not yet implemented."
	473 Subtract X10, X10, 1
	474 Add X8, X8, 16
	475 Move W2, 24
	476 Move X0, X20
	477 Call 0x1C5D788
	478 Move W8, [X8]
	479 Add W8, W8, 24
	480 Add X8, X9, W8
	481 Add X0, X8, 312
	482 Move X8, [X0]
	483 Move X3, [X0+8]
	484 Move X0, X20
	485 Move X1, X21
	486 Move X2, X22
	487 NotImplemented "Instruction BLR not yet implemented."
	488 Move X0, [X19+984]
	489 Compare X0, 0
	490 JumpIfEqual {1182}
	491 Move W21, [X19+1040]
	492 Move X1, X31
	493 Call VisualElement.get_style, X0
	494 Move X20, X0
	495 Compare W21, 0
	496 JumpIfEqual {519}
	497 Move W0, 1
	498 Move X1, X31
	499 Call StyleLength.op_Implicit, X0
	500 Compare X20, 0
	501 JumpIfEqual {1182}
	502 Move X9, [X20]
	503 Move X8, X1
	504 Move X1, [X23]
	505 Move X21, X0
	506 NotImplemented "Instruction LDRH not yet implemented."
	507 And X22, X8, 0
	508 Compare X10, 0
	509 JumpIfEqual {516}
	510 Move X8, [X9+176]
	511 Add X8, X8, 8
	512 NotImplemented "Instruction LDUR not yet implemented."
	513 NotImplemented "Instruction CMP not yet implemented."
	514 Subtract X10, X10, 1
	515 Add X8, X8, 16
	516 Move W2, 54
	517 Move X0, X20
	518 Call 0x1C5D788
	519 Move V0, V8
	520 Move X0, X31
	521 Call StyleLength.op_Implicit, V0
	522 Compare X20, 0
	523 JumpIfEqual {1182}
	524 Move X9, [X20]
	525 Move X8, X1
	526 Move X1, [X23]
	527 Move X21, X0
	528 NotImplemented "Instruction LDRH not yet implemented."
	529 And X22, X8, 0
	530 Compare X10, 0
	531 JumpIfEqual {538}
	532 Move X8, [X9+176]
	533 Add X8, X8, 8
	534 NotImplemented "Instruction LDUR not yet implemented."
	535 NotImplemented "Instruction CMP not yet implemented."
	536 Subtract X10, X10, 1
	537 Add X8, X8, 16
	538 Move W2, 54
	539 Move X0, X20
	540 Call 0x1C5D788
	541 Move W8, [X8]
	542 Add W8, W8, 54
	543 Add X8, X9, W8
	544 Add X0, X8, 312
	545 Move X8, [X0]
	546 Move X3, [X0+8]
	547 Move X0, X20
	548 Move X1, X21
	549 Move X2, X22
	550 NotImplemented "Instruction BLR not yet implemented."
	551 Move X0, [X19+984]
	552 Compare X0, 0
	553 JumpIfEqual {1182}
	554 Move X1, X31
	555 Call VisualElement.get_style, X0
	556 Move X20, X0
	557 Move V0, V8
	558 Move X0, X31
	559 Call StyleLength.op_Implicit, V0
	560 Compare X20, 0
	561 JumpIfEqual {1182}
	562 Move X9, [X20]
	563 Move X8, X1
	564 Move X1, [X23]
	565 Move X21, X0
	566 NotImplemented "Instruction LDRH not yet implemented."
	567 And X22, X8, 0
	568 Compare X10, 0
	569 JumpIfEqual {611}
	570 Move X8, [X9+176]
	571 Add X8, X8, 8
	572 NotImplemented "Instruction LDUR not yet implemented."
	573 NotImplemented "Instruction CMP not yet implemented."
	574 Subtract X10, X10, 1
	575 Add X8, X8, 16
	576 Move W8, [X8]
	577 Add W8, W8, 54
	578 Add X8, X9, W8
	579 Add X0, X8, 312
	580 Move X8, [X0]
	581 Move X3, [X0+8]
	582 Move X0, X20
	583 Move X1, X21
	584 Move X2, X22
	585 NotImplemented "Instruction BLR not yet implemented."
	586 Move X0, [X19+984]
	587 Compare X0, 0
	588 JumpIfEqual {1182}
	589 Move X1, X31
	590 Call VisualElement.get_style, X0
	591 Move X20, X0
	592 Move W0, 1
	593 Move X1, X31
	594 Call StyleLength.op_Implicit, X0
	595 Compare X20, 0
	596 JumpIfEqual {1182}
	597 Move X9, [X20]
	598 Move X8, X1
	599 Move X1, [X23]
	600 Move X21, X0
	601 NotImplemented "Instruction LDRH not yet implemented."
	602 And X22, X8, 0
	603 Compare X10, 0
	604 JumpIfEqual {611}
	605 Move X8, [X9+176]
	606 Add X8, X8, 8
	607 NotImplemented "Instruction LDUR not yet implemented."
	608 NotImplemented "Instruction CMP not yet implemented."
	609 Subtract X10, X10, 1
	610 Add X8, X8, 16
	611 Move W2, 24
	612 Move X0, X20
	613 Call 0x1C5D788
	614 Move W8, [X8]
	615 Add W8, W8, 24
	616 Add X8, X9, W8
	617 Add X0, X8, 312
	618 Move X8, [X0]
	619 Move X3, [X0+8]
	620 Move X0, X20
	621 Move X1, X21
	622 Move X2, X22
	623 NotImplemented "Instruction BLR not yet implemented."
	624 Move X0, [X19+984]
	625 Compare X0, 0
	626 JumpIfEqual {1182}
	627 Move X1, X31
	628 Call VisualElement.get_style, X0
	629 Move X20, X0
	630 Move S0, W31
	631 Move X0, X31
	632 Call StyleFloat.op_Implicit, V0
	633 Compare X20, 0
	634 JumpIfEqual {1182}
	635 Move X8, [X20]
	636 Move X1, [X23]
	637 Move X21, X0
	638 NotImplemented "Instruction LDRH not yet implemented."
	639 Compare X9, 0
	640 JumpIfEqual {647}
	641 Move X10, [X8+176]
	642 Add X10, X10, 8
	643 NotImplemented "Instruction LDUR not yet implemented."
	644 NotImplemented "Instruction CMP not yet implemented."
	645 Subtract X9, X9, 1
	646 Add X10, X10, 16
	647 Move W2, 22
	648 Move X0, X20
	649 Call 0x1C5D788
	650 Move W9, [X10]
	651 Add W9, W9, 22
	652 Add X8, X8, W9
	653 Add X0, X8, 312
	654 Move X8, [X0]
	655 Move X2, [X0+8]
	656 Move X0, X20
	657 Move X1, X21
	658 NotImplemented "Instruction BLR not yet implemented."
	659 Move X0, [X19+984]
	660 Compare X0, 0
	661 JumpIfEqual {1182}
	662 Move X1, X31
	663 Call VisualElement.get_style, X0
	664 Move X20, X0
	665 Move S0, W31
	666 Move X0, X31
	667 Call StyleFloat.op_Implicit, V0
	668 Compare X20, 0
	669 JumpIfEqual {1182}
	670 Move X8, [X20]
	671 Move X1, [X23]
	672 Move X21, X0
	673 NotImplemented "Instruction LDRH not yet implemented."
	674 Compare X9, 0
	675 JumpIfEqual {682}
	676 Move X10, [X8+176]
	677 Add X10, X10, 8
	678 NotImplemented "Instruction LDUR not yet implemented."
	679 NotImplemented "Instruction CMP not yet implemented."
	680 Subtract X9, X9, 1
	681 Add X10, X10, 16
	682 Move W2, 21
	683 Move X0, X20
	684 Call 0x1C5D788
	685 Move W9, [X10]
	686 Add W9, W9, 21
	687 Add X8, X8, W9
	688 Add X0, X8, 312
	689 Move X8, [X0]
	690 Move X2, [X0+8]
	691 Move X0, X20
	692 Move X1, X21
	693 NotImplemented "Instruction BLR not yet implemented."
	694 Move X0, [X19+992]
	695 Compare X0, 0
	696 JumpIfEqual {1182}
	697 Move X1, X31
	698 Call VisualElement.get_style, X0
	699 Move X20, X0
	700 Move S0, 1
	701 Move X0, X31
	702 Call StyleFloat.op_Implicit, V0
	703 Compare X20, 0
	704 JumpIfEqual {1182}
	705 Move X8, [X20]
	706 Move X1, [X23]
	707 Move X21, X0
	708 NotImplemented "Instruction LDRH not yet implemented."
	709 Compare X9, 0
	710 JumpIfEqual {717}
	711 Move X10, [X8+176]
	712 Add X10, X10, 8
	713 NotImplemented "Instruction LDUR not yet implemented."
	714 NotImplemented "Instruction CMP not yet implemented."
	715 Subtract X9, X9, 1
	716 Add X10, X10, 16
	717 Move W2, 21
	718 Move X0, X20
	719 Call 0x1C5D788
	720 Move W9, [X10]
	721 Add W9, W9, 21
	722 Add X8, X8, W9
	723 Add X0, X8, 312
	724 Move X8, [X0]
	725 Move X2, [X0+8]
	726 Move X0, X20
	727 Move X1, X21
	728 NotImplemented "Instruction BLR not yet implemented."
	729 Move X0, [X19+992]
	730 Compare X0, 0
	731 JumpIfEqual {1182}
	732 Move X1, X31
	733 Call VisualElement.get_style, X0
	734 Move X20, X0
	735 Move S0, W31
	736 Move X0, X31
	737 Call StyleFloat.op_Implicit, V0
	738 Compare X20, 0
	739 JumpIfEqual {1182}
	740 Move X8, [X20]
	741 Move X1, [X23]
	742 Move X21, X0
	743 NotImplemented "Instruction LDRH not yet implemented."
	744 Compare X9, 0
	745 JumpIfEqual {752}
	746 Move X10, [X8+176]
	747 Add X10, X10, 8
	748 NotImplemented "Instruction LDUR not yet implemented."
	749 NotImplemented "Instruction CMP not yet implemented."
	750 Subtract X9, X9, 1
	751 Add X10, X10, 16
	752 Move W2, 22
	753 Move X0, X20
	754 Call 0x1C5D788
	755 Move W9, [X10]
	756 Add W9, W9, 22
	757 Add X8, X8, W9
	758 Add X0, X8, 312
	759 Move X8, [X0]
	760 Move X2, [X0+8]
	761 Move X0, X20
	762 Move X1, X21
	763 NotImplemented "Instruction BLR not yet implemented."
	764 Move X0, [X19+992]
	765 Compare X0, 0
	766 JumpIfEqual {1182}
	767 Move X1, X31
	768 Call VisualElement.get_style, X0
	769 Move X20, X0
	770 Move S0, W31
	771 Move X0, X31
	772 Call StyleLength.op_Implicit, V0
	773 Compare X20, 0
	774 JumpIfEqual {1182}
	775 Move X9, [X20]
	776 Move X8, X1
	777 Move X1, [X23]
	778 Move X21, X0
	779 NotImplemented "Instruction LDRH not yet implemented."
	780 And X22, X8, 0
	781 Compare X10, 0
	782 JumpIfEqual {789}
	783 Move X8, [X9+176]
	784 Add X8, X8, 8
	785 NotImplemented "Instruction LDUR not yet implemented."
	786 NotImplemented "Instruction CMP not yet implemented."
	787 Subtract X10, X10, 1
	788 Add X8, X8, 16
	789 Move W2, 19
	790 Move X0, X20
	791 Call 0x1C5D788
	792 Move W8, [X8]
	793 Add W8, W8, 19
	794 Add X8, X9, W8
	795 Add X0, X8, 312
	796 Move X8, [X0]
	797 Move X3, [X0+8]
	798 Move X0, X20
	799 Move X1, X21
	800 Move X2, X22
	801 NotImplemented "Instruction BLR not yet implemented."
	802 Move X0, [X19+1016]
	803 Compare X0, 0
	804 JumpIfEqual {1182}
	805 Move X1, X31
	806 Call VisualElement.get_style, X0
	807 Move X20, X0
	808 Move S0, W31
	809 Move X0, X31
	810 Call StyleLength.op_Implicit, V0
	811 Compare X20, 0
	812 JumpIfEqual {1182}
	813 Move X9, [X20]
	814 Move X8, X1
	815 Move X1, [X23]
	816 Move X21, X0
	817 NotImplemented "Instruction LDRH not yet implemented."
	818 And X22, X8, 0
	819 Compare X10, 0
	820 JumpIfEqual {827}
	821 Move X8, [X9+176]
	822 Add X8, X8, 8
	823 NotImplemented "Instruction LDUR not yet implemented."
	824 NotImplemented "Instruction CMP not yet implemented."
	825 Subtract X10, X10, 1
	826 Add X8, X8, 16
	827 Move W2, 25
	828 Move X0, X20
	829 Call 0x1C5D788
	830 Move W8, [X8]
	831 Add W8, W8, 25
	832 Add X8, X9, W8
	833 Add X0, X8, 312
	834 Move X8, [X0]
	835 Move X3, [X0+8]
	836 Move X0, X20
	837 Move X1, X21
	838 Move X2, X22
	839 NotImplemented "Instruction BLR not yet implemented."
	840 Move X0, [X19+1016]
	841 Compare X0, 0
	842 JumpIfEqual {1182}
	843 Move X1, X31
	844 Call VisualElement.get_style, X0
	845 Move X20, X0
	846 Move S0, W31
	847 Move X0, X31
	848 Call StyleLength.op_Implicit, V0
	849 Compare X20, 0
	850 JumpIfEqual {1182}
	851 Move X9, [X20]
	852 Move X8, X1
	853 Move X1, [X23]
	854 Move X21, X0
	855 NotImplemented "Instruction LDRH not yet implemented."
	856 And X22, X8, 0
	857 Compare X10, 0
	858 JumpIfEqual {865}
	859 Move X8, [X9+176]
	860 Add X8, X8, 8
	861 NotImplemented "Instruction LDUR not yet implemented."
	862 NotImplemented "Instruction CMP not yet implemented."
	863 Subtract X10, X10, 1
	864 Add X8, X8, 16
	865 Move W2, 45
	866 Move X0, X20
	867 Call 0x1C5D788
	868 Move W8, [X8]
	869 Add W8, W8, 45
	870 Add X8, X9, W8
	871 Add X0, X8, 312
	872 Move X8, [X0]
	873 Move X3, [X0+8]
	874 Move X0, X20
	875 Move X1, X21
	876 Move X2, X22
	877 NotImplemented "Instruction BLR not yet implemented."
	878 Move X0, [X19+984]
	879 Compare X0, 0
	880 JumpIfEqual {1182}
	881 Move W21, [X19+1040]
	882 Move X1, X31
	883 Call VisualElement.get_resolvedStyle, X0
	884 Compare X0, 0
	885 JumpIfEqual {1182}
	886 Move X22, 0x394000
	887 Move X8, [X0]
	888 Move X22, [X22+288]
	889 Move X20, X0
	890 NotImplemented "Instruction LDRH not yet implemented."
	891 Move X1, [X22]
	892 Compare W21, 0
	893 JumpIfEqual {905}
	894 Compare W9, 0
	895 JumpIfEqual {902}
	896 Move X10, [X8+176]
	897 Add X10, X10, 8
	898 NotImplemented "Instruction LDUR not yet implemented."
	899 NotImplemented "Instruction CMP not yet implemented."
	900 Subtract X9, X9, 1
	901 Add X10, X10, 16
	902 Move W2, 24
	903 Move X0, X20
	904 Call 0x1C5D788
	905 Compare W9, 0
	906 JumpIfEqual {913}
	907 Move X10, [X8+176]
	908 Add X10, X10, 8
	909 NotImplemented "Instruction LDUR not yet implemented."
	910 NotImplemented "Instruction CMP not yet implemented."
	911 Subtract X9, X9, 1
	912 Add X10, X10, 16
	913 Move W2, 22
	914 Move X0, X20
	915 Call 0x1C5D788
	916 Move W9, [X10]
	917 Add W9, W9, 24
	918 Add X8, X8, W9
	919 Add X0, X8, 312
	920 Move X8, [X0]
	921 Move X1, [X0+8]
	922 Move X0, X20
	923 NotImplemented "Instruction BLR not yet implemented."
	924 Move X0, [X19+984]
	925 Compare X0, 0
	926 JumpIfEqual {1182}
	927 Move X1, X31
	928 Move V9, V0
	929 Call VisualElement.get_resolvedStyle, X0
	930 Compare X0, 0
	931 JumpIfEqual {1182}
	932 Move X8, [X0]
	933 Move X1, [X22]
	934 Move X20, X0
	935 NotImplemented "Instruction LDRH not yet implemented."
	936 Compare X9, 0
	937 JumpIfEqual {944}
	938 Move X10, [X8+176]
	939 Add X10, X10, 8
	940 NotImplemented "Instruction LDUR not yet implemented."
	941 NotImplemented "Instruction CMP not yet implemented."
	942 Subtract X9, X9, 1
	943 Add X10, X10, 16
	944 Move W2, 21
	945 Move X0, X20
	946 Call 0x1C5D788
	947 Move W9, [X10]
	948 Add W9, W9, 21
	949 Add X8, X8, W9
	950 Add X0, X8, 312
	951 Move X8, [X0]
	952 Move X1, [X0+8]
	953 Move X0, X20
	954 NotImplemented "Instruction BLR not yet implemented."
	955 Move X0, [X19+1016]
	956 Compare X0, 0
	957 JumpIfEqual {1182}
	958 Move X1, X31
	959 Add S9, S9, S0
	960 Call VisualElement.get_style, X0
	961 Move W8, [X19+1044]
	962 NotImplemented "Instruction CMP not yet implemented."
	963 NotImplemented "Instruction CSEL not yet implemented."
	964 Compare W8, 0
	965 JumpIfEqual {986}
	966 Move X0, X19
	967 Move X1, X31
	968 Call VisualElement.get_resolvedStyle, X0
	969 Compare X0, 0
	970 JumpIfEqual {1182}
	971 Move X8, [X0]
	972 Move X1, [X22]
	973 Move X21, X0
	974 NotImplemented "Instruction LDRH not yet implemented."
	975 Compare X9, 0
	976 JumpIfEqual {983}
	977 Move X10, [X8+176]
	978 Add X10, X10, 8
	979 NotImplemented "Instruction LDUR not yet implemented."
	980 NotImplemented "Instruction CMP not yet implemented."
	981 Subtract X9, X9, 1
	982 Add X10, X10, 16
	983 Move W2, 19
	984 Move X0, X21
	985 Call 0x1C5D788
	986 Add S0, S8, S9
	987 Move X20, X0
	988 Move W9, [X10]
	989 Add W9, W9, 19
	990 Add X8, X8, W9
	991 Add X0, X8, 312
	992 Move X8, [X0]
	993 Move X1, [X0+8]
	994 Move X0, X21
	995 NotImplemented "Instruction BLR not yet implemented."
	996 Subtract S0, S0, S8
	997 Subtract S0, S0, S9
	998 Move X0, X31
	999 Call StyleLength.op_Implicit, V0
	1000 Compare X20, 0
	1001 JumpIfEqual {1182}
	1002 Move X9, [X20]
	1003 Move X8, X1
	1004 Move X1, [X23]
	1005 Move X21, X0
	1006 NotImplemented "Instruction LDRH not yet implemented."
	1007 And X22, X8, 0
	1008 Compare X10, 0
	1009 JumpIfEqual {1016}
	1010 Move X8, [X9+176]
	1011 Add X8, X8, 8
	1012 NotImplemented "Instruction LDUR not yet implemented."
	1013 NotImplemented "Instruction CMP not yet implemented."
	1014 Subtract X10, X10, 1
	1015 Add X8, X8, 16
	1016 Move W2, 45
	1017 Move W8, [X8]
	1018 Add W8, W8, 45
	1019 Move W9, [X10]
	1020 Add W9, W9, 22
	1021 Add X8, X8, W9
	1022 Add X0, X8, 312
	1023 Move X8, [X0]
	1024 Move X1, [X0+8]
	1025 Move X0, X20
	1026 NotImplemented "Instruction BLR not yet implemented."
	1027 Move X0, [X19+984]
	1028 Compare X0, 0
	1029 JumpIfEqual {1182}
	1030 Move X1, X31
	1031 Move V9, V0
	1032 Call VisualElement.get_resolvedStyle, X0
	1033 Compare X0, 0
	1034 JumpIfEqual {1182}
	1035 Move X8, [X0]
	1036 Move X1, [X22]
	1037 Move X20, X0
	1038 NotImplemented "Instruction LDRH not yet implemented."
	1039 Compare X9, 0
	1040 JumpIfEqual {1047}
	1041 Move X10, [X8+176]
	1042 Add X10, X10, 8
	1043 NotImplemented "Instruction LDUR not yet implemented."
	1044 NotImplemented "Instruction CMP not yet implemented."
	1045 Subtract X9, X9, 1
	1046 Add X10, X10, 16
	1047 Move W2, 23
	1048 Move X0, X20
	1049 Call 0x1C5D788
	1050 Move W9, [X10]
	1051 Add W9, W9, 23
	1052 Add X8, X8, W9
	1053 Add X0, X8, 312
	1054 Move X8, [X0]
	1055 Move X1, [X0+8]
	1056 Move X0, X20
	1057 NotImplemented "Instruction BLR not yet implemented."
	1058 Move X0, [X19+1016]
	1059 Compare X0, 0
	1060 JumpIfEqual {1182}
	1061 Move X1, X31
	1062 Add S9, S9, S0
	1063 Call VisualElement.get_style, X0
	1064 Move W8, [X19+1044]
	1065 NotImplemented "Instruction CMP not yet implemented."
	1066 NotImplemented "Instruction CSEL not yet implemented."
	1067 Compare W8, 0
	1068 JumpIfEqual {1089}
	1069 Move X0, X19
	1070 Move X1, X31
	1071 Call VisualElement.get_resolvedStyle, X0
	1072 Compare X0, 0
	1073 JumpIfEqual {1182}
	1074 Move X8, [X0]
	1075 Move X1, [X22]
	1076 Move X21, X0
	1077 NotImplemented "Instruction LDRH not yet implemented."
	1078 Compare X9, 0
	1079 JumpIfEqual {1086}
	1080 Move X10, [X8+176]
	1081 Add X10, X10, 8
	1082 NotImplemented "Instruction LDUR not yet implemented."
	1083 NotImplemented "Instruction CMP not yet implemented."
	1084 Subtract X9, X9, 1
	1085 Add X10, X10, 16
	1086 Move W2, 44
	1087 Move X0, X21
	1088 Call 0x1C5D788
	1089 Add S0, S8, S9
	1090 Move X20, X0
	1091 Move W9, [X10]
	1092 Add W9, W9, 44
	1093 Add X8, X8, W9
	1094 Add X0, X8, 312
	1095 Move X8, [X0]
	1096 Move X1, [X0+8]
	1097 Move X0, X21
	1098 NotImplemented "Instruction BLR not yet implemented."
	1099 Subtract S0, S0, S8
	1100 Subtract S0, S0, S9
	1101 Move X0, X31
	1102 Call StyleLength.op_Implicit, V0
	1103 Compare X20, 0
	1104 JumpIfEqual {1182}
	1105 Move X9, [X20]
	1106 Move X8, X1
	1107 Move X1, [X23]
	1108 Move X21, X0
	1109 NotImplemented "Instruction LDRH not yet implemented."
	1110 And X22, X8, 0
	1111 Compare X10, 0
	1112 JumpIfEqual {1119}
	1113 Move X8, [X9+176]
	1114 Add X8, X8, 8
	1115 NotImplemented "Instruction LDUR not yet implemented."
	1116 NotImplemented "Instruction CMP not yet implemented."
	1117 Subtract X10, X10, 1
	1118 Add X8, X8, 16
	1119 Move W2, 25
	1120 Move X0, X20
	1121 Call 0x1C5D788
	1122 Move W8, [X8]
	1123 Add W8, W8, 25
	1124 Add X8, X9, W8
	1125 Add X0, X8, 312
	1126 Move X8, [X0]
	1127 Move X3, [X0+8]
	1128 Move X0, X20
	1129 Move X1, X21
	1130 Move X2, X22
	1131 NotImplemented "Instruction BLR not yet implemented."
	1132 Move W8, [X19+1044]
	1133 Move X1, [X19+1056]
	1134 NotImplemented "Instruction CMP not yet implemented."
	1135 Move W8, 1
	1136 NotImplemented "Instruction CSNEG not yet implemented."
	1137 Compare X1, 0
	1138 JumpIfEqual {1142}
	1139 Move X0, [X19+1016]
	1140 Move X2, X31
	1141 Call VisualElementExtensions.RemoveManipulator, X0, X1
	1142 Move X8, 0x3DE000
	1143 Move X8, [X8+1888]
	1144 Move X0, [X8]
	1145 Call 0x1C17F10
	1146 Move X1, X19
	1147 Move W2, W20
	1148 Move X21, X0
	1149 Call TwoPaneSplitViewResizer..ctor, X0, X1, X2
	1150 Move X0, [X19+1016]
	1151 Move X1, X21
	1152 Move X2, X31
	1153 Move [X19+1056], X21
	1154 Call VisualElementExtensions.AddManipulator, X0, X1
	1155 Move X8, 0x394000
	1156 Move X8, [X8+1632]
	1157 Move X0, [X8]
	1158 Call 0x1C17F10
	1159 Move X8, 0x3DE000
	1160 Move X8, [X8+1896]
	1161 Move X1, X19
	1162 Move X3, X31
	1163 Move X20, X0
	1164 Move X2, [X8]
	1165 Call 0x2D0F824, X0, X1, X2
	1166 Move X8, 0x394000
	1167 Move X8, [X8+1624]
	1168 Move X0, X19
	1169 Move X1, X20
	1170 Move X20, [X31+48]
	1171 Move X19, [X31+56]
	1172 Move X3, [X8]
	1173 Move X22, [X31+32]
	1174 Move X21, [X31+40]
	1175 Move X30, [X31+16]
	1176 Move X23, [X31+24]
	1177 Move W2, W31
	1178 Move D9, [X31+64]
	1179 Move D8, [X31+72]
	1180 Call 0x21A2534, X0, X1, X2
	1181 Return 
	1182 Call 0x1C17F20

Method: System.Void OnSizeChange(UnityEngine.UIElements.GeometryChangedEvent evt)

Disassembly:
	0x03D8A284 LDR X21, [X21 + 0xC08]
	0x03D8A288 MOV X19, X0
	0x03D8A28C TBNZ X8, 0x0, 0x3D8A2F8

ISIL:
	001 Move W1, 1
	002 Move W2, 1

Method: System.Void UpdateLayout(System.Boolean updateFixedPane, System.Boolean updateDragLine)

Disassembly:
	0x03D8A290 ADRP X0, 0x3DD000
	0x03D8A294 LDR X0, [X0 + 0x7B0]
	0x03D8A298 BL 0x1C16CF4
	0x03D8A29C ADRP X0, 0x393000
	0x03D8A2A0 LDR X0, [X0 + 0xBF0]
	0x03D8A2A4 BL 0x1C16CF4
	0x03D8A2A8 ADRP X0, 0x3DD000
	0x03D8A2AC LDR X0, [X0 + 0x7B8]
	0x03D8A2B0 BL 0x1C16CF4
	0x03D8A2B4 ADRP X0, 0x3DD000
	0x03D8A2B8 LDR X0, [X0 + 0x7C0]
	0x03D8A2BC BL 0x1C16CF4
	0x03D8A2C0 ADRP X0, 0x393000
	0x03D8A2C4 LDR X0, [X0 + 0xC08]
	0x03D8A2C8 BL 0x1C16CF4
	0x03D8A2CC ADRP X0, 0x3DD000
	0x03D8A2D0 LDR X0, [X0 + 0x7C8]
	0x03D8A2D4 BL 0x1C16CF4
	0x03D8A2D8 ADRP X0, 0x3DD000
	0x03D8A2DC LDR X0, [X0 + 0x7D0]
	0x03D8A2E0 BL 0x1C16CF4
	0x03D8A2E4 ADRP X0, 0x3DD000
	0x03D8A2E8 LDR X0, [X0 + 0x7D8]
	0x03D8A2EC BL 0x1C16CF4
	0x03D8A2F0 MOVZ W8, 0x1
	0x03D8A2F4 STRB W8, [X20 + 0xE0D]
	0x03D8A2F8 LDR X0, [X21]
	0x03D8A2FC BL 0x1C16F10
	0x03D8A300 MOV X1, X31
	0x03D8A304 MOV X20, X0
	0x03D8A308 BL 0x3E1BCA4
	0x03D8A30C CBZ X20, 0x3D8A3B0
	0x03D8A310 ADRP X8, 0x3DD000
	0x03D8A314 LDR X8, [X8 + 0x7D0]
	0x03D8A318 LDR X8, [X8]
	0x03D8A31C STR W31, [X20 + 0x40]
	0x03D8A320 STR X8, [X20 + 0x10]
	0x03D8A324 STR X20, [X19 + 0x70]
	0x03D8A328 LDR X0, [X21]
	0x03D8A32C BL 0x1C16F10
	0x03D8A330 MOV X1, X31
	0x03D8A334 MOV X20, X0
	0x03D8A338 BL 0x3E1BCA4
	0x03D8A33C CBZ X20, 0x3D8A3B0
	0x03D8A340 ADRP X8, 0x3DD000
	0x03D8A344 LDR X8, [X8 + 0x7C8]
	0x03D8A348 ADRP X9, 0x3DD000
	0x03D8A34C MOVZ W10, 0x64
	0x03D8A350 LDR X8, [X8]
	0x03D8A354 LDR X9, [X9 + 0x7C0]
	0x03D8A358 STR W10, [X20 + 0x40]
	0x03D8A35C STR X8, [X20 + 0x10]
	0x03D8A360 STR X20, [X19 + 0x78]
	0x03D8A364 LDR X0, [X9]
	0x03D8A368 ADRP X20, 0x3DD000
	0x03D8A36C LDR X20, [X20 + 0x7B8]
	0x03D8A370 BL 0x1C16F10
	0x03D8A374 LDR X1, [X20]
	0x03D8A378 MOV X20, X0
	0x03D8A37C BL 0x2734B10
	0x03D8A380 CBZ X20, 0x3D8A3B0
	0x03D8A384 ADRP X8, 0x3DD000
	0x03D8A388 LDR X8, [X8 + 0x7D8]
	0x03D8A38C MOV X0, X19
	0x03D8A390 MOV X1, X31
	0x03D8A394 LDR X8, [X8]
	0x03D8A398 STR W31, [X20 + 0x40]
	0x03D8A39C STR X8, [X20 + 0x10]
	0x03D8A3A0 STR X20, [X19 + 0x80]
	0x03D8A3A4 LDP X20, X19, [X31 + 0x10]
	0x03D8A3A8 LDP X30, X21, [X31], #0x20
	0x03D8A3AC B 0x3DF8490
	0x03D8A3B0 BL 0x1C16F20
	0x03D8A3B4 STR X30, [X31 - 0x10]!
	0x03D8A3B8 LDR X8, [X0 + 0x40]
	0x03D8A3BC CBZ X8, 0x3D8A3CC
	0x03D8A3C0 LDR W0, [X8 + 0x410]
	0x03D8A3C4 LDR X30, [X31], #0x10
	0x03D8A3C8 RET
	0x03D8A3CC BL 0x1C16F20
	0x03D8A3D0 STR X30, [X31 - 0x10]!
	0x03D8A3D4 LDR X8, [X0 + 0x40]
	0x03D8A3D8 CBZ X8, 0x3D8A3E8
	0x03D8A3DC LDR X0, [X8 + 0x3D8]
	0x03D8A3E0 LDR X30, [X31], #0x10
	0x03D8A3E4 RET
	0x03D8A3E8 BL 0x1C16F20
	0x03D8A3EC STR X30, [X31 - 0x10]!
	0x03D8A3F0 LDR X8, [X0 + 0x40]
	0x03D8A3F4 CBZ X8, 0x3D8A404
	0x03D8A3F8 LDR X0, [X8 + 0x3E0]
	0x03D8A3FC LDR X30, [X31], #0x10
	0x03D8A400 RET
	0x03D8A404 BL 0x1C16F20
	0x03D8A408 STR X30, [X31 - 0x20]!
	0x03D8A40C STP X20, X19, [X31 + 0x10]
	0x03D8A410 ADRP X20, 0x65D000
	0x03D8A414 LDRB W8, [X20 + 0xE0E]
	0x03D8A418 MOV X19, X0
	0x03D8A41C TBNZ X8, 0x0, 0x3D8A434
	0x03D8A420 ADRP X0, 0x392000
	0x03D8A424 LDR X0, [X0 + 0x120]
	0x03D8A428 BL 0x1C16CF4
	0x03D8A42C MOVZ W8, 0x1
	0x03D8A430 STRB W8, [X20 + 0xE0E]
	0x03D8A434 STR X31, [X31 + 0x8]
	0x03D8A438 LDR X8, [X19 + 0x40]
	0x03D8A43C CBZ X8, 0x3D8A518
	0x03D8A440 LDR X0, [X8 + 0x3D8]
	0x03D8A444 CBZ X0, 0x3D8A518
	0x03D8A448 LDR W20, [X8 + 0x410]
	0x03D8A44C MOV X1, X31
	0x03D8A450 BL 0x3DE0EB8
	0x03D8A454 CBZ X0, 0x3D8A518
	0x03D8A458 ADRP X9, 0x392000
	0x03D8A45C LDR X8, [X0]
	0x03D8A460 LDR X9, [X9 + 0x120]
	0x03D8A464 MOV X19, X0
	0x03D8A468 LDR X1, [X9]
	0x03D8A46C LDRH W9, [X8 + 0x12E]
	0x03D8A470 CBZ W20, 0x3D8A4A0
	0x03D8A474 CBZ W9, 0x3D8A498
	0x03D8A478 LDR X10, [X8 + 0xB0]
	0x03D8A47C ADD X10, X10, 0x8
	0x03D8A480 LDUR X11, [X10 - 0x8]
	0x03D8A484 CMP X11, X1
	0x03D8A488 B.EQ 0x3D8A4D4
	0x03D8A48C SUBS X9, X9, 0x1
	0x03D8A490 ADD X10, X10, 0x10
	0x03D8A494 B.NE 0x3D8A480
	0x03D8A498 MOVZ W2, 0x19
	0x03D8A49C B 0x3D8A4C8
	0x03D8A4A0 CBZ W9, 0x3D8A4C4
	0x03D8A4A4 LDR X10, [X8 + 0xB0]
	0x03D8A4A8 ADD X10, X10, 0x8
	0x03D8A4AC LDUR X11, [X10 - 0x8]
	0x03D8A4B0 CMP X11, X1
	0x03D8A4B4 B.EQ 0x3D8A4E0
	0x03D8A4B8 SUBS X9, X9, 0x1
	0x03D8A4BC ADD X10, X10, 0x10
	0x03D8A4C0 B.NE 0x3D8A4AC
	0x03D8A4C4 MOVZ W2, 0x1A
	0x03D8A4C8 MOV X0, X19
	0x03D8A4CC BL 0x1C5C788
	0x03D8A4D0 B 0x3D8A4F0
	0x03D8A4D4 LDR W9, [X10]
	0x03D8A4D8 ADD W9, W9, 0x19
	0x03D8A4DC B 0x3D8A4E8
	0x03D8A4E0 LDR W9, [X10]
	0x03D8A4E4 ADD W9, W9, 0x1A
	0x03D8A4E8 ADD X8, X8, W9, 0x4, SXTW
	0x03D8A4EC ADD X0, X8, 0x138
	0x03D8A4F0 LDP X8, X1, [X0]
	0x03D8A4F4 MOV X0, X19
	0x03D8A4F8 BLR X8
	0x03D8A4FC STR X0, [X31 + 0x8]
	0x03D8A500 ADD X0, X31, 0x8
	0x03D8A504 MOV X1, X31
	0x03D8A508 BL 0x3DFE5FC
	0x03D8A50C LDP X20, X19, [X31 + 0x10]
	0x03D8A510 LDR X30, [X31], #0x20
	0x03D8A514 RET
	0x03D8A518 BL 0x1C16F20
	0x03D8A51C STR D8, [X31 - 0x30]!
	0x03D8A520 STR X30, [X31 + 0x8]
	0x03D8A524 STP X22, X21, [X31 + 0x10]
	0x03D8A528 STP X20, X19, [X31 + 0x20]
	0x03D8A52C ADRP X20, 0x65D000
	0x03D8A530 LDRB W8, [X20 + 0xE0F]
	0x03D8A534 MOV X19, X0
	0x03D8A538 TBNZ X8, 0x0, 0x3D8A550
	0x03D8A53C ADRP X0, 0x392000
	0x03D8A540 LDR X0, [X0 + 0x120]
	0x03D8A544 BL 0x1C16CF4
	0x03D8A548 MOVZ W8, 0x1
	0x03D8A54C STRB W8, [X20 + 0xE0F]
	0x03D8A550 LDR X8, [X19 + 0x40]
	0x03D8A554 CBZ X8, 0x3D8A72C
	0x03D8A558 LDR X0, [X8 + 0x3D8]
	0x03D8A55C CBZ X0, 0x3D8A72C
	0x03D8A560 LDR W22, [X8 + 0x410]
	0x03D8A564 MOV X1, X31
	0x03D8A568 BL 0x3DE0EB8
	0x03D8A56C CBZ X0, 0x3D8A72C
	0x03D8A570 ADRP X21, 0x392000
	0x03D8A574 LDR X8, [X0]
	0x03D8A578 LDR X21, [X21 + 0x120]
	0x03D8A57C MOV X20, X0
	0x03D8A580 LDRH W9, [X8 + 0x12E]
	0x03D8A584 LDR X1, [X21]
	0x03D8A588 CBZ W22, 0x3D8A5C0
	0x03D8A58C CBZ W9, 0x3D8A5B0
	0x03D8A590 LDR X10, [X8 + 0xB0]
	0x03D8A594 ADD X10, X10, 0x8
	0x03D8A598 LDUR X11, [X10 - 0x8]
	0x03D8A59C CMP X11, X1
	0x03D8A5A0 B.EQ 0x3D8A5F4
	0x03D8A5A4 SUBS X9, X9, 0x1
	0x03D8A5A8 ADD X10, X10, 0x10
	0x03D8A5AC B.NE 0x3D8A598
	0x03D8A5B0 MOVZ W2, 0x18
	0x03D8A5B4 MOV X0, X20
	0x03D8A5B8 BL 0x1C5C788
	0x03D8A5BC B 0x3D8A604
	0x03D8A5C0 CBZ W9, 0x3D8A5E4
	0x03D8A5C4 LDR X10, [X8 + 0xB0]
	0x03D8A5C8 ADD X10, X10, 0x8
	0x03D8A5CC LDUR X11, [X10 - 0x8]
	0x03D8A5D0 CMP X11, X1
	0x03D8A5D4 B.EQ 0x3D8A678
	0x03D8A5D8 SUBS X9, X9, 0x1
	0x03D8A5DC ADD X10, X10, 0x10
	0x03D8A5E0 B.NE 0x3D8A5CC
	0x03D8A5E4 MOVZ W2, 0x16
	0x03D8A5E8 MOV X0, X20
	0x03D8A5EC BL 0x1C5C788
	0x03D8A5F0 B 0x3D8A688
	0x03D8A5F4 LDR W9, [X10]
	0x03D8A5F8 ADD W9, W9, 0x18
	0x03D8A5FC ADD X8, X8, W9, 0x4, SXTW
	0x03D8A600 ADD X0, X8, 0x138
	0x03D8A604 LDP X8, X1, [X0]
	0x03D8A608 MOV X0, X20
	0x03D8A60C BLR X8
	0x03D8A610 LDR X8, [X19 + 0x40]
	0x03D8A614 CBZ X8, 0x3D8A72C
	0x03D8A618 LDR X0, [X8 + 0x3D8]
	0x03D8A61C CBZ X0, 0x3D8A72C
	0x03D8A620 MOV X1, X31
	0x03D8A624 MOV V8.16B, V0.16B
	0x03D8A628 BL 0x3DE0EB8
	0x03D8A62C CBZ X0, 0x3D8A72C
	0x03D8A630 LDR X8, [X0]
	0x03D8A634 LDR X1, [X21]
	0x03D8A638 MOV X19, X0
	0x03D8A63C LDRH W9, [X8 + 0x12E]
	0x03D8A640 CBZ X9, 0x3D8A664
	0x03D8A644 LDR X10, [X8 + 0xB0]
	0x03D8A648 ADD X10, X10, 0x8
	0x03D8A64C LDUR X11, [X10 - 0x8]
	0x03D8A650 CMP X11, X1
	0x03D8A654 B.EQ 0x3D8A66C
	0x03D8A658 SUBS X9, X9, 0x1
	0x03D8A65C ADD X10, X10, 0x10
	0x03D8A660 B.NE 0x3D8A64C
	0x03D8A664 MOVZ W2, 0x15
	0x03D8A668 B 0x3D8A6EC
	0x03D8A66C LDR W9, [X10]
	0x03D8A670 ADD W9, W9, 0x15
	0x03D8A674 B 0x3D8A700
	0x03D8A678 LDR W9, [X10]
	0x03D8A67C ADD W9, W9, 0x16
	0x03D8A680 ADD X8, X8, W9, 0x4, SXTW
	0x03D8A684 ADD X0, X8, 0x138
	0x03D8A688 LDP X8, X1, [X0]
	0x03D8A68C MOV X0, X20
	0x03D8A690 BLR X8
	0x03D8A694 LDR X8, [X19 + 0x40]
	0x03D8A698 CBZ X8, 0x3D8A72C
	0x03D8A69C LDR X0, [X8 + 0x3D8]
	0x03D8A6A0 CBZ X0, 0x3D8A72C
	0x03D8A6A4 MOV X1, X31
	0x03D8A6A8 MOV V8.16B, V0.16B
	0x03D8A6AC BL 0x3DE0EB8
	0x03D8A6B0 CBZ X0, 0x3D8A72C
	0x03D8A6B4 LDR X8, [X0]
	0x03D8A6B8 LDR X1, [X21]
	0x03D8A6BC MOV X19, X0
	0x03D8A6C0 LDRH W9, [X8 + 0x12E]
	0x03D8A6C4 CBZ X9, 0x3D8A6E8
	0x03D8A6C8 LDR X10, [X8 + 0xB0]
	0x03D8A6CC ADD X10, X10, 0x8
	0x03D8A6D0 LDUR X11, [X10 - 0x8]
	0x03D8A6D4 CMP X11, X1
	0x03D8A6D8 B.EQ 0x3D8A6F8
	0x03D8A6DC SUBS X9, X9, 0x1
	0x03D8A6E0 ADD X10, X10, 0x10
	0x03D8A6E4 B.NE 0x3D8A6D0
	0x03D8A6E8 MOVZ W2, 0x17
	0x03D8A6EC MOV X0, X19
	0x03D8A6F0 BL 0x1C5C788
	0x03D8A6F4 B 0x3D8A708
	0x03D8A6F8 LDR W9, [X10]
	0x03D8A6FC ADD W9, W9, 0x17
	0x03D8A700 ADD X8, X8, W9, 0x4, SXTW
	0x03D8A704 ADD X0, X8, 0x138
	0x03D8A708 LDP X8, X1, [X0]
	0x03D8A70C MOV X0, X19
	0x03D8A710 BLR X8
	0x03D8A714 LDP X20, X19, [X31 + 0x20]
	0x03D8A718 LDP X22, X21, [X31 + 0x10]
	0x03D8A71C LDR X30, [X31 + 0x8]
	0x03D8A720 FADD S0, S8, S0
	0x03D8A724 LDR V8, [X31], #0x30
	0x03D8A728 RET
	0x03D8A72C BL 0x1C16F20
	0x03D8A730 STR X30, [X31 - 0x20]!
	0x03D8A734 STP X20, X19, [X31 + 0x10]
	0x03D8A738 ADRP X20, 0x65D000
	0x03D8A73C LDRB W8, [X20 + 0xE10]
	0x03D8A740 MOV X19, X0
	0x03D8A744 TBNZ X8, 0x0, 0x3D8A75C
	0x03D8A748 ADRP X0, 0x392000
	0x03D8A74C LDR X0, [X0 + 0x120]
	0x03D8A750 BL 0x1C16CF4
	0x03D8A754 MOVZ W8, 0x1
	0x03D8A758 STRB W8, [X20 + 0xE10]
	0x03D8A75C STR X31, [X31 + 0x8]
	0x03D8A760 LDR X8, [X19 + 0x40]
	0x03D8A764 CBZ X8, 0x3D8A840
	0x03D8A768 LDR X0, [X8 + 0x3E0]
	0x03D8A76C CBZ X0, 0x3D8A840
	0x03D8A770 LDR W20, [X8 + 0x410]
	0x03D8A774 MOV X1, X31
	0x03D8A778 BL 0x3DE0EB8
	0x03D8A77C CBZ X0, 0x3D8A840
	0x03D8A780 ADRP X9, 0x392000
	0x03D8A784 LDR X8, [X0]
	0x03D8A788 LDR X9, [X9 + 0x120]
	0x03D8A78C MOV X19, X0
	0x03D8A790 LDR X1, [X9]
	0x03D8A794 LDRH W9, [X8 + 0x12E]
	0x03D8A798 CBZ W20, 0x3D8A7C8
	0x03D8A79C CBZ W9, 0x3D8A7C0
	0x03D8A7A0 LDR X10, [X8 + 0xB0]
	0x03D8A7A4 ADD X10, X10, 0x8
	0x03D8A7A8 LDUR X11, [X10 - 0x8]
	0x03D8A7AC CMP X11, X1
	0x03D8A7B0 B.EQ 0x3D8A7FC
	0x03D8A7B4 SUBS X9, X9, 0x1
	0x03D8A7B8 ADD X10, X10, 0x10
	0x03D8A7BC B.NE 0x3D8A7A8
	0x03D8A7C0 MOVZ W2, 0x19
	0x03D8A7C4 B 0x3D8A7F0
	0x03D8A7C8 CBZ W9, 0x3D8A7EC
	0x03D8A7CC LDR X10, [X8 + 0xB0]
	0x03D8A7D0 ADD X10, X10, 0x8
	0x03D8A7D4 LDUR X11, [X10 - 0x8]
	0x03D8A7D8 CMP X11, X1
	0x03D8A7DC B.EQ 0x3D8A808
	0x03D8A7E0 SUBS X9, X9, 0x1
	0x03D8A7E4 ADD X10, X10, 0x10
	0x03D8A7E8 B.NE 0x3D8A7D4
	0x03D8A7EC MOVZ W2, 0x1A
	0x03D8A7F0 MOV X0, X19
	0x03D8A7F4 BL 0x1C5C788
	0x03D8A7F8 B 0x3D8A818
	0x03D8A7FC LDR W9, [X10]
	0x03D8A800 ADD W9, W9, 0x19
	0x03D8A804 B 0x3D8A810
	0x03D8A808 LDR W9, [X10]
	0x03D8A80C ADD W9, W9, 0x1A
	0x03D8A810 ADD X8, X8, W9, 0x4, SXTW
	0x03D8A814 ADD X0, X8, 0x138
	0x03D8A818 LDP X8, X1, [X0]
	0x03D8A81C MOV X0, X19
	0x03D8A820 BLR X8
	0x03D8A824 STR X0, [X31 + 0x8]
	0x03D8A828 ADD X0, X31, 0x8
	0x03D8A82C MOV X1, X31
	0x03D8A830 BL 0x3DFE5FC
	0x03D8A834 LDP X20, X19, [X31 + 0x10]
	0x03D8A838 LDR X30, [X31], #0x20
	0x03D8A83C RET
	0x03D8A840 BL 0x1C16F20
	0x03D8A844 STR D8, [X31 - 0x30]!
	0x03D8A848 STR X30, [X31 + 0x8]
	0x03D8A84C STP X22, X21, [X31 + 0x10]
	0x03D8A850 STP X20, X19, [X31 + 0x20]
	0x03D8A854 ADRP X20, 0x65D000
	0x03D8A858 LDRB W8, [X20 + 0xE11]
	0x03D8A85C MOV X19, X0
	0x03D8A860 TBNZ X8, 0x0, 0x3D8A878
	0x03D8A864 ADRP X0, 0x392000
	0x03D8A868 LDR X0, [X0 + 0x120]
	0x03D8A86C BL 0x1C16CF4
	0x03D8A870 MOVZ W8, 0x1
	0x03D8A874 STRB W8, [X20 + 0xE11]
	0x03D8A878 LDR X8, [X19 + 0x40]
	0x03D8A87C CBZ X8, 0x3D8AA54
	0x03D8A880 LDR X0, [X8 + 0x3E0]
	0x03D8A884 CBZ X0, 0x3D8AA54
	0x03D8A888 LDR W22, [X8 + 0x410]
	0x03D8A88C MOV X1, X31
	0x03D8A890 BL 0x3DE0EB8
	0x03D8A894 CBZ X0, 0x3D8AA54
	0x03D8A898 ADRP X21, 0x392000
	0x03D8A89C LDR X8, [X0]
	0x03D8A8A0 LDR X21, [X21 + 0x120]
	0x03D8A8A4 MOV X20, X0
	0x03D8A8A8 LDRH W9, [X8 + 0x12E]
	0x03D8A8AC LDR X1, [X21]
	0x03D8A8B0 CBZ W22, 0x3D8A8E8
	0x03D8A8B4 CBZ W9, 0x3D8A8D8
	0x03D8A8B8 LDR X10, [X8 + 0xB0]
	0x03D8A8BC ADD X10, X10, 0x8
	0x03D8A8C0 LDUR X11, [X10 - 0x8]
	0x03D8A8C4 CMP X11, X1
	0x03D8A8C8 B.EQ 0x3D8A91C
	0x03D8A8CC SUBS X9, X9, 0x1
	0x03D8A8D0 ADD X10, X10, 0x10
	0x03D8A8D4 B.NE 0x3D8A8C0
	0x03D8A8D8 MOVZ W2, 0x18
	0x03D8A8DC MOV X0, X20
	0x03D8A8E0 BL 0x1C5C788
	0x03D8A8E4 B 0x3D8A92C
	0x03D8A8E8 CBZ W9, 0x3D8A90C
	0x03D8A8EC LDR X10, [X8 + 0xB0]
	0x03D8A8F0 ADD X10, X10, 0x8
	0x03D8A8F4 LDUR X11, [X10 - 0x8]
	0x03D8A8F8 CMP X11, X1
	0x03D8A8FC B.EQ 0x3D8A9A0
	0x03D8A900 SUBS X9, X9, 0x1
	0x03D8A904 ADD X10, X10, 0x10
	0x03D8A908 B.NE 0x3D8A8F4
	0x03D8A90C MOVZ W2, 0x16
	0x03D8A910 MOV X0, X20
	0x03D8A914 BL 0x1C5C788
	0x03D8A918 B 0x3D8A9B0
	0x03D8A91C LDR W9, [X10]
	0x03D8A920 ADD W9, W9, 0x18
	0x03D8A924 ADD X8, X8, W9, 0x4, SXTW
	0x03D8A928 ADD X0, X8, 0x138
	0x03D8A92C LDP X8, X1, [X0]
	0x03D8A930 MOV X0, X20
	0x03D8A934 BLR X8
	0x03D8A938 LDR X8, [X19 + 0x40]
	0x03D8A93C CBZ X8, 0x3D8AA54
	0x03D8A940 LDR X0, [X8 + 0x3E0]
	0x03D8A944 CBZ X0, 0x3D8AA54
	0x03D8A948 MOV X1, X31
	0x03D8A94C MOV V8.16B, V0.16B
	0x03D8A950 BL 0x3DE0EB8
	0x03D8A954 CBZ X0, 0x3D8AA54
	0x03D8A958 LDR X8, [X0]
	0x03D8A95C LDR X1, [X21]
	0x03D8A960 MOV X19, X0
	0x03D8A964 LDRH W9, [X8 + 0x12E]
	0x03D8A968 CBZ X9, 0x3D8A98C
	0x03D8A96C LDR X10, [X8 + 0xB0]
	0x03D8A970 ADD X10, X10, 0x8
	0x03D8A974 LDUR X11, [X10 - 0x8]
	0x03D8A978 CMP X11, X1
	0x03D8A97C B.EQ 0x3D8A994
	0x03D8A980 SUBS X9, X9, 0x1
	0x03D8A984 ADD X10, X10, 0x10
	0x03D8A988 B.NE 0x3D8A974
	0x03D8A98C MOVZ W2, 0x15
	0x03D8A990 B 0x3D8AA14
	0x03D8A994 LDR W9, [X10]
	0x03D8A998 ADD W9, W9, 0x15
	0x03D8A99C B 0x3D8AA28
	0x03D8A9A0 LDR W9, [X10]
	0x03D8A9A4 ADD W9, W9, 0x16
	0x03D8A9A8 ADD X8, X8, W9, 0x4, SXTW
	0x03D8A9AC ADD X0, X8, 0x138
	0x03D8A9B0 LDP X8, X1, [X0]
	0x03D8A9B4 MOV X0, X20
	0x03D8A9B8 BLR X8
	0x03D8A9BC LDR X8, [X19 + 0x40]
	0x03D8A9C0 CBZ X8, 0x3D8AA54
	0x03D8A9C4 LDR X0, [X8 + 0x3E0]
	0x03D8A9C8 CBZ X0, 0x3D8AA54
	0x03D8A9CC MOV X1, X31
	0x03D8A9D0 MOV V8.16B, V0.16B
	0x03D8A9D4 BL 0x3DE0EB8
	0x03D8A9D8 CBZ X0, 0x3D8AA54
	0x03D8A9DC LDR X8, [X0]
	0x03D8A9E0 LDR X1, [X21]
	0x03D8A9E4 MOV X19, X0
	0x03D8A9E8 LDRH W9, [X8 + 0x12E]
	0x03D8A9EC CBZ X9, 0x3D8AA10
	0x03D8A9F0 LDR X10, [X8 + 0xB0]
	0x03D8A9F4 ADD X10, X10, 0x8
	0x03D8A9F8 LDUR X11, [X10 - 0x8]
	0x03D8A9FC CMP X11, X1
	0x03D8AA00 B.EQ 0x3D8AA20
	0x03D8AA04 SUBS X9, X9, 0x1
	0x03D8AA08 ADD X10, X10, 0x10
	0x03D8AA0C B.NE 0x3D8A9F8
	0x03D8AA10 MOVZ W2, 0x17
	0x03D8AA14 MOV X0, X19
	0x03D8AA18 BL 0x1C5C788
	0x03D8AA1C B 0x3D8AA30
	0x03D8AA20 LDR W9, [X10]
	0x03D8AA24 ADD W9, W9, 0x17
	0x03D8AA28 ADD X8, X8, W9, 0x4, SXTW
	0x03D8AA2C ADD X0, X8, 0x138
	0x03D8AA30 LDP X8, X1, [X0]
	0x03D8AA34 MOV X0, X19
	0x03D8AA38 BLR X8
	0x03D8AA3C LDP X20, X19, [X31 + 0x20]
	0x03D8AA40 LDP X22, X21, [X31 + 0x10]
	0x03D8AA44 LDR X30, [X31 + 0x8]
	0x03D8AA48 FADD S0, S8, S0
	0x03D8AA4C LDR V8, [X31], #0x30
	0x03D8AA50 RET
	0x03D8AA54 BL 0x1C16F20
	0x03D8AA58 STP X30, X23, [X31 - 0x30]!
	0x03D8AA5C STP X22, X21, [X31 + 0x10]
	0x03D8AA60 STP X20, X19, [X31 + 0x20]
	0x03D8AA64 ADRP X22, 0x65D000
	0x03D8AA68 ADRP X20, 0x393000
	0x03D8AA6C ADRP X21, 0x3DD000
	0x03D8AA70 LDRB W8, [X22 + 0xE13]
	0x03D8AA74 LDR X20, [X20 + 0x780]
	0x03D8AA78 LDR X21, [X21 + 0x7E0]
	0x03D8AA7C MOV X19, X0
	0x03D8AA80 TBNZ X8, 0x0, 0x3D8AAF8
	0x03D8AA84 ADRP X0, 0x393000
	0x03D8AA88 LDR X0, [X0 + 0x770]
	0x03D8AA8C BL 0x1C16CF4
	0x03D8AA90 ADRP X0, 0x394000
	0x03D8AA94 LDR X0, [X0 + 0x98]
	0x03D8AA98 BL 0x1C16CF4
	0x03D8AA9C ADRP X0, 0x393000
	0x03D8AAA0 LDR X0, [X0 + 0x778]
	0x03D8AAA4 BL 0x1C16CF4
	0x03D8AAA8 ADRP X0, 0x394000
	0x03D8AAAC LDR X0, [X0 + 0xA0]
	0x03D8AAB0 BL 0x1C16CF4
	0x03D8AAB4 ADRP X0, 0x393000
	0x03D8AAB8 LDR X0, [X0 + 0x780]
	0x03D8AABC BL 0x1C16CF4
	0x03D8AAC0 ADRP X0, 0x393000
	0x03D8AAC4 LDR X0, [X0 + 0x788]
	0x03D8AAC8 BL 0x1C16CF4
	0x03D8AACC ADRP X0, 0x3DD000
	0x03D8AAD0 LDR X0, [X0 + 0x7E0]
	0x03D8AAD4 BL 0x1C16CF4
	0x03D8AAD8 ADRP X0, 0x3DD000
	0x03D8AADC LDR X0, [X0 + 0x7E8]
	0x03D8AAE0 BL 0x1C16CF4
	0x03D8AAE4 ADRP X0, 0x3DD000
	0x03D8AAE8 LDR X0, [X0 + 0x7F0]
	0x03D8AAEC BL 0x1C16CF4
	0x03D8AAF0 MOVZ W8, 0x1
	0x03D8AAF4 STRB W8, [X22 + 0xE13]
	0x03D8AAF8 MOV X0, X19
	0x03D8AAFC MOV X1, X31
	0x03D8AB00 BL 0x3DB9E70
	0x03D8AB04 LDR X8, [X20]
	0x03D8AB08 MOV X20, X0
	0x03D8AB0C MOV X0, X8
	0x03D8AB10 BL 0x1C16F10
	0x03D8AB14 LDR X2, [X21]
	0x03D8AB18 MOV X1, X19
	0x03D8AB1C MOV X3, X31
	0x03D8AB20 MOV X21, X0
	0x03D8AB24 BL 0x2D0E824
	0x03D8AB28 CBZ X20, 0x3D8AC14
	0x03D8AB2C ADRP X8, 0x393000
	0x03D8AB30 LDR X8, [X8 + 0x770]
	0x03D8AB34 ADRP X22, 0x394000
	0x03D8AB38 ADRP X23, 0x3DD000
	0x03D8AB3C MOV X0, X20
	0x03D8AB40 LDR X3, [X8]
	0x03D8AB44 LDR X22, [X22 + 0xA0]
	0x03D8AB48 LDR X23, [X23 + 0x7E8]
	0x03D8AB4C MOV X1, X21
	0x03D8AB50 MOV W2, W31
	0x03D8AB54 BL 0x21A1534
	0x03D8AB58 MOV X0, X19
	0x03D8AB5C MOV X1, X31
	0x03D8AB60 BL 0x3DB9E70
	0x03D8AB64 LDR X8, [X22]
	0x03D8AB68 MOV X20, X0
	0x03D8AB6C MOV X0, X8
	0x03D8AB70 BL 0x1C16F10
	0x03D8AB74 LDR X2, [X23]
	0x03D8AB78 MOV X1, X19
	0x03D8AB7C MOV X3, X31
	0x03D8AB80 MOV X21, X0
	0x03D8AB84 BL 0x2D0E824
	0x03D8AB88 CBZ X20, 0x3D8AC14
	0x03D8AB8C ADRP X8, 0x394000
	0x03D8AB90 LDR X8, [X8 + 0x98]
	0x03D8AB94 ADRP X22, 0x393000
	0x03D8AB98 ADRP X23, 0x3DD000
	0x03D8AB9C MOV X0, X20
	0x03D8ABA0 LDR X3, [X8]
	0x03D8ABA4 LDR X22, [X22 + 0x788]
	0x03D8ABA8 LDR X23, [X23 + 0x7F0]
	0x03D8ABAC MOV X1, X21
	0x03D8ABB0 MOV W2, W31
	0x03D8ABB4 BL 0x21A1534
	0x03D8ABB8 MOV X0, X19
	0x03D8ABBC MOV X1, X31
	0x03D8ABC0 BL 0x3DB9E70
	0x03D8ABC4 LDR X8, [X22]
	0x03D8ABC8 MOV X20, X0
	0x03D8ABCC MOV X0, X8
	0x03D8ABD0 BL 0x1C16F10
	0x03D8ABD4 LDR X2, [X23]
	0x03D8ABD8 MOV X1, X19
	0x03D8ABDC MOV X3, X31
	0x03D8ABE0 MOV X21, X0
	0x03D8ABE4 BL 0x2D0E824
	0x03D8ABE8 CBZ X20, 0x3D8AC14
	0x03D8ABEC ADRP X8, 0x393000
	0x03D8ABF0 LDR X8, [X8 + 0x778]
	0x03D8ABF4 MOV X0, X20
	0x03D8ABF8 MOV X1, X21
	0x03D8ABFC LDP X20, X19, [X31 + 0x20]
	0x03D8AC00 LDR X3, [X8]
	0x03D8AC04 LDP X22, X21, [X31 + 0x10]
	0x03D8AC08 MOV W2, W31
	0x03D8AC0C LDP X30, X23, [X31], #0x30
	0x03D8AC10 B 0x21A1534
	0x03D8AC14 BL 0x1C16F20
	0x03D8AC18 STP X30, X23, [X31 - 0x30]!
	0x03D8AC1C STP X22, X21, [X31 + 0x10]
	0x03D8AC20 STP X20, X19, [X31 + 0x20]
	0x03D8AC24 ADRP X22, 0x65D000
	0x03D8AC28 ADRP X20, 0x393000
	0x03D8AC2C ADRP X21, 0x3DD000
	0x03D8AC30 LDRB W8, [X22 + 0xE14]
	0x03D8AC34 LDR X20, [X20 + 0x780]
	0x03D8AC38 LDR X21, [X21 + 0x7E0]
	0x03D8AC3C MOV X19, X0
	0x03D8AC40 TBNZ X8, 0x0, 0x3D8ACB8
	0x03D8AC44 ADRP X0, 0x393000
	0x03D8AC48 LDR X0, [X0 + 0x790]
	0x03D8AC4C BL 0x1C16CF4
	0x03D8AC50 ADRP X0, 0x394000
	0x03D8AC54 LDR X0, [X0 + 0xD28]
	0x03D8AC58 BL 0x1C16CF4
	0x03D8AC5C ADRP X0, 0x393000
	0x03D8AC60 LDR X0, [X0 + 0x798]
	0x03D8AC64 BL 0x1C16CF4
	0x03D8AC68 ADRP X0, 0x394000
	0x03D8AC6C LDR X0, [X0 + 0xA0]
	0x03D8AC70 BL 0x1C16CF4
	0x03D8AC74 ADRP X0, 0x393000
	0x03D8AC78 LDR X0, [X0 + 0x780]
	0x03D8AC7C BL 0x1C16CF4
	0x03D8AC80 ADRP X0, 0x393000
	0x03D8AC84 LDR X0, [X0 + 0x788]
	0x03D8AC88 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X22, 0x65E000
	017 Move W8, [X22+3591]
	018 Move W20, W2
	019 Move W21, W1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x393000
	026 Move X0, [X0+288]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3591], W8
	030 Move [X31+8], X31
	031 Move W8, [X19+1024]
	032 Compare W8, 0
	033 JumpIfNotEqual {665}
	034 Move X0, X19
	035 Move X1, X31
	036 Call VisualElement.get_resolvedStyle, X0
	037 Compare X0, 0
	038 JumpIfEqual {681}
	039 Move X23, 0x393000
	040 Move X8, [X0]
	041 Move X23, [X23+288]
	042 Move X22, X0
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X23]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 15
	054 Move X0, X22
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 15
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X8, [X0]
	061 Move X1, [X0+8]
	062 Move X0, X22
	063 NotImplemented "Instruction BLR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, X19
	066 Move X1, X31
	067 Call VisualElement.get_resolvedStyle, X0
	068 Compare X0, 0
	069 JumpIfEqual {681}
	070 Move X8, [X0]
	071 Move X1, [X23]
	072 Move X22, X0
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move W2, 43
	083 Move X0, X22
	084 Call 0x1C5D788
	085 Move W9, [X10]
	086 Add W9, W9, 43
	087 Add X8, X8, W9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X1, [X0+8]
	091 Move X0, X22
	092 NotImplemented "Instruction BLR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, X19
	095 Move X1, X31
	096 Call VisualElement.get_resolvedStyle, X0
	097 Compare X0, 0
	098 JumpIfEqual {681}
	099 Move X8, [X0]
	100 Move X1, [X23]
	101 Move X22, X0
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Compare X9, 0
	104 JumpIfEqual {111}
	105 Move X10, [X8+176]
	106 Add X10, X10, 8
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Subtract X9, X9, 1
	110 Add X10, X10, 16
	111 Move W2, 44
	112 Move X0, X22
	113 Call 0x1C5D788
	114 Move W9, [X10]
	115 Add W9, W9, 44
	116 Add X8, X8, W9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X22
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X0, [X19+984]
	123 Compare X0, 0
	124 JumpIfEqual {681}
	125 Move X1, X31
	126 Move V8, V0
	127 Call VisualElement.get_resolvedStyle, X0
	128 Compare X0, 0
	129 JumpIfEqual {681}
	130 Move X8, [X0]
	131 Move X1, [X23]
	132 Move X22, X0
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Compare X9, 0
	135 JumpIfEqual {142}
	136 Move X10, [X8+176]
	137 Add X10, X10, 8
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Subtract X9, X9, 1
	141 Add X10, X10, 16
	142 Move W2, 44
	143 Move X0, X22
	144 Call 0x1C5D788
	145 Move W9, [X10]
	146 Add W9, W9, 44
	147 Add X8, X8, W9
	148 Add X0, X8, 312
	149 Move X8, [X0]
	150 Move X1, [X0+8]
	151 Move X0, X22
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move X0, [X19+984]
	154 Compare X0, 0
	155 JumpIfEqual {681}
	156 Move X1, X31
	157 Move V9, V0
	158 Call VisualElement.get_resolvedStyle, X0
	159 Compare X0, 0
	160 JumpIfEqual {681}
	161 Move X8, [X0]
	162 Move X1, [X23]
	163 Move X22, X0
	164 NotImplemented "Instruction LDRH not yet implemented."
	165 Compare X9, 0
	166 JumpIfEqual {173}
	167 Move X10, [X8+176]
	168 Add X10, X10, 8
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Subtract X9, X9, 1
	172 Add X10, X10, 16
	173 Move W2, 22
	174 Move X0, X22
	175 Call 0x1C5D788
	176 Move W9, [X10]
	177 Add W9, W9, 22
	178 Add X8, X8, W9
	179 Add X0, X8, 312
	180 Move X8, [X0]
	181 Move X1, [X0+8]
	182 Move X0, X22
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Move X0, [X19+984]
	185 Compare X0, 0
	186 JumpIfEqual {681}
	187 Move X1, X31
	188 Move V11, V0
	189 Call VisualElement.get_resolvedStyle, X0
	190 Compare X0, 0
	191 JumpIfEqual {681}
	192 Move X8, [X0]
	193 Move X1, [X23]
	194 Move X22, X0
	195 NotImplemented "Instruction LDRH not yet implemented."
	196 Compare X9, 0
	197 JumpIfEqual {204}
	198 Move X10, [X8+176]
	199 Add X10, X10, 8
	200 NotImplemented "Instruction LDUR not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Subtract X9, X9, 1
	203 Add X10, X10, 16
	204 Move W2, 23
	205 Move X0, X22
	206 Call 0x1C5D788
	207 Move W9, [X10]
	208 Add W9, W9, 23
	209 Add X8, X8, W9
	210 Add X0, X8, 312
	211 Move X8, [X0]
	212 Move X1, [X0+8]
	213 Move X0, X22
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Move X0, [X19+984]
	216 Compare X0, 0
	217 JumpIfEqual {681}
	218 Move X1, X31
	219 Move V12, V0
	220 Call VisualElement.get_resolvedStyle, X0
	221 Compare X0, 0
	222 JumpIfEqual {681}
	223 Move X8, [X0]
	224 Move X1, [X23]
	225 Move X22, X0
	226 NotImplemented "Instruction LDRH not yet implemented."
	227 Compare X9, 0
	228 JumpIfEqual {235}
	229 Move X10, [X8+176]
	230 Add X10, X10, 8
	231 NotImplemented "Instruction LDUR not yet implemented."
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Subtract X9, X9, 1
	234 Add X10, X10, 16
	235 Move W2, 26
	236 Move X0, X22
	237 Call 0x1C5D788
	238 Move W9, [X10]
	239 Add W9, W9, 26
	240 Add X8, X8, W9
	241 Add X0, X8, 312
	242 Move X8, [X0]
	243 Move X1, [X0+8]
	244 Move X0, X22
	245 NotImplemented "Instruction BLR not yet implemented."
	246 Move [X31+8], X0
	247 Add X0, X31, 8
	248 Move X1, X31
	249 Call StyleFloat.get_value, X0
	250 Move X0, [X19+992]
	251 Compare X0, 0
	252 JumpIfEqual {681}
	253 Move X1, X31
	254 Move V10, V0
	255 Call VisualElement.get_resolvedStyle, X0
	256 Compare X0, 0
	257 JumpIfEqual {681}
	258 Move X8, [X0]
	259 Move X1, [X23]
	260 Move X22, X0
	261 NotImplemented "Instruction LDRH not yet implemented."
	262 Compare X9, 0
	263 JumpIfEqual {270}
	264 Move X10, [X8+176]
	265 Add X10, X10, 8
	266 NotImplemented "Instruction LDUR not yet implemented."
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Subtract X9, X9, 1
	269 Add X10, X10, 16
	270 Move W2, 22
	271 Move X0, X22
	272 Call 0x1C5D788
	273 Move W9, [X10]
	274 Add W9, W9, 22
	275 Add X8, X8, W9
	276 Add X0, X8, 312
	277 Move X8, [X0]
	278 Move X1, [X0+8]
	279 Move X0, X22
	280 NotImplemented "Instruction BLR not yet implemented."
	281 Move X0, [X19+992]
	282 Compare X0, 0
	283 JumpIfEqual {681}
	284 Move X1, X31
	285 Move V13, V0
	286 Call VisualElement.get_resolvedStyle, X0
	287 Compare X0, 0
	288 JumpIfEqual {681}
	289 Move X8, [X0]
	290 Move X1, [X23]
	291 Move X22, X0
	292 NotImplemented "Instruction LDRH not yet implemented."
	293 Compare X9, 0
	294 JumpIfEqual {301}
	295 Move X10, [X8+176]
	296 Add X10, X10, 8
	297 NotImplemented "Instruction LDUR not yet implemented."
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Subtract X9, X9, 1
	300 Add X10, X10, 16
	301 Move W2, 23
	302 Move X0, X22
	303 Call 0x1C5D788
	304 Move W9, [X10]
	305 Add W9, W9, 23
	306 Add X8, X8, W9
	307 Add X0, X8, 312
	308 Move X8, [X0]
	309 Move X1, [X0+8]
	310 Move X0, X22
	311 NotImplemented "Instruction BLR not yet implemented."
	312 Move X0, [X19+992]
	313 Compare X0, 0
	314 JumpIfEqual {681}
	315 Move X1, X31
	316 Move V14, V0
	317 Call VisualElement.get_resolvedStyle, X0
	318 Compare X0, 0
	319 JumpIfEqual {681}
	320 Move X8, [X0]
	321 Move X1, [X23]
	322 Move X22, X0
	323 NotImplemented "Instruction LDRH not yet implemented."
	324 Compare X9, 0
	325 JumpIfEqual {332}
	326 Move X10, [X8+176]
	327 Add X10, X10, 8
	328 NotImplemented "Instruction LDUR not yet implemented."
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Subtract X9, X9, 1
	331 Add X10, X10, 16
	332 Move W2, 26
	333 Move X0, X22
	334 Call 0x1C5D788
	335 Move W9, [X10]
	336 Add W9, W9, 26
	337 Add X8, X8, W9
	338 Add X0, X8, 312
	339 Move X8, [X0]
	340 Move X1, [X0+8]
	341 Move X0, X22
	342 NotImplemented "Instruction BLR not yet implemented."
	343 Move [X31+8], X0
	344 Add X0, X31, 8
	345 Move X1, X31
	346 Call StyleFloat.get_value, X0
	347 Move W8, [X19+1040]
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move X0, X19
	350 Move X1, X31
	351 Call VisualElement.get_resolvedStyle, X0
	352 Compare X0, 0
	353 JumpIfEqual {681}
	354 Move X8, [X0]
	355 Move X1, [X23]
	356 Move X22, X0
	357 NotImplemented "Instruction LDRH not yet implemented."
	358 Compare X9, 0
	359 JumpIfEqual {366}
	360 Move X10, [X8+176]
	361 Add X10, X10, 8
	362 NotImplemented "Instruction LDUR not yet implemented."
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Subtract X9, X9, 1
	365 Add X10, X10, 16
	366 Move W2, 19
	367 Move X0, X22
	368 Call 0x1C5D788
	369 Move V15, V0
	370 Add S12, S11, S12
	371 Add S11, S13, S14
	372 Move W9, [X10]
	373 Add W9, W9, 19
	374 Add X8, X8, W9
	375 Add X0, X8, 312
	376 Move X8, [X0]
	377 Move X1, [X0+8]
	378 Move X0, X22
	379 NotImplemented "Instruction BLR not yet implemented."
	380 Move X0, [X19+984]
	381 Compare X0, 0
	382 JumpIfEqual {681}
	383 Move X1, X31
	384 Move V8, V0
	385 Call VisualElement.get_resolvedStyle, X0
	386 Compare X0, 0
	387 JumpIfEqual {681}
	388 Move X8, [X0]
	389 Move X1, [X23]
	390 Move X22, X0
	391 NotImplemented "Instruction LDRH not yet implemented."
	392 Compare X9, 0
	393 JumpIfEqual {400}
	394 Move X10, [X8+176]
	395 Add X10, X10, 8
	396 NotImplemented "Instruction LDUR not yet implemented."
	397 NotImplemented "Instruction CMP not yet implemented."
	398 Subtract X9, X9, 1
	399 Add X10, X10, 16
	400 Move W2, 19
	401 Move X0, X22
	402 Call 0x1C5D788
	403 Move W9, [X10]
	404 Add W9, W9, 19
	405 Add X8, X8, W9
	406 Add X0, X8, 312
	407 Move X8, [X0]
	408 Move X1, [X0+8]
	409 Move X0, X22
	410 NotImplemented "Instruction BLR not yet implemented."
	411 Move X0, [X19+984]
	412 Compare X0, 0
	413 JumpIfEqual {681}
	414 Move X1, X31
	415 Move V9, V0
	416 Call VisualElement.get_resolvedStyle, X0
	417 Compare X0, 0
	418 JumpIfEqual {681}
	419 Move X8, [X0]
	420 Move X1, [X23]
	421 Move X22, X0
	422 NotImplemented "Instruction LDRH not yet implemented."
	423 Compare X9, 0
	424 JumpIfEqual {431}
	425 Move X10, [X8+176]
	426 Add X10, X10, 8
	427 NotImplemented "Instruction LDUR not yet implemented."
	428 NotImplemented "Instruction CMP not yet implemented."
	429 Subtract X9, X9, 1
	430 Add X10, X10, 16
	431 Move W2, 24
	432 Move X0, X22
	433 Call 0x1C5D788
	434 Move W9, [X10]
	435 Add W9, W9, 24
	436 Add X8, X8, W9
	437 Add X0, X8, 312
	438 Move X8, [X0]
	439 Move X1, [X0+8]
	440 Move X0, X22
	441 NotImplemented "Instruction BLR not yet implemented."
	442 Move X0, [X19+984]
	443 Compare X0, 0
	444 JumpIfEqual {681}
	445 Move X1, X31
	446 Move V11, V0
	447 Call VisualElement.get_resolvedStyle, X0
	448 Compare X0, 0
	449 JumpIfEqual {681}
	450 Move X8, [X0]
	451 Move X1, [X23]
	452 Move X22, X0
	453 NotImplemented "Instruction LDRH not yet implemented."
	454 Compare X9, 0
	455 JumpIfEqual {462}
	456 Move X10, [X8+176]
	457 Add X10, X10, 8
	458 NotImplemented "Instruction LDUR not yet implemented."
	459 NotImplemented "Instruction CMP not yet implemented."
	460 Subtract X9, X9, 1
	461 Add X10, X10, 16
	462 Move W2, 21
	463 Move X0, X22
	464 Call 0x1C5D788
	465 Move W9, [X10]
	466 Add W9, W9, 21
	467 Add X8, X8, W9
	468 Add X0, X8, 312
	469 Move X8, [X0]
	470 Move X1, [X0+8]
	471 Move X0, X22
	472 NotImplemented "Instruction BLR not yet implemented."
	473 Move X0, [X19+984]
	474 Compare X0, 0
	475 JumpIfEqual {681}
	476 Move X1, X31
	477 Move V12, V0
	478 Call VisualElement.get_resolvedStyle, X0
	479 Compare X0, 0
	480 JumpIfEqual {681}
	481 Move X8, [X0]
	482 Move X1, [X23]
	483 Move X22, X0
	484 NotImplemented "Instruction LDRH not yet implemented."
	485 Compare X9, 0
	486 JumpIfEqual {493}
	487 Move X10, [X8+176]
	488 Add X10, X10, 8
	489 NotImplemented "Instruction LDUR not yet implemented."
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Subtract X9, X9, 1
	492 Add X10, X10, 16
	493 Move W2, 25
	494 Move X0, X22
	495 Call 0x1C5D788
	496 Move W9, [X10]
	497 Add W9, W9, 25
	498 Add X8, X8, W9
	499 Add X0, X8, 312
	500 Move X8, [X0]
	501 Move X1, [X0+8]
	502 Move X0, X22
	503 NotImplemented "Instruction BLR not yet implemented."
	504 Move [X31+8], X0
	505 Add X0, X31, 8
	506 Move X1, X31
	507 Call StyleFloat.get_value, X0
	508 Move X0, [X19+992]
	509 Compare X0, 0
	510 JumpIfEqual {681}
	511 Move X1, X31
	512 Move V10, V0
	513 Call VisualElement.get_resolvedStyle, X0
	514 Compare X0, 0
	515 JumpIfEqual {681}
	516 Move X8, [X0]
	517 Move X1, [X23]
	518 Move X22, X0
	519 NotImplemented "Instruction LDRH not yet implemented."
	520 Compare X9, 0
	521 JumpIfEqual {528}
	522 Move X10, [X8+176]
	523 Add X10, X10, 8
	524 NotImplemented "Instruction LDUR not yet implemented."
	525 NotImplemented "Instruction CMP not yet implemented."
	526 Subtract X9, X9, 1
	527 Add X10, X10, 16
	528 Move W2, 24
	529 Move X0, X22
	530 Call 0x1C5D788
	531 Move W9, [X10]
	532 Add W9, W9, 24
	533 Add X8, X8, W9
	534 Add X0, X8, 312
	535 Move X8, [X0]
	536 Move X1, [X0+8]
	537 Move X0, X22
	538 NotImplemented "Instruction BLR not yet implemented."
	539 Move X0, [X19+992]
	540 Compare X0, 0
	541 JumpIfEqual {681}
	542 Move X1, X31
	543 Move V13, V0
	544 Call VisualElement.get_resolvedStyle, X0
	545 Compare X0, 0
	546 JumpIfEqual {681}
	547 Move X8, [X0]
	548 Move X1, [X23]
	549 Move X22, X0
	550 NotImplemented "Instruction LDRH not yet implemented."
	551 Compare X9, 0
	552 JumpIfEqual {559}
	553 Move X10, [X8+176]
	554 Add X10, X10, 8
	555 NotImplemented "Instruction LDUR not yet implemented."
	556 NotImplemented "Instruction CMP not yet implemented."
	557 Subtract X9, X9, 1
	558 Add X10, X10, 16
	559 Move W2, 21
	560 Move X0, X22
	561 Call 0x1C5D788
	562 Move W9, [X10]
	563 Add W9, W9, 21
	564 Add X8, X8, W9
	565 Add X0, X8, 312
	566 Move X8, [X0]
	567 Move X1, [X0+8]
	568 Move X0, X22
	569 NotImplemented "Instruction BLR not yet implemented."
	570 Move X0, [X19+992]
	571 Compare X0, 0
	572 JumpIfEqual {681}
	573 Move X1, X31
	574 Move V14, V0
	575 Call VisualElement.get_resolvedStyle, X0
	576 Compare X0, 0
	577 JumpIfEqual {681}
	578 Move X8, [X0]
	579 Move X1, [X23]
	580 Move X22, X0
	581 NotImplemented "Instruction LDRH not yet implemented."
	582 Compare X9, 0
	583 JumpIfEqual {590}
	584 Move X10, [X8+176]
	585 Add X10, X10, 8
	586 NotImplemented "Instruction LDUR not yet implemented."
	587 NotImplemented "Instruction CMP not yet implemented."
	588 Subtract X9, X9, 1
	589 Add X10, X10, 16
	590 Move W2, 25
	591 Move X0, X22
	592 Call 0x1C5D788
	593 Move W9, [X10]
	594 Add W9, W9, 25
	595 Add X8, X8, W9
	596 Add X0, X8, 312
	597 Move X8, [X0]
	598 Move X1, [X0+8]
	599 Move X0, X22
	600 Add S12, S11, S12
	601 Add S11, S13, S14
	602 NotImplemented "Instruction BLR not yet implemented."
	603 Move [X31+8], X0
	604 Add X0, X31, 8
	605 Move X1, X31
	606 Call StyleFloat.get_value, X0
	607 Move V15, V0
	608 Add S0, S12, S9
	609 Add S1, S15, S0
	610 Add S1, S11, S1
	611 NotImplemented "Instruction FCMP not yet implemented."
	612 Add S9, S10, S12
	613 Add S0, S15, S9
	614 Add S0, S11, S0
	615 NotImplemented "Instruction FCMP not yet implemented."
	616 Move TEMP, X21
	617 And TEMP, TEMP, 1
	618 Compare TEMP, 1
	619 JumpIfNotEqual {623}
	620 Move X0, X19
	621 Move V0, V10
	622 Call TwoPaneSplitView.SetFixedPaneDimension, X0, V0
	623 Move TEMP, X20
	624 And TEMP, TEMP, 1
	625 Compare TEMP, 1
	626 JumpIfNotEqual {665}
	627 Compare X19, 0
	628 JumpIfEqual {681}
	629 Move W8, [X19+1044]
	630 Add S0, S15, S11
	631 NotImplemented "Instruction CMP not yet implemented."
	632 NotImplemented "Instruction FCSEL not yet implemented."
	633 Move TEMP, X20
	634 And TEMP, TEMP, 1
	635 Compare TEMP, 1
	636 JumpIfNotEqual {665}
	637 Compare X19, 0
	638 JumpIfEqual {681}
	639 Move W8, [X19+1044]
	640 Subtract S1, S8, S9
	641 Subtract S1, S1, S12
	642 Subtract S0, S8, S15
	643 Subtract S0, S0, S11
	644 Subtract S8, S0, S12
	645 Move TEMP, X21
	646 And TEMP, TEMP, 1
	647 Compare TEMP, 1
	648 JumpIfNotEqual {652}
	649 Move X0, X19
	650 Move V0, V8
	651 Call TwoPaneSplitView.SetFixedPaneDimension, X0, V0
	652 Move TEMP, X20
	653 And TEMP, TEMP, 1
	654 Compare TEMP, 1
	655 JumpIfNotEqual {665}
	656 Compare X19, 0
	657 JumpIfEqual {681}
	658 Move W8, [X19+1044]
	659 Add S0, S12, S8
	660 Add S1, S15, S11
	661 NotImplemented "Instruction CMP not yet implemented."
	662 NotImplemented "Instruction FCSEL not yet implemented."
	663 Move X0, X19
	664 Call TwoPaneSplitView.SetDragLineOffset, X0, V0
	665 Move X20, [X31+112]
	666 Move X19, [X31+120]
	667 Move X22, [X31+96]
	668 Move X21, [X31+104]
	669 Move X30, [X31+80]
	670 Move X23, [X31+88]
	671 Move D9, [X31+64]
	672 Move D8, [X31+72]
	673 Move D11, [X31+48]
	674 Move D10, [X31+56]
	675 Move D13, [X31+32]
	676 Move D12, [X31+40]
	677 Move D15, [X31+16]
	678 Move D14, [X31+24]
	679 Add X31, X31, 128
	680 Return 
	681 Call 0x1C17F20

Method: UnityEngine.UIElements.VisualElement get_contentContainer()

Disassembly:
	0x03D8AEDC ADD X0, X8, 0x138
	0x03D8AEE0 LDP X8, X1, [X0]

ISIL:
	001 Move X0, [X0+1032]
	002 Return X0

Method: System.Void OnViewDataReady()

Disassembly:
	0x03D8AEE4 MOV X0, X20
	0x03D8AEE8 BLR X8
	0x03D8AEEC FADD S9, S0, S9
	0x03D8AEF0 MOV V8.16B, V0.16B
	0x03D8AEF4 FCMP S9, S0
	0x03D8AEF8 B.PL 0x3D8AF18
	0x03D8AEFC MOV X0, X19
	0x03D8AF00 BL 0x3D8A408
	0x03D8AF04 FCMP S9, S0
	0x03D8AF08 B.PL 0x3D8AF18
	0x03D8AF0C MOV X0, X19
	0x03D8AF10 BL 0x3D8A408
	0x03D8AF14 MOV V9.16B, V0.16B
	0x03D8AF18 LDR X0, [X19 + 0x40]
	0x03D8AF1C CBZ X0, 0x3D8B458

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call VisualElement.OnViewDataReady, X0
	006 Move X0, X19
	007 Move X1, X31
	008 Call VisualElement.GetFullHierarchicalViewDataKey, X0
	009 Move X2, X0
	010 Move X0, X19
	011 Move X1, X19
	012 Move X3, X31
	013 Call VisualElement.OverwriteFromViewData, X0, X1, X2
	014 Move X0, X19
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Call TwoPaneSplitView.PostDisplaySetup, X0
	018 Return 

Method: System.Void SetDragLineOffset(System.Single offset)

Disassembly:
	0x03D8AC8C ADRP X0, 0x3DD000
	0x03D8AC90 LDR X0, [X0 + 0x7E0]
	0x03D8AC94 BL 0x1C16CF4
	0x03D8AC98 ADRP X0, 0x3DD000
	0x03D8AC9C LDR X0, [X0 + 0x7E8]
	0x03D8ACA0 BL 0x1C16CF4
	0x03D8ACA4 ADRP X0, 0x3DD000
	0x03D8ACA8 LDR X0, [X0 + 0x7F0]
	0x03D8ACAC BL 0x1C16CF4
	0x03D8ACB0 MOVZ W8, 0x1
	0x03D8ACB4 STRB W8, [X22 + 0xE14]
	0x03D8ACB8 MOV X0, X19
	0x03D8ACBC MOV X1, X31
	0x03D8ACC0 BL 0x3DB9E70
	0x03D8ACC4 LDR X8, [X20]
	0x03D8ACC8 MOV X20, X0
	0x03D8ACCC MOV X0, X8
	0x03D8ACD0 BL 0x1C16F10
	0x03D8ACD4 LDR X2, [X21]
	0x03D8ACD8 MOV X1, X19
	0x03D8ACDC MOV X3, X31
	0x03D8ACE0 MOV X21, X0
	0x03D8ACE4 BL 0x2D0E824
	0x03D8ACE8 CBZ X20, 0x3D8ADD4
	0x03D8ACEC ADRP X8, 0x393000
	0x03D8ACF0 LDR X8, [X8 + 0x790]
	0x03D8ACF4 ADRP X22, 0x394000
	0x03D8ACF8 ADRP X23, 0x3DD000
	0x03D8ACFC MOV X0, X20
	0x03D8AD00 LDR X3, [X8]
	0x03D8AD04 LDR X22, [X22 + 0xA0]
	0x03D8AD08 LDR X23, [X23 + 0x7E8]
	0x03D8AD0C MOV X1, X21
	0x03D8AD10 MOV W2, W31
	0x03D8AD14 BL 0x21A18B4
	0x03D8AD18 MOV X0, X19
	0x03D8AD1C MOV X1, X31
	0x03D8AD20 BL 0x3DB9E70
	0x03D8AD24 LDR X8, [X22]
	0x03D8AD28 MOV X20, X0
	0x03D8AD2C MOV X0, X8
	0x03D8AD30 BL 0x1C16F10
	0x03D8AD34 LDR X2, [X23]
	0x03D8AD38 MOV X1, X19
	0x03D8AD3C MOV X3, X31
	0x03D8AD40 MOV X21, X0
	0x03D8AD44 BL 0x2D0E824
	0x03D8AD48 CBZ X20, 0x3D8ADD4
	0x03D8AD4C ADRP X8, 0x394000
	0x03D8AD50 LDR X8, [X8 + 0xD28]
	0x03D8AD54 ADRP X22, 0x393000
	0x03D8AD58 ADRP X23, 0x3DD000
	0x03D8AD5C MOV X0, X20
	0x03D8AD60 LDR X3, [X8]
	0x03D8AD64 LDR X22, [X22 + 0x788]
	0x03D8AD68 LDR X23, [X23 + 0x7F0]
	0x03D8AD6C MOV X1, X21
	0x03D8AD70 MOV W2, W31
	0x03D8AD74 BL 0x21A18B4
	0x03D8AD78 MOV X0, X19
	0x03D8AD7C MOV X1, X31
	0x03D8AD80 BL 0x3DB9E70
	0x03D8AD84 LDR X8, [X22]
	0x03D8AD88 MOV X20, X0
	0x03D8AD8C MOV X0, X8
	0x03D8AD90 BL 0x1C16F10
	0x03D8AD94 LDR X2, [X23]
	0x03D8AD98 MOV X1, X19
	0x03D8AD9C MOV X3, X31
	0x03D8ADA0 MOV X21, X0
	0x03D8ADA4 BL 0x2D0E824
	0x03D8ADA8 CBZ X20, 0x3D8ADD4
	0x03D8ADAC ADRP X8, 0x393000
	0x03D8ADB0 LDR X8, [X8 + 0x798]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x65E000
	008 Move W8, [X20+3592]
	009 Move V8, V0
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x393000
	016 Move X0, [X0+296]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3592], W8
	020 Move X0, [X19+1016]
	021 Compare X0, 0
	022 JumpIfEqual {80}
	023 Move W22, [X19+1040]
	024 Move X1, X31
	025 Call VisualElement.get_style, X0
	026 Move X19, X0
	027 Move V0, V8
	028 Move X0, X31
	029 Call StyleLength.op_Implicit, V0
	030 Compare X19, 0
	031 JumpIfEqual {80}
	032 Move X10, 0x393000
	033 Move X9, [X19]
	034 Move X10, [X10+296]
	035 Move X8, X1
	036 Move X20, X0
	037 And X21, X8, 0
	038 Move X1, [X10]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Compare W22, 0
	041 JumpIfEqual {51}
	042 Compare W10, 0
	043 JumpIfEqual {50}
	044 Move X8, [X9+176]
	045 Add X8, X8, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X10, X10, 1
	049 Add X8, X8, 16
	050 Move W2, 45
	051 Compare W10, 0
	052 JumpIfEqual {59}
	053 Move X8, [X9+176]
	054 Add X8, X8, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X10, X10, 1
	058 Add X8, X8, 16
	059 Move W2, 25
	060 Move X0, X19
	061 Call 0x1C5D788
	062 Move W8, [X8]
	063 Add W8, W8, 45
	064 Move W8, [X8]
	065 Add W8, W8, 25
	066 Add X8, X9, W8
	067 Add X0, X8, 312
	068 Move X4, [X0]
	069 Move X3, [X0+8]
	070 Move X0, X19
	071 Move X1, X20
	072 Move X2, X21
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+8]
	078 Move V8, [X31+48]
	079 CallNoReturn X4
	080 Call 0x1C17F20

Method: System.Void SetFixedPaneDimension(System.Single dimension)

Disassembly:
	0x03D8ADB4 MOV X0, X20
	0x03D8ADB8 MOV X1, X21
	0x03D8ADBC LDP X20, X19, [X31 + 0x20]
	0x03D8ADC0 LDR X3, [X8]
	0x03D8ADC4 LDP X22, X21, [X31 + 0x10]
	0x03D8ADC8 MOV W2, W31
	0x03D8ADCC LDP X30, X23, [X31], #0x30
	0x03D8ADD0 B 0x21A18B4
	0x03D8ADD4 BL 0x1C16F20
	0x03D8ADD8 STR D12, [X31 - 0x70]!
	0x03D8ADDC STP D11, D10, [X31 + 0x10]
	0x03D8ADE0 STP D9, D8, [X31 + 0x20]
	0x03D8ADE4 STP X30, X25, [X31 + 0x30]
	0x03D8ADE8 STP X24, X23, [X31 + 0x40]
	0x03D8ADEC STP X22, X21, [X31 + 0x50]
	0x03D8ADF0 STP X20, X19, [X31 + 0x60]
	0x03D8ADF4 ADRP X20, 0x65D000
	0x03D8ADF8 LDRB W8, [X20 + 0xE15]
	0x03D8ADFC MOV V9.16B, V0.16B
	0x03D8AE00 MOV X19, X0
	0x03D8AE04 TBNZ X8, 0x0, 0x3D8AE28
	0x03D8AE08 ADRP X0, 0x392000
	0x03D8AE0C LDR X0, [X0 + 0x120]
	0x03D8AE10 BL 0x1C16CF4
	0x03D8AE14 ADRP X0, 0x392000
	0x03D8AE18 LDR X0, [X0 + 0x128]
	0x03D8AE1C BL 0x1C16CF4
	0x03D8AE20 MOVZ W8, 0x1
	0x03D8AE24 STRB W8, [X20 + 0xE15]
	0x03D8AE28 LDR X8, [X19 + 0x40]
	0x03D8AE2C CBZ X8, 0x3D8B458
	0x03D8AE30 LDR X0, [X8 + 0x3D8]
	0x03D8AE34 CBZ X0, 0x3D8B458
	0x03D8AE38 LDR W21, [X8 + 0x410]
	0x03D8AE3C MOV X1, X31
	0x03D8AE40 BL 0x3DE0EB8
	0x03D8AE44 CBZ X0, 0x3D8B458
	0x03D8AE48 ADRP X23, 0x392000
	0x03D8AE4C LDR X8, [X0]
	0x03D8AE50 LDR X23, [X23 + 0x120]
	0x03D8AE54 MOV X20, X0
	0x03D8AE58 LDRH W9, [X8 + 0x12E]
	0x03D8AE5C LDR X1, [X23]
	0x03D8AE60 CBZ W21, 0x3D8AE90
	0x03D8AE64 CBZ W9, 0x3D8AE88
	0x03D8AE68 LDR X10, [X8 + 0xB0]
	0x03D8AE6C ADD X10, X10, 0x8
	0x03D8AE70 LDUR X11, [X10 - 0x8]
	0x03D8AE74 CMP X11, X1
	0x03D8AE78 B.EQ 0x3D8AEC4
	0x03D8AE7C SUBS X9, X9, 0x1
	0x03D8AE80 ADD X10, X10, 0x10
	0x03D8AE84 B.NE 0x3D8AE70
	0x03D8AE88 MOVZ W2, 0x13
	0x03D8AE8C B 0x3D8AEB8
	0x03D8AE90 CBZ W9, 0x3D8AEB4
	0x03D8AE94 LDR X10, [X8 + 0xB0]
	0x03D8AE98 ADD X10, X10, 0x8
	0x03D8AE9C LDUR X11, [X10 - 0x8]
	0x03D8AEA0 CMP X11, X1
	0x03D8AEA4 B.EQ 0x3D8AED0
	0x03D8AEA8 SUBS X9, X9, 0x1
	0x03D8AEAC ADD X10, X10, 0x10
	0x03D8AEB0 B.NE 0x3D8AE9C
	0x03D8AEB4 MOVZ W2, 0x2C
	0x03D8AEB8 MOV X0, X20
	0x03D8AEBC BL 0x1C5C788
	0x03D8AEC0 B 0x3D8AEE0
	0x03D8AEC4 LDR W9, [X10]
	0x03D8AEC8 ADD W9, W9, 0x13
	0x03D8AECC B 0x3D8AED8
	0x03D8AED0 LDR W9, [X10]
	0x03D8AED4 ADD W9, W9, 0x2C
	0x03D8AED8 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x65E000
	008 Move W8, [X20+3593]
	009 Move V8, V0
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x393000
	016 Move X0, [X0+296]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3593], W8
	020 Move X0, [X19+984]
	021 Compare X0, 0
	022 JumpIfEqual {80}
	023 Move W22, [X19+1040]
	024 Move X1, X31
	025 Call VisualElement.get_style, X0
	026 Move X19, X0
	027 Move V0, V8
	028 Move X0, X31
	029 Call StyleLength.op_Implicit, V0
	030 Compare X19, 0
	031 JumpIfEqual {80}
	032 Move X10, 0x393000
	033 Move X9, [X19]
	034 Move X10, [X10+296]
	035 Move X8, X1
	036 Move X20, X0
	037 And X21, X8, 0
	038 Move X1, [X10]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Compare W22, 0
	041 JumpIfEqual {51}
	042 Compare W10, 0
	043 JumpIfEqual {50}
	044 Move X8, [X9+176]
	045 Add X8, X8, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X10, X10, 1
	049 Add X8, X8, 16
	050 Move W2, 24
	051 Compare W10, 0
	052 JumpIfEqual {59}
	053 Move X8, [X9+176]
	054 Add X8, X8, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X10, X10, 1
	058 Add X8, X8, 16
	059 Move W2, 54
	060 Move X0, X19
	061 Call 0x1C5D788
	062 Move W8, [X8]
	063 Add W8, W8, 24
	064 Move W8, [X8]
	065 Add W8, W8, 54
	066 Add X8, X9, W8
	067 Add X0, X8, 312
	068 Move X4, [X0]
	069 Move X3, [X0+8]
	070 Move X0, X19
	071 Move X1, X20
	072 Move X2, X21
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+8]
	078 Move V8, [X31+48]
	079 CallNoReturn X4
	080 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D8AF20 LDR W21, [X0 + 0x410]
	0x03D8AF24 MOV X1, X31
	0x03D8AF28 BL 0x3DE0EB8
	0x03D8AF2C CBZ X0, 0x3D8B458
	0x03D8AF30 LDR X8, [X0]
	0x03D8AF34 LDR X1, [X23]
	0x03D8AF38 MOV X20, X0
	0x03D8AF3C LDRH W9, [X8 + 0x12E]
	0x03D8AF40 CBZ W21, 0x3D8AF70
	0x03D8AF44 CBZ W9, 0x3D8AF68
	0x03D8AF48 LDR X10, [X8 + 0xB0]
	0x03D8AF4C ADD X10, X10, 0x8
	0x03D8AF50 LDUR X11, [X10 - 0x8]
	0x03D8AF54 CMP X11, X1
	0x03D8AF58 B.EQ 0x3D8AFA4
	0x03D8AF5C SUBS X9, X9, 0x1
	0x03D8AF60 ADD X10, X10, 0x10
	0x03D8AF64 B.NE 0x3D8AF50
	0x03D8AF68 MOVZ W2, 0x13
	0x03D8AF6C B 0x3D8AF98
	0x03D8AF70 CBZ W9, 0x3D8AF94
	0x03D8AF74 LDR X10, [X8 + 0xB0]
	0x03D8AF78 ADD X10, X10, 0x8
	0x03D8AF7C LDUR X11, [X10 - 0x8]
	0x03D8AF80 CMP X11, X1
	0x03D8AF84 B.EQ 0x3D8AFB0
	0x03D8AF88 SUBS X9, X9, 0x1
	0x03D8AF8C ADD X10, X10, 0x10
	0x03D8AF90 B.NE 0x3D8AF7C
	0x03D8AF94 MOVZ W2, 0x2C
	0x03D8AF98 MOV X0, X20
	0x03D8AF9C BL 0x1C5C788
	0x03D8AFA0 B 0x3D8AFC0
	0x03D8AFA4 LDR W9, [X10]
	0x03D8AFA8 ADD W9, W9, 0x13
	0x03D8AFAC B 0x3D8AFB8
	0x03D8AFB0 LDR W9, [X10]
	0x03D8AFB4 ADD W9, W9, 0x2C
	0x03D8AFB8 ADD X8, X8, W9, 0x4, SXTW
	0x03D8AFBC ADD X0, X8, 0x138
	0x03D8AFC0 LDP X8, X1, [X0]
	0x03D8AFC4 MOV X0, X20
	0x03D8AFC8 BLR X8
	0x03D8AFCC MOV X0, X19
	0x03D8AFD0 MOV V10.16B, V0.16B
	0x03D8AFD4 BL 0x3D8A730
	0x03D8AFD8 MOV X0, X19
	0x03D8AFDC MOV V11.16B, V0.16B
	0x03D8AFE0 BL 0x3D8A844
	0x03D8AFE4 MOV X0, X19
	0x03D8AFE8 MOV V12.16B, V0.16B
	0x03D8AFEC BL 0x3D8A51C
	0x03D8AFF0 FADD S1, S11, S12
	0x03D8AFF4 FADD S0, S1, S0
	0x03D8AFF8 LDR X8, [X19 + 0x40]
	0x03D8AFFC FSUB S0, S10, S0
	0x03D8B000 FCMP S9, S0
	0x03D8B004 FCCMP S9, S8, 0x4, GT
	0x03D8B008 FCSEL S8, S9, S0, LE
	0x03D8B00C CBZ X8, 0x3D8B458
	0x03D8B010 LDR X0, [X8 + 0x3D8]
	0x03D8B014 CBZ X0, 0x3D8B458
	0x03D8B018 LDR W25, [X8 + 0x410]
	0x03D8B01C MOV X1, X31
	0x03D8B020 BL 0x3DE7EEC
	0x03D8B024 MOV X20, X0
	0x03D8B028 MOV V0.16B, V8.16B
	0x03D8B02C MOV X0, X31
	0x03D8B030 BL 0x3DFED98
	0x03D8B034 CBZ X20, 0x3D8B458
	0x03D8B038 ADRP X24, 0x391000
	0x03D8B03C LDR X9, [X20]
	0x03D8B040 LDR X24, [X24 + 0x128]
	0x03D8B044 MOV X8, X1
	0x03D8B048 MOV X21, X0
	0x03D8B04C LDRH W10, [X9 + 0x12E]
	0x03D8B050 LDR X1, [X24]
	0x03D8B054 AND X22, X8, 0x0
	0x03D8B058 CBZ W25, 0x3D8B090
	0x03D8B05C CBZ W10, 0x3D8B080
	0x03D8B060 LDR X8, [X9 + 0xB0]
	0x03D8B064 ADD X8, X8, 0x8
	0x03D8B068 LDUR X11, [X8 - 0x8]
	0x03D8B06C CMP X11, X1
	0x03D8B070 B.EQ 0x3D8B0C4
	0x03D8B074 SUBS X10, X10, 0x1
	0x03D8B078 ADD X8, X8, 0x10
	0x03D8B07C B.NE 0x3D8B068
	0x03D8B080 MOVZ W2, 0x18
	0x03D8B084 MOV X0, X20
	0x03D8B088 BL 0x1C5C788
	0x03D8B08C B 0x3D8B0D4
	0x03D8B090 CBZ W10, 0x3D8B0B4
	0x03D8B094 LDR X8, [X9 + 0xB0]
	0x03D8B098 ADD X8, X8, 0x8
	0x03D8B09C LDUR X11, [X8 - 0x8]
	0x03D8B0A0 CMP X11, X1
	0x03D8B0A4 B.EQ 0x3D8B250
	0x03D8B0A8 SUBS X10, X10, 0x1
	0x03D8B0AC ADD X8, X8, 0x10
	0x03D8B0B0 B.NE 0x3D8B09C
	0x03D8B0B4 MOVZ W2, 0x36
	0x03D8B0B8 MOV X0, X20

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x65E000
	013 Move X27, 0x3DE000
	014 Move X19, 0x3DE000
	015 Move X26, 0x3DE000
	016 Move X25, 0x3DE000
	017 Move X23, 0x394000
	018 Move X22, 0x394000
	019 Move X24, 0x3DE000
	020 Move X21, 0x3DE000
	021 Move X20, 0x3DE000
	022 Move X27, [X27+1912]
	023 Move X19, [X19+1856]
	024 Move X26, [X26+1920]
	025 Move X25, [X25+1928]
	026 Move W8, [X28+3594]
	027 Move X23, [X23+1728]
	028 Move X22, [X22+1712]
	029 Move X24, [X24+1936]
	030 Move X21, [X21+1944]
	031 Move X20, [X20+1952]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {65}
	036 Move X0, 0x3DE000
	037 Move X0, [X0+1856]
	038 Call 0x1C17CF4
	039 Move X0, 0x394000
	040 Move X0, [X0+1712]
	041 Call 0x1C17CF4
	042 Move X0, 0x394000
	043 Move X0, [X0+1728]
	044 Call 0x1C17CF4
	045 Move X0, 0x3DE000
	046 Move X0, [X0+1952]
	047 Call 0x1C17CF4
	048 Move X0, 0x3DE000
	049 Move X0, [X0+1928]
	050 Call 0x1C17CF4
	051 Move X0, 0x3DE000
	052 Move X0, [X0+1912]
	053 Call 0x1C17CF4
	054 Move X0, 0x3DE000
	055 Move X0, [X0+1936]
	056 Call 0x1C17CF4
	057 Move X0, 0x3DE000
	058 Move X0, [X0+1944]
	059 Call 0x1C17CF4
	060 Move X0, 0x3DE000
	061 Move X0, [X0+1920]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X28+3594], W8
	065 Move X8, [X19]
	066 Move X9, [X27]
	067 Move X2, X31
	068 Move X8, [X8+184]
	069 Move [X8], X9
	070 Move X8, [X19]
	071 Move X9, [X26]
	072 Move X0, [X25]
	073 Move X8, [X8+184]
	074 Move [X8+8], X9
	075 Move [X8+16], X0
	076 Move X1, [X23]
	077 Call String.Concat, X0, X1
	078 Move X8, [X19]
	079 Move X2, X31
	080 Move X8, [X8+184]
	081 Move [X8+24], X0
	082 Move X0, [X8+16]
	083 Move X1, [X22]
	084 Call String.Concat, X0, X1
	085 Move X8, [X19]
	086 Move X2, X31
	087 Move X8, [X8+184]
	088 Move [X8+32], X0
	089 Move X0, [X24]
	090 Move [X8+40], X0
	091 Move X1, [X23]
	092 Call String.Concat, X0, X1
	093 Move X8, [X19]
	094 Move X2, X31
	095 Move X8, [X8+184]
	096 Move [X8+48], X0
	097 Move X0, [X8+40]
	098 Move X1, [X22]
	099 Call String.Concat, X0, X1
	100 Move X8, [X19]
	101 Move X9, [X21]
	102 Move X22, [X31+64]
	103 Move X21, [X31+72]
	104 Move X24, [X31+48]
	105 Move X23, [X31+56]
	106 Move X8, [X8+184]
	107 Move X26, [X31+32]
	108 Move X25, [X31+40]
	109 Move X28, [X31+16]
	110 Move X27, [X31+24]
	111 Move [X8+56], X0
	112 Move [X8+64], X9
	113 Move X9, [X20]
	114 Move X20, [X31+80]
	115 Move X19, [X31+88]
	116 Move [X8+72], X9
	117 Move X30, [X31+96]
	118 Return 

