Type: UnityEngine.UIElements.StyleVariableResolver

Method: UnityEngine.UIElements.StyleSheet get_currentSheet()

Disassembly:
	0x03E095C8 STRB W8, [X23 + 0x346]
	0x03E095CC LDP V1, V0, [X20]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: UnityEngine.UIElements.StyleValueHandle[] get_currentHandles()

Disassembly:
	0x03E095D0 ADD X3, X31, 0x20
	0x03E095D4 MOV X0, X22

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheets.StylePropertyValue> get_resolvedValues()

Disassembly:
	0x03E095D8 MOV X1, X19
	0x03E095DC MOV X2, X21

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: UnityEngine.UIElements.StyleVariableContext get_variableContext()

Disassembly:
	0x03E095E0 MOV X4, X31
	0x03E095E4 STP V1, V0, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_variableContext(UnityEngine.UIElements.StyleVariableContext value)

Disassembly:
	0x03E095E8 BL 0x3CEA08C
	0x03E095EC CBZ X19, 0x3E09624

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.Void Init(UnityEngine.UIElements.StyleProperty property, UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleValueHandle[] handles)

Disassembly:
	0x03E095F0 ADRP X9, 0x35F000
	0x03E095F4 LDR X9, [X9 + 0xD90]
	0x03E095F8 LDR X8, [X19]
	0x03E095FC LDR X1, [X9]
	0x03E09600 LDRB W10, [X8 + 0x130]
	0x03E09604 LDRB W9, [X1 + 0x130]
	0x03E09608 CMP W10, W9
	0x03E0960C B.CC 0x3E098C4
	0x03E09610 LDR X8, [X8 + 0xC8]
	0x03E09614 ADD X8, X8, X9, 0x3, LSL
	0x03E09618 LDUR X8, [X8 - 0x8]
	0x03E0961C CMP X8, X1
	0x03E09620 B.NE 0x3E098C4
	0x03E09624 LDP V0, V1, [X20]
	0x03E09628 LDR X0, [X22 + 0x78]
	0x03E0962C STP V0, V1, [X31]
	0x03E09630 CBZ X0, 0x3E098C0
	0x03E09634 LDR X8, [X0]
	0x03E09638 LDP V0, V1, [X31]
	0x03E0963C ADD X2, X31, 0x40
	0x03E09640 MOV X1, X21
	0x03E09644 LDR X9, [X8 + 0x178]
	0x03E09648 STP V0, V1, [X31 + 0x40]
	0x03E0964C LDR X3, [X8 + 0x180]
	0x03E09650 BLR X9
	0x03E09654 CBZ X19, 0x3E098C0
	0x03E09658 ADRP X26, 0x314000
	0x03E0965C LDR X26, [X26 + 0xB00]
	0x03E09660 STR X0, [X19 + 0x3D8]
	0x03E09664 LDR X0, [X26]
	0x03E09668 LDR W8, [X0 + 0xE0]
	0x03E0966C CBNZ W8, 0x3E09674
	0x03E09670 BL 0x1C16DFC
	0x03E09674 ADRP X25, 0x2EA000
	0x03E09678 LDR X0, [X20 + 0x8]
	0x03E0967C LDR X25, [X25 + 0x598]
	0x03E09680 CBZ X0, 0x3E09694
	0x03E09684 LDR X1, [X19 + 0x3D8]
	0x03E09688 BL 0x3E098DC
	0x03E0968C MOV X22, X0
	0x03E09690 B 0x3E09698
	0x03E09694 MOV X22, X31
	0x03E09698 LDR X0, [X25]
	0x03E0969C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x5E0000
	008 Move W8, [X23+823]
	009 Move X19, X3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x35D000
	018 Move X0, [X0+2824]
	019 Call 0x1C17CF4
	020 Move X0, 0x362000
	021 Move X0, [X0+608]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+823], W8
	025 Move X8, [X22+24]
	026 Compare X8, 0
	027 JumpIfEqual {55}
	028 Move W2, [X8+24]
	029 Move W9, [X8+28]
	030 Add W9, W9, 1
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move [X8+24], W31
	033 Move [X8+28], W9
	034 Move X0, [X8+16]
	035 Move W1, W31
	036 Move X3, X31
	037 Call Array.Clear, X0, X1, X2
	038 Move X0, [X22+48]
	039 Compare X0, 0
	040 JumpIfEqual {55}
	041 Move X8, 0x362000
	042 Move X8, [X8+608]
	043 Move X1, [X8]
	044 Call Stack`1<ResolveContext>.Clear, X0
	045 Move [X22+40], X21
	046 Move X0, X22
	047 Move X1, X20
	048 Move X2, X19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Move X23, [X31+56]
	055 Call 0x1C17F20

Method: System.Void PushContext(UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleValueHandle[] handles)

Disassembly:
	0x03E096A0 CBNZ W8, 0x3E096A8
	0x03E096A4 BL 0x1C16DFC
	0x03E096A8 MOV X0, X22
	0x03E096AC MOV X1, X31
	0x03E096B0 MOV X2, X31
	0x03E096B4 BL 0x3C3883C
	0x03E096B8 TBZ X0, 0x0, 0x3E09710
	0x03E096BC ADRP X8, 0x361000
	0x03E096C0 LDR X1, [X19 + 0x3D8]
	0x03E096C4 LDR X8, [X8 + 0x2E8]
	0x03E096C8 MOV X2, X31
	0x03E096CC LDR X0, [X8]
	0x03E096D0 BL 0x321EFD0
	0x03E096D4 ADRP X8, 0x313000
	0x03E096D8 LDR X8, [X8 + 0x130]
	0x03E096DC MOV X20, X0
	0x03E096E0 LDR X8, [X8]
	0x03E096E4 MOV X0, X8
	0x03E096E8 BL 0x1C16F10
	0x03E096EC MOV X1, X20
	0x03E096F0 MOV X2, X31
	0x03E096F4 MOV X21, X0
	0x03E096F8 BL 0x3D6B65C
	0x03E096FC MOV X0, X19
	0x03E09700 MOV X1, X21
	0x03E09704 MOV X2, X31
	0x03E09708 BL 0x3DF60E8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5E0000
	007 Move W8, [X22+824]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x362000
	016 Move X0, [X0+616]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+824], W8
	020 Move X0, [X21+48]
	021 Move [X21+56], X20
	022 Move [X21+64], X19
	023 Compare X0, 0
	024 JumpIfEqual {37}
	025 Move X8, 0x362000
	026 Move X8, [X8+616]
	027 Move X1, X20
	028 Move X2, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X3, [X8]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Call Stack`1<ResolveContext>.Push, X0, X1
	036 Return 
	037 Call 0x1C17F20

Method: System.Void PopContext()

Disassembly:
	0x03E0970C B 0x3E097FC
	0x03E09710 CBZ X21, 0x3E0974C
	0x03E09714 ADRP X8, 0x361000
	0x03E09718 LDR X8, [X8 + 0x2E0]
	0x03E0971C LDR X9, [X21]
	0x03E09720 LDR X8, [X8]
	0x03E09724 LDRB W11, [X9 + 0x130]
	0x03E09728 LDRB W10, [X8 + 0x130]
	0x03E0972C CMP W11, W10
	0x03E09730 B.CC 0x3E09748
	0x03E09734 LDR X9, [X9 + 0xC8]
	0x03E09738 ADD X9, X9, X10, 0x3, LSL
	0x03E0973C LDUR X9, [X9 - 0x8]
	0x03E09740 CMP X9, X8
	0x03E09744 B.EQ 0x3E098B0
	0x03E09748 MOV X21, X31
	0x03E0974C LDR X0, [X26]
	0x03E09750 LDR W8, [X0 + 0xE0]
	0x03E09754 CBNZ W8, 0x3E0975C
	0x03E09758 BL 0x1C16DFC
	0x03E0975C LDR X24, [X20 + 0x18]
	0x03E09760 ORR X8, X21, X24, 0x0
	0x03E09764 CBNZ X8, 0x3E09770
	0x03E09768 MOV X23, X31
	0x03E0976C B 0x3E097D4
	0x03E09770 ADRP X8, 0x361000
	0x03E09774 LDR X8, [X8 + 0x2D8]
	0x03E09778 LDR X0, [X8]
	0x03E0977C BL 0x1C16F10
	0x03E09780 ADRP X8, 0x361000
	0x03E09784 LDR X8, [X8 + 0x2D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5E0000
	005 Move W8, [X20+825]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x362000
	012 Move X0, [X0+624]
	013 Call 0x1C17CF4
	014 Move X0, 0x362000
	015 Move X0, [X0+632]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+825], W8
	019 Move X0, [X19+48]
	020 Compare X0, 0
	021 JumpIfEqual {39}
	022 Move X8, 0x362000
	023 Move X8, [X8+632]
	024 Move X1, [X8]
	025 Call Stack`1<ResolveContext>.Pop, X0
	026 Move X0, [X19+48]
	027 Compare X0, 0
	028 JumpIfEqual {39}
	029 Move X8, 0x362000
	030 Move X8, [X8+624]
	031 Move X1, [X8]
	032 Call Stack`1<ResolveContext>.Peek, X0
	033 Move [X19+56], X0
	034 Move [X19+64], X1
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return 
	039 Call 0x1C17F20

Method: System.Void AddValue(UnityEngine.UIElements.StyleValueHandle handle)

Disassembly:
	0x03E09788 MOV X23, X0
	0x03E0978C LDR X1, [X8]
	0x03E09790 BL 0x3143188
	0x03E09794 CBZ X24, 0x3E097B4
	0x03E09798 CBZ X23, 0x3E098C0
	0x03E0979C ADRP X8, 0x361000
	0x03E097A0 LDR X8, [X8 + 0x2C8]
	0x03E097A4 MOV X0, X23
	0x03E097A8 MOV X1, X24
	0x03E097AC LDR X2, [X8]
	0x03E097B0 BL 0x3143CB0
	0x03E097B4 CBZ X21, 0x3E097D4
	0x03E097B8 CBZ X23, 0x3E098C0
	0x03E097BC ADRP X8, 0x361000
	0x03E097C0 LDR X8, [X8 + 0x2C8]
	0x03E097C4 MOV X0, X23
	0x03E097C8 MOV X1, X21
	0x03E097CC LDR X2, [X8]
	0x03E097D0 BL 0x3143CB0
	0x03E097D4 LDR X0, [X26]
	0x03E097D8 LDR W8, [X0 + 0xE0]
	0x03E097DC CBNZ W8, 0x3E097E4
	0x03E097E0 BL 0x1C16DFC
	0x03E097E4 CBZ X22, 0x3E098C0
	0x03E097E8 LDR X2, [X20 + 0x10]
	0x03E097EC MOV X0, X22
	0x03E097F0 MOV X1, X19
	0x03E097F4 MOV X3, X23
	0x03E097F8 BL 0x3E09C04
	0x03E097FC LDR X0, [X25]
	0x03E09800 LDR W8, [X0 + 0xE0]
	0x03E09804 CBNZ W8, 0x3E0980C
	0x03E09808 BL 0x1C16DFC
	0x03E0980C MOV X0, X22
	0x03E09810 MOV X1, X31
	0x03E09814 MOV X2, X31
	0x03E09818 BL 0x3C3883C
	0x03E0981C TBZ X0, 0x0, 0x3E09894
	0x03E09820 ADRP X8, 0x2EA000
	0x03E09824 LDR X8, [X8 + 0x9D0]
	0x03E09828 MOVZ W1, 0x1
	0x03E0982C LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5E0000
	006 Move W8, [X21+826]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x35D000
	014 Move X0, [X0+2816]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+826], W8
	018 Move X0, [X20+24]
	019 Compare X0, 0
	020 JumpIfEqual {54}
	021 Move X9, 0x35D000
	022 Move X9, [X9+2816]
	023 Move W10, [X0+28]
	024 Move X1, [X20+56]
	025 Move X8, [X0+16]
	026 Move X9, [X9]
	027 Add W10, W10, 1
	028 Move [X0+28], W10
	029 Compare X8, 0
	030 JumpIfEqual {54}
	031 NotImplemented "Instruction LDRSW not yet implemented."
	032 Move W11, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add W9, W10, 1
	035 Add X8, X8, X10
	036 Move [X0+24], W9
	037 Move [X8+32], X1
	038 Move [X8+40], X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 
	044 Move X8, [X9+32]
	045 Move X2, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X8, [X8+192]
	049 Move X3, [X8+112]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Call List`1<StylePropertyValue>.AddWithResize, X0, X1
	053 Return 
	054 Call 0x1C17F20

Method: System.Boolean ResolveVarFunction(ref System.Int32 index)

Disassembly:
	0x03E09830 BL 0x1C16D6C
	0x03E09834 CBZ X0, 0x3E098C0
	0x03E09838 LDR X19, [X19 + 0x3D8]
	0x03E0983C MOV X20, X0
	0x03E09840 CBZ X19, 0x3E09858
	0x03E09844 LDR X8, [X20]
	0x03E09848 MOV X0, X19
	0x03E0984C LDR X1, [X8 + 0x40]
	0x03E09850 BL 0x1C16E00
	0x03E09854 CBZ X0, 0x3E098D0
	0x03E09858 LDR W8, [X20 + 0x18]
	0x03E0985C CBZ W8, 0x3E098CC
	0x03E09860 STR X19, [X20 + 0x20]
	0x03E09864 ADRP X8, 0x2EA000
	0x03E09868 LDR X8, [X8 + 0xA28]
	0x03E0986C LDR X0, [X8]
	0x03E09870 LDR W8, [X0 + 0xE0]
	0x03E09874 CBNZ W8, 0x3E0987C
	0x03E09878 BL 0x1C16DFC
	0x03E0987C ADRP X8, 0x361000
	0x03E09880 LDR X8, [X8 + 0x2F0]
	0x03E09884 MOV X1, X20
	0x03E09888 MOV X2, X31
	0x03E0988C LDR X0, [X8]
	0x03E09890 BL 0x3C066BC
	0x03E09894 LDP X20, X19, [X31 + 0xA0]
	0x03E09898 LDP X22, X21, [X31 + 0x90]
	0x03E0989C LDP X24, X23, [X31 + 0x80]
	0x03E098A0 LDP X26, X25, [X31 + 0x70]
	0x03E098A4 LDR X30, [X31 + 0x60]
	0x03E098A8 ADD X31, X31, 0xB0
	0x03E098AC RET
	0x03E098B0 MOV X0, X21
	0x03E098B4 BL 0x3E09B8C
	0x03E098B8 MOV X21, X0
	0x03E098BC B 0x3E0974C
	0x03E098C0 BL 0x1C16F20
	0x03E098C4 MOV X0, X19
	0x03E098C8 BL 0x1C171E0
	0x03E098CC BL 0x1C16F28
	0x03E098D0 BL 0x1C16F44
	0x03E098D4 MOV X1, X31
	0x03E098D8 BL 0x1C16DEC
	0x03E098DC SUB X31, X31, 0x70
	0x03E098E0 STR D8, [X31 + 0x40]
	0x03E098E4 STR X30, [X31 + 0x48]
	0x03E098E8 STP X22, X21, [X31 + 0x50]
	0x03E098EC STP X20, X19, [X31 + 0x60]
	0x03E098F0 ADRP X21, 0x5DF000
	0x03E098F4 LDRB W8, [X21 + 0x443]
	0x03E098F8 MOV X20, X1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x5E0000
	008 Move W8, [X21+827]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x362000
	016 Move X0, [X0+640]
	017 Call 0x1C17CF4
	018 Move X0, 0x35D000
	019 Move X0, [X0+3016]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+827], W8
	023 Move [X31+28], W31
	024 Move [X31+8], X31
	025 Move X0, [X20+32]
	026 Compare X0, 0
	027 JumpIfEqual {61}
	028 Move X8, 0x362000
	029 Move X8, [X8+640]
	030 Move X21, 0x35D000
	031 Move X1, [X8]
	032 Move X21, [X21+3016]
	033 Call Stack`1<Object>.Clear, X0
	034 Move X0, [X21]
	035 Move X22, [X20+56]
	036 Move X21, [X20+64]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Add X3, X31, 28
	042 Add X4, X31, 8
	043 Move X0, X22
	044 Move X1, X21
	045 Move X2, X19
	046 Call StyleVariableResolver.ParseVarFunction, X0, X1, X2, X3, X4
	047 Move W2, [X31+28]
	048 Move X3, [X31+8]
	049 Move X0, X20
	050 Move X1, X19
	051 Call StyleVariableResolver.ResolveVarFunction, X0, X1, X2, X3
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X22, [X31+32]
	055 Move X21, [X31+40]
	056 Move X30, [X31+16]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CSET not yet implemented."
	059 Add X31, X31, 64
	060 Return X0
	061 Call 0x1C17F20

Method: UnityEngine.UIElements.StyleVariableResolver/Result ResolveVarFunction(ref System.Int32 index, System.Int32 argc, System.String varName)

Disassembly:
	0x03E099AC MOV X1, X20
	0x03E099B0 MOV X3, X31
	0x03E099B4 LDR X8, [X8]
	0x03E099B8 LDR X8, [X8 + 0xB8]
	0x03E099BC LDR X2, [X8]
	0x03E099C0 STP X31, X31, [X31 + 0x8]
	0x03E099C4 STR X31, [X31 + 0x18]
	0x03E099C8 BL 0x3D14CCC
	0x03E099CC ADRP X20, 0x315000
	0x03E099D0 LDR X20, [X20 + 0x9D8]
	0x03E099D4 LDR X0, [X20]
	0x03E099D8 LDR W8, [X0 + 0xE0]
	0x03E099DC CBNZ W8, 0x3E099E8
	0x03E099E0 BL 0x1C16DFC
	0x03E099E4 LDR X0, [X20]
	0x03E099E8 ADRP X9, 0x361000
	0x03E099EC LDR X8, [X0 + 0xB8]
	0x03E099F0 LDR X9, [X9 + 0x2F8]
	0x03E099F4 LDUR V0, [X31 + 0x8]
	0x03E099F8 LDR X10, [X31 + 0x18]
	0x03E099FC LDR X2, [X8]
	0x03E09A00 LDR X3, [X9]
	0x03E09A04 ADD X1, X31, 0x20
	0x03E09A08 MOV X0, X21
	0x03E09A0C STR V0, [X31 + 0x2]
	0x03E09A10 STR X10, [X31 + 0x30]
	0x03E09A14 BL 0x3173464
	0x03E09A18 TBNZ X0, 0x1F, 0x3E09B54
	0x03E09A1C MOV W20, W0
	0x03E09A20 LDR X0, [X19 + 0x20]
	0x03E09A24 CBZ X0, 0x3E09B88
	0x03E09A28 ADRP X22, 0x361000
	0x03E09A2C LDR X22, [X22 + 0x300]
	0x03E09A30 ADD X8, X31, 0x20
	0x03E09A34 MOV W1, W20
	0x03E09A38 LDR X2, [X22]
	0x03E09A3C BL 0x3172CB8
	0x03E09A40 ADRP X8, 0x2EA000
	0x03E09A44 LDR X8, [X8 + 0x598]
	0x03E09A48 LDR X21, [X31 + 0x30]
	0x03E09A4C LDR X0, [X8]
	0x03E09A50 LDR W8, [X0 + 0xE0]
	0x03E09A54 CBNZ W8, 0x3E09A5C
	0x03E09A58 BL 0x1C16DFC
	0x03E09A5C MOV X0, X21
	0x03E09A60 MOV X1, X31
	0x03E09A64 BL 0x3C38948
	0x03E09A68 LDR X9, [X19 + 0x20]
	0x03E09A6C CBZ X9, 0x3E09B88
	0x03E09A70 TBZ X0, 0x0, 0x3E09A90
	0x03E09A74 LDR X2, [X22]
	0x03E09A78 ADD X8, X31, 0x20
	0x03E09A7C MOV X0, X9
	0x03E09A80 MOV W1, W20
	0x03E09A84 BL 0x3172CB8
	0x03E09A88 LDR X0, [X31 + 0x30]
	0x03E09A8C B 0x3E09B58
	0x03E09A90 LDR X2, [X22]
	0x03E09A94 ADD X8, X31, 0x20
	0x03E09A98 MOV X0, X9
	0x03E09A9C MOV W1, W20
	0x03E09AA0 BL 0x3172CB8
	0x03E09AA4 ADRP X8, 0x2EA000
	0x03E09AA8 LDR X8, [X8 + 0x6C0]
	0x03E09AAC LDR X19, [X31 + 0x28]
	0x03E09AB0 LDR X0, [X8]
	0x03E09AB4 ADRP X8, 0x35A000
	0x03E09AB8 LDR X8, [X8 + 0xE80]
	0x03E09ABC LDR W9, [X0 + 0xE0]
	0x03E09AC0 LDR X20, [X8]
	0x03E09AC4 CBNZ W9, 0x3E09ACC
	0x03E09AC8 BL 0x1C16DFC
	0x03E09ACC MOV X0, X20
	0x03E09AD0 MOV X1, X31
	0x03E09AD4 BL 0x338C698
	0x03E09AD8 ADRP X8, 0x316000
	0x03E09ADC LDR X8, [X8 + 0x5C8]
	0x03E09AE0 MOV X20, X0
	0x03E09AE4 LDR X8, [X8]
	0x03E09AE8 LDR W9, [X8 + 0xE0]
	0x03E09AEC CBNZ W9, 0x3E09AF8
	0x03E09AF0 MOV X0, X8
	0x03E09AF4 BL 0x1C16DFC
	0x03E09AF8 MOV X0, X31
	0x03E09AFC BL 0x3C6FDD0
	0x03E09B00 ADRP X8, 0x314000
	0x03E09B04 LDR X8, [X8 + 0xD08]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x5E0000
	009 Move W8, [X23+828]
	010 Move X22, X3
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2EB000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0x314000
	022 Move X0, [X0+1824]
	023 Call 0x1C17CF4
	024 Move X0, 0x362000
	025 Move X0, [X0+648]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+828], W8
	029 Move X0, X20
	030 Move X1, X22
	031 Call StyleVariableResolver.ResolveVariable, X0, X1
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W9, [X19]
	035 Move X8, [X20+64]
	036 Add W9, W9, 1
	037 Move [X19], W9
	038 Compare X8, 0
	039 JumpIfEqual {92}
	040 Move W10, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add X8, X8, W9
	043 Move W22, [X8+32]
	044 Move X8, 0x314000
	045 Move X8, [X8+1824]
	046 Add X1, X31, 12
	047 Move [X31+12], W22
	048 Move X0, [X8]
	049 Call 0x1C17E04
	050 Move X8, 0x362000
	051 Move X8, [X8+648]
	052 Move X1, X0
	053 Move X2, X31
	054 Move X8, [X8]
	055 Move X0, X8
	056 Call String.Format, X0, X1
	057 Move X8, 0x2EB000
	058 Move X8, [X8+2600]
	059 Move X21, X0
	060 Move X8, [X8]
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CSET not yet implemented."
	068 Move X1, X21
	069 Move X2, X31
	070 Call Debug.Assert, X0, X1
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X8, [X20+64]
	073 Compare X8, 0
	074 JumpIfEqual {92}
	075 Move W9, [X19]
	076 Move W10, [X8+24]
	077 Add W8, W9, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, X20
	080 Move X1, X19
	081 Move [X19], W8
	082 Call StyleVariableResolver.ResolveFallback, X0, X1
	083 Move W0, 2
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X30, [X31+16]
	089 Move X23, [X31+24]
	090 Add X31, X31, 64
	091 Return X0
	092 Call 0x1C17F20
	093 Call 0x1C17F28

Method: System.Boolean ValidateResolvedValues()

Disassembly:
	0x03E09FFC MOV X1, X28
	0x03E0A000 BL 0x3E20DEC
	0x03E0A004 LDR X8, [X31 + 0x88]
	0x03E0A008 CBZ X8, 0x3E0A19C
	0x03E0A00C LDP W2, W9, [X8 + 0x18]
	0x03E0A010 ADD W9, W9, 0x1
	0x03E0A014 CMP W2, 0x1
	0x03E0A018 STP W31, W9, [X8 + 0x18]
	0x03E0A01C B.LT 0x3E0A030
	0x03E0A020 LDR X0, [X8 + 0x10]
	0x03E0A024 MOV W1, W31
	0x03E0A028 MOV X3, X31
	0x03E0A02C BL 0x339FA34
	0x03E0A030 CBZ X24, 0x3E0A19C
	0x03E0A034 LDR W1, [X24 + 0x18]
	0x03E0A038 LDR X3, [X27]
	0x03E0A03C ADD X2, X31, 0x88
	0x03E0A040 MOV X0, X23
	0x03E0A044 BL 0x2A150AC
	0x03E0A048 LDR X24, [X31 + 0x88]
	0x03E0A04C CBZ X24, 0x3E0A17C
	0x03E0A050 LDR W8, [X24 + 0x18]
	0x03E0A054 CBZ W8, 0x3E0A17C
	0x03E0A058 ADRP X8, 0x360000
	0x03E0A05C LDR X8, [X8 + 0x310]
	0x03E0A060 LDR X0, [X8]
	0x03E0A064 BL 0x1C16F10
	0x03E0A068 ADRP X8, 0x360000
	0x03E0A06C LDR X8, [X8 + 0x380]
	0x03E0A070 MOV X1, X31
	0x03E0A074 MOV X3, X31
	0x03E0A078 MOV X25, X0
	0x03E0A07C LDR X2, [X8]
	0x03E0A080 BL 0x295A080
	0x03E0A084 ADRP X8, 0x360000
	0x03E0A088 LDR X8, [X8 + 0x348]
	0x03E0A08C MOV X0, X24
	0x03E0A090 MOV X1, X25
	0x03E0A094 LDR X2, [X8]
	0x03E0A098 BL 0x301DD30
	0x03E0A09C LDR X0, [X31 + 0x88]
	0x03E0A0A0 CBZ X0, 0x3E0A19C
	0x03E0A0A4 ADRP X8, 0x359000
	0x03E0A0A8 LDR X8, [X8 + 0xE00]
	0x03E0A0AC LDR X1, [X8]
	0x03E0A0B0 ADD X8, X31, 0x68
	0x03E0A0B4 BL 0x301CB58
	0x03E0A0B8 ADRP X19, 0x359000
	0x03E0A0BC ADRP X20, 0x311000
	0x03E0A0C0 ADRP X21, 0x360000
	0x03E0A0C4 LDR X19, [X19 + 0xDC0]
	0x03E0A0C8 LDR X20, [X20 + 0x7F0]
	0x03E0A0CC LDR X21, [X21 + 0x308]
	0x03E0A0D0 LDP X26, X25, [X31 + 0x8]
	0x03E0A0D4 LDR X1, [X19]
	0x03E0A0D8 ADD X0, X31, 0x68
	0x03E0A0DC BL 0x2BC4350
	0x03E0A0E0 TBZ X0, 0x0, 0x3E0A168
	0x03E0A0E4 LDR X0, [X20]
	0x03E0A0E8 LDR X24, [X31 + 0x78]
	0x03E0A0EC LDR W8, [X0 + 0xE0]
	0x03E0A0F0 CBNZ W8, 0x3E0A0F8
	0x03E0A0F4 BL 0x1C16DFC
	0x03E0A0F8 LDR X1, [X21]
	0x03E0A0FC MOV X0, X24
	0x03E0A100 BL 0x218446C
	0x03E0A104 MOVI V0.2D, 0x0
	0x03E0A108 STP V0, V0, [X31 + 0x40]
	0x03E0A10C ADD X0, X31, 0x40
	0x03E0A110 MOV X1, X26
	0x03E0A114 MOV X2, X25
	0x03E0A118 MOV X3, X22
	0x03E0A11C MOV X4, X28
	0x03E0A120 MOV X5, X31
	0x03E0A124 BL 0x3D15ED8
	0x03E0A128 LDP V0, V1, [X31 + 0x40]
	0x03E0A12C STP V0, V1, [X31 + 0x20]
	0x03E0A130 ADD X3, X31, 0x20
	0x03E0A134 MOV X0, X22
	0x03E0A138 MOV X1, X24
	0x03E0A13C MOV X2, X23
	0x03E0A140 BL 0x3E20FA4
	0x03E0A144 MOV X1, X0
	0x03E0A148 CBZ X1, 0x3E0A0D4
	0x03E0A14C STR X22, [X1 + 0x3A8]
	0x03E0A150 LDR X8, [X28 + 0x378]
	0x03E0A154 STR X8, [X31 + 0x60]
	0x03E0A158 ADD X0, X31, 0x60
	0x03E0A15C MOV X2, X31
	0x03E0A160 BL 0x3DF891C
	0x03E0A164 B 0x3E0A0D4
	0x03E0A168 ADRP X8, 0x359000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x5DF000
	006 Move W8, [X20+829]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x2EA000
	013 Move X0, [X0+2600]
	014 Call 0x1C17CF4
	015 Move X0, 0x35C000
	016 Move X0, [X0+1520]
	017 Call 0x1C17CF4
	018 Move X0, 0x35C000
	019 Move X0, [X0+3016]
	020 Call 0x1C17CF4
	021 Move X0, 0x361000
	022 Move X0, [X0+664]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+829], W8
	026 Move [X31+24], X31
	027 Move [X31], X31
	028 Move [X31+8], X31
	029 Move X8, [X19+40]
	030 Compare X8, 0
	031 JumpIfEqual {108}
	032 Move W9, [X8+40]
	033 Compare W9, 0
	034 JumpIfEqual {36}
	035 Move W0, 1
	036 Move X9, 0x35C000
	037 Move X9, [X9+1520]
	038 Move X20, [X8+16]
	039 Move X0, [X9]
	040 Move W9, [X0+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X1, X31, 24
	045 Move X0, X20
	046 Move X2, X31
	047 Call StylePropertyCache.TryGetSyntax, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {80}
	052 Move X20, 0x35C000
	053 Move X20, [X20+3016]
	054 Move X0, [X20]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X20]
	060 Move X8, [X0+184]
	061 Move X0, [X8]
	062 Compare X0, 0
	063 JumpIfEqual {108}
	064 Move X1, [X31+24]
	065 Move X2, X31
	066 Call StyleSyntaxParser.Parse, X0, X1
	067 Move X8, [X19+16]
	068 Compare X8, 0
	069 JumpIfEqual {108}
	070 Move X2, [X19+24]
	071 Move X1, X0
	072 Move X0, X8
	073 Move X3, X31
	074 Call StylePropertyValueMatcher.Match, X0, X1, X2
	075 Move [X31], X0
	076 Move [X31+8], X1
	077 Add X0, X31, 0
	078 Move X1, X31
	079 Call MatchResult.get_success, X0
	080 Move X8, [X19+40]
	081 Compare X8, 0
	082 JumpIfEqual {108}
	083 Move X1, [X8+16]
	084 Move X8, 0x361000
	085 Move X8, [X8+664]
	086 Move X2, X31
	087 Move X0, [X8]
	088 Call String.Concat, X0, X1
	089 Move X8, 0x2EA000
	090 Move X8, [X8+2600]
	091 Move X19, X0
	092 Move X8, [X8]
	093 Move W9, [X8+224]
	094 Compare W9, 0
	095 JumpIfNotEqual {98}
	096 Move X0, X8
	097 Call 0x1C17DFC
	098 Move X0, X19
	099 Move X1, X31
	100 Call Debug.LogAssertion, X0
	101 Move W0, W31
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X30, [X31+16]
	105 And W0, W0, 1
	106 Add X31, X31, 48
	107 Return X0
	108 Call 0x1C17F20

Method: UnityEngine.UIElements.StyleVariableResolver/Result ResolveVariable(System.String variableName)

Disassembly:
	0x03E09B08 MOV V8.16B, V0.16B
	0x03E09B0C LDR X0, [X8]
	0x03E09B10 LDR W8, [X0 + 0xE0]
	0x03E09B14 CBNZ W8, 0x3E09B1C
	0x03E09B18 BL 0x1C16DFC
	0x03E09B1C MOV X0, X19
	0x03E09B20 MOV X1, X20
	0x03E09B24 MOV V0.16B, V8.16B
	0x03E09B28 MOV X2, X31
	0x03E09B2C BL 0x3DBCEFC
	0x03E09B30 CBZ X0, 0x3E09B58
	0x03E09B34 ADRP X8, 0x35A000
	0x03E09B38 LDR X8, [X8 + 0xE88]
	0x03E09B3C LDR X9, [X0]
	0x03E09B40 LDR X8, [X8]
	0x03E09B44 LDRB W11, [X9 + 0x130]
	0x03E09B48 LDRB W10, [X8 + 0x130]
	0x03E09B4C CMP W11, W10
	0x03E09B50 B.CS 0x3E09B70
	0x03E09B54 MOV X0, X31
	0x03E09B58 LDP X20, X19, [X31 + 0x60]
	0x03E09B5C LDP X22, X21, [X31 + 0x50]
	0x03E09B60 LDR X30, [X31 + 0x48]
	0x03E09B64 LDR V8, [X31 + 0x40]
	0x03E09B68 ADD X31, X31, 0x70
	0x03E09B6C RET
	0x03E09B70 LDR X9, [X9 + 0xC8]
	0x03E09B74 ADD X9, X9, X10, 0x3, LSL
	0x03E09B78 LDUR X9, [X9 - 0x8]
	0x03E09B7C CMP X9, X8
	0x03E09B80 CSEL X0, X0, X31, EQ
	0x03E09B84 B 0x3E09B58
	0x03E09B88 BL 0x1C16F20
	0x03E09B8C STR X30, [X31 - 0x20]!
	0x03E09B90 STP X20, X19, [X31 + 0x10]
	0x03E09B94 ADRP X20, 0x5DF000
	0x03E09B98 LDRB W8, [X20 + 0x400]
	0x03E09B9C MOV X19, X0
	0x03E09BA0 TBNZ X8, 0x0, 0x3E09BC4
	0x03E09BA4 ADRP X0, 0x361000
	0x03E09BA8 LDR X0, [X0 + 0x2D0]
	0x03E09BAC BL 0x1C16CF4
	0x03E09BB0 ADRP X0, 0x361000
	0x03E09BB4 LDR X0, [X0 + 0x2D8]
	0x03E09BB8 BL 0x1C16CF4
	0x03E09BBC MOVZ W8, 0x1
	0x03E09BC0 STRB W8, [X20 + 0x400]
	0x03E09BC4 LDR X20, [X19 + 0x78]
	0x03E09BC8 CBNZ X20, 0x3E09BF4
	0x03E09BCC ADRP X8, 0x361000
	0x03E09BD0 LDR X8, [X8 + 0x2D8]
	0x03E09BD4 LDR X0, [X8]
	0x03E09BD8 BL 0x1C16F10
	0x03E09BDC ADRP X8, 0x361000
	0x03E09BE0 LDR X8, [X8 + 0x2D0]
	0x03E09BE4 MOV X20, X0
	0x03E09BE8 LDR X1, [X8]
	0x03E09BEC BL 0x3143188
	0x03E09BF0 STR X20, [X19 + 0x78]
	0x03E09BF4 MOV X0, X20
	0x03E09BF8 LDP X20, X19, [X31 + 0x10]
	0x03E09BFC LDR X30, [X31], #0x20
	0x03E09C00 RET
	0x03E09C04 SUB X31, X31, 0xF0
	0x03E09C08 STP X29, X30, [X31 + 0x90]
	0x03E09C0C STP X28, X27, [X31 + 0xA0]
	0x03E09C10 STP X26, X25, [X31 + 0xB0]
	0x03E09C14 STP X24, X23, [X31 + 0xC0]
	0x03E09C18 STP X22, X21, [X31 + 0xD0]
	0x03E09C1C STP X20, X19, [X31 + 0xE0]
	0x03E09C20 ADRP X19, 0x5DF000
	0x03E09C24 LDRB W8, [X19 + 0x440]
	0x03E09C28 MOV X20, X3
	0x03E09C2C MOV X21, X2
	0x03E09C30 MOV X23, X1
	0x03E09C34 MOV X22, X0
	0x03E09C38 TBNZ X8, 0x0, 0x3E09D64
	0x03E09C3C ADRP X0, 0x361000
	0x03E09C40 LDR X0, [X0 + 0x308]
	0x03E09C44 BL 0x1C16CF4
	0x03E09C48 ADRP X0, 0x312000
	0x03E09C4C LDR X0, [X0 + 0x7F0]
	0x03E09C50 BL 0x1C16CF4
	0x03E09C54 ADRP X0, 0x361000
	0x03E09C58 LDR X0, [X0 + 0x310]
	0x03E09C5C BL 0x1C16CF4
	0x03E09C60 ADRP X0, 0x2EA000
	0x03E09C64 LDR X0, [X0 + 0xA28]
	0x03E09C68 BL 0x1C16CF4
	0x03E09C6C ADRP X0, 0x361000
	0x03E09C70 LDR X0, [X0 + 0x318]
	0x03E09C74 BL 0x1C16CF4
	0x03E09C78 ADRP X0, 0x361000
	0x03E09C7C LDR X0, [X0 + 0x320]
	0x03E09C80 BL 0x1C16CF4
	0x03E09C84 ADRP X0, 0x361000
	0x03E09C88 LDR X0, [X0 + 0x328]
	0x03E09C8C BL 0x1C16CF4
	0x03E09C90 ADRP X0, 0x361000
	0x03E09C94 LDR X0, [X0 + 0x330]
	0x03E09C98 BL 0x1C16CF4
	0x03E09C9C ADRP X0, 0x35A000
	0x03E09CA0 LDR X0, [X0 + 0xE28]
	0x03E09CA4 BL 0x1C16CF4
	0x03E09CA8 ADRP X0, 0x35A000
	0x03E09CAC LDR X0, [X0 + 0xDC0]
	0x03E09CB0 BL 0x1C16CF4
	0x03E09CB4 ADRP X0, 0x35A000
	0x03E09CB8 LDR X0, [X0 + 0xDD0]
	0x03E09CBC BL 0x1C16CF4
	0x03E09CC0 ADRP X0, 0x361000
	0x03E09CC4 LDR X0, [X0 + 0x338]
	0x03E09CC8 BL 0x1C16CF4
	0x03E09CCC ADRP X0, 0x361000
	0x03E09CD0 LDR X0, [X0 + 0x340]
	0x03E09CD4 BL 0x1C16CF4
	0x03E09CD8 ADRP X0, 0x35A000
	0x03E09CDC LDR X0, [X0 + 0xE00]
	0x03E09CE0 BL 0x1C16CF4
	0x03E09CE4 ADRP X0, 0x361000
	0x03E09CE8 LDR X0, [X0 + 0x348]
	0x03E09CEC BL 0x1C16CF4
	0x03E09CF0 ADRP X0, 0x361000
	0x03E09CF4 LDR X0, [X0 + 0x350]
	0x03E09CF8 BL 0x1C16CF4
	0x03E09CFC ADRP X0, 0x361000
	0x03E09D00 LDR X0, [X0 + 0x358]
	0x03E09D04 BL 0x1C16CF4
	0x03E09D08 ADRP X0, 0x361000
	0x03E09D0C LDR X0, [X0 + 0x360]
	0x03E09D10 BL 0x1C16CF4
	0x03E09D14 ADRP X0, 0x361000
	0x03E09D18 LDR X0, [X0 + 0x368]
	0x03E09D1C BL 0x1C16CF4
	0x03E09D20 ADRP X0, 0x361000
	0x03E09D24 LDR X0, [X0 + 0x370]
	0x03E09D28 BL 0x1C16CF4
	0x03E09D2C ADRP X0, 0x361000
	0x03E09D30 LDR X0, [X0 + 0x378]
	0x03E09D34 BL 0x1C16CF4
	0x03E09D38 ADRP X0, 0x35F000
	0x03E09D3C LDR X0, [X0 + 0xD90]
	0x03E09D40 BL 0x1C16CF4
	0x03E09D44 ADRP X0, 0x361000
	0x03E09D48 LDR X0, [X0 + 0x380]
	0x03E09D4C BL 0x1C16CF4
	0x03E09D50 ADRP X0, 0x35A000
	0x03E09D54 LDR X0, [X0 + 0xE88]
	0x03E09D58 BL 0x1C16CF4
	0x03E09D5C MOVZ W8, 0x1
	0x03E09D60 STRB W8, [X19 + 0x440]
	0x03E09D64 STP X21, X20, [X31 + 0x8]
	0x03E09D68 STP X31, X31, [X31 + 0x80]
	0x03E09D6C STP X31, X31, [X31 + 0x68]
	0x03E09D70 STR X31, [X31 + 0x78]
	0x03E09D74 STR X31, [X31 + 0x60]
	0x03E09D78 CBZ X23, 0x3E0A1A0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X21, 0x5E0000
	011 Move W8, [X21+830]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x35D000
	019 Move X0, [X0+2816]
	020 Call 0x1C17CF4
	021 Move X0, 0x35D000
	022 Move X0, [X0+2832]
	023 Call 0x1C17CF4
	024 Move X0, 0x362000
	025 Move X0, [X0+656]
	026 Call 0x1C17CF4
	027 Move X0, 0x31F000
	028 Move X0, [X0+160]
	029 Call 0x1C17CF4
	030 Move X0, 0x31F000
	031 Move X0, [X0+168]
	032 Call 0x1C17CF4
	033 Move X0, 0x35D000
	034 Move X0, [X0+3016]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+830], W8
	038 Move [X31+24], X31
	039 Move [X31+32], X31
	040 Move [X31+40], X31
	041 Move [X31+8], X31
	042 Move [X31+16], X31
	043 Move X0, [X19+72]
	044 Compare X0, 0
	045 JumpIfEqual {179}
	046 Add X2, X31, 24
	047 Move X1, X20
	048 Call StyleVariableContext.TryFindVariable, X0, X1, X2
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {66}
	053 Move X0, [X19+32]
	054 Compare X0, 0
	055 JumpIfEqual {179}
	056 Move X8, 0x362000
	057 Move X20, [X31+24]
	058 Move X8, [X8+656]
	059 Move X1, X20
	060 Move X2, [X8]
	061 Call Stack`1<Object>.Contains, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {78}
	066 Move W22, 2
	067 Move W0, W22
	068 Move X20, [X31+96]
	069 Move X19, [X31+104]
	070 Move X22, [X31+80]
	071 Move X21, [X31+88]
	072 Move X24, [X31+64]
	073 Move X23, [X31+72]
	074 Move X30, [X31+48]
	075 Move X25, [X31+56]
	076 Add X31, X31, 112
	077 Return X0
	078 Move X0, [X19+32]
	079 Compare X0, 0
	080 JumpIfEqual {179}
	081 Move X8, 0x31F000
	082 Move X8, [X8+168]
	083 Move X1, X20
	084 Move X2, [X8]
	085 Call Stack`1<Object>.Push, X0, X1
	086 Move X20, [X31+40]
	087 Move [X31+20], W31
	088 Compare X20, 0
	089 JumpIfEqual {179}
	090 Move W9, [X20+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X24, 0x35D000
	093 Move X25, 0x35D000
	094 Move X21, [X31+32]
	095 Move X24, [X24+3016]
	096 Move X25, [X25+2816]
	097 Move W8, W31
	098 Move X10, [X19+24]
	099 Compare X10, 0
	100 JumpIfEqual {179}
	101 Move W10, [X10+24]
	102 Add W10, W10, 1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Add X8, X20, W8
	106 Move X23, [X8+32]
	107 Move X1, X31
	108 Move X0, X23
	109 Call StyleSheetExtensions.IsVarFunction, X0
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {137}
	114 Move X0, X19
	115 Move X1, X21
	116 Move X2, X20
	117 Call StyleVariableResolver.PushContext, X0, X1, X2
	118 Move X0, [X24]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Add X2, X31, 20
	124 Add X3, X31, 16
	125 Add X4, X31, 8
	126 Move X0, X21
	127 Move X1, X20
	128 Call StyleVariableResolver.ParseVarFunction, X0, X1, X2, X3, X4
	129 Move W2, [X31+16]
	130 Move X3, [X31+8]
	131 Add X1, X31, 20
	132 Move X0, X19
	133 Call StyleVariableResolver.ResolveVarFunction, X0, X1, X2, X3
	134 Move W22, W0
	135 Move X0, X19
	136 Call StyleVariableResolver.PopContext, X0
	137 Move X0, [X19+24]
	138 Compare X0, 0
	139 JumpIfEqual {179}
	140 Move W10, [X0+28]
	141 Move X8, [X0+16]
	142 Move X9, [X25]
	143 Add W10, W10, 1
	144 Move [X0+28], W10
	145 Compare X8, 0
	146 JumpIfEqual {179}
	147 NotImplemented "Instruction LDRSW not yet implemented."
	148 Move W11, [X8+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Add W9, W10, 1
	151 Add X8, X8, X10
	152 Move W22, W31
	153 Move [X0+24], W9
	154 Move [X8+32], X21
	155 Move [X8+40], X23
	156 Move X8, [X9+32]
	157 Move X1, X21
	158 Move X2, X23
	159 Move X8, [X8+192]
	160 Move X3, [X8+112]
	161 Call List`1<StylePropertyValue>.AddWithResize, X0, X1
	162 Move W22, W31
	163 Move W8, [X31+20]
	164 Add W8, W8, 1
	165 Move [X31+20], W8
	166 Compare W22, 0
	167 JumpIfNotEqual {171}
	168 Move W9, [X20+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move W22, W31
	171 Move X0, [X19+32]
	172 Compare X0, 0
	173 JumpIfEqual {179}
	174 Move X8, 0x31F000
	175 Move X8, [X8+160]
	176 Move X1, [X8]
	177 Call Stack`1<Object>.Pop, X0
	178 Move W22, 1
	179 Call 0x1C17F20
	180 Call 0x1C17F28

Method: UnityEngine.UIElements.StyleVariableResolver/Result ResolveFallback(ref System.Int32 index)

Disassembly:
	0x03E09D7C LDR X8, [X22 + 0x30]
	0x03E09D80 CBZ X8, 0x3E09D90
	0x03E09D84 LDR W8, [X8 + 0x18]
	0x03E09D88 CMP W8, 0x0
	0x03E09D8C B.GT 0x3E09DA4
	0x03E09D90 LDR X8, [X22 + 0x38]
	0x03E09D94 CBZ X8, 0x3E0A17C
	0x03E09D98 LDR W8, [X8 + 0x18]
	0x03E09D9C CMP W8, 0x1
	0x03E09DA0 B.LT 0x3E0A17C
	0x03E09DA4 ADRP X8, 0x35F000
	0x03E09DA8 LDR X8, [X8 + 0xD90]
	0x03E09DAC LDR X10, [X23]
	0x03E09DB0 ADRP X19, 0x361000
	0x03E09DB4 LDR X9, [X8]
	0x03E09DB8 LDRB W12, [X10 + 0x130]
	0x03E09DBC ADRP X8, 0x361000
	0x03E09DC0 LDRB W11, [X9 + 0x130]
	0x03E09DC4 LDR X8, [X8 + 0x330]
	0x03E09DC8 LDR X19, [X19 + 0x328]
	0x03E09DCC CMP W12, W11
	0x03E09DD0 B.CC 0x3E09DEC
	0x03E09DD4 LDR X10, [X10 + 0xC8]
	0x03E09DD8 ADD X10, X10, X11, 0x3, LSL
	0x03E09DDC LDUR X10, [X10 - 0x8]
	0x03E09DE0 CMP X10, X9
	0x03E09DE4 B.NE 0x3E09DEC
	0x03E09DE8 STR X22, [X23 + 0x3E8]
	0x03E09DEC LDR X0, [X8]
	0x03E09DF0 STR X23, [X31 + 0x18]
	0x03E09DF4 BL 0x1C16F10
	0x03E09DF8 LDR X1, [X19]
	0x03E09DFC MOV X23, X0
	0x03E09E00 BL 0x2A12DD4
	0x03E09E04 LDR X8, [X22 + 0x30]
	0x03E09E08 CBZ X8, 0x3E09E14
	0x03E09E0C LDR W28, [X8 + 0x18]
	0x03E09E10 B 0x3E09E18
	0x03E09E14 MOV W28, W31
	0x03E09E18 LDR X8, [X22 + 0x38]
	0x03E09E1C CBZ X8, 0x3E09E24
	0x03E09E20 LDR W8, [X8 + 0x18]
	0x03E09E24 ADRP X27, 0x361000
	0x03E09E28 LDR X27, [X27 + 0x320]
	0x03E09E2C ADD W9, W8, W28
	0x03E09E30 CMP W9, 0x1
	0x03E09E34 B.LT 0x3E09F5C
	0x03E09E38 ADRP X20, 0x361000
	0x03E09E3C ADRP X21, 0x361000
	0x03E09E40 LDR X20, [X20 + 0x338]
	0x03E09E44 LDR X21, [X21 + 0x368]
	0x03E09E48 SUB W29, W31, W28
	0x03E09E4C MOV W24, W31
	0x03E09E50 SUB W19, W29, W8
	0x03E09E54 CMP W24, W28
	0x03E09E58 B.GE 0x3E09E78
	0x03E09E5C LDR X0, [X22 + 0x30]
	0x03E09E60 CBZ X0, 0x3E0A19C
	0x03E09E64 ADRP X8, 0x361000
	0x03E09E68 LDR X8, [X8 + 0x370]
	0x03E09E6C MOV W1, W24
	0x03E09E70 LDR X2, [X8]
	0x03E09E74 B 0x3E09E88
	0x03E09E78 LDR X0, [X22 + 0x38]
	0x03E09E7C CBZ X0, 0x3E0A19C
	0x03E09E80 LDR X2, [X21]
	0x03E09E84 ADD W1, W29, W24
	0x03E09E88 BL 0x301BCCC
	0x03E09E8C MOV X25, X0
	0x03E09E90 CBZ X0, 0x3E0A19C
	0x03E09E94 CBZ X23, 0x3E0A19C
	0x03E09E98 LDR W1, [X25 + 0x20]
	0x03E09E9C LDR X3, [X27]
	0x03E09EA0 ADD X2, X31, 0x80
	0x03E09EA4 MOV X0, X23
	0x03E09EA8 BL 0x2A150AC
	0x03E09EAC TBNZ X0, 0x0, 0x3E09EF4
	0x03E09EB0 ADRP X8, 0x361000
	0x03E09EB4 LDR X8, [X8 + 0x378]
	0x03E09EB8 LDR X0, [X8]
	0x03E09EBC BL 0x1C16F10
	0x03E09EC0 ADRP X8, 0x361000
	0x03E09EC4 LDR X8, [X8 + 0x350]
	0x03E09EC8 MOV X26, X0
	0x03E09ECC LDR X1, [X8]
	0x03E09ED0 BL 0x301B7C4
	0x03E09ED4 STR X26, [X31 + 0x80]
	0x03E09ED8 ADRP X8, 0x361000
	0x03E09EDC LDR W1, [X25 + 0x20]
	0x03E09EE0 LDR X8, [X8 + 0x318]
	0x03E09EE4 MOV X0, X23
	0x03E09EE8 MOV X2, X26
	0x03E09EEC LDR X3, [X8]
	0x03E09EF0 BL 0x2A1368C
	0x03E09EF4 LDR X0, [X31 + 0x80]
	0x03E09EF8 CBZ X0, 0x3E0A19C
	0x03E09EFC LDR W10, [X0 + 0x1C]
	0x03E09F00 LDR X8, [X0 + 0x10]
	0x03E09F04 LDR X9, [X20]
	0x03E09F08 ADD W10, W10, 0x1
	0x03E09F0C STR W10, [X0 + 0x1C]
	0x03E09F10 CBZ X8, 0x3E0A19C
	0x03E09F14 LDRSW X10, [X0 + 0x18]
	0x03E09F18 LDR W11, [X8 + 0x18]
	0x03E09F1C CMP W10, W11
	0x03E09F20 B.CS 0x3E09F38
	0x03E09F24 ADD W9, W10, 0x1
	0x03E09F28 ADD X8, X8, X10, 0x3, LSL
	0x03E09F2C STR W9, [X0 + 0x18]
	0x03E09F30 STR X25, [X8 + 0x20]
	0x03E09F34 B 0x3E09F4C
	0x03E09F38 LDR X8, [X9 + 0x20]
	0x03E09F3C MOV X1, X25
	0x03E09F40 LDR X8, [X8 + 0xC0]
	0x03E09F44 LDR X2, [X8 + 0x70]
	0x03E09F48 BL 0x301BF90
	0x03E09F4C ADD W24, W24, 0x1
	0x03E09F50 ADDS W31, W19, W24
	0x03E09F54 B.NE 0x3E09E54
	0x03E09F58 B 0x3E09F60
	0x03E09F5C CBZ X23, 0x3E0A19C
	0x03E09F60 LDR X3, [X27]
	0x03E09F64 ADD X2, X31, 0x88
	0x03E09F68 MOV X0, X23
	0x03E09F6C MOV W1, W31
	0x03E09F70 BL 0x2A150AC
	0x03E09F74 LDR X8, [X31 + 0x88]
	0x03E09F78 LDR X28, [X31 + 0x18]
	0x03E09F7C CBZ X8, 0x3E0A17C
	0x03E09F80 LDR W19, [X8 + 0x18]
	0x03E09F84 CBZ W19, 0x3E0A17C
	0x03E09F88 ADRP X8, 0x2EA000
	0x03E09F8C LDR X8, [X8 + 0xA28]
	0x03E09F90 LDR X0, [X8]
	0x03E09F94 LDR W8, [X0 + 0xE0]
	0x03E09F98 CBNZ W8, 0x3E09FA0
	0x03E09F9C BL 0x1C16DFC
	0x03E09FA0 CMP W19, 0x1
	0x03E09FA4 CSET W0, EQ
	0x03E09FA8 MOV X1, X31
	0x03E09FAC BL 0x3C06E58
	0x03E09FB0 LDR X0, [X31 + 0x88]
	0x03E09FB4 CBZ X0, 0x3E0A19C
	0x03E09FB8 ADRP X8, 0x361000
	0x03E09FBC LDR X8, [X8 + 0x370]
	0x03E09FC0 MOV W1, W31
	0x03E09FC4 LDR X2, [X8]
	0x03E09FC8 BL 0x301BCCC
	0x03E09FCC ADRP X8, 0x35A000
	0x03E09FD0 LDR X8, [X8 + 0xE88]
	0x03E09FD4 MOV X24, X0
	0x03E09FD8 LDR X8, [X8]
	0x03E09FDC LDR W9, [X8 + 0xE0]
	0x03E09FE0 CBNZ W9, 0x3E09FEC
	0x03E09FE4 MOV X0, X8
	0x03E09FE8 BL 0x1C16DFC
	0x03E09FEC MOV X0, X24
	0x03E09FF0 MOV X1, X28
	0x03E09FF4 BL 0x3E20D80
	0x03E09FF8 MOV X0, X24

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X21, 0x5E0000
	013 Move W8, [X21+831]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0x2EB000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x35D000
	024 Move X0, [X0+2816]
	025 Call 0x1C17CF4
	026 Move X0, 0x314000
	027 Move X0, [X0+1824]
	028 Call 0x1C17CF4
	029 Move X0, 0x35D000
	030 Move X0, [X0+3016]
	031 Call 0x1C17CF4
	032 Move X0, 0x362000
	033 Move X0, [X0+648]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+831], W8
	037 Move [X31+28], W31
	038 Move [X31+16], X31
	039 Move X8, [X20+64]
	040 Compare X8, 0
	041 JumpIfEqual {163}
	042 Move X23, 0x35D000
	043 Move X24, 0x314000
	044 Move X25, 0x362000
	045 Move X26, 0x2EB000
	046 Move X27, 0x35D000
	047 Move X23, [X23+3016]
	048 Move X24, [X24+1824]
	049 Move W9, [X19]
	050 Move X25, [X25+648]
	051 Move X26, [X26+2600]
	052 Move X27, [X27+2816]
	053 Move W0, W31
	054 Compare W0, 0
	055 JumpIfNotEqual {164}
	056 Move W10, [X8+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X8, X8, W9
	059 Move X21, [X8+32]
	060 Move X1, X31
	061 Move X0, X21
	062 Call StyleSheetExtensions.IsVarFunction, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {129}
	067 Move X0, [X23]
	068 Move X22, [X20+56]
	069 Move X21, [X20+64]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Add X3, X31, 28
	075 Add X4, X31, 16
	076 Move X0, X22
	077 Move X1, X21
	078 Move X2, X19
	079 Call StyleVariableResolver.ParseVarFunction, X0, X1, X2, X3, X4
	080 Move X1, [X31+16]
	081 Move X0, X20
	082 Call StyleVariableResolver.ResolveVariable, X0, X1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W8, [X31+28]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W9, [X19]
	087 Move X8, [X20+64]
	088 Add W9, W9, 1
	089 Move [X19], W9
	090 Compare X8, 0
	091 JumpIfEqual {163}
	092 Move W10, [X8+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Add X8, X8, W9
	095 Move W22, [X8+32]
	096 Move X0, [X24]
	097 Add X1, X31, 12
	098 Move [X31+12], W22
	099 Call 0x1C17E04
	100 Move X8, [X25]
	101 Move X1, X0
	102 Move X2, X31
	103 Move X0, X8
	104 Call String.Format, X0, X1
	105 Move X8, [X26]
	106 Move X21, X0
	107 Move W9, [X8+224]
	108 Compare W9, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X8
	111 Call 0x1C17DFC
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CSET not yet implemented."
	114 Move X1, X21
	115 Move X2, X31
	116 Call Debug.Assert, X0, X1
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X8, [X20+64]
	119 Compare X8, 0
	120 JumpIfEqual {163}
	121 Move W9, [X19]
	122 Move W10, [X8+24]
	123 Add W8, W9, 1
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X0, X20
	126 Move X1, X19
	127 Move [X19], W8
	128 Call StyleVariableResolver.ResolveFallback, X0, X1
	129 Move X8, [X20+24]
	130 Compare X8, 0
	131 JumpIfEqual {163}
	132 Move W11, [X8+28]
	133 Move X1, [X20+56]
	134 Move X9, [X8+16]
	135 Move X10, [X27]
	136 Add W11, W11, 1
	137 Move [X8+28], W11
	138 Compare X9, 0
	139 JumpIfEqual {163}
	140 NotImplemented "Instruction LDRSW not yet implemented."
	141 Move W12, [X9+24]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Add W10, W11, 1
	144 Add X9, X9, X11
	145 Move W0, W31
	146 Move [X8+24], W10
	147 Move [X9+32], X1
	148 Move [X9+40], X21
	149 Move X9, [X10+32]
	150 Move X0, X8
	151 Move X2, X21
	152 Move X9, [X9+192]
	153 Move X3, [X9+112]
	154 Call List`1<StylePropertyValue>.AddWithResize, X0, X1
	155 Move W0, W31
	156 Move W0, 2
	157 Move W8, [X19]
	158 Add W9, W8, 1
	159 Move [X19], W9
	160 Move X8, [X20+64]
	161 Compare X8, 0
	162 JumpIfNotEqual {54}
	163 Call 0x1C17F20
	164 Move X20, [X31+96]
	165 Move X19, [X31+104]
	166 Move X22, [X31+80]
	167 Move X21, [X31+88]
	168 Move X24, [X31+64]
	169 Move X23, [X31+72]
	170 Move X26, [X31+48]
	171 Move X25, [X31+56]
	172 Move X30, [X31+32]
	173 Move X27, [X31+40]
	174 Add X31, X31, 112
	175 Return X0
	176 Call 0x1C17F28

Method: System.Void ParseVarFunction(UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleValueHandle[] handles, ref System.Int32 index, out System.Int32 argCount, out System.String variableName)

Disassembly:
	0x03E098FC MOV X19, X0
	0x03E09900 TBNZ X8, 0x0, 0x3E09990
	0x03E09904 ADRP X0, 0x316000
	0x03E09908 LDR X0, [X0 + 0x5C8]
	0x03E0990C BL 0x1C16CF4
	0x03E09910 ADRP X0, 0x361000
	0x03E09914 LDR X0, [X0 + 0x2F8]
	0x03E09918 BL 0x1C16CF4
	0x03E0991C ADRP X0, 0x35A000
	0x03E09920 LDR X0, [X0 + 0xE78]
	0x03E09924 BL 0x1C16CF4
	0x03E09928 ADRP X0, 0x361000
	0x03E0992C LDR X0, [X0 + 0x300]
	0x03E09930 BL 0x1C16CF4
	0x03E09934 ADRP X0, 0x2EA000
	0x03E09938 LDR X0, [X0 + 0x598]
	0x03E0993C BL 0x1C16CF4
	0x03E09940 ADRP X0, 0x314000
	0x03E09944 LDR X0, [X0 + 0xD08]
	0x03E09948 BL 0x1C16CF4
	0x03E0994C ADRP X0, 0x2EC000
	0x03E09950 LDR X0, [X0 + 0x278]
	0x03E09954 BL 0x1C16CF4
	0x03E09958 ADRP X0, 0x2EA000
	0x03E0995C LDR X0, [X0 + 0x6C0]
	0x03E09960 BL 0x1C16CF4
	0x03E09964 ADRP X0, 0x315000
	0x03E09968 LDR X0, [X0 + 0x9D8]
	0x03E0996C BL 0x1C16CF4
	0x03E09970 ADRP X0, 0x35A000
	0x03E09974 LDR X0, [X0 + 0xE80]
	0x03E09978 BL 0x1C16CF4
	0x03E0997C ADRP X0, 0x35A000
	0x03E09980 LDR X0, [X0 + 0xE88]
	0x03E09984 BL 0x1C16CF4
	0x03E09988 MOVZ W8, 0x1
	0x03E0998C STRB W8, [X21 + 0x443]
	0x03E09990 LDR X21, [X19 + 0x20]
	0x03E09994 CBZ X21, 0x3E09B54
	0x03E09998 LDR W8, [X21 + 0x18]
	0x03E0999C CBZ W8, 0x3E09B54
	0x03E099A0 ADRP X8, 0x2EC000
	0x03E099A4 LDR X8, [X8 + 0x278]
	0x03E099A8 ADD X0, X31, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W8, [X2]
	008 Add W8, W8, 1
	009 Move [X2], W8
	010 Compare X1, 0
	011 JumpIfEqual {49}
	012 Move W9, [X1+24]
	013 Move X21, X1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X20, X0
	016 Compare X0, 0
	017 JumpIfEqual {49}
	018 Add X8, X21, W8
	019 Move X1, [X8+32]
	020 Move X0, X20
	021 Move X19, X4
	022 Move X23, X3
	023 Move X22, X2
	024 Call StyleSheet.ReadFloat, X0, X1
	025 Move W8, 0x7F800000
	026 Move S1, W8
	027 NotImplemented "Instruction FCVTZS not yet implemented."
	028 NotImplemented "Instruction FCMP not yet implemented."
	029 Move W8, 0x80000000
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Move [X23], W8
	032 Move W8, [X22]
	033 Add W8, W8, 1
	034 Move [X22], W8
	035 Move W9, [X21+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X8, X21, W8
	038 Move X1, [X8+32]
	039 Move X0, X20
	040 Call StyleSheet.ReadVariable, X0, X1
	041 Move [X19], X0
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return 
	049 Call 0x1C17F20
	050 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x03E0A16C LDR X8, [X8 + 0xE28]
	0x03E0A170 ADD X0, X31, 0x68
	0x03E0A174 LDR X1, [X8]
	0x03E0A178 BL 0x2BC434C
	0x03E0A17C LDP X20, X19, [X31 + 0xE0]
	0x03E0A180 LDP X22, X21, [X31 + 0xD0]
	0x03E0A184 LDP X24, X23, [X31 + 0xC0]
	0x03E0A188 LDP X26, X25, [X31 + 0xB0]
	0x03E0A18C LDP X28, X27, [X31 + 0xA0]
	0x03E0A190 LDP X29, X30, [X31 + 0x90]
	0x03E0A194 ADD X31, X31, 0xF0
	0x03E0A198 RET
	0x03E0A19C BL 0x1C16F20
	0x03E0A1A0 ADRP X0, 0x2EE000
	0x03E0A1A4 LDR X0, [X0 + 0x528]
	0x03E0A1A8 BL 0x1C16D08
	0x03E0A1AC BL 0x1C16F10
	0x03E0A1B0 MOV X19, X0
	0x03E0A1B4 ADRP X0, 0x322000
	0x03E0A1B8 LDR X0, [X0 + 0x480]
	0x03E0A1BC BL 0x1C16D08
	0x03E0A1C0 MOV X1, X0
	0x03E0A1C4 MOV X0, X19
	0x03E0A1C8 MOV X2, X31
	0x03E0A1CC BL 0x330E100
	0x03E0A1D0 ADRP X0, 0x360000
	0x03E0A1D4 LDR X0, [X0 + 0x388]
	0x03E0A1D8 BL 0x1C16D08
	0x03E0A1DC MOV X1, X0
	0x03E0A1E0 MOV X0, X19
	0x03E0A1E4 BL 0x1C16DEC
	0x03E0A1E8 B 0x3E0A1F8
	0x03E0A1EC B 0x3E0A1F8
	0x03E0A1F0 B 0x3E0A1F8
	0x03E0A1F4 B 0x3E0A1F8
	0x03E0A1F8 MOV X19, X0
	0x03E0A1FC CMP W1, 0x1
	0x03E0A200 B.NE 0x3E0A234
	0x03E0A204 MOV X0, X19
	0x03E0A208 BL 0x3EB1AD0
	0x03E0A20C LDR X20, [X0]
	0x03E0A210 BL 0x3EB1AE0
	0x03E0A214 ADRP X8, 0x359000
	0x03E0A218 LDR X8, [X8 + 0xE28]
	0x03E0A21C ADD X0, X31, 0x68
	0x03E0A220 LDR X1, [X8]
	0x03E0A224 BL 0x2BC434C
	0x03E0A228 CBZ X20, 0x3E0A17C
	0x03E0A22C MOV X0, X20
	0x03E0A230 BL 0x1C16F18
	0x03E0A234 MOV X20, X31
	0x03E0A238 B 0x3E0A240
	0x03E0A23C MOV X19, X0
	0x03E0A240 ADRP X8, 0x359000
	0x03E0A244 LDR X8, [X8 + 0xE28]
	0x03E0A248 LDR X1, [X8]
	0x03E0A24C ADD X0, X31, 0x68
	0x03E0A250 BL 0x2BC434C
	0x03E0A254 CBNZ X20, 0x3E0A260
	0x03E0A258 MOV X0, X19
	0x03E0A25C BL 0x1D2C690
	0x03E0A260 MOV X0, X20
	0x03E0A264 BL 0x1C16F18
	0x03E0A268 BL 0x1990590
	0x03E0A26C STP X30, X21, [X31 - 0x20]!
	0x03E0A270 STP X20, X19, [X31 + 0x10]
	0x03E0A274 ADRP X20, 0x5DE000
	0x03E0A278 ADRP X21, 0x313000
	0x03E0A27C LDRB W8, [X20 + 0x347]
	0x03E0A280 LDR X21, [X21 + 0xB20]
	0x03E0A284 MOV X19, X0
	0x03E0A288 TBNZ X8, 0x0, 0x3E0A2AC
	0x03E0A28C ADRP X0, 0x313000
	0x03E0A290 LDR X0, [X0 + 0xB20]
	0x03E0A294 BL 0x1C16CF4
	0x03E0A298 ADRP X0, 0x33C000
	0x03E0A29C LDR X0, [X0 + 0x5D0]
	0x03E0A2A0 BL 0x1C16CF4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x5DF000
	012 Move X27, 0x361000
	013 Move X26, 0x35C000
	014 Move X25, 0x35C000
	015 Move X24, 0x31E000
	016 Move X23, 0x31E000
	017 Move X22, 0x361000
	018 Move X21, 0x361000
	019 Move X27, [X27+672]
	020 Move X26, [X26+3000]
	021 Move W8, [X20+832]
	022 Move X25, [X25+3008]
	023 Move X24, [X24+192]
	024 Move X23, [X23+176]
	025 Move X22, [X22+680]
	026 Move X21, [X21+688]
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {55}
	032 Move X0, 0x35C000
	033 Move X0, [X0+3008]
	034 Call 0x1C17CF4
	035 Move X0, 0x35C000
	036 Move X0, [X0+3000]
	037 Call 0x1C17CF4
	038 Move X0, 0x31E000
	039 Move X0, [X0+176]
	040 Call 0x1C17CF4
	041 Move X0, 0x361000
	042 Move X0, [X0+688]
	043 Call 0x1C17CF4
	044 Move X0, 0x361000
	045 Move X0, [X0+680]
	046 Call 0x1C17CF4
	047 Move X0, 0x31E000
	048 Move X0, [X0+192]
	049 Call 0x1C17CF4
	050 Move X0, 0x361000
	051 Move X0, [X0+672]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+832], W8
	055 Move X0, [X27]
	056 Call 0x1C17F10
	057 Move X1, X31
	058 Move X20, X0
	059 Call StylePropertyValueMatcher..ctor, X0
	060 Move [X19+16], X20
	061 Move X0, [X26]
	062 Call 0x1C17F10
	063 Move X1, [X25]
	064 Move X20, X0
	065 Call List`1<StylePropertyValue>..ctor, X0
	066 Move [X19+24], X20
	067 Move X0, [X24]
	068 Call 0x1C17F10
	069 Move X1, [X23]
	070 Move X20, X0
	071 Call Stack`1<Object>..ctor, X0
	072 Move [X19+32], X20
	073 Move X0, [X22]
	074 Call 0x1C17F10
	075 Move X1, [X21]
	076 Move X20, X0
	077 Call Stack`1<ResolveContext>..ctor, X0
	078 Move [X19+48], X20
	079 Move X0, X19
	080 Move X20, [X31+64]
	081 Move X19, [X31+72]
	082 Move X22, [X31+48]
	083 Move X21, [X31+56]
	084 Move X24, [X31+32]
	085 Move X23, [X31+40]
	086 Move X26, [X31+16]
	087 Move X25, [X31+24]
	088 Move X1, X31
	089 Move X30, [X31+80]
	090 Move X27, [X31+88]
	091 Call Object..ctor, X0
	092 Return 

Method: System.Void .cctor()

Disassembly:
	0x03E0A2A4 MOVZ W8, 0x1
	0x03E0A2A8 STRB W8, [X20 + 0x347]
	0x03E0A2AC LDR X0, [X21]
	0x03E0A2B0 BL 0x1C16F10
	0x03E0A2B4 MOV X20, X0
	0x03E0A2B8 BL 0x3E0A2F4
	0x03E0A2BC CBZ X20, 0x3E0A2F0
	0x03E0A2C0 ADRP X8, 0x33C000
	0x03E0A2C4 LDR X8, [X8 + 0x5D0]
	0x03E0A2C8 MOVZ W9, 0x3
	0x03E0A2CC MOV X0, X19
	0x03E0A2D0 MOV X1, X31
	0x03E0A2D4 LDR X8, [X8]
	0x03E0A2D8 STR W9, [X20 + 0x30]
	0x03E0A2DC STR X8, [X20 + 0x10]
	0x03E0A2E0 STR X20, [X19 + 0x78]
	0x03E0A2E4 LDP X20, X19, [X31 + 0x10]
	0x03E0A2E8 LDP X30, X21, [X31], #0x20
	0x03E0A2EC B 0x3CEA004
	0x03E0A2F0 BL 0x1C16F20
	0x03E0A2F4 STR X30, [X31 - 0x40]!
	0x03E0A2F8 STP X24, X23, [X31 + 0x10]
	0x03E0A2FC STP X22, X21, [X31 + 0x20]
	0x03E0A300 STP X20, X19, [X31 + 0x30]
	0x03E0A304 ADRP X23, 0x5DE000
	0x03E0A308 ADRP X24, 0x360000
	0x03E0A30C ADRP X22, 0x313000
	0x03E0A310 ADRP X21, 0x313000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x5DF000
	006 Move X21, 0x361000
	007 Move X20, 0x35C000
	008 Move W8, [X19+833]
	009 Move X21, [X21+696]
	010 Move X20, [X20+3016]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x361000
	016 Move X0, [X0+696]
	017 Call 0x1C17CF4
	018 Move X0, 0x35C000
	019 Move X0, [X0+3016]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+833], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call StyleSyntaxParser..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

