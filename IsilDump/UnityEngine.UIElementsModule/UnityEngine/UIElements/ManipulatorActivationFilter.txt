Type: UnityEngine.UIElements.ManipulatorActivationFilter

Method: UnityEngine.UIElements.MouseButton get_button()

Disassembly:
	0x03DBB2A8 SUB X31, X31, 0x50
	0x03DBB2AC STR D8, [X31 + 0x20]

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Void set_button(UnityEngine.UIElements.MouseButton value)

Disassembly:
	0x03DBB2B0 STP X30, X21, [X31 + 0x30]
	0x03DBB2B4 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X0], W1
	002 Return 

Method: UnityEngine.EventModifiers get_modifiers()

Disassembly:
	0x03DBB2B8 ADRP X21, 0x62D000
	0x03DBB2BC MOV X19, X8

ISIL:
	001 Move W0, [X0+4]
	002 Return X0

Method: System.Void set_modifiers(UnityEngine.EventModifiers value)

Disassembly:
	0x03DBB2C0 LDR X8, [X21 + 0x98]
	0x03DBB2C4 MOV V8.16B, V0.16B

ISIL:
	001 Move [X0+4], W1
	002 Return 

Method: System.Int32 get_clickCount()

Disassembly:
	0x03DBB2C8 MOV X20, X0
	0x03DBB2CC STP X31, X31, [X31 + 0x8]

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03DBB2D0 STR X31, [X31 + 0x18]
	0x03DBB2D4 CBNZ X8, 0x3DBB2EC
	0x03DBB2D8 ADRP X0, 0xFFFFFFFFFCD6A000
	0x03DBB2DC ADD X0, X0, 0x803
	0x03DBB2E0 BL 0x1C16CB8
	0x03DBB2E4 MOV X8, X0
	0x03DBB2E8 STR X0, [X21 + 0x98]
	0x03DBB2EC ADD X1, X31, 0x8
	0x03DBB2F0 MOV X0, X20
	0x03DBB2F4 MOV V0.16B, V8.16B
	0x03DBB2F8 BLR X8
	0x03DBB2FC LDR X8, [X31 + 0x18]
	0x03DBB300 LDUR V0, [X31 + 0x8]
	0x03DBB304 LDP X30, X21, [X31 + 0x30]
	0x03DBB308 LDR V8, [X31 + 0x20]
	0x03DBB30C STR X8, [X19 + 0x10]
	0x03DBB310 STR V0, [X19]
	0x03DBB314 LDP X20, X19, [X31 + 0x40]
	0x03DBB318 ADD X31, X31, 0x50
	0x03DBB31C RET
	0x03DBB320 STR D8, [X31 - 0x30]!
	0x03DBB324 STP X30, X21, [X31 + 0x10]
	0x03DBB328 STP X20, X19, [X31 + 0x20]
	0x03DBB32C ADRP X21, 0x62D000
	0x03DBB330 LDR X2, [X21 + 0x98]
	0x03DBB334 MOV X19, X1
	0x03DBB338 MOV V8.16B, V0.16B
	0x03DBB33C MOV X20, X0
	0x03DBB340 CBNZ X2, 0x3DBB358
	0x03DBB344 ADRP X0, 0xFFFFFFFFFCD6A000
	0x03DBB348 ADD X0, X0, 0x803
	0x03DBB34C BL 0x1C16CB8
	0x03DBB350 MOV X2, X0
	0x03DBB354 STR X0, [X21 + 0x98]
	0x03DBB358 MOV X0, X20
	0x03DBB35C MOV X1, X19
	0x03DBB360 LDP X20, X19, [X31 + 0x20]
	0x03DBB364 LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x62E000
	006 Move W8, [X21+107]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x364000
	014 Move X0, [X0+1640]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+107], W8
	018 Compare X20, 0
	019 JumpIfEqual {39}
	020 Move X8, 0x364000
	021 Move X8, [X8+1640]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 Move X8, [X0]
	028 Move W9, [X19]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W9, [X19+4]
	031 Move X8, X8
	032 ShiftRight X8, 32
	033 And X8, X8, 0x7FFFFFFF
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, [X0+8]
	036 Move W9, [X19+8]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 Move W0, W31
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0

Method: System.Boolean Equals(UnityEngine.UIElements.ManipulatorActivationFilter other)

Disassembly:
	0x03DBB368 MOV V0.16B, V8.16B
	0x03DBB36C LDR V8, [X31], #0x30
	0x03DBB370 BR X2
	0x03DBB374 SUB X31, X31, 0x50
	0x03DBB378 STR D8, [X31 + 0x20]
	0x03DBB37C STP X30, X21, [X31 + 0x30]
	0x03DBB380 STP X20, X19, [X31 + 0x40]
	0x03DBB384 ADRP X21, 0x62D000
	0x03DBB388 MOV X19, X8
	0x03DBB38C LDR X8, [X21 + 0xA0]
	0x03DBB390 MOV V8.16B, V0.16B
	0x03DBB394 MOV X20, X0
	0x03DBB398 STP X31, X31, [X31 + 0x8]

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+4]
	004 Move X9, X1
	005 ShiftRight X9, 32
	006 And X9, X9, 0x7FFFFFFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W8, [X0+8]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Return X0
	012 Move W0, W31
	013 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03DBB39C STR X31, [X31 + 0x18]
	0x03DBB3A0 CBNZ X8, 0x3DBB3B8
	0x03DBB3A4 ADRP X0, 0xFFFFFFFFFCD40000
	0x03DBB3A8 ADD X0, X0, 0xD6A
	0x03DBB3AC BL 0x1C16CB8
	0x03DBB3B0 MOV X8, X0
	0x03DBB3B4 STR X0, [X21 + 0xA0]
	0x03DBB3B8 ADD X1, X31, 0x8
	0x03DBB3BC MOV X0, X20
	0x03DBB3C0 MOV V0.16B, V8.16B
	0x03DBB3C4 BLR X8
	0x03DBB3C8 LDR X8, [X31 + 0x18]
	0x03DBB3CC LDUR V0, [X31 + 0x8]
	0x03DBB3D0 LDP X30, X21, [X31 + 0x30]
	0x03DBB3D4 LDR V8, [X31 + 0x20]
	0x03DBB3D8 STR X8, [X19 + 0x10]
	0x03DBB3DC STR V0, [X19]
	0x03DBB3E0 LDP X20, X19, [X31 + 0x40]
	0x03DBB3E4 ADD X31, X31, 0x50
	0x03DBB3E8 RET
	0x03DBB3EC STR D8, [X31 - 0x30]!
	0x03DBB3F0 STP X30, X21, [X31 + 0x10]
	0x03DBB3F4 STP X20, X19, [X31 + 0x20]
	0x03DBB3F8 ADRP X21, 0x62D000
	0x03DBB3FC LDR X2, [X21 + 0xA0]
	0x03DBB400 MOV X19, X1
	0x03DBB404 MOV V8.16B, V0.16B
	0x03DBB408 MOV X20, X0
	0x03DBB40C CBNZ X2, 0x3DBB424
	0x03DBB410 ADRP X0, 0xFFFFFFFFFCD40000
	0x03DBB414 ADD X0, X0, 0xD6A
	0x03DBB418 BL 0x1C16CB8
	0x03DBB41C MOV X2, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move [X31+12], W31
	006 Move W8, [X0]
	007 Move X19, X0
	008 Add X0, X31, 28
	009 Move X1, X31
	010 Move [X31+24], W31
	011 Move [X31+28], W8
	012 Call Int32.GetHashCode, X0
	013 Move W8, [X19+4]
	014 Move W20, W0
	015 Add X0, X31, 24
	016 Move X1, X31
	017 Move [X31+24], W8
	018 Call Int32.GetHashCode, X0
	019 Move W8, [X19+8]
	020 Move W19, 0x5529
	021 NotImplemented "Instruction MOVK not yet implemented."
	022 NotImplemented "Instruction MADD not yet implemented."
	023 Add X0, X31, 12
	024 Move X1, X31
	025 Move [X31+12], W8
	026 Call Int32.GetHashCode, X0
	027 Move W8, 0x27B8
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 Multiply W8, W8, W19
	030 NotImplemented "Instruction MADD not yet implemented."
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X30, [X31+16]
	034 Add W0, W0, W8
	035 Add X31, X31, 48
	036 Return X0

Method: System.Boolean Matches(UnityEngine.UIElements.IMouseEvent e)

Disassembly:
	0x03DBB420 STR X0, [X21 + 0xA0]
	0x03DBB424 MOV X0, X20
	0x03DBB428 MOV X1, X19
	0x03DBB42C LDP X20, X19, [X31 + 0x20]
	0x03DBB430 LDP X30, X21, [X31 + 0x10]
	0x03DBB434 MOV V0.16B, V8.16B
	0x03DBB438 LDR V8, [X31], #0x30
	0x03DBB43C BR X2
	0x03DBB440 SUB X31, X31, 0xC0
	0x03DBB444 STP D9, D8, [X31 + 0x60]
	0x03DBB448 STP X30, X3, [X31 + 0x70]
	0x03DBB44C STP X26, X25, [X31 + 0x80]
	0x03DBB450 STP X24, X23, [X31 + 0x90]
	0x03DBB454 STP X22, X21, [X31 + 0xA0]
	0x03DBB458 STP X20, X19, [X31 + 0xB0]
	0x03DBB45C ADRP X26, 0x62D000
	0x03DBB460 MOV V8.16B, V1.16B
	0x03DBB464 MOV V9.16B, V0.16B
	0x03DBB468 MOV X23, X8
	0x03DBB46C LDP V1, V0, [X31 + 0xC0]
	0x03DBB470 LDR X8, [X26 + 0xA8]
	0x03DBB474 MOV X20, X6
	0x03DBB478 MOV X21, X5
	0x03DBB47C MOV W19, W4
	0x03DBB480 MOV W22, W2
	0x03DBB484 MOV X24, X1
	0x03DBB488 MOV X25, X0
	0x03DBB48C STP S2, S3, [X31 + 0x50]
	0x03DBB490 STP S4, S5, [X31 + 0x58]
	0x03DBB494 STP V0, V1, [X31 + 0x30]
	0x03DBB498 STP X31, X31, [X31 + 0x18]
	0x03DBB49C STR X31, [X31 + 0x28]
	0x03DBB4A0 CBNZ X8, 0x3DBB4B8
	0x03DBB4A4 ADRP X0, 0xFFFFFFFFFCD3A000
	0x03DBB4A8 ADD X0, X0, 0xCEC
	0x03DBB4AC BL 0x1C16CB8
	0x03DBB4B0 MOV X8, X0
	0x03DBB4B4 STR X0, [X26 + 0xA8]
	0x03DBB4B8 ADD X9, X31, 0x18
	0x03DBB4BC ADD X2, X31, 0x50
	0x03DBB4C0 ADD X3, X31, 0x40
	0x03DBB4C4 ADD X5, X31, 0x30
	0x03DBB4C8 ADD X6, X31, 0x78
	0x03DBB4CC MOV X0, X25
	0x03DBB4D0 MOV X1, X24
	0x03DBB4D4 MOV V0.16B, V9.16B
	0x03DBB4D8 MOV V1.16B, V8.16B
	0x03DBB4DC MOV W4, W22
	0x03DBB4E0 MOV W7, W19
	0x03DBB4E4 STP X20, X9, [X31 + 0x8]
	0x03DBB4E8 STR X21, [X31]
	0x03DBB4EC BLR X8
	0x03DBB4F0 LDR X8, [X31 + 0x28]
	0x03DBB4F4 LDUR V0, [X31 + 0x18]
	0x03DBB4F8 LDP X20, X19, [X31 + 0xB0]
	0x03DBB4FC LDP X22, X21, [X31 + 0xA0]
	0x03DBB500 STR X8, [X23 + 0x10]
	0x03DBB504 STR V0, [X23]
	0x03DBB508 LDP X24, X23, [X31 + 0x90]
	0x03DBB50C LDP X26, X25, [X31 + 0x80]
	0x03DBB510 LDR X30, [X31 + 0x70]
	0x03DBB514 LDP D9, D8, [X31 + 0x60]
	0x03DBB518 ADD X31, X31, 0xC0
	0x03DBB51C RET
	0x03DBB520 SUB X31, X31, 0x80
	0x03DBB524 STP D9, D8, [X31 + 0x10]
	0x03DBB528 STP X29, X30, [X31 + 0x20]
	0x03DBB52C STP X28, X27, [X31 + 0x30]
	0x03DBB530 STP X26, X25, [X31 + 0x40]
	0x03DBB534 STP X24, X23, [X31 + 0x50]
	0x03DBB538 STP X22, X21, [X31 + 0x60]
	0x03DBB53C STP X20, X19, [X31 + 0x70]
	0x03DBB540 ADRP X19, 0x62D000
	0x03DBB544 LDP X29, X27, [X31 + 0x88]
	0x03DBB548 LDR X8, [X19 + 0xA8]
	0x03DBB54C LDR X28, [X31 + 0x80]
	0x03DBB550 MOV X20, X6
	0x03DBB554 MOV X21, X5
	0x03DBB558 MOV W22, W4
	0x03DBB55C MOV X23, X3
	0x03DBB560 MOV X24, X2
	0x03DBB564 MOV V8.16B, V1.16B
	0x03DBB568 MOV V9.16B, V0.16B
	0x03DBB56C MOV X25, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x62E000
	008 Move W8, [X21+108]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x364000
	016 Move X0, [X0+3376]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+108], W8
	020 Compare X19, 0
	021 JumpIfEqual {41}
	022 Move X22, 0x364000
	023 Move W8, [X20+8]
	024 Move X22, [X22+3376]
	025 Compare W8, 0
	026 JumpIfEqual {42}
	027 Move X8, [X19]
	028 Move X1, [X22]
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Compare X9, 0
	031 JumpIfEqual {38}
	032 Move X10, [X8+176]
	033 Add X10, X10, 8
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X9, X9, 1
	037 Add X10, X10, 16
	038 Move W2, 4
	039 Move X0, X19
	040 Call 0x1C5D788
	041 Move W0, W31
	042 Move W21, 1
	043 Move W9, [X10]
	044 Add W9, W9, 4
	045 Add X8, X8, W9
	046 Add X0, X8, 312
	047 Move X8, [X0]
	048 Move X1, [X0+8]
	049 Move X0, X19
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move W8, [X20+8]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CSET not yet implemented."
	054 Move X8, [X19]
	055 Move W23, [X20]
	056 Move X1, [X22]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move W2, 5
	067 Move X0, X19
	068 Call 0x1C5D788
	069 Move W9, [X10]
	070 Add W9, W9, 5
	071 Add X8, X8, W9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X1, [X0+8]
	075 Move X0, X19
	076 NotImplemented "Instruction BLR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X20
	079 Move X1, X19
	080 Call ManipulatorActivationFilter.HasModifiers, X0, X1
	081 Move W0, W31
	082 And W0, W21, W0
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Move X23, [X31+56]
	089 Return X0

Method: System.Boolean HasModifiers(UnityEngine.UIElements.IMouseEvent e)

Disassembly:
	0x03DBB570 MOV X26, X0
	0x03DBB574 CBNZ X8, 0x3DBB594
	0x03DBB578 ADRP X0, 0xFFFFFFFFFCD3A000
	0x03DBB57C ADD X0, X0, 0xCEC
	0x03DBB580 STR W7, [X31 + 0xC]
	0x03DBB584 BL 0x1C16CB8
	0x03DBB588 LDR W7, [X31 + 0xC]
	0x03DBB58C MOV X8, X0
	0x03DBB590 STR X0, [X19 + 0xA8]
	0x03DBB594 STP X29, X27, [X31 + 0x88]
	0x03DBB598 STR X28, [X31 + 0x80]
	0x03DBB59C MOV X0, X26
	0x03DBB5A0 MOV X1, X25
	0x03DBB5A4 MOV V0.16B, V9.16B
	0x03DBB5A8 MOV V1.16B, V8.16B
	0x03DBB5AC MOV X2, X24
	0x03DBB5B0 MOV X3, X23
	0x03DBB5B4 MOV W4, W22
	0x03DBB5B8 MOV X5, X21
	0x03DBB5BC MOV X6, X20
	0x03DBB5C0 LDP X20, X19, [X31 + 0x70]
	0x03DBB5C4 LDP X22, X21, [X31 + 0x60]
	0x03DBB5C8 LDP X24, X23, [X31 + 0x50]
	0x03DBB5CC LDP X26, X25, [X31 + 0x40]
	0x03DBB5D0 LDP X28, X27, [X31 + 0x30]
	0x03DBB5D4 LDP X29, X30, [X31 + 0x20]
	0x03DBB5D8 LDP D9, D8, [X31 + 0x10]
	0x03DBB5DC ADD X31, X31, 0x80
	0x03DBB5E0 BR X8
	0x03DBB5E4 SUB X31, X31, 0x90
	0x03DBB5E8 STP D9, D8, [X31 + 0x50]
	0x03DBB5EC STP X30, X23, [X31 + 0x60]
	0x03DBB5F0 STP X22, X21, [X31 + 0x70]
	0x03DBB5F4 STP X20, X19, [X31 + 0x80]
	0x03DBB5F8 ADRP X23, 0x62D000
	0x03DBB5FC MOV V8.16B, V1.16B
	0x03DBB600 MOV V9.16B, V0.16B
	0x03DBB604 MOV X20, X8
	0x03DBB608 LDP V1, V0, [X31 + 0x90]
	0x03DBB60C LDR X8, [X23 + 0xB0]
	0x03DBB610 MOV W19, W3
	0x03DBB614 MOV X21, X1
	0x03DBB618 MOV X22, X0
	0x03DBB61C STP S2, S3, [X31 + 0x40]
	0x03DBB620 STP S4, S5, [X31 + 0x48]
	0x03DBB624 STP X31, X2, [X31 + 0x10]
	0x03DBB628 STP V0, V1, [X31 + 0x20]
	0x03DBB62C STP X31, X31, [X31]
	0x03DBB630 CBNZ X8, 0x3DBB648
	0x03DBB634 ADRP X0, 0xFFFFFFFFFCD6A000
	0x03DBB638 ADD X0, X0, 0x8BD
	0x03DBB63C BL 0x1C16CB8
	0x03DBB640 MOV X8, X0
	0x03DBB644 STR X0, [X23 + 0xB0]
	0x03DBB648 ADD X2, X31, 0x40
	0x03DBB64C ADD X3, X31, 0x30
	0x03DBB650 ADD X4, X31, 0x20
	0x03DBB654 ADD X5, X31, 0x18
	0x03DBB658 ADD X7, X31, 0x0
	0x03DBB65C MOV X0, X22
	0x03DBB660 MOV X1, X21
	0x03DBB664 MOV V0.16B, V9.16B
	0x03DBB668 MOV V1.16B, V8.16B
	0x03DBB66C MOV W6, W19
	0x03DBB670 BLR X8
	0x03DBB674 LDR X8, [X31 + 0x10]
	0x03DBB678 LDR V0, [X31]
	0x03DBB67C LDP X22, X21, [X31 + 0x70]
	0x03DBB680 LDP X30, X23, [X31 + 0x60]
	0x03DBB684 STR X8, [X20 + 0x10]
	0x03DBB688 STR V0, [X20]
	0x03DBB68C LDP X20, X19, [X31 + 0x80]
	0x03DBB690 LDP D9, D8, [X31 + 0x50]
	0x03DBB694 ADD X31, X31, 0x90
	0x03DBB698 RET
	0x03DBB69C STP D9, D8, [X31 - 0x60]!
	0x03DBB6A0 STP X30, X27, [X31 + 0x10]
	0x03DBB6A4 STP X26, X25, [X31 + 0x20]
	0x03DBB6A8 STP X24, X23, [X31 + 0x30]
	0x03DBB6AC STP X22, X21, [X31 + 0x40]
	0x03DBB6B0 STP X20, X19, [X31 + 0x50]
	0x03DBB6B4 ADRP X27, 0x62D000
	0x03DBB6B8 LDR X8, [X27 + 0xB0]
	0x03DBB6BC MOV X19, X7
	0x03DBB6C0 MOV W20, W6
	0x03DBB6C4 MOV X21, X5
	0x03DBB6C8 MOV X22, X4
	0x03DBB6CC MOV X23, X3
	0x03DBB6D0 MOV X24, X2
	0x03DBB6D4 MOV V8.16B, V1.16B
	0x03DBB6D8 MOV V9.16B, V0.16B
	0x03DBB6DC MOV X25, X1
	0x03DBB6E0 MOV X26, X0
	0x03DBB6E4 CBNZ X8, 0x3DBB6FC
	0x03DBB6E8 ADRP X0, 0xFFFFFFFFFCD6A000
	0x03DBB6EC ADD X0, X0, 0x8BD
	0x03DBB6F0 BL 0x1C16CB8
	0x03DBB6F4 MOV X8, X0
	0x03DBB6F8 STR X0, [X27 + 0xB0]
	0x03DBB6FC MOV X0, X26
	0x03DBB700 MOV X1, X25
	0x03DBB704 MOV X2, X24
	0x03DBB708 MOV X3, X23
	0x03DBB70C MOV X4, X22
	0x03DBB710 MOV X5, X21
	0x03DBB714 MOV W6, W20
	0x03DBB718 MOV X7, X19
	0x03DBB71C LDP X20, X19, [X31 + 0x50]
	0x03DBB720 LDP X22, X21, [X31 + 0x40]
	0x03DBB724 LDP X24, X23, [X31 + 0x30]
	0x03DBB728 LDP X26, X25, [X31 + 0x20]
	0x03DBB72C LDP X30, X27, [X31 + 0x10]
	0x03DBB730 MOV V0.16B, V9.16B
	0x03DBB734 MOV V1.16B, V8.16B
	0x03DBB738 LDP D9, D8, [X31], #0x60
	0x03DBB73C BR X8
	0x03DBB740 STR X30, [X31 - 0x20]!
	0x03DBB744 STP X20, X19, [X31 + 0x10]
	0x03DBB748 ADRP X19, 0x62D000
	0x03DBB74C ADRP X20, 0x3AD000
	0x03DBB750 LDRB W8, [X19 + 0xB8]
	0x03DBB754 LDR X20, [X20 + 0xF68]
	0x03DBB758 TBNZ X8, 0x0, 0x3DBB770
	0x03DBB75C ADRP X0, 0x3AD000
	0x03DBB760 LDR X0, [X0 + 0xF68]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x62E000
	008 Move W8, [X21+109]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x364000
	016 Move X0, [X0+3376]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+109], W8
	020 Compare X20, 0
	021 JumpIfEqual {38}
	022 Move X23, 0x364000
	023 Move X8, [X20]
	024 Move X23, [X23+3376]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X23]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 10
	036 Move X0, X20
	037 Call 0x1C5D788
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move W0, W31
	043 Move X30, [X31+48]
	044 Move X23, [X31+56]
	045 Return X0
	046 Move W9, [X10]
	047 Add W9, W9, 10
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X8, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X20
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, [X20]
	055 Move X1, [X23]
	056 Move W21, W0
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move W2, 8
	067 Move X0, X20
	068 Call 0x1C5D788
	069 Move W9, [X10]
	070 Add W9, W9, 8
	071 Add X8, X8, W9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X1, [X0+8]
	075 Move X0, X20
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X8, [X20]
	078 Move X1, [X23]
	079 Move W22, W0
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move W2, 7
	090 Move X0, X20
	091 Call 0x1C5D788
	092 Move W9, [X10]
	093 Add W9, W9, 7
	094 Add X8, X8, W9
	095 Add X0, X8, 312
	096 Move X8, [X0]
	097 Move X1, [X0+8]
	098 Move X0, X20
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X8, [X20]
	101 Move X1, [X23]
	102 Move W23, W0
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move W2, 9
	113 Move X0, X20
	114 Call 0x1C5D788
	115 Move W9, [X10]
	116 Add W9, W9, 9
	117 Add X8, X8, W9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X1, [X0+8]
	121 Move X0, X20
	122 NotImplemented "Instruction BLR not yet implemented."
	123 And W4, W0, 1
	124 And W1, W21, 1
	125 And W2, W22, 1
	126 Move X0, X19
	127 Move X20, [X31+32]
	128 Move X19, [X31+40]
	129 Move X22, [X31+16]
	130 Move X21, [X31+24]
	131 And W3, W23, 1
	132 Move X30, [X31+48]
	133 Move X23, [X31+56]

Method: System.Boolean Matches(UnityEngine.UIElements.IPointerEvent e)

Disassembly:
	0x03DBB7B8 LDR X20, [X20 + 0xF68]
	0x03DBB7BC TBNZ X8, 0x0, 0x3DBB7D4
	0x03DBB7C0 ADRP X0, 0x3AD000
	0x03DBB7C4 LDR X0, [X0 + 0xF68]
	0x03DBB7C8 BL 0x1C16CF4
	0x03DBB7CC MOVZ W8, 0x1
	0x03DBB7D0 STRB W8, [X19 + 0xB9]
	0x03DBB7D4 LDR X8, [X20]
	0x03DBB7D8 LDR X8, [X8 + 0xB8]
	0x03DBB7DC LDR X8, [X8 + 0x8]
	0x03DBB7E0 CBZ X8, 0x3DBB7FC
	0x03DBB7E4 LDR X2, [X8 + 0x18]
	0x03DBB7E8 LDR X0, [X8 + 0x40]
	0x03DBB7EC LDR X1, [X8 + 0x28]
	0x03DBB7F0 LDP X20, X19, [X31 + 0x10]
	0x03DBB7F4 LDR X30, [X31], #0x20
	0x03DBB7F8 BR X2
	0x03DBB7FC LDP X20, X19, [X31 + 0x10]
	0x03DBB800 LDR X30, [X31], #0x20
	0x03DBB804 RET
	0x03DBB808 STR X30, [X31 - 0x20]!
	0x03DBB80C STP X20, X19, [X31 + 0x10]
	0x03DBB810 ADRP X19, 0x62D000
	0x03DBB814 ADRP X20, 0x3AD000
	0x03DBB818 LDRB W8, [X19 + 0xBA]
	0x03DBB81C LDR X20, [X20 + 0xF68]
	0x03DBB820 TBNZ X8, 0x0, 0x3DBB838
	0x03DBB824 ADRP X0, 0x3AD000
	0x03DBB828 LDR X0, [X0 + 0xF68]
	0x03DBB82C BL 0x1C16CF4
	0x03DBB830 MOVZ W8, 0x1
	0x03DBB834 STRB W8, [X19 + 0xBA]
	0x03DBB838 LDR X8, [X20]
	0x03DBB83C LDR X8, [X8 + 0xB8]
	0x03DBB840 LDR X8, [X8 + 0x10]
	0x03DBB844 CBZ X8, 0x3DBB860
	0x03DBB848 LDR X2, [X8 + 0x18]
	0x03DBB84C LDR X0, [X8 + 0x40]
	0x03DBB850 LDR X1, [X8 + 0x28]
	0x03DBB854 LDP X20, X19, [X31 + 0x10]
	0x03DBB858 LDR X30, [X31], #0x20
	0x03DBB85C BR X2
	0x03DBB860 LDP X20, X19, [X31 + 0x10]
	0x03DBB864 LDR X30, [X31], #0x20
	0x03DBB868 RET
	0x03DBB86C STP X30, X19, [X31 - 0x10]!
	0x03DBB870 ADRP X19, 0x62D000
	0x03DBB874 LDR X0, [X19 + 0xC0]
	0x03DBB878 CBNZ X0, 0x3DBB88C
	0x03DBB87C ADRP X0, 0xFFFFFFFFFCD4A000
	0x03DBB880 ADD X0, X0, 0xAC5
	0x03DBB884 BL 0x1C16CB8
	0x03DBB888 STR X0, [X19 + 0xC0]
	0x03DBB88C LDP X30, X19, [X31], #0x10
	0x03DBB890 BR X0
	0x03DBB894 STP X30, X19, [X31 - 0x10]!
	0x03DBB898 ADRP X19, 0x62D000
	0x03DBB89C LDR X0, [X19 + 0xC8]
	0x03DBB8A0 CBNZ X0, 0x3DBB8B4
	0x03DBB8A4 ADRP X0, 0xFFFFFFFFFCD48000
	0x03DBB8A8 ADD X0, X0, 0xE3F
	0x03DBB8AC BL 0x1C16CB8
	0x03DBB8B0 STR X0, [X19 + 0xC8]
	0x03DBB8B4 LDP X30, X19, [X31], #0x10
	0x03DBB8B8 BR X0
	0x03DBB8BC STP X30, X19, [X31 - 0x10]!
	0x03DBB8C0 ADRP X19, 0x62D000
	0x03DBB8C4 LDR X0, [X19 + 0xD0]
	0x03DBB8C8 CBNZ X0, 0x3DBB8DC
	0x03DBB8CC ADRP X0, 0xFFFFFFFFFCD48000
	0x03DBB8D0 ADD X0, X0, 0xE95
	0x03DBB8D4 BL 0x1C16CB8
	0x03DBB8D8 STR X0, [X19 + 0xD0]
	0x03DBB8DC LDP X30, X19, [X31], #0x10
	0x03DBB8E0 BR X0
	0x03DBB8E4 LDP V1, V0, [X0 + 0x30]
	0x03DBB8E8 LDP V3, V2, [X0 + 0x10]
	0x03DBB8EC STP V1, V0, [X8 + 0x20]
	0x03DBB8F0 STP V3, V2, [X8]
	0x03DBB8F4 RET
	0x03DBB8F8 LDP S0, S1, [X0 + 0x58]
	0x03DBB8FC LDP S2, S3, [X0 + 0x60]
	0x03DBB900 RET
	0x03DBB904 LDR X0, [X0 + 0x68]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x62E000
	008 Move W8, [X21+110]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x362000
	016 Move X0, [X0+3704]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+110], W8
	020 Compare X19, 0
	021 JumpIfEqual {41}
	022 Move X22, 0x362000
	023 Move W8, [X20+8]
	024 Move X22, [X22+3704]
	025 Compare W8, 0
	026 JumpIfEqual {42}
	027 Move X8, [X19]
	028 Move X1, [X22]
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Compare X9, 0
	031 JumpIfEqual {38}
	032 Move X10, [X8+176]
	033 Add X10, X10, 8
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X9, X9, 1
	037 Add X10, X10, 16
	038 Move W2, 9
	039 Move X0, X19
	040 Call 0x1C5D788
	041 Move W0, W31
	042 Move W21, 1
	043 Move W9, [X10]
	044 Add W9, W9, 9
	045 Add X8, X8, W9
	046 Add X0, X8, 312
	047 Move X8, [X0]
	048 Move X1, [X0+8]
	049 Move X0, X19
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move W8, [X20+8]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CSET not yet implemented."
	054 Move X8, [X19]
	055 Move W23, [X20]
	056 Move X1, [X22]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move W2, 3
	067 Move X0, X19
	068 Call 0x1C5D788
	069 Move W9, [X10]
	070 Add W9, W9, 3
	071 Add X8, X8, W9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X1, [X0+8]
	075 Move X0, X19
	076 NotImplemented "Instruction BLR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X20
	079 Move X1, X19
	080 Call ManipulatorActivationFilter.HasModifiers, X0, X1
	081 Move W0, W31
	082 And W0, W21, W0
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Move X23, [X31+56]
	089 Return X0

Method: System.Boolean HasModifiers(UnityEngine.UIElements.IPointerEvent e)

Disassembly:
	0x03DBB908 RET
	0x03DBB90C STR X1, [X0 + 0x68]
	0x03DBB910 RET
	0x03DBB914 STR X30, [X31 - 0x20]!
	0x03DBB918 STP X20, X19, [X31 + 0x10]
	0x03DBB91C ADRP X20, 0x61D000
	0x03DBB920 LDRB W8, [X20 + 0xAC0]
	0x03DBB924 MOV X19, X0
	0x03DBB928 CBNZ W8, 0x3DBB940
	0x03DBB92C ADRP X0, 0x33C000
	0x03DBB930 LDR X0, [X0 + 0x270]
	0x03DBB934 BL 0x1C16CF4
	0x03DBB938 MOVZ W8, 0x1
	0x03DBB93C STRB W8, [X20 + 0xAC0]
	0x03DBB940 ADRP X8, 0x33C000
	0x03DBB944 LDR X8, [X8 + 0x270]
	0x03DBB948 MOV X0, X19
	0x03DBB94C MOV X1, X31
	0x03DBB950 LDR X8, [X8]
	0x03DBB954 LDR X8, [X8 + 0xB8]
	0x03DBB958 LDP V1, V0, [X8 + 0x60]
	0x03DBB95C LDP V3, V2, [X8 + 0x40]
	0x03DBB960 STP V1, V0, [X19 + 0x30]
	0x03DBB964 STP V3, V2, [X19 + 0x10]
	0x03DBB968 LDP X20, X19, [X31 + 0x10]
	0x03DBB96C LDR X30, [X31], #0x20
	0x03DBB970 B 0x33BDD8C
	0x03DBB974 STR X30, [X31 - 0x30]!
	0x03DBB978 STP X22, X21, [X31 + 0x10]
	0x03DBB97C STP X20, X19, [X31 + 0x20]
	0x03DBB980 LDR X8, [X2 + 0x8]
	0x03DBB984 STP X1, X2, [X0 + 0x20]
	0x03DBB988 MOV X19, X0
	0x03DBB98C MOV X20, X2
	0x03DBB990 STR X8, [X0 + 0x10]
	0x03DBB994 LDRB W22, [X2 + 0x52]
	0x03DBB998 STR X0, [X0 + 0x40]
	0x03DBB99C MOV X0, X2
	0x03DBB9A0 MOV X21, X1
	0x03DBB9A4 BL 0x1C16D84
	0x03DBB9A8 TBZ X0, 0x0, 0x3DBB9C0
	0x03DBB9AC CMP W22, 0x2
	0x03DBB9B0 B.NE 0x3DBB9FC
	0x03DBB9B4 ADRP X8, 0xFFFFFFFFFDE56000
	0x03DBB9B8 ADD X8, X8, 0xE9C
	0x03DBB9BC B 0x3DBBA40
	0x03DBB9C0 CMP W22, 0x1
	0x03DBB9C4 B.NE 0x3DBB9F8
	0x03DBB9C8 LDRB W8, [X19 + 0x70]
	0x03DBB9CC CBZ W8, 0x3DBBA10
	0x03DBB9D0 MOV X0, X20
	0x03DBB9D4 BL 0x1C16D7C
	0x03DBB9D8 MOV W21, W0
	0x03DBB9DC MOV X0, X20
	0x03DBB9E0 BL 0x1C17238
	0x03DBB9E4 TBZ X21, 0x0, 0x3DBBA1C
	0x03DBB9E8 TBZ X0, 0x0, 0x3DBBA2C
	0x03DBB9EC ADRP X8, 0xFFFFFFFFFDE56000
	0x03DBB9F0 ADD X8, X8, 0xFB8
	0x03DBB9F4 B 0x3DBBA40
	0x03DBB9F8 CBZ X21, 0x3DBBA60
	0x03DBB9FC LDR X8, [X19 + 0x10]
	0x03DBBA00 LDR X9, [X19 + 0x20]
	0x03DBBA04 STR X8, [X19 + 0x18]
	0x03DBBA08 STR X9, [X19 + 0x40]
	0x03DBBA0C B 0x3DBBA44
	0x03DBBA10 ADRP X8, 0xFFFFFFFFFDE56000
	0x03DBBA14 ADD X8, X8, 0xE78
	0x03DBBA18 B 0x3DBBA40
	0x03DBBA1C TBZ X0, 0x0, 0x3DBBA38
	0x03DBBA20 ADRP X8, 0xFFFFFFFFFDE56000
	0x03DBBA24 ADD X8, X8, 0xEE0
	0x03DBBA28 B 0x3DBBA40
	0x03DBBA2C ADRP X8, 0xFFFFFFFFFDE56000
	0x03DBBA30 ADD X8, X8, 0xF6C
	0x03DBBA34 B 0x3DBBA40
	0x03DBBA38 ADRP X8, 0xFFFFFFFFFDE56000
	0x03DBBA3C ADD X8, X8, 0xEB0
	0x03DBBA40 STR X8, [X19 + 0x18]
	0x03DBBA44 ADRP X8, 0xFFFFFFFFFDE56000
	0x03DBBA48 ADD X8, X8, 0xE20
	0x03DBBA4C STR X8, [X19 + 0x38]
	0x03DBBA50 LDP X20, X19, [X31 + 0x20]
	0x03DBBA54 LDP X22, X21, [X31 + 0x10]
	0x03DBBA58 LDR X30, [X31], #0x30
	0x03DBBA5C RET
	0x03DBBA60 ADRP X1, 0xFFFFFFFFFCD60000
	0x03DBBA64 ADD X1, X1, 0xEE3
	0x03DBBA68 MOV X0, X31
	0x03DBBA6C BL 0x1C16F3C
	0x03DBBA70 MOV X1, X31
	0x03DBBA74 BL 0x1C16DEC
	0x03DBBA78 LDR X8, [X0 + 0x40]
	0x03DBBA7C LDR X4, [X0 + 0x18]
	0x03DBBA80 LDR X3, [X0 + 0x28]
	0x03DBBA84 MOV X0, X8
	0x03DBBA88 BR X4
	0x03DBBA8C STP X30, X19, [X31 - 0x10]!
	0x03DBBA90 LDR X0, [X0 + 0x18]
	0x03DBBA94 CBZ X0, 0x3DBBAA0
	0x03DBBA98 LDP X30, X19, [X31], #0x10
	0x03DBBA9C RET
	0x03DBBAA0 ADRP X0, 0x338000
	0x03DBBAA4 LDR X0, [X0 + 0x7D0]
	0x03DBBAA8 BL 0x1C16D08
	0x03DBBAAC BL 0x1C16F10
	0x03DBBAB0 MOV X19, X0
	0x03DBBAB4 ADRP X0, 0x3AD000
	0x03DBBAB8 LDR X0, [X0 + 0xF70]
	0x03DBBABC BL 0x1C16D08
	0x03DBBAC0 MOV X1, X0
	0x03DBBAC4 MOV X0, X19
	0x03DBBAC8 MOV X2, X31
	0x03DBBACC BL 0x33B2C70
	0x03DBBAD0 ADRP X0, 0x3AD000
	0x03DBBAD4 LDR X0, [X0 + 0xF78]
	0x03DBBAD8 BL 0x1C16D08
	0x03DBBADC MOV X1, X0
	0x03DBBAE0 MOV X0, X19
	0x03DBBAE4 BL 0x1C16DEC
	0x03DBBAE8 STR X30, [X31 - 0x30]!
	0x03DBBAEC STP X22, X21, [X31 + 0x10]
	0x03DBBAF0 STP X20, X19, [X31 + 0x20]
	0x03DBBAF4 ADRP X22, 0x62D000
	0x03DBBAF8 ADRP X20, 0x3AD000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x62E000
	008 Move W8, [X21+111]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x362000
	016 Move X0, [X0+3704]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+111], W8
	020 Compare X20, 0
	021 JumpIfEqual {38}
	022 Move X23, 0x362000
	023 Move X8, [X20]
	024 Move X23, [X23+3704]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X23]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 23
	036 Move X0, X20
	037 Call 0x1C5D788
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move W0, W31
	043 Move X30, [X31+48]
	044 Move X23, [X31+56]
	045 Return X0
	046 Move W9, [X10]
	047 Add W9, W9, 23
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X8, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X20
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, [X20]
	055 Move X1, [X23]
	056 Move W21, W0
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move W2, 21
	067 Move X0, X20
	068 Call 0x1C5D788
	069 Move W9, [X10]
	070 Add W9, W9, 21
	071 Add X8, X8, W9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X1, [X0+8]
	075 Move X0, X20
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X8, [X20]
	078 Move X1, [X23]
	079 Move W22, W0
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move W2, 20
	090 Move X0, X20
	091 Call 0x1C5D788
	092 Move W9, [X10]
	093 Add W9, W9, 20
	094 Add X8, X8, W9
	095 Add X0, X8, 312
	096 Move X8, [X0]
	097 Move X1, [X0+8]
	098 Move X0, X20
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X8, [X20]
	101 Move X1, [X23]
	102 Move W23, W0
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move W2, 22
	113 Move X0, X20
	114 Call 0x1C5D788
	115 Move W9, [X10]
	116 Add W9, W9, 22
	117 Add X8, X8, W9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X1, [X0+8]
	121 Move X0, X20
	122 NotImplemented "Instruction BLR not yet implemented."
	123 And W4, W0, 1
	124 And W1, W21, 1
	125 And W2, W22, 1
	126 Move X0, X19
	127 Move X20, [X31+32]
	128 Move X19, [X31+40]
	129 Move X22, [X31+16]
	130 Move X21, [X31+24]
	131 And W3, W23, 1
	132 Move X30, [X31+48]
	133 Move X23, [X31+56]
	134 Call ManipulatorActivationFilter.MatchModifiers, X0, X1, X2, X3, X4
	135 Return X0

Method: System.Boolean MatchModifiers(System.Boolean alt, System.Boolean ctrl, System.Boolean shift, System.Boolean command)

Disassembly:
	0x03DBB764 BL 0x1C16CF4
	0x03DBB768 MOVZ W8, 0x1
	0x03DBB76C STRB W8, [X19 + 0xB8]
	0x03DBB770 LDR X8, [X20]
	0x03DBB774 LDR X8, [X8 + 0xB8]
	0x03DBB778 LDR X8, [X8]
	0x03DBB77C CBZ X8, 0x3DBB798
	0x03DBB780 LDR X2, [X8 + 0x18]
	0x03DBB784 LDR X0, [X8 + 0x40]
	0x03DBB788 LDR X1, [X8 + 0x28]
	0x03DBB78C LDP X20, X19, [X31 + 0x10]
	0x03DBB790 LDR X30, [X31], #0x20
	0x03DBB794 BR X2
	0x03DBB798 LDP X20, X19, [X31 + 0x10]
	0x03DBB79C LDR X30, [X31], #0x20
	0x03DBB7A0 RET
	0x03DBB7A4 STR X30, [X31 - 0x20]!
	0x03DBB7A8 STP X20, X19, [X31 + 0x10]
	0x03DBB7AC ADRP X19, 0x62D000
	0x03DBB7B0 ADRP X20, 0x3AD000
	0x03DBB7B4 LDRB W8, [X19 + 0xB9]

ISIL:
	001 Move W8, [X0+4]
	002 Move TEMP, X8
	003 And TEMP, TEMP, 4
	004 Compare TEMP, 4
	005 JumpIfNotEqual {10}
	006 Move TEMP, X1
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfNotEqual {41}
	010 NotImplemented "Instruction BIC not yet implemented."
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {41}
	015 Move TEMP, X8
	016 And TEMP, TEMP, 2
	017 Compare TEMP, 2
	018 JumpIfNotEqual {23}
	019 Move TEMP, X2
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {41}
	023 NotImplemented "Instruction BIC not yet implemented."
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {41}
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {36}
	032 Move TEMP, X3
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {41}
	036 NotImplemented "Instruction BIC not yet implemented."
	037 Move TEMP, X9
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {43}
	041 Move W0, W31
	042 Return X0
	043 NotImplemented "Instruction ORN not yet implemented."
	044 Move TEMP, X9
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {41}
	048 NotImplemented "Instruction ORN not yet implemented."
	049 Or W8, W9, W8
	050 And W0, W8, 1
	051 Return X0

