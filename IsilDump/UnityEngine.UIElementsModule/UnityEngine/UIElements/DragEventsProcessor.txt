Type: UnityEngine.UIElements.DragEventsProcessor

Method: System.Boolean get_supportsDragEvents()

Disassembly:
	0x03D92FBC LDP X20, X19, [X31 + 0xE0]
	0x03D92FC0 LDP X22, X21, [X31 + 0xD0]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_useDragEvents()

Disassembly:
	0x03D92FC4 LDP X24, X23, [X31 + 0xC0]
	0x03D92FC8 LDR X30, [X31 + 0xB8]
	0x03D92FCC LDP D9, D8, [X31 + 0xA8]
	0x03D92FD0 LDR V10, [X31 + 0xA0]
	0x03D92FD4 ADD X31, X31, 0xF0
	0x03D92FD8 RET
	0x03D92FDC LDR X8, [X20]
	0x03D92FE0 MOV X0, X20
	0x03D92FE4 LDP X9, X1, [X8 + 0x188]
	0x03D92FE8 BLR X9
	0x03D92FEC TBZ X0, 0x0, 0x3D9300C
	0x03D92FF0 LDR X8, [X20]
	0x03D92FF4 MOV X0, X20
	0x03D92FF8 LDP X9, X1, [X8 + 0x178]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+392]
	006 Move X1, [X8+400]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {19}
	012 Move X8, [X19]
	013 Move X0, X19
	014 Move X2, [X8+376]
	015 Move X1, [X8+384]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 CallNoReturn X2
	019 Move W0, W31
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return X0

Method: UnityEngine.UIElements.IDragAndDrop get_dragAndDrop()

Disassembly:
	0x03D92FFC BLR X9
	0x03D93000 TBZ X0, 0x0, 0x3D9300C
	0x03D93004 LDR W8, [X20 + 0x14]
	0x03D93008 B 0x3D93048
	0x03D9300C LDR W8, [X20 + 0x14]
	0x03D93010 CMP W8, 0x2
	0x03D93014 B.NE 0x3D93048
	0x03D93018 LDP S0, S1, [X19 + 0xB4]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X1, X31
	006 Call VisualElement.get_panel, X0
	007 Move X30, [X31+16]
	008 Call DragAndDropUtility.GetDragAndDrop, X0
	009 Return X0
	010 Call 0x1C17F20

Method: System.Boolean get_isEditorContext()

Disassembly:
	0x03D9301C MOV X0, X20
	0x03D93020 BL 0x3D92C04
	0x03D93024 CMP X0, 0x0
	0x03D93028 CSEL X0, X20, X0, EQ
	0x03D9302C CBZ X0, 0x3D932D8
	0x03D93030 LDR X8, [X0]
	0x03D93034 LDP S1, S2, [X19 + 0xB8]
	0x03D93038 LDR V0, [X19 + 0xB4]
	0x03D9303C LDP X9, X1, [X8 + 0x1B8]
	0x03D93040 BLR X9
	0x03D93044 B 0x3D92FAC
	0x03D93048 CMP W8, 0x1
	0x03D9304C B.NE 0x3D92FAC
	0x03D93050 LDP S0, S1, [X20 + 0x18]
	0x03D93054 LDP S3, S4, [X19 + 0xB4]
	0x03D93058 LDR V2, [X20 + 0x20]
	0x03D9305C LDR V5, [X19 + 0xBC]
	0x03D93060 MOVZ W8, 0x42C80000
	0x03D93064 FSUB S3, S0, S3
	0x03D93068 FSUB S4, S1, S4
	0x03D9306C FSUB S5, S2, S5
	0x03D93070 FMUL S3, S3, S3
	0x03D93074 FMUL S4, S4, S4
	0x03D93078 FMUL S5, S5, S5
	0x03D9307C FADD S3, S3, S4
	0x03D93080 FADD S3, S3, S5
	0x03D93084 FMOV S4, W8
	0x03D93088 FCMP S3, S4
	0x03D9308C B.LT 0x3D92FAC
	0x03D93090 LDR X8, [X20]
	0x03D93094 MOV X0, X20
	0x03D93098 LDP X9, X1, [X8 + 0x1A8]
	0x03D9309C ADD X8, X31, 0x0
	0x03D930A0 BLR X9
	0x03D930A4 LDR W23, [X31 + 0x8]
	0x03D930A8 LDUR V0, [X31 + 0xC]
	0x03D930AC LDR W8, [X31 + 0x1C]
	0x03D930B0 LDR X24, [X31]
	0x03D930B4 CMP W23, 0x3
	0x03D930B8 STR V0, [X31 + 0x8]
	0x03D930BC STR W8, [X31 + 0x90]
	0x03D930C0 B.NE 0x3D930CC
	0x03D930C4 STR W31, [X20 + 0x14]
	0x03D930C8 B 0x3D92FAC
	0x03D930CC LDR X8, [X20]
	0x03D930D0 MOV X0, X20
	0x03D930D4 LDP X9, X1, [X8 + 0x188]
	0x03D930D8 BLR X9
	0x03D930DC TBZ X0, 0x0, 0x3D931B4
	0x03D930E0 LDR X8, [X20]
	0x03D930E4 MOV X0, X20
	0x03D930E8 LDP X9, X1, [X8 + 0x178]
	0x03D930EC BLR X9
	0x03D930F0 TBZ X0, 0x0, 0x3D931B4
	0x03D930F4 MOV X0, X31
	0x03D930F8 BL 0x3C63934
	0x03D930FC CBZ X0, 0x3D93134
	0x03D93100 MOV X0, X31
	0x03D93104 BL 0x3C63934
	0x03D93108 CBZ X0, 0x3D932D8
	0x03D9310C MOV X1, X31
	0x03D93110 BL 0x3C63270
	0x03D93114 CBZ W0, 0x3D93134
	0x03D93118 MOV X0, X31
	0x03D9311C BL 0x3C63934
	0x03D93120 CBZ X0, 0x3D932D8
	0x03D93124 MOV X1, X31
	0x03D93128 BL 0x3C63270
	0x03D9312C CMP W0, 0x3
	0x03D93130 B.NE 0x3D92FAC
	0x03D93134 MOV X0, X20
	0x03D93138 BL 0x3D91FFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x655000
	006 Move X20, 0x389000
	007 Move W8, [X21+3678]
	008 Move X20, [X20+2032]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x3D5000
	015 Move X0, [X0+2864]
	016 Call 0x1C17CF4
	017 Move X0, 0x389000
	018 Move X0, [X0+2032]
	019 Call 0x1C17CF4
	020 Move X0, 0x38A000
	021 Move X0, [X0+3712]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3678], W8
	025 Move X0, [X20]
	026 Move X21, 0x3D5000
	027 Move X20, [X19+40]
	028 Move W8, [X0+224]
	029 Move X21, [X21+2864]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X1, [X21]
	034 Move X0, X20
	035 Call 0x218546C, X0
	036 Move X0, [X19+40]
	037 Compare X0, 0
	038 JumpIfEqual {82}
	039 Move X1, X31
	040 Call VisualElement.get_parent, X0
	041 Move X1, [X21]
	042 Call 0x218546C, X0
	043 Move X0, [X19+40]
	044 Compare X0, 0
	045 JumpIfEqual {82}
	046 Move X1, X31
	047 Call VisualElement.get_panel, X0
	048 Compare X0, 0
	049 JumpIfEqual {82}
	050 Move X10, 0x38A000
	051 Move X8, [X0]
	052 Move X10, [X10+3712]
	053 Move X19, X0
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X1, [X10]
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move W2, 2
	065 Move X0, X19
	066 Call 0x1C5D788
	067 Move W9, [X10]
	068 Add W9, W9, 2
	069 Add X8, X8, W9
	070 Add X0, X8, 312
	071 Move X8, [X0]
	072 Move X1, [X0+8]
	073 Move X0, X19
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CSET not yet implemented."
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Return X0
	082 Call 0x1C17F20

Method: System.Void .ctor(UnityEngine.UIElements.VisualElement target)

Disassembly:
	0x03D9313C LDR V0, [X31 + 0x8]
	0x03D93140 LDR W8, [X31 + 0x90]
	0x03D93144 STR V0, [X31 + 0x6]
	0x03D93148 STR W8, [X31 + 0x70]
	0x03D9314C CBZ X0, 0x3D932D8
	0x03D93150 LDR V0, [X31 + 0x6]
	0x03D93154 LDR W8, [X31 + 0x70]
	0x03D93158 LDP S9, S8, [X19 + 0xB8]
	0x03D9315C LDR V10, [X19 + 0xB4]
	0x03D93160 STR V0, [X31 + 0x2]
	0x03D93164 STR W8, [X31 + 0x30]
	0x03D93168 ADRP X10, 0x3D4000
	0x03D9316C LDR X8, [X0]
	0x03D93170 LDR X10, [X10 + 0xB90]
	0x03D93174 MOV X21, X0
	0x03D93178 LDRH W9, [X8 + 0x12E]
	0x03D9317C LDR X1, [X10]
	0x03D93180 CBZ X9, 0x3D931A4
	0x03D93184 LDR X10, [X8 + 0xB0]
	0x03D93188 ADD X10, X10, 0x8
	0x03D9318C LDUR X11, [X10 - 0x8]
	0x03D93190 CMP X11, X1
	0x03D93194 B.EQ 0x3D93264
	0x03D93198 SUBS X9, X9, 0x1
	0x03D9319C ADD X10, X10, 0x10
	0x03D931A0 B.NE 0x3D9318C
	0x03D931A4 MOV X0, X21
	0x03D931A8 MOV W2, W31
	0x03D931AC BL 0x1C5C788
	0x03D931B0 B 0x3D93270
	0x03D931B4 LDR X8, [X20]
	0x03D931B8 MOV X0, X20
	0x03D931BC LDP X9, X1, [X8 + 0x178]
	0x03D931C0 BLR X9
	0x03D931C4 TBZ X0, 0x0, 0x3D932A8
	0x03D931C8 MOV X0, X20
	0x03D931CC BL 0x3D91FFC
	0x03D931D0 LDR V0, [X31 + 0x8]
	0x03D931D4 LDR W8, [X31 + 0x90]
	0x03D931D8 STR V0, [X31 + 0x6]
	0x03D931DC STR W8, [X31 + 0x70]
	0x03D931E0 CBZ X0, 0x3D932D8
	0x03D931E4 LDR V0, [X31 + 0x6]
	0x03D931E8 LDR W8, [X31 + 0x70]
	0x03D931EC LDP S9, S8, [X19 + 0xB8]
	0x03D931F0 LDR V10, [X19 + 0xB4]
	0x03D931F4 STR V0, [X31 + 0x4]
	0x03D931F8 STR W8, [X31 + 0x50]
	0x03D931FC ADRP X10, 0x3D4000
	0x03D93200 LDR X8, [X0]
	0x03D93204 LDR X10, [X10 + 0xB90]
	0x03D93208 MOV X21, X0
	0x03D9320C LDRH W9, [X8 + 0x12E]
	0x03D93210 LDR X1, [X10]
	0x03D93214 CBZ X9, 0x3D93238
	0x03D93218 LDR X10, [X8 + 0xB0]
	0x03D9321C ADD X10, X10, 0x8
	0x03D93220 LDUR X11, [X10 - 0x8]
	0x03D93224 CMP X11, X1
	0x03D93228 B.EQ 0x3D93248
	0x03D9322C SUBS X9, X9, 0x1
	0x03D93230 ADD X10, X10, 0x10
	0x03D93234 B.NE 0x3D93220
	0x03D93238 MOV X0, X21
	0x03D9323C MOV W2, W31
	0x03D93240 BL 0x1C5C788
	0x03D93244 B 0x3D93254
	0x03D93248 LDRSW X9, [X10]
	0x03D9324C ADD X8, X8, X9, 0x4, LSL
	0x03D93250 ADD X0, X8, 0x138
	0x03D93254 LDR X8, [X0]
	0x03D93258 LDR V0, [X31 + 0x4]
	0x03D9325C LDR W9, [X31 + 0x50]
	0x03D93260 B 0x3D9327C
	0x03D93264 LDRSW X9, [X10]
	0x03D93268 ADD X8, X8, X9, 0x4, LSL
	0x03D9326C ADD X0, X8, 0x138

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x655000
	008 Move X22, 0x38B000
	009 Move X21, 0x3D5000
	010 Move W8, [X23+3679]
	011 Move X22, [X22+3440]
	012 Move X21, [X21+2872]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x38B000
	020 Move X0, [X0+3424]
	021 Call 0x1C17CF4
	022 Move X0, 0x38B000
	023 Move X0, [X0+3432]
	024 Call 0x1C17CF4
	025 Move X0, 0x3D5000
	026 Move X0, [X0+2872]
	027 Call 0x1C17CF4
	028 Move X0, 0x3D5000
	029 Move X0, [X0+2880]
	030 Call 0x1C17CF4
	031 Move X0, 0x38B000
	032 Move X0, [X0+3440]
	033 Call 0x1C17CF4
	034 Move X0, 0x38B000
	035 Move X0, [X0+3448]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X23+3679], W8
	039 Move X0, X19
	040 Move X1, X31
	041 Call Object..ctor, X0
	042 Move [X19+40], X20
	043 Move X0, [X22]
	044 Call 0x1C17F10
	045 Move X2, [X21]
	046 Move X1, X19
	047 Move X3, X31
	048 Move X21, X0
	049 Call 0x2D0F824, X0, X1, X2
	050 Compare X20, 0
	051 JumpIfEqual {87}
	052 Move X8, 0x38B000
	053 Move X8, [X8+3424]
	054 Move X22, 0x38B000
	055 Move X23, 0x3D5000
	056 Move X0, X20
	057 Move X3, [X8]
	058 Move X22, [X22+3448]
	059 Move X23, [X23+2880]
	060 Move X1, X21
	061 Move W2, W31
	062 Call 0x21A2534, X0, X1, X2
	063 Move X0, [X22]
	064 Move X20, [X19+40]
	065 Call 0x1C17F10
	066 Move X2, [X23]
	067 Move X1, X19
	068 Move X3, X31
	069 Move X21, X0
	070 Call 0x2D0F824, X0, X1, X2
	071 Compare X20, 0
	072 JumpIfEqual {87}
	073 Move X8, 0x38B000
	074 Move X8, [X8+3432]
	075 Move X0, X20
	076 Move X1, X21
	077 Move W2, W31
	078 Move X3, [X8]
	079 Call 0x21A2534, X0, X1, X2
	080 Move X0, X19
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Move X23, [X31+56]
	087 Call 0x1C17F20

Method: System.Void RegisterCallbacksFromTarget(UnityEngine.UIElements.AttachToPanelEvent evt)

Disassembly:
	0x03D93570 FCMP S9, S3

ISIL:
	001 Call DragEventsProcessor.RegisterCallbacksFromTarget, X0
	002 Return 

Method: System.Void RegisterCallbacksFromTarget()

Disassembly:
	0x03D93270 LDR X8, [X0]
	0x03D93274 LDR V0, [X31 + 0x2]
	0x03D93278 LDR W9, [X31 + 0x30]
	0x03D9327C STR X24, [X31]
	0x03D93280 STR W23, [X31 + 0x8]
	0x03D93284 STUR V0, [X31 + 0xC]
	0x03D93288 STR W9, [X31 + 0x1C]
	0x03D9328C LDR X2, [X0 + 0x8]
	0x03D93290 ADD X1, X31, 0x0
	0x03D93294 MOV X0, X21
	0x03D93298 MOV V0.16B, V10.16B
	0x03D9329C MOV V1.16B, V9.16B
	0x03D932A0 MOV V2.16B, V8.16B
	0x03D932A4 BLR X8
	0x03D932A8 MOVZ W8, 0x2
	0x03D932AC STR W8, [X20 + 0x14]
	0x03D932B0 LDR X0, [X20 + 0x28]
	0x03D932B4 LDR W1, [X19 + 0x9C]
	0x03D932B8 MOV X2, X31
	0x03D932BC BL 0x3DBAC60
	0x03D932C0 MOVZ W8, 0x1
	0x03D932C4 MOV X0, X19
	0x03D932C8 MOV X1, X31
	0x03D932CC STRB W8, [X19 + 0x106]
	0x03D932D0 BL 0x3D9D950
	0x03D932D4 B 0x3D92FAC
	0x03D932D8 BL 0x1C16F20
	0x03D932DC BL 0x3EB1B20
	0x03D932E0 STR X1, [X0]
	0x03D932E4 RET
	0x03D932E8 LDR W0, [X0 + 0x8]
	0x03D932EC RET
	0x03D932F0 STR W1, [X0 + 0x8]
	0x03D932F4 RET
	0x03D932F8 LDR W0, [X0 + 0xC]
	0x03D932FC RET
	0x03D93300 STR W1, [X0 + 0xC]
	0x03D93304 RET
	0x03D93308 LDR W0, [X0 + 0x10]
	0x03D9330C RET
	0x03D93310 STR W1, [X0 + 0x10]
	0x03D93314 RET
	0x03D93318 LDR W0, [X0 + 0x14]
	0x03D9331C RET
	0x03D93320 STR W1, [X0 + 0x14]
	0x03D93324 RET
	0x03D93328 LDR X0, [X0 + 0x18]
	0x03D9332C RET
	0x03D93330 STR X1, [X0 + 0x18]
	0x03D93334 RET
	0x03D93338 STR X1, [X0]
	0x03D9333C STR W2, [X0 + 0x8]
	0x03D93340 STR X3, [X0 + 0x10]
	0x03D93344 RET
	0x03D93348 STP X1, X2, [X0]
	0x03D9334C LDP V1, V0, [X3]
	0x03D93350 STP V1, V0, [X0 + 0x10]
	0x03D93354 RET
	0x03D93358 STP S0, S1, [X0 + 0x20]
	0x03D9335C LDP V1, V0, [X1]
	0x03D93360 STP V1, V0, [X0]
	0x03D93364 RET
	0x03D93368 LDR X0, [X0]
	0x03D9336C RET
	0x03D93370 LDR W0, [X0 + 0x8]
	0x03D93374 RET
	0x03D93378 LDR X0, [X0 + 0x10]
	0x03D9337C RET
	0x03D93380 STR X1, [X0 + 0x10]
	0x03D93384 RET
	0x03D93388 LDR X0, [X0 + 0x18]
	0x03D9338C RET
	0x03D93390 STR X1, [X0 + 0x18]
	0x03D93394 RET
	0x03D93398 STR X30, [X31 - 0x30]!
	0x03D9339C STP X22, X21, [X31 + 0x10]
	0x03D933A0 STP X20, X19, [X31 + 0x20]
	0x03D933A4 ADRP X22, 0x654000
	0x03D933A8 LDRB W8, [X22 + 0xE68]
	0x03D933AC MOV X19, X2
	0x03D933B0 MOV X20, X1
	0x03D933B4 MOV X21, X0
	0x03D933B8 TBNZ X8, 0x0, 0x3D933D0
	0x03D933BC ADRP X0, 0x390000
	0x03D933C0 LDR X0, [X0 + 0xDB8]
	0x03D933C4 BL 0x1C16CF4
	0x03D933C8 MOVZ W8, 0x1
	0x03D933CC STRB W8, [X22 + 0xE68]
	0x03D933D0 LDR X22, [X21 + 0x10]
	0x03D933D4 CBNZ X22, 0x3D933FC
	0x03D933D8 ADRP X8, 0x390000
	0x03D933DC LDR X8, [X8 + 0xDB8]
	0x03D933E0 LDR X0, [X8]
	0x03D933E4 BL 0x1C16F10
	0x03D933E8 MOV X1, X31
	0x03D933EC MOV X22, X0
	0x03D933F0 BL 0x335A0A0
	0x03D933F4 STR X22, [X21 + 0x10]
	0x03D933F8 CBZ X22, 0x3D93424
	0x03D933FC LDR X8, [X22]
	0x03D93400 MOV X0, X22
	0x03D93404 MOV X1, X20
	0x03D93408 MOV X2, X19
	0x03D9340C LDR X4, [X8 + 0x2E8]
	0x03D93410 LDR X3, [X8 + 0x2F0]
	0x03D93414 LDP X20, X19, [X31 + 0x20]
	0x03D93418 LDP X22, X21, [X31 + 0x10]
	0x03D9341C LDR X30, [X31], #0x30
	0x03D93420 BR X4
	0x03D93424 BL 0x1C16F20
	0x03D93428 STR X30, [X31 - 0x20]!
	0x03D9342C STP X20, X19, [X31 + 0x10]
	0x03D93430 ADRP X20, 0x654000
	0x03D93434 LDRB W8, [X20 + 0xE69]
	0x03D93438 MOV X19, X0
	0x03D9343C TBNZ X8, 0x0, 0x3D93454
	0x03D93440 ADRP X0, 0x38A000
	0x03D93444 LDR X0, [X0 + 0xF18]
	0x03D93448 BL 0x1C16CF4
	0x03D9344C MOVZ W8, 0x1
	0x03D93450 STRB W8, [X20 + 0xE69]
	0x03D93454 LDR X8, [X19 + 0x28]
	0x03D93458 CBZ X8, 0x3D9347C
	0x03D9345C ADRP X9, 0x38A000
	0x03D93460 LDR X9, [X9 + 0xF18]
	0x03D93464 LDR X10, [X8]
	0x03D93468 LDR X9, [X9]
	0x03D9346C LDRB W12, [X10 + 0x130]
	0x03D93470 LDRB W11, [X9 + 0x130]
	0x03D93474 CMP W12, W11
	0x03D93478 B.CS 0x3D93484
	0x03D9347C MOV X0, X31
	0x03D93480 B 0x3D93498
	0x03D93484 LDR X10, [X10 + 0xC8]
	0x03D93488 ADD X10, X10, X11, 0x3, LSL
	0x03D9348C LDUR X10, [X10 - 0x8]
	0x03D93490 CMP X10, X9
	0x03D93494 CSEL X0, X8, X31, EQ
	0x03D93498 LDP X20, X19, [X31 + 0x10]
	0x03D9349C LDR X30, [X31], #0x20
	0x03D934A0 RET
	0x03D934A4 STR X30, [X31 - 0x10]!
	0x03D934A8 BL 0x3D93428
	0x03D934AC CBZ X0, 0x3D934BC
	0x03D934B0 LDR X0, [X0 + 0x440]
	0x03D934B4 LDR X30, [X31], #0x10
	0x03D934B8 RET
	0x03D934BC BL 0x1C16F20
	0x03D934C0 LDR X0, [X0 + 0x70]
	0x03D934C4 RET
	0x03D934C8 STR X1, [X0 + 0x70]
	0x03D934CC RET
	0x03D934D0 FMOV V0.2S, 0x0
	0x03D934D4 STR D0, [X0 + 0x68]
	0x03D934D8 B 0x3D9213C
	0x03D934DC STR D10, [X31 - 0x40]!
	0x03D934E0 STP D9, D8, [X31 + 0x10]
	0x03D934E4 STP X30, X21, [X31 + 0x20]
	0x03D934E8 STP X20, X19, [X31 + 0x30]
	0x03D934EC ADRP X20, 0x654000
	0x03D934F0 LDRB W8, [X20 + 0xE6A]
	0x03D934F4 MOV V8.16B, V2.16B
	0x03D934F8 MOV V9.16B, V1.16B
	0x03D934FC MOV V10.16B, V0.16B
	0x03D93500 MOV X19, X0
	0x03D93504 TBNZ X8, 0x0, 0x3D93534
	0x03D93508 ADRP X0, 0x3BA000
	0x03D9350C LDR X0, [X0 + 0xAA0]
	0x03D93510 BL 0x1C16CF4
	0x03D93514 ADRP X0, 0x3D4000
	0x03D93518 LDR X0, [X0 + 0xBA8]
	0x03D9351C BL 0x1C16CF4
	0x03D93520 ADRP X0, 0x361000
	0x03D93524 LDR X0, [X0 + 0xE58]
	0x03D93528 BL 0x1C16CF4
	0x03D9352C MOVZ W8, 0x1
	0x03D93530 STRB W8, [X20 + 0xE6A]
	0x03D93534 LDR X8, [X19 + 0x70]
	0x03D93538 CBZ X8, 0x3D936F0
	0x03D9353C MOV X0, X19
	0x03D93540 BL 0x3D93428
	0x03D93544 CBZ X0, 0x3D937AC
	0x03D93548 LDR X0, [X0 + 0x440]
	0x03D9354C CBZ X0, 0x3D937AC
	0x03D93550 LDR X8, [X0]
	0x03D93554 LDR X9, [X8 + 0x768]
	0x03D93558 LDR X1, [X8 + 0x770]
	0x03D9355C BLR X9
	0x03D93560 CBZ X0, 0x3D937AC
	0x03D93564 MOV X1, X31
	0x03D93568 BL 0x3DEDC10
	0x03D9356C FADD S3, S1, S3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x655000
	006 Move W8, [X20+3680]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {68}
	012 Move X0, 0x3D1000
	013 Move X0, [X0+184]
	014 Call 0x1C17CF4
	015 Move X0, 0x3D4000
	016 Move X0, [X0+1304]
	017 Call 0x1C17CF4
	018 Move X0, 0x38B000
	019 Move X0, [X0+1904]
	020 Call 0x1C17CF4
	021 Move X0, 0x3D5000
	022 Move X0, [X0+2888]
	023 Call 0x1C17CF4
	024 Move X0, 0x38C000
	025 Move X0, [X0+152]
	026 Call 0x1C17CF4
	027 Move X0, 0x38B000
	028 Move X0, [X0+1912]
	029 Call 0x1C17CF4
	030 Move X0, 0x3D5000
	031 Move X0, [X0+2896]
	032 Call 0x1C17CF4
	033 Move X0, 0x3D5000
	034 Move X0, [X0+2904]
	035 Call 0x1C17CF4
	036 Move X0, 0x3D5000
	037 Move X0, [X0+2912]
	038 Call 0x1C17CF4
	039 Move X0, 0x3D5000
	040 Move X0, [X0+2920]
	041 Call 0x1C17CF4
	042 Move X0, 0x3D5000
	043 Move X0, [X0+2928]
	044 Call 0x1C17CF4
	045 Move X0, 0x3D5000
	046 Move X0, [X0+2936]
	047 Call 0x1C17CF4
	048 Move X0, 0x3D0000
	049 Move X0, [X0+2560]
	050 Call 0x1C17CF4
	051 Move X0, 0x3D5000
	052 Move X0, [X0+2944]
	053 Call 0x1C17CF4
	054 Move X0, 0x38C000
	055 Move X0, [X0+160]
	056 Call 0x1C17CF4
	057 Move X0, 0x38B000
	058 Move X0, [X0+1920]
	059 Call 0x1C17CF4
	060 Move X0, 0x3D0000
	061 Move X0, [X0+2568]
	062 Call 0x1C17CF4
	063 Move X0, 0x38B000
	064 Move X0, [X0+1928]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X20+3680], W8
	068 Move W8, [X19+16]
	069 Compare W8, 0
	070 JumpIfEqual {76}
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Return 
	076 Move W8, 1
	077 Move [X19+16], W8
	078 Move X8, 0x38B000
	079 Move X20, [X19+40]
	080 Move X8, [X8+1920]
	081 Move X0, [X8]
	082 Call 0x1C17F10
	083 Move X8, 0x3D5000
	084 Move X8, [X8+2912]
	085 Move X1, X19
	086 Move X3, X31
	087 Move X21, X0
	088 Move X2, [X8]
	089 Call 0x2D0F824, X0, X1, X2
	090 Compare X20, 0
	091 JumpIfEqual {209}
	092 Move X8, 0x38B000
	093 Move X8, [X8+1904]
	094 Move X0, X20
	095 Move X1, X21
	096 Move W2, W31
	097 Move X3, [X8]
	098 Call 0x21A2534, X0, X1, X2
	099 Move X8, 0x38B000
	100 Move X20, [X19+40]
	101 Move X8, [X8+1928]
	102 Move X0, [X8]
	103 Call 0x1C17F10
	104 Move X8, 0x3D5000
	105 Move X8, [X8+2936]
	106 Move X1, X19
	107 Move X3, X31
	108 Move X21, X0
	109 Move X2, [X8]
	110 Call 0x2D0F824, X0, X1, X2
	111 Compare X20, 0
	112 JumpIfEqual {209}
	113 Move X8, 0x38B000
	114 Move X8, [X8+1912]
	115 Move W2, 1
	116 Move X0, X20
	117 Move X1, X21
	118 Move X3, [X8]
	119 Call 0x21A2534, X0, X1, X2
	120 Move X8, 0x3D5000
	121 Move X20, [X19+40]
	122 Move X8, [X8+2944]
	123 Move X0, [X8]
	124 Call 0x1C17F10
	125 Move X8, 0x3D5000
	126 Move X8, [X8+2920]
	127 Move X1, X19
	128 Move X3, X31
	129 Move X21, X0
	130 Move X2, [X8]
	131 Call 0x2D0F824, X0, X1, X2
	132 Compare X20, 0
	133 JumpIfEqual {209}
	134 Move X8, 0x3D5000
	135 Move X8, [X8+2888]
	136 Move X0, X20
	137 Move X1, X21
	138 Move W2, W31
	139 Move X3, [X8]
	140 Call 0x21A2534, X0, X1, X2
	141 Move X8, 0x38C000
	142 Move X20, [X19+40]
	143 Move X8, [X8+160]
	144 Move X0, [X8]
	145 Call 0x1C17F10
	146 Move X8, 0x3D5000
	147 Move X8, [X8+2928]
	148 Move X1, X19
	149 Move X3, X31
	150 Move X21, X0
	151 Move X2, [X8]
	152 Call 0x2D0F824, X0, X1, X2
	153 Compare X20, 0
	154 JumpIfEqual {209}
	155 Move X8, 0x38C000
	156 Move X8, [X8+152]
	157 Move X0, X20
	158 Move X1, X21
	159 Move W2, W31
	160 Move X3, [X8]
	161 Call 0x21A2534, X0, X1, X2
	162 Move X8, 0x3D0000
	163 Move X20, [X19+40]
	164 Move X8, [X8+2568]
	165 Move X0, [X8]
	166 Call 0x1C17F10
	167 Move X8, 0x3D5000
	168 Move X8, [X8+2896]
	169 Move X1, X19
	170 Move X3, X31
	171 Move X21, X0
	172 Move X2, [X8]
	173 Call 0x2D0F824, X0, X1, X2
	174 Compare X20, 0
	175 JumpIfEqual {209}
	176 Move X8, 0x3D1000
	177 Move X8, [X8+184]
	178 Move X0, X20
	179 Move X1, X21
	180 Move W2, W31
	181 Move X3, [X8]
	182 Call 0x21A2534, X0, X1, X2
	183 Move X8, 0x3D0000
	184 Move X20, [X19+40]
	185 Move X8, [X8+2560]
	186 Move X0, [X8]
	187 Call 0x1C17F10
	188 Move X8, 0x3D5000
	189 Move X8, [X8+2904]
	190 Move X1, X19
	191 Move X3, X31
	192 Move X21, X0
	193 Move X2, [X8]
	194 Call 0x2D0F824, X0, X1, X2
	195 Compare X20, 0
	196 JumpIfEqual {209}
	197 Move X8, 0x3D4000
	198 Move X8, [X8+1304]
	199 Move X0, X20
	200 Move X20, [X31+16]
	201 Move X19, [X31+24]
	202 Move X1, X21
	203 Move X3, [X8]
	204 Move W2, W31
	205 Move X30, [X31+32]
	206 Move X21, [X31+40]
	207 Call 0x21A2534, X0, X1, X2
	208 Return 
	209 Call 0x1C17F20

Method: System.Void UnregisterCallbacksFromTarget(UnityEngine.UIElements.DetachFromPanelEvent evt)

Disassembly:
	0x03D93574 B.PL 0x3D936F0
	0x03D93578 FCMP S9, S1

ISIL:
	001 Move W1, W31

Method: System.Void UnregisterCallbacksFromTarget(System.Boolean unregisterPanelEvents = False)

Disassembly:
	0x03D9357C B.LT 0x3D936F0
	0x03D93580 FCMP S10, S0
	0x03D93584 B.LT 0x3D936F0
	0x03D93588 FADD S0, S0, S2
	0x03D9358C FCMP S10, S0
	0x03D93590 B.PL 0x3D936F0
	0x03D93594 MOV X0, X19
	0x03D93598 MOV V0.16B, V10.16B
	0x03D9359C MOV V1.16B, V9.16B
	0x03D935A0 MOV V2.16B, V8.16B
	0x03D935A4 BL 0x3D937B4
	0x03D935A8 MOV X20, X0
	0x03D935AC CBZ X0, 0x3D935CC
	0x03D935B0 MOV X0, X19
	0x03D935B4 BL 0x3D93428
	0x03D935B8 CBZ X0, 0x3D937AC
	0x03D935BC MOV X1, X31
	0x03D935C0 BL 0x3CFE798
	0x03D935C4 EOR W21, W0, 0x1
	0x03D935C8 B 0x3D935D0
	0x03D935CC MOVZ W21, 0x1
	0x03D935D0 MOV X0, X19
	0x03D935D4 BL 0x3D93428
	0x03D935D8 CBZ X0, 0x3D937AC
	0x03D935DC ADRP X8, 0x3BA000
	0x03D935E0 LDR X0, [X0 + 0x468]
	0x03D935E4 LDR X8, [X8 + 0xAA0]
	0x03D935E8 LDR X1, [X8]
	0x03D935EC BL 0x21B23E0
	0x03D935F0 TBZ X21, 0x0, 0x3D93658
	0x03D935F4 TBZ X0, 0x0, 0x3D93670
	0x03D935F8 LDR X20, [X19 + 0x70]
	0x03D935FC MOV X0, X19
	0x03D93600 BL 0x3D93428
	0x03D93604 CBZ X0, 0x3D937AC
	0x03D93608 CBZ X20, 0x3D937AC
	0x03D9360C ADRP X10, 0x3D4000
	0x03D93610 LDR X8, [X20]
	0x03D93614 LDR X19, [X0 + 0x468]
	0x03D93618 LDR X10, [X10 + 0xBA8]
	0x03D9361C LDRH W9, [X8 + 0x12E]
	0x03D93620 LDR X1, [X10]
	0x03D93624 CBZ X9, 0x3D93648
	0x03D93628 LDR X10, [X8 + 0xB0]
	0x03D9362C ADD X10, X10, 0x8
	0x03D93630 LDUR X11, [X10 - 0x8]
	0x03D93634 CMP X11, X1
	0x03D93638 B.EQ 0x3D93764
	0x03D9363C SUBS X9, X9, 0x1
	0x03D93640 ADD X10, X10, 0x10
	0x03D93644 B.NE 0x3D93630
	0x03D93648 MOV X0, X20
	0x03D9364C MOV W2, W31
	0x03D93650 BL 0x1C5C788
	0x03D93654 B 0x3D93770
	0x03D93658 TBZ X0, 0x0, 0x3D93708
	0x03D9365C MOV X0, X19
	0x03D93660 BL 0x3D93428
	0x03D93664 CBZ X0, 0x3D937AC
	0x03D93668 LDR X21, [X0 + 0x468]
	0x03D9366C B 0x3D93738
	0x03D93670 CBZ X20, 0x3D936F0
	0x03D93674 ADRP X8, 0x361000
	0x03D93678 LDR X19, [X19 + 0x70]
	0x03D9367C LDR X8, [X8 + 0xE58]
	0x03D93680 MOVZ W1, 0x1
	0x03D93684 LDR X0, [X8]
	0x03D93688 BL 0x1C16D6C
	0x03D9368C CBZ X0, 0x3D937AC
	0x03D93690 LDR W8, [X0 + 0x18]
	0x03D93694 MOV X21, X0
	0x03D93698 CBZ W8, 0x3D937B0
	0x03D9369C LDR W8, [X20 + 0x24]
	0x03D936A0 STR W8, [X21 + 0x20]
	0x03D936A4 CBZ X19, 0x3D937AC
	0x03D936A8 ADRP X10, 0x3D4000
	0x03D936AC LDR X8, [X19]
	0x03D936B0 LDR X10, [X10 + 0xBA8]
	0x03D936B4 LDRH W9, [X8 + 0x12E]
	0x03D936B8 LDR X1, [X10]
	0x03D936BC CBZ X9, 0x3D936E0
	0x03D936C0 LDR X10, [X8 + 0xB0]
	0x03D936C4 ADD X10, X10, 0x8
	0x03D936C8 LDUR X11, [X10 - 0x8]
	0x03D936CC CMP X11, X1
	0x03D936D0 B.EQ 0x3D93780
	0x03D936D4 SUBS X9, X9, 0x1
	0x03D936D8 ADD X10, X10, 0x10
	0x03D936DC B.NE 0x3D936C8
	0x03D936E0 MOV X0, X19
	0x03D936E4 MOV W2, W31
	0x03D936E8 BL 0x1C5C788
	0x03D936EC B 0x3D9378C
	0x03D936F0 LDP X20, X19, [X31 + 0x30]
	0x03D936F4 LDP X30, X21, [X31 + 0x20]
	0x03D936F8 LDP D9, D8, [X31 + 0x10]
	0x03D936FC MOV W0, W31
	0x03D93700 LDR V10, [X31], #0x40
	0x03D93704 RET
	0x03D93708 ADRP X8, 0x361000
	0x03D9370C LDR X8, [X8 + 0xE58]
	0x03D93710 MOVZ W1, 0x1
	0x03D93714 LDR X0, [X8]
	0x03D93718 BL 0x1C16D6C
	0x03D9371C CBZ X20, 0x3D937AC
	0x03D93720 MOV X21, X0
	0x03D93724 CBZ X0, 0x3D937AC
	0x03D93728 LDR W8, [X21 + 0x18]
	0x03D9372C CBZ W8, 0x3D937B0
	0x03D93730 LDR W8, [X20 + 0x24]
	0x03D93734 STR W8, [X21 + 0x20]
	0x03D93738 MOV X0, X19
	0x03D9373C BL 0x3D93428
	0x03D93740 CBZ X0, 0x3D937AC
	0x03D93744 MOV X1, X20
	0x03D93748 MOV X2, X21
	0x03D9374C LDP X20, X19, [X31 + 0x30]
	0x03D93750 LDP X30, X21, [X31 + 0x20]
	0x03D93754 LDP D9, D8, [X31 + 0x10]
	0x03D93758 MOV X3, X31
	0x03D9375C LDR V10, [X31], #0x40
	0x03D93760 B 0x3CFE7A8
	0x03D93764 LDRSW X9, [X10]
	0x03D93768 ADD X8, X8, X9, 0x4, LSL
	0x03D9376C ADD X0, X8, 0x138
	0x03D93770 LDP X3, X2, [X0]
	0x03D93774 MOV X0, X20
	0x03D93778 MOV X1, X19
	0x03D9377C B 0x3D93798
	0x03D93780 LDRSW X9, [X10]
	0x03D93784 ADD X8, X8, X9, 0x4, LSL
	0x03D93788 ADD X0, X8, 0x138
	0x03D9378C LDP X3, X2, [X0]
	0x03D93790 MOV X0, X19
	0x03D93794 MOV X1, X21
	0x03D93798 LDP X20, X19, [X31 + 0x30]
	0x03D9379C LDP X30, X21, [X31 + 0x20]
	0x03D937A0 LDP D9, D8, [X31 + 0x10]
	0x03D937A4 LDR V10, [X31], #0x40
	0x03D937A8 BR X3
	0x03D937AC BL 0x1C16F20
	0x03D937B0 BL 0x1C16F28
	0x03D937B4 STP D9, D8, [X31 - 0x40]!
	0x03D937B8 STP X30, X23, [X31 + 0x10]
	0x03D937BC STP X22, X21, [X31 + 0x20]
	0x03D937C0 STP X20, X19, [X31 + 0x30]
	0x03D937C4 ADRP X20, 0x654000
	0x03D937C8 LDRB W8, [X20 + 0xE78]
	0x03D937CC MOV V8.16B, V1.16B
	0x03D937D0 MOV V9.16B, V0.16B
	0x03D937D4 MOV X19, X0
	0x03D937D8 TBNZ X8, 0x0, 0x3D93814
	0x03D937DC ADRP X0, 0x360000
	0x03D937E0 LDR X0, [X0 + 0xE00]
	0x03D937E4 BL 0x1C16CF4
	0x03D937E8 ADRP X0, 0x38A000
	0x03D937EC LDR X0, [X0 + 0xF20]
	0x03D937F0 BL 0x1C16CF4
	0x03D937F4 ADRP X0, 0x38A000
	0x03D937F8 LDR X0, [X0 + 0xF28]
	0x03D937FC BL 0x1C16CF4
	0x03D93800 ADRP X0, 0x360000
	0x03D93804 LDR X0, [X0 + 0xE18]
	0x03D93808 BL 0x1C16CF4
	0x03D9380C MOVZ W8, 0x1
	0x03D93810 STRB W8, [X20 + 0xE78]
	0x03D93814 MOV X0, X19
	0x03D93818 BL 0x3D93428
	0x03D9381C CBZ X0, 0x3D93A5C
	0x03D93820 MOV X1, X31
	0x03D93824 BL 0x3CFEC08
	0x03D93828 CBZ X0, 0x3D93A5C
	0x03D9382C ADRP X10, 0x38A000
	0x03D93830 LDR X8, [X0]
	0x03D93834 LDR X10, [X10 + 0xF20]
	0x03D93838 MOV X19, X0
	0x03D9383C LDRH W9, [X8 + 0x12E]
	0x03D93840 LDR X1, [X10]
	0x03D93844 CBZ X9, 0x3D93868
	0x03D93848 LDR X10, [X8 + 0xB0]
	0x03D9384C ADD X10, X10, 0x8
	0x03D93850 LDUR X11, [X10 - 0x8]
	0x03D93854 CMP X11, X1
	0x03D93858 B.EQ 0x3D93878
	0x03D9385C SUBS X9, X9, 0x1
	0x03D93860 ADD X10, X10, 0x10
	0x03D93864 B.NE 0x3D93850
	0x03D93868 MOV X0, X19
	0x03D9386C MOV W2, W31
	0x03D93870 BL 0x1C5C788
	0x03D93874 B 0x3D93884
	0x03D93878 LDRSW X9, [X10]
	0x03D9387C ADD X8, X8, X9, 0x4, LSL
	0x03D93880 ADD X0, X8, 0x138
	0x03D93884 LDP X8, X1, [X0]
	0x03D93888 ADRP X22, 0x360000
	0x03D9388C LDR X22, [X22 + 0xE00]
	0x03D93890 MOV X0, X19
	0x03D93894 BLR X8
	0x03D93898 MOV X19, X0
	0x03D9389C CBZ X0, 0x3D93A60
	0x03D938A0 ADRP X20, 0x360000
	0x03D938A4 ADRP X23, 0x38A000
	0x03D938A8 LDR X20, [X20 + 0xE18]
	0x03D938AC LDR X23, [X23 + 0xF28]
	0x03D938B0 LDR X8, [X19]
	0x03D938B4 LDR X1, [X20]
	0x03D938B8 LDRH W9, [X8 + 0x12E]
	0x03D938BC CBZ X9, 0x3D938E0
	0x03D938C0 LDR X10, [X8 + 0xB0]
	0x03D938C4 ADD X10, X10, 0x8
	0x03D938C8 LDUR X11, [X10 - 0x8]
	0x03D938CC CMP X11, X1
	0x03D938D0 B.EQ 0x3D938F0
	0x03D938D4 SUBS X9, X9, 0x1
	0x03D938D8 ADD X10, X10, 0x10
	0x03D938DC B.NE 0x3D938C8
	0x03D938E0 MOV X0, X19
	0x03D938E4 MOV W2, W31
	0x03D938E8 BL 0x1C5C788
	0x03D938EC B 0x3D938FC
	0x03D938F0 LDRSW X9, [X10]
	0x03D938F4 ADD X8, X8, X9, 0x4, LSL
	0x03D938F8 ADD X0, X8, 0x138
	0x03D938FC LDP X8, X1, [X0]
	0x03D93900 MOV X0, X19
	0x03D93904 BLR X8
	0x03D93908 TBZ X0, 0x0, 0x3D939C0
	0x03D9390C LDR X8, [X19]
	0x03D93910 LDR X1, [X23]
	0x03D93914 LDRH W9, [X8 + 0x12E]
	0x03D93918 CBZ X9, 0x3D9393C
	0x03D9391C LDR X10, [X8 + 0xB0]
	0x03D93920 ADD X10, X10, 0x8
	0x03D93924 LDUR X11, [X10 - 0x8]
	0x03D93928 CMP X11, X1
	0x03D9392C B.EQ 0x3D9394C
	0x03D93930 SUBS X9, X9, 0x1
	0x03D93934 ADD X10, X10, 0x10
	0x03D93938 B.NE 0x3D93924
	0x03D9393C MOV X0, X19
	0x03D93940 MOV W2, W31
	0x03D93944 BL 0x1C5C788
	0x03D93948 B 0x3D93958
	0x03D9394C LDRSW X9, [X10]
	0x03D93950 ADD X8, X8, X9, 0x4, LSL
	0x03D93954 ADD X0, X8, 0x138
	0x03D93958 LDP X8, X1, [X0]
	0x03D9395C MOV X0, X19
	0x03D93960 BLR X8
	0x03D93964 MOV X21, X0
	0x03D93968 CBZ X0, 0x3D93A54
	0x03D9396C LDR X8, [X21]
	0x03D93970 LDP X9, X1, [X8 + 0x178]
	0x03D93974 MOV X0, X21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x655000
	009 Move X23, 0x38B000
	010 Move X22, 0x3D5000
	011 Move W8, [X21+3681]
	012 Move X23, [X23+1920]
	013 Move X22, [X22+2912]
	014 Move W20, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {94}
	020 Move X0, 0x3D2000
	021 Move X0, [X0+232]
	022 Call 0x1C17CF4
	023 Move X0, 0x3D2000
	024 Move X0, [X0+240]
	025 Call 0x1C17CF4
	026 Move X0, 0x3D0000
	027 Move X0, [X0+2608]
	028 Call 0x1C17CF4
	029 Move X0, 0x3D0000
	030 Move X0, [X0+2616]
	031 Call 0x1C17CF4
	032 Move X0, 0x38B000
	033 Move X0, [X0+1936]
	034 Call 0x1C17CF4
	035 Move X0, 0x3D5000
	036 Move X0, [X0+2952]
	037 Call 0x1C17CF4
	038 Move X0, 0x38C000
	039 Move X0, [X0+3368]
	040 Call 0x1C17CF4
	041 Move X0, 0x38B000
	042 Move X0, [X0+1944]
	043 Call 0x1C17CF4
	044 Move X0, 0x3D5000
	045 Move X0, [X0+2896]
	046 Call 0x1C17CF4
	047 Move X0, 0x3D5000
	048 Move X0, [X0+2904]
	049 Call 0x1C17CF4
	050 Move X0, 0x3D5000
	051 Move X0, [X0+2912]
	052 Call 0x1C17CF4
	053 Move X0, 0x3D5000
	054 Move X0, [X0+2920]
	055 Call 0x1C17CF4
	056 Move X0, 0x3D5000
	057 Move X0, [X0+2928]
	058 Call 0x1C17CF4
	059 Move X0, 0x3D5000
	060 Move X0, [X0+2936]
	061 Call 0x1C17CF4
	062 Move X0, 0x3D5000
	063 Move X0, [X0+2872]
	064 Call 0x1C17CF4
	065 Move X0, 0x3D5000
	066 Move X0, [X0+2880]
	067 Call 0x1C17CF4
	068 Move X0, 0x38B000
	069 Move X0, [X0+3440]
	070 Call 0x1C17CF4
	071 Move X0, 0x3D0000
	072 Move X0, [X0+2560]
	073 Call 0x1C17CF4
	074 Move X0, 0x3D5000
	075 Move X0, [X0+2944]
	076 Call 0x1C17CF4
	077 Move X0, 0x38C000
	078 Move X0, [X0+160]
	079 Call 0x1C17CF4
	080 Move X0, 0x38B000
	081 Move X0, [X0+1920]
	082 Call 0x1C17CF4
	083 Move X0, 0x38B000
	084 Move X0, [X0+3448]
	085 Call 0x1C17CF4
	086 Move X0, 0x3D0000
	087 Move X0, [X0+2568]
	088 Call 0x1C17CF4
	089 Move X0, 0x38B000
	090 Move X0, [X0+1928]
	091 Call 0x1C17CF4
	092 Move W8, 1
	093 Move [X21+3681], W8
	094 Move [X19+16], W31
	095 Move X0, [X23]
	096 Move X21, [X19+40]
	097 Call 0x1C17F10
	098 Move X2, [X22]
	099 Move X1, X19
	100 Move X3, X31
	101 Move X22, X0
	102 Call 0x2D0F824, X0, X1, X2
	103 Compare X21, 0
	104 JumpIfEqual {279}
	105 Move X8, 0x38B000
	106 Move X8, [X8+1936]
	107 Move X23, 0x38B000
	108 Move X24, 0x3D5000
	109 Move X0, X21
	110 Move X3, [X8]
	111 Move X23, [X23+1928]
	112 Move X24, [X24+2936]
	113 Move X1, X22
	114 Move W2, W31
	115 Call 0x21A28B4, X0, X1, X2
	116 Move X0, [X23]
	117 Move X21, [X19+40]
	118 Call 0x1C17F10
	119 Move X2, [X24]
	120 Move X1, X19
	121 Move X3, X31
	122 Move X22, X0
	123 Call 0x2D0F824, X0, X1, X2
	124 Compare X21, 0
	125 JumpIfEqual {279}
	126 Move X8, 0x38B000
	127 Move X8, [X8+1944]
	128 Move X23, 0x3D5000
	129 Move X24, 0x3D5000
	130 Move W2, 1
	131 Move X3, [X8]
	132 Move X23, [X23+2944]
	133 Move X24, [X24+2920]
	134 Move X0, X21
	135 Move X1, X22
	136 Call 0x21A28B4, X0, X1, X2
	137 Move X0, [X23]
	138 Move X21, [X19+40]
	139 Call 0x1C17F10
	140 Move X2, [X24]
	141 Move X1, X19
	142 Move X3, X31
	143 Move X22, X0
	144 Call 0x2D0F824, X0, X1, X2
	145 Compare X21, 0
	146 JumpIfEqual {279}
	147 Move X8, 0x3D5000
	148 Move X8, [X8+2952]
	149 Move X23, 0x38C000
	150 Move X24, 0x3D5000
	151 Move X0, X21
	152 Move X3, [X8]
	153 Move X23, [X23+160]
	154 Move X24, [X24+2928]
	155 Move X1, X22
	156 Move W2, W31
	157 Call 0x21A28B4, X0, X1, X2
	158 Move X0, [X23]
	159 Move X21, [X19+40]
	160 Call 0x1C17F10
	161 Move X2, [X24]
	162 Move X1, X19
	163 Move X3, X31
	164 Move X22, X0
	165 Call 0x2D0F824, X0, X1, X2
	166 Compare X21, 0
	167 JumpIfEqual {279}
	168 Move X8, 0x38C000
	169 Move X8, [X8+3368]
	170 Move X23, 0x3D0000
	171 Move X24, 0x3D5000
	172 Move X0, X21
	173 Move X3, [X8]
	174 Move X23, [X23+2568]
	175 Move X24, [X24+2896]
	176 Move X1, X22
	177 Move W2, W31
	178 Call 0x21A28B4, X0, X1, X2
	179 Move X0, [X23]
	180 Move X21, [X19+40]
	181 Call 0x1C17F10
	182 Move X2, [X24]
	183 Move X1, X19
	184 Move X3, X31
	185 Move X22, X0
	186 Call 0x2D0F824, X0, X1, X2
	187 Compare X21, 0
	188 JumpIfEqual {279}
	189 Move X8, 0x3D0000
	190 Move X8, [X8+2608]
	191 Move X23, 0x3D0000
	192 Move X24, 0x3D5000
	193 Move X0, X21
	194 Move X3, [X8]
	195 Move X23, [X23+2560]
	196 Move X24, [X24+2904]
	197 Move X1, X22
	198 Move W2, W31
	199 Call 0x21A28B4, X0, X1, X2
	200 Move X0, [X23]
	201 Move X21, [X19+40]
	202 Call 0x1C17F10
	203 Move X2, [X24]
	204 Move X1, X19
	205 Move X3, X31
	206 Move X22, X0
	207 Call 0x2D0F824, X0, X1, X2
	208 Compare X21, 0
	209 JumpIfEqual {279}
	210 Move X8, 0x3D0000
	211 Move X8, [X8+2616]
	212 Move X0, X21
	213 Move X1, X22
	214 Move W2, W31
	215 Move X3, [X8]
	216 Call 0x21A28B4, X0, X1, X2
	217 Move TEMP, X20
	218 And TEMP, TEMP, 1
	219 Compare TEMP, 1
	220 JumpIfNotEqual {271}
	221 Move X8, 0x38B000
	222 Move X20, [X19+40]
	223 Move X8, [X8+3440]
	224 Move X0, [X8]
	225 Call 0x1C17F10
	226 Move X8, 0x3D5000
	227 Move X8, [X8+2872]
	228 Move X1, X19
	229 Move X3, X31
	230 Move X21, X0
	231 Move X2, [X8]
	232 Call 0x2D0F824, X0, X1, X2
	233 Compare X20, 0
	234 JumpIfEqual {279}
	235 Move X8, 0x3D2000
	236 Move X8, [X8+232]
	237 Move X0, X20
	238 Move X1, X21
	239 Move W2, W31
	240 Move X3, [X8]
	241 Call 0x21A28B4, X0, X1, X2
	242 Move X8, 0x38B000
	243 Move X20, [X19+40]
	244 Move X8, [X8+3448]
	245 Move X0, [X8]
	246 Call 0x1C17F10
	247 Move X8, 0x3D5000
	248 Move X8, [X8+2880]
	249 Move X1, X19
	250 Move X3, X31
	251 Move X21, X0
	252 Move X2, [X8]
	253 Call 0x2D0F824, X0, X1, X2
	254 Compare X20, 0
	255 JumpIfEqual {279}
	256 Move X8, 0x3D2000
	257 Move X8, [X8+240]
	258 Move X0, X20
	259 Move X1, X21
	260 Move X20, [X31+48]
	261 Move X19, [X31+56]
	262 Move X3, [X8]
	263 Move X22, [X31+32]
	264 Move X21, [X31+40]
	265 Move X24, [X31+16]
	266 Move X23, [X31+24]
	267 Move W2, W31
	268 Move X30, [X31+64]
	269 Call 0x21A28B4, X0, X1, X2
	270 Return 
	271 Move X20, [X31+48]
	272 Move X19, [X31+56]
	273 Move X22, [X31+32]
	274 Move X21, [X31+40]
	275 Move X24, [X31+16]
	276 Move X23, [X31+24]
	277 Move X30, [X31+64]
	278 Return 
	279 Call 0x1C17F20

Method: System.Boolean CanStartDrag(UnityEngine.Vector3 pointerPosition)

Disassembly:
	

ISIL:
No ISIL was generated
Method: UnityEngine.UIElements.StartDragArgs StartDrag(UnityEngine.Vector3 pointerPosition)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void UpdateDrag(UnityEngine.Vector3 pointerPosition)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void OnDrop(UnityEngine.Vector3 pointerPosition)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void ClearDragAndDropUI(System.Boolean dragCancelled)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void OnPointerDownEvent(UnityEngine.UIElements.PointerDownEvent evt)

Disassembly:
	0x03D93978 BLR X9
	0x03D9397C CBZ X0, 0x3D93A58
	0x03D93980 MOV X1, X31
	0x03D93984 BL 0x3DEDC10
	0x03D93988 FADD S3, S1, S3
	0x03D9398C FCMP S8, S3
	0x03D93990 B.PL 0x3D938B0
	0x03D93994 FCMP S8, S1
	0x03D93998 B.LT 0x3D938B0
	0x03D9399C FCMP S9, S0
	0x03D939A0 B.LT 0x3D938B0
	0x03D939A4 FADD S0, S0, S2
	0x03D939A8 FCMP S9, S0
	0x03D939AC B.PL 0x3D938B0
	0x03D939B0 MOV X20, X31
	0x03D939B4 MOVZ W23, 0x5
	0x03D939B8 CBNZ X19, 0x3D939D0
	0x03D939BC B 0x3D93A28
	0x03D939C0 MOV X20, X31
	0x03D939C4 MOV X21, X31
	0x03D939C8 MOVZ W23, 0x6
	0x03D939CC CBZ X19, 0x3D93A28
	0x03D939D0 LDR X8, [X19]
	0x03D939D4 LDR X1, [X22]
	0x03D939D8 LDRH W9, [X8 + 0x12E]
	0x03D939DC CBZ X9, 0x3D93A00
	0x03D939E0 LDR X10, [X8 + 0xB0]
	0x03D939E4 ADD X10, X10, 0x8
	0x03D939E8 LDUR X11, [X10 - 0x8]
	0x03D939EC CMP X11, X1
	0x03D939F0 B.EQ 0x3D93A10
	0x03D939F4 SUBS X9, X9, 0x1
	0x03D939F8 ADD X10, X10, 0x10
	0x03D939FC B.NE 0x3D939E8
	0x03D93A00 MOV X0, X19
	0x03D93A04 MOV W2, W31
	0x03D93A08 BL 0x1C5C788
	0x03D93A0C B 0x3D93A1C
	0x03D93A10 LDRSW X9, [X10]
	0x03D93A14 ADD X8, X8, X9, 0x4, LSL
	0x03D93A18 ADD X0, X8, 0x138
	0x03D93A1C LDP X8, X1, [X0]
	0x03D93A20 MOV X0, X19
	0x03D93A24 BLR X8
	0x03D93A28 CBNZ X20, 0x3D93A64
	0x03D93A2C CMP W23, 0x6
	0x03D93A30 B.EQ 0x3D93A38
	0x03D93A34 CBNZ W23, 0x3D93A3C
	0x03D93A38 MOV X21, X31
	0x03D93A3C MOV X0, X21
	0x03D93A40 LDP X20, X19, [X31 + 0x30]
	0x03D93A44 LDP X22, X21, [X31 + 0x20]
	0x03D93A48 LDP X30, X23, [X31 + 0x10]
	0x03D93A4C LDP D9, D8, [X31], #0x40
	0x03D93A50 RET
	0x03D93A54 BL 0x1C16F20
	0x03D93A58 BL 0x1C16F20
	0x03D93A5C BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x655000
	006 Move W8, [X21+3682]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x38C000
	014 Move X0, [X0+3304]
	015 Call 0x1C17CF4
	016 Move X0, 0x3D1000
	017 Move X0, [X0+2984]
	018 Call 0x1C17CF4
	019 Move X0, 0x389000
	020 Move X0, [X0+2200]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3682], W8
	024 Compare X20, 0
	025 JumpIfEqual {70}
	026 Move W8, [X20+172]
	027 Compare W8, 0
	028 JumpIfEqual {30}
	029 Move [X19+20], W31
	030 Move X8, [X20+72]
	031 Compare X8, 0
	032 JumpIfEqual {44}
	033 Move X9, 0x389000
	034 Move X9, [X9+2200]
	035 Move X10, [X8]
	036 Move X9, [X9]
	037 Move W12, [X10+304]
	038 Move W11, [X9+304]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X10, [X10+200]
	041 Add X10, X10, X11
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, [X19]
	045 Move S0, [X20+180]
	046 Move S1, [X20+184]
	047 Move V2, [X20+188]
	048 Move X0, X19
	049 Move X9, [X8+408]
	050 Move X1, [X8+416]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {62}
	056 Move W8, 1
	057 Move [X19+20], W8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 Move V1, [X20+188]
	060 Move [X19+24], D0
	061 Move [X19+32], S1
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Return 
	067 Move W8, [X8+16]
	068 Compare W8, 0
	069 JumpIfNotEqual {29}
	070 Call 0x1C17F20

Method: System.Void OnPointerUpEvent(UnityEngine.UIElements.PointerUpEvent evt)

Disassembly:
	0x03D93A60 BL 0x1C16F20
	0x03D93A64 MOV X0, X20
	0x03D93A68 BL 0x1C16F18
	0x03D93A6C B 0x3D93A84
	0x03D93A70 B 0x3D93A84
	0x03D93A74 B 0x3D93A84
	0x03D93A78 B 0x3D93A84
	0x03D93A7C B 0x3D93A84
	0x03D93A80 B 0x3D93A84
	0x03D93A84 MOV X21, X0
	0x03D93A88 CMP W1, 0x1
	0x03D93A8C B.NE 0x3D93AB0
	0x03D93A90 MOV X0, X21
	0x03D93A94 BL 0x3EB1AD0
	0x03D93A98 LDR X20, [X0]
	0x03D93A9C BL 0x3EB1AE0
	0x03D93AA0 MOV W23, W31
	0x03D93AA4 MOV X21, X31
	0x03D93AA8 CBNZ X19, 0x3D939D0
	0x03D93AAC B 0x3D93A28
	0x03D93AB0 MOV X20, X31
	0x03D93AB4 B 0x3D93ABC
	0x03D93AB8 MOV X21, X0
	0x03D93ABC CBZ X19, 0x3D93B18
	0x03D93AC0 LDR X8, [X19]
	0x03D93AC4 LDR X1, [X22]
	0x03D93AC8 LDRH W9, [X8 + 0x12E]
	0x03D93ACC CBZ X9, 0x3D93AF0
	0x03D93AD0 LDR X10, [X8 + 0xB0]
	0x03D93AD4 ADD X10, X10, 0x8
	0x03D93AD8 LDUR X11, [X10 - 0x8]
	0x03D93ADC CMP X11, X1
	0x03D93AE0 B.EQ 0x3D93B00
	0x03D93AE4 SUBS X9, X9, 0x1
	0x03D93AE8 ADD X10, X10, 0x10
	0x03D93AEC B.NE 0x3D93AD8
	0x03D93AF0 MOV X0, X19
	0x03D93AF4 MOV W2, W31
	0x03D93AF8 BL 0x1C5C788
	0x03D93AFC B 0x3D93B0C
	0x03D93B00 LDRSW X9, [X10]
	0x03D93B04 ADD X8, X8, X9, 0x4, LSL
	0x03D93B08 ADD X0, X8, 0x138
	0x03D93B0C LDP X8, X1, [X0]
	0x03D93B10 MOV X0, X19
	0x03D93B14 BLR X8
	0x03D93B18 CBNZ X20, 0x3D93B24
	0x03D93B1C MOV X0, X21
	0x03D93B20 BL 0x1D2C690
	0x03D93B24 MOV X0, X20
	0x03D93B28 BL 0x1C16F18
	0x03D93B2C BL 0x1990590
	0x03D93B30 SUB X31, X31, 0xD0
	0x03D93B34 STR D10, [X31 + 0x80]
	0x03D93B38 STP D9, D8, [X31 + 0x88]
	0x03D93B3C STR X30, [X31 + 0x98]
	0x03D93B40 STP X24, X23, [X31 + 0xA0]
	0x03D93B44 STP X22, X21, [X31 + 0xB0]
	0x03D93B48 STP X20, X19, [X31 + 0xC0]
	0x03D93B4C ADRP X21, 0x654000
	0x03D93B50 LDRB W9, [X21 + 0xE6B]
	0x03D93B54 MOV V8.16B, V2.16B
	0x03D93B58 MOV V9.16B, V1.16B
	0x03D93B5C MOV V10.16B, V0.16B
	0x03D93B60 MOV X20, X0
	0x03D93B64 MOV X19, X8
	0x03D93B68 TBNZ X9, 0x0, 0x3D93BB0
	0x03D93B6C ADRP X0, 0x3BA000
	0x03D93B70 LDR X0, [X0 + 0xAA0]
	0x03D93B74 BL 0x1C16CF4
	0x03D93B78 ADRP X0, 0x3A2000
	0x03D93B7C LDR X0, [X0 + 0x5B0]
	0x03D93B80 BL 0x1C16CF4
	0x03D93B84 ADRP X0, 0x38B000
	0x03D93B88 LDR X0, [X0 + 0xF38]
	0x03D93B8C BL 0x1C16CF4
	0x03D93B90 ADRP X0, 0x3D4000
	0x03D93B94 LDR X0, [X0 + 0xBA8]
	0x03D93B98 BL 0x1C16CF4
	0x03D93B9C ADRP X0, 0x3D4000
	0x03D93BA0 LDR X0, [X0 + 0xB28]
	0x03D93BA4 BL 0x1C16CF4
	0x03D93BA8 MOVZ W8, 0x1
	0x03D93BAC STRB W8, [X21 + 0xE6B]
	0x03D93BB0 MOV X0, X20
	0x03D93BB4 MOV V0.16B, V10.16B
	0x03D93BB8 MOV V1.16B, V9.16B
	0x03D93BBC MOV V2.16B, V8.16B
	0x03D93BC0 BL 0x3D937B4
	0x03D93BC4 MOV X21, X0
	0x03D93BC8 MOV X0, X20
	0x03D93BCC BL 0x3D93428
	0x03D93BD0 CBZ X0, 0x3D93E04
	0x03D93BD4 CBZ X21, 0x3D93C10
	0x03D93BD8 ADRP X8, 0x3A2000
	0x03D93BDC LDR X8, [X8 + 0x5B0]
	0x03D93BE0 LDR X0, [X0 + 0x470]
	0x03D93BE4 LDR W1, [X21 + 0x20]
	0x03D93BE8 LDR X2, [X8]
	0x03D93BEC BL 0x21BA3B8
	0x03D93BF0 TBNZ X0, 0x0, 0x3D93C28
	0x03D93BF4 MOV X0, X20
	0x03D93BF8 BL 0x3D93428
	0x03D93BFC CBZ X0, 0x3D93E04
	0x03D93C00 LDR W1, [X21 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x655000
	006 Move W8, [X21+3683]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x3D5000
	014 Move X0, [X0+2960]
	015 Call 0x1C17CF4
	016 Move X0, 0x38C000
	017 Move X0, [X0+3360]
	018 Call 0x1C17CF4
	019 Move X0, 0x3D5000
	020 Move X0, [X0+2968]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3683], W8
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move X9, [X8+392]
	027 Move X1, [X8+400]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {42}
	033 Move X8, [X19]
	034 Move X0, X19
	035 Move X9, [X8+376]
	036 Move X1, [X8+384]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {79}
	042 Move W8, [X19+20]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Compare X20, 0
	045 JumpIfEqual {128}
	046 Move S0, [X20+180]
	047 Move S1, [X20+184]
	048 Move X0, X19
	049 Call DragEventsProcessor.GetDropTarget, X0, X1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 Compare X21, 0
	053 JumpIfEqual {128}
	054 Move X8, [X21]
	055 Move S1, [X20+184]
	056 Move S2, [X20+188]
	057 Move V0, [X20+180]
	058 Move X0, X21
	059 Move X9, [X8+440]
	060 Move X1, [X8+448]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X8, [X21]
	063 Move S0, [X20+180]
	064 Move S1, [X20+184]
	065 Move V2, [X20+188]
	066 Move X0, X21
	067 Move X9, [X8+456]
	068 Move X1, [X8+464]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X8, [X21]
	071 Move X0, X21
	072 Move W1, W31
	073 Move X9, [X8+472]
	074 Move X2, [X8+480]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X0, X20
	077 Move X1, X31
	078 Call EventBase.StopPropagation, X0
	079 Compare X20, 0
	080 JumpIfEqual {128}
	081 Move X0, [X19+40]
	082 Move W1, [X20+156]
	083 Move X2, X31
	084 Call PointerCaptureHelper.ReleasePointer, X0, X1
	085 Move X8, [X19]
	086 Move W9, [X19+20]
	087 Move X0, X19
	088 Move X10, [X8+472]
	089 Move X2, [X8+480]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CSET not yet implemented."
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X0, X19
	094 Call DragEventsProcessor.get_dragAndDrop, X0
	095 Compare X0, 0
	096 JumpIfEqual {128}
	097 Move X10, 0x3D5000
	098 Move X8, [X0]
	099 Move X10, [X10+2960]
	100 Move X20, X0
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Move X1, [X10]
	103 Compare X9, 0
	104 JumpIfEqual {111}
	105 Move X10, [X8+176]
	106 Add X10, X10, 8
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Subtract X9, X9, 1
	110 Add X10, X10, 16
	111 Move W2, 3
	112 Move X0, X20
	113 Call 0x1C5D788
	114 Move W9, [X10]
	115 Add W9, W9, 3
	116 Add X8, X8, W9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X20
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move [X19+20], W31
	123 Move X20, [X31+16]
	124 Move X19, [X31+24]
	125 Move X30, [X31+32]
	126 Move X21, [X31+40]
	127 Return 
	128 Call 0x1C17F20

Method: System.Void OnPointerLeaveEvent(UnityEngine.UIElements.PointerLeaveEvent evt)

Disassembly:
	0x03D93CEC CMP X11, X1
	0x03D93CF0 B.EQ 0x3D93D10
	0x03D93CF4 SUBS X9, X9, 0x1
	0x03D93CF8 ADD X10, X10, 0x10

ISIL:
	001 Move X8, [X0]
	002 Move W1, W31
	003 Move X3, [X8+472]
	004 Move X2, [X8+480]
	005 CallNoReturn X3

Method: System.Void OnPointerCancelEvent(UnityEngine.UIElements.PointerCancelEvent evt)

Disassembly:
	0x03D93CFC B.NE 0x3D93CE8
	0x03D93D00 MOVZ W2, 0x6
	0x03D93D04 MOV X0, X23
	0x03D93D08 BL 0x1C5C788
	0x03D93D0C B 0x3D93D20
	0x03D93D10 LDR W9, [X10]
	0x03D93D14 ADD W9, W9, 0x6
	0x03D93D18 ADD X8, X8, W9, 0x4, SXTW
	0x03D93D1C ADD X0, X8, 0x138
	0x03D93D20 LDP X8, X1, [X0]
	0x03D93D24 MOV X0, X23
	0x03D93D28 BLR X8
	0x03D93D2C LDP V0, V1, [X31 + 0x60]
	0x03D93D30 STP V0, V1, [X31 + 0x40]
	0x03D93D34 CBZ X22, 0x3D93E04
	0x03D93D38 LDP V0, V1, [X31 + 0x40]
	0x03D93D3C ADRP X23, 0x3D4000
	0x03D93D40 LDR X23, [X23 + 0xB28]
	0x03D93D44 MOV X2, X0
	0x03D93D48 ADD X8, X31, 0x20
	0x03D93D4C ADD X3, X31, 0x0
	0x03D93D50 MOV X0, X22
	0x03D93D54 MOV X1, X21
	0x03D93D58 MOV X4, X31
	0x03D93D5C STP V0, V1, [X31]
	0x03D93D60 BL 0x3CFE844
	0x03D93D64 LDP V0, V1, [X31 + 0x20]
	0x03D93D68 MOV X0, X20
	0x03D93D6C STP V0, V1, [X31 + 0x60]
	0x03D93D70 BL 0x3D93428
	0x03D93D74 LDR X1, [X23]
	0x03D93D78 MOV X2, X0
	0x03D93D7C ADD X0, X31, 0x60
	0x03D93D80 BL 0x3D93398
	0x03D93D84 LDP V1, V0, [X31 + 0x60]
	0x03D93D88 LDP X22, X21, [X31 + 0xB0]
	0x03D93D8C LDP X24, X23, [X31 + 0xA0]
	0x03D93D90 LDR X30, [X31 + 0x98]
	0x03D93D94 STP V1, V0, [X19]
	0x03D93D98 LDP X20, X19, [X31 + 0xC0]
	0x03D93D9C LDP D9, D8, [X31 + 0x88]
	0x03D93DA0 LDR V10, [X31 + 0x80]
	0x03D93DA4 ADD X31, X31, 0xD0
	0x03D93DA8 RET
	0x03D93DAC ADRP X8, 0x38B000
	0x03D93DB0 LDR X8, [X8 + 0xF38]
	0x03D93DB4 LDR X22, [X8]
	0x03D93DB8 LDR X8, [X22 + 0x38]
	0x03D93DBC CBNZ X8, 0x3D93DCC
	0x03D93DC0 MOV X0, X22
	0x03D93DC4 BL 0x1C5C6E0
	0x03D93DC8 LDR X8, [X22 + 0x38]
	0x03D93DCC LDR X0, [X8 + 0x10]
	0x03D93DD0 LDRB W8, [X0 + 0x135]
	0x03D93DD4 TBNZ X8, 0x0, 0x3D93DDC
	0x03D93DD8 BL 0x1C5C684
	0x03D93DDC LDR W8, [X0 + 0xE0]
	0x03D93DE0 CBNZ W8, 0x3D93DE8
	0x03D93DE4 BL 0x1C16DFC
	0x03D93DE8 LDR X8, [X22 + 0x38]
	0x03D93DEC LDR X0, [X8 + 0x10]
	0x03D93DF0 LDRB W8, [X0 + 0x135]
	0x03D93DF4 TBNZ X8, 0x0, 0x3D93DFC
	0x03D93DF8 BL 0x1C5C684
	0x03D93DFC LDR X9, [X0 + 0xB8]
	0x03D93E00 B 0x3D93C38
	0x03D93E04 BL 0x1C16F20
	0x03D93E08 SUB X31, X31, 0x80
	0x03D93E0C STR D10, [X31 + 0x40]
	0x03D93E10 STP D9, D8, [X31 + 0x48]
	0x03D93E14 STR X30, [X31 + 0x58]
	0x03D93E18 STP X22, X21, [X31 + 0x60]
	0x03D93E1C STP X20, X19, [X31 + 0x70]
	0x03D93E20 ADRP X20, 0x654000
	0x03D93E24 LDRB W8, [X20 + 0xE6C]
	0x03D93E28 MOV V8.16B, V2.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x655000
	006 Move W8, [X21+3684]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x3D5000
	014 Move X0, [X0+2960]
	015 Call 0x1C17CF4
	016 Move X0, 0x3D0000
	017 Move X0, [X0+2664]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3684], W8
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X9, [X8+392]
	024 Move X1, [X8+400]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {39}
	030 Move X8, [X19]
	031 Move X0, X19
	032 Move X9, [X8+376]
	033 Move X1, [X8+384]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {45}
	039 Move X8, [X19]
	040 Move W1, 1
	041 Move X0, X19
	042 Move X9, [X8+472]
	043 Move X2, [X8+480]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Compare X20, 0
	046 JumpIfEqual {94}
	047 Move X0, [X19+40]
	048 Move W1, [X20+156]
	049 Move X2, X31
	050 Call PointerCaptureHelper.ReleasePointer, X0, X1
	051 Move X8, [X19]
	052 Move W9, [X19+20]
	053 Move X0, X19
	054 Move X10, [X8+472]
	055 Move X2, [X8+480]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CSET not yet implemented."
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X0, X19
	060 Call DragEventsProcessor.get_dragAndDrop, X0
	061 Compare X0, 0
	062 JumpIfEqual {94}
	063 Move X10, 0x3D5000
	064 Move X8, [X0]
	065 Move X10, [X10+2960]
	066 Move X20, X0
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Move X1, [X10]
	069 Compare X9, 0
	070 JumpIfEqual {77}
	071 Move X10, [X8+176]
	072 Add X10, X10, 8
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Subtract X9, X9, 1
	076 Add X10, X10, 16
	077 Move W2, 3
	078 Move X0, X20
	079 Call 0x1C5D788
	080 Move W9, [X10]
	081 Add W9, W9, 3
	082 Add X8, X8, W9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X1, [X0+8]
	086 Move X0, X20
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move [X19+20], W31
	089 Move X20, [X31+16]
	090 Move X19, [X31+24]
	091 Move X30, [X31+32]
	092 Move X21, [X31+40]
	093 Return 
	094 Call 0x1C17F20

Method: System.Void OnPointerCapturedOut(UnityEngine.UIElements.PointerCaptureOutEvent evt)

Disassembly:
	0x03D93E2C MOV V9.16B, V1.16B
	0x03D93E30 MOV V10.16B, V0.16B
	0x03D93E34 MOV X19, X0
	0x03D93E38 TBNZ X8, 0x0, 0x3D93E50
	0x03D93E3C ADRP X0, 0x3D4000
	0x03D93E40 LDR X0, [X0 + 0xB90]
	0x03D93E44 BL 0x1C16CF4
	0x03D93E48 MOVZ W8, 0x1
	0x03D93E4C STRB W8, [X20 + 0xE6C]
	0x03D93E50 MOVI V0.2D, 0x0
	0x03D93E54 STP V0, V0, [X31 + 0x20]
	0x03D93E58 ADD X1, X31, 0x20
	0x03D93E5C MOV X0, X19
	0x03D93E60 MOV V0.16B, V10.16B
	0x03D93E64 MOV V1.16B, V9.16B
	0x03D93E68 MOV V2.16B, V8.16B
	0x03D93E6C BL 0x3D93FD8
	0x03D93E70 MOV W20, W0
	0x03D93E74 CMP W0, 0x3
	0x03D93E78 B.NE 0x3D93E94
	0x03D93E7C LDR X8, [X19]
	0x03D93E80 MOV X0, X19
	0x03D93E84 MOV W1, W31
	0x03D93E88 LDP X9, X2, [X8 + 0x1D8]
	0x03D93E8C BLR X9
	0x03D93E90 B 0x3D93EC8
	0x03D93E94 MOV X0, X19
	0x03D93E98 MOV V0.16B, V10.16B
	0x03D93E9C MOV V1.16B, V9.16B
	0x03D93EA0 BL 0x3D94168
	0x03D93EA4 MOV X0, X19
	0x03D93EA8 MOV V0.16B, V10.16B
	0x03D93EAC MOV V1.16B, V9.16B
	0x03D93EB0 BL 0x3D94360
	0x03D93EB4 LDP V0, V1, [X31 + 0x20]
	0x03D93EB8 ADD X1, X31, 0x0
	0x03D93EBC MOV X0, X19
	0x03D93EC0 STP V0, V1, [X31]
	0x03D93EC4 BL 0x3D9444C
	0x03D93EC8 MOV X0, X19
	0x03D93ECC BL 0x3D91FFC
	0x03D93ED0 CBZ X0, 0x3D93FD4
	0x03D93ED4 ADRP X22, 0x3D4000
	0x03D93ED8 LDR X8, [X0]
	0x03D93EDC LDR X22, [X22 + 0xB90]
	0x03D93EE0 MOV X21, X0
	0x03D93EE4 LDRH W9, [X8 + 0x12E]
	0x03D93EE8 LDR X1, [X22]
	0x03D93EEC CBZ X9, 0x3D93F10
	0x03D93EF0 LDR X10, [X8 + 0xB0]
	0x03D93EF4 ADD X10, X10, 0x8
	0x03D93EF8 LDUR X11, [X10 - 0x8]
	0x03D93EFC CMP X11, X1
	0x03D93F00 B.EQ 0x3D93F20
	0x03D93F04 SUBS X9, X9, 0x1
	0x03D93F08 ADD X10, X10, 0x10
	0x03D93F0C B.NE 0x3D93EF8
	0x03D93F10 MOVZ W2, 0x4
	0x03D93F14 MOV X0, X21
	0x03D93F18 BL 0x1C5C788
	0x03D93F1C B 0x3D93F30
	0x03D93F20 LDR W9, [X10]
	0x03D93F24 ADD W9, W9, 0x4
	0x03D93F28 ADD X8, X8, W9, 0x4, SXTW
	0x03D93F2C ADD X0, X8, 0x138
	0x03D93F30 LDP X8, X2, [X0]
	0x03D93F34 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x655000
	005 Move W8, [X20+3685]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3D5000
	012 Move X0, [X0+2960]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3685], W8
	016 Move X8, [X19]
	017 Move X0, X19
	018 Move X9, [X8+392]
	019 Move X1, [X8+400]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {34}
	025 Move X8, [X19]
	026 Move X0, X19
	027 Move X9, [X8+376]
	028 Move X1, [X8+384]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {40}
	034 Move X8, [X19]
	035 Move W1, 1
	036 Move X0, X19
	037 Move X9, [X8+472]
	038 Move X2, [X8+480]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X8, [X19]
	041 Move W9, [X19+20]
	042 Move X0, X19
	043 Move X10, [X8+472]
	044 Move X2, [X8+480]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSET not yet implemented."
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X0, X19
	049 Call DragEventsProcessor.get_dragAndDrop, X0
	050 Compare X0, 0
	051 JumpIfEqual {82}
	052 Move X10, 0x3D5000
	053 Move X8, [X0]
	054 Move X10, [X10+2960]
	055 Move X20, X0
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move X1, [X10]
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move W2, 3
	067 Move X0, X20
	068 Call 0x1C5D788
	069 Move W9, [X10]
	070 Add W9, W9, 3
	071 Add X8, X8, W9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X1, [X0+8]
	075 Move X0, X20
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move [X19+20], W31
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X30, [X31+32]
	081 Return 
	082 Call 0x1C17F20

Method: System.Void OnPointerMoveEvent(UnityEngine.UIElements.PointerMoveEvent evt)

Disassembly:
	0x03D93F38 MOV W1, W20
	0x03D93F3C BLR X8
	0x03D93F40 MOV X0, X19
	0x03D93F44 BL 0x3D91FFC
	0x03D93F48 CBZ X0, 0x3D93FD4
	0x03D93F4C LDR X8, [X0]
	0x03D93F50 LDR X1, [X22]
	0x03D93F54 MOV X19, X0
	0x03D93F58 LDRH W9, [X8 + 0x12E]
	0x03D93F5C CBZ X9, 0x3D93F80
	0x03D93F60 LDR X10, [X8 + 0xB0]
	0x03D93F64 ADD X10, X10, 0x8
	0x03D93F68 LDUR X11, [X10 - 0x8]
	0x03D93F6C CMP X11, X1
	0x03D93F70 B.EQ 0x3D93F90
	0x03D93F74 SUBS X9, X9, 0x1
	0x03D93F78 ADD X10, X10, 0x10
	0x03D93F7C B.NE 0x3D93F68
	0x03D93F80 MOVZ W2, 0x1
	0x03D93F84 MOV X0, X19
	0x03D93F88 BL 0x1C5C788
	0x03D93F8C B 0x3D93FA0
	0x03D93F90 LDR W9, [X10]
	0x03D93F94 ADD W9, W9, 0x1
	0x03D93F98 ADD X8, X8, W9, 0x4, SXTW
	0x03D93F9C ADD X0, X8, 0x138
	0x03D93FA0 LDP X8, X1, [X0]
	0x03D93FA4 MOV X0, X19
	0x03D93FA8 MOV V0.16B, V10.16B
	0x03D93FAC MOV V1.16B, V9.16B
	0x03D93FB0 MOV V2.16B, V8.16B
	0x03D93FB4 BLR X8
	0x03D93FB8 LDP X20, X19, [X31 + 0x70]
	0x03D93FBC LDP X22, X21, [X31 + 0x60]
	0x03D93FC0 LDR X30, [X31 + 0x58]
	0x03D93FC4 LDP D9, D8, [X31 + 0x48]
	0x03D93FC8 LDR V10, [X31 + 0x40]
	0x03D93FCC ADD X31, X31, 0x80
	0x03D93FD0 RET
	0x03D93FD4 BL 0x1C16F20
	0x03D93FD8 SUB X31, X31, 0xB0
	0x03D93FDC STP D9, D8, [X31 + 0x80]
	0x03D93FE0 STP X30, X21, [X31 + 0x90]
	0x03D93FE4 STP X20, X19, [X31 + 0xA0]
	0x03D93FE8 ADRP X20, 0x654000
	0x03D93FEC LDRB W8, [X20 + 0xE6D]
	0x03D93FF0 MOV X21, X1
	0x03D93FF4 MOV V8.16B, V1.16B
	0x03D93FF8 MOV V9.16B, V0.16B
	0x03D93FFC MOV X19, X0
	0x03D94000 TBNZ X8, 0x0, 0x3D94024
	0x03D94004 ADRP X0, 0x3D3000
	0x03D94008 LDR X0, [X0 + 0xBB0]
	0x03D9400C BL 0x1C16CF4
	0x03D94010 ADRP X0, 0x3D3000
	0x03D94014 LDR X0, [X0 + 0xBA8]
	0x03D94018 BL 0x1C16CF4
	0x03D9401C MOVZ W8, 0x1
	0x03D94020 STRB W8, [X20 + 0xE6D]
	0x03D94024 MOVI V0.2D, 0x0
	0x03D94028 STP V0, V0, [X31 + 0x60]
	0x03D9402C LDR X8, [X19 + 0x70]
	0x03D94030 CBZ X8, 0x3D94128
	0x03D94034 LDR X8, [X19]
	0x03D94038 MOV X0, X19
	0x03D9403C MOV V0.16B, V9.16B
	0x03D94040 MOV V1.16B, V8.16B
	0x03D94044 LDP X9, X2, [X8 + 0x1E8]
	0x03D94048 MOV X1, X21
	0x03D9404C BLR X9
	0x03D94050 LDP V0, V1, [X21]
	0x03D94054 MOV W20, W0
	0x03D94058 ADD X8, X31, 0x60
	0x03D9405C ADD X1, X31, 0x40
	0x03D94060 MOV X0, X19
	0x03D94064 STP V0, V1, [X31 + 0x40]
	0x03D94068 BL 0x3D94BE4
	0x03D9406C MOV X0, X19
	0x03D94070 BL 0x3D93428
	0x03D94074 LDP V0, V1, [X31 + 0x60]
	0x03D94078 STP V0, V1, [X31 + 0x20]
	0x03D9407C CBZ X0, 0x3D94164
	0x03D94080 LDP V0, V1, [X31 + 0x20]
	0x03D94084 ADD X1, X31, 0x0
	0x03D94088 MOV X2, X31
	0x03D9408C STP V0, V1, [X31]
	0x03D94090 MOV V0.16B, V9.16B
	0x03D94094 MOV V1.16B, V8.16B
	0x03D94098 BL 0x3CFE914
	0x03D9409C CMP W0, 0x0
	0x03D940A0 MOVZ W9, 0x3
	0x03D940A4 MOV W8, W0
	0x03D940A8 CSEL W0, W0, W9, NE
	0x03D940AC CBNZ W8, 0x3D94150
	0x03D940B0 EOR W8, W20, 0x1
	0x03D940B4 TBNZ X8, 0x0, 0x3D94150
	0x03D940B8 ADRP X8, 0x3D3000
	0x03D940BC LDR X19, [X19 + 0x70]
	0x03D940C0 LDP V0, V1, [X31 + 0x60]
	0x03D940C4 LDR X8, [X8 + 0xBB0]
	0x03D940C8 ADD X1, X31, 0x20
	0x03D940CC STP V0, V1, [X31 + 0x20]
	0x03D940D0 LDR X0, [X8]
	0x03D940D4 BL 0x1C16E04
	0x03D940D8 CBZ X19, 0x3D94164
	0x03D940DC ADRP X10, 0x3D3000
	0x03D940E0 LDR X8, [X19]
	0x03D940E4 LDR X10, [X10 + 0xBA8]
	0x03D940E8 MOV X20, X0
	0x03D940EC LDRH W9, [X8 + 0x12E]
	0x03D940F0 LDR X1, [X10]
	0x03D940F4 CBZ X9, 0x3D94118
	0x03D940F8 LDR X10, [X8 + 0xB0]
	0x03D940FC ADD X10, X10, 0x8
	0x03D94100 LDUR X11, [X10 - 0x8]
	0x03D94104 CMP X11, X1
	0x03D94108 B.EQ 0x3D94130
	0x03D9410C SUBS X9, X9, 0x1
	0x03D94110 ADD X10, X10, 0x10
	0x03D94114 B.NE 0x3D94100
	0x03D94118 MOVZ W2, 0x2
	0x03D9411C MOV X0, X19
	0x03D94120 BL 0x1C5C788
	0x03D94124 B 0x3D94140
	0x03D94128 MOVZ W0, 0x3
	0x03D9412C B 0x3D94150
	0x03D94130 LDR W9, [X10]
	0x03D94134 ADD W9, W9, 0x2
	0x03D94138 ADD X8, X8, W9, 0x4, SXTW
	0x03D9413C ADD X0, X8, 0x138
	0x03D94140 LDP X8, X2, [X0]
	0x03D94144 MOV X0, X19
	0x03D94148 MOV X1, X20
	0x03D9414C BLR X8
	0x03D94150 LDP X20, X19, [X31 + 0xA0]
	0x03D94154 LDP X30, X21, [X31 + 0x90]
	0x03D94158 LDP D9, D8, [X31 + 0x80]
	0x03D9415C ADD X31, X31, 0xB0
	0x03D94160 RET
	0x03D94164 BL 0x1C16F20
	0x03D94168 STP D13, D12, [X31 - 0x50]!
	0x03D9416C STP D11, D10, [X31 + 0x10]
	0x03D94170 STP D9, D8, [X31 + 0x20]
	0x03D94174 STR X30, [X31 + 0x30]
	0x03D94178 STP X20, X19, [X31 + 0x40]
	0x03D9417C MOV V9.16B, V1.16B
	0x03D94180 MOV X19, X0
	0x03D94184 BL 0x3D93428
	0x03D94188 CBZ X0, 0x3D9435C
	0x03D9418C LDR X0, [X0 + 0x440]
	0x03D94190 CBZ X0, 0x3D9435C
	0x03D94194 MOV X1, X31
	0x03D94198 BL 0x3DEDC10
	0x03D9419C MOV X0, X19
	0x03D941A0 MOV V8.16B, V1.16B
	0x03D941A4 BL 0x3D93428
	0x03D941A8 CBZ X0, 0x3D9435C
	0x03D941AC LDR X0, [X0 + 0x440]
	0x03D941B0 CBZ X0, 0x3D9435C
	0x03D941B4 FMOV S0, 5
	0x03D941B8 MOV X1, X31
	0x03D941BC FADD S10, S8, S0
	0x03D941C0 BL 0x3DEDC10
	0x03D941C4 FCMP S9, S10
	0x03D941C8 B.MI 0x3D941F8
	0x03D941CC FADD S0, S3, S1
	0x03D941D0 FMOV S1, -5
	0x03D941D4 FADD S0, S0, S1
	0x03D941D8 FCMP S9, S0
	0x03D941DC B.GT 0x3D941F8
	0x03D941E0 LDP X20, X19, [X31 + 0x40]
	0x03D941E4 LDR X30, [X31 + 0x30]
	0x03D941E8 LDP D9, D8, [X31 + 0x20]
	0x03D941EC LDP D11, D10, [X31 + 0x10]
	0x03D941F0 LDP D13, D12, [X31], #0x50
	0x03D941F4 RET
	0x03D941F8 MOV X0, X19
	0x03D941FC BL 0x3D93428
	0x03D94200 CBZ X0, 0x3D9435C
	0x03D94204 LDR X0, [X0 + 0x440]
	0x03D94208 CBZ X0, 0x3D9435C
	0x03D9420C MOV X1, X31
	0x03D94210 BL 0x3D7E19C
	0x03D94214 MOV V8.16B, V0.16B
	0x03D94218 FCMP S9, S10
	0x03D9421C MOV V9.16B, V1.16B
	0x03D94220 B.PL 0x3D94260
	0x03D94224 ADRP X20, 0x645000
	0x03D94228 LDRB W8, [X20 + 0x78D]
	0x03D9422C CBNZ W8, 0x3D94244
	0x03D94230 ADRP X0, 0x367000
	0x03D94234 LDR X0, [X0 + 0xF08]
	0x03D94238 BL 0x1C16CF4
	0x03D9423C MOVZ W8, 0x1
	0x03D94240 STRB W8, [X20 + 0x78D]
	0x03D94244 ADRP X8, 0x367000
	0x03D94248 LDR X8, [X8 + 0xF08]
	0x03D9424C LDR X8, [X8]
	0x03D94250 LDR X9, [X8 + 0xB8]
	0x03D94254 ADD X8, X9, 0x18
	0x03D94258 ADD X9, X9, 0x1C
	0x03D9425C B 0x3D94298
	0x03D94260 ADRP X20, 0x647000
	0x03D94264 LDRB W8, [X20 + 0x7F6]
	0x03D94268 CBNZ W8, 0x3D94280
	0x03D9426C ADRP X0, 0x367000
	0x03D94270 LDR X0, [X0 + 0xF08]
	0x03D94274 BL 0x1C16CF4
	0x03D94278 MOVZ W8, 0x1
	0x03D9427C STRB W8, [X20 + 0x7F6]
	0x03D94280 ADRP X8, 0x367000
	0x03D94284 LDR X8, [X8 + 0xF08]
	0x03D94288 LDR X8, [X8]
	0x03D9428C LDR X9, [X8 + 0xB8]
	0x03D94290 ADD X8, X9, 0x10
	0x03D94294 ADD X9, X9, 0x14
	0x03D94298 LDR V12, [X9]
	0x03D9429C LDR V11, [X8]
	0x03D942A0 MOV X0, X19
	0x03D942A4 BL 0x3D93428
	0x03D942A8 CBZ X0, 0x3D9435C
	0x03D942AC LDR X0, [X0 + 0x440]
	0x03D942B0 CBZ X0, 0x3D9435C
	0x03D942B4 LDR X8, [X0]
	0x03D942B8 LDR X9, [X8 + 0x768]
	0x03D942BC LDR X1, [X8 + 0x770]
	0x03D942C0 BLR X9
	0x03D942C4 CBZ X0, 0x3D9435C
	0x03D942C8 MOV X1, X31
	0x03D942CC BL 0x3DEDC10
	0x03D942D0 MOV X0, X19
	0x03D942D4 MOV V10.16B, V3.16B
	0x03D942D8 BL 0x3D93428
	0x03D942DC CBZ X0, 0x3D9435C

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+160], D10
	003 Move [X31+168], D9
	004 Move [X31+176], D8
	005 Move [X31+184], X30
	006 Move [X31+192], X24
	007 Move [X31+200], X23
	008 Move [X31+208], X22
	009 Move [X31+216], X21
	010 Move [X31+224], X20
	011 Move [X31+232], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X22+40]
	014 Move X21, 0x655000
	015 Move X19, X1
	016 Move X20, X0
	017 Move [X31+152], X8
	018 Move W8, [X21+3686]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0x3D5000
	024 Move X0, [X0+2960]
	025 Call 0x1C17CF4
	026 Move X0, 0x38C000
	027 Move X0, [X0+528]
	028 Call 0x1C17CF4
	029 Move X0, 0x3D1000
	030 Move X0, [X0+2992]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+3686], W8
	034 Compare X19, 0
	035 JumpIfEqual {266}
	036 Move W8, [X19+262]
	037 Compare W8, 0
	038 JumpIfEqual {54}
	039 Move X8, [X22+40]
	040 Move X9, [X31+152]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X20, [X31+224]
	043 Move X19, [X31+232]
	044 Move X22, [X31+208]
	045 Move X21, [X31+216]
	046 Move X24, [X31+192]
	047 Move X23, [X31+200]
	048 Move X30, [X31+184]
	049 Move D9, [X31+168]
	050 Move D8, [X31+176]
	051 Move V10, [X31+160]
	052 Add X31, X31, 240
	053 Return 
	054 Move X8, [X20]
	055 Move X0, X20
	056 Move X9, [X8+392]
	057 Move X1, [X8+400]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {73}
	063 Move X8, [X20]
	064 Move X0, X20
	065 Move X9, [X8+376]
	066 Move X1, [X8+384]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {73}
	072 Move W8, [X20+20]
	073 Move W8, [X20+20]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move S0, [X19+180]
	076 Move S1, [X19+184]
	077 Move X0, X20
	078 Call DragEventsProcessor.GetDropTarget, X0, X1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CSEL not yet implemented."
	081 Compare X0, 0
	082 JumpIfEqual {266}
	083 Move X8, [X0]
	084 Move S1, [X19+184]
	085 Move S2, [X19+188]
	086 Move V0, [X19+180]
	087 Move X9, [X8+440]
	088 Move X1, [X8+448]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move S0, [X20+24]
	092 Move S1, [X20+28]
	093 Move S3, [X19+180]
	094 Move S4, [X19+184]
	095 Move V2, [X20+32]
	096 Move V5, [X19+188]
	097 Move W8, 0x42C80000
	098 Subtract S3, S0, S3
	099 Subtract S4, S1, S4
	100 Subtract S5, S2, S5
	101 Multiply S3, S3, S3
	102 Multiply S4, S4, S4
	103 Multiply S5, S5, S5
	104 Add S3, S3, S4
	105 Add S3, S3, S5
	106 Move S4, W8
	107 NotImplemented "Instruction FCMP not yet implemented."
	108 Move X8, [X20]
	109 Move X0, X20
	110 Move X9, [X8+424]
	111 Move X1, [X8+432]
	112 Add X8, X31, 0
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move W23, [X31+8]
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 Move W8, [X31+28]
	117 Move X24, [X31]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move [X31+8], V0
	120 Move [X31+144], W8
	121 Move [X20+20], W31
	122 Move X8, [X20]
	123 Move X0, X20
	124 Move X9, [X8+392]
	125 Move X1, [X8+400]
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {191}
	131 Move X8, [X20]
	132 Move X0, X20
	133 Move X9, [X8+376]
	134 Move X1, [X8+384]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {191}
	140 Move X0, X31
	141 Call Event.get_current
	142 Compare X0, 0
	143 JumpIfEqual {159}
	144 Move X0, X31
	145 Call Event.get_current
	146 Compare X0, 0
	147 JumpIfEqual {266}
	148 Move X1, X31
	149 Call Event.get_type, X0
	150 Compare W0, 0
	151 JumpIfEqual {159}
	152 Move X0, X31
	153 Call Event.get_current
	154 Compare X0, 0
	155 JumpIfEqual {266}
	156 Move X1, X31
	157 Call Event.get_type, X0
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X0, X20
	160 Call DragEventsProcessor.get_dragAndDrop, X0
	161 Move V0, [X31+8]
	162 Move W8, [X31+144]
	163 Move [X31+6], V0
	164 Move [X31+112], W8
	165 Compare X0, 0
	166 JumpIfEqual {266}
	167 Move V0, [X31+6]
	168 Move W8, [X31+112]
	169 Move S9, [X19+184]
	170 Move S8, [X19+188]
	171 Move V10, [X19+180]
	172 Move [X31+2], V0
	173 Move [X31+48], W8
	174 Move X10, 0x3D4000
	175 Move X8, [X0]
	176 Move X10, [X10+2960]
	177 Move X21, X0
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Move X1, [X10]
	180 Compare X9, 0
	181 JumpIfEqual {188}
	182 Move X10, [X8+176]
	183 Add X10, X10, 8
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract X9, X9, 1
	187 Add X10, X10, 16
	188 Move X0, X21
	189 Move W2, W31
	190 Call 0x1C5D788
	191 Move X8, [X20]
	192 Move X0, X20
	193 Move X9, [X8+376]
	194 Move X1, [X8+384]
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfNotEqual {255}
	200 Move X0, X20
	201 Call DragEventsProcessor.get_dragAndDrop, X0
	202 Move V0, [X31+8]
	203 Move W8, [X31+144]
	204 Move [X31+6], V0
	205 Move [X31+112], W8
	206 Compare X0, 0
	207 JumpIfEqual {266}
	208 Move V0, [X31+6]
	209 Move W8, [X31+112]
	210 Move S9, [X19+184]
	211 Move S8, [X19+188]
	212 Move V10, [X19+180]
	213 Move [X31+4], V0
	214 Move [X31+80], W8
	215 Move X10, 0x3D4000
	216 Move X8, [X0]
	217 Move X10, [X10+2960]
	218 Move X21, X0
	219 NotImplemented "Instruction LDRH not yet implemented."
	220 Move X1, [X10]
	221 Compare X9, 0
	222 JumpIfEqual {229}
	223 Move X10, [X8+176]
	224 Add X10, X10, 8
	225 NotImplemented "Instruction LDUR not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Subtract X9, X9, 1
	228 Add X10, X10, 16
	229 Move X0, X21
	230 Move W2, W31
	231 Call 0x1C5D788
	232 NotImplemented "Instruction LDRSW not yet implemented."
	233 Add X8, X8, X9
	234 Add X0, X8, 312
	235 Move X8, [X0]
	236 Move V0, [X31+4]
	237 Move W9, [X31+80]
	238 NotImplemented "Instruction LDRSW not yet implemented."
	239 Add X8, X8, X9
	240 Add X0, X8, 312
	241 Move X8, [X0]
	242 Move V0, [X31+2]
	243 Move W9, [X31+48]
	244 Move [X31], X24
	245 Move [X31+8], W23
	246 Move [X31+12], V0
	247 Move [X31+28], W9
	248 Move X2, [X0+8]
	249 Add X1, X31, 0
	250 Move X0, X21
	251 Move V0, V10
	252 Move V1, V9
	253 Move V2, V8
	254 NotImplemented "Instruction BLR not yet implemented."
	255 Move W8, 2
	256 Move [X20+20], W8
	257 Move X0, [X20+40]
	258 Move W1, [X19+156]
	259 Move X2, X31
	260 Call PointerCaptureHelper.CapturePointer, X0, X1
	261 Move W8, 1
	262 Move X0, X19
	263 Move X1, X31
	264 Move [X19+262], W8
	265 Call EventBase.StopPropagation, X0
	266 Call 0x1C17F20
	267 Call 0x3EB2B20

Method: UnityEngine.UIElements.DragEventsProcessor GetDropTarget(UnityEngine.Vector2 position)

Disassembly:
	0x03D93C04 MOV X2, X31
	0x03D93C08 BL 0x3CFDD8C
	0x03D93C0C B 0x3D93C28
	0x03D93C10 ADRP X8, 0x3BA000
	0x03D93C14 LDR X0, [X0 + 0x468]
	0x03D93C18 LDR X8, [X8 + 0xAA0]
	0x03D93C1C LDR X1, [X8]
	0x03D93C20 BL 0x21B23E0
	0x03D93C24 TBZ X0, 0x0, 0x3D93DAC
	0x03D93C28 MOV X0, X20
	0x03D93C2C BL 0x3D93428
	0x03D93C30 CBZ X0, 0x3D93E04
	0x03D93C34 ADD X9, X0, 0x468
	0x03D93C38 LDR X22, [X20 + 0x70]
	0x03D93C3C CBZ X22, 0x3D93E04
	0x03D93C40 ADRP X24, 0x3D4000
	0x03D93C44 LDR X8, [X22]
	0x03D93C48 LDR X24, [X24 + 0xBA8]
	0x03D93C4C LDR X23, [X9]
	0x03D93C50 LDRH W9, [X8 + 0x12E]
	0x03D93C54 LDR X1, [X24]
	0x03D93C58 CBZ X9, 0x3D93C7C
	0x03D93C5C LDR X10, [X8 + 0xB0]
	0x03D93C60 ADD X10, X10, 0x8
	0x03D93C64 LDUR X11, [X10 - 0x8]
	0x03D93C68 CMP X11, X1
	0x03D93C6C B.EQ 0x3D93C8C
	0x03D93C70 SUBS X9, X9, 0x1
	0x03D93C74 ADD X10, X10, 0x10
	0x03D93C78 B.NE 0x3D93C64
	0x03D93C7C MOVZ W2, 0x1
	0x03D93C80 MOV X0, X22
	0x03D93C84 BL 0x1C5C788
	0x03D93C88 B 0x3D93C9C
	0x03D93C8C LDR W9, [X10]
	0x03D93C90 ADD W9, W9, 0x1
	0x03D93C94 ADD X8, X8, W9, 0x4, SXTW
	0x03D93C98 ADD X0, X8, 0x138
	0x03D93C9C LDP X9, X3, [X0]
	0x03D93CA0 ADD X8, X31, 0x40
	0x03D93CA4 MOV X0, X22
	0x03D93CA8 MOV X1, X23
	0x03D93CAC MOV W2, W31
	0x03D93CB0 BLR X9
	0x03D93CB4 LDP V0, V1, [X31 + 0x40]
	0x03D93CB8 MOV X0, X20
	0x03D93CBC STP V0, V1, [X31 + 0x60]
	0x03D93CC0 BL 0x3D93428
	0x03D93CC4 LDR X23, [X20 + 0x70]
	0x03D93CC8 CBZ X23, 0x3D93E04
	0x03D93CCC LDR X8, [X23]
	0x03D93CD0 LDR X1, [X24]
	0x03D93CD4 MOV X22, X0
	0x03D93CD8 LDRH W9, [X8 + 0x12E]
	0x03D93CDC CBZ X9, 0x3D93D00
	0x03D93CE0 LDR X10, [X8 + 0xB0]
	0x03D93CE4 ADD X10, X10, 0x8
	0x03D93CE8 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x655000
	007 Move W8, [X20+3687]
	008 Move V8, V1
	009 Move V9, V0
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x3D5000
	016 Move X0, [X0+2976]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3687], W8
	020 Move X0, [X19+40]
	021 Compare X0, 0
	022 JumpIfEqual {69}
	023 Move X1, X31
	024 Call VisualElement.get_worldBound, X0
	025 Add S3, S1, S3
	026 NotImplemented "Instruction FCMP not yet implemented."
	027 NotImplemented "Instruction FCMP not yet implemented."
	028 NotImplemented "Instruction FCMP not yet implemented."
	029 Add S0, S0, S2
	030 NotImplemented "Instruction FCMP not yet implemented."
	031 Move X8, [X19]
	032 Move X0, X19
	033 Move X9, [X8+376]
	034 Move X1, [X8+384]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {61}
	040 Move X8, [X19+40]
	041 Compare X8, 0
	042 JumpIfEqual {69}
	043 Move X0, [X8+928]
	044 Compare X0, 0
	045 JumpIfEqual {69}
	046 Move X8, [X0]
	047 Move V0, V9
	048 Move V1, V8
	049 Move X9, [X8+1048]
	050 Move X1, [X8+1056]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X0, 0
	053 JumpIfEqual {61}
	054 Move X8, 0x3D5000
	055 Move X8, [X8+2976]
	056 Move X1, [X8]
	057 Call 0x22AADC8, X0
	058 Compare X0, 0
	059 JumpIfEqual {61}
	060 Move X19, [X0+1160]
	061 Move X19, X31
	062 Move X0, X19
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X30, [X31+16]
	066 Move D9, [X31+48]
	067 Move D8, [X31+56]
	068 Return X0
	069 Call 0x1C17F20

