Type: UnityEngine.UIElements.MultiColumnListView

Method: UnityEngine.UIElements.MultiColumnListViewController get_viewController()

Disassembly:
	0x03D79944 MOV X2, X31
	0x03D79948 BL 0x3D5F1D8
	0x03D7994C MOV X0, X19
	0x03D79950 BL 0x3D79404
	0x03D79954 CBZ X0, 0x3D799F0
	0x03D79958 LDR X20, [X0 + 0x58]
	0x03D7995C LDR X0, [X26]
	0x03D79960 BL 0x1C16F10
	0x03D79964 LDR X2, [X25]
	0x03D79968 MOV X1, X19
	0x03D7996C MOV X3, X31
	0x03D79970 MOV X21, X0
	0x03D79974 BL 0x3314368
	0x03D79978 CBZ X20, 0x3D799F0
	0x03D7997C MOV X0, X20
	0x03D79980 MOV X1, X21
	0x03D79984 BL 0x3D761D8
	0x03D79988 MOV X0, X19
	0x03D7998C BL 0x3D79404
	0x03D79990 CBZ X0, 0x3D799F0
	0x03D79994 LDR X20, [X0 + 0x58]
	0x03D79998 LDR X0, [X24]
	0x03D7999C BL 0x1C16F10
	0x03D799A0 LDR X2, [X23]
	0x03D799A4 MOV X1, X19
	0x03D799A8 MOV X3, X31
	0x03D799AC MOV X21, X0
	0x03D799B0 BL 0x2A76D00
	0x03D799B4 CBZ X20, 0x3D799F0
	0x03D799B8 MOV X0, X20
	0x03D799BC MOV X1, X21
	0x03D799C0 LDP X20, X19, [X31 + 0x40]
	0x03D799C4 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x66F000
	005 Move W8, [X20+3436]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3EE000
	012 Move X0, [X0+4088]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3436], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Call BaseListView.get_viewController, X0
	019 Compare X0, 0
	020 JumpIfEqual {34}
	021 Move X8, 0x3EE000
	022 Move X8, [X8+4088]
	023 Move X9, [X0]
	024 Move X8, [X8]
	025 Move W11, [X9+304]
	026 Move W10, [X8+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, X31
	029 Move X9, [X9+200]
	030 Add X9, X9, X10
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSEL not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0

Method: UnityEngine.UIElements.Columns get_columns()

Disassembly:
	0x03D799C8 LDP X24, X23, [X31 + 0x20]
	0x03D799CC LDP X26, X25, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+1336]
	002 Return X0

Method: System.Void set_columns(UnityEngine.UIElements.Columns value)

Disassembly:
	0x03D799D0 LDR X30, [X31], #0x50
	0x03D799D4 B 0x3D76310
	0x03D799D8 LDP X20, X19, [X31 + 0x40]
	0x03D799DC LDP X22, X21, [X31 + 0x30]
	0x03D799E0 LDP X24, X23, [X31 + 0x20]
	0x03D799E4 LDP X26, X25, [X31 + 0x10]
	0x03D799E8 LDR X30, [X31], #0x50
	0x03D799EC RET
	0x03D799F0 BL 0x1C16F20
	0x03D799F4 STP X30, X21, [X31 - 0x20]!
	0x03D799F8 STP X20, X19, [X31 + 0x10]
	0x03D799FC ADRP X20, 0x66E000
	0x03D79A00 ADRP X21, 0x3EE000
	0x03D79A04 LDRB W8, [X20 + 0xD7A]
	0x03D79A08 LDR X21, [X21 + 0xA0]
	0x03D79A0C MOV X19, X0
	0x03D79A10 TBNZ X8, 0x0, 0x3D79A28
	0x03D79A14 ADRP X0, 0x3EE000
	0x03D79A18 LDR X0, [X0 + 0xA0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Compare X1, 0
	005 JumpIfEqual {16}
	006 Move X0, X1
	007 Move [X19+1336], X1
	008 Call Columns.get_Count, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X0, X19
	011 Move X1, X31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Call BaseVerticalCollectionView.GetOrCreateViewController, X0
	015 Return 
	016 Move X0, [X19+1336]
	017 Compare X0, 0
	018 JumpIfEqual {26}
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call Columns.Clear, X0
	022 Return 
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Return 
	026 Call 0x1C17F20

Method: UnityEngine.UIElements.SortColumnDescriptions get_sortColumnDescriptions()

Disassembly:
	0x03D79A1C BL 0x1C16CF4
	0x03D79A20 MOVZ W8, 0x1

ISIL:
	001 Move X0, [X0+1352]
	002 Return X0

Method: System.Void set_sortColumnDescriptions(UnityEngine.UIElements.SortColumnDescriptions value)

Disassembly:
	0x03D79A24 STRB W8, [X20 + 0xD7A]
	0x03D79A28 LDR X1, [X21]
	0x03D79A2C MOV X0, X19
	0x03D79A30 LDP X20, X19, [X31 + 0x10]
	0x03D79A34 LDP X30, X21, [X31], #0x20
	0x03D79A38 B 0x219FCE8
	0x03D79A3C LDR X8, [X0 + 0x4E0]
	0x03D79A40 CBZ X8, 0x3D79A54
	0x03D79A44 LDR X4, [X8 + 0x18]
	0x03D79A48 LDR X0, [X8 + 0x40]
	0x03D79A4C LDR X3, [X8 + 0x28]
	0x03D79A50 BR X4
	0x03D79A54 RET
	0x03D79A58 STP X30, X21, [X31 - 0x20]!
	0x03D79A5C STP X20, X19, [X31 + 0x10]
	0x03D79A60 ADRP X20, 0x66E000
	0x03D79A64 ADRP X21, 0x3EE000
	0x03D79A68 LDRB W8, [X20 + 0xD7B]
	0x03D79A6C LDR X21, [X21 + 0xA8]
	0x03D79A70 MOV X19, X0
	0x03D79A74 TBNZ X8, 0x0, 0x3D79A8C
	0x03D79A78 ADRP X0, 0x3EE000
	0x03D79A7C LDR X0, [X0 + 0xA8]
	0x03D79A80 BL 0x1C16CF4
	0x03D79A84 MOVZ W8, 0x1
	0x03D79A88 STRB W8, [X20 + 0xD7B]
	0x03D79A8C LDR X1, [X21]
	0x03D79A90 MOV X0, X19
	0x03D79A94 LDP X20, X19, [X31 + 0x10]
	0x03D79A98 LDP X30, X21, [X31], #0x20
	0x03D79A9C B 0x2736468
	0x03D79AA0 SUB X31, X31, 0xD0
	0x03D79AA4 STP X30, X23, [X31 + 0xA0]
	0x03D79AA8 STP X22, X21, [X31 + 0xB0]
	0x03D79AAC STP X20, X19, [X31 + 0xC0]
	0x03D79AB0 ADRP X23, 0x66E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Compare X1, 0
	006 JumpIfEqual {40}
	007 Move X0, X19
	008 Move X20, X1
	009 Move [X19+1352], X1
	010 Call MultiColumnListView.get_viewController, X0
	011 Compare X0, 0
	012 JumpIfEqual {36}
	013 Move X0, X19
	014 Call MultiColumnListView.get_viewController, X0
	015 Compare X0, 0
	016 JumpIfEqual {46}
	017 Move X8, [X0+72]
	018 Compare X8, 0
	019 JumpIfEqual {46}
	020 Move X0, [X8+48]
	021 Compare X0, 0
	022 JumpIfEqual {46}
	023 Move X1, X20
	024 Move X2, X31
	025 Call MultiColumnCollectionHeader.set_sortDescriptions, X0, X1
	026 Move X8, [X19+1368]
	027 Compare X8, 0
	028 JumpIfEqual {36}
	029 Move X2, [X8+24]
	030 Move X0, [X8+64]
	031 Move X1, [X8+40]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 CallNoReturn X2
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return 
	040 Move X0, [X19+1352]
	041 Compare X0, 0
	042 JumpIfEqual {46}
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Call 0x1C17F20

Method: System.Void set_sortingEnabled(System.Boolean value)

Disassembly:
	0x03D79C10 STR X30, [X31 - 0x30]!
	0x03D79C14 STP X22, X21, [X31 + 0x10]
	0x03D79C18 STP X20, X19, [X31 + 0x20]
	0x03D79C1C ADRP X20, 0x66E000
	0x03D79C20 ADRP X21, 0x3A4000
	0x03D79C24 LDRB W8, [X20 + 0xD7D]
	0x03D79C28 LDR X21, [X21 + 0x758]
	0x03D79C2C MOV X19, X0
	0x03D79C30 TBNZ X8, 0x0, 0x3D79C84
	0x03D79C34 ADRP X0, 0x3A4000
	0x03D79C38 LDR X0, [X0 + 0x758]
	0x03D79C3C BL 0x1C16CF4
	0x03D79C40 ADRP X0, 0x3EE000
	0x03D79C44 LDR X0, [X0 + 0x50]
	0x03D79C48 BL 0x1C16CF4
	0x03D79C4C ADRP X0, 0x3EE000
	0x03D79C50 LDR X0, [X0 + 0x58]
	0x03D79C54 BL 0x1C16CF4
	0x03D79C58 ADRP X0, 0x3EE000
	0x03D79C5C LDR X0, [X0 + 0x60]
	0x03D79C60 BL 0x1C16CF4
	0x03D79C64 ADRP X0, 0x3EE000
	0x03D79C68 LDR X0, [X0 + 0x68]
	0x03D79C6C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 And W8, W1, 1
	005 Move W19, W1
	006 Move X20, X0
	007 Move [X0+1344], W8
	008 Call MultiColumnListView.get_viewController, X0
	009 Compare X0, 0
	010 JumpIfEqual {28}
	011 Move X0, X20
	012 Call MultiColumnListView.get_viewController, X0
	013 Compare X0, 0
	014 JumpIfEqual {32}
	015 Move X8, [X0+72]
	016 Compare X8, 0
	017 JumpIfEqual {32}
	018 Move X0, [X8+48]
	019 Compare X0, 0
	020 JumpIfEqual {32}
	021 And W1, W19, 1
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X2, X31
	025 Move X30, [X31+32]
	026 Call MultiColumnCollectionHeader.set_sortingEnabled, X0, X1
	027 Return 
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return 
	032 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03D79C70 ADRP X0, 0x3EE000
	0x03D79C74 LDR X0, [X0 + 0x70]
	0x03D79C78 BL 0x1C16CF4
	0x03D79C7C MOVZ W8, 0x1
	0x03D79C80 STRB W8, [X20 + 0xD7D]
	0x03D79C84 LDR X0, [X21]
	0x03D79C88 BL 0x1C16F10
	0x03D79C8C MOV X1, X31
	0x03D79C90 MOV X20, X0
	0x03D79C94 BL 0x3E13BD4
	0x03D79C98 CBZ X20, 0x3D79D18
	0x03D79C9C ADRP X8, 0x3EE000
	0x03D79CA0 LDR X8, [X8 + 0x70]
	0x03D79CA4 ADRP X9, 0x3EE000
	0x03D79CA8 ADRP X21, 0x3EE000
	0x03D79CAC ADRP X22, 0x3EE000
	0x03D79CB0 LDR X8, [X8]
	0x03D79CB4 LDR X9, [X9 + 0x68]
	0x03D79CB8 STR X8, [X20 + 0x10]
	0x03D79CBC STR X20, [X19 + 0xB8]
	0x03D79CC0 LDR X0, [X9]
	0x03D79CC4 ADRP X20, 0x3EE000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x66F000
	006 Move X21, 0x3EF000
	007 Move W8, [X20+3437]
	008 Move X21, [X21+16]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3EF000
	015 Move X0, [X0+16]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3437], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X20, X0
	022 Call Columns..ctor, X0
	023 Move X0, X19
	024 Move X1, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]

Method: System.Void .ctor(UnityEngine.UIElements.Columns columns)

Disassembly:
	0x03D79CC8 LDR X20, [X20 + 0x50]
	0x03D79CCC LDR X21, [X21 + 0x60]
	0x03D79CD0 LDR X22, [X22 + 0x58]
	0x03D79CD4 BL 0x1C16F10
	0x03D79CD8 LDR X1, [X20]
	0x03D79CDC MOV X20, X0
	0x03D79CE0 BL 0x2736614
	0x03D79CE4 STR X20, [X19 + 0xC0]
	0x03D79CE8 LDR X0, [X21]
	0x03D79CEC BL 0x1C16F10
	0x03D79CF0 LDR X1, [X22]
	0x03D79CF4 MOV X20, X0
	0x03D79CF8 BL 0x2736614
	0x03D79CFC STR X20, [X19 + 0xC8]
	0x03D79D00 MOV X0, X19
	0x03D79D04 LDP X20, X19, [X31 + 0x20]
	0x03D79D08 LDP X22, X21, [X31 + 0x10]
	0x03D79D0C MOV X1, X31
	0x03D79D10 LDR X30, [X31], #0x30
	0x03D79D14 B 0x3CFE700
	0x03D79D18 BL 0x1C16F20
	0x03D79D1C LDR X0, [X0 + 0x18]
	0x03D79D20 RET
	0x03D79D24 STR X30, [X31 - 0x20]!
	0x03D79D28 STP X20, X19, [X31 + 0x10]
	0x03D79D2C MOV X19, X0
	0x03D79D30 LDR X0, [X0 + 0x18]
	0x03D79D34 MOV X2, X31
	0x03D79D38 MOV X20, X1
	0x03D79D3C BL 0x321BA08
	0x03D79D40 TBNZ X0, 0x0, 0x3D79D6C
	0x03D79D44 LDR X8, [X19 + 0x30]
	0x03D79D48 STR X20, [X19 + 0x18]
	0x03D79D4C CBZ X8, 0x3D79D6C
	0x03D79D50 LDR X3, [X8 + 0x18]
	0x03D79D54 LDR X0, [X8 + 0x40]
	0x03D79D58 LDR X2, [X8 + 0x28]
	0x03D79D5C MOV X1, X19
	0x03D79D60 LDP X20, X19, [X31 + 0x10]
	0x03D79D64 LDR X30, [X31], #0x20
	0x03D79D68 BR X3
	0x03D79D6C LDP X20, X19, [X31 + 0x10]
	0x03D79D70 LDR X30, [X31], #0x20
	0x03D79D74 RET
	0x03D79D78 LDR W0, [X0 + 0x10]
	0x03D79D7C RET
	0x03D79D80 LDR W9, [X0 + 0x10]
	0x03D79D84 CMP W9, W1
	0x03D79D88 B.EQ 0x3D79DB0
	0x03D79D8C LDR X9, [X0 + 0x30]
	0x03D79D90 MOV X8, X0
	0x03D79D94 STR W1, [X0 + 0x10]
	0x03D79D98 CBZ X9, 0x3D79DB0
	0x03D79D9C LDR X3, [X9 + 0x18]
	0x03D79DA0 LDR X0, [X9 + 0x40]
	0x03D79DA4 LDR X2, [X9 + 0x28]
	0x03D79DA8 MOV X1, X8
	0x03D79DAC BR X3
	0x03D79DB0 RET
	0x03D79DB4 LDR X0, [X0 + 0x28]
	0x03D79DB8 RET
	0x03D79DBC STR X1, [X0 + 0x28]
	0x03D79DC0 RET
	0x03D79DC4 LDR W0, [X0 + 0x20]
	0x03D79DC8 RET
	0x03D79DCC LDR W9, [X0 + 0x20]
	0x03D79DD0 CMP W9, W1
	0x03D79DD4 B.EQ 0x3D79DFC
	0x03D79DD8 LDR X9, [X0 + 0x30]
	0x03D79DDC MOV X8, X0
	0x03D79DE0 STR W1, [X0 + 0x20]
	0x03D79DE4 CBZ X9, 0x3D79DFC
	0x03D79DE8 LDR X3, [X9 + 0x18]
	0x03D79DEC LDR X0, [X9 + 0x40]
	0x03D79DF0 LDR X2, [X9 + 0x28]
	0x03D79DF4 MOV X1, X8
	0x03D79DF8 BR X3

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x66F000
	010 Move X25, 0x3EF000
	011 Move X24, 0x3EE000
	012 Move X23, 0x3EE000
	013 Move X22, 0x3EA000
	014 Move W8, [X21+3438]
	015 Move X25, [X25+24]
	016 Move X24, [X24+2120]
	017 Move X23, [X23+2128]
	018 Move X22, [X22+2712]
	019 Move X20, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {45}
	025 Move X0, 0x3EA000
	026 Move X0, [X0+2712]
	027 Call 0x1C17CF4
	028 Move X0, 0x3EF000
	029 Move X0, [X0+16]
	030 Call 0x1C17CF4
	031 Move X0, 0x3EE000
	032 Move X0, [X0+2128]
	033 Call 0x1C17CF4
	034 Move X0, 0x3EE000
	035 Move X0, [X0+2120]
	036 Call 0x1C17CF4
	037 Move X0, 0x3EF000
	038 Move X0, [X0+24]
	039 Call 0x1C17CF4
	040 Move X0, 0x3EF000
	041 Move X0, [X0+32]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+3438], W8
	045 Move X0, [X25]
	046 Call 0x1C17F10
	047 Move X21, X0
	048 Call SortColumnDescriptions..ctor, X0
	049 Move [X19+1352], X21
	050 Move X0, [X24]
	051 Call 0x1C17F10
	052 Move X1, [X23]
	053 Move X21, X0
	054 Call List`1<Object>..ctor, X0
	055 Move [X19+1360], X21
	056 Move X0, [X22]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X19
	062 Move X1, X31
	063 Call BaseListView..ctor, X0
	064 Move X0, [X19+1088]
	065 Compare X0, 0
	066 JumpIfEqual {92}
	067 Move X8, 0x3EF000
	068 Move X8, [X8+32]
	069 Move X2, X31
	070 Move X1, [X8]
	071 Call VisualElement.set_viewDataKey, X0, X1
	072 Compare X20, 0
	073 JumpIfNotEqual {80}
	074 Move X8, 0x3EF000
	075 Move X8, [X8+16]
	076 Move X0, [X8]
	077 Call 0x1C17F10
	078 Move X20, X0
	079 Call Columns..ctor, X0
	080 Move X0, X19
	081 Move X1, X20
	082 Move X20, [X31+48]
	083 Move X19, [X31+56]
	084 Move X22, [X31+32]
	085 Move X21, [X31+40]
	086 Move X24, [X31+16]
	087 Move X23, [X31+24]
	088 Move X30, [X31+64]
	089 Move X25, [X31+72]
	090 Call MultiColumnListView.set_columns, X0, X1
	091 Return 
	092 Call 0x1C17F20

Method: UnityEngine.UIElements.CollectionViewController CreateViewController()

Disassembly:
	0x03D79E78 MOV X0, X20
	0x03D79E7C MOV X2, X21
	0x03D79E80 BL 0x1C24138
	0x03D79E84 CMP X21, X0
	0x03D79E88 MOV X21, X0
	0x03D79E8C B.NE 0x3D79E44
	0x03D79E90 LDP X20, X19, [X31 + 0x30]
	0x03D79E94 LDP X22, X21, [X31 + 0x20]
	0x03D79E98 LDP X24, X23, [X31 + 0x10]
	0x03D79E9C LDR X30, [X31], #0x40
	0x03D79EA0 RET
	0x03D79EA4 MOV X0, X22
	0x03D79EA8 MOV X1, X23
	0x03D79EAC BL 0x1C171E0
	0x03D79EB0 STR X30, [X31 - 0x40]!
	0x03D79EB4 STP X24, X23, [X31 + 0x10]
	0x03D79EB8 STP X22, X21, [X31 + 0x20]
	0x03D79EBC STP X20, X19, [X31 + 0x30]
	0x03D79EC0 ADRP X21, 0x66E000
	0x03D79EC4 LDRB W8, [X21 + 0xD7F]
	0x03D79EC8 MOV X19, X1
	0x03D79ECC MOV X20, X0
	0x03D79ED0 TBNZ X8, 0x0, 0x3D79EE8
	0x03D79ED4 ADRP X0, 0x3EE000
	0x03D79ED8 LDR X0, [X0 + 0xB8]
	0x03D79EDC BL 0x1C16CF4
	0x03D79EE0 MOVZ W8, 0x1
	0x03D79EE4 STRB W8, [X21 + 0xD7F]
	0x03D79EE8 ADRP X24, 0x3EE000
	0x03D79EEC LDR X21, [X20 + 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x66F000
	007 Move X22, 0x3EE000
	008 Move W8, [X20+3439]
	009 Move X22, [X22+4088]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x3EE000
	016 Move X0, [X0+4088]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3439], W8
	020 Move X0, [X22]
	021 Move X20, [X19+1336]
	022 Move X21, [X19+1352]
	023 Move X19, [X19+1360]
	024 Call 0x1C17F10
	025 Move X1, X20
	026 Move X2, X21
	027 Move X3, X19
	028 Move X4, X31
	029 Move X22, X0
	030 Call MultiColumnListViewController..ctor, X0, X1, X2, X3
	031 Move X0, X22
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return X0

Method: System.Void SetViewController(UnityEngine.UIElements.CollectionViewController controller)

Disassembly:
	0x03D79EF0 LDR X24, [X24 + 0xB8]
	0x03D79EF4 MOV X0, X21
	0x03D79EF8 MOV X1, X19
	0x03D79EFC MOV X2, X31
	0x03D79F00 BL 0x33C0FDC
	0x03D79F04 CBZ X0, 0x3D79F24
	0x03D79F08 LDR X23, [X24]
	0x03D79F0C MOV X22, X0
	0x03D79F10 MOV X1, X23
	0x03D79F14 BL 0x1C16E00
	0x03D79F18 MOV X1, X0
	0x03D79F1C CBNZ X0, 0x3D79F28
	0x03D79F20 B 0x3D79F54
	0x03D79F24 MOV X1, X31
	0x03D79F28 MOV X0, X20
	0x03D79F2C MOV X2, X21
	0x03D79F30 BL 0x1C24138
	0x03D79F34 CMP X21, X0
	0x03D79F38 MOV X21, X0
	0x03D79F3C B.NE 0x3D79EF4
	0x03D79F40 LDP X20, X19, [X31 + 0x30]
	0x03D79F44 LDP X22, X21, [X31 + 0x20]
	0x03D79F48 LDP X24, X23, [X31 + 0x10]
	0x03D79F4C LDR X30, [X31], #0x40
	0x03D79F50 RET
	0x03D79F54 MOV X0, X22
	0x03D79F58 MOV X1, X23
	0x03D79F5C BL 0x1C171E0
	0x03D79F60 MOVN W8, 0x0
	0x03D79F64 MOV X1, X31
	0x03D79F68 STR W8, [X0 + 0x10]
	0x03D79F6C B 0x33BDD8C
	0x03D79F70 STP X30, X21, [X31 - 0x20]!
	0x03D79F74 STP X20, X19, [X31 + 0x10]
	0x03D79F78 MOV W21, W1
	0x03D79F7C MOVN W8, 0x0
	0x03D79F80 MOV X1, X31
	0x03D79F84 MOV W20, W2
	0x03D79F88 MOV X19, X0
	0x03D79F8C STR W8, [X0 + 0x10]
	0x03D79F90 BL 0x33BDD8C
	0x03D79F94 LDR W8, [X19 + 0x10]
	0x03D79F98 CMP W8, W21
	0x03D79F9C B.EQ 0x3D79FC0
	0x03D79FA0 LDR X8, [X19 + 0x30]
	0x03D79FA4 STR W21, [X19 + 0x10]
	0x03D79FA8 CBZ X8, 0x3D79FC0
	0x03D79FAC LDR X9, [X8 + 0x18]
	0x03D79FB0 LDR X0, [X8 + 0x40]
	0x03D79FB4 LDR X2, [X8 + 0x28]
	0x03D79FB8 MOV X1, X19
	0x03D79FBC BLR X9
	0x03D79FC0 LDR W8, [X19 + 0x20]
	0x03D79FC4 CMP W8, W20
	0x03D79FC8 B.EQ 0x3D79FF4
	0x03D79FCC LDR X8, [X19 + 0x30]
	0x03D79FD0 STR W20, [X19 + 0x20]
	0x03D79FD4 CBZ X8, 0x3D79FF4
	0x03D79FD8 LDR X3, [X8 + 0x18]
	0x03D79FDC LDR X0, [X8 + 0x40]
	0x03D79FE0 LDR X2, [X8 + 0x28]
	0x03D79FE4 MOV X1, X19
	0x03D79FE8 LDP X20, X19, [X31 + 0x10]
	0x03D79FEC LDP X30, X21, [X31], #0x20
	0x03D79FF0 BR X3
	0x03D79FF4 LDP X20, X19, [X31 + 0x10]
	0x03D79FF8 LDP X30, X21, [X31], #0x20
	0x03D79FFC RET
	0x03D7A000 STP X30, X21, [X31 - 0x20]!
	0x03D7A004 STP X20, X19, [X31 + 0x10]
	0x03D7A008 MOV X21, X1
	0x03D7A00C MOVN W8, 0x0
	0x03D7A010 MOV X1, X31
	0x03D7A014 MOV W20, W2
	0x03D7A018 MOV X19, X0
	0x03D7A01C STR W8, [X0 + 0x10]
	0x03D7A020 BL 0x33BDD8C
	0x03D7A024 MOV X0, X19
	0x03D7A028 MOV X1, X21
	0x03D7A02C BL 0x3D79D24
	0x03D7A030 LDR W8, [X19 + 0x20]
	0x03D7A034 CMP W8, W20
	0x03D7A038 B.EQ 0x3D7A064
	0x03D7A03C LDR X8, [X19 + 0x30]
	0x03D7A040 STR W20, [X19 + 0x20]
	0x03D7A044 CBZ X8, 0x3D7A064
	0x03D7A048 LDR X3, [X8 + 0x18]
	0x03D7A04C LDR X0, [X8 + 0x40]
	0x03D7A050 LDR X2, [X8 + 0x28]
	0x03D7A054 MOV X1, X19
	0x03D7A058 LDP X20, X19, [X31 + 0x10]
	0x03D7A05C LDP X30, X21, [X31], #0x20
	0x03D7A060 BR X3
	0x03D7A064 LDP X20, X19, [X31 + 0x10]
	0x03D7A068 LDP X30, X21, [X31], #0x20
	0x03D7A06C RET
	0x03D7A070 STR X30, [X31 - 0x30]!
	0x03D7A074 STP X22, X21, [X31 + 0x10]
	0x03D7A078 STP X20, X19, [X31 + 0x20]
	0x03D7A07C ADRP X21, 0x66D000
	0x03D7A080 LDRB W8, [X21 + 0xD80]
	0x03D7A084 MOV X19, X1
	0x03D7A088 MOV X20, X0
	0x03D7A08C TBNZ X8, 0x0, 0x3D7A0A4
	0x03D7A090 ADRP X0, 0x37A000
	0x03D7A094 LDR X0, [X0 + 0xE70]
	0x03D7A098 BL 0x1C16CF4
	0x03D7A09C MOVZ W8, 0x1
	0x03D7A0A0 STRB W8, [X21 + 0xD80]
	0x03D7A0A4 ADRP X22, 0x37A000
	0x03D7A0A8 LDR X21, [X20 + 0x18]!
	0x03D7A0AC LDR X22, [X22 + 0xE70]
	0x03D7A0B0 MOV X0, X21
	0x03D7A0B4 MOV X1, X19
	0x03D7A0B8 MOV X2, X31
	0x03D7A0BC BL 0x33C0DE4
	0x03D7A0C0 MOV X8, X0
	0x03D7A0C4 CBZ X0, 0x3D7A0D8
	0x03D7A0C8 LDR X1, [X22]
	0x03D7A0CC LDR X9, [X8]
	0x03D7A0D0 CMP X9, X1
	0x03D7A0D4 B.NE 0x3D7A104
	0x03D7A0D8 MOV X0, X20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x66F000
	011 Move W8, [X21+3440]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x3EE000
	019 Move X0, [X0+1568]
	020 Call 0x1C17CF4
	021 Move X0, 0x37C000
	022 Move X0, [X0+3696]
	023 Call 0x1C17CF4
	024 Move X0, 0x3EF000
	025 Move X0, [X0+40]
	026 Call 0x1C17CF4
	027 Move X0, 0x3EF000
	028 Move X0, [X0+48]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3440], W8
	032 Move X26, 0x37C000
	033 Move X25, 0x3EF000
	034 Move X24, 0x3EE000
	035 Move X23, 0x3EF000
	036 Move X26, [X26+3696]
	037 Move X25, [X25+40]
	038 Move X24, [X24+1568]
	039 Move X23, [X23+48]
	040 Move X0, X19
	041 Call MultiColumnListView.get_viewController, X0
	042 Compare X0, 0
	043 JumpIfEqual {78}
	044 Move X0, X19
	045 Call MultiColumnListView.get_viewController, X0
	046 Compare X0, 0
	047 JumpIfEqual {151}
	048 Move X21, [X0+72]
	049 Move X0, [X26]
	050 Call 0x1C17F10
	051 Move X2, [X25]
	052 Move X1, X19
	053 Move X3, X31
	054 Move X22, X0
	055 Call Action..ctor, X0, X1, X2
	056 Compare X21, 0
	057 JumpIfEqual {151}
	058 Move X0, X21
	059 Move X1, X22
	060 Call MultiColumnController.remove_columnSortingChanged, X0, X1
	061 Move X0, X19
	062 Call MultiColumnListView.get_viewController, X0
	063 Compare X0, 0
	064 JumpIfEqual {151}
	065 Move X21, [X0+72]
	066 Move X0, [X24]
	067 Call 0x1C17F10
	068 Move X2, [X23]
	069 Move X1, X19
	070 Move X3, X31
	071 Move X22, X0
	072 Call Action`2<Object, Object>..ctor, X0, X1, X2
	073 Compare X21, 0
	074 JumpIfEqual {151}
	075 Move X0, X21
	076 Move X1, X22
	077 Call MultiColumnController.remove_headerContextMenuPopulateEvent, X0, X1
	078 Move X0, X19
	079 Move X1, X20
	080 Move X2, X31
	081 Call BaseListView.SetViewController, X0, X1
	082 Move X0, X19
	083 Call MultiColumnListView.get_viewController, X0
	084 Compare X0, 0
	085 JumpIfEqual {141}
	086 Move X0, X19
	087 Call MultiColumnListView.get_viewController, X0
	088 Compare X0, 0
	089 JumpIfEqual {151}
	090 Move X1, X31
	091 Call MultiColumnListViewController.get_header, X0
	092 Compare X0, 0
	093 JumpIfEqual {151}
	094 Move W1, [X19+1344]
	095 Move X2, X31
	096 Call MultiColumnCollectionHeader.set_sortingEnabled, X0, X1
	097 Move X0, X19
	098 Call MultiColumnListView.get_viewController, X0
	099 Compare X0, 0
	100 JumpIfEqual {151}
	101 Move X20, [X0+72]
	102 Move X0, [X26]
	103 Call 0x1C17F10
	104 Move X2, [X25]
	105 Move X1, X19
	106 Move X3, X31
	107 Move X21, X0
	108 Call Action..ctor, X0, X1, X2
	109 Compare X20, 0
	110 JumpIfEqual {151}
	111 Move X0, X20
	112 Move X1, X21
	113 Call MultiColumnController.add_columnSortingChanged, X0, X1
	114 Move X0, X19
	115 Call MultiColumnListView.get_viewController, X0
	116 Compare X0, 0
	117 JumpIfEqual {151}
	118 Move X20, [X0+72]
	119 Move X0, [X24]
	120 Call 0x1C17F10
	121 Move X2, [X23]
	122 Move X1, X19
	123 Move X3, X31
	124 Move X21, X0
	125 Call Action`2<Object, Object>..ctor, X0, X1, X2
	126 Compare X20, 0
	127 JumpIfEqual {151}
	128 Move X0, X20
	129 Move X1, X21
	130 Move X20, [X31+64]
	131 Move X19, [X31+72]
	132 Move X22, [X31+48]
	133 Move X21, [X31+56]
	134 Move X24, [X31+32]
	135 Move X23, [X31+40]
	136 Move X26, [X31+16]
	137 Move X25, [X31+24]
	138 Move X30, [X31+80]
	139 Call MultiColumnController.add_headerContextMenuPopulateEvent, X0, X1
	140 Return 
	141 Move X20, [X31+64]
	142 Move X19, [X31+72]
	143 Move X22, [X31+48]
	144 Move X21, [X31+56]
	145 Move X24, [X31+32]
	146 Move X23, [X31+40]
	147 Move X26, [X31+16]
	148 Move X25, [X31+24]
	149 Move X30, [X31+80]
	150 Return 
	151 Call 0x1C17F20

Method: System.Void CreateVirtualizationController()

Disassembly:
	0x03D7A0DC MOV X1, X8
	0x03D7A0E0 MOV X2, X21
	0x03D7A0E4 BL 0x1C24138
	0x03D7A0E8 CMP X21, X0
	0x03D7A0EC MOV X21, X0
	0x03D7A0F0 B.NE 0x3D7A0B0
	0x03D7A0F4 LDP X20, X19, [X31 + 0x20]
	0x03D7A0F8 LDP X22, X21, [X31 + 0x10]
	0x03D7A0FC LDR X30, [X31], #0x30
	0x03D7A100 RET
	0x03D7A104 MOV X0, X8
	0x03D7A108 BL 0x1C171E0
	0x03D7A10C STR X30, [X31 - 0x30]!
	0x03D7A110 STP X22, X21, [X31 + 0x10]
	0x03D7A114 STP X20, X19, [X31 + 0x20]
	0x03D7A118 ADRP X21, 0x66D000
	0x03D7A11C LDRB W8, [X21 + 0xD81]
	0x03D7A120 MOV X19, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x66E000
	006 Move X21, 0x3EE000
	007 Move W8, [X20+3441]
	008 Move X21, [X21+56]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3EE000
	015 Move X0, [X0+56]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3441], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x21A0CE8, X0
	026 Return 

Method: System.Void RaiseColumnSortingChanged()

Disassembly:
	0x03D79BF4 LDP X22, X21, [X31 + 0xB0]
	0x03D79BF8 LDP X30, X23, [X31 + 0xA0]
	0x03D79BFC ADD X31, X31, 0xD0
	0x03D79C00 RET
	0x03D79C04 BL 0x1C16F20
	0x03D79C08 MOV X0, X19
	0x03D79C0C BL 0x1C171E0

ISIL:
	001 Move X8, [X0+1368]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X2, [X8+24]
	005 Move X0, [X8+64]
	006 Move X1, [X8+40]
	007 CallNoReturn X2
	008 Return 

Method: System.Void RaiseHeaderContextMenuPopulate(UnityEngine.UIElements.ContextualMenuPopulateEvent evt, UnityEngine.UIElements.Column column)

Disassembly:
	0x03D7A124 MOV X20, X0
	0x03D7A128 TBNZ X8, 0x0, 0x3D7A140
	0x03D7A12C ADRP X0, 0x37A000
	0x03D7A130 LDR X0, [X0 + 0xE70]
	0x03D7A134 BL 0x1C16CF4
	0x03D7A138 MOVZ W8, 0x1
	0x03D7A13C STRB W8, [X21 + 0xD81]

ISIL:
	001 Move X8, [X0+1376]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X4, [X8+24]
	005 Move X0, [X8+64]
	006 Move X3, [X8+40]
	007 CallNoReturn X4
	008 Return 

