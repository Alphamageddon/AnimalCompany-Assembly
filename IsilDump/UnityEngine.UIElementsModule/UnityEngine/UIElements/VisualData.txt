Type: UnityEngine.UIElements.VisualData

Method: UnityEngine.UIElements.VisualData Copy()

Disassembly:
	0x03DFD74C LDR X8, [X8]
	0x03DFD750 FMOV S3, 8
	0x03DFD754 FMUL S0, S1, S0
	0x03DFD758 LDR X8, [X8 + 0xB8]
	0x03DFD75C LDR V2, [X8]
	0x03DFD760 ADRP X8, 0x320000
	0x03DFD764 LDR X8, [X8 + 0xB10]

ISIL:
	001 Move [X31-16], X30
	002 Move X1, X0
	003 Move X0, X8
	004 Move W2, 208
	005 Call 0x3EB2AC0
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Void CopyFrom(ref UnityEngine.UIElements.VisualData other)

Disassembly:
	0x03DFD768 FMUL S2, S2, S3
	0x03DFD76C FCMP S0, S2
	0x03DFD770 LDR X8, [X8]
	0x03DFD774 FCSEL S0, S0, S2, GT
	0x03DFD778 FCMP S1, S0

ISIL:
	001 Move [X31-16], X30
	002 Move W2, 208
	003 Call 0x3EB2B30
	004 Move X30, [X31+16]
	005 Return 

Method: System.Boolean op_Equality(UnityEngine.UIElements.VisualData lhs, UnityEngine.UIElements.VisualData rhs)

Disassembly:
	0x03DFD77C CSEL X20, X20, X8, MI
	0x03DFD780 B 0x3DFD7AC
	0x03DFD784 ADRP X8, 0x320000
	0x03DFD788 LDR X8, [X8 + 0xB08]
	0x03DFD78C LDR X20, [X8]
	0x03DFD790 B 0x3DFD7AC
	0x03DFD794 ADRP X8, 0x368000
	0x03DFD798 LDR X8, [X8 + 0x5C8]
	0x03DFD79C B 0x3DFD7A8
	0x03DFD7A0 ADRP X8, 0x322000
	0x03DFD7A4 LDR X8, [X8 + 0xFF0]
	0x03DFD7A8 LDR X21, [X8]
	0x03DFD7AC MOV X0, X21
	0x03DFD7B0 MOV X1, X20
	0x03DFD7B4 MOV X2, X31
	0x03DFD7B8 BL 0x321B938
	0x03DFD7BC LDP X20, X19, [X31 + 0x30]
	0x03DFD7C0 LDP X22, X21, [X31 + 0x20]
	0x03DFD7C4 LDR X30, [X31 + 0x18]
	0x03DFD7C8 LDR V8, [X31 + 0x10]
	0x03DFD7CC ADD X31, X31, 0x40
	0x03DFD7D0 RET
	0x03DFD7D4 BL 0x1C16F20
	0x03DFD7D8 STR X30, [X31 - 0x20]!
	0x03DFD7DC STP X20, X19, [X31 + 0x10]
	0x03DFD7E0 STR X1, [X0]
	0x03DFD7E4 ADRP X20, 0x5DB000
	0x03DFD7E8 LDRB W8, [X20 + 0xA1F]
	0x03DFD7EC MOV X19, X0
	0x03DFD7F0 CBNZ W8, 0x3DFD808
	0x03DFD7F4 ADRP X0, 0x2F6000
	0x03DFD7F8 LDR X0, [X0 + 0x5A0]
	0x03DFD7FC BL 0x1C16CF4
	0x03DFD800 MOVZ W8, 0x1
	0x03DFD804 STRB W8, [X20 + 0xA1F]
	0x03DFD808 ADRP X8, 0x2F6000
	0x03DFD80C LDR X8, [X8 + 0x5A0]
	0x03DFD810 LDR X8, [X8]
	0x03DFD814 LDR X8, [X8 + 0xB8]
	0x03DFD818 LDR V0, [X8 + 0x48]
	0x03DFD81C LDR V1, [X8 + 0x50]
	0x03DFD820 STRB W31, [X19 + 0x14]
	0x03DFD824 STR D0, [X19 + 0x8]
	0x03DFD828 STR S1, [X19 + 0x10]
	0x03DFD82C LDP X20, X19, [X31 + 0x10]
	0x03DFD830 LDR X30, [X31], #0x20
	0x03DFD834 RET
	0x03DFD838 SUB X31, X31, 0x30
	0x03DFD83C STP X30, X21, [X31 + 0x10]
	0x03DFD840 STP X20, X19, [X31 + 0x20]
	0x03DFD844 FMOV S0, W31
	0x03DFD848 MOV X0, X31
	0x03DFD84C MOV X19, X8
	0x03DFD850 BL 0x3DE1F44
	0x03DFD854 ADRP X21, 0x5DB000
	0x03DFD858 LDRB W8, [X21 + 0xA1F]
	0x03DFD85C MOV X20, X0
	0x03DFD860 STRB W31, [X31 + 0xA]
	0x03DFD864 STRH W31, [X31 + 0x8]
	0x03DFD868 CBNZ W8, 0x3DFD880
	0x03DFD86C ADRP X0, 0x2F6000
	0x03DFD870 LDR X0, [X0 + 0x5A0]
	0x03DFD874 BL 0x1C16CF4
	0x03DFD878 MOVZ W8, 0x1
	0x03DFD87C STRB W8, [X21 + 0xA1F]
	0x03DFD880 ADRP X8, 0x2F6000
	0x03DFD884 LDR X8, [X8 + 0x5A0]
	0x03DFD888 LDRH W9, [X31 + 0x8]
	0x03DFD88C LDRB W10, [X31 + 0xA]
	0x03DFD890 LDP X30, X21, [X31 + 0x10]
	0x03DFD894 LDR X8, [X8]
	0x03DFD898 LDR X8, [X8 + 0xB8]
	0x03DFD89C LDR V0, [X8 + 0x48]
	0x03DFD8A0 LDR V1, [X8 + 0x50]
	0x03DFD8A4 STRH W9, [X31 + 0xC]
	0x03DFD8A8 AND W8, W10, 0xFF
	0x03DFD8AC AND W9, W9, 0xFFFF
	0x03DFD8B0 STR X20, [X19]
	0x03DFD8B4 STRB W31, [X19 + 0x14]
	0x03DFD8B8 STR D0, [X19 + 0x8]
	0x03DFD8BC STR S1, [X19 + 0x10]
	0x03DFD8C0 STRB W8, [X19 + 0x17]
	0x03DFD8C4 STURH W9, [X19 + 0x15]
	0x03DFD8C8 LDP X20, X19, [X31 + 0x20]
	0x03DFD8CC STRB W10, [X31 + 0xE]
	0x03DFD8D0 ADD X31, X31, 0x30
	0x03DFD8D4 RET
	0x03DFD8D8 SUB X31, X31, 0x50
	0x03DFD8DC STP X30, X19, [X31 + 0x40]
	0x03DFD8E0 MOV X19, X8
	0x03DFD8E4 ADD X8, X31, 0x0
	0x03DFD8E8 BL 0x3DFD838
	0x03DFD8EC MOVZ W10, 0x1
	0x03DFD8F0 LDR W8, [X31 + 0x10]
	0x03DFD8F4 LDURH W9, [X31 + 0x15]
	0x03DFD8F8 STRB W10, [X19 + 0x14]
	0x03DFD8FC LDRB W10, [X31 + 0x17]
	0x03DFD900 LDR V0, [X31]
	0x03DFD904 STRH W9, [X31 + 0x1C]
	0x03DFD908 STR W8, [X31 + 0x30]
	0x03DFD90C STR W8, [X19 + 0x10]
	0x03DFD910 AND W8, W10, 0xFF
	0x03DFD914 AND W9, W9, 0xFFFF
	0x03DFD918 STR V0, [X19]
	0x03DFD91C STRB W8, [X19 + 0x17]
	0x03DFD920 STURH W9, [X19 + 0x15]
	0x03DFD924 LDP X30, X19, [X31 + 0x40]
	0x03DFD928 STRB W10, [X31 + 0x1E]
	0x03DFD92C STR V0, [X31 + 0x2]
	0x03DFD930 ADD X31, X31, 0x50
	0x03DFD934 RET
	0x03DFD938 LDR X0, [X0]
	0x03DFD93C RET
	0x03DFD940 STR X1, [X0]
	0x03DFD944 RET
	0x03DFD948 LDP S0, S1, [X0 + 0x8]
	0x03DFD94C LDR V2, [X0 + 0x10]
	0x03DFD950 RET
	0x03DFD954 SUB X31, X31, 0x50
	0x03DFD958 STR X30, [X31 + 0x40]
	0x03DFD95C LDR X8, [X0 + 0x10]
	0x03DFD960 LDR V0, [X0]
	0x03DFD964 ADD X0, X31, 0x20
	0x03DFD968 STR X8, [X31 + 0x30]
	0x03DFD96C STR V0, [X31 + 0x2]
	0x03DFD970 LDR X8, [X1 + 0x10]
	0x03DFD974 LDR V0, [X1]
	0x03DFD978 ADD X1, X31, 0x0
	0x03DFD97C STR X8, [X31 + 0x10]
	0x03DFD980 STR V0, [X31]
	0x03DFD984 BL 0x3DFBDD0
	0x03DFD988 LDR X30, [X31 + 0x40]
	0x03DFD98C ORN W8, W31, W0, 0x0
	0x03DFD990 AND W0, W8, 0x1
	0x03DFD994 ADD X31, X31, 0x50
	0x03DFD998 RET
	0x03DFD99C SUB X31, X31, 0x50
	0x03DFD9A0 STR X30, [X31 + 0x40]
	0x03DFD9A4 LDR X8, [X1 + 0x10]
	0x03DFD9A8 LDR V0, [X1]
	0x03DFD9AC ADD X1, X31, 0x0
	0x03DFD9B0 STR X8, [X31 + 0x30]
	0x03DFD9B4 STR V0, [X31 + 0x2]
	0x03DFD9B8 LDR X8, [X0 + 0x10]
	0x03DFD9BC LDR V0, [X0]
	0x03DFD9C0 ADD X0, X31, 0x20
	0x03DFD9C4 STR X8, [X31 + 0x10]
	0x03DFD9C8 STR V0, [X31]
	0x03DFD9CC BL 0x3DFBDD0
	0x03DFD9D0 LDR X30, [X31 + 0x40]
	0x03DFD9D4 AND W0, W0, 0x1
	0x03DFD9D8 ADD X31, X31, 0x50
	0x03DFD9DC RET
	0x03DFD9E0 SUB X31, X31, 0x60
	0x03DFD9E4 STP X30, X21, [X31 + 0x40]
	0x03DFD9E8 STP X20, X19, [X31 + 0x50]
	0x03DFD9EC ADRP X21, 0x5EB000
	0x03DFD9F0 LDRB W8, [X21 + 0x2B9]
	0x03DFD9F4 MOV X20, X1
	0x03DFD9F8 MOV X19, X0
	0x03DFD9FC TBNZ X8, 0x0, 0x3DFDA14
	0x03DFDA00 ADRP X0, 0x321000
	0x03DFDA04 LDR X0, [X0 + 0xE18]
	0x03DFDA08 BL 0x1C16CF4
	0x03DFDA0C MOVZ W8, 0x1
	0x03DFDA10 STRB W8, [X21 + 0x2B9]
	0x03DFDA14 CBZ X20, 0x3DFDA30
	0x03DFDA18 ADRP X8, 0x321000
	0x03DFDA1C LDR X8, [X8 + 0xE18]
	0x03DFDA20 LDR X9, [X20]
	0x03DFDA24 LDR X8, [X8]
	0x03DFDA28 CMP X9, X8
	0x03DFDA2C B.EQ 0x3DFDA38
	0x03DFDA30 MOV W0, W31
	0x03DFDA34 B 0x3DFDA6C
	0x03DFDA38 MOV X0, X20
	0x03DFDA3C BL 0x1C16E08
	0x03DFDA40 LDR X8, [X0 + 0x10]
	0x03DFDA44 LDR V0, [X0]
	0x03DFDA48 ADD X0, X31, 0x20
	0x03DFDA4C ADD X1, X31, 0x0
	0x03DFDA50 STR X8, [X31 + 0x30]
	0x03DFDA54 STR V0, [X31 + 0x2]
	0x03DFDA58 LDR X8, [X19 + 0x10]
	0x03DFDA5C LDR V0, [X19]
	0x03DFDA60 STR X8, [X31 + 0x10]
	0x03DFDA64 STR V0, [X31]
	0x03DFDA68 BL 0x3DFBDD0
	0x03DFDA6C LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Subtract X31, X31, 544
	007 Move D0, [X1]
	008 Move D3, [X1+8]
	009 Move D1, [X0]
	010 Move D2, [X0+8]
	011 Move X8, -53555200
	012 Move V8, [X8+3872]
	013 Subtract V0, V1, V0
	014 NotImplemented "Instruction INVALID not yet implemented."
	015 Subtract V1, V2, V3
	016 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	017 NotImplemented "Instruction INVALID not yet implemented."
	018 Add V0, V0, V2
	019 Add V0, V1, V0
	020 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	021 Add V0, V1, V0
	022 NotImplemented "Instruction FCMP not yet implemented."
	023 Move X20, X0
	024 Move X19, X1
	025 Add X0, X31, 336
	026 Move W2, 208
	027 Move X1, X20
	028 Call 0x3EB2AC0
	029 Move V0, [X31+352]
	030 Move V1, [X31+368]
	031 Add X0, X31, 128
	032 Move W2, 208
	033 Move X1, X19
	034 Move [X31+96], V0
	035 Move [X31+104], V1
	036 Call 0x3EB2AC0
	037 Move V0, [X31+144]
	038 Move V1, [X31+160]
	039 Add X0, X31, 96
	040 Add X1, X31, 64
	041 Move X2, X31
	042 Move [X31+64], V0
	043 Move [X31+72], V1
	044 Call Background.op_Equality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {192}
	049 Move X0, [X20+48]
	050 Move W1, [X20+56]
	051 Move X2, [X19+48]
	052 Move W3, [X19+56]
	053 Move X4, X31
	054 Call BackgroundPosition.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {192}
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move W1, [X20+68]
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 Move W3, [X19+68]
	063 Move X4, X31
	064 Call BackgroundPosition.op_Equality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {192}
	069 Move X0, [X20+72]
	070 Move X1, [X19+72]
	071 Move X2, X31
	072 Call BackgroundRepeat.op_Equality, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {192}
	077 Add X0, X31, 336
	078 Move W2, 208
	079 Move X1, X20
	080 Call 0x3EB2AC0
	081 Move V0, [X31+26]
	082 Move W8, [X31+432]
	083 Add X0, X31, 128
	084 Move W2, 208
	085 Move X1, X19
	086 Move [X31+2], V0
	087 Move [X31+48], W8
	088 Call 0x3EB2AC0
	089 Move V0, [X31+13]
	090 Move W8, [X31+224]
	091 Add X0, X31, 32
	092 Add X1, X31, 0
	093 Move X2, X31
	094 Move [X31], V0
	095 Move [X31+16], W8
	096 Call BackgroundSize.op_Equality, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {192}
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 Subtract V0, V0, V2
	106 NotImplemented "Instruction INVALID not yet implemented."
	107 Subtract V1, V1, V3
	108 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	109 NotImplemented "Instruction INVALID not yet implemented."
	110 Add V0, V0, V2
	111 Add V0, V1, V0
	112 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	113 Add V0, V1, V0
	114 NotImplemented "Instruction FCMP not yet implemented."
	115 Move V0, [X20+116]
	116 Move V1, [X19+116]
	117 Move W0, W31
	118 NotImplemented "Instruction FCMP not yet implemented."
	119 Move W8, [X20+120]
	120 Move W9, [X19+120]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move V0, [X20+124]
	123 Move V1, [X19+124]
	124 Move W0, W31
	125 NotImplemented "Instruction FCMP not yet implemented."
	126 Move W8, [X20+128]
	127 Move W9, [X19+128]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 Subtract V0, V0, V2
	134 NotImplemented "Instruction INVALID not yet implemented."
	135 Subtract V1, V1, V3
	136 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	137 NotImplemented "Instruction INVALID not yet implemented."
	138 Add V0, V0, V2
	139 Add V0, V1, V0
	140 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	141 Add V0, V1, V0
	142 NotImplemented "Instruction FCMP not yet implemented."
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 Subtract V0, V0, V2
	148 NotImplemented "Instruction INVALID not yet implemented."
	149 Subtract V1, V1, V3
	150 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	151 NotImplemented "Instruction INVALID not yet implemented."
	152 Add V0, V0, V2
	153 Add V0, V1, V0
	154 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	155 Add V0, V1, V0
	156 NotImplemented "Instruction FCMP not yet implemented."
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 Subtract V0, V0, V2
	162 NotImplemented "Instruction INVALID not yet implemented."
	163 Subtract V1, V1, V3
	164 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	165 NotImplemented "Instruction INVALID not yet implemented."
	166 Add V0, V0, V2
	167 Add V0, V1, V0
	168 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	169 Add V0, V1, V0
	170 NotImplemented "Instruction FCMP not yet implemented."
	171 Move V0, [X20+180]
	172 Move V1, [X19+180]
	173 Move W0, W31
	174 NotImplemented "Instruction FCMP not yet implemented."
	175 Move W8, [X20+184]
	176 Move W9, [X19+184]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move V0, [X20+188]
	179 Move V1, [X19+188]
	180 Move W0, W31
	181 NotImplemented "Instruction FCMP not yet implemented."
	182 Move W8, [X20+192]
	183 Move W9, [X19+192]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move V0, [X20+196]
	186 Move V1, [X19+196]
	187 NotImplemented "Instruction FCMP not yet implemented."
	188 Move W8, [X20+200]
	189 Move W9, [X19+200]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 NotImplemented "Instruction CSET not yet implemented."
	192 Move W0, W31
	193 Add X31, X31, 544
	194 Move X20, [X31+32]
	195 Move X19, [X31+40]
	196 Move X29, [X31+16]
	197 Move X30, [X31+24]
	198 Move V8, [X31+48]
	199 Return X0

Method: System.Boolean Equals(UnityEngine.UIElements.VisualData other)

Disassembly:
	0x03DFDA70 LDP X30, X21, [X31 + 0x40]
	0x03DFDA74 AND W0, W0, 0x1
	0x03DFDA78 ADD X31, X31, 0x60
	0x03DFDA7C RET
	0x03DFDA80 STP X30, X21, [X31 - 0x20]!
	0x03DFDA84 STP X20, X19, [X31 + 0x10]
	0x03DFDA88 ADRP X20, 0x5EB000
	0x03DFDA8C ADRP X21, 0x2F6000
	0x03DFDA90 LDRB W8, [X20 + 0x2BB]
	0x03DFDA94 LDR X21, [X21 + 0xDD8]
	0x03DFDA98 MOV X19, X0
	0x03DFDA9C TBNZ X8, 0x0, 0x3DFDAB4
	0x03DFDAA0 ADRP X0, 0x2F6000
	0x03DFDAA4 LDR X0, [X0 + 0xDD8]
	0x03DFDAA8 BL 0x1C16CF4
	0x03DFDAAC MOVZ W8, 0x1
	0x03DFDAB0 STRB W8, [X20 + 0x2BB]
	0x03DFDAB4 MOV X0, X19
	0x03DFDAB8 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 448
	002 Move [X31+416], X29
	003 Move [X31+432], X30
	004 Move [X31+440], X19
	005 Move X19, X0
	006 Add X0, X31, 208
	007 Move W2, 208
	008 Call 0x3EB2AC0
	009 Add X0, X31, 0
	010 Move W2, 208
	011 Move X1, X19
	012 Call 0x3EB2AC0
	013 Add X0, X31, 208
	014 Add X1, X31, 0
	015 Call VisualData.op_Equality, X0, X1
	016 Move X30, [X31+432]
	017 Move X19, [X31+440]
	018 Move X29, [X31+416]
	019 And W0, W0, 1
	020 Add X31, X31, 448
	021 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03DFDABC BL 0x3DE2050
	0x03DFDAC0 MOV X20, X0
	0x03DFDAC4 ADD X0, X19, 0x8
	0x03DFDAC8 MOV X1, X31
	0x03DFDACC MOV X2, X31
	0x03DFDAD0 MOV X3, X31
	0x03DFDAD4 BL 0x2430694
	0x03DFDAD8 LDR X1, [X21]
	0x03DFDADC MOV X2, X0
	0x03DFDAE0 MOV X0, X20
	0x03DFDAE4 LDP X20, X19, [X31 + 0x10]
	0x03DFDAE8 MOV X3, X31
	0x03DFDAEC LDP X30, X21, [X31], #0x20
	0x03DFDAF0 B 0x32274B8
	0x03DFDAF4 STP X30, X19, [X31 - 0x10]!
	0x03DFDAF8 MOV X1, X31
	0x03DFDAFC MOV X19, X0
	0x03DFDB00 BL 0x3DE1EC0
	0x03DFDB04 LDP S1, S2, [X19 + 0x8]
	0x03DFDB08 LDR V3, [X19 + 0x10]
	0x03DFDB0C MOV X0, X31
	0x03DFDB10 LDP X30, X19, [X31], #0x10
	0x03DFDB14 B 0x3C2A758
	0x03DFDB18 STR D10, [X31 - 0x30]!
	0x03DFDB1C STP D9, D8, [X31 + 0x8]
	0x03DFDB20 STR X30, [X31 + 0x18]
	0x03DFDB24 STP X20, X19, [X31 + 0x20]
	0x03DFDB28 ADRP X20, 0x5EB000
	0x03DFDB2C LDRB W8, [X20 + 0x2BC]
	0x03DFDB30 MOV V10.16B, V2.16B
	0x03DFDB34 MOV V8.16B, V1.16B
	0x03DFDB38 MOV V9.16B, V0.16B
	0x03DFDB3C MOV X19, X0
	0x03DFDB40 TBNZ X8, 0x0, 0x3DFDB64
	0x03DFDB44 ADRP X0, 0x2F6000
	0x03DFDB48 LDR X0, [X0 + 0xA28]
	0x03DFDB4C BL 0x1C16CF4
	0x03DFDB50 ADRP X0, 0x36C000
	0x03DFDB54 LDR X0, [X0 + 0xD10]
	0x03DFDB58 BL 0x1C16CF4
	0x03DFDB5C MOVZ W8, 0x1
	0x03DFDB60 STRB W8, [X20 + 0x2BC]

ISIL:
	001 Subtract X31, X31, 464
	002 Move [X31+416], X29
	003 Move [X31+432], X30
	004 Move [X31+440], X21
	005 Move [X31+448], X20
	006 Move [X31+456], X19
	007 Move X21, 0x5EC000
	008 Move W8, [X21+691]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x36D000
	016 Move X0, [X0+3280]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+691], W8
	020 Compare X20, 0
	021 JumpIfEqual {27}
	022 Move X8, 0x36D000
	023 Move X8, [X8+3280]
	024 Move X9, [X20]
	025 Move X8, [X8]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W0, W31
	028 Move X0, X20
	029 Call 0x1C17E08
	030 Move X1, X0
	031 Add X0, X31, 208
	032 Move W2, 208
	033 Call 0x3EB2B30
	034 Add X0, X31, 0
	035 Move W2, 208
	036 Move X1, X19
	037 Call 0x3EB2AC0
	038 Add X0, X31, 208
	039 Add X1, X31, 0
	040 Call VisualData.op_Equality, X0, X1
	041 Move X20, [X31+448]
	042 Move X19, [X31+456]
	043 Move X30, [X31+432]
	044 Move X21, [X31+440]
	045 Move X29, [X31+416]
	046 And W0, W0, 1
	047 Add X31, X31, 464
	048 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03DFDB64 ADRP X20, 0x5DC000
	0x03DFDB68 LDRB W8, [X20 + 0x5AA]
	0x03DFDB6C CBNZ W8, 0x3DFDB84
	0x03DFDB70 ADRP X0, 0x2FD000
	0x03DFDB74 LDR X0, [X0 + 0x4B8]
	0x03DFDB78 BL 0x1C16CF4
	0x03DFDB7C MOVZ W8, 0x1
	0x03DFDB80 STRB W8, [X20 + 0x5AA]
	0x03DFDB84 ADRP X8, 0x2FD000
	0x03DFDB88 LDR X8, [X8 + 0x4B8]
	0x03DFDB8C ADRP X9, 0xFFFFFFFFFCCED000
	0x03DFDB90 LDR V0, [X9 + 0x240]
	0x03DFDB94 FABS S2, S10
	0x03DFDB98 LDR X8, [X8]
	0x03DFDB9C FMOV S3, 1
	0x03DFDBA0 FMAX S2, S2, S3
	0x03DFDBA4 FMUL S0, S2, S0
	0x03DFDBA8 LDR X8, [X8 + 0xB8]
	0x03DFDBAC FMOV S2, 8
	0x03DFDBB0 FMOV S1, -1
	0x03DFDBB4 FADD S1, S10, S1
	0x03DFDBB8 LDR V3, [X8]
	0x03DFDBBC FABS S1, S1
	0x03DFDBC0 FMUL S2, S3, S2
	0x03DFDBC4 FCMP S0, S2
	0x03DFDBC8 FCSEL S0, S0, S2, GT
	0x03DFDBCC FCMP S1, S0
	0x03DFDBD0 B.MI 0x3DFDC04
	0x03DFDBD4 ADRP X8, 0x2F6000
	0x03DFDBD8 LDR X8, [X8 + 0xA28]
	0x03DFDBDC ADRP X20, 0x36C000
	0x03DFDBE0 LDR X0, [X8]
	0x03DFDBE4 LDR W8, [X0 + 0xE0]
	0x03DFDBE8 LDR X20, [X20 + 0xD10]
	0x03DFDBEC CBNZ W8, 0x3DFDBF4
	0x03DFDBF0 BL 0x1C16DFC
	0x03DFDBF4 LDR X0, [X20]
	0x03DFDBF8 MOV X1, X31
	0x03DFDBFC BL 0x3C06A04
	0x03DFDC00 FMOV S10, 1
	0x03DFDC04 STP S9, S8, [X19]
	0x03DFDC08 STR S10, [X19 + 0x8]
	0x03DFDC0C STRB W31, [X19 + 0xC]
	0x03DFDC10 LDP X20, X19, [X31 + 0x20]
	0x03DFDC14 LDR X30, [X31 + 0x18]
	0x03DFDC18 LDP D9, D8, [X31 + 0x8]
	0x03DFDC1C LDR V10, [X31], #0x30
	0x03DFDC20 RET
	0x03DFDC24 SUB X31, X31, 0x20
	0x03DFDC28 STP X30, X19, [X31 + 0x10]
	0x03DFDC2C ADRP X19, 0x5DB000
	0x03DFDC30 LDRB W8, [X19 + 0x85B]
	0x03DFDC34 CBNZ W8, 0x3DFDC4C
	0x03DFDC38 ADRP X0, 0x2F6000
	0x03DFDC3C LDR X0, [X0 + 0x5A0]
	0x03DFDC40 BL 0x1C16CF4
	0x03DFDC44 MOVZ W8, 0x1
	0x03DFDC48 STRB W8, [X19 + 0x85B]
	0x03DFDC4C ADRP X8, 0x2F6000
	0x03DFDC50 LDR X8, [X8 + 0x5A0]
	0x03DFDC54 ADD X0, X31, 0x0
	0x03DFDC58 LDR X8, [X8]
	0x03DFDC5C LDR X8, [X8 + 0xB8]
	0x03DFDC60 LDP S0, S1, [X8 + 0xC]
	0x03DFDC64 LDR V2, [X8 + 0x14]
	0x03DFDC68 STP X31, X31, [X31]
	0x03DFDC6C BL 0x3DFDB18
	0x03DFDC70 LDP X0, X1, [X31]
	0x03DFDC74 LDP X30, X19, [X31 + 0x10]
	0x03DFDC78 ADD X31, X31, 0x20
	0x03DFDC7C RET
	0x03DFDC80 STR X30, [X31 - 0x10]!
	0x03DFDC84 BL 0x3DFDC24
	0x03DFDC88 AND X8, X1, 0xFFFFFFFFFFFFFFFF
	0x03DFDC8C ORR X1, X8, 0x1FFFFFFFF
	0x03DFDC90 LDR X30, [X31], #0x10
	0x03DFDC94 RET
	0x03DFDC98 LDP S0, S1, [X0]
	0x03DFDC9C LDR V2, [X0 + 0x8]
	0x03DFDCA0 RET
	0x03DFDCA4 UBFM X8, X0, 0x20, 0x3F
	0x03DFDCA8 FMOV S0, W0
	0x03DFDCAC FMOV S1, W1
	0x03DFDCB0 UBFM X9, X2, 0x20, 0x3F
	0x03DFDCB4 FMOV S2, W2
	0x03DFDCB8 FMOV S3, W3
	0x03DFDCBC FSUB S0, S0, S2
	0x03DFDCC0 FSUB S1, S1, S3
	0x03DFDCC4 ADRP X10, 0xFFFFFFFFFCCEC000
	0x03DFDCC8 FMOV S2, W8
	0x03DFDCCC FMOV S3, W9
	0x03DFDCD0 FSUB S2, S2, S3
	0x03DFDCD4 LDR V3, [X10 + 0xF20]
	0x03DFDCD8 FMUL S0, S0, S0
	0x03DFDCDC FMUL S2, S2, S2
	0x03DFDCE0 FADD S0, S0, S2
	0x03DFDCE4 FMUL S1, S1, S1
	0x03DFDCE8 FADD S0, S1, S0
	0x03DFDCEC FCMP S0, S3
	0x03DFDCF0 CSET W0, PL
	0x03DFDCF4 RET
	0x03DFDCF8 LDR V0, [X0]
	0x03DFDCFC UBFM X8, X1, 0x20, 0x3F
	0x03DFDD00 FMOV S2, W8
	0x03DFDD04 FMOV S1, W1
	0x03DFDD08 FMOV X8, D0
	0x03DFDD0C UBFM X8, X8, 0x20, 0x3F
	0x03DFDD10 ADRP X9, 0xFFFFFFFFFCCEC000
	0x03DFDD14 UNIMPLEMENTED
	0x03DFDD18 UNIMPLEMENTED
	0x03DFDD1C FMOV S0, W8
	0x03DFDD20 FSUB S0, S2, S0
	0x03DFDD24 LDR V2, [X9 + 0xF20]
	0x03DFDD28 FSUB V1.2S, V1.2S, V3.2S
	0x03DFDD2C FMUL S0, S0, S0
	0x00000000 INVALID
	0x03DFDD34 FADD S0, S1, S0
	0x03DFDD38 MOV S1, V1.S[1]
	0x03DFDD3C FADD S0, S1, S0
	0x03DFDD40 FCMP S0, S2
	0x03DFDD44 CSET W0, MI
	0x03DFDD48 RET
	0x03DFDD4C STP X30, X21, [X31 - 0x20]!
	0x03DFDD50 STP X20, X19, [X31 + 0x10]
	0x03DFDD54 ADRP X21, 0x5EB000
	0x03DFDD58 LDRB W8, [X21 + 0x2BD]
	0x03DFDD5C MOV X20, X1
	0x03DFDD60 MOV X19, X0
	0x03DFDD64 TBNZ X8, 0x0, 0x3DFDD7C
	0x03DFDD68 ADRP X0, 0x321000
	0x03DFDD6C LDR X0, [X0 + 0xE20]
	0x03DFDD70 BL 0x1C16CF4
	0x03DFDD74 MOVZ W8, 0x1
	0x03DFDD78 STRB W8, [X21 + 0x2BD]
	0x03DFDD7C CBZ X20, 0x3DFDD98
	0x03DFDD80 ADRP X8, 0x321000
	0x03DFDD84 LDR X8, [X8 + 0xE20]
	0x03DFDD88 LDR X9, [X20]
	0x03DFDD8C LDR X8, [X8]
	0x03DFDD90 CMP X9, X8
	0x03DFDD94 B.EQ 0x3DFDDA0
	0x03DFDD98 MOV W0, W31
	0x03DFDD9C B 0x3DFDDFC
	0x03DFDDA0 MOV X0, X20
	0x03DFDDA4 BL 0x1C16E08
	0x03DFDDA8 LDR V0, [X0]
	0x03DFDDAC LDR V1, [X19]
	0x03DFDDB0 FMOV X8, D0
	0x03DFDDB4 FMOV X9, D1
	0x03DFDDB8 UBFM X8, X8, 0x20, 0x3F
	0x03DFDDBC UBFM X9, X9, 0x20, 0x3F
	0x03DFDDC0 UNIMPLEMENTED
	0x03DFDDC4 UNIMPLEMENTED
	0x03DFDDC8 FMOV S1, W8
	0x03DFDDCC ADRP X8, 0xFFFFFFFFFCCEC000
	0x03DFDDD0 FMOV S3, W9
	0x03DFDDD4 FSUB S1, S1, S3
	0x03DFDDD8 LDR V3, [X8 + 0xF20]
	0x03DFDDDC FSUB V0.2S, V2.2S, V0.2S
	0x03DFDDE0 FMUL S1, S1, S1
	0x00000000 INVALID
	0x03DFDDE8 FADD S1, S0, S1
	0x03DFDDEC MOV S0, V0.S[1]
	0x03DFDDF0 FADD S0, S0, S1
	0x03DFDDF4 FCMP S0, S3
	0x03DFDDF8 CSET W0, MI
	0x03DFDDFC LDP X20, X19, [X31 + 0x10]
	0x03DFDE00 LDP X30, X21, [X31], #0x20
	0x03DFDE04 RET
	0x03DFDE08 MOV X1, X31
	0x03DFDE0C MOV X2, X31
	0x03DFDE10 MOV X3, X31
	0x03DFDE14 B 0x2430694
	0x03DFDE18 SUB X31, X31, 0x20
	0x03DFDE1C LDR W9, [X0 + 0x14]
	0x03DFDE20 CBZ W9, 0x3DFDE30
	0x03DFDE24 STP X31, X31, [X31]
	0x03DFDE28 STR W31, [X31 + 0x10]
	0x03DFDE2C B 0x3DFDE40
	0x03DFDE30 LDR W9, [X0 + 0x10]
	0x03DFDE34 LDR V0, [X0]
	0x03DFDE38 STR W9, [X31 + 0x10]
	0x03DFDE3C STR V0, [X31]
	0x03DFDE40 LDR W9, [X31 + 0x10]
	0x03DFDE44 LDR V0, [X31]
	0x03DFDE48 STR W9, [X8 + 0x10]
	0x03DFDE4C STR V0, [X8]
	0x03DFDE50 ADD X31, X31, 0x20
	0x03DFDE54 RET
	0x03DFDE58 LDR W0, [X0 + 0x14]
	0x03DFDE5C RET
	0x03DFDE60 STP X31, X31, [X0]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move V0, [X0]
	013 Move X19, X0
	014 Add X8, X31, 0
	015 Add X0, X31, 0
	016 Move X1, X31
	017 Or X22, X8, 7
	018 Or X21, X8, 15
	019 Or X20, X8, 15
	020 Move [X31], V0
	021 Call Single.GetHashCode, X0
	022 Move W23, W0
	023 Move X0, X22
	024 Move X1, X31
	025 Call Single.GetHashCode, X0
	026 Move W24, W0
	027 Move X0, X21
	028 Move X1, X31
	029 Call Single.GetHashCode, X0
	030 Move W25, W0
	031 Move X0, X20
	032 Move X1, X31
	033 Call Single.GetHashCode, X0
	034 Xor W8, W23, W24
	035 Xor W8, W8, W25
	036 Xor W23, W8, W0
	037 Add X0, X19, 16
	038 Move X1, X31
	039 Call Background.GetHashCode, X0
	040 Move W26, 397
	041 Multiply W8, W23, W26
	042 Xor W23, W8, W0
	043 Add X0, X19, 48
	044 Move X1, X31
	045 Call BackgroundPosition.GetHashCode, X0
	046 Multiply W8, W23, W26
	047 Xor W23, W8, W0
	048 Add X0, X19, 60
	049 Move X1, X31
	050 Call BackgroundPosition.GetHashCode, X0
	051 Multiply W8, W23, W26
	052 Xor W23, W8, W0
	053 Add X0, X19, 72
	054 Move X1, X31
	055 Call BackgroundRepeat.GetHashCode, X0
	056 Multiply W8, W23, W26
	057 Xor W23, W8, W0
	058 Add X0, X19, 80
	059 Move X1, X31
	060 Call BackgroundSize.GetHashCode, X0
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 Multiply W8, W23, W26
	063 Xor W27, W8, W0
	064 Add X0, X31, 0
	065 Move X1, X31
	066 Move [X31], V0
	067 Call Single.GetHashCode, X0
	068 Move W23, W0
	069 Move X0, X22
	070 Move X1, X31
	071 Call Single.GetHashCode, X0
	072 Move W24, W0
	073 Move X0, X21
	074 Move X1, X31
	075 Call Single.GetHashCode, X0
	076 Move W25, W0
	077 Move X0, X20
	078 Move X1, X31
	079 Call Single.GetHashCode, X0
	080 Multiply W8, W27, W26
	081 Xor W8, W23, W8
	082 Xor W8, W8, W24
	083 Xor W8, W8, W25
	084 Xor W23, W8, W0
	085 Add X0, X19, 116
	086 Move X1, X31
	087 Call Single.GetHashCode, X0
	088 Move W8, [X19+120]
	089 Multiply W9, W0, W26
	090 Multiply W10, W23, W26
	091 Add X0, X19, 124
	092 Xor W8, W9, W8
	093 Move X1, X31
	094 Xor W23, W8, W10
	095 Call Single.GetHashCode, X0
	096 Move W8, [X19+128]
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 Multiply W9, W0, W26
	099 Multiply W10, W23, W26
	100 Xor W8, W9, W8
	101 Add X0, X31, 0
	102 Move X1, X31
	103 Xor W27, W8, W10
	104 Move [X31], V0
	105 Call Single.GetHashCode, X0
	106 Move W23, W0
	107 Move X0, X22
	108 Move X1, X31
	109 Call Single.GetHashCode, X0
	110 Move W24, W0
	111 Move X0, X21
	112 Move X1, X31
	113 Call Single.GetHashCode, X0
	114 Move W25, W0
	115 Move X0, X20
	116 Move X1, X31
	117 Call Single.GetHashCode, X0
	118 Multiply W8, W27, W26
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 Xor W8, W23, W8
	121 Xor W8, W8, W24
	122 Xor W8, W8, W25
	123 Xor W27, W8, W0
	124 Add X0, X31, 0
	125 Move X1, X31
	126 Move [X31], V0
	127 Call Single.GetHashCode, X0
	128 Move W23, W0
	129 Move X0, X22
	130 Move X1, X31
	131 Call Single.GetHashCode, X0
	132 Move W24, W0
	133 Move X0, X21
	134 Move X1, X31
	135 Call Single.GetHashCode, X0
	136 Move W25, W0
	137 Move X0, X20
	138 Move X1, X31
	139 Call Single.GetHashCode, X0
	140 Multiply W8, W27, W26
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 Xor W8, W23, W8
	143 Xor W8, W8, W24
	144 Xor W8, W8, W25
	145 Xor W24, W8, W0
	146 Add X0, X31, 0
	147 Move X1, X31
	148 Move [X31], V0
	149 Call Single.GetHashCode, X0
	150 Move W23, W0
	151 Move X0, X22
	152 Move X1, X31
	153 Call Single.GetHashCode, X0
	154 Move W22, W0
	155 Move X0, X21
	156 Move X1, X31
	157 Call Single.GetHashCode, X0
	158 Move W21, W0
	159 Move X0, X20
	160 Move X1, X31
	161 Call Single.GetHashCode, X0
	162 Multiply W8, W24, W26
	163 Xor W8, W23, W8
	164 Xor W8, W8, W22
	165 Xor W8, W8, W21
	166 Xor W20, W8, W0
	167 Add X0, X19, 180
	168 Move X1, X31
	169 Call Single.GetHashCode, X0
	170 Move W8, [X19+184]
	171 Multiply W9, W0, W26
	172 Multiply W10, W20, W26
	173 Add X0, X19, 188
	174 Xor W8, W9, W8
	175 Move X1, X31
	176 Xor W20, W8, W10
	177 Call Single.GetHashCode, X0
	178 Move W8, [X19+192]
	179 Multiply W9, W0, W26
	180 Multiply W10, W20, W26
	181 Add X0, X19, 196
	182 Xor W8, W9, W8
	183 Move X1, X31
	184 Xor W20, W8, W10
	185 Call Single.GetHashCode, X0
	186 Multiply W9, W20, W26
	187 Move W8, [X19+200]
	188 Xor W9, W9, W0
	189 Multiply W9, W9, W26
	190 Move X20, [X31+80]
	191 Move X19, [X31+88]
	192 Move X22, [X31+64]
	193 Move X21, [X31+72]
	194 Move X24, [X31+48]
	195 Move X23, [X31+56]
	196 Move X26, [X31+32]
	197 Move X25, [X31+40]
	198 Move X30, [X31+16]
	199 Move X27, [X31+24]
	200 Xor W0, W9, W8
	201 Add X31, X31, 96
	202 Return X0

