Type: UnityEngine.UIElements.AbstractProgressBar

Method: System.Void set_title(System.String value)

Disassembly:
	0x03D7BB20 BL 0x1C16DFC
	0x03D7BB24 LDR X0, [X21]
	0x03D7BB28 LDR X8, [X0 + 0xB8]
	0x03D7BB2C MOV X0, X19
	0x03D7BB30 MOV X2, X31
	0x03D7BB34 LDR X1, [X8]
	0x03D7BB38 BL 0x3DF1C70
	0x03D7BB3C LDR X1, [X22]
	0x03D7BB40 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+1000]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+2856]
	007 Move X2, [X8+2864]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Single get_lowValue()

Disassembly:
	0x03D7BB44 BL 0x2772DDC
	0x03D7BB48 CBZ X0, 0x3D7BCCC

ISIL:
	001 Move V0, [X0+1008]
	002 Return V0

Method: System.Void set_lowValue(System.Single value)

Disassembly:
	0x03D7BB4C LDR X8, [X21]
	0x03D7BB50 MOV X2, X31
	0x03D7BB54 LDR X8, [X8 + 0xB8]
	0x03D7BB58 LDR X1, [X8 + 0x10]

ISIL:
	001 Move V1, [X0+1016]
	002 Move [X0+1008], S0
	003 Move V0, V1

Method: System.Single get_highValue()

Disassembly:
	0x03D7BC80 MOV X1, X20
	0x03D7BC84 MOV W2, W31

ISIL:
	001 Move V0, [X0+1012]
	002 Return V0

Method: System.Void set_highValue(System.Single value)

Disassembly:
	0x03D7BC88 BL 0x21A1534
	0x03D7BC8C LDR X0, [X23]
	0x03D7BC90 BL 0x1C16F10
	0x03D7BC94 LDR X2, [X24]

ISIL:
	001 Move V1, [X0+1016]
	002 Move [X0+1012], S0
	003 Move V0, V1
	004 Call AbstractProgressBar.SetProgress, X0, V0
	005 Return 

Method: System.Void .ctor()

Disassembly:
	0x03D7BC98 MOV X1, X19
	0x03D7BC9C MOV X3, X31
	0x03D7BCA0 MOV X20, X0
	0x03D7BCA4 BL 0x2D0E824
	0x03D7BCA8 LDR X3, [X25]
	0x03D7BCAC MOV X0, X19
	0x03D7BCB0 MOV X1, X20
	0x03D7BCB4 LDP X20, X19, [X31 + 0x30]
	0x03D7BCB8 LDP X22, X21, [X31 + 0x20]
	0x03D7BCBC LDP X24, X23, [X31 + 0x10]
	0x03D7BCC0 MOV W2, W31
	0x03D7BCC4 LDP X30, X25, [X31], #0x40
	0x03D7BCC8 B 0x21A1534
	0x03D7BCCC BL 0x1C16F20
	0x03D7BCD0 STP X30, X21, [X31 - 0x20]!
	0x03D7BCD4 STP X20, X19, [X31 + 0x10]
	0x03D7BCD8 ADRP X21, 0x66C000
	0x03D7BCDC ADRP X20, 0x3A0000
	0x03D7BCE0 LDRB W8, [X21 + 0xD9A]
	0x03D7BCE4 LDR X20, [X20 + 0xAD8]
	0x03D7BCE8 MOV X19, X0
	0x03D7BCEC TBNZ X8, 0x0, 0x3D7BD10
	0x03D7BCF0 ADRP X0, 0x3EC000
	0x03D7BCF4 LDR X0, [X0 + 0x1A8]
	0x03D7BCF8 BL 0x1C16CF4
	0x03D7BCFC ADRP X0, 0x3A0000
	0x03D7BD00 LDR X0, [X0 + 0xAD8]
	0x03D7BD04 BL 0x1C16CF4
	0x03D7BD08 MOVZ W8, 0x1
	0x03D7BD0C STRB W8, [X21 + 0xD9A]
	0x03D7BD10 LDR X0, [X20]
	0x03D7BD14 ADRP X20, 0x3EC000
	0x03D7BD18 LDR W8, [X0 + 0xE0]
	0x03D7BD1C LDR X20, [X20 + 0x1A8]
	0x03D7BD20 CBNZ W8, 0x3D7BD28
	0x03D7BD24 BL 0x1C16DFC
	0x03D7BD28 LDR X1, [X20]
	0x03D7BD2C MOV X0, X19
	0x03D7BD30 LDP X20, X19, [X31 + 0x10]
	0x03D7BD34 LDP X30, X21, [X31], #0x20
	0x03D7BD38 B 0x21E8228
	0x03D7BD3C STP X30, X21, [X31 - 0x20]!
	0x03D7BD40 STP X20, X19, [X31 + 0x10]
	0x03D7BD44 ADRP X21, 0x66C000
	0x03D7BD48 ADRP X20, 0x3A0000
	0x03D7BD4C LDRB W8, [X21 + 0xD9B]
	0x03D7BD50 LDR X20, [X20 + 0xAD8]
	0x03D7BD54 MOV X19, X0
	0x03D7BD58 TBNZ X8, 0x0, 0x3D7BD7C
	0x03D7BD5C ADRP X0, 0x3EC000
	0x03D7BD60 LDR X0, [X0 + 0x1B0]
	0x03D7BD64 BL 0x1C16CF4
	0x03D7BD68 ADRP X0, 0x3A0000
	0x03D7BD6C LDR X0, [X0 + 0xAD8]
	0x03D7BD70 BL 0x1C16CF4
	0x03D7BD74 MOVZ W8, 0x1
	0x03D7BD78 STRB W8, [X21 + 0xD9B]
	0x03D7BD7C LDR X0, [X20]
	0x03D7BD80 ADRP X20, 0x3EC000
	0x03D7BD84 LDR W8, [X0 + 0xE0]
	0x03D7BD88 LDR X20, [X20 + 0x1B0]
	0x03D7BD8C CBNZ W8, 0x3D7BD94
	0x03D7BD90 BL 0x1C16DFC
	0x03D7BD94 LDR X1, [X20]
	0x03D7BD98 MOV X0, X19
	0x03D7BD9C LDP X20, X19, [X31 + 0x10]
	0x03D7BDA0 LDP X30, X21, [X31], #0x20
	0x03D7BDA4 B 0x21E83B4
	0x03D7BDA8 STP X30, X21, [X31 - 0x20]!
	0x03D7BDAC STP X20, X19, [X31 + 0x10]
	0x03D7BDB0 ADRP X21, 0x66C000
	0x03D7BDB4 ADRP X20, 0x3EC000
	0x03D7BDB8 LDRB W8, [X21 + 0xD9C]
	0x03D7BDBC LDR X20, [X20 + 0x188]
	0x03D7BDC0 MOV X19, X0
	0x03D7BDC4 TBNZ X8, 0x0, 0x3D7BDDC
	0x03D7BDC8 ADRP X0, 0x3EC000
	0x03D7BDCC LDR X0, [X0 + 0x188]
	0x03D7BDD0 BL 0x1C16CF4
	0x03D7BDD4 MOVZ W8, 0x1
	0x03D7BDD8 STRB W8, [X21 + 0xD9C]
	0x03D7BDDC MOV X0, X19
	0x03D7BDE0 MOV X1, X31
	0x03D7BDE4 BL 0x3CF98F0
	0x03D7BDE8 LDR X0, [X20]
	0x03D7BDEC LDR X19, [X19 + 0x440]
	0x03D7BDF0 LDR W8, [X0 + 0xE0]
	0x03D7BDF4 CBNZ W8, 0x3D7BDFC
	0x03D7BDF8 BL 0x1C16DFC
	0x03D7BDFC CBZ X19, 0x3D7BE20
	0x03D7BE00 LDR X8, [X20]
	0x03D7BE04 MOV X0, X19
	0x03D7BE08 LDP X20, X19, [X31 + 0x10]
	0x03D7BE0C MOV X2, X31
	0x03D7BE10 LDR X8, [X8 + 0xB8]
	0x03D7BE14 LDR X1, [X8 + 0x28]
	0x03D7BE18 LDP X30, X21, [X31], #0x20
	0x03D7BE1C B 0x3DF1C70
	0x03D7BE20 BL 0x1C16F20
	0x03D7BE24 STP X30, X19, [X31 - 0x10]!
	0x03D7BE28 LDR X8, [X0]
	0x03D7BE2C MOV X19, X0
	0x03D7BE30 LDR X9, [X8 + 0x7E8]
	0x03D7BE34 LDR X1, [X8 + 0x7F0]
	0x03D7BE38 BLR X9
	0x03D7BE3C TBZ X0, 0x0, 0x3D7BE48
	0x03D7BE40 LDP X30, X19, [X31], #0x10
	0x03D7BE44 RET
	0x03D7BE48 LDR X8, [X19]
	0x03D7BE4C MOVZ W1, 0x1
	0x03D7BE50 MOV X0, X19
	0x03D7BE54 LDR X3, [X8 + 0x7F8]
	0x03D7BE58 LDR X2, [X8 + 0x800]
	0x03D7BE5C LDP X30, X19, [X31], #0x10
	0x03D7BE60 BR X3
	0x03D7BE64 LDR X8, [X0]
	0x03D7BE68 AND W1, W1, 0x1
	0x03D7BE6C LDR X3, [X8 + 0x7F8]
	0x03D7BE70 LDR X2, [X8 + 0x800]
	0x03D7BE74 BR X3
	0x03D7BE78 STP X30, X19, [X31 - 0x10]!
	0x03D7BE7C AND W1, W1, 0x1
	0x03D7BE80 MOV X2, X31
	0x03D7BE84 MOV X19, X0
	0x03D7BE88 BL 0x3CF9980
	0x03D7BE8C MOV X0, X19
	0x03D7BE90 LDP X30, X19, [X31], #0x10
	0x03D7BE94 B 0x3D7B954
	0x03D7BE98 STR X30, [X31 - 0x20]!
	0x03D7BE9C STP X20, X19, [X31 + 0x10]
	0x03D7BEA0 ADRP X20, 0x66C000
	0x03D7BEA4 LDRB W8, [X20 + 0xD9E]
	0x03D7BEA8 MOV X19, X0
	0x03D7BEAC TBNZ X8, 0x0, 0x3D7BED0
	0x03D7BEB0 ADRP X0, 0x3E7000
	0x03D7BEB4 LDR X0, [X0 + 0xDB0]
	0x03D7BEB8 BL 0x1C16CF4
	0x03D7BEBC ADRP X0, 0x3E7000
	0x03D7BEC0 LDR X0, [X0 + 0xC80]
	0x03D7BEC4 BL 0x1C16CF4
	0x03D7BEC8 MOVZ W8, 0x1
	0x03D7BECC STRB W8, [X20 + 0xD9E]
	0x03D7BED0 MOV X0, X19
	0x03D7BED4 MOV X1, X31
	0x03D7BED8 BL 0x3CF9D20
	0x03D7BEDC LDRB W8, [X19 + 0x408]
	0x03D7BEE0 LDR X0, [X19 + 0x460]
	0x03D7BEE4 CBZ W8, 0x3D7BEFC
	0x03D7BEE8 CBZ X0, 0x3D7BF38
	0x03D7BEEC LDP X20, X19, [X31 + 0x10]
	0x03D7BEF0 MOV X1, X31
	0x03D7BEF4 LDR X30, [X31], #0x20
	0x03D7BEF8 B 0x3DF6948
	0x03D7BEFC CBZ X0, 0x3D7BF38
	0x03D7BF00 LDR X1, [X19 + 0x448]
	0x03D7BF04 MOV X2, X31
	0x03D7BF08 BL 0x3DF60E8
	0x03D7BF0C ADRP X8, 0x3E7000
	0x03D7BF10 LDR X8, [X8 + 0xC80]
	0x03D7BF14 MOV X0, X19
	0x03D7BF18 LDR X1, [X8]
	0x03D7BF1C BL 0x2772DDC
	0x03D7BF20 CBZ X0, 0x3D7BF38
	0x03D7BF24 LDR X1, [X19 + 0x460]
	0x03D7BF28 LDP X20, X19, [X31 + 0x10]
	0x03D7BF2C MOV X2, X31
	0x03D7BF30 LDR X30, [X31], #0x20
	0x03D7BF34 B 0x3DF60E8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x66D000
	011 Move X23, 0x3ED000
	012 Move W8, [X20+3471]
	013 Move X23, [X23+272]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x3ED000
	020 Move X0, [X0+280]
	021 Call 0x1C17CF4
	022 Move X0, 0x3ED000
	023 Move X0, [X0+272]
	024 Call 0x1C17CF4
	025 Move X0, 0x3A3000
	026 Move X0, [X0+1624]
	027 Call 0x1C17CF4
	028 Move X0, 0x3A3000
	029 Move X0, [X0+1632]
	030 Call 0x1C17CF4
	031 Move X0, 0x3A2000
	032 Move X0, [X0+304]
	033 Call 0x1C17CF4
	034 Move X0, 0x3A1000
	035 Move X0, [X0+2200]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+3471], W8
	039 Move X22, 0x3A1000
	040 Move X22, [X22+2200]
	041 Move W8, 0x42C80000
	042 Move X0, X19
	043 Move X1, X31
	044 Move [X31+8], X31
	045 Move [X19+1012], W8
	046 Call BindableElement..ctor, X0
	047 Move X0, [X23]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X23]
	053 Move X8, [X0+184]
	054 Move X0, X19
	055 Move X2, X31
	056 Move X1, [X8]
	057 Call VisualElement.AddToClassList, X0, X1
	058 Move X0, [X22]
	059 Call 0x1C17F10
	060 Move X1, X31
	061 Move X20, X0
	062 Call VisualElement..ctor, X0
	063 Compare X20, 0
	064 JumpIfEqual {187}
	065 Move X8, [X23]
	066 Move X0, X20
	067 Move X2, X31
	068 Move X8, [X8+184]
	069 Move X1, [X8]
	070 Call VisualElement.set_name, X0, X1
	071 Move X0, [X22]
	072 Call 0x1C17F10
	073 Move X1, X31
	074 Move X21, X0
	075 Call VisualElement..ctor, X0
	076 Move [X19+984], X21
	077 Compare X21, 0
	078 JumpIfEqual {187}
	079 Move X8, [X23]
	080 Move X0, X21
	081 Move X2, X31
	082 Move X8, [X8+184]
	083 Move X1, [X8+40]
	084 Call VisualElement.AddToClassList, X0, X1
	085 Move X1, [X19+984]
	086 Move X0, X20
	087 Move X2, X31
	088 Call VisualElement.Add, X0, X1
	089 Move X0, [X22]
	090 Call 0x1C17F10
	091 Move X1, X31
	092 Move X21, X0
	093 Call VisualElement..ctor, X0
	094 Move [X19+992], X21
	095 Compare X21, 0
	096 JumpIfEqual {187}
	097 Move X8, [X23]
	098 Move X0, X21
	099 Move X2, X31
	100 Move X8, [X8+184]
	101 Move X1, [X8+32]
	102 Call VisualElement.AddToClassList, X0, X1
	103 Move X0, [X19+984]
	104 Compare X0, 0
	105 JumpIfEqual {187}
	106 Move X1, [X19+992]
	107 Move X2, X31
	108 Call VisualElement.Add, X0, X1
	109 Move X0, [X22]
	110 Call 0x1C17F10
	111 Move X1, X31
	112 Move X21, X0
	113 Call VisualElement..ctor, X0
	114 Compare X21, 0
	115 JumpIfEqual {187}
	116 Move X8, [X23]
	117 Move X0, X21
	118 Move X2, X31
	119 Move X8, [X8+184]
	120 Move X1, [X8+24]
	121 Call VisualElement.AddToClassList, X0, X1
	122 Move X0, [X19+984]
	123 Compare X0, 0
	124 JumpIfEqual {187}
	125 Move X22, 0x3A2000
	126 Move X22, [X22+304]
	127 Move X1, X21
	128 Move X2, X31
	129 Call VisualElement.Add, X0, X1
	130 Move X0, [X22]
	131 Call 0x1C17F10
	132 Move X22, X0
	133 Call Label..ctor, X0
	134 Move [X19+1000], X22
	135 Compare X22, 0
	136 JumpIfEqual {187}
	137 Move X8, [X23]
	138 Move X24, 0x3A3000
	139 Move X25, 0x3ED000
	140 Move X26, 0x3A3000
	141 Move X8, [X8+184]
	142 Move X0, X22
	143 Move X2, X31
	144 Move X1, [X8+16]
	145 Move X24, [X24+1632]
	146 Move X25, [X25+280]
	147 Move X26, [X26+1624]
	148 Call VisualElement.AddToClassList, X0, X1
	149 Move X1, [X19+1000]
	150 Move X0, X21
	151 Move X2, X31
	152 Call VisualElement.Add, X0, X1
	153 Move X8, [X23]
	154 Move X0, X20
	155 Move X2, X31
	156 Move X8, [X8+184]
	157 Move X1, [X8+8]
	158 Call VisualElement.AddToClassList, X0, X1
	159 Move X8, [X19+888]
	160 Add X0, X31, 8
	161 Move X1, X20
	162 Move X2, X31
	163 Move [X31+8], X8
	164 Call Hierarchy.Add, X0, X1
	165 Move X0, [X24]
	166 Call 0x1C17F10
	167 Move X2, [X25]
	168 Move X1, X19
	169 Move X3, X31
	170 Move X20, X0
	171 Call 0x2D0F824, X0, X1, X2
	172 Move X3, [X26]
	173 Move X0, X19
	174 Move X1, X20
	175 Move W2, W31
	176 Call 0x21A2534, X0, X1, X2
	177 Move X20, [X31+64]
	178 Move X19, [X31+72]
	179 Move X22, [X31+48]
	180 Move X21, [X31+56]
	181 Move X24, [X31+32]
	182 Move X23, [X31+40]
	183 Move X26, [X31+16]
	184 Move X25, [X31+24]
	185 Move X30, [X31+80]
	186 Return 
	187 Call 0x1C17F20

Method: System.Void OnGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent e)

Disassembly:
	0x03D7BF38 BL 0x1C16F20
	0x03D7BF3C STR X30, [X31 - 0x50]!
	0x03D7BF40 STP X26, X25, [X31 + 0x10]
	0x03D7BF44 STP X24, X23, [X31 + 0x20]
	0x03D7BF48 STP X22, X21, [X31 + 0x30]
	0x03D7BF4C STP X20, X19, [X31 + 0x40]
	0x03D7BF50 ADRP X26, 0x66C000
	0x03D7BF54 ADRP X25, 0x3EC000
	0x03D7BF58 ADRP X19, 0x3EC000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+1992]
	006 Move X1, [X8+2000]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move X0, X19
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call AbstractProgressBar.SetProgress, X0, V0
	012 Return 

Method: System.Single get_value()

Disassembly:
	0x03D7BF5C ADRP X24, 0x3A1000
	0x03D7BF60 ADRP X23, 0x3A1000

ISIL:
	001 Move V0, [X0+1016]
	002 Return V0

Method: System.Void set_value(System.Single value)

Disassembly:
	0x03D7BF64 ADRP X22, 0x3EC000
	0x03D7BF68 ADRP X21, 0x3E8000
	0x03D7BF6C ADRP X20, 0x3A3000
	0x03D7BF70 LDR X25, [X25 + 0x1B8]
	0x03D7BF74 LDR X19, [X19 + 0x188]
	0x03D7BF78 LDRB W8, [X26 + 0xD9F]
	0x03D7BF7C LDR X24, [X24 + 0xEB8]
	0x03D7BF80 LDR X23, [X23 + 0xEC0]
	0x03D7BF84 LDR X22, [X22 + 0x1C0]
	0x03D7BF88 LDR X21, [X21 + 0xB40]
	0x03D7BF8C LDR X20, [X20 + 0xD8]
	0x03D7BF90 TBNZ X8, 0x0, 0x3D7BFF0
	0x03D7BF94 ADRP X0, 0x3EC000
	0x03D7BF98 LDR X0, [X0 + 0x188]
	0x03D7BF9C BL 0x1C16CF4
	0x03D7BFA0 ADRP X0, 0x3EC000
	0x03D7BFA4 LDR X0, [X0 + 0x1C0]
	0x03D7BFA8 BL 0x1C16CF4
	0x03D7BFAC ADRP X0, 0x3E8000
	0x03D7BFB0 LDR X0, [X0 + 0xB40]
	0x03D7BFB4 BL 0x1C16CF4
	0x03D7BFB8 ADRP X0, 0x3EC000
	0x03D7BFBC LDR X0, [X0 + 0x1B8]
	0x03D7BFC0 BL 0x1C16CF4
	0x03D7BFC4 ADRP X0, 0x3A3000
	0x03D7BFC8 LDR X0, [X0 + 0xD8]
	0x03D7BFCC BL 0x1C16CF4
	0x03D7BFD0 ADRP X0, 0x3A1000
	0x03D7BFD4 LDR X0, [X0 + 0xEB8]
	0x03D7BFD8 BL 0x1C16CF4
	0x03D7BFDC ADRP X0, 0x3A1000
	0x03D7BFE0 LDR X0, [X0 + 0xEC0]
	0x03D7BFE4 BL 0x1C16CF4
	0x03D7BFE8 MOVZ W8, 0x1
	0x03D7BFEC STRB W8, [X26 + 0xD9F]
	0x03D7BFF0 LDR X8, [X19]
	0x03D7BFF4 LDR X9, [X25]
	0x03D7BFF8 MOV X2, X31
	0x03D7BFFC LDR X8, [X8 + 0xB8]
	0x03D7C000 STR X9, [X8]
	0x03D7C004 LDR X8, [X19]
	0x03D7C008 LDR X1, [X24]
	0x03D7C00C LDR X8, [X8 + 0xB8]
	0x03D7C010 LDR X0, [X8]
	0x03D7C014 BL 0x321B938
	0x03D7C018 LDR X8, [X19]
	0x03D7C01C MOV X2, X31
	0x03D7C020 LDR X8, [X8 + 0xB8]
	0x03D7C024 STR X0, [X8 + 0x8]
	0x03D7C028 LDR X0, [X8]
	0x03D7C02C LDR X1, [X23]
	0x03D7C030 BL 0x321B938
	0x03D7C034 LDR X8, [X19]
	0x03D7C038 MOV X2, X31
	0x03D7C03C LDR X8, [X8 + 0xB8]
	0x03D7C040 STR X0, [X8 + 0x10]
	0x03D7C044 LDR X0, [X8]
	0x03D7C048 LDR X1, [X22]
	0x03D7C04C BL 0x321B938
	0x03D7C050 LDR X8, [X19]
	0x03D7C054 MOV X2, X31
	0x03D7C058 LDR X8, [X8 + 0xB8]
	0x03D7C05C STR X0, [X8 + 0x18]
	0x03D7C060 LDR X0, [X8]
	0x03D7C064 LDR X1, [X21]
	0x03D7C068 BL 0x321B938
	0x03D7C06C LDR X8, [X19]
	0x03D7C070 MOV X2, X31
	0x03D7C074 LDR X8, [X8 + 0xB8]
	0x03D7C078 STR X0, [X8 + 0x20]
	0x03D7C07C LDR X0, [X8]
	0x03D7C080 LDR X1, [X20]
	0x03D7C084 BL 0x321B938
	0x03D7C088 LDR X8, [X19]
	0x03D7C08C LDP X20, X19, [X31 + 0x40]
	0x03D7C090 LDP X22, X21, [X31 + 0x30]
	0x03D7C094 LDP X24, X23, [X31 + 0x20]
	0x03D7C098 LDR X8, [X8 + 0xB8]
	0x03D7C09C LDP X26, X25, [X31 + 0x10]
	0x03D7C0A0 STR X0, [X8 + 0x28]
	0x03D7C0A4 LDR X30, [X31], #0x50
	0x03D7C0A8 RET
	0x03D7C0AC STP X30, X21, [X31 - 0x20]!
	0x03D7C0B0 STP X20, X19, [X31 + 0x10]
	0x03D7C0B4 ADRP X20, 0x66B000
	0x03D7C0B8 ADRP X21, 0x3EB000
	0x03D7C0BC LDRB W8, [X20 + 0xDA0]
	0x03D7C0C0 LDR X21, [X21 + 0x1C8]
	0x03D7C0C4 MOV X19, X0
	0x03D7C0C8 TBNZ X8, 0x0, 0x3D7C0E0
	0x03D7C0CC ADRP X0, 0x3EB000
	0x03D7C0D0 LDR X0, [X0 + 0x1C8]
	0x03D7C0D4 BL 0x1C16CF4
	0x03D7C0D8 MOVZ W8, 0x1
	0x03D7C0DC STRB W8, [X20 + 0xDA0]
	0x03D7C0E0 LDR X1, [X21]
	0x03D7C0E4 MOV X0, X19
	0x03D7C0E8 LDP X20, X19, [X31 + 0x10]
	0x03D7C0EC LDP X30, X21, [X31], #0x20
	0x03D7C0F0 B 0x2736468
	0x03D7C0F4 SUB X31, X31, 0xA0
	0x03D7C0F8 STR X30, [X31 + 0x60]
	0x03D7C0FC STP X24, X23, [X31 + 0x70]
	0x03D7C100 STP X22, X21, [X31 + 0x80]
	0x03D7C104 STP X20, X19, [X31 + 0x90]
	0x03D7C108 ADRP X24, 0x66B000
	0x03D7C10C ADRP X23, 0x3EB000
	0x03D7C110 LDRB W8, [X24 + 0xDA1]
	0x03D7C114 LDR X23, [X23 + 0x1D0]
	0x03D7C118 MOV X21, X3
	0x03D7C11C MOV X20, X2
	0x03D7C120 MOV X19, X1
	0x03D7C124 MOV X22, X0
	0x03D7C128 TBNZ X8, 0x0, 0x3D7C14C
	0x03D7C12C ADRP X0, 0x3EB000
	0x03D7C130 LDR X0, [X0 + 0x1D0]
	0x03D7C134 BL 0x1C16CF4
	0x03D7C138 ADRP X0, 0x3EB000
	0x03D7C13C LDR X0, [X0 + 0x188]
	0x03D7C140 BL 0x1C16CF4
	0x03D7C144 MOVZ W8, 0x1
	0x03D7C148 STRB W8, [X24 + 0xDA1]
	0x03D7C14C LDP V1, V0, [X21]
	0x03D7C150 LDR X4, [X23]
	0x03D7C154 ADD X3, X31, 0x40
	0x03D7C158 MOV X0, X22
	0x03D7C15C MOV X1, X19
	0x03D7C160 MOV X2, X20
	0x03D7C164 STP V1, V0, [X31 + 0x20]
	0x03D7C168 STP V1, V0, [X31 + 0x40]
	0x03D7C16C BL 0x27717CC
	0x03D7C170 LDP V0, V1, [X21]
	0x03D7C174 LDR X0, [X22 + 0x88]
	0x03D7C178 STP V0, V1, [X31]
	0x03D7C17C CBZ X0, 0x3D7C204
	0x03D7C180 LDR X8, [X0]
	0x03D7C184 LDP V0, V1, [X31]
	0x03D7C188 ADD X2, X31, 0x40
	0x03D7C18C MOV X1, X20
	0x03D7C190 LDR X9, [X8 + 0x178]
	0x03D7C194 STP V0, V1, [X31 + 0x40]
	0x03D7C198 LDR X3, [X8 + 0x180]
	0x03D7C19C BLR X9
	0x03D7C1A0 CBZ X19, 0x3D7C204
	0x03D7C1A4 ADRP X9, 0x3EB000
	0x03D7C1A8 LDR X9, [X9 + 0x188]
	0x03D7C1AC LDR X8, [X19]
	0x03D7C1B0 LDR X1, [X9]
	0x03D7C1B4 LDRB W10, [X8 + 0x130]
	0x03D7C1B8 LDRB W9, [X1 + 0x130]
	0x03D7C1BC CMP W10, W9
	0x03D7C1C0 B.CC 0x3D7C208
	0x03D7C1C4 LDR X8, [X8 + 0xC8]
	0x03D7C1C8 ADD X8, X8, X9, 0x3, LSL
	0x03D7C1CC LDUR X8, [X8 - 0x8]
	0x03D7C1D0 CMP X8, X1
	0x03D7C1D4 B.NE 0x3D7C208
	0x03D7C1D8 MOV X2, X0
	0x03D7C1DC MOV X0, X19

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x66D000
	008 Move X21, 0x3ED000
	009 Move W8, [X19+3472]
	010 Move X21, [X21+288]
	011 Move V8, V0
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x3ED000
	018 Move X0, [X0+296]
	019 Call 0x1C17CF4
	020 Move X0, 0x3ED000
	021 Move X0, [X0+304]
	022 Call 0x1C17CF4
	023 Move X0, 0x3ED000
	024 Move X0, [X0+288]
	025 Call 0x1C17CF4
	026 Move X0, 0x379000
	027 Move X0, [X0+3584]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+3472], W8
	031 Move X0, [X21]
	032 Call 0x211D348
	033 Compare X0, 0
	034 JumpIfEqual {133}
	035 Move X8, [X0]
	036 Move V0, [X20+1016]
	037 Move V1, V8
	038 Move X9, [X8+440]
	039 Move X1, [X8+448]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {126}
	045 Move X0, X20
	046 Move X1, X31
	047 Call VisualElement.get_panel, X0
	048 Compare X0, 0
	049 JumpIfEqual {102}
	050 Move X8, 0x3ED000
	051 Move X8, [X8+304]
	052 Move V9, [X20+1016]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X8, 0x3EC000
	059 Move X8, [X8+296]
	060 Move V0, V9
	061 Move V1, V8
	062 Move X0, [X8]
	063 Call ChangeEvent`1<Single>.GetPooled, V0, V1
	064 Move X19, X0
	065 Compare X0, 0
	066 JumpIfEqual {134}
	067 Move X0, X19
	068 Move X1, X20
	069 Move X2, X31
	070 Call EventBase.set_target, X0, X1
	071 Move X8, [X20]
	072 Move [X20+1016], S8
	073 Move X1, [X8+2000]
	074 Move X9, [X8+1992]
	075 Move X0, X20
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X0, X20
	078 Call AbstractProgressBar.SetProgress, X0, V0
	079 Move X8, [X20]
	080 Move X9, [X8+408]
	081 Move X2, [X8+416]
	082 Move X0, X20
	083 Move X1, X19
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X20, X31
	086 Move X10, 0x378000
	087 Move X8, [X19]
	088 Move X10, [X10+3584]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Move X1, [X10]
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move X0, X19
	100 Move W2, W31
	101 Call 0x1C5D788
	102 Move X8, [X20]
	103 Move [X20+1016], S8
	104 Move X0, X20
	105 Move X9, [X8+1992]
	106 Move X1, [X8+2000]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X0, X20
	109 Move X20, [X31+32]
	110 Move X19, [X31+40]
	111 Move X30, [X31+16]
	112 Move X21, [X31+24]
	113 Move D9, [X31+48]
	114 Move D8, [X31+56]
	115 Call AbstractProgressBar.SetProgress, X0, V0
	116 Return 
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X8, X8, X9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X1, [X0+8]
	122 Move X0, X19
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Compare X20, 0
	125 JumpIfNotEqual {135}
	126 Move X20, [X31+32]
	127 Move X19, [X31+40]
	128 Move X30, [X31+16]
	129 Move X21, [X31+24]
	130 Move D9, [X31+48]
	131 Move D8, [X31+56]
	132 Return 
	133 Call 0x1C17F20
	134 Call 0x1C17F20
	135 Move X0, X20
	136 Call 0x1C17F18
	137 Move X21, X0
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, X21
	140 Call 0x3EB2AD0
	141 Move X20, [X0]
	142 Call 0x3EB2AE0
	143 Compare X19, 0
	144 JumpIfNotEqual {86}
	145 Move X20, X31
	146 Move X21, X0
	147 Compare X19, 0
	148 JumpIfEqual {172}
	149 Move X10, 0x378000
	150 Move X8, [X19]
	151 Move X10, [X10+3584]
	152 NotImplemented "Instruction LDRH not yet implemented."
	153 Move X1, [X10]
	154 Compare X9, 0
	155 JumpIfEqual {162}
	156 Move X10, [X8+176]
	157 Add X10, X10, 8
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Subtract X9, X9, 1
	161 Add X10, X10, 16
	162 Move X0, X19
	163 Move W2, W31
	164 Call 0x1C5D788
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Add X8, X8, X9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X1, [X0+8]
	170 Move X0, X19
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Compare X20, 0
	173 JumpIfNotEqual {176}
	174 Move X0, X21
	175 Call 0x1D2D690
	176 Move X0, X20
	177 Call 0x1C17F18
	178 Call 0x1991590

Method: System.Void SetValueWithoutNotify(System.Single newValue)

Disassembly:
	0x03D7C1E0 MOV X1, X2
	0x03D7C1E4 MOV X2, X31
	0x03D7C1E8 BL 0x3CF9818
	0x03D7C1EC LDP X20, X19, [X31 + 0x90]
	0x03D7C1F0 LDP X22, X21, [X31 + 0x80]
	0x03D7C1F4 LDP X24, X23, [X31 + 0x70]
	0x03D7C1F8 LDR X30, [X31 + 0x60]
	0x03D7C1FC ADD X31, X31, 0xA0
	0x03D7C200 RET
	0x03D7C204 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move [X0+1016], S0
	005 Move X19, X0
	006 Move X9, [X8+1992]
	007 Move X1, [X8+2000]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X0, X19
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call AbstractProgressBar.SetProgress, X0, V0
	013 Return 

Method: System.Void SetProgress(System.Single p)

Disassembly:
	0x03D7BB5C BL 0x3DF1C70
	0x03D7BB60 LDR X0, [X19 + 0x400]
	0x03D7BB64 CBZ X0, 0x3D7BCCC
	0x03D7BB68 LDR X8, [X21]
	0x03D7BB6C MOV X2, X31
	0x03D7BB70 LDR X8, [X8 + 0xB8]
	0x03D7BB74 LDR X1, [X8 + 0x8]
	0x03D7BB78 BL 0x3DF1C70
	0x03D7BB7C LDR X0, [X19 + 0x448]
	0x03D7BB80 CBZ X0, 0x3D7BCCC
	0x03D7BB84 ADRP X20, 0x3A0000
	0x03D7BB88 LDR X20, [X20 + 0x898]
	0x03D7BB8C MOV X1, X31
	0x03D7BB90 BL 0x3DF6948
	0x03D7BB94 LDR X0, [X20]
	0x03D7BB98 BL 0x1C16F10
	0x03D7BB9C MOV X1, X31
	0x03D7BBA0 MOV X20, X0
	0x03D7BBA4 BL 0x3DEF578
	0x03D7BBA8 CBZ X20, 0x3D7BCCC
	0x03D7BBAC MOVZ W1, 0x1
	0x03D7BBB0 MOV X0, X20
	0x03D7BBB4 MOV X2, X31
	0x03D7BBB8 BL 0x3DEF238
	0x03D7BBBC LDR X1, [X19 + 0x448]
	0x03D7BBC0 MOV X0, X20
	0x03D7BBC4 MOV X2, X31
	0x03D7BBC8 STR X20, [X19 + 0x460]
	0x03D7BBCC BL 0x3DF60E8
	0x03D7BBD0 LDR X0, [X19 + 0x460]
	0x03D7BBD4 CBZ X0, 0x3D7BCCC
	0x03D7BBD8 LDR X8, [X21]
	0x03D7BBDC MOV X2, X31
	0x03D7BBE0 LDR X8, [X8 + 0xB8]
	0x03D7BBE4 LDR X1, [X8 + 0x18]
	0x03D7BBE8 BL 0x3DF1C70
	0x03D7BBEC LDR X0, [X19 + 0x448]
	0x03D7BBF0 CBZ X0, 0x3D7BCCC
	0x03D7BBF4 LDR X8, [X21]
	0x03D7BBF8 MOV X2, X31
	0x03D7BBFC LDR X8, [X8 + 0xB8]
	0x03D7BC00 LDR X1, [X8 + 0x20]
	0x03D7BC04 BL 0x3DF1C70
	0x03D7BC08 LDR X1, [X22]
	0x03D7BC0C MOV X0, X19
	0x03D7BC10 BL 0x2772DDC
	0x03D7BC14 CBZ X0, 0x3D7BCCC
	0x03D7BC18 ADRP X20, 0x3A2000
	0x03D7BC1C ADRP X21, 0x3EC000
	0x03D7BC20 ADRP X22, 0x3A2000
	0x03D7BC24 LDR X20, [X20 + 0xD70]
	0x03D7BC28 LDR X21, [X21 + 0x198]
	0x03D7BC2C LDR X22, [X22 + 0xD60]
	0x03D7BC30 LDR X1, [X19 + 0x460]
	0x03D7BC34 ADRP X23, 0x3A2000
	0x03D7BC38 ADRP X24, 0x3EC000
	0x03D7BC3C ADRP X25, 0x3A2000
	0x03D7BC40 LDR X23, [X23 + 0xD78]
	0x03D7BC44 LDR X24, [X24 + 0x1A0]
	0x03D7BC48 LDR X25, [X25 + 0xD68]
	0x03D7BC4C MOV X2, X31
	0x03D7BC50 BL 0x3DF60E8
	0x03D7BC54 MOV X0, X19
	0x03D7BC58 BL 0x3D7B954
	0x03D7BC5C LDR X0, [X20]
	0x03D7BC60 BL 0x1C16F10
	0x03D7BC64 LDR X2, [X21]
	0x03D7BC68 MOV X1, X19
	0x03D7BC6C MOV X3, X31
	0x03D7BC70 MOV X20, X0
	0x03D7BC74 BL 0x2D0E824
	0x03D7BC78 LDR X3, [X22]
	0x03D7BC7C MOV X0, X19

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x66D000
	007 Move W8, [X20+3473]
	008 Move V8, V0
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3A2000
	015 Move X0, [X0+296]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3473], W8
	019 Move V0, [X19+1008]
	020 NotImplemented "Instruction FCMP not yet implemented."
	021 Move V1, [X19+1012]
	022 Move V0, V8
	023 NotImplemented "Instruction FCMP not yet implemented."
	024 Move V0, V1
	025 Move X0, X19
	026 Call AbstractProgressBar.CalculateProgressWidth, X0, V0
	027 NotImplemented "Instruction FCMP not yet implemented."
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X21, [X31+24]
	032 Move V8, [X31+48]
	033 Return 
	034 Move X0, [X19+992]
	035 Compare X0, 0
	036 JumpIfEqual {80}
	037 Move X1, X31
	038 Move V8, V0
	039 Call VisualElement.get_style, X0
	040 Move X19, X0
	041 Move V0, V8
	042 Move X0, X31
	043 Call StyleLength.op_Implicit, V0
	044 Compare X19, 0
	045 JumpIfEqual {80}
	046 Move X11, 0x3A2000
	047 Move X9, [X19]
	048 Move X11, [X11+296]
	049 Move X8, X1
	050 Move X20, X0
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X11]
	053 And X21, X8, 0
	054 Compare X10, 0
	055 JumpIfEqual {62}
	056 Move X8, [X9+176]
	057 Add X8, X8, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X10, X10, 1
	061 Add X8, X8, 16
	062 Move W2, 41
	063 Move X0, X19
	064 Call 0x1C5D788
	065 Move W8, [X8]
	066 Add W8, W8, 41
	067 Add X8, X9, W8
	068 Add X0, X8, 312
	069 Move X4, [X0]
	070 Move X3, [X0+8]
	071 Move X0, X19
	072 Move X1, X20
	073 Move X2, X21
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X30, [X31+16]
	077 Move X21, [X31+24]
	078 Move V8, [X31+48]
	079 CallNoReturn X4
	080 Call 0x1C17F20

Method: System.Single CalculateProgressWidth(System.Single width)

Disassembly:
	0x03D7C208 MOV X0, X19
	0x03D7C20C BL 0x1C171E0
	0x03D7C210 STP X30, X21, [X31 - 0x20]!
	0x03D7C214 STP X20, X19, [X31 + 0x10]
	0x03D7C218 ADRP X20, 0x66B000
	0x03D7C21C ADRP X21, 0x3A1000
	0x03D7C220 LDRB W8, [X20 + 0xDA2]
	0x03D7C224 LDR X21, [X21 + 0xB20]
	0x03D7C228 MOV X19, X0
	0x03D7C22C TBNZ X8, 0x0, 0x3D7C25C
	0x03D7C230 ADRP X0, 0x3EB000
	0x03D7C234 LDR X0, [X0 + 0x1D8]
	0x03D7C238 BL 0x1C16CF4
	0x03D7C23C ADRP X0, 0x3A1000
	0x03D7C240 LDR X0, [X0 + 0xB20]
	0x03D7C244 BL 0x1C16CF4
	0x03D7C248 ADRP X0, 0x3CA000
	0x03D7C24C LDR X0, [X0 + 0x3E0]
	0x03D7C250 BL 0x1C16CF4
	0x03D7C254 MOVZ W8, 0x1
	0x03D7C258 STRB W8, [X20 + 0xDA2]
	0x03D7C25C LDR X0, [X21]
	0x03D7C260 BL 0x1C16F10
	0x03D7C264 MOV X1, X31
	0x03D7C268 MOV X20, X0
	0x03D7C26C BL 0x3E0A2F4
	0x03D7C270 CBZ X20, 0x3D7C2A4
	0x03D7C274 ADRP X8, 0x3CA000
	0x03D7C278 LDR X8, [X8 + 0x3E0]
	0x03D7C27C ADRP X9, 0x3EB000
	0x03D7C280 MOV X0, X19
	0x03D7C284 LDR X8, [X8]
	0x03D7C288 LDR X9, [X9 + 0x1D8]

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+984]
	007 Move S9, W31
	008 Compare X0, 0
	009 JumpIfEqual {33}
	010 Move X8, [X19+992]
	011 Compare X8, 0
	012 JumpIfEqual {33}
	013 Move X1, X31
	014 Move V8, V0
	015 Call VisualElement.get_layout, X0
	016 Move W8, S2
	017 And W8, W8, 0x7FFFFFFF
	018 Move W9, 0x7F800000
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, [X19+984]
	021 Compare X0, 0
	022 JumpIfEqual {39}
	023 Move X1, X31
	024 Call VisualElement.get_layout, X0
	025 Move V0, [X19+1012]
	026 Move S1, -2
	027 Add S1, S2, S1
	028 Multiply S2, S1, S8
	029 NotImplemented "Instruction FDIV not yet implemented."
	030 Move S2, 1
	031 NotImplemented "Instruction FMAXNM not yet implemented."
	032 Subtract S9, S1, S0
	033 Move X30, [X31+16]
	034 Move X19, [X31+24]
	035 Move V0, V9
	036 Move D9, [X31+32]
	037 Move D8, [X31+40]
	038 Return V0
	039 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D7C28C STR X8, [X20 + 0x10]
	0x03D7C290 STR X20, [X19 + 0x88]
	0x03D7C294 LDR X1, [X9]
	0x03D7C298 LDP X20, X19, [X31 + 0x10]
	0x03D7C29C LDP X30, X21, [X31], #0x20
	0x03D7C2A0 B 0x2771978
	0x03D7C2A4 BL 0x1C16F20
	0x03D7C2A8 SUB X31, X31, 0x80
	0x03D7C2AC STP X29, X30, [X31 + 0x20]
	0x03D7C2B0 STP X28, X27, [X31 + 0x30]
	0x03D7C2B4 STP X26, X25, [X31 + 0x40]
	0x03D7C2B8 STP X24, X23, [X31 + 0x50]
	0x03D7C2BC STP X22, X21, [X31 + 0x60]
	0x03D7C2C0 STP X20, X19, [X31 + 0x70]
	0x03D7C2C4 ADRP X21, 0x66B000
	0x03D7C2C8 LDRB W8, [X21 + 0xDA3]
	0x03D7C2CC MOV X20, X1
	0x03D7C2D0 MOV X19, X0
	0x03D7C2D4 TBNZ X8, 0x0, 0x3D7C394
	0x03D7C2D8 ADRP X0, 0x3EB000
	0x03D7C2DC LDR X0, [X0 + 0x1E0]
	0x03D7C2E0 BL 0x1C16CF4
	0x03D7C2E4 ADRP X0, 0x3EB000
	0x03D7C2E8 LDR X0, [X0 + 0x1E8]
	0x03D7C2EC BL 0x1C16CF4
	0x03D7C2F0 ADRP X0, 0x3EB000
	0x03D7C2F4 LDR X0, [X0 + 0x1F0]
	0x03D7C2F8 BL 0x1C16CF4
	0x03D7C2FC ADRP X0, 0x377000
	0x03D7C300 LDR X0, [X0 + 0xE00]
	0x03D7C304 BL 0x1C16CF4
	0x03D7C308 ADRP X0, 0x377000
	0x03D7C30C LDR X0, [X0 + 0xF70]
	0x03D7C310 BL 0x1C16CF4
	0x03D7C314 ADRP X0, 0x377000
	0x03D7C318 LDR X0, [X0 + 0xF78]
	0x03D7C31C BL 0x1C16CF4
	0x03D7C320 ADRP X0, 0x377000
	0x03D7C324 LDR X0, [X0 + 0xE18]
	0x03D7C328 BL 0x1C16CF4
	0x03D7C32C ADRP X0, 0x3E6000
	0x03D7C330 LDR X0, [X0 + 0xCB8]
	0x03D7C334 BL 0x1C16CF4
	0x03D7C338 ADRP X0, 0x3E6000
	0x03D7C33C LDR X0, [X0 + 0xCC0]
	0x03D7C340 BL 0x1C16CF4
	0x03D7C344 ADRP X0, 0x3EB000
	0x03D7C348 LDR X0, [X0 + 0x1F8]
	0x03D7C34C BL 0x1C16CF4
	0x03D7C350 ADRP X0, 0x3EB000
	0x03D7C354 LDR X0, [X0 + 0x200]
	0x03D7C358 BL 0x1C16CF4
	0x03D7C35C ADRP X0, 0x3EB000
	0x03D7C360 LDR X0, [X0 + 0x208]
	0x03D7C364 BL 0x1C16CF4
	0x03D7C368 ADRP X0, 0x3EB000
	0x03D7C36C LDR X0, [X0 + 0x210]
	0x03D7C370 BL 0x1C16CF4
	0x03D7C374 ADRP X0, 0x3EB000
	0x03D7C378 LDR X0, [X0 + 0x218]
	0x03D7C37C BL 0x1C16CF4
	0x03D7C380 ADRP X0, 0x3EB000
	0x03D7C384 LDR X0, [X0 + 0x188]
	0x03D7C388 BL 0x1C16CF4
	0x03D7C38C MOVZ W8, 0x1
	0x03D7C390 STRB W8, [X21 + 0xDA3]
	0x03D7C394 MOV X0, X20
	0x03D7C398 MOV X1, X31
	0x03D7C39C STP X31, X31, [X31 + 0x8]
	0x03D7C3A0 STR X31, [X31 + 0x18]
	0x03D7C3A4 BL 0x3DB5EE8
	0x03D7C3A8 TBZ X0, 0x0, 0x3D7C3F8
	0x03D7C3AC CBZ X20, 0x3D7C7C0
	0x03D7C3B0 ADRP X10, 0x377000
	0x03D7C3B4 LDR X8, [X20]
	0x03D7C3B8 LDR X10, [X10 + 0xF70]
	0x03D7C3BC LDRH W9, [X8 + 0x12E]
	0x03D7C3C0 LDR X1, [X10]
	0x03D7C3C4 CBZ X9, 0x3D7C3E8
	0x03D7C3C8 LDR X10, [X8 + 0xB0]
	0x03D7C3CC ADD X10, X10, 0x8
	0x03D7C3D0 LDUR X11, [X10 - 0x8]
	0x03D7C3D4 CMP X11, X1
	0x03D7C3D8 B.EQ 0x3D7C4AC
	0x03D7C3DC SUBS X9, X9, 0x1
	0x03D7C3E0 ADD X10, X10, 0x10
	0x03D7C3E4 B.NE 0x3D7C3D0
	0x03D7C3E8 MOV X0, X20
	0x03D7C3EC MOV W2, W31
	0x03D7C3F0 BL 0x1C5C788
	0x03D7C3F4 B 0x3D7C4B8
	0x03D7C3F8 LDR X0, [X19 + 0x450]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x66C000
	011 Move X25, 0x3EC000
	012 Move X19, 0x3EC000
	013 Move X24, 0x3E7000
	014 Move X23, 0x3EB000
	015 Move X22, 0x3EC000
	016 Move X21, 0x3EC000
	017 Move X20, 0x3EC000
	018 Move X25, [X25+312]
	019 Move X19, [X19+272]
	020 Move W8, [X26+3474]
	021 Move X24, [X24+3800]
	022 Move X23, [X23+2352]
	023 Move X22, [X22+320]
	024 Move X21, [X21+328]
	025 Move X20, [X20+336]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {53}
	030 Move X0, 0x3EC000
	031 Move X0, [X0+272]
	032 Call 0x1C17CF4
	033 Move X0, 0x3EC000
	034 Move X0, [X0+336]
	035 Call 0x1C17CF4
	036 Move X0, 0x3EC000
	037 Move X0, [X0+320]
	038 Call 0x1C17CF4
	039 Move X0, 0x3EC000
	040 Move X0, [X0+328]
	041 Call 0x1C17CF4
	042 Move X0, 0x3E7000
	043 Move X0, [X0+3800]
	044 Call 0x1C17CF4
	045 Move X0, 0x3EB000
	046 Move X0, [X0+2352]
	047 Call 0x1C17CF4
	048 Move X0, 0x3EC000
	049 Move X0, [X0+312]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X26+3474], W8
	053 Move X8, [X19]
	054 Move X9, [X25]
	055 Move X2, X31
	056 Move X8, [X8+184]
	057 Move [X8], X9
	058 Move X8, [X19]
	059 Move X1, [X24]
	060 Move X8, [X8+184]
	061 Move X0, [X8]
	062 Call String.Concat, X0, X1
	063 Move X8, [X19]
	064 Move X2, X31
	065 Move X8, [X8+184]
	066 Move [X8+8], X0
	067 Move X0, [X8]
	068 Move X1, [X23]
	069 Call String.Concat, X0, X1
	070 Move X8, [X19]
	071 Move X2, X31
	072 Move X8, [X8+184]
	073 Move [X8+16], X0
	074 Move X0, [X8]
	075 Move X1, [X22]
	076 Call String.Concat, X0, X1
	077 Move X8, [X19]
	078 Move X2, X31
	079 Move X8, [X8+184]
	080 Move [X8+24], X0
	081 Move X0, [X8]
	082 Move X1, [X21]
	083 Call String.Concat, X0, X1
	084 Move X8, [X19]
	085 Move X2, X31
	086 Move X8, [X8+184]
	087 Move [X8+32], X0
	088 Move X0, [X8]
	089 Move X1, [X20]
	090 Call String.Concat, X0, X1
	091 Move X8, [X19]
	092 Move X20, [X31+64]
	093 Move X19, [X31+72]
	094 Move X22, [X31+48]
	095 Move X21, [X31+56]
	096 Move X24, [X31+32]
	097 Move X23, [X31+40]
	098 Move X8, [X8+184]
	099 Move X26, [X31+16]
	100 Move X25, [X31+24]
	101 Move [X8+40], X0
	102 Move X30, [X31+80]
	103 Return 

