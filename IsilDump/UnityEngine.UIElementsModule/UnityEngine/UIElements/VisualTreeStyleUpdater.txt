Type: UnityEngine.UIElements.VisualTreeStyleUpdater

Method: Unity.Profiling.ProfilerMarker get_profilerMarker()

Disassembly:
	0x03D1C4BC ADRP X0, 0x446000
	0x03D1C4C0 LDR X0, [X0 + 0x7C8]
	0x03D1C4C4 BL 0x1C16CF4
	0x03D1C4C8 MOVZ W8, 0x1
	0x03D1C4CC STRB W8, [X21 + 0x94A]
	0x03D1C4D0 CBZ X19, 0x3D1C564
	0x03D1C4D4 LDR X8, [X19 + 0x378]
	0x03D1C4D8 ADD X0, X31, 0x8
	0x03D1C4DC MOV X1, X31
	0x03D1C4E0 STR X8, [X31 + 0x8]
	0x03D1C4E4 BL 0x3DF8994
	0x03D1C4E8 CMP W0, 0x1
	0x03D1C4EC B.LT 0x3D1C550
	0x03D1C4F0 ADRP X24, 0x446000
	0x03D1C4F4 LDR X24, [X24 + 0x7C8]
	0x03D1C4F8 MOV W21, W0
	0x03D1C4FC MOV W22, W31
	0x03D1C500 LDR X8, [X19 + 0x378]
	0x03D1C504 ADD X0, X31, 0x8
	0x03D1C508 MOV W1, W22
	0x03D1C50C MOV X2, X31
	0x03D1C510 STR X8, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6CC000
	005 Move X19, 0x449000
	006 Move W8, [X20+2365]
	007 Move X19, [X19+608]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x449000
	013 Move X0, [X0+608]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2365], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType)

Disassembly:
	0x03D1C514 BL 0x3DF98E4
	0x03D1C518 LDR X8, [X20 + 0x18]
	0x03D1C51C CBZ X8, 0x3D1C564
	0x03D1C520 LDR X2, [X24]
	0x03D1C524 MOV X23, X0
	0x03D1C528 MOV X0, X8
	0x03D1C52C MOV X1, X23
	0x03D1C530 BL 0x2DBEF30
	0x03D1C534 TBZ X0, 0x0, 0x3D1C544
	0x03D1C538 MOV X0, X20
	0x03D1C53C MOV X1, X23
	0x03D1C540 BL 0x3D1C498
	0x03D1C544 ADD W22, W22, 0x1
	0x03D1C548 CMP W21, W22
	0x03D1C54C B.NE 0x3D1C500
	0x03D1C550 LDP X20, X19, [X31 + 0x30]
	0x03D1C554 LDP X22, X21, [X31 + 0x20]
	0x03D1C558 LDP X24, X23, [X31 + 0x10]
	0x03D1C55C LDR X30, [X31], #0x40
	0x03D1C560 RET
	0x03D1C564 BL 0x1C16F20
	0x03D1C568 SUB X31, X31, 0x30
	0x03D1C56C STP X30, X21, [X31 + 0x10]
	0x03D1C570 STP X20, X19, [X31 + 0x20]
	0x03D1C574 ADRP X21, 0x6CB000
	0x03D1C578 LDRB W8, [X21 + 0x94B]
	0x03D1C57C MOV X20, X1
	0x03D1C580 MOV X19, X0
	0x03D1C584 TBNZ X8, 0x0, 0x3D1C59C
	0x03D1C588 ADRP X0, 0x446000
	0x03D1C58C LDR X0, [X0 + 0x7C8]
	0x03D1C590 BL 0x1C16CF4
	0x03D1C594 MOVZ W8, 0x1
	0x03D1C598 STRB W8, [X21 + 0x94B]
	0x03D1C59C CBZ X20, 0x3D1C608
	0x03D1C5A0 LDR X8, [X20 + 0x378]
	0x03D1C5A4 ADD X0, X31, 0x8
	0x03D1C5A8 MOV X1, X31
	0x03D1C5AC STR X8, [X31 + 0x8]
	0x03D1C5B0 BL 0x3DF88DC
	0x03D1C5B4 CBZ X0, 0x3D1C5F8
	0x03D1C5B8 ADRP X21, 0x446000
	0x03D1C5BC LDR X21, [X21 + 0x7C8]
	0x03D1C5C0 MOV X20, X0
	0x03D1C5C4 LDR X0, [X19 + 0x20]
	0x03D1C5C8 CBZ X0, 0x3D1C608
	0x03D1C5CC LDR X2, [X21]
	0x03D1C5D0 MOV X1, X20
	0x03D1C5D4 BL 0x2DBEF30
	0x03D1C5D8 TBZ X0, 0x0, 0x3D1C5F8
	0x03D1C5DC LDR X8, [X20 + 0x378]
	0x03D1C5E0 ADD X0, X31, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6CC000
	007 Move W8, [X22+2366]
	008 Move W20, W2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x447000
	016 Move X0, [X0+1992]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2366], W8
	020 Move W8, 0x8010
	021 And W31, W20, W8
	022 Move W8, [X21+52]
	023 Add W8, W8, 1
	024 Move [X21+52], W8
	025 Move TEMP, X20
	026 And TEMP, TEMP, 16
	027 Compare TEMP, 16
	028 JumpIfNotEqual {40}
	029 Move W8, [X21+48]
	030 Compare W8, 0
	031 JumpIfEqual {50}
	032 Move X0, [X21+32]
	033 Compare X0, 0
	034 JumpIfEqual {74}
	035 Move X8, 0x447000
	036 Move X8, [X8+1992]
	037 Move X1, X19
	038 Move X2, [X8]
	039 Call HashSet`1<Object>.Add, X0, X1
	040 Move TEMP, X20
	041 And TEMP, TEMP, 0x8000
	042 Compare TEMP, 0x8000
	043 JumpIfEqual {60}
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Return 
	050 Move X0, [X21+64]
	051 Compare X0, 0
	052 JumpIfEqual {74}
	053 Move X1, X19
	054 Move W2, W20
	055 Call VisualTreeStyleUpdaterTraversal.AddChangedElement, X0, X1, X2
	056 Move TEMP, X20
	057 And TEMP, TEMP, 0x8000
	058 Compare TEMP, 0x8000
	059 JumpIfNotEqual {44}
	060 Move X0, [X21+40]
	061 Compare X0, 0
	062 JumpIfEqual {74}
	063 Move X8, 0x447000
	064 Move X8, [X8+1992]
	065 Move X1, X19
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X2, [X8]
	071 Move X30, [X31+48]
	072 Call HashSet`1<Object>.Add, X0, X1
	073 Return 
	074 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x03D1C664 MOV X21, X1
	0x03D1C668 MOV X19, X0
	0x03D1C66C TBNZ X8, 0x0, 0x3D1C6E4
	0x03D1C670 ADRP X0, 0x448000
	0x03D1C674 LDR X0, [X0 + 0x268]
	0x03D1C678 BL 0x1C16CF4
	0x03D1C67C ADRP X0, 0x448000
	0x03D1C680 LDR X0, [X0 + 0x310]
	0x03D1C684 BL 0x1C16CF4
	0x03D1C688 ADRP X0, 0x448000
	0x03D1C68C LDR X0, [X0 + 0x318]
	0x03D1C690 BL 0x1C16CF4
	0x03D1C694 ADRP X0, 0x448000
	0x03D1C698 LDR X0, [X0 + 0x320]
	0x03D1C69C BL 0x1C16CF4
	0x03D1C6A0 ADRP X0, 0x3D7000
	0x03D1C6A4 LDR X0, [X0 + 0xE00]
	0x03D1C6A8 BL 0x1C16CF4
	0x03D1C6AC ADRP X0, 0x448000
	0x03D1C6B0 LDR X0, [X0 + 0x270]
	0x03D1C6B4 BL 0x1C16CF4
	0x03D1C6B8 ADRP X0, 0x448000
	0x03D1C6BC LDR X0, [X0 + 0x130]
	0x03D1C6C0 BL 0x1C16CF4
	0x03D1C6C4 ADRP X0, 0x448000
	0x03D1C6C8 LDR X0, [X0 + 0x308]
	0x03D1C6CC BL 0x1C16CF4
	0x03D1C6D0 ADRP X0, 0x448000
	0x03D1C6D4 LDR X0, [X0 + 0x328]
	0x03D1C6D8 BL 0x1C16CF4
	0x03D1C6DC MOVZ W8, 0x1
	0x03D1C6E0 STRB W8, [X22 + 0x94C]
	0x03D1C6E4 MOVI V0.2D, 0x0
	0x03D1C6E8 MOV X0, X19
	0x03D1C6EC MOV X1, X21
	0x03D1C6F0 STR X31, [X31 + 0x100]
	0x03D1C6F4 STP V0, V0, [X31 + 0xE0]
	0x03D1C6F8 STP V0, V0, [X31 + 0xC0]
	0x03D1C6FC STR V0, [X31 + 0xB]
	0x03D1C700 BL 0x3D1CC9C
	0x03D1C704 TBNZ X0, 0x0, 0x3D1CBBC
	0x03D1C708 LDR X0, [X19 + 0x18]
	0x03D1C70C CBZ X0, 0x3D1C814
	0x03D1C710 ADRP X8, 0x448000
	0x03D1C714 LDR X8, [X8 + 0x320]
	0x03D1C718 MOV X1, X21
	0x03D1C71C LDR X2, [X8]
	0x03D1C720 BL 0x2DBE4B0
	0x03D1C724 MOV W24, W0
	0x03D1C728 TBZ X0, 0x0, 0x3D1C73C
	0x03D1C72C CBZ X21, 0x3D1C814
	0x03D1C730 ADD X8, X21, 0x2A4
	0x03D1C734 MOVI V0.2D, 0x0
	0x03D1C738 STR D0, [X8]
	0x03D1C73C LDR X0, [X19 + 0x38]
	0x03D1C740 CBZ X0, 0x3D1C814
	0x03D1C744 BL 0x3D1C1A8
	0x03D1C748 CBZ X21, 0x3D1C814
	0x03D1C74C MOV W22, W0
	0x03D1C750 LDR X0, [X21 + 0x3B8]
	0x03D1C754 CBZ X0, 0x3D1C818
	0x03D1C758 ADRP X28, 0x448000
	0x03D1C75C LDR X28, [X28 + 0x308]
	0x03D1C760 MOV W23, W31
	0x03D1C764 LDR W8, [X0 + 0x18]
	0x03D1C768 CMP W23, W8
	0x03D1C76C B.GE 0x3D1C818
	0x03D1C770 LDR X2, [X28]
	0x03D1C774 MOV W1, W23
	0x03D1C778 BL 0x301BCCC
	0x03D1C77C CBZ X0, 0x3D1C814
	0x03D1C780 MOV X1, X31
	0x03D1C784 MOV X25, X0
	0x03D1C788 BL 0x3E06DC8
	0x03D1C78C CBZ X0, 0x3D1C7F8
	0x03D1C790 MOV X0, X25
	0x03D1C794 MOV X1, X31
	0x03D1C798 BL 0x3E06DC8
	0x03D1C79C CBZ X0, 0x3D1C814
	0x03D1C7A0 MOV W26, W31
	0x03D1C7A4 LDR W8, [X0 + 0x18]
	0x03D1C7A8 CMP W26, W8
	0x03D1C7AC B.GE 0x3D1C7F8
	0x03D1C7B0 LDR X27, [X19 + 0x38]
	0x03D1C7B4 MOV X0, X25
	0x03D1C7B8 MOV X1, X31
	0x03D1C7BC BL 0x3E06DC8
	0x03D1C7C0 CBZ X0, 0x3D1C814
	0x03D1C7C4 LDR X2, [X28]
	0x03D1C7C8 MOV W1, W26
	0x03D1C7CC BL 0x301BCCC
	0x03D1C7D0 CBZ X27, 0x3D1C814
	0x03D1C7D4 MOV X1, X0
	0x03D1C7D8 MOV X0, X27
	0x03D1C7DC BL 0x3D1C2E0
	0x03D1C7E0 MOV X0, X25
	0x03D1C7E4 MOV X1, X31
	0x03D1C7E8 ADD W26, W26, 0x1
	0x03D1C7EC BL 0x3E06DC8
	0x03D1C7F0 CBNZ X0, 0x3D1C7A4
	0x03D1C7F4 B 0x3D1C814
	0x03D1C7F8 LDR X0, [X19 + 0x38]
	0x03D1C7FC CBZ X0, 0x3D1C814
	0x03D1C800 MOV X1, X25
	0x03D1C804 BL 0x3D1C2E0
	0x03D1C808 LDR X0, [X21 + 0x3B8]
	0x03D1C80C ADD W23, W23, 0x1
	0x03D1C810 CBNZ X0, 0x3D1C764
	0x03D1C814 BL 0x1C16F20
	0x03D1C818 LDR X8, [X19 + 0x38]
	0x03D1C81C CBZ X8, 0x3D1C814
	0x03D1C820 LDR X26, [X8 + 0x18]
	0x03D1C824 MOV X0, X21
	0x03D1C828 MOV X1, X31
	0x03D1C82C BL 0x3DE0F44
	0x03D1C830 MOV X1, X31
	0x03D1C834 BL 0x3DC6070
	0x03D1C838 LDR X8, [X19 + 0x38]
	0x03D1C83C TBZ X24, 0x0, 0x3D1C990
	0x03D1C840 CBZ X8, 0x3D1C814
	0x03D1C844 STR X21, [X8 + 0x20]
	0x03D1C848 LDR X1, [X19 + 0x28]
	0x03D1C84C MOV W23, W0
	0x03D1C850 SUB W2, W22, 0x1
	0x03D1C854 MOV X0, X8
	0x03D1C858 MOV X3, X31
	0x03D1C85C BL 0x3D53000
	0x03D1C860 LDR X2, [X19 + 0x28]
	0x03D1C864 ADD X8, X31, 0x58
	0x03D1C868 MOV X0, X19
	0x03D1C86C MOV X1, X21
	0x03D1C870 BL 0x3D1CD20
	0x03D1C874 ADD X0, X31, 0xB0
	0x03D1C878 ADD X1, X31, 0x58
	0x03D1C87C MOVZ W2, 0x58
	0x03D1C880 BL 0x3EB1AC0
	0x03D1C884 ADD X8, X31, 0x0
	0x03D1C888 ADD X0, X31, 0xB0
	0x03D1C88C MOV X1, X31
	0x03D1C890 BL 0x3DCA748
	0x03D1C894 MOV X0, X21
	0x03D1C898 MOV X1, X31
	0x03D1C89C BL 0x3DEF4F8
	0x03D1C8A0 TBZ X0, 0x0, 0x3D1C8B8
	0x03D1C8A4 LDR X0, [X21 + 0x3B0]
	0x03D1C8A8 CBZ X0, 0x3D1C814
	0x03D1C8AC ADD X1, X31, 0xB0
	0x03D1C8B0 MOV X2, X31
	0x03D1C8B4 BL 0x3DE7180
	0x03D1C8B8 ADRP X24, 0x448000
	0x03D1C8BC LDR X24, [X24 + 0x268]
	0x03D1C8C0 LDR X0, [X24]
	0x03D1C8C4 LDR W8, [X0 + 0xE0]
	0x03D1C8C8 CBNZ W8, 0x3D1C8D0
	0x03D1C8CC BL 0x1C16DFC
	0x03D1C8D0 ADD X0, X31, 0xB0
	0x03D1C8D4 MOV X1, X31
	0x03D1C8D8 BL 0x3DE2B24
	0x03D1C8DC MOV X0, X21
	0x03D1C8E0 MOV X1, X31
	0x03D1C8E4 BL 0x3DE9658
	0x03D1C8E8 TBZ X0, 0x0, 0x3D1C934
	0x03D1C8EC MOV X0, X21
	0x03D1C8F0 MOV X1, X31
	0x03D1C8F4 BL 0x3DE0F44
	0x03D1C8F8 LDR X8, [X24]
	0x03D1C8FC MOV X24, X0
	0x03D1C900 LDR W9, [X8 + 0xE0]
	0x03D1C904 CBNZ W9, 0x3D1C910
	0x03D1C908 MOV X0, X8
	0x03D1C90C BL 0x1C16DFC
	0x03D1C910 ADD X1, X31, 0xB0
	0x03D1C914 MOV X0, X24
	0x03D1C918 MOV X2, X31
	0x03D1C91C BL 0x3DE3660
	0x03D1C920 TBNZ X0, 0x0, 0x3D1C934
	0x03D1C924 ADD X2, X31, 0xB0
	0x03D1C928 MOV X0, X19
	0x03D1C92C MOV X1, X21
	0x03D1C930 BL 0x3D1BB20
	0x03D1C934 ADD X0, X31, 0xB0
	0x03D1C938 MOV X1, X31
	0x03D1C93C BL 0x3DC60C8
	0x03D1C940 TBZ X0, 0x0, 0x3D1C9A0
	0x03D1C944 MOV X0, X21
	0x03D1C948 MOV X1, X31
	0x03D1C94C BL 0x3DE89C8
	0x03D1C950 TBZ X0, 0x0, 0x3D1C9A0
	0x03D1C954 MOV X0, X21
	0x03D1C958 MOV X1, X31
	0x03D1C95C BL 0x3DE0F44
	0x03D1C960 ADD X3, X31, 0xB0
	0x03D1C964 MOV X1, X21
	0x03D1C968 MOV X2, X0
	0x03D1C96C BL 0x3D1D4D8
	0x03D1C970 ADD X1, X31, 0xB0
	0x03D1C974 MOV X0, X21
	0x03D1C978 MOV X2, X31
	0x03D1C97C BL 0x3DF2C2C
	0x03D1C980 MOV X0, X19
	0x03D1C984 MOV X1, X21
	0x03D1C988 BL 0x3D1D5AC
	0x03D1C98C B 0x3D1C9B0

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X20, 0x6CC000
	010 Move W8, [X20+2367]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x449000
	017 Move X0, [X0+616]
	018 Call 0x1C17CF4
	019 Move X0, 0x447000
	020 Move X0, [X0+2008]
	021 Call 0x1C17CF4
	022 Move X0, 0x447000
	023 Move X0, [X0+2016]
	024 Call 0x1C17CF4
	025 Move X0, 0x447000
	026 Move X0, [X0+2024]
	027 Call 0x1C17CF4
	028 Move X0, 0x447000
	029 Move X0, [X0+2032]
	030 Call 0x1C17CF4
	031 Move X0, 0x447000
	032 Move X0, [X0+2040]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+2367], W8
	036 Move [X31+64], X31
	037 Move [X31+72], X31
	038 Move [X31+80], X31
	039 Move [X31+32], X31
	040 Move [X31+40], X31
	041 Move [X31+48], X31
	042 Move W8, [X19+52]
	043 Move W9, [X19+56]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, X19
	046 Move [X19+56], W8
	047 Call VisualTreeStyleUpdater.ApplyStyles, X0
	048 Move X0, [X19+64]
	049 Compare X0, 0
	050 JumpIfEqual {171}
	051 Call VisualTreeStyleUpdaterTraversal.Clear, X0
	052 Move X0, [X19+32]
	053 Compare X0, 0
	054 JumpIfEqual {171}
	055 Move X24, 0x447000
	056 Move X24, [X24+2040]
	057 Add X8, X31, 8
	058 Move X1, [X24]
	059 Call HashSet`1<Object>.GetEnumerator, X0
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 Move X8, [X31+24]
	062 Move X23, 0x447000
	063 Move [X31+4], V0
	064 Move [X31+80], X8
	065 Move X23, [X23+2016]
	066 Move X1, [X23]
	067 Add X0, X31, 64
	068 Call Enumerator<Object>.MoveNext, X0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {79}
	073 Move X0, [X19+64]
	074 Compare X0, 0
	075 JumpIfEqual {168}
	076 Move X1, [X31+80]
	077 Move W2, 16
	078 Call VisualTreeStyleUpdaterTraversal.AddChangedElement, X0, X1, X2
	079 Move X8, 0x447000
	080 Move X8, [X8+2008]
	081 Add X0, X31, 64
	082 Move X1, [X8]
	083 Call Enumerator<Object>.Dispose, X0
	084 Move X0, [X19+32]
	085 Compare X0, 0
	086 JumpIfEqual {171}
	087 Move X22, 0x447000
	088 Move X22, [X22+2032]
	089 Move X1, [X22]
	090 Call HashSet`1<Object>.Clear, X0
	091 Move X0, [X19+40]
	092 Compare X0, 0
	093 JumpIfEqual {171}
	094 Move X1, [X24]
	095 Add X8, X31, 8
	096 Call HashSet`1<Object>.GetEnumerator, X0
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 Move X8, [X31+24]
	099 Move X24, 0x449000
	100 Move [X31+2], V0
	101 Move [X31+48], X8
	102 Move X24, [X24+616]
	103 Move X1, [X23]
	104 Add X0, X31, 32
	105 Call Enumerator<Object>.MoveNext, X0
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {149}
	110 Move X20, [X31+48]
	111 Compare X20, 0
	112 JumpIfEqual {169}
	113 Move X0, X20
	114 Move X1, X31
	115 Call VisualElement.get_hasRunningAnimations, X0
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {127}
	120 Move X0, X20
	121 Move X1, X31
	122 Call VisualElement.get_hasCompletedAnimations, X0
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {103}
	127 Move X0, X20
	128 Move X1, X31
	129 Call VisualElement.get_computedStyle, X0
	130 Move X21, X0
	131 Move X0, [X24]
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X0, X21
	137 Move X1, X31
	138 Call ComputedTransitionUtils.UpdateComputedTransitions, X0
	139 Move X21, [X19+64]
	140 Move X0, X20
	141 Move X1, X31
	142 Call VisualElement.get_computedStyle, X0
	143 Compare X21, 0
	144 JumpIfEqual {170}
	145 Move X2, X0
	146 Move X0, X21
	147 Move X1, X20
	148 Call VisualTreeStyleUpdaterTraversal.CancelAnimationsWithNoTransitionProperty, X0, X1, X2
	149 Move X8, 0x447000
	150 Move X8, [X8+2008]
	151 Add X0, X31, 32
	152 Move X1, [X8]
	153 Call Enumerator<Object>.Dispose, X0
	154 Move X0, [X19+40]
	155 Compare X0, 0
	156 JumpIfEqual {171}
	157 Move X1, [X22]
	158 Call HashSet`1<Object>.Clear, X0
	159 Move X20, [X31+144]
	160 Move X19, [X31+152]
	161 Move X22, [X31+128]
	162 Move X21, [X31+136]
	163 Move X24, [X31+112]
	164 Move X23, [X31+120]
	165 Move X30, [X31+96]
	166 Add X31, X31, 160
	167 Return 
	168 Call 0x1C17F20
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Move X20, X0
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X0, X20
	175 Call 0x3EB2AD0
	176 Move X21, [X0]
	177 Call 0x3EB2AE0
	178 Move X8, 0x447000
	179 Move X8, [X8+2008]
	180 Add X0, X31, 64
	181 Move X1, [X8]
	182 Call Enumerator<Object>.Dispose, X0
	183 Compare X21, 0
	184 JumpIfEqual {84}
	185 Move X21, X31
	186 Move X20, X0
	187 Move X8, 0x447000
	188 Move X8, [X8+2008]
	189 Move X1, [X8]
	190 Add X0, X31, 64
	191 Call Enumerator<Object>.Dispose, X0
	192 Compare X21, 0
	193 JumpIfEqual {220}
	194 Move X0, X21
	195 Call 0x1C17F18
	196 Move X20, X0
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X0, X20
	199 Call 0x3EB2AD0
	200 Move X21, [X0]
	201 Call 0x3EB2AE0
	202 Move X8, 0x447000
	203 Move X8, [X8+2008]
	204 Add X0, X31, 32
	205 Move X1, [X8]
	206 Call Enumerator<Object>.Dispose, X0
	207 Compare X21, 0
	208 JumpIfEqual {154}
	209 Move X0, X21
	210 Call 0x1C17F18
	211 Move X21, X31
	212 Move X20, X0
	213 Move X8, 0x447000
	214 Move X8, [X8+2008]
	215 Move X1, [X8]
	216 Add X0, X31, 32
	217 Call Enumerator<Object>.Dispose, X0
	218 Compare X21, 0
	219 JumpIfNotEqual {222}
	220 Move X0, X20
	221 Call 0x1D2D690
	222 Move X0, X21
	223 Call 0x1C17F18
	224 Call 0x1991590

Method: System.Boolean get_disposed()

Disassembly:
	0x03D1CDE8 BL 0x1C16CF4
	0x03D1CDEC MOVZ W8, 0x1

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_disposed(System.Boolean value)

Disassembly:
	0x03D1CDF0 STRB W8, [X23 + 0x950]
	0x03D1CDF4 LDR X0, [X19]
	0x03D1CDF8 MOVI V0.2D, 0x0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+72], W8
	003 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03D1CDFC STR X31, [X31 + 0x150]
	0x03D1CE00 STR W31, [X31 + 0xFC]
	0x03D1CE04 STR X31, [X31 + 0xF0]
	0x03D1CE08 STR X31, [X31 + 0xC0]
	0x03D1CE0C STP X31, X31, [X31 + 0x90]
	0x03D1CE10 STP V0, V0, [X26 + 0x90]
	0x03D1CE14 STP V0, V0, [X26 + 0x70]
	0x03D1CE18 STR V0, [X26 + 0x6]
	0x03D1CE1C STP V0, V0, [X26 + 0x30]
	0x03D1CE20 STP V0, V0, [X26]
	0x03D1CE24 STR X31, [X31 + 0x80]
	0x03D1CE28 STP V0, V0, [X31 + 0x60]
	0x03D1CE2C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+72]
	004 Compare W8, 0
	005 JumpIfNotEqual {17}
	006 Move X19, X0
	007 Move TEMP, X1
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {15}
	011 Move X0, [X19+64]
	012 Compare X0, 0
	013 JumpIfEqual {20}
	014 Call VisualTreeStyleUpdaterTraversal.Clear, X0
	015 Move W8, 1
	016 Move [X19+72], W8
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 
	020 Call 0x1C17F20

Method: System.Void ApplyStyles()

Disassembly:
	0x03D1C990 CBZ X8, 0x3D1C814
	0x03D1C994 LDR X9, [X21 + 0x318]
	0x03D1C998 STR X9, [X8 + 0x18]
	0x03D1C99C B 0x3D1CB3C
	0x03D1C9A0 ADD X1, X31, 0xB0
	0x03D1C9A4 MOV X0, X21
	0x03D1C9A8 MOV X2, X31
	0x03D1C9AC BL 0x3DF2C2C
	0x03D1C9B0 ADD X0, X31, 0xB0
	0x03D1C9B4 MOV X1, X31
	0x03D1C9B8 BL 0x3DCA860
	0x03D1C9BC MOVZ W1, 0x1
	0x03D1C9C0 MOV X0, X21
	0x03D1C9C4 MOV X2, X31
	0x03D1C9C8 BL 0x3DEF508
	0x03D1C9CC MOV X0, X21
	0x03D1C9D0 MOV X1, X31
	0x03D1C9D4 BL 0x3DE0F44
	0x03D1C9D8 ADRP X8, 0x448000
	0x03D1C9DC LDR X8, [X8 + 0x328]
	0x03D1C9E0 LDR X1, [X8]
	0x03D1C9E4 BL 0x266C5CC
	0x03D1C9E8 STR W0, [X21 + 0x320]
	0x03D1C9EC LDR X8, [X19 + 0x38]
	0x03D1C9F0 CBZ X8, 0x3D1C814
	0x03D1C9F4 STR X31, [X8 + 0x20]
	0x03D1C9F8 LDR X8, [X19 + 0x28]
	0x03D1C9FC CBZ X8, 0x3D1C814
	0x03D1CA00 LDP W2, W9, [X8 + 0x18]
	0x03D1CA04 ADD W9, W9, 0x1
	0x03D1CA08 CMP W2, 0x1
	0x03D1CA0C STP W31, W9, [X8 + 0x18]
	0x03D1CA10 B.LT 0x3D1CA24
	0x03D1CA14 LDR X0, [X8 + 0x10]
	0x03D1CA18 MOV W1, W31
	0x03D1CA1C MOV X3, X31
	0x03D1CA20 BL 0x339FA34
	0x03D1CA24 CMP W23, 0x0
	0x03D1CA28 B.GT 0x3D1CA48
	0x03D1CA2C MOV X0, X21
	0x03D1CA30 MOV X1, X31
	0x03D1CA34 BL 0x3DE0F44
	0x03D1CA38 MOV X1, X31
	0x03D1CA3C BL 0x3DC6070
	0x03D1CA40 CMP W0, 0x1
	0x03D1CA44 B.LT 0x3D1CB3C
	0x03D1CA48 ADRP X23, 0x448000
	0x03D1CA4C LDR X23, [X23 + 0x318]
	0x03D1CA50 LDR X0, [X23]
	0x03D1CA54 LDR W8, [X0 + 0xE0]
	0x03D1CA58 CBNZ W8, 0x3D1CA64
	0x03D1CA5C BL 0x1C16DFC
	0x03D1CA60 LDR X0, [X23]
	0x03D1CA64 LDR X8, [X0 + 0xB8]
	0x03D1CA68 MOV X0, X21
	0x03D1CA6C MOV X2, X31
	0x03D1CA70 LDR W1, [X8 + 0x10]
	0x03D1CA74 BL 0x3DF169C
	0x03D1CA78 TBZ X0, 0x0, 0x3D1CB3C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6CC000
	005 Move W8, [X20+2368]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3D8000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2368], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {72}
	019 Move X8, [X0]
	020 Move X9, [X8+920]
	021 Move X1, [X8+928]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Compare X0, 0
	024 JumpIfEqual {72}
	025 Move X20, 0x3D8000
	026 Move X20, [X20+2600]
	027 Move X1, X31
	028 Call VisualElement.get_panel, X0
	029 Move X8, [X20]
	030 Move X20, X0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Move X1, X31
	039 Call Debug.Assert, X0
	040 Move X0, [X19+24]
	041 Move W8, 1
	042 Move [X19+48], W8
	043 Compare X0, 0
	044 JumpIfEqual {72}
	045 Move X20, [X19+64]
	046 Move X1, X31
	047 Call BaseVisualElementPanel.get_scaledPixelsPerPoint, X0
	048 Compare X20, 0
	049 JumpIfEqual {72}
	050 Move [X20+48], S0
	051 Move X0, [X19+24]
	052 Compare X0, 0
	053 JumpIfEqual {72}
	054 Move X8, [X0]
	055 Move X20, [X19+64]
	056 Move X9, [X8+920]
	057 Move X1, [X8+928]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Compare X20, 0
	060 JumpIfEqual {72}
	061 Move X8, [X20]
	062 Move X1, X0
	063 Move X0, X20
	064 Move X9, [X8+376]
	065 Move X2, [X8+384]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move [X19+48], W31
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Return 
	072 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03D1CE5C LDR X8, [X0 + 0xB8]
	0x03D1CE60 LDR X9, [X9 + 0x338]
	0x03D1CE64 LDR X24, [X8]
	0x03D1CE68 LDR X0, [X9]
	0x03D1CE6C BL 0x1C16F10
	0x03D1CE70 ADRP X8, 0x448000
	0x03D1CE74 LDR X8, [X8 + 0x370]
	0x03D1CE78 MOV X1, X24
	0x03D1CE7C MOV X3, X31
	0x03D1CE80 MOV X23, X0
	0x03D1CE84 LDR X2, [X8]
	0x03D1CE88 BL 0x295B088
	0x03D1CE8C LDR X8, [X19]
	0x03D1CE90 LDR X8, [X8 + 0xB8]
	0x03D1CE94 STR X23, [X8 + 0x8]
	0x03D1CE98 CBZ X21, 0x3D1D358
	0x03D1CE9C ADRP X8, 0x448000
	0x03D1CEA0 LDR X8, [X8 + 0x368]
	0x03D1CEA4 MOV X0, X21
	0x03D1CEA8 MOV X1, X23
	0x03D1CEAC LDR X2, [X8]
	0x03D1CEB0 BL 0x305C464
	0x03D1CEB4 CBZ X22, 0x3D1D358
	0x03D1CEB8 MOV X0, X22
	0x03D1CEBC MOV X1, X31
	0x03D1CEC0 BL 0x3DEF384
	0x03D1CEC4 CBZ X0, 0x3D1D358
	0x03D1CEC8 LDR X8, [X0]
	0x03D1CECC LDP X9, X1, [X8 + 0x158]
	0x03D1CED0 BLR X9
	0x03D1CED4 LDR V0, [X20 + 0x30]
	0x03D1CED8 MOV W23, W0
	0x03D1CEDC ADD X0, X31, 0xFC
	0x03D1CEE0 MOV X1, X31
	0x03D1CEE4 STR S0, [X31 + 0xFC]
	0x03D1CEE8 BL 0x338FE0C
	0x03D1CEEC LDR X9, [X20 + 0x38]
	0x03D1CEF0 CBZ X9, 0x3D1D358
	0x03D1CEF4 MOV W8, W0
	0x03D1CEF8 LDR X0, [X9 + 0x18]
	0x03D1CEFC STR X25, [X31 + 0x168]
	0x03D1CF00 CBZ X0, 0x3D1D358
	0x03D1CF04 ADRP X19, 0x448000
	0x03D1CF08 ADRP X29, 0x448000
	0x03D1CF0C LDR X19, [X19 + 0x360]
	0x03D1CF10 LDR X29, [X29 + 0x348]
	0x03D1CF14 MOVZ W9, 0x18D
	0x03D1CF18 SMADDL X9, X23, X9, X31
	0x03D1CF1C SXTW X8, W8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x6CC000
	008 Move X23, 0x447000
	009 Move X22, 0x447000
	010 Move X21, 0x449000
	011 Move W8, [X20+2369]
	012 Move X23, [X23+2184]
	013 Move X22, [X22+2192]
	014 Move X21, [X21+672]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x447000
	021 Move X0, [X0+2192]
	022 Call 0x1C17CF4
	023 Move X0, 0x447000
	024 Move X0, [X0+2184]
	025 Call 0x1C17CF4
	026 Move X0, 0x449000
	027 Move X0, [X0+672]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2369], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X1, [X22]
	034 Move X20, X0
	035 Call HashSet`1<Object>..ctor, X0
	036 Move [X19+32], X20
	037 Move X0, [X23]
	038 Call 0x1C17F10
	039 Move X1, [X22]
	040 Move X20, X0
	041 Call HashSet`1<Object>..ctor, X0
	042 Move [X19+40], X20
	043 Move [X19+48], W31
	044 Move [X19+52], W31
	045 Move [X19+56], W31
	046 Move X0, [X21]
	047 Call 0x1C17F10
	048 Move X20, X0
	049 Call VisualTreeStyleUpdaterTraversal..ctor, X0
	050 Move [X19+64], X20
	051 Move X0, X19
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X1, X31
	057 Move X30, [X31+48]
	058 Move X23, [X31+56]
	059 Call Object..ctor, X0
	060 Return 

Method: System.Void .cctor()

Disassembly:
	0x03D1D11C MOV W0, W25
	0x03D1D120 BL 0x3D1B150
	0x03D1D124 TBNZ X0, 0x0, 0x3D1D16C
	0x03D1D128 ADRP X8, 0x447000
	0x03D1D12C LDR X27, [X20 + 0x10]
	0x03D1D130 LDR X8, [X8 + 0x2A8]
	0x03D1D134 LDR X0, [X8]
	0x03D1D138 BL 0x1C16F10
	0x03D1D13C MOV X1, X27
	0x03D1D140 MOV X2, X31
	0x03D1D144 MOV X26, X0
	0x03D1D148 BL 0x3E08370
	0x03D1D14C LDR X0, [X28]
	0x03D1D150 STR X26, [X31 + 0x90]
	0x03D1D154 LDR W8, [X0 + 0xE0]
	0x03D1D158 CBNZ W8, 0x3D1D160
	0x03D1D15C BL 0x1C16DFC
	0x03D1D160 MOV W0, W25
	0x03D1D164 MOV X1, X26
	0x03D1D168 BL 0x3D1B1E0
	0x03D1D16C LDR X8, [X20 + 0x38]
	0x03D1D170 CBZ X8, 0x3D1D358
	0x03D1D174 LDR X9, [X31 + 0x90]
	0x03D1D178 STR X9, [X8 + 0x18]
	0x03D1D17C B 0x3D1D1A0
	0x03D1D180 ADRP X28, 0x447000
	0x03D1D184 LDR X28, [X28 + 0x1F8]
	0x03D1D188 MOVZ W8, 0x18D
	0x03D1D18C MUL X8, X19, X8
	0x03D1D190 SXTW X9, W23
	0x03D1D194 EOR X23, X8, X9, 0x0
	0x03D1D198 ADRP X19, 0x447000
	0x03D1D19C LDR X19, [X19 + 0x360]
	0x03D1D1A0 LDR X8, [X20 + 0x38]
	0x03D1D1A4 CBZ X8, 0x3D1D358

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6CB000
	006 Move X20, 0x448000
	007 Move X19, 0x448000
	008 Move W8, [X21+2370]
	009 Move X20, [X20+752]
	010 Move X19, [X19+608]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x448000
	016 Move X0, [X0+608]
	017 Call 0x1C17CF4
	018 Move X0, 0x448000
	019 Move X0, [X0+752]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2370], W8
	023 Move X8, [X19]
	024 Move X9, [X20]
	025 Move W1, 1
	026 Move W2, W31
	027 Move X8, [X8+184]
	028 Move W3, W31
	029 Move X4, X31
	030 Move [X8], X9
	031 Move X8, [X19]
	032 Move X8, [X8+184]
	033 Move X0, [X8]
	034 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	035 Move X8, [X19]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X8, [X8+184]
	039 Move [X8+8], X0
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 

