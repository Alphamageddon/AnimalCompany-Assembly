Type: UnityEngine.UIElements.TransitionData

Method: UnityEngine.UIElements.TransitionData Copy()

Disassembly:
	0x03DFD2C8 MOVZ W11, 0x18
	0x03DFD2CC MADD X8, X8, X11, X9
	0x03DFD2D0 STR X10, [X8 + 0x30]
	0x03DFD2D4 STR V0, [X8 + 0x2]
	0x03DFD2D8 B 0x3DFD36C
	0x03DFD2DC LDR W8, [X19 + 0x4]
	0x03DFD2E0 LDR X0, [X20 + 0x10]
	0x03DFD2E4 CMP W8, 0x1
	0x03DFD2E8 B.NE 0x3DFD330
	0x03DFD2EC CBZ X0, 0x3DFD278
	0x03DFD2F0 ADRP X8, 0x36C000
	0x03DFD2F4 LDR X8, [X8 + 0xCE0]
	0x03DFD2F8 MOV W1, W21
	0x03DFD2FC LDR X2, [X8]
	0x03DFD300 BL 0x3073200
	0x03DFD304 B 0x3DFD36C
	0x03DFD308 LDR X8, [X10 + 0x20]
	0x03DFD30C LDR V0, [X31 + 0x2]
	0x03DFD310 LDR X9, [X31 + 0x30]
	0x03DFD314 ADD X1, X31, 0x40
	0x03DFD318 LDR X8, [X8 + 0xC0]
	0x03DFD31C LDR X2, [X8 + 0x70]
	0x03DFD320 STR V0, [X31 + 0x4]
	0x03DFD324 STR X9, [X31 + 0x50]
	0x03DFD328 BL 0x3070E68
	0x03DFD32C B 0x3DFD36C
	0x03DFD330 LDR X8, [X19 + 0x10]
	0x03DFD334 LDR V0, [X19]
	0x03DFD338 STR X8, [X31 + 0x30]
	0x03DFD33C STR V0, [X31 + 0x2]
	0x03DFD340 CBZ X0, 0x3DFD278
	0x03DFD344 ADRP X8, 0x36C000
	0x03DFD348 LDR X8, [X8 + 0xCF8]
	0x03DFD34C LDR V0, [X31 + 0x2]
	0x03DFD350 LDR X9, [X31 + 0x30]
	0x03DFD354 ADD X2, X31, 0x40
	0x03DFD358 LDR X3, [X8]
	0x03DFD35C MOV W1, W21
	0x03DFD360 STR V0, [X31 + 0x4]
	0x03DFD364 STR X9, [X31 + 0x50]
	0x03DFD368 BL 0x3070AB0
	0x03DFD36C LDR X8, [X22 + 0x28]
	0x03DFD370 LDR X9, [X31 + 0x58]
	0x03DFD374 CMP X8, X9
	0x03DFD378 B.NE 0x3DFD394
	0x03DFD37C LDP X20, X19, [X31 + 0x90]
	0x03DFD380 LDP X22, X21, [X31 + 0x80]
	0x03DFD384 LDP X24, X23, [X31 + 0x70]
	0x03DFD388 LDR X30, [X31 + 0x60]
	0x03DFD38C ADD X31, X31, 0xA0
	0x03DFD390 RET
	0x03DFD394 BL 0x3EB1B20
	0x03DFD398 STR X30, [X31 - 0x30]!
	0x03DFD39C STP X22, X21, [X31 + 0x10]
	0x03DFD3A0 STP X20, X19, [X31 + 0x20]
	0x03DFD3A4 ADRP X21, 0x5EB000
	0x03DFD3A8 ADRP X22, 0x36C000
	0x03DFD3AC ADRP X20, 0x36C000
	0x03DFD3B0 LDRB W8, [X21 + 0x2B6]
	0x03DFD3B4 LDR X22, [X22 + 0xD00]
	0x03DFD3B8 LDR X20, [X20 + 0xD08]
	0x03DFD3BC MOV X19, X0
	0x03DFD3C0 TBNZ X8, 0x0, 0x3DFD3E4
	0x03DFD3C4 ADRP X0, 0x36C000
	0x03DFD3C8 LDR X0, [X0 + 0xD08]
	0x03DFD3CC BL 0x1C16CF4
	0x03DFD3D0 ADRP X0, 0x36C000
	0x03DFD3D4 LDR X0, [X0 + 0xD00]
	0x03DFD3D8 BL 0x1C16CF4
	0x03DFD3DC MOVZ W8, 0x1
	0x03DFD3E0 STRB W8, [X21 + 0x2B6]
	0x03DFD3E4 LDR X0, [X22]
	0x03DFD3E8 BL 0x1C16F10
	0x03DFD3EC LDR X1, [X20]
	0x03DFD3F0 MOV X20, X0
	0x03DFD3F4 BL 0x3070540
	0x03DFD3F8 STR X20, [X19 + 0x10]
	0x03DFD3FC MOV X0, X19
	0x03DFD400 LDP X20, X19, [X31 + 0x20]
	0x03DFD404 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x5EC000
	013 Move X28, 0x369000
	014 Move X23, 0x36D000
	015 Move X27, 0x321000
	016 Move X24, 0x36D000
	017 Move X26, 0x369000
	018 Move X25, 0x36D000
	019 Move X19, X8
	020 Move X28, [X28+800]
	021 Move W8, [X21+688]
	022 Move X23, [X23+3224]
	023 Move X27, [X27+2016]
	024 Move X24, [X24+3232]
	025 Move X26, [X26+840]
	026 Move X25, [X25+3240]
	027 Move X20, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {52}
	032 Move X0, 0x36D000
	033 Move X0, [X0+3232]
	034 Call 0x1C17CF4
	035 Move X0, 0x36D000
	036 Move X0, [X0+3240]
	037 Call 0x1C17CF4
	038 Move X0, 0x36D000
	039 Move X0, [X0+3224]
	040 Call 0x1C17CF4
	041 Move X0, 0x369000
	042 Move X0, [X0+800]
	043 Call 0x1C17CF4
	044 Move X0, 0x321000
	045 Move X0, [X0+2016]
	046 Call 0x1C17CF4
	047 Move X0, 0x369000
	048 Move X0, [X0+840]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X21+688], W8
	052 Move X0, [X28]
	053 Move X21, [X20]
	054 Call 0x1C17F10
	055 Move X2, [X23]
	056 Move X1, X21
	057 Move X22, X0
	058 Call List`1<TimeValue>..ctor, X0, X1
	059 Move X0, [X28]
	060 Move X21, [X20+8]
	061 Call 0x1C17F10
	062 Move X2, [X23]
	063 Move X1, X21
	064 Move X23, X0
	065 Call List`1<TimeValue>..ctor, X0, X1
	066 Move X0, [X27]
	067 Move X21, [X20+16]
	068 Call 0x1C17F10
	069 Move X2, [X24]
	070 Move X1, X21
	071 Move X24, X0
	072 Call List`1<StylePropertyName>..ctor, X0, X1
	073 Move X0, [X26]
	074 Move X20, [X20+24]
	075 Call 0x1C17F10
	076 Move X2, [X25]
	077 Move X1, X20
	078 Move X21, X0
	079 Call List`1<EasingFunction>..ctor, X0, X1
	080 Move [X19], X22
	081 Move [X19+8], X23
	082 Move [X19+16], X24
	083 Move [X19+24], X21
	084 Move X20, [X31+80]
	085 Move X19, [X31+88]
	086 Move X22, [X31+64]
	087 Move X21, [X31+72]
	088 Move X24, [X31+48]
	089 Move X23, [X31+56]
	090 Move X26, [X31+32]
	091 Move X25, [X31+40]
	092 Move X28, [X31+16]
	093 Move X27, [X31+24]
	094 Move X30, [X31+96]
	095 Return X0

Method: System.Void CopyFrom(ref UnityEngine.UIElements.TransitionData other)

Disassembly:
	0x03DFD408 MOV X1, X31
	0x03DFD40C LDR X30, [X31], #0x30
	0x03DFD410 B 0x33BDD8C
	0x03DFD414 MOVZ W8, 0x4B000000
	0x03DFD418 MOVZ W9, 0xCB000000
	0x03DFD41C FMOV S1, W8
	0x03DFD420 FMOV S2, W9
	0x03DFD424 FMIN S1, S0, S1
	0x03DFD428 FCMP S0, S2
	0x03DFD42C FCSEL S0, S1, S2, PL
	0x03DFD430 FMOV W8, S0
	0x03DFD434 ORR X0, X8, 0x1FFFFFFFF
	0x03DFD438 RET
	0x03DFD43C MOVZ W8, 0x4B000000
	0x03DFD440 MOVZ W9, 0xCB000000
	0x03DFD444 FMOV S1, W8
	0x03DFD448 FMOV S2, W9
	0x03DFD44C FMIN S1, S0, S1
	0x03DFD450 FCMP S0, S2
	0x03DFD454 FCSEL S0, S1, S2, PL
	0x03DFD458 STR S0, [X0]
	0x03DFD45C STR W1, [X0 + 0x4]
	0x03DFD460 RET
	0x03DFD464 MOVZ X0, 0x2
	0x03DFD468 RET
	0x03DFD46C MOVZ W8, 0x4B000000
	0x03DFD470 MOVZ W9, 0xCB000000
	0x03DFD474 FMOV S1, W8
	0x03DFD478 FMOV S2, W9
	0x03DFD47C FMIN S1, S0, S1
	0x03DFD480 FCMP S0, S2
	0x03DFD484 FCSEL S0, S1, S2, PL
	0x03DFD488 STR S0, [X0]
	0x03DFD48C STR W1, [X0 + 0x4]
	0x03DFD490 RET
	0x03DFD494 MOVZ X0, 0x3
	0x03DFD498 RET
	0x03DFD49C LDR V0, [X0]
	0x03DFD4A0 RET
	0x03DFD4A4 MOVZ W8, 0x4B000000
	0x03DFD4A8 MOVZ W9, 0xCB000000
	0x03DFD4AC FMOV S1, W8
	0x03DFD4B0 FMOV S2, W9
	0x03DFD4B4 FMIN S1, S0, S1
	0x03DFD4B8 FCMP S0, S2
	0x03DFD4BC FCSEL S0, S1, S2, PL
	0x03DFD4C0 STR S0, [X0]
	0x03DFD4C4 RET
	0x03DFD4C8 LDR W0, [X0 + 0x4]
	0x03DFD4CC RET
	0x03DFD4D0 LDR W8, [X0 + 0x4]
	0x03DFD4D4 CMP W8, 0x2
	0x03DFD4D8 CSET W0, EQ
	0x03DFD4DC RET
	0x03DFD4E0 LDR W8, [X0 + 0x4]
	0x03DFD4E4 CMP W8, 0x3
	0x03DFD4E8 CSET W0, EQ
	0x03DFD4EC RET
	0x03DFD4F0 MOVZ W8, 0x4B000000
	0x03DFD4F4 MOVZ W9, 0xCB000000
	0x03DFD4F8 FMOV S1, W8
	0x03DFD4FC FMOV S2, W9
	0x03DFD500 FMIN S1, S0, S1
	0x03DFD504 FCMP S0, S2
	0x03DFD508 FCSEL S0, S1, S2, PL
	0x03DFD50C STR S0, [X0]
	0x03DFD510 STR W31, [X0 + 0x4]
	0x03DFD514 RET
	0x03DFD518 MOVZ W8, 0x4B000000
	0x03DFD51C MOVZ W9, 0xCB000000
	0x03DFD520 FMOV S1, W8
	0x03DFD524 FMOV S2, W9
	0x03DFD528 FMIN S1, S0, S1
	0x03DFD52C FCMP S0, S2
	0x03DFD530 FCSEL S0, S1, S2, PL
	0x03DFD534 FMOV W0, S0
	0x03DFD538 RET
	0x03DFD53C FMOV S0, W0
	0x03DFD540 FMOV S1, W1
	0x03DFD544 UBFM X8, X0, 0x20, 0x3F
	0x03DFD548 UBFM X9, X1, 0x20, 0x3F
	0x03DFD54C FCMP S0, S1
	0x03DFD550 CSET W10, NE
	0x03DFD554 CMP W8, W9
	0x03DFD558 CSET W8, NE
	0x03DFD55C ORR W0, W10, W8, 0x0
	0x03DFD560 RET
	0x03DFD564 LDR V0, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5EC000
	006 Move W8, [X21+689]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x36D000
	014 Move X0, [X0+3248]
	015 Call 0x1C17CF4
	016 Move X0, 0x36D000
	017 Move X0, [X0+3256]
	018 Call 0x1C17CF4
	019 Move X0, 0x36D000
	020 Move X0, [X0+3264]
	021 Call 0x1C17CF4
	022 Move X0, 0x321000
	023 Move X0, [X0+2024]
	024 Call 0x1C17CF4
	025 Move X0, 0x369000
	026 Move X0, [X0+936]
	027 Call 0x1C17CF4
	028 Move X0, 0x369000
	029 Move X0, [X0+944]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+689], W8
	033 Move X0, [X20]
	034 Move X1, [X19]
	035 Move X21, 0x36D000
	036 Move X21, [X21+3248]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Compare X0, 0
	039 JumpIfEqual {103}
	040 Move W8, [X0+28]
	041 Add W8, W8, 1
	042 Move [X0+24], W31
	043 Move [X0+28], W8
	044 Move X2, [X21]
	045 Call List`1<TimeValue>.AddRange, X0, X1
	046 Move X0, [X20+8]
	047 Move X1, [X19+8]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Compare X0, 0
	050 JumpIfEqual {103}
	051 Move W8, [X0+28]
	052 Add W8, W8, 1
	053 Move [X0+24], W31
	054 Move [X0+28], W8
	055 Move X2, [X21]
	056 Call List`1<TimeValue>.AddRange, X0, X1
	057 Move X0, [X20+16]
	058 Move X8, [X19+16]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Compare X0, 0
	061 JumpIfEqual {103}
	062 Move W2, [X0+24]
	063 Move W8, [X0+28]
	064 Add W8, W8, 1
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move [X0+24], W31
	067 Move [X0+28], W8
	068 Move X0, [X0+16]
	069 Move W1, W31
	070 Move X3, X31
	071 Call Array.Clear, X0, X1, X2
	072 Move X0, [X20+16]
	073 Compare X0, 0
	074 JumpIfEqual {103}
	075 Move X8, 0x36D000
	076 Move X8, [X8+3256]
	077 Move X1, [X19+16]
	078 Move X2, [X8]
	079 Call List`1<StylePropertyName>.AddRange, X0, X1
	080 Move X0, [X20+24]
	081 Move X1, [X19+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Compare X0, 0
	084 JumpIfEqual {103}
	085 Move W8, [X0+28]
	086 Move X9, 0x36D000
	087 Move X9, [X9+3264]
	088 Move X20, [X31+16]
	089 Move X19, [X31+24]
	090 Add W8, W8, 1
	091 Move [X0+24], W31
	092 Move [X0+28], W8
	093 Move X2, [X9]
	094 Move X30, [X31+32]
	095 Move X21, [X31+40]
	096 Call List`1<EasingFunction>.AddRange, X0, X1
	097 Return 
	098 Move X20, [X31+16]
	099 Move X19, [X31+24]
	100 Move X30, [X31+32]
	101 Move X21, [X31+40]
	102 Return 
	103 Call 0x1C17F20

Method: System.Boolean op_Equality(UnityEngine.UIElements.TransitionData lhs, UnityEngine.UIElements.TransitionData rhs)

Disassembly:
	0x03DFD568 LDR W8, [X0 + 0x4]
	0x03DFD56C FMOV S1, W1
	0x03DFD570 UBFM X9, X1, 0x20, 0x3F
	0x03DFD574 FCMP S1, S0
	0x03DFD578 CSET W10, EQ
	0x03DFD57C CMP W9, W8
	0x03DFD580 CSET W8, EQ
	0x03DFD584 AND W0, W10, W8, 0x0
	0x03DFD588 RET
	0x03DFD58C STP X30, X21, [X31 - 0x20]!
	0x03DFD590 STP X20, X19, [X31 + 0x10]
	0x03DFD594 ADRP X21, 0x5EB000
	0x03DFD598 LDRB W8, [X21 + 0x2B7]
	0x03DFD59C MOV X20, X1
	0x03DFD5A0 MOV X19, X0
	0x03DFD5A4 TBNZ X8, 0x0, 0x3DFD5BC
	0x03DFD5A8 ADRP X0, 0x321000
	0x03DFD5AC LDR X0, [X0 + 0xE08]
	0x03DFD5B0 BL 0x1C16CF4

ISIL:
	001 Move X8, [X0]
	002 Move X9, [X1]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X8, [X0+8]
	005 Move X9, [X1+8]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X8, [X0+16]
	008 Move X9, [X1+16]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W0, W31
	011 Return X0
	012 Move X8, [X0+24]
	013 Move X9, [X1+24]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSET not yet implemented."
	016 Return X0

Method: System.Boolean Equals(UnityEngine.UIElements.TransitionData other)

Disassembly:
	0x03DFD5B4 MOVZ W8, 0x1
	0x03DFD5B8 STRB W8, [X21 + 0x2B7]
	0x03DFD5BC CBZ X20, 0x3DFD5D8
	0x03DFD5C0 ADRP X8, 0x321000
	0x03DFD5C4 LDR X8, [X8 + 0xE08]
	0x03DFD5C8 LDR X9, [X20]
	0x03DFD5CC LDR X8, [X8]
	0x03DFD5D0 CMP X9, X8
	0x03DFD5D4 B.EQ 0x3DFD5E0
	0x03DFD5D8 MOV W0, W31
	0x03DFD5DC B 0x3DFD60C
	0x03DFD5E0 MOV X0, X20
	0x03DFD5E4 BL 0x1C16E08
	0x03DFD5E8 LDR V0, [X0]
	0x03DFD5EC LDR V1, [X19]
	0x03DFD5F0 LDR W8, [X0 + 0x4]
	0x03DFD5F4 LDR W9, [X19 + 0x4]
	0x03DFD5F8 FCMP S0, S1
	0x03DFD5FC CSET W10, EQ

ISIL:
	001 Move X9, [X1]
	002 Move X10, [X0]
	003 Move X8, X0
	004 Move W0, W31
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X9, [X1+8]
	007 Move X10, [X8+8]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X9, [X1+16]
	010 Move X10, [X8+16]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X8, [X8+24]
	013 Move X9, [X1+24]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSET not yet implemented."
	016 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03DFD600 CMP W8, W9
	0x03DFD604 CSET W8, EQ
	0x03DFD608 AND W0, W10, W8, 0x0
	0x03DFD60C LDP X20, X19, [X31 + 0x10]
	0x03DFD610 LDP X30, X21, [X31], #0x20
	0x03DFD614 RET
	0x03DFD618 SUB X31, X31, 0x40
	0x03DFD61C STR D8, [X31 + 0x10]
	0x03DFD620 STR X30, [X31 + 0x18]
	0x03DFD624 STP X22, X21, [X31 + 0x20]
	0x03DFD628 STP X20, X19, [X31 + 0x30]
	0x03DFD62C ADRP X21, 0x5EB000
	0x03DFD630 ADRP X20, 0x2F8000
	0x03DFD634 LDRB W8, [X21 + 0x2B8]
	0x03DFD638 LDR X20, [X20 + 0xC48]
	0x03DFD63C MOV X19, X0
	0x03DFD640 TBNZ X8, 0x0, 0x3DFD694
	0x03DFD644 ADRP X0, 0x2F8000
	0x03DFD648 LDR X0, [X0 + 0xC48]
	0x03DFD64C BL 0x1C16CF4
	0x03DFD650 ADRP X0, 0x2F8000
	0x03DFD654 LDR X0, [X0 + 0x278]
	0x03DFD658 BL 0x1C16CF4
	0x03DFD65C ADRP X0, 0x322000
	0x03DFD660 LDR X0, [X0 + 0xFF0]
	0x03DFD664 BL 0x1C16CF4
	0x03DFD668 ADRP X0, 0x320000
	0x03DFD66C LDR X0, [X0 + 0xB08]
	0x03DFD670 BL 0x1C16CF4
	0x03DFD674 ADRP X0, 0x320000
	0x03DFD678 LDR X0, [X0 + 0xB10]
	0x03DFD67C BL 0x1C16CF4
	0x03DFD680 ADRP X0, 0x368000
	0x03DFD684 LDR X0, [X0 + 0x5C8]
	0x03DFD688 BL 0x1C16CF4
	0x03DFD68C MOVZ W8, 0x1
	0x03DFD690 STRB W8, [X21 + 0x2B8]
	0x03DFD694 LDR V0, [X19]
	0x03DFD698 LDR X0, [X20]
	0x03DFD69C STR S0, [X31 + 0xC]
	0x03DFD6A0 LDR W8, [X0 + 0xE0]
	0x03DFD6A4 CBNZ W8, 0x3DFD6AC
	0x03DFD6A8 BL 0x1C16DFC
	0x03DFD6AC MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5EC000
	006 Move W8, [X21+690]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x36D000
	014 Move X0, [X0+3272]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+690], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x36D000
	021 Move X8, [X8+3272]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move X0, X20
	032 Call 0x1C17E08
	033 Move X9, [X0]
	034 Move X10, [X19]
	035 Move X8, X0
	036 Move W0, W31
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, [X8+8]
	039 Move X10, [X19+8]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X9, [X8+16]
	042 Move X10, [X19+16]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, [X8+24]
	045 Move X9, [X19+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSET not yet implemented."

Method: System.Int32 GetHashCode()

Disassembly:
	0x03DFD6B0 BL 0x3338524
	0x03DFD6B4 CBZ X0, 0x3DFD7D4
	0x03DFD6B8 LDR X8, [X0]
	0x03DFD6BC ADRP X20, 0x2F8000
	0x03DFD6C0 LDR X9, [X8 + 0x218]
	0x03DFD6C4 LDR X1, [X8 + 0x220]
	0x03DFD6C8 LDR X20, [X20 + 0x278]
	0x03DFD6CC BLR X9
	0x03DFD6D0 MOV X1, X0
	0x03DFD6D4 ADD X0, X31, 0xC
	0x03DFD6D8 MOV X2, X31
	0x03DFD6DC BL 0x338FEA0
	0x03DFD6E0 LDR X8, [X20]
	0x03DFD6E4 MOV X21, X0
	0x03DFD6E8 LDR X9, [X8 + 0xB8]
	0x03DFD6EC LDR W8, [X19 + 0x4]
	0x03DFD6F0 LDR X20, [X9]
	0x03DFD6F4 CMP W8, 0x3
	0x03DFD6F8 B.HI 0x3DFD7AC
	0x03DFD6FC ADRP X9, 0xFFFFFFFFFCD9B000
	0x03DFD700 ADD X9, X9, 0x5BD
	0x03DFD704 ADR X10, 0x10
	0x03DFD708 LDRB W11, [X9, X8, LSL]
	0x03DFD70C ADD X10, X10, X11, 0x2, LSL
	0x03DFD710 BR X10
	0x03DFD714 ADRP X22, 0x5DC000
	0x03DFD718 LDRB W8, [X22 + 0x5AA]
	0x03DFD71C LDR V8, [X19]
	0x03DFD720 CBNZ W8, 0x3DFD738
	0x03DFD724 ADRP X0, 0x2FD000
	0x03DFD728 LDR X0, [X0 + 0x4B8]
	0x03DFD72C BL 0x1C16CF4
	0x03DFD730 MOVZ W8, 0x1
	0x03DFD734 STRB W8, [X22 + 0x5AA]
	0x03DFD738 ADRP X8, 0x2FD000
	0x03DFD73C LDR X8, [X8 + 0x4B8]
	0x03DFD740 ADRP X9, 0xFFFFFFFFFCCED000
	0x03DFD744 LDR V0, [X9 + 0x240]
	0x03DFD748 FABS S1, S8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0]
	007 Compare X0, 0
	008 JumpIfEqual {51}
	009 Move X8, [X0]
	010 Move X9, [X8+344]
	011 Move X1, [X8+352]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X8, [X19+8]
	014 Compare X8, 0
	015 JumpIfEqual {51}
	016 Move X9, [X8]
	017 Move W20, W0
	018 Move X0, X8
	019 Move X10, [X9+344]
	020 Move X1, [X9+352]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X8, [X19+16]
	023 Compare X8, 0
	024 JumpIfEqual {51}
	025 Move X9, [X8]
	026 Move W21, W0
	027 Move X0, X8
	028 Move X10, [X9+344]
	029 Move X1, [X9+352]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X19+24]
	032 Compare X8, 0
	033 JumpIfEqual {51}
	034 Move X9, [X8]
	035 Move W19, 397
	036 Multiply W10, W20, W19
	037 Move X11, [X9+344]
	038 Move X1, [X9+352]
	039 Xor W9, W21, W10
	040 Multiply W9, W9, W19
	041 Xor W20, W0, W9
	042 Move X0, X8
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Multiply W8, W20, W19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Xor W0, W0, W8
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Call 0x1C17F20

