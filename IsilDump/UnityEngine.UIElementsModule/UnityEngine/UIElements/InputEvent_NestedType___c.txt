Type: UnityEngine.UIElements.InputEvent/<>c

Method: System.Void .cctor()

Disassembly:
	0x03DA3E9C EOR W8, W0, 0x1
	0x03DA3EA0 B 0x3DA3E78
	0x03DA3EA4 BL 0x1C16F20
	0x03DA3EA8 STP X30, X23, [X31 - 0x30]!
	0x03DA3EAC STP X22, X21, [X31 + 0x10]
	0x03DA3EB0 STP X20, X19, [X31 + 0x20]
	0x03DA3EB4 ADRP X22, 0x644000
	0x03DA3EB8 ADRP X23, 0x3C5000
	0x03DA3EBC LDRB W8, [X22 + 0xF67]
	0x03DA3EC0 LDR X23, [X23 + 0x2D0]
	0x03DA3EC4 MOV W20, W2
	0x03DA3EC8 MOV W21, W1
	0x03DA3ECC MOV W19, W0
	0x03DA3ED0 TBNZ X8, 0x0, 0x3DA3EE8
	0x03DA3ED4 ADRP X0, 0x3C5000
	0x03DA3ED8 LDR X0, [X0 + 0x2D0]
	0x03DA3EDC BL 0x1C16CF4
	0x03DA3EE0 MOVZ W8, 0x1
	0x03DA3EE4 STRB W8, [X22 + 0xF67]
	0x03DA3EE8 LDR X2, [X23]
	0x03DA3EEC MOV W0, W21
	0x03DA3EF0 MOV W1, W20
	0x03DA3EF4 BL 0x2409B44

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x645000
	005 Move X20, 0x3C6000
	006 Move W8, [X19+3832]
	007 Move X20, [X20+584]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x3C6000
	013 Move X0, [X0+584]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3832], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03DA3EF8 CBZ X0, 0x3DA3F50
	0x03DA3EFC STR W19, [X0 + 0x8C]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: UnityEngine.UIElements.InputEvent <.cctor>b__0_0()

Disassembly:
	0x03DA3F00 ADRP X19, 0x636000
	0x03DA3F04 LDRB W8, [X19 + 0x78F]
	0x03DA3F08 MOV X20, X0
	0x03DA3F0C CBNZ W8, 0x3DA3F24
	0x03DA3F10 ADRP X0, 0x358000
	0x03DA3F14 LDR X0, [X0 + 0xF08]
	0x03DA3F18 BL 0x1C16CF4
	0x03DA3F1C MOVZ W8, 0x1
	0x03DA3F20 STRB W8, [X19 + 0x78F]
	0x03DA3F24 ADRP X8, 0x358000
	0x03DA3F28 LDR X8, [X8 + 0xF08]
	0x03DA3F2C MOV X0, X20
	0x03DA3F30 LDP X22, X21, [X31 + 0x10]
	0x03DA3F34 LDR X8, [X8]
	0x03DA3F38 LDR X8, [X8 + 0xB8]
	0x03DA3F3C LDR V0, [X8]
	0x03DA3F40 STR D0, [X20 + 0x90]
	0x03DA3F44 LDP X20, X19, [X31 + 0x20]
	0x03DA3F48 LDP X30, X23, [X31], #0x30
	0x03DA3F4C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x645000
	005 Move X20, 0x3C6000
	006 Move W8, [X19+3833]
	007 Move X20, [X20+648]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x3C6000
	013 Move X0, [X0+648]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3833], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Call InputEvent..ctor, X0
	021 Move X0, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0

