Type: UnityEngine.UIElements.RepeatButton

Method: System.Void .ctor()

Disassembly:
	0x03D7E514 MOV X1, X31
	0x03D7E518 BL 0x3DEC1BC
	0x03D7E51C CBZ X0, 0x3D7E5AC
	0x03D7E520 LDR X8, [X0]
	0x03D7E524 LDR X1, [X21]
	0x03D7E528 MOV X20, X0
	0x03D7E52C LDRH W9, [X8 + 0x12E]
	0x03D7E530 CBZ X9, 0x3D7E554
	0x03D7E534 LDR X10, [X8 + 0xB0]
	0x03D7E538 ADD X10, X10, 0x8
	0x03D7E53C LDUR X11, [X10 - 0x8]
	0x03D7E540 CMP X11, X1
	0x03D7E544 B.EQ 0x3D7E564
	0x03D7E548 SUBS X9, X9, 0x1
	0x03D7E54C ADD X10, X10, 0x10
	0x03D7E550 B.NE 0x3D7E53C
	0x03D7E554 MOVZ W2, 0x1
	0x03D7E558 MOV X0, X20
	0x03D7E55C BL 0x1C5C788
	0x03D7E560 B 0x3D7E574
	0x03D7E564 LDR W9, [X10]
	0x03D7E568 ADD W9, W9, 0x1
	0x03D7E56C ADD X8, X8, W9, 0x4, SXTW
	0x03D7E570 ADD X0, X8, 0x138
	0x03D7E574 LDP X8, X1, [X0]
	0x03D7E578 MOV X0, X20
	0x03D7E57C MOV V0.16B, V10.16B
	0x03D7E580 MOV V1.16B, V9.16B
	0x03D7E584 MOV V2.16B, V8.16B
	0x03D7E588 BLR X8
	0x03D7E58C MOV X0, X19
	0x03D7E590 LDP X20, X19, [X31 + 0x30]
	0x03D7E594 LDP X30, X21, [X31 + 0x20]
	0x03D7E598 LDP D9, D8, [X31 + 0x10]
	0x03D7E59C MOVZ W1, 0x800
	0x03D7E5A0 MOV X2, X31
	0x03D7E5A4 LDR V10, [X31], #0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x66A000
	006 Move X20, 0x39F000
	007 Move W8, [X21+3502]
	008 Move X20, [X20+3784]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x3EA000
	015 Move X0, [X0+688]
	016 Call 0x1C17CF4
	017 Move X0, 0x39F000
	018 Move X0, [X0+3784]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3502], W8
	022 Move X0, [X20]
	023 Move X20, 0x3EA000
	024 Move W8, [X0+224]
	025 Move X20, [X20+688]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Move X1, X31
	031 Call TextElement..ctor, X0
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X8, [X0+184]
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X2, X31
	043 Move X1, [X8]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call VisualElement.AddToClassList, X0, X1
	047 Return 

Method: System.Void .ctor(System.Action clickEvent, System.Int64 delay, System.Int64 interval)

Disassembly:
	0x03D7E5A8 B 0x3DE5048
	0x03D7E5AC BL 0x1C16F20
	0x03D7E5B0 STR S0, [X0 + 0x3E8]
	0x03D7E5B4 B 0x3D7E5B8
	0x03D7E5B8 STR D8, [X31 - 0x30]!
	0x03D7E5BC STP X30, X21, [X31 + 0x10]
	0x03D7E5C0 STP X20, X19, [X31 + 0x20]
	0x03D7E5C4 ADRP X20, 0x669000
	0x03D7E5C8 LDRB W8, [X20 + 0xDB9]
	0x03D7E5CC MOV X19, X0
	0x03D7E5D0 TBNZ X8, 0x0, 0x3D7E5F4
	0x03D7E5D4 ADRP X0, 0x3E9000
	0x03D7E5D8 LDR X0, [X0 + 0x2D8]
	0x03D7E5DC BL 0x1C16CF4
	0x03D7E5E0 ADRP X0, 0x39E000
	0x03D7E5E4 LDR X0, [X0 + 0x120]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X3
	007 Move X20, X2
	008 Move X21, X1
	009 Move X22, X0
	010 Call RepeatButton..ctor, X0
	011 Move X0, X22
	012 Move X1, X21
	013 Move X2, X20
	014 Move X3, X19
	015 Move X20, [X31+32]
	016 Move X19, [X31+40]
	017 Move X22, [X31+16]
	018 Move X21, [X31+24]
	019 Move X30, [X31+48]

Method: System.Void SetAction(System.Action clickEvent, System.Int64 delay, System.Int64 interval)

Disassembly:
	0x03D7E5E8 BL 0x1C16CF4
	0x03D7E5EC MOVZ W8, 0x1
	0x03D7E5F0 STRB W8, [X20 + 0xDB9]
	0x03D7E5F4 LDR X0, [X19 + 0x420]
	0x03D7E5F8 CBZ X0, 0x3D7E7C0
	0x03D7E5FC MOV X1, X31
	0x03D7E600 BL 0x3DE0EB8
	0x03D7E604 CBZ X0, 0x3D7E7C0
	0x03D7E608 ADRP X21, 0x39E000
	0x03D7E60C LDR X8, [X0]
	0x03D7E610 LDR X21, [X21 + 0x120]
	0x03D7E614 MOV X20, X0
	0x03D7E618 LDRH W9, [X8 + 0x12E]
	0x03D7E61C LDR X1, [X21]
	0x03D7E620 CBZ X9, 0x3D7E644
	0x03D7E624 LDR X10, [X8 + 0xB0]
	0x03D7E628 ADD X10, X10, 0x8
	0x03D7E62C LDUR X11, [X10 - 0x8]
	0x03D7E630 CMP X11, X1
	0x03D7E634 B.EQ 0x3D7E654
	0x03D7E638 SUBS X9, X9, 0x1
	0x03D7E63C ADD X10, X10, 0x10
	0x03D7E640 B.NE 0x3D7E62C
	0x03D7E644 MOVZ W2, 0x2C
	0x03D7E648 MOV X0, X20
	0x03D7E64C BL 0x1C5C788
	0x03D7E650 B 0x3D7E664
	0x03D7E654 LDR W9, [X10]
	0x03D7E658 ADD W9, W9, 0x2C
	0x03D7E65C ADD X8, X8, W9, 0x4, SXTW
	0x03D7E660 ADD X0, X8, 0x138
	0x03D7E664 LDP X8, X1, [X0]
	0x03D7E668 MOV X0, X20
	0x03D7E66C BLR X8
	0x03D7E670 LDR V8, [X19 + 0x3E8]
	0x03D7E674 FCMP S0, 0x0
	0x03D7E678 B.LE 0x3D7E778
	0x03D7E67C ADRP X20, 0x65B000
	0x03D7E680 LDRB W8, [X20 + 0x5AA]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x66A000
	009 Move X23, 0x3E5000
	010 Move W8, [X24+3503]
	011 Move X23, [X23+3440]
	012 Move X20, X3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x3E5000
	021 Move X0, [X0+3440]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+3503], W8
	025 Move X1, [X19+1184]
	026 Move X0, X19
	027 Move X2, X31
	028 Call VisualElementExtensions.RemoveManipulator, X0, X1
	029 Move X0, [X23]
	030 Call 0x1C17F10
	031 Move X1, X22
	032 Move X2, X21
	033 Move X3, X20
	034 Move X4, X31
	035 Move X23, X0
	036 Call Clickable..ctor, X0, X1, X2, X3
	037 Move [X19+1184], X23
	038 Move X0, X19
	039 Move X1, X23
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X22, [X31+32]
	043 Move X21, [X31+40]
	044 Move X24, [X31+16]
	045 Move X23, [X31+24]
	046 Move X2, X31
	047 Move X30, [X31+64]
	048 Call VisualElementExtensions.AddManipulator, X0, X1
	049 Return 

Method: System.Void AddAction(System.Action clickEvent)

Disassembly:
	0x03D7E684 CBNZ W8, 0x3D7E69C
	0x03D7E688 ADRP X0, 0x37C000
	0x03D7E68C LDR X0, [X0 + 0x4B8]
	0x03D7E690 BL 0x1C16CF4
	0x03D7E694 MOVZ W8, 0x1
	0x03D7E698 STRB W8, [X20 + 0x5AA]
	0x03D7E69C ADRP X8, 0x37C000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+1184]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call Clickable.add_clicked, X0, X1
	008 Return 
	009 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D7E6A0 LDR X8, [X8 + 0x4B8]
	0x03D7E6A4 ADRP X9, 0xFFFFFFFFFCD6C000
	0x03D7E6A8 LDR V0, [X9 + 0x240]
	0x03D7E6AC FABS S1, S8
	0x03D7E6B0 LDR X8, [X8]
	0x03D7E6B4 FMOV S2, 1
	0x03D7E6B8 FMAXNM S1, S1, S2
	0x03D7E6BC FMUL S0, S1, S0
	0x03D7E6C0 LDR X8, [X8 + 0xB8]
	0x03D7E6C4 FMOV S1, 8
	0x03D7E6C8 FMOV S2, -1
	0x03D7E6CC LDR V3, [X8]
	0x03D7E6D0 FMUL S1, S3, S1
	0x03D7E6D4 FCMP S0, S1
	0x03D7E6D8 FCSEL S0, S0, S1, GT
	0x03D7E6DC FABD S1, S2, S2
	0x03D7E6E0 FCMP S1, S0
	0x03D7E6E4 B.PL 0x3D7E778
	0x03D7E6E8 LDR X8, [X19 + 0x420]
	0x03D7E6EC CBZ X8, 0x3D7E7C0
	0x03D7E6F0 LDR X8, [X8 + 0x3D0]
	0x03D7E6F4 CBZ X8, 0x3D7E7C0
	0x03D7E6F8 LDR X0, [X8 + 0x448]
	0x03D7E6FC CBZ X0, 0x3D7E7C0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x66A000
	006 Move X19, 0x3EA000
	007 Move X21, 0x3EA000
	008 Move W8, [X20+3504]
	009 Move X19, [X19+696]
	010 Move X21, [X21+688]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x3EA000
	016 Move X0, [X0+688]
	017 Call 0x1C17CF4
	018 Move X0, 0x3EA000
	019 Move X0, [X0+696]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3504], W8
	023 Move X8, [X21]
	024 Move X9, [X19]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X8, [X8+184]
	028 Move [X8], X9
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

