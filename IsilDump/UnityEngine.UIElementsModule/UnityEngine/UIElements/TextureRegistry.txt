Type: UnityEngine.UIElements.TextureRegistry

Method: UnityEngine.UIElements.TextureRegistry get_instance()

Disassembly:
	0x03DE0FEC CMP W0, 0x1
	0x03DE0FF0 CSET W0, EQ
	0x03DE0FF4 LDR X30, [X31], #0x20
	0x03DE0FF8 RET
	0x03DE0FFC BL 0x1C16F20
	0x03DE1000 STP X30, X21, [X31 - 0x20]!
	0x03DE1004 STP X20, X19, [X31 + 0x10]
	0x03DE1008 ADRP X21, 0x607000
	0x03DE100C ADRP X20, 0x312000
	0x03DE1010 LDRB W8, [X21 + 0x1DE]
	0x03DE1014 LDR X20, [X20 + 0x598]
	0x03DE1018 MOV X19, X0
	0x03DE101C TBNZ X8, 0x0, 0x3DE1040
	0x03DE1020 ADRP X0, 0x312000
	0x03DE1024 LDR X0, [X0 + 0x970]
	0x03DE1028 BL 0x1C16CF4
	0x03DE102C ADRP X0, 0x312000
	0x03DE1030 LDR X0, [X0 + 0x598]
	0x03DE1034 BL 0x1C16CF4
	0x03DE1038 MOVZ W8, 0x1
	0x03DE103C STRB W8, [X21 + 0x1DE]
	0x03DE1040 LDR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x609000
	005 Move X19, 0x383000
	006 Move W8, [X20+466]
	007 Call 0x3EB2A3C
	008 Return X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x382000
	014 Move X0, [X0+1712]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+466], W8
	018 Move X0, [X19]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {24}
	022 Call 0x1C17DFC
	023 Move X0, [X19]
	024 Move X8, [X0+184]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X0, [X8]
	028 Move X30, [X31+32]
	029 Return X0

Method: UnityEngine.Texture GetTexture(UnityEngine.UIElements.TextureId id)

Disassembly:
	0x03DE1044 LDR W8, [X0 + 0xE0]
	0x03DE1048 CBNZ W8, 0x3DE1050
	0x03DE104C BL 0x1C16DFC
	0x03DE1050 MOV X0, X19
	0x03DE1054 MOV X1, X31
	0x03DE1058 MOV X2, X31
	0x03DE105C BL 0x3C3883C
	0x03DE1060 TBZ X0, 0x0, 0x3DE1070
	0x03DE1064 LDP X20, X19, [X31 + 0x10]
	0x03DE1068 LDP X30, X21, [X31], #0x20
	0x03DE106C RET
	0x03DE1070 ADRP X8, 0x312000
	0x03DE1074 LDR X8, [X8 + 0x970]
	0x03DE1078 LDR X0, [X8]
	0x03DE107C LDR W8, [X0 + 0xE0]
	0x03DE1080 CBNZ W8, 0x3DE1088
	0x03DE1084 BL 0x1C16DFC
	0x03DE1088 MOV X0, X31
	0x03DE108C BL 0x3C018E4
	0x03DE1090 LDR X8, [X20]
	0x03DE1094 MOV W20, W0
	0x03DE1098 LDR W9, [X8 + 0xE0]
	0x03DE109C CBNZ W9, 0x3DE10A8
	0x03DE10A0 MOV X0, X8
	0x03DE10A4 BL 0x1C16DFC
	0x03DE10A8 MOV X0, X19
	0x03DE10AC MOV X1, X31
	0x03DE10B0 TBZ X20, 0x0, 0x3DE10C0
	0x03DE10B4 LDP X20, X19, [X31 + 0x10]
	0x03DE10B8 LDP X30, X21, [X31], #0x20
	0x03DE10BC B 0x3C394A8
	0x03DE10C0 LDP X20, X19, [X31 + 0x10]
	0x03DE10C4 LDP X30, X21, [X31], #0x20
	0x03DE10C8 B 0x3C39564
	0x03DE10CC CMP W0, 0x2
	0x03DE10D0 B.LT 0x3DE10F0
	0x03DE10D4 MOV W8, W31
	0x03DE10D8 CMP W0, 0x3
	0x03DE10DC UBFM W0, W0, 0x1, 0x1F
	0x03DE10E0 ADD W8, W8, 0x1
	0x03DE10E4 B.HI 0x3DE10D8
	0x03DE10E8 AND W8, W8, 0x1F
	0x03DE10EC B 0x3DE10F4
	0x03DE10F0 MOV W8, W31
	0x03DE10F4 MOVZ W9, 0x1
	0x03DE10F8 LSLV W0, W9, W8
	0x03DE10FC RET
	0x03DE1100 MOVZ W9, 0x1
	0x03DE1104 MOV W8, W9
	0x03DE1108 CMP W9, W0
	0x03DE110C UBFM W9, W9, 0x1F, 0x1E
	0x03DE1110 B.LT 0x3DE1104
	0x03DE1114 MOV W0, W8
	0x03DE1118 RET
	0x03DE111C CMP W0, 0x2
	0x03DE1120 B.LT 0x3DE1144
	0x03DE1124 MOV W8, W0
	0x03DE1128 MOV W0, W31
	0x03DE112C MOVZ W9, 0x1
	0x03DE1130 UBFM W9, W9, 0x1F, 0x1E
	0x03DE1134 CMP W9, W8
	0x03DE1138 ADD W0, W0, 0x1
	0x03DE113C B.LT 0x3DE1130
	0x03DE1140 RET
	0x03DE1144 MOV W0, W31
	0x03DE1148 RET
	0x03DE114C STR X30, [X31 - 0x20]!
	0x03DE1150 STP X20, X19, [X31 + 0x10]
	0x03DE1154 ADRP X20, 0x607000
	0x03DE1158 ADRP X19, 0x383000
	0x03DE115C LDRB W8, [X20 + 0x1DF]
	0x03DE1160 LDR X19, [X19 + 0xA40]
	0x03DE1164 TBNZ X8, 0x0, 0x3DE1188
	0x03DE1168 ADRP X0, 0x383000
	0x03DE116C LDR X0, [X0 + 0xA40]
	0x03DE1170 BL 0x1C16CF4
	0x03DE1174 ADRP X0, 0x33C000
	0x03DE1178 LDR X0, [X0 + 0x240]
	0x03DE117C BL 0x1C16CF4
	0x03DE1180 MOVZ W8, 0x1
	0x03DE1184 STRB W8, [X20 + 0x1DF]
	0x03DE1188 LDR X0, [X19]
	0x03DE118C ADRP X20, 0x33C000
	0x03DE1190 LDR W8, [X0 + 0xE0]
	0x03DE1194 LDR X20, [X20 + 0x240]
	0x03DE1198 CBNZ W8, 0x3DE11A4
	0x03DE119C BL 0x1C16DFC
	0x03DE11A0 LDR X0, [X19]
	0x03DE11A4 LDR X8, [X0 + 0xB8]
	0x03DE11A8 LDR X9, [X20]
	0x03DE11AC LDR X8, [X8 + 0x10]
	0x03DE11B0 LDR X9, [X9 + 0xB8]
	0x03DE11B4 STR X8, [X9]
	0x03DE11B8 LDR X8, [X19]
	0x03DE11BC LDR X9, [X20]
	0x03DE11C0 LDP X20, X19, [X31 + 0x10]
	0x03DE11C4 LDR X8, [X8 + 0xB8]
	0x03DE11C8 LDR X9, [X9 + 0xB8]
	0x03DE11CC LDR X8, [X8 + 0x18]
	0x03DE11D0 STR X8, [X9 + 0x8]
	0x03DE11D4 LDR X30, [X31], #0x20
	0x03DE11D8 RET
	0x03DE11DC LDR X0, [X0]
	0x03DE11E0 RET
	0x03DE11E4 STR X1, [X0]
	0x03DE11E8 RET
	0x03DE11EC LDR X0, [X0 + 0x8]
	0x03DE11F0 RET
	0x03DE11F4 STR X1, [X0 + 0x8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x608000
	009 Move X22, 0x33B000
	010 Move W8, [X21+467]
	011 Move X22, [X22+1568]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x313000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0x313000
	022 Move X0, [X0+1880]
	023 Call 0x1C17CF4
	024 Move X0, 0x389000
	025 Move X0, [X0+1264]
	026 Call 0x1C17CF4
	027 Move X0, 0x389000
	028 Move X0, [X0+1272]
	029 Call 0x1C17CF4
	030 Move X0, 0x33B000
	031 Move X0, [X0+1568]
	032 Call 0x1C17CF4
	033 Move X0, 0x389000
	034 Move X0, [X0+1280]
	035 Call 0x1C17CF4
	036 Move X0, 0x389000
	037 Move X0, [X0+1288]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+467], W8
	041 Move X0, [X22]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X23, 0x313000
	047 Move X21, 0x313000
	048 Move X23, [X23+1880]
	049 Move X21, [X21+2600]
	050 Subtract W19, W19, 1
	051 Move X0, [X22]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X20, [X20+16]
	057 Compare X20, 0
	058 JumpIfEqual {123}
	059 Move W8, [X20+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, [X22]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X8, 0x389000
	067 Move X8, [X8+1272]
	068 Move X0, X20
	069 Move W1, W19
	070 Move X2, [X8]
	071 Call List`1<TextureInfo>.get_Item, X0, X1
	072 Move X8, X1
	073 ShiftRight X8, 32
	074 And X8, X8, 0x7FFFFFFF
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, [X22]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, [X23]
	082 Add X1, X31, 8
	083 Move [X31+8], W19
	084 Call 0x1C17E04
	085 Move X8, 0x389000
	086 Move X8, [X8+1280]
	087 Move X8, [X8]
	088 Move X0, [X22]
	089 Move X20, 0x389000
	090 Move W8, [X0+224]
	091 Move X20, [X20+1288]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, [X23]
	096 Add X1, X31, 12
	097 Move [X31+12], W19
	098 Call 0x1C17E04
	099 Move X8, [X20]
	100 Move X1, X0
	101 Move X0, X8
	102 Move X2, X31
	103 Call String.Format, X0, X1
	104 Move X8, [X21]
	105 Move X19, X0
	106 Move W9, [X8+224]
	107 Compare W9, 0
	108 JumpIfNotEqual {111}
	109 Move X0, X8
	110 Call 0x1C17DFC
	111 Move X0, X19
	112 Move X1, X31
	113 Call Debug.LogError, X0
	114 Move X0, X31
	115 Move X20, [X31+48]
	116 Move X19, [X31+56]
	117 Move X22, [X31+32]
	118 Move X21, [X31+40]
	119 Move X30, [X31+16]
	120 Move X23, [X31+24]
	121 Add X31, X31, 64
	122 Return X0
	123 Call 0x1C17F20

Method: UnityEngine.UIElements.TextureId AllocAndAcquireDynamic()

Disassembly:
	0x03DE11F8 RET
	0x03DE11FC LDP X9, X8, [X0]
	0x03DE1200 SUB X0, X8, X9
	0x03DE1204 RET
	0x03DE1208 STP X30, X21, [X31 - 0x20]!
	0x03DE120C STP X20, X19, [X31 + 0x10]
	0x03DE1210 ADRP X21, 0x607000

ISIL:
	001 Move [X31-16], X30
	002 Move W2, 1
	003 Move X1, X31
	004 Call TextureRegistry.AllocAndAcquire, X0, X1, X2
	005 And X0, X0, 0
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Void UpdateDynamic(UnityEngine.UIElements.TextureId id, UnityEngine.Texture texture)

Disassembly:
	0x03DE14A0 BL 0x1C16CF4
	0x03DE14A4 ADRP X0, 0x388000
	0x03DE14A8 LDR X0, [X0 + 0x5D0]
	0x03DE14AC BL 0x1C16CF4
	0x03DE14B0 ADRP X0, 0x388000
	0x03DE14B4 LDR X0, [X0 + 0x5C0]
	0x03DE14B8 BL 0x1C16CF4
	0x03DE14BC MOVZ W8, 0x1
	0x03DE14C0 STRB W8, [X19 + 0x1E3]
	0x03DE14C4 LDR X0, [X21]
	0x03DE14C8 ADRP X24, 0x31B000
	0x03DE14CC ADRP X20, 0x388000
	0x03DE14D0 ADRP X22, 0x388000
	0x03DE14D4 ADRP X23, 0x388000
	0x03DE14D8 LDR W8, [X0 + 0xE0]
	0x03DE14DC LDR X24, [X24 + 0x940]
	0x03DE14E0 LDR X20, [X20 + 0x5C8]
	0x03DE14E4 LDR X22, [X22 + 0x5B8]
	0x03DE14E8 LDR X23, [X23 + 0x5D0]
	0x03DE14EC CBNZ W8, 0x3DE14F8
	0x03DE14F0 BL 0x1C16DFC
	0x03DE14F4 LDR X0, [X21]
	0x03DE14F8 LDR X8, [X0 + 0xB8]
	0x03DE14FC LDR X0, [X24]
	0x03DE1500 LDR X19, [X8]
	0x03DE1504 BL 0x1C16F10
	0x03DE1508 LDR X2, [X20]
	0x03DE150C MOV X1, X19
	0x03DE1510 MOV X3, X31
	0x03DE1514 MOV X20, X0
	0x03DE1518 BL 0x2D27194
	0x03DE151C LDR X8, [X22]
	0x03DE1520 LDR X8, [X8 + 0xB8]
	0x03DE1524 STR X20, [X8]
	0x03DE1528 LDR X8, [X21]
	0x03DE152C LDR X0, [X24]
	0x03DE1530 LDR X8, [X8 + 0xB8]
	0x03DE1534 LDR X19, [X8]
	0x03DE1538 BL 0x1C16F10
	0x03DE153C LDR X2, [X23]
	0x03DE1540 MOV X1, X19
	0x03DE1544 MOV X3, X31
	0x03DE1548 MOV X20, X0
	0x03DE154C BL 0x2D27194
	0x03DE1550 LDR X8, [X22]
	0x03DE1554 LDP X22, X21, [X31 + 0x20]
	0x03DE1558 LDP X24, X23, [X31 + 0x10]
	0x03DE155C LDR X8, [X8 + 0xB8]
	0x03DE1560 STR X20, [X8 + 0x8]
	0x03DE1564 LDP X20, X19, [X31 + 0x30]
	0x03DE1568 LDR X30, [X31], #0x40
	0x03DE156C RET
	0x03DE1570 STR X30, [X31 - 0x20]!
	0x03DE1574 STP X20, X19, [X31 + 0x10]
	0x03DE1578 ADRP X19, 0x607000
	0x03DE157C ADRP X20, 0x388000
	0x03DE1580 LDRB W8, [X19 + 0x1E4]
	0x03DE1584 LDR X20, [X20 + 0x5C0]
	0x03DE1588 TBNZ X8, 0x0, 0x3DE15A0
	0x03DE158C ADRP X0, 0x388000
	0x03DE1590 LDR X0, [X0 + 0x5C0]
	0x03DE1594 BL 0x1C16CF4
	0x03DE1598 MOVZ W8, 0x1
	0x03DE159C STRB W8, [X19 + 0x1E4]
	0x03DE15A0 LDR X0, [X20]
	0x03DE15A4 BL 0x1C16F10
	0x03DE15A8 MOV X1, X31
	0x03DE15AC MOV X19, X0
	0x03DE15B0 BL 0x33BDD8C
	0x03DE15B4 LDR X8, [X20]
	0x03DE15B8 LDR X8, [X8 + 0xB8]
	0x03DE15BC STR X19, [X8]
	0x03DE15C0 LDP X20, X19, [X31 + 0x10]
	0x03DE15C4 LDR X30, [X31], #0x20
	0x03DE15C8 RET
	0x03DE15CC MOV X1, X31
	0x03DE15D0 B 0x33BDD8C
	0x03DE15D4 MOVZ W0, 0x1
	0x03DE15D8 RET
	0x03DE15DC MOV W0, W31
	0x03DE15E0 RET
	0x03DE15E4 STP X30, X21, [X31 - 0x20]!
	0x03DE15E8 STP X20, X19, [X31 + 0x10]
	0x03DE15EC ADRP X21, 0x607000
	0x03DE15F0 LDRB W8, [X21 + 0x1E5]
	0x03DE15F4 MOV X19, X1
	0x03DE15F8 MOV X20, X0
	0x03DE15FC TBNZ X8, 0x0, 0x3DE162C
	0x03DE1600 ADRP X0, 0x388000
	0x03DE1604 LDR X0, [X0 + 0x5D8]
	0x03DE1608 BL 0x1C16CF4
	0x03DE160C ADRP X0, 0x388000
	0x03DE1610 LDR X0, [X0 + 0x5E0]
	0x03DE1614 BL 0x1C16CF4
	0x03DE1618 ADRP X0, 0x388000
	0x03DE161C LDR X0, [X0 + 0x5E8]
	0x03DE1620 BL 0x1C16CF4
	0x03DE1624 MOVZ W8, 0x1
	0x03DE1628 STRB W8, [X21 + 0x1E5]
	0x03DE162C CBZ X19, 0x3DE1704
	0x03DE1630 LDRB W8, [X20 + 0x18]
	0x03DE1634 CBZ W8, 0x3DE169C
	0x03DE1638 LDR X0, [X20 + 0x28]
	0x03DE163C CBZ X0, 0x3DE172C
	0x03DE1640 ADRP X8, 0x388000
	0x03DE1644 LDR X8, [X8 + 0x5D8]
	0x03DE1648 MOV X1, X19
	0x03DE164C LDR X2, [X8]
	0x03DE1650 BL 0x2DBE67C
	0x03DE1654 TBNZ X0, 0x0, 0x3DE1704
	0x03DE1658 LDR X0, [X20 + 0x10]
	0x03DE165C CBZ X0, 0x3DE172C
	0x03DE1660 ADRP X21, 0x388000
	0x03DE1664 LDR X21, [X21 + 0x5E8]
	0x03DE1668 MOV X1, X19
	0x03DE166C LDR X2, [X21]
	0x03DE1670 BL 0x301C318
	0x03DE1674 TBNZ X0, 0x0, 0x3DE1730
	0x03DE1678 LDR X0, [X20 + 0x20]
	0x03DE167C CBZ X0, 0x3DE172C
	0x03DE1680 LDR X2, [X21]
	0x03DE1684 MOV X1, X19
	0x03DE1688 BL 0x301C318
	0x03DE168C TBNZ X0, 0x0, 0x3DE1730
	0x03DE1690 LDR X0, [X20 + 0x20]
	0x03DE1694 CBNZ X0, 0x3DE16C4
	0x03DE1698 B 0x3DE172C
	0x03DE169C LDR X0, [X20 + 0x10]
	0x03DE16A0 CBZ X0, 0x3DE172C
	0x03DE16A4 ADRP X8, 0x388000
	0x03DE16A8 LDR X8, [X8 + 0x5E8]
	0x03DE16AC MOV X1, X19
	0x03DE16B0 LDR X2, [X8]
	0x03DE16B4 BL 0x301C318
	0x03DE16B8 TBNZ X0, 0x0, 0x3DE1730
	0x03DE16BC LDR X0, [X20 + 0x10]
	0x03DE16C0 CBZ X0, 0x3DE172C
	0x03DE16C4 ADRP X9, 0x388000
	0x03DE16C8 LDR X9, [X9 + 0x5E0]
	0x03DE16CC LDR W10, [X0 + 0x1C]
	0x03DE16D0 LDR X8, [X0 + 0x10]
	0x03DE16D4 LDR X9, [X9]
	0x03DE16D8 ADD W10, W10, 0x1
	0x03DE16DC STR W10, [X0 + 0x1C]
	0x03DE16E0 CBZ X8, 0x3DE172C
	0x03DE16E4 LDRSW X10, [X0 + 0x18]
	0x03DE16E8 LDR W11, [X8 + 0x18]
	0x03DE16EC CMP W10, W11
	0x03DE16F0 B.CS 0x3DE1710

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x608000
	011 Move X24, 0x33B000
	012 Move W8, [X22+468]
	013 Move X24, [X24+1568]
	014 Move X19, X2
	015 Move X21, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0x313000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move X0, 0x313000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move X0, 0x389000
	028 Move X0, [X0+1264]
	029 Call 0x1C17CF4
	030 Move X0, 0x389000
	031 Move X0, [X0+1272]
	032 Call 0x1C17CF4
	033 Move X0, 0x389000
	034 Move X0, [X0+1312]
	035 Call 0x1C17CF4
	036 Move X0, 0x33B000
	037 Move X0, [X0+1568]
	038 Call 0x1C17CF4
	039 Move X0, 0x389000
	040 Move X0, [X0+1352]
	041 Call 0x1C17CF4
	042 Move X0, 0x389000
	043 Move X0, [X0+1360]
	044 Call 0x1C17CF4
	045 Move X0, 0x389000
	046 Move X0, [X0+1368]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X22+468], W8
	050 Move X0, [X24]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X25, 0x313000
	056 Move X23, 0x313000
	057 Move X25, [X25+1880]
	058 Move X23, [X23+2600]
	059 Subtract W21, W21, 1
	060 Move X0, [X24]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X22, [X20+16]
	066 Compare X22, 0
	067 JumpIfEqual {175}
	068 Move W8, [X22+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, [X24]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X8, 0x389000
	076 Move X8, [X8+1272]
	077 Move X0, X22
	078 Move W1, W21
	079 Move X2, [X8]
	080 Call List`1<TextureInfo>.get_Item, X0, X1
	081 Move X22, X1
	082 Move TEMP, X22
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {109}
	086 Move X0, [X24]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, [X25]
	092 Add X1, X31, 8
	093 Move [X31+8], W21
	094 Call 0x1C17E04
	095 Move X8, 0x389000
	096 Move X8, [X8+1368]
	097 Move X0, [X24]
	098 Move X19, 0x389000
	099 Move W8, [X0+224]
	100 Move X19, [X19+1352]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, [X25]
	105 Add X1, X31, 12
	106 Move [X31+12], W21
	107 Call 0x1C17E04
	108 Move X8, [X19]
	109 Move X8, X22
	110 ShiftRight X8, 32
	111 And X8, X8, 0x7FFFFFFF
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X0, [X24]
	114 Move X20, [X20+16]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Compare X20, 0
	120 JumpIfEqual {175}
	121 Move X8, 0x389000
	122 Move X8, [X8+1312]
	123 Move X0, X20
	124 Move W1, W21
	125 Move X2, X19
	126 Move X4, [X8]
	127 Move X3, X22
	128 Move X20, [X31+64]
	129 Move X19, [X31+72]
	130 Move X22, [X31+48]
	131 Move X21, [X31+56]
	132 Move X24, [X31+32]
	133 Move X23, [X31+40]
	134 Move X30, [X31+16]
	135 Move X25, [X31+24]
	136 Add X31, X31, 80
	137 Call List`1<TextureInfo>.set_Item, X0, X1, X2
	138 Return 
	139 Move X0, [X24]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move X0, [X25]
	145 Add X1, X31, 4
	146 Move [X31+4], W21
	147 Call 0x1C17E04
	148 Move X8, 0x389000
	149 Move X8, [X8+1360]
	150 Move X8, [X8]
	151 Move X1, X0
	152 Move X0, X8
	153 Move X2, X31
	154 Call String.Format, X0, X1
	155 Move X8, [X23]
	156 Move X19, X0
	157 Move W9, [X8+224]
	158 Compare W9, 0
	159 JumpIfNotEqual {162}
	160 Move X0, X8
	161 Call 0x1C17DFC
	162 Move X0, X19
	163 Move X1, X31
	164 Call Debug.LogError, X0
	165 Move X20, [X31+64]
	166 Move X19, [X31+72]
	167 Move X22, [X31+48]
	168 Move X21, [X31+56]
	169 Move X24, [X31+32]
	170 Move X23, [X31+40]
	171 Move X30, [X31+16]
	172 Move X25, [X31+24]
	173 Add X31, X31, 80
	174 Return 
	175 Call 0x1C17F20

Method: UnityEngine.UIElements.TextureId AllocAndAcquire(UnityEngine.Texture texture, System.Boolean dynamic)

Disassembly:
	0x03DE1214 LDRB W8, [X21 + 0x1E0]
	0x03DE1218 MOV X20, X1
	0x03DE121C MOV X19, X0
	0x03DE1220 TBNZ X8, 0x0, 0x3DE1238
	0x03DE1224 ADRP X0, 0x33D000
	0x03DE1228 LDR X0, [X0 + 0x7B0]
	0x03DE122C BL 0x1C16CF4
	0x03DE1230 MOVZ W8, 0x1
	0x03DE1234 STRB W8, [X21 + 0x1E0]
	0x03DE1238 CBZ X20, 0x3DE1280
	0x03DE123C ADRP X8, 0x33D000
	0x03DE1240 LDR X8, [X8 + 0x7B0]
	0x03DE1244 LDR X9, [X20]
	0x03DE1248 LDR X8, [X8]
	0x03DE124C CMP X9, X8
	0x03DE1250 B.NE 0x3DE1280
	0x03DE1254 MOV X0, X20
	0x03DE1258 BL 0x1C16E08
	0x03DE125C LDR X8, [X0]
	0x03DE1260 LDR X9, [X19]
	0x03DE1264 CMP X9, X8
	0x03DE1268 B.NE 0x3DE1280
	0x03DE126C LDR X8, [X0 + 0x8]
	0x03DE1270 LDR X9, [X19 + 0x8]
	0x03DE1274 CMP X9, X8
	0x03DE1278 CSET W0, EQ
	0x03DE127C B 0x3DE1284
	0x03DE1280 MOV W0, W31
	0x03DE1284 LDP X20, X19, [X31 + 0x10]
	0x03DE1288 LDP X30, X21, [X31], #0x20
	0x03DE128C RET
	0x03DE1290 LDR X8, [X0]
	0x03DE1294 CMP X8, X1
	0x03DE1298 B.NE 0x3DE12AC
	0x03DE129C LDR X8, [X0 + 0x8]
	0x03DE12A0 CMP X8, X2
	0x03DE12A4 CSET W0, EQ
	0x03DE12A8 RET
	0x03DE12AC MOV W0, W31
	0x03DE12B0 RET
	0x03DE12B4 STR X30, [X31 - 0x20]!
	0x03DE12B8 STP X20, X19, [X31 + 0x10]
	0x03DE12BC LDR X8, [X0]
	0x03DE12C0 MOV X19, X0
	0x03DE12C4 ADD X0, X31, 0x8
	0x03DE12C8 MOV X1, X31
	0x03DE12CC STR X8, [X31 + 0x8]
	0x03DE12D0 BL 0x337C960
	0x03DE12D4 LDR X8, [X19 + 0x8]
	0x03DE12D8 MOV W20, W0
	0x03DE12DC ADD X0, X31, 0x8
	0x03DE12E0 MOV X1, X31
	0x03DE12E4 STR X8, [X31 + 0x8]
	0x03DE12E8 BL 0x337C960
	0x03DE12EC LDP X9, X8, [X19]
	0x03DE12F0 MOVZ W19, 0x5529
	0x03DE12F4 MOVK W19, 0xA5550000
	0x03DE12F8 MADD W20, W20, W19, W0
	0x03DE12FC SUB X8, X8, X9
	0x03DE1300 ADD X0, X31, 0x8
	0x03DE1304 MOV X1, X31
	0x03DE1308 STR X8, [X31 + 0x8]
	0x03DE130C BL 0x337C960
	0x03DE1310 MOVZ W8, 0xF176
	0x03DE1314 MOVK W8, 0x54FD0000
	0x03DE1318 MUL W8, W8, W19
	0x03DE131C MADD W8, W20, W19, W8
	0x03DE1320 LDP X20, X19, [X31 + 0x10]
	0x03DE1324 ADD W0, W0, W8
	0x03DE1328 LDR X30, [X31], #0x20
	0x03DE132C RET
	0x03DE1330 LDR X0, [X0 + 0x18]
	0x03DE1334 RET
	0x03DE1338 STR X1, [X0 + 0x18]
	0x03DE133C RET
	0x03DE1340 LDR X0, [X0 + 0x20]
	0x03DE1344 RET
	0x03DE1348 STR X1, [X0 + 0x20]
	0x03DE134C RET
	0x03DE1350 LDR X0, [X0 + 0x28]
	0x03DE1354 RET
	0x03DE1358 STR X1, [X0 + 0x28]
	0x03DE135C RET
	0x03DE1360 LDR X0, [X0 + 0x30]
	0x03DE1364 RET
	0x03DE1368 STP X30, X21, [X31 - 0x20]!
	0x03DE136C STP X20, X19, [X31 + 0x10]
	0x03DE1370 ADRP X21, 0x607000
	0x03DE1374 ADRP X20, 0x388000
	0x03DE1378 LDRB W8, [X21 + 0x1E1]
	0x03DE137C LDR X20, [X20 + 0x5B8]
	0x03DE1380 MOV X19, X0
	0x03DE1384 TBNZ X8, 0x0, 0x3DE139C
	0x03DE1388 ADRP X0, 0x388000
	0x03DE138C LDR X0, [X0 + 0x5B8]
	0x03DE1390 BL 0x1C16CF4
	0x03DE1394 MOVZ W8, 0x1
	0x03DE1398 STRB W8, [X21 + 0x1E1]
	0x03DE139C MOV X0, X19
	0x03DE13A0 MOV X1, X31
	0x03DE13A4 BL 0x33BDD8C
	0x03DE13A8 MOV X0, X19
	0x03DE13AC BL 0x3DE13DC
	0x03DE13B0 LDR X0, [X20]
	0x03DE13B4 LDR W8, [X0 + 0xE0]
	0x03DE13B8 CBNZ W8, 0x3DE13C4
	0x03DE13BC BL 0x1C16DFC
	0x03DE13C0 LDR X0, [X20]
	0x03DE13C4 LDR X8, [X0 + 0xB8]
	0x03DE13C8 LDR X8, [X8]
	0x03DE13CC STR X8, [X19 + 0x10]
	0x03DE13D0 LDP X20, X19, [X31 + 0x10]
	0x03DE13D4 LDP X30, X21, [X31], #0x20
	0x03DE13D8 RET
	0x03DE13DC STP X30, X21, [X31 - 0x20]!
	0x03DE13E0 STP X20, X19, [X31 + 0x10]
	0x03DE13E4 ADRP X20, 0x607000
	0x03DE13E8 ADRP X21, 0x33C000
	0x03DE13EC LDRB W8, [X20 + 0x1E2]
	0x03DE13F0 LDR X21, [X21 + 0xD08]
	0x03DE13F4 MOV X19, X0
	0x03DE13F8 TBNZ X8, 0x0, 0x3DE1410
	0x03DE13FC ADRP X0, 0x33C000
	0x03DE1400 LDR X0, [X0 + 0xD08]
	0x03DE1404 BL 0x1C16CF4
	0x03DE1408 MOVZ W8, 0x1
	0x03DE140C STRB W8, [X20 + 0x1E2]
	0x03DE1410 LDR X0, [X21]
	0x03DE1414 LDR W8, [X0 + 0xE0]
	0x03DE1418 CBNZ W8, 0x3DE1420
	0x03DE141C BL 0x1C16DFC
	0x03DE1420 MOV X0, X31
	0x03DE1424 BL 0x3DBD7F8
	0x03DE1428 STR X0, [X19 + 0x18]
	0x03DE142C LDP X20, X19, [X31 + 0x10]
	0x03DE1430 LDP X30, X21, [X31], #0x20
	0x03DE1434 RET
	0x03DE1438 RET
	0x03DE143C LDR X8, [X0 + 0x10]
	0x03DE1440 CBZ X8, 0x3DE1454
	0x03DE1444 LDR X2, [X8 + 0x18]
	0x03DE1448 LDR X0, [X8 + 0x40]
	0x03DE144C LDR X1, [X8 + 0x28]
	0x03DE1450 BR X2
	0x03DE1454 MOV W0, W31
	0x03DE1458 RET
	0x03DE145C STR X30, [X31 - 0x40]!
	0x03DE1460 STP X24, X23, [X31 + 0x10]
	0x03DE1464 STP X22, X21, [X31 + 0x20]
	0x03DE1468 STP X20, X19, [X31 + 0x30]
	0x03DE146C ADRP X19, 0x607000
	0x03DE1470 ADRP X21, 0x388000
	0x03DE1474 LDRB W8, [X19 + 0x1E3]
	0x03DE1478 LDR X21, [X21 + 0x5C0]
	0x03DE147C TBNZ X8, 0x0, 0x3DE14C4
	0x03DE1480 ADRP X0, 0x31B000
	0x03DE1484 LDR X0, [X0 + 0x940]
	0x03DE1488 BL 0x1C16CF4
	0x03DE148C ADRP X0, 0x388000
	0x03DE1490 LDR X0, [X0 + 0x5B8]
	0x03DE1494 BL 0x1C16CF4
	0x03DE1498 ADRP X0, 0x388000
	0x03DE149C LDR X0, [X0 + 0x5C8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x608000
	009 Move W8, [X22+469]
	010 Move W20, W2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {52}
	017 Move X0, 0x313000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x389000
	021 Move X0, [X0+1296]
	022 Call 0x1C17CF4
	023 Move X0, 0x313000
	024 Move X0, [X0+1880]
	025 Call 0x1C17CF4
	026 Move X0, 0x389000
	027 Move X0, [X0+1304]
	028 Call 0x1C17CF4
	029 Move X0, 0x389000
	030 Move X0, [X0+1264]
	031 Call 0x1C17CF4
	032 Move X0, 0x389000
	033 Move X0, [X0+1312]
	034 Call 0x1C17CF4
	035 Move X0, 0x389000
	036 Move X0, [X0+1320]
	037 Call 0x1C17CF4
	038 Move X0, 0x389000
	039 Move X0, [X0+1328]
	040 Call 0x1C17CF4
	041 Move X0, 0x33B000
	042 Move X0, [X0+1568]
	043 Call 0x1C17CF4
	044 Move X0, 0x389000
	045 Move X0, [X0+1336]
	046 Call 0x1C17CF4
	047 Move X0, 0x389000
	048 Move X0, [X0+1344]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X22+469], W8
	052 Move X0, [X21+32]
	053 Compare X0, 0
	054 JumpIfEqual {180}
	055 Move W8, [X0+24]
	056 Move X23, 0x33B000
	057 Move X23, [X23+1568]
	058 Move X22, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction BFM not yet implemented."
	061 Move X8, 0x389000
	062 Move X8, [X8+1320]
	063 Move X1, [X8]
	064 Call Stack`1<TextureId>.Pop, X0
	065 Move X8, [X23]
	066 Move X24, [X21+16]
	067 Move X23, X0
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Compare X24, 0
	074 JumpIfEqual {180}
	075 Move X8, 0x389000
	076 Move X8, [X8+1312]
	077 Subtract W1, W23, 1
	078 Move X0, X24
	079 Move X2, X19
	080 Move X4, [X8]
	081 Move X3, X22
	082 Call List`1<TextureInfo>.set_Item, X0, X1, X2
	083 Move TEMP, X20
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {138}
	087 Move X0, [X21+24]
	088 Compare X0, 0
	089 JumpIfEqual {180}
	090 Move X8, 0x389000
	091 Move X8, [X8+1296]
	092 Move W2, W23
	093 Move X1, X19
	094 Move X3, [X8]
	095 Call Dictionary`2<Object, TextureId>.set_Item, X0, X1, X2
	096 Move X0, [X21+16]
	097 Compare X0, 0
	098 JumpIfEqual {180}
	099 Move W24, [X0+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X8, 0x313000
	102 Move X8, [X8+1880]
	103 Add X1, X31, 12
	104 Move X0, [X8]
	105 Move W8, 2048
	106 Move [X31+12], W8
	107 Call 0x1C17E04
	108 Move X8, 0x389000
	109 Move X8, [X8+1336]
	110 Move X9, 0x389000
	111 Move X9, [X9+1344]
	112 Move X2, X0
	113 Move X8, [X8]
	114 Move X3, X31
	115 Move X1, [X9]
	116 Move X0, X8
	117 Call String.Format, X0, X1, X2
	118 Move X8, 0x313000
	119 Move X8, [X8+2600]
	120 Move X19, X0
	121 Move X8, [X8]
	122 Move W9, [X8+224]
	123 Compare W9, 0
	124 JumpIfNotEqual {127}
	125 Move X0, X8
	126 Call 0x1C17DFC
	127 Move X0, X19
	128 Move X1, X31
	129 Call Debug.LogError, X0
	130 Move X0, [X23]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {136}
	134 Call 0x1C17DFC
	135 Move X0, [X23]
	136 Move X8, [X0+184]
	137 Move W23, [X8]
	138 Move W0, W23
	139 Move X20, [X31+48]
	140 Move X19, [X31+56]
	141 Move X22, [X31+32]
	142 Move X21, [X31+40]
	143 Move X24, [X31+16]
	144 Move X23, [X31+24]
	145 Move X30, [X31+64]
	146 Return X0
	147 Move X8, [X23]
	148 Move W9, [X8+224]
	149 Compare W9, 0
	150 JumpIfNotEqual {156}
	151 Move X0, X8
	152 Call 0x1C17DFC
	153 Move X0, [X21+16]
	154 Compare X0, 0
	155 JumpIfEqual {180}
	156 Move X9, 0x389000
	157 Move X9, [X9+1304]
	158 Move W10, [X0+28]
	159 Move X8, [X0+16]
	160 Move X9, [X9]
	161 Add W10, W10, 1
	162 Move [X0+28], W10
	163 Compare X8, 0
	164 JumpIfEqual {180}
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Move W11, [X8+24]
	167 Add W23, W24, 1
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Add W9, W10, 1
	170 Add X8, X8, X10
	171 Move [X0+24], W9
	172 Move [X8+32], X19
	173 Move [X8+40], X22
	174 Move X8, [X9+32]
	175 Move X1, X19
	176 Move X2, X22
	177 Move X8, [X8+192]
	178 Move X3, [X8+112]
	179 Call List`1<TextureInfo>.AddWithResize, X0, X1
	180 Call 0x1C17F20

Method: UnityEngine.UIElements.TextureId Acquire(UnityEngine.Texture tex)

Disassembly:
	0x03DE16F4 ADD W9, W10, 0x1
	0x03DE16F8 ADD X8, X8, X10, 0x3, LSL
	0x03DE16FC STR W9, [X0 + 0x18]
	0x03DE1700 STR X19, [X8 + 0x20]
	0x03DE1704 LDP X20, X19, [X31 + 0x10]
	0x03DE1708 LDP X30, X21, [X31], #0x20
	0x03DE170C RET
	0x03DE1710 LDR X8, [X9 + 0x20]
	0x03DE1714 MOV X1, X19
	0x03DE1718 LDP X20, X19, [X31 + 0x10]
	0x03DE171C LDR X8, [X8 + 0xC0]
	0x03DE1720 LDR X2, [X8 + 0x70]
	0x03DE1724 LDP X30, X21, [X31], #0x20
	0x03DE1728 B 0x301BF90
	0x03DE172C BL 0x1C16F20
	0x03DE1730 ADRP X0, 0x388000
	0x03DE1734 LDR X0, [X0 + 0x5F0]
	0x03DE1738 BL 0x1C16D08
	0x03DE173C MOV X20, X0
	0x03DE1740 ADRP X0, 0x388000
	0x03DE1744 LDR X0, [X0 + 0x5F8]
	0x03DE1748 BL 0x1C16D08
	0x03DE174C MOV X2, X0
	0x03DE1750 MOV X0, X20
	0x03DE1754 MOV X1, X19
	0x03DE1758 MOV X3, X31
	0x03DE175C BL 0x32273C0
	0x03DE1760 MOV X19, X0
	0x03DE1764 ADRP X0, 0x31A000
	0x03DE1768 LDR X0, [X0 + 0x578]
	0x03DE176C BL 0x1C16D08
	0x03DE1770 BL 0x1C16F10
	0x03DE1774 MOV X1, X19
	0x03DE1778 MOV X2, X31
	0x03DE177C MOV X20, X0
	0x03DE1780 BL 0x3314A68
	0x03DE1784 ADRP X0, 0x388000
	0x03DE1788 LDR X0, [X0 + 0x600]
	0x03DE178C BL 0x1C16D08
	0x03DE1790 MOV X1, X0
	0x03DE1794 MOV X0, X20
	0x03DE1798 BL 0x1C16DEC
	0x03DE179C STP X30, X21, [X31 - 0x20]!
	0x03DE17A0 STP X20, X19, [X31 + 0x10]
	0x03DE17A4 ADRP X21, 0x607000
	0x03DE17A8 LDRB W8, [X21 + 0x1E6]
	0x03DE17AC MOV W19, W1
	0x03DE17B0 MOV X20, X0
	0x03DE17B4 TBNZ X8, 0x0, 0x3DE17CC
	0x03DE17B8 ADRP X0, 0x388000
	0x03DE17BC LDR X0, [X0 + 0x608]
	0x03DE17C0 BL 0x1C16CF4
	0x03DE17C4 MOVZ W8, 0x1
	0x03DE17C8 STRB W8, [X21 + 0x1E6]
	0x03DE17CC TBNZ X19, 0x1F, 0x3DE1800
	0x03DE17D0 LDR W8, [X20 + 0x34]
	0x03DE17D4 CMP W8, W19
	0x03DE17D8 B.LT 0x3DE17E4
	0x03DE17DC SUB W8, W8, 0x1
	0x03DE17E0 STR W8, [X20 + 0x34]
	0x03DE17E4 LDR X0, [X20 + 0x10]
	0x03DE17E8 CBZ X0, 0x3DE1814
	0x03DE17EC ADRP X8, 0x388000
	0x03DE17F0 LDR X8, [X8 + 0x608]
	0x03DE17F4 MOV W1, W19
	0x03DE17F8 LDR X2, [X8]
	0x03DE17FC BL 0x301DA48
	0x03DE1800 ORN W8, W31, W19, 0x0
	0x03DE1804 LDP X20, X19, [X31 + 0x10]
	0x03DE1808 UBFM W0, W8, 0x1F, 0x1F
	0x03DE180C LDP X30, X21, [X31], #0x20
	0x03DE1810 RET
	0x03DE1814 BL 0x1C16F20
	0x03DE1818 STP X30, X21, [X31 - 0x20]!
	0x03DE181C STP X20, X19, [X31 + 0x10]
	0x03DE1820 ADRP X21, 0x607000
	0x03DE1824 LDRB W8, [X21 + 0x1E7]
	0x03DE1828 MOV X19, X1
	0x03DE182C MOV X20, X0
	0x03DE1830 TBNZ X8, 0x0, 0x3DE186C
	0x03DE1834 ADRP X0, 0x388000
	0x03DE1838 LDR X0, [X0 + 0x610]
	0x03DE183C BL 0x1C16CF4
	0x03DE1840 ADRP X0, 0x388000
	0x03DE1844 LDR X0, [X0 + 0x618]
	0x03DE1848 BL 0x1C16CF4
	0x03DE184C ADRP X0, 0x388000
	0x03DE1850 LDR X0, [X0 + 0x5E8]
	0x03DE1854 BL 0x1C16CF4
	0x03DE1858 ADRP X0, 0x388000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x608000
	007 Move W8, [X21+470]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x313000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x389000
	018 Move X0, [X0+1376]
	019 Call 0x1C17CF4
	020 Move X0, 0x389000
	021 Move X0, [X0+1272]
	022 Call 0x1C17CF4
	023 Move X0, 0x389000
	024 Move X0, [X0+1312]
	025 Call 0x1C17CF4
	026 Move X0, 0x33B000
	027 Move X0, [X0+1568]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+470], W8
	031 Move [X31+8], W31
	032 Move X0, [X19+24]
	033 Compare X0, 0
	034 JumpIfEqual {106}
	035 Move X8, 0x389000
	036 Move X8, [X8+1376]
	037 Add X2, X31, 8
	038 Move X1, X20
	039 Move X3, [X8]
	040 Call Dictionary`2<Object, TextureId>.TryGetValue, X0, X1, X2
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {95}
	045 Move X8, 0x33B000
	046 Move X8, [X8+1568]
	047 Move X20, [X19+16]
	048 Move X0, [X8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Compare X20, 0
	054 JumpIfEqual {106}
	055 Move X9, 0x389000
	056 Move W8, [X31+8]
	057 Move X9, [X9+1272]
	058 Move X0, X20
	059 Subtract W1, W8, 1
	060 Move X2, [X9]
	061 Call List`1<TextureInfo>.get_Item, X0, X1
	062 Move X8, 0x313000
	063 Move X8, [X8+2600]
	064 Move X20, X0
	065 Move X21, X1
	066 Move X22, X1
	067 ShiftRight X22, 32
	068 And X22, X22, 0x7FFFFFFF
	069 Move X0, [X8]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CSET not yet implemented."
	076 Move X1, X31
	077 Call Debug.Assert, X0
	078 And X31, X21, 1
	079 NotImplemented "Instruction CSET not yet implemented."
	080 Move X1, X31
	081 Call Debug.Assert, X0
	082 Move X0, [X19+16]
	083 Compare X0, 0
	084 JumpIfEqual {106}
	085 Move X9, 0x389000
	086 Move W8, [X31+8]
	087 Move X9, [X9+1312]
	088 Move X2, X20
	089 Subtract W1, W8, 1
	090 Move X4, [X9]
	091 Move X9, 1
	092 Add X3, X21, X9
	093 Call List`1<TextureInfo>.set_Item, X0, X1, X2
	094 Move W0, [X31+8]
	095 Move X0, X19
	096 Move X1, X20
	097 Move W2, W31
	098 Call TextureRegistry.AllocAndAcquire, X0, X1, X2
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move W0, W0
	104 Move X30, [X31+48]
	105 Return X0
	106 Call 0x1C17F20

Method: System.Void Release(UnityEngine.UIElements.TextureId id)

Disassembly:
	0x03DE185C LDR X0, [X0 + 0x620]
	0x03DE1860 BL 0x1C16CF4
	0x03DE1864 MOVZ W8, 0x1
	0x03DE1868 STRB W8, [X21 + 0x1E7]
	0x03DE186C CBZ X19, 0x3DE18F8
	0x03DE1870 LDRB W8, [X20 + 0x18]
	0x03DE1874 CBZ W8, 0x3DE1904
	0x03DE1878 LDR X0, [X20 + 0x28]
	0x03DE187C CBZ X0, 0x3DE192C
	0x03DE1880 ADRP X8, 0x388000
	0x03DE1884 LDR X8, [X8 + 0x618]
	0x03DE1888 MOV X1, X19
	0x03DE188C LDR X2, [X8]
	0x03DE1890 BL 0x2DBE4B0
	0x03DE1894 TBNZ X0, 0x0, 0x3DE1930
	0x03DE1898 LDR X0, [X20 + 0x20]
	0x03DE189C CBZ X0, 0x3DE192C
	0x03DE18A0 ADRP X8, 0x388000
	0x03DE18A4 LDR X8, [X8 + 0x620]
	0x03DE18A8 MOV X1, X19
	0x03DE18AC LDR X2, [X8]
	0x03DE18B0 BL 0x301D7A8
	0x03DE18B4 TBNZ X0, 0x0, 0x3DE1914
	0x03DE18B8 LDR X0, [X20 + 0x10]
	0x03DE18BC CBZ X0, 0x3DE192C
	0x03DE18C0 ADRP X8, 0x388000
	0x03DE18C4 LDR X8, [X8 + 0x5E8]
	0x03DE18C8 MOV X1, X19
	0x03DE18CC LDR X2, [X8]
	0x03DE18D0 BL 0x301C318
	0x03DE18D4 TBZ X0, 0x0, 0x3DE193C
	0x03DE18D8 LDR X0, [X20 + 0x28]
	0x03DE18DC CBZ X0, 0x3DE192C
	0x03DE18E0 ADRP X8, 0x388000
	0x03DE18E4 LDR X8, [X8 + 0x610]
	0x03DE18E8 MOV X1, X19
	0x03DE18EC LDR X2, [X8]
	0x03DE18F0 BL 0x2DBEF30
	0x03DE18F4 B 0x3DE1914
	0x03DE18F8 LDP X20, X19, [X31 + 0x10]
	0x03DE18FC LDP X30, X21, [X31], #0x20
	0x03DE1900 RET
	0x03DE1904 MOV X0, X20
	0x03DE1908 MOV X1, X19
	0x03DE190C BL 0x3DE19A8
	0x03DE1910 TBZ X0, 0x0, 0x3DE193C
	0x03DE1914 LDR X8, [X19]
	0x03DE1918 MOV X0, X19
	0x03DE191C LDP X20, X19, [X31 + 0x10]
	0x03DE1920 LDP X2, X1, [X8 + 0x188]
	0x03DE1924 LDP X30, X21, [X31], #0x20
	0x03DE1928 BR X2
	0x03DE192C BL 0x1C16F20
	0x03DE1930 ADRP X0, 0x388000
	0x03DE1934 LDR X0, [X0 + 0x628]
	0x03DE1938 B 0x3DE1944
	0x03DE193C ADRP X0, 0x388000
	0x03DE1940 LDR X0, [X0 + 0x630]
	0x03DE1944 BL 0x1C16D08
	0x03DE1948 LDR X8, [X19]
	0x03DE194C MOV X20, X0
	0x03DE1950 MOV X0, X19
	0x03DE1954 LDP X9, X1, [X8 + 0x168]
	0x03DE1958 BLR X9
	0x03DE195C MOV X1, X0
	0x03DE1960 MOV X0, X20
	0x03DE1964 MOV X2, X31
	0x03DE1968 BL 0x321B938
	0x03DE196C MOV X19, X0
	0x03DE1970 ADRP X0, 0x31A000
	0x03DE1974 LDR X0, [X0 + 0x578]
	0x03DE1978 BL 0x1C16D08
	0x03DE197C BL 0x1C16F10
	0x03DE1980 MOV X1, X19
	0x03DE1984 MOV X2, X31
	0x03DE1988 MOV X20, X0
	0x03DE198C BL 0x3314A68
	0x03DE1990 ADRP X0, 0x388000
	0x03DE1994 LDR X0, [X0 + 0x638]
	0x03DE1998 BL 0x1C16D08
	0x03DE199C MOV X1, X0
	0x03DE19A0 MOV X0, X20
	0x03DE19A4 BL 0x1C16DEC
	0x03DE19A8 STP X30, X21, [X31 - 0x20]!
	0x03DE19AC STP X20, X19, [X31 + 0x10]
	0x03DE19B0 ADRP X21, 0x607000
	0x03DE19B4 LDRB W8, [X21 + 0x1E8]
	0x03DE19B8 MOV X20, X1
	0x03DE19BC MOV X19, X0
	0x03DE19C0 TBNZ X8, 0x0, 0x3DE19E4
	0x03DE19C4 ADRP X0, 0x388000
	0x03DE19C8 LDR X0, [X0 + 0x640]
	0x03DE19CC BL 0x1C16CF4
	0x03DE19D0 ADRP X0, 0x388000
	0x03DE19D4 LDR X0, [X0 + 0x620]
	0x03DE19D8 BL 0x1C16CF4
	0x03DE19DC MOVZ W8, 0x1
	0x03DE19E0 STRB W8, [X21 + 0x1E8]
	0x03DE19E4 LDR X0, [X19 + 0x20]
	0x03DE19E8 CBZ X0, 0x3DE1A44
	0x03DE19EC ADRP X8, 0x388000
	0x03DE19F0 LDR X8, [X8 + 0x620]
	0x03DE19F4 MOV X1, X20
	0x03DE19F8 LDR X2, [X8]
	0x03DE19FC BL 0x301D7A8
	0x03DE1A00 TBZ X0, 0x0, 0x3DE1A14
	0x03DE1A04 LDP X20, X19, [X31 + 0x10]
	0x03DE1A08 MOVZ W0, 0x1
	0x03DE1A0C LDP X30, X21, [X31], #0x20
	0x03DE1A10 RET
	0x03DE1A14 LDR X0, [X19 + 0x10]
	0x03DE1A18 CBZ X0, 0x3DE1A44
	0x03DE1A1C ADRP X8, 0x388000
	0x03DE1A20 LDR X8, [X8 + 0x640]
	0x03DE1A24 MOV X1, X20
	0x03DE1A28 LDR X2, [X8]
	0x03DE1A2C BL 0x301CD00
	0x03DE1A30 MOV W1, W0
	0x03DE1A34 MOV X0, X19
	0x03DE1A38 LDP X20, X19, [X31 + 0x10]
	0x03DE1A3C LDP X30, X21, [X31], #0x20
	0x03DE1A40 B 0x3DE179C
	0x03DE1A44 BL 0x1C16F20
	0x03DE1A48 SUB X31, X31, 0xD0
	0x03DE1A4C STP X30, X0, [X31 + 0x70]
	0x03DE1A50 STP X28, X27, [X31 + 0x80]
	0x03DE1A54 STP X26, X25, [X31 + 0x90]
	0x03DE1A58 STP X24, X23, [X31 + 0xA0]
	0x03DE1A5C STP X22, X21, [X31 + 0xB0]
	0x03DE1A60 STP X20, X19, [X31 + 0xC0]
	0x03DE1A64 ADRP X21, 0x607000
	0x03DE1A68 ADRP X20, 0x33C000
	0x03DE1A6C LDRB W8, [X21 + 0x1E9]
	0x03DE1A70 LDR X20, [X20 + 0xD08]
	0x03DE1A74 MOV X19, X0
	0x03DE1A78 TBNZ X8, 0x0, 0x3DE1B2C
	0x03DE1A7C ADRP X0, 0x388000
	0x03DE1A80 LDR X0, [X0 + 0x648]
	0x03DE1A84 BL 0x1C16CF4
	0x03DE1A88 ADRP X0, 0x388000
	0x03DE1A8C LDR X0, [X0 + 0x650]
	0x03DE1A90 BL 0x1C16CF4
	0x03DE1A94 ADRP X0, 0x388000
	0x03DE1A98 LDR X0, [X0 + 0x658]
	0x03DE1A9C BL 0x1C16CF4
	0x03DE1AA0 ADRP X0, 0x388000
	0x03DE1AA4 LDR X0, [X0 + 0x660]
	0x03DE1AA8 BL 0x1C16CF4
	0x03DE1AAC ADRP X0, 0x388000
	0x03DE1AB0 LDR X0, [X0 + 0x668]
	0x03DE1AB4 BL 0x1C16CF4
	0x03DE1AB8 ADRP X0, 0x388000
	0x03DE1ABC LDR X0, [X0 + 0x670]
	0x03DE1AC0 BL 0x1C16CF4
	0x03DE1AC4 ADRP X0, 0x388000
	0x03DE1AC8 LDR X0, [X0 + 0x678]
	0x03DE1ACC BL 0x1C16CF4
	0x03DE1AD0 ADRP X0, 0x388000
	0x03DE1AD4 LDR X0, [X0 + 0x618]
	0x03DE1AD8 BL 0x1C16CF4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x608000
	011 Move X24, 0x33B000
	012 Move W8, [X21+471]
	013 Move X24, [X24+1568]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {52}
	020 Move X0, 0x313000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x389000
	024 Move X0, [X0+1384]
	025 Call 0x1C17CF4
	026 Move X0, 0x313000
	027 Move X0, [X0+1880]
	028 Call 0x1C17CF4
	029 Move X0, 0x389000
	030 Move X0, [X0+1264]
	031 Call 0x1C17CF4
	032 Move X0, 0x389000
	033 Move X0, [X0+1272]
	034 Call 0x1C17CF4
	035 Move X0, 0x389000
	036 Move X0, [X0+1312]
	037 Call 0x1C17CF4
	038 Move X0, 0x389000
	039 Move X0, [X0+1392]
	040 Call 0x1C17CF4
	041 Move X0, 0x33B000
	042 Move X0, [X0+1568]
	043 Call 0x1C17CF4
	044 Move X0, 0x389000
	045 Move X0, [X0+1400]
	046 Call 0x1C17CF4
	047 Move X0, 0x389000
	048 Move X0, [X0+1408]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X21+471], W8
	052 Move X0, [X24]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X26, 0x313000
	058 Move X25, 0x313000
	059 Move X26, [X26+1880]
	060 Move X25, [X25+2600]
	061 Subtract W21, W20, 1
	062 Move X0, [X24]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X22, [X19+16]
	068 Compare X22, 0
	069 JumpIfEqual {187}
	070 Move W8, [X22+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, [X24]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X8, 0x389000
	078 Move X8, [X8+1272]
	079 Move X0, X22
	080 Move W1, W21
	081 Move X2, [X8]
	082 Call List`1<TextureInfo>.get_Item, X0, X1
	083 Move X8, X1
	084 ShiftRight X8, 32
	085 And X8, X8, 0x7FFFFFFF
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract W8, W8, 1
	088 Move X22, X1
	089 Move X23, X0
	090 NotImplemented "Instruction BFM not yet implemented."
	091 Move TEMP, X1
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {103}
	095 Move X0, [X19+24]
	096 Compare X0, 0
	097 JumpIfEqual {187}
	098 Move X8, 0x389000
	099 Move X8, [X8+1384]
	100 Move X1, X23
	101 Move X2, [X8]
	102 Call Dictionary`2<Object, TextureId>.Remove, X0, X1
	103 Move X0, [X19+32]
	104 Compare X0, 0
	105 JumpIfEqual {187}
	106 Move X8, 0x389000
	107 Move X8, [X8+1392]
	108 And X1, X20, 0
	109 And X22, X22, 0x7FFFFFFF
	110 Move X2, [X8]
	111 Call Stack`1<TextureId>.Push, X0, X1
	112 Move X23, X31
	113 Move X0, [X24]
	114 Move X19, [X19+16]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Compare X19, 0
	120 JumpIfEqual {187}
	121 Move X8, 0x389000
	122 Move X8, [X8+1312]
	123 Move X0, X19
	124 Move W1, W21
	125 Move X2, X23
	126 Move X4, [X8]
	127 Move X3, X22
	128 Move X20, [X31+64]
	129 Move X19, [X31+72]
	130 Move X22, [X31+48]
	131 Move X21, [X31+56]
	132 Move X24, [X31+32]
	133 Move X23, [X31+40]
	134 Move X26, [X31+16]
	135 Move X25, [X31+24]
	136 Move X30, [X31+80]
	137 Call List`1<TextureInfo>.set_Item, X0, X1, X2
	138 Return 
	139 Move X0, [X24]
	140 Move X19, 0x389000
	141 Move W8, [X0+224]
	142 Move X19, [X19+1400]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X0, [X26]
	147 Add X1, X31, 12
	148 Move [X31+12], W21
	149 Call 0x1C17E04
	150 Move X8, [X19]
	151 Move X1, X0
	152 Move X0, X8
	153 Move X2, X31
	154 Call String.Format, X0, X1
	155 Move X8, [X25]
	156 Move X19, X0
	157 Move W9, [X8+224]
	158 Compare W9, 0
	159 JumpIfNotEqual {162}
	160 Move X0, X8
	161 Call 0x1C17DFC
	162 Move X0, X19
	163 Move X1, X31
	164 Call Debug.LogError, X0
	165 Move X20, [X31+64]
	166 Move X19, [X31+72]
	167 Move X22, [X31+48]
	168 Move X21, [X31+56]
	169 Move X24, [X31+32]
	170 Move X23, [X31+40]
	171 Move X26, [X31+16]
	172 Move X25, [X31+24]
	173 Move X30, [X31+80]
	174 Return 
	175 Move X0, [X24]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move X0, [X26]
	181 Add X1, X31, 8
	182 Move [X31+8], W21
	183 Call 0x1C17E04
	184 Move X8, 0x389000
	185 Move X8, [X8+1408]
	186 Move X8, [X8]
	187 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03DE1ADC ADRP X0, 0x388000
	0x03DE1AE0 LDR X0, [X0 + 0x680]
	0x03DE1AE4 BL 0x1C16CF4
	0x03DE1AE8 ADRP X0, 0x388000
	0x03DE1AEC LDR X0, [X0 + 0x688]
	0x03DE1AF0 BL 0x1C16CF4
	0x03DE1AF4 ADRP X0, 0x388000
	0x03DE1AF8 LDR X0, [X0 + 0x690]
	0x03DE1AFC BL 0x1C16CF4
	0x03DE1B00 ADRP X0, 0x388000
	0x03DE1B04 LDR X0, [X0 + 0x698]
	0x03DE1B08 BL 0x1C16CF4
	0x03DE1B0C ADRP X0, 0x388000
	0x03DE1B10 LDR X0, [X0 + 0x6A0]
	0x03DE1B14 BL 0x1C16CF4
	0x03DE1B18 ADRP X0, 0x33C000
	0x03DE1B1C LDR X0, [X0 + 0xD08]
	0x03DE1B20 BL 0x1C16CF4
	0x03DE1B24 MOVZ W8, 0x1
	0x03DE1B28 STRB W8, [X21 + 0x1E9]
	0x03DE1B2C ADD X8, X31, 0x78
	0x03DE1B30 ADD X9, X31, 0x58
	0x03DE1B34 ADD X10, X31, 0x50
	0x03DE1B38 STP X31, X8, [X31]
	0x03DE1B3C ADD X8, X31, 0x38
	0x03DE1B40 STP X9, X10, [X31 + 0x10]
	0x03DE1B44 ADD X9, X31, 0x30
	0x03DE1B48 STR X8, [X31 + 0x20]
	0x03DE1B4C MOVZ W8, 0x1
	0x03DE1B50 STP X31, X31, [X31 + 0x58]
	0x03DE1B54 STR X31, [X31 + 0x68]
	0x03DE1B58 STP X31, X31, [X31 + 0x48]
	0x03DE1B5C STP X31, X31, [X31 + 0x38]
	0x03DE1B60 STP X9, X31, [X31 + 0x28]
	0x03DE1B64 STRB W8, [X19 + 0x18]
	0x03DE1B68 LDR X0, [X20]
	0x03DE1B6C LDR W8, [X0 + 0xE0]
	0x03DE1B70 CBNZ W8, 0x3DE1B78
	0x03DE1B74 BL 0x1C16DFC
	0x03DE1B78 MOV X0, X31
	0x03DE1B7C BL 0x3DBD7F8
	0x03DE1B80 LDR X9, [X31 + 0x78]
	0x03DE1B84 LDR X8, [X9 + 0x10]
	0x03DE1B88 CBZ X8, 0x3DE1CC8
	0x03DE1B8C LDR W9, [X9 + 0x34]
	0x03DE1B90 LDR W23, [X8 + 0x18]
	0x03DE1B94 ADD W10, W9, 0x1
	0x03DE1B98 CMP W10, W23
	0x03DE1B9C CSINC W24, W31, W9, GE
	0x03DE1BA0 CMP W23, 0x1
	0x03DE1BA4 B.LT 0x3DE1D1C
	0x03DE1BA8 ADRP X26, 0x388000
	0x03DE1BAC ADRP X27, 0x388000
	0x03DE1BB0 LDR X26, [X26 + 0x6A0]
	0x03DE1BB4 LDR X27, [X27 + 0x618]
	0x03DE1BB8 CMP W24, W23
	0x03DE1BBC CSEL W9, W31, W23, LT
	0x03DE1BC0 MOV X19, X0
	0x03DE1BC4 MOV W25, W31
	0x03DE1BC8 SUB W20, W24, W9
	0x03DE1BCC MOVZ W28, 0x1
	0x03DE1BD0 LDR X2, [X26]
	0x03DE1BD4 MOV X0, X8
	0x03DE1BD8 MOV W1, W20
	0x03DE1BDC BL 0x301BCCC
	0x03DE1BE0 MOV X21, X0
	0x03DE1BE4 CBZ X0, 0x3DE1CBC
	0x03DE1BE8 LDP X22, X8, [X21 + 0x18]
	0x03DE1BEC SUB X8, X19, X8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x608000
	011 Move X26, 0x389000
	012 Move X20, 0x389000
	013 Move X24, 0x389000
	014 Move X23, 0x389000
	015 Move X22, 0x389000
	016 Move X21, 0x389000
	017 Move X26, [X26+1416]
	018 Move W8, [X25+472]
	019 Move X20, [X20+1424]
	020 Move X24, [X24+1432]
	021 Move X23, [X23+1440]
	022 Move X22, [X22+1448]
	023 Move X21, [X21+1456]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {49}
	029 Move X0, 0x389000
	030 Move X0, [X0+1440]
	031 Call 0x1C17CF4
	032 Move X0, 0x389000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move X0, 0x389000
	036 Move X0, [X0+1424]
	037 Call 0x1C17CF4
	038 Move X0, 0x389000
	039 Move X0, [X0+1416]
	040 Call 0x1C17CF4
	041 Move X0, 0x389000
	042 Move X0, [X0+1456]
	043 Call 0x1C17CF4
	044 Move X0, 0x389000
	045 Move X0, [X0+1448]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X25+472], W8
	049 Move X0, [X26]
	050 Call 0x1C17F10
	051 Move X2, [X20]
	052 Move W1, 128
	053 Move X20, X0
	054 Call List`1<TextureInfo>..ctor, X0, X1
	055 Move [X19+16], X20
	056 Move X0, [X24]
	057 Call 0x1C17F10
	058 Move X2, [X23]
	059 Move W1, 128
	060 Move X20, X0
	061 Call Dictionary`2<Object, TextureId>..ctor, X0, X1
	062 Move [X19+24], X20
	063 Move X0, [X22]
	064 Call 0x1C17F10
	065 Move X1, [X21]
	066 Move X20, X0
	067 Call Stack`1<TextureId>..ctor, X0
	068 Move [X19+32], X20
	069 Move X0, X19
	070 Move X20, [X31+64]
	071 Move X19, [X31+72]
	072 Move X22, [X31+48]
	073 Move X21, [X31+56]
	074 Move X24, [X31+32]
	075 Move X23, [X31+40]
	076 Move X26, [X31+16]
	077 Move X25, [X31+24]
	078 Move X1, X31
	079 Move X30, [X31+80]
	080 Call Object..ctor, X0
	081 Return 

Method: System.Void .cctor()

Disassembly:
	0x03DE1BF0 CMP X8, X22
	0x03DE1BF4 B.LT 0x3DE1C48
	0x03DE1BF8 LDR X8, [X31 + 0x78]
	0x03DE1BFC LDR X0, [X8 + 0x28]
	0x03DE1C00 CBZ X0, 0x3DE1CC4
	0x03DE1C04 LDR X2, [X27]
	0x03DE1C08 MOV X1, X21
	0x03DE1C0C BL 0x2DBE4B0
	0x03DE1C10 TBNZ X0, 0x0, 0x3DE1C2C
	0x03DE1C14 LDR X8, [X21]
	0x03DE1C18 LDP X9, X3, [X8 + 0x178]
	0x03DE1C1C MOV X0, X21
	0x03DE1C20 MOV X1, X22
	0x03DE1C24 MOV X2, X19
	0x03DE1C28 BLR X9
	0x03DE1C2C LDR X8, [X21 + 0x28]
	0x03DE1C30 LDR X9, [X21]
	0x03DE1C34 STP X19, X8, [X21 + 0x18]
	0x03DE1C38 LDP X8, X1, [X9 + 0x198]
	0x03DE1C3C MOV X0, X21
	0x03DE1C40 BLR X8
	0x03DE1C44 TBNZ X0, 0x0, 0x3DE1C5C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x608000
	005 Move X20, 0x382000
	006 Move W8, [X19+473]
	007 Move X20, [X20+1712]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x382000
	013 Move X0, [X0+1712]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+473], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Call TextureRegistry..ctor, X0
	021 Move X8, [X20]
	022 Move X8, [X8+184]
	023 Move [X8], X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 

