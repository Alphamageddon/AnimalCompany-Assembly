Type: UnityEngine.UIElements.RectIntField

Method: UnityEngine.UIElements.BaseCompositeField`3/FieldDescription<UnityEngine.RectInt, UnityEngine.UIElements.IntegerField, System.Int32>[] DescribeFields()

Disassembly:
	0x03D087E8 STR X30, [X31 - 0x30]!
	0x03D087EC STP X22, X21, [X31 + 0x10]
	0x03D087F0 STP X20, X19, [X31 + 0x20]
	0x03D087F4 ADRP X22, 0x6DF000
	0x03D087F8 ADRP X21, 0x45B000
	0x03D087FC LDRB W8, [X22 + 0x852]
	0x03D08800 LDR X21, [X21 + 0x5E0]
	0x03D08804 MOV X20, X1
	0x03D08808 MOV X19, X0
	0x03D0880C TBNZ X8, 0x0, 0x3D08854
	0x03D08810 ADRP X0, 0x45B000
	0x03D08814 LDR X0, [X0 + 0x5E8]
	0x03D08818 BL 0x1C16CF4
	0x03D0881C ADRP X0, 0x45B000
	0x03D08820 LDR X0, [X0 + 0x5E0]
	0x03D08824 BL 0x1C16CF4
	0x03D08828 ADRP X0, 0x45B000
	0x03D0882C LDR X0, [X0 + 0x5F0]
	0x03D08830 BL 0x1C16CF4
	0x03D08834 ADRP X0, 0x45B000
	0x03D08838 LDR X0, [X0 + 0x5F8]
	0x03D0883C BL 0x1C16CF4
	0x03D08840 ADRP X0, 0x45B000
	0x03D08844 LDR X0, [X0 + 0x600]
	0x03D08848 BL 0x1C16CF4
	0x03D0884C MOVZ W8, 0x1
	0x03D08850 STRB W8, [X22 + 0x852]
	0x03D08854 LDR X0, [X21]
	0x03D08858 ADRP X22, 0x45B000
	0x03D0885C ADRP X21, 0x45B000
	0x03D08860 LDR W8, [X0 + 0xE0]
	0x03D08864 LDR X22, [X22 + 0x5E8]
	0x03D08868 LDR X21, [X21 + 0x600]
	0x03D0886C CBNZ W8, 0x3D08874
	0x03D08870 BL 0x1C16DFC
	0x03D08874 LDR X3, [X22]
	0x03D08878 MOVZ W2, 0x2
	0x03D0887C MOV X0, X19
	0x03D08880 MOV X1, X20
	0x03D08884 BL 0x276ACA8
	0x03D08888 LDR X0, [X21]
	0x03D0888C LDR W8, [X0 + 0xE0]
	0x03D08890 CBNZ W8, 0x3D0889C
	0x03D08894 BL 0x1C16DFC
	0x03D08898 LDR X0, [X21]
	0x03D0889C LDR X8, [X0 + 0xB8]
	0x03D088A0 MOV X0, X19
	0x03D088A4 MOV X2, X31
	0x03D088A8 LDR X1, [X8]
	0x03D088AC BL 0x3DF1C70
	0x03D088B0 LDR X0, [X19 + 0x400]
	0x03D088B4 CBZ X0, 0x3D08904
	0x03D088B8 LDR X8, [X21]
	0x03D088BC ADRP X20, 0x45B000
	0x03D088C0 MOV X2, X31
	0x03D088C4 LDR X8, [X8 + 0xB8]
	0x03D088C8 LDR X1, [X8 + 0x8]
	0x03D088CC LDR X20, [X20 + 0x5F8]
	0x03D088D0 BL 0x3DF1C70
	0x03D088D4 LDR X1, [X20]
	0x03D088D8 MOV X0, X19
	0x03D088DC BL 0x28A804C
	0x03D088E0 CBZ X0, 0x3D08904
	0x03D088E4 LDR X8, [X21]
	0x03D088E8 LDP X20, X19, [X31 + 0x20]
	0x03D088EC LDP X22, X21, [X31 + 0x10]
	0x03D088F0 MOV X2, X31
	0x03D088F4 LDR X8, [X8 + 0xB8]
	0x03D088F8 LDR X1, [X8 + 0x10]
	0x03D088FC LDR X30, [X31], #0x30
	0x03D08900 B 0x3DF1C70
	0x03D08904 BL 0x1C16F20
	0x03D08908 STP X30, X23, [X31 - 0x30]!
	0x03D0890C STP X22, X21, [X31 + 0x10]
	0x03D08910 STP X20, X19, [X31 + 0x20]
	0x03D08914 ADRP X23, 0x6DF000
	0x03D08918 ADRP X22, 0x45B000
	0x03D0891C ADRP X19, 0x45B000
	0x03D08920 ADRP X21, 0x414000
	0x03D08924 ADRP X20, 0x414000
	0x03D08928 LDRB W8, [X23 + 0x853]
	0x03D0892C LDR X22, [X22 + 0x608]
	0x03D08930 LDR X19, [X19 + 0x600]
	0x03D08934 LDR X21, [X21 + 0xEB8]
	0x03D08938 LDR X20, [X20 + 0xEC0]
	0x03D0893C TBNZ X8, 0x0, 0x3D08978
	0x03D08940 ADRP X0, 0x45B000
	0x03D08944 LDR X0, [X0 + 0x600]
	0x03D08948 BL 0x1C16CF4
	0x03D0894C ADRP X0, 0x414000
	0x03D08950 LDR X0, [X0 + 0xEB8]
	0x03D08954 BL 0x1C16CF4
	0x03D08958 ADRP X0, 0x45B000
	0x03D0895C LDR X0, [X0 + 0x608]
	0x03D08960 BL 0x1C16CF4
	0x03D08964 ADRP X0, 0x414000
	0x03D08968 LDR X0, [X0 + 0xEC0]
	0x03D0896C BL 0x1C16CF4
	0x03D08970 MOVZ W8, 0x1
	0x03D08974 STRB W8, [X23 + 0x853]
	0x03D08978 LDR X8, [X19]
	0x03D0897C LDR X9, [X22]
	0x03D08980 MOV X2, X31
	0x03D08984 LDR X8, [X8 + 0xB8]
	0x03D08988 STR X9, [X8]
	0x03D0898C LDR X8, [X19]
	0x03D08990 LDR X1, [X21]
	0x03D08994 LDR X8, [X8 + 0xB8]
	0x03D08998 LDR X0, [X8]
	0x03D0899C BL 0x321B938
	0x03D089A0 LDR X8, [X19]
	0x03D089A4 MOV X2, X31
	0x03D089A8 LDR X8, [X8 + 0xB8]
	0x03D089AC STR X0, [X8 + 0x8]
	0x03D089B0 LDR X0, [X8]
	0x03D089B4 LDR X1, [X20]
	0x03D089B8 BL 0x321B938
	0x03D089BC LDR X8, [X19]
	0x03D089C0 LDP X20, X19, [X31 + 0x20]
	0x03D089C4 LDP X22, X21, [X31 + 0x10]
	0x03D089C8 LDR X8, [X8 + 0xB8]
	0x03D089CC STR X0, [X8 + 0x10]
	0x03D089D0 LDP X30, X23, [X31], #0x30
	0x03D089D4 RET
	0x03D089D8 STP X30, X21, [X31 - 0x20]!
	0x03D089DC STP X20, X19, [X31 + 0x10]
	0x03D089E0 ADRP X20, 0x6DF000
	0x03D089E4 ADRP X21, 0x45B000
	0x03D089E8 LDRB W8, [X20 + 0x854]
	0x03D089EC LDR X21, [X21 + 0x610]
	0x03D089F0 MOV X19, X0
	0x03D089F4 TBNZ X8, 0x0, 0x3D08A0C
	0x03D089F8 ADRP X0, 0x45B000
	0x03D089FC LDR X0, [X0 + 0x610]
	0x03D08A00 BL 0x1C16CF4
	0x03D08A04 MOVZ W8, 0x1
	0x03D08A08 STRB W8, [X20 + 0x854]
	0x03D08A0C LDR X1, [X21]
	0x03D08A10 MOV X0, X19
	0x03D08A14 LDP X20, X19, [X31 + 0x10]
	0x03D08A18 LDP X30, X21, [X31], #0x20
	0x03D08A1C B 0x2736468
	0x03D08A20 SUB X31, X31, 0xC0
	0x03D08A24 STR D8, [X31 + 0x80]
	0x03D08A28 STR X30, [X31 + 0x88]
	0x03D08A2C STP X24, X23, [X31 + 0x90]
	0x03D08A30 STP X22, X21, [X31 + 0xA0]
	0x03D08A34 STP X20, X19, [X31 + 0xB0]
	0x03D08A38 ADRP X24, 0x6DF000
	0x03D08A3C ADRP X23, 0x45B000
	0x03D08A40 LDRB W8, [X24 + 0x855]
	0x03D08A44 LDR X23, [X23 + 0x618]
	0x03D08A48 MOV X21, X3
	0x03D08A4C MOV X20, X2
	0x03D08A50 MOV X19, X1
	0x03D08A54 MOV X22, X0
	0x03D08A58 TBNZ X8, 0x0, 0x3D08A7C
	0x03D08A5C ADRP X0, 0x45B000
	0x03D08A60 LDR X0, [X0 + 0x618]
	0x03D08A64 BL 0x1C16CF4
	0x03D08A68 ADRP X0, 0x45B000
	0x03D08A6C LDR X0, [X0 + 0x600]
	0x03D08A70 BL 0x1C16CF4
	0x03D08A74 MOVZ W8, 0x1
	0x03D08A78 STRB W8, [X24 + 0x855]
	0x03D08A7C LDP V1, V0, [X21]
	0x03D08A80 LDR X4, [X23]
	0x03D08A84 ADD X3, X31, 0x60
	0x03D08A88 MOV X0, X22
	0x03D08A8C MOV X1, X19
	0x03D08A90 MOV X2, X20
	0x03D08A94 STP V1, V0, [X31 + 0x40]
	0x03D08A98 STP V1, V0, [X31 + 0x60]
	0x03D08A9C BL 0x273BCC0
	0x03D08AA0 CBZ X19, 0x3D08AD8
	0x03D08AA4 ADRP X9, 0x45B000
	0x03D08AA8 LDR X9, [X9 + 0x600]
	0x03D08AAC LDR X8, [X19]
	0x03D08AB0 LDR X1, [X9]
	0x03D08AB4 LDRB W10, [X8 + 0x130]
	0x03D08AB8 LDRB W9, [X1 + 0x130]
	0x03D08ABC CMP W10, W9
	0x03D08AC0 B.CC 0x3D08B7C
	0x03D08AC4 LDR X8, [X8 + 0xC8]
	0x03D08AC8 ADD X8, X8, X9, 0x3, LSL
	0x03D08ACC LDUR X8, [X8 - 0x8]
	0x03D08AD0 CMP X8, X1
	0x03D08AD4 B.NE 0x3D08B7C
	0x03D08AD8 LDP V0, V1, [X21]
	0x03D08ADC LDR X0, [X22 + 0x80]
	0x03D08AE0 STP V0, V1, [X31 + 0x20]
	0x03D08AE4 CBZ X0, 0x3D08B78
	0x03D08AE8 LDR X8, [X0]
	0x03D08AEC LDP V0, V1, [X31 + 0x20]
	0x03D08AF0 ADD X2, X31, 0x60
	0x03D08AF4 MOV X1, X20
	0x03D08AF8 LDR X9, [X8 + 0x178]
	0x03D08AFC STP V0, V1, [X31 + 0x60]
	0x03D08B00 LDR X3, [X8 + 0x180]
	0x03D08B04 BLR X9
	0x03D08B08 MOV V8.16B, V0.16B
	0x03D08B0C LDP V0, V1, [X21]
	0x03D08B10 LDR X0, [X22 + 0x88]
	0x03D08B14 STP V0, V1, [X31]
	0x03D08B18 CBZ X0, 0x3D08B78
	0x03D08B1C LDR X8, [X0]
	0x03D08B20 LDP V0, V1, [X31]
	0x03D08B24 ADD X2, X31, 0x60
	0x03D08B28 MOV X1, X20
	0x03D08B2C LDR X9, [X8 + 0x178]
	0x03D08B30 STP V0, V1, [X31 + 0x60]
	0x03D08B34 LDR X3, [X8 + 0x180]
	0x03D08B38 BLR X9
	0x03D08B3C CBZ X19, 0x3D08B78
	0x03D08B40 LDR X8, [X19]
	0x03D08B44 MOV V1.16B, V0.16B
	0x03D08B48 MOV X0, X19
	0x03D08B4C MOV V0.16B, V8.16B
	0x03D08B50 LDR X9, [X8 + 0x888]
	0x03D08B54 LDR X1, [X8 + 0x890]
	0x03D08B58 BLR X9
	0x03D08B5C LDP X20, X19, [X31 + 0xB0]
	0x03D08B60 LDP X22, X21, [X31 + 0xA0]
	0x03D08B64 LDP X24, X23, [X31 + 0x90]
	0x03D08B68 LDR X30, [X31 + 0x88]
	0x03D08B6C LDR V8, [X31 + 0x80]
	0x03D08B70 ADD X31, X31, 0xC0
	0x03D08B74 RET
	0x03D08B78 BL 0x1C16F20
	0x03D08B7C MOV X0, X19
	0x03D08B80 BL 0x1C171E0
	0x03D08B84 STP X30, X21, [X31 - 0x20]!
	0x03D08B88 STP X20, X19, [X31 + 0x10]
	0x03D08B8C ADRP X20, 0x6DF000
	0x03D08B90 ADRP X21, 0x45B000
	0x03D08B94 LDRB W8, [X20 + 0x856]
	0x03D08B98 LDR X21, [X21 + 0x270]
	0x03D08B9C MOV X19, X0
	0x03D08BA0 TBNZ X8, 0x0, 0x3D08BDC
	0x03D08BA4 ADRP X0, 0x45B000
	0x03D08BA8 LDR X0, [X0 + 0x270]
	0x03D08BAC BL 0x1C16CF4
	0x03D08BB0 ADRP X0, 0x45B000
	0x03D08BB4 LDR X0, [X0 + 0x620]
	0x03D08BB8 BL 0x1C16CF4
	0x03D08BBC ADRP X0, 0x413000
	0x03D08BC0 LDR X0, [X0 + 0x780]
	0x03D08BC4 BL 0x1C16CF4
	0x03D08BC8 ADRP X0, 0x413000
	0x03D08BCC LDR X0, [X0 + 0x788]
	0x03D08BD0 BL 0x1C16CF4
	0x03D08BD4 MOVZ W8, 0x1
	0x03D08BD8 STRB W8, [X20 + 0x856]
	0x03D08BDC LDR X0, [X21]
	0x03D08BE0 BL 0x1C16F10
	0x03D08BE4 MOV X1, X31
	0x03D08BE8 MOV X20, X0
	0x03D08BEC BL 0x3E1B6CC
	0x03D08BF0 CBZ X20, 0x3D08C50
	0x03D08BF4 ADRP X8, 0x413000
	0x03D08BF8 LDR X8, [X8 + 0x780]
	0x03D08BFC LDR X8, [X8]
	0x03D08C00 STR X8, [X20 + 0x10]
	0x03D08C04 STR X20, [X19 + 0x80]
	0x03D08C08 LDR X0, [X21]
	0x03D08C0C BL 0x1C16F10
	0x03D08C10 MOV X1, X31
	0x03D08C14 MOV X20, X0
	0x03D08C18 BL 0x3E1B6CC
	0x03D08C1C CBZ X20, 0x3D08C50
	0x03D08C20 ADRP X8, 0x413000
	0x03D08C24 LDR X8, [X8 + 0x788]
	0x03D08C28 ADRP X9, 0x45B000
	0x03D08C2C MOV X0, X19
	0x03D08C30 LDR X8, [X8]
	0x03D08C34 LDR X9, [X9 + 0x620]
	0x03D08C38 STR X8, [X20 + 0x10]
	0x03D08C3C STR X20, [X19 + 0x88]
	0x03D08C40 LDR X1, [X9]
	0x03D08C44 LDP X20, X19, [X31 + 0x10]
	0x03D08C48 LDP X30, X21, [X31], #0x20
	0x03D08C4C B 0x273BC04
	0x03D08C50 BL 0x1C16F20
	0x03D08C54 STR X30, [X31 - 0x20]!
	0x03D08C58 STP X20, X19, [X31 + 0x10]
	0x03D08C5C ADRP X19, 0x6DF000
	0x03D08C60 ADRP X20, 0x45B000
	0x03D08C64 LDRB W8, [X19 + 0x857]
	0x03D08C68 LDR X20, [X20 + 0x5A0]
	0x03D08C6C TBNZ X8, 0x0, 0x3D08C84
	0x03D08C70 ADRP X0, 0x45B000
	0x03D08C74 LDR X0, [X0 + 0x5A0]
	0x03D08C78 BL 0x1C16CF4
	0x03D08C7C MOVZ W8, 0x1
	0x03D08C80 STRB W8, [X19 + 0x857]
	0x03D08C84 LDR X0, [X20]
	0x03D08C88 BL 0x1C16F10
	0x03D08C8C MOV X1, X31
	0x03D08C90 MOV X19, X0
	0x03D08C94 BL 0x33BDD8C
	0x03D08C98 LDR X8, [X20]
	0x03D08C9C LDR X8, [X8 + 0xB8]
	0x03D08CA0 STR X19, [X8]
	0x03D08CA4 LDP X20, X19, [X31 + 0x10]
	0x03D08CA8 LDR X30, [X31], #0x20
	0x03D08CAC RET
	0x03D08CB0 MOV X1, X31
	0x03D08CB4 B 0x33BDD8C
	0x03D08CB8 RET
	0x03D08CBC STR S0, [X1]
	0x03D08CC0 RET
	0x03D08CC4 MOV V0.16B, V1.16B
	0x03D08CC8 RET
	0x03D08CCC STR S0, [X1 + 0x4]
	0x03D08CD0 RET
	0x03D08CD4 SUB X31, X31, 0xD0
	0x03D08CD8 STR X30, [X31 + 0x80]
	0x03D08CDC STP X26, X25, [X31 + 0x90]
	0x03D08CE0 STP X24, X23, [X31 + 0xA0]
	0x03D08CE4 STP X22, X21, [X31 + 0xB0]
	0x03D08CE8 STP X20, X19, [X31 + 0xC0]
	0x03D08CEC ADRP X20, 0x6DF000
	0x03D08CF0 ADRP X19, 0x45B000
	0x03D08CF4 ADRP X25, 0x45B000
	0x03D08CF8 LDRB W8, [X20 + 0x858]
	0x03D08CFC LDR X19, [X19 + 0x628]
	0x03D08D00 LDR X25, [X25 + 0x630]
	0x03D08D04 TBNZ X8, 0x0, 0x3D08DDC
	0x03D08D08 ADRP X0, 0x45B000
	0x03D08D0C LDR X0, [X0 + 0x628]
	0x03D08D10 BL 0x1C16CF4
	0x03D08D14 ADRP X0, 0x45B000
	0x03D08D18 LDR X0, [X0 + 0x638]
	0x03D08D1C BL 0x1C16CF4
	0x03D08D20 ADRP X0, 0x45B000
	0x03D08D24 LDR X0, [X0 + 0x640]
	0x03D08D28 BL 0x1C16CF4
	0x03D08D2C ADRP X0, 0x45B000
	0x03D08D30 LDR X0, [X0 + 0x648]
	0x03D08D34 BL 0x1C16CF4
	0x03D08D38 ADRP X0, 0x45B000
	0x03D08D3C LDR X0, [X0 + 0x650]
	0x03D08D40 BL 0x1C16CF4
	0x03D08D44 ADRP X0, 0x45B000
	0x03D08D48 LDR X0, [X0 + 0x658]
	0x03D08D4C BL 0x1C16CF4
	0x03D08D50 ADRP X0, 0x45B000
	0x03D08D54 LDR X0, [X0 + 0x660]
	0x03D08D58 BL 0x1C16CF4
	0x03D08D5C ADRP X0, 0x45B000
	0x03D08D60 LDR X0, [X0 + 0x668]
	0x03D08D64 BL 0x1C16CF4
	0x03D08D68 ADRP X0, 0x45B000
	0x03D08D6C LDR X0, [X0 + 0x670]
	0x03D08D70 BL 0x1C16CF4
	0x03D08D74 ADRP X0, 0x45B000
	0x03D08D78 LDR X0, [X0 + 0x630]
	0x03D08D7C BL 0x1C16CF4
	0x03D08D80 ADRP X0, 0x45B000
	0x03D08D84 LDR X0, [X0 + 0x678]
	0x03D08D88 BL 0x1C16CF4
	0x03D08D8C ADRP X0, 0x420000
	0x03D08D90 LDR X0, [X0 + 0x440]
	0x03D08D94 BL 0x1C16CF4
	0x03D08D98 ADRP X0, 0x45B000
	0x03D08D9C LDR X0, [X0 + 0x490]
	0x03D08DA0 BL 0x1C16CF4
	0x03D08DA4 ADRP X0, 0x45B000
	0x03D08DA8 LDR X0, [X0 + 0x680]
	0x03D08DAC BL 0x1C16CF4
	0x03D08DB0 ADRP X0, 0x41A000
	0x03D08DB4 LDR X0, [X0 + 0xFA8]
	0x03D08DB8 BL 0x1C16CF4
	0x03D08DBC ADRP X0, 0x412000
	0x03D08DC0 LDR X0, [X0 + 0x908]
	0x03D08DC4 BL 0x1C16CF4
	0x03D08DC8 ADRP X0, 0x45B000
	0x03D08DCC LDR X0, [X0 + 0x498]
	0x03D08DD0 BL 0x1C16CF4
	0x03D08DD4 MOVZ W8, 0x1
	0x03D08DD8 STRB W8, [X20 + 0x858]
	0x03D08DDC LDR X0, [X19]
	0x03D08DE0 ADRP X20, 0x45B000
	0x03D08DE4 ADRP X21, 0x412000
	0x03D08DE8 LDR X20, [X20 + 0x498]
	0x03D08DEC LDR X21, [X21 + 0x908]
	0x03D08DF0 MOVZ W1, 0x3
	0x03D08DF4 BL 0x1C16D6C
	0x03D08DF8 LDR X8, [X25]
	0x03D08DFC MOV X19, X0
	0x03D08E00 LDR W9, [X8 + 0xE0]
	0x03D08E04 CBNZ W9, 0x3D08E14
	0x03D08E08 MOV X0, X8
	0x03D08E0C BL 0x1C16DFC
	0x03D08E10 LDR X8, [X25]
	0x03D08E14 LDR X9, [X8 + 0xB8]
	0x03D08E18 LDR X20, [X20]
	0x03D08E1C LDR X21, [X21]
	0x03D08E20 LDR X22, [X9 + 0x8]
	0x03D08E24 CBNZ X22, 0x3D08E7C
	0x03D08E28 LDR W9, [X8 + 0xE0]
	0x03D08E2C CBNZ W9, 0x3D08E3C
	0x03D08E30 MOV X0, X8
	0x03D08E34 BL 0x1C16DFC
	0x03D08E38 LDR X8, [X25]
	0x03D08E3C ADRP X9, 0x45B000

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+160], X30
	003 Move [X31+176], X26
	004 Move [X31+184], X25
	005 Move [X31+192], X24
	006 Move [X31+200], X23
	007 Move [X31+208], X22
	008 Move [X31+216], X21
	009 Move [X31+224], X20
	010 Move [X31+232], X19
	011 Move X20, 0x6E0000
	012 Move X19, 0x45C000
	013 Move X25, 0x45C000
	014 Move W8, [X20+2122]
	015 Move X19, [X19+1256]
	016 Move X25, [X25+1264]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {86}
	021 Move X0, 0x45C000
	022 Move X0, [X0+1256]
	023 Call 0x1C17CF4
	024 Move X0, 0x45C000
	025 Move X0, [X0+1272]
	026 Call 0x1C17CF4
	027 Move X0, 0x45C000
	028 Move X0, [X0+1280]
	029 Call 0x1C17CF4
	030 Move X0, 0x45C000
	031 Move X0, [X0+1288]
	032 Call 0x1C17CF4
	033 Move X0, 0x45C000
	034 Move X0, [X0+1296]
	035 Call 0x1C17CF4
	036 Move X0, 0x45C000
	037 Move X0, [X0+1304]
	038 Call 0x1C17CF4
	039 Move X0, 0x45C000
	040 Move X0, [X0+1312]
	041 Call 0x1C17CF4
	042 Move X0, 0x45C000
	043 Move X0, [X0+1320]
	044 Call 0x1C17CF4
	045 Move X0, 0x45C000
	046 Move X0, [X0+1328]
	047 Call 0x1C17CF4
	048 Move X0, 0x45C000
	049 Move X0, [X0+1336]
	050 Call 0x1C17CF4
	051 Move X0, 0x45C000
	052 Move X0, [X0+1344]
	053 Call 0x1C17CF4
	054 Move X0, 0x45C000
	055 Move X0, [X0+1264]
	056 Call 0x1C17CF4
	057 Move X0, 0x45C000
	058 Move X0, [X0+1352]
	059 Call 0x1C17CF4
	060 Move X0, 0x45C000
	061 Move X0, [X0+1152]
	062 Call 0x1C17CF4
	063 Move X0, 0x433000
	064 Move X0, [X0+1696]
	065 Call 0x1C17CF4
	066 Move X0, 0x45C000
	067 Move X0, [X0+1160]
	068 Call 0x1C17CF4
	069 Move X0, 0x41D000
	070 Move X0, [X0+472]
	071 Call 0x1C17CF4
	072 Move X0, 0x45C000
	073 Move X0, [X0+1168]
	074 Call 0x1C17CF4
	075 Move X0, 0x41B000
	076 Move X0, [X0+4008]
	077 Call 0x1C17CF4
	078 Move X0, 0x413000
	079 Move X0, [X0+2312]
	080 Call 0x1C17CF4
	081 Move X0, 0x45C000
	082 Move X0, [X0+1176]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X20+2122], W8
	086 Move X0, [X19]
	087 Move X20, 0x45C000
	088 Move X21, 0x413000
	089 Move X20, [X20+1176]
	090 Move X21, [X21+2312]
	091 Move W1, 4
	092 Call 0x1C17D6C
	093 Move X8, [X25]
	094 Move X19, X0
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {101}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move X8, [X25]
	101 Move X9, [X8+184]
	102 Move X20, [X20]
	103 Move X21, [X21]
	104 Move X22, [X9+8]
	105 Compare X22, 0
	106 JumpIfNotEqual {129}
	107 Move W9, [X8+224]
	108 Compare W9, 0
	109 JumpIfNotEqual {113}
	110 Move X0, X8
	111 Call 0x1C17DFC
	112 Move X8, [X25]
	113 Move X9, 0x45C000
	114 Move X8, [X8+184]
	115 Move X9, [X9+1280]
	116 Move X23, [X8]
	117 Move X0, [X9]
	118 Call 0x1C17F10
	119 Move X8, 0x45C000
	120 Move X8, [X8+1288]
	121 Move X1, X23
	122 Move X3, X31
	123 Move X22, X0
	124 Move X2, [X8]
	125 Call Func`2<RectInt, Int32>..ctor, X0, X1, X2
	126 Move X8, [X25]
	127 Move X9, [X8+184]
	128 Move [X9+8], X22
	129 Move W9, [X8+224]
	130 Compare W9, 0
	131 JumpIfNotEqual {135}
	132 Move X0, X8
	133 Call 0x1C17DFC
	134 Move X8, [X25]
	135 Move X9, [X8+184]
	136 Move X26, 0x45C000
	137 Move X23, [X9+16]
	138 Move X26, [X26+1272]
	139 Compare X23, 0
	140 JumpIfNotEqual {163}
	141 Move W9, [X8+224]
	142 Compare W9, 0
	143 JumpIfNotEqual {147}
	144 Move X0, X8
	145 Call 0x1C17DFC
	146 Move X8, [X25]
	147 Move X9, 0x45C000
	148 Move X8, [X8+184]
	149 Move X9, [X9+1352]
	150 Move X24, [X8]
	151 Move X0, [X9]
	152 Call 0x1C17F10
	153 Move X8, 0x45C000
	154 Move X8, [X8+1296]
	155 Move X1, X24
	156 Move X3, X31
	157 Move X23, X0
	158 Move X2, [X8]
	159 Call WriteDelegate<RectInt, Object, Int32>..ctor, X0, X1, X2
	160 Move X8, [X25]
	161 Move X8, [X8+184]
	162 Move [X8+16], X23
	163 Move X5, [X26]
	164 NotImplemented "Instruction MOVI not yet implemented."
	165 Add X0, X31, 128
	166 Move X1, X21
	167 Move X2, X20
	168 Move X3, X22
	169 Move X4, X23
	170 Move [X31+128], V0
	171 Move [X31+136], V0
	172 Call FieldDescription<RectInt, Object, Int32>..ctor, X0, X1, X2, X3, X4
	173 Compare X19, 0
	174 JumpIfEqual {460}
	175 Move V0, [X31+128]
	176 Move V1, [X31+144]
	177 Move [X31+96], V0
	178 Move [X31+104], V1
	179 Move W8, [X19+24]
	180 Compare W8, 0
	181 JumpIfEqual {459}
	182 Move V1, [X31+96]
	183 Move V0, [X31+112]
	184 Move X20, 0x45C000
	185 Move X21, 0x41B000
	186 Move [X19+32], V1
	187 Move [X19+40], V0
	188 Move X0, [X25]
	189 Move W8, [X0+224]
	190 Move X20, [X20+1168]
	191 Move X21, [X21+4008]
	192 Compare W8, 0
	193 JumpIfNotEqual {196}
	194 Call 0x1C17DFC
	195 Move X0, [X25]
	196 Move X8, [X0+184]
	197 Move X20, [X20]
	198 Move X21, [X21]
	199 Move X22, [X8+24]
	200 Compare X22, 0
	201 JumpIfNotEqual {223}
	202 Move W8, [X0+224]
	203 Compare W8, 0
	204 JumpIfNotEqual {207}
	205 Call 0x1C17DFC
	206 Move X0, [X25]
	207 Move X9, 0x45C000
	208 Move X8, [X0+184]
	209 Move X9, [X9+1280]
	210 Move X23, [X8]
	211 Move X0, [X9]
	212 Call 0x1C17F10
	213 Move X8, 0x45C000
	214 Move X8, [X8+1304]
	215 Move X1, X23
	216 Move X3, X31
	217 Move X22, X0
	218 Move X2, [X8]
	219 Call Func`2<RectInt, Int32>..ctor, X0, X1, X2
	220 Move X0, [X25]
	221 Move X8, [X0+184]
	222 Move [X8+24], X22
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {228}
	226 Call 0x1C17DFC
	227 Move X0, [X25]
	228 Move X8, [X0+184]
	229 Move X23, [X8+32]
	230 Compare X23, 0
	231 JumpIfNotEqual {253}
	232 Move W8, [X0+224]
	233 Compare W8, 0
	234 JumpIfNotEqual {237}
	235 Call 0x1C17DFC
	236 Move X0, [X25]
	237 Move X9, 0x45C000
	238 Move X8, [X0+184]
	239 Move X9, [X9+1352]
	240 Move X24, [X8]
	241 Move X0, [X9]
	242 Call 0x1C17F10
	243 Move X8, 0x45C000
	244 Move X8, [X8+1312]
	245 Move X1, X24
	246 Move X3, X31
	247 Move X23, X0
	248 Move X2, [X8]
	249 Call WriteDelegate<RectInt, Object, Int32>..ctor, X0, X1, X2
	250 Move X8, [X25]
	251 Move X8, [X8+184]
	252 Move [X8+32], X23
	253 Move X5, [X26]
	254 NotImplemented "Instruction MOVI not yet implemented."
	255 Add X0, X31, 128
	256 Move X1, X21
	257 Move X2, X20
	258 Move X3, X22
	259 Move X4, X23
	260 Move [X31+128], V0
	261 Move [X31+136], V0
	262 Call FieldDescription<RectInt, Object, Int32>..ctor, X0, X1, X2, X3, X4
	263 Move V1, [X31+128]
	264 Move V0, [X31+144]
	265 Move [X31+64], V1
	266 Move [X31+72], V0
	267 Move W8, [X19+24]
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move V1, [X31+64]
	270 Move V0, [X31+80]
	271 Move X20, 0x45C000
	272 Move X21, 0x433000
	273 Move [X19+64], V1
	274 Move [X19+72], V0
	275 Move X0, [X25]
	276 Move W8, [X0+224]
	277 Move X20, [X20+1152]
	278 Move X21, [X21+1696]
	279 Compare W8, 0
	280 JumpIfNotEqual {283}
	281 Call 0x1C17DFC
	282 Move X0, [X25]
	283 Move X8, [X0+184]
	284 Move X20, [X20]
	285 Move X21, [X21]
	286 Move X22, [X8+40]
	287 Compare X22, 0
	288 JumpIfNotEqual {310}
	289 Move W8, [X0+224]
	290 Compare W8, 0
	291 JumpIfNotEqual {294}
	292 Call 0x1C17DFC
	293 Move X0, [X25]
	294 Move X9, 0x45C000
	295 Move X8, [X0+184]
	296 Move X9, [X9+1280]
	297 Move X23, [X8]
	298 Move X0, [X9]
	299 Call 0x1C17F10
	300 Move X8, 0x45C000
	301 Move X8, [X8+1320]
	302 Move X1, X23
	303 Move X3, X31
	304 Move X22, X0
	305 Move X2, [X8]
	306 Call Func`2<RectInt, Int32>..ctor, X0, X1, X2
	307 Move X0, [X25]
	308 Move X8, [X0+184]
	309 Move [X8+40], X22
	310 Move W8, [X0+224]
	311 Compare W8, 0
	312 JumpIfNotEqual {315}
	313 Call 0x1C17DFC
	314 Move X0, [X25]
	315 Move X8, [X0+184]
	316 Move X23, [X8+48]
	317 Compare X23, 0
	318 JumpIfNotEqual {340}
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {324}
	322 Call 0x1C17DFC
	323 Move X0, [X25]
	324 Move X9, 0x45C000
	325 Move X8, [X0+184]
	326 Move X9, [X9+1352]
	327 Move X24, [X8]
	328 Move X0, [X9]
	329 Call 0x1C17F10
	330 Move X8, 0x45C000
	331 Move X8, [X8+1328]
	332 Move X1, X24
	333 Move X3, X31
	334 Move X23, X0
	335 Move X2, [X8]
	336 Call WriteDelegate<RectInt, Object, Int32>..ctor, X0, X1, X2
	337 Move X8, [X25]
	338 Move X8, [X8+184]
	339 Move [X8+48], X23
	340 Move X5, [X26]
	341 NotImplemented "Instruction MOVI not yet implemented."
	342 Add X0, X31, 128
	343 Move X1, X21
	344 Move X2, X20
	345 Move X3, X22
	346 Move X4, X23
	347 Move [X31+128], V0
	348 Move [X31+136], V0
	349 Call FieldDescription<RectInt, Object, Int32>..ctor, X0, X1, X2, X3, X4
	350 Move V1, [X31+128]
	351 Move V0, [X31+144]
	352 Move [X31+32], V1
	353 Move [X31+40], V0
	354 Move W8, [X19+24]
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Move V1, [X31+32]
	357 Move V0, [X31+48]
	358 Move X20, 0x45C000
	359 Move X21, 0x41D000
	360 Move [X19+96], V1
	361 Move [X19+104], V0
	362 Move X0, [X25]
	363 Move W8, [X0+224]
	364 Move X20, [X20+1160]
	365 Move X21, [X21+472]
	366 Compare W8, 0
	367 JumpIfNotEqual {370}
	368 Call 0x1C17DFC
	369 Move X0, [X25]
	370 Move X8, [X0+184]
	371 Move X20, [X20]
	372 Move X21, [X21]
	373 Move X22, [X8+56]
	374 Compare X22, 0
	375 JumpIfNotEqual {397}
	376 Move W8, [X0+224]
	377 Compare W8, 0
	378 JumpIfNotEqual {381}
	379 Call 0x1C17DFC
	380 Move X0, [X25]
	381 Move X9, 0x45C000
	382 Move X8, [X0+184]
	383 Move X9, [X9+1280]
	384 Move X23, [X8]
	385 Move X0, [X9]
	386 Call 0x1C17F10
	387 Move X8, 0x45C000
	388 Move X8, [X8+1336]
	389 Move X1, X23
	390 Move X3, X31
	391 Move X22, X0
	392 Move X2, [X8]
	393 Call Func`2<RectInt, Int32>..ctor, X0, X1, X2
	394 Move X0, [X25]
	395 Move X8, [X0+184]
	396 Move [X8+56], X22
	397 Move W8, [X0+224]
	398 Compare W8, 0
	399 JumpIfNotEqual {402}
	400 Call 0x1C17DFC
	401 Move X0, [X25]
	402 Move X8, [X0+184]
	403 Move X23, [X8+64]
	404 Compare X23, 0
	405 JumpIfNotEqual {427}
	406 Move W8, [X0+224]
	407 Compare W8, 0
	408 JumpIfNotEqual {411}
	409 Call 0x1C17DFC
	410 Move X0, [X25]
	411 Move X9, 0x45C000
	412 Move X8, [X0+184]
	413 Move X9, [X9+1352]
	414 Move X24, [X8]
	415 Move X0, [X9]
	416 Call 0x1C17F10
	417 Move X8, 0x45C000
	418 Move X8, [X8+1344]
	419 Move X1, X24
	420 Move X3, X31
	421 Move X23, X0
	422 Move X2, [X8]
	423 Call WriteDelegate<RectInt, Object, Int32>..ctor, X0, X1, X2
	424 Move X8, [X25]
	425 Move X8, [X8+184]
	426 Move [X8+64], X23
	427 Move X5, [X26]
	428 NotImplemented "Instruction MOVI not yet implemented."
	429 Add X0, X31, 128
	430 Move X1, X21
	431 Move X2, X20
	432 Move X3, X22
	433 Move X4, X23
	434 Move [X31+128], V0
	435 Move [X31+136], V0
	436 Call FieldDescription<RectInt, Object, Int32>..ctor, X0, X1, X2, X3, X4
	437 Move V1, [X31+128]
	438 Move V0, [X31+144]
	439 Move [X31], V1
	440 Move [X31+8], V0
	441 Move W8, [X19+24]
	442 NotImplemented "Instruction CMP not yet implemented."
	443 Move V1, [X31]
	444 Move V0, [X31+16]
	445 Move X0, X19
	446 Move X22, [X31+208]
	447 Move X21, [X31+216]
	448 Move X24, [X31+192]
	449 Move X23, [X31+200]
	450 Move [X19+128], V1
	451 Move [X19+136], V0
	452 Move X20, [X31+224]
	453 Move X19, [X31+232]
	454 Move X26, [X31+176]
	455 Move X25, [X31+184]
	456 Move X30, [X31+160]
	457 Add X31, X31, 240
	458 Return X0
	459 Call 0x1C17F28
	460 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03D08E40 LDR X8, [X8 + 0xB8]
	0x03D08E44 LDR X9, [X9 + 0x640]

ISIL:
	001 Move X1, X31

Method: System.Void .ctor(System.String label)

Disassembly:
	0x03D08E48 LDR X23, [X8]
	0x03D08E4C LDR X0, [X9]
	0x03D08E50 BL 0x1C16F10
	0x03D08E54 ADRP X8, 0x45B000
	0x03D08E58 LDR X8, [X8 + 0x648]
	0x03D08E5C MOV X1, X23
	0x03D08E60 MOV X3, X31
	0x03D08E64 MOV X22, X0
	0x03D08E68 LDR X2, [X8]
	0x03D08E6C BL 0x2D34674
	0x03D08E70 LDR X8, [X25]
	0x03D08E74 LDR X9, [X8 + 0xB8]
	0x03D08E78 STR X22, [X9 + 0x8]
	0x03D08E7C LDR W9, [X8 + 0xE0]
	0x03D08E80 CBNZ W9, 0x3D08E90
	0x03D08E84 MOV X0, X8
	0x03D08E88 BL 0x1C16DFC
	0x03D08E8C LDR X8, [X25]
	0x03D08E90 LDR X9, [X8 + 0xB8]
	0x03D08E94 ADRP X26, 0x45B000
	0x03D08E98 LDR X23, [X9 + 0x10]
	0x03D08E9C LDR X26, [X26 + 0x638]
	0x03D08EA0 CBNZ X23, 0x3D08EF8
	0x03D08EA4 LDR W9, [X8 + 0xE0]
	0x03D08EA8 CBNZ W9, 0x3D08EB8
	0x03D08EAC MOV X0, X8
	0x03D08EB0 BL 0x1C16DFC
	0x03D08EB4 LDR X8, [X25]
	0x03D08EB8 ADRP X9, 0x45B000
	0x03D08EBC LDR X8, [X8 + 0xB8]
	0x03D08EC0 LDR X9, [X9 + 0x678]
	0x03D08EC4 LDR X24, [X8]
	0x03D08EC8 LDR X0, [X9]
	0x03D08ECC BL 0x1C16F10
	0x03D08ED0 ADRP X8, 0x45B000
	0x03D08ED4 LDR X8, [X8 + 0x650]
	0x03D08ED8 MOV X1, X24
	0x03D08EDC MOV X3, X31
	0x03D08EE0 MOV X23, X0
	0x03D08EE4 LDR X2, [X8]
	0x03D08EE8 BL 0x2899A10
	0x03D08EEC LDR X8, [X25]
	0x03D08EF0 LDR X8, [X8 + 0xB8]
	0x03D08EF4 STR X23, [X8 + 0x10]
	0x03D08EF8 LDR X5, [X26]
	0x03D08EFC MOVI V0.2D, 0x0
	0x03D08F00 ADD X0, X31, 0x60
	0x03D08F04 MOV X1, X21
	0x03D08F08 MOV X2, X20
	0x03D08F0C MOV X3, X22
	0x03D08F10 MOV X4, X23
	0x03D08F14 STP V0, V0, [X31 + 0x60]
	0x03D08F18 BL 0x2D12A60
	0x03D08F1C CBZ X19, 0x3D091C4
	0x03D08F20 LDP V0, V1, [X31 + 0x60]
	0x03D08F24 STP V0, V1, [X31 + 0x40]
	0x03D08F28 LDR W8, [X19 + 0x18]
	0x03D08F2C CBZ W8, 0x3D091C0
	0x03D08F30 LDP V1, V0, [X31 + 0x40]
	0x03D08F34 ADRP X20, 0x45B000
	0x03D08F38 ADRP X21, 0x41A000
	0x03D08F3C STP V1, V0, [X19 + 0x20]
	0x03D08F40 LDR X0, [X25]
	0x03D08F44 LDR W8, [X0 + 0xE0]
	0x03D08F48 LDR X20, [X20 + 0x490]
	0x03D08F4C LDR X21, [X21 + 0xFA8]
	0x03D08F50 CBNZ W8, 0x3D08F5C
	0x03D08F54 BL 0x1C16DFC
	0x03D08F58 LDR X0, [X25]
	0x03D08F5C LDR X8, [X0 + 0xB8]
	0x03D08F60 LDR X20, [X20]
	0x03D08F64 LDR X21, [X21]
	0x03D08F68 LDR X22, [X8 + 0x18]
	0x03D08F6C CBNZ X22, 0x3D08FC0
	0x03D08F70 LDR W8, [X0 + 0xE0]
	0x03D08F74 CBNZ W8, 0x3D08F80
	0x03D08F78 BL 0x1C16DFC
	0x03D08F7C LDR X0, [X25]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x6E0000
	008 Move X22, 0x45C000
	009 Move W8, [X21+2123]
	010 Move X22, [X22+1360]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x45C000
	018 Move X0, [X0+1368]
	019 Call 0x1C17CF4
	020 Move X0, 0x45C000
	021 Move X0, [X0+1360]
	022 Call 0x1C17CF4
	023 Move X0, 0x45C000
	024 Move X0, [X0+1376]
	025 Call 0x1C17CF4
	026 Move X0, 0x45C000
	027 Move X0, [X0+1384]
	028 Call 0x1C17CF4
	029 Move X0, 0x45C000
	030 Move X0, [X0+1392]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+2123], W8
	034 Move X0, [X22]
	035 Move X23, 0x45C000
	036 Move X21, 0x45C000
	037 Move W8, [X0+224]
	038 Move X23, [X23+1368]
	039 Move X21, [X21+1392]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X3, [X23]
	044 Move W2, 2
	045 Move X0, X19
	046 Move X1, X20
	047 Call BaseCompositeField`3<RectInt, Object, Int32>..ctor, X0, X1, X2
	048 Move X0, [X21]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X21]
	054 Move X8, [X0+184]
	055 Move X0, X19
	056 Move X2, X31
	057 Move X1, [X8]
	058 Call VisualElement.AddToClassList, X0, X1
	059 Move X8, [X22]
	060 Move X0, X19
	061 Move X2, X31
	062 Move X8, [X8+184]
	063 Move X1, [X8+64]
	064 Call VisualElement.AddToClassList, X0, X1
	065 Move X0, [X19+1032]
	066 Compare X0, 0
	067 JumpIfEqual {92}
	068 Move X8, [X21]
	069 Move X20, 0x45C000
	070 Move X2, X31
	071 Move X8, [X8+184]
	072 Move X1, [X8+8]
	073 Move X20, [X20+1384]
	074 Call VisualElement.AddToClassList, X0, X1
	075 Move X1, [X20]
	076 Move X0, X19
	077 Call BaseField`1<RectInt>.get_visualInput, X0
	078 Compare X0, 0
	079 JumpIfEqual {92}
	080 Move X8, [X21]
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X2, X31
	086 Move X8, [X8+184]
	087 Move X1, [X8+16]
	088 Move X30, [X31+48]
	089 Move X23, [X31+56]
	090 Call VisualElement.AddToClassList, X0, X1
	091 Return 
	092 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D08F80 ADRP X9, 0x45B000
	0x03D08F84 LDR X8, [X0 + 0xB8]
	0x03D08F88 LDR X9, [X9 + 0x640]
	0x03D08F8C LDR X23, [X8]
	0x03D08F90 LDR X0, [X9]
	0x03D08F94 BL 0x1C16F10
	0x03D08F98 ADRP X8, 0x45B000
	0x03D08F9C LDR X8, [X8 + 0x658]
	0x03D08FA0 MOV X1, X23
	0x03D08FA4 MOV X3, X31
	0x03D08FA8 MOV X22, X0
	0x03D08FAC LDR X2, [X8]
	0x03D08FB0 BL 0x2D34674
	0x03D08FB4 LDR X0, [X25]
	0x03D08FB8 LDR X8, [X0 + 0xB8]
	0x03D08FBC STR X22, [X8 + 0x18]
	0x03D08FC0 LDR W8, [X0 + 0xE0]
	0x03D08FC4 CBNZ W8, 0x3D08FD0
	0x03D08FC8 BL 0x1C16DFC
	0x03D08FCC LDR X0, [X25]
	0x03D08FD0 LDR X8, [X0 + 0xB8]
	0x03D08FD4 LDR X23, [X8 + 0x20]
	0x03D08FD8 CBNZ X23, 0x3D0902C
	0x03D08FDC LDR W8, [X0 + 0xE0]
	0x03D08FE0 CBNZ W8, 0x3D08FEC
	0x03D08FE4 BL 0x1C16DFC
	0x03D08FE8 LDR X0, [X25]
	0x03D08FEC ADRP X9, 0x45B000
	0x03D08FF0 LDR X8, [X0 + 0xB8]
	0x03D08FF4 LDR X9, [X9 + 0x678]
	0x03D08FF8 LDR X24, [X8]
	0x03D08FFC LDR X0, [X9]
	0x03D09000 BL 0x1C16F10
	0x03D09004 ADRP X8, 0x45A000
	0x03D09008 LDR X8, [X8 + 0x660]
	0x03D0900C MOV X1, X24
	0x03D09010 MOV X3, X31
	0x03D09014 MOV X23, X0
	0x03D09018 LDR X2, [X8]
	0x03D0901C BL 0x2899A10
	0x03D09020 LDR X8, [X25]
	0x03D09024 LDR X8, [X8 + 0xB8]
	0x03D09028 STR X23, [X8 + 0x20]
	0x03D0902C LDR X5, [X26]
	0x03D09030 MOVI V0.2D, 0x0
	0x03D09034 ADD X0, X31, 0x60
	0x03D09038 MOV X1, X21
	0x03D0903C MOV X2, X20
	0x03D09040 MOV X3, X22
	0x03D09044 MOV X4, X23
	0x03D09048 STP V0, V0, [X31 + 0x60]
	0x03D0904C BL 0x2D12A60

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x6E0000
	008 Move X22, 0x45C000
	009 Move X19, 0x45C000
	010 Move X21, 0x415000
	011 Move X20, 0x415000
	012 Move W8, [X23+2124]
	013 Move X22, [X22+1400]
	014 Move X19, [X19+1392]
	015 Move X21, [X21+3768]
	016 Move X20, [X20+3776]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x45C000
	022 Move X0, [X0+1392]
	023 Call 0x1C17CF4
	024 Move X0, 0x45C000
	025 Move X0, [X0+1400]
	026 Call 0x1C17CF4
	027 Move X0, 0x415000
	028 Move X0, [X0+3768]
	029 Call 0x1C17CF4
	030 Move X0, 0x415000
	031 Move X0, [X0+3776]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+2124], W8
	035 Move X8, [X19]
	036 Move X9, [X22]
	037 Move X2, X31
	038 Move X8, [X8+184]
	039 Move [X8], X9
	040 Move X8, [X19]
	041 Move X1, [X21]
	042 Move X8, [X8+184]
	043 Move X0, [X8]
	044 Call String.Concat, X0, X1
	045 Move X8, [X19]
	046 Move X2, X31
	047 Move X8, [X8+184]
	048 Move [X8+8], X0
	049 Move X0, [X8]
	050 Move X1, [X20]
	051 Call String.Concat, X0, X1
	052 Move X8, [X19]
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X8, [X8+184]
	058 Move [X8+16], X0
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return 

