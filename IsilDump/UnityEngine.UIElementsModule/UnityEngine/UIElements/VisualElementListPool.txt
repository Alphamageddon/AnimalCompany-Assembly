Type: UnityEngine.UIElements.VisualElementListPool

Method: System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> Copy(System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> elements)

Disassembly:
	0x03D17348 LDR X0, [X21]
	0x03D1734C STR W31, [X31 + 0xC]
	0x03D17350 LDR W8, [X0 + 0xE0]
	0x03D17354 CBNZ W8, 0x3D17360
	0x03D17358 BL 0x1C16DFC
	0x03D1735C LDR X0, [X21]
	0x03D17360 LDR X8, [X0 + 0xB8]
	0x03D17364 LDR X0, [X8 + 0x8]
	0x03D17368 CBZ X0, 0x3D17478
	0x03D1736C ADRP X8, 0x44C000
	0x03D17370 LDR X8, [X8 + 0xFA0]
	0x03D17374 ADD X2, X31, 0xC
	0x03D17378 MOV X1, X19
	0x03D1737C LDR X3, [X8]
	0x03D17380 BL 0x2AA3A78
	0x03D17384 TBNZ X0, 0x0, 0x3D17464
	0x03D17388 ADRP X8, 0x3DC000
	0x03D1738C LDR X8, [X8 + 0x6C0]
	0x03D17390 LDR X0, [X8]
	0x03D17394 ADRP X8, 0x44C000
	0x03D17398 LDR X8, [X8 + 0xFA8]
	0x03D1739C LDR W9, [X0 + 0xE0]
	0x03D173A0 LDR X20, [X8]
	0x03D173A4 CBNZ W9, 0x3D173AC
	0x03D173A8 BL 0x1C16DFC
	0x03D173AC MOV X0, X20
	0x03D173B0 MOV X1, X31
	0x03D173B4 BL 0x338C698
	0x03D173B8 CBZ X19, 0x3D17478
	0x03D173BC LDR X8, [X19]
	0x03D173C0 MOV X1, X0
	0x03D173C4 MOVZ W2, 0x1
	0x03D173C8 MOV X0, X19
	0x03D173CC LDR X9, [X8 + 0x208]
	0x03D173D0 LDR X3, [X8 + 0x210]
	0x03D173D4 BLR X9
	0x03D173D8 CBZ X0, 0x3D17478
	0x03D173DC LDR W8, [X0 + 0x18]
	0x03D173E0 CMP W8, 0x1
	0x03D173E4 B.LT 0x3D17480
	0x03D173E8 LDR X0, [X0 + 0x20]
	0x03D173EC CBZ X0, 0x3D17478
	0x03D173F0 ADRP X9, 0x44C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6D1000
	006 Move X20, 0x406000
	007 Move W8, [X21+2295]
	008 Move X20, [X20+248]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x44D000
	015 Move X0, [X0+3768]
	016 Call 0x1C17CF4
	017 Move X0, 0x44D000
	018 Move X0, [X0+3776]
	019 Call 0x1C17CF4
	020 Move X0, 0x406000
	021 Move X0, [X0+248]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2295], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X20]
	031 Move X8, [X0+184]
	032 Move X0, [X8]
	033 Compare X0, 0
	034 JumpIfEqual {53}
	035 Move X8, 0x44D000
	036 Move X8, [X8+3776]
	037 Move X1, [X8]
	038 Call 0x249568C, X0
	039 Compare X0, 0
	040 JumpIfEqual {53}
	041 Move X8, 0x44D000
	042 Move X8, [X8+3768]
	043 Move X1, X19
	044 Move X20, X0
	045 Move X2, [X8]
	046 Call List`1<Object>.AddRange, X0, X1
	047 Move X0, X20
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return X0
	053 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> Get(System.Int32 initialCapacity = 0)

Disassembly:
	0x03D173F4 LDR X9, [X9 + 0xFB0]
	0x03D173F8 LDR X8, [X0]
	0x03D173FC LDR X1, [X9]
	0x03D17400 LDRB W10, [X8 + 0x130]
	0x03D17404 LDRB W9, [X1 + 0x130]
	0x03D17408 CMP W10, W9
	0x03D1740C B.CC 0x3D1747C
	0x03D17410 LDR X8, [X8 + 0xC8]
	0x03D17414 ADD X8, X8, X9, 0x3, LSL
	0x03D17418 LDUR X8, [X8 - 0x8]
	0x03D1741C CMP X8, X1
	0x03D17420 B.NE 0x3D1747C
	0x03D17424 LDR W8, [X0 + 0x10]
	0x03D17428 LDR X0, [X21]
	0x03D1742C STR W8, [X31 + 0xC]
	0x03D17430 LDR W8, [X0 + 0xE0]
	0x03D17434 CBNZ W8, 0x3D17440
	0x03D17438 BL 0x1C16DFC
	0x03D1743C LDR X0, [X21]
	0x03D17440 LDR X8, [X0 + 0xB8]
	0x03D17444 LDR X0, [X8 + 0x8]
	0x03D17448 CBZ X0, 0x3D17478
	0x03D1744C ADRP X8, 0x44C000
	0x03D17450 LDR W2, [X31 + 0xC]
	0x03D17454 LDR X8, [X8 + 0xF98]
	0x03D17458 MOV X1, X19
	0x03D1745C LDR X3, [X8]
	0x03D17460 BL 0x2AA201C
	0x03D17464 LDR W0, [X31 + 0xC]
	0x03D17468 LDP X20, X19, [X31 + 0x20]
	0x03D1746C LDP X30, X21, [X31 + 0x10]
	0x03D17470 ADD X31, X31, 0x30
	0x03D17474 RET
	0x03D17478 BL 0x1C16F20
	0x03D1747C BL 0x1C171E0
	0x03D17480 ADRP X0, 0x3E4000
	0x03D17484 LDR X0, [X0 + 0x760]
	0x03D17488 BL 0x1C16D08
	0x03D1748C BL 0x1C16F10
	0x03D17490 MOV X19, X0
	0x03D17494 ADRP X0, 0x44C000
	0x03D17498 LDR X0, [X0 + 0xFB8]
	0x03D1749C BL 0x1C16D08
	0x03D174A0 MOV X20, X0
	0x03D174A4 ADRP X0, 0x44C000
	0x03D174A8 LDR X0, [X0 + 0xFC0]
	0x03D174AC BL 0x1C16D08
	0x03D174B0 MOV X2, X0
	0x03D174B4 MOV X0, X19
	0x03D174B8 MOV X1, X20
	0x03D174BC MOV X3, X31
	0x03D174C0 BL 0x3311888
	0x03D174C4 ADRP X0, 0x44C000
	0x03D174C8 LDR X0, [X0 + 0xFC8]
	0x03D174CC BL 0x1C16D08
	0x03D174D0 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6D1000
	006 Move X20, 0x406000
	007 Move W8, [X21+2296]
	008 Move X20, [X20+248]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x44D000
	015 Move X0, [X0+3784]
	016 Call 0x1C17CF4
	017 Move X0, 0x44D000
	018 Move X0, [X0+3792]
	019 Call 0x1C17CF4
	020 Move X0, 0x44D000
	021 Move X0, [X0+3776]
	022 Call 0x1C17CF4
	023 Move X0, 0x406000
	024 Move X0, [X0+248]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2296], W8
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move X0, [X8]
	036 Compare X0, 0
	037 JumpIfEqual {64}
	038 Move X8, 0x44D000
	039 Move X8, [X8+3776]
	040 Move X1, [X8]
	041 Call 0x249568C, X0
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, X0
	044 Compare X20, 0
	045 JumpIfEqual {64}
	046 Move X8, 0x44D000
	047 Move X8, [X8+3784]
	048 Move X0, X20
	049 Move X1, [X8]
	050 Call List`1<Object>.get_Capacity, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, 0x44D000
	053 Move X8, [X8+3792]
	054 Move X0, X20
	055 Move W1, W19
	056 Move X2, [X8]
	057 Call List`1<Object>.set_Capacity, X0, X1
	058 Move X0, X20
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Return X0
	064 Call 0x1C17F20

Method: System.Void Release(System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> elements)

Disassembly:
	0x03D174D4 MOV X0, X19
	0x03D174D8 BL 0x1C16DEC
	0x03D174DC STR X30, [X31 - 0x40]!
	0x03D174E0 STP X24, X23, [X31 + 0x10]
	0x03D174E4 STP X22, X21, [X31 + 0x20]
	0x03D174E8 STP X20, X19, [X31 + 0x30]
	0x03D174EC ADRP X23, 0x6D0000
	0x03D174F0 ADRP X24, 0x44C000
	0x03D174F4 ADRP X19, 0x44C000
	0x03D174F8 ADRP X20, 0x407000
	0x03D174FC ADRP X22, 0x44C000
	0x03D17500 ADRP X21, 0x44C000
	0x03D17504 LDRB W8, [X23 + 0x906]
	0x03D17508 LDR X24, [X24 + 0xFD0]
	0x03D1750C LDR X19, [X19 + 0xFD8]
	0x03D17510 LDR X20, [X20 + 0xCC0]
	0x03D17514 LDR X22, [X22 + 0xFE0]
	0x03D17518 LDR X21, [X21 + 0xFE8]
	0x03D1751C TBNZ X8, 0x0, 0x3D17564
	0x03D17520 ADRP X0, 0x44C000
	0x03D17524 LDR X0, [X0 + 0xFE8]
	0x03D17528 BL 0x1C16CF4
	0x03D1752C ADRP X0, 0x44C000
	0x03D17530 LDR X0, [X0 + 0xFD8]
	0x03D17534 BL 0x1C16CF4
	0x03D17538 ADRP X0, 0x44C000
	0x03D1753C LDR X0, [X0 + 0xFE0]
	0x03D17540 BL 0x1C16CF4
	0x03D17544 ADRP X0, 0x44C000
	0x03D17548 LDR X0, [X0 + 0xFD0]
	0x03D1754C BL 0x1C16CF4
	0x03D17550 ADRP X0, 0x407000
	0x03D17554 LDR X0, [X0 + 0xCC0]
	0x03D17558 BL 0x1C16CF4
	0x03D1755C MOVZ W8, 0x1
	0x03D17560 STRB W8, [X23 + 0x906]
	0x03D17564 LDR X0, [X24]
	0x03D17568 BL 0x1C16F10
	0x03D1756C LDR X1, [X19]
	0x03D17570 MOV X19, X0
	0x03D17574 BL 0x2AC67D8
	0x03D17578 LDR X8, [X20]
	0x03D1757C LDR X8, [X8 + 0xB8]
	0x03D17580 STR X19, [X8]
	0x03D17584 LDR X0, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6D1000
	005 Move W8, [X20+2297]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x44D000
	012 Move X0, [X0+3800]
	013 Call 0x1C17CF4
	014 Move X0, 0x44D000
	015 Move X0, [X0+3808]
	016 Call 0x1C17CF4
	017 Move X0, 0x406000
	018 Move X0, [X0+248]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2297], W8
	022 Compare X19, 0
	023 JumpIfEqual {55}
	024 Move W2, [X19+24]
	025 Move W8, [X19+28]
	026 Move X20, 0x406000
	027 Move X20, [X20+248]
	028 Add W8, W8, 1
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X19+24], W31
	031 Move [X19+28], W8
	032 Move X0, [X19+16]
	033 Move W1, W31
	034 Move X3, X31
	035 Call Array.Clear, X0, X1, X2
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X0, [X8]
	044 Compare X0, 0
	045 JumpIfEqual {55}
	046 Move X8, 0x44D000
	047 Move X8, [X8+3808]
	048 Move X1, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X2, [X8]
	052 Move X30, [X31+32]
	053 Call 0x24956D8, X0, X1
	054 Return 
	055 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D17588 BL 0x1C16F10
	0x03D1758C LDR X1, [X21]
	0x03D17590 MOV X19, X0
	0x03D17594 BL 0x2AA1784
	0x03D17598 LDR X8, [X20]
	0x03D1759C LDP X22, X21, [X31 + 0x20]
	0x03D175A0 LDP X24, X23, [X31 + 0x10]
	0x03D175A4 LDR X8, [X8 + 0xB8]
	0x03D175A8 STR X19, [X8 + 0x8]
	0x03D175AC LDP X20, X19, [X31 + 0x30]
	0x03D175B0 LDR X30, [X31], #0x40
	0x03D175B4 RET
	0x03D175B8 STR X30, [X31 - 0x20]!
	0x03D175BC STP X20, X19, [X31 + 0x10]
	0x03D175C0 MOV X19, X1
	0x03D175C4 MOV X1, X31
	0x03D175C8 MOV X20, X0
	0x03D175CC STR W31, [X0 + 0x18]
	0x03D175D0 BL 0x33A51F0
	0x03D175D4 STR X19, [X20 + 0x10]
	0x03D175D8 LDP X20, X19, [X31 + 0x10]
	0x03D175DC LDR X30, [X31], #0x20
	0x03D175E0 RET
	0x03D175E4 STR X30, [X31 - 0x20]!
	0x03D175E8 STP X20, X19, [X31 + 0x10]
	0x03D175EC MOV W19, W1
	0x03D175F0 MOV X1, X31
	0x03D175F4 MOV X20, X0
	0x03D175F8 STR W31, [X0 + 0x18]
	0x03D175FC BL 0x33A51F0
	0x03D17600 STR W19, [X20 + 0x18]
	0x03D17604 LDP X20, X19, [X31 + 0x10]
	0x03D17608 LDR X30, [X31], #0x20
	0x03D1760C RET
	0x03D17610 STR X30, [X31 - 0x20]!
	0x03D17614 STP X20, X19, [X31 + 0x10]
	0x03D17618 MOV W19, W1
	0x03D1761C MOV X1, X31
	0x03D17620 MOV X20, X0
	0x03D17624 BL 0x33A51F0
	0x03D17628 STR W19, [X20 + 0x10]
	0x03D1762C LDP X20, X19, [X31 + 0x10]
	0x03D17630 LDR X30, [X31], #0x20
	0x03D17634 RET
	0x03D17638 STR X30, [X31 - 0x20]!
	0x03D1763C STP X20, X19, [X31 + 0x10]
	0x03D17640 ADRP X20, 0x6D0000
	0x03D17644 ADRP X19, 0x44C000
	0x03D17648 LDRB W8, [X20 + 0x907]
	0x03D1764C LDR X19, [X19 + 0xFF0]
	0x03D17650 TBNZ X8, 0x0, 0x3D17668
	0x03D17654 ADRP X0, 0x44C000
	0x03D17658 LDR X0, [X0 + 0xFF0]
	0x03D1765C BL 0x1C16CF4
	0x03D17660 MOVZ W8, 0x1
	0x03D17664 STRB W8, [X20 + 0x907]
	0x03D17668 LDR X0, [X19]
	0x03D1766C LDR W8, [X0 + 0xE0]
	0x03D17670 CBNZ W8, 0x3D1767C
	0x03D17674 BL 0x1C16DFC
	0x03D17678 LDR X0, [X19]
	0x03D1767C LDR X8, [X0 + 0xB8]
	0x03D17680 LDP X20, X19, [X31 + 0x10]
	0x03D17684 LDR X0, [X8]
	0x03D17688 LDR X30, [X31], #0x20
	0x03D1768C RET
	0x03D17690 STR X30, [X31 - 0x20]!
	0x03D17694 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x6D1000
	009 Move X19, 0x44D000
	010 Move W8, [X20+2298]
	011 Move X19, [X19+3816]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x44D000
	017 Move X0, [X0+3824]
	018 Call 0x1C17CF4
	019 Move X0, 0x44D000
	020 Move X0, [X0+3832]
	021 Call 0x1C17CF4
	022 Move X0, 0x44D000
	023 Move X0, [X0+3840]
	024 Call 0x1C17CF4
	025 Move X0, 0x44D000
	026 Move X0, [X0+3848]
	027 Call 0x1C17CF4
	028 Move X0, 0x44D000
	029 Move X0, [X0+3816]
	030 Call 0x1C17CF4
	031 Move X0, 0x406000
	032 Move X0, [X0+248]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+2298], W8
	036 Move X0, [X19]
	037 Move X24, 0x44D000
	038 Move X20, 0x44D000
	039 Move X23, 0x44D000
	040 Move X22, 0x44D000
	041 Move X21, 0x406000
	042 Move X24, [X24+3824]
	043 Move W8, [X0+224]
	044 Move X20, [X20+3848]
	045 Move X23, [X23+3840]
	046 Move X22, [X22+3832]
	047 Move X21, [X21+248]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X19]
	052 Move X8, [X0+184]
	053 Move X0, [X24]
	054 Move X19, [X8]
	055 Call 0x1C17F10
	056 Move X2, [X20]
	057 Move X1, X19
	058 Move X3, X31
	059 Move X20, X0
	060 Call Func`1<Object>..ctor, X0, X1, X2
	061 Move X0, [X23]
	062 Call 0x1C17F10
	063 Move X3, [X22]
	064 Move W2, 20
	065 Move X1, X20
	066 Move X19, X0
	067 Call 0x24954D4, X0, X1, X2
	068 Move X8, [X21]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X24, [X31+16]
	072 Move X23, [X31+24]
	073 Move X8, [X8+184]
	074 Move [X8], X19
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X30, [X31+64]
	078 Return 

