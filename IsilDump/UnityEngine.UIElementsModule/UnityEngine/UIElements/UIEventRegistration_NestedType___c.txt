Type: UnityEngine.UIElements.UIEventRegistration/<>c

Method: System.Void .cctor()

Disassembly:
	0x03E19328 LDR W8, [X0 + 0xE0]
	0x03E1932C CBNZ W8, 0x3E19338
	0x03E19330 BL 0x1C16DFC
	0x03E19334 LDR X0, [X22]
	0x03E19338 LDR X8, [X20]
	0x03E1933C LDR X9, [X0 + 0xB8]
	0x03E19340 ADRP X23, 0x305000
	0x03E19344 LDR W10, [X8 + 0xE0]
	0x03E19348 LDR W20, [X9 + 0x8]
	0x03E1934C LDR X23, [X23 + 0xBD0]
	0x03E19350 CBNZ W10, 0x3E1935C
	0x03E19354 MOV X0, X8
	0x03E19358 BL 0x1C16DFC
	0x03E1935C MOV W0, W20
	0x03E19360 MOV W1, W31
	0x03E19364 MOV X2, X31
	0x03E19368 BL 0x3C6C17C
	0x03E1936C LDR X0, [X23]
	0x03E19370 LDR W8, [X0 + 0xE0]
	0x03E19374 CBNZ W8, 0x3E1937C
	0x03E19378 BL 0x1C16DFC
	0x03E1937C MOV X0, X31
	0x03E19380 BL 0x3C6CFDC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x5D0000
	005 Move X20, 0x352000
	006 Move W8, [X19+976]
	007 Move X20, [X20+1872]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x352000
	013 Move X0, [X0+1872]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+976], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03E19384 LDR X0, [X21]
	0x03E19388 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <.cctor>b__1_0()

Disassembly:
	0x03E1938C CBNZ W8, 0x3E19398
	0x03E19390 BL 0x1C16DFC
	0x03E19394 LDR X0, [X21]
	0x03E19398 LDR X8, [X0 + 0xB8]
	0x03E1939C LDR X8, [X8]
	0x03E193A0 CBZ X8, 0x3E19458
	0x03E193A4 MOV X0, X31
	0x03E193A8 BL 0x3C63934
	0x03E193AC CBZ X19, 0x3E19458
	0x03E193B0 MOV X1, X0
	0x03E193B4 MOV X0, X19
	0x03E193B8 MOV X2, X31
	0x03E193BC BL 0x3C637B4
	0x03E193C0 LDR X0, [X21]
	0x03E193C4 LDR W8, [X0 + 0xE0]
	0x03E193C8 CBNZ W8, 0x3E193D4
	0x03E193CC BL 0x1C16DFC
	0x03E193D0 LDR X0, [X21]
	0x03E193D4 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x5D0000
	005 Move X20, 0x352000
	006 Move W8, [X19+977]
	007 Move X20, [X20+1800]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x352000
	013 Move X0, [X0+1800]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+977], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Call UIEventRegistration.TakeCapture
	026 Return 

Method: System.Void <.cctor>b__1_1()

Disassembly:
	0x03E193D8 LDR X8, [X8]
	0x03E193DC CBZ X8, 0x3E19458
	0x03E193E0 LDR W8, [X8 + 0x18]
	0x03E193E4 CMP W8, 0x1
	0x03E193E8 B.LT 0x3E19444
	0x03E193EC LDR X0, [X22]
	0x03E193F0 LDR W8, [X0 + 0xE0]
	0x03E193F4 CBNZ W8, 0x3E193FC
	0x03E193F8 BL 0x1C16DFC
	0x03E193FC MOV X0, X31
	0x03E19400 BL 0x3C75E18
	0x03E19404 LDR X0, [X21]
	0x03E19408 LDR W8, [X0 + 0xE0]
	0x03E1940C CBNZ W8, 0x3E19418
	0x03E19410 BL 0x1C16DFC
	0x03E19414 LDR X0, [X21]
	0x03E19418 LDR X8, [X0 + 0xB8]
	0x03E1941C LDR X0, [X8]
	0x03E19420 CBZ X0, 0x3E19458

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x5D0000
	005 Move X20, 0x352000
	006 Move W8, [X19+978]
	007 Move X20, [X20+1800]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x352000
	013 Move X0, [X0+1800]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+978], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Call UIEventRegistration.ReleaseCapture
	026 Return 

Method: System.Boolean <.cctor>b__1_2(System.Int32 i, System.IntPtr ptr)

Disassembly:
	0x03E19424 ADRP X8, 0x351000
	0x03E19428 LDR X8, [X8 + 0x798]
	0x03E1942C LDP X20, X19, [X31 + 0x30]
	0x03E19430 LDP X22, X21, [X31 + 0x20]
	0x03E19434 LDP X30, X23, [X31 + 0x10]
	0x03E19438 LDR X1, [X8]
	0x03E1943C LDP D9, D8, [X31], #0x40
	0x03E19440 B 0x26022C0
	0x03E19444 LDP X20, X19, [X31 + 0x30]
	0x03E19448 LDP X22, X21, [X31 + 0x20]
	0x03E1944C LDP X30, X23, [X31 + 0x10]
	0x03E19450 LDP D9, D8, [X31], #0x40
	0x03E19454 RET
	0x03E19458 BL 0x1C16F20
	0x03E1945C STR X30, [X31 - 0x20]!
	0x03E19460 STP X20, X19, [X31 + 0x10]
	0x03E19464 ADRP X20, 0x5CF000
	0x03E19468 LDRB W8, [X20 + 0x3E2]
	0x03E1946C MOV X19, X0
	0x03E19470 TBNZ X8, 0x0, 0x3E19488
	0x03E19474 ADRP X0, 0x303000
	0x03E19478 LDR X0, [X0 + 0xE98]
	0x03E1947C BL 0x1C16CF4
	0x03E19480 MOVZ W8, 0x1
	0x03E19484 STRB W8, [X20 + 0x3E2]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5D0000
	007 Move X22, 0x352000
	008 Move W8, [X21+979]
	009 Move X22, [X22+1800]
	010 Move X19, X2
	011 Move W20, W1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x352000
	017 Move X0, [X0+1800]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+979], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call UIEventRegistration.ProcessEvent, X0, X1
	034 Return X0

Method: System.Void <.cctor>b__1_3()

Disassembly:
	0x03E19488 CBZ X19, 0x3E194CC
	0x03E1948C ADRP X20, 0x303000
	0x03E19490 LDR X20, [X20 + 0xE98]
	0x03E19494 MOV X0, X19
	0x03E19498 MOV X1, X31
	0x03E1949C BL 0x3C62C04
	0x03E194A0 LDR X8, [X20]
	0x03E194A4 MOV W20, W0
	0x03E194A8 LDR W9, [X8 + 0xE0]
	0x03E194AC CBNZ W9, 0x3E194B8
	0x03E194B0 MOV X0, X8
	0x03E194B4 BL 0x1C16DFC
	0x03E194B8 MOV X0, X19
	0x03E194BC MOV W1, W20
	0x03E194C0 LDP X20, X19, [X31 + 0x10]
	0x03E194C4 LDR X30, [X31], #0x20
	0x03E194C8 B 0x3E14CB8
	0x03E194CC BL 0x1C16F20
	0x03E194D0 SUB X31, X31, 0x50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x5D0000
	005 Move X20, 0x352000
	006 Move W8, [X19+980]
	007 Move X20, [X20+1800]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x352000
	013 Move X0, [X0+1800]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+980], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Call UIEventRegistration.CleanupRoots
	026 Return 

Method: System.Boolean <.cctor>b__1_4(System.Exception exception)

Disassembly:
	0x03E194D4 STP X30, X21, [X31 + 0x30]
	0x03E194D8 STP X20, X19, [X31 + 0x40]
	0x03E194DC ADRP X21, 0x5CF000
	0x03E194E0 ADRP X20, 0x303000
	0x03E194E4 MOV X19, X8
	0x03E194E8 LDRB W8, [X21 + 0x3E6]
	0x03E194EC LDR X20, [X20 + 0xE98]
	0x03E194F0 TBNZ X8, 0x0, 0x3E19514
	0x03E194F4 ADRP X0, 0x351000
	0x03E194F8 LDR X0, [X0 + 0x7A8]
	0x03E194FC BL 0x1C16CF4
	0x03E19500 ADRP X0, 0x303000
	0x03E19504 LDR X0, [X0 + 0xE98]
	0x03E19508 BL 0x1C16CF4
	0x03E1950C MOVZ W8, 0x1
	0x03E19510 STRB W8, [X21 + 0x3E6]
	0x03E19514 LDR X0, [X20]
	0x03E19518 MOVI V0.2D, 0x0
	0x03E1951C STR X31, [X31 + 0x20]
	0x03E19520 STP V0, V0, [X31]
	0x03E19524 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5D0000
	006 Move X21, 0x352000
	007 Move W8, [X20+981]
	008 Move X21, [X21+1800]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x352000
	015 Move X0, [X0+1800]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+981], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call UIEventRegistration.EndContainerGUIFromException, X0
	030 Return X0

Method: System.Void <.cctor>b__1_5()

Disassembly:
	0x03E19528 CBNZ W8, 0x3E19534
	0x03E1952C BL 0x1C16DFC
	0x03E19530 LDR X0, [X20]
	0x03E19534 LDR X8, [X0 + 0xB8]
	0x03E19538 LDR X0, [X8 + 0x8]
	0x03E1953C CBZ X0, 0x3E19574
	0x03E19540 ADRP X8, 0x351000
	0x03E19544 LDR X8, [X8 + 0x7A8]
	0x03E19548 LDR X1, [X8]
	0x03E1954C ADD X8, X31, 0x0
	0x03E19550 BL 0x2A13AB4
	0x03E19554 LDR X8, [X31 + 0x20]
	0x03E19558 LDP V1, V0, [X31]
	0x03E1955C LDP X30, X21, [X31 + 0x30]
	0x03E19560 STR X8, [X19 + 0x20]
	0x03E19564 STP V1, V0, [X19]
	0x03E19568 LDP X20, X19, [X31 + 0x40]
	0x03E1956C ADD X31, X31, 0x50
	0x03E19570 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x5D0000
	005 Move X20, 0x352000
	006 Move W8, [X19+982]
	007 Move X20, [X20+1800]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x352000
	013 Move X0, [X0+1800]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+982], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Call UIEventRegistration.MakeCurrentIMGUIContainerDirty
	026 Return 

