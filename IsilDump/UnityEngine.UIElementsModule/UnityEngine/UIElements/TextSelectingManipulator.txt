Type: UnityEngine.UIElements.TextSelectingManipulator

Method: System.Boolean get_isClicking()

Disassembly:
	0x03E0C2B0 RET
	0x03E0C2B4 LDP S2, S3, [X20 + 0x28]

ISIL:
	001 Move W0, [X0+49]
	002 Return X0

Method: System.Void set_isClicking(System.Boolean value)

Disassembly:
	0x03E0C2B8 FSUB S2, S2, S0
	0x03E0C2BC FSUB S3, S3, S1
	0x03E0C2C0 FMUL S2, S2, S2
	0x03E0C2C4 FMUL S3, S3, S3
	0x03E0C2C8 FADD S2, S2, S3
	0x03E0C2CC FMOV S3, 16

ISIL:
	001 Move W9, [X0+49]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move [X0+49], W8
	005 Return 

Method: System.Void .ctor(UnityEngine.UIElements.TextElement textElement)

Disassembly:
	0x03E0C2D0 FCMP S2, S3
	0x03E0C2D4 CSET W8, GE
	0x03E0C2D8 STRB W8, [X20 + 0x30]
	0x03E0C2DC B.LT 0x3E0C40C
	0x03E0C2E0 LDR X0, [X20 + 0x10]
	0x03E0C2E4 CBZ X0, 0x3E0C424
	0x03E0C2E8 MOV X1, X31
	0x03E0C2EC BL 0x3C84044
	0x03E0C2F0 LDR X21, [X20 + 0x20]
	0x03E0C2F4 CBZ X21, 0x3E0C424
	0x03E0C2F8 ADRP X10, 0x311000
	0x03E0C2FC LDR X8, [X21]
	0x03E0C300 LDR X10, [X10 + 0x630]
	0x03E0C304 LDRH W9, [X8 + 0x12E]
	0x03E0C308 LDR X1, [X10]
	0x03E0C30C CBZ X9, 0x3E0C330
	0x03E0C310 LDR X10, [X8 + 0xB0]
	0x03E0C314 ADD X10, X10, 0x8
	0x03E0C318 LDUR X11, [X10 - 0x8]
	0x03E0C31C CMP X11, X1
	0x03E0C320 B.EQ 0x3E0C340
	0x03E0C324 SUBS X9, X9, 0x1
	0x03E0C328 ADD X10, X10, 0x10
	0x03E0C32C B.NE 0x3E0C318
	0x03E0C330 MOVZ W2, 0xC
	0x03E0C334 MOV X0, X21
	0x03E0C338 BL 0x1C5C788
	0x03E0C33C B 0x3E0C350
	0x03E0C340 LDR W9, [X10]
	0x03E0C344 ADD W9, W9, 0xC
	0x03E0C348 ADD X8, X8, W9, 0x4, SXTW
	0x03E0C34C ADD X0, X8, 0x138
	0x03E0C350 LDP X8, X1, [X0]
	0x03E0C354 MOV X0, X21
	0x03E0C358 BLR X8
	0x03E0C35C CBZ X0, 0x3E0C378
	0x03E0C360 LDR X8, [X0 + 0x40]
	0x03E0C364 LDR X9, [X0 + 0x18]
	0x03E0C368 LDR X2, [X0 + 0x28]
	0x03E0C36C MOV W1, W31
	0x03E0C370 MOV X0, X8
	0x03E0C374 BLR X9
	0x03E0C378 LDR X21, [X20 + 0x20]
	0x03E0C37C CBZ X21, 0x3E0C424
	0x03E0C380 ADRP X10, 0x311000
	0x03E0C384 LDR X8, [X21]
	0x03E0C388 LDR X10, [X10 + 0x628]
	0x03E0C38C LDRH W9, [X8 + 0x12E]
	0x03E0C390 LDR X1, [X10]
	0x03E0C394 CBZ X9, 0x3E0C3B8
	0x03E0C398 LDR X10, [X8 + 0xB0]
	0x03E0C39C ADD X10, X10, 0x8
	0x03E0C3A0 LDUR X11, [X10 - 0x8]
	0x03E0C3A4 CMP X11, X1
	0x03E0C3A8 B.EQ 0x3E0C3C8
	0x03E0C3AC SUBS X9, X9, 0x1
	0x03E0C3B0 ADD X10, X10, 0x10
	0x03E0C3B4 B.NE 0x3E0C3A0
	0x03E0C3B8 MOVZ W2, 0x11
	0x03E0C3BC MOV X0, X21
	0x03E0C3C0 BL 0x1C5C788
	0x03E0C3C4 B 0x3E0C3D8
	0x03E0C3C8 LDR W9, [X10]
	0x03E0C3CC ADD W9, W9, 0x11
	0x03E0C3D0 ADD X8, X8, W9, 0x4, SXTW
	0x03E0C3D4 ADD X0, X8, 0x138
	0x03E0C3D8 LDP X8, X1, [X0]
	0x03E0C3DC MOV X0, X21
	0x03E0C3E0 BLR X8
	0x03E0C3E4 TBZ X0, 0x0, 0x3E0C400
	0x03E0C3E8 LDR X0, [X20 + 0x10]
	0x03E0C3EC CBZ X0, 0x3E0C424
	0x03E0C3F0 MOV X1, X31
	0x03E0C3F4 BL 0x3C7B450
	0x03E0C3F8 EOR W8, W0, 0x1
	0x03E0C3FC B 0x3E0C404
	0x03E0C400 MOV W8, W31
	0x03E0C404 AND W8, W8, 0x1
	0x03E0C408 STRB W8, [X20 + 0x18]
	0x03E0C40C MOV X0, X19
	0x03E0C410 LDP X20, X19, [X31 + 0x20]
	0x03E0C414 LDP X30, X21, [X31 + 0x10]
	0x03E0C418 MOV X1, X31
	0x03E0C41C LDP D9, D8, [X31], #0x30
	0x03E0C420 B 0x3D9D950
	0x03E0C424 BL 0x1C16F20
	0x03E0C428 STP X30, X21, [X31 - 0x20]!
	0x03E0C42C STP X20, X19, [X31 + 0x10]
	0x03E0C430 ADRP X21, 0x5DC000
	0x03E0C434 LDRB W8, [X21 + 0x359]
	0x03E0C438 MOV X19, X1
	0x03E0C43C MOV X20, X0
	0x03E0C440 TBNZ X8, 0x0, 0x3E0C464
	0x03E0C444 ADRP X0, 0x35E000
	0x03E0C448 LDR X0, [X0 + 0x458]
	0x03E0C44C BL 0x1C16CF4
	0x03E0C450 ADRP X0, 0x312000
	0x03E0C454 LDR X0, [X0 + 0xD20]
	0x03E0C458 BL 0x1C16CF4
	0x03E0C45C MOVZ W8, 0x1
	0x03E0C460 STRB W8, [X21 + 0x359]
	0x03E0C464 CBZ X19, 0x3E0C4E0
	0x03E0C468 LDR W8, [X19 + 0xAC]
	0x03E0C46C CBZ W8, 0x3E0C47C
	0x03E0C470 LDP X20, X19, [X31 + 0x10]
	0x03E0C474 LDP X30, X21, [X31], #0x20
	0x03E0C478 RET
	0x03E0C47C LDRB W8, [X20 + 0x31]
	0x03E0C480 CBZ W8, 0x3E0C470
	0x03E0C484 LDRB W8, [X20 + 0x18]
	0x03E0C488 CBZ W8, 0x3E0C4B0
	0x03E0C48C LDR X0, [X20 + 0x10]
	0x03E0C490 CBZ X0, 0x3E0C4E0
	0x03E0C494 MOV X1, X31
	0x03E0C498 BL 0x3C837BC
	0x03E0C49C LDRB W8, [X20 + 0x31]
	0x03E0C4A0 STRB W31, [X20 + 0x18]
	0x03E0C4A4 STRB W31, [X20 + 0x30]
	0x03E0C4A8 CBNZ W8, 0x3E0C4B8
	0x03E0C4AC B 0x3E0C4BC
	0x03E0C4B0 STRB W31, [X20 + 0x18]
	0x03E0C4B4 STRB W31, [X20 + 0x30]
	0x03E0C4B8 STRB W31, [X20 + 0x31]
	0x03E0C4BC LDR X0, [X20 + 0x20]
	0x03E0C4C0 LDR W1, [X19 + 0x9C]
	0x03E0C4C4 MOV X2, X31
	0x03E0C4C8 BL 0x3DBAE34
	0x03E0C4CC MOV X0, X19
	0x03E0C4D0 LDP X20, X19, [X31 + 0x10]
	0x03E0C4D4 MOV X1, X31
	0x03E0C4D8 LDP X30, X21, [X31], #0x20
	0x03E0C4DC B 0x3D9D950
	0x03E0C4E0 BL 0x1C16F20
	0x03E0C4E4 STP X30, X21, [X31 - 0x20]!
	0x03E0C4E8 STP X20, X19, [X31 + 0x10]
	0x03E0C4EC ADRP X21, 0x5DC000
	0x03E0C4F0 LDRB W8, [X21 + 0x35A]
	0x03E0C4F4 MOV X19, X1
	0x03E0C4F8 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x5DD000
	008 Move X21, 0x34E000
	009 Move W8, [X22+849]
	010 Move X21, [X21+32]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x2E9000
	018 Move X0, [X0+3696]
	019 Call 0x1C17CF4
	020 Move X0, 0x34E000
	021 Move X0, [X0+32]
	022 Call 0x1C17CF4
	023 Move X0, 0x35F000
	024 Move X0, [X0+1080]
	025 Call 0x1C17CF4
	026 Move X0, 0x35F000
	027 Move X0, [X0+1088]
	028 Call 0x1C17CF4
	029 Move X0, 0x35F000
	030 Move X0, [X0+1096]
	031 Call 0x1C17CF4
	032 Move X0, 0x355000
	033 Move X0, [X0+1984]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+849], W8
	037 Move [X19+56], X31
	038 Move X0, [X21]
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X21, X0
	042 Call Event..ctor, X0
	043 Move X0, X19
	044 Move X1, X31
	045 Move [X19+64], X21
	046 Call Object..ctor, X0
	047 Move [X19+32], X20
	048 Compare X20, 0
	049 JumpIfEqual {147}
	050 Move X8, 0x355000
	051 Move X8, [X8+1984]
	052 Move X21, [X20+984]
	053 Move X0, [X8]
	054 Call 0x1C17F10
	055 Move X1, X21
	056 Move X2, X31
	057 Move X20, X0
	058 Call TextSelectingUtilities..ctor, X0, X1
	059 Move [X19+16], X20
	060 Compare X20, 0
	061 JumpIfEqual {147}
	062 Move X23, 0x2E9000
	063 Move X23, [X23+3696]
	064 Move X22, 0x35F000
	065 Move X21, [X20+64]
	066 Move X0, [X23]
	067 Move X22, [X22+1080]
	068 Call 0x1C17F10
	069 Move X2, [X22]
	070 Move X1, X19
	071 Move X3, X31
	072 Move X22, X0
	073 Call Action..ctor, X0, X1, X2
	074 Move X0, X21
	075 Move X1, X22
	076 Move X2, X31
	077 Call Delegate.Combine, X0, X1
	078 Move X1, [X23]
	079 Compare X0, 0
	080 JumpIfEqual {86}
	081 Move X8, [X0]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move [X20+64], X0
	084 Move X8, [X0]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move [X20+64], X0
	087 Move X22, [X19+16]
	088 Compare X22, 0
	089 JumpIfEqual {147}
	090 Move X21, 0x35F000
	091 Move X20, [X22+72]
	092 Move X21, [X21+1096]
	093 Move X0, X1
	094 Call 0x1C17F10
	095 Move X2, [X21]
	096 Move X1, X19
	097 Move X3, X31
	098 Move X21, X0
	099 Call Action..ctor, X0, X1, X2
	100 Move X0, X20
	101 Move X1, X21
	102 Move X2, X31
	103 Call Delegate.Combine, X0, X1
	104 Move X1, [X23]
	105 Compare X0, 0
	106 JumpIfEqual {112}
	107 Move X8, [X0]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X22+72], X0
	110 Move X8, [X0]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move [X22+72], X0
	113 Move X22, [X19+16]
	114 Compare X22, 0
	115 JumpIfEqual {147}
	116 Move X21, 0x35F000
	117 Move X20, [X22+80]
	118 Move X21, [X21+1088]
	119 Move X0, X1
	120 Call 0x1C17F10
	121 Move X2, [X21]
	122 Move X1, X19
	123 Move X3, X31
	124 Move X21, X0
	125 Call Action..ctor, X0, X1, X2
	126 Move X0, X20
	127 Move X1, X21
	128 Move X2, X31
	129 Call Delegate.Combine, X0, X1
	130 Compare X0, 0
	131 JumpIfEqual {139}
	132 Move X1, [X23]
	133 Move X8, [X0]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move [X22+80], X0
	136 Move X8, [X0]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Call 0x1C181E0
	139 Move [X22+80], X0
	140 Move X20, [X31+32]
	141 Move X19, [X31+40]
	142 Move X22, [X31+16]
	143 Move X21, [X31+24]
	144 Move X30, [X31+48]
	145 Move X23, [X31+56]
	146 Return 
	147 Call 0x1C17F20

Method: System.Int32 get_cursorIndex()

Disassembly:
	0x03E0C4FC TBNZ X8, 0x0, 0x3E0C55C
	0x03E0C500 ADRP X0, 0x35A000
	0x03E0C504 LDR X0, [X0 + 0x9B8]
	0x03E0C508 BL 0x1C16CF4
	0x03E0C50C ADRP X0, 0x34D000
	0x03E0C510 LDR X0, [X0 + 0x188]

ISIL:
	001 Move X0, [X0+16]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call TextSelectingUtilities.get_cursorIndex, X0
	006 Return X0
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W0, TEMP
	010 Return X0

Method: System.Void set_cursorIndex(System.Int32 value)

Disassembly:
	0x03E0C514 BL 0x1C16CF4
	0x03E0C518 ADRP X0, 0x35A000
	0x03E0C51C LDR X0, [X0 + 0x9C0]
	0x03E0C520 BL 0x1C16CF4
	0x03E0C524 ADRP X0, 0x35A000
	0x03E0C528 LDR X0, [X0 + 0x9C8]
	0x03E0C52C BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call TextSelectingUtilities.set_cursorIndex, X0, X1
	008 Return 
	009 Call 0x1C17F20

Method: System.Int32 get_selectIndex()

Disassembly:
	0x03E0C530 ADRP X0, 0x33B000
	0x03E0C534 LDR X0, [X0 + 0x670]
	0x03E0C538 BL 0x1C16CF4
	0x03E0C53C ADRP X0, 0x35A000
	0x03E0C540 LDR X0, [X0 + 0x9D0]
	0x03E0C544 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+16]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call TextSelectingUtilities.get_selectIndex, X0
	006 Return X0
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W0, TEMP
	010 Return X0

Method: System.Void set_selectIndex(System.Int32 value)

Disassembly:
	0x03E0C548 ADRP X0, 0x35A000
	0x03E0C54C LDR X0, [X0 + 0x9D8]
	0x03E0C550 BL 0x1C16CF4
	0x03E0C554 MOVZ W8, 0x1
	0x03E0C558 STRB W8, [X21 + 0x35A]
	0x03E0C55C LDR X0, [X20 + 0x20]
	0x03E0C560 CBZ X0, 0x3E0C660

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call TextSelectingUtilities.set_selectIndex, X0, X1
	008 Return 
	009 Call 0x1C17F20

Method: System.Void OnRevealCursor()

Disassembly:
	0x03E0C564 BL 0x3E0B864
	0x03E0C568 TBZ X0, 0x0, 0x3E0C5F4
	0x03E0C56C CBZ X19, 0x3E0C660
	0x03E0C570 ADRP X8, 0x35A000
	0x03E0C574 LDR X8, [X8 + 0x9B8]
	0x03E0C578 MOV X0, X19
	0x03E0C57C LDR X1, [X8]
	0x03E0C580 BL 0x2900038

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move W1, 2048
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call VisualElement.IncrementVersion, X0, X1
	009 Return 
	010 Call 0x1C17F20

Method: System.Void OnSelectIndexChange()

Disassembly:
	0x03E0C584 ADRP X8, 0x35A000
	0x03E0C588 LDR X8, [X8 + 0x9D8]
	0x03E0C58C MOV X2, X31
	0x03E0C590 MOV X21, X0
	0x03E0C594 LDR X1, [X8]
	0x03E0C598 BL 0x321BA08
	0x03E0C59C TBNZ X0, 0x0, 0x3E0C5F4
	0x03E0C5A0 ADRP X8, 0x35A000
	0x03E0C5A4 LDR X8, [X8 + 0x9D0]
	0x03E0C5A8 MOV X0, X21
	0x03E0C5AC MOV X2, X31
	0x03E0C5B0 LDR X1, [X8]
	0x03E0C5B4 BL 0x321BA08
	0x03E0C5B8 TBNZ X0, 0x0, 0x3E0C5F4
	0x03E0C5BC ADRP X8, 0x33B000
	0x03E0C5C0 LDR X8, [X8 + 0x670]
	0x03E0C5C4 MOV X0, X21
	0x03E0C5C8 MOV X2, X31
	0x03E0C5CC LDR X1, [X8]
	0x03E0C5D0 BL 0x321BA08
	0x03E0C5D4 TBNZ X0, 0x0, 0x3E0C5F4
	0x03E0C5D8 ADRP X8, 0x35A000
	0x03E0C5DC LDR X8, [X8 + 0x9C0]
	0x03E0C5E0 MOV X0, X21
	0x03E0C5E4 MOV X2, X31
	0x03E0C5E8 LDR X1, [X8]
	0x03E0C5EC BL 0x321BA08
	0x03E0C5F0 TBZ X0, 0x0, 0x3E0C600
	0x03E0C5F4 LDP X20, X19, [X31 + 0x10]
	0x03E0C5F8 LDP X30, X21, [X31], #0x20
	0x03E0C5FC RET
	0x03E0C600 ADRP X8, 0x35A000
	0x03E0C604 LDR X8, [X8 + 0x9C8]
	0x03E0C608 MOV X0, X21
	0x03E0C60C MOV X2, X31
	0x03E0C610 LDR X1, [X8]
	0x03E0C614 BL 0x321BA08
	0x03E0C618 TBZ X0, 0x0, 0x3E0C634
	0x03E0C61C LDR X0, [X20 + 0x10]
	0x03E0C620 CBZ X0, 0x3E0C660
	0x03E0C624 MOV X1, X31
	0x03E0C628 BL 0x3C7B450
	0x03E0C62C TBZ X0, 0x0, 0x3E0C5F4
	0x03E0C630 B 0x3E0C64C
	0x03E0C634 ADRP X8, 0x34D000
	0x03E0C638 LDR X8, [X8 + 0x188]
	0x03E0C63C MOV X0, X21
	0x03E0C640 MOV X2, X31
	0x03E0C644 LDR X1, [X8]
	0x03E0C648 BL 0x321BA08
	0x03E0C64C MOV X0, X19
	0x03E0C650 LDP X20, X19, [X31 + 0x10]
	0x03E0C654 MOV X1, X31
	0x03E0C658 LDP X30, X21, [X31], #0x20
	0x03E0C65C B 0x3D9D950
	0x03E0C660 BL 0x1C16F20
	0x03E0C664 STP X30, X21, [X31 - 0x20]!
	0x03E0C668 STP X20, X19, [X31 + 0x10]
	0x03E0C66C ADRP X21, 0x5DC000
	0x03E0C670 LDRB W8, [X21 + 0x35B]
	0x03E0C674 MOV X19, X1
	0x03E0C678 MOV X20, X0
	0x03E0C67C TBNZ X8, 0x0, 0x3E0C6B8
	0x03E0C680 ADRP X0, 0x35A000
	0x03E0C684 LDR X0, [X0 + 0x9E0]
	0x03E0C688 BL 0x1C16CF4
	0x03E0C68C ADRP X0, 0x35A000
	0x03E0C690 LDR X0, [X0 + 0x9E8]
	0x03E0C694 BL 0x1C16CF4
	0x03E0C698 ADRP X0, 0x34D000
	0x03E0C69C LDR X0, [X0 + 0x188]
	0x03E0C6A0 BL 0x1C16CF4
	0x03E0C6A4 ADRP X0, 0x35A000
	0x03E0C6A8 LDR X0, [X0 + 0x9C8]
	0x03E0C6AC BL 0x1C16CF4
	0x03E0C6B0 MOVZ W8, 0x1
	0x03E0C6B4 STRB W8, [X21 + 0x35B]
	0x03E0C6B8 LDR X0, [X20 + 0x20]
	0x03E0C6BC CBZ X0, 0x3E0C778
	0x03E0C6C0 BL 0x3E0B864
	0x03E0C6C4 TBZ X0, 0x0, 0x3E0C76C
	0x03E0C6C8 CBZ X19, 0x3E0C778

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5DD000
	005 Move W8, [X20+850]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x312000
	012 Move X0, [X0+1584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+850], W8
	016 Move X0, [X19+32]
	017 Compare X0, 0
	018 JumpIfEqual {100}
	019 Move W1, 2048
	020 Move X2, X31
	021 Call VisualElement.IncrementVersion, X0, X1
	022 Move X0, [X19+16]
	023 Compare X0, 0
	024 JumpIfEqual {100}
	025 Move X1, X31
	026 Call TextSelectingUtilities.get_hasSelection, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {52}
	031 Move X0, [X19+32]
	032 Compare X0, 0
	033 JumpIfEqual {100}
	034 Move X8, [X0]
	035 Move X9, [X8+552]
	036 Move X1, [X8+560]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Compare X0, 0
	039 JumpIfEqual {52}
	040 Move X0, [X19+32]
	041 Compare X0, 0
	042 JumpIfEqual {100}
	043 Move X8, [X0]
	044 Move X9, [X8+552]
	045 Move X1, [X8+560]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Compare X0, 0
	048 JumpIfEqual {100}
	049 Move X1, [X19+32]
	050 Move X2, X31
	051 Call FocusController.set_selectedTextElement, X0, X1
	052 Move X8, [X19+16]
	053 Compare X8, 0
	054 JumpIfEqual {100}
	055 Move W8, [X8+48]
	056 Compare W8, 0
	057 JumpIfEqual {96}
	058 Move X19, [X19+32]
	059 Compare X19, 0
	060 JumpIfEqual {100}
	061 Move X10, 0x312000
	062 Move X8, [X19]
	063 Move X10, [X10+1584]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move X1, [X10]
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move W2, 12
	075 Move X0, X19
	076 Call 0x1C5D788
	077 Move W9, [X10]
	078 Add W9, W9, 12
	079 Add X8, X8, W9
	080 Add X0, X8, 312
	081 Move X8, [X0]
	082 Move X1, [X0+8]
	083 Move X0, X19
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Compare X0, 0
	086 JumpIfEqual {96}
	087 Move X8, [X0+64]
	088 Move X3, [X0+24]
	089 Move X2, [X0+40]
	090 Move X20, [X31+16]
	091 Move X19, [X31+24]
	092 Move X0, X8
	093 Move W1, W31
	094 Move X30, [X31+32]
	095 CallNoReturn X3
	096 Move X20, [X31+16]
	097 Move X19, [X31+24]
	098 Move X30, [X31+32]
	099 Return 
	100 Call 0x1C17F20

Method: System.Void OnCursorIndexChange()

Disassembly:
	0x03E0C6E8 MOV X2, X31
	0x03E0C6EC MOV X21, X0
	0x03E0C6F0 LDR X1, [X8]
	0x03E0C6F4 BL 0x321BA08
	0x03E0C6F8 TBNZ X0, 0x0, 0x3E0C758
	0x03E0C6FC ADRP X8, 0x35A000
	0x03E0C700 LDR X8, [X8 + 0x9C8]
	0x03E0C704 MOV X0, X21
	0x03E0C708 MOV X2, X31
	0x03E0C70C LDR X1, [X8]
	0x03E0C710 BL 0x321BA08
	0x03E0C714 TBZ X0, 0x0, 0x3E0C72C
	0x03E0C718 LDR X0, [X20 + 0x10]
	0x03E0C71C CBZ X0, 0x3E0C778
	0x03E0C720 MOV X1, X31
	0x03E0C724 BL 0x3C7E07C
	0x03E0C728 B 0x3E0C758
	0x03E0C72C ADRP X8, 0x34D000
	0x03E0C730 LDR X8, [X8 + 0x188]
	0x03E0C734 MOV X0, X21
	0x03E0C738 MOV X2, X31
	0x03E0C73C LDR X1, [X8]
	0x03E0C740 BL 0x321BA08
	0x03E0C744 TBZ X0, 0x0, 0x3E0C76C
	0x03E0C748 LDR X0, [X20 + 0x10]
	0x03E0C74C CBZ X0, 0x3E0C778
	0x03E0C750 MOV X1, X31
	0x03E0C754 BL 0x3C837BC
	0x03E0C758 MOV X0, X19
	0x03E0C75C LDP X20, X19, [X31 + 0x10]
	0x03E0C760 MOV X1, X31
	0x03E0C764 LDP X30, X21, [X31], #0x20
	0x03E0C768 B 0x3D9D950
	0x03E0C76C LDP X20, X19, [X31 + 0x10]
	0x03E0C770 LDP X30, X21, [X31], #0x20
	0x03E0C774 RET
	0x03E0C778 BL 0x1C16F20
	0x03E0C77C RET
	0x03E0C780 FSUB S0, S0, S2
	0x03E0C784 FSUB S1, S1, S3
	0x03E0C788 FMUL S0, S0, S0
	0x03E0C78C FMUL S1, S1, S1
	0x03E0C790 FADD S0, S0, S1
	0x03E0C794 FMOV S1, 16
	0x03E0C798 FCMP S0, S1
	0x03E0C79C CSET W0, GE
	0x03E0C7A0 RET
	0x03E0C7A4 STR X30, [X31 - 0x30]!
	0x03E0C7A8 STP X22, X21, [X31 + 0x10]
	0x03E0C7AC STP X20, X19, [X31 + 0x20]
	0x03E0C7B0 ADRP X22, 0x5DC000
	0x03E0C7B4 ADRP X21, 0x355000
	0x03E0C7B8 LDRB W8, [X22 + 0x35C]
	0x03E0C7BC LDR X21, [X21 + 0xDD8]
	0x03E0C7C0 MOV X19, X1
	0x03E0C7C4 MOV X20, X0
	0x03E0C7C8 TBNZ X8, 0x0, 0x3E0C7E0
	0x03E0C7CC ADRP X0, 0x355000
	0x03E0C7D0 LDR X0, [X0 + 0xDD8]
	0x03E0C7D4 BL 0x1C16CF4
	0x03E0C7D8 MOVZ W8, 0x1
	0x03E0C7DC STRB W8, [X22 + 0x35C]
	0x03E0C7E0 MOVN W8, 0x0
	0x03E0C7E4 STRB W31, [X20 + 0x50]
	0x03E0C7E8 STR W8, [X20 + 0x54]
	0x03E0C7EC STRH W31, [X20 + 0x58]
	0x03E0C7F0 LDR X0, [X21]
	0x03E0C7F4 LDR W8, [X0 + 0xE0]
	0x03E0C7F8 CBNZ W8, 0x3E0C800
	0x03E0C7FC BL 0x1C16DFC
	0x03E0C800 MOV X0, X20
	0x03E0C804 MOV X1, X31
	0x03E0C808 BL 0x3CC986C
	0x03E0C80C STR X19, [X20 + 0x48]
	0x03E0C810 LDP X20, X19, [X31 + 0x20]
	0x03E0C814 LDP X22, X21, [X31 + 0x10]
	0x03E0C818 LDR X30, [X31], #0x30
	0x03E0C81C RET
	0x03E0C820 LDP S0, S1, [X0 + 0x34]
	0x03E0C824 RET
	0x03E0C828 STP S0, S1, [X0 + 0x34]
	0x03E0C82C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5DD000
	005 Move W8, [X20+851]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x312000
	012 Move X0, [X0+1584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+851], W8
	016 Move X0, [X19+32]
	017 Compare X0, 0
	018 JumpIfEqual {100}
	019 Move W1, 2048
	020 Move X2, X31
	021 Call VisualElement.IncrementVersion, X0, X1
	022 Move X0, [X19+16]
	023 Compare X0, 0
	024 JumpIfEqual {100}
	025 Move X1, X31
	026 Call TextSelectingUtilities.get_hasSelection, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {52}
	031 Move X0, [X19+32]
	032 Compare X0, 0
	033 JumpIfEqual {100}
	034 Move X8, [X0]
	035 Move X9, [X8+552]
	036 Move X1, [X8+560]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Compare X0, 0
	039 JumpIfEqual {52}
	040 Move X0, [X19+32]
	041 Compare X0, 0
	042 JumpIfEqual {100}
	043 Move X8, [X0]
	044 Move X9, [X8+552]
	045 Move X1, [X8+560]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Compare X0, 0
	048 JumpIfEqual {100}
	049 Move X1, [X19+32]
	050 Move X2, X31
	051 Call FocusController.set_selectedTextElement, X0, X1
	052 Move X8, [X19+16]
	053 Compare X8, 0
	054 JumpIfEqual {100}
	055 Move W8, [X8+48]
	056 Compare W8, 0
	057 JumpIfEqual {96}
	058 Move X19, [X19+32]
	059 Compare X19, 0
	060 JumpIfEqual {100}
	061 Move X10, 0x312000
	062 Move X8, [X19]
	063 Move X10, [X10+1584]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move X1, [X10]
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move W2, 12
	075 Move X0, X19
	076 Call 0x1C5D788
	077 Move W9, [X10]
	078 Add W9, W9, 12
	079 Add X8, X8, W9
	080 Add X0, X8, 312
	081 Move X8, [X0]
	082 Move X1, [X0+8]
	083 Move X0, X19
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Compare X0, 0
	086 JumpIfEqual {96}
	087 Move X8, [X0+64]
	088 Move X3, [X0+24]
	089 Move X2, [X0+40]
	090 Move X20, [X31+16]
	091 Move X19, [X31+24]
	092 Move X0, X8
	093 Move W1, W31
	094 Move X30, [X31+32]
	095 CallNoReturn X3
	096 Move X20, [X31+16]
	097 Move X19, [X31+24]
	098 Move X30, [X31+32]
	099 Return 
	100 Call 0x1C17F20

Method: System.Boolean RevealCursor()

Disassembly:
	0x03E0C830 LDP S0, S1, [X0 + 0x3C]
	0x03E0C834 RET
	0x03E0C838 STP S0, S1, [X0 + 0x3C]
	0x03E0C83C RET
	0x03E0C840 STP D9, D8, [X31 - 0x40]!
	0x03E0C844 STP X30, X23, [X31 + 0x10]
	0x03E0C848 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+48]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Boolean HasSelection()

Disassembly:
	0x03E0C6CC ADRP X8, 0x35A000
	0x03E0C6D0 LDR X8, [X8 + 0x9E0]
	0x03E0C6D4 MOV X0, X19
	0x03E0C6D8 LDR X1, [X8]
	0x03E0C6DC BL 0x2900038
	0x03E0C6E0 ADRP X8, 0x35A000
	0x03E0C6E4 LDR X8, [X8 + 0x9E8]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call TextSelectingUtilities.get_hasSelection, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Boolean HasFocus()

Disassembly:
	0x03E0C84C STP X20, X19, [X31 + 0x30]
	0x03E0C850 ADRP X23, 0x5DC000
	0x03E0C854 ADRP X22, 0x355000
	0x03E0C858 LDRB W8, [X23 + 0x35D]
	0x03E0C85C LDR X22, [X22 + 0xDD8]
	0x03E0C860 MOV V8.16B, V1.16B

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {6}
	005 Move X30, [X31+16]
	006 Call 0x1C17F20

Method: System.Void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03E0C8A0 LDR X8, [X0 + 0xB8]
	0x03E0C8A4 MOV X0, X19
	0x03E0C8A8 LDR X1, [X8 + 0x8]
	0x03E0C8AC BL 0x3E0C8FC
	0x03E0C8B0 LDR X8, [X22]
	0x03E0C8B4 LDR X9, [X8 + 0xB8]
	0x03E0C8B8 LDR X9, [X9 + 0x8]
	0x03E0C8BC CBZ X9, 0x3E0C8F8
	0x03E0C8C0 STP X21, X31, [X9 + 0x10]
	0x03E0C8C4 STP S9, S8, [X9 + 0x20]
	0x03E0C8C8 LDR X8, [X8 + 0xB8]
	0x03E0C8CC LDR X1, [X8 + 0x8]
	0x03E0C8D0 CBZ X1, 0x3E0C8F8
	0x03E0C8D4 AND W8, W20, 0x1
	0x03E0C8D8 MOV X0, X19
	0x03E0C8DC LDP X20, X19, [X31 + 0x30]
	0x03E0C8E0 LDP X22, X21, [X31 + 0x20]
	0x03E0C8E4 LDP X30, X23, [X31 + 0x10]
	0x03E0C8E8 STRB W8, [X1 + 0x78]
	0x03E0C8EC MOV X2, X31
	0x03E0C8F0 LDP D9, D8, [X31], #0x40
	0x03E0C8F4 B 0x3CCB05C
	0x03E0C8F8 BL 0x1C16F20
	0x03E0C8FC SUB X31, X31, 0x160
	0x03E0C900 STR D8, [X31 + 0x120]
	0x03E0C904 STP X29, X30, [X31 + 0x130]
	0x03E0C908 STP X22, X21, [X31 + 0x140]
	0x03E0C90C STP X20, X19, [X31 + 0x150]
	0x03E0C910 ADRP X21, 0x5DC000
	0x03E0C914 LDRB W8, [X21 + 0x367]
	0x03E0C918 MOV X19, X1
	0x03E0C91C MOV X20, X0
	0x03E0C920 TBNZ X8, 0x0, 0x3E0C944
	0x03E0C924 ADRP X0, 0x2E7000
	0x03E0C928 LDR X0, [X0 + 0x598]
	0x03E0C92C BL 0x1C16CF4
	0x03E0C930 ADRP X0, 0x355000
	0x03E0C934 LDR X0, [X0 + 0xB48]
	0x03E0C938 BL 0x1C16CF4
	0x03E0C93C MOVZ W8, 0x1
	0x03E0C940 STRB W8, [X21 + 0x367]
	0x03E0C944 MOVI V0.2D, 0x0
	0x03E0C948 STR X31, [X31 + 0x110]
	0x03E0C94C STP V0, V0, [X31 + 0xF0]
	0x03E0C950 STP V0, V0, [X31 + 0xD0]
	0x03E0C954 STP V0, V0, [X31 + 0xB0]
	0x03E0C958 STP V0, V0, [X31 + 0x90]
	0x03E0C95C STP V0, V0, [X31 + 0x70]
	0x03E0C960 STR V0, [X31 + 0x6]
	0x03E0C964 LDR X0, [X20 + 0x48]
	0x03E0C968 CBZ X0, 0x3E0CC00
	0x03E0C96C MOV X1, X31
	0x03E0C970 BL 0x3DE0F44
	0x03E0C974 MOV X1, X0
	0x03E0C978 ADD X0, X31, 0xC0
	0x03E0C97C MOVZ W2, 0x58
	0x03E0C980 BL 0x3EB1B30
	0x03E0C984 LDR X0, [X20 + 0x48]
	0x03E0C988 BL 0x3E0EA50
	0x03E0C98C CBZ X19, 0x3E0CC00
	0x03E0C990 ADRP X22, 0x2E7000
	0x03E0C994 LDR X22, [X22 + 0x598]
	0x03E0C998 STR X0, [X19 + 0x68]
	0x03E0C99C MOV X21, X0
	0x03E0C9A0 LDR X0, [X22]
	0x03E0C9A4 LDR W8, [X0 + 0xE0]
	0x03E0C9A8 CBNZ W8, 0x3E0C9B0
	0x03E0C9AC BL 0x1C16DFC
	0x03E0C9B0 MOV X0, X21
	0x03E0C9B4 MOV X1, X31
	0x03E0C9B8 MOV X2, X31
	0x03E0C9BC BL 0x3C3883C
	0x03E0C9C0 TBNZ X0, 0x0, 0x3E0CBE8
	0x03E0C9C4 LDR X0, [X20 + 0x48]
	0x03E0C9C8 BL 0x3E0EB14
	0x03E0C9CC STR X0, [X19 + 0x40]
	0x03E0C9D0 MOV X21, X0
	0x03E0C9D4 LDR X0, [X22]
	0x03E0C9D8 LDR W8, [X0 + 0xE0]
	0x03E0C9DC CBNZ W8, 0x3E0C9E4
	0x03E0C9E0 BL 0x1C16DFC
	0x03E0C9E4 MOV X0, X21
	0x03E0C9E8 MOV X1, X31
	0x03E0C9EC MOV X2, X31
	0x03E0C9F0 BL 0x3C3883C
	0x03E0C9F4 TBNZ X0, 0x0, 0x3E0CBE8
	0x03E0C9F8 LDR X8, [X19 + 0x40]
	0x03E0C9FC CBZ X8, 0x3E0CC00
	0x03E0CA00 LDR X8, [X8 + 0x28]
	0x03E0CA04 STR X8, [X19 + 0x48]
	0x03E0CA08 LDR X0, [X20 + 0x48]
	0x03E0CA0C CBZ X0, 0x3E0CC00
	0x03E0CA10 MOV X1, X31
	0x03E0CA14 BL 0x3DED364
	0x03E0CA18 LDR X0, [X20 + 0x48]
	0x03E0CA1C CBZ X0, 0x3E0CC00
	0x03E0CA20 MOV X1, X31
	0x03E0CA24 MOV V8.16B, V2.16B
	0x03E0CA28 BL 0x3DED364
	0x03E0CA2C LDR X1, [X19 + 0x40]
	0x03E0CA30 MOV X0, X20
	0x03E0CA34 STR X31, [X19 + 0x18]
	0x03E0CA38 STP S8, S3, [X19 + 0x20]
	0x03E0CA3C BL 0x3E0ECD0
	0x03E0CA40 STR S0, [X19 + 0xB8]
	0x03E0CA44 LDR X8, [X20 + 0x48]
	0x03E0CA48 CBZ X8, 0x3E0CC00
	0x03E0CA4C LDRB W9, [X8 + 0x3EB]
	0x03E0CA50 CBZ W9, 0x3E0CA68
	0x03E0CA54 MOV X0, X20
	0x03E0CA58 BL 0x3E0EA20
	0x03E0CA5C LDR X8, [X20 + 0x48]
	0x03E0CA60 TBZ X0, 0x0, 0x3E0CA74
	0x03E0CA64 CBZ X8, 0x3E0CC00
	0x03E0CA68 MOV X0, X8
	0x03E0CA6C BL 0x3E0EE80
	0x03E0CA70 B 0x3E0CA7C
	0x03E0CA74 CBZ X8, 0x3E0CC00
	0x03E0CA78 LDR X0, [X8 + 0x3F0]
	0x03E0CA7C STR X0, [X19 + 0x10]
	0x03E0CA80 ADD X0, X31, 0xC0
	0x03E0CA84 MOV X1, X31
	0x03E0CA88 BL 0x3DC61E0
	0x03E0CA8C FMOV S0, W0
	0x03E0CA90 FCMP S0, 0x0
	0x03E0CA94 B.LE 0x3E0CAAC
	0x03E0CA98 ADD X0, X31, 0xC0
	0x03E0CA9C MOV X1, X31
	0x03E0CAA0 BL 0x3DC61E0
	0x03E0CAA4 FMOV S0, W0
	0x03E0CAA8 B 0x3E0CAE0
	0x03E0CAAC LDR X0, [X19 + 0x40]
	0x03E0CAB0 CBZ X0, 0x3E0CC00
	0x03E0CAB4 ADD X8, X31, 0x0
	0x03E0CAB8 MOV X1, X31
	0x03E0CABC BL 0x3C9EB14
	0x03E0CAC0 ADD X0, X31, 0x60
	0x03E0CAC4 ADD X1, X31, 0x0
	0x03E0CAC8 MOVZ W2, 0x60
	0x03E0CACC BL 0x3EB1AC0
	0x03E0CAD0 ADD X0, X31, 0x60
	0x03E0CAD4 MOV X1, X31
	0x03E0CAD8 BL 0x3C9BF88
	0x03E0CADC SCVTF S0, W0
	0x03E0CAE0 ADD X0, X31, 0xC0
	0x03E0CAE4 MOV X1, X31
	0x03E0CAE8 STR S0, [X19 + 0xA4]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5DD000
	006 Move W8, [X21+852]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {39}
	013 Move X0, 0x358000
	014 Move X0, [X0+272]
	015 Call 0x1C17CF4
	016 Move X0, 0x35B000
	017 Move X0, [X0+2400]
	018 Call 0x1C17CF4
	019 Move X0, 0x35B000
	020 Move X0, [X0+2408]
	021 Call 0x1C17CF4
	022 Move X0, 0x358000
	023 Move X0, [X0+232]
	024 Call 0x1C17CF4
	025 Move X0, 0x35B000
	026 Move X0, [X0+2800]
	027 Call 0x1C17CF4
	028 Move X0, 0x313000
	029 Move X0, [X0+536]
	030 Call 0x1C17CF4
	031 Move X0, 0x310000
	032 Move X0, [X0+2408]
	033 Call 0x1C17CF4
	034 Move X0, 0x35B000
	035 Move X0, [X0+2456]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+852], W8
	039 Compare X19, 0
	040 JumpIfEqual {100}
	041 Move X9, 0x35B000
	042 Move X9, [X9+2408]
	043 Move X8, [X19]
	044 Move X10, [X9]
	045 Move W9, [X8+304]
	046 Move W11, [X10+304]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X12, [X8+200]
	049 Add X11, X12, X11
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X10, 0x358000
	053 Move X10, [X10+272]
	054 Move X10, [X10]
	055 Move W11, [X10+304]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X12, [X8+200]
	058 Add X11, X12, X11
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X10, 0x35B000
	062 Move X10, [X10+2800]
	063 Move X10, [X10]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X10, 0x358000
	066 Move X10, [X10+232]
	067 Move X10, [X10]
	068 Move W11, [X10+304]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X12, [X8+200]
	071 Add X11, X12, X11
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X10, 0x313000
	075 Move X10, [X10+536]
	076 Move X10, [X10]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X10, 0x310000
	079 Move X10, [X10+2408]
	080 Move X10, [X10]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X10, 0x35B000
	083 Move X10, [X10+2456]
	084 Move X10, [X10]
	085 Move W11, [X10+304]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X12, [X8+200]
	088 Add X11, X12, X11
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X10, 0x35B000
	092 Move X10, [X10+2400]
	093 Move X10, [X10]
	094 Move W11, [X10+304]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X8, [X8+200]
	097 Add X8, X8, X11
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X20, [X31+16]
	101 Move X19, [X31+24]
	102 Move X30, [X31+32]
	103 Move X21, [X31+40]
	104 Return 
	105 Move X0, X20
	106 Move X1, X19
	107 Move X20, [X31+16]
	108 Move X19, [X31+24]
	109 Move X30, [X31+32]
	110 Move X21, [X31+40]
	111 Call TextSelectingManipulator.OnPointerDownEvent, X0, X1
	112 Return 
	113 Move X0, X20
	114 Move X20, [X31+16]
	115 Move X19, [X31+24]
	116 Move X30, [X31+32]
	117 Move X21, [X31+40]
	118 Move X0, X20
	119 Move X20, [X31+16]
	120 Move X19, [X31+24]
	121 Move X30, [X31+32]
	122 Move X21, [X31+40]
	123 Call TextSelectingManipulator.OnBlurEvent, X0, X1
	124 Return 
	125 Move X0, X20
	126 Move X1, X19
	127 Move X20, [X31+16]
	128 Move X19, [X31+24]
	129 Move X30, [X31+32]
	130 Move X21, [X31+40]
	131 Call TextSelectingManipulator.OnPointerMoveEvent, X0, X1
	132 Return 
	133 Move X0, X20
	134 Move X1, X19
	135 Move X20, [X31+16]
	136 Move X19, [X31+24]
	137 Move X30, [X31+32]
	138 Move X21, [X31+40]
	139 Call TextSelectingManipulator.OnKeyDown, X0, X1
	140 Return 
	141 Move X0, X20
	142 Move X1, X19
	143 Move X20, [X31+16]
	144 Move X19, [X31+24]
	145 Move X30, [X31+32]
	146 Move X21, [X31+40]
	147 Call TextSelectingManipulator.OnPointerUpEvent, X0, X1
	148 Return 
	149 Move X0, X20
	150 Move X1, X19
	151 Move X20, [X31+16]
	152 Move X19, [X31+24]
	153 Move X30, [X31+32]
	154 Move X21, [X31+40]
	155 Call TextSelectingManipulator.OnValidateCommandEvent, X0, X1
	156 Return 
	157 Move X0, X20
	158 Move X1, X19
	159 Move X20, [X31+16]
	160 Move X19, [X31+24]
	161 Move X30, [X31+32]
	162 Move X21, [X31+40]
	163 Call TextSelectingManipulator.OnExecuteCommandEvent, X0, X1
	164 Return 

Method: System.Void OnFocusEvent(UnityEngine.UIElements.FocusEvent evt)

Disassembly:
	0x03E0CAEC BL 0x3DC9FEC
	0x03E0CAF0 ADRP X8, 0x355000
	0x03E0CAF4 LDR X8, [X8 + 0xB48]
	0x03E0CAF8 MOV W21, W0
	0x03E0CAFC LDR X8, [X8]
	0x03E0CB00 LDR W9, [X8 + 0xE0]
	0x03E0CB04 CBNZ W9, 0x3E0CB10
	0x03E0CB08 MOV X0, X8
	0x03E0CB0C BL 0x1C16DFC
	0x03E0CB10 MOV W0, W21
	0x03E0CB14 MOV X1, X31
	0x03E0CB18 BL 0x3CC8F6C
	0x03E0CB1C STR W0, [X19 + 0x60]
	0x03E0CB20 ADD X0, X31, 0xC0
	0x03E0CB24 MOV X1, X31
	0x03E0CB28 BL 0x3DCA26C
	0x03E0CB2C MOV X1, X31
	0x03E0CB30 BL 0x3CC8F7C
	0x03E0CB34 STR W0, [X19 + 0x70]
	0x03E0CB38 ADD X0, X31, 0xC0
	0x03E0CB3C MOV X1, X31
	0x03E0CB40 BL 0x3DCA400
	0x03E0CB44 CMP W0, 0x0
	0x03E0CB48 MOVZ W8, 0xCCCD
	0x03E0CB4C MOVK W8, 0x3ECC0000
	0x03E0CB50 CSET W9, EQ
	0x03E0CB54 STRB W9, [X19 + 0x78]
	0x03E0CB58 STR W8, [X19 + 0x7C]
	0x03E0CB5C LDR X8, [X20 + 0x48]
	0x03E0CB60 CBZ X8, 0x3E0CC00
	0x03E0CB64 LDRB W8, [X8 + 0x3E8]
	0x03E0CB68 MOV X0, X20
	0x03E0CB6C STRB W8, [X19 + 0xB5]
	0x03E0CB70 BL 0x3E0E97C
	0x03E0CB74 STR W0, [X19 + 0x74]
	0x03E0CB78 ADD X0, X31, 0xC0
	0x03E0CB7C MOV X1, X31
	0x03E0CB80 BL 0x3DC9AD0
	0x03E0CB84 STR W0, [X19 + 0xC0]
	0x03E0CB88 ADD X0, X31, 0xC0
	0x03E0CB8C MOV X1, X31
	0x03E0CB90 BL 0x3DCA450
	0x03E0CB94 STR W0, [X19 + 0xC4]
	0x03E0CB98 ADD X0, X31, 0xC0
	0x03E0CB9C MOV X1, X31
	0x03E0CBA0 BL 0x3DCA08C
	0x03E0CBA4 STR W0, [X19 + 0xCC]
	0x03E0CBA8 ADD X0, X31, 0xC0
	0x03E0CBAC MOV X1, X31
	0x03E0CBB0 BL 0x3DC9A14
	0x03E0CBB4 STP S0, S1, [X19 + 0x80]
	0x03E0CBB8 STP S2, S3, [X19 + 0x88]
	0x03E0CBBC STRB W31, [X19 + 0xA2]
	0x03E0CBC0 LDR X8, [X20 + 0x48]
	0x03E0CBC4 CBZ X8, 0x3E0CC00
	0x03E0CBC8 LDR W9, [X8 + 0x334]
	0x03E0CBCC CMP W9, 0x2
	0x03E0CBD0 CSET W9, EQ
	0x03E0CBD4 STRB W9, [X19 + 0xB6]
	0x03E0CBD8 LDRB W8, [X8 + 0x3E9]
	0x03E0CBDC MOVZ W9, 0x1
	0x03E0CBE0 STRB W9, [X19 + 0x104]
	0x03E0CBE4 STRB W8, [X19 + 0xBC]
	0x03E0CBE8 LDP X20, X19, [X31 + 0x150]
	0x03E0CBEC LDP X22, X21, [X31 + 0x140]
	0x03E0CBF0 LDP X29, X30, [X31 + 0x130]
	0x03E0CBF4 LDR V8, [X31 + 0x120]
	0x03E0CBF8 ADD X31, X31, 0x160
	0x03E0CBFC RET
	0x03E0CC00 BL 0x1C16F20
	0x03E0CC04 STP D9, D8, [X31 - 0x40]!
	0x03E0CC08 STR X30, [X31 + 0x10]
	0x03E0CC0C STP X22, X21, [X31 + 0x20]
	0x03E0CC10 STP X20, X19, [X31 + 0x30]
	0x03E0CC14 ADRP X22, 0x5DC000
	0x03E0CC18 ADRP X21, 0x355000
	0x03E0CC1C LDRB W8, [X22 + 0x35E]
	0x03E0CC20 LDR X21, [X21 + 0xDD8]
	0x03E0CC24 MOV V8.16B, V1.16B
	0x03E0CC28 MOV V9.16B, V0.16B
	0x03E0CC2C MOV X20, X1
	0x03E0CC30 MOV X19, X0
	0x03E0CC34 TBNZ X8, 0x0, 0x3E0CC4C
	0x03E0CC38 ADRP X0, 0x355000
	0x03E0CC3C LDR X0, [X0 + 0xDD8]
	0x03E0CC40 BL 0x1C16CF4
	0x03E0CC44 MOVZ W8, 0x1
	0x03E0CC48 STRB W8, [X22 + 0x35E]
	0x03E0CC4C LDR X0, [X21]
	0x03E0CC50 LDR W8, [X0 + 0xE0]
	0x03E0CC54 CBNZ W8, 0x3E0CC60
	0x03E0CC58 BL 0x1C16DFC
	0x03E0CC5C LDR X0, [X21]
	0x03E0CC60 LDR X8, [X0 + 0xB8]
	0x03E0CC64 MOV X0, X19
	0x03E0CC68 LDR X1, [X8 + 0x8]
	0x03E0CC6C BL 0x3E0C8FC
	0x03E0CC70 LDR X8, [X21]
	0x03E0CC74 LDR X9, [X8 + 0xB8]
	0x03E0CC78 LDR X9, [X9 + 0x8]
	0x03E0CC7C CBZ X9, 0x3E0CCAC
	0x03E0CC80 STP X20, X31, [X9 + 0x10]
	0x03E0CC84 STP S9, S8, [X9 + 0x20]
	0x03E0CC88 LDR X8, [X8 + 0xB8]
	0x03E0CC8C MOV X0, X19
	0x03E0CC90 LDP X20, X19, [X31 + 0x30]
	0x03E0CC94 LDP X22, X21, [X31 + 0x20]
	0x03E0CC98 LDR X1, [X8 + 0x8]
	0x03E0CC9C LDR X30, [X31 + 0x10]
	0x03E0CCA0 MOV X2, X31
	0x03E0CCA4 LDP D9, D8, [X31], #0x40
	0x03E0CCA8 B 0x3CCB0E8
	0x03E0CCAC BL 0x1C16F20
	0x03E0CCB0 STP D9, D8, [X31 - 0x30]!
	0x03E0CCB4 STP X30, X21, [X31 + 0x10]
	0x03E0CCB8 STP X20, X19, [X31 + 0x20]
	0x03E0CCBC LDR X1, [X0 + 0x28]
	0x03E0CCC0 MOV X19, X0
	0x03E0CCC4 BL 0x3E0C8FC
	0x03E0CCC8 LDR X0, [X19 + 0x48]
	0x03E0CCCC CBZ X0, 0x3E0CD94
	0x03E0CCD0 MOV X1, X31
	0x03E0CCD4 BL 0x3DED364
	0x03E0CCD8 LDR V1, [X19 + 0x3C]
	0x03E0CCDC ADRP X8, 0xFFFFFFFFFCCDE000
	0x03E0CCE0 LDR V0, [X8 + 0x330]
	0x03E0CCE4 MOV V9.16B, V2.16B
	0x03E0CCE8 FABD S1, S2, S2
	0x03E0CCEC MOV V8.16B, V3.16B
	0x03E0CCF0 FCMP S1, S0
	0x03E0CCF4 B.PL 0x3E0CD08
	0x03E0CCF8 LDR V1, [X19 + 0x40]
	0x03E0CCFC FABD S1, S8, S8
	0x03E0CD00 FCMP S1, S0
	0x03E0CD04 B.MI 0x3E0CD14
	0x03E0CD08 STP S9, S8, [X19 + 0x3C]
	0x03E0CD0C STP S9, S8, [X19 + 0x34]
	0x03E0CD10 B 0x3E0CD18
	0x03E0CD14 LDP S9, S8, [X19 + 0x34]
	0x03E0CD18 ADRP X21, 0x5CD000
	0x03E0CD1C LDRB W8, [X21 + 0x78F]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5DD000
	006 Move X20, 0x311000
	007 Move W8, [X21+853]
	008 Move X20, [X20+3664]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x311000
	015 Move X0, [X0+3712]
	016 Call 0x1C17CF4
	017 Move X0, 0x312000
	018 Move X0, [X0+1576]
	019 Call 0x1C17CF4
	020 Move X0, 0x310000
	021 Move X0, [X0+2392]
	022 Call 0x1C17CF4
	023 Move X0, 0x311000
	024 Move X0, [X0+3664]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+853], W8
	028 Move [X19+24], W31
	029 Move X0, [X20]
	030 Move X21, 0x310000
	031 Move W8, [X0+224]
	032 Move X21, [X21+2392]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X20]
	037 Move X8, [X21]
	038 Move X9, [X0+184]
	039 Move W10, [X8+224]
	040 Move W20, [X9+8]
	041 Compare W10, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X21, 0x312000
	046 Move X21, [X21+1576]
	047 Move W0, W20
	048 Move X1, X31
	049 Call PointerDeviceState.GetPressedButtons, X0
	050 Compare W0, 0
	051 JumpIfEqual {69}
	052 Move X20, [X19+32]
	053 Compare X20, 0
	054 JumpIfEqual {153}
	055 Move X8, [X20]
	056 Move X1, [X21]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move W2, 17
	067 Move X0, X20
	068 Call 0x1C5D788
	069 Move X0, [X19+32]
	070 Compare X0, 0
	071 JumpIfEqual {153}
	072 Move X1, X31
	073 Call VisualElement.get_panel, X0
	074 Compare X0, 0
	075 JumpIfEqual {153}
	076 Move X10, 0x311000
	077 Move X8, [X0]
	078 Move X10, [X10+3712]
	079 Move X20, X0
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Move X1, [X10]
	082 Compare X9, 0
	083 JumpIfEqual {90}
	084 Move X10, [X8+176]
	085 Add X10, X10, 8
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract X9, X9, 1
	089 Add X10, X10, 16
	090 Move W2, 2
	091 Move X0, X20
	092 Call 0x1C5D788
	093 Move W9, [X10]
	094 Add W9, W9, 17
	095 Add X8, X8, W9
	096 Add X0, X8, 312
	097 Move X8, [X0]
	098 Move X1, [X0+8]
	099 Move X0, X20
	100 NotImplemented "Instruction BLR not yet implemented."
	101 And W8, W0, 1
	102 Move [X19+24], W8
	103 Move W9, [X10]
	104 Add W9, W9, 2
	105 Add X8, X8, W9
	106 Add X0, X8, 312
	107 Move X8, [X0]
	108 Move X1, [X0+8]
	109 Move X0, X20
	110 NotImplemented "Instruction BLR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X0, X31
	113 Call Event.get_current
	114 Compare X0, 0
	115 JumpIfEqual {52}
	116 Move X20, [X19+32]
	117 Compare X20, 0
	118 JumpIfEqual {153}
	119 Move X8, [X20]
	120 Move X19, [X19+16]
	121 Move X1, [X21]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Compare X9, 0
	124 JumpIfEqual {131}
	125 Move X10, [X8+176]
	126 Add X10, X10, 8
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Subtract X9, X9, 1
	130 Add X10, X10, 16
	131 Move W2, 15
	132 Move X0, X20
	133 Call 0x1C5D788
	134 Move W9, [X10]
	135 Add W9, W9, 15
	136 Add X8, X8, W9
	137 Add X0, X8, 312
	138 Move X8, [X0]
	139 Move X1, [X0+8]
	140 Move X0, X20
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Compare X19, 0
	143 JumpIfEqual {153}
	144 And W1, W0, 1
	145 Move X0, X19
	146 Move X20, [X31+16]
	147 Move X19, [X31+24]
	148 Move X2, X31
	149 Move X30, [X31+32]
	150 Move X21, [X31+40]
	151 Call TextSelectingUtilities.OnFocus, X0, X1
	152 Return 
	153 Call 0x1C17F20

Method: System.Void OnBlurEvent(UnityEngine.UIElements.BlurEvent evt)

Disassembly:
	0x03E0CD20 LDR X20, [X19 + 0x28]
	0x03E0CD24 CBNZ W8, 0x3E0CD3C
	0x03E0CD28 ADRP X0, 0x2EF000
	0x03E0CD2C LDR X0, [X0 + 0xF08]
	0x03E0CD30 BL 0x1C16CF4
	0x03E0CD34 MOVZ W8, 0x1
	0x03E0CD38 STRB W8, [X21 + 0x78F]
	0x03E0CD3C CBZ X20, 0x3E0CD94
	0x03E0CD40 ADRP X8, 0x2EF000
	0x03E0CD44 LDR X8, [X8 + 0xF08]
	0x03E0CD48 MOV X0, X19
	0x03E0CD4C MOV X2, X31
	0x03E0CD50 LDR X8, [X8]
	0x03E0CD54 LDR X8, [X8 + 0xB8]
	0x03E0CD58 LDR V0, [X8]
	0x03E0CD5C STP S9, S8, [X20 + 0x20]
	0x03E0CD60 STR D0, [X20 + 0x18]
	0x03E0CD64 LDR X1, [X19 + 0x28]
	0x03E0CD68 BL 0x3CCB100
	0x03E0CD6C MOV X0, X19
	0x03E0CD70 BL 0x3E0CD98
	0x03E0CD74 MOV X0, X19
	0x03E0CD78 BL 0x3E0D2C0
	0x03E0CD7C MOV X0, X19
	0x03E0CD80 LDP X20, X19, [X31 + 0x20]
	0x03E0CD84 LDP X30, X21, [X31 + 0x10]
	0x03E0CD88 MOV X1, X31
	0x03E0CD8C LDP D9, D8, [X31], #0x30
	0x03E0CD90 B 0x3CC98D0
	0x03E0CD94 BL 0x1C16F20
	0x03E0CD98 STR X30, [X31 - 0x30]!
	0x03E0CD9C STP X22, X21, [X31 + 0x10]
	0x03E0CDA0 STP X20, X19, [X31 + 0x20]
	0x03E0CDA4 ADRP X20, 0x5DC000
	0x03E0CDA8 LDRB W8, [X20 + 0x366]
	0x03E0CDAC MOV X19, X0
	0x03E0CDB0 TBNZ X8, 0x0, 0x3E0CE88
	0x03E0CDB4 ADRP X0, 0x312000
	0x03E0CDB8 LDR X0, [X0 + 0x98]
	0x03E0CDBC BL 0x1C16CF4
	0x03E0CDC0 ADRP X0, 0x35E000
	0x03E0CDC4 LDR X0, [X0 + 0x460]
	0x03E0CDC8 BL 0x1C16CF4
	0x03E0CDCC ADRP X0, 0x35E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5DD000
	005 Move W8, [X20+854]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x312000
	012 Move X0, [X0+1576]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+854], W8
	016 Move X20, [X19+32]
	017 Compare X20, 0
	018 JumpIfEqual {49}
	019 Move X10, 0x312000
	020 Move X8, [X20]
	021 Move X10, [X10+1576]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 17
	033 Move X0, X20
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 17
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X8, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X20
	042 NotImplemented "Instruction BLR not yet implemented."
	043 And W8, W0, 1
	044 Move [X19+24], W8
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Return 
	049 Call 0x1C17F20

Method: System.Void OnKeyDown(UnityEngine.UIElements.KeyDownEvent evt)

Disassembly:
	0x03E0D1AC B.NE 0x3E0D2AC
	0x03E0D1B0 ADRP X8, 0x311000
	0x03E0D1B4 LDR X20, [X19 + 0x48]
	0x03E0D1B8 LDR X8, [X8 + 0xA0]
	0x03E0D1BC LDR X0, [X8]
	0x03E0D1C0 BL 0x1C16F10
	0x03E0D1C4 ADRP X8, 0x35D000
	0x03E0D1C8 LDR X8, [X8 + 0x490]
	0x03E0D1CC MOV X1, X19
	0x03E0D1D0 MOV X3, X31
	0x03E0D1D4 MOV X21, X0
	0x03E0D1D8 LDR X2, [X8]
	0x03E0D1DC BL 0x2D0E824
	0x03E0D1E0 CBZ X20, 0x3E0CEFC
	0x03E0D1E4 ADRP X8, 0x311000
	0x03E0D1E8 LDR X8, [X8 + 0xD28]
	0x03E0D1EC MOVZ W2, 0x1
	0x03E0D1F0 MOV X0, X20
	0x03E0D1F4 MOV X1, X21
	0x03E0D1F8 LDR X3, [X8]
	0x03E0D1FC BL 0x21A18B4
	0x03E0D200 ADRP X8, 0x35D000
	0x03E0D204 LDR X20, [X19 + 0x48]
	0x03E0D208 LDR X8, [X8 + 0x480]
	0x03E0D20C LDR X0, [X8]
	0x03E0D210 BL 0x1C16F10
	0x03E0D214 ADRP X8, 0x35D000
	0x03E0D218 LDR X8, [X8 + 0x4A0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+32]
	006 Compare X0, 0
	007 JumpIfEqual {41}
	008 Move X19, X1
	009 Call TextElement.get_hasFocus, X0
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {37}
	014 Compare X19, 0
	015 JumpIfEqual {41}
	016 Move X1, [X20+64]
	017 Move X0, X19
	018 Move X2, X31
	019 Call KeyDownEvent.GetEquivalentImguiEvent, X0, X1
	020 Move X0, [X20+16]
	021 Compare X0, 0
	022 JumpIfEqual {41}
	023 Move X1, [X20+64]
	024 Move X2, X31
	025 Call TextSelectingUtilities.HandleKeyEvent, X0, X1
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {37}
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Call EventBase.StopPropagation, X0
	036 Return 
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return 
	041 Call 0x1C17F20

Method: System.Void OnPointerDownEvent(UnityEngine.UIElements.PointerDownEvent evt)

Disassembly:
	0x03E0CDD0 LDR X0, [X0 + 0x468]
	0x03E0CDD4 BL 0x1C16CF4
	0x03E0CDD8 ADRP X0, 0x311000
	0x03E0CDDC LDR X0, [X0 + 0x778]
	0x03E0CDE0 BL 0x1C16CF4
	0x03E0CDE4 ADRP X0, 0x312000
	0x03E0CDE8 LDR X0, [X0 + 0xD28]
	0x03E0CDEC BL 0x1C16CF4
	0x03E0CDF0 ADRP X0, 0x35E000
	0x03E0CDF4 LDR X0, [X0 + 0x470]
	0x03E0CDF8 BL 0x1C16CF4
	0x03E0CDFC ADRP X0, 0x35E000
	0x03E0CE00 LDR X0, [X0 + 0x478]
	0x03E0CE04 BL 0x1C16CF4
	0x03E0CE08 ADRP X0, 0x311000
	0x03E0CE0C LDR X0, [X0 + 0x798]
	0x03E0CE10 BL 0x1C16CF4
	0x03E0CE14 ADRP X0, 0x35E000
	0x03E0CE18 LDR X0, [X0 + 0x480]
	0x03E0CE1C BL 0x1C16CF4
	0x03E0CE20 ADRP X0, 0x35E000
	0x03E0CE24 LDR X0, [X0 + 0x488]
	0x03E0CE28 BL 0x1C16CF4
	0x03E0CE2C ADRP X0, 0x312000
	0x03E0CE30 LDR X0, [X0 + 0xA0]
	0x03E0CE34 BL 0x1C16CF4
	0x03E0CE38 ADRP X0, 0x311000
	0x03E0CE3C LDR X0, [X0 + 0x788]
	0x03E0CE40 BL 0x1C16CF4
	0x03E0CE44 ADRP X0, 0x310000
	0x03E0CE48 LDR X0, [X0 + 0xE80]
	0x03E0CE4C BL 0x1C16CF4
	0x03E0CE50 ADRP X0, 0x35E000
	0x03E0CE54 LDR X0, [X0 + 0x490]
	0x03E0CE58 BL 0x1C16CF4
	0x03E0CE5C ADRP X0, 0x35E000
	0x03E0CE60 LDR X0, [X0 + 0x498]
	0x03E0CE64 BL 0x1C16CF4
	0x03E0CE68 ADRP X0, 0x35E000
	0x03E0CE6C LDR X0, [X0 + 0x4A0]
	0x03E0CE70 BL 0x1C16CF4
	0x03E0CE74 ADRP X0, 0x35E000
	0x03E0CE78 LDR X0, [X0 + 0x4A8]
	0x03E0CE7C BL 0x1C16CF4
	0x03E0CE80 MOVZ W8, 0x1
	0x03E0CE84 STRB W8, [X20 + 0x366]
	0x03E0CE88 MOV X0, X19
	0x03E0CE8C MOV X1, X31
	0x03E0CE90 BL 0x3CC98D0
	0x03E0CE94 CBZ X0, 0x3E0CEFC
	0x03E0CE98 MOVZ W22, 0xAFB9
	0x03E0CE9C MOV W20, W31
	0x03E0CEA0 MOVZ W21, 0x30
	0x03E0CEA4 MOVK W22, 0x260000
	0x03E0CEA8 LDR W8, [X0 + 0x20]
	0x03E0CEAC CMP W20, W8
	0x03E0CEB0 B.GE 0x3E0CF00
	0x03E0CEB4 MOV X0, X19
	0x03E0CEB8 MOV X1, X31
	0x03E0CEBC BL 0x3CC98D0
	0x03E0CEC0 CBZ X0, 0x3E0CEFC
	0x03E0CEC4 LDR X8, [X0 + 0x40]
	0x03E0CEC8 CBZ X8, 0x3E0CEFC
	0x03E0CECC LDR W9, [X8 + 0x18]
	0x03E0CED0 CMP W20, W9
	0x03E0CED4 B.CS 0x3E0D2BC
	0x03E0CED8 SMADDL X8, X20, X21, X8
	0x03E0CEDC LDR W8, [X8 + 0x20]
	0x03E0CEE0 CMP W8, W22
	0x03E0CEE4 B.EQ 0x3E0CFBC
	0x03E0CEE8 MOV X0, X19
	0x03E0CEEC MOV X1, X31
	0x03E0CEF0 ADD W20, W20, 0x1
	0x03E0CEF4 BL 0x3CC98D0
	0x03E0CEF8 CBNZ X0, 0x3E0CEA8
	0x03E0CEFC BL 0x1C16F20
	0x03E0CF00 LDRB W8, [X19 + 0x59]
	0x03E0CF04 CBZ W8, 0x3E0D2AC
	0x03E0CF08 STRB W31, [X19 + 0x59]
	0x03E0CF0C ADRP X8, 0x311000
	0x03E0CF10 LDR X20, [X19 + 0x48]
	0x03E0CF14 LDR X8, [X8 + 0x788]
	0x03E0CF18 LDR X0, [X8]
	0x03E0CF1C BL 0x1C16F10
	0x03E0CF20 ADRP X8, 0x35E000
	0x03E0CF24 LDR X8, [X8 + 0x4A8]
	0x03E0CF28 MOV X1, X19
	0x03E0CF2C MOV X3, X31
	0x03E0CF30 MOV X21, X0
	0x03E0CF34 LDR X2, [X8]
	0x03E0CF38 BL 0x2D0E824
	0x03E0CF3C CBZ X20, 0x3E0CEFC
	0x03E0CF40 ADRP X8, 0x311000
	0x03E0CF44 LDR X8, [X8 + 0x798]
	0x03E0CF48 MOVZ W2, 0x1
	0x03E0CF4C MOV X0, X20
	0x03E0CF50 MOV X1, X21
	0x03E0CF54 LDR X3, [X8]
	0x03E0CF58 BL 0x21A18B4
	0x03E0CF5C LDR X0, [X19 + 0x48]
	0x03E0CF60 CBZ X0, 0x3E0CEFC
	0x03E0CF64 MOV X1, X31
	0x03E0CF68 BL 0x3DEC0CC
	0x03E0CF6C CBZ X0, 0x3E0CEFC
	0x03E0CF70 ADRP X10, 0x310000
	0x03E0CF74 LDR X8, [X0]
	0x03E0CF78 LDR X10, [X10 + 0xE80]
	0x03E0CF7C MOV X20, X0
	0x03E0CF80 LDRH W9, [X8 + 0x12E]
	0x03E0CF84 LDR X1, [X10]
	0x03E0CF88 CBZ X9, 0x3E0CFAC
	0x03E0CF8C LDR X10, [X8 + 0xB0]
	0x03E0CF90 ADD X10, X10, 0x8
	0x03E0CF94 LDUR X11, [X10 - 0x8]
	0x03E0CF98 CMP X11, X1
	0x03E0CF9C B.EQ 0x3E0D18C
	0x03E0CFA0 SUBS X9, X9, 0x1
	0x03E0CFA4 ADD X10, X10, 0x10
	0x03E0CFA8 B.NE 0x3E0CF94
	0x03E0CFAC MOVZ W2, 0x2
	0x03E0CFB0 MOV X0, X20
	0x03E0CFB4 BL 0x1C5C788
	0x03E0CFB8 B 0x3E0D19C
	0x03E0CFBC ADRP X8, 0x311000
	0x03E0CFC0 LDR X20, [X19 + 0x48]
	0x03E0CFC4 LDR X8, [X8 + 0x788]
	0x03E0CFC8 LDR X0, [X8]
	0x03E0CFCC BL 0x1C16F10
	0x03E0CFD0 ADRP X8, 0x35E000
	0x03E0CFD4 LDR X8, [X8 + 0x4A8]
	0x03E0CFD8 MOV X1, X19
	0x03E0CFDC MOV X3, X31
	0x03E0CFE0 MOV X21, X0
	0x03E0CFE4 LDR X2, [X8]
	0x03E0CFE8 BL 0x2D0E824
	0x03E0CFEC CBZ X20, 0x3E0CEFC
	0x03E0CFF0 ADRP X8, 0x311000
	0x03E0CFF4 LDR X8, [X8 + 0x778]
	0x03E0CFF8 MOVZ W2, 0x1
	0x03E0CFFC MOV X0, X20
	0x03E0D000 MOV X1, X21
	0x03E0D004 LDR X3, [X8]
	0x03E0D008 BL 0x21A1534
	0x03E0D00C LDR X0, [X19 + 0x48]
	0x03E0D010 CBZ X0, 0x3E0CEFC
	0x03E0D014 MOV X1, X31
	0x03E0D018 BL 0x3DEC0CC
	0x03E0D01C CBZ X0, 0x3E0CEFC
	0x03E0D020 ADRP X10, 0x30F000
	0x03E0D024 LDR X8, [X0]
	0x03E0D028 LDR X10, [X10 + 0xE80]
	0x03E0D02C MOV X20, X0
	0x03E0D030 LDRH W9, [X8 + 0x12E]
	0x03E0D034 LDR X1, [X10]
	0x03E0D038 CBZ X9, 0x3E0D05C
	0x03E0D03C LDR X10, [X8 + 0xB0]
	0x03E0D040 ADD X10, X10, 0x8
	0x03E0D044 LDUR X11, [X10 - 0x8]
	0x03E0D048 CMP X11, X1
	0x03E0D04C B.EQ 0x3E0D06C
	0x03E0D050 SUBS X9, X9, 0x1
	0x03E0D054 ADD X10, X10, 0x10
	0x03E0D058 B.NE 0x3E0D044
	0x03E0D05C MOVZ W2, 0x2
	0x03E0D060 MOV X0, X20
	0x03E0D064 BL 0x1C5C788
	0x03E0D068 B 0x3E0D07C
	0x03E0D06C LDR W9, [X10]
	0x03E0D070 ADD W9, W9, 0x2
	0x03E0D074 ADD X8, X8, W9, 0x4, SXTW
	0x03E0D078 ADD X0, X8, 0x138
	0x03E0D07C LDP X8, X1, [X0]
	0x03E0D080 MOV X0, X20
	0x03E0D084 BLR X8
	0x03E0D088 CMP W0, 0x1
	0x03E0D08C B.NE 0x3E0D180
	0x03E0D090 ADRP X8, 0x311000
	0x03E0D094 LDR X20, [X19 + 0x48]
	0x03E0D098 LDR X8, [X8 + 0xA0]
	0x03E0D09C LDR X0, [X8]
	0x03E0D0A0 BL 0x1C16F10
	0x03E0D0A4 ADRP X8, 0x35D000
	0x03E0D0A8 LDR X8, [X8 + 0x490]
	0x03E0D0AC MOV X1, X19
	0x03E0D0B0 MOV X3, X31
	0x03E0D0B4 MOV X21, X0
	0x03E0D0B8 LDR X2, [X8]
	0x03E0D0BC BL 0x2D0E824
	0x03E0D0C0 CBZ X20, 0x3E0CEFC
	0x03E0D0C4 ADRP X8, 0x311000
	0x03E0D0C8 LDR X8, [X8 + 0x98]
	0x03E0D0CC MOVZ W2, 0x1
	0x03E0D0D0 MOV X0, X20
	0x03E0D0D4 MOV X1, X21
	0x03E0D0D8 LDR X3, [X8]
	0x03E0D0DC BL 0x21A1534
	0x03E0D0E0 ADRP X8, 0x35D000
	0x03E0D0E4 LDR X20, [X19 + 0x48]
	0x03E0D0E8 LDR X8, [X8 + 0x480]
	0x03E0D0EC LDR X0, [X8]
	0x03E0D0F0 BL 0x1C16F10
	0x03E0D0F4 ADRP X8, 0x35D000
	0x03E0D0F8 LDR X8, [X8 + 0x4A0]
	0x03E0D0FC MOV X1, X19
	0x03E0D100 MOV X3, X31
	0x03E0D104 MOV X21, X0
	0x03E0D108 LDR X2, [X8]
	0x03E0D10C BL 0x2D0E824
	0x03E0D110 CBZ X20, 0x3E0CEFC
	0x03E0D114 ADRP X8, 0x35D000
	0x03E0D118 LDR X8, [X8 + 0x468]
	0x03E0D11C MOVZ W2, 0x1
	0x03E0D120 MOV X0, X20
	0x03E0D124 MOV X1, X21
	0x03E0D128 LDR X3, [X8]
	0x03E0D12C BL 0x21A1534
	0x03E0D130 ADRP X8, 0x35D000
	0x03E0D134 LDR X20, [X19 + 0x48]
	0x03E0D138 LDR X8, [X8 + 0x488]
	0x03E0D13C LDR X0, [X8]
	0x03E0D140 BL 0x1C16F10
	0x03E0D144 ADRP X8, 0x35D000
	0x03E0D148 LDR X8, [X8 + 0x498]
	0x03E0D14C MOV X1, X19
	0x03E0D150 MOV X3, X31
	0x03E0D154 MOV X21, X0
	0x03E0D158 LDR X2, [X8]
	0x03E0D15C BL 0x2D0E824
	0x03E0D160 CBZ X20, 0x3E0CEFC
	0x03E0D164 ADRP X8, 0x35D000
	0x03E0D168 LDR X8, [X8 + 0x460]
	0x03E0D16C MOVZ W2, 0x1
	0x03E0D170 MOV X0, X20
	0x03E0D174 MOV X1, X21
	0x03E0D178 LDR X3, [X8]
	0x03E0D17C BL 0x21A1534
	0x03E0D180 MOVZ W8, 0x1
	0x03E0D184 STRB W8, [X19 + 0x59]
	0x03E0D188 B 0x3E0D2AC
	0x03E0D18C LDR W9, [X10]
	0x03E0D190 ADD W9, W9, 0x2
	0x03E0D194 ADD X8, X8, W9, 0x4, SXTW
	0x03E0D198 ADD X0, X8, 0x138
	0x03E0D19C LDP X8, X1, [X0]
	0x03E0D1A0 MOV X0, X20
	0x03E0D1A4 BLR X8
	0x03E0D1A8 CMP W0, 0x1

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x5DD000
	009 Move W8, [X21+855]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x312000
	017 Move X0, [X0+1584]
	018 Call 0x1C17CF4
	019 Move X0, 0x312000
	020 Move X0, [X0+1576]
	021 Call 0x1C17CF4
	022 Move X0, 0x313000
	023 Move X0, [X0+3304]
	024 Call 0x1C17CF4
	025 Move X0, 0x313000
	026 Move X0, [X0+3312]
	027 Call 0x1C17CF4
	028 Move X0, 0x313000
	029 Move X0, [X0+3320]
	030 Call 0x1C17CF4
	031 Move X0, 0x35F000
	032 Move X0, [X0+1104]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+855], W8
	036 Compare X20, 0
	037 JumpIfEqual {278}
	038 Move X0, [X19+32]
	039 Compare X0, 0
	040 JumpIfEqual {278}
	041 Move S9, [X20+192]
	042 Move S8, [X20+196]
	043 Move X1, X31
	044 Call VisualElement.get_contentRect, X0
	045 Move W8, [X20+172]
	046 Compare W8, 0
	047 JumpIfNotEqual {208}
	048 Move X21, [X20+24]
	049 Move X22, [X19+56]
	050 Move X0, X31
	051 Subtract S9, S9, S0
	052 Subtract S8, S8, S1
	053 Call Event.GetDoubleClickTime
	054 Subtract X8, X21, X22
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W8, [X19+52]
	057 Add W8, W8, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move [X19+52], W8
	060 Move X21, [X19+32]
	061 Compare X21, 0
	062 JumpIfEqual {278}
	063 Move X10, 0x312000
	064 Move X8, [X21]
	065 Move X10, [X10+1576]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Move X1, [X10]
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move W2, 6
	077 Move X0, X21
	078 Call 0x1C5D788
	079 Move W8, 1
	080 Move [X19+52], W8
	081 Move W9, [X10]
	082 Add W9, W9, 6
	083 Add X8, X8, W9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X21
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {112}
	093 Move X0, [X19+16]
	094 Compare X0, 0
	095 JumpIfEqual {278}
	096 Move X1, X31
	097 Call TextSelectingUtilities.get_cursorIndex, X0
	098 Compare W0, 0
	099 JumpIfNotEqual {264}
	100 Move X0, [X19+16]
	101 Compare X0, 0
	102 JumpIfEqual {278}
	103 Move X1, X31
	104 Call TextSelectingUtilities.get_cursorIndex, X0
	105 Move X8, [X19+16]
	106 Move W21, W0
	107 Compare X8, 0
	108 JumpIfEqual {246}
	109 Move X0, X8
	110 Move X1, X31
	111 Call TextSelectingUtilities.get_selectIndex, X0
	112 Move W8, [X19+52]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X21, [X19+32]
	115 Compare X21, 0
	116 JumpIfEqual {278}
	117 Move X10, 0x312000
	118 Move X8, [X21]
	119 Move X10, [X10+1576]
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 Move X1, [X10]
	122 Compare X9, 0
	123 JumpIfEqual {130}
	124 Move X10, [X8+176]
	125 Add X10, X10, 8
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract X9, X9, 1
	129 Add X10, X10, 16
	130 Move W2, 11
	131 Move X0, X21
	132 Call 0x1C5D788
	133 Move X22, X19
	134 Add X22, X22, 16
	135 Move X21, [X22]
	136 Move X8, 0x35F000
	137 Move X8, [X8+1104]
	138 Move X0, X20
	139 Move X1, [X8]
	140 Call 0x24A4190, X0
	141 Compare X21, 0
	142 JumpIfEqual {278}
	143 And W1, W0, 1
	144 Move X0, X21
	145 Move V0, V9
	146 Move V1, V8
	147 Move X2, X31
	148 Call TextSelectingUtilities.MoveCursorToPosition_Internal, X0, X1, X2
	149 Move X21, [X19+32]
	150 Compare X21, 0
	151 JumpIfEqual {278}
	152 Move X10, 0x312000
	153 Move X8, [X21]
	154 Move X10, [X10+1584]
	155 NotImplemented "Instruction LDRH not yet implemented."
	156 Move X1, [X10]
	157 Compare X9, 0
	158 JumpIfEqual {165}
	159 Move X10, [X8+176]
	160 Add X10, X10, 8
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Subtract X9, X9, 1
	164 Add X10, X10, 16
	165 Move W2, 12
	166 Move X0, X21
	167 Call 0x1C5D788
	168 Move W9, [X10]
	169 Add W9, W9, 12
	170 Add X8, X8, W9
	171 Add X0, X8, 312
	172 Move X8, [X0]
	173 Move X1, [X0+8]
	174 Move X0, X21
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Compare X0, 0
	177 JumpIfEqual {184}
	178 Move X8, [X0+64]
	179 Move X9, [X0+24]
	180 Move X2, [X0+40]
	181 Move W1, W31
	182 Move X0, X8
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Move X0, [X22]
	185 Compare X0, 0
	186 JumpIfEqual {278}
	187 Move W1, W31
	188 Move X2, X31
	189 Call TextSelectingUtilities.MouseDragSelectsWholeWords, X0, X1
	190 Move X0, [X22]
	191 Compare X0, 0
	192 JumpIfEqual {278}
	193 Move W1, W31
	194 Move X2, X31
	195 Call TextSelectingUtilities.DblClickSnap, X0, X1
	196 Move W8, [X19+49]
	197 Move X9, [X20+24]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move [X19+56], X9
	200 Move W8, 1
	201 Move [X19+49], W8
	202 Move X0, [X19+32]
	203 Move W1, [X20+156]
	204 Move X2, X31
	205 Call PointerCaptureHelper.CapturePointer, X0, X1
	206 Move [X19+40], S9
	207 Move [X19+48], S8
	208 Move X20, [X31+48]
	209 Move X19, [X31+56]
	210 Move X22, [X31+32]
	211 Move X21, [X31+40]
	212 Move X30, [X31+16]
	213 Move D9, [X31+64]
	214 Move D8, [X31+72]
	215 Return 
	216 Move W9, [X10]
	217 Add W9, W9, 11
	218 Add X8, X8, W9
	219 Add X0, X8, 312
	220 Move X8, [X0]
	221 Move X1, [X0+8]
	222 Move X0, X21
	223 NotImplemented "Instruction BLR not yet implemented."
	224 Move X22, X19
	225 Add X22, X22, 16
	226 Move X21, [X22]
	227 Move TEMP, X0
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfNotEqual {136}
	231 Compare X21, 0
	232 JumpIfEqual {278}
	233 Move X0, X21
	234 Move X1, X31
	235 Call TextSelectingUtilities.SelectCurrentParagraph, X0
	236 Move X0, [X22]
	237 Compare X0, 0
	238 JumpIfEqual {278}
	239 Move W1, 1
	240 Move X2, X31
	241 Call TextSelectingUtilities.MouseDragSelectsWholeWords, X0, X1
	242 Move X0, [X22]
	243 Compare X0, 0
	244 JumpIfEqual {278}
	245 Move W1, 1
	246 Move TEMP, 0
	247 Not TEMP
	248 Move W0, TEMP
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move X8, 0x35E000
	251 Move X21, [X19+16]
	252 Move X8, [X8+1104]
	253 Move X0, X20
	254 Move X1, [X8]
	255 Call 0x24A4190, X0
	256 Compare X21, 0
	257 JumpIfEqual {278}
	258 And W1, W0, 1
	259 Move X0, X21
	260 Move V0, V9
	261 Move V1, V8
	262 Move X2, X31
	263 Call TextSelectingUtilities.MoveCursorToPosition_Internal, X0, X1, X2
	264 Move X0, [X19+16]
	265 Compare X0, 0
	266 JumpIfEqual {278}
	267 Move X1, X31
	268 Call TextSelectingUtilities.SelectCurrentWord, X0
	269 Move X0, [X19+16]
	270 Compare X0, 0
	271 JumpIfEqual {278}
	272 Move W1, 1
	273 Move X2, X31
	274 Call TextSelectingUtilities.MouseDragSelectsWholeWords, X0, X1
	275 Move X0, [X19+16]
	276 Compare X0, 0
	277 JumpIfNotEqual {193}
	278 Call 0x1C17F20

Method: System.Void OnPointerMoveEvent(UnityEngine.UIElements.PointerMoveEvent evt)

Disassembly:
	0x03E0D21C MOV X1, X19
	0x03E0D220 MOV X3, X31
	0x03E0D224 MOV X21, X0
	0x03E0D228 LDR X2, [X8]
	0x03E0D22C BL 0x2D0E824
	0x03E0D230 CBZ X20, 0x3E0CEFC
	0x03E0D234 ADRP X8, 0x35D000
	0x03E0D238 LDR X8, [X8 + 0x478]
	0x03E0D23C MOVZ W2, 0x1
	0x03E0D240 MOV X0, X20
	0x03E0D244 MOV X1, X21
	0x03E0D248 LDR X3, [X8]
	0x03E0D24C BL 0x21A18B4
	0x03E0D250 ADRP X8, 0x35D000
	0x03E0D254 LDR X20, [X19 + 0x48]
	0x03E0D258 LDR X8, [X8 + 0x488]
	0x03E0D25C LDR X0, [X8]
	0x03E0D260 BL 0x1C16F10
	0x03E0D264 ADRP X8, 0x35D000
	0x03E0D268 LDR X8, [X8 + 0x498]
	0x03E0D26C MOV X1, X19
	0x03E0D270 MOV X3, X31
	0x03E0D274 MOV X21, X0
	0x03E0D278 LDR X2, [X8]
	0x03E0D27C BL 0x2D0E824
	0x03E0D280 CBZ X20, 0x3E0CEFC
	0x03E0D284 ADRP X8, 0x35D000
	0x03E0D288 LDR X8, [X8 + 0x470]
	0x03E0D28C MOV X0, X20
	0x03E0D290 MOV X1, X21
	0x03E0D294 LDP X20, X19, [X31 + 0x20]
	0x03E0D298 LDR X3, [X8]
	0x03E0D29C LDP X22, X21, [X31 + 0x10]
	0x03E0D2A0 MOVZ W2, 0x1
	0x03E0D2A4 LDR X30, [X31], #0x30
	0x03E0D2A8 B 0x21A18B4
	0x03E0D2AC LDP X20, X19, [X31 + 0x20]
	0x03E0D2B0 LDP X22, X21, [X31 + 0x10]
	0x03E0D2B4 LDR X30, [X31], #0x30
	0x03E0D2B8 RET
	0x03E0D2BC BL 0x1C16F28
	0x03E0D2C0 STR X30, [X31 - 0x30]!
	0x03E0D2C4 STP X22, X21, [X31 + 0x10]
	0x03E0D2C8 STP X20, X19, [X31 + 0x20]
	0x03E0D2CC ADRP X20, 0x5DB000
	0x03E0D2D0 LDRB W8, [X20 + 0x365]
	0x03E0D2D4 MOV X19, X0
	0x03E0D2D8 TBNZ X8, 0x0, 0x3E0D3A4
	0x03E0D2DC ADRP X0, 0x310000
	0x03E0D2E0 LDR X0, [X0 + 0x770]
	0x03E0D2E4 BL 0x1C16CF4
	0x03E0D2E8 ADRP X0, 0x311000
	0x03E0D2EC LDR X0, [X0 + 0x98]
	0x03E0D2F0 BL 0x1C16CF4
	0x03E0D2F4 ADRP X0, 0x35D000
	0x03E0D2F8 LDR X0, [X0 + 0x460]
	0x03E0D2FC BL 0x1C16CF4
	0x03E0D300 ADRP X0, 0x310000
	0x03E0D304 LDR X0, [X0 + 0x778]
	0x03E0D308 BL 0x1C16CF4
	0x03E0D30C ADRP X0, 0x310000
	0x03E0D310 LDR X0, [X0 + 0x790]
	0x03E0D314 BL 0x1C16CF4
	0x03E0D318 ADRP X0, 0x311000
	0x03E0D31C LDR X0, [X0 + 0xD28]
	0x03E0D320 BL 0x1C16CF4
	0x03E0D324 ADRP X0, 0x35D000
	0x03E0D328 LDR X0, [X0 + 0x470]
	0x03E0D32C BL 0x1C16CF4
	0x03E0D330 ADRP X0, 0x310000
	0x03E0D334 LDR X0, [X0 + 0x798]
	0x03E0D338 BL 0x1C16CF4
	0x03E0D33C ADRP X0, 0x35D000
	0x03E0D340 LDR X0, [X0 + 0x488]
	0x03E0D344 BL 0x1C16CF4
	0x03E0D348 ADRP X0, 0x311000
	0x03E0D34C LDR X0, [X0 + 0xA0]
	0x03E0D350 BL 0x1C16CF4
	0x03E0D354 ADRP X0, 0x310000
	0x03E0D358 LDR X0, [X0 + 0x780]
	0x03E0D35C BL 0x1C16CF4
	0x03E0D360 ADRP X0, 0x310000
	0x03E0D364 LDR X0, [X0 + 0x788]
	0x03E0D368 BL 0x1C16CF4
	0x03E0D36C ADRP X0, 0x35D000
	0x03E0D370 LDR X0, [X0 + 0x4B0]
	0x03E0D374 BL 0x1C16CF4
	0x03E0D378 ADRP X0, 0x35D000
	0x03E0D37C LDR X0, [X0 + 0x4B8]
	0x03E0D380 BL 0x1C16CF4
	0x03E0D384 ADRP X0, 0x35D000
	0x03E0D388 LDR X0, [X0 + 0x4C0]
	0x03E0D38C BL 0x1C16CF4
	0x03E0D390 ADRP X0, 0x35D000
	0x03E0D394 LDR X0, [X0 + 0x4C8]
	0x03E0D398 BL 0x1C16CF4
	0x03E0D39C MOVZ W8, 0x1
	0x03E0D3A0 STRB W8, [X20 + 0x365]
	0x03E0D3A4 MOV X0, X19
	0x03E0D3A8 MOV X1, X31
	0x03E0D3AC BL 0x3CC98D0
	0x03E0D3B0 CBZ X0, 0x3E0D418
	0x03E0D3B4 MOVZ W22, 0xAFB9
	0x03E0D3B8 MOV W20, W31
	0x03E0D3BC MOVZ W21, 0x20
	0x03E0D3C0 MOVK W22, 0x260000
	0x03E0D3C4 LDR W8, [X0 + 0x20]
	0x03E0D3C8 CMP W20, W8
	0x03E0D3CC B.GE 0x3E0D41C
	0x03E0D3D0 MOV X0, X19
	0x03E0D3D4 MOV X1, X31
	0x03E0D3D8 BL 0x3CC98D0
	0x03E0D3DC CBZ X0, 0x3E0D418
	0x03E0D3E0 LDR X8, [X0 + 0x40]
	0x03E0D3E4 CBZ X8, 0x3E0D418
	0x03E0D3E8 LDR W9, [X8 + 0x18]
	0x03E0D3EC CMP W20, W9
	0x03E0D3F0 B.CS 0x3E0D6CC
	0x03E0D3F4 LDR W8, [X8, X21, LSL]
	0x03E0D3F8 CMP W8, W22
	0x03E0D3FC B.NE 0x3E0D574
	0x03E0D400 MOV X0, X19
	0x03E0D404 MOV X1, X31
	0x03E0D408 ADD W20, W20, 0x1
	0x03E0D40C ADD X21, X21, 0x30
	0x03E0D410 BL 0x3CC98D0
	0x03E0D414 CBNZ X0, 0x3E0D3C4
	0x03E0D418 BL 0x1C16F20
	0x03E0D41C LDRB W8, [X19 + 0x58]
	0x03E0D420 CBZ W8, 0x3E0D6BC
	0x03E0D424 STRB W31, [X19 + 0x58]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x5DC000
	008 Move W8, [X21+856]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x311000
	016 Move X0, [X0+1584]
	017 Call 0x1C17CF4
	018 Move X0, 0x311000
	019 Move X0, [X0+1576]
	020 Call 0x1C17CF4
	021 Move X0, 0x356000
	022 Move X0, [X0+2648]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+856], W8
	026 Move W8, [X20+49]
	027 Compare W8, 0
	028 JumpIfEqual {45}
	029 Compare X19, 0
	030 JumpIfEqual {153}
	031 Move X0, [X20+32]
	032 Compare X0, 0
	033 JumpIfEqual {153}
	034 Move S9, [X19+192]
	035 Move S8, [X19+196]
	036 Move X1, X31
	037 Call VisualElement.get_contentRect, X0
	038 Move W8, [X20+48]
	039 Subtract S0, S9, S0
	040 Subtract S1, S8, S1
	041 Compare W8, 0
	042 JumpIfEqual {52}
	043 Move W8, 1
	044 Move [X20+48], W8
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X30, [X31+16]
	048 Move X21, [X31+24]
	049 Move D9, [X31+48]
	050 Move D8, [X31+56]
	051 Return 
	052 Move S2, [X20+40]
	053 Move S3, [X20+44]
	054 Subtract S2, S2, S0
	055 Subtract S3, S3, S1
	056 Multiply S2, S2, S2
	057 Multiply S3, S3, S3
	058 Add S2, S2, S3
	059 Move S3, 16
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 NotImplemented "Instruction CSET not yet implemented."
	062 Move [X20+48], W8
	063 Move X0, [X20+16]
	064 Compare X0, 0
	065 JumpIfEqual {153}
	066 Move X1, X31
	067 Call TextSelectingUtilities.SelectToPosition, X0, X1
	068 Move X21, [X20+32]
	069 Compare X21, 0
	070 JumpIfEqual {153}
	071 Move X10, 0x311000
	072 Move X8, [X21]
	073 Move X10, [X10+1584]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move X1, [X10]
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move W2, 12
	085 Move X0, X21
	086 Call 0x1C5D788
	087 Move W9, [X10]
	088 Add W9, W9, 12
	089 Add X8, X8, W9
	090 Add X0, X8, 312
	091 Move X8, [X0]
	092 Move X1, [X0+8]
	093 Move X0, X21
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Compare X0, 0
	096 JumpIfEqual {103}
	097 Move X8, [X0+64]
	098 Move X9, [X0+24]
	099 Move X2, [X0+40]
	100 Move W1, W31
	101 Move X0, X8
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X21, [X20+32]
	104 Compare X21, 0
	105 JumpIfEqual {153}
	106 Move X10, 0x311000
	107 Move X8, [X21]
	108 Move X10, [X10+1576]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Move X1, [X10]
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move W2, 17
	120 Move X0, X21
	121 Call 0x1C5D788
	122 Move W9, [X10]
	123 Add W9, W9, 17
	124 Add X8, X8, W9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X1, [X0+8]
	128 Move X0, X21
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {140}
	134 Move X0, [X20+16]
	135 Compare X0, 0
	136 JumpIfEqual {153}
	137 Move X1, X31
	138 Call TextSelectingUtilities.get_hasSelection, X0
	139 Xor W8, W0, 1
	140 Move W8, W31
	141 And W8, W8, 1
	142 Move [X20+24], W8
	143 Move X0, X19
	144 Move X20, [X31+32]
	145 Move X19, [X31+40]
	146 Move X30, [X31+16]
	147 Move X21, [X31+24]
	148 Move X1, X31
	149 Move D9, [X31+48]
	150 Move D8, [X31+56]
	151 Call EventBase.StopPropagation, X0
	152 Return 
	153 Call 0x1C17F20

Method: System.Void OnPointerUpEvent(UnityEngine.UIElements.PointerUpEvent evt)

Disassembly:
	0x03E0D428 ADRP X8, 0x310000
	0x03E0D42C LDR X20, [X19 + 0x48]
	0x03E0D430 LDR X8, [X8 + 0x780]
	0x03E0D434 LDR X0, [X8]
	0x03E0D438 BL 0x1C16F10
	0x03E0D43C ADRP X8, 0x35D000
	0x03E0D440 LDR X8, [X8 + 0x4B0]
	0x03E0D444 MOV X1, X19
	0x03E0D448 MOV X3, X31
	0x03E0D44C MOV X21, X0
	0x03E0D450 LDR X2, [X8]
	0x03E0D454 BL 0x2D0E824
	0x03E0D458 CBZ X20, 0x3E0D418
	0x03E0D45C ADRP X8, 0x310000
	0x03E0D460 LDR X8, [X8 + 0x790]
	0x03E0D464 MOVZ W2, 0x1
	0x03E0D468 MOV X0, X20
	0x03E0D46C MOV X1, X21
	0x03E0D470 LDR X3, [X8]
	0x03E0D474 BL 0x21A18B4
	0x03E0D478 ADRP X8, 0x310000
	0x03E0D47C LDR X20, [X19 + 0x48]
	0x03E0D480 LDR X8, [X8 + 0x788]
	0x03E0D484 LDR X0, [X8]
	0x03E0D488 BL 0x1C16F10
	0x03E0D48C ADRP X8, 0x35D000
	0x03E0D490 LDR X8, [X8 + 0x4C8]
	0x03E0D494 MOV X1, X19
	0x03E0D498 MOV X3, X31
	0x03E0D49C MOV X21, X0
	0x03E0D4A0 LDR X2, [X8]
	0x03E0D4A4 BL 0x2D0E824
	0x03E0D4A8 CBZ X20, 0x3E0D418
	0x03E0D4AC ADRP X8, 0x310000
	0x03E0D4B0 LDR X8, [X8 + 0x798]
	0x03E0D4B4 MOVZ W2, 0x1
	0x03E0D4B8 MOV X0, X20
	0x03E0D4BC MOV X1, X21
	0x03E0D4C0 LDR X3, [X8]
	0x03E0D4C4 BL 0x21A18B4
	0x03E0D4C8 ADRP X8, 0x311000
	0x03E0D4CC LDR X20, [X19 + 0x48]
	0x03E0D4D0 LDR X8, [X8 + 0xA0]
	0x03E0D4D4 LDR X0, [X8]
	0x03E0D4D8 BL 0x1C16F10
	0x03E0D4DC ADRP X8, 0x35D000
	0x03E0D4E0 LDR X8, [X8 + 0x4B8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5DC000
	006 Move W8, [X21+857]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x35E000
	014 Move X0, [X0+1112]
	015 Call 0x1C17CF4
	016 Move X0, 0x312000
	017 Move X0, [X0+3360]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+857], W8
	021 Compare X19, 0
	022 JumpIfEqual {62}
	023 Move W8, [X19+172]
	024 Compare W8, 0
	025 JumpIfEqual {31}
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 
	031 Move W8, [X20+49]
	032 Compare W8, 0
	033 JumpIfEqual {26}
	034 Move W8, [X20+24]
	035 Compare W8, 0
	036 JumpIfEqual {47}
	037 Move X0, [X20+16]
	038 Compare X0, 0
	039 JumpIfEqual {62}
	040 Move X1, X31
	041 Call TextSelectingUtilities.SelectAll, X0
	042 Move W8, [X20+49]
	043 Move [X20+24], W31
	044 Move [X20+48], W31
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Move [X20+24], W31
	048 Move [X20+48], W31
	049 Move [X20+49], W31
	050 Move X0, [X20+32]
	051 Move W1, [X19+156]
	052 Move X2, X31
	053 Call PointerCaptureHelper.ReleasePointer, X0, X1
	054 Move X0, X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X1, X31
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Call EventBase.StopPropagation, X0
	061 Return 
	062 Call 0x1C17F20

Method: System.Void OnValidateCommandEvent(UnityEngine.UIElements.ValidateCommandEvent evt)

Disassembly:
	0x03E0D4E4 MOV X1, X19
	0x03E0D4E8 MOV X3, X31
	0x03E0D4EC MOV X21, X0
	0x03E0D4F0 LDR X2, [X8]
	0x03E0D4F4 BL 0x2D0E824
	0x03E0D4F8 CBZ X20, 0x3E0D418
	0x03E0D4FC ADRP X8, 0x311000
	0x03E0D500 LDR X8, [X8 + 0xD28]
	0x03E0D504 MOVZ W2, 0x1
	0x03E0D508 MOV X0, X20
	0x03E0D50C MOV X1, X21
	0x03E0D510 LDR X3, [X8]
	0x03E0D514 BL 0x21A18B4
	0x03E0D518 ADRP X8, 0x35D000
	0x03E0D51C LDR X20, [X19 + 0x48]
	0x03E0D520 LDR X8, [X8 + 0x488]
	0x03E0D524 LDR X0, [X8]
	0x03E0D528 BL 0x1C16F10
	0x03E0D52C ADRP X8, 0x35D000
	0x03E0D530 LDR X8, [X8 + 0x4C0]
	0x03E0D534 MOV X1, X19
	0x03E0D538 MOV X3, X31
	0x03E0D53C MOV X21, X0
	0x03E0D540 LDR X2, [X8]
	0x03E0D544 BL 0x2D0E824
	0x03E0D548 CBZ X20, 0x3E0D418
	0x03E0D54C ADRP X8, 0x35D000
	0x03E0D550 LDR X8, [X8 + 0x470]
	0x03E0D554 MOV X0, X20
	0x03E0D558 MOV X1, X21
	0x03E0D55C LDP X20, X19, [X31 + 0x20]
	0x03E0D560 LDR X3, [X8]
	0x03E0D564 LDP X22, X21, [X31 + 0x10]
	0x03E0D568 MOVZ W2, 0x1
	0x03E0D56C LDR X30, [X31], #0x30
	0x03E0D570 B 0x21A18B4
	0x03E0D574 ADRP X8, 0x310000
	0x03E0D578 LDR X20, [X19 + 0x48]
	0x03E0D57C LDR X8, [X8 + 0x780]
	0x03E0D580 LDR X0, [X8]
	0x03E0D584 BL 0x1C16F10
	0x03E0D588 ADRP X8, 0x35D000
	0x03E0D58C LDR X8, [X8 + 0x4B0]
	0x03E0D590 MOV X1, X19
	0x03E0D594 MOV X3, X31
	0x03E0D598 MOV X21, X0
	0x03E0D59C LDR X2, [X8]
	0x03E0D5A0 BL 0x2D0E824
	0x03E0D5A4 CBZ X20, 0x3E0D418
	0x03E0D5A8 ADRP X8, 0x310000
	0x03E0D5AC LDR X8, [X8 + 0x770]
	0x03E0D5B0 MOVZ W2, 0x1
	0x03E0D5B4 MOV X0, X20
	0x03E0D5B8 MOV X1, X21
	0x03E0D5BC LDR X3, [X8]
	0x03E0D5C0 BL 0x21A1534
	0x03E0D5C4 ADRP X8, 0x310000
	0x03E0D5C8 LDR X20, [X19 + 0x48]
	0x03E0D5CC LDR X8, [X8 + 0x788]
	0x03E0D5D0 LDR X0, [X8]
	0x03E0D5D4 BL 0x1C16F10
	0x03E0D5D8 ADRP X8, 0x35D000
	0x03E0D5DC LDR X8, [X8 + 0x4C8]
	0x03E0D5E0 MOV X1, X19
	0x03E0D5E4 MOV X3, X31
	0x03E0D5E8 MOV X21, X0
	0x03E0D5EC LDR X2, [X8]
	0x03E0D5F0 BL 0x2D0E824
	0x03E0D5F4 CBZ X20, 0x3E0D418
	0x03E0D5F8 ADRP X8, 0x310000
	0x03E0D5FC LDR X8, [X8 + 0x778]
	0x03E0D600 MOVZ W2, 0x1
	0x03E0D604 MOV X0, X20
	0x03E0D608 MOV X1, X21
	0x03E0D60C LDR X3, [X8]
	0x03E0D610 BL 0x21A1534
	0x03E0D614 ADRP X8, 0x311000
	0x03E0D618 LDR X20, [X19 + 0x48]
	0x03E0D61C LDR X8, [X8 + 0xA0]
	0x03E0D620 LDR X0, [X8]
	0x03E0D624 BL 0x1C16F10
	0x03E0D628 ADRP X8, 0x35D000
	0x03E0D62C LDR X8, [X8 + 0x4B8]
	0x03E0D630 MOV X1, X19
	0x03E0D634 MOV X3, X31
	0x03E0D638 MOV X21, X0
	0x03E0D63C LDR X2, [X8]
	0x03E0D640 BL 0x2D0E824
	0x03E0D644 CBZ X20, 0x3E0D418
	0x03E0D648 ADRP X8, 0x311000
	0x03E0D64C LDR X8, [X8 + 0x98]
	0x03E0D650 MOVZ W2, 0x1
	0x03E0D654 MOV X0, X20
	0x03E0D658 MOV X1, X21
	0x03E0D65C LDR X3, [X8]
	0x03E0D660 MOVZ W22, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5DC000
	006 Move W8, [X21+858]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {36}
	013 Move X0, 0x35A000
	014 Move X0, [X0+2488]
	015 Call 0x1C17CF4
	016 Move X0, 0x34D000
	017 Move X0, [X0+392]
	018 Call 0x1C17CF4
	019 Move X0, 0x35A000
	020 Move X0, [X0+2496]
	021 Call 0x1C17CF4
	022 Move X0, 0x35A000
	023 Move X0, [X0+2504]
	024 Call 0x1C17CF4
	025 Move X0, 0x33B000
	026 Move X0, [X0+1648]
	027 Call 0x1C17CF4
	028 Move X0, 0x35A000
	029 Move X0, [X0+2512]
	030 Call 0x1C17CF4
	031 Move X0, 0x35A000
	032 Move X0, [X0+2520]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+858], W8
	036 Move X0, [X20+32]
	037 Compare X0, 0
	038 JumpIfEqual {129}
	039 Call TextElement.get_hasFocus, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {91}
	044 Compare X19, 0
	045 JumpIfEqual {129}
	046 Move X8, 0x35A000
	047 Move X8, [X8+2488]
	048 Move X0, X19
	049 Move X1, [X8]
	050 Call 0x2901038, X0
	051 Move X8, 0x35A000
	052 Move X8, [X8+2520]
	053 Move X2, X31
	054 Move X21, X0
	055 Move X1, [X8]
	056 Call String.op_Equality, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {91}
	061 Move X8, 0x35A000
	062 Move X8, [X8+2512]
	063 Move X0, X21
	064 Move X2, X31
	065 Move X1, [X8]
	066 Call String.op_Equality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {91}
	071 Move X8, 0x33B000
	072 Move X8, [X8+1648]
	073 Move X0, X21
	074 Move X2, X31
	075 Move X1, [X8]
	076 Call String.op_Equality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {91}
	081 Move X8, 0x35A000
	082 Move X8, [X8+2496]
	083 Move X0, X21
	084 Move X2, X31
	085 Move X1, [X8]
	086 Call String.op_Equality, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {96}
	091 Move X20, [X31+16]
	092 Move X19, [X31+24]
	093 Move X30, [X31+32]
	094 Move X21, [X31+40]
	095 Return 
	096 Move X8, 0x35A000
	097 Move X8, [X8+2504]
	098 Move X0, X21
	099 Move X2, X31
	100 Move X1, [X8]
	101 Call String.op_Equality, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {115}
	106 Move X0, [X20+16]
	107 Compare X0, 0
	108 JumpIfEqual {129}
	109 Move X1, X31
	110 Call TextSelectingUtilities.get_hasSelection, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {91}
	115 Move X8, 0x34D000
	116 Move X8, [X8+392]
	117 Move X0, X21
	118 Move X2, X31
	119 Move X1, [X8]
	120 Call String.op_Equality, X0, X1
	121 Move X0, X19
	122 Move X20, [X31+16]
	123 Move X19, [X31+24]
	124 Move X1, X31
	125 Move X30, [X31+32]
	126 Move X21, [X31+40]
	127 Call EventBase.StopPropagation, X0
	128 Return 
	129 Call 0x1C17F20

Method: System.Void OnExecuteCommandEvent(UnityEngine.UIElements.ExecuteCommandEvent evt)

Disassembly:
	0x03E0D664 BL 0x21A1534
	0x03E0D668 ADRP X8, 0x35D000
	0x03E0D66C LDR X20, [X19 + 0x48]
	0x03E0D670 LDR X8, [X8 + 0x488]
	0x03E0D674 LDR X0, [X8]
	0x03E0D678 BL 0x1C16F10
	0x03E0D67C ADRP X8, 0x35D000
	0x03E0D680 LDR X8, [X8 + 0x4C0]
	0x03E0D684 MOV X1, X19
	0x03E0D688 MOV X3, X31
	0x03E0D68C MOV X21, X0
	0x03E0D690 LDR X2, [X8]
	0x03E0D694 BL 0x2D0E824
	0x03E0D698 CBZ X20, 0x3E0D418
	0x03E0D69C ADRP X8, 0x35D000
	0x03E0D6A0 LDR X8, [X8 + 0x460]
	0x03E0D6A4 MOVZ W2, 0x1
	0x03E0D6A8 MOV X0, X20
	0x03E0D6AC MOV X1, X21
	0x03E0D6B0 LDR X3, [X8]
	0x03E0D6B4 BL 0x21A1534
	0x03E0D6B8 STRB W22, [X19 + 0x58]
	0x03E0D6BC LDP X20, X19, [X31 + 0x20]
	0x03E0D6C0 LDP X22, X21, [X31 + 0x10]
	0x03E0D6C4 LDR X30, [X31], #0x30
	0x03E0D6C8 RET
	0x03E0D6CC BL 0x1C16F28
	0x03E0D6D0 SUB X31, X31, 0x70
	0x03E0D6D4 STP D11, D10, [X31 + 0x30]
	0x03E0D6D8 STP D9, D8, [X31 + 0x40]
	0x03E0D6DC STP X30, X21, [X31 + 0x50]
	0x03E0D6E0 STP X20, X19, [X31 + 0x60]
	0x03E0D6E4 ADRP X21, 0x5DB000
	0x03E0D6E8 LDRB W8, [X21 + 0x35F]
	0x03E0D6EC MOV X20, X1
	0x03E0D6F0 MOV X19, X0
	0x03E0D6F4 TBNZ X8, 0x0, 0x3E0D724
	0x03E0D6F8 ADRP X0, 0x2E6000
	0x03E0D6FC LDR X0, [X0 + 0x970]
	0x03E0D700 BL 0x1C16CF4
	0x03E0D704 ADRP X0, 0x355000
	0x03E0D708 LDR X0, [X0 + 0xA60]
	0x03E0D70C BL 0x1C16CF4
	0x03E0D710 ADRP X0, 0x2E8000
	0x03E0D714 LDR X0, [X0 + 0xA28]
	0x03E0D718 BL 0x1C16CF4
	0x03E0D71C MOVZ W8, 0x1
	0x03E0D720 STRB W8, [X21 + 0x35F]
	0x03E0D724 MOVI V0.2D, 0x0
	0x03E0D728 STP V0, V0, [X31 + 0x10]
	0x03E0D72C STR V0, [X31]
	0x03E0D730 CBZ X20, 0x3E0D864
	0x03E0D734 LDR X0, [X19 + 0x48]
	0x03E0D738 CBZ X0, 0x3E0D864
	0x03E0D73C LDP S10, S11, [X20 + 0xC0]
	0x03E0D740 LDR V8, [X20 + 0xC8]
	0x03E0D744 MOV X1, X31
	0x03E0D748 BL 0x3DED364
	0x03E0D74C LDR X0, [X19 + 0x48]
	0x03E0D750 CBZ X0, 0x3E0D864
	0x03E0D754 MOV X1, X31
	0x03E0D758 MOV V9.16B, V0.16B
	0x03E0D75C BL 0x3DED364
	0x03E0D760 FSUB S0, S10, S9
	0x03E0D764 FSUB S1, S11, S1
	0x03E0D768 MOVZ W1, 0x1
	0x03E0D76C MOV X0, X19
	0x03E0D770 MOV V2.16B, V8.16B
	0x03E0D774 MOV X2, X31
	0x03E0D778 BL 0x3CCA820

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5DC000
	006 Move W8, [X21+859]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x35A000
	014 Move X0, [X0+2528]
	015 Call 0x1C17CF4
	016 Move X0, 0x35A000
	017 Move X0, [X0+2536]
	018 Call 0x1C17CF4
	019 Move X0, 0x34D000
	020 Move X0, [X0+392]
	021 Call 0x1C17CF4
	022 Move X0, 0x35A000
	023 Move X0, [X0+2504]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+859], W8
	027 Move X0, [X20+32]
	028 Compare X0, 0
	029 JumpIfEqual {95}
	030 Call TextElement.get_hasFocus, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {90}
	035 Compare X19, 0
	036 JumpIfEqual {95}
	037 Move X8, 0x35A000
	038 Move X8, [X8+2528]
	039 Move X0, X19
	040 Move X1, [X8]
	041 Call 0x2901038, X0
	042 Move X8, 0x35A000
	043 Move X8, [X8+2536]
	044 Move X2, X31
	045 Move X21, X0
	046 Move X1, [X8]
	047 Call String.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {82}
	052 Move X8, 0x35A000
	053 Move X8, [X8+2504]
	054 Move X0, X21
	055 Move X2, X31
	056 Move X1, [X8]
	057 Call String.op_Equality, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {67}
	062 Move X0, [X20+16]
	063 Compare X0, 0
	064 JumpIfEqual {95}
	065 Move X1, X31
	066 Call TextSelectingUtilities.Copy, X0
	067 Move X8, 0x34D000
	068 Move X8, [X8+392]
	069 Move X0, X21
	070 Move X2, X31
	071 Move X1, [X8]
	072 Call String.op_Equality, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {90}
	077 Move X0, [X20+16]
	078 Compare X0, 0
	079 JumpIfEqual {95}
	080 Move X1, X31
	081 Call TextSelectingUtilities.SelectAll, X0
	082 Move X0, X19
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move X1, X31
	086 Move X30, [X31+32]
	087 Move X21, [X31+40]
	088 Call EventBase.StopPropagation, X0
	089 Return 
	090 Move X20, [X31+16]
	091 Move X19, [X31+24]
	092 Move X30, [X31+32]
	093 Move X21, [X31+40]
	094 Return 
	095 Call 0x1C17F20

Method: System.Boolean MoveDistanceQualifiesForDrag(UnityEngine.Vector2 start, UnityEngine.Vector2 current)

Disassembly:
	0x03E0D780 MOV W20, W0
	0x03E0D784 MOV X0, X19
	0x03E0D788 MOV X1, X31
	0x03E0D78C BL 0x3CC98D0
	0x03E0D790 CBZ X0, 0x3E0D864
	0x03E0D794 LDR X8, [X0 + 0x40]
	0x03E0D798 CBZ X8, 0x3E0D864
	0x03E0D79C LDR W9, [X8 + 0x18]
	0x03E0D7A0 CMP W20, W9

ISIL:
	001 Subtract S0, S0, S2
	002 Subtract S1, S1, S3
	003 Multiply S0, S0, S0
	004 Multiply S1, S1, S1
	005 Add S0, S0, S1
	006 Move S1, 16
	007 NotImplemented "Instruction FCMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Return X0

