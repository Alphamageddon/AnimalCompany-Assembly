Type: UnityEngine.UIElements.ComputedStyle

Method: System.Int32 get_customPropertiesCount()

Disassembly:
	0x03DC7070 ADRP X20, 0x39E000
	0x03DC7074 LDRB W8, [X21 + 0x167]
	0x03DC7078 LDR X20, [X20 + 0x358]
	0x03DC707C MOV X19, X0
	0x03DC7080 TBNZ X8, 0x0, 0x3DC7098
	0x03DC7084 ADRP X0, 0x39E000
	0x03DC7088 LDR X0, [X0 + 0x358]
	0x03DC708C BL 0x1C16CF4
	0x03DC7090 MOVZ W8, 0x1
	0x03DC7094 STRB W8, [X21 + 0x167]
	0x03DC7098 LDR X1, [X20]
	0x03DC709C ADD X0, X19, 0x8
	0x03DC70A0 BL 0x266C920
	0x03DC70A4 LDR W0, [X0 + 0x24]
	0x03DC70A8 LDP X20, X19, [X31 + 0x10]
	0x03DC70AC LDP X30, X21, [X31], #0x20
	0x03DC70B0 RET
	0x03DC70B4 SUB X31, X31, 0x30
	0x03DC70B8 STP X30, X21, [X31 + 0x10]
	0x03DC70BC STP X20, X19, [X31 + 0x20]
	0x03DC70C0 CBZ X1, 0x3DC714C
	0x03DC70C4 MOV X21, X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x622000
	005 Move W8, [X20+329]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3A3000
	012 Move X0, [X0+592]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+329], W8
	016 Move X0, [X19+56]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0x3A3000
	020 Move X8, [X8+592]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call Dictionary`2<Object, StylePropertyValue>.get_Count, X0
	026 Return X0
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Boolean get_hasTransition()

Disassembly:
	0x03DC70C8 MOV X19, X1
	0x03DC70CC MOV X20, X0
	0x03DC70D0 MOV X0, X1
	0x03DC70D4 MOV W1, W31
	0x03DC70D8 MOV X2, X31
	0x03DC70DC BL 0x3D4979C
	0x03DC70E0 STR X1, [X31 + 0x8]
	0x03DC70E4 ADD X0, X31, 0x8

ISIL:
	001 Move X8, [X0+80]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move W8, [X8+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0
	008 Move W0, W31
	009 Return X0

Method: System.Void FinalizeApply(ref UnityEngine.UIElements.ComputedStyle parentStyle)

Disassembly:
	0x03DC70E8 MOV X1, X31
	0x03DC70EC BL 0x3DFA3A8
	0x03DC70F0 CMP W0, 0x1
	0x03DC70F4 MOV W0, W31
	0x03DC70F8 B.NE 0x3DC713C
	0x03DC70FC LDR W8, [X31 + 0xC]
	0x03DC7100 CMP W8, 0x3
	0x03DC7104 B.EQ 0x3DC7120
	0x03DC7108 CMP W8, 0x1
	0x03DC710C B.NE 0x3DC7138
	0x03DC7110 MOV X0, X20
	0x03DC7114 MOV X1, X19
	0x03DC7118 BL 0x3DC7150
	0x03DC711C B 0x3DC7130
	0x03DC7120 MOV X0, X20
	0x03DC7124 MOV X1, X19
	0x03DC7128 MOV X2, X21
	0x03DC712C BL 0x3DC718C
	0x03DC7130 MOVZ W0, 0x1
	0x03DC7134 B 0x3DC713C
	0x03DC7138 MOV W0, W31
	0x03DC713C LDP X20, X19, [X31 + 0x20]
	0x03DC7140 LDP X30, X21, [X31 + 0x10]
	0x03DC7144 ADD X31, X31, 0x30
	0x03DC7148 RET
	0x03DC714C BL 0x1C16F20
	0x03DC7150 STR X30, [X31 - 0x10]!
	0x03DC7154 CBZ X1, 0x3DC7188
	0x03DC7158 LDR W8, [X1 + 0x50]
	0x03DC715C CMP W8, 0x40000
	0x03DC7160 B.EQ 0x3DC7174
	0x03DC7164 ADDS W31, W8, 0x1
	0x03DC7168 B.NE 0x3DC717C
	0x03DC716C LDR X30, [X31], #0x10
	0x03DC7170 B 0x3DC8FE8
	0x03DC7174 LDR X30, [X31], #0x10
	0x03DC7178 B 0x3DC9180
	0x03DC717C MOV W1, W8
	0x03DC7180 LDR X30, [X31], #0x10
	0x03DC7184 B 0x3DC71DC
	0x03DC7188 BL 0x1C16F20
	0x03DC718C STR X30, [X31 - 0x10]!
	0x03DC7190 CBZ X1, 0x3DC71B4
	0x03DC7194 LDR W8, [X1 + 0x50]
	0x03DC7198 ADDS W31, W8, 0x1
	0x03DC719C B.EQ 0x3DC71AC
	0x03DC71A0 MOV W1, W8
	0x03DC71A4 LDR X30, [X31], #0x10
	0x03DC71A8 B 0x3DDDCF8
	0x03DC71AC LDR X30, [X31], #0x10
	0x03DC71B0 B 0x3DC8FE8
	0x03DC71B4 BL 0x1C16F20
	0x03DC71B8 STP X30, X19, [X31 - 0x10]!
	0x03DC71BC MOV W19, W2
	0x03DC71C0 CMP W2, 0x4
	0x03DC71C4 B.NE 0x3DC71CC
	0x03DC71C8 BL 0x3DC71DC
	0x03DC71CC CMP W19, 0x4
	0x03DC71D0 CSET W0, EQ
	0x03DC71D4 LDP X30, X19, [X31], #0x10
	0x03DC71D8 RET
	0x03DC71DC SUB X31, X31, 0x70

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x622000
	007 Move W8, [X21+330]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x39F000
	015 Move X0, [X0+768]
	016 Call 0x1C17CF4
	017 Move X0, 0x3A3000
	018 Move X0, [X0+600]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+330], W8
	022 Move X8, [X19+48]
	023 Compare X8, 0
	024 JumpIfNotEqual {34}
	025 Move X8, 0x3A3000
	026 Move X8, [X8+600]
	027 Move X0, [X8]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X2, X31
	031 Move X21, X0
	032 Call YogaNode..ctor, X0, X1
	033 Move [X19+48], X21
	034 Move X0, X19
	035 Call ComputedStyle.get_fontSize, X0
	036 Move X8, X0
	037 ShiftRight X8, 32
	038 And X8, X8, 0x7FFFFFFF
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X20
	041 Call ComputedStyle.get_fontSize, X0
	042 Move S8, W0
	043 Move X0, X19
	044 Call ComputedStyle.get_fontSize, X0
	045 Move X8, 0x39F000
	046 Move X8, [X8+768]
	047 Move S0, W0
	048 Multiply S0, S8, S0
	049 Move X0, X19
	050 Move X1, [X8]
	051 Move W8, 0x42C80000
	052 Move S1, W8
	053 NotImplemented "Instruction FDIV not yet implemented."
	054 Call 0x266D4BC, X0
	055 Move X20, X0
	056 Add X0, X31, 8
	057 Move V0, V8
	058 Move X1, X31
	059 Move [X31+8], X31
	060 Call Length..ctor, X0, V0
	061 Move X8, [X31+8]
	062 Move [X20+16], X8
	063 Move X1, [X19+48]
	064 Move X0, X19
	065 Call ComputedStyle.SyncWithLayout, X0, X1
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X30, [X31+16]
	069 Move X21, [X31+24]
	070 Move V8, [X31+48]
	071 Return 

Method: System.Void SyncWithLayout(UnityEngine.Yoga.YogaNode targetNode)

Disassembly:
	0x03DC7230 ADRP X0, 0x39E000
	0x03DC7234 LDR X0, [X0 + 0x318]
	0x03DC7238 BL 0x1C16CF4
	0x03DC723C ADRP X0, 0x39E000
	0x03DC7240 LDR X0, [X0 + 0x310]
	0x03DC7244 BL 0x1C16CF4
	0x03DC7248 ADRP X0, 0x39E000
	0x03DC724C LDR X0, [X0 + 0x2F8]
	0x03DC7250 BL 0x1C16CF4
	0x03DC7254 ADRP X0, 0x39E000
	0x03DC7258 LDR X0, [X0 + 0x2F0]
	0x03DC725C BL 0x1C16CF4
	0x03DC7260 ADRP X0, 0x39F000
	0x03DC7264 LDR X0, [X0 + 0x4A8]
	0x03DC7268 BL 0x1C16CF4
	0x03DC726C ADRP X0, 0x39E000
	0x03DC7270 LDR X0, [X0 + 0x390]
	0x03DC7274 BL 0x1C16CF4
	0x03DC7278 ADRP X0, 0x39E000
	0x03DC727C LDR X0, [X0 + 0x398]
	0x03DC7280 BL 0x1C16CF4
	0x03DC7284 ADRP X0, 0x39E000
	0x03DC7288 LDR X0, [X0 + 0x3A0]
	0x03DC728C BL 0x1C16CF4
	0x03DC7290 ADRP X0, 0x3A2000
	0x03DC7294 LDR X0, [X0 + 0x260]
	0x03DC7298 BL 0x1C16CF4
	0x03DC729C MOVZ W8, 0x1
	0x03DC72A0 STRB W8, [X21 + 0x1C2]
	0x03DC72A4 MOVZ W8, 0x9
	0x03DC72A8 MOVK W8, 0x30000
	0x03DC72AC CMP W20, W8
	0x03DC72B0 B.LE 0x3DC7328
	0x03DC72B4 MOVZ W8, 0x3
	0x03DC72B8 MOVK W8, 0x50000
	0x03DC72BC CMP W20, W8
	0x03DC72C0 B.LE 0x3DC7390
	0x03DC72C4 SUB W8, W20, 0x70000
	0x03DC72C8 CMP W8, 0xF
	0x03DC72CC B.HI 0x3DC7564
	0x03DC72D0 ADRP X9, 0xFFFFFFFFFCDD1000
	0x03DC72D4 ADD X9, X9, 0x102
	0x03DC72D8 ADR X10, 0x10
	0x03DC72DC LDRH W11, [X9, X8, LSL #1]
	0x03DC72E0 ADD X10, X10, X11, 0x2, LSL
	0x03DC72E4 BR X10
	0x03DC72E8 ADRP X8, 0x39E000
	0x03DC72EC LDR X8, [X8 + 0x2F8]
	0x03DC72F0 ADD X0, X19, 0x28
	0x03DC72F4 LDR X1, [X8]
	0x03DC72F8 BL 0x266DB34
	0x03DC72FC ADRP X8, 0x39D000
	0x03DC7300 LDR X8, [X8 + 0x358]
	0x03DC7304 MOV X19, X0
	0x03DC7308 LDR X8, [X8]
	0x03DC730C LDR W9, [X8 + 0xE0]
	0x03DC7310 CBNZ W9, 0x3DC731C
	0x03DC7314 MOV X0, X8
	0x03DC7318 BL 0x1C16DFC
	0x03DC731C MOV X0, X31
	0x03DC7320 BL 0x3D4510C
	0x03DC7324 B 0x3DC7470
	0x03DC7328 SUB W8, W20, 0x20000
	0x03DC732C CMP W8, 0x20
	0x03DC7330 B.HI 0x3DC7410
	0x03DC7334 ADRP X9, 0xFFFFFFFFFCDD1000
	0x03DC7338 ADD X9, X9, 0x86
	0x03DC733C ADR X10, 0x10
	0x03DC7340 LDRH W11, [X9, X8, LSL #1]
	0x03DC7344 ADD X10, X10, X11, 0x2, LSL
	0x03DC7348 BR X10
	0x03DC734C ADRP X8, 0x39E000
	0x03DC7350 LDR X8, [X8 + 0x2F0]
	0x03DC7354 ADD X0, X19, 0x8
	0x03DC7358 LDR X1, [X8]
	0x03DC735C BL 0x266C93C
	0x03DC7360 ADRP X8, 0x39D000
	0x03DC7364 LDR X8, [X8 + 0x358]
	0x03DC7368 MOV X19, X0
	0x03DC736C LDR X8, [X8]
	0x03DC7370 LDR W9, [X8 + 0xE0]
	0x03DC7374 CBNZ W9, 0x3DC7380
	0x03DC7378 MOV X0, X8
	0x03DC737C BL 0x1C16DFC
	0x03DC7380 MOV X0, X31
	0x03DC7384 BL 0x3D44FA4
	0x03DC7388 STR W0, [X19]
	0x03DC738C B 0x3DC8FD4
	0x03DC7390 SUB W8, W20, 0x40000
	0x03DC7394 CMP W8, 0xA
	0x03DC7398 B.HI 0x3DC74E4
	0x03DC739C ADRP X9, 0xFFFFFFFFFCDD1000
	0x03DC73A0 ADD X9, X9, 0xDC
	0x03DC73A4 ADR X10, 0x10
	0x03DC73A8 LDRH W11, [X9, X8, LSL #1]
	0x03DC73AC ADD X10, X10, X11, 0x2, LSL
	0x03DC73B0 BR X10
	0x03DC73B4 ADRP X21, 0x39E000
	0x03DC73B8 LDR X21, [X21 + 0x2F8]
	0x03DC73BC ADD X19, X19, 0x28
	0x03DC73C0 MOV X0, X19
	0x03DC73C4 LDR X1, [X21]
	0x03DC73C8 BL 0x266DB34
	0x03DC73CC ADRP X8, 0x39D000
	0x03DC73D0 LDR X8, [X8 + 0x358]
	0x03DC73D4 MOV X20, X0
	0x03DC73D8 LDR X8, [X8]
	0x03DC73DC LDR W9, [X8 + 0xE0]
	0x03DC73E0 CBNZ W9, 0x3DC73EC
	0x03DC73E4 MOV X0, X8
	0x03DC73E8 BL 0x1C16DFC
	0x03DC73EC MOV X0, X31
	0x03DC73F0 BL 0x3D45208
	0x03DC73F4 STR X0, [X20 + 0x30]
	0x03DC73F8 STR W1, [X20 + 0x38]
	0x03DC73FC LDR X1, [X21]
	0x03DC7400 MOV X0, X19
	0x03DC7404 BL 0x266DB34
	0x03DC7408 MOV X19, X0
	0x03DC740C B 0x3DC7CF8
	0x03DC7410 SUB W8, W20, 0x10000
	0x03DC7414 CMP W8, 0xD
	0x03DC7418 B.HI 0x3DC747C
	0x03DC741C ADRP X9, 0xFFFFFFFFFCDD1000
	0x03DC7420 ADD X9, X9, 0x6A
	0x03DC7424 ADR X10, 0x10
	0x03DC7428 LDRH W11, [X9, X8, LSL #1]
	0x03DC742C ADD X10, X10, X11, 0x2, LSL
	0x03DC7430 BR X10
	0x03DC7434 ADRP X8, 0x39E000
	0x03DC7438 LDR X8, [X8 + 0x300]
	0x03DC743C MOV X0, X19
	0x03DC7440 LDR X1, [X8]
	0x03DC7444 BL 0x266C4BC
	0x03DC7448 ADRP X8, 0x39D000
	0x03DC744C LDR X8, [X8 + 0x358]
	0x03DC7450 MOV X19, X0
	0x03DC7454 LDR X8, [X8]
	0x03DC7458 LDR W9, [X8 + 0xE0]
	0x03DC745C CBNZ W9, 0x3DC7468
	0x03DC7460 MOV X0, X8
	0x03DC7464 BL 0x1C16DFC
	0x03DC7468 MOV X0, X31
	0x03DC746C BL 0x3D45A30
	0x03DC7470 STP S0, S1, [X19]
	0x03DC7474 STP S2, S3, [X19 + 0x8]
	0x03DC7478 B 0x3DC8FD4
	0x03DC747C SUB W8, W20, 0x30000
	0x03DC7480 CMP W8, 0x9
	0x03DC7484 B.HI 0x3DC75C8
	0x03DC7488 ADRP X9, 0xFFFFFFFFFCDD1000
	0x03DC748C ADD X9, X9, 0xC8
	0x03DC7490 ADR X10, 0x10
	0x03DC7494 LDRH W11, [X9, X8, LSL #1]
	0x03DC7498 ADD X10, X10, X11, 0x2, LSL
	0x03DC749C BR X10
	0x03DC74A0 ADRP X8, 0x39E000
	0x03DC74A4 LDR X8, [X8 + 0x308]
	0x03DC74A8 ADD X0, X19, 0x10
	0x03DC74AC LDR X1, [X8]
	0x03DC74B0 BL 0x266CDBC
	0x03DC74B4 ADRP X8, 0x39D000
	0x03DC74B8 LDR X8, [X8 + 0x358]
	0x03DC74BC MOV X19, X0
	0x03DC74C0 LDR X8, [X8]
	0x03DC74C4 LDR W9, [X8 + 0xE0]
	0x03DC74C8 CBNZ W9, 0x3DC74D4
	0x03DC74CC MOV X0, X8
	0x03DC74D0 BL 0x1C16DFC
	0x03DC74D4 ADD X8, X31, 0x0
	0x03DC74D8 MOV X0, X31
	0x03DC74DC BL 0x3D45AA8
	0x03DC74E0 B 0x3DC7548
	0x03DC74E4 SUB W8, W20, 0x50000
	0x03DC74E8 CMP W8, 0x3
	0x03DC74EC B.HI 0x3DC75C8
	0x03DC74F0 ADRP X9, 0xFFFFFFFFFCDD1000
	0x03DC74F4 ADD X9, X9, 0xF2
	0x03DC74F8 ADR X10, 0x10
	0x03DC74FC LDRH W11, [X9, X8, LSL #1]
	0x03DC7500 ADD X10, X10, X11, 0x2, LSL
	0x03DC7504 BR X10
	0x03DC7508 ADRP X8, 0x39E000
	0x03DC750C LDR X8, [X8 + 0x310]
	0x03DC7510 ADD X0, X19, 0x18
	0x03DC7514 LDR X1, [X8]
	0x03DC7518 BL 0x266D23C
	0x03DC751C ADRP X8, 0x39D000
	0x03DC7520 LDR X8, [X8 + 0x358]
	0x03DC7524 MOV X19, X0
	0x03DC7528 LDR X8, [X8]
	0x03DC752C LDR W9, [X8 + 0xE0]
	0x03DC7530 CBNZ W9, 0x3DC753C
	0x03DC7534 MOV X0, X8
	0x03DC7538 BL 0x1C16DFC
	0x03DC753C ADD X8, X31, 0x0
	0x03DC7540 MOV X0, X31
	0x03DC7544 BL 0x3D467D0
	0x03DC7548 LDR X8, [X31 + 0x10]
	0x03DC754C LDR V0, [X31]
	0x03DC7550 STR X8, [X31 + 0x30]
	0x03DC7554 STR V0, [X31 + 0x2]
	0x03DC7558 STR X8, [X19 + 0x10]
	0x03DC755C STR V0, [X19]
	0x03DC7560 B 0x3DC8FD4
	0x03DC7564 SUB W8, W20, 0x60000
	0x03DC7568 CMP W8, 0x3
	0x03DC756C B.HI 0x3DC75C8
	0x03DC7570 ADRP X9, 0xFFFFFFFFFCDD1000
	0x03DC7574 ADD X9, X9, 0xFA
	0x03DC7578 ADR X10, 0x10
	0x03DC757C LDRH W11, [X9, X8, LSL #1]
	0x03DC7580 ADD X10, X10, X11, 0x2, LSL
	0x03DC7584 BR X10
	0x03DC7588 ADRP X8, 0x39E000
	0x03DC758C LDR X8, [X8 + 0x318]
	0x03DC7590 ADD X0, X19, 0x20
	0x03DC7594 LDR X1, [X8]
	0x03DC7598 BL 0x266D6BC
	0x03DC759C ADRP X9, 0x39D000
	0x03DC75A0 LDR X9, [X9 + 0x358]
	0x03DC75A4 MOV X8, X0
	0x03DC75A8 LDR X20, [X8]
	0x03DC75AC LDR X0, [X9]
	0x03DC75B0 LDR W9, [X0 + 0xE0]
	0x03DC75B4 CBNZ W9, 0x3DC75BC
	0x03DC75B8 BL 0x1C16DFC
	0x03DC75BC MOV X0, X31
	0x03DC75C0 BL 0x3D46AD0
	0x03DC75C4 B 0x3DC8098
	0x03DC75C8 ADRP X8, 0x39F000
	0x03DC75CC LDR X8, [X8 + 0x4A8]
	0x03DC75D0 ADD X1, X31, 0x20
	0x03DC75D4 STR W20, [X31 + 0x20]
	0x03DC75D8 LDR X0, [X8]
	0x03DC75DC BL 0x1C16E04
	0x03DC75E0 ADRP X8, 0x3A2000
	0x03DC75E4 LDR X8, [X8 + 0x260]
	0x03DC75E8 MOV X1, X0
	0x03DC75EC MOV X2, X31
	0x03DC75F0 LDR X8, [X8]
	0x03DC75F4 MOV X0, X8
	0x03DC75F8 BL 0x321EFD0
	0x03DC75FC ADRP X8, 0x32C000
	0x03DC7600 LDR X8, [X8 + 0xA28]
	0x03DC7604 MOV X19, X0
	0x03DC7608 LDR X8, [X8]
	0x03DC760C LDR W9, [X8 + 0xE0]
	0x03DC7610 CBNZ W9, 0x3DC761C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {253}
	006 Move W8, 0x7FC00000
	007 Move X19, X1
	008 Move X20, X0
	009 Move S0, W8
	010 Move X0, X1
	011 Move X1, X31
	012 Call YogaNode.set_Flex, X0, V0
	013 Move X0, X20
	014 Call ComputedStyle.get_flexGrow, X0
	015 Move X0, X19
	016 Move X1, X31
	017 Call YogaNode.set_FlexGrow, X0, V0
	018 Move X0, X20
	019 Call ComputedStyle.get_flexShrink, X0
	020 Move X0, X19
	021 Move X1, X31
	022 Call YogaNode.set_FlexShrink, X0, V0
	023 Move X0, X20
	024 Call ComputedStyle.get_flexBasis, X0
	025 Move X1, X31
	026 Call StyleValueExtensions.ToYogaValue, X0
	027 Move X1, X0
	028 Move X0, X19
	029 Move X2, X31
	030 Call YogaNode.set_FlexBasis, X0, X1
	031 Move X0, X20
	032 Call ComputedStyle.get_left, X0
	033 Move X1, X31
	034 Call StyleValueExtensions.ToYogaValue, X0
	035 Move X1, X0
	036 Move X0, X19
	037 Move X2, X31
	038 Call YogaNode.set_Left, X0, X1
	039 Move X0, X20
	040 Call ComputedStyle.get_top, X0
	041 Move X1, X31
	042 Call StyleValueExtensions.ToYogaValue, X0
	043 Move X1, X0
	044 Move X0, X19
	045 Move X2, X31
	046 Call YogaNode.set_Top, X0, X1
	047 Move X0, X20
	048 Call ComputedStyle.get_right, X0
	049 Move X1, X31
	050 Call StyleValueExtensions.ToYogaValue, X0
	051 Move X1, X0
	052 Move X0, X19
	053 Move X2, X31
	054 Call YogaNode.set_Right, X0, X1
	055 Move X0, X20
	056 Call ComputedStyle.get_bottom, X0
	057 Move X1, X31
	058 Call StyleValueExtensions.ToYogaValue, X0
	059 Move X1, X0
	060 Move X0, X19
	061 Move X2, X31
	062 Call YogaNode.set_Bottom, X0, X1
	063 Move X0, X20
	064 Call ComputedStyle.get_marginLeft, X0
	065 Move X1, X31
	066 Call StyleValueExtensions.ToYogaValue, X0
	067 Move X1, X0
	068 Move X0, X19
	069 Move X2, X31
	070 Call YogaNode.set_MarginLeft, X0, X1
	071 Move X0, X20
	072 Call ComputedStyle.get_marginTop, X0
	073 Move X1, X31
	074 Call StyleValueExtensions.ToYogaValue, X0
	075 Move X1, X0
	076 Move X0, X19
	077 Move X2, X31
	078 Call YogaNode.set_MarginTop, X0, X1
	079 Move X0, X20
	080 Call ComputedStyle.get_marginRight, X0
	081 Move X1, X31
	082 Call StyleValueExtensions.ToYogaValue, X0
	083 Move X1, X0
	084 Move X0, X19
	085 Move X2, X31
	086 Call YogaNode.set_MarginRight, X0, X1
	087 Move X0, X20
	088 Call ComputedStyle.get_marginBottom, X0
	089 Move X1, X31
	090 Call StyleValueExtensions.ToYogaValue, X0
	091 Move X1, X0
	092 Move X0, X19
	093 Move X2, X31
	094 Call YogaNode.set_MarginBottom, X0, X1
	095 Move X0, X20
	096 Call ComputedStyle.get_paddingLeft, X0
	097 Move X1, X31
	098 Call StyleValueExtensions.ToYogaValue, X0
	099 Move X1, X0
	100 Move X0, X19
	101 Move X2, X31
	102 Call YogaNode.set_PaddingLeft, X0, X1
	103 Move X0, X20
	104 Call ComputedStyle.get_paddingTop, X0
	105 Move X1, X31
	106 Call StyleValueExtensions.ToYogaValue, X0
	107 Move X1, X0
	108 Move X0, X19
	109 Move X2, X31
	110 Call YogaNode.set_PaddingTop, X0, X1
	111 Move X0, X20
	112 Call ComputedStyle.get_paddingRight, X0
	113 Move X1, X31
	114 Call StyleValueExtensions.ToYogaValue, X0
	115 Move X1, X0
	116 Move X0, X19
	117 Move X2, X31
	118 Call YogaNode.set_PaddingRight, X0, X1
	119 Move X0, X20
	120 Call ComputedStyle.get_paddingBottom, X0
	121 Move X1, X31
	122 Call StyleValueExtensions.ToYogaValue, X0
	123 Move X1, X0
	124 Move X0, X19
	125 Move X2, X31
	126 Call YogaNode.set_PaddingBottom, X0, X1
	127 Move X0, X20
	128 Call ComputedStyle.get_borderLeftWidth, X0
	129 Move X0, X19
	130 Move X1, X31
	131 Call YogaNode.set_BorderLeftWidth, X0, V0
	132 Move X0, X20
	133 Call ComputedStyle.get_borderTopWidth, X0
	134 Move X0, X19
	135 Move X1, X31
	136 Call YogaNode.set_BorderTopWidth, X0, V0
	137 Move X0, X20
	138 Call ComputedStyle.get_borderRightWidth, X0
	139 Move X0, X19
	140 Move X1, X31
	141 Call YogaNode.set_BorderRightWidth, X0, V0
	142 Move X0, X20
	143 Call ComputedStyle.get_borderBottomWidth, X0
	144 Move X0, X19
	145 Move X1, X31
	146 Call YogaNode.set_BorderBottomWidth, X0, V0
	147 Move X0, X20
	148 Call ComputedStyle.get_width, X0
	149 Move X1, X31
	150 Call StyleValueExtensions.ToYogaValue, X0
	151 Move X1, X0
	152 Move X0, X19
	153 Move X2, X31
	154 Call YogaNode.set_Width, X0, X1
	155 Move X0, X20
	156 Call ComputedStyle.get_height, X0
	157 Move X1, X31
	158 Call StyleValueExtensions.ToYogaValue, X0
	159 Move X1, X0
	160 Move X0, X19
	161 Move X2, X31
	162 Call YogaNode.set_Height, X0, X1
	163 Move X0, X20
	164 Call ComputedStyle.get_position, X0
	165 Move W1, W0
	166 Move X0, X19
	167 Move X2, X31
	168 Call YogaNode.set_PositionType, X0, X1
	169 Move X0, X20
	170 Call ComputedStyle.get_overflow, X0
	171 Move W1, W0
	172 Move X0, X19
	173 Move X2, X31
	174 Call YogaNode.set_Overflow, X0, X1
	175 Move X0, X20
	176 Call ComputedStyle.get_alignSelf, X0
	177 Move W1, W0
	178 Move X0, X19
	179 Move X2, X31
	180 Call YogaNode.set_AlignSelf, X0, X1
	181 Move X0, X20
	182 Call ComputedStyle.get_maxWidth, X0
	183 Move X1, X31
	184 Call StyleValueExtensions.ToYogaValue, X0
	185 Move X1, X0
	186 Move X0, X19
	187 Move X2, X31
	188 Call YogaNode.set_MaxWidth, X0, X1
	189 Move X0, X20
	190 Call ComputedStyle.get_maxHeight, X0
	191 Move X1, X31
	192 Call StyleValueExtensions.ToYogaValue, X0
	193 Move X1, X0
	194 Move X0, X19
	195 Move X2, X31
	196 Call YogaNode.set_MaxHeight, X0, X1
	197 Move X0, X20
	198 Call ComputedStyle.get_minWidth, X0
	199 Move X1, X31
	200 Call StyleValueExtensions.ToYogaValue, X0
	201 Move X1, X0
	202 Move X0, X19
	203 Move X2, X31
	204 Call YogaNode.set_MinWidth, X0, X1
	205 Move X0, X20
	206 Call ComputedStyle.get_minHeight, X0
	207 Move X1, X31
	208 Call StyleValueExtensions.ToYogaValue, X0
	209 Move X1, X0
	210 Move X0, X19
	211 Move X2, X31
	212 Call YogaNode.set_MinHeight, X0, X1
	213 Move X0, X20
	214 Call ComputedStyle.get_flexDirection, X0
	215 Move W1, W0
	216 Move X0, X19
	217 Move X2, X31
	218 Call YogaNode.set_FlexDirection, X0, X1
	219 Move X0, X20
	220 Call ComputedStyle.get_alignContent, X0
	221 Move W1, W0
	222 Move X0, X19
	223 Move X2, X31
	224 Call YogaNode.set_AlignContent, X0, X1
	225 Move X0, X20
	226 Call ComputedStyle.get_alignItems, X0
	227 Move W1, W0
	228 Move X0, X19
	229 Move X2, X31
	230 Call YogaNode.set_AlignItems, X0, X1
	231 Move X0, X20
	232 Call ComputedStyle.get_justifyContent, X0
	233 Move W1, W0
	234 Move X0, X19
	235 Move X2, X31
	236 Call YogaNode.set_JustifyContent, X0, X1
	237 Move X0, X20
	238 Call ComputedStyle.get_flexWrap, X0
	239 Move W1, W0
	240 Move X0, X19
	241 Move X2, X31
	242 Call YogaNode.set_Wrap, X0, X1
	243 Move X0, X20
	244 Call ComputedStyle.get_display, X0
	245 Move W1, W0
	246 Move X0, X19
	247 Move X20, [X31+16]
	248 Move X19, [X31+24]
	249 Move X2, X31
	250 Move X30, [X31+32]
	251 Call YogaNode.set_Display, X0, X1
	252 Return 
	253 Call 0x1C17F20

Method: System.Boolean ApplyGlobalKeyword(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.ComputedStyle parentStyle)

Disassembly:
	0x03DC80B4 ADRP X8, 0x39D000
	0x03DC80B8 LDR X8, [X8 + 0x318]
	0x03DC80BC ADD X0, X19, 0x20
	0x03DC80C0 LDR X1, [X8]
	0x03DC80C4 BL 0x266D6BC
	0x03DC80C8 ADRP X9, 0x39C000
	0x03DC80CC LDR X9, [X9 + 0x358]
	0x03DC80D0 MOV X8, X0
	0x03DC80D4 LDR X20, [X8 + 0x10]
	0x03DC80D8 LDR X0, [X9]
	0x03DC80DC LDR W9, [X0 + 0xE0]
	0x03DC80E0 CBNZ W9, 0x3DC80E8
	0x03DC80E4 BL 0x1C16DFC
	0x03DC80E8 MOV X0, X31
	0x03DC80EC BL 0x3D46BC0
	0x03DC80F0 ADRP X8, 0x39D000
	0x03DC80F4 LDR X8, [X8 + 0x398]
	0x03DC80F8 MOV X1, X0
	0x03DC80FC MOV X0, X20
	0x03DC8100 LDR X2, [X8]
	0x03DC8104 BL 0x2294EF4
	0x03DC8108 B 0x3DC8160
	0x03DC810C ADRP X8, 0x39D000
	0x03DC8110 LDR X8, [X8 + 0x318]
	0x03DC8114 ADD X0, X19, 0x20
	0x03DC8118 LDR X1, [X8]
	0x03DC811C BL 0x266D6BC
	0x03DC8120 ADRP X9, 0x39C000
	0x03DC8124 LDR X9, [X9 + 0x358]
	0x03DC8128 MOV X8, X0
	0x03DC812C LDR X20, [X8 + 0x18]
	0x03DC8130 LDR X0, [X9]
	0x03DC8134 LDR W9, [X0 + 0xE0]
	0x03DC8138 CBNZ W9, 0x3DC8140
	0x03DC813C BL 0x1C16DFC
	0x03DC8140 MOV X0, X31
	0x03DC8144 BL 0x3D46C38
	0x03DC8148 ADRP X8, 0x39D000
	0x03DC814C LDR X8, [X8 + 0x390]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {39}
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Move X0, X1
	012 Move W1, W31
	013 Move X2, X31
	014 Call StylePropertyReader.GetValue, X0, X1
	015 Move [X31+8], X1
	016 Add X0, X31, 8
	017 Move X1, X31
	018 Call StyleValueHandle.get_valueType, X0
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W0, W31
	021 Move W8, [X31+12]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X0, X20
	025 Move X1, X19
	026 Call ComputedStyle.ApplyInitialValue, X0, X1
	027 Move X0, X20
	028 Move X1, X19
	029 Move X2, X21
	030 Call ComputedStyle.ApplyUnsetValue, X0, X1, X2
	031 Move W0, 1
	032 Move W0, W31
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X30, [X31+16]
	036 Move X21, [X31+24]
	037 Add X31, X31, 48
	038 Return X0
	039 Call 0x1C17F20

Method: System.Boolean ApplyGlobalKeyword(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.StyleKeyword keyword, ref UnityEngine.UIElements.ComputedStyle parentStyle)

Disassembly:
	0x03DC81B8 LDR X1, [X8]
	0x03DC81BC BL 0x266C93C
	0x03DC81C0 ADRP X8, 0x39C000
	0x03DC81C4 LDR X8, [X8 + 0x358]
	0x03DC81C8 MOV X19, X0
	0x03DC81CC LDR X8, [X8]
	0x03DC81D0 LDR W9, [X8 + 0xE0]
	0x03DC81D4 CBNZ W9, 0x3DC81E0
	0x03DC81D8 MOV X0, X8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W19, W2
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Call ComputedStyle.ApplyInitialValue, X0, X1
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return X0

Method: System.Void RemoveCustomStyleProperty(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader)

Disassembly:
	0x03DC9FE8 RET
	0x03DC9FEC STP X30, X21, [X31 - 0x20]!
	0x03DC9FF0 STP X20, X19, [X31 + 0x10]
	0x03DC9FF4 ADRP X20, 0x61F000
	0x03DC9FF8 ADRP X21, 0x39C000
	0x03DC9FFC LDRB W8, [X20 + 0x190]
	0x03DCA000 B 0x3EB1A24
	0x03DCA004 MOV X19, X0
	0x03DCA008 TBNZ X8, 0x0, 0x3DCA020
	0x03DCA00C ADRP X0, 0x39B000
	0x03DCA010 LDR X0, [X0 + 0x368]
	0x03DCA014 BL 0x1C16CF4
	0x03DCA018 MOVZ W8, 0x1
	0x03DCA01C STRB W8, [X20 + 0x190]
	0x03DCA020 LDR X1, [X21]
	0x03DCA024 MOV X0, X19
	0x03DCA028 BL 0x266C4A0
	0x03DCA02C LDR W0, [X0 + 0x58]
	0x03DCA030 LDP X20, X19, [X31 + 0x10]
	0x03DCA034 LDP X30, X21, [X31], #0x20
	0x03DCA038 RET
	0x03DCA03C STP X30, X21, [X31 - 0x20]!
	0x03DCA040 STP X20, X19, [X31 + 0x10]
	0x03DCA044 ADRP X21, 0x61E000
	0x03DCA048 ADRP X20, 0x39B000
	0x03DCA04C LDRB W8, [X21 + 0x191]
	0x03DCA050 LDR X20, [X20 + 0x370]
	0x03DCA054 MOV X19, X0
	0x03DCA058 TBNZ X8, 0x0, 0x3DCA070
	0x03DCA05C ADRP X0, 0x39B000
	0x03DCA060 LDR X0, [X0 + 0x370]
	0x03DCA064 BL 0x1C16CF4
	0x03DCA068 MOVZ W8, 0x1
	0x03DCA06C STRB W8, [X21 + 0x191]
	0x03DCA070 LDR X1, [X20]
	0x03DCA074 ADD X0, X19, 0x10
	0x03DCA078 BL 0x266CDA0
	0x03DCA07C LDR W0, [X0 + 0x2C]
	0x03DCA080 LDP X20, X19, [X31 + 0x10]
	0x03DCA084 LDP X30, X21, [X31], #0x20
	0x03DCA088 RET
	0x03DCA08C STP X30, X21, [X31 - 0x20]!
	0x03DCA090 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x620000
	006 Move W8, [X21+331]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x3A0000
	014 Move X0, [X0+616]
	015 Call 0x1C17CF4
	016 Move X0, 0x3A0000
	017 Move X0, [X0+624]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+331], W8
	021 Compare X20, 0
	022 JumpIfEqual {60}
	023 Move X0, [X20+72]
	024 Compare X0, 0
	025 JumpIfEqual {60}
	026 Move X1, X31
	027 Call StyleProperty.get_name, X0
	028 Move X8, [X19+56]
	029 Compare X8, 0
	030 JumpIfEqual {55}
	031 Move X9, 0x3A0000
	032 Move X9, [X9+616]
	033 Move X20, X0
	034 Move X0, X8
	035 Move X1, X20
	036 Move X2, [X9]
	037 Call Dictionary`2<Object, StylePropertyValue>.ContainsKey, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {55}
	042 Move X0, [X19+56]
	043 Compare X0, 0
	044 JumpIfEqual {60}
	045 Move X8, 0x3A0000
	046 Move X8, [X8+624]
	047 Move X1, X20
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X2, [X8]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Call Dictionary`2<Object, StylePropertyValue>.Remove, X0, X1
	054 Return 
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return 
	060 Call 0x1C17F20

Method: System.Void ApplyCustomStyleProperty(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader)

Disassembly:
	0x03DCA094 ADRP X20, 0x61E000
	0x03DCA098 ADRP X21, 0x39B000
	0x03DCA09C LDRB W8, [X20 + 0x192]
	0x03DCA0A0 LDR X21, [X21 + 0x368]
	0x03DCA0A4 MOV X19, X0
	0x03DCA0A8 TBNZ X8, 0x0, 0x3DCA0C0
	0x03DCA0AC ADRP X0, 0x39B000
	0x03DCA0B0 LDR X0, [X0 + 0x368]
	0x03DCA0B4 BL 0x1C16CF4
	0x03DCA0B8 MOVZ W8, 0x1
	0x03DCA0BC STRB W8, [X20 + 0x192]
	0x03DCA0C0 LDR X1, [X21]
	0x03DCA0C4 MOV X0, X19
	0x03DCA0C8 BL 0x266C4A0
	0x03DCA0CC LDUR X0, [X0 + 0x5C]
	0x03DCA0D0 LDP X20, X19, [X31 + 0x10]
	0x03DCA0D4 LDP X30, X21, [X31], #0x20
	0x03DCA0D8 RET
	0x03DCA0DC STP X30, X21, [X31 - 0x20]!
	0x03DCA0E0 STP X20, X19, [X31 + 0x10]
	0x03DCA0E4 ADRP X21, 0x61E000
	0x03DCA0E8 ADRP X20, 0x39B000
	0x03DCA0EC LDRB W8, [X21 + 0x193]
	0x03DCA0F0 LDR X20, [X20 + 0x370]
	0x03DCA0F4 MOV X19, X0
	0x03DCA0F8 TBNZ X8, 0x0, 0x3DCA110
	0x03DCA0FC ADRP X0, 0x39B000
	0x03DCA100 LDR X0, [X0 + 0x370]
	0x03DCA104 BL 0x1C16CF4
	0x03DCA108 MOVZ W8, 0x1
	0x03DCA10C STRB W8, [X21 + 0x193]
	0x03DCA110 LDR X1, [X20]
	0x03DCA114 ADD X0, X19, 0x10
	0x03DCA118 BL 0x266CDA0
	0x03DCA11C LDR W0, [X0 + 0x30]
	0x03DCA120 LDP X20, X19, [X31 + 0x10]
	0x03DCA124 LDP X30, X21, [X31], #0x20
	0x03DCA128 RET
	0x03DCA12C STP X30, X21, [X31 - 0x20]!
	0x03DCA130 STP X20, X19, [X31 + 0x10]
	0x03DCA134 ADRP X21, 0x61E000
	0x03DCA138 ADRP X20, 0x39B000
	0x03DCA13C LDRB W8, [X21 + 0x194]
	0x03DCA140 LDR X20, [X20 + 0x370]
	0x03DCA144 MOV X19, X0
	0x03DCA148 TBNZ X8, 0x0, 0x3DCA160
	0x03DCA14C ADRP X0, 0x39B000
	0x03DCA150 LDR X0, [X0 + 0x370]
	0x03DCA154 BL 0x1C16CF4
	0x03DCA158 MOVZ W8, 0x1
	0x03DCA15C STRB W8, [X21 + 0x194]
	0x03DCA160 LDR X1, [X20]
	0x03DCA164 ADD X0, X19, 0x10
	0x03DCA168 BL 0x266CDA0
	0x03DCA16C LDR W0, [X0 + 0x34]
	0x03DCA170 LDP X20, X19, [X31 + 0x10]
	0x03DCA174 LDP X30, X21, [X31], #0x20
	0x03DCA178 RET
	0x03DCA17C STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x61F000
	007 Move W8, [X21+332]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x3A0000
	015 Move X0, [X0+632]
	016 Call 0x1C17CF4
	017 Move X0, 0x3A0000
	018 Move X0, [X0+640]
	019 Call 0x1C17CF4
	020 Move X0, 0x3A0000
	021 Move X0, [X0+648]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+332], W8
	025 Compare X20, 0
	026 JumpIfEqual {71}
	027 Move V0, [X20+88]
	028 Move X8, [X19+56]
	029 Move [X19+72], S0
	030 Compare X8, 0
	031 JumpIfNotEqual {42}
	032 Move X8, 0x3A0000
	033 Move X8, [X8+648]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move X8, 0x3A0000
	037 Move X8, [X8+632]
	038 Move X21, X0
	039 Move X1, [X8]
	040 Call Dictionary`2<Object, StylePropertyValue>..ctor, X0
	041 Move [X19+56], X21
	042 Move X22, [X20+72]
	043 Move X0, X20
	044 Move W1, W31
	045 Move X2, X31
	046 Call StylePropertyReader.GetValue, X0, X1
	047 Compare X22, 0
	048 JumpIfEqual {71}
	049 Move X19, [X19+56]
	050 Move X20, X0
	051 Move X21, X1
	052 Move X0, X22
	053 Move X1, X31
	054 Call StyleProperty.get_name, X0
	055 Compare X19, 0
	056 JumpIfEqual {71}
	057 Move X8, 0x3A0000
	058 Move X8, [X8+640]
	059 Move X1, X0
	060 Move X0, X19
	061 Move X2, X20
	062 Move X4, [X8]
	063 Move X3, X21
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Call Dictionary`2<Object, StylePropertyValue>.set_Item, X0, X1, X2
	070 Return 
	071 Call 0x1C17F20

Method: System.Void ApplyAllPropertyInitial()

Disassembly:
	0x03DCA180 STP X20, X19, [X31 + 0x10]
	0x03DCA184 ADRP X21, 0x61E000
	0x03DCA188 ADRP X20, 0x39B000
	0x03DCA18C LDRB W8, [X21 + 0x195]
	0x03DCA190 LDR X20, [X20 + 0x370]
	0x03DCA194 MOV X19, X0
	0x03DCA198 TBNZ X8, 0x0, 0x3DCA1B0
	0x03DCA19C ADRP X0, 0x39B000
	0x03DCA1A0 LDR X0, [X0 + 0x370]
	0x03DCA1A4 BL 0x1C16CF4
	0x03DCA1A8 MOVZ W8, 0x1
	0x03DCA1AC STRB W8, [X21 + 0x195]
	0x03DCA1B0 LDR X1, [X20]
	0x03DCA1B4 ADD X0, X19, 0x10
	0x03DCA1B8 BL 0x266CDA0
	0x03DCA1BC LDR W0, [X0 + 0x38]
	0x03DCA1C0 LDP X20, X19, [X31 + 0x10]
	0x03DCA1C4 LDP X30, X21, [X31], #0x20
	0x03DCA1C8 RET
	0x03DCA1CC STP X30, X21, [X31 - 0x20]!
	0x03DCA1D0 STP X20, X19, [X31 + 0x10]
	0x03DCA1D4 ADRP X21, 0x61E000
	0x03DCA1D8 ADRP X20, 0x39B000
	0x03DCA1DC LDRB W8, [X21 + 0x196]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x61F000
	006 Move X21, 0x39B000
	007 Move W8, [X20+333]
	008 Move X21, [X21+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39B000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+333], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call InitialStyle.Get
	026 Move X1, X0
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]

Method: System.Void ResetComputedTransitions()

Disassembly:
	0x03DCA328 MOV X19, X0
	0x03DCA32C TBNZ X8, 0x0, 0x3DCA344

ISIL:
	001 Move [X0+80], X31
	002 Return 

Method: System.Boolean StartAnimationInlineTranslate(UnityEngine.UIElements.VisualElement element, ref UnityEngine.UIElements.ComputedStyle computedStyle, UnityEngine.UIElements.StyleTranslate translate, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DCA330 ADRP X0, 0x39B000
	0x03DCA334 LDR X0, [X0 + 0x368]
	0x03DCA338 BL 0x1C16CF4
	0x03DCA33C MOVZ W8, 0x1
	0x03DCA340 STRB W8, [X20 + 0x19A]
	0x03DCA344 LDR X1, [X21]
	0x03DCA348 MOV X0, X19
	0x03DCA34C BL 0x266C4A0
	0x03DCA350 LDR V0, [X0 + 0x78]
	0x03DCA354 LDP X20, X19, [X31 + 0x10]
	0x03DCA358 LDP X30, X21, [X31], #0x20
	0x03DCA35C RET
	0x03DCA360 STP X30, X21, [X31 - 0x20]!
	0x03DCA364 STP X20, X19, [X31 + 0x10]
	0x03DCA368 ADRP X21, 0x61E000
	0x03DCA36C ADRP X20, 0x39B000
	0x03DCA370 LDRB W8, [X21 + 0x19B]
	0x03DCA374 LDR X20, [X20 + 0x370]
	0x03DCA378 MOV X19, X0
	0x03DCA37C TBNZ X8, 0x0, 0x3DCA394
	0x03DCA380 ADRP X0, 0x39B000
	0x03DCA384 LDR X0, [X0 + 0x370]
	0x03DCA388 BL 0x1C16CF4
	0x03DCA38C MOVZ W8, 0x1
	0x03DCA390 STRB W8, [X21 + 0x19B]
	0x03DCA394 LDR X1, [X20]
	0x03DCA398 ADD X0, X19, 0x10
	0x03DCA39C BL 0x266CDA0
	0x03DCA3A0 LDR W0, [X0 + 0x44]
	0x03DCA3A4 LDP X20, X19, [X31 + 0x10]
	0x03DCA3A8 LDP X30, X21, [X31], #0x20
	0x03DCA3AC RET
	0x03DCA3B0 STP X30, X21, [X31 - 0x20]!
	0x03DCA3B4 STP X20, X19, [X31 + 0x10]
	0x03DCA3B8 ADRP X20, 0x61E000
	0x03DCA3BC ADRP X21, 0x39B000
	0x03DCA3C0 LDRB W8, [X20 + 0x19C]
	0x03DCA3C4 LDR X21, [X21 + 0x368]
	0x03DCA3C8 MOV X19, X0
	0x03DCA3CC TBNZ X8, 0x0, 0x3DCA3E4
	0x03DCA3D0 ADRP X0, 0x39B000
	0x03DCA3D4 LDR X0, [X0 + 0x368]
	0x03DCA3D8 BL 0x1C16CF4
	0x03DCA3DC MOVZ W8, 0x1
	0x03DCA3E0 STRB W8, [X20 + 0x19C]
	0x03DCA3E4 LDR X1, [X21]
	0x03DCA3E8 MOV X0, X19
	0x03DCA3EC BL 0x266C4A0
	0x03DCA3F0 LDR W0, [X0 + 0x7C]
	0x03DCA3F4 LDP X20, X19, [X31 + 0x10]
	0x03DCA3F8 LDP X30, X21, [X31], #0x20
	0x03DCA3FC RET
	0x03DCA400 STP X30, X21, [X31 - 0x20]!
	0x03DCA404 STP X20, X19, [X31 + 0x10]
	0x03DCA408 ADRP X20, 0x61E000
	0x03DCA40C ADRP X21, 0x39B000
	0x03DCA410 LDRB W8, [X20 + 0x19D]
	0x03DCA414 LDR X21, [X21 + 0x368]
	0x03DCA418 MOV X19, X0
	0x03DCA41C TBNZ X8, 0x0, 0x3DCA434
	0x03DCA420 ADRP X0, 0x39B000
	0x03DCA424 LDR X0, [X0 + 0x368]
	0x03DCA428 BL 0x1C16CF4
	0x03DCA42C MOVZ W8, 0x1
	0x03DCA430 STRB W8, [X20 + 0x19D]
	0x03DCA434 LDR X1, [X21]
	0x03DCA438 MOV X0, X19
	0x03DCA43C BL 0x266C4A0
	0x03DCA440 LDR W0, [X0 + 0x80]
	0x03DCA444 LDP X20, X19, [X31 + 0x10]
	0x03DCA448 LDP X30, X21, [X31], #0x20
	0x03DCA44C RET
	0x03DCA450 STP X30, X21, [X31 - 0x20]!
	0x03DCA454 STP X20, X19, [X31 + 0x10]
	0x03DCA458 ADRP X20, 0x61E000
	0x03DCA45C ADRP X21, 0x39B000
	0x03DCA460 LDRB W8, [X20 + 0x19F]
	0x03DCA464 LDR X21, [X21 + 0x368]
	0x03DCA468 MOV X19, X0
	0x03DCA46C TBNZ X8, 0x0, 0x3DCA484
	0x03DCA470 ADRP X0, 0x39B000
	0x03DCA474 LDR X0, [X0 + 0x368]
	0x03DCA478 BL 0x1C16CF4
	0x03DCA47C MOVZ W8, 0x1
	0x03DCA480 STRB W8, [X20 + 0x19F]
	0x03DCA484 LDR X1, [X21]
	0x03DCA488 MOV X0, X19
	0x03DCA48C BL 0x266C4A0
	0x03DCA490 LDUR X0, [X0 + 0x84]
	0x03DCA494 LDP X20, X19, [X31 + 0x10]
	0x03DCA498 LDP X30, X21, [X31], #0x20
	0x03DCA49C RET
	0x03DCA4A0 STR X30, [X31 - 0x50]!
	0x03DCA4A4 STP X26, X25, [X31 + 0x10]
	0x03DCA4A8 STP X24, X23, [X31 + 0x20]
	0x03DCA4AC STP X22, X21, [X31 + 0x30]
	0x03DCA4B0 STP X20, X19, [X31 + 0x40]
	0x03DCA4B4 ADRP X22, 0x61E000
	0x03DCA4B8 ADRP X21, 0x39A000
	0x03DCA4BC MOV X19, X8
	0x03DCA4C0 LDRB W8, [X22 + 0x1A0]
	0x03DCA4C4 LDR X21, [X21 + 0x358]
	0x03DCA4C8 MOV X20, X0
	0x03DCA4CC TBNZ X8, 0x0, 0x3DCA52C
	0x03DCA4D0 ADRP X0, 0x39A000
	0x03DCA4D4 LDR X0, [X0 + 0x358]
	0x03DCA4D8 BL 0x1C16CF4
	0x03DCA4DC ADRP X0, 0x39F000
	0x03DCA4E0 LDR X0, [X0 + 0x2C0]
	0x03DCA4E4 BL 0x1C16CF4
	0x03DCA4E8 ADRP X0, 0x39F000
	0x03DCA4EC LDR X0, [X0 + 0x2C8]
	0x03DCA4F0 BL 0x1C16CF4
	0x03DCA4F4 ADRP X0, 0x39F000
	0x03DCA4F8 LDR X0, [X0 + 0x2D0]
	0x03DCA4FC BL 0x1C16CF4
	0x03DCA500 ADRP X0, 0x39F000
	0x03DCA504 LDR X0, [X0 + 0x2D8]
	0x03DCA508 BL 0x1C16CF4
	0x03DCA50C ADRP X0, 0x39F000
	0x03DCA510 LDR X0, [X0 + 0x2E0]
	0x03DCA514 BL 0x1C16CF4
	0x03DCA518 ADRP X0, 0x39F000
	0x03DCA51C LDR X0, [X0 + 0x2E8]
	0x03DCA520 BL 0x1C16CF4
	0x03DCA524 MOVZ W8, 0x1
	0x03DCA528 STRB W8, [X22 + 0x1A0]
	0x03DCA52C LDR X0, [X21]
	0x03DCA530 ADRP X21, 0x39F000
	0x03DCA534 ADRP X22, 0x39F000
	0x03DCA538 ADRP X23, 0x39F000
	0x03DCA53C ADRP X24, 0x39F000
	0x03DCA540 ADRP X25, 0x39F000
	0x03DCA544 ADRP X26, 0x39F000
	0x03DCA548 LDR X21, [X21 + 0x2C0]
	0x03DCA54C LDR X22, [X22 + 0x2E0]
	0x03DCA550 LDR W8, [X0 + 0xE0]
	0x03DCA554 LDR X23, [X23 + 0x2C8]
	0x03DCA558 LDR X24, [X24 + 0x2D0]
	0x03DCA55C LDR X25, [X25 + 0x2D8]
	0x03DCA560 LDR X26, [X26 + 0x2E8]
	0x03DCA564 CBNZ W8, 0x3DCA56C

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+256], X29
	003 Move [X31+272], X30
	004 Move [X31+280], X25
	005 Move [X31+288], X24
	006 Move [X31+296], X23
	007 Move [X31+304], X22
	008 Move [X31+312], X21
	009 Move [X31+320], X20
	010 Move [X31+328], X19
	011 Move X25, 0x61F000
	012 Move W8, [X25+334]
	013 Move X20, X5
	014 Move W21, W4
	015 Move W22, W3
	016 Move X23, X2
	017 Move X24, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0x354000
	024 Move X0, [X0+3792]
	025 Call 0x1C17CF4
	026 Move X0, 0x39B000
	027 Move X0, [X0+856]
	028 Call 0x1C17CF4
	029 Move X0, 0x39C000
	030 Move X0, [X0+888]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X25+334], W8
	034 Move X0, X23
	035 Move X1, X31
	036 Call StyleTranslate.get_keyword, X0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, 0x39B000
	039 Move X8, [X8+856]
	040 Move X0, [X8]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 224
	046 Move X0, X31
	047 Call InitialStyle.get_translate
	048 Add X8, X31, 224
	049 Move X0, X23
	050 Move X1, X31
	051 Call StyleTranslate.get_value, X0
	052 Move V0, [X31+14]
	053 Move X8, [X31+240]
	054 Move [X31+8], V0
	055 Move V0, [X31+8]
	056 Move [X31+144], X8
	057 Move [X31+176], X8
	058 Move [X31+10], V0
	059 Compare X19, 0
	060 JumpIfEqual {158}
	061 Move X25, 0x39C000
	062 Move X25, [X25+888]
	063 Move X0, X19
	064 Move X1, X31
	065 Call VisualElement.get_styleAnimation, X0
	066 Move X1, [X25]
	067 Move X23, X0
	068 Add X0, X24, 24
	069 Call StyleDataRef`1<TransformData>.Read, X0
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 Move V1, [X31+10]
	073 Move X9, [X31+176]
	074 Move [X31+112], X8
	075 Move [X31+6], V0
	076 Move [X31+4], V1
	077 Move [X31+80], X9
	078 Compare X23, 0
	079 JumpIfEqual {158}
	080 Move V0, [X31+6]
	081 Move X8, [X31+112]
	082 Move V1, [X31+4]
	083 Move X9, [X31+80]
	084 Move [X31+2], V0
	085 Move [X31+48], X8
	086 Move [X31], V1
	087 Move [X31+16], X9
	088 Move X10, 0x354000
	089 Move X8, [X23]
	090 Move X10, [X10+3792]
	091 NotImplemented "Instruction LDRH not yet implemented."
	092 Move X1, [X10]
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move W2, 10
	102 Move X0, X23
	103 Call 0x1C5D788
	104 Move W9, [X10]
	105 Add W9, W9, 10
	106 Add X8, X8, W9
	107 Add X0, X8, 312
	108 Move V0, [X31+2]
	109 Move X9, [X31+48]
	110 Move V1, [X31]
	111 Move X10, [X31+16]
	112 Move X8, [X0]
	113 Move [X31+14], V0
	114 Move [X31+240], X9
	115 Move [X31+12], V1
	116 Move [X31+208], X10
	117 Move X7, [X0+8]
	118 Move W1, 3
	119 Add X2, X31, 224
	120 Add X3, X31, 192
	121 NotImplemented "Instruction MOVK not yet implemented."
	122 Move X0, X23
	123 Move W4, W22
	124 Move W5, W21
	125 Move X6, X20
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move W20, W0
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {146}
	132 Move X0, X19
	133 Move X1, X31
	134 Call VisualElement.get_usageHints, X0
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {146}
	139 Move X0, X19
	140 Move X1, X31
	141 Call VisualElement.get_usageHints, X0
	142 Or W1, W0, 1
	143 Move X0, X19
	144 Move X2, X31
	145 Call VisualElement.set_usageHints, X0, X1
	146 And W0, W20, 1
	147 Move X20, [X31+320]
	148 Move X19, [X31+328]
	149 Move X22, [X31+304]
	150 Move X21, [X31+312]
	151 Move X24, [X31+288]
	152 Move X23, [X31+296]
	153 Move X30, [X31+272]
	154 Move X25, [X31+280]
	155 Move X29, [X31+256]
	156 Add X31, X31, 336
	157 Return X0
	158 Call 0x1C17F20

Method: UnityEngine.UIElements.Align get_alignContent()

Disassembly:
	0x03DC7F24 LDR X8, [X8]
	0x03DC7F28 LDR W9, [X8 + 0xE0]
	0x03DC7F2C CBNZ W9, 0x3DC7F38
	0x03DC7F30 MOV X0, X8
	0x03DC7F34 BL 0x1C16DFC
	0x03DC7F38 MOV X0, X31
	0x03DC7F3C BL 0x3D457D4
	0x03DC7F40 STP S0, S1, [X19 + 0xA4]
	0x03DC7F44 STP S2, S3, [X19 + 0xAC]
	0x03DC7F48 B 0x3DC8FD4
	0x03DC7F4C ADRP X8, 0x39E000
	0x03DC7F50 LDR X8, [X8 + 0x2F8]
	0x03DC7F54 ADD X0, X19, 0x28
	0x03DC7F58 LDR X1, [X8]
	0x03DC7F5C BL 0x266DB34
	0x03DC7F60 ADRP X8, 0x39D000
	0x03DC7F64 LDR X8, [X8 + 0x358]
	0x03DC7F68 MOV X19, X0
	0x03DC7F6C LDR X8, [X8]
	0x03DC7F70 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+335]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+335], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 Move W0, [X0]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Align get_alignItems()

Disassembly:
	0x03DC7F74 CBNZ W9, 0x3DC7F80
	0x03DC7F78 MOV X0, X8
	0x03DC7F7C BL 0x1C16DFC
	0x03DC7F80 MOV X0, X31
	0x03DC7F84 BL 0x3D45850
	0x03DC7F88 STUR X0, [X19 + 0xB4]
	0x03DC7F8C B 0x3DC8FD4
	0x03DC7F90 ADRP X8, 0x39E000
	0x03DC7F94 LDR X8, [X8 + 0x2F8]
	0x03DC7F98 ADD X0, X19, 0x28
	0x03DC7F9C LDR X1, [X8]
	0x03DC7FA0 BL 0x266DB34
	0x03DC7FA4 ADRP X8, 0x39D000
	0x03DC7FA8 LDR X8, [X8 + 0x358]
	0x03DC7FAC MOV X19, X0
	0x03DC7FB0 LDR X8, [X8]
	0x03DC7FB4 LDR W9, [X8 + 0xE0]
	0x03DC7FB8 CBNZ W9, 0x3DC7FC4
	0x03DC7FBC MOV X0, X8
	0x03DC7FC0 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+336]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+336], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 Move W0, [X0+4]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Align get_alignSelf()

Disassembly:
	0x03DC7D44 BL 0x3D45308
	0x03DC7D48 STR X0, [X19 + 0x48]
	0x03DC7D4C B 0x3DC8FD4
	0x03DC7D50 ADRP X8, 0x39E000
	0x03DC7D54 LDR X8, [X8 + 0x2F8]
	0x03DC7D58 ADD X0, X19, 0x28
	0x03DC7D5C LDR X1, [X8]
	0x03DC7D60 BL 0x266DB34
	0x03DC7D64 ADRP X8, 0x39D000
	0x03DC7D68 LDR X8, [X8 + 0x358]
	0x03DC7D6C MOV X19, X0
	0x03DC7D70 LDR X8, [X8]
	0x03DC7D74 LDR W9, [X8 + 0xE0]
	0x03DC7D78 CBNZ W9, 0x3DC7D84
	0x03DC7D7C MOV X0, X8
	0x03DC7D80 BL 0x1C16DFC
	0x03DC7D84 ADD X8, X31, 0x0
	0x03DC7D88 MOV X0, X31
	0x03DC7D8C BL 0x3D45380
	0x03DC7D90 LDR W8, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+337]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+337], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 Move W0, [X0+8]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.Color get_backgroundColor()

Disassembly:
	0x03DCA568 BL 0x1C16DFC
	0x03DCA56C MOV X0, X31
	0x03DCA570 BL 0x3D440C4
	0x03DCA574 LDR X1, [X21]
	0x03DCA578 MOV X21, X0
	0x03DCA57C MOV X0, X20
	0x03DCA580 BL 0x266C334
	0x03DCA584 LDR X1, [X22]
	0x03DCA588 MOV X20, X0
	0x03DCA58C ADD X0, X21, 0x8
	0x03DCA590 BL 0x266C7B4
	0x03DCA594 LDR X1, [X23]
	0x03DCA598 MOV X22, X0
	0x03DCA59C ADD X0, X21, 0x10
	0x03DCA5A0 BL 0x266CC34
	0x03DCA5A4 LDR X1, [X24]
	0x03DCA5A8 MOV X23, X0
	0x03DCA5AC ADD X0, X21, 0x18
	0x03DCA5B0 BL 0x266D0B4
	0x03DCA5B4 LDR X1, [X25]
	0x03DCA5B8 MOV X24, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+338]
	008 Move X20, [X20+864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+864]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+338], W8
	019 Move X1, [X20]
	020 Add X0, X19, 40
	021 Call StyleDataRef`1<VisualData>.Read, X0
	022 Move S0, [X0]
	023 Move S1, [X0+4]
	024 Move S2, [X0+8]
	025 Move S3, [X0+12]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: UnityEngine.UIElements.Background get_backgroundImage()

Disassembly:
	0x03DCA5BC ADD X0, X21, 0x20
	0x03DCA5C0 BL 0x266D534
	0x03DCA5C4 LDR X1, [X26]
	0x03DCA5C8 MOV X25, X0
	0x03DCA5CC ADD X0, X21, 0x28
	0x03DCA5D0 BL 0x266D9AC
	0x03DCA5D4 MOVZ W8, 0x3F800000
	0x03DCA5D8 STP X20, X22, [X19]
	0x03DCA5DC STP X23, X24, [X19 + 0x10]
	0x03DCA5E0 STP X25, X0, [X19 + 0x20]
	0x03DCA5E4 STP X31, X31, [X19 + 0x38]
	0x03DCA5E8 STR X31, [X19 + 0x30]
	0x03DCA5EC STUR X31, [X19 + 0x4C]
	0x03DCA5F0 STR W8, [X19 + 0x48]
	0x03DCA5F4 STR W31, [X19 + 0x54]
	0x03DCA5F8 LDP X20, X19, [X31 + 0x40]
	0x03DCA5FC LDP X22, X21, [X31 + 0x30]
	0x03DCA600 LDP X24, X23, [X31 + 0x20]
	0x03DCA604 LDP X26, X25, [X31 + 0x10]
	0x03DCA608 LDR X30, [X31], #0x50
	0x03DCA60C RET
	0x03DCA610 STR X30, [X31 - 0x50]!
	0x03DCA614 STP X26, X25, [X31 + 0x10]
	0x03DCA618 STP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x61F000
	007 Move X21, 0x39C000
	008 Move X19, X8
	009 Move W8, [X22+339]
	010 Move X21, [X21+864]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x39C000
	017 Move X0, [X0+864]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+339], W8
	021 Move X1, [X21]
	022 Add X0, X20, 40
	023 Call StyleDataRef`1<VisualData>.Read, X0
	024 Move V0, [X0+16]
	025 Move V1, [X0+32]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move [X19], V0
	029 Move [X19+8], V1
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+48]
	033 Return X0

Method: UnityEngine.UIElements.BackgroundPosition get_backgroundPositionX()

Disassembly:
	0x03DCA61C STP X22, X21, [X31 + 0x30]
	0x03DCA620 STP X20, X19, [X31 + 0x40]
	0x03DCA624 ADRP X25, 0x61E000
	0x03DCA628 ADRP X26, 0x39F000
	0x03DCA62C ADRP X20, 0x39F000
	0x03DCA630 ADRP X21, 0x39F000
	0x03DCA634 ADRP X22, 0x39F000
	0x03DCA638 ADRP X23, 0x39F000
	0x03DCA63C ADRP X24, 0x39F000
	0x03DCA640 MOV X19, X8
	0x03DCA644 LDR X26, [X26 + 0x2F0]
	0x03DCA648 LDRB W8, [X25 + 0x1A1]
	0x03DCA64C LDR X20, [X20 + 0x2F8]
	0x03DCA650 LDR X21, [X21 + 0x300]
	0x03DCA654 LDR X22, [X22 + 0x308]
	0x03DCA658 LDR X23, [X23 + 0x310]
	0x03DCA65C LDR X24, [X24 + 0x318]
	0x03DCA660 TBNZ X8, 0x0, 0x3DCA6B4
	0x03DCA664 ADRP X0, 0x39F000
	0x03DCA668 LDR X0, [X0 + 0x308]
	0x03DCA66C BL 0x1C16CF4
	0x03DCA670 ADRP X0, 0x39F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+340]
	008 Move X20, [X20+864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+864]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+340], W8
	019 Move X1, [X20]
	020 Add X0, X19, 40
	021 Call StyleDataRef`1<VisualData>.Read, X0
	022 Move X8, [X0+48]
	023 Move W1, [X0+56]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, X8
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: UnityEngine.UIElements.BackgroundPosition get_backgroundPositionY()

Disassembly:
	0x03DCA674 LDR X0, [X0 + 0x2F0]
	0x03DCA678 BL 0x1C16CF4
	0x03DCA67C ADRP X0, 0x39F000
	0x03DCA680 LDR X0, [X0 + 0x2F8]
	0x03DCA684 BL 0x1C16CF4
	0x03DCA688 ADRP X0, 0x39F000
	0x03DCA68C LDR X0, [X0 + 0x310]
	0x03DCA690 BL 0x1C16CF4
	0x03DCA694 ADRP X0, 0x39F000
	0x03DCA698 LDR X0, [X0 + 0x318]
	0x03DCA69C BL 0x1C16CF4
	0x03DCA6A0 ADRP X0, 0x39F000
	0x03DCA6A4 LDR X0, [X0 + 0x300]
	0x03DCA6A8 BL 0x1C16CF4
	0x03DCA6AC MOVZ W8, 0x1
	0x03DCA6B0 STRB W8, [X25 + 0x1A1]
	0x03DCA6B4 LDR X0, [X26]
	0x03DCA6B8 BL 0x266C564
	0x03DCA6BC LDR X8, [X20]
	0x03DCA6C0 MOV X20, X0
	0x03DCA6C4 MOV X0, X8
	0x03DCA6C8 BL 0x266C9E4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+341]
	008 Move X20, [X20+864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+864]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+341], W8
	019 Move X1, [X20]
	020 Add X0, X19, 40
	021 Call StyleDataRef`1<VisualData>.Read, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move W1, [X0+68]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, X8
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: UnityEngine.UIElements.BackgroundRepeat get_backgroundRepeat()

Disassembly:
	0x03DCA6CC LDR X8, [X21]
	0x03DCA6D0 MOV X21, X0
	0x03DCA6D4 MOV X0, X8
	0x03DCA6D8 BL 0x266CE64
	0x03DCA6DC LDR X8, [X22]
	0x03DCA6E0 MOV X22, X0
	0x03DCA6E4 MOV X0, X8
	0x03DCA6E8 BL 0x266D2E4
	0x03DCA6EC LDR X8, [X23]
	0x03DCA6F0 MOV X23, X0
	0x03DCA6F4 MOV X0, X8
	0x03DCA6F8 BL 0x266D764
	0x03DCA6FC LDR X8, [X24]
	0x03DCA700 MOV X24, X0
	0x03DCA704 MOV X0, X8
	0x03DCA708 BL 0x266DBDC
	0x03DCA70C MOVZ W8, 0x3F800000
	0x03DCA710 STP X20, X21, [X19]
	0x03DCA714 STP X22, X23, [X19 + 0x10]
	0x03DCA718 STP X24, X0, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+342]
	008 Move X20, [X20+864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+864]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+342], W8
	019 Move X1, [X20]
	020 Add X0, X19, 40
	021 Call StyleDataRef`1<VisualData>.Read, X0
	022 Move X0, [X0+72]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.BackgroundSize get_backgroundSize()

Disassembly:
	0x03DCA71C STP X31, X31, [X19 + 0x38]
	0x03DCA720 STR X31, [X19 + 0x30]
	0x03DCA724 STUR X31, [X19 + 0x4C]
	0x03DCA728 STR W8, [X19 + 0x48]
	0x03DCA72C STR W31, [X19 + 0x54]
	0x03DCA730 LDP X20, X19, [X31 + 0x40]
	0x03DCA734 LDP X22, X21, [X31 + 0x30]
	0x03DCA738 LDP X24, X23, [X31 + 0x20]
	0x03DCA73C LDP X26, X25, [X31 + 0x10]
	0x03DCA740 LDR X30, [X31], #0x50
	0x03DCA744 RET
	0x03DCA748 STP X30, X27, [X31 - 0x50]!
	0x03DCA74C STP X26, X25, [X31 + 0x10]
	0x03DCA750 STP X24, X23, [X31 + 0x20]
	0x03DCA754 STP X22, X21, [X31 + 0x30]
	0x03DCA758 STP X20, X19, [X31 + 0x40]
	0x03DCA75C ADRP X26, 0x61E000
	0x03DCA760 ADRP X27, 0x39F000
	0x03DCA764 ADRP X25, 0x39F000
	0x03DCA768 ADRP X24, 0x39F000
	0x03DCA76C ADRP X23, 0x39F000
	0x03DCA770 ADRP X22, 0x39F000
	0x03DCA774 ADRP X21, 0x39F000
	0x03DCA778 MOV X20, X8
	0x03DCA77C LDR X27, [X27 + 0x2C0]
	0x03DCA780 LDRB W8, [X26 + 0x1A2]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x61F000
	007 Move X21, 0x39C000
	008 Move X19, X8
	009 Move W8, [X22+343]
	010 Move X21, [X21+864]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x39C000
	017 Move X0, [X0+864]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+343], W8
	021 Move X1, [X21]
	022 Add X0, X20, 40
	023 Call StyleDataRef`1<VisualData>.Read, X0
	024 Move V0, [X0+5]
	025 Move W8, [X0+96]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move [X19], V0
	029 Move [X19+16], W8
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+48]
	033 Return X0

Method: UnityEngine.Color get_borderBottomColor()

Disassembly:
	0x03DCA784 LDR X25, [X25 + 0x2E0]
	0x03DCA788 LDR X24, [X24 + 0x2C8]
	0x03DCA78C LDR X23, [X23 + 0x2D0]
	0x03DCA790 LDR X22, [X22 + 0x2D8]
	0x03DCA794 LDR X21, [X21 + 0x2E8]
	0x03DCA798 MOV X19, X0
	0x03DCA79C TBNZ X8, 0x0, 0x3DCA7F0
	0x03DCA7A0 ADRP X0, 0x39F000
	0x03DCA7A4 LDR X0, [X0 + 0x2C0]
	0x03DCA7A8 BL 0x1C16CF4
	0x03DCA7AC ADRP X0, 0x39F000
	0x03DCA7B0 LDR X0, [X0 + 0x2C8]
	0x03DCA7B4 BL 0x1C16CF4
	0x03DCA7B8 ADRP X0, 0x39F000
	0x03DCA7BC LDR X0, [X0 + 0x2D0]
	0x03DCA7C0 BL 0x1C16CF4
	0x03DCA7C4 ADRP X0, 0x39F000
	0x03DCA7C8 LDR X0, [X0 + 0x2D8]
	0x03DCA7CC BL 0x1C16CF4
	0x03DCA7D0 ADRP X0, 0x39F000
	0x03DCA7D4 LDR X0, [X0 + 0x2E0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+344]
	008 Move X20, [X20+864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+864]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+344], W8
	019 Move X1, [X20]
	020 Add X0, X19, 40
	021 Call StyleDataRef`1<VisualData>.Read, X0
	022 Move S0, [X0+100]
	023 Move S1, [X0+104]
	024 Move S2, [X0+108]
	025 Move S3, [X0+112]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: UnityEngine.UIElements.Length get_borderBottomLeftRadius()

Disassembly:
	0x03DCA7D8 BL 0x1C16CF4
	0x03DCA7DC ADRP X0, 0x39F000
	0x03DCA7E0 LDR X0, [X0 + 0x2E8]
	0x03DCA7E4 BL 0x1C16CF4
	0x03DCA7E8 MOVZ W8, 0x1
	0x03DCA7EC STRB W8, [X26 + 0x1A2]
	0x03DCA7F0 LDR X1, [X27]
	0x03DCA7F4 MOV X0, X19
	0x03DCA7F8 BL 0x266C334
	0x03DCA7FC LDR X1, [X25]
	0x03DCA800 ADD X0, X19, 0x8
	0x03DCA804 BL 0x266C7B4
	0x03DCA808 LDR X1, [X24]
	0x03DCA80C ADD X0, X19, 0x10
	0x03DCA810 BL 0x266CC34
	0x03DCA814 LDR X1, [X23]
	0x03DCA818 ADD X0, X19, 0x18
	0x03DCA81C BL 0x266D0B4
	0x03DCA820 LDR X1, [X22]
	0x03DCA824 ADD X0, X19, 0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+345]
	008 Move X20, [X20+864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+864]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+345], W8
	019 Move X1, [X20]
	020 Add X0, X19, 40
	021 Call StyleDataRef`1<VisualData>.Read, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_borderBottomRightRadius()

Disassembly:
	0x03DCA828 BL 0x266D534
	0x03DCA82C LDR X1, [X21]
	0x03DCA830 ADD X0, X19, 0x28
	0x03DCA834 BL 0x266D9AC
	0x03DCA838 MOVZ W2, 0x58
	0x03DCA83C MOV X0, X20
	0x03DCA840 MOV X1, X19
	0x03DCA844 BL 0x3EB1AC0
	0x03DCA848 LDP X20, X19, [X31 + 0x40]
	0x03DCA84C LDP X22, X21, [X31 + 0x30]
	0x03DCA850 LDP X24, X23, [X31 + 0x20]
	0x03DCA854 LDP X26, X25, [X31 + 0x10]
	0x03DCA858 LDP X30, X27, [X31], #0x50
	0x03DCA85C RET
	0x03DCA860 STR X30, [X31 - 0x50]!
	0x03DCA864 STP X26, X25, [X31 + 0x10]
	0x03DCA868 STP X24, X23, [X31 + 0x20]
	0x03DCA86C STP X22, X21, [X31 + 0x30]
	0x03DCA870 STP X20, X19, [X31 + 0x40]
	0x03DCA874 ADRP X25, 0x61E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+346]
	008 Move X20, [X20+864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+864]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+346], W8
	019 Move X1, [X20]
	020 Add X0, X19, 40
	021 Call StyleDataRef`1<VisualData>.Read, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: System.Single get_borderBottomWidth()

Disassembly:
	0x03DC7BB4 LDR W8, [X31 + 0x10]
	0x03DC7BB8 LDR V0, [X31]
	0x03DC7BBC STR W8, [X31 + 0x30]
	0x03DC7BC0 STR V0, [X31 + 0x2]
	0x03DC7BC4 STR W8, [X19 + 0x38]
	0x03DC7BC8 STUR V0, [X19 + 0x28]
	0x03DC7BCC B 0x3DC8FD4
	0x03DC7BD0 ADRP X8, 0x39E000
	0x03DC7BD4 LDR X8, [X8 + 0x310]
	0x03DC7BD8 ADD X0, X19, 0x18
	0x03DC7BDC LDR X1, [X8]
	0x03DC7BE0 BL 0x266D23C
	0x03DC7BE4 ADRP X8, 0x39D000
	0x03DC7BE8 LDR X8, [X8 + 0x358]
	0x03DC7BEC MOV X19, X0
	0x03DC7BF0 LDR X8, [X8]
	0x03DC7BF4 LDR W9, [X8 + 0xE0]
	0x03DC7BF8 CBNZ W9, 0x3DC7C04
	0x03DC7BFC MOV X0, X8
	0x03DC7C00 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+347]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+347], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 Move V0, [X0+12]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return V0

Method: UnityEngine.Color get_borderLeftColor()

Disassembly:
	0x03DCA878 ADRP X26, 0x39F000
	0x03DCA87C ADRP X24, 0x39F000
	0x03DCA880 ADRP X23, 0x39F000
	0x03DCA884 ADRP X22, 0x39F000
	0x03DCA888 ADRP X21, 0x39F000
	0x03DCA88C ADRP X20, 0x39F000
	0x03DCA890 LDR X26, [X26 + 0x320]
	0x03DCA894 LDRB W8, [X25 + 0x1A3]
	0x03DCA898 LDR X24, [X24 + 0x328]
	0x03DCA89C LDR X23, [X23 + 0x330]
	0x03DCA8A0 LDR X22, [X22 + 0x338]
	0x03DCA8A4 LDR X21, [X21 + 0x340]
	0x03DCA8A8 LDR X20, [X20 + 0x348]
	0x03DCA8AC MOV X19, X0
	0x03DCA8B0 TBNZ X8, 0x0, 0x3DCA904
	0x03DCA8B4 ADRP X0, 0x39F000
	0x03DCA8B8 LDR X0, [X0 + 0x320]
	0x03DCA8BC BL 0x1C16CF4
	0x03DCA8C0 ADRP X0, 0x39F000
	0x03DCA8C4 LDR X0, [X0 + 0x330]
	0x03DCA8C8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+348]
	008 Move X20, [X20+864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+864]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+348], W8
	019 Move X1, [X20]
	020 Add X0, X19, 40
	021 Call StyleDataRef`1<VisualData>.Read, X0
	022 Move S0, [X0+132]
	023 Move S1, [X0+136]
	024 Move S2, [X0+140]
	025 Move S3, [X0+144]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Single get_borderLeftWidth()

Disassembly:
	0x03DC7AC4 LDR X1, [X21]
	0x03DC7AC8 MOV X0, X19
	0x03DC7ACC BL 0x266DB34
	0x03DC7AD0 MOV X19, X0
	0x03DC7AD4 B 0x3DC7D84
	0x03DC7AD8 ADRP X21, 0x39E000
	0x03DC7ADC LDR X21, [X21 + 0x300]
	0x03DC7AE0 MOV X0, X19
	0x03DC7AE4 LDR X1, [X21]
	0x03DC7AE8 BL 0x266C4BC
	0x03DC7AEC ADRP X8, 0x39D000
	0x03DC7AF0 LDR X8, [X8 + 0x358]
	0x03DC7AF4 MOV X20, X0
	0x03DC7AF8 LDR X8, [X8]
	0x03DC7AFC LDR W9, [X8 + 0xE0]
	0x03DC7B00 CBNZ W9, 0x3DC7B0C
	0x03DC7B04 MOV X0, X8
	0x03DC7B08 BL 0x1C16DFC
	0x03DC7B0C MOV X0, X31
	0x03DC7B10 BL 0x3D472CC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+349]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+349], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 Move V0, [X0+16]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return V0

Method: UnityEngine.Color get_borderRightColor()

Disassembly:
	0x03DCA8CC ADRP X0, 0x39F000
	0x03DCA8D0 LDR X0, [X0 + 0x348]
	0x03DCA8D4 BL 0x1C16CF4
	0x03DCA8D8 ADRP X0, 0x39F000
	0x03DCA8DC LDR X0, [X0 + 0x340]
	0x03DCA8E0 BL 0x1C16CF4
	0x03DCA8E4 ADRP X0, 0x39F000
	0x03DCA8E8 LDR X0, [X0 + 0x328]
	0x03DCA8EC BL 0x1C16CF4
	0x03DCA8F0 ADRP X0, 0x39F000
	0x03DCA8F4 LDR X0, [X0 + 0x338]
	0x03DCA8F8 BL 0x1C16CF4
	0x03DCA8FC MOVZ W8, 0x1
	0x03DCA900 STRB W8, [X25 + 0x1A3]
	0x03DCA904 LDR X1, [X26]
	0x03DCA908 MOV X0, X19
	0x03DCA90C BL 0x266C37C
	0x03DCA910 LDR X1, [X24]
	0x03DCA914 ADD X0, X19, 0x8
	0x03DCA918 BL 0x266C7FC
	0x03DCA91C LDR X1, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+350]
	008 Move X20, [X20+864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+864]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+350], W8
	019 Move X1, [X20]
	020 Add X0, X19, 40
	021 Call StyleDataRef`1<VisualData>.Read, X0
	022 Move S0, [X0+148]
	023 Move S1, [X0+152]
	024 Move S2, [X0+156]
	025 Move S3, [X0+160]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Single get_borderRightWidth()

Disassembly:
	0x03DC7B64 MOV X0, X31
	0x03DC7B68 BL 0x3D46858
	0x03DC7B6C STP X0, X1, [X19 + 0x18]
	0x03DC7B70 B 0x3DC8FD4
	0x03DC7B74 ADRP X8, 0x39E000
	0x03DC7B78 LDR X8, [X8 + 0x310]
	0x03DC7B7C ADD X0, X19, 0x18
	0x03DC7B80 LDR X1, [X8]
	0x03DC7B84 BL 0x266D23C
	0x03DC7B88 ADRP X8, 0x39D000
	0x03DC7B8C LDR X8, [X8 + 0x358]
	0x03DC7B90 MOV X19, X0
	0x03DC7B94 LDR X8, [X8]
	0x03DC7B98 LDR W9, [X8 + 0xE0]
	0x03DC7B9C CBNZ W9, 0x3DC7BA8
	0x03DC7BA0 MOV X0, X8
	0x03DC7BA4 BL 0x1C16DFC
	0x03DC7BA8 ADD X8, X31, 0x0
	0x03DC7BAC MOV X0, X31
	0x03DC7BB0 BL 0x3D46A48

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+351]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+351], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 Move V0, [X0+20]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return V0

Method: UnityEngine.Color get_borderTopColor()

Disassembly:
	0x03DCA920 ADD X0, X19, 0x10
	0x03DCA924 BL 0x266CC7C
	0x03DCA928 LDR X1, [X22]
	0x03DCA92C ADD X0, X19, 0x18
	0x03DCA930 BL 0x266D0FC
	0x03DCA934 LDR X1, [X21]
	0x03DCA938 ADD X0, X19, 0x20
	0x03DCA93C BL 0x266D57C
	0x03DCA940 LDR X1, [X20]
	0x03DCA944 ADD X0, X19, 0x28
	0x03DCA948 LDP X20, X19, [X31 + 0x40]
	0x03DCA94C LDP X22, X21, [X31 + 0x30]
	0x03DCA950 LDP X24, X23, [X31 + 0x20]
	0x03DCA954 LDP X26, X25, [X31 + 0x10]
	0x03DCA958 LDR X30, [X31], #0x50
	0x03DCA95C B 0x266D9F4
	0x03DCA960 SUB X31, X31, 0xB0
	0x03DCA964 STP X29, X30, [X31 + 0x50]
	0x03DCA968 STP X28, X27, [X31 + 0x60]
	0x03DCA96C STP X26, X25, [X31 + 0x70]
	0x03DCA970 STP X24, X23, [X31 + 0x80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+352]
	008 Move X20, [X20+864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+864]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+352], W8
	019 Move X1, [X20]
	020 Add X0, X19, 40
	021 Call StyleDataRef`1<VisualData>.Read, X0
	022 Move S0, [X0+164]
	023 Move S1, [X0+168]
	024 Move S2, [X0+172]
	025 Move S3, [X0+176]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: UnityEngine.UIElements.Length get_borderTopLeftRadius()

Disassembly:
	0x03DCA974 STP X22, X21, [X31 + 0x90]
	0x03DCA978 STP X20, X19, [X31 + 0xA0]
	0x03DCA97C ADRP X22, 0x61E000
	0x03DCA980 LDRB W8, [X22 + 0x1A5]
	0x03DCA984 MOV X19, X2
	0x03DCA988 MOV X20, X1
	0x03DCA98C MOV X21, X0
	0x03DCA990 TBNZ X8, 0x0, 0x3DCAA14
	0x03DCA994 ADRP X0, 0x329000
	0x03DCA998 LDR X0, [X0 + 0xA28]
	0x03DCA99C BL 0x1C16CF4
	0x03DCA9A0 ADRP X0, 0x39B000
	0x03DCA9A4 LDR X0, [X0 + 0x388]
	0x03DCA9A8 BL 0x1C16CF4
	0x03DCA9AC ADRP X0, 0x39B000
	0x03DCA9B0 LDR X0, [X0 + 0x308]
	0x03DCA9B4 BL 0x1C16CF4
	0x03DCA9B8 ADRP X0, 0x39B000
	0x03DCA9BC LDR X0, [X0 + 0x300]
	0x03DCA9C0 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+353]
	008 Move X20, [X20+864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+864]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+353], W8
	019 Move X1, [X20]
	020 Add X0, X19, 40
	021 Call StyleDataRef`1<VisualData>.Read, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_borderTopRightRadius()

Disassembly:
	0x03DCA9C4 ADRP X0, 0x39B000
	0x03DCA9C8 LDR X0, [X0 + 0x318]
	0x03DCA9CC BL 0x1C16CF4
	0x03DCA9D0 ADRP X0, 0x39B000
	0x03DCA9D4 LDR X0, [X0 + 0x310]
	0x03DCA9D8 BL 0x1C16CF4
	0x03DCA9DC ADRP X0, 0x39B000
	0x03DCA9E0 LDR X0, [X0 + 0x2F8]
	0x03DCA9E4 BL 0x1C16CF4
	0x03DCA9E8 ADRP X0, 0x39B000
	0x03DCA9EC LDR X0, [X0 + 0x2F0]
	0x03DCA9F0 BL 0x1C16CF4
	0x03DCA9F4 ADRP X0, 0x39C000
	0x03DCA9F8 LDR X0, [X0 + 0x4A8]
	0x03DCA9FC BL 0x1C16CF4
	0x03DCAA00 ADRP X0, 0x39F000
	0x03DCAA04 LDR X0, [X0 + 0x350]
	0x03DCAA08 BL 0x1C16CF4
	0x03DCAA0C MOVZ W8, 0x1
	0x03DCAA10 STRB W8, [X22 + 0x1A5]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+354]
	008 Move X20, [X20+864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+864]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+354], W8
	019 Move X1, [X20]
	020 Add X0, X19, 40
	021 Call StyleDataRef`1<VisualData>.Read, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: System.Single get_borderTopWidth()

Disassembly:
	0x03DC7B14 STP S0, S1, [X20 + 0x68]
	0x03DC7B18 STP S2, S3, [X20 + 0x70]
	0x03DC7B1C LDR X1, [X21]
	0x03DC7B20 MOV X0, X19
	0x03DC7B24 BL 0x266C4BC
	0x03DC7B28 MOV X19, X0
	0x03DC7B2C B 0x3DC8C94
	0x03DC7B30 ADRP X8, 0x39E000
	0x03DC7B34 LDR X8, [X8 + 0x310]
	0x03DC7B38 ADD X0, X19, 0x18
	0x03DC7B3C LDR X1, [X8]
	0x03DC7B40 BL 0x266D23C
	0x03DC7B44 ADRP X8, 0x39D000
	0x03DC7B48 LDR X8, [X8 + 0x358]
	0x03DC7B4C MOV X19, X0
	0x03DC7B50 LDR X8, [X8]
	0x03DC7B54 LDR W9, [X8 + 0xE0]
	0x03DC7B58 CBNZ W9, 0x3DC7B64
	0x03DC7B5C MOV X0, X8
	0x03DC7B60 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+355]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+355], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 Move V0, [X0+24]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return V0

Method: UnityEngine.UIElements.Length get_bottom()

Disassembly:
	0x03DC77F4 MOV X0, X19
	0x03DC77F8 LDR X1, [X21]
	0x03DC77FC BL 0x266C93C
	0x03DC7800 ADRP X8, 0x39D000
	0x03DC7804 LDR X8, [X8 + 0x358]
	0x03DC7808 MOV X20, X0
	0x03DC780C LDR X8, [X8]
	0x03DC7810 LDR W9, [X8 + 0xE0]
	0x03DC7814 CBNZ W9, 0x3DC7820
	0x03DC7818 MOV X0, X8
	0x03DC781C BL 0x1C16DFC
	0x03DC7820 MOV X0, X31
	0x03DC7824 BL 0x3D45C98
	0x03DC7828 STR S0, [X20 + 0x34]
	0x03DC782C LDR X1, [X21]
	0x03DC7830 MOV X0, X19
	0x03DC7834 BL 0x266C93C
	0x03DC7838 MOV X20, X0
	0x03DC783C MOV X0, X31
	0x03DC7840 BL 0x3D45D10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+356]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+356], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.Color get_color()

Disassembly:
	0x03DCAA14 CBZ X20, 0x3DCBD6C
	0x03DCAA18 LDR X8, [X20 + 0x48]
	0x03DCAA1C CBZ X8, 0x3DCBD4C
	0x03DCAA20 LDR W27, [X20 + 0x50]
	0x03DCAA24 MOVZ W29, 0x20
	0x03DCAA28 MOVZ W25, 0xA
	0x03DCAA2C ADRP X26, 0xFFFFFFFFFCDCE000
	0x03DCAA30 ADRP X28, 0xFFFFFFFFFCDCE000
	0x03DCAA34 ADD X22, X21, 0x8
	0x03DCAA38 ADD X23, X21, 0x10
	0x03DCAA3C ADD X24, X21, 0x28
	0x03DCAA40 ADD X9, X21, 0x20
	0x03DCAA44 ADD X8, X21, 0x18
	0x03DCAA48 MOVK W29, 0x20000
	0x03DCAA4C MOVK W25, 0x40000
	0x03DCAA50 ADD X26, X26, 0x1BA
	0x03DCAA54 ADD X28, X28, 0x13E
	0x03DCAA58 STP X8, X9, [X31]
	0x03DCAA5C MOV X0, X21
	0x03DCAA60 MOV X1, X20
	0x03DCAA64 MOV X2, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x61F000
	006 Move X21, 0x39C000
	007 Move W8, [X20+357]
	008 Move X21, [X21+872]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+357], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x266D4A0, X0
	022 Move S0, [X0]
	023 Move S1, [X0+4]
	024 Move S2, [X0+8]
	025 Move S3, [X0+12]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: UnityEngine.UIElements.Cursor get_cursor()

Disassembly:
	0x03DCAA68 BL 0x3DC70B4
	0x03DCAA6C TBZ X0, 0x0, 0x3DCAA8C
	0x03DCAA70 MOV X0, X20
	0x03DCAA74 MOV X1, X31
	0x03DCAA78 BL 0x3D4F270
	0x03DCAA7C LDR X8, [X20 + 0x48]
	0x03DCAA80 MOV W27, W0
	0x03DCAA84 CBNZ X8, 0x3DCAA5C
	0x03DCAA88 B 0x3DCBD4C
	0x03DCAA8C CMP W27, W29
	0x03DCAA90 B.LE 0x3DCAAD0
	0x03DCAA94 CMP W27, W25
	0x03DCAA98 B.LE 0x3DCAB28
	0x03DCAA9C SUB W8, W27, 0x70000
	0x03DCAAA0 CMP W8, 0xF
	0x03DCAAA4 B.HI 0x3DCAC94
	0x03DCAAA8 ADR X9, 0x10
	0x03DCAAAC LDRH W10, [X26, X8, LSL #1]
	0x03DCAAB0 ADD X9, X9, X10, 0x2, LSL
	0x03DCAAB4 BR X9
	0x03DCAAB8 ADRP X8, 0x39B000
	0x03DCAABC LDR X8, [X8 + 0x2F8]
	0x03DCAAC0 MOV X0, X24
	0x03DCAAC4 LDR X1, [X8]
	0x03DCAAC8 BL 0x266DB34
	0x03DCAACC B 0x3DCAC74

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x61F000
	007 Move X21, 0x39C000
	008 Move X19, X8
	009 Move W8, [X22+358]
	010 Move X21, [X21+880]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x39C000
	017 Move X0, [X0+880]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+358], W8
	021 Move X1, [X21]
	022 Add X0, X20, 16
	023 Call StyleDataRef`1<RareData>.Read, X0
	024 Move V0, [X0]
	025 Move X8, [X0+16]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move [X19], V0
	029 Move [X19+16], X8
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+48]
	033 Return X0

Method: UnityEngine.UIElements.DisplayStyle get_display()

Disassembly:
	0x03DC8064 ADD X0, X19, 0x20
	0x03DC8068 LDR X1, [X8]
	0x03DC806C BL 0x266D6BC
	0x03DC8070 ADRP X9, 0x39C000
	0x03DC8074 LDR X9, [X9 + 0x358]
	0x03DC8078 MOV X8, X0
	0x03DC807C LDR X20, [X8 + 0x8]
	0x03DC8080 LDR X0, [X9]
	0x03DC8084 LDR W9, [X0 + 0xE0]
	0x03DC8088 CBNZ W9, 0x3DC8090
	0x03DC808C BL 0x1C16DFC
	0x03DC8090 MOV X0, X31
	0x03DC8094 BL 0x3D46B48
	0x03DC8098 ADRP X8, 0x39D000
	0x03DC809C LDR X8, [X8 + 0x3A0]
	0x03DC80A0 MOV X1, X0
	0x03DC80A4 MOV X0, X20
	0x03DC80A8 LDR X2, [X8]
	0x03DC80AC BL 0x2294F60
	0x03DC80B0 B 0x3DC8160

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x621000
	006 Move X20, 0x39E000
	007 Move W8, [X21+359]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39E000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+359], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 Move W0, [X0+36]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_flexBasis()

Disassembly:
	0x03DC76B4 LDR X1, [X21]
	0x03DC76B8 MOV X0, X19
	0x03DC76BC BL 0x266DB34
	0x03DC76C0 MOV X19, X0
	0x03DC76C4 B 0x3DC7EA8
	0x03DC76C8 ADRP X21, 0x39E000
	0x03DC76CC LDR X21, [X21 + 0x2F8]
	0x03DC76D0 ADD X19, X19, 0x28
	0x03DC76D4 MOV X0, X19
	0x03DC76D8 LDR X1, [X21]
	0x03DC76DC BL 0x266DB34
	0x03DC76E0 ADRP X8, 0x39D000
	0x03DC76E4 LDR X8, [X8 + 0x358]
	0x03DC76E8 MOV X20, X0
	0x03DC76EC LDR X8, [X8]
	0x03DC76F0 LDR W9, [X8 + 0xE0]
	0x03DC76F4 CBNZ W9, 0x3DC7700
	0x03DC76F8 MOV X0, X8
	0x03DC76FC BL 0x1C16DFC
	0x03DC7700 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+360]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+360], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 Move X0, [X0+40]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.FlexDirection get_flexDirection()

Disassembly:
	0x03DC7ED4 LDR X8, [X8 + 0x358]
	0x03DC7ED8 MOV X19, X0
	0x03DC7EDC LDR X8, [X8]
	0x03DC7EE0 LDR W9, [X8 + 0xE0]
	0x03DC7EE4 CBNZ W9, 0x3DC7EF0
	0x03DC7EE8 MOV X0, X8
	0x03DC7EEC BL 0x1C16DFC
	0x03DC7EF0 MOV X0, X31
	0x03DC7EF4 BL 0x3D456E0
	0x03DC7EF8 STP S0, S1, [X19 + 0x94]
	0x03DC7EFC STP S2, S3, [X19 + 0x9C]
	0x03DC7F00 B 0x3DC8FD4
	0x03DC7F04 ADRP X8, 0x39E000
	0x03DC7F08 LDR X8, [X8 + 0x2F8]
	0x03DC7F0C ADD X0, X19, 0x28
	0x03DC7F10 LDR X1, [X8]
	0x03DC7F14 BL 0x266DB34
	0x03DC7F18 ADRP X8, 0x39D000
	0x03DC7F1C LDR X8, [X8 + 0x358]
	0x03DC7F20 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+361]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+361], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 Move W0, [X0+48]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: System.Single get_flexGrow()

Disassembly:
	0x03DC7614 MOV X0, X8
	0x03DC7618 BL 0x1C16DFC
	0x03DC761C MOV X0, X19
	0x03DC7620 MOV X1, X31
	0x03DC7624 BL 0x3C070A4
	0x03DC7628 B 0x3DC8FD4
	0x03DC762C ADRP X21, 0x39E000
	0x03DC7630 LDR X21, [X21 + 0x2F8]
	0x03DC7634 ADD X19, X19, 0x28
	0x03DC7638 MOV X0, X19
	0x03DC763C LDR X1, [X21]
	0x03DC7640 BL 0x266DB34
	0x03DC7644 ADRP X8, 0x39D000
	0x03DC7648 LDR X8, [X8 + 0x358]
	0x03DC764C MOV X20, X0
	0x03DC7650 LDR X8, [X8]
	0x03DC7654 LDR W9, [X8 + 0xE0]
	0x03DC7658 CBNZ W9, 0x3DC7664
	0x03DC765C MOV X0, X8
	0x03DC7660 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+362]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+362], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 Move V0, [X0+52]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return V0

Method: System.Single get_flexShrink()

Disassembly:
	0x03DC7664 MOV X0, X31
	0x03DC7668 BL 0x3D457D4
	0x03DC766C STP S0, S1, [X20 + 0xA4]
	0x03DC7670 STP S2, S3, [X20 + 0xAC]
	0x03DC7674 LDR X1, [X21]
	0x03DC7678 MOV X0, X19
	0x03DC767C BL 0x266DB34
	0x03DC7680 MOV X20, X0
	0x03DC7684 MOV X0, X31
	0x03DC7688 BL 0x3D456E0
	0x03DC768C STP S0, S1, [X20 + 0x94]
	0x03DC7690 STP S2, S3, [X20 + 0x9C]
	0x03DC7694 LDR X1, [X21]
	0x03DC7698 MOV X0, X19
	0x03DC769C BL 0x266DB34
	0x03DC76A0 MOV X20, X0
	0x03DC76A4 MOV X0, X31
	0x03DC76A8 BL 0x3D45408
	0x03DC76AC STP S0, S1, [X20 + 0x64]
	0x03DC76B0 STP S2, S3, [X20 + 0x6C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+363]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+363], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 Move V0, [X0+56]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return V0

Method: UnityEngine.UIElements.Wrap get_flexWrap()

Disassembly:
	0x03DC8014 B 0x3DC8FD4
	0x03DC8018 ADRP X8, 0x39D000
	0x03DC801C LDR X8, [X8 + 0x2F8]
	0x03DC8020 ADD X0, X19, 0x28
	0x03DC8024 LDR X1, [X8]
	0x03DC8028 BL 0x266DB34
	0x03DC802C ADRP X8, 0x39C000
	0x03DC8030 LDR X8, [X8 + 0x358]
	0x03DC8034 MOV X19, X0
	0x03DC8038 LDR X8, [X8]
	0x03DC803C LDR W9, [X8 + 0xE0]
	0x03DC8040 CBNZ W9, 0x3DC804C
	0x03DC8044 MOV X0, X8
	0x03DC8048 BL 0x1C16DFC
	0x03DC804C MOV X0, X31
	0x03DC8050 BL 0x3D46488
	0x03DC8054 STR W0, [X19 + 0xC8]
	0x03DC8058 B 0x3DC8FD4
	0x03DC805C ADRP X8, 0x39D000
	0x03DC8060 LDR X8, [X8 + 0x318]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x621000
	006 Move X20, 0x39E000
	007 Move W8, [X21+364]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39E000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+364], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 Move W0, [X0+60]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_fontSize()

Disassembly:
	0x03DC71E0 STP X30, X23, [X31 + 0x40]
	0x03DC71E4 STP X22, X21, [X31 + 0x50]
	0x03DC71E8 STP X20, X19, [X31 + 0x60]
	0x03DC71EC ADRP X21, 0x621000
	0x03DC71F0 LDRB W8, [X21 + 0x1C2]
	0x03DC71F4 MOV W20, W1
	0x03DC71F8 MOV X19, X0
	0x03DC71FC TBNZ X8, 0x0, 0x3DC72A4
	0x03DC7200 ADRP X0, 0x32C000
	0x03DC7204 LDR X0, [X0 + 0xA28]
	0x03DC7208 BL 0x1C16CF4
	0x03DC720C ADRP X0, 0x39D000
	0x03DC7210 LDR X0, [X0 + 0x358]
	0x03DC7214 BL 0x1C16CF4
	0x03DC7218 ADRP X0, 0x39E000
	0x03DC721C LDR X0, [X0 + 0x308]
	0x03DC7220 BL 0x1C16CF4
	0x03DC7224 ADRP X0, 0x39E000
	0x03DC7228 LDR X0, [X0 + 0x300]
	0x03DC722C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x622000
	006 Move X21, 0x39F000
	007 Move W8, [X20+365]
	008 Move X21, [X21+872]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+365], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x266D4A0, X0
	022 Move X0, [X0+16]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_height()

Disassembly:
	0x03DC7C54 CBNZ W9, 0x3DC7C60
	0x03DC7C58 MOV X0, X8
	0x03DC7C5C BL 0x1C16DFC
	0x03DC7C60 ADD X8, X31, 0x0
	0x03DC7C64 MOV X0, X31
	0x03DC7C68 BL 0x3D45188
	0x03DC7C6C LDP V1, V0, [X31]
	0x03DC7C70 STP V1, V0, [X31 + 0x20]
	0x03DC7C74 STP V1, V0, [X19 + 0x10]
	0x03DC7C78 B 0x3DC8FD4
	0x03DC7C7C ADRP X8, 0x39E000
	0x03DC7C80 LDR X8, [X8 + 0x2F8]
	0x03DC7C84 ADD X0, X19, 0x28
	0x03DC7C88 LDR X1, [X8]
	0x03DC7C8C BL 0x266DB34
	0x03DC7C90 ADRP X8, 0x39D000
	0x03DC7C94 LDR X8, [X8 + 0x358]
	0x03DC7C98 MOV X19, X0
	0x03DC7C9C LDR X8, [X8]
	0x03DC7CA0 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+366]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+366], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 Move X0, [X0+64]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Justify get_justifyContent()

Disassembly:
	0x03DC7FC4 MOV X0, X31
	0x03DC7FC8 BL 0x3D458C8
	0x03DC7FCC STUR X0, [X19 + 0xBC]
	0x03DC7FD0 B 0x3DC8FD4
	0x03DC7FD4 ADRP X8, 0x39E000
	0x03DC7FD8 LDR X8, [X8 + 0x2F8]
	0x03DC7FDC ADD X0, X19, 0x28
	0x03DC7FE0 LDR X1, [X8]
	0x03DC7FE4 BL 0x266DB34
	0x03DC7FE8 ADRP X8, 0x39D000
	0x03DC7FEC LDR X8, [X8 + 0x358]
	0x03DC7FF0 MOV X19, X0
	0x03DC7FF4 LDR X8, [X8]
	0x03DC7FF8 LDR W9, [X8 + 0xE0]
	0x03DC7FFC CBNZ W9, 0x3DC8008
	0x03DC8000 MOV X0, X8
	0x03DC8004 BL 0x1C16DFC
	0x03DC8008 MOV X0, X31
	0x03DC800C BL 0x3D46410
	0x03DC8010 STR S0, [X19 + 0xC4]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+367]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+367], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 Move W0, [X0+72]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_left()

Disassembly:
	0x03DC7704 BL 0x3D45850
	0x03DC7708 STUR X0, [X20 + 0xB4]
	0x03DC770C LDR X1, [X21]
	0x03DC7710 MOV X0, X19
	0x03DC7714 BL 0x266DB34
	0x03DC7718 MOV X20, X0
	0x03DC771C MOV X0, X31
	0x03DC7720 BL 0x3D458C8
	0x03DC7724 STUR X0, [X20 + 0xBC]
	0x03DC7728 LDR X1, [X21]
	0x03DC772C MOV X0, X19
	0x03DC7730 BL 0x266DB34
	0x03DC7734 MOV X20, X0
	0x03DC7738 MOV X0, X31
	0x03DC773C BL 0x3D454FC
	0x03DC7740 STUR X0, [X20 + 0x7C]
	0x03DC7744 LDR X1, [X21]
	0x03DC7748 MOV X0, X19
	0x03DC774C BL 0x266DB34
	0x03DC7750 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+368]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+368], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_letterSpacing()

Disassembly:
	0x03DCAAD0 CMP W27, 0x0
	0x03DCAAD4 B.LE 0x3DCAB88
	0x03DCAAD8 SUB W8, W27, 0x20000
	0x03DCAADC CMP W8, 0x20
	0x03DCAAE0 B.HI 0x3DCAC3C
	0x03DCAAE4 ADR X9, 0x10
	0x03DCAAE8 LDRH W10, [X28, X8, LSL #1]
	0x03DCAAEC ADD X9, X9, X10, 0x2, LSL
	0x03DCAAF0 BR X9
	0x03DCAAF4 ADRP X8, 0x39B000
	0x03DCAAF8 LDR X8, [X8 + 0x2F0]
	0x03DCAAFC MOV X0, X22
	0x03DCAB00 LDR X1, [X8]
	0x03DCAB04 BL 0x266C93C
	0x03DCAB08 MOV X27, X0
	0x03DCAB0C MOV X0, X20
	0x03DCAB10 MOV W1, W31
	0x03DCAB14 MOV W2, W31
	0x03DCAB18 MOV X3, X31
	0x03DCAB1C BL 0x3D497F8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x61F000
	006 Move X21, 0x39C000
	007 Move W8, [X20+369]
	008 Move X21, [X21+872]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+369], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x266D4A0, X0
	022 Move X0, [X0+24]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_marginBottom()

Disassembly:
	0x03DC7934 MOV X0, X19
	0x03DC7938 BL 0x266C93C
	0x03DC793C MOV X20, X0
	0x03DC7940 MOV X0, X31
	0x03DC7944 BL 0x3D465F0
	0x03DC7948 STUR X0, [X20 + 0xA4]
	0x03DC794C LDR X1, [X21]
	0x03DC7950 MOV X0, X19
	0x03DC7954 BL 0x266C93C
	0x03DC7958 MOV X20, X0
	0x03DC795C MOV X0, X31
	0x03DC7960 BL 0x3D46500
	0x03DC7964 STUR X0, [X20 + 0x94]
	0x03DC7968 LDR X1, [X21]
	0x03DC796C MOV X0, X19
	0x03DC7970 BL 0x266C93C
	0x03DC7974 MOV X19, X0
	0x03DC7978 B 0x3DC8830
	0x03DC797C ADRP X22, 0x39E000
	0x03DC7980 LDR X22, [X22 + 0x318]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+370]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+370], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_marginLeft()

Disassembly:
	0x03DC7844 STR S0, [X20 + 0x38]
	0x03DC7848 LDR X1, [X21]
	0x03DC784C MOV X0, X19
	0x03DC7850 BL 0x266C93C
	0x03DC7854 MOV X19, X0
	0x03DC7858 B 0x3DC83BC
	0x03DC785C ADRP X21, 0x39E000
	0x03DC7860 LDR X21, [X21 + 0x2F0]
	0x03DC7864 ADD X19, X19, 0x8
	0x03DC7868 MOV X0, X19
	0x03DC786C LDR X1, [X21]
	0x03DC7870 BL 0x266C93C
	0x03DC7874 ADRP X8, 0x39D000
	0x03DC7878 LDR X8, [X8 + 0x358]
	0x03DC787C MOV X20, X0
	0x03DC7880 LDR X8, [X8]
	0x03DC7884 LDR W9, [X8 + 0xE0]
	0x03DC7888 CBNZ W9, 0x3DC7894
	0x03DC788C MOV X0, X8
	0x03DC7890 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+371]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+371], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_marginRight()

Disassembly:
	0x03DC78E4 MOV X19, X0
	0x03DC78E8 B 0x3DC8618
	0x03DC78EC ADRP X21, 0x39E000
	0x03DC78F0 LDR X21, [X21 + 0x2F0]
	0x03DC78F4 ADD X19, X19, 0x8
	0x03DC78F8 MOV X0, X19
	0x03DC78FC LDR X1, [X21]
	0x03DC7900 BL 0x266C93C
	0x03DC7904 ADRP X8, 0x39D000
	0x03DC7908 LDR X8, [X8 + 0x358]
	0x03DC790C MOV X20, X0
	0x03DC7910 LDR X8, [X8]
	0x03DC7914 LDR W9, [X8 + 0xE0]
	0x03DC7918 CBNZ W9, 0x3DC7924
	0x03DC791C MOV X0, X8
	0x03DC7920 BL 0x1C16DFC
	0x03DC7924 MOV X0, X31
	0x03DC7928 BL 0x3D46668
	0x03DC792C STUR X0, [X20 + 0xAC]
	0x03DC7930 LDR X1, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+372]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+372], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_marginTop()

Disassembly:
	0x03DC7894 MOV X0, X31
	0x03DC7898 BL 0x3D461B8
	0x03DC789C STUR X0, [X20 + 0x6C]
	0x03DC78A0 LDR X1, [X21]
	0x03DC78A4 MOV X0, X19
	0x03DC78A8 BL 0x266C93C
	0x03DC78AC MOV X20, X0
	0x03DC78B0 MOV X0, X31
	0x03DC78B4 BL 0x3D46140
	0x03DC78B8 STUR X0, [X20 + 0x64]
	0x03DC78BC LDR X1, [X21]
	0x03DC78C0 MOV X0, X19
	0x03DC78C4 BL 0x266C93C
	0x03DC78C8 MOV X20, X0
	0x03DC78CC MOV X0, X31
	0x03DC78D0 BL 0x3D46050
	0x03DC78D4 STUR X0, [X20 + 0x54]
	0x03DC78D8 LDR X1, [X21]
	0x03DC78DC MOV X0, X19
	0x03DC78E0 BL 0x266C93C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+373]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+373], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_maxHeight()

Disassembly:
	0x03DC7DE4 BL 0x3D45408
	0x03DC7DE8 STP S0, S1, [X19 + 0x64]
	0x03DC7DEC STP S2, S3, [X19 + 0x6C]
	0x03DC7DF0 B 0x3DC8FD4
	0x03DC7DF4 ADRP X8, 0x39E000
	0x03DC7DF8 LDR X8, [X8 + 0x2F8]
	0x03DC7DFC ADD X0, X19, 0x28
	0x03DC7E00 LDR X1, [X8]
	0x03DC7E04 BL 0x266DB34
	0x03DC7E08 ADRP X8, 0x39D000
	0x03DC7E0C LDR X8, [X8 + 0x358]
	0x03DC7E10 MOV X19, X0
	0x03DC7E14 LDR X8, [X8]
	0x03DC7E18 LDR W9, [X8 + 0xE0]
	0x03DC7E1C CBNZ W9, 0x3DC7E28
	0x03DC7E20 MOV X0, X8
	0x03DC7E24 BL 0x1C16DFC
	0x03DC7E28 MOV X0, X31
	0x03DC7E2C BL 0x3D45484
	0x03DC7E30 B 0x3DC86E8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+374]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+374], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_maxWidth()

Disassembly:
	0x03DC7D94 LDR V0, [X31]
	0x03DC7D98 STR W8, [X31 + 0x30]
	0x03DC7D9C STR V0, [X31 + 0x2]
	0x03DC7DA0 STR W8, [X19 + 0x60]
	0x03DC7DA4 STR V0, [X19 + 0x5]
	0x03DC7DA8 B 0x3DC8FD4
	0x03DC7DAC ADRP X8, 0x39E000
	0x03DC7DB0 LDR X8, [X8 + 0x2F8]
	0x03DC7DB4 ADD X0, X19, 0x28
	0x03DC7DB8 LDR X1, [X8]
	0x03DC7DBC BL 0x266DB34
	0x03DC7DC0 ADRP X8, 0x39D000
	0x03DC7DC4 LDR X8, [X8 + 0x358]
	0x03DC7DC8 MOV X19, X0
	0x03DC7DCC LDR X8, [X8]
	0x03DC7DD0 LDR W9, [X8 + 0xE0]
	0x03DC7DD4 CBNZ W9, 0x3DC7DE0
	0x03DC7DD8 MOV X0, X8
	0x03DC7DDC BL 0x1C16DFC
	0x03DC7DE0 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+375]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+375], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_minHeight()

Disassembly:
	0x03DC7E84 BL 0x266DB34
	0x03DC7E88 ADRP X8, 0x39D000
	0x03DC7E8C LDR X8, [X8 + 0x358]
	0x03DC7E90 MOV X19, X0
	0x03DC7E94 LDR X8, [X8]
	0x03DC7E98 LDR W9, [X8 + 0xE0]
	0x03DC7E9C CBNZ W9, 0x3DC7EA8
	0x03DC7EA0 MOV X0, X8
	0x03DC7EA4 BL 0x1C16DFC
	0x03DC7EA8 MOV X0, X31
	0x03DC7EAC BL 0x3D455EC
	0x03DC7EB0 STP S0, S1, [X19 + 0x84]
	0x03DC7EB4 STP S2, S3, [X19 + 0x8C]
	0x03DC7EB8 B 0x3DC8FD4
	0x03DC7EBC ADRP X8, 0x39E000
	0x03DC7EC0 LDR X8, [X8 + 0x2F8]
	0x03DC7EC4 ADD X0, X19, 0x28
	0x03DC7EC8 LDR X1, [X8]
	0x03DC7ECC BL 0x266DB34
	0x03DC7ED0 ADRP X8, 0x39D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+376]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+376], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_minWidth()

Disassembly:
	0x03DC7E34 ADRP X8, 0x39E000
	0x03DC7E38 LDR X8, [X8 + 0x2F8]
	0x03DC7E3C ADD X0, X19, 0x28
	0x03DC7E40 LDR X1, [X8]
	0x03DC7E44 BL 0x266DB34
	0x03DC7E48 ADRP X8, 0x39D000
	0x03DC7E4C LDR X8, [X8 + 0x358]
	0x03DC7E50 MOV X19, X0
	0x03DC7E54 LDR X8, [X8]
	0x03DC7E58 LDR W9, [X8 + 0xE0]
	0x03DC7E5C CBNZ W9, 0x3DC7E68
	0x03DC7E60 MOV X0, X8
	0x03DC7E64 BL 0x1C16DFC
	0x03DC7E68 MOV X0, X31
	0x03DC7E6C BL 0x3D454FC
	0x03DC7E70 B 0x3DC872C
	0x03DC7E74 ADRP X8, 0x39E000
	0x03DC7E78 LDR X8, [X8 + 0x2F8]
	0x03DC7E7C ADD X0, X19, 0x28
	0x03DC7E80 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+377]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+377], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: System.Single get_opacity()

Disassembly:
	0x03DCAB20 STR W0, [X27]
	0x03DCAB24 B 0x3DCAA70
	0x03DCAB28 SUB W8, W27, 0x40000
	0x03DCAB2C CMP W8, 0xA
	0x03DCAB30 B.LS 0x3DCABF8
	0x03DCAB34 SUB W8, W27, 0x30000
	0x03DCAB38 CMP W8, 0x9
	0x03DCAB3C B.HI 0x3DCAB94
	0x03DCAB40 ADRP X11, 0xFFFFFFFFFCDCE000
	0x03DCAB44 ADD X11, X11, 0x180
	0x03DCAB48 ADR X9, 0x10
	0x03DCAB4C LDRH W10, [X11, X8, LSL #1]
	0x03DCAB50 ADD X9, X9, X10, 0x2, LSL
	0x03DCAB54 BR X9
	0x03DCAB58 ADRP X8, 0x39B000
	0x03DCAB5C LDR X8, [X8 + 0x308]
	0x03DCAB60 MOV X0, X23
	0x03DCAB64 LDR X1, [X8]
	0x03DCAB68 BL 0x266CDBC
	0x03DCAB6C MOV X27, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+378]
	008 Move X20, [X20+864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+864]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+378], W8
	019 Move X1, [X20]
	020 Add X0, X19, 40
	021 Call StyleDataRef`1<VisualData>.Read, X0
	022 Move V0, [X0+196]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return V0

Method: UnityEngine.UIElements.OverflowInternal get_overflow()

Disassembly:
	0x03DC7CF4 BL 0x1C16DFC
	0x03DC7CF8 MOV X0, X31
	0x03DC7CFC BL 0x3D45288
	0x03DC7D00 STUR X0, [X19 + 0x3C]
	0x03DC7D04 STR W1, [X19 + 0x44]
	0x03DC7D08 B 0x3DC8FD4
	0x03DC7D0C ADRP X8, 0x39E000
	0x03DC7D10 LDR X8, [X8 + 0x2F8]
	0x03DC7D14 ADD X0, X19, 0x28
	0x03DC7D18 LDR X1, [X8]
	0x03DC7D1C BL 0x266DB34
	0x03DC7D20 ADRP X8, 0x39D000
	0x03DC7D24 LDR X8, [X8 + 0x358]
	0x03DC7D28 MOV X19, X0
	0x03DC7D2C LDR X8, [X8]
	0x03DC7D30 LDR W9, [X8 + 0xE0]
	0x03DC7D34 CBNZ W9, 0x3DC7D40
	0x03DC7D38 MOV X0, X8
	0x03DC7D3C BL 0x1C16DFC
	0x03DC7D40 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+379]
	008 Move X20, [X20+864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+864]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+379], W8
	019 Move X1, [X20]
	020 Add X0, X19, 40
	021 Call StyleDataRef`1<VisualData>.Read, X0
	022 Move W0, [X0+200]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_paddingBottom()

Disassembly:
	0x03DC7A74 BL 0x1C16DFC
	0x03DC7A78 MOV X0, X31
	0x03DC7A7C BL 0x3D45208
	0x03DC7A80 STR X0, [X20 + 0x30]
	0x03DC7A84 STR W1, [X20 + 0x38]
	0x03DC7A88 LDR X1, [X21]
	0x03DC7A8C MOV X0, X19
	0x03DC7A90 BL 0x266DB34
	0x03DC7A94 MOV X20, X0
	0x03DC7A98 MOV X0, X31
	0x03DC7A9C BL 0x3D45288
	0x03DC7AA0 STUR X0, [X20 + 0x3C]
	0x03DC7AA4 STR W1, [X20 + 0x44]
	0x03DC7AA8 LDR X1, [X21]
	0x03DC7AAC MOV X0, X19
	0x03DC7AB0 BL 0x266DB34
	0x03DC7AB4 MOV X20, X0
	0x03DC7AB8 MOV X0, X31
	0x03DC7ABC BL 0x3D45308
	0x03DC7AC0 STR X0, [X20 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+380]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+380], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_paddingLeft()

Disassembly:
	0x03DC7984 ADD X20, X19, 0x20
	0x03DC7988 MOV X0, X20
	0x03DC798C LDR X1, [X22]
	0x03DC7990 BL 0x266D6BC
	0x03DC7994 ADRP X9, 0x39D000
	0x03DC7998 LDR X9, [X9 + 0x358]
	0x03DC799C MOV X8, X0
	0x03DC79A0 LDR X21, [X8]
	0x03DC79A4 LDR X0, [X9]
	0x03DC79A8 LDR W9, [X0 + 0xE0]
	0x03DC79AC CBNZ W9, 0x3DC79B4
	0x03DC79B0 BL 0x1C16DFC
	0x03DC79B4 MOV X0, X31
	0x03DC79B8 BL 0x3D46AD0
	0x03DC79BC ADRP X23, 0x39E000
	0x03DC79C0 LDR X23, [X23 + 0x3A0]
	0x03DC79C4 MOV X1, X0
	0x03DC79C8 MOV X0, X21
	0x03DC79CC LDR X2, [X23]
	0x03DC79D0 BL 0x2294F60

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+381]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+381], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_paddingRight()

Disassembly:
	0x03DC7A24 LDR X2, [X8]
	0x03DC7A28 BL 0x2294EF4
	0x03DC7A2C LDR X1, [X22]
	0x03DC7A30 MOV X0, X20
	0x03DC7A34 BL 0x266D6BC
	0x03DC7A38 LDR X20, [X0 + 0x18]
	0x03DC7A3C B 0x3DC8140
	0x03DC7A40 ADRP X21, 0x39E000
	0x03DC7A44 LDR X21, [X21 + 0x2F8]
	0x03DC7A48 ADD X19, X19, 0x28
	0x03DC7A4C MOV X0, X19
	0x03DC7A50 LDR X1, [X21]
	0x03DC7A54 BL 0x266DB34
	0x03DC7A58 ADRP X8, 0x39D000
	0x03DC7A5C LDR X8, [X8 + 0x358]
	0x03DC7A60 MOV X20, X0
	0x03DC7A64 LDR X8, [X8]
	0x03DC7A68 LDR W9, [X8 + 0xE0]
	0x03DC7A6C CBNZ W9, 0x3DC7A78
	0x03DC7A70 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+382]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+382], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_paddingTop()

Disassembly:
	0x03DC79D4 LDR X1, [X22]
	0x03DC79D8 MOV X0, X20
	0x03DC79DC BL 0x266D6BC
	0x03DC79E0 LDR X21, [X0 + 0x8]
	0x03DC79E4 MOV X0, X31
	0x03DC79E8 BL 0x3D46B48
	0x03DC79EC LDR X2, [X23]
	0x03DC79F0 MOV X1, X0
	0x03DC79F4 MOV X0, X21
	0x03DC79F8 BL 0x2294F60
	0x03DC79FC LDR X1, [X22]
	0x03DC7A00 MOV X0, X20
	0x03DC7A04 BL 0x266D6BC
	0x03DC7A08 LDR X21, [X0 + 0x10]
	0x03DC7A0C MOV X0, X31
	0x03DC7A10 BL 0x3D46BC0
	0x03DC7A14 ADRP X8, 0x39E000
	0x03DC7A18 LDR X8, [X8 + 0x398]
	0x03DC7A1C MOV X1, X0
	0x03DC7A20 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+383]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+383], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Position get_position()

Disassembly:
	0x03DC7CA4 CBNZ W9, 0x3DC7CB0
	0x03DC7CA8 MOV X0, X8
	0x03DC7CAC BL 0x1C16DFC
	0x03DC7CB0 MOV X0, X31
	0x03DC7CB4 BL 0x3D45208
	0x03DC7CB8 STR X0, [X19 + 0x30]
	0x03DC7CBC STR W1, [X19 + 0x38]
	0x03DC7CC0 B 0x3DC8FD4
	0x03DC7CC4 ADRP X8, 0x39E000
	0x03DC7CC8 LDR X8, [X8 + 0x2F8]
	0x03DC7CCC ADD X0, X19, 0x28
	0x03DC7CD0 LDR X1, [X8]
	0x03DC7CD4 BL 0x266DB34
	0x03DC7CD8 ADRP X8, 0x39D000
	0x03DC7CDC LDR X8, [X8 + 0x358]
	0x03DC7CE0 MOV X19, X0
	0x03DC7CE4 LDR X8, [X8]
	0x03DC7CE8 LDR W9, [X8 + 0xE0]
	0x03DC7CEC CBNZ W9, 0x3DC7CF8
	0x03DC7CF0 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+384]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+384], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 Move W0, [X0+180]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_right()

Disassembly:
	0x03DC77A4 BL 0x266C93C
	0x03DC77A8 MOV X20, X0
	0x03DC77AC MOV X0, X31
	0x03DC77B0 BL 0x3D4575C
	0x03DC77B4 STR S0, [X20 + 0x14]
	0x03DC77B8 LDR X1, [X21]
	0x03DC77BC MOV X0, X19
	0x03DC77C0 BL 0x266C93C
	0x03DC77C4 MOV X20, X0
	0x03DC77C8 MOV X0, X31
	0x03DC77CC BL 0x3D45574
	0x03DC77D0 STR S0, [X20 + 0xC]
	0x03DC77D4 LDR X1, [X21]
	0x03DC77D8 MOV X0, X19
	0x03DC77DC BL 0x266C93C
	0x03DC77E0 MOV X19, X0
	0x03DC77E4 B 0x3DC8268
	0x03DC77E8 ADRP X21, 0x39E000
	0x03DC77EC LDR X21, [X21 + 0x2F0]
	0x03DC77F0 ADD X19, X19, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+385]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+385], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 Move X0, [X0+184]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Rotate get_rotate()

Disassembly:
	0x03DCAB70 ADD X8, X31, 0x10
	0x03DCAB74 MOV X0, X20
	0x03DCAB78 MOV W1, W31
	0x03DCAB7C MOV X2, X31
	0x03DCAB80 BL 0x3D511D8
	0x03DCAB84 B 0x3DCAD34
	0x03DCAB88 ADDS W31, W27, 0x1
	0x03DCAB8C B.EQ 0x3DCACE0
	0x03DCAB90 CBZ W27, 0x3DCAA70
	0x03DCAB94 ADRP X8, 0x39C000
	0x03DCAB98 LDR X8, [X8 + 0x4A8]
	0x03DCAB9C ADD X1, X31, 0x30
	0x03DCABA0 STR W27, [X31 + 0x30]
	0x03DCABA4 LDR X0, [X8]
	0x03DCABA8 BL 0x1C16E04
	0x03DCABAC ADRP X8, 0x39F000
	0x03DCABB0 LDR X8, [X8 + 0x350]
	0x03DCABB4 MOV X1, X0
	0x03DCABB8 MOV X2, X31
	0x03DCABBC LDR X8, [X8]
	0x03DCABC0 MOV X0, X8
	0x03DCABC4 BL 0x321EFD0
	0x03DCABC8 ADRP X8, 0x329000
	0x03DCABCC LDR X8, [X8 + 0xA28]
	0x03DCABD0 MOV X27, X0
	0x03DCABD4 LDR X8, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x61F000
	007 Move X21, 0x39C000
	008 Move X19, X8
	009 Move W8, [X22+386]
	010 Move X21, [X21+888]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x39C000
	017 Move X0, [X0+888]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+386], W8
	021 Move X1, [X21]
	022 Add X0, X20, 24
	023 Call StyleDataRef`1<TransformData>.Read, X0
	024 Move V0, [X0]
	025 Move X8, [X0+16]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move [X19], V0
	029 Move [X19+16], X8
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+48]
	033 Return X0

Method: UnityEngine.UIElements.Scale get_scale()

Disassembly:
	0x03DCABD8 LDR W9, [X8 + 0xE0]
	0x03DCABDC CBNZ W9, 0x3DCABE8
	0x03DCABE0 MOV X0, X8
	0x03DCABE4 BL 0x1C16DFC
	0x03DCABE8 MOV X0, X27
	0x03DCABEC MOV X1, X31
	0x03DCABF0 BL 0x3C070A4
	0x03DCABF4 B 0x3DCAA70
	0x03DCABF8 ADRP X11, 0xFFFFFFFFFCDCE000
	0x03DCABFC ADD X11, X11, 0x194
	0x03DCAC00 ADR X9, 0xFFFFFFFFFFFFFE70
	0x03DCAC04 LDRH W10, [X11, X8, LSL #1]
	0x03DCAC08 ADD X9, X9, X10, 0x2, LSL
	0x03DCAC0C BR X9
	0x03DCAC10 ADRP X8, 0x39B000
	0x03DCAC14 LDR X8, [X8 + 0x388]
	0x03DCAC18 LDR X0, [X8]
	0x03DCAC1C LDR W8, [X0 + 0xE0]
	0x03DCAC20 CBNZ W8, 0x3DCAC28
	0x03DCAC24 BL 0x1C16DFC
	0x03DCAC28 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+387]
	008 Move X20, [X20+888]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+888]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+387], W8
	019 Move X1, [X20]
	020 Add X0, X19, 24
	021 Call StyleDataRef`1<TransformData>.Read, X0
	022 Move X8, [X0+24]
	023 Move X1, [X0+32]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, X8
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: UnityEngine.UIElements.TextOverflow get_textOverflow()

Disassembly:
	0x03DCAC2C MOV X1, X21
	0x03DCAC30 MOV X2, X31
	0x03DCAC34 BL 0x3D47604
	0x03DCAC38 B 0x3DCAA70
	0x03DCAC3C SUB W8, W27, 0x10000
	0x03DCAC40 CMP W8, 0xD
	0x03DCAC44 B.HI 0x3DCAB94
	0x03DCAC48 ADRP X11, 0xFFFFFFFFFCDCE000
	0x03DCAC4C ADD X11, X11, 0x122
	0x03DCAC50 ADR X9, 0x10
	0x03DCAC54 LDRH W10, [X11, X8, LSL #1]
	0x03DCAC58 ADD X9, X9, X10, 0x2, LSL
	0x03DCAC5C BR X9
	0x03DCAC60 ADRP X8, 0x39B000
	0x03DCAC64 LDR X8, [X8 + 0x300]
	0x03DCAC68 MOV X0, X21
	0x03DCAC6C LDR X1, [X8]
	0x03DCAC70 BL 0x266C4BC
	0x03DCAC74 MOV X27, X0
	0x03DCAC78 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+388]
	008 Move X20, [X20+880]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+388], W8
	019 Move X1, [X20]
	020 Add X0, X19, 16
	021 Call StyleDataRef`1<RareData>.Read, X0
	022 Move W0, [X0+24]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.TextShadow get_textShadow()

Disassembly:
	0x03DCAC7C MOV W1, W31
	0x03DCAC80 MOV X2, X31
	0x03DCAC84 BL 0x3D49930
	0x03DCAC88 STP S0, S1, [X27]
	0x03DCAC8C STP S2, S3, [X27 + 0x8]
	0x03DCAC90 B 0x3DCAA70
	0x03DCAC94 SUB W8, W27, 0x50000
	0x03DCAC98 CMP W8, 0x3
	0x03DCAC9C B.LS 0x3DCACF0
	0x03DCACA0 SUB W8, W27, 0x60000
	0x03DCACA4 CMP W8, 0x3
	0x03DCACA8 B.HI 0x3DCAB94
	0x03DCACAC ADRP X11, 0xFFFFFFFFFCDCE000
	0x03DCACB0 ADD X11, X11, 0x1B2
	0x03DCACB4 ADR X9, 0x10
	0x03DCACB8 LDRH W10, [X11, X8, LSL #1]
	0x03DCACBC ADD X9, X9, X10, 0x2, LSL
	0x03DCACC0 BR X9
	0x03DCACC4 ADRP X8, 0x39B000
	0x03DCACC8 LDR X8, [X8 + 0x318]
	0x03DCACCC LDR X0, [X31 + 0x8]
	0x03DCACD0 LDR X1, [X8]
	0x03DCACD4 BL 0x266D6BC
	0x03DCACD8 LDR X1, [X0]
	0x03DCACDC B 0x3DCB298
	0x03DCACE0 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x61F000
	007 Move X22, 0x39C000
	008 Move X19, X8
	009 Move W8, [X21+389]
	010 Move X22, [X22+872]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x39C000
	017 Move X0, [X0+872]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+389], W8
	021 Move X1, [X22]
	022 Move X0, X20
	023 Call 0x266D4A0, X0
	024 Move V0, [X0+2]
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move [X19], V0
	029 Move [X19+12], V1
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+48]
	033 Return X0

Method: UnityEngine.UIElements.Length get_top()

Disassembly:
	0x03DC7754 B 0x3DC7E28
	0x03DC7758 ADRP X21, 0x39E000
	0x03DC775C LDR X21, [X21 + 0x2F0]
	0x03DC7760 ADD X19, X19, 0x8
	0x03DC7764 MOV X0, X19
	0x03DC7768 LDR X1, [X21]
	0x03DC776C BL 0x266C93C
	0x03DC7770 ADRP X8, 0x39D000
	0x03DC7774 LDR X8, [X8 + 0x358]
	0x03DC7778 MOV X20, X0
	0x03DC777C LDR X8, [X8]
	0x03DC7780 LDR W9, [X8 + 0xE0]
	0x03DC7784 CBNZ W9, 0x3DC7790
	0x03DC7788 MOV X0, X8
	0x03DC778C BL 0x1C16DFC
	0x03DC7790 MOV X0, X31
	0x03DC7794 BL 0x3D45940
	0x03DC7798 STR S0, [X20 + 0x18]
	0x03DC779C LDR X1, [X21]
	0x03DC77A0 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+390]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+390], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 Move X0, [X0+192]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.TransformOrigin get_transformOrigin()

Disassembly:
	0x03DCACE4 MOV X1, X20
	0x03DCACE8 BL 0x3DC9094
	0x03DCACEC B 0x3DCAA70
	0x03DCACF0 ADRP X11, 0xFFFFFFFFFCDCE000
	0x03DCACF4 ADD X11, X11, 0x1AA
	0x03DCACF8 ADR X9, 0x10
	0x03DCACFC LDRH W10, [X11, X8, LSL #1]
	0x03DCAD00 ADD X9, X9, X10, 0x2, LSL
	0x03DCAD04 BR X9
	0x03DCAD08 ADRP X8, 0x39B000
	0x03DCAD0C LDR X8, [X8 + 0x310]
	0x03DCAD10 LDR X0, [X31]
	0x03DCAD14 LDR X1, [X8]
	0x03DCAD18 BL 0x266D23C
	0x03DCAD1C MOV X27, X0
	0x03DCAD20 ADD X8, X31, 0x10
	0x03DCAD24 MOV X0, X20
	0x03DCAD28 MOV W1, W31
	0x03DCAD2C MOV X2, X31
	0x03DCAD30 BL 0x3D4F9F0
	0x03DCAD34 LDR X8, [X31 + 0x20]
	0x03DCAD38 LDR V0, [X31 + 0x1]
	0x03DCAD3C STR X8, [X31 + 0x40]
	0x03DCAD40 STR V0, [X31 + 0x3]
	0x03DCAD44 STR X8, [X27 + 0x10]
	0x03DCAD48 STR V0, [X27]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x61F000
	007 Move X21, 0x39C000
	008 Move X19, X8
	009 Move W8, [X22+391]
	010 Move X21, [X21+888]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x39C000
	017 Move X0, [X0+888]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+391], W8
	021 Move X1, [X21]
	022 Add X0, X20, 24
	023 Call StyleDataRef`1<TransformData>.Read, X0
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 Move W8, [X0+56]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move [X19], V0
	029 Move [X19+16], W8
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+48]
	033 Return X0

Method: System.Collections.Generic.List`1<UnityEngine.UIElements.TimeValue> get_transitionDelay()

Disassembly:
	0x03DCAD4C B 0x3DCAA70
	0x03DCAD50 ADRP X8, 0x39B000
	0x03DCAD54 LDR X8, [X8 + 0x308]
	0x03DCAD58 MOV X0, X23
	0x03DCAD5C LDR X1, [X8]
	0x03DCAD60 BL 0x266CDBC
	0x03DCAD64 MOV X27, X0
	0x03DCAD68 MOV X0, X20
	0x03DCAD6C MOV W1, W31
	0x03DCAD70 MOV X2, X31
	0x03DCAD74 BL 0x3D49930
	0x03DCAD78 STP S0, S1, [X27 + 0x1C]
	0x03DCAD7C STP S2, S3, [X27 + 0x24]
	0x03DCAD80 B 0x3DCAA70
	0x03DCAD84 ADRP X8, 0x39B000
	0x03DCAD88 LDR X8, [X8 + 0x308]
	0x03DCAD8C MOV X0, X23
	0x03DCAD90 LDR X1, [X8]
	0x03DCAD94 BL 0x266CDBC
	0x03DCAD98 MOV X27, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+392]
	008 Move X20, [X20+896]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+896]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+392], W8
	019 Move X1, [X20]
	020 Add X0, X19, 32
	021 Call StyleDataRef`1<TransitionData>.Read, X0
	022 Move X0, [X0]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: System.Collections.Generic.List`1<UnityEngine.UIElements.TimeValue> get_transitionDuration()

Disassembly:
	0x03DCAD9C MOVZ W1, 0x9
	0x03DCADA0 MOV X0, X20
	0x03DCADA4 MOV W2, W31
	0x03DCADA8 MOV X3, X31
	0x03DCADAC BL 0x3D497F8
	0x03DCADB0 STR W0, [X27 + 0x2C]
	0x03DCADB4 B 0x3DCAA70
	0x03DCADB8 ADRP X8, 0x39B000
	0x03DCADBC LDR X8, [X8 + 0x308]
	0x03DCADC0 MOV X0, X23
	0x03DCADC4 LDR X1, [X8]
	0x03DCADC8 BL 0x266CDBC
	0x03DCADCC MOV X27, X0
	0x03DCADD0 MOV X0, X20
	0x03DCADD4 MOV W1, W31
	0x03DCADD8 MOV X2, X31
	0x03DCADDC BL 0x3D4FED4
	0x03DCADE0 B 0x3DCB6A8
	0x03DCADE4 ADRP X8, 0x39B000
	0x03DCADE8 LDR X8, [X8 + 0x308]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+393]
	008 Move X20, [X20+896]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+896]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+393], W8
	019 Move X1, [X20]
	020 Add X0, X19, 32
	021 Call StyleDataRef`1<TransitionData>.Read, X0
	022 Move X0, [X0+8]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: System.Collections.Generic.List`1<UnityEngine.UIElements.StylePropertyName> get_transitionProperty()

Disassembly:
	0x03DCADEC MOV X0, X23
	0x03DCADF0 LDR X1, [X8]
	0x03DCADF4 BL 0x266CDBC
	0x03DCADF8 MOV X27, X0
	0x03DCADFC MOV X0, X20
	0x03DCAE00 MOV W1, W31
	0x03DCAE04 MOV X2, X31
	0x03DCAE08 BL 0x3D49734
	0x03DCAE0C STR S0, [X27 + 0x3C]
	0x03DCAE10 B 0x3DCAA70
	0x03DCAE14 ADRP X8, 0x39B000
	0x03DCAE18 LDR X8, [X8 + 0x308]
	0x03DCAE1C MOV X0, X23
	0x03DCAE20 LDR X1, [X8]
	0x03DCAE24 BL 0x266CDBC
	0x03DCAE28 MOV X27, X0
	0x03DCAE2C MOVZ W1, 0x11
	0x03DCAE30 MOV X0, X20
	0x03DCAE34 MOV W2, W31
	0x03DCAE38 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+394]
	008 Move X20, [X20+896]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+896]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+394], W8
	019 Move X1, [X20]
	020 Add X0, X19, 32
	021 Call StyleDataRef`1<TransitionData>.Read, X0
	022 Move X0, [X0+16]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: System.Collections.Generic.List`1<UnityEngine.UIElements.EasingFunction> get_transitionTimingFunction()

Disassembly:
	0x03DCAE3C BL 0x3D497F8
	0x03DCAE40 STR W0, [X27 + 0x44]
	0x03DCAE44 B 0x3DCAA70
	0x03DCAE48 ADRP X8, 0x39B000
	0x03DCAE4C LDR X8, [X8 + 0x388]
	0x03DCAE50 LDR X0, [X8]
	0x03DCAE54 LDR W8, [X0 + 0xE0]
	0x03DCAE58 CBNZ W8, 0x3DCAE60
	0x03DCAE5C BL 0x1C16DFC
	0x03DCAE60 MOV X0, X20
	0x03DCAE64 MOV X1, X21
	0x03DCAE68 MOV X2, X31
	0x03DCAE6C BL 0x3D47D78
	0x03DCAE70 B 0x3DCAA70
	0x03DCAE74 ADRP X8, 0x39B000
	0x03DCAE78 LDR X8, [X8 + 0x388]
	0x03DCAE7C LDR X0, [X8]
	0x03DCAE80 LDR W8, [X0 + 0xE0]
	0x03DCAE84 CBNZ W8, 0x3DCAE8C
	0x03DCAE88 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+395]
	008 Move X20, [X20+896]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+896]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+395], W8
	019 Move X1, [X20]
	020 Add X0, X19, 32
	021 Call StyleDataRef`1<TransitionData>.Read, X0
	022 Move X0, [X0+24]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Translate get_translate()

Disassembly:
	0x03DCAE8C MOV X0, X20
	0x03DCAE90 MOV X1, X21
	0x03DCAE94 MOV X2, X31
	0x03DCAE98 BL 0x3D47FD4
	0x03DCAE9C B 0x3DCAA70
	0x03DCAEA0 ADRP X8, 0x39B000
	0x03DCAEA4 LDR X8, [X8 + 0x388]
	0x03DCAEA8 LDR X0, [X8]
	0x03DCAEAC LDR W8, [X0 + 0xE0]
	0x03DCAEB0 CBNZ W8, 0x3DCAEB8
	0x03DCAEB4 BL 0x1C16DFC
	0x03DCAEB8 MOV X0, X20
	0x03DCAEBC MOV X1, X21
	0x03DCAEC0 MOV X2, X31
	0x03DCAEC4 BL 0x3D4820C
	0x03DCAEC8 B 0x3DCAA70
	0x03DCAECC ADRP X8, 0x39B000
	0x03DCAED0 LDR X8, [X8 + 0x388]
	0x03DCAED4 LDR X0, [X8]
	0x03DCAED8 LDR W8, [X0 + 0xE0]
	0x03DCAEDC CBNZ W8, 0x3DCAEE4
	0x03DCAEE0 BL 0x1C16DFC
	0x03DCAEE4 MOV X0, X20
	0x03DCAEE8 MOV X1, X21
	0x03DCAEEC MOV X2, X31
	0x03DCAEF0 BL 0x3D488B4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x61F000
	007 Move X21, 0x39C000
	008 Move X19, X8
	009 Move W8, [X22+396]
	010 Move X21, [X21+888]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x39C000
	017 Move X0, [X0+888]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+396], W8
	021 Move X1, [X21]
	022 Add X0, X20, 24
	023 Call StyleDataRef`1<TransformData>.Read, X0
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move [X19], V0
	029 Move [X19+16], X8
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+48]
	033 Return X0

Method: UnityEngine.Color get_unityBackgroundImageTintColor()

Disassembly:
	0x03DCAEF4 B 0x3DCAA70
	0x03DCAEF8 ADRP X8, 0x39B000
	0x03DCAEFC LDR X8, [X8 + 0x388]
	0x03DCAF00 LDR X0, [X8]
	0x03DCAF04 LDR W8, [X0 + 0xE0]
	0x03DCAF08 CBNZ W8, 0x3DCAF10
	0x03DCAF0C BL 0x1C16DFC
	0x03DCAF10 MOV X0, X20
	0x03DCAF14 MOV X1, X21
	0x03DCAF18 MOV X2, X31
	0x03DCAF1C BL 0x3D49170
	0x03DCAF20 B 0x3DCAA70
	0x03DCAF24 ADRP X8, 0x39B000
	0x03DCAF28 LDR X8, [X8 + 0x308]
	0x03DCAF2C MOV X0, X23
	0x03DCAF30 LDR X1, [X8]
	0x03DCAF34 BL 0x266CDBC
	0x03DCAF38 MOV X27, X0
	0x03DCAF3C MOVZ W1, 0x10
	0x03DCAF40 MOV X0, X20
	0x03DCAF44 MOV W2, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61F000
	006 Move X20, 0x39C000
	007 Move W8, [X21+397]
	008 Move X20, [X20+880]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+397], W8
	019 Move X1, [X20]
	020 Add X0, X19, 16
	021 Call StyleDataRef`1<RareData>.Read, X0
	022 Move S0, [X0+28]
	023 Move S1, [X0+32]
	024 Move S2, [X0+36]
	025 Move S3, [X0+40]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: UnityEngine.Font get_unityFont()

Disassembly:
	0x03DCAF48 MOV X3, X31
	0x03DCAF4C BL 0x3D497F8
	0x03DCAF50 STR W0, [X27 + 0x18]
	0x03DCAF54 B 0x3DCAA70
	0x03DCAF58 ADRP X8, 0x39B000
	0x03DCAF5C LDR X8, [X8 + 0x308]
	0x03DCAF60 MOV X0, X23
	0x03DCAF64 LDR X1, [X8]
	0x03DCAF68 BL 0x266CDBC
	0x03DCAF6C MOV X27, X0
	0x03DCAF70 MOV X0, X20
	0x03DCAF74 MOV W1, W31
	0x03DCAF78 MOV X2, X31
	0x03DCAF7C BL 0x3D4FED4
	0x03DCAF80 STR W0, [X27 + 0x34]
	0x03DCAF84 B 0x3DCAA70
	0x03DCAF88 ADRP X8, 0x39B000
	0x03DCAF8C LDR X8, [X8 + 0x308]
	0x03DCAF90 MOV X0, X23
	0x03DCAF94 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x61F000
	006 Move X21, 0x39C000
	007 Move W8, [X20+398]
	008 Move X21, [X21+872]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+398], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x266D4A0, X0
	022 Move X0, [X0+64]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.FontDefinition get_unityFontDefinition()

Disassembly:
	0x03DCAF98 BL 0x266CDBC
	0x03DCAF9C MOV X27, X0
	0x03DCAFA0 MOV X0, X20
	0x03DCAFA4 MOV W1, W31
	0x03DCAFA8 MOV X2, X31
	0x03DCAFAC BL 0x3D4FED4
	0x03DCAFB0 STR W0, [X27 + 0x38]
	0x03DCAFB4 B 0x3DCAA70
	0x03DCAFB8 ADRP X8, 0x39B000
	0x03DCAFBC LDR X8, [X8 + 0x308]
	0x03DCAFC0 MOV X0, X23
	0x03DCAFC4 LDR X1, [X8]
	0x03DCAFC8 BL 0x266CDBC
	0x03DCAFCC MOV X27, X0
	0x03DCAFD0 MOV X0, X20
	0x03DCAFD4 MOV W1, W31
	0x03DCAFD8 MOV X2, X31
	0x03DCAFDC BL 0x3D4FED4
	0x03DCAFE0 STR W0, [X27 + 0x40]
	0x03DCAFE4 B 0x3DCAA70
	0x03DCAFE8 ADRP X8, 0x39B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x61F000
	006 Move X21, 0x39C000
	007 Move W8, [X20+399]
	008 Move X21, [X21+872]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39C000
	015 Move X0, [X0+872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+399], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x266D4A0, X0
	022 Move X8, [X0+72]
	023 Move X1, [X0+80]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, X8
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: UnityEngine.FontStyle get_unityFontStyleAndWeight()

Disassembly:
	0x03DCAFEC LDR X8, [X8 + 0x388]
	0x03DCAFF0 LDR X0, [X8]
	0x03DCAFF4 LDR W8, [X0 + 0xE0]
	0x03DCAFF8 CBNZ W8, 0x3DCB000
	0x03DCAFFC BL 0x1C16DFC
	0x03DCB000 MOV X0, X20
	0x03DCB004 MOV X1, X21
	0x03DCB008 MOV X2, X31
	0x03DCB00C BL 0x3D483B0
	0x03DCB010 B 0x3DCAA70
	0x03DCB014 ADRP X8, 0x39A000
	0x03DCB018 LDR X8, [X8 + 0x388]
	0x03DCB01C LDR X0, [X8]
	0x03DCB020 LDR W8, [X0 + 0xE0]
	0x03DCB024 CBNZ W8, 0x3DCB02C
	0x03DCB028 BL 0x1C16DFC
	0x03DCB02C MOV X0, X20
	0x03DCB030 MOV X1, X21
	0x03DCB034 MOV X2, X31
	0x03DCB038 BL 0x3D48668

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x61F000
	006 Move X21, 0x39C000
	007 Move W8, [X20+400]
	008 Call 0x3EB2A24
	009 Return X0
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x39B000
	016 Move X0, [X0+872]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+400], W8
	020 Move X1, [X21]
	021 Move X0, X19
	022 Call 0x266D4A0, X0
	023 Move W0, [X0+88]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return X0

Method: UnityEngine.UIElements.OverflowClipBox get_unityOverflowClipBox()

Disassembly:
	0x03DCB03C B 0x3DCAA70
	0x03DCB040 ADRP X8, 0x39A000
	0x03DCB044 LDR X8, [X8 + 0x388]
	0x03DCB048 LDR X0, [X8]
	0x03DCB04C LDR W8, [X0 + 0xE0]
	0x03DCB050 CBNZ W8, 0x3DCB058
	0x03DCB054 BL 0x1C16DFC
	0x03DCB058 MOV X0, X20
	0x03DCB05C MOV X1, X21
	0x03DCB060 MOV X2, X31
	0x03DCB064 BL 0x3D489A4
	0x03DCB068 B 0x3DCAA70
	0x03DCB06C ADRP X8, 0x39A000
	0x03DCB070 LDR X8, [X8 + 0x388]
	0x03DCB074 LDR X0, [X8]
	0x03DCB078 LDR W8, [X0 + 0xE0]
	0x03DCB07C CBNZ W8, 0x3DCB084
	0x03DCB080 BL 0x1C16DFC
	0x03DCB084 MOV X0, X20
	0x03DCB088 MOV X1, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61E000
	006 Move X20, 0x39B000
	007 Move W8, [X21+401]
	008 Move X20, [X20+880]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39B000
	015 Move X0, [X0+880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+401], W8
	019 Move X1, [X20]
	020 Add X0, X19, 16
	021 Call StyleDataRef`1<RareData>.Read, X0
	022 Move W0, [X0+44]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_unityParagraphSpacing()

Disassembly:
	0x03DCB08C MOV X2, X31
	0x03DCB090 BL 0x3D49330
	0x03DCB094 B 0x3DCAA70
	0x03DCB098 ADRP X8, 0x39A000
	0x03DCB09C LDR X8, [X8 + 0x2F8]
	0x03DCB0A0 MOV X0, X24
	0x03DCB0A4 LDR X1, [X8]
	0x03DCB0A8 BL 0x266DB34
	0x03DCB0AC MOV X27, X0
	0x03DCB0B0 ADD X8, X31, 0x10
	0x03DCB0B4 MOV X0, X20
	0x03DCB0B8 MOV W1, W31
	0x03DCB0BC MOV X2, X31
	0x03DCB0C0 BL 0x3D5089C
	0x03DCB0C4 LDP V1, V0, [X31 + 0x10]
	0x03DCB0C8 STP V1, V0, [X31 + 0x30]
	0x03DCB0CC STP V1, V0, [X27 + 0x10]
	0x03DCB0D0 B 0x3DCAA70
	0x03DCB0D4 ADRP X8, 0x39A000
	0x03DCB0D8 LDR X8, [X8 + 0x2F8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x61E000
	006 Move X21, 0x39B000
	007 Move W8, [X20+402]
	008 Move X21, [X21+872]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39B000
	015 Move X0, [X0+872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+402], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x266D4A0, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: System.Int32 get_unitySliceBottom()

Disassembly:
	0x03DCB0DC MOV X0, X24
	0x03DCB0E0 LDR X1, [X8]
	0x03DCB0E4 BL 0x266DB34
	0x03DCB0E8 MOV X27, X0
	0x03DCB0EC MOV X0, X20
	0x03DCB0F0 MOV W1, W31
	0x03DCB0F4 MOV X2, X31
	0x03DCB0F8 BL 0x3D516F4
	0x03DCB0FC STR X0, [X27 + 0x30]
	0x03DCB100 STR W1, [X27 + 0x38]
	0x03DCB104 B 0x3DCAA70
	0x03DCB108 ADRP X8, 0x39A000
	0x03DCB10C LDR X8, [X8 + 0x2F8]
	0x03DCB110 MOV X0, X24
	0x03DCB114 LDR X1, [X8]
	0x03DCB118 BL 0x266DB34
	0x03DCB11C MOV X27, X0
	0x03DCB120 MOV X0, X20
	0x03DCB124 MOV W1, W31
	0x03DCB128 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61E000
	006 Move X20, 0x39B000
	007 Move W8, [X21+403]
	008 Move X20, [X20+880]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39B000
	015 Move X0, [X0+880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+403], W8
	019 Move X1, [X20]
	020 Add X0, X19, 16
	021 Call StyleDataRef`1<RareData>.Read, X0
	022 Move W0, [X0+48]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: System.Int32 get_unitySliceLeft()

Disassembly:
	0x03DCB12C BL 0x3D517DC
	0x03DCB130 STUR X0, [X27 + 0x3C]
	0x03DCB134 STR W1, [X27 + 0x44]
	0x03DCB138 B 0x3DCAA70
	0x03DCB13C ADRP X8, 0x39A000
	0x03DCB140 LDR X8, [X8 + 0x2F8]
	0x03DCB144 MOV X0, X24
	0x03DCB148 LDR X1, [X8]
	0x03DCB14C BL 0x266DB34
	0x03DCB150 MOV X27, X0
	0x03DCB154 MOV X0, X20
	0x03DCB158 MOV W1, W31
	0x03DCB15C MOV X2, X31
	0x03DCB160 BL 0x3D5196C
	0x03DCB164 STR X0, [X27 + 0x48]
	0x03DCB168 B 0x3DCAA70
	0x03DCB16C ADRP X8, 0x39A000
	0x03DCB170 LDR X8, [X8 + 0x2F8]
	0x03DCB174 MOV X0, X24
	0x03DCB178 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61E000
	006 Move X20, 0x39B000
	007 Move W8, [X21+404]
	008 Move X20, [X20+880]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39B000
	015 Move X0, [X0+880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+404], W8
	019 Move X1, [X20]
	020 Add X0, X19, 16
	021 Call StyleDataRef`1<RareData>.Read, X0
	022 Move W0, [X0+52]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: System.Int32 get_unitySliceRight()

Disassembly:
	0x03DCB17C BL 0x266DB34
	0x03DCB180 B 0x3DCB890
	0x03DCB184 ADRP X8, 0x39A000
	0x03DCB188 LDR X8, [X8 + 0x2F8]
	0x03DCB18C MOV X0, X24
	0x03DCB190 LDR X1, [X8]
	0x03DCB194 BL 0x266DB34
	0x03DCB198 MOV X27, X0
	0x03DCB19C MOV X0, X20
	0x03DCB1A0 MOV W1, W31
	0x03DCB1A4 MOV X2, X31
	0x03DCB1A8 BL 0x3D49930
	0x03DCB1AC STP S0, S1, [X27 + 0x84]
	0x03DCB1B0 STP S2, S3, [X27 + 0x8C]
	0x03DCB1B4 B 0x3DCAA70
	0x03DCB1B8 ADRP X8, 0x39A000
	0x03DCB1BC LDR X8, [X8 + 0x2F8]
	0x03DCB1C0 MOV X0, X24
	0x03DCB1C4 LDR X1, [X8]
	0x03DCB1C8 BL 0x266DB34

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61E000
	006 Move X20, 0x39B000
	007 Move W8, [X21+405]
	008 Move X20, [X20+880]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39B000
	015 Move X0, [X0+880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+405], W8
	019 Move X1, [X20]
	020 Add X0, X19, 16
	021 Call StyleDataRef`1<RareData>.Read, X0
	022 Move W0, [X0+56]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: System.Single get_unitySliceScale()

Disassembly:
	0x03DCB1CC MOV X27, X0
	0x03DCB1D0 MOV X0, X20
	0x03DCB1D4 MOV W1, W31
	0x03DCB1D8 MOV X2, X31
	0x03DCB1DC BL 0x3D49930
	0x03DCB1E0 STP S0, S1, [X27 + 0xA4]
	0x03DCB1E4 STP S2, S3, [X27 + 0xAC]
	0x03DCB1E8 B 0x3DCAA70
	0x03DCB1EC ADRP X8, 0x39A000
	0x03DCB1F0 LDR X8, [X8 + 0x2F8]
	0x03DCB1F4 MOV X0, X24
	0x03DCB1F8 LDR X1, [X8]
	0x03DCB1FC BL 0x266DB34
	0x03DCB200 MOV X27, X0
	0x03DCB204 MOV X0, X20
	0x03DCB208 MOV W1, W31
	0x03DCB20C MOV X2, X31
	0x03DCB210 BL 0x3D49640
	0x03DCB214 STUR X0, [X27 + 0xB4]
	0x03DCB218 B 0x3DCAA70

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61E000
	006 Move X20, 0x39B000
	007 Move W8, [X21+406]
	008 Move X20, [X20+880]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39B000
	015 Move X0, [X0+880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+406], W8
	019 Move X1, [X20]
	020 Add X0, X19, 16
	021 Call StyleDataRef`1<RareData>.Read, X0
	022 Move V0, [X0+60]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return V0

Method: System.Int32 get_unitySliceTop()

Disassembly:
	0x03DCB21C ADRP X8, 0x39A000
	0x03DCB220 LDR X8, [X8 + 0x2F8]
	0x03DCB224 MOV X0, X24
	0x03DCB228 LDR X1, [X8]
	0x03DCB22C BL 0x266DB34
	0x03DCB230 MOV X27, X0
	0x03DCB234 MOV X0, X20
	0x03DCB238 MOV W1, W31
	0x03DCB23C MOV X2, X31
	0x03DCB240 BL 0x3D49734
	0x03DCB244 STR S0, [X27 + 0xC4]
	0x03DCB248 B 0x3DCAA70
	0x03DCB24C ADRP X8, 0x39A000
	0x03DCB250 LDR X8, [X8 + 0x2F8]
	0x03DCB254 MOV X0, X24
	0x03DCB258 LDR X1, [X8]
	0x03DCB25C BL 0x266DB34
	0x03DCB260 MOV X27, X0
	0x03DCB264 MOVZ W1, 0xA
	0x03DCB268 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61E000
	006 Move X20, 0x39B000
	007 Move W8, [X21+407]
	008 Move X20, [X20+880]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39B000
	015 Move X0, [X0+880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+407], W8
	019 Move X1, [X20]
	020 Add X0, X19, 16
	021 Call StyleDataRef`1<RareData>.Read, X0
	022 Move W0, [X0+64]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.TextAnchor get_unityTextAlign()

Disassembly:
	0x03DCB26C MOV W2, W31
	0x03DCB270 MOV X3, X31
	0x03DCB274 BL 0x3D497F8
	0x03DCB278 STR W0, [X27 + 0xC8]
	0x03DCB27C B 0x3DCAA70
	0x03DCB280 ADRP X8, 0x39A000
	0x03DCB284 LDR X8, [X8 + 0x318]
	0x03DCB288 LDR X0, [X31 + 0x8]
	0x03DCB28C LDR X1, [X8]
	0x03DCB290 BL 0x266D6BC
	0x03DCB294 LDR X1, [X0 + 0x8]
	0x03DCB298 MOV X0, X20
	0x03DCB29C MOV W2, W31
	0x03DCB2A0 MOV X3, X31
	0x03DCB2A4 BL 0x3D51FF4
	0x03DCB2A8 B 0x3DCB300
	0x03DCB2AC ADRP X8, 0x39A000
	0x03DCB2B0 LDR X8, [X8 + 0x318]
	0x03DCB2B4 LDR X0, [X31 + 0x8]
	0x03DCB2B8 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x61E000
	006 Move X21, 0x39B000
	007 Move W8, [X20+408]
	008 Move X21, [X21+872]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39B000
	015 Move X0, [X0+872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+408], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x266D4A0, X0
	022 Move W0, [X0+100]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.Color get_unityTextOutlineColor()

Disassembly:
	0x03DCB2BC BL 0x266D6BC
	0x03DCB2C0 LDR X1, [X0 + 0x10]
	0x03DCB2C4 MOV X0, X20
	0x03DCB2C8 MOV W2, W31
	0x03DCB2CC MOV X3, X31
	0x03DCB2D0 BL 0x3D52184
	0x03DCB2D4 B 0x3DCB300
	0x03DCB2D8 ADRP X8, 0x39A000
	0x03DCB2DC LDR X8, [X8 + 0x318]
	0x03DCB2E0 LDR X0, [X31 + 0x8]
	0x03DCB2E4 LDR X1, [X8]
	0x03DCB2E8 BL 0x266D6BC
	0x03DCB2EC LDR X1, [X0 + 0x18]
	0x03DCB2F0 MOV X0, X20
	0x03DCB2F4 MOV W2, W31
	0x03DCB2F8 MOV X3, X31
	0x03DCB2FC BL 0x3D51E0C
	0x03DCB300 STR X31, [X21 + 0x50]
	0x03DCB304 B 0x3DCAA70
	0x03DCB308 ADRP X8, 0x39A000
	0x03DCB30C LDR X8, [X8 + 0x310]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x61E000
	006 Move X21, 0x39B000
	007 Move W8, [X20+409]
	008 Move X21, [X21+872]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39B000
	015 Move X0, [X0+872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+409], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x266D4A0, X0
	022 Move S0, [X0+104]
	023 Move S1, [X0+108]
	024 Move S2, [X0+112]
	025 Move S3, [X0+116]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Single get_unityTextOutlineWidth()

Disassembly:
	0x03DCB310 LDR X0, [X31]
	0x03DCB314 LDR X1, [X8]
	0x03DCB318 BL 0x266D23C
	0x03DCB31C MOV X27, X0
	0x03DCB320 MOV X0, X20
	0x03DCB324 MOV W1, W31
	0x03DCB328 MOV X2, X31
	0x03DCB32C BL 0x3D4FBD8
	0x03DCB330 STP X0, X1, [X27 + 0x18]
	0x03DCB334 B 0x3DCAA70
	0x03DCB338 ADRP X8, 0x39A000
	0x03DCB33C LDR X8, [X8 + 0x310]
	0x03DCB340 LDR X0, [X31]
	0x03DCB344 LDR X1, [X8]
	0x03DCB348 BL 0x266D23C
	0x03DCB34C MOV X27, X0
	0x03DCB350 ADD X8, X31, 0x10
	0x03DCB354 MOV X0, X20
	0x03DCB358 MOV W1, W31
	0x03DCB35C MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x61E000
	006 Move X21, 0x39B000
	007 Move W8, [X20+410]
	008 Move X21, [X21+872]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39B000
	015 Move X0, [X0+872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+410], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x266D4A0, X0
	022 Move V0, [X0+120]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return V0

Method: UnityEngine.UIElements.TextOverflowPosition get_unityTextOverflowPosition()

Disassembly:
	0x03DCB360 BL 0x3D4F700
	0x03DCB364 LDR W8, [X31 + 0x20]
	0x03DCB368 LDR V0, [X31 + 0x1]
	0x03DCB36C STR W8, [X31 + 0x40]
	0x03DCB370 STR V0, [X31 + 0x3]
	0x03DCB374 STR W8, [X27 + 0x38]
	0x03DCB378 STUR V0, [X27 + 0x28]
	0x03DCB37C B 0x3DCAA70
	0x03DCB380 ADRP X8, 0x39A000
	0x03DCB384 LDR X8, [X8 + 0x310]
	0x03DCB388 LDR X0, [X31]
	0x03DCB38C LDR X1, [X8]
	0x03DCB390 BL 0x266D23C
	0x03DCB394 MOV X27, X0
	0x03DCB398 ADD X8, X31, 0x10
	0x03DCB39C MOV X0, X20
	0x03DCB3A0 MOV W1, W31
	0x03DCB3A4 MOV X2, X31
	0x03DCB3A8 BL 0x3D4F34C
	0x03DCB3AC LDR X8, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x61E000
	006 Move X20, 0x39B000
	007 Move W8, [X21+411]
	008 Move X20, [X20+880]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39B000
	015 Move X0, [X0+880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+411], W8
	019 Move X1, [X20]
	020 Add X0, X19, 16
	021 Call StyleDataRef`1<RareData>.Read, X0
	022 Move W0, [X0+68]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Visibility get_visibility()

Disassembly:
	0x03DCB3B0 LDR V0, [X31 + 0x1]
	0x03DCB3B4 STR X8, [X31 + 0x40]
	0x03DCB3B8 STR V0, [X31 + 0x3]
	0x03DCB3BC STUR X8, [X27 + 0x4C]
	0x03DCB3C0 STUR V0, [X27 + 0x3C]
	0x03DCB3C4 B 0x3DCAA70
	0x03DCB3C8 ADRP X8, 0x39A000
	0x03DCB3CC LDR X8, [X8 + 0x2F8]
	0x03DCB3D0 MOV X0, X24
	0x03DCB3D4 LDR X1, [X8]
	0x03DCB3D8 BL 0x266DB34
	0x03DCB3DC MOV X27, X0
	0x03DCB3E0 ADD X8, X31, 0x10
	0x03DCB3E4 MOV X0, X20
	0x03DCB3E8 MOV W1, W31
	0x03DCB3EC MOV X2, X31
	0x03DCB3F0 BL 0x3D51AEC
	0x03DCB3F4 LDR W8, [X31 + 0x20]
	0x03DCB3F8 LDR V0, [X31 + 0x1]
	0x03DCB3FC STR W8, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x61E000
	006 Move X21, 0x39B000
	007 Move W8, [X20+412]
	008 Move X21, [X21+872]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39B000
	015 Move X0, [X0+872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+412], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x266D4A0, X0
	022 Move W0, [X0+124]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.WhiteSpace get_whiteSpace()

Disassembly:
	0x03DCB400 STR V0, [X31 + 0x3]
	0x03DCB404 STR W8, [X27 + 0x60]
	0x03DCB408 STR V0, [X27 + 0x5]
	0x03DCB40C B 0x3DCAA70
	0x03DCB410 ADRP X8, 0x39A000
	0x03DCB414 LDR X8, [X8 + 0x2F8]
	0x03DCB418 MOV X0, X24
	0x03DCB41C LDR X1, [X8]
	0x03DCB420 BL 0x266DB34
	0x03DCB424 MOV X27, X0
	0x03DCB428 MOV X0, X20
	0x03DCB42C MOV W1, W31
	0x03DCB430 MOV X2, X31
	0x03DCB434 BL 0x3D49930
	0x03DCB438 STP S0, S1, [X27 + 0x64]
	0x03DCB43C STP S2, S3, [X27 + 0x6C]
	0x03DCB440 B 0x3DCAA70
	0x03DCB444 ADRP X8, 0x39A000
	0x03DCB448 LDR X8, [X8 + 0x2F8]
	0x03DCB44C MOV X0, X24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x61E000
	006 Move X21, 0x39B000
	007 Move W8, [X20+413]
	008 Move X21, [X21+872]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39B000
	015 Move X0, [X0+872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+413], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x266D4A0, X0
	022 Move W0, [X0+128]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_width()

Disassembly:
	0x03DC7C04 ADD X8, X31, 0x0
	0x03DC7C08 MOV X0, X31
	0x03DC7C0C BL 0x3D46CB0
	0x03DC7C10 LDR X8, [X31 + 0x10]
	0x03DC7C14 LDR V0, [X31]
	0x03DC7C18 STR X8, [X31 + 0x30]
	0x03DC7C1C STR V0, [X31 + 0x2]
	0x03DC7C20 STUR X8, [X19 + 0x4C]
	0x03DC7C24 STUR V0, [X19 + 0x3C]
	0x03DC7C28 B 0x3DC8FD4
	0x03DC7C2C ADRP X8, 0x39E000
	0x03DC7C30 LDR X8, [X8 + 0x2F8]
	0x03DC7C34 ADD X0, X19, 0x28
	0x03DC7C38 LDR X1, [X8]
	0x03DC7C3C BL 0x266DB34
	0x03DC7C40 ADRP X8, 0x39D000
	0x03DC7C44 LDR X8, [X8 + 0x358]
	0x03DC7C48 MOV X19, X0
	0x03DC7C4C LDR X8, [X8]
	0x03DC7C50 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x622000
	006 Move X20, 0x39F000
	007 Move W8, [X21+414]
	008 Move X20, [X20+856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39F000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+414], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Call StyleDataRef`1<LayoutData>.Read, X0
	022 Move X0, [X0+200]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.Length get_wordSpacing()

Disassembly:
	0x03DCB450 LDR X1, [X8]
	0x03DCB454 BL 0x266DB34
	0x03DCB458 B 0x3DCB8C0
	0x03DCB45C ADRP X8, 0x39A000
	0x03DCB460 LDR X8, [X8 + 0x2F8]
	0x03DCB464 MOV X0, X24
	0x03DCB468 LDR X1, [X8]
	0x03DCB46C BL 0x266DB34
	0x03DCB470 MOV X27, X0
	0x03DCB474 MOV X0, X20
	0x03DCB478 MOV W1, W31
	0x03DCB47C MOV X2, X31
	0x03DCB480 BL 0x3D49930
	0x03DCB484 STP S0, S1, [X27 + 0x94]
	0x03DCB488 STP S2, S3, [X27 + 0x9C]
	0x03DCB48C B 0x3DCAA70
	0x03DCB490 ADRP X8, 0x39A000
	0x03DCB494 LDR X8, [X8 + 0x2F8]
	0x03DCB498 MOV X0, X24
	0x03DCB49C LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x61E000
	006 Move X21, 0x39B000
	007 Move W8, [X20+415]
	008 Move X21, [X21+872]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39B000
	015 Move X0, [X0+872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+415], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x266D4A0, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.UIElements.ComputedStyle Create(ref UnityEngine.UIElements.ComputedStyle parentStyle)

Disassembly:
	0x03DCB4A0 BL 0x266DB34
	0x03DCB4A4 MOV X27, X0
	0x03DCB4A8 MOV X0, X20
	0x03DCB4AC MOV W1, W31
	0x03DCB4B0 MOV X2, X31
	0x03DCB4B4 BL 0x3D49640
	0x03DCB4B8 STUR X0, [X27 + 0xBC]
	0x03DCB4BC B 0x3DCAA70
	0x03DCB4C0 ADRP X8, 0x39A000
	0x03DCB4C4 LDR X8, [X8 + 0x2F0]
	0x03DCB4C8 MOV X0, X22
	0x03DCB4CC LDR X1, [X8]
	0x03DCB4D0 BL 0x266C93C
	0x03DCB4D4 MOV X27, X0
	0x03DCB4D8 MOV X0, X20
	0x03DCB4DC MOV W1, W31
	0x03DCB4E0 MOV W2, W31
	0x03DCB4E4 MOV X3, X31
	0x03DCB4E8 BL 0x3D497F8
	0x03DCB4EC STR W0, [X27 + 0x4]
	0x03DCB4F0 B 0x3DCAA70
	0x03DCB4F4 ADRP X8, 0x39A000
	0x03DCB4F8 LDR X8, [X8 + 0x2F0]
	0x03DCB4FC MOV X0, X22
	0x03DCB500 LDR X1, [X8]
	0x03DCB504 BL 0x266C93C
	0x03DCB508 MOV X27, X0
	0x03DCB50C MOV X0, X20
	0x03DCB510 MOV W1, W31
	0x03DCB514 MOV W2, W31
	0x03DCB518 MOV X3, X31
	0x03DCB51C BL 0x3D497F8
	0x03DCB520 STR W0, [X27 + 0x8]
	0x03DCB524 B 0x3DCAA70
	0x03DCB528 ADRP X8, 0x39A000
	0x03DCB52C LDR X8, [X8 + 0x2F0]
	0x03DCB530 MOV X0, X22
	0x03DCB534 LDR X1, [X8]
	0x03DCB538 BL 0x266C93C
	0x03DCB53C MOV X27, X0
	0x03DCB540 MOV X0, X20
	0x03DCB544 MOV W1, W31
	0x03DCB548 MOV X2, X31
	0x03DCB54C BL 0x3D49734
	0x03DCB550 STR S0, [X27 + 0xC]
	0x03DCB554 B 0x3DCAA70
	0x03DCB558 ADRP X8, 0x39A000
	0x03DCB55C LDR X8, [X8 + 0x2F0]
	0x03DCB560 MOV X0, X22
	0x03DCB564 LDR X1, [X8]
	0x03DCB568 BL 0x266C93C
	0x03DCB56C MOV X27, X0
	0x03DCB570 MOV X0, X20
	0x03DCB574 MOV W1, W31
	0x03DCB578 MOV X2, X31
	0x03DCB57C BL 0x3D49734
	0x03DCB580 STR S0, [X27 + 0x10]
	0x03DCB584 B 0x3DCAA70
	0x03DCB588 ADRP X8, 0x39A000
	0x03DCB58C LDR X8, [X8 + 0x2F0]
	0x03DCB590 MOV X0, X22
	0x03DCB594 LDR X1, [X8]
	0x03DCB598 BL 0x266C93C
	0x03DCB59C MOV X27, X0
	0x03DCB5A0 MOV X0, X20
	0x03DCB5A4 MOV W1, W31
	0x03DCB5A8 MOV X2, X31
	0x03DCB5AC BL 0x3D49734
	0x03DCB5B0 STR S0, [X27 + 0x14]
	0x03DCB5B4 B 0x3DCAA70
	0x03DCB5B8 ADRP X8, 0x39A000
	0x03DCB5BC LDR X8, [X8 + 0x2F0]
	0x03DCB5C0 MOV X0, X22
	0x03DCB5C4 LDR X1, [X8]
	0x03DCB5C8 BL 0x266C93C
	0x03DCB5CC MOV X27, X0
	0x03DCB5D0 MOV X0, X20
	0x03DCB5D4 MOV W1, W31
	0x03DCB5D8 MOV X2, X31
	0x03DCB5DC BL 0x3D49734
	0x03DCB5E0 STR S0, [X27 + 0x18]
	0x03DCB5E4 B 0x3DCAA70
	0x03DCB5E8 ADRP X8, 0x39A000
	0x03DCB5EC LDR X8, [X8 + 0x2F0]
	0x03DCB5F0 MOV X0, X22
	0x03DCB5F4 LDR X1, [X8]
	0x03DCB5F8 BL 0x266C93C
	0x03DCB5FC MOV X27, X0
	0x03DCB600 MOV X0, X20
	0x03DCB604 MOV W1, W31
	0x03DCB608 MOV X2, X31
	0x03DCB60C BL 0x3D49640

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x61E000
	011 Move X21, 0x39A000
	012 Move X19, X8
	013 Move W8, [X22+416]
	014 Move X21, [X21+856]
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0x39A000
	021 Move X0, [X0+856]
	022 Call 0x1C17CF4
	023 Move X0, 0x39F000
	024 Move X0, [X0+704]
	025 Call 0x1C17CF4
	026 Move X0, 0x39F000
	027 Move X0, [X0+712]
	028 Call 0x1C17CF4
	029 Move X0, 0x39F000
	030 Move X0, [X0+720]
	031 Call 0x1C17CF4
	032 Move X0, 0x39F000
	033 Move X0, [X0+728]
	034 Call 0x1C17CF4
	035 Move X0, 0x39F000
	036 Move X0, [X0+736]
	037 Call 0x1C17CF4
	038 Move X0, 0x39F000
	039 Move X0, [X0+744]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X22+416], W8
	043 Move X0, [X21]
	044 Move X21, 0x39F000
	045 Move X22, 0x39F000
	046 Move X23, 0x39F000
	047 Move X24, 0x39F000
	048 Move X25, 0x39F000
	049 Move X26, 0x39F000
	050 Move X21, [X21+704]
	051 Move X22, [X22+736]
	052 Move W8, [X0+224]
	053 Move X23, [X23+712]
	054 Move X24, [X24+720]
	055 Move X25, [X25+728]
	056 Move X26, [X26+744]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X31
	061 Call InitialStyle.Get
	062 Move X1, [X21]
	063 Move X21, X0
	064 Move X0, X20
	065 Call 0x266D334, X0
	066 Move X1, [X22]
	067 Move X20, X0
	068 Add X0, X21, 8
	069 Call StyleDataRef`1<LayoutData>.Acquire, X0
	070 Move X1, [X23]
	071 Move X22, X0
	072 Add X0, X21, 16
	073 Call StyleDataRef`1<RareData>.Acquire, X0
	074 Move X1, [X24]
	075 Move X23, X0
	076 Add X0, X21, 24
	077 Call StyleDataRef`1<TransformData>.Acquire, X0
	078 Move X1, [X25]
	079 Move X24, X0
	080 Add X0, X21, 32
	081 Call StyleDataRef`1<TransitionData>.Acquire, X0
	082 Move X1, [X26]
	083 Move X25, X0
	084 Add X0, X21, 40
	085 Call StyleDataRef`1<VisualData>.Acquire, X0
	086 Move W8, 0x3F800000
	087 Move [X19], X20
	088 Move [X19+8], X22
	089 Move [X19+16], X23
	090 Move [X19+24], X24
	091 Move [X19+32], X25
	092 Move [X19+40], X0
	093 Move [X19+56], X31
	094 Move [X19+64], X31
	095 Move [X19+48], X31
	096 Move [X19+76], X31
	097 Move [X19+72], W8
	098 Move [X19+84], W31
	099 Move X20, [X31+64]
	100 Move X19, [X31+72]
	101 Move X22, [X31+48]
	102 Move X21, [X31+56]
	103 Move X24, [X31+32]
	104 Move X23, [X31+40]
	105 Move X26, [X31+16]
	106 Move X25, [X31+24]
	107 Move X30, [X31+80]
	108 Return X0

Method: UnityEngine.UIElements.ComputedStyle CreateInitial()

Disassembly:
	0x03DCB610 STUR X0, [X27 + 0x1C]
	0x03DCB614 B 0x3DCAA70
	0x03DCB618 ADRP X8, 0x39A000
	0x03DCB61C LDR X8, [X8 + 0x2F0]
	0x03DCB620 MOV X0, X22
	0x03DCB624 LDR X1, [X8]
	0x03DCB628 BL 0x266C93C
	0x03DCB62C MOV X27, X0
	0x03DCB630 MOVZ W1, 0x3
	0x03DCB634 MOV X0, X20
	0x03DCB638 MOV W2, W31
	0x03DCB63C MOV X3, X31
	0x03DCB640 BL 0x3D497F8
	0x03DCB644 STR W0, [X27 + 0x24]
	0x03DCB648 B 0x3DCAA70
	0x03DCB64C ADRP X8, 0x39A000
	0x03DCB650 LDR X8, [X8 + 0x2F0]
	0x03DCB654 MOV X0, X22
	0x03DCB658 LDR X1, [X8]
	0x03DCB65C BL 0x266C93C
	0x03DCB660 MOV X27, X0
	0x03DCB664 MOV X0, X20
	0x03DCB668 MOV W1, W31
	0x03DCB66C MOV X2, X31
	0x03DCB670 BL 0x3D49640
	0x03DCB674 STR X0, [X27 + 0x28]
	0x03DCB678 B 0x3DCAA70
	0x03DCB67C ADRP X8, 0x39A000
	0x03DCB680 LDR X8, [X8 + 0x2F0]
	0x03DCB684 MOV X0, X22
	0x03DCB688 LDR X1, [X8]
	0x03DCB68C BL 0x266C93C
	0x03DCB690 MOV X27, X0
	0x03DCB694 MOVZ W1, 0x5
	0x03DCB698 MOV X0, X20
	0x03DCB69C MOV W2, W31
	0x03DCB6A0 MOV X3, X31
	0x03DCB6A4 BL 0x3D497F8
	0x03DCB6A8 STR W0, [X27 + 0x30]
	0x03DCB6AC B 0x3DCAA70
	0x03DCB6B0 ADRP X8, 0x39A000
	0x03DCB6B4 LDR X8, [X8 + 0x2F0]
	0x03DCB6B8 MOV X0, X22
	0x03DCB6BC LDR X1, [X8]
	0x03DCB6C0 BL 0x266C93C
	0x03DCB6C4 MOV X27, X0
	0x03DCB6C8 MOV X0, X20
	0x03DCB6CC MOV W1, W31
	0x03DCB6D0 MOV X2, X31
	0x03DCB6D4 BL 0x3D49734
	0x03DCB6D8 STR S0, [X27 + 0x34]
	0x03DCB6DC B 0x3DCAA70
	0x03DCB6E0 ADRP X8, 0x39A000
	0x03DCB6E4 LDR X8, [X8 + 0x2F0]
	0x03DCB6E8 MOV X0, X22
	0x03DCB6EC LDR X1, [X8]
	0x03DCB6F0 BL 0x266C93C
	0x03DCB6F4 MOV X27, X0
	0x03DCB6F8 MOV X0, X20
	0x03DCB6FC MOV W1, W31
	0x03DCB700 MOV X2, X31
	0x03DCB704 BL 0x3D49734
	0x03DCB708 STR S0, [X27 + 0x38]
	0x03DCB70C B 0x3DCAA70
	0x03DCB710 ADRP X8, 0x39A000
	0x03DCB714 LDR X8, [X8 + 0x2F0]
	0x03DCB718 MOV X0, X22
	0x03DCB71C LDR X1, [X8]
	0x03DCB720 BL 0x266C93C
	0x03DCB724 MOV X27, X0
	0x03DCB728 MOVZ W1, 0x15
	0x03DCB72C MOV X0, X20
	0x03DCB730 MOV W2, W31
	0x03DCB734 MOV X3, X31
	0x03DCB738 BL 0x3D497F8
	0x03DCB73C STR W0, [X27 + 0x3C]
	0x03DCB740 B 0x3DCAA70
	0x03DCB744 ADRP X8, 0x39A000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x61E000
	011 Move X26, 0x39F000
	012 Move X20, 0x39F000
	013 Move X21, 0x39F000
	014 Move X22, 0x39F000
	015 Move X23, 0x39F000
	016 Move X24, 0x39F000
	017 Move X19, X8
	018 Move X26, [X26+752]
	019 Move W8, [X25+417]
	020 Move X20, [X20+760]
	021 Move X21, [X21+768]
	022 Move X22, [X22+776]
	023 Move X23, [X23+784]
	024 Move X24, [X24+792]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {49}
	029 Move X0, 0x39F000
	030 Move X0, [X0+776]
	031 Call 0x1C17CF4
	032 Move X0, 0x39F000
	033 Move X0, [X0+752]
	034 Call 0x1C17CF4
	035 Move X0, 0x39F000
	036 Move X0, [X0+760]
	037 Call 0x1C17CF4
	038 Move X0, 0x39F000
	039 Move X0, [X0+784]
	040 Call 0x1C17CF4
	041 Move X0, 0x39F000
	042 Move X0, [X0+792]
	043 Call 0x1C17CF4
	044 Move X0, 0x39F000
	045 Move X0, [X0+768]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X25+417], W8
	049 Move X0, [X26]
	050 Call 0x266D564
	051 Move X8, [X20]
	052 Move X20, X0
	053 Move X0, X8
	054 Call StyleDataRef`1<LayoutData>.Create
	055 Move X8, [X21]
	056 Move X21, X0
	057 Move X0, X8
	058 Call StyleDataRef`1<RareData>.Create
	059 Move X8, [X22]
	060 Move X22, X0
	061 Move X0, X8
	062 Call StyleDataRef`1<TransformData>.Create
	063 Move X8, [X23]
	064 Move X23, X0
	065 Move X0, X8
	066 Call StyleDataRef`1<TransitionData>.Create
	067 Move X8, [X24]
	068 Move X24, X0
	069 Move X0, X8
	070 Call StyleDataRef`1<VisualData>.Create
	071 Move W8, 0x3F800000
	072 Move [X19], X20
	073 Move [X19+8], X21
	074 Move [X19+16], X22
	075 Move [X19+24], X23
	076 Move [X19+32], X24
	077 Move [X19+40], X0
	078 Move [X19+56], X31
	079 Move [X19+64], X31
	080 Move [X19+48], X31
	081 Move [X19+76], X31
	082 Move [X19+72], W8
	083 Move [X19+84], W31
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X22, [X31+48]
	087 Move X21, [X31+56]
	088 Move X24, [X31+32]
	089 Move X23, [X31+40]
	090 Move X26, [X31+16]
	091 Move X25, [X31+24]
	092 Move X30, [X31+80]
	093 Return X0

Method: UnityEngine.UIElements.ComputedStyle Acquire()

Disassembly:
	0x03DCB748 LDR X8, [X8 + 0x2F0]
	0x03DCB74C MOV X0, X22
	0x03DCB750 LDR X1, [X8]
	0x03DCB754 BL 0x266C93C
	0x03DCB758 MOV X27, X0
	0x03DCB75C MOV X0, X20
	0x03DCB760 MOV W1, W31
	0x03DCB764 MOV X2, X31
	0x03DCB768 BL 0x3D49640
	0x03DCB76C B 0x3DCBB80
	0x03DCB770 ADRP X8, 0x39A000
	0x03DCB774 LDR X8, [X8 + 0x2F0]
	0x03DCB778 MOV X0, X22
	0x03DCB77C LDR X1, [X8]
	0x03DCB780 BL 0x266C93C
	0x03DCB784 MOV X27, X0
	0x03DCB788 MOVZ W1, 0x7
	0x03DCB78C MOV X0, X20
	0x03DCB790 MOV W2, W31
	0x03DCB794 MOV X3, X31
	0x03DCB798 BL 0x3D497F8
	0x03DCB79C STR W0, [X27 + 0x48]
	0x03DCB7A0 B 0x3DCAA70
	0x03DCB7A4 ADRP X8, 0x39A000
	0x03DCB7A8 LDR X8, [X8 + 0x2F0]
	0x03DCB7AC MOV X0, X22
	0x03DCB7B0 LDR X1, [X8]
	0x03DCB7B4 BL 0x266C93C
	0x03DCB7B8 MOV X27, X0
	0x03DCB7BC MOV X0, X20
	0x03DCB7C0 MOV W1, W31
	0x03DCB7C4 MOV X2, X31
	0x03DCB7C8 BL 0x3D49640
	0x03DCB7CC STUR X0, [X27 + 0x4C]
	0x03DCB7D0 B 0x3DCAA70
	0x03DCB7D4 ADRP X8, 0x39A000
	0x03DCB7D8 LDR X8, [X8 + 0x2F0]
	0x03DCB7DC MOV X0, X22
	0x03DCB7E0 LDR X1, [X8]
	0x03DCB7E4 BL 0x266C93C
	0x03DCB7E8 MOV X27, X0
	0x03DCB7EC MOV X0, X20
	0x03DCB7F0 MOV W1, W31
	0x03DCB7F4 MOV X2, X31
	0x03DCB7F8 BL 0x3D49640
	0x03DCB7FC STUR X0, [X27 + 0x54]
	0x03DCB800 B 0x3DCAA70
	0x03DCB804 ADRP X8, 0x39A000
	0x03DCB808 LDR X8, [X8 + 0x2F0]
	0x03DCB80C MOV X0, X22
	0x03DCB810 LDR X1, [X8]
	0x03DCB814 BL 0x266C93C
	0x03DCB818 B 0x3DCBC00
	0x03DCB81C ADRP X8, 0x39A000
	0x03DCB820 LDR X8, [X8 + 0x2F0]
	0x03DCB824 MOV X0, X22
	0x03DCB828 LDR X1, [X8]
	0x03DCB82C BL 0x266C93C
	0x03DCB830 MOV X27, X0
	0x03DCB834 MOV X0, X20
	0x03DCB838 MOV W1, W31
	0x03DCB83C MOV X2, X31
	0x03DCB840 BL 0x3D49640
	0x03DCB844 STUR X0, [X27 + 0x64]
	0x03DCB848 B 0x3DCAA70
	0x03DCB84C ADRP X8, 0x39A000
	0x03DCB850 LDR X8, [X8 + 0x2F0]
	0x03DCB854 MOV X0, X22
	0x03DCB858 LDR X1, [X8]
	0x03DCB85C BL 0x266C93C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X26, 0x61E000
	012 Move X27, 0x39F000
	013 Move X25, 0x39F000
	014 Move X24, 0x39F000
	015 Move X23, 0x39F000
	016 Move X22, 0x39F000
	017 Move X21, 0x39F000
	018 Move X20, X8
	019 Move X27, [X27+704]
	020 Move W8, [X26+418]
	021 Move X25, [X25+736]
	022 Move X24, [X24+712]
	023 Move X23, [X23+720]
	024 Move X22, [X22+728]
	025 Move X21, [X21+744]
	026 Move X19, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {51}
	031 Move X0, 0x39F000
	032 Move X0, [X0+704]
	033 Call 0x1C17CF4
	034 Move X0, 0x39F000
	035 Move X0, [X0+712]
	036 Call 0x1C17CF4
	037 Move X0, 0x39F000
	038 Move X0, [X0+720]
	039 Call 0x1C17CF4
	040 Move X0, 0x39F000
	041 Move X0, [X0+728]
	042 Call 0x1C17CF4
	043 Move X0, 0x39F000
	044 Move X0, [X0+736]
	045 Call 0x1C17CF4
	046 Move X0, 0x39F000
	047 Move X0, [X0+744]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X26+418], W8
	051 Move X1, [X27]
	052 Move X0, X19
	053 Call 0x266D334, X0
	054 Move X1, [X25]
	055 Add X0, X19, 8
	056 Call StyleDataRef`1<LayoutData>.Acquire, X0
	057 Move X1, [X24]
	058 Add X0, X19, 16
	059 Call StyleDataRef`1<RareData>.Acquire, X0
	060 Move X1, [X23]
	061 Add X0, X19, 24
	062 Call StyleDataRef`1<TransformData>.Acquire, X0
	063 Move X1, [X22]
	064 Add X0, X19, 32
	065 Call StyleDataRef`1<TransitionData>.Acquire, X0
	066 Move X1, [X21]
	067 Add X0, X19, 40
	068 Call StyleDataRef`1<VisualData>.Acquire, X0
	069 Move W2, 88
	070 Move X0, X20
	071 Move X1, X19
	072 Call 0x3EB2AC0
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X30, [X31+80]
	082 Move X27, [X31+88]
	083 Return X0

Method: System.Void Release()

Disassembly:
	0x03DCB860 MOV X27, X0
	0x03DCB864 MOV X0, X20
	0x03DCB868 MOV W1, W31
	0x03DCB86C MOV X2, X31
	0x03DCB870 BL 0x3D49640
	0x03DCB874 STUR X0, [X27 + 0x6C]
	0x03DCB878 B 0x3DCAA70
	0x03DCB87C ADRP X8, 0x39A000
	0x03DCB880 LDR X8, [X8 + 0x2F0]
	0x03DCB884 MOV X0, X22
	0x03DCB888 LDR X1, [X8]
	0x03DCB88C BL 0x266C93C
	0x03DCB890 MOV X27, X0
	0x03DCB894 MOV X0, X20
	0x03DCB898 MOV W1, W31
	0x03DCB89C MOV X2, X31
	0x03DCB8A0 BL 0x3D49640
	0x03DCB8A4 STUR X0, [X27 + 0x74]
	0x03DCB8A8 B 0x3DCAA70
	0x03DCB8AC ADRP X8, 0x39A000
	0x03DCB8B0 LDR X8, [X8 + 0x2F0]
	0x03DCB8B4 MOV X0, X22
	0x03DCB8B8 LDR X1, [X8]
	0x03DCB8BC BL 0x266C93C
	0x03DCB8C0 MOV X27, X0
	0x03DCB8C4 MOV X0, X20
	0x03DCB8C8 MOV W1, W31
	0x03DCB8CC MOV X2, X31
	0x03DCB8D0 BL 0x3D49640
	0x03DCB8D4 STUR X0, [X27 + 0x7C]
	0x03DCB8D8 B 0x3DCAA70
	0x03DCB8DC ADRP X8, 0x39A000
	0x03DCB8E0 LDR X8, [X8 + 0x2F0]
	0x03DCB8E4 MOV X0, X22
	0x03DCB8E8 LDR X1, [X8]
	0x03DCB8EC BL 0x266C93C
	0x03DCB8F0 B 0x3DCBD30
	0x03DCB8F4 ADRP X8, 0x39A000
	0x03DCB8F8 LDR X8, [X8 + 0x2F0]
	0x03DCB8FC MOV X0, X22
	0x03DCB900 LDR X1, [X8]
	0x03DCB904 BL 0x266C93C
	0x03DCB908 MOV X27, X0
	0x03DCB90C MOV X0, X20
	0x03DCB910 MOV W1, W31
	0x03DCB914 MOV X2, X31
	0x03DCB918 BL 0x3D49640
	0x03DCB91C STUR X0, [X27 + 0x8C]
	0x03DCB920 B 0x3DCAA70
	0x03DCB924 ADRP X8, 0x39A000
	0x03DCB928 LDR X8, [X8 + 0x2F0]
	0x03DCB92C MOV X0, X22
	0x03DCB930 LDR X1, [X8]
	0x03DCB934 BL 0x266C93C
	0x03DCB938 MOV X27, X0
	0x03DCB93C MOV X0, X20
	0x03DCB940 MOV W1, W31
	0x03DCB944 MOV X2, X31
	0x03DCB948 BL 0x3D49640
	0x03DCB94C STUR X0, [X27 + 0x94]
	0x03DCB950 B 0x3DCAA70
	0x03DCB954 ADRP X8, 0x39A000
	0x03DCB958 LDR X8, [X8 + 0x2F0]
	0x03DCB95C MOV X0, X22

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x61E000
	011 Move X26, 0x39F000
	012 Move X24, 0x39F000
	013 Move X23, 0x39F000
	014 Move X22, 0x39F000
	015 Move X21, 0x39F000
	016 Move X20, 0x39F000
	017 Move X26, [X26+800]
	018 Move W8, [X25+419]
	019 Move X24, [X24+808]
	020 Move X23, [X23+816]
	021 Move X22, [X22+824]
	022 Move X21, [X21+832]
	023 Move X20, [X20+840]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {49}
	029 Move X0, 0x39F000
	030 Move X0, [X0+800]
	031 Call 0x1C17CF4
	032 Move X0, 0x39F000
	033 Move X0, [X0+816]
	034 Call 0x1C17CF4
	035 Move X0, 0x39F000
	036 Move X0, [X0+840]
	037 Call 0x1C17CF4
	038 Move X0, 0x39F000
	039 Move X0, [X0+832]
	040 Call 0x1C17CF4
	041 Move X0, 0x39F000
	042 Move X0, [X0+808]
	043 Call 0x1C17CF4
	044 Move X0, 0x39F000
	045 Move X0, [X0+824]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X25+419], W8
	049 Move X1, [X26]
	050 Move X0, X19
	051 Call 0x266D37C, X0
	052 Move X1, [X24]
	053 Add X0, X19, 8
	054 Call StyleDataRef`1<LayoutData>.Release, X0
	055 Move X1, [X23]
	056 Add X0, X19, 16
	057 Call StyleDataRef`1<RareData>.Release, X0
	058 Move X1, [X22]
	059 Add X0, X19, 24
	060 Call StyleDataRef`1<TransformData>.Release, X0
	061 Move X1, [X21]
	062 Add X0, X19, 32
	063 Call StyleDataRef`1<TransitionData>.Release, X0
	064 Move X1, [X20]
	065 Add X0, X19, 40
	066 Move X20, [X31+64]
	067 Move X19, [X31+72]
	068 Move X22, [X31+48]
	069 Move X21, [X31+56]
	070 Move X24, [X31+32]
	071 Move X23, [X31+40]
	072 Move X26, [X31+16]
	073 Move X25, [X31+24]
	074 Move X30, [X31+80]
	075 Call StyleDataRef`1<VisualData>.Release, X0
	076 Return 

Method: System.Void CopyFrom(ref UnityEngine.UIElements.ComputedStyle other)

Disassembly:
	0x03DCA1E0 LDR X20, [X20 + 0x370]
	0x03DCA1E4 MOV X19, X0
	0x03DCA1E8 TBNZ X8, 0x0, 0x3DCA200
	0x03DCA1EC ADRP X0, 0x39B000
	0x03DCA1F0 LDR X0, [X0 + 0x370]
	0x03DCA1F4 BL 0x1C16CF4
	0x03DCA1F8 MOVZ W8, 0x1
	0x03DCA1FC STRB W8, [X21 + 0x196]
	0x03DCA200 LDR X1, [X20]
	0x03DCA204 ADD X0, X19, 0x10
	0x03DCA208 BL 0x266CDA0
	0x03DCA20C LDR V0, [X0 + 0x3C]
	0x03DCA210 LDP X20, X19, [X31 + 0x10]
	0x03DCA214 LDP X30, X21, [X31], #0x20
	0x03DCA218 RET
	0x03DCA21C STP X30, X21, [X31 - 0x20]!
	0x03DCA220 STP X20, X19, [X31 + 0x10]
	0x03DCA224 ADRP X21, 0x61E000
	0x03DCA228 ADRP X20, 0x39B000
	0x03DCA22C LDRB W8, [X21 + 0x197]
	0x03DCA230 LDR X20, [X20 + 0x370]
	0x03DCA234 MOV X19, X0
	0x03DCA238 TBNZ X8, 0x0, 0x3DCA250
	0x03DCA23C ADRP X0, 0x39B000
	0x03DCA240 LDR X0, [X0 + 0x370]
	0x03DCA244 BL 0x1C16CF4
	0x03DCA248 MOVZ W8, 0x1
	0x03DCA24C STRB W8, [X21 + 0x197]
	0x03DCA250 LDR X1, [X20]
	0x03DCA254 ADD X0, X19, 0x10
	0x03DCA258 BL 0x266CDA0
	0x03DCA25C LDR W0, [X0 + 0x40]
	0x03DCA260 LDP X20, X19, [X31 + 0x10]
	0x03DCA264 LDP X30, X21, [X31], #0x20
	0x03DCA268 RET
	0x03DCA26C STP X30, X21, [X31 - 0x20]!
	0x03DCA270 STP X20, X19, [X31 + 0x10]
	0x03DCA274 ADRP X20, 0x61E000
	0x03DCA278 ADRP X21, 0x39B000
	0x03DCA27C LDRB W8, [X20 + 0x198]
	0x03DCA280 LDR X21, [X21 + 0x368]
	0x03DCA284 MOV X19, X0
	0x03DCA288 TBNZ X8, 0x0, 0x3DCA2A0
	0x03DCA28C ADRP X0, 0x39B000
	0x03DCA290 LDR X0, [X0 + 0x368]
	0x03DCA294 BL 0x1C16CF4
	0x03DCA298 MOVZ W8, 0x1
	0x03DCA29C STRB W8, [X20 + 0x198]
	0x03DCA2A0 LDR X1, [X21]
	0x03DCA2A4 MOV X0, X19
	0x03DCA2A8 BL 0x266C4A0
	0x03DCA2AC LDR W0, [X0 + 0x64]
	0x03DCA2B0 LDP X20, X19, [X31 + 0x10]
	0x03DCA2B4 LDP X30, X21, [X31], #0x20
	0x03DCA2B8 RET
	0x03DCA2BC STP X30, X21, [X31 - 0x20]!
	0x03DCA2C0 STP X20, X19, [X31 + 0x10]
	0x03DCA2C4 ADRP X20, 0x61E000
	0x03DCA2C8 ADRP X21, 0x39B000
	0x03DCA2CC LDRB W8, [X20 + 0x199]
	0x03DCA2D0 LDR X21, [X21 + 0x368]
	0x03DCA2D4 MOV X19, X0
	0x03DCA2D8 TBNZ X8, 0x0, 0x3DCA2F0
	0x03DCA2DC ADRP X0, 0x39B000
	0x03DCA2E0 LDR X0, [X0 + 0x368]
	0x03DCA2E4 BL 0x1C16CF4
	0x03DCA2E8 MOVZ W8, 0x1
	0x03DCA2EC STRB W8, [X20 + 0x199]
	0x03DCA2F0 LDR X1, [X21]
	0x03DCA2F4 MOV X0, X19
	0x03DCA2F8 BL 0x266C4A0
	0x03DCA2FC LDP S0, S1, [X0 + 0x68]
	0x03DCA300 LDP S2, S3, [X0 + 0x70]
	0x03DCA304 LDP X20, X19, [X31 + 0x10]
	0x03DCA308 LDP X30, X21, [X31], #0x20
	0x03DCA30C RET
	0x03DCA310 STP X30, X21, [X31 - 0x20]!
	0x03DCA314 STP X20, X19, [X31 + 0x10]
	0x03DCA318 ADRP X20, 0x61E000
	0x03DCA31C ADRP X21, 0x39B000
	0x03DCA320 LDRB W8, [X20 + 0x19A]
	0x03DCA324 LDR X21, [X21 + 0x368]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x61F000
	012 Move X26, 0x3A0000
	013 Move X25, 0x3A0000
	014 Move X24, 0x3A0000
	015 Move X23, 0x3A0000
	016 Move X22, 0x3A0000
	017 Move X21, 0x3A0000
	018 Move X26, [X26+656]
	019 Move W8, [X27+420]
	020 Move X25, [X25+664]
	021 Move X24, [X24+672]
	022 Move X23, [X23+680]
	023 Move X22, [X22+688]
	024 Move X21, [X21+696]
	025 Move X20, X1
	026 Move X19, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {51}
	031 Move X0, 0x3A0000
	032 Move X0, [X0+664]
	033 Call 0x1C17CF4
	034 Move X0, 0x3A0000
	035 Move X0, [X0+672]
	036 Call 0x1C17CF4
	037 Move X0, 0x3A0000
	038 Move X0, [X0+680]
	039 Call 0x1C17CF4
	040 Move X0, 0x3A0000
	041 Move X0, [X0+656]
	042 Call 0x1C17CF4
	043 Move X0, 0x3A0000
	044 Move X0, [X0+696]
	045 Call 0x1C17CF4
	046 Move X0, 0x3A0000
	047 Move X0, [X0+688]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X27+420], W8
	051 Move X1, [X20]
	052 Move X2, [X26]
	053 Move X0, X19
	054 Call 0x266D3C4, X0, X1
	055 Move X1, [X20+8]
	056 Move X2, [X25]
	057 Add X0, X19, 8
	058 Call StyleDataRef`1<LayoutData>.CopyFrom, X0, X1
	059 Move X1, [X20+16]
	060 Move X2, [X24]
	061 Add X0, X19, 16
	062 Call StyleDataRef`1<RareData>.CopyFrom, X0, X1
	063 Move X1, [X20+24]
	064 Move X2, [X23]
	065 Add X0, X19, 24
	066 Call StyleDataRef`1<TransformData>.CopyFrom, X0, X1
	067 Move X1, [X20+32]
	068 Move X2, [X22]
	069 Add X0, X19, 32
	070 Call StyleDataRef`1<TransitionData>.CopyFrom, X0, X1
	071 Move X1, [X20+40]
	072 Move X2, [X21]
	073 Add X0, X19, 40
	074 Call StyleDataRef`1<VisualData>.CopyFrom, X0, X1
	075 Move X8, [X20+48]
	076 Move X22, [X31+48]
	077 Move X21, [X31+56]
	078 Move X24, [X31+32]
	079 Move X23, [X31+40]
	080 Move X26, [X31+16]
	081 Move X25, [X31+24]
	082 Move [X19+48], X8
	083 Move X8, [X20+56]
	084 Move [X19+56], X8
	085 Move X8, [X20+64]
	086 Move [X19+64], X8
	087 Move V0, [X20+72]
	088 Move [X19+72], S0
	089 Move X8, [X20+80]
	090 Move [X19+80], X8
	091 Move X20, [X31+64]
	092 Move X19, [X31+72]
	093 Move X30, [X31+80]
	094 Move X27, [X31+88]
	095 Return 

Method: System.Void ApplyProperties(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.ComputedStyle parentStyle)

Disassembly:
	0x03DCB960 LDR X1, [X8]
	0x03DCB964 BL 0x266C93C
	0x03DCB968 MOV X27, X0
	0x03DCB96C MOV X0, X20
	0x03DCB970 MOV W1, W31
	0x03DCB974 MOV X2, X31
	0x03DCB978 BL 0x3D49640
	0x03DCB97C STUR X0, [X27 + 0x9C]
	0x03DCB980 B 0x3DCAA70
	0x03DCB984 ADRP X8, 0x39A000
	0x03DCB988 LDR X8, [X8 + 0x2F0]
	0x03DCB98C MOV X0, X22
	0x03DCB990 LDR X1, [X8]
	0x03DCB994 BL 0x266C93C
	0x03DCB998 MOV X27, X0
	0x03DCB99C MOV X0, X20
	0x03DCB9A0 MOV W1, W31
	0x03DCB9A4 MOV X2, X31
	0x03DCB9A8 BL 0x3D49640
	0x03DCB9AC STUR X0, [X27 + 0xA4]
	0x03DCB9B0 B 0x3DCAA70
	0x03DCB9B4 ADRP X8, 0x39A000
	0x03DCB9B8 LDR X8, [X8 + 0x2F0]
	0x03DCB9BC MOV X0, X22
	0x03DCB9C0 LDR X1, [X8]
	0x03DCB9C4 BL 0x266C93C
	0x03DCB9C8 MOV X27, X0
	0x03DCB9CC MOV X0, X20
	0x03DCB9D0 MOV W1, W31
	0x03DCB9D4 MOV X2, X31
	0x03DCB9D8 BL 0x3D49640
	0x03DCB9DC STUR X0, [X27 + 0xAC]
	0x03DCB9E0 B 0x3DCAA70
	0x03DCB9E4 ADRP X8, 0x39A000
	0x03DCB9E8 LDR X8, [X8 + 0x2F0]
	0x03DCB9EC MOV X0, X22
	0x03DCB9F0 LDR X1, [X8]
	0x03DCB9F4 BL 0x266C93C
	0x03DCB9F8 MOV X27, X0
	0x03DCB9FC MOVZ W1, 0xB
	0x03DCBA00 MOV X0, X20
	0x03DCBA04 MOV W2, W31
	0x03DCBA08 MOV X3, X31
	0x03DCBA0C BL 0x3D497F8
	0x03DCBA10 STR W0, [X27 + 0xB4]
	0x03DCBA14 B 0x3DCAA70
	0x03DCBA18 ADRP X8, 0x39A000
	0x03DCBA1C LDR X8, [X8 + 0x2F0]
	0x03DCBA20 MOV X0, X22
	0x03DCBA24 LDR X1, [X8]
	0x03DCBA28 BL 0x266C93C
	0x03DCBA2C MOV X27, X0
	0x03DCBA30 MOV X0, X20
	0x03DCBA34 MOV W1, W31
	0x03DCBA38 MOV X2, X31
	0x03DCBA3C BL 0x3D49640
	0x03DCBA40 STR X0, [X27 + 0xB8]
	0x03DCBA44 B 0x3DCAA70
	0x03DCBA48 ADRP X8, 0x39A000
	0x03DCBA4C LDR X8, [X8 + 0x2F0]
	0x03DCBA50 MOV X0, X22
	0x03DCBA54 LDR X1, [X8]
	0x03DCBA58 BL 0x266C93C
	0x03DCBA5C MOV X27, X0
	0x03DCBA60 MOV X0, X20
	0x03DCBA64 MOV W1, W31
	0x03DCBA68 MOV X2, X31
	0x03DCBA6C BL 0x3D49640
	0x03DCBA70 STR X0, [X27 + 0xC0]
	0x03DCBA74 B 0x3DCAA70
	0x03DCBA78 ADRP X8, 0x39A000
	0x03DCBA7C LDR X8, [X8 + 0x2F0]
	0x03DCBA80 MOV X0, X22
	0x03DCBA84 LDR X1, [X8]
	0x03DCBA88 BL 0x266C93C
	0x03DCBA8C MOV X27, X0
	0x03DCBA90 MOV X0, X20
	0x03DCBA94 MOV W1, W31
	0x03DCBA98 MOV X2, X31
	0x03DCBA9C BL 0x3D49640
	0x03DCBAA0 STR X0, [X27 + 0xC8]
	0x03DCBAA4 B 0x3DCAA70
	0x03DCBAA8 ADRP X8, 0x39A000
	0x03DCBAAC LDR X8, [X8 + 0x300]
	0x03DCBAB0 MOV X0, X21
	0x03DCBAB4 LDR X1, [X8]
	0x03DCBAB8 BL 0x266C4BC
	0x03DCBABC MOV X27, X0
	0x03DCBAC0 MOV X0, X20
	0x03DCBAC4 MOV W1, W31
	0x03DCBAC8 MOV X2, X31
	0x03DCBACC BL 0x3D49640
	0x03DCBAD0 STR X0, [X27 + 0x10]
	0x03DCBAD4 B 0x3DCAA70
	0x03DCBAD8 ADRP X8, 0x39A000
	0x03DCBADC LDR X8, [X8 + 0x300]
	0x03DCBAE0 MOV X0, X21
	0x03DCBAE4 LDR X1, [X8]
	0x03DCBAE8 BL 0x266C4BC
	0x03DCBAEC MOV X27, X0
	0x03DCBAF0 MOV X0, X20
	0x03DCBAF4 MOV W1, W31
	0x03DCBAF8 MOV X2, X31
	0x03DCBAFC BL 0x3D49640
	0x03DCBB00 STR X0, [X27 + 0x18]
	0x03DCBB04 B 0x3DCAA70
	0x03DCBB08 ADRP X8, 0x39A000
	0x03DCBB0C LDR X8, [X8 + 0x300]
	0x03DCBB10 MOV X0, X21
	0x03DCBB14 LDR X1, [X8]
	0x03DCBB18 BL 0x266C4BC
	0x03DCBB1C MOV X27, X0
	0x03DCBB20 ADD X8, X31, 0x10
	0x03DCBB24 MOV X0, X20
	0x03DCBB28 MOV W1, W31
	0x03DCBB2C MOV X2, X31
	0x03DCBB30 BL 0x3D5147C
	0x03DCBB34 LDUR V0, [X31 + 0x1C]
	0x03DCBB38 LDR V1, [X31 + 0x1]
	0x03DCBB3C STUR V0, [X31 + 0x3C]
	0x03DCBB40 STR V1, [X31 + 0x3]
	0x03DCBB44 LDR V0, [X31 + 0x3]
	0x03DCBB48 LDUR V1, [X31 + 0x3C]
	0x03DCBB4C STR V0, [X27 + 0x2]
	0x03DCBB50 STUR V1, [X27 + 0x2C]
	0x03DCBB54 B 0x3DCAA70
	0x03DCBB58 ADRP X8, 0x39A000
	0x03DCBB5C LDR X8, [X8 + 0x300]
	0x03DCBB60 MOV X0, X21
	0x03DCBB64 LDR X1, [X8]
	0x03DCBB68 BL 0x266C4BC
	0x03DCBB6C MOV X27, X0
	0x03DCBB70 MOV X0, X20
	0x03DCBB74 MOV W1, W31
	0x03DCBB78 MOV X2, X31
	0x03DCBB7C BL 0x3D50560
	0x03DCBB80 STR X0, [X27 + 0x40]
	0x03DCBB84 B 0x3DCAA70
	0x03DCBB88 ADRP X8, 0x39A000
	0x03DCBB8C LDR X8, [X8 + 0x300]
	0x03DCBB90 MOV X0, X21
	0x03DCBB94 LDR X1, [X8]
	0x03DCBB98 BL 0x266C4BC
	0x03DCBB9C MOV X27, X0
	0x03DCBBA0 MOV X0, X20
	0x03DCBBA4 MOV W1, W31
	0x03DCBBA8 MOV X2, X31
	0x03DCBBAC BL 0x3D50030
	0x03DCBBB0 STP X0, X1, [X27 + 0x48]
	0x03DCBBB4 B 0x3DCAA70
	0x03DCBBB8 ADRP X8, 0x39A000
	0x03DCBBBC LDR X8, [X8 + 0x300]
	0x03DCBBC0 MOV X0, X21
	0x03DCBBC4 LDR X1, [X8]
	0x03DCBBC8 BL 0x266C4BC
	0x03DCBBCC MOV X27, X0
	0x03DCBBD0 MOVZ W1, 0x6
	0x03DCBBD4 MOV X0, X20
	0x03DCBBD8 MOV W2, W31
	0x03DCBBDC MOV X3, X31
	0x03DCBBE0 BL 0x3D497F8
	0x03DCBBE4 STR W0, [X27 + 0x58]
	0x03DCBBE8 B 0x3DCAA70
	0x03DCBBEC ADRP X8, 0x39A000
	0x03DCBBF0 LDR X8, [X8 + 0x300]
	0x03DCBBF4 MOV X0, X21
	0x03DCBBF8 LDR X1, [X8]
	0x03DCBBFC BL 0x266C4BC
	0x03DCBC00 MOV X27, X0
	0x03DCBC04 MOV X0, X20
	0x03DCBC08 MOV W1, W31
	0x03DCBC0C MOV X2, X31
	0x03DCBC10 BL 0x3D49640
	0x03DCBC14 STUR X0, [X27 + 0x5C]
	0x03DCBC18 B 0x3DCAA70
	0x03DCBC1C ADRP X8, 0x39A000
	0x03DCBC20 LDR X8, [X8 + 0x300]
	0x03DCBC24 MOV X0, X21
	0x03DCBC28 LDR X1, [X8]
	0x03DCBC2C BL 0x266C4BC
	0x03DCBC30 MOV X27, X0
	0x03DCBC34 MOVZ W1, 0xF
	0x03DCBC38 MOV X0, X20
	0x03DCBC3C MOV W2, W31
	0x03DCBC40 MOV X3, X31
	0x03DCBC44 BL 0x3D497F8
	0x03DCBC48 STR W0, [X27 + 0x64]
	0x03DCBC4C B 0x3DCAA70
	0x03DCBC50 ADRP X8, 0x39A000
	0x03DCBC54 LDR X8, [X8 + 0x300]
	0x03DCBC58 MOV X0, X21
	0x03DCBC5C LDR X1, [X8]
	0x03DCBC60 BL 0x266C4BC
	0x03DCBC64 MOV X27, X0
	0x03DCBC68 MOV X0, X20
	0x03DCBC6C MOV W1, W31
	0x03DCBC70 MOV X2, X31
	0x03DCBC74 BL 0x3D49930
	0x03DCBC78 STP S0, S1, [X27 + 0x68]
	0x03DCBC7C STP S2, S3, [X27 + 0x70]
	0x03DCBC80 B 0x3DCAA70
	0x03DCBC84 ADRP X8, 0x39A000
	0x03DCBC88 LDR X8, [X8 + 0x300]
	0x03DCBC8C MOV X0, X21
	0x03DCBC90 LDR X1, [X8]
	0x03DCBC94 BL 0x266C4BC
	0x03DCBC98 MOV X27, X0
	0x03DCBC9C MOV X0, X20
	0x03DCBCA0 MOV W1, W31
	0x03DCBCA4 MOV X2, X31
	0x03DCBCA8 BL 0x3D49734
	0x03DCBCAC STR S0, [X27 + 0x78]
	0x03DCBCB0 B 0x3DCAA70
	0x03DCBCB4 ADRP X8, 0x39A000
	0x03DCBCB8 LDR X8, [X8 + 0x300]
	0x03DCBCBC MOV X0, X21
	0x03DCBCC0 LDR X1, [X8]
	0x03DCBCC4 BL 0x266C4BC
	0x03DCBCC8 MOV X27, X0
	0x03DCBCCC MOVZ W1, 0x13
	0x03DCBCD0 MOV X0, X20
	0x03DCBCD4 MOV W2, W31
	0x03DCBCD8 MOV X3, X31
	0x03DCBCDC BL 0x3D497F8
	0x03DCBCE0 STR W0, [X27 + 0x7C]
	0x03DCBCE4 B 0x3DCAA70
	0x03DCBCE8 ADRP X8, 0x39A000
	0x03DCBCEC LDR X8, [X8 + 0x300]
	0x03DCBCF0 MOV X0, X21
	0x03DCBCF4 LDR X1, [X8]
	0x03DCBCF8 BL 0x266C4BC
	0x03DCBCFC MOV X27, X0
	0x03DCBD00 MOVZ W1, 0x14
	0x03DCBD04 MOV X0, X20
	0x03DCBD08 MOV W2, W31
	0x03DCBD0C MOV X3, X31
	0x03DCBD10 BL 0x3D497F8
	0x03DCBD14 STR W0, [X27 + 0x80]
	0x03DCBD18 B 0x3DCAA70
	0x03DCBD1C ADRP X8, 0x39A000
	0x03DCBD20 LDR X8, [X8 + 0x300]
	0x03DCBD24 MOV X0, X21
	0x03DCBD28 LDR X1, [X8]
	0x03DCBD2C BL 0x266C4BC
	0x03DCBD30 MOV X27, X0
	0x03DCBD34 MOV X0, X20
	0x03DCBD38 MOV W1, W31
	0x03DCBD3C MOV X2, X31
	0x03DCBD40 BL 0x3D49640
	0x03DCBD44 STUR X0, [X27 + 0x84]
	0x03DCBD48 B 0x3DCAA70
	0x03DCBD4C LDP X20, X19, [X31 + 0xA0]
	0x03DCBD50 LDP X22, X21, [X31 + 0x90]
	0x03DCBD54 LDP X24, X23, [X31 + 0x80]
	0x03DCBD58 LDP X26, X25, [X31 + 0x70]
	0x03DCBD5C LDP X28, X27, [X31 + 0x60]
	0x03DCBD60 LDP X29, X30, [X31 + 0x50]
	0x03DCBD64 ADD X31, X31, 0xB0
	0x03DCBD68 RET
	0x03DCBD6C BL 0x1C16F20
	0x03DCBD70 SUB X31, X31, 0x80
	0x03DCBD74 STR X30, [X31 + 0x50]
	0x03DCBD78 STP X22, X21, [X31 + 0x60]
	0x03DCBD7C STP X20, X19, [X31 + 0x70]
	0x03DCBD80 MRS X22, 0xC000
	0x03DCBD84 LDR X8, [X22 + 0x28]
	0x03DCBD88 ADRP X21, 0x61D000
	0x03DCBD8C MOV X19, X1
	0x03DCBD90 MOV X20, X0
	0x03DCBD94 STR X8, [X31 + 0x48]
	0x03DCBD98 LDRB W8, [X21 + 0x1A6]
	0x03DCBD9C TBNZ X8, 0x0, 0x3DCBE08
	0x03DCBDA0 ADRP X0, 0x328000
	0x03DCBDA4 LDR X0, [X0 + 0xA28]
	0x03DCBDA8 BL 0x1C16CF4
	0x03DCBDAC ADRP X0, 0x396000
	0x03DCBDB0 LDR X0, [X0 + 0xFE8]
	0x03DCBDB4 BL 0x1C16CF4
	0x03DCBDB8 ADRP X0, 0x39A000
	0x03DCBDBC LDR X0, [X0 + 0x308]
	0x03DCBDC0 BL 0x1C16CF4
	0x03DCBDC4 ADRP X0, 0x39A000
	0x03DCBDC8 LDR X0, [X0 + 0x300]
	0x03DCBDCC BL 0x1C16CF4
	0x03DCBDD0 ADRP X0, 0x39A000
	0x03DCBDD4 LDR X0, [X0 + 0x2F8]
	0x03DCBDD8 BL 0x1C16CF4
	0x03DCBDDC ADRP X0, 0x39A000
	0x03DCBDE0 LDR X0, [X0 + 0x2F0]
	0x03DCBDE4 BL 0x1C16CF4
	0x03DCBDE8 ADRP X0, 0x39B000
	0x03DCBDEC LDR X0, [X0 + 0x4A8]
	0x03DCBDF0 BL 0x1C16CF4
	0x03DCBDF4 ADRP X0, 0x39E000
	0x03DCBDF8 LDR X0, [X0 + 0x260]
	0x03DCBDFC BL 0x1C16CF4
	0x03DCBE00 MOVZ W8, 0x1
	0x03DCBE04 STRB W8, [X21 + 0x1A6]
	0x03DCBE08 MOVI V0.2D, 0x0
	0x03DCBE0C STP V0, V0, [X31]
	0x03DCBE10 LDP W1, W8, [X19]
	0x03DCBE14 CMP W8, 0x4
	0x03DCBE18 B.NE 0x3DCBE48
	0x03DCBE1C MOV X0, X20
	0x03DCBE20 BL 0x3DC71DC
	0x03DCBE24 LDR X8, [X22 + 0x28]
	0x03DCBE28 LDR X9, [X31 + 0x48]
	0x03DCBE2C CMP X8, X9
	0x03DCBE30 B.NE 0x3DCCB84
	0x03DCBE34 LDP X20, X19, [X31 + 0x70]
	0x03DCBE38 LDP X22, X21, [X31 + 0x60]
	0x03DCBE3C LDR X30, [X31 + 0x50]
	0x03DCBE40 ADD X31, X31, 0x80
	0x03DCBE44 RET
	0x03DCBE48 MOVZ W8, 0x20
	0x03DCBE4C MOVK W8, 0x20000
	0x03DCBE50 CMP W1, W8
	0x03DCBE54 ADD X21, X19, 0x8
	0x03DCBE58 B.LE 0x3DCBE98
	0x03DCBE5C SUB W8, W1, 0x70000
	0x03DCBE60 CMP W8, 0xF
	0x03DCBE64 B.HI 0x3DCBF14
	0x03DCBE68 ADRP X9, 0xFFFFFFFFFCDCD000
	0x03DCBE6C ADD X9, X9, 0x24A
	0x03DCBE70 ADR X10, 0x10
	0x03DCBE74 LDRB W11, [X9, X8, LSL]
	0x03DCBE78 ADD X10, X10, X11, 0x2, LSL
	0x03DCBE7C BR X10
	0x03DCBE80 ADRP X8, 0x39A000
	0x03DCBE84 LDR X8, [X8 + 0x2F8]
	0x03DCBE88 ADD X0, X20, 0x28
	0x03DCBE8C LDR X1, [X8]
	0x03DCBE90 BL 0x266DB34
	0x03DCBE94 B 0x3DCBFAC
	0x03DCBE98 SUB W8, W1, 0x20000
	0x03DCBE9C CMP W8, 0x20
	0x03DCBEA0 B.HI 0x3DCBF74
	0x03DCBEA4 ADRP X9, 0xFFFFFFFFFCDCD000
	0x03DCBEA8 ADD X9, X9, 0x1F6
	0x03DCBEAC ADR X10, 0x10
	0x03DCBEB0 LDRH W11, [X9, X8, LSL #1]
	0x03DCBEB4 ADD X10, X10, X11, 0x2, LSL
	0x03DCBEB8 BR X10
	0x03DCBEBC ADRP X21, 0x39A000
	0x03DCBEC0 LDR X21, [X21 + 0x2F0]
	0x03DCBEC4 ADD X20, X20, 0x8
	0x03DCBEC8 MOV X0, X20
	0x03DCBECC LDR X1, [X21]
	0x03DCBED0 BL 0x266C93C
	0x03DCBED4 LDR V0, [X19 + 0x8]
	0x03DCBED8 MOVZ W8, 0x7F800000
	0x03DCBEDC FMOV S1, W8
	0x03DCBEE0 MOVZ W9, 0x80000000
	0x03DCBEE4 FCVTZS W8, S0
	0x03DCBEE8 FCMP S0, S1
	0x03DCBEEC CSEL W8, W9, W8, EQ
	0x03DCBEF0 STR W8, [X0]
	0x03DCBEF4 LDR W8, [X19 + 0x4]
	0x03DCBEF8 CMP W8, 0x2
	0x03DCBEFC B.NE 0x3DCBE24
	0x03DCBF00 LDR X1, [X21]
	0x03DCBF04 MOV X0, X20
	0x03DCBF08 BL 0x266C93C
	0x03DCBF0C STR W31, [X0]
	0x03DCBF10 B 0x3DCBE24
	0x03DCBF14 MOVN W8, 0x30000
	0x03DCBF18 ADD W8, W1, W8
	0x03DCBF1C CMP W8, 0x8
	0x03DCBF20 B.HI 0x3DCBFC8
	0x03DCBF24 ADRP X9, 0xFFFFFFFFFCDCD000
	0x03DCBF28 ADD X9, X9, 0x238
	0x03DCBF2C ADR X10, 0x10
	0x03DCBF30 LDRH W11, [X9, X8, LSL #1]
	0x03DCBF34 ADD X10, X10, X11, 0x2, LSL
	0x03DCBF38 BR X10
	0x03DCBF3C ADRP X8, 0x39A000
	0x03DCBF40 LDR X8, [X8 + 0x308]
	0x03DCBF44 ADD X0, X20, 0x10
	0x03DCBF48 LDR X1, [X8]
	0x03DCBF4C BL 0x266CDBC
	0x03DCBF50 LDR V0, [X21]
	0x03DCBF54 MOVZ W8, 0x7F800000
	0x03DCBF58 FMOV S1, W8
	0x03DCBF5C MOVZ W9, 0x80000000
	0x03DCBF60 FCVTZS W8, S0
	0x03DCBF64 FCMP S0, S1
	0x03DCBF68 CSEL W8, W9, W8, EQ
	0x03DCBF6C STR W8, [X0 + 0x18]
	0x03DCBF70 B 0x3DCBE24
	0x03DCBF74 SUB W8, W1, 0x10000
	0x03DCBF78 CMP W8, 0xD
	0x03DCBF7C B.HI 0x3DCBFC8
	0x03DCBF80 ADRP X9, 0xFFFFFFFFFCDCD000
	0x03DCBF84 ADD X9, X9, 0x1DA
	0x03DCBF88 ADR X10, 0x10
	0x03DCBF8C LDRH W11, [X9, X8, LSL #1]
	0x03DCBF90 ADD X10, X10, X11, 0x2, LSL
	0x03DCBF94 BR X10
	0x03DCBF98 ADRP X8, 0x39A000
	0x03DCBF9C LDR X8, [X8 + 0x300]
	0x03DCBFA0 MOV X0, X20
	0x03DCBFA4 LDR X1, [X8]
	0x03DCBFA8 BL 0x266C4BC
	0x03DCBFAC LDR X8, [X19 + 0x10]
	0x03DCBFB0 LDR V0, [X19]
	0x03DCBFB4 STR X8, [X31 + 0x30]
	0x03DCBFB8 STR V0, [X31 + 0x2]
	0x03DCBFBC LDUR V0, [X31 + 0x28]
	0x03DCBFC0 STR V0, [X0]
	0x03DCBFC4 B 0x3DCBE24
	0x03DCBFC8 ADRP X8, 0x39B000
	0x03DCBFCC LDR X8, [X8 + 0x4A8]
	0x03DCBFD0 STR W1, [X31 + 0x20]
	0x03DCBFD4 ADD X1, X31, 0x20
	0x03DCBFD8 LDR X0, [X8]
	0x03DCBFDC BL 0x1C16E04
	0x03DCBFE0 ADRP X8, 0x39E000
	0x03DCBFE4 LDR X8, [X8 + 0x260]
	0x03DCBFE8 MOV X1, X0
	0x03DCBFEC MOV X2, X31
	0x03DCBFF0 LDR X8, [X8]
	0x03DCBFF4 MOV X0, X8
	0x03DCBFF8 BL 0x321EFD0
	0x03DCBFFC ADRP X8, 0x328000
	0x03DCC000 LDR X8, [X8 + 0xA28]
	0x03DCC004 MOV X19, X0
	0x03DCC008 LDR X8, [X8]
	0x03DCC00C LDR W9, [X8 + 0xE0]
	0x03DCC010 CBNZ W9, 0x3DCC01C
	0x03DCC014 MOV X0, X8
	0x03DCC018 BL 0x1C16DFC
	0x03DCC01C MOV X0, X19
	0x03DCC020 MOV X1, X31
	0x03DCC024 BL 0x3C070A4
	0x03DCC028 B 0x3DCBE24
	0x03DCC02C ADRP X8, 0x399000
	0x03DCC030 LDR X8, [X8 + 0x2F8]
	0x03DCC034 ADD X0, X20, 0x28
	0x03DCC038 LDR X1, [X8]
	0x03DCC03C BL 0x266DB34
	0x03DCC040 MOV X19, X0
	0x03DCC044 MOV X0, X21
	0x03DCC048 MOV X1, X31
	0x03DCC04C BL 0x32C05E4
	0x03DCC050 TBZ X0, 0x0, 0x3DCCB64
	0x03DCC054 MOV X0, X21
	0x03DCC058 MOV X1, X31
	0x03DCC05C BL 0x32C05F4
	0x03DCC060 ADD X8, X31, 0x20
	0x03DCC064 MOV X1, X31
	0x03DCC068 BL 0x3DE2500
	0x03DCC06C LDP V0, V1, [X31 + 0x20]
	0x03DCC070 STP V0, V1, [X31]
	0x03DCC074 B 0x3DCCB6C
	0x03DCC078 ADRP X8, 0x399000
	0x03DCC07C LDR X8, [X8 + 0x2F8]
	0x03DCC080 ADD X0, X20, 0x28
	0x03DCC084 LDR X1, [X8]
	0x03DCC088 BL 0x266DB34
	0x03DCC08C LDR V0, [X19]
	0x03DCC090 LDR X8, [X19 + 0x10]
	0x03DCC094 STR V0, [X31 + 0x2]
	0x03DCC098 LDR X9, [X31 + 0x28]
	0x03DCC09C STR X8, [X31 + 0x30]
	0x03DCC0A0 AND X8, X8, 0x0
	0x03DCC0A4 STR W8, [X0 + 0x38]
	0x03DCC0A8 STR X9, [X0 + 0x30]
	0x03DCC0AC B 0x3DCBE24
	0x03DCC0B0 ADRP X8, 0x399000
	0x03DCC0B4 LDR X8, [X8 + 0x2F8]
	0x03DCC0B8 ADD X0, X20, 0x28
	0x03DCC0BC LDR X1, [X8]
	0x03DCC0C0 BL 0x266DB34
	0x03DCC0C4 LDR V0, [X19]
	0x03DCC0C8 LDR X8, [X19 + 0x10]
	0x03DCC0CC STR V0, [X31 + 0x2]
	0x03DCC0D0 LDR X9, [X31 + 0x28]
	0x03DCC0D4 STR X8, [X31 + 0x30]
	0x03DCC0D8 AND X8, X8, 0x0
	0x03DCC0DC STR W8, [X0 + 0x44]
	0x03DCC0E0 STUR X9, [X0 + 0x3C]
	0x03DCC0E4 B 0x3DCBE24
	0x03DCC0E8 ADRP X8, 0x399000
	0x03DCC0EC LDR X8, [X8 + 0x2F8]
	0x03DCC0F0 ADD X0, X20, 0x28
	0x03DCC0F4 LDR X1, [X8]
	0x03DCC0F8 BL 0x266DB34
	0x03DCC0FC LDR X8, [X19 + 0x8]
	0x03DCC100 STR X8, [X0 + 0x48]
	0x03DCC104 B 0x3DCBE24
	0x03DCC108 ADRP X8, 0x399000
	0x03DCC10C LDR X8, [X8 + 0x2F8]
	0x03DCC110 ADD X0, X20, 0x28
	0x03DCC114 LDR X1, [X8]
	0x03DCC118 BL 0x266DB34
	0x03DCC11C LDR X8, [X19 + 0x10]
	0x03DCC120 LDR V0, [X19]
	0x03DCC124 STR X8, [X31 + 0x30]
	0x03DCC128 STR V0, [X31 + 0x2]
	0x03DCC12C LDUR V0, [X31 + 0x28]
	0x03DCC130 STUR V0, [X0 + 0x64]
	0x03DCC134 B 0x3DCBE24
	0x03DCC138 ADRP X8, 0x399000
	0x03DCC13C LDR X8, [X8 + 0x2F8]
	0x03DCC140 ADD X0, X20, 0x28
	0x03DCC144 LDR X1, [X8]
	0x03DCC148 BL 0x266DB34
	0x03DCC14C B 0x3DCCA40
	0x03DCC150 ADRP X8, 0x399000
	0x03DCC154 LDR X8, [X8 + 0x2F8]
	0x03DCC158 ADD X0, X20, 0x28
	0x03DCC15C LDR X1, [X8]
	0x03DCC160 BL 0x266DB34
	0x03DCC164 B 0x3DCCA60
	0x03DCC168 ADRP X8, 0x399000
	0x03DCC16C LDR X8, [X8 + 0x2F8]
	0x03DCC170 ADD X0, X20, 0x28
	0x03DCC174 LDR X1, [X8]
	0x03DCC178 BL 0x266DB34
	0x03DCC17C LDR X8, [X19 + 0x10]
	0x03DCC180 LDR V0, [X19]
	0x03DCC184 STR X8, [X31 + 0x30]
	0x03DCC188 STR V0, [X31 + 0x2]
	0x03DCC18C LDUR V0, [X31 + 0x28]
	0x03DCC190 STUR V0, [X0 + 0x84]
	0x03DCC194 B 0x3DCBE24
	0x03DCC198 ADRP X8, 0x399000
	0x03DCC19C LDR X8, [X8 + 0x2F8]
	0x03DCC1A0 ADD X0, X20, 0x28
	0x03DCC1A4 LDR X1, [X8]
	0x03DCC1A8 BL 0x266DB34
	0x03DCC1AC LDR X8, [X19 + 0x10]
	0x03DCC1B0 LDR V0, [X19]
	0x03DCC1B4 STR X8, [X31 + 0x30]
	0x03DCC1B8 STR V0, [X31 + 0x2]
	0x03DCC1BC LDUR V0, [X31 + 0x28]
	0x03DCC1C0 STUR V0, [X0 + 0x94]
	0x03DCC1C4 B 0x3DCBE24
	0x03DCC1C8 ADRP X8, 0x399000
	0x03DCC1CC LDR X8, [X8 + 0x2F8]
	0x03DCC1D0 ADD X0, X20, 0x28
	0x03DCC1D4 LDR X1, [X8]
	0x03DCC1D8 BL 0x266DB34
	0x03DCC1DC LDR X8, [X19 + 0x10]
	0x03DCC1E0 LDR V0, [X19]
	0x03DCC1E4 STR X8, [X31 + 0x30]
	0x03DCC1E8 STR V0, [X31 + 0x2]
	0x03DCC1EC LDUR V0, [X31 + 0x28]
	0x03DCC1F0 STUR V0, [X0 + 0xA4]
	0x03DCC1F4 B 0x3DCBE24
	0x03DCC1F8 ADRP X8, 0x399000
	0x03DCC1FC LDR X8, [X8 + 0x2F8]
	0x03DCC200 ADD X0, X20, 0x28
	0x03DCC204 LDR X1, [X8]
	0x03DCC208 BL 0x266DB34
	0x03DCC20C LDR X8, [X19 + 0x8]
	0x03DCC210 STUR X8, [X0 + 0xB4]
	0x03DCC214 B 0x3DCBE24
	0x03DCC218 ADRP X8, 0x399000
	0x03DCC21C LDR X8, [X8 + 0x2F8]
	0x03DCC220 ADD X0, X20, 0x28
	0x03DCC224 LDR X1, [X8]
	0x03DCC228 BL 0x266DB34
	0x03DCC22C LDR X8, [X19 + 0x8]
	0x03DCC230 STUR X8, [X0 + 0xBC]
	0x03DCC234 B 0x3DCBE24
	0x03DCC238 ADRP X8, 0x399000
	0x03DCC23C LDR X8, [X8 + 0x2F8]
	0x03DCC240 ADD X0, X20, 0x28
	0x03DCC244 LDR X1, [X8]
	0x03DCC248 BL 0x266DB34
	0x03DCC24C LDR V0, [X21]
	0x03DCC250 STR S0, [X0 + 0xC4]
	0x03DCC254 B 0x3DCBE24
	0x03DCC258 ADRP X8, 0x399000
	0x03DCC25C LDR X8, [X8 + 0x2F8]
	0x03DCC260 ADD X0, X20, 0x28
	0x03DCC264 LDR X1, [X8]
	0x03DCC268 BL 0x266DB34
	0x03DCC26C LDR V0, [X21]
	0x03DCC270 MOVZ W8, 0x7F800000
	0x03DCC274 FMOV S1, W8
	0x03DCC278 MOVZ W9, 0x80000000
	0x03DCC27C FCVTZS W8, S0
	0x03DCC280 FCMP S0, S1
	0x03DCC284 CSEL W8, W9, W8, EQ
	0x03DCC288 STR W8, [X0 + 0xC8]
	0x03DCC28C B 0x3DCBE24
	0x03DCC290 ADRP X8, 0x399000
	0x03DCC294 LDR X8, [X8 + 0x308]
	0x03DCC298 ADD X0, X20, 0x10
	0x03DCC29C LDR X1, [X8]
	0x03DCC2A0 BL 0x266CDBC
	0x03DCC2A4 LDR X8, [X19 + 0x10]
	0x03DCC2A8 LDR V0, [X19]
	0x03DCC2AC STR X8, [X31 + 0x30]
	0x03DCC2B0 STR V0, [X31 + 0x2]
	0x03DCC2B4 LDUR V0, [X31 + 0x28]
	0x03DCC2B8 STUR V0, [X0 + 0x1C]
	0x03DCC2BC B 0x3DCBE24
	0x03DCC2C0 ADRP X8, 0x399000
	0x03DCC2C4 LDR X8, [X8 + 0x308]
	0x03DCC2C8 ADD X0, X20, 0x10
	0x03DCC2CC LDR X1, [X8]
	0x03DCC2D0 BL 0x266CDBC
	0x03DCC2D4 LDR V0, [X21]
	0x03DCC2D8 MOVZ W8, 0x7F800000
	0x03DCC2DC FMOV S1, W8
	0x03DCC2E0 MOVZ W9, 0x80000000
	0x03DCC2E4 FCVTZS W8, S0
	0x03DCC2E8 FCMP S0, S1
	0x03DCC2EC CSEL W8, W9, W8, EQ
	0x03DCC2F0 STR W8, [X0 + 0x2C]
	0x03DCC2F4 B 0x3DCBE24
	0x03DCC2F8 ADRP X8, 0x399000
	0x03DCC2FC LDR X8, [X8 + 0x308]
	0x03DCC300 ADD X0, X20, 0x10
	0x03DCC304 LDR X1, [X8]
	0x03DCC308 BL 0x266CDBC
	0x03DCC30C B 0x3DCC918
	0x03DCC310 ADRP X8, 0x399000
	0x03DCC314 LDR X8, [X8 + 0x308]
	0x03DCC318 ADD X0, X20, 0x10
	0x03DCC31C LDR X1, [X8]
	0x03DCC320 BL 0x266CDBC
	0x03DCC324 LDR V0, [X21]
	0x03DCC328 MOVZ W8, 0x7F800000
	0x03DCC32C FMOV S1, W8
	0x03DCC330 MOVZ W9, 0x80000000
	0x03DCC334 FCVTZS W8, S0
	0x03DCC338 FCMP S0, S1
	0x03DCC33C CSEL W8, W9, W8, EQ
	0x03DCC340 STR W8, [X0 + 0x34]
	0x03DCC344 B 0x3DCBE24
	0x03DCC348 ADRP X8, 0x399000
	0x03DCC34C LDR X8, [X8 + 0x308]
	0x03DCC350 ADD X0, X20, 0x10
	0x03DCC354 LDR X1, [X8]
	0x03DCC358 BL 0x266CDBC
	0x03DCC35C LDR V0, [X21]
	0x03DCC360 MOVZ W8, 0x7F800000
	0x03DCC364 FMOV S1, W8
	0x03DCC368 MOVZ W9, 0x80000000
	0x03DCC36C FCVTZS W8, S0
	0x03DCC370 FCMP S0, S1
	0x03DCC374 CSEL W8, W9, W8, EQ
	0x03DCC378 STR W8, [X0 + 0x38]
	0x03DCC37C B 0x3DCBE24
	0x03DCC380 ADRP X8, 0x399000
	0x03DCC384 LDR X8, [X8 + 0x308]
	0x03DCC388 ADD X0, X20, 0x10
	0x03DCC38C LDR X1, [X8]
	0x03DCC390 BL 0x266CDBC
	0x03DCC394 LDR V0, [X21]
	0x03DCC398 STR S0, [X0 + 0x3C]
	0x03DCC39C B 0x3DCBE24
	0x03DCC3A0 ADRP X8, 0x399000
	0x03DCC3A4 LDR X8, [X8 + 0x308]
	0x03DCC3A8 ADD X0, X20, 0x10
	0x03DCC3AC LDR X1, [X8]
	0x03DCC3B0 BL 0x266CDBC
	0x03DCC3B4 LDR V0, [X21]
	0x03DCC3B8 MOVZ W8, 0x7F800000
	0x03DCC3BC FMOV S1, W8
	0x03DCC3C0 MOVZ W9, 0x80000000
	0x03DCC3C4 FCVTZS W8, S0
	0x03DCC3C8 FCMP S0, S1
	0x03DCC3CC CSEL W8, W9, W8, EQ
	0x03DCC3D0 STR W8, [X0 + 0x40]
	0x03DCC3D4 B 0x3DCBE24
	0x03DCC3D8 ADRP X8, 0x399000
	0x03DCC3DC LDR X8, [X8 + 0x308]
	0x03DCC3E0 ADD X0, X20, 0x10
	0x03DCC3E4 LDR X1, [X8]
	0x03DCC3E8 BL 0x266CDBC
	0x03DCC3EC LDR V0, [X21]
	0x03DCC3F0 MOVZ W8, 0x7F800000
	0x03DCC3F4 FMOV S1, W8
	0x03DCC3F8 MOVZ W9, 0x80000000
	0x03DCC3FC FCVTZS W8, S0
	0x03DCC400 FCMP S0, S1
	0x03DCC404 CSEL W8, W9, W8, EQ
	0x03DCC408 STR W8, [X0 + 0x44]
	0x03DCC40C B 0x3DCBE24
	0x03DCC410 ADRP X8, 0x399000
	0x03DCC414 LDR X8, [X8 + 0x300]
	0x03DCC418 MOV X0, X20
	0x03DCC41C LDR X1, [X8]
	0x03DCC420 BL 0x266C4BC
	0x03DCC424 LDR X8, [X19 + 0x8]
	0x03DCC428 STR X8, [X0 + 0x10]
	0x03DCC42C B 0x3DCBE24
	0x03DCC430 ADRP X8, 0x399000
	0x03DCC434 LDR X8, [X8 + 0x300]
	0x03DCC438 MOV X0, X20
	0x03DCC43C LDR X1, [X8]
	0x03DCC440 BL 0x266C4BC
	0x03DCC444 LDR X8, [X19 + 0x8]
	0x03DCC448 STR X8, [X0 + 0x18]
	0x03DCC44C B 0x3DCBE24
	0x03DCC450 ADRP X8, 0x399000
	0x03DCC454 LDR X8, [X8 + 0x300]
	0x03DCC458 MOV X0, X20
	0x03DCC45C LDR X1, [X8]
	0x03DCC460 BL 0x266C4BC
	0x03DCC464 MOV X19, X0
	0x03DCC468 MOV X0, X21
	0x03DCC46C MOV X1, X31
	0x03DCC470 BL 0x32C05E4
	0x03DCC474 MOV X8, X31
	0x03DCC478 TBZ X0, 0x0, 0x3DCCB7C
	0x03DCC47C MOV X0, X21
	0x03DCC480 MOV X1, X31
	0x03DCC484 BL 0x32C05F4
	0x03DCC488 CBZ X0, 0x3DCCB78
	0x03DCC48C ADRP X8, 0x395000
	0x03DCC490 LDR X8, [X8 + 0xFE8]
	0x03DCC494 LDR X9, [X0]
	0x03DCC498 LDR X8, [X8]
	0x03DCC49C CMP X9, X8
	0x03DCC4A0 CSEL X8, X0, X31, EQ
	0x03DCC4A4 B 0x3DCCB7C
	0x03DCC4A8 ADRP X8, 0x399000
	0x03DCC4AC LDR X8, [X8 + 0x300]
	0x03DCC4B0 MOV X0, X20
	0x03DCC4B4 LDR X1, [X8]
	0x03DCC4B8 BL 0x266C4BC
	0x03DCC4BC MOV X19, X0
	0x03DCC4C0 MOV X0, X21
	0x03DCC4C4 MOV X1, X31
	0x03DCC4C8 BL 0x32C05E4
	0x03DCC4CC MOV W8, W0
	0x03DCC4D0 MOV X1, X31
	0x03DCC4D4 MOV X0, X31
	0x03DCC4D8 TBZ X8, 0x0, 0x3DCC4F0
	0x03DCC4DC MOV X0, X21
	0x03DCC4E0 MOV X1, X31
	0x03DCC4E4 BL 0x32C05F4
	0x03DCC4E8 MOV X1, X31
	0x03DCC4EC BL 0x3DE4A20
	0x03DCC4F0 STP X0, X1, [X19 + 0x48]
	0x03DCC4F4 B 0x3DCBE24
	0x03DCC4F8 ADRP X8, 0x399000
	0x03DCC4FC LDR X8, [X8 + 0x300]
	0x03DCC500 MOV X0, X20
	0x03DCC504 LDR X1, [X8]
	0x03DCC508 BL 0x266C4BC
	0x03DCC50C LDR V0, [X21]
	0x03DCC510 MOVZ W8, 0x7F800000
	0x03DCC514 FMOV S1, W8
	0x03DCC518 MOVZ W9, 0x80000000
	0x03DCC51C FCVTZS W8, S0
	0x03DCC520 FCMP S0, S1
	0x03DCC524 CSEL W8, W9, W8, EQ
	0x03DCC528 STR W8, [X0 + 0x58]
	0x03DCC52C B 0x3DCBE24
	0x03DCC530 ADRP X8, 0x399000
	0x03DCC534 LDR X8, [X8 + 0x300]
	0x03DCC538 MOV X0, X20
	0x03DCC53C LDR X1, [X8]
	0x03DCC540 BL 0x266C4BC
	0x03DCC544 B 0x3DCC9E0
	0x03DCC548 ADRP X8, 0x399000
	0x03DCC54C LDR X8, [X8 + 0x300]
	0x03DCC550 MOV X0, X20
	0x03DCC554 LDR X1, [X8]
	0x03DCC558 BL 0x266C4BC
	0x03DCC55C LDR V0, [X21]
	0x03DCC560 MOVZ W8, 0x7F800000
	0x03DCC564 FMOV S1, W8
	0x03DCC568 MOVZ W9, 0x80000000
	0x03DCC56C FCVTZS W8, S0
	0x03DCC570 FCMP S0, S1
	0x03DCC574 CSEL W8, W9, W8, EQ
	0x03DCC578 STR W8, [X0 + 0x64]
	0x03DCC57C B 0x3DCBE24
	0x03DCC580 ADRP X8, 0x399000
	0x03DCC584 LDR X8, [X8 + 0x300]
	0x03DCC588 MOV X0, X20
	0x03DCC58C LDR X1, [X8]
	0x03DCC590 BL 0x266C4BC
	0x03DCC594 LDR X8, [X19 + 0x10]
	0x03DCC598 LDR V0, [X19]
	0x03DCC59C STR X8, [X31 + 0x30]
	0x03DCC5A0 STR V0, [X31 + 0x2]
	0x03DCC5A4 LDUR V0, [X31 + 0x28]
	0x03DCC5A8 STUR V0, [X0 + 0x68]
	0x03DCC5AC B 0x3DCBE24
	0x03DCC5B0 ADRP X8, 0x399000
	0x03DCC5B4 LDR X8, [X8 + 0x300]
	0x03DCC5B8 MOV X0, X20
	0x03DCC5BC LDR X1, [X8]
	0x03DCC5C0 BL 0x266C4BC
	0x03DCC5C4 B 0x3DCCA80
	0x03DCC5C8 ADRP X8, 0x399000
	0x03DCC5CC LDR X8, [X8 + 0x300]
	0x03DCC5D0 MOV X0, X20
	0x03DCC5D4 LDR X1, [X8]
	0x03DCC5D8 BL 0x266C4BC
	0x03DCC5DC LDR V0, [X21]
	0x03DCC5E0 STR S0, [X0 + 0x78]
	0x03DCC5E4 B 0x3DCBE24
	0x03DCC5E8 ADRP X8, 0x399000
	0x03DCC5EC LDR X8, [X8 + 0x300]
	0x03DCC5F0 MOV X0, X20
	0x03DCC5F4 LDR X1, [X8]
	0x03DCC5F8 BL 0x266C4BC
	0x03DCC5FC LDR V0, [X21]
	0x03DCC600 MOVZ W8, 0x7F800000
	0x03DCC604 FMOV S1, W8
	0x03DCC608 MOVZ W9, 0x80000000
	0x03DCC60C FCVTZS W8, S0
	0x03DCC610 FCMP S0, S1
	0x03DCC614 CSEL W8, W9, W8, EQ
	0x03DCC618 STR W8, [X0 + 0x7C]
	0x03DCC61C B 0x3DCBE24
	0x03DCC620 ADRP X8, 0x399000
	0x03DCC624 LDR X8, [X8 + 0x300]
	0x03DCC628 MOV X0, X20
	0x03DCC62C LDR X1, [X8]
	0x03DCC630 BL 0x266C4BC
	0x03DCC634 LDR V0, [X21]
	0x03DCC638 MOVZ W8, 0x7F800000
	0x03DCC63C FMOV S1, W8
	0x03DCC640 MOVZ W9, 0x80000000
	0x03DCC644 FCVTZS W8, S0
	0x03DCC648 FCMP S0, S1
	0x03DCC64C CSEL W8, W9, W8, EQ
	0x03DCC650 STR W8, [X0 + 0x80]
	0x03DCC654 B 0x3DCBE24
	0x03DCC658 ADRP X8, 0x399000
	0x03DCC65C LDR X8, [X8 + 0x2F0]
	0x03DCC660 ADD X0, X20, 0x8
	0x03DCC664 LDR X1, [X8]
	0x03DCC668 BL 0x266C93C
	0x03DCC66C LDR V0, [X21]
	0x03DCC670 STR S0, [X0 + 0x10]
	0x03DCC674 B 0x3DCBE24
	0x03DCC678 ADRP X8, 0x399000
	0x03DCC67C LDR X8, [X8 + 0x2F0]
	0x03DCC680 ADD X0, X20, 0x8
	0x03DCC684 LDR X1, [X8]
	0x03DCC688 BL 0x266C93C
	0x03DCC68C LDR X8, [X19 + 0x8]
	0x03DCC690 STR X8, [X0 + 0x28]
	0x03DCC694 B 0x3DCBE24
	0x03DCC698 ADRP X8, 0x399000
	0x03DCC69C LDR X8, [X8 + 0x2F0]
	0x03DCC6A0 ADD X0, X20, 0x8
	0x03DCC6A4 LDR X1, [X8]
	0x03DCC6A8 BL 0x266C93C
	0x03DCC6AC LDR V0, [X21]
	0x03DCC6B0 STR S0, [X0 + 0x34]
	0x03DCC6B4 B 0x3DCBE24
	0x03DCC6B8 ADRP X8, 0x399000
	0x03DCC6BC LDR X8, [X8 + 0x2F0]
	0x03DCC6C0 ADD X0, X20, 0x8
	0x03DCC6C4 LDR X1, [X8]
	0x03DCC6C8 BL 0x266C93C
	0x03DCC6CC LDR V0, [X21]
	0x03DCC6D0 STR S0, [X0 + 0x38]
	0x03DCC6D4 B 0x3DCBE24
	0x03DCC6D8 ADRP X8, 0x399000
	0x03DCC6DC LDR X8, [X8 + 0x2F0]
	0x03DCC6E0 ADD X0, X20, 0x8
	0x03DCC6E4 LDR X1, [X8]
	0x03DCC6E8 BL 0x266C93C
	0x03DCC6EC LDR X8, [X19 + 0x8]
	0x03DCC6F0 STR X8, [X0 + 0x40]
	0x03DCC6F4 B 0x3DCBE24
	0x03DCC6F8 ADRP X8, 0x399000
	0x03DCC6FC LDR X8, [X8 + 0x2F0]
	0x03DCC700 ADD X0, X20, 0x8
	0x03DCC704 LDR X1, [X8]
	0x03DCC708 BL 0x266C93C
	0x03DCC70C LDR X8, [X19 + 0x8]
	0x03DCC710 STUR X8, [X0 + 0x4C]
	0x03DCC714 B 0x3DCBE24
	0x03DCC718 ADRP X8, 0x399000
	0x03DCC71C LDR X8, [X8 + 0x2F0]
	0x03DCC720 ADD X0, X20, 0x8
	0x03DCC724 LDR X1, [X8]
	0x03DCC728 BL 0x266C93C
	0x03DCC72C LDR X8, [X19 + 0x8]
	0x03DCC730 STUR X8, [X0 + 0x8C]
	0x03DCC734 B 0x3DCBE24
	0x03DCC738 ADRP X8, 0x399000
	0x03DCC73C LDR X8, [X8 + 0x2F0]
	0x03DCC740 ADD X0, X20, 0x8
	0x03DCC744 LDR X1, [X8]
	0x03DCC748 BL 0x266C93C
	0x03DCC74C LDR X8, [X19 + 0x8]
	0x03DCC750 STUR X8, [X0 + 0x94]
	0x03DCC754 B 0x3DCBE24
	0x03DCC758 ADRP X8, 0x399000
	0x03DCC75C LDR X8, [X8 + 0x2F0]
	0x03DCC760 ADD X0, X20, 0x8
	0x03DCC764 LDR X1, [X8]
	0x03DCC768 BL 0x266C93C
	0x03DCC76C LDR X8, [X19 + 0x8]
	0x03DCC770 STUR X8, [X0 + 0xA4]
	0x03DCC774 B 0x3DCBE24
	0x03DCC778 ADRP X21, 0x399000
	0x03DCC77C LDR X21, [X21 + 0x2F0]
	0x03DCC780 ADD X20, X20, 0x8
	0x03DCC784 MOV X0, X20
	0x03DCC788 LDR X1, [X21]
	0x03DCC78C BL 0x266C93C
	0x03DCC790 LDR V0, [X19 + 0x8]
	0x03DCC794 MOVZ W8, 0x7F800000
	0x03DCC798 FMOV S1, W8
	0x03DCC79C MOVZ W9, 0x80000000
	0x03DCC7A0 FCVTZS W8, S0
	0x03DCC7A4 FCMP S0, S1
	0x03DCC7A8 CSEL W8, W9, W8, EQ
	0x03DCC7AC STR W8, [X0 + 0x4]
	0x03DCC7B0 LDR W8, [X19 + 0x4]
	0x03DCC7B4 CMP W8, 0x2
	0x03DCC7B8 B.NE 0x3DCBE24
	0x03DCC7BC LDR X1, [X21]
	0x03DCC7C0 MOV X0, X20
	0x03DCC7C4 BL 0x266C93C
	0x03DCC7C8 STR W31, [X0 + 0x4]
	0x03DCC7CC B 0x3DCBE24
	0x03DCC7D0 ADRP X21, 0x399000
	0x03DCC7D4 LDR X21, [X21 + 0x2F0]
	0x03DCC7D8 ADD X20, X20, 0x8
	0x03DCC7DC MOV X0, X20
	0x03DCC7E0 LDR X1, [X21]
	0x03DCC7E4 BL 0x266C93C
	0x03DCC7E8 LDR V0, [X19 + 0x8]
	0x03DCC7EC MOVZ W8, 0x7F800000
	0x03DCC7F0 FMOV S1, W8
	0x03DCC7F4 MOVZ W9, 0x80000000
	0x03DCC7F8 FCVTZS W8, S0
	0x03DCC7FC FCMP S0, S1
	0x03DCC800 CSEL W8, W9, W8, EQ
	0x03DCC804 STR W8, [X0 + 0x8]
	0x03DCC808 LDR W8, [X19 + 0x4]
	0x03DCC80C CMP W8, 0x2
	0x03DCC810 B.NE 0x3DCBE24
	0x03DCC814 LDR X1, [X21]
	0x03DCC818 MOV X0, X20
	0x03DCC81C BL 0x266C93C
	0x03DCC820 STR W31, [X0 + 0x8]
	0x03DCC824 B 0x3DCBE24
	0x03DCC828 ADRP X8, 0x399000
	0x03DCC82C LDR X8, [X8 + 0x2F0]
	0x03DCC830 ADD X0, X20, 0x8
	0x03DCC834 LDR X1, [X8]
	0x03DCC838 BL 0x266C93C
	0x03DCC83C LDR V0, [X21]
	0x03DCC840 STR S0, [X0 + 0xC]
	0x03DCC844 B 0x3DCBE24
	0x03DCC848 ADRP X8, 0x399000
	0x03DCC84C LDR X8, [X8 + 0x2F0]
	0x03DCC850 ADD X0, X20, 0x8
	0x03DCC854 LDR X1, [X8]
	0x03DCC858 BL 0x266C93C
	0x03DCC85C LDR V0, [X21]
	0x03DCC860 STR S0, [X0 + 0x14]
	0x03DCC864 B 0x3DCBE24
	0x03DCC868 ADRP X8, 0x399000
	0x03DCC86C LDR X8, [X8 + 0x2F0]
	0x03DCC870 ADD X0, X20, 0x8
	0x03DCC874 LDR X1, [X8]
	0x03DCC878 BL 0x266C93C
	0x03DCC87C LDR V0, [X21]
	0x03DCC880 STR S0, [X0 + 0x18]
	0x03DCC884 B 0x3DCBE24
	0x03DCC888 ADRP X8, 0x399000
	0x03DCC88C LDR X8, [X8 + 0x2F0]
	0x03DCC890 ADD X0, X20, 0x8
	0x03DCC894 LDR X1, [X8]
	0x03DCC898 BL 0x266C93C
	0x03DCC89C LDR X8, [X19 + 0x8]
	0x03DCC8A0 STUR X8, [X0 + 0x1C]
	0x03DCC8A4 B 0x3DCBE24
	0x03DCC8A8 ADRP X21, 0x399000
	0x03DCC8AC LDR X21, [X21 + 0x2F0]
	0x03DCC8B0 ADD X20, X20, 0x8
	0x03DCC8B4 MOV X0, X20
	0x03DCC8B8 LDR X1, [X21]
	0x03DCC8BC BL 0x266C93C
	0x03DCC8C0 LDR V0, [X19 + 0x8]
	0x03DCC8C4 MOVZ W8, 0x7F800000
	0x03DCC8C8 FMOV S1, W8
	0x03DCC8CC MOVZ W9, 0x80000000
	0x03DCC8D0 FCVTZS W8, S0
	0x03DCC8D4 FCMP S0, S1
	0x03DCC8D8 CSEL W8, W9, W8, EQ
	0x03DCC8DC STR W8, [X0 + 0x24]
	0x03DCC8E0 LDR W8, [X19 + 0x4]
	0x03DCC8E4 CMP W8, 0x3
	0x03DCC8E8 B.NE 0x3DCBE24
	0x03DCC8EC LDR X1, [X21]
	0x03DCC8F0 MOV X0, X20
	0x03DCC8F4 BL 0x266C93C
	0x03DCC8F8 MOVZ W8, 0x1
	0x03DCC8FC STR W8, [X0 + 0x24]
	0x03DCC900 B 0x3DCBE24
	0x03DCC904 ADRP X8, 0x399000
	0x03DCC908 LDR X8, [X8 + 0x2F0]
	0x03DCC90C ADD X0, X20, 0x8
	0x03DCC910 LDR X1, [X8]
	0x03DCC914 BL 0x266C93C
	0x03DCC918 LDR V0, [X21]
	0x03DCC91C MOVZ W8, 0x7F800000
	0x03DCC920 FMOV S1, W8
	0x03DCC924 MOVZ W9, 0x80000000
	0x03DCC928 FCVTZS W8, S0
	0x03DCC92C FCMP S0, S1
	0x03DCC930 CSEL W8, W9, W8, EQ
	0x03DCC934 STR W8, [X0 + 0x30]
	0x03DCC938 B 0x3DCBE24
	0x03DCC93C ADRP X8, 0x399000
	0x03DCC940 LDR X8, [X8 + 0x2F0]
	0x03DCC944 ADD X0, X20, 0x8
	0x03DCC948 LDR X1, [X8]
	0x03DCC94C BL 0x266C93C
	0x03DCC950 LDR V0, [X21]
	0x03DCC954 MOVZ W8, 0x7F800000
	0x03DCC958 FMOV S1, W8
	0x03DCC95C MOVZ W9, 0x80000000
	0x03DCC960 FCVTZS W8, S0
	0x03DCC964 FCMP S0, S1
	0x03DCC968 CSEL W8, W9, W8, EQ
	0x03DCC96C STR W8, [X0 + 0x3C]
	0x03DCC970 B 0x3DCBE24
	0x03DCC974 ADRP X8, 0x399000
	0x03DCC978 LDR X8, [X8 + 0x2F0]
	0x03DCC97C ADD X0, X20, 0x8
	0x03DCC980 LDR X1, [X8]
	0x03DCC984 BL 0x266C93C
	0x03DCC988 LDR V0, [X21]
	0x03DCC98C MOVZ W8, 0x7F800000
	0x03DCC990 FMOV S1, W8
	0x03DCC994 MOVZ W9, 0x80000000
	0x03DCC998 FCVTZS W8, S0
	0x03DCC99C FCMP S0, S1
	0x03DCC9A0 CSEL W8, W9, W8, EQ
	0x03DCC9A4 STR W8, [X0 + 0x48]
	0x03DCC9A8 B 0x3DCBE24
	0x03DCC9AC ADRP X8, 0x399000
	0x03DCC9B0 LDR X8, [X8 + 0x2F0]
	0x03DCC9B4 ADD X0, X20, 0x8
	0x03DCC9B8 LDR X1, [X8]
	0x03DCC9BC BL 0x266C93C
	0x03DCC9C0 LDR X8, [X19 + 0x8]
	0x03DCC9C4 STUR X8, [X0 + 0x54]
	0x03DCC9C8 B 0x3DCBE24
	0x03DCC9CC ADRP X8, 0x399000
	0x03DCC9D0 LDR X8, [X8 + 0x2F0]
	0x03DCC9D4 ADD X0, X20, 0x8
	0x03DCC9D8 LDR X1, [X8]
	0x03DCC9DC BL 0x266C93C
	0x03DCC9E0 LDR X8, [X19 + 0x8]
	0x03DCC9E4 STUR X8, [X0 + 0x5C]
	0x03DCC9E8 B 0x3DCBE24
	0x03DCC9EC ADRP X8, 0x399000
	0x03DCC9F0 LDR X8, [X8 + 0x2F0]
	0x03DCC9F4 ADD X0, X20, 0x8
	0x03DCC9F8 LDR X1, [X8]
	0x03DCC9FC BL 0x266C93C
	0x03DCCA00 LDR X8, [X19 + 0x8]
	0x03DCCA04 STUR X8, [X0 + 0x64]
	0x03DCCA08 B 0x3DCBE24
	0x03DCCA0C ADRP X8, 0x399000
	0x03DCCA10 LDR X8, [X8 + 0x2F0]
	0x03DCCA14 ADD X0, X20, 0x8
	0x03DCCA18 LDR X1, [X8]
	0x03DCCA1C BL 0x266C93C
	0x03DCCA20 LDR X8, [X19 + 0x8]
	0x03DCCA24 STUR X8, [X0 + 0x6C]
	0x03DCCA28 B 0x3DCBE24
	0x03DCCA2C ADRP X8, 0x399000
	0x03DCCA30 LDR X8, [X8 + 0x2F0]
	0x03DCCA34 ADD X0, X20, 0x8
	0x03DCCA38 LDR X1, [X8]
	0x03DCCA3C BL 0x266C93C
	0x03DCCA40 LDR X8, [X19 + 0x8]
	0x03DCCA44 STUR X8, [X0 + 0x74]
	0x03DCCA48 B 0x3DCBE24
	0x03DCCA4C ADRP X8, 0x399000
	0x03DCCA50 LDR X8, [X8 + 0x2F0]
	0x03DCCA54 ADD X0, X20, 0x8
	0x03DCCA58 LDR X1, [X8]
	0x03DCCA5C BL 0x266C93C
	0x03DCCA60 LDR X8, [X19 + 0x8]
	0x03DCCA64 STUR X8, [X0 + 0x7C]
	0x03DCCA68 B 0x3DCBE24
	0x03DCCA6C ADRP X8, 0x399000
	0x03DCCA70 LDR X8, [X8 + 0x2F0]
	0x03DCCA74 ADD X0, X20, 0x8
	0x03DCCA78 LDR X1, [X8]
	0x03DCCA7C BL 0x266C93C
	0x03DCCA80 LDR X8, [X19 + 0x8]
	0x03DCCA84 STUR X8, [X0 + 0x84]
	0x03DCCA88 B 0x3DCBE24
	0x03DCCA8C ADRP X8, 0x399000
	0x03DCCA90 LDR X8, [X8 + 0x2F0]
	0x03DCCA94 ADD X0, X20, 0x8
	0x03DCCA98 LDR X1, [X8]
	0x03DCCA9C BL 0x266C93C
	0x03DCCAA0 LDR X8, [X19 + 0x8]
	0x03DCCAA4 STUR X8, [X0 + 0x9C]
	0x03DCCAA8 B 0x3DCBE24
	0x03DCCAAC ADRP X8, 0x399000
	0x03DCCAB0 LDR X8, [X8 + 0x2F0]
	0x03DCCAB4 ADD X0, X20, 0x8
	0x03DCCAB8 LDR X1, [X8]
	0x03DCCABC BL 0x266C93C
	0x03DCCAC0 LDR X8, [X19 + 0x8]
	0x03DCCAC4 STUR X8, [X0 + 0xAC]
	0x03DCCAC8 B 0x3DCBE24
	0x03DCCACC ADRP X8, 0x399000
	0x03DCCAD0 LDR X8, [X8 + 0x2F0]
	0x03DCCAD4 ADD X0, X20, 0x8
	0x03DCCAD8 LDR X1, [X8]
	0x03DCCADC BL 0x266C93C
	0x03DCCAE0 LDR V0, [X21]
	0x03DCCAE4 MOVZ W8, 0x7F800000
	0x03DCCAE8 FMOV S1, W8
	0x03DCCAEC MOVZ W9, 0x80000000
	0x03DCCAF0 FCVTZS W8, S0
	0x03DCCAF4 FCMP S0, S1
	0x03DCCAF8 CSEL W8, W9, W8, EQ
	0x03DCCAFC STR W8, [X0 + 0xB4]
	0x03DCCB00 B 0x3DCBE24
	0x03DCCB04 ADRP X8, 0x399000
	0x03DCCB08 LDR X8, [X8 + 0x2F0]
	0x03DCCB0C ADD X0, X20, 0x8
	0x03DCCB10 LDR X1, [X8]
	0x03DCCB14 BL 0x266C93C
	0x03DCCB18 LDR X8, [X19 + 0x8]
	0x03DCCB1C STR X8, [X0 + 0xB8]
	0x03DCCB20 B 0x3DCBE24
	0x03DCCB24 ADRP X8, 0x399000
	0x03DCCB28 LDR X8, [X8 + 0x2F0]
	0x03DCCB2C ADD X0, X20, 0x8
	0x03DCCB30 LDR X1, [X8]
	0x03DCCB34 BL 0x266C93C
	0x03DCCB38 LDR X8, [X19 + 0x8]
	0x03DCCB3C STR X8, [X0 + 0xC0]
	0x03DCCB40 B 0x3DCBE24
	0x03DCCB44 ADRP X8, 0x399000
	0x03DCCB48 LDR X8, [X8 + 0x2F0]
	0x03DCCB4C ADD X0, X20, 0x8
	0x03DCCB50 LDR X1, [X8]
	0x03DCCB54 BL 0x266C93C
	0x03DCCB58 LDR X8, [X19 + 0x8]
	0x03DCCB5C STR X8, [X0 + 0xC8]
	0x03DCCB60 B 0x3DCBE24
	0x03DCCB64 MOVI V0.2D, 0x0
	0x03DCCB68 STP V0, V0, [X31]
	0x03DCCB6C LDP V1, V0, [X31]
	0x03DCCB70 STP V1, V0, [X19 + 0x10]
	0x03DCCB74 B 0x3DCBE24
	0x03DCCB78 MOV X8, X31
	0x03DCCB7C STR X8, [X19 + 0x40]
	0x03DCCB80 B 0x3DCBE24
	0x03DCCB84 BL 0x3EB1B20
	0x03DCCB88 STR X30, [X31 - 0x30]!
	0x03DCCB8C STP X22, X21, [X31 + 0x10]
	0x03DCCB90 STP X20, X19, [X31 + 0x20]
	0x03DCCB94 ADRP X22, 0x61C000
	0x03DCCB98 LDRB W8, [X22 + 0x1A7]
	0x03DCCB9C MOV X20, X2
	0x03DCCBA0 MOV X21, X1
	0x03DCCBA4 MOV X19, X0
	0x03DCCBA8 TBNZ X8, 0x0, 0x3DCCC38
	0x03DCCBAC ADRP X0, 0x327000
	0x03DCCBB0 LDR X0, [X0 + 0xA28]
	0x03DCCBB4 BL 0x1C16CF4
	0x03DCCBB8 ADRP X0, 0x398000
	0x03DCCBBC LDR X0, [X0 + 0x358]
	0x03DCCBC0 BL 0x1C16CF4
	0x03DCCBC4 ADRP X0, 0x399000
	0x03DCCBC8 LDR X0, [X0 + 0x320]
	0x03DCCBCC BL 0x1C16CF4
	0x03DCCBD0 ADRP X0, 0x351000
	0x03DCCBD4 LDR X0, [X0 + 0x7E0]
	0x03DCCBD8 BL 0x1C16CF4
	0x03DCCBDC ADRP X0, 0x399000
	0x03DCCBE0 LDR X0, [X0 + 0x348]
	0x03DCCBE4 BL 0x1C16CF4
	0x03DCCBE8 ADRP X0, 0x399000
	0x03DCCBEC LDR X0, [X0 + 0x318]
	0x03DCCBF0 BL 0x1C16CF4
	0x03DCCBF4 ADRP X0, 0x39A000
	0x03DCCBF8 LDR X0, [X0 + 0x4A8]
	0x03DCCBFC BL 0x1C16CF4
	0x03DCCC00 ADRP X0, 0x399000
	0x03DCCC04 LDR X0, [X0 + 0x390]
	0x03DCCC08 BL 0x1C16CF4
	0x03DCCC0C ADRP X0, 0x399000
	0x03DCCC10 LDR X0, [X0 + 0x398]
	0x03DCCC14 BL 0x1C16CF4
	0x03DCCC18 ADRP X0, 0x399000
	0x03DCCC1C LDR X0, [X0 + 0x3A0]
	0x03DCCC20 BL 0x1C16CF4
	0x03DCCC24 ADRP X0, 0x39D000
	0x03DCCC28 LDR X0, [X0 + 0x260]
	0x03DCCC2C BL 0x1C16CF4
	0x03DCCC30 MOVZ W8, 0x1
	0x03DCCC34 STRB W8, [X22 + 0x1A7]
	0x03DCCC38 UBFM X8, X21, 0x20, 0x3F
	0x03DCCC3C CMP X8, 0x4
	0x03DCCC40 B.NE 0x3DCCC5C
	0x03DCCC44 MOV X0, X19
	0x03DCCC48 MOV W1, W21
	0x03DCCC4C LDP X20, X19, [X31 + 0x20]
	0x03DCCC50 LDP X22, X21, [X31 + 0x10]
	0x03DCCC54 LDR X30, [X31], #0x30
	0x03DCCC58 B 0x3DC71DC
	0x03DCCC5C SUB W8, W21, 0x60000
	0x03DCCC60 CMP W8, 0x3
	0x03DCCC64 B.HI 0x3DCCCC0
	0x03DCCC68 ADRP X9, 0xFFFFFFFFFCDCC000
	0x03DCCC6C ADD X9, X9, 0x25A
	0x03DCCC70 ADR X10, 0x10
	0x03DCCC74 LDRB W11, [X9, X8, LSL]
	0x03DCCC78 ADD X10, X10, X11, 0x2, LSL
	0x03DCCC7C BR X10
	0x03DCCC80 ADRP X8, 0x399000
	0x03DCCC84 LDR X8, [X8 + 0x318]
	0x03DCCC88 ADD X0, X19, 0x20
	0x03DCCC8C LDR X1, [X8]
	0x03DCCC90 BL 0x266D6BC
	0x03DCCC94 CBZ X20, 0x3DCCDE4
	0x03DCCC98 ADRP X8, 0x399000
	0x03DCCC9C LDR X8, [X8 + 0x320]
	0x03DCCCA0 LDR X9, [X20]
	0x03DCCCA4 LDR X8, [X8]
	0x03DCCCA8 LDRB W11, [X9 + 0x130]
	0x03DCCCAC LDRB W10, [X8 + 0x130]
	0x03DCCCB0 CMP W11, W10
	0x03DCCCB4 B.CS 0x3DCCEDC
	0x03DCCCB8 MOV X8, X31
	0x03DCCCBC B 0x3DCCEF0
	0x03DCCCC0 ADRP X8, 0x39A000
	0x03DCCCC4 LDR X8, [X8 + 0x4A8]
	0x03DCCCC8 ADD X1, X31, 0xC
	0x03DCCCCC STR W21, [X31 + 0xC]
	0x03DCCCD0 LDR X0, [X8]
	0x03DCCCD4 BL 0x1C16E04
	0x03DCCCD8 ADRP X8, 0x39D000
	0x03DCCCDC LDR X8, [X8 + 0x260]
	0x03DCCCE0 MOV X1, X0
	0x03DCCCE4 MOV X2, X31
	0x03DCCCE8 LDR X8, [X8]
	0x03DCCCEC MOV X0, X8
	0x03DCCCF0 BL 0x321EFD0
	0x03DCCCF4 ADRP X8, 0x327000
	0x03DCCCF8 LDR X8, [X8 + 0xA28]
	0x03DCCCFC MOV X19, X0
	0x03DCCD00 LDR X8, [X8]
	0x03DCCD04 LDR W9, [X8 + 0xE0]
	0x03DCCD08 CBNZ W9, 0x3DCCD14
	0x03DCCD0C MOV X0, X8
	0x03DCCD10 BL 0x1C16DFC
	0x03DCCD14 MOV X0, X19
	0x03DCCD18 MOV X1, X31
	0x03DCCD1C BL 0x3C070A4
	0x03DCCD20 B 0x3DCCF4C
	0x03DCCD24 ADRP X8, 0x399000
	0x03DCCD28 LDR X8, [X8 + 0x318]
	0x03DCCD2C ADD X0, X19, 0x20
	0x03DCCD30 LDR X1, [X8]
	0x03DCCD34 BL 0x266D6BC
	0x03DCCD38 CBZ X20, 0x3DCCE10
	0x03DCCD3C ADRP X8, 0x399000
	0x03DCCD40 LDR X8, [X8 + 0x320]
	0x03DCCD44 LDR X9, [X20]
	0x03DCCD48 LDR X8, [X8]
	0x03DCCD4C LDRB W11, [X9 + 0x130]
	0x03DCCD50 LDRB W10, [X8 + 0x130]
	0x03DCCD54 CMP W11, W10
	0x03DCCD58 B.CS 0x3DCCEF8
	0x03DCCD5C MOV X8, X31
	0x03DCCD60 B 0x3DCCF0C
	0x03DCCD64 ADRP X8, 0x399000
	0x03DCCD68 LDR X8, [X8 + 0x318]
	0x03DCCD6C ADD X0, X19, 0x20

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X22, 0x61E000
	015 Move W8, [X22+421]
	016 Move X19, X2
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {55}
	023 Move X0, 0x329000
	024 Move X0, [X0+2600]
	025 Call 0x1C17CF4
	026 Move X0, 0x39B000
	027 Move X0, [X0+904]
	028 Call 0x1C17CF4
	029 Move X0, 0x39B000
	030 Move X0, [X0+776]
	031 Call 0x1C17CF4
	032 Move X0, 0x39B000
	033 Move X0, [X0+768]
	034 Call 0x1C17CF4
	035 Move X0, 0x39B000
	036 Move X0, [X0+792]
	037 Call 0x1C17CF4
	038 Move X0, 0x39B000
	039 Move X0, [X0+784]
	040 Call 0x1C17CF4
	041 Move X0, 0x39B000
	042 Move X0, [X0+760]
	043 Call 0x1C17CF4
	044 Move X0, 0x39B000
	045 Move X0, [X0+752]
	046 Call 0x1C17CF4
	047 Move X0, 0x39C000
	048 Move X0, [X0+1192]
	049 Call 0x1C17CF4
	050 Move X0, 0x39F000
	051 Move X0, [X0+848]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X22+421], W8
	055 Compare X20, 0
	056 JumpIfEqual {1232}
	057 Move X8, [X20+72]
	058 Compare X8, 0
	059 JumpIfEqual {1218}
	060 Move W27, [X20+80]
	061 Move W29, 32
	062 Move W25, 10
	063 Move X26, -52633600
	064 Move X28, -52633600
	065 Add X22, X21, 8
	066 Add X23, X21, 16
	067 Add X24, X21, 40
	068 Add X9, X21, 32
	069 Add X8, X21, 24
	070 NotImplemented "Instruction MOVK not yet implemented."
	071 NotImplemented "Instruction MOVK not yet implemented."
	072 Add X26, X26, 442
	073 Add X28, X28, 318
	074 Move [X31], X8
	075 Move [X31+8], X9
	076 Move X0, X21
	077 Move X1, X20
	078 Move X2, X19
	079 Call ComputedStyle.ApplyGlobalKeyword, X0, X1, X2
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {91}
	084 Move X0, X20
	085 Move X1, X31
	086 Call StylePropertyReader.MoveNextProperty, X0
	087 Move X8, [X20+72]
	088 Move W27, W0
	089 Compare X8, 0
	090 JumpIfNotEqual {76}
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract W8, W27, 0x70000
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction ADR not yet implemented."
	096 NotImplemented "Instruction LDRH not yet implemented."
	097 Add X9, X9, X10
	098 CallNoReturn X9
	099 Move X8, 0x39B000
	100 Move X8, [X8+760]
	101 Move X0, X24
	102 Move X1, [X8]
	103 Call StyleDataRef`1<VisualData>.Write, X0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract W8, W27, 0x20000
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction ADR not yet implemented."
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Add X9, X9, X10
	110 CallNoReturn X9
	111 Move X8, 0x39B000
	112 Move X8, [X8+752]
	113 Move X0, X22
	114 Move X1, [X8]
	115 Call StyleDataRef`1<LayoutData>.Write, X0
	116 Move X27, X0
	117 Move X0, X20
	118 Move W1, W31
	119 Move W2, W31
	120 Move X3, X31
	121 Call StylePropertyReader.ReadEnum, X0, X1, X2
	122 Move [X27], W0
	123 Subtract W8, W27, 0x40000
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Subtract W8, W27, 0x30000
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X11, -52633600
	128 Add X11, X11, 384
	129 NotImplemented "Instruction ADR not yet implemented."
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Add X9, X9, X10
	132 CallNoReturn X9
	133 Move X8, 0x39B000
	134 Move X8, [X8+776]
	135 Move X0, X23
	136 Move X1, [X8]
	137 Call StyleDataRef`1<RareData>.Write, X0
	138 Move X27, X0
	139 Add X8, X31, 16
	140 Move X0, X20
	141 Move W1, W31
	142 Move X2, X31
	143 Call StylePropertyReader.ReadCursor, X0, X1
	144 Add W31, W27, 1
	145 Compare W27, 0
	146 JumpIfEqual {84}
	147 Move X8, 0x39C000
	148 Move X8, [X8+1192]
	149 Add X1, X31, 48
	150 Move [X31+48], W27
	151 Move X0, [X8]
	152 Call 0x1C17E04
	153 Move X8, 0x39F000
	154 Move X8, [X8+848]
	155 Move X1, X0
	156 Move X2, X31
	157 Move X8, [X8]
	158 Move X0, X8
	159 Call String.Format, X0, X1
	160 Move X8, 0x329000
	161 Move X8, [X8+2600]
	162 Move X27, X0
	163 Move X8, [X8]
	164 Move W9, [X8+224]
	165 Compare W9, 0
	166 JumpIfNotEqual {169}
	167 Move X0, X8
	168 Call 0x1C17DFC
	169 Move X0, X27
	170 Move X1, X31
	171 Call Debug.LogAssertion, X0
	172 Move X11, -52633600
	173 Add X11, X11, 404
	174 NotImplemented "Instruction ADR not yet implemented."
	175 NotImplemented "Instruction LDRH not yet implemented."
	176 Add X9, X9, X10
	177 CallNoReturn X9
	178 Move X8, 0x39B000
	179 Move X8, [X8+904]
	180 Move X0, [X8]
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X0, X20
	186 Move X1, X21
	187 Move X2, X31
	188 Call ShorthandApplicator.ApplyBackgroundPosition, X0, X1
	189 Subtract W8, W27, 0x10000
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X11, -52633600
	192 Add X11, X11, 290
	193 NotImplemented "Instruction ADR not yet implemented."
	194 NotImplemented "Instruction LDRH not yet implemented."
	195 Add X9, X9, X10
	196 CallNoReturn X9
	197 Move X8, 0x39B000
	198 Move X8, [X8+768]
	199 Move X0, X21
	200 Move X1, [X8]
	201 Call 0x266D4BC, X0
	202 Move X27, X0
	203 Move X0, X20
	204 Move W1, W31
	205 Move X2, X31
	206 Call StylePropertyReader.ReadColor, X0, X1
	207 Move [X27], S0
	208 Move [X27+8], S1
	209 Move [X27+8], S2
	210 Move [X27+16], S3
	211 Subtract W8, W27, 0x50000
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Subtract W8, W27, 0x60000
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X11, -52633600
	216 Add X11, X11, 434
	217 NotImplemented "Instruction ADR not yet implemented."
	218 NotImplemented "Instruction LDRH not yet implemented."
	219 Add X9, X9, X10
	220 CallNoReturn X9
	221 Move X8, 0x39B000
	222 Move X8, [X8+792]
	223 Move X0, [X31+8]
	224 Move X1, [X8]
	225 Call StyleDataRef`1<TransitionData>.Write, X0
	226 Move X1, [X0]
	227 Move X0, X21
	228 Move X1, X20
	229 Call ComputedStyle.ApplyCustomStyleProperty, X0, X1
	230 Move X11, -52633600
	231 Add X11, X11, 426
	232 NotImplemented "Instruction ADR not yet implemented."
	233 NotImplemented "Instruction LDRH not yet implemented."
	234 Add X9, X9, X10
	235 CallNoReturn X9
	236 Move X8, 0x39B000
	237 Move X8, [X8+784]
	238 Move X0, [X31]
	239 Move X1, [X8]
	240 Call StyleDataRef`1<TransformData>.Write, X0
	241 Move X27, X0
	242 Add X8, X31, 16
	243 Move X0, X20
	244 Move W1, W31
	245 Move X2, X31
	246 Call StylePropertyReader.ReadRotate, X0, X1
	247 Move X8, [X31+32]
	248 Move V0, [X31+1]
	249 Move [X31+64], X8
	250 Move [X31+3], V0
	251 Move [X27+16], X8
	252 Move [X27], V0
	253 Move X8, 0x39B000
	254 Move X8, [X8+776]
	255 Move X0, X23
	256 Move X1, [X8]
	257 Call StyleDataRef`1<RareData>.Write, X0
	258 Move X27, X0
	259 Move X0, X20
	260 Move W1, W31
	261 Move X2, X31
	262 Call StylePropertyReader.ReadColor, X0, X1
	263 Move [X27+28], S0
	264 Move [X27+36], S1
	265 Move [X27+36], S2
	266 Move [X27+44], S3
	267 Move X8, 0x39B000
	268 Move X8, [X8+776]
	269 Move X0, X23
	270 Move X1, [X8]
	271 Call StyleDataRef`1<RareData>.Write, X0
	272 Move X27, X0
	273 Move W1, 9
	274 Move X0, X20
	275 Move W2, W31
	276 Move X3, X31
	277 Call StylePropertyReader.ReadEnum, X0, X1, X2
	278 Move [X27+44], W0
	279 Move X8, 0x39B000
	280 Move X8, [X8+776]
	281 Move X0, X23
	282 Move X1, [X8]
	283 Call StyleDataRef`1<RareData>.Write, X0
	284 Move X27, X0
	285 Move X0, X20
	286 Move W1, W31
	287 Move X2, X31
	288 Call StylePropertyReader.ReadInt, X0, X1
	289 Move X8, 0x39B000
	290 Move X8, [X8+776]
	291 Move X0, X23
	292 Move X1, [X8]
	293 Call StyleDataRef`1<RareData>.Write, X0
	294 Move X27, X0
	295 Move X0, X20
	296 Move W1, W31
	297 Move X2, X31
	298 Call StylePropertyReader.ReadFloat, X0, X1
	299 Move [X27+60], S0
	300 Move X8, 0x39B000
	301 Move X8, [X8+776]
	302 Move X0, X23
	303 Move X1, [X8]
	304 Call StyleDataRef`1<RareData>.Write, X0
	305 Move X27, X0
	306 Move W1, 17
	307 Move X0, X20
	308 Move W2, W31
	309 Move X3, X31
	310 Call StylePropertyReader.ReadEnum, X0, X1, X2
	311 Move [X27+68], W0
	312 Move X8, 0x39B000
	313 Move X8, [X8+904]
	314 Move X0, [X8]
	315 Move W8, [X0+224]
	316 Compare W8, 0
	317 JumpIfNotEqual {319}
	318 Call 0x1C17DFC
	319 Move X0, X20
	320 Move X1, X21
	321 Move X2, X31
	322 Call ShorthandApplicator.ApplyBorderColor, X0, X1
	323 Move X8, 0x39B000
	324 Move X8, [X8+904]
	325 Move X0, [X8]
	326 Move W8, [X0+224]
	327 Compare W8, 0
	328 JumpIfNotEqual {330}
	329 Call 0x1C17DFC
	330 Move X0, X20
	331 Move X1, X21
	332 Move X2, X31
	333 Call ShorthandApplicator.ApplyBorderRadius, X0, X1
	334 Move X8, 0x39B000
	335 Move X8, [X8+904]
	336 Move X0, [X8]
	337 Move W8, [X0+224]
	338 Compare W8, 0
	339 JumpIfNotEqual {341}
	340 Call 0x1C17DFC
	341 Move X0, X20
	342 Move X1, X21
	343 Move X2, X31
	344 Call ShorthandApplicator.ApplyBorderWidth, X0, X1
	345 Move X8, 0x39B000
	346 Move X8, [X8+904]
	347 Move X0, [X8]
	348 Move W8, [X0+224]
	349 Compare W8, 0
	350 JumpIfNotEqual {352}
	351 Call 0x1C17DFC
	352 Move X0, X20
	353 Move X1, X21
	354 Move X2, X31
	355 Call ShorthandApplicator.ApplyPadding, X0, X1
	356 Move X8, 0x39B000
	357 Move X8, [X8+904]
	358 Move X0, [X8]
	359 Move W8, [X0+224]
	360 Compare W8, 0
	361 JumpIfNotEqual {363}
	362 Call 0x1C17DFC
	363 Move X0, X20
	364 Move X1, X21
	365 Move X2, X31
	366 Call ShorthandApplicator.ApplyUnityBackgroundScaleMode, X0, X1
	367 Move X8, 0x39B000
	368 Move X8, [X8+776]
	369 Move X0, X23
	370 Move X1, [X8]
	371 Call StyleDataRef`1<RareData>.Write, X0
	372 Move X27, X0
	373 Move W1, 16
	374 Move X0, X20
	375 Move W2, W31
	376 Move X3, X31
	377 Call StylePropertyReader.ReadEnum, X0, X1, X2
	378 Move [X27+24], W0
	379 Move X8, 0x39B000
	380 Move X8, [X8+776]
	381 Move X0, X23
	382 Move X1, [X8]
	383 Call StyleDataRef`1<RareData>.Write, X0
	384 Move X27, X0
	385 Move X0, X20
	386 Move W1, W31
	387 Move X2, X31
	388 Call StylePropertyReader.ReadInt, X0, X1
	389 Move [X27+52], W0
	390 Move X8, 0x39B000
	391 Move X8, [X8+776]
	392 Move X0, X23
	393 Move X1, [X8]
	394 Call StyleDataRef`1<RareData>.Write, X0
	395 Move X27, X0
	396 Move X0, X20
	397 Move W1, W31
	398 Move X2, X31
	399 Call StylePropertyReader.ReadInt, X0, X1
	400 Move [X27+56], W0
	401 Move X8, 0x39B000
	402 Move X8, [X8+776]
	403 Move X0, X23
	404 Move X1, [X8]
	405 Call StyleDataRef`1<RareData>.Write, X0
	406 Move X27, X0
	407 Move X0, X20
	408 Move W1, W31
	409 Move X2, X31
	410 Call StylePropertyReader.ReadInt, X0, X1
	411 Move [X27+64], W0
	412 Move X8, 0x39B000
	413 Move X8, [X8+904]
	414 Move X0, [X8]
	415 Move W8, [X0+224]
	416 Compare W8, 0
	417 JumpIfNotEqual {419}
	418 Call 0x1C17DFC
	419 Move X0, X20
	420 Move X1, X21
	421 Move X2, X31
	422 Call ShorthandApplicator.ApplyFlex, X0, X1
	423 Move X8, 0x39A000
	424 Move X8, [X8+904]
	425 Move X0, [X8]
	426 Move W8, [X0+224]
	427 Compare W8, 0
	428 JumpIfNotEqual {430}
	429 Call 0x1C17DFC
	430 Move X0, X20
	431 Move X1, X21
	432 Move X2, X31
	433 Call ShorthandApplicator.ApplyMargin, X0, X1
	434 Move X8, 0x39A000
	435 Move X8, [X8+904]
	436 Move X0, [X8]
	437 Move W8, [X0+224]
	438 Compare W8, 0
	439 JumpIfNotEqual {441}
	440 Call 0x1C17DFC
	441 Move X0, X20
	442 Move X1, X21
	443 Move X2, X31
	444 Call ShorthandApplicator.ApplyTransition, X0, X1
	445 Move X8, 0x39A000
	446 Move X8, [X8+904]
	447 Move X0, [X8]
	448 Move W8, [X0+224]
	449 Compare W8, 0
	450 JumpIfNotEqual {452}
	451 Call 0x1C17DFC
	452 Move X0, X20
	453 Move X1, X21
	454 Move X2, X31
	455 Call ShorthandApplicator.ApplyUnityTextOutline, X0, X1
	456 Move X8, 0x39A000
	457 Move X8, [X8+760]
	458 Move X0, X24
	459 Move X1, [X8]
	460 Call StyleDataRef`1<VisualData>.Write, X0
	461 Move X27, X0
	462 Add X8, X31, 16
	463 Move X0, X20
	464 Move W1, W31
	465 Move X2, X31
	466 Call StylePropertyReader.ReadBackground, X0, X1
	467 Move V1, [X31+16]
	468 Move V0, [X31+32]
	469 Move [X31+48], V1
	470 Move [X31+56], V0
	471 Move [X27+16], V1
	472 Move [X27+24], V0
	473 Move X8, 0x39A000
	474 Move X8, [X8+760]
	475 Move X0, X24
	476 Move X1, [X8]
	477 Call StyleDataRef`1<VisualData>.Write, X0
	478 Move X27, X0
	479 Move X0, X20
	480 Move W1, W31
	481 Move X2, X31
	482 Call StylePropertyReader.ReadBackgroundPositionX, X0, X1
	483 Move [X27+48], X0
	484 Move [X27+56], W1
	485 Move X8, 0x39A000
	486 Move X8, [X8+760]
	487 Move X0, X24
	488 Move X1, [X8]
	489 Call StyleDataRef`1<VisualData>.Write, X0
	490 Move X27, X0
	491 Move X0, X20
	492 Move W1, W31
	493 Move X2, X31
	494 Call StylePropertyReader.ReadBackgroundPositionY, X0, X1
	495 Move [X27+60], X0
	496 Move [X27+68], W1
	497 Move X8, 0x39A000
	498 Move X8, [X8+760]
	499 Move X0, X24
	500 Move X1, [X8]
	501 Call StyleDataRef`1<VisualData>.Write, X0
	502 Move X27, X0
	503 Move X0, X20
	504 Move W1, W31
	505 Move X2, X31
	506 Call StylePropertyReader.ReadBackgroundRepeat, X0, X1
	507 Move [X27+72], X0
	508 Move X8, 0x39A000
	509 Move X8, [X8+760]
	510 Move X0, X24
	511 Move X1, [X8]
	512 Call StyleDataRef`1<VisualData>.Write, X0
	513 Move X8, 0x39A000
	514 Move X8, [X8+760]
	515 Move X0, X24
	516 Move X1, [X8]
	517 Call StyleDataRef`1<VisualData>.Write, X0
	518 Move X27, X0
	519 Move X0, X20
	520 Move W1, W31
	521 Move X2, X31
	522 Call StylePropertyReader.ReadColor, X0, X1
	523 Move [X27+132], S0
	524 Move [X27+140], S1
	525 Move [X27+140], S2
	526 Move [X27+148], S3
	527 Move X8, 0x39A000
	528 Move X8, [X8+760]
	529 Move X0, X24
	530 Move X1, [X8]
	531 Call StyleDataRef`1<VisualData>.Write, X0
	532 Move X27, X0
	533 Move X0, X20
	534 Move W1, W31
	535 Move X2, X31
	536 Call StylePropertyReader.ReadColor, X0, X1
	537 Move [X27+164], S0
	538 Move [X27+172], S1
	539 Move [X27+172], S2
	540 Move [X27+180], S3
	541 Move X8, 0x39A000
	542 Move X8, [X8+760]
	543 Move X0, X24
	544 Move X1, [X8]
	545 Call StyleDataRef`1<VisualData>.Write, X0
	546 Move X27, X0
	547 Move X0, X20
	548 Move W1, W31
	549 Move X2, X31
	550 Call StylePropertyReader.ReadLength, X0, X1
	551 Move [X27+180], X0
	552 Move X8, 0x39A000
	553 Move X8, [X8+760]
	554 Move X0, X24
	555 Move X1, [X8]
	556 Call StyleDataRef`1<VisualData>.Write, X0
	557 Move X27, X0
	558 Move X0, X20
	559 Move W1, W31
	560 Move X2, X31
	561 Call StylePropertyReader.ReadFloat, X0, X1
	562 Move [X27+196], S0
	563 Move X8, 0x39A000
	564 Move X8, [X8+760]
	565 Move X0, X24
	566 Move X1, [X8]
	567 Call StyleDataRef`1<VisualData>.Write, X0
	568 Move X27, X0
	569 Move W1, 10
	570 Move X0, X20
	571 Move W2, W31
	572 Move X3, X31
	573 Call StylePropertyReader.ReadEnum, X0, X1, X2
	574 Move [X27+200], W0
	575 Move X8, 0x39A000
	576 Move X8, [X8+792]
	577 Move X0, [X31+8]
	578 Move X1, [X8]
	579 Call StyleDataRef`1<TransitionData>.Write, X0
	580 Move X1, [X0+8]
	581 Move X0, X20
	582 Move W2, W31
	583 Move X3, X31
	584 Call StylePropertyReader.ReadListTimeValue, X0, X1, X2
	585 Move X8, 0x39A000
	586 Move X8, [X8+792]
	587 Move X0, [X31+8]
	588 Move X1, [X8]
	589 Call StyleDataRef`1<TransitionData>.Write, X0
	590 Move X1, [X0+16]
	591 Move X0, X20
	592 Move W2, W31
	593 Move X3, X31
	594 Call StylePropertyReader.ReadListStylePropertyName, X0, X1, X2
	595 Move X8, 0x39A000
	596 Move X8, [X8+792]
	597 Move X0, [X31+8]
	598 Move X1, [X8]
	599 Call StyleDataRef`1<TransitionData>.Write, X0
	600 Move X1, [X0+24]
	601 Move X0, X20
	602 Move W2, W31
	603 Move X3, X31
	604 Call StylePropertyReader.ReadListEasingFunction, X0, X1, X2
	605 Move [X21+80], X31
	606 Move X8, 0x39A000
	607 Move X8, [X8+784]
	608 Move X0, [X31]
	609 Move X1, [X8]
	610 Call StyleDataRef`1<TransformData>.Write, X0
	611 Move X27, X0
	612 Move X0, X20
	613 Move W1, W31
	614 Move X2, X31
	615 Call StylePropertyReader.ReadScale, X0, X1
	616 Move [X27+24], X0
	617 Move [X27+32], X1
	618 Move X8, 0x39A000
	619 Move X8, [X8+784]
	620 Move X0, [X31]
	621 Move X1, [X8]
	622 Call StyleDataRef`1<TransformData>.Write, X0
	623 Move X27, X0
	624 Add X8, X31, 16
	625 Move X0, X20
	626 Move W1, W31
	627 Move X2, X31
	628 Call StylePropertyReader.ReadTransformOrigin, X0, X1
	629 Move W8, [X31+32]
	630 Move V0, [X31+1]
	631 Move [X31+64], W8
	632 Move [X31+3], V0
	633 Move [X27+56], W8
	634 Move [X27+40], V0
	635 Move X8, 0x39A000
	636 Move X8, [X8+784]
	637 Move X0, [X31]
	638 Move X1, [X8]
	639 Call StyleDataRef`1<TransformData>.Write, X0
	640 Move X27, X0
	641 Add X8, X31, 16
	642 Move X0, X20
	643 Move W1, W31
	644 Move X2, X31
	645 Call StylePropertyReader.ReadTranslate, X0, X1
	646 Move X8, [X31+32]
	647 Move V0, [X31+1]
	648 Move [X31+64], X8
	649 Move [X31+3], V0
	650 Move [X27+76], X8
	651 Move [X27+60], V0
	652 Move X8, 0x39A000
	653 Move X8, [X8+760]
	654 Move X0, X24
	655 Move X1, [X8]
	656 Call StyleDataRef`1<VisualData>.Write, X0
	657 Move X27, X0
	658 Add X8, X31, 16
	659 Move X0, X20
	660 Move W1, W31
	661 Move X2, X31
	662 Call StylePropertyReader.ReadBackgroundSize, X0, X1
	663 Move W8, [X31+32]
	664 Move V0, [X31+1]
	665 Move [X31+64], W8
	666 Move [X31+3], V0
	667 Move [X27+96], W8
	668 Move [X27+5], V0
	669 Move X8, 0x39A000
	670 Move X8, [X8+760]
	671 Move X0, X24
	672 Move X1, [X8]
	673 Call StyleDataRef`1<VisualData>.Write, X0
	674 Move X27, X0
	675 Move X0, X20
	676 Move W1, W31
	677 Move X2, X31
	678 Call StylePropertyReader.ReadColor, X0, X1
	679 Move [X27+100], S0
	680 Move [X27+108], S1
	681 Move [X27+108], S2
	682 Move [X27+116], S3
	683 Move X8, 0x39A000
	684 Move X8, [X8+760]
	685 Move X0, X24
	686 Move X1, [X8]
	687 Call StyleDataRef`1<VisualData>.Write, X0
	688 Move X8, 0x39A000
	689 Move X8, [X8+760]
	690 Move X0, X24
	691 Move X1, [X8]
	692 Call StyleDataRef`1<VisualData>.Write, X0
	693 Move X27, X0
	694 Move X0, X20
	695 Move W1, W31
	696 Move X2, X31
	697 Call StylePropertyReader.ReadColor, X0, X1
	698 Move [X27+148], S0
	699 Move [X27+156], S1
	700 Move [X27+156], S2
	701 Move [X27+164], S3
	702 Move X8, 0x39A000
	703 Move X8, [X8+760]
	704 Move X0, X24
	705 Move X1, [X8]
	706 Call StyleDataRef`1<VisualData>.Write, X0
	707 Move X27, X0
	708 Move X0, X20
	709 Move W1, W31
	710 Move X2, X31
	711 Call StylePropertyReader.ReadLength, X0, X1
	712 Move [X27+188], X0
	713 Move X8, 0x39A000
	714 Move X8, [X8+752]
	715 Move X0, X22
	716 Move X1, [X8]
	717 Call StyleDataRef`1<LayoutData>.Write, X0
	718 Move X27, X0
	719 Move X0, X20
	720 Move W1, W31
	721 Move W2, W31
	722 Move X3, X31
	723 Call StylePropertyReader.ReadEnum, X0, X1, X2
	724 Move [X27+4], W0
	725 Move X8, 0x39A000
	726 Move X8, [X8+752]
	727 Move X0, X22
	728 Move X1, [X8]
	729 Call StyleDataRef`1<LayoutData>.Write, X0
	730 Move X27, X0
	731 Move X0, X20
	732 Move W1, W31
	733 Move W2, W31
	734 Move X3, X31
	735 Call StylePropertyReader.ReadEnum, X0, X1, X2
	736 Move [X27+8], W0
	737 Move X8, 0x39A000
	738 Move X8, [X8+752]
	739 Move X0, X22
	740 Move X1, [X8]
	741 Call StyleDataRef`1<LayoutData>.Write, X0
	742 Move X27, X0
	743 Move X0, X20
	744 Move W1, W31
	745 Move X2, X31
	746 Call StylePropertyReader.ReadFloat, X0, X1
	747 Move [X27+12], S0
	748 Move X8, 0x39A000
	749 Move X8, [X8+752]
	750 Move X0, X22
	751 Move X1, [X8]
	752 Call StyleDataRef`1<LayoutData>.Write, X0
	753 Move X27, X0
	754 Move X0, X20
	755 Move W1, W31
	756 Move X2, X31
	757 Call StylePropertyReader.ReadFloat, X0, X1
	758 Move [X27+16], S0
	759 Move X8, 0x39A000
	760 Move X8, [X8+752]
	761 Move X0, X22
	762 Move X1, [X8]
	763 Call StyleDataRef`1<LayoutData>.Write, X0
	764 Move X27, X0
	765 Move X0, X20
	766 Move W1, W31
	767 Move X2, X31
	768 Call StylePropertyReader.ReadFloat, X0, X1
	769 Move [X27+20], S0
	770 Move X8, 0x39A000
	771 Move X8, [X8+752]
	772 Move X0, X22
	773 Move X1, [X8]
	774 Call StyleDataRef`1<LayoutData>.Write, X0
	775 Move X27, X0
	776 Move X0, X20
	777 Move W1, W31
	778 Move X2, X31
	779 Call StylePropertyReader.ReadFloat, X0, X1
	780 Move [X27+24], S0
	781 Move X8, 0x39A000
	782 Move X8, [X8+752]
	783 Move X0, X22
	784 Move X1, [X8]
	785 Call StyleDataRef`1<LayoutData>.Write, X0
	786 Move X27, X0
	787 Move X0, X20
	788 Move W1, W31
	789 Move X2, X31
	790 Call StylePropertyReader.ReadLength, X0, X1
	791 Move [X27+28], X0
	792 Move X8, 0x39A000
	793 Move X8, [X8+752]
	794 Move X0, X22
	795 Move X1, [X8]
	796 Call StyleDataRef`1<LayoutData>.Write, X0
	797 Move X27, X0
	798 Move W1, 3
	799 Move X0, X20
	800 Move W2, W31
	801 Move X3, X31
	802 Call StylePropertyReader.ReadEnum, X0, X1, X2
	803 Move [X27+36], W0
	804 Move X8, 0x39A000
	805 Move X8, [X8+752]
	806 Move X0, X22
	807 Move X1, [X8]
	808 Call StyleDataRef`1<LayoutData>.Write, X0
	809 Move X27, X0
	810 Move X0, X20
	811 Move W1, W31
	812 Move X2, X31
	813 Call StylePropertyReader.ReadLength, X0, X1
	814 Move [X27+40], X0
	815 Move X8, 0x39A000
	816 Move X8, [X8+752]
	817 Move X0, X22
	818 Move X1, [X8]
	819 Call StyleDataRef`1<LayoutData>.Write, X0
	820 Move X27, X0
	821 Move W1, 5
	822 Move X0, X20
	823 Move W2, W31
	824 Move X3, X31
	825 Call StylePropertyReader.ReadEnum, X0, X1, X2
	826 Move [X27+48], W0
	827 Move X8, 0x39A000
	828 Move X8, [X8+752]
	829 Move X0, X22
	830 Move X1, [X8]
	831 Call StyleDataRef`1<LayoutData>.Write, X0
	832 Move X27, X0
	833 Move X0, X20
	834 Move W1, W31
	835 Move X2, X31
	836 Call StylePropertyReader.ReadFloat, X0, X1
	837 Move [X27+52], S0
	838 Move X8, 0x39A000
	839 Move X8, [X8+752]
	840 Move X0, X22
	841 Move X1, [X8]
	842 Call StyleDataRef`1<LayoutData>.Write, X0
	843 Move X27, X0
	844 Move X0, X20
	845 Move W1, W31
	846 Move X2, X31
	847 Call StylePropertyReader.ReadFloat, X0, X1
	848 Move [X27+56], S0
	849 Move X8, 0x39A000
	850 Move X8, [X8+752]
	851 Move X0, X22
	852 Move X1, [X8]
	853 Call StyleDataRef`1<LayoutData>.Write, X0
	854 Move X27, X0
	855 Move W1, 21
	856 Move X0, X20
	857 Move W2, W31
	858 Move X3, X31
	859 Call StylePropertyReader.ReadEnum, X0, X1, X2
	860 Move [X27+60], W0
	861 Move X8, 0x39A000
	862 Move X8, [X8+752]
	863 Move X0, X22
	864 Move X1, [X8]
	865 Call StyleDataRef`1<LayoutData>.Write, X0
	866 Move X27, X0
	867 Move X0, X20
	868 Move W1, W31
	869 Move X2, X31
	870 Call StylePropertyReader.ReadLength, X0, X1
	871 Move X8, 0x39A000
	872 Move X8, [X8+752]
	873 Move X0, X22
	874 Move X1, [X8]
	875 Call StyleDataRef`1<LayoutData>.Write, X0
	876 Move X27, X0
	877 Move W1, 7
	878 Move X0, X20
	879 Move W2, W31
	880 Move X3, X31
	881 Call StylePropertyReader.ReadEnum, X0, X1, X2
	882 Move [X27+72], W0
	883 Move X8, 0x39A000
	884 Move X8, [X8+752]
	885 Move X0, X22
	886 Move X1, [X8]
	887 Call StyleDataRef`1<LayoutData>.Write, X0
	888 Move X27, X0
	889 Move X0, X20
	890 Move W1, W31
	891 Move X2, X31
	892 Call StylePropertyReader.ReadLength, X0, X1
	893 Move [X27+76], X0
	894 Move X8, 0x39A000
	895 Move X8, [X8+752]
	896 Move X0, X22
	897 Move X1, [X8]
	898 Call StyleDataRef`1<LayoutData>.Write, X0
	899 Move X27, X0
	900 Move X0, X20
	901 Move W1, W31
	902 Move X2, X31
	903 Call StylePropertyReader.ReadLength, X0, X1
	904 Move [X27+84], X0
	905 Move X8, 0x39A000
	906 Move X8, [X8+752]
	907 Move X0, X22
	908 Move X1, [X8]
	909 Call StyleDataRef`1<LayoutData>.Write, X0
	910 Move X8, 0x39A000
	911 Move X8, [X8+752]
	912 Move X0, X22
	913 Move X1, [X8]
	914 Call StyleDataRef`1<LayoutData>.Write, X0
	915 Move X27, X0
	916 Move X0, X20
	917 Move W1, W31
	918 Move X2, X31
	919 Call StylePropertyReader.ReadLength, X0, X1
	920 Move [X27+100], X0
	921 Move X8, 0x39A000
	922 Move X8, [X8+752]
	923 Move X0, X22
	924 Move X1, [X8]
	925 Call StyleDataRef`1<LayoutData>.Write, X0
	926 Move X27, X0
	927 Move X0, X20
	928 Move W1, W31
	929 Move X2, X31
	930 Call StylePropertyReader.ReadLength, X0, X1
	931 Move [X27+108], X0
	932 Move X8, 0x39A000
	933 Move X8, [X8+752]
	934 Move X0, X22
	935 Move X1, [X8]
	936 Call StyleDataRef`1<LayoutData>.Write, X0
	937 Move X27, X0
	938 Move X0, X20
	939 Move W1, W31
	940 Move X2, X31
	941 Call StylePropertyReader.ReadLength, X0, X1
	942 Move [X27+116], X0
	943 Move X8, 0x39A000
	944 Move X8, [X8+752]
	945 Move X0, X22
	946 Move X1, [X8]
	947 Call StyleDataRef`1<LayoutData>.Write, X0
	948 Move X27, X0
	949 Move X0, X20
	950 Move W1, W31
	951 Move X2, X31
	952 Call StylePropertyReader.ReadLength, X0, X1
	953 Move [X27+124], X0
	954 Move X8, 0x39A000
	955 Move X8, [X8+752]
	956 Move X0, X22
	957 Move X1, [X8]
	958 Call StyleDataRef`1<LayoutData>.Write, X0
	959 Move X8, 0x39A000
	960 Move X8, [X8+752]
	961 Move X0, X22
	962 Move X1, [X8]
	963 Call StyleDataRef`1<LayoutData>.Write, X0
	964 Move X27, X0
	965 Move X0, X20
	966 Move W1, W31
	967 Move X2, X31
	968 Call StylePropertyReader.ReadLength, X0, X1
	969 Move [X27+140], X0
	970 Move X8, 0x39A000
	971 Move X8, [X8+752]
	972 Move X0, X22
	973 Move X1, [X8]
	974 Call StyleDataRef`1<LayoutData>.Write, X0
	975 Move X27, X0
	976 Move X0, X20
	977 Move W1, W31
	978 Move X2, X31
	979 Call StylePropertyReader.ReadLength, X0, X1
	980 Move [X27+148], X0
	981 Move X8, 0x39A000
	982 Move X8, [X8+752]
	983 Move X0, X22
	984 Move X1, [X8]
	985 Call StyleDataRef`1<LayoutData>.Write, X0
	986 Move X27, X0
	987 Move X0, X20
	988 Move W1, W31
	989 Move X2, X31
	990 Call StylePropertyReader.ReadLength, X0, X1
	991 Move [X27+156], X0
	992 Move X8, 0x39A000
	993 Move X8, [X8+752]
	994 Move X0, X22
	995 Move X1, [X8]
	996 Call StyleDataRef`1<LayoutData>.Write, X0
	997 Move X27, X0
	998 Move X0, X20
	999 Move W1, W31
	1000 Move X2, X31
	1001 Call StylePropertyReader.ReadLength, X0, X1
	1002 Move [X27+164], X0
	1003 Move X8, 0x39A000
	1004 Move X8, [X8+752]
	1005 Move X0, X22
	1006 Move X1, [X8]
	1007 Call StyleDataRef`1<LayoutData>.Write, X0
	1008 Move X27, X0
	1009 Move X0, X20
	1010 Move W1, W31
	1011 Move X2, X31
	1012 Call StylePropertyReader.ReadLength, X0, X1
	1013 Move [X27+172], X0
	1014 Move X8, 0x39A000
	1015 Move X8, [X8+752]
	1016 Move X0, X22
	1017 Move X1, [X8]
	1018 Call StyleDataRef`1<LayoutData>.Write, X0
	1019 Move X27, X0
	1020 Move W1, 11
	1021 Move X0, X20
	1022 Move W2, W31
	1023 Move X3, X31
	1024 Call StylePropertyReader.ReadEnum, X0, X1, X2
	1025 Move [X27+180], W0
	1026 Move X8, 0x39A000
	1027 Move X8, [X8+752]
	1028 Move X0, X22
	1029 Move X1, [X8]
	1030 Call StyleDataRef`1<LayoutData>.Write, X0
	1031 Move X27, X0
	1032 Move X0, X20
	1033 Move W1, W31
	1034 Move X2, X31
	1035 Call StylePropertyReader.ReadLength, X0, X1
	1036 Move [X27+184], X0
	1037 Move X8, 0x39A000
	1038 Move X8, [X8+752]
	1039 Move X0, X22
	1040 Move X1, [X8]
	1041 Call StyleDataRef`1<LayoutData>.Write, X0
	1042 Move X27, X0
	1043 Move X0, X20
	1044 Move W1, W31
	1045 Move X2, X31
	1046 Call StylePropertyReader.ReadLength, X0, X1
	1047 Move [X27+192], X0
	1048 Move X8, 0x39A000
	1049 Move X8, [X8+752]
	1050 Move X0, X22
	1051 Move X1, [X8]
	1052 Call StyleDataRef`1<LayoutData>.Write, X0
	1053 Move X27, X0
	1054 Move X0, X20
	1055 Move W1, W31
	1056 Move X2, X31
	1057 Call StylePropertyReader.ReadLength, X0, X1
	1058 Move [X27+200], X0
	1059 Move X8, 0x39A000
	1060 Move X8, [X8+768]
	1061 Move X0, X21
	1062 Move X1, [X8]
	1063 Call 0x266D4BC, X0
	1064 Move X27, X0
	1065 Move X0, X20
	1066 Move W1, W31
	1067 Move X2, X31
	1068 Call StylePropertyReader.ReadLength, X0, X1
	1069 Move [X27+16], X0
	1070 Move X8, 0x39A000
	1071 Move X8, [X8+768]
	1072 Move X0, X21
	1073 Move X1, [X8]
	1074 Call 0x266D4BC, X0
	1075 Move X27, X0
	1076 Move X0, X20
	1077 Move W1, W31
	1078 Move X2, X31
	1079 Call StylePropertyReader.ReadLength, X0, X1
	1080 Move [X27+24], X0
	1081 Move X8, 0x39A000
	1082 Move X8, [X8+768]
	1083 Move X0, X21
	1084 Move X1, [X8]
	1085 Call 0x266D4BC, X0
	1086 Move X27, X0
	1087 Add X8, X31, 16
	1088 Move X0, X20
	1089 Move W1, W31
	1090 Move X2, X31
	1091 Call StylePropertyReader.ReadTextShadow, X0, X1
	1092 NotImplemented "Instruction LDUR not yet implemented."
	1093 Move V1, [X31+1]
	1094 Move [X31+60], V0
	1095 Move [X31+3], V1
	1096 Move V0, [X31+3]
	1097 NotImplemented "Instruction LDUR not yet implemented."
	1098 Move [X27+2], V0
	1099 Move [X27+44], V1
	1100 Move X8, 0x39A000
	1101 Move X8, [X8+768]
	1102 Move X0, X21
	1103 Move X1, [X8]
	1104 Call 0x266D4BC, X0
	1105 Move X27, X0
	1106 Move X0, X20
	1107 Move W1, W31
	1108 Move X2, X31
	1109 Call StylePropertyReader.ReadFont, X0, X1
	1110 Move [X27+64], X0
	1111 Move X8, 0x39A000
	1112 Move X8, [X8+768]
	1113 Move X0, X21
	1114 Move X1, [X8]
	1115 Call 0x266D4BC, X0
	1116 Move X27, X0
	1117 Move X0, X20
	1118 Move W1, W31
	1119 Move X2, X31
	1120 Call StylePropertyReader.ReadFontDefinition, X0, X1
	1121 Move [X27+72], X0
	1122 Move [X27+80], X1
	1123 Move X8, 0x39A000
	1124 Move X8, [X8+768]
	1125 Move X0, X21
	1126 Move X1, [X8]
	1127 Call 0x266D4BC, X0
	1128 Move X27, X0
	1129 Move W1, 6
	1130 Move X0, X20
	1131 Move W2, W31
	1132 Move X3, X31
	1133 Call StylePropertyReader.ReadEnum, X0, X1, X2
	1134 Move [X27+88], W0
	1135 Move X8, 0x39A000
	1136 Move X8, [X8+768]
	1137 Move X0, X21
	1138 Move X1, [X8]
	1139 Call 0x266D4BC, X0
	1140 Move X27, X0
	1141 Move X0, X20
	1142 Move W1, W31
	1143 Move X2, X31
	1144 Call StylePropertyReader.ReadLength, X0, X1
	1145 Move [X27+92], X0
	1146 Move X8, 0x39A000
	1147 Move X8, [X8+768]
	1148 Move X0, X21
	1149 Move X1, [X8]
	1150 Call 0x266D4BC, X0
	1151 Move X27, X0
	1152 Move W1, 15
	1153 Move X0, X20
	1154 Move W2, W31
	1155 Move X3, X31
	1156 Call StylePropertyReader.ReadEnum, X0, X1, X2
	1157 Move [X27+100], W0
	1158 Move X8, 0x39A000
	1159 Move X8, [X8+768]
	1160 Move X0, X21
	1161 Move X1, [X8]
	1162 Call 0x266D4BC, X0
	1163 Move X27, X0
	1164 Move X0, X20
	1165 Move W1, W31
	1166 Move X2, X31
	1167 Call StylePropertyReader.ReadColor, X0, X1
	1168 Move [X27+104], S0
	1169 Move [X27+112], S1
	1170 Move [X27+112], S2
	1171 Move [X27+120], S3
	1172 Move X8, 0x39A000
	1173 Move X8, [X8+768]
	1174 Move X0, X21
	1175 Move X1, [X8]
	1176 Call 0x266D4BC, X0
	1177 Move X27, X0
	1178 Move X0, X20
	1179 Move W1, W31
	1180 Move X2, X31
	1181 Call StylePropertyReader.ReadFloat, X0, X1
	1182 Move [X27+120], S0
	1183 Move X8, 0x39A000
	1184 Move X8, [X8+768]
	1185 Move X0, X21
	1186 Move X1, [X8]
	1187 Call 0x266D4BC, X0
	1188 Move X27, X0
	1189 Move W1, 19
	1190 Move X0, X20
	1191 Move W2, W31
	1192 Move X3, X31
	1193 Call StylePropertyReader.ReadEnum, X0, X1, X2
	1194 Move [X27+124], W0
	1195 Move X8, 0x39A000
	1196 Move X8, [X8+768]
	1197 Move X0, X21
	1198 Move X1, [X8]
	1199 Call 0x266D4BC, X0
	1200 Move X27, X0
	1201 Move W1, 20
	1202 Move X0, X20
	1203 Move W2, W31
	1204 Move X3, X31
	1205 Call StylePropertyReader.ReadEnum, X0, X1, X2
	1206 Move [X27+128], W0
	1207 Move X8, 0x39A000
	1208 Move X8, [X8+768]
	1209 Move X0, X21
	1210 Move X1, [X8]
	1211 Call 0x266D4BC, X0
	1212 Move X27, X0
	1213 Move X0, X20
	1214 Move W1, W31
	1215 Move X2, X31
	1216 Call StylePropertyReader.ReadLength, X0, X1
	1217 Move [X27+132], X0
	1218 Move X20, [X31+160]
	1219 Move X19, [X31+168]
	1220 Move X22, [X31+144]
	1221 Move X21, [X31+152]
	1222 Move X24, [X31+128]
	1223 Move X23, [X31+136]
	1224 Move X26, [X31+112]
	1225 Move X25, [X31+120]
	1226 Move X28, [X31+96]
	1227 Move X27, [X31+104]
	1228 Move X29, [X31+80]
	1229 Move X30, [X31+88]
	1230 Add X31, X31, 176
	1231 Return 
	1232 Call 0x1C17F20

Method: System.Void ApplyStyleValue(UnityEngine.UIElements.StyleSheets.StyleValue sv, ref UnityEngine.UIElements.ComputedStyle parentStyle)

Disassembly:
	0x03DCCD70 LDR X1, [X8]
	0x03DCCD74 BL 0x266D6BC
	0x03DCCD78 CBZ X20, 0x3DCCE54
	0x03DCCD7C ADRP X8, 0x351000
	0x03DCCD80 LDR X8, [X8 + 0x7E0]
	0x03DCCD84 LDR X9, [X20]
	0x03DCCD88 LDR X8, [X8]
	0x03DCCD8C LDRB W11, [X9 + 0x130]
	0x03DCCD90 LDRB W10, [X8 + 0x130]
	0x03DCCD94 CMP W11, W10
	0x03DCCD98 B.CS 0x3DCCF14
	0x03DCCD9C MOV X8, X31
	0x03DCCDA0 B 0x3DCCF28
	0x03DCCDA4 ADRP X8, 0x399000
	0x03DCCDA8 LDR X8, [X8 + 0x318]
	0x03DCCDAC ADD X0, X19, 0x20
	0x03DCCDB0 LDR X1, [X8]
	0x03DCCDB4 BL 0x266D6BC
	0x03DCCDB8 CBZ X20, 0x3DCCE98
	0x03DCCDBC ADRP X8, 0x399000
	0x03DCCDC0 LDR X8, [X8 + 0x348]
	0x03DCCDC4 LDR X9, [X20]
	0x03DCCDC8 LDR X8, [X8]
	0x03DCCDCC LDRB W11, [X9 + 0x130]
	0x03DCCDD0 LDRB W10, [X8 + 0x130]
	0x03DCCDD4 CMP W11, W10
	0x03DCCDD8 B.CS 0x3DCCF30
	0x03DCCDDC MOV X8, X31
	0x03DCCDE0 B 0x3DCCF44
	0x03DCCDE4 ADRP X8, 0x398000
	0x03DCCDE8 LDR X8, [X8 + 0x358]
	0x03DCCDEC LDR X20, [X0]
	0x03DCCDF0 LDR X8, [X8]
	0x03DCCDF4 LDR W9, [X8 + 0xE0]
	0x03DCCDF8 CBNZ W9, 0x3DCCE04
	0x03DCCDFC MOV X0, X8
	0x03DCCE00 BL 0x1C16DFC
	0x03DCCE04 MOV X0, X31
	0x03DCCE08 BL 0x3D46AD0
	0x03DCCE0C B 0x3DCCE38
	0x03DCCE10 ADRP X8, 0x398000
	0x03DCCE14 LDR X8, [X8 + 0x358]
	0x03DCCE18 LDR X20, [X0 + 0x8]
	0x03DCCE1C LDR X8, [X8]
	0x03DCCE20 LDR W9, [X8 + 0xE0]
	0x03DCCE24 CBNZ W9, 0x3DCCE30
	0x03DCCE28 MOV X0, X8
	0x03DCCE2C BL 0x1C16DFC
	0x03DCCE30 MOV X0, X31
	0x03DCCE34 BL 0x3D46B48
	0x03DCCE38 ADRP X8, 0x399000
	0x03DCCE3C LDR X8, [X8 + 0x3A0]
	0x03DCCE40 MOV X1, X0
	0x03DCCE44 MOV X0, X20
	0x03DCCE48 LDR X2, [X8]
	0x03DCCE4C BL 0x2294F60
	0x03DCCE50 B 0x3DCCF48
	0x03DCCE54 ADRP X8, 0x398000
	0x03DCCE58 LDR X8, [X8 + 0x358]
	0x03DCCE5C LDR X20, [X0 + 0x10]
	0x03DCCE60 LDR X8, [X8]
	0x03DCCE64 LDR W9, [X8 + 0xE0]
	0x03DCCE68 CBNZ W9, 0x3DCCE74
	0x03DCCE6C MOV X0, X8
	0x03DCCE70 BL 0x1C16DFC
	0x03DCCE74 MOV X0, X31
	0x03DCCE78 BL 0x3D46BC0
	0x03DCCE7C ADRP X8, 0x399000
	0x03DCCE80 LDR X8, [X8 + 0x398]
	0x03DCCE84 MOV X1, X0
	0x03DCCE88 MOV X0, X20
	0x03DCCE8C LDR X2, [X8]
	0x03DCCE90 BL 0x2294EF4
	0x03DCCE94 B 0x3DCCF48
	0x03DCCE98 ADRP X8, 0x398000
	0x03DCCE9C LDR X8, [X8 + 0x358]
	0x03DCCEA0 LDR X20, [X0 + 0x18]
	0x03DCCEA4 LDR X8, [X8]
	0x03DCCEA8 LDR W9, [X8 + 0xE0]
	0x03DCCEAC CBNZ W9, 0x3DCCEB8
	0x03DCCEB0 MOV X0, X8
	0x03DCCEB4 BL 0x1C16DFC
	0x03DCCEB8 MOV X0, X31
	0x03DCCEBC BL 0x3D46C38
	0x03DCCEC0 ADRP X8, 0x399000
	0x03DCCEC4 LDR X8, [X8 + 0x390]
	0x03DCCEC8 MOV X1, X0
	0x03DCCECC MOV X0, X20
	0x03DCCED0 LDR X2, [X8]
	0x03DCCED4 BL 0x2294EA0
	0x03DCCED8 B 0x3DCCF48
	0x03DCCEDC LDR X9, [X9 + 0xC8]
	0x03DCCEE0 ADD X9, X9, X10, 0x3, LSL
	0x03DCCEE4 LDUR X9, [X9 - 0x8]
	0x03DCCEE8 CMP X9, X8
	0x03DCCEEC CSEL X8, X20, X31, EQ
	0x03DCCEF0 STR X8, [X0]
	0x03DCCEF4 B 0x3DCCF48
	0x03DCCEF8 LDR X9, [X9 + 0xC8]
	0x03DCCEFC ADD X9, X9, X10, 0x3, LSL
	0x03DCCF00 LDUR X9, [X9 - 0x8]
	0x03DCCF04 CMP X9, X8
	0x03DCCF08 CSEL X8, X20, X31, EQ
	0x03DCCF0C STR X8, [X0 + 0x8]
	0x03DCCF10 B 0x3DCCF48
	0x03DCCF14 LDR X9, [X9 + 0xC8]
	0x03DCCF18 ADD X9, X9, X10, 0x3, LSL
	0x03DCCF1C LDUR X9, [X9 - 0x8]
	0x03DCCF20 CMP X9, X8
	0x03DCCF24 CSEL X8, X20, X31, EQ
	0x03DCCF28 STR X8, [X0 + 0x10]
	0x03DCCF2C B 0x3DCCF48
	0x03DCCF30 LDR X9, [X9 + 0xC8]
	0x03DCCF34 ADD X9, X9, X10, 0x3, LSL
	0x03DCCF38 LDUR X9, [X9 - 0x8]
	0x03DCCF3C CMP X9, X8
	0x03DCCF40 CSEL X8, X20, X31, EQ
	0x03DCCF44 STR X8, [X0 + 0x18]
	0x03DCCF48 STR X31, [X19 + 0x50]
	0x03DCCF4C LDP X20, X19, [X31 + 0x20]
	0x03DCCF50 LDP X22, X21, [X31 + 0x10]
	0x03DCCF54 LDR X30, [X31], #0x30
	0x03DCCF58 RET
	0x03DCCF5C STR X30, [X31 - 0x30]!
	0x03DCCF60 STP X22, X21, [X31 + 0x10]
	0x03DCCF64 STP X20, X19, [X31 + 0x20]
	0x03DCCF68 ADRP X22, 0x61C000
	0x03DCCF6C ADRP X21, 0x399000
	0x03DCCF70 LDRB W8, [X22 + 0x1A8]
	0x03DCCF74 LDR X21, [X21 + 0x308]
	0x03DCCF78 MOV X19, X1
	0x03DCCF7C MOV X20, X0
	0x03DCCF80 TBNZ X8, 0x0, 0x3DCCF98
	0x03DCCF84 ADRP X0, 0x399000
	0x03DCCF88 LDR X0, [X0 + 0x308]
	0x03DCCF8C BL 0x1C16CF4
	0x03DCCF90 MOVZ W8, 0x1
	0x03DCCF94 STRB W8, [X22 + 0x1A8]
	0x03DCCF98 LDR X1, [X21]
	0x03DCCF9C ADD X0, X20, 0x10
	0x03DCCFA0 BL 0x266CDBC
	0x03DCCFA4 LDR V0, [X19]
	0x03DCCFA8 LDR X8, [X19 + 0x10]
	0x03DCCFAC LDP X20, X19, [X31 + 0x20]
	0x03DCCFB0 LDP X22, X21, [X31 + 0x10]
	0x03DCCFB4 STR V0, [X0]
	0x03DCCFB8 STR X8, [X0 + 0x10]
	0x03DCCFBC LDR X30, [X31], #0x30
	0x03DCCFC0 RET
	0x03DCCFC4 STR X30, [X31 - 0x30]!
	0x03DCCFC8 STP X22, X21, [X31 + 0x10]
	0x03DCCFCC STP X20, X19, [X31 + 0x20]
	0x03DCCFD0 ADRP X21, 0x61C000
	0x03DCCFD4 ADRP X22, 0x399000
	0x03DCCFD8 LDRB W8, [X21 + 0x1A9]
	0x03DCCFDC LDR X22, [X22 + 0x300]
	0x03DCCFE0 MOV X19, X1
	0x03DCCFE4 MOV X20, X0
	0x03DCCFE8 TBNZ X8, 0x0, 0x3DCD000
	0x03DCCFEC ADRP X0, 0x399000
	0x03DCCFF0 LDR X0, [X0 + 0x300]
	0x03DCCFF4 BL 0x1C16CF4
	0x03DCCFF8 MOVZ W8, 0x1
	0x03DCCFFC STRB W8, [X21 + 0x1A9]
	0x03DCD000 LDR X1, [X22]
	0x03DCD004 MOV X0, X20
	0x03DCD008 BL 0x266C4BC
	0x03DCD00C LDR V0, [X19]
	0x03DCD010 LDR X8, [X19 + 0x10]
	0x03DCD014 LDR W9, [X19 + 0x18]
	0x03DCD018 LDP X20, X19, [X31 + 0x20]
	0x03DCD01C LDP X22, X21, [X31 + 0x10]
	0x03DCD020 STR V0, [X0 + 0x2]
	0x03DCD024 STR X8, [X0 + 0x30]
	0x03DCD028 STR W9, [X0 + 0x38]
	0x03DCD02C LDR X30, [X31], #0x30
	0x03DCD030 RET
	0x03DCD034 STR X30, [X31 - 0x30]!
	0x03DCD038 STP X22, X21, [X31 + 0x10]
	0x03DCD03C STP X20, X19, [X31 + 0x20]
	0x03DCD040 ADRP X22, 0x61B000
	0x03DCD044 LDRB W8, [X22 + 0x1AA]
	0x03DCD048 MOV X19, X2
	0x03DCD04C MOV W21, W1
	0x03DCD050 MOV X20, X0
	0x03DCD054 TBNZ X8, 0x0, 0x3DCD138
	0x03DCD058 ADRP X0, 0x326000
	0x03DCD05C LDR X0, [X0 + 0xA28]
	0x03DCD060 BL 0x1C16CF4
	0x03DCD064 ADRP X0, 0x398000
	0x03DCD068 LDR X0, [X0 + 0x380]
	0x03DCD06C BL 0x1C16CF4
	0x03DCD070 ADRP X0, 0x398000
	0x03DCD074 LDR X0, [X0 + 0x360]
	0x03DCD078 BL 0x1C16CF4
	0x03DCD07C ADRP X0, 0x398000
	0x03DCD080 LDR X0, [X0 + 0x378]
	0x03DCD084 BL 0x1C16CF4
	0x03DCD088 ADRP X0, 0x398000
	0x03DCD08C LDR X0, [X0 + 0x358]
	0x03DCD090 BL 0x1C16CF4
	0x03DCD094 ADRP X0, 0x398000
	0x03DCD098 LDR X0, [X0 + 0x370]
	0x03DCD09C BL 0x1C16CF4
	0x03DCD0A0 ADRP X0, 0x398000
	0x03DCD0A4 LDR X0, [X0 + 0x368]
	0x03DCD0A8 BL 0x1C16CF4
	0x03DCD0AC ADRP X0, 0x398000
	0x03DCD0B0 LDR X0, [X0 + 0x308]
	0x03DCD0B4 BL 0x1C16CF4
	0x03DCD0B8 ADRP X0, 0x398000
	0x03DCD0BC LDR X0, [X0 + 0x300]
	0x03DCD0C0 BL 0x1C16CF4
	0x03DCD0C4 ADRP X0, 0x398000
	0x03DCD0C8 LDR X0, [X0 + 0x318]
	0x03DCD0CC BL 0x1C16CF4
	0x03DCD0D0 ADRP X0, 0x398000
	0x03DCD0D4 LDR X0, [X0 + 0x310]
	0x03DCD0D8 BL 0x1C16CF4
	0x03DCD0DC ADRP X0, 0x398000
	0x03DCD0E0 LDR X0, [X0 + 0x2F8]
	0x03DCD0E4 BL 0x1C16CF4
	0x03DCD0E8 ADRP X0, 0x398000
	0x03DCD0EC LDR X0, [X0 + 0x2F0]
	0x03DCD0F0 BL 0x1C16CF4
	0x03DCD0F4 ADRP X0, 0x399000
	0x03DCD0F8 LDR X0, [X0 + 0x4A8]
	0x03DCD0FC BL 0x1C16CF4
	0x03DCD100 ADRP X0, 0x398000
	0x03DCD104 LDR X0, [X0 + 0x390]
	0x03DCD108 BL 0x1C16CF4
	0x03DCD10C ADRP X0, 0x398000
	0x03DCD110 LDR X0, [X0 + 0x398]
	0x03DCD114 BL 0x1C16CF4
	0x03DCD118 ADRP X0, 0x398000
	0x03DCD11C LDR X0, [X0 + 0x3A0]
	0x03DCD120 BL 0x1C16CF4
	0x03DCD124 ADRP X0, 0x39C000
	0x03DCD128 LDR X0, [X0 + 0x260]
	0x03DCD12C BL 0x1C16CF4
	0x03DCD130 MOVZ W8, 0x1
	0x03DCD134 STRB W8, [X22 + 0x1AA]
	0x03DCD138 MOVZ W8, 0x9
	0x03DCD13C MOVK W8, 0x30000
	0x03DCD140 CMP W21, W8
	0x03DCD144 B.LE 0x3DCD19C
	0x03DCD148 SUB W8, W21, 0x70000
	0x03DCD14C CMP W8, 0xF
	0x03DCD150 B.HI 0x3DCD254
	0x03DCD154 ADRP X9, 0xFFFFFFFFFCDCB000
	0x03DCD158 ADD X9, X9, 0x2E0
	0x03DCD15C ADR X10, 0x10
	0x03DCD160 LDRH W11, [X9, X8, LSL #1]
	0x03DCD164 ADD X10, X10, X11, 0x2, LSL
	0x03DCD168 BR X10
	0x03DCD16C ADRP X8, 0x398000
	0x03DCD170 LDR X8, [X8 + 0x2F8]
	0x03DCD174 ADD X0, X20, 0x28
	0x03DCD178 LDR X1, [X8]
	0x03DCD17C BL 0x266DB34
	0x03DCD180 ADRP X8, 0x398000
	0x03DCD184 LDR X8, [X8 + 0x360]
	0x03DCD188 MOV X20, X0
	0x03DCD18C ADD X0, X19, 0x28
	0x03DCD190 LDR X1, [X8]
	0x03DCD194 BL 0x266DB18
	0x03DCD198 B 0x3DCD248
	0x03DCD19C SUB W8, W21, 0x20000
	0x03DCD1A0 CMP W8, 0x20
	0x03DCD1A4 B.HI 0x3DCD1F8
	0x03DCD1A8 ADRP X9, 0xFFFFFFFFFCDCB000
	0x03DCD1AC ADD X9, X9, 0x27A
	0x03DCD1B0 ADR X10, 0x10
	0x03DCD1B4 LDRH W11, [X9, X8, LSL #1]
	0x03DCD1B8 ADD X10, X10, X11, 0x2, LSL
	0x03DCD1BC BR X10
	0x03DCD1C0 ADRP X8, 0x398000
	0x03DCD1C4 LDR X8, [X8 + 0x2F0]
	0x03DCD1C8 ADD X0, X20, 0x8
	0x03DCD1CC LDR X1, [X8]
	0x03DCD1D0 BL 0x266C93C
	0x03DCD1D4 ADRP X8, 0x398000
	0x03DCD1D8 LDR X8, [X8 + 0x358]
	0x03DCD1DC MOV X20, X0
	0x03DCD1E0 ADD X0, X19, 0x8
	0x03DCD1E4 LDR X1, [X8]
	0x03DCD1E8 BL 0x266C920
	0x03DCD1EC LDR W8, [X0]
	0x03DCD1F0 STR W8, [X20]
	0x03DCD1F4 B 0x3DCE454
	0x03DCD1F8 SUB W8, W21, 0x10000
	0x03DCD1FC CMP W8, 0xD
	0x03DCD200 B.HI 0x3DCD2B8
	0x03DCD204 ADRP X9, 0xFFFFFFFFFCDCB000
	0x03DCD208 ADD X9, X9, 0x25E
	0x03DCD20C ADR X10, 0x10
	0x03DCD210 LDRH W11, [X9, X8, LSL #1]
	0x03DCD214 ADD X10, X10, X11, 0x2, LSL
	0x03DCD218 BR X10
	0x03DCD21C ADRP X8, 0x398000
	0x03DCD220 LDR X8, [X8 + 0x300]
	0x03DCD224 MOV X0, X20
	0x03DCD228 LDR X1, [X8]
	0x03DCD22C BL 0x266C4BC
	0x03DCD230 ADRP X8, 0x398000
	0x03DCD234 LDR X8, [X8 + 0x368]
	0x03DCD238 MOV X20, X0
	0x03DCD23C MOV X0, X19
	0x03DCD240 LDR X1, [X8]
	0x03DCD244 BL 0x266C4A0
	0x03DCD248 LDR V0, [X0]
	0x03DCD24C STR V0, [X20]
	0x03DCD250 B 0x3DCE454
	0x03DCD254 SUB W8, W21, 0x50000
	0x03DCD258 CMP W8, 0x3
	0x03DCD25C B.LS 0x3DCD30C
	0x03DCD260 SUB W8, W21, 0x60000
	0x03DCD264 CMP W8, 0x3
	0x03DCD268 B.HI 0x3DCD360
	0x03DCD26C ADRP X9, 0xFFFFFFFFFCDCB000
	0x03DCD270 ADD X9, X9, 0x2D8
	0x03DCD274 ADR X10, 0x10
	0x03DCD278 LDRH W11, [X9, X8, LSL #1]
	0x03DCD27C ADD X10, X10, X11, 0x2, LSL
	0x03DCD280 BR X10
	0x03DCD284 ADRP X8, 0x398000
	0x03DCD288 LDR X8, [X8 + 0x318]
	0x03DCD28C ADD X0, X20, 0x20
	0x03DCD290 LDR X1, [X8]
	0x03DCD294 BL 0x266D6BC
	0x03DCD298 ADRP X8, 0x398000
	0x03DCD29C LDR X21, [X0]
	0x03DCD2A0 LDR X8, [X8 + 0x380]
	0x03DCD2A4 ADD X0, X19, 0x20
	0x03DCD2A8 LDR X1, [X8]
	0x03DCD2AC BL 0x266D6A0
	0x03DCD2B0 LDR X1, [X0]
	0x03DCD2B4 B 0x3DCD73C
	0x03DCD2B8 SUB W8, W21, 0x30000
	0x03DCD2BC CMP W8, 0x9
	0x03DCD2C0 B.HI 0x3DCD360
	0x03DCD2C4 ADRP X9, 0xFFFFFFFFFCDCB000
	0x03DCD2C8 ADD X9, X9, 0x2BC
	0x03DCD2CC ADR X10, 0x10
	0x03DCD2D0 LDRH W11, [X9, X8, LSL #1]
	0x03DCD2D4 ADD X10, X10, X11, 0x2, LSL
	0x03DCD2D8 BR X10
	0x03DCD2DC ADRP X8, 0x398000
	0x03DCD2E0 LDR X8, [X8 + 0x308]
	0x03DCD2E4 ADD X0, X20, 0x10
	0x03DCD2E8 LDR X1, [X8]
	0x03DCD2EC BL 0x266CDBC
	0x03DCD2F0 ADRP X8, 0x398000
	0x03DCD2F4 LDR X8, [X8 + 0x370]
	0x03DCD2F8 MOV X20, X0
	0x03DCD2FC ADD X0, X19, 0x10
	0x03DCD300 LDR X1, [X8]
	0x03DCD304 BL 0x266CDA0
	0x03DCD308 B 0x3DCD350
	0x03DCD30C ADRP X9, 0xFFFFFFFFFCDCB000
	0x03DCD310 ADD X9, X9, 0x2D0
	0x03DCD314 ADR X10, 0x10
	0x03DCD318 LDRH W11, [X9, X8, LSL #1]
	0x03DCD31C ADD X10, X10, X11, 0x2, LSL
	0x03DCD320 BR X10
	0x03DCD324 ADRP X8, 0x398000
	0x03DCD328 LDR X8, [X8 + 0x310]
	0x03DCD32C ADD X0, X20, 0x18
	0x03DCD330 LDR X1, [X8]
	0x03DCD334 BL 0x266D23C
	0x03DCD338 ADRP X8, 0x398000
	0x03DCD33C LDR X8, [X8 + 0x378]
	0x03DCD340 MOV X20, X0
	0x03DCD344 ADD X0, X19, 0x18
	0x03DCD348 LDR X1, [X8]
	0x03DCD34C BL 0x266D220
	0x03DCD350 LDR V0, [X0]
	0x03DCD354 LDR X8, [X0 + 0x10]
	0x03DCD358 STR V0, [X20]
	0x03DCD35C B 0x3DCDFA8
	0x03DCD360 ADRP X8, 0x399000
	0x03DCD364 LDR X8, [X8 + 0x4A8]
	0x03DCD368 ADD X1, X31, 0xC
	0x03DCD36C STR W21, [X31 + 0xC]
	0x03DCD370 LDR X0, [X8]
	0x03DCD374 BL 0x1C16E04
	0x03DCD378 ADRP X8, 0x39C000
	0x03DCD37C LDR X8, [X8 + 0x260]
	0x03DCD380 MOV X1, X0
	0x03DCD384 MOV X2, X31
	0x03DCD388 LDR X8, [X8]
	0x03DCD38C MOV X0, X8
	0x03DCD390 BL 0x321EFD0
	0x03DCD394 ADRP X8, 0x326000
	0x03DCD398 LDR X8, [X8 + 0xA28]
	0x03DCD39C MOV X19, X0
	0x03DCD3A0 LDR X8, [X8]
	0x03DCD3A4 LDR W9, [X8 + 0xE0]
	0x03DCD3A8 CBNZ W9, 0x3DCD3B4
	0x03DCD3AC MOV X0, X8
	0x03DCD3B0 BL 0x1C16DFC
	0x03DCD3B4 MOV X0, X19
	0x03DCD3B8 MOV X1, X31
	0x03DCD3BC BL 0x3C070A4
	0x03DCD3C0 B 0x3DCE454
	0x03DCD3C4 ADRP X8, 0x398000
	0x03DCD3C8 LDR X8, [X8 + 0x2F8]
	0x03DCD3CC ADD X0, X20, 0x28
	0x03DCD3D0 LDR X1, [X8]
	0x03DCD3D4 BL 0x266DB34
	0x03DCD3D8 ADRP X8, 0x398000
	0x03DCD3DC LDR X8, [X8 + 0x360]
	0x03DCD3E0 MOV X20, X0
	0x03DCD3E4 ADD X0, X19, 0x28
	0x03DCD3E8 LDR X1, [X8]
	0x03DCD3EC BL 0x266DB18
	0x03DCD3F0 LDP V0, V1, [X0 + 0x10]
	0x03DCD3F4 STP V0, V1, [X20 + 0x10]
	0x03DCD3F8 B 0x3DCE454
	0x03DCD3FC ADRP X8, 0x398000
	0x03DCD400 LDR X8, [X8 + 0x2F8]
	0x03DCD404 ADD X0, X20, 0x28
	0x03DCD408 LDR X1, [X8]
	0x03DCD40C BL 0x266DB34
	0x03DCD410 ADRP X8, 0x398000
	0x03DCD414 LDR X8, [X8 + 0x360]
	0x03DCD418 MOV X20, X0
	0x03DCD41C ADD X0, X19, 0x28
	0x03DCD420 LDR X1, [X8]
	0x03DCD424 BL 0x266DB18
	0x03DCD428 LDR X8, [X0 + 0x30]
	0x03DCD42C LDR W9, [X0 + 0x38]
	0x03DCD430 B 0x3DCE024
	0x03DCD434 ADRP X8, 0x398000
	0x03DCD438 LDR X8, [X8 + 0x2F8]
	0x03DCD43C ADD X0, X20, 0x28
	0x03DCD440 LDR X1, [X8]
	0x03DCD444 BL 0x266DB34
	0x03DCD448 ADRP X8, 0x398000
	0x03DCD44C LDR X8, [X8 + 0x360]
	0x03DCD450 MOV X20, X0
	0x03DCD454 ADD X0, X19, 0x28
	0x03DCD458 LDR X1, [X8]
	0x03DCD45C BL 0x266DB18
	0x03DCD460 LDUR X8, [X0 + 0x3C]
	0x03DCD464 LDR W9, [X0 + 0x44]
	0x03DCD468 STUR X8, [X20 + 0x3C]
	0x03DCD46C STR W9, [X20 + 0x44]
	0x03DCD470 B 0x3DCE454
	0x03DCD474 ADRP X8, 0x398000
	0x03DCD478 LDR X8, [X8 + 0x2F8]
	0x03DCD47C ADD X0, X20, 0x28
	0x03DCD480 LDR X1, [X8]
	0x03DCD484 BL 0x266DB34
	0x03DCD488 ADRP X8, 0x398000
	0x03DCD48C LDR X8, [X8 + 0x360]
	0x03DCD490 MOV X20, X0
	0x03DCD494 ADD X0, X19, 0x28
	0x03DCD498 LDR X1, [X8]
	0x03DCD49C BL 0x266DB18
	0x03DCD4A0 LDR X8, [X0 + 0x48]
	0x03DCD4A4 STR X8, [X20 + 0x48]
	0x03DCD4A8 B 0x3DCE454
	0x03DCD4AC ADRP X8, 0x398000
	0x03DCD4B0 LDR X8, [X8 + 0x2F8]
	0x03DCD4B4 ADD X0, X20, 0x28
	0x03DCD4B8 LDR X1, [X8]
	0x03DCD4BC BL 0x266DB34
	0x03DCD4C0 ADRP X8, 0x398000
	0x03DCD4C4 LDR X8, [X8 + 0x360]
	0x03DCD4C8 MOV X20, X0
	0x03DCD4CC ADD X0, X19, 0x28
	0x03DCD4D0 LDR X1, [X8]
	0x03DCD4D4 BL 0x266DB18
	0x03DCD4D8 LDR V0, [X0 + 0x5]
	0x03DCD4DC LDR W8, [X0 + 0x60]
	0x03DCD4E0 STR V0, [X20 + 0x5]
	0x03DCD4E4 STR W8, [X20 + 0x60]
	0x03DCD4E8 B 0x3DCE454
	0x03DCD4EC ADRP X8, 0x398000
	0x03DCD4F0 LDR X8, [X8 + 0x2F8]
	0x03DCD4F4 ADD X0, X20, 0x28
	0x03DCD4F8 LDR X1, [X8]
	0x03DCD4FC BL 0x266DB34
	0x03DCD500 ADRP X8, 0x398000
	0x03DCD504 LDR X8, [X8 + 0x360]
	0x03DCD508 MOV X20, X0
	0x03DCD50C ADD X0, X19, 0x28
	0x03DCD510 LDR X1, [X8]
	0x03DCD514 BL 0x266DB18
	0x03DCD518 LDUR V0, [X0 + 0x64]
	0x03DCD51C STUR V0, [X20 + 0x64]
	0x03DCD520 B 0x3DCE454
	0x03DCD524 ADRP X8, 0x398000
	0x03DCD528 LDR X8, [X8 + 0x2F8]
	0x03DCD52C ADD X0, X20, 0x28
	0x03DCD530 LDR X1, [X8]
	0x03DCD534 BL 0x266DB34
	0x03DCD538 ADRP X8, 0x398000
	0x03DCD53C LDR X8, [X8 + 0x360]
	0x03DCD540 MOV X20, X0
	0x03DCD544 ADD X0, X19, 0x28
	0x03DCD548 LDR X1, [X8]
	0x03DCD54C BL 0x266DB18
	0x03DCD550 B 0x3DCDD0C
	0x03DCD554 ADRP X8, 0x398000
	0x03DCD558 LDR X8, [X8 + 0x2F8]
	0x03DCD55C ADD X0, X20, 0x28
	0x03DCD560 LDR X1, [X8]
	0x03DCD564 BL 0x266DB34
	0x03DCD568 ADRP X8, 0x398000
	0x03DCD56C LDR X8, [X8 + 0x360]
	0x03DCD570 MOV X20, X0
	0x03DCD574 ADD X0, X19, 0x28
	0x03DCD578 LDR X1, [X8]
	0x03DCD57C BL 0x266DB18
	0x03DCD580 B 0x3DCDD44
	0x03DCD584 ADRP X8, 0x398000
	0x03DCD588 LDR X8, [X8 + 0x2F8]
	0x03DCD58C ADD X0, X20, 0x28
	0x03DCD590 LDR X1, [X8]
	0x03DCD594 BL 0x266DB34
	0x03DCD598 ADRP X8, 0x398000
	0x03DCD59C LDR X8, [X8 + 0x360]
	0x03DCD5A0 MOV X20, X0
	0x03DCD5A4 ADD X0, X19, 0x28
	0x03DCD5A8 LDR X1, [X8]
	0x03DCD5AC BL 0x266DB18
	0x03DCD5B0 LDUR V0, [X0 + 0x84]
	0x03DCD5B4 STUR V0, [X20 + 0x84]
	0x03DCD5B8 B 0x3DCE454
	0x03DCD5BC ADRP X8, 0x398000
	0x03DCD5C0 LDR X8, [X8 + 0x2F8]
	0x03DCD5C4 ADD X0, X20, 0x28
	0x03DCD5C8 LDR X1, [X8]
	0x03DCD5CC BL 0x266DB34
	0x03DCD5D0 ADRP X8, 0x398000
	0x03DCD5D4 LDR X8, [X8 + 0x360]
	0x03DCD5D8 MOV X20, X0
	0x03DCD5DC ADD X0, X19, 0x28
	0x03DCD5E0 LDR X1, [X8]
	0x03DCD5E4 BL 0x266DB18
	0x03DCD5E8 LDUR V0, [X0 + 0x94]
	0x03DCD5EC STUR V0, [X20 + 0x94]
	0x03DCD5F0 B 0x3DCE454
	0x03DCD5F4 ADRP X8, 0x398000
	0x03DCD5F8 LDR X8, [X8 + 0x2F8]
	0x03DCD5FC ADD X0, X20, 0x28
	0x03DCD600 LDR X1, [X8]
	0x03DCD604 BL 0x266DB34
	0x03DCD608 ADRP X8, 0x398000
	0x03DCD60C LDR X8, [X8 + 0x360]
	0x03DCD610 MOV X20, X0
	0x03DCD614 ADD X0, X19, 0x28
	0x03DCD618 LDR X1, [X8]
	0x03DCD61C BL 0x266DB18
	0x03DCD620 LDUR V0, [X0 + 0xA4]
	0x03DCD624 STUR V0, [X20 + 0xA4]
	0x03DCD628 B 0x3DCE454
	0x03DCD62C ADRP X8, 0x398000
	0x03DCD630 LDR X8, [X8 + 0x2F8]
	0x03DCD634 ADD X0, X20, 0x28
	0x03DCD638 LDR X1, [X8]
	0x03DCD63C BL 0x266DB34
	0x03DCD640 ADRP X8, 0x398000
	0x03DCD644 LDR X8, [X8 + 0x360]
	0x03DCD648 MOV X20, X0
	0x03DCD64C ADD X0, X19, 0x28
	0x03DCD650 LDR X1, [X8]
	0x03DCD654 BL 0x266DB18
	0x03DCD658 LDUR X8, [X0 + 0xB4]
	0x03DCD65C STUR X8, [X20 + 0xB4]
	0x03DCD660 B 0x3DCE454
	0x03DCD664 ADRP X8, 0x398000
	0x03DCD668 LDR X8, [X8 + 0x2F8]
	0x03DCD66C ADD X0, X20, 0x28
	0x03DCD670 LDR X1, [X8]
	0x03DCD674 BL 0x266DB34
	0x03DCD678 ADRP X8, 0x398000
	0x03DCD67C LDR X8, [X8 + 0x360]
	0x03DCD680 MOV X20, X0
	0x03DCD684 ADD X0, X19, 0x28
	0x03DCD688 LDR X1, [X8]
	0x03DCD68C BL 0x266DB18
	0x03DCD690 LDUR X8, [X0 + 0xBC]
	0x03DCD694 STUR X8, [X20 + 0xBC]
	0x03DCD698 B 0x3DCE454
	0x03DCD69C ADRP X8, 0x398000
	0x03DCD6A0 LDR X8, [X8 + 0x2F8]
	0x03DCD6A4 ADD X0, X20, 0x28
	0x03DCD6A8 LDR X1, [X8]
	0x03DCD6AC BL 0x266DB34
	0x03DCD6B0 ADRP X8, 0x398000
	0x03DCD6B4 LDR X8, [X8 + 0x360]
	0x03DCD6B8 MOV X20, X0
	0x03DCD6BC ADD X0, X19, 0x28
	0x03DCD6C0 LDR X1, [X8]
	0x03DCD6C4 BL 0x266DB18
	0x03DCD6C8 LDR V0, [X0 + 0xC4]
	0x03DCD6CC STR S0, [X20 + 0xC4]
	0x03DCD6D0 B 0x3DCE454
	0x03DCD6D4 ADRP X8, 0x398000
	0x03DCD6D8 LDR X8, [X8 + 0x2F8]
	0x03DCD6DC ADD X0, X20, 0x28
	0x03DCD6E0 LDR X1, [X8]
	0x03DCD6E4 BL 0x266DB34
	0x03DCD6E8 ADRP X8, 0x398000
	0x03DCD6EC LDR X8, [X8 + 0x360]
	0x03DCD6F0 MOV X20, X0
	0x03DCD6F4 ADD X0, X19, 0x28
	0x03DCD6F8 LDR X1, [X8]
	0x03DCD6FC BL 0x266DB18
	0x03DCD700 LDR W8, [X0 + 0xC8]
	0x03DCD704 STR W8, [X20 + 0xC8]
	0x03DCD708 B 0x3DCE454
	0x03DCD70C ADRP X8, 0x398000
	0x03DCD710 LDR X8, [X8 + 0x318]
	0x03DCD714 ADD X0, X20, 0x20
	0x03DCD718 LDR X1, [X8]
	0x03DCD71C BL 0x266D6BC
	0x03DCD720 ADRP X8, 0x398000
	0x03DCD724 LDR X21, [X0 + 0x8]
	0x03DCD728 LDR X8, [X8 + 0x380]
	0x03DCD72C ADD X0, X19, 0x20
	0x03DCD730 LDR X1, [X8]
	0x03DCD734 BL 0x266D6A0
	0x03DCD738 LDR X1, [X0 + 0x8]
	0x03DCD73C ADRP X8, 0x398000
	0x03DCD740 LDR X8, [X8 + 0x3A0]
	0x03DCD744 MOV X0, X21
	0x03DCD748 LDR X2, [X8]
	0x03DCD74C BL 0x2294F60
	0x03DCD750 B 0x3DCD7E0
	0x03DCD754 ADRP X8, 0x398000
	0x03DCD758 LDR X8, [X8 + 0x318]
	0x03DCD75C ADD X0, X20, 0x20
	0x03DCD760 LDR X1, [X8]
	0x03DCD764 BL 0x266D6BC
	0x03DCD768 ADRP X8, 0x398000
	0x03DCD76C LDR X21, [X0 + 0x10]
	0x03DCD770 LDR X8, [X8 + 0x380]
	0x03DCD774 ADD X0, X19, 0x20
	0x03DCD778 LDR X1, [X8]
	0x03DCD77C BL 0x266D6A0
	0x03DCD780 ADRP X8, 0x398000
	0x03DCD784 LDR X1, [X0 + 0x10]
	0x03DCD788 LDR X8, [X8 + 0x398]
	0x03DCD78C MOV X0, X21
	0x03DCD790 LDR X2, [X8]
	0x03DCD794 BL 0x2294EF4
	0x03DCD798 B 0x3DCD7E0
	0x03DCD79C ADRP X8, 0x398000
	0x03DCD7A0 LDR X8, [X8 + 0x318]
	0x03DCD7A4 ADD X0, X20, 0x20
	0x03DCD7A8 LDR X1, [X8]
	0x03DCD7AC BL 0x266D6BC
	0x03DCD7B0 ADRP X8, 0x398000
	0x03DCD7B4 LDR X21, [X0 + 0x18]
	0x03DCD7B8 LDR X8, [X8 + 0x380]
	0x03DCD7BC ADD X0, X19, 0x20
	0x03DCD7C0 LDR X1, [X8]
	0x03DCD7C4 BL 0x266D6A0
	0x03DCD7C8 ADRP X8, 0x398000
	0x03DCD7CC LDR X1, [X0 + 0x18]
	0x03DCD7D0 LDR X8, [X8 + 0x390]
	0x03DCD7D4 MOV X0, X21
	0x03DCD7D8 LDR X2, [X8]
	0x03DCD7DC BL 0x2294EA0
	0x03DCD7E0 STR X31, [X20 + 0x50]
	0x03DCD7E4 B 0x3DCE454
	0x03DCD7E8 ADRP X8, 0x398000
	0x03DCD7EC LDR X8, [X8 + 0x310]
	0x03DCD7F0 ADD X0, X20, 0x18
	0x03DCD7F4 LDR X1, [X8]
	0x03DCD7F8 BL 0x266D23C
	0x03DCD7FC ADRP X8, 0x398000
	0x03DCD800 LDR X8, [X8 + 0x378]
	0x03DCD804 MOV X20, X0
	0x03DCD808 ADD X0, X19, 0x18
	0x03DCD80C LDR X1, [X8]
	0x03DCD810 BL 0x266D220
	0x03DCD814 LDUR V0, [X0 + 0x18]
	0x03DCD818 STUR V0, [X20 + 0x18]
	0x03DCD81C B 0x3DCE454
	0x03DCD820 ADRP X8, 0x398000
	0x03DCD824 LDR X8, [X8 + 0x310]
	0x03DCD828 ADD X0, X20, 0x18
	0x03DCD82C LDR X1, [X8]
	0x03DCD830 BL 0x266D23C
	0x03DCD834 ADRP X8, 0x398000
	0x03DCD838 LDR X8, [X8 + 0x378]
	0x03DCD83C MOV X20, X0
	0x03DCD840 ADD X0, X19, 0x18
	0x03DCD844 LDR X1, [X8]
	0x03DCD848 BL 0x266D220
	0x03DCD84C LDUR V0, [X0 + 0x28]
	0x03DCD850 LDR W8, [X0 + 0x38]
	0x03DCD854 STUR V0, [X20 + 0x28]
	0x03DCD858 B 0x3DCE3A8
	0x03DCD85C ADRP X8, 0x398000
	0x03DCD860 LDR X8, [X8 + 0x310]
	0x03DCD864 ADD X0, X20, 0x18
	0x03DCD868 LDR X1, [X8]
	0x03DCD86C BL 0x266D23C
	0x03DCD870 ADRP X8, 0x398000
	0x03DCD874 LDR X8, [X8 + 0x378]
	0x03DCD878 MOV X20, X0
	0x03DCD87C ADD X0, X19, 0x18
	0x03DCD880 LDR X1, [X8]
	0x03DCD884 BL 0x266D220
	0x03DCD888 LDUR V0, [X0 + 0x3C]
	0x03DCD88C LDUR X8, [X0 + 0x4C]
	0x03DCD890 STUR V0, [X20 + 0x3C]
	0x03DCD894 B 0x3DCDC00
	0x03DCD898 ADRP X8, 0x398000
	0x03DCD89C LDR X8, [X8 + 0x2F0]
	0x03DCD8A0 ADD X0, X20, 0x8
	0x03DCD8A4 LDR X1, [X8]
	0x03DCD8A8 BL 0x266C93C
	0x03DCD8AC ADRP X8, 0x398000
	0x03DCD8B0 LDR X8, [X8 + 0x358]
	0x03DCD8B4 MOV X20, X0
	0x03DCD8B8 ADD X0, X19, 0x8
	0x03DCD8BC LDR X1, [X8]
	0x03DCD8C0 BL 0x266C920
	0x03DCD8C4 LDR W8, [X0 + 0x4]
	0x03DCD8C8 STR W8, [X20 + 0x4]
	0x03DCD8CC B 0x3DCE454
	0x03DCD8D0 ADRP X8, 0x398000
	0x03DCD8D4 LDR X8, [X8 + 0x2F0]
	0x03DCD8D8 ADD X0, X20, 0x8
	0x03DCD8DC LDR X1, [X8]
	0x03DCD8E0 BL 0x266C93C
	0x03DCD8E4 ADRP X8, 0x398000
	0x03DCD8E8 LDR X8, [X8 + 0x358]
	0x03DCD8EC MOV X20, X0
	0x03DCD8F0 ADD X0, X19, 0x8
	0x03DCD8F4 LDR X1, [X8]
	0x03DCD8F8 BL 0x266C920
	0x03DCD8FC LDR W8, [X0 + 0x8]
	0x03DCD900 STR W8, [X20 + 0x8]
	0x03DCD904 B 0x3DCE454
	0x03DCD908 ADRP X8, 0x398000
	0x03DCD90C LDR X8, [X8 + 0x2F0]
	0x03DCD910 ADD X0, X20, 0x8
	0x03DCD914 LDR X1, [X8]
	0x03DCD918 BL 0x266C93C
	0x03DCD91C ADRP X8, 0x398000
	0x03DCD920 LDR X8, [X8 + 0x358]
	0x03DCD924 MOV X20, X0
	0x03DCD928 ADD X0, X19, 0x8
	0x03DCD92C LDR X1, [X8]
	0x03DCD930 BL 0x266C920
	0x03DCD934 LDR V0, [X0 + 0xC]
	0x03DCD938 STR S0, [X20 + 0xC]
	0x03DCD93C B 0x3DCE454
	0x03DCD940 ADRP X8, 0x398000
	0x03DCD944 LDR X8, [X8 + 0x2F0]
	0x03DCD948 ADD X0, X20, 0x8
	0x03DCD94C LDR X1, [X8]
	0x03DCD950 BL 0x266C93C
	0x03DCD954 ADRP X8, 0x398000
	0x03DCD958 LDR X8, [X8 + 0x358]
	0x03DCD95C MOV X20, X0
	0x03DCD960 ADD X0, X19, 0x8
	0x03DCD964 LDR X1, [X8]
	0x03DCD968 BL 0x266C920
	0x03DCD96C LDR V0, [X0 + 0x10]
	0x03DCD970 STR S0, [X20 + 0x10]
	0x03DCD974 B 0x3DCE454
	0x03DCD978 ADRP X8, 0x398000
	0x03DCD97C LDR X8, [X8 + 0x2F0]
	0x03DCD980 ADD X0, X20, 0x8
	0x03DCD984 LDR X1, [X8]
	0x03DCD988 BL 0x266C93C
	0x03DCD98C ADRP X8, 0x398000
	0x03DCD990 LDR X8, [X8 + 0x358]
	0x03DCD994 MOV X20, X0
	0x03DCD998 ADD X0, X19, 0x8
	0x03DCD99C LDR X1, [X8]
	0x03DCD9A0 BL 0x266C920
	0x03DCD9A4 LDR V0, [X0 + 0x14]
	0x03DCD9A8 STR S0, [X20 + 0x14]
	0x03DCD9AC B 0x3DCE454
	0x03DCD9B0 ADRP X8, 0x398000
	0x03DCD9B4 LDR X8, [X8 + 0x2F0]
	0x03DCD9B8 ADD X0, X20, 0x8
	0x03DCD9BC LDR X1, [X8]
	0x03DCD9C0 BL 0x266C93C
	0x03DCD9C4 ADRP X8, 0x398000
	0x03DCD9C8 LDR X8, [X8 + 0x358]
	0x03DCD9CC MOV X20, X0
	0x03DCD9D0 ADD X0, X19, 0x8
	0x03DCD9D4 LDR X1, [X8]
	0x03DCD9D8 BL 0x266C920
	0x03DCD9DC LDR V0, [X0 + 0x18]
	0x03DCD9E0 STR S0, [X20 + 0x18]
	0x03DCD9E4 B 0x3DCE454
	0x03DCD9E8 ADRP X8, 0x398000
	0x03DCD9EC LDR X8, [X8 + 0x2F0]
	0x03DCD9F0 ADD X0, X20, 0x8
	0x03DCD9F4 LDR X1, [X8]
	0x03DCD9F8 BL 0x266C93C
	0x03DCD9FC ADRP X8, 0x398000
	0x03DCDA00 LDR X8, [X8 + 0x358]
	0x03DCDA04 MOV X20, X0
	0x03DCDA08 ADD X0, X19, 0x8
	0x03DCDA0C LDR X1, [X8]
	0x03DCDA10 BL 0x266C920
	0x03DCDA14 LDUR X8, [X0 + 0x1C]
	0x03DCDA18 STUR X8, [X20 + 0x1C]
	0x03DCDA1C B 0x3DCE454
	0x03DCDA20 ADRP X8, 0x398000
	0x03DCDA24 LDR X8, [X8 + 0x2F0]
	0x03DCDA28 ADD X0, X20, 0x8
	0x03DCDA2C LDR X1, [X8]
	0x03DCDA30 BL 0x266C93C
	0x03DCDA34 ADRP X8, 0x398000
	0x03DCDA38 LDR X8, [X8 + 0x358]
	0x03DCDA3C MOV X20, X0
	0x03DCDA40 ADD X0, X19, 0x8
	0x03DCDA44 LDR X1, [X8]
	0x03DCDA48 BL 0x266C920
	0x03DCDA4C LDR W8, [X0 + 0x24]
	0x03DCDA50 STR W8, [X20 + 0x24]
	0x03DCDA54 B 0x3DCE454
	0x03DCDA58 ADRP X8, 0x398000
	0x03DCDA5C LDR X8, [X8 + 0x2F0]
	0x03DCDA60 ADD X0, X20, 0x8
	0x03DCDA64 LDR X1, [X8]
	0x03DCDA68 BL 0x266C93C
	0x03DCDA6C ADRP X8, 0x398000
	0x03DCDA70 LDR X8, [X8 + 0x358]
	0x03DCDA74 MOV X20, X0
	0x03DCDA78 ADD X0, X19, 0x8
	0x03DCDA7C LDR X1, [X8]
	0x03DCDA80 BL 0x266C920
	0x03DCDA84 LDR X8, [X0 + 0x28]
	0x03DCDA88 STR X8, [X20 + 0x28]
	0x03DCDA8C B 0x3DCE454
	0x03DCDA90 ADRP X8, 0x398000
	0x03DCDA94 LDR X8, [X8 + 0x2F0]
	0x03DCDA98 ADD X0, X20, 0x8
	0x03DCDA9C LDR X1, [X8]
	0x03DCDAA0 BL 0x266C93C
	0x03DCDAA4 ADRP X8, 0x398000
	0x03DCDAA8 LDR X8, [X8 + 0x358]
	0x03DCDAAC MOV X20, X0
	0x03DCDAB0 ADD X0, X19, 0x8
	0x03DCDAB4 LDR X1, [X8]
	0x03DCDAB8 BL 0x266C920
	0x03DCDABC B 0x3DCE334
	0x03DCDAC0 ADRP X8, 0x398000
	0x03DCDAC4 LDR X8, [X8 + 0x2F0]
	0x03DCDAC8 ADD X0, X20, 0x8
	0x03DCDACC LDR X1, [X8]
	0x03DCDAD0 BL 0x266C93C
	0x03DCDAD4 ADRP X8, 0x398000
	0x03DCDAD8 LDR X8, [X8 + 0x358]
	0x03DCDADC MOV X20, X0
	0x03DCDAE0 ADD X0, X19, 0x8
	0x03DCDAE4 LDR X1, [X8]
	0x03DCDAE8 BL 0x266C920
	0x03DCDAEC LDR V0, [X0 + 0x34]
	0x03DCDAF0 STR S0, [X20 + 0x34]
	0x03DCDAF4 B 0x3DCE454
	0x03DCDAF8 ADRP X8, 0x398000
	0x03DCDAFC LDR X8, [X8 + 0x2F0]
	0x03DCDB00 ADD X0, X20, 0x8
	0x03DCDB04 LDR X1, [X8]
	0x03DCDB08 BL 0x266C93C
	0x03DCDB0C ADRP X8, 0x398000
	0x03DCDB10 LDR X8, [X8 + 0x358]
	0x03DCDB14 MOV X20, X0
	0x03DCDB18 ADD X0, X19, 0x8
	0x03DCDB1C LDR X1, [X8]
	0x03DCDB20 BL 0x266C920
	0x03DCDB24 LDR V0, [X0 + 0x38]
	0x03DCDB28 STR S0, [X20 + 0x38]
	0x03DCDB2C B 0x3DCE454
	0x03DCDB30 ADRP X8, 0x398000
	0x03DCDB34 LDR X8, [X8 + 0x2F0]
	0x03DCDB38 ADD X0, X20, 0x8
	0x03DCDB3C LDR X1, [X8]
	0x03DCDB40 BL 0x266C93C
	0x03DCDB44 ADRP X8, 0x398000
	0x03DCDB48 LDR X8, [X8 + 0x358]
	0x03DCDB4C MOV X20, X0
	0x03DCDB50 ADD X0, X19, 0x8
	0x03DCDB54 LDR X1, [X8]
	0x03DCDB58 BL 0x266C920
	0x03DCDB5C LDR W8, [X0 + 0x3C]
	0x03DCDB60 STR W8, [X20 + 0x3C]
	0x03DCDB64 B 0x3DCE454
	0x03DCDB68 ADRP X8, 0x398000
	0x03DCDB6C LDR X8, [X8 + 0x2F0]
	0x03DCDB70 ADD X0, X20, 0x8
	0x03DCDB74 LDR X1, [X8]
	0x03DCDB78 BL 0x266C93C
	0x03DCDB7C ADRP X8, 0x398000
	0x03DCDB80 LDR X8, [X8 + 0x358]
	0x03DCDB84 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X22+40]
	009 Move X21, 0x61D000
	010 Move X19, X1
	011 Move X20, X0
	012 Move [X31+72], X8
	013 Move W8, [X21+422]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0x328000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0x396000
	022 Move X0, [X0+4072]
	023 Call 0x1C17CF4
	024 Move X0, 0x39A000
	025 Move X0, [X0+776]
	026 Call 0x1C17CF4
	027 Move X0, 0x39A000
	028 Move X0, [X0+768]
	029 Call 0x1C17CF4
	030 Move X0, 0x39A000
	031 Move X0, [X0+760]
	032 Call 0x1C17CF4
	033 Move X0, 0x39A000
	034 Move X0, [X0+752]
	035 Call 0x1C17CF4
	036 Move X0, 0x39B000
	037 Move X0, [X0+1192]
	038 Call 0x1C17CF4
	039 Move X0, 0x39E000
	040 Move X0, [X0+608]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X21+422], W8
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X31], V0
	046 Move [X31+8], V0
	047 Move W1, [X19]
	048 Move W8, [X19+4]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, X20
	051 Call ComputedStyle.ApplyInitialValue, X0, X1
	052 Move X8, [X22+40]
	053 Move X9, [X31+72]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X20, [X31+112]
	056 Move X19, [X31+120]
	057 Move X22, [X31+96]
	058 Move X21, [X31+104]
	059 Move X30, [X31+80]
	060 Add X31, X31, 128
	061 Return 
	062 Move W8, 32
	063 NotImplemented "Instruction MOVK not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add X21, X19, 8
	066 Subtract W8, W1, 0x70000
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X9, -52637696
	069 Add X9, X9, 586
	070 NotImplemented "Instruction ADR not yet implemented."
	071 Move W11, [X9]
	072 Add X10, X10, X11
	073 CallNoReturn X10
	074 Move X8, 0x39A000
	075 Move X8, [X8+760]
	076 Add X0, X20, 40
	077 Move X1, [X8]
	078 Call StyleDataRef`1<VisualData>.Write, X0
	079 Subtract W8, W1, 0x20000
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X9, -52637696
	082 Add X9, X9, 502
	083 NotImplemented "Instruction ADR not yet implemented."
	084 NotImplemented "Instruction LDRH not yet implemented."
	085 Add X10, X10, X11
	086 CallNoReturn X10
	087 Move X21, 0x39A000
	088 Move X21, [X21+752]
	089 Add X20, X20, 8
	090 Move X0, X20
	091 Move X1, [X21]
	092 Call StyleDataRef`1<LayoutData>.Write, X0
	093 Move V0, [X19+8]
	094 Move W8, 0x7F800000
	095 Move S1, W8
	096 Move W9, 0x80000000
	097 NotImplemented "Instruction FCVTZS not yet implemented."
	098 NotImplemented "Instruction FCMP not yet implemented."
	099 NotImplemented "Instruction CSEL not yet implemented."
	100 Move [X0], W8
	101 Move W8, [X19+4]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X1, [X21]
	104 Move X0, X20
	105 Call StyleDataRef`1<LayoutData>.Write, X0
	106 Move [X0], W31
	107 Move TEMP, 0x30000
	108 Not TEMP
	109 Move W8, TEMP
	110 Add W8, W1, W8
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X9, -52637696
	113 Add X9, X9, 568
	114 NotImplemented "Instruction ADR not yet implemented."
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Add X10, X10, X11
	117 CallNoReturn X10
	118 Move X8, 0x39A000
	119 Move X8, [X8+776]
	120 Add X0, X20, 16
	121 Move X1, [X8]
	122 Call StyleDataRef`1<RareData>.Write, X0
	123 Move V0, [X21]
	124 Move W8, 0x7F800000
	125 Move S1, W8
	126 Move W9, 0x80000000
	127 NotImplemented "Instruction FCVTZS not yet implemented."
	128 NotImplemented "Instruction FCMP not yet implemented."
	129 NotImplemented "Instruction CSEL not yet implemented."
	130 Move [X0+24], W8
	131 Subtract W8, W1, 0x10000
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X9, -52637696
	134 Add X9, X9, 474
	135 NotImplemented "Instruction ADR not yet implemented."
	136 NotImplemented "Instruction LDRH not yet implemented."
	137 Add X10, X10, X11
	138 CallNoReturn X10
	139 Move X8, 0x39A000
	140 Move X8, [X8+768]
	141 Move X0, X20
	142 Move X1, [X8]
	143 Call 0x266D4BC, X0
	144 Move X8, [X19+16]
	145 Move V0, [X19]
	146 Move [X31+48], X8
	147 Move [X31+2], V0
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 Move [X0], V0
	150 Move X8, 0x39B000
	151 Move X8, [X8+1192]
	152 Move [X31+32], W1
	153 Add X1, X31, 32
	154 Move X0, [X8]
	155 Call 0x1C17E04
	156 Move X8, 0x39E000
	157 Move X8, [X8+608]
	158 Move X1, X0
	159 Move X2, X31
	160 Move X8, [X8]
	161 Move X0, X8
	162 Call String.Format, X0, X1
	163 Move X8, 0x328000
	164 Move X8, [X8+2600]
	165 Move X19, X0
	166 Move X8, [X8]
	167 Move W9, [X8+224]
	168 Compare W9, 0
	169 JumpIfNotEqual {172}
	170 Move X0, X8
	171 Call 0x1C17DFC
	172 Move X0, X19
	173 Move X1, X31
	174 Call Debug.LogAssertion, X0
	175 Move X8, 0x399000
	176 Move X8, [X8+760]
	177 Add X0, X20, 40
	178 Move X1, [X8]
	179 Call StyleDataRef`1<VisualData>.Write, X0
	180 Move X19, X0
	181 Move X0, X21
	182 Move X1, X31
	183 Call GCHandle.get_IsAllocated, X0
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfNotEqual {837}
	188 Move X0, X21
	189 Move X1, X31
	190 Call GCHandle.get_Target, X0
	191 Add X8, X31, 32
	192 Move X1, X31
	193 Call Background.FromObject, X0
	194 Move V0, [X31+32]
	195 Move V1, [X31+48]
	196 Move [X31], V0
	197 Move [X31+8], V1
	198 Move X8, 0x399000
	199 Move X8, [X8+760]
	200 Add X0, X20, 40
	201 Move X1, [X8]
	202 Call StyleDataRef`1<VisualData>.Write, X0
	203 Move V0, [X19]
	204 Move X8, [X19+16]
	205 Move [X31+2], V0
	206 Move X9, [X31+40]
	207 Move [X31+48], X8
	208 And X8, X8, 0
	209 Move [X0+56], W8
	210 Move [X0+48], X9
	211 Move X8, 0x399000
	212 Move X8, [X8+760]
	213 Add X0, X20, 40
	214 Move X1, [X8]
	215 Call StyleDataRef`1<VisualData>.Write, X0
	216 Move V0, [X19]
	217 Move X8, [X19+16]
	218 Move [X31+2], V0
	219 Move X9, [X31+40]
	220 Move [X31+48], X8
	221 And X8, X8, 0
	222 Move [X0+68], W8
	223 Move [X0+60], X9
	224 Move X8, 0x399000
	225 Move X8, [X8+760]
	226 Add X0, X20, 40
	227 Move X1, [X8]
	228 Call StyleDataRef`1<VisualData>.Write, X0
	229 Move X8, [X19+8]
	230 Move [X0+72], X8
	231 Move X8, 0x399000
	232 Move X8, [X8+760]
	233 Add X0, X20, 40
	234 Move X1, [X8]
	235 Call StyleDataRef`1<VisualData>.Write, X0
	236 Move X8, [X19+16]
	237 Move V0, [X19]
	238 Move [X31+48], X8
	239 Move [X31+2], V0
	240 NotImplemented "Instruction LDUR not yet implemented."
	241 Move [X0+100], V0
	242 Move X8, 0x399000
	243 Move X8, [X8+760]
	244 Add X0, X20, 40
	245 Move X1, [X8]
	246 Call StyleDataRef`1<VisualData>.Write, X0
	247 Move X8, 0x399000
	248 Move X8, [X8+760]
	249 Add X0, X20, 40
	250 Move X1, [X8]
	251 Call StyleDataRef`1<VisualData>.Write, X0
	252 Move X8, 0x399000
	253 Move X8, [X8+760]
	254 Add X0, X20, 40
	255 Move X1, [X8]
	256 Call StyleDataRef`1<VisualData>.Write, X0
	257 Move X8, [X19+16]
	258 Move V0, [X19]
	259 Move [X31+48], X8
	260 Move [X31+2], V0
	261 NotImplemented "Instruction LDUR not yet implemented."
	262 Move [X0+132], V0
	263 Move X8, 0x399000
	264 Move X8, [X8+760]
	265 Add X0, X20, 40
	266 Move X1, [X8]
	267 Call StyleDataRef`1<VisualData>.Write, X0
	268 Move X8, [X19+16]
	269 Move V0, [X19]
	270 Move [X31+48], X8
	271 Move [X31+2], V0
	272 NotImplemented "Instruction LDUR not yet implemented."
	273 Move [X0+148], V0
	274 Move X8, 0x399000
	275 Move X8, [X8+760]
	276 Add X0, X20, 40
	277 Move X1, [X8]
	278 Call StyleDataRef`1<VisualData>.Write, X0
	279 Move X8, [X19+16]
	280 Move V0, [X19]
	281 Move [X31+48], X8
	282 Move [X31+2], V0
	283 NotImplemented "Instruction LDUR not yet implemented."
	284 Move [X0+164], V0
	285 Move X8, 0x399000
	286 Move X8, [X8+760]
	287 Add X0, X20, 40
	288 Move X1, [X8]
	289 Call StyleDataRef`1<VisualData>.Write, X0
	290 Move X8, [X19+8]
	291 Move [X0+180], X8
	292 Move X8, 0x399000
	293 Move X8, [X8+760]
	294 Add X0, X20, 40
	295 Move X1, [X8]
	296 Call StyleDataRef`1<VisualData>.Write, X0
	297 Move X8, [X19+8]
	298 Move [X0+188], X8
	299 Move X8, 0x399000
	300 Move X8, [X8+760]
	301 Add X0, X20, 40
	302 Move X1, [X8]
	303 Call StyleDataRef`1<VisualData>.Write, X0
	304 Move V0, [X21]
	305 Move [X0+196], S0
	306 Move X8, 0x399000
	307 Move X8, [X8+760]
	308 Add X0, X20, 40
	309 Move X1, [X8]
	310 Call StyleDataRef`1<VisualData>.Write, X0
	311 Move V0, [X21]
	312 Move W8, 0x7F800000
	313 Move S1, W8
	314 Move W9, 0x80000000
	315 NotImplemented "Instruction FCVTZS not yet implemented."
	316 NotImplemented "Instruction FCMP not yet implemented."
	317 NotImplemented "Instruction CSEL not yet implemented."
	318 Move [X0+200], W8
	319 Move X8, 0x399000
	320 Move X8, [X8+776]
	321 Add X0, X20, 16
	322 Move X1, [X8]
	323 Call StyleDataRef`1<RareData>.Write, X0
	324 Move X8, [X19+16]
	325 Move V0, [X19]
	326 Move [X31+48], X8
	327 Move [X31+2], V0
	328 NotImplemented "Instruction LDUR not yet implemented."
	329 Move [X0+28], V0
	330 Move X8, 0x399000
	331 Move X8, [X8+776]
	332 Add X0, X20, 16
	333 Move X1, [X8]
	334 Call StyleDataRef`1<RareData>.Write, X0
	335 Move V0, [X21]
	336 Move W8, 0x7F800000
	337 Move S1, W8
	338 Move W9, 0x80000000
	339 NotImplemented "Instruction FCVTZS not yet implemented."
	340 NotImplemented "Instruction FCMP not yet implemented."
	341 NotImplemented "Instruction CSEL not yet implemented."
	342 Move [X0+44], W8
	343 Move X8, 0x399000
	344 Move X8, [X8+776]
	345 Add X0, X20, 16
	346 Move X1, [X8]
	347 Call StyleDataRef`1<RareData>.Write, X0
	348 Move X8, 0x399000
	349 Move X8, [X8+776]
	350 Add X0, X20, 16
	351 Move X1, [X8]
	352 Call StyleDataRef`1<RareData>.Write, X0
	353 Move V0, [X21]
	354 Move W8, 0x7F800000
	355 Move S1, W8
	356 Move W9, 0x80000000
	357 NotImplemented "Instruction FCVTZS not yet implemented."
	358 NotImplemented "Instruction FCMP not yet implemented."
	359 NotImplemented "Instruction CSEL not yet implemented."
	360 Move [X0+52], W8
	361 Move X8, 0x399000
	362 Move X8, [X8+776]
	363 Add X0, X20, 16
	364 Move X1, [X8]
	365 Call StyleDataRef`1<RareData>.Write, X0
	366 Move V0, [X21]
	367 Move W8, 0x7F800000
	368 Move S1, W8
	369 Move W9, 0x80000000
	370 NotImplemented "Instruction FCVTZS not yet implemented."
	371 NotImplemented "Instruction FCMP not yet implemented."
	372 NotImplemented "Instruction CSEL not yet implemented."
	373 Move [X0+56], W8
	374 Move X8, 0x399000
	375 Move X8, [X8+776]
	376 Add X0, X20, 16
	377 Move X1, [X8]
	378 Call StyleDataRef`1<RareData>.Write, X0
	379 Move V0, [X21]
	380 Move [X0+60], S0
	381 Move X8, 0x399000
	382 Move X8, [X8+776]
	383 Add X0, X20, 16
	384 Move X1, [X8]
	385 Call StyleDataRef`1<RareData>.Write, X0
	386 Move V0, [X21]
	387 Move W8, 0x7F800000
	388 Move S1, W8
	389 Move W9, 0x80000000
	390 NotImplemented "Instruction FCVTZS not yet implemented."
	391 NotImplemented "Instruction FCMP not yet implemented."
	392 NotImplemented "Instruction CSEL not yet implemented."
	393 Move [X0+64], W8
	394 Move X8, 0x399000
	395 Move X8, [X8+776]
	396 Add X0, X20, 16
	397 Move X1, [X8]
	398 Call StyleDataRef`1<RareData>.Write, X0
	399 Move V0, [X21]
	400 Move W8, 0x7F800000
	401 Move S1, W8
	402 Move W9, 0x80000000
	403 NotImplemented "Instruction FCVTZS not yet implemented."
	404 NotImplemented "Instruction FCMP not yet implemented."
	405 NotImplemented "Instruction CSEL not yet implemented."
	406 Move [X0+68], W8
	407 Move X8, 0x399000
	408 Move X8, [X8+768]
	409 Move X0, X20
	410 Move X1, [X8]
	411 Call 0x266D4BC, X0
	412 Move X8, [X19+8]
	413 Move [X0+16], X8
	414 Move X8, 0x399000
	415 Move X8, [X8+768]
	416 Move X0, X20
	417 Move X1, [X8]
	418 Call 0x266D4BC, X0
	419 Move X8, [X19+8]
	420 Move [X0+24], X8
	421 Move X8, 0x399000
	422 Move X8, [X8+768]
	423 Move X0, X20
	424 Move X1, [X8]
	425 Call 0x266D4BC, X0
	426 Move X19, X0
	427 Move X0, X21
	428 Move X1, X31
	429 Call GCHandle.get_IsAllocated, X0
	430 Move X8, X31
	431 Move TEMP, X0
	432 And TEMP, TEMP, 1
	433 Compare TEMP, 1
	434 JumpIfNotEqual {845}
	435 Move X0, X21
	436 Move X1, X31
	437 Call GCHandle.get_Target, X0
	438 Compare X0, 0
	439 JumpIfEqual {844}
	440 Move X8, 0x395000
	441 Move X8, [X8+4072]
	442 Move X9, [X0]
	443 Move X8, [X8]
	444 NotImplemented "Instruction CMP not yet implemented."
	445 NotImplemented "Instruction CSEL not yet implemented."
	446 Move X8, 0x399000
	447 Move X8, [X8+768]
	448 Move X0, X20
	449 Move X1, [X8]
	450 Call 0x266D4BC, X0
	451 Move X19, X0
	452 Move X0, X21
	453 Move X1, X31
	454 Call GCHandle.get_IsAllocated, X0
	455 Move W8, W0
	456 Move X1, X31
	457 Move X0, X31
	458 Move TEMP, X8
	459 And TEMP, TEMP, 1
	460 Compare TEMP, 1
	461 JumpIfNotEqual {467}
	462 Move X0, X21
	463 Move X1, X31
	464 Call GCHandle.get_Target, X0
	465 Move X1, X31
	466 Call FontDefinition.FromObject, X0
	467 Move [X19+72], X0
	468 Move [X19+80], X1
	469 Move X8, 0x399000
	470 Move X8, [X8+768]
	471 Move X0, X20
	472 Move X1, [X8]
	473 Call 0x266D4BC, X0
	474 Move V0, [X21]
	475 Move W8, 0x7F800000
	476 Move S1, W8
	477 Move W9, 0x80000000
	478 NotImplemented "Instruction FCVTZS not yet implemented."
	479 NotImplemented "Instruction FCMP not yet implemented."
	480 NotImplemented "Instruction CSEL not yet implemented."
	481 Move [X0+88], W8
	482 Move X8, 0x399000
	483 Move X8, [X8+768]
	484 Move X0, X20
	485 Move X1, [X8]
	486 Call 0x266D4BC, X0
	487 Move X8, 0x399000
	488 Move X8, [X8+768]
	489 Move X0, X20
	490 Move X1, [X8]
	491 Call 0x266D4BC, X0
	492 Move V0, [X21]
	493 Move W8, 0x7F800000
	494 Move S1, W8
	495 Move W9, 0x80000000
	496 NotImplemented "Instruction FCVTZS not yet implemented."
	497 NotImplemented "Instruction FCMP not yet implemented."
	498 NotImplemented "Instruction CSEL not yet implemented."
	499 Move [X0+100], W8
	500 Move X8, 0x399000
	501 Move X8, [X8+768]
	502 Move X0, X20
	503 Move X1, [X8]
	504 Call 0x266D4BC, X0
	505 Move X8, [X19+16]
	506 Move V0, [X19]
	507 Move [X31+48], X8
	508 Move [X31+2], V0
	509 NotImplemented "Instruction LDUR not yet implemented."
	510 Move [X0+104], V0
	511 Move X8, 0x399000
	512 Move X8, [X8+768]
	513 Move X0, X20
	514 Move X1, [X8]
	515 Call 0x266D4BC, X0
	516 Move X8, 0x399000
	517 Move X8, [X8+768]
	518 Move X0, X20
	519 Move X1, [X8]
	520 Call 0x266D4BC, X0
	521 Move V0, [X21]
	522 Move [X0+120], S0
	523 Move X8, 0x399000
	524 Move X8, [X8+768]
	525 Move X0, X20
	526 Move X1, [X8]
	527 Call 0x266D4BC, X0
	528 Move V0, [X21]
	529 Move W8, 0x7F800000
	530 Move S1, W8
	531 Move W9, 0x80000000
	532 NotImplemented "Instruction FCVTZS not yet implemented."
	533 NotImplemented "Instruction FCMP not yet implemented."
	534 NotImplemented "Instruction CSEL not yet implemented."
	535 Move [X0+124], W8
	536 Move X8, 0x399000
	537 Move X8, [X8+768]
	538 Move X0, X20
	539 Move X1, [X8]
	540 Call 0x266D4BC, X0
	541 Move V0, [X21]
	542 Move W8, 0x7F800000
	543 Move S1, W8
	544 Move W9, 0x80000000
	545 NotImplemented "Instruction FCVTZS not yet implemented."
	546 NotImplemented "Instruction FCMP not yet implemented."
	547 NotImplemented "Instruction CSEL not yet implemented."
	548 Move [X0+128], W8
	549 Move X8, 0x399000
	550 Move X8, [X8+752]
	551 Add X0, X20, 8
	552 Move X1, [X8]
	553 Call StyleDataRef`1<LayoutData>.Write, X0
	554 Move V0, [X21]
	555 Move [X0+16], S0
	556 Move X8, 0x399000
	557 Move X8, [X8+752]
	558 Add X0, X20, 8
	559 Move X1, [X8]
	560 Call StyleDataRef`1<LayoutData>.Write, X0
	561 Move X8, [X19+8]
	562 Move [X0+40], X8
	563 Move X8, 0x399000
	564 Move X8, [X8+752]
	565 Add X0, X20, 8
	566 Move X1, [X8]
	567 Call StyleDataRef`1<LayoutData>.Write, X0
	568 Move V0, [X21]
	569 Move [X0+52], S0
	570 Move X8, 0x399000
	571 Move X8, [X8+752]
	572 Add X0, X20, 8
	573 Move X1, [X8]
	574 Call StyleDataRef`1<LayoutData>.Write, X0
	575 Move V0, [X21]
	576 Move [X0+56], S0
	577 Move X8, 0x399000
	578 Move X8, [X8+752]
	579 Add X0, X20, 8
	580 Move X1, [X8]
	581 Call StyleDataRef`1<LayoutData>.Write, X0
	582 Move X8, [X19+8]
	583 Move [X0+64], X8
	584 Move X8, 0x399000
	585 Move X8, [X8+752]
	586 Add X0, X20, 8
	587 Move X1, [X8]
	588 Call StyleDataRef`1<LayoutData>.Write, X0
	589 Move X8, [X19+8]
	590 Move [X0+76], X8
	591 Move X8, 0x399000
	592 Move X8, [X8+752]
	593 Add X0, X20, 8
	594 Move X1, [X8]
	595 Call StyleDataRef`1<LayoutData>.Write, X0
	596 Move X8, [X19+8]
	597 Move [X0+140], X8
	598 Move X8, 0x399000
	599 Move X8, [X8+752]
	600 Add X0, X20, 8
	601 Move X1, [X8]
	602 Call StyleDataRef`1<LayoutData>.Write, X0
	603 Move X8, [X19+8]
	604 Move [X0+148], X8
	605 Move X8, 0x399000
	606 Move X8, [X8+752]
	607 Add X0, X20, 8
	608 Move X1, [X8]
	609 Call StyleDataRef`1<LayoutData>.Write, X0
	610 Move X8, [X19+8]
	611 Move [X0+164], X8
	612 Move X21, 0x399000
	613 Move X21, [X21+752]
	614 Add X20, X20, 8
	615 Move X0, X20
	616 Move X1, [X21]
	617 Call StyleDataRef`1<LayoutData>.Write, X0
	618 Move V0, [X19+8]
	619 Move W8, 0x7F800000
	620 Move S1, W8
	621 Move W9, 0x80000000
	622 NotImplemented "Instruction FCVTZS not yet implemented."
	623 NotImplemented "Instruction FCMP not yet implemented."
	624 NotImplemented "Instruction CSEL not yet implemented."
	625 Move [X0+4], W8
	626 Move W8, [X19+4]
	627 NotImplemented "Instruction CMP not yet implemented."
	628 Move X1, [X21]
	629 Move X0, X20
	630 Call StyleDataRef`1<LayoutData>.Write, X0
	631 Move [X0+4], W31
	632 Move X21, 0x399000
	633 Move X21, [X21+752]
	634 Add X20, X20, 8
	635 Move X0, X20
	636 Move X1, [X21]
	637 Call StyleDataRef`1<LayoutData>.Write, X0
	638 Move V0, [X19+8]
	639 Move W8, 0x7F800000
	640 Move S1, W8
	641 Move W9, 0x80000000
	642 NotImplemented "Instruction FCVTZS not yet implemented."
	643 NotImplemented "Instruction FCMP not yet implemented."
	644 NotImplemented "Instruction CSEL not yet implemented."
	645 Move [X0+8], W8
	646 Move W8, [X19+4]
	647 NotImplemented "Instruction CMP not yet implemented."
	648 Move X1, [X21]
	649 Move X0, X20
	650 Call StyleDataRef`1<LayoutData>.Write, X0
	651 Move [X0+8], W31
	652 Move X8, 0x399000
	653 Move X8, [X8+752]
	654 Add X0, X20, 8
	655 Move X1, [X8]
	656 Call StyleDataRef`1<LayoutData>.Write, X0
	657 Move V0, [X21]
	658 Move [X0+12], S0
	659 Move X8, 0x399000
	660 Move X8, [X8+752]
	661 Add X0, X20, 8
	662 Move X1, [X8]
	663 Call StyleDataRef`1<LayoutData>.Write, X0
	664 Move V0, [X21]
	665 Move [X0+20], S0
	666 Move X8, 0x399000
	667 Move X8, [X8+752]
	668 Add X0, X20, 8
	669 Move X1, [X8]
	670 Call StyleDataRef`1<LayoutData>.Write, X0
	671 Move V0, [X21]
	672 Move [X0+24], S0
	673 Move X8, 0x399000
	674 Move X8, [X8+752]
	675 Add X0, X20, 8
	676 Move X1, [X8]
	677 Call StyleDataRef`1<LayoutData>.Write, X0
	678 Move X8, [X19+8]
	679 Move [X0+28], X8
	680 Move X21, 0x399000
	681 Move X21, [X21+752]
	682 Add X20, X20, 8
	683 Move X0, X20
	684 Move X1, [X21]
	685 Call StyleDataRef`1<LayoutData>.Write, X0
	686 Move V0, [X19+8]
	687 Move W8, 0x7F800000
	688 Move S1, W8
	689 Move W9, 0x80000000
	690 NotImplemented "Instruction FCVTZS not yet implemented."
	691 NotImplemented "Instruction FCMP not yet implemented."
	692 NotImplemented "Instruction CSEL not yet implemented."
	693 Move [X0+36], W8
	694 Move W8, [X19+4]
	695 NotImplemented "Instruction CMP not yet implemented."
	696 Move X1, [X21]
	697 Move X0, X20
	698 Call StyleDataRef`1<LayoutData>.Write, X0
	699 Move W8, 1
	700 Move [X0+36], W8
	701 Move X8, 0x399000
	702 Move X8, [X8+752]
	703 Add X0, X20, 8
	704 Move X1, [X8]
	705 Call StyleDataRef`1<LayoutData>.Write, X0
	706 Move V0, [X21]
	707 Move W8, 0x7F800000
	708 Move S1, W8
	709 Move W9, 0x80000000
	710 NotImplemented "Instruction FCVTZS not yet implemented."
	711 NotImplemented "Instruction FCMP not yet implemented."
	712 NotImplemented "Instruction CSEL not yet implemented."
	713 Move [X0+48], W8
	714 Move X8, 0x399000
	715 Move X8, [X8+752]
	716 Add X0, X20, 8
	717 Move X1, [X8]
	718 Call StyleDataRef`1<LayoutData>.Write, X0
	719 Move V0, [X21]
	720 Move W8, 0x7F800000
	721 Move S1, W8
	722 Move W9, 0x80000000
	723 NotImplemented "Instruction FCVTZS not yet implemented."
	724 NotImplemented "Instruction FCMP not yet implemented."
	725 NotImplemented "Instruction CSEL not yet implemented."
	726 Move [X0+60], W8
	727 Move X8, 0x399000
	728 Move X8, [X8+752]
	729 Add X0, X20, 8
	730 Move X1, [X8]
	731 Call StyleDataRef`1<LayoutData>.Write, X0
	732 Move V0, [X21]
	733 Move W8, 0x7F800000
	734 Move S1, W8
	735 Move W9, 0x80000000
	736 NotImplemented "Instruction FCVTZS not yet implemented."
	737 NotImplemented "Instruction FCMP not yet implemented."
	738 NotImplemented "Instruction CSEL not yet implemented."
	739 Move [X0+72], W8
	740 Move X8, 0x399000
	741 Move X8, [X8+752]
	742 Add X0, X20, 8
	743 Move X1, [X8]
	744 Call StyleDataRef`1<LayoutData>.Write, X0
	745 Move X8, [X19+8]
	746 Move [X0+84], X8
	747 Move X8, 0x399000
	748 Move X8, [X8+752]
	749 Add X0, X20, 8
	750 Move X1, [X8]
	751 Call StyleDataRef`1<LayoutData>.Write, X0
	752 Move X8, [X19+8]
	753 Move [X0+92], X8
	754 Move X8, 0x399000
	755 Move X8, [X8+752]
	756 Add X0, X20, 8
	757 Move X1, [X8]
	758 Call StyleDataRef`1<LayoutData>.Write, X0
	759 Move X8, [X19+8]
	760 Move [X0+100], X8
	761 Move X8, 0x399000
	762 Move X8, [X8+752]
	763 Add X0, X20, 8
	764 Move X1, [X8]
	765 Call StyleDataRef`1<LayoutData>.Write, X0
	766 Move X8, [X19+8]
	767 Move [X0+108], X8
	768 Move X8, 0x399000
	769 Move X8, [X8+752]
	770 Add X0, X20, 8
	771 Move X1, [X8]
	772 Call StyleDataRef`1<LayoutData>.Write, X0
	773 Move X8, [X19+8]
	774 Move [X0+116], X8
	775 Move X8, 0x399000
	776 Move X8, [X8+752]
	777 Add X0, X20, 8
	778 Move X1, [X8]
	779 Call StyleDataRef`1<LayoutData>.Write, X0
	780 Move X8, [X19+8]
	781 Move [X0+124], X8
	782 Move X8, 0x399000
	783 Move X8, [X8+752]
	784 Add X0, X20, 8
	785 Move X1, [X8]
	786 Call StyleDataRef`1<LayoutData>.Write, X0
	787 Move X8, [X19+8]
	788 Move [X0+132], X8
	789 Move X8, 0x399000
	790 Move X8, [X8+752]
	791 Add X0, X20, 8
	792 Move X1, [X8]
	793 Call StyleDataRef`1<LayoutData>.Write, X0
	794 Move X8, [X19+8]
	795 Move [X0+156], X8
	796 Move X8, 0x399000
	797 Move X8, [X8+752]
	798 Add X0, X20, 8
	799 Move X1, [X8]
	800 Call StyleDataRef`1<LayoutData>.Write, X0
	801 Move X8, [X19+8]
	802 Move [X0+172], X8
	803 Move X8, 0x399000
	804 Move X8, [X8+752]
	805 Add X0, X20, 8
	806 Move X1, [X8]
	807 Call StyleDataRef`1<LayoutData>.Write, X0
	808 Move V0, [X21]
	809 Move W8, 0x7F800000
	810 Move S1, W8
	811 Move W9, 0x80000000
	812 NotImplemented "Instruction FCVTZS not yet implemented."
	813 NotImplemented "Instruction FCMP not yet implemented."
	814 NotImplemented "Instruction CSEL not yet implemented."
	815 Move [X0+180], W8
	816 Move X8, 0x399000
	817 Move X8, [X8+752]
	818 Add X0, X20, 8
	819 Move X1, [X8]
	820 Call StyleDataRef`1<LayoutData>.Write, X0
	821 Move X8, [X19+8]
	822 Move [X0+184], X8
	823 Move X8, 0x399000
	824 Move X8, [X8+752]
	825 Add X0, X20, 8
	826 Move X1, [X8]
	827 Call StyleDataRef`1<LayoutData>.Write, X0
	828 Move X8, [X19+8]
	829 Move [X0+192], X8
	830 Move X8, 0x399000
	831 Move X8, [X8+752]
	832 Add X0, X20, 8
	833 Move X1, [X8]
	834 Call StyleDataRef`1<LayoutData>.Write, X0
	835 Move X8, [X19+8]
	836 Move [X0+200], X8
	837 NotImplemented "Instruction MOVI not yet implemented."
	838 Move [X31], V0
	839 Move [X31+8], V0
	840 Move V1, [X31]
	841 Move V0, [X31+16]
	842 Move [X19+16], V1
	843 Move [X19+24], V0
	844 Move X8, X31
	845 Move [X19+64], X8
	846 Call 0x3EB2B20

Method: System.Void ApplyStyleValueManaged(UnityEngine.UIElements.StyleSheets.StyleValueManaged sv, ref UnityEngine.UIElements.ComputedStyle parentStyle)

Disassembly:
	0x03DCDB88 ADD X0, X19, 0x8
	0x03DCDB8C LDR X1, [X8]
	0x03DCDB90 BL 0x266C920
	0x03DCDB94 B 0x3DCE05C
	0x03DCDB98 ADRP X8, 0x398000
	0x03DCDB9C LDR X8, [X8 + 0x2F0]
	0x03DCDBA0 ADD X0, X20, 0x8
	0x03DCDBA4 LDR X1, [X8]
	0x03DCDBA8 BL 0x266C93C
	0x03DCDBAC ADRP X8, 0x398000
	0x03DCDBB0 LDR X8, [X8 + 0x358]
	0x03DCDBB4 MOV X20, X0
	0x03DCDBB8 ADD X0, X19, 0x8
	0x03DCDBBC LDR X1, [X8]
	0x03DCDBC0 BL 0x266C920
	0x03DCDBC4 LDR W8, [X0 + 0x48]
	0x03DCDBC8 STR W8, [X20 + 0x48]
	0x03DCDBCC B 0x3DCE454
	0x03DCDBD0 ADRP X8, 0x398000
	0x03DCDBD4 LDR X8, [X8 + 0x2F0]
	0x03DCDBD8 ADD X0, X20, 0x8
	0x03DCDBDC LDR X1, [X8]
	0x03DCDBE0 BL 0x266C93C
	0x03DCDBE4 ADRP X8, 0x398000
	0x03DCDBE8 LDR X8, [X8 + 0x358]
	0x03DCDBEC MOV X20, X0
	0x03DCDBF0 ADD X0, X19, 0x8
	0x03DCDBF4 LDR X1, [X8]
	0x03DCDBF8 BL 0x266C920
	0x03DCDBFC LDUR X8, [X0 + 0x4C]
	0x03DCDC00 STUR X8, [X20 + 0x4C]
	0x03DCDC04 B 0x3DCE454
	0x03DCDC08 ADRP X8, 0x398000
	0x03DCDC0C LDR X8, [X8 + 0x2F0]
	0x03DCDC10 ADD X0, X20, 0x8
	0x03DCDC14 LDR X1, [X8]
	0x03DCDC18 BL 0x266C93C
	0x03DCDC1C ADRP X8, 0x398000
	0x03DCDC20 LDR X8, [X8 + 0x358]
	0x03DCDC24 MOV X20, X0
	0x03DCDC28 ADD X0, X19, 0x8
	0x03DCDC2C LDR X1, [X8]
	0x03DCDC30 BL 0x266C920
	0x03DCDC34 LDUR X8, [X0 + 0x54]
	0x03DCDC38 STUR X8, [X20 + 0x54]
	0x03DCDC3C B 0x3DCE454
	0x03DCDC40 ADRP X8, 0x398000
	0x03DCDC44 LDR X8, [X8 + 0x2F0]
	0x03DCDC48 ADD X0, X20, 0x8
	0x03DCDC4C LDR X1, [X8]
	0x03DCDC50 BL 0x266C93C
	0x03DCDC54 ADRP X8, 0x398000
	0x03DCDC58 LDR X8, [X8 + 0x358]
	0x03DCDC5C MOV X20, X0
	0x03DCDC60 ADD X0, X19, 0x8
	0x03DCDC64 LDR X1, [X8]
	0x03DCDC68 BL 0x266C920
	0x03DCDC6C B 0x3DCE104
	0x03DCDC70 ADRP X8, 0x398000
	0x03DCDC74 LDR X8, [X8 + 0x2F0]
	0x03DCDC78 ADD X0, X20, 0x8
	0x03DCDC7C LDR X1, [X8]
	0x03DCDC80 BL 0x266C93C
	0x03DCDC84 ADRP X8, 0x398000
	0x03DCDC88 LDR X8, [X8 + 0x358]
	0x03DCDC8C MOV X20, X0
	0x03DCDC90 ADD X0, X19, 0x8
	0x03DCDC94 LDR X1, [X8]
	0x03DCDC98 BL 0x266C920
	0x03DCDC9C LDUR X8, [X0 + 0x64]
	0x03DCDCA0 STUR X8, [X20 + 0x64]
	0x03DCDCA4 B 0x3DCE454
	0x03DCDCA8 ADRP X8, 0x398000
	0x03DCDCAC LDR X8, [X8 + 0x2F0]
	0x03DCDCB0 ADD X0, X20, 0x8
	0x03DCDCB4 LDR X1, [X8]
	0x03DCDCB8 BL 0x266C93C
	0x03DCDCBC ADRP X8, 0x398000
	0x03DCDCC0 LDR X8, [X8 + 0x358]
	0x03DCDCC4 MOV X20, X0
	0x03DCDCC8 ADD X0, X19, 0x8
	0x03DCDCCC LDR X1, [X8]
	0x03DCDCD0 BL 0x266C920
	0x03DCDCD4 LDUR X8, [X0 + 0x6C]
	0x03DCDCD8 STUR X8, [X20 + 0x6C]
	0x03DCDCDC B 0x3DCE454
	0x03DCDCE0 ADRP X8, 0x398000
	0x03DCDCE4 LDR X8, [X8 + 0x2F0]
	0x03DCDCE8 ADD X0, X20, 0x8
	0x03DCDCEC LDR X1, [X8]
	0x03DCDCF0 BL 0x266C93C
	0x03DCDCF4 ADRP X8, 0x398000
	0x03DCDCF8 LDR X8, [X8 + 0x358]
	0x03DCDCFC MOV X20, X0
	0x03DCDD00 ADD X0, X19, 0x8
	0x03DCDD04 LDR X1, [X8]
	0x03DCDD08 BL 0x266C920
	0x03DCDD0C LDUR X8, [X0 + 0x74]
	0x03DCDD10 STUR X8, [X20 + 0x74]
	0x03DCDD14 B 0x3DCE454
	0x03DCDD18 ADRP X8, 0x398000
	0x03DCDD1C LDR X8, [X8 + 0x2F0]
	0x03DCDD20 ADD X0, X20, 0x8
	0x03DCDD24 LDR X1, [X8]
	0x03DCDD28 BL 0x266C93C
	0x03DCDD2C ADRP X8, 0x398000
	0x03DCDD30 LDR X8, [X8 + 0x358]
	0x03DCDD34 MOV X20, X0
	0x03DCDD38 ADD X0, X19, 0x8
	0x03DCDD3C LDR X1, [X8]
	0x03DCDD40 BL 0x266C920
	0x03DCDD44 LDUR X8, [X0 + 0x7C]
	0x03DCDD48 STUR X8, [X20 + 0x7C]
	0x03DCDD4C B 0x3DCE454
	0x03DCDD50 ADRP X8, 0x398000
	0x03DCDD54 LDR X8, [X8 + 0x2F0]
	0x03DCDD58 ADD X0, X20, 0x8
	0x03DCDD5C LDR X1, [X8]
	0x03DCDD60 BL 0x266C93C
	0x03DCDD64 ADRP X8, 0x398000
	0x03DCDD68 LDR X8, [X8 + 0x358]
	0x03DCDD6C MOV X20, X0
	0x03DCDD70 ADD X0, X19, 0x8
	0x03DCDD74 LDR X1, [X8]
	0x03DCDD78 BL 0x266C920
	0x03DCDD7C B 0x3DCE254
	0x03DCDD80 ADRP X8, 0x398000
	0x03DCDD84 LDR X8, [X8 + 0x2F0]
	0x03DCDD88 ADD X0, X20, 0x8
	0x03DCDD8C LDR X1, [X8]
	0x03DCDD90 BL 0x266C93C
	0x03DCDD94 ADRP X8, 0x398000
	0x03DCDD98 LDR X8, [X8 + 0x358]
	0x03DCDD9C MOV X20, X0
	0x03DCDDA0 ADD X0, X19, 0x8
	0x03DCDDA4 LDR X1, [X8]
	0x03DCDDA8 BL 0x266C920
	0x03DCDDAC LDUR X8, [X0 + 0x8C]
	0x03DCDDB0 STUR X8, [X20 + 0x8C]
	0x03DCDDB4 B 0x3DCE454
	0x03DCDDB8 ADRP X8, 0x398000
	0x03DCDDBC LDR X8, [X8 + 0x2F0]
	0x03DCDDC0 ADD X0, X20, 0x8
	0x03DCDDC4 LDR X1, [X8]
	0x03DCDDC8 BL 0x266C93C
	0x03DCDDCC ADRP X8, 0x398000
	0x03DCDDD0 LDR X8, [X8 + 0x358]
	0x03DCDDD4 MOV X20, X0
	0x03DCDDD8 ADD X0, X19, 0x8
	0x03DCDDDC LDR X1, [X8]
	0x03DCDDE0 BL 0x266C920
	0x03DCDDE4 LDUR X8, [X0 + 0x94]
	0x03DCDDE8 STUR X8, [X20 + 0x94]
	0x03DCDDEC B 0x3DCE454
	0x03DCDDF0 ADRP X8, 0x398000
	0x03DCDDF4 LDR X8, [X8 + 0x2F0]
	0x03DCDDF8 ADD X0, X20, 0x8
	0x03DCDDFC LDR X1, [X8]
	0x03DCDE00 BL 0x266C93C
	0x03DCDE04 ADRP X8, 0x398000
	0x03DCDE08 LDR X8, [X8 + 0x358]
	0x03DCDE0C MOV X20, X0
	0x03DCDE10 ADD X0, X19, 0x8
	0x03DCDE14 LDR X1, [X8]
	0x03DCDE18 BL 0x266C920
	0x03DCDE1C LDUR X8, [X0 + 0x9C]
	0x03DCDE20 STUR X8, [X20 + 0x9C]
	0x03DCDE24 B 0x3DCE454
	0x03DCDE28 ADRP X8, 0x398000
	0x03DCDE2C LDR X8, [X8 + 0x2F0]
	0x03DCDE30 ADD X0, X20, 0x8
	0x03DCDE34 LDR X1, [X8]
	0x03DCDE38 BL 0x266C93C
	0x03DCDE3C ADRP X8, 0x398000
	0x03DCDE40 LDR X8, [X8 + 0x358]
	0x03DCDE44 MOV X20, X0
	0x03DCDE48 ADD X0, X19, 0x8
	0x03DCDE4C LDR X1, [X8]
	0x03DCDE50 BL 0x266C920
	0x03DCDE54 LDUR X8, [X0 + 0xA4]
	0x03DCDE58 STUR X8, [X20 + 0xA4]
	0x03DCDE5C B 0x3DCE454
	0x03DCDE60 ADRP X8, 0x398000
	0x03DCDE64 LDR X8, [X8 + 0x2F0]
	0x03DCDE68 ADD X0, X20, 0x8
	0x03DCDE6C LDR X1, [X8]
	0x03DCDE70 BL 0x266C93C
	0x03DCDE74 ADRP X8, 0x398000
	0x03DCDE78 LDR X8, [X8 + 0x358]
	0x03DCDE7C MOV X20, X0
	0x03DCDE80 ADD X0, X19, 0x8
	0x03DCDE84 LDR X1, [X8]
	0x03DCDE88 BL 0x266C920
	0x03DCDE8C LDUR X8, [X0 + 0xAC]
	0x03DCDE90 STUR X8, [X20 + 0xAC]
	0x03DCDE94 B 0x3DCE454
	0x03DCDE98 ADRP X8, 0x398000
	0x03DCDE9C LDR X8, [X8 + 0x2F0]
	0x03DCDEA0 ADD X0, X20, 0x8
	0x03DCDEA4 LDR X1, [X8]
	0x03DCDEA8 BL 0x266C93C
	0x03DCDEAC ADRP X8, 0x398000
	0x03DCDEB0 LDR X8, [X8 + 0x358]
	0x03DCDEB4 MOV X20, X0
	0x03DCDEB8 ADD X0, X19, 0x8
	0x03DCDEBC LDR X1, [X8]
	0x03DCDEC0 BL 0x266C920
	0x03DCDEC4 LDR W8, [X0 + 0xB4]
	0x03DCDEC8 STR W8, [X20 + 0xB4]
	0x03DCDECC B 0x3DCE454
	0x03DCDED0 ADRP X8, 0x398000
	0x03DCDED4 LDR X8, [X8 + 0x2F0]
	0x03DCDED8 ADD X0, X20, 0x8
	0x03DCDEDC LDR X1, [X8]
	0x03DCDEE0 BL 0x266C93C
	0x03DCDEE4 ADRP X8, 0x398000
	0x03DCDEE8 LDR X8, [X8 + 0x358]
	0x03DCDEEC MOV X20, X0
	0x03DCDEF0 ADD X0, X19, 0x8
	0x03DCDEF4 LDR X1, [X8]
	0x03DCDEF8 BL 0x266C920
	0x03DCDEFC LDR X8, [X0 + 0xB8]
	0x03DCDF00 STR X8, [X20 + 0xB8]
	0x03DCDF04 B 0x3DCE454
	0x03DCDF08 ADRP X8, 0x398000
	0x03DCDF0C LDR X8, [X8 + 0x2F0]
	0x03DCDF10 ADD X0, X20, 0x8
	0x03DCDF14 LDR X1, [X8]
	0x03DCDF18 BL 0x266C93C
	0x03DCDF1C ADRP X8, 0x398000
	0x03DCDF20 LDR X8, [X8 + 0x358]
	0x03DCDF24 MOV X20, X0
	0x03DCDF28 ADD X0, X19, 0x8
	0x03DCDF2C LDR X1, [X8]
	0x03DCDF30 BL 0x266C920
	0x03DCDF34 LDR X8, [X0 + 0xC0]
	0x03DCDF38 STR X8, [X20 + 0xC0]
	0x03DCDF3C B 0x3DCE454
	0x03DCDF40 ADRP X8, 0x398000
	0x03DCDF44 LDR X8, [X8 + 0x2F0]
	0x03DCDF48 ADD X0, X20, 0x8
	0x03DCDF4C LDR X1, [X8]
	0x03DCDF50 BL 0x266C93C
	0x03DCDF54 ADRP X8, 0x398000
	0x03DCDF58 LDR X8, [X8 + 0x358]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x61C000
	007 Move W8, [X22+423]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {50}
	015 Move X0, 0x327000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x398000
	019 Move X0, [X0+856]
	020 Call 0x1C17CF4
	021 Move X0, 0x399000
	022 Move X0, [X0+800]
	023 Call 0x1C17CF4
	024 Move X0, 0x351000
	025 Move X0, [X0+2016]
	026 Call 0x1C17CF4
	027 Move X0, 0x399000
	028 Move X0, [X0+840]
	029 Call 0x1C17CF4
	030 Move X0, 0x399000
	031 Move X0, [X0+792]
	032 Call 0x1C17CF4
	033 Move X0, 0x39A000
	034 Move X0, [X0+1192]
	035 Call 0x1C17CF4
	036 Move X0, 0x399000
	037 Move X0, [X0+912]
	038 Call 0x1C17CF4
	039 Move X0, 0x399000
	040 Move X0, [X0+920]
	041 Call 0x1C17CF4
	042 Move X0, 0x399000
	043 Move X0, [X0+928]
	044 Call 0x1C17CF4
	045 Move X0, 0x39D000
	046 Move X0, [X0+608]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X22+423], W8
	050 Move X8, X21
	051 ShiftRight X8, 32
	052 And X8, X8, 0x7FFFFFFF
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, X19
	055 Move W1, W21
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Call ComputedStyle.ApplyInitialValue, X0, X1
	062 Return 
	063 Subtract W8, W21, 0x60000
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X9, -52641792
	066 Add X9, X9, 602
	067 NotImplemented "Instruction ADR not yet implemented."
	068 Move W11, [X9]
	069 Add X10, X10, X11
	070 CallNoReturn X10
	071 Move X8, 0x399000
	072 Move X8, [X8+792]
	073 Add X0, X19, 32
	074 Move X1, [X8]
	075 Call StyleDataRef`1<TransitionData>.Write, X0
	076 Compare X20, 0
	077 JumpIfEqual {156}
	078 Move X8, 0x399000
	079 Move X8, [X8+800]
	080 Move X9, [X20]
	081 Move X8, [X8]
	082 Move W11, [X9+304]
	083 Move W10, [X8+304]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X8, X31
	086 Move X8, 0x39A000
	087 Move X8, [X8+1192]
	088 Add X1, X31, 12
	089 Move [X31+12], W21
	090 Move X0, [X8]
	091 Call 0x1C17E04
	092 Move X8, 0x39D000
	093 Move X8, [X8+608]
	094 Move X1, X0
	095 Move X2, X31
	096 Move X8, [X8]
	097 Move X0, X8
	098 Call String.Format, X0, X1
	099 Move X8, 0x327000
	100 Move X8, [X8+2600]
	101 Move X19, X0
	102 Move X8, [X8]
	103 Move W9, [X8+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {108}
	106 Move X0, X8
	107 Call 0x1C17DFC
	108 Move X0, X19
	109 Move X1, X31
	110 Call Debug.LogAssertion, X0
	111 Move X8, 0x399000
	112 Move X8, [X8+792]
	113 Add X0, X19, 32
	114 Move X1, [X8]
	115 Call StyleDataRef`1<TransitionData>.Write, X0
	116 Compare X20, 0
	117 JumpIfEqual {167}
	118 Move X8, 0x399000
	119 Move X8, [X8+800]
	120 Move X9, [X20]
	121 Move X8, [X8]
	122 Move W11, [X9+304]
	123 Move W10, [X8+304]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X8, X31
	126 Move X8, 0x399000
	127 Move X8, [X8+792]
	128 Add X0, X19, 32
	129 Move X1, [X8]
	130 Call StyleDataRef`1<TransitionData>.Write, X0
	131 Compare X20, 0
	132 JumpIfEqual {184}
	133 Move X8, 0x351000
	134 Move X8, [X8+2016]
	135 Move X9, [X20]
	136 Move X8, [X8]
	137 Move W11, [X9+304]
	138 Move W10, [X8+304]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X8, X31
	141 Move X8, 0x399000
	142 Move X8, [X8+792]
	143 Add X0, X19, 32
	144 Move X1, [X8]
	145 Call StyleDataRef`1<TransitionData>.Write, X0
	146 Compare X20, 0
	147 JumpIfEqual {201}
	148 Move X8, 0x399000
	149 Move X8, [X8+840]
	150 Move X9, [X20]
	151 Move X8, [X8]
	152 Move W11, [X9+304]
	153 Move W10, [X8+304]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X8, X31
	156 Move X8, 0x398000
	157 Move X8, [X8+856]
	158 Move X20, [X0]
	159 Move X8, [X8]
	160 Move W9, [X8+224]
	161 Compare W9, 0
	162 JumpIfNotEqual {165}
	163 Move X0, X8
	164 Call 0x1C17DFC
	165 Move X0, X31
	166 Call InitialStyle.get_transitionDelay
	167 Move X8, 0x398000
	168 Move X8, [X8+856]
	169 Move X20, [X0+8]
	170 Move X8, [X8]
	171 Move W9, [X8+224]
	172 Compare W9, 0
	173 JumpIfNotEqual {176}
	174 Move X0, X8
	175 Call 0x1C17DFC
	176 Move X0, X31
	177 Call InitialStyle.get_transitionDuration
	178 Move X8, 0x399000
	179 Move X8, [X8+928]
	180 Move X1, X0
	181 Move X0, X20
	182 Move X2, [X8]
	183 Call StyleValueExtensions.CopyFrom, X0, X1
	184 Move X8, 0x398000
	185 Move X8, [X8+856]
	186 Move X20, [X0+16]
	187 Move X8, [X8]
	188 Move W9, [X8+224]
	189 Compare W9, 0
	190 JumpIfNotEqual {193}
	191 Move X0, X8
	192 Call 0x1C17DFC
	193 Move X0, X31
	194 Call InitialStyle.get_transitionProperty
	195 Move X8, 0x399000
	196 Move X8, [X8+920]
	197 Move X1, X0
	198 Move X0, X20
	199 Move X2, [X8]
	200 Call StyleValueExtensions.CopyFrom, X0, X1
	201 Move X8, 0x398000
	202 Move X8, [X8+856]
	203 Move X20, [X0+24]
	204 Move X8, [X8]
	205 Move W9, [X8+224]
	206 Compare W9, 0
	207 JumpIfNotEqual {210}
	208 Move X0, X8
	209 Call 0x1C17DFC
	210 Move X0, X31
	211 Call InitialStyle.get_transitionTimingFunction
	212 Move X8, 0x399000
	213 Move X8, [X8+912]
	214 Move X1, X0
	215 Move X0, X20
	216 Move X2, [X8]
	217 Call 0x2295EA0, X0, X1
	218 Move X9, [X9+200]
	219 Add X9, X9, X10
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 NotImplemented "Instruction CMP not yet implemented."
	222 NotImplemented "Instruction CSEL not yet implemented."
	223 Move [X0], X8
	224 Move X9, [X9+200]
	225 Add X9, X9, X10
	226 NotImplemented "Instruction LDUR not yet implemented."
	227 NotImplemented "Instruction CMP not yet implemented."
	228 NotImplemented "Instruction CSEL not yet implemented."
	229 Move [X0+8], X8
	230 Move X9, [X9+200]
	231 Add X9, X9, X10
	232 NotImplemented "Instruction LDUR not yet implemented."
	233 NotImplemented "Instruction CMP not yet implemented."
	234 NotImplemented "Instruction CSEL not yet implemented."
	235 Move [X0+16], X8
	236 Move X9, [X9+200]
	237 Add X9, X9, X10
	238 NotImplemented "Instruction LDUR not yet implemented."
	239 NotImplemented "Instruction CMP not yet implemented."
	240 NotImplemented "Instruction CSEL not yet implemented."
	241 Move [X0+24], X8
	242 Move [X19+80], X31
	243 Move X20, [X31+32]
	244 Move X19, [X31+40]
	245 Move X22, [X31+16]
	246 Move X21, [X31+24]
	247 Move X30, [X31+48]
	248 Return 

Method: System.Void ApplyStyleCursor(UnityEngine.UIElements.Cursor cursor)

Disassembly:
	0x03DCDF5C MOV X20, X0
	0x03DCDF60 ADD X0, X19, 0x8
	0x03DCDF64 LDR X1, [X8]
	0x03DCDF68 BL 0x266C920
	0x03DCDF6C LDR X8, [X0 + 0xC8]
	0x03DCDF70 STR X8, [X20 + 0xC8]
	0x03DCDF74 B 0x3DCE454
	0x03DCDF78 ADRP X8, 0x398000
	0x03DCDF7C LDR X8, [X8 + 0x300]
	0x03DCDF80 MOV X0, X20
	0x03DCDF84 LDR X1, [X8]
	0x03DCDF88 BL 0x266C4BC
	0x03DCDF8C ADRP X8, 0x398000
	0x03DCDF90 LDR X8, [X8 + 0x368]
	0x03DCDF94 MOV X20, X0
	0x03DCDF98 MOV X0, X19
	0x03DCDF9C LDR X1, [X8]
	0x03DCDFA0 BL 0x266C4A0
	0x03DCDFA4 LDR X8, [X0 + 0x10]
	0x03DCDFA8 STR X8, [X20 + 0x10]
	0x03DCDFAC B 0x3DCE454
	0x03DCDFB0 ADRP X8, 0x398000
	0x03DCDFB4 LDR X8, [X8 + 0x300]
	0x03DCDFB8 MOV X0, X20
	0x03DCDFBC LDR X1, [X8]
	0x03DCDFC0 BL 0x266C4BC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x61C000
	007 Move X21, 0x399000
	008 Move W8, [X22+424]
	009 Move X21, [X21+776]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x399000
	017 Move X0, [X0+776]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+424], W8
	021 Move X1, [X21]
	022 Add X0, X20, 16
	023 Call StyleDataRef`1<RareData>.Write, X0
	024 Move V0, [X19]
	025 Move X8, [X19+16]
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move [X0], V0
	031 Move [X0+16], X8
	032 Move X30, [X31+48]
	033 Return 

Method: System.Void ApplyStyleTextShadow(UnityEngine.UIElements.TextShadow st)

Disassembly:
	0x03DCDFC4 ADRP X8, 0x398000
	0x03DCDFC8 LDR X8, [X8 + 0x368]
	0x03DCDFCC MOV X20, X0
	0x03DCDFD0 MOV X0, X19
	0x03DCDFD4 LDR X1, [X8]
	0x03DCDFD8 BL 0x266C4A0
	0x03DCDFDC LDR X8, [X0 + 0x18]
	0x03DCDFE0 STR X8, [X20 + 0x18]
	0x03DCDFE4 B 0x3DCE454
	0x03DCDFE8 ADRP X8, 0x398000
	0x03DCDFEC LDR X8, [X8 + 0x300]
	0x03DCDFF0 MOV X0, X20
	0x03DCDFF4 LDR X1, [X8]
	0x03DCDFF8 BL 0x266C4BC
	0x03DCDFFC ADRP X8, 0x398000
	0x03DCE000 LDR X8, [X8 + 0x368]
	0x03DCE004 MOV X20, X0
	0x03DCE008 MOV X0, X19
	0x03DCE00C LDR X1, [X8]
	0x03DCE010 BL 0x266C4A0
	0x03DCE014 LDR V0, [X0 + 0x2]
	0x03DCE018 LDR X8, [X0 + 0x30]
	0x03DCE01C LDR W9, [X0 + 0x38]
	0x03DCE020 STR V0, [X20 + 0x2]
	0x03DCE024 STR X8, [X20 + 0x30]
	0x03DCE028 STR W9, [X20 + 0x38]
	0x03DCE02C B 0x3DCE454
	0x03DCE030 ADRP X8, 0x397000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x61C000
	007 Move X22, 0x399000
	008 Move W8, [X21+425]
	009 Move X22, [X22+768]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x399000
	017 Move X0, [X0+768]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+425], W8
	021 Move X1, [X22]
	022 Move X0, X20
	023 Call 0x266D4BC, X0
	024 Move V0, [X19]
	025 Move X8, [X19+16]
	026 Move W9, [X19+24]
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move [X0+2], V0
	032 Move [X0+48], X8
	033 Move [X0+56], W9
	034 Move X30, [X31+48]
	035 Return 

Method: System.Void ApplyFromComputedStyle(UnityEngine.UIElements.StyleSheets.StylePropertyId id, ref UnityEngine.UIElements.ComputedStyle other)

Disassembly:
	0x03DCE034 LDR X8, [X8 + 0x300]
	0x03DCE038 MOV X0, X20
	0x03DCE03C LDR X1, [X8]
	0x03DCE040 BL 0x266C4BC
	0x03DCE044 ADRP X8, 0x397000
	0x03DCE048 LDR X8, [X8 + 0x368]
	0x03DCE04C MOV X20, X0
	0x03DCE050 MOV X0, X19
	0x03DCE054 LDR X1, [X8]
	0x03DCE058 BL 0x266C4A0
	0x03DCE05C LDR X8, [X0 + 0x40]
	0x03DCE060 STR X8, [X20 + 0x40]
	0x03DCE064 B 0x3DCE454
	0x03DCE068 ADRP X8, 0x397000
	0x03DCE06C LDR X8, [X8 + 0x300]
	0x03DCE070 MOV X0, X20
	0x03DCE074 LDR X1, [X8]
	0x03DCE078 BL 0x266C4BC
	0x03DCE07C ADRP X8, 0x397000
	0x03DCE080 LDR X8, [X8 + 0x368]
	0x03DCE084 MOV X20, X0
	0x03DCE088 MOV X0, X19
	0x03DCE08C LDR X1, [X8]
	0x03DCE090 BL 0x266C4A0
	0x03DCE094 LDUR V0, [X0 + 0x48]
	0x03DCE098 STUR V0, [X20 + 0x48]
	0x03DCE09C B 0x3DCE454
	0x03DCE0A0 ADRP X8, 0x397000
	0x03DCE0A4 LDR X8, [X8 + 0x300]
	0x03DCE0A8 MOV X0, X20
	0x03DCE0AC LDR X1, [X8]
	0x03DCE0B0 BL 0x266C4BC
	0x03DCE0B4 ADRP X8, 0x397000
	0x03DCE0B8 LDR X8, [X8 + 0x368]
	0x03DCE0BC MOV X20, X0
	0x03DCE0C0 MOV X0, X19
	0x03DCE0C4 LDR X1, [X8]
	0x03DCE0C8 BL 0x266C4A0
	0x03DCE0CC LDR W8, [X0 + 0x58]
	0x03DCE0D0 STR W8, [X20 + 0x58]
	0x03DCE0D4 B 0x3DCE454
	0x03DCE0D8 ADRP X8, 0x397000
	0x03DCE0DC LDR X8, [X8 + 0x300]
	0x03DCE0E0 MOV X0, X20
	0x03DCE0E4 LDR X1, [X8]
	0x03DCE0E8 BL 0x266C4BC
	0x03DCE0EC ADRP X8, 0x397000
	0x03DCE0F0 LDR X8, [X8 + 0x368]
	0x03DCE0F4 MOV X20, X0
	0x03DCE0F8 MOV X0, X19
	0x03DCE0FC LDR X1, [X8]
	0x03DCE100 BL 0x266C4A0
	0x03DCE104 LDUR X8, [X0 + 0x5C]
	0x03DCE108 STUR X8, [X20 + 0x5C]
	0x03DCE10C B 0x3DCE454
	0x03DCE110 ADRP X8, 0x397000
	0x03DCE114 LDR X8, [X8 + 0x300]
	0x03DCE118 MOV X0, X20
	0x03DCE11C LDR X1, [X8]
	0x03DCE120 BL 0x266C4BC
	0x03DCE124 ADRP X8, 0x397000
	0x03DCE128 LDR X8, [X8 + 0x368]
	0x03DCE12C MOV X20, X0
	0x03DCE130 MOV X0, X19
	0x03DCE134 LDR X1, [X8]
	0x03DCE138 BL 0x266C4A0
	0x03DCE13C LDR W8, [X0 + 0x64]
	0x03DCE140 STR W8, [X20 + 0x64]
	0x03DCE144 B 0x3DCE454
	0x03DCE148 ADRP X8, 0x397000
	0x03DCE14C LDR X8, [X8 + 0x300]
	0x03DCE150 MOV X0, X20
	0x03DCE154 LDR X1, [X8]
	0x03DCE158 BL 0x266C4BC
	0x03DCE15C ADRP X8, 0x397000
	0x03DCE160 LDR X8, [X8 + 0x368]
	0x03DCE164 MOV X20, X0
	0x03DCE168 MOV X0, X19
	0x03DCE16C LDR X1, [X8]
	0x03DCE170 BL 0x266C4A0
	0x03DCE174 LDUR V0, [X0 + 0x68]
	0x03DCE178 STUR V0, [X20 + 0x68]
	0x03DCE17C B 0x3DCE454
	0x03DCE180 ADRP X8, 0x397000
	0x03DCE184 LDR X8, [X8 + 0x300]
	0x03DCE188 MOV X0, X20
	0x03DCE18C LDR X1, [X8]
	0x03DCE190 BL 0x266C4BC
	0x03DCE194 ADRP X8, 0x397000
	0x03DCE198 LDR X8, [X8 + 0x368]
	0x03DCE19C MOV X20, X0
	0x03DCE1A0 MOV X0, X19
	0x03DCE1A4 LDR X1, [X8]
	0x03DCE1A8 BL 0x266C4A0
	0x03DCE1AC LDR V0, [X0 + 0x78]
	0x03DCE1B0 STR S0, [X20 + 0x78]
	0x03DCE1B4 B 0x3DCE454
	0x03DCE1B8 ADRP X8, 0x397000
	0x03DCE1BC LDR X8, [X8 + 0x300]
	0x03DCE1C0 MOV X0, X20
	0x03DCE1C4 LDR X1, [X8]
	0x03DCE1C8 BL 0x266C4BC
	0x03DCE1CC ADRP X8, 0x397000
	0x03DCE1D0 LDR X8, [X8 + 0x368]
	0x03DCE1D4 MOV X20, X0
	0x03DCE1D8 MOV X0, X19
	0x03DCE1DC LDR X1, [X8]
	0x03DCE1E0 BL 0x266C4A0
	0x03DCE1E4 LDR W8, [X0 + 0x7C]
	0x03DCE1E8 STR W8, [X20 + 0x7C]
	0x03DCE1EC B 0x3DCE454
	0x03DCE1F0 ADRP X8, 0x397000
	0x03DCE1F4 LDR X8, [X8 + 0x300]
	0x03DCE1F8 MOV X0, X20
	0x03DCE1FC LDR X1, [X8]
	0x03DCE200 BL 0x266C4BC
	0x03DCE204 ADRP X8, 0x397000
	0x03DCE208 LDR X8, [X8 + 0x368]
	0x03DCE20C MOV X20, X0
	0x03DCE210 MOV X0, X19
	0x03DCE214 LDR X1, [X8]
	0x03DCE218 BL 0x266C4A0
	0x03DCE21C LDR W8, [X0 + 0x80]
	0x03DCE220 STR W8, [X20 + 0x80]
	0x03DCE224 B 0x3DCE454
	0x03DCE228 ADRP X8, 0x397000
	0x03DCE22C LDR X8, [X8 + 0x300]
	0x03DCE230 MOV X0, X20
	0x03DCE234 LDR X1, [X8]
	0x03DCE238 BL 0x266C4BC
	0x03DCE23C ADRP X8, 0x397000
	0x03DCE240 LDR X8, [X8 + 0x368]
	0x03DCE244 MOV X20, X0
	0x03DCE248 MOV X0, X19
	0x03DCE24C LDR X1, [X8]
	0x03DCE250 BL 0x266C4A0
	0x03DCE254 LDUR X8, [X0 + 0x84]
	0x03DCE258 STUR X8, [X20 + 0x84]
	0x03DCE25C B 0x3DCE454
	0x03DCE260 ADRP X8, 0x397000
	0x03DCE264 LDR X8, [X8 + 0x308]
	0x03DCE268 ADD X0, X20, 0x10
	0x03DCE26C LDR X1, [X8]
	0x03DCE270 BL 0x266CDBC
	0x03DCE274 ADRP X8, 0x397000
	0x03DCE278 LDR X8, [X8 + 0x370]
	0x03DCE27C MOV X20, X0
	0x03DCE280 ADD X0, X19, 0x10
	0x03DCE284 LDR X1, [X8]
	0x03DCE288 BL 0x266CDA0
	0x03DCE28C LDR W8, [X0 + 0x18]
	0x03DCE290 STR W8, [X20 + 0x18]
	0x03DCE294 B 0x3DCE454
	0x03DCE298 ADRP X8, 0x397000
	0x03DCE29C LDR X8, [X8 + 0x308]
	0x03DCE2A0 ADD X0, X20, 0x10
	0x03DCE2A4 LDR X1, [X8]
	0x03DCE2A8 BL 0x266CDBC
	0x03DCE2AC ADRP X8, 0x397000
	0x03DCE2B0 LDR X8, [X8 + 0x370]
	0x03DCE2B4 MOV X20, X0
	0x03DCE2B8 ADD X0, X19, 0x10
	0x03DCE2BC LDR X1, [X8]
	0x03DCE2C0 BL 0x266CDA0
	0x03DCE2C4 LDUR V0, [X0 + 0x1C]
	0x03DCE2C8 STUR V0, [X20 + 0x1C]
	0x03DCE2CC B 0x3DCE454
	0x03DCE2D0 ADRP X8, 0x397000
	0x03DCE2D4 LDR X8, [X8 + 0x308]
	0x03DCE2D8 ADD X0, X20, 0x10
	0x03DCE2DC LDR X1, [X8]
	0x03DCE2E0 BL 0x266CDBC
	0x03DCE2E4 ADRP X8, 0x397000
	0x03DCE2E8 LDR X8, [X8 + 0x370]
	0x03DCE2EC MOV X20, X0
	0x03DCE2F0 ADD X0, X19, 0x10
	0x03DCE2F4 LDR X1, [X8]
	0x03DCE2F8 BL 0x266CDA0
	0x03DCE2FC LDR W8, [X0 + 0x2C]
	0x03DCE300 STR W8, [X20 + 0x2C]
	0x03DCE304 B 0x3DCE454
	0x03DCE308 ADRP X8, 0x397000
	0x03DCE30C LDR X8, [X8 + 0x308]
	0x03DCE310 ADD X0, X20, 0x10
	0x03DCE314 LDR X1, [X8]
	0x03DCE318 BL 0x266CDBC
	0x03DCE31C ADRP X8, 0x397000
	0x03DCE320 LDR X8, [X8 + 0x370]
	0x03DCE324 MOV X20, X0
	0x03DCE328 ADD X0, X19, 0x10
	0x03DCE32C LDR X1, [X8]
	0x03DCE330 BL 0x266CDA0
	0x03DCE334 LDR W8, [X0 + 0x30]
	0x03DCE338 STR W8, [X20 + 0x30]
	0x03DCE33C B 0x3DCE454
	0x03DCE340 ADRP X8, 0x397000
	0x03DCE344 LDR X8, [X8 + 0x308]
	0x03DCE348 ADD X0, X20, 0x10
	0x03DCE34C LDR X1, [X8]
	0x03DCE350 BL 0x266CDBC
	0x03DCE354 ADRP X8, 0x397000
	0x03DCE358 LDR X8, [X8 + 0x370]
	0x03DCE35C MOV X20, X0
	0x03DCE360 ADD X0, X19, 0x10
	0x03DCE364 LDR X1, [X8]
	0x03DCE368 BL 0x266CDA0
	0x03DCE36C LDR W8, [X0 + 0x34]
	0x03DCE370 STR W8, [X20 + 0x34]
	0x03DCE374 B 0x3DCE454
	0x03DCE378 ADRP X8, 0x397000
	0x03DCE37C LDR X8, [X8 + 0x308]
	0x03DCE380 ADD X0, X20, 0x10
	0x03DCE384 LDR X1, [X8]
	0x03DCE388 BL 0x266CDBC
	0x03DCE38C ADRP X8, 0x397000
	0x03DCE390 LDR X8, [X8 + 0x370]
	0x03DCE394 MOV X20, X0
	0x03DCE398 ADD X0, X19, 0x10
	0x03DCE39C LDR X1, [X8]
	0x03DCE3A0 BL 0x266CDA0
	0x03DCE3A4 LDR W8, [X0 + 0x38]
	0x03DCE3A8 STR W8, [X20 + 0x38]
	0x03DCE3AC B 0x3DCE454
	0x03DCE3B0 ADRP X8, 0x397000
	0x03DCE3B4 LDR X8, [X8 + 0x308]
	0x03DCE3B8 ADD X0, X20, 0x10
	0x03DCE3BC LDR X1, [X8]
	0x03DCE3C0 BL 0x266CDBC
	0x03DCE3C4 ADRP X8, 0x397000
	0x03DCE3C8 LDR X8, [X8 + 0x370]
	0x03DCE3CC MOV X20, X0
	0x03DCE3D0 ADD X0, X19, 0x10
	0x03DCE3D4 LDR X1, [X8]
	0x03DCE3D8 BL 0x266CDA0
	0x03DCE3DC LDR V0, [X0 + 0x3C]
	0x03DCE3E0 STR S0, [X20 + 0x3C]
	0x03DCE3E4 B 0x3DCE454
	0x03DCE3E8 ADRP X8, 0x397000
	0x03DCE3EC LDR X8, [X8 + 0x308]
	0x03DCE3F0 ADD X0, X20, 0x10
	0x03DCE3F4 LDR X1, [X8]
	0x03DCE3F8 BL 0x266CDBC
	0x03DCE3FC ADRP X8, 0x397000
	0x03DCE400 LDR X8, [X8 + 0x370]
	0x03DCE404 MOV X20, X0
	0x03DCE408 ADD X0, X19, 0x10
	0x03DCE40C LDR X1, [X8]
	0x03DCE410 BL 0x266CDA0
	0x03DCE414 LDR W8, [X0 + 0x40]
	0x03DCE418 STR W8, [X20 + 0x40]
	0x03DCE41C B 0x3DCE454
	0x03DCE420 ADRP X8, 0x397000
	0x03DCE424 LDR X8, [X8 + 0x308]
	0x03DCE428 ADD X0, X20, 0x10
	0x03DCE42C LDR X1, [X8]
	0x03DCE430 BL 0x266CDBC
	0x03DCE434 ADRP X8, 0x397000
	0x03DCE438 LDR X8, [X8 + 0x370]
	0x03DCE43C MOV X20, X0
	0x03DCE440 ADD X0, X19, 0x10
	0x03DCE444 LDR X1, [X8]
	0x03DCE448 BL 0x266CDA0
	0x03DCE44C LDR W8, [X0 + 0x44]
	0x03DCE450 STR W8, [X20 + 0x44]
	0x03DCE454 LDP X20, X19, [X31 + 0x20]
	0x03DCE458 LDP X22, X21, [X31 + 0x10]
	0x03DCE45C LDR X30, [X31], #0x30
	0x03DCE460 RET
	0x03DCE464 SUB X31, X31, 0x50
	0x03DCE468 STP X30, X23, [X31 + 0x20]
	0x03DCE46C STP X22, X21, [X31 + 0x30]
	0x03DCE470 STP X20, X19, [X31 + 0x40]
	0x03DCE474 ADRP X23, 0x61A000
	0x03DCE478 LDRB W8, [X23 + 0x1AB]
	0x03DCE47C MOV X20, X3
	0x03DCE480 MOV W22, W2
	0x03DCE484 MOV X19, X1
	0x03DCE488 MOV X21, X0
	0x03DCE48C TBNZ X8, 0x0, 0x3DCE4BC
	0x03DCE490 ADRP X0, 0x397000
	0x03DCE494 LDR X0, [X0 + 0x300]
	0x03DCE498 BL 0x1C16CF4
	0x03DCE49C ADRP X0, 0x397000
	0x03DCE4A0 LDR X0, [X0 + 0x2F8]
	0x03DCE4A4 BL 0x1C16CF4
	0x03DCE4A8 ADRP X0, 0x397000
	0x03DCE4AC LDR X0, [X0 + 0x2F0]
	0x03DCE4B0 BL 0x1C16CF4
	0x03DCE4B4 MOVZ W8, 0x1
	0x03DCE4B8 STRB W8, [X23 + 0x1AB]
	0x03DCE4BC MOVZ W8, 0x7
	0x03DCE4C0 MOVK W8, 0x10000
	0x03DCE4C4 CMP W22, W8
	0x03DCE4C8 B.LE 0x3DCE53C
	0x03DCE4CC MOVZ W8, 0xFFF9
	0x03DCE4D0 MOVK W8, 0xFFFD0000
	0x03DCE4D4 ADD W8, W22, W8
	0x03DCE4D8 CMP W8, 0x19
	0x03DCE4DC B.HI 0x3DCE5CC
	0x03DCE4E0 ADRP X9, 0xFFFFFFFFFCDCA000
	0x03DCE4E4 ADD X9, X9, 0x300
	0x03DCE4E8 ADR X10, 0x10
	0x03DCE4EC LDRH W11, [X9, X8, LSL #1]
	0x03DCE4F0 ADD X10, X10, X11, 0x2, LSL
	0x03DCE4F4 BR X10
	0x03DCE4F8 ADRP X8, 0x397000
	0x03DCE4FC LDR X8, [X8 + 0x2F0]
	0x03DCE500 ADD X0, X21, 0x8
	0x03DCE504 LDR X1, [X8]
	0x03DCE508 BL 0x266C93C
	0x03DCE50C STUR X20, [X0 + 0x1C]
	0x03DCE510 CBZ X19, 0x3DCEB48
	0x03DCE514 LDR X21, [X19 + 0x2B8]
	0x03DCE518 MOV X0, X20
	0x03DCE51C MOV X1, X31
	0x03DCE520 BL 0x3DFFF30
	0x03DCE524 CBZ X21, 0x3DCEB48
	0x03DCE528 MOV X1, X0
	0x03DCE52C MOV X0, X21
	0x03DCE530 MOV X2, X31
	0x03DCE534 BL 0x3CE66C8
	0x03DCE538 B 0x3DCEB0C
	0x03DCE53C ORR W8, W31, 0x10001
	0x03DCE540 CMP W22, W8
	0x03DCE544 B.EQ 0x3DCE588
	0x03DCE548 MOVZ W8, 0x2
	0x03DCE54C MOVK W8, 0x10000
	0x03DCE550 CMP W22, W8
	0x03DCE554 B.EQ 0x3DCE5A8
	0x03DCE558 MOVZ W8, 0x7
	0x03DCE55C MOVK W8, 0x10000
	0x03DCE560 CMP W22, W8
	0x03DCE564 B.NE 0x3DCEB90
	0x03DCE568 ADRP X8, 0x397000
	0x03DCE56C LDR X8, [X8 + 0x300]
	0x03DCE570 MOV X0, X21
	0x03DCE574 LDR X1, [X8]
	0x03DCE578 BL 0x266C4BC
	0x03DCE57C STUR X20, [X0 + 0x5C]
	0x03DCE580 CBNZ X19, 0x3DCE5C4
	0x03DCE584 B 0x3DCEB48
	0x03DCE588 ADRP X8, 0x397000
	0x03DCE58C LDR X8, [X8 + 0x300]
	0x03DCE590 MOV X0, X21
	0x03DCE594 LDR X1, [X8]
	0x03DCE598 BL 0x266C4BC
	0x03DCE59C STR X20, [X0 + 0x10]
	0x03DCE5A0 CBNZ X19, 0x3DCE5C4
	0x03DCE5A4 B 0x3DCEB48
	0x03DCE5A8 ADRP X8, 0x397000
	0x03DCE5AC LDR X8, [X8 + 0x300]
	0x03DCE5B0 MOV X0, X21
	0x03DCE5B4 LDR X1, [X8]
	0x03DCE5B8 BL 0x266C4BC
	0x03DCE5BC STR X20, [X0 + 0x18]
	0x03DCE5C0 CBZ X19, 0x3DCEB48
	0x03DCE5C4 MOVZ W1, 0x818
	0x03DCE5C8 B 0x3DCEB10
	0x03DCE5CC MOVZ W8, 0xFFF9
	0x03DCE5D0 MOVK W8, 0xFFF80000
	0x03DCE5D4 ADD W8, W22, W8
	0x03DCE5D8 CMP W8, 0x6
	0x03DCE5DC B.HI 0x3DCE618
	0x03DCE5E0 ADRP X9, 0xFFFFFFFFFCDCA000
	0x03DCE5E4 ADD X9, X9, 0x334
	0x03DCE5E8 ADR X10, 0x10
	0x03DCE5EC LDRH W11, [X9, X8, LSL #1]
	0x03DCE5F0 ADD X10, X10, X11, 0x2, LSL
	0x03DCE5F4 BR X10
	0x03DCE5F8 ADRP X8, 0x397000
	0x03DCE5FC LDR X8, [X8 + 0x2F8]
	0x03DCE600 ADD X0, X21, 0x28
	0x03DCE604 LDR X1, [X8]
	0x03DCE608 BL 0x266DB34
	0x03DCE60C STUR X20, [X0 + 0x74]
	0x03DCE610 CBNZ X19, 0x3DCEB68
	0x03DCE614 B 0x3DCEB48
	0x03DCE618 MOVZ W8, 0xD
	0x03DCE61C MOVK W8, 0x10000
	0x03DCE620 CMP W22, W8
	0x03DCE624 B.NE 0x3DCEB90
	0x03DCE628 ADRP X8, 0x397000
	0x03DCE62C LDR X8, [X8 + 0x300]
	0x03DCE630 MOV X0, X21
	0x03DCE634 LDR X1, [X8]
	0x03DCE638 BL 0x266C4BC
	0x03DCE63C STUR X20, [X0 + 0x84]
	0x03DCE640 CBNZ X19, 0x3DCE5C4
	0x03DCE644 B 0x3DCEB48
	0x03DCE648 ADRP X8, 0x397000
	0x03DCE64C LDR X8, [X8 + 0x2F0]
	0x03DCE650 ADD X0, X21, 0x8
	0x03DCE654 LDR X1, [X8]
	0x03DCE658 BL 0x266C93C
	0x03DCE65C STR X20, [X0 + 0x28]
	0x03DCE660 CBZ X19, 0x3DCEB48
	0x03DCE664 LDR X21, [X19 + 0x2B8]
	0x03DCE668 MOV X0, X20
	0x03DCE66C MOV X1, X31
	0x03DCE670 BL 0x3DFFF30
	0x03DCE674 CBZ X21, 0x3DCEB48
	0x03DCE678 MOV X1, X0
	0x03DCE67C MOV X0, X21
	0x03DCE680 MOV X2, X31
	0x03DCE684 BL 0x3CE7344
	0x03DCE688 B 0x3DCEB0C
	0x03DCE68C ADRP X8, 0x397000
	0x03DCE690 LDR X8, [X8 + 0x2F0]
	0x03DCE694 ADD X0, X21, 0x8
	0x03DCE698 LDR X1, [X8]
	0x03DCE69C BL 0x266C93C
	0x03DCE6A0 STR X20, [X0 + 0x40]
	0x03DCE6A4 CBZ X19, 0x3DCEB48
	0x03DCE6A8 LDR X21, [X19 + 0x2B8]
	0x03DCE6AC MOV X0, X20
	0x03DCE6B0 MOV X1, X31
	0x03DCE6B4 BL 0x3DFFF30
	0x03DCE6B8 CBZ X21, 0x3DCEB48
	0x03DCE6BC MOV X1, X0
	0x03DCE6C0 MOV X0, X21
	0x03DCE6C4 MOV X2, X31
	0x03DCE6C8 BL 0x3CE74BC
	0x03DCE6CC B 0x3DCEB0C
	0x03DCE6D0 ADRP X8, 0x397000
	0x03DCE6D4 LDR X8, [X8 + 0x2F0]
	0x03DCE6D8 ADD X0, X21, 0x8
	0x03DCE6DC LDR X1, [X8]
	0x03DCE6E0 BL 0x266C93C
	0x03DCE6E4 STUR X20, [X0 + 0x4C]
	0x03DCE6E8 CBZ X19, 0x3DCEB48
	0x03DCE6EC LDR X21, [X19 + 0x2B8]
	0x03DCE6F0 MOV X0, X20
	0x03DCE6F4 MOV X1, X31
	0x03DCE6F8 BL 0x3DFFF30
	0x03DCE6FC CBZ X21, 0x3DCEB48
	0x03DCE700 MOV X1, X0
	0x03DCE704 MOV X0, X21
	0x03DCE708 MOV X2, X31
	0x03DCE70C BL 0x3CE6620
	0x03DCE710 B 0x3DCEB0C
	0x03DCE714 ADRP X8, 0x397000
	0x03DCE718 LDR X8, [X8 + 0x2F0]
	0x03DCE71C ADD X0, X21, 0x8
	0x03DCE720 LDR X1, [X8]
	0x03DCE724 BL 0x266C93C
	0x03DCE728 STUR X20, [X0 + 0x54]
	0x03DCE72C CBZ X19, 0x3DCEB48
	0x03DCE730 LDR X21, [X19 + 0x2B8]
	0x03DCE734 MOV X0, X20
	0x03DCE738 MOV X1, X31
	0x03DCE73C BL 0x3DFFF30
	0x03DCE740 CBZ X21, 0x3DCEB48
	0x03DCE744 MOV X1, X0
	0x03DCE748 MOV X0, X21
	0x03DCE74C MOV X2, X31
	0x03DCE750 BL 0x3CE67D0
	0x03DCE754 B 0x3DCEB0C
	0x03DCE758 ADRP X8, 0x397000
	0x03DCE75C LDR X8, [X8 + 0x2F0]
	0x03DCE760 ADD X0, X21, 0x8
	0x03DCE764 LDR X1, [X8]
	0x03DCE768 BL 0x266C93C
	0x03DCE76C STUR X20, [X0 + 0x5C]
	0x03DCE770 CBZ X19, 0x3DCEB48
	0x03DCE774 LDR X21, [X19 + 0x2B8]
	0x03DCE778 MOV X0, X20
	0x03DCE77C MOV X1, X31
	0x03DCE780 BL 0x3DFFF30
	0x03DCE784 CBZ X21, 0x3DCEB48
	0x03DCE788 MOV X1, X0
	0x03DCE78C MOV X0, X21
	0x03DCE790 MOV X2, X31
	0x03DCE794 BL 0x3CE66E4
	0x03DCE798 B 0x3DCEB0C
	0x03DCE79C ADRP X8, 0x397000
	0x03DCE7A0 LDR X8, [X8 + 0x2F0]
	0x03DCE7A4 ADD X0, X21, 0x8
	0x03DCE7A8 LDR X1, [X8]
	0x03DCE7AC BL 0x266C93C
	0x03DCE7B0 STUR X20, [X0 + 0x64]
	0x03DCE7B4 CBZ X19, 0x3DCEB48
	0x03DCE7B8 LDR X21, [X19 + 0x2B8]
	0x03DCE7BC MOV X0, X20
	0x03DCE7C0 MOV X1, X31
	0x03DCE7C4 BL 0x3DFFF30
	0x03DCE7C8 CBZ X21, 0x3DCEB48
	0x03DCE7CC MOV X1, X0
	0x03DCE7D0 MOV X0, X21
	0x03DCE7D4 MOV X2, X31
	0x03DCE7D8 BL 0x3CE67C4
	0x03DCE7DC B 0x3DCEB0C
	0x03DCE7E0 ADRP X8, 0x397000
	0x03DCE7E4 LDR X8, [X8 + 0x2F0]
	0x03DCE7E8 ADD X0, X21, 0x8
	0x03DCE7EC LDR X1, [X8]
	0x03DCE7F0 BL 0x266C93C
	0x03DCE7F4 STUR X20, [X0 + 0x6C]
	0x03DCE7F8 CBZ X19, 0x3DCEB48
	0x03DCE7FC LDR X21, [X19 + 0x2B8]
	0x03DCE800 MOV X0, X20
	0x03DCE804 MOV X1, X31
	0x03DCE808 BL 0x3DFFF30
	0x03DCE80C CBZ X21, 0x3DCEB48
	0x03DCE810 MOV X1, X0
	0x03DCE814 MOV X0, X21
	0x03DCE818 MOV X2, X31
	0x03DCE81C BL 0x3CE67B8
	0x03DCE820 B 0x3DCEB0C
	0x03DCE824 ADRP X8, 0x397000
	0x03DCE828 LDR X8, [X8 + 0x2F0]
	0x03DCE82C ADD X0, X21, 0x8
	0x03DCE830 LDR X1, [X8]
	0x03DCE834 BL 0x266C93C
	0x03DCE838 STUR X20, [X0 + 0x74]
	0x03DCE83C CBZ X19, 0x3DCEB48
	0x03DCE840 LDR X21, [X19 + 0x2B8]
	0x03DCE844 MOV X0, X20
	0x03DCE848 MOV X1, X31
	0x03DCE84C BL 0x3DFFF30
	0x03DCE850 CBZ X21, 0x3DCEB48
	0x03DCE854 MOV X1, X0
	0x03DCE858 MOV X0, X21
	0x03DCE85C MOV X2, X31
	0x03DCE860 BL 0x3CE75F4
	0x03DCE864 B 0x3DCEB0C
	0x03DCE868 ADRP X8, 0x397000
	0x03DCE86C LDR X8, [X8 + 0x2F0]
	0x03DCE870 ADD X0, X21, 0x8
	0x03DCE874 LDR X1, [X8]
	0x03DCE878 BL 0x266C93C
	0x03DCE87C STUR X20, [X0 + 0x7C]
	0x03DCE880 CBZ X19, 0x3DCEB48
	0x03DCE884 LDR X21, [X19 + 0x2B8]
	0x03DCE888 MOV X0, X20
	0x03DCE88C MOV X1, X31
	0x03DCE890 BL 0x3DFFF30
	0x03DCE894 CBZ X21, 0x3DCEB48
	0x03DCE898 MOV X1, X0
	0x03DCE89C MOV X0, X21
	0x03DCE8A0 MOV X2, X31
	0x03DCE8A4 BL 0x3CE7578
	0x03DCE8A8 B 0x3DCEB0C
	0x03DCE8AC ADRP X8, 0x397000
	0x03DCE8B0 LDR X8, [X8 + 0x2F0]
	0x03DCE8B4 ADD X0, X21, 0x8
	0x03DCE8B8 LDR X1, [X8]
	0x03DCE8BC BL 0x266C93C
	0x03DCE8C0 STUR X20, [X0 + 0x84]
	0x03DCE8C4 CBZ X19, 0x3DCEB48
	0x03DCE8C8 LDR X21, [X19 + 0x2B8]
	0x03DCE8CC MOV X0, X20
	0x03DCE8D0 MOV X1, X31
	0x03DCE8D4 BL 0x3DFFF30
	0x03DCE8D8 CBZ X21, 0x3DCEB48
	0x03DCE8DC MOV X1, X0
	0x03DCE8E0 MOV X0, X21
	0x03DCE8E4 MOV X2, X31
	0x03DCE8E8 BL 0x3CE76EC
	0x03DCE8EC B 0x3DCEB0C
	0x03DCE8F0 ADRP X8, 0x397000
	0x03DCE8F4 LDR X8, [X8 + 0x2F0]
	0x03DCE8F8 ADD X0, X21, 0x8
	0x03DCE8FC LDR X1, [X8]
	0x03DCE900 BL 0x266C93C
	0x03DCE904 STUR X20, [X0 + 0x8C]
	0x03DCE908 CBZ X19, 0x3DCEB48
	0x03DCE90C LDR X21, [X19 + 0x2B8]
	0x03DCE910 MOV X0, X20
	0x03DCE914 MOV X1, X31
	0x03DCE918 BL 0x3DFFF30
	0x03DCE91C CBZ X21, 0x3DCEB48
	0x03DCE920 MOV X1, X0
	0x03DCE924 MOV X0, X21
	0x03DCE928 MOV X2, X31
	0x03DCE92C BL 0x3CE7670
	0x03DCE930 B 0x3DCEB0C
	0x03DCE934 ADRP X8, 0x397000
	0x03DCE938 LDR X8, [X8 + 0x2F0]
	0x03DCE93C ADD X0, X21, 0x8
	0x03DCE940 LDR X1, [X8]
	0x03DCE944 BL 0x266C93C
	0x03DCE948 STUR X20, [X0 + 0x94]
	0x03DCE94C CBZ X19, 0x3DCEB48
	0x03DCE950 LDR X21, [X19 + 0x2B8]
	0x03DCE954 MOV X0, X20
	0x03DCE958 MOV X1, X31
	0x03DCE95C BL 0x3DFFF30
	0x03DCE960 CBZ X21, 0x3DCEB48
	0x03DCE964 MOV X1, X0
	0x03DCE968 MOV X0, X21
	0x03DCE96C MOV X2, X31
	0x03DCE970 BL 0x3CE6884
	0x03DCE974 B 0x3DCEB0C
	0x03DCE978 ADRP X8, 0x397000
	0x03DCE97C LDR X8, [X8 + 0x2F0]
	0x03DCE980 ADD X0, X21, 0x8
	0x03DCE984 LDR X1, [X8]
	0x03DCE988 BL 0x266C93C
	0x03DCE98C STUR X20, [X0 + 0x9C]
	0x03DCE990 CBZ X19, 0x3DCEB48
	0x03DCE994 LDR X21, [X19 + 0x2B8]
	0x03DCE998 MOV X0, X20
	0x03DCE99C MOV X1, X31
	0x03DCE9A0 BL 0x3DFFF30
	0x03DCE9A4 CBZ X21, 0x3DCEB48
	0x03DCE9A8 MOV X1, X0
	0x03DCE9AC MOV X0, X21
	0x03DCE9B0 MOV X2, X31
	0x03DCE9B4 BL 0x3CE67DC
	0x03DCE9B8 B 0x3DCEB0C
	0x03DCE9BC ADRP X8, 0x397000
	0x03DCE9C0 LDR X8, [X8 + 0x2F0]
	0x03DCE9C4 ADD X0, X21, 0x8
	0x03DCE9C8 LDR X1, [X8]
	0x03DCE9CC BL 0x266C93C
	0x03DCE9D0 STUR X20, [X0 + 0xA4]
	0x03DCE9D4 CBZ X19, 0x3DCEB48
	0x03DCE9D8 LDR X21, [X19 + 0x2B8]
	0x03DCE9DC MOV X0, X20
	0x03DCE9E0 MOV X1, X31
	0x03DCE9E4 BL 0x3DFFF30
	0x03DCE9E8 CBZ X21, 0x3DCEB48
	0x03DCE9EC MOV X1, X0
	0x03DCE9F0 MOV X0, X21
	0x03DCE9F4 MOV X2, X31
	0x03DCE9F8 BL 0x3CE6878
	0x03DCE9FC B 0x3DCEB0C
	0x03DCEA00 ADRP X8, 0x397000
	0x03DCEA04 LDR X8, [X8 + 0x2F0]
	0x03DCEA08 ADD X0, X21, 0x8
	0x03DCEA0C LDR X1, [X8]
	0x03DCEA10 BL 0x266C93C
	0x03DCEA14 STUR X20, [X0 + 0xAC]
	0x03DCEA18 CBZ X19, 0x3DCEB48
	0x03DCEA1C LDR X21, [X19 + 0x2B8]
	0x03DCEA20 MOV X0, X20
	0x03DCEA24 MOV X1, X31
	0x03DCEA28 BL 0x3DFFF30
	0x03DCEA2C CBZ X21, 0x3DCEB48
	0x03DCEA30 MOV X1, X0
	0x03DCEA34 MOV X0, X21
	0x03DCEA38 MOV X2, X31
	0x03DCEA3C BL 0x3CE686C
	0x03DCEA40 B 0x3DCEB0C
	0x03DCEA44 ADRP X8, 0x397000
	0x03DCEA48 LDR X8, [X8 + 0x2F0]
	0x03DCEA4C ADD X0, X21, 0x8
	0x03DCEA50 LDR X1, [X8]
	0x03DCEA54 BL 0x266C93C
	0x03DCEA58 STR X20, [X0 + 0xB8]
	0x03DCEA5C CBZ X19, 0x3DCEB48
	0x03DCEA60 LDR X21, [X19 + 0x2B8]
	0x03DCEA64 MOV X0, X20
	0x03DCEA68 MOV X1, X31
	0x03DCEA6C BL 0x3DFFF30
	0x03DCEA70 CBZ X21, 0x3DCEB48
	0x03DCEA74 MOV X1, X0
	0x03DCEA78 MOV X0, X21
	0x03DCEA7C MOV X2, X31
	0x03DCEA80 BL 0x3CE66BC
	0x03DCEA84 B 0x3DCEB0C
	0x03DCEA88 ADRP X8, 0x397000
	0x03DCEA8C LDR X8, [X8 + 0x2F0]
	0x03DCEA90 ADD X0, X21, 0x8
	0x03DCEA94 LDR X1, [X8]
	0x03DCEA98 BL 0x266C93C
	0x03DCEA9C STR X20, [X0 + 0xC0]
	0x03DCEAA0 CBZ X19, 0x3DCEB48
	0x03DCEAA4 LDR X21, [X19 + 0x2B8]
	0x03DCEAA8 MOV X0, X20
	0x03DCEAAC MOV X1, X31
	0x03DCEAB0 BL 0x3DFFF30
	0x03DCEAB4 CBZ X21, 0x3DCEB48
	0x03DCEAB8 MOV X1, X0
	0x03DCEABC MOV X0, X21
	0x03DCEAC0 MOV X2, X31
	0x03DCEAC4 BL 0x3CE66B0
	0x03DCEAC8 B 0x3DCEB0C
	0x03DCEACC ADRP X8, 0x397000
	0x03DCEAD0 LDR X8, [X8 + 0x2F0]
	0x03DCEAD4 ADD X0, X21, 0x8
	0x03DCEAD8 LDR X1, [X8]
	0x03DCEADC BL 0x266C93C
	0x03DCEAE0 STR X20, [X0 + 0xC8]
	0x03DCEAE4 CBZ X19, 0x3DCEB48
	0x03DCEAE8 LDR X21, [X19 + 0x2B8]
	0x03DCEAEC MOV X0, X20
	0x03DCEAF0 MOV X1, X31
	0x03DCEAF4 BL 0x3DFFF30
	0x03DCEAF8 CBZ X21, 0x3DCEB48
	0x03DCEAFC MOV X1, X0
	0x03DCEB00 MOV X0, X21
	0x03DCEB04 MOV X2, X31
	0x03DCEB08 BL 0x3CE7400
	0x03DCEB0C MOVZ W1, 0x8
	0x03DCEB10 MOV X0, X19
	0x03DCEB14 LDP X20, X19, [X31 + 0x40]
	0x03DCEB18 LDP X22, X21, [X31 + 0x30]
	0x03DCEB1C LDP X30, X23, [X31 + 0x20]
	0x03DCEB20 MOV X2, X31
	0x03DCEB24 ADD X31, X31, 0x50
	0x03DCEB28 B 0x3DE5048
	0x03DCEB2C ADRP X8, 0x397000
	0x03DCEB30 LDR X8, [X8 + 0x2F8]
	0x03DCEB34 ADD X0, X21, 0x28
	0x03DCEB38 LDR X1, [X8]
	0x03DCEB3C BL 0x266DB34
	0x03DCEB40 STUR X20, [X0 + 0x7C]
	0x03DCEB44 CBNZ X19, 0x3DCEB68
	0x03DCEB48 BL 0x1C16F20
	0x03DCEB4C ADRP X8, 0x397000
	0x03DCEB50 LDR X8, [X8 + 0x2F8]
	0x03DCEB54 ADD X0, X21, 0x28
	0x03DCEB58 LDR X1, [X8]
	0x03DCEB5C BL 0x266DB34
	0x03DCEB60 STUR X20, [X0 + 0xB4]
	0x03DCEB64 CBZ X19, 0x3DCEB48
	0x03DCEB68 MOVZ W1, 0x880
	0x03DCEB6C B 0x3DCEB10
	0x03DCEB70 ADRP X8, 0x397000
	0x03DCEB74 LDR X8, [X8 + 0x2F8]
	0x03DCEB78 ADD X0, X21, 0x28
	0x03DCEB7C LDR X1, [X8]
	0x03DCEB80 BL 0x266DB34
	0x03DCEB84 STUR X20, [X0 + 0xBC]
	0x03DCEB88 CBNZ X19, 0x3DCEB68
	0x03DCEB8C B 0x3DCEB48
	0x03DCEB90 ADRP X0, 0x398000
	0x03DCEB94 LDR X0, [X0 + 0x4A8]
	0x03DCEB98 BL 0x1C16D08
	0x03DCEB9C MOVN X8, 0x0
	0x03DCEBA0 STP X0, X8, [X31 + 0x8]
	0x03DCEBA4 ADD X0, X31, 0x8
	0x03DCEBA8 MOV X1, X31
	0x03DCEBAC STR W22, [X31 + 0x18]
	0x03DCEBB0 BL 0x33B162C
	0x03DCEBB4 MOV X19, X0
	0x03DCEBB8 ADRP X0, 0x39B000
	0x03DCEBBC LDR X0, [X0 + 0x358]
	0x03DCEBC0 BL 0x1C16D08
	0x03DCEBC4 MOV X20, X0
	0x03DCEBC8 ADRP X0, 0x39B000
	0x03DCEBCC LDR X0, [X0 + 0x360]
	0x03DCEBD0 BL 0x1C16D08
	0x03DCEBD4 MOV X2, X0
	0x03DCEBD8 MOV X0, X20
	0x03DCEBDC MOV X1, X19
	0x03DCEBE0 MOV X3, X31
	0x03DCEBE4 BL 0x32274B8
	0x03DCEBE8 MOV X19, X0
	0x03DCEBEC ADRP X0, 0x32D000
	0x03DCEBF0 LDR X0, [X0 + 0x578]
	0x03DCEBF4 BL 0x1C16D08
	0x03DCEBF8 BL 0x1C16F10
	0x03DCEBFC MOV X20, X0
	0x03DCEC00 ADRP X0, 0x327000
	0x03DCEC04 LDR X0, [X0 + 0xC10]
	0x03DCEC08 BL 0x1C16D08
	0x03DCEC0C MOV X2, X0
	0x03DCEC10 MOV X0, X20
	0x03DCEC14 MOV X1, X19
	0x03DCEC18 MOV X3, X31
	0x03DCEC1C BL 0x330E16C
	0x03DCEC20 ADRP X0, 0x39B000
	0x03DCEC24 LDR X0, [X0 + 0x368]
	0x03DCEC28 BL 0x1C16D08
	0x03DCEC2C MOV X1, X0
	0x03DCEC30 MOV X0, X20
	0x03DCEC34 BL 0x1C16DEC
	0x03DCEC38 SUB X31, X31, 0x50
	0x03DCEC3C STR D8, [X31 + 0x20]
	0x03DCEC40 STR X30, [X31 + 0x28]
	0x03DCEC44 STP X22, X21, [X31 + 0x30]
	0x03DCEC48 STP X20, X19, [X31 + 0x40]
	0x03DCEC4C ADRP X22, 0x61A000
	0x03DCEC50 LDRB W8, [X22 + 0x1AC]
	0x03DCEC54 MOV V8.16B, V0.16B
	0x03DCEC58 MOV W21, W2
	0x03DCEC5C MOV X19, X1
	0x03DCEC60 MOV X20, X0
	0x03DCEC64 TBNZ X8, 0x0, 0x3DCECA0
	0x03DCEC68 ADRP X0, 0x397000
	0x03DCEC6C LDR X0, [X0 + 0x308]
	0x03DCEC70 BL 0x1C16CF4
	0x03DCEC74 ADRP X0, 0x397000
	0x03DCEC78 LDR X0, [X0 + 0x300]
	0x03DCEC7C BL 0x1C16CF4
	0x03DCEC80 ADRP X0, 0x397000
	0x03DCEC84 LDR X0, [X0 + 0x2F8]
	0x03DCEC88 BL 0x1C16CF4
	0x03DCEC8C ADRP X0, 0x397000
	0x03DCEC90 LDR X0, [X0 + 0x2F0]
	0x03DCEC94 BL 0x1C16CF4
	0x03DCEC98 MOVZ W8, 0x1
	0x03DCEC9C STRB W8, [X22 + 0x1AC]
	0x03DCECA0 MOVZ W8, 0xC
	0x03DCECA4 MOVK W8, 0x20000
	0x03DCECA8 CMP W21, W8
	0x03DCECAC B.LE 0x3DCECF4
	0x03DCECB0 MOVZ W8, 0x7
	0x03DCECB4 MOVK W8, 0x30000
	0x03DCECB8 CMP W21, W8
	0x03DCECBC B.EQ 0x3DCED50
	0x03DCECC0 MOVZ W8, 0xE
	0x03DCECC4 MOVK W8, 0x70000
	0x03DCECC8 CMP W21, W8
	0x03DCECCC B.NE 0x3DCEED4
	0x03DCECD0 ADRP X8, 0x397000
	0x03DCECD4 LDR X8, [X8 + 0x2F8]
	0x03DCECD8 ADD X0, X20, 0x28
	0x03DCECDC LDR X1, [X8]
	0x03DCECE0 BL 0x266DB34
	0x03DCECE4 STR S8, [X0 + 0xC4]
	0x03DCECE8 CBZ X19, 0x3DCEED0
	0x03DCECEC MOVZ W1, 0x1000
	0x03DCECF0 B 0x3DCEEB0
	0x03DCECF4 ORR W8, W31, 0xFFFDFFFD
	0x03DCECF8 ADD W8, W21, W8
	0x03DCECFC CMP W8, 0x9
	0x03DCED00 B.HI 0x3DCED74
	0x03DCED04 ADRP X9, 0xFFFFFFFFFCDCA000
	0x03DCED08 ADD X9, X9, 0x342
	0x03DCED0C ADR X10, 0x10
	0x03DCED10 LDRB W11, [X9, X8, LSL]
	0x03DCED14 ADD X10, X10, X11, 0x2, LSL
	0x03DCED18 BR X10
	0x03DCED1C ADRP X8, 0x397000
	0x03DCED20 LDR X8, [X8 + 0x2F0]
	0x03DCED24 ADD X0, X20, 0x8
	0x03DCED28 LDR X1, [X8]
	0x03DCED2C BL 0x266C93C
	0x03DCED30 STR S8, [X0 + 0xC]
	0x03DCED34 CBZ X19, 0x3DCEED0
	0x03DCED38 LDR X0, [X19 + 0x2B8]
	0x03DCED3C CBZ X0, 0x3DCEED0
	0x03DCED40 MOV V0.16B, V8.16B
	0x03DCED44 MOV X1, X31
	0x03DCED48 BL 0x3CE6980
	0x03DCED4C B 0x3DCEE40
	0x03DCED50 ADRP X8, 0x397000
	0x03DCED54 LDR X8, [X8 + 0x308]
	0x03DCED58 ADD X0, X20, 0x10
	0x03DCED5C LDR X1, [X8]
	0x03DCED60 BL 0x266CDBC
	0x03DCED64 STR S8, [X0 + 0x3C]
	0x03DCED68 CBZ X19, 0x3DCEED0
	0x03DCED6C MOVZ W1, 0x808
	0x03DCED70 B 0x3DCEEB0
	0x03DCED74 MOVZ W8, 0xA
	0x03DCED78 MOVK W8, 0x10000
	0x03DCED7C CMP W21, W8
	0x03DCED80 B.NE 0x3DCEED4
	0x03DCED84 ADRP X8, 0x397000
	0x03DCED88 LDR X8, [X8 + 0x300]
	0x03DCED8C MOV X0, X20
	0x03DCED90 LDR X1, [X8]
	0x03DCED94 BL 0x266C4BC
	0x03DCED98 STR S8, [X0 + 0x78]
	0x03DCED9C CBZ X19, 0x3DCEED0
	0x03DCEDA0 MOVZ W1, 0x818
	0x03DCEDA4 B 0x3DCEEB0
	0x03DCEDA8 ADRP X8, 0x397000
	0x03DCEDAC LDR X8, [X8 + 0x2F0]
	0x03DCEDB0 ADD X0, X20, 0x8
	0x03DCEDB4 LDR X1, [X8]
	0x03DCEDB8 BL 0x266C93C
	0x03DCEDBC STR S8, [X0 + 0x10]
	0x03DCEDC0 CBZ X19, 0x3DCEED0
	0x03DCEDC4 LDR X0, [X19 + 0x2B8]
	0x03DCEDC8 CBZ X0, 0x3DCEED0
	0x03DCEDCC MOV V0.16B, V8.16B
	0x03DCEDD0 MOV X1, X31
	0x03DCEDD4 BL 0x3CE6890
	0x03DCEDD8 B 0x3DCEE40
	0x03DCEDDC ADRP X8, 0x397000
	0x03DCEDE0 LDR X8, [X8 + 0x2F0]
	0x03DCEDE4 ADD X0, X20, 0x8
	0x03DCEDE8 LDR X1, [X8]
	0x03DCEDEC BL 0x266C93C
	0x03DCEDF0 STR S8, [X0 + 0x14]
	0x03DCEDF4 CBZ X19, 0x3DCEED0
	0x03DCEDF8 LDR X0, [X19 + 0x2B8]
	0x03DCEDFC CBZ X0, 0x3DCEED0
	0x03DCEE00 MOV V0.16B, V8.16B
	0x03DCEE04 MOV X1, X31
	0x03DCEE08 BL 0x3CE6930
	0x03DCEE0C B 0x3DCEE40
	0x03DCEE10 ADRP X8, 0x397000
	0x03DCEE14 LDR X8, [X8 + 0x2F0]
	0x03DCEE18 ADD X0, X20, 0x8
	0x03DCEE1C LDR X1, [X8]
	0x03DCEE20 BL 0x266C93C
	0x03DCEE24 STR S8, [X0 + 0x18]
	0x03DCEE28 CBZ X19, 0x3DCEED0
	0x03DCEE2C LDR X0, [X19 + 0x2B8]
	0x03DCEE30 CBZ X0, 0x3DCEED0
	0x03DCEE34 MOV V0.16B, V8.16B
	0x03DCEE38 MOV X1, X31
	0x03DCEE3C BL 0x3CE68E0
	0x03DCEE40 MOVZ W1, 0x908
	0x03DCEE44 B 0x3DCEEB0
	0x03DCEE48 ADRP X8, 0x397000
	0x03DCEE4C LDR X8, [X8 + 0x2F0]
	0x03DCEE50 ADD X0, X20, 0x8
	0x03DCEE54 LDR X1, [X8]
	0x03DCEE58 BL 0x266C93C
	0x03DCEE5C STR S8, [X0 + 0x34]
	0x03DCEE60 CBZ X19, 0x3DCEED0
	0x03DCEE64 LDR X0, [X19 + 0x2B8]
	0x03DCEE68 CBZ X0, 0x3DCEED0
	0x03DCEE6C MOV V0.16B, V8.16B
	0x03DCEE70 MOV X1, X31
	0x03DCEE74 BL 0x3CE72AC
	0x03DCEE78 B 0x3DCEEAC
	0x03DCEE7C ADRP X8, 0x397000
	0x03DCEE80 LDR X8, [X8 + 0x2F0]
	0x03DCEE84 ADD X0, X20, 0x8
	0x03DCEE88 LDR X1, [X8]
	0x03DCEE8C BL 0x266C93C
	0x03DCEE90 STR S8, [X0 + 0x38]
	0x03DCEE94 CBZ X19, 0x3DCEED0
	0x03DCEE98 LDR X0, [X19 + 0x2B8]
	0x03DCEE9C CBZ X0, 0x3DCEED0
	0x03DCEEA0 MOV V0.16B, V8.16B
	0x03DCEEA4 MOV X1, X31
	0x03DCEEA8 BL 0x3CE72F8
	0x03DCEEAC MOVZ W1, 0x8
	0x03DCEEB0 MOV X0, X19
	0x03DCEEB4 LDP X20, X19, [X31 + 0x40]
	0x03DCEEB8 LDP X22, X21, [X31 + 0x30]
	0x03DCEEBC LDR X30, [X31 + 0x28]
	0x03DCEEC0 LDR V8, [X31 + 0x20]
	0x03DCEEC4 MOV X2, X31
	0x03DCEEC8 ADD X31, X31, 0x50
	0x03DCEECC B 0x3DE5048
	0x03DCEED0 BL 0x1C16F20
	0x03DCEED4 ADRP X0, 0x398000
	0x03DCEED8 LDR X0, [X0 + 0x4A8]
	0x03DCEEDC BL 0x1C16D08
	0x03DCEEE0 MOVN X8, 0x0
	0x03DCEEE4 STP X0, X8, [X31 + 0x8]
	0x03DCEEE8 ADD X0, X31, 0x8
	0x03DCEEEC MOV X1, X31
	0x03DCEEF0 STR W21, [X31 + 0x18]
	0x03DCEEF4 BL 0x33B162C
	0x03DCEEF8 MOV X19, X0
	0x03DCEEFC ADRP X0, 0x39B000
	0x03DCEF00 LDR X0, [X0 + 0x370]
	0x03DCEF04 BL 0x1C16D08
	0x03DCEF08 MOV X20, X0
	0x03DCEF0C ADRP X0, 0x39B000
	0x03DCEF10 LDR X0, [X0 + 0x360]
	0x03DCEF14 BL 0x1C16D08
	0x03DCEF18 MOV X2, X0
	0x03DCEF1C MOV X0, X20
	0x03DCEF20 MOV X1, X19
	0x03DCEF24 MOV X3, X31
	0x03DCEF28 BL 0x32274B8
	0x03DCEF2C MOV X19, X0
	0x03DCEF30 ADRP X0, 0x32D000
	0x03DCEF34 LDR X0, [X0 + 0x578]
	0x03DCEF38 BL 0x1C16D08
	0x03DCEF3C BL 0x1C16F10
	0x03DCEF40 MOV X20, X0
	0x03DCEF44 ADRP X0, 0x327000
	0x03DCEF48 LDR X0, [X0 + 0xC10]
	0x03DCEF4C BL 0x1C16D08
	0x03DCEF50 MOV X2, X0
	0x03DCEF54 MOV X0, X20
	0x03DCEF58 MOV X1, X19
	0x03DCEF5C MOV X3, X31
	0x03DCEF60 BL 0x330E16C
	0x03DCEF64 ADRP X0, 0x39B000
	0x03DCEF68 LDR X0, [X0 + 0x378]
	0x03DCEF6C BL 0x1C16D08
	0x03DCEF70 MOV X1, X0
	0x03DCEF74 MOV X0, X20
	0x03DCEF78 BL 0x1C16DEC
	0x03DCEF7C SUB X31, X31, 0x50
	0x03DCEF80 STP X30, X23, [X31 + 0x20]
	0x03DCEF84 STP X22, X21, [X31 + 0x30]
	0x03DCEF88 STP X20, X19, [X31 + 0x40]
	0x03DCEF8C ADRP X23, 0x61A000
	0x03DCEF90 LDRB W8, [X23 + 0x1AD]
	0x03DCEF94 MOV W20, W3
	0x03DCEF98 MOV W22, W2
	0x03DCEF9C MOV X19, X1
	0x03DCEFA0 MOV X21, X0
	0x03DCEFA4 TBNZ X8, 0x0, 0x3DCF010
	0x03DCEFA8 ADRP X0, 0x397000
	0x03DCEFAC LDR X0, [X0 + 0x360]
	0x03DCEFB0 BL 0x1C16CF4
	0x03DCEFB4 ADRP X0, 0x397000
	0x03DCEFB8 LDR X0, [X0 + 0x358]
	0x03DCEFBC BL 0x1C16CF4
	0x03DCEFC0 ADRP X0, 0x397000
	0x03DCEFC4 LDR X0, [X0 + 0x370]
	0x03DCEFC8 BL 0x1C16CF4
	0x03DCEFCC ADRP X0, 0x397000
	0x03DCEFD0 LDR X0, [X0 + 0x368]
	0x03DCEFD4 BL 0x1C16CF4
	0x03DCEFD8 ADRP X0, 0x397000
	0x03DCEFDC LDR X0, [X0 + 0x308]
	0x03DCEFE0 BL 0x1C16CF4
	0x03DCEFE4 ADRP X0, 0x397000
	0x03DCEFE8 LDR X0, [X0 + 0x300]
	0x03DCEFEC BL 0x1C16CF4
	0x03DCEFF0 ADRP X0, 0x397000
	0x03DCEFF4 LDR X0, [X0 + 0x2F8]
	0x03DCEFF8 BL 0x1C16CF4
	0x03DCEFFC ADRP X0, 0x397000
	0x03DCF000 LDR X0, [X0 + 0x2F0]
	0x03DCF004 BL 0x1C16CF4
	0x03DCF008 MOVZ W8, 0x1
	0x03DCF00C STRB W8, [X23 + 0x1AD]
	0x03DCF010 ORR W8, W31, 0x20002
	0x03DCF014 ORR W9, W8, 0x8
	0x03DCF018 CMP W22, W9
	0x03DCF01C B.LE 0x3DCF098
	0x03DCF020 ADD W8, W8, 0xD
	0x03DCF024 CMP W22, W8
	0x03DCF028 B.LE 0x3DCF118
	0x03DCF02C MOVN W8, 0x30000
	0x03DCF030 ADD W8, W22, W8
	0x03DCF034 CMP W8, 0x8
	0x03DCF038 B.HI 0x3DCF334
	0x03DCF03C ADRP X9, 0xFFFFFFFFFCDC9000
	0x03DCF040 ADD X9, X9, 0x35A
	0x03DCF044 ADR X10, 0x10
	0x03DCF048 LDRH W11, [X9, X8, LSL #1]
	0x03DCF04C ADD X10, X10, X11, 0x2, LSL
	0x03DCF050 BR X10
	0x03DCF054 ADRP X8, 0x396000
	0x03DCF058 LDR X8, [X8 + 0x370]
	0x03DCF05C ADD X21, X21, 0x10
	0x03DCF060 MOV X0, X21
	0x03DCF064 LDR X1, [X8]
	0x03DCF068 BL 0x266CDA0
	0x03DCF06C LDR W8, [X0 + 0x18]
	0x03DCF070 CMP W8, W20
	0x03DCF074 B.EQ 0x3DCF660
	0x03DCF078 ADRP X8, 0x396000
	0x03DCF07C LDR X8, [X8 + 0x308]
	0x03DCF080 MOV X0, X21
	0x03DCF084 LDR X1, [X8]
	0x03DCF088 BL 0x266CDBC
	0x03DCF08C STR W20, [X0 + 0x18]
	0x03DCF090 CBNZ X19, 0x3DCF25C
	0x03DCF094 B 0x3DCF6C4
	0x03DCF098 CMP W22, W8
	0x03DCF09C B.LE 0x3DCF190
	0x03DCF0A0 MOVZ W8, 0x8
	0x03DCF0A4 MOVK W8, 0x20000
	0x03DCF0A8 CMP W22, W8
	0x03DCF0AC B.EQ 0x3DCF208
	0x03DCF0B0 MOVZ W8, 0xA
	0x03DCF0B4 MOVK W8, 0x20000
	0x03DCF0B8 CMP W22, W8
	0x03DCF0BC B.NE 0x3DCF6C8
	0x03DCF0C0 ADRP X8, 0x396000
	0x03DCF0C4 LDR X8, [X8 + 0x358]
	0x03DCF0C8 ADD X21, X21, 0x8
	0x03DCF0CC MOV X0, X21
	0x03DCF0D0 LDR X1, [X8]
	0x03DCF0D4 BL 0x266C920
	0x03DCF0D8 LDR W8, [X0 + 0x30]
	0x03DCF0DC CMP W8, W20
	0x03DCF0E0 B.EQ 0x3DCF660
	0x03DCF0E4 ADRP X8, 0x396000
	0x03DCF0E8 LDR X8, [X8 + 0x2F0]
	0x03DCF0EC MOV X0, X21
	0x03DCF0F0 LDR X1, [X8]
	0x03DCF0F4 BL 0x266C93C
	0x03DCF0F8 STR W20, [X0 + 0x30]
	0x03DCF0FC CBZ X19, 0x3DCF6C4
	0x03DCF100 LDR X0, [X19 + 0x2B8]
	0x03DCF104 CBZ X0, 0x3DCF6C4
	0x03DCF108 MOV W1, W20
	0x03DCF10C MOV X2, X31
	0x03DCF110 BL 0x3CE7040
	0x03DCF114 B 0x3DCF6A4
	0x03DCF118 MOVZ W8, 0xD
	0x03DCF11C MOVK W8, 0x20000
	0x03DCF120 CMP W22, W8
	0x03DCF124 B.EQ 0x3DCF264
	0x03DCF128 MOVZ W8, 0xF
	0x03DCF12C MOVK W8, 0x20000
	0x03DCF130 CMP W22, W8
	0x03DCF134 B.NE 0x3DCF6C8
	0x03DCF138 ADRP X8, 0x396000
	0x03DCF13C LDR X8, [X8 + 0x358]
	0x03DCF140 ADD X21, X21, 0x8
	0x03DCF144 MOV X0, X21
	0x03DCF148 LDR X1, [X8]
	0x03DCF14C BL 0x266C920
	0x03DCF150 LDR W8, [X0 + 0x48]
	0x03DCF154 CMP W8, W20
	0x03DCF158 B.EQ 0x3DCF660
	0x03DCF15C ADRP X8, 0x396000
	0x03DCF160 LDR X8, [X8 + 0x2F0]
	0x03DCF164 MOV X0, X21
	0x03DCF168 LDR X1, [X8]
	0x03DCF16C BL 0x266C93C
	0x03DCF170 STR W20, [X0 + 0x48]
	0x03DCF174 CBZ X19, 0x3DCF6C4
	0x03DCF178 LDR X0, [X19 + 0x2B8]
	0x03DCF17C CBZ X0, 0x3DCF6C4
	0x03DCF180 MOV W1, W20
	0x03DCF184 MOV X2, X31
	0x03DCF188 BL 0x3CE7084
	0x03DCF18C B 0x3DCF6A4
	0x03DCF190 CMP W22, 0x20000
	0x03DCF194 B.GE 0x3DCF2BC
	0x03DCF198 MOVZ W8, 0xFFFA
	0x03DCF19C MOVK W8, 0xFFFE0000
	0x03DCF1A0 ADD W8, W22, W8
	0x03DCF1A4 CMP W8, 0x6
	0x03DCF1A8 B.HI 0x3DCF6C8
	0x03DCF1AC ADRP X9, 0xFFFFFFFFFCDC9000
	0x03DCF1B0 ADD X9, X9, 0x34C
	0x03DCF1B4 ADR X10, 0x10
	0x03DCF1B8 LDRH W11, [X9, X8, LSL #1]
	0x03DCF1BC ADD X10, X10, X11, 0x2, LSL
	0x03DCF1C0 BR X10
	0x03DCF1C4 ADRP X8, 0x396000
	0x03DCF1C8 LDR X8, [X8 + 0x368]
	0x03DCF1CC MOV X0, X21
	0x03DCF1D0 LDR X1, [X8]
	0x03DCF1D4 BL 0x266C4A0
	0x03DCF1D8 LDR W8, [X0 + 0x58]
	0x03DCF1DC CMP W8, W20
	0x03DCF1E0 B.EQ 0x3DCF660
	0x03DCF1E4 ADRP X8, 0x396000
	0x03DCF1E8 LDR X8, [X8 + 0x300]
	0x03DCF1EC MOV X0, X21
	0x03DCF1F0 LDR X1, [X8]
	0x03DCF1F4 BL 0x266C4BC
	0x03DCF1F8 STR W20, [X0 + 0x58]
	0x03DCF1FC CBZ X19, 0x3DCF6C4
	0x03DCF200 MOVZ W1, 0x818
	0x03DCF204 B 0x3DCF6A8
	0x03DCF208 ADRP X8, 0x396000
	0x03DCF20C LDR X8, [X8 + 0x358]
	0x03DCF210 ADD X21, X21, 0x8
	0x03DCF214 MOV X0, X21
	0x03DCF218 LDR X1, [X8]
	0x03DCF21C BL 0x266C920
	0x03DCF220 LDR W8, [X0 + 0x24]
	0x03DCF224 CMP W8, W20
	0x03DCF228 B.EQ 0x3DCF660
	0x03DCF22C ADRP X8, 0x396000
	0x03DCF230 LDR X8, [X8 + 0x2F0]
	0x03DCF234 MOV X0, X21
	0x03DCF238 LDR X1, [X8]
	0x03DCF23C BL 0x266C93C
	0x03DCF240 STR W20, [X0 + 0x24]
	0x03DCF244 CBZ X19, 0x3DCF6C4
	0x03DCF248 LDR X0, [X19 + 0x2B8]
	0x03DCF24C CBZ X0, 0x3DCF6C4
	0x03DCF250 MOV W1, W20
	0x03DCF254 MOV X2, X31
	0x03DCF258 BL 0x3CE70C8
	0x03DCF25C MOVZ W1, 0x808
	0x03DCF260 B 0x3DCF6A8
	0x03DCF264 ADRP X8, 0x396000
	0x03DCF268 LDR X8, [X8 + 0x358]
	0x03DCF26C ADD X21, X21, 0x8
	0x03DCF270 MOV X0, X21
	0x03DCF274 LDR X1, [X8]
	0x03DCF278 BL 0x266C920
	0x03DCF27C LDR W8, [X0 + 0x3C]
	0x03DCF280 CMP W8, W20
	0x03DCF284 B.EQ 0x3DCF660
	0x03DCF288 ADRP X8, 0x396000
	0x03DCF28C LDR X8, [X8 + 0x2F0]
	0x03DCF290 MOV X0, X21
	0x03DCF294 LDR X1, [X8]
	0x03DCF298 BL 0x266C93C
	0x03DCF29C STR W20, [X0 + 0x3C]
	0x03DCF2A0 CBZ X19, 0x3DCF6C4
	0x03DCF2A4 LDR X0, [X19 + 0x2B8]
	0x03DCF2A8 CBZ X0, 0x3DCF6C4
	0x03DCF2AC MOV W1, W20
	0x03DCF2B0 MOV X2, X31
	0x03DCF2B4 BL 0x3CE721C
	0x03DCF2B8 B 0x3DCF6A4
	0x03DCF2BC B.EQ 0x3DCF480
	0x03DCF2C0 MOVZ W8, 0x1
	0x03DCF2C4 MOVK W8, 0x20000
	0x03DCF2C8 CMP W22, W8
	0x03DCF2CC B.EQ 0x3DCF4D8
	0x03DCF2D0 ORR W8, W31, 0x20002
	0x03DCF2D4 CMP W22, W8
	0x03DCF2D8 B.NE 0x3DCF6C8
	0x03DCF2DC ADRP X8, 0x396000
	0x03DCF2E0 LDR X8, [X8 + 0x358]
	0x03DCF2E4 ADD X21, X21, 0x8
	0x03DCF2E8 MOV X0, X21
	0x03DCF2EC LDR X1, [X8]
	0x03DCF2F0 BL 0x266C920
	0x03DCF2F4 LDR W8, [X0 + 0x8]
	0x03DCF2F8 CMP W8, W20
	0x03DCF2FC B.EQ 0x3DCF660
	0x03DCF300 ADRP X8, 0x396000
	0x03DCF304 LDR X8, [X8 + 0x2F0]
	0x03DCF308 MOV X0, X21
	0x03DCF30C LDR X1, [X8]
	0x03DCF310 BL 0x266C93C
	0x03DCF314 STR W20, [X0 + 0x8]
	0x03DCF318 CBZ X19, 0x3DCF6C4
	0x03DCF31C LDR X0, [X19 + 0x2B8]
	0x03DCF320 CBZ X0, 0x3DCF6C4
	0x03DCF324 MOV W1, W20
	0x03DCF328 MOV X2, X31
	0x03DCF32C BL 0x3CE7150
	0x03DCF330 B 0x3DCF6A4
	0x03DCF334 MOVZ W8, 0x1D
	0x03DCF338 MOVK W8, 0x20000
	0x03DCF33C CMP W22, W8
	0x03DCF340 B.EQ 0x3DCF63C
	0x03DCF344 MOVZ W8, 0xF
	0x03DCF348 MOVK W8, 0x70000
	0x03DCF34C CMP W22, W8
	0x03DCF350 B.NE 0x3DCF6C8
	0x03DCF354 ADRP X8, 0x396000
	0x03DCF358 LDR X8, [X8 + 0x360]
	0x03DCF35C ADD X21, X21, 0x28
	0x03DCF360 MOV X0, X21
	0x03DCF364 LDR X1, [X8]
	0x03DCF368 BL 0x266DB18
	0x03DCF36C LDR W8, [X0 + 0xC8]
	0x03DCF370 CMP W8, W20
	0x03DCF374 B.EQ 0x3DCF660
	0x03DCF378 ADRP X8, 0x396000
	0x03DCF37C LDR X8, [X8 + 0x2F8]
	0x03DCF380 MOV X0, X21
	0x03DCF384 LDR X1, [X8]
	0x03DCF388 BL 0x266DB34
	0x03DCF38C STR W20, [X0 + 0xC8]
	0x03DCF390 CBZ X19, 0x3DCF6C4
	0x03DCF394 LDR X0, [X19 + 0x2B8]
	0x03DCF398 CBZ X0, 0x3DCF6C4
	0x03DCF39C MOV W1, W20
	0x03DCF3A0 MOV X2, X31
	0x03DCF3A4 BL 0x3CE78D0
	0x03DCF3A8 MOVZ W1, 0x48
	0x03DCF3AC B 0x3DCF6A8
	0x03DCF3B0 ADRP X8, 0x396000
	0x03DCF3B4 LDR X8, [X8 + 0x368]
	0x03DCF3B8 MOV X0, X21
	0x03DCF3BC LDR X1, [X8]
	0x03DCF3C0 BL 0x266C4A0
	0x03DCF3C4 LDR W8, [X0 + 0x64]
	0x03DCF3C8 CMP W8, W20
	0x03DCF3CC B.EQ 0x3DCF660
	0x03DCF3D0 ADRP X8, 0x396000
	0x03DCF3D4 LDR X8, [X8 + 0x300]
	0x03DCF3D8 MOV X0, X21
	0x03DCF3DC LDR X1, [X8]
	0x03DCF3E0 BL 0x266C4BC
	0x03DCF3E4 STR W20, [X0 + 0x64]
	0x03DCF3E8 CBZ X19, 0x3DCF6C4
	0x03DCF3EC MOVZ W1, 0x810
	0x03DCF3F0 B 0x3DCF6A8
	0x03DCF3F4 ADRP X8, 0x396000
	0x03DCF3F8 LDR X8, [X8 + 0x368]
	0x03DCF3FC MOV X0, X21
	0x03DCF400 LDR X1, [X8]
	0x03DCF404 BL 0x266C4A0
	0x03DCF408 LDR W8, [X0 + 0x7C]
	0x03DCF40C CMP W8, W20
	0x03DCF410 B.EQ 0x3DCF660
	0x03DCF414 ADRP X8, 0x396000
	0x03DCF418 LDR X8, [X8 + 0x300]
	0x03DCF41C MOV X0, X21
	0x03DCF420 LDR X1, [X8]
	0x03DCF424 BL 0x266C4BC
	0x03DCF428 STR W20, [X0 + 0x7C]
	0x03DCF42C CBZ X19, 0x3DCF6C4
	0x03DCF430 MOVZ W1, 0x810
	0x03DCF434 MOVK W1, 0x100000
	0x03DCF438 B 0x3DCF6A8
	0x03DCF43C ADRP X8, 0x396000
	0x03DCF440 LDR X8, [X8 + 0x368]
	0x03DCF444 MOV X0, X21
	0x03DCF448 LDR X1, [X8]
	0x03DCF44C BL 0x266C4A0
	0x03DCF450 LDR W8, [X0 + 0x80]
	0x03DCF454 CMP W8, W20
	0x03DCF458 B.EQ 0x3DCF660
	0x03DCF45C ADRP X8, 0x396000
	0x03DCF460 LDR X8, [X8 + 0x300]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x61B000
	007 Move W8, [X22+426]
	008 Move X19, X2
	009 Move W21, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {71}
	015 Move X0, 0x326000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x398000
	019 Move X0, [X0+896]
	020 Call 0x1C17CF4
	021 Move X0, 0x398000
	022 Move X0, [X0+864]
	023 Call 0x1C17CF4
	024 Move X0, 0x398000
	025 Move X0, [X0+888]
	026 Call 0x1C17CF4
	027 Move X0, 0x398000
	028 Move X0, [X0+856]
	029 Call 0x1C17CF4
	030 Move X0, 0x398000
	031 Move X0, [X0+880]
	032 Call 0x1C17CF4
	033 Move X0, 0x398000
	034 Move X0, [X0+872]
	035 Call 0x1C17CF4
	036 Move X0, 0x398000
	037 Move X0, [X0+776]
	038 Call 0x1C17CF4
	039 Move X0, 0x398000
	040 Move X0, [X0+768]
	041 Call 0x1C17CF4
	042 Move X0, 0x398000
	043 Move X0, [X0+792]
	044 Call 0x1C17CF4
	045 Move X0, 0x398000
	046 Move X0, [X0+784]
	047 Call 0x1C17CF4
	048 Move X0, 0x398000
	049 Move X0, [X0+760]
	050 Call 0x1C17CF4
	051 Move X0, 0x398000
	052 Move X0, [X0+752]
	053 Call 0x1C17CF4
	054 Move X0, 0x399000
	055 Move X0, [X0+1192]
	056 Call 0x1C17CF4
	057 Move X0, 0x398000
	058 Move X0, [X0+912]
	059 Call 0x1C17CF4
	060 Move X0, 0x398000
	061 Move X0, [X0+920]
	062 Call 0x1C17CF4
	063 Move X0, 0x398000
	064 Move X0, [X0+928]
	065 Call 0x1C17CF4
	066 Move X0, 0x39C000
	067 Move X0, [X0+608]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X22+426], W8
	071 Move W8, 9
	072 NotImplemented "Instruction MOVK not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract W8, W21, 0x70000
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X9, -52645888
	077 Add X9, X9, 736
	078 NotImplemented "Instruction ADR not yet implemented."
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Add X10, X10, X11
	081 CallNoReturn X10
	082 Move X8, 0x398000
	083 Move X8, [X8+760]
	084 Add X0, X20, 40
	085 Move X1, [X8]
	086 Call StyleDataRef`1<VisualData>.Write, X0
	087 Move X8, 0x398000
	088 Move X8, [X8+864]
	089 Move X20, X0
	090 Add X0, X19, 40
	091 Move X1, [X8]
	092 Call StyleDataRef`1<VisualData>.Read, X0
	093 Subtract W8, W21, 0x20000
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X9, -52645888
	096 Add X9, X9, 634
	097 NotImplemented "Instruction ADR not yet implemented."
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Add X10, X10, X11
	100 CallNoReturn X10
	101 Move X8, 0x398000
	102 Move X8, [X8+752]
	103 Add X0, X20, 8
	104 Move X1, [X8]
	105 Call StyleDataRef`1<LayoutData>.Write, X0
	106 Move X8, 0x398000
	107 Move X8, [X8+856]
	108 Move X20, X0
	109 Add X0, X19, 8
	110 Move X1, [X8]
	111 Call StyleDataRef`1<LayoutData>.Read, X0
	112 Move W8, [X0]
	113 Move [X20], W8
	114 Subtract W8, W21, 0x10000
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X9, -52645888
	117 Add X9, X9, 606
	118 NotImplemented "Instruction ADR not yet implemented."
	119 NotImplemented "Instruction LDRH not yet implemented."
	120 Add X10, X10, X11
	121 CallNoReturn X10
	122 Move X8, 0x398000
	123 Move X8, [X8+768]
	124 Move X0, X20
	125 Move X1, [X8]
	126 Call 0x266D4BC, X0
	127 Move X8, 0x398000
	128 Move X8, [X8+872]
	129 Move X20, X0
	130 Move X0, X19
	131 Move X1, [X8]
	132 Call 0x266D4A0, X0
	133 Move V0, [X0]
	134 Move [X20], V0
	135 Subtract W8, W21, 0x50000
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract W8, W21, 0x60000
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X9, -52645888
	140 Add X9, X9, 728
	141 NotImplemented "Instruction ADR not yet implemented."
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Add X10, X10, X11
	144 CallNoReturn X10
	145 Move X8, 0x398000
	146 Move X8, [X8+792]
	147 Add X0, X20, 32
	148 Move X1, [X8]
	149 Call StyleDataRef`1<TransitionData>.Write, X0
	150 Move X8, 0x398000
	151 Move X21, [X0]
	152 Move X8, [X8+896]
	153 Add X0, X19, 32
	154 Move X1, [X8]
	155 Call StyleDataRef`1<TransitionData>.Read, X0
	156 Move X1, [X0]
	157 Subtract W8, W21, 0x30000
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X9, -52645888
	160 Add X9, X9, 700
	161 NotImplemented "Instruction ADR not yet implemented."
	162 NotImplemented "Instruction LDRH not yet implemented."
	163 Add X10, X10, X11
	164 CallNoReturn X10
	165 Move X8, 0x398000
	166 Move X8, [X8+776]
	167 Add X0, X20, 16
	168 Move X1, [X8]
	169 Call StyleDataRef`1<RareData>.Write, X0
	170 Move X8, 0x398000
	171 Move X8, [X8+880]
	172 Move X20, X0
	173 Add X0, X19, 16
	174 Move X1, [X8]
	175 Call StyleDataRef`1<RareData>.Read, X0
	176 Move X9, -52645888
	177 Add X9, X9, 720
	178 NotImplemented "Instruction ADR not yet implemented."
	179 NotImplemented "Instruction LDRH not yet implemented."
	180 Add X10, X10, X11
	181 CallNoReturn X10
	182 Move X8, 0x398000
	183 Move X8, [X8+784]
	184 Add X0, X20, 24
	185 Move X1, [X8]
	186 Call StyleDataRef`1<TransformData>.Write, X0
	187 Move X8, 0x398000
	188 Move X8, [X8+888]
	189 Move X20, X0
	190 Add X0, X19, 24
	191 Move X1, [X8]
	192 Call StyleDataRef`1<TransformData>.Read, X0
	193 Move V0, [X0]
	194 Move X8, [X0+16]
	195 Move [X20], V0
	196 Move X8, 0x399000
	197 Move X8, [X8+1192]
	198 Add X1, X31, 12
	199 Move [X31+12], W21
	200 Move X0, [X8]
	201 Call 0x1C17E04
	202 Move X8, 0x39C000
	203 Move X8, [X8+608]
	204 Move X1, X0
	205 Move X2, X31
	206 Move X8, [X8]
	207 Move X0, X8
	208 Call String.Format, X0, X1
	209 Move X8, 0x326000
	210 Move X8, [X8+2600]
	211 Move X19, X0
	212 Move X8, [X8]
	213 Move W9, [X8+224]
	214 Compare W9, 0
	215 JumpIfNotEqual {218}
	216 Move X0, X8
	217 Call 0x1C17DFC
	218 Move X0, X19
	219 Move X1, X31
	220 Call Debug.LogAssertion, X0
	221 Move X8, 0x398000
	222 Move X8, [X8+760]
	223 Add X0, X20, 40
	224 Move X1, [X8]
	225 Call StyleDataRef`1<VisualData>.Write, X0
	226 Move X8, 0x398000
	227 Move X8, [X8+864]
	228 Move X20, X0
	229 Add X0, X19, 40
	230 Move X1, [X8]
	231 Call StyleDataRef`1<VisualData>.Read, X0
	232 Move V0, [X0+16]
	233 Move V1, [X0+32]
	234 Move [X20+16], V0
	235 Move [X20+24], V1
	236 Move X8, 0x398000
	237 Move X8, [X8+760]
	238 Add X0, X20, 40
	239 Move X1, [X8]
	240 Call StyleDataRef`1<VisualData>.Write, X0
	241 Move X8, 0x398000
	242 Move X8, [X8+864]
	243 Move X20, X0
	244 Add X0, X19, 40
	245 Move X1, [X8]
	246 Call StyleDataRef`1<VisualData>.Read, X0
	247 Move X8, [X0+48]
	248 Move W9, [X0+56]
	249 Move X8, 0x398000
	250 Move X8, [X8+760]
	251 Add X0, X20, 40
	252 Move X1, [X8]
	253 Call StyleDataRef`1<VisualData>.Write, X0
	254 Move X8, 0x398000
	255 Move X8, [X8+864]
	256 Move X20, X0
	257 Add X0, X19, 40
	258 Move X1, [X8]
	259 Call StyleDataRef`1<VisualData>.Read, X0
	260 NotImplemented "Instruction LDUR not yet implemented."
	261 Move W9, [X0+68]
	262 Move [X20+60], X8
	263 Move [X20+68], W9
	264 Move X8, 0x398000
	265 Move X8, [X8+760]
	266 Add X0, X20, 40
	267 Move X1, [X8]
	268 Call StyleDataRef`1<VisualData>.Write, X0
	269 Move X8, 0x398000
	270 Move X8, [X8+864]
	271 Move X20, X0
	272 Add X0, X19, 40
	273 Move X1, [X8]
	274 Call StyleDataRef`1<VisualData>.Read, X0
	275 Move X8, [X0+72]
	276 Move [X20+72], X8
	277 Move X8, 0x398000
	278 Move X8, [X8+760]
	279 Add X0, X20, 40
	280 Move X1, [X8]
	281 Call StyleDataRef`1<VisualData>.Write, X0
	282 Move X8, 0x398000
	283 Move X8, [X8+864]
	284 Move X20, X0
	285 Add X0, X19, 40
	286 Move X1, [X8]
	287 Call StyleDataRef`1<VisualData>.Read, X0
	288 Move V0, [X0+5]
	289 Move W8, [X0+96]
	290 Move [X20+5], V0
	291 Move [X20+96], W8
	292 Move X8, 0x398000
	293 Move X8, [X8+760]
	294 Add X0, X20, 40
	295 Move X1, [X8]
	296 Call StyleDataRef`1<VisualData>.Write, X0
	297 Move X8, 0x398000
	298 Move X8, [X8+864]
	299 Move X20, X0
	300 Add X0, X19, 40
	301 Move X1, [X8]
	302 Call StyleDataRef`1<VisualData>.Read, X0
	303 NotImplemented "Instruction LDUR not yet implemented."
	304 Move [X20+100], V0
	305 Move X8, 0x398000
	306 Move X8, [X8+760]
	307 Add X0, X20, 40
	308 Move X1, [X8]
	309 Call StyleDataRef`1<VisualData>.Write, X0
	310 Move X8, 0x398000
	311 Move X8, [X8+864]
	312 Move X20, X0
	313 Add X0, X19, 40
	314 Move X1, [X8]
	315 Call StyleDataRef`1<VisualData>.Read, X0
	316 Move X8, 0x398000
	317 Move X8, [X8+760]
	318 Add X0, X20, 40
	319 Move X1, [X8]
	320 Call StyleDataRef`1<VisualData>.Write, X0
	321 Move X8, 0x398000
	322 Move X8, [X8+864]
	323 Move X20, X0
	324 Add X0, X19, 40
	325 Move X1, [X8]
	326 Call StyleDataRef`1<VisualData>.Read, X0
	327 Move X8, 0x398000
	328 Move X8, [X8+760]
	329 Add X0, X20, 40
	330 Move X1, [X8]
	331 Call StyleDataRef`1<VisualData>.Write, X0
	332 Move X8, 0x398000
	333 Move X8, [X8+864]
	334 Move X20, X0
	335 Add X0, X19, 40
	336 Move X1, [X8]
	337 Call StyleDataRef`1<VisualData>.Read, X0
	338 NotImplemented "Instruction LDUR not yet implemented."
	339 Move [X20+132], V0
	340 Move X8, 0x398000
	341 Move X8, [X8+760]
	342 Add X0, X20, 40
	343 Move X1, [X8]
	344 Call StyleDataRef`1<VisualData>.Write, X0
	345 Move X8, 0x398000
	346 Move X8, [X8+864]
	347 Move X20, X0
	348 Add X0, X19, 40
	349 Move X1, [X8]
	350 Call StyleDataRef`1<VisualData>.Read, X0
	351 NotImplemented "Instruction LDUR not yet implemented."
	352 Move [X20+148], V0
	353 Move X8, 0x398000
	354 Move X8, [X8+760]
	355 Add X0, X20, 40
	356 Move X1, [X8]
	357 Call StyleDataRef`1<VisualData>.Write, X0
	358 Move X8, 0x398000
	359 Move X8, [X8+864]
	360 Move X20, X0
	361 Add X0, X19, 40
	362 Move X1, [X8]
	363 Call StyleDataRef`1<VisualData>.Read, X0
	364 NotImplemented "Instruction LDUR not yet implemented."
	365 Move [X20+164], V0
	366 Move X8, 0x398000
	367 Move X8, [X8+760]
	368 Add X0, X20, 40
	369 Move X1, [X8]
	370 Call StyleDataRef`1<VisualData>.Write, X0
	371 Move X8, 0x398000
	372 Move X8, [X8+864]
	373 Move X20, X0
	374 Add X0, X19, 40
	375 Move X1, [X8]
	376 Call StyleDataRef`1<VisualData>.Read, X0
	377 NotImplemented "Instruction LDUR not yet implemented."
	378 Move [X20+180], X8
	379 Move X8, 0x398000
	380 Move X8, [X8+760]
	381 Add X0, X20, 40
	382 Move X1, [X8]
	383 Call StyleDataRef`1<VisualData>.Write, X0
	384 Move X8, 0x398000
	385 Move X8, [X8+864]
	386 Move X20, X0
	387 Add X0, X19, 40
	388 Move X1, [X8]
	389 Call StyleDataRef`1<VisualData>.Read, X0
	390 NotImplemented "Instruction LDUR not yet implemented."
	391 Move [X20+188], X8
	392 Move X8, 0x398000
	393 Move X8, [X8+760]
	394 Add X0, X20, 40
	395 Move X1, [X8]
	396 Call StyleDataRef`1<VisualData>.Write, X0
	397 Move X8, 0x398000
	398 Move X8, [X8+864]
	399 Move X20, X0
	400 Add X0, X19, 40
	401 Move X1, [X8]
	402 Call StyleDataRef`1<VisualData>.Read, X0
	403 Move V0, [X0+196]
	404 Move [X20+196], S0
	405 Move X8, 0x398000
	406 Move X8, [X8+760]
	407 Add X0, X20, 40
	408 Move X1, [X8]
	409 Call StyleDataRef`1<VisualData>.Write, X0
	410 Move X8, 0x398000
	411 Move X8, [X8+864]
	412 Move X20, X0
	413 Add X0, X19, 40
	414 Move X1, [X8]
	415 Call StyleDataRef`1<VisualData>.Read, X0
	416 Move W8, [X0+200]
	417 Move [X20+200], W8
	418 Move X8, 0x398000
	419 Move X8, [X8+792]
	420 Add X0, X20, 32
	421 Move X1, [X8]
	422 Call StyleDataRef`1<TransitionData>.Write, X0
	423 Move X8, 0x398000
	424 Move X21, [X0+8]
	425 Move X8, [X8+896]
	426 Add X0, X19, 32
	427 Move X1, [X8]
	428 Call StyleDataRef`1<TransitionData>.Read, X0
	429 Move X1, [X0+8]
	430 Move X8, 0x398000
	431 Move X8, [X8+928]
	432 Move X0, X21
	433 Move X2, [X8]
	434 Call StyleValueExtensions.CopyFrom, X0, X1
	435 Move X8, 0x398000
	436 Move X8, [X8+792]
	437 Add X0, X20, 32
	438 Move X1, [X8]
	439 Call StyleDataRef`1<TransitionData>.Write, X0
	440 Move X8, 0x398000
	441 Move X21, [X0+16]
	442 Move X8, [X8+896]
	443 Add X0, X19, 32
	444 Move X1, [X8]
	445 Call StyleDataRef`1<TransitionData>.Read, X0
	446 Move X8, 0x398000
	447 Move X1, [X0+16]
	448 Move X8, [X8+920]
	449 Move X0, X21
	450 Move X2, [X8]
	451 Call StyleValueExtensions.CopyFrom, X0, X1
	452 Move X8, 0x398000
	453 Move X8, [X8+792]
	454 Add X0, X20, 32
	455 Move X1, [X8]
	456 Call StyleDataRef`1<TransitionData>.Write, X0
	457 Move X8, 0x398000
	458 Move X21, [X0+24]
	459 Move X8, [X8+896]
	460 Add X0, X19, 32
	461 Move X1, [X8]
	462 Call StyleDataRef`1<TransitionData>.Read, X0
	463 Move X8, 0x398000
	464 Move X1, [X0+24]
	465 Move X8, [X8+912]
	466 Move X0, X21
	467 Move X2, [X8]
	468 Call 0x2295EA0, X0, X1
	469 Move [X20+80], X31
	470 Move X8, 0x398000
	471 Move X8, [X8+784]
	472 Add X0, X20, 24
	473 Move X1, [X8]
	474 Call StyleDataRef`1<TransformData>.Write, X0
	475 Move X8, 0x398000
	476 Move X8, [X8+888]
	477 Move X20, X0
	478 Add X0, X19, 24
	479 Move X1, [X8]
	480 Call StyleDataRef`1<TransformData>.Read, X0
	481 NotImplemented "Instruction LDUR not yet implemented."
	482 Move [X20+24], V0
	483 Move X8, 0x398000
	484 Move X8, [X8+784]
	485 Add X0, X20, 24
	486 Move X1, [X8]
	487 Call StyleDataRef`1<TransformData>.Write, X0
	488 Move X8, 0x398000
	489 Move X8, [X8+888]
	490 Move X20, X0
	491 Add X0, X19, 24
	492 Move X1, [X8]
	493 Call StyleDataRef`1<TransformData>.Read, X0
	494 NotImplemented "Instruction LDUR not yet implemented."
	495 Move W8, [X0+56]
	496 Move [X20+40], V0
	497 Move X8, 0x398000
	498 Move X8, [X8+784]
	499 Add X0, X20, 24
	500 Move X1, [X8]
	501 Call StyleDataRef`1<TransformData>.Write, X0
	502 Move X8, 0x398000
	503 Move X8, [X8+888]
	504 Move X20, X0
	505 Add X0, X19, 24
	506 Move X1, [X8]
	507 Call StyleDataRef`1<TransformData>.Read, X0
	508 NotImplemented "Instruction LDUR not yet implemented."
	509 NotImplemented "Instruction LDUR not yet implemented."
	510 Move [X20+60], V0
	511 Move X8, 0x398000
	512 Move X8, [X8+752]
	513 Add X0, X20, 8
	514 Move X1, [X8]
	515 Call StyleDataRef`1<LayoutData>.Write, X0
	516 Move X8, 0x398000
	517 Move X8, [X8+856]
	518 Move X20, X0
	519 Add X0, X19, 8
	520 Move X1, [X8]
	521 Call StyleDataRef`1<LayoutData>.Read, X0
	522 Move W8, [X0+4]
	523 Move [X20+4], W8
	524 Move X8, 0x398000
	525 Move X8, [X8+752]
	526 Add X0, X20, 8
	527 Move X1, [X8]
	528 Call StyleDataRef`1<LayoutData>.Write, X0
	529 Move X8, 0x398000
	530 Move X8, [X8+856]
	531 Move X20, X0
	532 Add X0, X19, 8
	533 Move X1, [X8]
	534 Call StyleDataRef`1<LayoutData>.Read, X0
	535 Move W8, [X0+8]
	536 Move [X20+8], W8
	537 Move X8, 0x398000
	538 Move X8, [X8+752]
	539 Add X0, X20, 8
	540 Move X1, [X8]
	541 Call StyleDataRef`1<LayoutData>.Write, X0
	542 Move X8, 0x398000
	543 Move X8, [X8+856]
	544 Move X20, X0
	545 Add X0, X19, 8
	546 Move X1, [X8]
	547 Call StyleDataRef`1<LayoutData>.Read, X0
	548 Move V0, [X0+12]
	549 Move [X20+12], S0
	550 Move X8, 0x398000
	551 Move X8, [X8+752]
	552 Add X0, X20, 8
	553 Move X1, [X8]
	554 Call StyleDataRef`1<LayoutData>.Write, X0
	555 Move X8, 0x398000
	556 Move X8, [X8+856]
	557 Move X20, X0
	558 Add X0, X19, 8
	559 Move X1, [X8]
	560 Call StyleDataRef`1<LayoutData>.Read, X0
	561 Move V0, [X0+16]
	562 Move [X20+16], S0
	563 Move X8, 0x398000
	564 Move X8, [X8+752]
	565 Add X0, X20, 8
	566 Move X1, [X8]
	567 Call StyleDataRef`1<LayoutData>.Write, X0
	568 Move X8, 0x398000
	569 Move X8, [X8+856]
	570 Move X20, X0
	571 Add X0, X19, 8
	572 Move X1, [X8]
	573 Call StyleDataRef`1<LayoutData>.Read, X0
	574 Move V0, [X0+20]
	575 Move [X20+20], S0
	576 Move X8, 0x398000
	577 Move X8, [X8+752]
	578 Add X0, X20, 8
	579 Move X1, [X8]
	580 Call StyleDataRef`1<LayoutData>.Write, X0
	581 Move X8, 0x398000
	582 Move X8, [X8+856]
	583 Move X20, X0
	584 Add X0, X19, 8
	585 Move X1, [X8]
	586 Call StyleDataRef`1<LayoutData>.Read, X0
	587 Move V0, [X0+24]
	588 Move [X20+24], S0
	589 Move X8, 0x398000
	590 Move X8, [X8+752]
	591 Add X0, X20, 8
	592 Move X1, [X8]
	593 Call StyleDataRef`1<LayoutData>.Write, X0
	594 Move X8, 0x398000
	595 Move X8, [X8+856]
	596 Move X20, X0
	597 Add X0, X19, 8
	598 Move X1, [X8]
	599 Call StyleDataRef`1<LayoutData>.Read, X0
	600 NotImplemented "Instruction LDUR not yet implemented."
	601 Move [X20+28], X8
	602 Move X8, 0x398000
	603 Move X8, [X8+752]
	604 Add X0, X20, 8
	605 Move X1, [X8]
	606 Call StyleDataRef`1<LayoutData>.Write, X0
	607 Move X8, 0x398000
	608 Move X8, [X8+856]
	609 Move X20, X0
	610 Add X0, X19, 8
	611 Move X1, [X8]
	612 Call StyleDataRef`1<LayoutData>.Read, X0
	613 Move W8, [X0+36]
	614 Move [X20+36], W8
	615 Move X8, 0x398000
	616 Move X8, [X8+752]
	617 Add X0, X20, 8
	618 Move X1, [X8]
	619 Call StyleDataRef`1<LayoutData>.Write, X0
	620 Move X8, 0x398000
	621 Move X8, [X8+856]
	622 Move X20, X0
	623 Add X0, X19, 8
	624 Move X1, [X8]
	625 Call StyleDataRef`1<LayoutData>.Read, X0
	626 Move X8, [X0+40]
	627 Move [X20+40], X8
	628 Move X8, 0x398000
	629 Move X8, [X8+752]
	630 Add X0, X20, 8
	631 Move X1, [X8]
	632 Call StyleDataRef`1<LayoutData>.Write, X0
	633 Move X8, 0x398000
	634 Move X8, [X8+856]
	635 Move X20, X0
	636 Add X0, X19, 8
	637 Move X1, [X8]
	638 Call StyleDataRef`1<LayoutData>.Read, X0
	639 Move X8, 0x398000
	640 Move X8, [X8+752]
	641 Add X0, X20, 8
	642 Move X1, [X8]
	643 Call StyleDataRef`1<LayoutData>.Write, X0
	644 Move X8, 0x398000
	645 Move X8, [X8+856]
	646 Move X20, X0
	647 Add X0, X19, 8
	648 Move X1, [X8]
	649 Call StyleDataRef`1<LayoutData>.Read, X0
	650 Move V0, [X0+52]
	651 Move [X20+52], S0
	652 Move X8, 0x398000
	653 Move X8, [X8+752]
	654 Add X0, X20, 8
	655 Move X1, [X8]
	656 Call StyleDataRef`1<LayoutData>.Write, X0
	657 Move X8, 0x398000
	658 Move X8, [X8+856]
	659 Move X20, X0
	660 Add X0, X19, 8
	661 Move X1, [X8]
	662 Call StyleDataRef`1<LayoutData>.Read, X0
	663 Move V0, [X0+56]
	664 Move [X20+56], S0
	665 Move X8, 0x398000
	666 Move X8, [X8+752]
	667 Add X0, X20, 8
	668 Move X1, [X8]
	669 Call StyleDataRef`1<LayoutData>.Write, X0
	670 Move X8, 0x398000
	671 Move X8, [X8+856]
	672 Move X20, X0
	673 Add X0, X19, 8
	674 Move X1, [X8]
	675 Call StyleDataRef`1<LayoutData>.Read, X0
	676 Move W8, [X0+60]
	677 Move [X20+60], W8
	678 Move X8, 0x398000
	679 Move X8, [X8+752]
	680 Add X0, X20, 8
	681 Move X1, [X8]
	682 Call StyleDataRef`1<LayoutData>.Write, X0
	683 Move X8, 0x398000
	684 Move X8, [X8+856]
	685 Move X20, X0
	686 Add X0, X19, 8
	687 Move X1, [X8]
	688 Call StyleDataRef`1<LayoutData>.Read, X0
	689 Move X8, 0x398000
	690 Move X8, [X8+752]
	691 Add X0, X20, 8
	692 Move X1, [X8]
	693 Call StyleDataRef`1<LayoutData>.Write, X0
	694 Move X8, 0x398000
	695 Move X8, [X8+856]
	696 Move X20, X0
	697 Add X0, X19, 8
	698 Move X1, [X8]
	699 Call StyleDataRef`1<LayoutData>.Read, X0
	700 Move W8, [X0+72]
	701 Move [X20+72], W8
	702 Move X8, 0x398000
	703 Move X8, [X8+752]
	704 Add X0, X20, 8
	705 Move X1, [X8]
	706 Call StyleDataRef`1<LayoutData>.Write, X0
	707 Move X8, 0x398000
	708 Move X8, [X8+856]
	709 Move X20, X0
	710 Add X0, X19, 8
	711 Move X1, [X8]
	712 Call StyleDataRef`1<LayoutData>.Read, X0
	713 NotImplemented "Instruction LDUR not yet implemented."
	714 Move [X20+76], X8
	715 Move X8, 0x398000
	716 Move X8, [X8+752]
	717 Add X0, X20, 8
	718 Move X1, [X8]
	719 Call StyleDataRef`1<LayoutData>.Write, X0
	720 Move X8, 0x398000
	721 Move X8, [X8+856]
	722 Move X20, X0
	723 Add X0, X19, 8
	724 Move X1, [X8]
	725 Call StyleDataRef`1<LayoutData>.Read, X0
	726 NotImplemented "Instruction LDUR not yet implemented."
	727 Move [X20+84], X8
	728 Move X8, 0x398000
	729 Move X8, [X8+752]
	730 Add X0, X20, 8
	731 Move X1, [X8]
	732 Call StyleDataRef`1<LayoutData>.Write, X0
	733 Move X8, 0x398000
	734 Move X8, [X8+856]
	735 Move X20, X0
	736 Add X0, X19, 8
	737 Move X1, [X8]
	738 Call StyleDataRef`1<LayoutData>.Read, X0
	739 Move X8, 0x398000
	740 Move X8, [X8+752]
	741 Add X0, X20, 8
	742 Move X1, [X8]
	743 Call StyleDataRef`1<LayoutData>.Write, X0
	744 Move X8, 0x398000
	745 Move X8, [X8+856]
	746 Move X20, X0
	747 Add X0, X19, 8
	748 Move X1, [X8]
	749 Call StyleDataRef`1<LayoutData>.Read, X0
	750 NotImplemented "Instruction LDUR not yet implemented."
	751 Move [X20+100], X8
	752 Move X8, 0x398000
	753 Move X8, [X8+752]
	754 Add X0, X20, 8
	755 Move X1, [X8]
	756 Call StyleDataRef`1<LayoutData>.Write, X0
	757 Move X8, 0x398000
	758 Move X8, [X8+856]
	759 Move X20, X0
	760 Add X0, X19, 8
	761 Move X1, [X8]
	762 Call StyleDataRef`1<LayoutData>.Read, X0
	763 NotImplemented "Instruction LDUR not yet implemented."
	764 Move [X20+108], X8
	765 Move X8, 0x398000
	766 Move X8, [X8+752]
	767 Add X0, X20, 8
	768 Move X1, [X8]
	769 Call StyleDataRef`1<LayoutData>.Write, X0
	770 Move X8, 0x398000
	771 Move X8, [X8+856]
	772 Move X20, X0
	773 Add X0, X19, 8
	774 Move X1, [X8]
	775 Call StyleDataRef`1<LayoutData>.Read, X0
	776 NotImplemented "Instruction LDUR not yet implemented."
	777 Move [X20+116], X8
	778 Move X8, 0x398000
	779 Move X8, [X8+752]
	780 Add X0, X20, 8
	781 Move X1, [X8]
	782 Call StyleDataRef`1<LayoutData>.Write, X0
	783 Move X8, 0x398000
	784 Move X8, [X8+856]
	785 Move X20, X0
	786 Add X0, X19, 8
	787 Move X1, [X8]
	788 Call StyleDataRef`1<LayoutData>.Read, X0
	789 NotImplemented "Instruction LDUR not yet implemented."
	790 Move [X20+124], X8
	791 Move X8, 0x398000
	792 Move X8, [X8+752]
	793 Add X0, X20, 8
	794 Move X1, [X8]
	795 Call StyleDataRef`1<LayoutData>.Write, X0
	796 Move X8, 0x398000
	797 Move X8, [X8+856]
	798 Move X20, X0
	799 Add X0, X19, 8
	800 Move X1, [X8]
	801 Call StyleDataRef`1<LayoutData>.Read, X0
	802 Move X8, 0x398000
	803 Move X8, [X8+752]
	804 Add X0, X20, 8
	805 Move X1, [X8]
	806 Call StyleDataRef`1<LayoutData>.Write, X0
	807 Move X8, 0x398000
	808 Move X8, [X8+856]
	809 Move X20, X0
	810 Add X0, X19, 8
	811 Move X1, [X8]
	812 Call StyleDataRef`1<LayoutData>.Read, X0
	813 NotImplemented "Instruction LDUR not yet implemented."
	814 Move [X20+140], X8
	815 Move X8, 0x398000
	816 Move X8, [X8+752]
	817 Add X0, X20, 8
	818 Move X1, [X8]
	819 Call StyleDataRef`1<LayoutData>.Write, X0
	820 Move X8, 0x398000
	821 Move X8, [X8+856]
	822 Move X20, X0
	823 Add X0, X19, 8
	824 Move X1, [X8]
	825 Call StyleDataRef`1<LayoutData>.Read, X0
	826 NotImplemented "Instruction LDUR not yet implemented."
	827 Move [X20+148], X8
	828 Move X8, 0x398000
	829 Move X8, [X8+752]
	830 Add X0, X20, 8
	831 Move X1, [X8]
	832 Call StyleDataRef`1<LayoutData>.Write, X0
	833 Move X8, 0x398000
	834 Move X8, [X8+856]
	835 Move X20, X0
	836 Add X0, X19, 8
	837 Move X1, [X8]
	838 Call StyleDataRef`1<LayoutData>.Read, X0
	839 NotImplemented "Instruction LDUR not yet implemented."
	840 Move [X20+156], X8
	841 Move X8, 0x398000
	842 Move X8, [X8+752]
	843 Add X0, X20, 8
	844 Move X1, [X8]
	845 Call StyleDataRef`1<LayoutData>.Write, X0
	846 Move X8, 0x398000
	847 Move X8, [X8+856]
	848 Move X20, X0
	849 Add X0, X19, 8
	850 Move X1, [X8]
	851 Call StyleDataRef`1<LayoutData>.Read, X0
	852 NotImplemented "Instruction LDUR not yet implemented."
	853 Move [X20+164], X8
	854 Move X8, 0x398000
	855 Move X8, [X8+752]
	856 Add X0, X20, 8
	857 Move X1, [X8]
	858 Call StyleDataRef`1<LayoutData>.Write, X0
	859 Move X8, 0x398000
	860 Move X8, [X8+856]
	861 Move X20, X0
	862 Add X0, X19, 8
	863 Move X1, [X8]
	864 Call StyleDataRef`1<LayoutData>.Read, X0
	865 NotImplemented "Instruction LDUR not yet implemented."
	866 Move [X20+172], X8
	867 Move X8, 0x398000
	868 Move X8, [X8+752]
	869 Add X0, X20, 8
	870 Move X1, [X8]
	871 Call StyleDataRef`1<LayoutData>.Write, X0
	872 Move X8, 0x398000
	873 Move X8, [X8+856]
	874 Move X20, X0
	875 Add X0, X19, 8
	876 Move X1, [X8]
	877 Call StyleDataRef`1<LayoutData>.Read, X0
	878 Move W8, [X0+180]
	879 Move [X20+180], W8
	880 Move X8, 0x398000
	881 Move X8, [X8+752]
	882 Add X0, X20, 8
	883 Move X1, [X8]
	884 Call StyleDataRef`1<LayoutData>.Write, X0
	885 Move X8, 0x398000
	886 Move X8, [X8+856]
	887 Move X20, X0
	888 Add X0, X19, 8
	889 Move X1, [X8]
	890 Call StyleDataRef`1<LayoutData>.Read, X0
	891 Move X8, [X0+184]
	892 Move [X20+184], X8
	893 Move X8, 0x398000
	894 Move X8, [X8+752]
	895 Add X0, X20, 8
	896 Move X1, [X8]
	897 Call StyleDataRef`1<LayoutData>.Write, X0
	898 Move X8, 0x398000
	899 Move X8, [X8+856]
	900 Move X20, X0
	901 Add X0, X19, 8
	902 Move X1, [X8]
	903 Call StyleDataRef`1<LayoutData>.Read, X0
	904 Move X8, [X0+192]
	905 Move [X20+192], X8
	906 Move X8, 0x398000
	907 Move X8, [X8+752]
	908 Add X0, X20, 8
	909 Move X1, [X8]
	910 Call StyleDataRef`1<LayoutData>.Write, X0
	911 Move X8, 0x398000
	912 Move X8, [X8+856]
	913 Move X20, X0
	914 Add X0, X19, 8
	915 Move X1, [X8]
	916 Call StyleDataRef`1<LayoutData>.Read, X0
	917 Move X8, [X0+200]
	918 Move [X20+200], X8
	919 Move X8, 0x398000
	920 Move X8, [X8+768]
	921 Move X0, X20
	922 Move X1, [X8]
	923 Call 0x266D4BC, X0
	924 Move X8, 0x398000
	925 Move X8, [X8+872]
	926 Move X20, X0
	927 Move X0, X19
	928 Move X1, [X8]
	929 Call 0x266D4A0, X0
	930 Move X8, [X0+16]
	931 Move [X20+16], X8
	932 Move X8, 0x398000
	933 Move X8, [X8+768]
	934 Move X0, X20
	935 Move X1, [X8]
	936 Call 0x266D4BC, X0
	937 Move X8, 0x398000
	938 Move X8, [X8+872]
	939 Move X20, X0
	940 Move X0, X19
	941 Move X1, [X8]
	942 Call 0x266D4A0, X0
	943 Move X8, [X0+24]
	944 Move [X20+24], X8
	945 Move X8, 0x398000
	946 Move X8, [X8+768]
	947 Move X0, X20
	948 Move X1, [X8]
	949 Call 0x266D4BC, X0
	950 Move X8, 0x398000
	951 Move X8, [X8+872]
	952 Move X20, X0
	953 Move X0, X19
	954 Move X1, [X8]
	955 Call 0x266D4A0, X0
	956 Move V0, [X0+2]
	957 Move X8, [X0+48]
	958 Move W9, [X0+56]
	959 Move [X20+2], V0
	960 Move [X20+48], X8
	961 Move [X20+56], W9
	962 Move X8, 0x397000
	963 Move X8, [X8+768]
	964 Move X0, X20
	965 Move X1, [X8]
	966 Call 0x266D4BC, X0
	967 Move X8, 0x397000
	968 Move X8, [X8+872]
	969 Move X20, X0
	970 Move X0, X19
	971 Move X1, [X8]
	972 Call 0x266D4A0, X0
	973 Move X8, [X0+64]
	974 Move [X20+64], X8
	975 Move X8, 0x397000
	976 Move X8, [X8+768]
	977 Move X0, X20
	978 Move X1, [X8]
	979 Call 0x266D4BC, X0
	980 Move X8, 0x397000
	981 Move X8, [X8+872]
	982 Move X20, X0
	983 Move X0, X19
	984 Move X1, [X8]
	985 Call 0x266D4A0, X0
	986 NotImplemented "Instruction LDUR not yet implemented."
	987 Move [X20+72], V0
	988 Move X8, 0x397000
	989 Move X8, [X8+768]
	990 Move X0, X20
	991 Move X1, [X8]
	992 Call 0x266D4BC, X0
	993 Move X8, 0x397000
	994 Move X8, [X8+872]
	995 Move X20, X0
	996 Move X0, X19
	997 Move X1, [X8]
	998 Call 0x266D4A0, X0
	999 Move W8, [X0+88]
	1000 Move [X20+88], W8
	1001 Move X8, 0x397000
	1002 Move X8, [X8+768]
	1003 Move X0, X20
	1004 Move X1, [X8]
	1005 Call 0x266D4BC, X0
	1006 Move X8, 0x397000
	1007 Move X8, [X8+872]
	1008 Move X20, X0
	1009 Move X0, X19
	1010 Move X1, [X8]
	1011 Call 0x266D4A0, X0
	1012 NotImplemented "Instruction LDUR not yet implemented."
	1013 Move [X20+92], X8
	1014 Move X8, 0x397000
	1015 Move X8, [X8+768]
	1016 Move X0, X20
	1017 Move X1, [X8]
	1018 Call 0x266D4BC, X0
	1019 Move X8, 0x397000
	1020 Move X8, [X8+872]
	1021 Move X20, X0
	1022 Move X0, X19
	1023 Move X1, [X8]
	1024 Call 0x266D4A0, X0
	1025 Move W8, [X0+100]
	1026 Move [X20+100], W8
	1027 Move X8, 0x397000
	1028 Move X8, [X8+768]
	1029 Move X0, X20
	1030 Move X1, [X8]
	1031 Call 0x266D4BC, X0
	1032 Move X8, 0x397000
	1033 Move X8, [X8+872]
	1034 Move X20, X0
	1035 Move X0, X19
	1036 Move X1, [X8]
	1037 Call 0x266D4A0, X0
	1038 NotImplemented "Instruction LDUR not yet implemented."
	1039 Move [X20+104], V0
	1040 Move X8, 0x397000
	1041 Move X8, [X8+768]
	1042 Move X0, X20
	1043 Move X1, [X8]
	1044 Call 0x266D4BC, X0
	1045 Move X8, 0x397000
	1046 Move X8, [X8+872]
	1047 Move X20, X0
	1048 Move X0, X19
	1049 Move X1, [X8]
	1050 Call 0x266D4A0, X0
	1051 Move V0, [X0+120]
	1052 Move [X20+120], S0
	1053 Move X8, 0x397000
	1054 Move X8, [X8+768]
	1055 Move X0, X20
	1056 Move X1, [X8]
	1057 Call 0x266D4BC, X0
	1058 Move X8, 0x397000
	1059 Move X8, [X8+872]
	1060 Move X20, X0
	1061 Move X0, X19
	1062 Move X1, [X8]
	1063 Call 0x266D4A0, X0
	1064 Move W8, [X0+124]
	1065 Move [X20+124], W8
	1066 Move X8, 0x397000
	1067 Move X8, [X8+768]
	1068 Move X0, X20
	1069 Move X1, [X8]
	1070 Call 0x266D4BC, X0
	1071 Move X8, 0x397000
	1072 Move X8, [X8+872]
	1073 Move X20, X0
	1074 Move X0, X19
	1075 Move X1, [X8]
	1076 Call 0x266D4A0, X0
	1077 Move W8, [X0+128]
	1078 Move [X20+128], W8
	1079 Move X8, 0x397000
	1080 Move X8, [X8+768]
	1081 Move X0, X20
	1082 Move X1, [X8]
	1083 Call 0x266D4BC, X0
	1084 Move X8, 0x397000
	1085 Move X8, [X8+872]
	1086 Move X20, X0
	1087 Move X0, X19
	1088 Move X1, [X8]
	1089 Call 0x266D4A0, X0
	1090 NotImplemented "Instruction LDUR not yet implemented."
	1091 Move [X20+132], X8
	1092 Move X8, 0x397000
	1093 Move X8, [X8+776]
	1094 Add X0, X20, 16
	1095 Move X1, [X8]
	1096 Call StyleDataRef`1<RareData>.Write, X0
	1097 Move X8, 0x397000
	1098 Move X8, [X8+880]
	1099 Move X20, X0
	1100 Add X0, X19, 16
	1101 Move X1, [X8]
	1102 Call StyleDataRef`1<RareData>.Read, X0
	1103 Move W8, [X0+24]
	1104 Move [X20+24], W8
	1105 Move X8, 0x397000
	1106 Move X8, [X8+776]
	1107 Add X0, X20, 16
	1108 Move X1, [X8]
	1109 Call StyleDataRef`1<RareData>.Write, X0
	1110 Move X8, 0x397000
	1111 Move X8, [X8+880]
	1112 Move X20, X0
	1113 Add X0, X19, 16
	1114 Move X1, [X8]
	1115 Call StyleDataRef`1<RareData>.Read, X0
	1116 NotImplemented "Instruction LDUR not yet implemented."
	1117 Move [X20+28], V0
	1118 Move X8, 0x397000
	1119 Move X8, [X8+776]
	1120 Add X0, X20, 16
	1121 Move X1, [X8]
	1122 Call StyleDataRef`1<RareData>.Write, X0
	1123 Move X8, 0x397000
	1124 Move X8, [X8+880]
	1125 Move X20, X0
	1126 Add X0, X19, 16
	1127 Move X1, [X8]
	1128 Call StyleDataRef`1<RareData>.Read, X0
	1129 Move W8, [X0+44]
	1130 Move [X20+44], W8
	1131 Move X8, 0x397000
	1132 Move X8, [X8+776]
	1133 Add X0, X20, 16
	1134 Move X1, [X8]
	1135 Call StyleDataRef`1<RareData>.Write, X0
	1136 Move X8, 0x397000
	1137 Move X8, [X8+880]
	1138 Move X20, X0
	1139 Add X0, X19, 16
	1140 Move X1, [X8]
	1141 Call StyleDataRef`1<RareData>.Read, X0
	1142 Move W8, [X0+48]
	1143 Move [X20+48], W8
	1144 Move X8, 0x397000
	1145 Move X8, [X8+776]
	1146 Add X0, X20, 16
	1147 Move X1, [X8]
	1148 Call StyleDataRef`1<RareData>.Write, X0
	1149 Move X8, 0x397000
	1150 Move X8, [X8+880]
	1151 Move X20, X0
	1152 Add X0, X19, 16
	1153 Move X1, [X8]
	1154 Call StyleDataRef`1<RareData>.Read, X0
	1155 Move W8, [X0+52]
	1156 Move [X20+52], W8
	1157 Move X8, 0x397000
	1158 Move X8, [X8+776]
	1159 Add X0, X20, 16
	1160 Move X1, [X8]
	1161 Call StyleDataRef`1<RareData>.Write, X0
	1162 Move X8, 0x397000
	1163 Move X8, [X8+880]
	1164 Move X20, X0
	1165 Add X0, X19, 16
	1166 Move X1, [X8]
	1167 Call StyleDataRef`1<RareData>.Read, X0
	1168 Move W8, [X0+56]
	1169 Move [X20+56], W8
	1170 Move X8, 0x397000
	1171 Move X8, [X8+776]
	1172 Add X0, X20, 16
	1173 Move X1, [X8]
	1174 Call StyleDataRef`1<RareData>.Write, X0
	1175 Move X8, 0x397000
	1176 Move X8, [X8+880]
	1177 Move X20, X0
	1178 Add X0, X19, 16
	1179 Move X1, [X8]
	1180 Call StyleDataRef`1<RareData>.Read, X0
	1181 Move V0, [X0+60]
	1182 Move [X20+60], S0
	1183 Move X8, 0x397000
	1184 Move X8, [X8+776]
	1185 Add X0, X20, 16
	1186 Move X1, [X8]
	1187 Call StyleDataRef`1<RareData>.Write, X0
	1188 Move X8, 0x397000
	1189 Move X8, [X8+880]
	1190 Move X20, X0
	1191 Add X0, X19, 16
	1192 Move X1, [X8]
	1193 Call StyleDataRef`1<RareData>.Read, X0
	1194 Move W8, [X0+64]
	1195 Move [X20+64], W8
	1196 Move X8, 0x397000
	1197 Move X8, [X8+776]
	1198 Add X0, X20, 16
	1199 Move X1, [X8]
	1200 Call StyleDataRef`1<RareData>.Write, X0
	1201 Move X8, 0x397000
	1202 Move X8, [X8+880]
	1203 Move X20, X0
	1204 Add X0, X19, 16
	1205 Move X1, [X8]
	1206 Call StyleDataRef`1<RareData>.Read, X0
	1207 Move W8, [X0+68]
	1208 Move [X20+68], W8
	1209 Move X20, [X31+32]
	1210 Move X19, [X31+40]
	1211 Move X22, [X31+16]
	1212 Move X21, [X31+24]
	1213 Move X30, [X31+48]
	1214 Return 

Method: System.Void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Length newValue)

Disassembly:
	0x03DCF464 MOV X0, X21
	0x03DCF468 LDR X1, [X8]
	0x03DCF46C BL 0x266C4BC
	0x03DCF470 STR W20, [X0 + 0x80]
	0x03DCF474 CBZ X19, 0x3DCF6C4
	0x03DCF478 MOVZ W1, 0x18
	0x03DCF47C B 0x3DCF6A8
	0x03DCF480 ADRP X8, 0x396000
	0x03DCF484 LDR X8, [X8 + 0x358]
	0x03DCF488 ADD X21, X21, 0x8
	0x03DCF48C MOV X0, X21
	0x03DCF490 LDR X1, [X8]
	0x03DCF494 BL 0x266C920
	0x03DCF498 LDR W8, [X0]
	0x03DCF49C CMP W8, W20
	0x03DCF4A0 B.EQ 0x3DCF660
	0x03DCF4A4 ADRP X8, 0x396000
	0x03DCF4A8 LDR X8, [X8 + 0x2F0]
	0x03DCF4AC MOV X0, X21
	0x03DCF4B0 LDR X1, [X8]
	0x03DCF4B4 BL 0x266C93C
	0x03DCF4B8 STR W20, [X0]
	0x03DCF4BC CBZ X19, 0x3DCF6C4
	0x03DCF4C0 LDR X0, [X19 + 0x2B8]
	0x03DCF4C4 CBZ X0, 0x3DCF6C4
	0x03DCF4C8 MOV W1, W20
	0x03DCF4CC MOV X2, X31
	0x03DCF4D0 BL 0x3CE7194
	0x03DCF4D4 B 0x3DCF6A4
	0x03DCF4D8 ADRP X8, 0x396000
	0x03DCF4DC LDR X8, [X8 + 0x358]
	0x03DCF4E0 ADD X21, X21, 0x8
	0x03DCF4E4 MOV X0, X21
	0x03DCF4E8 LDR X1, [X8]
	0x03DCF4EC BL 0x266C920
	0x03DCF4F0 LDR W8, [X0 + 0x4]
	0x03DCF4F4 CMP W8, W20
	0x03DCF4F8 B.EQ 0x3DCF660
	0x03DCF4FC ADRP X8, 0x396000
	0x03DCF500 LDR X8, [X8 + 0x2F0]
	0x03DCF504 MOV X0, X21
	0x03DCF508 LDR X1, [X8]
	0x03DCF50C BL 0x266C93C
	0x03DCF510 STR W20, [X0 + 0x4]
	0x03DCF514 CBZ X19, 0x3DCF6C4
	0x03DCF518 LDR X0, [X19 + 0x2B8]
	0x03DCF51C CBZ X0, 0x3DCF6C4
	0x03DCF520 MOV W1, W20
	0x03DCF524 MOV X2, X31
	0x03DCF528 BL 0x3CE710C
	0x03DCF52C B 0x3DCF6A4
	0x03DCF530 ADRP X8, 0x396000
	0x03DCF534 LDR X8, [X8 + 0x370]
	0x03DCF538 ADD X21, X21, 0x10
	0x03DCF53C MOV X0, X21
	0x03DCF540 LDR X1, [X8]
	0x03DCF544 BL 0x266CDA0
	0x03DCF548 LDR W8, [X0 + 0x2C]
	0x03DCF54C CMP W8, W20
	0x03DCF550 B.EQ 0x3DCF660
	0x03DCF554 ADRP X8, 0x396000
	0x03DCF558 LDR X8, [X8 + 0x308]
	0x03DCF55C MOV X0, X21
	0x03DCF560 LDR X1, [X8]
	0x03DCF564 BL 0x266CDBC
	0x03DCF568 STR W20, [X0 + 0x2C]
	0x03DCF56C CBNZ X19, 0x3DCF634
	0x03DCF570 B 0x3DCF6C4
	0x03DCF574 ADRP X8, 0x396000
	0x03DCF578 LDR X8, [X8 + 0x308]
	0x03DCF57C ADD X0, X21, 0x10
	0x03DCF580 LDR X1, [X8]
	0x03DCF584 BL 0x266CDBC
	0x03DCF588 STR W20, [X0 + 0x30]
	0x03DCF58C CBNZ X19, 0x3DCF634
	0x03DCF590 B 0x3DCF6C4
	0x03DCF594 ADRP X8, 0x396000
	0x03DCF598 LDR X8, [X8 + 0x308]
	0x03DCF59C ADD X0, X21, 0x10
	0x03DCF5A0 LDR X1, [X8]
	0x03DCF5A4 BL 0x266CDBC
	0x03DCF5A8 STR W20, [X0 + 0x34]
	0x03DCF5AC CBNZ X19, 0x3DCF634
	0x03DCF5B0 B 0x3DCF6C4
	0x03DCF5B4 ADRP X8, 0x396000
	0x03DCF5B8 LDR X8, [X8 + 0x308]
	0x03DCF5BC ADD X0, X21, 0x10
	0x03DCF5C0 LDR X1, [X8]
	0x03DCF5C4 BL 0x266CDBC
	0x03DCF5C8 STR W20, [X0 + 0x38]
	0x03DCF5CC CBNZ X19, 0x3DCF634
	0x03DCF5D0 B 0x3DCF6C4
	0x03DCF5D4 ADRP X8, 0x396000
	0x03DCF5D8 LDR X8, [X8 + 0x308]
	0x03DCF5DC ADD X0, X21, 0x10
	0x03DCF5E0 LDR X1, [X8]
	0x03DCF5E4 BL 0x266CDBC
	0x03DCF5E8 STR W20, [X0 + 0x40]
	0x03DCF5EC CBNZ X19, 0x3DCF634
	0x03DCF5F0 B 0x3DCF6C4
	0x03DCF5F4 ADRP X8, 0x396000
	0x03DCF5F8 LDR X8, [X8 + 0x370]
	0x03DCF5FC ADD X21, X21, 0x10
	0x03DCF600 MOV X0, X21
	0x03DCF604 LDR X1, [X8]
	0x03DCF608 BL 0x266CDA0
	0x03DCF60C LDR W8, [X0 + 0x44]
	0x03DCF610 CMP W8, W20
	0x03DCF614 B.EQ 0x3DCF660
	0x03DCF618 ADRP X8, 0x396000
	0x03DCF61C LDR X8, [X8 + 0x308]
	0x03DCF620 MOV X0, X21
	0x03DCF624 LDR X1, [X8]
	0x03DCF628 BL 0x266CDBC
	0x03DCF62C STR W20, [X0 + 0x44]
	0x03DCF630 CBZ X19, 0x3DCF6C4
	0x03DCF634 MOVZ W1, 0x800
	0x03DCF638 B 0x3DCF6A8
	0x03DCF63C ADRP X8, 0x396000
	0x03DCF640 LDR X8, [X8 + 0x358]
	0x03DCF644 ADD X21, X21, 0x8
	0x03DCF648 MOV X0, X21
	0x03DCF64C LDR X1, [X8]
	0x03DCF650 BL 0x266C920
	0x03DCF654 LDR W8, [X0 + 0xB4]
	0x03DCF658 CMP W8, W20
	0x03DCF65C B.NE 0x3DCF674
	0x03DCF660 LDP X20, X19, [X31 + 0x40]
	0x03DCF664 LDP X22, X21, [X31 + 0x30]
	0x03DCF668 LDP X30, X23, [X31 + 0x20]
	0x03DCF66C ADD X31, X31, 0x50
	0x03DCF670 RET
	0x03DCF674 ADRP X8, 0x396000
	0x03DCF678 LDR X8, [X8 + 0x2F0]
	0x03DCF67C MOV X0, X21
	0x03DCF680 LDR X1, [X8]
	0x03DCF684 BL 0x266C93C
	0x03DCF688 STR W20, [X0 + 0xB4]
	0x03DCF68C CBZ X19, 0x3DCF6C4
	0x03DCF690 LDR X0, [X19 + 0x2B8]
	0x03DCF694 CBZ X0, 0x3DCF6C4
	0x03DCF698 MOV W1, W20
	0x03DCF69C MOV X2, X31
	0x03DCF6A0 BL 0x3CE71D8
	0x03DCF6A4 MOVZ W1, 0x8
	0x03DCF6A8 MOV X0, X19
	0x03DCF6AC LDP X20, X19, [X31 + 0x40]
	0x03DCF6B0 LDP X22, X21, [X31 + 0x30]
	0x03DCF6B4 LDP X30, X23, [X31 + 0x20]
	0x03DCF6B8 MOV X2, X31
	0x03DCF6BC ADD X31, X31, 0x50
	0x03DCF6C0 B 0x3DE5048
	0x03DCF6C4 BL 0x1C16F20
	0x03DCF6C8 ADRP X0, 0x397000
	0x03DCF6CC LDR X0, [X0 + 0x4A8]
	0x03DCF6D0 BL 0x1C16D08
	0x03DCF6D4 MOVN X8, 0x0
	0x03DCF6D8 STP X0, X8, [X31 + 0x8]
	0x03DCF6DC ADD X0, X31, 0x8
	0x03DCF6E0 MOV X1, X31
	0x03DCF6E4 STR W22, [X31 + 0x18]
	0x03DCF6E8 BL 0x33B162C
	0x03DCF6EC MOV X19, X0
	0x03DCF6F0 ADRP X0, 0x39A000
	0x03DCF6F4 LDR X0, [X0 + 0x380]
	0x03DCF6F8 BL 0x1C16D08
	0x03DCF6FC MOV X20, X0
	0x03DCF700 ADRP X0, 0x39A000
	0x03DCF704 LDR X0, [X0 + 0x360]
	0x03DCF708 BL 0x1C16D08
	0x03DCF70C MOV X2, X0
	0x03DCF710 MOV X0, X20
	0x03DCF714 MOV X1, X19
	0x03DCF718 MOV X3, X31
	0x03DCF71C BL 0x32274B8
	0x03DCF720 MOV X19, X0
	0x03DCF724 ADRP X0, 0x32C000
	0x03DCF728 LDR X0, [X0 + 0x578]
	0x03DCF72C BL 0x1C16D08
	0x03DCF730 BL 0x1C16F10
	0x03DCF734 MOV X20, X0
	0x03DCF738 ADRP X0, 0x326000
	0x03DCF73C LDR X0, [X0 + 0xC10]
	0x03DCF740 BL 0x1C16D08
	0x03DCF744 MOV X2, X0
	0x03DCF748 MOV X0, X20
	0x03DCF74C MOV X1, X19
	0x03DCF750 MOV X3, X31
	0x03DCF754 BL 0x330E16C
	0x03DCF758 ADRP X0, 0x39A000
	0x03DCF75C LDR X0, [X0 + 0x388]
	0x03DCF760 BL 0x1C16D08
	0x03DCF764 MOV X1, X0
	0x03DCF768 MOV X0, X20
	0x03DCF76C BL 0x1C16DEC
	0x03DCF770 SUB X31, X31, 0x60
	0x03DCF774 STR X30, [X31 + 0x20]
	0x03DCF778 STP X24, X23, [X31 + 0x30]
	0x03DCF77C STP X22, X21, [X31 + 0x40]
	0x03DCF780 STP X20, X19, [X31 + 0x50]
	0x03DCF784 ADRP X24, 0x619000
	0x03DCF788 LDRB W8, [X24 + 0x1AE]
	0x03DCF78C MOV X20, X4
	0x03DCF790 MOV X21, X3
	0x03DCF794 MOV W22, W2
	0x03DCF798 MOV X19, X1
	0x03DCF79C MOV X23, X0
	0x03DCF7A0 TBNZ X8, 0x0, 0x3DCF7C4
	0x03DCF7A4 ADRP X0, 0x396000
	0x03DCF7A8 LDR X0, [X0 + 0x360]
	0x03DCF7AC BL 0x1C16CF4
	0x03DCF7B0 ADRP X0, 0x396000
	0x03DCF7B4 LDR X0, [X0 + 0x2F8]
	0x03DCF7B8 BL 0x1C16CF4
	0x03DCF7BC MOVZ W8, 0x1
	0x03DCF7C0 STRB W8, [X24 + 0x1AE]
	0x03DCF7C4 MOVZ W8, 0x3
	0x03DCF7C8 MOVK W8, 0x70000
	0x03DCF7CC CMP W22, W8
	0x03DCF7D0 B.EQ 0x3DCF860
	0x03DCF7D4 MOVZ W8, 0x2
	0x03DCF7D8 MOVK W8, 0x70000
	0x03DCF7DC CMP W22, W8
	0x03DCF7E0 B.NE 0x3DCF8D4
	0x03DCF7E4 ADRP X8, 0x396000
	0x03DCF7E8 LDR X8, [X8 + 0x360]
	0x03DCF7EC ADD X22, X23, 0x28
	0x03DCF7F0 MOV X0, X22
	0x03DCF7F4 LDR X1, [X8]
	0x03DCF7F8 BL 0x266DB18
	0x03DCF7FC LDR X8, [X0 + 0x30]
	0x03DCF800 LDR W1, [X0 + 0x38]
	0x03DCF804 AND X3, X20, 0x0
	0x03DCF808 MOV X2, X21
	0x03DCF80C MOV X0, X8
	0x03DCF810 MOV X4, X31
	0x03DCF814 BL 0x3CE9440
	0x03DCF818 TBZ X0, 0x0, 0x3DCF8BC
	0x03DCF81C ADRP X8, 0x396000
	0x03DCF820 LDR X8, [X8 + 0x2F8]
	0x03DCF824 MOV X0, X22
	0x03DCF828 LDR X1, [X8]
	0x03DCF82C BL 0x266DB34
	0x03DCF830 STR X21, [X0 + 0x30]
	0x03DCF834 STR W20, [X0 + 0x38]
	0x03DCF838 CBZ X19, 0x3DCF8B8
	0x03DCF83C MOV X0, X19
	0x03DCF840 LDP X20, X19, [X31 + 0x50]
	0x03DCF844 LDP X22, X21, [X31 + 0x40]
	0x03DCF848 LDP X24, X23, [X31 + 0x30]
	0x03DCF84C LDR X30, [X31 + 0x20]
	0x03DCF850 MOVZ W1, 0x800
	0x03DCF854 MOV X2, X31
	0x03DCF858 ADD X31, X31, 0x60
	0x03DCF85C B 0x3DE5048
	0x03DCF860 ADRP X8, 0x396000
	0x03DCF864 LDR X8, [X8 + 0x360]
	0x03DCF868 ADD X22, X23, 0x28
	0x03DCF86C MOV X0, X22
	0x03DCF870 LDR X1, [X8]
	0x03DCF874 BL 0x266DB18
	0x03DCF878 LDUR X8, [X0 + 0x3C]
	0x03DCF87C LDR W1, [X0 + 0x44]
	0x03DCF880 AND X3, X20, 0x0
	0x03DCF884 MOV X2, X21
	0x03DCF888 MOV X0, X8
	0x03DCF88C MOV X4, X31
	0x03DCF890 BL 0x3CE9440
	0x03DCF894 TBZ X0, 0x0, 0x3DCF8BC
	0x03DCF898 ADRP X8, 0x396000
	0x03DCF89C LDR X8, [X8 + 0x2F8]
	0x03DCF8A0 MOV X0, X22
	0x03DCF8A4 LDR X1, [X8]
	0x03DCF8A8 BL 0x266DB34
	0x03DCF8AC STUR X21, [X0 + 0x3C]
	0x03DCF8B0 STR W20, [X0 + 0x44]
	0x03DCF8B4 CBNZ X19, 0x3DCF83C
	0x03DCF8B8 BL 0x1C16F20
	0x03DCF8BC LDP X20, X19, [X31 + 0x50]
	0x03DCF8C0 LDP X22, X21, [X31 + 0x40]
	0x03DCF8C4 LDP X24, X23, [X31 + 0x30]
	0x03DCF8C8 LDR X30, [X31 + 0x20]
	0x03DCF8CC ADD X31, X31, 0x60
	0x03DCF8D0 RET
	0x03DCF8D4 ADRP X0, 0x397000
	0x03DCF8D8 LDR X0, [X0 + 0x4A8]
	0x03DCF8DC BL 0x1C16D08
	0x03DCF8E0 MOVN X8, 0x0
	0x03DCF8E4 STP X0, X8, [X31 + 0x8]
	0x03DCF8E8 ADD X0, X31, 0x8
	0x03DCF8EC MOV X1, X31
	0x03DCF8F0 STR W22, [X31 + 0x18]
	0x03DCF8F4 BL 0x33B162C
	0x03DCF8F8 MOV X19, X0
	0x03DCF8FC ADRP X0, 0x39A000
	0x03DCF900 LDR X0, [X0 + 0x390]
	0x03DCF904 BL 0x1C16D08
	0x03DCF908 MOV X20, X0
	0x03DCF90C ADRP X0, 0x39A000
	0x03DCF910 LDR X0, [X0 + 0x360]
	0x03DCF914 BL 0x1C16D08
	0x03DCF918 MOV X2, X0
	0x03DCF91C MOV X0, X20
	0x03DCF920 MOV X1, X19
	0x03DCF924 MOV X3, X31
	0x03DCF928 BL 0x32274B8
	0x03DCF92C MOV X19, X0
	0x03DCF930 ADRP X0, 0x32C000
	0x03DCF934 LDR X0, [X0 + 0x578]
	0x03DCF938 BL 0x1C16D08
	0x03DCF93C BL 0x1C16F10
	0x03DCF940 MOV X20, X0
	0x03DCF944 ADRP X0, 0x326000
	0x03DCF948 LDR X0, [X0 + 0xC10]
	0x03DCF94C BL 0x1C16D08
	0x03DCF950 MOV X2, X0
	0x03DCF954 MOV X0, X20
	0x03DCF958 MOV X1, X19
	0x03DCF95C MOV X3, X31
	0x03DCF960 BL 0x330E16C
	0x03DCF964 ADRP X0, 0x39A000
	0x03DCF968 LDR X0, [X0 + 0x398]
	0x03DCF96C BL 0x1C16D08
	0x03DCF970 MOV X1, X0
	0x03DCF974 MOV X0, X20
	0x03DCF978 BL 0x1C16DEC
	0x03DCF97C SUB X31, X31, 0x50
	0x03DCF980 STP X30, X23, [X31 + 0x20]
	0x03DCF984 STP X22, X21, [X31 + 0x30]
	0x03DCF988 STP X20, X19, [X31 + 0x40]
	0x03DCF98C ADRP X23, 0x619000
	0x03DCF990 LDRB W8, [X23 + 0x1AF]
	0x03DCF994 MOV X20, X3
	0x03DCF998 MOV W21, W2
	0x03DCF99C MOV X19, X1
	0x03DCF9A0 MOV X22, X0
	0x03DCF9A4 TBNZ X8, 0x0, 0x3DCF9C8
	0x03DCF9A8 ADRP X0, 0x396000
	0x03DCF9AC LDR X0, [X0 + 0x360]
	0x03DCF9B0 BL 0x1C16CF4
	0x03DCF9B4 ADRP X0, 0x396000
	0x03DCF9B8 LDR X0, [X0 + 0x2F8]
	0x03DCF9BC BL 0x1C16CF4
	0x03DCF9C0 MOVZ W8, 0x1
	0x03DCF9C4 STRB W8, [X23 + 0x1AF]
	0x03DCF9C8 MOVZ W8, 0x4
	0x03DCF9CC MOVK W8, 0x70000
	0x03DCF9D0 CMP W21, W8
	0x03DCF9D4 B.NE 0x3DCFA54
	0x03DCF9D8 ADRP X8, 0x396000
	0x03DCF9DC LDR X8, [X8 + 0x360]
	0x03DCF9E0 ADD X21, X22, 0x28
	0x03DCF9E4 MOV X0, X21
	0x03DCF9E8 LDR X1, [X8]
	0x03DCF9EC BL 0x266DB18
	0x03DCF9F0 LDR X0, [X0 + 0x48]
	0x03DCF9F4 MOV X1, X20
	0x03DCF9F8 MOV X2, X31
	0x03DCF9FC BL 0x3CE9B58
	0x03DCFA00 TBZ X0, 0x0, 0x3DCFA40
	0x03DCFA04 ADRP X8, 0x396000
	0x03DCFA08 LDR X8, [X8 + 0x2F8]
	0x03DCFA0C MOV X0, X21
	0x03DCFA10 LDR X1, [X8]
	0x03DCFA14 BL 0x266DB34
	0x03DCFA18 STR X20, [X0 + 0x48]
	0x03DCFA1C CBZ X19, 0x3DCFAFC
	0x03DCFA20 MOV X0, X19
	0x03DCFA24 LDP X20, X19, [X31 + 0x40]
	0x03DCFA28 LDP X22, X21, [X31 + 0x30]
	0x03DCFA2C LDP X30, X23, [X31 + 0x20]
	0x03DCFA30 MOVZ W1, 0x800
	0x03DCFA34 MOV X2, X31
	0x03DCFA38 ADD X31, X31, 0x50
	0x03DCFA3C B 0x3DE5048
	0x03DCFA40 LDP X20, X19, [X31 + 0x40]
	0x03DCFA44 LDP X22, X21, [X31 + 0x30]
	0x03DCFA48 LDP X30, X23, [X31 + 0x20]
	0x03DCFA4C ADD X31, X31, 0x50
	0x03DCFA50 RET
	0x03DCFA54 ADRP X0, 0x397000
	0x03DCFA58 LDR X0, [X0 + 0x4A8]
	0x03DCFA5C BL 0x1C16D08
	0x03DCFA60 MOVN X8, 0x0
	0x03DCFA64 STP X0, X8, [X31 + 0x8]
	0x03DCFA68 ADD X0, X31, 0x8
	0x03DCFA6C MOV X1, X31
	0x03DCFA70 STR W21, [X31 + 0x18]
	0x03DCFA74 BL 0x33B162C
	0x03DCFA78 MOV X19, X0
	0x03DCFA7C ADRP X0, 0x39A000
	0x03DCFA80 LDR X0, [X0 + 0x3A0]
	0x03DCFA84 BL 0x1C16D08
	0x03DCFA88 MOV X20, X0
	0x03DCFA8C ADRP X0, 0x39A000
	0x03DCFA90 LDR X0, [X0 + 0x360]
	0x03DCFA94 BL 0x1C16D08
	0x03DCFA98 MOV X2, X0
	0x03DCFA9C MOV X0, X20
	0x03DCFAA0 MOV X1, X19
	0x03DCFAA4 MOV X3, X31
	0x03DCFAA8 BL 0x32274B8
	0x03DCFAAC MOV X19, X0
	0x03DCFAB0 ADRP X0, 0x32C000
	0x03DCFAB4 LDR X0, [X0 + 0x578]
	0x03DCFAB8 BL 0x1C16D08
	0x03DCFABC BL 0x1C16F10
	0x03DCFAC0 MOV X20, X0
	0x03DCFAC4 ADRP X0, 0x326000
	0x03DCFAC8 LDR X0, [X0 + 0xC10]
	0x03DCFACC BL 0x1C16D08
	0x03DCFAD0 MOV X2, X0
	0x03DCFAD4 MOV X0, X20
	0x03DCFAD8 MOV X1, X19
	0x03DCFADC MOV X3, X31
	0x03DCFAE0 BL 0x330E16C
	0x03DCFAE4 ADRP X0, 0x39A000
	0x03DCFAE8 LDR X0, [X0 + 0x3A8]
	0x03DCFAEC BL 0x1C16D08
	0x03DCFAF0 MOV X1, X0
	0x03DCFAF4 MOV X0, X20
	0x03DCFAF8 BL 0x1C16DEC
	0x03DCFAFC BL 0x1C16F20
	0x03DCFB00 SUB X31, X31, 0x50
	0x03DCFB04 STP X30, X23, [X31 + 0x20]
	0x03DCFB08 STP X22, X21, [X31 + 0x30]
	0x03DCFB0C STP X20, X19, [X31 + 0x40]
	0x03DCFB10 ADRP X23, 0x619000
	0x03DCFB14 LDRB W8, [X23 + 0x1B0]
	0x03DCFB18 MOV X20, X3
	0x03DCFB1C MOV W21, W2
	0x03DCFB20 MOV X19, X1
	0x03DCFB24 MOV X22, X0
	0x03DCFB28 TBNZ X8, 0x0, 0x3DCFB40
	0x03DCFB2C ADRP X0, 0x396000
	0x03DCFB30 LDR X0, [X0 + 0x2F8]
	0x03DCFB34 BL 0x1C16CF4
	0x03DCFB38 MOVZ W8, 0x1
	0x03DCFB3C STRB W8, [X23 + 0x1B0]
	0x03DCFB40 MOVZ W8, 0x5
	0x03DCFB44 MOVK W8, 0x70000
	0x03DCFB48 CMP W21, W8
	0x03DCFB4C B.NE 0x3DCFB98
	0x03DCFB50 ADRP X8, 0x396000
	0x03DCFB54 LDR X8, [X8 + 0x2F8]
	0x03DCFB58 ADD X0, X22, 0x28
	0x03DCFB5C LDR X1, [X8]
	0x03DCFB60 BL 0x266DB34
	0x03DCFB64 LDR V0, [X20]
	0x03DCFB68 LDR W8, [X20 + 0x10]
	0x03DCFB6C STR V0, [X0 + 0x5]
	0x03DCFB70 STR W8, [X0 + 0x60]
	0x03DCFB74 CBZ X19, 0x3DCFC40
	0x03DCFB78 MOV X0, X19
	0x03DCFB7C LDP X20, X19, [X31 + 0x40]
	0x03DCFB80 LDP X22, X21, [X31 + 0x30]
	0x03DCFB84 LDP X30, X23, [X31 + 0x20]
	0x03DCFB88 MOVZ W1, 0x800
	0x03DCFB8C MOV X2, X31
	0x03DCFB90 ADD X31, X31, 0x50
	0x03DCFB94 B 0x3DE5048
	0x03DCFB98 ADRP X0, 0x397000
	0x03DCFB9C LDR X0, [X0 + 0x4A8]
	0x03DCFBA0 BL 0x1C16D08
	0x03DCFBA4 MOVN X8, 0x0
	0x03DCFBA8 STP X0, X8, [X31 + 0x8]
	0x03DCFBAC ADD X0, X31, 0x8
	0x03DCFBB0 MOV X1, X31
	0x03DCFBB4 STR W21, [X31 + 0x18]
	0x03DCFBB8 BL 0x33B162C
	0x03DCFBBC MOV X19, X0
	0x03DCFBC0 ADRP X0, 0x39A000
	0x03DCFBC4 LDR X0, [X0 + 0x3B0]
	0x03DCFBC8 BL 0x1C16D08
	0x03DCFBCC MOV X20, X0
	0x03DCFBD0 ADRP X0, 0x39A000
	0x03DCFBD4 LDR X0, [X0 + 0x360]
	0x03DCFBD8 BL 0x1C16D08
	0x03DCFBDC MOV X2, X0
	0x03DCFBE0 MOV X0, X20
	0x03DCFBE4 MOV X1, X19
	0x03DCFBE8 MOV X3, X31
	0x03DCFBEC BL 0x32274B8
	0x03DCFBF0 MOV X19, X0
	0x03DCFBF4 ADRP X0, 0x32C000
	0x03DCFBF8 LDR X0, [X0 + 0x578]
	0x03DCFBFC BL 0x1C16D08
	0x03DCFC00 BL 0x1C16F10
	0x03DCFC04 MOV X20, X0
	0x03DCFC08 ADRP X0, 0x326000
	0x03DCFC0C LDR X0, [X0 + 0xC10]
	0x03DCFC10 BL 0x1C16D08
	0x03DCFC14 MOV X2, X0
	0x03DCFC18 MOV X0, X20
	0x03DCFC1C MOV X1, X19
	0x03DCFC20 MOV X3, X31
	0x03DCFC24 BL 0x330E16C
	0x03DCFC28 ADRP X0, 0x39A000
	0x03DCFC2C LDR X0, [X0 + 0x3B8]
	0x03DCFC30 BL 0x1C16D08
	0x03DCFC34 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x61A000
	009 Move W8, [X23+427]
	010 Move X20, X3
	011 Move W22, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x397000
	019 Move X0, [X0+768]
	020 Call 0x1C17CF4
	021 Move X0, 0x397000
	022 Move X0, [X0+760]
	023 Call 0x1C17CF4
	024 Move X0, 0x397000
	025 Move X0, [X0+752]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+427], W8
	029 Move W8, 7
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W8, 0xFFF9
	033 NotImplemented "Instruction MOVK not yet implemented."
	034 Add W8, W22, W8
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X9, -52649984
	037 Add X9, X9, 768
	038 NotImplemented "Instruction ADR not yet implemented."
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Add X10, X10, X11
	041 CallNoReturn X10
	042 Move X8, 0x397000
	043 Move X8, [X8+752]
	044 Add X0, X21, 8
	045 Move X1, [X8]
	046 Call StyleDataRef`1<LayoutData>.Write, X0
	047 Move [X0+28], X20
	048 Compare X19, 0
	049 JumpIfEqual {466}
	050 Move X21, [X19+696]
	051 Move X0, X20
	052 Move X1, X31
	053 Call StyleValueExtensions.ToYogaValue, X0
	054 Compare X21, 0
	055 JumpIfEqual {466}
	056 Move X1, X0
	057 Move X0, X21
	058 Move X2, X31
	059 Call YogaNode.set_Bottom, X0, X1
	060 Or W8, W31, 0x10001
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W8, 2
	063 NotImplemented "Instruction MOVK not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W8, 7
	066 NotImplemented "Instruction MOVK not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, 0x397000
	069 Move X8, [X8+768]
	070 Move X0, X21
	071 Move X1, [X8]
	072 Call 0x266D4BC, X0
	073 Move [X0+92], X20
	074 Compare X19, 0
	075 JumpIfNotEqual {92}
	076 Move X8, 0x397000
	077 Move X8, [X8+768]
	078 Move X0, X21
	079 Move X1, [X8]
	080 Call 0x266D4BC, X0
	081 Move [X0+16], X20
	082 Compare X19, 0
	083 JumpIfNotEqual {92}
	084 Move X8, 0x397000
	085 Move X8, [X8+768]
	086 Move X0, X21
	087 Move X1, [X8]
	088 Call 0x266D4BC, X0
	089 Move [X0+24], X20
	090 Compare X19, 0
	091 JumpIfEqual {466}
	092 Move W1, 2072
	093 Move W8, 0xFFF9
	094 NotImplemented "Instruction MOVK not yet implemented."
	095 Add W8, W22, W8
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X9, -52649984
	098 Add X9, X9, 820
	099 NotImplemented "Instruction ADR not yet implemented."
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Add X10, X10, X11
	102 CallNoReturn X10
	103 Move X8, 0x397000
	104 Move X8, [X8+760]
	105 Add X0, X21, 40
	106 Move X1, [X8]
	107 Call StyleDataRef`1<VisualData>.Write, X0
	108 Move [X0+116], X20
	109 Compare X19, 0
	110 JumpIfNotEqual {475}
	111 Move W8, 13
	112 NotImplemented "Instruction MOVK not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X8, 0x397000
	115 Move X8, [X8+768]
	116 Move X0, X21
	117 Move X1, [X8]
	118 Call 0x266D4BC, X0
	119 Move [X0+132], X20
	120 Compare X19, 0
	121 JumpIfNotEqual {92}
	122 Move X8, 0x397000
	123 Move X8, [X8+752]
	124 Add X0, X21, 8
	125 Move X1, [X8]
	126 Call StyleDataRef`1<LayoutData>.Write, X0
	127 Move [X0+40], X20
	128 Compare X19, 0
	129 JumpIfEqual {466}
	130 Move X21, [X19+696]
	131 Move X0, X20
	132 Move X1, X31
	133 Call StyleValueExtensions.ToYogaValue, X0
	134 Compare X21, 0
	135 JumpIfEqual {466}
	136 Move X1, X0
	137 Move X0, X21
	138 Move X2, X31
	139 Call YogaNode.set_FlexBasis, X0, X1
	140 Move X8, 0x397000
	141 Move X8, [X8+752]
	142 Add X0, X21, 8
	143 Move X1, [X8]
	144 Call StyleDataRef`1<LayoutData>.Write, X0
	145 Move [X0+64], X20
	146 Compare X19, 0
	147 JumpIfEqual {466}
	148 Move X21, [X19+696]
	149 Move X0, X20
	150 Move X1, X31
	151 Call StyleValueExtensions.ToYogaValue, X0
	152 Compare X21, 0
	153 JumpIfEqual {466}
	154 Move X1, X0
	155 Move X0, X21
	156 Move X2, X31
	157 Call YogaNode.set_Height, X0, X1
	158 Move X8, 0x397000
	159 Move X8, [X8+752]
	160 Add X0, X21, 8
	161 Move X1, [X8]
	162 Call StyleDataRef`1<LayoutData>.Write, X0
	163 Move [X0+76], X20
	164 Compare X19, 0
	165 JumpIfEqual {466}
	166 Move X21, [X19+696]
	167 Move X0, X20
	168 Move X1, X31
	169 Call StyleValueExtensions.ToYogaValue, X0
	170 Compare X21, 0
	171 JumpIfEqual {466}
	172 Move X1, X0
	173 Move X0, X21
	174 Move X2, X31
	175 Call YogaNode.set_Left, X0, X1
	176 Move X8, 0x397000
	177 Move X8, [X8+752]
	178 Add X0, X21, 8
	179 Move X1, [X8]
	180 Call StyleDataRef`1<LayoutData>.Write, X0
	181 Move [X0+84], X20
	182 Compare X19, 0
	183 JumpIfEqual {466}
	184 Move X21, [X19+696]
	185 Move X0, X20
	186 Move X1, X31
	187 Call StyleValueExtensions.ToYogaValue, X0
	188 Compare X21, 0
	189 JumpIfEqual {466}
	190 Move X1, X0
	191 Move X0, X21
	192 Move X2, X31
	193 Call YogaNode.set_MarginBottom, X0, X1
	194 Move X8, 0x397000
	195 Move X8, [X8+752]
	196 Add X0, X21, 8
	197 Move X1, [X8]
	198 Call StyleDataRef`1<LayoutData>.Write, X0
	199 Move [X0+92], X20
	200 Compare X19, 0
	201 JumpIfEqual {466}
	202 Move X21, [X19+696]
	203 Move X0, X20
	204 Move X1, X31
	205 Call StyleValueExtensions.ToYogaValue, X0
	206 Compare X21, 0
	207 JumpIfEqual {466}
	208 Move X1, X0
	209 Move X0, X21
	210 Move X2, X31
	211 Call YogaNode.set_MarginLeft, X0, X1
	212 Move X8, 0x397000
	213 Move X8, [X8+752]
	214 Add X0, X21, 8
	215 Move X1, [X8]
	216 Call StyleDataRef`1<LayoutData>.Write, X0
	217 Move [X0+100], X20
	218 Compare X19, 0
	219 JumpIfEqual {466}
	220 Move X21, [X19+696]
	221 Move X0, X20
	222 Move X1, X31
	223 Call StyleValueExtensions.ToYogaValue, X0
	224 Compare X21, 0
	225 JumpIfEqual {466}
	226 Move X1, X0
	227 Move X0, X21
	228 Move X2, X31
	229 Call YogaNode.set_MarginRight, X0, X1
	230 Move X8, 0x397000
	231 Move X8, [X8+752]
	232 Add X0, X21, 8
	233 Move X1, [X8]
	234 Call StyleDataRef`1<LayoutData>.Write, X0
	235 Move [X0+108], X20
	236 Compare X19, 0
	237 JumpIfEqual {466}
	238 Move X21, [X19+696]
	239 Move X0, X20
	240 Move X1, X31
	241 Call StyleValueExtensions.ToYogaValue, X0
	242 Compare X21, 0
	243 JumpIfEqual {466}
	244 Move X1, X0
	245 Move X0, X21
	246 Move X2, X31
	247 Call YogaNode.set_MarginTop, X0, X1
	248 Move X8, 0x397000
	249 Move X8, [X8+752]
	250 Add X0, X21, 8
	251 Move X1, [X8]
	252 Call StyleDataRef`1<LayoutData>.Write, X0
	253 Move [X0+116], X20
	254 Compare X19, 0
	255 JumpIfEqual {466}
	256 Move X21, [X19+696]
	257 Move X0, X20
	258 Move X1, X31
	259 Call StyleValueExtensions.ToYogaValue, X0
	260 Compare X21, 0
	261 JumpIfEqual {466}
	262 Move X1, X0
	263 Move X0, X21
	264 Move X2, X31
	265 Call YogaNode.set_MaxHeight, X0, X1
	266 Move X8, 0x397000
	267 Move X8, [X8+752]
	268 Add X0, X21, 8
	269 Move X1, [X8]
	270 Call StyleDataRef`1<LayoutData>.Write, X0
	271 Move [X0+124], X20
	272 Compare X19, 0
	273 JumpIfEqual {466}
	274 Move X21, [X19+696]
	275 Move X0, X20
	276 Move X1, X31
	277 Call StyleValueExtensions.ToYogaValue, X0
	278 Compare X21, 0
	279 JumpIfEqual {466}
	280 Move X1, X0
	281 Move X0, X21
	282 Move X2, X31
	283 Call YogaNode.set_MaxWidth, X0, X1
	284 Move X8, 0x397000
	285 Move X8, [X8+752]
	286 Add X0, X21, 8
	287 Move X1, [X8]
	288 Call StyleDataRef`1<LayoutData>.Write, X0
	289 Move [X0+132], X20
	290 Compare X19, 0
	291 JumpIfEqual {466}
	292 Move X21, [X19+696]
	293 Move X0, X20
	294 Move X1, X31
	295 Call StyleValueExtensions.ToYogaValue, X0
	296 Compare X21, 0
	297 JumpIfEqual {466}
	298 Move X1, X0
	299 Move X0, X21
	300 Move X2, X31
	301 Call YogaNode.set_MinHeight, X0, X1
	302 Move X8, 0x397000
	303 Move X8, [X8+752]
	304 Add X0, X21, 8
	305 Move X1, [X8]
	306 Call StyleDataRef`1<LayoutData>.Write, X0
	307 Move [X0+140], X20
	308 Compare X19, 0
	309 JumpIfEqual {466}
	310 Move X21, [X19+696]
	311 Move X0, X20
	312 Move X1, X31
	313 Call StyleValueExtensions.ToYogaValue, X0
	314 Compare X21, 0
	315 JumpIfEqual {466}
	316 Move X1, X0
	317 Move X0, X21
	318 Move X2, X31
	319 Call YogaNode.set_MinWidth, X0, X1
	320 Move X8, 0x397000
	321 Move X8, [X8+752]
	322 Add X0, X21, 8
	323 Move X1, [X8]
	324 Call StyleDataRef`1<LayoutData>.Write, X0
	325 Move [X0+148], X20
	326 Compare X19, 0
	327 JumpIfEqual {466}
	328 Move X21, [X19+696]
	329 Move X0, X20
	330 Move X1, X31
	331 Call StyleValueExtensions.ToYogaValue, X0
	332 Compare X21, 0
	333 JumpIfEqual {466}
	334 Move X1, X0
	335 Move X0, X21
	336 Move X2, X31
	337 Call YogaNode.set_PaddingBottom, X0, X1
	338 Move X8, 0x397000
	339 Move X8, [X8+752]
	340 Add X0, X21, 8
	341 Move X1, [X8]
	342 Call StyleDataRef`1<LayoutData>.Write, X0
	343 Move [X0+156], X20
	344 Compare X19, 0
	345 JumpIfEqual {466}
	346 Move X21, [X19+696]
	347 Move X0, X20
	348 Move X1, X31
	349 Call StyleValueExtensions.ToYogaValue, X0
	350 Compare X21, 0
	351 JumpIfEqual {466}
	352 Move X1, X0
	353 Move X0, X21
	354 Move X2, X31
	355 Call YogaNode.set_PaddingLeft, X0, X1
	356 Move X8, 0x397000
	357 Move X8, [X8+752]
	358 Add X0, X21, 8
	359 Move X1, [X8]
	360 Call StyleDataRef`1<LayoutData>.Write, X0
	361 Move [X0+164], X20
	362 Compare X19, 0
	363 JumpIfEqual {466}
	364 Move X21, [X19+696]
	365 Move X0, X20
	366 Move X1, X31
	367 Call StyleValueExtensions.ToYogaValue, X0
	368 Compare X21, 0
	369 JumpIfEqual {466}
	370 Move X1, X0
	371 Move X0, X21
	372 Move X2, X31
	373 Call YogaNode.set_PaddingRight, X0, X1
	374 Move X8, 0x397000
	375 Move X8, [X8+752]
	376 Add X0, X21, 8
	377 Move X1, [X8]
	378 Call StyleDataRef`1<LayoutData>.Write, X0
	379 Move [X0+172], X20
	380 Compare X19, 0
	381 JumpIfEqual {466}
	382 Move X21, [X19+696]
	383 Move X0, X20
	384 Move X1, X31
	385 Call StyleValueExtensions.ToYogaValue, X0
	386 Compare X21, 0
	387 JumpIfEqual {466}
	388 Move X1, X0
	389 Move X0, X21
	390 Move X2, X31
	391 Call YogaNode.set_PaddingTop, X0, X1
	392 Move X8, 0x397000
	393 Move X8, [X8+752]
	394 Add X0, X21, 8
	395 Move X1, [X8]
	396 Call StyleDataRef`1<LayoutData>.Write, X0
	397 Move [X0+184], X20
	398 Compare X19, 0
	399 JumpIfEqual {466}
	400 Move X21, [X19+696]
	401 Move X0, X20
	402 Move X1, X31
	403 Call StyleValueExtensions.ToYogaValue, X0
	404 Compare X21, 0
	405 JumpIfEqual {466}
	406 Move X1, X0
	407 Move X0, X21
	408 Move X2, X31
	409 Call YogaNode.set_Right, X0, X1
	410 Move X8, 0x397000
	411 Move X8, [X8+752]
	412 Add X0, X21, 8
	413 Move X1, [X8]
	414 Call StyleDataRef`1<LayoutData>.Write, X0
	415 Move [X0+192], X20
	416 Compare X19, 0
	417 JumpIfEqual {466}
	418 Move X21, [X19+696]
	419 Move X0, X20
	420 Move X1, X31
	421 Call StyleValueExtensions.ToYogaValue, X0
	422 Compare X21, 0
	423 JumpIfEqual {466}
	424 Move X1, X0
	425 Move X0, X21
	426 Move X2, X31
	427 Call YogaNode.set_Top, X0, X1
	428 Move X8, 0x397000
	429 Move X8, [X8+752]
	430 Add X0, X21, 8
	431 Move X1, [X8]
	432 Call StyleDataRef`1<LayoutData>.Write, X0
	433 Move [X0+200], X20
	434 Compare X19, 0
	435 JumpIfEqual {466}
	436 Move X21, [X19+696]
	437 Move X0, X20
	438 Move X1, X31
	439 Call StyleValueExtensions.ToYogaValue, X0
	440 Compare X21, 0
	441 JumpIfEqual {466}
	442 Move X1, X0
	443 Move X0, X21
	444 Move X2, X31
	445 Call YogaNode.set_Width, X0, X1
	446 Move W1, 8
	447 Move X0, X19
	448 Move X20, [X31+64]
	449 Move X19, [X31+72]
	450 Move X22, [X31+48]
	451 Move X21, [X31+56]
	452 Move X30, [X31+32]
	453 Move X23, [X31+40]
	454 Move X2, X31
	455 Add X31, X31, 80
	456 Call VisualElement.IncrementVersion, X0, X1
	457 Return 
	458 Move X8, 0x397000
	459 Move X8, [X8+760]
	460 Add X0, X21, 40
	461 Move X1, [X8]
	462 Call StyleDataRef`1<VisualData>.Write, X0
	463 Move [X0+124], X20
	464 Compare X19, 0
	465 JumpIfNotEqual {475}
	466 Call 0x1C17F20
	467 Move X8, 0x397000
	468 Move X8, [X8+760]
	469 Add X0, X21, 40
	470 Move X1, [X8]
	471 Call StyleDataRef`1<VisualData>.Write, X0
	472 Move [X0+180], X20
	473 Compare X19, 0
	474 JumpIfEqual {466}
	475 Move W1, 2176
	476 Move X8, 0x397000
	477 Move X8, [X8+760]
	478 Add X0, X21, 40
	479 Move X1, [X8]
	480 Call StyleDataRef`1<VisualData>.Write, X0
	481 Move [X0+188], X20
	482 Compare X19, 0
	483 JumpIfNotEqual {475}
	484 Move X0, 0x398000
	485 Move X0, [X0+1192]
	486 Call 0x1C17D08
	487 Move TEMP, 0
	488 Not TEMP
	489 Move X8, TEMP
	490 Move [X31+8], X0
	491 Move [X31+16], X8
	492 Add X0, X31, 8
	493 Move X1, X31
	494 Move [X31+24], W22
	495 Call Enum.ToString, X0
	496 Move X19, X0
	497 Move X0, 0x39B000
	498 Move X0, [X0+856]
	499 Call 0x1C17D08
	500 Move X20, X0
	501 Move X0, 0x39B000
	502 Move X0, [X0+864]
	503 Call 0x1C17D08
	504 Move X2, X0
	505 Move X0, X20
	506 Move X1, X19
	507 Move X3, X31
	508 Call String.Concat, X0, X1, X2
	509 Move X19, X0
	510 Move X0, 0x32D000
	511 Move X0, [X0+1400]
	512 Call 0x1C17D08
	513 Call 0x1C17F10
	514 Move X20, X0
	515 Move X0, 0x327000
	516 Move X0, [X0+3088]
	517 Call 0x1C17D08
	518 Move X2, X0
	519 Move X0, X20
	520 Move X1, X19
	521 Move X3, X31
	522 Call ArgumentException..ctor, X0, X1, X2
	523 Move X0, 0x39B000
	524 Move X0, [X0+872]
	525 Call 0x1C17D08
	526 Move X1, X0
	527 Move X0, X20
	528 Call 0x1C17DEC

Method: System.Void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, System.Single newValue)

Disassembly:
	0x03DCFC38 MOV X0, X20
	0x03DCFC3C BL 0x1C16DEC
	0x03DCFC40 BL 0x1C16F20
	0x03DCFC44 SUB X31, X31, 0x70
	0x03DCFC48 STP D11, D10, [X31 + 0x20]
	0x03DCFC4C STP D9, D8, [X31 + 0x30]
	0x03DCFC50 STR X30, [X31 + 0x40]
	0x03DCFC54 STP X22, X21, [X31 + 0x50]
	0x03DCFC58 STP X20, X19, [X31 + 0x60]
	0x03DCFC5C ADRP X22, 0x619000
	0x03DCFC60 LDRB W8, [X22 + 0x1B1]
	0x03DCFC64 MOV V8.16B, V3.16B
	0x03DCFC68 MOV V9.16B, V2.16B
	0x03DCFC6C MOV V10.16B, V1.16B
	0x03DCFC70 MOV V11.16B, V0.16B
	0x03DCFC74 MOV W21, W2
	0x03DCFC78 MOV X19, X1
	0x03DCFC7C MOV X20, X0
	0x03DCFC80 TBNZ X8, 0x0, 0x3DCFCB0
	0x03DCFC84 ADRP X0, 0x396000
	0x03DCFC88 LDR X0, [X0 + 0x308]
	0x03DCFC8C BL 0x1C16CF4
	0x03DCFC90 ADRP X0, 0x396000
	0x03DCFC94 LDR X0, [X0 + 0x300]
	0x03DCFC98 BL 0x1C16CF4
	0x03DCFC9C ADRP X0, 0x396000
	0x03DCFCA0 LDR X0, [X0 + 0x2F8]
	0x03DCFCA4 BL 0x1C16CF4
	0x03DCFCA8 MOVZ W8, 0x1
	0x03DCFCAC STRB W8, [X22 + 0x1B1]
	0x03DCFCB0 MOVZ W8, 0x9
	0x03DCFCB4 MOVK W8, 0x10000
	0x03DCFCB8 CMP W21, W8
	0x03DCFCBC B.LE 0x3DCFD08
	0x03DCFCC0 SUB W8, W21, 0x70000
	0x03DCFCC4 CMP W8, 0xB
	0x03DCFCC8 B.HI 0x3DCFD70
	0x03DCFCCC ADRP X9, 0xFFFFFFFFFCDC9000
	0x03DCFCD0 ADD X9, X9, 0x36C
	0x03DCFCD4 ADR X10, 0x10
	0x03DCFCD8 LDRB W11, [X9, X8, LSL]
	0x03DCFCDC ADD X10, X10, X11, 0x2, LSL
	0x03DCFCE0 BR X10
	0x03DCFCE4 ADRP X8, 0x396000
	0x03DCFCE8 LDR X8, [X8 + 0x2F8]
	0x03DCFCEC ADD X0, X20, 0x28
	0x03DCFCF0 LDR X1, [X8]
	0x03DCFCF4 BL 0x266DB34
	0x03DCFCF8 STP S11, S10, [X0]
	0x03DCFCFC STP S9, S8, [X0 + 0x8]
	0x03DCFD00 CBNZ X19, 0x3DCFDE8
	0x03DCFD04 B 0x3DCFDC4
	0x03DCFD08 CMP W21, 0x10000
	0x03DCFD0C B.EQ 0x3DCFD48
	0x03DCFD10 MOVZ W8, 0x9
	0x03DCFD14 MOVK W8, 0x10000
	0x03DCFD18 CMP W21, W8
	0x03DCFD1C B.NE 0x3DCFE58
	0x03DCFD20 ADRP X8, 0x396000
	0x03DCFD24 LDR X8, [X8 + 0x300]
	0x03DCFD28 MOV X0, X20
	0x03DCFD2C LDR X1, [X8]
	0x03DCFD30 BL 0x266C4BC
	0x03DCFD34 STP S11, S10, [X0 + 0x68]
	0x03DCFD38 STP S9, S8, [X0 + 0x70]
	0x03DCFD3C CBZ X19, 0x3DCFDC4
	0x03DCFD40 MOVZ W1, 0x810
	0x03DCFD44 B 0x3DCFDEC
	0x03DCFD48 ADRP X8, 0x396000
	0x03DCFD4C LDR X8, [X8 + 0x300]
	0x03DCFD50 MOV X0, X20
	0x03DCFD54 LDR X1, [X8]
	0x03DCFD58 BL 0x266C4BC
	0x03DCFD5C STP S11, S10, [X0]
	0x03DCFD60 STP S9, S8, [X0 + 0x8]
	0x03DCFD64 CBZ X19, 0x3DCFDC4
	0x03DCFD68 MOVZ W1, 0x2010
	0x03DCFD6C B 0x3DCFDEC
	0x03DCFD70 MOVZ W8, 0x2
	0x03DCFD74 MOVK W8, 0x30000
	0x03DCFD78 CMP W21, W8
	0x03DCFD7C B.NE 0x3DCFE58
	0x03DCFD80 ADRP X8, 0x396000
	0x03DCFD84 LDR X8, [X8 + 0x308]
	0x03DCFD88 ADD X0, X20, 0x10
	0x03DCFD8C LDR X1, [X8]
	0x03DCFD90 BL 0x266CDBC
	0x03DCFD94 STP S11, S10, [X0 + 0x1C]
	0x03DCFD98 STP S9, S8, [X0 + 0x24]
	0x03DCFD9C CBNZ X19, 0x3DCFDE8
	0x03DCFDA0 B 0x3DCFDC4
	0x03DCFDA4 ADRP X8, 0x396000
	0x03DCFDA8 LDR X8, [X8 + 0x2F8]
	0x03DCFDAC ADD X0, X20, 0x28
	0x03DCFDB0 LDR X1, [X8]
	0x03DCFDB4 BL 0x266DB34
	0x03DCFDB8 STP S11, S10, [X0 + 0x64]
	0x03DCFDBC STP S9, S8, [X0 + 0x6C]
	0x03DCFDC0 CBNZ X19, 0x3DCFDE8
	0x03DCFDC4 BL 0x1C16F20
	0x03DCFDC8 ADRP X8, 0x396000
	0x03DCFDCC LDR X8, [X8 + 0x2F8]
	0x03DCFDD0 ADD X0, X20, 0x28
	0x03DCFDD4 LDR X1, [X8]
	0x03DCFDD8 BL 0x266DB34
	0x03DCFDDC STP S11, S10, [X0 + 0x84]
	0x03DCFDE0 STP S9, S8, [X0 + 0x8C]
	0x03DCFDE4 CBZ X19, 0x3DCFDC4
	0x03DCFDE8 MOVZ W1, 0x2000
	0x03DCFDEC MOV X0, X19
	0x03DCFDF0 LDP X20, X19, [X31 + 0x60]
	0x03DCFDF4 LDP X22, X21, [X31 + 0x50]
	0x03DCFDF8 LDR X30, [X31 + 0x40]
	0x03DCFDFC LDP D9, D8, [X31 + 0x30]
	0x03DCFE00 LDP D11, D10, [X31 + 0x20]
	0x03DCFE04 MOV X2, X31
	0x03DCFE08 ADD X31, X31, 0x70
	0x03DCFE0C B 0x3DE5048
	0x03DCFE10 ADRP X8, 0x396000
	0x03DCFE14 LDR X8, [X8 + 0x2F8]
	0x03DCFE18 ADD X0, X20, 0x28
	0x03DCFE1C LDR X1, [X8]
	0x03DCFE20 BL 0x266DB34
	0x03DCFE24 STP S11, S10, [X0 + 0x94]
	0x03DCFE28 STP S9, S8, [X0 + 0x9C]
	0x03DCFE2C CBNZ X19, 0x3DCFDE8
	0x03DCFE30 B 0x3DCFDC4
	0x03DCFE34 ADRP X8, 0x396000
	0x03DCFE38 LDR X8, [X8 + 0x2F8]
	0x03DCFE3C ADD X0, X20, 0x28
	0x03DCFE40 LDR X1, [X8]
	0x03DCFE44 BL 0x266DB34
	0x03DCFE48 STP S11, S10, [X0 + 0xA4]
	0x03DCFE4C STP S9, S8, [X0 + 0xAC]
	0x03DCFE50 CBNZ X19, 0x3DCFDE8
	0x03DCFE54 B 0x3DCFDC4
	0x03DCFE58 ADRP X0, 0x397000
	0x03DCFE5C LDR X0, [X0 + 0x4A8]
	0x03DCFE60 BL 0x1C16D08
	0x03DCFE64 MOVN X8, 0x0
	0x03DCFE68 STP X0, X8, [X31 + 0x8]
	0x03DCFE6C ADD X0, X31, 0x8
	0x03DCFE70 MOV X1, X31
	0x03DCFE74 STR W21, [X31 + 0x18]
	0x03DCFE78 BL 0x33B162C
	0x03DCFE7C MOV X19, X0
	0x03DCFE80 ADRP X0, 0x39A000
	0x03DCFE84 LDR X0, [X0 + 0x3C0]
	0x03DCFE88 BL 0x1C16D08
	0x03DCFE8C MOV X20, X0
	0x03DCFE90 ADRP X0, 0x39A000
	0x03DCFE94 LDR X0, [X0 + 0x360]
	0x03DCFE98 BL 0x1C16D08
	0x03DCFE9C MOV X2, X0
	0x03DCFEA0 MOV X0, X20
	0x03DCFEA4 MOV X1, X19
	0x03DCFEA8 MOV X3, X31
	0x03DCFEAC BL 0x32274B8
	0x03DCFEB0 MOV X19, X0
	0x03DCFEB4 ADRP X0, 0x32C000
	0x03DCFEB8 LDR X0, [X0 + 0x578]
	0x03DCFEBC BL 0x1C16D08
	0x03DCFEC0 BL 0x1C16F10
	0x03DCFEC4 MOV X20, X0
	0x03DCFEC8 ADRP X0, 0x326000
	0x03DCFECC LDR X0, [X0 + 0xC10]
	0x03DCFED0 BL 0x1C16D08
	0x03DCFED4 MOV X2, X0
	0x03DCFED8 MOV X0, X20
	0x03DCFEDC MOV X1, X19
	0x03DCFEE0 MOV X3, X31
	0x03DCFEE4 BL 0x330E16C
	0x03DCFEE8 ADRP X0, 0x39A000
	0x03DCFEEC LDR X0, [X0 + 0x3C8]
	0x03DCFEF0 BL 0x1C16D08
	0x03DCFEF4 MOV X1, X0
	0x03DCFEF8 MOV X0, X20
	0x03DCFEFC BL 0x1C16DEC
	0x03DCFF00 SUB X31, X31, 0x90
	0x03DCFF04 STP X30, X23, [X31 + 0x60]
	0x03DCFF08 STP X22, X21, [X31 + 0x70]
	0x03DCFF0C STP X20, X19, [X31 + 0x80]
	0x03DCFF10 ADRP X23, 0x619000
	0x03DCFF14 LDRB W8, [X23 + 0x1B2]
	0x03DCFF18 MOV X20, X3
	0x03DCFF1C MOV W21, W2
	0x03DCFF20 MOV X19, X1
	0x03DCFF24 MOV X22, X0
	0x03DCFF28 TBNZ X8, 0x0, 0x3DCFF4C
	0x03DCFF2C ADRP X0, 0x396000
	0x03DCFF30 LDR X0, [X0 + 0x360]
	0x03DCFF34 BL 0x1C16CF4
	0x03DCFF38 ADRP X0, 0x396000
	0x03DCFF3C LDR X0, [X0 + 0x2F8]
	0x03DCFF40 BL 0x1C16CF4
	0x03DCFF44 MOVZ W8, 0x1
	0x03DCFF48 STRB W8, [X23 + 0x1B2]
	0x03DCFF4C MOVZ W8, 0x1
	0x03DCFF50 MOVK W8, 0x70000
	0x03DCFF54 CMP W21, W8
	0x03DCFF58 B.NE 0x3DCFFE4
	0x03DCFF5C ADRP X8, 0x396000
	0x03DCFF60 LDR X8, [X8 + 0x360]
	0x03DCFF64 ADD X21, X22, 0x28
	0x03DCFF68 MOV X0, X21
	0x03DCFF6C LDR X1, [X8]
	0x03DCFF70 BL 0x266DB18
	0x03DCFF74 LDP V1, V0, [X0 + 0x10]
	0x03DCFF78 ADD X0, X31, 0x20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], D8
	003 Move [X31+40], X30
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x61A000
	009 Move W8, [X22+428]
	010 Move V8, V0
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x397000
	019 Move X0, [X0+776]
	020 Call 0x1C17CF4
	021 Move X0, 0x397000
	022 Move X0, [X0+768]
	023 Call 0x1C17CF4
	024 Move X0, 0x397000
	025 Move X0, [X0+760]
	026 Call 0x1C17CF4
	027 Move X0, 0x397000
	028 Move X0, [X0+752]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+428], W8
	032 Move W8, 12
	033 NotImplemented "Instruction MOVK not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, 7
	036 NotImplemented "Instruction MOVK not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W8, 14
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, 0x397000
	042 Move X8, [X8+760]
	043 Add X0, X20, 40
	044 Move X1, [X8]
	045 Call StyleDataRef`1<VisualData>.Write, X0
	046 Move [X0+196], S8
	047 Compare X19, 0
	048 JumpIfEqual {177}
	049 Move W1, 4096
	050 Or W8, W31, 0xFFFDFFFD
	051 Add W8, W21, W8
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X9, -52649984
	054 Add X9, X9, 834
	055 NotImplemented "Instruction ADR not yet implemented."
	056 Move W11, [X9]
	057 Add X10, X10, X11
	058 CallNoReturn X10
	059 Move X8, 0x397000
	060 Move X8, [X8+752]
	061 Add X0, X20, 8
	062 Move X1, [X8]
	063 Call StyleDataRef`1<LayoutData>.Write, X0
	064 Move [X0+12], S8
	065 Compare X19, 0
	066 JumpIfEqual {177}
	067 Move X0, [X19+696]
	068 Compare X0, 0
	069 JumpIfEqual {177}
	070 Move V0, V8
	071 Move X1, X31
	072 Call YogaNode.set_BorderBottomWidth, X0, V0
	073 Move X8, 0x397000
	074 Move X8, [X8+776]
	075 Add X0, X20, 16
	076 Move X1, [X8]
	077 Call StyleDataRef`1<RareData>.Write, X0
	078 Move [X0+60], S8
	079 Compare X19, 0
	080 JumpIfEqual {177}
	081 Move W1, 2056
	082 Move W8, 10
	083 NotImplemented "Instruction MOVK not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X8, 0x397000
	086 Move X8, [X8+768]
	087 Move X0, X20
	088 Move X1, [X8]
	089 Call 0x266D4BC, X0
	090 Move [X0+120], S8
	091 Compare X19, 0
	092 JumpIfEqual {177}
	093 Move W1, 2072
	094 Move X8, 0x397000
	095 Move X8, [X8+752]
	096 Add X0, X20, 8
	097 Move X1, [X8]
	098 Call StyleDataRef`1<LayoutData>.Write, X0
	099 Move [X0+16], S8
	100 Compare X19, 0
	101 JumpIfEqual {177}
	102 Move X0, [X19+696]
	103 Compare X0, 0
	104 JumpIfEqual {177}
	105 Move V0, V8
	106 Move X1, X31
	107 Call YogaNode.set_BorderLeftWidth, X0, V0
	108 Move X8, 0x397000
	109 Move X8, [X8+752]
	110 Add X0, X20, 8
	111 Move X1, [X8]
	112 Call StyleDataRef`1<LayoutData>.Write, X0
	113 Move [X0+20], S8
	114 Compare X19, 0
	115 JumpIfEqual {177}
	116 Move X0, [X19+696]
	117 Compare X0, 0
	118 JumpIfEqual {177}
	119 Move V0, V8
	120 Move X1, X31
	121 Call YogaNode.set_BorderRightWidth, X0, V0
	122 Move X8, 0x397000
	123 Move X8, [X8+752]
	124 Add X0, X20, 8
	125 Move X1, [X8]
	126 Call StyleDataRef`1<LayoutData>.Write, X0
	127 Move [X0+24], S8
	128 Compare X19, 0
	129 JumpIfEqual {177}
	130 Move X0, [X19+696]
	131 Compare X0, 0
	132 JumpIfEqual {177}
	133 Move V0, V8
	134 Move X1, X31
	135 Call YogaNode.set_BorderTopWidth, X0, V0
	136 Move W1, 2312
	137 Move X8, 0x397000
	138 Move X8, [X8+752]
	139 Add X0, X20, 8
	140 Move X1, [X8]
	141 Call StyleDataRef`1<LayoutData>.Write, X0
	142 Move [X0+52], S8
	143 Compare X19, 0
	144 JumpIfEqual {177}
	145 Move X0, [X19+696]
	146 Compare X0, 0
	147 JumpIfEqual {177}
	148 Move V0, V8
	149 Move X1, X31
	150 Call YogaNode.set_FlexGrow, X0, V0
	151 Move X8, 0x397000
	152 Move X8, [X8+752]
	153 Add X0, X20, 8
	154 Move X1, [X8]
	155 Call StyleDataRef`1<LayoutData>.Write, X0
	156 Move [X0+56], S8
	157 Compare X19, 0
	158 JumpIfEqual {177}
	159 Move X0, [X19+696]
	160 Compare X0, 0
	161 JumpIfEqual {177}
	162 Move V0, V8
	163 Move X1, X31
	164 Call YogaNode.set_FlexShrink, X0, V0
	165 Move W1, 8
	166 Move X0, X19
	167 Move X20, [X31+64]
	168 Move X19, [X31+72]
	169 Move X22, [X31+48]
	170 Move X21, [X31+56]
	171 Move X30, [X31+40]
	172 Move V8, [X31+32]
	173 Move X2, X31
	174 Add X31, X31, 80
	175 Call VisualElement.IncrementVersion, X0, X1
	176 Return 
	177 Call 0x1C17F20
	178 Move X0, 0x398000
	179 Move X0, [X0+1192]
	180 Call 0x1C17D08
	181 Move TEMP, 0
	182 Not TEMP
	183 Move X8, TEMP
	184 Move [X31+8], X0
	185 Move [X31+16], X8
	186 Add X0, X31, 8
	187 Move X1, X31
	188 Move [X31+24], W21
	189 Call Enum.ToString, X0
	190 Move X19, X0
	191 Move X0, 0x39B000
	192 Move X0, [X0+880]
	193 Call 0x1C17D08
	194 Move X20, X0
	195 Move X0, 0x39B000
	196 Move X0, [X0+864]
	197 Call 0x1C17D08
	198 Move X2, X0
	199 Move X0, X20
	200 Move X1, X19
	201 Move X3, X31
	202 Call String.Concat, X0, X1, X2
	203 Move X19, X0
	204 Move X0, 0x32D000
	205 Move X0, [X0+1400]
	206 Call 0x1C17D08
	207 Call 0x1C17F10
	208 Move X20, X0
	209 Move X0, 0x327000
	210 Move X0, [X0+3088]
	211 Call 0x1C17D08
	212 Move X2, X0
	213 Move X0, X20
	214 Move X1, X19
	215 Move X3, X31
	216 Call ArgumentException..ctor, X0, X1, X2
	217 Move X0, 0x39B000
	218 Move X0, [X0+888]
	219 Call 0x1C17D08
	220 Move X1, X0
	221 Move X0, X20
	222 Call 0x1C17DEC

Method: System.Void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, System.Int32 newValue)

Disassembly:
	0x03DCFF7C ADD X1, X31, 0x0
	0x03DCFF80 MOV X2, X31
	0x03DCFF84 STP V1, V0, [X31 + 0x40]
	0x03DCFF88 LDP V1, V0, [X20]
	0x03DCFF8C LDP V2, V3, [X31 + 0x40]
	0x03DCFF90 STP V1, V0, [X31]
	0x03DCFF94 STP V2, V3, [X31 + 0x20]
	0x03DCFF98 BL 0x3DE2858
	0x03DCFF9C TBZ X0, 0x0, 0x3DCFFD0
	0x03DCFFA0 ADRP X8, 0x396000
	0x03DCFFA4 LDR X8, [X8 + 0x2F8]
	0x03DCFFA8 MOV X0, X21
	0x03DCFFAC LDR X1, [X8]
	0x03DCFFB0 BL 0x266DB34
	0x03DCFFB4 LDP V0, V1, [X20]
	0x03DCFFB8 STP V0, V1, [X0 + 0x10]
	0x03DCFFBC CBZ X19, 0x3DD008C
	0x03DCFFC0 MOVZ W1, 0x800
	0x03DCFFC4 MOV X0, X19
	0x03DCFFC8 MOV X2, X31
	0x03DCFFCC BL 0x3DE5048
	0x03DCFFD0 LDP X20, X19, [X31 + 0x80]
	0x03DCFFD4 LDP X22, X21, [X31 + 0x70]
	0x03DCFFD8 LDP X30, X23, [X31 + 0x60]
	0x03DCFFDC ADD X31, X31, 0x90
	0x03DCFFE0 RET
	0x03DCFFE4 ADRP X0, 0x397000
	0x03DCFFE8 LDR X0, [X0 + 0x4A8]
	0x03DCFFEC BL 0x1C16D08
	0x03DCFFF0 MOVN X8, 0x0
	0x03DCFFF4 STP X0, X8, [X31 + 0x40]
	0x03DCFFF8 ADD X0, X31, 0x40
	0x03DCFFFC MOV X1, X31
	0x03DD0000 STR W21, [X31 + 0x50]
	0x03DD0004 BL 0x33B162C
	0x03DD0008 MOV X19, X0
	0x03DD000C ADRP X0, 0x399000
	0x03DD0010 LDR X0, [X0 + 0x3D0]
	0x03DD0014 BL 0x1C16D08
	0x03DD0018 MOV X20, X0
	0x03DD001C ADRP X0, 0x399000
	0x03DD0020 LDR X0, [X0 + 0x360]
	0x03DD0024 BL 0x1C16D08
	0x03DD0028 MOV X2, X0
	0x03DD002C MOV X0, X20
	0x03DD0030 MOV X1, X19
	0x03DD0034 MOV X3, X31
	0x03DD0038 BL 0x32274B8
	0x03DD003C MOV X19, X0
	0x03DD0040 ADRP X0, 0x32B000
	0x03DD0044 LDR X0, [X0 + 0x578]
	0x03DD0048 BL 0x1C16D08
	0x03DD004C BL 0x1C16F10
	0x03DD0050 MOV X20, X0
	0x03DD0054 ADRP X0, 0x325000
	0x03DD0058 LDR X0, [X0 + 0xC10]
	0x03DD005C BL 0x1C16D08
	0x03DD0060 MOV X2, X0
	0x03DD0064 MOV X0, X20
	0x03DD0068 MOV X1, X19
	0x03DD006C MOV X3, X31
	0x03DD0070 BL 0x330E16C
	0x03DD0074 ADRP X0, 0x399000
	0x03DD0078 LDR X0, [X0 + 0x3D8]
	0x03DD007C BL 0x1C16D08
	0x03DD0080 MOV X1, X0
	0x03DD0084 MOV X0, X20
	0x03DD0088 BL 0x1C16DEC
	0x03DD008C BL 0x1C16F20
	0x03DD0090 SUB X31, X31, 0x50
	0x03DD0094 STP X30, X23, [X31 + 0x20]
	0x03DD0098 STP X22, X21, [X31 + 0x30]
	0x03DD009C STP X20, X19, [X31 + 0x40]
	0x03DD00A0 ADRP X23, 0x618000
	0x03DD00A4 LDRB W8, [X23 + 0x1B3]
	0x03DD00A8 MOV X20, X3
	0x03DD00AC MOV W22, W2
	0x03DD00B0 MOV X19, X1
	0x03DD00B4 MOV X21, X0
	0x03DD00B8 TBNZ X8, 0x0, 0x3DD00E8
	0x03DD00BC ADRP X0, 0x323000
	0x03DD00C0 LDR X0, [X0 + 0x598]
	0x03DD00C4 BL 0x1C16CF4
	0x03DD00C8 ADRP X0, 0x395000
	0x03DD00CC LDR X0, [X0 + 0x368]
	0x03DD00D0 BL 0x1C16CF4
	0x03DD00D4 ADRP X0, 0x395000
	0x03DD00D8 LDR X0, [X0 + 0x300]
	0x03DD00DC BL 0x1C16CF4
	0x03DD00E0 MOVZ W8, 0x1
	0x03DD00E4 STRB W8, [X23 + 0x1B3]
	0x03DD00E8 MOVZ W8, 0x4
	0x03DD00EC MOVK W8, 0x10000
	0x03DD00F0 CMP W22, W8
	0x03DD00F4 B.NE 0x3DD0190
	0x03DD00F8 ADRP X8, 0x395000
	0x03DD00FC LDR X8, [X8 + 0x368]
	0x03DD0100 ADRP X22, 0x323000
	0x03DD0104 MOV X0, X21
	0x03DD0108 LDR X1, [X8]
	0x03DD010C LDR X22, [X22 + 0x598]
	0x03DD0110 BL 0x266C4A0
	0x03DD0114 MOV X8, X0
	0x03DD0118 LDR X0, [X22]
	0x03DD011C LDR X22, [X8 + 0x40]
	0x03DD0120 LDR W9, [X0 + 0xE0]
	0x03DD0124 CBNZ W9, 0x3DD012C
	0x03DD0128 BL 0x1C16DFC
	0x03DD012C MOV X0, X22
	0x03DD0130 MOV X1, X20
	0x03DD0134 MOV X2, X31
	0x03DD0138 BL 0x3C354F8
	0x03DD013C TBZ X0, 0x0, 0x3DD017C
	0x03DD0140 ADRP X8, 0x395000
	0x03DD0144 LDR X8, [X8 + 0x300]
	0x03DD0148 MOV X0, X21
	0x03DD014C LDR X1, [X8]
	0x03DD0150 BL 0x266C4BC
	0x03DD0154 STR X20, [X0 + 0x40]
	0x03DD0158 CBZ X19, 0x3DD0238
	0x03DD015C MOV X0, X19
	0x03DD0160 LDP X20, X19, [X31 + 0x40]
	0x03DD0164 LDP X22, X21, [X31 + 0x30]
	0x03DD0168 LDP X30, X23, [X31 + 0x20]
	0x03DD016C MOVZ W1, 0x818
	0x03DD0170 MOV X2, X31
	0x03DD0174 ADD X31, X31, 0x50
	0x03DD0178 B 0x3DE5048
	0x03DD017C LDP X20, X19, [X31 + 0x40]
	0x03DD0180 LDP X22, X21, [X31 + 0x30]
	0x03DD0184 LDP X30, X23, [X31 + 0x20]
	0x03DD0188 ADD X31, X31, 0x50
	0x03DD018C RET
	0x03DD0190 ADRP X0, 0x396000
	0x03DD0194 LDR X0, [X0 + 0x4A8]
	0x03DD0198 BL 0x1C16D08
	0x03DD019C MOVN X8, 0x0
	0x03DD01A0 STP X0, X8, [X31 + 0x8]
	0x03DD01A4 ADD X0, X31, 0x8
	0x03DD01A8 MOV X1, X31
	0x03DD01AC STR W22, [X31 + 0x18]
	0x03DD01B0 BL 0x33B162C
	0x03DD01B4 MOV X19, X0
	0x03DD01B8 ADRP X0, 0x399000
	0x03DD01BC LDR X0, [X0 + 0x3E0]
	0x03DD01C0 BL 0x1C16D08
	0x03DD01C4 MOV X20, X0
	0x03DD01C8 ADRP X0, 0x399000
	0x03DD01CC LDR X0, [X0 + 0x360]
	0x03DD01D0 BL 0x1C16D08
	0x03DD01D4 MOV X2, X0
	0x03DD01D8 MOV X0, X20
	0x03DD01DC MOV X1, X19
	0x03DD01E0 MOV X3, X31
	0x03DD01E4 BL 0x32274B8
	0x03DD01E8 MOV X19, X0
	0x03DD01EC ADRP X0, 0x32B000
	0x03DD01F0 LDR X0, [X0 + 0x578]
	0x03DD01F4 BL 0x1C16D08
	0x03DD01F8 BL 0x1C16F10
	0x03DD01FC MOV X20, X0
	0x03DD0200 ADRP X0, 0x325000
	0x03DD0204 LDR X0, [X0 + 0xC10]
	0x03DD0208 BL 0x1C16D08
	0x03DD020C MOV X2, X0
	0x03DD0210 MOV X0, X20
	0x03DD0214 MOV X1, X19
	0x03DD0218 MOV X3, X31
	0x03DD021C BL 0x330E16C
	0x03DD0220 ADRP X0, 0x399000
	0x03DD0224 LDR X0, [X0 + 0x3E8]
	0x03DD0228 BL 0x1C16D08
	0x03DD022C MOV X1, X0
	0x03DD0230 MOV X0, X20
	0x03DD0234 BL 0x1C16DEC
	0x03DD0238 BL 0x1C16F20
	0x03DD023C SUB X31, X31, 0x60
	0x03DD0240 STR X30, [X31 + 0x20]
	0x03DD0244 STP X24, X23, [X31 + 0x30]
	0x03DD0248 STP X22, X21, [X31 + 0x40]
	0x03DD024C STP X20, X19, [X31 + 0x50]
	0x03DD0250 ADRP X24, 0x618000
	0x03DD0254 LDRB W8, [X24 + 0x1B4]
	0x03DD0258 MOV X20, X4
	0x03DD025C MOV X21, X3
	0x03DD0260 MOV W23, W2
	0x03DD0264 MOV X19, X1
	0x03DD0268 MOV X22, X0
	0x03DD026C TBNZ X8, 0x0, 0x3DD0290
	0x03DD0270 ADRP X0, 0x395000
	0x03DD0274 LDR X0, [X0 + 0x368]
	0x03DD0278 BL 0x1C16CF4
	0x03DD027C ADRP X0, 0x395000
	0x03DD0280 LDR X0, [X0 + 0x300]
	0x03DD0284 BL 0x1C16CF4
	0x03DD0288 MOVZ W8, 0x1
	0x03DD028C STRB W8, [X24 + 0x1B4]
	0x03DD0290 MOVZ W8, 0x5
	0x03DD0294 MOVK W8, 0x10000
	0x03DD0298 CMP W23, W8
	0x03DD029C B.NE 0x3DD0328
	0x03DD02A0 ADRP X8, 0x395000
	0x03DD02A4 LDR X8, [X8 + 0x368]
	0x03DD02A8 MOV X0, X22
	0x03DD02AC LDR X1, [X8]
	0x03DD02B0 BL 0x266C4A0
	0x03DD02B4 LDP X8, X1, [X0 + 0x48]
	0x03DD02B8 MOV X2, X21
	0x03DD02BC MOV X3, X20
	0x03DD02C0 MOV X4, X31
	0x03DD02C4 MOV X0, X8
	0x03DD02C8 BL 0x3DE4E2C
	0x03DD02CC TBZ X0, 0x0, 0x3DD0310
	0x03DD02D0 ADRP X8, 0x395000
	0x03DD02D4 LDR X8, [X8 + 0x300]
	0x03DD02D8 MOV X0, X22
	0x03DD02DC LDR X1, [X8]
	0x03DD02E0 BL 0x266C4BC
	0x03DD02E4 STP X21, X20, [X0 + 0x48]
	0x03DD02E8 CBZ X19, 0x3DD03D0
	0x03DD02EC MOV X0, X19
	0x03DD02F0 LDP X20, X19, [X31 + 0x50]
	0x03DD02F4 LDP X22, X21, [X31 + 0x40]
	0x03DD02F8 LDP X24, X23, [X31 + 0x30]
	0x03DD02FC LDR X30, [X31 + 0x20]
	0x03DD0300 MOVZ W1, 0x818
	0x03DD0304 MOV X2, X31
	0x03DD0308 ADD X31, X31, 0x60
	0x03DD030C B 0x3DE5048
	0x03DD0310 LDP X20, X19, [X31 + 0x50]
	0x03DD0314 LDP X22, X21, [X31 + 0x40]
	0x03DD0318 LDP X24, X23, [X31 + 0x30]
	0x03DD031C LDR X30, [X31 + 0x20]
	0x03DD0320 ADD X31, X31, 0x60
	0x03DD0324 RET
	0x03DD0328 ADRP X0, 0x396000
	0x03DD032C LDR X0, [X0 + 0x4A8]
	0x03DD0330 BL 0x1C16D08
	0x03DD0334 MOVN X8, 0x0
	0x03DD0338 STP X0, X8, [X31 + 0x8]
	0x03DD033C ADD X0, X31, 0x8
	0x03DD0340 MOV X1, X31
	0x03DD0344 STR W23, [X31 + 0x18]
	0x03DD0348 BL 0x33B162C
	0x03DD034C MOV X19, X0
	0x03DD0350 ADRP X0, 0x399000
	0x03DD0354 LDR X0, [X0 + 0x3F0]
	0x03DD0358 BL 0x1C16D08
	0x03DD035C MOV X20, X0
	0x03DD0360 ADRP X0, 0x399000
	0x03DD0364 LDR X0, [X0 + 0x360]
	0x03DD0368 BL 0x1C16D08
	0x03DD036C MOV X2, X0
	0x03DD0370 MOV X0, X20
	0x03DD0374 MOV X1, X19
	0x03DD0378 MOV X3, X31
	0x03DD037C BL 0x32274B8
	0x03DD0380 MOV X19, X0
	0x03DD0384 ADRP X0, 0x32B000
	0x03DD0388 LDR X0, [X0 + 0x578]
	0x03DD038C BL 0x1C16D08
	0x03DD0390 BL 0x1C16F10
	0x03DD0394 MOV X20, X0
	0x03DD0398 ADRP X0, 0x325000
	0x03DD039C LDR X0, [X0 + 0xC10]
	0x03DD03A0 BL 0x1C16D08
	0x03DD03A4 MOV X2, X0
	0x03DD03A8 MOV X0, X20
	0x03DD03AC MOV X1, X19
	0x03DD03B0 MOV X3, X31
	0x03DD03B4 BL 0x330E16C
	0x03DD03B8 ADRP X0, 0x399000
	0x03DD03BC LDR X0, [X0 + 0x3F8]
	0x03DD03C0 BL 0x1C16D08
	0x03DD03C4 MOV X1, X0
	0x03DD03C8 MOV X0, X20
	0x03DD03CC BL 0x1C16DEC
	0x03DD03D0 BL 0x1C16F20
	0x03DD03D4 SUB X31, X31, 0x50
	0x03DD03D8 STP X30, X23, [X31 + 0x20]
	0x03DD03DC STP X22, X21, [X31 + 0x30]
	0x03DD03E0 STP X20, X19, [X31 + 0x40]
	0x03DD03E4 ADRP X23, 0x618000
	0x03DD03E8 LDRB W8, [X23 + 0x1B5]
	0x03DD03EC MOV X20, X3
	0x03DD03F0 MOV W21, W2
	0x03DD03F4 MOV X19, X1
	0x03DD03F8 MOV X22, X0
	0x03DD03FC TBNZ X8, 0x0, 0x3DD0414
	0x03DD0400 ADRP X0, 0x395000
	0x03DD0404 LDR X0, [X0 + 0x300]
	0x03DD0408 BL 0x1C16CF4
	0x03DD040C MOVZ W8, 0x1
	0x03DD0410 STRB W8, [X23 + 0x1B5]
	0x03DD0414 MOVZ W8, 0x3
	0x03DD0418 MOVK W8, 0x10000
	0x03DD041C CMP W21, W8
	0x03DD0420 B.NE 0x3DD0474
	0x03DD0424 ADRP X8, 0x395000
	0x03DD0428 LDR X8, [X8 + 0x300]
	0x03DD042C MOV X0, X22
	0x03DD0430 LDR X1, [X8]
	0x03DD0434 BL 0x266C4BC
	0x03DD0438 LDR V0, [X20]
	0x03DD043C LDR X8, [X20 + 0x10]
	0x03DD0440 LDR W9, [X20 + 0x18]
	0x03DD0444 STR V0, [X0 + 0x2]
	0x03DD0448 STR X8, [X0 + 0x30]
	0x03DD044C STR W9, [X0 + 0x38]
	0x03DD0450 CBZ X19, 0x3DD051C
	0x03DD0454 MOV X0, X19
	0x03DD0458 LDP X20, X19, [X31 + 0x40]
	0x03DD045C LDP X22, X21, [X31 + 0x30]
	0x03DD0460 LDP X30, X23, [X31 + 0x20]
	0x03DD0464 MOVZ W1, 0x810
	0x03DD0468 MOV X2, X31
	0x03DD046C ADD X31, X31, 0x50
	0x03DD0470 B 0x3DE5048
	0x03DD0474 ADRP X0, 0x396000
	0x03DD0478 LDR X0, [X0 + 0x4A8]
	0x03DD047C BL 0x1C16D08
	0x03DD0480 MOVN X8, 0x0
	0x03DD0484 STP X0, X8, [X31 + 0x8]
	0x03DD0488 ADD X0, X31, 0x8
	0x03DD048C MOV X1, X31
	0x03DD0490 STR W21, [X31 + 0x18]
	0x03DD0494 BL 0x33B162C
	0x03DD0498 MOV X19, X0
	0x03DD049C ADRP X0, 0x399000
	0x03DD04A0 LDR X0, [X0 + 0x400]
	0x03DD04A4 BL 0x1C16D08
	0x03DD04A8 MOV X20, X0
	0x03DD04AC ADRP X0, 0x399000
	0x03DD04B0 LDR X0, [X0 + 0x360]
	0x03DD04B4 BL 0x1C16D08
	0x03DD04B8 MOV X2, X0
	0x03DD04BC MOV X0, X20
	0x03DD04C0 MOV X1, X19
	0x03DD04C4 MOV X3, X31
	0x03DD04C8 BL 0x32274B8
	0x03DD04CC MOV X19, X0
	0x03DD04D0 ADRP X0, 0x32B000
	0x03DD04D4 LDR X0, [X0 + 0x578]
	0x03DD04D8 BL 0x1C16D08
	0x03DD04DC BL 0x1C16F10
	0x03DD04E0 MOV X20, X0
	0x03DD04E4 ADRP X0, 0x325000
	0x03DD04E8 LDR X0, [X0 + 0xC10]
	0x03DD04EC BL 0x1C16D08
	0x03DD04F0 MOV X2, X0
	0x03DD04F4 MOV X0, X20
	0x03DD04F8 MOV X1, X19
	0x03DD04FC MOV X3, X31
	0x03DD0500 BL 0x330E16C
	0x03DD0504 ADRP X0, 0x399000
	0x03DD0508 LDR X0, [X0 + 0x408]
	0x03DD050C BL 0x1C16D08
	0x03DD0510 MOV X1, X0
	0x03DD0514 MOV X0, X20
	0x03DD0518 BL 0x1C16DEC
	0x03DD051C BL 0x1C16F20
	0x03DD0520 SUB X31, X31, 0x50
	0x03DD0524 STP X30, X23, [X31 + 0x20]
	0x03DD0528 STP X22, X21, [X31 + 0x30]
	0x03DD052C STP X20, X19, [X31 + 0x40]
	0x03DD0530 ADRP X23, 0x618000
	0x03DD0534 LDRB W8, [X23 + 0x1B6]
	0x03DD0538 MOV X20, X3
	0x03DD053C MOV W21, W2
	0x03DD0540 MOV X19, X1
	0x03DD0544 MOV X22, X0
	0x03DD0548 TBNZ X8, 0x0, 0x3DD0560
	0x03DD054C ADRP X0, 0x395000
	0x03DD0550 LDR X0, [X0 + 0x310]
	0x03DD0554 BL 0x1C16CF4
	0x03DD0558 MOVZ W8, 0x1
	0x03DD055C STRB W8, [X23 + 0x1B6]
	0x03DD0560 MOVZ W8, 0x3
	0x03DD0564 MOVK W8, 0x50000
	0x03DD0568 CMP W21, W8
	0x03DD056C B.NE 0x3DD05B8
	0x03DD0570 ADRP X8, 0x395000
	0x03DD0574 LDR X8, [X8 + 0x310]
	0x03DD0578 ADD X0, X22, 0x18
	0x03DD057C LDR X1, [X8]
	0x03DD0580 BL 0x266D23C
	0x03DD0584 LDR V0, [X20]
	0x03DD0588 LDR X8, [X20 + 0x10]
	0x03DD058C STUR V0, [X0 + 0x3C]
	0x03DD0590 STUR X8, [X0 + 0x4C]
	0x03DD0594 CBZ X19, 0x3DD0660
	0x03DD0598 MOV X0, X19
	0x03DD059C LDP X20, X19, [X31 + 0x40]
	0x03DD05A0 LDP X22, X21, [X31 + 0x30]
	0x03DD05A4 LDP X30, X23, [X31 + 0x20]
	0x03DD05A8 MOVZ W1, 0x200
	0x03DD05AC MOV X2, X31
	0x03DD05B0 ADD X31, X31, 0x50
	0x03DD05B4 B 0x3DE5048
	0x03DD05B8 ADRP X0, 0x396000
	0x03DD05BC LDR X0, [X0 + 0x4A8]
	0x03DD05C0 BL 0x1C16D08
	0x03DD05C4 MOVN X8, 0x0
	0x03DD05C8 STP X0, X8, [X31 + 0x8]
	0x03DD05CC ADD X0, X31, 0x8
	0x03DD05D0 MOV X1, X31
	0x03DD05D4 STR W21, [X31 + 0x18]
	0x03DD05D8 BL 0x33B162C
	0x03DD05DC MOV X19, X0
	0x03DD05E0 ADRP X0, 0x399000
	0x03DD05E4 LDR X0, [X0 + 0x410]
	0x03DD05E8 BL 0x1C16D08
	0x03DD05EC MOV X20, X0
	0x03DD05F0 ADRP X0, 0x399000
	0x03DD05F4 LDR X0, [X0 + 0x360]
	0x03DD05F8 BL 0x1C16D08
	0x03DD05FC MOV X2, X0
	0x03DD0600 MOV X0, X20
	0x03DD0604 MOV X1, X19
	0x03DD0608 MOV X3, X31
	0x03DD060C BL 0x32274B8
	0x03DD0610 MOV X19, X0
	0x03DD0614 ADRP X0, 0x32B000
	0x03DD0618 LDR X0, [X0 + 0x578]
	0x03DD061C BL 0x1C16D08
	0x03DD0620 BL 0x1C16F10
	0x03DD0624 MOV X20, X0
	0x03DD0628 ADRP X0, 0x325000
	0x03DD062C LDR X0, [X0 + 0xC10]
	0x03DD0630 BL 0x1C16D08
	0x03DD0634 MOV X2, X0
	0x03DD0638 MOV X0, X20
	0x03DD063C MOV X1, X19
	0x03DD0640 MOV X3, X31
	0x03DD0644 BL 0x330E16C
	0x03DD0648 ADRP X0, 0x399000
	0x03DD064C LDR X0, [X0 + 0x418]
	0x03DD0650 BL 0x1C16D08
	0x03DD0654 MOV X1, X0
	0x03DD0658 MOV X0, X20
	0x03DD065C BL 0x1C16DEC
	0x03DD0660 BL 0x1C16F20
	0x03DD0664 SUB X31, X31, 0x50
	0x03DD0668 STP X30, X23, [X31 + 0x20]
	0x03DD066C STP X22, X21, [X31 + 0x30]
	0x03DD0670 STP X20, X19, [X31 + 0x40]
	0x03DD0674 ADRP X23, 0x618000
	0x03DD0678 LDRB W8, [X23 + 0x1B7]
	0x03DD067C MOV X20, X3
	0x03DD0680 MOV W21, W2
	0x03DD0684 MOV X19, X1
	0x03DD0688 MOV X22, X0
	0x03DD068C TBNZ X8, 0x0, 0x3DD06A4
	0x03DD0690 ADRP X0, 0x395000
	0x03DD0694 LDR X0, [X0 + 0x310]
	0x03DD0698 BL 0x1C16CF4
	0x03DD069C MOVZ W8, 0x1
	0x03DD06A0 STRB W8, [X23 + 0x1B7]
	0x03DD06A4 MOVZ W8, 0x2
	0x03DD06A8 MOVK W8, 0x50000
	0x03DD06AC CMP W21, W8
	0x03DD06B0 B.NE 0x3DD06FC
	0x03DD06B4 ADRP X8, 0x395000
	0x03DD06B8 LDR X8, [X8 + 0x310]
	0x03DD06BC ADD X0, X22, 0x18
	0x03DD06C0 LDR X1, [X8]
	0x03DD06C4 BL 0x266D23C
	0x03DD06C8 LDR V0, [X20]
	0x03DD06CC LDR W8, [X20 + 0x10]
	0x03DD06D0 STUR V0, [X0 + 0x28]
	0x03DD06D4 STR W8, [X0 + 0x38]
	0x03DD06D8 CBZ X19, 0x3DD07A4
	0x03DD06DC MOV X0, X19
	0x03DD06E0 LDP X20, X19, [X31 + 0x40]
	0x03DD06E4 LDP X22, X21, [X31 + 0x30]
	0x03DD06E8 LDP X30, X23, [X31 + 0x20]
	0x03DD06EC MOVZ W1, 0x200
	0x03DD06F0 MOV X2, X31
	0x03DD06F4 ADD X31, X31, 0x50
	0x03DD06F8 B 0x3DE5048
	0x03DD06FC ADRP X0, 0x396000
	0x03DD0700 LDR X0, [X0 + 0x4A8]
	0x03DD0704 BL 0x1C16D08
	0x03DD0708 MOVN X8, 0x0
	0x03DD070C STP X0, X8, [X31 + 0x8]
	0x03DD0710 ADD X0, X31, 0x8
	0x03DD0714 MOV X1, X31
	0x03DD0718 STR W21, [X31 + 0x18]
	0x03DD071C BL 0x33B162C
	0x03DD0720 MOV X19, X0
	0x03DD0724 ADRP X0, 0x399000
	0x03DD0728 LDR X0, [X0 + 0x420]
	0x03DD072C BL 0x1C16D08
	0x03DD0730 MOV X20, X0
	0x03DD0734 ADRP X0, 0x399000
	0x03DD0738 LDR X0, [X0 + 0x360]
	0x03DD073C BL 0x1C16D08
	0x03DD0740 MOV X2, X0
	0x03DD0744 MOV X0, X20
	0x03DD0748 MOV X1, X19
	0x03DD074C MOV X3, X31
	0x03DD0750 BL 0x32274B8
	0x03DD0754 MOV X19, X0
	0x03DD0758 ADRP X0, 0x32B000
	0x03DD075C LDR X0, [X0 + 0x578]
	0x03DD0760 BL 0x1C16D08
	0x03DD0764 BL 0x1C16F10
	0x03DD0768 MOV X20, X0
	0x03DD076C ADRP X0, 0x325000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x61A000
	009 Move W8, [X23+429]
	010 Move W20, W3
	011 Move W22, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0x397000
	019 Move X0, [X0+864]
	020 Call 0x1C17CF4
	021 Move X0, 0x397000
	022 Move X0, [X0+856]
	023 Call 0x1C17CF4
	024 Move X0, 0x397000
	025 Move X0, [X0+880]
	026 Call 0x1C17CF4
	027 Move X0, 0x397000
	028 Move X0, [X0+872]
	029 Call 0x1C17CF4
	030 Move X0, 0x397000
	031 Move X0, [X0+776]
	032 Call 0x1C17CF4
	033 Move X0, 0x397000
	034 Move X0, [X0+768]
	035 Call 0x1C17CF4
	036 Move X0, 0x397000
	037 Move X0, [X0+760]
	038 Call 0x1C17CF4
	039 Move X0, 0x397000
	040 Move X0, [X0+752]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X23+429], W8
	044 Or W8, W31, 0x20002
	045 Or W9, W8, 8
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add W8, W8, 13
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move TEMP, 0x30000
	050 Not TEMP
	051 Move W8, TEMP
	052 Add W8, W22, W8
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X9, -52654080
	055 Add X9, X9, 858
	056 NotImplemented "Instruction ADR not yet implemented."
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Add X10, X10, X11
	059 CallNoReturn X10
	060 Move X8, 0x396000
	061 Move X8, [X8+880]
	062 Add X21, X21, 16
	063 Move X0, X21
	064 Move X1, [X8]
	065 Call StyleDataRef`1<RareData>.Read, X0
	066 Move W8, [X0+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, 0x396000
	069 Move X8, [X8+776]
	070 Move X0, X21
	071 Move X1, [X8]
	072 Call StyleDataRef`1<RareData>.Write, X0
	073 Move [X0+24], W20
	074 Compare X19, 0
	075 JumpIfNotEqual {182}
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W8, 8
	078 NotImplemented "Instruction MOVK not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move W8, 10
	081 NotImplemented "Instruction MOVK not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, 0x396000
	084 Move X8, [X8+856]
	085 Add X21, X21, 8
	086 Move X0, X21
	087 Move X1, [X8]
	088 Call StyleDataRef`1<LayoutData>.Read, X0
	089 Move W8, [X0+48]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X8, 0x396000
	092 Move X8, [X8+752]
	093 Move X0, X21
	094 Move X1, [X8]
	095 Call StyleDataRef`1<LayoutData>.Write, X0
	096 Move [X0+48], W20
	097 Compare X19, 0
	098 JumpIfEqual {461}
	099 Move X0, [X19+696]
	100 Compare X0, 0
	101 JumpIfEqual {461}
	102 Move W1, W20
	103 Move X2, X31
	104 Call YogaNode.set_FlexDirection, X0, X1
	105 Move W8, 13
	106 NotImplemented "Instruction MOVK not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move W8, 15
	109 NotImplemented "Instruction MOVK not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X8, 0x396000
	112 Move X8, [X8+856]
	113 Add X21, X21, 8
	114 Move X0, X21
	115 Move X1, [X8]
	116 Call StyleDataRef`1<LayoutData>.Read, X0
	117 Move W8, [X0+72]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X8, 0x396000
	120 Move X8, [X8+752]
	121 Move X0, X21
	122 Move X1, [X8]
	123 Call StyleDataRef`1<LayoutData>.Write, X0
	124 Move [X0+72], W20
	125 Compare X19, 0
	126 JumpIfEqual {461}
	127 Move X0, [X19+696]
	128 Compare X0, 0
	129 JumpIfEqual {461}
	130 Move W1, W20
	131 Move X2, X31
	132 Call YogaNode.set_JustifyContent, X0, X1
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move W8, 0xFFFA
	135 NotImplemented "Instruction MOVK not yet implemented."
	136 Add W8, W22, W8
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X9, -52654080
	139 Add X9, X9, 844
	140 NotImplemented "Instruction ADR not yet implemented."
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 Add X10, X10, X11
	143 CallNoReturn X10
	144 Move X8, 0x396000
	145 Move X8, [X8+872]
	146 Move X0, X21
	147 Move X1, [X8]
	148 Call 0x266D4A0, X0
	149 Move W8, [X0+88]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X8, 0x396000
	152 Move X8, [X8+768]
	153 Move X0, X21
	154 Move X1, [X8]
	155 Call 0x266D4BC, X0
	156 Move [X0+88], W20
	157 Compare X19, 0
	158 JumpIfEqual {461}
	159 Move W1, 2072
	160 Move X8, 0x396000
	161 Move X8, [X8+856]
	162 Add X21, X21, 8
	163 Move X0, X21
	164 Move X1, [X8]
	165 Call StyleDataRef`1<LayoutData>.Read, X0
	166 Move W8, [X0+36]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X8, 0x396000
	169 Move X8, [X8+752]
	170 Move X0, X21
	171 Move X1, [X8]
	172 Call StyleDataRef`1<LayoutData>.Write, X0
	173 Move [X0+36], W20
	174 Compare X19, 0
	175 JumpIfEqual {461}
	176 Move X0, [X19+696]
	177 Compare X0, 0
	178 JumpIfEqual {461}
	179 Move W1, W20
	180 Move X2, X31
	181 Call YogaNode.set_Display, X0, X1
	182 Move W1, 2056
	183 Move X8, 0x396000
	184 Move X8, [X8+856]
	185 Add X21, X21, 8
	186 Move X0, X21
	187 Move X1, [X8]
	188 Call StyleDataRef`1<LayoutData>.Read, X0
	189 Move W8, [X0+60]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X8, 0x396000
	192 Move X8, [X8+752]
	193 Move X0, X21
	194 Move X1, [X8]
	195 Call StyleDataRef`1<LayoutData>.Write, X0
	196 Move [X0+60], W20
	197 Compare X19, 0
	198 JumpIfEqual {461}
	199 Move X0, [X19+696]
	200 Compare X0, 0
	201 JumpIfEqual {461}
	202 Move W1, W20
	203 Move X2, X31
	204 Call YogaNode.set_Wrap, X0, X1
	205 Move W8, 1
	206 NotImplemented "Instruction MOVK not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Or W8, W31, 0x20002
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X8, 0x396000
	211 Move X8, [X8+856]
	212 Add X21, X21, 8
	213 Move X0, X21
	214 Move X1, [X8]
	215 Call StyleDataRef`1<LayoutData>.Read, X0
	216 Move W8, [X0+8]
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X8, 0x396000
	219 Move X8, [X8+752]
	220 Move X0, X21
	221 Move X1, [X8]
	222 Call StyleDataRef`1<LayoutData>.Write, X0
	223 Move [X0+8], W20
	224 Compare X19, 0
	225 JumpIfEqual {461}
	226 Move X0, [X19+696]
	227 Compare X0, 0
	228 JumpIfEqual {461}
	229 Move W1, W20
	230 Move X2, X31
	231 Call YogaNode.set_AlignSelf, X0, X1
	232 Move W8, 29
	233 NotImplemented "Instruction MOVK not yet implemented."
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move W8, 15
	236 NotImplemented "Instruction MOVK not yet implemented."
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X8, 0x396000
	239 Move X8, [X8+864]
	240 Add X21, X21, 40
	241 Move X0, X21
	242 Move X1, [X8]
	243 Call StyleDataRef`1<VisualData>.Read, X0
	244 Move W8, [X0+200]
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move X8, 0x396000
	247 Move X8, [X8+760]
	248 Move X0, X21
	249 Move X1, [X8]
	250 Call StyleDataRef`1<VisualData>.Write, X0
	251 Move [X0+200], W20
	252 Compare X19, 0
	253 JumpIfEqual {461}
	254 Move X0, [X19+696]
	255 Compare X0, 0
	256 JumpIfEqual {461}
	257 Move W1, W20
	258 Move X2, X31
	259 Call YogaNode.set_Overflow, X0, X1
	260 Move W1, 72
	261 Move X8, 0x396000
	262 Move X8, [X8+872]
	263 Move X0, X21
	264 Move X1, [X8]
	265 Call 0x266D4A0, X0
	266 Move W8, [X0+100]
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move X8, 0x396000
	269 Move X8, [X8+768]
	270 Move X0, X21
	271 Move X1, [X8]
	272 Call 0x266D4BC, X0
	273 Move [X0+100], W20
	274 Compare X19, 0
	275 JumpIfEqual {461}
	276 Move W1, 2064
	277 Move X8, 0x396000
	278 Move X8, [X8+872]
	279 Move X0, X21
	280 Move X1, [X8]
	281 Call 0x266D4A0, X0
	282 Move W8, [X0+124]
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move X8, 0x396000
	285 Move X8, [X8+768]
	286 Move X0, X21
	287 Move X1, [X8]
	288 Call 0x266D4BC, X0
	289 Move [X0+124], W20
	290 Compare X19, 0
	291 JumpIfEqual {461}
	292 Move W1, 2064
	293 NotImplemented "Instruction MOVK not yet implemented."
	294 Move X8, 0x396000
	295 Move X8, [X8+872]
	296 Move X0, X21
	297 Move X1, [X8]
	298 Call 0x266D4A0, X0
	299 Move W8, [X0+128]
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X8, 0x396000
	302 Move X8, [X8+768]
	303 Move X0, X21
	304 Move X1, [X8]
	305 Call 0x266D4BC, X0
	306 Move [X0+128], W20
	307 Compare X19, 0
	308 JumpIfEqual {461}
	309 Move W1, 24
	310 Move X8, 0x396000
	311 Move X8, [X8+856]
	312 Add X21, X21, 8
	313 Move X0, X21
	314 Move X1, [X8]
	315 Call StyleDataRef`1<LayoutData>.Read, X0
	316 Move W8, [X0]
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X8, 0x396000
	319 Move X8, [X8+752]
	320 Move X0, X21
	321 Move X1, [X8]
	322 Call StyleDataRef`1<LayoutData>.Write, X0
	323 Move [X0], W20
	324 Compare X19, 0
	325 JumpIfEqual {461}
	326 Move X0, [X19+696]
	327 Compare X0, 0
	328 JumpIfEqual {461}
	329 Move W1, W20
	330 Move X2, X31
	331 Call YogaNode.set_AlignContent, X0, X1
	332 Move X8, 0x396000
	333 Move X8, [X8+856]
	334 Add X21, X21, 8
	335 Move X0, X21
	336 Move X1, [X8]
	337 Call StyleDataRef`1<LayoutData>.Read, X0
	338 Move W8, [X0+4]
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Move X8, 0x396000
	341 Move X8, [X8+752]
	342 Move X0, X21
	343 Move X1, [X8]
	344 Call StyleDataRef`1<LayoutData>.Write, X0
	345 Move [X0+4], W20
	346 Compare X19, 0
	347 JumpIfEqual {461}
	348 Move X0, [X19+696]
	349 Compare X0, 0
	350 JumpIfEqual {461}
	351 Move W1, W20
	352 Move X2, X31
	353 Call YogaNode.set_AlignItems, X0, X1
	354 Move X8, 0x396000
	355 Move X8, [X8+880]
	356 Add X21, X21, 16
	357 Move X0, X21
	358 Move X1, [X8]
	359 Call StyleDataRef`1<RareData>.Read, X0
	360 Move W8, [X0+44]
	361 NotImplemented "Instruction CMP not yet implemented."
	362 Move X8, 0x396000
	363 Move X8, [X8+776]
	364 Move X0, X21
	365 Move X1, [X8]
	366 Call StyleDataRef`1<RareData>.Write, X0
	367 Move [X0+44], W20
	368 Compare X19, 0
	369 JumpIfNotEqual {418}
	370 Move X8, 0x396000
	371 Move X8, [X8+776]
	372 Add X0, X21, 16
	373 Move X1, [X8]
	374 Call StyleDataRef`1<RareData>.Write, X0
	375 Move [X0+48], W20
	376 Compare X19, 0
	377 JumpIfNotEqual {418}
	378 Move X8, 0x396000
	379 Move X8, [X8+776]
	380 Add X0, X21, 16
	381 Move X1, [X8]
	382 Call StyleDataRef`1<RareData>.Write, X0
	383 Move [X0+52], W20
	384 Compare X19, 0
	385 JumpIfNotEqual {418}
	386 Move X8, 0x396000
	387 Move X8, [X8+776]
	388 Add X0, X21, 16
	389 Move X1, [X8]
	390 Call StyleDataRef`1<RareData>.Write, X0
	391 Move [X0+56], W20
	392 Compare X19, 0
	393 JumpIfNotEqual {418}
	394 Move X8, 0x396000
	395 Move X8, [X8+776]
	396 Add X0, X21, 16
	397 Move X1, [X8]
	398 Call StyleDataRef`1<RareData>.Write, X0
	399 Move [X0+64], W20
	400 Compare X19, 0
	401 JumpIfNotEqual {418}
	402 Move X8, 0x396000
	403 Move X8, [X8+880]
	404 Add X21, X21, 16
	405 Move X0, X21
	406 Move X1, [X8]
	407 Call StyleDataRef`1<RareData>.Read, X0
	408 Move W8, [X0+68]
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Move X8, 0x396000
	411 Move X8, [X8+776]
	412 Move X0, X21
	413 Move X1, [X8]
	414 Call StyleDataRef`1<RareData>.Write, X0
	415 Move [X0+68], W20
	416 Compare X19, 0
	417 JumpIfEqual {461}
	418 Move W1, 2048
	419 Move X8, 0x396000
	420 Move X8, [X8+856]
	421 Add X21, X21, 8
	422 Move X0, X21
	423 Move X1, [X8]
	424 Call StyleDataRef`1<LayoutData>.Read, X0
	425 Move W8, [X0+180]
	426 NotImplemented "Instruction CMP not yet implemented."
	427 Move X20, [X31+64]
	428 Move X19, [X31+72]
	429 Move X22, [X31+48]
	430 Move X21, [X31+56]
	431 Move X30, [X31+32]
	432 Move X23, [X31+40]
	433 Add X31, X31, 80
	434 Return 
	435 Move X8, 0x396000
	436 Move X8, [X8+752]
	437 Move X0, X21
	438 Move X1, [X8]
	439 Call StyleDataRef`1<LayoutData>.Write, X0
	440 Move [X0+180], W20
	441 Compare X19, 0
	442 JumpIfEqual {461}
	443 Move X0, [X19+696]
	444 Compare X0, 0
	445 JumpIfEqual {461}
	446 Move W1, W20
	447 Move X2, X31
	448 Call YogaNode.set_PositionType, X0, X1
	449 Move W1, 8
	450 Move X0, X19
	451 Move X20, [X31+64]
	452 Move X19, [X31+72]
	453 Move X22, [X31+48]
	454 Move X21, [X31+56]
	455 Move X30, [X31+32]
	456 Move X23, [X31+40]
	457 Move X2, X31
	458 Add X31, X31, 80
	459 Call VisualElement.IncrementVersion, X0, X1
	460 Return 
	461 Call 0x1C17F20
	462 Move X0, 0x397000
	463 Move X0, [X0+1192]
	464 Call 0x1C17D08
	465 Move TEMP, 0
	466 Not TEMP
	467 Move X8, TEMP
	468 Move [X31+8], X0
	469 Move [X31+16], X8
	470 Add X0, X31, 8
	471 Move X1, X31
	472 Move [X31+24], W22
	473 Call Enum.ToString, X0
	474 Move X19, X0
	475 Move X0, 0x39A000
	476 Move X0, [X0+896]
	477 Call 0x1C17D08
	478 Move X20, X0
	479 Move X0, 0x39A000
	480 Move X0, [X0+864]
	481 Call 0x1C17D08
	482 Move X2, X0
	483 Move X0, X20
	484 Move X1, X19
	485 Move X3, X31
	486 Call String.Concat, X0, X1, X2
	487 Move X19, X0
	488 Move X0, 0x32C000
	489 Move X0, [X0+1400]
	490 Call 0x1C17D08
	491 Call 0x1C17F10
	492 Move X20, X0
	493 Move X0, 0x326000
	494 Move X0, [X0+3088]
	495 Call 0x1C17D08
	496 Move X2, X0
	497 Move X0, X20
	498 Move X1, X19
	499 Move X3, X31
	500 Call ArgumentException..ctor, X0, X1, X2
	501 Move X0, 0x39A000
	502 Move X0, [X0+904]
	503 Call 0x1C17D08
	504 Move X1, X0
	505 Move X0, X20
	506 Call 0x1C17DEC

Method: System.Void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.BackgroundPosition newValue)

Disassembly:
	0x03DD0770 LDR X0, [X0 + 0xC10]
	0x03DD0774 BL 0x1C16D08
	0x03DD0778 MOV X2, X0
	0x03DD077C MOV X0, X20
	0x03DD0780 MOV X1, X19
	0x03DD0784 MOV X3, X31
	0x03DD0788 BL 0x330E16C
	0x03DD078C ADRP X0, 0x399000
	0x03DD0790 LDR X0, [X0 + 0x428]
	0x03DD0794 BL 0x1C16D08
	0x03DD0798 MOV X1, X0
	0x03DD079C MOV X0, X20
	0x03DD07A0 BL 0x1C16DEC
	0x03DD07A4 BL 0x1C16F20
	0x03DD07A8 SUB X31, X31, 0x50
	0x03DD07AC STP X30, X23, [X31 + 0x20]
	0x03DD07B0 STP X22, X21, [X31 + 0x30]
	0x03DD07B4 STP X20, X19, [X31 + 0x40]
	0x03DD07B8 ADRP X23, 0x618000
	0x03DD07BC LDRB W8, [X23 + 0x1B8]
	0x03DD07C0 MOV X20, X3
	0x03DD07C4 MOV W21, W2
	0x03DD07C8 MOV X19, X1
	0x03DD07CC MOV X22, X0
	0x03DD07D0 TBNZ X8, 0x0, 0x3DD07E8
	0x03DD07D4 ADRP X0, 0x395000
	0x03DD07D8 LDR X0, [X0 + 0x310]
	0x03DD07DC BL 0x1C16CF4
	0x03DD07E0 MOVZ W8, 0x1
	0x03DD07E4 STRB W8, [X23 + 0x1B8]
	0x03DD07E8 CMP W21, 0x50000
	0x03DD07EC B.NE 0x3DD0838
	0x03DD07F0 ADRP X8, 0x395000
	0x03DD07F4 LDR X8, [X8 + 0x310]
	0x03DD07F8 ADD X0, X22, 0x18
	0x03DD07FC LDR X1, [X8]
	0x03DD0800 BL 0x266D23C
	0x03DD0804 LDR V0, [X20]
	0x03DD0808 LDR X8, [X20 + 0x10]
	0x03DD080C STR V0, [X0]
	0x03DD0810 STR X8, [X0 + 0x10]
	0x03DD0814 CBZ X19, 0x3DD08E0
	0x03DD0818 MOV X0, X19
	0x03DD081C LDP X20, X19, [X31 + 0x40]
	0x03DD0820 LDP X22, X21, [X31 + 0x30]
	0x03DD0824 LDP X30, X23, [X31 + 0x20]
	0x03DD0828 MOVZ W1, 0x200
	0x03DD082C MOV X2, X31
	0x03DD0830 ADD X31, X31, 0x50
	0x03DD0834 B 0x3DE5048
	0x03DD0838 ADRP X0, 0x396000
	0x03DD083C LDR X0, [X0 + 0x4A8]
	0x03DD0840 BL 0x1C16D08
	0x03DD0844 MOVN X8, 0x0
	0x03DD0848 STP X0, X8, [X31 + 0x8]
	0x03DD084C ADD X0, X31, 0x8
	0x03DD0850 MOV X1, X31
	0x03DD0854 STR W21, [X31 + 0x18]
	0x03DD0858 BL 0x33B162C
	0x03DD085C MOV X19, X0
	0x03DD0860 ADRP X0, 0x399000
	0x03DD0864 LDR X0, [X0 + 0x430]
	0x03DD0868 BL 0x1C16D08
	0x03DD086C MOV X20, X0
	0x03DD0870 ADRP X0, 0x399000
	0x03DD0874 LDR X0, [X0 + 0x360]
	0x03DD0878 BL 0x1C16D08
	0x03DD087C MOV X2, X0
	0x03DD0880 MOV X0, X20
	0x03DD0884 MOV X1, X19
	0x03DD0888 MOV X3, X31
	0x03DD088C BL 0x32274B8
	0x03DD0890 MOV X19, X0
	0x03DD0894 ADRP X0, 0x32B000
	0x03DD0898 LDR X0, [X0 + 0x578]
	0x03DD089C BL 0x1C16D08
	0x03DD08A0 BL 0x1C16F10
	0x03DD08A4 MOV X20, X0
	0x03DD08A8 ADRP X0, 0x325000
	0x03DD08AC LDR X0, [X0 + 0xC10]
	0x03DD08B0 BL 0x1C16D08
	0x03DD08B4 MOV X2, X0
	0x03DD08B8 MOV X0, X20
	0x03DD08BC MOV X1, X19
	0x03DD08C0 MOV X3, X31
	0x03DD08C4 BL 0x330E16C
	0x03DD08C8 ADRP X0, 0x399000
	0x03DD08CC LDR X0, [X0 + 0x438]
	0x03DD08D0 BL 0x1C16D08
	0x03DD08D4 MOV X1, X0
	0x03DD08D8 MOV X0, X20
	0x03DD08DC BL 0x1C16DEC
	0x03DD08E0 BL 0x1C16F20
	0x03DD08E4 SUB X31, X31, 0x60
	0x03DD08E8 STR X30, [X31 + 0x20]
	0x03DD08EC STP X24, X23, [X31 + 0x30]
	0x03DD08F0 STP X22, X21, [X31 + 0x40]
	0x03DD08F4 STP X20, X19, [X31 + 0x50]
	0x03DD08F8 ADRP X24, 0x618000
	0x03DD08FC LDRB W8, [X24 + 0x1B9]
	0x03DD0900 MOV X20, X4
	0x03DD0904 MOV X21, X3
	0x03DD0908 MOV W22, W2
	0x03DD090C MOV X19, X1
	0x03DD0910 MOV X23, X0
	0x03DD0914 TBNZ X8, 0x0, 0x3DD092C
	0x03DD0918 ADRP X0, 0x395000
	0x03DD091C LDR X0, [X0 + 0x310]
	0x03DD0920 BL 0x1C16CF4
	0x03DD0924 MOVZ W8, 0x1
	0x03DD0928 STRB W8, [X24 + 0x1B9]
	0x03DD092C MOVZ W8, 0x1
	0x03DD0930 MOVK W8, 0x50000
	0x03DD0934 CMP W22, W8
	0x03DD0938 B.NE 0x3DD097C
	0x03DD093C ADRP X8, 0x395000
	0x03DD0940 LDR X8, [X8 + 0x310]
	0x03DD0944 ADD X0, X23, 0x18
	0x03DD0948 LDR X1, [X8]
	0x03DD094C BL 0x266D23C
	0x03DD0950 STP X21, X20, [X0 + 0x18]
	0x03DD0954 CBZ X19, 0x3DD0A24
	0x03DD0958 MOV X0, X19
	0x03DD095C LDP X20, X19, [X31 + 0x50]
	0x03DD0960 LDP X22, X21, [X31 + 0x40]
	0x03DD0964 LDP X24, X23, [X31 + 0x30]
	0x03DD0968 LDR X30, [X31 + 0x20]
	0x03DD096C MOVZ W1, 0x200
	0x03DD0970 MOV X2, X31
	0x03DD0974 ADD X31, X31, 0x60
	0x03DD0978 B 0x3DE5048

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X24, 0x619000
	010 Move W8, [X24+430]
	011 Move X20, X4
	012 Move X21, X3
	013 Move W22, W2
	014 Move X19, X1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x396000
	021 Move X0, [X0+864]
	022 Call 0x1C17CF4
	023 Move X0, 0x396000
	024 Move X0, [X0+760]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+430], W8
	028 Move W8, 3
	029 NotImplemented "Instruction MOVK not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, 2
	032 NotImplemented "Instruction MOVK not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, 0x396000
	035 Move X8, [X8+864]
	036 Add X22, X23, 40
	037 Move X0, X22
	038 Move X1, [X8]
	039 Call StyleDataRef`1<VisualData>.Read, X0
	040 Move X8, [X0+48]
	041 Move W1, [X0+56]
	042 And X3, X20, 0
	043 Move X2, X21
	044 Move X0, X8
	045 Move X4, X31
	046 Call BackgroundPosition.op_Inequality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {100}
	051 Move X8, 0x396000
	052 Move X8, [X8+760]
	053 Move X0, X22
	054 Move X1, [X8]
	055 Call StyleDataRef`1<VisualData>.Write, X0
	056 Move [X0+48], X21
	057 Move [X0+56], W20
	058 Compare X19, 0
	059 JumpIfEqual {99}
	060 Move X0, X19
	061 Move X20, [X31+80]
	062 Move X19, [X31+88]
	063 Move X22, [X31+64]
	064 Move X21, [X31+72]
	065 Move X24, [X31+48]
	066 Move X23, [X31+56]
	067 Move X30, [X31+32]
	068 Move W1, 2048
	069 Move X2, X31
	070 Add X31, X31, 96
	071 Call VisualElement.IncrementVersion, X0, X1
	072 Return 
	073 Move X8, 0x396000
	074 Move X8, [X8+864]
	075 Add X22, X23, 40
	076 Move X0, X22
	077 Move X1, [X8]
	078 Call StyleDataRef`1<VisualData>.Read, X0
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 Move W1, [X0+68]
	081 And X3, X20, 0
	082 Move X2, X21
	083 Move X0, X8
	084 Move X4, X31
	085 Call BackgroundPosition.op_Inequality, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {100}
	090 Move X8, 0x396000
	091 Move X8, [X8+760]
	092 Move X0, X22
	093 Move X1, [X8]
	094 Call StyleDataRef`1<VisualData>.Write, X0
	095 Move [X0+60], X21
	096 Move [X0+68], W20
	097 Compare X19, 0
	098 JumpIfNotEqual {60}
	099 Call 0x1C17F20
	100 Move X20, [X31+80]
	101 Move X19, [X31+88]
	102 Move X22, [X31+64]
	103 Move X21, [X31+72]
	104 Move X24, [X31+48]
	105 Move X23, [X31+56]
	106 Move X30, [X31+32]
	107 Add X31, X31, 96
	108 Return 
	109 Move X0, 0x397000
	110 Move X0, [X0+1192]
	111 Call 0x1C17D08
	112 Move TEMP, 0
	113 Not TEMP
	114 Move X8, TEMP
	115 Move [X31+8], X0
	116 Move [X31+16], X8
	117 Add X0, X31, 8
	118 Move X1, X31
	119 Move [X31+24], W22
	120 Call Enum.ToString, X0
	121 Move X19, X0
	122 Move X0, 0x39A000
	123 Move X0, [X0+912]
	124 Call 0x1C17D08
	125 Move X20, X0
	126 Move X0, 0x39A000
	127 Move X0, [X0+864]
	128 Call 0x1C17D08
	129 Move X2, X0
	130 Move X0, X20
	131 Move X1, X19
	132 Move X3, X31
	133 Call String.Concat, X0, X1, X2
	134 Move X19, X0
	135 Move X0, 0x32C000
	136 Move X0, [X0+1400]
	137 Call 0x1C17D08
	138 Call 0x1C17F10
	139 Move X20, X0
	140 Move X0, 0x326000
	141 Move X0, [X0+3088]
	142 Call 0x1C17D08
	143 Move X2, X0
	144 Move X0, X20
	145 Move X1, X19
	146 Move X3, X31
	147 Call ArgumentException..ctor, X0, X1, X2
	148 Move X0, 0x39A000
	149 Move X0, [X0+920]
	150 Call 0x1C17D08
	151 Move X1, X0
	152 Move X0, X20
	153 Call 0x1C17DEC

Method: System.Void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.BackgroundRepeat newValue)

Disassembly:
	0x03DD097C ADRP X0, 0x396000
	0x03DD0980 LDR X0, [X0 + 0x4A8]
	0x03DD0984 BL 0x1C16D08
	0x03DD0988 MOVN X8, 0x0
	0x03DD098C STP X0, X8, [X31 + 0x8]
	0x03DD0990 ADD X0, X31, 0x8
	0x03DD0994 MOV X1, X31
	0x03DD0998 STR W22, [X31 + 0x18]
	0x03DD099C BL 0x33B162C
	0x03DD09A0 MOV X19, X0
	0x03DD09A4 ADRP X0, 0x399000
	0x03DD09A8 LDR X0, [X0 + 0x440]
	0x03DD09AC BL 0x1C16D08
	0x03DD09B0 MOV X20, X0
	0x03DD09B4 ADRP X0, 0x399000
	0x03DD09B8 LDR X0, [X0 + 0x360]
	0x03DD09BC BL 0x1C16D08
	0x03DD09C0 MOV X2, X0
	0x03DD09C4 MOV X0, X20
	0x03DD09C8 MOV X1, X19
	0x03DD09CC MOV X3, X31
	0x03DD09D0 BL 0x32274B8
	0x03DD09D4 MOV X19, X0
	0x03DD09D8 ADRP X0, 0x32B000
	0x03DD09DC LDR X0, [X0 + 0x578]
	0x03DD09E0 BL 0x1C16D08
	0x03DD09E4 BL 0x1C16F10
	0x03DD09E8 MOV X20, X0
	0x03DD09EC ADRP X0, 0x325000
	0x03DD09F0 LDR X0, [X0 + 0xC10]
	0x03DD09F4 BL 0x1C16D08
	0x03DD09F8 MOV X2, X0
	0x03DD09FC MOV X0, X20
	0x03DD0A00 MOV X1, X19
	0x03DD0A04 MOV X3, X31
	0x03DD0A08 BL 0x330E16C
	0x03DD0A0C ADRP X0, 0x399000
	0x03DD0A10 LDR X0, [X0 + 0x448]
	0x03DD0A14 BL 0x1C16D08
	0x03DD0A18 MOV X1, X0
	0x03DD0A1C MOV X0, X20
	0x03DD0A20 BL 0x1C16DEC
	0x03DD0A24 BL 0x1C16F20
	0x03DD0A28 STP D15, D14, [X31 - 0xA0]!
	0x03DD0A2C STP D13, D12, [X31 + 0x10]
	0x03DD0A30 STP D11, D10, [X31 + 0x20]
	0x03DD0A34 STP D9, D8, [X31 + 0x30]
	0x03DD0A38 STP X29, X30, [X31 + 0x40]
	0x03DD0A3C STP X28, X27, [X31 + 0x50]
	0x03DD0A40 STP X26, X25, [X31 + 0x60]
	0x03DD0A44 STP X24, X23, [X31 + 0x70]
	0x03DD0A48 STP X22, X21, [X31 + 0x80]
	0x03DD0A4C STP X20, X19, [X31 + 0x90]
	0x03DD0A50 SUB X31, X31, 0x270
	0x03DD0A54 ADRP X19, 0x618000
	0x03DD0A58 LDRB W8, [X19 + 0x1BA]
	0x03DD0A5C MOV X29, X6
	0x03DD0A60 MOV W20, W5
	0x03DD0A64 MOV X23, X3
	0x03DD0A68 MOV X24, X2
	0x03DD0A6C MOV W25, W1
	0x03DD0A70 MOV X22, X0
	0x03DD0A74 STR W4, [X31 + 0x2C]
	0x03DD0A78 TBNZ X8, 0x0, 0x3DD0ACC
	0x03DD0A7C ADRP X0, 0x34D000
	0x03DD0A80 LDR X0, [X0 + 0xED0]
	0x03DD0A84 BL 0x1C16CF4
	0x03DD0A88 ADRP X0, 0x395000
	0x03DD0A8C LDR X0, [X0 + 0x360]
	0x03DD0A90 BL 0x1C16CF4
	0x03DD0A94 ADRP X0, 0x395000
	0x03DD0A98 LDR X0, [X0 + 0x378]
	0x03DD0A9C BL 0x1C16CF4
	0x03DD0AA0 ADRP X0, 0x395000
	0x03DD0AA4 LDR X0, [X0 + 0x358]
	0x03DD0AA8 BL 0x1C16CF4
	0x03DD0AAC ADRP X0, 0x395000
	0x03DD0AB0 LDR X0, [X0 + 0x370]
	0x03DD0AB4 BL 0x1C16CF4
	0x03DD0AB8 ADRP X0, 0x395000
	0x03DD0ABC LDR X0, [X0 + 0x368]
	0x03DD0AC0 BL 0x1C16CF4
	0x03DD0AC4 MOVZ W8, 0x1
	0x03DD0AC8 STRB W8, [X19 + 0x1BA]
	0x03DD0ACC MOVZ W28, 0x9
	0x03DD0AD0 MOVK W28, 0x30000
	0x03DD0AD4 CMP W25, W28
	0x03DD0AD8 B.LE 0x3DD0B90
	0x03DD0ADC SUB W8, W25, 0x70000
	0x03DD0AE0 CMP W8, 0xF
	0x03DD0AE4 B.HI 0x3DD0C3C
	0x03DD0AE8 ADRP X9, 0xFFFFFFFFFCDC8000
	0x03DD0AEC ADD X9, X9, 0x406
	0x03DD0AF0 ADR X10, 0x10
	0x03DD0AF4 LDRH W11, [X9, X8, LSL #1]
	0x03DD0AF8 ADD X10, X10, X11, 0x2, LSL
	0x03DD0AFC BR X10

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x619000
	009 Move W8, [X23+431]
	010 Move X20, X3
	011 Move W21, W2
	012 Move X19, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x396000
	019 Move X0, [X0+864]
	020 Call 0x1C17CF4
	021 Move X0, 0x396000
	022 Move X0, [X0+760]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+431], W8
	026 Move W8, 4
	027 NotImplemented "Instruction MOVK not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, 0x396000
	030 Move X8, [X8+864]
	031 Add X21, X22, 40
	032 Move X0, X21
	033 Move X1, [X8]
	034 Call StyleDataRef`1<VisualData>.Read, X0
	035 Move X0, [X0+72]
	036 Move X1, X20
	037 Move X2, X31
	038 Call BackgroundRepeat.op_Inequality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {63}
	043 Move X8, 0x396000
	044 Move X8, [X8+760]
	045 Move X0, X21
	046 Move X1, [X8]
	047 Call StyleDataRef`1<VisualData>.Write, X0
	048 Move [X0+72], X20
	049 Compare X19, 0
	050 JumpIfEqual {116}
	051 Move X0, X19
	052 Move X20, [X31+64]
	053 Move X19, [X31+72]
	054 Move X22, [X31+48]
	055 Move X21, [X31+56]
	056 Move X30, [X31+32]
	057 Move X23, [X31+40]
	058 Move W1, 2048
	059 Move X2, X31
	060 Add X31, X31, 80
	061 Call VisualElement.IncrementVersion, X0, X1
	062 Return 
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X22, [X31+48]
	066 Move X21, [X31+56]
	067 Move X30, [X31+32]
	068 Move X23, [X31+40]
	069 Add X31, X31, 80
	070 Return 
	071 Move X0, 0x397000
	072 Move X0, [X0+1192]
	073 Call 0x1C17D08
	074 Move TEMP, 0
	075 Not TEMP
	076 Move X8, TEMP
	077 Move [X31+8], X0
	078 Move [X31+16], X8
	079 Add X0, X31, 8
	080 Move X1, X31
	081 Move [X31+24], W21
	082 Call Enum.ToString, X0
	083 Move X19, X0
	084 Move X0, 0x39A000
	085 Move X0, [X0+928]
	086 Call 0x1C17D08
	087 Move X20, X0
	088 Move X0, 0x39A000
	089 Move X0, [X0+864]
	090 Call 0x1C17D08
	091 Move X2, X0
	092 Move X0, X20
	093 Move X1, X19
	094 Move X3, X31
	095 Call String.Concat, X0, X1, X2
	096 Move X19, X0
	097 Move X0, 0x32C000
	098 Move X0, [X0+1400]
	099 Call 0x1C17D08
	100 Call 0x1C17F10
	101 Move X20, X0
	102 Move X0, 0x326000
	103 Move X0, [X0+3088]
	104 Call 0x1C17D08
	105 Move X2, X0
	106 Move X0, X20
	107 Move X1, X19
	108 Move X3, X31
	109 Call ArgumentException..ctor, X0, X1, X2
	110 Move X0, 0x39A000
	111 Move X0, [X0+936]
	112 Call 0x1C17D08
	113 Move X1, X0
	114 Move X0, X20
	115 Call 0x1C17DEC
	116 Call 0x1C17F20

Method: System.Void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.BackgroundSize newValue)

Disassembly:
	0x03DD0B00 CBZ X22, 0x3DD5BF8
	0x03DD0B04 MOV X0, X22
	0x03DD0B08 MOV X1, X31
	0x03DD0B0C BL 0x3DE89D4
	0x03DD0B10 ADRP X19, 0x395000
	0x03DD0B14 LDR X19, [X19 + 0x360]
	0x03DD0B18 MOV X25, X0
	0x03DD0B1C ADD X0, X24, 0x28
	0x03DD0B20 LDR X1, [X19]
	0x03DD0B24 BL 0x266DB18
	0x03DD0B28 LDR X1, [X19]
	0x03DD0B2C LDP S8, S9, [X0]
	0x03DD0B30 LDP S10, S11, [X0 + 0x8]
	0x03DD0B34 ADD X0, X23, 0x28
	0x03DD0B38 BL 0x266DB18
	0x03DD0B3C CBZ X25, 0x3DD5BF8
	0x03DD0B40 ADRP X10, 0x34D000
	0x03DD0B44 LDP S13, S12, [X0 + 0x8]
	0x03DD0B48 LDR X8, [X25]
	0x03DD0B4C LDP S15, S14, [X0]
	0x03DD0B50 LDR X10, [X10 + 0xED0]
	0x03DD0B54 LDRH W9, [X8 + 0x12E]
	0x03DD0B58 LDR X1, [X10]
	0x03DD0B5C CBZ X9, 0x3DD0B80
	0x03DD0B60 LDR X10, [X8 + 0xB0]
	0x03DD0B64 ADD X10, X10, 0x8
	0x03DD0B68 LDUR X11, [X10 - 0x8]
	0x03DD0B6C CMP X11, X1
	0x03DD0B70 B.EQ 0x3DD4E8C
	0x03DD0B74 SUBS X9, X9, 0x1
	0x03DD0B78 ADD X10, X10, 0x10
	0x03DD0B7C B.NE 0x3DD0B68
	0x03DD0B80 MOVZ W2, 0x3
	0x03DD0B84 MOV X0, X25
	0x03DD0B88 BL 0x1C5C788
	0x03DD0B8C B 0x3DD4E9C
	0x03DD0B90 SUB W8, W25, 0x20000
	0x03DD0B94 CMP W8, 0x20
	0x03DD0B98 B.HI 0x3DD0CAC
	0x03DD0B9C ADRP X9, 0xFFFFFFFFFCDC8000
	0x03DD0BA0 ADD X9, X9, 0x394
	0x03DD0BA4 ADR X10, 0x10
	0x03DD0BA8 LDRH W11, [X9, X8, LSL #1]
	0x03DD0BAC ADD X10, X10, X11, 0x2, LSL
	0x03DD0BB0 BR X10
	0x03DD0BB4 CBZ X22, 0x3DD5BF8
	0x03DD0BB8 MOV X0, X22
	0x03DD0BBC MOV X1, X31
	0x03DD0BC0 BL 0x3DE89D4
	0x03DD0BC4 ADRP X19, 0x395000
	0x03DD0BC8 LDR X19, [X19 + 0x358]
	0x03DD0BCC MOV X22, X0
	0x03DD0BD0 ADD X0, X24, 0x8
	0x03DD0BD4 LDR X1, [X19]
	0x03DD0BD8 BL 0x266C920
	0x03DD0BDC LDR X1, [X19]
	0x03DD0BE0 LDR W24, [X0]
	0x03DD0BE4 ADD X0, X23, 0x8
	0x03DD0BE8 BL 0x266C920
	0x03DD0BEC CBZ X22, 0x3DD5BF8
	0x03DD0BF0 ADRP X10, 0x34D000
	0x03DD0BF4 LDR X8, [X22]
	0x03DD0BF8 LDR W23, [X0]
	0x03DD0BFC LDR X10, [X10 + 0xED0]
	0x03DD0C00 LDRH W9, [X8 + 0x12E]
	0x03DD0C04 LDR X1, [X10]
	0x03DD0C08 CBZ X9, 0x3DD0C2C
	0x03DD0C0C LDR X10, [X8 + 0xB0]
	0x03DD0C10 ADD X10, X10, 0x8
	0x03DD0C14 LDUR X11, [X10 - 0x8]
	0x03DD0C18 CMP X11, X1
	0x03DD0C1C B.EQ 0x3DD526C
	0x03DD0C20 SUBS X9, X9, 0x1
	0x03DD0C24 ADD X10, X10, 0x10
	0x03DD0C28 B.NE 0x3DD0C14
	0x03DD0C2C MOVZ W2, 0x4
	0x03DD0C30 MOV X0, X22
	0x03DD0C34 BL 0x1C5C788
	0x03DD0C38 B 0x3DD527C
	0x03DD0C3C SUB W8, W25, 0x40000
	0x03DD0C40 CMP W8, 0xA

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x619000
	009 Move W8, [X23+432]
	010 Move X20, X3
	011 Move W21, W2
	012 Move X19, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x396000
	019 Move X0, [X0+760]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+432], W8
	023 Move W8, 5
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, 0x396000
	027 Move X8, [X8+760]
	028 Add X0, X22, 40
	029 Move X1, [X8]
	030 Call StyleDataRef`1<VisualData>.Write, X0
	031 Move V0, [X20]
	032 Move W8, [X20+16]
	033 Move [X0+5], V0
	034 Move [X0+96], W8
	035 Compare X19, 0
	036 JumpIfEqual {94}
	037 Move X0, X19
	038 Move X20, [X31+64]
	039 Move X19, [X31+72]
	040 Move X22, [X31+48]
	041 Move X21, [X31+56]
	042 Move X30, [X31+32]
	043 Move X23, [X31+40]
	044 Move W1, 2048
	045 Move X2, X31
	046 Add X31, X31, 80
	047 Call VisualElement.IncrementVersion, X0, X1
	048 Return 
	049 Move X0, 0x397000
	050 Move X0, [X0+1192]
	051 Call 0x1C17D08
	052 Move TEMP, 0
	053 Not TEMP
	054 Move X8, TEMP
	055 Move [X31+8], X0
	056 Move [X31+16], X8
	057 Add X0, X31, 8
	058 Move X1, X31
	059 Move [X31+24], W21
	060 Call Enum.ToString, X0
	061 Move X19, X0
	062 Move X0, 0x39A000
	063 Move X0, [X0+944]
	064 Call 0x1C17D08
	065 Move X20, X0
	066 Move X0, 0x39A000
	067 Move X0, [X0+864]
	068 Call 0x1C17D08
	069 Move X2, X0
	070 Move X0, X20
	071 Move X1, X19
	072 Move X3, X31
	073 Call String.Concat, X0, X1, X2
	074 Move X19, X0
	075 Move X0, 0x32C000
	076 Move X0, [X0+1400]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X20, X0
	080 Move X0, 0x326000
	081 Move X0, [X0+3088]
	082 Call 0x1C17D08
	083 Move X2, X0
	084 Move X0, X20
	085 Move X1, X19
	086 Move X3, X31
	087 Call ArgumentException..ctor, X0, X1, X2
	088 Move X0, 0x39A000
	089 Move X0, [X0+952]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X20
	093 Call 0x1C17DEC
	094 Call 0x1C17F20

Method: System.Void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.Color newValue)

Disassembly:
	0x03DD0C44 MOV W0, W31
	0x03DD0C48 B.HI 0x3DD0E10
	0x03DD0C4C ADRP X9, 0xFFFFFFFFFCDC8000
	0x03DD0C50 ADD X9, X9, 0x3E8
	0x03DD0C54 ADR X10, 0x10
	0x03DD0C58 LDRH W11, [X9, X8, LSL #1]
	0x03DD0C5C ADD X10, X10, X11, 0x2, LSL
	0x03DD0C60 BR X10
	0x03DD0C64 LDR W3, [X31 + 0x2C]
	0x03DD0C68 MOV X0, X22
	0x03DD0C6C MOV X1, X24
	0x03DD0C70 MOV X2, X23
	0x03DD0C74 MOV W4, W20
	0x03DD0C78 MOV X5, X29
	0x03DD0C7C ADD X31, X31, 0x270
	0x03DD0C80 LDP X20, X19, [X31 + 0x90]
	0x03DD0C84 LDP X22, X21, [X31 + 0x80]
	0x03DD0C88 LDP X24, X23, [X31 + 0x70]
	0x03DD0C8C LDP X26, X25, [X31 + 0x60]
	0x03DD0C90 LDP X28, X27, [X31 + 0x50]
	0x03DD0C94 LDP X29, X30, [X31 + 0x40]
	0x03DD0C98 LDP D9, D8, [X31 + 0x30]
	0x03DD0C9C LDP D11, D10, [X31 + 0x20]
	0x03DD0CA0 LDP D13, D12, [X31 + 0x10]
	0x03DD0CA4 LDP D15, D14, [X31], #0xA0
	0x03DD0CA8 B 0x3DD5BFC
	0x03DD0CAC SUB W8, W25, 0x10000
	0x03DD0CB0 CMP W8, 0xD
	0x03DD0CB4 B.HI 0x3DD0D60
	0x03DD0CB8 ADRP X9, 0xFFFFFFFFFCDC8000
	0x03DD0CBC ADD X9, X9, 0x378
	0x03DD0CC0 ADR X10, 0x10
	0x03DD0CC4 LDRH W11, [X9, X8, LSL #1]
	0x03DD0CC8 ADD X10, X10, X11, 0x2, LSL
	0x03DD0CCC BR X10
	0x03DD0CD0 CBZ X22, 0x3DD5BF8
	0x03DD0CD4 MOV X0, X22
	0x03DD0CD8 MOV X1, X31
	0x03DD0CDC BL 0x3DE89D4
	0x03DD0CE0 ADRP X19, 0x395000
	0x03DD0CE4 LDR X19, [X19 + 0x368]
	0x03DD0CE8 MOV X25, X0
	0x03DD0CEC MOV X0, X24
	0x03DD0CF0 LDR X1, [X19]
	0x03DD0CF4 BL 0x266C4A0
	0x03DD0CF8 LDR X1, [X19]
	0x03DD0CFC LDP S8, S9, [X0]
	0x03DD0D00 LDP S10, S11, [X0 + 0x8]
	0x03DD0D04 MOV X0, X23
	0x03DD0D08 BL 0x266C4A0
	0x03DD0D0C CBZ X25, 0x3DD5BF8
	0x03DD0D10 ADRP X10, 0x34D000
	0x03DD0D14 LDP S13, S12, [X0 + 0x8]
	0x03DD0D18 LDR X8, [X25]
	0x03DD0D1C LDP S15, S14, [X0]
	0x03DD0D20 LDR X10, [X10 + 0xED0]
	0x03DD0D24 LDRH W9, [X8 + 0x12E]
	0x03DD0D28 LDR X1, [X10]
	0x03DD0D2C CBZ X9, 0x3DD0D50
	0x03DD0D30 LDR X10, [X8 + 0xB0]
	0x03DD0D34 ADD X10, X10, 0x8
	0x03DD0D38 LDUR X11, [X10 - 0x8]
	0x03DD0D3C CMP X11, X1
	0x03DD0D40 B.EQ 0x3DD5288
	0x03DD0D44 SUBS X9, X9, 0x1
	0x03DD0D48 ADD X10, X10, 0x10
	0x03DD0D4C B.NE 0x3DD0D38
	0x03DD0D50 MOVZ W2, 0x3
	0x03DD0D54 MOV X0, X25
	0x03DD0D58 BL 0x1C5C788
	0x03DD0D5C B 0x3DD5298
	0x03DD0D60 MOVN W8, 0x30000
	0x03DD0D64 ADD W8, W25, W8
	0x03DD0D68 CMP W8, 0x8
	0x03DD0D6C B.HI 0x3DD5A74
	0x03DD0D70 ADRP X9, 0xFFFFFFFFFCDC8000
	0x03DD0D74 ADD X9, X9, 0x3D6
	0x03DD0D78 ADR X10, 0x10
	0x03DD0D7C LDRH W11, [X9, X8, LSL #1]
	0x03DD0D80 ADD X10, X10, X11, 0x2, LSL
	0x03DD0D84 BR X10
	0x03DD0D88 CBZ X22, 0x3DD5BF8
	0x03DD0D8C MOV X0, X22
	0x03DD0D90 MOV X1, X31
	0x03DD0D94 BL 0x3DE89D4
	0x03DD0D98 ADRP X19, 0x395000
	0x03DD0D9C LDR X19, [X19 + 0x370]
	0x03DD0DA0 MOV X22, X0
	0x03DD0DA4 ADD X0, X24, 0x10
	0x03DD0DA8 LDR X1, [X19]
	0x03DD0DAC BL 0x266CDA0
	0x03DD0DB0 LDR X1, [X19]
	0x03DD0DB4 LDR W24, [X0 + 0x18]
	0x03DD0DB8 ADD X0, X23, 0x10
	0x03DD0DBC BL 0x266CDA0
	0x03DD0DC0 CBZ X22, 0x3DD5BF8
	0x03DD0DC4 ADRP X10, 0x34D000
	0x03DD0DC8 LDR X8, [X22]
	0x03DD0DCC LDR W23, [X0 + 0x18]
	0x03DD0DD0 LDR X10, [X10 + 0xED0]
	0x03DD0DD4 LDRH W9, [X8 + 0x12E]
	0x03DD0DD8 LDR X1, [X10]
	0x03DD0DDC CBZ X9, 0x3DD0E00
	0x03DD0DE0 LDR X10, [X8 + 0xB0]
	0x03DD0DE4 ADD X10, X10, 0x8
	0x03DD0DE8 LDUR X11, [X10 - 0x8]
	0x03DD0DEC CMP X11, X1
	0x03DD0DF0 B.EQ 0x3DD52A4
	0x03DD0DF4 SUBS X9, X9, 0x1
	0x03DD0DF8 ADD X10, X10, 0x10
	0x03DD0DFC B.NE 0x3DD0DE8
	0x03DD0E00 MOVZ W2, 0x4
	0x03DD0E04 MOV X0, X22
	0x03DD0E08 BL 0x1C5C788
	0x03DD0E0C B 0x3DD52B4
	0x03DD0E10 SUB W8, W25, 0x50000
	0x03DD0E14 CMP W8, 0x3
	0x03DD0E18 B.HI 0x3DD5A78
	0x03DD0E1C ADRP X9, 0xFFFFFFFFFCDC8000
	0x03DD0E20 ADD X9, X9, 0x3FE
	0x03DD0E24 ADR X10, 0x10
	0x03DD0E28 LDRH W11, [X9, X8, LSL #1]
	0x03DD0E2C ADD X10, X10, X11, 0x2, LSL
	0x03DD0E30 BR X10
	0x03DD0E34 CBZ X22, 0x3DD5BF8
	0x03DD0E38 MOV X0, X22
	0x03DD0E3C MOV X1, X31
	0x03DD0E40 BL 0x3DE89D4
	0x03DD0E44 ADRP X19, 0x395000
	0x03DD0E48 LDR X19, [X19 + 0x378]
	0x03DD0E4C MOV X25, X0
	0x03DD0E50 ADD X0, X24, 0x18
	0x03DD0E54 LDR X1, [X19]
	0x03DD0E58 BL 0x266D220
	0x03DD0E5C LDR X8, [X0 + 0x10]
	0x03DD0E60 LDR V0, [X0]
	0x03DD0E64 LDR X1, [X19]
	0x03DD0E68 ADD X0, X23, 0x18
	0x03DD0E6C STR X8, [X31 + 0x220]
	0x03DD0E70 STR V0, [X31 + 0x21]
	0x03DD0E74 BL 0x266D220
	0x03DD0E78 LDR X8, [X0 + 0x10]
	0x03DD0E7C LDR V0, [X0]
	0x03DD0E80 STR X8, [X31 + 0x200]
	0x03DD0E84 STR V0, [X31 + 0x1F]
	0x03DD0E88 CBZ X25, 0x3DD5BF8
	0x03DD0E8C LDR V0, [X31 + 0x21]
	0x03DD0E90 LDR X8, [X31 + 0x220]
	0x03DD0E94 LDR V1, [X31 + 0x1F]
	0x03DD0E98 LDR X9, [X31 + 0x200]
	0x03DD0E9C STR V0, [X31 + 0x15]
	0x03DD0EA0 STR X8, [X31 + 0x160]
	0x03DD0EA4 STR V1, [X31 + 0x13]
	0x03DD0EA8 STR X9, [X31 + 0x140]
	0x03DD0EAC ADRP X10, 0x34D000
	0x03DD0EB0 LDR X8, [X25]
	0x03DD0EB4 LDR X10, [X10 + 0xED0]
	0x03DD0EB8 LDRH W9, [X8 + 0x12E]
	0x03DD0EBC LDR X1, [X10]
	0x03DD0EC0 CBZ X9, 0x3DD0EE4
	0x03DD0EC4 LDR X10, [X8 + 0xB0]
	0x03DD0EC8 ADD X10, X10, 0x8
	0x03DD0ECC LDUR X11, [X10 - 0x8]
	0x03DD0ED0 CMP X11, X1
	0x03DD0ED4 B.EQ 0x3DD5108
	0x03DD0ED8 SUBS X9, X9, 0x1
	0x03DD0EDC ADD X10, X10, 0x10
	0x03DD0EE0 B.NE 0x3DD0ECC
	0x03DD0EE4 MOVZ W2, 0xB
	0x03DD0EE8 MOV X0, X25
	0x03DD0EEC BL 0x1C5C788
	0x03DD0EF0 B 0x3DD5118
	0x03DD0EF4 STR W20, [X31 + 0x20]
	0x03DD0EF8 CBZ X22, 0x3DD5BF8
	0x03DD0EFC MOV X0, X22

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D11
	003 Move [X31+40], D10
	004 Move [X31+48], D9
	005 Move [X31+56], D8
	006 Move [X31+64], X30
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X22, 0x619000
	012 Move W8, [X22+433]
	013 Move V8, V3
	014 Move V9, V2
	015 Move V10, V1
	016 Move V11, V0
	017 Move W21, W2
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0x396000
	025 Move X0, [X0+776]
	026 Call 0x1C17CF4
	027 Move X0, 0x396000
	028 Move X0, [X0+768]
	029 Call 0x1C17CF4
	030 Move X0, 0x396000
	031 Move X0, [X0+760]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+433], W8
	035 Move W8, 9
	036 NotImplemented "Instruction MOVK not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract W8, W21, 0x70000
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X9, -52654080
	041 Add X9, X9, 876
	042 NotImplemented "Instruction ADR not yet implemented."
	043 Move W11, [X9]
	044 Add X10, X10, X11
	045 CallNoReturn X10
	046 Move X8, 0x396000
	047 Move X8, [X8+760]
	048 Add X0, X20, 40
	049 Move X1, [X8]
	050 Call StyleDataRef`1<VisualData>.Write, X0
	051 Move [X0], S11
	052 Move [X0+8], S10
	053 Move [X0+8], S9
	054 Move [X0+16], S8
	055 Compare X19, 0
	056 JumpIfNotEqual {122}
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W8, 9
	059 NotImplemented "Instruction MOVK not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, 0x396000
	062 Move X8, [X8+768]
	063 Move X0, X20
	064 Move X1, [X8]
	065 Call 0x266D4BC, X0
	066 Move [X0+104], S11
	067 Move [X0+112], S10
	068 Move [X0+112], S9
	069 Move [X0+120], S8
	070 Compare X19, 0
	071 JumpIfEqual {110}
	072 Move W1, 2064
	073 Move X8, 0x396000
	074 Move X8, [X8+768]
	075 Move X0, X20
	076 Move X1, [X8]
	077 Call 0x266D4BC, X0
	078 Move [X0], S11
	079 Move [X0+8], S10
	080 Move [X0+8], S9
	081 Move [X0+16], S8
	082 Compare X19, 0
	083 JumpIfEqual {110}
	084 Move W1, 0x2010
	085 Move W8, 2
	086 NotImplemented "Instruction MOVK not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X8, 0x396000
	089 Move X8, [X8+776]
	090 Add X0, X20, 16
	091 Move X1, [X8]
	092 Call StyleDataRef`1<RareData>.Write, X0
	093 Move [X0+28], S11
	094 Move [X0+36], S10
	095 Move [X0+36], S9
	096 Move [X0+44], S8
	097 Compare X19, 0
	098 JumpIfNotEqual {122}
	099 Move X8, 0x396000
	100 Move X8, [X8+760]
	101 Add X0, X20, 40
	102 Move X1, [X8]
	103 Call StyleDataRef`1<VisualData>.Write, X0
	104 Move [X0+100], S11
	105 Move [X0+108], S10
	106 Move [X0+108], S9
	107 Move [X0+116], S8
	108 Compare X19, 0
	109 JumpIfNotEqual {122}
	110 Call 0x1C17F20
	111 Move X8, 0x396000
	112 Move X8, [X8+760]
	113 Add X0, X20, 40
	114 Move X1, [X8]
	115 Call StyleDataRef`1<VisualData>.Write, X0
	116 Move [X0+132], S11
	117 Move [X0+140], S10
	118 Move [X0+140], S9
	119 Move [X0+148], S8
	120 Compare X19, 0
	121 JumpIfEqual {110}
	122 Move W1, 0x2000
	123 Move X0, X19
	124 Move X20, [X31+96]
	125 Move X19, [X31+104]
	126 Move X22, [X31+80]
	127 Move X21, [X31+88]
	128 Move X30, [X31+64]
	129 Move D9, [X31+48]
	130 Move D8, [X31+56]
	131 Move D11, [X31+32]
	132 Move D10, [X31+40]
	133 Move X2, X31
	134 Add X31, X31, 112
	135 Call VisualElement.IncrementVersion, X0, X1
	136 Return 
	137 Move X8, 0x396000
	138 Move X8, [X8+760]
	139 Add X0, X20, 40
	140 Move X1, [X8]
	141 Call StyleDataRef`1<VisualData>.Write, X0
	142 Move [X0+148], S11
	143 Move [X0+156], S10
	144 Move [X0+156], S9
	145 Move [X0+164], S8
	146 Compare X19, 0
	147 JumpIfNotEqual {122}
	148 Move X8, 0x396000
	149 Move X8, [X8+760]
	150 Add X0, X20, 40
	151 Move X1, [X8]
	152 Call StyleDataRef`1<VisualData>.Write, X0
	153 Move [X0+164], S11
	154 Move [X0+172], S10
	155 Move [X0+172], S9
	156 Move [X0+180], S8
	157 Compare X19, 0
	158 JumpIfNotEqual {122}
	159 Move X0, 0x397000
	160 Move X0, [X0+1192]
	161 Call 0x1C17D08
	162 Move TEMP, 0
	163 Not TEMP
	164 Move X8, TEMP
	165 Move [X31+8], X0
	166 Move [X31+16], X8
	167 Add X0, X31, 8
	168 Move X1, X31
	169 Move [X31+24], W21
	170 Call Enum.ToString, X0
	171 Move X19, X0
	172 Move X0, 0x39A000
	173 Move X0, [X0+960]
	174 Call 0x1C17D08
	175 Move X20, X0
	176 Move X0, 0x39A000
	177 Move X0, [X0+864]
	178 Call 0x1C17D08
	179 Move X2, X0
	180 Move X0, X20
	181 Move X1, X19
	182 Move X3, X31
	183 Call String.Concat, X0, X1, X2
	184 Move X19, X0
	185 Move X0, 0x32C000
	186 Move X0, [X0+1400]
	187 Call 0x1C17D08
	188 Call 0x1C17F10
	189 Move X20, X0
	190 Move X0, 0x326000
	191 Move X0, [X0+3088]
	192 Call 0x1C17D08
	193 Move X2, X0
	194 Move X0, X20
	195 Move X1, X19
	196 Move X3, X31
	197 Call ArgumentException..ctor, X0, X1, X2
	198 Move X0, 0x39A000
	199 Move X0, [X0+968]
	200 Call 0x1C17D08
	201 Move X1, X0
	202 Move X0, X20
	203 Call 0x1C17DEC

Method: System.Void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Background newValue)

Disassembly:
	0x03DD0F00 MOV X1, X31
	0x03DD0F04 MOV X20, X29
	0x03DD0F08 BL 0x3DE89D4
	0x03DD0F0C ADRP X19, 0x395000
	0x03DD0F10 LDR X19, [X19 + 0x360]
	0x03DD0F14 ADD X24, X24, 0x28
	0x03DD0F18 MOV X25, X0
	0x03DD0F1C MOV X0, X24
	0x03DD0F20 LDR X1, [X19]
	0x03DD0F24 BL 0x266DB18
	0x03DD0F28 LDR X1, [X19]
	0x03DD0F2C LDR X27, [X0 + 0x30]
	0x03DD0F30 LDR W26, [X0 + 0x38]
	0x03DD0F34 ADD X23, X23, 0x28
	0x03DD0F38 MOV X0, X23
	0x03DD0F3C BL 0x266DB18
	0x03DD0F40 CBZ X25, 0x3DD5BF8
	0x03DD0F44 ADRP X21, 0x34D000
	0x03DD0F48 LDR X8, [X25]
	0x03DD0F4C LDR W28, [X0 + 0x38]
	0x03DD0F50 LDR X29, [X0 + 0x30]
	0x03DD0F54 LDR X21, [X21 + 0xED0]
	0x03DD0F58 LDRH W9, [X8 + 0x12E]
	0x03DD0F5C LDR X1, [X21]
	0x03DD0F60 CBZ X9, 0x3DD0F84
	0x03DD0F64 LDR X10, [X8 + 0xB0]
	0x03DD0F68 ADD X10, X10, 0x8
	0x03DD0F6C LDUR X11, [X10 - 0x8]
	0x03DD0F70 CMP X11, X1
	0x03DD0F74 B.EQ 0x3DD3B24
	0x03DD0F78 SUBS X9, X9, 0x1
	0x03DD0F7C ADD X10, X10, 0x10
	0x03DD0F80 B.NE 0x3DD0F6C
	0x03DD0F84 MOVZ W2, 0xD
	0x03DD0F88 MOV X0, X25
	0x03DD0F8C BL 0x1C5C788
	0x03DD0F90 B 0x3DD3B34
	0x03DD0F94 STR X29, [X31 + 0x20]
	0x03DD0F98 CBZ X22, 0x3DD5BF8
	0x03DD0F9C MOV X0, X22
	0x03DD0FA0 MOV X1, X31
	0x03DD0FA4 BL 0x3DE89D4
	0x03DD0FA8 ADRP X19, 0x395000
	0x03DD0FAC LDR X19, [X19 + 0x360]
	0x03DD0FB0 ADD X24, X24, 0x28
	0x03DD0FB4 MOV X25, X0
	0x03DD0FB8 MOV X0, X24
	0x03DD0FBC LDR X1, [X19]
	0x03DD0FC0 BL 0x266DB18
	0x03DD0FC4 LDR X1, [X19]
	0x03DD0FC8 LDP S8, S9, [X0 + 0xA4]
	0x03DD0FCC LDP S10, S11, [X0 + 0xAC]
	0x03DD0FD0 ADD X23, X23, 0x28
	0x03DD0FD4 MOV X0, X23
	0x03DD0FD8 BL 0x266DB18
	0x03DD0FDC CBZ X25, 0x3DD5BF8
	0x03DD0FE0 ADRP X28, 0x34D000
	0x03DD0FE4 LDP S13, S12, [X0 + 0xAC]
	0x03DD0FE8 LDR X8, [X25]
	0x03DD0FEC LDP S15, S14, [X0 + 0xA4]
	0x03DD0FF0 LDR X28, [X28 + 0xED0]
	0x03DD0FF4 LDRH W9, [X8 + 0x12E]
	0x03DD0FF8 LDR X1, [X28]
	0x03DD0FFC CBZ X9, 0x3DD1020
	0x03DD1000 LDR X10, [X8 + 0xB0]
	0x03DD1004 ADD X10, X10, 0x8
	0x03DD1008 LDUR X11, [X10 - 0x8]
	0x03DD100C CMP X11, X1
	0x03DD1010 B.EQ 0x3DD3BE4
	0x03DD1014 SUBS X9, X9, 0x1
	0x03DD1018 ADD X10, X10, 0x10
	0x03DD101C B.NE 0x3DD1008
	0x03DD1020 MOVZ W2, 0x3
	0x03DD1024 MOV X0, X25
	0x03DD1028 BL 0x1C5C788
	0x03DD102C B 0x3DD3BF4
	0x03DD1030 CBZ X22, 0x3DD5BF8
	0x03DD1034 MOV X0, X22
	0x03DD1038 MOV X1, X31
	0x03DD103C BL 0x3DE89D4
	0x03DD1040 ADRP X19, 0x394000
	0x03DD1044 LDR X19, [X19 + 0x360]
	0x03DD1048 ADD X24, X24, 0x28
	0x03DD104C MOV X25, X0
	0x03DD1050 MOV X0, X24
	0x03DD1054 LDR X1, [X19]
	0x03DD1058 BL 0x266DB18
	0x03DD105C LDR X1, [X19]
	0x03DD1060 LDUR X26, [X0 + 0xB4]
	0x03DD1064 ADD X23, X23, 0x28
	0x03DD1068 MOV X0, X23
	0x03DD106C BL 0x266DB18
	0x03DD1070 CBZ X25, 0x3DD5BF8
	0x03DD1074 ADRP X10, 0x34C000
	0x03DD1078 LDR X8, [X25]
	0x03DD107C LDUR X27, [X0 + 0xB4]
	0x03DD1080 LDR X10, [X10 + 0xED0]
	0x03DD1084 LDRH W9, [X8 + 0x12E]
	0x03DD1088 LDR X1, [X10]
	0x03DD108C CBZ X9, 0x3DD10B0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X23, 0x619000
	009 Move W8, [X23+434]
	010 Move X20, X3
	011 Move W21, W2
	012 Move X19, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x396000
	019 Move X0, [X0+864]
	020 Call 0x1C17CF4
	021 Move X0, 0x396000
	022 Move X0, [X0+760]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+434], W8
	026 Move W8, 1
	027 NotImplemented "Instruction MOVK not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, 0x396000
	030 Move X8, [X8+864]
	031 Add X21, X22, 40
	032 Move X0, X21
	033 Move X1, [X8]
	034 Call StyleDataRef`1<VisualData>.Read, X0
	035 Move V1, [X0+16]
	036 Move V0, [X0+32]
	037 Add X0, X31, 32
	038 Add X1, X31, 0
	039 Move X2, X31
	040 Move [X31+64], V1
	041 Move [X31+72], V0
	042 Move V1, [X20]
	043 Move V0, [X20+16]
	044 Move V2, [X31+64]
	045 Move V3, [X31+80]
	046 Move [X31], V1
	047 Move [X31+8], V0
	048 Move [X31+32], V2
	049 Move [X31+40], V3
	050 Call Background.op_Inequality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {70}
	055 Move X8, 0x396000
	056 Move X8, [X8+760]
	057 Move X0, X21
	058 Move X1, [X8]
	059 Call StyleDataRef`1<VisualData>.Write, X0
	060 Move V0, [X20]
	061 Move V1, [X20+16]
	062 Move [X0+16], V0
	063 Move [X0+24], V1
	064 Compare X19, 0
	065 JumpIfEqual {123}
	066 Move W1, 2048
	067 Move X0, X19
	068 Move X2, X31
	069 Call VisualElement.IncrementVersion, X0, X1
	070 Move X20, [X31+128]
	071 Move X19, [X31+136]
	072 Move X22, [X31+112]
	073 Move X21, [X31+120]
	074 Move X30, [X31+96]
	075 Move X23, [X31+104]
	076 Add X31, X31, 144
	077 Return 
	078 Move X0, 0x397000
	079 Move X0, [X0+1192]
	080 Call 0x1C17D08
	081 Move TEMP, 0
	082 Not TEMP
	083 Move X8, TEMP
	084 Move [X31+64], X0
	085 Move [X31+72], X8
	086 Add X0, X31, 64
	087 Move X1, X31
	088 Move [X31+80], W21
	089 Call Enum.ToString, X0
	090 Move X19, X0
	091 Move X0, 0x399000
	092 Move X0, [X0+976]
	093 Call 0x1C17D08
	094 Move X20, X0
	095 Move X0, 0x399000
	096 Move X0, [X0+864]
	097 Call 0x1C17D08
	098 Move X2, X0
	099 Move X0, X20
	100 Move X1, X19
	101 Move X3, X31
	102 Call String.Concat, X0, X1, X2
	103 Move X19, X0
	104 Move X0, 0x32B000
	105 Move X0, [X0+1400]
	106 Call 0x1C17D08
	107 Call 0x1C17F10
	108 Move X20, X0
	109 Move X0, 0x325000
	110 Move X0, [X0+3088]
	111 Call 0x1C17D08
	112 Move X2, X0
	113 Move X0, X20
	114 Move X1, X19
	115 Move X3, X31
	116 Call ArgumentException..ctor, X0, X1, X2
	117 Move X0, 0x399000
	118 Move X0, [X0+984]
	119 Call 0x1C17D08
	120 Move X1, X0
	121 Move X0, X20
	122 Call 0x1C17DEC
	123 Call 0x1C17F20

Method: System.Void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.Font newValue)

Disassembly:
	0x03DD1090 LDR X10, [X8 + 0xB0]
	0x03DD1094 ADD X10, X10, 0x8
	0x03DD1098 LDUR X11, [X10 - 0x8]
	0x03DD109C CMP X11, X1
	0x03DD10A0 B.EQ 0x3DD3CBC
	0x03DD10A4 SUBS X9, X9, 0x1
	0x03DD10A8 ADD X10, X10, 0x10
	0x03DD10AC B.NE 0x3DD1098
	0x03DD10B0 MOVZ W2, 0x2
	0x03DD10B4 MOV X0, X25
	0x03DD10B8 BL 0x1C5C788
	0x03DD10BC B 0x3DD3CCC
	0x03DD10C0 CBZ X22, 0x3DD5BF8
	0x03DD10C4 MOV X0, X22
	0x03DD10C8 MOV X1, X31
	0x03DD10CC BL 0x3DE89D4
	0x03DD10D0 ADRP X19, 0x394000
	0x03DD10D4 LDR X19, [X19 + 0x358]
	0x03DD10D8 ADD X24, X24, 0x8
	0x03DD10DC MOV X25, X0
	0x03DD10E0 MOV X0, X24
	0x03DD10E4 LDR X1, [X19]
	0x03DD10E8 BL 0x266C920
	0x03DD10EC LDR X1, [X19]
	0x03DD10F0 LDR V8, [X0 + 0x18]
	0x03DD10F4 ADD X23, X23, 0x8
	0x03DD10F8 MOV X0, X23
	0x03DD10FC BL 0x266C920
	0x03DD1100 CBZ X25, 0x3DD5BF8
	0x03DD1104 ADRP X28, 0x34C000
	0x03DD1108 LDR X8, [X25]
	0x03DD110C LDR V9, [X0 + 0x18]
	0x03DD1110 LDR X28, [X28 + 0xED0]
	0x03DD1114 LDRH W9, [X8 + 0x12E]
	0x03DD1118 LDR X1, [X28]
	0x03DD111C CBZ X9, 0x3DD1140
	0x03DD1120 LDR X10, [X8 + 0xB0]
	0x03DD1124 ADD X10, X10, 0x8
	0x03DD1128 LDUR X11, [X10 - 0x8]
	0x03DD112C CMP X11, X1
	0x03DD1130 B.EQ 0x3DD3D7C
	0x03DD1134 SUBS X9, X9, 0x1
	0x03DD1138 ADD X10, X10, 0x10
	0x03DD113C B.NE 0x3DD1128
	0x03DD1140 MOV X0, X25
	0x03DD1144 MOV W2, W31
	0x03DD1148 BL 0x1C5C788
	0x03DD114C B 0x3DD3D88
	0x03DD1150 CBZ X22, 0x3DD5BF8
	0x03DD1154 MOV X0, X22
	0x03DD1158 MOV X1, X31
	0x03DD115C BL 0x3DE89D4
	0x03DD1160 ADRP X19, 0x394000
	0x03DD1164 LDR X19, [X19 + 0x358]
	0x03DD1168 ADD X24, X24, 0x8
	0x03DD116C MOV X25, X0
	0x03DD1170 MOV X0, X24
	0x03DD1174 LDR X1, [X19]
	0x03DD1178 BL 0x266C920
	0x03DD117C LDR X1, [X19]
	0x03DD1180 LDR V8, [X0 + 0x34]
	0x03DD1184 ADD X23, X23, 0x8
	0x03DD1188 MOV X0, X23
	0x03DD118C BL 0x266C920
	0x03DD1190 CBZ X25, 0x3DD5BF8
	0x03DD1194 ADRP X27, 0x34C000
	0x03DD1198 LDR X8, [X25]
	0x03DD119C LDR V9, [X0 + 0x34]
	0x03DD11A0 LDR X27, [X27 + 0xED0]
	0x03DD11A4 LDRH W9, [X8 + 0x12E]
	0x03DD11A8 LDR X1, [X27]
	0x03DD11AC CBZ X9, 0x3DD11D0
	0x03DD11B0 LDR X10, [X8 + 0xB0]
	0x03DD11B4 ADD X10, X10, 0x8
	0x03DD11B8 LDUR X11, [X10 - 0x8]
	0x03DD11BC CMP X11, X1
	0x03DD11C0 B.EQ 0x3DD3E2C
	0x03DD11C4 SUBS X9, X9, 0x1
	0x03DD11C8 ADD X10, X10, 0x10
	0x03DD11CC B.NE 0x3DD11B8
	0x03DD11D0 MOV X0, X25
	0x03DD11D4 MOV W2, W31
	0x03DD11D8 BL 0x1C5C788
	0x03DD11DC B 0x3DD3E38
	0x03DD11E0 CBZ X22, 0x3DD5BF8
	0x03DD11E4 MOV X0, X22
	0x03DD11E8 MOV X1, X31
	0x03DD11EC BL 0x3DE89D4
	0x03DD11F0 ADRP X19, 0x394000
	0x03DD11F4 LDR X19, [X19 + 0x358]
	0x03DD11F8 ADD X24, X24, 0x8
	0x03DD11FC MOV X25, X0
	0x03DD1200 MOV X0, X24
	0x03DD1204 LDR X1, [X19]
	0x03DD1208 BL 0x266C920
	0x03DD120C LDR X1, [X19]
	0x03DD1210 LDUR X26, [X0 + 0x6C]
	0x03DD1214 ADD X23, X23, 0x8
	0x03DD1218 MOV X0, X23
	0x03DD121C BL 0x266C920
	0x03DD1220 CBZ X25, 0x3DD5BF8
	0x03DD1224 ADRP X10, 0x34C000
	0x03DD1228 LDR X8, [X25]
	0x03DD122C LDUR X27, [X0 + 0x6C]
	0x03DD1230 LDR X10, [X10 + 0xED0]
	0x03DD1234 LDRH W9, [X8 + 0x12E]
	0x03DD1238 LDR X1, [X10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x618000
	009 Move W8, [X23+435]
	010 Move X20, X3
	011 Move W22, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x323000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x395000
	022 Move X0, [X0+872]
	023 Call 0x1C17CF4
	024 Move X0, 0x395000
	025 Move X0, [X0+768]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+435], W8
	029 Move W8, 4
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, 0x395000
	033 Move X8, [X8+872]
	034 Move X22, 0x323000
	035 Move X0, X21
	036 Move X1, [X8]
	037 Move X22, [X22+1432]
	038 Call 0x266D4A0, X0
	039 Move X8, X0
	040 Move X0, [X22]
	041 Move X22, [X8+64]
	042 Move W9, [X0+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X22
	047 Move X1, X20
	048 Move X2, X31
	049 Call Object.op_Inequality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {74}
	054 Move X8, 0x395000
	055 Move X8, [X8+768]
	056 Move X0, X21
	057 Move X1, [X8]
	058 Call 0x266D4BC, X0
	059 Move [X0+64], X20
	060 Compare X19, 0
	061 JumpIfEqual {127}
	062 Move X0, X19
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X22, [X31+48]
	066 Move X21, [X31+56]
	067 Move X30, [X31+32]
	068 Move X23, [X31+40]
	069 Move W1, 2072
	070 Move X2, X31
	071 Add X31, X31, 80
	072 Call VisualElement.IncrementVersion, X0, X1
	073 Return 
	074 Move X20, [X31+64]
	075 Move X19, [X31+72]
	076 Move X22, [X31+48]
	077 Move X21, [X31+56]
	078 Move X30, [X31+32]
	079 Move X23, [X31+40]
	080 Add X31, X31, 80
	081 Return 
	082 Move X0, 0x396000
	083 Move X0, [X0+1192]
	084 Call 0x1C17D08
	085 Move TEMP, 0
	086 Not TEMP
	087 Move X8, TEMP
	088 Move [X31+8], X0
	089 Move [X31+16], X8
	090 Add X0, X31, 8
	091 Move X1, X31
	092 Move [X31+24], W22
	093 Call Enum.ToString, X0
	094 Move X19, X0
	095 Move X0, 0x399000
	096 Move X0, [X0+992]
	097 Call 0x1C17D08
	098 Move X20, X0
	099 Move X0, 0x399000
	100 Move X0, [X0+864]
	101 Call 0x1C17D08
	102 Move X2, X0
	103 Move X0, X20
	104 Move X1, X19
	105 Move X3, X31
	106 Call String.Concat, X0, X1, X2
	107 Move X19, X0
	108 Move X0, 0x32B000
	109 Move X0, [X0+1400]
	110 Call 0x1C17D08
	111 Call 0x1C17F10
	112 Move X20, X0
	113 Move X0, 0x325000
	114 Move X0, [X0+3088]
	115 Call 0x1C17D08
	116 Move X2, X0
	117 Move X0, X20
	118 Move X1, X19
	119 Move X3, X31
	120 Call ArgumentException..ctor, X0, X1, X2
	121 Move X0, 0x399000
	122 Move X0, [X0+1000]
	123 Call 0x1C17D08
	124 Move X1, X0
	125 Move X0, X20
	126 Call 0x1C17DEC
	127 Call 0x1C17F20

Method: System.Void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.FontDefinition newValue)

Disassembly:
	0x03DD123C CBZ X9, 0x3DD1260
	0x03DD1240 LDR X10, [X8 + 0xB0]
	0x03DD1244 ADD X10, X10, 0x8
	0x03DD1248 LDUR X11, [X10 - 0x8]
	0x03DD124C CMP X11, X1
	0x03DD1250 B.EQ 0x3DD3EDC
	0x03DD1254 SUBS X9, X9, 0x1
	0x03DD1258 ADD X10, X10, 0x10
	0x03DD125C B.NE 0x3DD1248
	0x03DD1260 MOVZ W2, 0x2
	0x03DD1264 MOV X0, X25
	0x03DD1268 BL 0x1C5C788
	0x03DD126C B 0x3DD3EEC
	0x03DD1270 CBZ X22, 0x3DD5BF8
	0x03DD1274 MOV X0, X22
	0x03DD1278 MOV X1, X31
	0x03DD127C BL 0x3DE89D4
	0x03DD1280 ADRP X19, 0x394000
	0x03DD1284 LDR X19, [X19 + 0x358]
	0x03DD1288 ADD X24, X24, 0x8
	0x03DD128C MOV X25, X0
	0x03DD1290 MOV X0, X24
	0x03DD1294 LDR X1, [X19]
	0x03DD1298 BL 0x266C920
	0x03DD129C LDR X1, [X19]
	0x03DD12A0 LDUR X26, [X0 + 0xAC]
	0x03DD12A4 ADD X23, X23, 0x8
	0x03DD12A8 MOV X0, X23
	0x03DD12AC BL 0x266C920
	0x03DD12B0 CBZ X25, 0x3DD5BF8
	0x03DD12B4 ADRP X10, 0x34C000
	0x03DD12B8 LDR X8, [X25]
	0x03DD12BC LDUR X27, [X0 + 0xAC]
	0x03DD12C0 LDR X10, [X10 + 0xED0]
	0x03DD12C4 LDRH W9, [X8 + 0x12E]
	0x03DD12C8 LDR X1, [X10]
	0x03DD12CC CBZ X9, 0x3DD12F0
	0x03DD12D0 LDR X10, [X8 + 0xB0]
	0x03DD12D4 ADD X10, X10, 0x8
	0x03DD12D8 LDUR X11, [X10 - 0x8]
	0x03DD12DC CMP X11, X1
	0x03DD12E0 B.EQ 0x3DD3F9C
	0x03DD12E4 SUBS X9, X9, 0x1
	0x03DD12E8 ADD X10, X10, 0x10
	0x03DD12EC B.NE 0x3DD12D8
	0x03DD12F0 MOVZ W2, 0x2
	0x03DD12F4 MOV X0, X25
	0x03DD12F8 BL 0x1C5C788
	0x03DD12FC B 0x3DD3FAC
	0x03DD1300 CBZ X22, 0x3DD5BF8
	0x03DD1304 MOV X0, X22
	0x03DD1308 MOV X1, X31
	0x03DD130C MOV X19, X29
	0x03DD1310 BL 0x3DE89D4
	0x03DD1314 ADRP X28, 0x394000
	0x03DD1318 LDR X28, [X28 + 0x360]
	0x03DD131C ADD X24, X24, 0x28
	0x03DD1320 MOV X25, X0
	0x03DD1324 MOV X0, X24
	0x03DD1328 LDR X1, [X28]
	0x03DD132C BL 0x266DB18
	0x03DD1330 LDR X1, [X28]
	0x03DD1334 LDR X27, [X0 + 0x30]
	0x03DD1338 LDR W26, [X0 + 0x38]
	0x03DD133C ADD X23, X23, 0x28
	0x03DD1340 MOV X0, X23
	0x03DD1344 BL 0x266DB18
	0x03DD1348 CBZ X25, 0x3DD5BF8
	0x03DD134C ADRP X10, 0x34C000
	0x03DD1350 LDR X8, [X25]
	0x03DD1354 LDR W28, [X0 + 0x38]
	0x03DD1358 LDR X29, [X0 + 0x30]
	0x03DD135C LDR X10, [X10 + 0xED0]
	0x03DD1360 LDRH W9, [X8 + 0x12E]
	0x03DD1364 LDR X1, [X10]
	0x03DD1368 CBZ X9, 0x3DD138C
	0x03DD136C LDR X10, [X8 + 0xB0]
	0x03DD1370 ADD X10, X10, 0x8
	0x03DD1374 LDUR X11, [X10 - 0x8]
	0x03DD1378 CMP X11, X1
	0x03DD137C B.EQ 0x3DD405C
	0x03DD1380 SUBS X9, X9, 0x1
	0x03DD1384 ADD X10, X10, 0x10
	0x03DD1388 B.NE 0x3DD1374
	0x03DD138C MOVZ W2, 0xD
	0x03DD1390 MOV X0, X25
	0x03DD1394 BL 0x1C5C788
	0x03DD1398 B 0x3DD406C
	0x03DD139C CBZ X22, 0x3DD5BF8
	0x03DD13A0 MOV X0, X22
	0x03DD13A4 MOV X1, X31
	0x03DD13A8 BL 0x3DE89D4
	0x03DD13AC ADRP X19, 0x394000
	0x03DD13B0 LDR X19, [X19 + 0x368]
	0x03DD13B4 MOV X25, X0
	0x03DD13B8 MOV X0, X24
	0x03DD13BC LDR X1, [X19]
	0x03DD13C0 BL 0x266C4A0
	0x03DD13C4 LDR X1, [X19]
	0x03DD13C8 LDP S8, S9, [X0 + 0x68]
	0x03DD13CC LDP S10, S11, [X0 + 0x70]
	0x03DD13D0 MOV X0, X23

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X24, 0x618000
	010 Move W8, [X24+436]
	011 Move X20, X4
	012 Move X21, X3
	013 Move W23, W2
	014 Move X19, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x395000
	021 Move X0, [X0+872]
	022 Call 0x1C17CF4
	023 Move X0, 0x395000
	024 Move X0, [X0+768]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+436], W8
	028 Move W8, 5
	029 NotImplemented "Instruction MOVK not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, 0x395000
	032 Move X8, [X8+872]
	033 Move X0, X22
	034 Move X1, [X8]
	035 Call 0x266D4A0, X0
	036 Move X8, [X0+72]
	037 Move X1, [X0+80]
	038 Move X2, X21
	039 Move X3, X20
	040 Move X4, X31
	041 Move X0, X8
	042 Call FontDefinition.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {69}
	047 Move X8, 0x395000
	048 Move X8, [X8+768]
	049 Move X0, X22
	050 Move X1, [X8]
	051 Call 0x266D4BC, X0
	052 Move [X0+72], X21
	053 Move [X0+80], X20
	054 Compare X19, 0
	055 JumpIfEqual {123}
	056 Move X0, X19
	057 Move X20, [X31+80]
	058 Move X19, [X31+88]
	059 Move X22, [X31+64]
	060 Move X21, [X31+72]
	061 Move X24, [X31+48]
	062 Move X23, [X31+56]
	063 Move X30, [X31+32]
	064 Move W1, 2072
	065 Move X2, X31
	066 Add X31, X31, 96
	067 Call VisualElement.IncrementVersion, X0, X1
	068 Return 
	069 Move X20, [X31+80]
	070 Move X19, [X31+88]
	071 Move X22, [X31+64]
	072 Move X21, [X31+72]
	073 Move X24, [X31+48]
	074 Move X23, [X31+56]
	075 Move X30, [X31+32]
	076 Add X31, X31, 96
	077 Return 
	078 Move X0, 0x396000
	079 Move X0, [X0+1192]
	080 Call 0x1C17D08
	081 Move TEMP, 0
	082 Not TEMP
	083 Move X8, TEMP
	084 Move [X31+8], X0
	085 Move [X31+16], X8
	086 Add X0, X31, 8
	087 Move X1, X31
	088 Move [X31+24], W23
	089 Call Enum.ToString, X0
	090 Move X19, X0
	091 Move X0, 0x399000
	092 Move X0, [X0+1008]
	093 Call 0x1C17D08
	094 Move X20, X0
	095 Move X0, 0x399000
	096 Move X0, [X0+864]
	097 Call 0x1C17D08
	098 Move X2, X0
	099 Move X0, X20
	100 Move X1, X19
	101 Move X3, X31
	102 Call String.Concat, X0, X1, X2
	103 Move X19, X0
	104 Move X0, 0x32B000
	105 Move X0, [X0+1400]
	106 Call 0x1C17D08
	107 Call 0x1C17F10
	108 Move X20, X0
	109 Move X0, 0x325000
	110 Move X0, [X0+3088]
	111 Call 0x1C17D08
	112 Move X2, X0
	113 Move X0, X20
	114 Move X1, X19
	115 Move X3, X31
	116 Call ArgumentException..ctor, X0, X1, X2
	117 Move X0, 0x399000
	118 Move X0, [X0+1016]
	119 Call 0x1C17D08
	120 Move X1, X0
	121 Move X0, X20
	122 Call 0x1C17DEC
	123 Call 0x1C17F20

Method: System.Void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.TextShadow newValue)

Disassembly:
	0x03DD13D4 BL 0x266C4A0
	0x03DD13D8 CBZ X25, 0x3DD5BF8
	0x03DD13DC ADRP X26, 0x34C000
	0x03DD13E0 LDP S13, S12, [X0 + 0x70]
	0x03DD13E4 LDR X8, [X25]
	0x03DD13E8 LDP S15, S14, [X0 + 0x68]
	0x03DD13EC LDR X26, [X26 + 0xED0]
	0x03DD13F0 LDRH W9, [X8 + 0x12E]
	0x03DD13F4 LDR X1, [X26]
	0x03DD13F8 CBZ X9, 0x3DD141C
	0x03DD13FC LDR X10, [X8 + 0xB0]
	0x03DD1400 ADD X10, X10, 0x8
	0x03DD1404 LDUR X11, [X10 - 0x8]
	0x03DD1408 CMP X11, X1
	0x03DD140C B.EQ 0x3DD412C
	0x03DD1410 SUBS X9, X9, 0x1
	0x03DD1414 ADD X10, X10, 0x10
	0x03DD1418 B.NE 0x3DD1404
	0x03DD141C MOVZ W2, 0x3
	0x03DD1420 MOV X0, X25
	0x03DD1424 BL 0x1C5C788
	0x03DD1428 B 0x3DD413C
	0x03DD142C CBZ X22, 0x3DD5BF8
	0x03DD1430 MOV X0, X22
	0x03DD1434 MOV X1, X31
	0x03DD1438 BL 0x3DE89D4
	0x03DD143C ADRP X19, 0x394000
	0x03DD1440 LDR X19, [X19 + 0x360]
	0x03DD1444 MOV X22, X0
	0x03DD1448 ADD X0, X24, 0x28
	0x03DD144C LDR X1, [X19]
	0x03DD1450 BL 0x266DB18
	0x03DD1454 LDP V1, V0, [X0 + 0x10]
	0x03DD1458 LDR X1, [X19]
	0x03DD145C ADD X0, X23, 0x28
	0x03DD1460 STP V1, V0, [X31 + 0x210]
	0x03DD1464 BL 0x266DB18
	0x03DD1468 LDP V1, V0, [X0 + 0x10]
	0x03DD146C STP V1, V0, [X31 + 0x1F0]
	0x03DD1470 CBZ X22, 0x3DD5BF8
	0x03DD1474 LDP V0, V1, [X31 + 0x210]
	0x03DD1478 LDP V2, V3, [X31 + 0x1F0]
	0x03DD147C ADRP X10, 0x34C000
	0x03DD1480 STP V0, V1, [X31 + 0x1D0]
	0x03DD1484 STP V2, V3, [X31 + 0x1B0]
	0x03DD1488 LDR X8, [X22]
	0x03DD148C LDR X10, [X10 + 0xED0]
	0x03DD1490 LDRH W9, [X8 + 0x12E]
	0x03DD1494 LDR X1, [X10]
	0x03DD1498 CBZ X9, 0x3DD14BC
	0x03DD149C LDR X10, [X8 + 0xB0]
	0x03DD14A0 ADD X10, X10, 0x8
	0x03DD14A4 LDUR X11, [X10 - 0x8]
	0x03DD14A8 CMP X11, X1
	0x03DD14AC B.EQ 0x3DD4EA8
	0x03DD14B0 SUBS X9, X9, 0x1
	0x03DD14B4 ADD X10, X10, 0x10
	0x03DD14B8 B.NE 0x3DD14A4
	0x03DD14BC MOVZ W2, 0x5
	0x03DD14C0 MOV X0, X22
	0x03DD14C4 BL 0x1C5C788
	0x03DD14C8 B 0x3DD4EB8
	0x03DD14CC CBZ X22, 0x3DD5BF8
	0x03DD14D0 MOV X0, X22
	0x03DD14D4 MOV X1, X31
	0x03DD14D8 BL 0x3DE89D4
	0x03DD14DC ADRP X19, 0x394000
	0x03DD14E0 LDR X19, [X19 + 0x360]
	0x03DD14E4 MOV X22, X0
	0x03DD14E8 ADD X0, X24, 0x28
	0x03DD14EC LDR X1, [X19]
	0x03DD14F0 BL 0x266DB18
	0x03DD14F4 LDR X1, [X19]
	0x03DD14F8 LDR X25, [X0 + 0x30]
	0x03DD14FC LDR W24, [X0 + 0x38]
	0x03DD1500 ADD X0, X23, 0x28
	0x03DD1504 BL 0x266DB18
	0x03DD1508 CBZ X22, 0x3DD5BF8
	0x03DD150C ADRP X10, 0x34C000
	0x03DD1510 LDR X8, [X22]
	0x03DD1514 LDR W23, [X0 + 0x38]
	0x03DD1518 LDR X26, [X0 + 0x30]
	0x03DD151C LDR X10, [X10 + 0xED0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x618000
	009 Move W8, [X23+437]
	010 Move X20, X3
	011 Move W21, W2
	012 Move X19, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x395000
	019 Move X0, [X0+768]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+437], W8
	023 Move W8, 3
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, 0x395000
	027 Move X8, [X8+768]
	028 Move X0, X22
	029 Move X1, [X8]
	030 Call 0x266D4BC, X0
	031 Move V0, [X20]
	032 Move X8, [X20+16]
	033 Move W9, [X20+24]
	034 Move [X0+2], V0
	035 Move [X0+48], X8
	036 Move [X0+56], W9
	037 Compare X19, 0
	038 JumpIfEqual {96}
	039 Move X0, X19
	040 Move X20, [X31+64]
	041 Move X19, [X31+72]
	042 Move X22, [X31+48]
	043 Move X21, [X31+56]
	044 Move X30, [X31+32]
	045 Move X23, [X31+40]
	046 Move W1, 2064
	047 Move X2, X31
	048 Add X31, X31, 80
	049 Call VisualElement.IncrementVersion, X0, X1
	050 Return 
	051 Move X0, 0x396000
	052 Move X0, [X0+1192]
	053 Call 0x1C17D08
	054 Move TEMP, 0
	055 Not TEMP
	056 Move X8, TEMP
	057 Move [X31+8], X0
	058 Move [X31+16], X8
	059 Add X0, X31, 8
	060 Move X1, X31
	061 Move [X31+24], W21
	062 Call Enum.ToString, X0
	063 Move X19, X0
	064 Move X0, 0x399000
	065 Move X0, [X0+1024]
	066 Call 0x1C17D08
	067 Move X20, X0
	068 Move X0, 0x399000
	069 Move X0, [X0+864]
	070 Call 0x1C17D08
	071 Move X2, X0
	072 Move X0, X20
	073 Move X1, X19
	074 Move X3, X31
	075 Call String.Concat, X0, X1, X2
	076 Move X19, X0
	077 Move X0, 0x32B000
	078 Move X0, [X0+1400]
	079 Call 0x1C17D08
	080 Call 0x1C17F10
	081 Move X20, X0
	082 Move X0, 0x325000
	083 Move X0, [X0+3088]
	084 Call 0x1C17D08
	085 Move X2, X0
	086 Move X0, X20
	087 Move X1, X19
	088 Move X3, X31
	089 Call ArgumentException..ctor, X0, X1, X2
	090 Move X0, 0x399000
	091 Move X0, [X0+1032]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X20
	095 Call 0x1C17DEC
	096 Call 0x1C17F20

Method: System.Void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Translate newValue)

Disassembly:
	0x03DD1520 LDRH W9, [X8 + 0x12E]
	0x03DD1524 LDR X1, [X10]
	0x03DD1528 CBZ X9, 0x3DD154C
	0x03DD152C LDR X10, [X8 + 0xB0]
	0x03DD1530 ADD X10, X10, 0x8
	0x03DD1534 LDUR X11, [X10 - 0x8]
	0x03DD1538 CMP X11, X1
	0x03DD153C B.EQ 0x3DD4EE0
	0x03DD1540 SUBS X9, X9, 0x1
	0x03DD1544 ADD X10, X10, 0x10
	0x03DD1548 B.NE 0x3DD1534
	0x03DD154C MOVZ W2, 0xD
	0x03DD1550 MOV X0, X22
	0x03DD1554 BL 0x1C5C788
	0x03DD1558 B 0x3DD4EF0
	0x03DD155C CBZ X22, 0x3DD5BF8
	0x03DD1560 MOV X0, X22
	0x03DD1564 MOV X1, X31
	0x03DD1568 BL 0x3DE89D4
	0x03DD156C ADRP X19, 0x394000
	0x03DD1570 LDR X19, [X19 + 0x360]
	0x03DD1574 MOV X22, X0
	0x03DD1578 ADD X0, X24, 0x28
	0x03DD157C LDR X1, [X19]
	0x03DD1580 BL 0x266DB18
	0x03DD1584 LDR X1, [X19]
	0x03DD1588 LDUR X25, [X0 + 0x3C]
	0x03DD158C LDR W24, [X0 + 0x44]
	0x03DD1590 ADD X0, X23, 0x28
	0x03DD1594 BL 0x266DB18
	0x03DD1598 CBZ X22, 0x3DD5BF8
	0x03DD159C ADRP X10, 0x34C000
	0x03DD15A0 LDR X8, [X22]
	0x03DD15A4 LDR W23, [X0 + 0x44]
	0x03DD15A8 LDUR X26, [X0 + 0x3C]
	0x03DD15AC LDR X10, [X10 + 0xED0]
	0x03DD15B0 LDRH W9, [X8 + 0x12E]
	0x03DD15B4 LDR X1, [X10]
	0x03DD15B8 CBZ X9, 0x3DD15DC
	0x03DD15BC LDR X10, [X8 + 0xB0]
	0x03DD15C0 ADD X10, X10, 0x8
	0x03DD15C4 LDUR X11, [X10 - 0x8]
	0x03DD15C8 CMP X11, X1
	0x03DD15CC B.EQ 0x3DD4F00
	0x03DD15D0 SUBS X9, X9, 0x1
	0x03DD15D4 ADD X10, X10, 0x10
	0x03DD15D8 B.NE 0x3DD15C4
	0x03DD15DC MOVZ W2, 0xD
	0x03DD15E0 MOV X0, X22
	0x03DD15E4 BL 0x1C5C788
	0x03DD15E8 B 0x3DD4F10
	0x03DD15EC CBZ X22, 0x3DD5BF8
	0x03DD15F0 MOV X0, X22
	0x03DD15F4 MOV X1, X31
	0x03DD15F8 BL 0x3DE89D4
	0x03DD15FC ADRP X19, 0x394000
	0x03DD1600 LDR X19, [X19 + 0x360]
	0x03DD1604 MOV X22, X0
	0x03DD1608 ADD X0, X24, 0x28
	0x03DD160C LDR X1, [X19]
	0x03DD1610 BL 0x266DB18
	0x03DD1614 LDR X1, [X19]
	0x03DD1618 LDR X24, [X0 + 0x48]
	0x03DD161C ADD X0, X23, 0x28
	0x03DD1620 BL 0x266DB18
	0x03DD1624 CBZ X22, 0x3DD5BF8
	0x03DD1628 ADRP X10, 0x34C000
	0x03DD162C LDR X8, [X22]
	0x03DD1630 LDR X23, [X0 + 0x48]
	0x03DD1634 LDR X10, [X10 + 0xED0]
	0x03DD1638 LDRH W9, [X8 + 0x12E]
	0x03DD163C LDR X1, [X10]
	0x03DD1640 CBZ X9, 0x3DD1664
	0x03DD1644 LDR X10, [X8 + 0xB0]
	0x03DD1648 ADD X10, X10, 0x8
	0x03DD164C LDUR X11, [X10 - 0x8]
	0x03DD1650 CMP X11, X1
	0x03DD1654 B.EQ 0x3DD4F38
	0x03DD1658 SUBS X9, X9, 0x1
	0x03DD165C ADD X10, X10, 0x10
	0x03DD1660 B.NE 0x3DD164C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x618000
	009 Move W8, [X23+438]
	010 Move X20, X3
	011 Move W21, W2
	012 Move X19, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x395000
	019 Move X0, [X0+784]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+438], W8
	023 Move W8, 3
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, 0x395000
	027 Move X8, [X8+784]
	028 Add X0, X22, 24
	029 Move X1, [X8]
	030 Call StyleDataRef`1<TransformData>.Write, X0
	031 Move V0, [X20]
	032 Move X8, [X20+16]
	033 Move [X0+60], V0
	034 Move [X0+76], X8
	035 Compare X19, 0
	036 JumpIfEqual {94}
	037 Move X0, X19
	038 Move X20, [X31+64]
	039 Move X19, [X31+72]
	040 Move X22, [X31+48]
	041 Move X21, [X31+56]
	042 Move X30, [X31+32]
	043 Move X23, [X31+40]
	044 Move W1, 512
	045 Move X2, X31
	046 Add X31, X31, 80
	047 Call VisualElement.IncrementVersion, X0, X1
	048 Return 
	049 Move X0, 0x396000
	050 Move X0, [X0+1192]
	051 Call 0x1C17D08
	052 Move TEMP, 0
	053 Not TEMP
	054 Move X8, TEMP
	055 Move [X31+8], X0
	056 Move [X31+16], X8
	057 Add X0, X31, 8
	058 Move X1, X31
	059 Move [X31+24], W21
	060 Call Enum.ToString, X0
	061 Move X19, X0
	062 Move X0, 0x399000
	063 Move X0, [X0+1040]
	064 Call 0x1C17D08
	065 Move X20, X0
	066 Move X0, 0x399000
	067 Move X0, [X0+864]
	068 Call 0x1C17D08
	069 Move X2, X0
	070 Move X0, X20
	071 Move X1, X19
	072 Move X3, X31
	073 Call String.Concat, X0, X1, X2
	074 Move X19, X0
	075 Move X0, 0x32B000
	076 Move X0, [X0+1400]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X20, X0
	080 Move X0, 0x325000
	081 Move X0, [X0+3088]
	082 Call 0x1C17D08
	083 Move X2, X0
	084 Move X0, X20
	085 Move X1, X19
	086 Move X3, X31
	087 Call ArgumentException..ctor, X0, X1, X2
	088 Move X0, 0x399000
	089 Move X0, [X0+1048]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X20
	093 Call 0x1C17DEC
	094 Call 0x1C17F20

Method: System.Void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.TransformOrigin newValue)

Disassembly:
	0x03DD1664 MOVZ W2, 0xE
	0x03DD1668 MOV X0, X22
	0x03DD166C BL 0x1C5C788
	0x03DD1670 B 0x3DD4F48
	0x03DD1674 CBZ X22, 0x3DD5BF8
	0x03DD1678 MOV X0, X22
	0x03DD167C MOV X1, X31
	0x03DD1680 BL 0x3DE89D4
	0x03DD1684 ADRP X19, 0x394000
	0x03DD1688 LDR X19, [X19 + 0x360]
	0x03DD168C MOV X22, X0
	0x03DD1690 ADD X0, X24, 0x28
	0x03DD1694 LDR X1, [X19]
	0x03DD1698 BL 0x266DB18
	0x03DD169C LDR W8, [X0 + 0x60]
	0x03DD16A0 LDR V0, [X0 + 0x5]
	0x03DD16A4 LDR X1, [X19]
	0x03DD16A8 ADD X0, X23, 0x28
	0x03DD16AC STR W8, [X31 + 0x220]
	0x03DD16B0 STR V0, [X31 + 0x21]
	0x03DD16B4 BL 0x266DB18
	0x03DD16B8 LDR W8, [X0 + 0x60]
	0x03DD16BC LDR V0, [X0 + 0x5]
	0x03DD16C0 STR W8, [X31 + 0x200]
	0x03DD16C4 STR V0, [X31 + 0x1F]
	0x03DD16C8 CBZ X22, 0x3DD5BF8
	0x03DD16CC LDR V0, [X31 + 0x21]
	0x03DD16D0 LDR W8, [X31 + 0x220]
	0x03DD16D4 LDR V1, [X31 + 0x1F]
	0x03DD16D8 LDR W9, [X31 + 0x200]
	0x03DD16DC STR V0, [X31 + 0x19]
	0x03DD16E0 STR W8, [X31 + 0x1A0]
	0x03DD16E4 STR V1, [X31 + 0x17]
	0x03DD16E8 STR W9, [X31 + 0x180]
	0x03DD16EC ADRP X10, 0x34C000
	0x03DD16F0 LDR X8, [X22]
	0x03DD16F4 LDR X10, [X10 + 0xED0]
	0x03DD16F8 LDRH W9, [X8 + 0x12E]
	0x03DD16FC LDR X1, [X10]
	0x03DD1700 CBZ X9, 0x3DD1724
	0x03DD1704 LDR X10, [X8 + 0xB0]
	0x03DD1708 ADD X10, X10, 0x8
	0x03DD170C LDUR X11, [X10 - 0x8]
	0x03DD1710 CMP X11, X1
	0x03DD1714 B.EQ 0x3DD4F5C
	0x03DD1718 SUBS X9, X9, 0x1
	0x03DD171C ADD X10, X10, 0x10
	0x03DD1720 B.NE 0x3DD170C
	0x03DD1724 MOVZ W2, 0xF
	0x03DD1728 MOV X0, X22
	0x03DD172C BL 0x1C5C788
	0x03DD1730 B 0x3DD4F6C
	0x03DD1734 CBZ X22, 0x3DD5BF8
	0x03DD1738 MOV X0, X22
	0x03DD173C MOV X1, X31
	0x03DD1740 BL 0x3DE89D4
	0x03DD1744 ADRP X19, 0x394000
	0x03DD1748 LDR X19, [X19 + 0x360]
	0x03DD174C MOV X25, X0
	0x03DD1750 ADD X0, X24, 0x28
	0x03DD1754 LDR X1, [X19]
	0x03DD1758 BL 0x266DB18
	0x03DD175C LDR X1, [X19]
	0x03DD1760 LDP S8, S9, [X0 + 0x64]
	0x03DD1764 LDP S10, S11, [X0 + 0x6C]
	0x03DD1768 ADD X0, X23, 0x28
	0x03DD176C BL 0x266DB18
	0x03DD1770 CBZ X25, 0x3DD5BF8
	0x03DD1774 ADRP X10, 0x34C000
	0x03DD1778 LDP S13, S12, [X0 + 0x6C]
	0x03DD177C LDR X8, [X25]
	0x03DD1780 LDP S15, S14, [X0 + 0x64]
	0x03DD1784 LDR X10, [X10 + 0xED0]
	0x03DD1788 LDRH W9, [X8 + 0x12E]
	0x03DD178C LDR X1, [X10]
	0x03DD1790 CBZ X9, 0x3DD17B4
	0x03DD1794 LDR X10, [X8 + 0xB0]
	0x03DD1798 ADD X10, X10, 0x8
	0x03DD179C LDUR X11, [X10 - 0x8]
	0x03DD17A0 CMP X11, X1
	0x03DD17A4 B.EQ 0x3DD4FA4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x618000
	009 Move W8, [X23+439]
	010 Move X20, X3
	011 Move W21, W2
	012 Move X19, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x395000
	019 Move X0, [X0+784]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+439], W8
	023 Move W8, 2
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, 0x395000
	027 Move X8, [X8+784]
	028 Add X0, X22, 24
	029 Move X1, [X8]
	030 Call StyleDataRef`1<TransformData>.Write, X0
	031 Move V0, [X20]
	032 Move W8, [X20+16]
	033 Move [X0+40], V0
	034 Move [X0+56], W8
	035 Compare X19, 0
	036 JumpIfEqual {94}
	037 Move X0, X19
	038 Move X20, [X31+64]
	039 Move X19, [X31+72]
	040 Move X22, [X31+48]
	041 Move X21, [X31+56]
	042 Move X30, [X31+32]
	043 Move X23, [X31+40]
	044 Move W1, 512
	045 Move X2, X31
	046 Add X31, X31, 80
	047 Call VisualElement.IncrementVersion, X0, X1
	048 Return 
	049 Move X0, 0x396000
	050 Move X0, [X0+1192]
	051 Call 0x1C17D08
	052 Move TEMP, 0
	053 Not TEMP
	054 Move X8, TEMP
	055 Move [X31+8], X0
	056 Move [X31+16], X8
	057 Add X0, X31, 8
	058 Move X1, X31
	059 Move [X31+24], W21
	060 Call Enum.ToString, X0
	061 Move X19, X0
	062 Move X0, 0x399000
	063 Move X0, [X0+1056]
	064 Call 0x1C17D08
	065 Move X20, X0
	066 Move X0, 0x399000
	067 Move X0, [X0+864]
	068 Call 0x1C17D08
	069 Move X2, X0
	070 Move X0, X20
	071 Move X1, X19
	072 Move X3, X31
	073 Call String.Concat, X0, X1, X2
	074 Move X19, X0
	075 Move X0, 0x32B000
	076 Move X0, [X0+1400]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X20, X0
	080 Move X0, 0x325000
	081 Move X0, [X0+3088]
	082 Call 0x1C17D08
	083 Move X2, X0
	084 Move X0, X20
	085 Move X1, X19
	086 Move X3, X31
	087 Call ArgumentException..ctor, X0, X1, X2
	088 Move X0, 0x399000
	089 Move X0, [X0+1064]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X20
	093 Call 0x1C17DEC
	094 Call 0x1C17F20

Method: System.Void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Rotate newValue)

Disassembly:
	0x03DD17A8 SUBS X9, X9, 0x1
	0x03DD17AC ADD X10, X10, 0x10
	0x03DD17B0 B.NE 0x3DD179C
	0x03DD17B4 MOVZ W2, 0x3
	0x03DD17B8 MOV X0, X25
	0x03DD17BC BL 0x1C5C788
	0x03DD17C0 B 0x3DD4FB4
	0x03DD17C4 CBZ X22, 0x3DD5BF8
	0x03DD17C8 MOV X0, X22
	0x03DD17CC MOV X1, X31
	0x03DD17D0 BL 0x3DE89D4
	0x03DD17D4 ADRP X19, 0x394000
	0x03DD17D8 LDR X19, [X19 + 0x360]
	0x03DD17DC MOV X22, X0
	0x03DD17E0 ADD X0, X24, 0x28
	0x03DD17E4 LDR X1, [X19]
	0x03DD17E8 BL 0x266DB18
	0x03DD17EC LDR X1, [X19]
	0x03DD17F0 LDUR X24, [X0 + 0x74]
	0x03DD17F4 ADD X0, X23, 0x28
	0x03DD17F8 BL 0x266DB18
	0x03DD17FC CBZ X22, 0x3DD5BF8
	0x03DD1800 ADRP X10, 0x34C000
	0x03DD1804 LDR X8, [X22]
	0x03DD1808 LDUR X23, [X0 + 0x74]
	0x03DD180C LDR X10, [X10 + 0xED0]
	0x03DD1810 LDRH W9, [X8 + 0x12E]
	0x03DD1814 LDR X1, [X10]
	0x03DD1818 CBZ X9, 0x3DD183C
	0x03DD181C LDR X10, [X8 + 0xB0]
	0x03DD1820 ADD X10, X10, 0x8
	0x03DD1824 LDUR X11, [X10 - 0x8]
	0x03DD1828 CMP X11, X1
	0x03DD182C B.EQ 0x3DD4FC8
	0x03DD1830 SUBS X9, X9, 0x1
	0x03DD1834 ADD X10, X10, 0x10
	0x03DD1838 B.NE 0x3DD1824
	0x03DD183C MOVZ W2, 0x2
	0x03DD1840 MOV X0, X22
	0x03DD1844 BL 0x1C5C788
	0x03DD1848 B 0x3DD4FD8
	0x03DD184C CBZ X22, 0x3DD5BF8
	0x03DD1850 MOV X0, X22
	0x03DD1854 MOV X1, X31
	0x03DD1858 BL 0x3DE89D4
	0x03DD185C ADRP X19, 0x394000
	0x03DD1860 LDR X19, [X19 + 0x360]
	0x03DD1864 MOV X22, X0
	0x03DD1868 ADD X0, X24, 0x28
	0x03DD186C LDR X1, [X19]
	0x03DD1870 BL 0x266DB18
	0x03DD1874 LDR X1, [X19]
	0x03DD1878 LDUR X24, [X0 + 0x7C]
	0x03DD187C ADD X0, X23, 0x28
	0x03DD1880 BL 0x266DB18
	0x03DD1884 CBZ X22, 0x3DD5BF8
	0x03DD1888 ADRP X10, 0x34C000
	0x03DD188C LDR X8, [X22]
	0x03DD1890 LDUR X23, [X0 + 0x7C]
	0x03DD1894 LDR X10, [X10 + 0xED0]
	0x03DD1898 LDRH W9, [X8 + 0x12E]
	0x03DD189C LDR X1, [X10]
	0x03DD18A0 CBZ X9, 0x3DD18C4
	0x03DD18A4 LDR X10, [X8 + 0xB0]
	0x03DD18A8 ADD X10, X10, 0x8
	0x03DD18AC LDUR X11, [X10 - 0x8]
	0x03DD18B0 CMP X11, X1
	0x03DD18B4 B.EQ 0x3DD4FEC
	0x03DD18B8 SUBS X9, X9, 0x1
	0x03DD18BC ADD X10, X10, 0x10
	0x03DD18C0 B.NE 0x3DD18AC
	0x03DD18C4 MOVZ W2, 0x2
	0x03DD18C8 MOV X0, X22
	0x03DD18CC BL 0x1C5C788
	0x03DD18D0 B 0x3DD4FFC
	0x03DD18D4 CBZ X22, 0x3DD5BF8
	0x03DD18D8 MOV X0, X22
	0x03DD18DC MOV X1, X31
	0x03DD18E0 BL 0x3DE89D4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x618000
	009 Move W8, [X23+440]
	010 Move X20, X3
	011 Move W21, W2
	012 Move X19, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x395000
	019 Move X0, [X0+784]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+440], W8
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, 0x395000
	025 Move X8, [X8+784]
	026 Add X0, X22, 24
	027 Move X1, [X8]
	028 Call StyleDataRef`1<TransformData>.Write, X0
	029 Move V0, [X20]
	030 Move X8, [X20+16]
	031 Move [X0], V0
	032 Move [X0+16], X8
	033 Compare X19, 0
	034 JumpIfEqual {92}
	035 Move X0, X19
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Move X22, [X31+48]
	039 Move X21, [X31+56]
	040 Move X30, [X31+32]
	041 Move X23, [X31+40]
	042 Move W1, 512
	043 Move X2, X31
	044 Add X31, X31, 80
	045 Call VisualElement.IncrementVersion, X0, X1
	046 Return 
	047 Move X0, 0x396000
	048 Move X0, [X0+1192]
	049 Call 0x1C17D08
	050 Move TEMP, 0
	051 Not TEMP
	052 Move X8, TEMP
	053 Move [X31+8], X0
	054 Move [X31+16], X8
	055 Add X0, X31, 8
	056 Move X1, X31
	057 Move [X31+24], W21
	058 Call Enum.ToString, X0
	059 Move X19, X0
	060 Move X0, 0x399000
	061 Move X0, [X0+1072]
	062 Call 0x1C17D08
	063 Move X20, X0
	064 Move X0, 0x399000
	065 Move X0, [X0+864]
	066 Call 0x1C17D08
	067 Move X2, X0
	068 Move X0, X20
	069 Move X1, X19
	070 Move X3, X31
	071 Call String.Concat, X0, X1, X2
	072 Move X19, X0
	073 Move X0, 0x32B000
	074 Move X0, [X0+1400]
	075 Call 0x1C17D08
	076 Call 0x1C17F10
	077 Move X20, X0
	078 Move X0, 0x325000
	079 Move X0, [X0+3088]
	080 Call 0x1C17D08
	081 Move X2, X0
	082 Move X0, X20
	083 Move X1, X19
	084 Move X3, X31
	085 Call ArgumentException..ctor, X0, X1, X2
	086 Move X0, 0x399000
	087 Move X0, [X0+1080]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X20
	091 Call 0x1C17DEC
	092 Call 0x1C17F20

Method: System.Void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Scale newValue)

Disassembly:
	0x03DD18E4 ADRP X19, 0x394000
	0x03DD18E8 LDR X19, [X19 + 0x360]
	0x03DD18EC MOV X25, X0
	0x03DD18F0 ADD X0, X24, 0x28
	0x03DD18F4 LDR X1, [X19]
	0x03DD18F8 BL 0x266DB18
	0x03DD18FC LDR X1, [X19]
	0x03DD1900 LDP S8, S9, [X0 + 0x84]
	0x03DD1904 LDP S10, S11, [X0 + 0x8C]
	0x03DD1908 ADD X0, X23, 0x28
	0x03DD190C BL 0x266DB18
	0x03DD1910 CBZ X25, 0x3DD5BF8
	0x03DD1914 ADRP X10, 0x34C000
	0x03DD1918 LDP S13, S12, [X0 + 0x8C]
	0x03DD191C LDR X8, [X25]
	0x03DD1920 LDP S15, S14, [X0 + 0x84]
	0x03DD1924 LDR X10, [X10 + 0xED0]
	0x03DD1928 LDRH W9, [X8 + 0x12E]
	0x03DD192C LDR X1, [X10]
	0x03DD1930 CBZ X9, 0x3DD1954
	0x03DD1934 LDR X10, [X8 + 0xB0]
	0x03DD1938 ADD X10, X10, 0x8
	0x03DD193C LDUR X11, [X10 - 0x8]
	0x03DD1940 CMP X11, X1
	0x03DD1944 B.EQ 0x3DD500C
	0x03DD1948 SUBS X9, X9, 0x1
	0x03DD194C ADD X10, X10, 0x10
	0x03DD1950 B.NE 0x3DD193C
	0x03DD1954 MOVZ W2, 0x3
	0x03DD1958 MOV X0, X25
	0x03DD195C BL 0x1C5C788
	0x03DD1960 B 0x3DD501C
	0x03DD1964 CBZ X22, 0x3DD5BF8
	0x03DD1968 MOV X0, X22
	0x03DD196C MOV X1, X31
	0x03DD1970 BL 0x3DE89D4
	0x03DD1974 ADRP X19, 0x394000
	0x03DD1978 LDR X19, [X19 + 0x360]
	0x03DD197C MOV X25, X0
	0x03DD1980 ADD X0, X24, 0x28
	0x03DD1984 LDR X1, [X19]
	0x03DD1988 BL 0x266DB18
	0x03DD198C LDR X1, [X19]
	0x03DD1990 LDP S8, S9, [X0 + 0x94]
	0x03DD1994 LDP S10, S11, [X0 + 0x9C]
	0x03DD1998 ADD X0, X23, 0x28
	0x03DD199C BL 0x266DB18
	0x03DD19A0 CBZ X25, 0x3DD5BF8
	0x03DD19A4 ADRP X10, 0x34C000
	0x03DD19A8 LDP S13, S12, [X0 + 0x9C]
	0x03DD19AC LDR X8, [X25]
	0x03DD19B0 LDP S15, S14, [X0 + 0x94]
	0x03DD19B4 LDR X10, [X10 + 0xED0]
	0x03DD19B8 LDRH W9, [X8 + 0x12E]
	0x03DD19BC LDR X1, [X10]
	0x03DD19C0 CBZ X9, 0x3DD19E4
	0x03DD19C4 LDR X10, [X8 + 0xB0]
	0x03DD19C8 ADD X10, X10, 0x8
	0x03DD19CC LDUR X11, [X10 - 0x8]
	0x03DD19D0 CMP X11, X1
	0x03DD19D4 B.EQ 0x3DD5030
	0x03DD19D8 SUBS X9, X9, 0x1
	0x03DD19DC ADD X10, X10, 0x10
	0x03DD19E0 B.NE 0x3DD19CC
	0x03DD19E4 MOVZ W2, 0x3
	0x03DD19E8 MOV X0, X25
	0x03DD19EC BL 0x1C5C788
	0x03DD19F0 B 0x3DD5040
	0x03DD19F4 CBZ X22, 0x3DD5BF8
	0x03DD19F8 MOV X0, X22
	0x03DD19FC MOV X1, X31
	0x03DD1A00 BL 0x3DE89D4
	0x03DD1A04 ADRP X19, 0x394000
	0x03DD1A08 LDR X19, [X19 + 0x360]
	0x03DD1A0C MOV X25, X0
	0x03DD1A10 ADD X0, X24, 0x28
	0x03DD1A14 LDR X1, [X19]
	0x03DD1A18 BL 0x266DB18
	0x03DD1A1C LDR X1, [X19]
	0x03DD1A20 LDP S8, S9, [X0 + 0xA4]
	0x03DD1A24 LDP S10, S11, [X0 + 0xAC]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X24, 0x618000
	010 Move W8, [X24+441]
	011 Move X20, X4
	012 Move X21, X3
	013 Move W22, W2
	014 Move X19, X1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x395000
	021 Move X0, [X0+784]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+441], W8
	025 Move W8, 1
	026 NotImplemented "Instruction MOVK not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, 0x395000
	029 Move X8, [X8+784]
	030 Add X0, X23, 24
	031 Move X1, [X8]
	032 Call StyleDataRef`1<TransformData>.Write, X0
	033 Move [X0+24], X21
	034 Move [X0+32], X20
	035 Compare X19, 0
	036 JumpIfEqual {95}
	037 Move X0, X19
	038 Move X20, [X31+80]
	039 Move X19, [X31+88]
	040 Move X22, [X31+64]
	041 Move X21, [X31+72]
	042 Move X24, [X31+48]
	043 Move X23, [X31+56]
	044 Move X30, [X31+32]
	045 Move W1, 512
	046 Move X2, X31
	047 Add X31, X31, 96
	048 Call VisualElement.IncrementVersion, X0, X1
	049 Return 
	050 Move X0, 0x396000
	051 Move X0, [X0+1192]
	052 Call 0x1C17D08
	053 Move TEMP, 0
	054 Not TEMP
	055 Move X8, TEMP
	056 Move [X31+8], X0
	057 Move [X31+16], X8
	058 Add X0, X31, 8
	059 Move X1, X31
	060 Move [X31+24], W22
	061 Call Enum.ToString, X0
	062 Move X19, X0
	063 Move X0, 0x399000
	064 Move X0, [X0+1088]
	065 Call 0x1C17D08
	066 Move X20, X0
	067 Move X0, 0x399000
	068 Move X0, [X0+864]
	069 Call 0x1C17D08
	070 Move X2, X0
	071 Move X0, X20
	072 Move X1, X19
	073 Move X3, X31
	074 Call String.Concat, X0, X1, X2
	075 Move X19, X0
	076 Move X0, 0x32B000
	077 Move X0, [X0+1400]
	078 Call 0x1C17D08
	079 Call 0x1C17F10
	080 Move X20, X0
	081 Move X0, 0x325000
	082 Move X0, [X0+3088]
	083 Call 0x1C17D08
	084 Move X2, X0
	085 Move X0, X20
	086 Move X1, X19
	087 Move X3, X31
	088 Call ArgumentException..ctor, X0, X1, X2
	089 Move X0, 0x399000
	090 Move X0, [X0+1096]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X20
	094 Call 0x1C17DEC
	095 Call 0x1C17F20

Method: System.Boolean StartAnimation(UnityEngine.UIElements.VisualElement element, UnityEngine.UIElements.StyleSheets.StylePropertyId id, ref UnityEngine.UIElements.ComputedStyle oldStyle, ref UnityEngine.UIElements.ComputedStyle newStyle, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DD1A28 ADD X0, X23, 0x28
	0x03DD1A2C BL 0x266DB18
	0x03DD1A30 CBZ X25, 0x3DD5BF8
	0x03DD1A34 ADRP X10, 0x34C000
	0x03DD1A38 LDP S13, S12, [X0 + 0xAC]
	0x03DD1A3C LDR X8, [X25]
	0x03DD1A40 LDP S15, S14, [X0 + 0xA4]
	0x03DD1A44 LDR X10, [X10 + 0xED0]
	0x03DD1A48 LDRH W9, [X8 + 0x12E]
	0x03DD1A4C LDR X1, [X10]
	0x03DD1A50 CBZ X9, 0x3DD1A74
	0x03DD1A54 LDR X10, [X8 + 0xB0]
	0x03DD1A58 ADD X10, X10, 0x8
	0x03DD1A5C LDUR X11, [X10 - 0x8]
	0x03DD1A60 CMP X11, X1
	0x03DD1A64 B.EQ 0x3DD5054
	0x03DD1A68 SUBS X9, X9, 0x1
	0x03DD1A6C ADD X10, X10, 0x10
	0x03DD1A70 B.NE 0x3DD1A5C
	0x03DD1A74 MOVZ W2, 0x3
	0x03DD1A78 MOV X0, X25
	0x03DD1A7C BL 0x1C5C788
	0x03DD1A80 B 0x3DD5064
	0x03DD1A84 CBZ X22, 0x3DD5BF8
	0x03DD1A88 MOV X0, X22
	0x03DD1A8C MOV X1, X31
	0x03DD1A90 BL 0x3DE89D4
	0x03DD1A94 ADRP X19, 0x394000
	0x03DD1A98 LDR X19, [X19 + 0x360]
	0x03DD1A9C MOV X22, X0
	0x03DD1AA0 ADD X0, X24, 0x28
	0x03DD1AA4 LDR X1, [X19]
	0x03DD1AA8 BL 0x266DB18
	0x03DD1AAC LDR X1, [X19]
	0x03DD1AB0 LDUR X24, [X0 + 0xB4]
	0x03DD1AB4 ADD X0, X23, 0x28
	0x03DD1AB8 BL 0x266DB18
	0x03DD1ABC CBZ X22, 0x3DD5BF8
	0x03DD1AC0 ADRP X10, 0x34C000
	0x03DD1AC4 LDR X8, [X22]
	0x03DD1AC8 LDUR X23, [X0 + 0xB4]
	0x03DD1ACC LDR X10, [X10 + 0xED0]
	0x03DD1AD0 LDRH W9, [X8 + 0x12E]
	0x03DD1AD4 LDR X1, [X10]
	0x03DD1AD8 CBZ X9, 0x3DD1AFC
	0x03DD1ADC LDR X10, [X8 + 0xB0]
	0x03DD1AE0 ADD X10, X10, 0x8
	0x03DD1AE4 LDUR X11, [X10 - 0x8]
	0x03DD1AE8 CMP X11, X1
	0x03DD1AEC B.EQ 0x3DD507C
	0x03DD1AF0 SUBS X9, X9, 0x1
	0x03DD1AF4 ADD X10, X10, 0x10
	0x03DD1AF8 B.NE 0x3DD1AE4
	0x03DD1AFC MOVZ W2, 0x2
	0x03DD1B00 MOV X0, X22
	0x03DD1B04 BL 0x1C5C788
	0x03DD1B08 B 0x3DD508C
	0x03DD1B0C CBZ X22, 0x3DD5BF8
	0x03DD1B10 MOV X0, X22
	0x03DD1B14 MOV X1, X31
	0x03DD1B18 BL 0x3DE89D4
	0x03DD1B1C ADRP X19, 0x394000
	0x03DD1B20 LDR X19, [X19 + 0x360]
	0x03DD1B24 MOV X22, X0
	0x03DD1B28 ADD X0, X24, 0x28
	0x03DD1B2C LDR X1, [X19]
	0x03DD1B30 BL 0x266DB18
	0x03DD1B34 LDR X1, [X19]
	0x03DD1B38 LDUR X24, [X0 + 0xBC]
	0x03DD1B3C ADD X0, X23, 0x28
	0x03DD1B40 BL 0x266DB18
	0x03DD1B44 CBZ X22, 0x3DD5BF8
	0x03DD1B48 ADRP X10, 0x34C000
	0x03DD1B4C LDR X8, [X22]
	0x03DD1B50 LDUR X23, [X0 + 0xBC]
	0x03DD1B54 LDR X10, [X10 + 0xED0]
	0x03DD1B58 LDRH W9, [X8 + 0x12E]
	0x03DD1B5C LDR X1, [X10]
	0x03DD1B60 CBZ X9, 0x3DD1B84
	0x03DD1B64 LDR X10, [X8 + 0xB0]
	0x03DD1B68 ADD X10, X10, 0x8
	0x03DD1B6C LDUR X11, [X10 - 0x8]
	0x03DD1B70 CMP X11, X1
	0x03DD1B74 B.EQ 0x3DD50A0
	0x03DD1B78 SUBS X9, X9, 0x1
	0x03DD1B7C ADD X10, X10, 0x10
	0x03DD1B80 B.NE 0x3DD1B6C
	0x03DD1B84 MOVZ W2, 0x2
	0x03DD1B88 MOV X0, X22
	0x03DD1B8C BL 0x1C5C788
	0x03DD1B90 B 0x3DD50B0
	0x03DD1B94 CBZ X22, 0x3DD5BF8
	0x03DD1B98 MOV X0, X22
	0x03DD1B9C MOV X1, X31
	0x03DD1BA0 BL 0x3DE89D4
	0x03DD1BA4 ADRP X19, 0x394000
	0x03DD1BA8 LDR X19, [X19 + 0x360]
	0x03DD1BAC MOV X22, X0
	0x03DD1BB0 ADD X0, X24, 0x28
	0x03DD1BB4 LDR X1, [X19]
	0x03DD1BB8 BL 0x266DB18
	0x03DD1BBC LDR X1, [X19]
	0x03DD1BC0 LDR V8, [X0 + 0xC4]
	0x03DD1BC4 ADD X0, X23, 0x28
	0x03DD1BC8 BL 0x266DB18
	0x03DD1BCC CBZ X22, 0x3DD5BF8
	0x03DD1BD0 ADRP X10, 0x34C000
	0x03DD1BD4 LDR X8, [X22]
	0x03DD1BD8 LDR V9, [X0 + 0xC4]
	0x03DD1BDC LDR X10, [X10 + 0xED0]
	0x03DD1BE0 LDRH W9, [X8 + 0x12E]
	0x03DD1BE4 LDR X1, [X10]
	0x03DD1BE8 CBZ X9, 0x3DD1C0C
	0x03DD1BEC LDR X10, [X8 + 0xB0]
	0x03DD1BF0 ADD X10, X10, 0x8
	0x03DD1BF4 LDUR X11, [X10 - 0x8]
	0x03DD1BF8 CMP X11, X1
	0x03DD1BFC B.EQ 0x3DD50C0
	0x03DD1C00 SUBS X9, X9, 0x1
	0x03DD1C04 ADD X10, X10, 0x10
	0x03DD1C08 B.NE 0x3DD1BF4
	0x03DD1C0C MOV X0, X22
	0x03DD1C10 MOV W2, W31
	0x03DD1C14 BL 0x1C5C788
	0x03DD1C18 B 0x3DD50CC
	0x03DD1C1C CBZ X22, 0x3DD5BF8
	0x03DD1C20 MOV X0, X22
	0x03DD1C24 MOV X1, X31
	0x03DD1C28 BL 0x3DE89D4
	0x03DD1C2C ADRP X19, 0x394000
	0x03DD1C30 LDR X19, [X19 + 0x360]
	0x03DD1C34 MOV X22, X0
	0x03DD1C38 ADD X0, X24, 0x28
	0x03DD1C3C LDR X1, [X19]
	0x03DD1C40 BL 0x266DB18
	0x03DD1C44 LDR X1, [X19]
	0x03DD1C48 LDR W24, [X0 + 0xC8]
	0x03DD1C4C ADD X0, X23, 0x28
	0x03DD1C50 BL 0x266DB18
	0x03DD1C54 CBZ X22, 0x3DD5BF8
	0x03DD1C58 ADRP X10, 0x34C000
	0x03DD1C5C LDR X8, [X22]
	0x03DD1C60 LDR W23, [X0 + 0xC8]
	0x03DD1C64 LDR X10, [X10 + 0xED0]
	0x03DD1C68 LDRH W9, [X8 + 0x12E]
	0x03DD1C6C LDR X1, [X10]
	0x03DD1C70 CBZ X9, 0x3DD1C94
	0x03DD1C74 LDR X10, [X8 + 0xB0]
	0x03DD1C78 ADD X10, X10, 0x8
	0x03DD1C7C LDUR X11, [X10 - 0x8]
	0x03DD1C80 CMP X11, X1
	0x03DD1C84 B.EQ 0x3DD50E0
	0x03DD1C88 SUBS X9, X9, 0x1
	0x03DD1C8C ADD X10, X10, 0x10
	0x03DD1C90 B.NE 0x3DD1C7C
	0x03DD1C94 MOVZ W2, 0x4
	0x03DD1C98 MOV X0, X22
	0x03DD1C9C BL 0x1C5C788
	0x03DD1CA0 B 0x3DD50F0
	0x03DD1CA4 CBZ X22, 0x3DD5BF8
	0x03DD1CA8 MOV X0, X22
	0x03DD1CAC MOV X1, X31
	0x03DD1CB0 BL 0x3DE89D4
	0x03DD1CB4 ADRP X19, 0x394000
	0x03DD1CB8 LDR X19, [X19 + 0x378]
	0x03DD1CBC MOV X25, X0
	0x03DD1CC0 ADD X0, X24, 0x18
	0x03DD1CC4 LDR X1, [X19]
	0x03DD1CC8 BL 0x266D220
	0x03DD1CCC LDR X1, [X19]
	0x03DD1CD0 LDP X24, X26, [X0 + 0x18]
	0x03DD1CD4 ADD X0, X23, 0x18
	0x03DD1CD8 BL 0x266D220
	0x03DD1CDC CBZ X25, 0x3DD5BF8
	0x03DD1CE0 ADRP X10, 0x34C000
	0x03DD1CE4 LDR X8, [X25]
	0x03DD1CE8 LDP X27, X23, [X0 + 0x18]
	0x03DD1CEC LDR X10, [X10 + 0xED0]
	0x03DD1CF0 LDRH W9, [X8 + 0x12E]
	0x03DD1CF4 LDR X1, [X10]
	0x03DD1CF8 CBZ X9, 0x3DD1D1C
	0x03DD1CFC LDR X10, [X8 + 0xB0]
	0x03DD1D00 ADD X10, X10, 0x8
	0x03DD1D04 LDUR X11, [X10 - 0x8]
	0x03DD1D08 CMP X11, X1
	0x03DD1D0C B.EQ 0x3DD5150
	0x03DD1D10 SUBS X9, X9, 0x1
	0x03DD1D14 ADD X10, X10, 0x10
	0x03DD1D18 B.NE 0x3DD1D04
	0x03DD1D1C MOVZ W2, 0x9
	0x03DD1D20 MOV X0, X25
	0x03DD1D24 BL 0x1C5C788
	0x03DD1D28 B 0x3DD5160
	0x03DD1D2C CBZ X22, 0x3DD5BF8
	0x03DD1D30 MOV X0, X22
	0x03DD1D34 MOV X1, X31
	0x03DD1D38 BL 0x3DE89D4
	0x03DD1D3C ADRP X19, 0x394000
	0x03DD1D40 LDR X19, [X19 + 0x378]
	0x03DD1D44 MOV X25, X0
	0x03DD1D48 ADD X0, X24, 0x18
	0x03DD1D4C LDR X1, [X19]
	0x03DD1D50 BL 0x266D220
	0x03DD1D54 LDR W8, [X0 + 0x38]
	0x03DD1D58 LDUR V0, [X0 + 0x28]
	0x03DD1D5C LDR X1, [X19]
	0x03DD1D60 ADD X0, X23, 0x18
	0x03DD1D64 STR W8, [X31 + 0x220]
	0x03DD1D68 STR V0, [X31 + 0x21]
	0x03DD1D6C BL 0x266D220
	0x03DD1D70 LDR W8, [X0 + 0x38]
	0x03DD1D74 LDUR V0, [X0 + 0x28]
	0x03DD1D78 STR W8, [X31 + 0x200]
	0x03DD1D7C STR V0, [X31 + 0x1F]
	0x03DD1D80 CBZ X25, 0x3DD5BF8
	0x03DD1D84 LDR V0, [X31 + 0x21]
	0x03DD1D88 LDR W8, [X31 + 0x220]
	0x03DD1D8C LDR V1, [X31 + 0x1F]
	0x03DD1D90 LDR W9, [X31 + 0x200]
	0x03DD1D94 STR V0, [X31 + 0xD]
	0x03DD1D98 STR W8, [X31 + 0xE0]
	0x03DD1D9C STR V1, [X31 + 0xB]
	0x03DD1DA0 STR W9, [X31 + 0xC0]
	0x03DD1DA4 ADRP X10, 0x34C000
	0x03DD1DA8 LDR X8, [X25]
	0x03DD1DAC LDR X10, [X10 + 0xED0]
	0x03DD1DB0 LDRH W9, [X8 + 0x12E]
	0x03DD1DB4 LDR X1, [X10]
	0x03DD1DB8 CBZ X9, 0x3DD1DDC
	0x03DD1DBC LDR X10, [X8 + 0xB0]
	0x03DD1DC0 ADD X10, X10, 0x8
	0x03DD1DC4 LDUR X11, [X10 - 0x8]
	0x03DD1DC8 CMP X11, X1
	0x03DD1DCC B.EQ 0x3DD5198
	0x03DD1DD0 SUBS X9, X9, 0x1
	0x03DD1DD4 ADD X10, X10, 0x10
	0x03DD1DD8 B.NE 0x3DD1DC4
	0x03DD1DDC MOVZ W2, 0xC
	0x03DD1DE0 MOV X0, X25
	0x03DD1DE4 BL 0x1C5C788
	0x03DD1DE8 B 0x3DD51A8
	0x03DD1DEC CBZ X22, 0x3DD5BF8
	0x03DD1DF0 MOV X0, X22
	0x03DD1DF4 MOV X1, X31
	0x03DD1DF8 BL 0x3DE89D4
	0x03DD1DFC ADRP X19, 0x394000
	0x03DD1E00 LDR X19, [X19 + 0x378]
	0x03DD1E04 MOV X25, X0
	0x03DD1E08 ADD X0, X24, 0x18
	0x03DD1E0C LDR X1, [X19]
	0x03DD1E10 BL 0x266D220
	0x03DD1E14 LDUR X8, [X0 + 0x4C]
	0x03DD1E18 LDUR V0, [X0 + 0x3C]
	0x03DD1E1C LDR X1, [X19]
	0x03DD1E20 ADD X0, X23, 0x18
	0x03DD1E24 STR X8, [X31 + 0x220]
	0x03DD1E28 STR V0, [X31 + 0x21]
	0x03DD1E2C BL 0x266D220
	0x03DD1E30 LDUR X8, [X0 + 0x4C]
	0x03DD1E34 LDUR V0, [X0 + 0x3C]
	0x03DD1E38 STR X8, [X31 + 0x200]
	0x03DD1E3C STR V0, [X31 + 0x1F]
	0x03DD1E40 CBZ X25, 0x3DD5BF8
	0x03DD1E44 LDR V0, [X31 + 0x21]
	0x03DD1E48 LDR X8, [X31 + 0x220]
	0x03DD1E4C LDR V1, [X31 + 0x1F]
	0x03DD1E50 LDR X9, [X31 + 0x200]
	0x03DD1E54 STR V0, [X31 + 0x9]
	0x03DD1E58 STR X8, [X31 + 0xA0]
	0x03DD1E5C STR V1, [X31 + 0x7]
	0x03DD1E60 STR X9, [X31 + 0x80]
	0x03DD1E64 ADRP X10, 0x34C000
	0x03DD1E68 LDR X8, [X25]
	0x03DD1E6C LDR X10, [X10 + 0xED0]
	0x03DD1E70 LDRH W9, [X8 + 0x12E]
	0x03DD1E74 LDR X1, [X10]
	0x03DD1E78 CBZ X9, 0x3DD1E9C
	0x03DD1E7C LDR X10, [X8 + 0xB0]
	0x03DD1E80 ADD X10, X10, 0x8
	0x03DD1E84 LDUR X11, [X10 - 0x8]
	0x03DD1E88 CMP X11, X1
	0x03DD1E8C B.EQ 0x3DD51E4
	0x03DD1E90 SUBS X9, X9, 0x1
	0x03DD1E94 ADD X10, X10, 0x10
	0x03DD1E98 B.NE 0x3DD1E84
	0x03DD1E9C MOVZ W2, 0xA
	0x03DD1EA0 MOV X0, X25
	0x03DD1EA4 BL 0x1C5C788
	0x03DD1EA8 B 0x3DD51F4
	0x03DD1EAC CBZ X22, 0x3DD5BF8
	0x03DD1EB0 MOV X0, X22
	0x03DD1EB4 MOV X1, X31
	0x03DD1EB8 BL 0x3DE89D4
	0x03DD1EBC ADRP X19, 0x394000
	0x03DD1EC0 LDR X19, [X19 + 0x358]
	0x03DD1EC4 MOV X22, X0
	0x03DD1EC8 ADD X0, X24, 0x8
	0x03DD1ECC LDR X1, [X19]
	0x03DD1ED0 BL 0x266C920
	0x03DD1ED4 LDR X1, [X19]
	0x03DD1ED8 LDR W24, [X0 + 0x4]
	0x03DD1EDC ADD X0, X23, 0x8
	0x03DD1EE0 BL 0x266C920
	0x03DD1EE4 CBZ X22, 0x3DD5BF8
	0x03DD1EE8 ADRP X10, 0x34C000
	0x03DD1EEC LDR X8, [X22]
	0x03DD1EF0 LDR W23, [X0 + 0x4]
	0x03DD1EF4 LDR X10, [X10 + 0xED0]
	0x03DD1EF8 LDRH W9, [X8 + 0x12E]
	0x03DD1EFC LDR X1, [X10]
	0x03DD1F00 CBZ X9, 0x3DD1F24
	0x03DD1F04 LDR X10, [X8 + 0xB0]
	0x03DD1F08 ADD X10, X10, 0x8
	0x03DD1F0C LDUR X11, [X10 - 0x8]
	0x03DD1F10 CMP X11, X1
	0x03DD1F14 B.EQ 0x3DD52C0
	0x03DD1F18 SUBS X9, X9, 0x1
	0x03DD1F1C ADD X10, X10, 0x10
	0x03DD1F20 B.NE 0x3DD1F0C
	0x03DD1F24 MOVZ W2, 0x4
	0x03DD1F28 MOV X0, X22
	0x03DD1F2C BL 0x1C5C788
	0x03DD1F30 B 0x3DD52D0
	0x03DD1F34 CBZ X22, 0x3DD5BF8
	0x03DD1F38 MOV X0, X22
	0x03DD1F3C MOV X1, X31
	0x03DD1F40 BL 0x3DE89D4
	0x03DD1F44 ADRP X19, 0x394000
	0x03DD1F48 LDR X19, [X19 + 0x358]
	0x03DD1F4C MOV X22, X0
	0x03DD1F50 ADD X0, X24, 0x8
	0x03DD1F54 LDR X1, [X19]
	0x03DD1F58 BL 0x266C920
	0x03DD1F5C LDR X1, [X19]
	0x03DD1F60 LDR W24, [X0 + 0x8]
	0x03DD1F64 ADD X0, X23, 0x8
	0x03DD1F68 BL 0x266C920
	0x03DD1F6C CBZ X22, 0x3DD5BF8
	0x03DD1F70 ADRP X10, 0x34C000
	0x03DD1F74 LDR X8, [X22]
	0x03DD1F78 LDR W23, [X0 + 0x8]
	0x03DD1F7C LDR X10, [X10 + 0xED0]
	0x03DD1F80 LDRH W9, [X8 + 0x12E]
	0x03DD1F84 LDR X1, [X10]
	0x03DD1F88 CBZ X9, 0x3DD1FAC
	0x03DD1F8C LDR X10, [X8 + 0xB0]
	0x03DD1F90 ADD X10, X10, 0x8
	0x03DD1F94 LDUR X11, [X10 - 0x8]
	0x03DD1F98 CMP X11, X1
	0x03DD1F9C B.EQ 0x3DD52E8
	0x03DD1FA0 SUBS X9, X9, 0x1
	0x03DD1FA4 ADD X10, X10, 0x10
	0x03DD1FA8 B.NE 0x3DD1F94
	0x03DD1FAC MOVZ W2, 0x4
	0x03DD1FB0 MOV X0, X22
	0x03DD1FB4 BL 0x1C5C788
	0x03DD1FB8 B 0x3DD52F8
	0x03DD1FBC CBZ X22, 0x3DD5BF8
	0x03DD1FC0 MOV X0, X22
	0x03DD1FC4 MOV X1, X31
	0x03DD1FC8 BL 0x3DE89D4
	0x03DD1FCC ADRP X19, 0x394000
	0x03DD1FD0 LDR X19, [X19 + 0x358]
	0x03DD1FD4 MOV X22, X0
	0x03DD1FD8 ADD X0, X24, 0x8
	0x03DD1FDC LDR X1, [X19]
	0x03DD1FE0 BL 0x266C920
	0x03DD1FE4 LDR X1, [X19]
	0x03DD1FE8 LDR V8, [X0 + 0xC]
	0x03DD1FEC ADD X0, X23, 0x8
	0x03DD1FF0 BL 0x266C920
	0x03DD1FF4 CBZ X22, 0x3DD5BF8
	0x03DD1FF8 ADRP X10, 0x34C000
	0x03DD1FFC LDR X8, [X22]
	0x03DD2000 LDR V9, [X0 + 0xC]
	0x03DD2004 B 0x3EB1A2C
	0x03DD2008 LDRH W9, [X8 + 0x12E]
	0x03DD200C LDR X1, [X10]
	0x03DD2010 CBZ X9, 0x3DD2034
	0x03DD2014 LDR X10, [X8 + 0xB0]
	0x03DD2018 ADD X10, X10, 0x8
	0x03DD201C LDUR X11, [X10 - 0x8]
	0x03DD2020 CMP X11, X1
	0x03DD2024 B.EQ 0x3DD5308
	0x03DD2028 SUBS X9, X9, 0x1
	0x03DD202C ADD X10, X10, 0x10
	0x03DD2030 B.NE 0x3DD201C
	0x03DD2034 MOV X0, X22
	0x03DD2038 MOV W2, W31
	0x03DD203C BL 0x1C5C788
	0x03DD2040 B 0x3DD5314
	0x03DD2044 CBZ X22, 0x3DD5BF8
	0x03DD2048 MOV X0, X22
	0x03DD204C MOV X1, X31
	0x03DD2050 BL 0x3DE89D4
	0x03DD2054 ADRP X19, 0x393000
	0x03DD2058 LDR X19, [X19 + 0x358]
	0x03DD205C MOV X22, X0
	0x03DD2060 ADD X0, X24, 0x8
	0x03DD2064 LDR X1, [X19]
	0x03DD2068 BL 0x266C920
	0x03DD206C LDR X1, [X19]
	0x03DD2070 LDR V8, [X0 + 0x10]
	0x03DD2074 ADD X0, X23, 0x8
	0x03DD2078 BL 0x266C920
	0x03DD207C CBZ X22, 0x3DD5BF8
	0x03DD2080 ADRP X10, 0x34B000
	0x03DD2084 LDR X8, [X22]
	0x03DD2088 LDR V9, [X0 + 0x10]
	0x03DD208C LDR X10, [X10 + 0xED0]
	0x03DD2090 LDRH W9, [X8 + 0x12E]
	0x03DD2094 LDR X1, [X10]
	0x03DD2098 CBZ X9, 0x3DD20BC
	0x03DD209C LDR X10, [X8 + 0xB0]
	0x03DD20A0 ADD X10, X10, 0x8
	0x03DD20A4 LDUR X11, [X10 - 0x8]
	0x03DD20A8 CMP X11, X1
	0x03DD20AC B.EQ 0x3DD5324
	0x03DD20B0 SUBS X9, X9, 0x1
	0x03DD20B4 ADD X10, X10, 0x10
	0x03DD20B8 B.NE 0x3DD20A4
	0x03DD20BC MOV X0, X22
	0x03DD20C0 MOV W2, W31
	0x03DD20C4 BL 0x1C5C788
	0x03DD20C8 B 0x3DD5330
	0x03DD20CC CBZ X22, 0x3DD5BF8
	0x03DD20D0 MOV X0, X22
	0x03DD20D4 MOV X1, X31
	0x03DD20D8 BL 0x3DE89D4
	0x03DD20DC ADRP X19, 0x393000
	0x03DD20E0 LDR X19, [X19 + 0x358]
	0x03DD20E4 MOV X22, X0
	0x03DD20E8 ADD X0, X24, 0x8
	0x03DD20EC LDR X1, [X19]
	0x03DD20F0 BL 0x266C920
	0x03DD20F4 LDR X1, [X19]
	0x03DD20F8 LDR V8, [X0 + 0x14]
	0x03DD20FC ADD X0, X23, 0x8
	0x03DD2100 BL 0x266C920
	0x03DD2104 CBZ X22, 0x3DD5BF8
	0x03DD2108 ADRP X10, 0x34B000
	0x03DD210C LDR X8, [X22]
	0x03DD2110 LDR V9, [X0 + 0x14]
	0x03DD2114 LDR X10, [X10 + 0xED0]
	0x03DD2118 LDRH W9, [X8 + 0x12E]
	0x03DD211C LDR X1, [X10]
	0x03DD2120 CBZ X9, 0x3DD2144
	0x03DD2124 LDR X10, [X8 + 0xB0]
	0x03DD2128 ADD X10, X10, 0x8
	0x03DD212C LDUR X11, [X10 - 0x8]
	0x03DD2130 CMP X11, X1
	0x03DD2134 B.EQ 0x3DD5340
	0x03DD2138 SUBS X9, X9, 0x1
	0x03DD213C ADD X10, X10, 0x10
	0x03DD2140 B.NE 0x3DD212C
	0x03DD2144 MOV X0, X22
	0x03DD2148 MOV W2, W31
	0x03DD214C BL 0x1C5C788
	0x03DD2150 B 0x3DD534C
	0x03DD2154 CBZ X22, 0x3DD5BF8
	0x03DD2158 MOV X0, X22
	0x03DD215C MOV X1, X31
	0x03DD2160 BL 0x3DE89D4
	0x03DD2164 ADRP X19, 0x393000
	0x03DD2168 LDR X19, [X19 + 0x358]
	0x03DD216C MOV X22, X0
	0x03DD2170 ADD X0, X24, 0x8
	0x03DD2174 LDR X1, [X19]
	0x03DD2178 BL 0x266C920
	0x03DD217C LDR X1, [X19]
	0x03DD2180 LDR V8, [X0 + 0x18]
	0x03DD2184 ADD X0, X23, 0x8
	0x03DD2188 BL 0x266C920
	0x03DD218C CBZ X22, 0x3DD5BF8
	0x03DD2190 ADRP X10, 0x34B000
	0x03DD2194 LDR X8, [X22]
	0x03DD2198 LDR V9, [X0 + 0x18]
	0x03DD219C LDR X10, [X10 + 0xED0]
	0x03DD21A0 LDRH W9, [X8 + 0x12E]
	0x03DD21A4 LDR X1, [X10]
	0x03DD21A8 CBZ X9, 0x3DD21CC
	0x03DD21AC LDR X10, [X8 + 0xB0]
	0x03DD21B0 ADD X10, X10, 0x8
	0x03DD21B4 LDUR X11, [X10 - 0x8]
	0x03DD21B8 CMP X11, X1
	0x03DD21BC B.EQ 0x3DD5360
	0x03DD21C0 SUBS X9, X9, 0x1
	0x03DD21C4 ADD X10, X10, 0x10
	0x03DD21C8 B.NE 0x3DD21B4
	0x03DD21CC MOV X0, X22
	0x03DD21D0 MOV W2, W31
	0x03DD21D4 BL 0x1C5C788
	0x03DD21D8 B 0x3DD536C
	0x03DD21DC CBZ X22, 0x3DD5BF8
	0x03DD21E0 MOV X0, X22
	0x03DD21E4 MOV X1, X31
	0x03DD21E8 BL 0x3DE89D4
	0x03DD21EC ADRP X19, 0x393000
	0x03DD21F0 LDR X19, [X19 + 0x358]
	0x03DD21F4 MOV X22, X0
	0x03DD21F8 ADD X0, X24, 0x8
	0x03DD21FC LDR X1, [X19]
	0x03DD2200 BL 0x266C920
	0x03DD2204 LDR X1, [X19]
	0x03DD2208 LDUR X24, [X0 + 0x1C]
	0x03DD220C ADD X0, X23, 0x8
	0x03DD2210 BL 0x266C920
	0x03DD2214 CBZ X22, 0x3DD5BF8
	0x03DD2218 ADRP X10, 0x34B000
	0x03DD221C LDR X8, [X22]
	0x03DD2220 LDUR X23, [X0 + 0x1C]
	0x03DD2224 LDR X10, [X10 + 0xED0]
	0x03DD2228 LDRH W9, [X8 + 0x12E]
	0x03DD222C LDR X1, [X10]
	0x03DD2230 CBZ X9, 0x3DD2254
	0x03DD2234 LDR X10, [X8 + 0xB0]
	0x03DD2238 ADD X10, X10, 0x8
	0x03DD223C LDUR X11, [X10 - 0x8]
	0x03DD2240 CMP X11, X1
	0x03DD2244 B.EQ 0x3DD5380
	0x03DD2248 SUBS X9, X9, 0x1
	0x03DD224C ADD X10, X10, 0x10
	0x03DD2250 B.NE 0x3DD223C
	0x03DD2254 MOVZ W2, 0x2
	0x03DD2258 MOV X0, X22
	0x03DD225C BL 0x1C5C788
	0x03DD2260 B 0x3DD5390
	0x03DD2264 CBZ X22, 0x3DD5BF8
	0x03DD2268 MOV X0, X22
	0x03DD226C MOV X1, X31
	0x03DD2270 BL 0x3DE89D4
	0x03DD2274 ADRP X19, 0x393000
	0x03DD2278 LDR X19, [X19 + 0x358]
	0x03DD227C MOV X22, X0
	0x03DD2280 ADD X0, X24, 0x8
	0x03DD2284 LDR X1, [X19]
	0x03DD2288 BL 0x266C920
	0x03DD228C LDR X1, [X19]
	0x03DD2290 LDR W24, [X0 + 0x24]
	0x03DD2294 ADD X0, X23, 0x8
	0x03DD2298 BL 0x266C920
	0x03DD229C CBZ X22, 0x3DD5BF8
	0x03DD22A0 ADRP X10, 0x34B000
	0x03DD22A4 LDR X8, [X22]
	0x03DD22A8 LDR W23, [X0 + 0x24]
	0x03DD22AC LDR X10, [X10 + 0xED0]
	0x03DD22B0 LDRH W9, [X8 + 0x12E]
	0x03DD22B4 LDR X1, [X10]
	0x03DD22B8 CBZ X9, 0x3DD22DC
	0x03DD22BC LDR X10, [X8 + 0xB0]
	0x03DD22C0 ADD X10, X10, 0x8
	0x03DD22C4 LDUR X11, [X10 - 0x8]
	0x03DD22C8 CMP X11, X1
	0x03DD22CC B.EQ 0x3DD53A0
	0x03DD22D0 SUBS X9, X9, 0x1
	0x03DD22D4 ADD X10, X10, 0x10
	0x03DD22D8 B.NE 0x3DD22C4
	0x03DD22DC MOVZ W2, 0x4
	0x03DD22E0 MOV X0, X22
	0x03DD22E4 BL 0x1C5C788
	0x03DD22E8 B 0x3DD53B0
	0x03DD22EC CBZ X22, 0x3DD5BF8
	0x03DD22F0 MOV X0, X22
	0x03DD22F4 MOV X1, X31
	0x03DD22F8 BL 0x3DE89D4
	0x03DD22FC ADRP X19, 0x393000
	0x03DD2300 LDR X19, [X19 + 0x358]
	0x03DD2304 MOV X22, X0
	0x03DD2308 ADD X0, X24, 0x8
	0x03DD230C LDR X1, [X19]
	0x03DD2310 BL 0x266C920
	0x03DD2314 LDR X1, [X19]
	0x03DD2318 LDR X24, [X0 + 0x28]
	0x03DD231C ADD X0, X23, 0x8
	0x03DD2320 BL 0x266C920
	0x03DD2324 CBZ X22, 0x3DD5BF8
	0x03DD2328 ADRP X10, 0x34B000
	0x03DD232C LDR X8, [X22]
	0x03DD2330 LDR X23, [X0 + 0x28]
	0x03DD2334 LDR X10, [X10 + 0xED0]
	0x03DD2338 LDRH W9, [X8 + 0x12E]
	0x03DD233C LDR X1, [X10]
	0x03DD2340 CBZ X9, 0x3DD2364
	0x03DD2344 LDR X10, [X8 + 0xB0]
	0x03DD2348 ADD X10, X10, 0x8
	0x03DD234C LDUR X11, [X10 - 0x8]
	0x03DD2350 CMP X11, X1
	0x03DD2354 B.EQ 0x3DD53C4
	0x03DD2358 SUBS X9, X9, 0x1
	0x03DD235C ADD X10, X10, 0x10
	0x03DD2360 B.NE 0x3DD234C
	0x03DD2364 MOVZ W2, 0x2
	0x03DD2368 MOV X0, X22
	0x03DD236C BL 0x1C5C788
	0x03DD2370 B 0x3DD53D4
	0x03DD2374 CBZ X22, 0x3DD5BF8
	0x03DD2378 MOV X0, X22
	0x03DD237C MOV X1, X31
	0x03DD2380 BL 0x3DE89D4
	0x03DD2384 ADRP X19, 0x393000
	0x03DD2388 LDR X19, [X19 + 0x358]
	0x03DD238C MOV X22, X0
	0x03DD2390 ADD X0, X24, 0x8
	0x03DD2394 LDR X1, [X19]
	0x03DD2398 BL 0x266C920
	0x03DD239C LDR X1, [X19]
	0x03DD23A0 LDR W24, [X0 + 0x30]
	0x03DD23A4 ADD X0, X23, 0x8
	0x03DD23A8 BL 0x266C920
	0x03DD23AC CBZ X22, 0x3DD5BF8
	0x03DD23B0 ADRP X10, 0x34B000
	0x03DD23B4 LDR X8, [X22]
	0x03DD23B8 LDR W23, [X0 + 0x30]
	0x03DD23BC LDR X10, [X10 + 0xED0]
	0x03DD23C0 LDRH W9, [X8 + 0x12E]
	0x03DD23C4 LDR X1, [X10]
	0x03DD23C8 CBZ X9, 0x3DD23EC
	0x03DD23CC LDR X10, [X8 + 0xB0]
	0x03DD23D0 ADD X10, X10, 0x8
	0x03DD23D4 LDUR X11, [X10 - 0x8]
	0x03DD23D8 CMP X11, X1
	0x03DD23DC B.EQ 0x3DD53E8
	0x03DD23E0 SUBS X9, X9, 0x1
	0x03DD23E4 ADD X10, X10, 0x10
	0x03DD23E8 B.NE 0x3DD23D4
	0x03DD23EC MOVZ W2, 0x4
	0x03DD23F0 MOV X0, X22
	0x03DD23F4 BL 0x1C5C788
	0x03DD23F8 B 0x3DD53F8
	0x03DD23FC CBZ X22, 0x3DD5BF8
	0x03DD2400 MOV X0, X22
	0x03DD2404 MOV X1, X31
	0x03DD2408 BL 0x3DE89D4
	0x03DD240C ADRP X19, 0x393000
	0x03DD2410 LDR X19, [X19 + 0x358]
	0x03DD2414 MOV X22, X0
	0x03DD2418 ADD X0, X24, 0x8
	0x03DD241C LDR X1, [X19]
	0x03DD2420 BL 0x266C920
	0x03DD2424 LDR X1, [X19]
	0x03DD2428 LDR V8, [X0 + 0x34]
	0x03DD242C ADD X0, X23, 0x8
	0x03DD2430 BL 0x266C920
	0x03DD2434 CBZ X22, 0x3DD5BF8
	0x03DD2438 ADRP X10, 0x34B000
	0x03DD243C LDR X8, [X22]
	0x03DD2440 LDR V9, [X0 + 0x34]
	0x03DD2444 LDR X10, [X10 + 0xED0]
	0x03DD2448 LDRH W9, [X8 + 0x12E]
	0x03DD244C LDR X1, [X10]
	0x03DD2450 CBZ X9, 0x3DD2474
	0x03DD2454 LDR X10, [X8 + 0xB0]
	0x03DD2458 ADD X10, X10, 0x8
	0x03DD245C LDUR X11, [X10 - 0x8]
	0x03DD2460 CMP X11, X1
	0x03DD2464 B.EQ 0x3DD540C
	0x03DD2468 SUBS X9, X9, 0x1
	0x03DD246C ADD X10, X10, 0x10
	0x03DD2470 B.NE 0x3DD245C
	0x03DD2474 MOV X0, X22
	0x03DD2478 MOV W2, W31
	0x03DD247C BL 0x1C5C788
	0x03DD2480 B 0x3DD5418
	0x03DD2484 CBZ X22, 0x3DD5BF8
	0x03DD2488 MOV X0, X22
	0x03DD248C MOV X1, X31
	0x03DD2490 BL 0x3DE89D4
	0x03DD2494 ADRP X19, 0x393000
	0x03DD2498 LDR X19, [X19 + 0x358]
	0x03DD249C MOV X22, X0
	0x03DD24A0 ADD X0, X24, 0x8
	0x03DD24A4 LDR X1, [X19]
	0x03DD24A8 BL 0x266C920
	0x03DD24AC LDR X1, [X19]
	0x03DD24B0 LDR V8, [X0 + 0x38]
	0x03DD24B4 ADD X0, X23, 0x8
	0x03DD24B8 BL 0x266C920
	0x03DD24BC CBZ X22, 0x3DD5BF8
	0x03DD24C0 ADRP X10, 0x34B000
	0x03DD24C4 LDR X8, [X22]
	0x03DD24C8 LDR V9, [X0 + 0x38]
	0x03DD24CC LDR X10, [X10 + 0xED0]
	0x03DD24D0 LDRH W9, [X8 + 0x12E]
	0x03DD24D4 LDR X1, [X10]
	0x03DD24D8 CBZ X9, 0x3DD24FC
	0x03DD24DC LDR X10, [X8 + 0xB0]
	0x03DD24E0 ADD X10, X10, 0x8
	0x03DD24E4 LDUR X11, [X10 - 0x8]
	0x03DD24E8 CMP X11, X1
	0x03DD24EC B.EQ 0x3DD542C
	0x03DD24F0 SUBS X9, X9, 0x1
	0x03DD24F4 ADD X10, X10, 0x10
	0x03DD24F8 B.NE 0x3DD24E4
	0x03DD24FC MOV X0, X22
	0x03DD2500 MOV W2, W31
	0x03DD2504 BL 0x1C5C788
	0x03DD2508 B 0x3DD5438
	0x03DD250C CBZ X22, 0x3DD5BF8
	0x03DD2510 MOV X0, X22
	0x03DD2514 MOV X1, X31
	0x03DD2518 BL 0x3DE89D4
	0x03DD251C ADRP X19, 0x393000
	0x03DD2520 LDR X19, [X19 + 0x358]
	0x03DD2524 MOV X22, X0
	0x03DD2528 ADD X0, X24, 0x8
	0x03DD252C LDR X1, [X19]
	0x03DD2530 BL 0x266C920
	0x03DD2534 LDR X1, [X19]
	0x03DD2538 LDR W24, [X0 + 0x3C]
	0x03DD253C ADD X0, X23, 0x8
	0x03DD2540 BL 0x266C920
	0x03DD2544 CBZ X22, 0x3DD5BF8
	0x03DD2548 ADRP X10, 0x34B000
	0x03DD254C LDR X8, [X22]
	0x03DD2550 LDR W23, [X0 + 0x3C]
	0x03DD2554 LDR X10, [X10 + 0xED0]
	0x03DD2558 LDRH W9, [X8 + 0x12E]
	0x03DD255C LDR X1, [X10]
	0x03DD2560 CBZ X9, 0x3DD2584
	0x03DD2564 LDR X10, [X8 + 0xB0]
	0x03DD2568 ADD X10, X10, 0x8
	0x03DD256C LDUR X11, [X10 - 0x8]
	0x03DD2570 CMP X11, X1
	0x03DD2574 B.EQ 0x3DD544C
	0x03DD2578 SUBS X9, X9, 0x1
	0x03DD257C ADD X10, X10, 0x10
	0x03DD2580 B.NE 0x3DD256C
	0x03DD2584 MOVZ W2, 0x4
	0x03DD2588 MOV X0, X22
	0x03DD258C BL 0x1C5C788
	0x03DD2590 B 0x3DD545C
	0x03DD2594 CBZ X22, 0x3DD5BF8
	0x03DD2598 MOV X0, X22
	0x03DD259C MOV X1, X31
	0x03DD25A0 BL 0x3DE89D4
	0x03DD25A4 ADRP X19, 0x393000
	0x03DD25A8 LDR X19, [X19 + 0x358]
	0x03DD25AC MOV X22, X0
	0x03DD25B0 ADD X0, X24, 0x8
	0x03DD25B4 LDR X1, [X19]
	0x03DD25B8 BL 0x266C920
	0x03DD25BC LDR X1, [X19]
	0x03DD25C0 LDR X24, [X0 + 0x40]
	0x03DD25C4 ADD X0, X23, 0x8
	0x03DD25C8 BL 0x266C920
	0x03DD25CC CBZ X22, 0x3DD5BF8
	0x03DD25D0 ADRP X10, 0x34B000
	0x03DD25D4 LDR X8, [X22]
	0x03DD25D8 LDR X23, [X0 + 0x40]
	0x03DD25DC LDR X10, [X10 + 0xED0]
	0x03DD25E0 LDRH W9, [X8 + 0x12E]
	0x03DD25E4 LDR X1, [X10]
	0x03DD25E8 CBZ X9, 0x3DD260C
	0x03DD25EC LDR X10, [X8 + 0xB0]
	0x03DD25F0 ADD X10, X10, 0x8
	0x03DD25F4 LDUR X11, [X10 - 0x8]
	0x03DD25F8 CMP X11, X1
	0x03DD25FC B.EQ 0x3DD5470
	0x03DD2600 SUBS X9, X9, 0x1
	0x03DD2604 ADD X10, X10, 0x10
	0x03DD2608 B.NE 0x3DD25F4
	0x03DD260C MOVZ W2, 0x2
	0x03DD2610 MOV X0, X22
	0x03DD2614 BL 0x1C5C788
	0x03DD2618 B 0x3DD5480
	0x03DD261C CBZ X22, 0x3DD5BF8
	0x03DD2620 MOV X0, X22
	0x03DD2624 MOV X1, X31
	0x03DD2628 BL 0x3DE89D4
	0x03DD262C ADRP X19, 0x393000
	0x03DD2630 LDR X19, [X19 + 0x358]
	0x03DD2634 MOV X22, X0
	0x03DD2638 ADD X0, X24, 0x8
	0x03DD263C LDR X1, [X19]
	0x03DD2640 BL 0x266C920
	0x03DD2644 LDR X1, [X19]
	0x03DD2648 LDR W24, [X0 + 0x48]
	0x03DD264C ADD X0, X23, 0x8
	0x03DD2650 BL 0x266C920
	0x03DD2654 CBZ X22, 0x3DD5BF8
	0x03DD2658 ADRP X10, 0x34B000
	0x03DD265C LDR X8, [X22]
	0x03DD2660 LDR W23, [X0 + 0x48]
	0x03DD2664 LDR X10, [X10 + 0xED0]
	0x03DD2668 LDRH W9, [X8 + 0x12E]
	0x03DD266C LDR X1, [X10]
	0x03DD2670 CBZ X9, 0x3DD2694
	0x03DD2674 LDR X10, [X8 + 0xB0]
	0x03DD2678 ADD X10, X10, 0x8
	0x03DD267C LDUR X11, [X10 - 0x8]
	0x03DD2680 CMP X11, X1
	0x03DD2684 B.EQ 0x3DD5494
	0x03DD2688 SUBS X9, X9, 0x1
	0x03DD268C ADD X10, X10, 0x10
	0x03DD2690 B.NE 0x3DD267C
	0x03DD2694 MOVZ W2, 0x4
	0x03DD2698 MOV X0, X22
	0x03DD269C BL 0x1C5C788
	0x03DD26A0 B 0x3DD54A4
	0x03DD26A4 CBZ X22, 0x3DD5BF8
	0x03DD26A8 MOV X0, X22
	0x03DD26AC MOV X1, X31
	0x03DD26B0 BL 0x3DE89D4
	0x03DD26B4 ADRP X19, 0x393000
	0x03DD26B8 LDR X19, [X19 + 0x358]
	0x03DD26BC MOV X22, X0
	0x03DD26C0 ADD X0, X24, 0x8
	0x03DD26C4 LDR X1, [X19]
	0x03DD26C8 BL 0x266C920
	0x03DD26CC LDR X1, [X19]
	0x03DD26D0 LDUR X24, [X0 + 0x4C]
	0x03DD26D4 ADD X0, X23, 0x8
	0x03DD26D8 BL 0x266C920
	0x03DD26DC CBZ X22, 0x3DD5BF8
	0x03DD26E0 ADRP X10, 0x34B000
	0x03DD26E4 LDR X8, [X22]
	0x03DD26E8 LDUR X23, [X0 + 0x4C]
	0x03DD26EC LDR X10, [X10 + 0xED0]
	0x03DD26F0 LDRH W9, [X8 + 0x12E]
	0x03DD26F4 LDR X1, [X10]
	0x03DD26F8 CBZ X9, 0x3DD271C
	0x03DD26FC LDR X10, [X8 + 0xB0]
	0x03DD2700 ADD X10, X10, 0x8
	0x03DD2704 LDUR X11, [X10 - 0x8]
	0x03DD2708 CMP X11, X1
	0x03DD270C B.EQ 0x3DD54B8
	0x03DD2710 SUBS X9, X9, 0x1
	0x03DD2714 ADD X10, X10, 0x10
	0x03DD2718 B.NE 0x3DD2704
	0x03DD271C MOVZ W2, 0x2
	0x03DD2720 MOV X0, X22
	0x03DD2724 BL 0x1C5C788
	0x03DD2728 B 0x3DD54C8
	0x03DD272C CBZ X22, 0x3DD5BF8
	0x03DD2730 MOV X0, X22
	0x03DD2734 MOV X1, X31
	0x03DD2738 BL 0x3DE89D4
	0x03DD273C ADRP X19, 0x393000
	0x03DD2740 LDR X19, [X19 + 0x358]
	0x03DD2744 MOV X22, X0
	0x03DD2748 ADD X0, X24, 0x8
	0x03DD274C LDR X1, [X19]
	0x03DD2750 BL 0x266C920
	0x03DD2754 LDR X1, [X19]
	0x03DD2758 LDUR X24, [X0 + 0x54]
	0x03DD275C ADD X0, X23, 0x8
	0x03DD2760 BL 0x266C920
	0x03DD2764 CBZ X22, 0x3DD5BF8
	0x03DD2768 ADRP X10, 0x34B000
	0x03DD276C LDR X8, [X22]
	0x03DD2770 LDUR X23, [X0 + 0x54]
	0x03DD2774 LDR X10, [X10 + 0xED0]
	0x03DD2778 LDRH W9, [X8 + 0x12E]
	0x03DD277C LDR X1, [X10]
	0x03DD2780 CBZ X9, 0x3DD27A4
	0x03DD2784 LDR X10, [X8 + 0xB0]
	0x03DD2788 ADD X10, X10, 0x8
	0x03DD278C LDUR X11, [X10 - 0x8]
	0x03DD2790 CMP X11, X1
	0x03DD2794 B.EQ 0x3DD54DC
	0x03DD2798 SUBS X9, X9, 0x1
	0x03DD279C ADD X10, X10, 0x10
	0x03DD27A0 B.NE 0x3DD278C
	0x03DD27A4 MOVZ W2, 0x2
	0x03DD27A8 MOV X0, X22
	0x03DD27AC BL 0x1C5C788
	0x03DD27B0 B 0x3DD54EC
	0x03DD27B4 CBZ X22, 0x3DD5BF8
	0x03DD27B8 MOV X0, X22
	0x03DD27BC MOV X1, X31
	0x03DD27C0 BL 0x3DE89D4
	0x03DD27C4 ADRP X19, 0x393000
	0x03DD27C8 LDR X19, [X19 + 0x358]
	0x03DD27CC MOV X22, X0
	0x03DD27D0 ADD X0, X24, 0x8
	0x03DD27D4 LDR X1, [X19]
	0x03DD27D8 BL 0x266C920
	0x03DD27DC LDR X1, [X19]
	0x03DD27E0 LDUR X24, [X0 + 0x5C]
	0x03DD27E4 ADD X0, X23, 0x8
	0x03DD27E8 BL 0x266C920
	0x03DD27EC CBZ X22, 0x3DD5BF8
	0x03DD27F0 ADRP X10, 0x34B000
	0x03DD27F4 LDR X8, [X22]
	0x03DD27F8 LDUR X23, [X0 + 0x5C]
	0x03DD27FC LDR X10, [X10 + 0xED0]
	0x03DD2800 LDRH W9, [X8 + 0x12E]
	0x03DD2804 LDR X1, [X10]
	0x03DD2808 CBZ X9, 0x3DD282C
	0x03DD280C LDR X10, [X8 + 0xB0]
	0x03DD2810 ADD X10, X10, 0x8
	0x03DD2814 LDUR X11, [X10 - 0x8]
	0x03DD2818 CMP X11, X1
	0x03DD281C B.EQ 0x3DD5500
	0x03DD2820 SUBS X9, X9, 0x1
	0x03DD2824 ADD X10, X10, 0x10
	0x03DD2828 B.NE 0x3DD2814
	0x03DD282C MOVZ W2, 0x2
	0x03DD2830 MOV X0, X22
	0x03DD2834 BL 0x1C5C788
	0x03DD2838 B 0x3DD5510
	0x03DD283C CBZ X22, 0x3DD5BF8
	0x03DD2840 MOV X0, X22
	0x03DD2844 MOV X1, X31
	0x03DD2848 BL 0x3DE89D4
	0x03DD284C ADRP X19, 0x393000
	0x03DD2850 LDR X19, [X19 + 0x358]
	0x03DD2854 MOV X22, X0
	0x03DD2858 ADD X0, X24, 0x8
	0x03DD285C LDR X1, [X19]
	0x03DD2860 BL 0x266C920
	0x03DD2864 LDR X1, [X19]
	0x03DD2868 LDUR X24, [X0 + 0x64]
	0x03DD286C ADD X0, X23, 0x8
	0x03DD2870 BL 0x266C920
	0x03DD2874 CBZ X22, 0x3DD5BF8
	0x03DD2878 ADRP X10, 0x34B000
	0x03DD287C LDR X8, [X22]
	0x03DD2880 LDUR X23, [X0 + 0x64]
	0x03DD2884 LDR X10, [X10 + 0xED0]
	0x03DD2888 LDRH W9, [X8 + 0x12E]
	0x03DD288C LDR X1, [X10]
	0x03DD2890 CBZ X9, 0x3DD28B4
	0x03DD2894 LDR X10, [X8 + 0xB0]
	0x03DD2898 ADD X10, X10, 0x8
	0x03DD289C LDUR X11, [X10 - 0x8]
	0x03DD28A0 CMP X11, X1
	0x03DD28A4 B.EQ 0x3DD5524
	0x03DD28A8 SUBS X9, X9, 0x1
	0x03DD28AC ADD X10, X10, 0x10
	0x03DD28B0 B.NE 0x3DD289C
	0x03DD28B4 MOVZ W2, 0x2
	0x03DD28B8 MOV X0, X22
	0x03DD28BC BL 0x1C5C788
	0x03DD28C0 B 0x3DD5534
	0x03DD28C4 CBZ X22, 0x3DD5BF8
	0x03DD28C8 MOV X0, X22
	0x03DD28CC MOV X1, X31
	0x03DD28D0 BL 0x3DE89D4
	0x03DD28D4 ADRP X19, 0x393000
	0x03DD28D8 LDR X19, [X19 + 0x358]
	0x03DD28DC MOV X22, X0
	0x03DD28E0 ADD X0, X24, 0x8
	0x03DD28E4 LDR X1, [X19]
	0x03DD28E8 BL 0x266C920
	0x03DD28EC LDR X1, [X19]
	0x03DD28F0 LDUR X24, [X0 + 0x6C]
	0x03DD28F4 ADD X0, X23, 0x8
	0x03DD28F8 BL 0x266C920
	0x03DD28FC CBZ X22, 0x3DD5BF8
	0x03DD2900 ADRP X10, 0x34B000
	0x03DD2904 LDR X8, [X22]
	0x03DD2908 LDUR X23, [X0 + 0x6C]
	0x03DD290C LDR X10, [X10 + 0xED0]
	0x03DD2910 LDRH W9, [X8 + 0x12E]
	0x03DD2914 LDR X1, [X10]
	0x03DD2918 CBZ X9, 0x3DD293C
	0x03DD291C LDR X10, [X8 + 0xB0]
	0x03DD2920 ADD X10, X10, 0x8
	0x03DD2924 LDUR X11, [X10 - 0x8]
	0x03DD2928 CMP X11, X1
	0x03DD292C B.EQ 0x3DD5548
	0x03DD2930 SUBS X9, X9, 0x1
	0x03DD2934 ADD X10, X10, 0x10
	0x03DD2938 B.NE 0x3DD2924
	0x03DD293C MOVZ W2, 0x2
	0x03DD2940 MOV X0, X22
	0x03DD2944 BL 0x1C5C788
	0x03DD2948 B 0x3DD5558
	0x03DD294C CBZ X22, 0x3DD5BF8
	0x03DD2950 MOV X0, X22
	0x03DD2954 MOV X1, X31
	0x03DD2958 BL 0x3DE89D4
	0x03DD295C ADRP X19, 0x393000
	0x03DD2960 LDR X19, [X19 + 0x358]
	0x03DD2964 MOV X22, X0
	0x03DD2968 ADD X0, X24, 0x8
	0x03DD296C LDR X1, [X19]
	0x03DD2970 BL 0x266C920
	0x03DD2974 LDR X1, [X19]
	0x03DD2978 LDUR X24, [X0 + 0x74]
	0x03DD297C ADD X0, X23, 0x8
	0x03DD2980 BL 0x266C920
	0x03DD2984 CBZ X22, 0x3DD5BF8
	0x03DD2988 ADRP X10, 0x34B000
	0x03DD298C LDR X8, [X22]
	0x03DD2990 LDUR X23, [X0 + 0x74]
	0x03DD2994 LDR X10, [X10 + 0xED0]
	0x03DD2998 LDRH W9, [X8 + 0x12E]
	0x03DD299C LDR X1, [X10]
	0x03DD29A0 CBZ X9, 0x3DD29C4
	0x03DD29A4 LDR X10, [X8 + 0xB0]
	0x03DD29A8 ADD X10, X10, 0x8
	0x03DD29AC LDUR X11, [X10 - 0x8]
	0x03DD29B0 CMP X11, X1
	0x03DD29B4 B.EQ 0x3DD556C
	0x03DD29B8 SUBS X9, X9, 0x1
	0x03DD29BC ADD X10, X10, 0x10
	0x03DD29C0 B.NE 0x3DD29AC
	0x03DD29C4 MOVZ W2, 0x2
	0x03DD29C8 MOV X0, X22
	0x03DD29CC BL 0x1C5C788
	0x03DD29D0 B 0x3DD557C
	0x03DD29D4 CBZ X22, 0x3DD5BF8
	0x03DD29D8 MOV X0, X22
	0x03DD29DC MOV X1, X31
	0x03DD29E0 BL 0x3DE89D4
	0x03DD29E4 ADRP X19, 0x393000
	0x03DD29E8 LDR X19, [X19 + 0x358]
	0x03DD29EC MOV X22, X0
	0x03DD29F0 ADD X0, X24, 0x8
	0x03DD29F4 LDR X1, [X19]
	0x03DD29F8 BL 0x266C920
	0x03DD29FC LDR X1, [X19]
	0x03DD2A00 LDUR X24, [X0 + 0x7C]
	0x03DD2A04 ADD X0, X23, 0x8
	0x03DD2A08 BL 0x266C920
	0x03DD2A0C CBZ X22, 0x3DD5BF8
	0x03DD2A10 ADRP X10, 0x34B000
	0x03DD2A14 LDR X8, [X22]
	0x03DD2A18 LDUR X23, [X0 + 0x7C]
	0x03DD2A1C LDR X10, [X10 + 0xED0]
	0x03DD2A20 LDRH W9, [X8 + 0x12E]
	0x03DD2A24 LDR X1, [X10]
	0x03DD2A28 CBZ X9, 0x3DD2A4C
	0x03DD2A2C LDR X10, [X8 + 0xB0]
	0x03DD2A30 ADD X10, X10, 0x8
	0x03DD2A34 LDUR X11, [X10 - 0x8]
	0x03DD2A38 CMP X11, X1
	0x03DD2A3C B.EQ 0x3DD5590
	0x03DD2A40 SUBS X9, X9, 0x1
	0x03DD2A44 ADD X10, X10, 0x10
	0x03DD2A48 B.NE 0x3DD2A34
	0x03DD2A4C MOVZ W2, 0x2
	0x03DD2A50 MOV X0, X22
	0x03DD2A54 BL 0x1C5C788
	0x03DD2A58 B 0x3DD55A0
	0x03DD2A5C CBZ X22, 0x3DD5BF8
	0x03DD2A60 MOV X0, X22
	0x03DD2A64 MOV X1, X31
	0x03DD2A68 BL 0x3DE89D4
	0x03DD2A6C ADRP X19, 0x393000
	0x03DD2A70 LDR X19, [X19 + 0x358]
	0x03DD2A74 MOV X22, X0
	0x03DD2A78 ADD X0, X24, 0x8
	0x03DD2A7C LDR X1, [X19]
	0x03DD2A80 BL 0x266C920
	0x03DD2A84 LDR X1, [X19]
	0x03DD2A88 LDUR X24, [X0 + 0x84]
	0x03DD2A8C ADD X0, X23, 0x8
	0x03DD2A90 BL 0x266C920
	0x03DD2A94 CBZ X22, 0x3DD5BF8
	0x03DD2A98 ADRP X10, 0x34B000
	0x03DD2A9C LDR X8, [X22]
	0x03DD2AA0 LDUR X23, [X0 + 0x84]
	0x03DD2AA4 LDR X10, [X10 + 0xED0]
	0x03DD2AA8 LDRH W9, [X8 + 0x12E]
	0x03DD2AAC LDR X1, [X10]
	0x03DD2AB0 CBZ X9, 0x3DD2AD4
	0x03DD2AB4 LDR X10, [X8 + 0xB0]
	0x03DD2AB8 ADD X10, X10, 0x8
	0x03DD2ABC LDUR X11, [X10 - 0x8]
	0x03DD2AC0 CMP X11, X1
	0x03DD2AC4 B.EQ 0x3DD55B4
	0x03DD2AC8 SUBS X9, X9, 0x1
	0x03DD2ACC ADD X10, X10, 0x10
	0x03DD2AD0 B.NE 0x3DD2ABC
	0x03DD2AD4 MOVZ W2, 0x2
	0x03DD2AD8 MOV X0, X22
	0x03DD2ADC BL 0x1C5C788
	0x03DD2AE0 B 0x3DD55C4
	0x03DD2AE4 CBZ X22, 0x3DD5BF8
	0x03DD2AE8 MOV X0, X22
	0x03DD2AEC MOV X1, X31
	0x03DD2AF0 BL 0x3DE89D4
	0x03DD2AF4 ADRP X19, 0x393000
	0x03DD2AF8 LDR X19, [X19 + 0x358]
	0x03DD2AFC MOV X22, X0
	0x03DD2B00 ADD X0, X24, 0x8
	0x03DD2B04 LDR X1, [X19]
	0x03DD2B08 BL 0x266C920
	0x03DD2B0C LDR X1, [X19]
	0x03DD2B10 LDUR X24, [X0 + 0x8C]
	0x03DD2B14 ADD X0, X23, 0x8
	0x03DD2B18 BL 0x266C920
	0x03DD2B1C CBZ X22, 0x3DD5BF8
	0x03DD2B20 ADRP X10, 0x34B000
	0x03DD2B24 LDR X8, [X22]
	0x03DD2B28 LDUR X23, [X0 + 0x8C]
	0x03DD2B2C LDR X10, [X10 + 0xED0]
	0x03DD2B30 LDRH W9, [X8 + 0x12E]
	0x03DD2B34 LDR X1, [X10]
	0x03DD2B38 CBZ X9, 0x3DD2B5C
	0x03DD2B3C LDR X10, [X8 + 0xB0]
	0x03DD2B40 ADD X10, X10, 0x8
	0x03DD2B44 LDUR X11, [X10 - 0x8]
	0x03DD2B48 CMP X11, X1
	0x03DD2B4C B.EQ 0x3DD55DC
	0x03DD2B50 SUBS X9, X9, 0x1
	0x03DD2B54 ADD X10, X10, 0x10
	0x03DD2B58 B.NE 0x3DD2B44
	0x03DD2B5C MOVZ W2, 0x2
	0x03DD2B60 MOV X0, X22
	0x03DD2B64 BL 0x1C5C788
	0x03DD2B68 B 0x3DD55EC
	0x03DD2B6C CBZ X22, 0x3DD5BF8
	0x03DD2B70 MOV X0, X22
	0x03DD2B74 MOV X1, X31
	0x03DD2B78 BL 0x3DE89D4
	0x03DD2B7C ADRP X19, 0x393000
	0x03DD2B80 LDR X19, [X19 + 0x358]
	0x03DD2B84 MOV X22, X0
	0x03DD2B88 ADD X0, X24, 0x8
	0x03DD2B8C LDR X1, [X19]
	0x03DD2B90 BL 0x266C920
	0x03DD2B94 LDR X1, [X19]
	0x03DD2B98 LDUR X24, [X0 + 0x94]
	0x03DD2B9C ADD X0, X23, 0x8
	0x03DD2BA0 BL 0x266C920
	0x03DD2BA4 CBZ X22, 0x3DD5BF8
	0x03DD2BA8 ADRP X10, 0x34B000
	0x03DD2BAC LDR X8, [X22]
	0x03DD2BB0 LDUR X23, [X0 + 0x94]
	0x03DD2BB4 LDR X10, [X10 + 0xED0]
	0x03DD2BB8 LDRH W9, [X8 + 0x12E]
	0x03DD2BBC LDR X1, [X10]
	0x03DD2BC0 CBZ X9, 0x3DD2BE4
	0x03DD2BC4 LDR X10, [X8 + 0xB0]
	0x03DD2BC8 ADD X10, X10, 0x8
	0x03DD2BCC LDUR X11, [X10 - 0x8]
	0x03DD2BD0 CMP X11, X1
	0x03DD2BD4 B.EQ 0x3DD5600
	0x03DD2BD8 SUBS X9, X9, 0x1
	0x03DD2BDC ADD X10, X10, 0x10
	0x03DD2BE0 B.NE 0x3DD2BCC
	0x03DD2BE4 MOVZ W2, 0x2
	0x03DD2BE8 MOV X0, X22
	0x03DD2BEC BL 0x1C5C788
	0x03DD2BF0 B 0x3DD5610
	0x03DD2BF4 CBZ X22, 0x3DD5BF8
	0x03DD2BF8 MOV X0, X22
	0x03DD2BFC MOV X1, X31
	0x03DD2C00 BL 0x3DE89D4
	0x03DD2C04 ADRP X19, 0x393000
	0x03DD2C08 LDR X19, [X19 + 0x358]
	0x03DD2C0C MOV X22, X0
	0x03DD2C10 ADD X0, X24, 0x8
	0x03DD2C14 LDR X1, [X19]
	0x03DD2C18 BL 0x266C920
	0x03DD2C1C LDR X1, [X19]
	0x03DD2C20 LDUR X24, [X0 + 0x9C]
	0x03DD2C24 ADD X0, X23, 0x8
	0x03DD2C28 BL 0x266C920
	0x03DD2C2C CBZ X22, 0x3DD5BF8
	0x03DD2C30 ADRP X10, 0x34B000
	0x03DD2C34 LDR X8, [X22]
	0x03DD2C38 LDUR X23, [X0 + 0x9C]
	0x03DD2C3C LDR X10, [X10 + 0xED0]
	0x03DD2C40 LDRH W9, [X8 + 0x12E]
	0x03DD2C44 LDR X1, [X10]
	0x03DD2C48 CBZ X9, 0x3DD2C6C
	0x03DD2C4C LDR X10, [X8 + 0xB0]
	0x03DD2C50 ADD X10, X10, 0x8
	0x03DD2C54 LDUR X11, [X10 - 0x8]
	0x03DD2C58 CMP X11, X1
	0x03DD2C5C B.EQ 0x3DD5624
	0x03DD2C60 SUBS X9, X9, 0x1
	0x03DD2C64 ADD X10, X10, 0x10
	0x03DD2C68 B.NE 0x3DD2C54
	0x03DD2C6C MOVZ W2, 0x2
	0x03DD2C70 MOV X0, X22
	0x03DD2C74 BL 0x1C5C788
	0x03DD2C78 B 0x3DD5634
	0x03DD2C7C CBZ X22, 0x3DD5BF8
	0x03DD2C80 MOV X0, X22
	0x03DD2C84 MOV X1, X31
	0x03DD2C88 BL 0x3DE89D4
	0x03DD2C8C ADRP X19, 0x393000
	0x03DD2C90 LDR X19, [X19 + 0x358]
	0x03DD2C94 MOV X22, X0
	0x03DD2C98 ADD X0, X24, 0x8
	0x03DD2C9C LDR X1, [X19]
	0x03DD2CA0 BL 0x266C920
	0x03DD2CA4 LDR X1, [X19]
	0x03DD2CA8 LDUR X24, [X0 + 0xA4]
	0x03DD2CAC ADD X0, X23, 0x8
	0x03DD2CB0 BL 0x266C920
	0x03DD2CB4 CBZ X22, 0x3DD5BF8
	0x03DD2CB8 ADRP X10, 0x34B000
	0x03DD2CBC LDR X8, [X22]
	0x03DD2CC0 LDUR X23, [X0 + 0xA4]
	0x03DD2CC4 LDR X10, [X10 + 0xED0]
	0x03DD2CC8 LDRH W9, [X8 + 0x12E]
	0x03DD2CCC LDR X1, [X10]
	0x03DD2CD0 CBZ X9, 0x3DD2CF4
	0x03DD2CD4 LDR X10, [X8 + 0xB0]
	0x03DD2CD8 ADD X10, X10, 0x8
	0x03DD2CDC LDUR X11, [X10 - 0x8]
	0x03DD2CE0 CMP X11, X1
	0x03DD2CE4 B.EQ 0x3DD5648
	0x03DD2CE8 SUBS X9, X9, 0x1
	0x03DD2CEC ADD X10, X10, 0x10
	0x03DD2CF0 B.NE 0x3DD2CDC
	0x03DD2CF4 MOVZ W2, 0x2
	0x03DD2CF8 MOV X0, X22
	0x03DD2CFC BL 0x1C5C788
	0x03DD2D00 B 0x3DD5658
	0x03DD2D04 CBZ X22, 0x3DD5BF8
	0x03DD2D08 MOV X0, X22
	0x03DD2D0C MOV X1, X31
	0x03DD2D10 BL 0x3DE89D4
	0x03DD2D14 ADRP X19, 0x393000
	0x03DD2D18 LDR X19, [X19 + 0x358]
	0x03DD2D1C MOV X22, X0
	0x03DD2D20 ADD X0, X24, 0x8
	0x03DD2D24 LDR X1, [X19]
	0x03DD2D28 BL 0x266C920
	0x03DD2D2C LDR X1, [X19]
	0x03DD2D30 LDUR X24, [X0 + 0xAC]
	0x03DD2D34 ADD X0, X23, 0x8
	0x03DD2D38 BL 0x266C920
	0x03DD2D3C CBZ X22, 0x3DD5BF8
	0x03DD2D40 ADRP X10, 0x34B000
	0x03DD2D44 LDR X8, [X22]
	0x03DD2D48 LDUR X23, [X0 + 0xAC]
	0x03DD2D4C LDR X10, [X10 + 0xED0]
	0x03DD2D50 LDRH W9, [X8 + 0x12E]
	0x03DD2D54 LDR X1, [X10]
	0x03DD2D58 CBZ X9, 0x3DD2D7C
	0x03DD2D5C LDR X10, [X8 + 0xB0]
	0x03DD2D60 ADD X10, X10, 0x8
	0x03DD2D64 LDUR X11, [X10 - 0x8]
	0x03DD2D68 CMP X11, X1
	0x03DD2D6C B.EQ 0x3DD566C
	0x03DD2D70 SUBS X9, X9, 0x1
	0x03DD2D74 ADD X10, X10, 0x10
	0x03DD2D78 B.NE 0x3DD2D64
	0x03DD2D7C MOVZ W2, 0x2
	0x03DD2D80 MOV X0, X22
	0x03DD2D84 BL 0x1C5C788
	0x03DD2D88 B 0x3DD567C
	0x03DD2D8C CBZ X22, 0x3DD5BF8
	0x03DD2D90 MOV X0, X22
	0x03DD2D94 MOV X1, X31
	0x03DD2D98 BL 0x3DE89D4
	0x03DD2D9C ADRP X19, 0x393000
	0x03DD2DA0 LDR X19, [X19 + 0x358]
	0x03DD2DA4 MOV X22, X0
	0x03DD2DA8 ADD X0, X24, 0x8
	0x03DD2DAC LDR X1, [X19]
	0x03DD2DB0 BL 0x266C920
	0x03DD2DB4 LDR X1, [X19]
	0x03DD2DB8 LDR W24, [X0 + 0xB4]
	0x03DD2DBC ADD X0, X23, 0x8
	0x03DD2DC0 BL 0x266C920
	0x03DD2DC4 CBZ X22, 0x3DD5BF8
	0x03DD2DC8 ADRP X10, 0x34B000
	0x03DD2DCC LDR X8, [X22]
	0x03DD2DD0 LDR W23, [X0 + 0xB4]
	0x03DD2DD4 LDR X10, [X10 + 0xED0]
	0x03DD2DD8 LDRH W9, [X8 + 0x12E]
	0x03DD2DDC LDR X1, [X10]
	0x03DD2DE0 CBZ X9, 0x3DD2E04
	0x03DD2DE4 LDR X10, [X8 + 0xB0]
	0x03DD2DE8 ADD X10, X10, 0x8
	0x03DD2DEC LDUR X11, [X10 - 0x8]
	0x03DD2DF0 CMP X11, X1
	0x03DD2DF4 B.EQ 0x3DD5690
	0x03DD2DF8 SUBS X9, X9, 0x1
	0x03DD2DFC ADD X10, X10, 0x10
	0x03DD2E00 B.NE 0x3DD2DEC
	0x03DD2E04 MOVZ W2, 0x4
	0x03DD2E08 MOV X0, X22
	0x03DD2E0C BL 0x1C5C788
	0x03DD2E10 B 0x3DD56A0
	0x03DD2E14 CBZ X22, 0x3DD5BF8
	0x03DD2E18 MOV X0, X22
	0x03DD2E1C MOV X1, X31
	0x03DD2E20 BL 0x3DE89D4
	0x03DD2E24 ADRP X19, 0x393000
	0x03DD2E28 LDR X19, [X19 + 0x358]
	0x03DD2E2C MOV X22, X0
	0x03DD2E30 ADD X0, X24, 0x8
	0x03DD2E34 LDR X1, [X19]
	0x03DD2E38 BL 0x266C920
	0x03DD2E3C LDR X1, [X19]
	0x03DD2E40 LDR X24, [X0 + 0xB8]
	0x03DD2E44 ADD X0, X23, 0x8
	0x03DD2E48 BL 0x266C920
	0x03DD2E4C CBZ X22, 0x3DD5BF8
	0x03DD2E50 ADRP X10, 0x34B000
	0x03DD2E54 LDR X8, [X22]
	0x03DD2E58 LDR X23, [X0 + 0xB8]
	0x03DD2E5C LDR X10, [X10 + 0xED0]
	0x03DD2E60 LDRH W9, [X8 + 0x12E]
	0x03DD2E64 LDR X1, [X10]
	0x03DD2E68 CBZ X9, 0x3DD2E8C
	0x03DD2E6C LDR X10, [X8 + 0xB0]
	0x03DD2E70 ADD X10, X10, 0x8
	0x03DD2E74 LDUR X11, [X10 - 0x8]
	0x03DD2E78 CMP X11, X1
	0x03DD2E7C B.EQ 0x3DD56B4
	0x03DD2E80 SUBS X9, X9, 0x1
	0x03DD2E84 ADD X10, X10, 0x10
	0x03DD2E88 B.NE 0x3DD2E74
	0x03DD2E8C MOVZ W2, 0x2
	0x03DD2E90 MOV X0, X22
	0x03DD2E94 BL 0x1C5C788
	0x03DD2E98 B 0x3DD56C4
	0x03DD2E9C CBZ X22, 0x3DD5BF8
	0x03DD2EA0 MOV X0, X22
	0x03DD2EA4 MOV X1, X31
	0x03DD2EA8 BL 0x3DE89D4
	0x03DD2EAC ADRP X19, 0x393000
	0x03DD2EB0 LDR X19, [X19 + 0x358]
	0x03DD2EB4 MOV X22, X0
	0x03DD2EB8 ADD X0, X24, 0x8
	0x03DD2EBC LDR X1, [X19]
	0x03DD2EC0 BL 0x266C920
	0x03DD2EC4 LDR X1, [X19]
	0x03DD2EC8 LDR X24, [X0 + 0xC0]
	0x03DD2ECC ADD X0, X23, 0x8
	0x03DD2ED0 BL 0x266C920
	0x03DD2ED4 CBZ X22, 0x3DD5BF8
	0x03DD2ED8 ADRP X10, 0x34B000
	0x03DD2EDC LDR X8, [X22]
	0x03DD2EE0 LDR X23, [X0 + 0xC0]
	0x03DD2EE4 LDR X10, [X10 + 0xED0]
	0x03DD2EE8 LDRH W9, [X8 + 0x12E]
	0x03DD2EEC LDR X1, [X10]
	0x03DD2EF0 CBZ X9, 0x3DD2F14
	0x03DD2EF4 LDR X10, [X8 + 0xB0]
	0x03DD2EF8 ADD X10, X10, 0x8
	0x03DD2EFC LDUR X11, [X10 - 0x8]
	0x03DD2F00 CMP X11, X1
	0x03DD2F04 B.EQ 0x3DD56D8
	0x03DD2F08 SUBS X9, X9, 0x1
	0x03DD2F0C ADD X10, X10, 0x10
	0x03DD2F10 B.NE 0x3DD2EFC
	0x03DD2F14 MOVZ W2, 0x2
	0x03DD2F18 MOV X0, X22
	0x03DD2F1C BL 0x1C5C788
	0x03DD2F20 B 0x3DD56E8
	0x03DD2F24 CBZ X22, 0x3DD5BF8
	0x03DD2F28 MOV X0, X22
	0x03DD2F2C MOV X1, X31
	0x03DD2F30 BL 0x3DE89D4
	0x03DD2F34 ADRP X19, 0x393000
	0x03DD2F38 LDR X19, [X19 + 0x358]
	0x03DD2F3C MOV X22, X0
	0x03DD2F40 ADD X0, X24, 0x8
	0x03DD2F44 LDR X1, [X19]
	0x03DD2F48 BL 0x266C920
	0x03DD2F4C LDR X1, [X19]
	0x03DD2F50 LDR X24, [X0 + 0xC8]
	0x03DD2F54 ADD X0, X23, 0x8
	0x03DD2F58 BL 0x266C920
	0x03DD2F5C CBZ X22, 0x3DD5BF8
	0x03DD2F60 ADRP X10, 0x34B000
	0x03DD2F64 LDR X8, [X22]
	0x03DD2F68 LDR X23, [X0 + 0xC8]
	0x03DD2F6C LDR X10, [X10 + 0xED0]
	0x03DD2F70 LDRH W9, [X8 + 0x12E]
	0x03DD2F74 LDR X1, [X10]
	0x03DD2F78 CBZ X9, 0x3DD2F9C
	0x03DD2F7C LDR X10, [X8 + 0xB0]
	0x03DD2F80 ADD X10, X10, 0x8
	0x03DD2F84 LDUR X11, [X10 - 0x8]
	0x03DD2F88 CMP X11, X1
	0x03DD2F8C B.EQ 0x3DD56FC
	0x03DD2F90 SUBS X9, X9, 0x1
	0x03DD2F94 ADD X10, X10, 0x10
	0x03DD2F98 B.NE 0x3DD2F84
	0x03DD2F9C MOVZ W2, 0x2
	0x03DD2FA0 MOV X0, X22
	0x03DD2FA4 BL 0x1C5C788
	0x03DD2FA8 B 0x3DD570C
	0x03DD2FAC CBZ X22, 0x3DD5BF8
	0x03DD2FB0 MOV X0, X22
	0x03DD2FB4 MOV X1, X31
	0x03DD2FB8 BL 0x3DE89D4
	0x03DD2FBC ADRP X19, 0x393000
	0x03DD2FC0 LDR X19, [X19 + 0x368]
	0x03DD2FC4 MOV X22, X0
	0x03DD2FC8 MOV X0, X24
	0x03DD2FCC LDR X1, [X19]
	0x03DD2FD0 BL 0x266C4A0
	0x03DD2FD4 LDR X1, [X19]
	0x03DD2FD8 LDR X24, [X0 + 0x10]
	0x03DD2FDC MOV X0, X23
	0x03DD2FE0 BL 0x266C4A0
	0x03DD2FE4 CBZ X22, 0x3DD5BF8
	0x03DD2FE8 ADRP X10, 0x34B000
	0x03DD2FEC LDR X8, [X22]
	0x03DD2FF0 LDR X23, [X0 + 0x10]
	0x03DD2FF4 LDR X10, [X10 + 0xED0]
	0x03DD2FF8 LDRH W9, [X8 + 0x12E]
	0x03DD2FFC LDR X1, [X10]
	0x03DD3000 CBZ X9, 0x3DD3024
	0x03DD3004 LDR X10, [X8 + 0xB0]
	0x03DD3008 ADD X10, X10, 0x8
	0x03DD300C LDUR X11, [X10 - 0x8]
	0x03DD3010 CMP X11, X1
	0x03DD3014 B.EQ 0x3DD5720
	0x03DD3018 SUBS X9, X9, 0x1
	0x03DD301C ADD X10, X10, 0x10
	0x03DD3020 B.NE 0x3DD300C
	0x03DD3024 MOVZ W2, 0x2
	0x03DD3028 MOV X0, X22
	0x03DD302C BL 0x1C5C788
	0x03DD3030 B 0x3DD5730
	0x03DD3034 CBZ X22, 0x3DD5BF8
	0x03DD3038 MOV X0, X22
	0x03DD303C MOV X1, X31
	0x03DD3040 BL 0x3DE89D4
	0x03DD3044 ADRP X19, 0x392000
	0x03DD3048 LDR X19, [X19 + 0x368]
	0x03DD304C MOV X22, X0
	0x03DD3050 MOV X0, X24
	0x03DD3054 LDR X1, [X19]
	0x03DD3058 BL 0x266C4A0
	0x03DD305C LDR X1, [X19]
	0x03DD3060 LDR X24, [X0 + 0x18]
	0x03DD3064 MOV X0, X23
	0x03DD3068 BL 0x266C4A0
	0x03DD306C CBZ X22, 0x3DD5BF8
	0x03DD3070 ADRP X10, 0x34A000
	0x03DD3074 LDR X8, [X22]
	0x03DD3078 LDR X23, [X0 + 0x18]
	0x03DD307C LDR X10, [X10 + 0xED0]
	0x03DD3080 LDRH W9, [X8 + 0x12E]
	0x03DD3084 LDR X1, [X10]
	0x03DD3088 CBZ X9, 0x3DD30AC
	0x03DD308C LDR X10, [X8 + 0xB0]
	0x03DD3090 ADD X10, X10, 0x8
	0x03DD3094 LDUR X11, [X10 - 0x8]
	0x03DD3098 CMP X11, X1
	0x03DD309C B.EQ 0x3DD5744
	0x03DD30A0 SUBS X9, X9, 0x1
	0x03DD30A4 ADD X10, X10, 0x10
	0x03DD30A8 B.NE 0x3DD3094
	0x03DD30AC MOVZ W2, 0x2
	0x03DD30B0 MOV X0, X22
	0x03DD30B4 BL 0x1C5C788
	0x03DD30B8 B 0x3DD5754
	0x03DD30BC CBZ X22, 0x3DD5BF8
	0x03DD30C0 MOV X0, X22
	0x03DD30C4 MOV X1, X31
	0x03DD30C8 ADD X19, X31, 0x1F0
	0x03DD30CC BL 0x3DE89D4
	0x03DD30D0 ADRP X25, 0x392000
	0x03DD30D4 LDR X25, [X25 + 0x368]
	0x03DD30D8 MOV X22, X0
	0x03DD30DC MOV X0, X24
	0x03DD30E0 LDR X1, [X25]
	0x03DD30E4 BL 0x266C4A0
	0x03DD30E8 LDUR V0, [X0 + 0x2C]
	0x03DD30EC LDR V1, [X0 + 0x2]
	0x03DD30F0 LDR X1, [X25]
	0x03DD30F4 MOV X0, X23
	0x03DD30F8 STUR V0, [X19 + 0x2C]
	0x03DD30FC STR V1, [X31 + 0x21]
	0x03DD3100 BL 0x266C4A0
	0x03DD3104 LDUR V0, [X0 + 0x2C]
	0x03DD3108 LDR V1, [X0 + 0x2]
	0x03DD310C STUR V0, [X19 + 0xC]
	0x03DD3110 STR V1, [X31 + 0x1F]
	0x03DD3114 CBZ X22, 0x3DD5BF8
	0x03DD3118 LDR V0, [X31 + 0x21]
	0x03DD311C LDUR V1, [X19 + 0x2C]
	0x03DD3120 LDR V2, [X31 + 0x1F]
	0x03DD3124 LDUR V3, [X19 + 0xC]
	0x03DD3128 ADD X23, X31, 0xF0
	0x03DD312C STR V0, [X31 + 0x11]
	0x03DD3130 STUR V1, [X23 + 0x2C]
	0x03DD3134 STR V2, [X31 + 0xF]
	0x03DD3138 STUR V3, [X23 + 0xC]
	0x03DD313C ADRP X10, 0x34A000
	0x03DD3140 LDR X8, [X22]
	0x03DD3144 LDR X10, [X10 + 0xED0]
	0x03DD3148 LDRH W9, [X8 + 0x12E]
	0x03DD314C LDR X1, [X10]
	0x03DD3150 CBZ X9, 0x3DD3174
	0x03DD3154 LDR X10, [X8 + 0xB0]
	0x03DD3158 ADD X10, X10, 0x8
	0x03DD315C LDUR X11, [X10 - 0x8]
	0x03DD3160 CMP X11, X1
	0x03DD3164 B.EQ 0x3DD5768
	0x03DD3168 SUBS X9, X9, 0x1
	0x03DD316C ADD X10, X10, 0x10
	0x03DD3170 B.NE 0x3DD315C
	0x03DD3174 MOVZ W2, 0x8
	0x03DD3178 MOV X0, X22
	0x03DD317C BL 0x1C5C788
	0x03DD3180 B 0x3DD5778
	0x03DD3184 CBZ X22, 0x3DD5BF8
	0x03DD3188 MOV X0, X22
	0x03DD318C MOV X1, X31
	0x03DD3190 BL 0x3DE89D4
	0x03DD3194 ADRP X19, 0x392000
	0x03DD3198 LDR X19, [X19 + 0x368]
	0x03DD319C MOV X22, X0
	0x03DD31A0 MOV X0, X24
	0x03DD31A4 LDR X1, [X19]
	0x03DD31A8 BL 0x266C4A0
	0x03DD31AC LDR X1, [X19]
	0x03DD31B0 LDR X24, [X0 + 0x40]
	0x03DD31B4 MOV X0, X23
	0x03DD31B8 BL 0x266C4A0
	0x03DD31BC CBZ X22, 0x3DD5BF8
	0x03DD31C0 ADRP X10, 0x34A000
	0x03DD31C4 LDR X8, [X22]
	0x03DD31C8 LDR X23, [X0 + 0x40]
	0x03DD31CC LDR X10, [X10 + 0xED0]
	0x03DD31D0 LDRH W9, [X8 + 0x12E]
	0x03DD31D4 LDR X1, [X10]
	0x03DD31D8 CBZ X9, 0x3DD31FC
	0x03DD31DC LDR X10, [X8 + 0xB0]
	0x03DD31E0 ADD X10, X10, 0x8
	0x03DD31E4 LDUR X11, [X10 - 0x8]
	0x03DD31E8 CMP X11, X1
	0x03DD31EC B.EQ 0x3DD57CC
	0x03DD31F0 SUBS X9, X9, 0x1
	0x03DD31F4 ADD X10, X10, 0x10
	0x03DD31F8 B.NE 0x3DD31E4
	0x03DD31FC MOVZ W2, 0x7
	0x03DD3200 MOV X0, X22
	0x03DD3204 BL 0x1C5C788
	0x03DD3208 B 0x3DD57DC
	0x03DD320C CBZ X22, 0x3DD5BF8
	0x03DD3210 MOV X0, X22
	0x03DD3214 MOV X1, X31
	0x03DD3218 BL 0x3DE89D4
	0x03DD321C ADRP X19, 0x392000
	0x03DD3220 LDR X19, [X19 + 0x368]
	0x03DD3224 MOV X22, X0
	0x03DD3228 MOV X0, X24
	0x03DD322C LDR X1, [X19]
	0x03DD3230 BL 0x266C4A0
	0x03DD3234 LDR X1, [X19]
	0x03DD3238 LDP X24, X25, [X0 + 0x48]
	0x03DD323C MOV X0, X23
	0x03DD3240 BL 0x266C4A0
	0x03DD3244 CBZ X22, 0x3DD5BF8
	0x03DD3248 ADRP X10, 0x34A000
	0x03DD324C LDR X8, [X22]
	0x03DD3250 LDP X26, X23, [X0 + 0x48]
	0x03DD3254 LDR X10, [X10 + 0xED0]
	0x03DD3258 LDRH W9, [X8 + 0x12E]
	0x03DD325C LDR X1, [X10]
	0x03DD3260 CBZ X9, 0x3DD3284
	0x03DD3264 LDR X10, [X8 + 0xB0]
	0x03DD3268 ADD X10, X10, 0x8
	0x03DD326C LDUR X11, [X10 - 0x8]
	0x03DD3270 CMP X11, X1
	0x03DD3274 B.EQ 0x3DD57F0
	0x03DD3278 SUBS X9, X9, 0x1
	0x03DD327C ADD X10, X10, 0x10
	0x03DD3280 B.NE 0x3DD326C
	0x03DD3284 MOVZ W2, 0x6
	0x03DD3288 MOV X0, X22
	0x03DD328C BL 0x1C5C788
	0x03DD3290 B 0x3DD5800
	0x03DD3294 CBZ X22, 0x3DD5BF8
	0x03DD3298 MOV X0, X22
	0x03DD329C MOV X1, X31
	0x03DD32A0 BL 0x3DE89D4
	0x03DD32A4 ADRP X19, 0x392000
	0x03DD32A8 LDR X19, [X19 + 0x368]
	0x03DD32AC MOV X22, X0
	0x03DD32B0 MOV X0, X24
	0x03DD32B4 LDR X1, [X19]
	0x03DD32B8 BL 0x266C4A0
	0x03DD32BC LDR X1, [X19]
	0x03DD32C0 LDR W24, [X0 + 0x58]
	0x03DD32C4 MOV X0, X23
	0x03DD32C8 BL 0x266C4A0
	0x03DD32CC CBZ X22, 0x3DD5BF8
	0x03DD32D0 ADRP X10, 0x34A000
	0x03DD32D4 LDR X8, [X22]
	0x03DD32D8 LDR W23, [X0 + 0x58]
	0x03DD32DC LDR X10, [X10 + 0xED0]
	0x03DD32E0 LDRH W9, [X8 + 0x12E]
	0x03DD32E4 LDR X1, [X10]
	0x03DD32E8 CBZ X9, 0x3DD330C
	0x03DD32EC LDR X10, [X8 + 0xB0]
	0x03DD32F0 ADD X10, X10, 0x8
	0x03DD32F4 LDUR X11, [X10 - 0x8]
	0x03DD32F8 CMP X11, X1
	0x03DD32FC B.EQ 0x3DD5838
	0x03DD3300 SUBS X9, X9, 0x1
	0x03DD3304 ADD X10, X10, 0x10
	0x03DD3308 B.NE 0x3DD32F4
	0x03DD330C MOVZ W2, 0x4
	0x03DD3310 MOV X0, X22
	0x03DD3314 BL 0x1C5C788
	0x03DD3318 B 0x3DD5848
	0x03DD331C CBZ X22, 0x3DD5BF8
	0x03DD3320 MOV X0, X22
	0x03DD3324 MOV X1, X31
	0x03DD3328 BL 0x3DE89D4
	0x03DD332C ADRP X19, 0x392000
	0x03DD3330 LDR X19, [X19 + 0x368]
	0x03DD3334 MOV X22, X0
	0x03DD3338 MOV X0, X24
	0x03DD333C LDR X1, [X19]
	0x03DD3340 BL 0x266C4A0
	0x03DD3344 LDR X1, [X19]
	0x03DD3348 LDUR X24, [X0 + 0x5C]
	0x03DD334C MOV X0, X23
	0x03DD3350 BL 0x266C4A0
	0x03DD3354 CBZ X22, 0x3DD5BF8
	0x03DD3358 ADRP X10, 0x34A000
	0x03DD335C LDR X8, [X22]
	0x03DD3360 LDUR X23, [X0 + 0x5C]
	0x03DD3364 LDR X10, [X10 + 0xED0]
	0x03DD3368 LDRH W9, [X8 + 0x12E]
	0x03DD336C LDR X1, [X10]
	0x03DD3370 CBZ X9, 0x3DD3394
	0x03DD3374 LDR X10, [X8 + 0xB0]
	0x03DD3378 ADD X10, X10, 0x8
	0x03DD337C LDUR X11, [X10 - 0x8]
	0x03DD3380 CMP X11, X1
	0x03DD3384 B.EQ 0x3DD585C
	0x03DD3388 SUBS X9, X9, 0x1
	0x03DD338C ADD X10, X10, 0x10
	0x03DD3390 B.NE 0x3DD337C
	0x03DD3394 MOVZ W2, 0x2
	0x03DD3398 MOV X0, X22
	0x03DD339C BL 0x1C5C788
	0x03DD33A0 B 0x3DD586C
	0x03DD33A4 CBZ X22, 0x3DD5BF8
	0x03DD33A8 MOV X0, X22
	0x03DD33AC MOV X1, X31
	0x03DD33B0 BL 0x3DE89D4
	0x03DD33B4 ADRP X19, 0x392000
	0x03DD33B8 LDR X19, [X19 + 0x368]
	0x03DD33BC MOV X22, X0
	0x03DD33C0 MOV X0, X24
	0x03DD33C4 LDR X1, [X19]
	0x03DD33C8 BL 0x266C4A0
	0x03DD33CC LDR X1, [X19]
	0x03DD33D0 LDR W24, [X0 + 0x64]
	0x03DD33D4 MOV X0, X23
	0x03DD33D8 BL 0x266C4A0
	0x03DD33DC CBZ X22, 0x3DD5BF8
	0x03DD33E0 ADRP X10, 0x34A000
	0x03DD33E4 LDR X8, [X22]
	0x03DD33E8 LDR W23, [X0 + 0x64]
	0x03DD33EC LDR X10, [X10 + 0xED0]
	0x03DD33F0 LDRH W9, [X8 + 0x12E]
	0x03DD33F4 LDR X1, [X10]
	0x03DD33F8 CBZ X9, 0x3DD341C
	0x03DD33FC LDR X10, [X8 + 0xB0]
	0x03DD3400 ADD X10, X10, 0x8
	0x03DD3404 LDUR X11, [X10 - 0x8]
	0x03DD3408 CMP X11, X1
	0x03DD340C B.EQ 0x3DD5880
	0x03DD3410 SUBS X9, X9, 0x1
	0x03DD3414 ADD X10, X10, 0x10
	0x03DD3418 B.NE 0x3DD3404
	0x03DD341C MOVZ W2, 0x4
	0x03DD3420 MOV X0, X22
	0x03DD3424 BL 0x1C5C788
	0x03DD3428 B 0x3DD5890
	0x03DD342C CBZ X22, 0x3DD5BF8
	0x03DD3430 MOV X0, X22
	0x03DD3434 MOV X1, X31
	0x03DD3438 BL 0x3DE89D4
	0x03DD343C ADRP X19, 0x392000
	0x03DD3440 LDR X19, [X19 + 0x368]
	0x03DD3444 MOV X22, X0
	0x03DD3448 MOV X0, X24
	0x03DD344C LDR X1, [X19]
	0x03DD3450 BL 0x266C4A0
	0x03DD3454 LDR X1, [X19]
	0x03DD3458 LDP S8, S9, [X0 + 0x68]
	0x03DD345C LDP S10, S11, [X0 + 0x70]
	0x03DD3460 MOV X0, X23
	0x03DD3464 BL 0x266C4A0
	0x03DD3468 CBZ X22, 0x3DD5BF8
	0x03DD346C ADRP X10, 0x34A000
	0x03DD3470 LDP S13, S12, [X0 + 0x70]
	0x03DD3474 LDR X8, [X22]
	0x03DD3478 LDP S15, S14, [X0 + 0x68]
	0x03DD347C LDR X10, [X10 + 0xED0]
	0x03DD3480 LDRH W9, [X8 + 0x12E]
	0x03DD3484 LDR X1, [X10]
	0x03DD3488 CBZ X9, 0x3DD34AC
	0x03DD348C LDR X10, [X8 + 0xB0]
	0x03DD3490 ADD X10, X10, 0x8
	0x03DD3494 LDUR X11, [X10 - 0x8]
	0x03DD3498 CMP X11, X1
	0x03DD349C B.EQ 0x3DD58A4
	0x03DD34A0 SUBS X9, X9, 0x1
	0x03DD34A4 ADD X10, X10, 0x10
	0x03DD34A8 B.NE 0x3DD3494
	0x03DD34AC MOVZ W2, 0x3
	0x03DD34B0 MOV X0, X22
	0x03DD34B4 BL 0x1C5C788
	0x03DD34B8 B 0x3DD58B4
	0x03DD34BC CBZ X22, 0x3DD5BF8
	0x03DD34C0 MOV X0, X22
	0x03DD34C4 MOV X1, X31
	0x03DD34C8 BL 0x3DE89D4
	0x03DD34CC ADRP X19, 0x392000
	0x03DD34D0 LDR X19, [X19 + 0x368]
	0x03DD34D4 MOV X22, X0
	0x03DD34D8 MOV X0, X24
	0x03DD34DC LDR X1, [X19]
	0x03DD34E0 BL 0x266C4A0
	0x03DD34E4 LDR X1, [X19]
	0x03DD34E8 LDR V8, [X0 + 0x78]
	0x03DD34EC MOV X0, X23
	0x03DD34F0 BL 0x266C4A0
	0x03DD34F4 CBZ X22, 0x3DD5BF8
	0x03DD34F8 ADRP X10, 0x34A000
	0x03DD34FC LDR X8, [X22]
	0x03DD3500 LDR V9, [X0 + 0x78]
	0x03DD3504 LDR X10, [X10 + 0xED0]
	0x03DD3508 LDRH W9, [X8 + 0x12E]
	0x03DD350C LDR X1, [X10]
	0x03DD3510 CBZ X9, 0x3DD3534
	0x03DD3514 LDR X10, [X8 + 0xB0]
	0x03DD3518 ADD X10, X10, 0x8
	0x03DD351C LDUR X11, [X10 - 0x8]
	0x03DD3520 CMP X11, X1
	0x03DD3524 B.EQ 0x3DD5920
	0x03DD3528 SUBS X9, X9, 0x1
	0x03DD352C ADD X10, X10, 0x10
	0x03DD3530 B.NE 0x3DD351C
	0x03DD3534 MOV X0, X22
	0x03DD3538 MOV W2, W31
	0x03DD353C BL 0x1C5C788
	0x03DD3540 B 0x3DD592C
	0x03DD3544 CBZ X22, 0x3DD5BF8
	0x03DD3548 MOV X0, X22
	0x03DD354C MOV X1, X31
	0x03DD3550 BL 0x3DE89D4
	0x03DD3554 ADRP X19, 0x392000
	0x03DD3558 LDR X19, [X19 + 0x368]
	0x03DD355C MOV X22, X0
	0x03DD3560 MOV X0, X24
	0x03DD3564 LDR X1, [X19]
	0x03DD3568 BL 0x266C4A0
	0x03DD356C LDR X1, [X19]
	0x03DD3570 LDR W24, [X0 + 0x7C]
	0x03DD3574 MOV X0, X23
	0x03DD3578 BL 0x266C4A0
	0x03DD357C CBZ X22, 0x3DD5BF8
	0x03DD3580 ADRP X10, 0x34A000
	0x03DD3584 LDR X8, [X22]
	0x03DD3588 LDR W23, [X0 + 0x7C]
	0x03DD358C LDR X10, [X10 + 0xED0]
	0x03DD3590 LDRH W9, [X8 + 0x12E]
	0x03DD3594 LDR X1, [X10]
	0x03DD3598 CBZ X9, 0x3DD35BC
	0x03DD359C LDR X10, [X8 + 0xB0]
	0x03DD35A0 ADD X10, X10, 0x8
	0x03DD35A4 LDUR X11, [X10 - 0x8]
	0x03DD35A8 CMP X11, X1
	0x03DD35AC B.EQ 0x3DD5940
	0x03DD35B0 SUBS X9, X9, 0x1
	0x03DD35B4 ADD X10, X10, 0x10
	0x03DD35B8 B.NE 0x3DD35A4
	0x03DD35BC MOVZ W2, 0x4
	0x03DD35C0 MOV X0, X22
	0x03DD35C4 BL 0x1C5C788
	0x03DD35C8 B 0x3DD5950
	0x03DD35CC CBZ X22, 0x3DD5BF8
	0x03DD35D0 MOV X0, X22
	0x03DD35D4 MOV X1, X31
	0x03DD35D8 BL 0x3DE89D4
	0x03DD35DC ADRP X19, 0x392000
	0x03DD35E0 LDR X19, [X19 + 0x368]
	0x03DD35E4 MOV X22, X0
	0x03DD35E8 MOV X0, X24
	0x03DD35EC LDR X1, [X19]
	0x03DD35F0 BL 0x266C4A0
	0x03DD35F4 LDR X1, [X19]
	0x03DD35F8 LDR W24, [X0 + 0x80]
	0x03DD35FC MOV X0, X23
	0x03DD3600 BL 0x266C4A0
	0x03DD3604 CBZ X22, 0x3DD5BF8
	0x03DD3608 ADRP X10, 0x34A000
	0x03DD360C LDR X8, [X22]
	0x03DD3610 LDR W23, [X0 + 0x80]
	0x03DD3614 LDR X10, [X10 + 0xED0]
	0x03DD3618 LDRH W9, [X8 + 0x12E]
	0x03DD361C LDR X1, [X10]
	0x03DD3620 CBZ X9, 0x3DD3644
	0x03DD3624 LDR X10, [X8 + 0xB0]
	0x03DD3628 ADD X10, X10, 0x8
	0x03DD362C LDUR X11, [X10 - 0x8]
	0x03DD3630 CMP X11, X1
	0x03DD3634 B.EQ 0x3DD5964
	0x03DD3638 SUBS X9, X9, 0x1
	0x03DD363C ADD X10, X10, 0x10
	0x03DD3640 B.NE 0x3DD362C
	0x03DD3644 MOVZ W2, 0x4
	0x03DD3648 MOV X0, X22
	0x03DD364C BL 0x1C5C788
	0x03DD3650 B 0x3DD5974
	0x03DD3654 CBZ X22, 0x3DD5BF8
	0x03DD3658 MOV X0, X22
	0x03DD365C MOV X1, X31
	0x03DD3660 BL 0x3DE89D4
	0x03DD3664 ADRP X19, 0x392000
	0x03DD3668 LDR X19, [X19 + 0x368]
	0x03DD366C MOV X22, X0
	0x03DD3670 MOV X0, X24
	0x03DD3674 LDR X1, [X19]
	0x03DD3678 BL 0x266C4A0
	0x03DD367C LDR X1, [X19]
	0x03DD3680 LDUR X24, [X0 + 0x84]
	0x03DD3684 MOV X0, X23
	0x03DD3688 BL 0x266C4A0
	0x03DD368C CBZ X22, 0x3DD5BF8
	0x03DD3690 ADRP X10, 0x34A000
	0x03DD3694 LDR X8, [X22]
	0x03DD3698 LDUR X23, [X0 + 0x84]
	0x03DD369C LDR X10, [X10 + 0xED0]
	0x03DD36A0 LDRH W9, [X8 + 0x12E]
	0x03DD36A4 LDR X1, [X10]
	0x03DD36A8 CBZ X9, 0x3DD36CC
	0x03DD36AC LDR X10, [X8 + 0xB0]
	0x03DD36B0 ADD X10, X10, 0x8
	0x03DD36B4 LDUR X11, [X10 - 0x8]
	0x03DD36B8 CMP X11, X1
	0x03DD36BC B.EQ 0x3DD5988
	0x03DD36C0 SUBS X9, X9, 0x1
	0x03DD36C4 ADD X10, X10, 0x10
	0x03DD36C8 B.NE 0x3DD36B4
	0x03DD36CC MOVZ W2, 0x2
	0x03DD36D0 MOV X0, X22
	0x03DD36D4 BL 0x1C5C788
	0x03DD36D8 B 0x3DD5998
	0x03DD36DC CBZ X22, 0x3DD5BF8
	0x03DD36E0 MOV X0, X22
	0x03DD36E4 MOV X1, X31
	0x03DD36E8 BL 0x3DE89D4
	0x03DD36EC ADRP X19, 0x392000
	0x03DD36F0 LDR X19, [X19 + 0x370]
	0x03DD36F4 MOV X25, X0
	0x03DD36F8 ADD X0, X24, 0x10
	0x03DD36FC LDR X1, [X19]
	0x03DD3700 BL 0x266CDA0
	0x03DD3704 LDR X1, [X19]
	0x03DD3708 LDP S8, S9, [X0 + 0x1C]
	0x03DD370C LDP S10, S11, [X0 + 0x24]
	0x03DD3710 ADD X0, X23, 0x10
	0x03DD3714 BL 0x266CDA0
	0x03DD3718 CBZ X25, 0x3DD5BF8
	0x03DD371C ADRP X10, 0x34A000
	0x03DD3720 LDP S13, S12, [X0 + 0x24]
	0x03DD3724 LDR X8, [X25]
	0x03DD3728 LDP S15, S14, [X0 + 0x1C]
	0x03DD372C LDR X10, [X10 + 0xED0]
	0x03DD3730 LDRH W9, [X8 + 0x12E]
	0x03DD3734 LDR X1, [X10]
	0x03DD3738 CBZ X9, 0x3DD375C
	0x03DD373C LDR X10, [X8 + 0xB0]
	0x03DD3740 ADD X10, X10, 0x8
	0x03DD3744 LDUR X11, [X10 - 0x8]
	0x03DD3748 CMP X11, X1
	0x03DD374C B.EQ 0x3DD59F0
	0x03DD3750 SUBS X9, X9, 0x1
	0x03DD3754 ADD X10, X10, 0x10
	0x03DD3758 B.NE 0x3DD3744
	0x03DD375C MOVZ W2, 0x3
	0x03DD3760 MOV X0, X25
	0x03DD3764 BL 0x1C5C788
	0x03DD3768 B 0x3DD5A00
	0x03DD376C CBZ X22, 0x3DD5BF8
	0x03DD3770 MOV X0, X22
	0x03DD3774 MOV X1, X31
	0x03DD3778 BL 0x3DE89D4
	0x03DD377C ADRP X19, 0x392000
	0x03DD3780 LDR X19, [X19 + 0x370]
	0x03DD3784 MOV X22, X0
	0x03DD3788 ADD X0, X24, 0x10
	0x03DD378C LDR X1, [X19]
	0x03DD3790 BL 0x266CDA0
	0x03DD3794 LDR X1, [X19]
	0x03DD3798 LDR W24, [X0 + 0x2C]
	0x03DD379C ADD X0, X23, 0x10
	0x03DD37A0 BL 0x266CDA0
	0x03DD37A4 CBZ X22, 0x3DD5BF8
	0x03DD37A8 ADRP X10, 0x34A000
	0x03DD37AC LDR X8, [X22]
	0x03DD37B0 LDR W23, [X0 + 0x2C]
	0x03DD37B4 LDR X10, [X10 + 0xED0]
	0x03DD37B8 LDRH W9, [X8 + 0x12E]
	0x03DD37BC LDR X1, [X10]
	0x03DD37C0 CBZ X9, 0x3DD37E4
	0x03DD37C4 LDR X10, [X8 + 0xB0]
	0x03DD37C8 ADD X10, X10, 0x8
	0x03DD37CC LDUR X11, [X10 - 0x8]
	0x03DD37D0 CMP X11, X1
	0x03DD37D4 B.EQ 0x3DD5AAC
	0x03DD37D8 SUBS X9, X9, 0x1
	0x03DD37DC ADD X10, X10, 0x10
	0x03DD37E0 B.NE 0x3DD37CC
	0x03DD37E4 MOVZ W2, 0x4
	0x03DD37E8 MOV X0, X22
	0x03DD37EC BL 0x1C5C788
	0x03DD37F0 B 0x3DD5ABC
	0x03DD37F4 CBZ X22, 0x3DD5BF8
	0x03DD37F8 MOV X0, X22
	0x03DD37FC MOV X1, X31
	0x03DD3800 BL 0x3DE89D4
	0x03DD3804 ADRP X19, 0x392000
	0x03DD3808 LDR X19, [X19 + 0x370]
	0x03DD380C MOV X22, X0
	0x03DD3810 ADD X0, X24, 0x10
	0x03DD3814 LDR X1, [X19]
	0x03DD3818 BL 0x266CDA0
	0x03DD381C LDR X1, [X19]
	0x03DD3820 LDR W24, [X0 + 0x30]
	0x03DD3824 ADD X0, X23, 0x10
	0x03DD3828 BL 0x266CDA0
	0x03DD382C CBZ X22, 0x3DD5BF8
	0x03DD3830 ADRP X10, 0x34A000
	0x03DD3834 LDR X8, [X22]
	0x03DD3838 LDR W23, [X0 + 0x30]
	0x03DD383C LDR X10, [X10 + 0xED0]
	0x03DD3840 LDRH W9, [X8 + 0x12E]
	0x03DD3844 LDR X1, [X10]
	0x03DD3848 CBZ X9, 0x3DD386C
	0x03DD384C LDR X10, [X8 + 0xB0]
	0x03DD3850 ADD X10, X10, 0x8
	0x03DD3854 LDUR X11, [X10 - 0x8]
	0x03DD3858 CMP X11, X1
	0x03DD385C B.EQ 0x3DD5AC8
	0x03DD3860 SUBS X9, X9, 0x1
	0x03DD3864 ADD X10, X10, 0x10
	0x03DD3868 B.NE 0x3DD3854
	0x03DD386C MOVZ W2, 0x1
	0x03DD3870 MOV X0, X22
	0x03DD3874 BL 0x1C5C788
	0x03DD3878 B 0x3DD5AD8
	0x03DD387C CBZ X22, 0x3DD5BF8
	0x03DD3880 MOV X0, X22
	0x03DD3884 MOV X1, X31
	0x03DD3888 BL 0x3DE89D4
	0x03DD388C ADRP X19, 0x392000
	0x03DD3890 LDR X19, [X19 + 0x370]
	0x03DD3894 MOV X22, X0
	0x03DD3898 ADD X0, X24, 0x10
	0x03DD389C LDR X1, [X19]
	0x03DD38A0 BL 0x266CDA0
	0x03DD38A4 LDR X1, [X19]
	0x03DD38A8 LDR W24, [X0 + 0x34]
	0x03DD38AC ADD X0, X23, 0x10
	0x03DD38B0 BL 0x266CDA0
	0x03DD38B4 CBZ X22, 0x3DD5BF8
	0x03DD38B8 ADRP X10, 0x34A000
	0x03DD38BC LDR X8, [X22]
	0x03DD38C0 LDR W23, [X0 + 0x34]
	0x03DD38C4 LDR X10, [X10 + 0xED0]
	0x03DD38C8 LDRH W9, [X8 + 0x12E]
	0x03DD38CC LDR X1, [X10]
	0x03DD38D0 CBZ X9, 0x3DD38F4
	0x03DD38D4 LDR X10, [X8 + 0xB0]
	0x03DD38D8 ADD X10, X10, 0x8
	0x03DD38DC LDUR X11, [X10 - 0x8]
	0x03DD38E0 CMP X11, X1
	0x03DD38E4 B.EQ 0x3DD5AE4
	0x03DD38E8 SUBS X9, X9, 0x1
	0x03DD38EC ADD X10, X10, 0x10
	0x03DD38F0 B.NE 0x3DD38DC
	0x03DD38F4 MOVZ W2, 0x1
	0x03DD38F8 MOV X0, X22
	0x03DD38FC BL 0x1C5C788
	0x03DD3900 B 0x3DD5AF4
	0x03DD3904 CBZ X22, 0x3DD5BF8
	0x03DD3908 MOV X0, X22
	0x03DD390C MOV X1, X31
	0x03DD3910 BL 0x3DE89D4
	0x03DD3914 ADRP X19, 0x392000
	0x03DD3918 LDR X19, [X19 + 0x370]
	0x03DD391C MOV X22, X0
	0x03DD3920 ADD X0, X24, 0x10
	0x03DD3924 LDR X1, [X19]
	0x03DD3928 BL 0x266CDA0
	0x03DD392C LDR X1, [X19]
	0x03DD3930 LDR W24, [X0 + 0x38]
	0x03DD3934 ADD X0, X23, 0x10
	0x03DD3938 BL 0x266CDA0
	0x03DD393C CBZ X22, 0x3DD5BF8
	0x03DD3940 ADRP X10, 0x34A000
	0x03DD3944 LDR X8, [X22]
	0x03DD3948 LDR W23, [X0 + 0x38]
	0x03DD394C LDR X10, [X10 + 0xED0]
	0x03DD3950 LDRH W9, [X8 + 0x12E]
	0x03DD3954 LDR X1, [X10]
	0x03DD3958 CBZ X9, 0x3DD397C
	0x03DD395C LDR X10, [X8 + 0xB0]
	0x03DD3960 ADD X10, X10, 0x8
	0x03DD3964 LDUR X11, [X10 - 0x8]
	0x03DD3968 CMP X11, X1
	0x03DD396C B.EQ 0x3DD5B00
	0x03DD3970 SUBS X9, X9, 0x1
	0x03DD3974 ADD X10, X10, 0x10
	0x03DD3978 B.NE 0x3DD3964
	0x03DD397C MOVZ W2, 0x1
	0x03DD3980 MOV X0, X22
	0x03DD3984 BL 0x1C5C788
	0x03DD3988 B 0x3DD5B10
	0x03DD398C CBZ X22, 0x3DD5BF8
	0x03DD3990 MOV X0, X22
	0x03DD3994 MOV X1, X31
	0x03DD3998 BL 0x3DE89D4
	0x03DD399C ADRP X19, 0x392000
	0x03DD39A0 LDR X19, [X19 + 0x370]
	0x03DD39A4 MOV X22, X0
	0x03DD39A8 ADD X0, X24, 0x10
	0x03DD39AC LDR X1, [X19]
	0x03DD39B0 BL 0x266CDA0
	0x03DD39B4 LDR X1, [X19]
	0x03DD39B8 LDR V8, [X0 + 0x3C]
	0x03DD39BC ADD X0, X23, 0x10
	0x03DD39C0 BL 0x266CDA0
	0x03DD39C4 CBZ X22, 0x3DD5BF8
	0x03DD39C8 ADRP X10, 0x34A000
	0x03DD39CC LDR X8, [X22]
	0x03DD39D0 LDR V9, [X0 + 0x3C]
	0x03DD39D4 LDR X10, [X10 + 0xED0]
	0x03DD39D8 LDRH W9, [X8 + 0x12E]
	0x03DD39DC LDR X1, [X10]
	0x03DD39E0 CBZ X9, 0x3DD3A04
	0x03DD39E4 LDR X10, [X8 + 0xB0]
	0x03DD39E8 ADD X10, X10, 0x8
	0x03DD39EC LDUR X11, [X10 - 0x8]
	0x03DD39F0 CMP X11, X1
	0x03DD39F4 B.EQ 0x3DD5B1C
	0x03DD39F8 SUBS X9, X9, 0x1
	0x03DD39FC ADD X10, X10, 0x10
	0x03DD3A00 B.NE 0x3DD39EC
	0x03DD3A04 MOV X0, X22
	0x03DD3A08 MOV W2, W31
	0x03DD3A0C BL 0x1C5C788
	0x03DD3A10 B 0x3DD5B28
	0x03DD3A14 CBZ X22, 0x3DD5BF8
	0x03DD3A18 MOV X0, X22
	0x03DD3A1C MOV X1, X31
	0x03DD3A20 BL 0x3DE89D4
	0x03DD3A24 ADRP X19, 0x392000
	0x03DD3A28 LDR X19, [X19 + 0x370]
	0x03DD3A2C MOV X22, X0
	0x03DD3A30 ADD X0, X24, 0x10
	0x03DD3A34 LDR X1, [X19]
	0x03DD3A38 BL 0x266CDA0
	0x03DD3A3C LDR X1, [X19]
	0x03DD3A40 LDR W24, [X0 + 0x40]
	0x03DD3A44 ADD X0, X23, 0x10
	0x03DD3A48 BL 0x266CDA0
	0x03DD3A4C CBZ X22, 0x3DD5BF8
	0x03DD3A50 ADRP X10, 0x34A000
	0x03DD3A54 LDR X8, [X22]
	0x03DD3A58 LDR W23, [X0 + 0x40]
	0x03DD3A5C LDR X10, [X10 + 0xED0]
	0x03DD3A60 LDRH W9, [X8 + 0x12E]
	0x03DD3A64 LDR X1, [X10]
	0x03DD3A68 CBZ X9, 0x3DD3A8C
	0x03DD3A6C LDR X10, [X8 + 0xB0]
	0x03DD3A70 ADD X10, X10, 0x8
	0x03DD3A74 LDUR X11, [X10 - 0x8]
	0x03DD3A78 CMP X11, X1
	0x03DD3A7C B.EQ 0x3DD5B78
	0x03DD3A80 SUBS X9, X9, 0x1
	0x03DD3A84 ADD X10, X10, 0x10
	0x03DD3A88 B.NE 0x3DD3A74
	0x03DD3A8C MOVZ W2, 0x1
	0x03DD3A90 MOV X0, X22
	0x03DD3A94 BL 0x1C5C788
	0x03DD3A98 B 0x3DD5B88
	0x03DD3A9C CBZ X22, 0x3DD5BF8
	0x03DD3AA0 MOV X0, X22
	0x03DD3AA4 MOV X1, X31
	0x03DD3AA8 BL 0x3DE89D4
	0x03DD3AAC ADRP X19, 0x392000
	0x03DD3AB0 LDR X19, [X19 + 0x370]
	0x03DD3AB4 MOV X22, X0
	0x03DD3AB8 ADD X0, X24, 0x10
	0x03DD3ABC LDR X1, [X19]
	0x03DD3AC0 BL 0x266CDA0
	0x03DD3AC4 LDR X1, [X19]
	0x03DD3AC8 LDR W24, [X0 + 0x44]
	0x03DD3ACC ADD X0, X23, 0x10
	0x03DD3AD0 BL 0x266CDA0
	0x03DD3AD4 CBZ X22, 0x3DD5BF8
	0x03DD3AD8 ADRP X10, 0x34A000
	0x03DD3ADC LDR X8, [X22]
	0x03DD3AE0 LDR W23, [X0 + 0x44]
	0x03DD3AE4 LDR X10, [X10 + 0xED0]
	0x03DD3AE8 LDRH W9, [X8 + 0x12E]
	0x03DD3AEC LDR X1, [X10]
	0x03DD3AF0 CBZ X9, 0x3DD3B14
	0x03DD3AF4 LDR X10, [X8 + 0xB0]
	0x03DD3AF8 ADD X10, X10, 0x8
	0x03DD3AFC LDUR X11, [X10 - 0x8]
	0x03DD3B00 CMP X11, X1
	0x03DD3B04 B.EQ 0x3DD5B94
	0x03DD3B08 SUBS X9, X9, 0x1
	0x03DD3B0C ADD X10, X10, 0x10
	0x03DD3B10 B.NE 0x3DD3AFC
	0x03DD3B14 MOVZ W2, 0x4
	0x03DD3B18 MOV X0, X22
	0x03DD3B1C BL 0x1C5C788
	0x03DD3B20 B 0x3DD5BA4
	0x03DD3B24 LDR W9, [X10]
	0x03DD3B28 ADD W9, W9, 0xD
	0x03DD3B2C ADD X8, X8, W9, 0x4, SXTW
	0x03DD3B30 ADD X0, X8, 0x138
	0x03DD3B34 LDP X8, X9, [X0]
	0x03DD3B38 LDR W6, [X31 + 0x2C]
	0x03DD3B3C LDR W7, [X31 + 0x20]
	0x03DD3B40 MOVZ W1, 0x2
	0x03DD3B44 MOVK W1, 0x70000
	0x03DD3B48 MOV X0, X25
	0x03DD3B4C MOV X2, X27
	0x03DD3B50 MOV X3, X26
	0x03DD3B54 MOV X4, X29
	0x03DD3B58 MOV X5, X28
	0x03DD3B5C STP X20, X9, [X31]
	0x03DD3B60 BLR X8
	0x03DD3B64 MOV W25, W0
	0x03DD3B68 MOV X0, X22
	0x03DD3B6C MOV X1, X31
	0x03DD3B70 BL 0x3DE89D4
	0x03DD3B74 LDR X1, [X19]
	0x03DD3B78 MOV X22, X0
	0x03DD3B7C MOV X0, X24
	0x03DD3B80 BL 0x266DB18
	0x03DD3B84 LDR X1, [X19]
	0x03DD3B88 LDUR X26, [X0 + 0x3C]
	0x03DD3B8C LDR W24, [X0 + 0x44]
	0x03DD3B90 MOV X0, X23
	0x03DD3B94 BL 0x266DB18
	0x03DD3B98 CBZ X22, 0x3DD5BF8
	0x03DD3B9C LDR X8, [X22]
	0x03DD3BA0 LDR W23, [X0 + 0x44]
	0x03DD3BA4 LDUR X27, [X0 + 0x3C]
	0x03DD3BA8 LDR X1, [X21]
	0x03DD3BAC LDRH W9, [X8 + 0x12E]
	0x03DD3BB0 CBZ X9, 0x3DD3BD4
	0x03DD3BB4 LDR X10, [X8 + 0xB0]
	0x03DD3BB8 ADD X10, X10, 0x8
	0x03DD3BBC LDUR X11, [X10 - 0x8]
	0x03DD3BC0 CMP X11, X1
	0x03DD3BC4 B.EQ 0x3DD41FC
	0x03DD3BC8 SUBS X9, X9, 0x1
	0x03DD3BCC ADD X10, X10, 0x10
	0x03DD3BD0 B.NE 0x3DD3BBC
	0x03DD3BD4 MOVZ W2, 0xD
	0x03DD3BD8 MOV X0, X22
	0x03DD3BDC BL 0x1C5C788
	0x03DD3BE0 B 0x3DD420C
	0x03DD3BE4 LDR W9, [X10]
	0x03DD3BE8 ADD W9, W9, 0x3
	0x03DD3BEC ADD X8, X8, W9, 0x4, SXTW
	0x03DD3BF0 ADD X0, X8, 0x138
	0x03DD3BF4 LDP X8, X5, [X0]
	0x03DD3BF8 LDR W2, [X31 + 0x2C]
	0x03DD3BFC LDR X4, [X31 + 0x20]
	0x03DD3C00 MOVZ W27, 0x2
	0x03DD3C04 MOVK W27, 0x70000
	0x03DD3C08 MOVZ W9, 0x9
	0x03DD3C0C ORR W1, W27, W9, 0x0
	0x03DD3C10 MOV X0, X25
	0x03DD3C14 MOV V0.16B, V8.16B
	0x03DD3C18 MOV V1.16B, V9.16B
	0x03DD3C1C MOV V2.16B, V10.16B
	0x03DD3C20 MOV V3.16B, V11.16B
	0x03DD3C24 MOV V4.16B, V15.16B
	0x03DD3C28 MOV V5.16B, V14.16B
	0x03DD3C2C MOV V6.16B, V13.16B
	0x03DD3C30 MOV V7.16B, V12.16B
	0x03DD3C34 MOV W3, W20
	0x03DD3C38 BLR X8
	0x03DD3C3C MOV W29, W0
	0x03DD3C40 MOV X0, X22
	0x03DD3C44 MOV X1, X31
	0x03DD3C48 BL 0x3DE89D4
	0x03DD3C4C LDR X1, [X19]
	0x03DD3C50 MOV X26, X0
	0x03DD3C54 MOV X0, X24
	0x03DD3C58 BL 0x266DB18
	0x03DD3C5C LDR X1, [X19]
	0x03DD3C60 LDP S8, S9, [X0 + 0x94]
	0x03DD3C64 LDP S10, S11, [X0 + 0x9C]
	0x03DD3C68 MOV X0, X23
	0x03DD3C6C BL 0x266DB18
	0x03DD3C70 CBZ X26, 0x3DD5BF8
	0x03DD3C74 LDR X8, [X26]
	0x03DD3C78 LDP S13, S12, [X0 + 0x9C]
	0x03DD3C7C LDP S15, S14, [X0 + 0x94]
	0x03DD3C80 LDR X1, [X28]
	0x03DD3C84 LDRH W9, [X8 + 0x12E]
	0x03DD3C88 CBZ X9, 0x3DD3CAC
	0x03DD3C8C LDR X10, [X8 + 0xB0]
	0x03DD3C90 ADD X10, X10, 0x8
	0x03DD3C94 LDUR X11, [X10 - 0x8]
	0x03DD3C98 CMP X11, X1
	0x03DD3C9C B.EQ 0x3DD4244
	0x03DD3CA0 SUBS X9, X9, 0x1
	0x03DD3CA4 ADD X10, X10, 0x10
	0x03DD3CA8 B.NE 0x3DD3C94
	0x03DD3CAC MOVZ W2, 0x3
	0x03DD3CB0 MOV X0, X26
	0x03DD3CB4 BL 0x1C5C788
	0x03DD3CB8 B 0x3DD4254
	0x03DD3CBC LDR W9, [X10]
	0x03DD3CC0 ADD W9, W9, 0x2
	0x03DD3CC4 ADD X8, X8, W9, 0x4, SXTW
	0x03DD3CC8 ADD X0, X8, 0x138
	0x03DD3CCC LDP X8, X7, [X0]
	0x03DD3CD0 LDR W4, [X31 + 0x2C]
	0x03DD3CD4 MOVZ W9, 0x2
	0x03DD3CD8 MOVK W9, 0x70000
	0x03DD3CDC ADD W1, W9, 0xA
	0x03DD3CE0 MOV X0, X25
	0x03DD3CE4 MOV X2, X26
	0x03DD3CE8 MOV X3, X27
	0x03DD3CEC MOV W5, W20
	0x03DD3CF0 MOV X6, X29
	0x03DD3CF4 BLR X8
	0x03DD3CF8 MOV W25, W0
	0x03DD3CFC MOV X0, X22
	0x03DD3D00 MOV X1, X31
	0x03DD3D04 BL 0x3DE89D4
	0x03DD3D08 LDR X1, [X19]
	0x03DD3D0C MOV X26, X0
	0x03DD3D10 MOV X0, X24
	0x03DD3D14 BL 0x266DB18
	0x03DD3D18 LDR X1, [X19]
	0x03DD3D1C LDUR X27, [X0 + 0xBC]
	0x03DD3D20 MOV X0, X23
	0x03DD3D24 BL 0x266DB18
	0x03DD3D28 CBZ X26, 0x3DD5BF8
	0x03DD3D2C LDR X8, [X26]
	0x03DD3D30 ADRP X10, 0x34A000
	0x03DD3D34 LDUR X28, [X0 + 0xBC]
	0x03DD3D38 LDRH W9, [X8 + 0x12E]
	0x03DD3D3C LDR X10, [X10 + 0xED0]
	0x03DD3D40 STR W25, [X31 + 0x20]
	0x03DD3D44 LDR X1, [X10]
	0x03DD3D48 CBZ X9, 0x3DD3D6C
	0x03DD3D4C LDR X10, [X8 + 0xB0]
	0x03DD3D50 ADD X10, X10, 0x8
	0x03DD3D54 LDUR X11, [X10 - 0x8]
	0x03DD3D58 CMP X11, X1
	0x03DD3D5C B.EQ 0x3DD4314
	0x03DD3D60 SUBS X9, X9, 0x1
	0x03DD3D64 ADD X10, X10, 0x10
	0x03DD3D68 B.NE 0x3DD3D54
	0x03DD3D6C MOVZ W2, 0x2
	0x03DD3D70 MOV X0, X26
	0x03DD3D74 BL 0x1C5C788
	0x03DD3D78 B 0x3DD4324
	0x03DD3D7C LDRSW X9, [X10]
	0x03DD3D80 ADD X8, X8, X9, 0x4, LSL
	0x03DD3D84 ADD X0, X8, 0x138
	0x03DD3D88 LDP X8, X5, [X0]
	0x03DD3D8C LDR W2, [X31 + 0x2C]
	0x03DD3D90 MOVZ W27, 0x3
	0x03DD3D94 MOVK W27, 0x20000
	0x03DD3D98 ADD W1, W27, 0x3
	0x03DD3D9C MOV X0, X25
	0x03DD3DA0 MOV V0.16B, V8.16B
	0x03DD3DA4 MOV V1.16B, V9.16B
	0x03DD3DA8 MOV W3, W20
	0x03DD3DAC MOV X4, X29
	0x03DD3DB0 BLR X8
	0x03DD3DB4 MOV W25, W0
	0x03DD3DB8 MOV X0, X22
	0x03DD3DBC MOV X1, X31
	0x03DD3DC0 BL 0x3DE89D4
	0x03DD3DC4 LDR X1, [X19]
	0x03DD3DC8 MOV X26, X0
	0x03DD3DCC MOV X0, X24
	0x03DD3DD0 BL 0x266C920
	0x03DD3DD4 LDR X1, [X19]
	0x03DD3DD8 LDR V8, [X0 + 0x14]
	0x03DD3DDC MOV X0, X23
	0x03DD3DE0 BL 0x266C920
	0x03DD3DE4 CBZ X26, 0x3DD5BF8
	0x03DD3DE8 LDR X8, [X26]
	0x03DD3DEC LDR V9, [X0 + 0x14]
	0x03DD3DF0 LDR X1, [X28]
	0x03DD3DF4 LDRH W9, [X8 + 0x12E]
	0x03DD3DF8 CBZ X9, 0x3DD3E1C
	0x03DD3DFC LDR X10, [X8 + 0xB0]
	0x03DD3E00 ADD X10, X10, 0x8
	0x03DD3E04 LDUR X11, [X10 - 0x8]
	0x03DD3E08 CMP X11, X1
	0x03DD3E0C B.EQ 0x3DD43D8
	0x03DD3E10 SUBS X9, X9, 0x1
	0x03DD3E14 ADD X10, X10, 0x10
	0x03DD3E18 B.NE 0x3DD3E04
	0x03DD3E1C MOV X0, X26
	0x03DD3E20 MOV W2, W31
	0x03DD3E24 BL 0x1C5C788
	0x03DD3E28 B 0x3DD43E4
	0x03DD3E2C LDRSW X9, [X10]
	0x03DD3E30 ADD X8, X8, X9, 0x4, LSL
	0x03DD3E34 ADD X0, X8, 0x138
	0x03DD3E38 LDP X8, X5, [X0]
	0x03DD3E3C LDR W2, [X31 + 0x2C]
	0x03DD3E40 MOVZ W28, 0x3
	0x03DD3E44 MOVK W28, 0x20000
	0x03DD3E48 ORR W1, W28, 0x8
	0x03DD3E4C MOV X0, X25
	0x03DD3E50 MOV V0.16B, V8.16B
	0x03DD3E54 MOV V1.16B, V9.16B
	0x03DD3E58 MOV W3, W20
	0x03DD3E5C MOV X4, X29
	0x03DD3E60 BLR X8
	0x03DD3E64 MOV W25, W0
	0x03DD3E68 MOV X0, X22
	0x03DD3E6C MOV X1, X31
	0x03DD3E70 BL 0x3DE89D4
	0x03DD3E74 LDR X1, [X19]
	0x03DD3E78 MOV X26, X0
	0x03DD3E7C MOV X0, X24
	0x03DD3E80 BL 0x266C920
	0x03DD3E84 LDR X1, [X19]
	0x03DD3E88 LDR V8, [X0 + 0x38]
	0x03DD3E8C MOV X0, X23
	0x03DD3E90 BL 0x266C920
	0x03DD3E94 CBZ X26, 0x3DD5BF8
	0x03DD3E98 LDR X8, [X26]
	0x03DD3E9C LDR V9, [X0 + 0x38]
	0x03DD3EA0 LDR X1, [X27]
	0x03DD3EA4 LDRH W9, [X8 + 0x12E]
	0x03DD3EA8 CBZ X9, 0x3DD3ECC
	0x03DD3EAC LDR X10, [X8 + 0xB0]
	0x03DD3EB0 ADD X10, X10, 0x8
	0x03DD3EB4 LDUR X11, [X10 - 0x8]
	0x03DD3EB8 CMP X11, X1
	0x03DD3EBC B.EQ 0x3DD4480
	0x03DD3EC0 SUBS X9, X9, 0x1
	0x03DD3EC4 ADD X10, X10, 0x10
	0x03DD3EC8 B.NE 0x3DD3EB4
	0x03DD3ECC MOV X0, X26
	0x03DD3ED0 MOV W2, W31
	0x03DD3ED4 BL 0x1C5C788
	0x03DD3ED8 B 0x3DD448C
	0x03DD3EDC LDR W9, [X10]
	0x03DD3EE0 ADD W9, W9, 0x2
	0x03DD3EE4 ADD X8, X8, W9, 0x4, SXTW
	0x03DD3EE8 ADD X0, X8, 0x138
	0x03DD3EEC LDP X8, X7, [X0]
	0x03DD3EF0 LDR W4, [X31 + 0x2C]
	0x03DD3EF4 MOVZ W9, 0x3
	0x03DD3EF8 MOVK W9, 0x20000
	0x03DD3EFC ADD W1, W9, 0x11
	0x03DD3F00 MOV X0, X25
	0x03DD3F04 MOV X2, X26
	0x03DD3F08 MOV X3, X27
	0x03DD3F0C MOV W5, W20
	0x03DD3F10 MOV X6, X29
	0x03DD3F14 BLR X8
	0x03DD3F18 MOV W25, W0
	0x03DD3F1C MOV X0, X22
	0x03DD3F20 MOV X1, X31
	0x03DD3F24 BL 0x3DE89D4
	0x03DD3F28 LDR X1, [X19]
	0x03DD3F2C MOV X26, X0
	0x03DD3F30 MOV X0, X24
	0x03DD3F34 BL 0x266C920
	0x03DD3F38 LDR X1, [X19]
	0x03DD3F3C LDUR X27, [X0 + 0x64]
	0x03DD3F40 MOV X0, X23
	0x03DD3F44 BL 0x266C920
	0x03DD3F48 CBZ X26, 0x3DD5BF8
	0x03DD3F4C LDR X8, [X26]
	0x03DD3F50 ADRP X10, 0x34A000
	0x03DD3F54 LDUR X28, [X0 + 0x64]
	0x03DD3F58 LDRH W9, [X8 + 0x12E]
	0x03DD3F5C LDR X10, [X10 + 0xED0]
	0x03DD3F60 STR W25, [X31 + 0x20]
	0x03DD3F64 LDR X1, [X10]
	0x03DD3F68 CBZ X9, 0x3DD3F8C
	0x03DD3F6C LDR X10, [X8 + 0xB0]
	0x03DD3F70 ADD X10, X10, 0x8
	0x03DD3F74 LDUR X11, [X10 - 0x8]
	0x03DD3F78 CMP X11, X1
	0x03DD3F7C B.EQ 0x3DD452C
	0x03DD3F80 SUBS X9, X9, 0x1
	0x03DD3F84 ADD X10, X10, 0x10
	0x03DD3F88 B.NE 0x3DD3F74
	0x03DD3F8C MOVZ W2, 0x2
	0x03DD3F90 MOV X0, X26
	0x03DD3F94 BL 0x1C5C788
	0x03DD3F98 B 0x3DD453C
	0x03DD3F9C LDR W9, [X10]
	0x03DD3FA0 ADD W9, W9, 0x2
	0x03DD3FA4 ADD X8, X8, W9, 0x4, SXTW
	0x03DD3FA8 ADD X0, X8, 0x138
	0x03DD3FAC LDP X8, X7, [X0]
	0x03DD3FB0 LDR W4, [X31 + 0x2C]
	0x03DD3FB4 MOVZ W9, 0x3
	0x03DD3FB8 MOVK W9, 0x20000
	0x03DD3FBC ADD W1, W9, 0x19
	0x03DD3FC0 MOV X0, X25
	0x03DD3FC4 MOV X2, X26
	0x03DD3FC8 MOV X3, X27
	0x03DD3FCC MOV W5, W20
	0x03DD3FD0 MOV X6, X29
	0x03DD3FD4 BLR X8
	0x03DD3FD8 MOV W25, W0
	0x03DD3FDC MOV X0, X22
	0x03DD3FE0 MOV X1, X31
	0x03DD3FE4 BL 0x3DE89D4
	0x03DD3FE8 LDR X1, [X19]
	0x03DD3FEC MOV X26, X0
	0x03DD3FF0 MOV X0, X24
	0x03DD3FF4 BL 0x266C920
	0x03DD3FF8 LDR X1, [X19]
	0x03DD3FFC LDUR X27, [X0 + 0xA4]
	0x03DD4000 MOV X0, X23
	0x03DD4004 BL 0x266C920
	0x03DD4008 CBZ X26, 0x3DD5BF8
	0x03DD400C LDR X8, [X26]
	0x03DD4010 ADRP X10, 0x349000
	0x03DD4014 LDUR X28, [X0 + 0xA4]
	0x03DD4018 LDRH W9, [X8 + 0x12E]
	0x03DD401C LDR X10, [X10 + 0xED0]
	0x03DD4020 STR W25, [X31 + 0x20]
	0x03DD4024 LDR X1, [X10]
	0x03DD4028 CBZ X9, 0x3DD404C
	0x03DD402C LDR X10, [X8 + 0xB0]
	0x03DD4030 ADD X10, X10, 0x8
	0x03DD4034 LDUR X11, [X10 - 0x8]
	0x03DD4038 CMP X11, X1
	0x03DD403C B.EQ 0x3DD45F4
	0x03DD4040 SUBS X9, X9, 0x1
	0x03DD4044 ADD X10, X10, 0x10
	0x03DD4048 B.NE 0x3DD4034
	0x03DD404C MOVZ W2, 0x2
	0x03DD4050 MOV X0, X26
	0x03DD4054 BL 0x1C5C788
	0x03DD4058 B 0x3DD4604
	0x03DD405C LDR W9, [X10]
	0x03DD4060 ADD W9, W9, 0xD
	0x03DD4064 ADD X8, X8, W9, 0x4, SXTW
	0x03DD4068 ADD X0, X8, 0x138
	0x03DD406C LDP X8, X9, [X0]
	0x03DD4070 LDR W6, [X31 + 0x2C]
	0x03DD4074 MOVZ W1, 0x2
	0x03DD4078 MOVK W1, 0x70000
	0x03DD407C MOV X0, X25
	0x03DD4080 MOV X2, X27
	0x03DD4084 MOV X3, X26
	0x03DD4088 MOV X4, X29
	0x03DD408C MOV X5, X28
	0x03DD4090 MOV W7, W20
	0x03DD4094 STP X19, X9, [X31]
	0x03DD4098 BLR X8
	0x03DD409C STR W0, [X31 + 0x20]
	0x03DD40A0 MOV X0, X22
	0x03DD40A4 MOV X1, X31
	0x03DD40A8 BL 0x3DE89D4
	0x03DD40AC ADRP X25, 0x391000
	0x03DD40B0 LDR X25, [X25 + 0x360]
	0x03DD40B4 MOV X26, X0
	0x03DD40B8 MOV X0, X24
	0x03DD40BC LDR X1, [X25]
	0x03DD40C0 BL 0x266DB18
	0x03DD40C4 LDR X1, [X25]
	0x03DD40C8 LDUR X28, [X0 + 0x3C]
	0x03DD40CC LDR W27, [X0 + 0x44]
	0x03DD40D0 MOV X0, X23
	0x03DD40D4 BL 0x266DB18
	0x03DD40D8 CBZ X26, 0x3DD5BF8
	0x03DD40DC LDR X8, [X26]
	0x03DD40E0 ADRP X10, 0x349000
	0x03DD40E4 LDR W29, [X0 + 0x44]
	0x03DD40E8 LDUR X25, [X0 + 0x3C]
	0x03DD40EC LDRH W9, [X8 + 0x12E]
	0x03DD40F0 LDR X10, [X10 + 0xED0]
	0x03DD40F4 LDR X1, [X10]
	0x03DD40F8 CBZ X9, 0x3DD411C
	0x03DD40FC LDR X10, [X8 + 0xB0]
	0x03DD4100 ADD X10, X10, 0x8
	0x03DD4104 LDUR X11, [X10 - 0x8]
	0x03DD4108 CMP X11, X1
	0x03DD410C B.EQ 0x3DD46BC
	0x03DD4110 SUBS X9, X9, 0x1
	0x03DD4114 ADD X10, X10, 0x10
	0x03DD4118 B.NE 0x3DD4104
	0x03DD411C MOVZ W2, 0xD
	0x03DD4120 MOV X0, X26
	0x03DD4124 BL 0x1C5C788
	0x03DD4128 B 0x3DD46CC
	0x03DD412C LDR W9, [X10]
	0x03DD4130 ADD W9, W9, 0x3
	0x03DD4134 ADD X8, X8, W9, 0x4, SXTW
	0x03DD4138 ADD X0, X8, 0x138
	0x03DD413C LDP X8, X5, [X0]
	0x03DD4140 LDR W2, [X31 + 0x2C]
	0x03DD4144 MOVZ W1, 0x9
	0x03DD4148 MOVZ W27, 0x9
	0x03DD414C MOVK W1, 0x10000
	0x03DD4150 MOV X0, X25
	0x03DD4154 MOV V0.16B, V8.16B
	0x03DD4158 MOV V1.16B, V9.16B
	0x03DD415C MOV V2.16B, V10.16B
	0x03DD4160 MOV V3.16B, V11.16B
	0x03DD4164 MOV V4.16B, V15.16B
	0x03DD4168 MOV V5.16B, V14.16B
	0x03DD416C MOV V6.16B, V13.16B
	0x03DD4170 MOV V7.16B, V12.16B
	0x03DD4174 MOV W3, W20
	0x03DD4178 MOV X4, X29
	0x03DD417C MOVK W27, 0x10000
	0x03DD4180 BLR X8
	0x03DD4184 MOV W25, W0
	0x03DD4188 MOV X0, X22
	0x03DD418C MOV X1, X31
	0x03DD4190 BL 0x3DE89D4
	0x03DD4194 LDR X1, [X19]
	0x03DD4198 MOV X22, X0
	0x03DD419C MOV X0, X24
	0x03DD41A0 BL 0x266C4A0
	0x03DD41A4 LDR X1, [X19]
	0x03DD41A8 LDR V8, [X0 + 0x78]
	0x03DD41AC MOV X0, X23
	0x03DD41B0 BL 0x266C4A0
	0x03DD41B4 CBZ X22, 0x3DD5BF8
	0x03DD41B8 LDR X8, [X22]
	0x03DD41BC LDR V9, [X0 + 0x78]
	0x03DD41C0 LDR X1, [X26]
	0x03DD41C4 LDRH W9, [X8 + 0x12E]
	0x03DD41C8 CBZ X9, 0x3DD41EC
	0x03DD41CC LDR X10, [X8 + 0xB0]
	0x03DD41D0 ADD X10, X10, 0x8
	0x03DD41D4 LDUR X11, [X10 - 0x8]
	0x03DD41D8 CMP X11, X1
	0x03DD41DC B.EQ 0x3DD478C
	0x03DD41E0 SUBS X9, X9, 0x1
	0x03DD41E4 ADD X10, X10, 0x10
	0x03DD41E8 B.NE 0x3DD41D4
	0x03DD41EC MOV X0, X22
	0x03DD41F0 MOV W2, W31
	0x03DD41F4 BL 0x1C5C788
	0x03DD41F8 B 0x3DD4798
	0x03DD41FC LDR W9, [X10]
	0x03DD4200 ADD W9, W9, 0xD
	0x03DD4204 ADD X8, X8, W9, 0x4, SXTW
	0x03DD4208 ADD X0, X8, 0x138
	0x03DD420C LDP X8, X9, [X0]
	0x03DD4210 LDR W6, [X31 + 0x2C]
	0x03DD4214 LDR W7, [X31 + 0x20]
	0x03DD4218 MOVZ W10, 0x2
	0x03DD421C MOVK W10, 0x70000
	0x03DD4220 ADD W1, W10, 0x1
	0x03DD4224 MOV X0, X22
	0x03DD4228 MOV X2, X26
	0x03DD422C MOV X3, X24
	0x03DD4230 MOV X4, X27
	0x03DD4234 MOV X5, X23
	0x03DD4238 STP X20, X9, [X31]
	0x03DD423C BLR X8
	0x03DD4240 B 0x3DD47BC
	0x03DD4244 LDR W9, [X10]
	0x03DD4248 ADD W9, W9, 0x3
	0x03DD424C ADD X8, X8, W9, 0x4, SXTW
	0x03DD4250 ADD X0, X8, 0x138
	0x03DD4254 LDP X8, X5, [X0]
	0x03DD4258 LDR W2, [X31 + 0x2C]
	0x03DD425C LDR X4, [X31 + 0x20]
	0x03DD4260 ADD W1, W27, 0x8
	0x03DD4264 MOV X0, X26
	0x03DD4268 MOV V0.16B, V8.16B
	0x03DD426C MOV V1.16B, V9.16B
	0x03DD4270 MOV V2.16B, V10.16B
	0x03DD4274 MOV V3.16B, V11.16B
	0x03DD4278 MOV V4.16B, V15.16B
	0x03DD427C MOV V5.16B, V14.16B
	0x03DD4280 MOV V6.16B, V13.16B
	0x03DD4284 MOV V7.16B, V12.16B
	0x03DD4288 MOV W3, W20
	0x03DD428C BLR X8
	0x03DD4290 MOV W26, W0
	0x03DD4294 MOV X0, X22
	0x03DD4298 MOV X1, X31
	0x03DD429C BL 0x3DE89D4
	0x03DD42A0 LDR X1, [X19]
	0x03DD42A4 MOV X27, X0
	0x03DD42A8 MOV X0, X24
	0x03DD42AC BL 0x266DB18
	0x03DD42B0 LDR X1, [X19]
	0x03DD42B4 LDP S8, S9, [X0 + 0x64]
	0x03DD42B8 LDP S10, S11, [X0 + 0x6C]
	0x03DD42BC MOV X0, X23
	0x03DD42C0 BL 0x266DB18
	0x03DD42C4 CBZ X27, 0x3DD5BF8
	0x03DD42C8 LDR X8, [X27]
	0x03DD42CC LDP S13, S12, [X0 + 0x6C]
	0x03DD42D0 LDP S15, S14, [X0 + 0x64]
	0x03DD42D4 LDR X1, [X28]
	0x03DD42D8 LDRH W9, [X8 + 0x12E]
	0x03DD42DC CBZ X9, 0x3DD4300
	0x03DD42E0 LDR X10, [X8 + 0xB0]
	0x03DD42E4 ADD X10, X10, 0x8
	0x03DD42E8 LDUR X11, [X10 - 0x8]
	0x03DD42EC CMP X11, X1
	0x03DD42F0 B.EQ 0x3DD47C4
	0x03DD42F4 SUBS X9, X9, 0x1
	0x03DD42F8 ADD X10, X10, 0x10
	0x03DD42FC B.NE 0x3DD42E8
	0x03DD4300 MOVZ W2, 0x3
	0x03DD4304 MOV X0, X27
	0x03DD4308 MOV X25, X28
	0x03DD430C BL 0x1C5C788
	0x03DD4310 B 0x3DD47D8
	0x03DD4314 LDR W9, [X10]
	0x03DD4318 ADD W9, W9, 0x2
	0x03DD431C ADD X8, X8, W9, 0x4, SXTW
	0x03DD4320 ADD X0, X8, 0x138
	0x03DD4324 LDP X8, X7, [X0]
	0x03DD4328 LDR W4, [X31 + 0x2C]
	0x03DD432C MOVZ W9, 0x2
	0x03DD4330 MOVK W9, 0x70000
	0x03DD4334 ADD W1, W9, 0xB
	0x03DD4338 MOV X0, X26
	0x03DD433C MOV X2, X27
	0x03DD4340 MOV X3, X28
	0x03DD4344 MOV W5, W20
	0x03DD4348 MOV X6, X29
	0x03DD434C MOV W21, W4
	0x03DD4350 MOV X25, X29
	0x03DD4354 BLR X8
	0x03DD4358 MOV W26, W0
	0x03DD435C MOV X0, X22
	0x03DD4360 MOV X1, X31
	0x03DD4364 BL 0x3DE89D4
	0x03DD4368 LDR X1, [X19]
	0x03DD436C MOV X27, X0
	0x03DD4370 MOV X0, X24
	0x03DD4374 BL 0x266DB18
	0x03DD4378 LDR X1, [X19]
	0x03DD437C LDUR X28, [X0 + 0x7C]
	0x03DD4380 MOV X0, X23
	0x03DD4384 BL 0x266DB18
	0x03DD4388 CBZ X27, 0x3DD5BF8
	0x03DD438C LDR X8, [X27]
	0x03DD4390 ADRP X10, 0x349000
	0x03DD4394 LDUR X29, [X0 + 0x7C]
	0x03DD4398 LDRH W9, [X8 + 0x12E]
	0x03DD439C LDR X10, [X10 + 0xED0]
	0x03DD43A0 LDR X1, [X10]
	0x03DD43A4 CBZ X9, 0x3DD43C8
	0x03DD43A8 LDR X10, [X8 + 0xB0]
	0x03DD43AC ADD X10, X10, 0x8
	0x03DD43B0 LDUR X11, [X10 - 0x8]
	0x03DD43B4 CMP X11, X1
	0x03DD43B8 B.EQ 0x3DD48A8
	0x03DD43BC SUBS X9, X9, 0x1
	0x03DD43C0 ADD X10, X10, 0x10
	0x03DD43C4 B.NE 0x3DD43B0
	0x03DD43C8 MOVZ W2, 0x2
	0x03DD43CC MOV X0, X27
	0x03DD43D0 BL 0x1C5C788
	0x03DD43D4 B 0x3DD48B8
	0x03DD43D8 LDRSW X9, [X10]
	0x03DD43DC ADD X8, X8, X9, 0x4, LSL
	0x03DD43E0 ADD X0, X8, 0x138
	0x03DD43E4 LDP X8, X5, [X0]
	0x03DD43E8 LDR W2, [X31 + 0x2C]
	0x03DD43EC ADD W1, W27, 0x2
	0x03DD43F0 MOV X0, X26
	0x03DD43F4 MOV V0.16B, V8.16B
	0x03DD43F8 MOV V1.16B, V9.16B
	0x03DD43FC MOV W3, W20
	0x03DD4400 MOV X4, X29
	0x03DD4404 BLR X8
	0x03DD4408 MOV W26, W0
	0x03DD440C MOV X0, X22
	0x03DD4410 MOV X1, X31
	0x03DD4414 BL 0x3DE89D4
	0x03DD4418 LDR X1, [X19]
	0x03DD441C MOV X27, X0
	0x03DD4420 MOV X0, X24
	0x03DD4424 BL 0x266C920
	0x03DD4428 LDR X1, [X19]
	0x03DD442C LDR V8, [X0 + 0xC]
	0x03DD4430 MOV X0, X23
	0x03DD4434 BL 0x266C920
	0x03DD4438 CBZ X27, 0x3DD5BF8
	0x03DD443C LDR X8, [X27]
	0x03DD4440 LDR V9, [X0 + 0xC]
	0x03DD4444 LDR X1, [X28]
	0x03DD4448 LDRH W9, [X8 + 0x12E]
	0x03DD444C CBZ X9, 0x3DD4470
	0x03DD4450 LDR X10, [X8 + 0xB0]
	0x03DD4454 ADD X10, X10, 0x8
	0x03DD4458 LDUR X11, [X10 - 0x8]
	0x03DD445C CMP X11, X1
	0x03DD4460 B.EQ 0x3DD4970
	0x03DD4464 SUBS X9, X9, 0x1
	0x03DD4468 ADD X10, X10, 0x10
	0x03DD446C B.NE 0x3DD4458
	0x03DD4470 MOV X0, X27
	0x03DD4474 MOV W2, W31
	0x03DD4478 BL 0x1C5C788
	0x03DD447C B 0x3DD497C
	0x03DD4480 LDRSW X9, [X10]
	0x03DD4484 ADD X8, X8, X9, 0x4, LSL
	0x03DD4488 ADD X0, X8, 0x138
	0x03DD448C LDP X8, X5, [X0]
	0x03DD4490 LDR W2, [X31 + 0x2C]
	0x03DD4494 ADD W1, W28, 0x9
	0x03DD4498 MOV X0, X26
	0x03DD449C MOV V0.16B, V8.16B
	0x03DD44A0 MOV V1.16B, V9.16B
	0x03DD44A4 MOV W3, W20
	0x03DD44A8 MOV X4, X29
	0x03DD44AC BLR X8
	0x03DD44B0 MOV W26, W0
	0x03DD44B4 MOV X0, X22
	0x03DD44B8 MOV X1, X31
	0x03DD44BC BL 0x3DE89D4
	0x03DD44C0 LDR X1, [X19]
	0x03DD44C4 MOV X22, X0
	0x03DD44C8 MOV X0, X24
	0x03DD44CC BL 0x266C920
	0x03DD44D0 LDR X1, [X19]
	0x03DD44D4 LDR X24, [X0 + 0x28]
	0x03DD44D8 MOV X0, X23
	0x03DD44DC BL 0x266C920
	0x03DD44E0 CBZ X22, 0x3DD5BF8
	0x03DD44E4 LDR X8, [X22]
	0x03DD44E8 LDR X23, [X0 + 0x28]
	0x03DD44EC LDR X1, [X27]
	0x03DD44F0 ORR W19, W25, W26, 0x0
	0x03DD44F4 LDRH W9, [X8 + 0x12E]
	0x03DD44F8 CBZ X9, 0x3DD451C
	0x03DD44FC LDR X10, [X8 + 0xB0]
	0x03DD4500 ADD X10, X10, 0x8
	0x03DD4504 LDUR X11, [X10 - 0x8]
	0x03DD4508 CMP X11, X1
	0x03DD450C B.EQ 0x3DD4A2C
	0x03DD4510 SUBS X9, X9, 0x1
	0x03DD4514 ADD X10, X10, 0x10
	0x03DD4518 B.NE 0x3DD4504
	0x03DD451C MOVZ W2, 0x2
	0x03DD4520 MOV X0, X22
	0x03DD4524 BL 0x1C5C788
	0x03DD4528 B 0x3DD4A3C
	0x03DD452C LDR W9, [X10]
	0x03DD4530 ADD W9, W9, 0x2
	0x03DD4534 ADD X8, X8, W9, 0x4, SXTW
	0x03DD4538 ADD X0, X8, 0x138
	0x03DD453C LDP X8, X7, [X0]
	0x03DD4540 LDR W4, [X31 + 0x2C]
	0x03DD4544 MOVZ W9, 0x3
	0x03DD4548 MOVK W9, 0x20000
	0x03DD454C ADD W1, W9, 0x10
	0x03DD4550 MOV X0, X26
	0x03DD4554 MOV X2, X27
	0x03DD4558 MOV X3, X28
	0x03DD455C MOV W5, W20
	0x03DD4560 MOV X6, X29
	0x03DD4564 MOV W25, W4
	0x03DD4568 MOV W21, W20
	0x03DD456C MOV X20, X29
	0x03DD4570 BLR X8
	0x03DD4574 MOV W26, W0
	0x03DD4578 MOV X0, X22
	0x03DD457C MOV X1, X31
	0x03DD4580 BL 0x3DE89D4
	0x03DD4584 LDR X1, [X19]
	0x03DD4588 MOV X27, X0
	0x03DD458C MOV X0, X24
	0x03DD4590 BL 0x266C920
	0x03DD4594 LDR X1, [X19]
	0x03DD4598 LDUR X28, [X0 + 0x54]
	0x03DD459C MOV X0, X23
	0x03DD45A0 BL 0x266C920
	0x03DD45A4 CBZ X27, 0x3DD5BF8
	0x03DD45A8 LDR X8, [X27]
	0x03DD45AC ADRP X10, 0x349000
	0x03DD45B0 LDUR X29, [X0 + 0x54]
	0x03DD45B4 LDRH W9, [X8 + 0x12E]
	0x03DD45B8 LDR X10, [X10 + 0xED0]
	0x03DD45BC LDR X1, [X10]
	0x03DD45C0 CBZ X9, 0x3DD45E4
	0x03DD45C4 LDR X10, [X8 + 0xB0]
	0x03DD45C8 ADD X10, X10, 0x8
	0x03DD45CC LDUR X11, [X10 - 0x8]
	0x03DD45D0 CMP X11, X1
	0x03DD45D4 B.EQ 0x3DD4A54
	0x03DD45D8 SUBS X9, X9, 0x1
	0x03DD45DC ADD X10, X10, 0x10
	0x03DD45E0 B.NE 0x3DD45CC
	0x03DD45E4 MOVZ W2, 0x2
	0x03DD45E8 MOV X0, X27
	0x03DD45EC BL 0x1C5C788
	0x03DD45F0 B 0x3DD4A64
	0x03DD45F4 LDR W9, [X10]
	0x03DD45F8 ADD W9, W9, 0x2
	0x03DD45FC ADD X8, X8, W9, 0x4, SXTW
	0x03DD4600 ADD X0, X8, 0x138
	0x03DD4604 LDP X8, X7, [X0]
	0x03DD4608 LDR W4, [X31 + 0x2C]
	0x03DD460C MOVZ W9, 0x3
	0x03DD4610 MOVK W9, 0x20000
	0x03DD4614 ADD W1, W9, 0x18
	0x03DD4618 MOV X0, X26
	0x03DD461C MOV X2, X27
	0x03DD4620 MOV X3, X28
	0x03DD4624 MOV W5, W20
	0x03DD4628 MOV X6, X29
	0x03DD462C MOV W25, W4
	0x03DD4630 MOV W21, W20
	0x03DD4634 MOV X20, X29
	0x03DD4638 BLR X8
	0x03DD463C MOV W26, W0
	0x03DD4640 MOV X0, X22
	0x03DD4644 MOV X1, X31
	0x03DD4648 BL 0x3DE89D4
	0x03DD464C LDR X1, [X19]
	0x03DD4650 MOV X27, X0
	0x03DD4654 MOV X0, X24
	0x03DD4658 BL 0x266C920
	0x03DD465C LDR X1, [X19]
	0x03DD4660 LDUR X28, [X0 + 0x94]
	0x03DD4664 MOV X0, X23
	0x03DD4668 BL 0x266C920
	0x03DD466C CBZ X27, 0x3DD5BF8
	0x03DD4670 LDR X8, [X27]
	0x03DD4674 ADRP X10, 0x349000
	0x03DD4678 LDUR X29, [X0 + 0x94]
	0x03DD467C LDRH W9, [X8 + 0x12E]
	0x03DD4680 LDR X10, [X10 + 0xED0]
	0x03DD4684 LDR X1, [X10]
	0x03DD4688 CBZ X9, 0x3DD46AC
	0x03DD468C LDR X10, [X8 + 0xB0]
	0x03DD4690 ADD X10, X10, 0x8
	0x03DD4694 LDUR X11, [X10 - 0x8]
	0x03DD4698 CMP X11, X1
	0x03DD469C B.EQ 0x3DD4B20
	0x03DD46A0 SUBS X9, X9, 0x1
	0x03DD46A4 ADD X10, X10, 0x10
	0x03DD46A8 B.NE 0x3DD4694
	0x03DD46AC MOVZ W2, 0x2
	0x03DD46B0 MOV X0, X27
	0x03DD46B4 BL 0x1C5C788
	0x03DD46B8 B 0x3DD4B30
	0x03DD46BC LDR W9, [X10]
	0x03DD46C0 ADD W9, W9, 0xD
	0x03DD46C4 ADD X8, X8, W9, 0x4, SXTW
	0x03DD46C8 ADD X0, X8, 0x138
	0x03DD46CC LDP X8, X9, [X0]
	0x03DD46D0 LDR W6, [X31 + 0x2C]
	0x03DD46D4 MOVZ W10, 0x2
	0x03DD46D8 MOVK W10, 0x70000
	0x03DD46DC ADD W1, W10, 0x1
	0x03DD46E0 MOV X0, X26
	0x03DD46E4 MOV X2, X28
	0x03DD46E8 MOV X3, X27
	0x03DD46EC MOV X4, X25
	0x03DD46F0 MOV X5, X29
	0x03DD46F4 MOV W7, W20
	0x03DD46F8 STP X19, X9, [X31]
	0x03DD46FC BLR X8
	0x03DD4700 MOV W26, W0
	0x03DD4704 MOV X0, X22
	0x03DD4708 MOV X1, X31
	0x03DD470C BL 0x3DE89D4
	0x03DD4710 ADRP X25, 0x391000
	0x03DD4714 LDR X25, [X25 + 0x360]
	0x03DD4718 MOV X27, X0
	0x03DD471C MOV X0, X24
	0x03DD4720 LDR X1, [X25]
	0x03DD4724 BL 0x266DB18
	0x03DD4728 LDR X1, [X25]
	0x03DD472C LDR X28, [X0 + 0x48]
	0x03DD4730 MOV X0, X23
	0x03DD4734 BL 0x266DB18
	0x03DD4738 CBZ X27, 0x3DD5BF8
	0x03DD473C LDR X8, [X27]
	0x03DD4740 ADRP X10, 0x349000
	0x03DD4744 LDR X25, [X0 + 0x48]
	0x03DD4748 MOV X29, X19
	0x03DD474C LDRH W9, [X8 + 0x12E]
	0x03DD4750 LDR X10, [X10 + 0xED0]
	0x03DD4754 LDR X1, [X10]
	0x03DD4758 CBZ X9, 0x3DD477C
	0x03DD475C LDR X10, [X8 + 0xB0]
	0x03DD4760 ADD X10, X10, 0x8
	0x03DD4764 LDUR X11, [X10 - 0x8]
	0x03DD4768 CMP X11, X1
	0x03DD476C B.EQ 0x3DD4BEC
	0x03DD4770 SUBS X9, X9, 0x1
	0x03DD4774 ADD X10, X10, 0x10
	0x03DD4778 B.NE 0x3DD4764
	0x03DD477C MOVZ W2, 0xE
	0x03DD4780 MOV X0, X27
	0x03DD4784 BL 0x1C5C788
	0x03DD4788 B 0x3DD4BFC
	0x03DD478C LDRSW X9, [X10]
	0x03DD4790 ADD X8, X8, X9, 0x4, LSL
	0x03DD4794 ADD X0, X8, 0x138
	0x03DD4798 LDP X8, X5, [X0]
	0x03DD479C LDR W2, [X31 + 0x2C]
	0x03DD47A0 ADD W1, W27, 0x1
	0x03DD47A4 MOV X0, X22
	0x03DD47A8 MOV V0.16B, V8.16B
	0x03DD47AC MOV V1.16B, V9.16B
	0x03DD47B0 MOV W3, W20
	0x03DD47B4 MOV X4, X29
	0x03DD47B8 BLR X8
	0x03DD47BC ORR W0, W25, W0, 0x0
	0x03DD47C0 B 0x3DD5A78
	0x03DD47C4 LDR W9, [X10]
	0x03DD47C8 MOV X25, X28
	0x03DD47CC ADD W9, W9, 0x3
	0x03DD47D0 ADD X8, X8, W9, 0x4, SXTW
	0x03DD47D4 ADD X0, X8, 0x138
	0x03DD47D8 LDP X8, X5, [X0]
	0x03DD47DC LDR W2, [X31 + 0x2C]
	0x03DD47E0 LDR X4, [X31 + 0x20]
	0x03DD47E4 MOVZ W9, 0x2
	0x03DD47E8 MOVK W9, 0x70000
	0x03DD47EC ADD W1, W9, 0x4
	0x03DD47F0 MOV X0, X27
	0x03DD47F4 MOV V0.16B, V8.16B
	0x03DD47F8 MOV V1.16B, V9.16B
	0x03DD47FC MOV V2.16B, V10.16B
	0x03DD4800 MOV V3.16B, V11.16B
	0x03DD4804 MOV V4.16B, V15.16B
	0x03DD4808 MOV V5.16B, V14.16B
	0x03DD480C MOV V6.16B, V13.16B
	0x03DD4810 MOV V7.16B, V12.16B
	0x03DD4814 MOV W3, W20
	0x03DD4818 BLR X8
	0x03DD481C MOV W28, W0
	0x03DD4820 MOV X0, X22
	0x03DD4824 MOV X1, X31
	0x03DD4828 BL 0x3DE89D4
	0x03DD482C LDR X1, [X19]
	0x03DD4830 MOV X27, X0
	0x03DD4834 MOV X0, X24
	0x03DD4838 BL 0x266DB18
	0x03DD483C LDR X1, [X19]
	0x03DD4840 LDP S8, S9, [X0 + 0x84]
	0x03DD4844 LDP S10, S11, [X0 + 0x8C]
	0x03DD4848 MOV X0, X23
	0x03DD484C BL 0x266DB18
	0x03DD4850 CBZ X27, 0x3DD5BF8
	0x03DD4854 LDR X8, [X27]
	0x03DD4858 LDP S13, S12, [X0 + 0x8C]
	0x03DD485C LDP S15, S14, [X0 + 0x84]
	0x03DD4860 LDR X1, [X25]
	0x03DD4864 LDRH W9, [X8 + 0x12E]
	0x03DD4868 ORR W10, W29, W26, 0x0
	0x03DD486C LDR X29, [X31 + 0x20]
	0x03DD4870 ORR W19, W10, W28, 0x0
	0x03DD4874 CBZ X9, 0x3DD4898
	0x03DD4878 LDR X10, [X8 + 0xB0]
	0x03DD487C ADD X10, X10, 0x8
	0x03DD4880 LDUR X11, [X10 - 0x8]
	0x03DD4884 CMP X11, X1
	0x03DD4888 B.EQ 0x3DD4CF4
	0x03DD488C SUBS X9, X9, 0x1
	0x03DD4890 ADD X10, X10, 0x10
	0x03DD4894 B.NE 0x3DD4880
	0x03DD4898 MOVZ W2, 0x3
	0x03DD489C MOV X0, X27
	0x03DD48A0 BL 0x1C5C788
	0x03DD48A4 B 0x3DD4D04
	0x03DD48A8 LDR W9, [X10]
	0x03DD48AC ADD W9, W9, 0x2
	0x03DD48B0 ADD X8, X8, W9, 0x4, SXTW
	0x03DD48B4 ADD X0, X8, 0x138
	0x03DD48B8 LDP X8, X7, [X0]
	0x03DD48BC MOVZ W9, 0x2
	0x03DD48C0 MOVK W9, 0x70000
	0x03DD48C4 ADD W1, W9, 0x6
	0x03DD48C8 MOV X0, X27
	0x03DD48CC MOV X2, X28
	0x03DD48D0 MOV X3, X29
	0x03DD48D4 MOV W4, W21
	0x03DD48D8 MOV W5, W20
	0x03DD48DC MOV X6, X25
	0x03DD48E0 BLR X8
	0x03DD48E4 MOV W27, W0
	0x03DD48E8 MOV X0, X22
	0x03DD48EC MOV X1, X31
	0x03DD48F0 BL 0x3DE89D4
	0x03DD48F4 LDR X1, [X19]
	0x03DD48F8 MOV X22, X0
	0x03DD48FC MOV X0, X24
	0x03DD4900 BL 0x266DB18
	0x03DD4904 LDR X1, [X19]
	0x03DD4908 LDUR X24, [X0 + 0x74]
	0x03DD490C MOV X0, X23
	0x03DD4910 BL 0x266DB18
	0x03DD4914 CBZ X22, 0x3DD5BF8
	0x03DD4918 LDR X8, [X22]
	0x03DD491C ADRP X10, 0x349000
	0x03DD4920 LDUR X23, [X0 + 0x74]
	0x03DD4924 LDRH W9, [X8 + 0x12E]
	0x03DD4928 LDR X10, [X10 + 0xED0]
	0x03DD492C LDR X1, [X10]
	0x03DD4930 LDR W10, [X31 + 0x20]
	0x03DD4934 ORR W10, W10, W26, 0x0
	0x03DD4938 ORR W19, W10, W27, 0x0
	0x03DD493C CBZ X9, 0x3DD4960
	0x03DD4940 LDR X10, [X8 + 0xB0]
	0x03DD4944 ADD X10, X10, 0x8
	0x03DD4948 LDUR X11, [X10 - 0x8]
	0x03DD494C CMP X11, X1
	0x03DD4950 B.EQ 0x3DD4D54
	0x03DD4954 SUBS X9, X9, 0x1
	0x03DD4958 ADD X10, X10, 0x10
	0x03DD495C B.NE 0x3DD4948
	0x03DD4960 MOVZ W2, 0x2
	0x03DD4964 MOV X0, X22
	0x03DD4968 BL 0x1C5C788
	0x03DD496C B 0x3DD4D64
	0x03DD4970 LDRSW X9, [X10]
	0x03DD4974 ADD X8, X8, X9, 0x4, LSL
	0x03DD4978 ADD X0, X8, 0x138
	0x03DD497C LDP X8, X5, [X0]
	0x03DD4980 LDR W2, [X31 + 0x2C]
	0x03DD4984 MOVZ W1, 0x3
	0x03DD4988 MOVK W1, 0x20000
	0x03DD498C MOV X0, X27
	0x03DD4990 MOV V0.16B, V8.16B
	0x03DD4994 MOV V1.16B, V9.16B
	0x03DD4998 MOV W3, W20
	0x03DD499C MOV X4, X29
	0x03DD49A0 BLR X8
	0x03DD49A4 MOV W27, W0
	0x03DD49A8 MOV X0, X22
	0x03DD49AC MOV X1, X31
	0x03DD49B0 BL 0x3DE89D4
	0x03DD49B4 LDR X1, [X19]
	0x03DD49B8 MOV X22, X0
	0x03DD49BC MOV X0, X24
	0x03DD49C0 BL 0x266C920
	0x03DD49C4 LDR X1, [X19]
	0x03DD49C8 LDR V8, [X0 + 0x10]
	0x03DD49CC MOV X0, X23
	0x03DD49D0 BL 0x266C920
	0x03DD49D4 CBZ X22, 0x3DD5BF8
	0x03DD49D8 LDR X8, [X22]
	0x03DD49DC LDR V9, [X0 + 0x10]
	0x03DD49E0 LDR X1, [X28]
	0x03DD49E4 ORR W10, W25, W26, 0x0
	0x03DD49E8 LDRH W9, [X8 + 0x12E]
	0x03DD49EC MOVZ W23, 0x3
	0x03DD49F0 ORR W19, W10, W27, 0x0
	0x03DD49F4 MOVK W23, 0x20000
	0x03DD49F8 CBZ X9, 0x3DD4A1C
	0x03DD49FC LDR X10, [X8 + 0xB0]
	0x03DD4A00 ADD X10, X10, 0x8
	0x03DD4A04 LDUR X11, [X10 - 0x8]
	0x03DD4A08 CMP X11, X1
	0x03DD4A0C B.EQ 0x3DD4D90
	0x03DD4A10 SUBS X9, X9, 0x1
	0x03DD4A14 ADD X10, X10, 0x10
	0x03DD4A18 B.NE 0x3DD4A04
	0x03DD4A1C MOV X0, X22
	0x03DD4A20 MOV W2, W31
	0x03DD4A24 BL 0x1C5C788
	0x03DD4A28 B 0x3DD4D9C
	0x03DD4A2C LDR W9, [X10]
	0x03DD4A30 ADD W9, W9, 0x2
	0x03DD4A34 ADD X8, X8, W9, 0x4, SXTW
	0x03DD4A38 ADD X0, X8, 0x138
	0x03DD4A3C LDP X8, X7, [X0]
	0x03DD4A40 ADD W1, W28, 0x6
	0x03DD4A44 MOV X0, X22
	0x03DD4A48 MOV X2, X24
	0x03DD4A4C MOV X3, X23
	0x03DD4A50 B 0x3DD4E74
	0x03DD4A54 LDR W9, [X10]
	0x03DD4A58 ADD W9, W9, 0x2
	0x03DD4A5C ADD X8, X8, W9, 0x4, SXTW
	0x03DD4A60 ADD X0, X8, 0x138
	0x03DD4A64 LDP X8, X7, [X0]
	0x03DD4A68 MOVZ W9, 0x3
	0x03DD4A6C MOVK W9, 0x20000
	0x03DD4A70 ADD W1, W9, 0xE
	0x03DD4A74 MOV X0, X27
	0x03DD4A78 MOV X2, X28
	0x03DD4A7C MOV X3, X29
	0x03DD4A80 MOV W4, W25
	0x03DD4A84 MOV W5, W21
	0x03DD4A88 MOV X6, X20
	0x03DD4A8C MOV X28, X20
	0x03DD4A90 BLR X8
	0x03DD4A94 MOV W27, W0
	0x03DD4A98 MOV X0, X22
	0x03DD4A9C MOV X1, X31
	0x03DD4AA0 BL 0x3DE89D4
	0x03DD4AA4 LDR X1, [X19]
	0x03DD4AA8 MOV X22, X0
	0x03DD4AAC MOV X0, X24
	0x03DD4AB0 BL 0x266C920
	0x03DD4AB4 LDR X1, [X19]
	0x03DD4AB8 LDUR X24, [X0 + 0x5C]
	0x03DD4ABC MOV X0, X23
	0x03DD4AC0 BL 0x266C920
	0x03DD4AC4 CBZ X22, 0x3DD5BF8
	0x03DD4AC8 LDR X8, [X22]
	0x03DD4ACC ADRP X10, 0x349000
	0x03DD4AD0 LDUR X23, [X0 + 0x5C]
	0x03DD4AD4 LDRH W9, [X8 + 0x12E]
	0x03DD4AD8 LDR X10, [X10 + 0xED0]
	0x03DD4ADC LDR X1, [X10]
	0x03DD4AE0 LDR W10, [X31 + 0x20]
	0x03DD4AE4 ORR W10, W10, W26, 0x0
	0x03DD4AE8 ORR W19, W10, W27, 0x0
	0x03DD4AEC CBZ X9, 0x3DD4B10
	0x03DD4AF0 LDR X10, [X8 + 0xB0]
	0x03DD4AF4 ADD X10, X10, 0x8
	0x03DD4AF8 LDUR X11, [X10 - 0x8]
	0x03DD4AFC CMP X11, X1
	0x03DD4B00 B.EQ 0x3DD4DC4
	0x03DD4B04 SUBS X9, X9, 0x1
	0x03DD4B08 ADD X10, X10, 0x10
	0x03DD4B0C B.NE 0x3DD4AF8
	0x03DD4B10 MOVZ W2, 0x2
	0x03DD4B14 MOV X0, X22
	0x03DD4B18 BL 0x1C5C788
	0x03DD4B1C B 0x3DD4DD4
	0x03DD4B20 LDR W9, [X10]
	0x03DD4B24 ADD W9, W9, 0x2
	0x03DD4B28 ADD X8, X8, W9, 0x4, SXTW
	0x03DD4B2C ADD X0, X8, 0x138
	0x03DD4B30 LDP X8, X7, [X0]
	0x03DD4B34 MOVZ W9, 0x3
	0x03DD4B38 MOVK W9, 0x20000
	0x03DD4B3C ADD W1, W9, 0x16
	0x03DD4B40 MOV X0, X27
	0x03DD4B44 MOV X2, X28
	0x03DD4B48 MOV X3, X29
	0x03DD4B4C MOV W4, W25
	0x03DD4B50 MOV W5, W21
	0x03DD4B54 MOV X6, X20
	0x03DD4B58 MOV X28, X20
	0x03DD4B5C BLR X8
	0x03DD4B60 MOV W27, W0
	0x03DD4B64 MOV X0, X22
	0x03DD4B68 MOV X1, X31
	0x03DD4B6C BL 0x3DE89D4
	0x03DD4B70 LDR X1, [X19]
	0x03DD4B74 MOV X22, X0
	0x03DD4B78 MOV X0, X24
	0x03DD4B7C BL 0x266C920
	0x03DD4B80 LDR X1, [X19]
	0x03DD4B84 LDUR X24, [X0 + 0x9C]
	0x03DD4B88 MOV X0, X23
	0x03DD4B8C BL 0x266C920
	0x03DD4B90 CBZ X22, 0x3DD5BF8
	0x03DD4B94 LDR X8, [X22]
	0x03DD4B98 ADRP X10, 0x349000
	0x03DD4B9C LDUR X23, [X0 + 0x9C]
	0x03DD4BA0 LDRH W9, [X8 + 0x12E]
	0x03DD4BA4 LDR X10, [X10 + 0xED0]
	0x03DD4BA8 LDR X1, [X10]
	0x03DD4BAC LDR W10, [X31 + 0x20]
	0x03DD4BB0 ORR W10, W10, W26, 0x0
	0x03DD4BB4 ORR W19, W10, W27, 0x0
	0x03DD4BB8 CBZ X9, 0x3DD4BDC
	0x03DD4BBC LDR X10, [X8 + 0xB0]
	0x03DD4BC0 ADD X10, X10, 0x8
	0x03DD4BC4 LDUR X11, [X10 - 0x8]
	0x03DD4BC8 CMP X11, X1
	0x03DD4BCC B.EQ 0x3DD4DE8
	0x03DD4BD0 SUBS X9, X9, 0x1
	0x03DD4BD4 ADD X10, X10, 0x10
	0x03DD4BD8 B.NE 0x3DD4BC4
	0x03DD4BDC MOVZ W2, 0x2
	0x03DD4BE0 MOV X0, X22
	0x03DD4BE4 BL 0x1C5C788
	0x03DD4BE8 B 0x3DD4DF8
	0x03DD4BEC LDR W9, [X10]
	0x03DD4BF0 ADD W9, W9, 0xE
	0x03DD4BF4 ADD X8, X8, W9, 0x4, SXTW
	0x03DD4BF8 ADD X0, X8, 0x138
	0x03DD4BFC LDP X8, X7, [X0]
	0x03DD4C00 LDR W4, [X31 + 0x2C]
	0x03DD4C04 MOVZ W9, 0x2
	0x03DD4C08 MOVK W9, 0x70000
	0x03DD4C0C ADD W1, W9, 0x2
	0x03DD4C10 MOV X0, X27
	0x03DD4C14 MOV X2, X28
	0x03DD4C18 MOV X3, X25
	0x03DD4C1C MOV W5, W20
	0x03DD4C20 MOV X6, X29
	0x03DD4C24 BLR X8
	0x03DD4C28 MOV W25, W0
	0x03DD4C2C MOV X0, X22
	0x03DD4C30 MOV X1, X31
	0x03DD4C34 BL 0x3DE89D4
	0x03DD4C38 ADRP X19, 0x391000
	0x03DD4C3C LDR X19, [X19 + 0x360]
	0x03DD4C40 MOV X22, X0
	0x03DD4C44 MOV X0, X24
	0x03DD4C48 LDR X1, [X19]
	0x03DD4C4C BL 0x266DB18
	0x03DD4C50 LDR W8, [X0 + 0x60]
	0x03DD4C54 LDR V0, [X0 + 0x5]
	0x03DD4C58 LDR X1, [X19]
	0x03DD4C5C MOV X0, X23
	0x03DD4C60 STR W8, [X31 + 0x220]
	0x03DD4C64 STR V0, [X31 + 0x21]
	0x03DD4C68 BL 0x266DB18
	0x03DD4C6C LDR W8, [X0 + 0x60]
	0x03DD4C70 LDR V0, [X0 + 0x5]
	0x03DD4C74 STR W8, [X31 + 0x200]
	0x03DD4C78 STR V0, [X31 + 0x1F]
	0x03DD4C7C CBZ X22, 0x3DD5BF8
	0x03DD4C80 LDR V0, [X31 + 0x21]
	0x03DD4C84 LDR W8, [X31 + 0x220]
	0x03DD4C88 LDR V1, [X31 + 0x1F]
	0x03DD4C8C LDR W9, [X31 + 0x200]
	0x03DD4C90 STR V0, [X31 + 0x5]
	0x03DD4C94 STR W8, [X31 + 0x60]
	0x03DD4C98 STR V1, [X31 + 0x3]
	0x03DD4C9C STR W9, [X31 + 0x40]
	0x03DD4CA0 LDR X8, [X22]
	0x03DD4CA4 ADRP X10, 0x349000
	0x03DD4CA8 LDRH W9, [X8 + 0x12E]
	0x03DD4CAC LDR X10, [X10 + 0xED0]
	0x03DD4CB0 LDR X1, [X10]
	0x03DD4CB4 LDR W10, [X31 + 0x20]
	0x03DD4CB8 ORR W10, W10, W26, 0x0
	0x03DD4CBC ORR W19, W10, W25, 0x0
	0x03DD4CC0 CBZ X9, 0x3DD4CE4
	0x03DD4CC4 LDR X10, [X8 + 0xB0]
	0x03DD4CC8 ADD X10, X10, 0x8
	0x03DD4CCC LDUR X11, [X10 - 0x8]
	0x03DD4CD0 CMP X11, X1
	0x03DD4CD4 B.EQ 0x3DD4E24
	0x03DD4CD8 SUBS X9, X9, 0x1
	0x03DD4CDC ADD X10, X10, 0x10
	0x03DD4CE0 B.NE 0x3DD4CCC
	0x03DD4CE4 MOVZ W2, 0xF
	0x03DD4CE8 MOV X0, X22
	0x03DD4CEC BL 0x1C5C788
	0x03DD4CF0 B 0x3DD4E34
	0x03DD4CF4 LDR W9, [X10]
	0x03DD4CF8 ADD W9, W9, 0x3
	0x03DD4CFC ADD X8, X8, W9, 0x4, SXTW
	0x03DD4D00 ADD X0, X8, 0x138
	0x03DD4D04 LDP X8, X5, [X0]
	0x03DD4D08 LDR W2, [X31 + 0x2C]
	0x03DD4D0C MOVZ W9, 0x2
	0x03DD4D10 MOVK W9, 0x70000
	0x03DD4D14 ADD W1, W9, 0x7
	0x03DD4D18 MOV X0, X27
	0x03DD4D1C MOV V0.16B, V8.16B
	0x03DD4D20 MOV V1.16B, V9.16B
	0x03DD4D24 MOV V2.16B, V10.16B
	0x03DD4D28 MOV V3.16B, V11.16B
	0x03DD4D2C MOV V4.16B, V15.16B
	0x03DD4D30 MOV V5.16B, V14.16B
	0x03DD4D34 MOV V6.16B, V13.16B
	0x03DD4D38 MOV V7.16B, V12.16B
	0x03DD4D3C MOV W3, W20
	0x03DD4D40 MOV X4, X29
	0x03DD4D44 BLR X8
	0x03DD4D48 ORR W8, W19, W0, 0x0
	0x03DD4D4C TBNZ X8, 0x0, 0x3DD5A40
	0x03DD4D50 B 0x3DD5A74
	0x03DD4D54 LDR W9, [X10]
	0x03DD4D58 ADD W9, W9, 0x2
	0x03DD4D5C ADD X8, X8, W9, 0x4, SXTW
	0x03DD4D60 ADD X0, X8, 0x138
	0x03DD4D64 LDP X8, X7, [X0]
	0x03DD4D68 MOVZ W9, 0x2
	0x03DD4D6C MOVK W9, 0x70000
	0x03DD4D70 ADD W1, W9, 0x5
	0x03DD4D74 MOV X0, X22
	0x03DD4D78 MOV X2, X24
	0x03DD4D7C MOV X3, X23
	0x03DD4D80 MOV W4, W21
	0x03DD4D84 MOV W5, W20
	0x03DD4D88 MOV X6, X25
	0x03DD4D8C B 0x3DD4E80
	0x03DD4D90 LDRSW X9, [X10]
	0x03DD4D94 ADD X8, X8, X9, 0x4, LSL
	0x03DD4D98 ADD X0, X8, 0x138
	0x03DD4D9C LDP X8, X5, [X0]
	0x03DD4DA0 LDR W2, [X31 + 0x2C]
	0x03DD4DA4 ADD W1, W23, 0x1
	0x03DD4DA8 MOV X0, X22
	0x03DD4DAC MOV V0.16B, V8.16B
	0x03DD4DB0 MOV V1.16B, V9.16B
	0x03DD4DB4 MOV W3, W20
	0x03DD4DB8 MOV X4, X29
	0x03DD4DBC BLR X8
	0x03DD4DC0 B 0x3DD4E84
	0x03DD4DC4 LDR W9, [X10]
	0x03DD4DC8 ADD W9, W9, 0x2
	0x03DD4DCC ADD X8, X8, W9, 0x4, SXTW
	0x03DD4DD0 ADD X0, X8, 0x138
	0x03DD4DD4 LDP X8, X7, [X0]
	0x03DD4DD8 MOVZ W9, 0x3
	0x03DD4DDC MOVK W9, 0x20000
	0x03DD4DE0 ADD W1, W9, 0xF
	0x03DD4DE4 B 0x3DD4E08
	0x03DD4DE8 LDR W9, [X10]
	0x03DD4DEC ADD W9, W9, 0x2
	0x03DD4DF0 ADD X8, X8, W9, 0x4, SXTW
	0x03DD4DF4 ADD X0, X8, 0x138
	0x03DD4DF8 LDP X8, X7, [X0]
	0x03DD4DFC MOVZ W9, 0x3
	0x03DD4E00 MOVK W9, 0x20000
	0x03DD4E04 ADD W1, W9, 0x17
	0x03DD4E08 MOV X0, X22
	0x03DD4E0C MOV X2, X24
	0x03DD4E10 MOV X3, X23
	0x03DD4E14 MOV W4, W25
	0x03DD4E18 MOV W5, W21
	0x03DD4E1C MOV X6, X28
	0x03DD4E20 B 0x3DD4E80
	0x03DD4E24 LDR W9, [X10]
	0x03DD4E28 ADD W9, W9, 0xF
	0x03DD4E2C ADD X8, X8, W9, 0x4, SXTW
	0x03DD4E30 ADD X0, X8, 0x138
	0x03DD4E34 LDR V0, [X31 + 0x5]
	0x03DD4E38 LDR W9, [X31 + 0x60]
	0x03DD4E3C LDR V1, [X31 + 0x3]
	0x03DD4E40 LDR W10, [X31 + 0x40]
	0x03DD4E44 LDR X8, [X0]
	0x03DD4E48 STR V0, [X31 + 0x25]
	0x03DD4E4C STR W9, [X31 + 0x260]
	0x03DD4E50 STR V1, [X31 + 0x23]
	0x03DD4E54 STR W10, [X31 + 0x240]
	0x03DD4E58 LDR X7, [X0 + 0x8]
	0x03DD4E5C MOVZ W9, 0x2
	0x03DD4E60 MOVK W9, 0x70000
	0x03DD4E64 ADD W1, W9, 0x3
	0x03DD4E68 ADD X2, X31, 0x250
	0x03DD4E6C ADD X3, X31, 0x230
	0x03DD4E70 MOV X0, X22
	0x03DD4E74 LDR W4, [X31 + 0x2C]
	0x03DD4E78 MOV W5, W20
	0x03DD4E7C MOV X6, X29
	0x03DD4E80 BLR X8
	0x03DD4E84 ORR W0, W19, W0, 0x0
	0x03DD4E88 B 0x3DD5A78
	0x03DD4E8C LDR W9, [X10]
	0x03DD4E90 ADD W9, W9, 0x3
	0x03DD4E94 ADD X8, X8, W9, 0x4, SXTW
	0x03DD4E98 ADD X0, X8, 0x138
	0x03DD4E9C LDP X8, X5, [X0]
	0x03DD4EA0 MOVZ W1, 0x70000
	0x03DD4EA4 B 0x3DD5A08
	0x03DD4EA8 LDR W9, [X10]
	0x03DD4EAC ADD W9, W9, 0x5
	0x03DD4EB0 ADD X8, X8, W9, 0x4, SXTW
	0x03DD4EB4 ADD X0, X8, 0x138
	0x03DD4EB8 LDP V0, V1, [X31 + 0x1D0]
	0x03DD4EBC LDP V2, V3, [X31 + 0x1B0]
	0x03DD4EC0 LDR X8, [X0]
	0x03DD4EC4 MOVZ W9, 0x2
	0x03DD4EC8 STP V0, V1, [X31 + 0x250]
	0x03DD4ECC STP V2, V3, [X31 + 0x230]
	0x03DD4ED0 LDR X7, [X0 + 0x8]
	0x03DD4ED4 MOVK W9, 0x70000
	0x03DD4ED8 SUB W1, W9, 0x1
	0x03DD4EDC B 0x3DD57AC
	0x03DD4EE0 LDR W9, [X10]
	0x03DD4EE4 ADD W9, W9, 0xD
	0x03DD4EE8 ADD X8, X8, W9, 0x4, SXTW
	0x03DD4EEC ADD X0, X8, 0x138
	0x03DD4EF0 LDP X8, X9, [X0]
	0x03DD4EF4 MOVZ W1, 0x2
	0x03DD4EF8 MOVK W1, 0x70000
	0x03DD4EFC B 0x3DD4F20
	0x03DD4F00 LDR W9, [X10]
	0x03DD4F04 ADD W9, W9, 0xD
	0x03DD4F08 ADD X8, X8, W9, 0x4, SXTW
	0x03DD4F0C ADD X0, X8, 0x138
	0x03DD4F10 LDP X8, X9, [X0]
	0x03DD4F14 MOVZ W10, 0x2
	0x03DD4F18 MOVK W10, 0x70000
	0x03DD4F1C ORR W1, W10, 0x1
	0x03DD4F20 STR X9, [X31 + 0x8]
	0x03DD4F24 MOV X0, X22
	0x03DD4F28 MOV X2, X25
	0x03DD4F2C MOV X3, X24
	0x03DD4F30 STR X29, [X31]
	0x03DD4F34 B 0x3DD5820
	0x03DD4F38 LDR W9, [X10]
	0x03DD4F3C ADD W9, W9, 0xE
	0x03DD4F40 ADD X8, X8, W9, 0x4, SXTW
	0x03DD4F44 ADD X0, X8, 0x138
	0x03DD4F48 LDP X8, X7, [X0]
	0x03DD4F4C MOVZ W9, 0x2
	0x03DD4F50 MOVK W9, 0x70000
	0x03DD4F54 ADD W1, W9, 0x2
	0x03DD4F58 B 0x3DD59A8
	0x03DD4F5C LDR W9, [X10]
	0x03DD4F60 ADD W9, W9, 0xF
	0x03DD4F64 ADD X8, X8, W9, 0x4, SXTW
	0x03DD4F68 ADD X0, X8, 0x138
	0x03DD4F6C LDR V0, [X31 + 0x19]
	0x03DD4F70 LDR W9, [X31 + 0x1A0]
	0x03DD4F74 LDR V1, [X31 + 0x17]
	0x03DD4F78 LDR W10, [X31 + 0x180]
	0x03DD4F7C LDR X8, [X0]
	0x03DD4F80 STR V0, [X31 + 0x25]
	0x03DD4F84 STR W9, [X31 + 0x260]
	0x03DD4F88 STR V1, [X31 + 0x23]
	0x03DD4F8C STR W10, [X31 + 0x240]
	0x03DD4F90 LDR X7, [X0 + 0x8]
	0x03DD4F94 MOVZ W9, 0x2
	0x03DD4F98 MOVK W9, 0x70000
	0x03DD4F9C ADD W1, W9, 0x3
	0x03DD4FA0 B 0x3DD57AC
	0x03DD4FA4 LDR W9, [X10]
	0x03DD4FA8 ADD W9, W9, 0x3
	0x03DD4FAC ADD X8, X8, W9, 0x4, SXTW
	0x03DD4FB0 ADD X0, X8, 0x138
	0x03DD4FB4 LDP X8, X5, [X0]
	0x03DD4FB8 MOVZ W9, 0x2
	0x03DD4FBC MOVK W9, 0x70000
	0x03DD4FC0 ORR W1, W9, 0x4
	0x03DD4FC4 B 0x3DD5A08
	0x03DD4FC8 LDR W9, [X10]
	0x03DD4FCC ADD W9, W9, 0x2
	0x03DD4FD0 ADD X8, X8, W9, 0x4, SXTW
	0x03DD4FD4 ADD X0, X8, 0x138
	0x03DD4FD8 LDP X8, X7, [X0]
	0x03DD4FDC MOVZ W10, 0x2
	0x03DD4FE0 MOVZ W9, 0x5
	0x03DD4FE4 MOVK W10, 0x70000
	0x03DD4FE8 B 0x3DD55D4
	0x03DD4FEC LDR W9, [X10]
	0x03DD4FF0 ADD W9, W9, 0x2
	0x03DD4FF4 ADD X8, X8, W9, 0x4, SXTW
	0x03DD4FF8 ADD X0, X8, 0x138
	0x03DD4FFC LDP X8, X7, [X0]
	0x03DD5000 MOVZ W9, 0x2
	0x03DD5004 MOVK W9, 0x70000
	0x03DD5008 B 0x3DD53E0
	0x03DD500C LDR W9, [X10]
	0x03DD5010 ADD W9, W9, 0x3
	0x03DD5014 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5018 ADD X0, X8, 0x138
	0x03DD501C LDP X8, X5, [X0]
	0x03DD5020 MOVZ W9, 0x2
	0x03DD5024 MOVK W9, 0x70000
	0x03DD5028 ADD W1, W9, 0x7
	0x03DD502C B 0x3DD5A08
	0x03DD5030 LDR W9, [X10]
	0x03DD5034 ADD W9, W9, 0x3
	0x03DD5038 ADD X8, X8, W9, 0x4, SXTW
	0x03DD503C ADD X0, X8, 0x138
	0x03DD5040 LDP X8, X5, [X0]
	0x03DD5044 MOVZ W9, 0x2
	0x03DD5048 MOVK W9, 0x70000
	0x03DD504C ORR W1, W9, 0x8
	0x03DD5050 B 0x3DD5A08
	0x03DD5054 LDR W9, [X10]
	0x03DD5058 ADD W9, W9, 0x3
	0x03DD505C ADD X8, X8, W9, 0x4, SXTW
	0x03DD5060 ADD X0, X8, 0x138
	0x03DD5064 LDP X8, X5, [X0]
	0x03DD5068 MOVZ W10, 0x2
	0x03DD506C MOVZ W9, 0x9
	0x03DD5070 MOVK W10, 0x70000
	0x03DD5074 ORR W1, W10, W9, 0x0
	0x03DD5078 B 0x3DD5A08
	0x03DD507C LDR W9, [X10]
	0x03DD5080 ADD W9, W9, 0x2
	0x03DD5084 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5088 ADD X0, X8, 0x138
	0x03DD508C LDP X8, X7, [X0]
	0x03DD5090 MOVZ W9, 0x2
	0x03DD5094 MOVK W9, 0x70000
	0x03DD5098 ADD W1, W9, 0xA
	0x03DD509C B 0x3DD59A8
	0x03DD50A0 LDR W9, [X10]
	0x03DD50A4 ADD W9, W9, 0x2
	0x03DD50A8 ADD X8, X8, W9, 0x4, SXTW
	0x03DD50AC ADD X0, X8, 0x138
	0x03DD50B0 LDP X8, X7, [X0]
	0x03DD50B4 MOVZ W9, 0x2
	0x03DD50B8 MOVK W9, 0x70000
	0x03DD50BC B 0x3DD548C
	0x03DD50C0 LDRSW X9, [X10]
	0x03DD50C4 ADD X8, X8, X9, 0x4, LSL
	0x03DD50C8 ADD X0, X8, 0x138
	0x03DD50CC LDP X6, X5, [X0]
	0x03DD50D0 MOVZ W8, 0x2
	0x03DD50D4 MOVK W8, 0x70000
	0x03DD50D8 ORR W1, W8, 0xC
	0x03DD50DC B 0x3DD5B30
	0x03DD50E0 LDR W9, [X10]
	0x03DD50E4 ADD W9, W9, 0x4
	0x03DD50E8 ADD X8, X8, W9, 0x4, SXTW
	0x03DD50EC ADD X0, X8, 0x138
	0x03DD50F0 LDP X8, X7, [X0]
	0x03DD50F4 MOVZ W10, 0x2
	0x03DD50F8 MOVZ W9, 0xD
	0x03DD50FC MOVK W10, 0x70000
	0x03DD5100 ORR W1, W10, W9, 0x0
	0x03DD5104 B 0x3DD5BB0
	0x03DD5108 LDR W9, [X10]
	0x03DD510C ADD W9, W9, 0xB
	0x03DD5110 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5114 ADD X0, X8, 0x138
	0x03DD5118 LDR V0, [X31 + 0x15]
	0x03DD511C LDR X9, [X31 + 0x160]
	0x03DD5120 LDR V1, [X31 + 0x13]
	0x03DD5124 LDR X10, [X31 + 0x140]
	0x03DD5128 LDR X8, [X0]
	0x03DD512C STR V0, [X31 + 0x25]
	0x03DD5130 STR X9, [X31 + 0x260]
	0x03DD5134 STR V1, [X31 + 0x23]
	0x03DD5138 STR X10, [X31 + 0x240]
	0x03DD513C LDR X7, [X0 + 0x8]
	0x03DD5140 ADD X2, X31, 0x250
	0x03DD5144 ADD X3, X31, 0x230
	0x03DD5148 MOVZ W1, 0x50000
	0x03DD514C B 0x3DD5230
	0x03DD5150 LDR W9, [X10]
	0x03DD5154 ADD W9, W9, 0x9
	0x03DD5158 ADD X8, X8, W9, 0x4, SXTW
	0x03DD515C ADD X0, X8, 0x138
	0x03DD5160 LDP X8, X9, [X0]
	0x03DD5164 LDR W6, [X31 + 0x2C]
	0x03DD5168 ORR W10, W31, 0x1FFF8
	0x03DD516C ADD W1, W28, W10
	0x03DD5170 MOV X0, X25
	0x03DD5174 MOV X2, X24
	0x03DD5178 MOV X3, X26
	0x03DD517C MOV X4, X27
	0x03DD5180 MOV X5, X23
	0x03DD5184 MOV W7, W20
	0x03DD5188 STP X29, X9, [X31]
	0x03DD518C BLR X8
	0x03DD5190 TBZ X0, 0x0, 0x3DD5A74
	0x03DD5194 B 0x3DD5248
	0x03DD5198 LDR W9, [X10]
	0x03DD519C ADD W9, W9, 0xC
	0x03DD51A0 ADD X8, X8, W9, 0x4, SXTW
	0x03DD51A4 ADD X0, X8, 0x138
	0x03DD51A8 LDR V0, [X31 + 0xD]
	0x03DD51AC LDR W9, [X31 + 0xE0]
	0x03DD51B0 LDR V1, [X31 + 0xB]
	0x03DD51B4 LDR W10, [X31 + 0xC0]
	0x03DD51B8 LDR X8, [X0]
	0x03DD51BC STR V0, [X31 + 0x25]
	0x03DD51C0 STR W9, [X31 + 0x260]
	0x03DD51C4 STR V1, [X31 + 0x23]
	0x03DD51C8 STR W10, [X31 + 0x240]
	0x03DD51CC LDR X7, [X0 + 0x8]
	0x03DD51D0 MOVZ W1, 0x2
	0x03DD51D4 ADD X2, X31, 0x250
	0x03DD51D8 ADD X3, X31, 0x230
	0x03DD51DC MOVK W1, 0x50000
	0x03DD51E0 B 0x3DD5230
	0x03DD51E4 LDR W9, [X10]
	0x03DD51E8 ADD W9, W9, 0xA
	0x03DD51EC ADD X8, X8, W9, 0x4, SXTW
	0x03DD51F0 ADD X0, X8, 0x138
	0x03DD51F4 LDR V0, [X31 + 0x9]
	0x03DD51F8 LDR X9, [X31 + 0xA0]
	0x03DD51FC LDR V1, [X31 + 0x7]
	0x03DD5200 LDR X10, [X31 + 0x80]
	0x03DD5204 LDR X8, [X0]
	0x03DD5208 STR V0, [X31 + 0x25]
	0x03DD520C STR X9, [X31 + 0x260]
	0x03DD5210 STR V1, [X31 + 0x23]
	0x03DD5214 STR X10, [X31 + 0x240]
	0x03DD5218 LDR X7, [X0 + 0x8]
	0x03DD521C MOVZ W9, 0x2
	0x03DD5220 MOVK W9, 0x50000
	0x03DD5224 ORR W1, W9, 0x1
	0x03DD5228 ADD X2, X31, 0x250
	0x03DD522C ADD X3, X31, 0x230
	0x03DD5230 LDR W4, [X31 + 0x2C]
	0x03DD5234 MOV X0, X25
	0x03DD5238 MOV W5, W20
	0x03DD523C MOV X6, X29
	0x03DD5240 BLR X8
	0x03DD5244 TBZ X0, 0x0, 0x3DD5A74
	0x03DD5248 MOV X0, X22
	0x03DD524C MOV X1, X31
	0x03DD5250 BL 0x3DEC0D4
	0x03DD5254 TBNZ X0, 0x0, 0x3DD5A6C
	0x03DD5258 MOV X0, X22
	0x03DD525C MOV X1, X31
	0x03DD5260 BL 0x3DEC0D4
	0x03DD5264 ORR W1, W0, 0x1
	0x03DD5268 B 0x3DD5A60
	0x03DD526C LDR W9, [X10]
	0x03DD5270 ADD W9, W9, 0x4
	0x03DD5274 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5278 ADD X0, X8, 0x138
	0x03DD527C LDP X8, X7, [X0]
	0x03DD5280 MOVZ W1, 0x20000
	0x03DD5284 B 0x3DD5BB0
	0x03DD5288 LDR W9, [X10]
	0x03DD528C ADD W9, W9, 0x3
	0x03DD5290 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5294 ADD X0, X8, 0x138
	0x03DD5298 LDP X8, X5, [X0]
	0x03DD529C MOVZ W1, 0x10000
	0x03DD52A0 B 0x3DD5A08
	0x03DD52A4 LDR W9, [X10]
	0x03DD52A8 ADD W9, W9, 0x4
	0x03DD52AC ADD X8, X8, W9, 0x4, SXTW
	0x03DD52B0 ADD X0, X8, 0x138
	0x03DD52B4 LDP X8, X7, [X0]
	0x03DD52B8 SUB W1, W28, 0x8
	0x03DD52BC B 0x3DD5BB0
	0x03DD52C0 LDR W9, [X10]
	0x03DD52C4 ADD W9, W9, 0x4
	0x03DD52C8 ADD X8, X8, W9, 0x4, SXTW
	0x03DD52CC ADD X0, X8, 0x138
	0x03DD52D0 LDP X8, X7, [X0]
	0x03DD52D4 MOVZ W10, 0x9
	0x03DD52D8 MOVZ W9, 0xFFF8
	0x03DD52DC MOVK W10, 0x10000
	0x03DD52E0 ADD W1, W10, W9
	0x03DD52E4 B 0x3DD5BB0
	0x03DD52E8 LDR W9, [X10]
	0x03DD52EC ADD W9, W9, 0x4
	0x03DD52F0 ADD X8, X8, W9, 0x4, SXTW
	0x03DD52F4 ADD X0, X8, 0x138
	0x03DD52F8 LDP X8, X7, [X0]
	0x03DD52FC MOVZ W9, 0x3
	0x03DD5300 MOVK W9, 0x20000
	0x03DD5304 B 0x3DD589C
	0x03DD5308 LDRSW X9, [X10]
	0x03DD530C ADD X8, X8, X9, 0x4, LSL
	0x03DD5310 ADD X0, X8, 0x138
	0x03DD5314 LDP X6, X5, [X0]
	0x03DD5318 MOVZ W1, 0x3
	0x03DD531C MOVK W1, 0x20000
	0x03DD5320 B 0x3DD5B30
	0x03DD5324 LDRSW X9, [X10]
	0x03DD5328 ADD X8, X8, X9, 0x4, LSL
	0x03DD532C ADD X0, X8, 0x138
	0x03DD5330 LDP X6, X5, [X0]
	0x03DD5334 MOVZ W8, 0x3
	0x03DD5338 MOVK W8, 0x20000
	0x03DD533C B 0x3DD5938
	0x03DD5340 LDRSW X9, [X10]
	0x03DD5344 ADD X8, X8, X9, 0x4, LSL
	0x03DD5348 ADD X0, X8, 0x138
	0x03DD534C LDP X6, X5, [X0]
	0x03DD5350 MOVZ W8, 0x3
	0x03DD5354 MOVK W8, 0x20000
	0x03DD5358 ADD W1, W8, 0x2
	0x03DD535C B 0x3DD5B30
	0x03DD5360 LDRSW X9, [X10]
	0x03DD5364 ADD X8, X8, X9, 0x4, LSL
	0x03DD5368 ADD X0, X8, 0x138
	0x03DD536C LDP X6, X5, [X0]
	0x03DD5370 MOVZ W8, 0x3
	0x03DD5374 MOVK W8, 0x20000
	0x03DD5378 ADD W1, W8, 0x3
	0x03DD537C B 0x3DD5B30
	0x03DD5380 LDR W9, [X10]
	0x03DD5384 ADD W9, W9, 0x2
	0x03DD5388 ADD X8, X8, W9, 0x4, SXTW
	0x03DD538C ADD X0, X8, 0x138
	0x03DD5390 LDP X8, X7, [X0]
	0x03DD5394 MOVZ W9, 0x3
	0x03DD5398 MOVK W9, 0x20000
	0x03DD539C B 0x3DD59A4
	0x03DD53A0 LDR W9, [X10]
	0x03DD53A4 ADD W9, W9, 0x4
	0x03DD53A8 ADD X8, X8, W9, 0x4, SXTW
	0x03DD53AC ADD X0, X8, 0x138
	0x03DD53B0 LDP X8, X7, [X0]
	0x03DD53B4 MOVZ W9, 0x3
	0x03DD53B8 MOVK W9, 0x20000
	0x03DD53BC ADD W1, W9, 0x5
	0x03DD53C0 B 0x3DD5BB0
	0x03DD53C4 LDR W9, [X10]
	0x03DD53C8 ADD W9, W9, 0x2
	0x03DD53CC ADD X8, X8, W9, 0x4, SXTW
	0x03DD53D0 ADD X0, X8, 0x138
	0x03DD53D4 LDP X8, X7, [X0]
	0x03DD53D8 MOVZ W9, 0x3
	0x03DD53DC MOVK W9, 0x20000
	0x03DD53E0 ADD W1, W9, 0x6
	0x03DD53E4 B 0x3DD59A8
	0x03DD53E8 LDR W9, [X10]
	0x03DD53EC ADD W9, W9, 0x4
	0x03DD53F0 ADD X8, X8, W9, 0x4, SXTW
	0x03DD53F4 ADD X0, X8, 0x138
	0x03DD53F8 LDP X8, X7, [X0]
	0x03DD53FC MOVZ W9, 0x3
	0x03DD5400 MOVK W9, 0x20000
	0x03DD5404 ADD W1, W9, 0x7
	0x03DD5408 B 0x3DD5BB0
	0x03DD540C LDRSW X9, [X10]
	0x03DD5410 ADD X8, X8, X9, 0x4, LSL
	0x03DD5414 ADD X0, X8, 0x138
	0x03DD5418 LDP X6, X5, [X0]
	0x03DD541C MOVZ W8, 0x3
	0x03DD5420 MOVK W8, 0x20000
	0x03DD5424 ORR W1, W8, 0x8
	0x03DD5428 B 0x3DD5B30
	0x03DD542C LDRSW X9, [X10]
	0x03DD5430 ADD X8, X8, X9, 0x4, LSL
	0x03DD5434 ADD X0, X8, 0x138
	0x03DD5438 LDP X6, X5, [X0]
	0x03DD543C MOVZ W8, 0x3
	0x03DD5440 MOVK W8, 0x20000
	0x03DD5444 ADD W1, W8, 0x9
	0x03DD5448 B 0x3DD5B30
	0x03DD544C LDR W9, [X10]
	0x03DD5450 ADD W9, W9, 0x4
	0x03DD5454 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5458 ADD X0, X8, 0x138
	0x03DD545C LDP X8, X7, [X0]
	0x03DD5460 MOVZ W9, 0x3
	0x03DD5464 MOVK W9, 0x20000
	0x03DD5468 ADD W1, W9, 0xA
	0x03DD546C B 0x3DD5BB0
	0x03DD5470 LDR W9, [X10]
	0x03DD5474 ADD W9, W9, 0x2
	0x03DD5478 ADD X8, X8, W9, 0x4, SXTW
	0x03DD547C ADD X0, X8, 0x138
	0x03DD5480 LDP X8, X7, [X0]
	0x03DD5484 MOVZ W9, 0x3
	0x03DD5488 MOVK W9, 0x20000
	0x03DD548C ADD W1, W9, 0xB
	0x03DD5490 B 0x3DD59A8
	0x03DD5494 LDR W9, [X10]
	0x03DD5498 ADD W9, W9, 0x4
	0x03DD549C ADD X8, X8, W9, 0x4, SXTW
	0x03DD54A0 ADD X0, X8, 0x138
	0x03DD54A4 LDP X8, X7, [X0]
	0x03DD54A8 MOVZ W9, 0x3
	0x03DD54AC MOVK W9, 0x20000
	0x03DD54B0 ORR W1, W9, 0xC
	0x03DD54B4 B 0x3DD5BB0
	0x03DD54B8 LDR W9, [X10]
	0x03DD54BC ADD W9, W9, 0x2
	0x03DD54C0 ADD X8, X8, W9, 0x4, SXTW
	0x03DD54C4 ADD X0, X8, 0x138
	0x03DD54C8 LDP X8, X7, [X0]
	0x03DD54CC MOVZ W9, 0x3
	0x03DD54D0 MOVK W9, 0x20000
	0x03DD54D4 ADD W1, W9, 0xD
	0x03DD54D8 B 0x3DD59A8
	0x03DD54DC LDR W9, [X10]
	0x03DD54E0 ADD W9, W9, 0x2
	0x03DD54E4 ADD X8, X8, W9, 0x4, SXTW
	0x03DD54E8 ADD X0, X8, 0x138
	0x03DD54EC LDP X8, X7, [X0]
	0x03DD54F0 MOVZ W9, 0x3
	0x03DD54F4 MOVK W9, 0x20000
	0x03DD54F8 ADD W1, W9, 0xE
	0x03DD54FC B 0x3DD59A8
	0x03DD5500 LDR W9, [X10]
	0x03DD5504 ADD W9, W9, 0x2
	0x03DD5508 ADD X8, X8, W9, 0x4, SXTW
	0x03DD550C ADD X0, X8, 0x138
	0x03DD5510 LDP X8, X7, [X0]
	0x03DD5514 MOVZ W9, 0x3
	0x03DD5518 MOVK W9, 0x20000
	0x03DD551C ADD W1, W9, 0xF
	0x03DD5520 B 0x3DD59A8
	0x03DD5524 LDR W9, [X10]
	0x03DD5528 ADD W9, W9, 0x2
	0x03DD552C ADD X8, X8, W9, 0x4, SXTW
	0x03DD5530 ADD X0, X8, 0x138
	0x03DD5534 LDP X8, X7, [X0]
	0x03DD5538 MOVZ W9, 0x3
	0x03DD553C MOVK W9, 0x20000
	0x03DD5540 ORR W1, W9, 0x10
	0x03DD5544 B 0x3DD59A8
	0x03DD5548 LDR W9, [X10]
	0x03DD554C ADD W9, W9, 0x2
	0x03DD5550 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5554 ADD X0, X8, 0x138
	0x03DD5558 LDP X8, X7, [X0]
	0x03DD555C MOVZ W9, 0x3
	0x03DD5560 MOVK W9, 0x20000
	0x03DD5564 ADD W1, W9, 0x11
	0x03DD5568 B 0x3DD59A8
	0x03DD556C LDR W9, [X10]
	0x03DD5570 ADD W9, W9, 0x2
	0x03DD5574 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5578 ADD X0, X8, 0x138
	0x03DD557C LDP X8, X7, [X0]
	0x03DD5580 MOVZ W9, 0x3
	0x03DD5584 MOVK W9, 0x20000
	0x03DD5588 ADD W1, W9, 0x12
	0x03DD558C B 0x3DD59A8
	0x03DD5590 LDR W9, [X10]
	0x03DD5594 ADD W9, W9, 0x2
	0x03DD5598 ADD X8, X8, W9, 0x4, SXTW
	0x03DD559C ADD X0, X8, 0x138
	0x03DD55A0 LDP X8, X7, [X0]
	0x03DD55A4 MOVZ W9, 0x3
	0x03DD55A8 MOVK W9, 0x20000
	0x03DD55AC ADD W1, W9, 0x13
	0x03DD55B0 B 0x3DD59A8
	0x03DD55B4 LDR W9, [X10]
	0x03DD55B8 ADD W9, W9, 0x2
	0x03DD55BC ADD X8, X8, W9, 0x4, SXTW
	0x03DD55C0 ADD X0, X8, 0x138
	0x03DD55C4 LDP X8, X7, [X0]
	0x03DD55C8 MOVZ W10, 0x3
	0x03DD55CC MOVZ W9, 0x14
	0x03DD55D0 MOVK W10, 0x20000
	0x03DD55D4 ORR W1, W10, W9, 0x0
	0x03DD55D8 B 0x3DD59A8
	0x03DD55DC LDR W9, [X10]
	0x03DD55E0 ADD W9, W9, 0x2
	0x03DD55E4 ADD X8, X8, W9, 0x4, SXTW
	0x03DD55E8 ADD X0, X8, 0x138
	0x03DD55EC LDP X8, X7, [X0]
	0x03DD55F0 MOVZ W9, 0x3
	0x03DD55F4 MOVK W9, 0x20000
	0x03DD55F8 ADD W1, W9, 0x15
	0x03DD55FC B 0x3DD59A8
	0x03DD5600 LDR W9, [X10]
	0x03DD5604 ADD W9, W9, 0x2
	0x03DD5608 ADD X8, X8, W9, 0x4, SXTW
	0x03DD560C ADD X0, X8, 0x138
	0x03DD5610 LDP X8, X7, [X0]
	0x03DD5614 MOVZ W9, 0x3
	0x03DD5618 MOVK W9, 0x20000
	0x03DD561C ADD W1, W9, 0x16
	0x03DD5620 B 0x3DD59A8
	0x03DD5624 LDR W9, [X10]
	0x03DD5628 ADD W9, W9, 0x2
	0x03DD562C ADD X8, X8, W9, 0x4, SXTW
	0x03DD5630 ADD X0, X8, 0x138
	0x03DD5634 LDP X8, X7, [X0]
	0x03DD5638 MOVZ W9, 0x3
	0x03DD563C MOVK W9, 0x20000
	0x03DD5640 ADD W1, W9, 0x17
	0x03DD5644 B 0x3DD59A8
	0x03DD5648 LDR W9, [X10]
	0x03DD564C ADD W9, W9, 0x2
	0x03DD5650 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5654 ADD X0, X8, 0x138
	0x03DD5658 LDP X8, X7, [X0]
	0x03DD565C MOVZ W9, 0x3
	0x03DD5660 MOVK W9, 0x20000
	0x03DD5664 ORR W1, W9, 0x18
	0x03DD5668 B 0x3DD59A8
	0x03DD566C LDR W9, [X10]
	0x03DD5670 ADD W9, W9, 0x2
	0x03DD5674 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5678 ADD X0, X8, 0x138
	0x03DD567C LDP X8, X7, [X0]
	0x03DD5680 MOVZ W9, 0x3
	0x03DD5684 MOVK W9, 0x20000
	0x03DD5688 ADD W1, W9, 0x19
	0x03DD568C B 0x3DD59A8
	0x03DD5690 LDR W9, [X10]
	0x03DD5694 ADD W9, W9, 0x4
	0x03DD5698 ADD X8, X8, W9, 0x4, SXTW
	0x03DD569C ADD X0, X8, 0x138
	0x03DD56A0 LDP X8, X7, [X0]
	0x03DD56A4 MOVZ W9, 0x3
	0x03DD56A8 MOVK W9, 0x20000
	0x03DD56AC ADD W1, W9, 0x1A
	0x03DD56B0 B 0x3DD5BB0
	0x03DD56B4 LDR W9, [X10]
	0x03DD56B8 ADD W9, W9, 0x2
	0x03DD56BC ADD X8, X8, W9, 0x4, SXTW
	0x03DD56C0 ADD X0, X8, 0x138
	0x03DD56C4 LDP X8, X7, [X0]
	0x03DD56C8 MOVZ W9, 0x3
	0x03DD56CC MOVK W9, 0x20000
	0x03DD56D0 ADD W1, W9, 0x1B
	0x03DD56D4 B 0x3DD59A8
	0x03DD56D8 LDR W9, [X10]
	0x03DD56DC ADD W9, W9, 0x2
	0x03DD56E0 ADD X8, X8, W9, 0x4, SXTW
	0x03DD56E4 ADD X0, X8, 0x138
	0x03DD56E8 LDP X8, X7, [X0]
	0x03DD56EC MOVZ W9, 0x3
	0x03DD56F0 MOVK W9, 0x20000
	0x03DD56F4 ORR W1, W9, 0x1C
	0x03DD56F8 B 0x3DD59A8
	0x03DD56FC LDR W9, [X10]
	0x03DD5700 ADD W9, W9, 0x2
	0x03DD5704 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5708 ADD X0, X8, 0x138
	0x03DD570C LDP X8, X7, [X0]
	0x03DD5710 MOVZ W9, 0x3
	0x03DD5714 MOVK W9, 0x20000
	0x03DD5718 ADD W1, W9, 0x1D
	0x03DD571C B 0x3DD59A8
	0x03DD5720 LDR W9, [X10]
	0x03DD5724 ADD W9, W9, 0x2
	0x03DD5728 ADD X8, X8, W9, 0x4, SXTW
	0x03DD572C ADD X0, X8, 0x138
	0x03DD5730 LDP X8, X7, [X0]
	0x03DD5734 MOVZ W9, 0x9
	0x03DD5738 MOVK W9, 0x10000
	0x03DD573C SUB W1, W9, 0x8
	0x03DD5740 B 0x3DD59A8
	0x03DD5744 LDR W9, [X10]
	0x03DD5748 ADD W9, W9, 0x2
	0x03DD574C ADD X8, X8, W9, 0x4, SXTW
	0x03DD5750 ADD X0, X8, 0x138
	0x03DD5754 LDP X8, X7, [X0]
	0x03DD5758 MOVZ W9, 0x9
	0x03DD575C MOVK W9, 0x10000
	0x03DD5760 SUB W1, W9, 0x7
	0x03DD5764 B 0x3DD59A8
	0x03DD5768 LDR W9, [X10]
	0x03DD576C ADD W9, W9, 0x8
	0x03DD5770 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5774 ADD X0, X8, 0x138
	0x03DD5778 LDR V0, [X31 + 0x11]
	0x03DD577C LDUR V1, [X23 + 0x2C]
	0x03DD5780 LDR V2, [X31 + 0xF]
	0x03DD5784 LDUR V3, [X23 + 0xC]
	0x03DD5788 LDR X8, [X0]
	0x03DD578C STR V0, [X31 + 0x25]
	0x03DD5790 STUR V1, [X19 + 0x6C]
	0x03DD5794 STR V2, [X31 + 0x23]
	0x03DD5798 STUR V3, [X19 + 0x4C]
	0x03DD579C LDR X7, [X0 + 0x8]
	0x03DD57A0 MOVZ W9, 0x9
	0x03DD57A4 MOVK W9, 0x10000
	0x03DD57A8 SUB W1, W9, 0x6
	0x03DD57AC LDR W4, [X31 + 0x2C]
	0x03DD57B0 ADD X2, X31, 0x250
	0x03DD57B4 ADD X3, X31, 0x230
	0x03DD57B8 MOV X0, X22
	0x03DD57BC MOV W5, W20
	0x03DD57C0 MOV X6, X29
	0x03DD57C4 BLR X8
	0x03DD57C8 B 0x3DD5A78
	0x03DD57CC LDR W9, [X10]
	0x03DD57D0 ADD W9, W9, 0x7
	0x03DD57D4 ADD X8, X8, W9, 0x4, SXTW
	0x03DD57D8 ADD X0, X8, 0x138
	0x03DD57DC LDP X8, X7, [X0]
	0x03DD57E0 MOVZ W9, 0x9
	0x03DD57E4 MOVK W9, 0x10000
	0x03DD57E8 SUB W1, W9, 0x5
	0x03DD57EC B 0x3DD59A8
	0x03DD57F0 LDR W9, [X10]
	0x03DD57F4 ADD W9, W9, 0x6
	0x03DD57F8 ADD X8, X8, W9, 0x4, SXTW
	0x03DD57FC ADD X0, X8, 0x138
	0x03DD5800 LDP X8, X9, [X0]
	0x03DD5804 MOVZ W10, 0x9
	0x03DD5808 MOVK W10, 0x10000
	0x03DD580C SUB W1, W10, 0x4
	0x03DD5810 STP X29, X9, [X31]
	0x03DD5814 MOV X0, X22
	0x03DD5818 MOV X2, X24
	0x03DD581C MOV X3, X25
	0x03DD5820 LDR W6, [X31 + 0x2C]
	0x03DD5824 MOV X4, X26
	0x03DD5828 MOV X5, X23
	0x03DD582C MOV W7, W20
	0x03DD5830 BLR X8
	0x03DD5834 B 0x3DD5A78
	0x03DD5838 LDR W9, [X10]
	0x03DD583C ADD W9, W9, 0x4
	0x03DD5840 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5844 ADD X0, X8, 0x138
	0x03DD5848 LDP X8, X7, [X0]
	0x03DD584C MOVZ W9, 0x9
	0x03DD5850 MOVK W9, 0x10000
	0x03DD5854 SUB W1, W9, 0x3
	0x03DD5858 B 0x3DD5BB0
	0x03DD585C LDR W9, [X10]
	0x03DD5860 ADD W9, W9, 0x2
	0x03DD5864 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5868 ADD X0, X8, 0x138
	0x03DD586C LDP X8, X7, [X0]
	0x03DD5870 MOVZ W9, 0x9
	0x03DD5874 MOVK W9, 0x10000
	0x03DD5878 SUB W1, W9, 0x2
	0x03DD587C B 0x3DD59A8
	0x03DD5880 LDR W9, [X10]
	0x03DD5884 ADD W9, W9, 0x4
	0x03DD5888 ADD X8, X8, W9, 0x4, SXTW
	0x03DD588C ADD X0, X8, 0x138
	0x03DD5890 LDP X8, X7, [X0]
	0x03DD5894 MOVZ W9, 0x9
	0x03DD5898 MOVK W9, 0x10000
	0x03DD589C SUB W1, W9, 0x1
	0x03DD58A0 B 0x3DD5BB0
	0x03DD58A4 LDR W9, [X10]
	0x03DD58A8 ADD W9, W9, 0x3
	0x03DD58AC ADD X8, X8, W9, 0x4, SXTW
	0x03DD58B0 ADD X0, X8, 0x138
	0x03DD58B4 LDP X6, X5, [X0]
	0x03DD58B8 LDR W2, [X31 + 0x2C]
	0x03DD58BC MOVZ W1, 0x9
	0x03DD58C0 MOVK W1, 0x10000
	0x03DD58C4 MOV V0.16B, V8.16B
	0x03DD58C8 MOV V1.16B, V9.16B
	0x03DD58CC MOV V2.16B, V10.16B
	0x03DD58D0 MOV V3.16B, V11.16B
	0x03DD58D4 MOV V4.16B, V15.16B
	0x03DD58D8 MOV V5.16B, V14.16B
	0x03DD58DC MOV V6.16B, V13.16B
	0x03DD58E0 MOV V7.16B, V12.16B
	0x03DD58E4 MOV X0, X22
	0x03DD58E8 MOV W3, W20
	0x03DD58EC MOV X4, X29
	0x03DD58F0 ADD X31, X31, 0x270
	0x03DD58F4 LDP X20, X19, [X31 + 0x90]
	0x03DD58F8 LDP X22, X21, [X31 + 0x80]
	0x03DD58FC LDP X24, X23, [X31 + 0x70]
	0x03DD5900 LDP X26, X25, [X31 + 0x60]
	0x03DD5904 LDP X28, X27, [X31 + 0x50]
	0x03DD5908 LDP X29, X30, [X31 + 0x40]
	0x03DD590C LDP D9, D8, [X31 + 0x30]
	0x03DD5910 LDP D11, D10, [X31 + 0x20]
	0x03DD5914 LDP D13, D12, [X31 + 0x10]
	0x03DD5918 LDP D15, D14, [X31], #0xA0
	0x03DD591C BR X6
	0x03DD5920 LDRSW X9, [X10]
	0x03DD5924 ADD X8, X8, X9, 0x4, LSL
	0x03DD5928 ADD X0, X8, 0x138
	0x03DD592C LDP X6, X5, [X0]
	0x03DD5930 MOVZ W8, 0x9
	0x03DD5934 MOVK W8, 0x10000
	0x03DD5938 ADD W1, W8, 0x1
	0x03DD593C B 0x3DD5B30
	0x03DD5940 LDR W9, [X10]
	0x03DD5944 ADD W9, W9, 0x4
	0x03DD5948 ADD X8, X8, W9, 0x4, SXTW
	0x03DD594C ADD X0, X8, 0x138
	0x03DD5950 LDP X8, X7, [X0]
	0x03DD5954 MOVZ W9, 0x9
	0x03DD5958 MOVK W9, 0x10000
	0x03DD595C ORR W1, W9, 0x2
	0x03DD5960 B 0x3DD5BB0
	0x03DD5964 LDR W9, [X10]
	0x03DD5968 ADD W9, W9, 0x4
	0x03DD596C ADD X8, X8, W9, 0x4, SXTW
	0x03DD5970 ADD X0, X8, 0x138
	0x03DD5974 LDP X8, X7, [X0]
	0x03DD5978 MOVZ W9, 0x9
	0x03DD597C MOVK W9, 0x10000
	0x03DD5980 ADD W1, W9, 0x3
	0x03DD5984 B 0x3DD5BB0
	0x03DD5988 LDR W9, [X10]
	0x03DD598C ADD W9, W9, 0x2
	0x03DD5990 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5994 ADD X0, X8, 0x138
	0x03DD5998 LDP X8, X7, [X0]
	0x03DD599C MOVZ W9, 0x9
	0x03DD59A0 MOVK W9, 0x10000
	0x03DD59A4 ORR W1, W9, 0x4
	0x03DD59A8 LDR W4, [X31 + 0x2C]
	0x03DD59AC MOV X0, X22
	0x03DD59B0 MOV X2, X24
	0x03DD59B4 MOV X3, X23
	0x03DD59B8 MOV W5, W20
	0x03DD59BC MOV X6, X29
	0x03DD59C0 ADD X31, X31, 0x270
	0x03DD59C4 LDP X20, X19, [X31 + 0x90]
	0x03DD59C8 LDP X22, X21, [X31 + 0x80]
	0x03DD59CC LDP X24, X23, [X31 + 0x70]
	0x03DD59D0 LDP X26, X25, [X31 + 0x60]
	0x03DD59D4 LDP X28, X27, [X31 + 0x50]
	0x03DD59D8 LDP X29, X30, [X31 + 0x40]
	0x03DD59DC LDP D9, D8, [X31 + 0x30]
	0x03DD59E0 LDP D11, D10, [X31 + 0x20]
	0x03DD59E4 LDP D13, D12, [X31 + 0x10]
	0x03DD59E8 LDP D15, D14, [X31], #0xA0
	0x03DD59EC BR X8
	0x03DD59F0 LDR W9, [X10]
	0x03DD59F4 ADD W9, W9, 0x3
	0x03DD59F8 ADD X8, X8, W9, 0x4, SXTW
	0x03DD59FC ADD X0, X8, 0x138
	0x03DD5A00 LDP X8, X5, [X0]
	0x03DD5A04 SUB W1, W28, 0x7
	0x03DD5A08 LDR W2, [X31 + 0x2C]
	0x03DD5A0C MOV X0, X25
	0x03DD5A10 MOV V0.16B, V8.16B
	0x03DD5A14 MOV V1.16B, V9.16B
	0x03DD5A18 MOV V2.16B, V10.16B
	0x03DD5A1C MOV V3.16B, V11.16B
	0x03DD5A20 MOV V4.16B, V15.16B
	0x03DD5A24 MOV V5.16B, V14.16B
	0x03DD5A28 MOV V6.16B, V13.16B
	0x03DD5A2C MOV V7.16B, V12.16B
	0x03DD5A30 MOV W3, W20
	0x03DD5A34 MOV X4, X29
	0x03DD5A38 BLR X8
	0x03DD5A3C TBZ X0, 0x0, 0x3DD5A74
	0x03DD5A40 MOV X0, X22
	0x03DD5A44 MOV X1, X31
	0x03DD5A48 BL 0x3DEC0D4
	0x03DD5A4C TBNZ X0, 0x3, 0x3DD5A6C
	0x03DD5A50 MOV X0, X22
	0x03DD5A54 MOV X1, X31
	0x03DD5A58 BL 0x3DEC0D4
	0x03DD5A5C ORR W1, W0, 0x8
	0x03DD5A60 MOV X0, X22
	0x03DD5A64 MOV X2, X31
	0x03DD5A68 BL 0x3DEC0FC
	0x03DD5A6C MOVZ W0, 0x1
	0x03DD5A70 B 0x3DD5A78
	0x03DD5A74 MOV W0, W31
	0x03DD5A78 AND W0, W0, 0x1
	0x03DD5A7C ADD X31, X31, 0x270
	0x03DD5A80 LDP X20, X19, [X31 + 0x90]
	0x03DD5A84 LDP X22, X21, [X31 + 0x80]
	0x03DD5A88 LDP X24, X23, [X31 + 0x70]
	0x03DD5A8C LDP X26, X25, [X31 + 0x60]
	0x03DD5A90 LDP X28, X27, [X31 + 0x50]
	0x03DD5A94 LDP X29, X30, [X31 + 0x40]
	0x03DD5A98 LDP D9, D8, [X31 + 0x30]
	0x03DD5A9C LDP D11, D10, [X31 + 0x20]
	0x03DD5AA0 LDP D13, D12, [X31 + 0x10]
	0x03DD5AA4 LDP D15, D14, [X31], #0xA0
	0x03DD5AA8 RET
	0x03DD5AAC LDR W9, [X10]
	0x03DD5AB0 ADD W9, W9, 0x4
	0x03DD5AB4 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5AB8 ADD X0, X8, 0x138
	0x03DD5ABC LDP X8, X7, [X0]
	0x03DD5AC0 SUB W1, W28, 0x6
	0x03DD5AC4 B 0x3DD5BB0
	0x03DD5AC8 LDR W9, [X10]
	0x03DD5ACC ADD W9, W9, 0x1
	0x03DD5AD0 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5AD4 ADD X0, X8, 0x138
	0x03DD5AD8 LDP X8, X7, [X0]
	0x03DD5ADC SUB W1, W28, 0x5
	0x03DD5AE0 B 0x3DD5BB0
	0x03DD5AE4 LDR W9, [X10]
	0x03DD5AE8 ADD W9, W9, 0x1
	0x03DD5AEC ADD X8, X8, W9, 0x4, SXTW
	0x03DD5AF0 ADD X0, X8, 0x138
	0x03DD5AF4 LDP X8, X7, [X0]
	0x03DD5AF8 SUB W1, W28, 0x4
	0x03DD5AFC B 0x3DD5BB0
	0x03DD5B00 LDR W9, [X10]
	0x03DD5B04 ADD W9, W9, 0x1
	0x03DD5B08 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5B0C ADD X0, X8, 0x138
	0x03DD5B10 LDP X8, X7, [X0]
	0x03DD5B14 SUB W1, W28, 0x3
	0x03DD5B18 B 0x3DD5BB0
	0x03DD5B1C LDRSW X9, [X10]
	0x03DD5B20 ADD X8, X8, X9, 0x4, LSL
	0x03DD5B24 ADD X0, X8, 0x138
	0x03DD5B28 LDP X6, X5, [X0]
	0x03DD5B2C SUB W1, W28, 0x2
	0x03DD5B30 LDR W2, [X31 + 0x2C]
	0x03DD5B34 MOV X0, X22
	0x03DD5B38 MOV V0.16B, V8.16B
	0x03DD5B3C MOV V1.16B, V9.16B
	0x03DD5B40 MOV W3, W20
	0x03DD5B44 MOV X4, X29
	0x03DD5B48 ADD X31, X31, 0x270
	0x03DD5B4C LDP X20, X19, [X31 + 0x90]
	0x03DD5B50 LDP X22, X21, [X31 + 0x80]
	0x03DD5B54 LDP X24, X23, [X31 + 0x70]
	0x03DD5B58 LDP X26, X25, [X31 + 0x60]
	0x03DD5B5C LDP X28, X27, [X31 + 0x50]
	0x03DD5B60 LDP X29, X30, [X31 + 0x40]
	0x03DD5B64 LDP D9, D8, [X31 + 0x30]
	0x03DD5B68 LDP D11, D10, [X31 + 0x20]
	0x03DD5B6C LDP D13, D12, [X31 + 0x10]
	0x03DD5B70 LDP D15, D14, [X31], #0xA0
	0x03DD5B74 BR X6
	0x03DD5B78 LDR W9, [X10]
	0x03DD5B7C ADD W9, W9, 0x1
	0x03DD5B80 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5B84 ADD X0, X8, 0x138
	0x03DD5B88 LDP X8, X7, [X0]
	0x03DD5B8C SUB W1, W28, 0x1
	0x03DD5B90 B 0x3DD5BB0
	0x03DD5B94 LDR W9, [X10]
	0x03DD5B98 ADD W9, W9, 0x4
	0x03DD5B9C ADD X8, X8, W9, 0x4, SXTW
	0x03DD5BA0 ADD X0, X8, 0x138
	0x03DD5BA4 LDP X8, X7, [X0]
	0x03DD5BA8 MOVZ W1, 0x9
	0x03DD5BAC MOVK W1, 0x30000
	0x03DD5BB0 LDR W4, [X31 + 0x2C]
	0x03DD5BB4 MOV X0, X22
	0x03DD5BB8 MOV W2, W24
	0x03DD5BBC MOV W3, W23
	0x03DD5BC0 MOV W5, W20
	0x03DD5BC4 MOV X6, X29
	0x03DD5BC8 ADD X31, X31, 0x270
	0x03DD5BCC LDP X20, X19, [X31 + 0x90]
	0x03DD5BD0 LDP X22, X21, [X31 + 0x80]
	0x03DD5BD4 LDP X24, X23, [X31 + 0x70]
	0x03DD5BD8 LDP X26, X25, [X31 + 0x60]
	0x03DD5BDC LDP X28, X27, [X31 + 0x50]
	0x03DD5BE0 LDP X29, X30, [X31 + 0x40]
	0x03DD5BE4 LDP D9, D8, [X31 + 0x30]
	0x03DD5BE8 LDP D11, D10, [X31 + 0x20]
	0x03DD5BEC LDP D13, D12, [X31 + 0x10]
	0x03DD5BF0 LDP D15, D14, [X31], #0xA0
	0x03DD5BF4 BR X8
	0x03DD5BF8 BL 0x1C16F20
	0x03DD5BFC STP D15, D14, [X31 - 0xA0]!
	0x03DD5C00 STP D13, D12, [X31 + 0x10]
	0x03DD5C04 STP D11, D10, [X31 + 0x20]
	0x03DD5C08 STP D9, D8, [X31 + 0x30]
	0x03DD5C0C STP X29, X30, [X31 + 0x40]
	0x03DD5C10 STP X28, X27, [X31 + 0x50]
	0x03DD5C14 STP X26, X25, [X31 + 0x60]
	0x03DD5C18 STP X24, X23, [X31 + 0x70]
	0x03DD5C1C STP X22, X21, [X31 + 0x80]
	0x03DD5C20 STP X20, X19, [X31 + 0x90]
	0x03DD5C24 SUB X31, X31, 0x3C0
	0x03DD5C28 ADRP X23, 0x613000
	0x03DD5C2C ADRP X20, 0x394000
	0x03DD5C30 LDRB W8, [X23 + 0x1BB]
	0x03DD5C34 LDR X20, [X20 + 0x450]
	0x03DD5C38 MOV X29, X5
	0x03DD5C3C MOV W21, W4
	0x03DD5C40 MOV W22, W3
	0x03DD5C44 MOV X26, X2
	0x03DD5C48 MOV X28, X1
	0x03DD5C4C MOV X19, X0
	0x03DD5C50 TBNZ X8, 0x0, 0x3DD5CEC
	0x03DD5C54 ADRP X0, 0x348000
	0x03DD5C58 LDR X0, [X0 + 0xED0]
	0x03DD5C5C BL 0x1C16CF4
	0x03DD5C60 ADRP X0, 0x31E000
	0x03DD5C64 LDR X0, [X0 + 0x598]
	0x03DD5C68 BL 0x1C16CF4
	0x03DD5C6C ADRP X0, 0x394000
	0x03DD5C70 LDR X0, [X0 + 0x458]
	0x03DD5C74 BL 0x1C16CF4
	0x03DD5C78 ADRP X0, 0x394000
	0x03DD5C7C LDR X0, [X0 + 0x460]
	0x03DD5C80 BL 0x1C16CF4
	0x03DD5C84 ADRP X0, 0x394000
	0x03DD5C88 LDR X0, [X0 + 0x468]
	0x03DD5C8C BL 0x1C16CF4
	0x03DD5C90 ADRP X0, 0x394000
	0x03DD5C94 LDR X0, [X0 + 0x470]
	0x03DD5C98 BL 0x1C16CF4
	0x03DD5C9C ADRP X0, 0x394000
	0x03DD5CA0 LDR X0, [X0 + 0x450]
	0x03DD5CA4 BL 0x1C16CF4
	0x03DD5CA8 ADRP X0, 0x390000
	0x03DD5CAC LDR X0, [X0 + 0x360]
	0x03DD5CB0 BL 0x1C16CF4
	0x03DD5CB4 ADRP X0, 0x390000
	0x03DD5CB8 LDR X0, [X0 + 0x378]
	0x03DD5CBC BL 0x1C16CF4
	0x03DD5CC0 ADRP X0, 0x390000
	0x03DD5CC4 LDR X0, [X0 + 0x358]
	0x03DD5CC8 BL 0x1C16CF4
	0x03DD5CCC ADRP X0, 0x390000
	0x03DD5CD0 LDR X0, [X0 + 0x370]
	0x03DD5CD4 BL 0x1C16CF4
	0x03DD5CD8 ADRP X0, 0x390000
	0x03DD5CDC LDR X0, [X0 + 0x368]
	0x03DD5CE0 BL 0x1C16CF4
	0x03DD5CE4 MOVZ W8, 0x1
	0x03DD5CE8 STRB W8, [X23 + 0x1BB]
	0x03DD5CEC LDR X1, [X26]
	0x03DD5CF0 LDR X2, [X20]
	0x03DD5CF4 MOV X0, X28
	0x03DD5CF8 BL 0x266C684
	0x03DD5CFC STR W22, [X31 + 0x38]
	0x03DD5D00 STP X28, X26, [X31 + 0x28]
	0x03DD5D04 TBZ X0, 0x0, 0x3DD5D14
	0x03DD5D08 STR W31, [X31 + 0x3C]
	0x03DD5D0C MOV W20, W31
	0x03DD5D10 B 0x3DD6938
	0x03DD5D14 ADRP X20, 0x390000
	0x03DD5D18 LDR X20, [X20 + 0x368]
	0x03DD5D1C MOV X0, X28
	0x03DD5D20 LDR X1, [X20]
	0x03DD5D24 BL 0x266C4A0
	0x03DD5D28 LDR X1, [X20]
	0x03DD5D2C MOV X25, X0
	0x03DD5D30 MOV X0, X26
	0x03DD5D34 BL 0x266C4A0
	0x03DD5D38 LDP D0, D3, [X0]
	0x03DD5D3C LDP D1, D2, [X25]
	0x03DD5D40 ADRP X8, 0xFFFFFFFFFCD14000
	0x03DD5D44 LDR V8, [X8 + 0xF20]
	0x03DD5D48 MOV X26, X0
	0x03DD5D4C FSUB V0.2S, V1.2S, V0.2S
	0x00000000 INVALID
	0x03DD5D54 FSUB V1.2S, V2.2S, V3.2S
	0x03DD5D58 UNIMPLEMENTED
	0x00000000 INVALID
	0x03DD5D60 FADD V0.2S, V0.2S, V2.2S
	0x03DD5D64 FADD V0.2S, V1.2S, V0.2S
	0x03DD5D68 UNIMPLEMENTED
	0x03DD5D6C FADD V0.2S, V1.2S, V0.2S
	0x03DD5D70 FCMP S0, S8
	0x03DD5D74 B.MI 0x3DD5DEC
	0x03DD5D78 CBZ X19, 0x3DD9BF0
	0x03DD5D7C MOV X0, X19
	0x03DD5D80 MOV X1, X31
	0x03DD5D84 STR S8, [X31 + 0x24]
	0x03DD5D88 BL 0x3DE89D4
	0x03DD5D8C CBZ X0, 0x3DD9BF0
	0x03DD5D90 ADRP X10, 0x348000
	0x03DD5D94 LDP S9, S8, [X26 + 0x8]
	0x03DD5D98 LDP S11, S10, [X26]
	0x03DD5D9C LDP S13, S12, [X25 + 0x8]
	0x03DD5DA0 LDR X8, [X0]
	0x03DD5DA4 LDP S15, S14, [X25]
	0x03DD5DA8 LDR X10, [X10 + 0xED0]
	0x03DD5DAC MOV X27, X0
	0x03DD5DB0 LDRH W9, [X8 + 0x12E]
	0x03DD5DB4 LDR X1, [X10]
	0x03DD5DB8 CBZ X9, 0x3DD5DDC
	0x03DD5DBC LDR X10, [X8 + 0xB0]
	0x03DD5DC0 ADD X10, X10, 0x8
	0x03DD5DC4 LDUR X11, [X10 - 0x8]
	0x03DD5DC8 CMP X11, X1
	0x03DD5DCC B.EQ 0x3DD5DF8
	0x03DD5DD0 SUBS X9, X9, 0x1
	0x03DD5DD4 ADD X10, X10, 0x10
	0x03DD5DD8 B.NE 0x3DD5DC4
	0x03DD5DDC MOVZ W2, 0x3
	0x03DD5DE0 MOV X0, X27
	0x03DD5DE4 BL 0x1C5C788
	0x03DD5DE8 B 0x3DD5E08
	0x03DD5DEC STR W31, [X31 + 0x3C]
	0x03DD5DF0 MOV W20, W31
	0x03DD5DF4 B 0x3DD5E58
	0x03DD5DF8 LDR W9, [X10]
	0x03DD5DFC ADD W9, W9, 0x3
	0x03DD5E00 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5E04 ADD X0, X8, 0x138
	0x03DD5E08 LDP X8, X5, [X0]
	0x03DD5E0C MOVZ W1, 0x10000
	0x03DD5E10 MOV X0, X27
	0x03DD5E14 MOV V0.16B, V15.16B
	0x03DD5E18 MOV V1.16B, V14.16B
	0x03DD5E1C MOV V2.16B, V13.16B
	0x03DD5E20 MOV V3.16B, V12.16B
	0x03DD5E24 MOV V4.16B, V11.16B
	0x03DD5E28 MOV V5.16B, V10.16B
	0x03DD5E2C MOV V6.16B, V9.16B
	0x03DD5E30 MOV V7.16B, V8.16B
	0x03DD5E34 MOV W2, W22
	0x03DD5E38 MOV W3, W21
	0x03DD5E3C MOV X4, X29
	0x03DD5E40 BLR X8
	0x03DD5E44 LDR V8, [X31 + 0x24]
	0x03DD5E48 ANDS W20, W0, 0x1
	0x03DD5E4C MOVZ W8, 0x8
	0x03DD5E50 CSEL W8, W8, W31, NE
	0x03DD5E54 STR W8, [X31 + 0x3C]
	0x03DD5E58 LDR X0, [X25 + 0x10]
	0x03DD5E5C LDR X1, [X26 + 0x10]
	0x03DD5E60 MOV X2, X31
	0x03DD5E64 BL 0x3DFD53C
	0x03DD5E68 TBZ X0, 0x0, 0x3DD5F10
	0x03DD5E6C CBZ X19, 0x3DD9BF0
	0x03DD5E70 MOV X0, X19
	0x03DD5E74 MOV X1, X31
	0x03DD5E78 BL 0x3DE89D4
	0x03DD5E7C CBZ X0, 0x3DD9BF0
	0x03DD5E80 ADRP X10, 0x348000
	0x03DD5E84 LDR X8, [X0]
	0x03DD5E88 LDR X24, [X25 + 0x10]
	0x03DD5E8C LDR X23, [X26 + 0x10]
	0x03DD5E90 LDR X10, [X10 + 0xED0]
	0x03DD5E94 LDRH W9, [X8 + 0x12E]
	0x03DD5E98 MOV X27, X0
	0x03DD5E9C LDR X1, [X10]
	0x03DD5EA0 CBZ X9, 0x3DD5EC4
	0x03DD5EA4 LDR X10, [X8 + 0xB0]
	0x03DD5EA8 ADD X10, X10, 0x8
	0x03DD5EAC LDUR X11, [X10 - 0x8]
	0x03DD5EB0 CMP X11, X1
	0x03DD5EB4 B.EQ 0x3DD5ED4
	0x03DD5EB8 SUBS X9, X9, 0x1
	0x03DD5EBC ADD X10, X10, 0x10
	0x03DD5EC0 B.NE 0x3DD5EAC
	0x03DD5EC4 MOVZ W2, 0x2
	0x03DD5EC8 MOV X0, X27
	0x03DD5ECC BL 0x1C5C788
	0x03DD5ED0 B 0x3DD5EE4
	0x03DD5ED4 LDR W9, [X10]
	0x03DD5ED8 ADD W9, W9, 0x2
	0x03DD5EDC ADD X8, X8, W9, 0x4, SXTW
	0x03DD5EE0 ADD X0, X8, 0x138
	0x03DD5EE4 LDP X8, X7, [X0]
	0x03DD5EE8 ORR W1, W31, 0x10001
	0x03DD5EEC MOV X0, X27
	0x03DD5EF0 MOV X2, X24
	0x03DD5EF4 MOV X3, X23
	0x03DD5EF8 MOV W4, W22
	0x03DD5EFC MOV W5, W21
	0x03DD5F00 MOV X6, X29
	0x03DD5F04 BLR X8
	0x03DD5F08 AND W8, W0, 0x1
	0x03DD5F0C ORR W20, W20, W8, 0x0
	0x03DD5F10 LDR X0, [X25 + 0x18]
	0x03DD5F14 LDR X1, [X26 + 0x18]
	0x03DD5F18 MOV X2, X31
	0x03DD5F1C BL 0x3DFD53C
	0x03DD5F20 TBZ X0, 0x0, 0x3DD5FD0
	0x03DD5F24 CBZ X19, 0x3DD9BF0
	0x03DD5F28 MOV X0, X19
	0x03DD5F2C MOV X1, X31
	0x03DD5F30 BL 0x3DE89D4
	0x03DD5F34 CBZ X0, 0x3DD9BF0
	0x03DD5F38 ADRP X10, 0x348000
	0x03DD5F3C LDR X8, [X0]
	0x03DD5F40 LDR X24, [X25 + 0x18]
	0x03DD5F44 LDR X23, [X26 + 0x18]
	0x03DD5F48 LDR X10, [X10 + 0xED0]
	0x03DD5F4C LDRH W9, [X8 + 0x12E]
	0x03DD5F50 MOV X27, X0
	0x03DD5F54 AND W20, W20, 0x1
	0x03DD5F58 LDR X1, [X10]
	0x03DD5F5C CBZ X9, 0x3DD5F80
	0x03DD5F60 LDR X10, [X8 + 0xB0]
	0x03DD5F64 ADD X10, X10, 0x8
	0x03DD5F68 LDUR X11, [X10 - 0x8]
	0x03DD5F6C CMP X11, X1
	0x03DD5F70 B.EQ 0x3DD5F90
	0x03DD5F74 SUBS X9, X9, 0x1
	0x03DD5F78 ADD X10, X10, 0x10
	0x03DD5F7C B.NE 0x3DD5F68
	0x03DD5F80 MOVZ W2, 0x2
	0x03DD5F84 MOV X0, X27
	0x03DD5F88 BL 0x1C5C788
	0x03DD5F8C B 0x3DD5FA0
	0x03DD5F90 LDR W9, [X10]
	0x03DD5F94 ADD W9, W9, 0x2
	0x03DD5F98 ADD X8, X8, W9, 0x4, SXTW
	0x03DD5F9C ADD X0, X8, 0x138
	0x03DD5FA0 LDP X8, X7, [X0]
	0x03DD5FA4 ORR W9, W31, 0x10001
	0x03DD5FA8 ADD W1, W9, 0x1
	0x03DD5FAC MOV X0, X27
	0x03DD5FB0 MOV X2, X24
	0x03DD5FB4 MOV X3, X23
	0x03DD5FB8 MOV W4, W22
	0x03DD5FBC MOV W5, W21
	0x03DD5FC0 MOV X6, X29
	0x03DD5FC4 BLR X8
	0x03DD5FC8 AND W8, W0, 0x1
	0x03DD5FCC ORR W20, W20, W8, 0x0
	0x03DD5FD0 LDUR V0, [X25 + 0x2C]
	0x03DD5FD4 LDR V1, [X25 + 0x2]
	0x03DD5FD8 ADD X23, X31, 0x300
	0x03DD5FDC ADD X0, X31, 0x360
	0x03DD5FE0 STUR V0, [X23 + 0x6C]
	0x03DD5FE4 STR V1, [X31 + 0x36]
	0x03DD5FE8 LDUR V0, [X26 + 0x2C]
	0x03DD5FEC LDR V1, [X26 + 0x2]
	0x03DD5FF0 ADD X1, X31, 0x340
	0x03DD5FF4 MOV X2, X31
	0x03DD5FF8 STUR V0, [X23 + 0x4C]
	0x03DD5FFC STR V1, [X31 + 0x34]
	0x03DD6000 BL 0x3E14318
	0x03DD6004 TBZ X0, 0x0, 0x3DD6134
	0x03DD6008 CBZ X19, 0x3DD9BF0
	0x03DD600C MOV X0, X19
	0x03DD6010 MOV X1, X31
	0x03DD6014 MOV W22, W21
	0x03DD6018 MOV X21, X29
	0x03DD601C ADD X24, X31, 0x100
	0x03DD6020 ADD X28, X25, 0x20
	0x03DD6024 ADD X29, X26, 0x20
	0x03DD6028 BL 0x3DE89D4
	0x03DD602C LDUR V0, [X28 + 0xC]
	0x03DD6030 LDR V1, [X28]
	0x03DD6034 STUR V0, [X24 + 0x2C]
	0x03DD6038 STR V1, [X31 + 0x12]
	0x03DD603C LDUR V0, [X29 + 0xC]
	0x03DD6040 LDR V1, [X29]
	0x03DD6044 STUR V0, [X24 + 0xC]
	0x03DD6048 STR V1, [X31 + 0x10]
	0x03DD604C CBZ X0, 0x3DD9BF0
	0x03DD6050 LDR V0, [X31 + 0x12]
	0x03DD6054 LDUR V1, [X24 + 0x2C]
	0x03DD6058 LDR V2, [X31 + 0x10]
	0x03DD605C LDUR V3, [X24 + 0xC]
	0x03DD6060 STR V0, [X31 + 0x32]
	0x03DD6064 STUR V1, [X23 + 0x2C]
	0x03DD6068 STR V2, [X31 + 0x30]
	0x03DD606C STUR V3, [X23 + 0xC]
	0x03DD6070 ADRP X10, 0x347000
	0x03DD6074 LDR X8, [X0]
	0x03DD6078 LDR X10, [X10 + 0xED0]
	0x03DD607C MOV X29, X21
	0x03DD6080 MOV W21, W22
	0x03DD6084 LDRH W9, [X8 + 0x12E]
	0x03DD6088 LDR X1, [X10]
	0x03DD608C LDR W22, [X31 + 0x38]
	0x03DD6090 LDR X28, [X31 + 0x28]
	0x03DD6094 MOV X27, X0
	0x03DD6098 AND W20, W20, 0x1
	0x03DD609C CBZ X9, 0x3DD60C0
	0x03DD60A0 LDR X10, [X8 + 0xB0]
	0x03DD60A4 ADD X10, X10, 0x8
	0x03DD60A8 LDUR X11, [X10 - 0x8]
	0x03DD60AC CMP X11, X1
	0x03DD60B0 B.EQ 0x3DD60D0
	0x03DD60B4 SUBS X9, X9, 0x1
	0x03DD60B8 ADD X10, X10, 0x10
	0x03DD60BC B.NE 0x3DD60A8
	0x03DD60C0 MOVZ W2, 0x8
	0x03DD60C4 MOV X0, X27
	0x03DD60C8 BL 0x1C5C788
	0x03DD60CC B 0x3DD60E0
	0x03DD60D0 LDR W9, [X10]
	0x03DD60D4 ADD W9, W9, 0x8
	0x03DD60D8 ADD X8, X8, W9, 0x4, SXTW
	0x03DD60DC ADD X0, X8, 0x138
	0x03DD60E0 LDR V0, [X31 + 0x32]
	0x03DD60E4 LDUR V1, [X23 + 0x2C]
	0x03DD60E8 LDR V2, [X31 + 0x30]
	0x03DD60EC LDUR V3, [X23 + 0xC]
	0x03DD60F0 LDR X8, [X0]
	0x03DD60F4 STR V0, [X31 + 0x3A]
	0x03DD60F8 STUR V1, [X23 + 0xAC]
	0x03DD60FC STR V2, [X31 + 0x38]
	0x03DD6100 STUR V3, [X23 + 0x8C]
	0x03DD6104 LDR X7, [X0 + 0x8]
	0x03DD6108 ORR W9, W31, 0x10001
	0x03DD610C ADD W1, W9, 0x2
	0x03DD6110 ADD X2, X31, 0x3A0
	0x03DD6114 ADD X3, X31, 0x380
	0x03DD6118 MOV X0, X27
	0x03DD611C MOV W4, W22
	0x03DD6120 MOV W5, W21
	0x03DD6124 MOV X6, X29
	0x03DD6128 BLR X8
	0x03DD612C AND W8, W0, 0x1
	0x03DD6130 ORR W20, W20, W8, 0x0
	0x03DD6134 ADRP X8, 0x31D000
	0x03DD6138 LDR X8, [X8 + 0x598]
	0x03DD613C LDR X23, [X25 + 0x40]
	0x03DD6140 LDR X24, [X26 + 0x40]
	0x03DD6144 LDR X0, [X8]
	0x03DD6148 LDR W8, [X0 + 0xE0]
	0x03DD614C CBNZ W8, 0x3DD6154
	0x03DD6150 BL 0x1C16DFC
	0x03DD6154 MOV X0, X23
	0x03DD6158 MOV X1, X24
	0x03DD615C MOV X2, X31
	0x03DD6160 BL 0x3C354F8
	0x03DD6164 TBZ X0, 0x0, 0x3DD6214
	0x03DD6168 CBZ X19, 0x3DD9BF0
	0x03DD616C MOV X0, X19
	0x03DD6170 MOV X1, X31
	0x03DD6174 BL 0x3DE89D4
	0x03DD6178 CBZ X0, 0x3DD9BF0
	0x03DD617C ADRP X10, 0x347000
	0x03DD6180 LDR X8, [X0]
	0x03DD6184 LDR X24, [X25 + 0x40]
	0x03DD6188 LDR X23, [X26 + 0x40]
	0x03DD618C LDR X10, [X10 + 0xED0]
	0x03DD6190 LDRH W9, [X8 + 0x12E]
	0x03DD6194 MOV X27, X0
	0x03DD6198 AND W20, W20, 0x1
	0x03DD619C LDR X1, [X10]
	0x03DD61A0 CBZ X9, 0x3DD61C4
	0x03DD61A4 LDR X10, [X8 + 0xB0]
	0x03DD61A8 ADD X10, X10, 0x8
	0x03DD61AC LDUR X11, [X10 - 0x8]
	0x03DD61B0 CMP X11, X1
	0x03DD61B4 B.EQ 0x3DD61D4
	0x03DD61B8 SUBS X9, X9, 0x1
	0x03DD61BC ADD X10, X10, 0x10
	0x03DD61C0 B.NE 0x3DD61AC
	0x03DD61C4 MOVZ W2, 0x7
	0x03DD61C8 MOV X0, X27
	0x03DD61CC BL 0x1C5C788
	0x03DD61D0 B 0x3DD61E4
	0x03DD61D4 LDR W9, [X10]
	0x03DD61D8 ADD W9, W9, 0x7
	0x03DD61DC ADD X8, X8, W9, 0x4, SXTW
	0x03DD61E0 ADD X0, X8, 0x138
	0x03DD61E4 LDP X8, X7, [X0]
	0x03DD61E8 ORR W9, W31, 0x10001
	0x03DD61EC ADD W1, W9, 0x3
	0x03DD61F0 MOV X0, X27
	0x03DD61F4 MOV X2, X24
	0x03DD61F8 MOV X3, X23
	0x03DD61FC MOV W4, W22
	0x03DD6200 MOV W5, W21
	0x03DD6204 MOV X6, X29
	0x03DD6208 BLR X8
	0x03DD620C AND W8, W0, 0x1
	0x03DD6210 ORR W20, W20, W8, 0x0
	0x03DD6214 LDP X0, X1, [X25 + 0x48]
	0x03DD6218 LDP X2, X3, [X26 + 0x48]
	0x03DD621C MOV X4, X31
	0x03DD6220 BL 0x3DE4E2C
	0x03DD6224 TBZ X0, 0x0, 0x3DD62F0
	0x03DD6228 CBZ X19, 0x3DD9BF0
	0x03DD622C MOV X0, X19
	0x03DD6230 MOV X1, X31
	0x03DD6234 MOV W22, W21
	0x03DD6238 MOV X21, X29
	0x03DD623C BL 0x3DE89D4
	0x03DD6240 CBZ X0, 0x3DD9BF0
	0x03DD6244 ADRP X10, 0x347000
	0x03DD6248 LDP X29, X28, [X26 + 0x48]
	0x03DD624C LDR X8, [X0]
	0x03DD6250 LDP X23, X24, [X25 + 0x48]
	0x03DD6254 LDR X10, [X10 + 0xED0]
	0x03DD6258 MOV X27, X0
	0x03DD625C LDRH W9, [X8 + 0x12E]
	0x03DD6260 AND W20, W20, 0x1
	0x03DD6264 LDR X1, [X10]
	0x03DD6268 CBZ X9, 0x3DD628C
	0x03DD626C LDR X10, [X8 + 0xB0]
	0x03DD6270 ADD X10, X10, 0x8
	0x03DD6274 LDUR X11, [X10 - 0x8]
	0x03DD6278 CMP X11, X1
	0x03DD627C B.EQ 0x3DD629C
	0x03DD6280 SUBS X9, X9, 0x1
	0x03DD6284 ADD X10, X10, 0x10
	0x03DD6288 B.NE 0x3DD6274
	0x03DD628C MOVZ W2, 0x6
	0x03DD6290 MOV X0, X27
	0x03DD6294 BL 0x1C5C788
	0x03DD6298 B 0x3DD62AC
	0x03DD629C LDR W9, [X10]
	0x03DD62A0 ADD W9, W9, 0x6
	0x03DD62A4 ADD X8, X8, W9, 0x4, SXTW
	0x03DD62A8 ADD X0, X8, 0x138
	0x03DD62AC LDP X8, X9, [X0]
	0x03DD62B0 LDR W6, [X31 + 0x38]
	0x03DD62B4 ORR W10, W31, 0x10001
	0x03DD62B8 ADD W1, W10, 0x4
	0x03DD62BC MOV X0, X27
	0x03DD62C0 MOV X2, X23
	0x03DD62C4 MOV X3, X24
	0x03DD62C8 MOV X4, X29
	0x03DD62CC MOV X5, X28
	0x03DD62D0 MOV W7, W22
	0x03DD62D4 STP X21, X9, [X31]
	0x03DD62D8 MOV X29, X21
	0x03DD62DC MOV W21, W22
	0x03DD62E0 BLR X8
	0x03DD62E4 LDR X28, [X31 + 0x28]
	0x03DD62E8 AND W8, W0, 0x1
	0x03DD62EC ORR W20, W20, W8, 0x0
	0x03DD62F0 LDR W8, [X25 + 0x58]
	0x03DD62F4 LDR W9, [X26 + 0x58]
	0x03DD62F8 CMP W8, W9
	0x03DD62FC B.NE 0x3DD6308
	0x03DD6300 LDR W22, [X31 + 0x38]
	0x03DD6304 B 0x3DD63B8
	0x03DD6308 LDR W22, [X31 + 0x38]
	0x03DD630C CBZ X19, 0x3DD9BF0
	0x03DD6310 MOV X0, X19
	0x03DD6314 MOV X1, X31
	0x03DD6318 BL 0x3DE89D4
	0x03DD631C CBZ X0, 0x3DD9BF0
	0x03DD6320 ADRP X10, 0x347000
	0x03DD6324 LDR X8, [X0]
	0x03DD6328 LDR W24, [X25 + 0x58]
	0x03DD632C LDR W23, [X26 + 0x58]
	0x03DD6330 LDR X10, [X10 + 0xED0]
	0x03DD6334 LDRH W9, [X8 + 0x12E]
	0x03DD6338 MOV X27, X0
	0x03DD633C AND W20, W20, 0x1
	0x03DD6340 LDR X1, [X10]
	0x03DD6344 CBZ X9, 0x3DD6368
	0x03DD6348 LDR X10, [X8 + 0xB0]
	0x03DD634C ADD X10, X10, 0x8
	0x03DD6350 LDUR X11, [X10 - 0x8]
	0x03DD6354 CMP X11, X1
	0x03DD6358 B.EQ 0x3DD6378
	0x03DD635C SUBS X9, X9, 0x1
	0x03DD6360 ADD X10, X10, 0x10
	0x03DD6364 B.NE 0x3DD6350
	0x03DD6368 MOVZ W2, 0x4
	0x03DD636C MOV X0, X27
	0x03DD6370 BL 0x1C5C788
	0x03DD6374 B 0x3DD6388
	0x03DD6378 LDR W9, [X10]
	0x03DD637C ADD W9, W9, 0x4
	0x03DD6380 ADD X8, X8, W9, 0x4, SXTW
	0x03DD6384 ADD X0, X8, 0x138
	0x03DD6388 LDP X8, X7, [X0]
	0x03DD638C ORR W9, W31, 0x10001
	0x03DD6390 ADD W1, W9, 0x5
	0x03DD6394 MOV X0, X27
	0x03DD6398 MOV W2, W24
	0x03DD639C MOV W3, W23
	0x03DD63A0 MOV W4, W22
	0x03DD63A4 MOV W5, W21
	0x03DD63A8 MOV X6, X29
	0x03DD63AC BLR X8
	0x03DD63B0 AND W8, W0, 0x1
	0x03DD63B4 ORR W20, W20, W8, 0x0
	0x03DD63B8 LDUR X0, [X25 + 0x5C]
	0x03DD63BC LDUR X1, [X26 + 0x5C]
	0x03DD63C0 MOV X2, X31
	0x03DD63C4 BL 0x3DFD53C
	0x03DD63C8 TBZ X0, 0x0, 0x3DD6478
	0x03DD63CC CBZ X19, 0x3DD9BF0
	0x03DD63D0 MOV X0, X19
	0x03DD63D4 MOV X1, X31
	0x03DD63D8 BL 0x3DE89D4
	0x03DD63DC CBZ X0, 0x3DD9BF0
	0x03DD63E0 ADRP X10, 0x347000
	0x03DD63E4 LDR X8, [X0]
	0x03DD63E8 LDUR X24, [X25 + 0x5C]
	0x03DD63EC LDUR X23, [X26 + 0x5C]
	0x03DD63F0 LDR X10, [X10 + 0xED0]
	0x03DD63F4 LDRH W9, [X8 + 0x12E]
	0x03DD63F8 MOV X27, X0
	0x03DD63FC AND W20, W20, 0x1
	0x03DD6400 LDR X1, [X10]
	0x03DD6404 CBZ X9, 0x3DD6428
	0x03DD6408 LDR X10, [X8 + 0xB0]
	0x03DD640C ADD X10, X10, 0x8
	0x03DD6410 LDUR X11, [X10 - 0x8]
	0x03DD6414 CMP X11, X1
	0x03DD6418 B.EQ 0x3DD6438
	0x03DD641C SUBS X9, X9, 0x1
	0x03DD6420 ADD X10, X10, 0x10
	0x03DD6424 B.NE 0x3DD6410
	0x03DD6428 MOVZ W2, 0x2
	0x03DD642C MOV X0, X27
	0x03DD6430 BL 0x1C5C788
	0x03DD6434 B 0x3DD6448
	0x03DD6438 LDR W9, [X10]
	0x03DD643C ADD W9, W9, 0x2
	0x03DD6440 ADD X8, X8, W9, 0x4, SXTW
	0x03DD6444 ADD X0, X8, 0x138
	0x03DD6448 LDP X8, X7, [X0]
	0x03DD644C ORR W9, W31, 0x10001
	0x03DD6450 ADD W1, W9, 0x6
	0x03DD6454 MOV X0, X27
	0x03DD6458 MOV X2, X24
	0x03DD645C MOV X3, X23
	0x03DD6460 MOV W4, W22
	0x03DD6464 MOV W5, W21
	0x03DD6468 MOV X6, X29
	0x03DD646C BLR X8
	0x03DD6470 AND W8, W0, 0x1
	0x03DD6474 ORR W20, W20, W8, 0x0
	0x03DD6478 LDR W8, [X25 + 0x64]
	0x03DD647C LDR W9, [X26 + 0x64]
	0x03DD6480 CMP W8, W9
	0x03DD6484 B.EQ 0x3DD6534
	0x03DD6488 CBZ X19, 0x3DD9BF0
	0x03DD648C MOV X0, X19
	0x03DD6490 MOV X1, X31
	0x03DD6494 BL 0x3DE89D4
	0x03DD6498 CBZ X0, 0x3DD9BF0
	0x03DD649C ADRP X10, 0x347000
	0x03DD64A0 LDR X8, [X0]
	0x03DD64A4 LDR W24, [X25 + 0x64]
	0x03DD64A8 LDR W23, [X26 + 0x64]
	0x03DD64AC LDR X10, [X10 + 0xED0]
	0x03DD64B0 LDRH W9, [X8 + 0x12E]
	0x03DD64B4 MOV X27, X0
	0x03DD64B8 AND W20, W20, 0x1
	0x03DD64BC LDR X1, [X10]
	0x03DD64C0 CBZ X9, 0x3DD64E4
	0x03DD64C4 LDR X10, [X8 + 0xB0]
	0x03DD64C8 ADD X10, X10, 0x8
	0x03DD64CC LDUR X11, [X10 - 0x8]
	0x03DD64D0 CMP X11, X1
	0x03DD64D4 B.EQ 0x3DD64F4
	0x03DD64D8 SUBS X9, X9, 0x1
	0x03DD64DC ADD X10, X10, 0x10
	0x03DD64E0 B.NE 0x3DD64CC
	0x03DD64E4 MOVZ W2, 0x4
	0x03DD64E8 MOV X0, X27
	0x03DD64EC BL 0x1C5C788
	0x03DD64F0 B 0x3DD6504
	0x03DD64F4 LDR W9, [X10]
	0x03DD64F8 ADD W9, W9, 0x4
	0x03DD64FC ADD X8, X8, W9, 0x4, SXTW
	0x03DD6500 ADD X0, X8, 0x138
	0x03DD6504 LDP X8, X7, [X0]
	0x03DD6508 ORR W9, W31, 0x10001
	0x03DD650C ADD W1, W9, 0x7
	0x03DD6510 MOV X0, X27
	0x03DD6514 MOV W2, W24
	0x03DD6518 MOV W3, W23
	0x03DD651C MOV W4, W22
	0x03DD6520 MOV W5, W21
	0x03DD6524 MOV X6, X29
	0x03DD6528 BLR X8
	0x03DD652C AND W8, W0, 0x1
	0x03DD6530 ORR W20, W20, W8, 0x0
	0x03DD6534 LDP D0, D1, [X25 + 0x68]
	0x03DD6538 LDP D2, D3, [X26 + 0x68]
	0x03DD653C FSUB V0.2S, V0.2S, V2.2S
	0x00000000 INVALID
	0x03DD6544 FSUB V1.2S, V1.2S, V3.2S
	0x03DD6548 UNIMPLEMENTED
	0x00000000 INVALID
	0x03DD6550 FADD V0.2S, V0.2S, V2.2S
	0x03DD6554 FADD V0.2S, V1.2S, V0.2S
	0x03DD6558 UNIMPLEMENTED
	0x03DD655C FADD V0.2S, V1.2S, V0.2S
	0x03DD6560 FCMP S0, S8
	0x03DD6564 B.MI 0x3DD6634
	0x03DD6568 CBZ X19, 0x3DD9BF0
	0x03DD656C MOV X0, X19
	0x03DD6570 MOV X1, X31
	0x03DD6574 BL 0x3DE89D4
	0x03DD6578 CBZ X0, 0x3DD9BF0
	0x03DD657C ADRP X10, 0x347000
	0x03DD6580 LDP S9, S8, [X26 + 0x70]
	0x03DD6584 LDP S11, S10, [X26 + 0x68]
	0x03DD6588 LDP S13, S12, [X25 + 0x70]
	0x03DD658C LDR X8, [X0]
	0x03DD6590 LDP S15, S14, [X25 + 0x68]
	0x03DD6594 LDR X10, [X10 + 0xED0]
	0x03DD6598 MOV X27, X0
	0x03DD659C LDRH W9, [X8 + 0x12E]
	0x03DD65A0 AND W20, W20, 0x1
	0x03DD65A4 LDR X1, [X10]
	0x03DD65A8 CBZ X9, 0x3DD65CC
	0x03DD65AC LDR X10, [X8 + 0xB0]
	0x03DD65B0 ADD X10, X10, 0x8
	0x03DD65B4 LDUR X11, [X10 - 0x8]
	0x03DD65B8 CMP X11, X1
	0x03DD65BC B.EQ 0x3DD65DC
	0x03DD65C0 SUBS X9, X9, 0x1
	0x03DD65C4 ADD X10, X10, 0x10
	0x03DD65C8 B.NE 0x3DD65B4
	0x03DD65CC MOVZ W2, 0x3
	0x03DD65D0 MOV X0, X27
	0x03DD65D4 BL 0x1C5C788
	0x03DD65D8 B 0x3DD65EC
	0x03DD65DC LDR W9, [X10]
	0x03DD65E0 ADD W9, W9, 0x3
	0x03DD65E4 ADD X8, X8, W9, 0x4, SXTW
	0x03DD65E8 ADD X0, X8, 0x138
	0x03DD65EC LDP X8, X5, [X0]
	0x03DD65F0 ORR W9, W31, 0x10001
	0x03DD65F4 ADD W1, W9, 0x8
	0x03DD65F8 MOV X0, X27
	0x03DD65FC MOV V0.16B, V15.16B
	0x03DD6600 MOV V1.16B, V14.16B
	0x03DD6604 MOV V2.16B, V13.16B
	0x03DD6608 MOV V3.16B, V12.16B
	0x03DD660C MOV V4.16B, V11.16B
	0x03DD6610 MOV V5.16B, V10.16B
	0x03DD6614 MOV V6.16B, V9.16B
	0x03DD6618 MOV V7.16B, V8.16B
	0x03DD661C MOV W2, W22
	0x03DD6620 MOV W3, W21
	0x03DD6624 MOV X4, X29
	0x03DD6628 BLR X8
	0x03DD662C AND W8, W0, 0x1
	0x03DD6630 ORR W20, W20, W8, 0x0
	0x03DD6634 LDR V0, [X25 + 0x78]
	0x03DD6638 LDR V1, [X26 + 0x78]
	0x03DD663C FCMP S0, S1
	0x03DD6640 B.EQ 0x3DD66EC
	0x03DD6644 CBZ X19, 0x3DD9BF0
	0x03DD6648 MOV X0, X19
	0x03DD664C MOV X1, X31
	0x03DD6650 BL 0x3DE89D4
	0x03DD6654 CBZ X0, 0x3DD9BF0
	0x03DD6658 ADRP X10, 0x347000
	0x03DD665C LDR X8, [X0]
	0x03DD6660 LDR V9, [X25 + 0x78]
	0x03DD6664 LDR V8, [X26 + 0x78]
	0x03DD6668 LDR X10, [X10 + 0xED0]
	0x03DD666C LDRH W9, [X8 + 0x12E]
	0x03DD6670 MOV X27, X0
	0x03DD6674 AND W20, W20, 0x1
	0x03DD6678 LDR X1, [X10]
	0x03DD667C CBZ X9, 0x3DD66A0
	0x03DD6680 LDR X10, [X8 + 0xB0]
	0x03DD6684 ADD X10, X10, 0x8
	0x03DD6688 LDUR X11, [X10 - 0x8]
	0x03DD668C CMP X11, X1
	0x03DD6690 B.EQ 0x3DD66B0
	0x03DD6694 SUBS X9, X9, 0x1
	0x03DD6698 ADD X10, X10, 0x10
	0x03DD669C B.NE 0x3DD6688
	0x03DD66A0 MOV X0, X27
	0x03DD66A4 MOV W2, W31
	0x03DD66A8 BL 0x1C5C788
	0x03DD66AC B 0x3DD66BC
	0x03DD66B0 LDRSW X9, [X10]
	0x03DD66B4 ADD X8, X8, X9, 0x4, LSL
	0x03DD66B8 ADD X0, X8, 0x138
	0x03DD66BC LDP X8, X5, [X0]
	0x03DD66C0 ORR W9, W31, 0x10001
	0x03DD66C4 ADD W1, W9, 0x9
	0x03DD66C8 MOV X0, X27
	0x03DD66CC MOV V0.16B, V9.16B
	0x03DD66D0 MOV V1.16B, V8.16B
	0x03DD66D4 MOV W2, W22
	0x03DD66D8 MOV W3, W21
	0x03DD66DC MOV X4, X29
	0x03DD66E0 BLR X8
	0x03DD66E4 AND W8, W0, 0x1
	0x03DD66E8 ORR W20, W20, W8, 0x0
	0x03DD66EC LDR W8, [X25 + 0x7C]
	0x03DD66F0 LDR W9, [X26 + 0x7C]
	0x03DD66F4 CMP W8, W9
	0x03DD66F8 B.EQ 0x3DD67A8
	0x03DD66FC CBZ X19, 0x3DD9BF0
	0x03DD6700 MOV X0, X19
	0x03DD6704 MOV X1, X31
	0x03DD6708 BL 0x3DE89D4
	0x03DD670C CBZ X0, 0x3DD9BF0
	0x03DD6710 ADRP X10, 0x347000
	0x03DD6714 LDR X8, [X0]
	0x03DD6718 LDR W24, [X25 + 0x7C]
	0x03DD671C LDR W23, [X26 + 0x7C]
	0x03DD6720 LDR X10, [X10 + 0xED0]
	0x03DD6724 LDRH W9, [X8 + 0x12E]
	0x03DD6728 MOV X27, X0
	0x03DD672C AND W20, W20, 0x1
	0x03DD6730 LDR X1, [X10]
	0x03DD6734 CBZ X9, 0x3DD6758
	0x03DD6738 LDR X10, [X8 + 0xB0]
	0x03DD673C ADD X10, X10, 0x8
	0x03DD6740 LDUR X11, [X10 - 0x8]
	0x03DD6744 CMP X11, X1
	0x03DD6748 B.EQ 0x3DD6768
	0x03DD674C SUBS X9, X9, 0x1
	0x03DD6750 ADD X10, X10, 0x10
	0x03DD6754 B.NE 0x3DD6740
	0x03DD6758 MOVZ W2, 0x4
	0x03DD675C MOV X0, X27
	0x03DD6760 BL 0x1C5C788
	0x03DD6764 B 0x3DD6778
	0x03DD6768 LDR W9, [X10]
	0x03DD676C ADD W9, W9, 0x4
	0x03DD6770 ADD X8, X8, W9, 0x4, SXTW
	0x03DD6774 ADD X0, X8, 0x138
	0x03DD6778 LDP X8, X7, [X0]
	0x03DD677C ORR W9, W31, 0x10001
	0x03DD6780 ADD W1, W9, 0xA
	0x03DD6784 MOV X0, X27
	0x03DD6788 MOV W2, W24
	0x03DD678C MOV W3, W23
	0x03DD6790 MOV W4, W22
	0x03DD6794 MOV W5, W21
	0x03DD6798 MOV X6, X29
	0x03DD679C BLR X8
	0x03DD67A0 AND W8, W0, 0x1
	0x03DD67A4 ORR W20, W20, W8, 0x0
	0x03DD67A8 LDR W8, [X25 + 0x80]
	0x03DD67AC LDR W9, [X26 + 0x80]
	0x03DD67B0 CMP W8, W9
	0x03DD67B4 B.EQ 0x3DD6864
	0x03DD67B8 CBZ X19, 0x3DD9BF0
	0x03DD67BC MOV X0, X19
	0x03DD67C0 MOV X1, X31
	0x03DD67C4 BL 0x3DE89D4
	0x03DD67C8 CBZ X0, 0x3DD9BF0
	0x03DD67CC ADRP X10, 0x347000
	0x03DD67D0 LDR X8, [X0]
	0x03DD67D4 LDR W24, [X25 + 0x80]
	0x03DD67D8 LDR W23, [X26 + 0x80]
	0x03DD67DC LDR X10, [X10 + 0xED0]
	0x03DD67E0 LDRH W9, [X8 + 0x12E]
	0x03DD67E4 MOV X27, X0
	0x03DD67E8 AND W20, W20, 0x1
	0x03DD67EC LDR X1, [X10]
	0x03DD67F0 CBZ X9, 0x3DD6814
	0x03DD67F4 LDR X10, [X8 + 0xB0]
	0x03DD67F8 ADD X10, X10, 0x8
	0x03DD67FC LDUR X11, [X10 - 0x8]
	0x03DD6800 CMP X11, X1
	0x03DD6804 B.EQ 0x3DD6824
	0x03DD6808 SUBS X9, X9, 0x1
	0x03DD680C ADD X10, X10, 0x10
	0x03DD6810 B.NE 0x3DD67FC
	0x03DD6814 MOVZ W2, 0x4
	0x03DD6818 MOV X0, X27
	0x03DD681C BL 0x1C5C788
	0x03DD6820 B 0x3DD6834
	0x03DD6824 LDR W9, [X10]
	0x03DD6828 ADD W9, W9, 0x4
	0x03DD682C ADD X8, X8, W9, 0x4, SXTW
	0x03DD6830 ADD X0, X8, 0x138
	0x03DD6834 LDP X8, X7, [X0]
	0x03DD6838 ORR W9, W31, 0x10001
	0x03DD683C ADD W1, W9, 0xB
	0x03DD6840 MOV X0, X27
	0x03DD6844 MOV W2, W24
	0x03DD6848 MOV W3, W23
	0x03DD684C MOV W4, W22
	0x03DD6850 MOV W5, W21
	0x03DD6854 MOV X6, X29
	0x03DD6858 BLR X8
	0x03DD685C AND W8, W0, 0x1
	0x03DD6860 ORR W20, W20, W8, 0x0
	0x03DD6864 LDUR X0, [X25 + 0x84]
	0x03DD6868 LDUR X1, [X26 + 0x84]
	0x03DD686C MOV X2, X31
	0x03DD6870 BL 0x3DFD53C
	0x03DD6874 AND W20, W20, 0x1
	0x03DD6878 TBZ X0, 0x0, 0x3DD68E8
	0x03DD687C CBZ X19, 0x3DD9BF0
	0x03DD6880 MOV X0, X19
	0x03DD6884 MOV X1, X31
	0x03DD6888 BL 0x3DE89D4
	0x03DD688C CBZ X0, 0x3DD9BF0
	0x03DD6890 ADRP X10, 0x347000
	0x03DD6894 LDR X8, [X0]
	0x03DD6898 LDUR X24, [X25 + 0x84]
	0x03DD689C LDUR X23, [X26 + 0x84]
	0x03DD68A0 LDR X10, [X10 + 0xED0]
	0x03DD68A4 LDRH W9, [X8 + 0x12E]
	0x03DD68A8 LDR X26, [X31 + 0x30]
	0x03DD68AC MOV X27, X0
	0x03DD68B0 LDR X1, [X10]
	0x03DD68B4 CBZ X9, 0x3DD68D8
	0x03DD68B8 LDR X10, [X8 + 0xB0]
	0x03DD68BC ADD X10, X10, 0x8
	0x03DD68C0 LDUR X11, [X10 - 0x8]
	0x03DD68C4 CMP X11, X1
	0x03DD68C8 B.EQ 0x3DD68F0
	0x03DD68CC SUBS X9, X9, 0x1
	0x03DD68D0 ADD X10, X10, 0x10
	0x03DD68D4 B.NE 0x3DD68C0
	0x03DD68D8 MOVZ W2, 0x2
	0x03DD68DC MOV X0, X27
	0x03DD68E0 BL 0x1C5C788
	0x03DD68E4 B 0x3DD6900
	0x03DD68E8 LDR X26, [X31 + 0x30]
	0x03DD68EC B 0x3DD6938
	0x03DD68F0 LDR W9, [X10]
	0x03DD68F4 ADD W9, W9, 0x2
	0x03DD68F8 ADD X8, X8, W9, 0x4, SXTW
	0x03DD68FC ADD X0, X8, 0x138
	0x03DD6900 LDP X8, X7, [X0]
	0x03DD6904 ORR W9, W31, 0x10001
	0x03DD6908 ADD W1, W9, 0xC
	0x03DD690C MOV X0, X27
	0x03DD6910 MOV X2, X24
	0x03DD6914 MOV X3, X23
	0x03DD6918 MOV W4, W22
	0x03DD691C MOV W5, W21
	0x03DD6920 MOV X6, X29
	0x03DD6924 BLR X8
	0x03DD6928 AND W8, W0, 0x1
	0x03DD692C ORR W8, W8, W20, 0x0
	0x03DD6930 CMP W8, 0x0
	0x03DD6934 CSET W20, NE
	0x03DD6938 ADRP X8, 0x393000
	0x03DD693C LDR X8, [X8 + 0x470]
	0x03DD6940 LDR X1, [X26 + 0x8]
	0x03DD6944 ADD X23, X28, 0x8
	0x03DD6948 MOV X0, X23
	0x03DD694C LDR X2, [X8]
	0x03DD6950 BL 0x266CB04
	0x03DD6954 TBNZ X0, 0x0, 0x3DD807C
	0x03DD6958 ADRP X24, 0x38F000
	0x03DD695C LDR X24, [X24 + 0x358]
	0x03DD6960 MOV X0, X23
	0x03DD6964 LDR X1, [X24]
	0x03DD6968 BL 0x266C920
	0x03DD696C LDR X1, [X24]
	0x03DD6970 MOV X25, X0
	0x03DD6974 ADD X0, X26, 0x8
	0x03DD6978 BL 0x266C920
	0x03DD697C LDR W8, [X25]
	0x03DD6980 LDR W9, [X0]
	0x03DD6984 MOV X26, X0
	0x03DD6988 CMP W8, W9
	0x03DD698C B.EQ 0x3DD6A30
	0x03DD6990 CBZ X19, 0x3DD9BF0
	0x03DD6994 MOV X0, X19
	0x03DD6998 MOV X1, X31
	0x03DD699C BL 0x3DE89D4
	0x03DD69A0 CBZ X0, 0x3DD9BF0
	0x03DD69A4 ADRP X10, 0x347000
	0x03DD69A8 LDR X8, [X0]
	0x03DD69AC LDR W24, [X25]
	0x03DD69B0 LDR W23, [X26]
	0x03DD69B4 LDR X10, [X10 + 0xED0]
	0x03DD69B8 LDRH W9, [X8 + 0x12E]
	0x03DD69BC MOV X27, X0
	0x03DD69C0 LDR X1, [X10]
	0x03DD69C4 CBZ X9, 0x3DD69E8
	0x03DD69C8 LDR X10, [X8 + 0xB0]
	0x03DD69CC ADD X10, X10, 0x8
	0x03DD69D0 LDUR X11, [X10 - 0x8]
	0x03DD69D4 CMP X11, X1
	0x03DD69D8 B.EQ 0x3DD69F8
	0x03DD69DC SUBS X9, X9, 0x1
	0x03DD69E0 ADD X10, X10, 0x10
	0x03DD69E4 B.NE 0x3DD69D0
	0x03DD69E8 MOVZ W2, 0x4
	0x03DD69EC MOV X0, X27
	0x03DD69F0 BL 0x1C5C788
	0x03DD69F4 B 0x3DD6A08
	0x03DD69F8 LDR W9, [X10]
	0x03DD69FC ADD W9, W9, 0x4
	0x03DD6A00 ADD X8, X8, W9, 0x4, SXTW
	0x03DD6A04 ADD X0, X8, 0x138
	0x03DD6A08 LDP X8, X7, [X0]
	0x03DD6A0C MOVZ W1, 0x20000
	0x03DD6A10 MOV X0, X27
	0x03DD6A14 MOV W2, W24
	0x03DD6A18 MOV W3, W23
	0x03DD6A1C MOV W4, W22
	0x03DD6A20 MOV W5, W21
	0x03DD6A24 MOV X6, X29
	0x03DD6A28 BLR X8
	0x03DD6A2C ORR W20, W20, W0, 0x0
	0x03DD6A30 LDR W8, [X25 + 0x4]
	0x03DD6A34 LDR W9, [X26 + 0x4]
	0x03DD6A38 CMP W8, W9
	0x03DD6A3C B.EQ 0x3DD6AE4
	0x03DD6A40 CBZ X19, 0x3DD9BF0
	0x03DD6A44 MOV X0, X19
	0x03DD6A48 MOV X1, X31
	0x03DD6A4C BL 0x3DE89D4
	0x03DD6A50 CBZ X0, 0x3DD9BF0
	0x03DD6A54 ADRP X10, 0x347000
	0x03DD6A58 LDR X8, [X0]
	0x03DD6A5C LDR W24, [X25 + 0x4]
	0x03DD6A60 LDR W23, [X26 + 0x4]
	0x03DD6A64 LDR X10, [X10 + 0xED0]
	0x03DD6A68 LDRH W9, [X8 + 0x12E]
	0x03DD6A6C MOV X27, X0
	0x03DD6A70 LDR X1, [X10]
	0x03DD6A74 CBZ X9, 0x3DD6A98
	0x03DD6A78 LDR X10, [X8 + 0xB0]
	0x03DD6A7C ADD X10, X10, 0x8
	0x03DD6A80 LDUR X11, [X10 - 0x8]
	0x03DD6A84 CMP X11, X1
	0x03DD6A88 B.EQ 0x3DD6AA8
	0x03DD6A8C SUBS X9, X9, 0x1
	0x03DD6A90 ADD X10, X10, 0x10
	0x03DD6A94 B.NE 0x3DD6A80
	0x03DD6A98 MOVZ W2, 0x4
	0x03DD6A9C MOV X0, X27
	0x03DD6AA0 BL 0x1C5C788
	0x03DD6AA4 B 0x3DD6AB8
	0x03DD6AA8 LDR W9, [X10]
	0x03DD6AAC ADD W9, W9, 0x4
	0x03DD6AB0 ADD X8, X8, W9, 0x4, SXTW
	0x03DD6AB4 ADD X0, X8, 0x138
	0x03DD6AB8 LDP X8, X7, [X0]
	0x03DD6ABC ORR W9, W31, 0x10001
	0x03DD6AC0 ADD W1, W9, 0x10000
	0x03DD6AC4 MOV X0, X27
	0x03DD6AC8 MOV W2, W24
	0x03DD6ACC MOV W3, W23
	0x03DD6AD0 MOV W4, W22
	0x03DD6AD4 MOV W5, W21
	0x03DD6AD8 MOV X6, X29
	0x03DD6ADC BLR X8
	0x03DD6AE0 ORR W20, W20, W0, 0x0
	0x03DD6AE4 LDR W8, [X25 + 0x8]
	0x03DD6AE8 LDR W9, [X26 + 0x8]
	0x03DD6AEC ORR W28, W31, 0x20002
	0x03DD6AF0 CMP W8, W9
	0x03DD6AF4 B.EQ 0x3DD6B98
	0x03DD6AF8 CBZ X19, 0x3DD9BF0
	0x03DD6AFC MOV X0, X19
	0x03DD6B00 MOV X1, X31
	0x03DD6B04 BL 0x3DE89D4
	0x03DD6B08 CBZ X0, 0x3DD9BF0
	0x03DD6B0C ADRP X10, 0x347000
	0x03DD6B10 LDR X8, [X0]
	0x03DD6B14 LDR W24, [X25 + 0x8]
	0x03DD6B18 LDR W23, [X26 + 0x8]
	0x03DD6B1C LDR X10, [X10 + 0xED0]
	0x03DD6B20 LDRH W9, [X8 + 0x12E]
	0x03DD6B24 MOV X27, X0
	0x03DD6B28 LDR X1, [X10]
	0x03DD6B2C CBZ X9, 0x3DD6B50
	0x03DD6B30 LDR X10, [X8 + 0xB0]
	0x03DD6B34 ADD X10, X10, 0x8
	0x03DD6B38 LDUR X11, [X10 - 0x8]
	0x03DD6B3C CMP X11, X1
	0x03DD6B40 B.EQ 0x3DD6B60
	0x03DD6B44 SUBS X9, X9, 0x1
	0x03DD6B48 ADD X10, X10, 0x10
	0x03DD6B4C B.NE 0x3DD6B38
	0x03DD6B50 MOVZ W2, 0x4
	0x03DD6B54 MOV X0, X27
	0x03DD6B58 BL 0x1C5C788
	0x03DD6B5C B 0x3DD6B70
	0x03DD6B60 LDR W9, [X10]
	0x03DD6B64 ADD W9, W9, 0x4
	0x03DD6B68 ADD X8, X8, W9, 0x4, SXTW
	0x03DD6B6C ADD X0, X8, 0x138
	0x03DD6B70 LDP X8, X7, [X0]
	0x03DD6B74 ORR W1, W31, 0x20002
	0x03DD6B78 MOV X0, X27
	0x03DD6B7C MOV W2, W24
	0x03DD6B80 MOV W3, W23
	0x03DD6B84 MOV W4, W22
	0x03DD6B88 MOV W5, W21
	0x03DD6B8C MOV X6, X29
	0x03DD6B90 BLR X8
	0x03DD6B94 ORR W20, W20, W0, 0x0
	0x03DD6B98 LDR V0, [X25 + 0xC]
	0x03DD6B9C LDR V1, [X26 + 0xC]
	0x03DD6BA0 FCMP S0, S1
	0x03DD6BA4 B.EQ 0x3DD6C44
	0x03DD6BA8 CBZ X19, 0x3DD9BF0
	0x03DD6BAC MOV X0, X19
	0x03DD6BB0 MOV X1, X31
	0x03DD6BB4 BL 0x3DE89D4
	0x03DD6BB8 CBZ X0, 0x3DD9BF0
	0x03DD6BBC ADRP X10, 0x347000
	0x03DD6BC0 LDR X8, [X0]
	0x03DD6BC4 LDR V9, [X25 + 0xC]
	0x03DD6BC8 LDR V8, [X26 + 0xC]
	0x03DD6BCC LDR X10, [X10 + 0xED0]
	0x03DD6BD0 LDRH W9, [X8 + 0x12E]
	0x03DD6BD4 MOV X27, X0
	0x03DD6BD8 LDR X1, [X10]
	0x03DD6BDC CBZ X9, 0x3DD6C00
	0x03DD6BE0 LDR X10, [X8 + 0xB0]
	0x03DD6BE4 ADD X10, X10, 0x8
	0x03DD6BE8 LDUR X11, [X10 - 0x8]
	0x03DD6BEC CMP X11, X1
	0x03DD6BF0 B.EQ 0x3DD6C10
	0x03DD6BF4 SUBS X9, X9, 0x1
	0x03DD6BF8 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 624
	022 Move X19, 0x618000
	023 Move W8, [X19+442]
	024 Move X29, X6
	025 Move W20, W5
	026 Move X23, X3
	027 Move X24, X2
	028 Move W25, W1
	029 Move X22, X0
	030 Move [X31+44], W4
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {55}
	035 Move X0, 0x34D000
	036 Move X0, [X0+3792]
	037 Call 0x1C17CF4
	038 Move X0, 0x395000
	039 Move X0, [X0+864]
	040 Call 0x1C17CF4
	041 Move X0, 0x395000
	042 Move X0, [X0+888]
	043 Call 0x1C17CF4
	044 Move X0, 0x395000
	045 Move X0, [X0+856]
	046 Call 0x1C17CF4
	047 Move X0, 0x395000
	048 Move X0, [X0+880]
	049 Call 0x1C17CF4
	050 Move X0, 0x395000
	051 Move X0, [X0+872]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X19+442], W8
	055 Move W28, 9
	056 NotImplemented "Instruction MOVK not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract W8, W25, 0x70000
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X9, -52658176
	061 Add X9, X9, 1030
	062 NotImplemented "Instruction ADR not yet implemented."
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Add X10, X10, X11
	065 CallNoReturn X10
	066 Compare X22, 0
	067 JumpIfEqual {5394}
	068 Move X0, X22
	069 Move X1, X31
	070 Call VisualElement.get_styleAnimation, X0
	071 Move X19, 0x395000
	072 Move X19, [X19+864]
	073 Move X25, X0
	074 Add X0, X24, 40
	075 Move X1, [X19]
	076 Call StyleDataRef`1<VisualData>.Read, X0
	077 Move X1, [X19]
	078 Move S8, [X0]
	079 Move S9, [X0+4]
	080 Move S10, [X0+8]
	081 Move S11, [X0+12]
	082 Add X0, X23, 40
	083 Call StyleDataRef`1<VisualData>.Read, X0
	084 Compare X25, 0
	085 JumpIfEqual {5394}
	086 Move X10, 0x34D000
	087 Move S13, [X0+8]
	088 Move S12, [X0+12]
	089 Move X8, [X25]
	090 Move S15, [X0]
	091 Move S14, [X0+4]
	092 Move X10, [X10+3792]
	093 NotImplemented "Instruction LDRH not yet implemented."
	094 Move X1, [X10]
	095 Compare X9, 0
	096 JumpIfEqual {103}
	097 Move X10, [X8+176]
	098 Add X10, X10, 8
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract X9, X9, 1
	102 Add X10, X10, 16
	103 Move W2, 3
	104 Move X0, X25
	105 Call 0x1C5D788
	106 Subtract W8, W25, 0x20000
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X9, -52658176
	109 Add X9, X9, 916
	110 NotImplemented "Instruction ADR not yet implemented."
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Add X10, X10, X11
	113 CallNoReturn X10
	114 Compare X22, 0
	115 JumpIfEqual {5394}
	116 Move X0, X22
	117 Move X1, X31
	118 Call VisualElement.get_styleAnimation, X0
	119 Move X19, 0x395000
	120 Move X19, [X19+856]
	121 Move X22, X0
	122 Add X0, X24, 8
	123 Move X1, [X19]
	124 Call StyleDataRef`1<LayoutData>.Read, X0
	125 Move X1, [X19]
	126 Move W24, [X0]
	127 Add X0, X23, 8
	128 Call StyleDataRef`1<LayoutData>.Read, X0
	129 Compare X22, 0
	130 JumpIfEqual {5394}
	131 Move X10, 0x34D000
	132 Move X8, [X22]
	133 Move W23, [X0]
	134 Move X10, [X10+3792]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Move X1, [X10]
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move W2, 4
	146 Move X0, X22
	147 Call 0x1C5D788
	148 Subtract W8, W25, 0x40000
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move W0, W31
	151 Move X9, -52658176
	152 Add X9, X9, 1000
	153 NotImplemented "Instruction ADR not yet implemented."
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Add X10, X10, X11
	156 CallNoReturn X10
	157 Move W3, [X31+44]
	158 Move X0, X22
	159 Move X1, X24
	160 Move X2, X23
	161 Move W4, W20
	162 Move X5, X29
	163 Add X31, X31, 624
	164 Move X20, [X31+144]
	165 Move X19, [X31+152]
	166 Move X22, [X31+128]
	167 Move X21, [X31+136]
	168 Move X24, [X31+112]
	169 Move X23, [X31+120]
	170 Move X26, [X31+96]
	171 Move X25, [X31+104]
	172 Move X28, [X31+80]
	173 Move X27, [X31+88]
	174 Move X29, [X31+64]
	175 Move X30, [X31+72]
	176 Move D9, [X31+48]
	177 Move D8, [X31+56]
	178 Move D11, [X31+32]
	179 Move D10, [X31+40]
	180 Move D13, [X31+16]
	181 Move D12, [X31+24]
	182 Move D15, [X31+160]
	183 Move D14, [X31+168]
	184 Subtract W8, W25, 0x10000
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X9, -52658176
	187 Add X9, X9, 888
	188 NotImplemented "Instruction ADR not yet implemented."
	189 NotImplemented "Instruction LDRH not yet implemented."
	190 Add X10, X10, X11
	191 CallNoReturn X10
	192 Compare X22, 0
	193 JumpIfEqual {5394}
	194 Move X0, X22
	195 Move X1, X31
	196 Call VisualElement.get_styleAnimation, X0
	197 Move X19, 0x395000
	198 Move X19, [X19+872]
	199 Move X25, X0
	200 Move X0, X24
	201 Move X1, [X19]
	202 Call 0x266D4A0, X0
	203 Move X1, [X19]
	204 Move S8, [X0]
	205 Move S9, [X0+4]
	206 Move S10, [X0+8]
	207 Move S11, [X0+12]
	208 Move X0, X23
	209 Call 0x266D4A0, X0
	210 Compare X25, 0
	211 JumpIfEqual {5394}
	212 Move X10, 0x34D000
	213 Move S13, [X0+8]
	214 Move S12, [X0+12]
	215 Move X8, [X25]
	216 Move S15, [X0]
	217 Move S14, [X0+4]
	218 Move X10, [X10+3792]
	219 NotImplemented "Instruction LDRH not yet implemented."
	220 Move X1, [X10]
	221 Compare X9, 0
	222 JumpIfEqual {229}
	223 Move X10, [X8+176]
	224 Add X10, X10, 8
	225 NotImplemented "Instruction LDUR not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Subtract X9, X9, 1
	228 Add X10, X10, 16
	229 Move W2, 3
	230 Move X0, X25
	231 Call 0x1C5D788
	232 Move TEMP, 0x30000
	233 Not TEMP
	234 Move W8, TEMP
	235 Add W8, W25, W8
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move X9, -52658176
	238 Add X9, X9, 982
	239 NotImplemented "Instruction ADR not yet implemented."
	240 NotImplemented "Instruction LDRH not yet implemented."
	241 Add X10, X10, X11
	242 CallNoReturn X10
	243 Compare X22, 0
	244 JumpIfEqual {5394}
	245 Move X0, X22
	246 Move X1, X31
	247 Call VisualElement.get_styleAnimation, X0
	248 Move X19, 0x395000
	249 Move X19, [X19+880]
	250 Move X22, X0
	251 Add X0, X24, 16
	252 Move X1, [X19]
	253 Call StyleDataRef`1<RareData>.Read, X0
	254 Move X1, [X19]
	255 Move W24, [X0+24]
	256 Add X0, X23, 16
	257 Call StyleDataRef`1<RareData>.Read, X0
	258 Compare X22, 0
	259 JumpIfEqual {5394}
	260 Move X10, 0x34D000
	261 Move X8, [X22]
	262 Move W23, [X0+24]
	263 Move X10, [X10+3792]
	264 NotImplemented "Instruction LDRH not yet implemented."
	265 Move X1, [X10]
	266 Compare X9, 0
	267 JumpIfEqual {274}
	268 Move X10, [X8+176]
	269 Add X10, X10, 8
	270 NotImplemented "Instruction LDUR not yet implemented."
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Subtract X9, X9, 1
	273 Add X10, X10, 16
	274 Move W2, 4
	275 Move X0, X22
	276 Call 0x1C5D788
	277 Subtract W8, W25, 0x50000
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Move X9, -52658176
	280 Add X9, X9, 1022
	281 NotImplemented "Instruction ADR not yet implemented."
	282 NotImplemented "Instruction LDRH not yet implemented."
	283 Add X10, X10, X11
	284 CallNoReturn X10
	285 Compare X22, 0
	286 JumpIfEqual {5394}
	287 Move X0, X22
	288 Move X1, X31
	289 Call VisualElement.get_styleAnimation, X0
	290 Move X19, 0x395000
	291 Move X19, [X19+888]
	292 Move X25, X0
	293 Add X0, X24, 24
	294 Move X1, [X19]
	295 Call StyleDataRef`1<TransformData>.Read, X0
	296 Move X8, [X0+16]
	297 Move V0, [X0]
	298 Move X1, [X19]
	299 Add X0, X23, 24
	300 Move [X31+544], X8
	301 Move [X31+33], V0
	302 Call StyleDataRef`1<TransformData>.Read, X0
	303 Move X8, [X0+16]
	304 Move V0, [X0]
	305 Move [X31+512], X8
	306 Move [X31+31], V0
	307 Compare X25, 0
	308 JumpIfEqual {5394}
	309 Move V0, [X31+33]
	310 Move X8, [X31+544]
	311 Move V1, [X31+31]
	312 Move X9, [X31+512]
	313 Move [X31+21], V0
	314 Move [X31+352], X8
	315 Move [X31+19], V1
	316 Move [X31+320], X9
	317 Move X10, 0x34D000
	318 Move X8, [X25]
	319 Move X10, [X10+3792]
	320 NotImplemented "Instruction LDRH not yet implemented."
	321 Move X1, [X10]
	322 Compare X9, 0
	323 JumpIfEqual {330}
	324 Move X10, [X8+176]
	325 Add X10, X10, 8
	326 NotImplemented "Instruction LDUR not yet implemented."
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Subtract X9, X9, 1
	329 Add X10, X10, 16
	330 Move W2, 11
	331 Move X0, X25
	332 Call 0x1C5D788
	333 Move [X31+32], W20
	334 Compare X22, 0
	335 JumpIfEqual {5394}
	336 Move X0, X22
	337 Move X1, X31
	338 Move X20, X29
	339 Call VisualElement.get_styleAnimation, X0
	340 Move X19, 0x395000
	341 Move X19, [X19+864]
	342 Add X24, X24, 40
	343 Move X25, X0
	344 Move X0, X24
	345 Move X1, [X19]
	346 Call StyleDataRef`1<VisualData>.Read, X0
	347 Move X1, [X19]
	348 Move X27, [X0+48]
	349 Move W26, [X0+56]
	350 Add X23, X23, 40
	351 Move X0, X23
	352 Call StyleDataRef`1<VisualData>.Read, X0
	353 Compare X25, 0
	354 JumpIfEqual {5394}
	355 Move X21, 0x34D000
	356 Move X8, [X25]
	357 Move W28, [X0+56]
	358 Move X29, [X0+48]
	359 Move X21, [X21+3792]
	360 NotImplemented "Instruction LDRH not yet implemented."
	361 Move X1, [X21]
	362 Compare X9, 0
	363 JumpIfEqual {370}
	364 Move X10, [X8+176]
	365 Add X10, X10, 8
	366 NotImplemented "Instruction LDUR not yet implemented."
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Subtract X9, X9, 1
	369 Add X10, X10, 16
	370 Move W2, 13
	371 Move X0, X25
	372 Call 0x1C5D788
	373 Move [X31+32], X29
	374 Compare X22, 0
	375 JumpIfEqual {5394}
	376 Move X0, X22
	377 Move X1, X31
	378 Call VisualElement.get_styleAnimation, X0
	379 Move X19, 0x395000
	380 Move X19, [X19+864]
	381 Add X24, X24, 40
	382 Move X25, X0
	383 Move X0, X24
	384 Move X1, [X19]
	385 Call StyleDataRef`1<VisualData>.Read, X0
	386 Move X1, [X19]
	387 Move S8, [X0+164]
	388 Move S9, [X0+168]
	389 Move S10, [X0+172]
	390 Move S11, [X0+176]
	391 Add X23, X23, 40
	392 Move X0, X23
	393 Call StyleDataRef`1<VisualData>.Read, X0
	394 Compare X25, 0
	395 JumpIfEqual {5394}
	396 Move X28, 0x34D000
	397 Move S13, [X0+172]
	398 Move S12, [X0+176]
	399 Move X8, [X25]
	400 Move S15, [X0+164]
	401 Move S14, [X0+168]
	402 Move X28, [X28+3792]
	403 NotImplemented "Instruction LDRH not yet implemented."
	404 Move X1, [X28]
	405 Compare X9, 0
	406 JumpIfEqual {413}
	407 Move X10, [X8+176]
	408 Add X10, X10, 8
	409 NotImplemented "Instruction LDUR not yet implemented."
	410 NotImplemented "Instruction CMP not yet implemented."
	411 Subtract X9, X9, 1
	412 Add X10, X10, 16
	413 Move W2, 3
	414 Move X0, X25
	415 Call 0x1C5D788
	416 Compare X22, 0
	417 JumpIfEqual {5394}
	418 Move X0, X22
	419 Move X1, X31
	420 Call VisualElement.get_styleAnimation, X0
	421 Move X19, 0x394000
	422 Move X19, [X19+864]
	423 Add X24, X24, 40
	424 Move X25, X0
	425 Move X0, X24
	426 Move X1, [X19]
	427 Call StyleDataRef`1<VisualData>.Read, X0
	428 Move X1, [X19]
	429 NotImplemented "Instruction LDUR not yet implemented."
	430 Add X23, X23, 40
	431 Move X0, X23
	432 Call StyleDataRef`1<VisualData>.Read, X0
	433 Compare X25, 0
	434 JumpIfEqual {5394}
	435 Move X10, 0x34C000
	436 Move X8, [X25]
	437 NotImplemented "Instruction LDUR not yet implemented."
	438 Move X10, [X10+3792]
	439 NotImplemented "Instruction LDRH not yet implemented."
	440 Move X1, [X10]
	441 Compare X9, 0
	442 JumpIfEqual {449}
	443 Move X10, [X8+176]
	444 Add X10, X10, 8
	445 NotImplemented "Instruction LDUR not yet implemented."
	446 NotImplemented "Instruction CMP not yet implemented."
	447 Subtract X9, X9, 1
	448 Add X10, X10, 16
	449 Move W2, 2
	450 Move X0, X25
	451 Call 0x1C5D788
	452 Compare X22, 0
	453 JumpIfEqual {5394}
	454 Move X0, X22
	455 Move X1, X31
	456 Call VisualElement.get_styleAnimation, X0
	457 Move X19, 0x394000
	458 Move X19, [X19+856]
	459 Add X24, X24, 8
	460 Move X25, X0
	461 Move X0, X24
	462 Move X1, [X19]
	463 Call StyleDataRef`1<LayoutData>.Read, X0
	464 Move X1, [X19]
	465 Move V8, [X0+24]
	466 Add X23, X23, 8
	467 Move X0, X23
	468 Call StyleDataRef`1<LayoutData>.Read, X0
	469 Compare X25, 0
	470 JumpIfEqual {5394}
	471 Move X28, 0x34C000
	472 Move X8, [X25]
	473 Move V9, [X0+24]
	474 Move X28, [X28+3792]
	475 NotImplemented "Instruction LDRH not yet implemented."
	476 Move X1, [X28]
	477 Compare X9, 0
	478 JumpIfEqual {485}
	479 Move X10, [X8+176]
	480 Add X10, X10, 8
	481 NotImplemented "Instruction LDUR not yet implemented."
	482 NotImplemented "Instruction CMP not yet implemented."
	483 Subtract X9, X9, 1
	484 Add X10, X10, 16
	485 Move X0, X25
	486 Move W2, W31
	487 Call 0x1C5D788
	488 Compare X22, 0
	489 JumpIfEqual {5394}
	490 Move X0, X22
	491 Move X1, X31
	492 Call VisualElement.get_styleAnimation, X0
	493 Move X19, 0x394000
	494 Move X19, [X19+856]
	495 Add X24, X24, 8
	496 Move X25, X0
	497 Move X0, X24
	498 Move X1, [X19]
	499 Call StyleDataRef`1<LayoutData>.Read, X0
	500 Move X1, [X19]
	501 Move V8, [X0+52]
	502 Add X23, X23, 8
	503 Move X0, X23
	504 Call StyleDataRef`1<LayoutData>.Read, X0
	505 Compare X25, 0
	506 JumpIfEqual {5394}
	507 Move X27, 0x34C000
	508 Move X8, [X25]
	509 Move V9, [X0+52]
	510 Move X27, [X27+3792]
	511 NotImplemented "Instruction LDRH not yet implemented."
	512 Move X1, [X27]
	513 Compare X9, 0
	514 JumpIfEqual {521}
	515 Move X10, [X8+176]
	516 Add X10, X10, 8
	517 NotImplemented "Instruction LDUR not yet implemented."
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Subtract X9, X9, 1
	520 Add X10, X10, 16
	521 Move X0, X25
	522 Move W2, W31
	523 Call 0x1C5D788
	524 Compare X22, 0
	525 JumpIfEqual {5394}
	526 Move X0, X22
	527 Move X1, X31
	528 Call VisualElement.get_styleAnimation, X0
	529 Move X19, 0x394000
	530 Move X19, [X19+856]
	531 Add X24, X24, 8
	532 Move X25, X0
	533 Move X0, X24
	534 Move X1, [X19]
	535 Call StyleDataRef`1<LayoutData>.Read, X0
	536 Move X1, [X19]
	537 NotImplemented "Instruction LDUR not yet implemented."
	538 Add X23, X23, 8
	539 Move X0, X23
	540 Call StyleDataRef`1<LayoutData>.Read, X0
	541 Compare X25, 0
	542 JumpIfEqual {5394}
	543 Move X10, 0x34C000
	544 Move X8, [X25]
	545 NotImplemented "Instruction LDUR not yet implemented."
	546 Move X10, [X10+3792]
	547 NotImplemented "Instruction LDRH not yet implemented."
	548 Move X1, [X10]
	549 Compare X9, 0
	550 JumpIfEqual {557}
	551 Move X10, [X8+176]
	552 Add X10, X10, 8
	553 NotImplemented "Instruction LDUR not yet implemented."
	554 NotImplemented "Instruction CMP not yet implemented."
	555 Subtract X9, X9, 1
	556 Add X10, X10, 16
	557 Move W2, 2
	558 Move X0, X25
	559 Call 0x1C5D788
	560 Compare X22, 0
	561 JumpIfEqual {5394}
	562 Move X0, X22
	563 Move X1, X31
	564 Call VisualElement.get_styleAnimation, X0
	565 Move X19, 0x394000
	566 Move X19, [X19+856]
	567 Add X24, X24, 8
	568 Move X25, X0
	569 Move X0, X24
	570 Move X1, [X19]
	571 Call StyleDataRef`1<LayoutData>.Read, X0
	572 Move X1, [X19]
	573 NotImplemented "Instruction LDUR not yet implemented."
	574 Add X23, X23, 8
	575 Move X0, X23
	576 Call StyleDataRef`1<LayoutData>.Read, X0
	577 Compare X25, 0
	578 JumpIfEqual {5394}
	579 Move X10, 0x34C000
	580 Move X8, [X25]
	581 NotImplemented "Instruction LDUR not yet implemented."
	582 Move X10, [X10+3792]
	583 NotImplemented "Instruction LDRH not yet implemented."
	584 Move X1, [X10]
	585 Compare X9, 0
	586 JumpIfEqual {593}
	587 Move X10, [X8+176]
	588 Add X10, X10, 8
	589 NotImplemented "Instruction LDUR not yet implemented."
	590 NotImplemented "Instruction CMP not yet implemented."
	591 Subtract X9, X9, 1
	592 Add X10, X10, 16
	593 Move W2, 2
	594 Move X0, X25
	595 Call 0x1C5D788
	596 Compare X22, 0
	597 JumpIfEqual {5394}
	598 Move X0, X22
	599 Move X1, X31
	600 Move X19, X29
	601 Call VisualElement.get_styleAnimation, X0
	602 Move X28, 0x394000
	603 Move X28, [X28+864]
	604 Add X24, X24, 40
	605 Move X25, X0
	606 Move X0, X24
	607 Move X1, [X28]
	608 Call StyleDataRef`1<VisualData>.Read, X0
	609 Move X1, [X28]
	610 Move X27, [X0+48]
	611 Move W26, [X0+56]
	612 Add X23, X23, 40
	613 Move X0, X23
	614 Call StyleDataRef`1<VisualData>.Read, X0
	615 Compare X25, 0
	616 JumpIfEqual {5394}
	617 Move X10, 0x34C000
	618 Move X8, [X25]
	619 Move W28, [X0+56]
	620 Move X29, [X0+48]
	621 Move X10, [X10+3792]
	622 NotImplemented "Instruction LDRH not yet implemented."
	623 Move X1, [X10]
	624 Compare X9, 0
	625 JumpIfEqual {632}
	626 Move X10, [X8+176]
	627 Add X10, X10, 8
	628 NotImplemented "Instruction LDUR not yet implemented."
	629 NotImplemented "Instruction CMP not yet implemented."
	630 Subtract X9, X9, 1
	631 Add X10, X10, 16
	632 Move W2, 13
	633 Move X0, X25
	634 Call 0x1C5D788
	635 Compare X22, 0
	636 JumpIfEqual {5394}
	637 Move X0, X22
	638 Move X1, X31
	639 Call VisualElement.get_styleAnimation, X0
	640 Move X19, 0x394000
	641 Move X19, [X19+872]
	642 Move X25, X0
	643 Move X0, X24
	644 Move X1, [X19]
	645 Call 0x266D4A0, X0
	646 Move X1, [X19]
	647 Move S8, [X0+104]
	648 Move S9, [X0+108]
	649 Move S10, [X0+112]
	650 Move S11, [X0+116]
	651 Move X0, X23
	652 Call 0x266D4A0, X0
	653 Compare X25, 0
	654 JumpIfEqual {5394}
	655 Move X26, 0x34C000
	656 Move S13, [X0+112]
	657 Move S12, [X0+116]
	658 Move X8, [X25]
	659 Move S15, [X0+104]
	660 Move S14, [X0+108]
	661 Move X26, [X26+3792]
	662 NotImplemented "Instruction LDRH not yet implemented."
	663 Move X1, [X26]
	664 Compare X9, 0
	665 JumpIfEqual {672}
	666 Move X10, [X8+176]
	667 Add X10, X10, 8
	668 NotImplemented "Instruction LDUR not yet implemented."
	669 NotImplemented "Instruction CMP not yet implemented."
	670 Subtract X9, X9, 1
	671 Add X10, X10, 16
	672 Move W2, 3
	673 Move X0, X25
	674 Call 0x1C5D788
	675 Compare X22, 0
	676 JumpIfEqual {5394}
	677 Move X0, X22
	678 Move X1, X31
	679 Call VisualElement.get_styleAnimation, X0
	680 Move X19, 0x394000
	681 Move X19, [X19+864]
	682 Move X22, X0
	683 Add X0, X24, 40
	684 Move X1, [X19]
	685 Call StyleDataRef`1<VisualData>.Read, X0
	686 Move V1, [X0+16]
	687 Move V0, [X0+32]
	688 Move X1, [X19]
	689 Add X0, X23, 40
	690 Move [X31+528], V1
	691 Move [X31+536], V0
	692 Call StyleDataRef`1<VisualData>.Read, X0
	693 Move V1, [X0+16]
	694 Move V0, [X0+32]
	695 Move [X31+496], V1
	696 Move [X31+504], V0
	697 Compare X22, 0
	698 JumpIfEqual {5394}
	699 Move V0, [X31+528]
	700 Move V1, [X31+544]
	701 Move V2, [X31+496]
	702 Move V3, [X31+512]
	703 Move X10, 0x34C000
	704 Move [X31+464], V0
	705 Move [X31+472], V1
	706 Move [X31+432], V2
	707 Move [X31+440], V3
	708 Move X8, [X22]
	709 Move X10, [X10+3792]
	710 NotImplemented "Instruction LDRH not yet implemented."
	711 Move X1, [X10]
	712 Compare X9, 0
	713 JumpIfEqual {720}
	714 Move X10, [X8+176]
	715 Add X10, X10, 8
	716 NotImplemented "Instruction LDUR not yet implemented."
	717 NotImplemented "Instruction CMP not yet implemented."
	718 Subtract X9, X9, 1
	719 Add X10, X10, 16
	720 Move W2, 5
	721 Move X0, X22
	722 Call 0x1C5D788
	723 Compare X22, 0
	724 JumpIfEqual {5394}
	725 Move X0, X22
	726 Move X1, X31
	727 Call VisualElement.get_styleAnimation, X0
	728 Move X19, 0x394000
	729 Move X19, [X19+864]
	730 Move X22, X0
	731 Add X0, X24, 40
	732 Move X1, [X19]
	733 Call StyleDataRef`1<VisualData>.Read, X0
	734 Move X1, [X19]
	735 Move X25, [X0+48]
	736 Move W24, [X0+56]
	737 Add X0, X23, 40
	738 Call StyleDataRef`1<VisualData>.Read, X0
	739 Compare X22, 0
	740 JumpIfEqual {5394}
	741 Move X10, 0x34C000
	742 Move X8, [X22]
	743 Move W23, [X0+56]
	744 Move X26, [X0+48]
	745 Move X10, [X10+3792]
	746 NotImplemented "Instruction LDRH not yet implemented."
	747 Move X1, [X10]
	748 Compare X9, 0
	749 JumpIfEqual {756}
	750 Move X10, [X8+176]
	751 Add X10, X10, 8
	752 NotImplemented "Instruction LDUR not yet implemented."
	753 NotImplemented "Instruction CMP not yet implemented."
	754 Subtract X9, X9, 1
	755 Add X10, X10, 16
	756 Move W2, 13
	757 Move X0, X22
	758 Call 0x1C5D788
	759 Compare X22, 0
	760 JumpIfEqual {5394}
	761 Move X0, X22
	762 Move X1, X31
	763 Call VisualElement.get_styleAnimation, X0
	764 Move X19, 0x394000
	765 Move X19, [X19+864]
	766 Move X22, X0
	767 Add X0, X24, 40
	768 Move X1, [X19]
	769 Call StyleDataRef`1<VisualData>.Read, X0
	770 Move X1, [X19]
	771 NotImplemented "Instruction LDUR not yet implemented."
	772 Move W24, [X0+68]
	773 Add X0, X23, 40
	774 Call StyleDataRef`1<VisualData>.Read, X0
	775 Compare X22, 0
	776 JumpIfEqual {5394}
	777 Move X10, 0x34C000
	778 Move X8, [X22]
	779 Move W23, [X0+68]
	780 NotImplemented "Instruction LDUR not yet implemented."
	781 Move X10, [X10+3792]
	782 NotImplemented "Instruction LDRH not yet implemented."
	783 Move X1, [X10]
	784 Compare X9, 0
	785 JumpIfEqual {792}
	786 Move X10, [X8+176]
	787 Add X10, X10, 8
	788 NotImplemented "Instruction LDUR not yet implemented."
	789 NotImplemented "Instruction CMP not yet implemented."
	790 Subtract X9, X9, 1
	791 Add X10, X10, 16
	792 Move W2, 13
	793 Move X0, X22
	794 Call 0x1C5D788
	795 Compare X22, 0
	796 JumpIfEqual {5394}
	797 Move X0, X22
	798 Move X1, X31
	799 Call VisualElement.get_styleAnimation, X0
	800 Move X19, 0x394000
	801 Move X19, [X19+864]
	802 Move X22, X0
	803 Add X0, X24, 40
	804 Move X1, [X19]
	805 Call StyleDataRef`1<VisualData>.Read, X0
	806 Move X1, [X19]
	807 Move X24, [X0+72]
	808 Add X0, X23, 40
	809 Call StyleDataRef`1<VisualData>.Read, X0
	810 Compare X22, 0
	811 JumpIfEqual {5394}
	812 Move X10, 0x34C000
	813 Move X8, [X22]
	814 Move X23, [X0+72]
	815 Move X10, [X10+3792]
	816 NotImplemented "Instruction LDRH not yet implemented."
	817 Move X1, [X10]
	818 Compare X9, 0
	819 JumpIfEqual {826}
	820 Move X10, [X8+176]
	821 Add X10, X10, 8
	822 NotImplemented "Instruction LDUR not yet implemented."
	823 NotImplemented "Instruction CMP not yet implemented."
	824 Subtract X9, X9, 1
	825 Add X10, X10, 16
	826 Move W2, 14
	827 Move X0, X22
	828 Call 0x1C5D788
	829 Compare X22, 0
	830 JumpIfEqual {5394}
	831 Move X0, X22
	832 Move X1, X31
	833 Call VisualElement.get_styleAnimation, X0
	834 Move X19, 0x394000
	835 Move X19, [X19+864]
	836 Move X22, X0
	837 Add X0, X24, 40
	838 Move X1, [X19]
	839 Call StyleDataRef`1<VisualData>.Read, X0
	840 Move W8, [X0+96]
	841 Move V0, [X0+5]
	842 Move X1, [X19]
	843 Add X0, X23, 40
	844 Move [X31+544], W8
	845 Move [X31+33], V0
	846 Call StyleDataRef`1<VisualData>.Read, X0
	847 Move W8, [X0+96]
	848 Move V0, [X0+5]
	849 Move [X31+512], W8
	850 Move [X31+31], V0
	851 Compare X22, 0
	852 JumpIfEqual {5394}
	853 Move V0, [X31+33]
	854 Move W8, [X31+544]
	855 Move V1, [X31+31]
	856 Move W9, [X31+512]
	857 Move [X31+25], V0
	858 Move [X31+416], W8
	859 Move [X31+23], V1
	860 Move [X31+384], W9
	861 Move X10, 0x34C000
	862 Move X8, [X22]
	863 Move X10, [X10+3792]
	864 NotImplemented "Instruction LDRH not yet implemented."
	865 Move X1, [X10]
	866 Compare X9, 0
	867 JumpIfEqual {874}
	868 Move X10, [X8+176]
	869 Add X10, X10, 8
	870 NotImplemented "Instruction LDUR not yet implemented."
	871 NotImplemented "Instruction CMP not yet implemented."
	872 Subtract X9, X9, 1
	873 Add X10, X10, 16
	874 Move W2, 15
	875 Move X0, X22
	876 Call 0x1C5D788
	877 Compare X22, 0
	878 JumpIfEqual {5394}
	879 Move X0, X22
	880 Move X1, X31
	881 Call VisualElement.get_styleAnimation, X0
	882 Move X19, 0x394000
	883 Move X19, [X19+864]
	884 Move X25, X0
	885 Add X0, X24, 40
	886 Move X1, [X19]
	887 Call StyleDataRef`1<VisualData>.Read, X0
	888 Move X1, [X19]
	889 Move S8, [X0+100]
	890 Move S9, [X0+104]
	891 Move S10, [X0+108]
	892 Move S11, [X0+112]
	893 Add X0, X23, 40
	894 Call StyleDataRef`1<VisualData>.Read, X0
	895 Compare X25, 0
	896 JumpIfEqual {5394}
	897 Move X10, 0x34C000
	898 Move S13, [X0+108]
	899 Move S12, [X0+112]
	900 Move X8, [X25]
	901 Move S15, [X0+100]
	902 Move S14, [X0+104]
	903 Move X10, [X10+3792]
	904 NotImplemented "Instruction LDRH not yet implemented."
	905 Move X1, [X10]
	906 Compare X9, 0
	907 JumpIfEqual {914}
	908 Move X10, [X8+176]
	909 Add X10, X10, 8
	910 NotImplemented "Instruction LDUR not yet implemented."
	911 NotImplemented "Instruction CMP not yet implemented."
	912 Subtract X9, X9, 1
	913 Add X10, X10, 16
	914 Move W2, 3
	915 Move X0, X25
	916 Call 0x1C5D788
	917 Compare X22, 0
	918 JumpIfEqual {5394}
	919 Move X0, X22
	920 Move X1, X31
	921 Call VisualElement.get_styleAnimation, X0
	922 Move X19, 0x394000
	923 Move X19, [X19+864]
	924 Move X22, X0
	925 Add X0, X24, 40
	926 Move X1, [X19]
	927 Call StyleDataRef`1<VisualData>.Read, X0
	928 Move X1, [X19]
	929 NotImplemented "Instruction LDUR not yet implemented."
	930 Add X0, X23, 40
	931 Call StyleDataRef`1<VisualData>.Read, X0
	932 Compare X22, 0
	933 JumpIfEqual {5394}
	934 Move X10, 0x34C000
	935 Move X8, [X22]
	936 NotImplemented "Instruction LDUR not yet implemented."
	937 Move X10, [X10+3792]
	938 NotImplemented "Instruction LDRH not yet implemented."
	939 Move X1, [X10]
	940 Compare X9, 0
	941 JumpIfEqual {948}
	942 Move X10, [X8+176]
	943 Add X10, X10, 8
	944 NotImplemented "Instruction LDUR not yet implemented."
	945 NotImplemented "Instruction CMP not yet implemented."
	946 Subtract X9, X9, 1
	947 Add X10, X10, 16
	948 Move W2, 2
	949 Move X0, X22
	950 Call 0x1C5D788
	951 Compare X22, 0
	952 JumpIfEqual {5394}
	953 Move X0, X22
	954 Move X1, X31
	955 Call VisualElement.get_styleAnimation, X0
	956 Move X19, 0x394000
	957 Move X19, [X19+864]
	958 Move X22, X0
	959 Add X0, X24, 40
	960 Move X1, [X19]
	961 Call StyleDataRef`1<VisualData>.Read, X0
	962 Move X1, [X19]
	963 NotImplemented "Instruction LDUR not yet implemented."
	964 Add X0, X23, 40
	965 Call StyleDataRef`1<VisualData>.Read, X0
	966 Compare X22, 0
	967 JumpIfEqual {5394}
	968 Move X10, 0x34C000
	969 Move X8, [X22]
	970 NotImplemented "Instruction LDUR not yet implemented."
	971 Move X10, [X10+3792]
	972 NotImplemented "Instruction LDRH not yet implemented."
	973 Move X1, [X10]
	974 Compare X9, 0
	975 JumpIfEqual {982}
	976 Move X10, [X8+176]
	977 Add X10, X10, 8
	978 NotImplemented "Instruction LDUR not yet implemented."
	979 NotImplemented "Instruction CMP not yet implemented."
	980 Subtract X9, X9, 1
	981 Add X10, X10, 16
	982 Move W2, 2
	983 Move X0, X22
	984 Call 0x1C5D788
	985 Compare X22, 0
	986 JumpIfEqual {5394}
	987 Move X0, X22
	988 Move X1, X31
	989 Call VisualElement.get_styleAnimation, X0
	990 Move X19, 0x394000
	991 Move X19, [X19+864]
	992 Move X25, X0
	993 Add X0, X24, 40
	994 Move X1, [X19]
	995 Call StyleDataRef`1<VisualData>.Read, X0
	996 Move X1, [X19]
	997 Move S8, [X0+132]
	998 Move S9, [X0+136]
	999 Move S10, [X0+140]
	1000 Move S11, [X0+144]
	1001 Add X0, X23, 40
	1002 Call StyleDataRef`1<VisualData>.Read, X0
	1003 Compare X25, 0
	1004 JumpIfEqual {5394}
	1005 Move X10, 0x34C000
	1006 Move S13, [X0+140]
	1007 Move S12, [X0+144]
	1008 Move X8, [X25]
	1009 Move S15, [X0+132]
	1010 Move S14, [X0+136]
	1011 Move X10, [X10+3792]
	1012 NotImplemented "Instruction LDRH not yet implemented."
	1013 Move X1, [X10]
	1014 Compare X9, 0
	1015 JumpIfEqual {1022}
	1016 Move X10, [X8+176]
	1017 Add X10, X10, 8
	1018 NotImplemented "Instruction LDUR not yet implemented."
	1019 NotImplemented "Instruction CMP not yet implemented."
	1020 Subtract X9, X9, 1
	1021 Add X10, X10, 16
	1022 Move W2, 3
	1023 Move X0, X25
	1024 Call 0x1C5D788
	1025 Compare X22, 0
	1026 JumpIfEqual {5394}
	1027 Move X0, X22
	1028 Move X1, X31
	1029 Call VisualElement.get_styleAnimation, X0
	1030 Move X19, 0x394000
	1031 Move X19, [X19+864]
	1032 Move X25, X0
	1033 Add X0, X24, 40
	1034 Move X1, [X19]
	1035 Call StyleDataRef`1<VisualData>.Read, X0
	1036 Move X1, [X19]
	1037 Move S8, [X0+148]
	1038 Move S9, [X0+152]
	1039 Move S10, [X0+156]
	1040 Move S11, [X0+160]
	1041 Add X0, X23, 40
	1042 Call StyleDataRef`1<VisualData>.Read, X0
	1043 Compare X25, 0
	1044 JumpIfEqual {5394}
	1045 Move X10, 0x34C000
	1046 Move S13, [X0+156]
	1047 Move S12, [X0+160]
	1048 Move X8, [X25]
	1049 Move S15, [X0+148]
	1050 Move S14, [X0+152]
	1051 Move X10, [X10+3792]
	1052 NotImplemented "Instruction LDRH not yet implemented."
	1053 Move X1, [X10]
	1054 Compare X9, 0
	1055 JumpIfEqual {1062}
	1056 Move X10, [X8+176]
	1057 Add X10, X10, 8
	1058 NotImplemented "Instruction LDUR not yet implemented."
	1059 NotImplemented "Instruction CMP not yet implemented."
	1060 Subtract X9, X9, 1
	1061 Add X10, X10, 16
	1062 Move W2, 3
	1063 Move X0, X25
	1064 Call 0x1C5D788
	1065 Compare X22, 0
	1066 JumpIfEqual {5394}
	1067 Move X0, X22
	1068 Move X1, X31
	1069 Call VisualElement.get_styleAnimation, X0
	1070 Move X19, 0x394000
	1071 Move X19, [X19+864]
	1072 Move X25, X0
	1073 Add X0, X24, 40
	1074 Move X1, [X19]
	1075 Call StyleDataRef`1<VisualData>.Read, X0
	1076 Move X1, [X19]
	1077 Move S8, [X0+164]
	1078 Move S9, [X0+168]
	1079 Move S10, [X0+172]
	1080 Move S11, [X0+176]
	1081 Add X0, X23, 40
	1082 Call StyleDataRef`1<VisualData>.Read, X0
	1083 Compare X25, 0
	1084 JumpIfEqual {5394}
	1085 Move X10, 0x34C000
	1086 Move S13, [X0+172]
	1087 Move S12, [X0+176]
	1088 Move X8, [X25]
	1089 Move S15, [X0+164]
	1090 Move S14, [X0+168]
	1091 Move X10, [X10+3792]
	1092 NotImplemented "Instruction LDRH not yet implemented."
	1093 Move X1, [X10]
	1094 Compare X9, 0
	1095 JumpIfEqual {1102}
	1096 Move X10, [X8+176]
	1097 Add X10, X10, 8
	1098 NotImplemented "Instruction LDUR not yet implemented."
	1099 NotImplemented "Instruction CMP not yet implemented."
	1100 Subtract X9, X9, 1
	1101 Add X10, X10, 16
	1102 Move W2, 3
	1103 Move X0, X25
	1104 Call 0x1C5D788
	1105 Compare X22, 0
	1106 JumpIfEqual {5394}
	1107 Move X0, X22
	1108 Move X1, X31
	1109 Call VisualElement.get_styleAnimation, X0
	1110 Move X19, 0x394000
	1111 Move X19, [X19+864]
	1112 Move X22, X0
	1113 Add X0, X24, 40
	1114 Move X1, [X19]
	1115 Call StyleDataRef`1<VisualData>.Read, X0
	1116 Move X1, [X19]
	1117 NotImplemented "Instruction LDUR not yet implemented."
	1118 Add X0, X23, 40
	1119 Call StyleDataRef`1<VisualData>.Read, X0
	1120 Compare X22, 0
	1121 JumpIfEqual {5394}
	1122 Move X10, 0x34C000
	1123 Move X8, [X22]
	1124 NotImplemented "Instruction LDUR not yet implemented."
	1125 Move X10, [X10+3792]
	1126 NotImplemented "Instruction LDRH not yet implemented."
	1127 Move X1, [X10]
	1128 Compare X9, 0
	1129 JumpIfEqual {1136}
	1130 Move X10, [X8+176]
	1131 Add X10, X10, 8
	1132 NotImplemented "Instruction LDUR not yet implemented."
	1133 NotImplemented "Instruction CMP not yet implemented."
	1134 Subtract X9, X9, 1
	1135 Add X10, X10, 16
	1136 Move W2, 2
	1137 Move X0, X22
	1138 Call 0x1C5D788
	1139 Compare X22, 0
	1140 JumpIfEqual {5394}
	1141 Move X0, X22
	1142 Move X1, X31
	1143 Call VisualElement.get_styleAnimation, X0
	1144 Move X19, 0x394000
	1145 Move X19, [X19+864]
	1146 Move X22, X0
	1147 Add X0, X24, 40
	1148 Move X1, [X19]
	1149 Call StyleDataRef`1<VisualData>.Read, X0
	1150 Move X1, [X19]
	1151 NotImplemented "Instruction LDUR not yet implemented."
	1152 Add X0, X23, 40
	1153 Call StyleDataRef`1<VisualData>.Read, X0
	1154 Compare X22, 0
	1155 JumpIfEqual {5394}
	1156 Move X10, 0x34C000
	1157 Move X8, [X22]
	1158 NotImplemented "Instruction LDUR not yet implemented."
	1159 Move X10, [X10+3792]
	1160 NotImplemented "Instruction LDRH not yet implemented."
	1161 Move X1, [X10]
	1162 Compare X9, 0
	1163 JumpIfEqual {1170}
	1164 Move X10, [X8+176]
	1165 Add X10, X10, 8
	1166 NotImplemented "Instruction LDUR not yet implemented."
	1167 NotImplemented "Instruction CMP not yet implemented."
	1168 Subtract X9, X9, 1
	1169 Add X10, X10, 16
	1170 Move W2, 2
	1171 Move X0, X22
	1172 Call 0x1C5D788
	1173 Compare X22, 0
	1174 JumpIfEqual {5394}
	1175 Move X0, X22
	1176 Move X1, X31
	1177 Call VisualElement.get_styleAnimation, X0
	1178 Move X19, 0x394000
	1179 Move X19, [X19+864]
	1180 Move X22, X0
	1181 Add X0, X24, 40
	1182 Move X1, [X19]
	1183 Call StyleDataRef`1<VisualData>.Read, X0
	1184 Move X1, [X19]
	1185 Move V8, [X0+196]
	1186 Add X0, X23, 40
	1187 Call StyleDataRef`1<VisualData>.Read, X0
	1188 Compare X22, 0
	1189 JumpIfEqual {5394}
	1190 Move X10, 0x34C000
	1191 Move X8, [X22]
	1192 Move V9, [X0+196]
	1193 Move X10, [X10+3792]
	1194 NotImplemented "Instruction LDRH not yet implemented."
	1195 Move X1, [X10]
	1196 Compare X9, 0
	1197 JumpIfEqual {1204}
	1198 Move X10, [X8+176]
	1199 Add X10, X10, 8
	1200 NotImplemented "Instruction LDUR not yet implemented."
	1201 NotImplemented "Instruction CMP not yet implemented."
	1202 Subtract X9, X9, 1
	1203 Add X10, X10, 16
	1204 Move X0, X22
	1205 Move W2, W31
	1206 Call 0x1C5D788
	1207 Compare X22, 0
	1208 JumpIfEqual {5394}
	1209 Move X0, X22
	1210 Move X1, X31
	1211 Call VisualElement.get_styleAnimation, X0
	1212 Move X19, 0x394000
	1213 Move X19, [X19+864]
	1214 Move X22, X0
	1215 Add X0, X24, 40
	1216 Move X1, [X19]
	1217 Call StyleDataRef`1<VisualData>.Read, X0
	1218 Move X1, [X19]
	1219 Move W24, [X0+200]
	1220 Add X0, X23, 40
	1221 Call StyleDataRef`1<VisualData>.Read, X0
	1222 Compare X22, 0
	1223 JumpIfEqual {5394}
	1224 Move X10, 0x34C000
	1225 Move X8, [X22]
	1226 Move W23, [X0+200]
	1227 Move X10, [X10+3792]
	1228 NotImplemented "Instruction LDRH not yet implemented."
	1229 Move X1, [X10]
	1230 Compare X9, 0
	1231 JumpIfEqual {1238}
	1232 Move X10, [X8+176]
	1233 Add X10, X10, 8
	1234 NotImplemented "Instruction LDUR not yet implemented."
	1235 NotImplemented "Instruction CMP not yet implemented."
	1236 Subtract X9, X9, 1
	1237 Add X10, X10, 16
	1238 Move W2, 4
	1239 Move X0, X22
	1240 Call 0x1C5D788
	1241 Compare X22, 0
	1242 JumpIfEqual {5394}
	1243 Move X0, X22
	1244 Move X1, X31
	1245 Call VisualElement.get_styleAnimation, X0
	1246 Move X19, 0x394000
	1247 Move X19, [X19+888]
	1248 Move X25, X0
	1249 Add X0, X24, 24
	1250 Move X1, [X19]
	1251 Call StyleDataRef`1<TransformData>.Read, X0
	1252 Move X1, [X19]
	1253 Move X24, [X0+24]
	1254 Move X26, [X0+32]
	1255 Add X0, X23, 24
	1256 Call StyleDataRef`1<TransformData>.Read, X0
	1257 Compare X25, 0
	1258 JumpIfEqual {5394}
	1259 Move X10, 0x34C000
	1260 Move X8, [X25]
	1261 Move X27, [X0+24]
	1262 Move X23, [X0+32]
	1263 Move X10, [X10+3792]
	1264 NotImplemented "Instruction LDRH not yet implemented."
	1265 Move X1, [X10]
	1266 Compare X9, 0
	1267 JumpIfEqual {1274}
	1268 Move X10, [X8+176]
	1269 Add X10, X10, 8
	1270 NotImplemented "Instruction LDUR not yet implemented."
	1271 NotImplemented "Instruction CMP not yet implemented."
	1272 Subtract X9, X9, 1
	1273 Add X10, X10, 16
	1274 Move W2, 9
	1275 Move X0, X25
	1276 Call 0x1C5D788
	1277 Compare X22, 0
	1278 JumpIfEqual {5394}
	1279 Move X0, X22
	1280 Move X1, X31
	1281 Call VisualElement.get_styleAnimation, X0
	1282 Move X19, 0x394000
	1283 Move X19, [X19+888]
	1284 Move X25, X0
	1285 Add X0, X24, 24
	1286 Move X1, [X19]
	1287 Call StyleDataRef`1<TransformData>.Read, X0
	1288 Move W8, [X0+56]
	1289 NotImplemented "Instruction LDUR not yet implemented."
	1290 Move X1, [X19]
	1291 Add X0, X23, 24
	1292 Move [X31+544], W8
	1293 Move [X31+33], V0
	1294 Call StyleDataRef`1<TransformData>.Read, X0
	1295 Move W8, [X0+56]
	1296 NotImplemented "Instruction LDUR not yet implemented."
	1297 Move [X31+512], W8
	1298 Move [X31+31], V0
	1299 Compare X25, 0
	1300 JumpIfEqual {5394}
	1301 Move V0, [X31+33]
	1302 Move W8, [X31+544]
	1303 Move V1, [X31+31]
	1304 Move W9, [X31+512]
	1305 Move [X31+13], V0
	1306 Move [X31+224], W8
	1307 Move [X31+11], V1
	1308 Move [X31+192], W9
	1309 Move X10, 0x34C000
	1310 Move X8, [X25]
	1311 Move X10, [X10+3792]
	1312 NotImplemented "Instruction LDRH not yet implemented."
	1313 Move X1, [X10]
	1314 Compare X9, 0
	1315 JumpIfEqual {1322}
	1316 Move X10, [X8+176]
	1317 Add X10, X10, 8
	1318 NotImplemented "Instruction LDUR not yet implemented."
	1319 NotImplemented "Instruction CMP not yet implemented."
	1320 Subtract X9, X9, 1
	1321 Add X10, X10, 16
	1322 Move W2, 12
	1323 Move X0, X25
	1324 Call 0x1C5D788
	1325 Compare X22, 0
	1326 JumpIfEqual {5394}
	1327 Move X0, X22
	1328 Move X1, X31
	1329 Call VisualElement.get_styleAnimation, X0
	1330 Move X19, 0x394000
	1331 Move X19, [X19+888]
	1332 Move X25, X0
	1333 Add X0, X24, 24
	1334 Move X1, [X19]
	1335 Call StyleDataRef`1<TransformData>.Read, X0
	1336 NotImplemented "Instruction LDUR not yet implemented."
	1337 NotImplemented "Instruction LDUR not yet implemented."
	1338 Move X1, [X19]
	1339 Add X0, X23, 24
	1340 Move [X31+544], X8
	1341 Move [X31+33], V0
	1342 Call StyleDataRef`1<TransformData>.Read, X0
	1343 NotImplemented "Instruction LDUR not yet implemented."
	1344 NotImplemented "Instruction LDUR not yet implemented."
	1345 Move [X31+512], X8
	1346 Move [X31+31], V0
	1347 Compare X25, 0
	1348 JumpIfEqual {5394}
	1349 Move V0, [X31+33]
	1350 Move X8, [X31+544]
	1351 Move V1, [X31+31]
	1352 Move X9, [X31+512]
	1353 Move [X31+9], V0
	1354 Move [X31+160], X8
	1355 Move [X31+7], V1
	1356 Move [X31+128], X9
	1357 Move X10, 0x34C000
	1358 Move X8, [X25]
	1359 Move X10, [X10+3792]
	1360 NotImplemented "Instruction LDRH not yet implemented."
	1361 Move X1, [X10]
	1362 Compare X9, 0
	1363 JumpIfEqual {1370}
	1364 Move X10, [X8+176]
	1365 Add X10, X10, 8
	1366 NotImplemented "Instruction LDUR not yet implemented."
	1367 NotImplemented "Instruction CMP not yet implemented."
	1368 Subtract X9, X9, 1
	1369 Add X10, X10, 16
	1370 Move W2, 10
	1371 Move X0, X25
	1372 Call 0x1C5D788
	1373 Compare X22, 0
	1374 JumpIfEqual {5394}
	1375 Move X0, X22
	1376 Move X1, X31
	1377 Call VisualElement.get_styleAnimation, X0
	1378 Move X19, 0x394000
	1379 Move X19, [X19+856]
	1380 Move X22, X0
	1381 Add X0, X24, 8
	1382 Move X1, [X19]
	1383 Call StyleDataRef`1<LayoutData>.Read, X0
	1384 Move X1, [X19]
	1385 Move W24, [X0+4]
	1386 Add X0, X23, 8
	1387 Call StyleDataRef`1<LayoutData>.Read, X0
	1388 Compare X22, 0
	1389 JumpIfEqual {5394}
	1390 Move X10, 0x34C000
	1391 Move X8, [X22]
	1392 Move W23, [X0+4]
	1393 Move X10, [X10+3792]
	1394 NotImplemented "Instruction LDRH not yet implemented."
	1395 Move X1, [X10]
	1396 Compare X9, 0
	1397 JumpIfEqual {1404}
	1398 Move X10, [X8+176]
	1399 Add X10, X10, 8
	1400 NotImplemented "Instruction LDUR not yet implemented."
	1401 NotImplemented "Instruction CMP not yet implemented."
	1402 Subtract X9, X9, 1
	1403 Add X10, X10, 16
	1404 Move W2, 4
	1405 Move X0, X22
	1406 Call 0x1C5D788
	1407 Compare X22, 0
	1408 JumpIfEqual {5394}
	1409 Move X0, X22
	1410 Move X1, X31
	1411 Call VisualElement.get_styleAnimation, X0
	1412 Move X19, 0x394000
	1413 Move X19, [X19+856]
	1414 Move X22, X0
	1415 Add X0, X24, 8
	1416 Move X1, [X19]
	1417 Call StyleDataRef`1<LayoutData>.Read, X0
	1418 Move X1, [X19]
	1419 Move W24, [X0+8]
	1420 Add X0, X23, 8
	1421 Call StyleDataRef`1<LayoutData>.Read, X0
	1422 Compare X22, 0
	1423 JumpIfEqual {5394}
	1424 Move X10, 0x34C000
	1425 Move X8, [X22]
	1426 Move W23, [X0+8]
	1427 Move X10, [X10+3792]
	1428 NotImplemented "Instruction LDRH not yet implemented."
	1429 Move X1, [X10]
	1430 Compare X9, 0
	1431 JumpIfEqual {1438}
	1432 Move X10, [X8+176]
	1433 Add X10, X10, 8
	1434 NotImplemented "Instruction LDUR not yet implemented."
	1435 NotImplemented "Instruction CMP not yet implemented."
	1436 Subtract X9, X9, 1
	1437 Add X10, X10, 16
	1438 Move W2, 4
	1439 Move X0, X22
	1440 Call 0x1C5D788
	1441 Compare X22, 0
	1442 JumpIfEqual {5394}
	1443 Move X0, X22
	1444 Move X1, X31
	1445 Call VisualElement.get_styleAnimation, X0
	1446 Move X19, 0x394000
	1447 Move X19, [X19+856]
	1448 Move X22, X0
	1449 Add X0, X24, 8
	1450 Move X1, [X19]
	1451 Call StyleDataRef`1<LayoutData>.Read, X0
	1452 Move X1, [X19]
	1453 Move V8, [X0+12]
	1454 Add X0, X23, 8
	1455 Call StyleDataRef`1<LayoutData>.Read, X0
	1456 Compare X22, 0
	1457 JumpIfEqual {5394}
	1458 Move X10, 0x34C000
	1459 Move X8, [X22]
	1460 Move V9, [X0+12]
	1461 Call 0x3EB2A2C
	1462 Return X0
	1463 NotImplemented "Instruction LDRH not yet implemented."
	1464 Move X1, [X10]
	1465 Compare X9, 0
	1466 JumpIfEqual {1473}
	1467 Move X10, [X8+176]
	1468 Add X10, X10, 8
	1469 NotImplemented "Instruction LDUR not yet implemented."
	1470 NotImplemented "Instruction CMP not yet implemented."
	1471 Subtract X9, X9, 1
	1472 Add X10, X10, 16
	1473 Move X0, X22
	1474 Move W2, W31
	1475 Call 0x1C5D788
	1476 Compare X22, 0
	1477 JumpIfEqual {5394}
	1478 Move X0, X22
	1479 Move X1, X31
	1480 Call VisualElement.get_styleAnimation, X0
	1481 Move X19, 0x393000
	1482 Move X19, [X19+856]
	1483 Move X22, X0
	1484 Add X0, X24, 8
	1485 Move X1, [X19]
	1486 Call StyleDataRef`1<LayoutData>.Read, X0
	1487 Move X1, [X19]
	1488 Move V8, [X0+16]
	1489 Add X0, X23, 8
	1490 Call StyleDataRef`1<LayoutData>.Read, X0
	1491 Compare X22, 0
	1492 JumpIfEqual {5394}
	1493 Move X10, 0x34B000
	1494 Move X8, [X22]
	1495 Move V9, [X0+16]
	1496 Move X10, [X10+3792]
	1497 NotImplemented "Instruction LDRH not yet implemented."
	1498 Move X1, [X10]
	1499 Compare X9, 0
	1500 JumpIfEqual {1507}
	1501 Move X10, [X8+176]
	1502 Add X10, X10, 8
	1503 NotImplemented "Instruction LDUR not yet implemented."
	1504 NotImplemented "Instruction CMP not yet implemented."
	1505 Subtract X9, X9, 1
	1506 Add X10, X10, 16
	1507 Move X0, X22
	1508 Move W2, W31
	1509 Call 0x1C5D788
	1510 Compare X22, 0
	1511 JumpIfEqual {5394}
	1512 Move X0, X22
	1513 Move X1, X31
	1514 Call VisualElement.get_styleAnimation, X0
	1515 Move X19, 0x393000
	1516 Move X19, [X19+856]
	1517 Move X22, X0
	1518 Add X0, X24, 8
	1519 Move X1, [X19]
	1520 Call StyleDataRef`1<LayoutData>.Read, X0
	1521 Move X1, [X19]
	1522 Move V8, [X0+20]
	1523 Add X0, X23, 8
	1524 Call StyleDataRef`1<LayoutData>.Read, X0
	1525 Compare X22, 0
	1526 JumpIfEqual {5394}
	1527 Move X10, 0x34B000
	1528 Move X8, [X22]
	1529 Move V9, [X0+20]
	1530 Move X10, [X10+3792]
	1531 NotImplemented "Instruction LDRH not yet implemented."
	1532 Move X1, [X10]
	1533 Compare X9, 0
	1534 JumpIfEqual {1541}
	1535 Move X10, [X8+176]
	1536 Add X10, X10, 8
	1537 NotImplemented "Instruction LDUR not yet implemented."
	1538 NotImplemented "Instruction CMP not yet implemented."
	1539 Subtract X9, X9, 1
	1540 Add X10, X10, 16
	1541 Move X0, X22
	1542 Move W2, W31
	1543 Call 0x1C5D788
	1544 Compare X22, 0
	1545 JumpIfEqual {5394}
	1546 Move X0, X22
	1547 Move X1, X31
	1548 Call VisualElement.get_styleAnimation, X0
	1549 Move X19, 0x393000
	1550 Move X19, [X19+856]
	1551 Move X22, X0
	1552 Add X0, X24, 8
	1553 Move X1, [X19]
	1554 Call StyleDataRef`1<LayoutData>.Read, X0
	1555 Move X1, [X19]
	1556 Move V8, [X0+24]
	1557 Add X0, X23, 8
	1558 Call StyleDataRef`1<LayoutData>.Read, X0
	1559 Compare X22, 0
	1560 JumpIfEqual {5394}
	1561 Move X10, 0x34B000
	1562 Move X8, [X22]
	1563 Move V9, [X0+24]
	1564 Move X10, [X10+3792]
	1565 NotImplemented "Instruction LDRH not yet implemented."
	1566 Move X1, [X10]
	1567 Compare X9, 0
	1568 JumpIfEqual {1575}
	1569 Move X10, [X8+176]
	1570 Add X10, X10, 8
	1571 NotImplemented "Instruction LDUR not yet implemented."
	1572 NotImplemented "Instruction CMP not yet implemented."
	1573 Subtract X9, X9, 1
	1574 Add X10, X10, 16
	1575 Move X0, X22
	1576 Move W2, W31
	1577 Call 0x1C5D788
	1578 Compare X22, 0
	1579 JumpIfEqual {5394}
	1580 Move X0, X22
	1581 Move X1, X31
	1582 Call VisualElement.get_styleAnimation, X0
	1583 Move X19, 0x393000
	1584 Move X19, [X19+856]
	1585 Move X22, X0
	1586 Add X0, X24, 8
	1587 Move X1, [X19]
	1588 Call StyleDataRef`1<LayoutData>.Read, X0
	1589 Move X1, [X19]
	1590 NotImplemented "Instruction LDUR not yet implemented."
	1591 Add X0, X23, 8
	1592 Call StyleDataRef`1<LayoutData>.Read, X0
	1593 Compare X22, 0
	1594 JumpIfEqual {5394}
	1595 Move X10, 0x34B000
	1596 Move X8, [X22]
	1597 NotImplemented "Instruction LDUR not yet implemented."
	1598 Move X10, [X10+3792]
	1599 NotImplemented "Instruction LDRH not yet implemented."
	1600 Move X1, [X10]
	1601 Compare X9, 0
	1602 JumpIfEqual {1609}
	1603 Move X10, [X8+176]
	1604 Add X10, X10, 8
	1605 NotImplemented "Instruction LDUR not yet implemented."
	1606 NotImplemented "Instruction CMP not yet implemented."
	1607 Subtract X9, X9, 1
	1608 Add X10, X10, 16
	1609 Move W2, 2
	1610 Move X0, X22
	1611 Call 0x1C5D788
	1612 Compare X22, 0
	1613 JumpIfEqual {5394}
	1614 Move X0, X22
	1615 Move X1, X31
	1616 Call VisualElement.get_styleAnimation, X0
	1617 Move X19, 0x393000
	1618 Move X19, [X19+856]
	1619 Move X22, X0
	1620 Add X0, X24, 8
	1621 Move X1, [X19]
	1622 Call StyleDataRef`1<LayoutData>.Read, X0
	1623 Move X1, [X19]
	1624 Move W24, [X0+36]
	1625 Add X0, X23, 8
	1626 Call StyleDataRef`1<LayoutData>.Read, X0
	1627 Compare X22, 0
	1628 JumpIfEqual {5394}
	1629 Move X10, 0x34B000
	1630 Move X8, [X22]
	1631 Move W23, [X0+36]
	1632 Move X10, [X10+3792]
	1633 NotImplemented "Instruction LDRH not yet implemented."
	1634 Move X1, [X10]
	1635 Compare X9, 0
	1636 JumpIfEqual {1643}
	1637 Move X10, [X8+176]
	1638 Add X10, X10, 8
	1639 NotImplemented "Instruction LDUR not yet implemented."
	1640 NotImplemented "Instruction CMP not yet implemented."
	1641 Subtract X9, X9, 1
	1642 Add X10, X10, 16
	1643 Move W2, 4
	1644 Move X0, X22
	1645 Call 0x1C5D788
	1646 Compare X22, 0
	1647 JumpIfEqual {5394}
	1648 Move X0, X22
	1649 Move X1, X31
	1650 Call VisualElement.get_styleAnimation, X0
	1651 Move X19, 0x393000
	1652 Move X19, [X19+856]
	1653 Move X22, X0
	1654 Add X0, X24, 8
	1655 Move X1, [X19]
	1656 Call StyleDataRef`1<LayoutData>.Read, X0
	1657 Move X1, [X19]
	1658 Move X24, [X0+40]
	1659 Add X0, X23, 8
	1660 Call StyleDataRef`1<LayoutData>.Read, X0
	1661 Compare X22, 0
	1662 JumpIfEqual {5394}
	1663 Move X10, 0x34B000
	1664 Move X8, [X22]
	1665 Move X23, [X0+40]
	1666 Move X10, [X10+3792]
	1667 NotImplemented "Instruction LDRH not yet implemented."
	1668 Move X1, [X10]
	1669 Compare X9, 0
	1670 JumpIfEqual {1677}
	1671 Move X10, [X8+176]
	1672 Add X10, X10, 8
	1673 NotImplemented "Instruction LDUR not yet implemented."
	1674 NotImplemented "Instruction CMP not yet implemented."
	1675 Subtract X9, X9, 1
	1676 Add X10, X10, 16
	1677 Move W2, 2
	1678 Move X0, X22
	1679 Call 0x1C5D788
	1680 Compare X22, 0
	1681 JumpIfEqual {5394}
	1682 Move X0, X22
	1683 Move X1, X31
	1684 Call VisualElement.get_styleAnimation, X0
	1685 Move X19, 0x393000
	1686 Move X19, [X19+856]
	1687 Move X22, X0
	1688 Add X0, X24, 8
	1689 Move X1, [X19]
	1690 Call StyleDataRef`1<LayoutData>.Read, X0
	1691 Move X1, [X19]
	1692 Move W24, [X0+48]
	1693 Add X0, X23, 8
	1694 Call StyleDataRef`1<LayoutData>.Read, X0
	1695 Compare X22, 0
	1696 JumpIfEqual {5394}
	1697 Move X10, 0x34B000
	1698 Move X8, [X22]
	1699 Move W23, [X0+48]
	1700 Move X10, [X10+3792]
	1701 NotImplemented "Instruction LDRH not yet implemented."
	1702 Move X1, [X10]
	1703 Compare X9, 0
	1704 JumpIfEqual {1711}
	1705 Move X10, [X8+176]
	1706 Add X10, X10, 8
	1707 NotImplemented "Instruction LDUR not yet implemented."
	1708 NotImplemented "Instruction CMP not yet implemented."
	1709 Subtract X9, X9, 1
	1710 Add X10, X10, 16
	1711 Move W2, 4
	1712 Move X0, X22
	1713 Call 0x1C5D788
	1714 Compare X22, 0
	1715 JumpIfEqual {5394}
	1716 Move X0, X22
	1717 Move X1, X31
	1718 Call VisualElement.get_styleAnimation, X0
	1719 Move X19, 0x393000
	1720 Move X19, [X19+856]
	1721 Move X22, X0
	1722 Add X0, X24, 8
	1723 Move X1, [X19]
	1724 Call StyleDataRef`1<LayoutData>.Read, X0
	1725 Move X1, [X19]
	1726 Move V8, [X0+52]
	1727 Add X0, X23, 8
	1728 Call StyleDataRef`1<LayoutData>.Read, X0
	1729 Compare X22, 0
	1730 JumpIfEqual {5394}
	1731 Move X10, 0x34B000
	1732 Move X8, [X22]
	1733 Move V9, [X0+52]
	1734 Move X10, [X10+3792]
	1735 NotImplemented "Instruction LDRH not yet implemented."
	1736 Move X1, [X10]
	1737 Compare X9, 0
	1738 JumpIfEqual {1745}
	1739 Move X10, [X8+176]
	1740 Add X10, X10, 8
	1741 NotImplemented "Instruction LDUR not yet implemented."
	1742 NotImplemented "Instruction CMP not yet implemented."
	1743 Subtract X9, X9, 1
	1744 Add X10, X10, 16
	1745 Move X0, X22
	1746 Move W2, W31
	1747 Call 0x1C5D788
	1748 Compare X22, 0
	1749 JumpIfEqual {5394}
	1750 Move X0, X22
	1751 Move X1, X31
	1752 Call VisualElement.get_styleAnimation, X0
	1753 Move X19, 0x393000
	1754 Move X19, [X19+856]
	1755 Move X22, X0
	1756 Add X0, X24, 8
	1757 Move X1, [X19]
	1758 Call StyleDataRef`1<LayoutData>.Read, X0
	1759 Move X1, [X19]
	1760 Move V8, [X0+56]
	1761 Add X0, X23, 8
	1762 Call StyleDataRef`1<LayoutData>.Read, X0
	1763 Compare X22, 0
	1764 JumpIfEqual {5394}
	1765 Move X10, 0x34B000
	1766 Move X8, [X22]
	1767 Move V9, [X0+56]
	1768 Move X10, [X10+3792]
	1769 NotImplemented "Instruction LDRH not yet implemented."
	1770 Move X1, [X10]
	1771 Compare X9, 0
	1772 JumpIfEqual {1779}
	1773 Move X10, [X8+176]
	1774 Add X10, X10, 8
	1775 NotImplemented "Instruction LDUR not yet implemented."
	1776 NotImplemented "Instruction CMP not yet implemented."
	1777 Subtract X9, X9, 1
	1778 Add X10, X10, 16
	1779 Move X0, X22
	1780 Move W2, W31
	1781 Call 0x1C5D788
	1782 Compare X22, 0
	1783 JumpIfEqual {5394}
	1784 Move X0, X22
	1785 Move X1, X31
	1786 Call VisualElement.get_styleAnimation, X0
	1787 Move X19, 0x393000
	1788 Move X19, [X19+856]
	1789 Move X22, X0
	1790 Add X0, X24, 8
	1791 Move X1, [X19]
	1792 Call StyleDataRef`1<LayoutData>.Read, X0
	1793 Move X1, [X19]
	1794 Move W24, [X0+60]
	1795 Add X0, X23, 8
	1796 Call StyleDataRef`1<LayoutData>.Read, X0
	1797 Compare X22, 0
	1798 JumpIfEqual {5394}
	1799 Move X10, 0x34B000
	1800 Move X8, [X22]
	1801 Move W23, [X0+60]
	1802 Move X10, [X10+3792]
	1803 NotImplemented "Instruction LDRH not yet implemented."
	1804 Move X1, [X10]
	1805 Compare X9, 0
	1806 JumpIfEqual {1813}
	1807 Move X10, [X8+176]
	1808 Add X10, X10, 8
	1809 NotImplemented "Instruction LDUR not yet implemented."
	1810 NotImplemented "Instruction CMP not yet implemented."
	1811 Subtract X9, X9, 1
	1812 Add X10, X10, 16
	1813 Move W2, 4
	1814 Move X0, X22
	1815 Call 0x1C5D788
	1816 Compare X22, 0
	1817 JumpIfEqual {5394}
	1818 Move X0, X22
	1819 Move X1, X31
	1820 Call VisualElement.get_styleAnimation, X0
	1821 Move X19, 0x393000
	1822 Move X19, [X19+856]
	1823 Move X22, X0
	1824 Add X0, X24, 8
	1825 Move X1, [X19]
	1826 Call StyleDataRef`1<LayoutData>.Read, X0
	1827 Move X1, [X19]
	1828 Move X24, [X0+64]
	1829 Add X0, X23, 8
	1830 Call StyleDataRef`1<LayoutData>.Read, X0
	1831 Compare X22, 0
	1832 JumpIfEqual {5394}
	1833 Move X10, 0x34B000
	1834 Move X8, [X22]
	1835 Move X23, [X0+64]
	1836 Move X10, [X10+3792]
	1837 NotImplemented "Instruction LDRH not yet implemented."
	1838 Move X1, [X10]
	1839 Compare X9, 0
	1840 JumpIfEqual {1847}
	1841 Move X10, [X8+176]
	1842 Add X10, X10, 8
	1843 NotImplemented "Instruction LDUR not yet implemented."
	1844 NotImplemented "Instruction CMP not yet implemented."
	1845 Subtract X9, X9, 1
	1846 Add X10, X10, 16
	1847 Move W2, 2
	1848 Move X0, X22
	1849 Call 0x1C5D788
	1850 Compare X22, 0
	1851 JumpIfEqual {5394}
	1852 Move X0, X22
	1853 Move X1, X31
	1854 Call VisualElement.get_styleAnimation, X0
	1855 Move X19, 0x393000
	1856 Move X19, [X19+856]
	1857 Move X22, X0
	1858 Add X0, X24, 8
	1859 Move X1, [X19]
	1860 Call StyleDataRef`1<LayoutData>.Read, X0
	1861 Move X1, [X19]
	1862 Move W24, [X0+72]
	1863 Add X0, X23, 8
	1864 Call StyleDataRef`1<LayoutData>.Read, X0
	1865 Compare X22, 0
	1866 JumpIfEqual {5394}
	1867 Move X10, 0x34B000
	1868 Move X8, [X22]
	1869 Move W23, [X0+72]
	1870 Move X10, [X10+3792]
	1871 NotImplemented "Instruction LDRH not yet implemented."
	1872 Move X1, [X10]
	1873 Compare X9, 0
	1874 JumpIfEqual {1881}
	1875 Move X10, [X8+176]
	1876 Add X10, X10, 8
	1877 NotImplemented "Instruction LDUR not yet implemented."
	1878 NotImplemented "Instruction CMP not yet implemented."
	1879 Subtract X9, X9, 1
	1880 Add X10, X10, 16
	1881 Move W2, 4
	1882 Move X0, X22
	1883 Call 0x1C5D788
	1884 Compare X22, 0
	1885 JumpIfEqual {5394}
	1886 Move X0, X22
	1887 Move X1, X31
	1888 Call VisualElement.get_styleAnimation, X0
	1889 Move X19, 0x393000
	1890 Move X19, [X19+856]
	1891 Move X22, X0
	1892 Add X0, X24, 8
	1893 Move X1, [X19]
	1894 Call StyleDataRef`1<LayoutData>.Read, X0
	1895 Move X1, [X19]
	1896 NotImplemented "Instruction LDUR not yet implemented."
	1897 Add X0, X23, 8
	1898 Call StyleDataRef`1<LayoutData>.Read, X0
	1899 Compare X22, 0
	1900 JumpIfEqual {5394}
	1901 Move X10, 0x34B000
	1902 Move X8, [X22]
	1903 NotImplemented "Instruction LDUR not yet implemented."
	1904 Move X10, [X10+3792]
	1905 NotImplemented "Instruction LDRH not yet implemented."
	1906 Move X1, [X10]
	1907 Compare X9, 0
	1908 JumpIfEqual {1915}
	1909 Move X10, [X8+176]
	1910 Add X10, X10, 8
	1911 NotImplemented "Instruction LDUR not yet implemented."
	1912 NotImplemented "Instruction CMP not yet implemented."
	1913 Subtract X9, X9, 1
	1914 Add X10, X10, 16
	1915 Move W2, 2
	1916 Move X0, X22
	1917 Call 0x1C5D788
	1918 Compare X22, 0
	1919 JumpIfEqual {5394}
	1920 Move X0, X22
	1921 Move X1, X31
	1922 Call VisualElement.get_styleAnimation, X0
	1923 Move X19, 0x393000
	1924 Move X19, [X19+856]
	1925 Move X22, X0
	1926 Add X0, X24, 8
	1927 Move X1, [X19]
	1928 Call StyleDataRef`1<LayoutData>.Read, X0
	1929 Move X1, [X19]
	1930 NotImplemented "Instruction LDUR not yet implemented."
	1931 Add X0, X23, 8
	1932 Call StyleDataRef`1<LayoutData>.Read, X0
	1933 Compare X22, 0
	1934 JumpIfEqual {5394}
	1935 Move X10, 0x34B000
	1936 Move X8, [X22]
	1937 NotImplemented "Instruction LDUR not yet implemented."
	1938 Move X10, [X10+3792]
	1939 NotImplemented "Instruction LDRH not yet implemented."
	1940 Move X1, [X10]
	1941 Compare X9, 0
	1942 JumpIfEqual {1949}
	1943 Move X10, [X8+176]
	1944 Add X10, X10, 8
	1945 NotImplemented "Instruction LDUR not yet implemented."
	1946 NotImplemented "Instruction CMP not yet implemented."
	1947 Subtract X9, X9, 1
	1948 Add X10, X10, 16
	1949 Move W2, 2
	1950 Move X0, X22
	1951 Call 0x1C5D788
	1952 Compare X22, 0
	1953 JumpIfEqual {5394}
	1954 Move X0, X22
	1955 Move X1, X31
	1956 Call VisualElement.get_styleAnimation, X0
	1957 Move X19, 0x393000
	1958 Move X19, [X19+856]
	1959 Move X22, X0
	1960 Add X0, X24, 8
	1961 Move X1, [X19]
	1962 Call StyleDataRef`1<LayoutData>.Read, X0
	1963 Move X1, [X19]
	1964 NotImplemented "Instruction LDUR not yet implemented."
	1965 Add X0, X23, 8
	1966 Call StyleDataRef`1<LayoutData>.Read, X0
	1967 Compare X22, 0
	1968 JumpIfEqual {5394}
	1969 Move X10, 0x34B000
	1970 Move X8, [X22]
	1971 NotImplemented "Instruction LDUR not yet implemented."
	1972 Move X10, [X10+3792]
	1973 NotImplemented "Instruction LDRH not yet implemented."
	1974 Move X1, [X10]
	1975 Compare X9, 0
	1976 JumpIfEqual {1983}
	1977 Move X10, [X8+176]
	1978 Add X10, X10, 8
	1979 NotImplemented "Instruction LDUR not yet implemented."
	1980 NotImplemented "Instruction CMP not yet implemented."
	1981 Subtract X9, X9, 1
	1982 Add X10, X10, 16
	1983 Move W2, 2
	1984 Move X0, X22
	1985 Call 0x1C5D788
	1986 Compare X22, 0
	1987 JumpIfEqual {5394}
	1988 Move X0, X22
	1989 Move X1, X31
	1990 Call VisualElement.get_styleAnimation, X0
	1991 Move X19, 0x393000
	1992 Move X19, [X19+856]
	1993 Move X22, X0
	1994 Add X0, X24, 8
	1995 Move X1, [X19]
	1996 Call StyleDataRef`1<LayoutData>.Read, X0
	1997 Move X1, [X19]
	1998 NotImplemented "Instruction LDUR not yet implemented."
	1999 Add X0, X23, 8
	2000 Call StyleDataRef`1<LayoutData>.Read, X0
	2001 Compare X22, 0
	2002 JumpIfEqual {5394}
	2003 Move X10, 0x34B000
	2004 Move X8, [X22]
	2005 NotImplemented "Instruction LDUR not yet implemented."
	2006 Move X10, [X10+3792]
	2007 NotImplemented "Instruction LDRH not yet implemented."
	2008 Move X1, [X10]
	2009 Compare X9, 0
	2010 JumpIfEqual {2017}
	2011 Move X10, [X8+176]
	2012 Add X10, X10, 8
	2013 NotImplemented "Instruction LDUR not yet implemented."
	2014 NotImplemented "Instruction CMP not yet implemented."
	2015 Subtract X9, X9, 1
	2016 Add X10, X10, 16
	2017 Move W2, 2
	2018 Move X0, X22
	2019 Call 0x1C5D788
	2020 Compare X22, 0
	2021 JumpIfEqual {5394}
	2022 Move X0, X22
	2023 Move X1, X31
	2024 Call VisualElement.get_styleAnimation, X0
	2025 Move X19, 0x393000
	2026 Move X19, [X19+856]
	2027 Move X22, X0
	2028 Add X0, X24, 8
	2029 Move X1, [X19]
	2030 Call StyleDataRef`1<LayoutData>.Read, X0
	2031 Move X1, [X19]
	2032 NotImplemented "Instruction LDUR not yet implemented."
	2033 Add X0, X23, 8
	2034 Call StyleDataRef`1<LayoutData>.Read, X0
	2035 Compare X22, 0
	2036 JumpIfEqual {5394}
	2037 Move X10, 0x34B000
	2038 Move X8, [X22]
	2039 NotImplemented "Instruction LDUR not yet implemented."
	2040 Move X10, [X10+3792]
	2041 NotImplemented "Instruction LDRH not yet implemented."
	2042 Move X1, [X10]
	2043 Compare X9, 0
	2044 JumpIfEqual {2051}
	2045 Move X10, [X8+176]
	2046 Add X10, X10, 8
	2047 NotImplemented "Instruction LDUR not yet implemented."
	2048 NotImplemented "Instruction CMP not yet implemented."
	2049 Subtract X9, X9, 1
	2050 Add X10, X10, 16
	2051 Move W2, 2
	2052 Move X0, X22
	2053 Call 0x1C5D788
	2054 Compare X22, 0
	2055 JumpIfEqual {5394}
	2056 Move X0, X22
	2057 Move X1, X31
	2058 Call VisualElement.get_styleAnimation, X0
	2059 Move X19, 0x393000
	2060 Move X19, [X19+856]
	2061 Move X22, X0
	2062 Add X0, X24, 8
	2063 Move X1, [X19]
	2064 Call StyleDataRef`1<LayoutData>.Read, X0
	2065 Move X1, [X19]
	2066 NotImplemented "Instruction LDUR not yet implemented."
	2067 Add X0, X23, 8
	2068 Call StyleDataRef`1<LayoutData>.Read, X0
	2069 Compare X22, 0
	2070 JumpIfEqual {5394}
	2071 Move X10, 0x34B000
	2072 Move X8, [X22]
	2073 NotImplemented "Instruction LDUR not yet implemented."
	2074 Move X10, [X10+3792]
	2075 NotImplemented "Instruction LDRH not yet implemented."
	2076 Move X1, [X10]
	2077 Compare X9, 0
	2078 JumpIfEqual {2085}
	2079 Move X10, [X8+176]
	2080 Add X10, X10, 8
	2081 NotImplemented "Instruction LDUR not yet implemented."
	2082 NotImplemented "Instruction CMP not yet implemented."
	2083 Subtract X9, X9, 1
	2084 Add X10, X10, 16
	2085 Move W2, 2
	2086 Move X0, X22
	2087 Call 0x1C5D788
	2088 Compare X22, 0
	2089 JumpIfEqual {5394}
	2090 Move X0, X22
	2091 Move X1, X31
	2092 Call VisualElement.get_styleAnimation, X0
	2093 Move X19, 0x393000
	2094 Move X19, [X19+856]
	2095 Move X22, X0
	2096 Add X0, X24, 8
	2097 Move X1, [X19]
	2098 Call StyleDataRef`1<LayoutData>.Read, X0
	2099 Move X1, [X19]
	2100 NotImplemented "Instruction LDUR not yet implemented."
	2101 Add X0, X23, 8
	2102 Call StyleDataRef`1<LayoutData>.Read, X0
	2103 Compare X22, 0
	2104 JumpIfEqual {5394}
	2105 Move X10, 0x34B000
	2106 Move X8, [X22]
	2107 NotImplemented "Instruction LDUR not yet implemented."
	2108 Move X10, [X10+3792]
	2109 NotImplemented "Instruction LDRH not yet implemented."
	2110 Move X1, [X10]
	2111 Compare X9, 0
	2112 JumpIfEqual {2119}
	2113 Move X10, [X8+176]
	2114 Add X10, X10, 8
	2115 NotImplemented "Instruction LDUR not yet implemented."
	2116 NotImplemented "Instruction CMP not yet implemented."
	2117 Subtract X9, X9, 1
	2118 Add X10, X10, 16
	2119 Move W2, 2
	2120 Move X0, X22
	2121 Call 0x1C5D788
	2122 Compare X22, 0
	2123 JumpIfEqual {5394}
	2124 Move X0, X22
	2125 Move X1, X31
	2126 Call VisualElement.get_styleAnimation, X0
	2127 Move X19, 0x393000
	2128 Move X19, [X19+856]
	2129 Move X22, X0
	2130 Add X0, X24, 8
	2131 Move X1, [X19]
	2132 Call StyleDataRef`1<LayoutData>.Read, X0
	2133 Move X1, [X19]
	2134 NotImplemented "Instruction LDUR not yet implemented."
	2135 Add X0, X23, 8
	2136 Call StyleDataRef`1<LayoutData>.Read, X0
	2137 Compare X22, 0
	2138 JumpIfEqual {5394}
	2139 Move X10, 0x34B000
	2140 Move X8, [X22]
	2141 NotImplemented "Instruction LDUR not yet implemented."
	2142 Move X10, [X10+3792]
	2143 NotImplemented "Instruction LDRH not yet implemented."
	2144 Move X1, [X10]
	2145 Compare X9, 0
	2146 JumpIfEqual {2153}
	2147 Move X10, [X8+176]
	2148 Add X10, X10, 8
	2149 NotImplemented "Instruction LDUR not yet implemented."
	2150 NotImplemented "Instruction CMP not yet implemented."
	2151 Subtract X9, X9, 1
	2152 Add X10, X10, 16
	2153 Move W2, 2
	2154 Move X0, X22
	2155 Call 0x1C5D788
	2156 Compare X22, 0
	2157 JumpIfEqual {5394}
	2158 Move X0, X22
	2159 Move X1, X31
	2160 Call VisualElement.get_styleAnimation, X0
	2161 Move X19, 0x393000
	2162 Move X19, [X19+856]
	2163 Move X22, X0
	2164 Add X0, X24, 8
	2165 Move X1, [X19]
	2166 Call StyleDataRef`1<LayoutData>.Read, X0
	2167 Move X1, [X19]
	2168 NotImplemented "Instruction LDUR not yet implemented."
	2169 Add X0, X23, 8
	2170 Call StyleDataRef`1<LayoutData>.Read, X0
	2171 Compare X22, 0
	2172 JumpIfEqual {5394}
	2173 Move X10, 0x34B000
	2174 Move X8, [X22]
	2175 NotImplemented "Instruction LDUR not yet implemented."
	2176 Move X10, [X10+3792]
	2177 NotImplemented "Instruction LDRH not yet implemented."
	2178 Move X1, [X10]
	2179 Compare X9, 0
	2180 JumpIfEqual {2187}
	2181 Move X10, [X8+176]
	2182 Add X10, X10, 8
	2183 NotImplemented "Instruction LDUR not yet implemented."
	2184 NotImplemented "Instruction CMP not yet implemented."
	2185 Subtract X9, X9, 1
	2186 Add X10, X10, 16
	2187 Move W2, 2
	2188 Move X0, X22
	2189 Call 0x1C5D788
	2190 Compare X22, 0
	2191 JumpIfEqual {5394}
	2192 Move X0, X22
	2193 Move X1, X31
	2194 Call VisualElement.get_styleAnimation, X0
	2195 Move X19, 0x393000
	2196 Move X19, [X19+856]
	2197 Move X22, X0
	2198 Add X0, X24, 8
	2199 Move X1, [X19]
	2200 Call StyleDataRef`1<LayoutData>.Read, X0
	2201 Move X1, [X19]
	2202 NotImplemented "Instruction LDUR not yet implemented."
	2203 Add X0, X23, 8
	2204 Call StyleDataRef`1<LayoutData>.Read, X0
	2205 Compare X22, 0
	2206 JumpIfEqual {5394}
	2207 Move X10, 0x34B000
	2208 Move X8, [X22]
	2209 NotImplemented "Instruction LDUR not yet implemented."
	2210 Move X10, [X10+3792]
	2211 NotImplemented "Instruction LDRH not yet implemented."
	2212 Move X1, [X10]
	2213 Compare X9, 0
	2214 JumpIfEqual {2221}
	2215 Move X10, [X8+176]
	2216 Add X10, X10, 8
	2217 NotImplemented "Instruction LDUR not yet implemented."
	2218 NotImplemented "Instruction CMP not yet implemented."
	2219 Subtract X9, X9, 1
	2220 Add X10, X10, 16
	2221 Move W2, 2
	2222 Move X0, X22
	2223 Call 0x1C5D788
	2224 Compare X22, 0
	2225 JumpIfEqual {5394}
	2226 Move X0, X22
	2227 Move X1, X31
	2228 Call VisualElement.get_styleAnimation, X0
	2229 Move X19, 0x393000
	2230 Move X19, [X19+856]
	2231 Move X22, X0
	2232 Add X0, X24, 8
	2233 Move X1, [X19]
	2234 Call StyleDataRef`1<LayoutData>.Read, X0
	2235 Move X1, [X19]
	2236 NotImplemented "Instruction LDUR not yet implemented."
	2237 Add X0, X23, 8
	2238 Call StyleDataRef`1<LayoutData>.Read, X0
	2239 Compare X22, 0
	2240 JumpIfEqual {5394}
	2241 Move X10, 0x34B000
	2242 Move X8, [X22]
	2243 NotImplemented "Instruction LDUR not yet implemented."
	2244 Move X10, [X10+3792]
	2245 NotImplemented "Instruction LDRH not yet implemented."
	2246 Move X1, [X10]
	2247 Compare X9, 0
	2248 JumpIfEqual {2255}
	2249 Move X10, [X8+176]
	2250 Add X10, X10, 8
	2251 NotImplemented "Instruction LDUR not yet implemented."
	2252 NotImplemented "Instruction CMP not yet implemented."
	2253 Subtract X9, X9, 1
	2254 Add X10, X10, 16
	2255 Move W2, 2
	2256 Move X0, X22
	2257 Call 0x1C5D788
	2258 Compare X22, 0
	2259 JumpIfEqual {5394}
	2260 Move X0, X22
	2261 Move X1, X31
	2262 Call VisualElement.get_styleAnimation, X0
	2263 Move X19, 0x393000
	2264 Move X19, [X19+856]
	2265 Move X22, X0
	2266 Add X0, X24, 8
	2267 Move X1, [X19]
	2268 Call StyleDataRef`1<LayoutData>.Read, X0
	2269 Move X1, [X19]
	2270 NotImplemented "Instruction LDUR not yet implemented."
	2271 Add X0, X23, 8
	2272 Call StyleDataRef`1<LayoutData>.Read, X0
	2273 Compare X22, 0
	2274 JumpIfEqual {5394}
	2275 Move X10, 0x34B000
	2276 Move X8, [X22]
	2277 NotImplemented "Instruction LDUR not yet implemented."
	2278 Move X10, [X10+3792]
	2279 NotImplemented "Instruction LDRH not yet implemented."
	2280 Move X1, [X10]
	2281 Compare X9, 0
	2282 JumpIfEqual {2289}
	2283 Move X10, [X8+176]
	2284 Add X10, X10, 8
	2285 NotImplemented "Instruction LDUR not yet implemented."
	2286 NotImplemented "Instruction CMP not yet implemented."
	2287 Subtract X9, X9, 1
	2288 Add X10, X10, 16
	2289 Move W2, 2
	2290 Move X0, X22
	2291 Call 0x1C5D788
	2292 Compare X22, 0
	2293 JumpIfEqual {5394}
	2294 Move X0, X22
	2295 Move X1, X31
	2296 Call VisualElement.get_styleAnimation, X0
	2297 Move X19, 0x393000
	2298 Move X19, [X19+856]
	2299 Move X22, X0
	2300 Add X0, X24, 8
	2301 Move X1, [X19]
	2302 Call StyleDataRef`1<LayoutData>.Read, X0
	2303 Move X1, [X19]
	2304 NotImplemented "Instruction LDUR not yet implemented."
	2305 Add X0, X23, 8
	2306 Call StyleDataRef`1<LayoutData>.Read, X0
	2307 Compare X22, 0
	2308 JumpIfEqual {5394}
	2309 Move X10, 0x34B000
	2310 Move X8, [X22]
	2311 NotImplemented "Instruction LDUR not yet implemented."
	2312 Move X10, [X10+3792]
	2313 NotImplemented "Instruction LDRH not yet implemented."
	2314 Move X1, [X10]
	2315 Compare X9, 0
	2316 JumpIfEqual {2323}
	2317 Move X10, [X8+176]
	2318 Add X10, X10, 8
	2319 NotImplemented "Instruction LDUR not yet implemented."
	2320 NotImplemented "Instruction CMP not yet implemented."
	2321 Subtract X9, X9, 1
	2322 Add X10, X10, 16
	2323 Move W2, 2
	2324 Move X0, X22
	2325 Call 0x1C5D788
	2326 Compare X22, 0
	2327 JumpIfEqual {5394}
	2328 Move X0, X22
	2329 Move X1, X31
	2330 Call VisualElement.get_styleAnimation, X0
	2331 Move X19, 0x393000
	2332 Move X19, [X19+856]
	2333 Move X22, X0
	2334 Add X0, X24, 8
	2335 Move X1, [X19]
	2336 Call StyleDataRef`1<LayoutData>.Read, X0
	2337 Move X1, [X19]
	2338 Move W24, [X0+180]
	2339 Add X0, X23, 8
	2340 Call StyleDataRef`1<LayoutData>.Read, X0
	2341 Compare X22, 0
	2342 JumpIfEqual {5394}
	2343 Move X10, 0x34B000
	2344 Move X8, [X22]
	2345 Move W23, [X0+180]
	2346 Move X10, [X10+3792]
	2347 NotImplemented "Instruction LDRH not yet implemented."
	2348 Move X1, [X10]
	2349 Compare X9, 0
	2350 JumpIfEqual {2357}
	2351 Move X10, [X8+176]
	2352 Add X10, X10, 8
	2353 NotImplemented "Instruction LDUR not yet implemented."
	2354 NotImplemented "Instruction CMP not yet implemented."
	2355 Subtract X9, X9, 1
	2356 Add X10, X10, 16
	2357 Move W2, 4
	2358 Move X0, X22
	2359 Call 0x1C5D788
	2360 Compare X22, 0
	2361 JumpIfEqual {5394}
	2362 Move X0, X22
	2363 Move X1, X31
	2364 Call VisualElement.get_styleAnimation, X0
	2365 Move X19, 0x393000
	2366 Move X19, [X19+856]
	2367 Move X22, X0
	2368 Add X0, X24, 8
	2369 Move X1, [X19]
	2370 Call StyleDataRef`1<LayoutData>.Read, X0
	2371 Move X1, [X19]
	2372 Move X24, [X0+184]
	2373 Add X0, X23, 8
	2374 Call StyleDataRef`1<LayoutData>.Read, X0
	2375 Compare X22, 0
	2376 JumpIfEqual {5394}
	2377 Move X10, 0x34B000
	2378 Move X8, [X22]
	2379 Move X23, [X0+184]
	2380 Move X10, [X10+3792]
	2381 NotImplemented "Instruction LDRH not yet implemented."
	2382 Move X1, [X10]
	2383 Compare X9, 0
	2384 JumpIfEqual {2391}
	2385 Move X10, [X8+176]
	2386 Add X10, X10, 8
	2387 NotImplemented "Instruction LDUR not yet implemented."
	2388 NotImplemented "Instruction CMP not yet implemented."
	2389 Subtract X9, X9, 1
	2390 Add X10, X10, 16
	2391 Move W2, 2
	2392 Move X0, X22
	2393 Call 0x1C5D788
	2394 Compare X22, 0
	2395 JumpIfEqual {5394}
	2396 Move X0, X22
	2397 Move X1, X31
	2398 Call VisualElement.get_styleAnimation, X0
	2399 Move X19, 0x393000
	2400 Move X19, [X19+856]
	2401 Move X22, X0
	2402 Add X0, X24, 8
	2403 Move X1, [X19]
	2404 Call StyleDataRef`1<LayoutData>.Read, X0
	2405 Move X1, [X19]
	2406 Move X24, [X0+192]
	2407 Add X0, X23, 8
	2408 Call StyleDataRef`1<LayoutData>.Read, X0
	2409 Compare X22, 0
	2410 JumpIfEqual {5394}
	2411 Move X10, 0x34B000
	2412 Move X8, [X22]
	2413 Move X23, [X0+192]
	2414 Move X10, [X10+3792]
	2415 NotImplemented "Instruction LDRH not yet implemented."
	2416 Move X1, [X10]
	2417 Compare X9, 0
	2418 JumpIfEqual {2425}
	2419 Move X10, [X8+176]
	2420 Add X10, X10, 8
	2421 NotImplemented "Instruction LDUR not yet implemented."
	2422 NotImplemented "Instruction CMP not yet implemented."
	2423 Subtract X9, X9, 1
	2424 Add X10, X10, 16
	2425 Move W2, 2
	2426 Move X0, X22
	2427 Call 0x1C5D788
	2428 Compare X22, 0
	2429 JumpIfEqual {5394}
	2430 Move X0, X22
	2431 Move X1, X31
	2432 Call VisualElement.get_styleAnimation, X0
	2433 Move X19, 0x393000
	2434 Move X19, [X19+856]
	2435 Move X22, X0
	2436 Add X0, X24, 8
	2437 Move X1, [X19]
	2438 Call StyleDataRef`1<LayoutData>.Read, X0
	2439 Move X1, [X19]
	2440 Move X24, [X0+200]
	2441 Add X0, X23, 8
	2442 Call StyleDataRef`1<LayoutData>.Read, X0
	2443 Compare X22, 0
	2444 JumpIfEqual {5394}
	2445 Move X10, 0x34B000
	2446 Move X8, [X22]
	2447 Move X23, [X0+200]
	2448 Move X10, [X10+3792]
	2449 NotImplemented "Instruction LDRH not yet implemented."
	2450 Move X1, [X10]
	2451 Compare X9, 0
	2452 JumpIfEqual {2459}
	2453 Move X10, [X8+176]
	2454 Add X10, X10, 8
	2455 NotImplemented "Instruction LDUR not yet implemented."
	2456 NotImplemented "Instruction CMP not yet implemented."
	2457 Subtract X9, X9, 1
	2458 Add X10, X10, 16
	2459 Move W2, 2
	2460 Move X0, X22
	2461 Call 0x1C5D788
	2462 Compare X22, 0
	2463 JumpIfEqual {5394}
	2464 Move X0, X22
	2465 Move X1, X31
	2466 Call VisualElement.get_styleAnimation, X0
	2467 Move X19, 0x393000
	2468 Move X19, [X19+872]
	2469 Move X22, X0
	2470 Move X0, X24
	2471 Move X1, [X19]
	2472 Call 0x266D4A0, X0
	2473 Move X1, [X19]
	2474 Move X24, [X0+16]
	2475 Move X0, X23
	2476 Call 0x266D4A0, X0
	2477 Compare X22, 0
	2478 JumpIfEqual {5394}
	2479 Move X10, 0x34B000
	2480 Move X8, [X22]
	2481 Move X23, [X0+16]
	2482 Move X10, [X10+3792]
	2483 NotImplemented "Instruction LDRH not yet implemented."
	2484 Move X1, [X10]
	2485 Compare X9, 0
	2486 JumpIfEqual {2493}
	2487 Move X10, [X8+176]
	2488 Add X10, X10, 8
	2489 NotImplemented "Instruction LDUR not yet implemented."
	2490 NotImplemented "Instruction CMP not yet implemented."
	2491 Subtract X9, X9, 1
	2492 Add X10, X10, 16
	2493 Move W2, 2
	2494 Move X0, X22
	2495 Call 0x1C5D788
	2496 Compare X22, 0
	2497 JumpIfEqual {5394}
	2498 Move X0, X22
	2499 Move X1, X31
	2500 Call VisualElement.get_styleAnimation, X0
	2501 Move X19, 0x392000
	2502 Move X19, [X19+872]
	2503 Move X22, X0
	2504 Move X0, X24
	2505 Move X1, [X19]
	2506 Call 0x266D4A0, X0
	2507 Move X1, [X19]
	2508 Move X24, [X0+24]
	2509 Move X0, X23
	2510 Call 0x266D4A0, X0
	2511 Compare X22, 0
	2512 JumpIfEqual {5394}
	2513 Move X10, 0x34A000
	2514 Move X8, [X22]
	2515 Move X23, [X0+24]
	2516 Move X10, [X10+3792]
	2517 NotImplemented "Instruction LDRH not yet implemented."
	2518 Move X1, [X10]
	2519 Compare X9, 0
	2520 JumpIfEqual {2527}
	2521 Move X10, [X8+176]
	2522 Add X10, X10, 8
	2523 NotImplemented "Instruction LDUR not yet implemented."
	2524 NotImplemented "Instruction CMP not yet implemented."
	2525 Subtract X9, X9, 1
	2526 Add X10, X10, 16
	2527 Move W2, 2
	2528 Move X0, X22
	2529 Call 0x1C5D788
	2530 Compare X22, 0
	2531 JumpIfEqual {5394}
	2532 Move X0, X22
	2533 Move X1, X31
	2534 Add X19, X31, 496
	2535 Call VisualElement.get_styleAnimation, X0
	2536 Move X25, 0x392000
	2537 Move X25, [X25+872]
	2538 Move X22, X0
	2539 Move X0, X24
	2540 Move X1, [X25]
	2541 Call 0x266D4A0, X0
	2542 NotImplemented "Instruction LDUR not yet implemented."
	2543 Move V1, [X0+2]
	2544 Move X1, [X25]
	2545 Move X0, X23
	2546 Move [X19+44], V0
	2547 Move [X31+33], V1
	2548 Call 0x266D4A0, X0
	2549 NotImplemented "Instruction LDUR not yet implemented."
	2550 Move V1, [X0+2]
	2551 Move [X19+12], V0
	2552 Move [X31+31], V1
	2553 Compare X22, 0
	2554 JumpIfEqual {5394}
	2555 Move V0, [X31+33]
	2556 NotImplemented "Instruction LDUR not yet implemented."
	2557 Move V2, [X31+31]
	2558 NotImplemented "Instruction LDUR not yet implemented."
	2559 Add X23, X31, 240
	2560 Move [X31+17], V0
	2561 Move [X23+44], V1
	2562 Move [X31+15], V2
	2563 Move [X23+12], V3
	2564 Move X10, 0x34A000
	2565 Move X8, [X22]
	2566 Move X10, [X10+3792]
	2567 NotImplemented "Instruction LDRH not yet implemented."
	2568 Move X1, [X10]
	2569 Compare X9, 0
	2570 JumpIfEqual {2577}
	2571 Move X10, [X8+176]
	2572 Add X10, X10, 8
	2573 NotImplemented "Instruction LDUR not yet implemented."
	2574 NotImplemented "Instruction CMP not yet implemented."
	2575 Subtract X9, X9, 1
	2576 Add X10, X10, 16
	2577 Move W2, 8
	2578 Move X0, X22
	2579 Call 0x1C5D788
	2580 Compare X22, 0
	2581 JumpIfEqual {5394}
	2582 Move X0, X22
	2583 Move X1, X31
	2584 Call VisualElement.get_styleAnimation, X0
	2585 Move X19, 0x392000
	2586 Move X19, [X19+872]
	2587 Move X22, X0
	2588 Move X0, X24
	2589 Move X1, [X19]
	2590 Call 0x266D4A0, X0
	2591 Move X1, [X19]
	2592 Move X24, [X0+64]
	2593 Move X0, X23
	2594 Call 0x266D4A0, X0
	2595 Compare X22, 0
	2596 JumpIfEqual {5394}
	2597 Move X10, 0x34A000
	2598 Move X8, [X22]
	2599 Move X23, [X0+64]
	2600 Move X10, [X10+3792]
	2601 NotImplemented "Instruction LDRH not yet implemented."
	2602 Move X1, [X10]
	2603 Compare X9, 0
	2604 JumpIfEqual {2611}
	2605 Move X10, [X8+176]
	2606 Add X10, X10, 8
	2607 NotImplemented "Instruction LDUR not yet implemented."
	2608 NotImplemented "Instruction CMP not yet implemented."
	2609 Subtract X9, X9, 1
	2610 Add X10, X10, 16
	2611 Move W2, 7
	2612 Move X0, X22
	2613 Call 0x1C5D788
	2614 Compare X22, 0
	2615 JumpIfEqual {5394}
	2616 Move X0, X22
	2617 Move X1, X31
	2618 Call VisualElement.get_styleAnimation, X0
	2619 Move X19, 0x392000
	2620 Move X19, [X19+872]
	2621 Move X22, X0
	2622 Move X0, X24
	2623 Move X1, [X19]
	2624 Call 0x266D4A0, X0
	2625 Move X1, [X19]
	2626 Move X24, [X0+72]
	2627 Move X25, [X0+80]
	2628 Move X0, X23
	2629 Call 0x266D4A0, X0
	2630 Compare X22, 0
	2631 JumpIfEqual {5394}
	2632 Move X10, 0x34A000
	2633 Move X8, [X22]
	2634 Move X26, [X0+72]
	2635 Move X23, [X0+80]
	2636 Move X10, [X10+3792]
	2637 NotImplemented "Instruction LDRH not yet implemented."
	2638 Move X1, [X10]
	2639 Compare X9, 0
	2640 JumpIfEqual {2647}
	2641 Move X10, [X8+176]
	2642 Add X10, X10, 8
	2643 NotImplemented "Instruction LDUR not yet implemented."
	2644 NotImplemented "Instruction CMP not yet implemented."
	2645 Subtract X9, X9, 1
	2646 Add X10, X10, 16
	2647 Move W2, 6
	2648 Move X0, X22
	2649 Call 0x1C5D788
	2650 Compare X22, 0
	2651 JumpIfEqual {5394}
	2652 Move X0, X22
	2653 Move X1, X31
	2654 Call VisualElement.get_styleAnimation, X0
	2655 Move X19, 0x392000
	2656 Move X19, [X19+872]
	2657 Move X22, X0
	2658 Move X0, X24
	2659 Move X1, [X19]
	2660 Call 0x266D4A0, X0
	2661 Move X1, [X19]
	2662 Move W24, [X0+88]
	2663 Move X0, X23
	2664 Call 0x266D4A0, X0
	2665 Compare X22, 0
	2666 JumpIfEqual {5394}
	2667 Move X10, 0x34A000
	2668 Move X8, [X22]
	2669 Move W23, [X0+88]
	2670 Move X10, [X10+3792]
	2671 NotImplemented "Instruction LDRH not yet implemented."
	2672 Move X1, [X10]
	2673 Compare X9, 0
	2674 JumpIfEqual {2681}
	2675 Move X10, [X8+176]
	2676 Add X10, X10, 8
	2677 NotImplemented "Instruction LDUR not yet implemented."
	2678 NotImplemented "Instruction CMP not yet implemented."
	2679 Subtract X9, X9, 1
	2680 Add X10, X10, 16
	2681 Move W2, 4
	2682 Move X0, X22
	2683 Call 0x1C5D788
	2684 Compare X22, 0
	2685 JumpIfEqual {5394}
	2686 Move X0, X22
	2687 Move X1, X31
	2688 Call VisualElement.get_styleAnimation, X0
	2689 Move X19, 0x392000
	2690 Move X19, [X19+872]
	2691 Move X22, X0
	2692 Move X0, X24
	2693 Move X1, [X19]
	2694 Call 0x266D4A0, X0
	2695 Move X1, [X19]
	2696 NotImplemented "Instruction LDUR not yet implemented."
	2697 Move X0, X23
	2698 Call 0x266D4A0, X0
	2699 Compare X22, 0
	2700 JumpIfEqual {5394}
	2701 Move X10, 0x34A000
	2702 Move X8, [X22]
	2703 NotImplemented "Instruction LDUR not yet implemented."
	2704 Move X10, [X10+3792]
	2705 NotImplemented "Instruction LDRH not yet implemented."
	2706 Move X1, [X10]
	2707 Compare X9, 0
	2708 JumpIfEqual {2715}
	2709 Move X10, [X8+176]
	2710 Add X10, X10, 8
	2711 NotImplemented "Instruction LDUR not yet implemented."
	2712 NotImplemented "Instruction CMP not yet implemented."
	2713 Subtract X9, X9, 1
	2714 Add X10, X10, 16
	2715 Move W2, 2
	2716 Move X0, X22
	2717 Call 0x1C5D788
	2718 Compare X22, 0
	2719 JumpIfEqual {5394}
	2720 Move X0, X22
	2721 Move X1, X31
	2722 Call VisualElement.get_styleAnimation, X0
	2723 Move X19, 0x392000
	2724 Move X19, [X19+872]
	2725 Move X22, X0
	2726 Move X0, X24
	2727 Move X1, [X19]
	2728 Call 0x266D4A0, X0
	2729 Move X1, [X19]
	2730 Move W24, [X0+100]
	2731 Move X0, X23
	2732 Call 0x266D4A0, X0
	2733 Compare X22, 0
	2734 JumpIfEqual {5394}
	2735 Move X10, 0x34A000
	2736 Move X8, [X22]
	2737 Move W23, [X0+100]
	2738 Move X10, [X10+3792]
	2739 NotImplemented "Instruction LDRH not yet implemented."
	2740 Move X1, [X10]
	2741 Compare X9, 0
	2742 JumpIfEqual {2749}
	2743 Move X10, [X8+176]
	2744 Add X10, X10, 8
	2745 NotImplemented "Instruction LDUR not yet implemented."
	2746 NotImplemented "Instruction CMP not yet implemented."
	2747 Subtract X9, X9, 1
	2748 Add X10, X10, 16
	2749 Move W2, 4
	2750 Move X0, X22
	2751 Call 0x1C5D788
	2752 Compare X22, 0
	2753 JumpIfEqual {5394}
	2754 Move X0, X22
	2755 Move X1, X31
	2756 Call VisualElement.get_styleAnimation, X0
	2757 Move X19, 0x392000
	2758 Move X19, [X19+872]
	2759 Move X22, X0
	2760 Move X0, X24
	2761 Move X1, [X19]
	2762 Call 0x266D4A0, X0
	2763 Move X1, [X19]
	2764 Move S8, [X0+104]
	2765 Move S9, [X0+108]
	2766 Move S10, [X0+112]
	2767 Move S11, [X0+116]
	2768 Move X0, X23
	2769 Call 0x266D4A0, X0
	2770 Compare X22, 0
	2771 JumpIfEqual {5394}
	2772 Move X10, 0x34A000
	2773 Move S13, [X0+112]
	2774 Move S12, [X0+116]
	2775 Move X8, [X22]
	2776 Move S15, [X0+104]
	2777 Move S14, [X0+108]
	2778 Move X10, [X10+3792]
	2779 NotImplemented "Instruction LDRH not yet implemented."
	2780 Move X1, [X10]
	2781 Compare X9, 0
	2782 JumpIfEqual {2789}
	2783 Move X10, [X8+176]
	2784 Add X10, X10, 8
	2785 NotImplemented "Instruction LDUR not yet implemented."
	2786 NotImplemented "Instruction CMP not yet implemented."
	2787 Subtract X9, X9, 1
	2788 Add X10, X10, 16
	2789 Move W2, 3
	2790 Move X0, X22
	2791 Call 0x1C5D788
	2792 Compare X22, 0
	2793 JumpIfEqual {5394}
	2794 Move X0, X22
	2795 Move X1, X31
	2796 Call VisualElement.get_styleAnimation, X0
	2797 Move X19, 0x392000
	2798 Move X19, [X19+872]
	2799 Move X22, X0
	2800 Move X0, X24
	2801 Move X1, [X19]
	2802 Call 0x266D4A0, X0
	2803 Move X1, [X19]
	2804 Move V8, [X0+120]
	2805 Move X0, X23
	2806 Call 0x266D4A0, X0
	2807 Compare X22, 0
	2808 JumpIfEqual {5394}
	2809 Move X10, 0x34A000
	2810 Move X8, [X22]
	2811 Move V9, [X0+120]
	2812 Move X10, [X10+3792]
	2813 NotImplemented "Instruction LDRH not yet implemented."
	2814 Move X1, [X10]
	2815 Compare X9, 0
	2816 JumpIfEqual {2823}
	2817 Move X10, [X8+176]
	2818 Add X10, X10, 8
	2819 NotImplemented "Instruction LDUR not yet implemented."
	2820 NotImplemented "Instruction CMP not yet implemented."
	2821 Subtract X9, X9, 1
	2822 Add X10, X10, 16
	2823 Move X0, X22
	2824 Move W2, W31
	2825 Call 0x1C5D788
	2826 Compare X22, 0
	2827 JumpIfEqual {5394}
	2828 Move X0, X22
	2829 Move X1, X31
	2830 Call VisualElement.get_styleAnimation, X0
	2831 Move X19, 0x392000
	2832 Move X19, [X19+872]
	2833 Move X22, X0
	2834 Move X0, X24
	2835 Move X1, [X19]
	2836 Call 0x266D4A0, X0
	2837 Move X1, [X19]
	2838 Move W24, [X0+124]
	2839 Move X0, X23
	2840 Call 0x266D4A0, X0
	2841 Compare X22, 0
	2842 JumpIfEqual {5394}
	2843 Move X10, 0x34A000
	2844 Move X8, [X22]
	2845 Move W23, [X0+124]
	2846 Move X10, [X10+3792]
	2847 NotImplemented "Instruction LDRH not yet implemented."
	2848 Move X1, [X10]
	2849 Compare X9, 0
	2850 JumpIfEqual {2857}
	2851 Move X10, [X8+176]
	2852 Add X10, X10, 8
	2853 NotImplemented "Instruction LDUR not yet implemented."
	2854 NotImplemented "Instruction CMP not yet implemented."
	2855 Subtract X9, X9, 1
	2856 Add X10, X10, 16
	2857 Move W2, 4
	2858 Move X0, X22
	2859 Call 0x1C5D788
	2860 Compare X22, 0
	2861 JumpIfEqual {5394}
	2862 Move X0, X22
	2863 Move X1, X31
	2864 Call VisualElement.get_styleAnimation, X0
	2865 Move X19, 0x392000
	2866 Move X19, [X19+872]
	2867 Move X22, X0
	2868 Move X0, X24
	2869 Move X1, [X19]
	2870 Call 0x266D4A0, X0
	2871 Move X1, [X19]
	2872 Move W24, [X0+128]
	2873 Move X0, X23
	2874 Call 0x266D4A0, X0
	2875 Compare X22, 0
	2876 JumpIfEqual {5394}
	2877 Move X10, 0x34A000
	2878 Move X8, [X22]
	2879 Move W23, [X0+128]
	2880 Move X10, [X10+3792]
	2881 NotImplemented "Instruction LDRH not yet implemented."
	2882 Move X1, [X10]
	2883 Compare X9, 0
	2884 JumpIfEqual {2891}
	2885 Move X10, [X8+176]
	2886 Add X10, X10, 8
	2887 NotImplemented "Instruction LDUR not yet implemented."
	2888 NotImplemented "Instruction CMP not yet implemented."
	2889 Subtract X9, X9, 1
	2890 Add X10, X10, 16
	2891 Move W2, 4
	2892 Move X0, X22
	2893 Call 0x1C5D788
	2894 Compare X22, 0
	2895 JumpIfEqual {5394}
	2896 Move X0, X22
	2897 Move X1, X31
	2898 Call VisualElement.get_styleAnimation, X0
	2899 Move X19, 0x392000
	2900 Move X19, [X19+872]
	2901 Move X22, X0
	2902 Move X0, X24
	2903 Move X1, [X19]
	2904 Call 0x266D4A0, X0
	2905 Move X1, [X19]
	2906 NotImplemented "Instruction LDUR not yet implemented."
	2907 Move X0, X23
	2908 Call 0x266D4A0, X0
	2909 Compare X22, 0
	2910 JumpIfEqual {5394}
	2911 Move X10, 0x34A000
	2912 Move X8, [X22]
	2913 NotImplemented "Instruction LDUR not yet implemented."
	2914 Move X10, [X10+3792]
	2915 NotImplemented "Instruction LDRH not yet implemented."
	2916 Move X1, [X10]
	2917 Compare X9, 0
	2918 JumpIfEqual {2925}
	2919 Move X10, [X8+176]
	2920 Add X10, X10, 8
	2921 NotImplemented "Instruction LDUR not yet implemented."
	2922 NotImplemented "Instruction CMP not yet implemented."
	2923 Subtract X9, X9, 1
	2924 Add X10, X10, 16
	2925 Move W2, 2
	2926 Move X0, X22
	2927 Call 0x1C5D788
	2928 Compare X22, 0
	2929 JumpIfEqual {5394}
	2930 Move X0, X22
	2931 Move X1, X31
	2932 Call VisualElement.get_styleAnimation, X0
	2933 Move X19, 0x392000
	2934 Move X19, [X19+880]
	2935 Move X25, X0
	2936 Add X0, X24, 16
	2937 Move X1, [X19]
	2938 Call StyleDataRef`1<RareData>.Read, X0
	2939 Move X1, [X19]
	2940 Move S8, [X0+28]
	2941 Move S9, [X0+32]
	2942 Move S10, [X0+36]
	2943 Move S11, [X0+40]
	2944 Add X0, X23, 16
	2945 Call StyleDataRef`1<RareData>.Read, X0
	2946 Compare X25, 0
	2947 JumpIfEqual {5394}
	2948 Move X10, 0x34A000
	2949 Move S13, [X0+36]
	2950 Move S12, [X0+40]
	2951 Move X8, [X25]
	2952 Move S15, [X0+28]
	2953 Move S14, [X0+32]
	2954 Move X10, [X10+3792]
	2955 NotImplemented "Instruction LDRH not yet implemented."
	2956 Move X1, [X10]
	2957 Compare X9, 0
	2958 JumpIfEqual {2965}
	2959 Move X10, [X8+176]
	2960 Add X10, X10, 8
	2961 NotImplemented "Instruction LDUR not yet implemented."
	2962 NotImplemented "Instruction CMP not yet implemented."
	2963 Subtract X9, X9, 1
	2964 Add X10, X10, 16
	2965 Move W2, 3
	2966 Move X0, X25
	2967 Call 0x1C5D788
	2968 Compare X22, 0
	2969 JumpIfEqual {5394}
	2970 Move X0, X22
	2971 Move X1, X31
	2972 Call VisualElement.get_styleAnimation, X0
	2973 Move X19, 0x392000
	2974 Move X19, [X19+880]
	2975 Move X22, X0
	2976 Add X0, X24, 16
	2977 Move X1, [X19]
	2978 Call StyleDataRef`1<RareData>.Read, X0
	2979 Move X1, [X19]
	2980 Move W24, [X0+44]
	2981 Add X0, X23, 16
	2982 Call StyleDataRef`1<RareData>.Read, X0
	2983 Compare X22, 0
	2984 JumpIfEqual {5394}
	2985 Move X10, 0x34A000
	2986 Move X8, [X22]
	2987 Move W23, [X0+44]
	2988 Move X10, [X10+3792]
	2989 NotImplemented "Instruction LDRH not yet implemented."
	2990 Move X1, [X10]
	2991 Compare X9, 0
	2992 JumpIfEqual {2999}
	2993 Move X10, [X8+176]
	2994 Add X10, X10, 8
	2995 NotImplemented "Instruction LDUR not yet implemented."
	2996 NotImplemented "Instruction CMP not yet implemented."
	2997 Subtract X9, X9, 1
	2998 Add X10, X10, 16
	2999 Move W2, 4
	3000 Move X0, X22
	3001 Call 0x1C5D788
	3002 Compare X22, 0
	3003 JumpIfEqual {5394}
	3004 Move X0, X22
	3005 Move X1, X31
	3006 Call VisualElement.get_styleAnimation, X0
	3007 Move X19, 0x392000
	3008 Move X19, [X19+880]
	3009 Move X22, X0
	3010 Add X0, X24, 16
	3011 Move X1, [X19]
	3012 Call StyleDataRef`1<RareData>.Read, X0
	3013 Move X1, [X19]
	3014 Move W24, [X0+48]
	3015 Add X0, X23, 16
	3016 Call StyleDataRef`1<RareData>.Read, X0
	3017 Compare X22, 0
	3018 JumpIfEqual {5394}
	3019 Move X10, 0x34A000
	3020 Move X8, [X22]
	3021 Move W23, [X0+48]
	3022 Move X10, [X10+3792]
	3023 NotImplemented "Instruction LDRH not yet implemented."
	3024 Move X1, [X10]
	3025 Compare X9, 0
	3026 JumpIfEqual {3033}
	3027 Move X10, [X8+176]
	3028 Add X10, X10, 8
	3029 NotImplemented "Instruction LDUR not yet implemented."
	3030 NotImplemented "Instruction CMP not yet implemented."
	3031 Subtract X9, X9, 1
	3032 Add X10, X10, 16
	3033 Move W2, 1
	3034 Move X0, X22
	3035 Call 0x1C5D788
	3036 Compare X22, 0
	3037 JumpIfEqual {5394}
	3038 Move X0, X22
	3039 Move X1, X31
	3040 Call VisualElement.get_styleAnimation, X0
	3041 Move X19, 0x392000
	3042 Move X19, [X19+880]
	3043 Move X22, X0
	3044 Add X0, X24, 16
	3045 Move X1, [X19]
	3046 Call StyleDataRef`1<RareData>.Read, X0
	3047 Move X1, [X19]
	3048 Move W24, [X0+52]
	3049 Add X0, X23, 16
	3050 Call StyleDataRef`1<RareData>.Read, X0
	3051 Compare X22, 0
	3052 JumpIfEqual {5394}
	3053 Move X10, 0x34A000
	3054 Move X8, [X22]
	3055 Move W23, [X0+52]
	3056 Move X10, [X10+3792]
	3057 NotImplemented "Instruction LDRH not yet implemented."
	3058 Move X1, [X10]
	3059 Compare X9, 0
	3060 JumpIfEqual {3067}
	3061 Move X10, [X8+176]
	3062 Add X10, X10, 8
	3063 NotImplemented "Instruction LDUR not yet implemented."
	3064 NotImplemented "Instruction CMP not yet implemented."
	3065 Subtract X9, X9, 1
	3066 Add X10, X10, 16
	3067 Move W2, 1
	3068 Move X0, X22
	3069 Call 0x1C5D788
	3070 Compare X22, 0
	3071 JumpIfEqual {5394}
	3072 Move X0, X22
	3073 Move X1, X31
	3074 Call VisualElement.get_styleAnimation, X0
	3075 Move X19, 0x392000
	3076 Move X19, [X19+880]
	3077 Move X22, X0
	3078 Add X0, X24, 16
	3079 Move X1, [X19]
	3080 Call StyleDataRef`1<RareData>.Read, X0
	3081 Move X1, [X19]
	3082 Move W24, [X0+56]
	3083 Add X0, X23, 16
	3084 Call StyleDataRef`1<RareData>.Read, X0
	3085 Compare X22, 0
	3086 JumpIfEqual {5394}
	3087 Move X10, 0x34A000
	3088 Move X8, [X22]
	3089 Move W23, [X0+56]
	3090 Move X10, [X10+3792]
	3091 NotImplemented "Instruction LDRH not yet implemented."
	3092 Move X1, [X10]
	3093 Compare X9, 0
	3094 JumpIfEqual {3101}
	3095 Move X10, [X8+176]
	3096 Add X10, X10, 8
	3097 NotImplemented "Instruction LDUR not yet implemented."
	3098 NotImplemented "Instruction CMP not yet implemented."
	3099 Subtract X9, X9, 1
	3100 Add X10, X10, 16
	3101 Move W2, 1
	3102 Move X0, X22
	3103 Call 0x1C5D788
	3104 Compare X22, 0
	3105 JumpIfEqual {5394}
	3106 Move X0, X22
	3107 Move X1, X31
	3108 Call VisualElement.get_styleAnimation, X0
	3109 Move X19, 0x392000
	3110 Move X19, [X19+880]
	3111 Move X22, X0
	3112 Add X0, X24, 16
	3113 Move X1, [X19]
	3114 Call StyleDataRef`1<RareData>.Read, X0
	3115 Move X1, [X19]
	3116 Move V8, [X0+60]
	3117 Add X0, X23, 16
	3118 Call StyleDataRef`1<RareData>.Read, X0
	3119 Compare X22, 0
	3120 JumpIfEqual {5394}
	3121 Move X10, 0x34A000
	3122 Move X8, [X22]
	3123 Move V9, [X0+60]
	3124 Move X10, [X10+3792]
	3125 NotImplemented "Instruction LDRH not yet implemented."
	3126 Move X1, [X10]
	3127 Compare X9, 0
	3128 JumpIfEqual {3135}
	3129 Move X10, [X8+176]
	3130 Add X10, X10, 8
	3131 NotImplemented "Instruction LDUR not yet implemented."
	3132 NotImplemented "Instruction CMP not yet implemented."
	3133 Subtract X9, X9, 1
	3134 Add X10, X10, 16
	3135 Move X0, X22
	3136 Move W2, W31
	3137 Call 0x1C5D788
	3138 Compare X22, 0
	3139 JumpIfEqual {5394}
	3140 Move X0, X22
	3141 Move X1, X31
	3142 Call VisualElement.get_styleAnimation, X0
	3143 Move X19, 0x392000
	3144 Move X19, [X19+880]
	3145 Move X22, X0
	3146 Add X0, X24, 16
	3147 Move X1, [X19]
	3148 Call StyleDataRef`1<RareData>.Read, X0
	3149 Move X1, [X19]
	3150 Move W24, [X0+64]
	3151 Add X0, X23, 16
	3152 Call StyleDataRef`1<RareData>.Read, X0
	3153 Compare X22, 0
	3154 JumpIfEqual {5394}
	3155 Move X10, 0x34A000
	3156 Move X8, [X22]
	3157 Move W23, [X0+64]
	3158 Move X10, [X10+3792]
	3159 NotImplemented "Instruction LDRH not yet implemented."
	3160 Move X1, [X10]
	3161 Compare X9, 0
	3162 JumpIfEqual {3169}
	3163 Move X10, [X8+176]
	3164 Add X10, X10, 8
	3165 NotImplemented "Instruction LDUR not yet implemented."
	3166 NotImplemented "Instruction CMP not yet implemented."
	3167 Subtract X9, X9, 1
	3168 Add X10, X10, 16
	3169 Move W2, 1
	3170 Move X0, X22
	3171 Call 0x1C5D788
	3172 Compare X22, 0
	3173 JumpIfEqual {5394}
	3174 Move X0, X22
	3175 Move X1, X31
	3176 Call VisualElement.get_styleAnimation, X0
	3177 Move X19, 0x392000
	3178 Move X19, [X19+880]
	3179 Move X22, X0
	3180 Add X0, X24, 16
	3181 Move X1, [X19]
	3182 Call StyleDataRef`1<RareData>.Read, X0
	3183 Move X1, [X19]
	3184 Move W24, [X0+68]
	3185 Add X0, X23, 16
	3186 Call StyleDataRef`1<RareData>.Read, X0
	3187 Compare X22, 0
	3188 JumpIfEqual {5394}
	3189 Move X10, 0x34A000
	3190 Move X8, [X22]
	3191 Move W23, [X0+68]
	3192 Move X10, [X10+3792]
	3193 NotImplemented "Instruction LDRH not yet implemented."
	3194 Move X1, [X10]
	3195 Compare X9, 0
	3196 JumpIfEqual {3203}
	3197 Move X10, [X8+176]
	3198 Add X10, X10, 8
	3199 NotImplemented "Instruction LDUR not yet implemented."
	3200 NotImplemented "Instruction CMP not yet implemented."
	3201 Subtract X9, X9, 1
	3202 Add X10, X10, 16
	3203 Move W2, 4
	3204 Move X0, X22
	3205 Call 0x1C5D788
	3206 Move W9, [X10]
	3207 Add W9, W9, 13
	3208 Add X8, X8, W9
	3209 Add X0, X8, 312
	3210 Move X8, [X0]
	3211 Move X9, [X0+8]
	3212 Move W6, [X31+44]
	3213 Move W7, [X31+32]
	3214 Move W1, 2
	3215 NotImplemented "Instruction MOVK not yet implemented."
	3216 Move X0, X25
	3217 Move X2, X27
	3218 Move X3, X26
	3219 Move X4, X29
	3220 Move X5, X28
	3221 Move [X31], X20
	3222 Move [X31+8], X9
	3223 NotImplemented "Instruction BLR not yet implemented."
	3224 Move W25, W0
	3225 Move X0, X22
	3226 Move X1, X31
	3227 Call VisualElement.get_styleAnimation, X0
	3228 Move X1, [X19]
	3229 Move X22, X0
	3230 Move X0, X24
	3231 Call StyleDataRef`1<VisualData>.Read, X0
	3232 Move X1, [X19]
	3233 NotImplemented "Instruction LDUR not yet implemented."
	3234 Move W24, [X0+68]
	3235 Move X0, X23
	3236 Call StyleDataRef`1<VisualData>.Read, X0
	3237 Compare X22, 0
	3238 JumpIfEqual {5394}
	3239 Move X8, [X22]
	3240 Move W23, [X0+68]
	3241 NotImplemented "Instruction LDUR not yet implemented."
	3242 Move X1, [X21]
	3243 NotImplemented "Instruction LDRH not yet implemented."
	3244 Compare X9, 0
	3245 JumpIfEqual {3252}
	3246 Move X10, [X8+176]
	3247 Add X10, X10, 8
	3248 NotImplemented "Instruction LDUR not yet implemented."
	3249 NotImplemented "Instruction CMP not yet implemented."
	3250 Subtract X9, X9, 1
	3251 Add X10, X10, 16
	3252 Move W2, 13
	3253 Move X0, X22
	3254 Call 0x1C5D788
	3255 Move W9, [X10]
	3256 Add W9, W9, 3
	3257 Add X8, X8, W9
	3258 Add X0, X8, 312
	3259 Move X8, [X0]
	3260 Move X5, [X0+8]
	3261 Move W2, [X31+44]
	3262 Move X4, [X31+32]
	3263 Move W27, 2
	3264 NotImplemented "Instruction MOVK not yet implemented."
	3265 Move W9, 9
	3266 Or W1, W27, W9
	3267 Move X0, X25
	3268 Move V0, V8
	3269 Move V1, V9
	3270 Move V2, V10
	3271 Move V3, V11
	3272 Move V4, V15
	3273 Move V5, V14
	3274 Move V6, V13
	3275 Move V7, V12
	3276 Move W3, W20
	3277 NotImplemented "Instruction BLR not yet implemented."
	3278 Move W29, W0
	3279 Move X0, X22
	3280 Move X1, X31
	3281 Call VisualElement.get_styleAnimation, X0
	3282 Move X1, [X19]
	3283 Move X26, X0
	3284 Move X0, X24
	3285 Call StyleDataRef`1<VisualData>.Read, X0
	3286 Move X1, [X19]
	3287 Move S8, [X0+148]
	3288 Move S9, [X0+152]
	3289 Move S10, [X0+156]
	3290 Move S11, [X0+160]
	3291 Move X0, X23
	3292 Call StyleDataRef`1<VisualData>.Read, X0
	3293 Compare X26, 0
	3294 JumpIfEqual {5394}
	3295 Move X8, [X26]
	3296 Move S13, [X0+156]
	3297 Move S12, [X0+160]
	3298 Move S15, [X0+148]
	3299 Move S14, [X0+152]
	3300 Move X1, [X28]
	3301 NotImplemented "Instruction LDRH not yet implemented."
	3302 Compare X9, 0
	3303 JumpIfEqual {3310}
	3304 Move X10, [X8+176]
	3305 Add X10, X10, 8
	3306 NotImplemented "Instruction LDUR not yet implemented."
	3307 NotImplemented "Instruction CMP not yet implemented."
	3308 Subtract X9, X9, 1
	3309 Add X10, X10, 16
	3310 Move W2, 3
	3311 Move X0, X26
	3312 Call 0x1C5D788
	3313 Move W9, [X10]
	3314 Add W9, W9, 2
	3315 Add X8, X8, W9
	3316 Add X0, X8, 312
	3317 Move X8, [X0]
	3318 Move X7, [X0+8]
	3319 Move W4, [X31+44]
	3320 Move W9, 2
	3321 NotImplemented "Instruction MOVK not yet implemented."
	3322 Add W1, W9, 10
	3323 Move X0, X25
	3324 Move X2, X26
	3325 Move X3, X27
	3326 Move W5, W20
	3327 Move X6, X29
	3328 NotImplemented "Instruction BLR not yet implemented."
	3329 Move W25, W0
	3330 Move X0, X22
	3331 Move X1, X31
	3332 Call VisualElement.get_styleAnimation, X0
	3333 Move X1, [X19]
	3334 Move X26, X0
	3335 Move X0, X24
	3336 Call StyleDataRef`1<VisualData>.Read, X0
	3337 Move X1, [X19]
	3338 NotImplemented "Instruction LDUR not yet implemented."
	3339 Move X0, X23
	3340 Call StyleDataRef`1<VisualData>.Read, X0
	3341 Compare X26, 0
	3342 JumpIfEqual {5394}
	3343 Move X8, [X26]
	3344 Move X10, 0x34A000
	3345 NotImplemented "Instruction LDUR not yet implemented."
	3346 NotImplemented "Instruction LDRH not yet implemented."
	3347 Move X10, [X10+3792]
	3348 Move [X31+32], W25
	3349 Move X1, [X10]
	3350 Compare X9, 0
	3351 JumpIfEqual {3358}
	3352 Move X10, [X8+176]
	3353 Add X10, X10, 8
	3354 NotImplemented "Instruction LDUR not yet implemented."
	3355 NotImplemented "Instruction CMP not yet implemented."
	3356 Subtract X9, X9, 1
	3357 Add X10, X10, 16
	3358 Move W2, 2
	3359 Move X0, X26
	3360 Call 0x1C5D788
	3361 NotImplemented "Instruction LDRSW not yet implemented."
	3362 Add X8, X8, X9
	3363 Add X0, X8, 312
	3364 Move X8, [X0]
	3365 Move X5, [X0+8]
	3366 Move W2, [X31+44]
	3367 Move W27, 3
	3368 NotImplemented "Instruction MOVK not yet implemented."
	3369 Add W1, W27, 3
	3370 Move X0, X25
	3371 Move V0, V8
	3372 Move V1, V9
	3373 Move W3, W20
	3374 Move X4, X29
	3375 NotImplemented "Instruction BLR not yet implemented."
	3376 Move W25, W0
	3377 Move X0, X22
	3378 Move X1, X31
	3379 Call VisualElement.get_styleAnimation, X0
	3380 Move X1, [X19]
	3381 Move X26, X0
	3382 Move X0, X24
	3383 Call StyleDataRef`1<LayoutData>.Read, X0
	3384 Move X1, [X19]
	3385 Move V8, [X0+20]
	3386 Move X0, X23
	3387 Call StyleDataRef`1<LayoutData>.Read, X0
	3388 Compare X26, 0
	3389 JumpIfEqual {5394}
	3390 Move X8, [X26]
	3391 Move V9, [X0+20]
	3392 Move X1, [X28]
	3393 NotImplemented "Instruction LDRH not yet implemented."
	3394 Compare X9, 0
	3395 JumpIfEqual {3402}
	3396 Move X10, [X8+176]
	3397 Add X10, X10, 8
	3398 NotImplemented "Instruction LDUR not yet implemented."
	3399 NotImplemented "Instruction CMP not yet implemented."
	3400 Subtract X9, X9, 1
	3401 Add X10, X10, 16
	3402 Move X0, X26
	3403 Move W2, W31
	3404 Call 0x1C5D788
	3405 NotImplemented "Instruction LDRSW not yet implemented."
	3406 Add X8, X8, X9
	3407 Add X0, X8, 312
	3408 Move X8, [X0]
	3409 Move X5, [X0+8]
	3410 Move W2, [X31+44]
	3411 Move W28, 3
	3412 NotImplemented "Instruction MOVK not yet implemented."
	3413 Or W1, W28, 8
	3414 Move X0, X25
	3415 Move V0, V8
	3416 Move V1, V9
	3417 Move W3, W20
	3418 Move X4, X29
	3419 NotImplemented "Instruction BLR not yet implemented."
	3420 Move W25, W0
	3421 Move X0, X22
	3422 Move X1, X31
	3423 Call VisualElement.get_styleAnimation, X0
	3424 Move X1, [X19]
	3425 Move X26, X0
	3426 Move X0, X24
	3427 Call StyleDataRef`1<LayoutData>.Read, X0
	3428 Move X1, [X19]
	3429 Move V8, [X0+56]
	3430 Move X0, X23
	3431 Call StyleDataRef`1<LayoutData>.Read, X0
	3432 Compare X26, 0
	3433 JumpIfEqual {5394}
	3434 Move X8, [X26]
	3435 Move V9, [X0+56]
	3436 Move X1, [X27]
	3437 NotImplemented "Instruction LDRH not yet implemented."
	3438 Compare X9, 0
	3439 JumpIfEqual {3446}
	3440 Move X10, [X8+176]
	3441 Add X10, X10, 8
	3442 NotImplemented "Instruction LDUR not yet implemented."
	3443 NotImplemented "Instruction CMP not yet implemented."
	3444 Subtract X9, X9, 1
	3445 Add X10, X10, 16
	3446 Move X0, X26
	3447 Move W2, W31
	3448 Call 0x1C5D788
	3449 Move W9, [X10]
	3450 Add W9, W9, 2
	3451 Add X8, X8, W9
	3452 Add X0, X8, 312
	3453 Move X8, [X0]
	3454 Move X7, [X0+8]
	3455 Move W4, [X31+44]
	3456 Move W9, 3
	3457 NotImplemented "Instruction MOVK not yet implemented."
	3458 Add W1, W9, 17
	3459 Move X0, X25
	3460 Move X2, X26
	3461 Move X3, X27
	3462 Move W5, W20
	3463 Move X6, X29
	3464 NotImplemented "Instruction BLR not yet implemented."
	3465 Move W25, W0
	3466 Move X0, X22
	3467 Move X1, X31
	3468 Call VisualElement.get_styleAnimation, X0
	3469 Move X1, [X19]
	3470 Move X26, X0
	3471 Move X0, X24
	3472 Call StyleDataRef`1<LayoutData>.Read, X0
	3473 Move X1, [X19]
	3474 NotImplemented "Instruction LDUR not yet implemented."
	3475 Move X0, X23
	3476 Call StyleDataRef`1<LayoutData>.Read, X0
	3477 Compare X26, 0
	3478 JumpIfEqual {5394}
	3479 Move X8, [X26]
	3480 Move X10, 0x34A000
	3481 NotImplemented "Instruction LDUR not yet implemented."
	3482 NotImplemented "Instruction LDRH not yet implemented."
	3483 Move X10, [X10+3792]
	3484 Move [X31+32], W25
	3485 Move X1, [X10]
	3486 Compare X9, 0
	3487 JumpIfEqual {3494}
	3488 Move X10, [X8+176]
	3489 Add X10, X10, 8
	3490 NotImplemented "Instruction LDUR not yet implemented."
	3491 NotImplemented "Instruction CMP not yet implemented."
	3492 Subtract X9, X9, 1
	3493 Add X10, X10, 16
	3494 Move W2, 2
	3495 Move X0, X26
	3496 Call 0x1C5D788
	3497 Move W9, [X10]
	3498 Add W9, W9, 2
	3499 Add X8, X8, W9
	3500 Add X0, X8, 312
	3501 Move X8, [X0]
	3502 Move X7, [X0+8]
	3503 Move W4, [X31+44]
	3504 Move W9, 3
	3505 NotImplemented "Instruction MOVK not yet implemented."
	3506 Add W1, W9, 25
	3507 Move X0, X25
	3508 Move X2, X26
	3509 Move X3, X27
	3510 Move W5, W20
	3511 Move X6, X29
	3512 NotImplemented "Instruction BLR not yet implemented."
	3513 Move W25, W0
	3514 Move X0, X22
	3515 Move X1, X31
	3516 Call VisualElement.get_styleAnimation, X0
	3517 Move X1, [X19]
	3518 Move X26, X0
	3519 Move X0, X24
	3520 Call StyleDataRef`1<LayoutData>.Read, X0
	3521 Move X1, [X19]
	3522 NotImplemented "Instruction LDUR not yet implemented."
	3523 Move X0, X23
	3524 Call StyleDataRef`1<LayoutData>.Read, X0
	3525 Compare X26, 0
	3526 JumpIfEqual {5394}
	3527 Move X8, [X26]
	3528 Move X10, 0x349000
	3529 NotImplemented "Instruction LDUR not yet implemented."
	3530 NotImplemented "Instruction LDRH not yet implemented."
	3531 Move X10, [X10+3792]
	3532 Move [X31+32], W25
	3533 Move X1, [X10]
	3534 Compare X9, 0
	3535 JumpIfEqual {3542}
	3536 Move X10, [X8+176]
	3537 Add X10, X10, 8
	3538 NotImplemented "Instruction LDUR not yet implemented."
	3539 NotImplemented "Instruction CMP not yet implemented."
	3540 Subtract X9, X9, 1
	3541 Add X10, X10, 16
	3542 Move W2, 2
	3543 Move X0, X26
	3544 Call 0x1C5D788
	3545 Move W9, [X10]
	3546 Add W9, W9, 13
	3547 Add X8, X8, W9
	3548 Add X0, X8, 312
	3549 Move X8, [X0]
	3550 Move X9, [X0+8]
	3551 Move W6, [X31+44]
	3552 Move W1, 2
	3553 NotImplemented "Instruction MOVK not yet implemented."
	3554 Move X0, X25
	3555 Move X2, X27
	3556 Move X3, X26
	3557 Move X4, X29
	3558 Move X5, X28
	3559 Move W7, W20
	3560 Move [X31], X19
	3561 Move [X31+8], X9
	3562 NotImplemented "Instruction BLR not yet implemented."
	3563 Move [X31+32], W0
	3564 Move X0, X22
	3565 Move X1, X31
	3566 Call VisualElement.get_styleAnimation, X0
	3567 Move X25, 0x391000
	3568 Move X25, [X25+864]
	3569 Move X26, X0
	3570 Move X0, X24
	3571 Move X1, [X25]
	3572 Call StyleDataRef`1<VisualData>.Read, X0
	3573 Move X1, [X25]
	3574 NotImplemented "Instruction LDUR not yet implemented."
	3575 Move W27, [X0+68]
	3576 Move X0, X23
	3577 Call StyleDataRef`1<VisualData>.Read, X0
	3578 Compare X26, 0
	3579 JumpIfEqual {5394}
	3580 Move X8, [X26]
	3581 Move X10, 0x349000
	3582 Move W29, [X0+68]
	3583 NotImplemented "Instruction LDUR not yet implemented."
	3584 NotImplemented "Instruction LDRH not yet implemented."
	3585 Move X10, [X10+3792]
	3586 Move X1, [X10]
	3587 Compare X9, 0
	3588 JumpIfEqual {3595}
	3589 Move X10, [X8+176]
	3590 Add X10, X10, 8
	3591 NotImplemented "Instruction LDUR not yet implemented."
	3592 NotImplemented "Instruction CMP not yet implemented."
	3593 Subtract X9, X9, 1
	3594 Add X10, X10, 16
	3595 Move W2, 13
	3596 Move X0, X26
	3597 Call 0x1C5D788
	3598 Move W9, [X10]
	3599 Add W9, W9, 3
	3600 Add X8, X8, W9
	3601 Add X0, X8, 312
	3602 Move X8, [X0]
	3603 Move X5, [X0+8]
	3604 Move W2, [X31+44]
	3605 Move W1, 9
	3606 Move W27, 9
	3607 NotImplemented "Instruction MOVK not yet implemented."
	3608 Move X0, X25
	3609 Move V0, V8
	3610 Move V1, V9
	3611 Move V2, V10
	3612 Move V3, V11
	3613 Move V4, V15
	3614 Move V5, V14
	3615 Move V6, V13
	3616 Move V7, V12
	3617 Move W3, W20
	3618 Move X4, X29
	3619 NotImplemented "Instruction MOVK not yet implemented."
	3620 NotImplemented "Instruction BLR not yet implemented."
	3621 Move W25, W0
	3622 Move X0, X22
	3623 Move X1, X31
	3624 Call VisualElement.get_styleAnimation, X0
	3625 Move X1, [X19]
	3626 Move X22, X0
	3627 Move X0, X24
	3628 Call 0x266D4A0, X0
	3629 Move X1, [X19]
	3630 Move V8, [X0+120]
	3631 Move X0, X23
	3632 Call 0x266D4A0, X0
	3633 Compare X22, 0
	3634 JumpIfEqual {5394}
	3635 Move X8, [X22]
	3636 Move V9, [X0+120]
	3637 Move X1, [X26]
	3638 NotImplemented "Instruction LDRH not yet implemented."
	3639 Compare X9, 0
	3640 JumpIfEqual {3647}
	3641 Move X10, [X8+176]
	3642 Add X10, X10, 8
	3643 NotImplemented "Instruction LDUR not yet implemented."
	3644 NotImplemented "Instruction CMP not yet implemented."
	3645 Subtract X9, X9, 1
	3646 Add X10, X10, 16
	3647 Move X0, X22
	3648 Move W2, W31
	3649 Call 0x1C5D788
	3650 Move W9, [X10]
	3651 Add W9, W9, 13
	3652 Add X8, X8, W9
	3653 Add X0, X8, 312
	3654 Move X8, [X0]
	3655 Move X9, [X0+8]
	3656 Move W6, [X31+44]
	3657 Move W7, [X31+32]
	3658 Move W10, 2
	3659 NotImplemented "Instruction MOVK not yet implemented."
	3660 Add W1, W10, 1
	3661 Move X0, X22
	3662 Move X2, X26
	3663 Move X3, X24
	3664 Move X4, X27
	3665 Move X5, X23
	3666 Move [X31], X20
	3667 Move [X31+8], X9
	3668 NotImplemented "Instruction BLR not yet implemented."
	3669 Move W9, [X10]
	3670 Add W9, W9, 3
	3671 Add X8, X8, W9
	3672 Add X0, X8, 312
	3673 Move X8, [X0]
	3674 Move X5, [X0+8]
	3675 Move W2, [X31+44]
	3676 Move X4, [X31+32]
	3677 Add W1, W27, 8
	3678 Move X0, X26
	3679 Move V0, V8
	3680 Move V1, V9
	3681 Move V2, V10
	3682 Move V3, V11
	3683 Move V4, V15
	3684 Move V5, V14
	3685 Move V6, V13
	3686 Move V7, V12
	3687 Move W3, W20
	3688 NotImplemented "Instruction BLR not yet implemented."
	3689 Move W26, W0
	3690 Move X0, X22
	3691 Move X1, X31
	3692 Call VisualElement.get_styleAnimation, X0
	3693 Move X1, [X19]
	3694 Move X27, X0
	3695 Move X0, X24
	3696 Call StyleDataRef`1<VisualData>.Read, X0
	3697 Move X1, [X19]
	3698 Move S8, [X0+100]
	3699 Move S9, [X0+104]
	3700 Move S10, [X0+108]
	3701 Move S11, [X0+112]
	3702 Move X0, X23
	3703 Call StyleDataRef`1<VisualData>.Read, X0
	3704 Compare X27, 0
	3705 JumpIfEqual {5394}
	3706 Move X8, [X27]
	3707 Move S13, [X0+108]
	3708 Move S12, [X0+112]
	3709 Move S15, [X0+100]
	3710 Move S14, [X0+104]
	3711 Move X1, [X28]
	3712 NotImplemented "Instruction LDRH not yet implemented."
	3713 Compare X9, 0
	3714 JumpIfEqual {3721}
	3715 Move X10, [X8+176]
	3716 Add X10, X10, 8
	3717 NotImplemented "Instruction LDUR not yet implemented."
	3718 NotImplemented "Instruction CMP not yet implemented."
	3719 Subtract X9, X9, 1
	3720 Add X10, X10, 16
	3721 Move W2, 3
	3722 Move X0, X27
	3723 Move X25, X28
	3724 Call 0x1C5D788
	3725 Move W9, [X10]
	3726 Add W9, W9, 2
	3727 Add X8, X8, W9
	3728 Add X0, X8, 312
	3729 Move X8, [X0]
	3730 Move X7, [X0+8]
	3731 Move W4, [X31+44]
	3732 Move W9, 2
	3733 NotImplemented "Instruction MOVK not yet implemented."
	3734 Add W1, W9, 11
	3735 Move X0, X26
	3736 Move X2, X27
	3737 Move X3, X28
	3738 Move W5, W20
	3739 Move X6, X29
	3740 Move W21, W4
	3741 Move X25, X29
	3742 NotImplemented "Instruction BLR not yet implemented."
	3743 Move W26, W0
	3744 Move X0, X22
	3745 Move X1, X31
	3746 Call VisualElement.get_styleAnimation, X0
	3747 Move X1, [X19]
	3748 Move X27, X0
	3749 Move X0, X24
	3750 Call StyleDataRef`1<VisualData>.Read, X0
	3751 Move X1, [X19]
	3752 NotImplemented "Instruction LDUR not yet implemented."
	3753 Move X0, X23
	3754 Call StyleDataRef`1<VisualData>.Read, X0
	3755 Compare X27, 0
	3756 JumpIfEqual {5394}
	3757 Move X8, [X27]
	3758 Move X10, 0x349000
	3759 NotImplemented "Instruction LDUR not yet implemented."
	3760 NotImplemented "Instruction LDRH not yet implemented."
	3761 Move X10, [X10+3792]
	3762 Move X1, [X10]
	3763 Compare X9, 0
	3764 JumpIfEqual {3771}
	3765 Move X10, [X8+176]
	3766 Add X10, X10, 8
	3767 NotImplemented "Instruction LDUR not yet implemented."
	3768 NotImplemented "Instruction CMP not yet implemented."
	3769 Subtract X9, X9, 1
	3770 Add X10, X10, 16
	3771 Move W2, 2
	3772 Move X0, X27
	3773 Call 0x1C5D788
	3774 NotImplemented "Instruction LDRSW not yet implemented."
	3775 Add X8, X8, X9
	3776 Add X0, X8, 312
	3777 Move X8, [X0]
	3778 Move X5, [X0+8]
	3779 Move W2, [X31+44]
	3780 Add W1, W27, 2
	3781 Move X0, X26
	3782 Move V0, V8
	3783 Move V1, V9
	3784 Move W3, W20
	3785 Move X4, X29
	3786 NotImplemented "Instruction BLR not yet implemented."
	3787 Move W26, W0
	3788 Move X0, X22
	3789 Move X1, X31
	3790 Call VisualElement.get_styleAnimation, X0
	3791 Move X1, [X19]
	3792 Move X27, X0
	3793 Move X0, X24
	3794 Call StyleDataRef`1<LayoutData>.Read, X0
	3795 Move X1, [X19]
	3796 Move V8, [X0+12]
	3797 Move X0, X23
	3798 Call StyleDataRef`1<LayoutData>.Read, X0
	3799 Compare X27, 0
	3800 JumpIfEqual {5394}
	3801 Move X8, [X27]
	3802 Move V9, [X0+12]
	3803 Move X1, [X28]
	3804 NotImplemented "Instruction LDRH not yet implemented."
	3805 Compare X9, 0
	3806 JumpIfEqual {3813}
	3807 Move X10, [X8+176]
	3808 Add X10, X10, 8
	3809 NotImplemented "Instruction LDUR not yet implemented."
	3810 NotImplemented "Instruction CMP not yet implemented."
	3811 Subtract X9, X9, 1
	3812 Add X10, X10, 16
	3813 Move X0, X27
	3814 Move W2, W31
	3815 Call 0x1C5D788
	3816 NotImplemented "Instruction LDRSW not yet implemented."
	3817 Add X8, X8, X9
	3818 Add X0, X8, 312
	3819 Move X8, [X0]
	3820 Move X5, [X0+8]
	3821 Move W2, [X31+44]
	3822 Add W1, W28, 9
	3823 Move X0, X26
	3824 Move V0, V8
	3825 Move V1, V9
	3826 Move W3, W20
	3827 Move X4, X29
	3828 NotImplemented "Instruction BLR not yet implemented."
	3829 Move W26, W0
	3830 Move X0, X22
	3831 Move X1, X31
	3832 Call VisualElement.get_styleAnimation, X0
	3833 Move X1, [X19]
	3834 Move X22, X0
	3835 Move X0, X24
	3836 Call StyleDataRef`1<LayoutData>.Read, X0
	3837 Move X1, [X19]
	3838 Move X24, [X0+40]
	3839 Move X0, X23
	3840 Call StyleDataRef`1<LayoutData>.Read, X0
	3841 Compare X22, 0
	3842 JumpIfEqual {5394}
	3843 Move X8, [X22]
	3844 Move X23, [X0+40]
	3845 Move X1, [X27]
	3846 Or W19, W25, W26
	3847 NotImplemented "Instruction LDRH not yet implemented."
	3848 Compare X9, 0
	3849 JumpIfEqual {3856}
	3850 Move X10, [X8+176]
	3851 Add X10, X10, 8
	3852 NotImplemented "Instruction LDUR not yet implemented."
	3853 NotImplemented "Instruction CMP not yet implemented."
	3854 Subtract X9, X9, 1
	3855 Add X10, X10, 16
	3856 Move W2, 2
	3857 Move X0, X22
	3858 Call 0x1C5D788
	3859 Move W9, [X10]
	3860 Add W9, W9, 2
	3861 Add X8, X8, W9
	3862 Add X0, X8, 312
	3863 Move X8, [X0]
	3864 Move X7, [X0+8]
	3865 Move W4, [X31+44]
	3866 Move W9, 3
	3867 NotImplemented "Instruction MOVK not yet implemented."
	3868 Add W1, W9, 16
	3869 Move X0, X26
	3870 Move X2, X27
	3871 Move X3, X28
	3872 Move W5, W20
	3873 Move X6, X29
	3874 Move W25, W4
	3875 Move W21, W20
	3876 Move X20, X29
	3877 NotImplemented "Instruction BLR not yet implemented."
	3878 Move W26, W0
	3879 Move X0, X22
	3880 Move X1, X31
	3881 Call VisualElement.get_styleAnimation, X0
	3882 Move X1, [X19]
	3883 Move X27, X0
	3884 Move X0, X24
	3885 Call StyleDataRef`1<LayoutData>.Read, X0
	3886 Move X1, [X19]
	3887 NotImplemented "Instruction LDUR not yet implemented."
	3888 Move X0, X23
	3889 Call StyleDataRef`1<LayoutData>.Read, X0
	3890 Compare X27, 0
	3891 JumpIfEqual {5394}
	3892 Move X8, [X27]
	3893 Move X10, 0x349000
	3894 NotImplemented "Instruction LDUR not yet implemented."
	3895 NotImplemented "Instruction LDRH not yet implemented."
	3896 Move X10, [X10+3792]
	3897 Move X1, [X10]
	3898 Compare X9, 0
	3899 JumpIfEqual {3906}
	3900 Move X10, [X8+176]
	3901 Add X10, X10, 8
	3902 NotImplemented "Instruction LDUR not yet implemented."
	3903 NotImplemented "Instruction CMP not yet implemented."
	3904 Subtract X9, X9, 1
	3905 Add X10, X10, 16
	3906 Move W2, 2
	3907 Move X0, X27
	3908 Call 0x1C5D788
	3909 Move W9, [X10]
	3910 Add W9, W9, 2
	3911 Add X8, X8, W9
	3912 Add X0, X8, 312
	3913 Move X8, [X0]
	3914 Move X7, [X0+8]
	3915 Move W4, [X31+44]
	3916 Move W9, 3
	3917 NotImplemented "Instruction MOVK not yet implemented."
	3918 Add W1, W9, 24
	3919 Move X0, X26
	3920 Move X2, X27
	3921 Move X3, X28
	3922 Move W5, W20
	3923 Move X6, X29
	3924 Move W25, W4
	3925 Move W21, W20
	3926 Move X20, X29
	3927 NotImplemented "Instruction BLR not yet implemented."
	3928 Move W26, W0
	3929 Move X0, X22
	3930 Move X1, X31
	3931 Call VisualElement.get_styleAnimation, X0
	3932 Move X1, [X19]
	3933 Move X27, X0
	3934 Move X0, X24
	3935 Call StyleDataRef`1<LayoutData>.Read, X0
	3936 Move X1, [X19]
	3937 NotImplemented "Instruction LDUR not yet implemented."
	3938 Move X0, X23
	3939 Call StyleDataRef`1<LayoutData>.Read, X0
	3940 Compare X27, 0
	3941 JumpIfEqual {5394}
	3942 Move X8, [X27]
	3943 Move X10, 0x349000
	3944 NotImplemented "Instruction LDUR not yet implemented."
	3945 NotImplemented "Instruction LDRH not yet implemented."
	3946 Move X10, [X10+3792]
	3947 Move X1, [X10]
	3948 Compare X9, 0
	3949 JumpIfEqual {3956}
	3950 Move X10, [X8+176]
	3951 Add X10, X10, 8
	3952 NotImplemented "Instruction LDUR not yet implemented."
	3953 NotImplemented "Instruction CMP not yet implemented."
	3954 Subtract X9, X9, 1
	3955 Add X10, X10, 16
	3956 Move W2, 2
	3957 Move X0, X27
	3958 Call 0x1C5D788
	3959 Move W9, [X10]
	3960 Add W9, W9, 13
	3961 Add X8, X8, W9
	3962 Add X0, X8, 312
	3963 Move X8, [X0]
	3964 Move X9, [X0+8]
	3965 Move W6, [X31+44]
	3966 Move W10, 2
	3967 NotImplemented "Instruction MOVK not yet implemented."
	3968 Add W1, W10, 1
	3969 Move X0, X26
	3970 Move X2, X28
	3971 Move X3, X27
	3972 Move X4, X25
	3973 Move X5, X29
	3974 Move W7, W20
	3975 Move [X31], X19
	3976 Move [X31+8], X9
	3977 NotImplemented "Instruction BLR not yet implemented."
	3978 Move W26, W0
	3979 Move X0, X22
	3980 Move X1, X31
	3981 Call VisualElement.get_styleAnimation, X0
	3982 Move X25, 0x391000
	3983 Move X25, [X25+864]
	3984 Move X27, X0
	3985 Move X0, X24
	3986 Move X1, [X25]
	3987 Call StyleDataRef`1<VisualData>.Read, X0
	3988 Move X1, [X25]
	3989 Move X28, [X0+72]
	3990 Move X0, X23
	3991 Call StyleDataRef`1<VisualData>.Read, X0
	3992 Compare X27, 0
	3993 JumpIfEqual {5394}
	3994 Move X8, [X27]
	3995 Move X10, 0x349000
	3996 Move X25, [X0+72]
	3997 Move X29, X19
	3998 NotImplemented "Instruction LDRH not yet implemented."
	3999 Move X10, [X10+3792]
	4000 Move X1, [X10]
	4001 Compare X9, 0
	4002 JumpIfEqual {4009}
	4003 Move X10, [X8+176]
	4004 Add X10, X10, 8
	4005 NotImplemented "Instruction LDUR not yet implemented."
	4006 NotImplemented "Instruction CMP not yet implemented."
	4007 Subtract X9, X9, 1
	4008 Add X10, X10, 16
	4009 Move W2, 14
	4010 Move X0, X27
	4011 Call 0x1C5D788
	4012 NotImplemented "Instruction LDRSW not yet implemented."
	4013 Add X8, X8, X9
	4014 Add X0, X8, 312
	4015 Move X8, [X0]
	4016 Move X5, [X0+8]
	4017 Move W2, [X31+44]
	4018 Add W1, W27, 1
	4019 Move X0, X22
	4020 Move V0, V8
	4021 Move V1, V9
	4022 Move W3, W20
	4023 Move X4, X29
	4024 NotImplemented "Instruction BLR not yet implemented."
	4025 Or W0, W25, W0
	4026 Move W9, [X10]
	4027 Move X25, X28
	4028 Add W9, W9, 3
	4029 Add X8, X8, W9
	4030 Add X0, X8, 312
	4031 Move X8, [X0]
	4032 Move X5, [X0+8]
	4033 Move W2, [X31+44]
	4034 Move X4, [X31+32]
	4035 Move W9, 2
	4036 NotImplemented "Instruction MOVK not yet implemented."
	4037 Add W1, W9, 4
	4038 Move X0, X27
	4039 Move V0, V8
	4040 Move V1, V9
	4041 Move V2, V10
	4042 Move V3, V11
	4043 Move V4, V15
	4044 Move V5, V14
	4045 Move V6, V13
	4046 Move V7, V12
	4047 Move W3, W20
	4048 NotImplemented "Instruction BLR not yet implemented."
	4049 Move W28, W0
	4050 Move X0, X22
	4051 Move X1, X31
	4052 Call VisualElement.get_styleAnimation, X0
	4053 Move X1, [X19]
	4054 Move X27, X0
	4055 Move X0, X24
	4056 Call StyleDataRef`1<VisualData>.Read, X0
	4057 Move X1, [X19]
	4058 Move S8, [X0+132]
	4059 Move S9, [X0+136]
	4060 Move S10, [X0+140]
	4061 Move S11, [X0+144]
	4062 Move X0, X23
	4063 Call StyleDataRef`1<VisualData>.Read, X0
	4064 Compare X27, 0
	4065 JumpIfEqual {5394}
	4066 Move X8, [X27]
	4067 Move S13, [X0+140]
	4068 Move S12, [X0+144]
	4069 Move S15, [X0+132]
	4070 Move S14, [X0+136]
	4071 Move X1, [X25]
	4072 NotImplemented "Instruction LDRH not yet implemented."
	4073 Or W10, W29, W26
	4074 Move X29, [X31+32]
	4075 Or W19, W10, W28
	4076 Compare X9, 0
	4077 JumpIfEqual {4084}
	4078 Move X10, [X8+176]
	4079 Add X10, X10, 8
	4080 NotImplemented "Instruction LDUR not yet implemented."
	4081 NotImplemented "Instruction CMP not yet implemented."
	4082 Subtract X9, X9, 1
	4083 Add X10, X10, 16
	4084 Move W2, 3
	4085 Move X0, X27
	4086 Call 0x1C5D788
	4087 Move W9, [X10]
	4088 Add W9, W9, 2
	4089 Add X8, X8, W9
	4090 Add X0, X8, 312
	4091 Move X8, [X0]
	4092 Move X7, [X0+8]
	4093 Move W9, 2
	4094 NotImplemented "Instruction MOVK not yet implemented."
	4095 Add W1, W9, 6
	4096 Move X0, X27
	4097 Move X2, X28
	4098 Move X3, X29
	4099 Move W4, W21
	4100 Move W5, W20
	4101 Move X6, X25
	4102 NotImplemented "Instruction BLR not yet implemented."
	4103 Move W27, W0
	4104 Move X0, X22
	4105 Move X1, X31
	4106 Call VisualElement.get_styleAnimation, X0
	4107 Move X1, [X19]
	4108 Move X22, X0
	4109 Move X0, X24
	4110 Call StyleDataRef`1<VisualData>.Read, X0
	4111 Move X1, [X19]
	4112 NotImplemented "Instruction LDUR not yet implemented."
	4113 Move X0, X23
	4114 Call StyleDataRef`1<VisualData>.Read, X0
	4115 Compare X22, 0
	4116 JumpIfEqual {5394}
	4117 Move X8, [X22]
	4118 Move X10, 0x349000
	4119 NotImplemented "Instruction LDUR not yet implemented."
	4120 NotImplemented "Instruction LDRH not yet implemented."
	4121 Move X10, [X10+3792]
	4122 Move X1, [X10]
	4123 Move W10, [X31+32]
	4124 Or W10, W10, W26
	4125 Or W19, W10, W27
	4126 Compare X9, 0
	4127 JumpIfEqual {4134}
	4128 Move X10, [X8+176]
	4129 Add X10, X10, 8
	4130 NotImplemented "Instruction LDUR not yet implemented."
	4131 NotImplemented "Instruction CMP not yet implemented."
	4132 Subtract X9, X9, 1
	4133 Add X10, X10, 16
	4134 Move W2, 2
	4135 Move X0, X22
	4136 Call 0x1C5D788
	4137 NotImplemented "Instruction LDRSW not yet implemented."
	4138 Add X8, X8, X9
	4139 Add X0, X8, 312
	4140 Move X8, [X0]
	4141 Move X5, [X0+8]
	4142 Move W2, [X31+44]
	4143 Move W1, 3
	4144 NotImplemented "Instruction MOVK not yet implemented."
	4145 Move X0, X27
	4146 Move V0, V8
	4147 Move V1, V9
	4148 Move W3, W20
	4149 Move X4, X29
	4150 NotImplemented "Instruction BLR not yet implemented."
	4151 Move W27, W0
	4152 Move X0, X22
	4153 Move X1, X31
	4154 Call VisualElement.get_styleAnimation, X0
	4155 Move X1, [X19]
	4156 Move X22, X0
	4157 Move X0, X24
	4158 Call StyleDataRef`1<LayoutData>.Read, X0
	4159 Move X1, [X19]
	4160 Move V8, [X0+16]
	4161 Move X0, X23
	4162 Call StyleDataRef`1<LayoutData>.Read, X0
	4163 Compare X22, 0
	4164 JumpIfEqual {5394}
	4165 Move X8, [X22]
	4166 Move V9, [X0+16]
	4167 Move X1, [X28]
	4168 Or W10, W25, W26
	4169 NotImplemented "Instruction LDRH not yet implemented."
	4170 Move W23, 3
	4171 Or W19, W10, W27
	4172 NotImplemented "Instruction MOVK not yet implemented."
	4173 Compare X9, 0
	4174 JumpIfEqual {4181}
	4175 Move X10, [X8+176]
	4176 Add X10, X10, 8
	4177 NotImplemented "Instruction LDUR not yet implemented."
	4178 NotImplemented "Instruction CMP not yet implemented."
	4179 Subtract X9, X9, 1
	4180 Add X10, X10, 16
	4181 Move X0, X22
	4182 Move W2, W31
	4183 Call 0x1C5D788
	4184 Move W9, [X10]
	4185 Add W9, W9, 2
	4186 Add X8, X8, W9
	4187 Add X0, X8, 312
	4188 Move X8, [X0]
	4189 Move X7, [X0+8]
	4190 Add W1, W28, 6
	4191 Move X0, X22
	4192 Move X2, X24
	4193 Move X3, X23
	4194 Move W9, [X10]
	4195 Add W9, W9, 2
	4196 Add X8, X8, W9
	4197 Add X0, X8, 312
	4198 Move X8, [X0]
	4199 Move X7, [X0+8]
	4200 Move W9, 3
	4201 NotImplemented "Instruction MOVK not yet implemented."
	4202 Add W1, W9, 14
	4203 Move X0, X27
	4204 Move X2, X28
	4205 Move X3, X29
	4206 Move W4, W25
	4207 Move W5, W21
	4208 Move X6, X20
	4209 Move X28, X20
	4210 NotImplemented "Instruction BLR not yet implemented."
	4211 Move W27, W0
	4212 Move X0, X22
	4213 Move X1, X31
	4214 Call VisualElement.get_styleAnimation, X0
	4215 Move X1, [X19]
	4216 Move X22, X0
	4217 Move X0, X24
	4218 Call StyleDataRef`1<LayoutData>.Read, X0
	4219 Move X1, [X19]
	4220 NotImplemented "Instruction LDUR not yet implemented."
	4221 Move X0, X23
	4222 Call StyleDataRef`1<LayoutData>.Read, X0
	4223 Compare X22, 0
	4224 JumpIfEqual {5394}
	4225 Move X8, [X22]
	4226 Move X10, 0x349000
	4227 NotImplemented "Instruction LDUR not yet implemented."
	4228 NotImplemented "Instruction LDRH not yet implemented."
	4229 Move X10, [X10+3792]
	4230 Move X1, [X10]
	4231 Move W10, [X31+32]
	4232 Or W10, W10, W26
	4233 Or W19, W10, W27
	4234 Compare X9, 0
	4235 JumpIfEqual {4242}
	4236 Move X10, [X8+176]
	4237 Add X10, X10, 8
	4238 NotImplemented "Instruction LDUR not yet implemented."
	4239 NotImplemented "Instruction CMP not yet implemented."
	4240 Subtract X9, X9, 1
	4241 Add X10, X10, 16
	4242 Move W2, 2
	4243 Move X0, X22
	4244 Call 0x1C5D788
	4245 Move W9, [X10]
	4246 Add W9, W9, 2
	4247 Add X8, X8, W9
	4248 Add X0, X8, 312
	4249 Move X8, [X0]
	4250 Move X7, [X0+8]
	4251 Move W9, 3
	4252 NotImplemented "Instruction MOVK not yet implemented."
	4253 Add W1, W9, 22
	4254 Move X0, X27
	4255 Move X2, X28
	4256 Move X3, X29
	4257 Move W4, W25
	4258 Move W5, W21
	4259 Move X6, X20
	4260 Move X28, X20
	4261 NotImplemented "Instruction BLR not yet implemented."
	4262 Move W27, W0
	4263 Move X0, X22
	4264 Move X1, X31
	4265 Call VisualElement.get_styleAnimation, X0
	4266 Move X1, [X19]
	4267 Move X22, X0
	4268 Move X0, X24
	4269 Call StyleDataRef`1<LayoutData>.Read, X0
	4270 Move X1, [X19]
	4271 NotImplemented "Instruction LDUR not yet implemented."
	4272 Move X0, X23
	4273 Call StyleDataRef`1<LayoutData>.Read, X0
	4274 Compare X22, 0
	4275 JumpIfEqual {5394}
	4276 Move X8, [X22]
	4277 Move X10, 0x349000
	4278 NotImplemented "Instruction LDUR not yet implemented."
	4279 NotImplemented "Instruction LDRH not yet implemented."
	4280 Move X10, [X10+3792]
	4281 Move X1, [X10]
	4282 Move W10, [X31+32]
	4283 Or W10, W10, W26
	4284 Or W19, W10, W27
	4285 Compare X9, 0
	4286 JumpIfEqual {4293}
	4287 Move X10, [X8+176]
	4288 Add X10, X10, 8
	4289 NotImplemented "Instruction LDUR not yet implemented."
	4290 NotImplemented "Instruction CMP not yet implemented."
	4291 Subtract X9, X9, 1
	4292 Add X10, X10, 16
	4293 Move W2, 2
	4294 Move X0, X22
	4295 Call 0x1C5D788
	4296 Move W9, [X10]
	4297 Add W9, W9, 14
	4298 Add X8, X8, W9
	4299 Add X0, X8, 312
	4300 Move X8, [X0]
	4301 Move X7, [X0+8]
	4302 Move W4, [X31+44]
	4303 Move W9, 2
	4304 NotImplemented "Instruction MOVK not yet implemented."
	4305 Add W1, W9, 2
	4306 Move X0, X27
	4307 Move X2, X28
	4308 Move X3, X25
	4309 Move W5, W20
	4310 Move X6, X29
	4311 NotImplemented "Instruction BLR not yet implemented."
	4312 Move W25, W0
	4313 Move X0, X22
	4314 Move X1, X31
	4315 Call VisualElement.get_styleAnimation, X0
	4316 Move X19, 0x391000
	4317 Move X19, [X19+864]
	4318 Move X22, X0
	4319 Move X0, X24
	4320 Move X1, [X19]
	4321 Call StyleDataRef`1<VisualData>.Read, X0
	4322 Move W8, [X0+96]
	4323 Move V0, [X0+5]
	4324 Move X1, [X19]
	4325 Move X0, X23
	4326 Move [X31+544], W8
	4327 Move [X31+33], V0
	4328 Call StyleDataRef`1<VisualData>.Read, X0
	4329 Move W8, [X0+96]
	4330 Move V0, [X0+5]
	4331 Move [X31+512], W8
	4332 Move [X31+31], V0
	4333 Compare X22, 0
	4334 JumpIfEqual {5394}
	4335 Move V0, [X31+33]
	4336 Move W8, [X31+544]
	4337 Move V1, [X31+31]
	4338 Move W9, [X31+512]
	4339 Move [X31+5], V0
	4340 Move [X31+96], W8
	4341 Move [X31+3], V1
	4342 Move [X31+64], W9
	4343 Move X8, [X22]
	4344 Move X10, 0x349000
	4345 NotImplemented "Instruction LDRH not yet implemented."
	4346 Move X10, [X10+3792]
	4347 Move X1, [X10]
	4348 Move W10, [X31+32]
	4349 Or W10, W10, W26
	4350 Or W19, W10, W25
	4351 Compare X9, 0
	4352 JumpIfEqual {4359}
	4353 Move X10, [X8+176]
	4354 Add X10, X10, 8
	4355 NotImplemented "Instruction LDUR not yet implemented."
	4356 NotImplemented "Instruction CMP not yet implemented."
	4357 Subtract X9, X9, 1
	4358 Add X10, X10, 16
	4359 Move W2, 15
	4360 Move X0, X22
	4361 Call 0x1C5D788
	4362 Move W9, [X10]
	4363 Add W9, W9, 3
	4364 Add X8, X8, W9
	4365 Add X0, X8, 312
	4366 Move X8, [X0]
	4367 Move X5, [X0+8]
	4368 Move W2, [X31+44]
	4369 Move W9, 2
	4370 NotImplemented "Instruction MOVK not yet implemented."
	4371 Add W1, W9, 7
	4372 Move X0, X27
	4373 Move V0, V8
	4374 Move V1, V9
	4375 Move V2, V10
	4376 Move V3, V11
	4377 Move V4, V15
	4378 Move V5, V14
	4379 Move V6, V13
	4380 Move V7, V12
	4381 Move W3, W20
	4382 Move X4, X29
	4383 NotImplemented "Instruction BLR not yet implemented."
	4384 Or W8, W19, W0
	4385 Move TEMP, X8
	4386 And TEMP, TEMP, 1
	4387 Compare TEMP, 1
	4388 JumpIfEqual {5250}
	4389 Move W9, [X10]
	4390 Add W9, W9, 2
	4391 Add X8, X8, W9
	4392 Add X0, X8, 312
	4393 Move X8, [X0]
	4394 Move X7, [X0+8]
	4395 Move W9, 2
	4396 NotImplemented "Instruction MOVK not yet implemented."
	4397 Add W1, W9, 5
	4398 Move X0, X22
	4399 Move X2, X24
	4400 Move X3, X23
	4401 Move W4, W21
	4402 Move W5, W20
	4403 Move X6, X25
	4404 NotImplemented "Instruction LDRSW not yet implemented."
	4405 Add X8, X8, X9
	4406 Add X0, X8, 312
	4407 Move X8, [X0]
	4408 Move X5, [X0+8]
	4409 Move W2, [X31+44]
	4410 Add W1, W23, 1
	4411 Move X0, X22
	4412 Move V0, V8
	4413 Move V1, V9
	4414 Move W3, W20
	4415 Move X4, X29
	4416 NotImplemented "Instruction BLR not yet implemented."
	4417 Move W9, [X10]
	4418 Add W9, W9, 2
	4419 Add X8, X8, W9
	4420 Add X0, X8, 312
	4421 Move X8, [X0]
	4422 Move X7, [X0+8]
	4423 Move W9, 3
	4424 NotImplemented "Instruction MOVK not yet implemented."
	4425 Add W1, W9, 15
	4426 Move W9, [X10]
	4427 Add W9, W9, 2
	4428 Add X8, X8, W9
	4429 Add X0, X8, 312
	4430 Move X8, [X0]
	4431 Move X7, [X0+8]
	4432 Move W9, 3
	4433 NotImplemented "Instruction MOVK not yet implemented."
	4434 Add W1, W9, 23
	4435 Move X0, X22
	4436 Move X2, X24
	4437 Move X3, X23
	4438 Move W4, W25
	4439 Move W5, W21
	4440 Move X6, X28
	4441 Move W9, [X10]
	4442 Add W9, W9, 15
	4443 Add X8, X8, W9
	4444 Add X0, X8, 312
	4445 Move V0, [X31+5]
	4446 Move W9, [X31+96]
	4447 Move V1, [X31+3]
	4448 Move W10, [X31+64]
	4449 Move X8, [X0]
	4450 Move [X31+37], V0
	4451 Move [X31+608], W9
	4452 Move [X31+35], V1
	4453 Move [X31+576], W10
	4454 Move X7, [X0+8]
	4455 Move W9, 2
	4456 NotImplemented "Instruction MOVK not yet implemented."
	4457 Add W1, W9, 3
	4458 Add X2, X31, 592
	4459 Add X3, X31, 560
	4460 Move X0, X22
	4461 Move W4, [X31+44]
	4462 Move W5, W20
	4463 Move X6, X29
	4464 NotImplemented "Instruction BLR not yet implemented."
	4465 Or W0, W19, W0
	4466 Move W9, [X10]
	4467 Add W9, W9, 3
	4468 Add X8, X8, W9
	4469 Add X0, X8, 312
	4470 Move X8, [X0]
	4471 Move X5, [X0+8]
	4472 Move W1, 0x70000
	4473 Move W9, [X10]
	4474 Add W9, W9, 5
	4475 Add X8, X8, W9
	4476 Add X0, X8, 312
	4477 Move V0, [X31+464]
	4478 Move V1, [X31+480]
	4479 Move V2, [X31+432]
	4480 Move V3, [X31+448]
	4481 Move X8, [X0]
	4482 Move W9, 2
	4483 Move [X31+592], V0
	4484 Move [X31+600], V1
	4485 Move [X31+560], V2
	4486 Move [X31+568], V3
	4487 Move X7, [X0+8]
	4488 NotImplemented "Instruction MOVK not yet implemented."
	4489 Subtract W1, W9, 1
	4490 Move W9, [X10]
	4491 Add W9, W9, 13
	4492 Add X8, X8, W9
	4493 Add X0, X8, 312
	4494 Move X8, [X0]
	4495 Move X9, [X0+8]
	4496 Move W1, 2
	4497 NotImplemented "Instruction MOVK not yet implemented."
	4498 Move W9, [X10]
	4499 Add W9, W9, 13
	4500 Add X8, X8, W9
	4501 Add X0, X8, 312
	4502 Move X8, [X0]
	4503 Move X9, [X0+8]
	4504 Move W10, 2
	4505 NotImplemented "Instruction MOVK not yet implemented."
	4506 Or W1, W10, 1
	4507 Move [X31+8], X9
	4508 Move X0, X22
	4509 Move X2, X25
	4510 Move X3, X24
	4511 Move [X31], X29
	4512 Move W9, [X10]
	4513 Add W9, W9, 14
	4514 Add X8, X8, W9
	4515 Add X0, X8, 312
	4516 Move X8, [X0]
	4517 Move X7, [X0+8]
	4518 Move W9, 2
	4519 NotImplemented "Instruction MOVK not yet implemented."
	4520 Add W1, W9, 2
	4521 Move W9, [X10]
	4522 Add W9, W9, 15
	4523 Add X8, X8, W9
	4524 Add X0, X8, 312
	4525 Move V0, [X31+25]
	4526 Move W9, [X31+416]
	4527 Move V1, [X31+23]
	4528 Move W10, [X31+384]
	4529 Move X8, [X0]
	4530 Move [X31+37], V0
	4531 Move [X31+608], W9
	4532 Move [X31+35], V1
	4533 Move [X31+576], W10
	4534 Move X7, [X0+8]
	4535 Move W9, 2
	4536 NotImplemented "Instruction MOVK not yet implemented."
	4537 Add W1, W9, 3
	4538 Move W9, [X10]
	4539 Add W9, W9, 3
	4540 Add X8, X8, W9
	4541 Add X0, X8, 312
	4542 Move X8, [X0]
	4543 Move X5, [X0+8]
	4544 Move W9, 2
	4545 NotImplemented "Instruction MOVK not yet implemented."
	4546 Or W1, W9, 4
	4547 Move W9, [X10]
	4548 Add W9, W9, 2
	4549 Add X8, X8, W9
	4550 Add X0, X8, 312
	4551 Move X8, [X0]
	4552 Move X7, [X0+8]
	4553 Move W10, 2
	4554 Move W9, 5
	4555 NotImplemented "Instruction MOVK not yet implemented."
	4556 Move W9, [X10]
	4557 Add W9, W9, 2
	4558 Add X8, X8, W9
	4559 Add X0, X8, 312
	4560 Move X8, [X0]
	4561 Move X7, [X0+8]
	4562 Move W9, 2
	4563 NotImplemented "Instruction MOVK not yet implemented."
	4564 Move W9, [X10]
	4565 Add W9, W9, 3
	4566 Add X8, X8, W9
	4567 Add X0, X8, 312
	4568 Move X8, [X0]
	4569 Move X5, [X0+8]
	4570 Move W9, 2
	4571 NotImplemented "Instruction MOVK not yet implemented."
	4572 Add W1, W9, 7
	4573 Move W9, [X10]
	4574 Add W9, W9, 3
	4575 Add X8, X8, W9
	4576 Add X0, X8, 312
	4577 Move X8, [X0]
	4578 Move X5, [X0+8]
	4579 Move W9, 2
	4580 NotImplemented "Instruction MOVK not yet implemented."
	4581 Or W1, W9, 8
	4582 Move W9, [X10]
	4583 Add W9, W9, 3
	4584 Add X8, X8, W9
	4585 Add X0, X8, 312
	4586 Move X8, [X0]
	4587 Move X5, [X0+8]
	4588 Move W10, 2
	4589 Move W9, 9
	4590 NotImplemented "Instruction MOVK not yet implemented."
	4591 Or W1, W10, W9
	4592 Move W9, [X10]
	4593 Add W9, W9, 2
	4594 Add X8, X8, W9
	4595 Add X0, X8, 312
	4596 Move X8, [X0]
	4597 Move X7, [X0+8]
	4598 Move W9, 2
	4599 NotImplemented "Instruction MOVK not yet implemented."
	4600 Add W1, W9, 10
	4601 Move W9, [X10]
	4602 Add W9, W9, 2
	4603 Add X8, X8, W9
	4604 Add X0, X8, 312
	4605 Move X8, [X0]
	4606 Move X7, [X0+8]
	4607 Move W9, 2
	4608 NotImplemented "Instruction MOVK not yet implemented."
	4609 NotImplemented "Instruction LDRSW not yet implemented."
	4610 Add X8, X8, X9
	4611 Add X0, X8, 312
	4612 Move X6, [X0]
	4613 Move X5, [X0+8]
	4614 Move W8, 2
	4615 NotImplemented "Instruction MOVK not yet implemented."
	4616 Or W1, W8, 12
	4617 Move W9, [X10]
	4618 Add W9, W9, 4
	4619 Add X8, X8, W9
	4620 Add X0, X8, 312
	4621 Move X8, [X0]
	4622 Move X7, [X0+8]
	4623 Move W10, 2
	4624 Move W9, 13
	4625 NotImplemented "Instruction MOVK not yet implemented."
	4626 Or W1, W10, W9
	4627 Move W9, [X10]
	4628 Add W9, W9, 11
	4629 Add X8, X8, W9
	4630 Add X0, X8, 312
	4631 Move V0, [X31+21]
	4632 Move X9, [X31+352]
	4633 Move V1, [X31+19]
	4634 Move X10, [X31+320]
	4635 Move X8, [X0]
	4636 Move [X31+37], V0
	4637 Move [X31+608], X9
	4638 Move [X31+35], V1
	4639 Move [X31+576], X10
	4640 Move X7, [X0+8]
	4641 Add X2, X31, 592
	4642 Add X3, X31, 560
	4643 Move W1, 0x50000
	4644 Move W9, [X10]
	4645 Add W9, W9, 9
	4646 Add X8, X8, W9
	4647 Add X0, X8, 312
	4648 Move X8, [X0]
	4649 Move X9, [X0+8]
	4650 Move W6, [X31+44]
	4651 Or W10, W31, 0x1FFF8
	4652 Add W1, W28, W10
	4653 Move X0, X25
	4654 Move X2, X24
	4655 Move X3, X26
	4656 Move X4, X27
	4657 Move X5, X23
	4658 Move W7, W20
	4659 Move [X31], X29
	4660 Move [X31+8], X9
	4661 NotImplemented "Instruction BLR not yet implemented."
	4662 Move TEMP, X0
	4663 And TEMP, TEMP, 1
	4664 Compare TEMP, 1
	4665 JumpIfNotEqual {5265}
	4666 Move W9, [X10]
	4667 Add W9, W9, 12
	4668 Add X8, X8, W9
	4669 Add X0, X8, 312
	4670 Move V0, [X31+13]
	4671 Move W9, [X31+224]
	4672 Move V1, [X31+11]
	4673 Move W10, [X31+192]
	4674 Move X8, [X0]
	4675 Move [X31+37], V0
	4676 Move [X31+608], W9
	4677 Move [X31+35], V1
	4678 Move [X31+576], W10
	4679 Move X7, [X0+8]
	4680 Move W1, 2
	4681 Add X2, X31, 592
	4682 Add X3, X31, 560
	4683 NotImplemented "Instruction MOVK not yet implemented."
	4684 Move W9, [X10]
	4685 Add W9, W9, 10
	4686 Add X8, X8, W9
	4687 Add X0, X8, 312
	4688 Move V0, [X31+9]
	4689 Move X9, [X31+160]
	4690 Move V1, [X31+7]
	4691 Move X10, [X31+128]
	4692 Move X8, [X0]
	4693 Move [X31+37], V0
	4694 Move [X31+608], X9
	4695 Move [X31+35], V1
	4696 Move [X31+576], X10
	4697 Move X7, [X0+8]
	4698 Move W9, 2
	4699 NotImplemented "Instruction MOVK not yet implemented."
	4700 Or W1, W9, 1
	4701 Add X2, X31, 592
	4702 Add X3, X31, 560
	4703 Move W4, [X31+44]
	4704 Move X0, X25
	4705 Move W5, W20
	4706 Move X6, X29
	4707 NotImplemented "Instruction BLR not yet implemented."
	4708 Move TEMP, X0
	4709 And TEMP, TEMP, 1
	4710 Compare TEMP, 1
	4711 JumpIfNotEqual {5265}
	4712 Move X0, X22
	4713 Move X1, X31
	4714 Call VisualElement.get_usageHints, X0
	4715 Move TEMP, X0
	4716 And TEMP, TEMP, 1
	4717 Compare TEMP, 1
	4718 JumpIfEqual {5264}
	4719 Move X0, X22
	4720 Move X1, X31
	4721 Call VisualElement.get_usageHints, X0
	4722 Or W1, W0, 1
	4723 Move W9, [X10]
	4724 Add W9, W9, 4
	4725 Add X8, X8, W9
	4726 Add X0, X8, 312
	4727 Move X8, [X0]
	4728 Move X7, [X0+8]
	4729 Move W1, 0x20000
	4730 Move W9, [X10]
	4731 Add W9, W9, 3
	4732 Add X8, X8, W9
	4733 Add X0, X8, 312
	4734 Move X8, [X0]
	4735 Move X5, [X0+8]
	4736 Move W1, 0x10000
	4737 Move W9, [X10]
	4738 Add W9, W9, 4
	4739 Add X8, X8, W9
	4740 Add X0, X8, 312
	4741 Move X8, [X0]
	4742 Move X7, [X0+8]
	4743 Subtract W1, W28, 8
	4744 Move W9, [X10]
	4745 Add W9, W9, 4
	4746 Add X8, X8, W9
	4747 Add X0, X8, 312
	4748 Move X8, [X0]
	4749 Move X7, [X0+8]
	4750 Move W10, 9
	4751 Move W9, 0xFFF8
	4752 NotImplemented "Instruction MOVK not yet implemented."
	4753 Add W1, W10, W9
	4754 Move W9, [X10]
	4755 Add W9, W9, 4
	4756 Add X8, X8, W9
	4757 Add X0, X8, 312
	4758 Move X8, [X0]
	4759 Move X7, [X0+8]
	4760 Move W9, 3
	4761 NotImplemented "Instruction MOVK not yet implemented."
	4762 NotImplemented "Instruction LDRSW not yet implemented."
	4763 Add X8, X8, X9
	4764 Add X0, X8, 312
	4765 Move X6, [X0]
	4766 Move X5, [X0+8]
	4767 Move W1, 3
	4768 NotImplemented "Instruction MOVK not yet implemented."
	4769 NotImplemented "Instruction LDRSW not yet implemented."
	4770 Add X8, X8, X9
	4771 Add X0, X8, 312
	4772 Move X6, [X0]
	4773 Move X5, [X0+8]
	4774 Move W8, 3
	4775 NotImplemented "Instruction MOVK not yet implemented."
	4776 NotImplemented "Instruction LDRSW not yet implemented."
	4777 Add X8, X8, X9
	4778 Add X0, X8, 312
	4779 Move X6, [X0]
	4780 Move X5, [X0+8]
	4781 Move W8, 3
	4782 NotImplemented "Instruction MOVK not yet implemented."
	4783 Add W1, W8, 2
	4784 NotImplemented "Instruction LDRSW not yet implemented."
	4785 Add X8, X8, X9
	4786 Add X0, X8, 312
	4787 Move X6, [X0]
	4788 Move X5, [X0+8]
	4789 Move W8, 3
	4790 NotImplemented "Instruction MOVK not yet implemented."
	4791 Add W1, W8, 3
	4792 Move W9, [X10]
	4793 Add W9, W9, 2
	4794 Add X8, X8, W9
	4795 Add X0, X8, 312
	4796 Move X8, [X0]
	4797 Move X7, [X0+8]
	4798 Move W9, 3
	4799 NotImplemented "Instruction MOVK not yet implemented."
	4800 Move W9, [X10]
	4801 Add W9, W9, 4
	4802 Add X8, X8, W9
	4803 Add X0, X8, 312
	4804 Move X8, [X0]
	4805 Move X7, [X0+8]
	4806 Move W9, 3
	4807 NotImplemented "Instruction MOVK not yet implemented."
	4808 Add W1, W9, 5
	4809 Move W9, [X10]
	4810 Add W9, W9, 2
	4811 Add X8, X8, W9
	4812 Add X0, X8, 312
	4813 Move X8, [X0]
	4814 Move X7, [X0+8]
	4815 Move W9, 3
	4816 NotImplemented "Instruction MOVK not yet implemented."
	4817 Add W1, W9, 6
	4818 Move W9, [X10]
	4819 Add W9, W9, 4
	4820 Add X8, X8, W9
	4821 Add X0, X8, 312
	4822 Move X8, [X0]
	4823 Move X7, [X0+8]
	4824 Move W9, 3
	4825 NotImplemented "Instruction MOVK not yet implemented."
	4826 Add W1, W9, 7
	4827 NotImplemented "Instruction LDRSW not yet implemented."
	4828 Add X8, X8, X9
	4829 Add X0, X8, 312
	4830 Move X6, [X0]
	4831 Move X5, [X0+8]
	4832 Move W8, 3
	4833 NotImplemented "Instruction MOVK not yet implemented."
	4834 Or W1, W8, 8
	4835 NotImplemented "Instruction LDRSW not yet implemented."
	4836 Add X8, X8, X9
	4837 Add X0, X8, 312
	4838 Move X6, [X0]
	4839 Move X5, [X0+8]
	4840 Move W8, 3
	4841 NotImplemented "Instruction MOVK not yet implemented."
	4842 Add W1, W8, 9
	4843 Move W9, [X10]
	4844 Add W9, W9, 4
	4845 Add X8, X8, W9
	4846 Add X0, X8, 312
	4847 Move X8, [X0]
	4848 Move X7, [X0+8]
	4849 Move W9, 3
	4850 NotImplemented "Instruction MOVK not yet implemented."
	4851 Add W1, W9, 10
	4852 Move W9, [X10]
	4853 Add W9, W9, 2
	4854 Add X8, X8, W9
	4855 Add X0, X8, 312
	4856 Move X8, [X0]
	4857 Move X7, [X0+8]
	4858 Move W9, 3
	4859 NotImplemented "Instruction MOVK not yet implemented."
	4860 Add W1, W9, 11
	4861 Move W9, [X10]
	4862 Add W9, W9, 4
	4863 Add X8, X8, W9
	4864 Add X0, X8, 312
	4865 Move X8, [X0]
	4866 Move X7, [X0+8]
	4867 Move W9, 3
	4868 NotImplemented "Instruction MOVK not yet implemented."
	4869 Or W1, W9, 12
	4870 Move W9, [X10]
	4871 Add W9, W9, 2
	4872 Add X8, X8, W9
	4873 Add X0, X8, 312
	4874 Move X8, [X0]
	4875 Move X7, [X0+8]
	4876 Move W9, 3
	4877 NotImplemented "Instruction MOVK not yet implemented."
	4878 Add W1, W9, 13
	4879 Move W9, [X10]
	4880 Add W9, W9, 2
	4881 Add X8, X8, W9
	4882 Add X0, X8, 312
	4883 Move X8, [X0]
	4884 Move X7, [X0+8]
	4885 Move W9, 3
	4886 NotImplemented "Instruction MOVK not yet implemented."
	4887 Add W1, W9, 14
	4888 Move W9, [X10]
	4889 Add W9, W9, 2
	4890 Add X8, X8, W9
	4891 Add X0, X8, 312
	4892 Move X8, [X0]
	4893 Move X7, [X0+8]
	4894 Move W9, 3
	4895 NotImplemented "Instruction MOVK not yet implemented."
	4896 Add W1, W9, 15
	4897 Move W9, [X10]
	4898 Add W9, W9, 2
	4899 Add X8, X8, W9
	4900 Add X0, X8, 312
	4901 Move X8, [X0]
	4902 Move X7, [X0+8]
	4903 Move W9, 3
	4904 NotImplemented "Instruction MOVK not yet implemented."
	4905 Or W1, W9, 16
	4906 Move W9, [X10]
	4907 Add W9, W9, 2
	4908 Add X8, X8, W9
	4909 Add X0, X8, 312
	4910 Move X8, [X0]
	4911 Move X7, [X0+8]
	4912 Move W9, 3
	4913 NotImplemented "Instruction MOVK not yet implemented."
	4914 Add W1, W9, 17
	4915 Move W9, [X10]
	4916 Add W9, W9, 2
	4917 Add X8, X8, W9
	4918 Add X0, X8, 312
	4919 Move X8, [X0]
	4920 Move X7, [X0+8]
	4921 Move W9, 3
	4922 NotImplemented "Instruction MOVK not yet implemented."
	4923 Add W1, W9, 18
	4924 Move W9, [X10]
	4925 Add W9, W9, 2
	4926 Add X8, X8, W9
	4927 Add X0, X8, 312
	4928 Move X8, [X0]
	4929 Move X7, [X0+8]
	4930 Move W9, 3
	4931 NotImplemented "Instruction MOVK not yet implemented."
	4932 Add W1, W9, 19
	4933 Move W9, [X10]
	4934 Add W9, W9, 2
	4935 Add X8, X8, W9
	4936 Add X0, X8, 312
	4937 Move X8, [X0]
	4938 Move X7, [X0+8]
	4939 Move W10, 3
	4940 Move W9, 20
	4941 NotImplemented "Instruction MOVK not yet implemented."
	4942 Or W1, W10, W9
	4943 Move W9, [X10]
	4944 Add W9, W9, 2
	4945 Add X8, X8, W9
	4946 Add X0, X8, 312
	4947 Move X8, [X0]
	4948 Move X7, [X0+8]
	4949 Move W9, 3
	4950 NotImplemented "Instruction MOVK not yet implemented."
	4951 Add W1, W9, 21
	4952 Move W9, [X10]
	4953 Add W9, W9, 2
	4954 Add X8, X8, W9
	4955 Add X0, X8, 312
	4956 Move X8, [X0]
	4957 Move X7, [X0+8]
	4958 Move W9, 3
	4959 NotImplemented "Instruction MOVK not yet implemented."
	4960 Add W1, W9, 22
	4961 Move W9, [X10]
	4962 Add W9, W9, 2
	4963 Add X8, X8, W9
	4964 Add X0, X8, 312
	4965 Move X8, [X0]
	4966 Move X7, [X0+8]
	4967 Move W9, 3
	4968 NotImplemented "Instruction MOVK not yet implemented."
	4969 Add W1, W9, 23
	4970 Move W9, [X10]
	4971 Add W9, W9, 2
	4972 Add X8, X8, W9
	4973 Add X0, X8, 312
	4974 Move X8, [X0]
	4975 Move X7, [X0+8]
	4976 Move W9, 3
	4977 NotImplemented "Instruction MOVK not yet implemented."
	4978 Or W1, W9, 24
	4979 Move W9, [X10]
	4980 Add W9, W9, 2
	4981 Add X8, X8, W9
	4982 Add X0, X8, 312
	4983 Move X8, [X0]
	4984 Move X7, [X0+8]
	4985 Move W9, 3
	4986 NotImplemented "Instruction MOVK not yet implemented."
	4987 Add W1, W9, 25
	4988 Move W9, [X10]
	4989 Add W9, W9, 4
	4990 Add X8, X8, W9
	4991 Add X0, X8, 312
	4992 Move X8, [X0]
	4993 Move X7, [X0+8]
	4994 Move W9, 3
	4995 NotImplemented "Instruction MOVK not yet implemented."
	4996 Add W1, W9, 26
	4997 Move W9, [X10]
	4998 Add W9, W9, 2
	4999 Add X8, X8, W9
	5000 Add X0, X8, 312
	5001 Move X8, [X0]
	5002 Move X7, [X0+8]
	5003 Move W9, 3
	5004 NotImplemented "Instruction MOVK not yet implemented."
	5005 Add W1, W9, 27
	5006 Move W9, [X10]
	5007 Add W9, W9, 2
	5008 Add X8, X8, W9
	5009 Add X0, X8, 312
	5010 Move X8, [X0]
	5011 Move X7, [X0+8]
	5012 Move W9, 3
	5013 NotImplemented "Instruction MOVK not yet implemented."
	5014 Or W1, W9, 28
	5015 Move W9, [X10]
	5016 Add W9, W9, 2
	5017 Add X8, X8, W9
	5018 Add X0, X8, 312
	5019 Move X8, [X0]
	5020 Move X7, [X0+8]
	5021 Move W9, 3
	5022 NotImplemented "Instruction MOVK not yet implemented."
	5023 Add W1, W9, 29
	5024 Move W9, [X10]
	5025 Add W9, W9, 2
	5026 Add X8, X8, W9
	5027 Add X0, X8, 312
	5028 Move X8, [X0]
	5029 Move X7, [X0+8]
	5030 Move W9, 9
	5031 NotImplemented "Instruction MOVK not yet implemented."
	5032 Subtract W1, W9, 8
	5033 Move W9, [X10]
	5034 Add W9, W9, 2
	5035 Add X8, X8, W9
	5036 Add X0, X8, 312
	5037 Move X8, [X0]
	5038 Move X7, [X0+8]
	5039 Move W9, 9
	5040 NotImplemented "Instruction MOVK not yet implemented."
	5041 Subtract W1, W9, 7
	5042 Move W9, [X10]
	5043 Add W9, W9, 8
	5044 Add X8, X8, W9
	5045 Add X0, X8, 312
	5046 Move V0, [X31+17]
	5047 NotImplemented "Instruction LDUR not yet implemented."
	5048 Move V2, [X31+15]
	5049 NotImplemented "Instruction LDUR not yet implemented."
	5050 Move X8, [X0]
	5051 Move [X31+37], V0
	5052 Move [X19+108], V1
	5053 Move [X31+35], V2
	5054 Move [X19+76], V3
	5055 Move X7, [X0+8]
	5056 Move W9, 9
	5057 NotImplemented "Instruction MOVK not yet implemented."
	5058 Subtract W1, W9, 6
	5059 Move W4, [X31+44]
	5060 Add X2, X31, 592
	5061 Add X3, X31, 560
	5062 Move X0, X22
	5063 Move W5, W20
	5064 Move X6, X29
	5065 NotImplemented "Instruction BLR not yet implemented."
	5066 Move W9, [X10]
	5067 Add W9, W9, 7
	5068 Add X8, X8, W9
	5069 Add X0, X8, 312
	5070 Move X8, [X0]
	5071 Move X7, [X0+8]
	5072 Move W9, 9
	5073 NotImplemented "Instruction MOVK not yet implemented."
	5074 Subtract W1, W9, 5
	5075 Move W9, [X10]
	5076 Add W9, W9, 6
	5077 Add X8, X8, W9
	5078 Add X0, X8, 312
	5079 Move X8, [X0]
	5080 Move X9, [X0+8]
	5081 Move W10, 9
	5082 NotImplemented "Instruction MOVK not yet implemented."
	5083 Subtract W1, W10, 4
	5084 Move [X31], X29
	5085 Move [X31+8], X9
	5086 Move X0, X22
	5087 Move X2, X24
	5088 Move X3, X25
	5089 Move W6, [X31+44]
	5090 Move X4, X26
	5091 Move X5, X23
	5092 Move W7, W20
	5093 NotImplemented "Instruction BLR not yet implemented."
	5094 Move W9, [X10]
	5095 Add W9, W9, 4
	5096 Add X8, X8, W9
	5097 Add X0, X8, 312
	5098 Move X8, [X0]
	5099 Move X7, [X0+8]
	5100 Move W9, 9
	5101 NotImplemented "Instruction MOVK not yet implemented."
	5102 Subtract W1, W9, 3
	5103 Move W9, [X10]
	5104 Add W9, W9, 2
	5105 Add X8, X8, W9
	5106 Add X0, X8, 312
	5107 Move X8, [X0]
	5108 Move X7, [X0+8]
	5109 Move W9, 9
	5110 NotImplemented "Instruction MOVK not yet implemented."
	5111 Subtract W1, W9, 2
	5112 Move W9, [X10]
	5113 Add W9, W9, 4
	5114 Add X8, X8, W9
	5115 Add X0, X8, 312
	5116 Move X8, [X0]
	5117 Move X7, [X0+8]
	5118 Move W9, 9
	5119 NotImplemented "Instruction MOVK not yet implemented."
	5120 Subtract W1, W9, 1
	5121 Move W9, [X10]
	5122 Add W9, W9, 3
	5123 Add X8, X8, W9
	5124 Add X0, X8, 312
	5125 Move X6, [X0]
	5126 Move X5, [X0+8]
	5127 Move W2, [X31+44]
	5128 Move W1, 9
	5129 NotImplemented "Instruction MOVK not yet implemented."
	5130 Move V0, V8
	5131 Move V1, V9
	5132 Move V2, V10
	5133 Move V3, V11
	5134 Move V4, V15
	5135 Move V5, V14
	5136 Move V6, V13
	5137 Move V7, V12
	5138 Move X0, X22
	5139 Move W3, W20
	5140 Move X4, X29
	5141 Add X31, X31, 624
	5142 Move X20, [X31+144]
	5143 Move X19, [X31+152]
	5144 Move X22, [X31+128]
	5145 Move X21, [X31+136]
	5146 Move X24, [X31+112]
	5147 Move X23, [X31+120]
	5148 Move X26, [X31+96]
	5149 Move X25, [X31+104]
	5150 Move X28, [X31+80]
	5151 Move X27, [X31+88]
	5152 Move X29, [X31+64]
	5153 Move X30, [X31+72]
	5154 Move D9, [X31+48]
	5155 Move D8, [X31+56]
	5156 Move D11, [X31+32]
	5157 Move D10, [X31+40]
	5158 Move D13, [X31+16]
	5159 Move D12, [X31+24]
	5160 Move D15, [X31+160]
	5161 Move D14, [X31+168]
	5162 CallNoReturn X6
	5163 NotImplemented "Instruction LDRSW not yet implemented."
	5164 Add X8, X8, X9
	5165 Add X0, X8, 312
	5166 Move X6, [X0]
	5167 Move X5, [X0+8]
	5168 Move W8, 9
	5169 NotImplemented "Instruction MOVK not yet implemented."
	5170 Add W1, W8, 1
	5171 Move W9, [X10]
	5172 Add W9, W9, 4
	5173 Add X8, X8, W9
	5174 Add X0, X8, 312
	5175 Move X8, [X0]
	5176 Move X7, [X0+8]
	5177 Move W9, 9
	5178 NotImplemented "Instruction MOVK not yet implemented."
	5179 Or W1, W9, 2
	5180 Move W9, [X10]
	5181 Add W9, W9, 4
	5182 Add X8, X8, W9
	5183 Add X0, X8, 312
	5184 Move X8, [X0]
	5185 Move X7, [X0+8]
	5186 Move W9, 9
	5187 NotImplemented "Instruction MOVK not yet implemented."
	5188 Add W1, W9, 3
	5189 Move W9, [X10]
	5190 Add W9, W9, 2
	5191 Add X8, X8, W9
	5192 Add X0, X8, 312
	5193 Move X8, [X0]
	5194 Move X7, [X0+8]
	5195 Move W9, 9
	5196 NotImplemented "Instruction MOVK not yet implemented."
	5197 Or W1, W9, 4
	5198 Move W4, [X31+44]
	5199 Move X0, X22
	5200 Move X2, X24
	5201 Move X3, X23
	5202 Move W5, W20
	5203 Move X6, X29
	5204 Add X31, X31, 624
	5205 Move X20, [X31+144]
	5206 Move X19, [X31+152]
	5207 Move X22, [X31+128]
	5208 Move X21, [X31+136]
	5209 Move X24, [X31+112]
	5210 Move X23, [X31+120]
	5211 Move X26, [X31+96]
	5212 Move X25, [X31+104]
	5213 Move X28, [X31+80]
	5214 Move X27, [X31+88]
	5215 Move X29, [X31+64]
	5216 Move X30, [X31+72]
	5217 Move D9, [X31+48]
	5218 Move D8, [X31+56]
	5219 Move D11, [X31+32]
	5220 Move D10, [X31+40]
	5221 Move D13, [X31+16]
	5222 Move D12, [X31+24]
	5223 Move D15, [X31+160]
	5224 Move D14, [X31+168]
	5225 CallNoReturn X8
	5226 Move W9, [X10]
	5227 Add W9, W9, 3
	5228 Add X8, X8, W9
	5229 Add X0, X8, 312
	5230 Move X8, [X0]
	5231 Move X5, [X0+8]
	5232 Subtract W1, W28, 7
	5233 Move W2, [X31+44]
	5234 Move X0, X25
	5235 Move V0, V8
	5236 Move V1, V9
	5237 Move V2, V10
	5238 Move V3, V11
	5239 Move V4, V15
	5240 Move V5, V14
	5241 Move V6, V13
	5242 Move V7, V12
	5243 Move W3, W20
	5244 Move X4, X29
	5245 NotImplemented "Instruction BLR not yet implemented."
	5246 Move TEMP, X0
	5247 And TEMP, TEMP, 1
	5248 Compare TEMP, 1
	5249 JumpIfNotEqual {5265}
	5250 Move X0, X22
	5251 Move X1, X31
	5252 Call VisualElement.get_usageHints, X0
	5253 Move TEMP, X0
	5254 And TEMP, TEMP, 8
	5255 Compare TEMP, 8
	5256 JumpIfEqual {5264}
	5257 Move X0, X22
	5258 Move X1, X31
	5259 Call VisualElement.get_usageHints, X0
	5260 Or W1, W0, 8
	5261 Move X0, X22
	5262 Move X2, X31
	5263 Call VisualElement.set_usageHints, X0, X1
	5264 Move W0, 1
	5265 Move W0, W31
	5266 And W0, W0, 1
	5267 Add X31, X31, 624
	5268 Move X20, [X31+144]
	5269 Move X19, [X31+152]
	5270 Move X22, [X31+128]
	5271 Move X21, [X31+136]
	5272 Move X24, [X31+112]
	5273 Move X23, [X31+120]
	5274 Move X26, [X31+96]
	5275 Move X25, [X31+104]
	5276 Move X28, [X31+80]
	5277 Move X27, [X31+88]
	5278 Move X29, [X31+64]
	5279 Move X30, [X31+72]
	5280 Move D9, [X31+48]
	5281 Move D8, [X31+56]
	5282 Move D11, [X31+32]
	5283 Move D10, [X31+40]
	5284 Move D13, [X31+16]
	5285 Move D12, [X31+24]
	5286 Move D15, [X31+160]
	5287 Move D14, [X31+168]
	5288 Return X0
	5289 Move W9, [X10]
	5290 Add W9, W9, 4
	5291 Add X8, X8, W9
	5292 Add X0, X8, 312
	5293 Move X8, [X0]
	5294 Move X7, [X0+8]
	5295 Subtract W1, W28, 6
	5296 Move W9, [X10]
	5297 Add W9, W9, 1
	5298 Add X8, X8, W9
	5299 Add X0, X8, 312
	5300 Move X8, [X0]
	5301 Move X7, [X0+8]
	5302 Subtract W1, W28, 5
	5303 Move W9, [X10]
	5304 Add W9, W9, 1
	5305 Add X8, X8, W9
	5306 Add X0, X8, 312
	5307 Move X8, [X0]
	5308 Move X7, [X0+8]
	5309 Subtract W1, W28, 4
	5310 Move W9, [X10]
	5311 Add W9, W9, 1
	5312 Add X8, X8, W9
	5313 Add X0, X8, 312
	5314 Move X8, [X0]
	5315 Move X7, [X0+8]
	5316 Subtract W1, W28, 3
	5317 NotImplemented "Instruction LDRSW not yet implemented."
	5318 Add X8, X8, X9
	5319 Add X0, X8, 312
	5320 Move X6, [X0]
	5321 Move X5, [X0+8]
	5322 Subtract W1, W28, 2
	5323 Move W2, [X31+44]
	5324 Move X0, X22
	5325 Move V0, V8
	5326 Move V1, V9
	5327 Move W3, W20
	5328 Move X4, X29
	5329 Add X31, X31, 624
	5330 Move X20, [X31+144]
	5331 Move X19, [X31+152]
	5332 Move X22, [X31+128]
	5333 Move X21, [X31+136]
	5334 Move X24, [X31+112]
	5335 Move X23, [X31+120]
	5336 Move X26, [X31+96]
	5337 Move X25, [X31+104]
	5338 Move X28, [X31+80]
	5339 Move X27, [X31+88]
	5340 Move X29, [X31+64]
	5341 Move X30, [X31+72]
	5342 Move D9, [X31+48]
	5343 Move D8, [X31+56]
	5344 Move D11, [X31+32]
	5345 Move D10, [X31+40]
	5346 Move D13, [X31+16]
	5347 Move D12, [X31+24]
	5348 Move D15, [X31+160]
	5349 Move D14, [X31+168]
	5350 CallNoReturn X6
	5351 Move W9, [X10]
	5352 Add W9, W9, 1
	5353 Add X8, X8, W9
	5354 Add X0, X8, 312
	5355 Move X8, [X0]
	5356 Move X7, [X0+8]
	5357 Subtract W1, W28, 1
	5358 Move W9, [X10]
	5359 Add W9, W9, 4
	5360 Add X8, X8, W9
	5361 Add X0, X8, 312
	5362 Move X8, [X0]
	5363 Move X7, [X0+8]
	5364 Move W1, 9
	5365 NotImplemented "Instruction MOVK not yet implemented."
	5366 Move W4, [X31+44]
	5367 Move X0, X22
	5368 Move W2, W24
	5369 Move W3, W23
	5370 Move W5, W20
	5371 Move X6, X29
	5372 Add X31, X31, 624
	5373 Move X20, [X31+144]
	5374 Move X19, [X31+152]
	5375 Move X22, [X31+128]
	5376 Move X21, [X31+136]
	5377 Move X24, [X31+112]
	5378 Move X23, [X31+120]
	5379 Move X26, [X31+96]
	5380 Move X25, [X31+104]
	5381 Move X28, [X31+80]
	5382 Move X27, [X31+88]
	5383 Move X29, [X31+64]
	5384 Move X30, [X31+72]
	5385 Move D9, [X31+48]
	5386 Move D8, [X31+56]
	5387 Move D11, [X31+32]
	5388 Move D10, [X31+40]
	5389 Move D13, [X31+16]
	5390 Move D12, [X31+24]
	5391 Move D15, [X31+160]
	5392 Move D14, [X31+168]
	5393 CallNoReturn X8
	5394 Call 0x1C17F20

Method: System.Boolean StartAnimationAllProperty(UnityEngine.UIElements.VisualElement element, ref UnityEngine.UIElements.ComputedStyle oldStyle, ref UnityEngine.UIElements.ComputedStyle newStyle, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DD6BFC B.NE 0x3DD6BE8
	0x03DD6C00 MOV X0, X27
	0x03DD6C04 MOV W2, W31
	0x03DD6C08 BL 0x1C5C788
	0x03DD6C0C B 0x3DD6C1C
	0x03DD6C10 LDRSW X9, [X10]
	0x03DD6C14 ADD X8, X8, X9, 0x4, LSL
	0x03DD6C18 ADD X0, X8, 0x138
	0x03DD6C1C LDP X8, X5, [X0]
	0x03DD6C20 ADD W1, W28, 0x1
	0x03DD6C24 MOV X0, X27
	0x03DD6C28 MOV V0.16B, V9.16B
	0x03DD6C2C MOV V1.16B, V8.16B
	0x03DD6C30 MOV W2, W22
	0x03DD6C34 MOV W3, W21
	0x03DD6C38 MOV X4, X29
	0x03DD6C3C BLR X8
	0x03DD6C40 ORR W20, W20, W0, 0x0
	0x03DD6C44 LDR V0, [X25 + 0x10]
	0x03DD6C48 LDR V1, [X26 + 0x10]
	0x03DD6C4C FCMP S0, S1
	0x03DD6C50 B.EQ 0x3DD6CF0
	0x03DD6C54 CBZ X19, 0x3DD9BF0
	0x03DD6C58 MOV X0, X19
	0x03DD6C5C MOV X1, X31
	0x03DD6C60 BL 0x3DE89D4
	0x03DD6C64 CBZ X0, 0x3DD9BF0
	0x03DD6C68 ADRP X10, 0x347000
	0x03DD6C6C LDR X8, [X0]
	0x03DD6C70 LDR V9, [X25 + 0x10]
	0x03DD6C74 LDR V8, [X26 + 0x10]
	0x03DD6C78 LDR X10, [X10 + 0xED0]
	0x03DD6C7C LDRH W9, [X8 + 0x12E]
	0x03DD6C80 MOV X27, X0
	0x03DD6C84 LDR X1, [X10]
	0x03DD6C88 CBZ X9, 0x3DD6CAC
	0x03DD6C8C LDR X10, [X8 + 0xB0]
	0x03DD6C90 ADD X10, X10, 0x8
	0x03DD6C94 LDUR X11, [X10 - 0x8]
	0x03DD6C98 CMP X11, X1
	0x03DD6C9C B.EQ 0x3DD6CBC
	0x03DD6CA0 SUBS X9, X9, 0x1
	0x03DD6CA4 ADD X10, X10, 0x10
	0x03DD6CA8 B.NE 0x3DD6C94
	0x03DD6CAC MOV X0, X27
	0x03DD6CB0 MOV W2, W31
	0x03DD6CB4 BL 0x1C5C788
	0x03DD6CB8 B 0x3DD6CC8
	0x03DD6CBC LDRSW X9, [X10]
	0x03DD6CC0 ADD X8, X8, X9, 0x4, LSL
	0x03DD6CC4 ADD X0, X8, 0x138
	0x03DD6CC8 LDP X8, X5, [X0]
	0x03DD6CCC ADD W1, W28, 0x2
	0x03DD6CD0 MOV X0, X27
	0x03DD6CD4 MOV V0.16B, V9.16B
	0x03DD6CD8 MOV V1.16B, V8.16B
	0x03DD6CDC MOV W2, W22
	0x03DD6CE0 MOV W3, W21
	0x03DD6CE4 MOV X4, X29
	0x03DD6CE8 BLR X8
	0x03DD6CEC ORR W20, W20, W0, 0x0
	0x03DD6CF0 LDR V0, [X25 + 0x14]
	0x03DD6CF4 LDR V1, [X26 + 0x14]
	0x03DD6CF8 FCMP S0, S1
	0x03DD6CFC B.EQ 0x3DD6D9C
	0x03DD6D00 CBZ X19, 0x3DD9BF0
	0x03DD6D04 MOV X0, X19
	0x03DD6D08 MOV X1, X31
	0x03DD6D0C BL 0x3DE89D4
	0x03DD6D10 CBZ X0, 0x3DD9BF0
	0x03DD6D14 ADRP X10, 0x347000
	0x03DD6D18 LDR X8, [X0]
	0x03DD6D1C LDR V9, [X25 + 0x14]
	0x03DD6D20 LDR V8, [X26 + 0x14]
	0x03DD6D24 LDR X10, [X10 + 0xED0]
	0x03DD6D28 LDRH W9, [X8 + 0x12E]
	0x03DD6D2C MOV X27, X0
	0x03DD6D30 LDR X1, [X10]
	0x03DD6D34 CBZ X9, 0x3DD6D58
	0x03DD6D38 LDR X10, [X8 + 0xB0]
	0x03DD6D3C ADD X10, X10, 0x8
	0x03DD6D40 LDUR X11, [X10 - 0x8]
	0x03DD6D44 CMP X11, X1
	0x03DD6D48 B.EQ 0x3DD6D68
	0x03DD6D4C SUBS X9, X9, 0x1
	0x03DD6D50 ADD X10, X10, 0x10
	0x03DD6D54 B.NE 0x3DD6D40
	0x03DD6D58 MOV X0, X27
	0x03DD6D5C MOV W2, W31
	0x03DD6D60 BL 0x1C5C788
	0x03DD6D64 B 0x3DD6D74
	0x03DD6D68 LDRSW X9, [X10]
	0x03DD6D6C ADD X8, X8, X9, 0x4, LSL
	0x03DD6D70 ADD X0, X8, 0x138
	0x03DD6D74 LDP X8, X5, [X0]
	0x03DD6D78 ADD W1, W28, 0x3
	0x03DD6D7C MOV X0, X27
	0x03DD6D80 MOV V0.16B, V9.16B
	0x03DD6D84 MOV V1.16B, V8.16B
	0x03DD6D88 MOV W2, W22
	0x03DD6D8C MOV W3, W21
	0x03DD6D90 MOV X4, X29
	0x03DD6D94 BLR X8
	0x03DD6D98 ORR W20, W20, W0, 0x0
	0x03DD6D9C LDR V0, [X25 + 0x18]
	0x03DD6DA0 LDR V1, [X26 + 0x18]
	0x03DD6DA4 FCMP S0, S1
	0x03DD6DA8 B.EQ 0x3DD6E48
	0x03DD6DAC CBZ X19, 0x3DD9BF0
	0x03DD6DB0 MOV X0, X19
	0x03DD6DB4 MOV X1, X31
	0x03DD6DB8 BL 0x3DE89D4
	0x03DD6DBC CBZ X0, 0x3DD9BF0
	0x03DD6DC0 ADRP X10, 0x347000
	0x03DD6DC4 LDR X8, [X0]
	0x03DD6DC8 LDR V9, [X25 + 0x18]
	0x03DD6DCC LDR V8, [X26 + 0x18]
	0x03DD6DD0 LDR X10, [X10 + 0xED0]
	0x03DD6DD4 LDRH W9, [X8 + 0x12E]
	0x03DD6DD8 MOV X27, X0
	0x03DD6DDC LDR X1, [X10]
	0x03DD6DE0 CBZ X9, 0x3DD6E04
	0x03DD6DE4 LDR X10, [X8 + 0xB0]
	0x03DD6DE8 ADD X10, X10, 0x8
	0x03DD6DEC LDUR X11, [X10 - 0x8]
	0x03DD6DF0 CMP X11, X1
	0x03DD6DF4 B.EQ 0x3DD6E14
	0x03DD6DF8 SUBS X9, X9, 0x1
	0x03DD6DFC ADD X10, X10, 0x10
	0x03DD6E00 B.NE 0x3DD6DEC
	0x03DD6E04 MOV X0, X27
	0x03DD6E08 MOV W2, W31
	0x03DD6E0C BL 0x1C5C788
	0x03DD6E10 B 0x3DD6E20
	0x03DD6E14 LDRSW X9, [X10]
	0x03DD6E18 ADD X8, X8, X9, 0x4, LSL
	0x03DD6E1C ADD X0, X8, 0x138
	0x03DD6E20 LDP X8, X5, [X0]
	0x03DD6E24 ADD W1, W28, 0x4
	0x03DD6E28 MOV X0, X27
	0x03DD6E2C MOV V0.16B, V9.16B
	0x03DD6E30 MOV V1.16B, V8.16B
	0x03DD6E34 MOV W2, W22
	0x03DD6E38 MOV W3, W21
	0x03DD6E3C MOV X4, X29
	0x03DD6E40 BLR X8
	0x03DD6E44 ORR W20, W20, W0, 0x0
	0x03DD6E48 LDUR X0, [X25 + 0x1C]
	0x03DD6E4C LDUR X1, [X26 + 0x1C]
	0x03DD6E50 MOV X2, X31
	0x03DD6E54 BL 0x3DFD53C
	0x03DD6E58 TBZ X0, 0x0, 0x3DD6EFC
	0x03DD6E5C CBZ X19, 0x3DD9BF0
	0x03DD6E60 MOV X0, X19
	0x03DD6E64 MOV X1, X31
	0x03DD6E68 BL 0x3DE89D4
	0x03DD6E6C CBZ X0, 0x3DD9BF0
	0x03DD6E70 ADRP X10, 0x347000
	0x03DD6E74 LDR X8, [X0]
	0x03DD6E78 LDUR X24, [X25 + 0x1C]
	0x03DD6E7C LDUR X23, [X26 + 0x1C]
	0x03DD6E80 LDR X10, [X10 + 0xED0]
	0x03DD6E84 LDRH W9, [X8 + 0x12E]
	0x03DD6E88 MOV X27, X0
	0x03DD6E8C LDR X1, [X10]
	0x03DD6E90 CBZ X9, 0x3DD6EB4
	0x03DD6E94 LDR X10, [X8 + 0xB0]
	0x03DD6E98 ADD X10, X10, 0x8
	0x03DD6E9C LDUR X11, [X10 - 0x8]
	0x03DD6EA0 CMP X11, X1
	0x03DD6EA4 B.EQ 0x3DD6EC4
	0x03DD6EA8 SUBS X9, X9, 0x1
	0x03DD6EAC ADD X10, X10, 0x10
	0x03DD6EB0 B.NE 0x3DD6E9C
	0x03DD6EB4 MOVZ W2, 0x2
	0x03DD6EB8 MOV X0, X27
	0x03DD6EBC BL 0x1C5C788
	0x03DD6EC0 B 0x3DD6ED4
	0x03DD6EC4 LDR W9, [X10]
	0x03DD6EC8 ADD W9, W9, 0x2
	0x03DD6ECC ADD X8, X8, W9, 0x4, SXTW
	0x03DD6ED0 ADD X0, X8, 0x138
	0x03DD6ED4 LDP X8, X7, [X0]
	0x03DD6ED8 ADD W1, W28, 0x5
	0x03DD6EDC MOV X0, X27
	0x03DD6EE0 MOV X2, X24
	0x03DD6EE4 MOV X3, X23
	0x03DD6EE8 MOV W4, W22
	0x03DD6EEC MOV W5, W21
	0x03DD6EF0 MOV X6, X29
	0x03DD6EF4 BLR X8
	0x03DD6EF8 ORR W20, W20, W0, 0x0
	0x03DD6EFC LDR W8, [X25 + 0x24]
	0x03DD6F00 LDR W9, [X26 + 0x24]
	0x03DD6F04 CMP W8, W9
	0x03DD6F08 B.EQ 0x3DD6FAC
	0x03DD6F0C CBZ X19, 0x3DD9BF0
	0x03DD6F10 MOV X0, X19
	0x03DD6F14 MOV X1, X31
	0x03DD6F18 BL 0x3DE89D4
	0x03DD6F1C CBZ X0, 0x3DD9BF0
	0x03DD6F20 ADRP X10, 0x347000
	0x03DD6F24 LDR X8, [X0]
	0x03DD6F28 LDR W24, [X25 + 0x24]
	0x03DD6F2C LDR W23, [X26 + 0x24]
	0x03DD6F30 LDR X10, [X10 + 0xED0]
	0x03DD6F34 LDRH W9, [X8 + 0x12E]
	0x03DD6F38 MOV X27, X0
	0x03DD6F3C LDR X1, [X10]
	0x03DD6F40 CBZ X9, 0x3DD6F64
	0x03DD6F44 LDR X10, [X8 + 0xB0]
	0x03DD6F48 ADD X10, X10, 0x8
	0x03DD6F4C LDUR X11, [X10 - 0x8]
	0x03DD6F50 CMP X11, X1
	0x03DD6F54 B.EQ 0x3DD6F74
	0x03DD6F58 SUBS X9, X9, 0x1
	0x03DD6F5C ADD X10, X10, 0x10
	0x03DD6F60 B.NE 0x3DD6F4C
	0x03DD6F64 MOVZ W2, 0x4
	0x03DD6F68 MOV X0, X27
	0x03DD6F6C BL 0x1C5C788
	0x03DD6F70 B 0x3DD6F84
	0x03DD6F74 LDR W9, [X10]
	0x03DD6F78 ADD W9, W9, 0x4
	0x03DD6F7C ADD X8, X8, W9, 0x4, SXTW
	0x03DD6F80 ADD X0, X8, 0x138
	0x03DD6F84 LDP X8, X7, [X0]
	0x03DD6F88 ADD W1, W28, 0x6
	0x03DD6F8C MOV X0, X27
	0x03DD6F90 MOV W2, W24
	0x03DD6F94 MOV W3, W23
	0x03DD6F98 MOV W4, W22
	0x03DD6F9C MOV W5, W21
	0x03DD6FA0 MOV X6, X29
	0x03DD6FA4 BLR X8
	0x03DD6FA8 ORR W20, W20, W0, 0x0
	0x03DD6FAC LDR X0, [X25 + 0x28]
	0x03DD6FB0 LDR X1, [X26 + 0x28]
	0x03DD6FB4 MOV X2, X31
	0x03DD6FB8 BL 0x3DFD53C
	0x03DD6FBC TBZ X0, 0x0, 0x3DD7060
	0x03DD6FC0 CBZ X19, 0x3DD9BF0
	0x03DD6FC4 MOV X0, X19
	0x03DD6FC8 MOV X1, X31
	0x03DD6FCC BL 0x3DE89D4
	0x03DD6FD0 CBZ X0, 0x3DD9BF0
	0x03DD6FD4 ADRP X10, 0x347000
	0x03DD6FD8 LDR X8, [X0]
	0x03DD6FDC LDR X24, [X25 + 0x28]
	0x03DD6FE0 LDR X23, [X26 + 0x28]
	0x03DD6FE4 LDR X10, [X10 + 0xED0]
	0x03DD6FE8 LDRH W9, [X8 + 0x12E]
	0x03DD6FEC MOV X27, X0
	0x03DD6FF0 LDR X1, [X10]
	0x03DD6FF4 CBZ X9, 0x3DD7018
	0x03DD6FF8 LDR X10, [X8 + 0xB0]
	0x03DD6FFC ADD X10, X10, 0x8
	0x03DD7000 LDUR X11, [X10 - 0x8]
	0x03DD7004 CMP X11, X1
	0x03DD7008 B.EQ 0x3DD7028
	0x03DD700C SUBS X9, X9, 0x1
	0x03DD7010 ADD X10, X10, 0x10
	0x03DD7014 B.NE 0x3DD7000
	0x03DD7018 MOVZ W2, 0x2
	0x03DD701C MOV X0, X27
	0x03DD7020 BL 0x1C5C788
	0x03DD7024 B 0x3DD7038
	0x03DD7028 LDR W9, [X10]
	0x03DD702C ADD W9, W9, 0x2
	0x03DD7030 ADD X8, X8, W9, 0x4, SXTW
	0x03DD7034 ADD X0, X8, 0x138
	0x03DD7038 LDP X8, X7, [X0]
	0x03DD703C ADD W1, W28, 0x7
	0x03DD7040 MOV X0, X27
	0x03DD7044 MOV X2, X24
	0x03DD7048 MOV X3, X23
	0x03DD704C MOV W4, W22
	0x03DD7050 MOV W5, W21
	0x03DD7054 MOV X6, X29
	0x03DD7058 BLR X8
	0x03DD705C ORR W20, W20, W0, 0x0
	0x03DD7060 LDR W8, [X25 + 0x30]
	0x03DD7064 LDR W9, [X26 + 0x30]
	0x03DD7068 CMP W8, W9
	0x03DD706C B.EQ 0x3DD7110
	0x03DD7070 CBZ X19, 0x3DD9BF0
	0x03DD7074 MOV X0, X19
	0x03DD7078 MOV X1, X31
	0x03DD707C BL 0x3DE89D4
	0x03DD7080 CBZ X0, 0x3DD9BF0
	0x03DD7084 ADRP X10, 0x346000
	0x03DD7088 LDR X8, [X0]
	0x03DD708C LDR W24, [X25 + 0x30]
	0x03DD7090 LDR W23, [X26 + 0x30]
	0x03DD7094 LDR X10, [X10 + 0xED0]
	0x03DD7098 LDRH W9, [X8 + 0x12E]
	0x03DD709C MOV X27, X0
	0x03DD70A0 LDR X1, [X10]
	0x03DD70A4 CBZ X9, 0x3DD70C8
	0x03DD70A8 LDR X10, [X8 + 0xB0]
	0x03DD70AC ADD X10, X10, 0x8
	0x03DD70B0 LDUR X11, [X10 - 0x8]
	0x03DD70B4 CMP X11, X1
	0x03DD70B8 B.EQ 0x3DD70D8
	0x03DD70BC SUBS X9, X9, 0x1
	0x03DD70C0 ADD X10, X10, 0x10
	0x03DD70C4 B.NE 0x3DD70B0
	0x03DD70C8 MOVZ W2, 0x4
	0x03DD70CC MOV X0, X27
	0x03DD70D0 BL 0x1C5C788
	0x03DD70D4 B 0x3DD70E8
	0x03DD70D8 LDR W9, [X10]
	0x03DD70DC ADD W9, W9, 0x4
	0x03DD70E0 ADD X8, X8, W9, 0x4, SXTW
	0x03DD70E4 ADD X0, X8, 0x138
	0x03DD70E8 LDP X8, X7, [X0]
	0x03DD70EC ADD W1, W28, 0x8
	0x03DD70F0 MOV X0, X27
	0x03DD70F4 MOV W2, W24
	0x03DD70F8 MOV W3, W23
	0x03DD70FC MOV W4, W22
	0x03DD7100 MOV W5, W21
	0x03DD7104 MOV X6, X29
	0x03DD7108 BLR X8
	0x03DD710C ORR W20, W20, W0, 0x0
	0x03DD7110 LDR V0, [X25 + 0x34]
	0x03DD7114 LDR V1, [X26 + 0x34]
	0x03DD7118 FCMP S0, S1
	0x03DD711C B.EQ 0x3DD71BC
	0x03DD7120 CBZ X19, 0x3DD9BF0
	0x03DD7124 MOV X0, X19
	0x03DD7128 MOV X1, X31
	0x03DD712C BL 0x3DE89D4
	0x03DD7130 CBZ X0, 0x3DD9BF0
	0x03DD7134 ADRP X10, 0x346000
	0x03DD7138 LDR X8, [X0]
	0x03DD713C LDR V9, [X25 + 0x34]
	0x03DD7140 LDR V8, [X26 + 0x34]
	0x03DD7144 LDR X10, [X10 + 0xED0]
	0x03DD7148 LDRH W9, [X8 + 0x12E]
	0x03DD714C MOV X27, X0
	0x03DD7150 LDR X1, [X10]
	0x03DD7154 CBZ X9, 0x3DD7178
	0x03DD7158 LDR X10, [X8 + 0xB0]
	0x03DD715C ADD X10, X10, 0x8
	0x03DD7160 LDUR X11, [X10 - 0x8]
	0x03DD7164 CMP X11, X1
	0x03DD7168 B.EQ 0x3DD7188
	0x03DD716C SUBS X9, X9, 0x1
	0x03DD7170 ADD X10, X10, 0x10
	0x03DD7174 B.NE 0x3DD7160
	0x03DD7178 MOV X0, X27
	0x03DD717C MOV W2, W31
	0x03DD7180 BL 0x1C5C788
	0x03DD7184 B 0x3DD7194
	0x03DD7188 LDRSW X9, [X10]
	0x03DD718C ADD X8, X8, X9, 0x4, LSL
	0x03DD7190 ADD X0, X8, 0x138
	0x03DD7194 LDP X8, X5, [X0]
	0x03DD7198 ADD W1, W28, 0x9
	0x03DD719C MOV X0, X27
	0x03DD71A0 MOV V0.16B, V9.16B
	0x03DD71A4 MOV V1.16B, V8.16B
	0x03DD71A8 MOV W2, W22
	0x03DD71AC MOV W3, W21
	0x03DD71B0 MOV X4, X29
	0x03DD71B4 BLR X8
	0x03DD71B8 ORR W20, W20, W0, 0x0
	0x03DD71BC LDR V0, [X25 + 0x38]
	0x03DD71C0 LDR V1, [X26 + 0x38]
	0x03DD71C4 FCMP S0, S1
	0x03DD71C8 B.EQ 0x3DD7268
	0x03DD71CC CBZ X19, 0x3DD9BF0
	0x03DD71D0 MOV X0, X19
	0x03DD71D4 MOV X1, X31
	0x03DD71D8 BL 0x3DE89D4
	0x03DD71DC CBZ X0, 0x3DD9BF0
	0x03DD71E0 ADRP X10, 0x346000
	0x03DD71E4 LDR X8, [X0]
	0x03DD71E8 LDR V9, [X25 + 0x38]
	0x03DD71EC LDR V8, [X26 + 0x38]
	0x03DD71F0 LDR X10, [X10 + 0xED0]
	0x03DD71F4 LDRH W9, [X8 + 0x12E]
	0x03DD71F8 MOV X27, X0
	0x03DD71FC LDR X1, [X10]
	0x03DD7200 CBZ X9, 0x3DD7224
	0x03DD7204 LDR X10, [X8 + 0xB0]
	0x03DD7208 ADD X10, X10, 0x8
	0x03DD720C LDUR X11, [X10 - 0x8]
	0x03DD7210 CMP X11, X1
	0x03DD7214 B.EQ 0x3DD7234
	0x03DD7218 SUBS X9, X9, 0x1
	0x03DD721C ADD X10, X10, 0x10
	0x03DD7220 B.NE 0x3DD720C
	0x03DD7224 MOV X0, X27
	0x03DD7228 MOV W2, W31
	0x03DD722C BL 0x1C5C788
	0x03DD7230 B 0x3DD7240
	0x03DD7234 LDRSW X9, [X10]
	0x03DD7238 ADD X8, X8, X9, 0x4, LSL
	0x03DD723C ADD X0, X8, 0x138
	0x03DD7240 LDP X8, X5, [X0]
	0x03DD7244 ADD W1, W28, 0xA
	0x03DD7248 MOV X0, X27
	0x03DD724C MOV V0.16B, V9.16B
	0x03DD7250 MOV V1.16B, V8.16B
	0x03DD7254 MOV W2, W22
	0x03DD7258 MOV W3, W21
	0x03DD725C MOV X4, X29
	0x03DD7260 BLR X8
	0x03DD7264 ORR W20, W20, W0, 0x0
	0x03DD7268 LDR W8, [X25 + 0x3C]
	0x03DD726C LDR W9, [X26 + 0x3C]
	0x03DD7270 CMP W8, W9
	0x03DD7274 B.EQ 0x3DD7318
	0x03DD7278 CBZ X19, 0x3DD9BF0
	0x03DD727C MOV X0, X19
	0x03DD7280 MOV X1, X31
	0x03DD7284 BL 0x3DE89D4
	0x03DD7288 CBZ X0, 0x3DD9BF0
	0x03DD728C ADRP X10, 0x346000
	0x03DD7290 LDR X8, [X0]
	0x03DD7294 LDR W24, [X25 + 0x3C]
	0x03DD7298 LDR W23, [X26 + 0x3C]
	0x03DD729C LDR X10, [X10 + 0xED0]
	0x03DD72A0 LDRH W9, [X8 + 0x12E]
	0x03DD72A4 MOV X27, X0
	0x03DD72A8 LDR X1, [X10]
	0x03DD72AC CBZ X9, 0x3DD72D0
	0x03DD72B0 LDR X10, [X8 + 0xB0]
	0x03DD72B4 ADD X10, X10, 0x8
	0x03DD72B8 LDUR X11, [X10 - 0x8]
	0x03DD72BC CMP X11, X1
	0x03DD72C0 B.EQ 0x3DD72E0
	0x03DD72C4 SUBS X9, X9, 0x1
	0x03DD72C8 ADD X10, X10, 0x10
	0x03DD72CC B.NE 0x3DD72B8
	0x03DD72D0 MOVZ W2, 0x4
	0x03DD72D4 MOV X0, X27
	0x03DD72D8 BL 0x1C5C788
	0x03DD72DC B 0x3DD72F0
	0x03DD72E0 LDR W9, [X10]
	0x03DD72E4 ADD W9, W9, 0x4
	0x03DD72E8 ADD X8, X8, W9, 0x4, SXTW
	0x03DD72EC ADD X0, X8, 0x138
	0x03DD72F0 LDP X8, X7, [X0]
	0x03DD72F4 ADD W1, W28, 0xB
	0x03DD72F8 MOV X0, X27
	0x03DD72FC MOV W2, W24
	0x03DD7300 MOV W3, W23
	0x03DD7304 MOV W4, W22
	0x03DD7308 MOV W5, W21
	0x03DD730C MOV X6, X29
	0x03DD7310 BLR X8
	0x03DD7314 ORR W20, W20, W0, 0x0
	0x03DD7318 LDR X0, [X25 + 0x40]
	0x03DD731C LDR X1, [X26 + 0x40]
	0x03DD7320 MOV X2, X31
	0x03DD7324 BL 0x3DFD53C
	0x03DD7328 TBZ X0, 0x0, 0x3DD73CC
	0x03DD732C CBZ X19, 0x3DD9BF0
	0x03DD7330 MOV X0, X19
	0x03DD7334 MOV X1, X31
	0x03DD7338 BL 0x3DE89D4
	0x03DD733C CBZ X0, 0x3DD9BF0
	0x03DD7340 ADRP X10, 0x346000
	0x03DD7344 LDR X8, [X0]
	0x03DD7348 LDR X24, [X25 + 0x40]
	0x03DD734C LDR X23, [X26 + 0x40]
	0x03DD7350 LDR X10, [X10 + 0xED0]
	0x03DD7354 LDRH W9, [X8 + 0x12E]
	0x03DD7358 MOV X27, X0
	0x03DD735C LDR X1, [X10]
	0x03DD7360 CBZ X9, 0x3DD7384
	0x03DD7364 LDR X10, [X8 + 0xB0]
	0x03DD7368 ADD X10, X10, 0x8
	0x03DD736C LDUR X11, [X10 - 0x8]
	0x03DD7370 CMP X11, X1
	0x03DD7374 B.EQ 0x3DD7394
	0x03DD7378 SUBS X9, X9, 0x1
	0x03DD737C ADD X10, X10, 0x10
	0x03DD7380 B.NE 0x3DD736C
	0x03DD7384 MOVZ W2, 0x2
	0x03DD7388 MOV X0, X27
	0x03DD738C BL 0x1C5C788
	0x03DD7390 B 0x3DD73A4
	0x03DD7394 LDR W9, [X10]
	0x03DD7398 ADD W9, W9, 0x2
	0x03DD739C ADD X8, X8, W9, 0x4, SXTW
	0x03DD73A0 ADD X0, X8, 0x138
	0x03DD73A4 LDP X8, X7, [X0]
	0x03DD73A8 ADD W1, W28, 0xC
	0x03DD73AC MOV X0, X27
	0x03DD73B0 MOV X2, X24
	0x03DD73B4 MOV X3, X23
	0x03DD73B8 MOV W4, W22
	0x03DD73BC MOV W5, W21
	0x03DD73C0 MOV X6, X29
	0x03DD73C4 BLR X8
	0x03DD73C8 ORR W20, W20, W0, 0x0
	0x03DD73CC LDR W8, [X25 + 0x48]
	0x03DD73D0 LDR W9, [X26 + 0x48]
	0x03DD73D4 CMP W8, W9
	0x03DD73D8 B.EQ 0x3DD747C
	0x03DD73DC CBZ X19, 0x3DD9BF0
	0x03DD73E0 MOV X0, X19
	0x03DD73E4 MOV X1, X31
	0x03DD73E8 BL 0x3DE89D4
	0x03DD73EC CBZ X0, 0x3DD9BF0
	0x03DD73F0 ADRP X10, 0x346000
	0x03DD73F4 LDR X8, [X0]
	0x03DD73F8 LDR W24, [X25 + 0x48]
	0x03DD73FC LDR W23, [X26 + 0x48]
	0x03DD7400 LDR X10, [X10 + 0xED0]
	0x03DD7404 LDRH W9, [X8 + 0x12E]
	0x03DD7408 MOV X27, X0
	0x03DD740C LDR X1, [X10]
	0x03DD7410 CBZ X9, 0x3DD7434
	0x03DD7414 LDR X10, [X8 + 0xB0]
	0x03DD7418 ADD X10, X10, 0x8
	0x03DD741C LDUR X11, [X10 - 0x8]
	0x03DD7420 CMP X11, X1
	0x03DD7424 B.EQ 0x3DD7444
	0x03DD7428 SUBS X9, X9, 0x1
	0x03DD742C ADD X10, X10, 0x10
	0x03DD7430 B.NE 0x3DD741C
	0x03DD7434 MOVZ W2, 0x4
	0x03DD7438 MOV X0, X27
	0x03DD743C BL 0x1C5C788
	0x03DD7440 B 0x3DD7454
	0x03DD7444 LDR W9, [X10]
	0x03DD7448 ADD W9, W9, 0x4
	0x03DD744C ADD X8, X8, W9, 0x4, SXTW
	0x03DD7450 ADD X0, X8, 0x138
	0x03DD7454 LDP X8, X7, [X0]
	0x03DD7458 ADD W1, W28, 0xD
	0x03DD745C MOV X0, X27
	0x03DD7460 MOV W2, W24
	0x03DD7464 MOV W3, W23
	0x03DD7468 MOV W4, W22
	0x03DD746C MOV W5, W21
	0x03DD7470 MOV X6, X29
	0x03DD7474 BLR X8
	0x03DD7478 ORR W20, W20, W0, 0x0
	0x03DD747C LDUR X0, [X25 + 0x4C]
	0x03DD7480 LDUR X1, [X26 + 0x4C]
	0x03DD7484 MOV X2, X31
	0x03DD7488 BL 0x3DFD53C
	0x03DD748C TBZ X0, 0x0, 0x3DD7530
	0x03DD7490 CBZ X19, 0x3DD9BF0
	0x03DD7494 MOV X0, X19
	0x03DD7498 MOV X1, X31
	0x03DD749C BL 0x3DE89D4
	0x03DD74A0 CBZ X0, 0x3DD9BF0
	0x03DD74A4 ADRP X10, 0x346000
	0x03DD74A8 LDR X8, [X0]
	0x03DD74AC LDUR X24, [X25 + 0x4C]
	0x03DD74B0 LDUR X23, [X26 + 0x4C]
	0x03DD74B4 LDR X10, [X10 + 0xED0]
	0x03DD74B8 LDRH W9, [X8 + 0x12E]
	0x03DD74BC MOV X27, X0
	0x03DD74C0 LDR X1, [X10]
	0x03DD74C4 CBZ X9, 0x3DD74E8
	0x03DD74C8 LDR X10, [X8 + 0xB0]
	0x03DD74CC ADD X10, X10, 0x8
	0x03DD74D0 LDUR X11, [X10 - 0x8]
	0x03DD74D4 CMP X11, X1
	0x03DD74D8 B.EQ 0x3DD74F8
	0x03DD74DC SUBS X9, X9, 0x1
	0x03DD74E0 ADD X10, X10, 0x10
	0x03DD74E4 B.NE 0x3DD74D0
	0x03DD74E8 MOVZ W2, 0x2
	0x03DD74EC MOV X0, X27
	0x03DD74F0 BL 0x1C5C788
	0x03DD74F4 B 0x3DD7508
	0x03DD74F8 LDR W9, [X10]
	0x03DD74FC ADD W9, W9, 0x2
	0x03DD7500 ADD X8, X8, W9, 0x4, SXTW
	0x03DD7504 ADD X0, X8, 0x138
	0x03DD7508 LDP X8, X7, [X0]
	0x03DD750C ADD W1, W28, 0xE
	0x03DD7510 MOV X0, X27
	0x03DD7514 MOV X2, X24
	0x03DD7518 MOV X3, X23
	0x03DD751C MOV W4, W22
	0x03DD7520 MOV W5, W21
	0x03DD7524 MOV X6, X29
	0x03DD7528 BLR X8
	0x03DD752C ORR W20, W20, W0, 0x0
	0x03DD7530 LDUR X0, [X25 + 0x54]
	0x03DD7534 LDUR X1, [X26 + 0x54]
	0x03DD7538 MOV X2, X31
	0x03DD753C BL 0x3DFD53C
	0x03DD7540 TBZ X0, 0x0, 0x3DD75E4
	0x03DD7544 CBZ X19, 0x3DD9BF0
	0x03DD7548 MOV X0, X19
	0x03DD754C MOV X1, X31
	0x03DD7550 BL 0x3DE89D4
	0x03DD7554 CBZ X0, 0x3DD9BF0
	0x03DD7558 ADRP X10, 0x346000
	0x03DD755C LDR X8, [X0]
	0x03DD7560 LDUR X24, [X25 + 0x54]
	0x03DD7564 LDUR X23, [X26 + 0x54]
	0x03DD7568 LDR X10, [X10 + 0xED0]
	0x03DD756C LDRH W9, [X8 + 0x12E]
	0x03DD7570 MOV X27, X0
	0x03DD7574 LDR X1, [X10]
	0x03DD7578 CBZ X9, 0x3DD759C
	0x03DD757C LDR X10, [X8 + 0xB0]
	0x03DD7580 ADD X10, X10, 0x8
	0x03DD7584 LDUR X11, [X10 - 0x8]
	0x03DD7588 CMP X11, X1
	0x03DD758C B.EQ 0x3DD75AC
	0x03DD7590 SUBS X9, X9, 0x1
	0x03DD7594 ADD X10, X10, 0x10
	0x03DD7598 B.NE 0x3DD7584
	0x03DD759C MOVZ W2, 0x2
	0x03DD75A0 MOV X0, X27
	0x03DD75A4 BL 0x1C5C788
	0x03DD75A8 B 0x3DD75BC
	0x03DD75AC LDR W9, [X10]
	0x03DD75B0 ADD W9, W9, 0x2
	0x03DD75B4 ADD X8, X8, W9, 0x4, SXTW
	0x03DD75B8 ADD X0, X8, 0x138
	0x03DD75BC LDP X8, X7, [X0]
	0x03DD75C0 ADD W1, W28, 0xF
	0x03DD75C4 MOV X0, X27
	0x03DD75C8 MOV X2, X24
	0x03DD75CC MOV X3, X23
	0x03DD75D0 MOV W4, W22
	0x03DD75D4 MOV W5, W21
	0x03DD75D8 MOV X6, X29
	0x03DD75DC BLR X8
	0x03DD75E0 ORR W20, W20, W0, 0x0
	0x03DD75E4 LDUR X0, [X25 + 0x5C]
	0x03DD75E8 LDUR X1, [X26 + 0x5C]
	0x03DD75EC MOV X2, X31
	0x03DD75F0 BL 0x3DFD53C
	0x03DD75F4 TBZ X0, 0x0, 0x3DD7698
	0x03DD75F8 CBZ X19, 0x3DD9BF0
	0x03DD75FC MOV X0, X19
	0x03DD7600 MOV X1, X31
	0x03DD7604 BL 0x3DE89D4
	0x03DD7608 CBZ X0, 0x3DD9BF0
	0x03DD760C ADRP X10, 0x346000
	0x03DD7610 LDR X8, [X0]
	0x03DD7614 LDUR X24, [X25 + 0x5C]
	0x03DD7618 LDUR X23, [X26 + 0x5C]
	0x03DD761C LDR X10, [X10 + 0xED0]
	0x03DD7620 LDRH W9, [X8 + 0x12E]
	0x03DD7624 MOV X27, X0
	0x03DD7628 LDR X1, [X10]
	0x03DD762C CBZ X9, 0x3DD7650
	0x03DD7630 LDR X10, [X8 + 0xB0]
	0x03DD7634 ADD X10, X10, 0x8
	0x03DD7638 LDUR X11, [X10 - 0x8]
	0x03DD763C CMP X11, X1
	0x03DD7640 B.EQ 0x3DD7660
	0x03DD7644 SUBS X9, X9, 0x1
	0x03DD7648 ADD X10, X10, 0x10
	0x03DD764C B.NE 0x3DD7638
	0x03DD7650 MOVZ W2, 0x2
	0x03DD7654 MOV X0, X27
	0x03DD7658 BL 0x1C5C788
	0x03DD765C B 0x3DD7670
	0x03DD7660 LDR W9, [X10]
	0x03DD7664 ADD W9, W9, 0x2
	0x03DD7668 ADD X8, X8, W9, 0x4, SXTW
	0x03DD766C ADD X0, X8, 0x138
	0x03DD7670 LDP X8, X7, [X0]
	0x03DD7674 ADD W1, W28, 0x10
	0x03DD7678 MOV X0, X27
	0x03DD767C MOV X2, X24
	0x03DD7680 MOV X3, X23
	0x03DD7684 MOV W4, W22
	0x03DD7688 MOV W5, W21
	0x03DD768C MOV X6, X29
	0x03DD7690 BLR X8
	0x03DD7694 ORR W20, W20, W0, 0x0
	0x03DD7698 LDUR X0, [X25 + 0x64]
	0x03DD769C LDUR X1, [X26 + 0x64]
	0x03DD76A0 MOV X2, X31
	0x03DD76A4 BL 0x3DFD53C
	0x03DD76A8 TBZ X0, 0x0, 0x3DD774C
	0x03DD76AC CBZ X19, 0x3DD9BF0
	0x03DD76B0 MOV X0, X19
	0x03DD76B4 MOV X1, X31
	0x03DD76B8 BL 0x3DE89D4
	0x03DD76BC CBZ X0, 0x3DD9BF0
	0x03DD76C0 ADRP X10, 0x346000
	0x03DD76C4 LDR X8, [X0]
	0x03DD76C8 LDUR X24, [X25 + 0x64]
	0x03DD76CC LDUR X23, [X26 + 0x64]
	0x03DD76D0 LDR X10, [X10 + 0xED0]
	0x03DD76D4 LDRH W9, [X8 + 0x12E]
	0x03DD76D8 MOV X27, X0
	0x03DD76DC LDR X1, [X10]
	0x03DD76E0 CBZ X9, 0x3DD7704
	0x03DD76E4 LDR X10, [X8 + 0xB0]
	0x03DD76E8 ADD X10, X10, 0x8
	0x03DD76EC LDUR X11, [X10 - 0x8]
	0x03DD76F0 CMP X11, X1
	0x03DD76F4 B.EQ 0x3DD7714
	0x03DD76F8 SUBS X9, X9, 0x1
	0x03DD76FC ADD X10, X10, 0x10
	0x03DD7700 B.NE 0x3DD76EC
	0x03DD7704 MOVZ W2, 0x2
	0x03DD7708 MOV X0, X27
	0x03DD770C BL 0x1C5C788
	0x03DD7710 B 0x3DD7724
	0x03DD7714 LDR W9, [X10]
	0x03DD7718 ADD W9, W9, 0x2
	0x03DD771C ADD X8, X8, W9, 0x4, SXTW
	0x03DD7720 ADD X0, X8, 0x138
	0x03DD7724 LDP X8, X7, [X0]
	0x03DD7728 ADD W1, W28, 0x11
	0x03DD772C MOV X0, X27
	0x03DD7730 MOV X2, X24
	0x03DD7734 MOV X3, X23
	0x03DD7738 MOV W4, W22
	0x03DD773C MOV W5, W21
	0x03DD7740 MOV X6, X29
	0x03DD7744 BLR X8
	0x03DD7748 ORR W20, W20, W0, 0x0
	0x03DD774C LDUR X0, [X25 + 0x6C]
	0x03DD7750 LDUR X1, [X26 + 0x6C]
	0x03DD7754 MOV X2, X31
	0x03DD7758 BL 0x3DFD53C
	0x03DD775C TBZ X0, 0x0, 0x3DD7800
	0x03DD7760 CBZ X19, 0x3DD9BF0
	0x03DD7764 MOV X0, X19
	0x03DD7768 MOV X1, X31
	0x03DD776C BL 0x3DE89D4
	0x03DD7770 CBZ X0, 0x3DD9BF0
	0x03DD7774 ADRP X10, 0x346000
	0x03DD7778 LDR X8, [X0]
	0x03DD777C LDUR X24, [X25 + 0x6C]
	0x03DD7780 LDUR X23, [X26 + 0x6C]
	0x03DD7784 LDR X10, [X10 + 0xED0]
	0x03DD7788 LDRH W9, [X8 + 0x12E]
	0x03DD778C MOV X27, X0
	0x03DD7790 LDR X1, [X10]
	0x03DD7794 CBZ X9, 0x3DD77B8
	0x03DD7798 LDR X10, [X8 + 0xB0]
	0x03DD779C ADD X10, X10, 0x8
	0x03DD77A0 LDUR X11, [X10 - 0x8]
	0x03DD77A4 CMP X11, X1
	0x03DD77A8 B.EQ 0x3DD77C8
	0x03DD77AC SUBS X9, X9, 0x1
	0x03DD77B0 ADD X10, X10, 0x10
	0x03DD77B4 B.NE 0x3DD77A0
	0x03DD77B8 MOVZ W2, 0x2
	0x03DD77BC MOV X0, X27
	0x03DD77C0 BL 0x1C5C788
	0x03DD77C4 B 0x3DD77D8
	0x03DD77C8 LDR W9, [X10]
	0x03DD77CC ADD W9, W9, 0x2
	0x03DD77D0 ADD X8, X8, W9, 0x4, SXTW
	0x03DD77D4 ADD X0, X8, 0x138
	0x03DD77D8 LDP X8, X7, [X0]
	0x03DD77DC ADD W1, W28, 0x12
	0x03DD77E0 MOV X0, X27
	0x03DD77E4 MOV X2, X24
	0x03DD77E8 MOV X3, X23
	0x03DD77EC MOV W4, W22
	0x03DD77F0 MOV W5, W21
	0x03DD77F4 MOV X6, X29
	0x03DD77F8 BLR X8
	0x03DD77FC ORR W20, W20, W0, 0x0
	0x03DD7800 LDUR X0, [X25 + 0x74]
	0x03DD7804 LDUR X1, [X26 + 0x74]
	0x03DD7808 MOV X2, X31
	0x03DD780C BL 0x3DFD53C
	0x03DD7810 TBZ X0, 0x0, 0x3DD78B4
	0x03DD7814 CBZ X19, 0x3DD9BF0
	0x03DD7818 MOV X0, X19
	0x03DD781C MOV X1, X31
	0x03DD7820 BL 0x3DE89D4
	0x03DD7824 CBZ X0, 0x3DD9BF0
	0x03DD7828 ADRP X10, 0x346000
	0x03DD782C LDR X8, [X0]
	0x03DD7830 LDUR X24, [X25 + 0x74]
	0x03DD7834 LDUR X23, [X26 + 0x74]
	0x03DD7838 LDR X10, [X10 + 0xED0]
	0x03DD783C LDRH W9, [X8 + 0x12E]
	0x03DD7840 MOV X27, X0
	0x03DD7844 LDR X1, [X10]
	0x03DD7848 CBZ X9, 0x3DD786C
	0x03DD784C LDR X10, [X8 + 0xB0]
	0x03DD7850 ADD X10, X10, 0x8
	0x03DD7854 LDUR X11, [X10 - 0x8]
	0x03DD7858 CMP X11, X1
	0x03DD785C B.EQ 0x3DD787C
	0x03DD7860 SUBS X9, X9, 0x1
	0x03DD7864 ADD X10, X10, 0x10
	0x03DD7868 B.NE 0x3DD7854
	0x03DD786C MOVZ W2, 0x2
	0x03DD7870 MOV X0, X27
	0x03DD7874 BL 0x1C5C788
	0x03DD7878 B 0x3DD788C
	0x03DD787C LDR W9, [X10]
	0x03DD7880 ADD W9, W9, 0x2
	0x03DD7884 ADD X8, X8, W9, 0x4, SXTW
	0x03DD7888 ADD X0, X8, 0x138
	0x03DD788C LDP X8, X7, [X0]
	0x03DD7890 ADD W1, W28, 0x13
	0x03DD7894 MOV X0, X27
	0x03DD7898 MOV X2, X24
	0x03DD789C MOV X3, X23
	0x03DD78A0 MOV W4, W22
	0x03DD78A4 MOV W5, W21
	0x03DD78A8 MOV X6, X29
	0x03DD78AC BLR X8
	0x03DD78B0 ORR W20, W20, W0, 0x0
	0x03DD78B4 LDUR X0, [X25 + 0x7C]
	0x03DD78B8 LDUR X1, [X26 + 0x7C]
	0x03DD78BC MOV X2, X31
	0x03DD78C0 BL 0x3DFD53C
	0x03DD78C4 TBZ X0, 0x0, 0x3DD7968
	0x03DD78C8 CBZ X19, 0x3DD9BF0
	0x03DD78CC MOV X0, X19
	0x03DD78D0 MOV X1, X31
	0x03DD78D4 BL 0x3DE89D4
	0x03DD78D8 CBZ X0, 0x3DD9BF0
	0x03DD78DC ADRP X10, 0x346000
	0x03DD78E0 LDR X8, [X0]
	0x03DD78E4 LDUR X24, [X25 + 0x7C]
	0x03DD78E8 LDUR X23, [X26 + 0x7C]
	0x03DD78EC LDR X10, [X10 + 0xED0]
	0x03DD78F0 LDRH W9, [X8 + 0x12E]
	0x03DD78F4 MOV X27, X0
	0x03DD78F8 LDR X1, [X10]
	0x03DD78FC CBZ X9, 0x3DD7920
	0x03DD7900 LDR X10, [X8 + 0xB0]
	0x03DD7904 ADD X10, X10, 0x8
	0x03DD7908 LDUR X11, [X10 - 0x8]
	0x03DD790C CMP X11, X1
	0x03DD7910 B.EQ 0x3DD7930
	0x03DD7914 SUBS X9, X9, 0x1
	0x03DD7918 ADD X10, X10, 0x10
	0x03DD791C B.NE 0x3DD7908
	0x03DD7920 MOVZ W2, 0x2
	0x03DD7924 MOV X0, X27
	0x03DD7928 BL 0x1C5C788
	0x03DD792C B 0x3DD7940
	0x03DD7930 LDR W9, [X10]
	0x03DD7934 ADD W9, W9, 0x2
	0x03DD7938 ADD X8, X8, W9, 0x4, SXTW
	0x03DD793C ADD X0, X8, 0x138
	0x03DD7940 LDP X8, X7, [X0]
	0x03DD7944 ADD W1, W28, 0x14
	0x03DD7948 MOV X0, X27
	0x03DD794C MOV X2, X24
	0x03DD7950 MOV X3, X23
	0x03DD7954 MOV W4, W22
	0x03DD7958 MOV W5, W21
	0x03DD795C MOV X6, X29
	0x03DD7960 BLR X8
	0x03DD7964 ORR W20, W20, W0, 0x0
	0x03DD7968 LDUR X0, [X25 + 0x84]
	0x03DD796C LDUR X1, [X26 + 0x84]
	0x03DD7970 MOV X2, X31
	0x03DD7974 BL 0x3DFD53C
	0x03DD7978 TBZ X0, 0x0, 0x3DD7A1C
	0x03DD797C CBZ X19, 0x3DD9BF0
	0x03DD7980 MOV X0, X19
	0x03DD7984 MOV X1, X31
	0x03DD7988 BL 0x3DE89D4
	0x03DD798C CBZ X0, 0x3DD9BF0
	0x03DD7990 ADRP X10, 0x346000
	0x03DD7994 LDR X8, [X0]
	0x03DD7998 LDUR X24, [X25 + 0x84]
	0x03DD799C LDUR X23, [X26 + 0x84]
	0x03DD79A0 LDR X10, [X10 + 0xED0]
	0x03DD79A4 LDRH W9, [X8 + 0x12E]
	0x03DD79A8 MOV X27, X0
	0x03DD79AC LDR X1, [X10]
	0x03DD79B0 CBZ X9, 0x3DD79D4
	0x03DD79B4 LDR X10, [X8 + 0xB0]
	0x03DD79B8 ADD X10, X10, 0x8
	0x03DD79BC LDUR X11, [X10 - 0x8]
	0x03DD79C0 CMP X11, X1
	0x03DD79C4 B.EQ 0x3DD79E4
	0x03DD79C8 SUBS X9, X9, 0x1
	0x03DD79CC ADD X10, X10, 0x10
	0x03DD79D0 B.NE 0x3DD79BC
	0x03DD79D4 MOVZ W2, 0x2
	0x03DD79D8 MOV X0, X27
	0x03DD79DC BL 0x1C5C788
	0x03DD79E0 B 0x3DD79F4
	0x03DD79E4 LDR W9, [X10]
	0x03DD79E8 ADD W9, W9, 0x2
	0x03DD79EC ADD X8, X8, W9, 0x4, SXTW
	0x03DD79F0 ADD X0, X8, 0x138
	0x03DD79F4 LDP X8, X7, [X0]
	0x03DD79F8 ADD W1, W28, 0x15
	0x03DD79FC MOV X0, X27
	0x03DD7A00 MOV X2, X24
	0x03DD7A04 MOV X3, X23
	0x03DD7A08 MOV W4, W22
	0x03DD7A0C MOV W5, W21
	0x03DD7A10 MOV X6, X29
	0x03DD7A14 BLR X8
	0x03DD7A18 ORR W20, W20, W0, 0x0
	0x03DD7A1C LDUR X0, [X25 + 0x8C]
	0x03DD7A20 LDUR X1, [X26 + 0x8C]
	0x03DD7A24 MOV X2, X31
	0x03DD7A28 BL 0x3DFD53C
	0x03DD7A2C TBZ X0, 0x0, 0x3DD7AD0
	0x03DD7A30 CBZ X19, 0x3DD9BF0
	0x03DD7A34 MOV X0, X19
	0x03DD7A38 MOV X1, X31
	0x03DD7A3C BL 0x3DE89D4
	0x03DD7A40 CBZ X0, 0x3DD9BF0
	0x03DD7A44 ADRP X10, 0x346000
	0x03DD7A48 LDR X8, [X0]
	0x03DD7A4C LDUR X24, [X25 + 0x8C]
	0x03DD7A50 LDUR X23, [X26 + 0x8C]
	0x03DD7A54 LDR X10, [X10 + 0xED0]
	0x03DD7A58 LDRH W9, [X8 + 0x12E]
	0x03DD7A5C MOV X27, X0
	0x03DD7A60 LDR X1, [X10]
	0x03DD7A64 CBZ X9, 0x3DD7A88
	0x03DD7A68 LDR X10, [X8 + 0xB0]
	0x03DD7A6C ADD X10, X10, 0x8
	0x03DD7A70 LDUR X11, [X10 - 0x8]
	0x03DD7A74 CMP X11, X1
	0x03DD7A78 B.EQ 0x3DD7A98
	0x03DD7A7C SUBS X9, X9, 0x1
	0x03DD7A80 ADD X10, X10, 0x10
	0x03DD7A84 B.NE 0x3DD7A70
	0x03DD7A88 MOVZ W2, 0x2
	0x03DD7A8C MOV X0, X27
	0x03DD7A90 BL 0x1C5C788
	0x03DD7A94 B 0x3DD7AA8
	0x03DD7A98 LDR W9, [X10]
	0x03DD7A9C ADD W9, W9, 0x2
	0x03DD7AA0 ADD X8, X8, W9, 0x4, SXTW
	0x03DD7AA4 ADD X0, X8, 0x138
	0x03DD7AA8 LDP X8, X7, [X0]
	0x03DD7AAC ADD W1, W28, 0x16
	0x03DD7AB0 MOV X0, X27
	0x03DD7AB4 MOV X2, X24
	0x03DD7AB8 MOV X3, X23
	0x03DD7ABC MOV W4, W22
	0x03DD7AC0 MOV W5, W21
	0x03DD7AC4 MOV X6, X29
	0x03DD7AC8 BLR X8
	0x03DD7ACC ORR W20, W20, W0, 0x0
	0x03DD7AD0 LDUR X0, [X25 + 0x94]
	0x03DD7AD4 LDUR X1, [X26 + 0x94]
	0x03DD7AD8 MOV X2, X31
	0x03DD7ADC BL 0x3DFD53C
	0x03DD7AE0 TBZ X0, 0x0, 0x3DD7B84
	0x03DD7AE4 CBZ X19, 0x3DD9BF0
	0x03DD7AE8 MOV X0, X19
	0x03DD7AEC MOV X1, X31
	0x03DD7AF0 BL 0x3DE89D4
	0x03DD7AF4 CBZ X0, 0x3DD9BF0
	0x03DD7AF8 ADRP X10, 0x346000
	0x03DD7AFC LDR X8, [X0]
	0x03DD7B00 LDUR X24, [X25 + 0x94]
	0x03DD7B04 LDUR X23, [X26 + 0x94]
	0x03DD7B08 LDR X10, [X10 + 0xED0]
	0x03DD7B0C LDRH W9, [X8 + 0x12E]
	0x03DD7B10 MOV X27, X0
	0x03DD7B14 LDR X1, [X10]
	0x03DD7B18 CBZ X9, 0x3DD7B3C
	0x03DD7B1C LDR X10, [X8 + 0xB0]
	0x03DD7B20 ADD X10, X10, 0x8
	0x03DD7B24 LDUR X11, [X10 - 0x8]
	0x03DD7B28 CMP X11, X1
	0x03DD7B2C B.EQ 0x3DD7B4C
	0x03DD7B30 SUBS X9, X9, 0x1
	0x03DD7B34 ADD X10, X10, 0x10
	0x03DD7B38 B.NE 0x3DD7B24
	0x03DD7B3C MOVZ W2, 0x2
	0x03DD7B40 MOV X0, X27
	0x03DD7B44 BL 0x1C5C788
	0x03DD7B48 B 0x3DD7B5C
	0x03DD7B4C LDR W9, [X10]
	0x03DD7B50 ADD W9, W9, 0x2
	0x03DD7B54 ADD X8, X8, W9, 0x4, SXTW
	0x03DD7B58 ADD X0, X8, 0x138
	0x03DD7B5C LDP X8, X7, [X0]
	0x03DD7B60 ADD W1, W28, 0x17
	0x03DD7B64 MOV X0, X27
	0x03DD7B68 MOV X2, X24
	0x03DD7B6C MOV X3, X23
	0x03DD7B70 MOV W4, W22
	0x03DD7B74 MOV W5, W21
	0x03DD7B78 MOV X6, X29
	0x03DD7B7C BLR X8
	0x03DD7B80 ORR W20, W20, W0, 0x0
	0x03DD7B84 LDUR X0, [X25 + 0x9C]
	0x03DD7B88 LDUR X1, [X26 + 0x9C]
	0x03DD7B8C MOV X2, X31
	0x03DD7B90 BL 0x3DFD53C
	0x03DD7B94 TBZ X0, 0x0, 0x3DD7C38
	0x03DD7B98 CBZ X19, 0x3DD9BF0
	0x03DD7B9C MOV X0, X19
	0x03DD7BA0 MOV X1, X31
	0x03DD7BA4 BL 0x3DE89D4
	0x03DD7BA8 CBZ X0, 0x3DD9BF0
	0x03DD7BAC ADRP X10, 0x346000
	0x03DD7BB0 LDR X8, [X0]
	0x03DD7BB4 LDUR X24, [X25 + 0x9C]
	0x03DD7BB8 LDUR X23, [X26 + 0x9C]
	0x03DD7BBC LDR X10, [X10 + 0xED0]
	0x03DD7BC0 LDRH W9, [X8 + 0x12E]
	0x03DD7BC4 MOV X27, X0
	0x03DD7BC8 LDR X1, [X10]
	0x03DD7BCC CBZ X9, 0x3DD7BF0
	0x03DD7BD0 LDR X10, [X8 + 0xB0]
	0x03DD7BD4 ADD X10, X10, 0x8
	0x03DD7BD8 LDUR X11, [X10 - 0x8]
	0x03DD7BDC CMP X11, X1
	0x03DD7BE0 B.EQ 0x3DD7C00
	0x03DD7BE4 SUBS X9, X9, 0x1
	0x03DD7BE8 ADD X10, X10, 0x10
	0x03DD7BEC B.NE 0x3DD7BD8
	0x03DD7BF0 MOVZ W2, 0x2
	0x03DD7BF4 MOV X0, X27
	0x03DD7BF8 BL 0x1C5C788
	0x03DD7BFC B 0x3DD7C10
	0x03DD7C00 LDR W9, [X10]
	0x03DD7C04 ADD W9, W9, 0x2
	0x03DD7C08 ADD X8, X8, W9, 0x4, SXTW
	0x03DD7C0C ADD X0, X8, 0x138
	0x03DD7C10 LDP X8, X7, [X0]
	0x03DD7C14 ADD W1, W28, 0x18
	0x03DD7C18 MOV X0, X27
	0x03DD7C1C MOV X2, X24
	0x03DD7C20 MOV X3, X23
	0x03DD7C24 MOV W4, W22
	0x03DD7C28 MOV W5, W21
	0x03DD7C2C MOV X6, X29
	0x03DD7C30 BLR X8
	0x03DD7C34 ORR W20, W20, W0, 0x0
	0x03DD7C38 LDUR X0, [X25 + 0xA4]
	0x03DD7C3C LDUR X1, [X26 + 0xA4]
	0x03DD7C40 MOV X2, X31
	0x03DD7C44 BL 0x3DFD53C
	0x03DD7C48 TBZ X0, 0x0, 0x3DD7CEC
	0x03DD7C4C CBZ X19, 0x3DD9BF0
	0x03DD7C50 MOV X0, X19
	0x03DD7C54 MOV X1, X31
	0x03DD7C58 BL 0x3DE89D4
	0x03DD7C5C CBZ X0, 0x3DD9BF0
	0x03DD7C60 ADRP X10, 0x346000
	0x03DD7C64 LDR X8, [X0]
	0x03DD7C68 LDUR X24, [X25 + 0xA4]
	0x03DD7C6C LDUR X23, [X26 + 0xA4]
	0x03DD7C70 LDR X10, [X10 + 0xED0]
	0x03DD7C74 LDRH W9, [X8 + 0x12E]
	0x03DD7C78 MOV X27, X0
	0x03DD7C7C LDR X1, [X10]
	0x03DD7C80 CBZ X9, 0x3DD7CA4
	0x03DD7C84 LDR X10, [X8 + 0xB0]
	0x03DD7C88 ADD X10, X10, 0x8
	0x03DD7C8C LDUR X11, [X10 - 0x8]
	0x03DD7C90 CMP X11, X1
	0x03DD7C94 B.EQ 0x3DD7CB4
	0x03DD7C98 SUBS X9, X9, 0x1
	0x03DD7C9C ADD X10, X10, 0x10
	0x03DD7CA0 B.NE 0x3DD7C8C
	0x03DD7CA4 MOVZ W2, 0x2
	0x03DD7CA8 MOV X0, X27
	0x03DD7CAC BL 0x1C5C788
	0x03DD7CB0 B 0x3DD7CC4
	0x03DD7CB4 LDR W9, [X10]
	0x03DD7CB8 ADD W9, W9, 0x2
	0x03DD7CBC ADD X8, X8, W9, 0x4, SXTW
	0x03DD7CC0 ADD X0, X8, 0x138
	0x03DD7CC4 LDP X8, X7, [X0]
	0x03DD7CC8 ADD W1, W28, 0x19
	0x03DD7CCC MOV X0, X27
	0x03DD7CD0 MOV X2, X24
	0x03DD7CD4 MOV X3, X23
	0x03DD7CD8 MOV W4, W22
	0x03DD7CDC MOV W5, W21
	0x03DD7CE0 MOV X6, X29
	0x03DD7CE4 BLR X8
	0x03DD7CE8 ORR W20, W20, W0, 0x0
	0x03DD7CEC LDUR X0, [X25 + 0xAC]
	0x03DD7CF0 LDUR X1, [X26 + 0xAC]
	0x03DD7CF4 MOV X2, X31
	0x03DD7CF8 BL 0x3DFD53C
	0x03DD7CFC TBZ X0, 0x0, 0x3DD7DA0
	0x03DD7D00 CBZ X19, 0x3DD9BF0
	0x03DD7D04 MOV X0, X19
	0x03DD7D08 MOV X1, X31
	0x03DD7D0C BL 0x3DE89D4
	0x03DD7D10 CBZ X0, 0x3DD9BF0
	0x03DD7D14 ADRP X10, 0x346000
	0x03DD7D18 LDR X8, [X0]
	0x03DD7D1C LDUR X24, [X25 + 0xAC]
	0x03DD7D20 LDUR X23, [X26 + 0xAC]
	0x03DD7D24 LDR X10, [X10 + 0xED0]
	0x03DD7D28 LDRH W9, [X8 + 0x12E]
	0x03DD7D2C MOV X27, X0
	0x03DD7D30 LDR X1, [X10]
	0x03DD7D34 CBZ X9, 0x3DD7D58
	0x03DD7D38 LDR X10, [X8 + 0xB0]
	0x03DD7D3C ADD X10, X10, 0x8
	0x03DD7D40 LDUR X11, [X10 - 0x8]
	0x03DD7D44 CMP X11, X1
	0x03DD7D48 B.EQ 0x3DD7D68
	0x03DD7D4C SUBS X9, X9, 0x1
	0x03DD7D50 ADD X10, X10, 0x10
	0x03DD7D54 B.NE 0x3DD7D40
	0x03DD7D58 MOVZ W2, 0x2
	0x03DD7D5C MOV X0, X27
	0x03DD7D60 BL 0x1C5C788
	0x03DD7D64 B 0x3DD7D78
	0x03DD7D68 LDR W9, [X10]
	0x03DD7D6C ADD W9, W9, 0x2
	0x03DD7D70 ADD X8, X8, W9, 0x4, SXTW
	0x03DD7D74 ADD X0, X8, 0x138
	0x03DD7D78 LDP X8, X7, [X0]
	0x03DD7D7C ADD W1, W28, 0x1A
	0x03DD7D80 MOV X0, X27
	0x03DD7D84 MOV X2, X24
	0x03DD7D88 MOV X3, X23
	0x03DD7D8C MOV W4, W22
	0x03DD7D90 MOV W5, W21
	0x03DD7D94 MOV X6, X29
	0x03DD7D98 BLR X8
	0x03DD7D9C ORR W20, W20, W0, 0x0
	0x03DD7DA0 LDR W8, [X25 + 0xB4]
	0x03DD7DA4 LDR W9, [X26 + 0xB4]
	0x03DD7DA8 CMP W8, W9
	0x03DD7DAC B.EQ 0x3DD7E50
	0x03DD7DB0 CBZ X19, 0x3DD9BF0
	0x03DD7DB4 MOV X0, X19
	0x03DD7DB8 MOV X1, X31
	0x03DD7DBC BL 0x3DE89D4
	0x03DD7DC0 CBZ X0, 0x3DD9BF0
	0x03DD7DC4 ADRP X10, 0x346000
	0x03DD7DC8 LDR X8, [X0]
	0x03DD7DCC LDR W24, [X25 + 0xB4]
	0x03DD7DD0 LDR W23, [X26 + 0xB4]
	0x03DD7DD4 LDR X10, [X10 + 0xED0]
	0x03DD7DD8 LDRH W9, [X8 + 0x12E]
	0x03DD7DDC MOV X27, X0
	0x03DD7DE0 LDR X1, [X10]
	0x03DD7DE4 CBZ X9, 0x3DD7E08
	0x03DD7DE8 LDR X10, [X8 + 0xB0]
	0x03DD7DEC ADD X10, X10, 0x8
	0x03DD7DF0 LDUR X11, [X10 - 0x8]
	0x03DD7DF4 CMP X11, X1
	0x03DD7DF8 B.EQ 0x3DD7E18
	0x03DD7DFC SUBS X9, X9, 0x1
	0x03DD7E00 ADD X10, X10, 0x10
	0x03DD7E04 B.NE 0x3DD7DF0
	0x03DD7E08 MOVZ W2, 0x4
	0x03DD7E0C MOV X0, X27
	0x03DD7E10 BL 0x1C5C788
	0x03DD7E14 B 0x3DD7E28
	0x03DD7E18 LDR W9, [X10]
	0x03DD7E1C ADD W9, W9, 0x4
	0x03DD7E20 ADD X8, X8, W9, 0x4, SXTW
	0x03DD7E24 ADD X0, X8, 0x138
	0x03DD7E28 LDP X8, X7, [X0]
	0x03DD7E2C ADD W1, W28, 0x1B
	0x03DD7E30 MOV X0, X27
	0x03DD7E34 MOV W2, W24
	0x03DD7E38 MOV W3, W23
	0x03DD7E3C MOV W4, W22
	0x03DD7E40 MOV W5, W21
	0x03DD7E44 MOV X6, X29
	0x03DD7E48 BLR X8
	0x03DD7E4C ORR W20, W20, W0, 0x0
	0x03DD7E50 LDR X0, [X25 + 0xB8]
	0x03DD7E54 LDR X1, [X26 + 0xB8]
	0x03DD7E58 MOV X2, X31
	0x03DD7E5C BL 0x3DFD53C
	0x03DD7E60 TBZ X0, 0x0, 0x3DD7F04
	0x03DD7E64 CBZ X19, 0x3DD9BF0
	0x03DD7E68 MOV X0, X19
	0x03DD7E6C MOV X1, X31
	0x03DD7E70 BL 0x3DE89D4
	0x03DD7E74 CBZ X0, 0x3DD9BF0
	0x03DD7E78 ADRP X10, 0x346000
	0x03DD7E7C LDR X8, [X0]
	0x03DD7E80 LDR X24, [X25 + 0xB8]
	0x03DD7E84 LDR X23, [X26 + 0xB8]
	0x03DD7E88 LDR X10, [X10 + 0xED0]
	0x03DD7E8C LDRH W9, [X8 + 0x12E]
	0x03DD7E90 MOV X27, X0
	0x03DD7E94 LDR X1, [X10]
	0x03DD7E98 CBZ X9, 0x3DD7EBC
	0x03DD7E9C LDR X10, [X8 + 0xB0]
	0x03DD7EA0 ADD X10, X10, 0x8
	0x03DD7EA4 LDUR X11, [X10 - 0x8]
	0x03DD7EA8 CMP X11, X1
	0x03DD7EAC B.EQ 0x3DD7ECC
	0x03DD7EB0 SUBS X9, X9, 0x1
	0x03DD7EB4 ADD X10, X10, 0x10
	0x03DD7EB8 B.NE 0x3DD7EA4
	0x03DD7EBC MOVZ W2, 0x2
	0x03DD7EC0 MOV X0, X27
	0x03DD7EC4 BL 0x1C5C788
	0x03DD7EC8 B 0x3DD7EDC
	0x03DD7ECC LDR W9, [X10]
	0x03DD7ED0 ADD W9, W9, 0x2
	0x03DD7ED4 ADD X8, X8, W9, 0x4, SXTW
	0x03DD7ED8 ADD X0, X8, 0x138
	0x03DD7EDC LDP X8, X7, [X0]
	0x03DD7EE0 ADD W1, W28, 0x1C
	0x03DD7EE4 MOV X0, X27
	0x03DD7EE8 MOV X2, X24
	0x03DD7EEC MOV X3, X23
	0x03DD7EF0 MOV W4, W22
	0x03DD7EF4 MOV W5, W21
	0x03DD7EF8 MOV X6, X29
	0x03DD7EFC BLR X8
	0x03DD7F00 ORR W20, W20, W0, 0x0
	0x03DD7F04 LDR X0, [X25 + 0xC0]
	0x03DD7F08 LDR X1, [X26 + 0xC0]
	0x03DD7F0C MOV X2, X31
	0x03DD7F10 BL 0x3DFD53C
	0x03DD7F14 TBZ X0, 0x0, 0x3DD7FB8
	0x03DD7F18 CBZ X19, 0x3DD9BF0
	0x03DD7F1C MOV X0, X19
	0x03DD7F20 MOV X1, X31
	0x03DD7F24 BL 0x3DE89D4
	0x03DD7F28 CBZ X0, 0x3DD9BF0
	0x03DD7F2C ADRP X10, 0x346000
	0x03DD7F30 LDR X8, [X0]
	0x03DD7F34 LDR X24, [X25 + 0xC0]
	0x03DD7F38 LDR X23, [X26 + 0xC0]
	0x03DD7F3C LDR X10, [X10 + 0xED0]
	0x03DD7F40 LDRH W9, [X8 + 0x12E]
	0x03DD7F44 MOV X27, X0
	0x03DD7F48 LDR X1, [X10]
	0x03DD7F4C CBZ X9, 0x3DD7F70
	0x03DD7F50 LDR X10, [X8 + 0xB0]
	0x03DD7F54 ADD X10, X10, 0x8
	0x03DD7F58 LDUR X11, [X10 - 0x8]
	0x03DD7F5C CMP X11, X1
	0x03DD7F60 B.EQ 0x3DD7F80
	0x03DD7F64 SUBS X9, X9, 0x1
	0x03DD7F68 ADD X10, X10, 0x10
	0x03DD7F6C B.NE 0x3DD7F58
	0x03DD7F70 MOVZ W2, 0x2
	0x03DD7F74 MOV X0, X27
	0x03DD7F78 BL 0x1C5C788
	0x03DD7F7C B 0x3DD7F90
	0x03DD7F80 LDR W9, [X10]
	0x03DD7F84 ADD W9, W9, 0x2
	0x03DD7F88 ADD X8, X8, W9, 0x4, SXTW
	0x03DD7F8C ADD X0, X8, 0x138
	0x03DD7F90 LDP X8, X7, [X0]
	0x03DD7F94 ADD W1, W28, 0x1D
	0x03DD7F98 MOV X0, X27
	0x03DD7F9C MOV X2, X24
	0x03DD7FA0 MOV X3, X23
	0x03DD7FA4 MOV W4, W22
	0x03DD7FA8 MOV W5, W21
	0x03DD7FAC MOV X6, X29
	0x03DD7FB0 BLR X8
	0x03DD7FB4 ORR W20, W20, W0, 0x0
	0x03DD7FB8 LDR X0, [X25 + 0xC8]
	0x03DD7FBC LDR X1, [X26 + 0xC8]
	0x03DD7FC0 MOV X2, X31
	0x03DD7FC4 BL 0x3DFD53C
	0x03DD7FC8 TBZ X0, 0x0, 0x3DD8038
	0x03DD7FCC CBZ X19, 0x3DD9BF0
	0x03DD7FD0 MOV X0, X19
	0x03DD7FD4 MOV X1, X31
	0x03DD7FD8 BL 0x3DE89D4
	0x03DD7FDC CBZ X0, 0x3DD9BF0
	0x03DD7FE0 ADRP X10, 0x346000
	0x03DD7FE4 LDR X8, [X0]
	0x03DD7FE8 LDR X24, [X25 + 0xC8]
	0x03DD7FEC LDR X23, [X26 + 0xC8]
	0x03DD7FF0 LDR X10, [X10 + 0xED0]
	0x03DD7FF4 LDRH W9, [X8 + 0x12E]
	0x03DD7FF8 LDR X26, [X31 + 0x30]
	0x03DD7FFC MOV X27, X0
	0x03DD8000 LDR X1, [X10]
	0x03DD8004 CBZ X9, 0x3DD8028
	0x03DD8008 LDR X10, [X8 + 0xB0]
	0x03DD800C ADD X10, X10, 0x8
	0x03DD8010 LDUR X11, [X10 - 0x8]
	0x03DD8014 CMP X11, X1
	0x03DD8018 B.EQ 0x3DD8040
	0x03DD801C SUBS X9, X9, 0x1
	0x03DD8020 ADD X10, X10, 0x10
	0x03DD8024 B.NE 0x3DD8010
	0x03DD8028 MOVZ W2, 0x2
	0x03DD802C MOV X0, X27
	0x03DD8030 BL 0x1C5C788
	0x03DD8034 B 0x3DD8050
	0x03DD8038 LDR X26, [X31 + 0x30]
	0x03DD803C B 0x3DD8078
	0x03DD8040 LDR W9, [X10]
	0x03DD8044 ADD W9, W9, 0x2
	0x03DD8048 ADD X8, X8, W9, 0x4, SXTW
	0x03DD804C ADD X0, X8, 0x138
	0x03DD8050 LDP X8, X7, [X0]
	0x03DD8054 ADD W1, W28, 0x1E
	0x03DD8058 MOV X0, X27
	0x03DD805C MOV X2, X24
	0x03DD8060 MOV X3, X23
	0x03DD8064 MOV W4, W22
	0x03DD8068 MOV W5, W21
	0x03DD806C MOV X6, X29
	0x03DD8070 BLR X8
	0x03DD8074 ORR W20, W20, W0, 0x0
	0x03DD8078 LDR X28, [X31 + 0x28]
	0x03DD807C ADRP X8, 0x391000
	0x03DD8080 LDR X8, [X8 + 0x468]
	0x03DD8084 LDR X1, [X26 + 0x10]
	0x03DD8088 ADD X23, X28, 0x10
	0x03DD808C MOV X0, X23
	0x03DD8090 LDR X2, [X8]
	0x03DD8094 BL 0x266CF84
	0x03DD8098 TBNZ X0, 0x0, 0x3DD8774
	0x03DD809C ADRP X24, 0x38D000
	0x03DD80A0 LDR X24, [X24 + 0x370]
	0x03DD80A4 MOVZ W28, 0x1
	0x03DD80A8 MOV X0, X23
	0x03DD80AC MOVK W28, 0x30000
	0x03DD80B0 LDR X1, [X24]
	0x03DD80B4 BL 0x266CDA0
	0x03DD80B8 LDR X1, [X24]
	0x03DD80BC MOV X25, X0
	0x03DD80C0 ADD X0, X26, 0x10
	0x03DD80C4 BL 0x266CDA0
	0x03DD80C8 LDR W8, [X25 + 0x18]
	0x03DD80CC LDR W9, [X0 + 0x18]
	0x03DD80D0 MOV X26, X0
	0x03DD80D4 CMP W8, W9
	0x03DD80D8 B.EQ 0x3DD8180
	0x03DD80DC CBZ X19, 0x3DD9BF0
	0x03DD80E0 MOV X0, X19
	0x03DD80E4 MOV X1, X31
	0x03DD80E8 BL 0x3DE89D4
	0x03DD80EC CBZ X0, 0x3DD9BF0
	0x03DD80F0 ADRP X10, 0x345000
	0x03DD80F4 LDR X8, [X0]
	0x03DD80F8 LDR W24, [X25 + 0x18]
	0x03DD80FC LDR W23, [X26 + 0x18]
	0x03DD8100 LDR X10, [X10 + 0xED0]
	0x03DD8104 LDRH W9, [X8 + 0x12E]
	0x03DD8108 MOV X27, X0
	0x03DD810C LDR X1, [X10]
	0x03DD8110 CBZ X9, 0x3DD8134
	0x03DD8114 LDR X10, [X8 + 0xB0]
	0x03DD8118 ADD X10, X10, 0x8
	0x03DD811C LDUR X11, [X10 - 0x8]
	0x03DD8120 CMP X11, X1
	0x03DD8124 B.EQ 0x3DD8144
	0x03DD8128 SUBS X9, X9, 0x1
	0x03DD812C ADD X10, X10, 0x10
	0x03DD8130 B.NE 0x3DD811C
	0x03DD8134 MOVZ W2, 0x4
	0x03DD8138 MOV X0, X27
	0x03DD813C BL 0x1C5C788
	0x03DD8140 B 0x3DD8154
	0x03DD8144 LDR W9, [X10]
	0x03DD8148 ADD W9, W9, 0x4
	0x03DD814C ADD X8, X8, W9, 0x4, SXTW
	0x03DD8150 ADD X0, X8, 0x138
	0x03DD8154 LDP X8, X7, [X0]
	0x03DD8158 MOVZ W1, 0x1
	0x03DD815C MOVK W1, 0x30000
	0x03DD8160 MOV X0, X27
	0x03DD8164 MOV W2, W24
	0x03DD8168 MOV W3, W23
	0x03DD816C MOV W4, W22
	0x03DD8170 MOV W5, W21
	0x03DD8174 MOV X6, X29
	0x03DD8178 BLR X8
	0x03DD817C ORR W20, W20, W0, 0x0
	0x03DD8180 LDUR V0, [X25 + 0x1C]
	0x03DD8184 LDUR V1, [X26 + 0x1C]
	0x03DD8188 LDUR V2, [X25 + 0x24]
	0x03DD818C LDUR V3, [X26 + 0x24]
	0x03DD8190 ADRP X8, 0xFFFFFFFFFCD11000
	0x03DD8194 FSUB V0.2S, V0.2S, V1.2S
	0x00000000 INVALID
	0x03DD819C LDR V1, [X8 + 0xF20]
	0x03DD81A0 FSUB V2.2S, V2.2S, V3.2S
	0x03DD81A4 UNIMPLEMENTED
	0x00000000 INVALID
	0x03DD81AC FADD V0.2S, V0.2S, V3.2S
	0x03DD81B0 FADD V0.2S, V2.2S, V0.2S
	0x03DD81B4 UNIMPLEMENTED
	0x03DD81B8 FADD V0.2S, V2.2S, V0.2S
	0x03DD81BC FCMP S0, S1
	0x03DD81C0 B.MI 0x3DD8298
	0x03DD81C4 CBZ X19, 0x3DD9BF0
	0x03DD81C8 MOV X0, X19
	0x03DD81CC MOV X1, X31
	0x03DD81D0 BL 0x3DE89D4
	0x03DD81D4 CBZ X0, 0x3DD9BF0
	0x03DD81D8 ADRP X10, 0x345000
	0x03DD81DC LDP S9, S8, [X26 + 0x24]
	0x03DD81E0 LDP S11, S10, [X26 + 0x1C]
	0x03DD81E4 LDP S13, S12, [X25 + 0x24]
	0x03DD81E8 LDR X8, [X0]
	0x03DD81EC LDP S15, S14, [X25 + 0x1C]
	0x03DD81F0 LDR X10, [X10 + 0xED0]
	0x03DD81F4 MOV X27, X0
	0x03DD81F8 LDRH W9, [X8 + 0x12E]
	0x03DD81FC LDR X1, [X10]
	0x03DD8200 CBZ X9, 0x3DD8224
	0x03DD8204 LDR X10, [X8 + 0xB0]
	0x03DD8208 ADD X10, X10, 0x8
	0x03DD820C LDUR X11, [X10 - 0x8]
	0x03DD8210 CMP X11, X1
	0x03DD8214 B.EQ 0x3DD8234
	0x03DD8218 SUBS X9, X9, 0x1
	0x03DD821C ADD X10, X10, 0x10
	0x03DD8220 B.NE 0x3DD820C
	0x03DD8224 MOVZ W2, 0x3
	0x03DD8228 MOV X0, X27
	0x03DD822C BL 0x1C5C788
	0x03DD8230 B 0x3DD8244
	0x03DD8234 LDR W9, [X10]
	0x03DD8238 ADD W9, W9, 0x3
	0x03DD823C ADD X8, X8, W9, 0x4, SXTW
	0x03DD8240 ADD X0, X8, 0x138
	0x03DD8244 LDP X8, X5, [X0]
	0x03DD8248 ADD W1, W28, 0x1
	0x03DD824C MOV X0, X27
	0x03DD8250 MOV V0.16B, V15.16B
	0x03DD8254 MOV V1.16B, V14.16B
	0x03DD8258 MOV V2.16B, V13.16B
	0x03DD825C MOV V3.16B, V12.16B
	0x03DD8260 MOV V4.16B, V11.16B
	0x03DD8264 MOV V5.16B, V10.16B
	0x03DD8268 MOV V6.16B, V9.16B
	0x03DD826C MOV V7.16B, V8.16B
	0x03DD8270 MOV W2, W22
	0x03DD8274 MOV W3, W21
	0x03DD8278 MOV X4, X29
	0x03DD827C BLR X8
	0x03DD8280 LDR W9, [X31 + 0x3C]
	0x03DD8284 ANDS W31, W0, 0x1
	0x03DD8288 MOVZ W8, 0x8
	0x03DD828C ORR W20, W20, W0, 0x0
	0x03DD8290 CSEL W9, W8, W9, NE
	0x03DD8294 STR W9, [X31 + 0x3C]
	0x03DD8298 LDR W8, [X25 + 0x2C]
	0x03DD829C LDR W9, [X26 + 0x2C]
	0x03DD82A0 CMP W8, W9
	0x03DD82A4 B.EQ 0x3DD8348
	0x03DD82A8 CBZ X19, 0x3DD9BF0
	0x03DD82AC MOV X0, X19
	0x03DD82B0 MOV X1, X31
	0x03DD82B4 BL 0x3DE89D4
	0x03DD82B8 CBZ X0, 0x3DD9BF0
	0x03DD82BC ADRP X10, 0x345000
	0x03DD82C0 LDR X8, [X0]
	0x03DD82C4 LDR W24, [X25 + 0x2C]
	0x03DD82C8 LDR W23, [X26 + 0x2C]
	0x03DD82CC LDR X10, [X10 + 0xED0]
	0x03DD82D0 LDRH W9, [X8 + 0x12E]
	0x03DD82D4 MOV X27, X0
	0x03DD82D8 LDR X1, [X10]
	0x03DD82DC CBZ X9, 0x3DD8300
	0x03DD82E0 LDR X10, [X8 + 0xB0]
	0x03DD82E4 ADD X10, X10, 0x8
	0x03DD82E8 LDUR X11, [X10 - 0x8]
	0x03DD82EC CMP X11, X1
	0x03DD82F0 B.EQ 0x3DD8310
	0x03DD82F4 SUBS X9, X9, 0x1
	0x03DD82F8 ADD X10, X10, 0x10
	0x03DD82FC B.NE 0x3DD82E8
	0x03DD8300 MOVZ W2, 0x4
	0x03DD8304 MOV X0, X27
	0x03DD8308 BL 0x1C5C788
	0x03DD830C B 0x3DD8320
	0x03DD8310 LDR W9, [X10]
	0x03DD8314 ADD W9, W9, 0x4
	0x03DD8318 ADD X8, X8, W9, 0x4, SXTW
	0x03DD831C ADD X0, X8, 0x138
	0x03DD8320 LDP X8, X7, [X0]
	0x03DD8324 ADD W1, W28, 0x2
	0x03DD8328 MOV X0, X27
	0x03DD832C MOV W2, W24
	0x03DD8330 MOV W3, W23
	0x03DD8334 MOV W4, W22
	0x03DD8338 MOV W5, W21
	0x03DD833C MOV X6, X29
	0x03DD8340 BLR X8
	0x03DD8344 ORR W20, W20, W0, 0x0
	0x03DD8348 LDR W8, [X25 + 0x30]
	0x03DD834C LDR W9, [X26 + 0x30]
	0x03DD8350 CMP W8, W9
	0x03DD8354 B.EQ 0x3DD83F8
	0x03DD8358 CBZ X19, 0x3DD9BF0
	0x03DD835C MOV X0, X19
	0x03DD8360 MOV X1, X31
	0x03DD8364 BL 0x3DE89D4
	0x03DD8368 CBZ X0, 0x3DD9BF0
	0x03DD836C ADRP X10, 0x345000
	0x03DD8370 LDR X8, [X0]
	0x03DD8374 LDR W24, [X25 + 0x30]
	0x03DD8378 LDR W23, [X26 + 0x30]
	0x03DD837C LDR X10, [X10 + 0xED0]
	0x03DD8380 LDRH W9, [X8 + 0x12E]
	0x03DD8384 MOV X27, X0
	0x03DD8388 LDR X1, [X10]
	0x03DD838C CBZ X9, 0x3DD83B0
	0x03DD8390 LDR X10, [X8 + 0xB0]
	0x03DD8394 ADD X10, X10, 0x8
	0x03DD8398 LDUR X11, [X10 - 0x8]
	0x03DD839C CMP X11, X1
	0x03DD83A0 B.EQ 0x3DD83C0
	0x03DD83A4 SUBS X9, X9, 0x1
	0x03DD83A8 ADD X10, X10, 0x10
	0x03DD83AC B.NE 0x3DD8398
	0x03DD83B0 MOVZ W2, 0x1
	0x03DD83B4 MOV X0, X27
	0x03DD83B8 BL 0x1C5C788
	0x03DD83BC B 0x3DD83D0
	0x03DD83C0 LDR W9, [X10]
	0x03DD83C4 ADD W9, W9, 0x1
	0x03DD83C8 ADD X8, X8, W9, 0x4, SXTW
	0x03DD83CC ADD X0, X8, 0x138
	0x03DD83D0 LDP X8, X7, [X0]
	0x03DD83D4 ADD W1, W28, 0x3
	0x03DD83D8 MOV X0, X27
	0x03DD83DC MOV W2, W24
	0x03DD83E0 MOV W3, W23
	0x03DD83E4 MOV W4, W22
	0x03DD83E8 MOV W5, W21
	0x03DD83EC MOV X6, X29
	0x03DD83F0 BLR X8
	0x03DD83F4 ORR W20, W20, W0, 0x0
	0x03DD83F8 LDR W8, [X25 + 0x34]
	0x03DD83FC LDR W9, [X26 + 0x34]
	0x03DD8400 CMP W8, W9
	0x03DD8404 B.EQ 0x3DD84A8
	0x03DD8408 CBZ X19, 0x3DD9BF0
	0x03DD840C MOV X0, X19
	0x03DD8410 MOV X1, X31
	0x03DD8414 BL 0x3DE89D4
	0x03DD8418 CBZ X0, 0x3DD9BF0
	0x03DD841C ADRP X10, 0x345000
	0x03DD8420 LDR X8, [X0]
	0x03DD8424 LDR W24, [X25 + 0x34]
	0x03DD8428 LDR W23, [X26 + 0x34]
	0x03DD842C LDR X10, [X10 + 0xED0]
	0x03DD8430 LDRH W9, [X8 + 0x12E]
	0x03DD8434 MOV X27, X0
	0x03DD8438 LDR X1, [X10]
	0x03DD843C CBZ X9, 0x3DD8460
	0x03DD8440 LDR X10, [X8 + 0xB0]
	0x03DD8444 ADD X10, X10, 0x8
	0x03DD8448 LDUR X11, [X10 - 0x8]
	0x03DD844C CMP X11, X1
	0x03DD8450 B.EQ 0x3DD8470
	0x03DD8454 SUBS X9, X9, 0x1
	0x03DD8458 ADD X10, X10, 0x10
	0x03DD845C B.NE 0x3DD8448
	0x03DD8460 MOVZ W2, 0x1
	0x03DD8464 MOV X0, X27
	0x03DD8468 BL 0x1C5C788
	0x03DD846C B 0x3DD8480
	0x03DD8470 LDR W9, [X10]
	0x03DD8474 ADD W9, W9, 0x1
	0x03DD8478 ADD X8, X8, W9, 0x4, SXTW
	0x03DD847C ADD X0, X8, 0x138
	0x03DD8480 LDP X8, X7, [X0]
	0x03DD8484 ADD W1, W28, 0x4
	0x03DD8488 MOV X0, X27
	0x03DD848C MOV W2, W24
	0x03DD8490 MOV W3, W23
	0x03DD8494 MOV W4, W22
	0x03DD8498 MOV W5, W21
	0x03DD849C MOV X6, X29
	0x03DD84A0 BLR X8
	0x03DD84A4 ORR W20, W20, W0, 0x0
	0x03DD84A8 LDR W8, [X25 + 0x38]
	0x03DD84AC LDR W9, [X26 + 0x38]
	0x03DD84B0 CMP W8, W9
	0x03DD84B4 B.EQ 0x3DD8558
	0x03DD84B8 CBZ X19, 0x3DD9BF0
	0x03DD84BC MOV X0, X19
	0x03DD84C0 MOV X1, X31
	0x03DD84C4 BL 0x3DE89D4
	0x03DD84C8 CBZ X0, 0x3DD9BF0
	0x03DD84CC ADRP X10, 0x345000
	0x03DD84D0 LDR X8, [X0]
	0x03DD84D4 LDR W24, [X25 + 0x38]
	0x03DD84D8 LDR W23, [X26 + 0x38]
	0x03DD84DC LDR X10, [X10 + 0xED0]
	0x03DD84E0 LDRH W9, [X8 + 0x12E]
	0x03DD84E4 MOV X27, X0
	0x03DD84E8 LDR X1, [X10]
	0x03DD84EC CBZ X9, 0x3DD8510
	0x03DD84F0 LDR X10, [X8 + 0xB0]
	0x03DD84F4 ADD X10, X10, 0x8
	0x03DD84F8 LDUR X11, [X10 - 0x8]
	0x03DD84FC CMP X11, X1
	0x03DD8500 B.EQ 0x3DD8520
	0x03DD8504 SUBS X9, X9, 0x1
	0x03DD8508 ADD X10, X10, 0x10
	0x03DD850C B.NE 0x3DD84F8
	0x03DD8510 MOVZ W2, 0x1
	0x03DD8514 MOV X0, X27
	0x03DD8518 BL 0x1C5C788
	0x03DD851C B 0x3DD8530
	0x03DD8520 LDR W9, [X10]
	0x03DD8524 ADD W9, W9, 0x1
	0x03DD8528 ADD X8, X8, W9, 0x4, SXTW
	0x03DD852C ADD X0, X8, 0x138
	0x03DD8530 LDP X8, X7, [X0]
	0x03DD8534 ADD W1, W28, 0x5
	0x03DD8538 MOV X0, X27
	0x03DD853C MOV W2, W24
	0x03DD8540 MOV W3, W23
	0x03DD8544 MOV W4, W22
	0x03DD8548 MOV W5, W21
	0x03DD854C MOV X6, X29
	0x03DD8550 BLR X8
	0x03DD8554 ORR W20, W20, W0, 0x0
	0x03DD8558 LDR V0, [X25 + 0x3C]
	0x03DD855C LDR V1, [X26 + 0x3C]
	0x03DD8560 FCMP S0, S1
	0x03DD8564 B.EQ 0x3DD8604
	0x03DD8568 CBZ X19, 0x3DD9BF0
	0x03DD856C MOV X0, X19
	0x03DD8570 MOV X1, X31
	0x03DD8574 BL 0x3DE89D4
	0x03DD8578 CBZ X0, 0x3DD9BF0
	0x03DD857C ADRP X10, 0x345000
	0x03DD8580 LDR X8, [X0]
	0x03DD8584 LDR V9, [X25 + 0x3C]
	0x03DD8588 LDR V8, [X26 + 0x3C]
	0x03DD858C LDR X10, [X10 + 0xED0]
	0x03DD8590 LDRH W9, [X8 + 0x12E]
	0x03DD8594 MOV X27, X0
	0x03DD8598 LDR X1, [X10]
	0x03DD859C CBZ X9, 0x3DD85C0
	0x03DD85A0 LDR X10, [X8 + 0xB0]
	0x03DD85A4 ADD X10, X10, 0x8
	0x03DD85A8 LDUR X11, [X10 - 0x8]
	0x03DD85AC CMP X11, X1
	0x03DD85B0 B.EQ 0x3DD85D0
	0x03DD85B4 SUBS X9, X9, 0x1
	0x03DD85B8 ADD X10, X10, 0x10
	0x03DD85BC B.NE 0x3DD85A8
	0x03DD85C0 MOV X0, X27
	0x03DD85C4 MOV W2, W31
	0x03DD85C8 BL 0x1C5C788
	0x03DD85CC B 0x3DD85DC
	0x03DD85D0 LDRSW X9, [X10]
	0x03DD85D4 ADD X8, X8, X9, 0x4, LSL
	0x03DD85D8 ADD X0, X8, 0x138
	0x03DD85DC LDP X8, X5, [X0]
	0x03DD85E0 ADD W1, W28, 0x6
	0x03DD85E4 MOV X0, X27
	0x03DD85E8 MOV V0.16B, V9.16B
	0x03DD85EC MOV V1.16B, V8.16B
	0x03DD85F0 MOV W2, W22
	0x03DD85F4 MOV W3, W21
	0x03DD85F8 MOV X4, X29
	0x03DD85FC BLR X8
	0x03DD8600 ORR W20, W20, W0, 0x0
	0x03DD8604 LDR W8, [X25 + 0x40]
	0x03DD8608 LDR W9, [X26 + 0x40]
	0x03DD860C CMP W8, W9
	0x03DD8610 B.EQ 0x3DD86B4
	0x03DD8614 CBZ X19, 0x3DD9BF0
	0x03DD8618 MOV X0, X19
	0x03DD861C MOV X1, X31
	0x03DD8620 BL 0x3DE89D4
	0x03DD8624 CBZ X0, 0x3DD9BF0
	0x03DD8628 ADRP X10, 0x345000
	0x03DD862C LDR X8, [X0]
	0x03DD8630 LDR W24, [X25 + 0x40]
	0x03DD8634 LDR W23, [X26 + 0x40]
	0x03DD8638 LDR X10, [X10 + 0xED0]
	0x03DD863C LDRH W9, [X8 + 0x12E]
	0x03DD8640 MOV X27, X0
	0x03DD8644 LDR X1, [X10]
	0x03DD8648 CBZ X9, 0x3DD866C
	0x03DD864C LDR X10, [X8 + 0xB0]
	0x03DD8650 ADD X10, X10, 0x8
	0x03DD8654 LDUR X11, [X10 - 0x8]
	0x03DD8658 CMP X11, X1
	0x03DD865C B.EQ 0x3DD867C
	0x03DD8660 SUBS X9, X9, 0x1
	0x03DD8664 ADD X10, X10, 0x10
	0x03DD8668 B.NE 0x3DD8654
	0x03DD866C MOVZ W2, 0x1
	0x03DD8670 MOV X0, X27
	0x03DD8674 BL 0x1C5C788
	0x03DD8678 B 0x3DD868C
	0x03DD867C LDR W9, [X10]
	0x03DD8680 ADD W9, W9, 0x1
	0x03DD8684 ADD X8, X8, W9, 0x4, SXTW
	0x03DD8688 ADD X0, X8, 0x138
	0x03DD868C LDP X8, X7, [X0]
	0x03DD8690 ADD W1, W28, 0x7
	0x03DD8694 MOV X0, X27
	0x03DD8698 MOV W2, W24
	0x03DD869C MOV W3, W23
	0x03DD86A0 MOV W4, W22
	0x03DD86A4 MOV W5, W21
	0x03DD86A8 MOV X6, X29
	0x03DD86AC BLR X8
	0x03DD86B0 ORR W20, W20, W0, 0x0
	0x03DD86B4 LDR W8, [X25 + 0x44]
	0x03DD86B8 LDR W9, [X26 + 0x44]
	0x03DD86BC CMP W8, W9
	0x03DD86C0 B.NE 0x3DD86CC
	0x03DD86C4 LDR X26, [X31 + 0x30]
	0x03DD86C8 B 0x3DD8770
	0x03DD86CC CBZ X19, 0x3DD9BF0
	0x03DD86D0 MOV X0, X19
	0x03DD86D4 MOV X1, X31
	0x03DD86D8 BL 0x3DE89D4
	0x03DD86DC CBZ X0, 0x3DD9BF0
	0x03DD86E0 ADRP X10, 0x345000
	0x03DD86E4 LDR X8, [X0]
	0x03DD86E8 LDR W24, [X25 + 0x44]
	0x03DD86EC LDR W23, [X26 + 0x44]
	0x03DD86F0 LDR X10, [X10 + 0xED0]
	0x03DD86F4 LDRH W9, [X8 + 0x12E]
	0x03DD86F8 LDR X26, [X31 + 0x30]
	0x03DD86FC MOV X27, X0
	0x03DD8700 LDR X1, [X10]
	0x03DD8704 CBZ X9, 0x3DD8728
	0x03DD8708 LDR X10, [X8 + 0xB0]
	0x03DD870C ADD X10, X10, 0x8
	0x03DD8710 LDUR X11, [X10 - 0x8]
	0x03DD8714 CMP X11, X1
	0x03DD8718 B.EQ 0x3DD8738
	0x03DD871C SUBS X9, X9, 0x1
	0x03DD8720 ADD X10, X10, 0x10
	0x03DD8724 B.NE 0x3DD8710
	0x03DD8728 MOVZ W2, 0x4
	0x03DD872C MOV X0, X27
	0x03DD8730 BL 0x1C5C788
	0x03DD8734 B 0x3DD8748
	0x03DD8738 LDR W9, [X10]
	0x03DD873C ADD W9, W9, 0x4
	0x03DD8740 ADD X8, X8, W9, 0x4, SXTW
	0x03DD8744 ADD X0, X8, 0x138
	0x03DD8748 LDP X8, X7, [X0]
	0x03DD874C ADD W1, W28, 0x8
	0x03DD8750 MOV X0, X27
	0x03DD8754 MOV W2, W24
	0x03DD8758 MOV W3, W23
	0x03DD875C MOV W4, W22
	0x03DD8760 MOV W5, W21
	0x03DD8764 MOV X6, X29
	0x03DD8768 BLR X8
	0x03DD876C ORR W20, W20, W0, 0x0
	0x03DD8770 LDR X28, [X31 + 0x28]
	0x03DD8774 ADRP X8, 0x391000
	0x03DD8778 LDR X8, [X8 + 0x458]
	0x03DD877C LDR X1, [X26 + 0x18]
	0x03DD8780 ADD X23, X28, 0x18
	0x03DD8784 MOV X0, X23
	0x03DD8788 LDR X2, [X8]
	0x03DD878C BL 0x266D404
	0x03DD8790 TBNZ X0, 0x0, 0x3DD8CB0
	0x03DD8794 ADRP X24, 0x38D000
	0x03DD8798 LDR X24, [X24 + 0x378]
	0x03DD879C MOV X0, X23
	0x03DD87A0 LDR X1, [X24]
	0x03DD87A4 BL 0x266D220
	0x03DD87A8 LDR X1, [X24]
	0x03DD87AC MOV X25, X0
	0x03DD87B0 ADD X0, X26, 0x18
	0x03DD87B4 BL 0x266D220
	0x03DD87B8 LDR X8, [X25 + 0x10]
	0x03DD87BC LDR V0, [X25]
	0x03DD87C0 MOV X26, X0
	0x03DD87C4 ADD X1, X31, 0x2C0
	0x03DD87C8 STR X8, [X31 + 0x3B0]
	0x03DD87CC STR V0, [X31 + 0x3A]
	0x03DD87D0 LDR X8, [X0 + 0x10]
	0x03DD87D4 LDR V0, [X0]
	0x03DD87D8 LDR V1, [X31 + 0x3A]
	0x03DD87DC LDR X9, [X31 + 0x3B0]
	0x03DD87E0 ADD X0, X31, 0x2E0
	0x03DD87E4 MOV X2, X31
	0x03DD87E8 STR X8, [X31 + 0x390]
	0x03DD87EC STR V0, [X31 + 0x38]
	0x03DD87F0 STR V1, [X31 + 0x2E]
	0x03DD87F4 STR X9, [X31 + 0x2F0]
	0x03DD87F8 STR V0, [X31 + 0x2C]
	0x03DD87FC STR X8, [X31 + 0x2D0]
	0x03DD8800 BL 0x3DFD954
	0x03DD8804 TBZ X0, 0x0, 0x3DD8914
	0x03DD8808 CBZ X19, 0x3DD9BF0
	0x03DD880C MOV X0, X19
	0x03DD8810 MOV X1, X31
	0x03DD8814 BL 0x3DE89D4
	0x03DD8818 LDR X8, [X25 + 0x10]
	0x03DD881C LDR V0, [X25]
	0x03DD8820 STR X8, [X31 + 0x130]
	0x03DD8824 STR V0, [X31 + 0x12]
	0x03DD8828 LDR X8, [X26 + 0x10]
	0x03DD882C LDR V0, [X26]
	0x03DD8830 STR X8, [X31 + 0x110]
	0x03DD8834 STR V0, [X31 + 0x10]
	0x03DD8838 CBZ X0, 0x3DD9BF0
	0x03DD883C LDR V0, [X31 + 0x12]
	0x03DD8840 LDR X8, [X31 + 0x130]
	0x03DD8844 LDR V1, [X31 + 0x10]
	0x03DD8848 LDR X9, [X31 + 0x110]
	0x03DD884C STR V0, [X31 + 0x2A]
	0x03DD8850 STR X8, [X31 + 0x2B0]
	0x03DD8854 STR V1, [X31 + 0x28]
	0x03DD8858 STR X9, [X31 + 0x290]
	0x03DD885C ADRP X10, 0x345000
	0x03DD8860 LDR X8, [X0]
	0x03DD8864 LDR X10, [X10 + 0xED0]
	0x03DD8868 MOV X27, X0
	0x03DD886C LDRH W9, [X8 + 0x12E]
	0x03DD8870 LDR X1, [X10]
	0x03DD8874 CBZ X9, 0x3DD8898
	0x03DD8878 LDR X10, [X8 + 0xB0]
	0x03DD887C ADD X10, X10, 0x8
	0x03DD8880 LDUR X11, [X10 - 0x8]
	0x03DD8884 CMP X11, X1
	0x03DD8888 B.EQ 0x3DD88A8
	0x03DD888C SUBS X9, X9, 0x1
	0x03DD8890 ADD X10, X10, 0x10
	0x03DD8894 B.NE 0x3DD8880
	0x03DD8898 MOVZ W2, 0xB
	0x03DD889C MOV X0, X27
	0x03DD88A0 BL 0x1C5C788
	0x03DD88A4 B 0x3DD88B8
	0x03DD88A8 LDR W9, [X10]
	0x03DD88AC ADD W9, W9, 0xB
	0x03DD88B0 ADD X8, X8, W9, 0x4, SXTW
	0x03DD88B4 ADD X0, X8, 0x138
	0x03DD88B8 LDR V0, [X31 + 0x2A]
	0x03DD88BC LDR X9, [X31 + 0x2B0]
	0x03DD88C0 LDR V1, [X31 + 0x28]
	0x03DD88C4 LDR X10, [X31 + 0x290]
	0x03DD88C8 LDR X8, [X0]
	0x03DD88CC STR V0, [X31 + 0x3A]
	0x03DD88D0 STR X9, [X31 + 0x3B0]
	0x03DD88D4 STR V1, [X31 + 0x38]
	0x03DD88D8 STR X10, [X31 + 0x390]
	0x03DD88DC LDR X7, [X0 + 0x8]
	0x03DD88E0 ADD X2, X31, 0x3A0
	0x03DD88E4 ADD X3, X31, 0x380
	0x03DD88E8 MOVZ W1, 0x50000
	0x03DD88EC MOV X0, X27
	0x03DD88F0 MOV W4, W22
	0x03DD88F4 MOV W5, W21
	0x03DD88F8 MOV X6, X29
	0x03DD88FC BLR X8
	0x03DD8900 LDR W9, [X31 + 0x3C]
	0x03DD8904 AND W8, W0, 0x1
	0x03DD8908 ORR W20, W20, W0, 0x0
	0x03DD890C ORR W9, W9, W8, 0x0
	0x03DD8910 STR W9, [X31 + 0x3C]
	0x03DD8914 LDP X0, X1, [X25 + 0x18]
	0x03DD8918 LDP X2, X3, [X26 + 0x18]
	0x03DD891C MOV X4, X31
	0x03DD8920 BL 0x3DFDCA4
	0x03DD8924 TBZ X0, 0x0, 0x3DD89FC
	0x03DD8928 CBZ X19, 0x3DD9BF0
	0x03DD892C MOV X0, X19
	0x03DD8930 MOV X1, X31
	0x03DD8934 MOV W22, W21
	0x03DD8938 MOV X21, X29
	0x03DD893C BL 0x3DE89D4
	0x03DD8940 CBZ X0, 0x3DD9BF0
	0x03DD8944 ADRP X10, 0x345000
	0x03DD8948 LDP X29, X27, [X26 + 0x18]
	0x03DD894C LDR X8, [X0]
	0x03DD8950 LDP X23, X24, [X25 + 0x18]
	0x03DD8954 LDR X10, [X10 + 0xED0]
	0x03DD8958 MOV X28, X0
	0x03DD895C LDRH W9, [X8 + 0x12E]
	0x03DD8960 LDR X1, [X10]
	0x03DD8964 CBZ X9, 0x3DD8988
	0x03DD8968 LDR X10, [X8 + 0xB0]
	0x03DD896C ADD X10, X10, 0x8
	0x03DD8970 LDUR X11, [X10 - 0x8]
	0x03DD8974 CMP X11, X1
	0x03DD8978 B.EQ 0x3DD8998
	0x03DD897C SUBS X9, X9, 0x1
	0x03DD8980 ADD X10, X10, 0x10
	0x03DD8984 B.NE 0x3DD8970
	0x03DD8988 MOVZ W2, 0x9
	0x03DD898C MOV X0, X28
	0x03DD8990 BL 0x1C5C788
	0x03DD8994 B 0x3DD89A8
	0x03DD8998 LDR W9, [X10]
	0x03DD899C ADD W9, W9, 0x9
	0x03DD89A0 ADD X8, X8, W9, 0x4, SXTW
	0x03DD89A4 ADD X0, X8, 0x138
	0x03DD89A8 LDP X8, X9, [X0]
	0x03DD89AC LDR W6, [X31 + 0x38]
	0x03DD89B0 MOVZ W10, 0x1
	0x03DD89B4 MOVK W10, 0x30000
	0x03DD89B8 ADD W1, W10, 0x20000
	0x03DD89BC MOV X0, X28
	0x03DD89C0 MOV X2, X23
	0x03DD89C4 MOV X3, X24
	0x03DD89C8 MOV X4, X29
	0x03DD89CC MOV X5, X27
	0x03DD89D0 MOV W7, W22
	0x03DD89D4 STP X21, X9, [X31]
	0x03DD89D8 MOV X29, X21
	0x03DD89DC MOV W21, W22
	0x03DD89E0 BLR X8
	0x03DD89E4 LDR W9, [X31 + 0x3C]
	0x03DD89E8 LDR X28, [X31 + 0x28]
	0x03DD89EC AND W8, W0, 0x1
	0x03DD89F0 ORR W20, W20, W0, 0x0
	0x03DD89F4 ORR W9, W9, W8, 0x0
	0x03DD89F8 STR W9, [X31 + 0x3C]
	0x03DD89FC LDR W8, [X25 + 0x38]
	0x03DD8A00 LDUR V0, [X25 + 0x28]
	0x03DD8A04 ADD X0, X31, 0x260
	0x03DD8A08 ADD X1, X31, 0x240
	0x03DD8A0C STR W8, [X31 + 0x270]
	0x03DD8A10 STR V0, [X31 + 0x26]
	0x03DD8A14 LDR W8, [X26 + 0x38]
	0x03DD8A18 LDUR V0, [X26 + 0x28]
	0x03DD8A1C MOV X2, X31
	0x03DD8A20 STR W8, [X31 + 0x250]
	0x03DD8A24 STR V0, [X31 + 0x24]
	0x03DD8A28 BL 0x3E007D4
	0x03DD8A2C TBZ X0, 0x0, 0x3DD8ADC
	0x03DD8A30 LDR W22, [X31 + 0x38]
	0x03DD8A34 CBZ X19, 0x3DD9BF0
	0x03DD8A38 MOV X0, X19
	0x03DD8A3C MOV X1, X31
	0x03DD8A40 ADD X23, X25, 0x28
	0x03DD8A44 ADD X24, X26, 0x28
	0x03DD8A48 BL 0x3DE89D4
	0x03DD8A4C LDR W8, [X23 + 0x10]
	0x03DD8A50 LDR V0, [X23]
	0x03DD8A54 STR W8, [X31 + 0x130]
	0x03DD8A58 STR V0, [X31 + 0x12]
	0x03DD8A5C LDR W8, [X24 + 0x10]
	0x03DD8A60 LDR V0, [X24]
	0x03DD8A64 STR W8, [X31 + 0x110]
	0x03DD8A68 STR V0, [X31 + 0x10]
	0x03DD8A6C CBZ X0, 0x3DD9BF0
	0x03DD8A70 LDR V0, [X31 + 0x12]
	0x03DD8A74 LDR W8, [X31 + 0x130]
	0x03DD8A78 LDR V1, [X31 + 0x10]
	0x03DD8A7C LDR W9, [X31 + 0x110]
	0x03DD8A80 STR V0, [X31 + 0x22]
	0x03DD8A84 STR W8, [X31 + 0x230]
	0x03DD8A88 STR V1, [X31 + 0x20]
	0x03DD8A8C STR W9, [X31 + 0x210]
	0x03DD8A90 ADRP X10, 0x345000
	0x03DD8A94 LDR X8, [X0]
	0x03DD8A98 LDR X10, [X10 + 0xED0]
	0x03DD8A9C MOV X27, X0
	0x03DD8AA0 LDRH W9, [X8 + 0x12E]
	0x03DD8AA4 LDR X1, [X10]
	0x03DD8AA8 CBZ X9, 0x3DD8ACC
	0x03DD8AAC LDR X10, [X8 + 0xB0]
	0x03DD8AB0 ADD X10, X10, 0x8
	0x03DD8AB4 LDUR X11, [X10 - 0x8]
	0x03DD8AB8 CMP X11, X1
	0x03DD8ABC B.EQ 0x3DD8AE4
	0x03DD8AC0 SUBS X9, X9, 0x1
	0x03DD8AC4 ADD X10, X10, 0x10
	0x03DD8AC8 B.NE 0x3DD8AB4
	0x03DD8ACC MOVZ W2, 0xC
	0x03DD8AD0 MOV X0, X27
	0x03DD8AD4 BL 0x1C5C788
	0x03DD8AD8 B 0x3DD8AF4
	0x03DD8ADC LDR W22, [X31 + 0x38]
	0x03DD8AE0 B 0x3DD8B54
	0x03DD8AE4 LDR W9, [X10]
	0x03DD8AE8 ADD W9, W9, 0xC
	0x03DD8AEC ADD X8, X8, W9, 0x4, SXTW
	0x03DD8AF0 ADD X0, X8, 0x138
	0x03DD8AF4 LDR V0, [X31 + 0x22]
	0x03DD8AF8 LDR W9, [X31 + 0x230]
	0x03DD8AFC LDR V1, [X31 + 0x20]
	0x03DD8B00 LDR W10, [X31 + 0x210]
	0x03DD8B04 LDR X8, [X0]
	0x03DD8B08 STR V0, [X31 + 0x3A]
	0x03DD8B0C STR W9, [X31 + 0x3B0]
	0x03DD8B10 STR V1, [X31 + 0x38]
	0x03DD8B14 STR W10, [X31 + 0x390]
	0x03DD8B18 LDR X7, [X0 + 0x8]
	0x03DD8B1C MOVZ W1, 0x2
	0x03DD8B20 ADD X2, X31, 0x3A0
	0x03DD8B24 ADD X3, X31, 0x380
	0x03DD8B28 MOVK W1, 0x50000
	0x03DD8B2C MOV X0, X27
	0x03DD8B30 MOV W4, W22
	0x03DD8B34 MOV W5, W21
	0x03DD8B38 MOV X6, X29
	0x03DD8B3C BLR X8
	0x03DD8B40 LDR W9, [X31 + 0x3C]
	0x03DD8B44 AND W8, W0, 0x1
	0x03DD8B48 ORR W20, W20, W0, 0x0
	0x03DD8B4C ORR W9, W9, W8, 0x0
	0x03DD8B50 STR W9, [X31 + 0x3C]
	0x03DD8B54 LDUR X8, [X25 + 0x4C]
	0x03DD8B58 LDUR V0, [X25 + 0x3C]
	0x03DD8B5C ADD X0, X31, 0x1E0
	0x03DD8B60 ADD X1, X31, 0x1C0
	0x03DD8B64 STR X8, [X31 + 0x1F0]
	0x03DD8B68 STR V0, [X31 + 0x1E]
	0x03DD8B6C LDUR X8, [X26 + 0x4C]
	0x03DD8B70 LDUR V0, [X26 + 0x3C]
	0x03DD8B74 MOV X2, X31
	0x03DD8B78 STR X8, [X31 + 0x1D0]
	0x03DD8B7C STR V0, [X31 + 0x1C]
	0x03DD8B80 BL 0x3E00AE8
	0x03DD8B84 TBZ X0, 0x0, 0x3DD8C34
	0x03DD8B88 CBZ X19, 0x3DD9BF0
	0x03DD8B8C MOV X0, X19
	0x03DD8B90 MOV X1, X31
	0x03DD8B94 ADD X23, X25, 0x3C
	0x03DD8B98 ADD X24, X26, 0x3C
	0x03DD8B9C BL 0x3DE89D4
	0x03DD8BA0 LDR X8, [X23 + 0x10]
	0x03DD8BA4 LDR V0, [X23]
	0x03DD8BA8 STR X8, [X31 + 0x130]
	0x03DD8BAC STR V0, [X31 + 0x12]
	0x03DD8BB0 LDR X8, [X24 + 0x10]
	0x03DD8BB4 LDR V0, [X24]
	0x03DD8BB8 STR X8, [X31 + 0x110]
	0x03DD8BBC STR V0, [X31 + 0x10]
	0x03DD8BC0 CBZ X0, 0x3DD9BF0
	0x03DD8BC4 LDR V0, [X31 + 0x12]
	0x03DD8BC8 LDR X8, [X31 + 0x130]
	0x03DD8BCC LDR V1, [X31 + 0x10]
	0x03DD8BD0 LDR X9, [X31 + 0x110]
	0x03DD8BD4 STR V0, [X31 + 0x1A]
	0x03DD8BD8 STR X8, [X31 + 0x1B0]
	0x03DD8BDC STR V1, [X31 + 0x18]
	0x03DD8BE0 STR X9, [X31 + 0x190]
	0x03DD8BE4 ADRP X10, 0x345000
	0x03DD8BE8 LDR X8, [X0]
	0x03DD8BEC LDR X10, [X10 + 0xED0]
	0x03DD8BF0 LDR X26, [X31 + 0x30]
	0x03DD8BF4 MOV X25, X0
	0x03DD8BF8 LDRH W9, [X8 + 0x12E]
	0x03DD8BFC LDR X1, [X10]
	0x03DD8C00 CBZ X9, 0x3DD8C24
	0x03DD8C04 LDR X10, [X8 + 0xB0]
	0x03DD8C08 ADD X10, X10, 0x8
	0x03DD8C0C LDUR X11, [X10 - 0x8]
	0x03DD8C10 CMP X11, X1
	0x03DD8C14 B.EQ 0x3DD8C3C
	0x03DD8C18 SUBS X9, X9, 0x1
	0x03DD8C1C ADD X10, X10, 0x10
	0x03DD8C20 B.NE 0x3DD8C0C
	0x03DD8C24 MOVZ W2, 0xA
	0x03DD8C28 MOV X0, X25
	0x03DD8C2C BL 0x1C5C788
	0x03DD8C30 B 0x3DD8C4C
	0x03DD8C34 LDR X26, [X31 + 0x30]
	0x03DD8C38 B 0x3DD8CB0
	0x03DD8C3C LDR W9, [X10]
	0x03DD8C40 ADD W9, W9, 0xA
	0x03DD8C44 ADD X8, X8, W9, 0x4, SXTW
	0x03DD8C48 ADD X0, X8, 0x138
	0x03DD8C4C LDR V0, [X31 + 0x1A]
	0x03DD8C50 LDR X9, [X31 + 0x1B0]
	0x03DD8C54 LDR V1, [X31 + 0x18]
	0x03DD8C58 LDR X10, [X31 + 0x190]
	0x03DD8C5C LDR X8, [X0]
	0x03DD8C60 STR V0, [X31 + 0x3A]
	0x03DD8C64 STR X9, [X31 + 0x3B0]
	0x03DD8C68 STR V1, [X31 + 0x38]
	0x03DD8C6C STR X10, [X31 + 0x390]
	0x03DD8C70 LDR X7, [X0 + 0x8]
	0x03DD8C74 MOVZ W9, 0x2
	0x03DD8C78 MOVK W9, 0x50000
	0x03DD8C7C ORR W1, W9, 0x1
	0x03DD8C80 ADD X2, X31, 0x3A0
	0x03DD8C84 ADD X3, X31, 0x380
	0x03DD8C88 MOV X0, X25
	0x03DD8C8C MOV W4, W22
	0x03DD8C90 MOV W5, W21
	0x03DD8C94 MOV X6, X29
	0x03DD8C98 BLR X8
	0x03DD8C9C LDR W9, [X31 + 0x3C]
	0x03DD8CA0 AND W8, W0, 0x1
	0x03DD8CA4 ORR W20, W20, W0, 0x0
	0x03DD8CA8 ORR W9, W9, W8, 0x0
	0x03DD8CAC STR W9, [X31 + 0x3C]
	0x03DD8CB0 ADRP X8, 0x391000
	0x03DD8CB4 LDR X8, [X8 + 0x460]
	0x03DD8CB8 LDR X1, [X26 + 0x28]
	0x03DD8CBC ADD X23, X28, 0x28
	0x03DD8CC0 MOV X0, X23
	0x03DD8CC4 LDR X2, [X8]
	0x03DD8CC8 BL 0x266DCFC
	0x03DD8CCC TBZ X0, 0x0, 0x3DD8CD8
	0x03DD8CD0 LDR W29, [X31 + 0x3C]
	0x03DD8CD4 B 0x3DD9B98
	0x03DD8CD8 ADRP X25, 0x38D000
	0x03DD8CDC LDR X25, [X25 + 0x360]
	0x03DD8CE0 MOV X0, X23
	0x03DD8CE4 LDR X1, [X25]
	0x03DD8CE8 BL 0x266DB18
	0x03DD8CEC LDR X1, [X25]
	0x03DD8CF0 MOV X24, X0
	0x03DD8CF4 ADD X0, X26, 0x28
	0x03DD8CF8 BL 0x266DB18
	0x03DD8CFC LDP D0, D3, [X0]
	0x03DD8D00 LDP D1, D2, [X24]
	0x03DD8D04 ADRP X8, 0xFFFFFFFFFCD11000
	0x03DD8D08 LDR V8, [X8 + 0xF20]
	0x03DD8D0C MOV X23, X0
	0x03DD8D10 FSUB V0.2S, V1.2S, V0.2S
	0x00000000 INVALID
	0x03DD8D18 FSUB V1.2S, V2.2S, V3.2S
	0x03DD8D1C UNIMPLEMENTED
	0x00000000 INVALID
	0x03DD8D24 FADD V0.2S, V0.2S, V2.2S
	0x03DD8D28 FADD V0.2S, V1.2S, V0.2S
	0x03DD8D2C UNIMPLEMENTED
	0x03DD8D30 FADD V0.2S, V1.2S, V0.2S
	0x03DD8D34 FCMP S0, S8
	0x03DD8D38 STR S8, [X31 + 0x30]
	0x03DD8D3C B.MI 0x3DD8E18
	0x03DD8D40 CBZ X19, 0x3DD9BF0
	0x03DD8D44 MOV X0, X19
	0x03DD8D48 MOV X1, X31
	0x03DD8D4C BL 0x3DE89D4
	0x03DD8D50 CBZ X0, 0x3DD9BF0
	0x03DD8D54 ADRP X10, 0x345000
	0x03DD8D58 LDP S9, S8, [X23 + 0x8]
	0x03DD8D5C LDP S11, S10, [X23]
	0x03DD8D60 LDP S13, S12, [X24 + 0x8]
	0x03DD8D64 LDR X8, [X0]
	0x03DD8D68 LDP S15, S14, [X24]
	0x03DD8D6C LDR X10, [X10 + 0xED0]
	0x03DD8D70 MOV X25, X0
	0x03DD8D74 LDRH W9, [X8 + 0x12E]
	0x03DD8D78 LDR X1, [X10]
	0x03DD8D7C CBZ X9, 0x3DD8DA0
	0x03DD8D80 LDR X10, [X8 + 0xB0]
	0x03DD8D84 ADD X10, X10, 0x8
	0x03DD8D88 LDUR X11, [X10 - 0x8]
	0x03DD8D8C CMP X11, X1
	0x03DD8D90 B.EQ 0x3DD8DB0
	0x03DD8D94 SUBS X9, X9, 0x1
	0x03DD8D98 ADD X10, X10, 0x10
	0x03DD8D9C B.NE 0x3DD8D88
	0x03DD8DA0 MOVZ W2, 0x3
	0x03DD8DA4 MOV X0, X25
	0x03DD8DA8 BL 0x1C5C788
	0x03DD8DAC B 0x3DD8DC0
	0x03DD8DB0 LDR W9, [X10]
	0x03DD8DB4 ADD W9, W9, 0x3
	0x03DD8DB8 ADD X8, X8, W9, 0x4, SXTW
	0x03DD8DBC ADD X0, X8, 0x138
	0x03DD8DC0 LDP X8, X5, [X0]
	0x03DD8DC4 MOVZ W1, 0x70000
	0x03DD8DC8 MOV X0, X25
	0x03DD8DCC MOV V0.16B, V15.16B
	0x03DD8DD0 MOV V1.16B, V14.16B
	0x03DD8DD4 MOV V2.16B, V13.16B
	0x03DD8DD8 MOV V3.16B, V12.16B
	0x03DD8DDC MOV V4.16B, V11.16B
	0x03DD8DE0 MOV V5.16B, V10.16B
	0x03DD8DE4 MOV V6.16B, V9.16B
	0x03DD8DE8 MOV V7.16B, V8.16B
	0x03DD8DEC MOV W2, W22
	0x03DD8DF0 MOV W3, W21
	0x03DD8DF4 MOV X4, X29
	0x03DD8DF8 BLR X8
	0x03DD8DFC LDR W9, [X31 + 0x3C]
	0x03DD8E00 LDR V8, [X31 + 0x30]
	0x03DD8E04 ANDS W31, W0, 0x1
	0x03DD8E08 ORR W20, W20, W0, 0x0
	0x03DD8E0C ORR W8, W9, 0x8
	0x03DD8E10 CSEL W9, W8, W9, NE
	0x03DD8E14 STR W9, [X31 + 0x3C]
	0x03DD8E18 LDP V1, V0, [X24 + 0x10]
	0x03DD8E1C ADD X0, X31, 0x160
	0x03DD8E20 ADD X1, X31, 0x140
	0x03DD8E24 MOV X2, X31
	0x03DD8E28 STP V1, V0, [X31 + 0x3A0]
	0x03DD8E2C LDP V2, V3, [X23 + 0x10]
	0x03DD8E30 STP V1, V0, [X31 + 0x160]
	0x03DD8E34 STP V2, V3, [X31 + 0x380]
	0x03DD8E38 STP V2, V3, [X31 + 0x140]
	0x03DD8E3C BL 0x3DE2858
	0x03DD8E40 TBZ X0, 0x0, 0x3DD8F1C
	0x03DD8E44 CBZ X19, 0x3DD9BF0
	0x03DD8E48 MOV X0, X19
	0x03DD8E4C MOV X1, X31
	0x03DD8E50 ADD X26, X24, 0x10
	0x03DD8E54 ADD X27, X23, 0x10
	0x03DD8E58 BL 0x3DE89D4
	0x03DD8E5C LDP V1, V0, [X26]
	0x03DD8E60 STP V1, V0, [X31 + 0x120]
	0x03DD8E64 LDP V1, V0, [X27]
	0x03DD8E68 STP V1, V0, [X31 + 0x100]
	0x03DD8E6C CBZ X0, 0x3DD9BF0
	0x03DD8E70 LDP V0, V1, [X31 + 0x120]
	0x03DD8E74 LDP V2, V3, [X31 + 0x100]
	0x03DD8E78 ADRP X10, 0x345000
	0x03DD8E7C MOV X25, X0
	0x03DD8E80 STP V0, V1, [X31 + 0xE0]
	0x03DD8E84 STP V2, V3, [X31 + 0xC0]
	0x03DD8E88 LDR X8, [X0]
	0x03DD8E8C LDR X10, [X10 + 0xED0]
	0x03DD8E90 LDRH W9, [X8 + 0x12E]
	0x03DD8E94 LDR X1, [X10]
	0x03DD8E98 CBZ X9, 0x3DD8EBC
	0x03DD8E9C LDR X10, [X8 + 0xB0]
	0x03DD8EA0 ADD X10, X10, 0x8
	0x03DD8EA4 LDUR X11, [X10 - 0x8]
	0x03DD8EA8 CMP X11, X1
	0x03DD8EAC B.EQ 0x3DD8ECC
	0x03DD8EB0 SUBS X9, X9, 0x1
	0x03DD8EB4 ADD X10, X10, 0x10
	0x03DD8EB8 B.NE 0x3DD8EA4
	0x03DD8EBC MOVZ W2, 0x5
	0x03DD8EC0 MOV X0, X25
	0x03DD8EC4 BL 0x1C5C788
	0x03DD8EC8 B 0x3DD8EDC
	0x03DD8ECC LDR W9, [X10]
	0x03DD8ED0 ADD W9, W9, 0x5
	0x03DD8ED4 ADD X8, X8, W9, 0x4, SXTW
	0x03DD8ED8 ADD X0, X8, 0x138
	0x03DD8EDC LDP V0, V1, [X31 + 0xE0]
	0x03DD8EE0 LDP V2, V3, [X31 + 0xC0]
	0x03DD8EE4 LDR X8, [X0]
	0x03DD8EE8 MOVZ W1, 0x1
	0x03DD8EEC STP V0, V1, [X31 + 0x3A0]
	0x03DD8EF0 STP V2, V3, [X31 + 0x380]
	0x03DD8EF4 LDR X7, [X0 + 0x8]
	0x03DD8EF8 ADD X2, X31, 0x3A0
	0x03DD8EFC ADD X3, X31, 0x380
	0x03DD8F00 MOVK W1, 0x70000
	0x03DD8F04 MOV X0, X25
	0x03DD8F08 MOV W4, W22
	0x03DD8F0C MOV W5, W21
	0x03DD8F10 MOV X6, X29
	0x03DD8F14 BLR X8
	0x03DD8F18 ORR W20, W20, W0, 0x0
	0x03DD8F1C LDR X0, [X24 + 0x30]
	0x03DD8F20 LDR W1, [X24 + 0x38]
	0x03DD8F24 LDR X2, [X23 + 0x30]
	0x03DD8F28 LDR W3, [X23 + 0x38]
	0x03DD8F2C MOV X4, X31
	0x03DD8F30 BL 0x3CE9440
	0x03DD8F34 TBZ X0, 0x0, 0x3DD8FB0
	0x03DD8F38 CBZ X19, 0x3DD9BF0
	0x03DD8F3C MOV X0, X19
	0x03DD8F40 MOV X1, X31
	0x03DD8F44 MOV W22, W21
	0x03DD8F48 MOV X28, X29
	0x03DD8F4C BL 0x3DE89D4
	0x03DD8F50 CBZ X0, 0x3DD9BF0
	0x03DD8F54 ADRP X10, 0x345000
	0x03DD8F58 LDR W25, [X23 + 0x38]
	0x03DD8F5C LDR X27, [X23 + 0x30]
	0x03DD8F60 LDR X8, [X0]
	0x03DD8F64 LDR W21, [X24 + 0x38]
	0x03DD8F68 LDR X29, [X24 + 0x30]
	0x03DD8F6C LDR X10, [X10 + 0xED0]
	0x03DD8F70 LDRH W9, [X8 + 0x12E]
	0x03DD8F74 MOV X26, X0
	0x03DD8F78 LDR X1, [X10]
	0x03DD8F7C CBZ X9, 0x3DD8FA0
	0x03DD8F80 LDR X10, [X8 + 0xB0]
	0x03DD8F84 ADD X10, X10, 0x8
	0x03DD8F88 LDUR X11, [X10 - 0x8]
	0x03DD8F8C CMP X11, X1
	0x03DD8F90 B.EQ 0x3DD8FB8
	0x03DD8F94 SUBS X9, X9, 0x1
	0x03DD8F98 ADD X10, X10, 0x10
	0x03DD8F9C B.NE 0x3DD8F88
	0x03DD8FA0 MOVZ W2, 0xD
	0x03DD8FA4 MOV X0, X26
	0x03DD8FA8 BL 0x1C5C788
	0x03DD8FAC B 0x3DD8FC8
	0x03DD8FB0 MOV X28, X29
	0x03DD8FB4 B 0x3DD9004
	0x03DD8FB8 LDR W9, [X10]
	0x03DD8FBC ADD W9, W9, 0xD
	0x03DD8FC0 ADD X8, X8, W9, 0x4, SXTW
	0x03DD8FC4 ADD X0, X8, 0x138
	0x03DD8FC8 LDP X8, X9, [X0]
	0x03DD8FCC LDR W6, [X31 + 0x38]
	0x03DD8FD0 MOVZ W10, 0x1
	0x03DD8FD4 MOVK W10, 0x70000
	0x03DD8FD8 ADD W1, W10, 0x1
	0x03DD8FDC MOV X0, X26
	0x03DD8FE0 MOV X2, X29
	0x03DD8FE4 MOV X3, X21
	0x03DD8FE8 MOV X4, X27
	0x03DD8FEC MOV X5, X25
	0x03DD8FF0 MOV W7, W22
	0x03DD8FF4 STP X28, X9, [X31]
	0x03DD8FF8 MOV W21, W22
	0x03DD8FFC BLR X8
	0x03DD9000 ORR W20, W20, W0, 0x0
	0x03DD9004 LDUR X0, [X24 + 0x3C]
	0x03DD9008 LDR W1, [X24 + 0x44]
	0x03DD900C LDUR X2, [X23 + 0x3C]
	0x03DD9010 LDR W3, [X23 + 0x44]
	0x03DD9014 MOV X4, X31
	0x03DD9018 BL 0x3CE9440
	0x03DD901C LDR W29, [X31 + 0x3C]
	0x03DD9020 TBZ X0, 0x0, 0x3DD90E8
	0x03DD9024 CBZ X19, 0x3DD9BF0
	0x03DD9028 MOV X0, X19
	0x03DD902C MOV X1, X31
	0x03DD9030 MOV W22, W21
	0x03DD9034 BL 0x3DE89D4
	0x03DD9038 CBZ X0, 0x3DD9BF0
	0x03DD903C ADRP X10, 0x344000
	0x03DD9040 LDR W25, [X23 + 0x44]
	0x03DD9044 LDUR X27, [X23 + 0x3C]
	0x03DD9048 LDR X8, [X0]
	0x03DD904C LDR W21, [X24 + 0x44]
	0x03DD9050 LDUR X29, [X24 + 0x3C]
	0x03DD9054 LDR X10, [X10 + 0xED0]
	0x03DD9058 LDRH W9, [X8 + 0x12E]
	0x03DD905C MOV X26, X0
	0x03DD9060 LDR X1, [X10]
	0x03DD9064 CBZ X9, 0x3DD9088
	0x03DD9068 LDR X10, [X8 + 0xB0]
	0x03DD906C ADD X10, X10, 0x8
	0x03DD9070 LDUR X11, [X10 - 0x8]
	0x03DD9074 CMP X11, X1
	0x03DD9078 B.EQ 0x3DD9098
	0x03DD907C SUBS X9, X9, 0x1
	0x03DD9080 ADD X10, X10, 0x10
	0x03DD9084 B.NE 0x3DD9070
	0x03DD9088 MOVZ W2, 0xD
	0x03DD908C MOV X0, X26
	0x03DD9090 BL 0x1C5C788
	0x03DD9094 B 0x3DD90A8
	0x03DD9098 LDR W9, [X10]
	0x03DD909C ADD W9, W9, 0xD
	0x03DD90A0 ADD X8, X8, W9, 0x4, SXTW
	0x03DD90A4 ADD X0, X8, 0x138
	0x03DD90A8 LDP X8, X9, [X0]
	0x03DD90AC LDR W6, [X31 + 0x38]
	0x03DD90B0 MOVZ W10, 0x1
	0x03DD90B4 MOVK W10, 0x70000
	0x03DD90B8 ADD W1, W10, 0x2
	0x03DD90BC MOV X0, X26
	0x03DD90C0 MOV X2, X29
	0x03DD90C4 MOV X3, X21
	0x03DD90C8 MOV X4, X27
	0x03DD90CC MOV X5, X25
	0x03DD90D0 MOV W7, W22
	0x03DD90D4 STP X28, X9, [X31]
	0x03DD90D8 MOV W21, W22
	0x03DD90DC BLR X8
	0x03DD90E0 LDR W29, [X31 + 0x3C]
	0x03DD90E4 ORR W20, W20, W0, 0x0
	0x03DD90E8 LDR X0, [X24 + 0x48]
	0x03DD90EC LDR X1, [X23 + 0x48]
	0x03DD90F0 MOV X2, X31
	0x03DD90F4 BL 0x3CE9B58
	0x03DD90F8 TBZ X0, 0x0, 0x3DD9168
	0x03DD90FC LDR W22, [X31 + 0x38]
	0x03DD9100 CBZ X19, 0x3DD9BF0
	0x03DD9104 MOV X0, X19
	0x03DD9108 MOV X1, X31
	0x03DD910C BL 0x3DE89D4
	0x03DD9110 CBZ X0, 0x3DD9BF0
	0x03DD9114 ADRP X10, 0x344000
	0x03DD9118 LDR X8, [X0]
	0x03DD911C LDR X27, [X24 + 0x48]
	0x03DD9120 LDR X26, [X23 + 0x48]
	0x03DD9124 LDR X10, [X10 + 0xED0]
	0x03DD9128 LDRH W9, [X8 + 0x12E]
	0x03DD912C MOV X25, X0
	0x03DD9130 LDR X1, [X10]
	0x03DD9134 CBZ X9, 0x3DD9158
	0x03DD9138 LDR X10, [X8 + 0xB0]
	0x03DD913C ADD X10, X10, 0x8
	0x03DD9140 LDUR X11, [X10 - 0x8]
	0x03DD9144 CMP X11, X1
	0x03DD9148 B.EQ 0x3DD9170
	0x03DD914C SUBS X9, X9, 0x1
	0x03DD9150 ADD X10, X10, 0x10
	0x03DD9154 B.NE 0x3DD9140
	0x03DD9158 MOVZ W2, 0xE
	0x03DD915C MOV X0, X25
	0x03DD9160 BL 0x1C5C788
	0x03DD9164 B 0x3DD9180
	0x03DD9168 LDR W22, [X31 + 0x38]
	0x03DD916C B 0x3DD91B0
	0x03DD9170 LDR W9, [X10]
	0x03DD9174 ADD W9, W9, 0xE
	0x03DD9178 ADD X8, X8, W9, 0x4, SXTW
	0x03DD917C ADD X0, X8, 0x138
	0x03DD9180 LDP X8, X7, [X0]
	0x03DD9184 MOVZ W9, 0x1
	0x03DD9188 MOVK W9, 0x70000
	0x03DD918C ADD W1, W9, 0x3
	0x03DD9190 MOV X0, X25
	0x03DD9194 MOV X2, X27
	0x03DD9198 MOV X3, X26
	0x03DD919C MOV W4, W22
	0x03DD91A0 MOV W5, W21
	0x03DD91A4 MOV X6, X28
	0x03DD91A8 BLR X8
	0x03DD91AC ORR W20, W20, W0, 0x0
	0x03DD91B0 LDR W8, [X24 + 0x60]
	0x03DD91B4 LDR V0, [X24 + 0x5]
	0x03DD91B8 ADD X0, X31, 0xA0
	0x03DD91BC ADD X1, X31, 0x80
	0x03DD91C0 STR W8, [X31 + 0xB0]
	0x03DD91C4 STR V0, [X31 + 0xA]
	0x03DD91C8 LDR W8, [X23 + 0x60]
	0x03DD91CC LDR V0, [X23 + 0x5]
	0x03DD91D0 MOV X2, X31
	0x03DD91D4 STR W8, [X31 + 0x90]
	0x03DD91D8 STR V0, [X31 + 0x8]
	0x03DD91DC BL 0x3CE9E34
	0x03DD91E0 TBZ X0, 0x0, 0x3DD92F0
	0x03DD91E4 CBZ X19, 0x3DD9BF0
	0x03DD91E8 MOV X0, X19
	0x03DD91EC MOV X1, X31
	0x03DD91F0 ADD X26, X24, 0x50
	0x03DD91F4 ADD X27, X23, 0x50
	0x03DD91F8 BL 0x3DE89D4
	0x03DD91FC LDR W8, [X26 + 0x10]
	0x03DD9200 LDR V0, [X26]
	0x03DD9204 STR W8, [X31 + 0x130]
	0x03DD9208 STR V0, [X31 + 0x12]
	0x03DD920C LDR W8, [X27 + 0x10]
	0x03DD9210 LDR V0, [X27]
	0x03DD9214 STR W8, [X31 + 0x110]
	0x03DD9218 STR V0, [X31 + 0x10]
	0x03DD921C CBZ X0, 0x3DD9BF0
	0x03DD9220 LDR V0, [X31 + 0x12]
	0x03DD9224 LDR W8, [X31 + 0x130]
	0x03DD9228 LDR V1, [X31 + 0x10]
	0x03DD922C LDR W9, [X31 + 0x110]
	0x03DD9230 STR V0, [X31 + 0x6]
	0x03DD9234 STR W8, [X31 + 0x70]
	0x03DD9238 STR V1, [X31 + 0x4]
	0x03DD923C STR W9, [X31 + 0x50]
	0x03DD9240 ADRP X10, 0x344000
	0x03DD9244 LDR X8, [X0]
	0x03DD9248 LDR X10, [X10 + 0xED0]
	0x03DD924C MOV X25, X0
	0x03DD9250 LDRH W9, [X8 + 0x12E]
	0x03DD9254 LDR X1, [X10]
	0x03DD9258 CBZ X9, 0x3DD927C
	0x03DD925C LDR X10, [X8 + 0xB0]
	0x03DD9260 ADD X10, X10, 0x8
	0x03DD9264 LDUR X11, [X10 - 0x8]
	0x03DD9268 CMP X11, X1
	0x03DD926C B.EQ 0x3DD928C
	0x03DD9270 SUBS X9, X9, 0x1
	0x03DD9274 ADD X10, X10, 0x10
	0x03DD9278 B.NE 0x3DD9264
	0x03DD927C MOVZ W2, 0xF
	0x03DD9280 MOV X0, X25
	0x03DD9284 BL 0x1C5C788
	0x03DD9288 B 0x3DD929C
	0x03DD928C LDR W9, [X10]
	0x03DD9290 ADD W9, W9, 0xF
	0x03DD9294 ADD X8, X8, W9, 0x4, SXTW
	0x03DD9298 ADD X0, X8, 0x138
	0x03DD929C LDR V0, [X31 + 0x6]
	0x03DD92A0 LDR W9, [X31 + 0x70]
	0x03DD92A4 LDR V1, [X31 + 0x4]
	0x03DD92A8 LDR W10, [X31 + 0x50]
	0x03DD92AC LDR X8, [X0]
	0x03DD92B0 STR V0, [X31 + 0x3A]
	0x03DD92B4 STR W9, [X31 + 0x3B0]
	0x03DD92B8 STR V1, [X31 + 0x38]
	0x03DD92BC STR W10, [X31 + 0x390]
	0x03DD92C0 LDR X7, [X0 + 0x8]
	0x03DD92C4 MOVZ W9, 0x1
	0x03DD92C8 MOVK W9, 0x70000
	0x03DD92CC ADD W1, W9, 0x4
	0x03DD92D0 ADD X2, X31, 0x3A0
	0x03DD92D4 ADD X3, X31, 0x380
	0x03DD92D8 MOV X0, X25
	0x03DD92DC MOV W4, W22
	0x03DD92E0 MOV W5, W21
	0x03DD92E4 MOV X6, X28
	0x03DD92E8 BLR X8
	0x03DD92EC ORR W20, W20, W0, 0x0
	0x03DD92F0 LDUR V0, [X24 + 0x64]
	0x03DD92F4 LDUR V2, [X23 + 0x64]
	0x03DD92F8 LDUR V1, [X24 + 0x6C]
	0x03DD92FC LDUR V3, [X23 + 0x6C]
	0x03DD9300 FSUB V0.2S, V0.2S, V2.2S
	0x00000000 INVALID
	0x03DD9308 FSUB V1.2S, V1.2S, V3.2S
	0x03DD930C UNIMPLEMENTED
	0x00000000 INVALID
	0x03DD9314 FADD V0.2S, V0.2S, V2.2S
	0x03DD9318 FADD V0.2S, V1.2S, V0.2S
	0x03DD931C UNIMPLEMENTED
	0x03DD9320 FADD V0.2S, V1.2S, V0.2S
	0x03DD9324 FCMP S0, S8
	0x03DD9328 B.MI 0x3DD9404
	0x03DD932C CBZ X19, 0x3DD9BF0
	0x03DD9330 MOV X0, X19
	0x03DD9334 MOV X1, X31
	0x03DD9338 BL 0x3DE89D4
	0x03DD933C CBZ X0, 0x3DD9BF0
	0x03DD9340 ADRP X10, 0x344000
	0x03DD9344 LDP S9, S8, [X23 + 0x6C]
	0x03DD9348 LDP S11, S10, [X23 + 0x64]
	0x03DD934C LDP S13, S12, [X24 + 0x6C]
	0x03DD9350 LDR X8, [X0]
	0x03DD9354 LDP S15, S14, [X24 + 0x64]
	0x03DD9358 LDR X10, [X10 + 0xED0]
	0x03DD935C MOV X25, X0
	0x03DD9360 LDRH W9, [X8 + 0x12E]
	0x03DD9364 LDR X1, [X10]
	0x03DD9368 CBZ X9, 0x3DD938C
	0x03DD936C LDR X10, [X8 + 0xB0]
	0x03DD9370 ADD X10, X10, 0x8
	0x03DD9374 LDUR X11, [X10 - 0x8]
	0x03DD9378 CMP X11, X1
	0x03DD937C B.EQ 0x3DD939C
	0x03DD9380 SUBS X9, X9, 0x1
	0x03DD9384 ADD X10, X10, 0x10
	0x03DD9388 B.NE 0x3DD9374
	0x03DD938C MOVZ W2, 0x3
	0x03DD9390 MOV X0, X25
	0x03DD9394 BL 0x1C5C788
	0x03DD9398 B 0x3DD93AC
	0x03DD939C LDR W9, [X10]
	0x03DD93A0 ADD W9, W9, 0x3
	0x03DD93A4 ADD X8, X8, W9, 0x4, SXTW
	0x03DD93A8 ADD X0, X8, 0x138
	0x03DD93AC LDP X8, X5, [X0]
	0x03DD93B0 MOVZ W9, 0x1
	0x03DD93B4 MOVK W9, 0x70000
	0x03DD93B8 ADD W1, W9, 0x5
	0x03DD93BC MOV X0, X25
	0x03DD93C0 MOV V0.16B, V15.16B
	0x03DD93C4 MOV V1.16B, V14.16B
	0x03DD93C8 MOV V2.16B, V13.16B
	0x03DD93CC MOV V3.16B, V12.16B
	0x03DD93D0 MOV V4.16B, V11.16B
	0x03DD93D4 MOV V5.16B, V10.16B
	0x03DD93D8 MOV V6.16B, V9.16B
	0x03DD93DC MOV V7.16B, V8.16B
	0x03DD93E0 MOV W2, W22
	0x03DD93E4 MOV W3, W21
	0x03DD93E8 MOV X4, X28
	0x03DD93EC BLR X8
	0x03DD93F0 LDR V8, [X31 + 0x30]
	0x03DD93F4 ORR W8, W29, 0x8
	0x03DD93F8 ANDS W31, W0, 0x1
	0x03DD93FC CSEL W29, W8, W29, NE
	0x03DD9400 ORR W20, W20, W0, 0x0
	0x03DD9404 LDUR X0, [X24 + 0x74]
	0x03DD9408 LDUR X1, [X23 + 0x74]
	0x03DD940C MOV X2, X31
	0x03DD9410 BL 0x3DFD53C
	0x03DD9414 TBZ X0, 0x0, 0x3DD94C0
	0x03DD9418 CBZ X19, 0x3DD9BF0
	0x03DD941C MOV X0, X19
	0x03DD9420 MOV X1, X31
	0x03DD9424 BL 0x3DE89D4
	0x03DD9428 CBZ X0, 0x3DD9BF0
	0x03DD942C ADRP X10, 0x344000
	0x03DD9430 LDR X8, [X0]
	0x03DD9434 LDUR X27, [X24 + 0x74]
	0x03DD9438 LDUR X26, [X23 + 0x74]
	0x03DD943C LDR X10, [X10 + 0xED0]
	0x03DD9440 LDRH W9, [X8 + 0x12E]
	0x03DD9444 MOV X25, X0
	0x03DD9448 LDR X1, [X10]
	0x03DD944C CBZ X9, 0x3DD9470
	0x03DD9450 LDR X10, [X8 + 0xB0]
	0x03DD9454 ADD X10, X10, 0x8
	0x03DD9458 LDUR X11, [X10 - 0x8]
	0x03DD945C CMP X11, X1
	0x03DD9460 B.EQ 0x3DD9480
	0x03DD9464 SUBS X9, X9, 0x1
	0x03DD9468 ADD X10, X10, 0x10
	0x03DD946C B.NE 0x3DD9458
	0x03DD9470 MOVZ W2, 0x2
	0x03DD9474 MOV X0, X25
	0x03DD9478 BL 0x1C5C788
	0x03DD947C B 0x3DD9490
	0x03DD9480 LDR W9, [X10]
	0x03DD9484 ADD W9, W9, 0x2
	0x03DD9488 ADD X8, X8, W9, 0x4, SXTW
	0x03DD948C ADD X0, X8, 0x138
	0x03DD9490 LDP X8, X7, [X0]
	0x03DD9494 MOVZ W9, 0x1
	0x03DD9498 MOVK W9, 0x70000
	0x03DD949C ADD W1, W9, 0x6
	0x03DD94A0 MOV X0, X25
	0x03DD94A4 MOV X2, X27
	0x03DD94A8 MOV X3, X26
	0x03DD94AC MOV W4, W22
	0x03DD94B0 MOV W5, W21
	0x03DD94B4 MOV X6, X28
	0x03DD94B8 BLR X8
	0x03DD94BC ORR W20, W20, W0, 0x0
	0x03DD94C0 LDUR X0, [X24 + 0x7C]
	0x03DD94C4 LDUR X1, [X23 + 0x7C]
	0x03DD94C8 MOV X2, X31
	0x03DD94CC BL 0x3DFD53C
	0x03DD94D0 TBZ X0, 0x0, 0x3DD957C
	0x03DD94D4 CBZ X19, 0x3DD9BF0
	0x03DD94D8 MOV X0, X19
	0x03DD94DC MOV X1, X31
	0x03DD94E0 BL 0x3DE89D4
	0x03DD94E4 CBZ X0, 0x3DD9BF0
	0x03DD94E8 ADRP X10, 0x344000
	0x03DD94EC LDR X8, [X0]
	0x03DD94F0 LDUR X27, [X24 + 0x7C]
	0x03DD94F4 LDUR X26, [X23 + 0x7C]
	0x03DD94F8 LDR X10, [X10 + 0xED0]
	0x03DD94FC LDRH W9, [X8 + 0x12E]
	0x03DD9500 MOV X25, X0
	0x03DD9504 LDR X1, [X10]
	0x03DD9508 CBZ X9, 0x3DD952C
	0x03DD950C LDR X10, [X8 + 0xB0]
	0x03DD9510 ADD X10, X10, 0x8
	0x03DD9514 LDUR X11, [X10 - 0x8]
	0x03DD9518 CMP X11, X1
	0x03DD951C B.EQ 0x3DD953C
	0x03DD9520 SUBS X9, X9, 0x1
	0x03DD9524 ADD X10, X10, 0x10
	0x03DD9528 B.NE 0x3DD9514
	0x03DD952C MOVZ W2, 0x2
	0x03DD9530 MOV X0, X25
	0x03DD9534 BL 0x1C5C788
	0x03DD9538 B 0x3DD954C
	0x03DD953C LDR W9, [X10]
	0x03DD9540 ADD W9, W9, 0x2
	0x03DD9544 ADD X8, X8, W9, 0x4, SXTW
	0x03DD9548 ADD X0, X8, 0x138
	0x03DD954C LDP X8, X7, [X0]
	0x03DD9550 MOVZ W9, 0x1
	0x03DD9554 MOVK W9, 0x70000
	0x03DD9558 ADD W1, W9, 0x7
	0x03DD955C MOV X0, X25
	0x03DD9560 MOV X2, X27
	0x03DD9564 MOV X3, X26
	0x03DD9568 MOV W4, W22
	0x03DD956C MOV W5, W21
	0x03DD9570 MOV X6, X28
	0x03DD9574 BLR X8
	0x03DD9578 ORR W20, W20, W0, 0x0
	0x03DD957C LDUR V0, [X24 + 0x84]
	0x03DD9580 LDUR V2, [X23 + 0x84]
	0x03DD9584 LDUR V1, [X24 + 0x8C]
	0x03DD9588 LDUR V3, [X23 + 0x8C]
	0x03DD958C FSUB V0.2S, V0.2S, V2.2S
	0x00000000 INVALID
	0x03DD9594 FSUB V1.2S, V1.2S, V3.2S
	0x03DD9598 UNIMPLEMENTED
	0x00000000 INVALID
	0x03DD95A0 FADD V0.2S, V0.2S, V2.2S
	0x03DD95A4 FADD V0.2S, V1.2S, V0.2S
	0x03DD95A8 UNIMPLEMENTED
	0x03DD95AC FADD V0.2S, V1.2S, V0.2S
	0x03DD95B0 FCMP S0, S8
	0x03DD95B4 B.MI 0x3DD9690
	0x03DD95B8 CBZ X19, 0x3DD9BF0
	0x03DD95BC MOV X0, X19
	0x03DD95C0 MOV X1, X31
	0x03DD95C4 BL 0x3DE89D4
	0x03DD95C8 CBZ X0, 0x3DD9BF0
	0x03DD95CC ADRP X10, 0x344000
	0x03DD95D0 LDP S9, S8, [X23 + 0x8C]
	0x03DD95D4 LDP S11, S10, [X23 + 0x84]
	0x03DD95D8 LDP S13, S12, [X24 + 0x8C]
	0x03DD95DC LDR X8, [X0]
	0x03DD95E0 LDP S15, S14, [X24 + 0x84]
	0x03DD95E4 LDR X10, [X10 + 0xED0]
	0x03DD95E8 MOV X25, X0
	0x03DD95EC LDRH W9, [X8 + 0x12E]
	0x03DD95F0 LDR X1, [X10]
	0x03DD95F4 CBZ X9, 0x3DD9618
	0x03DD95F8 LDR X10, [X8 + 0xB0]
	0x03DD95FC ADD X10, X10, 0x8
	0x03DD9600 LDUR X11, [X10 - 0x8]
	0x03DD9604 CMP X11, X1
	0x03DD9608 B.EQ 0x3DD9628
	0x03DD960C SUBS X9, X9, 0x1
	0x03DD9610 ADD X10, X10, 0x10
	0x03DD9614 B.NE 0x3DD9600
	0x03DD9618 MOVZ W2, 0x3
	0x03DD961C MOV X0, X25
	0x03DD9620 BL 0x1C5C788
	0x03DD9624 B 0x3DD9638
	0x03DD9628 LDR W9, [X10]
	0x03DD962C ADD W9, W9, 0x3
	0x03DD9630 ADD X8, X8, W9, 0x4, SXTW
	0x03DD9634 ADD X0, X8, 0x138
	0x03DD9638 LDP X8, X5, [X0]
	0x03DD963C MOVZ W9, 0x1
	0x03DD9640 MOVK W9, 0x70000
	0x03DD9644 ADD W1, W9, 0x8
	0x03DD9648 MOV X0, X25
	0x03DD964C MOV V0.16B, V15.16B
	0x03DD9650 MOV V1.16B, V14.16B
	0x03DD9654 MOV V2.16B, V13.16B
	0x03DD9658 MOV V3.16B, V12.16B
	0x03DD965C MOV V4.16B, V11.16B
	0x03DD9660 MOV V5.16B, V10.16B
	0x03DD9664 MOV V6.16B, V9.16B
	0x03DD9668 MOV V7.16B, V8.16B
	0x03DD966C MOV W2, W22
	0x03DD9670 MOV W3, W21
	0x03DD9674 MOV X4, X28
	0x03DD9678 BLR X8
	0x03DD967C LDR V8, [X31 + 0x30]
	0x03DD9680 ORR W8, W29, 0x8
	0x03DD9684 ANDS W31, W0, 0x1
	0x03DD9688 CSEL W29, W8, W29, NE
	0x03DD968C ORR W20, W20, W0, 0x0
	0x03DD9690 LDUR V0, [X24 + 0x94]
	0x03DD9694 LDUR V2, [X23 + 0x94]
	0x03DD9698 LDUR V1, [X24 + 0x9C]
	0x03DD969C LDUR V3, [X23 + 0x9C]
	0x03DD96A0 FSUB V0.2S, V0.2S, V2.2S
	0x00000000 INVALID
	0x03DD96A8 FSUB V1.2S, V1.2S, V3.2S
	0x03DD96AC UNIMPLEMENTED
	0x00000000 INVALID
	0x03DD96B4 FADD V0.2S, V0.2S, V2.2S
	0x03DD96B8 FADD V0.2S, V1.2S, V0.2S
	0x03DD96BC UNIMPLEMENTED
	0x03DD96C0 FADD V0.2S, V1.2S, V0.2S
	0x03DD96C4 FCMP S0, S8
	0x03DD96C8 B.MI 0x3DD97A4
	0x03DD96CC CBZ X19, 0x3DD9BF0
	0x03DD96D0 MOV X0, X19
	0x03DD96D4 MOV X1, X31
	0x03DD96D8 BL 0x3DE89D4
	0x03DD96DC CBZ X0, 0x3DD9BF0
	0x03DD96E0 ADRP X10, 0x344000
	0x03DD96E4 LDP S9, S8, [X23 + 0x9C]
	0x03DD96E8 LDP S11, S10, [X23 + 0x94]
	0x03DD96EC LDP S13, S12, [X24 + 0x9C]
	0x03DD96F0 LDR X8, [X0]
	0x03DD96F4 LDP S15, S14, [X24 + 0x94]
	0x03DD96F8 LDR X10, [X10 + 0xED0]
	0x03DD96FC MOV X25, X0
	0x03DD9700 LDRH W9, [X8 + 0x12E]
	0x03DD9704 LDR X1, [X10]
	0x03DD9708 CBZ X9, 0x3DD972C
	0x03DD970C LDR X10, [X8 + 0xB0]
	0x03DD9710 ADD X10, X10, 0x8
	0x03DD9714 LDUR X11, [X10 - 0x8]
	0x03DD9718 CMP X11, X1
	0x03DD971C B.EQ 0x3DD973C
	0x03DD9720 SUBS X9, X9, 0x1
	0x03DD9724 ADD X10, X10, 0x10
	0x03DD9728 B.NE 0x3DD9714
	0x03DD972C MOVZ W2, 0x3
	0x03DD9730 MOV X0, X25
	0x03DD9734 BL 0x1C5C788
	0x03DD9738 B 0x3DD974C
	0x03DD973C LDR W9, [X10]
	0x03DD9740 ADD W9, W9, 0x3
	0x03DD9744 ADD X8, X8, W9, 0x4, SXTW
	0x03DD9748 ADD X0, X8, 0x138
	0x03DD974C LDP X8, X5, [X0]
	0x03DD9750 MOVZ W9, 0x1
	0x03DD9754 MOVK W9, 0x70000
	0x03DD9758 ADD W1, W9, 0x9
	0x03DD975C MOV X0, X25
	0x03DD9760 MOV V0.16B, V15.16B
	0x03DD9764 MOV V1.16B, V14.16B
	0x03DD9768 MOV V2.16B, V13.16B
	0x03DD976C MOV V3.16B, V12.16B
	0x03DD9770 MOV V4.16B, V11.16B
	0x03DD9774 MOV V5.16B, V10.16B
	0x03DD9778 MOV V6.16B, V9.16B
	0x03DD977C MOV V7.16B, V8.16B
	0x03DD9780 MOV W2, W22
	0x03DD9784 MOV W3, W21
	0x03DD9788 MOV X4, X28
	0x03DD978C BLR X8
	0x03DD9790 LDR V8, [X31 + 0x30]
	0x03DD9794 ORR W8, W29, 0x8
	0x03DD9798 ANDS W31, W0, 0x1
	0x03DD979C CSEL W29, W8, W29, NE
	0x03DD97A0 ORR W20, W20, W0, 0x0
	0x03DD97A4 LDUR V0, [X24 + 0xA4]
	0x03DD97A8 LDUR V2, [X23 + 0xA4]
	0x03DD97AC LDUR V1, [X24 + 0xAC]
	0x03DD97B0 LDUR V3, [X23 + 0xAC]
	0x03DD97B4 FSUB V0.2S, V0.2S, V2.2S
	0x00000000 INVALID
	0x03DD97BC FSUB V1.2S, V1.2S, V3.2S
	0x03DD97C0 UNIMPLEMENTED
	0x00000000 INVALID
	0x03DD97C8 FADD V0.2S, V0.2S, V2.2S
	0x03DD97CC FADD V0.2S, V1.2S, V0.2S
	0x03DD97D0 UNIMPLEMENTED
	0x03DD97D4 FADD V0.2S, V1.2S, V0.2S
	0x03DD97D8 FCMP S0, S8
	0x03DD97DC B.MI 0x3DD98B4
	0x03DD97E0 CBZ X19, 0x3DD9BF0
	0x03DD97E4 MOV X0, X19
	0x03DD97E8 MOV X1, X31
	0x03DD97EC BL 0x3DE89D4
	0x03DD97F0 CBZ X0, 0x3DD9BF0
	0x03DD97F4 ADRP X10, 0x344000
	0x03DD97F8 LDP S9, S8, [X23 + 0xAC]
	0x03DD97FC LDP S11, S10, [X23 + 0xA4]
	0x03DD9800 LDP S13, S12, [X24 + 0xAC]
	0x03DD9804 LDR X8, [X0]
	0x03DD9808 LDP S15, S14, [X24 + 0xA4]
	0x03DD980C LDR X10, [X10 + 0xED0]
	0x03DD9810 MOV X25, X0
	0x03DD9814 LDRH W9, [X8 + 0x12E]
	0x03DD9818 LDR X1, [X10]
	0x03DD981C CBZ X9, 0x3DD9840
	0x03DD9820 LDR X10, [X8 + 0xB0]
	0x03DD9824 ADD X10, X10, 0x8
	0x03DD9828 LDUR X11, [X10 - 0x8]
	0x03DD982C CMP X11, X1
	0x03DD9830 B.EQ 0x3DD9850
	0x03DD9834 SUBS X9, X9, 0x1
	0x03DD9838 ADD X10, X10, 0x10
	0x03DD983C B.NE 0x3DD9828
	0x03DD9840 MOVZ W2, 0x3
	0x03DD9844 MOV X0, X25
	0x03DD9848 BL 0x1C5C788
	0x03DD984C B 0x3DD9860
	0x03DD9850 LDR W9, [X10]
	0x03DD9854 ADD W9, W9, 0x3
	0x03DD9858 ADD X8, X8, W9, 0x4, SXTW
	0x03DD985C ADD X0, X8, 0x138
	0x03DD9860 LDP X8, X5, [X0]
	0x03DD9864 MOVZ W9, 0x1
	0x03DD9868 MOVK W9, 0x70000
	0x03DD986C ADD W1, W9, 0xA
	0x03DD9870 MOV X0, X25
	0x03DD9874 MOV V0.16B, V15.16B
	0x03DD9878 MOV V1.16B, V14.16B
	0x03DD987C MOV V2.16B, V13.16B
	0x03DD9880 MOV V3.16B, V12.16B
	0x03DD9884 MOV V4.16B, V11.16B
	0x03DD9888 MOV V5.16B, V10.16B
	0x03DD988C MOV V6.16B, V9.16B
	0x03DD9890 MOV V7.16B, V8.16B
	0x03DD9894 MOV W2, W22
	0x03DD9898 MOV W3, W21
	0x03DD989C MOV X4, X28
	0x03DD98A0 BLR X8
	0x03DD98A4 ORR W8, W29, 0x8
	0x03DD98A8 ANDS W31, W0, 0x1
	0x03DD98AC CSEL W29, W8, W29, NE
	0x03DD98B0 ORR W20, W20, W0, 0x0
	0x03DD98B4 LDUR X0, [X24 + 0xB4]
	0x03DD98B8 LDUR X1, [X23 + 0xB4]
	0x03DD98BC MOV X2, X31
	0x03DD98C0 BL 0x3DFD53C
	0x03DD98C4 TBZ X0, 0x0, 0x3DD9970
	0x03DD98C8 CBZ X19, 0x3DD9BF0
	0x03DD98CC MOV X0, X19
	0x03DD98D0 MOV X1, X31
	0x03DD98D4 BL 0x3DE89D4
	0x03DD98D8 CBZ X0, 0x3DD9BF0
	0x03DD98DC ADRP X10, 0x344000
	0x03DD98E0 LDR X8, [X0]
	0x03DD98E4 LDUR X27, [X24 + 0xB4]
	0x03DD98E8 LDUR X26, [X23 + 0xB4]
	0x03DD98EC LDR X10, [X10 + 0xED0]
	0x03DD98F0 LDRH W9, [X8 + 0x12E]
	0x03DD98F4 MOV X25, X0
	0x03DD98F8 LDR X1, [X10]
	0x03DD98FC CBZ X9, 0x3DD9920
	0x03DD9900 LDR X10, [X8 + 0xB0]
	0x03DD9904 ADD X10, X10, 0x8
	0x03DD9908 LDUR X11, [X10 - 0x8]
	0x03DD990C CMP X11, X1
	0x03DD9910 B.EQ 0x3DD9930
	0x03DD9914 SUBS X9, X9, 0x1
	0x03DD9918 ADD X10, X10, 0x10
	0x03DD991C B.NE 0x3DD9908
	0x03DD9920 MOVZ W2, 0x2
	0x03DD9924 MOV X0, X25
	0x03DD9928 BL 0x1C5C788
	0x03DD992C B 0x3DD9940
	0x03DD9930 LDR W9, [X10]
	0x03DD9934 ADD W9, W9, 0x2
	0x03DD9938 ADD X8, X8, W9, 0x4, SXTW
	0x03DD993C ADD X0, X8, 0x138
	0x03DD9940 LDP X8, X7, [X0]
	0x03DD9944 MOVZ W9, 0x1
	0x03DD9948 MOVK W9, 0x70000
	0x03DD994C ADD W1, W9, 0xB
	0x03DD9950 MOV X0, X25
	0x03DD9954 MOV X2, X27
	0x03DD9958 MOV X3, X26
	0x03DD995C MOV W4, W22
	0x03DD9960 MOV W5, W21
	0x03DD9964 MOV X6, X28
	0x03DD9968 BLR X8
	0x03DD996C ORR W20, W20, W0, 0x0
	0x03DD9970 LDUR X0, [X24 + 0xBC]
	0x03DD9974 LDUR X1, [X23 + 0xBC]
	0x03DD9978 MOV X2, X31
	0x03DD997C BL 0x3DFD53C
	0x03DD9980 TBZ X0, 0x0, 0x3DD9A2C
	0x03DD9984 CBZ X19, 0x3DD9BF0
	0x03DD9988 MOV X0, X19
	0x03DD998C MOV X1, X31
	0x03DD9990 BL 0x3DE89D4
	0x03DD9994 CBZ X0, 0x3DD9BF0
	0x03DD9998 ADRP X10, 0x344000
	0x03DD999C LDR X8, [X0]
	0x03DD99A0 LDUR X27, [X24 + 0xBC]
	0x03DD99A4 LDUR X26, [X23 + 0xBC]
	0x03DD99A8 LDR X10, [X10 + 0xED0]
	0x03DD99AC LDRH W9, [X8 + 0x12E]
	0x03DD99B0 MOV X25, X0
	0x03DD99B4 LDR X1, [X10]
	0x03DD99B8 CBZ X9, 0x3DD99DC
	0x03DD99BC LDR X10, [X8 + 0xB0]
	0x03DD99C0 ADD X10, X10, 0x8
	0x03DD99C4 LDUR X11, [X10 - 0x8]
	0x03DD99C8 CMP X11, X1
	0x03DD99CC B.EQ 0x3DD99EC
	0x03DD99D0 SUBS X9, X9, 0x1
	0x03DD99D4 ADD X10, X10, 0x10
	0x03DD99D8 B.NE 0x3DD99C4
	0x03DD99DC MOVZ W2, 0x2
	0x03DD99E0 MOV X0, X25
	0x03DD99E4 BL 0x1C5C788
	0x03DD99E8 B 0x3DD99FC
	0x03DD99EC LDR W9, [X10]
	0x03DD99F0 ADD W9, W9, 0x2
	0x03DD99F4 ADD X8, X8, W9, 0x4, SXTW
	0x03DD99F8 ADD X0, X8, 0x138
	0x03DD99FC LDP X8, X7, [X0]
	0x03DD9A00 MOVZ W9, 0x1
	0x03DD9A04 MOVK W9, 0x70000
	0x03DD9A08 ADD W1, W9, 0xC
	0x03DD9A0C MOV X0, X25
	0x03DD9A10 MOV X2, X27
	0x03DD9A14 MOV X3, X26
	0x03DD9A18 MOV W4, W22
	0x03DD9A1C MOV W5, W21
	0x03DD9A20 MOV X6, X28
	0x03DD9A24 BLR X8
	0x03DD9A28 ORR W20, W20, W0, 0x0
	0x03DD9A2C LDR V0, [X24 + 0xC4]
	0x03DD9A30 LDR V1, [X23 + 0xC4]
	0x03DD9A34 FCMP S0, S1
	0x03DD9A38 B.EQ 0x3DD9AE0
	0x03DD9A3C CBZ X19, 0x3DD9BF0
	0x03DD9A40 MOV X0, X19
	0x03DD9A44 MOV X1, X31
	0x03DD9A48 BL 0x3DE89D4
	0x03DD9A4C CBZ X0, 0x3DD9BF0
	0x03DD9A50 ADRP X10, 0x344000
	0x03DD9A54 LDR X8, [X0]
	0x03DD9A58 LDR V9, [X24 + 0xC4]
	0x03DD9A5C LDR V8, [X23 + 0xC4]
	0x03DD9A60 LDR X10, [X10 + 0xED0]
	0x03DD9A64 LDRH W9, [X8 + 0x12E]
	0x03DD9A68 MOV X25, X0
	0x03DD9A6C LDR X1, [X10]
	0x03DD9A70 CBZ X9, 0x3DD9A94
	0x03DD9A74 LDR X10, [X8 + 0xB0]
	0x03DD9A78 ADD X10, X10, 0x8
	0x03DD9A7C LDUR X11, [X10 - 0x8]
	0x03DD9A80 CMP X11, X1
	0x03DD9A84 B.EQ 0x3DD9AA4
	0x03DD9A88 SUBS X9, X9, 0x1
	0x03DD9A8C ADD X10, X10, 0x10
	0x03DD9A90 B.NE 0x3DD9A7C
	0x03DD9A94 MOV X0, X25
	0x03DD9A98 MOV W2, W31
	0x03DD9A9C BL 0x1C5C788
	0x03DD9AA0 B 0x3DD9AB0
	0x03DD9AA4 LDRSW X9, [X10]
	0x03DD9AA8 ADD X8, X8, X9, 0x4, LSL
	0x03DD9AAC ADD X0, X8, 0x138
	0x03DD9AB0 LDP X8, X5, [X0]
	0x03DD9AB4 MOVZ W9, 0x1
	0x03DD9AB8 MOVK W9, 0x70000
	0x03DD9ABC ADD W1, W9, 0xD
	0x03DD9AC0 MOV X0, X25
	0x03DD9AC4 MOV V0.16B, V9.16B
	0x03DD9AC8 MOV V1.16B, V8.16B
	0x03DD9ACC MOV W2, W22
	0x03DD9AD0 MOV W3, W21
	0x03DD9AD4 MOV X4, X28
	0x03DD9AD8 BLR X8
	0x03DD9ADC ORR W20, W20, W0, 0x0
	0x03DD9AE0 LDR W8, [X24 + 0xC8]
	0x03DD9AE4 LDR W9, [X23 + 0xC8]
	0x03DD9AE8 CMP W8, W9
	0x03DD9AEC B.EQ 0x3DD9B98
	0x03DD9AF0 CBZ X19, 0x3DD9BF0
	0x03DD9AF4 MOV X0, X19
	0x03DD9AF8 MOV X1, X31
	0x03DD9AFC BL 0x3DE89D4
	0x03DD9B00 CBZ X0, 0x3DD9BF0
	0x03DD9B04 ADRP X10, 0x344000
	0x03DD9B08 LDR X8, [X0]
	0x03DD9B0C LDR W24, [X24 + 0xC8]
	0x03DD9B10 LDR W23, [X23 + 0xC8]
	0x03DD9B14 LDR X10, [X10 + 0xED0]
	0x03DD9B18 LDRH W9, [X8 + 0x12E]
	0x03DD9B1C MOV X25, X0
	0x03DD9B20 LDR X1, [X10]
	0x03DD9B24 CBZ X9, 0x3DD9B48
	0x03DD9B28 LDR X10, [X8 + 0xB0]
	0x03DD9B2C ADD X10, X10, 0x8
	0x03DD9B30 LDUR X11, [X10 - 0x8]
	0x03DD9B34 CMP X11, X1
	0x03DD9B38 B.EQ 0x3DD9B58
	0x03DD9B3C SUBS X9, X9, 0x1
	0x03DD9B40 ADD X10, X10, 0x10
	0x03DD9B44 B.NE 0x3DD9B30
	0x03DD9B48 MOVZ W2, 0x4
	0x03DD9B4C MOV X0, X25
	0x03DD9B50 BL 0x1C5C788
	0x03DD9B54 B 0x3DD9B68
	0x03DD9B58 LDR W9, [X10]
	0x03DD9B5C ADD W9, W9, 0x4
	0x03DD9B60 ADD X8, X8, W9, 0x4, SXTW
	0x03DD9B64 ADD X0, X8, 0x138
	0x03DD9B68 LDP X8, X7, [X0]
	0x03DD9B6C MOVZ W9, 0x1
	0x03DD9B70 MOVK W9, 0x70000
	0x03DD9B74 ADD W1, W9, 0xE
	0x03DD9B78 MOV X0, X25
	0x03DD9B7C MOV W2, W24
	0x03DD9B80 MOV W3, W23
	0x03DD9B84 MOV W4, W22
	0x03DD9B88 MOV W5, W21
	0x03DD9B8C MOV X6, X28
	0x03DD9B90 BLR X8
	0x03DD9B94 ORR W20, W20, W0, 0x0
	0x03DD9B98 CBZ W29, 0x3DD9BBC
	0x03DD9B9C CBZ X19, 0x3DD9BF0
	0x03DD9BA0 MOV X0, X19
	0x03DD9BA4 MOV X1, X31
	0x03DD9BA8 BL 0x3DEC0D4
	0x03DD9BAC ORR W1, W0, W29, 0x0
	0x03DD9BB0 MOV X0, X19
	0x03DD9BB4 MOV X2, X31
	0x03DD9BB8 BL 0x3DEC0FC
	0x03DD9BBC AND W0, W20, 0x1
	0x03DD9BC0 ADD X31, X31, 0x3C0
	0x03DD9BC4 LDP X20, X19, [X31 + 0x90]
	0x03DD9BC8 LDP X22, X21, [X31 + 0x80]
	0x03DD9BCC LDP X24, X23, [X31 + 0x70]
	0x03DD9BD0 LDP X26, X25, [X31 + 0x60]
	0x03DD9BD4 LDP X28, X27, [X31 + 0x50]
	0x03DD9BD8 LDP X29, X30, [X31 + 0x40]
	0x03DD9BDC LDP D9, D8, [X31 + 0x30]
	0x03DD9BE0 LDP D11, D10, [X31 + 0x20]
	0x03DD9BE4 LDP D13, D12, [X31 + 0x10]
	0x03DD9BE8 LDP D15, D14, [X31], #0xA0
	0x03DD9BEC RET
	0x03DD9BF0 BL 0x1C16F20
	0x03DD9BF4 SUB X31, X31, 0x1C0
	0x03DD9BF8 STP D15, D14, [X31 + 0x130]
	0x03DD9BFC STP D13, D12, [X31 + 0x140]
	0x03DD9C00 STP D11, D10, [X31 + 0x150]
	0x03DD9C04 STP D9, D8, [X31 + 0x160]
	0x03DD9C08 STP X29, X30, [X31 + 0x170]
	0x03DD9C0C STP X26, X25, [X31 + 0x180]
	0x03DD9C10 STP X24, X23, [X31 + 0x190]
	0x03DD9C14 STP X22, X21, [X31 + 0x1A0]
	0x03DD9C18 STP X20, X19, [X31 + 0x1B0]
	0x03DD9C1C ADRP X26, 0x60F000
	0x03DD9C20 LDRB W8, [X26 + 0x1BC]
	0x03DD9C24 MOV X19, X6
	0x03DD9C28 MOV W20, W5
	0x03DD9C2C MOV W21, W4
	0x03DD9C30 MOV X24, X3
	0x03DD9C34 MOV X23, X2
	0x03DD9C38 MOV W25, W1
	0x03DD9C3C MOV X22, X0
	0x03DD9C40 TBNZ X8, 0x0, 0x3DD9CA0
	0x03DD9C44 ADRP X0, 0x388000
	0x03DD9C48 LDR X0, [X0 + 0xFE8]
	0x03DD9C4C BL 0x1C16CF4
	0x03DD9C50 ADRP X0, 0x344000
	0x03DD9C54 LDR X0, [X0 + 0xED0]
	0x03DD9C58 BL 0x1C16CF4
	0x03DD9C5C ADRP X0, 0x38B000
	0x03DD9C60 LDR X0, [X0 + 0x358]
	0x03DD9C64 BL 0x1C16CF4
	0x03DD9C68 ADRP X0, 0x38C000
	0x03DD9C6C LDR X0, [X0 + 0x360]
	0x03DD9C70 BL 0x1C16CF4
	0x03DD9C74 ADRP X0, 0x38C000
	0x03DD9C78 LDR X0, [X0 + 0x358]
	0x03DD9C7C BL 0x1C16CF4
	0x03DD9C80 ADRP X0, 0x38C000
	0x03DD9C84 LDR X0, [X0 + 0x370]
	0x03DD9C88 BL 0x1C16CF4
	0x03DD9C8C ADRP X0, 0x38C000
	0x03DD9C90 LDR X0, [X0 + 0x368]
	0x03DD9C94 BL 0x1C16CF4
	0x03DD9C98 MOVZ W8, 0x1
	0x03DD9C9C STRB W8, [X26 + 0x1BC]
	0x03DD9CA0 MOVZ W26, 0x20
	0x03DD9CA4 MOVK W26, 0x20000
	0x03DD9CA8 MOVI V0.2D, 0x0
	0x03DD9CAC CMP W25, W26
	0x03DD9CB0 STP V0, V0, [X31 + 0xD0]
	0x03DD9CB4 STP V0, V0, [X31 + 0xB0]
	0x03DD9CB8 STP V0, V0, [X31 + 0x90]
	0x03DD9CBC B.LE 0x3DD9D28
	0x03DD9CC0 SUB W8, W25, 0x70000
	0x03DD9CC4 CMP W8, 0xF
	0x03DD9CC8 MOV W0, W31
	0x03DD9CCC B.HI 0x3DD9D80
	0x03DD9CD0 ADRP X9, 0xFFFFFFFFFCDBF000
	0x03DD9CD4 ADD X9, X9, 0x496
	0x03DD9CD8 ADR X10, 0x10
	0x03DD9CDC LDRH W11, [X9, X8, LSL #1]
	0x03DD9CE0 ADD X10, X10, X11, 0x2, LSL
	0x03DD9CE4 BR X10
	0x03DD9CE8 LDR W8, [X24 + 0x4]
	0x03DD9CEC CMP W8, 0x4
	0x03DD9CF0 B.NE 0x3DDABFC
	0x03DD9CF4 ADRP X8, 0x38B000
	0x03DD9CF8 LDR X8, [X8 + 0x358]
	0x03DD9CFC LDR X0, [X8]
	0x03DD9D00 LDR W8, [X0 + 0xE0]
	0x03DD9D04 CBNZ W8, 0x3DD9D0C
	0x03DD9D08 BL 0x1C16DFC
	0x03DD9D0C MOV X0, X31
	0x03DD9D10 BL 0x3D4510C
	0x03DD9D14 MOV V8.16B, V0.16B
	0x03DD9D18 MOV V9.16B, V1.16B
	0x03DD9D1C MOV V10.16B, V2.16B
	0x03DD9D20 MOV V11.16B, V3.16B
	0x03DD9D24 B 0x3DDAC04
	0x03DD9D28 SUB W8, W25, 0x20000
	0x03DD9D2C CMP W8, 0x20
	0x03DD9D30 B.HI 0x3DD9DDC
	0x03DD9D34 ADRP X9, 0xFFFFFFFFFCDBF000
	0x03DD9D38 ADD X9, X9, 0x442
	0x03DD9D3C ADR X10, 0x10
	0x03DD9D40 LDRH W11, [X9, X8, LSL #1]
	0x03DD9D44 ADD X10, X10, X11, 0x2, LSL
	0x03DD9D48 BR X10
	0x03DD9D4C LDR W8, [X24 + 0x4]
	0x03DD9D50 CMP W8, 0x4
	0x03DD9D54 B.NE 0x3DDC23C
	0x03DD9D58 ADRP X8, 0x38B000
	0x03DD9D5C LDR X8, [X8 + 0x358]
	0x03DD9D60 LDR X0, [X8]
	0x03DD9D64 LDR W8, [X0 + 0xE0]
	0x03DD9D68 CBNZ W8, 0x3DD9D70
	0x03DD9D6C BL 0x1C16DFC
	0x03DD9D70 MOV X0, X31
	0x03DD9D74 BL 0x3D44FA4
	0x03DD9D78 LDR W8, [X24 + 0x4]
	0x03DD9D7C B 0x3DDC258
	0x03DD9D80 MOVN W8, 0x30000
	0x03DD9D84 ADD W8, W25, W8
	0x03DD9D88 CMP W8, 0x8
	0x03DD9D8C B.HI 0x3DDDAC4
	0x03DD9D90 ADRP X9, 0xFFFFFFFFFCDBF000
	0x03DD9D94 ADD X9, X9, 0x484
	0x03DD9D98 ADR X10, 0x10
	0x03DD9D9C LDRH W11, [X9, X8, LSL #1]
	0x03DD9DA0 ADD X10, X10, X11, 0x2, LSL
	0x03DD9DA4 BR X10
	0x03DD9DA8 LDR W8, [X24 + 0x4]
	0x03DD9DAC CMP W8, 0x4
	0x03DD9DB0 B.NE 0x3DDB354
	0x03DD9DB4 ADRP X8, 0x38B000
	0x03DD9DB8 LDR X8, [X8 + 0x358]
	0x03DD9DBC LDR X0, [X8]
	0x03DD9DC0 LDR W8, [X0 + 0xE0]
	0x03DD9DC4 CBNZ W8, 0x3DD9DCC
	0x03DD9DC8 BL 0x1C16DFC
	0x03DD9DCC MOV X0, X31
	0x03DD9DD0 BL 0x3D468D4
	0x03DD9DD4 MOV W24, W0
	0x03DD9DD8 B 0x3DDB370
	0x03DD9DDC SUB W8, W25, 0x10000
	0x03DD9DE0 CMP W8, 0xD
	0x03DD9DE4 MOV W0, W31
	0x03DD9DE8 B.HI 0x3DDDAC4
	0x03DD9DEC ADRP X9, 0xFFFFFFFFFCDBF000
	0x03DD9DF0 ADD X9, X9, 0x426
	0x03DD9DF4 ADR X10, 0x10
	0x03DD9DF8 LDRH W11, [X9, X8, LSL #1]
	0x03DD9DFC ADD X10, X10, X11, 0x2, LSL
	0x03DD9E00 BR X10
	0x03DD9E04 LDR W8, [X24 + 0x4]
	0x03DD9E08 CMP W8, 0x4
	0x03DD9E0C B.NE 0x3DDBB84
	0x03DD9E10 ADRP X8, 0x38B000
	0x03DD9E14 LDR X8, [X8 + 0x358]
	0x03DD9E18 LDR X0, [X8]
	0x03DD9E1C LDR W8, [X0 + 0xE0]
	0x03DD9E20 CBNZ W8, 0x3DD9E28
	0x03DD9E24 BL 0x1C16DFC
	0x03DD9E28 MOV X0, X31
	0x03DD9E2C BL 0x3D45A30
	0x03DD9E30 MOV V8.16B, V0.16B
	0x03DD9E34 MOV V9.16B, V1.16B
	0x03DD9E38 MOV V10.16B, V2.16B
	0x03DD9E3C MOV V11.16B, V3.16B
	0x03DD9E40 B 0x3DDBB8C
	0x03DD9E44 LDR W8, [X24 + 0x4]
	0x03DD9E48 CMP W8, 0x4
	0x03DD9E4C B.NE 0x3DDAC80
	0x03DD9E50 ADRP X8, 0x38B000
	0x03DD9E54 LDR X8, [X8 + 0x358]
	0x03DD9E58 LDR X0, [X8]
	0x03DD9E5C LDR W8, [X0 + 0xE0]
	0x03DD9E60 CBNZ W8, 0x3DD9E68
	0x03DD9E64 BL 0x1C16DFC
	0x03DD9E68 ADD X8, X31, 0x110
	0x03DD9E6C MOV X0, X31
	0x03DD9E70 BL 0x3D45188
	0x03DD9E74 LDP V0, V1, [X31 + 0x110]
	0x03DD9E78 B 0x3DDD324
	0x03DD9E7C LDR W8, [X24 + 0x4]
	0x03DD9E80 CMP W8, 0x4
	0x03DD9E84 B.NE 0x3DDACB8
	0x03DD9E88 ADRP X8, 0x38B000
	0x03DD9E8C LDR X8, [X8 + 0x358]
	0x03DD9E90 LDR X0, [X8]
	0x03DD9E94 LDR W8, [X0 + 0xE0]
	0x03DD9E98 CBNZ W8, 0x3DD9EA0
	0x03DD9E9C BL 0x1C16DFC
	0x03DD9EA0 MOV X0, X31
	0x03DD9EA4 BL 0x3D45208
	0x03DD9EA8 MOV X25, X0
	0x03DD9EAC MOV X24, X1
	0x03DD9EB0 B 0x3DDACC0
	0x03DD9EB4 LDR W8, [X24 + 0x4]
	0x03DD9EB8 CMP W8, 0x4
	0x03DD9EBC B.NE 0x3DDAD40
	0x03DD9EC0 ADRP X8, 0x38B000
	0x03DD9EC4 LDR X8, [X8 + 0x358]
	0x03DD9EC8 LDR X0, [X8]
	0x03DD9ECC LDR W8, [X0 + 0xE0]
	0x03DD9ED0 CBNZ W8, 0x3DD9ED8
	0x03DD9ED4 BL 0x1C16DFC
	0x03DD9ED8 MOV X0, X31
	0x03DD9EDC BL 0x3D45288
	0x03DD9EE0 MOV X25, X0
	0x03DD9EE4 MOV X24, X1
	0x03DD9EE8 B 0x3DDAD48
	0x03DD9EEC LDR W8, [X24 + 0x4]
	0x03DD9EF0 CMP W8, 0x4
	0x03DD9EF4 B.NE 0x3DDADC8
	0x03DD9EF8 ADRP X8, 0x38B000
	0x03DD9EFC LDR X8, [X8 + 0x358]
	0x03DD9F00 LDR X0, [X8]
	0x03DD9F04 LDR W8, [X0 + 0xE0]
	0x03DD9F08 CBNZ W8, 0x3DD9F10
	0x03DD9F0C BL 0x1C16DFC
	0x03DD9F10 MOV X0, X31
	0x03DD9F14 BL 0x3D45308
	0x03DD9F18 MOV X24, X0
	0x03DD9F1C B 0x3DDADCC
	0x03DD9F20 LDR W8, [X24 + 0x4]
	0x03DD9F24 CMP W8, 0x4
	0x03DD9F28 B.NE 0x3DDAE44
	0x03DD9F2C ADRP X8, 0x38B000
	0x03DD9F30 LDR X8, [X8 + 0x358]
	0x03DD9F34 LDR X0, [X8]
	0x03DD9F38 LDR W8, [X0 + 0xE0]
	0x03DD9F3C CBNZ W8, 0x3DD9F44
	0x03DD9F40 BL 0x1C16DFC
	0x03DD9F44 MOV X0, X31
	0x03DD9F48 BL 0x3D45408
	0x03DD9F4C MOV V8.16B, V0.16B
	0x03DD9F50 MOV V9.16B, V1.16B
	0x03DD9F54 MOV V10.16B, V2.16B
	0x03DD9F58 MOV V11.16B, V3.16B
	0x03DD9F5C B 0x3DDAE4C
	0x03DD9F60 LDR W8, [X24 + 0x4]
	0x03DD9F64 CMP W8, 0x4
	0x03DD9F68 B.NE 0x3DDAEC8
	0x03DD9F6C ADRP X8, 0x38B000
	0x03DD9F70 LDR X8, [X8 + 0x358]
	0x03DD9F74 LDR X0, [X8]
	0x03DD9F78 LDR W8, [X0 + 0xE0]
	0x03DD9F7C CBNZ W8, 0x3DD9F84
	0x03DD9F80 BL 0x1C16DFC
	0x03DD9F84 MOV X0, X31
	0x03DD9F88 BL 0x3D45484
	0x03DD9F8C MOV X24, X0
	0x03DD9F90 B 0x3DDAECC
	0x03DD9F94 LDR W8, [X24 + 0x4]
	0x03DD9F98 CMP W8, 0x4
	0x03DD9F9C B.NE 0x3DDAF44
	0x03DD9FA0 ADRP X8, 0x38B000
	0x03DD9FA4 LDR X8, [X8 + 0x358]
	0x03DD9FA8 LDR X0, [X8]
	0x03DD9FAC LDR W8, [X0 + 0xE0]
	0x03DD9FB0 CBNZ W8, 0x3DD9FB8
	0x03DD9FB4 BL 0x1C16DFC
	0x03DD9FB8 MOV X0, X31
	0x03DD9FBC BL 0x3D454FC
	0x03DD9FC0 MOV X24, X0
	0x03DD9FC4 B 0x3DDAF48
	0x03DD9FC8 LDR W8, [X24 + 0x4]
	0x03DD9FCC CMP W8, 0x4
	0x03DD9FD0 B.NE 0x3DDAFC0
	0x03DD9FD4 ADRP X8, 0x38B000
	0x03DD9FD8 LDR X8, [X8 + 0x358]
	0x03DD9FDC LDR X0, [X8]
	0x03DD9FE0 LDR W8, [X0 + 0xE0]
	0x03DD9FE4 CBNZ W8, 0x3DD9FEC
	0x03DD9FE8 BL 0x1C16DFC
	0x03DD9FEC MOV X0, X31
	0x03DD9FF0 BL 0x3D455EC
	0x03DD9FF4 MOV V8.16B, V0.16B
	0x03DD9FF8 MOV V9.16B, V1.16B
	0x03DD9FFC MOV V10.16B, V2.16B
	0x03DDA000 MOV V11.16B, V3.16B
	0x03DDA004 B 0x3DDAFC8
	0x03DDA008 LDR W8, [X24 + 0x4]
	0x03DDA00C CMP W8, 0x4
	0x03DDA010 B.NE 0x3DDB044
	0x03DDA014 ADRP X8, 0x38A000
	0x03DDA018 LDR X8, [X8 + 0x358]
	0x03DDA01C LDR X0, [X8]
	0x03DDA020 LDR W8, [X0 + 0xE0]
	0x03DDA024 CBNZ W8, 0x3DDA02C
	0x03DDA028 BL 0x1C16DFC
	0x03DDA02C MOV X0, X31
	0x03DDA030 BL 0x3D456E0
	0x03DDA034 MOV V8.16B, V0.16B
	0x03DDA038 MOV V9.16B, V1.16B
	0x03DDA03C MOV V10.16B, V2.16B
	0x03DDA040 MOV V11.16B, V3.16B
	0x03DDA044 B 0x3DDB04C
	0x03DDA048 LDR W8, [X24 + 0x4]
	0x03DDA04C CMP W8, 0x4
	0x03DDA050 B.NE 0x3DDB0C8
	0x03DDA054 ADRP X8, 0x38A000
	0x03DDA058 LDR X8, [X8 + 0x358]
	0x03DDA05C LDR X0, [X8]
	0x03DDA060 LDR W8, [X0 + 0xE0]
	0x03DDA064 CBNZ W8, 0x3DDA06C
	0x03DDA068 BL 0x1C16DFC
	0x03DDA06C MOV X0, X31
	0x03DDA070 BL 0x3D457D4
	0x03DDA074 MOV V8.16B, V0.16B
	0x03DDA078 MOV V9.16B, V1.16B
	0x03DDA07C MOV V10.16B, V2.16B
	0x03DDA080 MOV V11.16B, V3.16B
	0x03DDA084 B 0x3DDB0D0
	0x03DDA088 LDR W8, [X24 + 0x4]
	0x03DDA08C CMP W8, 0x4
	0x03DDA090 B.NE 0x3DDB14C
	0x03DDA094 ADRP X8, 0x38A000
	0x03DDA098 LDR X8, [X8 + 0x358]
	0x03DDA09C LDR X0, [X8]
	0x03DDA0A0 LDR W8, [X0 + 0xE0]
	0x03DDA0A4 CBNZ W8, 0x3DDA0AC
	0x03DDA0A8 BL 0x1C16DFC
	0x03DDA0AC MOV X0, X31
	0x03DDA0B0 BL 0x3D45850
	0x03DDA0B4 MOV X24, X0
	0x03DDA0B8 B 0x3DDB150
	0x03DDA0BC LDR W8, [X24 + 0x4]
	0x03DDA0C0 CMP W8, 0x4
	0x03DDA0C4 B.NE 0x3DDB1C8
	0x03DDA0C8 ADRP X8, 0x38A000
	0x03DDA0CC LDR X8, [X8 + 0x358]
	0x03DDA0D0 LDR X0, [X8]
	0x03DDA0D4 LDR W8, [X0 + 0xE0]
	0x03DDA0D8 CBNZ W8, 0x3DDA0E0
	0x03DDA0DC BL 0x1C16DFC
	0x03DDA0E0 MOV X0, X31
	0x03DDA0E4 BL 0x3D458C8
	0x03DDA0E8 MOV X24, X0
	0x03DDA0EC B 0x3DDB1CC
	0x03DDA0F0 LDR W8, [X24 + 0x4]
	0x03DDA0F4 CMP W8, 0x4
	0x03DDA0F8 B.NE 0x3DDB244
	0x03DDA0FC ADRP X8, 0x38A000
	0x03DDA100 LDR X8, [X8 + 0x358]
	0x03DDA104 LDR X0, [X8]
	0x03DDA108 LDR W8, [X0 + 0xE0]
	0x03DDA10C CBNZ W8, 0x3DDA114
	0x03DDA110 BL 0x1C16DFC
	0x03DDA114 MOV X0, X31
	0x03DDA118 BL 0x3D46410
	0x03DDA11C MOV V8.16B, V0.16B
	0x03DDA120 B 0x3DDB248
	0x03DDA124 LDR W8, [X24 + 0x4]
	0x03DDA128 CMP W8, 0x4
	0x03DDA12C B.NE 0x3DDB2C0
	0x03DDA130 ADRP X8, 0x38A000
	0x03DDA134 LDR X8, [X8 + 0x358]
	0x03DDA138 LDR X0, [X8]
	0x03DDA13C LDR W8, [X0 + 0xE0]
	0x03DDA140 CBNZ W8, 0x3DDA148
	0x03DDA144 BL 0x1C16DFC
	0x03DDA148 MOV X0, X31
	0x03DDA14C BL 0x3D46488
	0x03DDA150 MOV W24, W0
	0x03DDA154 B 0x3DDB2DC
	0x03DDA158 LDR W8, [X24 + 0x4]
	0x03DDA15C CMP W8, 0x4
	0x03DDA160 B.NE 0x3DDB3E8
	0x03DDA164 ADRP X8, 0x38A000
	0x03DDA168 LDR X8, [X8 + 0x358]
	0x03DDA16C LDR X0, [X8]
	0x03DDA170 LDR W8, [X0 + 0xE0]
	0x03DDA174 CBNZ W8, 0x3DDA17C
	0x03DDA178 BL 0x1C16DFC
	0x03DDA17C MOV X0, X31
	0x03DDA180 BL 0x3D46D38
	0x03DDA184 MOV V8.16B, V0.16B
	0x03DDA188 MOV V9.16B, V1.16B
	0x03DDA18C MOV V10.16B, V2.16B
	0x03DDA190 MOV V11.16B, V3.16B
	0x03DDA194 B 0x3DDB3F0
	0x03DDA198 LDR W8, [X24 + 0x4]
	0x03DDA19C CMP W8, 0x4
	0x03DDA1A0 B.NE 0x3DDB46C
	0x03DDA1A4 ADRP X8, 0x38A000
	0x03DDA1A8 LDR X8, [X8 + 0x358]
	0x03DDA1AC LDR X0, [X8]
	0x03DDA1B0 LDR W8, [X0 + 0xE0]
	0x03DDA1B4 CBNZ W8, 0x3DDA1BC
	0x03DDA1B8 BL 0x1C16DFC
	0x03DDA1BC MOV X0, X31
	0x03DDA1C0 BL 0x3D46F14
	0x03DDA1C4 MOV W24, W0
	0x03DDA1C8 B 0x3DDB488
	0x03DDA1CC LDR W8, [X24 + 0x4]
	0x03DDA1D0 CMP W8, 0x4
	0x03DDA1D4 B.NE 0x3DDB500
	0x03DDA1D8 ADRP X8, 0x38A000
	0x03DDA1DC LDR X8, [X8 + 0x358]
	0x03DDA1E0 LDR X0, [X8]
	0x03DDA1E4 LDR W8, [X0 + 0xE0]
	0x03DDA1E8 CBNZ W8, 0x3DDA1F0
	0x03DDA1EC BL 0x1C16DFC
	0x03DDA1F0 MOV X0, X31
	0x03DDA1F4 BL 0x3D47000
	0x03DDA1F8 MOV W24, W0
	0x03DDA1FC B 0x3DDB51C
	0x03DDA200 LDR W8, [X24 + 0x4]
	0x03DDA204 CMP W8, 0x4
	0x03DDA208 B.NE 0x3DDB594
	0x03DDA20C ADRP X8, 0x38A000
	0x03DDA210 LDR X8, [X8 + 0x358]
	0x03DDA214 LDR X0, [X8]
	0x03DDA218 LDR W8, [X0 + 0xE0]
	0x03DDA21C CBNZ W8, 0x3DDA224
	0x03DDA220 BL 0x1C16DFC
	0x03DDA224 MOV X0, X31
	0x03DDA228 BL 0x3D47078
	0x03DDA22C MOV W24, W0
	0x03DDA230 B 0x3DDB5B0
	0x03DDA234 LDR W8, [X24 + 0x4]
	0x03DDA238 CMP W8, 0x4
	0x03DDA23C B.NE 0x3DDB628
	0x03DDA240 ADRP X8, 0x38A000
	0x03DDA244 LDR X8, [X8 + 0x358]
	0x03DDA248 LDR X0, [X8]
	0x03DDA24C LDR W8, [X0 + 0xE0]
	0x03DDA250 CBNZ W8, 0x3DDA258
	0x03DDA254 BL 0x1C16DFC
	0x03DDA258 MOV X0, X31
	0x03DDA25C BL 0x3D470F0
	0x03DDA260 MOV W24, W0
	0x03DDA264 B 0x3DDB644
	0x03DDA268 LDR W8, [X24 + 0x4]
	0x03DDA26C CMP W8, 0x4
	0x03DDA270 B.NE 0x3DDB6BC
	0x03DDA274 ADRP X8, 0x38A000
	0x03DDA278 LDR X8, [X8 + 0x358]
	0x03DDA27C LDR X0, [X8]
	0x03DDA280 LDR W8, [X0 + 0xE0]
	0x03DDA284 CBNZ W8, 0x3DDA28C
	0x03DDA288 BL 0x1C16DFC
	0x03DDA28C MOV X0, X31
	0x03DDA290 BL 0x3D47168
	0x03DDA294 MOV V8.16B, V0.16B
	0x03DDA298 B 0x3DDB6C0
	0x03DDA29C LDR W8, [X24 + 0x4]
	0x03DDA2A0 CMP W8, 0x4
	0x03DDA2A4 B.NE 0x3DDB738
	0x03DDA2A8 ADRP X8, 0x38A000
	0x03DDA2AC LDR X8, [X8 + 0x358]
	0x03DDA2B0 LDR X0, [X8]
	0x03DDA2B4 LDR W8, [X0 + 0xE0]
	0x03DDA2B8 CBNZ W8, 0x3DDA2C0
	0x03DDA2BC BL 0x1C16DFC
	0x03DDA2C0 MOV X0, X31
	0x03DDA2C4 BL 0x3D471E0
	0x03DDA2C8 MOV W24, W0
	0x03DDA2CC B 0x3DDB754
	0x03DDA2D0 LDR W8, [X24 + 0x4]
	0x03DDA2D4 CMP W8, 0x4
	0x03DDA2D8 B.NE 0x3DDB7CC
	0x03DDA2DC ADRP X8, 0x38A000
	0x03DDA2E0 LDR X8, [X8 + 0x358]
	0x03DDA2E4 LDR X0, [X8]
	0x03DDA2E8 LDR W8, [X0 + 0xE0]
	0x03DDA2EC CBNZ W8, 0x3DDA2F4
	0x03DDA2F0 BL 0x1C16DFC
	0x03DDA2F4 MOV X0, X31
	0x03DDA2F8 BL 0x3D473B8
	0x03DDA2FC MOV W24, W0
	0x03DDA300 B 0x3DDB7E8
	0x03DDA304 LDR W8, [X24 + 0x4]
	0x03DDA308 CMP W8, 0x4
	0x03DDA30C B.NE 0x3DDBC08
	0x03DDA310 ADRP X8, 0x38A000
	0x03DDA314 LDR X8, [X8 + 0x358]
	0x03DDA318 LDR X0, [X8]
	0x03DDA31C LDR W8, [X0 + 0xE0]
	0x03DDA320 CBNZ W8, 0x3DDA328
	0x03DDA324 BL 0x1C16DFC
	0x03DDA328 MOV X0, X31
	0x03DDA32C BL 0x3D45E00
	0x03DDA330 MOV X24, X0
	0x03DDA334 B 0x3DDBC0C
	0x03DDA338 LDR W8, [X24 + 0x4]
	0x03DDA33C CMP W8, 0x4
	0x03DDA340 B.NE 0x3DDBC84
	0x03DDA344 ADRP X8, 0x38A000
	0x03DDA348 LDR X8, [X8 + 0x358]
	0x03DDA34C LDR X0, [X8]
	0x03DDA350 LDR W8, [X0 + 0xE0]
	0x03DDA354 CBNZ W8, 0x3DDA35C
	0x03DDA358 BL 0x1C16DFC
	0x03DDA35C MOV X0, X31
	0x03DDA360 BL 0x3D45FDC
	0x03DDA364 MOV X24, X0
	0x03DDA368 B 0x3DDBC88
	0x03DDA36C LDR W8, [X24 + 0x4]
	0x03DDA370 CMP W8, 0x4
	0x03DDA374 B.NE 0x3DDBD00
	0x03DDA378 ADRP X8, 0x38A000
	0x03DDA37C LDR X8, [X8 + 0x358]
	0x03DDA380 LDR X0, [X8]
	0x03DDA384 LDR W8, [X0 + 0xE0]
	0x03DDA388 CBNZ W8, 0x3DDA390
	0x03DDA38C BL 0x1C16DFC
	0x03DDA390 MOV X0, X31
	0x03DDA394 BL 0x3D46DB4
	0x03DDA398 MOV X24, X0
	0x03DDA39C B 0x3DDDA14
	0x03DDA3A0 LDR W8, [X24 + 0x4]
	0x03DDA3A4 CMP W8, 0x4
	0x03DDA3A8 B.NE 0x3DDBD44
	0x03DDA3AC ADRP X8, 0x38A000
	0x03DDA3B0 LDR X8, [X8 + 0x358]
	0x03DDA3B4 LDR X0, [X8]
	0x03DDA3B8 LDR W8, [X0 + 0xE0]
	0x03DDA3BC CBNZ W8, 0x3DDA3C4
	0x03DDA3C0 BL 0x1C16DFC
	0x03DDA3C4 MOV X0, X31
	0x03DDA3C8 BL 0x3D46E28
	0x03DDA3CC B 0x3DDBD74
	0x03DDA3D0 LDR W8, [X24 + 0x4]
	0x03DDA3D4 CMP W8, 0x4
	0x03DDA3D8 B.NE 0x3DDBDF4
	0x03DDA3DC ADRP X8, 0x38A000
	0x03DDA3E0 LDR X8, [X8 + 0x358]
	0x03DDA3E4 LDR X0, [X8]
	0x03DDA3E8 LDR W8, [X0 + 0xE0]
	0x03DDA3EC CBNZ W8, 0x3DDA3F4
	0x03DDA3F0 BL 0x1C16DFC
	0x03DDA3F4 MOV X0, X31
	0x03DDA3F8 BL 0x3D46EA0
	0x03DDA3FC MOV W24, W0
	0x03DDA400 B 0x3DDBE10
	0x03DDA404 LDR W8, [X24 + 0x4]
	0x03DDA408 CMP W8, 0x4
	0x03DDA40C B.NE 0x3DDBE88
	0x03DDA410 ADRP X8, 0x38A000
	0x03DDA414 LDR X8, [X8 + 0x358]
	0x03DDA418 LDR X0, [X8]
	0x03DDA41C LDR W8, [X0 + 0xE0]
	0x03DDA420 CBNZ W8, 0x3DDA428
	0x03DDA424 BL 0x1C16DFC
	0x03DDA428 MOV X0, X31
	0x03DDA42C BL 0x3D46F8C
	0x03DDA430 MOV X24, X0
	0x03DDA434 B 0x3DDBE8C
	0x03DDA438 LDR W8, [X24 + 0x4]
	0x03DDA43C CMP W8, 0x4
	0x03DDA440 B.NE 0x3DDBF04
	0x03DDA444 ADRP X8, 0x38A000
	0x03DDA448 LDR X8, [X8 + 0x358]
	0x03DDA44C LDR X0, [X8]
	0x03DDA450 LDR W8, [X0 + 0xE0]
	0x03DDA454 CBNZ W8, 0x3DDA45C
	0x03DDA458 BL 0x1C16DFC
	0x03DDA45C MOV X0, X31
	0x03DDA460 BL 0x3D47258
	0x03DDA464 MOV W24, W0
	0x03DDA468 B 0x3DDBF20
	0x03DDA46C LDR W8, [X24 + 0x4]
	0x03DDA470 CMP W8, 0x4
	0x03DDA474 B.NE 0x3DDBF98
	0x03DDA478 ADRP X8, 0x38A000
	0x03DDA47C LDR X8, [X8 + 0x358]
	0x03DDA480 LDR X0, [X8]
	0x03DDA484 LDR W8, [X0 + 0xE0]
	0x03DDA488 CBNZ W8, 0x3DDA490
	0x03DDA48C BL 0x1C16DFC
	0x03DDA490 MOV X0, X31
	0x03DDA494 BL 0x3D472CC
	0x03DDA498 MOV V8.16B, V0.16B
	0x03DDA49C MOV V9.16B, V1.16B
	0x03DDA4A0 MOV V10.16B, V2.16B
	0x03DDA4A4 MOV V11.16B, V3.16B
	0x03DDA4A8 B 0x3DDBFA0
	0x03DDA4AC LDR W8, [X24 + 0x4]
	0x03DDA4B0 CMP W8, 0x4
	0x03DDA4B4 B.NE 0x3DDC01C
	0x03DDA4B8 ADRP X8, 0x38A000
	0x03DDA4BC LDR X8, [X8 + 0x358]
	0x03DDA4C0 LDR X0, [X8]
	0x03DDA4C4 LDR W8, [X0 + 0xE0]
	0x03DDA4C8 CBNZ W8, 0x3DDA4D0
	0x03DDA4CC BL 0x1C16DFC
	0x03DDA4D0 MOV X0, X31
	0x03DDA4D4 BL 0x3D47344
	0x03DDA4D8 MOV V8.16B, V0.16B
	0x03DDA4DC B 0x3DDC020
	0x03DDA4E0 LDR W8, [X24 + 0x4]
	0x03DDA4E4 CMP W8, 0x4
	0x03DDA4E8 B.NE 0x3DDC098
	0x03DDA4EC ADRP X8, 0x38A000
	0x03DDA4F0 LDR X8, [X8 + 0x358]
	0x03DDA4F4 LDR X0, [X8]
	0x03DDA4F8 LDR W8, [X0 + 0xE0]
	0x03DDA4FC CBNZ W8, 0x3DDA504
	0x03DDA500 BL 0x1C16DFC
	0x03DDA504 MOV X0, X31
	0x03DDA508 BL 0x3D47430
	0x03DDA50C MOV W24, W0
	0x03DDA510 B 0x3DDC0B4
	0x03DDA514 LDR W8, [X24 + 0x4]
	0x03DDA518 CMP W8, 0x4
	0x03DDA51C B.NE 0x3DDC12C
	0x03DDA520 ADRP X8, 0x38A000
	0x03DDA524 LDR X8, [X8 + 0x358]
	0x03DDA528 LDR X0, [X8]
	0x03DDA52C LDR W8, [X0 + 0xE0]
	0x03DDA530 CBNZ W8, 0x3DDA538
	0x03DDA534 BL 0x1C16DFC
	0x03DDA538 MOV X0, X31
	0x03DDA53C BL 0x3D474A4
	0x03DDA540 MOV W24, W0
	0x03DDA544 B 0x3DDC148
	0x03DDA548 LDR W8, [X24 + 0x4]
	0x03DDA54C CMP W8, 0x4
	0x03DDA550 B.NE 0x3DDC1C0
	0x03DDA554 ADRP X8, 0x38A000
	0x03DDA558 LDR X8, [X8 + 0x358]
	0x03DDA55C LDR X0, [X8]
	0x03DDA560 LDR W8, [X0 + 0xE0]
	0x03DDA564 CBNZ W8, 0x3DDA56C
	0x03DDA568 BL 0x1C16DFC
	0x03DDA56C MOV X0, X31
	0x03DDA570 BL 0x3D47590
	0x03DDA574 MOV X24, X0
	0x03DDA578 B 0x3DDC1C4
	0x03DDA57C LDR W8, [X24 + 0x4]
	0x03DDA580 CMP W8, 0x4
	0x03DDA584 B.NE 0x3DDC2D8
	0x03DDA588 ADRP X8, 0x38A000
	0x03DDA58C LDR X8, [X8 + 0x358]
	0x03DDA590 LDR X0, [X8]
	0x03DDA594 LDR W8, [X0 + 0xE0]
	0x03DDA598 CBNZ W8, 0x3DDA5A0
	0x03DDA59C BL 0x1C16DFC
	0x03DDA5A0 MOV X0, X31
	0x03DDA5A4 BL 0x3D4501C
	0x03DDA5A8 LDR W8, [X24 + 0x4]
	0x03DDA5AC B 0x3DDC2F4
	0x03DDA5B0 LDR W8, [X24 + 0x4]
	0x03DDA5B4 CMP W8, 0x4
	0x03DDA5B8 B.NE 0x3DDC374
	0x03DDA5BC ADRP X8, 0x38A000
	0x03DDA5C0 LDR X8, [X8 + 0x358]
	0x03DDA5C4 LDR X0, [X8]
	0x03DDA5C8 LDR W8, [X0 + 0xE0]
	0x03DDA5CC CBNZ W8, 0x3DDA5D4
	0x03DDA5D0 BL 0x1C16DFC
	0x03DDA5D4 MOV X0, X31
	0x03DDA5D8 BL 0x3D45094
	0x03DDA5DC LDR W8, [X24 + 0x4]
	0x03DDA5E0 B 0x3DDC390
	0x03DDA5E4 LDR W8, [X24 + 0x4]
	0x03DDA5E8 CMP W8, 0x4
	0x03DDA5EC B.NE 0x3DDC410
	0x03DDA5F0 ADRP X8, 0x38A000
	0x03DDA5F4 LDR X8, [X8 + 0x358]
	0x03DDA5F8 LDR X0, [X8]
	0x03DDA5FC LDR W8, [X0 + 0xE0]
	0x03DDA600 CBNZ W8, 0x3DDA608
	0x03DDA604 BL 0x1C16DFC
	0x03DDA608 MOV X0, X31
	0x03DDA60C BL 0x3D45574
	0x03DDA610 MOV V8.16B, V0.16B
	0x03DDA614 B 0x3DDC414
	0x03DDA618 LDR W8, [X24 + 0x4]
	0x03DDA61C CMP W8, 0x4
	0x03DDA620 B.NE 0x3DDC48C
	0x03DDA624 ADRP X8, 0x38A000
	0x03DDA628 LDR X8, [X8 + 0x358]
	0x03DDA62C LDR X0, [X8]
	0x03DDA630 LDR W8, [X0 + 0xE0]
	0x03DDA634 CBNZ W8, 0x3DDA63C
	0x03DDA638 BL 0x1C16DFC
	0x03DDA63C MOV X0, X31
	0x03DDA640 BL 0x3D45668
	0x03DDA644 MOV V8.16B, V0.16B
	0x03DDA648 B 0x3DDC490
	0x03DDA64C LDR W8, [X24 + 0x4]
	0x03DDA650 CMP W8, 0x4
	0x03DDA654 B.NE 0x3DDC508
	0x03DDA658 ADRP X8, 0x38A000
	0x03DDA65C LDR X8, [X8 + 0x358]
	0x03DDA660 LDR X0, [X8]
	0x03DDA664 LDR W8, [X0 + 0xE0]
	0x03DDA668 CBNZ W8, 0x3DDA670
	0x03DDA66C BL 0x1C16DFC
	0x03DDA670 MOV X0, X31
	0x03DDA674 BL 0x3D4575C
	0x03DDA678 MOV V8.16B, V0.16B
	0x03DDA67C B 0x3DDC50C
	0x03DDA680 LDR W8, [X24 + 0x4]
	0x03DDA684 CMP W8, 0x4
	0x03DDA688 B.NE 0x3DDC584
	0x03DDA68C ADRP X8, 0x38A000
	0x03DDA690 LDR X8, [X8 + 0x358]
	0x03DDA694 LDR X0, [X8]
	0x03DDA698 LDR W8, [X0 + 0xE0]
	0x03DDA69C CBNZ W8, 0x3DDA6A4
	0x03DDA6A0 BL 0x1C16DFC
	0x03DDA6A4 MOV X0, X31
	0x03DDA6A8 BL 0x3D45940
	0x03DDA6AC MOV V8.16B, V0.16B
	0x03DDA6B0 B 0x3DDC588
	0x03DDA6B4 LDR W8, [X24 + 0x4]
	0x03DDA6B8 CMP W8, 0x4
	0x03DDA6BC B.NE 0x3DDC600
	0x03DDA6C0 ADRP X8, 0x38A000
	0x03DDA6C4 LDR X8, [X8 + 0x358]
	0x03DDA6C8 LDR X0, [X8]
	0x03DDA6CC LDR W8, [X0 + 0xE0]
	0x03DDA6D0 CBNZ W8, 0x3DDA6D8
	0x03DDA6D4 BL 0x1C16DFC
	0x03DDA6D8 MOV X0, X31
	0x03DDA6DC BL 0x3D459B8
	0x03DDA6E0 MOV X24, X0
	0x03DDA6E4 B 0x3DDC604
	0x03DDA6E8 LDR W8, [X24 + 0x4]
	0x03DDA6EC CMP W8, 0x4
	0x03DDA6F0 B.NE 0x3DDC67C
	0x03DDA6F4 ADRP X8, 0x38A000
	0x03DDA6F8 LDR X8, [X8 + 0x358]
	0x03DDA6FC LDR X0, [X8]
	0x03DDA700 LDR W8, [X0 + 0xE0]
	0x03DDA704 CBNZ W8, 0x3DDA70C
	0x03DDA708 BL 0x1C16DFC
	0x03DDA70C MOV X0, X31
	0x03DDA710 BL 0x3D45B30
	0x03DDA714 LDR W8, [X24 + 0x4]
	0x03DDA718 B 0x3DDC698
	0x03DDA71C LDR W8, [X24 + 0x4]
	0x03DDA720 CMP W8, 0x4
	0x03DDA724 B.NE 0x3DDC718
	0x03DDA728 ADRP X8, 0x38A000
	0x03DDA72C LDR X8, [X8 + 0x358]
	0x03DDA730 LDR X0, [X8]
	0x03DDA734 LDR W8, [X0 + 0xE0]
	0x03DDA738 CBNZ W8, 0x3DDA740
	0x03DDA73C BL 0x1C16DFC
	0x03DDA740 MOV X0, X31
	0x03DDA744 BL 0x3D45BA8
	0x03DDA748 MOV X24, X0
	0x03DDA74C B 0x3DDC71C
	0x03DDA750 LDR W8, [X24 + 0x4]
	0x03DDA754 CMP W8, 0x4
	0x03DDA758 B.NE 0x3DDC794
	0x03DDA75C ADRP X8, 0x38A000
	0x03DDA760 LDR X8, [X8 + 0x358]
	0x03DDA764 LDR X0, [X8]
	0x03DDA768 LDR W8, [X0 + 0xE0]
	0x03DDA76C CBNZ W8, 0x3DDA774
	0x03DDA770 BL 0x1C16DFC
	0x03DDA774 MOV X0, X31
	0x03DDA778 BL 0x3D45C20
	0x03DDA77C MOV W24, W0
	0x03DDA780 B 0x3DDC7B0
	0x03DDA784 LDR W8, [X24 + 0x4]
	0x03DDA788 CMP W8, 0x4
	0x03DDA78C B.NE 0x3DDC828
	0x03DDA790 ADRP X8, 0x38A000
	0x03DDA794 LDR X8, [X8 + 0x358]
	0x03DDA798 LDR X0, [X8]
	0x03DDA79C LDR W8, [X0 + 0xE0]
	0x03DDA7A0 CBNZ W8, 0x3DDA7A8
	0x03DDA7A4 BL 0x1C16DFC
	0x03DDA7A8 MOV X0, X31
	0x03DDA7AC BL 0x3D45C98
	0x03DDA7B0 MOV V8.16B, V0.16B
	0x03DDA7B4 B 0x3DDC82C
	0x03DDA7B8 LDR W8, [X24 + 0x4]
	0x03DDA7BC CMP W8, 0x4
	0x03DDA7C0 B.NE 0x3DDC8A4
	0x03DDA7C4 ADRP X8, 0x38A000
	0x03DDA7C8 LDR X8, [X8 + 0x358]
	0x03DDA7CC LDR X0, [X8]
	0x03DDA7D0 LDR W8, [X0 + 0xE0]
	0x03DDA7D4 CBNZ W8, 0x3DDA7DC
	0x03DDA7D8 BL 0x1C16DFC
	0x03DDA7DC MOV X0, X31
	0x03DDA7E0 BL 0x3D45D10
	0x03DDA7E4 MOV V8.16B, V0.16B
	0x03DDA7E8 B 0x3DDC8A8
	0x03DDA7EC LDR W8, [X24 + 0x4]
	0x03DDA7F0 CMP W8, 0x4
	0x03DDA7F4 B.NE 0x3DDC920
	0x03DDA7F8 ADRP X8, 0x38A000
	0x03DDA7FC LDR X8, [X8 + 0x358]
	0x03DDA800 LDR X0, [X8]
	0x03DDA804 LDR W8, [X0 + 0xE0]
	0x03DDA808 CBNZ W8, 0x3DDA810
	0x03DDA80C BL 0x1C16DFC
	0x03DDA810 MOV X0, X31
	0x03DDA814 BL 0x3D45D88
	0x03DDA818 MOV W24, W0
	0x03DDA81C B 0x3DDC93C
	0x03DDA820 LDR W8, [X24 + 0x4]
	0x03DDA824 CMP W8, 0x4
	0x03DDA828 B.NE 0x3DDC9B4
	0x03DDA82C ADRP X8, 0x38A000
	0x03DDA830 LDR X8, [X8 + 0x358]
	0x03DDA834 LDR X0, [X8]
	0x03DDA838 LDR W8, [X0 + 0xE0]
	0x03DDA83C CBNZ W8, 0x3DDA844
	0x03DDA840 BL 0x1C16DFC
	0x03DDA844 MOV X0, X31
	0x03DDA848 BL 0x3D45E74
	0x03DDA84C MOV X24, X0
	0x03DDA850 B 0x3DDC9B8
	0x03DDA854 LDR W8, [X24 + 0x4]
	0x03DDA858 CMP W8, 0x4
	0x03DDA85C B.NE 0x3DDCA30
	0x03DDA860 ADRP X8, 0x38A000
	0x03DDA864 LDR X8, [X8 + 0x358]
	0x03DDA868 LDR X0, [X8]
	0x03DDA86C LDR W8, [X0 + 0xE0]
	0x03DDA870 CBNZ W8, 0x3DDA878
	0x03DDA874 BL 0x1C16DFC
	0x03DDA878 MOV X0, X31
	0x03DDA87C BL 0x3D45EEC
	0x03DDA880 MOV W24, W0
	0x03DDA884 B 0x3DDCA4C
	0x03DDA888 LDR W8, [X24 + 0x4]
	0x03DDA88C CMP W8, 0x4
	0x03DDA890 B.NE 0x3DDCAC4
	0x03DDA894 ADRP X8, 0x38A000
	0x03DDA898 LDR X8, [X8 + 0x358]
	0x03DDA89C LDR X0, [X8]
	0x03DDA8A0 LDR W8, [X0 + 0xE0]
	0x03DDA8A4 CBNZ W8, 0x3DDA8AC
	0x03DDA8A8 BL 0x1C16DFC
	0x03DDA8AC MOV X0, X31
	0x03DDA8B0 BL 0x3D45F64
	0x03DDA8B4 MOV X24, X0
	0x03DDA8B8 B 0x3DDCAC8
	0x03DDA8BC LDR W8, [X24 + 0x4]
	0x03DDA8C0 CMP W8, 0x4
	0x03DDA8C4 B.NE 0x3DDCB40
	0x03DDA8C8 ADRP X8, 0x38A000
	0x03DDA8CC LDR X8, [X8 + 0x358]
	0x03DDA8D0 LDR X0, [X8]
	0x03DDA8D4 LDR W8, [X0 + 0xE0]
	0x03DDA8D8 CBNZ W8, 0x3DDA8E0
	0x03DDA8DC BL 0x1C16DFC
	0x03DDA8E0 MOV X0, X31
	0x03DDA8E4 BL 0x3D46050
	0x03DDA8E8 MOV X24, X0
	0x03DDA8EC B 0x3DDCB44
	0x03DDA8F0 LDR W8, [X24 + 0x4]
	0x03DDA8F4 CMP W8, 0x4
	0x03DDA8F8 B.NE 0x3DDCBBC
	0x03DDA8FC ADRP X8, 0x38A000
	0x03DDA900 LDR X8, [X8 + 0x358]
	0x03DDA904 LDR X0, [X8]
	0x03DDA908 LDR W8, [X0 + 0xE0]
	0x03DDA90C CBNZ W8, 0x3DDA914
	0x03DDA910 BL 0x1C16DFC
	0x03DDA914 MOV X0, X31
	0x03DDA918 BL 0x3D460C8
	0x03DDA91C MOV X24, X0
	0x03DDA920 B 0x3DDCBC0
	0x03DDA924 LDR W8, [X24 + 0x4]
	0x03DDA928 CMP W8, 0x4
	0x03DDA92C B.NE 0x3DDCC38
	0x03DDA930 ADRP X8, 0x38A000
	0x03DDA934 LDR X8, [X8 + 0x358]
	0x03DDA938 LDR X0, [X8]
	0x03DDA93C LDR W8, [X0 + 0xE0]
	0x03DDA940 CBNZ W8, 0x3DDA948
	0x03DDA944 BL 0x1C16DFC
	0x03DDA948 MOV X0, X31
	0x03DDA94C BL 0x3D46140
	0x03DDA950 MOV X24, X0
	0x03DDA954 B 0x3DDCC3C
	0x03DDA958 LDR W8, [X24 + 0x4]
	0x03DDA95C CMP W8, 0x4
	0x03DDA960 B.NE 0x3DDCCB4
	0x03DDA964 ADRP X8, 0x38A000
	0x03DDA968 LDR X8, [X8 + 0x358]
	0x03DDA96C LDR X0, [X8]
	0x03DDA970 LDR W8, [X0 + 0xE0]
	0x03DDA974 CBNZ W8, 0x3DDA97C
	0x03DDA978 BL 0x1C16DFC
	0x03DDA97C MOV X0, X31
	0x03DDA980 BL 0x3D461B8
	0x03DDA984 MOV X24, X0
	0x03DDA988 B 0x3DDCCB8
	0x03DDA98C LDR W8, [X24 + 0x4]
	0x03DDA990 CMP W8, 0x4
	0x03DDA994 B.NE 0x3DDCD30
	0x03DDA998 ADRP X8, 0x38A000
	0x03DDA99C LDR X8, [X8 + 0x358]
	0x03DDA9A0 LDR X0, [X8]
	0x03DDA9A4 LDR W8, [X0 + 0xE0]
	0x03DDA9A8 CBNZ W8, 0x3DDA9B0
	0x03DDA9AC BL 0x1C16DFC
	0x03DDA9B0 MOV X0, X31
	0x03DDA9B4 BL 0x3D46230
	0x03DDA9B8 MOV X24, X0
	0x03DDA9BC B 0x3DDCD34
	0x03DDA9C0 LDR W8, [X24 + 0x4]
	0x03DDA9C4 CMP W8, 0x4
	0x03DDA9C8 B.NE 0x3DDCDAC
	0x03DDA9CC ADRP X8, 0x38A000
	0x03DDA9D0 LDR X8, [X8 + 0x358]
	0x03DDA9D4 LDR X0, [X8]
	0x03DDA9D8 LDR W8, [X0 + 0xE0]
	0x03DDA9DC CBNZ W8, 0x3DDA9E4
	0x03DDA9E0 BL 0x1C16DFC
	0x03DDA9E4 MOV X0, X31
	0x03DDA9E8 BL 0x3D462A8
	0x03DDA9EC MOV X24, X0
	0x03DDA9F0 B 0x3DDCDB0
	0x03DDA9F4 LDR W8, [X24 + 0x4]
	0x03DDA9F8 CMP W8, 0x4
	0x03DDA9FC B.NE 0x3DDCE28
	0x03DDAA00 ADRP X8, 0x38A000
	0x03DDAA04 LDR X8, [X8 + 0x358]
	0x03DDAA08 LDR X0, [X8]
	0x03DDAA0C LDR W8, [X0 + 0xE0]
	0x03DDAA10 CBNZ W8, 0x3DDAA18
	0x03DDAA14 BL 0x1C16DFC
	0x03DDAA18 MOV X0, X31
	0x03DDAA1C BL 0x3D46320
	0x03DDAA20 MOV X24, X0
	0x03DDAA24 B 0x3DDCE2C
	0x03DDAA28 LDR W8, [X24 + 0x4]
	0x03DDAA2C CMP W8, 0x4
	0x03DDAA30 B.NE 0x3DDCEA4
	0x03DDAA34 ADRP X8, 0x38A000
	0x03DDAA38 LDR X8, [X8 + 0x358]
	0x03DDAA3C LDR X0, [X8]
	0x03DDAA40 LDR W8, [X0 + 0xE0]
	0x03DDAA44 CBNZ W8, 0x3DDAA4C
	0x03DDAA48 BL 0x1C16DFC
	0x03DDAA4C MOV X0, X31
	0x03DDAA50 BL 0x3D46398
	0x03DDAA54 MOV X24, X0
	0x03DDAA58 B 0x3DDCEA8
	0x03DDAA5C LDR W8, [X24 + 0x4]
	0x03DDAA60 CMP W8, 0x4
	0x03DDAA64 B.NE 0x3DDCF20
	0x03DDAA68 ADRP X8, 0x38A000
	0x03DDAA6C LDR X8, [X8 + 0x358]
	0x03DDAA70 LDR X0, [X8]
	0x03DDAA74 LDR W8, [X0 + 0xE0]
	0x03DDAA78 CBNZ W8, 0x3DDAA80
	0x03DDAA7C BL 0x1C16DFC
	0x03DDAA80 MOV X0, X31
	0x03DDAA84 BL 0x3D46500
	0x03DDAA88 MOV X24, X0
	0x03DDAA8C B 0x3DDCF24
	0x03DDAA90 LDR W8, [X24 + 0x4]
	0x03DDAA94 CMP W8, 0x4
	0x03DDAA98 B.NE 0x3DDCF9C
	0x03DDAA9C ADRP X8, 0x38A000
	0x03DDAAA0 LDR X8, [X8 + 0x358]
	0x03DDAAA4 LDR X0, [X8]
	0x03DDAAA8 LDR W8, [X0 + 0xE0]
	0x03DDAAAC CBNZ W8, 0x3DDAAB4
	0x03DDAAB0 BL 0x1C16DFC
	0x03DDAAB4 MOV X0, X31
	0x03DDAAB8 BL 0x3D46578
	0x03DDAABC MOV X24, X0
	0x03DDAAC0 B 0x3DDCFA0
	0x03DDAAC4 LDR W8, [X24 + 0x4]
	0x03DDAAC8 CMP W8, 0x4
	0x03DDAACC B.NE 0x3DDD018
	0x03DDAAD0 ADRP X8, 0x38A000
	0x03DDAAD4 LDR X8, [X8 + 0x358]
	0x03DDAAD8 LDR X0, [X8]
	0x03DDAADC LDR W8, [X0 + 0xE0]
	0x03DDAAE0 CBNZ W8, 0x3DDAAE8
	0x03DDAAE4 BL 0x1C16DFC
	0x03DDAAE8 MOV X0, X31
	0x03DDAAEC BL 0x3D465F0
	0x03DDAAF0 MOV X24, X0
	0x03DDAAF4 B 0x3DDD01C
	0x03DDAAF8 LDR W8, [X24 + 0x4]
	0x03DDAAFC CMP W8, 0x4
	0x03DDAB00 B.NE 0x3DDD094
	0x03DDAB04 ADRP X8, 0x38A000
	0x03DDAB08 LDR X8, [X8 + 0x358]
	0x03DDAB0C LDR X0, [X8]
	0x03DDAB10 LDR W8, [X0 + 0xE0]
	0x03DDAB14 CBNZ W8, 0x3DDAB1C
	0x03DDAB18 BL 0x1C16DFC
	0x03DDAB1C MOV X0, X31
	0x03DDAB20 BL 0x3D46668
	0x03DDAB24 MOV X24, X0
	0x03DDAB28 B 0x3DDD098
	0x03DDAB2C LDR W8, [X24 + 0x4]
	0x03DDAB30 CMP W8, 0x4
	0x03DDAB34 B.NE 0x3DDD110
	0x03DDAB38 ADRP X8, 0x38A000
	0x03DDAB3C LDR X8, [X8 + 0x358]
	0x03DDAB40 LDR X0, [X8]
	0x03DDAB44 LDR W8, [X0 + 0xE0]
	0x03DDAB48 CBNZ W8, 0x3DDAB50
	0x03DDAB4C BL 0x1C16DFC
	0x03DDAB50 MOV X0, X31
	0x03DDAB54 BL 0x3D466E0
	0x03DDAB58 MOV W24, W0
	0x03DDAB5C B 0x3DDD12C
	0x03DDAB60 LDR W8, [X24 + 0x4]
	0x03DDAB64 CMP W8, 0x4
	0x03DDAB68 B.NE 0x3DDD1A4
	0x03DDAB6C ADRP X8, 0x38A000
	0x03DDAB70 LDR X8, [X8 + 0x358]
	0x03DDAB74 LDR X0, [X8]
	0x03DDAB78 LDR W8, [X0 + 0xE0]
	0x03DDAB7C CBNZ W8, 0x3DDAB84
	0x03DDAB80 BL 0x1C16DFC
	0x03DDAB84 MOV X0, X31
	0x03DDAB88 BL 0x3D46758
	0x03DDAB8C MOV X24, X0
	0x03DDAB90 B 0x3DDD1A8
	0x03DDAB94 LDR W8, [X24 + 0x4]
	0x03DDAB98 CMP W8, 0x4
	0x03DDAB9C B.NE 0x3DDD220
	0x03DDABA0 ADRP X8, 0x38A000
	0x03DDABA4 LDR X8, [X8 + 0x358]
	0x03DDABA8 LDR X0, [X8]
	0x03DDABAC LDR W8, [X0 + 0xE0]
	0x03DDABB0 CBNZ W8, 0x3DDABB8
	0x03DDABB4 BL 0x1C16DFC
	0x03DDABB8 MOV X0, X31
	0x03DDABBC BL 0x3D469D0
	0x03DDABC0 MOV X24, X0
	0x03DDABC4 B 0x3DDD224
	0x03DDABC8 LDR W8, [X24 + 0x4]
	0x03DDABCC CMP W8, 0x4
	0x03DDABD0 B.NE 0x3DDD29C
	0x03DDABD4 ADRP X8, 0x38A000
	0x03DDABD8 LDR X8, [X8 + 0x358]
	0x03DDABDC LDR X0, [X8]
	0x03DDABE0 LDR W8, [X0 + 0xE0]
	0x03DDABE4 CBNZ W8, 0x3DDABEC
	0x03DDABE8 BL 0x1C16DFC
	0x03DDABEC MOV X0, X31
	0x03DDABF0 BL 0x3D47518

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 960
	022 Move X23, 0x613000
	023 Move X20, 0x394000
	024 Move W8, [X23+443]
	025 Move X20, [X20+1104]
	026 Move X29, X5
	027 Move W21, W4
	028 Move W22, W3
	029 Move X26, X2
	030 Move X28, X1
	031 Move X19, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {74}
	036 Move X0, 0x348000
	037 Move X0, [X0+3792]
	038 Call 0x1C17CF4
	039 Move X0, 0x31E000
	040 Move X0, [X0+1432]
	041 Call 0x1C17CF4
	042 Move X0, 0x394000
	043 Move X0, [X0+1112]
	044 Call 0x1C17CF4
	045 Move X0, 0x394000
	046 Move X0, [X0+1120]
	047 Call 0x1C17CF4
	048 Move X0, 0x394000
	049 Move X0, [X0+1128]
	050 Call 0x1C17CF4
	051 Move X0, 0x394000
	052 Move X0, [X0+1136]
	053 Call 0x1C17CF4
	054 Move X0, 0x394000
	055 Move X0, [X0+1104]
	056 Call 0x1C17CF4
	057 Move X0, 0x390000
	058 Move X0, [X0+864]
	059 Call 0x1C17CF4
	060 Move X0, 0x390000
	061 Move X0, [X0+888]
	062 Call 0x1C17CF4
	063 Move X0, 0x390000
	064 Move X0, [X0+856]
	065 Call 0x1C17CF4
	066 Move X0, 0x390000
	067 Move X0, [X0+880]
	068 Call 0x1C17CF4
	069 Move X0, 0x390000
	070 Move X0, [X0+872]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X23+443], W8
	074 Move X1, [X26]
	075 Move X2, [X20]
	076 Move X0, X28
	077 Call 0x266D684, X0, X1
	078 Move [X31+56], W22
	079 Move [X31+40], X28
	080 Move [X31+48], X26
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {87}
	085 Move [X31+60], W31
	086 Move W20, W31
	087 Move X20, 0x390000
	088 Move X20, [X20+872]
	089 Move X0, X28
	090 Move X1, [X20]
	091 Call 0x266D4A0, X0
	092 Move X1, [X20]
	093 Move X25, X0
	094 Move X0, X26
	095 Call 0x266D4A0, X0
	096 Move D0, [X0]
	097 Move D3, [X0+8]
	098 Move D1, [X25]
	099 Move D2, [X25+8]
	100 Move X8, -53395456
	101 Move V8, [X8+3872]
	102 Move X26, X0
	103 Subtract V0, V1, V0
	104 NotImplemented "Instruction INVALID not yet implemented."
	105 Subtract V1, V2, V3
	106 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	107 NotImplemented "Instruction INVALID not yet implemented."
	108 Add V0, V0, V2
	109 Add V0, V1, V0
	110 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	111 Add V0, V1, V0
	112 NotImplemented "Instruction FCMP not yet implemented."
	113 Compare X19, 0
	114 JumpIfEqual {4343}
	115 Move X0, X19
	116 Move X1, X31
	117 Move [X31+36], S8
	118 Call VisualElement.get_styleAnimation, X0
	119 Compare X0, 0
	120 JumpIfEqual {4343}
	121 Move X10, 0x348000
	122 Move S9, [X26+8]
	123 Move S8, [X26+12]
	124 Move S11, [X26]
	125 Move S10, [X26+4]
	126 Move S13, [X25+8]
	127 Move S12, [X25+12]
	128 Move X8, [X0]
	129 Move S15, [X25]
	130 Move S14, [X25+4]
	131 Move X10, [X10+3792]
	132 Move X27, X0
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Move X1, [X10]
	135 Compare X9, 0
	136 JumpIfEqual {143}
	137 Move X10, [X8+176]
	138 Add X10, X10, 8
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Subtract X9, X9, 1
	142 Add X10, X10, 16
	143 Move W2, 3
	144 Move X0, X27
	145 Call 0x1C5D788
	146 Move [X31+60], W31
	147 Move W20, W31
	148 Move W9, [X10]
	149 Add W9, W9, 3
	150 Add X8, X8, W9
	151 Add X0, X8, 312
	152 Move X8, [X0]
	153 Move X5, [X0+8]
	154 Move W1, 0x10000
	155 Move X0, X27
	156 Move V0, V15
	157 Move V1, V14
	158 Move V2, V13
	159 Move V3, V12
	160 Move V4, V11
	161 Move V5, V10
	162 Move V6, V9
	163 Move V7, V8
	164 Move W2, W22
	165 Move W3, W21
	166 Move X4, X29
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Move V8, [X31+36]
	169 And W20, W0, 1
	170 Move W8, 8
	171 NotImplemented "Instruction CSEL not yet implemented."
	172 Move [X31+60], W8
	173 Move X0, [X25+16]
	174 Move X1, [X26+16]
	175 Move X2, X31
	176 Call Length.op_Inequality, X0, X1
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfNotEqual {223}
	181 Compare X19, 0
	182 JumpIfEqual {4343}
	183 Move X0, X19
	184 Move X1, X31
	185 Call VisualElement.get_styleAnimation, X0
	186 Compare X0, 0
	187 JumpIfEqual {4343}
	188 Move X10, 0x348000
	189 Move X8, [X0]
	190 Move X24, [X25+16]
	191 Move X23, [X26+16]
	192 Move X10, [X10+3792]
	193 NotImplemented "Instruction LDRH not yet implemented."
	194 Move X27, X0
	195 Move X1, [X10]
	196 Compare X9, 0
	197 JumpIfEqual {204}
	198 Move X10, [X8+176]
	199 Add X10, X10, 8
	200 NotImplemented "Instruction LDUR not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Subtract X9, X9, 1
	203 Add X10, X10, 16
	204 Move W2, 2
	205 Move X0, X27
	206 Call 0x1C5D788
	207 Move W9, [X10]
	208 Add W9, W9, 2
	209 Add X8, X8, W9
	210 Add X0, X8, 312
	211 Move X8, [X0]
	212 Move X7, [X0+8]
	213 Or W1, W31, 0x10001
	214 Move X0, X27
	215 Move X2, X24
	216 Move X3, X23
	217 Move W4, W22
	218 Move W5, W21
	219 Move X6, X29
	220 NotImplemented "Instruction BLR not yet implemented."
	221 And W8, W0, 1
	222 Or W20, W20, W8
	223 Move X0, [X25+24]
	224 Move X1, [X26+24]
	225 Move X2, X31
	226 Call Length.op_Inequality, X0, X1
	227 Move TEMP, X0
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfNotEqual {275}
	231 Compare X19, 0
	232 JumpIfEqual {4343}
	233 Move X0, X19
	234 Move X1, X31
	235 Call VisualElement.get_styleAnimation, X0
	236 Compare X0, 0
	237 JumpIfEqual {4343}
	238 Move X10, 0x348000
	239 Move X8, [X0]
	240 Move X24, [X25+24]
	241 Move X23, [X26+24]
	242 Move X10, [X10+3792]
	243 NotImplemented "Instruction LDRH not yet implemented."
	244 Move X27, X0
	245 And W20, W20, 1
	246 Move X1, [X10]
	247 Compare X9, 0
	248 JumpIfEqual {255}
	249 Move X10, [X8+176]
	250 Add X10, X10, 8
	251 NotImplemented "Instruction LDUR not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Subtract X9, X9, 1
	254 Add X10, X10, 16
	255 Move W2, 2
	256 Move X0, X27
	257 Call 0x1C5D788
	258 Move W9, [X10]
	259 Add W9, W9, 2
	260 Add X8, X8, W9
	261 Add X0, X8, 312
	262 Move X8, [X0]
	263 Move X7, [X0+8]
	264 Or W9, W31, 0x10001
	265 Add W1, W9, 1
	266 Move X0, X27
	267 Move X2, X24
	268 Move X3, X23
	269 Move W4, W22
	270 Move W5, W21
	271 Move X6, X29
	272 NotImplemented "Instruction BLR not yet implemented."
	273 And W8, W0, 1
	274 Or W20, W20, W8
	275 NotImplemented "Instruction LDUR not yet implemented."
	276 Move V1, [X25+2]
	277 Add X23, X31, 768
	278 Add X0, X31, 864
	279 Move [X23+108], V0
	280 Move [X31+54], V1
	281 NotImplemented "Instruction LDUR not yet implemented."
	282 Move V1, [X26+2]
	283 Add X1, X31, 832
	284 Move X2, X31
	285 Move [X23+76], V0
	286 Move [X31+52], V1
	287 Call TextShadow.op_Inequality, X0, X1
	288 Move TEMP, X0
	289 And TEMP, TEMP, 1
	290 Compare TEMP, 1
	291 JumpIfNotEqual {367}
	292 Compare X19, 0
	293 JumpIfEqual {4343}
	294 Move X0, X19
	295 Move X1, X31
	296 Move W22, W21
	297 Move X21, X29
	298 Add X24, X31, 256
	299 Add X28, X25, 32
	300 Add X29, X26, 32
	301 Call VisualElement.get_styleAnimation, X0
	302 NotImplemented "Instruction LDUR not yet implemented."
	303 Move V1, [X28]
	304 Move [X24+44], V0
	305 Move [X31+18], V1
	306 NotImplemented "Instruction LDUR not yet implemented."
	307 Move V1, [X29]
	308 Move [X24+12], V0
	309 Move [X31+16], V1
	310 Compare X0, 0
	311 JumpIfEqual {4343}
	312 Move V0, [X31+18]
	313 NotImplemented "Instruction LDUR not yet implemented."
	314 Move V2, [X31+16]
	315 NotImplemented "Instruction LDUR not yet implemented."
	316 Move [X31+50], V0
	317 Move [X23+44], V1
	318 Move [X31+48], V2
	319 Move [X23+12], V3
	320 Move X10, 0x347000
	321 Move X8, [X0]
	322 Move X10, [X10+3792]
	323 Move X29, X21
	324 Move W21, W22
	325 NotImplemented "Instruction LDRH not yet implemented."
	326 Move X1, [X10]
	327 Move W22, [X31+56]
	328 Move X28, [X31+40]
	329 Move X27, X0
	330 And W20, W20, 1
	331 Compare X9, 0
	332 JumpIfEqual {339}
	333 Move X10, [X8+176]
	334 Add X10, X10, 8
	335 NotImplemented "Instruction LDUR not yet implemented."
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Subtract X9, X9, 1
	338 Add X10, X10, 16
	339 Move W2, 8
	340 Move X0, X27
	341 Call 0x1C5D788
	342 Move W9, [X10]
	343 Add W9, W9, 8
	344 Add X8, X8, W9
	345 Add X0, X8, 312
	346 Move V0, [X31+50]
	347 NotImplemented "Instruction LDUR not yet implemented."
	348 Move V2, [X31+48]
	349 NotImplemented "Instruction LDUR not yet implemented."
	350 Move X8, [X0]
	351 Move [X31+58], V0
	352 Move [X23+172], V1
	353 Move [X31+56], V2
	354 Move [X23+140], V3
	355 Move X7, [X0+8]
	356 Or W9, W31, 0x10001
	357 Add W1, W9, 2
	358 Add X2, X31, 928
	359 Add X3, X31, 896
	360 Move X0, X27
	361 Move W4, W22
	362 Move W5, W21
	363 Move X6, X29
	364 NotImplemented "Instruction BLR not yet implemented."
	365 And W8, W0, 1
	366 Or W20, W20, W8
	367 Move X8, 0x31D000
	368 Move X8, [X8+1432]
	369 Move X23, [X25+64]
	370 Move X24, [X26+64]
	371 Move X0, [X8]
	372 Move W8, [X0+224]
	373 Compare W8, 0
	374 JumpIfNotEqual {376}
	375 Call 0x1C17DFC
	376 Move X0, X23
	377 Move X1, X24
	378 Move X2, X31
	379 Call Object.op_Inequality, X0, X1
	380 Move TEMP, X0
	381 And TEMP, TEMP, 1
	382 Compare TEMP, 1
	383 JumpIfNotEqual {428}
	384 Compare X19, 0
	385 JumpIfEqual {4343}
	386 Move X0, X19
	387 Move X1, X31
	388 Call VisualElement.get_styleAnimation, X0
	389 Compare X0, 0
	390 JumpIfEqual {4343}
	391 Move X10, 0x347000
	392 Move X8, [X0]
	393 Move X24, [X25+64]
	394 Move X23, [X26+64]
	395 Move X10, [X10+3792]
	396 NotImplemented "Instruction LDRH not yet implemented."
	397 Move X27, X0
	398 And W20, W20, 1
	399 Move X1, [X10]
	400 Compare X9, 0
	401 JumpIfEqual {408}
	402 Move X10, [X8+176]
	403 Add X10, X10, 8
	404 NotImplemented "Instruction LDUR not yet implemented."
	405 NotImplemented "Instruction CMP not yet implemented."
	406 Subtract X9, X9, 1
	407 Add X10, X10, 16
	408 Move W2, 7
	409 Move X0, X27
	410 Call 0x1C5D788
	411 Move W9, [X10]
	412 Add W9, W9, 7
	413 Add X8, X8, W9
	414 Add X0, X8, 312
	415 Move X8, [X0]
	416 Move X7, [X0+8]
	417 Or W9, W31, 0x10001
	418 Add W1, W9, 3
	419 Move X0, X27
	420 Move X2, X24
	421 Move X3, X23
	422 Move W4, W22
	423 Move W5, W21
	424 Move X6, X29
	425 NotImplemented "Instruction BLR not yet implemented."
	426 And W8, W0, 1
	427 Or W20, W20, W8
	428 Move X0, [X25+72]
	429 Move X1, [X25+80]
	430 Move X2, [X26+72]
	431 Move X3, [X26+80]
	432 Move X4, X31
	433 Call FontDefinition.op_Inequality, X0, X1
	434 Move TEMP, X0
	435 And TEMP, TEMP, 1
	436 Compare TEMP, 1
	437 JumpIfNotEqual {492}
	438 Compare X19, 0
	439 JumpIfEqual {4343}
	440 Move X0, X19
	441 Move X1, X31
	442 Move W22, W21
	443 Move X21, X29
	444 Call VisualElement.get_styleAnimation, X0
	445 Compare X0, 0
	446 JumpIfEqual {4343}
	447 Move X10, 0x347000
	448 Move X29, [X26+72]
	449 Move X28, [X26+80]
	450 Move X8, [X0]
	451 Move X23, [X25+72]
	452 Move X24, [X25+80]
	453 Move X10, [X10+3792]
	454 Move X27, X0
	455 NotImplemented "Instruction LDRH not yet implemented."
	456 And W20, W20, 1
	457 Move X1, [X10]
	458 Compare X9, 0
	459 JumpIfEqual {466}
	460 Move X10, [X8+176]
	461 Add X10, X10, 8
	462 NotImplemented "Instruction LDUR not yet implemented."
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Subtract X9, X9, 1
	465 Add X10, X10, 16
	466 Move W2, 6
	467 Move X0, X27
	468 Call 0x1C5D788
	469 Move W9, [X10]
	470 Add W9, W9, 6
	471 Add X8, X8, W9
	472 Add X0, X8, 312
	473 Move X8, [X0]
	474 Move X9, [X0+8]
	475 Move W6, [X31+56]
	476 Or W10, W31, 0x10001
	477 Add W1, W10, 4
	478 Move X0, X27
	479 Move X2, X23
	480 Move X3, X24
	481 Move X4, X29
	482 Move X5, X28
	483 Move W7, W22
	484 Move [X31], X21
	485 Move [X31+8], X9
	486 Move X29, X21
	487 Move W21, W22
	488 NotImplemented "Instruction BLR not yet implemented."
	489 Move X28, [X31+40]
	490 And W8, W0, 1
	491 Or W20, W20, W8
	492 Move W8, [X25+88]
	493 Move W9, [X26+88]
	494 NotImplemented "Instruction CMP not yet implemented."
	495 Move W22, [X31+56]
	496 Move W22, [X31+56]
	497 Compare X19, 0
	498 JumpIfEqual {4343}
	499 Move X0, X19
	500 Move X1, X31
	501 Call VisualElement.get_styleAnimation, X0
	502 Compare X0, 0
	503 JumpIfEqual {4343}
	504 Move X10, 0x347000
	505 Move X8, [X0]
	506 Move W24, [X25+88]
	507 Move W23, [X26+88]
	508 Move X10, [X10+3792]
	509 NotImplemented "Instruction LDRH not yet implemented."
	510 Move X27, X0
	511 And W20, W20, 1
	512 Move X1, [X10]
	513 Compare X9, 0
	514 JumpIfEqual {521}
	515 Move X10, [X8+176]
	516 Add X10, X10, 8
	517 NotImplemented "Instruction LDUR not yet implemented."
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Subtract X9, X9, 1
	520 Add X10, X10, 16
	521 Move W2, 4
	522 Move X0, X27
	523 Call 0x1C5D788
	524 Move W9, [X10]
	525 Add W9, W9, 4
	526 Add X8, X8, W9
	527 Add X0, X8, 312
	528 Move X8, [X0]
	529 Move X7, [X0+8]
	530 Or W9, W31, 0x10001
	531 Add W1, W9, 5
	532 Move X0, X27
	533 Move W2, W24
	534 Move W3, W23
	535 Move W4, W22
	536 Move W5, W21
	537 Move X6, X29
	538 NotImplemented "Instruction BLR not yet implemented."
	539 And W8, W0, 1
	540 Or W20, W20, W8
	541 NotImplemented "Instruction LDUR not yet implemented."
	542 NotImplemented "Instruction LDUR not yet implemented."
	543 Move X2, X31
	544 Call Length.op_Inequality, X0, X1
	545 Move TEMP, X0
	546 And TEMP, TEMP, 1
	547 Compare TEMP, 1
	548 JumpIfNotEqual {593}
	549 Compare X19, 0
	550 JumpIfEqual {4343}
	551 Move X0, X19
	552 Move X1, X31
	553 Call VisualElement.get_styleAnimation, X0
	554 Compare X0, 0
	555 JumpIfEqual {4343}
	556 Move X10, 0x347000
	557 Move X8, [X0]
	558 NotImplemented "Instruction LDUR not yet implemented."
	559 NotImplemented "Instruction LDUR not yet implemented."
	560 Move X10, [X10+3792]
	561 NotImplemented "Instruction LDRH not yet implemented."
	562 Move X27, X0
	563 And W20, W20, 1
	564 Move X1, [X10]
	565 Compare X9, 0
	566 JumpIfEqual {573}
	567 Move X10, [X8+176]
	568 Add X10, X10, 8
	569 NotImplemented "Instruction LDUR not yet implemented."
	570 NotImplemented "Instruction CMP not yet implemented."
	571 Subtract X9, X9, 1
	572 Add X10, X10, 16
	573 Move W2, 2
	574 Move X0, X27
	575 Call 0x1C5D788
	576 Move W9, [X10]
	577 Add W9, W9, 2
	578 Add X8, X8, W9
	579 Add X0, X8, 312
	580 Move X8, [X0]
	581 Move X7, [X0+8]
	582 Or W9, W31, 0x10001
	583 Add W1, W9, 6
	584 Move X0, X27
	585 Move X2, X24
	586 Move X3, X23
	587 Move W4, W22
	588 Move W5, W21
	589 Move X6, X29
	590 NotImplemented "Instruction BLR not yet implemented."
	591 And W8, W0, 1
	592 Or W20, W20, W8
	593 Move W8, [X25+100]
	594 Move W9, [X26+100]
	595 NotImplemented "Instruction CMP not yet implemented."
	596 Compare X19, 0
	597 JumpIfEqual {4343}
	598 Move X0, X19
	599 Move X1, X31
	600 Call VisualElement.get_styleAnimation, X0
	601 Compare X0, 0
	602 JumpIfEqual {4343}
	603 Move X10, 0x347000
	604 Move X8, [X0]
	605 Move W24, [X25+100]
	606 Move W23, [X26+100]
	607 Move X10, [X10+3792]
	608 NotImplemented "Instruction LDRH not yet implemented."
	609 Move X27, X0
	610 And W20, W20, 1
	611 Move X1, [X10]
	612 Compare X9, 0
	613 JumpIfEqual {620}
	614 Move X10, [X8+176]
	615 Add X10, X10, 8
	616 NotImplemented "Instruction LDUR not yet implemented."
	617 NotImplemented "Instruction CMP not yet implemented."
	618 Subtract X9, X9, 1
	619 Add X10, X10, 16
	620 Move W2, 4
	621 Move X0, X27
	622 Call 0x1C5D788
	623 Move W9, [X10]
	624 Add W9, W9, 4
	625 Add X8, X8, W9
	626 Add X0, X8, 312
	627 Move X8, [X0]
	628 Move X7, [X0+8]
	629 Or W9, W31, 0x10001
	630 Add W1, W9, 7
	631 Move X0, X27
	632 Move W2, W24
	633 Move W3, W23
	634 Move W4, W22
	635 Move W5, W21
	636 Move X6, X29
	637 NotImplemented "Instruction BLR not yet implemented."
	638 And W8, W0, 1
	639 Or W20, W20, W8
	640 Move D0, [X25+104]
	641 Move D1, [X25+112]
	642 Move D2, [X26+104]
	643 Move D3, [X26+112]
	644 Subtract V0, V0, V2
	645 NotImplemented "Instruction INVALID not yet implemented."
	646 Subtract V1, V1, V3
	647 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	648 NotImplemented "Instruction INVALID not yet implemented."
	649 Add V0, V0, V2
	650 Add V0, V1, V0
	651 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	652 Add V0, V1, V0
	653 NotImplemented "Instruction FCMP not yet implemented."
	654 Compare X19, 0
	655 JumpIfEqual {4343}
	656 Move X0, X19
	657 Move X1, X31
	658 Call VisualElement.get_styleAnimation, X0
	659 Compare X0, 0
	660 JumpIfEqual {4343}
	661 Move X10, 0x347000
	662 Move S9, [X26+112]
	663 Move S8, [X26+116]
	664 Move S11, [X26+104]
	665 Move S10, [X26+108]
	666 Move S13, [X25+112]
	667 Move S12, [X25+116]
	668 Move X8, [X0]
	669 Move S15, [X25+104]
	670 Move S14, [X25+108]
	671 Move X10, [X10+3792]
	672 Move X27, X0
	673 NotImplemented "Instruction LDRH not yet implemented."
	674 And W20, W20, 1
	675 Move X1, [X10]
	676 Compare X9, 0
	677 JumpIfEqual {684}
	678 Move X10, [X8+176]
	679 Add X10, X10, 8
	680 NotImplemented "Instruction LDUR not yet implemented."
	681 NotImplemented "Instruction CMP not yet implemented."
	682 Subtract X9, X9, 1
	683 Add X10, X10, 16
	684 Move W2, 3
	685 Move X0, X27
	686 Call 0x1C5D788
	687 Move W9, [X10]
	688 Add W9, W9, 3
	689 Add X8, X8, W9
	690 Add X0, X8, 312
	691 Move X8, [X0]
	692 Move X5, [X0+8]
	693 Or W9, W31, 0x10001
	694 Add W1, W9, 8
	695 Move X0, X27
	696 Move V0, V15
	697 Move V1, V14
	698 Move V2, V13
	699 Move V3, V12
	700 Move V4, V11
	701 Move V5, V10
	702 Move V6, V9
	703 Move V7, V8
	704 Move W2, W22
	705 Move W3, W21
	706 Move X4, X29
	707 NotImplemented "Instruction BLR not yet implemented."
	708 And W8, W0, 1
	709 Or W20, W20, W8
	710 Move V0, [X25+120]
	711 Move V1, [X26+120]
	712 NotImplemented "Instruction FCMP not yet implemented."
	713 Compare X19, 0
	714 JumpIfEqual {4343}
	715 Move X0, X19
	716 Move X1, X31
	717 Call VisualElement.get_styleAnimation, X0
	718 Compare X0, 0
	719 JumpIfEqual {4343}
	720 Move X10, 0x347000
	721 Move X8, [X0]
	722 Move V9, [X25+120]
	723 Move V8, [X26+120]
	724 Move X10, [X10+3792]
	725 NotImplemented "Instruction LDRH not yet implemented."
	726 Move X27, X0
	727 And W20, W20, 1
	728 Move X1, [X10]
	729 Compare X9, 0
	730 JumpIfEqual {737}
	731 Move X10, [X8+176]
	732 Add X10, X10, 8
	733 NotImplemented "Instruction LDUR not yet implemented."
	734 NotImplemented "Instruction CMP not yet implemented."
	735 Subtract X9, X9, 1
	736 Add X10, X10, 16
	737 Move X0, X27
	738 Move W2, W31
	739 Call 0x1C5D788
	740 NotImplemented "Instruction LDRSW not yet implemented."
	741 Add X8, X8, X9
	742 Add X0, X8, 312
	743 Move X8, [X0]
	744 Move X5, [X0+8]
	745 Or W9, W31, 0x10001
	746 Add W1, W9, 9
	747 Move X0, X27
	748 Move V0, V9
	749 Move V1, V8
	750 Move W2, W22
	751 Move W3, W21
	752 Move X4, X29
	753 NotImplemented "Instruction BLR not yet implemented."
	754 And W8, W0, 1
	755 Or W20, W20, W8
	756 Move W8, [X25+124]
	757 Move W9, [X26+124]
	758 NotImplemented "Instruction CMP not yet implemented."
	759 Compare X19, 0
	760 JumpIfEqual {4343}
	761 Move X0, X19
	762 Move X1, X31
	763 Call VisualElement.get_styleAnimation, X0
	764 Compare X0, 0
	765 JumpIfEqual {4343}
	766 Move X10, 0x347000
	767 Move X8, [X0]
	768 Move W24, [X25+124]
	769 Move W23, [X26+124]
	770 Move X10, [X10+3792]
	771 NotImplemented "Instruction LDRH not yet implemented."
	772 Move X27, X0
	773 And W20, W20, 1
	774 Move X1, [X10]
	775 Compare X9, 0
	776 JumpIfEqual {783}
	777 Move X10, [X8+176]
	778 Add X10, X10, 8
	779 NotImplemented "Instruction LDUR not yet implemented."
	780 NotImplemented "Instruction CMP not yet implemented."
	781 Subtract X9, X9, 1
	782 Add X10, X10, 16
	783 Move W2, 4
	784 Move X0, X27
	785 Call 0x1C5D788
	786 Move W9, [X10]
	787 Add W9, W9, 4
	788 Add X8, X8, W9
	789 Add X0, X8, 312
	790 Move X8, [X0]
	791 Move X7, [X0+8]
	792 Or W9, W31, 0x10001
	793 Add W1, W9, 10
	794 Move X0, X27
	795 Move W2, W24
	796 Move W3, W23
	797 Move W4, W22
	798 Move W5, W21
	799 Move X6, X29
	800 NotImplemented "Instruction BLR not yet implemented."
	801 And W8, W0, 1
	802 Or W20, W20, W8
	803 Move W8, [X25+128]
	804 Move W9, [X26+128]
	805 NotImplemented "Instruction CMP not yet implemented."
	806 Compare X19, 0
	807 JumpIfEqual {4343}
	808 Move X0, X19
	809 Move X1, X31
	810 Call VisualElement.get_styleAnimation, X0
	811 Compare X0, 0
	812 JumpIfEqual {4343}
	813 Move X10, 0x347000
	814 Move X8, [X0]
	815 Move W24, [X25+128]
	816 Move W23, [X26+128]
	817 Move X10, [X10+3792]
	818 NotImplemented "Instruction LDRH not yet implemented."
	819 Move X27, X0
	820 And W20, W20, 1
	821 Move X1, [X10]
	822 Compare X9, 0
	823 JumpIfEqual {830}
	824 Move X10, [X8+176]
	825 Add X10, X10, 8
	826 NotImplemented "Instruction LDUR not yet implemented."
	827 NotImplemented "Instruction CMP not yet implemented."
	828 Subtract X9, X9, 1
	829 Add X10, X10, 16
	830 Move W2, 4
	831 Move X0, X27
	832 Call 0x1C5D788
	833 Move W9, [X10]
	834 Add W9, W9, 4
	835 Add X8, X8, W9
	836 Add X0, X8, 312
	837 Move X8, [X0]
	838 Move X7, [X0+8]
	839 Or W9, W31, 0x10001
	840 Add W1, W9, 11
	841 Move X0, X27
	842 Move W2, W24
	843 Move W3, W23
	844 Move W4, W22
	845 Move W5, W21
	846 Move X6, X29
	847 NotImplemented "Instruction BLR not yet implemented."
	848 And W8, W0, 1
	849 Or W20, W20, W8
	850 NotImplemented "Instruction LDUR not yet implemented."
	851 NotImplemented "Instruction LDUR not yet implemented."
	852 Move X2, X31
	853 Call Length.op_Inequality, X0, X1
	854 And W20, W20, 1
	855 Move TEMP, X0
	856 And TEMP, TEMP, 1
	857 Compare TEMP, 1
	858 JumpIfNotEqual {886}
	859 Compare X19, 0
	860 JumpIfEqual {4343}
	861 Move X0, X19
	862 Move X1, X31
	863 Call VisualElement.get_styleAnimation, X0
	864 Compare X0, 0
	865 JumpIfEqual {4343}
	866 Move X10, 0x347000
	867 Move X8, [X0]
	868 NotImplemented "Instruction LDUR not yet implemented."
	869 NotImplemented "Instruction LDUR not yet implemented."
	870 Move X10, [X10+3792]
	871 NotImplemented "Instruction LDRH not yet implemented."
	872 Move X26, [X31+48]
	873 Move X27, X0
	874 Move X1, [X10]
	875 Compare X9, 0
	876 JumpIfEqual {883}
	877 Move X10, [X8+176]
	878 Add X10, X10, 8
	879 NotImplemented "Instruction LDUR not yet implemented."
	880 NotImplemented "Instruction CMP not yet implemented."
	881 Subtract X9, X9, 1
	882 Add X10, X10, 16
	883 Move W2, 2
	884 Move X0, X27
	885 Call 0x1C5D788
	886 Move X26, [X31+48]
	887 Move W9, [X10]
	888 Add W9, W9, 2
	889 Add X8, X8, W9
	890 Add X0, X8, 312
	891 Move X8, [X0]
	892 Move X7, [X0+8]
	893 Or W9, W31, 0x10001
	894 Add W1, W9, 12
	895 Move X0, X27
	896 Move X2, X24
	897 Move X3, X23
	898 Move W4, W22
	899 Move W5, W21
	900 Move X6, X29
	901 NotImplemented "Instruction BLR not yet implemented."
	902 And W8, W0, 1
	903 Or W8, W8, W20
	904 NotImplemented "Instruction CMP not yet implemented."
	905 NotImplemented "Instruction CSET not yet implemented."
	906 Move X8, 0x393000
	907 Move X8, [X8+1136]
	908 Move X1, [X26+8]
	909 Add X23, X28, 8
	910 Move X0, X23
	911 Move X2, [X8]
	912 Call StyleDataRef`1<LayoutData>.Equals, X0, X1
	913 Move TEMP, X0
	914 And TEMP, TEMP, 1
	915 Compare TEMP, 1
	916 JumpIfEqual {2473}
	917 Move X24, 0x38F000
	918 Move X24, [X24+856]
	919 Move X0, X23
	920 Move X1, [X24]
	921 Call StyleDataRef`1<LayoutData>.Read, X0
	922 Move X1, [X24]
	923 Move X25, X0
	924 Add X0, X26, 8
	925 Call StyleDataRef`1<LayoutData>.Read, X0
	926 Move W8, [X25]
	927 Move W9, [X0]
	928 Move X26, X0
	929 NotImplemented "Instruction CMP not yet implemented."
	930 Compare X19, 0
	931 JumpIfEqual {4343}
	932 Move X0, X19
	933 Move X1, X31
	934 Call VisualElement.get_styleAnimation, X0
	935 Compare X0, 0
	936 JumpIfEqual {4343}
	937 Move X10, 0x347000
	938 Move X8, [X0]
	939 Move W24, [X25]
	940 Move W23, [X26]
	941 Move X10, [X10+3792]
	942 NotImplemented "Instruction LDRH not yet implemented."
	943 Move X27, X0
	944 Move X1, [X10]
	945 Compare X9, 0
	946 JumpIfEqual {953}
	947 Move X10, [X8+176]
	948 Add X10, X10, 8
	949 NotImplemented "Instruction LDUR not yet implemented."
	950 NotImplemented "Instruction CMP not yet implemented."
	951 Subtract X9, X9, 1
	952 Add X10, X10, 16
	953 Move W2, 4
	954 Move X0, X27
	955 Call 0x1C5D788
	956 Move W9, [X10]
	957 Add W9, W9, 4
	958 Add X8, X8, W9
	959 Add X0, X8, 312
	960 Move X8, [X0]
	961 Move X7, [X0+8]
	962 Move W1, 0x20000
	963 Move X0, X27
	964 Move W2, W24
	965 Move W3, W23
	966 Move W4, W22
	967 Move W5, W21
	968 Move X6, X29
	969 NotImplemented "Instruction BLR not yet implemented."
	970 Or W20, W20, W0
	971 Move W8, [X25+4]
	972 Move W9, [X26+4]
	973 NotImplemented "Instruction CMP not yet implemented."
	974 Compare X19, 0
	975 JumpIfEqual {4343}
	976 Move X0, X19
	977 Move X1, X31
	978 Call VisualElement.get_styleAnimation, X0
	979 Compare X0, 0
	980 JumpIfEqual {4343}
	981 Move X10, 0x347000
	982 Move X8, [X0]
	983 Move W24, [X25+4]
	984 Move W23, [X26+4]
	985 Move X10, [X10+3792]
	986 NotImplemented "Instruction LDRH not yet implemented."
	987 Move X27, X0
	988 Move X1, [X10]
	989 Compare X9, 0
	990 JumpIfEqual {997}
	991 Move X10, [X8+176]
	992 Add X10, X10, 8
	993 NotImplemented "Instruction LDUR not yet implemented."
	994 NotImplemented "Instruction CMP not yet implemented."
	995 Subtract X9, X9, 1
	996 Add X10, X10, 16
	997 Move W2, 4
	998 Move X0, X27
	999 Call 0x1C5D788
	1000 Move W9, [X10]
	1001 Add W9, W9, 4
	1002 Add X8, X8, W9
	1003 Add X0, X8, 312
	1004 Move X8, [X0]
	1005 Move X7, [X0+8]
	1006 Or W9, W31, 0x10001
	1007 Add W1, W9, 0x10000
	1008 Move X0, X27
	1009 Move W2, W24
	1010 Move W3, W23
	1011 Move W4, W22
	1012 Move W5, W21
	1013 Move X6, X29
	1014 NotImplemented "Instruction BLR not yet implemented."
	1015 Or W20, W20, W0
	1016 Move W8, [X25+8]
	1017 Move W9, [X26+8]
	1018 Or W28, W31, 0x20002
	1019 NotImplemented "Instruction CMP not yet implemented."
	1020 Compare X19, 0
	1021 JumpIfEqual {4343}
	1022 Move X0, X19
	1023 Move X1, X31
	1024 Call VisualElement.get_styleAnimation, X0
	1025 Compare X0, 0
	1026 JumpIfEqual {4343}
	1027 Move X10, 0x347000
	1028 Move X8, [X0]
	1029 Move W24, [X25+8]
	1030 Move W23, [X26+8]
	1031 Move X10, [X10+3792]
	1032 NotImplemented "Instruction LDRH not yet implemented."
	1033 Move X27, X0
	1034 Move X1, [X10]
	1035 Compare X9, 0
	1036 JumpIfEqual {1043}
	1037 Move X10, [X8+176]
	1038 Add X10, X10, 8
	1039 NotImplemented "Instruction LDUR not yet implemented."
	1040 NotImplemented "Instruction CMP not yet implemented."
	1041 Subtract X9, X9, 1
	1042 Add X10, X10, 16
	1043 Move W2, 4
	1044 Move X0, X27
	1045 Call 0x1C5D788
	1046 Move W9, [X10]
	1047 Add W9, W9, 4
	1048 Add X8, X8, W9
	1049 Add X0, X8, 312
	1050 Move X8, [X0]
	1051 Move X7, [X0+8]
	1052 Or W1, W31, 0x20002
	1053 Move X0, X27
	1054 Move W2, W24
	1055 Move W3, W23
	1056 Move W4, W22
	1057 Move W5, W21
	1058 Move X6, X29
	1059 NotImplemented "Instruction BLR not yet implemented."
	1060 Or W20, W20, W0
	1061 Move V0, [X25+12]
	1062 Move V1, [X26+12]
	1063 NotImplemented "Instruction FCMP not yet implemented."
	1064 Compare X19, 0
	1065 JumpIfEqual {4343}
	1066 Move X0, X19
	1067 Move X1, X31
	1068 Call VisualElement.get_styleAnimation, X0
	1069 Compare X0, 0
	1070 JumpIfEqual {4343}
	1071 Move X10, 0x347000
	1072 Move X8, [X0]
	1073 Move V9, [X25+12]
	1074 Move V8, [X26+12]
	1075 Move X10, [X10+3792]
	1076 NotImplemented "Instruction LDRH not yet implemented."
	1077 Move X27, X0
	1078 Move X1, [X10]
	1079 Compare X9, 0
	1080 JumpIfEqual {1087}
	1081 Move X10, [X8+176]
	1082 Add X10, X10, 8
	1083 NotImplemented "Instruction LDUR not yet implemented."
	1084 NotImplemented "Instruction CMP not yet implemented."
	1085 Subtract X9, X9, 1
	1086 Add X10, X10, 16
	1087 Move X0, X27
	1088 Move W2, W31
	1089 Call 0x1C5D788
	1090 NotImplemented "Instruction LDRSW not yet implemented."
	1091 Add X8, X8, X9
	1092 Add X0, X8, 312
	1093 Move X8, [X0]
	1094 Move X5, [X0+8]
	1095 Add W1, W28, 1
	1096 Move X0, X27
	1097 Move V0, V9
	1098 Move V1, V8
	1099 Move W2, W22
	1100 Move W3, W21
	1101 Move X4, X29
	1102 NotImplemented "Instruction BLR not yet implemented."
	1103 Or W20, W20, W0
	1104 Move V0, [X25+16]
	1105 Move V1, [X26+16]
	1106 NotImplemented "Instruction FCMP not yet implemented."
	1107 Compare X19, 0
	1108 JumpIfEqual {4343}
	1109 Move X0, X19
	1110 Move X1, X31
	1111 Call VisualElement.get_styleAnimation, X0
	1112 Compare X0, 0
	1113 JumpIfEqual {4343}
	1114 Move X10, 0x347000
	1115 Move X8, [X0]
	1116 Move V9, [X25+16]
	1117 Move V8, [X26+16]
	1118 Move X10, [X10+3792]
	1119 NotImplemented "Instruction LDRH not yet implemented."
	1120 Move X27, X0
	1121 Move X1, [X10]
	1122 Compare X9, 0
	1123 JumpIfEqual {1130}
	1124 Move X10, [X8+176]
	1125 Add X10, X10, 8
	1126 NotImplemented "Instruction LDUR not yet implemented."
	1127 NotImplemented "Instruction CMP not yet implemented."
	1128 Subtract X9, X9, 1
	1129 Add X10, X10, 16
	1130 Move X0, X27
	1131 Move W2, W31
	1132 Call 0x1C5D788
	1133 NotImplemented "Instruction LDRSW not yet implemented."
	1134 Add X8, X8, X9
	1135 Add X0, X8, 312
	1136 Move X8, [X0]
	1137 Move X5, [X0+8]
	1138 Add W1, W28, 2
	1139 Move X0, X27
	1140 Move V0, V9
	1141 Move V1, V8
	1142 Move W2, W22
	1143 Move W3, W21
	1144 Move X4, X29
	1145 NotImplemented "Instruction BLR not yet implemented."
	1146 Or W20, W20, W0
	1147 Move V0, [X25+20]
	1148 Move V1, [X26+20]
	1149 NotImplemented "Instruction FCMP not yet implemented."
	1150 Compare X19, 0
	1151 JumpIfEqual {4343}
	1152 Move X0, X19
	1153 Move X1, X31
	1154 Call VisualElement.get_styleAnimation, X0
	1155 Compare X0, 0
	1156 JumpIfEqual {4343}
	1157 Move X10, 0x347000
	1158 Move X8, [X0]
	1159 Move V9, [X25+20]
	1160 Move V8, [X26+20]
	1161 Move X10, [X10+3792]
	1162 NotImplemented "Instruction LDRH not yet implemented."
	1163 Move X27, X0
	1164 Move X1, [X10]
	1165 Compare X9, 0
	1166 JumpIfEqual {1173}
	1167 Move X10, [X8+176]
	1168 Add X10, X10, 8
	1169 NotImplemented "Instruction LDUR not yet implemented."
	1170 NotImplemented "Instruction CMP not yet implemented."
	1171 Subtract X9, X9, 1
	1172 Add X10, X10, 16
	1173 Move X0, X27
	1174 Move W2, W31
	1175 Call 0x1C5D788
	1176 NotImplemented "Instruction LDRSW not yet implemented."
	1177 Add X8, X8, X9
	1178 Add X0, X8, 312
	1179 Move X8, [X0]
	1180 Move X5, [X0+8]
	1181 Add W1, W28, 3
	1182 Move X0, X27
	1183 Move V0, V9
	1184 Move V1, V8
	1185 Move W2, W22
	1186 Move W3, W21
	1187 Move X4, X29
	1188 NotImplemented "Instruction BLR not yet implemented."
	1189 Or W20, W20, W0
	1190 Move V0, [X25+24]
	1191 Move V1, [X26+24]
	1192 NotImplemented "Instruction FCMP not yet implemented."
	1193 Compare X19, 0
	1194 JumpIfEqual {4343}
	1195 Move X0, X19
	1196 Move X1, X31
	1197 Call VisualElement.get_styleAnimation, X0
	1198 Compare X0, 0
	1199 JumpIfEqual {4343}
	1200 Move X10, 0x347000
	1201 Move X8, [X0]
	1202 Move V9, [X25+24]
	1203 Move V8, [X26+24]
	1204 Move X10, [X10+3792]
	1205 NotImplemented "Instruction LDRH not yet implemented."
	1206 Move X27, X0
	1207 Move X1, [X10]
	1208 Compare X9, 0
	1209 JumpIfEqual {1216}
	1210 Move X10, [X8+176]
	1211 Add X10, X10, 8
	1212 NotImplemented "Instruction LDUR not yet implemented."
	1213 NotImplemented "Instruction CMP not yet implemented."
	1214 Subtract X9, X9, 1
	1215 Add X10, X10, 16
	1216 Move X0, X27
	1217 Move W2, W31
	1218 Call 0x1C5D788
	1219 NotImplemented "Instruction LDRSW not yet implemented."
	1220 Add X8, X8, X9
	1221 Add X0, X8, 312
	1222 Move X8, [X0]
	1223 Move X5, [X0+8]
	1224 Add W1, W28, 4
	1225 Move X0, X27
	1226 Move V0, V9
	1227 Move V1, V8
	1228 Move W2, W22
	1229 Move W3, W21
	1230 Move X4, X29
	1231 NotImplemented "Instruction BLR not yet implemented."
	1232 Or W20, W20, W0
	1233 NotImplemented "Instruction LDUR not yet implemented."
	1234 NotImplemented "Instruction LDUR not yet implemented."
	1235 Move X2, X31
	1236 Call Length.op_Inequality, X0, X1
	1237 Move TEMP, X0
	1238 And TEMP, TEMP, 1
	1239 Compare TEMP, 1
	1240 JumpIfNotEqual {1282}
	1241 Compare X19, 0
	1242 JumpIfEqual {4343}
	1243 Move X0, X19
	1244 Move X1, X31
	1245 Call VisualElement.get_styleAnimation, X0
	1246 Compare X0, 0
	1247 JumpIfEqual {4343}
	1248 Move X10, 0x347000
	1249 Move X8, [X0]
	1250 NotImplemented "Instruction LDUR not yet implemented."
	1251 NotImplemented "Instruction LDUR not yet implemented."
	1252 Move X10, [X10+3792]
	1253 NotImplemented "Instruction LDRH not yet implemented."
	1254 Move X27, X0
	1255 Move X1, [X10]
	1256 Compare X9, 0
	1257 JumpIfEqual {1264}
	1258 Move X10, [X8+176]
	1259 Add X10, X10, 8
	1260 NotImplemented "Instruction LDUR not yet implemented."
	1261 NotImplemented "Instruction CMP not yet implemented."
	1262 Subtract X9, X9, 1
	1263 Add X10, X10, 16
	1264 Move W2, 2
	1265 Move X0, X27
	1266 Call 0x1C5D788
	1267 Move W9, [X10]
	1268 Add W9, W9, 2
	1269 Add X8, X8, W9
	1270 Add X0, X8, 312
	1271 Move X8, [X0]
	1272 Move X7, [X0+8]
	1273 Add W1, W28, 5
	1274 Move X0, X27
	1275 Move X2, X24
	1276 Move X3, X23
	1277 Move W4, W22
	1278 Move W5, W21
	1279 Move X6, X29
	1280 NotImplemented "Instruction BLR not yet implemented."
	1281 Or W20, W20, W0
	1282 Move W8, [X25+36]
	1283 Move W9, [X26+36]
	1284 NotImplemented "Instruction CMP not yet implemented."
	1285 Compare X19, 0
	1286 JumpIfEqual {4343}
	1287 Move X0, X19
	1288 Move X1, X31
	1289 Call VisualElement.get_styleAnimation, X0
	1290 Compare X0, 0
	1291 JumpIfEqual {4343}
	1292 Move X10, 0x347000
	1293 Move X8, [X0]
	1294 Move W24, [X25+36]
	1295 Move W23, [X26+36]
	1296 Move X10, [X10+3792]
	1297 NotImplemented "Instruction LDRH not yet implemented."
	1298 Move X27, X0
	1299 Move X1, [X10]
	1300 Compare X9, 0
	1301 JumpIfEqual {1308}
	1302 Move X10, [X8+176]
	1303 Add X10, X10, 8
	1304 NotImplemented "Instruction LDUR not yet implemented."
	1305 NotImplemented "Instruction CMP not yet implemented."
	1306 Subtract X9, X9, 1
	1307 Add X10, X10, 16
	1308 Move W2, 4
	1309 Move X0, X27
	1310 Call 0x1C5D788
	1311 Move W9, [X10]
	1312 Add W9, W9, 4
	1313 Add X8, X8, W9
	1314 Add X0, X8, 312
	1315 Move X8, [X0]
	1316 Move X7, [X0+8]
	1317 Add W1, W28, 6
	1318 Move X0, X27
	1319 Move W2, W24
	1320 Move W3, W23
	1321 Move W4, W22
	1322 Move W5, W21
	1323 Move X6, X29
	1324 NotImplemented "Instruction BLR not yet implemented."
	1325 Or W20, W20, W0
	1326 Move X0, [X25+40]
	1327 Move X1, [X26+40]
	1328 Move X2, X31
	1329 Call Length.op_Inequality, X0, X1
	1330 Move TEMP, X0
	1331 And TEMP, TEMP, 1
	1332 Compare TEMP, 1
	1333 JumpIfNotEqual {1375}
	1334 Compare X19, 0
	1335 JumpIfEqual {4343}
	1336 Move X0, X19
	1337 Move X1, X31
	1338 Call VisualElement.get_styleAnimation, X0
	1339 Compare X0, 0
	1340 JumpIfEqual {4343}
	1341 Move X10, 0x347000
	1342 Move X8, [X0]
	1343 Move X24, [X25+40]
	1344 Move X23, [X26+40]
	1345 Move X10, [X10+3792]
	1346 NotImplemented "Instruction LDRH not yet implemented."
	1347 Move X27, X0
	1348 Move X1, [X10]
	1349 Compare X9, 0
	1350 JumpIfEqual {1357}
	1351 Move X10, [X8+176]
	1352 Add X10, X10, 8
	1353 NotImplemented "Instruction LDUR not yet implemented."
	1354 NotImplemented "Instruction CMP not yet implemented."
	1355 Subtract X9, X9, 1
	1356 Add X10, X10, 16
	1357 Move W2, 2
	1358 Move X0, X27
	1359 Call 0x1C5D788
	1360 Move W9, [X10]
	1361 Add W9, W9, 2
	1362 Add X8, X8, W9
	1363 Add X0, X8, 312
	1364 Move X8, [X0]
	1365 Move X7, [X0+8]
	1366 Add W1, W28, 7
	1367 Move X0, X27
	1368 Move X2, X24
	1369 Move X3, X23
	1370 Move W4, W22
	1371 Move W5, W21
	1372 Move X6, X29
	1373 NotImplemented "Instruction BLR not yet implemented."
	1374 Or W20, W20, W0
	1375 Move W8, [X25+48]
	1376 Move W9, [X26+48]
	1377 NotImplemented "Instruction CMP not yet implemented."
	1378 Compare X19, 0
	1379 JumpIfEqual {4343}
	1380 Move X0, X19
	1381 Move X1, X31
	1382 Call VisualElement.get_styleAnimation, X0
	1383 Compare X0, 0
	1384 JumpIfEqual {4343}
	1385 Move X10, 0x346000
	1386 Move X8, [X0]
	1387 Move W24, [X25+48]
	1388 Move W23, [X26+48]
	1389 Move X10, [X10+3792]
	1390 NotImplemented "Instruction LDRH not yet implemented."
	1391 Move X27, X0
	1392 Move X1, [X10]
	1393 Compare X9, 0
	1394 JumpIfEqual {1401}
	1395 Move X10, [X8+176]
	1396 Add X10, X10, 8
	1397 NotImplemented "Instruction LDUR not yet implemented."
	1398 NotImplemented "Instruction CMP not yet implemented."
	1399 Subtract X9, X9, 1
	1400 Add X10, X10, 16
	1401 Move W2, 4
	1402 Move X0, X27
	1403 Call 0x1C5D788
	1404 Move W9, [X10]
	1405 Add W9, W9, 4
	1406 Add X8, X8, W9
	1407 Add X0, X8, 312
	1408 Move X8, [X0]
	1409 Move X7, [X0+8]
	1410 Add W1, W28, 8
	1411 Move X0, X27
	1412 Move W2, W24
	1413 Move W3, W23
	1414 Move W4, W22
	1415 Move W5, W21
	1416 Move X6, X29
	1417 NotImplemented "Instruction BLR not yet implemented."
	1418 Or W20, W20, W0
	1419 Move V0, [X25+52]
	1420 Move V1, [X26+52]
	1421 NotImplemented "Instruction FCMP not yet implemented."
	1422 Compare X19, 0
	1423 JumpIfEqual {4343}
	1424 Move X0, X19
	1425 Move X1, X31
	1426 Call VisualElement.get_styleAnimation, X0
	1427 Compare X0, 0
	1428 JumpIfEqual {4343}
	1429 Move X10, 0x346000
	1430 Move X8, [X0]
	1431 Move V9, [X25+52]
	1432 Move V8, [X26+52]
	1433 Move X10, [X10+3792]
	1434 NotImplemented "Instruction LDRH not yet implemented."
	1435 Move X27, X0
	1436 Move X1, [X10]
	1437 Compare X9, 0
	1438 JumpIfEqual {1445}
	1439 Move X10, [X8+176]
	1440 Add X10, X10, 8
	1441 NotImplemented "Instruction LDUR not yet implemented."
	1442 NotImplemented "Instruction CMP not yet implemented."
	1443 Subtract X9, X9, 1
	1444 Add X10, X10, 16
	1445 Move X0, X27
	1446 Move W2, W31
	1447 Call 0x1C5D788
	1448 NotImplemented "Instruction LDRSW not yet implemented."
	1449 Add X8, X8, X9
	1450 Add X0, X8, 312
	1451 Move X8, [X0]
	1452 Move X5, [X0+8]
	1453 Add W1, W28, 9
	1454 Move X0, X27
	1455 Move V0, V9
	1456 Move V1, V8
	1457 Move W2, W22
	1458 Move W3, W21
	1459 Move X4, X29
	1460 NotImplemented "Instruction BLR not yet implemented."
	1461 Or W20, W20, W0
	1462 Move V0, [X25+56]
	1463 Move V1, [X26+56]
	1464 NotImplemented "Instruction FCMP not yet implemented."
	1465 Compare X19, 0
	1466 JumpIfEqual {4343}
	1467 Move X0, X19
	1468 Move X1, X31
	1469 Call VisualElement.get_styleAnimation, X0
	1470 Compare X0, 0
	1471 JumpIfEqual {4343}
	1472 Move X10, 0x346000
	1473 Move X8, [X0]
	1474 Move V9, [X25+56]
	1475 Move V8, [X26+56]
	1476 Move X10, [X10+3792]
	1477 NotImplemented "Instruction LDRH not yet implemented."
	1478 Move X27, X0
	1479 Move X1, [X10]
	1480 Compare X9, 0
	1481 JumpIfEqual {1488}
	1482 Move X10, [X8+176]
	1483 Add X10, X10, 8
	1484 NotImplemented "Instruction LDUR not yet implemented."
	1485 NotImplemented "Instruction CMP not yet implemented."
	1486 Subtract X9, X9, 1
	1487 Add X10, X10, 16
	1488 Move X0, X27
	1489 Move W2, W31
	1490 Call 0x1C5D788
	1491 NotImplemented "Instruction LDRSW not yet implemented."
	1492 Add X8, X8, X9
	1493 Add X0, X8, 312
	1494 Move X8, [X0]
	1495 Move X5, [X0+8]
	1496 Add W1, W28, 10
	1497 Move X0, X27
	1498 Move V0, V9
	1499 Move V1, V8
	1500 Move W2, W22
	1501 Move W3, W21
	1502 Move X4, X29
	1503 NotImplemented "Instruction BLR not yet implemented."
	1504 Or W20, W20, W0
	1505 Move W8, [X25+60]
	1506 Move W9, [X26+60]
	1507 NotImplemented "Instruction CMP not yet implemented."
	1508 Compare X19, 0
	1509 JumpIfEqual {4343}
	1510 Move X0, X19
	1511 Move X1, X31
	1512 Call VisualElement.get_styleAnimation, X0
	1513 Compare X0, 0
	1514 JumpIfEqual {4343}
	1515 Move X10, 0x346000
	1516 Move X8, [X0]
	1517 Move W24, [X25+60]
	1518 Move W23, [X26+60]
	1519 Move X10, [X10+3792]
	1520 NotImplemented "Instruction LDRH not yet implemented."
	1521 Move X27, X0
	1522 Move X1, [X10]
	1523 Compare X9, 0
	1524 JumpIfEqual {1531}
	1525 Move X10, [X8+176]
	1526 Add X10, X10, 8
	1527 NotImplemented "Instruction LDUR not yet implemented."
	1528 NotImplemented "Instruction CMP not yet implemented."
	1529 Subtract X9, X9, 1
	1530 Add X10, X10, 16
	1531 Move W2, 4
	1532 Move X0, X27
	1533 Call 0x1C5D788
	1534 Move W9, [X10]
	1535 Add W9, W9, 4
	1536 Add X8, X8, W9
	1537 Add X0, X8, 312
	1538 Move X8, [X0]
	1539 Move X7, [X0+8]
	1540 Add W1, W28, 11
	1541 Move X0, X27
	1542 Move W2, W24
	1543 Move W3, W23
	1544 Move W4, W22
	1545 Move W5, W21
	1546 Move X6, X29
	1547 NotImplemented "Instruction BLR not yet implemented."
	1548 Or W20, W20, W0
	1549 Move X0, [X25+64]
	1550 Move X1, [X26+64]
	1551 Move X2, X31
	1552 Call Length.op_Inequality, X0, X1
	1553 Move TEMP, X0
	1554 And TEMP, TEMP, 1
	1555 Compare TEMP, 1
	1556 JumpIfNotEqual {1598}
	1557 Compare X19, 0
	1558 JumpIfEqual {4343}
	1559 Move X0, X19
	1560 Move X1, X31
	1561 Call VisualElement.get_styleAnimation, X0
	1562 Compare X0, 0
	1563 JumpIfEqual {4343}
	1564 Move X10, 0x346000
	1565 Move X8, [X0]
	1566 Move X24, [X25+64]
	1567 Move X23, [X26+64]
	1568 Move X10, [X10+3792]
	1569 NotImplemented "Instruction LDRH not yet implemented."
	1570 Move X27, X0
	1571 Move X1, [X10]
	1572 Compare X9, 0
	1573 JumpIfEqual {1580}
	1574 Move X10, [X8+176]
	1575 Add X10, X10, 8
	1576 NotImplemented "Instruction LDUR not yet implemented."
	1577 NotImplemented "Instruction CMP not yet implemented."
	1578 Subtract X9, X9, 1
	1579 Add X10, X10, 16
	1580 Move W2, 2
	1581 Move X0, X27
	1582 Call 0x1C5D788
	1583 Move W9, [X10]
	1584 Add W9, W9, 2
	1585 Add X8, X8, W9
	1586 Add X0, X8, 312
	1587 Move X8, [X0]
	1588 Move X7, [X0+8]
	1589 Add W1, W28, 12
	1590 Move X0, X27
	1591 Move X2, X24
	1592 Move X3, X23
	1593 Move W4, W22
	1594 Move W5, W21
	1595 Move X6, X29
	1596 NotImplemented "Instruction BLR not yet implemented."
	1597 Or W20, W20, W0
	1598 Move W8, [X25+72]
	1599 Move W9, [X26+72]
	1600 NotImplemented "Instruction CMP not yet implemented."
	1601 Compare X19, 0
	1602 JumpIfEqual {4343}
	1603 Move X0, X19
	1604 Move X1, X31
	1605 Call VisualElement.get_styleAnimation, X0
	1606 Compare X0, 0
	1607 JumpIfEqual {4343}
	1608 Move X10, 0x346000
	1609 Move X8, [X0]
	1610 Move W24, [X25+72]
	1611 Move W23, [X26+72]
	1612 Move X10, [X10+3792]
	1613 NotImplemented "Instruction LDRH not yet implemented."
	1614 Move X27, X0
	1615 Move X1, [X10]
	1616 Compare X9, 0
	1617 JumpIfEqual {1624}
	1618 Move X10, [X8+176]
	1619 Add X10, X10, 8
	1620 NotImplemented "Instruction LDUR not yet implemented."
	1621 NotImplemented "Instruction CMP not yet implemented."
	1622 Subtract X9, X9, 1
	1623 Add X10, X10, 16
	1624 Move W2, 4
	1625 Move X0, X27
	1626 Call 0x1C5D788
	1627 Move W9, [X10]
	1628 Add W9, W9, 4
	1629 Add X8, X8, W9
	1630 Add X0, X8, 312
	1631 Move X8, [X0]
	1632 Move X7, [X0+8]
	1633 Add W1, W28, 13
	1634 Move X0, X27
	1635 Move W2, W24
	1636 Move W3, W23
	1637 Move W4, W22
	1638 Move W5, W21
	1639 Move X6, X29
	1640 NotImplemented "Instruction BLR not yet implemented."
	1641 Or W20, W20, W0
	1642 NotImplemented "Instruction LDUR not yet implemented."
	1643 NotImplemented "Instruction LDUR not yet implemented."
	1644 Move X2, X31
	1645 Call Length.op_Inequality, X0, X1
	1646 Move TEMP, X0
	1647 And TEMP, TEMP, 1
	1648 Compare TEMP, 1
	1649 JumpIfNotEqual {1691}
	1650 Compare X19, 0
	1651 JumpIfEqual {4343}
	1652 Move X0, X19
	1653 Move X1, X31
	1654 Call VisualElement.get_styleAnimation, X0
	1655 Compare X0, 0
	1656 JumpIfEqual {4343}
	1657 Move X10, 0x346000
	1658 Move X8, [X0]
	1659 NotImplemented "Instruction LDUR not yet implemented."
	1660 NotImplemented "Instruction LDUR not yet implemented."
	1661 Move X10, [X10+3792]
	1662 NotImplemented "Instruction LDRH not yet implemented."
	1663 Move X27, X0
	1664 Move X1, [X10]
	1665 Compare X9, 0
	1666 JumpIfEqual {1673}
	1667 Move X10, [X8+176]
	1668 Add X10, X10, 8
	1669 NotImplemented "Instruction LDUR not yet implemented."
	1670 NotImplemented "Instruction CMP not yet implemented."
	1671 Subtract X9, X9, 1
	1672 Add X10, X10, 16
	1673 Move W2, 2
	1674 Move X0, X27
	1675 Call 0x1C5D788
	1676 Move W9, [X10]
	1677 Add W9, W9, 2
	1678 Add X8, X8, W9
	1679 Add X0, X8, 312
	1680 Move X8, [X0]
	1681 Move X7, [X0+8]
	1682 Add W1, W28, 14
	1683 Move X0, X27
	1684 Move X2, X24
	1685 Move X3, X23
	1686 Move W4, W22
	1687 Move W5, W21
	1688 Move X6, X29
	1689 NotImplemented "Instruction BLR not yet implemented."
	1690 Or W20, W20, W0
	1691 NotImplemented "Instruction LDUR not yet implemented."
	1692 NotImplemented "Instruction LDUR not yet implemented."
	1693 Move X2, X31
	1694 Call Length.op_Inequality, X0, X1
	1695 Move TEMP, X0
	1696 And TEMP, TEMP, 1
	1697 Compare TEMP, 1
	1698 JumpIfNotEqual {1740}
	1699 Compare X19, 0
	1700 JumpIfEqual {4343}
	1701 Move X0, X19
	1702 Move X1, X31
	1703 Call VisualElement.get_styleAnimation, X0
	1704 Compare X0, 0
	1705 JumpIfEqual {4343}
	1706 Move X10, 0x346000
	1707 Move X8, [X0]
	1708 NotImplemented "Instruction LDUR not yet implemented."
	1709 NotImplemented "Instruction LDUR not yet implemented."
	1710 Move X10, [X10+3792]
	1711 NotImplemented "Instruction LDRH not yet implemented."
	1712 Move X27, X0
	1713 Move X1, [X10]
	1714 Compare X9, 0
	1715 JumpIfEqual {1722}
	1716 Move X10, [X8+176]
	1717 Add X10, X10, 8
	1718 NotImplemented "Instruction LDUR not yet implemented."
	1719 NotImplemented "Instruction CMP not yet implemented."
	1720 Subtract X9, X9, 1
	1721 Add X10, X10, 16
	1722 Move W2, 2
	1723 Move X0, X27
	1724 Call 0x1C5D788
	1725 Move W9, [X10]
	1726 Add W9, W9, 2
	1727 Add X8, X8, W9
	1728 Add X0, X8, 312
	1729 Move X8, [X0]
	1730 Move X7, [X0+8]
	1731 Add W1, W28, 15
	1732 Move X0, X27
	1733 Move X2, X24
	1734 Move X3, X23
	1735 Move W4, W22
	1736 Move W5, W21
	1737 Move X6, X29
	1738 NotImplemented "Instruction BLR not yet implemented."
	1739 Or W20, W20, W0
	1740 NotImplemented "Instruction LDUR not yet implemented."
	1741 NotImplemented "Instruction LDUR not yet implemented."
	1742 Move X2, X31
	1743 Call Length.op_Inequality, X0, X1
	1744 Move TEMP, X0
	1745 And TEMP, TEMP, 1
	1746 Compare TEMP, 1
	1747 JumpIfNotEqual {1789}
	1748 Compare X19, 0
	1749 JumpIfEqual {4343}
	1750 Move X0, X19
	1751 Move X1, X31
	1752 Call VisualElement.get_styleAnimation, X0
	1753 Compare X0, 0
	1754 JumpIfEqual {4343}
	1755 Move X10, 0x346000
	1756 Move X8, [X0]
	1757 NotImplemented "Instruction LDUR not yet implemented."
	1758 NotImplemented "Instruction LDUR not yet implemented."
	1759 Move X10, [X10+3792]
	1760 NotImplemented "Instruction LDRH not yet implemented."
	1761 Move X27, X0
	1762 Move X1, [X10]
	1763 Compare X9, 0
	1764 JumpIfEqual {1771}
	1765 Move X10, [X8+176]
	1766 Add X10, X10, 8
	1767 NotImplemented "Instruction LDUR not yet implemented."
	1768 NotImplemented "Instruction CMP not yet implemented."
	1769 Subtract X9, X9, 1
	1770 Add X10, X10, 16
	1771 Move W2, 2
	1772 Move X0, X27
	1773 Call 0x1C5D788
	1774 Move W9, [X10]
	1775 Add W9, W9, 2
	1776 Add X8, X8, W9
	1777 Add X0, X8, 312
	1778 Move X8, [X0]
	1779 Move X7, [X0+8]
	1780 Add W1, W28, 16
	1781 Move X0, X27
	1782 Move X2, X24
	1783 Move X3, X23
	1784 Move W4, W22
	1785 Move W5, W21
	1786 Move X6, X29
	1787 NotImplemented "Instruction BLR not yet implemented."
	1788 Or W20, W20, W0
	1789 NotImplemented "Instruction LDUR not yet implemented."
	1790 NotImplemented "Instruction LDUR not yet implemented."
	1791 Move X2, X31
	1792 Call Length.op_Inequality, X0, X1
	1793 Move TEMP, X0
	1794 And TEMP, TEMP, 1
	1795 Compare TEMP, 1
	1796 JumpIfNotEqual {1838}
	1797 Compare X19, 0
	1798 JumpIfEqual {4343}
	1799 Move X0, X19
	1800 Move X1, X31
	1801 Call VisualElement.get_styleAnimation, X0
	1802 Compare X0, 0
	1803 JumpIfEqual {4343}
	1804 Move X10, 0x346000
	1805 Move X8, [X0]
	1806 NotImplemented "Instruction LDUR not yet implemented."
	1807 NotImplemented "Instruction LDUR not yet implemented."
	1808 Move X10, [X10+3792]
	1809 NotImplemented "Instruction LDRH not yet implemented."
	1810 Move X27, X0
	1811 Move X1, [X10]
	1812 Compare X9, 0
	1813 JumpIfEqual {1820}
	1814 Move X10, [X8+176]
	1815 Add X10, X10, 8
	1816 NotImplemented "Instruction LDUR not yet implemented."
	1817 NotImplemented "Instruction CMP not yet implemented."
	1818 Subtract X9, X9, 1
	1819 Add X10, X10, 16
	1820 Move W2, 2
	1821 Move X0, X27
	1822 Call 0x1C5D788
	1823 Move W9, [X10]
	1824 Add W9, W9, 2
	1825 Add X8, X8, W9
	1826 Add X0, X8, 312
	1827 Move X8, [X0]
	1828 Move X7, [X0+8]
	1829 Add W1, W28, 17
	1830 Move X0, X27
	1831 Move X2, X24
	1832 Move X3, X23
	1833 Move W4, W22
	1834 Move W5, W21
	1835 Move X6, X29
	1836 NotImplemented "Instruction BLR not yet implemented."
	1837 Or W20, W20, W0
	1838 NotImplemented "Instruction LDUR not yet implemented."
	1839 NotImplemented "Instruction LDUR not yet implemented."
	1840 Move X2, X31
	1841 Call Length.op_Inequality, X0, X1
	1842 Move TEMP, X0
	1843 And TEMP, TEMP, 1
	1844 Compare TEMP, 1
	1845 JumpIfNotEqual {1887}
	1846 Compare X19, 0
	1847 JumpIfEqual {4343}
	1848 Move X0, X19
	1849 Move X1, X31
	1850 Call VisualElement.get_styleAnimation, X0
	1851 Compare X0, 0
	1852 JumpIfEqual {4343}
	1853 Move X10, 0x346000
	1854 Move X8, [X0]
	1855 NotImplemented "Instruction LDUR not yet implemented."
	1856 NotImplemented "Instruction LDUR not yet implemented."
	1857 Move X10, [X10+3792]
	1858 NotImplemented "Instruction LDRH not yet implemented."
	1859 Move X27, X0
	1860 Move X1, [X10]
	1861 Compare X9, 0
	1862 JumpIfEqual {1869}
	1863 Move X10, [X8+176]
	1864 Add X10, X10, 8
	1865 NotImplemented "Instruction LDUR not yet implemented."
	1866 NotImplemented "Instruction CMP not yet implemented."
	1867 Subtract X9, X9, 1
	1868 Add X10, X10, 16
	1869 Move W2, 2
	1870 Move X0, X27
	1871 Call 0x1C5D788
	1872 Move W9, [X10]
	1873 Add W9, W9, 2
	1874 Add X8, X8, W9
	1875 Add X0, X8, 312
	1876 Move X8, [X0]
	1877 Move X7, [X0+8]
	1878 Add W1, W28, 18
	1879 Move X0, X27
	1880 Move X2, X24
	1881 Move X3, X23
	1882 Move W4, W22
	1883 Move W5, W21
	1884 Move X6, X29
	1885 NotImplemented "Instruction BLR not yet implemented."
	1886 Or W20, W20, W0
	1887 NotImplemented "Instruction LDUR not yet implemented."
	1888 NotImplemented "Instruction LDUR not yet implemented."
	1889 Move X2, X31
	1890 Call Length.op_Inequality, X0, X1
	1891 Move TEMP, X0
	1892 And TEMP, TEMP, 1
	1893 Compare TEMP, 1
	1894 JumpIfNotEqual {1936}
	1895 Compare X19, 0
	1896 JumpIfEqual {4343}
	1897 Move X0, X19
	1898 Move X1, X31
	1899 Call VisualElement.get_styleAnimation, X0
	1900 Compare X0, 0
	1901 JumpIfEqual {4343}
	1902 Move X10, 0x346000
	1903 Move X8, [X0]
	1904 NotImplemented "Instruction LDUR not yet implemented."
	1905 NotImplemented "Instruction LDUR not yet implemented."
	1906 Move X10, [X10+3792]
	1907 NotImplemented "Instruction LDRH not yet implemented."
	1908 Move X27, X0
	1909 Move X1, [X10]
	1910 Compare X9, 0
	1911 JumpIfEqual {1918}
	1912 Move X10, [X8+176]
	1913 Add X10, X10, 8
	1914 NotImplemented "Instruction LDUR not yet implemented."
	1915 NotImplemented "Instruction CMP not yet implemented."
	1916 Subtract X9, X9, 1
	1917 Add X10, X10, 16
	1918 Move W2, 2
	1919 Move X0, X27
	1920 Call 0x1C5D788
	1921 Move W9, [X10]
	1922 Add W9, W9, 2
	1923 Add X8, X8, W9
	1924 Add X0, X8, 312
	1925 Move X8, [X0]
	1926 Move X7, [X0+8]
	1927 Add W1, W28, 19
	1928 Move X0, X27
	1929 Move X2, X24
	1930 Move X3, X23
	1931 Move W4, W22
	1932 Move W5, W21
	1933 Move X6, X29
	1934 NotImplemented "Instruction BLR not yet implemented."
	1935 Or W20, W20, W0
	1936 NotImplemented "Instruction LDUR not yet implemented."
	1937 NotImplemented "Instruction LDUR not yet implemented."
	1938 Move X2, X31
	1939 Call Length.op_Inequality, X0, X1
	1940 Move TEMP, X0
	1941 And TEMP, TEMP, 1
	1942 Compare TEMP, 1
	1943 JumpIfNotEqual {1985}
	1944 Compare X19, 0
	1945 JumpIfEqual {4343}
	1946 Move X0, X19
	1947 Move X1, X31
	1948 Call VisualElement.get_styleAnimation, X0
	1949 Compare X0, 0
	1950 JumpIfEqual {4343}
	1951 Move X10, 0x346000
	1952 Move X8, [X0]
	1953 NotImplemented "Instruction LDUR not yet implemented."
	1954 NotImplemented "Instruction LDUR not yet implemented."
	1955 Move X10, [X10+3792]
	1956 NotImplemented "Instruction LDRH not yet implemented."
	1957 Move X27, X0
	1958 Move X1, [X10]
	1959 Compare X9, 0
	1960 JumpIfEqual {1967}
	1961 Move X10, [X8+176]
	1962 Add X10, X10, 8
	1963 NotImplemented "Instruction LDUR not yet implemented."
	1964 NotImplemented "Instruction CMP not yet implemented."
	1965 Subtract X9, X9, 1
	1966 Add X10, X10, 16
	1967 Move W2, 2
	1968 Move X0, X27
	1969 Call 0x1C5D788
	1970 Move W9, [X10]
	1971 Add W9, W9, 2
	1972 Add X8, X8, W9
	1973 Add X0, X8, 312
	1974 Move X8, [X0]
	1975 Move X7, [X0+8]
	1976 Add W1, W28, 20
	1977 Move X0, X27
	1978 Move X2, X24
	1979 Move X3, X23
	1980 Move W4, W22
	1981 Move W5, W21
	1982 Move X6, X29
	1983 NotImplemented "Instruction BLR not yet implemented."
	1984 Or W20, W20, W0
	1985 NotImplemented "Instruction LDUR not yet implemented."
	1986 NotImplemented "Instruction LDUR not yet implemented."
	1987 Move X2, X31
	1988 Call Length.op_Inequality, X0, X1
	1989 Move TEMP, X0
	1990 And TEMP, TEMP, 1
	1991 Compare TEMP, 1
	1992 JumpIfNotEqual {2034}
	1993 Compare X19, 0
	1994 JumpIfEqual {4343}
	1995 Move X0, X19
	1996 Move X1, X31
	1997 Call VisualElement.get_styleAnimation, X0
	1998 Compare X0, 0
	1999 JumpIfEqual {4343}
	2000 Move X10, 0x346000
	2001 Move X8, [X0]
	2002 NotImplemented "Instruction LDUR not yet implemented."
	2003 NotImplemented "Instruction LDUR not yet implemented."
	2004 Move X10, [X10+3792]
	2005 NotImplemented "Instruction LDRH not yet implemented."
	2006 Move X27, X0
	2007 Move X1, [X10]
	2008 Compare X9, 0
	2009 JumpIfEqual {2016}
	2010 Move X10, [X8+176]
	2011 Add X10, X10, 8
	2012 NotImplemented "Instruction LDUR not yet implemented."
	2013 NotImplemented "Instruction CMP not yet implemented."
	2014 Subtract X9, X9, 1
	2015 Add X10, X10, 16
	2016 Move W2, 2
	2017 Move X0, X27
	2018 Call 0x1C5D788
	2019 Move W9, [X10]
	2020 Add W9, W9, 2
	2021 Add X8, X8, W9
	2022 Add X0, X8, 312
	2023 Move X8, [X0]
	2024 Move X7, [X0+8]
	2025 Add W1, W28, 21
	2026 Move X0, X27
	2027 Move X2, X24
	2028 Move X3, X23
	2029 Move W4, W22
	2030 Move W5, W21
	2031 Move X6, X29
	2032 NotImplemented "Instruction BLR not yet implemented."
	2033 Or W20, W20, W0
	2034 NotImplemented "Instruction LDUR not yet implemented."
	2035 NotImplemented "Instruction LDUR not yet implemented."
	2036 Move X2, X31
	2037 Call Length.op_Inequality, X0, X1
	2038 Move TEMP, X0
	2039 And TEMP, TEMP, 1
	2040 Compare TEMP, 1
	2041 JumpIfNotEqual {2083}
	2042 Compare X19, 0
	2043 JumpIfEqual {4343}
	2044 Move X0, X19
	2045 Move X1, X31
	2046 Call VisualElement.get_styleAnimation, X0
	2047 Compare X0, 0
	2048 JumpIfEqual {4343}
	2049 Move X10, 0x346000
	2050 Move X8, [X0]
	2051 NotImplemented "Instruction LDUR not yet implemented."
	2052 NotImplemented "Instruction LDUR not yet implemented."
	2053 Move X10, [X10+3792]
	2054 NotImplemented "Instruction LDRH not yet implemented."
	2055 Move X27, X0
	2056 Move X1, [X10]
	2057 Compare X9, 0
	2058 JumpIfEqual {2065}
	2059 Move X10, [X8+176]
	2060 Add X10, X10, 8
	2061 NotImplemented "Instruction LDUR not yet implemented."
	2062 NotImplemented "Instruction CMP not yet implemented."
	2063 Subtract X9, X9, 1
	2064 Add X10, X10, 16
	2065 Move W2, 2
	2066 Move X0, X27
	2067 Call 0x1C5D788
	2068 Move W9, [X10]
	2069 Add W9, W9, 2
	2070 Add X8, X8, W9
	2071 Add X0, X8, 312
	2072 Move X8, [X0]
	2073 Move X7, [X0+8]
	2074 Add W1, W28, 22
	2075 Move X0, X27
	2076 Move X2, X24
	2077 Move X3, X23
	2078 Move W4, W22
	2079 Move W5, W21
	2080 Move X6, X29
	2081 NotImplemented "Instruction BLR not yet implemented."
	2082 Or W20, W20, W0
	2083 NotImplemented "Instruction LDUR not yet implemented."
	2084 NotImplemented "Instruction LDUR not yet implemented."
	2085 Move X2, X31
	2086 Call Length.op_Inequality, X0, X1
	2087 Move TEMP, X0
	2088 And TEMP, TEMP, 1
	2089 Compare TEMP, 1
	2090 JumpIfNotEqual {2132}
	2091 Compare X19, 0
	2092 JumpIfEqual {4343}
	2093 Move X0, X19
	2094 Move X1, X31
	2095 Call VisualElement.get_styleAnimation, X0
	2096 Compare X0, 0
	2097 JumpIfEqual {4343}
	2098 Move X10, 0x346000
	2099 Move X8, [X0]
	2100 NotImplemented "Instruction LDUR not yet implemented."
	2101 NotImplemented "Instruction LDUR not yet implemented."
	2102 Move X10, [X10+3792]
	2103 NotImplemented "Instruction LDRH not yet implemented."
	2104 Move X27, X0
	2105 Move X1, [X10]
	2106 Compare X9, 0
	2107 JumpIfEqual {2114}
	2108 Move X10, [X8+176]
	2109 Add X10, X10, 8
	2110 NotImplemented "Instruction LDUR not yet implemented."
	2111 NotImplemented "Instruction CMP not yet implemented."
	2112 Subtract X9, X9, 1
	2113 Add X10, X10, 16
	2114 Move W2, 2
	2115 Move X0, X27
	2116 Call 0x1C5D788
	2117 Move W9, [X10]
	2118 Add W9, W9, 2
	2119 Add X8, X8, W9
	2120 Add X0, X8, 312
	2121 Move X8, [X0]
	2122 Move X7, [X0+8]
	2123 Add W1, W28, 23
	2124 Move X0, X27
	2125 Move X2, X24
	2126 Move X3, X23
	2127 Move W4, W22
	2128 Move W5, W21
	2129 Move X6, X29
	2130 NotImplemented "Instruction BLR not yet implemented."
	2131 Or W20, W20, W0
	2132 NotImplemented "Instruction LDUR not yet implemented."
	2133 NotImplemented "Instruction LDUR not yet implemented."
	2134 Move X2, X31
	2135 Call Length.op_Inequality, X0, X1
	2136 Move TEMP, X0
	2137 And TEMP, TEMP, 1
	2138 Compare TEMP, 1
	2139 JumpIfNotEqual {2181}
	2140 Compare X19, 0
	2141 JumpIfEqual {4343}
	2142 Move X0, X19
	2143 Move X1, X31
	2144 Call VisualElement.get_styleAnimation, X0
	2145 Compare X0, 0
	2146 JumpIfEqual {4343}
	2147 Move X10, 0x346000
	2148 Move X8, [X0]
	2149 NotImplemented "Instruction LDUR not yet implemented."
	2150 NotImplemented "Instruction LDUR not yet implemented."
	2151 Move X10, [X10+3792]
	2152 NotImplemented "Instruction LDRH not yet implemented."
	2153 Move X27, X0
	2154 Move X1, [X10]
	2155 Compare X9, 0
	2156 JumpIfEqual {2163}
	2157 Move X10, [X8+176]
	2158 Add X10, X10, 8
	2159 NotImplemented "Instruction LDUR not yet implemented."
	2160 NotImplemented "Instruction CMP not yet implemented."
	2161 Subtract X9, X9, 1
	2162 Add X10, X10, 16
	2163 Move W2, 2
	2164 Move X0, X27
	2165 Call 0x1C5D788
	2166 Move W9, [X10]
	2167 Add W9, W9, 2
	2168 Add X8, X8, W9
	2169 Add X0, X8, 312
	2170 Move X8, [X0]
	2171 Move X7, [X0+8]
	2172 Add W1, W28, 24
	2173 Move X0, X27
	2174 Move X2, X24
	2175 Move X3, X23
	2176 Move W4, W22
	2177 Move W5, W21
	2178 Move X6, X29
	2179 NotImplemented "Instruction BLR not yet implemented."
	2180 Or W20, W20, W0
	2181 NotImplemented "Instruction LDUR not yet implemented."
	2182 NotImplemented "Instruction LDUR not yet implemented."
	2183 Move X2, X31
	2184 Call Length.op_Inequality, X0, X1
	2185 Move TEMP, X0
	2186 And TEMP, TEMP, 1
	2187 Compare TEMP, 1
	2188 JumpIfNotEqual {2230}
	2189 Compare X19, 0
	2190 JumpIfEqual {4343}
	2191 Move X0, X19
	2192 Move X1, X31
	2193 Call VisualElement.get_styleAnimation, X0
	2194 Compare X0, 0
	2195 JumpIfEqual {4343}
	2196 Move X10, 0x346000
	2197 Move X8, [X0]
	2198 NotImplemented "Instruction LDUR not yet implemented."
	2199 NotImplemented "Instruction LDUR not yet implemented."
	2200 Move X10, [X10+3792]
	2201 NotImplemented "Instruction LDRH not yet implemented."
	2202 Move X27, X0
	2203 Move X1, [X10]
	2204 Compare X9, 0
	2205 JumpIfEqual {2212}
	2206 Move X10, [X8+176]
	2207 Add X10, X10, 8
	2208 NotImplemented "Instruction LDUR not yet implemented."
	2209 NotImplemented "Instruction CMP not yet implemented."
	2210 Subtract X9, X9, 1
	2211 Add X10, X10, 16
	2212 Move W2, 2
	2213 Move X0, X27
	2214 Call 0x1C5D788
	2215 Move W9, [X10]
	2216 Add W9, W9, 2
	2217 Add X8, X8, W9
	2218 Add X0, X8, 312
	2219 Move X8, [X0]
	2220 Move X7, [X0+8]
	2221 Add W1, W28, 25
	2222 Move X0, X27
	2223 Move X2, X24
	2224 Move X3, X23
	2225 Move W4, W22
	2226 Move W5, W21
	2227 Move X6, X29
	2228 NotImplemented "Instruction BLR not yet implemented."
	2229 Or W20, W20, W0
	2230 NotImplemented "Instruction LDUR not yet implemented."
	2231 NotImplemented "Instruction LDUR not yet implemented."
	2232 Move X2, X31
	2233 Call Length.op_Inequality, X0, X1
	2234 Move TEMP, X0
	2235 And TEMP, TEMP, 1
	2236 Compare TEMP, 1
	2237 JumpIfNotEqual {2279}
	2238 Compare X19, 0
	2239 JumpIfEqual {4343}
	2240 Move X0, X19
	2241 Move X1, X31
	2242 Call VisualElement.get_styleAnimation, X0
	2243 Compare X0, 0
	2244 JumpIfEqual {4343}
	2245 Move X10, 0x346000
	2246 Move X8, [X0]
	2247 NotImplemented "Instruction LDUR not yet implemented."
	2248 NotImplemented "Instruction LDUR not yet implemented."
	2249 Move X10, [X10+3792]
	2250 NotImplemented "Instruction LDRH not yet implemented."
	2251 Move X27, X0
	2252 Move X1, [X10]
	2253 Compare X9, 0
	2254 JumpIfEqual {2261}
	2255 Move X10, [X8+176]
	2256 Add X10, X10, 8
	2257 NotImplemented "Instruction LDUR not yet implemented."
	2258 NotImplemented "Instruction CMP not yet implemented."
	2259 Subtract X9, X9, 1
	2260 Add X10, X10, 16
	2261 Move W2, 2
	2262 Move X0, X27
	2263 Call 0x1C5D788
	2264 Move W9, [X10]
	2265 Add W9, W9, 2
	2266 Add X8, X8, W9
	2267 Add X0, X8, 312
	2268 Move X8, [X0]
	2269 Move X7, [X0+8]
	2270 Add W1, W28, 26
	2271 Move X0, X27
	2272 Move X2, X24
	2273 Move X3, X23
	2274 Move W4, W22
	2275 Move W5, W21
	2276 Move X6, X29
	2277 NotImplemented "Instruction BLR not yet implemented."
	2278 Or W20, W20, W0
	2279 Move W8, [X25+180]
	2280 Move W9, [X26+180]
	2281 NotImplemented "Instruction CMP not yet implemented."
	2282 Compare X19, 0
	2283 JumpIfEqual {4343}
	2284 Move X0, X19
	2285 Move X1, X31
	2286 Call VisualElement.get_styleAnimation, X0
	2287 Compare X0, 0
	2288 JumpIfEqual {4343}
	2289 Move X10, 0x346000
	2290 Move X8, [X0]
	2291 Move W24, [X25+180]
	2292 Move W23, [X26+180]
	2293 Move X10, [X10+3792]
	2294 NotImplemented "Instruction LDRH not yet implemented."
	2295 Move X27, X0
	2296 Move X1, [X10]
	2297 Compare X9, 0
	2298 JumpIfEqual {2305}
	2299 Move X10, [X8+176]
	2300 Add X10, X10, 8
	2301 NotImplemented "Instruction LDUR not yet implemented."
	2302 NotImplemented "Instruction CMP not yet implemented."
	2303 Subtract X9, X9, 1
	2304 Add X10, X10, 16
	2305 Move W2, 4
	2306 Move X0, X27
	2307 Call 0x1C5D788
	2308 Move W9, [X10]
	2309 Add W9, W9, 4
	2310 Add X8, X8, W9
	2311 Add X0, X8, 312
	2312 Move X8, [X0]
	2313 Move X7, [X0+8]
	2314 Add W1, W28, 27
	2315 Move X0, X27
	2316 Move W2, W24
	2317 Move W3, W23
	2318 Move W4, W22
	2319 Move W5, W21
	2320 Move X6, X29
	2321 NotImplemented "Instruction BLR not yet implemented."
	2322 Or W20, W20, W0
	2323 Move X0, [X25+184]
	2324 Move X1, [X26+184]
	2325 Move X2, X31
	2326 Call Length.op_Inequality, X0, X1
	2327 Move TEMP, X0
	2328 And TEMP, TEMP, 1
	2329 Compare TEMP, 1
	2330 JumpIfNotEqual {2372}
	2331 Compare X19, 0
	2332 JumpIfEqual {4343}
	2333 Move X0, X19
	2334 Move X1, X31
	2335 Call VisualElement.get_styleAnimation, X0
	2336 Compare X0, 0
	2337 JumpIfEqual {4343}
	2338 Move X10, 0x346000
	2339 Move X8, [X0]
	2340 Move X24, [X25+184]
	2341 Move X23, [X26+184]
	2342 Move X10, [X10+3792]
	2343 NotImplemented "Instruction LDRH not yet implemented."
	2344 Move X27, X0
	2345 Move X1, [X10]
	2346 Compare X9, 0
	2347 JumpIfEqual {2354}
	2348 Move X10, [X8+176]
	2349 Add X10, X10, 8
	2350 NotImplemented "Instruction LDUR not yet implemented."
	2351 NotImplemented "Instruction CMP not yet implemented."
	2352 Subtract X9, X9, 1
	2353 Add X10, X10, 16
	2354 Move W2, 2
	2355 Move X0, X27
	2356 Call 0x1C5D788
	2357 Move W9, [X10]
	2358 Add W9, W9, 2
	2359 Add X8, X8, W9
	2360 Add X0, X8, 312
	2361 Move X8, [X0]
	2362 Move X7, [X0+8]
	2363 Add W1, W28, 28
	2364 Move X0, X27
	2365 Move X2, X24
	2366 Move X3, X23
	2367 Move W4, W22
	2368 Move W5, W21
	2369 Move X6, X29
	2370 NotImplemented "Instruction BLR not yet implemented."
	2371 Or W20, W20, W0
	2372 Move X0, [X25+192]
	2373 Move X1, [X26+192]
	2374 Move X2, X31
	2375 Call Length.op_Inequality, X0, X1
	2376 Move TEMP, X0
	2377 And TEMP, TEMP, 1
	2378 Compare TEMP, 1
	2379 JumpIfNotEqual {2421}
	2380 Compare X19, 0
	2381 JumpIfEqual {4343}
	2382 Move X0, X19
	2383 Move X1, X31
	2384 Call VisualElement.get_styleAnimation, X0
	2385 Compare X0, 0
	2386 JumpIfEqual {4343}
	2387 Move X10, 0x346000
	2388 Move X8, [X0]
	2389 Move X24, [X25+192]
	2390 Move X23, [X26+192]
	2391 Move X10, [X10+3792]
	2392 NotImplemented "Instruction LDRH not yet implemented."
	2393 Move X27, X0
	2394 Move X1, [X10]
	2395 Compare X9, 0
	2396 JumpIfEqual {2403}
	2397 Move X10, [X8+176]
	2398 Add X10, X10, 8
	2399 NotImplemented "Instruction LDUR not yet implemented."
	2400 NotImplemented "Instruction CMP not yet implemented."
	2401 Subtract X9, X9, 1
	2402 Add X10, X10, 16
	2403 Move W2, 2
	2404 Move X0, X27
	2405 Call 0x1C5D788
	2406 Move W9, [X10]
	2407 Add W9, W9, 2
	2408 Add X8, X8, W9
	2409 Add X0, X8, 312
	2410 Move X8, [X0]
	2411 Move X7, [X0+8]
	2412 Add W1, W28, 29
	2413 Move X0, X27
	2414 Move X2, X24
	2415 Move X3, X23
	2416 Move W4, W22
	2417 Move W5, W21
	2418 Move X6, X29
	2419 NotImplemented "Instruction BLR not yet implemented."
	2420 Or W20, W20, W0
	2421 Move X0, [X25+200]
	2422 Move X1, [X26+200]
	2423 Move X2, X31
	2424 Call Length.op_Inequality, X0, X1
	2425 Move TEMP, X0
	2426 And TEMP, TEMP, 1
	2427 Compare TEMP, 1
	2428 JumpIfNotEqual {2456}
	2429 Compare X19, 0
	2430 JumpIfEqual {4343}
	2431 Move X0, X19
	2432 Move X1, X31
	2433 Call VisualElement.get_styleAnimation, X0
	2434 Compare X0, 0
	2435 JumpIfEqual {4343}
	2436 Move X10, 0x346000
	2437 Move X8, [X0]
	2438 Move X24, [X25+200]
	2439 Move X23, [X26+200]
	2440 Move X10, [X10+3792]
	2441 NotImplemented "Instruction LDRH not yet implemented."
	2442 Move X26, [X31+48]
	2443 Move X27, X0
	2444 Move X1, [X10]
	2445 Compare X9, 0
	2446 JumpIfEqual {2453}
	2447 Move X10, [X8+176]
	2448 Add X10, X10, 8
	2449 NotImplemented "Instruction LDUR not yet implemented."
	2450 NotImplemented "Instruction CMP not yet implemented."
	2451 Subtract X9, X9, 1
	2452 Add X10, X10, 16
	2453 Move W2, 2
	2454 Move X0, X27
	2455 Call 0x1C5D788
	2456 Move X26, [X31+48]
	2457 Move W9, [X10]
	2458 Add W9, W9, 2
	2459 Add X8, X8, W9
	2460 Add X0, X8, 312
	2461 Move X8, [X0]
	2462 Move X7, [X0+8]
	2463 Add W1, W28, 30
	2464 Move X0, X27
	2465 Move X2, X24
	2466 Move X3, X23
	2467 Move W4, W22
	2468 Move W5, W21
	2469 Move X6, X29
	2470 NotImplemented "Instruction BLR not yet implemented."
	2471 Or W20, W20, W0
	2472 Move X28, [X31+40]
	2473 Move X8, 0x391000
	2474 Move X8, [X8+1128]
	2475 Move X1, [X26+16]
	2476 Add X23, X28, 16
	2477 Move X0, X23
	2478 Move X2, [X8]
	2479 Call StyleDataRef`1<RareData>.Equals, X0, X1
	2480 Move TEMP, X0
	2481 And TEMP, TEMP, 1
	2482 Compare TEMP, 1
	2483 JumpIfEqual {2925}
	2484 Move X24, 0x38D000
	2485 Move X24, [X24+880]
	2486 Move W28, 1
	2487 Move X0, X23
	2488 NotImplemented "Instruction MOVK not yet implemented."
	2489 Move X1, [X24]
	2490 Call StyleDataRef`1<RareData>.Read, X0
	2491 Move X1, [X24]
	2492 Move X25, X0
	2493 Add X0, X26, 16
	2494 Call StyleDataRef`1<RareData>.Read, X0
	2495 Move W8, [X25+24]
	2496 Move W9, [X0+24]
	2497 Move X26, X0
	2498 NotImplemented "Instruction CMP not yet implemented."
	2499 Compare X19, 0
	2500 JumpIfEqual {4343}
	2501 Move X0, X19
	2502 Move X1, X31
	2503 Call VisualElement.get_styleAnimation, X0
	2504 Compare X0, 0
	2505 JumpIfEqual {4343}
	2506 Move X10, 0x345000
	2507 Move X8, [X0]
	2508 Move W24, [X25+24]
	2509 Move W23, [X26+24]
	2510 Move X10, [X10+3792]
	2511 NotImplemented "Instruction LDRH not yet implemented."
	2512 Move X27, X0
	2513 Move X1, [X10]
	2514 Compare X9, 0
	2515 JumpIfEqual {2522}
	2516 Move X10, [X8+176]
	2517 Add X10, X10, 8
	2518 NotImplemented "Instruction LDUR not yet implemented."
	2519 NotImplemented "Instruction CMP not yet implemented."
	2520 Subtract X9, X9, 1
	2521 Add X10, X10, 16
	2522 Move W2, 4
	2523 Move X0, X27
	2524 Call 0x1C5D788
	2525 Move W9, [X10]
	2526 Add W9, W9, 4
	2527 Add X8, X8, W9
	2528 Add X0, X8, 312
	2529 Move X8, [X0]
	2530 Move X7, [X0+8]
	2531 Move W1, 1
	2532 NotImplemented "Instruction MOVK not yet implemented."
	2533 Move X0, X27
	2534 Move W2, W24
	2535 Move W3, W23
	2536 Move W4, W22
	2537 Move W5, W21
	2538 Move X6, X29
	2539 NotImplemented "Instruction BLR not yet implemented."
	2540 Or W20, W20, W0
	2541 NotImplemented "Instruction LDUR not yet implemented."
	2542 NotImplemented "Instruction LDUR not yet implemented."
	2543 NotImplemented "Instruction LDUR not yet implemented."
	2544 NotImplemented "Instruction LDUR not yet implemented."
	2545 Move X8, -53407744
	2546 Subtract V0, V0, V1
	2547 NotImplemented "Instruction INVALID not yet implemented."
	2548 Move V1, [X8+3872]
	2549 Subtract V2, V2, V3
	2550 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	2551 NotImplemented "Instruction INVALID not yet implemented."
	2552 Add V0, V0, V3
	2553 Add V0, V2, V0
	2554 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	2555 Add V0, V2, V0
	2556 NotImplemented "Instruction FCMP not yet implemented."
	2557 Compare X19, 0
	2558 JumpIfEqual {4343}
	2559 Move X0, X19
	2560 Move X1, X31
	2561 Call VisualElement.get_styleAnimation, X0
	2562 Compare X0, 0
	2563 JumpIfEqual {4343}
	2564 Move X10, 0x345000
	2565 Move S9, [X26+36]
	2566 Move S8, [X26+40]
	2567 Move S11, [X26+28]
	2568 Move S10, [X26+32]
	2569 Move S13, [X25+36]
	2570 Move S12, [X25+40]
	2571 Move X8, [X0]
	2572 Move S15, [X25+28]
	2573 Move S14, [X25+32]
	2574 Move X10, [X10+3792]
	2575 Move X27, X0
	2576 NotImplemented "Instruction LDRH not yet implemented."
	2577 Move X1, [X10]
	2578 Compare X9, 0
	2579 JumpIfEqual {2586}
	2580 Move X10, [X8+176]
	2581 Add X10, X10, 8
	2582 NotImplemented "Instruction LDUR not yet implemented."
	2583 NotImplemented "Instruction CMP not yet implemented."
	2584 Subtract X9, X9, 1
	2585 Add X10, X10, 16
	2586 Move W2, 3
	2587 Move X0, X27
	2588 Call 0x1C5D788
	2589 Move W9, [X10]
	2590 Add W9, W9, 3
	2591 Add X8, X8, W9
	2592 Add X0, X8, 312
	2593 Move X8, [X0]
	2594 Move X5, [X0+8]
	2595 Add W1, W28, 1
	2596 Move X0, X27
	2597 Move V0, V15
	2598 Move V1, V14
	2599 Move V2, V13
	2600 Move V3, V12
	2601 Move V4, V11
	2602 Move V5, V10
	2603 Move V6, V9
	2604 Move V7, V8
	2605 Move W2, W22
	2606 Move W3, W21
	2607 Move X4, X29
	2608 NotImplemented "Instruction BLR not yet implemented."
	2609 Move W9, [X31+60]
	2610 And W31, W0, 1
	2611 Move W8, 8
	2612 Or W20, W20, W0
	2613 NotImplemented "Instruction CSEL not yet implemented."
	2614 Move [X31+60], W9
	2615 Move W8, [X25+44]
	2616 Move W9, [X26+44]
	2617 NotImplemented "Instruction CMP not yet implemented."
	2618 Compare X19, 0
	2619 JumpIfEqual {4343}
	2620 Move X0, X19
	2621 Move X1, X31
	2622 Call VisualElement.get_styleAnimation, X0
	2623 Compare X0, 0
	2624 JumpIfEqual {4343}
	2625 Move X10, 0x345000
	2626 Move X8, [X0]
	2627 Move W24, [X25+44]
	2628 Move W23, [X26+44]
	2629 Move X10, [X10+3792]
	2630 NotImplemented "Instruction LDRH not yet implemented."
	2631 Move X27, X0
	2632 Move X1, [X10]
	2633 Compare X9, 0
	2634 JumpIfEqual {2641}
	2635 Move X10, [X8+176]
	2636 Add X10, X10, 8
	2637 NotImplemented "Instruction LDUR not yet implemented."
	2638 NotImplemented "Instruction CMP not yet implemented."
	2639 Subtract X9, X9, 1
	2640 Add X10, X10, 16
	2641 Move W2, 4
	2642 Move X0, X27
	2643 Call 0x1C5D788
	2644 Move W9, [X10]
	2645 Add W9, W9, 4
	2646 Add X8, X8, W9
	2647 Add X0, X8, 312
	2648 Move X8, [X0]
	2649 Move X7, [X0+8]
	2650 Add W1, W28, 2
	2651 Move X0, X27
	2652 Move W2, W24
	2653 Move W3, W23
	2654 Move W4, W22
	2655 Move W5, W21
	2656 Move X6, X29
	2657 NotImplemented "Instruction BLR not yet implemented."
	2658 Or W20, W20, W0
	2659 Move W8, [X25+48]
	2660 Move W9, [X26+48]
	2661 NotImplemented "Instruction CMP not yet implemented."
	2662 Compare X19, 0
	2663 JumpIfEqual {4343}
	2664 Move X0, X19
	2665 Move X1, X31
	2666 Call VisualElement.get_styleAnimation, X0
	2667 Compare X0, 0
	2668 JumpIfEqual {4343}
	2669 Move X10, 0x345000
	2670 Move X8, [X0]
	2671 Move W24, [X25+48]
	2672 Move W23, [X26+48]
	2673 Move X10, [X10+3792]
	2674 NotImplemented "Instruction LDRH not yet implemented."
	2675 Move X27, X0
	2676 Move X1, [X10]
	2677 Compare X9, 0
	2678 JumpIfEqual {2685}
	2679 Move X10, [X8+176]
	2680 Add X10, X10, 8
	2681 NotImplemented "Instruction LDUR not yet implemented."
	2682 NotImplemented "Instruction CMP not yet implemented."
	2683 Subtract X9, X9, 1
	2684 Add X10, X10, 16
	2685 Move W2, 1
	2686 Move X0, X27
	2687 Call 0x1C5D788
	2688 Move W9, [X10]
	2689 Add W9, W9, 1
	2690 Add X8, X8, W9
	2691 Add X0, X8, 312
	2692 Move X8, [X0]
	2693 Move X7, [X0+8]
	2694 Add W1, W28, 3
	2695 Move X0, X27
	2696 Move W2, W24
	2697 Move W3, W23
	2698 Move W4, W22
	2699 Move W5, W21
	2700 Move X6, X29
	2701 NotImplemented "Instruction BLR not yet implemented."
	2702 Or W20, W20, W0
	2703 Move W8, [X25+52]
	2704 Move W9, [X26+52]
	2705 NotImplemented "Instruction CMP not yet implemented."
	2706 Compare X19, 0
	2707 JumpIfEqual {4343}
	2708 Move X0, X19
	2709 Move X1, X31
	2710 Call VisualElement.get_styleAnimation, X0
	2711 Compare X0, 0
	2712 JumpIfEqual {4343}
	2713 Move X10, 0x345000
	2714 Move X8, [X0]
	2715 Move W24, [X25+52]
	2716 Move W23, [X26+52]
	2717 Move X10, [X10+3792]
	2718 NotImplemented "Instruction LDRH not yet implemented."
	2719 Move X27, X0
	2720 Move X1, [X10]
	2721 Compare X9, 0
	2722 JumpIfEqual {2729}
	2723 Move X10, [X8+176]
	2724 Add X10, X10, 8
	2725 NotImplemented "Instruction LDUR not yet implemented."
	2726 NotImplemented "Instruction CMP not yet implemented."
	2727 Subtract X9, X9, 1
	2728 Add X10, X10, 16
	2729 Move W2, 1
	2730 Move X0, X27
	2731 Call 0x1C5D788
	2732 Move W9, [X10]
	2733 Add W9, W9, 1
	2734 Add X8, X8, W9
	2735 Add X0, X8, 312
	2736 Move X8, [X0]
	2737 Move X7, [X0+8]
	2738 Add W1, W28, 4
	2739 Move X0, X27
	2740 Move W2, W24
	2741 Move W3, W23
	2742 Move W4, W22
	2743 Move W5, W21
	2744 Move X6, X29
	2745 NotImplemented "Instruction BLR not yet implemented."
	2746 Or W20, W20, W0
	2747 Move W8, [X25+56]
	2748 Move W9, [X26+56]
	2749 NotImplemented "Instruction CMP not yet implemented."
	2750 Compare X19, 0
	2751 JumpIfEqual {4343}
	2752 Move X0, X19
	2753 Move X1, X31
	2754 Call VisualElement.get_styleAnimation, X0
	2755 Compare X0, 0
	2756 JumpIfEqual {4343}
	2757 Move X10, 0x345000
	2758 Move X8, [X0]
	2759 Move W24, [X25+56]
	2760 Move W23, [X26+56]
	2761 Move X10, [X10+3792]
	2762 NotImplemented "Instruction LDRH not yet implemented."
	2763 Move X27, X0
	2764 Move X1, [X10]
	2765 Compare X9, 0
	2766 JumpIfEqual {2773}
	2767 Move X10, [X8+176]
	2768 Add X10, X10, 8
	2769 NotImplemented "Instruction LDUR not yet implemented."
	2770 NotImplemented "Instruction CMP not yet implemented."
	2771 Subtract X9, X9, 1
	2772 Add X10, X10, 16
	2773 Move W2, 1
	2774 Move X0, X27
	2775 Call 0x1C5D788
	2776 Move W9, [X10]
	2777 Add W9, W9, 1
	2778 Add X8, X8, W9
	2779 Add X0, X8, 312
	2780 Move X8, [X0]
	2781 Move X7, [X0+8]
	2782 Add W1, W28, 5
	2783 Move X0, X27
	2784 Move W2, W24
	2785 Move W3, W23
	2786 Move W4, W22
	2787 Move W5, W21
	2788 Move X6, X29
	2789 NotImplemented "Instruction BLR not yet implemented."
	2790 Or W20, W20, W0
	2791 Move V0, [X25+60]
	2792 Move V1, [X26+60]
	2793 NotImplemented "Instruction FCMP not yet implemented."
	2794 Compare X19, 0
	2795 JumpIfEqual {4343}
	2796 Move X0, X19
	2797 Move X1, X31
	2798 Call VisualElement.get_styleAnimation, X0
	2799 Compare X0, 0
	2800 JumpIfEqual {4343}
	2801 Move X10, 0x345000
	2802 Move X8, [X0]
	2803 Move V9, [X25+60]
	2804 Move V8, [X26+60]
	2805 Move X10, [X10+3792]
	2806 NotImplemented "Instruction LDRH not yet implemented."
	2807 Move X27, X0
	2808 Move X1, [X10]
	2809 Compare X9, 0
	2810 JumpIfEqual {2817}
	2811 Move X10, [X8+176]
	2812 Add X10, X10, 8
	2813 NotImplemented "Instruction LDUR not yet implemented."
	2814 NotImplemented "Instruction CMP not yet implemented."
	2815 Subtract X9, X9, 1
	2816 Add X10, X10, 16
	2817 Move X0, X27
	2818 Move W2, W31
	2819 Call 0x1C5D788
	2820 NotImplemented "Instruction LDRSW not yet implemented."
	2821 Add X8, X8, X9
	2822 Add X0, X8, 312
	2823 Move X8, [X0]
	2824 Move X5, [X0+8]
	2825 Add W1, W28, 6
	2826 Move X0, X27
	2827 Move V0, V9
	2828 Move V1, V8
	2829 Move W2, W22
	2830 Move W3, W21
	2831 Move X4, X29
	2832 NotImplemented "Instruction BLR not yet implemented."
	2833 Or W20, W20, W0
	2834 Move W8, [X25+64]
	2835 Move W9, [X26+64]
	2836 NotImplemented "Instruction CMP not yet implemented."
	2837 Compare X19, 0
	2838 JumpIfEqual {4343}
	2839 Move X0, X19
	2840 Move X1, X31
	2841 Call VisualElement.get_styleAnimation, X0
	2842 Compare X0, 0
	2843 JumpIfEqual {4343}
	2844 Move X10, 0x345000
	2845 Move X8, [X0]
	2846 Move W24, [X25+64]
	2847 Move W23, [X26+64]
	2848 Move X10, [X10+3792]
	2849 NotImplemented "Instruction LDRH not yet implemented."
	2850 Move X27, X0
	2851 Move X1, [X10]
	2852 Compare X9, 0
	2853 JumpIfEqual {2860}
	2854 Move X10, [X8+176]
	2855 Add X10, X10, 8
	2856 NotImplemented "Instruction LDUR not yet implemented."
	2857 NotImplemented "Instruction CMP not yet implemented."
	2858 Subtract X9, X9, 1
	2859 Add X10, X10, 16
	2860 Move W2, 1
	2861 Move X0, X27
	2862 Call 0x1C5D788
	2863 Move W9, [X10]
	2864 Add W9, W9, 1
	2865 Add X8, X8, W9
	2866 Add X0, X8, 312
	2867 Move X8, [X0]
	2868 Move X7, [X0+8]
	2869 Add W1, W28, 7
	2870 Move X0, X27
	2871 Move W2, W24
	2872 Move W3, W23
	2873 Move W4, W22
	2874 Move W5, W21
	2875 Move X6, X29
	2876 NotImplemented "Instruction BLR not yet implemented."
	2877 Or W20, W20, W0
	2878 Move W8, [X25+68]
	2879 Move W9, [X26+68]
	2880 NotImplemented "Instruction CMP not yet implemented."
	2881 Move X26, [X31+48]
	2882 Compare X19, 0
	2883 JumpIfEqual {4343}
	2884 Move X0, X19
	2885 Move X1, X31
	2886 Call VisualElement.get_styleAnimation, X0
	2887 Compare X0, 0
	2888 JumpIfEqual {4343}
	2889 Move X10, 0x345000
	2890 Move X8, [X0]
	2891 Move W24, [X25+68]
	2892 Move W23, [X26+68]
	2893 Move X10, [X10+3792]
	2894 NotImplemented "Instruction LDRH not yet implemented."
	2895 Move X26, [X31+48]
	2896 Move X27, X0
	2897 Move X1, [X10]
	2898 Compare X9, 0
	2899 JumpIfEqual {2906}
	2900 Move X10, [X8+176]
	2901 Add X10, X10, 8
	2902 NotImplemented "Instruction LDUR not yet implemented."
	2903 NotImplemented "Instruction CMP not yet implemented."
	2904 Subtract X9, X9, 1
	2905 Add X10, X10, 16
	2906 Move W2, 4
	2907 Move X0, X27
	2908 Call 0x1C5D788
	2909 Move W9, [X10]
	2910 Add W9, W9, 4
	2911 Add X8, X8, W9
	2912 Add X0, X8, 312
	2913 Move X8, [X0]
	2914 Move X7, [X0+8]
	2915 Add W1, W28, 8
	2916 Move X0, X27
	2917 Move W2, W24
	2918 Move W3, W23
	2919 Move W4, W22
	2920 Move W5, W21
	2921 Move X6, X29
	2922 NotImplemented "Instruction BLR not yet implemented."
	2923 Or W20, W20, W0
	2924 Move X28, [X31+40]
	2925 Move X8, 0x391000
	2926 Move X8, [X8+1112]
	2927 Move X1, [X26+24]
	2928 Add X23, X28, 24
	2929 Move X0, X23
	2930 Move X2, [X8]
	2931 Call StyleDataRef`1<TransformData>.Equals, X0, X1
	2932 Move TEMP, X0
	2933 And TEMP, TEMP, 1
	2934 Compare TEMP, 1
	2935 JumpIfEqual {3279}
	2936 Move X24, 0x38D000
	2937 Move X24, [X24+888]
	2938 Move X0, X23
	2939 Move X1, [X24]
	2940 Call StyleDataRef`1<TransformData>.Read, X0
	2941 Move X1, [X24]
	2942 Move X25, X0
	2943 Add X0, X26, 24
	2944 Call StyleDataRef`1<TransformData>.Read, X0
	2945 Move X8, [X25+16]
	2946 Move V0, [X25]
	2947 Move X26, X0
	2948 Add X1, X31, 704
	2949 Move [X31+944], X8
	2950 Move [X31+58], V0
	2951 Move X8, [X0+16]
	2952 Move V0, [X0]
	2953 Move V1, [X31+58]
	2954 Move X9, [X31+944]
	2955 Add X0, X31, 736
	2956 Move X2, X31
	2957 Move [X31+912], X8
	2958 Move [X31+56], V0
	2959 Move [X31+46], V1
	2960 Move [X31+752], X9
	2961 Move [X31+44], V0
	2962 Move [X31+720], X8
	2963 Call Rotate.op_Inequality, X0, X1
	2964 Move TEMP, X0
	2965 And TEMP, TEMP, 1
	2966 Compare TEMP, 1
	2967 JumpIfNotEqual {3035}
	2968 Compare X19, 0
	2969 JumpIfEqual {4343}
	2970 Move X0, X19
	2971 Move X1, X31
	2972 Call VisualElement.get_styleAnimation, X0
	2973 Move X8, [X25+16]
	2974 Move V0, [X25]
	2975 Move [X31+304], X8
	2976 Move [X31+18], V0
	2977 Move X8, [X26+16]
	2978 Move V0, [X26]
	2979 Move [X31+272], X8
	2980 Move [X31+16], V0
	2981 Compare X0, 0
	2982 JumpIfEqual {4343}
	2983 Move V0, [X31+18]
	2984 Move X8, [X31+304]
	2985 Move V1, [X31+16]
	2986 Move X9, [X31+272]
	2987 Move [X31+42], V0
	2988 Move [X31+688], X8
	2989 Move [X31+40], V1
	2990 Move [X31+656], X9
	2991 Move X10, 0x345000
	2992 Move X8, [X0]
	2993 Move X10, [X10+3792]
	2994 Move X27, X0
	2995 NotImplemented "Instruction LDRH not yet implemented."
	2996 Move X1, [X10]
	2997 Compare X9, 0
	2998 JumpIfEqual {3005}
	2999 Move X10, [X8+176]
	3000 Add X10, X10, 8
	3001 NotImplemented "Instruction LDUR not yet implemented."
	3002 NotImplemented "Instruction CMP not yet implemented."
	3003 Subtract X9, X9, 1
	3004 Add X10, X10, 16
	3005 Move W2, 11
	3006 Move X0, X27
	3007 Call 0x1C5D788
	3008 Move W9, [X10]
	3009 Add W9, W9, 11
	3010 Add X8, X8, W9
	3011 Add X0, X8, 312
	3012 Move V0, [X31+42]
	3013 Move X9, [X31+688]
	3014 Move V1, [X31+40]
	3015 Move X10, [X31+656]
	3016 Move X8, [X0]
	3017 Move [X31+58], V0
	3018 Move [X31+944], X9
	3019 Move [X31+56], V1
	3020 Move [X31+912], X10
	3021 Move X7, [X0+8]
	3022 Add X2, X31, 928
	3023 Add X3, X31, 896
	3024 Move W1, 0x50000
	3025 Move X0, X27
	3026 Move W4, W22
	3027 Move W5, W21
	3028 Move X6, X29
	3029 NotImplemented "Instruction BLR not yet implemented."
	3030 Move W9, [X31+60]
	3031 And W8, W0, 1
	3032 Or W20, W20, W0
	3033 Or W9, W9, W8
	3034 Move [X31+60], W9
	3035 Move X0, [X25+24]
	3036 Move X1, [X25+32]
	3037 Move X2, [X26+24]
	3038 Move X3, [X26+32]
	3039 Move X4, X31
	3040 Call Scale.op_Inequality, X0, X1
	3041 Move TEMP, X0
	3042 And TEMP, TEMP, 1
	3043 Compare TEMP, 1
	3044 JumpIfNotEqual {3102}
	3045 Compare X19, 0
	3046 JumpIfEqual {4343}
	3047 Move X0, X19
	3048 Move X1, X31
	3049 Move W22, W21
	3050 Move X21, X29
	3051 Call VisualElement.get_styleAnimation, X0
	3052 Compare X0, 0
	3053 JumpIfEqual {4343}
	3054 Move X10, 0x345000
	3055 Move X29, [X26+24]
	3056 Move X27, [X26+32]
	3057 Move X8, [X0]
	3058 Move X23, [X25+24]
	3059 Move X24, [X25+32]
	3060 Move X10, [X10+3792]
	3061 Move X28, X0
	3062 NotImplemented "Instruction LDRH not yet implemented."
	3063 Move X1, [X10]
	3064 Compare X9, 0
	3065 JumpIfEqual {3072}
	3066 Move X10, [X8+176]
	3067 Add X10, X10, 8
	3068 NotImplemented "Instruction LDUR not yet implemented."
	3069 NotImplemented "Instruction CMP not yet implemented."
	3070 Subtract X9, X9, 1
	3071 Add X10, X10, 16
	3072 Move W2, 9
	3073 Move X0, X28
	3074 Call 0x1C5D788
	3075 Move W9, [X10]
	3076 Add W9, W9, 9
	3077 Add X8, X8, W9
	3078 Add X0, X8, 312
	3079 Move X8, [X0]
	3080 Move X9, [X0+8]
	3081 Move W6, [X31+56]
	3082 Move W10, 1
	3083 NotImplemented "Instruction MOVK not yet implemented."
	3084 Add W1, W10, 0x20000
	3085 Move X0, X28
	3086 Move X2, X23
	3087 Move X3, X24
	3088 Move X4, X29
	3089 Move X5, X27
	3090 Move W7, W22
	3091 Move [X31], X21
	3092 Move [X31+8], X9
	3093 Move X29, X21
	3094 Move W21, W22
	3095 NotImplemented "Instruction BLR not yet implemented."
	3096 Move W9, [X31+60]
	3097 Move X28, [X31+40]
	3098 And W8, W0, 1
	3099 Or W20, W20, W0
	3100 Or W9, W9, W8
	3101 Move [X31+60], W9
	3102 Move W8, [X25+56]
	3103 NotImplemented "Instruction LDUR not yet implemented."
	3104 Add X0, X31, 608
	3105 Add X1, X31, 576
	3106 Move [X31+624], W8
	3107 Move [X31+38], V0
	3108 Move W8, [X26+56]
	3109 NotImplemented "Instruction LDUR not yet implemented."
	3110 Move X2, X31
	3111 Move [X31+592], W8
	3112 Move [X31+36], V0
	3113 Call TransformOrigin.op_Inequality, X0, X1
	3114 Move TEMP, X0
	3115 And TEMP, TEMP, 1
	3116 Compare TEMP, 1
	3117 JumpIfNotEqual {3161}
	3118 Move W22, [X31+56]
	3119 Compare X19, 0
	3120 JumpIfEqual {4343}
	3121 Move X0, X19
	3122 Move X1, X31
	3123 Add X23, X25, 40
	3124 Add X24, X26, 40
	3125 Call VisualElement.get_styleAnimation, X0
	3126 Move W8, [X23+16]
	3127 Move V0, [X23]
	3128 Move [X31+304], W8
	3129 Move [X31+18], V0
	3130 Move W8, [X24+16]
	3131 Move V0, [X24]
	3132 Move [X31+272], W8
	3133 Move [X31+16], V0
	3134 Compare X0, 0
	3135 JumpIfEqual {4343}
	3136 Move V0, [X31+18]
	3137 Move W8, [X31+304]
	3138 Move V1, [X31+16]
	3139 Move W9, [X31+272]
	3140 Move [X31+34], V0
	3141 Move [X31+560], W8
	3142 Move [X31+32], V1
	3143 Move [X31+528], W9
	3144 Move X10, 0x345000
	3145 Move X8, [X0]
	3146 Move X10, [X10+3792]
	3147 Move X27, X0
	3148 NotImplemented "Instruction LDRH not yet implemented."
	3149 Move X1, [X10]
	3150 Compare X9, 0
	3151 JumpIfEqual {3158}
	3152 Move X10, [X8+176]
	3153 Add X10, X10, 8
	3154 NotImplemented "Instruction LDUR not yet implemented."
	3155 NotImplemented "Instruction CMP not yet implemented."
	3156 Subtract X9, X9, 1
	3157 Add X10, X10, 16
	3158 Move W2, 12
	3159 Move X0, X27
	3160 Call 0x1C5D788
	3161 Move W22, [X31+56]
	3162 Move W9, [X10]
	3163 Add W9, W9, 12
	3164 Add X8, X8, W9
	3165 Add X0, X8, 312
	3166 Move V0, [X31+34]
	3167 Move W9, [X31+560]
	3168 Move V1, [X31+32]
	3169 Move W10, [X31+528]
	3170 Move X8, [X0]
	3171 Move [X31+58], V0
	3172 Move [X31+944], W9
	3173 Move [X31+56], V1
	3174 Move [X31+912], W10
	3175 Move X7, [X0+8]
	3176 Move W1, 2
	3177 Add X2, X31, 928
	3178 Add X3, X31, 896
	3179 NotImplemented "Instruction MOVK not yet implemented."
	3180 Move X0, X27
	3181 Move W4, W22
	3182 Move W5, W21
	3183 Move X6, X29
	3184 NotImplemented "Instruction BLR not yet implemented."
	3185 Move W9, [X31+60]
	3186 And W8, W0, 1
	3187 Or W20, W20, W0
	3188 Or W9, W9, W8
	3189 Move [X31+60], W9
	3190 NotImplemented "Instruction LDUR not yet implemented."
	3191 NotImplemented "Instruction LDUR not yet implemented."
	3192 Add X0, X31, 480
	3193 Add X1, X31, 448
	3194 Move [X31+496], X8
	3195 Move [X31+30], V0
	3196 NotImplemented "Instruction LDUR not yet implemented."
	3197 NotImplemented "Instruction LDUR not yet implemented."
	3198 Move X2, X31
	3199 Move [X31+464], X8
	3200 Move [X31+28], V0
	3201 Call Translate.op_Inequality, X0, X1
	3202 Move TEMP, X0
	3203 And TEMP, TEMP, 1
	3204 Compare TEMP, 1
	3205 JumpIfNotEqual {3249}
	3206 Compare X19, 0
	3207 JumpIfEqual {4343}
	3208 Move X0, X19
	3209 Move X1, X31
	3210 Add X23, X25, 60
	3211 Add X24, X26, 60
	3212 Call VisualElement.get_styleAnimation, X0
	3213 Move X8, [X23+16]
	3214 Move V0, [X23]
	3215 Move [X31+304], X8
	3216 Move [X31+18], V0
	3217 Move X8, [X24+16]
	3218 Move V0, [X24]
	3219 Move [X31+272], X8
	3220 Move [X31+16], V0
	3221 Compare X0, 0
	3222 JumpIfEqual {4343}
	3223 Move V0, [X31+18]
	3224 Move X8, [X31+304]
	3225 Move V1, [X31+16]
	3226 Move X9, [X31+272]
	3227 Move [X31+26], V0
	3228 Move [X31+432], X8
	3229 Move [X31+24], V1
	3230 Move [X31+400], X9
	3231 Move X10, 0x345000
	3232 Move X8, [X0]
	3233 Move X10, [X10+3792]
	3234 Move X26, [X31+48]
	3235 Move X25, X0
	3236 NotImplemented "Instruction LDRH not yet implemented."
	3237 Move X1, [X10]
	3238 Compare X9, 0
	3239 JumpIfEqual {3246}
	3240 Move X10, [X8+176]
	3241 Add X10, X10, 8
	3242 NotImplemented "Instruction LDUR not yet implemented."
	3243 NotImplemented "Instruction CMP not yet implemented."
	3244 Subtract X9, X9, 1
	3245 Add X10, X10, 16
	3246 Move W2, 10
	3247 Move X0, X25
	3248 Call 0x1C5D788
	3249 Move X26, [X31+48]
	3250 Move W9, [X10]
	3251 Add W9, W9, 10
	3252 Add X8, X8, W9
	3253 Add X0, X8, 312
	3254 Move V0, [X31+26]
	3255 Move X9, [X31+432]
	3256 Move V1, [X31+24]
	3257 Move X10, [X31+400]
	3258 Move X8, [X0]
	3259 Move [X31+58], V0
	3260 Move [X31+944], X9
	3261 Move [X31+56], V1
	3262 Move [X31+912], X10
	3263 Move X7, [X0+8]
	3264 Move W9, 2
	3265 NotImplemented "Instruction MOVK not yet implemented."
	3266 Or W1, W9, 1
	3267 Add X2, X31, 928
	3268 Add X3, X31, 896
	3269 Move X0, X25
	3270 Move W4, W22
	3271 Move W5, W21
	3272 Move X6, X29
	3273 NotImplemented "Instruction BLR not yet implemented."
	3274 Move W9, [X31+60]
	3275 And W8, W0, 1
	3276 Or W20, W20, W0
	3277 Or W9, W9, W8
	3278 Move [X31+60], W9
	3279 Move X8, 0x391000
	3280 Move X8, [X8+1120]
	3281 Move X1, [X26+40]
	3282 Add X23, X28, 40
	3283 Move X0, X23
	3284 Move X2, [X8]
	3285 Call StyleDataRef`1<VisualData>.Equals, X0, X1
	3286 Move TEMP, X0
	3287 And TEMP, TEMP, 1
	3288 Compare TEMP, 1
	3289 JumpIfNotEqual {3291}
	3290 Move W29, [X31+60]
	3291 Move X25, 0x38D000
	3292 Move X25, [X25+864]
	3293 Move X0, X23
	3294 Move X1, [X25]
	3295 Call StyleDataRef`1<VisualData>.Read, X0
	3296 Move X1, [X25]
	3297 Move X24, X0
	3298 Add X0, X26, 40
	3299 Call StyleDataRef`1<VisualData>.Read, X0
	3300 Move D0, [X0]
	3301 Move D3, [X0+8]
	3302 Move D1, [X24]
	3303 Move D2, [X24+8]
	3304 Move X8, -53407744
	3305 Move V8, [X8+3872]
	3306 Move X23, X0
	3307 Subtract V0, V1, V0
	3308 NotImplemented "Instruction INVALID not yet implemented."
	3309 Subtract V1, V2, V3
	3310 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	3311 NotImplemented "Instruction INVALID not yet implemented."
	3312 Add V0, V0, V2
	3313 Add V0, V1, V0
	3314 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	3315 Add V0, V1, V0
	3316 NotImplemented "Instruction FCMP not yet implemented."
	3317 Move [X31+48], S8
	3318 Compare X19, 0
	3319 JumpIfEqual {4343}
	3320 Move X0, X19
	3321 Move X1, X31
	3322 Call VisualElement.get_styleAnimation, X0
	3323 Compare X0, 0
	3324 JumpIfEqual {4343}
	3325 Move X10, 0x345000
	3326 Move S9, [X23+8]
	3327 Move S8, [X23+12]
	3328 Move S11, [X23]
	3329 Move S10, [X23+4]
	3330 Move S13, [X24+8]
	3331 Move S12, [X24+12]
	3332 Move X8, [X0]
	3333 Move S15, [X24]
	3334 Move S14, [X24+4]
	3335 Move X10, [X10+3792]
	3336 Move X25, X0
	3337 NotImplemented "Instruction LDRH not yet implemented."
	3338 Move X1, [X10]
	3339 Compare X9, 0
	3340 JumpIfEqual {3347}
	3341 Move X10, [X8+176]
	3342 Add X10, X10, 8
	3343 NotImplemented "Instruction LDUR not yet implemented."
	3344 NotImplemented "Instruction CMP not yet implemented."
	3345 Subtract X9, X9, 1
	3346 Add X10, X10, 16
	3347 Move W2, 3
	3348 Move X0, X25
	3349 Call 0x1C5D788
	3350 Move W9, [X10]
	3351 Add W9, W9, 3
	3352 Add X8, X8, W9
	3353 Add X0, X8, 312
	3354 Move X8, [X0]
	3355 Move X5, [X0+8]
	3356 Move W1, 0x70000
	3357 Move X0, X25
	3358 Move V0, V15
	3359 Move V1, V14
	3360 Move V2, V13
	3361 Move V3, V12
	3362 Move V4, V11
	3363 Move V5, V10
	3364 Move V6, V9
	3365 Move V7, V8
	3366 Move W2, W22
	3367 Move W3, W21
	3368 Move X4, X29
	3369 NotImplemented "Instruction BLR not yet implemented."
	3370 Move W9, [X31+60]
	3371 Move V8, [X31+48]
	3372 And W31, W0, 1
	3373 Or W20, W20, W0
	3374 Or W8, W9, 8
	3375 NotImplemented "Instruction CSEL not yet implemented."
	3376 Move [X31+60], W9
	3377 Move V1, [X24+16]
	3378 Move V0, [X24+32]
	3379 Add X0, X31, 352
	3380 Add X1, X31, 320
	3381 Move X2, X31
	3382 Move [X31+928], V1
	3383 Move [X31+936], V0
	3384 Move V2, [X23+16]
	3385 Move V3, [X23+32]
	3386 Move [X31+352], V1
	3387 Move [X31+360], V0
	3388 Move [X31+896], V2
	3389 Move [X31+904], V3
	3390 Move [X31+320], V2
	3391 Move [X31+328], V3
	3392 Call Background.op_Inequality, X0, X1
	3393 Move TEMP, X0
	3394 And TEMP, TEMP, 1
	3395 Compare TEMP, 1
	3396 JumpIfNotEqual {3463}
	3397 Compare X19, 0
	3398 JumpIfEqual {4343}
	3399 Move X0, X19
	3400 Move X1, X31
	3401 Add X26, X24, 16
	3402 Add X27, X23, 16
	3403 Call VisualElement.get_styleAnimation, X0
	3404 Move V1, [X26]
	3405 Move V0, [X26+16]
	3406 Move [X31+288], V1
	3407 Move [X31+296], V0
	3408 Move V1, [X27]
	3409 Move V0, [X27+16]
	3410 Move [X31+256], V1
	3411 Move [X31+264], V0
	3412 Compare X0, 0
	3413 JumpIfEqual {4343}
	3414 Move V0, [X31+288]
	3415 Move V1, [X31+304]
	3416 Move V2, [X31+256]
	3417 Move V3, [X31+272]
	3418 Move X10, 0x345000
	3419 Move X25, X0
	3420 Move [X31+224], V0
	3421 Move [X31+232], V1
	3422 Move [X31+192], V2
	3423 Move [X31+200], V3
	3424 Move X8, [X0]
	3425 Move X10, [X10+3792]
	3426 NotImplemented "Instruction LDRH not yet implemented."
	3427 Move X1, [X10]
	3428 Compare X9, 0
	3429 JumpIfEqual {3436}
	3430 Move X10, [X8+176]
	3431 Add X10, X10, 8
	3432 NotImplemented "Instruction LDUR not yet implemented."
	3433 NotImplemented "Instruction CMP not yet implemented."
	3434 Subtract X9, X9, 1
	3435 Add X10, X10, 16
	3436 Move W2, 5
	3437 Move X0, X25
	3438 Call 0x1C5D788
	3439 Move W9, [X10]
	3440 Add W9, W9, 5
	3441 Add X8, X8, W9
	3442 Add X0, X8, 312
	3443 Move V0, [X31+224]
	3444 Move V1, [X31+240]
	3445 Move V2, [X31+192]
	3446 Move V3, [X31+208]
	3447 Move X8, [X0]
	3448 Move W1, 1
	3449 Move [X31+928], V0
	3450 Move [X31+936], V1
	3451 Move [X31+896], V2
	3452 Move [X31+904], V3
	3453 Move X7, [X0+8]
	3454 Add X2, X31, 928
	3455 Add X3, X31, 896
	3456 NotImplemented "Instruction MOVK not yet implemented."
	3457 Move X0, X25
	3458 Move W4, W22
	3459 Move W5, W21
	3460 Move X6, X29
	3461 NotImplemented "Instruction BLR not yet implemented."
	3462 Or W20, W20, W0
	3463 Move X0, [X24+48]
	3464 Move W1, [X24+56]
	3465 Move X2, [X23+48]
	3466 Move W3, [X23+56]
	3467 Move X4, X31
	3468 Call BackgroundPosition.op_Inequality, X0, X1
	3469 Move TEMP, X0
	3470 And TEMP, TEMP, 1
	3471 Compare TEMP, 1
	3472 JumpIfNotEqual {3503}
	3473 Compare X19, 0
	3474 JumpIfEqual {4343}
	3475 Move X0, X19
	3476 Move X1, X31
	3477 Move W22, W21
	3478 Move X28, X29
	3479 Call VisualElement.get_styleAnimation, X0
	3480 Compare X0, 0
	3481 JumpIfEqual {4343}
	3482 Move X10, 0x345000
	3483 Move W25, [X23+56]
	3484 Move X27, [X23+48]
	3485 Move X8, [X0]
	3486 Move W21, [X24+56]
	3487 Move X29, [X24+48]
	3488 Move X10, [X10+3792]
	3489 NotImplemented "Instruction LDRH not yet implemented."
	3490 Move X26, X0
	3491 Move X1, [X10]
	3492 Compare X9, 0
	3493 JumpIfEqual {3500}
	3494 Move X10, [X8+176]
	3495 Add X10, X10, 8
	3496 NotImplemented "Instruction LDUR not yet implemented."
	3497 NotImplemented "Instruction CMP not yet implemented."
	3498 Subtract X9, X9, 1
	3499 Add X10, X10, 16
	3500 Move W2, 13
	3501 Move X0, X26
	3502 Call 0x1C5D788
	3503 Move X28, X29
	3504 Move W9, [X10]
	3505 Add W9, W9, 13
	3506 Add X8, X8, W9
	3507 Add X0, X8, 312
	3508 Move X8, [X0]
	3509 Move X9, [X0+8]
	3510 Move W6, [X31+56]
	3511 Move W10, 1
	3512 NotImplemented "Instruction MOVK not yet implemented."
	3513 Add W1, W10, 1
	3514 Move X0, X26
	3515 Move X2, X29
	3516 Move X3, X21
	3517 Move X4, X27
	3518 Move X5, X25
	3519 Move W7, W22
	3520 Move [X31], X28
	3521 Move [X31+8], X9
	3522 Move W21, W22
	3523 NotImplemented "Instruction BLR not yet implemented."
	3524 Or W20, W20, W0
	3525 NotImplemented "Instruction LDUR not yet implemented."
	3526 Move W1, [X24+68]
	3527 NotImplemented "Instruction LDUR not yet implemented."
	3528 Move W3, [X23+68]
	3529 Move X4, X31
	3530 Call BackgroundPosition.op_Inequality, X0, X1
	3531 Move W29, [X31+60]
	3532 Move TEMP, X0
	3533 And TEMP, TEMP, 1
	3534 Compare TEMP, 1
	3535 JumpIfNotEqual {3587}
	3536 Compare X19, 0
	3537 JumpIfEqual {4343}
	3538 Move X0, X19
	3539 Move X1, X31
	3540 Move W22, W21
	3541 Call VisualElement.get_styleAnimation, X0
	3542 Compare X0, 0
	3543 JumpIfEqual {4343}
	3544 Move X10, 0x344000
	3545 Move W25, [X23+68]
	3546 NotImplemented "Instruction LDUR not yet implemented."
	3547 Move X8, [X0]
	3548 Move W21, [X24+68]
	3549 NotImplemented "Instruction LDUR not yet implemented."
	3550 Move X10, [X10+3792]
	3551 NotImplemented "Instruction LDRH not yet implemented."
	3552 Move X26, X0
	3553 Move X1, [X10]
	3554 Compare X9, 0
	3555 JumpIfEqual {3562}
	3556 Move X10, [X8+176]
	3557 Add X10, X10, 8
	3558 NotImplemented "Instruction LDUR not yet implemented."
	3559 NotImplemented "Instruction CMP not yet implemented."
	3560 Subtract X9, X9, 1
	3561 Add X10, X10, 16
	3562 Move W2, 13
	3563 Move X0, X26
	3564 Call 0x1C5D788
	3565 Move W9, [X10]
	3566 Add W9, W9, 13
	3567 Add X8, X8, W9
	3568 Add X0, X8, 312
	3569 Move X8, [X0]
	3570 Move X9, [X0+8]
	3571 Move W6, [X31+56]
	3572 Move W10, 1
	3573 NotImplemented "Instruction MOVK not yet implemented."
	3574 Add W1, W10, 2
	3575 Move X0, X26
	3576 Move X2, X29
	3577 Move X3, X21
	3578 Move X4, X27
	3579 Move X5, X25
	3580 Move W7, W22
	3581 Move [X31], X28
	3582 Move [X31+8], X9
	3583 Move W21, W22
	3584 NotImplemented "Instruction BLR not yet implemented."
	3585 Move W29, [X31+60]
	3586 Or W20, W20, W0
	3587 Move X0, [X24+72]
	3588 Move X1, [X23+72]
	3589 Move X2, X31
	3590 Call BackgroundRepeat.op_Inequality, X0, X1
	3591 Move TEMP, X0
	3592 And TEMP, TEMP, 1
	3593 Compare TEMP, 1
	3594 JumpIfNotEqual {3622}
	3595 Move W22, [X31+56]
	3596 Compare X19, 0
	3597 JumpIfEqual {4343}
	3598 Move X0, X19
	3599 Move X1, X31
	3600 Call VisualElement.get_styleAnimation, X0
	3601 Compare X0, 0
	3602 JumpIfEqual {4343}
	3603 Move X10, 0x344000
	3604 Move X8, [X0]
	3605 Move X27, [X24+72]
	3606 Move X26, [X23+72]
	3607 Move X10, [X10+3792]
	3608 NotImplemented "Instruction LDRH not yet implemented."
	3609 Move X25, X0
	3610 Move X1, [X10]
	3611 Compare X9, 0
	3612 JumpIfEqual {3619}
	3613 Move X10, [X8+176]
	3614 Add X10, X10, 8
	3615 NotImplemented "Instruction LDUR not yet implemented."
	3616 NotImplemented "Instruction CMP not yet implemented."
	3617 Subtract X9, X9, 1
	3618 Add X10, X10, 16
	3619 Move W2, 14
	3620 Move X0, X25
	3621 Call 0x1C5D788
	3622 Move W22, [X31+56]
	3623 Move W9, [X10]
	3624 Add W9, W9, 14
	3625 Add X8, X8, W9
	3626 Add X0, X8, 312
	3627 Move X8, [X0]
	3628 Move X7, [X0+8]
	3629 Move W9, 1
	3630 NotImplemented "Instruction MOVK not yet implemented."
	3631 Add W1, W9, 3
	3632 Move X0, X25
	3633 Move X2, X27
	3634 Move X3, X26
	3635 Move W4, W22
	3636 Move W5, W21
	3637 Move X6, X28
	3638 NotImplemented "Instruction BLR not yet implemented."
	3639 Or W20, W20, W0
	3640 Move W8, [X24+96]
	3641 Move V0, [X24+5]
	3642 Add X0, X31, 160
	3643 Add X1, X31, 128
	3644 Move [X31+176], W8
	3645 Move [X31+10], V0
	3646 Move W8, [X23+96]
	3647 Move V0, [X23+5]
	3648 Move X2, X31
	3649 Move [X31+144], W8
	3650 Move [X31+8], V0
	3651 Call BackgroundSize.op_Inequality, X0, X1
	3652 Move TEMP, X0
	3653 And TEMP, TEMP, 1
	3654 Compare TEMP, 1
	3655 JumpIfNotEqual {3723}
	3656 Compare X19, 0
	3657 JumpIfEqual {4343}
	3658 Move X0, X19
	3659 Move X1, X31
	3660 Add X26, X24, 80
	3661 Add X27, X23, 80
	3662 Call VisualElement.get_styleAnimation, X0
	3663 Move W8, [X26+16]
	3664 Move V0, [X26]
	3665 Move [X31+304], W8
	3666 Move [X31+18], V0
	3667 Move W8, [X27+16]
	3668 Move V0, [X27]
	3669 Move [X31+272], W8
	3670 Move [X31+16], V0
	3671 Compare X0, 0
	3672 JumpIfEqual {4343}
	3673 Move V0, [X31+18]
	3674 Move W8, [X31+304]
	3675 Move V1, [X31+16]
	3676 Move W9, [X31+272]
	3677 Move [X31+6], V0
	3678 Move [X31+112], W8
	3679 Move [X31+4], V1
	3680 Move [X31+80], W9
	3681 Move X10, 0x344000
	3682 Move X8, [X0]
	3683 Move X10, [X10+3792]
	3684 Move X25, X0
	3685 NotImplemented "Instruction LDRH not yet implemented."
	3686 Move X1, [X10]
	3687 Compare X9, 0
	3688 JumpIfEqual {3695}
	3689 Move X10, [X8+176]
	3690 Add X10, X10, 8
	3691 NotImplemented "Instruction LDUR not yet implemented."
	3692 NotImplemented "Instruction CMP not yet implemented."
	3693 Subtract X9, X9, 1
	3694 Add X10, X10, 16
	3695 Move W2, 15
	3696 Move X0, X25
	3697 Call 0x1C5D788
	3698 Move W9, [X10]
	3699 Add W9, W9, 15
	3700 Add X8, X8, W9
	3701 Add X0, X8, 312
	3702 Move V0, [X31+6]
	3703 Move W9, [X31+112]
	3704 Move V1, [X31+4]
	3705 Move W10, [X31+80]
	3706 Move X8, [X0]
	3707 Move [X31+58], V0
	3708 Move [X31+944], W9
	3709 Move [X31+56], V1
	3710 Move [X31+912], W10
	3711 Move X7, [X0+8]
	3712 Move W9, 1
	3713 NotImplemented "Instruction MOVK not yet implemented."
	3714 Add W1, W9, 4
	3715 Add X2, X31, 928
	3716 Add X3, X31, 896
	3717 Move X0, X25
	3718 Move W4, W22
	3719 Move W5, W21
	3720 Move X6, X28
	3721 NotImplemented "Instruction BLR not yet implemented."
	3722 Or W20, W20, W0
	3723 NotImplemented "Instruction LDUR not yet implemented."
	3724 NotImplemented "Instruction LDUR not yet implemented."
	3725 NotImplemented "Instruction LDUR not yet implemented."
	3726 NotImplemented "Instruction LDUR not yet implemented."
	3727 Subtract V0, V0, V2
	3728 NotImplemented "Instruction INVALID not yet implemented."
	3729 Subtract V1, V1, V3
	3730 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	3731 NotImplemented "Instruction INVALID not yet implemented."
	3732 Add V0, V0, V2
	3733 Add V0, V1, V0
	3734 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	3735 Add V0, V1, V0
	3736 NotImplemented "Instruction FCMP not yet implemented."
	3737 Compare X19, 0
	3738 JumpIfEqual {4343}
	3739 Move X0, X19
	3740 Move X1, X31
	3741 Call VisualElement.get_styleAnimation, X0
	3742 Compare X0, 0
	3743 JumpIfEqual {4343}
	3744 Move X10, 0x344000
	3745 Move S9, [X23+108]
	3746 Move S8, [X23+112]
	3747 Move S11, [X23+100]
	3748 Move S10, [X23+104]
	3749 Move S13, [X24+108]
	3750 Move S12, [X24+112]
	3751 Move X8, [X0]
	3752 Move S15, [X24+100]
	3753 Move S14, [X24+104]
	3754 Move X10, [X10+3792]
	3755 Move X25, X0
	3756 NotImplemented "Instruction LDRH not yet implemented."
	3757 Move X1, [X10]
	3758 Compare X9, 0
	3759 JumpIfEqual {3766}
	3760 Move X10, [X8+176]
	3761 Add X10, X10, 8
	3762 NotImplemented "Instruction LDUR not yet implemented."
	3763 NotImplemented "Instruction CMP not yet implemented."
	3764 Subtract X9, X9, 1
	3765 Add X10, X10, 16
	3766 Move W2, 3
	3767 Move X0, X25
	3768 Call 0x1C5D788
	3769 Move W9, [X10]
	3770 Add W9, W9, 3
	3771 Add X8, X8, W9
	3772 Add X0, X8, 312
	3773 Move X8, [X0]
	3774 Move X5, [X0+8]
	3775 Move W9, 1
	3776 NotImplemented "Instruction MOVK not yet implemented."
	3777 Add W1, W9, 5
	3778 Move X0, X25
	3779 Move V0, V15
	3780 Move V1, V14
	3781 Move V2, V13
	3782 Move V3, V12
	3783 Move V4, V11
	3784 Move V5, V10
	3785 Move V6, V9
	3786 Move V7, V8
	3787 Move W2, W22
	3788 Move W3, W21
	3789 Move X4, X28
	3790 NotImplemented "Instruction BLR not yet implemented."
	3791 Move V8, [X31+48]
	3792 Or W8, W29, 8
	3793 And W31, W0, 1
	3794 NotImplemented "Instruction CSEL not yet implemented."
	3795 Or W20, W20, W0
	3796 NotImplemented "Instruction LDUR not yet implemented."
	3797 NotImplemented "Instruction LDUR not yet implemented."
	3798 Move X2, X31
	3799 Call Length.op_Inequality, X0, X1
	3800 Move TEMP, X0
	3801 And TEMP, TEMP, 1
	3802 Compare TEMP, 1
	3803 JumpIfNotEqual {3847}
	3804 Compare X19, 0
	3805 JumpIfEqual {4343}
	3806 Move X0, X19
	3807 Move X1, X31
	3808 Call VisualElement.get_styleAnimation, X0
	3809 Compare X0, 0
	3810 JumpIfEqual {4343}
	3811 Move X10, 0x344000
	3812 Move X8, [X0]
	3813 NotImplemented "Instruction LDUR not yet implemented."
	3814 NotImplemented "Instruction LDUR not yet implemented."
	3815 Move X10, [X10+3792]
	3816 NotImplemented "Instruction LDRH not yet implemented."
	3817 Move X25, X0
	3818 Move X1, [X10]
	3819 Compare X9, 0
	3820 JumpIfEqual {3827}
	3821 Move X10, [X8+176]
	3822 Add X10, X10, 8
	3823 NotImplemented "Instruction LDUR not yet implemented."
	3824 NotImplemented "Instruction CMP not yet implemented."
	3825 Subtract X9, X9, 1
	3826 Add X10, X10, 16
	3827 Move W2, 2
	3828 Move X0, X25
	3829 Call 0x1C5D788
	3830 Move W9, [X10]
	3831 Add W9, W9, 2
	3832 Add X8, X8, W9
	3833 Add X0, X8, 312
	3834 Move X8, [X0]
	3835 Move X7, [X0+8]
	3836 Move W9, 1
	3837 NotImplemented "Instruction MOVK not yet implemented."
	3838 Add W1, W9, 6
	3839 Move X0, X25
	3840 Move X2, X27
	3841 Move X3, X26
	3842 Move W4, W22
	3843 Move W5, W21
	3844 Move X6, X28
	3845 NotImplemented "Instruction BLR not yet implemented."
	3846 Or W20, W20, W0
	3847 NotImplemented "Instruction LDUR not yet implemented."
	3848 NotImplemented "Instruction LDUR not yet implemented."
	3849 Move X2, X31
	3850 Call Length.op_Inequality, X0, X1
	3851 Move TEMP, X0
	3852 And TEMP, TEMP, 1
	3853 Compare TEMP, 1
	3854 JumpIfNotEqual {3898}
	3855 Compare X19, 0
	3856 JumpIfEqual {4343}
	3857 Move X0, X19
	3858 Move X1, X31
	3859 Call VisualElement.get_styleAnimation, X0
	3860 Compare X0, 0
	3861 JumpIfEqual {4343}
	3862 Move X10, 0x344000
	3863 Move X8, [X0]
	3864 NotImplemented "Instruction LDUR not yet implemented."
	3865 NotImplemented "Instruction LDUR not yet implemented."
	3866 Move X10, [X10+3792]
	3867 NotImplemented "Instruction LDRH not yet implemented."
	3868 Move X25, X0
	3869 Move X1, [X10]
	3870 Compare X9, 0
	3871 JumpIfEqual {3878}
	3872 Move X10, [X8+176]
	3873 Add X10, X10, 8
	3874 NotImplemented "Instruction LDUR not yet implemented."
	3875 NotImplemented "Instruction CMP not yet implemented."
	3876 Subtract X9, X9, 1
	3877 Add X10, X10, 16
	3878 Move W2, 2
	3879 Move X0, X25
	3880 Call 0x1C5D788
	3881 Move W9, [X10]
	3882 Add W9, W9, 2
	3883 Add X8, X8, W9
	3884 Add X0, X8, 312
	3885 Move X8, [X0]
	3886 Move X7, [X0+8]
	3887 Move W9, 1
	3888 NotImplemented "Instruction MOVK not yet implemented."
	3889 Add W1, W9, 7
	3890 Move X0, X25
	3891 Move X2, X27
	3892 Move X3, X26
	3893 Move W4, W22
	3894 Move W5, W21
	3895 Move X6, X28
	3896 NotImplemented "Instruction BLR not yet implemented."
	3897 Or W20, W20, W0
	3898 NotImplemented "Instruction LDUR not yet implemented."
	3899 NotImplemented "Instruction LDUR not yet implemented."
	3900 NotImplemented "Instruction LDUR not yet implemented."
	3901 NotImplemented "Instruction LDUR not yet implemented."
	3902 Subtract V0, V0, V2
	3903 NotImplemented "Instruction INVALID not yet implemented."
	3904 Subtract V1, V1, V3
	3905 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	3906 NotImplemented "Instruction INVALID not yet implemented."
	3907 Add V0, V0, V2
	3908 Add V0, V1, V0
	3909 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	3910 Add V0, V1, V0
	3911 NotImplemented "Instruction FCMP not yet implemented."
	3912 Compare X19, 0
	3913 JumpIfEqual {4343}
	3914 Move X0, X19
	3915 Move X1, X31
	3916 Call VisualElement.get_styleAnimation, X0
	3917 Compare X0, 0
	3918 JumpIfEqual {4343}
	3919 Move X10, 0x344000
	3920 Move S9, [X23+140]
	3921 Move S8, [X23+144]
	3922 Move S11, [X23+132]
	3923 Move S10, [X23+136]
	3924 Move S13, [X24+140]
	3925 Move S12, [X24+144]
	3926 Move X8, [X0]
	3927 Move S15, [X24+132]
	3928 Move S14, [X24+136]
	3929 Move X10, [X10+3792]
	3930 Move X25, X0
	3931 NotImplemented "Instruction LDRH not yet implemented."
	3932 Move X1, [X10]
	3933 Compare X9, 0
	3934 JumpIfEqual {3941}
	3935 Move X10, [X8+176]
	3936 Add X10, X10, 8
	3937 NotImplemented "Instruction LDUR not yet implemented."
	3938 NotImplemented "Instruction CMP not yet implemented."
	3939 Subtract X9, X9, 1
	3940 Add X10, X10, 16
	3941 Move W2, 3
	3942 Move X0, X25
	3943 Call 0x1C5D788
	3944 Move W9, [X10]
	3945 Add W9, W9, 3
	3946 Add X8, X8, W9
	3947 Add X0, X8, 312
	3948 Move X8, [X0]
	3949 Move X5, [X0+8]
	3950 Move W9, 1
	3951 NotImplemented "Instruction MOVK not yet implemented."
	3952 Add W1, W9, 8
	3953 Move X0, X25
	3954 Move V0, V15
	3955 Move V1, V14
	3956 Move V2, V13
	3957 Move V3, V12
	3958 Move V4, V11
	3959 Move V5, V10
	3960 Move V6, V9
	3961 Move V7, V8
	3962 Move W2, W22
	3963 Move W3, W21
	3964 Move X4, X28
	3965 NotImplemented "Instruction BLR not yet implemented."
	3966 Move V8, [X31+48]
	3967 Or W8, W29, 8
	3968 And W31, W0, 1
	3969 NotImplemented "Instruction CSEL not yet implemented."
	3970 Or W20, W20, W0
	3971 NotImplemented "Instruction LDUR not yet implemented."
	3972 NotImplemented "Instruction LDUR not yet implemented."
	3973 NotImplemented "Instruction LDUR not yet implemented."
	3974 NotImplemented "Instruction LDUR not yet implemented."
	3975 Subtract V0, V0, V2
	3976 NotImplemented "Instruction INVALID not yet implemented."
	3977 Subtract V1, V1, V3
	3978 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	3979 NotImplemented "Instruction INVALID not yet implemented."
	3980 Add V0, V0, V2
	3981 Add V0, V1, V0
	3982 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	3983 Add V0, V1, V0
	3984 NotImplemented "Instruction FCMP not yet implemented."
	3985 Compare X19, 0
	3986 JumpIfEqual {4343}
	3987 Move X0, X19
	3988 Move X1, X31
	3989 Call VisualElement.get_styleAnimation, X0
	3990 Compare X0, 0
	3991 JumpIfEqual {4343}
	3992 Move X10, 0x344000
	3993 Move S9, [X23+156]
	3994 Move S8, [X23+160]
	3995 Move S11, [X23+148]
	3996 Move S10, [X23+152]
	3997 Move S13, [X24+156]
	3998 Move S12, [X24+160]
	3999 Move X8, [X0]
	4000 Move S15, [X24+148]
	4001 Move S14, [X24+152]
	4002 Move X10, [X10+3792]
	4003 Move X25, X0
	4004 NotImplemented "Instruction LDRH not yet implemented."
	4005 Move X1, [X10]
	4006 Compare X9, 0
	4007 JumpIfEqual {4014}
	4008 Move X10, [X8+176]
	4009 Add X10, X10, 8
	4010 NotImplemented "Instruction LDUR not yet implemented."
	4011 NotImplemented "Instruction CMP not yet implemented."
	4012 Subtract X9, X9, 1
	4013 Add X10, X10, 16
	4014 Move W2, 3
	4015 Move X0, X25
	4016 Call 0x1C5D788
	4017 Move W9, [X10]
	4018 Add W9, W9, 3
	4019 Add X8, X8, W9
	4020 Add X0, X8, 312
	4021 Move X8, [X0]
	4022 Move X5, [X0+8]
	4023 Move W9, 1
	4024 NotImplemented "Instruction MOVK not yet implemented."
	4025 Add W1, W9, 9
	4026 Move X0, X25
	4027 Move V0, V15
	4028 Move V1, V14
	4029 Move V2, V13
	4030 Move V3, V12
	4031 Move V4, V11
	4032 Move V5, V10
	4033 Move V6, V9
	4034 Move V7, V8
	4035 Move W2, W22
	4036 Move W3, W21
	4037 Move X4, X28
	4038 NotImplemented "Instruction BLR not yet implemented."
	4039 Move V8, [X31+48]
	4040 Or W8, W29, 8
	4041 And W31, W0, 1
	4042 NotImplemented "Instruction CSEL not yet implemented."
	4043 Or W20, W20, W0
	4044 NotImplemented "Instruction LDUR not yet implemented."
	4045 NotImplemented "Instruction LDUR not yet implemented."
	4046 NotImplemented "Instruction LDUR not yet implemented."
	4047 NotImplemented "Instruction LDUR not yet implemented."
	4048 Subtract V0, V0, V2
	4049 NotImplemented "Instruction INVALID not yet implemented."
	4050 Subtract V1, V1, V3
	4051 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	4052 NotImplemented "Instruction INVALID not yet implemented."
	4053 Add V0, V0, V2
	4054 Add V0, V1, V0
	4055 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	4056 Add V0, V1, V0
	4057 NotImplemented "Instruction FCMP not yet implemented."
	4058 Compare X19, 0
	4059 JumpIfEqual {4343}
	4060 Move X0, X19
	4061 Move X1, X31
	4062 Call VisualElement.get_styleAnimation, X0
	4063 Compare X0, 0
	4064 JumpIfEqual {4343}
	4065 Move X10, 0x344000
	4066 Move S9, [X23+172]
	4067 Move S8, [X23+176]
	4068 Move S11, [X23+164]
	4069 Move S10, [X23+168]
	4070 Move S13, [X24+172]
	4071 Move S12, [X24+176]
	4072 Move X8, [X0]
	4073 Move S15, [X24+164]
	4074 Move S14, [X24+168]
	4075 Move X10, [X10+3792]
	4076 Move X25, X0
	4077 NotImplemented "Instruction LDRH not yet implemented."
	4078 Move X1, [X10]
	4079 Compare X9, 0
	4080 JumpIfEqual {4087}
	4081 Move X10, [X8+176]
	4082 Add X10, X10, 8
	4083 NotImplemented "Instruction LDUR not yet implemented."
	4084 NotImplemented "Instruction CMP not yet implemented."
	4085 Subtract X9, X9, 1
	4086 Add X10, X10, 16
	4087 Move W2, 3
	4088 Move X0, X25
	4089 Call 0x1C5D788
	4090 Move W9, [X10]
	4091 Add W9, W9, 3
	4092 Add X8, X8, W9
	4093 Add X0, X8, 312
	4094 Move X8, [X0]
	4095 Move X5, [X0+8]
	4096 Move W9, 1
	4097 NotImplemented "Instruction MOVK not yet implemented."
	4098 Add W1, W9, 10
	4099 Move X0, X25
	4100 Move V0, V15
	4101 Move V1, V14
	4102 Move V2, V13
	4103 Move V3, V12
	4104 Move V4, V11
	4105 Move V5, V10
	4106 Move V6, V9
	4107 Move V7, V8
	4108 Move W2, W22
	4109 Move W3, W21
	4110 Move X4, X28
	4111 NotImplemented "Instruction BLR not yet implemented."
	4112 Or W8, W29, 8
	4113 And W31, W0, 1
	4114 NotImplemented "Instruction CSEL not yet implemented."
	4115 Or W20, W20, W0
	4116 NotImplemented "Instruction LDUR not yet implemented."
	4117 NotImplemented "Instruction LDUR not yet implemented."
	4118 Move X2, X31
	4119 Call Length.op_Inequality, X0, X1
	4120 Move TEMP, X0
	4121 And TEMP, TEMP, 1
	4122 Compare TEMP, 1
	4123 JumpIfNotEqual {4167}
	4124 Compare X19, 0
	4125 JumpIfEqual {4343}
	4126 Move X0, X19
	4127 Move X1, X31
	4128 Call VisualElement.get_styleAnimation, X0
	4129 Compare X0, 0
	4130 JumpIfEqual {4343}
	4131 Move X10, 0x344000
	4132 Move X8, [X0]
	4133 NotImplemented "Instruction LDUR not yet implemented."
	4134 NotImplemented "Instruction LDUR not yet implemented."
	4135 Move X10, [X10+3792]
	4136 NotImplemented "Instruction LDRH not yet implemented."
	4137 Move X25, X0
	4138 Move X1, [X10]
	4139 Compare X9, 0
	4140 JumpIfEqual {4147}
	4141 Move X10, [X8+176]
	4142 Add X10, X10, 8
	4143 NotImplemented "Instruction LDUR not yet implemented."
	4144 NotImplemented "Instruction CMP not yet implemented."
	4145 Subtract X9, X9, 1
	4146 Add X10, X10, 16
	4147 Move W2, 2
	4148 Move X0, X25
	4149 Call 0x1C5D788
	4150 Move W9, [X10]
	4151 Add W9, W9, 2
	4152 Add X8, X8, W9
	4153 Add X0, X8, 312
	4154 Move X8, [X0]
	4155 Move X7, [X0+8]
	4156 Move W9, 1
	4157 NotImplemented "Instruction MOVK not yet implemented."
	4158 Add W1, W9, 11
	4159 Move X0, X25
	4160 Move X2, X27
	4161 Move X3, X26
	4162 Move W4, W22
	4163 Move W5, W21
	4164 Move X6, X28
	4165 NotImplemented "Instruction BLR not yet implemented."
	4166 Or W20, W20, W0
	4167 NotImplemented "Instruction LDUR not yet implemented."
	4168 NotImplemented "Instruction LDUR not yet implemented."
	4169 Move X2, X31
	4170 Call Length.op_Inequality, X0, X1
	4171 Move TEMP, X0
	4172 And TEMP, TEMP, 1
	4173 Compare TEMP, 1
	4174 JumpIfNotEqual {4218}
	4175 Compare X19, 0
	4176 JumpIfEqual {4343}
	4177 Move X0, X19
	4178 Move X1, X31
	4179 Call VisualElement.get_styleAnimation, X0
	4180 Compare X0, 0
	4181 JumpIfEqual {4343}
	4182 Move X10, 0x344000
	4183 Move X8, [X0]
	4184 NotImplemented "Instruction LDUR not yet implemented."
	4185 NotImplemented "Instruction LDUR not yet implemented."
	4186 Move X10, [X10+3792]
	4187 NotImplemented "Instruction LDRH not yet implemented."
	4188 Move X25, X0
	4189 Move X1, [X10]
	4190 Compare X9, 0
	4191 JumpIfEqual {4198}
	4192 Move X10, [X8+176]
	4193 Add X10, X10, 8
	4194 NotImplemented "Instruction LDUR not yet implemented."
	4195 NotImplemented "Instruction CMP not yet implemented."
	4196 Subtract X9, X9, 1
	4197 Add X10, X10, 16
	4198 Move W2, 2
	4199 Move X0, X25
	4200 Call 0x1C5D788
	4201 Move W9, [X10]
	4202 Add W9, W9, 2
	4203 Add X8, X8, W9
	4204 Add X0, X8, 312
	4205 Move X8, [X0]
	4206 Move X7, [X0+8]
	4207 Move W9, 1
	4208 NotImplemented "Instruction MOVK not yet implemented."
	4209 Add W1, W9, 12
	4210 Move X0, X25
	4211 Move X2, X27
	4212 Move X3, X26
	4213 Move W4, W22
	4214 Move W5, W21
	4215 Move X6, X28
	4216 NotImplemented "Instruction BLR not yet implemented."
	4217 Or W20, W20, W0
	4218 Move V0, [X24+196]
	4219 Move V1, [X23+196]
	4220 NotImplemented "Instruction FCMP not yet implemented."
	4221 Compare X19, 0
	4222 JumpIfEqual {4343}
	4223 Move X0, X19
	4224 Move X1, X31
	4225 Call VisualElement.get_styleAnimation, X0
	4226 Compare X0, 0
	4227 JumpIfEqual {4343}
	4228 Move X10, 0x344000
	4229 Move X8, [X0]
	4230 Move V9, [X24+196]
	4231 Move V8, [X23+196]
	4232 Move X10, [X10+3792]
	4233 NotImplemented "Instruction LDRH not yet implemented."
	4234 Move X25, X0
	4235 Move X1, [X10]
	4236 Compare X9, 0
	4237 JumpIfEqual {4244}
	4238 Move X10, [X8+176]
	4239 Add X10, X10, 8
	4240 NotImplemented "Instruction LDUR not yet implemented."
	4241 NotImplemented "Instruction CMP not yet implemented."
	4242 Subtract X9, X9, 1
	4243 Add X10, X10, 16
	4244 Move X0, X25
	4245 Move W2, W31
	4246 Call 0x1C5D788
	4247 NotImplemented "Instruction LDRSW not yet implemented."
	4248 Add X8, X8, X9
	4249 Add X0, X8, 312
	4250 Move X8, [X0]
	4251 Move X5, [X0+8]
	4252 Move W9, 1
	4253 NotImplemented "Instruction MOVK not yet implemented."
	4254 Add W1, W9, 13
	4255 Move X0, X25
	4256 Move V0, V9
	4257 Move V1, V8
	4258 Move W2, W22
	4259 Move W3, W21
	4260 Move X4, X28
	4261 NotImplemented "Instruction BLR not yet implemented."
	4262 Or W20, W20, W0
	4263 Move W8, [X24+200]
	4264 Move W9, [X23+200]
	4265 NotImplemented "Instruction CMP not yet implemented."
	4266 Compare X19, 0
	4267 JumpIfEqual {4343}
	4268 Move X0, X19
	4269 Move X1, X31
	4270 Call VisualElement.get_styleAnimation, X0
	4271 Compare X0, 0
	4272 JumpIfEqual {4343}
	4273 Move X10, 0x344000
	4274 Move X8, [X0]
	4275 Move W24, [X24+200]
	4276 Move W23, [X23+200]
	4277 Move X10, [X10+3792]
	4278 NotImplemented "Instruction LDRH not yet implemented."
	4279 Move X25, X0
	4280 Move X1, [X10]
	4281 Compare X9, 0
	4282 JumpIfEqual {4289}
	4283 Move X10, [X8+176]
	4284 Add X10, X10, 8
	4285 NotImplemented "Instruction LDUR not yet implemented."
	4286 NotImplemented "Instruction CMP not yet implemented."
	4287 Subtract X9, X9, 1
	4288 Add X10, X10, 16
	4289 Move W2, 4
	4290 Move X0, X25
	4291 Call 0x1C5D788
	4292 Move W9, [X10]
	4293 Add W9, W9, 4
	4294 Add X8, X8, W9
	4295 Add X0, X8, 312
	4296 Move X8, [X0]
	4297 Move X7, [X0+8]
	4298 Move W9, 1
	4299 NotImplemented "Instruction MOVK not yet implemented."
	4300 Add W1, W9, 14
	4301 Move X0, X25
	4302 Move W2, W24
	4303 Move W3, W23
	4304 Move W4, W22
	4305 Move W5, W21
	4306 Move X6, X28
	4307 NotImplemented "Instruction BLR not yet implemented."
	4308 Or W20, W20, W0
	4309 Compare W29, 0
	4310 JumpIfEqual {4320}
	4311 Compare X19, 0
	4312 JumpIfEqual {4343}
	4313 Move X0, X19
	4314 Move X1, X31
	4315 Call VisualElement.get_usageHints, X0
	4316 Or W1, W0, W29
	4317 Move X0, X19
	4318 Move X2, X31
	4319 Call VisualElement.set_usageHints, X0, X1
	4320 And W0, W20, 1
	4321 Add X31, X31, 960
	4322 Move X20, [X31+144]
	4323 Move X19, [X31+152]
	4324 Move X22, [X31+128]
	4325 Move X21, [X31+136]
	4326 Move X24, [X31+112]
	4327 Move X23, [X31+120]
	4328 Move X26, [X31+96]
	4329 Move X25, [X31+104]
	4330 Move X28, [X31+80]
	4331 Move X27, [X31+88]
	4332 Move X29, [X31+64]
	4333 Move X30, [X31+72]
	4334 Move D9, [X31+48]
	4335 Move D8, [X31+56]
	4336 Move D11, [X31+32]
	4337 Move D10, [X31+40]
	4338 Move D13, [X31+16]
	4339 Move D12, [X31+24]
	4340 Move D15, [X31+160]
	4341 Move D14, [X31+168]
	4342 Return X0
	4343 Call 0x1C17F20

Method: System.Boolean StartAnimationInline(UnityEngine.UIElements.VisualElement element, UnityEngine.UIElements.StyleSheets.StylePropertyId id, ref UnityEngine.UIElements.ComputedStyle computedStyle, UnityEngine.UIElements.StyleSheets.StyleValue sv, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single, System.Single> easingCurve)

Disassembly:
	0x03DDABF4 MOV X24, X0
	0x03DDABF8 B 0x3DDD2A0
	0x03DDABFC LDP S8, S9, [X24 + 0x8]
	0x03DDAC00 LDP S10, S11, [X24 + 0x10]
	0x03DDAC04 CBZ X22, 0x3DDDAF4
	0x03DDAC08 MOV X0, X22
	0x03DDAC0C MOV X1, X31
	0x03DDAC10 BL 0x3DE89D4
	0x03DDAC14 ADRP X8, 0x38B000
	0x03DDAC18 LDR X8, [X8 + 0x360]
	0x03DDAC1C MOV X24, X0
	0x03DDAC20 ADD X0, X23, 0x28
	0x03DDAC24 LDR X1, [X8]
	0x03DDAC28 BL 0x266DB18
	0x03DDAC2C CBZ X24, 0x3DDDAF4
	0x03DDAC30 ADRP X10, 0x343000
	0x03DDAC34 LDP S13, S12, [X0 + 0x8]
	0x03DDAC38 LDR X8, [X24]
	0x03DDAC3C LDP S15, S14, [X0]
	0x03DDAC40 LDR X10, [X10 + 0xED0]
	0x03DDAC44 LDRH W9, [X8 + 0x12E]
	0x03DDAC48 LDR X1, [X10]
	0x03DDAC4C CBZ X9, 0x3DDAC70
	0x03DDAC50 LDR X10, [X8 + 0xB0]
	0x03DDAC54 ADD X10, X10, 0x8
	0x03DDAC58 LDUR X11, [X10 - 0x8]
	0x03DDAC5C CMP X11, X1
	0x03DDAC60 B.EQ 0x3DDB860
	0x03DDAC64 SUBS X9, X9, 0x1
	0x03DDAC68 ADD X10, X10, 0x10
	0x03DDAC6C B.NE 0x3DDAC58
	0x03DDAC70 MOVZ W2, 0x3
	0x03DDAC74 MOV X0, X24
	0x03DDAC78 BL 0x1C5C788
	0x03DDAC7C B 0x3DDB870
	0x03DDAC80 ADD X24, X24, 0x8
	0x03DDAC84 MOV X0, X24
	0x03DDAC88 MOV X1, X31
	0x03DDAC8C BL 0x32C05E4
	0x03DDAC90 TBZ X0, 0x0, 0x3DDD318
	0x03DDAC94 MOV X0, X24
	0x03DDAC98 MOV X1, X31
	0x03DDAC9C BL 0x32C05F4
	0x03DDACA0 ADD X8, X31, 0x110
	0x03DDACA4 MOV X1, X31
	0x03DDACA8 BL 0x3DE2500
	0x03DDACAC LDP V0, V1, [X31 + 0x110]
	0x03DDACB0 STP V0, V1, [X31 + 0xB0]
	0x03DDACB4 B 0x3DDD320
	0x03DDACB8 LDR X25, [X24 + 0x8]
	0x03DDACBC LDR W24, [X24 + 0x10]
	0x03DDACC0 CBZ X22, 0x3DDDAF4
	0x03DDACC4 MOV X0, X22
	0x03DDACC8 MOV X1, X31
	0x03DDACCC BL 0x3DE89D4
	0x03DDACD0 ADRP X8, 0x38B000
	0x03DDACD4 LDR X8, [X8 + 0x360]
	0x03DDACD8 MOV X22, X0
	0x03DDACDC ADD X0, X23, 0x28
	0x03DDACE0 LDR X1, [X8]
	0x03DDACE4 BL 0x266DB18
	0x03DDACE8 CBZ X22, 0x3DDDAF4
	0x03DDACEC ADRP X10, 0x343000
	0x03DDACF0 LDR X8, [X22]
	0x03DDACF4 LDR W23, [X0 + 0x38]
	0x03DDACF8 LDR X26, [X0 + 0x30]
	0x03DDACFC LDR X10, [X10 + 0xED0]
	0x03DDAD00 LDRH W9, [X8 + 0x12E]
	0x03DDAD04 MOV W24, W24
	0x03DDAD08 LDR X1, [X10]
	0x03DDAD0C CBZ X9, 0x3DDAD30
	0x03DDAD10 LDR X10, [X8 + 0xB0]
	0x03DDAD14 ADD X10, X10, 0x8
	0x03DDAD18 LDUR X11, [X10 - 0x8]
	0x03DDAD1C CMP X11, X1
	0x03DDAD20 B.EQ 0x3DDB87C
	0x03DDAD24 SUBS X9, X9, 0x1
	0x03DDAD28 ADD X10, X10, 0x10
	0x03DDAD2C B.NE 0x3DDAD18
	0x03DDAD30 MOVZ W2, 0xD
	0x03DDAD34 MOV X0, X22
	0x03DDAD38 BL 0x1C5C788
	0x03DDAD3C B 0x3DDB88C
	0x03DDAD40 LDR X25, [X24 + 0x8]
	0x03DDAD44 LDR W24, [X24 + 0x10]
	0x03DDAD48 CBZ X22, 0x3DDDAF4
	0x03DDAD4C MOV X0, X22
	0x03DDAD50 MOV X1, X31
	0x03DDAD54 BL 0x3DE89D4
	0x03DDAD58 ADRP X8, 0x38B000
	0x03DDAD5C LDR X8, [X8 + 0x360]
	0x03DDAD60 MOV X22, X0
	0x03DDAD64 ADD X0, X23, 0x28
	0x03DDAD68 LDR X1, [X8]
	0x03DDAD6C BL 0x266DB18
	0x03DDAD70 CBZ X22, 0x3DDDAF4
	0x03DDAD74 ADRP X10, 0x343000
	0x03DDAD78 LDR X8, [X22]
	0x03DDAD7C LDR W23, [X0 + 0x44]
	0x03DDAD80 LDUR X26, [X0 + 0x3C]
	0x03DDAD84 LDR X10, [X10 + 0xED0]
	0x03DDAD88 LDRH W9, [X8 + 0x12E]
	0x03DDAD8C MOV W24, W24
	0x03DDAD90 LDR X1, [X10]
	0x03DDAD94 CBZ X9, 0x3DDADB8
	0x03DDAD98 LDR X10, [X8 + 0xB0]
	0x03DDAD9C ADD X10, X10, 0x8
	0x03DDADA0 LDUR X11, [X10 - 0x8]
	0x03DDADA4 CMP X11, X1
	0x03DDADA8 B.EQ 0x3DDB89C
	0x03DDADAC SUBS X9, X9, 0x1
	0x03DDADB0 ADD X10, X10, 0x10
	0x03DDADB4 B.NE 0x3DDADA0
	0x03DDADB8 MOVZ W2, 0xD
	0x03DDADBC MOV X0, X22
	0x03DDADC0 BL 0x1C5C788
	0x03DDADC4 B 0x3DDB8AC
	0x03DDADC8 LDR X24, [X24 + 0x8]
	0x03DDADCC CBZ X22, 0x3DDDAF4
	0x03DDADD0 MOV X0, X22
	0x03DDADD4 MOV X1, X31
	0x03DDADD8 BL 0x3DE89D4
	0x03DDADDC ADRP X8, 0x38B000
	0x03DDADE0 LDR X8, [X8 + 0x360]
	0x03DDADE4 MOV X22, X0
	0x03DDADE8 ADD X0, X23, 0x28
	0x03DDADEC LDR X1, [X8]
	0x03DDADF0 BL 0x266DB18
	0x03DDADF4 CBZ X22, 0x3DDDAF4
	0x03DDADF8 ADRP X10, 0x343000
	0x03DDADFC LDR X8, [X22]
	0x03DDAE00 LDR X23, [X0 + 0x48]
	0x03DDAE04 LDR X10, [X10 + 0xED0]
	0x03DDAE08 LDRH W9, [X8 + 0x12E]
	0x03DDAE0C LDR X1, [X10]
	0x03DDAE10 CBZ X9, 0x3DDAE34
	0x03DDAE14 LDR X10, [X8 + 0xB0]
	0x03DDAE18 ADD X10, X10, 0x8
	0x03DDAE1C LDUR X11, [X10 - 0x8]
	0x03DDAE20 CMP X11, X1
	0x03DDAE24 B.EQ 0x3DDB8C0
	0x03DDAE28 SUBS X9, X9, 0x1
	0x03DDAE2C ADD X10, X10, 0x10
	0x03DDAE30 B.NE 0x3DDAE1C
	0x03DDAE34 MOVZ W2, 0xE
	0x03DDAE38 MOV X0, X22
	0x03DDAE3C BL 0x1C5C788
	0x03DDAE40 B 0x3DDB8D0
	0x03DDAE44 LDP S8, S9, [X24 + 0x8]
	0x03DDAE48 LDP S10, S11, [X24 + 0x10]
	0x03DDAE4C CBZ X22, 0x3DDDAF4
	0x03DDAE50 MOV X0, X22
	0x03DDAE54 MOV X1, X31
	0x03DDAE58 BL 0x3DE89D4
	0x03DDAE5C ADRP X8, 0x38B000
	0x03DDAE60 LDR X8, [X8 + 0x360]
	0x03DDAE64 MOV X24, X0
	0x03DDAE68 ADD X0, X23, 0x28
	0x03DDAE6C LDR X1, [X8]
	0x03DDAE70 BL 0x266DB18
	0x03DDAE74 CBZ X24, 0x3DDDAF4
	0x03DDAE78 ADRP X10, 0x343000
	0x03DDAE7C LDP S13, S12, [X0 + 0x6C]
	0x03DDAE80 LDR X8, [X24]
	0x03DDAE84 LDP S15, S14, [X0 + 0x64]
	0x03DDAE88 LDR X10, [X10 + 0xED0]
	0x03DDAE8C LDRH W9, [X8 + 0x12E]
	0x03DDAE90 LDR X1, [X10]
	0x03DDAE94 CBZ X9, 0x3DDAEB8
	0x03DDAE98 LDR X10, [X8 + 0xB0]
	0x03DDAE9C ADD X10, X10, 0x8
	0x03DDAEA0 LDUR X11, [X10 - 0x8]
	0x03DDAEA4 CMP X11, X1
	0x03DDAEA8 B.EQ 0x3DDB8E4
	0x03DDAEAC SUBS X9, X9, 0x1
	0x03DDAEB0 ADD X10, X10, 0x10
	0x03DDAEB4 B.NE 0x3DDAEA0
	0x03DDAEB8 MOVZ W2, 0x3
	0x03DDAEBC MOV X0, X24
	0x03DDAEC0 BL 0x1C5C788
	0x03DDAEC4 B 0x3DDB8F4
	0x03DDAEC8 LDR X24, [X24 + 0x8]
	0x03DDAECC CBZ X22, 0x3DDDAF4
	0x03DDAED0 MOV X0, X22
	0x03DDAED4 MOV X1, X31
	0x03DDAED8 BL 0x3DE89D4
	0x03DDAEDC ADRP X8, 0x38B000
	0x03DDAEE0 LDR X8, [X8 + 0x360]
	0x03DDAEE4 MOV X22, X0
	0x03DDAEE8 ADD X0, X23, 0x28
	0x03DDAEEC LDR X1, [X8]
	0x03DDAEF0 BL 0x266DB18
	0x03DDAEF4 CBZ X22, 0x3DDDAF4
	0x03DDAEF8 ADRP X10, 0x343000
	0x03DDAEFC LDR X8, [X22]
	0x03DDAF00 LDUR X23, [X0 + 0x74]
	0x03DDAF04 LDR X10, [X10 + 0xED0]
	0x03DDAF08 LDRH W9, [X8 + 0x12E]
	0x03DDAF0C LDR X1, [X10]
	0x03DDAF10 CBZ X9, 0x3DDAF34
	0x03DDAF14 LDR X10, [X8 + 0xB0]
	0x03DDAF18 ADD X10, X10, 0x8
	0x03DDAF1C LDUR X11, [X10 - 0x8]
	0x03DDAF20 CMP X11, X1
	0x03DDAF24 B.EQ 0x3DDB908
	0x03DDAF28 SUBS X9, X9, 0x1
	0x03DDAF2C ADD X10, X10, 0x10
	0x03DDAF30 B.NE 0x3DDAF1C
	0x03DDAF34 MOVZ W2, 0x2
	0x03DDAF38 MOV X0, X22
	0x03DDAF3C BL 0x1C5C788
	0x03DDAF40 B 0x3DDB918
	0x03DDAF44 LDR X24, [X24 + 0x8]
	0x03DDAF48 CBZ X22, 0x3DDDAF4
	0x03DDAF4C MOV X0, X22
	0x03DDAF50 MOV X1, X31
	0x03DDAF54 BL 0x3DE89D4
	0x03DDAF58 ADRP X8, 0x38B000
	0x03DDAF5C LDR X8, [X8 + 0x360]
	0x03DDAF60 MOV X22, X0
	0x03DDAF64 ADD X0, X23, 0x28
	0x03DDAF68 LDR X1, [X8]
	0x03DDAF6C BL 0x266DB18
	0x03DDAF70 CBZ X22, 0x3DDDAF4
	0x03DDAF74 ADRP X10, 0x343000
	0x03DDAF78 LDR X8, [X22]
	0x03DDAF7C LDUR X23, [X0 + 0x7C]
	0x03DDAF80 LDR X10, [X10 + 0xED0]
	0x03DDAF84 LDRH W9, [X8 + 0x12E]
	0x03DDAF88 LDR X1, [X10]
	0x03DDAF8C CBZ X9, 0x3DDAFB0
	0x03DDAF90 LDR X10, [X8 + 0xB0]
	0x03DDAF94 ADD X10, X10, 0x8
	0x03DDAF98 LDUR X11, [X10 - 0x8]
	0x03DDAF9C CMP X11, X1
	0x03DDAFA0 B.EQ 0x3DDB930
	0x03DDAFA4 SUBS X9, X9, 0x1
	0x03DDAFA8 ADD X10, X10, 0x10
	0x03DDAFAC B.NE 0x3DDAF98
	0x03DDAFB0 MOVZ W2, 0x2
	0x03DDAFB4 MOV X0, X22
	0x03DDAFB8 BL 0x1C5C788
	0x03DDAFBC B 0x3DDB940
	0x03DDAFC0 LDP S8, S9, [X24 + 0x8]
	0x03DDAFC4 LDP S10, S11, [X24 + 0x10]
	0x03DDAFC8 CBZ X22, 0x3DDDAF4
	0x03DDAFCC MOV X0, X22
	0x03DDAFD0 MOV X1, X31
	0x03DDAFD4 BL 0x3DE89D4
	0x03DDAFD8 ADRP X8, 0x38B000
	0x03DDAFDC LDR X8, [X8 + 0x360]
	0x03DDAFE0 MOV X24, X0
	0x03DDAFE4 ADD X0, X23, 0x28
	0x03DDAFE8 LDR X1, [X8]
	0x03DDAFEC BL 0x266DB18
	0x03DDAFF0 CBZ X24, 0x3DDDAF4
	0x03DDAFF4 ADRP X10, 0x343000
	0x03DDAFF8 LDP S13, S12, [X0 + 0x8C]
	0x03DDAFFC LDR X8, [X24]
	0x03DDB000 LDP S15, S14, [X0 + 0x84]
	0x03DDB004 LDR X10, [X10 + 0xED0]
	0x03DDB008 LDRH W9, [X8 + 0x12E]
	0x03DDB00C LDR X1, [X10]
	0x03DDB010 CBZ X9, 0x3DDB034
	0x03DDB014 LDR X10, [X8 + 0xB0]
	0x03DDB018 ADD X10, X10, 0x8
	0x03DDB01C LDUR X11, [X10 - 0x8]
	0x03DDB020 CMP X11, X1
	0x03DDB024 B.EQ 0x3DDB954
	0x03DDB028 SUBS X9, X9, 0x1
	0x03DDB02C ADD X10, X10, 0x10
	0x03DDB030 B.NE 0x3DDB01C
	0x03DDB034 MOVZ W2, 0x3
	0x03DDB038 MOV X0, X24
	0x03DDB03C BL 0x1C5C788
	0x03DDB040 B 0x3DDB964
	0x03DDB044 LDP S8, S9, [X24 + 0x8]
	0x03DDB048 LDP S10, S11, [X24 + 0x10]
	0x03DDB04C CBZ X22, 0x3DDDAF4
	0x03DDB050 MOV X0, X22
	0x03DDB054 MOV X1, X31
	0x03DDB058 BL 0x3DE89D4
	0x03DDB05C ADRP X8, 0x38A000
	0x03DDB060 LDR X8, [X8 + 0x360]
	0x03DDB064 MOV X24, X0
	0x03DDB068 ADD X0, X23, 0x28
	0x03DDB06C LDR X1, [X8]
	0x03DDB070 BL 0x266DB18
	0x03DDB074 CBZ X24, 0x3DDDAF4
	0x03DDB078 ADRP X10, 0x342000
	0x03DDB07C LDP S13, S12, [X0 + 0x9C]
	0x03DDB080 LDR X8, [X24]
	0x03DDB084 LDP S15, S14, [X0 + 0x94]
	0x03DDB088 LDR X10, [X10 + 0xED0]
	0x03DDB08C LDRH W9, [X8 + 0x12E]
	0x03DDB090 LDR X1, [X10]
	0x03DDB094 CBZ X9, 0x3DDB0B8
	0x03DDB098 LDR X10, [X8 + 0xB0]
	0x03DDB09C ADD X10, X10, 0x8
	0x03DDB0A0 LDUR X11, [X10 - 0x8]
	0x03DDB0A4 CMP X11, X1
	0x03DDB0A8 B.EQ 0x3DDB978
	0x03DDB0AC SUBS X9, X9, 0x1
	0x03DDB0B0 ADD X10, X10, 0x10
	0x03DDB0B4 B.NE 0x3DDB0A0
	0x03DDB0B8 MOVZ W2, 0x3
	0x03DDB0BC MOV X0, X24
	0x03DDB0C0 BL 0x1C5C788
	0x03DDB0C4 B 0x3DDB988
	0x03DDB0C8 LDP S8, S9, [X24 + 0x8]
	0x03DDB0CC LDP S10, S11, [X24 + 0x10]
	0x03DDB0D0 CBZ X22, 0x3DDDAF4
	0x03DDB0D4 MOV X0, X22
	0x03DDB0D8 MOV X1, X31
	0x03DDB0DC BL 0x3DE89D4
	0x03DDB0E0 ADRP X8, 0x38A000
	0x03DDB0E4 LDR X8, [X8 + 0x360]
	0x03DDB0E8 MOV X24, X0
	0x03DDB0EC ADD X0, X23, 0x28
	0x03DDB0F0 LDR X1, [X8]
	0x03DDB0F4 BL 0x266DB18
	0x03DDB0F8 CBZ X24, 0x3DDDAF4
	0x03DDB0FC ADRP X10, 0x342000
	0x03DDB100 LDP S13, S12, [X0 + 0xAC]
	0x03DDB104 LDR X8, [X24]
	0x03DDB108 LDP S15, S14, [X0 + 0xA4]
	0x03DDB10C LDR X10, [X10 + 0xED0]
	0x03DDB110 LDRH W9, [X8 + 0x12E]
	0x03DDB114 LDR X1, [X10]
	0x03DDB118 CBZ X9, 0x3DDB13C
	0x03DDB11C LDR X10, [X8 + 0xB0]
	0x03DDB120 ADD X10, X10, 0x8
	0x03DDB124 LDUR X11, [X10 - 0x8]
	0x03DDB128 CMP X11, X1
	0x03DDB12C B.EQ 0x3DDB99C
	0x03DDB130 SUBS X9, X9, 0x1
	0x03DDB134 ADD X10, X10, 0x10
	0x03DDB138 B.NE 0x3DDB124
	0x03DDB13C MOVZ W2, 0x3
	0x03DDB140 MOV X0, X24
	0x03DDB144 BL 0x1C5C788
	0x03DDB148 B 0x3DDB9AC
	0x03DDB14C LDR X24, [X24 + 0x8]
	0x03DDB150 CBZ X22, 0x3DDDAF4
	0x03DDB154 MOV X0, X22
	0x03DDB158 MOV X1, X31
	0x03DDB15C BL 0x3DE89D4
	0x03DDB160 ADRP X8, 0x38A000
	0x03DDB164 LDR X8, [X8 + 0x360]
	0x03DDB168 MOV X22, X0
	0x03DDB16C ADD X0, X23, 0x28
	0x03DDB170 LDR X1, [X8]
	0x03DDB174 BL 0x266DB18
	0x03DDB178 CBZ X22, 0x3DDDAF4
	0x03DDB17C ADRP X10, 0x342000
	0x03DDB180 LDR X8, [X22]
	0x03DDB184 LDUR X23, [X0 + 0xB4]
	0x03DDB188 LDR X10, [X10 + 0xED0]
	0x03DDB18C LDRH W9, [X8 + 0x12E]
	0x03DDB190 LDR X1, [X10]
	0x03DDB194 CBZ X9, 0x3DDB1B8
	0x03DDB198 LDR X10, [X8 + 0xB0]
	0x03DDB19C ADD X10, X10, 0x8
	0x03DDB1A0 LDUR X11, [X10 - 0x8]
	0x03DDB1A4 CMP X11, X1
	0x03DDB1A8 B.EQ 0x3DDB9C4
	0x03DDB1AC SUBS X9, X9, 0x1
	0x03DDB1B0 ADD X10, X10, 0x10
	0x03DDB1B4 B.NE 0x3DDB1A0
	0x03DDB1B8 MOVZ W2, 0x2
	0x03DDB1BC MOV X0, X22
	0x03DDB1C0 BL 0x1C5C788
	0x03DDB1C4 B 0x3DDB9D4
	0x03DDB1C8 LDR X24, [X24 + 0x8]
	0x03DDB1CC CBZ X22, 0x3DDDAF4
	0x03DDB1D0 MOV X0, X22
	0x03DDB1D4 MOV X1, X31
	0x03DDB1D8 BL 0x3DE89D4
	0x03DDB1DC ADRP X8, 0x38A000
	0x03DDB1E0 LDR X8, [X8 + 0x360]
	0x03DDB1E4 MOV X22, X0
	0x03DDB1E8 ADD X0, X23, 0x28
	0x03DDB1EC LDR X1, [X8]
	0x03DDB1F0 BL 0x266DB18
	0x03DDB1F4 CBZ X22, 0x3DDDAF4
	0x03DDB1F8 ADRP X10, 0x342000
	0x03DDB1FC LDR X8, [X22]
	0x03DDB200 LDUR X23, [X0 + 0xBC]
	0x03DDB204 LDR X10, [X10 + 0xED0]
	0x03DDB208 LDRH W9, [X8 + 0x12E]
	0x03DDB20C LDR X1, [X10]
	0x03DDB210 CBZ X9, 0x3DDB234
	0x03DDB214 LDR X10, [X8 + 0xB0]
	0x03DDB218 ADD X10, X10, 0x8
	0x03DDB21C LDUR X11, [X10 - 0x8]
	0x03DDB220 CMP X11, X1
	0x03DDB224 B.EQ 0x3DDB9E8
	0x03DDB228 SUBS X9, X9, 0x1
	0x03DDB22C ADD X10, X10, 0x10
	0x03DDB230 B.NE 0x3DDB21C
	0x03DDB234 MOVZ W2, 0x2
	0x03DDB238 MOV X0, X22
	0x03DDB23C BL 0x1C5C788
	0x03DDB240 B 0x3DDB9F8
	0x03DDB244 LDR V8, [X24 + 0x8]
	0x03DDB248 CBZ X22, 0x3DDDAF4
	0x03DDB24C MOV X0, X22
	0x03DDB250 MOV X1, X31
	0x03DDB254 BL 0x3DE89D4
	0x03DDB258 ADRP X8, 0x38A000
	0x03DDB25C LDR X8, [X8 + 0x360]
	0x03DDB260 MOV X22, X0
	0x03DDB264 ADD X0, X23, 0x28
	0x03DDB268 LDR X1, [X8]
	0x03DDB26C BL 0x266DB18
	0x03DDB270 CBZ X22, 0x3DDDAF4
	0x03DDB274 ADRP X10, 0x342000
	0x03DDB278 LDR X8, [X22]
	0x03DDB27C LDR V9, [X0 + 0xC4]
	0x03DDB280 LDR X10, [X10 + 0xED0]
	0x03DDB284 LDRH W9, [X8 + 0x12E]
	0x03DDB288 LDR X1, [X10]
	0x03DDB28C CBZ X9, 0x3DDB2B0
	0x03DDB290 LDR X10, [X8 + 0xB0]
	0x03DDB294 ADD X10, X10, 0x8
	0x03DDB298 LDUR X11, [X10 - 0x8]
	0x03DDB29C CMP X11, X1
	0x03DDB2A0 B.EQ 0x3DDBA0C
	0x03DDB2A4 SUBS X9, X9, 0x1
	0x03DDB2A8 ADD X10, X10, 0x10
	0x03DDB2AC B.NE 0x3DDB298
	0x03DDB2B0 MOV X0, X22
	0x03DDB2B4 MOV W2, W31
	0x03DDB2B8 BL 0x1C5C788
	0x03DDB2BC B 0x3DDBA18
	0x03DDB2C0 LDR V0, [X24 + 0x8]
	0x03DDB2C4 MOVZ W8, 0x7F800000
	0x03DDB2C8 FMOV S1, W8
	0x03DDB2CC MOVZ W9, 0x80000000
	0x03DDB2D0 FCVTZS W8, S0
	0x03DDB2D4 FCMP S0, S1
	0x03DDB2D8 CSEL W24, W9, W8, EQ
	0x03DDB2DC CBZ X22, 0x3DDDAF4
	0x03DDB2E0 MOV X0, X22
	0x03DDB2E4 MOV X1, X31
	0x03DDB2E8 BL 0x3DE89D4
	0x03DDB2EC ADRP X8, 0x38A000
	0x03DDB2F0 LDR X8, [X8 + 0x360]
	0x03DDB2F4 MOV X22, X0
	0x03DDB2F8 ADD X0, X23, 0x28
	0x03DDB2FC LDR X1, [X8]
	0x03DDB300 BL 0x266DB18
	0x03DDB304 CBZ X22, 0x3DDDAF4
	0x03DDB308 ADRP X10, 0x342000
	0x03DDB30C LDR X8, [X22]
	0x03DDB310 LDR W23, [X0 + 0xC8]
	0x03DDB314 LDR X10, [X10 + 0xED0]
	0x03DDB318 LDRH W9, [X8 + 0x12E]
	0x03DDB31C LDR X1, [X10]
	0x03DDB320 CBZ X9, 0x3DDB344
	0x03DDB324 LDR X10, [X8 + 0xB0]
	0x03DDB328 ADD X10, X10, 0x8
	0x03DDB32C LDUR X11, [X10 - 0x8]
	0x03DDB330 CMP X11, X1
	0x03DDB334 B.EQ 0x3DDBA2C
	0x03DDB338 SUBS X9, X9, 0x1
	0x03DDB33C ADD X10, X10, 0x10
	0x03DDB340 B.NE 0x3DDB32C
	0x03DDB344 MOVZ W2, 0x4
	0x03DDB348 MOV X0, X22
	0x03DDB34C BL 0x1C5C788
	0x03DDB350 B 0x3DDBA3C
	0x03DDB354 LDR V0, [X24 + 0x8]
	0x03DDB358 MOVZ W8, 0x7F800000
	0x03DDB35C FMOV S1, W8
	0x03DDB360 MOVZ W9, 0x80000000
	0x03DDB364 FCVTZS W8, S0
	0x03DDB368 FCMP S0, S1
	0x03DDB36C CSEL W24, W9, W8, EQ
	0x03DDB370 CBZ X22, 0x3DDDAF4
	0x03DDB374 MOV X0, X22
	0x03DDB378 MOV X1, X31
	0x03DDB37C BL 0x3DE89D4
	0x03DDB380 ADRP X8, 0x38A000
	0x03DDB384 LDR X8, [X8 + 0x370]
	0x03DDB388 MOV X22, X0
	0x03DDB38C ADD X0, X23, 0x10
	0x03DDB390 LDR X1, [X8]
	0x03DDB394 BL 0x266CDA0
	0x03DDB398 CBZ X22, 0x3DDDAF4
	0x03DDB39C ADRP X10, 0x342000
	0x03DDB3A0 LDR X8, [X22]
	0x03DDB3A4 LDR W23, [X0 + 0x18]
	0x03DDB3A8 LDR X10, [X10 + 0xED0]
	0x03DDB3AC LDRH W9, [X8 + 0x12E]
	0x03DDB3B0 LDR X1, [X10]
	0x03DDB3B4 CBZ X9, 0x3DDB3D8
	0x03DDB3B8 LDR X10, [X8 + 0xB0]
	0x03DDB3BC ADD X10, X10, 0x8
	0x03DDB3C0 LDUR X11, [X10 - 0x8]
	0x03DDB3C4 CMP X11, X1
	0x03DDB3C8 B.EQ 0x3DDBA50
	0x03DDB3CC SUBS X9, X9, 0x1
	0x03DDB3D0 ADD X10, X10, 0x10
	0x03DDB3D4 B.NE 0x3DDB3C0
	0x03DDB3D8 MOVZ W2, 0x4
	0x03DDB3DC MOV X0, X22
	0x03DDB3E0 BL 0x1C5C788
	0x03DDB3E4 B 0x3DDBA60
	0x03DDB3E8 LDP S8, S9, [X24 + 0x8]
	0x03DDB3EC LDP S10, S11, [X24 + 0x10]
	0x03DDB3F0 CBZ X22, 0x3DDDAF4
	0x03DDB3F4 MOV X0, X22
	0x03DDB3F8 MOV X1, X31
	0x03DDB3FC BL 0x3DE89D4
	0x03DDB400 ADRP X8, 0x38A000
	0x03DDB404 LDR X8, [X8 + 0x370]
	0x03DDB408 MOV X24, X0
	0x03DDB40C ADD X0, X23, 0x10
	0x03DDB410 LDR X1, [X8]
	0x03DDB414 BL 0x266CDA0
	0x03DDB418 CBZ X24, 0x3DDDAF4
	0x03DDB41C ADRP X10, 0x342000
	0x03DDB420 LDP S13, S12, [X0 + 0x24]
	0x03DDB424 LDR X8, [X24]
	0x03DDB428 LDP S15, S14, [X0 + 0x1C]
	0x03DDB42C LDR X10, [X10 + 0xED0]
	0x03DDB430 LDRH W9, [X8 + 0x12E]
	0x03DDB434 LDR X1, [X10]
	0x03DDB438 CBZ X9, 0x3DDB45C
	0x03DDB43C LDR X10, [X8 + 0xB0]
	0x03DDB440 ADD X10, X10, 0x8
	0x03DDB444 LDUR X11, [X10 - 0x8]
	0x03DDB448 CMP X11, X1
	0x03DDB44C B.EQ 0x3DDBA70
	0x03DDB450 SUBS X9, X9, 0x1
	0x03DDB454 ADD X10, X10, 0x10
	0x03DDB458 B.NE 0x3DDB444
	0x03DDB45C MOVZ W2, 0x3
	0x03DDB460 MOV X0, X24
	0x03DDB464 BL 0x1C5C788
	0x03DDB468 B 0x3DDBA80
	0x03DDB46C LDR V0, [X24 + 0x8]
	0x03DDB470 MOVZ W8, 0x7F800000
	0x03DDB474 FMOV S1, W8
	0x03DDB478 MOVZ W9, 0x80000000
	0x03DDB47C FCVTZS W8, S0
	0x03DDB480 FCMP S0, S1
	0x03DDB484 CSEL W24, W9, W8, EQ
	0x03DDB488 CBZ X22, 0x3DDDAF4
	0x03DDB48C MOV X0, X22
	0x03DDB490 MOV X1, X31
	0x03DDB494 BL 0x3DE89D4
	0x03DDB498 ADRP X8, 0x38A000
	0x03DDB49C LDR X8, [X8 + 0x370]
	0x03DDB4A0 MOV X22, X0
	0x03DDB4A4 ADD X0, X23, 0x10
	0x03DDB4A8 LDR X1, [X8]
	0x03DDB4AC BL 0x266CDA0
	0x03DDB4B0 CBZ X22, 0x3DDDAF4
	0x03DDB4B4 ADRP X10, 0x342000
	0x03DDB4B8 LDR X8, [X22]
	0x03DDB4BC LDR W23, [X0 + 0x2C]
	0x03DDB4C0 LDR X10, [X10 + 0xED0]
	0x03DDB4C4 LDRH W9, [X8 + 0x12E]
	0x03DDB4C8 LDR X1, [X10]
	0x03DDB4CC CBZ X9, 0x3DDB4F0
	0x03DDB4D0 LDR X10, [X8 + 0xB0]
	0x03DDB4D4 ADD X10, X10, 0x8
	0x03DDB4D8 LDUR X11, [X10 - 0x8]
	0x03DDB4DC CMP X11, X1
	0x03DDB4E0 B.EQ 0x3DDBA94
	0x03DDB4E4 SUBS X9, X9, 0x1
	0x03DDB4E8 ADD X10, X10, 0x10
	0x03DDB4EC B.NE 0x3DDB4D8
	0x03DDB4F0 MOVZ W2, 0x4
	0x03DDB4F4 MOV X0, X22
	0x03DDB4F8 BL 0x1C5C788
	0x03DDB4FC B 0x3DDBAA4
	0x03DDB500 LDR V0, [X24 + 0x8]
	0x03DDB504 MOVZ W8, 0x7F800000
	0x03DDB508 FMOV S1, W8
	0x03DDB50C MOVZ W9, 0x80000000
	0x03DDB510 FCVTZS W8, S0
	0x03DDB514 FCMP S0, S1
	0x03DDB518 CSEL W24, W9, W8, EQ
	0x03DDB51C CBZ X22, 0x3DDDAF4
	0x03DDB520 MOV X0, X22
	0x03DDB524 MOV X1, X31
	0x03DDB528 BL 0x3DE89D4
	0x03DDB52C ADRP X8, 0x38A000
	0x03DDB530 LDR X8, [X8 + 0x370]
	0x03DDB534 MOV X22, X0
	0x03DDB538 ADD X0, X23, 0x10
	0x03DDB53C LDR X1, [X8]
	0x03DDB540 BL 0x266CDA0
	0x03DDB544 CBZ X22, 0x3DDDAF4
	0x03DDB548 ADRP X10, 0x342000
	0x03DDB54C LDR X8, [X22]
	0x03DDB550 LDR W23, [X0 + 0x30]
	0x03DDB554 LDR X10, [X10 + 0xED0]
	0x03DDB558 LDRH W9, [X8 + 0x12E]
	0x03DDB55C LDR X1, [X10]
	0x03DDB560 CBZ X9, 0x3DDB584
	0x03DDB564 LDR X10, [X8 + 0xB0]
	0x03DDB568 ADD X10, X10, 0x8
	0x03DDB56C LDUR X11, [X10 - 0x8]
	0x03DDB570 CMP X11, X1
	0x03DDB574 B.EQ 0x3DDBAB8
	0x03DDB578 SUBS X9, X9, 0x1
	0x03DDB57C ADD X10, X10, 0x10
	0x03DDB580 B.NE 0x3DDB56C
	0x03DDB584 MOVZ W2, 0x1
	0x03DDB588 MOV X0, X22
	0x03DDB58C BL 0x1C5C788
	0x03DDB590 B 0x3DDBAC8
	0x03DDB594 LDR V0, [X24 + 0x8]
	0x03DDB598 MOVZ W8, 0x7F800000
	0x03DDB59C FMOV S1, W8
	0x03DDB5A0 MOVZ W9, 0x80000000
	0x03DDB5A4 FCVTZS W8, S0
	0x03DDB5A8 FCMP S0, S1
	0x03DDB5AC CSEL W24, W9, W8, EQ
	0x03DDB5B0 CBZ X22, 0x3DDDAF4
	0x03DDB5B4 MOV X0, X22
	0x03DDB5B8 MOV X1, X31
	0x03DDB5BC BL 0x3DE89D4
	0x03DDB5C0 ADRP X8, 0x38A000
	0x03DDB5C4 LDR X8, [X8 + 0x370]
	0x03DDB5C8 MOV X22, X0
	0x03DDB5CC ADD X0, X23, 0x10
	0x03DDB5D0 LDR X1, [X8]
	0x03DDB5D4 BL 0x266CDA0
	0x03DDB5D8 CBZ X22, 0x3DDDAF4
	0x03DDB5DC ADRP X10, 0x342000
	0x03DDB5E0 LDR X8, [X22]
	0x03DDB5E4 LDR W23, [X0 + 0x34]
	0x03DDB5E8 LDR X10, [X10 + 0xED0]
	0x03DDB5EC LDRH W9, [X8 + 0x12E]
	0x03DDB5F0 LDR X1, [X10]
	0x03DDB5F4 CBZ X9, 0x3DDB618
	0x03DDB5F8 LDR X10, [X8 + 0xB0]
	0x03DDB5FC ADD X10, X10, 0x8
	0x03DDB600 LDUR X11, [X10 - 0x8]
	0x03DDB604 CMP X11, X1
	0x03DDB608 B.EQ 0x3DDBADC
	0x03DDB60C SUBS X9, X9, 0x1
	0x03DDB610 ADD X10, X10, 0x10
	0x03DDB614 B.NE 0x3DDB600
	0x03DDB618 MOVZ W2, 0x1
	0x03DDB61C MOV X0, X22
	0x03DDB620 BL 0x1C5C788
	0x03DDB624 B 0x3DDBAEC
	0x03DDB628 LDR V0, [X24 + 0x8]
	0x03DDB62C MOVZ W8, 0x7F800000
	0x03DDB630 FMOV S1, W8
	0x03DDB634 MOVZ W9, 0x80000000
	0x03DDB638 FCVTZS W8, S0
	0x03DDB63C FCMP S0, S1
	0x03DDB640 CSEL W24, W9, W8, EQ
	0x03DDB644 CBZ X22, 0x3DDDAF4
	0x03DDB648 MOV X0, X22
	0x03DDB64C MOV X1, X31
	0x03DDB650 BL 0x3DE89D4
	0x03DDB654 ADRP X8, 0x38A000
	0x03DDB658 LDR X8, [X8 + 0x370]
	0x03DDB65C MOV X22, X0
	0x03DDB660 ADD X0, X23, 0x10
	0x03DDB664 LDR X1, [X8]
	0x03DDB668 BL 0x266CDA0
	0x03DDB66C CBZ X22, 0x3DDDAF4
	0x03DDB670 ADRP X10, 0x342000
	0x03DDB674 LDR X8, [X22]
	0x03DDB678 LDR W23, [X0 + 0x38]
	0x03DDB67C LDR X10, [X10 + 0xED0]
	0x03DDB680 LDRH W9, [X8 + 0x12E]
	0x03DDB684 LDR X1, [X10]
	0x03DDB688 CBZ X9, 0x3DDB6AC
	0x03DDB68C LDR X10, [X8 + 0xB0]
	0x03DDB690 ADD X10, X10, 0x8
	0x03DDB694 LDUR X11, [X10 - 0x8]
	0x03DDB698 CMP X11, X1
	0x03DDB69C B.EQ 0x3DDBB00
	0x03DDB6A0 SUBS X9, X9, 0x1
	0x03DDB6A4 ADD X10, X10, 0x10
	0x03DDB6A8 B.NE 0x3DDB694
	0x03DDB6AC MOVZ W2, 0x1
	0x03DDB6B0 MOV X0, X22
	0x03DDB6B4 BL 0x1C5C788
	0x03DDB6B8 B 0x3DDBB10
	0x03DDB6BC LDR V8, [X24 + 0x8]
	0x03DDB6C0 CBZ X22, 0x3DDDAF4
	0x03DDB6C4 MOV X0, X22
	0x03DDB6C8 MOV X1, X31
	0x03DDB6CC BL 0x3DE89D4
	0x03DDB6D0 ADRP X8, 0x38A000
	0x03DDB6D4 LDR X8, [X8 + 0x370]
	0x03DDB6D8 MOV X22, X0
	0x03DDB6DC ADD X0, X23, 0x10
	0x03DDB6E0 LDR X1, [X8]
	0x03DDB6E4 BL 0x266CDA0
	0x03DDB6E8 CBZ X22, 0x3DDDAF4
	0x03DDB6EC ADRP X10, 0x342000
	0x03DDB6F0 LDR X8, [X22]
	0x03DDB6F4 LDR V9, [X0 + 0x3C]
	0x03DDB6F8 LDR X10, [X10 + 0xED0]
	0x03DDB6FC LDRH W9, [X8 + 0x12E]
	0x03DDB700 LDR X1, [X10]
	0x03DDB704 CBZ X9, 0x3DDB728
	0x03DDB708 LDR X10, [X8 + 0xB0]
	0x03DDB70C ADD X10, X10, 0x8
	0x03DDB710 LDUR X11, [X10 - 0x8]
	0x03DDB714 CMP X11, X1
	0x03DDB718 B.EQ 0x3DDBB20
	0x03DDB71C SUBS X9, X9, 0x1
	0x03DDB720 ADD X10, X10, 0x10
	0x03DDB724 B.NE 0x3DDB710
	0x03DDB728 MOV X0, X22
	0x03DDB72C MOV W2, W31
	0x03DDB730 BL 0x1C5C788
	0x03DDB734 B 0x3DDBB2C
	0x03DDB738 LDR V0, [X24 + 0x8]
	0x03DDB73C MOVZ W8, 0x7F800000
	0x03DDB740 FMOV S1, W8
	0x03DDB744 MOVZ W9, 0x80000000
	0x03DDB748 FCVTZS W8, S0
	0x03DDB74C FCMP S0, S1
	0x03DDB750 CSEL W24, W9, W8, EQ
	0x03DDB754 CBZ X22, 0x3DDDAF4
	0x03DDB758 MOV X0, X22
	0x03DDB75C MOV X1, X31
	0x03DDB760 BL 0x3DE89D4
	0x03DDB764 ADRP X8, 0x38A000
	0x03DDB768 LDR X8, [X8 + 0x370]
	0x03DDB76C MOV X22, X0
	0x03DDB770 ADD X0, X23, 0x10
	0x03DDB774 LDR X1, [X8]
	0x03DDB778 BL 0x266CDA0
	0x03DDB77C CBZ X22, 0x3DDDAF4
	0x03DDB780 ADRP X10, 0x342000
	0x03DDB784 LDR X8, [X22]
	0x03DDB788 LDR W23, [X0 + 0x40]
	0x03DDB78C LDR X10, [X10 + 0xED0]
	0x03DDB790 LDRH W9, [X8 + 0x12E]
	0x03DDB794 LDR X1, [X10]
	0x03DDB798 CBZ X9, 0x3DDB7BC
	0x03DDB79C LDR X10, [X8 + 0xB0]
	0x03DDB7A0 ADD X10, X10, 0x8
	0x03DDB7A4 LDUR X11, [X10 - 0x8]
	0x03DDB7A8 CMP X11, X1
	0x03DDB7AC B.EQ 0x3DDBB40
	0x03DDB7B0 SUBS X9, X9, 0x1
	0x03DDB7B4 ADD X10, X10, 0x10
	0x03DDB7B8 B.NE 0x3DDB7A4
	0x03DDB7BC MOVZ W2, 0x1
	0x03DDB7C0 MOV X0, X22
	0x03DDB7C4 BL 0x1C5C788
	0x03DDB7C8 B 0x3DDBB50
	0x03DDB7CC LDR V0, [X24 + 0x8]
	0x03DDB7D0 MOVZ W8, 0x7F800000
	0x03DDB7D4 FMOV S1, W8
	0x03DDB7D8 MOVZ W9, 0x80000000
	0x03DDB7DC FCVTZS W8, S0
	0x03DDB7E0 FCMP S0, S1
	0x03DDB7E4 CSEL W24, W9, W8, EQ
	0x03DDB7E8 CBZ X22, 0x3DDDAF4
	0x03DDB7EC MOV X0, X22
	0x03DDB7F0 MOV X1, X31
	0x03DDB7F4 BL 0x3DE89D4
	0x03DDB7F8 ADRP X8, 0x38A000
	0x03DDB7FC LDR X8, [X8 + 0x370]
	0x03DDB800 MOV X22, X0
	0x03DDB804 ADD X0, X23, 0x10
	0x03DDB808 LDR X1, [X8]
	0x03DDB80C BL 0x266CDA0
	0x03DDB810 CBZ X22, 0x3DDDAF4
	0x03DDB814 ADRP X10, 0x342000
	0x03DDB818 LDR X8, [X22]
	0x03DDB81C LDR W23, [X0 + 0x44]
	0x03DDB820 LDR X10, [X10 + 0xED0]
	0x03DDB824 LDRH W9, [X8 + 0x12E]
	0x03DDB828 LDR X1, [X10]
	0x03DDB82C CBZ X9, 0x3DDB850
	0x03DDB830 LDR X10, [X8 + 0xB0]
	0x03DDB834 ADD X10, X10, 0x8
	0x03DDB838 LDUR X11, [X10 - 0x8]
	0x03DDB83C CMP X11, X1
	0x03DDB840 B.EQ 0x3DDBB60
	0x03DDB844 SUBS X9, X9, 0x1
	0x03DDB848 ADD X10, X10, 0x10
	0x03DDB84C B.NE 0x3DDB838
	0x03DDB850 MOVZ W2, 0x4
	0x03DDB854 MOV X0, X22
	0x03DDB858 BL 0x1C5C788
	0x03DDB85C B 0x3DDBB70
	0x03DDB860 LDR W9, [X10]
	0x03DDB864 ADD W9, W9, 0x3
	0x03DDB868 ADD X8, X8, W9, 0x4, SXTW
	0x03DDB86C ADD X0, X8, 0x138
	0x03DDB870 LDP X8, X5, [X0]
	0x03DDB874 MOVZ W1, 0x70000
	0x03DDB878 B 0x3DDD420
	0x03DDB87C LDR W9, [X10]
	0x03DDB880 ADD W9, W9, 0xD
	0x03DDB884 ADD X8, X8, W9, 0x4, SXTW
	0x03DDB888 ADD X0, X8, 0x138
	0x03DDB88C LDP X8, X9, [X0]
	0x03DDB890 MOVZ W1, 0x2
	0x03DDB894 MOVK W1, 0x70000
	0x03DDB898 B 0x3DDD4EC
	0x03DDB89C LDR W9, [X10]
	0x03DDB8A0 ADD W9, W9, 0xD
	0x03DDB8A4 ADD X8, X8, W9, 0x4, SXTW
	0x03DDB8A8 ADD X0, X8, 0x138
	0x03DDB8AC LDP X8, X9, [X0]
	0x03DDB8B0 MOVZ W10, 0x2
	0x03DDB8B4 MOVK W10, 0x70000
	0x03DDB8B8 ORR W1, W10, 0x1
	0x03DDB8BC B 0x3DDD4EC
	0x03DDB8C0 LDR W9, [X10]
	0x03DDB8C4 ADD W9, W9, 0xE
	0x03DDB8C8 ADD X8, X8, W9, 0x4, SXTW
	0x03DDB8CC ADD X0, X8, 0x138
	0x03DDB8D0 LDP X8, X7, [X0]
	0x03DDB8D4 MOVZ W9, 0x2
	0x03DDB8D8 MOVK W9, 0x70000
	0x03DDB8DC ADD W1, W9, 0x2
	0x03DDB8E0 B 0x3DDDAA8
	0x03DDB8E4 LDR W9, [X10]
	0x03DDB8E8 ADD W9, W9, 0x3
	0x03DDB8EC ADD X8, X8, W9, 0x4, SXTW
	0x03DDB8F0 ADD X0, X8, 0x138
	0x03DDB8F4 LDP X8, X5, [X0]
	0x03DDB8F8 MOVZ W9, 0x2
	0x03DDB8FC MOVK W9, 0x70000
	0x03DDB900 ORR W1, W9, 0x4
	0x03DDB904 B 0x3DDD420
	0x03DDB908 LDR W9, [X10]
	0x03DDB90C ADD W9, W9, 0x2
	0x03DDB910 ADD X8, X8, W9, 0x4, SXTW
	0x03DDB914 ADD X0, X8, 0x138
	0x03DDB918 LDP X8, X7, [X0]
	0x03DDB91C MOVZ W10, 0x2
	0x03DDB920 MOVZ W9, 0x5
	0x03DDB924 MOVK W10, 0x70000
	0x03DDB928 ORR W1, W10, W9, 0x0
	0x03DDB92C B 0x3DDDAA8
	0x03DDB930 LDR W9, [X10]
	0x03DDB934 ADD W9, W9, 0x2
	0x03DDB938 ADD X8, X8, W9, 0x4, SXTW
	0x03DDB93C ADD X0, X8, 0x138
	0x03DDB940 LDP X8, X7, [X0]
	0x03DDB944 MOVZ W9, 0x2
	0x03DDB948 MOVK W9, 0x70000
	0x03DDB94C ADD W1, W9, 0x6
	0x03DDB950 B 0x3DDDAA8
	0x03DDB954 LDR W9, [X10]
	0x03DDB958 ADD W9, W9, 0x3
	0x03DDB95C ADD X8, X8, W9, 0x4, SXTW
	0x03DDB960 ADD X0, X8, 0x138
	0x03DDB964 LDP X8, X5, [X0]
	0x03DDB968 MOVZ W9, 0x2
	0x03DDB96C MOVK W9, 0x70000
	0x03DDB970 ADD W1, W9, 0x7
	0x03DDB974 B 0x3DDD420
	0x03DDB978 LDR W9, [X10]
	0x03DDB97C ADD W9, W9, 0x3
	0x03DDB980 ADD X8, X8, W9, 0x4, SXTW
	0x03DDB984 ADD X0, X8, 0x138
	0x03DDB988 LDP X8, X5, [X0]
	0x03DDB98C MOVZ W9, 0x2
	0x03DDB990 MOVK W9, 0x70000
	0x03DDB994 ORR W1, W9, 0x8
	0x03DDB998 B 0x3DDD420
	0x03DDB99C LDR W9, [X10]
	0x03DDB9A0 ADD W9, W9, 0x3
	0x03DDB9A4 ADD X8, X8, W9, 0x4, SXTW
	0x03DDB9A8 ADD X0, X8, 0x138
	0x03DDB9AC LDP X8, X5, [X0]
	0x03DDB9B0 MOVZ W10, 0x2
	0x03DDB9B4 MOVZ W9, 0x9
	0x03DDB9B8 MOVK W10, 0x70000
	0x03DDB9BC ORR W1, W10, W9, 0x0
	0x03DDB9C0 B 0x3DDD420
	0x03DDB9C4 LDR W9, [X10]
	0x03DDB9C8 ADD W9, W9, 0x2
	0x03DDB9CC ADD X8, X8, W9, 0x4, SXTW
	0x03DDB9D0 ADD X0, X8, 0x138
	0x03DDB9D4 LDP X8, X7, [X0]
	0x03DDB9D8 MOVZ W9, 0x2
	0x03DDB9DC MOVK W9, 0x70000
	0x03DDB9E0 ADD W1, W9, 0xA
	0x03DDB9E4 B 0x3DDDAA8
	0x03DDB9E8 LDR W9, [X10]
	0x03DDB9EC ADD W9, W9, 0x2
	0x03DDB9F0 ADD X8, X8, W9, 0x4, SXTW
	0x03DDB9F4 ADD X0, X8, 0x138
	0x03DDB9F8 LDP X8, X7, [X0]
	0x03DDB9FC MOVZ W9, 0x2
	0x03DDBA00 MOVK W9, 0x70000
	0x03DDBA04 ADD W1, W9, 0xB
	0x03DDBA08 B 0x3DDDAA8
	0x03DDBA0C LDRSW X9, [X10]
	0x03DDBA10 ADD X8, X8, X9, 0x4, LSL
	0x03DDBA14 ADD X0, X8, 0x138
	0x03DDBA18 LDP X8, X5, [X0]
	0x03DDBA1C MOVZ W9, 0x2
	0x03DDBA20 MOVK W9, 0x70000
	0x03DDBA24 ORR W1, W9, 0xC
	0x03DDBA28 B 0x3DDD7A0
	0x03DDBA2C LDR W9, [X10]
	0x03DDBA30 ADD W9, W9, 0x4
	0x03DDBA34 ADD X8, X8, W9, 0x4, SXTW
	0x03DDBA38 ADD X0, X8, 0x138
	0x03DDBA3C LDP X8, X7, [X0]
	0x03DDBA40 MOVZ W10, 0x2
	0x03DDBA44 MOVZ W9, 0xD
	0x03DDBA48 MOVK W10, 0x70000
	0x03DDBA4C B 0x3DDD604
	0x03DDBA50 LDR W9, [X10]
	0x03DDBA54 ADD W9, W9, 0x4
	0x03DDBA58 ADD X8, X8, W9, 0x4, SXTW
	0x03DDBA5C ADD X0, X8, 0x138
	0x03DDBA60 LDP X8, X7, [X0]
	0x03DDBA64 MOVZ W1, 0x1
	0x03DDBA68 MOVK W1, 0x30000
	0x03DDBA6C B 0x3DDD998
	0x03DDBA70 LDR W9, [X10]
	0x03DDBA74 ADD W9, W9, 0x3
	0x03DDBA78 ADD X8, X8, W9, 0x4, SXTW
	0x03DDBA7C ADD X0, X8, 0x138
	0x03DDBA80 LDP X8, X5, [X0]
	0x03DDBA84 MOVZ W9, 0x1
	0x03DDBA88 MOVK W9, 0x30000
	0x03DDBA8C ADD W1, W9, 0x1
	0x03DDBA90 B 0x3DDD420
	0x03DDBA94 LDR W9, [X10]
	0x03DDBA98 ADD W9, W9, 0x4
	0x03DDBA9C ADD X8, X8, W9, 0x4, SXTW
	0x03DDBAA0 ADD X0, X8, 0x138
	0x03DDBAA4 LDP X8, X7, [X0]
	0x03DDBAA8 MOVZ W9, 0x1
	0x03DDBAAC MOVK W9, 0x30000
	0x03DDBAB0 ORR W1, W9, 0x2
	0x03DDBAB4 B 0x3DDD998
	0x03DDBAB8 LDR W9, [X10]
	0x03DDBABC ADD W9, W9, 0x1
	0x03DDBAC0 ADD X8, X8, W9, 0x4, SXTW
	0x03DDBAC4 ADD X0, X8, 0x138
	0x03DDBAC8 LDP X8, X7, [X0]
	0x03DDBACC MOVZ W9, 0x1
	0x03DDBAD0 MOVK W9, 0x30000
	0x03DDBAD4 ADD W1, W9, 0x3
	0x03DDBAD8 B 0x3DDD998
	0x03DDBADC LDR W9, [X10]
	0x03DDBAE0 ADD W9, W9, 0x1
	0x03DDBAE4 ADD X8, X8, W9, 0x4, SXTW
	0x03DDBAE8 ADD X0, X8, 0x138
	0x03DDBAEC LDP X8, X7, [X0]
	0x03DDBAF0 MOVZ W9, 0x1
	0x03DDBAF4 MOVK W9, 0x30000
	0x03DDBAF8 ORR W1, W9, 0x4
	0x03DDBAFC B 0x3DDD998
	0x03DDBB00 LDR W9, [X10]
	0x03DDBB04 ADD W9, W9, 0x1
	0x03DDBB08 ADD X8, X8, W9, 0x4, SXTW
	0x03DDBB0C ADD X0, X8, 0x138
	0x03DDBB10 LDP X8, X7, [X0]
	0x03DDBB14 MOVZ W9, 0x1
	0x03DDBB18 MOVK W9, 0x30000
	0x03DDBB1C B 0x3DDD530
	0x03DDBB20 LDRSW X9, [X10]
	0x03DDBB24 ADD X8, X8, X9, 0x4, LSL
	0x03DDBB28 ADD X0, X8, 0x138
	0x03DDBB2C LDP X8, X5, [X0]
	0x03DDBB30 MOVZ W9, 0x1
	0x03DDBB34 MOVK W9, 0x30000
	0x03DDBB38 ORR W1, W9, 0x6
	0x03DDBB3C B 0x3DDD7A0
	0x03DDBB40 LDR W9, [X10]
	0x03DDBB44 ADD W9, W9, 0x1
	0x03DDBB48 ADD X8, X8, W9, 0x4, SXTW
	0x03DDBB4C ADD X0, X8, 0x138
	0x03DDBB50 LDP X8, X7, [X0]
	0x03DDBB54 MOVZ W9, 0x1
	0x03DDBB58 MOVK W9, 0x30000
	0x03DDBB5C B 0x3DDD570
	0x03DDBB60 LDR W9, [X10]
	0x03DDBB64 ADD W9, W9, 0x4
	0x03DDBB68 ADD X8, X8, W9, 0x4, SXTW
	0x03DDBB6C ADD X0, X8, 0x138
	0x03DDBB70 LDP X8, X7, [X0]
	0x03DDBB74 MOVZ W9, 0x1
	0x03DDBB78 MOVK W9, 0x30000
	0x03DDBB7C ORR W1, W9, 0x8
	0x03DDBB80 B 0x3DDD998
	0x03DDBB84 LDP S8, S9, [X24 + 0x8]
	0x03DDBB88 LDP S10, S11, [X24 + 0x10]
	0x03DDBB8C CBZ X22, 0x3DDDAF4
	0x03DDBB90 MOV X0, X22
	0x03DDBB94 MOV X1, X31
	0x03DDBB98 BL 0x3DE89D4
	0x03DDBB9C ADRP X8, 0x38A000
	0x03DDBBA0 LDR X8, [X8 + 0x368]
	0x03DDBBA4 MOV X24, X0
	0x03DDBBA8 MOV X0, X23
	0x03DDBBAC LDR X1, [X8]
	0x03DDBBB0 BL 0x266C4A0
	0x03DDBBB4 CBZ X24, 0x3DDDAF4
	0x03DDBBB8 ADRP X10, 0x342000
	0x03DDBBBC LDP S13, S12, [X0 + 0x8]
	0x03DDBBC0 LDR X8, [X24]
	0x03DDBBC4 LDP S15, S14, [X0]
	0x03DDBBC8 LDR X10, [X10 + 0xED0]
	0x03DDBBCC LDRH W9, [X8 + 0x12E]
	0x03DDBBD0 LDR X1, [X10]
	0x03DDBBD4 CBZ X9, 0x3DDBBF8
	0x03DDBBD8 LDR X10, [X8 + 0xB0]
	0x03DDBBDC ADD X10, X10, 0x8
	0x03DDBBE0 LDUR X11, [X10 - 0x8]
	0x03DDBBE4 CMP X11, X1
	0x03DDBBE8 B.EQ 0x3DDD408
	0x03DDBBEC SUBS X9, X9, 0x1
	0x03DDBBF0 ADD X10, X10, 0x10
	0x03DDBBF4 B.NE 0x3DDBBE0
	0x03DDBBF8 MOVZ W2, 0x3
	0x03DDBBFC MOV X0, X24
	0x03DDBC00 BL 0x1C5C788
	0x03DDBC04 B 0x3DDD418
	0x03DDBC08 LDR X24, [X24 + 0x8]
	0x03DDBC0C CBZ X22, 0x3DDDAF4
	0x03DDBC10 MOV X0, X22
	0x03DDBC14 MOV X1, X31
	0x03DDBC18 BL 0x3DE89D4
	0x03DDBC1C ADRP X8, 0x38A000
	0x03DDBC20 LDR X8, [X8 + 0x368]
	0x03DDBC24 MOV X22, X0
	0x03DDBC28 MOV X0, X23
	0x03DDBC2C LDR X1, [X8]
	0x03DDBC30 BL 0x266C4A0
	0x03DDBC34 CBZ X22, 0x3DDDAF4
	0x03DDBC38 ADRP X10, 0x342000
	0x03DDBC3C LDR X8, [X22]
	0x03DDBC40 LDR X23, [X0 + 0x10]
	0x03DDBC44 LDR X10, [X10 + 0xED0]
	0x03DDBC48 LDRH W9, [X8 + 0x12E]
	0x03DDBC4C LDR X1, [X10]
	0x03DDBC50 CBZ X9, 0x3DDBC74
	0x03DDBC54 LDR X10, [X8 + 0xB0]
	0x03DDBC58 ADD X10, X10, 0x8
	0x03DDBC5C LDUR X11, [X10 - 0x8]
	0x03DDBC60 CMP X11, X1
	0x03DDBC64 B.EQ 0x3DDD494
	0x03DDBC68 SUBS X9, X9, 0x1
	0x03DDBC6C ADD X10, X10, 0x10
	0x03DDBC70 B.NE 0x3DDBC5C
	0x03DDBC74 MOVZ W2, 0x2
	0x03DDBC78 MOV X0, X22
	0x03DDBC7C BL 0x1C5C788
	0x03DDBC80 B 0x3DDD4A4
	0x03DDBC84 LDR X24, [X24 + 0x8]
	0x03DDBC88 CBZ X22, 0x3DDDAF4
	0x03DDBC8C MOV X0, X22
	0x03DDBC90 MOV X1, X31
	0x03DDBC94 BL 0x3DE89D4
	0x03DDBC98 ADRP X8, 0x38A000
	0x03DDBC9C LDR X8, [X8 + 0x368]
	0x03DDBCA0 MOV X22, X0
	0x03DDBCA4 MOV X0, X23
	0x03DDBCA8 LDR X1, [X8]
	0x03DDBCAC BL 0x266C4A0
	0x03DDBCB0 CBZ X22, 0x3DDDAF4
	0x03DDBCB4 ADRP X10, 0x342000
	0x03DDBCB8 LDR X8, [X22]
	0x03DDBCBC LDR X23, [X0 + 0x18]
	0x03DDBCC0 LDR X10, [X10 + 0xED0]
	0x03DDBCC4 LDRH W9, [X8 + 0x12E]
	0x03DDBCC8 LDR X1, [X10]
	0x03DDBCCC CBZ X9, 0x3DDBCF0
	0x03DDBCD0 LDR X10, [X8 + 0xB0]
	0x03DDBCD4 ADD X10, X10, 0x8
	0x03DDBCD8 LDUR X11, [X10 - 0x8]
	0x03DDBCDC CMP X11, X1
	0x03DDBCE0 B.EQ 0x3DDD4B0
	0x03DDBCE4 SUBS X9, X9, 0x1
	0x03DDBCE8 ADD X10, X10, 0x10
	0x03DDBCEC B.NE 0x3DDBCD8
	0x03DDBCF0 MOVZ W2, 0x2
	0x03DDBCF4 MOV X0, X22
	0x03DDBCF8 BL 0x1C5C788
	0x03DDBCFC B 0x3DDD4C0
	0x03DDBD00 ADD X25, X24, 0x8
	0x03DDBD04 MOV X0, X25
	0x03DDBD08 MOV X1, X31
	0x03DDBD0C BL 0x32C05E4
	0x03DDBD10 MOV X24, X31
	0x03DDBD14 TBZ X0, 0x0, 0x3DDDA14
	0x03DDBD18 MOV X0, X25
	0x03DDBD1C MOV X1, X31
	0x03DDBD20 BL 0x32C05F4
	0x03DDBD24 CBZ X0, 0x3DDDA10
	0x03DDBD28 ADRP X8, 0x386000
	0x03DDBD2C LDR X8, [X8 + 0xFE8]
	0x03DDBD30 LDR X9, [X0]
	0x03DDBD34 LDR X8, [X8]
	0x03DDBD38 CMP X9, X8
	0x03DDBD3C CSEL X24, X0, X31, EQ
	0x03DDBD40 B 0x3DDDA14
	0x03DDBD44 ADD X26, X24, 0x8
	0x03DDBD48 MOV X0, X26
	0x03DDBD4C MOV X1, X31
	0x03DDBD50 BL 0x32C05E4
	0x03DDBD54 MOV X24, X31
	0x03DDBD58 MOV X25, X31
	0x03DDBD5C TBZ X0, 0x0, 0x3DDBD7C
	0x03DDBD60 MOV X0, X26
	0x03DDBD64 MOV X1, X31
	0x03DDBD68 BL 0x32C05F4
	0x03DDBD6C MOV X1, X31
	0x03DDBD70 BL 0x3DE4A20
	0x03DDBD74 MOV X25, X0
	0x03DDBD78 MOV X24, X1
	0x03DDBD7C CBZ X22, 0x3DDDAF4
	0x03DDBD80 MOV X0, X22
	0x03DDBD84 MOV X1, X31
	0x03DDBD88 BL 0x3DE89D4
	0x03DDBD8C ADRP X8, 0x38A000
	0x03DDBD90 LDR X8, [X8 + 0x368]
	0x03DDBD94 MOV X22, X0
	0x03DDBD98 MOV X0, X23
	0x03DDBD9C LDR X1, [X8]
	0x03DDBDA0 BL 0x266C4A0
	0x03DDBDA4 CBZ X22, 0x3DDDAF4
	0x03DDBDA8 ADRP X10, 0x342000
	0x03DDBDAC LDR X8, [X22]
	0x03DDBDB0 LDP X26, X23, [X0 + 0x48]
	0x03DDBDB4 LDR X10, [X10 + 0xED0]
	0x03DDBDB8 LDRH W9, [X8 + 0x12E]
	0x03DDBDBC LDR X1, [X10]
	0x03DDBDC0 CBZ X9, 0x3DDBDE4
	0x03DDBDC4 LDR X10, [X8 + 0xB0]
	0x03DDBDC8 ADD X10, X10, 0x8
	0x03DDBDCC LDUR X11, [X10 - 0x8]
	0x03DDBDD0 CMP X11, X1
	0x03DDBDD4 B.EQ 0x3DDD4D0
	0x03DDBDD8 SUBS X9, X9, 0x1
	0x03DDBDDC ADD X10, X10, 0x10
	0x03DDBDE0 B.NE 0x3DDBDCC
	0x03DDBDE4 MOVZ W2, 0x6
	0x03DDBDE8 MOV X0, X22
	0x03DDBDEC BL 0x1C5C788
	0x03DDBDF0 B 0x3DDD4E0
	0x03DDBDF4 LDR V0, [X24 + 0x8]
	0x03DDBDF8 MOVZ W8, 0x7F800000
	0x03DDBDFC FMOV S1, W8
	0x03DDBE00 MOVZ W9, 0x80000000
	0x03DDBE04 FCVTZS W8, S0
	0x03DDBE08 FCMP S0, S1
	0x03DDBE0C CSEL W24, W9, W8, EQ
	0x03DDBE10 CBZ X22, 0x3DDDAF4
	0x03DDBE14 MOV X0, X22
	0x03DDBE18 MOV X1, X31
	0x03DDBE1C BL 0x3DE89D4
	0x03DDBE20 ADRP X8, 0x38A000
	0x03DDBE24 LDR X8, [X8 + 0x368]
	0x03DDBE28 MOV X22, X0
	0x03DDBE2C MOV X0, X23
	0x03DDBE30 LDR X1, [X8]
	0x03DDBE34 BL 0x266C4A0
	0x03DDBE38 CBZ X22, 0x3DDDAF4
	0x03DDBE3C ADRP X10, 0x342000
	0x03DDBE40 LDR X8, [X22]
	0x03DDBE44 LDR W23, [X0 + 0x58]
	0x03DDBE48 LDR X10, [X10 + 0xED0]
	0x03DDBE4C LDRH W9, [X8 + 0x12E]
	0x03DDBE50 LDR X1, [X10]
	0x03DDBE54 CBZ X9, 0x3DDBE78
	0x03DDBE58 LDR X10, [X8 + 0xB0]
	0x03DDBE5C ADD X10, X10, 0x8
	0x03DDBE60 LDUR X11, [X10 - 0x8]
	0x03DDBE64 CMP X11, X1
	0x03DDBE68 B.EQ 0x3DDD518
	0x03DDBE6C SUBS X9, X9, 0x1
	0x03DDBE70 ADD X10, X10, 0x10
	0x03DDBE74 B.NE 0x3DDBE60
	0x03DDBE78 MOVZ W2, 0x4
	0x03DDBE7C MOV X0, X22
	0x03DDBE80 BL 0x1C5C788
	0x03DDBE84 B 0x3DDD528
	0x03DDBE88 LDR X24, [X24 + 0x8]
	0x03DDBE8C CBZ X22, 0x3DDDAF4
	0x03DDBE90 MOV X0, X22
	0x03DDBE94 MOV X1, X31
	0x03DDBE98 BL 0x3DE89D4
	0x03DDBE9C ADRP X8, 0x38A000
	0x03DDBEA0 LDR X8, [X8 + 0x368]
	0x03DDBEA4 MOV X22, X0
	0x03DDBEA8 MOV X0, X23
	0x03DDBEAC LDR X1, [X8]
	0x03DDBEB0 BL 0x266C4A0
	0x03DDBEB4 CBZ X22, 0x3DDDAF4
	0x03DDBEB8 ADRP X10, 0x342000
	0x03DDBEBC LDR X8, [X22]
	0x03DDBEC0 LDUR X23, [X0 + 0x5C]
	0x03DDBEC4 LDR X10, [X10 + 0xED0]
	0x03DDBEC8 LDRH W9, [X8 + 0x12E]
	0x03DDBECC LDR X1, [X10]
	0x03DDBED0 CBZ X9, 0x3DDBEF4
	0x03DDBED4 LDR X10, [X8 + 0xB0]
	0x03DDBED8 ADD X10, X10, 0x8
	0x03DDBEDC LDUR X11, [X10 - 0x8]
	0x03DDBEE0 CMP X11, X1
	0x03DDBEE4 B.EQ 0x3DDD538
	0x03DDBEE8 SUBS X9, X9, 0x1
	0x03DDBEEC ADD X10, X10, 0x10
	0x03DDBEF0 B.NE 0x3DDBEDC
	0x03DDBEF4 MOVZ W2, 0x2
	0x03DDBEF8 MOV X0, X22
	0x03DDBEFC BL 0x1C5C788
	0x03DDBF00 B 0x3DDD548
	0x03DDBF04 LDR V0, [X24 + 0x8]
	0x03DDBF08 MOVZ W8, 0x7F800000
	0x03DDBF0C FMOV S1, W8
	0x03DDBF10 MOVZ W9, 0x80000000
	0x03DDBF14 FCVTZS W8, S0
	0x03DDBF18 FCMP S0, S1
	0x03DDBF1C CSEL W24, W9, W8, EQ
	0x03DDBF20 CBZ X22, 0x3DDDAF4
	0x03DDBF24 MOV X0, X22
	0x03DDBF28 MOV X1, X31
	0x03DDBF2C BL 0x3DE89D4
	0x03DDBF30 ADRP X8, 0x38A000
	0x03DDBF34 LDR X8, [X8 + 0x368]
	0x03DDBF38 MOV X22, X0
	0x03DDBF3C MOV X0, X23
	0x03DDBF40 LDR X1, [X8]
	0x03DDBF44 BL 0x266C4A0
	0x03DDBF48 CBZ X22, 0x3DDDAF4
	0x03DDBF4C ADRP X10, 0x342000
	0x03DDBF50 LDR X8, [X22]
	0x03DDBF54 LDR W23, [X0 + 0x64]
	0x03DDBF58 LDR X10, [X10 + 0xED0]
	0x03DDBF5C LDRH W9, [X8 + 0x12E]
	0x03DDBF60 LDR X1, [X10]
	0x03DDBF64 CBZ X9, 0x3DDBF88
	0x03DDBF68 LDR X10, [X8 + 0xB0]
	0x03DDBF6C ADD X10, X10, 0x8
	0x03DDBF70 LDUR X11, [X10 - 0x8]
	0x03DDBF74 CMP X11, X1
	0x03DDBF78 B.EQ 0x3DDD558
	0x03DDBF7C SUBS X9, X9, 0x1
	0x03DDBF80 ADD X10, X10, 0x10
	0x03DDBF84 B.NE 0x3DDBF70
	0x03DDBF88 MOVZ W2, 0x4
	0x03DDBF8C MOV X0, X22
	0x03DDBF90 BL 0x1C5C788
	0x03DDBF94 B 0x3DDD568
	0x03DDBF98 LDP S8, S9, [X24 + 0x8]
	0x03DDBF9C LDP S10, S11, [X24 + 0x10]
	0x03DDBFA0 CBZ X22, 0x3DDDAF4
	0x03DDBFA4 MOV X0, X22
	0x03DDBFA8 MOV X1, X31
	0x03DDBFAC BL 0x3DE89D4
	0x03DDBFB0 ADRP X8, 0x38A000
	0x03DDBFB4 LDR X8, [X8 + 0x368]
	0x03DDBFB8 MOV X22, X0
	0x03DDBFBC MOV X0, X23
	0x03DDBFC0 LDR X1, [X8]
	0x03DDBFC4 BL 0x266C4A0
	0x03DDBFC8 CBZ X22, 0x3DDDAF4
	0x03DDBFCC ADRP X10, 0x342000
	0x03DDBFD0 LDP S13, S12, [X0 + 0x70]
	0x03DDBFD4 LDR X8, [X22]
	0x03DDBFD8 LDP S15, S14, [X0 + 0x68]
	0x03DDBFDC LDR X10, [X10 + 0xED0]
	0x03DDBFE0 LDRH W9, [X8 + 0x12E]
	0x03DDBFE4 LDR X1, [X10]
	0x03DDBFE8 CBZ X9, 0x3DDC00C
	0x03DDBFEC LDR X10, [X8 + 0xB0]
	0x03DDBFF0 ADD X10, X10, 0x8
	0x03DDBFF4 LDUR X11, [X10 - 0x8]
	0x03DDBFF8 CMP X11, X1
	0x03DDBFFC B.EQ 0x3DDD578
	0x03DDC000 SUBS X9, X9, 0x1
	0x03DDC004 ADD X10, X10, 0x10
	0x03DDC008 B.NE 0x3DDBFF4
	0x03DDC00C MOVZ W2, 0x3
	0x03DDC010 MOV X0, X22
	0x03DDC014 BL 0x1C5C788
	0x03DDC018 B 0x3DDD588
	0x03DDC01C LDR V8, [X24 + 0x8]
	0x03DDC020 CBZ X22, 0x3DDDAF4
	0x03DDC024 MOV X0, X22
	0x03DDC028 MOV X1, X31
	0x03DDC02C BL 0x3DE89D4
	0x03DDC030 ADRP X8, 0x389000
	0x03DDC034 LDR X8, [X8 + 0x368]
	0x03DDC038 MOV X22, X0
	0x03DDC03C MOV X0, X23
	0x03DDC040 LDR X1, [X8]
	0x03DDC044 BL 0x266C4A0
	0x03DDC048 CBZ X22, 0x3DDDAF4
	0x03DDC04C ADRP X10, 0x341000
	0x03DDC050 LDR X8, [X22]
	0x03DDC054 LDR V9, [X0 + 0x78]
	0x03DDC058 LDR X10, [X10 + 0xED0]
	0x03DDC05C LDRH W9, [X8 + 0x12E]
	0x03DDC060 LDR X1, [X10]
	0x03DDC064 CBZ X9, 0x3DDC088
	0x03DDC068 LDR X10, [X8 + 0xB0]
	0x03DDC06C ADD X10, X10, 0x8
	0x03DDC070 LDUR X11, [X10 - 0x8]
	0x03DDC074 CMP X11, X1
	0x03DDC078 B.EQ 0x3DDD5CC
	0x03DDC07C SUBS X9, X9, 0x1
	0x03DDC080 ADD X10, X10, 0x10
	0x03DDC084 B.NE 0x3DDC070
	0x03DDC088 MOV X0, X22
	0x03DDC08C MOV W2, W31
	0x03DDC090 BL 0x1C5C788
	0x03DDC094 B 0x3DDD5D8
	0x03DDC098 LDR V0, [X24 + 0x8]
	0x03DDC09C MOVZ W8, 0x7F800000
	0x03DDC0A0 FMOV S1, W8
	0x03DDC0A4 MOVZ W9, 0x80000000
	0x03DDC0A8 FCVTZS W8, S0
	0x03DDC0AC FCMP S0, S1
	0x03DDC0B0 CSEL W24, W9, W8, EQ
	0x03DDC0B4 CBZ X22, 0x3DDDAF4
	0x03DDC0B8 MOV X0, X22
	0x03DDC0BC MOV X1, X31
	0x03DDC0C0 BL 0x3DE89D4
	0x03DDC0C4 ADRP X8, 0x389000
	0x03DDC0C8 LDR X8, [X8 + 0x368]
	0x03DDC0CC MOV X22, X0
	0x03DDC0D0 MOV X0, X23
	0x03DDC0D4 LDR X1, [X8]
	0x03DDC0D8 BL 0x266C4A0
	0x03DDC0DC CBZ X22, 0x3DDDAF4
	0x03DDC0E0 ADRP X10, 0x341000
	0x03DDC0E4 LDR X8, [X22]
	0x03DDC0E8 LDR W23, [X0 + 0x7C]
	0x03DDC0EC LDR X10, [X10 + 0xED0]
	0x03DDC0F0 LDRH W9, [X8 + 0x12E]
	0x03DDC0F4 LDR X1, [X10]
	0x03DDC0F8 CBZ X9, 0x3DDC11C
	0x03DDC0FC LDR X10, [X8 + 0xB0]
	0x03DDC100 ADD X10, X10, 0x8
	0x03DDC104 LDUR X11, [X10 - 0x8]
	0x03DDC108 CMP X11, X1
	0x03DDC10C B.EQ 0x3DDD5E8
	0x03DDC110 SUBS X9, X9, 0x1
	0x03DDC114 ADD X10, X10, 0x10
	0x03DDC118 B.NE 0x3DDC104
	0x03DDC11C MOVZ W2, 0x4
	0x03DDC120 MOV X0, X22
	0x03DDC124 BL 0x1C5C788
	0x03DDC128 B 0x3DDD5F8
	0x03DDC12C LDR V0, [X24 + 0x8]
	0x03DDC130 MOVZ W8, 0x7F800000
	0x03DDC134 FMOV S1, W8
	0x03DDC138 MOVZ W9, 0x80000000
	0x03DDC13C FCVTZS W8, S0
	0x03DDC140 FCMP S0, S1
	0x03DDC144 CSEL W24, W9, W8, EQ
	0x03DDC148 CBZ X22, 0x3DDDAF4
	0x03DDC14C MOV X0, X22
	0x03DDC150 MOV X1, X31
	0x03DDC154 BL 0x3DE89D4
	0x03DDC158 ADRP X8, 0x389000
	0x03DDC15C LDR X8, [X8 + 0x368]
	0x03DDC160 MOV X22, X0
	0x03DDC164 MOV X0, X23
	0x03DDC168 LDR X1, [X8]
	0x03DDC16C BL 0x266C4A0
	0x03DDC170 CBZ X22, 0x3DDDAF4
	0x03DDC174 ADRP X10, 0x341000
	0x03DDC178 LDR X8, [X22]
	0x03DDC17C LDR W23, [X0 + 0x80]
	0x03DDC180 LDR X10, [X10 + 0xED0]
	0x03DDC184 LDRH W9, [X8 + 0x12E]
	0x03DDC188 LDR X1, [X10]
	0x03DDC18C CBZ X9, 0x3DDC1B0
	0x03DDC190 LDR X10, [X8 + 0xB0]
	0x03DDC194 ADD X10, X10, 0x8
	0x03DDC198 LDUR X11, [X10 - 0x8]
	0x03DDC19C CMP X11, X1
	0x03DDC1A0 B.EQ 0x3DDD60C
	0x03DDC1A4 SUBS X9, X9, 0x1
	0x03DDC1A8 ADD X10, X10, 0x10
	0x03DDC1AC B.NE 0x3DDC198
	0x03DDC1B0 MOVZ W2, 0x4
	0x03DDC1B4 MOV X0, X22
	0x03DDC1B8 BL 0x1C5C788
	0x03DDC1BC B 0x3DDD61C
	0x03DDC1C0 LDR X24, [X24 + 0x8]
	0x03DDC1C4 CBZ X22, 0x3DDDAF4
	0x03DDC1C8 MOV X0, X22
	0x03DDC1CC MOV X1, X31
	0x03DDC1D0 BL 0x3DE89D4
	0x03DDC1D4 ADRP X8, 0x389000
	0x03DDC1D8 LDR X8, [X8 + 0x368]
	0x03DDC1DC MOV X22, X0
	0x03DDC1E0 MOV X0, X23
	0x03DDC1E4 LDR X1, [X8]
	0x03DDC1E8 BL 0x266C4A0
	0x03DDC1EC CBZ X22, 0x3DDDAF4
	0x03DDC1F0 ADRP X10, 0x341000
	0x03DDC1F4 LDR X8, [X22]
	0x03DDC1F8 LDUR X23, [X0 + 0x84]
	0x03DDC1FC LDR X10, [X10 + 0xED0]
	0x03DDC200 LDRH W9, [X8 + 0x12E]
	0x03DDC204 LDR X1, [X10]
	0x03DDC208 CBZ X9, 0x3DDC22C
	0x03DDC20C LDR X10, [X8 + 0xB0]
	0x03DDC210 ADD X10, X10, 0x8
	0x03DDC214 LDUR X11, [X10 - 0x8]
	0x03DDC218 CMP X11, X1
	0x03DDC21C B.EQ 0x3DDD62C
	0x03DDC220 SUBS X9, X9, 0x1
	0x03DDC224 ADD X10, X10, 0x10
	0x03DDC228 B.NE 0x3DDC214
	0x03DDC22C MOVZ W2, 0x2
	0x03DDC230 MOV X0, X22
	0x03DDC234 BL 0x1C5C788
	0x03DDC238 B 0x3DDD63C
	0x03DDC23C LDR V0, [X24 + 0x8]
	0x03DDC240 MOVZ W9, 0x7F800000
	0x03DDC244 FMOV S1, W9
	0x03DDC248 MOVZ W10, 0x80000000
	0x03DDC24C FCVTZS W9, S0
	0x03DDC250 FCMP S0, S1
	0x03DDC254 CSEL W0, W10, W9, EQ
	0x03DDC258 CMP W8, 0x2
	0x03DDC25C CSEL W24, W31, W0, EQ
	0x03DDC260 CBZ X22, 0x3DDDAF4
	0x03DDC264 MOV X0, X22
	0x03DDC268 MOV X1, X31
	0x03DDC26C BL 0x3DE89D4
	0x03DDC270 ADRP X8, 0x389000
	0x03DDC274 LDR X8, [X8 + 0x358]
	0x03DDC278 MOV X22, X0
	0x03DDC27C ADD X0, X23, 0x8
	0x03DDC280 LDR X1, [X8]
	0x03DDC284 BL 0x266C920
	0x03DDC288 CBZ X22, 0x3DDDAF4
	0x03DDC28C ADRP X10, 0x341000
	0x03DDC290 LDR X8, [X22]
	0x03DDC294 LDR W23, [X0]
	0x03DDC298 LDR X10, [X10 + 0xED0]
	0x03DDC29C LDRH W9, [X8 + 0x12E]
	0x03DDC2A0 LDR X1, [X10]
	0x03DDC2A4 CBZ X9, 0x3DDC2C8
	0x03DDC2A8 LDR X10, [X8 + 0xB0]
	0x03DDC2AC ADD X10, X10, 0x8
	0x03DDC2B0 LDUR X11, [X10 - 0x8]
	0x03DDC2B4 CMP X11, X1
	0x03DDC2B8 B.EQ 0x3DDD64C
	0x03DDC2BC SUBS X9, X9, 0x1
	0x03DDC2C0 ADD X10, X10, 0x10
	0x03DDC2C4 B.NE 0x3DDC2B0
	0x03DDC2C8 MOVZ W2, 0x4
	0x03DDC2CC MOV X0, X22
	0x03DDC2D0 BL 0x1C5C788
	0x03DDC2D4 B 0x3DDD65C
	0x03DDC2D8 LDR V0, [X24 + 0x8]
	0x03DDC2DC MOVZ W9, 0x7F800000
	0x03DDC2E0 FMOV S1, W9
	0x03DDC2E4 MOVZ W10, 0x80000000
	0x03DDC2E8 FCVTZS W9, S0
	0x03DDC2EC FCMP S0, S1
	0x03DDC2F0 CSEL W0, W10, W9, EQ
	0x03DDC2F4 CMP W8, 0x2
	0x03DDC2F8 CSEL W24, W31, W0, EQ
	0x03DDC2FC CBZ X22, 0x3DDDAF4
	0x03DDC300 MOV X0, X22
	0x03DDC304 MOV X1, X31
	0x03DDC308 BL 0x3DE89D4
	0x03DDC30C ADRP X8, 0x389000
	0x03DDC310 LDR X8, [X8 + 0x358]
	0x03DDC314 MOV X22, X0
	0x03DDC318 ADD X0, X23, 0x8
	0x03DDC31C LDR X1, [X8]
	0x03DDC320 BL 0x266C920
	0x03DDC324 CBZ X22, 0x3DDDAF4
	0x03DDC328 ADRP X10, 0x341000
	0x03DDC32C LDR X8, [X22]
	0x03DDC330 LDR W23, [X0 + 0x4]
	0x03DDC334 LDR X10, [X10 + 0xED0]
	0x03DDC338 LDRH W9, [X8 + 0x12E]
	0x03DDC33C LDR X1, [X10]
	0x03DDC340 CBZ X9, 0x3DDC364
	0x03DDC344 LDR X10, [X8 + 0xB0]
	0x03DDC348 ADD X10, X10, 0x8
	0x03DDC34C LDUR X11, [X10 - 0x8]
	0x03DDC350 CMP X11, X1
	0x03DDC354 B.EQ 0x3DDD668
	0x03DDC358 SUBS X9, X9, 0x1
	0x03DDC35C ADD X10, X10, 0x10
	0x03DDC360 B.NE 0x3DDC34C
	0x03DDC364 MOVZ W2, 0x4
	0x03DDC368 MOV X0, X22
	0x03DDC36C BL 0x1C5C788
	0x03DDC370 B 0x3DDD678
	0x03DDC374 LDR V0, [X24 + 0x8]
	0x03DDC378 MOVZ W9, 0x7F800000
	0x03DDC37C FMOV S1, W9
	0x03DDC380 MOVZ W10, 0x80000000
	0x03DDC384 FCVTZS W9, S0
	0x03DDC388 FCMP S0, S1
	0x03DDC38C CSEL W0, W10, W9, EQ
	0x03DDC390 CMP W8, 0x2
	0x03DDC394 CSEL W24, W31, W0, EQ
	0x03DDC398 CBZ X22, 0x3DDDAF4
	0x03DDC39C MOV X0, X22
	0x03DDC3A0 MOV X1, X31
	0x03DDC3A4 BL 0x3DE89D4
	0x03DDC3A8 ADRP X8, 0x389000
	0x03DDC3AC LDR X8, [X8 + 0x358]
	0x03DDC3B0 MOV X22, X0
	0x03DDC3B4 ADD X0, X23, 0x8
	0x03DDC3B8 LDR X1, [X8]
	0x03DDC3BC BL 0x266C920
	0x03DDC3C0 CBZ X22, 0x3DDDAF4
	0x03DDC3C4 ADRP X10, 0x341000
	0x03DDC3C8 LDR X8, [X22]
	0x03DDC3CC LDR W23, [X0 + 0x8]
	0x03DDC3D0 LDR X10, [X10 + 0xED0]
	0x03DDC3D4 LDRH W9, [X8 + 0x12E]
	0x03DDC3D8 LDR X1, [X10]
	0x03DDC3DC CBZ X9, 0x3DDC400
	0x03DDC3E0 LDR X10, [X8 + 0xB0]
	0x03DDC3E4 ADD X10, X10, 0x8
	0x03DDC3E8 LDUR X11, [X10 - 0x8]
	0x03DDC3EC CMP X11, X1
	0x03DDC3F0 B.EQ 0x3DDD688
	0x03DDC3F4 SUBS X9, X9, 0x1
	0x03DDC3F8 ADD X10, X10, 0x10
	0x03DDC3FC B.NE 0x3DDC3E8
	0x03DDC400 MOVZ W2, 0x4
	0x03DDC404 MOV X0, X22
	0x03DDC408 BL 0x1C5C788
	0x03DDC40C B 0x3DDD698
	0x03DDC410 LDR V8, [X24 + 0x8]
	0x03DDC414 CBZ X22, 0x3DDDAF4
	0x03DDC418 MOV X0, X22
	0x03DDC41C MOV X1, X31
	0x03DDC420 BL 0x3DE89D4
	0x03DDC424 ADRP X8, 0x389000
	0x03DDC428 LDR X8, [X8 + 0x358]
	0x03DDC42C MOV X22, X0
	0x03DDC430 ADD X0, X23, 0x8
	0x03DDC434 LDR X1, [X8]
	0x03DDC438 BL 0x266C920
	0x03DDC43C CBZ X22, 0x3DDDAF4
	0x03DDC440 ADRP X10, 0x341000
	0x03DDC444 LDR X8, [X22]
	0x03DDC448 LDR V9, [X0 + 0xC]
	0x03DDC44C LDR X10, [X10 + 0xED0]
	0x03DDC450 LDRH W9, [X8 + 0x12E]
	0x03DDC454 LDR X1, [X10]
	0x03DDC458 CBZ X9, 0x3DDC47C
	0x03DDC45C LDR X10, [X8 + 0xB0]
	0x03DDC460 ADD X10, X10, 0x8
	0x03DDC464 LDUR X11, [X10 - 0x8]
	0x03DDC468 CMP X11, X1
	0x03DDC46C B.EQ 0x3DDD6A4
	0x03DDC470 SUBS X9, X9, 0x1
	0x03DDC474 ADD X10, X10, 0x10
	0x03DDC478 B.NE 0x3DDC464
	0x03DDC47C MOV X0, X22
	0x03DDC480 MOV W2, W31
	0x03DDC484 BL 0x1C5C788
	0x03DDC488 B 0x3DDD6B0
	0x03DDC48C LDR V8, [X24 + 0x8]
	0x03DDC490 CBZ X22, 0x3DDDAF4
	0x03DDC494 MOV X0, X22
	0x03DDC498 MOV X1, X31
	0x03DDC49C BL 0x3DE89D4
	0x03DDC4A0 ADRP X8, 0x389000
	0x03DDC4A4 LDR X8, [X8 + 0x358]
	0x03DDC4A8 MOV X22, X0
	0x03DDC4AC ADD X0, X23, 0x8
	0x03DDC4B0 LDR X1, [X8]
	0x03DDC4B4 BL 0x266C920
	0x03DDC4B8 CBZ X22, 0x3DDDAF4
	0x03DDC4BC ADRP X10, 0x341000
	0x03DDC4C0 LDR X8, [X22]
	0x03DDC4C4 LDR V9, [X0 + 0x10]
	0x03DDC4C8 LDR X10, [X10 + 0xED0]
	0x03DDC4CC LDRH W9, [X8 + 0x12E]
	0x03DDC4D0 LDR X1, [X10]
	0x03DDC4D4 CBZ X9, 0x3DDC4F8
	0x03DDC4D8 LDR X10, [X8 + 0xB0]
	0x03DDC4DC ADD X10, X10, 0x8
	0x03DDC4E0 LDUR X11, [X10 - 0x8]
	0x03DDC4E4 CMP X11, X1
	0x03DDC4E8 B.EQ 0x3DDD6BC
	0x03DDC4EC SUBS X9, X9, 0x1
	0x03DDC4F0 ADD X10, X10, 0x10
	0x03DDC4F4 B.NE 0x3DDC4E0
	0x03DDC4F8 MOV X0, X22
	0x03DDC4FC MOV W2, W31
	0x03DDC500 BL 0x1C5C788
	0x03DDC504 B 0x3DDD6C8
	0x03DDC508 LDR V8, [X24 + 0x8]
	0x03DDC50C CBZ X22, 0x3DDDAF4
	0x03DDC510 MOV X0, X22
	0x03DDC514 MOV X1, X31
	0x03DDC518 BL 0x3DE89D4
	0x03DDC51C ADRP X8, 0x389000
	0x03DDC520 LDR X8, [X8 + 0x358]
	0x03DDC524 MOV X22, X0
	0x03DDC528 ADD X0, X23, 0x8
	0x03DDC52C LDR X1, [X8]
	0x03DDC530 BL 0x266C920
	0x03DDC534 CBZ X22, 0x3DDDAF4
	0x03DDC538 ADRP X10, 0x341000
	0x03DDC53C LDR X8, [X22]
	0x03DDC540 LDR V9, [X0 + 0x14]
	0x03DDC544 LDR X10, [X10 + 0xED0]
	0x03DDC548 LDRH W9, [X8 + 0x12E]
	0x03DDC54C LDR X1, [X10]
	0x03DDC550 CBZ X9, 0x3DDC574
	0x03DDC554 LDR X10, [X8 + 0xB0]
	0x03DDC558 ADD X10, X10, 0x8
	0x03DDC55C LDUR X11, [X10 - 0x8]
	0x03DDC560 CMP X11, X1
	0x03DDC564 B.EQ 0x3DDD6D4
	0x03DDC568 SUBS X9, X9, 0x1
	0x03DDC56C ADD X10, X10, 0x10
	0x03DDC570 B.NE 0x3DDC55C
	0x03DDC574 MOV X0, X22
	0x03DDC578 MOV W2, W31
	0x03DDC57C BL 0x1C5C788
	0x03DDC580 B 0x3DDD6E0
	0x03DDC584 LDR V8, [X24 + 0x8]
	0x03DDC588 CBZ X22, 0x3DDDAF4
	0x03DDC58C MOV X0, X22
	0x03DDC590 MOV X1, X31
	0x03DDC594 BL 0x3DE89D4
	0x03DDC598 ADRP X8, 0x389000
	0x03DDC59C LDR X8, [X8 + 0x358]
	0x03DDC5A0 MOV X22, X0
	0x03DDC5A4 ADD X0, X23, 0x8
	0x03DDC5A8 LDR X1, [X8]
	0x03DDC5AC BL 0x266C920
	0x03DDC5B0 CBZ X22, 0x3DDDAF4
	0x03DDC5B4 ADRP X10, 0x341000
	0x03DDC5B8 LDR X8, [X22]
	0x03DDC5BC LDR V9, [X0 + 0x18]
	0x03DDC5C0 LDR X10, [X10 + 0xED0]
	0x03DDC5C4 LDRH W9, [X8 + 0x12E]
	0x03DDC5C8 LDR X1, [X10]
	0x03DDC5CC CBZ X9, 0x3DDC5F0
	0x03DDC5D0 LDR X10, [X8 + 0xB0]
	0x03DDC5D4 ADD X10, X10, 0x8
	0x03DDC5D8 LDUR X11, [X10 - 0x8]
	0x03DDC5DC CMP X11, X1
	0x03DDC5E0 B.EQ 0x3DDD6EC
	0x03DDC5E4 SUBS X9, X9, 0x1
	0x03DDC5E8 ADD X10, X10, 0x10
	0x03DDC5EC B.NE 0x3DDC5D8
	0x03DDC5F0 MOV X0, X22
	0x03DDC5F4 MOV W2, W31
	0x03DDC5F8 BL 0x1C5C788
	0x03DDC5FC B 0x3DDD6F8
	0x03DDC600 LDR X24, [X24 + 0x8]
	0x03DDC604 CBZ X22, 0x3DDDAF4
	0x03DDC608 MOV X0, X22
	0x03DDC60C MOV X1, X31
	0x03DDC610 BL 0x3DE89D4
	0x03DDC614 ADRP X8, 0x389000
	0x03DDC618 LDR X8, [X8 + 0x358]
	0x03DDC61C MOV X22, X0
	0x03DDC620 ADD X0, X23, 0x8
	0x03DDC624 LDR X1, [X8]
	0x03DDC628 BL 0x266C920
	0x03DDC62C CBZ X22, 0x3DDDAF4
	0x03DDC630 ADRP X10, 0x341000
	0x03DDC634 LDR X8, [X22]
	0x03DDC638 LDUR X23, [X0 + 0x1C]
	0x03DDC63C LDR X10, [X10 + 0xED0]
	0x03DDC640 LDRH W9, [X8 + 0x12E]
	0x03DDC644 LDR X1, [X10]
	0x03DDC648 CBZ X9, 0x3DDC66C
	0x03DDC64C LDR X10, [X8 + 0xB0]
	0x03DDC650 ADD X10, X10, 0x8
	0x03DDC654 LDUR X11, [X10 - 0x8]
	0x03DDC658 CMP X11, X1
	0x03DDC65C B.EQ 0x3DDD704
	0x03DDC660 SUBS X9, X9, 0x1
	0x03DDC664 ADD X10, X10, 0x10
	0x03DDC668 B.NE 0x3DDC654
	0x03DDC66C MOVZ W2, 0x2
	0x03DDC670 MOV X0, X22
	0x03DDC674 BL 0x1C5C788
	0x03DDC678 B 0x3DDD714
	0x03DDC67C LDR V0, [X24 + 0x8]
	0x03DDC680 MOVZ W9, 0x7F800000
	0x03DDC684 FMOV S1, W9
	0x03DDC688 MOVZ W10, 0x80000000
	0x03DDC68C FCVTZS W9, S0
	0x03DDC690 FCMP S0, S1
	0x03DDC694 CSEL W0, W10, W9, EQ
	0x03DDC698 CMP W8, 0x3
	0x03DDC69C CSINC W24, W0, W31, NE
	0x03DDC6A0 CBZ X22, 0x3DDDAF4
	0x03DDC6A4 MOV X0, X22
	0x03DDC6A8 MOV X1, X31
	0x03DDC6AC BL 0x3DE89D4
	0x03DDC6B0 ADRP X8, 0x389000
	0x03DDC6B4 LDR X8, [X8 + 0x358]
	0x03DDC6B8 MOV X22, X0
	0x03DDC6BC ADD X0, X23, 0x8
	0x03DDC6C0 LDR X1, [X8]
	0x03DDC6C4 BL 0x266C920
	0x03DDC6C8 CBZ X22, 0x3DDDAF4
	0x03DDC6CC ADRP X10, 0x341000
	0x03DDC6D0 LDR X8, [X22]
	0x03DDC6D4 LDR W23, [X0 + 0x24]
	0x03DDC6D8 LDR X10, [X10 + 0xED0]
	0x03DDC6DC LDRH W9, [X8 + 0x12E]
	0x03DDC6E0 LDR X1, [X10]
	0x03DDC6E4 CBZ X9, 0x3DDC708
	0x03DDC6E8 LDR X10, [X8 + 0xB0]
	0x03DDC6EC ADD X10, X10, 0x8
	0x03DDC6F0 LDUR X11, [X10 - 0x8]
	0x03DDC6F4 CMP X11, X1
	0x03DDC6F8 B.EQ 0x3DDD720
	0x03DDC6FC SUBS X9, X9, 0x1
	0x03DDC700 ADD X10, X10, 0x10
	0x03DDC704 B.NE 0x3DDC6F0
	0x03DDC708 MOVZ W2, 0x4
	0x03DDC70C MOV X0, X22
	0x03DDC710 BL 0x1C5C788
	0x03DDC714 B 0x3DDD730
	0x03DDC718 LDR X24, [X24 + 0x8]
	0x03DDC71C CBZ X22, 0x3DDDAF4
	0x03DDC720 MOV X0, X22
	0x03DDC724 MOV X1, X31
	0x03DDC728 BL 0x3DE89D4
	0x03DDC72C ADRP X8, 0x389000
	0x03DDC730 LDR X8, [X8 + 0x358]
	0x03DDC734 MOV X22, X0
	0x03DDC738 ADD X0, X23, 0x8
	0x03DDC73C LDR X1, [X8]
	0x03DDC740 BL 0x266C920
	0x03DDC744 CBZ X22, 0x3DDDAF4
	0x03DDC748 ADRP X10, 0x341000
	0x03DDC74C LDR X8, [X22]
	0x03DDC750 LDR X23, [X0 + 0x28]
	0x03DDC754 LDR X10, [X10 + 0xED0]
	0x03DDC758 LDRH W9, [X8 + 0x12E]
	0x03DDC75C LDR X1, [X10]
	0x03DDC760 CBZ X9, 0x3DDC784
	0x03DDC764 LDR X10, [X8 + 0xB0]
	0x03DDC768 ADD X10, X10, 0x8
	0x03DDC76C LDUR X11, [X10 - 0x8]
	0x03DDC770 CMP X11, X1
	0x03DDC774 B.EQ 0x3DDD73C
	0x03DDC778 SUBS X9, X9, 0x1
	0x03DDC77C ADD X10, X10, 0x10
	0x03DDC780 B.NE 0x3DDC76C
	0x03DDC784 MOVZ W2, 0x2
	0x03DDC788 MOV X0, X22
	0x03DDC78C BL 0x1C5C788
	0x03DDC790 B 0x3DDD74C
	0x03DDC794 LDR V0, [X24 + 0x8]
	0x03DDC798 MOVZ W8, 0x7F800000
	0x03DDC79C FMOV S1, W8
	0x03DDC7A0 MOVZ W9, 0x80000000
	0x03DDC7A4 FCVTZS W8, S0
	0x03DDC7A8 FCMP S0, S1
	0x03DDC7AC CSEL W24, W9, W8, EQ
	0x03DDC7B0 CBZ X22, 0x3DDDAF4
	0x03DDC7B4 MOV X0, X22
	0x03DDC7B8 MOV X1, X31
	0x03DDC7BC BL 0x3DE89D4
	0x03DDC7C0 ADRP X8, 0x389000
	0x03DDC7C4 LDR X8, [X8 + 0x358]
	0x03DDC7C8 MOV X22, X0
	0x03DDC7CC ADD X0, X23, 0x8
	0x03DDC7D0 LDR X1, [X8]
	0x03DDC7D4 BL 0x266C920
	0x03DDC7D8 CBZ X22, 0x3DDDAF4
	0x03DDC7DC ADRP X10, 0x341000
	0x03DDC7E0 LDR X8, [X22]
	0x03DDC7E4 LDR W23, [X0 + 0x30]
	0x03DDC7E8 LDR X10, [X10 + 0xED0]
	0x03DDC7EC LDRH W9, [X8 + 0x12E]
	0x03DDC7F0 LDR X1, [X10]
	0x03DDC7F4 CBZ X9, 0x3DDC818
	0x03DDC7F8 LDR X10, [X8 + 0xB0]
	0x03DDC7FC ADD X10, X10, 0x8
	0x03DDC800 LDUR X11, [X10 - 0x8]
	0x03DDC804 CMP X11, X1
	0x03DDC808 B.EQ 0x3DDD758
	0x03DDC80C SUBS X9, X9, 0x1
	0x03DDC810 ADD X10, X10, 0x10
	0x03DDC814 B.NE 0x3DDC800
	0x03DDC818 MOVZ W2, 0x4
	0x03DDC81C MOV X0, X22
	0x03DDC820 BL 0x1C5C788
	0x03DDC824 B 0x3DDD768
	0x03DDC828 LDR V8, [X24 + 0x8]
	0x03DDC82C CBZ X22, 0x3DDDAF4
	0x03DDC830 MOV X0, X22
	0x03DDC834 MOV X1, X31
	0x03DDC838 BL 0x3DE89D4
	0x03DDC83C ADRP X8, 0x389000
	0x03DDC840 LDR X8, [X8 + 0x358]
	0x03DDC844 MOV X22, X0
	0x03DDC848 ADD X0, X23, 0x8
	0x03DDC84C LDR X1, [X8]
	0x03DDC850 BL 0x266C920
	0x03DDC854 CBZ X22, 0x3DDDAF4
	0x03DDC858 ADRP X10, 0x341000
	0x03DDC85C LDR X8, [X22]
	0x03DDC860 LDR V9, [X0 + 0x34]
	0x03DDC864 LDR X10, [X10 + 0xED0]
	0x03DDC868 LDRH W9, [X8 + 0x12E]
	0x03DDC86C LDR X1, [X10]
	0x03DDC870 CBZ X9, 0x3DDC894
	0x03DDC874 LDR X10, [X8 + 0xB0]
	0x03DDC878 ADD X10, X10, 0x8
	0x03DDC87C LDUR X11, [X10 - 0x8]
	0x03DDC880 CMP X11, X1
	0x03DDC884 B.EQ 0x3DDD774
	0x03DDC888 SUBS X9, X9, 0x1
	0x03DDC88C ADD X10, X10, 0x10
	0x03DDC890 B.NE 0x3DDC87C
	0x03DDC894 MOV X0, X22
	0x03DDC898 MOV W2, W31
	0x03DDC89C BL 0x1C5C788
	0x03DDC8A0 B 0x3DDD780
	0x03DDC8A4 LDR V8, [X24 + 0x8]
	0x03DDC8A8 CBZ X22, 0x3DDDAF4
	0x03DDC8AC MOV X0, X22
	0x03DDC8B0 MOV X1, X31
	0x03DDC8B4 BL 0x3DE89D4
	0x03DDC8B8 ADRP X8, 0x389000
	0x03DDC8BC LDR X8, [X8 + 0x358]
	0x03DDC8C0 MOV X22, X0
	0x03DDC8C4 ADD X0, X23, 0x8
	0x03DDC8C8 LDR X1, [X8]
	0x03DDC8CC BL 0x266C920
	0x03DDC8D0 CBZ X22, 0x3DDDAF4
	0x03DDC8D4 ADRP X10, 0x341000
	0x03DDC8D8 LDR X8, [X22]
	0x03DDC8DC LDR V9, [X0 + 0x38]
	0x03DDC8E0 LDR X10, [X10 + 0xED0]
	0x03DDC8E4 LDRH W9, [X8 + 0x12E]
	0x03DDC8E8 LDR X1, [X10]
	0x03DDC8EC CBZ X9, 0x3DDC910
	0x03DDC8F0 LDR X10, [X8 + 0xB0]
	0x03DDC8F4 ADD X10, X10, 0x8
	0x03DDC8F8 LDUR X11, [X10 - 0x8]
	0x03DDC8FC CMP X11, X1
	0x03DDC900 B.EQ 0x3DDD78C
	0x03DDC904 SUBS X9, X9, 0x1
	0x03DDC908 ADD X10, X10, 0x10
	0x03DDC90C B.NE 0x3DDC8F8
	0x03DDC910 MOV X0, X22
	0x03DDC914 MOV W2, W31
	0x03DDC918 BL 0x1C5C788
	0x03DDC91C B 0x3DDD798
	0x03DDC920 LDR V0, [X24 + 0x8]
	0x03DDC924 MOVZ W8, 0x7F800000
	0x03DDC928 FMOV S1, W8
	0x03DDC92C MOVZ W9, 0x80000000
	0x03DDC930 FCVTZS W8, S0
	0x03DDC934 FCMP S0, S1
	0x03DDC938 CSEL W24, W9, W8, EQ
	0x03DDC93C CBZ X22, 0x3DDDAF4
	0x03DDC940 MOV X0, X22
	0x03DDC944 MOV X1, X31
	0x03DDC948 BL 0x3DE89D4
	0x03DDC94C ADRP X8, 0x389000
	0x03DDC950 LDR X8, [X8 + 0x358]
	0x03DDC954 MOV X22, X0
	0x03DDC958 ADD X0, X23, 0x8
	0x03DDC95C LDR X1, [X8]
	0x03DDC960 BL 0x266C920
	0x03DDC964 CBZ X22, 0x3DDDAF4
	0x03DDC968 ADRP X10, 0x341000
	0x03DDC96C LDR X8, [X22]
	0x03DDC970 LDR W23, [X0 + 0x3C]
	0x03DDC974 LDR X10, [X10 + 0xED0]
	0x03DDC978 LDRH W9, [X8 + 0x12E]
	0x03DDC97C LDR X1, [X10]
	0x03DDC980 CBZ X9, 0x3DDC9A4
	0x03DDC984 LDR X10, [X8 + 0xB0]
	0x03DDC988 ADD X10, X10, 0x8
	0x03DDC98C LDUR X11, [X10 - 0x8]
	0x03DDC990 CMP X11, X1
	0x03DDC994 B.EQ 0x3DDD7C0
	0x03DDC998 SUBS X9, X9, 0x1
	0x03DDC99C ADD X10, X10, 0x10
	0x03DDC9A0 B.NE 0x3DDC98C
	0x03DDC9A4 MOVZ W2, 0x4
	0x03DDC9A8 MOV X0, X22
	0x03DDC9AC BL 0x1C5C788
	0x03DDC9B0 B 0x3DDD7D0
	0x03DDC9B4 LDR X24, [X24 + 0x8]
	0x03DDC9B8 CBZ X22, 0x3DDDAF4
	0x03DDC9BC MOV X0, X22
	0x03DDC9C0 MOV X1, X31
	0x03DDC9C4 BL 0x3DE89D4
	0x03DDC9C8 ADRP X8, 0x389000
	0x03DDC9CC LDR X8, [X8 + 0x358]
	0x03DDC9D0 MOV X22, X0
	0x03DDC9D4 ADD X0, X23, 0x8
	0x03DDC9D8 LDR X1, [X8]
	0x03DDC9DC BL 0x266C920
	0x03DDC9E0 CBZ X22, 0x3DDDAF4
	0x03DDC9E4 ADRP X10, 0x341000
	0x03DDC9E8 LDR X8, [X22]
	0x03DDC9EC LDR X23, [X0 + 0x40]
	0x03DDC9F0 LDR X10, [X10 + 0xED0]
	0x03DDC9F4 LDRH W9, [X8 + 0x12E]
	0x03DDC9F8 LDR X1, [X10]
	0x03DDC9FC CBZ X9, 0x3DDCA20
	0x03DDCA00 LDR X10, [X8 + 0xB0]
	0x03DDCA04 ADD X10, X10, 0x8
	0x03DDCA08 LDUR X11, [X10 - 0x8]
	0x03DDCA0C CMP X11, X1
	0x03DDCA10 B.EQ 0x3DDD7DC
	0x03DDCA14 SUBS X9, X9, 0x1
	0x03DDCA18 ADD X10, X10, 0x10
	0x03DDCA1C B.NE 0x3DDCA08
	0x03DDCA20 MOVZ W2, 0x2
	0x03DDCA24 MOV X0, X22
	0x03DDCA28 BL 0x1C5C788
	0x03DDCA2C B 0x3DDD7EC
	0x03DDCA30 LDR V0, [X24 + 0x8]
	0x03DDCA34 MOVZ W8, 0x7F800000
	0x03DDCA38 FMOV S1, W8
	0x03DDCA3C MOVZ W9, 0x80000000
	0x03DDCA40 FCVTZS W8, S0
	0x03DDCA44 FCMP S0, S1
	0x03DDCA48 CSEL W24, W9, W8, EQ
	0x03DDCA4C CBZ X22, 0x3DDDAF4
	0x03DDCA50 MOV X0, X22
	0x03DDCA54 MOV X1, X31
	0x03DDCA58 BL 0x3DE89D4
	0x03DDCA5C ADRP X8, 0x389000
	0x03DDCA60 LDR X8, [X8 + 0x358]
	0x03DDCA64 MOV X22, X0
	0x03DDCA68 ADD X0, X23, 0x8
	0x03DDCA6C LDR X1, [X8]
	0x03DDCA70 BL 0x266C920
	0x03DDCA74 CBZ X22, 0x3DDDAF4
	0x03DDCA78 ADRP X10, 0x341000
	0x03DDCA7C LDR X8, [X22]
	0x03DDCA80 LDR W23, [X0 + 0x48]
	0x03DDCA84 LDR X10, [X10 + 0xED0]
	0x03DDCA88 LDRH W9, [X8 + 0x12E]
	0x03DDCA8C LDR X1, [X10]
	0x03DDCA90 CBZ X9, 0x3DDCAB4
	0x03DDCA94 LDR X10, [X8 + 0xB0]
	0x03DDCA98 ADD X10, X10, 0x8
	0x03DDCA9C LDUR X11, [X10 - 0x8]
	0x03DDCAA0 CMP X11, X1
	0x03DDCAA4 B.EQ 0x3DDD7F8
	0x03DDCAA8 SUBS X9, X9, 0x1
	0x03DDCAAC ADD X10, X10, 0x10
	0x03DDCAB0 B.NE 0x3DDCA9C
	0x03DDCAB4 MOVZ W2, 0x4
	0x03DDCAB8 MOV X0, X22
	0x03DDCABC BL 0x1C5C788
	0x03DDCAC0 B 0x3DDD808
	0x03DDCAC4 LDR X24, [X24 + 0x8]
	0x03DDCAC8 CBZ X22, 0x3DDDAF4
	0x03DDCACC MOV X0, X22
	0x03DDCAD0 MOV X1, X31
	0x03DDCAD4 BL 0x3DE89D4
	0x03DDCAD8 ADRP X8, 0x389000
	0x03DDCADC LDR X8, [X8 + 0x358]
	0x03DDCAE0 MOV X22, X0
	0x03DDCAE4 ADD X0, X23, 0x8
	0x03DDCAE8 LDR X1, [X8]
	0x03DDCAEC BL 0x266C920
	0x03DDCAF0 CBZ X22, 0x3DDDAF4
	0x03DDCAF4 ADRP X10, 0x341000
	0x03DDCAF8 LDR X8, [X22]
	0x03DDCAFC LDUR X23, [X0 + 0x4C]
	0x03DDCB00 LDR X10, [X10 + 0xED0]
	0x03DDCB04 LDRH W9, [X8 + 0x12E]
	0x03DDCB08 LDR X1, [X10]
	0x03DDCB0C CBZ X9, 0x3DDCB30
	0x03DDCB10 LDR X10, [X8 + 0xB0]
	0x03DDCB14 ADD X10, X10, 0x8
	0x03DDCB18 LDUR X11, [X10 - 0x8]
	0x03DDCB1C CMP X11, X1
	0x03DDCB20 B.EQ 0x3DDD814
	0x03DDCB24 SUBS X9, X9, 0x1
	0x03DDCB28 ADD X10, X10, 0x10
	0x03DDCB2C B.NE 0x3DDCB18
	0x03DDCB30 MOVZ W2, 0x2
	0x03DDCB34 MOV X0, X22
	0x03DDCB38 BL 0x1C5C788
	0x03DDCB3C B 0x3DDD824
	0x03DDCB40 LDR X24, [X24 + 0x8]
	0x03DDCB44 CBZ X22, 0x3DDDAF4
	0x03DDCB48 MOV X0, X22
	0x03DDCB4C MOV X1, X31
	0x03DDCB50 BL 0x3DE89D4
	0x03DDCB54 ADRP X8, 0x389000
	0x03DDCB58 LDR X8, [X8 + 0x358]
	0x03DDCB5C MOV X22, X0
	0x03DDCB60 ADD X0, X23, 0x8
	0x03DDCB64 LDR X1, [X8]
	0x03DDCB68 BL 0x266C920
	0x03DDCB6C CBZ X22, 0x3DDDAF4
	0x03DDCB70 ADRP X10, 0x341000
	0x03DDCB74 LDR X8, [X22]
	0x03DDCB78 LDUR X23, [X0 + 0x54]
	0x03DDCB7C LDR X10, [X10 + 0xED0]
	0x03DDCB80 LDRH W9, [X8 + 0x12E]
	0x03DDCB84 LDR X1, [X10]
	0x03DDCB88 CBZ X9, 0x3DDCBAC
	0x03DDCB8C LDR X10, [X8 + 0xB0]
	0x03DDCB90 ADD X10, X10, 0x8
	0x03DDCB94 LDUR X11, [X10 - 0x8]
	0x03DDCB98 CMP X11, X1
	0x03DDCB9C B.EQ 0x3DDD830
	0x03DDCBA0 SUBS X9, X9, 0x1
	0x03DDCBA4 ADD X10, X10, 0x10
	0x03DDCBA8 B.NE 0x3DDCB94
	0x03DDCBAC MOVZ W2, 0x2
	0x03DDCBB0 MOV X0, X22
	0x03DDCBB4 BL 0x1C5C788
	0x03DDCBB8 B 0x3DDD840
	0x03DDCBBC LDR X24, [X24 + 0x8]
	0x03DDCBC0 CBZ X22, 0x3DDDAF4
	0x03DDCBC4 MOV X0, X22
	0x03DDCBC8 MOV X1, X31
	0x03DDCBCC BL 0x3DE89D4
	0x03DDCBD0 ADRP X8, 0x389000
	0x03DDCBD4 LDR X8, [X8 + 0x358]
	0x03DDCBD8 MOV X22, X0
	0x03DDCBDC ADD X0, X23, 0x8
	0x03DDCBE0 LDR X1, [X8]
	0x03DDCBE4 BL 0x266C920
	0x03DDCBE8 CBZ X22, 0x3DDDAF4
	0x03DDCBEC ADRP X10, 0x341000
	0x03DDCBF0 LDR X8, [X22]
	0x03DDCBF4 LDUR X23, [X0 + 0x5C]
	0x03DDCBF8 LDR X10, [X10 + 0xED0]
	0x03DDCBFC LDRH W9, [X8 + 0x12E]
	0x03DDCC00 LDR X1, [X10]
	0x03DDCC04 CBZ X9, 0x3DDCC28
	0x03DDCC08 LDR X10, [X8 + 0xB0]
	0x03DDCC0C ADD X10, X10, 0x8
	0x03DDCC10 LDUR X11, [X10 - 0x8]
	0x03DDCC14 CMP X11, X1
	0x03DDCC18 B.EQ 0x3DDD84C
	0x03DDCC1C SUBS X9, X9, 0x1
	0x03DDCC20 ADD X10, X10, 0x10
	0x03DDCC24 B.NE 0x3DDCC10
	0x03DDCC28 MOVZ W2, 0x2
	0x03DDCC2C MOV X0, X22
	0x03DDCC30 BL 0x1C5C788
	0x03DDCC34 B 0x3DDD85C
	0x03DDCC38 LDR X24, [X24 + 0x8]
	0x03DDCC3C CBZ X22, 0x3DDDAF4
	0x03DDCC40 MOV X0, X22
	0x03DDCC44 MOV X1, X31
	0x03DDCC48 BL 0x3DE89D4
	0x03DDCC4C ADRP X8, 0x389000
	0x03DDCC50 LDR X8, [X8 + 0x358]
	0x03DDCC54 MOV X22, X0
	0x03DDCC58 ADD X0, X23, 0x8
	0x03DDCC5C LDR X1, [X8]
	0x03DDCC60 BL 0x266C920
	0x03DDCC64 CBZ X22, 0x3DDDAF4
	0x03DDCC68 ADRP X10, 0x341000
	0x03DDCC6C LDR X8, [X22]
	0x03DDCC70 LDUR X23, [X0 + 0x64]
	0x03DDCC74 LDR X10, [X10 + 0xED0]
	0x03DDCC78 LDRH W9, [X8 + 0x12E]
	0x03DDCC7C LDR X1, [X10]
	0x03DDCC80 CBZ X9, 0x3DDCCA4
	0x03DDCC84 LDR X10, [X8 + 0xB0]
	0x03DDCC88 ADD X10, X10, 0x8
	0x03DDCC8C LDUR X11, [X10 - 0x8]
	0x03DDCC90 CMP X11, X1
	0x03DDCC94 B.EQ 0x3DDD868
	0x03DDCC98 SUBS X9, X9, 0x1
	0x03DDCC9C ADD X10, X10, 0x10
	0x03DDCCA0 B.NE 0x3DDCC8C
	0x03DDCCA4 MOVZ W2, 0x2
	0x03DDCCA8 MOV X0, X22
	0x03DDCCAC BL 0x1C5C788
	0x03DDCCB0 B 0x3DDD878
	0x03DDCCB4 LDR X24, [X24 + 0x8]
	0x03DDCCB8 CBZ X22, 0x3DDDAF4
	0x03DDCCBC MOV X0, X22
	0x03DDCCC0 MOV X1, X31
	0x03DDCCC4 BL 0x3DE89D4
	0x03DDCCC8 ADRP X8, 0x389000
	0x03DDCCCC LDR X8, [X8 + 0x358]
	0x03DDCCD0 MOV X22, X0
	0x03DDCCD4 ADD X0, X23, 0x8
	0x03DDCCD8 LDR X1, [X8]
	0x03DDCCDC BL 0x266C920
	0x03DDCCE0 CBZ X22, 0x3DDDAF4
	0x03DDCCE4 ADRP X10, 0x341000
	0x03DDCCE8 LDR X8, [X22]
	0x03DDCCEC LDUR X23, [X0 + 0x6C]
	0x03DDCCF0 LDR X10, [X10 + 0xED0]
	0x03DDCCF4 LDRH W9, [X8 + 0x12E]
	0x03DDCCF8 LDR X1, [X10]
	0x03DDCCFC CBZ X9, 0x3DDCD20
	0x03DDCD00 LDR X10, [X8 + 0xB0]
	0x03DDCD04 ADD X10, X10, 0x8
	0x03DDCD08 LDUR X11, [X10 - 0x8]
	0x03DDCD0C CMP X11, X1
	0x03DDCD10 B.EQ 0x3DDD884
	0x03DDCD14 SUBS X9, X9, 0x1
	0x03DDCD18 ADD X10, X10, 0x10
	0x03DDCD1C B.NE 0x3DDCD08
	0x03DDCD20 MOVZ W2, 0x2
	0x03DDCD24 MOV X0, X22
	0x03DDCD28 BL 0x1C5C788
	0x03DDCD2C B 0x3DDD894
	0x03DDCD30 LDR X24, [X24 + 0x8]
	0x03DDCD34 CBZ X22, 0x3DDDAF4
	0x03DDCD38 MOV X0, X22
	0x03DDCD3C MOV X1, X31
	0x03DDCD40 BL 0x3DE89D4
	0x03DDCD44 ADRP X8, 0x389000
	0x03DDCD48 LDR X8, [X8 + 0x358]
	0x03DDCD4C MOV X22, X0
	0x03DDCD50 ADD X0, X23, 0x8
	0x03DDCD54 LDR X1, [X8]
	0x03DDCD58 BL 0x266C920
	0x03DDCD5C CBZ X22, 0x3DDDAF4
	0x03DDCD60 ADRP X10, 0x341000
	0x03DDCD64 LDR X8, [X22]
	0x03DDCD68 LDUR X23, [X0 + 0x74]
	0x03DDCD6C LDR X10, [X10 + 0xED0]
	0x03DDCD70 LDRH W9, [X8 + 0x12E]
	0x03DDCD74 LDR X1, [X10]
	0x03DDCD78 CBZ X9, 0x3DDCD9C
	0x03DDCD7C LDR X10, [X8 + 0xB0]
	0x03DDCD80 ADD X10, X10, 0x8
	0x03DDCD84 LDUR X11, [X10 - 0x8]
	0x03DDCD88 CMP X11, X1
	0x03DDCD8C B.EQ 0x3DDD8A0
	0x03DDCD90 SUBS X9, X9, 0x1
	0x03DDCD94 ADD X10, X10, 0x10
	0x03DDCD98 B.NE 0x3DDCD84
	0x03DDCD9C MOVZ W2, 0x2
	0x03DDCDA0 MOV X0, X22
	0x03DDCDA4 BL 0x1C5C788
	0x03DDCDA8 B 0x3DDD8B0
	0x03DDCDAC LDR X24, [X24 + 0x8]
	0x03DDCDB0 CBZ X22, 0x3DDDAF4
	0x03DDCDB4 MOV X0, X22
	0x03DDCDB8 MOV X1, X31
	0x03DDCDBC BL 0x3DE89D4
	0x03DDCDC0 ADRP X8, 0x389000
	0x03DDCDC4 LDR X8, [X8 + 0x358]
	0x03DDCDC8 MOV X22, X0
	0x03DDCDCC ADD X0, X23, 0x8
	0x03DDCDD0 LDR X1, [X8]
	0x03DDCDD4 BL 0x266C920
	0x03DDCDD8 CBZ X22, 0x3DDDAF4
	0x03DDCDDC ADRP X10, 0x341000
	0x03DDCDE0 LDR X8, [X22]
	0x03DDCDE4 LDUR X23, [X0 + 0x7C]
	0x03DDCDE8 LDR X10, [X10 + 0xED0]
	0x03DDCDEC LDRH W9, [X8 + 0x12E]
	0x03DDCDF0 LDR X1, [X10]
	0x03DDCDF4 CBZ X9, 0x3DDCE18
	0x03DDCDF8 LDR X10, [X8 + 0xB0]
	0x03DDCDFC ADD X10, X10, 0x8
	0x03DDCE00 LDUR X11, [X10 - 0x8]
	0x03DDCE04 CMP X11, X1
	0x03DDCE08 B.EQ 0x3DDD8BC
	0x03DDCE0C SUBS X9, X9, 0x1
	0x03DDCE10 ADD X10, X10, 0x10
	0x03DDCE14 B.NE 0x3DDCE00
	0x03DDCE18 MOVZ W2, 0x2
	0x03DDCE1C MOV X0, X22
	0x03DDCE20 BL 0x1C5C788
	0x03DDCE24 B 0x3DDD8CC
	0x03DDCE28 LDR X24, [X24 + 0x8]
	0x03DDCE2C CBZ X22, 0x3DDDAF4
	0x03DDCE30 MOV X0, X22
	0x03DDCE34 MOV X1, X31
	0x03DDCE38 BL 0x3DE89D4
	0x03DDCE3C ADRP X8, 0x389000
	0x03DDCE40 LDR X8, [X8 + 0x358]
	0x03DDCE44 MOV X22, X0
	0x03DDCE48 ADD X0, X23, 0x8
	0x03DDCE4C LDR X1, [X8]
	0x03DDCE50 BL 0x266C920
	0x03DDCE54 CBZ X22, 0x3DDDAF4
	0x03DDCE58 ADRP X10, 0x341000
	0x03DDCE5C LDR X8, [X22]
	0x03DDCE60 LDUR X23, [X0 + 0x84]
	0x03DDCE64 LDR X10, [X10 + 0xED0]
	0x03DDCE68 LDRH W9, [X8 + 0x12E]
	0x03DDCE6C LDR X1, [X10]
	0x03DDCE70 CBZ X9, 0x3DDCE94
	0x03DDCE74 LDR X10, [X8 + 0xB0]
	0x03DDCE78 ADD X10, X10, 0x8
	0x03DDCE7C LDUR X11, [X10 - 0x8]
	0x03DDCE80 CMP X11, X1
	0x03DDCE84 B.EQ 0x3DDD8D8
	0x03DDCE88 SUBS X9, X9, 0x1
	0x03DDCE8C ADD X10, X10, 0x10
	0x03DDCE90 B.NE 0x3DDCE7C
	0x03DDCE94 MOVZ W2, 0x2
	0x03DDCE98 MOV X0, X22
	0x03DDCE9C BL 0x1C5C788
	0x03DDCEA0 B 0x3DDD8E8
	0x03DDCEA4 LDR X24, [X24 + 0x8]
	0x03DDCEA8 CBZ X22, 0x3DDDAF4
	0x03DDCEAC MOV X0, X22
	0x03DDCEB0 MOV X1, X31
	0x03DDCEB4 BL 0x3DE89D4
	0x03DDCEB8 ADRP X8, 0x389000
	0x03DDCEBC LDR X8, [X8 + 0x358]
	0x03DDCEC0 MOV X22, X0
	0x03DDCEC4 ADD X0, X23, 0x8
	0x03DDCEC8 LDR X1, [X8]
	0x03DDCECC BL 0x266C920
	0x03DDCED0 CBZ X22, 0x3DDDAF4
	0x03DDCED4 ADRP X10, 0x341000
	0x03DDCED8 LDR X8, [X22]
	0x03DDCEDC LDUR X23, [X0 + 0x8C]
	0x03DDCEE0 LDR X10, [X10 + 0xED0]
	0x03DDCEE4 LDRH W9, [X8 + 0x12E]
	0x03DDCEE8 LDR X1, [X10]
	0x03DDCEEC CBZ X9, 0x3DDCF10
	0x03DDCEF0 LDR X10, [X8 + 0xB0]
	0x03DDCEF4 ADD X10, X10, 0x8
	0x03DDCEF8 LDUR X11, [X10 - 0x8]
	0x03DDCEFC CMP X11, X1
	0x03DDCF00 B.EQ 0x3DDD8F4
	0x03DDCF04 SUBS X9, X9, 0x1
	0x03DDCF08 ADD X10, X10, 0x10
	0x03DDCF0C B.NE 0x3DDCEF8
	0x03DDCF10 MOVZ W2, 0x2
	0x03DDCF14 MOV X0, X22
	0x03DDCF18 BL 0x1C5C788
	0x03DDCF1C B 0x3DDD904
	0x03DDCF20 LDR X24, [X24 + 0x8]
	0x03DDCF24 CBZ X22, 0x3DDDAF4
	0x03DDCF28 MOV X0, X22
	0x03DDCF2C MOV X1, X31
	0x03DDCF30 BL 0x3DE89D4
	0x03DDCF34 ADRP X8, 0x389000
	0x03DDCF38 LDR X8, [X8 + 0x358]
	0x03DDCF3C MOV X22, X0
	0x03DDCF40 ADD X0, X23, 0x8
	0x03DDCF44 LDR X1, [X8]
	0x03DDCF48 BL 0x266C920
	0x03DDCF4C CBZ X22, 0x3DDDAF4
	0x03DDCF50 ADRP X10, 0x341000
	0x03DDCF54 LDR X8, [X22]
	0x03DDCF58 LDUR X23, [X0 + 0x94]
	0x03DDCF5C LDR X10, [X10 + 0xED0]
	0x03DDCF60 LDRH W9, [X8 + 0x12E]
	0x03DDCF64 LDR X1, [X10]
	0x03DDCF68 CBZ X9, 0x3DDCF8C
	0x03DDCF6C LDR X10, [X8 + 0xB0]
	0x03DDCF70 ADD X10, X10, 0x8
	0x03DDCF74 LDUR X11, [X10 - 0x8]
	0x03DDCF78 CMP X11, X1
	0x03DDCF7C B.EQ 0x3DDD910
	0x03DDCF80 SUBS X9, X9, 0x1
	0x03DDCF84 ADD X10, X10, 0x10
	0x03DDCF88 B.NE 0x3DDCF74
	0x03DDCF8C MOVZ W2, 0x2
	0x03DDCF90 MOV X0, X22
	0x03DDCF94 BL 0x1C5C788
	0x03DDCF98 B 0x3DDD920
	0x03DDCF9C LDR X24, [X24 + 0x8]
	0x03DDCFA0 CBZ X22, 0x3DDDAF4
	0x03DDCFA4 MOV X0, X22
	0x03DDCFA8 MOV X1, X31
	0x03DDCFAC BL 0x3DE89D4
	0x03DDCFB0 ADRP X8, 0x389000
	0x03DDCFB4 LDR X8, [X8 + 0x358]
	0x03DDCFB8 MOV X22, X0
	0x03DDCFBC ADD X0, X23, 0x8
	0x03DDCFC0 LDR X1, [X8]
	0x03DDCFC4 BL 0x266C920
	0x03DDCFC8 CBZ X22, 0x3DDDAF4
	0x03DDCFCC ADRP X10, 0x341000
	0x03DDCFD0 LDR X8, [X22]
	0x03DDCFD4 LDUR X23, [X0 + 0x9C]
	0x03DDCFD8 LDR X10, [X10 + 0xED0]
	0x03DDCFDC LDRH W9, [X8 + 0x12E]
	0x03DDCFE0 LDR X1, [X10]
	0x03DDCFE4 CBZ X9, 0x3DDD008
	0x03DDCFE8 LDR X10, [X8 + 0xB0]
	0x03DDCFEC ADD X10, X10, 0x8
	0x03DDCFF0 LDUR X11, [X10 - 0x8]
	0x03DDCFF4 CMP X11, X1
	0x03DDCFF8 B.EQ 0x3DDD92C
	0x03DDCFFC SUBS X9, X9, 0x1
	0x03DDD000 ADD X10, X10, 0x10
	0x03DDD004 B.NE 0x3DDCFF0
	0x03DDD008 MOVZ W2, 0x2
	0x03DDD00C MOV X0, X22
	0x03DDD010 BL 0x1C5C788
	0x03DDD014 B 0x3DDD93C
	0x03DDD018 LDR X24, [X24 + 0x8]
	0x03DDD01C CBZ X22, 0x3DDDAF4
	0x03DDD020 MOV X0, X22
	0x03DDD024 MOV X1, X31
	0x03DDD028 BL 0x3DE89D4
	0x03DDD02C ADRP X8, 0x388000
	0x03DDD030 LDR X8, [X8 + 0x358]
	0x03DDD034 MOV X22, X0
	0x03DDD038 ADD X0, X23, 0x8
	0x03DDD03C LDR X1, [X8]
	0x03DDD040 BL 0x266C920
	0x03DDD044 CBZ X22, 0x3DDDAF4
	0x03DDD048 ADRP X10, 0x340000
	0x03DDD04C LDR X8, [X22]
	0x03DDD050 LDUR X23, [X0 + 0xA4]
	0x03DDD054 LDR X10, [X10 + 0xED0]
	0x03DDD058 LDRH W9, [X8 + 0x12E]
	0x03DDD05C LDR X1, [X10]
	0x03DDD060 CBZ X9, 0x3DDD084
	0x03DDD064 LDR X10, [X8 + 0xB0]
	0x03DDD068 ADD X10, X10, 0x8
	0x03DDD06C LDUR X11, [X10 - 0x8]
	0x03DDD070 CMP X11, X1
	0x03DDD074 B.EQ 0x3DDD948
	0x03DDD078 SUBS X9, X9, 0x1
	0x03DDD07C ADD X10, X10, 0x10
	0x03DDD080 B.NE 0x3DDD06C
	0x03DDD084 MOVZ W2, 0x2
	0x03DDD088 MOV X0, X22
	0x03DDD08C BL 0x1C5C788
	0x03DDD090 B 0x3DDD958
	0x03DDD094 LDR X24, [X24 + 0x8]
	0x03DDD098 CBZ X22, 0x3DDDAF4
	0x03DDD09C MOV X0, X22
	0x03DDD0A0 MOV X1, X31
	0x03DDD0A4 BL 0x3DE89D4
	0x03DDD0A8 ADRP X8, 0x388000
	0x03DDD0AC LDR X8, [X8 + 0x358]
	0x03DDD0B0 MOV X22, X0
	0x03DDD0B4 ADD X0, X23, 0x8
	0x03DDD0B8 LDR X1, [X8]
	0x03DDD0BC BL 0x266C920
	0x03DDD0C0 CBZ X22, 0x3DDDAF4
	0x03DDD0C4 ADRP X10, 0x340000
	0x03DDD0C8 LDR X8, [X22]
	0x03DDD0CC LDUR X23, [X0 + 0xAC]
	0x03DDD0D0 LDR X10, [X10 + 0xED0]
	0x03DDD0D4 LDRH W9, [X8 + 0x12E]
	0x03DDD0D8 LDR X1, [X10]
	0x03DDD0DC CBZ X9, 0x3DDD100
	0x03DDD0E0 LDR X10, [X8 + 0xB0]
	0x03DDD0E4 ADD X10, X10, 0x8
	0x03DDD0E8 LDUR X11, [X10 - 0x8]
	0x03DDD0EC CMP X11, X1
	0x03DDD0F0 B.EQ 0x3DDD964
	0x03DDD0F4 SUBS X9, X9, 0x1
	0x03DDD0F8 ADD X10, X10, 0x10
	0x03DDD0FC B.NE 0x3DDD0E8
	0x03DDD100 MOVZ W2, 0x2
	0x03DDD104 MOV X0, X22
	0x03DDD108 BL 0x1C5C788
	0x03DDD10C B 0x3DDD974
	0x03DDD110 LDR V0, [X24 + 0x8]
	0x03DDD114 MOVZ W8, 0x7F800000
	0x03DDD118 FMOV S1, W8
	0x03DDD11C MOVZ W9, 0x80000000
	0x03DDD120 FCVTZS W8, S0
	0x03DDD124 FCMP S0, S1
	0x03DDD128 CSEL W24, W9, W8, EQ
	0x03DDD12C CBZ X22, 0x3DDDAF4
	0x03DDD130 MOV X0, X22
	0x03DDD134 MOV X1, X31
	0x03DDD138 BL 0x3DE89D4
	0x03DDD13C ADRP X8, 0x388000
	0x03DDD140 LDR X8, [X8 + 0x358]
	0x03DDD144 MOV X22, X0
	0x03DDD148 ADD X0, X23, 0x8
	0x03DDD14C LDR X1, [X8]
	0x03DDD150 BL 0x266C920
	0x03DDD154 CBZ X22, 0x3DDDAF4
	0x03DDD158 ADRP X10, 0x340000
	0x03DDD15C LDR X8, [X22]
	0x03DDD160 LDR W23, [X0 + 0xB4]
	0x03DDD164 LDR X10, [X10 + 0xED0]
	0x03DDD168 LDRH W9, [X8 + 0x12E]
	0x03DDD16C LDR X1, [X10]
	0x03DDD170 CBZ X9, 0x3DDD194
	0x03DDD174 LDR X10, [X8 + 0xB0]
	0x03DDD178 ADD X10, X10, 0x8
	0x03DDD17C LDUR X11, [X10 - 0x8]
	0x03DDD180 CMP X11, X1
	0x03DDD184 B.EQ 0x3DDD980
	0x03DDD188 SUBS X9, X9, 0x1
	0x03DDD18C ADD X10, X10, 0x10
	0x03DDD190 B.NE 0x3DDD17C
	0x03DDD194 MOVZ W2, 0x4
	0x03DDD198 MOV X0, X22
	0x03DDD19C BL 0x1C5C788
	0x03DDD1A0 B 0x3DDD990
	0x03DDD1A4 LDR X24, [X24 + 0x8]
	0x03DDD1A8 CBZ X22, 0x3DDDAF4
	0x03DDD1AC MOV X0, X22
	0x03DDD1B0 MOV X1, X31
	0x03DDD1B4 BL 0x3DE89D4
	0x03DDD1B8 ADRP X8, 0x388000
	0x03DDD1BC LDR X8, [X8 + 0x358]
	0x03DDD1C0 MOV X22, X0
	0x03DDD1C4 ADD X0, X23, 0x8
	0x03DDD1C8 LDR X1, [X8]
	0x03DDD1CC BL 0x266C920
	0x03DDD1D0 CBZ X22, 0x3DDDAF4
	0x03DDD1D4 ADRP X10, 0x340000
	0x03DDD1D8 LDR X8, [X22]
	0x03DDD1DC LDR X23, [X0 + 0xB8]
	0x03DDD1E0 LDR X10, [X10 + 0xED0]
	0x03DDD1E4 LDRH W9, [X8 + 0x12E]
	0x03DDD1E8 LDR X1, [X10]
	0x03DDD1EC CBZ X9, 0x3DDD210
	0x03DDD1F0 LDR X10, [X8 + 0xB0]
	0x03DDD1F4 ADD X10, X10, 0x8
	0x03DDD1F8 LDUR X11, [X10 - 0x8]
	0x03DDD1FC CMP X11, X1
	0x03DDD200 B.EQ 0x3DDD9B8
	0x03DDD204 SUBS X9, X9, 0x1
	0x03DDD208 ADD X10, X10, 0x10
	0x03DDD20C B.NE 0x3DDD1F8
	0x03DDD210 MOVZ W2, 0x2
	0x03DDD214 MOV X0, X22
	0x03DDD218 BL 0x1C5C788
	0x03DDD21C B 0x3DDD9C8
	0x03DDD220 LDR X24, [X24 + 0x8]
	0x03DDD224 CBZ X22, 0x3DDDAF4
	0x03DDD228 MOV X0, X22
	0x03DDD22C MOV X1, X31
	0x03DDD230 BL 0x3DE89D4
	0x03DDD234 ADRP X8, 0x388000
	0x03DDD238 LDR X8, [X8 + 0x358]
	0x03DDD23C MOV X22, X0
	0x03DDD240 ADD X0, X23, 0x8
	0x03DDD244 LDR X1, [X8]
	0x03DDD248 BL 0x266C920
	0x03DDD24C CBZ X22, 0x3DDDAF4
	0x03DDD250 ADRP X10, 0x340000
	0x03DDD254 LDR X8, [X22]
	0x03DDD258 LDR X23, [X0 + 0xC0]
	0x03DDD25C LDR X10, [X10 + 0xED0]
	0x03DDD260 LDRH W9, [X8 + 0x12E]
	0x03DDD264 LDR X1, [X10]
	0x03DDD268 CBZ X9, 0x3DDD28C
	0x03DDD26C LDR X10, [X8 + 0xB0]
	0x03DDD270 ADD X10, X10, 0x8
	0x03DDD274 LDUR X11, [X10 - 0x8]
	0x03DDD278 CMP X11, X1
	0x03DDD27C B.EQ 0x3DDD9D4
	0x03DDD280 SUBS X9, X9, 0x1
	0x03DDD284 ADD X10, X10, 0x10
	0x03DDD288 B.NE 0x3DDD274
	0x03DDD28C MOVZ W2, 0x2
	0x03DDD290 MOV X0, X22
	0x03DDD294 BL 0x1C5C788
	0x03DDD298 B 0x3DDD9E4
	0x03DDD29C LDR X24, [X24 + 0x8]
	0x03DDD2A0 CBZ X22, 0x3DDDAF4
	0x03DDD2A4 MOV X0, X22
	0x03DDD2A8 MOV X1, X31
	0x03DDD2AC BL 0x3DE89D4
	0x03DDD2B0 ADRP X8, 0x388000
	0x03DDD2B4 LDR X8, [X8 + 0x358]
	0x03DDD2B8 MOV X22, X0
	0x03DDD2BC ADD X0, X23, 0x8
	0x03DDD2C0 LDR X1, [X8]
	0x03DDD2C4 BL 0x266C920
	0x03DDD2C8 CBZ X22, 0x3DDDAF4
	0x03DDD2CC ADRP X10, 0x340000
	0x03DDD2D0 LDR X8, [X22]
	0x03DDD2D4 LDR X23, [X0 + 0xC8]
	0x03DDD2D8 LDR X10, [X10 + 0xED0]
	0x03DDD2DC LDRH W9, [X8 + 0x12E]
	0x03DDD2E0 LDR X1, [X10]
	0x03DDD2E4 CBZ X9, 0x3DDD308
	0x03DDD2E8 LDR X10, [X8 + 0xB0]
	0x03DDD2EC ADD X10, X10, 0x8
	0x03DDD2F0 LDUR X11, [X10 - 0x8]
	0x03DDD2F4 CMP X11, X1
	0x03DDD2F8 B.EQ 0x3DDD9F0
	0x03DDD2FC SUBS X9, X9, 0x1
	0x03DDD300 ADD X10, X10, 0x10
	0x03DDD304 B.NE 0x3DDD2F0
	0x03DDD308 MOVZ W2, 0x2
	0x03DDD30C MOV X0, X22
	0x03DDD310 BL 0x1C5C788
	0x03DDD314 B 0x3DDDA00
	0x03DDD318 MOVI V0.2D, 0x0
	0x03DDD31C STP V0, V0, [X31 + 0xB0]
	0x03DDD320 LDP V0, V1, [X31 + 0xB0]
	0x03DDD324 STP V0, V1, [X31 + 0x90]
	0x03DDD328 LDP V0, V1, [X31 + 0x90]
	0x03DDD32C STP V0, V1, [X31 + 0xD0]
	0x03DDD330 CBZ X22, 0x3DDDAF4
	0x03DDD334 MOV X0, X22
	0x03DDD338 MOV X1, X31
	0x03DDD33C BL 0x3DE89D4
	0x03DDD340 ADRP X8, 0x388000
	0x03DDD344 LDR X8, [X8 + 0x360]
	0x03DDD348 MOV X22, X0
	0x03DDD34C ADD X0, X23, 0x28
	0x03DDD350 LDR X1, [X8]
	0x03DDD354 BL 0x266DB18
	0x03DDD358 LDP V1, V0, [X0 + 0x10]
	0x03DDD35C LDP V2, V3, [X31 + 0xD0]
	0x03DDD360 STP V1, V0, [X31 + 0x70]
	0x03DDD364 STP V2, V3, [X31 + 0x50]
	0x03DDD368 CBZ X22, 0x3DDDAF4
	0x03DDD36C LDP V0, V1, [X31 + 0x70]
	0x03DDD370 LDP V2, V3, [X31 + 0x50]
	0x03DDD374 ADRP X10, 0x340000
	0x03DDD378 STP V0, V1, [X31 + 0x30]
	0x03DDD37C STP V2, V3, [X31 + 0x10]
	0x03DDD380 LDR X8, [X22]
	0x03DDD384 LDR X10, [X10 + 0xED0]
	0x03DDD388 LDRH W9, [X8 + 0x12E]
	0x03DDD38C LDR X1, [X10]
	0x03DDD390 CBZ X9, 0x3DDD3B4
	0x03DDD394 LDR X10, [X8 + 0xB0]
	0x03DDD398 ADD X10, X10, 0x8
	0x03DDD39C LDUR X11, [X10 - 0x8]
	0x03DDD3A0 CMP X11, X1
	0x03DDD3A4 B.EQ 0x3DDD3C4
	0x03DDD3A8 SUBS X9, X9, 0x1
	0x03DDD3AC ADD X10, X10, 0x10
	0x03DDD3B0 B.NE 0x3DDD39C
	0x03DDD3B4 MOVZ W2, 0x5
	0x03DDD3B8 MOV X0, X22
	0x03DDD3BC BL 0x1C5C788
	0x03DDD3C0 B 0x3DDD3D4
	0x03DDD3C4 LDR W9, [X10]
	0x03DDD3C8 ADD W9, W9, 0x5
	0x03DDD3CC ADD X8, X8, W9, 0x4, SXTW
	0x03DDD3D0 ADD X0, X8, 0x138
	0x03DDD3D4 LDP V0, V1, [X31 + 0x30]
	0x03DDD3D8 LDP V2, V3, [X31 + 0x10]
	0x03DDD3DC LDR X8, [X0]
	0x03DDD3E0 MOVZ W9, 0x1
	0x03DDD3E4 STP V0, V1, [X31 + 0x110]
	0x03DDD3E8 STP V2, V3, [X31 + 0xF0]
	0x03DDD3EC LDR X7, [X0 + 0x8]
	0x03DDD3F0 MOVK W9, 0x30000
	0x03DDD3F4 ORR W1, W9, 0x40000
	0x03DDD3F8 ADD X2, X31, 0x110
	0x03DDD3FC ADD X3, X31, 0xF0
	0x03DDD400 MOV X0, X22
	0x03DDD404 B 0x3DDDAB4
	0x03DDD408 LDR W9, [X10]
	0x03DDD40C ADD W9, W9, 0x3
	0x03DDD410 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD414 ADD X0, X8, 0x138
	0x03DDD418 LDP X8, X5, [X0]
	0x03DDD41C MOVZ W1, 0x10000
	0x03DDD420 MOV X0, X24
	0x03DDD424 MOV V0.16B, V15.16B
	0x03DDD428 MOV V1.16B, V14.16B
	0x03DDD42C MOV V2.16B, V13.16B
	0x03DDD430 MOV V3.16B, V12.16B
	0x03DDD434 MOV V4.16B, V8.16B
	0x03DDD438 MOV V5.16B, V9.16B
	0x03DDD43C MOV V6.16B, V10.16B
	0x03DDD440 MOV V7.16B, V11.16B
	0x03DDD444 MOV W2, W21
	0x03DDD448 MOV W3, W20
	0x03DDD44C MOV X4, X19
	0x03DDD450 BLR X8
	0x03DDD454 TBZ X0, 0x0, 0x3DDD48C
	0x03DDD458 MOV X0, X22
	0x03DDD45C MOV X1, X31
	0x03DDD460 BL 0x3DEC0D4
	0x03DDD464 TBNZ X0, 0x3, 0x3DDD484
	0x03DDD468 MOV X0, X22
	0x03DDD46C MOV X1, X31
	0x03DDD470 BL 0x3DEC0D4
	0x03DDD474 ORR W1, W0, 0x8
	0x03DDD478 MOV X0, X22
	0x03DDD47C MOV X2, X31
	0x03DDD480 BL 0x3DEC0FC
	0x03DDD484 MOVZ W0, 0x1
	0x03DDD488 B 0x3DDDAC4
	0x03DDD48C MOV W0, W31
	0x03DDD490 B 0x3DDDAC4
	0x03DDD494 LDR W9, [X10]
	0x03DDD498 ADD W9, W9, 0x2
	0x03DDD49C ADD X8, X8, W9, 0x4, SXTW
	0x03DDD4A0 ADD X0, X8, 0x138
	0x03DDD4A4 LDP X8, X7, [X0]
	0x03DDD4A8 ORR W1, W31, 0x10001
	0x03DDD4AC B 0x3DDDAA8
	0x03DDD4B0 LDR W9, [X10]
	0x03DDD4B4 ADD W9, W9, 0x2
	0x03DDD4B8 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD4BC ADD X0, X8, 0x138
	0x03DDD4C0 LDP X8, X7, [X0]
	0x03DDD4C4 ORR W9, W31, 0x10001
	0x03DDD4C8 ADD W1, W9, 0x1
	0x03DDD4CC B 0x3DDDAA8
	0x03DDD4D0 LDR W9, [X10]
	0x03DDD4D4 ADD W9, W9, 0x6
	0x03DDD4D8 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD4DC ADD X0, X8, 0x138
	0x03DDD4E0 LDP X8, X9, [X0]
	0x03DDD4E4 ORR W10, W31, 0x10001
	0x03DDD4E8 ORR W1, W10, 0x4
	0x03DDD4EC STR X9, [X31 + 0x8]
	0x03DDD4F0 MOV X0, X22
	0x03DDD4F4 MOV X2, X26
	0x03DDD4F8 MOV X3, X23
	0x03DDD4FC MOV X4, X25
	0x03DDD500 MOV X5, X24
	0x03DDD504 MOV W6, W21
	0x03DDD508 MOV W7, W20
	0x03DDD50C STR X19, [X31]
	0x03DDD510 BLR X8
	0x03DDD514 B 0x3DDDAC4
	0x03DDD518 LDR W9, [X10]
	0x03DDD51C ADD W9, W9, 0x4
	0x03DDD520 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD524 ADD X0, X8, 0x138
	0x03DDD528 LDP X8, X7, [X0]
	0x03DDD52C ORR W9, W31, 0x10001
	0x03DDD530 ADD W1, W9, 0x5
	0x03DDD534 B 0x3DDD998
	0x03DDD538 LDR W9, [X10]
	0x03DDD53C ADD W9, W9, 0x2
	0x03DDD540 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD544 ADD X0, X8, 0x138
	0x03DDD548 LDP X8, X7, [X0]
	0x03DDD54C ORR W9, W31, 0x10001
	0x03DDD550 ORR W1, W9, 0x6
	0x03DDD554 B 0x3DDDAA8
	0x03DDD558 LDR W9, [X10]
	0x03DDD55C ADD W9, W9, 0x4
	0x03DDD560 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD564 ADD X0, X8, 0x138
	0x03DDD568 LDP X8, X7, [X0]
	0x03DDD56C ORR W9, W31, 0x10001
	0x03DDD570 ADD W1, W9, 0x7
	0x03DDD574 B 0x3DDD998
	0x03DDD578 LDR W9, [X10]
	0x03DDD57C ADD W9, W9, 0x3
	0x03DDD580 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD584 ADD X0, X8, 0x138
	0x03DDD588 LDP X8, X5, [X0]
	0x03DDD58C ORR W9, W31, 0x10001
	0x03DDD590 ORR W1, W9, 0x8
	0x03DDD594 MOV X0, X22
	0x03DDD598 MOV V0.16B, V15.16B
	0x03DDD59C MOV V1.16B, V14.16B
	0x03DDD5A0 MOV V2.16B, V13.16B
	0x03DDD5A4 MOV V3.16B, V12.16B
	0x03DDD5A8 MOV V4.16B, V8.16B
	0x03DDD5AC MOV V5.16B, V9.16B
	0x03DDD5B0 MOV V6.16B, V10.16B
	0x03DDD5B4 MOV V7.16B, V11.16B
	0x03DDD5B8 MOV W2, W21
	0x03DDD5BC MOV W3, W20
	0x03DDD5C0 MOV X4, X19
	0x03DDD5C4 BLR X8
	0x03DDD5C8 B 0x3DDDAC4
	0x03DDD5CC LDRSW X9, [X10]
	0x03DDD5D0 ADD X8, X8, X9, 0x4, LSL
	0x03DDD5D4 ADD X0, X8, 0x138
	0x03DDD5D8 LDP X8, X5, [X0]
	0x03DDD5DC ORR W9, W31, 0x10001
	0x03DDD5E0 ADD W1, W9, 0x9
	0x03DDD5E4 B 0x3DDD7A0
	0x03DDD5E8 LDR W9, [X10]
	0x03DDD5EC ADD W9, W9, 0x4
	0x03DDD5F0 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD5F4 ADD X0, X8, 0x138
	0x03DDD5F8 LDP X8, X7, [X0]
	0x03DDD5FC MOVZ W9, 0xA
	0x03DDD600 ORR W10, W31, 0x10001
	0x03DDD604 ORR W1, W10, W9, 0x0
	0x03DDD608 B 0x3DDD998
	0x03DDD60C LDR W9, [X10]
	0x03DDD610 ADD W9, W9, 0x4
	0x03DDD614 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD618 ADD X0, X8, 0x138
	0x03DDD61C LDP X8, X7, [X0]
	0x03DDD620 ORR W9, W31, 0x10001
	0x03DDD624 ADD W1, W9, 0xB
	0x03DDD628 B 0x3DDD998
	0x03DDD62C LDR W9, [X10]
	0x03DDD630 ADD W9, W9, 0x2
	0x03DDD634 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD638 ADD X0, X8, 0x138
	0x03DDD63C LDP X8, X7, [X0]
	0x03DDD640 ORR W9, W31, 0x10001
	0x03DDD644 ORR W1, W9, 0xC
	0x03DDD648 B 0x3DDDAA8
	0x03DDD64C LDR W9, [X10]
	0x03DDD650 ADD W9, W9, 0x4
	0x03DDD654 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD658 ADD X0, X8, 0x138
	0x03DDD65C LDP X8, X7, [X0]
	0x03DDD660 MOVZ W1, 0x20000
	0x03DDD664 B 0x3DDD998
	0x03DDD668 LDR W9, [X10]
	0x03DDD66C ADD W9, W9, 0x4
	0x03DDD670 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD674 ADD X0, X8, 0x138
	0x03DDD678 LDP X8, X7, [X0]
	0x03DDD67C ORR W9, W31, 0x10001
	0x03DDD680 ADD W1, W9, 0x10000
	0x03DDD684 B 0x3DDD998
	0x03DDD688 LDR W9, [X10]
	0x03DDD68C ADD W9, W9, 0x4
	0x03DDD690 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD694 ADD X0, X8, 0x138
	0x03DDD698 LDP X8, X7, [X0]
	0x03DDD69C SUB W1, W26, 0x1E
	0x03DDD6A0 B 0x3DDD998
	0x03DDD6A4 LDRSW X9, [X10]
	0x03DDD6A8 ADD X8, X8, X9, 0x4, LSL
	0x03DDD6AC ADD X0, X8, 0x138
	0x03DDD6B0 LDP X8, X5, [X0]
	0x03DDD6B4 SUB W1, W26, 0x1D
	0x03DDD6B8 B 0x3DDD7A0
	0x03DDD6BC LDRSW X9, [X10]
	0x03DDD6C0 ADD X8, X8, X9, 0x4, LSL
	0x03DDD6C4 ADD X0, X8, 0x138
	0x03DDD6C8 LDP X8, X5, [X0]
	0x03DDD6CC SUB W1, W26, 0x1C
	0x03DDD6D0 B 0x3DDD7A0
	0x03DDD6D4 LDRSW X9, [X10]
	0x03DDD6D8 ADD X8, X8, X9, 0x4, LSL
	0x03DDD6DC ADD X0, X8, 0x138
	0x03DDD6E0 LDP X8, X5, [X0]
	0x03DDD6E4 SUB W1, W26, 0x1B
	0x03DDD6E8 B 0x3DDD7A0
	0x03DDD6EC LDRSW X9, [X10]
	0x03DDD6F0 ADD X8, X8, X9, 0x4, LSL
	0x03DDD6F4 ADD X0, X8, 0x138
	0x03DDD6F8 LDP X8, X5, [X0]
	0x03DDD6FC SUB W1, W26, 0x1A
	0x03DDD700 B 0x3DDD7A0
	0x03DDD704 LDR W9, [X10]
	0x03DDD708 ADD W9, W9, 0x2
	0x03DDD70C ADD X8, X8, W9, 0x4, SXTW
	0x03DDD710 ADD X0, X8, 0x138
	0x03DDD714 LDP X8, X7, [X0]
	0x03DDD718 SUB W1, W26, 0x19
	0x03DDD71C B 0x3DDDAA8
	0x03DDD720 LDR W9, [X10]
	0x03DDD724 ADD W9, W9, 0x4
	0x03DDD728 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD72C ADD X0, X8, 0x138
	0x03DDD730 LDP X8, X7, [X0]
	0x03DDD734 SUB W1, W26, 0x18
	0x03DDD738 B 0x3DDD998
	0x03DDD73C LDR W9, [X10]
	0x03DDD740 ADD W9, W9, 0x2
	0x03DDD744 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD748 ADD X0, X8, 0x138
	0x03DDD74C LDP X8, X7, [X0]
	0x03DDD750 SUB W1, W26, 0x17
	0x03DDD754 B 0x3DDDAA8
	0x03DDD758 LDR W9, [X10]
	0x03DDD75C ADD W9, W9, 0x4
	0x03DDD760 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD764 ADD X0, X8, 0x138
	0x03DDD768 LDP X8, X7, [X0]
	0x03DDD76C SUB W1, W26, 0x16
	0x03DDD770 B 0x3DDD998
	0x03DDD774 LDRSW X9, [X10]
	0x03DDD778 ADD X8, X8, X9, 0x4, LSL
	0x03DDD77C ADD X0, X8, 0x138
	0x03DDD780 LDP X8, X5, [X0]
	0x03DDD784 SUB W1, W26, 0x15
	0x03DDD788 B 0x3DDD7A0
	0x03DDD78C LDRSW X9, [X10]
	0x03DDD790 ADD X8, X8, X9, 0x4, LSL
	0x03DDD794 ADD X0, X8, 0x138
	0x03DDD798 LDP X8, X5, [X0]
	0x03DDD79C SUB W1, W26, 0x14
	0x03DDD7A0 MOV X0, X22
	0x03DDD7A4 MOV V0.16B, V9.16B
	0x03DDD7A8 MOV V1.16B, V8.16B
	0x03DDD7AC MOV W2, W21
	0x03DDD7B0 MOV W3, W20
	0x03DDD7B4 MOV X4, X19
	0x03DDD7B8 BLR X8
	0x03DDD7BC B 0x3DDDAC4
	0x03DDD7C0 LDR W9, [X10]
	0x03DDD7C4 ADD W9, W9, 0x4
	0x03DDD7C8 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD7CC ADD X0, X8, 0x138
	0x03DDD7D0 LDP X8, X7, [X0]
	0x03DDD7D4 SUB W1, W26, 0x13
	0x03DDD7D8 B 0x3DDD998
	0x03DDD7DC LDR W9, [X10]
	0x03DDD7E0 ADD W9, W9, 0x2
	0x03DDD7E4 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD7E8 ADD X0, X8, 0x138
	0x03DDD7EC LDP X8, X7, [X0]
	0x03DDD7F0 SUB W1, W26, 0x12
	0x03DDD7F4 B 0x3DDDAA8
	0x03DDD7F8 LDR W9, [X10]
	0x03DDD7FC ADD W9, W9, 0x4
	0x03DDD800 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD804 ADD X0, X8, 0x138
	0x03DDD808 LDP X8, X7, [X0]
	0x03DDD80C SUB W1, W26, 0x11
	0x03DDD810 B 0x3DDD998
	0x03DDD814 LDR W9, [X10]
	0x03DDD818 ADD W9, W9, 0x2
	0x03DDD81C ADD X8, X8, W9, 0x4, SXTW
	0x03DDD820 ADD X0, X8, 0x138
	0x03DDD824 LDP X8, X7, [X0]
	0x03DDD828 SUB W1, W26, 0x10
	0x03DDD82C B 0x3DDDAA8
	0x03DDD830 LDR W9, [X10]
	0x03DDD834 ADD W9, W9, 0x2
	0x03DDD838 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD83C ADD X0, X8, 0x138
	0x03DDD840 LDP X8, X7, [X0]
	0x03DDD844 SUB W1, W26, 0xF
	0x03DDD848 B 0x3DDDAA8
	0x03DDD84C LDR W9, [X10]
	0x03DDD850 ADD W9, W9, 0x2
	0x03DDD854 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD858 ADD X0, X8, 0x138
	0x03DDD85C LDP X8, X7, [X0]
	0x03DDD860 SUB W1, W26, 0xE
	0x03DDD864 B 0x3DDDAA8
	0x03DDD868 LDR W9, [X10]
	0x03DDD86C ADD W9, W9, 0x2
	0x03DDD870 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD874 ADD X0, X8, 0x138
	0x03DDD878 LDP X8, X7, [X0]
	0x03DDD87C SUB W1, W26, 0xD
	0x03DDD880 B 0x3DDDAA8
	0x03DDD884 LDR W9, [X10]
	0x03DDD888 ADD W9, W9, 0x2
	0x03DDD88C ADD X8, X8, W9, 0x4, SXTW
	0x03DDD890 ADD X0, X8, 0x138
	0x03DDD894 LDP X8, X7, [X0]
	0x03DDD898 SUB W1, W26, 0xC
	0x03DDD89C B 0x3DDDAA8
	0x03DDD8A0 LDR W9, [X10]
	0x03DDD8A4 ADD W9, W9, 0x2
	0x03DDD8A8 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD8AC ADD X0, X8, 0x138
	0x03DDD8B0 LDP X8, X7, [X0]
	0x03DDD8B4 SUB W1, W26, 0xB
	0x03DDD8B8 B 0x3DDDAA8
	0x03DDD8BC LDR W9, [X10]
	0x03DDD8C0 ADD W9, W9, 0x2
	0x03DDD8C4 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD8C8 ADD X0, X8, 0x138
	0x03DDD8CC LDP X8, X7, [X0]
	0x03DDD8D0 SUB W1, W26, 0xA
	0x03DDD8D4 B 0x3DDDAA8
	0x03DDD8D8 LDR W9, [X10]
	0x03DDD8DC ADD W9, W9, 0x2
	0x03DDD8E0 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD8E4 ADD X0, X8, 0x138
	0x03DDD8E8 LDP X8, X7, [X0]
	0x03DDD8EC SUB W1, W26, 0x9
	0x03DDD8F0 B 0x3DDDAA8
	0x03DDD8F4 LDR W9, [X10]
	0x03DDD8F8 ADD W9, W9, 0x2
	0x03DDD8FC ADD X8, X8, W9, 0x4, SXTW
	0x03DDD900 ADD X0, X8, 0x138
	0x03DDD904 LDP X8, X7, [X0]
	0x03DDD908 SUB W1, W26, 0x8
	0x03DDD90C B 0x3DDDAA8
	0x03DDD910 LDR W9, [X10]
	0x03DDD914 ADD W9, W9, 0x2
	0x03DDD918 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD91C ADD X0, X8, 0x138
	0x03DDD920 LDP X8, X7, [X0]
	0x03DDD924 SUB W1, W26, 0x7
	0x03DDD928 B 0x3DDDAA8
	0x03DDD92C LDR W9, [X10]
	0x03DDD930 ADD W9, W9, 0x2
	0x03DDD934 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD938 ADD X0, X8, 0x138
	0x03DDD93C LDP X8, X7, [X0]
	0x03DDD940 SUB W1, W26, 0x6
	0x03DDD944 B 0x3DDDAA8
	0x03DDD948 LDR W9, [X10]
	0x03DDD94C ADD W9, W9, 0x2
	0x03DDD950 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD954 ADD X0, X8, 0x138
	0x03DDD958 LDP X8, X7, [X0]
	0x03DDD95C SUB W1, W26, 0x5
	0x03DDD960 B 0x3DDDAA8
	0x03DDD964 LDR W9, [X10]
	0x03DDD968 ADD W9, W9, 0x2
	0x03DDD96C ADD X8, X8, W9, 0x4, SXTW
	0x03DDD970 ADD X0, X8, 0x138
	0x03DDD974 LDP X8, X7, [X0]
	0x03DDD978 SUB W1, W26, 0x4
	0x03DDD97C B 0x3DDDAA8
	0x03DDD980 LDR W9, [X10]
	0x03DDD984 ADD W9, W9, 0x4
	0x03DDD988 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD98C ADD X0, X8, 0x138
	0x03DDD990 LDP X8, X7, [X0]
	0x03DDD994 SUB W1, W26, 0x3
	0x03DDD998 MOV X0, X22
	0x03DDD99C MOV W2, W23
	0x03DDD9A0 MOV W3, W24
	0x03DDD9A4 MOV W4, W21
	0x03DDD9A8 MOV W5, W20
	0x03DDD9AC MOV X6, X19
	0x03DDD9B0 BLR X8
	0x03DDD9B4 B 0x3DDDAC4
	0x03DDD9B8 LDR W9, [X10]
	0x03DDD9BC ADD W9, W9, 0x2
	0x03DDD9C0 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD9C4 ADD X0, X8, 0x138
	0x03DDD9C8 LDP X8, X7, [X0]
	0x03DDD9CC SUB W1, W26, 0x2
	0x03DDD9D0 B 0x3DDDAA8
	0x03DDD9D4 LDR W9, [X10]
	0x03DDD9D8 ADD W9, W9, 0x2
	0x03DDD9DC ADD X8, X8, W9, 0x4, SXTW
	0x03DDD9E0 ADD X0, X8, 0x138
	0x03DDD9E4 LDP X8, X7, [X0]
	0x03DDD9E8 SUB W1, W26, 0x1
	0x03DDD9EC B 0x3DDDAA8
	0x03DDD9F0 LDR W9, [X10]
	0x03DDD9F4 ADD W9, W9, 0x2
	0x03DDD9F8 ADD X8, X8, W9, 0x4, SXTW
	0x03DDD9FC ADD X0, X8, 0x138
	0x03DDDA00 LDP X8, X7, [X0]
	0x03DDDA04 MOVZ W1, 0x20
	0x03DDDA08 MOVK W1, 0x20000
	0x03DDDA0C B 0x3DDDAA8
	0x03DDDA10 MOV X24, X31
	0x03DDDA14 CBZ X22, 0x3DDDAF4
	0x03DDDA18 MOV X0, X22
	0x03DDDA1C MOV X1, X31
	0x03DDDA20 BL 0x3DE89D4
	0x03DDDA24 ADRP X8, 0x388000
	0x03DDDA28 LDR X8, [X8 + 0x368]
	0x03DDDA2C MOV X22, X0
	0x03DDDA30 MOV X0, X23
	0x03DDDA34 LDR X1, [X8]
	0x03DDDA38 BL 0x266C4A0
	0x03DDDA3C CBZ X22, 0x3DDDAF4
	0x03DDDA40 ADRP X10, 0x340000
	0x03DDDA44 LDR X8, [X22]
	0x03DDDA48 LDR X23, [X0 + 0x40]
	0x03DDDA4C LDR X10, [X10 + 0xED0]
	0x03DDDA50 LDRH W9, [X8 + 0x12E]
	0x03DDDA54 LDR X1, [X10]
	0x03DDDA58 CBZ X9, 0x3DDDA7C
	0x03DDDA5C LDR X10, [X8 + 0xB0]
	0x03DDDA60 ADD X10, X10, 0x8
	0x03DDDA64 LDUR X11, [X10 - 0x8]
	0x03DDDA68 CMP X11, X1
	0x03DDDA6C B.EQ 0x3DDDA8C
	0x03DDDA70 SUBS X9, X9, 0x1
	0x03DDDA74 ADD X10, X10, 0x10
	0x03DDDA78 B.NE 0x3DDDA64
	0x03DDDA7C MOVZ W2, 0x7
	0x03DDDA80 MOV X0, X22
	0x03DDDA84 BL 0x1C5C788
	0x03DDDA88 B 0x3DDDA9C
	0x03DDDA8C LDR W9, [X10]
	0x03DDDA90 ADD W9, W9, 0x7
	0x03DDDA94 ADD X8, X8, W9, 0x4, SXTW
	0x03DDDA98 ADD X0, X8, 0x138
	0x03DDDA9C LDP X8, X7, [X0]
	0x03DDDAA0 ORR W9, W31, 0x10001
	0x03DDDAA4 ADD W1, W9, 0x3
	0x03DDDAA8 MOV X0, X22
	0x03DDDAAC MOV X2, X23
	0x03DDDAB0 MOV X3, X24
	0x03DDDAB4 MOV W4, W21
	0x03DDDAB8 MOV W5, W20
	0x03DDDABC MOV X6, X19
	0x03DDDAC0 BLR X8
	0x03DDDAC4 LDP X20, X19, [X31 + 0x1B0]
	0x03DDDAC8 LDP X22, X21, [X31 + 0x1A0]
	0x03DDDACC LDP X24, X23, [X31 + 0x190]
	0x03DDDAD0 LDP X26, X25, [X31 + 0x180]
	0x03DDDAD4 LDP X29, X30, [X31 + 0x170]
	0x03DDDAD8 LDP D9, D8, [X31 + 0x160]
	0x03DDDADC LDP D11, D10, [X31 + 0x150]
	0x03DDDAE0 LDP D13, D12, [X31 + 0x140]
	0x03DDDAE4 LDP D15, D14, [X31 + 0x130]
	0x03DDDAE8 AND W0, W0, 0x1
	0x03DDDAEC ADD X31, X31, 0x1C0
	0x03DDDAF0 RET
	0x03DDDAF4 BL 0x1C16F20
	0x03DDDAF8 STR X30, [X31 - 0x30]!
	0x03DDDAFC STP X22, X21, [X31 + 0x10]
	0x03DDDB00 STP X20, X19, [X31 + 0x20]
	0x03DDDB04 ADRP X22, 0x60B000
	0x03DDDB08 ADRP X21, 0x388000
	0x03DDDB0C LDRB W8, [X22 + 0x1BD]
	0x03DDDB10 LDR X21, [X21 + 0x310]
	0x03DDDB14 MOV X19, X1
	0x03DDDB18 MOV X20, X0
	0x03DDDB1C TBNZ X8, 0x0, 0x3DDDB34
	0x03DDDB20 ADRP X0, 0x388000
	0x03DDDB24 LDR X0, [X0 + 0x310]
	0x03DDDB28 BL 0x1C16CF4
	0x03DDDB2C MOVZ W8, 0x1
	0x03DDDB30 STRB W8, [X22 + 0x1BD]
	0x03DDDB34 LDR X1, [X21]
	0x03DDDB38 ADD X0, X20, 0x18
	0x03DDDB3C BL 0x266D23C
	0x03DDDB40 LDR V0, [X19]
	0x03DDDB44 LDR W8, [X19 + 0x10]
	0x03DDDB48 LDP X20, X19, [X31 + 0x20]
	0x03DDDB4C LDP X22, X21, [X31 + 0x10]
	0x03DDDB50 STUR V0, [X0 + 0x28]
	0x03DDDB54 STR W8, [X0 + 0x38]
	0x03DDDB58 LDR X30, [X31], #0x30
	0x03DDDB5C RET
	0x03DDDB60 STR X30, [X31 - 0x30]!
	0x03DDDB64 STP X22, X21, [X31 + 0x10]
	0x03DDDB68 STP X20, X19, [X31 + 0x20]
	0x03DDDB6C ADRP X22, 0x60B000
	0x03DDDB70 ADRP X21, 0x388000
	0x03DDDB74 LDRB W8, [X22 + 0x1BE]
	0x03DDDB78 LDR X21, [X21 + 0x310]
	0x03DDDB7C MOV X19, X1
	0x03DDDB80 MOV X20, X0
	0x03DDDB84 TBNZ X8, 0x0, 0x3DDDB9C
	0x03DDDB88 ADRP X0, 0x388000
	0x03DDDB8C LDR X0, [X0 + 0x310]
	0x03DDDB90 BL 0x1C16CF4
	0x03DDDB94 MOVZ W8, 0x1
	0x03DDDB98 STRB W8, [X22 + 0x1BE]
	0x03DDDB9C LDR X1, [X21]
	0x03DDDBA0 ADD X0, X20, 0x18
	0x03DDDBA4 BL 0x266D23C
	0x03DDDBA8 LDR V0, [X19]
	0x03DDDBAC LDR X8, [X19 + 0x10]
	0x03DDDBB0 LDP X20, X19, [X31 + 0x20]
	0x03DDDBB4 LDP X22, X21, [X31 + 0x10]
	0x03DDDBB8 STUR V0, [X0 + 0x3C]
	0x03DDDBBC STUR X8, [X0 + 0x4C]
	0x03DDDBC0 LDR X30, [X31], #0x30
	0x03DDDBC4 RET
	0x03DDDBC8 STR X30, [X31 - 0x30]!
	0x03DDDBCC STP X22, X21, [X31 + 0x10]
	0x03DDDBD0 STP X20, X19, [X31 + 0x20]
	0x03DDDBD4 ADRP X22, 0x60B000
	0x03DDDBD8 ADRP X21, 0x388000
	0x03DDDBDC LDRB W8, [X22 + 0x1BF]
	0x03DDDBE0 LDR X21, [X21 + 0x310]
	0x03DDDBE4 MOV X19, X1
	0x03DDDBE8 MOV X20, X0
	0x03DDDBEC TBNZ X8, 0x0, 0x3DDDC04
	0x03DDDBF0 ADRP X0, 0x388000
	0x03DDDBF4 LDR X0, [X0 + 0x310]
	0x03DDDBF8 BL 0x1C16CF4
	0x03DDDBFC MOVZ W8, 0x1
	0x03DDDC00 STRB W8, [X22 + 0x1BF]
	0x03DDDC04 LDR X1, [X21]
	0x03DDDC08 ADD X0, X20, 0x18
	0x03DDDC0C BL 0x266D23C
	0x03DDDC10 LDR V0, [X19]
	0x03DDDC14 LDR X8, [X19 + 0x10]
	0x03DDDC18 LDP X20, X19, [X31 + 0x20]
	0x03DDDC1C LDP X22, X21, [X31 + 0x10]
	0x03DDDC20 STR V0, [X0]
	0x03DDDC24 STR X8, [X0 + 0x10]
	0x03DDDC28 LDR X30, [X31], #0x30
	0x03DDDC2C RET
	0x03DDDC30 STP X30, X23, [X31 - 0x30]!
	0x03DDDC34 STP X22, X21, [X31 + 0x10]
	0x03DDDC38 STP X20, X19, [X31 + 0x20]
	0x03DDDC3C ADRP X23, 0x60B000
	0x03DDDC40 ADRP X22, 0x388000
	0x03DDDC44 LDRB W8, [X23 + 0x1C0]
	0x03DDDC48 LDR X22, [X22 + 0x310]
	0x03DDDC4C MOV X19, X2
	0x03DDDC50 MOV X20, X1
	0x03DDDC54 MOV X21, X0
	0x03DDDC58 TBNZ X8, 0x0, 0x3DDDC70
	0x03DDDC5C ADRP X0, 0x388000
	0x03DDDC60 LDR X0, [X0 + 0x310]
	0x03DDDC64 BL 0x1C16CF4
	0x03DDDC68 MOVZ W8, 0x1
	0x03DDDC6C STRB W8, [X23 + 0x1C0]
	0x03DDDC70 LDR X1, [X22]
	0x03DDDC74 ADD X0, X21, 0x18
	0x03DDDC78 BL 0x266D23C
	0x03DDDC7C STP X20, X19, [X0 + 0x18]
	0x03DDDC80 LDP X20, X19, [X31 + 0x20]
	0x03DDDC84 LDP X22, X21, [X31 + 0x10]
	0x03DDDC88 LDP X30, X23, [X31], #0x30
	0x03DDDC8C RET
	0x03DDDC90 STR X30, [X31 - 0x30]!
	0x03DDDC94 STP X22, X21, [X31 + 0x10]
	0x03DDDC98 STP X20, X19, [X31 + 0x20]
	0x03DDDC9C ADRP X22, 0x60B000
	0x03DDDCA0 ADRP X21, 0x388000
	0x03DDDCA4 LDRB W8, [X22 + 0x1C1]
	0x03DDDCA8 LDR X21, [X21 + 0x2F8]
	0x03DDDCAC MOV X19, X1
	0x03DDDCB0 MOV X20, X0
	0x03DDDCB4 TBNZ X8, 0x0, 0x3DDDCCC
	0x03DDDCB8 ADRP X0, 0x388000
	0x03DDDCBC LDR X0, [X0 + 0x2F8]
	0x03DDDCC0 BL 0x1C16CF4
	0x03DDDCC4 MOVZ W8, 0x1
	0x03DDDCC8 STRB W8, [X22 + 0x1C1]
	0x03DDDCCC LDR X1, [X21]
	0x03DDDCD0 ADD X0, X20, 0x28
	0x03DDDCD4 BL 0x266DB34
	0x03DDDCD8 LDR V0, [X19]
	0x03DDDCDC LDR W8, [X19 + 0x10]
	0x03DDDCE0 LDP X20, X19, [X31 + 0x20]
	0x03DDDCE4 LDP X22, X21, [X31 + 0x10]
	0x03DDDCE8 STR V0, [X0 + 0x5]
	0x03DDDCEC STR W8, [X0 + 0x60]
	0x03DDDCF0 LDR X30, [X31], #0x30
	0x03DDDCF4 RET
	0x03DDDCF8 SUB X31, X31, 0x50
	0x03DDDCFC STR X30, [X31 + 0x20]
	0x03DDDD00 STP X22, X21, [X31 + 0x30]
	0x03DDDD04 STP X20, X19, [X31 + 0x40]
	0x03DDDD08 ADRP X22, 0x60B000
	0x03DDDD0C LDRB W8, [X22 + 0x1C3]
	0x03DDDD10 MOV X19, X2
	0x03DDDD14 MOV W21, W1
	0x03DDDD18 MOV X20, X0
	0x03DDDD1C TBNZ X8, 0x0, 0x3DDDD34
	0x03DDDD20 ADRP X0, 0x388000
	0x03DDDD24 LDR X0, [X0 + 0x300]
	0x03DDDD28 BL 0x1C16CF4
	0x03DDDD2C MOVZ W8, 0x1
	0x03DDDD30 STRB W8, [X22 + 0x1C3]
	0x03DDDD34 SUB W8, W21, 0x10000
	0x03DDDD38 CMP W8, 0xD
	0x03DDDD3C B.HI 0x3DDDD84
	0x03DDDD40 ADRP X9, 0xFFFFFFFFFCDBB000
	0x03DDDD44 ADD X9, X9, 0x4B6
	0x03DDDD48 ADR X10, 0x10
	0x03DDDD4C LDRB W11, [X9, X8, LSL]
	0x03DDDD50 ADD X10, X10, X11, 0x2, LSL
	0x03DDDD54 BR X10
	0x03DDDD58 ADRP X8, 0x388000
	0x03DDDD5C LDR X8, [X8 + 0x300]
	0x03DDDD60 MOV X0, X20
	0x03DDDD64 LDR X1, [X8]
	0x03DDDD68 BL 0x266C4BC
	0x03DDDD6C MOV X20, X0
	0x03DDDD70 MOV X0, X19
	0x03DDDD74 BL 0x3DC9A14
	0x03DDDD78 STP S0, S1, [X20]
	0x03DDDD7C STP S2, S3, [X20 + 0x8]
	0x03DDDD80 B 0x3DDDFB8
	0x03DDDD84 MOV X0, X20
	0x03DDDD88 MOV W1, W21
	0x03DDDD8C LDP X20, X19, [X31 + 0x40]
	0x03DDDD90 LDP X22, X21, [X31 + 0x30]
	0x03DDDD94 LDR X30, [X31 + 0x20]
	0x03DDDD98 ADD X31, X31, 0x50
	0x03DDDD9C B 0x3DC71DC
	0x03DDDDA0 ADRP X8, 0x388000
	0x03DDDDA4 LDR X8, [X8 + 0x300]
	0x03DDDDA8 MOV X0, X20
	0x03DDDDAC LDR X1, [X8]
	0x03DDDDB0 BL 0x266C4BC
	0x03DDDDB4 MOV X20, X0
	0x03DDDDB8 MOV X0, X19
	0x03DDDDBC BL 0x3DC61E0
	0x03DDDDC0 STR X0, [X20 + 0x10]
	0x03DDDDC4 B 0x3DDDFB8
	0x03DDDDC8 ADRP X8, 0x388000
	0x03DDDDCC LDR X8, [X8 + 0x300]
	0x03DDDDD0 MOV X0, X20
	0x03DDDDD4 LDR X1, [X8]
	0x03DDDDD8 BL 0x266C4BC
	0x03DDDDDC MOV X20, X0
	0x03DDDDE0 MOV X0, X19
	0x03DDDDE4 BL 0x3DC9AD0
	0x03DDDDE8 STR X0, [X20 + 0x18]
	0x03DDDDEC B 0x3DDDFB8
	0x03DDDDF0 ADRP X8, 0x388000
	0x03DDDDF4 LDR X8, [X8 + 0x300]
	0x03DDDDF8 MOV X0, X20
	0x03DDDDFC LDR X1, [X8]
	0x03DDDE00 BL 0x266C4BC
	0x03DDDE04 MOV X20, X0
	0x03DDDE08 ADD X8, X31, 0x0
	0x03DDDE0C MOV X0, X19
	0x03DDDE10 BL 0x3DC9C7C
	0x03DDDE14 LDUR V0, [X31 + 0xC]
	0x03DDDE18 LDR V1, [X31]
	0x03DDDE1C STUR V0, [X20 + 0x2C]
	0x03DDDE20 STR V1, [X20 + 0x2]
	0x03DDDE24 B 0x3DDDFB8
	0x03DDDE28 ADRP X8, 0x388000
	0x03DDDE2C LDR X8, [X8 + 0x300]
	0x03DDDE30 MOV X0, X20
	0x03DDDE34 LDR X1, [X8]
	0x03DDDE38 BL 0x266C4BC
	0x03DDDE3C MOV X20, X0
	0x03DDDE40 MOV X0, X19
	0x03DDDE44 BL 0x3DC9F48
	0x03DDDE48 STR X0, [X20 + 0x40]
	0x03DDDE4C B 0x3DDDFB8
	0x03DDDE50 ADRP X8, 0x388000
	0x03DDDE54 LDR X8, [X8 + 0x300]
	0x03DDDE58 MOV X0, X20
	0x03DDDE5C LDR X1, [X8]
	0x03DDDE60 BL 0x266C4BC
	0x03DDDE64 MOV X20, X0
	0x03DDDE68 MOV X0, X19
	0x03DDDE6C BL 0x3DC9F98
	0x03DDDE70 STP X0, X1, [X20 + 0x48]
	0x03DDDE74 B 0x3DDDFB8
	0x03DDDE78 ADRP X8, 0x388000
	0x03DDDE7C LDR X8, [X8 + 0x300]
	0x03DDDE80 MOV X0, X20
	0x03DDDE84 LDR X1, [X8]
	0x03DDDE88 BL 0x266C4BC
	0x03DDDE8C MOV X20, X0
	0x03DDDE90 MOV X0, X19
	0x03DDDE94 BL 0x3DC9FEC
	0x03DDDE98 STR W0, [X20 + 0x58]
	0x03DDDE9C B 0x3DDDFB8
	0x03DDDEA0 ADRP X8, 0x388000
	0x03DDDEA4 LDR X8, [X8 + 0x300]
	0x03DDDEA8 MOV X0, X20
	0x03DDDEAC LDR X1, [X8]
	0x03DDDEB0 BL 0x266C4BC
	0x03DDDEB4 MOV X20, X0
	0x03DDDEB8 MOV X0, X19
	0x03DDDEBC BL 0x3DCA08C
	0x03DDDEC0 STUR X0, [X20 + 0x5C]
	0x03DDDEC4 B 0x3DDDFB8
	0x03DDDEC8 ADRP X8, 0x388000
	0x03DDDECC LDR X8, [X8 + 0x300]
	0x03DDDED0 MOV X0, X20
	0x03DDDED4 LDR X1, [X8]
	0x03DDDED8 BL 0x266C4BC
	0x03DDDEDC MOV X20, X0
	0x03DDDEE0 MOV X0, X19
	0x03DDDEE4 BL 0x3DCA26C
	0x03DDDEE8 STR W0, [X20 + 0x64]
	0x03DDDEEC B 0x3DDDFB8
	0x03DDDEF0 ADRP X8, 0x388000
	0x03DDDEF4 LDR X8, [X8 + 0x300]
	0x03DDDEF8 MOV X0, X20
	0x03DDDEFC LDR X1, [X8]
	0x03DDDF00 BL 0x266C4BC
	0x03DDDF04 MOV X20, X0
	0x03DDDF08 MOV X0, X19
	0x03DDDF0C BL 0x3DCA2BC
	0x03DDDF10 STP S0, S1, [X20 + 0x68]
	0x03DDDF14 STP S2, S3, [X20 + 0x70]
	0x03DDDF18 B 0x3DDDFB8
	0x03DDDF1C ADRP X8, 0x388000
	0x03DDDF20 LDR X8, [X8 + 0x300]
	0x03DDDF24 MOV X0, X20
	0x03DDDF28 LDR X1, [X8]
	0x03DDDF2C BL 0x266C4BC
	0x03DDDF30 MOV X20, X0
	0x03DDDF34 MOV X0, X19
	0x03DDDF38 BL 0x3DCA310
	0x03DDDF3C STR S0, [X20 + 0x78]
	0x03DDDF40 B 0x3DDDFB8
	0x03DDDF44 ADRP X8, 0x388000
	0x03DDDF48 LDR X8, [X8 + 0x300]
	0x03DDDF4C MOV X0, X20
	0x03DDDF50 LDR X1, [X8]
	0x03DDDF54 BL 0x266C4BC
	0x03DDDF58 MOV X20, X0
	0x03DDDF5C MOV X0, X19
	0x03DDDF60 BL 0x3DCA3B0
	0x03DDDF64 STR W0, [X20 + 0x7C]
	0x03DDDF68 B 0x3DDDFB8
	0x03DDDF6C ADRP X8, 0x388000
	0x03DDDF70 LDR X8, [X8 + 0x300]
	0x03DDDF74 MOV X0, X20
	0x03DDDF78 LDR X1, [X8]
	0x03DDDF7C BL 0x266C4BC
	0x03DDDF80 MOV X20, X0
	0x03DDDF84 MOV X0, X19
	0x03DDDF88 BL 0x3DCA400
	0x03DDDF8C STR W0, [X20 + 0x80]
	0x03DDDF90 B 0x3DDDFB8
	0x03DDDF94 ADRP X8, 0x388000
	0x03DDDF98 LDR X8, [X8 + 0x300]
	0x03DDDF9C MOV X0, X20
	0x03DDDFA0 LDR X1, [X8]
	0x03DDDFA4 BL 0x266C4BC
	0x03DDDFA8 MOV X20, X0
	0x03DDDFAC MOV X0, X19
	0x03DDDFB0 BL 0x3DCA450
	0x03DDDFB4 STUR X0, [X20 + 0x84]
	0x03DDDFB8 LDP X20, X19, [X31 + 0x40]
	0x03DDDFBC LDP X22, X21, [X31 + 0x30]
	0x03DDDFC0 LDR X30, [X31 + 0x20]
	0x03DDDFC4 ADD X31, X31, 0x50
	0x03DDDFC8 RET
	0x03DDDFCC STR D12, [X31 - 0x80]!
	0x03DDDFD0 STP D11, D10, [X31 + 0x8]
	0x03DDDFD4 STP D9, D8, [X31 + 0x18]
	0x03DDDFD8 STR X29, [X31 + 0x28]
	0x03DDDFDC STP X30, X27, [X31 + 0x30]
	0x03DDDFE0 STP X26, X25, [X31 + 0x40]
	0x03DDDFE4 STP X24, X23, [X31 + 0x50]
	0x03DDDFE8 STP X22, X21, [X31 + 0x60]
	0x03DDDFEC STP X20, X19, [X31 + 0x70]
	0x03DDDFF0 SUB X31, X31, 0x1C0
	0x03DDDFF4 ADRP X22, 0x60B000
	0x03DDDFF8 ADRP X21, 0x38C000
	0x03DDDFFC LDRB W8, [X22 + 0x1C4]
	0x03DDE000 B 0x3EB1A34
	0x03DDE004 MOV X19, X1
	0x03DDE008 MOV X20, X0
	0x03DDE00C TBNZ X8, 0x0, 0x3DDE078
	0x03DDE010 ADRP X0, 0x386000
	0x03DDE014 LDR X0, [X0 + 0x268]
	0x03DDE018 BL 0x1C16CF4
	0x03DDE01C ADRP X0, 0x315000
	0x03DDE020 LDR X0, [X0 + 0x598]
	0x03DDE024 BL 0x1C16CF4
	0x03DDE028 ADRP X0, 0x38B000
	0x03DDE02C LDR X0, [X0 + 0x480]
	0x03DDE030 BL 0x1C16CF4
	0x03DDE034 ADRP X0, 0x38B000
	0x03DDE038 LDR X0, [X0 + 0x478]
	0x03DDE03C BL 0x1C16CF4
	0x03DDE040 ADRP X0, 0x38B000
	0x03DDE044 LDR X0, [X0 + 0x488]
	0x03DDE048 BL 0x1C16CF4
	0x03DDE04C ADRP X0, 0x38B000
	0x03DDE050 LDR X0, [X0 + 0x490]
	0x03DDE054 BL 0x1C16CF4
	0x03DDE058 ADRP X0, 0x38B000
	0x03DDE05C LDR X0, [X0 + 0x498]
	0x03DDE060 BL 0x1C16CF4
	0x03DDE064 ADRP X0, 0x38B000
	0x03DDE068 LDR X0, [X0 + 0x4A0]
	0x03DDE06C BL 0x1C16CF4
	0x03DDE070 MOVZ W8, 0x1
	0x03DDE074 STRB W8, [X22 + 0x1C4]
	0x03DDE078 LDR X1, [X19 + 0x8]
	0x03DDE07C LDR X2, [X21]
	0x03DDE080 ADRP X22, 0x38B000
	0x03DDE084 LDR X22, [X22 + 0x488]
	0x03DDE088 ADD X0, X20, 0x8
	0x03DDE08C BL 0x266CC24
	0x03DDE090 TBZ X0, 0x0, 0x3DDE09C
	0x03DDE094 MOVZ W21, 0x20
	0x03DDE098 B 0x3DDE4E4
	0x03DDE09C MOV X0, X20
	0x03DDE0A0 BL 0x3DC6614
	0x03DDE0A4 MOV X0, X19
	0x03DDE0A8 MOV V8.16B, V0.16B
	0x03DDE0AC BL 0x3DC6614
	0x03DDE0B0 FCMP S8, S0
	0x03DDE0B4 B.NE 0x3DDE440
	0x03DDE0B8 MOV X0, X20
	0x03DDE0BC BL 0x3DC6664
	0x03DDE0C0 MOV X0, X19
	0x03DDE0C4 MOV V8.16B, V0.16B
	0x03DDE0C8 BL 0x3DC6664
	0x03DDE0CC FCMP S8, S0
	0x03DDE0D0 B.NE 0x3DDE440
	0x03DDE0D4 MOV X0, X20
	0x03DDE0D8 BL 0x3DC7014
	0x03DDE0DC MOV W21, W0
	0x03DDE0E0 MOV X0, X19
	0x03DDE0E4 BL 0x3DC7014
	0x03DDE0E8 CMP W21, W0
	0x03DDE0EC B.NE 0x3DDE440
	0x03DDE0F0 MOV X0, X20
	0x03DDE0F4 BL 0x3DC6ED4
	0x03DDE0F8 MOV W21, W0
	0x03DDE0FC MOV X0, X19
	0x03DDE100 BL 0x3DC6ED4
	0x03DDE104 CMP W21, W0
	0x03DDE108 B.NE 0x3DDE440
	0x03DDE10C MOV X0, X20
	0x03DDE110 BL 0x3DC6FC4
	0x03DDE114 MOV W21, W0
	0x03DDE118 MOV X0, X19
	0x03DDE11C BL 0x3DC6FC4
	0x03DDE120 CMP W21, W0
	0x03DDE124 B.NE 0x3DDE440
	0x03DDE128 MOV X0, X20
	0x03DDE12C BL 0x3DC67F4
	0x03DDE130 MOV X21, X0
	0x03DDE134 MOV X0, X19
	0x03DDE138 BL 0x3DC67F4
	0x03DDE13C MOV X1, X0
	0x03DDE140 MOV X0, X21
	0x03DDE144 MOV X2, X31
	0x03DDE148 BL 0x3DFD53C
	0x03DDE14C TBNZ X0, 0x0, 0x3DDE440
	0x03DDE150 MOV X0, X20
	0x03DDE154 BL 0x3DC6704
	0x03DDE158 MOV X21, X0
	0x03DDE15C MOV X0, X19
	0x03DDE160 BL 0x3DC6704
	0x03DDE164 MOV X1, X0
	0x03DDE168 MOV X0, X21
	0x03DDE16C MOV X2, X31
	0x03DDE170 BL 0x3DFD53C
	0x03DDE174 TBNZ X0, 0x0, 0x3DDE440
	0x03DDE178 MOV X0, X20
	0x03DDE17C BL 0x3DC67A4
	0x03DDE180 MOV X21, X0
	0x03DDE184 MOV X0, X19
	0x03DDE188 BL 0x3DC67A4
	0x03DDE18C MOV X1, X0
	0x03DDE190 MOV X0, X21
	0x03DDE194 MOV X2, X31
	0x03DDE198 BL 0x3DFD53C
	0x03DDE19C TBNZ X0, 0x0, 0x3DDE440
	0x03DDE1A0 MOV X0, X20
	0x03DDE1A4 BL 0x3DC6754
	0x03DDE1A8 MOV X21, X0
	0x03DDE1AC MOV X0, X19
	0x03DDE1B0 BL 0x3DC6754
	0x03DDE1B4 MOV X1, X0
	0x03DDE1B8 MOV X0, X21
	0x03DDE1BC MOV X2, X31
	0x03DDE1C0 BL 0x3DFD53C
	0x03DDE1C4 TBNZ X0, 0x0, 0x3DDE440
	0x03DDE1C8 MOV X0, X20
	0x03DDE1CC BL 0x3DC6C54
	0x03DDE1D0 MOV X21, X0
	0x03DDE1D4 MOV X0, X19
	0x03DDE1D8 BL 0x3DC6C54
	0x03DDE1DC MOV X1, X0
	0x03DDE1E0 MOV X0, X21
	0x03DDE1E4 MOV X2, X31
	0x03DDE1E8 BL 0x3DFD53C
	0x03DDE1EC TBNZ X0, 0x0, 0x3DDE440
	0x03DDE1F0 MOV X0, X20
	0x03DDE1F4 BL 0x3DC6C04
	0x03DDE1F8 MOV X21, X0
	0x03DDE1FC MOV X0, X19
	0x03DDE200 BL 0x3DC6C04
	0x03DDE204 MOV X1, X0
	0x03DDE208 MOV X0, X21
	0x03DDE20C MOV X2, X31
	0x03DDE210 BL 0x3DFD53C
	0x03DDE214 TBNZ X0, 0x0, 0x3DDE440
	0x03DDE218 MOV X0, X20
	0x03DDE21C BL 0x3DC6A74
	0x03DDE220 MOV X21, X0
	0x03DDE224 MOV X0, X19
	0x03DDE228 BL 0x3DC6A74
	0x03DDE22C MOV X1, X0
	0x03DDE230 MOV X0, X21
	0x03DDE234 MOV X2, X31
	0x03DDE238 BL 0x3DFD53C
	0x03DDE23C TBNZ X0, 0x0, 0x3DDE440
	0x03DDE240 MOV X0, X20
	0x03DDE244 BL 0x3DC6984
	0x03DDE248 MOV X21, X0
	0x03DDE24C MOV X0, X19
	0x03DDE250 BL 0x3DC6984
	0x03DDE254 MOV X1, X0
	0x03DDE258 MOV X0, X21
	0x03DDE25C MOV X2, X31
	0x03DDE260 BL 0x3DFD53C
	0x03DDE264 TBNZ X0, 0x0, 0x3DDE440
	0x03DDE268 MOV X0, X20
	0x03DDE26C BL 0x3DC6A24
	0x03DDE270 MOV X21, X0
	0x03DDE274 MOV X0, X19
	0x03DDE278 BL 0x3DC6A24
	0x03DDE27C MOV X1, X0
	0x03DDE280 MOV X0, X21
	0x03DDE284 MOV X2, X31
	0x03DDE288 BL 0x3DFD53C
	0x03DDE28C TBNZ X0, 0x0, 0x3DDE440
	0x03DDE290 MOV X0, X20
	0x03DDE294 BL 0x3DC69D4
	0x03DDE298 MOV X21, X0
	0x03DDE29C MOV X0, X19
	0x03DDE2A0 BL 0x3DC69D4
	0x03DDE2A4 MOV X1, X0
	0x03DDE2A8 MOV X0, X21
	0x03DDE2AC MOV X2, X31
	0x03DDE2B0 BL 0x3DFD53C
	0x03DDE2B4 TBNZ X0, 0x0, 0x3DDE440
	0x03DDE2B8 MOV X0, X20
	0x03DDE2BC BL 0x3DC6934
	0x03DDE2C0 MOV X21, X0
	0x03DDE2C4 MOV X0, X19
	0x03DDE2C8 BL 0x3DC6934
	0x03DDE2CC MOV X1, X0
	0x03DDE2D0 MOV X0, X21
	0x03DDE2D4 MOV X2, X31
	0x03DDE2D8 BL 0x3DFD53C
	0x03DDE2DC TBNZ X0, 0x0, 0x3DDE440
	0x03DDE2E0 MOV X0, X20
	0x03DDE2E4 BL 0x3DC6844
	0x03DDE2E8 MOV X21, X0
	0x03DDE2EC MOV X0, X19
	0x03DDE2F0 BL 0x3DC6844
	0x03DDE2F4 MOV X1, X0
	0x03DDE2F8 MOV X0, X21
	0x03DDE2FC MOV X2, X31
	0x03DDE300 BL 0x3DFD53C
	0x03DDE304 TBNZ X0, 0x0, 0x3DDE440
	0x03DDE308 MOV X0, X20
	0x03DDE30C BL 0x3DC68E4
	0x03DDE310 MOV X21, X0
	0x03DDE314 MOV X0, X19
	0x03DDE318 BL 0x3DC68E4
	0x03DDE31C MOV X1, X0
	0x03DDE320 MOV X0, X21
	0x03DDE324 MOV X2, X31
	0x03DDE328 BL 0x3DFD53C
	0x03DDE32C TBNZ X0, 0x0, 0x3DDE440
	0x03DDE330 MOV X0, X20
	0x03DDE334 BL 0x3DC6894
	0x03DDE338 MOV X21, X0
	0x03DDE33C MOV X0, X19
	0x03DDE340 BL 0x3DC6894
	0x03DDE344 MOV X1, X0
	0x03DDE348 MOV X0, X21
	0x03DDE34C MOV X2, X31
	0x03DDE350 BL 0x3DFD53C
	0x03DDE354 TBNZ X0, 0x0, 0x3DDE440
	0x03DDE358 MOV X0, X20
	0x03DDE35C BL 0x3DC6CA4
	0x03DDE360 MOV W21, W0
	0x03DDE364 MOV X0, X19
	0x03DDE368 BL 0x3DC6CA4
	0x03DDE36C CMP W21, W0
	0x03DDE370 B.NE 0x3DDE440
	0x03DDE374 MOV X0, X20
	0x03DDE378 BL 0x3DC6F24
	0x03DDE37C MOV W21, W0
	0x03DDE380 MOV X0, X19
	0x03DDE384 BL 0x3DC6F24
	0x03DDE388 CMP W21, W0
	0x03DDE38C B.NE 0x3DDE440
	0x03DDE390 MOV X0, X20
	0x03DDE394 BL 0x3DC6F74
	0x03DDE398 MOV W21, W0
	0x03DDE39C MOV X0, X19
	0x03DDE3A0 BL 0x3DC6F74
	0x03DDE3A4 CMP W21, W0
	0x03DDE3A8 B.NE 0x3DDE440
	0x03DDE3AC MOV X0, X20
	0x03DDE3B0 BL 0x3DC6D44
	0x03DDE3B4 MOV W21, W0
	0x03DDE3B8 MOV X0, X19
	0x03DDE3BC BL 0x3DC6D44
	0x03DDE3C0 CMP W21, W0
	0x03DDE3C4 B.NE 0x3DDE440
	0x03DDE3C8 MOV X0, X20
	0x03DDE3CC BL 0x3DC66B4
	0x03DDE3D0 MOV X21, X0
	0x03DDE3D4 MOV X0, X19
	0x03DDE3D8 BL 0x3DC66B4
	0x03DDE3DC MOV X1, X0
	0x03DDE3E0 MOV X0, X21
	0x03DDE3E4 MOV X2, X31
	0x03DDE3E8 BL 0x3DFD53C
	0x03DDE3EC TBNZ X0, 0x0, 0x3DDE440
	0x03DDE3F0 MOV X0, X20
	0x03DDE3F4 BL 0x3DC6DE4
	0x03DDE3F8 MOV X21, X0
	0x03DDE3FC MOV X0, X19
	0x03DDE400 BL 0x3DC6DE4
	0x03DDE404 MOV X1, X0
	0x03DDE408 MOV X0, X21
	0x03DDE40C MOV X2, X31
	0x03DDE410 BL 0x3DFD53C
	0x03DDE414 TBNZ X0, 0x0, 0x3DDE440
	0x03DDE418 MOV X0, X20
	0x03DDE41C BL 0x3DC6D94
	0x03DDE420 MOV X21, X0
	0x03DDE424 MOV X0, X19
	0x03DDE428 BL 0x3DC6D94
	0x03DDE42C MOV X1, X0
	0x03DDE430 MOV X0, X21
	0x03DDE434 MOV X2, X31
	0x03DDE438 BL 0x3DFD53C
	0x03DDE43C TBZ X0, 0x0, 0x3DDEEE4
	0x03DDE440 MOVZ W23, 0x28
	0x03DDE444 MOV X0, X20
	0x03DDE448 BL 0x3DC6BB4
	0x03DDE44C MOV X0, X19
	0x03DDE450 MOV V8.16B, V0.16B
	0x03DDE454 BL 0x3DC6BB4
	0x03DDE458 FCMP S8, S0
	0x03DDE45C B.NE 0x3DDE4BC
	0x03DDE460 MOV X0, X20
	0x03DDE464 BL 0x3DC6AC4
	0x03DDE468 MOV X0, X19
	0x03DDE46C MOV V8.16B, V0.16B
	0x03DDE470 BL 0x3DC6AC4
	0x03DDE474 FCMP S8, S0
	0x03DDE478 B.NE 0x3DDE4BC
	0x03DDE47C MOV X0, X20
	0x03DDE480 BL 0x3DC6B64
	0x03DDE484 MOV X0, X19
	0x03DDE488 MOV V8.16B, V0.16B
	0x03DDE48C BL 0x3DC6B64
	0x03DDE490 FCMP S8, S0
	0x03DDE494 MOVZ W24, 0x928
	0x03DDE498 B.NE 0x3DDE4C0
	0x03DDE49C MOV X0, X20
	0x03DDE4A0 BL 0x3DC6B14
	0x03DDE4A4 MOV X0, X19
	0x03DDE4A8 MOV V8.16B, V0.16B
	0x03DDE4AC BL 0x3DC6B14
	0x03DDE4B0 FCMP S8, S0
	0x03DDE4B4 CSEL W24, W23, W24, EQ
	0x03DDE4B8 B 0x3DDE4C0
	0x03DDE4BC MOVZ W24, 0x928
	0x03DDE4C0 MOV X0, X20
	0x03DDE4C4 BL 0x3DC7064
	0x03DDE4C8 MOV W21, W0
	0x03DDE4CC MOV X0, X19
	0x03DDE4D0 BL 0x3DC7064
	0x03DDE4D4 MOVZ W8, 0x808
	0x03DDE4D8 ORR W8, W24, W8, 0x0
	0x03DDE4DC CMP W21, W0
	0x03DDE4E0 CSEL W21, W24, W8, EQ
	0x03DDE4E4 LDR X1, [X19]
	0x03DDE4E8 LDR X2, [X22]
	0x03DDE4EC ADRP X23, 0x38B000
	0x03DDE4F0 LDR X23, [X23 + 0x498]
	0x03DDE4F4 MOV X0, X20
	0x03DDE4F8 ADD X26, X31, 0x180
	0x03DDE4FC ADD X25, X31, 0x80
	0x03DDE500 BL 0x266C7A4
	0x03DDE504 ADRP X24, 0xFFFFFFFFFCD0B000
	0x03DDE508 TBNZ X0, 0x0, 0x3DDE7D8
	0x03DDE50C MOV X0, X20
	0x03DDE510 BL 0x3DC9A14
	0x03DDE514 MOV X0, X19
	0x03DDE518 MOV V8.16B, V0.16B
	0x03DDE51C MOV V9.16B, V1.16B
	0x03DDE520 MOV V10.16B, V2.16B
	0x03DDE524 MOV V11.16B, V3.16B
	0x03DDE528 BL 0x3DC9A14
	0x03DDE52C FSUB S0, S8, S0
	0x03DDE530 FSUB S1, S9, S1
	0x03DDE534 FSUB S2, S10, S2
	0x03DDE538 LDR V12, [X24 + 0xF20]
	0x03DDE53C FMUL S0, S0, S0
	0x03DDE540 FMUL S1, S1, S1
	0x03DDE544 FSUB S3, S11, S3
	0x03DDE548 FMUL S2, S2, S2
	0x03DDE54C FADD S0, S0, S1
	0x03DDE550 FMUL S3, S3, S3
	0x03DDE554 FADD S0, S2, S0
	0x03DDE558 FADD S0, S3, S0
	0x03DDE55C ORR W8, W21, 0x2000
	0x03DDE560 FCMP S0, S12
	0x03DDE564 CSEL W27, W8, W21, PL
	0x03DDE568 ANDS W31, W27, 0x8080808
	0x03DDE56C B.NE 0x3DDE6CC
	0x03DDE570 MOV X0, X20
	0x03DDE574 BL 0x3DC9F48
	0x03DDE578 MOV X21, X0
	0x03DDE57C MOV X0, X19
	0x03DDE580 BL 0x3DC9F48
	0x03DDE584 ADRP X8, 0x315000
	0x03DDE588 LDR X8, [X8 + 0x598]
	0x03DDE58C MOV X22, X0
	0x03DDE590 LDR X8, [X8]
	0x03DDE594 LDR W9, [X8 + 0xE0]
	0x03DDE598 CBNZ W9, 0x3DDE5A4
	0x03DDE59C MOV X0, X8
	0x03DDE5A0 BL 0x1C16DFC
	0x03DDE5A4 MOV X0, X21
	0x03DDE5A8 MOV X1, X22
	0x03DDE5AC MOV X2, X31
	0x03DDE5B0 BL 0x3C354F8
	0x03DDE5B4 TBNZ X0, 0x0, 0x3DDE6C4
	0x03DDE5B8 MOV X0, X20
	0x03DDE5BC BL 0x3DC61E0
	0x03DDE5C0 MOV X21, X0
	0x03DDE5C4 MOV X0, X19
	0x03DDE5C8 BL 0x3DC61E0
	0x03DDE5CC MOV X1, X0
	0x03DDE5D0 MOV X0, X21
	0x03DDE5D4 MOV X2, X31
	0x03DDE5D8 BL 0x3DFD53C
	0x03DDE5DC TBNZ X0, 0x0, 0x3DDE6C4
	0x03DDE5E0 MOV X0, X20
	0x03DDE5E4 BL 0x3DC9F98
	0x03DDE5E8 MOV X21, X0
	0x03DDE5EC MOV X0, X19
	0x03DDE5F0 MOV X22, X1
	0x03DDE5F4 BL 0x3DC9F98
	0x03DDE5F8 MOV X2, X0
	0x03DDE5FC MOV X3, X1
	0x03DDE600 MOV X0, X21
	0x03DDE604 MOV X1, X22
	0x03DDE608 MOV X4, X31
	0x03DDE60C BL 0x3DE4E2C
	0x03DDE610 TBNZ X0, 0x0, 0x3DDE6C4
	0x03DDE614 MOV X0, X20
	0x03DDE618 BL 0x3DC9FEC
	0x03DDE61C MOV W21, W0
	0x03DDE620 MOV X0, X19
	0x03DDE624 BL 0x3DC9FEC
	0x03DDE628 CMP W21, W0
	0x03DDE62C B.NE 0x3DDE6C4
	0x03DDE630 MOV X0, X20
	0x03DDE634 BL 0x3DCA310
	0x03DDE638 MOV X0, X19
	0x03DDE63C MOV V8.16B, V0.16B
	0x03DDE640 BL 0x3DCA310
	0x03DDE644 FCMP S8, S0
	0x03DDE648 B.NE 0x3DDE6C4
	0x03DDE64C MOV X0, X20
	0x03DDE650 BL 0x3DC9AD0
	0x03DDE654 MOV X21, X0
	0x03DDE658 MOV X0, X19
	0x03DDE65C BL 0x3DC9AD0
	0x03DDE660 MOV X1, X0
	0x03DDE664 MOV X0, X21
	0x03DDE668 MOV X2, X31
	0x03DDE66C BL 0x3DFD53C
	0x03DDE670 TBNZ X0, 0x0, 0x3DDE6C4
	0x03DDE674 MOV X0, X20
	0x03DDE678 BL 0x3DCA450
	0x03DDE67C MOV X21, X0
	0x03DDE680 MOV X0, X19
	0x03DDE684 BL 0x3DCA450
	0x03DDE688 MOV X1, X0
	0x03DDE68C MOV X0, X21
	0x03DDE690 MOV X2, X31
	0x03DDE694 BL 0x3DFD53C
	0x03DDE698 TBNZ X0, 0x0, 0x3DDE6C4
	0x03DDE69C MOV X0, X20
	0x03DDE6A0 BL 0x3DCA08C
	0x03DDE6A4 MOV X21, X0
	0x03DDE6A8 MOV X0, X19
	0x03DDE6AC BL 0x3DCA08C
	0x03DDE6B0 MOV X1, X0
	0x03DDE6B4 MOV X0, X21
	0x03DDE6B8 MOV X2, X31
	0x03DDE6BC BL 0x3DFD53C
	0x03DDE6C0 TBZ X0, 0x0, 0x3DDE6CC
	0x03DDE6C4 MOVZ W8, 0x808
	0x03DDE6C8 ORR W27, W27, W8, 0x0
	0x03DDE6CC TBNZ X27, 0xB, 0x3DDE790
	0x03DDE6D0 ADD X8, X31, 0x80
	0x03DDE6D4 MOV X0, X20
	0x03DDE6D8 BL 0x3DC9C7C
	0x03DDE6DC ADD X8, X31, 0x1A0
	0x03DDE6E0 MOV X0, X19
	0x03DDE6E4 BL 0x3DC9C7C
	0x03DDE6E8 LDR V0, [X31 + 0x8]
	0x03DDE6EC LDUR V1, [X25 + 0xC]
	0x03DDE6F0 LDR V2, [X26 + 0x2]
	0x03DDE6F4 LDUR V3, [X26 + 0x2C]
	0x03DDE6F8 ADD X0, X31, 0x180
	0x03DDE6FC ADD X1, X31, 0x160
	0x03DDE700 MOV X2, X31
	0x03DDE704 STR V0, [X25 + 0x10]
	0x03DDE708 STUR V1, [X26 + 0xC]
	0x03DDE70C STR V2, [X25 + 0xE]
	0x03DDE710 STUR V3, [X25 + 0xEC]
	0x03DDE714 BL 0x3E14318
	0x03DDE718 TBNZ X0, 0x0, 0x3DDE78C
	0x03DDE71C MOV X0, X20
	0x03DDE720 BL 0x3DCA26C
	0x03DDE724 MOV W21, W0
	0x03DDE728 MOV X0, X19
	0x03DDE72C BL 0x3DCA26C
	0x03DDE730 CMP W21, W0
	0x03DDE734 B.NE 0x3DDE78C
	0x03DDE738 MOV X0, X20
	0x03DDE73C BL 0x3DCA2BC
	0x03DDE740 MOV X0, X19
	0x03DDE744 MOV V8.16B, V0.16B
	0x03DDE748 MOV V9.16B, V1.16B
	0x03DDE74C MOV V10.16B, V2.16B
	0x03DDE750 MOV V11.16B, V3.16B
	0x03DDE754 BL 0x3DCA2BC
	0x03DDE758 FSUB S0, S8, S0
	0x03DDE75C FSUB S1, S9, S1
	0x03DDE760 FSUB S2, S10, S2
	0x03DDE764 FMUL S0, S0, S0
	0x03DDE768 FMUL S1, S1, S1
	0x03DDE76C FSUB S3, S11, S3
	0x03DDE770 FMUL S2, S2, S2
	0x03DDE774 FADD S0, S0, S1
	0x03DDE778 FADD S0, S2, S0
	0x03DDE77C FMUL S1, S3, S3
	0x03DDE780 FADD S0, S1, S0
	0x03DDE784 FCMP S0, S12
	0x03DDE788 B.MI 0x3DDE790
	0x03DDE78C ORR W27, W27, 0x800
	0x03DDE790 MOV X0, X20
	0x03DDE794 BL 0x3DCA3B0
	0x03DDE798 MOV W21, W0
	0x03DDE79C MOV X0, X19
	0x03DDE7A0 BL 0x3DCA3B0
	0x03DDE7A4 MOVZ W8, 0x800
	0x03DDE7A8 MOVK W8, 0x100000
	0x03DDE7AC ORR W8, W27, W8, 0x0
	0x03DDE7B0 CMP W21, W0
	0x03DDE7B4 MOV X0, X20
	0x03DDE7B8 CSEL W22, W27, W8, EQ
	0x03DDE7BC BL 0x3DCA400
	0x03DDE7C0 MOV W21, W0
	0x03DDE7C4 MOV X0, X19
	0x03DDE7C8 BL 0x3DCA400
	0x03DDE7CC ORR W8, W22, 0x8
	0x03DDE7D0 CMP W21, W0
	0x03DDE7D4 CSEL W21, W22, W8, EQ
	0x03DDE7D8 LDR X1, [X19 + 0x18]
	0x03DDE7DC LDR X2, [X23]
	0x03DDE7E0 ADRP X27, 0x38B000
	0x03DDE7E4 LDR X27, [X27 + 0x490]
	0x03DDE7E8 ADD X0, X20, 0x18
	0x03DDE7EC BL 0x266D524
	0x03DDE7F0 TBNZ X0, 0x0, 0x3DDE8C4
	0x03DDE7F4 MOV X0, X20
	0x03DDE7F8 BL 0x3DC9BD8
	0x03DDE7FC MOV X22, X0
	0x03DDE800 MOV X0, X19
	0x03DDE804 MOV X23, X1
	0x03DDE808 BL 0x3DC9BD8
	0x03DDE80C MOV X2, X0
	0x03DDE810 MOV X3, X1
	0x03DDE814 MOV X0, X22
	0x03DDE818 MOV X1, X23
	0x03DDE81C MOV X4, X31
	0x03DDE820 BL 0x3DFDCA4
	0x03DDE824 TBNZ X0, 0x0, 0x3DDE8C0
	0x03DDE828 ADD X8, X31, 0x80
	0x03DDE82C MOV X0, X20
	0x03DDE830 BL 0x3DC9B70
	0x03DDE834 ADD X8, X31, 0x1A0
	0x03DDE838 MOV X0, X19
	0x03DDE83C BL 0x3DC9B70
	0x03DDE840 LDR V0, [X31 + 0x8]
	0x03DDE844 LDR X8, [X31 + 0x90]
	0x03DDE848 LDR V1, [X26 + 0x2]
	0x03DDE84C LDR X9, [X31 + 0x1B0]
	0x03DDE850 ADD X0, X31, 0x140
	0x03DDE854 ADD X1, X31, 0x120
	0x03DDE858 MOV X2, X31
	0x03DDE85C STR V0, [X25 + 0xC]
	0x03DDE860 STR X8, [X31 + 0x150]
	0x03DDE864 STR V1, [X25 + 0xA]
	0x03DDE868 STR X9, [X31 + 0x130]
	0x03DDE86C BL 0x3DFD954
	0x03DDE870 TBNZ X0, 0x0, 0x3DDE8C0
	0x03DDE874 ADD X8, X31, 0x80
	0x03DDE878 MOV X0, X20
	0x03DDE87C BL 0x3DC9E8C
	0x03DDE880 ADD X8, X31, 0x1A0
	0x03DDE884 MOV X0, X19
	0x03DDE888 BL 0x3DC9E8C
	0x03DDE88C LDR V0, [X31 + 0x8]
	0x03DDE890 LDR X8, [X31 + 0x90]
	0x03DDE894 LDR V1, [X26 + 0x2]
	0x03DDE898 LDR X9, [X31 + 0x1B0]
	0x03DDE89C ADD X0, X31, 0x100
	0x03DDE8A0 ADD X1, X31, 0xE0
	0x03DDE8A4 MOV X2, X31
	0x03DDE8A8 STR V0, [X25 + 0x8]
	0x03DDE8AC STR X8, [X31 + 0x110]
	0x03DDE8B0 STR V1, [X25 + 0x6]
	0x03DDE8B4 STR X9, [X31 + 0xF0]
	0x03DDE8B8 BL 0x3E00AE8
	0x03DDE8BC TBZ X0, 0x0, 0x3DDEE54
	0x03DDE8C0 ORR W21, W21, 0x200
	0x03DDE8C4 LDR X1, [X19 + 0x20]
	0x03DDE8C8 LDR X2, [X27]
	0x03DDE8CC ADRP X22, 0x38B000
	0x03DDE8D0 LDR X22, [X22 + 0x480]
	0x03DDE8D4 ADD X0, X20, 0x20
	0x03DDE8D8 BL 0x266D99C
	0x03DDE8DC TBNZ X0, 0x0, 0x3DDE914
	0x03DDE8E0 ADRP X8, 0x386000
	0x03DDE8E4 LDR X8, [X8 + 0x268]
	0x03DDE8E8 LDR X0, [X8]
	0x03DDE8EC LDR W8, [X0 + 0xE0]
	0x03DDE8F0 CBNZ W8, 0x3DDE8F8
	0x03DDE8F4 BL 0x1C16DFC
	0x03DDE8F8 MOV X0, X20
	0x03DDE8FC MOV X1, X19
	0x03DDE900 MOV X2, X31
	0x03DDE904 BL 0x3DE3660
	0x03DDE908 ORR W8, W21, 0x8000
	0x03DDE90C ANDS W31, W0, 0x1
	0x03DDE910 CSEL W21, W21, W8, NE
	0x03DDE914 LDR X1, [X19 + 0x28]
	0x03DDE918 LDR X2, [X22]
	0x03DDE91C ADRP X26, 0x38B000
	0x03DDE920 LDR X26, [X26 + 0x4A0]
	0x03DDE924 ADD X0, X20, 0x28
	0x03DDE928 BL 0x266DE1C
	0x03DDE92C TBNZ X0, 0x0, 0x3DDECB8
	0x03DDE930 TBNZ X21, 0xD, 0x3DDEAE0
	0x03DDE934 MOV X0, X20
	0x03DDE938 BL 0x3DC9568
	0x03DDE93C MOV X0, X19
	0x03DDE940 MOV V8.16B, V0.16B
	0x03DDE944 MOV V9.16B, V1.16B
	0x03DDE948 MOV V10.16B, V2.16B
	0x03DDE94C MOV V11.16B, V3.16B
	0x03DDE950 BL 0x3DC9568
	0x03DDE954 FSUB S0, S8, S0
	0x03DDE958 FSUB S1, S9, S1
	0x03DDE95C FSUB S2, S10, S2
	0x03DDE960 LDR V12, [X24 + 0xF20]
	0x03DDE964 FMUL S0, S0, S0
	0x03DDE968 FMUL S1, S1, S1
	0x03DDE96C FSUB S3, S11, S3
	0x03DDE970 FMUL S2, S2, S2
	0x03DDE974 FADD S0, S0, S1
	0x03DDE978 FADD S0, S2, S0
	0x03DDE97C FMUL S1, S3, S3
	0x03DDE980 FADD S0, S1, S0
	0x03DDE984 FCMP S0, S12
	0x03DDE988 B.PL 0x3DDEADC
	0x03DDE98C MOV X0, X20
	0x03DDE990 BL 0x3DC9784
	0x03DDE994 MOV X0, X19
	0x03DDE998 MOV V8.16B, V0.16B
	0x03DDE99C MOV V9.16B, V1.16B
	0x03DDE9A0 MOV V10.16B, V2.16B
	0x03DDE9A4 MOV V11.16B, V3.16B
	0x03DDE9A8 BL 0x3DC9784
	0x03DDE9AC FSUB S0, S8, S0
	0x03DDE9B0 FSUB S1, S9, S1
	0x03DDE9B4 FSUB S2, S10, S2
	0x03DDE9B8 FMUL S0, S0, S0
	0x03DDE9BC FMUL S1, S1, S1
	0x03DDE9C0 FSUB S3, S11, S3
	0x03DDE9C4 FMUL S2, S2, S2
	0x03DDE9C8 FADD S0, S0, S1
	0x03DDE9CC FADD S0, S2, S0
	0x03DDE9D0 FMUL S1, S3, S3
	0x03DDE9D4 FADD S0, S1, S0
	0x03DDE9D8 FCMP S0, S12
	0x03DDE9DC B.PL 0x3DDEADC
	0x03DDE9E0 MOV X0, X20
	0x03DDE9E4 BL 0x3DC9878
	0x03DDE9E8 MOV X0, X19
	0x03DDE9EC MOV V8.16B, V0.16B
	0x03DDE9F0 MOV V9.16B, V1.16B
	0x03DDE9F4 MOV V10.16B, V2.16B
	0x03DDE9F8 MOV V11.16B, V3.16B
	0x03DDE9FC BL 0x3DC9878
	0x03DDEA00 FSUB S0, S8, S0
	0x03DDEA04 FSUB S1, S9, S1
	0x03DDEA08 FSUB S2, S10, S2
	0x03DDEA0C FMUL S0, S0, S0
	0x03DDEA10 FMUL S1, S1, S1
	0x03DDEA14 FSUB S3, S11, S3
	0x03DDEA18 FMUL S2, S2, S2
	0x03DDEA1C FADD S0, S0, S1
	0x03DDEA20 FADD S0, S2, S0
	0x03DDEA24 FMUL S1, S3, S3
	0x03DDEA28 FADD S0, S1, S0
	0x03DDEA2C FCMP S0, S12
	0x03DDEA30 B.PL 0x3DDEADC
	0x03DDEA34 MOV X0, X20
	0x03DDEA38 BL 0x3DC98CC
	0x03DDEA3C MOV X0, X19
	0x03DDEA40 MOV V8.16B, V0.16B
	0x03DDEA44 MOV V9.16B, V1.16B
	0x03DDEA48 MOV V10.16B, V2.16B
	0x03DDEA4C MOV V11.16B, V3.16B
	0x03DDEA50 BL 0x3DC98CC
	0x03DDEA54 FSUB S0, S8, S0
	0x03DDEA58 FSUB S1, S9, S1
	0x03DDEA5C FSUB S2, S10, S2
	0x03DDEA60 FMUL S0, S0, S0
	0x03DDEA64 FMUL S1, S1, S1
	0x03DDEA68 FSUB S3, S11, S3
	0x03DDEA6C FMUL S2, S2, S2
	0x03DDEA70 FADD S0, S0, S1
	0x03DDEA74 FADD S0, S2, S0
	0x03DDEA78 FMUL S1, S3, S3
	0x03DDEA7C FADD S0, S1, S0
	0x03DDEA80 FCMP S0, S12
	0x03DDEA84 B.PL 0x3DDEADC
	0x03DDEA88 MOV X0, X20
	0x03DDEA8C BL 0x3DC9920
	0x03DDEA90 MOV X0, X19
	0x03DDEA94 MOV V8.16B, V0.16B
	0x03DDEA98 MOV V9.16B, V1.16B
	0x03DDEA9C MOV V10.16B, V2.16B
	0x03DDEAA0 MOV V11.16B, V3.16B
	0x03DDEAA4 BL 0x3DC9920
	0x03DDEAA8 FSUB S0, S8, S0
	0x03DDEAAC FSUB S1, S9, S1
	0x03DDEAB0 FSUB S2, S10, S2
	0x03DDEAB4 FMUL S0, S0, S0
	0x03DDEAB8 FMUL S1, S1, S1
	0x03DDEABC FSUB S3, S11, S3
	0x03DDEAC0 FMUL S2, S2, S2
	0x03DDEAC4 FADD S0, S0, S1
	0x03DDEAC8 FADD S0, S2, S0
	0x03DDEACC FMUL S1, S3, S3
	0x03DDEAD0 FADD S0, S1, S0
	0x03DDEAD4 FCMP S0, S12
	0x03DDEAD8 B.MI 0x3DDEAE0
	0x03DDEADC ORR W21, W21, 0x2000
	0x03DDEAE0 TBNZ X21, 0xB, 0x3DDEBF4
	0x03DDEAE4 ADD X8, X31, 0x80
	0x03DDEAE8 MOV X0, X20
	0x03DDEAEC BL 0x3DC95BC
	0x03DDEAF0 ADD X8, X31, 0x40
	0x03DDEAF4 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 448
	002 Move [X31+304], D15
	003 Move [X31+312], D14
	004 Move [X31+320], D13
	005 Move [X31+328], D12
	006 Move [X31+336], D11
	007 Move [X31+344], D10
	008 Move [X31+352], D9
	009 Move [X31+360], D8
	010 Move [X31+368], X29
	011 Move [X31+376], X30
	012 Move [X31+384], X26
	013 Move [X31+392], X25
	014 Move [X31+400], X24
	015 Move [X31+408], X23
	016 Move [X31+416], X22
	017 Move [X31+424], X21
	018 Move [X31+432], X20
	019 Move [X31+440], X19
	020 Move X26, 0x60F000
	021 Move W8, [X26+444]
	022 Move X19, X6
	023 Move W20, W5
	024 Move W21, W4
	025 Move X24, X3
	026 Move X23, X2
	027 Move W25, W1
	028 Move X22, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {56}
	033 Move X0, 0x388000
	034 Move X0, [X0+4072]
	035 Call 0x1C17CF4
	036 Move X0, 0x344000
	037 Move X0, [X0+3792]
	038 Call 0x1C17CF4
	039 Move X0, 0x38B000
	040 Move X0, [X0+856]
	041 Call 0x1C17CF4
	042 Move X0, 0x38C000
	043 Move X0, [X0+864]
	044 Call 0x1C17CF4
	045 Move X0, 0x38C000
	046 Move X0, [X0+856]
	047 Call 0x1C17CF4
	048 Move X0, 0x38C000
	049 Move X0, [X0+880]
	050 Call 0x1C17CF4
	051 Move X0, 0x38C000
	052 Move X0, [X0+872]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X26+444], W8
	056 Move W26, 32
	057 NotImplemented "Instruction MOVK not yet implemented."
	058 NotImplemented "Instruction MOVI not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X31+208], V0
	061 Move [X31+216], V0
	062 Move [X31+176], V0
	063 Move [X31+184], V0
	064 Move [X31+144], V0
	065 Move [X31+152], V0
	066 Subtract W8, W25, 0x70000
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W0, W31
	069 Move X9, -52695040
	070 Add X9, X9, 1174
	071 NotImplemented "Instruction ADR not yet implemented."
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Add X10, X10, X11
	074 CallNoReturn X10
	075 Move W8, [X24+4]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, 0x38B000
	078 Move X8, [X8+856]
	079 Move X0, [X8]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X31
	085 Call InitialStyle.get_backgroundColor
	086 Move V8, V0
	087 Move V9, V1
	088 Move V10, V2
	089 Move V11, V3
	090 Subtract W8, W25, 0x20000
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X9, -52695040
	093 Add X9, X9, 1090
	094 NotImplemented "Instruction ADR not yet implemented."
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Add X10, X10, X11
	097 CallNoReturn X10
	098 Move W8, [X24+4]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X8, 0x38B000
	101 Move X8, [X8+856]
	102 Move X0, [X8]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X0, X31
	108 Call InitialStyle.get_alignContent
	109 Move W8, [X24+4]
	110 Move TEMP, 0x30000
	111 Not TEMP
	112 Move W8, TEMP
	113 Add W8, W25, W8
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X9, -52695040
	116 Add X9, X9, 1156
	117 NotImplemented "Instruction ADR not yet implemented."
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 Add X10, X10, X11
	120 CallNoReturn X10
	121 Move W8, [X24+4]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X8, 0x38B000
	124 Move X8, [X8+856]
	125 Move X0, [X8]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move X0, X31
	131 Call InitialStyle.get_textOverflow
	132 Move W24, W0
	133 Subtract W8, W25, 0x10000
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move W0, W31
	136 Move X9, -52695040
	137 Add X9, X9, 1062
	138 NotImplemented "Instruction ADR not yet implemented."
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Add X10, X10, X11
	141 CallNoReturn X10
	142 Move W8, [X24+4]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X8, 0x38B000
	145 Move X8, [X8+856]
	146 Move X0, [X8]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X0, X31
	152 Call InitialStyle.get_color
	153 Move V8, V0
	154 Move V9, V1
	155 Move V10, V2
	156 Move V11, V3
	157 Move W8, [X24+4]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X8, 0x38B000
	160 Move X8, [X8+856]
	161 Move X0, [X8]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Add X8, X31, 272
	167 Move X0, X31
	168 Call InitialStyle.get_backgroundImage
	169 Move V0, [X31+272]
	170 Move V1, [X31+288]
	171 Move W8, [X24+4]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X8, 0x38B000
	174 Move X8, [X8+856]
	175 Move X0, [X8]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move X0, X31
	181 Call InitialStyle.get_backgroundPositionX
	182 Move X25, X0
	183 Move X24, X1
	184 Move W8, [X24+4]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X8, 0x38B000
	187 Move X8, [X8+856]
	188 Move X0, [X8]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Move X0, X31
	194 Call InitialStyle.get_backgroundPositionY
	195 Move X25, X0
	196 Move X24, X1
	197 Move W8, [X24+4]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X8, 0x38B000
	200 Move X8, [X8+856]
	201 Move X0, [X8]
	202 Move W8, [X0+224]
	203 Compare W8, 0
	204 JumpIfNotEqual {206}
	205 Call 0x1C17DFC
	206 Move X0, X31
	207 Call InitialStyle.get_backgroundRepeat
	208 Move X24, X0
	209 Move W8, [X24+4]
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X8, 0x38B000
	212 Move X8, [X8+856]
	213 Move X0, [X8]
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfNotEqual {218}
	217 Call 0x1C17DFC
	218 Move X0, X31
	219 Call InitialStyle.get_borderBottomColor
	220 Move V8, V0
	221 Move V9, V1
	222 Move V10, V2
	223 Move V11, V3
	224 Move W8, [X24+4]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X8, 0x38B000
	227 Move X8, [X8+856]
	228 Move X0, [X8]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X0, X31
	234 Call InitialStyle.get_borderBottomLeftRadius
	235 Move X24, X0
	236 Move W8, [X24+4]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X8, 0x38B000
	239 Move X8, [X8+856]
	240 Move X0, [X8]
	241 Move W8, [X0+224]
	242 Compare W8, 0
	243 JumpIfNotEqual {245}
	244 Call 0x1C17DFC
	245 Move X0, X31
	246 Call InitialStyle.get_borderBottomRightRadius
	247 Move X24, X0
	248 Move W8, [X24+4]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move X8, 0x38B000
	251 Move X8, [X8+856]
	252 Move X0, [X8]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X31
	258 Call InitialStyle.get_borderLeftColor
	259 Move V8, V0
	260 Move V9, V1
	261 Move V10, V2
	262 Move V11, V3
	263 Move W8, [X24+4]
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Move X8, 0x38A000
	266 Move X8, [X8+856]
	267 Move X0, [X8]
	268 Move W8, [X0+224]
	269 Compare W8, 0
	270 JumpIfNotEqual {272}
	271 Call 0x1C17DFC
	272 Move X0, X31
	273 Call InitialStyle.get_borderRightColor
	274 Move V8, V0
	275 Move V9, V1
	276 Move V10, V2
	277 Move V11, V3
	278 Move W8, [X24+4]
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X8, 0x38A000
	281 Move X8, [X8+856]
	282 Move X0, [X8]
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {287}
	286 Call 0x1C17DFC
	287 Move X0, X31
	288 Call InitialStyle.get_borderTopColor
	289 Move V8, V0
	290 Move V9, V1
	291 Move V10, V2
	292 Move V11, V3
	293 Move W8, [X24+4]
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move X8, 0x38A000
	296 Move X8, [X8+856]
	297 Move X0, [X8]
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {302}
	301 Call 0x1C17DFC
	302 Move X0, X31
	303 Call InitialStyle.get_borderTopLeftRadius
	304 Move X24, X0
	305 Move W8, [X24+4]
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Move X8, 0x38A000
	308 Move X8, [X8+856]
	309 Move X0, [X8]
	310 Move W8, [X0+224]
	311 Compare W8, 0
	312 JumpIfNotEqual {314}
	313 Call 0x1C17DFC
	314 Move X0, X31
	315 Call InitialStyle.get_borderTopRightRadius
	316 Move X24, X0
	317 Move W8, [X24+4]
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move X8, 0x38A000
	320 Move X8, [X8+856]
	321 Move X0, [X8]
	322 Move W8, [X0+224]
	323 Compare W8, 0
	324 JumpIfNotEqual {326}
	325 Call 0x1C17DFC
	326 Move X0, X31
	327 Call InitialStyle.get_opacity
	328 Move V8, V0
	329 Move W8, [X24+4]
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move X8, 0x38A000
	332 Move X8, [X8+856]
	333 Move X0, [X8]
	334 Move W8, [X0+224]
	335 Compare W8, 0
	336 JumpIfNotEqual {338}
	337 Call 0x1C17DFC
	338 Move X0, X31
	339 Call InitialStyle.get_overflow
	340 Move W24, W0
	341 Move W8, [X24+4]
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Move X8, 0x38A000
	344 Move X8, [X8+856]
	345 Move X0, [X8]
	346 Move W8, [X0+224]
	347 Compare W8, 0
	348 JumpIfNotEqual {350}
	349 Call 0x1C17DFC
	350 Move X0, X31
	351 Call InitialStyle.get_unityBackgroundImageTintColor
	352 Move V8, V0
	353 Move V9, V1
	354 Move V10, V2
	355 Move V11, V3
	356 Move W8, [X24+4]
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move X8, 0x38A000
	359 Move X8, [X8+856]
	360 Move X0, [X8]
	361 Move W8, [X0+224]
	362 Compare W8, 0
	363 JumpIfNotEqual {365}
	364 Call 0x1C17DFC
	365 Move X0, X31
	366 Call InitialStyle.get_unityOverflowClipBox
	367 Move W24, W0
	368 Move W8, [X24+4]
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move X8, 0x38A000
	371 Move X8, [X8+856]
	372 Move X0, [X8]
	373 Move W8, [X0+224]
	374 Compare W8, 0
	375 JumpIfNotEqual {377}
	376 Call 0x1C17DFC
	377 Move X0, X31
	378 Call InitialStyle.get_unitySliceBottom
	379 Move W24, W0
	380 Move W8, [X24+4]
	381 NotImplemented "Instruction CMP not yet implemented."
	382 Move X8, 0x38A000
	383 Move X8, [X8+856]
	384 Move X0, [X8]
	385 Move W8, [X0+224]
	386 Compare W8, 0
	387 JumpIfNotEqual {389}
	388 Call 0x1C17DFC
	389 Move X0, X31
	390 Call InitialStyle.get_unitySliceLeft
	391 Move W24, W0
	392 Move W8, [X24+4]
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Move X8, 0x38A000
	395 Move X8, [X8+856]
	396 Move X0, [X8]
	397 Move W8, [X0+224]
	398 Compare W8, 0
	399 JumpIfNotEqual {401}
	400 Call 0x1C17DFC
	401 Move X0, X31
	402 Call InitialStyle.get_unitySliceRight
	403 Move W24, W0
	404 Move W8, [X24+4]
	405 NotImplemented "Instruction CMP not yet implemented."
	406 Move X8, 0x38A000
	407 Move X8, [X8+856]
	408 Move X0, [X8]
	409 Move W8, [X0+224]
	410 Compare W8, 0
	411 JumpIfNotEqual {413}
	412 Call 0x1C17DFC
	413 Move X0, X31
	414 Call InitialStyle.get_unitySliceScale
	415 Move V8, V0
	416 Move W8, [X24+4]
	417 NotImplemented "Instruction CMP not yet implemented."
	418 Move X8, 0x38A000
	419 Move X8, [X8+856]
	420 Move X0, [X8]
	421 Move W8, [X0+224]
	422 Compare W8, 0
	423 JumpIfNotEqual {425}
	424 Call 0x1C17DFC
	425 Move X0, X31
	426 Call InitialStyle.get_unitySliceTop
	427 Move W24, W0
	428 Move W8, [X24+4]
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Move X8, 0x38A000
	431 Move X8, [X8+856]
	432 Move X0, [X8]
	433 Move W8, [X0+224]
	434 Compare W8, 0
	435 JumpIfNotEqual {437}
	436 Call 0x1C17DFC
	437 Move X0, X31
	438 Call InitialStyle.get_unityTextOverflowPosition
	439 Move W24, W0
	440 Move W8, [X24+4]
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move X8, 0x38A000
	443 Move X8, [X8+856]
	444 Move X0, [X8]
	445 Move W8, [X0+224]
	446 Compare W8, 0
	447 JumpIfNotEqual {449}
	448 Call 0x1C17DFC
	449 Move X0, X31
	450 Call InitialStyle.get_fontSize
	451 Move X24, X0
	452 Move W8, [X24+4]
	453 NotImplemented "Instruction CMP not yet implemented."
	454 Move X8, 0x38A000
	455 Move X8, [X8+856]
	456 Move X0, [X8]
	457 Move W8, [X0+224]
	458 Compare W8, 0
	459 JumpIfNotEqual {461}
	460 Call 0x1C17DFC
	461 Move X0, X31
	462 Call InitialStyle.get_letterSpacing
	463 Move X24, X0
	464 Move W8, [X24+4]
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Move X8, 0x38A000
	467 Move X8, [X8+856]
	468 Move X0, [X8]
	469 Move W8, [X0+224]
	470 Compare W8, 0
	471 JumpIfNotEqual {473}
	472 Call 0x1C17DFC
	473 Move X0, X31
	474 Call InitialStyle.get_unityFont
	475 Move X24, X0
	476 Move W8, [X24+4]
	477 NotImplemented "Instruction CMP not yet implemented."
	478 Move X8, 0x38A000
	479 Move X8, [X8+856]
	480 Move X0, [X8]
	481 Move W8, [X0+224]
	482 Compare W8, 0
	483 JumpIfNotEqual {485}
	484 Call 0x1C17DFC
	485 Move X0, X31
	486 Call InitialStyle.get_unityFontDefinition
	487 Move W8, [X24+4]
	488 NotImplemented "Instruction CMP not yet implemented."
	489 Move X8, 0x38A000
	490 Move X8, [X8+856]
	491 Move X0, [X8]
	492 Move W8, [X0+224]
	493 Compare W8, 0
	494 JumpIfNotEqual {496}
	495 Call 0x1C17DFC
	496 Move X0, X31
	497 Call InitialStyle.get_unityFontStyleAndWeight
	498 Move W24, W0
	499 Move W8, [X24+4]
	500 NotImplemented "Instruction CMP not yet implemented."
	501 Move X8, 0x38A000
	502 Move X8, [X8+856]
	503 Move X0, [X8]
	504 Move W8, [X0+224]
	505 Compare W8, 0
	506 JumpIfNotEqual {508}
	507 Call 0x1C17DFC
	508 Move X0, X31
	509 Call InitialStyle.get_unityParagraphSpacing
	510 Move X24, X0
	511 Move W8, [X24+4]
	512 NotImplemented "Instruction CMP not yet implemented."
	513 Move X8, 0x38A000
	514 Move X8, [X8+856]
	515 Move X0, [X8]
	516 Move W8, [X0+224]
	517 Compare W8, 0
	518 JumpIfNotEqual {520}
	519 Call 0x1C17DFC
	520 Move X0, X31
	521 Call InitialStyle.get_unityTextAlign
	522 Move W24, W0
	523 Move W8, [X24+4]
	524 NotImplemented "Instruction CMP not yet implemented."
	525 Move X8, 0x38A000
	526 Move X8, [X8+856]
	527 Move X0, [X8]
	528 Move W8, [X0+224]
	529 Compare W8, 0
	530 JumpIfNotEqual {532}
	531 Call 0x1C17DFC
	532 Move X0, X31
	533 Call InitialStyle.get_unityTextOutlineColor
	534 Move V8, V0
	535 Move V9, V1
	536 Move V10, V2
	537 Move V11, V3
	538 Move W8, [X24+4]
	539 NotImplemented "Instruction CMP not yet implemented."
	540 Move X8, 0x38A000
	541 Move X8, [X8+856]
	542 Move X0, [X8]
	543 Move W8, [X0+224]
	544 Compare W8, 0
	545 JumpIfNotEqual {547}
	546 Call 0x1C17DFC
	547 Move X0, X31
	548 Call InitialStyle.get_unityTextOutlineWidth
	549 Move V8, V0
	550 Move W8, [X24+4]
	551 NotImplemented "Instruction CMP not yet implemented."
	552 Move X8, 0x38A000
	553 Move X8, [X8+856]
	554 Move X0, [X8]
	555 Move W8, [X0+224]
	556 Compare W8, 0
	557 JumpIfNotEqual {559}
	558 Call 0x1C17DFC
	559 Move X0, X31
	560 Call InitialStyle.get_visibility
	561 Move W24, W0
	562 Move W8, [X24+4]
	563 NotImplemented "Instruction CMP not yet implemented."
	564 Move X8, 0x38A000
	565 Move X8, [X8+856]
	566 Move X0, [X8]
	567 Move W8, [X0+224]
	568 Compare W8, 0
	569 JumpIfNotEqual {571}
	570 Call 0x1C17DFC
	571 Move X0, X31
	572 Call InitialStyle.get_whiteSpace
	573 Move W24, W0
	574 Move W8, [X24+4]
	575 NotImplemented "Instruction CMP not yet implemented."
	576 Move X8, 0x38A000
	577 Move X8, [X8+856]
	578 Move X0, [X8]
	579 Move W8, [X0+224]
	580 Compare W8, 0
	581 JumpIfNotEqual {583}
	582 Call 0x1C17DFC
	583 Move X0, X31
	584 Call InitialStyle.get_wordSpacing
	585 Move X24, X0
	586 Move W8, [X24+4]
	587 NotImplemented "Instruction CMP not yet implemented."
	588 Move X8, 0x38A000
	589 Move X8, [X8+856]
	590 Move X0, [X8]
	591 Move W8, [X0+224]
	592 Compare W8, 0
	593 JumpIfNotEqual {595}
	594 Call 0x1C17DFC
	595 Move X0, X31
	596 Call InitialStyle.get_alignItems
	597 Move W8, [X24+4]
	598 Move W8, [X24+4]
	599 NotImplemented "Instruction CMP not yet implemented."
	600 Move X8, 0x38A000
	601 Move X8, [X8+856]
	602 Move X0, [X8]
	603 Move W8, [X0+224]
	604 Compare W8, 0
	605 JumpIfNotEqual {607}
	606 Call 0x1C17DFC
	607 Move X0, X31
	608 Call InitialStyle.get_alignSelf
	609 Move W8, [X24+4]
	610 Move W8, [X24+4]
	611 NotImplemented "Instruction CMP not yet implemented."
	612 Move X8, 0x38A000
	613 Move X8, [X8+856]
	614 Move X0, [X8]
	615 Move W8, [X0+224]
	616 Compare W8, 0
	617 JumpIfNotEqual {619}
	618 Call 0x1C17DFC
	619 Move X0, X31
	620 Call InitialStyle.get_borderBottomWidth
	621 Move V8, V0
	622 Move W8, [X24+4]
	623 NotImplemented "Instruction CMP not yet implemented."
	624 Move X8, 0x38A000
	625 Move X8, [X8+856]
	626 Move X0, [X8]
	627 Move W8, [X0+224]
	628 Compare W8, 0
	629 JumpIfNotEqual {631}
	630 Call 0x1C17DFC
	631 Move X0, X31
	632 Call InitialStyle.get_borderLeftWidth
	633 Move V8, V0
	634 Move W8, [X24+4]
	635 NotImplemented "Instruction CMP not yet implemented."
	636 Move X8, 0x38A000
	637 Move X8, [X8+856]
	638 Move X0, [X8]
	639 Move W8, [X0+224]
	640 Compare W8, 0
	641 JumpIfNotEqual {643}
	642 Call 0x1C17DFC
	643 Move X0, X31
	644 Call InitialStyle.get_borderRightWidth
	645 Move V8, V0
	646 Move W8, [X24+4]
	647 NotImplemented "Instruction CMP not yet implemented."
	648 Move X8, 0x38A000
	649 Move X8, [X8+856]
	650 Move X0, [X8]
	651 Move W8, [X0+224]
	652 Compare W8, 0
	653 JumpIfNotEqual {655}
	654 Call 0x1C17DFC
	655 Move X0, X31
	656 Call InitialStyle.get_borderTopWidth
	657 Move V8, V0
	658 Move W8, [X24+4]
	659 NotImplemented "Instruction CMP not yet implemented."
	660 Move X8, 0x38A000
	661 Move X8, [X8+856]
	662 Move X0, [X8]
	663 Move W8, [X0+224]
	664 Compare W8, 0
	665 JumpIfNotEqual {667}
	666 Call 0x1C17DFC
	667 Move X0, X31
	668 Call InitialStyle.get_bottom
	669 Move X24, X0
	670 Move W8, [X24+4]
	671 NotImplemented "Instruction CMP not yet implemented."
	672 Move X8, 0x38A000
	673 Move X8, [X8+856]
	674 Move X0, [X8]
	675 Move W8, [X0+224]
	676 Compare W8, 0
	677 JumpIfNotEqual {679}
	678 Call 0x1C17DFC
	679 Move X0, X31
	680 Call InitialStyle.get_display
	681 Move W8, [X24+4]
	682 Move W8, [X24+4]
	683 NotImplemented "Instruction CMP not yet implemented."
	684 Move X8, 0x38A000
	685 Move X8, [X8+856]
	686 Move X0, [X8]
	687 Move W8, [X0+224]
	688 Compare W8, 0
	689 JumpIfNotEqual {691}
	690 Call 0x1C17DFC
	691 Move X0, X31
	692 Call InitialStyle.get_flexBasis
	693 Move X24, X0
	694 Move W8, [X24+4]
	695 NotImplemented "Instruction CMP not yet implemented."
	696 Move X8, 0x38A000
	697 Move X8, [X8+856]
	698 Move X0, [X8]
	699 Move W8, [X0+224]
	700 Compare W8, 0
	701 JumpIfNotEqual {703}
	702 Call 0x1C17DFC
	703 Move X0, X31
	704 Call InitialStyle.get_flexDirection
	705 Move W24, W0
	706 Move W8, [X24+4]
	707 NotImplemented "Instruction CMP not yet implemented."
	708 Move X8, 0x38A000
	709 Move X8, [X8+856]
	710 Move X0, [X8]
	711 Move W8, [X0+224]
	712 Compare W8, 0
	713 JumpIfNotEqual {715}
	714 Call 0x1C17DFC
	715 Move X0, X31
	716 Call InitialStyle.get_flexGrow
	717 Move V8, V0
	718 Move W8, [X24+4]
	719 NotImplemented "Instruction CMP not yet implemented."
	720 Move X8, 0x38A000
	721 Move X8, [X8+856]
	722 Move X0, [X8]
	723 Move W8, [X0+224]
	724 Compare W8, 0
	725 JumpIfNotEqual {727}
	726 Call 0x1C17DFC
	727 Move X0, X31
	728 Call InitialStyle.get_flexShrink
	729 Move V8, V0
	730 Move W8, [X24+4]
	731 NotImplemented "Instruction CMP not yet implemented."
	732 Move X8, 0x38A000
	733 Move X8, [X8+856]
	734 Move X0, [X8]
	735 Move W8, [X0+224]
	736 Compare W8, 0
	737 JumpIfNotEqual {739}
	738 Call 0x1C17DFC
	739 Move X0, X31
	740 Call InitialStyle.get_flexWrap
	741 Move W24, W0
	742 Move W8, [X24+4]
	743 NotImplemented "Instruction CMP not yet implemented."
	744 Move X8, 0x38A000
	745 Move X8, [X8+856]
	746 Move X0, [X8]
	747 Move W8, [X0+224]
	748 Compare W8, 0
	749 JumpIfNotEqual {751}
	750 Call 0x1C17DFC
	751 Move X0, X31
	752 Call InitialStyle.get_height
	753 Move X24, X0
	754 Move W8, [X24+4]
	755 NotImplemented "Instruction CMP not yet implemented."
	756 Move X8, 0x38A000
	757 Move X8, [X8+856]
	758 Move X0, [X8]
	759 Move W8, [X0+224]
	760 Compare W8, 0
	761 JumpIfNotEqual {763}
	762 Call 0x1C17DFC
	763 Move X0, X31
	764 Call InitialStyle.get_justifyContent
	765 Move W24, W0
	766 Move W8, [X24+4]
	767 NotImplemented "Instruction CMP not yet implemented."
	768 Move X8, 0x38A000
	769 Move X8, [X8+856]
	770 Move X0, [X8]
	771 Move W8, [X0+224]
	772 Compare W8, 0
	773 JumpIfNotEqual {775}
	774 Call 0x1C17DFC
	775 Move X0, X31
	776 Call InitialStyle.get_left
	777 Move X24, X0
	778 Move W8, [X24+4]
	779 NotImplemented "Instruction CMP not yet implemented."
	780 Move X8, 0x38A000
	781 Move X8, [X8+856]
	782 Move X0, [X8]
	783 Move W8, [X0+224]
	784 Compare W8, 0
	785 JumpIfNotEqual {787}
	786 Call 0x1C17DFC
	787 Move X0, X31
	788 Call InitialStyle.get_marginBottom
	789 Move X24, X0
	790 Move W8, [X24+4]
	791 NotImplemented "Instruction CMP not yet implemented."
	792 Move X8, 0x38A000
	793 Move X8, [X8+856]
	794 Move X0, [X8]
	795 Move W8, [X0+224]
	796 Compare W8, 0
	797 JumpIfNotEqual {799}
	798 Call 0x1C17DFC
	799 Move X0, X31
	800 Call InitialStyle.get_marginLeft
	801 Move X24, X0
	802 Move W8, [X24+4]
	803 NotImplemented "Instruction CMP not yet implemented."
	804 Move X8, 0x38A000
	805 Move X8, [X8+856]
	806 Move X0, [X8]
	807 Move W8, [X0+224]
	808 Compare W8, 0
	809 JumpIfNotEqual {811}
	810 Call 0x1C17DFC
	811 Move X0, X31
	812 Call InitialStyle.get_marginRight
	813 Move X24, X0
	814 Move W8, [X24+4]
	815 NotImplemented "Instruction CMP not yet implemented."
	816 Move X8, 0x38A000
	817 Move X8, [X8+856]
	818 Move X0, [X8]
	819 Move W8, [X0+224]
	820 Compare W8, 0
	821 JumpIfNotEqual {823}
	822 Call 0x1C17DFC
	823 Move X0, X31
	824 Call InitialStyle.get_marginTop
	825 Move X24, X0
	826 Move W8, [X24+4]
	827 NotImplemented "Instruction CMP not yet implemented."
	828 Move X8, 0x38A000
	829 Move X8, [X8+856]
	830 Move X0, [X8]
	831 Move W8, [X0+224]
	832 Compare W8, 0
	833 JumpIfNotEqual {835}
	834 Call 0x1C17DFC
	835 Move X0, X31
	836 Call InitialStyle.get_maxHeight
	837 Move X24, X0
	838 Move W8, [X24+4]
	839 NotImplemented "Instruction CMP not yet implemented."
	840 Move X8, 0x38A000
	841 Move X8, [X8+856]
	842 Move X0, [X8]
	843 Move W8, [X0+224]
	844 Compare W8, 0
	845 JumpIfNotEqual {847}
	846 Call 0x1C17DFC
	847 Move X0, X31
	848 Call InitialStyle.get_maxWidth
	849 Move X24, X0
	850 Move W8, [X24+4]
	851 NotImplemented "Instruction CMP not yet implemented."
	852 Move X8, 0x38A000
	853 Move X8, [X8+856]
	854 Move X0, [X8]
	855 Move W8, [X0+224]
	856 Compare W8, 0
	857 JumpIfNotEqual {859}
	858 Call 0x1C17DFC
	859 Move X0, X31
	860 Call InitialStyle.get_minHeight
	861 Move X24, X0
	862 Move W8, [X24+4]
	863 NotImplemented "Instruction CMP not yet implemented."
	864 Move X8, 0x38A000
	865 Move X8, [X8+856]
	866 Move X0, [X8]
	867 Move W8, [X0+224]
	868 Compare W8, 0
	869 JumpIfNotEqual {871}
	870 Call 0x1C17DFC
	871 Move X0, X31
	872 Call InitialStyle.get_minWidth
	873 Move X24, X0
	874 Move W8, [X24+4]
	875 NotImplemented "Instruction CMP not yet implemented."
	876 Move X8, 0x38A000
	877 Move X8, [X8+856]
	878 Move X0, [X8]
	879 Move W8, [X0+224]
	880 Compare W8, 0
	881 JumpIfNotEqual {883}
	882 Call 0x1C17DFC
	883 Move X0, X31
	884 Call InitialStyle.get_paddingBottom
	885 Move X24, X0
	886 Move W8, [X24+4]
	887 NotImplemented "Instruction CMP not yet implemented."
	888 Move X8, 0x38A000
	889 Move X8, [X8+856]
	890 Move X0, [X8]
	891 Move W8, [X0+224]
	892 Compare W8, 0
	893 JumpIfNotEqual {895}
	894 Call 0x1C17DFC
	895 Move X0, X31
	896 Call InitialStyle.get_paddingLeft
	897 Move X24, X0
	898 Move W8, [X24+4]
	899 NotImplemented "Instruction CMP not yet implemented."
	900 Move X8, 0x38A000
	901 Move X8, [X8+856]
	902 Move X0, [X8]
	903 Move W8, [X0+224]
	904 Compare W8, 0
	905 JumpIfNotEqual {907}
	906 Call 0x1C17DFC
	907 Move X0, X31
	908 Call InitialStyle.get_paddingRight
	909 Move X24, X0
	910 Move W8, [X24+4]
	911 NotImplemented "Instruction CMP not yet implemented."
	912 Move X8, 0x38A000
	913 Move X8, [X8+856]
	914 Move X0, [X8]
	915 Move W8, [X0+224]
	916 Compare W8, 0
	917 JumpIfNotEqual {919}
	918 Call 0x1C17DFC
	919 Move X0, X31
	920 Call InitialStyle.get_paddingTop
	921 Move X24, X0
	922 Move W8, [X24+4]
	923 NotImplemented "Instruction CMP not yet implemented."
	924 Move X8, 0x38A000
	925 Move X8, [X8+856]
	926 Move X0, [X8]
	927 Move W8, [X0+224]
	928 Compare W8, 0
	929 JumpIfNotEqual {931}
	930 Call 0x1C17DFC
	931 Move X0, X31
	932 Call InitialStyle.get_position
	933 Move W24, W0
	934 Move W8, [X24+4]
	935 NotImplemented "Instruction CMP not yet implemented."
	936 Move X8, 0x38A000
	937 Move X8, [X8+856]
	938 Move X0, [X8]
	939 Move W8, [X0+224]
	940 Compare W8, 0
	941 JumpIfNotEqual {943}
	942 Call 0x1C17DFC
	943 Move X0, X31
	944 Call InitialStyle.get_right
	945 Move X24, X0
	946 Move W8, [X24+4]
	947 NotImplemented "Instruction CMP not yet implemented."
	948 Move X8, 0x38A000
	949 Move X8, [X8+856]
	950 Move X0, [X8]
	951 Move W8, [X0+224]
	952 Compare W8, 0
	953 JumpIfNotEqual {955}
	954 Call 0x1C17DFC
	955 Move X0, X31
	956 Call InitialStyle.get_top
	957 Move X24, X0
	958 Move W8, [X24+4]
	959 NotImplemented "Instruction CMP not yet implemented."
	960 Move X8, 0x38A000
	961 Move X8, [X8+856]
	962 Move X0, [X8]
	963 Move W8, [X0+224]
	964 Compare W8, 0
	965 JumpIfNotEqual {967}
	966 Call 0x1C17DFC
	967 Move X0, X31
	968 Call InitialStyle.get_width
	969 Move X24, X0
	970 Move S8, [X24+8]
	971 Move S9, [X24+12]
	972 Move S10, [X24+16]
	973 Move S11, [X24+20]
	974 Compare X22, 0
	975 JumpIfEqual {4050}
	976 Move X0, X22
	977 Move X1, X31
	978 Call VisualElement.get_styleAnimation, X0
	979 Move X8, 0x38B000
	980 Move X8, [X8+864]
	981 Move X24, X0
	982 Add X0, X23, 40
	983 Move X1, [X8]
	984 Call StyleDataRef`1<VisualData>.Read, X0
	985 Compare X24, 0
	986 JumpIfEqual {4050}
	987 Move X10, 0x343000
	988 Move S13, [X0+8]
	989 Move S12, [X0+12]
	990 Move X8, [X24]
	991 Move S15, [X0]
	992 Move S14, [X0+4]
	993 Move X10, [X10+3792]
	994 NotImplemented "Instruction LDRH not yet implemented."
	995 Move X1, [X10]
	996 Compare X9, 0
	997 JumpIfEqual {1004}
	998 Move X10, [X8+176]
	999 Add X10, X10, 8
	1000 NotImplemented "Instruction LDUR not yet implemented."
	1001 NotImplemented "Instruction CMP not yet implemented."
	1002 Subtract X9, X9, 1
	1003 Add X10, X10, 16
	1004 Move W2, 3
	1005 Move X0, X24
	1006 Call 0x1C5D788
	1007 Add X24, X24, 8
	1008 Move X0, X24
	1009 Move X1, X31
	1010 Call GCHandle.get_IsAllocated, X0
	1011 Move TEMP, X0
	1012 And TEMP, TEMP, 1
	1013 Compare TEMP, 1
	1014 JumpIfNotEqual {3516}
	1015 Move X0, X24
	1016 Move X1, X31
	1017 Call GCHandle.get_Target, X0
	1018 Add X8, X31, 272
	1019 Move X1, X31
	1020 Call Background.FromObject, X0
	1021 Move V0, [X31+272]
	1022 Move V1, [X31+288]
	1023 Move [X31+176], V0
	1024 Move [X31+184], V1
	1025 Move X25, [X24+8]
	1026 Move W24, [X24+16]
	1027 Compare X22, 0
	1028 JumpIfEqual {4050}
	1029 Move X0, X22
	1030 Move X1, X31
	1031 Call VisualElement.get_styleAnimation, X0
	1032 Move X8, 0x38B000
	1033 Move X8, [X8+864]
	1034 Move X22, X0
	1035 Add X0, X23, 40
	1036 Move X1, [X8]
	1037 Call StyleDataRef`1<VisualData>.Read, X0
	1038 Compare X22, 0
	1039 JumpIfEqual {4050}
	1040 Move X10, 0x343000
	1041 Move X8, [X22]
	1042 Move W23, [X0+56]
	1043 Move X26, [X0+48]
	1044 Move X10, [X10+3792]
	1045 NotImplemented "Instruction LDRH not yet implemented."
	1046 Move W24, W24
	1047 Move X1, [X10]
	1048 Compare X9, 0
	1049 JumpIfEqual {1056}
	1050 Move X10, [X8+176]
	1051 Add X10, X10, 8
	1052 NotImplemented "Instruction LDUR not yet implemented."
	1053 NotImplemented "Instruction CMP not yet implemented."
	1054 Subtract X9, X9, 1
	1055 Add X10, X10, 16
	1056 Move W2, 13
	1057 Move X0, X22
	1058 Call 0x1C5D788
	1059 Move X25, [X24+8]
	1060 Move W24, [X24+16]
	1061 Compare X22, 0
	1062 JumpIfEqual {4050}
	1063 Move X0, X22
	1064 Move X1, X31
	1065 Call VisualElement.get_styleAnimation, X0
	1066 Move X8, 0x38B000
	1067 Move X8, [X8+864]
	1068 Move X22, X0
	1069 Add X0, X23, 40
	1070 Move X1, [X8]
	1071 Call StyleDataRef`1<VisualData>.Read, X0
	1072 Compare X22, 0
	1073 JumpIfEqual {4050}
	1074 Move X10, 0x343000
	1075 Move X8, [X22]
	1076 Move W23, [X0+68]
	1077 NotImplemented "Instruction LDUR not yet implemented."
	1078 Move X10, [X10+3792]
	1079 NotImplemented "Instruction LDRH not yet implemented."
	1080 Move W24, W24
	1081 Move X1, [X10]
	1082 Compare X9, 0
	1083 JumpIfEqual {1090}
	1084 Move X10, [X8+176]
	1085 Add X10, X10, 8
	1086 NotImplemented "Instruction LDUR not yet implemented."
	1087 NotImplemented "Instruction CMP not yet implemented."
	1088 Subtract X9, X9, 1
	1089 Add X10, X10, 16
	1090 Move W2, 13
	1091 Move X0, X22
	1092 Call 0x1C5D788
	1093 Move X24, [X24+8]
	1094 Compare X22, 0
	1095 JumpIfEqual {4050}
	1096 Move X0, X22
	1097 Move X1, X31
	1098 Call VisualElement.get_styleAnimation, X0
	1099 Move X8, 0x38B000
	1100 Move X8, [X8+864]
	1101 Move X22, X0
	1102 Add X0, X23, 40
	1103 Move X1, [X8]
	1104 Call StyleDataRef`1<VisualData>.Read, X0
	1105 Compare X22, 0
	1106 JumpIfEqual {4050}
	1107 Move X10, 0x343000
	1108 Move X8, [X22]
	1109 Move X23, [X0+72]
	1110 Move X10, [X10+3792]
	1111 NotImplemented "Instruction LDRH not yet implemented."
	1112 Move X1, [X10]
	1113 Compare X9, 0
	1114 JumpIfEqual {1121}
	1115 Move X10, [X8+176]
	1116 Add X10, X10, 8
	1117 NotImplemented "Instruction LDUR not yet implemented."
	1118 NotImplemented "Instruction CMP not yet implemented."
	1119 Subtract X9, X9, 1
	1120 Add X10, X10, 16
	1121 Move W2, 14
	1122 Move X0, X22
	1123 Call 0x1C5D788
	1124 Move S8, [X24+8]
	1125 Move S9, [X24+12]
	1126 Move S10, [X24+16]
	1127 Move S11, [X24+20]
	1128 Compare X22, 0
	1129 JumpIfEqual {4050}
	1130 Move X0, X22
	1131 Move X1, X31
	1132 Call VisualElement.get_styleAnimation, X0
	1133 Move X8, 0x38B000
	1134 Move X8, [X8+864]
	1135 Move X24, X0
	1136 Add X0, X23, 40
	1137 Move X1, [X8]
	1138 Call StyleDataRef`1<VisualData>.Read, X0
	1139 Compare X24, 0
	1140 JumpIfEqual {4050}
	1141 Move X10, 0x343000
	1142 Move S13, [X0+108]
	1143 Move S12, [X0+112]
	1144 Move X8, [X24]
	1145 Move S15, [X0+100]
	1146 Move S14, [X0+104]
	1147 Move X10, [X10+3792]
	1148 NotImplemented "Instruction LDRH not yet implemented."
	1149 Move X1, [X10]
	1150 Compare X9, 0
	1151 JumpIfEqual {1158}
	1152 Move X10, [X8+176]
	1153 Add X10, X10, 8
	1154 NotImplemented "Instruction LDUR not yet implemented."
	1155 NotImplemented "Instruction CMP not yet implemented."
	1156 Subtract X9, X9, 1
	1157 Add X10, X10, 16
	1158 Move W2, 3
	1159 Move X0, X24
	1160 Call 0x1C5D788
	1161 Move X24, [X24+8]
	1162 Compare X22, 0
	1163 JumpIfEqual {4050}
	1164 Move X0, X22
	1165 Move X1, X31
	1166 Call VisualElement.get_styleAnimation, X0
	1167 Move X8, 0x38B000
	1168 Move X8, [X8+864]
	1169 Move X22, X0
	1170 Add X0, X23, 40
	1171 Move X1, [X8]
	1172 Call StyleDataRef`1<VisualData>.Read, X0
	1173 Compare X22, 0
	1174 JumpIfEqual {4050}
	1175 Move X10, 0x343000
	1176 Move X8, [X22]
	1177 NotImplemented "Instruction LDUR not yet implemented."
	1178 Move X10, [X10+3792]
	1179 NotImplemented "Instruction LDRH not yet implemented."
	1180 Move X1, [X10]
	1181 Compare X9, 0
	1182 JumpIfEqual {1189}
	1183 Move X10, [X8+176]
	1184 Add X10, X10, 8
	1185 NotImplemented "Instruction LDUR not yet implemented."
	1186 NotImplemented "Instruction CMP not yet implemented."
	1187 Subtract X9, X9, 1
	1188 Add X10, X10, 16
	1189 Move W2, 2
	1190 Move X0, X22
	1191 Call 0x1C5D788
	1192 Move X24, [X24+8]
	1193 Compare X22, 0
	1194 JumpIfEqual {4050}
	1195 Move X0, X22
	1196 Move X1, X31
	1197 Call VisualElement.get_styleAnimation, X0
	1198 Move X8, 0x38B000
	1199 Move X8, [X8+864]
	1200 Move X22, X0
	1201 Add X0, X23, 40
	1202 Move X1, [X8]
	1203 Call StyleDataRef`1<VisualData>.Read, X0
	1204 Compare X22, 0
	1205 JumpIfEqual {4050}
	1206 Move X10, 0x343000
	1207 Move X8, [X22]
	1208 NotImplemented "Instruction LDUR not yet implemented."
	1209 Move X10, [X10+3792]
	1210 NotImplemented "Instruction LDRH not yet implemented."
	1211 Move X1, [X10]
	1212 Compare X9, 0
	1213 JumpIfEqual {1220}
	1214 Move X10, [X8+176]
	1215 Add X10, X10, 8
	1216 NotImplemented "Instruction LDUR not yet implemented."
	1217 NotImplemented "Instruction CMP not yet implemented."
	1218 Subtract X9, X9, 1
	1219 Add X10, X10, 16
	1220 Move W2, 2
	1221 Move X0, X22
	1222 Call 0x1C5D788
	1223 Move S8, [X24+8]
	1224 Move S9, [X24+12]
	1225 Move S10, [X24+16]
	1226 Move S11, [X24+20]
	1227 Compare X22, 0
	1228 JumpIfEqual {4050}
	1229 Move X0, X22
	1230 Move X1, X31
	1231 Call VisualElement.get_styleAnimation, X0
	1232 Move X8, 0x38B000
	1233 Move X8, [X8+864]
	1234 Move X24, X0
	1235 Add X0, X23, 40
	1236 Move X1, [X8]
	1237 Call StyleDataRef`1<VisualData>.Read, X0
	1238 Compare X24, 0
	1239 JumpIfEqual {4050}
	1240 Move X10, 0x343000
	1241 Move S13, [X0+140]
	1242 Move S12, [X0+144]
	1243 Move X8, [X24]
	1244 Move S15, [X0+132]
	1245 Move S14, [X0+136]
	1246 Move X10, [X10+3792]
	1247 NotImplemented "Instruction LDRH not yet implemented."
	1248 Move X1, [X10]
	1249 Compare X9, 0
	1250 JumpIfEqual {1257}
	1251 Move X10, [X8+176]
	1252 Add X10, X10, 8
	1253 NotImplemented "Instruction LDUR not yet implemented."
	1254 NotImplemented "Instruction CMP not yet implemented."
	1255 Subtract X9, X9, 1
	1256 Add X10, X10, 16
	1257 Move W2, 3
	1258 Move X0, X24
	1259 Call 0x1C5D788
	1260 Move S8, [X24+8]
	1261 Move S9, [X24+12]
	1262 Move S10, [X24+16]
	1263 Move S11, [X24+20]
	1264 Compare X22, 0
	1265 JumpIfEqual {4050}
	1266 Move X0, X22
	1267 Move X1, X31
	1268 Call VisualElement.get_styleAnimation, X0
	1269 Move X8, 0x38A000
	1270 Move X8, [X8+864]
	1271 Move X24, X0
	1272 Add X0, X23, 40
	1273 Move X1, [X8]
	1274 Call StyleDataRef`1<VisualData>.Read, X0
	1275 Compare X24, 0
	1276 JumpIfEqual {4050}
	1277 Move X10, 0x342000
	1278 Move S13, [X0+156]
	1279 Move S12, [X0+160]
	1280 Move X8, [X24]
	1281 Move S15, [X0+148]
	1282 Move S14, [X0+152]
	1283 Move X10, [X10+3792]
	1284 NotImplemented "Instruction LDRH not yet implemented."
	1285 Move X1, [X10]
	1286 Compare X9, 0
	1287 JumpIfEqual {1294}
	1288 Move X10, [X8+176]
	1289 Add X10, X10, 8
	1290 NotImplemented "Instruction LDUR not yet implemented."
	1291 NotImplemented "Instruction CMP not yet implemented."
	1292 Subtract X9, X9, 1
	1293 Add X10, X10, 16
	1294 Move W2, 3
	1295 Move X0, X24
	1296 Call 0x1C5D788
	1297 Move S8, [X24+8]
	1298 Move S9, [X24+12]
	1299 Move S10, [X24+16]
	1300 Move S11, [X24+20]
	1301 Compare X22, 0
	1302 JumpIfEqual {4050}
	1303 Move X0, X22
	1304 Move X1, X31
	1305 Call VisualElement.get_styleAnimation, X0
	1306 Move X8, 0x38A000
	1307 Move X8, [X8+864]
	1308 Move X24, X0
	1309 Add X0, X23, 40
	1310 Move X1, [X8]
	1311 Call StyleDataRef`1<VisualData>.Read, X0
	1312 Compare X24, 0
	1313 JumpIfEqual {4050}
	1314 Move X10, 0x342000
	1315 Move S13, [X0+172]
	1316 Move S12, [X0+176]
	1317 Move X8, [X24]
	1318 Move S15, [X0+164]
	1319 Move S14, [X0+168]
	1320 Move X10, [X10+3792]
	1321 NotImplemented "Instruction LDRH not yet implemented."
	1322 Move X1, [X10]
	1323 Compare X9, 0
	1324 JumpIfEqual {1331}
	1325 Move X10, [X8+176]
	1326 Add X10, X10, 8
	1327 NotImplemented "Instruction LDUR not yet implemented."
	1328 NotImplemented "Instruction CMP not yet implemented."
	1329 Subtract X9, X9, 1
	1330 Add X10, X10, 16
	1331 Move W2, 3
	1332 Move X0, X24
	1333 Call 0x1C5D788
	1334 Move X24, [X24+8]
	1335 Compare X22, 0
	1336 JumpIfEqual {4050}
	1337 Move X0, X22
	1338 Move X1, X31
	1339 Call VisualElement.get_styleAnimation, X0
	1340 Move X8, 0x38A000
	1341 Move X8, [X8+864]
	1342 Move X22, X0
	1343 Add X0, X23, 40
	1344 Move X1, [X8]
	1345 Call StyleDataRef`1<VisualData>.Read, X0
	1346 Compare X22, 0
	1347 JumpIfEqual {4050}
	1348 Move X10, 0x342000
	1349 Move X8, [X22]
	1350 NotImplemented "Instruction LDUR not yet implemented."
	1351 Move X10, [X10+3792]
	1352 NotImplemented "Instruction LDRH not yet implemented."
	1353 Move X1, [X10]
	1354 Compare X9, 0
	1355 JumpIfEqual {1362}
	1356 Move X10, [X8+176]
	1357 Add X10, X10, 8
	1358 NotImplemented "Instruction LDUR not yet implemented."
	1359 NotImplemented "Instruction CMP not yet implemented."
	1360 Subtract X9, X9, 1
	1361 Add X10, X10, 16
	1362 Move W2, 2
	1363 Move X0, X22
	1364 Call 0x1C5D788
	1365 Move X24, [X24+8]
	1366 Compare X22, 0
	1367 JumpIfEqual {4050}
	1368 Move X0, X22
	1369 Move X1, X31
	1370 Call VisualElement.get_styleAnimation, X0
	1371 Move X8, 0x38A000
	1372 Move X8, [X8+864]
	1373 Move X22, X0
	1374 Add X0, X23, 40
	1375 Move X1, [X8]
	1376 Call StyleDataRef`1<VisualData>.Read, X0
	1377 Compare X22, 0
	1378 JumpIfEqual {4050}
	1379 Move X10, 0x342000
	1380 Move X8, [X22]
	1381 NotImplemented "Instruction LDUR not yet implemented."
	1382 Move X10, [X10+3792]
	1383 NotImplemented "Instruction LDRH not yet implemented."
	1384 Move X1, [X10]
	1385 Compare X9, 0
	1386 JumpIfEqual {1393}
	1387 Move X10, [X8+176]
	1388 Add X10, X10, 8
	1389 NotImplemented "Instruction LDUR not yet implemented."
	1390 NotImplemented "Instruction CMP not yet implemented."
	1391 Subtract X9, X9, 1
	1392 Add X10, X10, 16
	1393 Move W2, 2
	1394 Move X0, X22
	1395 Call 0x1C5D788
	1396 Move V8, [X24+8]
	1397 Compare X22, 0
	1398 JumpIfEqual {4050}
	1399 Move X0, X22
	1400 Move X1, X31
	1401 Call VisualElement.get_styleAnimation, X0
	1402 Move X8, 0x38A000
	1403 Move X8, [X8+864]
	1404 Move X22, X0
	1405 Add X0, X23, 40
	1406 Move X1, [X8]
	1407 Call StyleDataRef`1<VisualData>.Read, X0
	1408 Compare X22, 0
	1409 JumpIfEqual {4050}
	1410 Move X10, 0x342000
	1411 Move X8, [X22]
	1412 Move V9, [X0+196]
	1413 Move X10, [X10+3792]
	1414 NotImplemented "Instruction LDRH not yet implemented."
	1415 Move X1, [X10]
	1416 Compare X9, 0
	1417 JumpIfEqual {1424}
	1418 Move X10, [X8+176]
	1419 Add X10, X10, 8
	1420 NotImplemented "Instruction LDUR not yet implemented."
	1421 NotImplemented "Instruction CMP not yet implemented."
	1422 Subtract X9, X9, 1
	1423 Add X10, X10, 16
	1424 Move X0, X22
	1425 Move W2, W31
	1426 Call 0x1C5D788
	1427 Move V0, [X24+8]
	1428 Move W8, 0x7F800000
	1429 Move S1, W8
	1430 Move W9, 0x80000000
	1431 NotImplemented "Instruction FCVTZS not yet implemented."
	1432 NotImplemented "Instruction FCMP not yet implemented."
	1433 NotImplemented "Instruction CSEL not yet implemented."
	1434 Compare X22, 0
	1435 JumpIfEqual {4050}
	1436 Move X0, X22
	1437 Move X1, X31
	1438 Call VisualElement.get_styleAnimation, X0
	1439 Move X8, 0x38A000
	1440 Move X8, [X8+864]
	1441 Move X22, X0
	1442 Add X0, X23, 40
	1443 Move X1, [X8]
	1444 Call StyleDataRef`1<VisualData>.Read, X0
	1445 Compare X22, 0
	1446 JumpIfEqual {4050}
	1447 Move X10, 0x342000
	1448 Move X8, [X22]
	1449 Move W23, [X0+200]
	1450 Move X10, [X10+3792]
	1451 NotImplemented "Instruction LDRH not yet implemented."
	1452 Move X1, [X10]
	1453 Compare X9, 0
	1454 JumpIfEqual {1461}
	1455 Move X10, [X8+176]
	1456 Add X10, X10, 8
	1457 NotImplemented "Instruction LDUR not yet implemented."
	1458 NotImplemented "Instruction CMP not yet implemented."
	1459 Subtract X9, X9, 1
	1460 Add X10, X10, 16
	1461 Move W2, 4
	1462 Move X0, X22
	1463 Call 0x1C5D788
	1464 Move V0, [X24+8]
	1465 Move W8, 0x7F800000
	1466 Move S1, W8
	1467 Move W9, 0x80000000
	1468 NotImplemented "Instruction FCVTZS not yet implemented."
	1469 NotImplemented "Instruction FCMP not yet implemented."
	1470 NotImplemented "Instruction CSEL not yet implemented."
	1471 Compare X22, 0
	1472 JumpIfEqual {4050}
	1473 Move X0, X22
	1474 Move X1, X31
	1475 Call VisualElement.get_styleAnimation, X0
	1476 Move X8, 0x38A000
	1477 Move X8, [X8+880]
	1478 Move X22, X0
	1479 Add X0, X23, 16
	1480 Move X1, [X8]
	1481 Call StyleDataRef`1<RareData>.Read, X0
	1482 Compare X22, 0
	1483 JumpIfEqual {4050}
	1484 Move X10, 0x342000
	1485 Move X8, [X22]
	1486 Move W23, [X0+24]
	1487 Move X10, [X10+3792]
	1488 NotImplemented "Instruction LDRH not yet implemented."
	1489 Move X1, [X10]
	1490 Compare X9, 0
	1491 JumpIfEqual {1498}
	1492 Move X10, [X8+176]
	1493 Add X10, X10, 8
	1494 NotImplemented "Instruction LDUR not yet implemented."
	1495 NotImplemented "Instruction CMP not yet implemented."
	1496 Subtract X9, X9, 1
	1497 Add X10, X10, 16
	1498 Move W2, 4
	1499 Move X0, X22
	1500 Call 0x1C5D788
	1501 Move S8, [X24+8]
	1502 Move S9, [X24+12]
	1503 Move S10, [X24+16]
	1504 Move S11, [X24+20]
	1505 Compare X22, 0
	1506 JumpIfEqual {4050}
	1507 Move X0, X22
	1508 Move X1, X31
	1509 Call VisualElement.get_styleAnimation, X0
	1510 Move X8, 0x38A000
	1511 Move X8, [X8+880]
	1512 Move X24, X0
	1513 Add X0, X23, 16
	1514 Move X1, [X8]
	1515 Call StyleDataRef`1<RareData>.Read, X0
	1516 Compare X24, 0
	1517 JumpIfEqual {4050}
	1518 Move X10, 0x342000
	1519 Move S13, [X0+36]
	1520 Move S12, [X0+40]
	1521 Move X8, [X24]
	1522 Move S15, [X0+28]
	1523 Move S14, [X0+32]
	1524 Move X10, [X10+3792]
	1525 NotImplemented "Instruction LDRH not yet implemented."
	1526 Move X1, [X10]
	1527 Compare X9, 0
	1528 JumpIfEqual {1535}
	1529 Move X10, [X8+176]
	1530 Add X10, X10, 8
	1531 NotImplemented "Instruction LDUR not yet implemented."
	1532 NotImplemented "Instruction CMP not yet implemented."
	1533 Subtract X9, X9, 1
	1534 Add X10, X10, 16
	1535 Move W2, 3
	1536 Move X0, X24
	1537 Call 0x1C5D788
	1538 Move V0, [X24+8]
	1539 Move W8, 0x7F800000
	1540 Move S1, W8
	1541 Move W9, 0x80000000
	1542 NotImplemented "Instruction FCVTZS not yet implemented."
	1543 NotImplemented "Instruction FCMP not yet implemented."
	1544 NotImplemented "Instruction CSEL not yet implemented."
	1545 Compare X22, 0
	1546 JumpIfEqual {4050}
	1547 Move X0, X22
	1548 Move X1, X31
	1549 Call VisualElement.get_styleAnimation, X0
	1550 Move X8, 0x38A000
	1551 Move X8, [X8+880]
	1552 Move X22, X0
	1553 Add X0, X23, 16
	1554 Move X1, [X8]
	1555 Call StyleDataRef`1<RareData>.Read, X0
	1556 Compare X22, 0
	1557 JumpIfEqual {4050}
	1558 Move X10, 0x342000
	1559 Move X8, [X22]
	1560 Move W23, [X0+44]
	1561 Move X10, [X10+3792]
	1562 NotImplemented "Instruction LDRH not yet implemented."
	1563 Move X1, [X10]
	1564 Compare X9, 0
	1565 JumpIfEqual {1572}
	1566 Move X10, [X8+176]
	1567 Add X10, X10, 8
	1568 NotImplemented "Instruction LDUR not yet implemented."
	1569 NotImplemented "Instruction CMP not yet implemented."
	1570 Subtract X9, X9, 1
	1571 Add X10, X10, 16
	1572 Move W2, 4
	1573 Move X0, X22
	1574 Call 0x1C5D788
	1575 Move V0, [X24+8]
	1576 Move W8, 0x7F800000
	1577 Move S1, W8
	1578 Move W9, 0x80000000
	1579 NotImplemented "Instruction FCVTZS not yet implemented."
	1580 NotImplemented "Instruction FCMP not yet implemented."
	1581 NotImplemented "Instruction CSEL not yet implemented."
	1582 Compare X22, 0
	1583 JumpIfEqual {4050}
	1584 Move X0, X22
	1585 Move X1, X31
	1586 Call VisualElement.get_styleAnimation, X0
	1587 Move X8, 0x38A000
	1588 Move X8, [X8+880]
	1589 Move X22, X0
	1590 Add X0, X23, 16
	1591 Move X1, [X8]
	1592 Call StyleDataRef`1<RareData>.Read, X0
	1593 Compare X22, 0
	1594 JumpIfEqual {4050}
	1595 Move X10, 0x342000
	1596 Move X8, [X22]
	1597 Move W23, [X0+48]
	1598 Move X10, [X10+3792]
	1599 NotImplemented "Instruction LDRH not yet implemented."
	1600 Move X1, [X10]
	1601 Compare X9, 0
	1602 JumpIfEqual {1609}
	1603 Move X10, [X8+176]
	1604 Add X10, X10, 8
	1605 NotImplemented "Instruction LDUR not yet implemented."
	1606 NotImplemented "Instruction CMP not yet implemented."
	1607 Subtract X9, X9, 1
	1608 Add X10, X10, 16
	1609 Move W2, 1
	1610 Move X0, X22
	1611 Call 0x1C5D788
	1612 Move V0, [X24+8]
	1613 Move W8, 0x7F800000
	1614 Move S1, W8
	1615 Move W9, 0x80000000
	1616 NotImplemented "Instruction FCVTZS not yet implemented."
	1617 NotImplemented "Instruction FCMP not yet implemented."
	1618 NotImplemented "Instruction CSEL not yet implemented."
	1619 Compare X22, 0
	1620 JumpIfEqual {4050}
	1621 Move X0, X22
	1622 Move X1, X31
	1623 Call VisualElement.get_styleAnimation, X0
	1624 Move X8, 0x38A000
	1625 Move X8, [X8+880]
	1626 Move X22, X0
	1627 Add X0, X23, 16
	1628 Move X1, [X8]
	1629 Call StyleDataRef`1<RareData>.Read, X0
	1630 Compare X22, 0
	1631 JumpIfEqual {4050}
	1632 Move X10, 0x342000
	1633 Move X8, [X22]
	1634 Move W23, [X0+52]
	1635 Move X10, [X10+3792]
	1636 NotImplemented "Instruction LDRH not yet implemented."
	1637 Move X1, [X10]
	1638 Compare X9, 0
	1639 JumpIfEqual {1646}
	1640 Move X10, [X8+176]
	1641 Add X10, X10, 8
	1642 NotImplemented "Instruction LDUR not yet implemented."
	1643 NotImplemented "Instruction CMP not yet implemented."
	1644 Subtract X9, X9, 1
	1645 Add X10, X10, 16
	1646 Move W2, 1
	1647 Move X0, X22
	1648 Call 0x1C5D788
	1649 Move V0, [X24+8]
	1650 Move W8, 0x7F800000
	1651 Move S1, W8
	1652 Move W9, 0x80000000
	1653 NotImplemented "Instruction FCVTZS not yet implemented."
	1654 NotImplemented "Instruction FCMP not yet implemented."
	1655 NotImplemented "Instruction CSEL not yet implemented."
	1656 Compare X22, 0
	1657 JumpIfEqual {4050}
	1658 Move X0, X22
	1659 Move X1, X31
	1660 Call VisualElement.get_styleAnimation, X0
	1661 Move X8, 0x38A000
	1662 Move X8, [X8+880]
	1663 Move X22, X0
	1664 Add X0, X23, 16
	1665 Move X1, [X8]
	1666 Call StyleDataRef`1<RareData>.Read, X0
	1667 Compare X22, 0
	1668 JumpIfEqual {4050}
	1669 Move X10, 0x342000
	1670 Move X8, [X22]
	1671 Move W23, [X0+56]
	1672 Move X10, [X10+3792]
	1673 NotImplemented "Instruction LDRH not yet implemented."
	1674 Move X1, [X10]
	1675 Compare X9, 0
	1676 JumpIfEqual {1683}
	1677 Move X10, [X8+176]
	1678 Add X10, X10, 8
	1679 NotImplemented "Instruction LDUR not yet implemented."
	1680 NotImplemented "Instruction CMP not yet implemented."
	1681 Subtract X9, X9, 1
	1682 Add X10, X10, 16
	1683 Move W2, 1
	1684 Move X0, X22
	1685 Call 0x1C5D788
	1686 Move V8, [X24+8]
	1687 Compare X22, 0
	1688 JumpIfEqual {4050}
	1689 Move X0, X22
	1690 Move X1, X31
	1691 Call VisualElement.get_styleAnimation, X0
	1692 Move X8, 0x38A000
	1693 Move X8, [X8+880]
	1694 Move X22, X0
	1695 Add X0, X23, 16
	1696 Move X1, [X8]
	1697 Call StyleDataRef`1<RareData>.Read, X0
	1698 Compare X22, 0
	1699 JumpIfEqual {4050}
	1700 Move X10, 0x342000
	1701 Move X8, [X22]
	1702 Move V9, [X0+60]
	1703 Move X10, [X10+3792]
	1704 NotImplemented "Instruction LDRH not yet implemented."
	1705 Move X1, [X10]
	1706 Compare X9, 0
	1707 JumpIfEqual {1714}
	1708 Move X10, [X8+176]
	1709 Add X10, X10, 8
	1710 NotImplemented "Instruction LDUR not yet implemented."
	1711 NotImplemented "Instruction CMP not yet implemented."
	1712 Subtract X9, X9, 1
	1713 Add X10, X10, 16
	1714 Move X0, X22
	1715 Move W2, W31
	1716 Call 0x1C5D788
	1717 Move V0, [X24+8]
	1718 Move W8, 0x7F800000
	1719 Move S1, W8
	1720 Move W9, 0x80000000
	1721 NotImplemented "Instruction FCVTZS not yet implemented."
	1722 NotImplemented "Instruction FCMP not yet implemented."
	1723 NotImplemented "Instruction CSEL not yet implemented."
	1724 Compare X22, 0
	1725 JumpIfEqual {4050}
	1726 Move X0, X22
	1727 Move X1, X31
	1728 Call VisualElement.get_styleAnimation, X0
	1729 Move X8, 0x38A000
	1730 Move X8, [X8+880]
	1731 Move X22, X0
	1732 Add X0, X23, 16
	1733 Move X1, [X8]
	1734 Call StyleDataRef`1<RareData>.Read, X0
	1735 Compare X22, 0
	1736 JumpIfEqual {4050}
	1737 Move X10, 0x342000
	1738 Move X8, [X22]
	1739 Move W23, [X0+64]
	1740 Move X10, [X10+3792]
	1741 NotImplemented "Instruction LDRH not yet implemented."
	1742 Move X1, [X10]
	1743 Compare X9, 0
	1744 JumpIfEqual {1751}
	1745 Move X10, [X8+176]
	1746 Add X10, X10, 8
	1747 NotImplemented "Instruction LDUR not yet implemented."
	1748 NotImplemented "Instruction CMP not yet implemented."
	1749 Subtract X9, X9, 1
	1750 Add X10, X10, 16
	1751 Move W2, 1
	1752 Move X0, X22
	1753 Call 0x1C5D788
	1754 Move V0, [X24+8]
	1755 Move W8, 0x7F800000
	1756 Move S1, W8
	1757 Move W9, 0x80000000
	1758 NotImplemented "Instruction FCVTZS not yet implemented."
	1759 NotImplemented "Instruction FCMP not yet implemented."
	1760 NotImplemented "Instruction CSEL not yet implemented."
	1761 Compare X22, 0
	1762 JumpIfEqual {4050}
	1763 Move X0, X22
	1764 Move X1, X31
	1765 Call VisualElement.get_styleAnimation, X0
	1766 Move X8, 0x38A000
	1767 Move X8, [X8+880]
	1768 Move X22, X0
	1769 Add X0, X23, 16
	1770 Move X1, [X8]
	1771 Call StyleDataRef`1<RareData>.Read, X0
	1772 Compare X22, 0
	1773 JumpIfEqual {4050}
	1774 Move X10, 0x342000
	1775 Move X8, [X22]
	1776 Move W23, [X0+68]
	1777 Move X10, [X10+3792]
	1778 NotImplemented "Instruction LDRH not yet implemented."
	1779 Move X1, [X10]
	1780 Compare X9, 0
	1781 JumpIfEqual {1788}
	1782 Move X10, [X8+176]
	1783 Add X10, X10, 8
	1784 NotImplemented "Instruction LDUR not yet implemented."
	1785 NotImplemented "Instruction CMP not yet implemented."
	1786 Subtract X9, X9, 1
	1787 Add X10, X10, 16
	1788 Move W2, 4
	1789 Move X0, X22
	1790 Call 0x1C5D788
	1791 Move W9, [X10]
	1792 Add W9, W9, 3
	1793 Add X8, X8, W9
	1794 Add X0, X8, 312
	1795 Move X8, [X0]
	1796 Move X5, [X0+8]
	1797 Move W1, 0x70000
	1798 Move W9, [X10]
	1799 Add W9, W9, 13
	1800 Add X8, X8, W9
	1801 Add X0, X8, 312
	1802 Move X8, [X0]
	1803 Move X9, [X0+8]
	1804 Move W1, 2
	1805 NotImplemented "Instruction MOVK not yet implemented."
	1806 Move W9, [X10]
	1807 Add W9, W9, 13
	1808 Add X8, X8, W9
	1809 Add X0, X8, 312
	1810 Move X8, [X0]
	1811 Move X9, [X0+8]
	1812 Move W10, 2
	1813 NotImplemented "Instruction MOVK not yet implemented."
	1814 Or W1, W10, 1
	1815 Move W9, [X10]
	1816 Add W9, W9, 14
	1817 Add X8, X8, W9
	1818 Add X0, X8, 312
	1819 Move X8, [X0]
	1820 Move X7, [X0+8]
	1821 Move W9, 2
	1822 NotImplemented "Instruction MOVK not yet implemented."
	1823 Add W1, W9, 2
	1824 Move W9, [X10]
	1825 Add W9, W9, 3
	1826 Add X8, X8, W9
	1827 Add X0, X8, 312
	1828 Move X8, [X0]
	1829 Move X5, [X0+8]
	1830 Move W9, 2
	1831 NotImplemented "Instruction MOVK not yet implemented."
	1832 Or W1, W9, 4
	1833 Move W9, [X10]
	1834 Add W9, W9, 2
	1835 Add X8, X8, W9
	1836 Add X0, X8, 312
	1837 Move X8, [X0]
	1838 Move X7, [X0+8]
	1839 Move W10, 2
	1840 Move W9, 5
	1841 NotImplemented "Instruction MOVK not yet implemented."
	1842 Or W1, W10, W9
	1843 Move W9, [X10]
	1844 Add W9, W9, 2
	1845 Add X8, X8, W9
	1846 Add X0, X8, 312
	1847 Move X8, [X0]
	1848 Move X7, [X0+8]
	1849 Move W9, 2
	1850 NotImplemented "Instruction MOVK not yet implemented."
	1851 Add W1, W9, 6
	1852 Move W9, [X10]
	1853 Add W9, W9, 3
	1854 Add X8, X8, W9
	1855 Add X0, X8, 312
	1856 Move X8, [X0]
	1857 Move X5, [X0+8]
	1858 Move W9, 2
	1859 NotImplemented "Instruction MOVK not yet implemented."
	1860 Add W1, W9, 7
	1861 Move W9, [X10]
	1862 Add W9, W9, 3
	1863 Add X8, X8, W9
	1864 Add X0, X8, 312
	1865 Move X8, [X0]
	1866 Move X5, [X0+8]
	1867 Move W9, 2
	1868 NotImplemented "Instruction MOVK not yet implemented."
	1869 Or W1, W9, 8
	1870 Move W9, [X10]
	1871 Add W9, W9, 3
	1872 Add X8, X8, W9
	1873 Add X0, X8, 312
	1874 Move X8, [X0]
	1875 Move X5, [X0+8]
	1876 Move W10, 2
	1877 Move W9, 9
	1878 NotImplemented "Instruction MOVK not yet implemented."
	1879 Or W1, W10, W9
	1880 Move W9, [X10]
	1881 Add W9, W9, 2
	1882 Add X8, X8, W9
	1883 Add X0, X8, 312
	1884 Move X8, [X0]
	1885 Move X7, [X0+8]
	1886 Move W9, 2
	1887 NotImplemented "Instruction MOVK not yet implemented."
	1888 Add W1, W9, 10
	1889 Move W9, [X10]
	1890 Add W9, W9, 2
	1891 Add X8, X8, W9
	1892 Add X0, X8, 312
	1893 Move X8, [X0]
	1894 Move X7, [X0+8]
	1895 Move W9, 2
	1896 NotImplemented "Instruction MOVK not yet implemented."
	1897 Add W1, W9, 11
	1898 NotImplemented "Instruction LDRSW not yet implemented."
	1899 Add X8, X8, X9
	1900 Add X0, X8, 312
	1901 Move X8, [X0]
	1902 Move X5, [X0+8]
	1903 Move W9, 2
	1904 NotImplemented "Instruction MOVK not yet implemented."
	1905 Or W1, W9, 12
	1906 Move W9, [X10]
	1907 Add W9, W9, 4
	1908 Add X8, X8, W9
	1909 Add X0, X8, 312
	1910 Move X8, [X0]
	1911 Move X7, [X0+8]
	1912 Move W10, 2
	1913 Move W9, 13
	1914 NotImplemented "Instruction MOVK not yet implemented."
	1915 Move W9, [X10]
	1916 Add W9, W9, 4
	1917 Add X8, X8, W9
	1918 Add X0, X8, 312
	1919 Move X8, [X0]
	1920 Move X7, [X0+8]
	1921 Move W1, 1
	1922 NotImplemented "Instruction MOVK not yet implemented."
	1923 Move W9, [X10]
	1924 Add W9, W9, 3
	1925 Add X8, X8, W9
	1926 Add X0, X8, 312
	1927 Move X8, [X0]
	1928 Move X5, [X0+8]
	1929 Move W9, 1
	1930 NotImplemented "Instruction MOVK not yet implemented."
	1931 Add W1, W9, 1
	1932 Move W9, [X10]
	1933 Add W9, W9, 4
	1934 Add X8, X8, W9
	1935 Add X0, X8, 312
	1936 Move X8, [X0]
	1937 Move X7, [X0+8]
	1938 Move W9, 1
	1939 NotImplemented "Instruction MOVK not yet implemented."
	1940 Or W1, W9, 2
	1941 Move W9, [X10]
	1942 Add W9, W9, 1
	1943 Add X8, X8, W9
	1944 Add X0, X8, 312
	1945 Move X8, [X0]
	1946 Move X7, [X0+8]
	1947 Move W9, 1
	1948 NotImplemented "Instruction MOVK not yet implemented."
	1949 Add W1, W9, 3
	1950 Move W9, [X10]
	1951 Add W9, W9, 1
	1952 Add X8, X8, W9
	1953 Add X0, X8, 312
	1954 Move X8, [X0]
	1955 Move X7, [X0+8]
	1956 Move W9, 1
	1957 NotImplemented "Instruction MOVK not yet implemented."
	1958 Or W1, W9, 4
	1959 Move W9, [X10]
	1960 Add W9, W9, 1
	1961 Add X8, X8, W9
	1962 Add X0, X8, 312
	1963 Move X8, [X0]
	1964 Move X7, [X0+8]
	1965 Move W9, 1
	1966 NotImplemented "Instruction MOVK not yet implemented."
	1967 NotImplemented "Instruction LDRSW not yet implemented."
	1968 Add X8, X8, X9
	1969 Add X0, X8, 312
	1970 Move X8, [X0]
	1971 Move X5, [X0+8]
	1972 Move W9, 1
	1973 NotImplemented "Instruction MOVK not yet implemented."
	1974 Or W1, W9, 6
	1975 Move W9, [X10]
	1976 Add W9, W9, 1
	1977 Add X8, X8, W9
	1978 Add X0, X8, 312
	1979 Move X8, [X0]
	1980 Move X7, [X0+8]
	1981 Move W9, 1
	1982 NotImplemented "Instruction MOVK not yet implemented."
	1983 Move W9, [X10]
	1984 Add W9, W9, 4
	1985 Add X8, X8, W9
	1986 Add X0, X8, 312
	1987 Move X8, [X0]
	1988 Move X7, [X0+8]
	1989 Move W9, 1
	1990 NotImplemented "Instruction MOVK not yet implemented."
	1991 Or W1, W9, 8
	1992 Move S8, [X24+8]
	1993 Move S9, [X24+12]
	1994 Move S10, [X24+16]
	1995 Move S11, [X24+20]
	1996 Compare X22, 0
	1997 JumpIfEqual {4050}
	1998 Move X0, X22
	1999 Move X1, X31
	2000 Call VisualElement.get_styleAnimation, X0
	2001 Move X8, 0x38A000
	2002 Move X8, [X8+872]
	2003 Move X24, X0
	2004 Move X0, X23
	2005 Move X1, [X8]
	2006 Call 0x266D4A0, X0
	2007 Compare X24, 0
	2008 JumpIfEqual {4050}
	2009 Move X10, 0x342000
	2010 Move S13, [X0+8]
	2011 Move S12, [X0+12]
	2012 Move X8, [X24]
	2013 Move S15, [X0]
	2014 Move S14, [X0+4]
	2015 Move X10, [X10+3792]
	2016 NotImplemented "Instruction LDRH not yet implemented."
	2017 Move X1, [X10]
	2018 Compare X9, 0
	2019 JumpIfEqual {2026}
	2020 Move X10, [X8+176]
	2021 Add X10, X10, 8
	2022 NotImplemented "Instruction LDUR not yet implemented."
	2023 NotImplemented "Instruction CMP not yet implemented."
	2024 Subtract X9, X9, 1
	2025 Add X10, X10, 16
	2026 Move W2, 3
	2027 Move X0, X24
	2028 Call 0x1C5D788
	2029 Move X24, [X24+8]
	2030 Compare X22, 0
	2031 JumpIfEqual {4050}
	2032 Move X0, X22
	2033 Move X1, X31
	2034 Call VisualElement.get_styleAnimation, X0
	2035 Move X8, 0x38A000
	2036 Move X8, [X8+872]
	2037 Move X22, X0
	2038 Move X0, X23
	2039 Move X1, [X8]
	2040 Call 0x266D4A0, X0
	2041 Compare X22, 0
	2042 JumpIfEqual {4050}
	2043 Move X10, 0x342000
	2044 Move X8, [X22]
	2045 Move X23, [X0+16]
	2046 Move X10, [X10+3792]
	2047 NotImplemented "Instruction LDRH not yet implemented."
	2048 Move X1, [X10]
	2049 Compare X9, 0
	2050 JumpIfEqual {2057}
	2051 Move X10, [X8+176]
	2052 Add X10, X10, 8
	2053 NotImplemented "Instruction LDUR not yet implemented."
	2054 NotImplemented "Instruction CMP not yet implemented."
	2055 Subtract X9, X9, 1
	2056 Add X10, X10, 16
	2057 Move W2, 2
	2058 Move X0, X22
	2059 Call 0x1C5D788
	2060 Move X24, [X24+8]
	2061 Compare X22, 0
	2062 JumpIfEqual {4050}
	2063 Move X0, X22
	2064 Move X1, X31
	2065 Call VisualElement.get_styleAnimation, X0
	2066 Move X8, 0x38A000
	2067 Move X8, [X8+872]
	2068 Move X22, X0
	2069 Move X0, X23
	2070 Move X1, [X8]
	2071 Call 0x266D4A0, X0
	2072 Compare X22, 0
	2073 JumpIfEqual {4050}
	2074 Move X10, 0x342000
	2075 Move X8, [X22]
	2076 Move X23, [X0+24]
	2077 Move X10, [X10+3792]
	2078 NotImplemented "Instruction LDRH not yet implemented."
	2079 Move X1, [X10]
	2080 Compare X9, 0
	2081 JumpIfEqual {2088}
	2082 Move X10, [X8+176]
	2083 Add X10, X10, 8
	2084 NotImplemented "Instruction LDUR not yet implemented."
	2085 NotImplemented "Instruction CMP not yet implemented."
	2086 Subtract X9, X9, 1
	2087 Add X10, X10, 16
	2088 Move W2, 2
	2089 Move X0, X22
	2090 Call 0x1C5D788
	2091 Add X25, X24, 8
	2092 Move X0, X25
	2093 Move X1, X31
	2094 Call GCHandle.get_IsAllocated, X0
	2095 Move X24, X31
	2096 Move TEMP, X0
	2097 And TEMP, TEMP, 1
	2098 Compare TEMP, 1
	2099 JumpIfNotEqual {3984}
	2100 Move X0, X25
	2101 Move X1, X31
	2102 Call GCHandle.get_Target, X0
	2103 Compare X0, 0
	2104 JumpIfEqual {3983}
	2105 Move X8, 0x386000
	2106 Move X8, [X8+4072]
	2107 Move X9, [X0]
	2108 Move X8, [X8]
	2109 NotImplemented "Instruction CMP not yet implemented."
	2110 NotImplemented "Instruction CSEL not yet implemented."
	2111 Add X26, X24, 8
	2112 Move X0, X26
	2113 Move X1, X31
	2114 Call GCHandle.get_IsAllocated, X0
	2115 Move X24, X31
	2116 Move X25, X31
	2117 Move TEMP, X0
	2118 And TEMP, TEMP, 1
	2119 Compare TEMP, 1
	2120 JumpIfNotEqual {2128}
	2121 Move X0, X26
	2122 Move X1, X31
	2123 Call GCHandle.get_Target, X0
	2124 Move X1, X31
	2125 Call FontDefinition.FromObject, X0
	2126 Move X25, X0
	2127 Move X24, X1
	2128 Compare X22, 0
	2129 JumpIfEqual {4050}
	2130 Move X0, X22
	2131 Move X1, X31
	2132 Call VisualElement.get_styleAnimation, X0
	2133 Move X8, 0x38A000
	2134 Move X8, [X8+872]
	2135 Move X22, X0
	2136 Move X0, X23
	2137 Move X1, [X8]
	2138 Call 0x266D4A0, X0
	2139 Compare X22, 0
	2140 JumpIfEqual {4050}
	2141 Move X10, 0x342000
	2142 Move X8, [X22]
	2143 Move X26, [X0+72]
	2144 Move X23, [X0+80]
	2145 Move X10, [X10+3792]
	2146 NotImplemented "Instruction LDRH not yet implemented."
	2147 Move X1, [X10]
	2148 Compare X9, 0
	2149 JumpIfEqual {2156}
	2150 Move X10, [X8+176]
	2151 Add X10, X10, 8
	2152 NotImplemented "Instruction LDUR not yet implemented."
	2153 NotImplemented "Instruction CMP not yet implemented."
	2154 Subtract X9, X9, 1
	2155 Add X10, X10, 16
	2156 Move W2, 6
	2157 Move X0, X22
	2158 Call 0x1C5D788
	2159 Move V0, [X24+8]
	2160 Move W8, 0x7F800000
	2161 Move S1, W8
	2162 Move W9, 0x80000000
	2163 NotImplemented "Instruction FCVTZS not yet implemented."
	2164 NotImplemented "Instruction FCMP not yet implemented."
	2165 NotImplemented "Instruction CSEL not yet implemented."
	2166 Compare X22, 0
	2167 JumpIfEqual {4050}
	2168 Move X0, X22
	2169 Move X1, X31
	2170 Call VisualElement.get_styleAnimation, X0
	2171 Move X8, 0x38A000
	2172 Move X8, [X8+872]
	2173 Move X22, X0
	2174 Move X0, X23
	2175 Move X1, [X8]
	2176 Call 0x266D4A0, X0
	2177 Compare X22, 0
	2178 JumpIfEqual {4050}
	2179 Move X10, 0x342000
	2180 Move X8, [X22]
	2181 Move W23, [X0+88]
	2182 Move X10, [X10+3792]
	2183 NotImplemented "Instruction LDRH not yet implemented."
	2184 Move X1, [X10]
	2185 Compare X9, 0
	2186 JumpIfEqual {2193}
	2187 Move X10, [X8+176]
	2188 Add X10, X10, 8
	2189 NotImplemented "Instruction LDUR not yet implemented."
	2190 NotImplemented "Instruction CMP not yet implemented."
	2191 Subtract X9, X9, 1
	2192 Add X10, X10, 16
	2193 Move W2, 4
	2194 Move X0, X22
	2195 Call 0x1C5D788
	2196 Move X24, [X24+8]
	2197 Compare X22, 0
	2198 JumpIfEqual {4050}
	2199 Move X0, X22
	2200 Move X1, X31
	2201 Call VisualElement.get_styleAnimation, X0
	2202 Move X8, 0x38A000
	2203 Move X8, [X8+872]
	2204 Move X22, X0
	2205 Move X0, X23
	2206 Move X1, [X8]
	2207 Call 0x266D4A0, X0
	2208 Compare X22, 0
	2209 JumpIfEqual {4050}
	2210 Move X10, 0x342000
	2211 Move X8, [X22]
	2212 NotImplemented "Instruction LDUR not yet implemented."
	2213 Move X10, [X10+3792]
	2214 NotImplemented "Instruction LDRH not yet implemented."
	2215 Move X1, [X10]
	2216 Compare X9, 0
	2217 JumpIfEqual {2224}
	2218 Move X10, [X8+176]
	2219 Add X10, X10, 8
	2220 NotImplemented "Instruction LDUR not yet implemented."
	2221 NotImplemented "Instruction CMP not yet implemented."
	2222 Subtract X9, X9, 1
	2223 Add X10, X10, 16
	2224 Move W2, 2
	2225 Move X0, X22
	2226 Call 0x1C5D788
	2227 Move V0, [X24+8]
	2228 Move W8, 0x7F800000
	2229 Move S1, W8
	2230 Move W9, 0x80000000
	2231 NotImplemented "Instruction FCVTZS not yet implemented."
	2232 NotImplemented "Instruction FCMP not yet implemented."
	2233 NotImplemented "Instruction CSEL not yet implemented."
	2234 Compare X22, 0
	2235 JumpIfEqual {4050}
	2236 Move X0, X22
	2237 Move X1, X31
	2238 Call VisualElement.get_styleAnimation, X0
	2239 Move X8, 0x38A000
	2240 Move X8, [X8+872]
	2241 Move X22, X0
	2242 Move X0, X23
	2243 Move X1, [X8]
	2244 Call 0x266D4A0, X0
	2245 Compare X22, 0
	2246 JumpIfEqual {4050}
	2247 Move X10, 0x342000
	2248 Move X8, [X22]
	2249 Move W23, [X0+100]
	2250 Move X10, [X10+3792]
	2251 NotImplemented "Instruction LDRH not yet implemented."
	2252 Move X1, [X10]
	2253 Compare X9, 0
	2254 JumpIfEqual {2261}
	2255 Move X10, [X8+176]
	2256 Add X10, X10, 8
	2257 NotImplemented "Instruction LDUR not yet implemented."
	2258 NotImplemented "Instruction CMP not yet implemented."
	2259 Subtract X9, X9, 1
	2260 Add X10, X10, 16
	2261 Move W2, 4
	2262 Move X0, X22
	2263 Call 0x1C5D788
	2264 Move S8, [X24+8]
	2265 Move S9, [X24+12]
	2266 Move S10, [X24+16]
	2267 Move S11, [X24+20]
	2268 Compare X22, 0
	2269 JumpIfEqual {4050}
	2270 Move X0, X22
	2271 Move X1, X31
	2272 Call VisualElement.get_styleAnimation, X0
	2273 Move X8, 0x38A000
	2274 Move X8, [X8+872]
	2275 Move X22, X0
	2276 Move X0, X23
	2277 Move X1, [X8]
	2278 Call 0x266D4A0, X0
	2279 Compare X22, 0
	2280 JumpIfEqual {4050}
	2281 Move X10, 0x342000
	2282 Move S13, [X0+112]
	2283 Move S12, [X0+116]
	2284 Move X8, [X22]
	2285 Move S15, [X0+104]
	2286 Move S14, [X0+108]
	2287 Move X10, [X10+3792]
	2288 NotImplemented "Instruction LDRH not yet implemented."
	2289 Move X1, [X10]
	2290 Compare X9, 0
	2291 JumpIfEqual {2298}
	2292 Move X10, [X8+176]
	2293 Add X10, X10, 8
	2294 NotImplemented "Instruction LDUR not yet implemented."
	2295 NotImplemented "Instruction CMP not yet implemented."
	2296 Subtract X9, X9, 1
	2297 Add X10, X10, 16
	2298 Move W2, 3
	2299 Move X0, X22
	2300 Call 0x1C5D788
	2301 Move V8, [X24+8]
	2302 Compare X22, 0
	2303 JumpIfEqual {4050}
	2304 Move X0, X22
	2305 Move X1, X31
	2306 Call VisualElement.get_styleAnimation, X0
	2307 Move X8, 0x389000
	2308 Move X8, [X8+872]
	2309 Move X22, X0
	2310 Move X0, X23
	2311 Move X1, [X8]
	2312 Call 0x266D4A0, X0
	2313 Compare X22, 0
	2314 JumpIfEqual {4050}
	2315 Move X10, 0x341000
	2316 Move X8, [X22]
	2317 Move V9, [X0+120]
	2318 Move X10, [X10+3792]
	2319 NotImplemented "Instruction LDRH not yet implemented."
	2320 Move X1, [X10]
	2321 Compare X9, 0
	2322 JumpIfEqual {2329}
	2323 Move X10, [X8+176]
	2324 Add X10, X10, 8
	2325 NotImplemented "Instruction LDUR not yet implemented."
	2326 NotImplemented "Instruction CMP not yet implemented."
	2327 Subtract X9, X9, 1
	2328 Add X10, X10, 16
	2329 Move X0, X22
	2330 Move W2, W31
	2331 Call 0x1C5D788
	2332 Move V0, [X24+8]
	2333 Move W8, 0x7F800000
	2334 Move S1, W8
	2335 Move W9, 0x80000000
	2336 NotImplemented "Instruction FCVTZS not yet implemented."
	2337 NotImplemented "Instruction FCMP not yet implemented."
	2338 NotImplemented "Instruction CSEL not yet implemented."
	2339 Compare X22, 0
	2340 JumpIfEqual {4050}
	2341 Move X0, X22
	2342 Move X1, X31
	2343 Call VisualElement.get_styleAnimation, X0
	2344 Move X8, 0x389000
	2345 Move X8, [X8+872]
	2346 Move X22, X0
	2347 Move X0, X23
	2348 Move X1, [X8]
	2349 Call 0x266D4A0, X0
	2350 Compare X22, 0
	2351 JumpIfEqual {4050}
	2352 Move X10, 0x341000
	2353 Move X8, [X22]
	2354 Move W23, [X0+124]
	2355 Move X10, [X10+3792]
	2356 NotImplemented "Instruction LDRH not yet implemented."
	2357 Move X1, [X10]
	2358 Compare X9, 0
	2359 JumpIfEqual {2366}
	2360 Move X10, [X8+176]
	2361 Add X10, X10, 8
	2362 NotImplemented "Instruction LDUR not yet implemented."
	2363 NotImplemented "Instruction CMP not yet implemented."
	2364 Subtract X9, X9, 1
	2365 Add X10, X10, 16
	2366 Move W2, 4
	2367 Move X0, X22
	2368 Call 0x1C5D788
	2369 Move V0, [X24+8]
	2370 Move W8, 0x7F800000
	2371 Move S1, W8
	2372 Move W9, 0x80000000
	2373 NotImplemented "Instruction FCVTZS not yet implemented."
	2374 NotImplemented "Instruction FCMP not yet implemented."
	2375 NotImplemented "Instruction CSEL not yet implemented."
	2376 Compare X22, 0
	2377 JumpIfEqual {4050}
	2378 Move X0, X22
	2379 Move X1, X31
	2380 Call VisualElement.get_styleAnimation, X0
	2381 Move X8, 0x389000
	2382 Move X8, [X8+872]
	2383 Move X22, X0
	2384 Move X0, X23
	2385 Move X1, [X8]
	2386 Call 0x266D4A0, X0
	2387 Compare X22, 0
	2388 JumpIfEqual {4050}
	2389 Move X10, 0x341000
	2390 Move X8, [X22]
	2391 Move W23, [X0+128]
	2392 Move X10, [X10+3792]
	2393 NotImplemented "Instruction LDRH not yet implemented."
	2394 Move X1, [X10]
	2395 Compare X9, 0
	2396 JumpIfEqual {2403}
	2397 Move X10, [X8+176]
	2398 Add X10, X10, 8
	2399 NotImplemented "Instruction LDUR not yet implemented."
	2400 NotImplemented "Instruction CMP not yet implemented."
	2401 Subtract X9, X9, 1
	2402 Add X10, X10, 16
	2403 Move W2, 4
	2404 Move X0, X22
	2405 Call 0x1C5D788
	2406 Move X24, [X24+8]
	2407 Compare X22, 0
	2408 JumpIfEqual {4050}
	2409 Move X0, X22
	2410 Move X1, X31
	2411 Call VisualElement.get_styleAnimation, X0
	2412 Move X8, 0x389000
	2413 Move X8, [X8+872]
	2414 Move X22, X0
	2415 Move X0, X23
	2416 Move X1, [X8]
	2417 Call 0x266D4A0, X0
	2418 Compare X22, 0
	2419 JumpIfEqual {4050}
	2420 Move X10, 0x341000
	2421 Move X8, [X22]
	2422 NotImplemented "Instruction LDUR not yet implemented."
	2423 Move X10, [X10+3792]
	2424 NotImplemented "Instruction LDRH not yet implemented."
	2425 Move X1, [X10]
	2426 Compare X9, 0
	2427 JumpIfEqual {2434}
	2428 Move X10, [X8+176]
	2429 Add X10, X10, 8
	2430 NotImplemented "Instruction LDUR not yet implemented."
	2431 NotImplemented "Instruction CMP not yet implemented."
	2432 Subtract X9, X9, 1
	2433 Add X10, X10, 16
	2434 Move W2, 2
	2435 Move X0, X22
	2436 Call 0x1C5D788
	2437 Move V0, [X24+8]
	2438 Move W9, 0x7F800000
	2439 Move S1, W9
	2440 Move W10, 0x80000000
	2441 NotImplemented "Instruction FCVTZS not yet implemented."
	2442 NotImplemented "Instruction FCMP not yet implemented."
	2443 NotImplemented "Instruction CSEL not yet implemented."
	2444 NotImplemented "Instruction CMP not yet implemented."
	2445 NotImplemented "Instruction CSEL not yet implemented."
	2446 Compare X22, 0
	2447 JumpIfEqual {4050}
	2448 Move X0, X22
	2449 Move X1, X31
	2450 Call VisualElement.get_styleAnimation, X0
	2451 Move X8, 0x389000
	2452 Move X8, [X8+856]
	2453 Move X22, X0
	2454 Add X0, X23, 8
	2455 Move X1, [X8]
	2456 Call StyleDataRef`1<LayoutData>.Read, X0
	2457 Compare X22, 0
	2458 JumpIfEqual {4050}
	2459 Move X10, 0x341000
	2460 Move X8, [X22]
	2461 Move W23, [X0]
	2462 Move X10, [X10+3792]
	2463 NotImplemented "Instruction LDRH not yet implemented."
	2464 Move X1, [X10]
	2465 Compare X9, 0
	2466 JumpIfEqual {2473}
	2467 Move X10, [X8+176]
	2468 Add X10, X10, 8
	2469 NotImplemented "Instruction LDUR not yet implemented."
	2470 NotImplemented "Instruction CMP not yet implemented."
	2471 Subtract X9, X9, 1
	2472 Add X10, X10, 16
	2473 Move W2, 4
	2474 Move X0, X22
	2475 Call 0x1C5D788
	2476 Move V0, [X24+8]
	2477 Move W9, 0x7F800000
	2478 Move S1, W9
	2479 Move W10, 0x80000000
	2480 NotImplemented "Instruction FCVTZS not yet implemented."
	2481 NotImplemented "Instruction FCMP not yet implemented."
	2482 NotImplemented "Instruction CSEL not yet implemented."
	2483 NotImplemented "Instruction CMP not yet implemented."
	2484 NotImplemented "Instruction CSEL not yet implemented."
	2485 Compare X22, 0
	2486 JumpIfEqual {4050}
	2487 Move X0, X22
	2488 Move X1, X31
	2489 Call VisualElement.get_styleAnimation, X0
	2490 Move X8, 0x389000
	2491 Move X8, [X8+856]
	2492 Move X22, X0
	2493 Add X0, X23, 8
	2494 Move X1, [X8]
	2495 Call StyleDataRef`1<LayoutData>.Read, X0
	2496 Compare X22, 0
	2497 JumpIfEqual {4050}
	2498 Move X10, 0x341000
	2499 Move X8, [X22]
	2500 Move W23, [X0+4]
	2501 Move X10, [X10+3792]
	2502 NotImplemented "Instruction LDRH not yet implemented."
	2503 Move X1, [X10]
	2504 Compare X9, 0
	2505 JumpIfEqual {2512}
	2506 Move X10, [X8+176]
	2507 Add X10, X10, 8
	2508 NotImplemented "Instruction LDUR not yet implemented."
	2509 NotImplemented "Instruction CMP not yet implemented."
	2510 Subtract X9, X9, 1
	2511 Add X10, X10, 16
	2512 Move W2, 4
	2513 Move X0, X22
	2514 Call 0x1C5D788
	2515 Move V0, [X24+8]
	2516 Move W9, 0x7F800000
	2517 Move S1, W9
	2518 Move W10, 0x80000000
	2519 NotImplemented "Instruction FCVTZS not yet implemented."
	2520 NotImplemented "Instruction FCMP not yet implemented."
	2521 NotImplemented "Instruction CSEL not yet implemented."
	2522 NotImplemented "Instruction CMP not yet implemented."
	2523 NotImplemented "Instruction CSEL not yet implemented."
	2524 Compare X22, 0
	2525 JumpIfEqual {4050}
	2526 Move X0, X22
	2527 Move X1, X31
	2528 Call VisualElement.get_styleAnimation, X0
	2529 Move X8, 0x389000
	2530 Move X8, [X8+856]
	2531 Move X22, X0
	2532 Add X0, X23, 8
	2533 Move X1, [X8]
	2534 Call StyleDataRef`1<LayoutData>.Read, X0
	2535 Compare X22, 0
	2536 JumpIfEqual {4050}
	2537 Move X10, 0x341000
	2538 Move X8, [X22]
	2539 Move W23, [X0+8]
	2540 Move X10, [X10+3792]
	2541 NotImplemented "Instruction LDRH not yet implemented."
	2542 Move X1, [X10]
	2543 Compare X9, 0
	2544 JumpIfEqual {2551}
	2545 Move X10, [X8+176]
	2546 Add X10, X10, 8
	2547 NotImplemented "Instruction LDUR not yet implemented."
	2548 NotImplemented "Instruction CMP not yet implemented."
	2549 Subtract X9, X9, 1
	2550 Add X10, X10, 16
	2551 Move W2, 4
	2552 Move X0, X22
	2553 Call 0x1C5D788
	2554 Move V8, [X24+8]
	2555 Compare X22, 0
	2556 JumpIfEqual {4050}
	2557 Move X0, X22
	2558 Move X1, X31
	2559 Call VisualElement.get_styleAnimation, X0
	2560 Move X8, 0x389000
	2561 Move X8, [X8+856]
	2562 Move X22, X0
	2563 Add X0, X23, 8
	2564 Move X1, [X8]
	2565 Call StyleDataRef`1<LayoutData>.Read, X0
	2566 Compare X22, 0
	2567 JumpIfEqual {4050}
	2568 Move X10, 0x341000
	2569 Move X8, [X22]
	2570 Move V9, [X0+12]
	2571 Move X10, [X10+3792]
	2572 NotImplemented "Instruction LDRH not yet implemented."
	2573 Move X1, [X10]
	2574 Compare X9, 0
	2575 JumpIfEqual {2582}
	2576 Move X10, [X8+176]
	2577 Add X10, X10, 8
	2578 NotImplemented "Instruction LDUR not yet implemented."
	2579 NotImplemented "Instruction CMP not yet implemented."
	2580 Subtract X9, X9, 1
	2581 Add X10, X10, 16
	2582 Move X0, X22
	2583 Move W2, W31
	2584 Call 0x1C5D788
	2585 Move V8, [X24+8]
	2586 Compare X22, 0
	2587 JumpIfEqual {4050}
	2588 Move X0, X22
	2589 Move X1, X31
	2590 Call VisualElement.get_styleAnimation, X0
	2591 Move X8, 0x389000
	2592 Move X8, [X8+856]
	2593 Move X22, X0
	2594 Add X0, X23, 8
	2595 Move X1, [X8]
	2596 Call StyleDataRef`1<LayoutData>.Read, X0
	2597 Compare X22, 0
	2598 JumpIfEqual {4050}
	2599 Move X10, 0x341000
	2600 Move X8, [X22]
	2601 Move V9, [X0+16]
	2602 Move X10, [X10+3792]
	2603 NotImplemented "Instruction LDRH not yet implemented."
	2604 Move X1, [X10]
	2605 Compare X9, 0
	2606 JumpIfEqual {2613}
	2607 Move X10, [X8+176]
	2608 Add X10, X10, 8
	2609 NotImplemented "Instruction LDUR not yet implemented."
	2610 NotImplemented "Instruction CMP not yet implemented."
	2611 Subtract X9, X9, 1
	2612 Add X10, X10, 16
	2613 Move X0, X22
	2614 Move W2, W31
	2615 Call 0x1C5D788
	2616 Move V8, [X24+8]
	2617 Compare X22, 0
	2618 JumpIfEqual {4050}
	2619 Move X0, X22
	2620 Move X1, X31
	2621 Call VisualElement.get_styleAnimation, X0
	2622 Move X8, 0x389000
	2623 Move X8, [X8+856]
	2624 Move X22, X0
	2625 Add X0, X23, 8
	2626 Move X1, [X8]
	2627 Call StyleDataRef`1<LayoutData>.Read, X0
	2628 Compare X22, 0
	2629 JumpIfEqual {4050}
	2630 Move X10, 0x341000
	2631 Move X8, [X22]
	2632 Move V9, [X0+20]
	2633 Move X10, [X10+3792]
	2634 NotImplemented "Instruction LDRH not yet implemented."
	2635 Move X1, [X10]
	2636 Compare X9, 0
	2637 JumpIfEqual {2644}
	2638 Move X10, [X8+176]
	2639 Add X10, X10, 8
	2640 NotImplemented "Instruction LDUR not yet implemented."
	2641 NotImplemented "Instruction CMP not yet implemented."
	2642 Subtract X9, X9, 1
	2643 Add X10, X10, 16
	2644 Move X0, X22
	2645 Move W2, W31
	2646 Call 0x1C5D788
	2647 Move V8, [X24+8]
	2648 Compare X22, 0
	2649 JumpIfEqual {4050}
	2650 Move X0, X22
	2651 Move X1, X31
	2652 Call VisualElement.get_styleAnimation, X0
	2653 Move X8, 0x389000
	2654 Move X8, [X8+856]
	2655 Move X22, X0
	2656 Add X0, X23, 8
	2657 Move X1, [X8]
	2658 Call StyleDataRef`1<LayoutData>.Read, X0
	2659 Compare X22, 0
	2660 JumpIfEqual {4050}
	2661 Move X10, 0x341000
	2662 Move X8, [X22]
	2663 Move V9, [X0+24]
	2664 Move X10, [X10+3792]
	2665 NotImplemented "Instruction LDRH not yet implemented."
	2666 Move X1, [X10]
	2667 Compare X9, 0
	2668 JumpIfEqual {2675}
	2669 Move X10, [X8+176]
	2670 Add X10, X10, 8
	2671 NotImplemented "Instruction LDUR not yet implemented."
	2672 NotImplemented "Instruction CMP not yet implemented."
	2673 Subtract X9, X9, 1
	2674 Add X10, X10, 16
	2675 Move X0, X22
	2676 Move W2, W31
	2677 Call 0x1C5D788
	2678 Move X24, [X24+8]
	2679 Compare X22, 0
	2680 JumpIfEqual {4050}
	2681 Move X0, X22
	2682 Move X1, X31
	2683 Call VisualElement.get_styleAnimation, X0
	2684 Move X8, 0x389000
	2685 Move X8, [X8+856]
	2686 Move X22, X0
	2687 Add X0, X23, 8
	2688 Move X1, [X8]
	2689 Call StyleDataRef`1<LayoutData>.Read, X0
	2690 Compare X22, 0
	2691 JumpIfEqual {4050}
	2692 Move X10, 0x341000
	2693 Move X8, [X22]
	2694 NotImplemented "Instruction LDUR not yet implemented."
	2695 Move X10, [X10+3792]
	2696 NotImplemented "Instruction LDRH not yet implemented."
	2697 Move X1, [X10]
	2698 Compare X9, 0
	2699 JumpIfEqual {2706}
	2700 Move X10, [X8+176]
	2701 Add X10, X10, 8
	2702 NotImplemented "Instruction LDUR not yet implemented."
	2703 NotImplemented "Instruction CMP not yet implemented."
	2704 Subtract X9, X9, 1
	2705 Add X10, X10, 16
	2706 Move W2, 2
	2707 Move X0, X22
	2708 Call 0x1C5D788
	2709 Move V0, [X24+8]
	2710 Move W9, 0x7F800000
	2711 Move S1, W9
	2712 Move W10, 0x80000000
	2713 NotImplemented "Instruction FCVTZS not yet implemented."
	2714 NotImplemented "Instruction FCMP not yet implemented."
	2715 NotImplemented "Instruction CSEL not yet implemented."
	2716 NotImplemented "Instruction CMP not yet implemented."
	2717 NotImplemented "Instruction CSINC not yet implemented."
	2718 Compare X22, 0
	2719 JumpIfEqual {4050}
	2720 Move X0, X22
	2721 Move X1, X31
	2722 Call VisualElement.get_styleAnimation, X0
	2723 Move X8, 0x389000
	2724 Move X8, [X8+856]
	2725 Move X22, X0
	2726 Add X0, X23, 8
	2727 Move X1, [X8]
	2728 Call StyleDataRef`1<LayoutData>.Read, X0
	2729 Compare X22, 0
	2730 JumpIfEqual {4050}
	2731 Move X10, 0x341000
	2732 Move X8, [X22]
	2733 Move W23, [X0+36]
	2734 Move X10, [X10+3792]
	2735 NotImplemented "Instruction LDRH not yet implemented."
	2736 Move X1, [X10]
	2737 Compare X9, 0
	2738 JumpIfEqual {2745}
	2739 Move X10, [X8+176]
	2740 Add X10, X10, 8
	2741 NotImplemented "Instruction LDUR not yet implemented."
	2742 NotImplemented "Instruction CMP not yet implemented."
	2743 Subtract X9, X9, 1
	2744 Add X10, X10, 16
	2745 Move W2, 4
	2746 Move X0, X22
	2747 Call 0x1C5D788
	2748 Move X24, [X24+8]
	2749 Compare X22, 0
	2750 JumpIfEqual {4050}
	2751 Move X0, X22
	2752 Move X1, X31
	2753 Call VisualElement.get_styleAnimation, X0
	2754 Move X8, 0x389000
	2755 Move X8, [X8+856]
	2756 Move X22, X0
	2757 Add X0, X23, 8
	2758 Move X1, [X8]
	2759 Call StyleDataRef`1<LayoutData>.Read, X0
	2760 Compare X22, 0
	2761 JumpIfEqual {4050}
	2762 Move X10, 0x341000
	2763 Move X8, [X22]
	2764 Move X23, [X0+40]
	2765 Move X10, [X10+3792]
	2766 NotImplemented "Instruction LDRH not yet implemented."
	2767 Move X1, [X10]
	2768 Compare X9, 0
	2769 JumpIfEqual {2776}
	2770 Move X10, [X8+176]
	2771 Add X10, X10, 8
	2772 NotImplemented "Instruction LDUR not yet implemented."
	2773 NotImplemented "Instruction CMP not yet implemented."
	2774 Subtract X9, X9, 1
	2775 Add X10, X10, 16
	2776 Move W2, 2
	2777 Move X0, X22
	2778 Call 0x1C5D788
	2779 Move V0, [X24+8]
	2780 Move W8, 0x7F800000
	2781 Move S1, W8
	2782 Move W9, 0x80000000
	2783 NotImplemented "Instruction FCVTZS not yet implemented."
	2784 NotImplemented "Instruction FCMP not yet implemented."
	2785 NotImplemented "Instruction CSEL not yet implemented."
	2786 Compare X22, 0
	2787 JumpIfEqual {4050}
	2788 Move X0, X22
	2789 Move X1, X31
	2790 Call VisualElement.get_styleAnimation, X0
	2791 Move X8, 0x389000
	2792 Move X8, [X8+856]
	2793 Move X22, X0
	2794 Add X0, X23, 8
	2795 Move X1, [X8]
	2796 Call StyleDataRef`1<LayoutData>.Read, X0
	2797 Compare X22, 0
	2798 JumpIfEqual {4050}
	2799 Move X10, 0x341000
	2800 Move X8, [X22]
	2801 Move W23, [X0+48]
	2802 Move X10, [X10+3792]
	2803 NotImplemented "Instruction LDRH not yet implemented."
	2804 Move X1, [X10]
	2805 Compare X9, 0
	2806 JumpIfEqual {2813}
	2807 Move X10, [X8+176]
	2808 Add X10, X10, 8
	2809 NotImplemented "Instruction LDUR not yet implemented."
	2810 NotImplemented "Instruction CMP not yet implemented."
	2811 Subtract X9, X9, 1
	2812 Add X10, X10, 16
	2813 Move W2, 4
	2814 Move X0, X22
	2815 Call 0x1C5D788
	2816 Move V8, [X24+8]
	2817 Compare X22, 0
	2818 JumpIfEqual {4050}
	2819 Move X0, X22
	2820 Move X1, X31
	2821 Call VisualElement.get_styleAnimation, X0
	2822 Move X8, 0x389000
	2823 Move X8, [X8+856]
	2824 Move X22, X0
	2825 Add X0, X23, 8
	2826 Move X1, [X8]
	2827 Call StyleDataRef`1<LayoutData>.Read, X0
	2828 Compare X22, 0
	2829 JumpIfEqual {4050}
	2830 Move X10, 0x341000
	2831 Move X8, [X22]
	2832 Move V9, [X0+52]
	2833 Move X10, [X10+3792]
	2834 NotImplemented "Instruction LDRH not yet implemented."
	2835 Move X1, [X10]
	2836 Compare X9, 0
	2837 JumpIfEqual {2844}
	2838 Move X10, [X8+176]
	2839 Add X10, X10, 8
	2840 NotImplemented "Instruction LDUR not yet implemented."
	2841 NotImplemented "Instruction CMP not yet implemented."
	2842 Subtract X9, X9, 1
	2843 Add X10, X10, 16
	2844 Move X0, X22
	2845 Move W2, W31
	2846 Call 0x1C5D788
	2847 Move V8, [X24+8]
	2848 Compare X22, 0
	2849 JumpIfEqual {4050}
	2850 Move X0, X22
	2851 Move X1, X31
	2852 Call VisualElement.get_styleAnimation, X0
	2853 Move X8, 0x389000
	2854 Move X8, [X8+856]
	2855 Move X22, X0
	2856 Add X0, X23, 8
	2857 Move X1, [X8]
	2858 Call StyleDataRef`1<LayoutData>.Read, X0
	2859 Compare X22, 0
	2860 JumpIfEqual {4050}
	2861 Move X10, 0x341000
	2862 Move X8, [X22]
	2863 Move V9, [X0+56]
	2864 Move X10, [X10+3792]
	2865 NotImplemented "Instruction LDRH not yet implemented."
	2866 Move X1, [X10]
	2867 Compare X9, 0
	2868 JumpIfEqual {2875}
	2869 Move X10, [X8+176]
	2870 Add X10, X10, 8
	2871 NotImplemented "Instruction LDUR not yet implemented."
	2872 NotImplemented "Instruction CMP not yet implemented."
	2873 Subtract X9, X9, 1
	2874 Add X10, X10, 16
	2875 Move X0, X22
	2876 Move W2, W31
	2877 Call 0x1C5D788
	2878 Move V0, [X24+8]
	2879 Move W8, 0x7F800000
	2880 Move S1, W8
	2881 Move W9, 0x80000000
	2882 NotImplemented "Instruction FCVTZS not yet implemented."
	2883 NotImplemented "Instruction FCMP not yet implemented."
	2884 NotImplemented "Instruction CSEL not yet implemented."
	2885 Compare X22, 0
	2886 JumpIfEqual {4050}
	2887 Move X0, X22
	2888 Move X1, X31
	2889 Call VisualElement.get_styleAnimation, X0
	2890 Move X8, 0x389000
	2891 Move X8, [X8+856]
	2892 Move X22, X0
	2893 Add X0, X23, 8
	2894 Move X1, [X8]
	2895 Call StyleDataRef`1<LayoutData>.Read, X0
	2896 Compare X22, 0
	2897 JumpIfEqual {4050}
	2898 Move X10, 0x341000
	2899 Move X8, [X22]
	2900 Move W23, [X0+60]
	2901 Move X10, [X10+3792]
	2902 NotImplemented "Instruction LDRH not yet implemented."
	2903 Move X1, [X10]
	2904 Compare X9, 0
	2905 JumpIfEqual {2912}
	2906 Move X10, [X8+176]
	2907 Add X10, X10, 8
	2908 NotImplemented "Instruction LDUR not yet implemented."
	2909 NotImplemented "Instruction CMP not yet implemented."
	2910 Subtract X9, X9, 1
	2911 Add X10, X10, 16
	2912 Move W2, 4
	2913 Move X0, X22
	2914 Call 0x1C5D788
	2915 Move X24, [X24+8]
	2916 Compare X22, 0
	2917 JumpIfEqual {4050}
	2918 Move X0, X22
	2919 Move X1, X31
	2920 Call VisualElement.get_styleAnimation, X0
	2921 Move X8, 0x389000
	2922 Move X8, [X8+856]
	2923 Move X22, X0
	2924 Add X0, X23, 8
	2925 Move X1, [X8]
	2926 Call StyleDataRef`1<LayoutData>.Read, X0
	2927 Compare X22, 0
	2928 JumpIfEqual {4050}
	2929 Move X10, 0x341000
	2930 Move X8, [X22]
	2931 Move X23, [X0+64]
	2932 Move X10, [X10+3792]
	2933 NotImplemented "Instruction LDRH not yet implemented."
	2934 Move X1, [X10]
	2935 Compare X9, 0
	2936 JumpIfEqual {2943}
	2937 Move X10, [X8+176]
	2938 Add X10, X10, 8
	2939 NotImplemented "Instruction LDUR not yet implemented."
	2940 NotImplemented "Instruction CMP not yet implemented."
	2941 Subtract X9, X9, 1
	2942 Add X10, X10, 16
	2943 Move W2, 2
	2944 Move X0, X22
	2945 Call 0x1C5D788
	2946 Move V0, [X24+8]
	2947 Move W8, 0x7F800000
	2948 Move S1, W8
	2949 Move W9, 0x80000000
	2950 NotImplemented "Instruction FCVTZS not yet implemented."
	2951 NotImplemented "Instruction FCMP not yet implemented."
	2952 NotImplemented "Instruction CSEL not yet implemented."
	2953 Compare X22, 0
	2954 JumpIfEqual {4050}
	2955 Move X0, X22
	2956 Move X1, X31
	2957 Call VisualElement.get_styleAnimation, X0
	2958 Move X8, 0x389000
	2959 Move X8, [X8+856]
	2960 Move X22, X0
	2961 Add X0, X23, 8
	2962 Move X1, [X8]
	2963 Call StyleDataRef`1<LayoutData>.Read, X0
	2964 Compare X22, 0
	2965 JumpIfEqual {4050}
	2966 Move X10, 0x341000
	2967 Move X8, [X22]
	2968 Move W23, [X0+72]
	2969 Move X10, [X10+3792]
	2970 NotImplemented "Instruction LDRH not yet implemented."
	2971 Move X1, [X10]
	2972 Compare X9, 0
	2973 JumpIfEqual {2980}
	2974 Move X10, [X8+176]
	2975 Add X10, X10, 8
	2976 NotImplemented "Instruction LDUR not yet implemented."
	2977 NotImplemented "Instruction CMP not yet implemented."
	2978 Subtract X9, X9, 1
	2979 Add X10, X10, 16
	2980 Move W2, 4
	2981 Move X0, X22
	2982 Call 0x1C5D788
	2983 Move X24, [X24+8]
	2984 Compare X22, 0
	2985 JumpIfEqual {4050}
	2986 Move X0, X22
	2987 Move X1, X31
	2988 Call VisualElement.get_styleAnimation, X0
	2989 Move X8, 0x389000
	2990 Move X8, [X8+856]
	2991 Move X22, X0
	2992 Add X0, X23, 8
	2993 Move X1, [X8]
	2994 Call StyleDataRef`1<LayoutData>.Read, X0
	2995 Compare X22, 0
	2996 JumpIfEqual {4050}
	2997 Move X10, 0x341000
	2998 Move X8, [X22]
	2999 NotImplemented "Instruction LDUR not yet implemented."
	3000 Move X10, [X10+3792]
	3001 NotImplemented "Instruction LDRH not yet implemented."
	3002 Move X1, [X10]
	3003 Compare X9, 0
	3004 JumpIfEqual {3011}
	3005 Move X10, [X8+176]
	3006 Add X10, X10, 8
	3007 NotImplemented "Instruction LDUR not yet implemented."
	3008 NotImplemented "Instruction CMP not yet implemented."
	3009 Subtract X9, X9, 1
	3010 Add X10, X10, 16
	3011 Move W2, 2
	3012 Move X0, X22
	3013 Call 0x1C5D788
	3014 Move X24, [X24+8]
	3015 Compare X22, 0
	3016 JumpIfEqual {4050}
	3017 Move X0, X22
	3018 Move X1, X31
	3019 Call VisualElement.get_styleAnimation, X0
	3020 Move X8, 0x389000
	3021 Move X8, [X8+856]
	3022 Move X22, X0
	3023 Add X0, X23, 8
	3024 Move X1, [X8]
	3025 Call StyleDataRef`1<LayoutData>.Read, X0
	3026 Compare X22, 0
	3027 JumpIfEqual {4050}
	3028 Move X10, 0x341000
	3029 Move X8, [X22]
	3030 NotImplemented "Instruction LDUR not yet implemented."
	3031 Move X10, [X10+3792]
	3032 NotImplemented "Instruction LDRH not yet implemented."
	3033 Move X1, [X10]
	3034 Compare X9, 0
	3035 JumpIfEqual {3042}
	3036 Move X10, [X8+176]
	3037 Add X10, X10, 8
	3038 NotImplemented "Instruction LDUR not yet implemented."
	3039 NotImplemented "Instruction CMP not yet implemented."
	3040 Subtract X9, X9, 1
	3041 Add X10, X10, 16
	3042 Move W2, 2
	3043 Move X0, X22
	3044 Call 0x1C5D788
	3045 Move X24, [X24+8]
	3046 Compare X22, 0
	3047 JumpIfEqual {4050}
	3048 Move X0, X22
	3049 Move X1, X31
	3050 Call VisualElement.get_styleAnimation, X0
	3051 Move X8, 0x389000
	3052 Move X8, [X8+856]
	3053 Move X22, X0
	3054 Add X0, X23, 8
	3055 Move X1, [X8]
	3056 Call StyleDataRef`1<LayoutData>.Read, X0
	3057 Compare X22, 0
	3058 JumpIfEqual {4050}
	3059 Move X10, 0x341000
	3060 Move X8, [X22]
	3061 NotImplemented "Instruction LDUR not yet implemented."
	3062 Move X10, [X10+3792]
	3063 NotImplemented "Instruction LDRH not yet implemented."
	3064 Move X1, [X10]
	3065 Compare X9, 0
	3066 JumpIfEqual {3073}
	3067 Move X10, [X8+176]
	3068 Add X10, X10, 8
	3069 NotImplemented "Instruction LDUR not yet implemented."
	3070 NotImplemented "Instruction CMP not yet implemented."
	3071 Subtract X9, X9, 1
	3072 Add X10, X10, 16
	3073 Move W2, 2
	3074 Move X0, X22
	3075 Call 0x1C5D788
	3076 Move X24, [X24+8]
	3077 Compare X22, 0
	3078 JumpIfEqual {4050}
	3079 Move X0, X22
	3080 Move X1, X31
	3081 Call VisualElement.get_styleAnimation, X0
	3082 Move X8, 0x389000
	3083 Move X8, [X8+856]
	3084 Move X22, X0
	3085 Add X0, X23, 8
	3086 Move X1, [X8]
	3087 Call StyleDataRef`1<LayoutData>.Read, X0
	3088 Compare X22, 0
	3089 JumpIfEqual {4050}
	3090 Move X10, 0x341000
	3091 Move X8, [X22]
	3092 NotImplemented "Instruction LDUR not yet implemented."
	3093 Move X10, [X10+3792]
	3094 NotImplemented "Instruction LDRH not yet implemented."
	3095 Move X1, [X10]
	3096 Compare X9, 0
	3097 JumpIfEqual {3104}
	3098 Move X10, [X8+176]
	3099 Add X10, X10, 8
	3100 NotImplemented "Instruction LDUR not yet implemented."
	3101 NotImplemented "Instruction CMP not yet implemented."
	3102 Subtract X9, X9, 1
	3103 Add X10, X10, 16
	3104 Move W2, 2
	3105 Move X0, X22
	3106 Call 0x1C5D788
	3107 Move X24, [X24+8]
	3108 Compare X22, 0
	3109 JumpIfEqual {4050}
	3110 Move X0, X22
	3111 Move X1, X31
	3112 Call VisualElement.get_styleAnimation, X0
	3113 Move X8, 0x389000
	3114 Move X8, [X8+856]
	3115 Move X22, X0
	3116 Add X0, X23, 8
	3117 Move X1, [X8]
	3118 Call StyleDataRef`1<LayoutData>.Read, X0
	3119 Compare X22, 0
	3120 JumpIfEqual {4050}
	3121 Move X10, 0x341000
	3122 Move X8, [X22]
	3123 NotImplemented "Instruction LDUR not yet implemented."
	3124 Move X10, [X10+3792]
	3125 NotImplemented "Instruction LDRH not yet implemented."
	3126 Move X1, [X10]
	3127 Compare X9, 0
	3128 JumpIfEqual {3135}
	3129 Move X10, [X8+176]
	3130 Add X10, X10, 8
	3131 NotImplemented "Instruction LDUR not yet implemented."
	3132 NotImplemented "Instruction CMP not yet implemented."
	3133 Subtract X9, X9, 1
	3134 Add X10, X10, 16
	3135 Move W2, 2
	3136 Move X0, X22
	3137 Call 0x1C5D788
	3138 Move X24, [X24+8]
	3139 Compare X22, 0
	3140 JumpIfEqual {4050}
	3141 Move X0, X22
	3142 Move X1, X31
	3143 Call VisualElement.get_styleAnimation, X0
	3144 Move X8, 0x389000
	3145 Move X8, [X8+856]
	3146 Move X22, X0
	3147 Add X0, X23, 8
	3148 Move X1, [X8]
	3149 Call StyleDataRef`1<LayoutData>.Read, X0
	3150 Compare X22, 0
	3151 JumpIfEqual {4050}
	3152 Move X10, 0x341000
	3153 Move X8, [X22]
	3154 NotImplemented "Instruction LDUR not yet implemented."
	3155 Move X10, [X10+3792]
	3156 NotImplemented "Instruction LDRH not yet implemented."
	3157 Move X1, [X10]
	3158 Compare X9, 0
	3159 JumpIfEqual {3166}
	3160 Move X10, [X8+176]
	3161 Add X10, X10, 8
	3162 NotImplemented "Instruction LDUR not yet implemented."
	3163 NotImplemented "Instruction CMP not yet implemented."
	3164 Subtract X9, X9, 1
	3165 Add X10, X10, 16
	3166 Move W2, 2
	3167 Move X0, X22
	3168 Call 0x1C5D788
	3169 Move X24, [X24+8]
	3170 Compare X22, 0
	3171 JumpIfEqual {4050}
	3172 Move X0, X22
	3173 Move X1, X31
	3174 Call VisualElement.get_styleAnimation, X0
	3175 Move X8, 0x389000
	3176 Move X8, [X8+856]
	3177 Move X22, X0
	3178 Add X0, X23, 8
	3179 Move X1, [X8]
	3180 Call StyleDataRef`1<LayoutData>.Read, X0
	3181 Compare X22, 0
	3182 JumpIfEqual {4050}
	3183 Move X10, 0x341000
	3184 Move X8, [X22]
	3185 NotImplemented "Instruction LDUR not yet implemented."
	3186 Move X10, [X10+3792]
	3187 NotImplemented "Instruction LDRH not yet implemented."
	3188 Move X1, [X10]
	3189 Compare X9, 0
	3190 JumpIfEqual {3197}
	3191 Move X10, [X8+176]
	3192 Add X10, X10, 8
	3193 NotImplemented "Instruction LDUR not yet implemented."
	3194 NotImplemented "Instruction CMP not yet implemented."
	3195 Subtract X9, X9, 1
	3196 Add X10, X10, 16
	3197 Move W2, 2
	3198 Move X0, X22
	3199 Call 0x1C5D788
	3200 Move X24, [X24+8]
	3201 Compare X22, 0
	3202 JumpIfEqual {4050}
	3203 Move X0, X22
	3204 Move X1, X31
	3205 Call VisualElement.get_styleAnimation, X0
	3206 Move X8, 0x389000
	3207 Move X8, [X8+856]
	3208 Move X22, X0
	3209 Add X0, X23, 8
	3210 Move X1, [X8]
	3211 Call StyleDataRef`1<LayoutData>.Read, X0
	3212 Compare X22, 0
	3213 JumpIfEqual {4050}
	3214 Move X10, 0x341000
	3215 Move X8, [X22]
	3216 NotImplemented "Instruction LDUR not yet implemented."
	3217 Move X10, [X10+3792]
	3218 NotImplemented "Instruction LDRH not yet implemented."
	3219 Move X1, [X10]
	3220 Compare X9, 0
	3221 JumpIfEqual {3228}
	3222 Move X10, [X8+176]
	3223 Add X10, X10, 8
	3224 NotImplemented "Instruction LDUR not yet implemented."
	3225 NotImplemented "Instruction CMP not yet implemented."
	3226 Subtract X9, X9, 1
	3227 Add X10, X10, 16
	3228 Move W2, 2
	3229 Move X0, X22
	3230 Call 0x1C5D788
	3231 Move X24, [X24+8]
	3232 Compare X22, 0
	3233 JumpIfEqual {4050}
	3234 Move X0, X22
	3235 Move X1, X31
	3236 Call VisualElement.get_styleAnimation, X0
	3237 Move X8, 0x389000
	3238 Move X8, [X8+856]
	3239 Move X22, X0
	3240 Add X0, X23, 8
	3241 Move X1, [X8]
	3242 Call StyleDataRef`1<LayoutData>.Read, X0
	3243 Compare X22, 0
	3244 JumpIfEqual {4050}
	3245 Move X10, 0x341000
	3246 Move X8, [X22]
	3247 NotImplemented "Instruction LDUR not yet implemented."
	3248 Move X10, [X10+3792]
	3249 NotImplemented "Instruction LDRH not yet implemented."
	3250 Move X1, [X10]
	3251 Compare X9, 0
	3252 JumpIfEqual {3259}
	3253 Move X10, [X8+176]
	3254 Add X10, X10, 8
	3255 NotImplemented "Instruction LDUR not yet implemented."
	3256 NotImplemented "Instruction CMP not yet implemented."
	3257 Subtract X9, X9, 1
	3258 Add X10, X10, 16
	3259 Move W2, 2
	3260 Move X0, X22
	3261 Call 0x1C5D788
	3262 Move X24, [X24+8]
	3263 Compare X22, 0
	3264 JumpIfEqual {4050}
	3265 Move X0, X22
	3266 Move X1, X31
	3267 Call VisualElement.get_styleAnimation, X0
	3268 Move X8, 0x389000
	3269 Move X8, [X8+856]
	3270 Move X22, X0
	3271 Add X0, X23, 8
	3272 Move X1, [X8]
	3273 Call StyleDataRef`1<LayoutData>.Read, X0
	3274 Compare X22, 0
	3275 JumpIfEqual {4050}
	3276 Move X10, 0x341000
	3277 Move X8, [X22]
	3278 NotImplemented "Instruction LDUR not yet implemented."
	3279 Move X10, [X10+3792]
	3280 NotImplemented "Instruction LDRH not yet implemented."
	3281 Move X1, [X10]
	3282 Compare X9, 0
	3283 JumpIfEqual {3290}
	3284 Move X10, [X8+176]
	3285 Add X10, X10, 8
	3286 NotImplemented "Instruction LDUR not yet implemented."
	3287 NotImplemented "Instruction CMP not yet implemented."
	3288 Subtract X9, X9, 1
	3289 Add X10, X10, 16
	3290 Move W2, 2
	3291 Move X0, X22
	3292 Call 0x1C5D788
	3293 Move X24, [X24+8]
	3294 Compare X22, 0
	3295 JumpIfEqual {4050}
	3296 Move X0, X22
	3297 Move X1, X31
	3298 Call VisualElement.get_styleAnimation, X0
	3299 Move X8, 0x389000
	3300 Move X8, [X8+856]
	3301 Move X22, X0
	3302 Add X0, X23, 8
	3303 Move X1, [X8]
	3304 Call StyleDataRef`1<LayoutData>.Read, X0
	3305 Compare X22, 0
	3306 JumpIfEqual {4050}
	3307 Move X10, 0x341000
	3308 Move X8, [X22]
	3309 NotImplemented "Instruction LDUR not yet implemented."
	3310 Move X10, [X10+3792]
	3311 NotImplemented "Instruction LDRH not yet implemented."
	3312 Move X1, [X10]
	3313 Compare X9, 0
	3314 JumpIfEqual {3321}
	3315 Move X10, [X8+176]
	3316 Add X10, X10, 8
	3317 NotImplemented "Instruction LDUR not yet implemented."
	3318 NotImplemented "Instruction CMP not yet implemented."
	3319 Subtract X9, X9, 1
	3320 Add X10, X10, 16
	3321 Move W2, 2
	3322 Move X0, X22
	3323 Call 0x1C5D788
	3324 Move X24, [X24+8]
	3325 Compare X22, 0
	3326 JumpIfEqual {4050}
	3327 Move X0, X22
	3328 Move X1, X31
	3329 Call VisualElement.get_styleAnimation, X0
	3330 Move X8, 0x388000
	3331 Move X8, [X8+856]
	3332 Move X22, X0
	3333 Add X0, X23, 8
	3334 Move X1, [X8]
	3335 Call StyleDataRef`1<LayoutData>.Read, X0
	3336 Compare X22, 0
	3337 JumpIfEqual {4050}
	3338 Move X10, 0x340000
	3339 Move X8, [X22]
	3340 NotImplemented "Instruction LDUR not yet implemented."
	3341 Move X10, [X10+3792]
	3342 NotImplemented "Instruction LDRH not yet implemented."
	3343 Move X1, [X10]
	3344 Compare X9, 0
	3345 JumpIfEqual {3352}
	3346 Move X10, [X8+176]
	3347 Add X10, X10, 8
	3348 NotImplemented "Instruction LDUR not yet implemented."
	3349 NotImplemented "Instruction CMP not yet implemented."
	3350 Subtract X9, X9, 1
	3351 Add X10, X10, 16
	3352 Move W2, 2
	3353 Move X0, X22
	3354 Call 0x1C5D788
	3355 Move X24, [X24+8]
	3356 Compare X22, 0
	3357 JumpIfEqual {4050}
	3358 Move X0, X22
	3359 Move X1, X31
	3360 Call VisualElement.get_styleAnimation, X0
	3361 Move X8, 0x388000
	3362 Move X8, [X8+856]
	3363 Move X22, X0
	3364 Add X0, X23, 8
	3365 Move X1, [X8]
	3366 Call StyleDataRef`1<LayoutData>.Read, X0
	3367 Compare X22, 0
	3368 JumpIfEqual {4050}
	3369 Move X10, 0x340000
	3370 Move X8, [X22]
	3371 NotImplemented "Instruction LDUR not yet implemented."
	3372 Move X10, [X10+3792]
	3373 NotImplemented "Instruction LDRH not yet implemented."
	3374 Move X1, [X10]
	3375 Compare X9, 0
	3376 JumpIfEqual {3383}
	3377 Move X10, [X8+176]
	3378 Add X10, X10, 8
	3379 NotImplemented "Instruction LDUR not yet implemented."
	3380 NotImplemented "Instruction CMP not yet implemented."
	3381 Subtract X9, X9, 1
	3382 Add X10, X10, 16
	3383 Move W2, 2
	3384 Move X0, X22
	3385 Call 0x1C5D788
	3386 Move V0, [X24+8]
	3387 Move W8, 0x7F800000
	3388 Move S1, W8
	3389 Move W9, 0x80000000
	3390 NotImplemented "Instruction FCVTZS not yet implemented."
	3391 NotImplemented "Instruction FCMP not yet implemented."
	3392 NotImplemented "Instruction CSEL not yet implemented."
	3393 Compare X22, 0
	3394 JumpIfEqual {4050}
	3395 Move X0, X22
	3396 Move X1, X31
	3397 Call VisualElement.get_styleAnimation, X0
	3398 Move X8, 0x388000
	3399 Move X8, [X8+856]
	3400 Move X22, X0
	3401 Add X0, X23, 8
	3402 Move X1, [X8]
	3403 Call StyleDataRef`1<LayoutData>.Read, X0
	3404 Compare X22, 0
	3405 JumpIfEqual {4050}
	3406 Move X10, 0x340000
	3407 Move X8, [X22]
	3408 Move W23, [X0+180]
	3409 Move X10, [X10+3792]
	3410 NotImplemented "Instruction LDRH not yet implemented."
	3411 Move X1, [X10]
	3412 Compare X9, 0
	3413 JumpIfEqual {3420}
	3414 Move X10, [X8+176]
	3415 Add X10, X10, 8
	3416 NotImplemented "Instruction LDUR not yet implemented."
	3417 NotImplemented "Instruction CMP not yet implemented."
	3418 Subtract X9, X9, 1
	3419 Add X10, X10, 16
	3420 Move W2, 4
	3421 Move X0, X22
	3422 Call 0x1C5D788
	3423 Move X24, [X24+8]
	3424 Compare X22, 0
	3425 JumpIfEqual {4050}
	3426 Move X0, X22
	3427 Move X1, X31
	3428 Call VisualElement.get_styleAnimation, X0
	3429 Move X8, 0x388000
	3430 Move X8, [X8+856]
	3431 Move X22, X0
	3432 Add X0, X23, 8
	3433 Move X1, [X8]
	3434 Call StyleDataRef`1<LayoutData>.Read, X0
	3435 Compare X22, 0
	3436 JumpIfEqual {4050}
	3437 Move X10, 0x340000
	3438 Move X8, [X22]
	3439 Move X23, [X0+184]
	3440 Move X10, [X10+3792]
	3441 NotImplemented "Instruction LDRH not yet implemented."
	3442 Move X1, [X10]
	3443 Compare X9, 0
	3444 JumpIfEqual {3451}
	3445 Move X10, [X8+176]
	3446 Add X10, X10, 8
	3447 NotImplemented "Instruction LDUR not yet implemented."
	3448 NotImplemented "Instruction CMP not yet implemented."
	3449 Subtract X9, X9, 1
	3450 Add X10, X10, 16
	3451 Move W2, 2
	3452 Move X0, X22
	3453 Call 0x1C5D788
	3454 Move X24, [X24+8]
	3455 Compare X22, 0
	3456 JumpIfEqual {4050}
	3457 Move X0, X22
	3458 Move X1, X31
	3459 Call VisualElement.get_styleAnimation, X0
	3460 Move X8, 0x388000
	3461 Move X8, [X8+856]
	3462 Move X22, X0
	3463 Add X0, X23, 8
	3464 Move X1, [X8]
	3465 Call StyleDataRef`1<LayoutData>.Read, X0
	3466 Compare X22, 0
	3467 JumpIfEqual {4050}
	3468 Move X10, 0x340000
	3469 Move X8, [X22]
	3470 Move X23, [X0+192]
	3471 Move X10, [X10+3792]
	3472 NotImplemented "Instruction LDRH not yet implemented."
	3473 Move X1, [X10]
	3474 Compare X9, 0
	3475 JumpIfEqual {3482}
	3476 Move X10, [X8+176]
	3477 Add X10, X10, 8
	3478 NotImplemented "Instruction LDUR not yet implemented."
	3479 NotImplemented "Instruction CMP not yet implemented."
	3480 Subtract X9, X9, 1
	3481 Add X10, X10, 16
	3482 Move W2, 2
	3483 Move X0, X22
	3484 Call 0x1C5D788
	3485 Move X24, [X24+8]
	3486 Compare X22, 0
	3487 JumpIfEqual {4050}
	3488 Move X0, X22
	3489 Move X1, X31
	3490 Call VisualElement.get_styleAnimation, X0
	3491 Move X8, 0x388000
	3492 Move X8, [X8+856]
	3493 Move X22, X0
	3494 Add X0, X23, 8
	3495 Move X1, [X8]
	3496 Call StyleDataRef`1<LayoutData>.Read, X0
	3497 Compare X22, 0
	3498 JumpIfEqual {4050}
	3499 Move X10, 0x340000
	3500 Move X8, [X22]
	3501 Move X23, [X0+200]
	3502 Move X10, [X10+3792]
	3503 NotImplemented "Instruction LDRH not yet implemented."
	3504 Move X1, [X10]
	3505 Compare X9, 0
	3506 JumpIfEqual {3513}
	3507 Move X10, [X8+176]
	3508 Add X10, X10, 8
	3509 NotImplemented "Instruction LDUR not yet implemented."
	3510 NotImplemented "Instruction CMP not yet implemented."
	3511 Subtract X9, X9, 1
	3512 Add X10, X10, 16
	3513 Move W2, 2
	3514 Move X0, X22
	3515 Call 0x1C5D788
	3516 NotImplemented "Instruction MOVI not yet implemented."
	3517 Move [X31+176], V0
	3518 Move [X31+184], V0
	3519 Move V0, [X31+176]
	3520 Move V1, [X31+192]
	3521 Move [X31+144], V0
	3522 Move [X31+152], V1
	3523 Move V0, [X31+144]
	3524 Move V1, [X31+160]
	3525 Move [X31+208], V0
	3526 Move [X31+216], V1
	3527 Compare X22, 0
	3528 JumpIfEqual {4050}
	3529 Move X0, X22
	3530 Move X1, X31
	3531 Call VisualElement.get_styleAnimation, X0
	3532 Move X8, 0x388000
	3533 Move X8, [X8+864]
	3534 Move X22, X0
	3535 Add X0, X23, 40
	3536 Move X1, [X8]
	3537 Call StyleDataRef`1<VisualData>.Read, X0
	3538 Move V1, [X0+16]
	3539 Move V0, [X0+32]
	3540 Move V2, [X31+208]
	3541 Move V3, [X31+224]
	3542 Move [X31+112], V1
	3543 Move [X31+120], V0
	3544 Move [X31+80], V2
	3545 Move [X31+88], V3
	3546 Compare X22, 0
	3547 JumpIfEqual {4050}
	3548 Move V0, [X31+112]
	3549 Move V1, [X31+128]
	3550 Move V2, [X31+80]
	3551 Move V3, [X31+96]
	3552 Move X10, 0x340000
	3553 Move [X31+48], V0
	3554 Move [X31+56], V1
	3555 Move [X31+16], V2
	3556 Move [X31+24], V3
	3557 Move X8, [X22]
	3558 Move X10, [X10+3792]
	3559 NotImplemented "Instruction LDRH not yet implemented."
	3560 Move X1, [X10]
	3561 Compare X9, 0
	3562 JumpIfEqual {3569}
	3563 Move X10, [X8+176]
	3564 Add X10, X10, 8
	3565 NotImplemented "Instruction LDUR not yet implemented."
	3566 NotImplemented "Instruction CMP not yet implemented."
	3567 Subtract X9, X9, 1
	3568 Add X10, X10, 16
	3569 Move W2, 5
	3570 Move X0, X22
	3571 Call 0x1C5D788
	3572 Move W9, [X10]
	3573 Add W9, W9, 5
	3574 Add X8, X8, W9
	3575 Add X0, X8, 312
	3576 Move V0, [X31+48]
	3577 Move V1, [X31+64]
	3578 Move V2, [X31+16]
	3579 Move V3, [X31+32]
	3580 Move X8, [X0]
	3581 Move W9, 1
	3582 Move [X31+272], V0
	3583 Move [X31+280], V1
	3584 Move [X31+240], V2
	3585 Move [X31+248], V3
	3586 Move X7, [X0+8]
	3587 NotImplemented "Instruction MOVK not yet implemented."
	3588 Or W1, W9, 0x40000
	3589 Add X2, X31, 272
	3590 Add X3, X31, 240
	3591 Move X0, X22
	3592 Move W9, [X10]
	3593 Add W9, W9, 3
	3594 Add X8, X8, W9
	3595 Add X0, X8, 312
	3596 Move X8, [X0]
	3597 Move X5, [X0+8]
	3598 Move W1, 0x10000
	3599 Move X0, X24
	3600 Move V0, V15
	3601 Move V1, V14
	3602 Move V2, V13
	3603 Move V3, V12
	3604 Move V4, V8
	3605 Move V5, V9
	3606 Move V6, V10
	3607 Move V7, V11
	3608 Move W2, W21
	3609 Move W3, W20
	3610 Move X4, X19
	3611 NotImplemented "Instruction BLR not yet implemented."
	3612 Move TEMP, X0
	3613 And TEMP, TEMP, 1
	3614 Compare TEMP, 1
	3615 JumpIfNotEqual {3631}
	3616 Move X0, X22
	3617 Move X1, X31
	3618 Call VisualElement.get_usageHints, X0
	3619 Move TEMP, X0
	3620 And TEMP, TEMP, 8
	3621 Compare TEMP, 8
	3622 JumpIfEqual {3630}
	3623 Move X0, X22
	3624 Move X1, X31
	3625 Call VisualElement.get_usageHints, X0
	3626 Or W1, W0, 8
	3627 Move X0, X22
	3628 Move X2, X31
	3629 Call VisualElement.set_usageHints, X0, X1
	3630 Move W0, 1
	3631 Move W0, W31
	3632 Move W9, [X10]
	3633 Add W9, W9, 2
	3634 Add X8, X8, W9
	3635 Add X0, X8, 312
	3636 Move X8, [X0]
	3637 Move X7, [X0+8]
	3638 Or W1, W31, 0x10001
	3639 Move W9, [X10]
	3640 Add W9, W9, 2
	3641 Add X8, X8, W9
	3642 Add X0, X8, 312
	3643 Move X8, [X0]
	3644 Move X7, [X0+8]
	3645 Or W9, W31, 0x10001
	3646 Add W1, W9, 1
	3647 Move W9, [X10]
	3648 Add W9, W9, 6
	3649 Add X8, X8, W9
	3650 Add X0, X8, 312
	3651 Move X8, [X0]
	3652 Move X9, [X0+8]
	3653 Or W10, W31, 0x10001
	3654 Or W1, W10, 4
	3655 Move [X31+8], X9
	3656 Move X0, X22
	3657 Move X2, X26
	3658 Move X3, X23
	3659 Move X4, X25
	3660 Move X5, X24
	3661 Move W6, W21
	3662 Move W7, W20
	3663 Move [X31], X19
	3664 NotImplemented "Instruction BLR not yet implemented."
	3665 Move W9, [X10]
	3666 Add W9, W9, 4
	3667 Add X8, X8, W9
	3668 Add X0, X8, 312
	3669 Move X8, [X0]
	3670 Move X7, [X0+8]
	3671 Or W9, W31, 0x10001
	3672 Add W1, W9, 5
	3673 Move W9, [X10]
	3674 Add W9, W9, 2
	3675 Add X8, X8, W9
	3676 Add X0, X8, 312
	3677 Move X8, [X0]
	3678 Move X7, [X0+8]
	3679 Or W9, W31, 0x10001
	3680 Or W1, W9, 6
	3681 Move W9, [X10]
	3682 Add W9, W9, 4
	3683 Add X8, X8, W9
	3684 Add X0, X8, 312
	3685 Move X8, [X0]
	3686 Move X7, [X0+8]
	3687 Or W9, W31, 0x10001
	3688 Add W1, W9, 7
	3689 Move W9, [X10]
	3690 Add W9, W9, 3
	3691 Add X8, X8, W9
	3692 Add X0, X8, 312
	3693 Move X8, [X0]
	3694 Move X5, [X0+8]
	3695 Or W9, W31, 0x10001
	3696 Or W1, W9, 8
	3697 Move X0, X22
	3698 Move V0, V15
	3699 Move V1, V14
	3700 Move V2, V13
	3701 Move V3, V12
	3702 Move V4, V8
	3703 Move V5, V9
	3704 Move V6, V10
	3705 Move V7, V11
	3706 Move W2, W21
	3707 Move W3, W20
	3708 Move X4, X19
	3709 NotImplemented "Instruction BLR not yet implemented."
	3710 NotImplemented "Instruction LDRSW not yet implemented."
	3711 Add X8, X8, X9
	3712 Add X0, X8, 312
	3713 Move X8, [X0]
	3714 Move X5, [X0+8]
	3715 Or W9, W31, 0x10001
	3716 Add W1, W9, 9
	3717 Move W9, [X10]
	3718 Add W9, W9, 4
	3719 Add X8, X8, W9
	3720 Add X0, X8, 312
	3721 Move X8, [X0]
	3722 Move X7, [X0+8]
	3723 Move W9, 10
	3724 Or W10, W31, 0x10001
	3725 Or W1, W10, W9
	3726 Move W9, [X10]
	3727 Add W9, W9, 4
	3728 Add X8, X8, W9
	3729 Add X0, X8, 312
	3730 Move X8, [X0]
	3731 Move X7, [X0+8]
	3732 Or W9, W31, 0x10001
	3733 Add W1, W9, 11
	3734 Move W9, [X10]
	3735 Add W9, W9, 2
	3736 Add X8, X8, W9
	3737 Add X0, X8, 312
	3738 Move X8, [X0]
	3739 Move X7, [X0+8]
	3740 Or W9, W31, 0x10001
	3741 Or W1, W9, 12
	3742 Move W9, [X10]
	3743 Add W9, W9, 4
	3744 Add X8, X8, W9
	3745 Add X0, X8, 312
	3746 Move X8, [X0]
	3747 Move X7, [X0+8]
	3748 Move W1, 0x20000
	3749 Move W9, [X10]
	3750 Add W9, W9, 4
	3751 Add X8, X8, W9
	3752 Add X0, X8, 312
	3753 Move X8, [X0]
	3754 Move X7, [X0+8]
	3755 Or W9, W31, 0x10001
	3756 Add W1, W9, 0x10000
	3757 Move W9, [X10]
	3758 Add W9, W9, 4
	3759 Add X8, X8, W9
	3760 Add X0, X8, 312
	3761 Move X8, [X0]
	3762 Move X7, [X0+8]
	3763 Subtract W1, W26, 30
	3764 NotImplemented "Instruction LDRSW not yet implemented."
	3765 Add X8, X8, X9
	3766 Add X0, X8, 312
	3767 Move X8, [X0]
	3768 Move X5, [X0+8]
	3769 Subtract W1, W26, 29
	3770 NotImplemented "Instruction LDRSW not yet implemented."
	3771 Add X8, X8, X9
	3772 Add X0, X8, 312
	3773 Move X8, [X0]
	3774 Move X5, [X0+8]
	3775 Subtract W1, W26, 28
	3776 NotImplemented "Instruction LDRSW not yet implemented."
	3777 Add X8, X8, X9
	3778 Add X0, X8, 312
	3779 Move X8, [X0]
	3780 Move X5, [X0+8]
	3781 Subtract W1, W26, 27
	3782 NotImplemented "Instruction LDRSW not yet implemented."
	3783 Add X8, X8, X9
	3784 Add X0, X8, 312
	3785 Move X8, [X0]
	3786 Move X5, [X0+8]
	3787 Subtract W1, W26, 26
	3788 Move W9, [X10]
	3789 Add W9, W9, 2
	3790 Add X8, X8, W9
	3791 Add X0, X8, 312
	3792 Move X8, [X0]
	3793 Move X7, [X0+8]
	3794 Subtract W1, W26, 25
	3795 Move W9, [X10]
	3796 Add W9, W9, 4
	3797 Add X8, X8, W9
	3798 Add X0, X8, 312
	3799 Move X8, [X0]
	3800 Move X7, [X0+8]
	3801 Subtract W1, W26, 24
	3802 Move W9, [X10]
	3803 Add W9, W9, 2
	3804 Add X8, X8, W9
	3805 Add X0, X8, 312
	3806 Move X8, [X0]
	3807 Move X7, [X0+8]
	3808 Subtract W1, W26, 23
	3809 Move W9, [X10]
	3810 Add W9, W9, 4
	3811 Add X8, X8, W9
	3812 Add X0, X8, 312
	3813 Move X8, [X0]
	3814 Move X7, [X0+8]
	3815 Subtract W1, W26, 22
	3816 NotImplemented "Instruction LDRSW not yet implemented."
	3817 Add X8, X8, X9
	3818 Add X0, X8, 312
	3819 Move X8, [X0]
	3820 Move X5, [X0+8]
	3821 Subtract W1, W26, 21
	3822 NotImplemented "Instruction LDRSW not yet implemented."
	3823 Add X8, X8, X9
	3824 Add X0, X8, 312
	3825 Move X8, [X0]
	3826 Move X5, [X0+8]
	3827 Subtract W1, W26, 20
	3828 Move X0, X22
	3829 Move V0, V9
	3830 Move V1, V8
	3831 Move W2, W21
	3832 Move W3, W20
	3833 Move X4, X19
	3834 NotImplemented "Instruction BLR not yet implemented."
	3835 Move W9, [X10]
	3836 Add W9, W9, 4
	3837 Add X8, X8, W9
	3838 Add X0, X8, 312
	3839 Move X8, [X0]
	3840 Move X7, [X0+8]
	3841 Subtract W1, W26, 19
	3842 Move W9, [X10]
	3843 Add W9, W9, 2
	3844 Add X8, X8, W9
	3845 Add X0, X8, 312
	3846 Move X8, [X0]
	3847 Move X7, [X0+8]
	3848 Subtract W1, W26, 18
	3849 Move W9, [X10]
	3850 Add W9, W9, 4
	3851 Add X8, X8, W9
	3852 Add X0, X8, 312
	3853 Move X8, [X0]
	3854 Move X7, [X0+8]
	3855 Subtract W1, W26, 17
	3856 Move W9, [X10]
	3857 Add W9, W9, 2
	3858 Add X8, X8, W9
	3859 Add X0, X8, 312
	3860 Move X8, [X0]
	3861 Move X7, [X0+8]
	3862 Subtract W1, W26, 16
	3863 Move W9, [X10]
	3864 Add W9, W9, 2
	3865 Add X8, X8, W9
	3866 Add X0, X8, 312
	3867 Move X8, [X0]
	3868 Move X7, [X0+8]
	3869 Subtract W1, W26, 15
	3870 Move W9, [X10]
	3871 Add W9, W9, 2
	3872 Add X8, X8, W9
	3873 Add X0, X8, 312
	3874 Move X8, [X0]
	3875 Move X7, [X0+8]
	3876 Subtract W1, W26, 14
	3877 Move W9, [X10]
	3878 Add W9, W9, 2
	3879 Add X8, X8, W9
	3880 Add X0, X8, 312
	3881 Move X8, [X0]
	3882 Move X7, [X0+8]
	3883 Subtract W1, W26, 13
	3884 Move W9, [X10]
	3885 Add W9, W9, 2
	3886 Add X8, X8, W9
	3887 Add X0, X8, 312
	3888 Move X8, [X0]
	3889 Move X7, [X0+8]
	3890 Subtract W1, W26, 12
	3891 Move W9, [X10]
	3892 Add W9, W9, 2
	3893 Add X8, X8, W9
	3894 Add X0, X8, 312
	3895 Move X8, [X0]
	3896 Move X7, [X0+8]
	3897 Subtract W1, W26, 11
	3898 Move W9, [X10]
	3899 Add W9, W9, 2
	3900 Add X8, X8, W9
	3901 Add X0, X8, 312
	3902 Move X8, [X0]
	3903 Move X7, [X0+8]
	3904 Subtract W1, W26, 10
	3905 Move W9, [X10]
	3906 Add W9, W9, 2
	3907 Add X8, X8, W9
	3908 Add X0, X8, 312
	3909 Move X8, [X0]
	3910 Move X7, [X0+8]
	3911 Subtract W1, W26, 9
	3912 Move W9, [X10]
	3913 Add W9, W9, 2
	3914 Add X8, X8, W9
	3915 Add X0, X8, 312
	3916 Move X8, [X0]
	3917 Move X7, [X0+8]
	3918 Subtract W1, W26, 8
	3919 Move W9, [X10]
	3920 Add W9, W9, 2
	3921 Add X8, X8, W9
	3922 Add X0, X8, 312
	3923 Move X8, [X0]
	3924 Move X7, [X0+8]
	3925 Subtract W1, W26, 7
	3926 Move W9, [X10]
	3927 Add W9, W9, 2
	3928 Add X8, X8, W9
	3929 Add X0, X8, 312
	3930 Move X8, [X0]
	3931 Move X7, [X0+8]
	3932 Subtract W1, W26, 6
	3933 Move W9, [X10]
	3934 Add W9, W9, 2
	3935 Add X8, X8, W9
	3936 Add X0, X8, 312
	3937 Move X8, [X0]
	3938 Move X7, [X0+8]
	3939 Subtract W1, W26, 5
	3940 Move W9, [X10]
	3941 Add W9, W9, 2
	3942 Add X8, X8, W9
	3943 Add X0, X8, 312
	3944 Move X8, [X0]
	3945 Move X7, [X0+8]
	3946 Subtract W1, W26, 4
	3947 Move W9, [X10]
	3948 Add W9, W9, 4
	3949 Add X8, X8, W9
	3950 Add X0, X8, 312
	3951 Move X8, [X0]
	3952 Move X7, [X0+8]
	3953 Subtract W1, W26, 3
	3954 Move X0, X22
	3955 Move W2, W23
	3956 Move W3, W24
	3957 Move W4, W21
	3958 Move W5, W20
	3959 Move X6, X19
	3960 NotImplemented "Instruction BLR not yet implemented."
	3961 Move W9, [X10]
	3962 Add W9, W9, 2
	3963 Add X8, X8, W9
	3964 Add X0, X8, 312
	3965 Move X8, [X0]
	3966 Move X7, [X0+8]
	3967 Subtract W1, W26, 2
	3968 Move W9, [X10]
	3969 Add W9, W9, 2
	3970 Add X8, X8, W9
	3971 Add X0, X8, 312
	3972 Move X8, [X0]
	3973 Move X7, [X0+8]
	3974 Subtract W1, W26, 1
	3975 Move W9, [X10]
	3976 Add W9, W9, 2
	3977 Add X8, X8, W9
	3978 Add X0, X8, 312
	3979 Move X8, [X0]
	3980 Move X7, [X0+8]
	3981 Move W1, 32
	3982 NotImplemented "Instruction MOVK not yet implemented."
	3983 Move X24, X31
	3984 Compare X22, 0
	3985 JumpIfEqual {4050}
	3986 Move X0, X22
	3987 Move X1, X31
	3988 Call VisualElement.get_styleAnimation, X0
	3989 Move X8, 0x388000
	3990 Move X8, [X8+872]
	3991 Move X22, X0
	3992 Move X0, X23
	3993 Move X1, [X8]
	3994 Call 0x266D4A0, X0
	3995 Compare X22, 0
	3996 JumpIfEqual {4050}
	3997 Move X10, 0x340000
	3998 Move X8, [X22]
	3999 Move X23, [X0+64]
	4000 Move X10, [X10+3792]
	4001 NotImplemented "Instruction LDRH not yet implemented."
	4002 Move X1, [X10]
	4003 Compare X9, 0
	4004 JumpIfEqual {4011}
	4005 Move X10, [X8+176]
	4006 Add X10, X10, 8
	4007 NotImplemented "Instruction LDUR not yet implemented."
	4008 NotImplemented "Instruction CMP not yet implemented."
	4009 Subtract X9, X9, 1
	4010 Add X10, X10, 16
	4011 Move W2, 7
	4012 Move X0, X22
	4013 Call 0x1C5D788
	4014 Move W9, [X10]
	4015 Add W9, W9, 7
	4016 Add X8, X8, W9
	4017 Add X0, X8, 312
	4018 Move X8, [X0]
	4019 Move X7, [X0+8]
	4020 Or W9, W31, 0x10001
	4021 Add W1, W9, 3
	4022 Move X0, X22
	4023 Move X2, X23
	4024 Move X3, X24
	4025 Move W4, W21
	4026 Move W5, W20
	4027 Move X6, X19
	4028 NotImplemented "Instruction BLR not yet implemented."
	4029 Move X20, [X31+432]
	4030 Move X19, [X31+440]
	4031 Move X22, [X31+416]
	4032 Move X21, [X31+424]
	4033 Move X24, [X31+400]
	4034 Move X23, [X31+408]
	4035 Move X26, [X31+384]
	4036 Move X25, [X31+392]
	4037 Move X29, [X31+368]
	4038 Move X30, [X31+376]
	4039 Move D9, [X31+352]
	4040 Move D8, [X31+360]
	4041 Move D11, [X31+336]
	4042 Move D10, [X31+344]
	4043 Move D13, [X31+320]
	4044 Move D12, [X31+328]
	4045 Move D15, [X31+304]
	4046 Move D14, [X31+312]
	4047 And W0, W0, 1
	4048 Add X31, X31, 448
	4049 Return X0
	4050 Call 0x1C17F20

Method: System.Void ApplyStyleTransformOrigin(UnityEngine.UIElements.TransformOrigin st)

Disassembly:
	0x03DDEAF8 BL 0x3DC95BC
	0x03DDEAFC LDR V0, [X31 + 0x8]
	0x03DDEB00 LDR V1, [X25 + 0x1]
	0x03DDEB04 ADD X0, X31, 0x60
	0x03DDEB08 ADD X1, X31, 0x40
	0x03DDEB0C MOV X2, X31
	0x03DDEB10 STP V0, V1, [X31 + 0x60]
	0x03DDEB14 BL 0x3DE2858
	0x03DDEB18 TBNZ X0, 0x0, 0x3DDEBF0
	0x03DDEB1C MOV X0, X20
	0x03DDEB20 BL 0x3DC961C
	0x03DDEB24 MOV X22, X0
	0x03DDEB28 MOV X0, X19
	0x03DDEB2C MOV X23, X1
	0x03DDEB30 BL 0x3DC961C
	0x03DDEB34 AND X8, X23, 0x0
	0x03DDEB38 MOV X2, X0
	0x03DDEB3C AND X3, X1, 0x0
	0x03DDEB40 MOV X0, X22
	0x03DDEB44 MOV X1, X8
	0x03DDEB48 MOV X4, X31
	0x03DDEB4C BL 0x3CE9440
	0x03DDEB50 TBNZ X0, 0x0, 0x3DDEBF0
	0x03DDEB54 MOV X0, X20
	0x03DDEB58 BL 0x3DC9674
	0x03DDEB5C MOV X22, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x60B000
	007 Move X21, 0x388000
	008 Move W8, [X22+445]
	009 Move X21, [X21+784]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x388000
	017 Move X0, [X0+784]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+445], W8
	021 Move X1, [X21]
	022 Add X0, X20, 24
	023 Call StyleDataRef`1<TransformData>.Write, X0
	024 Move V0, [X19]
	025 Move W8, [X19+16]
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move [X0+40], V0
	031 Move [X0+56], W8
	032 Move X30, [X31+48]
	033 Return 

Method: System.Void ApplyStyleTranslate(UnityEngine.UIElements.Translate translateValue)

Disassembly:
	0x03DDEB60 MOV X0, X19
	0x03DDEB64 MOV X23, X1
	0x03DDEB68 BL 0x3DC9674
	0x03DDEB6C AND X8, X23, 0x0
	0x03DDEB70 MOV X2, X0
	0x03DDEB74 AND X3, X1, 0x0
	0x03DDEB78 MOV X0, X22
	0x03DDEB7C MOV X1, X8
	0x03DDEB80 MOV X4, X31
	0x03DDEB84 BL 0x3CE9440
	0x03DDEB88 TBNZ X0, 0x0, 0x3DDEBF0
	0x03DDEB8C MOV X0, X20
	0x03DDEB90 BL 0x3DC96CC
	0x03DDEB94 MOV X22, X0
	0x03DDEB98 MOV X0, X19
	0x03DDEB9C BL 0x3DC96CC
	0x03DDEBA0 MOV X1, X0
	0x03DDEBA4 MOV X0, X22
	0x03DDEBA8 MOV X2, X31
	0x03DDEBAC BL 0x3CE9B58
	0x03DDEBB0 TBNZ X0, 0x0, 0x3DDEBF0
	0x03DDEBB4 ADD X8, X31, 0x80
	0x03DDEBB8 MOV X0, X20
	0x03DDEBBC BL 0x3DC971C
	0x03DDEBC0 ADD X8, X31, 0x8
	0x03DDEBC4 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x60B000
	007 Move X21, 0x388000
	008 Move W8, [X22+446]
	009 Move X21, [X21+784]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x388000
	017 Move X0, [X0+784]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+446], W8
	021 Move X1, [X21]
	022 Add X0, X20, 24
	023 Call StyleDataRef`1<TransformData>.Write, X0
	024 Move V0, [X19]
	025 Move X8, [X19+16]
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move [X0+60], V0
	031 Move [X0+76], X8
	032 Move X30, [X31+48]
	033 Return 

Method: System.Void ApplyStyleRotate(UnityEngine.UIElements.Rotate rotateValue)

Disassembly:
	0x03DDEBC8 BL 0x3DC971C
	0x03DDEBCC LDR V0, [X31 + 0x8]
	0x03DDEBD0 LDR W8, [X31 + 0x90]
	0x03DDEBD4 ADD X0, X31, 0x20
	0x03DDEBD8 ADD X1, X31, 0x8
	0x03DDEBDC MOV X2, X31
	0x03DDEBE0 STR V0, [X31 + 0x2]
	0x03DDEBE4 STR W8, [X31 + 0x30]
	0x03DDEBE8 BL 0x3CE9E34
	0x03DDEBEC TBZ X0, 0x0, 0x3DDEBF4
	0x03DDEBF0 ORR W21, W21, 0x800
	0x03DDEBF4 MOV X0, X20
	0x03DDEBF8 BL 0x3DC97D8
	0x03DDEBFC MOV X22, X0
	0x03DDEC00 MOV X0, X19
	0x03DDEC04 BL 0x3DC97D8
	0x03DDEC08 MOV X1, X0
	0x03DDEC0C MOV X0, X22
	0x03DDEC10 MOV X2, X31
	0x03DDEC14 BL 0x3DFD53C
	0x03DDEC18 TBNZ X0, 0x0, 0x3DDEC6C
	0x03DDEC1C MOV X0, X20
	0x03DDEC20 BL 0x3DC9828
	0x03DDEC24 MOV X22, X0
	0x03DDEC28 MOV X0, X19
	0x03DDEC2C BL 0x3DC9828

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x60B000
	007 Move X21, 0x388000
	008 Move W8, [X22+447]
	009 Move X21, [X21+784]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x388000
	017 Move X0, [X0+784]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+447], W8
	021 Move X1, [X21]
	022 Add X0, X20, 24
	023 Call StyleDataRef`1<TransformData>.Write, X0
	024 Move V0, [X19]
	025 Move X8, [X19+16]
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move [X0], V0
	031 Move [X0+16], X8
	032 Move X30, [X31+48]
	033 Return 

Method: System.Void ApplyStyleScale(UnityEngine.UIElements.Scale scaleValue)

Disassembly:
	0x03DDEC30 MOV X1, X0
	0x03DDEC34 MOV X0, X22
	0x03DDEC38 MOV X2, X31
	0x03DDEC3C BL 0x3DFD53C
	0x03DDEC40 TBNZ X0, 0x0, 0x3DDEC6C
	0x03DDEC44 MOV X0, X20
	0x03DDEC48 BL 0x3DC9974
	0x03DDEC4C MOV X22, X0
	0x03DDEC50 MOV X0, X19
	0x03DDEC54 BL 0x3DC9974
	0x03DDEC58 MOV X1, X0
	0x03DDEC5C MOV X0, X22
	0x03DDEC60 MOV X2, X31
	0x03DDEC64 BL 0x3DFD53C
	0x03DDEC68 TBZ X0, 0x0, 0x3DDEEAC
	0x03DDEC6C MOVZ W8, 0x880
	0x03DDEC70 ORR W21, W21, W8, 0x0
	0x03DDEC74 MOV X0, X20
	0x03DDEC78 BL 0x3DC9B20
	0x03DDEC7C MOV X0, X19
	0x03DDEC80 MOV V8.16B, V0.16B
	0x03DDEC84 BL 0x3DC9B20
	0x03DDEC88 ORR W8, W21, 0x1000
	0x03DDEC8C FCMP S8, S0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x60B000
	008 Move X22, 0x388000
	009 Move W8, [X23+448]
	010 Move X22, [X22+784]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x388000
	019 Move X0, [X0+784]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+448], W8
	023 Move X1, [X22]
	024 Add X0, X21, 24
	025 Call StyleDataRef`1<TransformData>.Write, X0
	026 Move [X0+24], X20
	027 Move [X0+32], X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Move X23, [X31+56]
	034 Return 

Method: System.Void ApplyStyleBackgroundSize(UnityEngine.UIElements.BackgroundSize backgroundSizeValue)

Disassembly:
	0x03DDEC90 MOV X0, X20
	0x03DDEC94 CSEL W22, W8, W21, NE
	0x03DDEC98 BL 0x3DC6CF4
	0x03DDEC9C MOV W21, W0
	0x03DDECA0 MOV X0, X19
	0x03DDECA4 BL 0x3DC6CF4
	0x03DDECA8 MOVZ W8, 0x48
	0x03DDECAC ORR W8, W22, W8, 0x0
	0x03DDECB0 CMP W21, W0
	0x03DDECB4 CSEL W21, W22, W8, EQ
	0x03DDECB8 LDR X1, [X19 + 0x10]
	0x03DDECBC LDR X2, [X26]
	0x03DDECC0 ADD X0, X20, 0x10
	0x03DDECC4 BL 0x266D0A4
	0x03DDECC8 TBNZ X0, 0x0, 0x3DDEE24
	0x03DDECCC MOV X0, X20
	0x03DDECD0 BL 0x3DC9C2C
	0x03DDECD4 MOV W22, W0
	0x03DDECD8 MOV X0, X19
	0x03DDECDC BL 0x3DC9C2C
	0x03DDECE0 CMP W22, W0
	0x03DDECE4 B.NE 0x3DDED10
	0x03DDECE8 MOV X0, X20
	0x03DDECEC BL 0x3DCA1CC
	0x03DDECF0 MOV X0, X19
	0x03DDECF4 MOV V8.16B, V0.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x60B000
	007 Move X21, 0x388000
	008 Move W8, [X22+449]
	009 Move X21, [X21+760]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x388000
	017 Move X0, [X0+760]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+449], W8
	021 Move X1, [X21]
	022 Add X0, X20, 40
	023 Call StyleDataRef`1<VisualData>.Write, X0
	024 Move V0, [X19]
	025 Move W8, [X19+16]
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move [X0+5], V0
	031 Move [X0+96], W8
	032 Move X30, [X31+48]
	033 Return 

Method: System.Void ApplyInitialValue(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader)

Disassembly:
	0x03DC8150 MOV X1, X0
	0x03DC8154 MOV X0, X20
	0x03DC8158 LDR X2, [X8]
	0x03DC815C BL 0x2294EA0
	0x03DC8160 STR X31, [X19 + 0x50]
	0x03DC8164 B 0x3DC8FD4
	0x03DC8168 ADRP X8, 0x39D000
	0x03DC816C LDR X8, [X8 + 0x2F0]
	0x03DC8170 ADD X0, X19, 0x8
	0x03DC8174 LDR X1, [X8]
	0x03DC8178 BL 0x266C93C
	0x03DC817C ADRP X8, 0x39C000
	0x03DC8180 LDR X8, [X8 + 0x358]
	0x03DC8184 MOV X19, X0
	0x03DC8188 LDR X8, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {17}
	004 Move W8, [X1+80]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Add W31, W8, 1
	007 Move X30, [X31+16]
	008 Call ComputedStyle.RemoveCustomStyleProperty, X0, X1
	009 Return 
	010 Move X30, [X31+16]
	011 Call ComputedStyle.ApplyAllPropertyInitial, X0
	012 Return 
	013 Move W1, W8
	014 Move X30, [X31+16]
	015 Call ComputedStyle.ApplyInitialValue, X0, X1
	016 Return 
	017 Call 0x1C17F20

Method: System.Void ApplyInitialValue(UnityEngine.UIElements.StyleSheets.StylePropertyId id)

Disassembly:
	0x03DC81DC BL 0x1C16DFC
	0x03DC81E0 MOV X0, X31
	0x03DC81E4 BL 0x3D45094
	0x03DC81E8 STR W0, [X19 + 0x8]
	0x03DC81EC B 0x3DC8FD4
	0x03DC81F0 ADRP X8, 0x39D000
	0x03DC81F4 LDR X8, [X8 + 0x2F0]
	0x03DC81F8 ADD X0, X19, 0x8
	0x03DC81FC LDR X1, [X8]
	0x03DC8200 BL 0x266C93C
	0x03DC8204 ADRP X8, 0x39C000
	0x03DC8208 LDR X8, [X8 + 0x358]
	0x03DC820C MOV X19, X0
	0x03DC8210 LDR X8, [X8]
	0x03DC8214 LDR W9, [X8 + 0xE0]
	0x03DC8218 CBNZ W9, 0x3DC8224
	0x03DC821C MOV X0, X8
	0x03DC8220 BL 0x1C16DFC
	0x03DC8224 MOV X0, X31
	0x03DC8228 BL 0x3D45574
	0x03DC822C STR S0, [X19 + 0xC]
	0x03DC8230 B 0x3DC8FD4
	0x03DC8234 ADRP X8, 0x39D000
	0x03DC8238 LDR X8, [X8 + 0x2F0]
	0x03DC823C ADD X0, X19, 0x8
	0x03DC8240 LDR X1, [X8]
	0x03DC8244 BL 0x266C93C
	0x03DC8248 ADRP X8, 0x39C000
	0x03DC824C LDR X8, [X8 + 0x358]
	0x03DC8250 MOV X19, X0
	0x03DC8254 LDR X8, [X8]
	0x03DC8258 LDR W9, [X8 + 0xE0]
	0x03DC825C CBNZ W9, 0x3DC8268
	0x03DC8260 MOV X0, X8
	0x03DC8264 BL 0x1C16DFC
	0x03DC8268 MOV X0, X31
	0x03DC826C BL 0x3D45668
	0x03DC8270 STR S0, [X19 + 0x10]
	0x03DC8274 B 0x3DC8FD4
	0x03DC8278 ADRP X8, 0x39D000
	0x03DC827C LDR X8, [X8 + 0x2F0]
	0x03DC8280 ADD X0, X19, 0x8
	0x03DC8284 LDR X1, [X8]
	0x03DC8288 BL 0x266C93C
	0x03DC828C ADRP X8, 0x39C000
	0x03DC8290 LDR X8, [X8 + 0x358]
	0x03DC8294 MOV X19, X0
	0x03DC8298 LDR X8, [X8]
	0x03DC829C LDR W9, [X8 + 0xE0]
	0x03DC82A0 CBNZ W9, 0x3DC82AC
	0x03DC82A4 MOV X0, X8
	0x03DC82A8 BL 0x1C16DFC
	0x03DC82AC MOV X0, X31
	0x03DC82B0 BL 0x3D4575C
	0x03DC82B4 STR S0, [X19 + 0x14]
	0x03DC82B8 B 0x3DC8FD4
	0x03DC82BC ADRP X8, 0x39D000
	0x03DC82C0 LDR X8, [X8 + 0x2F0]
	0x03DC82C4 ADD X0, X19, 0x8
	0x03DC82C8 LDR X1, [X8]
	0x03DC82CC BL 0x266C93C
	0x03DC82D0 ADRP X8, 0x39C000
	0x03DC82D4 LDR X8, [X8 + 0x358]
	0x03DC82D8 MOV X19, X0
	0x03DC82DC LDR X8, [X8]
	0x03DC82E0 LDR W9, [X8 + 0xE0]
	0x03DC82E4 CBNZ W9, 0x3DC82F0
	0x03DC82E8 MOV X0, X8
	0x03DC82EC BL 0x1C16DFC
	0x03DC82F0 MOV X0, X31
	0x03DC82F4 BL 0x3D45940
	0x03DC82F8 STR S0, [X19 + 0x18]
	0x03DC82FC B 0x3DC8FD4
	0x03DC8300 ADRP X8, 0x39D000
	0x03DC8304 LDR X8, [X8 + 0x2F0]
	0x03DC8308 ADD X0, X19, 0x8
	0x03DC830C LDR X1, [X8]
	0x03DC8310 BL 0x266C93C
	0x03DC8314 ADRP X8, 0x39C000
	0x03DC8318 LDR X8, [X8 + 0x358]
	0x03DC831C MOV X19, X0
	0x03DC8320 LDR X8, [X8]
	0x03DC8324 LDR W9, [X8 + 0xE0]
	0x03DC8328 CBNZ W9, 0x3DC8334
	0x03DC832C MOV X0, X8
	0x03DC8330 BL 0x1C16DFC
	0x03DC8334 MOV X0, X31
	0x03DC8338 BL 0x3D459B8
	0x03DC833C STUR X0, [X19 + 0x1C]
	0x03DC8340 B 0x3DC8FD4
	0x03DC8344 ADRP X8, 0x39D000
	0x03DC8348 LDR X8, [X8 + 0x2F0]
	0x03DC834C ADD X0, X19, 0x8
	0x03DC8350 LDR X1, [X8]
	0x03DC8354 BL 0x266C93C
	0x03DC8358 ADRP X8, 0x39C000
	0x03DC835C LDR X8, [X8 + 0x358]
	0x03DC8360 MOV X19, X0
	0x03DC8364 LDR X8, [X8]
	0x03DC8368 LDR W9, [X8 + 0xE0]
	0x03DC836C CBNZ W9, 0x3DC8378
	0x03DC8370 MOV X0, X8
	0x03DC8374 BL 0x1C16DFC
	0x03DC8378 MOV X0, X31
	0x03DC837C BL 0x3D45B30
	0x03DC8380 STR W0, [X19 + 0x24]
	0x03DC8384 B 0x3DC8FD4
	0x03DC8388 ADRP X8, 0x39D000
	0x03DC838C LDR X8, [X8 + 0x2F0]
	0x03DC8390 ADD X0, X19, 0x8
	0x03DC8394 LDR X1, [X8]
	0x03DC8398 BL 0x266C93C
	0x03DC839C ADRP X8, 0x39C000
	0x03DC83A0 LDR X8, [X8 + 0x358]
	0x03DC83A4 MOV X19, X0
	0x03DC83A8 LDR X8, [X8]
	0x03DC83AC LDR W9, [X8 + 0xE0]
	0x03DC83B0 CBNZ W9, 0x3DC83BC
	0x03DC83B4 MOV X0, X8
	0x03DC83B8 BL 0x1C16DFC
	0x03DC83BC MOV X0, X31
	0x03DC83C0 BL 0x3D45BA8
	0x03DC83C4 STR X0, [X19 + 0x28]
	0x03DC83C8 B 0x3DC8FD4
	0x03DC83CC ADRP X8, 0x39D000
	0x03DC83D0 LDR X8, [X8 + 0x2F0]
	0x03DC83D4 ADD X0, X19, 0x8
	0x03DC83D8 LDR X1, [X8]
	0x03DC83DC BL 0x266C93C
	0x03DC83E0 ADRP X8, 0x39C000
	0x03DC83E4 LDR X8, [X8 + 0x358]
	0x03DC83E8 MOV X19, X0
	0x03DC83EC LDR X8, [X8]
	0x03DC83F0 LDR W9, [X8 + 0xE0]
	0x03DC83F4 CBNZ W9, 0x3DC8400
	0x03DC83F8 MOV X0, X8
	0x03DC83FC BL 0x1C16DFC
	0x03DC8400 MOV X0, X31
	0x03DC8404 BL 0x3D45C20
	0x03DC8408 B 0x3DC8E7C
	0x03DC840C ADRP X8, 0x39D000
	0x03DC8410 LDR X8, [X8 + 0x2F0]
	0x03DC8414 ADD X0, X19, 0x8
	0x03DC8418 LDR X1, [X8]
	0x03DC841C BL 0x266C93C
	0x03DC8420 ADRP X8, 0x39C000
	0x03DC8424 LDR X8, [X8 + 0x358]
	0x03DC8428 MOV X19, X0
	0x03DC842C LDR X8, [X8]
	0x03DC8430 LDR W9, [X8 + 0xE0]
	0x03DC8434 CBNZ W9, 0x3DC8440
	0x03DC8438 MOV X0, X8
	0x03DC843C BL 0x1C16DFC
	0x03DC8440 MOV X0, X31
	0x03DC8444 BL 0x3D45C98
	0x03DC8448 STR S0, [X19 + 0x34]
	0x03DC844C B 0x3DC8FD4
	0x03DC8450 ADRP X8, 0x39D000
	0x03DC8454 LDR X8, [X8 + 0x2F0]
	0x03DC8458 ADD X0, X19, 0x8
	0x03DC845C LDR X1, [X8]
	0x03DC8460 BL 0x266C93C
	0x03DC8464 ADRP X8, 0x39C000
	0x03DC8468 LDR X8, [X8 + 0x358]
	0x03DC846C MOV X19, X0
	0x03DC8470 LDR X8, [X8]
	0x03DC8474 LDR W9, [X8 + 0xE0]
	0x03DC8478 CBNZ W9, 0x3DC8484
	0x03DC847C MOV X0, X8
	0x03DC8480 BL 0x1C16DFC
	0x03DC8484 MOV X0, X31
	0x03DC8488 BL 0x3D45D10
	0x03DC848C STR S0, [X19 + 0x38]
	0x03DC8490 B 0x3DC8FD4
	0x03DC8494 ADRP X8, 0x39D000
	0x03DC8498 LDR X8, [X8 + 0x2F0]
	0x03DC849C ADD X0, X19, 0x8
	0x03DC84A0 LDR X1, [X8]
	0x03DC84A4 BL 0x266C93C
	0x03DC84A8 ADRP X8, 0x39C000
	0x03DC84AC LDR X8, [X8 + 0x358]
	0x03DC84B0 MOV X19, X0
	0x03DC84B4 LDR X8, [X8]
	0x03DC84B8 LDR W9, [X8 + 0xE0]
	0x03DC84BC CBNZ W9, 0x3DC84C8
	0x03DC84C0 MOV X0, X8
	0x03DC84C4 BL 0x1C16DFC
	0x03DC84C8 MOV X0, X31
	0x03DC84CC BL 0x3D45D88
	0x03DC84D0 STR W0, [X19 + 0x3C]
	0x03DC84D4 B 0x3DC8FD4
	0x03DC84D8 ADRP X8, 0x39D000
	0x03DC84DC LDR X8, [X8 + 0x2F0]
	0x03DC84E0 ADD X0, X19, 0x8
	0x03DC84E4 LDR X1, [X8]
	0x03DC84E8 BL 0x266C93C
	0x03DC84EC ADRP X8, 0x39C000
	0x03DC84F0 LDR X8, [X8 + 0x358]
	0x03DC84F4 MOV X19, X0
	0x03DC84F8 LDR X8, [X8]
	0x03DC84FC LDR W9, [X8 + 0xE0]
	0x03DC8500 CBNZ W9, 0x3DC850C
	0x03DC8504 MOV X0, X8
	0x03DC8508 BL 0x1C16DFC
	0x03DC850C MOV X0, X31
	0x03DC8510 BL 0x3D45E74
	0x03DC8514 B 0x3DC8B00
	0x03DC8518 ADRP X8, 0x39D000
	0x03DC851C LDR X8, [X8 + 0x2F0]
	0x03DC8520 ADD X0, X19, 0x8
	0x03DC8524 LDR X1, [X8]
	0x03DC8528 BL 0x266C93C
	0x03DC852C ADRP X8, 0x39C000
	0x03DC8530 LDR X8, [X8 + 0x358]
	0x03DC8534 MOV X19, X0
	0x03DC8538 LDR X8, [X8]
	0x03DC853C LDR W9, [X8 + 0xE0]
	0x03DC8540 CBNZ W9, 0x3DC854C
	0x03DC8544 MOV X0, X8
	0x03DC8548 BL 0x1C16DFC
	0x03DC854C MOV X0, X31
	0x03DC8550 BL 0x3D45EEC
	0x03DC8554 STR W0, [X19 + 0x48]
	0x03DC8558 B 0x3DC8FD4
	0x03DC855C ADRP X8, 0x39D000
	0x03DC8560 LDR X8, [X8 + 0x2F0]
	0x03DC8564 ADD X0, X19, 0x8
	0x03DC8568 LDR X1, [X8]
	0x03DC856C BL 0x266C93C
	0x03DC8570 ADRP X8, 0x39C000
	0x03DC8574 LDR X8, [X8 + 0x358]
	0x03DC8578 MOV X19, X0
	0x03DC857C LDR X8, [X8]
	0x03DC8580 LDR W9, [X8 + 0xE0]
	0x03DC8584 CBNZ W9, 0x3DC8590
	0x03DC8588 MOV X0, X8
	0x03DC858C BL 0x1C16DFC
	0x03DC8590 MOV X0, X31
	0x03DC8594 BL 0x3D45F64
	0x03DC8598 STUR X0, [X19 + 0x4C]
	0x03DC859C B 0x3DC8FD4
	0x03DC85A0 ADRP X8, 0x39D000
	0x03DC85A4 LDR X8, [X8 + 0x2F0]
	0x03DC85A8 ADD X0, X19, 0x8
	0x03DC85AC LDR X1, [X8]
	0x03DC85B0 BL 0x266C93C
	0x03DC85B4 ADRP X8, 0x39C000
	0x03DC85B8 LDR X8, [X8 + 0x358]
	0x03DC85BC MOV X19, X0
	0x03DC85C0 LDR X8, [X8]
	0x03DC85C4 LDR W9, [X8 + 0xE0]
	0x03DC85C8 CBNZ W9, 0x3DC85D4
	0x03DC85CC MOV X0, X8
	0x03DC85D0 BL 0x1C16DFC
	0x03DC85D4 MOV X0, X31
	0x03DC85D8 BL 0x3D46050
	0x03DC85DC STUR X0, [X19 + 0x54]
	0x03DC85E0 B 0x3DC8FD4
	0x03DC85E4 ADRP X8, 0x39D000
	0x03DC85E8 LDR X8, [X8 + 0x2F0]
	0x03DC85EC ADD X0, X19, 0x8
	0x03DC85F0 LDR X1, [X8]
	0x03DC85F4 BL 0x266C93C
	0x03DC85F8 ADRP X8, 0x39C000
	0x03DC85FC LDR X8, [X8 + 0x358]
	0x03DC8600 MOV X19, X0
	0x03DC8604 LDR X8, [X8]
	0x03DC8608 LDR W9, [X8 + 0xE0]
	0x03DC860C CBNZ W9, 0x3DC8618
	0x03DC8610 MOV X0, X8
	0x03DC8614 BL 0x1C16DFC
	0x03DC8618 MOV X0, X31
	0x03DC861C BL 0x3D460C8
	0x03DC8620 B 0x3DC8BCC
	0x03DC8624 ADRP X8, 0x39D000
	0x03DC8628 LDR X8, [X8 + 0x2F0]
	0x03DC862C ADD X0, X19, 0x8
	0x03DC8630 LDR X1, [X8]
	0x03DC8634 BL 0x266C93C
	0x03DC8638 ADRP X8, 0x39C000
	0x03DC863C LDR X8, [X8 + 0x358]
	0x03DC8640 MOV X19, X0
	0x03DC8644 LDR X8, [X8]
	0x03DC8648 LDR W9, [X8 + 0xE0]
	0x03DC864C CBNZ W9, 0x3DC8658
	0x03DC8650 MOV X0, X8
	0x03DC8654 BL 0x1C16DFC
	0x03DC8658 MOV X0, X31
	0x03DC865C BL 0x3D46140
	0x03DC8660 STUR X0, [X19 + 0x64]
	0x03DC8664 B 0x3DC8FD4
	0x03DC8668 ADRP X8, 0x39D000
	0x03DC866C LDR X8, [X8 + 0x2F0]
	0x03DC8670 ADD X0, X19, 0x8
	0x03DC8674 LDR X1, [X8]
	0x03DC8678 BL 0x266C93C
	0x03DC867C ADRP X8, 0x39C000
	0x03DC8680 LDR X8, [X8 + 0x358]
	0x03DC8684 MOV X19, X0
	0x03DC8688 LDR X8, [X8]
	0x03DC868C LDR W9, [X8 + 0xE0]
	0x03DC8690 CBNZ W9, 0x3DC869C
	0x03DC8694 MOV X0, X8
	0x03DC8698 BL 0x1C16DFC
	0x03DC869C MOV X0, X31
	0x03DC86A0 BL 0x3D461B8
	0x03DC86A4 STUR X0, [X19 + 0x6C]
	0x03DC86A8 B 0x3DC8FD4
	0x03DC86AC ADRP X8, 0x39D000
	0x03DC86B0 LDR X8, [X8 + 0x2F0]
	0x03DC86B4 ADD X0, X19, 0x8
	0x03DC86B8 LDR X1, [X8]
	0x03DC86BC BL 0x266C93C
	0x03DC86C0 ADRP X8, 0x39C000
	0x03DC86C4 LDR X8, [X8 + 0x358]
	0x03DC86C8 MOV X19, X0
	0x03DC86CC LDR X8, [X8]
	0x03DC86D0 LDR W9, [X8 + 0xE0]
	0x03DC86D4 CBNZ W9, 0x3DC86E0
	0x03DC86D8 MOV X0, X8
	0x03DC86DC BL 0x1C16DFC
	0x03DC86E0 MOV X0, X31
	0x03DC86E4 BL 0x3D46230
	0x03DC86E8 STUR X0, [X19 + 0x74]
	0x03DC86EC B 0x3DC8FD4
	0x03DC86F0 ADRP X8, 0x39D000
	0x03DC86F4 LDR X8, [X8 + 0x2F0]
	0x03DC86F8 ADD X0, X19, 0x8
	0x03DC86FC LDR X1, [X8]
	0x03DC8700 BL 0x266C93C
	0x03DC8704 ADRP X8, 0x39C000
	0x03DC8708 LDR X8, [X8 + 0x358]
	0x03DC870C MOV X19, X0
	0x03DC8710 LDR X8, [X8]
	0x03DC8714 LDR W9, [X8 + 0xE0]
	0x03DC8718 CBNZ W9, 0x3DC8724
	0x03DC871C MOV X0, X8
	0x03DC8720 BL 0x1C16DFC
	0x03DC8724 MOV X0, X31
	0x03DC8728 BL 0x3D462A8
	0x03DC872C STUR X0, [X19 + 0x7C]
	0x03DC8730 B 0x3DC8FD4
	0x03DC8734 ADRP X8, 0x39D000
	0x03DC8738 LDR X8, [X8 + 0x2F0]
	0x03DC873C ADD X0, X19, 0x8
	0x03DC8740 LDR X1, [X8]
	0x03DC8744 BL 0x266C93C
	0x03DC8748 ADRP X8, 0x39C000
	0x03DC874C LDR X8, [X8 + 0x358]
	0x03DC8750 MOV X19, X0
	0x03DC8754 LDR X8, [X8]
	0x03DC8758 LDR W9, [X8 + 0xE0]
	0x03DC875C CBNZ W9, 0x3DC8768
	0x03DC8760 MOV X0, X8
	0x03DC8764 BL 0x1C16DFC
	0x03DC8768 MOV X0, X31
	0x03DC876C BL 0x3D46320
	0x03DC8770 B 0x3DC8D68
	0x03DC8774 ADRP X8, 0x39D000
	0x03DC8778 LDR X8, [X8 + 0x2F0]
	0x03DC877C ADD X0, X19, 0x8
	0x03DC8780 LDR X1, [X8]
	0x03DC8784 BL 0x266C93C
	0x03DC8788 ADRP X8, 0x39C000
	0x03DC878C LDR X8, [X8 + 0x358]
	0x03DC8790 MOV X19, X0
	0x03DC8794 LDR X8, [X8]
	0x03DC8798 LDR W9, [X8 + 0xE0]
	0x03DC879C CBNZ W9, 0x3DC87A8
	0x03DC87A0 MOV X0, X8
	0x03DC87A4 BL 0x1C16DFC
	0x03DC87A8 MOV X0, X31
	0x03DC87AC BL 0x3D46398
	0x03DC87B0 STUR X0, [X19 + 0x8C]
	0x03DC87B4 B 0x3DC8FD4
	0x03DC87B8 ADRP X8, 0x39D000
	0x03DC87BC LDR X8, [X8 + 0x2F0]
	0x03DC87C0 ADD X0, X19, 0x8
	0x03DC87C4 LDR X1, [X8]
	0x03DC87C8 BL 0x266C93C
	0x03DC87CC ADRP X8, 0x39C000
	0x03DC87D0 LDR X8, [X8 + 0x358]
	0x03DC87D4 MOV X19, X0
	0x03DC87D8 LDR X8, [X8]
	0x03DC87DC LDR W9, [X8 + 0xE0]
	0x03DC87E0 CBNZ W9, 0x3DC87EC
	0x03DC87E4 MOV X0, X8
	0x03DC87E8 BL 0x1C16DFC
	0x03DC87EC MOV X0, X31
	0x03DC87F0 BL 0x3D46500
	0x03DC87F4 STUR X0, [X19 + 0x94]
	0x03DC87F8 B 0x3DC8FD4
	0x03DC87FC ADRP X8, 0x39D000
	0x03DC8800 LDR X8, [X8 + 0x2F0]
	0x03DC8804 ADD X0, X19, 0x8
	0x03DC8808 LDR X1, [X8]
	0x03DC880C BL 0x266C93C
	0x03DC8810 ADRP X8, 0x39C000
	0x03DC8814 LDR X8, [X8 + 0x358]
	0x03DC8818 MOV X19, X0
	0x03DC881C LDR X8, [X8]
	0x03DC8820 LDR W9, [X8 + 0xE0]
	0x03DC8824 CBNZ W9, 0x3DC8830
	0x03DC8828 MOV X0, X8
	0x03DC882C BL 0x1C16DFC
	0x03DC8830 MOV X0, X31
	0x03DC8834 BL 0x3D46578
	0x03DC8838 STUR X0, [X19 + 0x9C]
	0x03DC883C B 0x3DC8FD4
	0x03DC8840 ADRP X8, 0x39D000
	0x03DC8844 LDR X8, [X8 + 0x2F0]
	0x03DC8848 ADD X0, X19, 0x8
	0x03DC884C LDR X1, [X8]
	0x03DC8850 BL 0x266C93C
	0x03DC8854 ADRP X8, 0x39C000
	0x03DC8858 LDR X8, [X8 + 0x358]
	0x03DC885C MOV X19, X0
	0x03DC8860 LDR X8, [X8]
	0x03DC8864 LDR W9, [X8 + 0xE0]
	0x03DC8868 CBNZ W9, 0x3DC8874
	0x03DC886C MOV X0, X8
	0x03DC8870 BL 0x1C16DFC
	0x03DC8874 MOV X0, X31
	0x03DC8878 BL 0x3D465F0
	0x03DC887C STUR X0, [X19 + 0xA4]
	0x03DC8880 B 0x3DC8FD4
	0x03DC8884 ADRP X8, 0x39D000
	0x03DC8888 LDR X8, [X8 + 0x2F0]
	0x03DC888C ADD X0, X19, 0x8
	0x03DC8890 LDR X1, [X8]
	0x03DC8894 BL 0x266C93C
	0x03DC8898 ADRP X8, 0x39C000
	0x03DC889C LDR X8, [X8 + 0x358]
	0x03DC88A0 MOV X19, X0
	0x03DC88A4 LDR X8, [X8]
	0x03DC88A8 LDR W9, [X8 + 0xE0]
	0x03DC88AC CBNZ W9, 0x3DC88B8
	0x03DC88B0 MOV X0, X8
	0x03DC88B4 BL 0x1C16DFC
	0x03DC88B8 MOV X0, X31
	0x03DC88BC BL 0x3D46668
	0x03DC88C0 STUR X0, [X19 + 0xAC]
	0x03DC88C4 B 0x3DC8FD4
	0x03DC88C8 ADRP X8, 0x39D000
	0x03DC88CC LDR X8, [X8 + 0x2F0]
	0x03DC88D0 ADD X0, X19, 0x8
	0x03DC88D4 LDR X1, [X8]
	0x03DC88D8 BL 0x266C93C
	0x03DC88DC ADRP X8, 0x39C000
	0x03DC88E0 LDR X8, [X8 + 0x358]
	0x03DC88E4 MOV X19, X0
	0x03DC88E8 LDR X8, [X8]
	0x03DC88EC LDR W9, [X8 + 0xE0]
	0x03DC88F0 CBNZ W9, 0x3DC88FC
	0x03DC88F4 MOV X0, X8
	0x03DC88F8 BL 0x1C16DFC
	0x03DC88FC MOV X0, X31
	0x03DC8900 BL 0x3D466E0
	0x03DC8904 STR W0, [X19 + 0xB4]
	0x03DC8908 B 0x3DC8FD4
	0x03DC890C ADRP X8, 0x39D000
	0x03DC8910 LDR X8, [X8 + 0x2F0]
	0x03DC8914 ADD X0, X19, 0x8
	0x03DC8918 LDR X1, [X8]
	0x03DC891C BL 0x266C93C
	0x03DC8920 ADRP X8, 0x39C000
	0x03DC8924 LDR X8, [X8 + 0x358]
	0x03DC8928 MOV X19, X0
	0x03DC892C LDR X8, [X8]
	0x03DC8930 LDR W9, [X8 + 0xE0]
	0x03DC8934 CBNZ W9, 0x3DC8940
	0x03DC8938 MOV X0, X8
	0x03DC893C BL 0x1C16DFC
	0x03DC8940 MOV X0, X31
	0x03DC8944 BL 0x3D46758
	0x03DC8948 STR X0, [X19 + 0xB8]
	0x03DC894C B 0x3DC8FD4
	0x03DC8950 ADRP X8, 0x39D000
	0x03DC8954 LDR X8, [X8 + 0x2F0]
	0x03DC8958 ADD X0, X19, 0x8
	0x03DC895C LDR X1, [X8]
	0x03DC8960 BL 0x266C93C
	0x03DC8964 ADRP X8, 0x39C000
	0x03DC8968 LDR X8, [X8 + 0x358]
	0x03DC896C MOV X19, X0
	0x03DC8970 LDR X8, [X8]
	0x03DC8974 LDR W9, [X8 + 0xE0]
	0x03DC8978 CBNZ W9, 0x3DC8984
	0x03DC897C MOV X0, X8
	0x03DC8980 BL 0x1C16DFC
	0x03DC8984 MOV X0, X31
	0x03DC8988 BL 0x3D469D0
	0x03DC898C STR X0, [X19 + 0xC0]
	0x03DC8990 B 0x3DC8FD4
	0x03DC8994 ADRP X8, 0x39D000
	0x03DC8998 LDR X8, [X8 + 0x2F0]
	0x03DC899C ADD X0, X19, 0x8
	0x03DC89A0 LDR X1, [X8]
	0x03DC89A4 BL 0x266C93C
	0x03DC89A8 ADRP X8, 0x39C000
	0x03DC89AC LDR X8, [X8 + 0x358]
	0x03DC89B0 MOV X19, X0
	0x03DC89B4 LDR X8, [X8]
	0x03DC89B8 LDR W9, [X8 + 0xE0]
	0x03DC89BC CBNZ W9, 0x3DC89C8
	0x03DC89C0 MOV X0, X8
	0x03DC89C4 BL 0x1C16DFC
	0x03DC89C8 MOV X0, X31
	0x03DC89CC BL 0x3D47518
	0x03DC89D0 STR X0, [X19 + 0xC8]
	0x03DC89D4 B 0x3DC8FD4
	0x03DC89D8 ADRP X8, 0x39D000
	0x03DC89DC LDR X8, [X8 + 0x300]
	0x03DC89E0 MOV X0, X19
	0x03DC89E4 LDR X1, [X8]
	0x03DC89E8 BL 0x266C4BC
	0x03DC89EC ADRP X8, 0x39C000
	0x03DC89F0 LDR X8, [X8 + 0x358]
	0x03DC89F4 MOV X19, X0
	0x03DC89F8 LDR X8, [X8]
	0x03DC89FC LDR W9, [X8 + 0xE0]
	0x03DC8A00 CBNZ W9, 0x3DC8A0C
	0x03DC8A04 MOV X0, X8
	0x03DC8A08 BL 0x1C16DFC
	0x03DC8A0C MOV X0, X31
	0x03DC8A10 BL 0x3D45E00
	0x03DC8A14 STR X0, [X19 + 0x10]
	0x03DC8A18 B 0x3DC8FD4
	0x03DC8A1C ADRP X8, 0x39D000
	0x03DC8A20 LDR X8, [X8 + 0x300]
	0x03DC8A24 MOV X0, X19
	0x03DC8A28 LDR X1, [X8]
	0x03DC8A2C BL 0x266C4BC
	0x03DC8A30 ADRP X8, 0x39C000
	0x03DC8A34 LDR X8, [X8 + 0x358]
	0x03DC8A38 MOV X19, X0
	0x03DC8A3C LDR X8, [X8]
	0x03DC8A40 LDR W9, [X8 + 0xE0]
	0x03DC8A44 CBNZ W9, 0x3DC8A50
	0x03DC8A48 MOV X0, X8
	0x03DC8A4C BL 0x1C16DFC
	0x03DC8A50 MOV X0, X31
	0x03DC8A54 BL 0x3D45FDC
	0x03DC8A58 STR X0, [X19 + 0x18]
	0x03DC8A5C B 0x3DC8FD4
	0x03DC8A60 ADRP X8, 0x39D000
	0x03DC8A64 LDR X8, [X8 + 0x300]
	0x03DC8A68 MOV X0, X19
	0x03DC8A6C LDR X1, [X8]
	0x03DC8A70 BL 0x266C4BC
	0x03DC8A74 ADRP X8, 0x39C000
	0x03DC8A78 LDR X8, [X8 + 0x358]
	0x03DC8A7C MOV X19, X0
	0x03DC8A80 LDR X8, [X8]
	0x03DC8A84 LDR W9, [X8 + 0xE0]
	0x03DC8A88 CBNZ W9, 0x3DC8A94
	0x03DC8A8C MOV X0, X8
	0x03DC8A90 BL 0x1C16DFC
	0x03DC8A94 ADD X8, X31, 0x0
	0x03DC8A98 MOV X0, X31
	0x03DC8A9C BL 0x3D4694C
	0x03DC8AA0 LDUR V0, [X31 + 0xC]
	0x03DC8AA4 LDR V1, [X31]
	0x03DC8AA8 STUR V0, [X31 + 0x2C]
	0x03DC8AAC STR V1, [X31 + 0x2]
	0x03DC8AB0 LDR V0, [X31 + 0x2]
	0x03DC8AB4 LDUR V1, [X31 + 0x2C]
	0x03DC8AB8 STR V0, [X19 + 0x2]
	0x03DC8ABC STUR V1, [X19 + 0x2C]
	0x03DC8AC0 B 0x3DC8FD4
	0x03DC8AC4 ADRP X8, 0x39D000
	0x03DC8AC8 LDR X8, [X8 + 0x300]
	0x03DC8ACC MOV X0, X19
	0x03DC8AD0 LDR X1, [X8]
	0x03DC8AD4 BL 0x266C4BC
	0x03DC8AD8 ADRP X8, 0x39C000
	0x03DC8ADC LDR X8, [X8 + 0x358]
	0x03DC8AE0 MOV X19, X0
	0x03DC8AE4 LDR X8, [X8]
	0x03DC8AE8 LDR W9, [X8 + 0xE0]
	0x03DC8AEC CBNZ W9, 0x3DC8AF8
	0x03DC8AF0 MOV X0, X8
	0x03DC8AF4 BL 0x1C16DFC
	0x03DC8AF8 MOV X0, X31
	0x03DC8AFC BL 0x3D46DB4
	0x03DC8B00 STR X0, [X19 + 0x40]
	0x03DC8B04 B 0x3DC8FD4
	0x03DC8B08 ADRP X8, 0x39D000
	0x03DC8B0C LDR X8, [X8 + 0x300]
	0x03DC8B10 MOV X0, X19
	0x03DC8B14 LDR X1, [X8]
	0x03DC8B18 BL 0x266C4BC
	0x03DC8B1C ADRP X8, 0x39C000
	0x03DC8B20 LDR X8, [X8 + 0x358]
	0x03DC8B24 MOV X19, X0
	0x03DC8B28 LDR X8, [X8]
	0x03DC8B2C LDR W9, [X8 + 0xE0]
	0x03DC8B30 CBNZ W9, 0x3DC8B3C
	0x03DC8B34 MOV X0, X8
	0x03DC8B38 BL 0x1C16DFC
	0x03DC8B3C MOV X0, X31
	0x03DC8B40 BL 0x3D46E28
	0x03DC8B44 STP X0, X1, [X19 + 0x48]
	0x03DC8B48 B 0x3DC8FD4
	0x03DC8B4C ADRP X8, 0x39D000
	0x03DC8B50 LDR X8, [X8 + 0x300]
	0x03DC8B54 MOV X0, X19
	0x03DC8B58 LDR X1, [X8]
	0x03DC8B5C BL 0x266C4BC
	0x03DC8B60 ADRP X8, 0x39C000
	0x03DC8B64 LDR X8, [X8 + 0x358]
	0x03DC8B68 MOV X19, X0
	0x03DC8B6C LDR X8, [X8]
	0x03DC8B70 LDR W9, [X8 + 0xE0]
	0x03DC8B74 CBNZ W9, 0x3DC8B80
	0x03DC8B78 MOV X0, X8
	0x03DC8B7C BL 0x1C16DFC
	0x03DC8B80 MOV X0, X31
	0x03DC8B84 BL 0x3D46EA0
	0x03DC8B88 STR W0, [X19 + 0x58]
	0x03DC8B8C B 0x3DC8FD4
	0x03DC8B90 ADRP X8, 0x39D000
	0x03DC8B94 LDR X8, [X8 + 0x300]
	0x03DC8B98 MOV X0, X19
	0x03DC8B9C LDR X1, [X8]
	0x03DC8BA0 BL 0x266C4BC
	0x03DC8BA4 ADRP X8, 0x39C000
	0x03DC8BA8 LDR X8, [X8 + 0x358]
	0x03DC8BAC MOV X19, X0
	0x03DC8BB0 LDR X8, [X8]
	0x03DC8BB4 LDR W9, [X8 + 0xE0]
	0x03DC8BB8 CBNZ W9, 0x3DC8BC4
	0x03DC8BBC MOV X0, X8
	0x03DC8BC0 BL 0x1C16DFC
	0x03DC8BC4 MOV X0, X31
	0x03DC8BC8 BL 0x3D46F8C
	0x03DC8BCC STUR X0, [X19 + 0x5C]
	0x03DC8BD0 B 0x3DC8FD4
	0x03DC8BD4 ADRP X8, 0x39D000
	0x03DC8BD8 LDR X8, [X8 + 0x300]
	0x03DC8BDC MOV X0, X19
	0x03DC8BE0 LDR X1, [X8]
	0x03DC8BE4 BL 0x266C4BC
	0x03DC8BE8 ADRP X8, 0x39C000
	0x03DC8BEC LDR X8, [X8 + 0x358]
	0x03DC8BF0 MOV X19, X0
	0x03DC8BF4 LDR X8, [X8]
	0x03DC8BF8 LDR W9, [X8 + 0xE0]
	0x03DC8BFC CBNZ W9, 0x3DC8C08
	0x03DC8C00 MOV X0, X8
	0x03DC8C04 BL 0x1C16DFC
	0x03DC8C08 MOV X0, X31
	0x03DC8C0C BL 0x3D47258
	0x03DC8C10 STR W0, [X19 + 0x64]
	0x03DC8C14 B 0x3DC8FD4
	0x03DC8C18 ADRP X8, 0x39D000
	0x03DC8C1C LDR X8, [X8 + 0x300]
	0x03DC8C20 MOV X0, X19
	0x03DC8C24 LDR X1, [X8]
	0x03DC8C28 BL 0x266C4BC
	0x03DC8C2C ADRP X8, 0x39C000
	0x03DC8C30 LDR X8, [X8 + 0x358]
	0x03DC8C34 MOV X19, X0
	0x03DC8C38 LDR X8, [X8]
	0x03DC8C3C LDR W9, [X8 + 0xE0]
	0x03DC8C40 CBNZ W9, 0x3DC8C4C
	0x03DC8C44 MOV X0, X8
	0x03DC8C48 BL 0x1C16DFC
	0x03DC8C4C MOV X0, X31
	0x03DC8C50 BL 0x3D472CC
	0x03DC8C54 STP S0, S1, [X19 + 0x68]
	0x03DC8C58 STP S2, S3, [X19 + 0x70]
	0x03DC8C5C B 0x3DC8FD4
	0x03DC8C60 ADRP X8, 0x39D000
	0x03DC8C64 LDR X8, [X8 + 0x300]
	0x03DC8C68 MOV X0, X19
	0x03DC8C6C LDR X1, [X8]
	0x03DC8C70 BL 0x266C4BC
	0x03DC8C74 ADRP X8, 0x39C000
	0x03DC8C78 LDR X8, [X8 + 0x358]
	0x03DC8C7C MOV X19, X0
	0x03DC8C80 LDR X8, [X8]
	0x03DC8C84 LDR W9, [X8 + 0xE0]
	0x03DC8C88 CBNZ W9, 0x3DC8C94
	0x03DC8C8C MOV X0, X8
	0x03DC8C90 BL 0x1C16DFC
	0x03DC8C94 MOV X0, X31
	0x03DC8C98 BL 0x3D47344
	0x03DC8C9C STR S0, [X19 + 0x78]
	0x03DC8CA0 B 0x3DC8FD4
	0x03DC8CA4 ADRP X8, 0x39D000
	0x03DC8CA8 LDR X8, [X8 + 0x300]
	0x03DC8CAC MOV X0, X19
	0x03DC8CB0 LDR X1, [X8]
	0x03DC8CB4 BL 0x266C4BC
	0x03DC8CB8 ADRP X8, 0x39C000
	0x03DC8CBC LDR X8, [X8 + 0x358]
	0x03DC8CC0 MOV X19, X0
	0x03DC8CC4 LDR X8, [X8]
	0x03DC8CC8 LDR W9, [X8 + 0xE0]
	0x03DC8CCC CBNZ W9, 0x3DC8CD8
	0x03DC8CD0 MOV X0, X8
	0x03DC8CD4 BL 0x1C16DFC
	0x03DC8CD8 MOV X0, X31
	0x03DC8CDC BL 0x3D47430
	0x03DC8CE0 STR W0, [X19 + 0x7C]
	0x03DC8CE4 B 0x3DC8FD4
	0x03DC8CE8 ADRP X8, 0x39D000
	0x03DC8CEC LDR X8, [X8 + 0x300]
	0x03DC8CF0 MOV X0, X19
	0x03DC8CF4 LDR X1, [X8]
	0x03DC8CF8 BL 0x266C4BC
	0x03DC8CFC ADRP X8, 0x39C000
	0x03DC8D00 LDR X8, [X8 + 0x358]
	0x03DC8D04 MOV X19, X0
	0x03DC8D08 LDR X8, [X8]
	0x03DC8D0C LDR W9, [X8 + 0xE0]
	0x03DC8D10 CBNZ W9, 0x3DC8D1C
	0x03DC8D14 MOV X0, X8
	0x03DC8D18 BL 0x1C16DFC
	0x03DC8D1C MOV X0, X31
	0x03DC8D20 BL 0x3D474A4
	0x03DC8D24 STR W0, [X19 + 0x80]
	0x03DC8D28 B 0x3DC8FD4
	0x03DC8D2C ADRP X8, 0x39D000
	0x03DC8D30 LDR X8, [X8 + 0x300]
	0x03DC8D34 MOV X0, X19
	0x03DC8D38 LDR X1, [X8]
	0x03DC8D3C BL 0x266C4BC
	0x03DC8D40 ADRP X8, 0x39C000
	0x03DC8D44 LDR X8, [X8 + 0x358]
	0x03DC8D48 MOV X19, X0
	0x03DC8D4C LDR X8, [X8]
	0x03DC8D50 LDR W9, [X8 + 0xE0]
	0x03DC8D54 CBNZ W9, 0x3DC8D60
	0x03DC8D58 MOV X0, X8
	0x03DC8D5C BL 0x1C16DFC
	0x03DC8D60 MOV X0, X31
	0x03DC8D64 BL 0x3D47590
	0x03DC8D68 STUR X0, [X19 + 0x84]
	0x03DC8D6C B 0x3DC8FD4
	0x03DC8D70 ADRP X8, 0x39D000
	0x03DC8D74 LDR X8, [X8 + 0x308]
	0x03DC8D78 ADD X0, X19, 0x10
	0x03DC8D7C LDR X1, [X8]
	0x03DC8D80 BL 0x266CDBC
	0x03DC8D84 ADRP X8, 0x39C000
	0x03DC8D88 LDR X8, [X8 + 0x358]
	0x03DC8D8C MOV X19, X0
	0x03DC8D90 LDR X8, [X8]
	0x03DC8D94 LDR W9, [X8 + 0xE0]
	0x03DC8D98 CBNZ W9, 0x3DC8DA4
	0x03DC8D9C MOV X0, X8
	0x03DC8DA0 BL 0x1C16DFC
	0x03DC8DA4 MOV X0, X31
	0x03DC8DA8 BL 0x3D468D4
	0x03DC8DAC STR W0, [X19 + 0x18]
	0x03DC8DB0 B 0x3DC8FD4
	0x03DC8DB4 ADRP X8, 0x39D000
	0x03DC8DB8 LDR X8, [X8 + 0x308]
	0x03DC8DBC ADD X0, X19, 0x10
	0x03DC8DC0 LDR X1, [X8]
	0x03DC8DC4 BL 0x266CDBC
	0x03DC8DC8 ADRP X8, 0x39C000
	0x03DC8DCC LDR X8, [X8 + 0x358]
	0x03DC8DD0 MOV X19, X0
	0x03DC8DD4 LDR X8, [X8]
	0x03DC8DD8 LDR W9, [X8 + 0xE0]
	0x03DC8DDC CBNZ W9, 0x3DC8DE8
	0x03DC8DE0 MOV X0, X8
	0x03DC8DE4 BL 0x1C16DFC
	0x03DC8DE8 MOV X0, X31
	0x03DC8DEC BL 0x3D46D38
	0x03DC8DF0 STP S0, S1, [X19 + 0x1C]
	0x03DC8DF4 STP S2, S3, [X19 + 0x24]
	0x03DC8DF8 B 0x3DC8FD4
	0x03DC8DFC ADRP X8, 0x39D000
	0x03DC8E00 LDR X8, [X8 + 0x308]
	0x03DC8E04 ADD X0, X19, 0x10
	0x03DC8E08 LDR X1, [X8]
	0x03DC8E0C BL 0x266CDBC
	0x03DC8E10 ADRP X8, 0x39C000
	0x03DC8E14 LDR X8, [X8 + 0x358]
	0x03DC8E18 MOV X19, X0
	0x03DC8E1C LDR X8, [X8]
	0x03DC8E20 LDR W9, [X8 + 0xE0]
	0x03DC8E24 CBNZ W9, 0x3DC8E30
	0x03DC8E28 MOV X0, X8
	0x03DC8E2C BL 0x1C16DFC
	0x03DC8E30 MOV X0, X31
	0x03DC8E34 BL 0x3D46F14
	0x03DC8E38 STR W0, [X19 + 0x2C]
	0x03DC8E3C B 0x3DC8FD4
	0x03DC8E40 ADRP X8, 0x39D000
	0x03DC8E44 LDR X8, [X8 + 0x308]
	0x03DC8E48 ADD X0, X19, 0x10
	0x03DC8E4C LDR X1, [X8]
	0x03DC8E50 BL 0x266CDBC
	0x03DC8E54 ADRP X8, 0x39C000
	0x03DC8E58 LDR X8, [X8 + 0x358]
	0x03DC8E5C MOV X19, X0
	0x03DC8E60 LDR X8, [X8]
	0x03DC8E64 LDR W9, [X8 + 0xE0]
	0x03DC8E68 CBNZ W9, 0x3DC8E74
	0x03DC8E6C MOV X0, X8
	0x03DC8E70 BL 0x1C16DFC
	0x03DC8E74 MOV X0, X31
	0x03DC8E78 BL 0x3D47000
	0x03DC8E7C STR W0, [X19 + 0x30]
	0x03DC8E80 B 0x3DC8FD4
	0x03DC8E84 ADRP X8, 0x39D000
	0x03DC8E88 LDR X8, [X8 + 0x308]
	0x03DC8E8C ADD X0, X19, 0x10
	0x03DC8E90 LDR X1, [X8]
	0x03DC8E94 BL 0x266CDBC
	0x03DC8E98 ADRP X8, 0x39C000
	0x03DC8E9C LDR X8, [X8 + 0x358]
	0x03DC8EA0 MOV X19, X0
	0x03DC8EA4 LDR X8, [X8]
	0x03DC8EA8 LDR W9, [X8 + 0xE0]
	0x03DC8EAC CBNZ W9, 0x3DC8EB8
	0x03DC8EB0 MOV X0, X8
	0x03DC8EB4 BL 0x1C16DFC
	0x03DC8EB8 MOV X0, X31
	0x03DC8EBC BL 0x3D47078
	0x03DC8EC0 STR W0, [X19 + 0x34]
	0x03DC8EC4 B 0x3DC8FD4
	0x03DC8EC8 ADRP X8, 0x39D000
	0x03DC8ECC LDR X8, [X8 + 0x308]
	0x03DC8ED0 ADD X0, X19, 0x10
	0x03DC8ED4 LDR X1, [X8]
	0x03DC8ED8 BL 0x266CDBC
	0x03DC8EDC ADRP X8, 0x39C000
	0x03DC8EE0 LDR X8, [X8 + 0x358]
	0x03DC8EE4 MOV X19, X0
	0x03DC8EE8 LDR X8, [X8]
	0x03DC8EEC LDR W9, [X8 + 0xE0]
	0x03DC8EF0 CBNZ W9, 0x3DC8EFC
	0x03DC8EF4 MOV X0, X8
	0x03DC8EF8 BL 0x1C16DFC
	0x03DC8EFC MOV X0, X31
	0x03DC8F00 BL 0x3D470F0
	0x03DC8F04 STR W0, [X19 + 0x38]
	0x03DC8F08 B 0x3DC8FD4
	0x03DC8F0C ADRP X8, 0x39D000
	0x03DC8F10 LDR X8, [X8 + 0x308]
	0x03DC8F14 ADD X0, X19, 0x10
	0x03DC8F18 LDR X1, [X8]
	0x03DC8F1C BL 0x266CDBC
	0x03DC8F20 ADRP X8, 0x39C000
	0x03DC8F24 LDR X8, [X8 + 0x358]
	0x03DC8F28 MOV X19, X0
	0x03DC8F2C LDR X8, [X8]
	0x03DC8F30 LDR W9, [X8 + 0xE0]
	0x03DC8F34 CBNZ W9, 0x3DC8F40
	0x03DC8F38 MOV X0, X8
	0x03DC8F3C BL 0x1C16DFC
	0x03DC8F40 MOV X0, X31
	0x03DC8F44 BL 0x3D47168
	0x03DC8F48 STR S0, [X19 + 0x3C]
	0x03DC8F4C B 0x3DC8FD4
	0x03DC8F50 ADRP X8, 0x39D000
	0x03DC8F54 LDR X8, [X8 + 0x308]
	0x03DC8F58 ADD X0, X19, 0x10
	0x03DC8F5C LDR X1, [X8]
	0x03DC8F60 BL 0x266CDBC
	0x03DC8F64 ADRP X8, 0x39C000
	0x03DC8F68 LDR X8, [X8 + 0x358]
	0x03DC8F6C MOV X19, X0
	0x03DC8F70 LDR X8, [X8]
	0x03DC8F74 LDR W9, [X8 + 0xE0]
	0x03DC8F78 CBNZ W9, 0x3DC8F84
	0x03DC8F7C MOV X0, X8
	0x03DC8F80 BL 0x1C16DFC
	0x03DC8F84 MOV X0, X31
	0x03DC8F88 BL 0x3D471E0
	0x03DC8F8C STR W0, [X19 + 0x40]
	0x03DC8F90 B 0x3DC8FD4
	0x03DC8F94 ADRP X8, 0x39D000
	0x03DC8F98 LDR X8, [X8 + 0x308]
	0x03DC8F9C ADD X0, X19, 0x10
	0x03DC8FA0 LDR X1, [X8]
	0x03DC8FA4 BL 0x266CDBC
	0x03DC8FA8 ADRP X8, 0x39C000
	0x03DC8FAC LDR X8, [X8 + 0x358]
	0x03DC8FB0 MOV X19, X0
	0x03DC8FB4 LDR X8, [X8]
	0x03DC8FB8 LDR W9, [X8 + 0xE0]
	0x03DC8FBC CBNZ W9, 0x3DC8FC8
	0x03DC8FC0 MOV X0, X8
	0x03DC8FC4 BL 0x1C16DFC
	0x03DC8FC8 MOV X0, X31
	0x03DC8FCC BL 0x3D473B8
	0x03DC8FD0 STR W0, [X19 + 0x44]
	0x03DC8FD4 LDP X20, X19, [X31 + 0x60]
	0x03DC8FD8 LDP X22, X21, [X31 + 0x50]
	0x03DC8FDC LDP X30, X23, [X31 + 0x40]
	0x03DC8FE0 ADD X31, X31, 0x70
	0x03DC8FE4 RET
	0x03DC8FE8 STP X30, X21, [X31 - 0x20]!
	0x03DC8FEC STP X20, X19, [X31 + 0x10]
	0x03DC8FF0 ADRP X21, 0x620000
	0x03DC8FF4 LDRB W8, [X21 + 0x14B]
	0x03DC8FF8 MOV X20, X1
	0x03DC8FFC MOV X19, X0
	0x03DC9000 TBNZ X8, 0x0, 0x3DC9024
	0x03DC9004 ADRP X0, 0x3A0000
	0x03DC9008 LDR X0, [X0 + 0x268]
	0x03DC900C BL 0x1C16CF4
	0x03DC9010 ADRP X0, 0x3A0000
	0x03DC9014 LDR X0, [X0 + 0x270]
	0x03DC9018 BL 0x1C16CF4
	0x03DC901C MOVZ W8, 0x1
	0x03DC9020 STRB W8, [X21 + 0x14B]
	0x03DC9024 CBZ X20, 0x3DC9090
	0x03DC9028 LDR X0, [X20 + 0x48]
	0x03DC902C CBZ X0, 0x3DC9090
	0x03DC9030 MOV X1, X31
	0x03DC9034 BL 0x3E064E4
	0x03DC9038 LDR X8, [X19 + 0x38]
	0x03DC903C CBZ X8, 0x3DC9084
	0x03DC9040 ADRP X9, 0x3A0000
	0x03DC9044 LDR X9, [X9 + 0x268]
	0x03DC9048 MOV X20, X0
	0x03DC904C MOV X0, X8
	0x03DC9050 MOV X1, X20
	0x03DC9054 LDR X2, [X9]
	0x03DC9058 BL 0x2AB7CE4
	0x03DC905C TBZ X0, 0x0, 0x3DC9084
	0x03DC9060 LDR X0, [X19 + 0x38]
	0x03DC9064 CBZ X0, 0x3DC9090
	0x03DC9068 ADRP X8, 0x3A0000
	0x03DC906C LDR X8, [X8 + 0x270]
	0x03DC9070 MOV X1, X20
	0x03DC9074 LDP X20, X19, [X31 + 0x10]
	0x03DC9078 LDR X2, [X8]
	0x03DC907C LDP X30, X21, [X31], #0x20
	0x03DC9080 B 0x2AB8F28
	0x03DC9084 LDP X20, X19, [X31 + 0x10]
	0x03DC9088 LDP X30, X21, [X31], #0x20
	0x03DC908C RET
	0x03DC9090 BL 0x1C16F20
	0x03DC9094 STR X30, [X31 - 0x30]!
	0x03DC9098 STP X22, X21, [X31 + 0x10]
	0x03DC909C STP X20, X19, [X31 + 0x20]
	0x03DC90A0 ADRP X21, 0x61F000
	0x03DC90A4 LDRB W8, [X21 + 0x14C]
	0x03DC90A8 MOV X20, X1
	0x03DC90AC MOV X19, X0
	0x03DC90B0 TBNZ X8, 0x0, 0x3DC90E0
	0x03DC90B4 ADRP X0, 0x3A0000
	0x03DC90B8 LDR X0, [X0 + 0x278]
	0x03DC90BC BL 0x1C16CF4
	0x03DC90C0 ADRP X0, 0x3A0000
	0x03DC90C4 LDR X0, [X0 + 0x280]
	0x03DC90C8 BL 0x1C16CF4
	0x03DC90CC ADRP X0, 0x3A0000
	0x03DC90D0 LDR X0, [X0 + 0x288]
	0x03DC90D4 BL 0x1C16CF4
	0x03DC90D8 MOVZ W8, 0x1
	0x03DC90DC STRB W8, [X21 + 0x14C]
	0x03DC90E0 CBZ X20, 0x3DC917C
	0x03DC90E4 LDR V0, [X20 + 0x58]
	0x03DC90E8 LDR X8, [X19 + 0x38]
	0x03DC90EC STR S0, [X19 + 0x48]
	0x03DC90F0 CBNZ X8, 0x3DC911C
	0x03DC90F4 ADRP X8, 0x3A0000
	0x03DC90F8 LDR X8, [X8 + 0x288]
	0x03DC90FC LDR X0, [X8]
	0x03DC9100 BL 0x1C16F10
	0x03DC9104 ADRP X8, 0x3A0000
	0x03DC9108 LDR X8, [X8 + 0x278]
	0x03DC910C MOV X21, X0
	0x03DC9110 LDR X1, [X8]
	0x03DC9114 BL 0x2AB7240
	0x03DC9118 STR X21, [X19 + 0x38]
	0x03DC911C LDR X22, [X20 + 0x48]
	0x03DC9120 MOV X0, X20
	0x03DC9124 MOV W1, W31
	0x03DC9128 MOV X2, X31
	0x03DC912C BL 0x3D4979C
	0x03DC9130 CBZ X22, 0x3DC917C
	0x03DC9134 LDR X19, [X19 + 0x38]
	0x03DC9138 MOV X20, X0
	0x03DC913C MOV X21, X1
	0x03DC9140 MOV X0, X22
	0x03DC9144 MOV X1, X31
	0x03DC9148 BL 0x3E064E4
	0x03DC914C CBZ X19, 0x3DC917C
	0x03DC9150 ADRP X8, 0x3A0000
	0x03DC9154 LDR X8, [X8 + 0x280]
	0x03DC9158 MOV X1, X0
	0x03DC915C MOV X0, X19
	0x03DC9160 MOV X2, X20
	0x03DC9164 LDR X4, [X8]
	0x03DC9168 MOV X3, X21
	0x03DC916C LDP X20, X19, [X31 + 0x20]
	0x03DC9170 LDP X22, X21, [X31 + 0x10]
	0x03DC9174 LDR X30, [X31], #0x30
	0x03DC9178 B 0x2AB7ACC
	0x03DC917C BL 0x1C16F20
	0x03DC9180 STP X30, X21, [X31 - 0x20]!
	0x03DC9184 STP X20, X19, [X31 + 0x10]
	0x03DC9188 ADRP X20, 0x61F000
	0x03DC918C ADRP X21, 0x39B000
	0x03DC9190 LDRB W8, [X20 + 0x14D]
	0x03DC9194 LDR X21, [X21 + 0x358]
	0x03DC9198 MOV X19, X0
	0x03DC919C TBNZ X8, 0x0, 0x3DC91B4
	0x03DC91A0 ADRP X0, 0x39B000
	0x03DC91A4 LDR X0, [X0 + 0x358]
	0x03DC91A8 BL 0x1C16CF4
	0x03DC91AC MOVZ W8, 0x1
	0x03DC91B0 STRB W8, [X20 + 0x14D]
	0x03DC91B4 LDR X0, [X21]
	0x03DC91B8 LDR W8, [X0 + 0xE0]
	0x03DC91BC CBNZ W8, 0x3DC91C4
	0x03DC91C0 BL 0x1C16DFC
	0x03DC91C4 MOV X0, X31
	0x03DC91C8 BL 0x3D440C4
	0x03DC91CC MOV X1, X0
	0x03DC91D0 MOV X0, X19
	0x03DC91D4 LDP X20, X19, [X31 + 0x10]
	0x03DC91D8 LDP X30, X21, [X31], #0x20
	0x03DC91DC B 0x3DC91E0
	0x03DC91E0 STP X30, X27, [X31 - 0x50]!
	0x03DC91E4 STP X26, X25, [X31 + 0x10]
	0x03DC91E8 STP X24, X23, [X31 + 0x20]
	0x03DC91EC STP X22, X21, [X31 + 0x30]
	0x03DC91F0 STP X20, X19, [X31 + 0x40]
	0x03DC91F4 ADRP X27, 0x61F000
	0x03DC91F8 ADRP X26, 0x3A0000
	0x03DC91FC ADRP X25, 0x3A0000
	0x03DC9200 ADRP X24, 0x3A0000
	0x03DC9204 ADRP X23, 0x3A0000
	0x03DC9208 ADRP X22, 0x3A0000
	0x03DC920C ADRP X21, 0x3A0000
	0x03DC9210 LDR X26, [X26 + 0x290]
	0x03DC9214 LDRB W8, [X27 + 0x1A4]
	0x03DC9218 LDR X25, [X25 + 0x298]
	0x03DC921C LDR X24, [X24 + 0x2A0]
	0x03DC9220 LDR X23, [X23 + 0x2A8]
	0x03DC9224 LDR X22, [X22 + 0x2B0]
	0x03DC9228 LDR X21, [X21 + 0x2B8]
	0x03DC922C MOV X20, X1
	0x03DC9230 MOV X19, X0
	0x03DC9234 TBNZ X8, 0x0, 0x3DC9288
	0x03DC9238 ADRP X0, 0x3A0000
	0x03DC923C LDR X0, [X0 + 0x298]
	0x03DC9240 BL 0x1C16CF4
	0x03DC9244 ADRP X0, 0x3A0000
	0x03DC9248 LDR X0, [X0 + 0x2A0]
	0x03DC924C BL 0x1C16CF4
	0x03DC9250 ADRP X0, 0x3A0000
	0x03DC9254 LDR X0, [X0 + 0x2A8]
	0x03DC9258 BL 0x1C16CF4
	0x03DC925C ADRP X0, 0x3A0000
	0x03DC9260 LDR X0, [X0 + 0x290]
	0x03DC9264 BL 0x1C16CF4
	0x03DC9268 ADRP X0, 0x3A0000
	0x03DC926C LDR X0, [X0 + 0x2B8]
	0x03DC9270 BL 0x1C16CF4
	0x03DC9274 ADRP X0, 0x3A0000
	0x03DC9278 LDR X0, [X0 + 0x2B0]
	0x03DC927C BL 0x1C16CF4
	0x03DC9280 MOVZ W8, 0x1
	0x03DC9284 STRB W8, [X27 + 0x1A4]
	0x03DC9288 LDR X1, [X20]
	0x03DC928C LDR X2, [X26]
	0x03DC9290 MOV X0, X19
	0x03DC9294 BL 0x266C3C4
	0x03DC9298 LDR X1, [X20 + 0x8]
	0x03DC929C LDR X2, [X25]
	0x03DC92A0 ADD X0, X19, 0x8
	0x03DC92A4 BL 0x266C844
	0x03DC92A8 LDR X1, [X20 + 0x10]
	0x03DC92AC LDR X2, [X24]
	0x03DC92B0 ADD X0, X19, 0x10
	0x03DC92B4 BL 0x266CCC4
	0x03DC92B8 LDR X1, [X20 + 0x18]
	0x03DC92BC LDR X2, [X23]
	0x03DC92C0 ADD X0, X19, 0x18
	0x03DC92C4 BL 0x266D144
	0x03DC92C8 LDR X1, [X20 + 0x20]
	0x03DC92CC LDR X2, [X22]
	0x03DC92D0 ADD X0, X19, 0x20
	0x03DC92D4 BL 0x266D5C4
	0x03DC92D8 LDR X1, [X20 + 0x28]
	0x03DC92DC LDR X2, [X21]
	0x03DC92E0 ADD X0, X19, 0x28
	0x03DC92E4 BL 0x266DA3C
	0x03DC92E8 LDR X8, [X20 + 0x30]
	0x03DC92EC LDP X22, X21, [X31 + 0x30]
	0x03DC92F0 LDP X24, X23, [X31 + 0x20]
	0x03DC92F4 LDP X26, X25, [X31 + 0x10]
	0x03DC92F8 STR X8, [X19 + 0x30]
	0x03DC92FC LDR X8, [X20 + 0x38]
	0x03DC9300 STR X8, [X19 + 0x38]
	0x03DC9304 LDR X8, [X20 + 0x40]
	0x03DC9308 STR X8, [X19 + 0x40]
	0x03DC930C LDR V0, [X20 + 0x48]
	0x03DC9310 STR S0, [X19 + 0x48]
	0x03DC9314 LDR X8, [X20 + 0x50]
	0x03DC9318 STR X8, [X19 + 0x50]
	0x03DC931C LDP X20, X19, [X31 + 0x40]
	0x03DC9320 LDP X30, X27, [X31], #0x50
	0x03DC9324 RET
	0x03DC9328 STR X31, [X0 + 0x50]
	0x03DC932C RET
	0x03DC9330 SUB X31, X31, 0x150
	0x03DC9334 STR X29, [X31 + 0x100]
	0x03DC9338 STP X30, X25, [X31 + 0x110]
	0x03DC933C STP X24, X23, [X31 + 0x120]
	0x03DC9340 STP X22, X21, [X31 + 0x130]
	0x03DC9344 STP X20, X19, [X31 + 0x140]
	0x03DC9348 ADRP X25, 0x61F000
	0x03DC934C LDRB W8, [X25 + 0x14E]
	0x03DC9350 MOV X20, X5
	0x03DC9354 MOV W21, W4
	0x03DC9358 MOV W22, W3
	0x03DC935C MOV X23, X2
	0x03DC9360 MOV X24, X1
	0x03DC9364 MOV X19, X0
	0x03DC9368 TBNZ X8, 0x0, 0x3DC9398
	0x03DC936C ADRP X0, 0x354000
	0x03DC9370 LDR X0, [X0 + 0xED0]
	0x03DC9374 BL 0x1C16CF4
	0x03DC9378 ADRP X0, 0x39B000
	0x03DC937C LDR X0, [X0 + 0x358]
	0x03DC9380 BL 0x1C16CF4
	0x03DC9384 ADRP X0, 0x39C000
	0x03DC9388 LDR X0, [X0 + 0x378]
	0x03DC938C BL 0x1C16CF4
	0x03DC9390 MOVZ W8, 0x1
	0x03DC9394 STRB W8, [X25 + 0x14E]
	0x03DC9398 MOV X0, X23
	0x03DC939C MOV X1, X31
	0x03DC93A0 BL 0x3DFF6E8
	0x03DC93A4 CMP W0, 0x4
	0x03DC93A8 B.NE 0x3DC93D4
	0x03DC93AC ADRP X8, 0x39B000
	0x03DC93B0 LDR X8, [X8 + 0x358]
	0x03DC93B4 LDR X0, [X8]
	0x03DC93B8 LDR W8, [X0 + 0xE0]
	0x03DC93BC CBNZ W8, 0x3DC93C4
	0x03DC93C0 BL 0x1C16DFC
	0x03DC93C4 ADD X8, X31, 0xE0
	0x03DC93C8 MOV X0, X31
	0x03DC93CC BL 0x3D46CB0
	0x03DC93D0 B 0x3DC93E4
	0x03DC93D4 ADD X8, X31, 0xE0
	0x03DC93D8 MOV X0, X23
	0x03DC93DC MOV X1, X31
	0x03DC93E0 BL 0x3DFF600
	0x03DC93E4 LDR V0, [X31 + 0xE]
	0x03DC93E8 LDR X8, [X31 + 0xF0]
	0x03DC93EC STR V0, [X31 + 0x8]
	0x03DC93F0 LDR V0, [X31 + 0x8]
	0x03DC93F4 STR X8, [X31 + 0x90]
	0x03DC93F8 STR X8, [X31 + 0xB0]
	0x03DC93FC STR V0, [X31 + 0xA]
	0x03DC9400 CBZ X19, 0x3DC9564
	0x03DC9404 ADRP X25, 0x39C000
	0x03DC9408 LDR X25, [X25 + 0x378]
	0x03DC940C MOV X0, X19
	0x03DC9410 MOV X1, X31
	0x03DC9414 BL 0x3DE89D4
	0x03DC9418 LDR X1, [X25]
	0x03DC941C MOV X23, X0
	0x03DC9420 ADD X0, X24, 0x18
	0x03DC9424 BL 0x266D220
	0x03DC9428 LDUR X8, [X0 + 0x4C]
	0x03DC942C LDUR V0, [X0 + 0x3C]
	0x03DC9430 LDR V1, [X31 + 0xA]
	0x03DC9434 LDR X9, [X31 + 0xB0]
	0x03DC9438 STR X8, [X31 + 0x70]
	0x03DC943C STR V0, [X31 + 0x6]
	0x03DC9440 STR V1, [X31 + 0x4]
	0x03DC9444 STR X9, [X31 + 0x50]
	0x03DC9448 CBZ X23, 0x3DC9564
	0x03DC944C LDR V0, [X31 + 0x6]
	0x03DC9450 LDR X8, [X31 + 0x70]
	0x03DC9454 LDR V1, [X31 + 0x4]
	0x03DC9458 LDR X9, [X31 + 0x50]
	0x03DC945C STR V0, [X31 + 0x2]
	0x03DC9460 STR X8, [X31 + 0x30]
	0x03DC9464 STR V1, [X31]
	0x03DC9468 STR X9, [X31 + 0x10]
	0x03DC946C ADRP X10, 0x354000
	0x03DC9470 LDR X8, [X23]
	0x03DC9474 LDR X10, [X10 + 0xED0]
	0x03DC9478 LDRH W9, [X8 + 0x12E]
	0x03DC947C LDR X1, [X10]
	0x03DC9480 CBZ X9, 0x3DC94A4
	0x03DC9484 LDR X10, [X8 + 0xB0]
	0x03DC9488 ADD X10, X10, 0x8
	0x03DC948C LDUR X11, [X10 - 0x8]
	0x03DC9490 CMP X11, X1
	0x03DC9494 B.EQ 0x3DC94B4
	0x03DC9498 SUBS X9, X9, 0x1
	0x03DC949C ADD X10, X10, 0x10
	0x03DC94A0 B.NE 0x3DC948C
	0x03DC94A4 MOVZ W2, 0xA
	0x03DC94A8 MOV X0, X23
	0x03DC94AC BL 0x1C5C788
	0x03DC94B0 B 0x3DC94C4
	0x03DC94B4 LDR W9, [X10]
	0x03DC94B8 ADD W9, W9, 0xA
	0x03DC94BC ADD X8, X8, W9, 0x4, SXTW
	0x03DC94C0 ADD X0, X8, 0x138
	0x03DC94C4 LDR V0, [X31 + 0x2]
	0x03DC94C8 LDR X9, [X31 + 0x30]
	0x03DC94CC LDR V1, [X31]
	0x03DC94D0 LDR X10, [X31 + 0x10]
	0x03DC94D4 LDR X8, [X0]
	0x03DC94D8 STR V0, [X31 + 0xE]
	0x03DC94DC STR X9, [X31 + 0xF0]
	0x03DC94E0 STR V1, [X31 + 0xC]
	0x03DC94E4 STR X10, [X31 + 0xD0]
	0x03DC94E8 LDR X7, [X0 + 0x8]
	0x03DC94EC MOVZ W1, 0x3
	0x03DC94F0 ADD X2, X31, 0xE0
	0x03DC94F4 ADD X3, X31, 0xC0
	0x03DC94F8 MOVK W1, 0x50000
	0x03DC94FC MOV X0, X23
	0x03DC9500 MOV W4, W22
	0x03DC9504 MOV W5, W21
	0x03DC9508 MOV X6, X20
	0x03DC950C BLR X8
	0x03DC9510 MOV W20, W0
	0x03DC9514 TBZ X0, 0x0, 0x3DC9544
	0x03DC9518 MOV X0, X19
	0x03DC951C MOV X1, X31
	0x03DC9520 BL 0x3DEC0D4
	0x03DC9524 TBNZ X0, 0x0, 0x3DC9544
	0x03DC9528 MOV X0, X19
	0x03DC952C MOV X1, X31
	0x03DC9530 BL 0x3DEC0D4
	0x03DC9534 ORR W1, W0, 0x1
	0x03DC9538 MOV X0, X19
	0x03DC953C MOV X2, X31
	0x03DC9540 BL 0x3DEC0FC
	0x03DC9544 AND W0, W20, 0x1
	0x03DC9548 LDP X20, X19, [X31 + 0x140]
	0x03DC954C LDP X22, X21, [X31 + 0x130]
	0x03DC9550 LDP X24, X23, [X31 + 0x120]
	0x03DC9554 LDP X30, X25, [X31 + 0x110]
	0x03DC9558 LDR X29, [X31 + 0x100]
	0x03DC955C ADD X31, X31, 0x150
	0x03DC9560 RET
	0x03DC9564 BL 0x1C16F20
	0x03DC9568 STP X30, X21, [X31 - 0x20]!
	0x03DC956C STP X20, X19, [X31 + 0x10]
	0x03DC9570 ADRP X21, 0x61F000
	0x03DC9574 ADRP X20, 0x39C000
	0x03DC9578 LDRB W8, [X21 + 0x152]
	0x03DC957C LDR X20, [X20 + 0x360]
	0x03DC9580 MOV X19, X0
	0x03DC9584 TBNZ X8, 0x0, 0x3DC959C
	0x03DC9588 ADRP X0, 0x39C000
	0x03DC958C LDR X0, [X0 + 0x360]
	0x03DC9590 BL 0x1C16CF4
	0x03DC9594 MOVZ W8, 0x1
	0x03DC9598 STRB W8, [X21 + 0x152]
	0x03DC959C LDR X1, [X20]
	0x03DC95A0 ADD X0, X19, 0x28
	0x03DC95A4 BL 0x266DB18
	0x03DC95A8 LDP S0, S1, [X0]
	0x03DC95AC LDP S2, S3, [X0 + 0x8]
	0x03DC95B0 LDP X20, X19, [X31 + 0x10]
	0x03DC95B4 LDP X30, X21, [X31], #0x20
	0x03DC95B8 RET
	0x03DC95BC STR X30, [X31 - 0x30]!
	0x03DC95C0 STP X22, X21, [X31 + 0x10]
	0x03DC95C4 STP X20, X19, [X31 + 0x20]
	0x03DC95C8 ADRP X22, 0x61F000
	0x03DC95CC ADRP X21, 0x39C000
	0x03DC95D0 MOV X19, X8
	0x03DC95D4 LDRB W8, [X22 + 0x153]
	0x03DC95D8 LDR X21, [X21 + 0x360]
	0x03DC95DC MOV X20, X0
	0x03DC95E0 TBNZ X8, 0x0, 0x3DC95F8
	0x03DC95E4 ADRP X0, 0x39C000
	0x03DC95E8 LDR X0, [X0 + 0x360]
	0x03DC95EC BL 0x1C16CF4
	0x03DC95F0 MOVZ W8, 0x1
	0x03DC95F4 STRB W8, [X22 + 0x153]
	0x03DC95F8 LDR X1, [X21]
	0x03DC95FC ADD X0, X20, 0x28
	0x03DC9600 BL 0x266DB18
	0x03DC9604 LDP V0, V1, [X0 + 0x10]
	0x03DC9608 LDP X22, X21, [X31 + 0x10]
	0x03DC960C STP V0, V1, [X19]
	0x03DC9610 LDP X20, X19, [X31 + 0x20]
	0x03DC9614 LDR X30, [X31], #0x30
	0x03DC9618 RET
	0x03DC961C STP X30, X21, [X31 - 0x20]!
	0x03DC9620 STP X20, X19, [X31 + 0x10]
	0x03DC9624 ADRP X21, 0x61F000
	0x03DC9628 ADRP X20, 0x39C000
	0x03DC962C LDRB W8, [X21 + 0x154]
	0x03DC9630 LDR X20, [X20 + 0x360]
	0x03DC9634 MOV X19, X0
	0x03DC9638 TBNZ X8, 0x0, 0x3DC9650
	0x03DC963C ADRP X0, 0x39C000
	0x03DC9640 LDR X0, [X0 + 0x360]
	0x03DC9644 BL 0x1C16CF4
	0x03DC9648 MOVZ W8, 0x1
	0x03DC964C STRB W8, [X21 + 0x154]
	0x03DC9650 LDR X1, [X20]
	0x03DC9654 ADD X0, X19, 0x28
	0x03DC9658 BL 0x266DB18
	0x03DC965C LDR X8, [X0 + 0x30]
	0x03DC9660 LDR W1, [X0 + 0x38]
	0x03DC9664 LDP X20, X19, [X31 + 0x10]
	0x03DC9668 MOV X0, X8
	0x03DC966C LDP X30, X21, [X31], #0x20
	0x03DC9670 RET
	0x03DC9674 STP X30, X21, [X31 - 0x20]!
	0x03DC9678 STP X20, X19, [X31 + 0x10]
	0x03DC967C ADRP X21, 0x61F000
	0x03DC9680 ADRP X20, 0x39C000
	0x03DC9684 LDRB W8, [X21 + 0x155]
	0x03DC9688 LDR X20, [X20 + 0x360]
	0x03DC968C MOV X19, X0
	0x03DC9690 TBNZ X8, 0x0, 0x3DC96A8
	0x03DC9694 ADRP X0, 0x39C000
	0x03DC9698 LDR X0, [X0 + 0x360]
	0x03DC969C BL 0x1C16CF4
	0x03DC96A0 MOVZ W8, 0x1
	0x03DC96A4 STRB W8, [X21 + 0x155]
	0x03DC96A8 LDR X1, [X20]
	0x03DC96AC ADD X0, X19, 0x28
	0x03DC96B0 BL 0x266DB18
	0x03DC96B4 LDUR X8, [X0 + 0x3C]
	0x03DC96B8 LDR W1, [X0 + 0x44]
	0x03DC96BC LDP X20, X19, [X31 + 0x10]
	0x03DC96C0 MOV X0, X8
	0x03DC96C4 LDP X30, X21, [X31], #0x20
	0x03DC96C8 RET
	0x03DC96CC STP X30, X21, [X31 - 0x20]!
	0x03DC96D0 STP X20, X19, [X31 + 0x10]
	0x03DC96D4 ADRP X21, 0x61F000
	0x03DC96D8 ADRP X20, 0x39C000
	0x03DC96DC LDRB W8, [X21 + 0x156]
	0x03DC96E0 LDR X20, [X20 + 0x360]
	0x03DC96E4 MOV X19, X0
	0x03DC96E8 TBNZ X8, 0x0, 0x3DC9700
	0x03DC96EC ADRP X0, 0x39C000
	0x03DC96F0 LDR X0, [X0 + 0x360]
	0x03DC96F4 BL 0x1C16CF4
	0x03DC96F8 MOVZ W8, 0x1
	0x03DC96FC STRB W8, [X21 + 0x156]
	0x03DC9700 LDR X1, [X20]
	0x03DC9704 ADD X0, X19, 0x28
	0x03DC9708 BL 0x266DB18
	0x03DC970C LDR X0, [X0 + 0x48]
	0x03DC9710 LDP X20, X19, [X31 + 0x10]
	0x03DC9714 LDP X30, X21, [X31], #0x20
	0x03DC9718 RET
	0x03DC971C STR X30, [X31 - 0x30]!
	0x03DC9720 STP X22, X21, [X31 + 0x10]
	0x03DC9724 STP X20, X19, [X31 + 0x20]
	0x03DC9728 ADRP X22, 0x61F000
	0x03DC972C ADRP X21, 0x39C000
	0x03DC9730 MOV X19, X8
	0x03DC9734 LDRB W8, [X22 + 0x157]
	0x03DC9738 LDR X21, [X21 + 0x360]
	0x03DC973C MOV X20, X0
	0x03DC9740 TBNZ X8, 0x0, 0x3DC9758
	0x03DC9744 ADRP X0, 0x39C000
	0x03DC9748 LDR X0, [X0 + 0x360]
	0x03DC974C BL 0x1C16CF4
	0x03DC9750 MOVZ W8, 0x1
	0x03DC9754 STRB W8, [X22 + 0x157]
	0x03DC9758 LDR X1, [X21]
	0x03DC975C ADD X0, X20, 0x28
	0x03DC9760 BL 0x266DB18
	0x03DC9764 LDR V0, [X0 + 0x5]
	0x03DC9768 LDR W8, [X0 + 0x60]
	0x03DC976C LDP X22, X21, [X31 + 0x10]
	0x03DC9770 STR V0, [X19]
	0x03DC9774 STR W8, [X19 + 0x10]
	0x03DC9778 LDP X20, X19, [X31 + 0x20]
	0x03DC977C LDR X30, [X31], #0x30
	0x03DC9780 RET
	0x03DC9784 STP X30, X21, [X31 - 0x20]!
	0x03DC9788 STP X20, X19, [X31 + 0x10]
	0x03DC978C ADRP X21, 0x61F000
	0x03DC9790 ADRP X20, 0x39C000
	0x03DC9794 LDRB W8, [X21 + 0x158]
	0x03DC9798 LDR X20, [X20 + 0x360]
	0x03DC979C MOV X19, X0
	0x03DC97A0 TBNZ X8, 0x0, 0x3DC97B8
	0x03DC97A4 ADRP X0, 0x39C000
	0x03DC97A8 LDR X0, [X0 + 0x360]
	0x03DC97AC BL 0x1C16CF4
	0x03DC97B0 MOVZ W8, 0x1
	0x03DC97B4 STRB W8, [X21 + 0x158]
	0x03DC97B8 LDR X1, [X20]
	0x03DC97BC ADD X0, X19, 0x28
	0x03DC97C0 BL 0x266DB18
	0x03DC97C4 LDP S0, S1, [X0 + 0x64]
	0x03DC97C8 LDP S2, S3, [X0 + 0x6C]
	0x03DC97CC LDP X20, X19, [X31 + 0x10]
	0x03DC97D0 LDP X30, X21, [X31], #0x20
	0x03DC97D4 RET
	0x03DC97D8 STP X30, X21, [X31 - 0x20]!
	0x03DC97DC STP X20, X19, [X31 + 0x10]
	0x03DC97E0 ADRP X21, 0x61F000
	0x03DC97E4 ADRP X20, 0x39C000
	0x03DC97E8 LDRB W8, [X21 + 0x159]
	0x03DC97EC LDR X20, [X20 + 0x360]
	0x03DC97F0 MOV X19, X0
	0x03DC97F4 TBNZ X8, 0x0, 0x3DC980C
	0x03DC97F8 ADRP X0, 0x39C000
	0x03DC97FC LDR X0, [X0 + 0x360]
	0x03DC9800 BL 0x1C16CF4
	0x03DC9804 MOVZ W8, 0x1
	0x03DC9808 STRB W8, [X21 + 0x159]
	0x03DC980C LDR X1, [X20]
	0x03DC9810 ADD X0, X19, 0x28
	0x03DC9814 BL 0x266DB18
	0x03DC9818 LDUR X0, [X0 + 0x74]
	0x03DC981C LDP X20, X19, [X31 + 0x10]
	0x03DC9820 LDP X30, X21, [X31], #0x20
	0x03DC9824 RET
	0x03DC9828 STP X30, X21, [X31 - 0x20]!
	0x03DC982C STP X20, X19, [X31 + 0x10]
	0x03DC9830 ADRP X21, 0x61F000
	0x03DC9834 ADRP X20, 0x39C000
	0x03DC9838 LDRB W8, [X21 + 0x15A]
	0x03DC983C LDR X20, [X20 + 0x360]
	0x03DC9840 MOV X19, X0
	0x03DC9844 TBNZ X8, 0x0, 0x3DC985C
	0x03DC9848 ADRP X0, 0x39C000
	0x03DC984C LDR X0, [X0 + 0x360]
	0x03DC9850 BL 0x1C16CF4
	0x03DC9854 MOVZ W8, 0x1
	0x03DC9858 STRB W8, [X21 + 0x15A]
	0x03DC985C LDR X1, [X20]
	0x03DC9860 ADD X0, X19, 0x28
	0x03DC9864 BL 0x266DB18
	0x03DC9868 LDUR X0, [X0 + 0x7C]
	0x03DC986C LDP X20, X19, [X31 + 0x10]
	0x03DC9870 LDP X30, X21, [X31], #0x20
	0x03DC9874 RET
	0x03DC9878 STP X30, X21, [X31 - 0x20]!
	0x03DC987C STP X20, X19, [X31 + 0x10]
	0x03DC9880 ADRP X21, 0x61F000
	0x03DC9884 ADRP X20, 0x39C000
	0x03DC9888 LDRB W8, [X21 + 0x15C]
	0x03DC988C LDR X20, [X20 + 0x360]
	0x03DC9890 MOV X19, X0
	0x03DC9894 TBNZ X8, 0x0, 0x3DC98AC
	0x03DC9898 ADRP X0, 0x39C000
	0x03DC989C LDR X0, [X0 + 0x360]
	0x03DC98A0 BL 0x1C16CF4
	0x03DC98A4 MOVZ W8, 0x1
	0x03DC98A8 STRB W8, [X21 + 0x15C]
	0x03DC98AC LDR X1, [X20]
	0x03DC98B0 ADD X0, X19, 0x28
	0x03DC98B4 BL 0x266DB18
	0x03DC98B8 LDP S0, S1, [X0 + 0x84]
	0x03DC98BC LDP S2, S3, [X0 + 0x8C]
	0x03DC98C0 LDP X20, X19, [X31 + 0x10]
	0x03DC98C4 LDP X30, X21, [X31], #0x20
	0x03DC98C8 RET
	0x03DC98CC STP X30, X21, [X31 - 0x20]!
	0x03DC98D0 STP X20, X19, [X31 + 0x10]
	0x03DC98D4 ADRP X21, 0x61F000
	0x03DC98D8 ADRP X20, 0x39C000
	0x03DC98DC LDRB W8, [X21 + 0x15E]
	0x03DC98E0 LDR X20, [X20 + 0x360]
	0x03DC98E4 MOV X19, X0
	0x03DC98E8 TBNZ X8, 0x0, 0x3DC9900
	0x03DC98EC ADRP X0, 0x39C000
	0x03DC98F0 LDR X0, [X0 + 0x360]
	0x03DC98F4 BL 0x1C16CF4
	0x03DC98F8 MOVZ W8, 0x1
	0x03DC98FC STRB W8, [X21 + 0x15E]
	0x03DC9900 LDR X1, [X20]
	0x03DC9904 ADD X0, X19, 0x28
	0x03DC9908 BL 0x266DB18
	0x03DC990C LDP S0, S1, [X0 + 0x94]
	0x03DC9910 LDP S2, S3, [X0 + 0x9C]
	0x03DC9914 LDP X20, X19, [X31 + 0x10]
	0x03DC9918 LDP X30, X21, [X31], #0x20
	0x03DC991C RET
	0x03DC9920 STP X30, X21, [X31 - 0x20]!
	0x03DC9924 STP X20, X19, [X31 + 0x10]
	0x03DC9928 ADRP X21, 0x61F000
	0x03DC992C ADRP X20, 0x39C000
	0x03DC9930 LDRB W8, [X21 + 0x160]
	0x03DC9934 LDR X20, [X20 + 0x360]
	0x03DC9938 MOV X19, X0
	0x03DC993C TBNZ X8, 0x0, 0x3DC9954
	0x03DC9940 ADRP X0, 0x39C000
	0x03DC9944 LDR X0, [X0 + 0x360]
	0x03DC9948 BL 0x1C16CF4
	0x03DC994C MOVZ W8, 0x1
	0x03DC9950 STRB W8, [X21 + 0x160]
	0x03DC9954 LDR X1, [X20]
	0x03DC9958 ADD X0, X19, 0x28
	0x03DC995C BL 0x266DB18
	0x03DC9960 LDP S0, S1, [X0 + 0xA4]
	0x03DC9964 LDP S2, S3, [X0 + 0xAC]
	0x03DC9968 LDP X20, X19, [X31 + 0x10]
	0x03DC996C LDP X30, X21, [X31], #0x20
	0x03DC9970 RET
	0x03DC9974 STP X30, X21, [X31 - 0x20]!
	0x03DC9978 STP X20, X19, [X31 + 0x10]
	0x03DC997C ADRP X21, 0x61F000
	0x03DC9980 ADRP X20, 0x39C000
	0x03DC9984 LDRB W8, [X21 + 0x161]
	0x03DC9988 LDR X20, [X20 + 0x360]
	0x03DC998C MOV X19, X0
	0x03DC9990 TBNZ X8, 0x0, 0x3DC99A8
	0x03DC9994 ADRP X0, 0x39C000
	0x03DC9998 LDR X0, [X0 + 0x360]
	0x03DC999C BL 0x1C16CF4
	0x03DC99A0 MOVZ W8, 0x1
	0x03DC99A4 STRB W8, [X21 + 0x161]
	0x03DC99A8 LDR X1, [X20]
	0x03DC99AC ADD X0, X19, 0x28
	0x03DC99B0 BL 0x266DB18
	0x03DC99B4 LDUR X0, [X0 + 0xB4]
	0x03DC99B8 LDP X20, X19, [X31 + 0x10]
	0x03DC99BC LDP X30, X21, [X31], #0x20
	0x03DC99C0 RET
	0x03DC99C4 STP X30, X21, [X31 - 0x20]!
	0x03DC99C8 STP X20, X19, [X31 + 0x10]
	0x03DC99CC ADRP X21, 0x61F000
	0x03DC99D0 ADRP X20, 0x39C000
	0x03DC99D4 LDRB W8, [X21 + 0x162]
	0x03DC99D8 LDR X20, [X20 + 0x360]
	0x03DC99DC MOV X19, X0
	0x03DC99E0 TBNZ X8, 0x0, 0x3DC99F8
	0x03DC99E4 ADRP X0, 0x39C000
	0x03DC99E8 LDR X0, [X0 + 0x360]
	0x03DC99EC BL 0x1C16CF4
	0x03DC99F0 MOVZ W8, 0x1
	0x03DC99F4 STRB W8, [X21 + 0x162]
	0x03DC99F8 LDR X1, [X20]
	0x03DC99FC ADD X0, X19, 0x28
	0x03DC9A00 BL 0x266DB18
	0x03DC9A04 LDUR X0, [X0 + 0xBC]
	0x03DC9A08 LDP X20, X19, [X31 + 0x10]
	0x03DC9A0C LDP X30, X21, [X31], #0x20
	0x03DC9A10 RET
	0x03DC9A14 STP X30, X21, [X31 - 0x20]!
	0x03DC9A18 STP X20, X19, [X31 + 0x10]
	0x03DC9A1C ADRP X20, 0x61F000
	0x03DC9A20 ADRP X21, 0x39C000
	0x03DC9A24 LDRB W8, [X20 + 0x165]
	0x03DC9A28 LDR X21, [X21 + 0x368]
	0x03DC9A2C MOV X19, X0
	0x03DC9A30 TBNZ X8, 0x0, 0x3DC9A48
	0x03DC9A34 ADRP X0, 0x39C000
	0x03DC9A38 LDR X0, [X0 + 0x368]
	0x03DC9A3C BL 0x1C16CF4
	0x03DC9A40 MOVZ W8, 0x1
	0x03DC9A44 STRB W8, [X20 + 0x165]
	0x03DC9A48 LDR X1, [X21]
	0x03DC9A4C MOV X0, X19
	0x03DC9A50 BL 0x266C4A0
	0x03DC9A54 LDP S0, S1, [X0]
	0x03DC9A58 LDP S2, S3, [X0 + 0x8]
	0x03DC9A5C LDP X20, X19, [X31 + 0x10]
	0x03DC9A60 LDP X30, X21, [X31], #0x20
	0x03DC9A64 RET
	0x03DC9A68 STR X30, [X31 - 0x30]!
	0x03DC9A6C STP X22, X21, [X31 + 0x10]
	0x03DC9A70 STP X20, X19, [X31 + 0x20]
	0x03DC9A74 ADRP X22, 0x61F000
	0x03DC9A78 ADRP X21, 0x39C000
	0x03DC9A7C MOV X19, X8
	0x03DC9A80 LDRB W8, [X22 + 0x166]
	0x03DC9A84 LDR X21, [X21 + 0x370]
	0x03DC9A88 MOV X20, X0
	0x03DC9A8C TBNZ X8, 0x0, 0x3DC9AA4
	0x03DC9A90 ADRP X0, 0x39C000
	0x03DC9A94 LDR X0, [X0 + 0x370]
	0x03DC9A98 BL 0x1C16CF4
	0x03DC9A9C MOVZ W8, 0x1
	0x03DC9AA0 STRB W8, [X22 + 0x166]
	0x03DC9AA4 LDR X1, [X21]
	0x03DC9AA8 ADD X0, X20, 0x10
	0x03DC9AAC BL 0x266CDA0
	0x03DC9AB0 LDR V0, [X0]
	0x03DC9AB4 LDR X8, [X0 + 0x10]
	0x03DC9AB8 LDP X22, X21, [X31 + 0x10]
	0x03DC9ABC STR V0, [X19]
	0x03DC9AC0 STR X8, [X19 + 0x10]
	0x03DC9AC4 LDP X20, X19, [X31 + 0x20]
	0x03DC9AC8 LDR X30, [X31], #0x30
	0x03DC9ACC RET
	0x03DC9AD0 STP X30, X21, [X31 - 0x20]!
	0x03DC9AD4 STP X20, X19, [X31 + 0x10]
	0x03DC9AD8 ADRP X20, 0x61F000
	0x03DC9ADC ADRP X21, 0x39C000
	0x03DC9AE0 LDRB W8, [X20 + 0x171]
	0x03DC9AE4 LDR X21, [X21 + 0x368]
	0x03DC9AE8 MOV X19, X0
	0x03DC9AEC TBNZ X8, 0x0, 0x3DC9B04
	0x03DC9AF0 ADRP X0, 0x39C000
	0x03DC9AF4 LDR X0, [X0 + 0x368]
	0x03DC9AF8 BL 0x1C16CF4
	0x03DC9AFC MOVZ W8, 0x1
	0x03DC9B00 STRB W8, [X20 + 0x171]
	0x03DC9B04 LDR X1, [X21]
	0x03DC9B08 MOV X0, X19
	0x03DC9B0C BL 0x266C4A0
	0x03DC9B10 LDR X0, [X0 + 0x18]
	0x03DC9B14 LDP X20, X19, [X31 + 0x10]
	0x03DC9B18 LDP X30, X21, [X31], #0x20
	0x03DC9B1C RET
	0x03DC9B20 STP X30, X21, [X31 - 0x20]!
	0x03DC9B24 STP X20, X19, [X31 + 0x10]
	0x03DC9B28 ADRP X21, 0x61F000
	0x03DC9B2C ADRP X20, 0x39C000
	0x03DC9B30 LDRB W8, [X21 + 0x17A]
	0x03DC9B34 LDR X20, [X20 + 0x360]
	0x03DC9B38 MOV X19, X0
	0x03DC9B3C TBNZ X8, 0x0, 0x3DC9B54
	0x03DC9B40 ADRP X0, 0x39C000
	0x03DC9B44 LDR X0, [X0 + 0x360]
	0x03DC9B48 BL 0x1C16CF4
	0x03DC9B4C MOVZ W8, 0x1
	0x03DC9B50 STRB W8, [X21 + 0x17A]
	0x03DC9B54 LDR X1, [X20]
	0x03DC9B58 ADD X0, X19, 0x28
	0x03DC9B5C BL 0x266DB18
	0x03DC9B60 LDR V0, [X0 + 0xC4]
	0x03DC9B64 LDP X20, X19, [X31 + 0x10]
	0x03DC9B68 LDP X30, X21, [X31], #0x20
	0x03DC9B6C RET
	0x03DC9B70 STR X30, [X31 - 0x30]!
	0x03DC9B74 STP X22, X21, [X31 + 0x10]
	0x03DC9B78 STP X20, X19, [X31 + 0x20]
	0x03DC9B7C ADRP X22, 0x61F000
	0x03DC9B80 ADRP X21, 0x39C000
	0x03DC9B84 MOV X19, X8
	0x03DC9B88 LDRB W8, [X22 + 0x182]
	0x03DC9B8C LDR X21, [X21 + 0x378]
	0x03DC9B90 MOV X20, X0
	0x03DC9B94 TBNZ X8, 0x0, 0x3DC9BAC
	0x03DC9B98 ADRP X0, 0x39C000
	0x03DC9B9C LDR X0, [X0 + 0x378]
	0x03DC9BA0 BL 0x1C16CF4
	0x03DC9BA4 MOVZ W8, 0x1
	0x03DC9BA8 STRB W8, [X22 + 0x182]
	0x03DC9BAC LDR X1, [X21]
	0x03DC9BB0 ADD X0, X20, 0x18
	0x03DC9BB4 BL 0x266D220
	0x03DC9BB8 LDR V0, [X0]
	0x03DC9BBC LDR X8, [X0 + 0x10]
	0x03DC9BC0 LDP X22, X21, [X31 + 0x10]
	0x03DC9BC4 STR V0, [X19]
	0x03DC9BC8 STR X8, [X19 + 0x10]
	0x03DC9BCC LDP X20, X19, [X31 + 0x20]
	0x03DC9BD0 LDR X30, [X31], #0x30
	0x03DC9BD4 RET
	0x03DC9BD8 STP X30, X21, [X31 - 0x20]!
	0x03DC9BDC STP X20, X19, [X31 + 0x10]
	0x03DC9BE0 ADRP X21, 0x61F000
	0x03DC9BE4 ADRP X20, 0x39C000
	0x03DC9BE8 LDRB W8, [X21 + 0x183]
	0x03DC9BEC LDR X20, [X20 + 0x378]
	0x03DC9BF0 MOV X19, X0
	0x03DC9BF4 TBNZ X8, 0x0, 0x3DC9C0C
	0x03DC9BF8 ADRP X0, 0x39C000
	0x03DC9BFC LDR X0, [X0 + 0x378]
	0x03DC9C00 BL 0x1C16CF4
	0x03DC9C04 MOVZ W8, 0x1
	0x03DC9C08 STRB W8, [X21 + 0x183]
	0x03DC9C0C LDR X1, [X20]
	0x03DC9C10 ADD X0, X19, 0x18
	0x03DC9C14 BL 0x266D220
	0x03DC9C18 LDP X8, X1, [X0 + 0x18]
	0x03DC9C1C LDP X20, X19, [X31 + 0x10]
	0x03DC9C20 MOV X0, X8
	0x03DC9C24 LDP X30, X21, [X31], #0x20
	0x03DC9C28 RET
	0x03DC9C2C STP X30, X21, [X31 - 0x20]!
	0x03DC9C30 STP X20, X19, [X31 + 0x10]
	0x03DC9C34 ADRP X21, 0x61F000
	0x03DC9C38 ADRP X20, 0x39C000
	0x03DC9C3C LDRB W8, [X21 + 0x184]
	0x03DC9C40 LDR X20, [X20 + 0x370]
	0x03DC9C44 MOV X19, X0
	0x03DC9C48 TBNZ X8, 0x0, 0x3DC9C60
	0x03DC9C4C ADRP X0, 0x39C000
	0x03DC9C50 LDR X0, [X0 + 0x370]
	0x03DC9C54 BL 0x1C16CF4
	0x03DC9C58 MOVZ W8, 0x1
	0x03DC9C5C STRB W8, [X21 + 0x184]
	0x03DC9C60 LDR X1, [X20]
	0x03DC9C64 ADD X0, X19, 0x10
	0x03DC9C68 BL 0x266CDA0
	0x03DC9C6C LDR W0, [X0 + 0x18]
	0x03DC9C70 LDP X20, X19, [X31 + 0x10]
	0x03DC9C74 LDP X30, X21, [X31], #0x20
	0x03DC9C78 RET
	0x03DC9C7C STR X30, [X31 - 0x30]!
	0x03DC9C80 STP X22, X21, [X31 + 0x10]
	0x03DC9C84 STP X20, X19, [X31 + 0x20]
	0x03DC9C88 ADRP X21, 0x61F000
	0x03DC9C8C ADRP X22, 0x39C000
	0x03DC9C90 MOV X19, X8
	0x03DC9C94 LDRB W8, [X21 + 0x185]
	0x03DC9C98 LDR X22, [X22 + 0x368]
	0x03DC9C9C MOV X20, X0
	0x03DC9CA0 TBNZ X8, 0x0, 0x3DC9CB8
	0x03DC9CA4 ADRP X0, 0x39C000
	0x03DC9CA8 LDR X0, [X0 + 0x368]
	0x03DC9CAC BL 0x1C16CF4
	0x03DC9CB0 MOVZ W8, 0x1
	0x03DC9CB4 STRB W8, [X21 + 0x185]
	0x03DC9CB8 LDR X1, [X22]
	0x03DC9CBC MOV X0, X20
	0x03DC9CC0 BL 0x266C4A0
	0x03DC9CC4 LDR V0, [X0 + 0x2]
	0x03DC9CC8 LDUR V1, [X0 + 0x2C]
	0x03DC9CCC LDP X22, X21, [X31 + 0x10]
	0x03DC9CD0 STR V0, [X19]
	0x03DC9CD4 STUR V1, [X19 + 0xC]
	0x03DC9CD8 LDP X20, X19, [X31 + 0x20]
	0x03DC9CDC LDR X30, [X31], #0x30
	0x03DC9CE0 RET
	0x03DC9CE4 STR X30, [X31 - 0x30]!
	0x03DC9CE8 STP X22, X21, [X31 + 0x10]
	0x03DC9CEC STP X20, X19, [X31 + 0x20]
	0x03DC9CF0 ADRP X22, 0x61F000
	0x03DC9CF4 ADRP X21, 0x39C000
	0x03DC9CF8 MOV X19, X8
	0x03DC9CFC LDRB W8, [X22 + 0x187]
	0x03DC9D00 LDR X21, [X21 + 0x378]
	0x03DC9D04 MOV X20, X0
	0x03DC9D08 TBNZ X8, 0x0, 0x3DC9D20
	0x03DC9D0C ADRP X0, 0x39C000
	0x03DC9D10 LDR X0, [X0 + 0x378]
	0x03DC9D14 BL 0x1C16CF4
	0x03DC9D18 MOVZ W8, 0x1
	0x03DC9D1C STRB W8, [X22 + 0x187]
	0x03DC9D20 LDR X1, [X21]
	0x03DC9D24 ADD X0, X20, 0x18
	0x03DC9D28 BL 0x266D220
	0x03DC9D2C LDUR V0, [X0 + 0x28]
	0x03DC9D30 LDR W8, [X0 + 0x38]
	0x03DC9D34 LDP X22, X21, [X31 + 0x10]
	0x03DC9D38 STR V0, [X19]
	0x03DC9D3C STR W8, [X19 + 0x10]
	0x03DC9D40 LDP X20, X19, [X31 + 0x20]
	0x03DC9D44 LDR X30, [X31], #0x30
	0x03DC9D48 RET
	0x03DC9D4C STP X30, X21, [X31 - 0x20]!
	0x03DC9D50 STP X20, X19, [X31 + 0x10]
	0x03DC9D54 ADRP X21, 0x61F000
	0x03DC9D58 ADRP X20, 0x39C000
	0x03DC9D5C LDRB W8, [X21 + 0x188]
	0x03DC9D60 LDR X20, [X20 + 0x380]
	0x03DC9D64 MOV X19, X0
	0x03DC9D68 TBNZ X8, 0x0, 0x3DC9D80
	0x03DC9D6C ADRP X0, 0x39C000
	0x03DC9D70 LDR X0, [X0 + 0x380]
	0x03DC9D74 BL 0x1C16CF4
	0x03DC9D78 MOVZ W8, 0x1
	0x03DC9D7C STRB W8, [X21 + 0x188]
	0x03DC9D80 LDR X1, [X20]
	0x03DC9D84 ADD X0, X19, 0x20
	0x03DC9D88 BL 0x266D6A0
	0x03DC9D8C LDR X0, [X0]
	0x03DC9D90 LDP X20, X19, [X31 + 0x10]
	0x03DC9D94 LDP X30, X21, [X31], #0x20
	0x03DC9D98 RET
	0x03DC9D9C STP X30, X21, [X31 - 0x20]!
	0x03DC9DA0 STP X20, X19, [X31 + 0x10]
	0x03DC9DA4 ADRP X21, 0x61F000
	0x03DC9DA8 ADRP X20, 0x39C000
	0x03DC9DAC LDRB W8, [X21 + 0x189]
	0x03DC9DB0 LDR X20, [X20 + 0x380]
	0x03DC9DB4 MOV X19, X0
	0x03DC9DB8 TBNZ X8, 0x0, 0x3DC9DD0
	0x03DC9DBC ADRP X0, 0x39C000
	0x03DC9DC0 LDR X0, [X0 + 0x380]
	0x03DC9DC4 BL 0x1C16CF4
	0x03DC9DC8 MOVZ W8, 0x1
	0x03DC9DCC STRB W8, [X21 + 0x189]
	0x03DC9DD0 LDR X1, [X20]
	0x03DC9DD4 ADD X0, X19, 0x20
	0x03DC9DD8 BL 0x266D6A0
	0x03DC9DDC LDR X0, [X0 + 0x8]
	0x03DC9DE0 LDP X20, X19, [X31 + 0x10]
	0x03DC9DE4 LDP X30, X21, [X31], #0x20
	0x03DC9DE8 RET
	0x03DC9DEC STP X30, X21, [X31 - 0x20]!
	0x03DC9DF0 STP X20, X19, [X31 + 0x10]
	0x03DC9DF4 ADRP X21, 0x61F000
	0x03DC9DF8 ADRP X20, 0x39C000
	0x03DC9DFC LDRB W8, [X21 + 0x18A]
	0x03DC9E00 LDR X20, [X20 + 0x380]
	0x03DC9E04 MOV X19, X0
	0x03DC9E08 TBNZ X8, 0x0, 0x3DC9E20
	0x03DC9E0C ADRP X0, 0x39C000
	0x03DC9E10 LDR X0, [X0 + 0x380]
	0x03DC9E14 BL 0x1C16CF4
	0x03DC9E18 MOVZ W8, 0x1
	0x03DC9E1C STRB W8, [X21 + 0x18A]
	0x03DC9E20 LDR X1, [X20]
	0x03DC9E24 ADD X0, X19, 0x20
	0x03DC9E28 BL 0x266D6A0
	0x03DC9E2C LDR X0, [X0 + 0x10]
	0x03DC9E30 LDP X20, X19, [X31 + 0x10]
	0x03DC9E34 LDP X30, X21, [X31], #0x20
	0x03DC9E38 RET
	0x03DC9E3C STP X30, X21, [X31 - 0x20]!
	0x03DC9E40 STP X20, X19, [X31 + 0x10]
	0x03DC9E44 ADRP X21, 0x61F000
	0x03DC9E48 ADRP X20, 0x39C000
	0x03DC9E4C LDRB W8, [X21 + 0x18B]
	0x03DC9E50 LDR X20, [X20 + 0x380]
	0x03DC9E54 MOV X19, X0
	0x03DC9E58 TBNZ X8, 0x0, 0x3DC9E70
	0x03DC9E5C ADRP X0, 0x39C000
	0x03DC9E60 LDR X0, [X0 + 0x380]
	0x03DC9E64 BL 0x1C16CF4
	0x03DC9E68 MOVZ W8, 0x1
	0x03DC9E6C STRB W8, [X21 + 0x18B]
	0x03DC9E70 LDR X1, [X20]
	0x03DC9E74 ADD X0, X19, 0x20
	0x03DC9E78 BL 0x266D6A0
	0x03DC9E7C LDR X0, [X0 + 0x18]
	0x03DC9E80 LDP X20, X19, [X31 + 0x10]
	0x03DC9E84 LDP X30, X21, [X31], #0x20
	0x03DC9E88 RET
	0x03DC9E8C STR X30, [X31 - 0x30]!
	0x03DC9E90 STP X22, X21, [X31 + 0x10]
	0x03DC9E94 STP X20, X19, [X31 + 0x20]
	0x03DC9E98 ADRP X22, 0x61F000
	0x03DC9E9C ADRP X21, 0x39C000
	0x03DC9EA0 MOV X19, X8
	0x03DC9EA4 LDRB W8, [X22 + 0x18C]
	0x03DC9EA8 LDR X21, [X21 + 0x378]
	0x03DC9EAC MOV X20, X0
	0x03DC9EB0 TBNZ X8, 0x0, 0x3DC9EC8
	0x03DC9EB4 ADRP X0, 0x39C000
	0x03DC9EB8 LDR X0, [X0 + 0x378]
	0x03DC9EBC BL 0x1C16CF4
	0x03DC9EC0 MOVZ W8, 0x1
	0x03DC9EC4 STRB W8, [X22 + 0x18C]
	0x03DC9EC8 LDR X1, [X21]
	0x03DC9ECC ADD X0, X20, 0x18
	0x03DC9ED0 BL 0x266D220
	0x03DC9ED4 LDUR V0, [X0 + 0x3C]
	0x03DC9ED8 LDUR X8, [X0 + 0x4C]
	0x03DC9EDC LDP X22, X21, [X31 + 0x10]
	0x03DC9EE0 STR V0, [X19]
	0x03DC9EE4 STR X8, [X19 + 0x10]
	0x03DC9EE8 LDP X20, X19, [X31 + 0x20]
	0x03DC9EEC LDR X30, [X31], #0x30
	0x03DC9EF0 RET
	0x03DC9EF4 STP X30, X21, [X31 - 0x20]!
	0x03DC9EF8 STP X20, X19, [X31 + 0x10]
	0x03DC9EFC ADRP X21, 0x61F000
	0x03DC9F00 ADRP X20, 0x39C000
	0x03DC9F04 LDRB W8, [X21 + 0x18D]
	0x03DC9F08 LDR X20, [X20 + 0x370]
	0x03DC9F0C MOV X19, X0
	0x03DC9F10 TBNZ X8, 0x0, 0x3DC9F28
	0x03DC9F14 ADRP X0, 0x39C000
	0x03DC9F18 LDR X0, [X0 + 0x370]
	0x03DC9F1C BL 0x1C16CF4
	0x03DC9F20 MOVZ W8, 0x1
	0x03DC9F24 STRB W8, [X21 + 0x18D]
	0x03DC9F28 LDR X1, [X20]
	0x03DC9F2C ADD X0, X19, 0x10
	0x03DC9F30 BL 0x266CDA0
	0x03DC9F34 LDP S0, S1, [X0 + 0x1C]
	0x03DC9F38 LDP S2, S3, [X0 + 0x24]
	0x03DC9F3C LDP X20, X19, [X31 + 0x10]
	0x03DC9F40 LDP X30, X21, [X31], #0x20
	0x03DC9F44 RET
	0x03DC9F48 STP X30, X21, [X31 - 0x20]!
	0x03DC9F4C STP X20, X19, [X31 + 0x10]
	0x03DC9F50 ADRP X20, 0x61F000
	0x03DC9F54 ADRP X21, 0x39C000
	0x03DC9F58 LDRB W8, [X20 + 0x18E]
	0x03DC9F5C LDR X21, [X21 + 0x368]
	0x03DC9F60 MOV X19, X0
	0x03DC9F64 TBNZ X8, 0x0, 0x3DC9F7C
	0x03DC9F68 ADRP X0, 0x39C000
	0x03DC9F6C LDR X0, [X0 + 0x368]
	0x03DC9F70 BL 0x1C16CF4
	0x03DC9F74 MOVZ W8, 0x1
	0x03DC9F78 STRB W8, [X20 + 0x18E]
	0x03DC9F7C LDR X1, [X21]
	0x03DC9F80 MOV X0, X19
	0x03DC9F84 BL 0x266C4A0
	0x03DC9F88 LDR X0, [X0 + 0x40]
	0x03DC9F8C LDP X20, X19, [X31 + 0x10]
	0x03DC9F90 LDP X30, X21, [X31], #0x20
	0x03DC9F94 RET
	0x03DC9F98 STP X30, X21, [X31 - 0x20]!
	0x03DC9F9C STP X20, X19, [X31 + 0x10]
	0x03DC9FA0 ADRP X20, 0x61F000
	0x03DC9FA4 ADRP X21, 0x39C000
	0x03DC9FA8 LDRB W8, [X20 + 0x18F]
	0x03DC9FAC LDR X21, [X21 + 0x368]
	0x03DC9FB0 MOV X19, X0
	0x03DC9FB4 TBNZ X8, 0x0, 0x3DC9FCC
	0x03DC9FB8 ADRP X0, 0x39C000
	0x03DC9FBC LDR X0, [X0 + 0x368]
	0x03DC9FC0 BL 0x1C16CF4
	0x03DC9FC4 MOVZ W8, 0x1
	0x03DC9FC8 STRB W8, [X20 + 0x18F]
	0x03DC9FCC LDR X1, [X21]
	0x03DC9FD0 MOV X0, X19
	0x03DC9FD4 BL 0x266C4A0
	0x03DC9FD8 LDP X8, X1, [X0 + 0x48]
	0x03DC9FDC LDP X20, X19, [X31 + 0x10]
	0x03DC9FE0 MOV X0, X8
	0x03DC9FE4 LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X21, 0x621000
	009 Move W8, [X21+450]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {57}
	016 Move X0, 0x32C000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x39D000
	020 Move X0, [X0+856]
	021 Call 0x1C17CF4
	022 Move X0, 0x39E000
	023 Move X0, [X0+776]
	024 Call 0x1C17CF4
	025 Move X0, 0x39E000
	026 Move X0, [X0+768]
	027 Call 0x1C17CF4
	028 Move X0, 0x39E000
	029 Move X0, [X0+792]
	030 Call 0x1C17CF4
	031 Move X0, 0x39E000
	032 Move X0, [X0+784]
	033 Call 0x1C17CF4
	034 Move X0, 0x39E000
	035 Move X0, [X0+760]
	036 Call 0x1C17CF4
	037 Move X0, 0x39E000
	038 Move X0, [X0+752]
	039 Call 0x1C17CF4
	040 Move X0, 0x39F000
	041 Move X0, [X0+1192]
	042 Call 0x1C17CF4
	043 Move X0, 0x39E000
	044 Move X0, [X0+912]
	045 Call 0x1C17CF4
	046 Move X0, 0x39E000
	047 Move X0, [X0+920]
	048 Call 0x1C17CF4
	049 Move X0, 0x39E000
	050 Move X0, [X0+928]
	051 Call 0x1C17CF4
	052 Move X0, 0x3A2000
	053 Move X0, [X0+608]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X21+450], W8
	057 Move W8, 9
	058 NotImplemented "Instruction MOVK not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W8, 3
	061 NotImplemented "Instruction MOVK not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract W8, W20, 0x70000
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X9, -52621312
	066 Add X9, X9, 258
	067 NotImplemented "Instruction ADR not yet implemented."
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Add X10, X10, X11
	070 CallNoReturn X10
	071 Move X8, 0x39E000
	072 Move X8, [X8+760]
	073 Add X0, X19, 40
	074 Move X1, [X8]
	075 Call StyleDataRef`1<VisualData>.Write, X0
	076 Move X8, 0x39D000
	077 Move X8, [X8+856]
	078 Move X19, X0
	079 Move X8, [X8]
	080 Move W9, [X8+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X8
	084 Call 0x1C17DFC
	085 Move X0, X31
	086 Call InitialStyle.get_backgroundColor
	087 Subtract W8, W20, 0x20000
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X9, -52621312
	090 Add X9, X9, 134
	091 NotImplemented "Instruction ADR not yet implemented."
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Add X10, X10, X11
	094 CallNoReturn X10
	095 Move X8, 0x39E000
	096 Move X8, [X8+752]
	097 Add X0, X19, 8
	098 Move X1, [X8]
	099 Call StyleDataRef`1<LayoutData>.Write, X0
	100 Move X8, 0x39D000
	101 Move X8, [X8+856]
	102 Move X19, X0
	103 Move X8, [X8]
	104 Move W9, [X8+224]
	105 Compare W9, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X8
	108 Call 0x1C17DFC
	109 Move X0, X31
	110 Call InitialStyle.get_alignContent
	111 Move [X19], W0
	112 Subtract W8, W20, 0x40000
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X9, -52621312
	115 Add X9, X9, 220
	116 NotImplemented "Instruction ADR not yet implemented."
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Add X10, X10, X11
	119 CallNoReturn X10
	120 Move X21, 0x39E000
	121 Move X21, [X21+760]
	122 Add X19, X19, 40
	123 Move X0, X19
	124 Move X1, [X21]
	125 Call StyleDataRef`1<VisualData>.Write, X0
	126 Move X8, 0x39D000
	127 Move X8, [X8+856]
	128 Move X20, X0
	129 Move X8, [X8]
	130 Move W9, [X8+224]
	131 Compare W9, 0
	132 JumpIfNotEqual {135}
	133 Move X0, X8
	134 Call 0x1C17DFC
	135 Move X0, X31
	136 Call InitialStyle.get_backgroundPositionX
	137 Move [X20+48], X0
	138 Move [X20+56], W1
	139 Move X1, [X21]
	140 Move X0, X19
	141 Call StyleDataRef`1<VisualData>.Write, X0
	142 Move X19, X0
	143 Subtract W8, W20, 0x10000
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X9, -52621312
	146 Add X9, X9, 106
	147 NotImplemented "Instruction ADR not yet implemented."
	148 NotImplemented "Instruction LDRH not yet implemented."
	149 Add X10, X10, X11
	150 CallNoReturn X10
	151 Move X8, 0x39E000
	152 Move X8, [X8+768]
	153 Move X0, X19
	154 Move X1, [X8]
	155 Call 0x266D4BC, X0
	156 Move X8, 0x39D000
	157 Move X8, [X8+856]
	158 Move X19, X0
	159 Move X8, [X8]
	160 Move W9, [X8+224]
	161 Compare W9, 0
	162 JumpIfNotEqual {165}
	163 Move X0, X8
	164 Call 0x1C17DFC
	165 Move X0, X31
	166 Call InitialStyle.get_color
	167 Move [X19], S0
	168 Move [X19+8], S1
	169 Move [X19+8], S2
	170 Move [X19+16], S3
	171 Subtract W8, W20, 0x30000
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X9, -52621312
	174 Add X9, X9, 200
	175 NotImplemented "Instruction ADR not yet implemented."
	176 NotImplemented "Instruction LDRH not yet implemented."
	177 Add X10, X10, X11
	178 CallNoReturn X10
	179 Move X8, 0x39E000
	180 Move X8, [X8+776]
	181 Add X0, X19, 16
	182 Move X1, [X8]
	183 Call StyleDataRef`1<RareData>.Write, X0
	184 Move X8, 0x39D000
	185 Move X8, [X8+856]
	186 Move X19, X0
	187 Move X8, [X8]
	188 Move W9, [X8+224]
	189 Compare W9, 0
	190 JumpIfNotEqual {193}
	191 Move X0, X8
	192 Call 0x1C17DFC
	193 Add X8, X31, 0
	194 Move X0, X31
	195 Call InitialStyle.get_cursor
	196 Subtract W8, W20, 0x50000
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X9, -52621312
	199 Add X9, X9, 242
	200 NotImplemented "Instruction ADR not yet implemented."
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Add X10, X10, X11
	203 CallNoReturn X10
	204 Move X8, 0x39E000
	205 Move X8, [X8+784]
	206 Add X0, X19, 24
	207 Move X1, [X8]
	208 Call StyleDataRef`1<TransformData>.Write, X0
	209 Move X8, 0x39D000
	210 Move X8, [X8+856]
	211 Move X19, X0
	212 Move X8, [X8]
	213 Move W9, [X8+224]
	214 Compare W9, 0
	215 JumpIfNotEqual {218}
	216 Move X0, X8
	217 Call 0x1C17DFC
	218 Add X8, X31, 0
	219 Move X0, X31
	220 Call InitialStyle.get_rotate
	221 Move X8, [X31+16]
	222 Move V0, [X31]
	223 Move [X31+48], X8
	224 Move [X31+2], V0
	225 Move [X19+16], X8
	226 Move [X19], V0
	227 Subtract W8, W20, 0x60000
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X9, -52621312
	230 Add X9, X9, 250
	231 NotImplemented "Instruction ADR not yet implemented."
	232 NotImplemented "Instruction LDRH not yet implemented."
	233 Add X10, X10, X11
	234 CallNoReturn X10
	235 Move X8, 0x39E000
	236 Move X8, [X8+792]
	237 Add X0, X19, 32
	238 Move X1, [X8]
	239 Call StyleDataRef`1<TransitionData>.Write, X0
	240 Move X9, 0x39D000
	241 Move X9, [X9+856]
	242 Move X8, X0
	243 Move X20, [X8]
	244 Move X0, [X9]
	245 Move W9, [X0+224]
	246 Compare W9, 0
	247 JumpIfNotEqual {249}
	248 Call 0x1C17DFC
	249 Move X0, X31
	250 Call InitialStyle.get_transitionDelay
	251 Move X8, 0x39F000
	252 Move X8, [X8+1192]
	253 Add X1, X31, 32
	254 Move [X31+32], W20
	255 Move X0, [X8]
	256 Call 0x1C17E04
	257 Move X8, 0x3A2000
	258 Move X8, [X8+608]
	259 Move X1, X0
	260 Move X2, X31
	261 Move X8, [X8]
	262 Move X0, X8
	263 Call String.Format, X0, X1
	264 Move X8, 0x32C000
	265 Move X8, [X8+2600]
	266 Move X19, X0
	267 Move X8, [X8]
	268 Move W9, [X8+224]
	269 Compare W9, 0
	270 JumpIfNotEqual {273}
	271 Move X0, X8
	272 Call 0x1C17DFC
	273 Move X0, X19
	274 Move X1, X31
	275 Call Debug.LogAssertion, X0
	276 Move X21, 0x39E000
	277 Move X21, [X21+760]
	278 Add X19, X19, 40
	279 Move X0, X19
	280 Move X1, [X21]
	281 Call StyleDataRef`1<VisualData>.Write, X0
	282 Move X8, 0x39D000
	283 Move X8, [X8+856]
	284 Move X20, X0
	285 Move X8, [X8]
	286 Move W9, [X8+224]
	287 Compare W9, 0
	288 JumpIfNotEqual {291}
	289 Move X0, X8
	290 Call 0x1C17DFC
	291 Move X0, X31
	292 Call InitialStyle.get_borderTopColor
	293 Move [X20+164], S0
	294 Move [X20+172], S1
	295 Move [X20+172], S2
	296 Move [X20+180], S3
	297 Move X1, [X21]
	298 Move X0, X19
	299 Call StyleDataRef`1<VisualData>.Write, X0
	300 Move X20, X0
	301 Move X0, X31
	302 Call InitialStyle.get_borderRightColor
	303 Move [X20+148], S0
	304 Move [X20+156], S1
	305 Move [X20+156], S2
	306 Move [X20+164], S3
	307 Move X1, [X21]
	308 Move X0, X19
	309 Call StyleDataRef`1<VisualData>.Write, X0
	310 Move X20, X0
	311 Move X0, X31
	312 Call InitialStyle.get_borderBottomColor
	313 Move [X20+100], S0
	314 Move [X20+108], S1
	315 Move [X20+108], S2
	316 Move [X20+116], S3
	317 Move X1, [X21]
	318 Move X0, X19
	319 Call StyleDataRef`1<VisualData>.Write, X0
	320 Move X19, X0
	321 Move X21, 0x39E000
	322 Move X21, [X21+760]
	323 Add X19, X19, 40
	324 Move X0, X19
	325 Move X1, [X21]
	326 Call StyleDataRef`1<VisualData>.Write, X0
	327 Move X8, 0x39D000
	328 Move X8, [X8+856]
	329 Move X20, X0
	330 Move X8, [X8]
	331 Move W9, [X8+224]
	332 Compare W9, 0
	333 JumpIfNotEqual {336}
	334 Move X0, X8
	335 Call 0x1C17DFC
	336 Move X0, X31
	337 Call InitialStyle.get_borderTopLeftRadius
	338 Move [X20+180], X0
	339 Move X1, [X21]
	340 Move X0, X19
	341 Call StyleDataRef`1<VisualData>.Write, X0
	342 Move X20, X0
	343 Move X0, X31
	344 Call InitialStyle.get_borderTopRightRadius
	345 Move [X20+188], X0
	346 Move X1, [X21]
	347 Move X0, X19
	348 Call StyleDataRef`1<VisualData>.Write, X0
	349 Move X20, X0
	350 Move X0, X31
	351 Call InitialStyle.get_borderBottomRightRadius
	352 Move [X20+124], X0
	353 Move X1, [X21]
	354 Move X0, X19
	355 Call StyleDataRef`1<VisualData>.Write, X0
	356 Move X19, X0
	357 Move X21, 0x39E000
	358 Move X21, [X21+752]
	359 Add X19, X19, 8
	360 Move X0, X19
	361 Move X1, [X21]
	362 Call StyleDataRef`1<LayoutData>.Write, X0
	363 Move X8, 0x39D000
	364 Move X8, [X8+856]
	365 Move X20, X0
	366 Move X8, [X8]
	367 Move W9, [X8+224]
	368 Compare W9, 0
	369 JumpIfNotEqual {372}
	370 Move X0, X8
	371 Call 0x1C17DFC
	372 Move X0, X31
	373 Call InitialStyle.get_borderTopWidth
	374 Move [X20+24], S0
	375 Move X1, [X21]
	376 Move X0, X19
	377 Call StyleDataRef`1<LayoutData>.Write, X0
	378 Move X20, X0
	379 Move X0, X31
	380 Call InitialStyle.get_borderRightWidth
	381 Move [X20+20], S0
	382 Move X1, [X21]
	383 Move X0, X19
	384 Call StyleDataRef`1<LayoutData>.Write, X0
	385 Move X20, X0
	386 Move X0, X31
	387 Call InitialStyle.get_borderBottomWidth
	388 Move [X20+12], S0
	389 Move X1, [X21]
	390 Move X0, X19
	391 Call StyleDataRef`1<LayoutData>.Write, X0
	392 Move X19, X0
	393 Move X21, 0x39E000
	394 Move X21, [X21+752]
	395 Add X19, X19, 8
	396 Move X0, X19
	397 Move X1, [X21]
	398 Call StyleDataRef`1<LayoutData>.Write, X0
	399 Move X8, 0x39D000
	400 Move X8, [X8+856]
	401 Move X20, X0
	402 Move X8, [X8]
	403 Move W9, [X8+224]
	404 Compare W9, 0
	405 JumpIfNotEqual {408}
	406 Move X0, X8
	407 Call 0x1C17DFC
	408 Move X0, X31
	409 Call InitialStyle.get_flexGrow
	410 Move [X20+52], S0
	411 Move X1, [X21]
	412 Move X0, X19
	413 Call StyleDataRef`1<LayoutData>.Write, X0
	414 Move X20, X0
	415 Move X0, X31
	416 Call InitialStyle.get_flexShrink
	417 Move [X20+56], S0
	418 Move X1, [X21]
	419 Move X0, X19
	420 Call StyleDataRef`1<LayoutData>.Write, X0
	421 Move X19, X0
	422 Move X21, 0x39E000
	423 Move X21, [X21+752]
	424 Add X19, X19, 8
	425 Move X0, X19
	426 Move X1, [X21]
	427 Call StyleDataRef`1<LayoutData>.Write, X0
	428 Move X8, 0x39D000
	429 Move X8, [X8+856]
	430 Move X20, X0
	431 Move X8, [X8]
	432 Move W9, [X8+224]
	433 Compare W9, 0
	434 JumpIfNotEqual {437}
	435 Move X0, X8
	436 Call 0x1C17DFC
	437 Move X0, X31
	438 Call InitialStyle.get_marginTop
	439 Move [X20+108], X0
	440 Move X1, [X21]
	441 Move X0, X19
	442 Call StyleDataRef`1<LayoutData>.Write, X0
	443 Move X20, X0
	444 Move X0, X31
	445 Call InitialStyle.get_marginRight
	446 Move [X20+100], X0
	447 Move X1, [X21]
	448 Move X0, X19
	449 Call StyleDataRef`1<LayoutData>.Write, X0
	450 Move X20, X0
	451 Move X0, X31
	452 Call InitialStyle.get_marginBottom
	453 Move [X20+84], X0
	454 Move X1, [X21]
	455 Move X0, X19
	456 Call StyleDataRef`1<LayoutData>.Write, X0
	457 Move X19, X0
	458 Move X21, 0x39E000
	459 Move X21, [X21+752]
	460 Add X19, X19, 8
	461 Move X0, X19
	462 Move X1, [X21]
	463 Call StyleDataRef`1<LayoutData>.Write, X0
	464 Move X8, 0x39D000
	465 Move X8, [X8+856]
	466 Move X20, X0
	467 Move X8, [X8]
	468 Move W9, [X8+224]
	469 Compare W9, 0
	470 JumpIfNotEqual {473}
	471 Move X0, X8
	472 Call 0x1C17DFC
	473 Move X0, X31
	474 Call InitialStyle.get_paddingTop
	475 Move [X20+172], X0
	476 Move X1, [X21]
	477 Move X0, X19
	478 Call StyleDataRef`1<LayoutData>.Write, X0
	479 Move X20, X0
	480 Move X0, X31
	481 Call InitialStyle.get_paddingRight
	482 Move [X20+164], X0
	483 Move X1, [X21]
	484 Move X0, X19
	485 Call StyleDataRef`1<LayoutData>.Write, X0
	486 Move X20, X0
	487 Move X0, X31
	488 Call InitialStyle.get_paddingBottom
	489 Move [X20+148], X0
	490 Move X1, [X21]
	491 Move X0, X19
	492 Call StyleDataRef`1<LayoutData>.Write, X0
	493 Move X19, X0
	494 Move X22, 0x39E000
	495 Move X22, [X22+792]
	496 Add X20, X19, 32
	497 Move X0, X20
	498 Move X1, [X22]
	499 Call StyleDataRef`1<TransitionData>.Write, X0
	500 Move X9, 0x39D000
	501 Move X9, [X9+856]
	502 Move X8, X0
	503 Move X21, [X8]
	504 Move X0, [X9]
	505 Move W9, [X0+224]
	506 Compare W9, 0
	507 JumpIfNotEqual {509}
	508 Call 0x1C17DFC
	509 Move X0, X31
	510 Call InitialStyle.get_transitionDelay
	511 Move X23, 0x39E000
	512 Move X23, [X23+928]
	513 Move X1, X0
	514 Move X0, X21
	515 Move X2, [X23]
	516 Call StyleValueExtensions.CopyFrom, X0, X1
	517 Move X1, [X22]
	518 Move X0, X20
	519 Call StyleDataRef`1<TransitionData>.Write, X0
	520 Move X21, [X0+8]
	521 Move X0, X31
	522 Call InitialStyle.get_transitionDuration
	523 Move X2, [X23]
	524 Move X1, X0
	525 Move X0, X21
	526 Call StyleValueExtensions.CopyFrom, X0, X1
	527 Move X1, [X22]
	528 Move X0, X20
	529 Call StyleDataRef`1<TransitionData>.Write, X0
	530 Move X21, [X0+16]
	531 Move X0, X31
	532 Call InitialStyle.get_transitionProperty
	533 Move X8, 0x39E000
	534 Move X8, [X8+920]
	535 Move X1, X0
	536 Move X0, X21
	537 Move X2, [X8]
	538 Call StyleValueExtensions.CopyFrom, X0, X1
	539 Move X1, [X22]
	540 Move X0, X20
	541 Call StyleDataRef`1<TransitionData>.Write, X0
	542 Move X20, [X0+24]
	543 Move X21, 0x39E000
	544 Move X21, [X21+760]
	545 Add X19, X19, 40
	546 Move X0, X19
	547 Move X1, [X21]
	548 Call StyleDataRef`1<VisualData>.Write, X0
	549 Move X8, 0x39D000
	550 Move X8, [X8+856]
	551 Move X20, X0
	552 Move X8, [X8]
	553 Move W9, [X8+224]
	554 Compare W9, 0
	555 JumpIfNotEqual {558}
	556 Move X0, X8
	557 Call 0x1C17DFC
	558 Move X0, X31
	559 Call InitialStyle.get_backgroundPositionX
	560 Move [X20+48], X0
	561 Move [X20+56], W1
	562 Move X1, [X21]
	563 Move X0, X19
	564 Call StyleDataRef`1<VisualData>.Write, X0
	565 Move X20, X0
	566 Move X0, X31
	567 Call InitialStyle.get_backgroundPositionY
	568 Move [X20+60], X0
	569 Move [X20+68], W1
	570 Move X1, [X21]
	571 Move X0, X19
	572 Call StyleDataRef`1<VisualData>.Write, X0
	573 Move X20, X0
	574 Move X0, X31
	575 Call InitialStyle.get_backgroundRepeat
	576 Move [X20+72], X0
	577 Move X1, [X21]
	578 Move X0, X19
	579 Call StyleDataRef`1<VisualData>.Write, X0
	580 Move X19, X0
	581 Move X21, 0x39E000
	582 Move X21, [X21+768]
	583 Move X0, X19
	584 Move X1, [X21]
	585 Call 0x266D4BC, X0
	586 Move X8, 0x39D000
	587 Move X8, [X8+856]
	588 Move X20, X0
	589 Move X8, [X8]
	590 Move W9, [X8+224]
	591 Compare W9, 0
	592 JumpIfNotEqual {595}
	593 Move X0, X8
	594 Call 0x1C17DFC
	595 Move X0, X31
	596 Call InitialStyle.get_unityTextOutlineColor
	597 Move [X20+104], S0
	598 Move [X20+112], S1
	599 Move [X20+112], S2
	600 Move [X20+120], S3
	601 Move X1, [X21]
	602 Move X0, X19
	603 Call 0x266D4BC, X0
	604 Move X19, X0
	605 Move X8, 0x39E000
	606 Move X8, [X8+784]
	607 Add X0, X19, 24
	608 Move X1, [X8]
	609 Call StyleDataRef`1<TransformData>.Write, X0
	610 Move X8, 0x39D000
	611 Move X8, [X8+856]
	612 Move X19, X0
	613 Move X8, [X8]
	614 Move W9, [X8+224]
	615 Compare W9, 0
	616 JumpIfNotEqual {619}
	617 Move X0, X8
	618 Call 0x1C17DFC
	619 Move X0, X31
	620 Call InitialStyle.get_scale
	621 Move [X19+24], X0
	622 Move [X19+32], X1
	623 Move X8, 0x39E000
	624 Move X8, [X8+784]
	625 Add X0, X19, 24
	626 Move X1, [X8]
	627 Call StyleDataRef`1<TransformData>.Write, X0
	628 Move X8, 0x39D000
	629 Move X8, [X8+856]
	630 Move X19, X0
	631 Move X8, [X8]
	632 Move W9, [X8+224]
	633 Compare W9, 0
	634 JumpIfNotEqual {637}
	635 Move X0, X8
	636 Call 0x1C17DFC
	637 Add X8, X31, 0
	638 Move X0, X31
	639 Call InitialStyle.get_transformOrigin
	640 Move W8, [X31+16]
	641 Move V0, [X31]
	642 Move [X31+48], W8
	643 Move [X31+2], V0
	644 Move [X19+56], W8
	645 Move [X19+40], V0
	646 Move X8, 0x39E000
	647 Move X8, [X8+784]
	648 Add X0, X19, 24
	649 Move X1, [X8]
	650 Call StyleDataRef`1<TransformData>.Write, X0
	651 Move X8, 0x39D000
	652 Move X8, [X8+856]
	653 Move X19, X0
	654 Move X8, [X8]
	655 Move W9, [X8+224]
	656 Compare W9, 0
	657 JumpIfNotEqual {660}
	658 Move X0, X8
	659 Call 0x1C17DFC
	660 Add X8, X31, 0
	661 Move X0, X31
	662 Call InitialStyle.get_translate
	663 Move X8, [X31+16]
	664 Move V0, [X31]
	665 Move [X31+48], X8
	666 Move [X31+2], V0
	667 Move [X19+76], X8
	668 Move [X19+60], V0
	669 Move X8, 0x39E000
	670 Move X8, [X8+760]
	671 Add X0, X19, 40
	672 Move X1, [X8]
	673 Call StyleDataRef`1<VisualData>.Write, X0
	674 Move X8, 0x39D000
	675 Move X8, [X8+856]
	676 Move X19, X0
	677 Move X8, [X8]
	678 Move W9, [X8+224]
	679 Compare W9, 0
	680 JumpIfNotEqual {683}
	681 Move X0, X8
	682 Call 0x1C17DFC
	683 Add X8, X31, 0
	684 Move X0, X31
	685 Call InitialStyle.get_backgroundImage
	686 Move V1, [X31]
	687 Move V0, [X31+16]
	688 Move [X31+32], V1
	689 Move [X31+40], V0
	690 Move [X19+16], V1
	691 Move [X19+24], V0
	692 Move X8, 0x39E000
	693 Move X8, [X8+760]
	694 Add X0, X19, 40
	695 Move X1, [X8]
	696 Call StyleDataRef`1<VisualData>.Write, X0
	697 Move X8, 0x39D000
	698 Move X8, [X8+856]
	699 Move X19, X0
	700 Move X8, [X8]
	701 Move W9, [X8+224]
	702 Compare W9, 0
	703 JumpIfNotEqual {706}
	704 Move X0, X8
	705 Call 0x1C17DFC
	706 Move X0, X31
	707 Call InitialStyle.get_backgroundPositionX
	708 Move [X19+48], X0
	709 Move [X19+56], W1
	710 Move X8, 0x39E000
	711 Move X8, [X8+760]
	712 Add X0, X19, 40
	713 Move X1, [X8]
	714 Call StyleDataRef`1<VisualData>.Write, X0
	715 Move X8, 0x39D000
	716 Move X8, [X8+856]
	717 Move X19, X0
	718 Move X8, [X8]
	719 Move W9, [X8+224]
	720 Compare W9, 0
	721 JumpIfNotEqual {724}
	722 Move X0, X8
	723 Call 0x1C17DFC
	724 Move X0, X31
	725 Call InitialStyle.get_backgroundPositionY
	726 Move [X19+60], X0
	727 Move [X19+68], W1
	728 Move X8, 0x39E000
	729 Move X8, [X8+760]
	730 Add X0, X19, 40
	731 Move X1, [X8]
	732 Call StyleDataRef`1<VisualData>.Write, X0
	733 Move X8, 0x39D000
	734 Move X8, [X8+856]
	735 Move X19, X0
	736 Move X8, [X8]
	737 Move W9, [X8+224]
	738 Compare W9, 0
	739 JumpIfNotEqual {742}
	740 Move X0, X8
	741 Call 0x1C17DFC
	742 Move X0, X31
	743 Call InitialStyle.get_backgroundRepeat
	744 Move [X19+72], X0
	745 Move X8, 0x39E000
	746 Move X8, [X8+760]
	747 Add X0, X19, 40
	748 Move X1, [X8]
	749 Call StyleDataRef`1<VisualData>.Write, X0
	750 Move X8, 0x39D000
	751 Move X8, [X8+856]
	752 Move X19, X0
	753 Move X8, [X8]
	754 Move W9, [X8+224]
	755 Compare W9, 0
	756 JumpIfNotEqual {759}
	757 Move X0, X8
	758 Call 0x1C17DFC
	759 Add X8, X31, 0
	760 Move X0, X31
	761 Call InitialStyle.get_backgroundSize
	762 Move W8, [X31+16]
	763 Move V0, [X31]
	764 Move [X31+48], W8
	765 Move [X31+2], V0
	766 Move [X19+96], W8
	767 Move [X19+5], V0
	768 Move X8, 0x39E000
	769 Move X8, [X8+760]
	770 Add X0, X19, 40
	771 Move X1, [X8]
	772 Call StyleDataRef`1<VisualData>.Write, X0
	773 Move X8, 0x39D000
	774 Move X8, [X8+856]
	775 Move X19, X0
	776 Move X8, [X8]
	777 Move W9, [X8+224]
	778 Compare W9, 0
	779 JumpIfNotEqual {782}
	780 Move X0, X8
	781 Call 0x1C17DFC
	782 Move X0, X31
	783 Call InitialStyle.get_borderBottomColor
	784 Move [X19+100], S0
	785 Move [X19+108], S1
	786 Move [X19+108], S2
	787 Move [X19+116], S3
	788 Move X8, 0x39E000
	789 Move X8, [X8+760]
	790 Add X0, X19, 40
	791 Move X1, [X8]
	792 Call StyleDataRef`1<VisualData>.Write, X0
	793 Move X8, 0x39D000
	794 Move X8, [X8+856]
	795 Move X19, X0
	796 Move X8, [X8]
	797 Move W9, [X8+224]
	798 Compare W9, 0
	799 JumpIfNotEqual {802}
	800 Move X0, X8
	801 Call 0x1C17DFC
	802 Move X0, X31
	803 Call InitialStyle.get_borderBottomLeftRadius
	804 Move X8, 0x39E000
	805 Move X8, [X8+760]
	806 Add X0, X19, 40
	807 Move X1, [X8]
	808 Call StyleDataRef`1<VisualData>.Write, X0
	809 Move X8, 0x39D000
	810 Move X8, [X8+856]
	811 Move X19, X0
	812 Move X8, [X8]
	813 Move W9, [X8+224]
	814 Compare W9, 0
	815 JumpIfNotEqual {818}
	816 Move X0, X8
	817 Call 0x1C17DFC
	818 Move X0, X31
	819 Call InitialStyle.get_borderBottomRightRadius
	820 Move X8, 0x39E000
	821 Move X8, [X8+760]
	822 Add X0, X19, 40
	823 Move X1, [X8]
	824 Call StyleDataRef`1<VisualData>.Write, X0
	825 Move X8, 0x39D000
	826 Move X8, [X8+856]
	827 Move X19, X0
	828 Move X8, [X8]
	829 Move W9, [X8+224]
	830 Compare W9, 0
	831 JumpIfNotEqual {834}
	832 Move X0, X8
	833 Call 0x1C17DFC
	834 Move X0, X31
	835 Call InitialStyle.get_borderLeftColor
	836 Move [X19+132], S0
	837 Move [X19+140], S1
	838 Move [X19+140], S2
	839 Move [X19+148], S3
	840 Move X8, 0x39E000
	841 Move X8, [X8+760]
	842 Add X0, X19, 40
	843 Move X1, [X8]
	844 Call StyleDataRef`1<VisualData>.Write, X0
	845 Move X8, 0x39D000
	846 Move X8, [X8+856]
	847 Move X19, X0
	848 Move X8, [X8]
	849 Move W9, [X8+224]
	850 Compare W9, 0
	851 JumpIfNotEqual {854}
	852 Move X0, X8
	853 Call 0x1C17DFC
	854 Move X0, X31
	855 Call InitialStyle.get_borderRightColor
	856 Move [X19+148], S0
	857 Move [X19+156], S1
	858 Move [X19+156], S2
	859 Move [X19+164], S3
	860 Move X8, 0x39E000
	861 Move X8, [X8+760]
	862 Add X0, X19, 40
	863 Move X1, [X8]
	864 Call StyleDataRef`1<VisualData>.Write, X0
	865 Move X8, 0x39D000
	866 Move X8, [X8+856]
	867 Move X19, X0
	868 Move X8, [X8]
	869 Move W9, [X8+224]
	870 Compare W9, 0
	871 JumpIfNotEqual {874}
	872 Move X0, X8
	873 Call 0x1C17DFC
	874 Move X0, X31
	875 Call InitialStyle.get_borderTopColor
	876 Move [X19+164], S0
	877 Move [X19+172], S1
	878 Move [X19+172], S2
	879 Move [X19+180], S3
	880 Move X8, 0x39E000
	881 Move X8, [X8+760]
	882 Add X0, X19, 40
	883 Move X1, [X8]
	884 Call StyleDataRef`1<VisualData>.Write, X0
	885 Move X8, 0x39D000
	886 Move X8, [X8+856]
	887 Move X19, X0
	888 Move X8, [X8]
	889 Move W9, [X8+224]
	890 Compare W9, 0
	891 JumpIfNotEqual {894}
	892 Move X0, X8
	893 Call 0x1C17DFC
	894 Move X0, X31
	895 Call InitialStyle.get_borderTopLeftRadius
	896 Move [X19+180], X0
	897 Move X8, 0x39E000
	898 Move X8, [X8+760]
	899 Add X0, X19, 40
	900 Move X1, [X8]
	901 Call StyleDataRef`1<VisualData>.Write, X0
	902 Move X8, 0x39D000
	903 Move X8, [X8+856]
	904 Move X19, X0
	905 Move X8, [X8]
	906 Move W9, [X8+224]
	907 Compare W9, 0
	908 JumpIfNotEqual {911}
	909 Move X0, X8
	910 Call 0x1C17DFC
	911 Move X0, X31
	912 Call InitialStyle.get_borderTopRightRadius
	913 Move [X19+188], X0
	914 Move X8, 0x39E000
	915 Move X8, [X8+760]
	916 Add X0, X19, 40
	917 Move X1, [X8]
	918 Call StyleDataRef`1<VisualData>.Write, X0
	919 Move X8, 0x39D000
	920 Move X8, [X8+856]
	921 Move X19, X0
	922 Move X8, [X8]
	923 Move W9, [X8+224]
	924 Compare W9, 0
	925 JumpIfNotEqual {928}
	926 Move X0, X8
	927 Call 0x1C17DFC
	928 Move X0, X31
	929 Call InitialStyle.get_opacity
	930 Move [X19+196], S0
	931 Move X8, 0x39D000
	932 Move X8, [X8+760]
	933 Add X0, X19, 40
	934 Move X1, [X8]
	935 Call StyleDataRef`1<VisualData>.Write, X0
	936 Move X8, 0x39C000
	937 Move X8, [X8+856]
	938 Move X19, X0
	939 Move X8, [X8]
	940 Move W9, [X8+224]
	941 Compare W9, 0
	942 JumpIfNotEqual {945}
	943 Move X0, X8
	944 Call 0x1C17DFC
	945 Move X0, X31
	946 Call InitialStyle.get_overflow
	947 Move [X19+200], W0
	948 Move X8, 0x39D000
	949 Move X8, [X8+792]
	950 Add X0, X19, 32
	951 Move X1, [X8]
	952 Call StyleDataRef`1<TransitionData>.Write, X0
	953 Move X9, 0x39C000
	954 Move X9, [X9+856]
	955 Move X8, X0
	956 Move X20, [X8+8]
	957 Move X0, [X9]
	958 Move W9, [X0+224]
	959 Compare W9, 0
	960 JumpIfNotEqual {962}
	961 Call 0x1C17DFC
	962 Move X0, X31
	963 Call InitialStyle.get_transitionDuration
	964 Move X8, 0x39D000
	965 Move X8, [X8+928]
	966 Move X1, X0
	967 Move X0, X20
	968 Move X2, [X8]
	969 Call StyleValueExtensions.CopyFrom, X0, X1
	970 Move X8, 0x39D000
	971 Move X8, [X8+792]
	972 Add X0, X19, 32
	973 Move X1, [X8]
	974 Call StyleDataRef`1<TransitionData>.Write, X0
	975 Move X9, 0x39C000
	976 Move X9, [X9+856]
	977 Move X8, X0
	978 Move X20, [X8+16]
	979 Move X0, [X9]
	980 Move W9, [X0+224]
	981 Compare W9, 0
	982 JumpIfNotEqual {984}
	983 Call 0x1C17DFC
	984 Move X0, X31
	985 Call InitialStyle.get_transitionProperty
	986 Move X8, 0x39D000
	987 Move X8, [X8+920]
	988 Move X1, X0
	989 Move X0, X20
	990 Move X2, [X8]
	991 Call StyleValueExtensions.CopyFrom, X0, X1
	992 Move X8, 0x39D000
	993 Move X8, [X8+792]
	994 Add X0, X19, 32
	995 Move X1, [X8]
	996 Call StyleDataRef`1<TransitionData>.Write, X0
	997 Move X9, 0x39C000
	998 Move X9, [X9+856]
	999 Move X8, X0
	1000 Move X20, [X8+24]
	1001 Move X0, [X9]
	1002 Move W9, [X0+224]
	1003 Compare W9, 0
	1004 JumpIfNotEqual {1006}
	1005 Call 0x1C17DFC
	1006 Move X0, X31
	1007 Call InitialStyle.get_transitionTimingFunction
	1008 Move X8, 0x39D000
	1009 Move X8, [X8+912]
	1010 Move X1, X0
	1011 Move X0, X20
	1012 Move X2, [X8]
	1013 Call 0x2295EA0, X0, X1
	1014 Move [X19+80], X31
	1015 Move X8, 0x39D000
	1016 Move X8, [X8+752]
	1017 Add X0, X19, 8
	1018 Move X1, [X8]
	1019 Call StyleDataRef`1<LayoutData>.Write, X0
	1020 Move X8, 0x39C000
	1021 Move X8, [X8+856]
	1022 Move X19, X0
	1023 Move X8, [X8]
	1024 Move W9, [X8+224]
	1025 Compare W9, 0
	1026 JumpIfNotEqual {1029}
	1027 Move X0, X8
	1028 Call 0x1C17DFC
	1029 Move X0, X31
	1030 Call InitialStyle.get_alignItems
	1031 Move [X19+4], W0
	1032 Move X8, 0x39D000
	1033 Move X8, [X8+752]
	1034 Add X0, X19, 8
	1035 Move X1, [X8]
	1036 Call StyleDataRef`1<LayoutData>.Write, X0
	1037 Move X8, 0x39C000
	1038 Move X8, [X8+856]
	1039 Move X19, X0
	1040 Move X8, [X8]
	1041 Move W9, [X8+224]
	1042 Compare W9, 0
	1043 JumpIfNotEqual {1046}
	1044 Move X0, X8
	1045 Call 0x1C17DFC
	1046 Move X0, X31
	1047 Call InitialStyle.get_alignSelf
	1048 Move [X19+8], W0
	1049 Move X8, 0x39D000
	1050 Move X8, [X8+752]
	1051 Add X0, X19, 8
	1052 Move X1, [X8]
	1053 Call StyleDataRef`1<LayoutData>.Write, X0
	1054 Move X8, 0x39C000
	1055 Move X8, [X8+856]
	1056 Move X19, X0
	1057 Move X8, [X8]
	1058 Move W9, [X8+224]
	1059 Compare W9, 0
	1060 JumpIfNotEqual {1063}
	1061 Move X0, X8
	1062 Call 0x1C17DFC
	1063 Move X0, X31
	1064 Call InitialStyle.get_borderBottomWidth
	1065 Move [X19+12], S0
	1066 Move X8, 0x39D000
	1067 Move X8, [X8+752]
	1068 Add X0, X19, 8
	1069 Move X1, [X8]
	1070 Call StyleDataRef`1<LayoutData>.Write, X0
	1071 Move X8, 0x39C000
	1072 Move X8, [X8+856]
	1073 Move X19, X0
	1074 Move X8, [X8]
	1075 Move W9, [X8+224]
	1076 Compare W9, 0
	1077 JumpIfNotEqual {1080}
	1078 Move X0, X8
	1079 Call 0x1C17DFC
	1080 Move X0, X31
	1081 Call InitialStyle.get_borderLeftWidth
	1082 Move [X19+16], S0
	1083 Move X8, 0x39D000
	1084 Move X8, [X8+752]
	1085 Add X0, X19, 8
	1086 Move X1, [X8]
	1087 Call StyleDataRef`1<LayoutData>.Write, X0
	1088 Move X8, 0x39C000
	1089 Move X8, [X8+856]
	1090 Move X19, X0
	1091 Move X8, [X8]
	1092 Move W9, [X8+224]
	1093 Compare W9, 0
	1094 JumpIfNotEqual {1097}
	1095 Move X0, X8
	1096 Call 0x1C17DFC
	1097 Move X0, X31
	1098 Call InitialStyle.get_borderRightWidth
	1099 Move [X19+20], S0
	1100 Move X8, 0x39D000
	1101 Move X8, [X8+752]
	1102 Add X0, X19, 8
	1103 Move X1, [X8]
	1104 Call StyleDataRef`1<LayoutData>.Write, X0
	1105 Move X8, 0x39C000
	1106 Move X8, [X8+856]
	1107 Move X19, X0
	1108 Move X8, [X8]
	1109 Move W9, [X8+224]
	1110 Compare W9, 0
	1111 JumpIfNotEqual {1114}
	1112 Move X0, X8
	1113 Call 0x1C17DFC
	1114 Move X0, X31
	1115 Call InitialStyle.get_borderTopWidth
	1116 Move [X19+24], S0
	1117 Move X8, 0x39D000
	1118 Move X8, [X8+752]
	1119 Add X0, X19, 8
	1120 Move X1, [X8]
	1121 Call StyleDataRef`1<LayoutData>.Write, X0
	1122 Move X8, 0x39C000
	1123 Move X8, [X8+856]
	1124 Move X19, X0
	1125 Move X8, [X8]
	1126 Move W9, [X8+224]
	1127 Compare W9, 0
	1128 JumpIfNotEqual {1131}
	1129 Move X0, X8
	1130 Call 0x1C17DFC
	1131 Move X0, X31
	1132 Call InitialStyle.get_bottom
	1133 Move [X19+28], X0
	1134 Move X8, 0x39D000
	1135 Move X8, [X8+752]
	1136 Add X0, X19, 8
	1137 Move X1, [X8]
	1138 Call StyleDataRef`1<LayoutData>.Write, X0
	1139 Move X8, 0x39C000
	1140 Move X8, [X8+856]
	1141 Move X19, X0
	1142 Move X8, [X8]
	1143 Move W9, [X8+224]
	1144 Compare W9, 0
	1145 JumpIfNotEqual {1148}
	1146 Move X0, X8
	1147 Call 0x1C17DFC
	1148 Move X0, X31
	1149 Call InitialStyle.get_display
	1150 Move [X19+36], W0
	1151 Move X8, 0x39D000
	1152 Move X8, [X8+752]
	1153 Add X0, X19, 8
	1154 Move X1, [X8]
	1155 Call StyleDataRef`1<LayoutData>.Write, X0
	1156 Move X8, 0x39C000
	1157 Move X8, [X8+856]
	1158 Move X19, X0
	1159 Move X8, [X8]
	1160 Move W9, [X8+224]
	1161 Compare W9, 0
	1162 JumpIfNotEqual {1165}
	1163 Move X0, X8
	1164 Call 0x1C17DFC
	1165 Move X0, X31
	1166 Call InitialStyle.get_flexBasis
	1167 Move [X19+40], X0
	1168 Move X8, 0x39D000
	1169 Move X8, [X8+752]
	1170 Add X0, X19, 8
	1171 Move X1, [X8]
	1172 Call StyleDataRef`1<LayoutData>.Write, X0
	1173 Move X8, 0x39C000
	1174 Move X8, [X8+856]
	1175 Move X19, X0
	1176 Move X8, [X8]
	1177 Move W9, [X8+224]
	1178 Compare W9, 0
	1179 JumpIfNotEqual {1182}
	1180 Move X0, X8
	1181 Call 0x1C17DFC
	1182 Move X0, X31
	1183 Call InitialStyle.get_flexDirection
	1184 Move X8, 0x39D000
	1185 Move X8, [X8+752]
	1186 Add X0, X19, 8
	1187 Move X1, [X8]
	1188 Call StyleDataRef`1<LayoutData>.Write, X0
	1189 Move X8, 0x39C000
	1190 Move X8, [X8+856]
	1191 Move X19, X0
	1192 Move X8, [X8]
	1193 Move W9, [X8+224]
	1194 Compare W9, 0
	1195 JumpIfNotEqual {1198}
	1196 Move X0, X8
	1197 Call 0x1C17DFC
	1198 Move X0, X31
	1199 Call InitialStyle.get_flexGrow
	1200 Move [X19+52], S0
	1201 Move X8, 0x39D000
	1202 Move X8, [X8+752]
	1203 Add X0, X19, 8
	1204 Move X1, [X8]
	1205 Call StyleDataRef`1<LayoutData>.Write, X0
	1206 Move X8, 0x39C000
	1207 Move X8, [X8+856]
	1208 Move X19, X0
	1209 Move X8, [X8]
	1210 Move W9, [X8+224]
	1211 Compare W9, 0
	1212 JumpIfNotEqual {1215}
	1213 Move X0, X8
	1214 Call 0x1C17DFC
	1215 Move X0, X31
	1216 Call InitialStyle.get_flexShrink
	1217 Move [X19+56], S0
	1218 Move X8, 0x39D000
	1219 Move X8, [X8+752]
	1220 Add X0, X19, 8
	1221 Move X1, [X8]
	1222 Call StyleDataRef`1<LayoutData>.Write, X0
	1223 Move X8, 0x39C000
	1224 Move X8, [X8+856]
	1225 Move X19, X0
	1226 Move X8, [X8]
	1227 Move W9, [X8+224]
	1228 Compare W9, 0
	1229 JumpIfNotEqual {1232}
	1230 Move X0, X8
	1231 Call 0x1C17DFC
	1232 Move X0, X31
	1233 Call InitialStyle.get_flexWrap
	1234 Move [X19+60], W0
	1235 Move X8, 0x39D000
	1236 Move X8, [X8+752]
	1237 Add X0, X19, 8
	1238 Move X1, [X8]
	1239 Call StyleDataRef`1<LayoutData>.Write, X0
	1240 Move X8, 0x39C000
	1241 Move X8, [X8+856]
	1242 Move X19, X0
	1243 Move X8, [X8]
	1244 Move W9, [X8+224]
	1245 Compare W9, 0
	1246 JumpIfNotEqual {1249}
	1247 Move X0, X8
	1248 Call 0x1C17DFC
	1249 Move X0, X31
	1250 Call InitialStyle.get_height
	1251 Move X8, 0x39D000
	1252 Move X8, [X8+752]
	1253 Add X0, X19, 8
	1254 Move X1, [X8]
	1255 Call StyleDataRef`1<LayoutData>.Write, X0
	1256 Move X8, 0x39C000
	1257 Move X8, [X8+856]
	1258 Move X19, X0
	1259 Move X8, [X8]
	1260 Move W9, [X8+224]
	1261 Compare W9, 0
	1262 JumpIfNotEqual {1265}
	1263 Move X0, X8
	1264 Call 0x1C17DFC
	1265 Move X0, X31
	1266 Call InitialStyle.get_justifyContent
	1267 Move [X19+72], W0
	1268 Move X8, 0x39D000
	1269 Move X8, [X8+752]
	1270 Add X0, X19, 8
	1271 Move X1, [X8]
	1272 Call StyleDataRef`1<LayoutData>.Write, X0
	1273 Move X8, 0x39C000
	1274 Move X8, [X8+856]
	1275 Move X19, X0
	1276 Move X8, [X8]
	1277 Move W9, [X8+224]
	1278 Compare W9, 0
	1279 JumpIfNotEqual {1282}
	1280 Move X0, X8
	1281 Call 0x1C17DFC
	1282 Move X0, X31
	1283 Call InitialStyle.get_left
	1284 Move [X19+76], X0
	1285 Move X8, 0x39D000
	1286 Move X8, [X8+752]
	1287 Add X0, X19, 8
	1288 Move X1, [X8]
	1289 Call StyleDataRef`1<LayoutData>.Write, X0
	1290 Move X8, 0x39C000
	1291 Move X8, [X8+856]
	1292 Move X19, X0
	1293 Move X8, [X8]
	1294 Move W9, [X8+224]
	1295 Compare W9, 0
	1296 JumpIfNotEqual {1299}
	1297 Move X0, X8
	1298 Call 0x1C17DFC
	1299 Move X0, X31
	1300 Call InitialStyle.get_marginBottom
	1301 Move [X19+84], X0
	1302 Move X8, 0x39D000
	1303 Move X8, [X8+752]
	1304 Add X0, X19, 8
	1305 Move X1, [X8]
	1306 Call StyleDataRef`1<LayoutData>.Write, X0
	1307 Move X8, 0x39C000
	1308 Move X8, [X8+856]
	1309 Move X19, X0
	1310 Move X8, [X8]
	1311 Move W9, [X8+224]
	1312 Compare W9, 0
	1313 JumpIfNotEqual {1316}
	1314 Move X0, X8
	1315 Call 0x1C17DFC
	1316 Move X0, X31
	1317 Call InitialStyle.get_marginLeft
	1318 Move X8, 0x39D000
	1319 Move X8, [X8+752]
	1320 Add X0, X19, 8
	1321 Move X1, [X8]
	1322 Call StyleDataRef`1<LayoutData>.Write, X0
	1323 Move X8, 0x39C000
	1324 Move X8, [X8+856]
	1325 Move X19, X0
	1326 Move X8, [X8]
	1327 Move W9, [X8+224]
	1328 Compare W9, 0
	1329 JumpIfNotEqual {1332}
	1330 Move X0, X8
	1331 Call 0x1C17DFC
	1332 Move X0, X31
	1333 Call InitialStyle.get_marginRight
	1334 Move [X19+100], X0
	1335 Move X8, 0x39D000
	1336 Move X8, [X8+752]
	1337 Add X0, X19, 8
	1338 Move X1, [X8]
	1339 Call StyleDataRef`1<LayoutData>.Write, X0
	1340 Move X8, 0x39C000
	1341 Move X8, [X8+856]
	1342 Move X19, X0
	1343 Move X8, [X8]
	1344 Move W9, [X8+224]
	1345 Compare W9, 0
	1346 JumpIfNotEqual {1349}
	1347 Move X0, X8
	1348 Call 0x1C17DFC
	1349 Move X0, X31
	1350 Call InitialStyle.get_marginTop
	1351 Move [X19+108], X0
	1352 Move X8, 0x39D000
	1353 Move X8, [X8+752]
	1354 Add X0, X19, 8
	1355 Move X1, [X8]
	1356 Call StyleDataRef`1<LayoutData>.Write, X0
	1357 Move X8, 0x39C000
	1358 Move X8, [X8+856]
	1359 Move X19, X0
	1360 Move X8, [X8]
	1361 Move W9, [X8+224]
	1362 Compare W9, 0
	1363 JumpIfNotEqual {1366}
	1364 Move X0, X8
	1365 Call 0x1C17DFC
	1366 Move X0, X31
	1367 Call InitialStyle.get_maxHeight
	1368 Move [X19+116], X0
	1369 Move X8, 0x39D000
	1370 Move X8, [X8+752]
	1371 Add X0, X19, 8
	1372 Move X1, [X8]
	1373 Call StyleDataRef`1<LayoutData>.Write, X0
	1374 Move X8, 0x39C000
	1375 Move X8, [X8+856]
	1376 Move X19, X0
	1377 Move X8, [X8]
	1378 Move W9, [X8+224]
	1379 Compare W9, 0
	1380 JumpIfNotEqual {1383}
	1381 Move X0, X8
	1382 Call 0x1C17DFC
	1383 Move X0, X31
	1384 Call InitialStyle.get_maxWidth
	1385 Move [X19+124], X0
	1386 Move X8, 0x39D000
	1387 Move X8, [X8+752]
	1388 Add X0, X19, 8
	1389 Move X1, [X8]
	1390 Call StyleDataRef`1<LayoutData>.Write, X0
	1391 Move X8, 0x39C000
	1392 Move X8, [X8+856]
	1393 Move X19, X0
	1394 Move X8, [X8]
	1395 Move W9, [X8+224]
	1396 Compare W9, 0
	1397 JumpIfNotEqual {1400}
	1398 Move X0, X8
	1399 Call 0x1C17DFC
	1400 Move X0, X31
	1401 Call InitialStyle.get_minHeight
	1402 Move X8, 0x39D000
	1403 Move X8, [X8+752]
	1404 Add X0, X19, 8
	1405 Move X1, [X8]
	1406 Call StyleDataRef`1<LayoutData>.Write, X0
	1407 Move X8, 0x39C000
	1408 Move X8, [X8+856]
	1409 Move X19, X0
	1410 Move X8, [X8]
	1411 Move W9, [X8+224]
	1412 Compare W9, 0
	1413 JumpIfNotEqual {1416}
	1414 Move X0, X8
	1415 Call 0x1C17DFC
	1416 Move X0, X31
	1417 Call InitialStyle.get_minWidth
	1418 Move [X19+140], X0
	1419 Move X8, 0x39D000
	1420 Move X8, [X8+752]
	1421 Add X0, X19, 8
	1422 Move X1, [X8]
	1423 Call StyleDataRef`1<LayoutData>.Write, X0
	1424 Move X8, 0x39C000
	1425 Move X8, [X8+856]
	1426 Move X19, X0
	1427 Move X8, [X8]
	1428 Move W9, [X8+224]
	1429 Compare W9, 0
	1430 JumpIfNotEqual {1433}
	1431 Move X0, X8
	1432 Call 0x1C17DFC
	1433 Move X0, X31
	1434 Call InitialStyle.get_paddingBottom
	1435 Move [X19+148], X0
	1436 Move X8, 0x39D000
	1437 Move X8, [X8+752]
	1438 Add X0, X19, 8
	1439 Move X1, [X8]
	1440 Call StyleDataRef`1<LayoutData>.Write, X0
	1441 Move X8, 0x39C000
	1442 Move X8, [X8+856]
	1443 Move X19, X0
	1444 Move X8, [X8]
	1445 Move W9, [X8+224]
	1446 Compare W9, 0
	1447 JumpIfNotEqual {1450}
	1448 Move X0, X8
	1449 Call 0x1C17DFC
	1450 Move X0, X31
	1451 Call InitialStyle.get_paddingLeft
	1452 Move [X19+156], X0
	1453 Move X8, 0x39D000
	1454 Move X8, [X8+752]
	1455 Add X0, X19, 8
	1456 Move X1, [X8]
	1457 Call StyleDataRef`1<LayoutData>.Write, X0
	1458 Move X8, 0x39C000
	1459 Move X8, [X8+856]
	1460 Move X19, X0
	1461 Move X8, [X8]
	1462 Move W9, [X8+224]
	1463 Compare W9, 0
	1464 JumpIfNotEqual {1467}
	1465 Move X0, X8
	1466 Call 0x1C17DFC
	1467 Move X0, X31
	1468 Call InitialStyle.get_paddingRight
	1469 Move [X19+164], X0
	1470 Move X8, 0x39D000
	1471 Move X8, [X8+752]
	1472 Add X0, X19, 8
	1473 Move X1, [X8]
	1474 Call StyleDataRef`1<LayoutData>.Write, X0
	1475 Move X8, 0x39C000
	1476 Move X8, [X8+856]
	1477 Move X19, X0
	1478 Move X8, [X8]
	1479 Move W9, [X8+224]
	1480 Compare W9, 0
	1481 JumpIfNotEqual {1484}
	1482 Move X0, X8
	1483 Call 0x1C17DFC
	1484 Move X0, X31
	1485 Call InitialStyle.get_paddingTop
	1486 Move [X19+172], X0
	1487 Move X8, 0x39D000
	1488 Move X8, [X8+752]
	1489 Add X0, X19, 8
	1490 Move X1, [X8]
	1491 Call StyleDataRef`1<LayoutData>.Write, X0
	1492 Move X8, 0x39C000
	1493 Move X8, [X8+856]
	1494 Move X19, X0
	1495 Move X8, [X8]
	1496 Move W9, [X8+224]
	1497 Compare W9, 0
	1498 JumpIfNotEqual {1501}
	1499 Move X0, X8
	1500 Call 0x1C17DFC
	1501 Move X0, X31
	1502 Call InitialStyle.get_position
	1503 Move [X19+180], W0
	1504 Move X8, 0x39D000
	1505 Move X8, [X8+752]
	1506 Add X0, X19, 8
	1507 Move X1, [X8]
	1508 Call StyleDataRef`1<LayoutData>.Write, X0
	1509 Move X8, 0x39C000
	1510 Move X8, [X8+856]
	1511 Move X19, X0
	1512 Move X8, [X8]
	1513 Move W9, [X8+224]
	1514 Compare W9, 0
	1515 JumpIfNotEqual {1518}
	1516 Move X0, X8
	1517 Call 0x1C17DFC
	1518 Move X0, X31
	1519 Call InitialStyle.get_right
	1520 Move [X19+184], X0
	1521 Move X8, 0x39D000
	1522 Move X8, [X8+752]
	1523 Add X0, X19, 8
	1524 Move X1, [X8]
	1525 Call StyleDataRef`1<LayoutData>.Write, X0
	1526 Move X8, 0x39C000
	1527 Move X8, [X8+856]
	1528 Move X19, X0
	1529 Move X8, [X8]
	1530 Move W9, [X8+224]
	1531 Compare W9, 0
	1532 JumpIfNotEqual {1535}
	1533 Move X0, X8
	1534 Call 0x1C17DFC
	1535 Move X0, X31
	1536 Call InitialStyle.get_top
	1537 Move [X19+192], X0
	1538 Move X8, 0x39D000
	1539 Move X8, [X8+752]
	1540 Add X0, X19, 8
	1541 Move X1, [X8]
	1542 Call StyleDataRef`1<LayoutData>.Write, X0
	1543 Move X8, 0x39C000
	1544 Move X8, [X8+856]
	1545 Move X19, X0
	1546 Move X8, [X8]
	1547 Move W9, [X8+224]
	1548 Compare W9, 0
	1549 JumpIfNotEqual {1552}
	1550 Move X0, X8
	1551 Call 0x1C17DFC
	1552 Move X0, X31
	1553 Call InitialStyle.get_width
	1554 Move [X19+200], X0
	1555 Move X8, 0x39D000
	1556 Move X8, [X8+768]
	1557 Move X0, X19
	1558 Move X1, [X8]
	1559 Call 0x266D4BC, X0
	1560 Move X8, 0x39C000
	1561 Move X8, [X8+856]
	1562 Move X19, X0
	1563 Move X8, [X8]
	1564 Move W9, [X8+224]
	1565 Compare W9, 0
	1566 JumpIfNotEqual {1569}
	1567 Move X0, X8
	1568 Call 0x1C17DFC
	1569 Move X0, X31
	1570 Call InitialStyle.get_fontSize
	1571 Move [X19+16], X0
	1572 Move X8, 0x39D000
	1573 Move X8, [X8+768]
	1574 Move X0, X19
	1575 Move X1, [X8]
	1576 Call 0x266D4BC, X0
	1577 Move X8, 0x39C000
	1578 Move X8, [X8+856]
	1579 Move X19, X0
	1580 Move X8, [X8]
	1581 Move W9, [X8+224]
	1582 Compare W9, 0
	1583 JumpIfNotEqual {1586}
	1584 Move X0, X8
	1585 Call 0x1C17DFC
	1586 Move X0, X31
	1587 Call InitialStyle.get_letterSpacing
	1588 Move [X19+24], X0
	1589 Move X8, 0x39D000
	1590 Move X8, [X8+768]
	1591 Move X0, X19
	1592 Move X1, [X8]
	1593 Call 0x266D4BC, X0
	1594 Move X8, 0x39C000
	1595 Move X8, [X8+856]
	1596 Move X19, X0
	1597 Move X8, [X8]
	1598 Move W9, [X8+224]
	1599 Compare W9, 0
	1600 JumpIfNotEqual {1603}
	1601 Move X0, X8
	1602 Call 0x1C17DFC
	1603 Add X8, X31, 0
	1604 Move X0, X31
	1605 Call InitialStyle.get_textShadow
	1606 NotImplemented "Instruction LDUR not yet implemented."
	1607 Move V1, [X31]
	1608 Move [X31+44], V0
	1609 Move [X31+2], V1
	1610 Move V0, [X31+2]
	1611 NotImplemented "Instruction LDUR not yet implemented."
	1612 Move [X19+2], V0
	1613 Move [X19+44], V1
	1614 Move X8, 0x39D000
	1615 Move X8, [X8+768]
	1616 Move X0, X19
	1617 Move X1, [X8]
	1618 Call 0x266D4BC, X0
	1619 Move X8, 0x39C000
	1620 Move X8, [X8+856]
	1621 Move X19, X0
	1622 Move X8, [X8]
	1623 Move W9, [X8+224]
	1624 Compare W9, 0
	1625 JumpIfNotEqual {1628}
	1626 Move X0, X8
	1627 Call 0x1C17DFC
	1628 Move X0, X31
	1629 Call InitialStyle.get_unityFont
	1630 Move [X19+64], X0
	1631 Move X8, 0x39D000
	1632 Move X8, [X8+768]
	1633 Move X0, X19
	1634 Move X1, [X8]
	1635 Call 0x266D4BC, X0
	1636 Move X8, 0x39C000
	1637 Move X8, [X8+856]
	1638 Move X19, X0
	1639 Move X8, [X8]
	1640 Move W9, [X8+224]
	1641 Compare W9, 0
	1642 JumpIfNotEqual {1645}
	1643 Move X0, X8
	1644 Call 0x1C17DFC
	1645 Move X0, X31
	1646 Call InitialStyle.get_unityFontDefinition
	1647 Move [X19+72], X0
	1648 Move [X19+80], X1
	1649 Move X8, 0x39D000
	1650 Move X8, [X8+768]
	1651 Move X0, X19
	1652 Move X1, [X8]
	1653 Call 0x266D4BC, X0
	1654 Move X8, 0x39C000
	1655 Move X8, [X8+856]
	1656 Move X19, X0
	1657 Move X8, [X8]
	1658 Move W9, [X8+224]
	1659 Compare W9, 0
	1660 JumpIfNotEqual {1663}
	1661 Move X0, X8
	1662 Call 0x1C17DFC
	1663 Move X0, X31
	1664 Call InitialStyle.get_unityFontStyleAndWeight
	1665 Move [X19+88], W0
	1666 Move X8, 0x39D000
	1667 Move X8, [X8+768]
	1668 Move X0, X19
	1669 Move X1, [X8]
	1670 Call 0x266D4BC, X0
	1671 Move X8, 0x39C000
	1672 Move X8, [X8+856]
	1673 Move X19, X0
	1674 Move X8, [X8]
	1675 Move W9, [X8+224]
	1676 Compare W9, 0
	1677 JumpIfNotEqual {1680}
	1678 Move X0, X8
	1679 Call 0x1C17DFC
	1680 Move X0, X31
	1681 Call InitialStyle.get_unityParagraphSpacing
	1682 Move [X19+92], X0
	1683 Move X8, 0x39D000
	1684 Move X8, [X8+768]
	1685 Move X0, X19
	1686 Move X1, [X8]
	1687 Call 0x266D4BC, X0
	1688 Move X8, 0x39C000
	1689 Move X8, [X8+856]
	1690 Move X19, X0
	1691 Move X8, [X8]
	1692 Move W9, [X8+224]
	1693 Compare W9, 0
	1694 JumpIfNotEqual {1697}
	1695 Move X0, X8
	1696 Call 0x1C17DFC
	1697 Move X0, X31
	1698 Call InitialStyle.get_unityTextAlign
	1699 Move [X19+100], W0
	1700 Move X8, 0x39D000
	1701 Move X8, [X8+768]
	1702 Move X0, X19
	1703 Move X1, [X8]
	1704 Call 0x266D4BC, X0
	1705 Move X8, 0x39C000
	1706 Move X8, [X8+856]
	1707 Move X19, X0
	1708 Move X8, [X8]
	1709 Move W9, [X8+224]
	1710 Compare W9, 0
	1711 JumpIfNotEqual {1714}
	1712 Move X0, X8
	1713 Call 0x1C17DFC
	1714 Move X0, X31
	1715 Call InitialStyle.get_unityTextOutlineColor
	1716 Move [X19+104], S0
	1717 Move [X19+112], S1
	1718 Move [X19+112], S2
	1719 Move [X19+120], S3
	1720 Move X8, 0x39D000
	1721 Move X8, [X8+768]
	1722 Move X0, X19
	1723 Move X1, [X8]
	1724 Call 0x266D4BC, X0
	1725 Move X8, 0x39C000
	1726 Move X8, [X8+856]
	1727 Move X19, X0
	1728 Move X8, [X8]
	1729 Move W9, [X8+224]
	1730 Compare W9, 0
	1731 JumpIfNotEqual {1734}
	1732 Move X0, X8
	1733 Call 0x1C17DFC
	1734 Move X0, X31
	1735 Call InitialStyle.get_unityTextOutlineWidth
	1736 Move [X19+120], S0
	1737 Move X8, 0x39D000
	1738 Move X8, [X8+768]
	1739 Move X0, X19
	1740 Move X1, [X8]
	1741 Call 0x266D4BC, X0
	1742 Move X8, 0x39C000
	1743 Move X8, [X8+856]
	1744 Move X19, X0
	1745 Move X8, [X8]
	1746 Move W9, [X8+224]
	1747 Compare W9, 0
	1748 JumpIfNotEqual {1751}
	1749 Move X0, X8
	1750 Call 0x1C17DFC
	1751 Move X0, X31
	1752 Call InitialStyle.get_visibility
	1753 Move [X19+124], W0
	1754 Move X8, 0x39D000
	1755 Move X8, [X8+768]
	1756 Move X0, X19
	1757 Move X1, [X8]
	1758 Call 0x266D4BC, X0
	1759 Move X8, 0x39C000
	1760 Move X8, [X8+856]
	1761 Move X19, X0
	1762 Move X8, [X8]
	1763 Move W9, [X8+224]
	1764 Compare W9, 0
	1765 JumpIfNotEqual {1768}
	1766 Move X0, X8
	1767 Call 0x1C17DFC
	1768 Move X0, X31
	1769 Call InitialStyle.get_whiteSpace
	1770 Move [X19+128], W0
	1771 Move X8, 0x39D000
	1772 Move X8, [X8+768]
	1773 Move X0, X19
	1774 Move X1, [X8]
	1775 Call 0x266D4BC, X0
	1776 Move X8, 0x39C000
	1777 Move X8, [X8+856]
	1778 Move X19, X0
	1779 Move X8, [X8]
	1780 Move W9, [X8+224]
	1781 Compare W9, 0
	1782 JumpIfNotEqual {1785}
	1783 Move X0, X8
	1784 Call 0x1C17DFC
	1785 Move X0, X31
	1786 Call InitialStyle.get_wordSpacing
	1787 Move [X19+132], X0
	1788 Move X8, 0x39D000
	1789 Move X8, [X8+776]
	1790 Add X0, X19, 16
	1791 Move X1, [X8]
	1792 Call StyleDataRef`1<RareData>.Write, X0
	1793 Move X8, 0x39C000
	1794 Move X8, [X8+856]
	1795 Move X19, X0
	1796 Move X8, [X8]
	1797 Move W9, [X8+224]
	1798 Compare W9, 0
	1799 JumpIfNotEqual {1802}
	1800 Move X0, X8
	1801 Call 0x1C17DFC
	1802 Move X0, X31
	1803 Call InitialStyle.get_textOverflow
	1804 Move [X19+24], W0
	1805 Move X8, 0x39D000
	1806 Move X8, [X8+776]
	1807 Add X0, X19, 16
	1808 Move X1, [X8]
	1809 Call StyleDataRef`1<RareData>.Write, X0
	1810 Move X8, 0x39C000
	1811 Move X8, [X8+856]
	1812 Move X19, X0
	1813 Move X8, [X8]
	1814 Move W9, [X8+224]
	1815 Compare W9, 0
	1816 JumpIfNotEqual {1819}
	1817 Move X0, X8
	1818 Call 0x1C17DFC
	1819 Move X0, X31
	1820 Call InitialStyle.get_unityBackgroundImageTintColor
	1821 Move [X19+28], S0
	1822 Move [X19+36], S1
	1823 Move [X19+36], S2
	1824 Move [X19+44], S3
	1825 Move X8, 0x39D000
	1826 Move X8, [X8+776]
	1827 Add X0, X19, 16
	1828 Move X1, [X8]
	1829 Call StyleDataRef`1<RareData>.Write, X0
	1830 Move X8, 0x39C000
	1831 Move X8, [X8+856]
	1832 Move X19, X0
	1833 Move X8, [X8]
	1834 Move W9, [X8+224]
	1835 Compare W9, 0
	1836 JumpIfNotEqual {1839}
	1837 Move X0, X8
	1838 Call 0x1C17DFC
	1839 Move X0, X31
	1840 Call InitialStyle.get_unityOverflowClipBox
	1841 Move [X19+44], W0
	1842 Move X8, 0x39D000
	1843 Move X8, [X8+776]
	1844 Add X0, X19, 16
	1845 Move X1, [X8]
	1846 Call StyleDataRef`1<RareData>.Write, X0
	1847 Move X8, 0x39C000
	1848 Move X8, [X8+856]
	1849 Move X19, X0
	1850 Move X8, [X8]
	1851 Move W9, [X8+224]
	1852 Compare W9, 0
	1853 JumpIfNotEqual {1856}
	1854 Move X0, X8
	1855 Call 0x1C17DFC
	1856 Move X0, X31
	1857 Call InitialStyle.get_unitySliceBottom
	1858 Move [X19+48], W0
	1859 Move X8, 0x39D000
	1860 Move X8, [X8+776]
	1861 Add X0, X19, 16
	1862 Move X1, [X8]
	1863 Call StyleDataRef`1<RareData>.Write, X0
	1864 Move X8, 0x39C000
	1865 Move X8, [X8+856]
	1866 Move X19, X0
	1867 Move X8, [X8]
	1868 Move W9, [X8+224]
	1869 Compare W9, 0
	1870 JumpIfNotEqual {1873}
	1871 Move X0, X8
	1872 Call 0x1C17DFC
	1873 Move X0, X31
	1874 Call InitialStyle.get_unitySliceLeft
	1875 Move [X19+52], W0
	1876 Move X8, 0x39D000
	1877 Move X8, [X8+776]
	1878 Add X0, X19, 16
	1879 Move X1, [X8]
	1880 Call StyleDataRef`1<RareData>.Write, X0
	1881 Move X8, 0x39C000
	1882 Move X8, [X8+856]
	1883 Move X19, X0
	1884 Move X8, [X8]
	1885 Move W9, [X8+224]
	1886 Compare W9, 0
	1887 JumpIfNotEqual {1890}
	1888 Move X0, X8
	1889 Call 0x1C17DFC
	1890 Move X0, X31
	1891 Call InitialStyle.get_unitySliceRight
	1892 Move [X19+56], W0
	1893 Move X8, 0x39D000
	1894 Move X8, [X8+776]
	1895 Add X0, X19, 16
	1896 Move X1, [X8]
	1897 Call StyleDataRef`1<RareData>.Write, X0
	1898 Move X8, 0x39C000
	1899 Move X8, [X8+856]
	1900 Move X19, X0
	1901 Move X8, [X8]
	1902 Move W9, [X8+224]
	1903 Compare W9, 0
	1904 JumpIfNotEqual {1907}
	1905 Move X0, X8
	1906 Call 0x1C17DFC
	1907 Move X0, X31
	1908 Call InitialStyle.get_unitySliceScale
	1909 Move [X19+60], S0
	1910 Move X8, 0x39D000
	1911 Move X8, [X8+776]
	1912 Add X0, X19, 16
	1913 Move X1, [X8]
	1914 Call StyleDataRef`1<RareData>.Write, X0
	1915 Move X8, 0x39C000
	1916 Move X8, [X8+856]
	1917 Move X19, X0
	1918 Move X8, [X8]
	1919 Move W9, [X8+224]
	1920 Compare W9, 0
	1921 JumpIfNotEqual {1924}
	1922 Move X0, X8
	1923 Call 0x1C17DFC
	1924 Move X0, X31
	1925 Call InitialStyle.get_unitySliceTop
	1926 Move [X19+64], W0
	1927 Move X8, 0x39D000
	1928 Move X8, [X8+776]
	1929 Add X0, X19, 16
	1930 Move X1, [X8]
	1931 Call StyleDataRef`1<RareData>.Write, X0
	1932 Move X8, 0x39C000
	1933 Move X8, [X8+856]
	1934 Move X19, X0
	1935 Move X8, [X8]
	1936 Move W9, [X8+224]
	1937 Compare W9, 0
	1938 JumpIfNotEqual {1941}
	1939 Move X0, X8
	1940 Call 0x1C17DFC
	1941 Move X0, X31
	1942 Call InitialStyle.get_unityTextOverflowPosition
	1943 Move [X19+68], W0
	1944 Move X20, [X31+96]
	1945 Move X19, [X31+104]
	1946 Move X22, [X31+80]
	1947 Move X21, [X31+88]
	1948 Move X30, [X31+64]
	1949 Move X23, [X31+72]
	1950 Add X31, X31, 112
	1951 Return 

Method: System.Void ApplyUnsetValue(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.ComputedStyle parentStyle)

Disassembly:
	0x03DC818C LDR W9, [X8 + 0xE0]
	0x03DC8190 CBNZ W9, 0x3DC819C
	0x03DC8194 MOV X0, X8
	0x03DC8198 BL 0x1C16DFC
	0x03DC819C MOV X0, X31
	0x03DC81A0 BL 0x3D4501C
	0x03DC81A4 STR W0, [X19 + 0x4]
	0x03DC81A8 B 0x3DC8FD4
	0x03DC81AC ADRP X8, 0x39D000
	0x03DC81B0 LDR X8, [X8 + 0x2F0]
	0x03DC81B4 ADD X0, X19, 0x8

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {13}
	004 Move W8, [X1+80]
	005 Add W31, W8, 1
	006 Move W1, W8
	007 Move X30, [X31+16]
	008 Call ComputedStyle.ApplyUnsetValue, X0, X1, X2
	009 Return 
	010 Move X30, [X31+16]
	011 Call ComputedStyle.RemoveCustomStyleProperty, X0, X1
	012 Return 
	013 Call 0x1C17F20

Method: System.Void ApplyUnsetValue(UnityEngine.UIElements.StyleSheets.StylePropertyId id, ref UnityEngine.UIElements.ComputedStyle parentStyle)

Disassembly:
	0x03DDECF8 BL 0x3DCA1CC
	0x03DDECFC MOVZ W8, 0x808
	0x03DDED00 ORR W8, W21, W8, 0x0
	0x03DDED04 FCMP S8, S0
	0x03DDED08 CSEL W21, W21, W8, EQ
	0x03DDED0C B 0x3DDED18
	0x03DDED10 MOVZ W8, 0x808
	0x03DDED14 ORR W21, W21, W8, 0x0
	0x03DDED18 MOV X0, X20
	0x03DDED1C BL 0x3DC9EF4
	0x03DDED20 MOV X0, X19
	0x03DDED24 MOV V8.16B, V0.16B
	0x03DDED28 MOV V9.16B, V1.16B
	0x03DDED2C MOV V10.16B, V2.16B
	0x03DDED30 MOV V11.16B, V3.16B
	0x03DDED34 BL 0x3DC9EF4
	0x03DDED38 FSUB S0, S8, S0
	0x03DDED3C FSUB S1, S9, S1
	0x03DDED40 FSUB S2, S10, S2
	0x03DDED44 LDR V4, [X24 + 0xF20]
	0x03DDED48 FMUL S0, S0, S0
	0x03DDED4C FMUL S1, S1, S1
	0x03DDED50 FSUB S3, S11, S3
	0x03DDED54 FMUL S2, S2, S2
	0x03DDED58 FADD S0, S0, S1
	0x03DDED5C FMUL S3, S3, S3
	0x03DDED60 FADD S0, S2, S0
	0x03DDED64 FADD S0, S3, S0
	0x03DDED68 ORR W8, W21, 0x2000
	0x03DDED6C FCMP S0, S4
	0x03DDED70 CSEL W21, W8, W21, PL
	0x03DDED74 TBNZ X21, 0xB, 0x3DDEE24
	0x03DDED78 MOV X0, X20
	0x03DDED7C BL 0x3DCA03C
	0x03DDED80 MOV W22, W0
	0x03DDED84 MOV X0, X19
	0x03DDED88 BL 0x3DCA03C
	0x03DDED8C CMP W22, W0
	0x03DDED90 B.NE 0x3DDEE20
	0x03DDED94 MOV X0, X20
	0x03DDED98 BL 0x3DCA0DC
	0x03DDED9C MOV W22, W0
	0x03DDEDA0 MOV X0, X19
	0x03DDEDA4 BL 0x3DCA0DC
	0x03DDEDA8 CMP W22, W0
	0x03DDEDAC B.NE 0x3DDEE20
	0x03DDEDB0 MOV X0, X20
	0x03DDEDB4 BL 0x3DCA12C
	0x03DDEDB8 MOV W22, W0
	0x03DDEDBC MOV X0, X19
	0x03DDEDC0 BL 0x3DCA12C
	0x03DDEDC4 CMP W22, W0
	0x03DDEDC8 B.NE 0x3DDEE20
	0x03DDEDCC MOV X0, X20
	0x03DDEDD0 BL 0x3DCA17C
	0x03DDEDD4 MOV W22, W0
	0x03DDEDD8 MOV X0, X19
	0x03DDEDDC BL 0x3DCA17C
	0x03DDEDE0 CMP W22, W0
	0x03DDEDE4 B.NE 0x3DDEE20
	0x03DDEDE8 MOV X0, X20
	0x03DDEDEC BL 0x3DCA21C
	0x03DDEDF0 MOV W22, W0
	0x03DDEDF4 MOV X0, X19
	0x03DDEDF8 BL 0x3DCA21C
	0x03DDEDFC CMP W22, W0
	0x03DDEE00 B.NE 0x3DDEE20
	0x03DDEE04 MOV X0, X20
	0x03DDEE08 BL 0x3DCA360
	0x03DDEE0C MOV W20, W0
	0x03DDEE10 MOV X0, X19
	0x03DDEE14 BL 0x3DCA360
	0x03DDEE18 CMP W20, W0
	0x03DDEE1C B.EQ 0x3DDEE24
	0x03DDEE20 ORR W21, W21, 0x800
	0x03DDEE24 MOV W0, W21
	0x03DDEE28 ADD X31, X31, 0x1C0
	0x03DDEE2C LDP X20, X19, [X31 + 0x70]
	0x03DDEE30 LDP X22, X21, [X31 + 0x60]
	0x03DDEE34 LDP X24, X23, [X31 + 0x50]
	0x03DDEE38 LDP X26, X25, [X31 + 0x40]
	0x03DDEE3C LDP X30, X27, [X31 + 0x30]
	0x03DDEE40 LDR X29, [X31 + 0x28]
	0x03DDEE44 LDP D9, D8, [X31 + 0x18]
	0x03DDEE48 LDP D11, D10, [X31 + 0x8]
	0x03DDEE4C LDR V12, [X31], #0x80
	0x03DDEE50 RET
	0x03DDEE54 ADD X8, X31, 0x80
	0x03DDEE58 MOV X0, X20
	0x03DDEE5C BL 0x3DC9CE4
	0x03DDEE60 ADD X8, X31, 0x1A0
	0x03DDEE64 MOV X0, X19
	0x03DDEE68 BL 0x3DC9CE4
	0x03DDEE6C LDR V0, [X31 + 0x8]
	0x03DDEE70 LDR W8, [X31 + 0x90]
	0x03DDEE74 LDR V1, [X26 + 0x2]
	0x03DDEE78 LDR W9, [X31 + 0x1B0]
	0x03DDEE7C ADD X0, X31, 0xC0
	0x03DDEE80 ADD X1, X31, 0xA0
	0x03DDEE84 MOV X2, X31
	0x03DDEE88 STR V0, [X25 + 0x4]
	0x03DDEE8C STR W8, [X31 + 0xD0]
	0x03DDEE90 STR V1, [X25 + 0x2]
	0x03DDEE94 STR W9, [X31 + 0xB0]
	0x03DDEE98 BL 0x3E007D4
	0x03DDEE9C ORR W8, W21, 0x200
	0x03DDEEA0 ANDS W31, W0, 0x1
	0x03DDEEA4 CSEL W21, W8, W21, NE
	0x03DDEEA8 B 0x3DDE8C4
	0x03DDEEAC MOV X0, X20
	0x03DDEEB0 BL 0x3DC99C4
	0x03DDEEB4 MOV X22, X0
	0x03DDEEB8 MOV X0, X19
	0x03DDEEBC BL 0x3DC99C4
	0x03DDEEC0 MOV X1, X0
	0x03DDEEC4 MOV X0, X22
	0x03DDEEC8 MOV X2, X31
	0x03DDEECC BL 0x3DFD53C
	0x03DDEED0 MOVZ W8, 0x880
	0x03DDEED4 ORR W8, W21, W8, 0x0
	0x03DDEED8 ANDS W31, W0, 0x1
	0x03DDEEDC CSEL W21, W8, W21, NE
	0x03DDEEE0 B 0x3DDEC74
	0x03DDEEE4 MOV X0, X20
	0x03DDEEE8 BL 0x3DC6E84
	0x03DDEEEC MOV X21, X0
	0x03DDEEF0 MOV X0, X19
	0x03DDEEF4 BL 0x3DC6E84
	0x03DDEEF8 MOV X1, X0
	0x03DDEEFC MOV X0, X21
	0x03DDEF00 MOV X2, X31
	0x03DDEF04 BL 0x3DFD53C
	0x03DDEF08 MOVZ W23, 0x28
	0x03DDEF0C TBNZ X0, 0x0, 0x3DDE444
	0x03DDEF10 MOV X0, X20
	0x03DDEF14 BL 0x3DC6E34
	0x03DDEF18 MOV X21, X0
	0x03DDEF1C MOV X0, X19
	0x03DDEF20 BL 0x3DC6E34
	0x03DDEF24 MOV X1, X0
	0x03DDEF28 MOV X0, X21
	0x03DDEF2C MOV X2, X31
	0x03DDEF30 BL 0x3DFD53C
	0x03DDEF34 ANDS W31, W0, 0x1
	0x03DDEF38 MOVZ W8, 0x20
	0x03DDEF3C CSEL W23, W23, W8, NE
	0x03DDEF40 B 0x3DDE444
	0x03DDEF44 STR X30, [X31 - 0x30]!
	0x03DDEF48 STP X22, X21, [X31 + 0x10]
	0x03DDEF4C STP X20, X19, [X31 + 0x20]
	0x03DDEF50 ADRP X22, 0x60A000
	0x03DDEF54 ADRP X21, 0x386000
	0x03DDEF58 ADRP X20, 0x38B000
	0x03DDEF5C LDRB W8, [X22 + 0x1C5]
	0x03DDEF60 LDR X21, [X21 + 0x3C8]
	0x03DDEF64 LDR X20, [X20 + 0x4A8]
	0x03DDEF68 MOV X19, X0
	0x03DDEF6C TBNZ X8, 0x0, 0x3DDEF90
	0x03DDEF70 ADRP X0, 0x386000
	0x03DDEF74 LDR X0, [X0 + 0x3C8]
	0x03DDEF78 BL 0x1C16CF4
	0x03DDEF7C ADRP X0, 0x38B000
	0x03DDEF80 LDR X0, [X0 + 0x4A8]
	0x03DDEF84 BL 0x1C16CF4
	0x03DDEF88 MOVZ W8, 0x1
	0x03DDEF8C STRB W8, [X22 + 0x1C5]
	0x03DDEF90 MOV X0, X19
	0x03DDEF94 MOV X1, X31
	0x03DDEF98 BL 0x3D1A8F8
	0x03DDEF9C LDR X0, [X21]
	0x03DDEFA0 BL 0x1C16F10
	0x03DDEFA4 LDR X2, [X20]
	0x03DDEFA8 MOV X1, X19
	0x03DDEFAC MOV X3, X31
	0x03DDEFB0 MOV X20, X0
	0x03DDEFB4 BL 0x2A6B948
	0x03DDEFB8 MOV X0, X19
	0x03DDEFBC MOV X1, X20
	0x03DDEFC0 LDP X20, X19, [X31 + 0x20]
	0x03DDEFC4 LDP X22, X21, [X31 + 0x10]
	0x03DDEFC8 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0x60B000
	008 Move W8, [X22+451]
	009 Move X19, X2
	010 Move W21, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x388000
	017 Move X0, [X0+768]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+451], W8
	021 Subtract W8, W21, 0x10000
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X9, -52711424
	024 Add X9, X9, 1206
	025 NotImplemented "Instruction ADR not yet implemented."
	026 Move W11, [X9]
	027 Add X10, X10, X11
	028 CallNoReturn X10
	029 Move X8, 0x388000
	030 Move X8, [X8+768]
	031 Move X0, X20
	032 Move X1, [X8]
	033 Call 0x266D4BC, X0
	034 Move X20, X0
	035 Move X0, X19
	036 Call ComputedStyle.get_color, X0
	037 Move [X20], S0
	038 Move [X20+8], S1
	039 Move [X20+8], S2
	040 Move [X20+16], S3
	041 Move X0, X20
	042 Move W1, W21
	043 Move X20, [X31+64]
	044 Move X19, [X31+72]
	045 Move X22, [X31+48]
	046 Move X21, [X31+56]
	047 Move X30, [X31+32]
	048 Add X31, X31, 80
	049 Call ComputedStyle.ApplyInitialValue, X0, X1
	050 Return 
	051 Move X8, 0x388000
	052 Move X8, [X8+768]
	053 Move X0, X20
	054 Move X1, [X8]
	055 Call 0x266D4BC, X0
	056 Move X20, X0
	057 Move X0, X19
	058 Call ComputedStyle.get_fontSize, X0
	059 Move [X20+16], X0
	060 Move X8, 0x388000
	061 Move X8, [X8+768]
	062 Move X0, X20
	063 Move X1, [X8]
	064 Call 0x266D4BC, X0
	065 Move X20, X0
	066 Move X0, X19
	067 Call ComputedStyle.get_letterSpacing, X0
	068 Move [X20+24], X0
	069 Move X8, 0x388000
	070 Move X8, [X8+768]
	071 Move X0, X20
	072 Move X1, [X8]
	073 Call 0x266D4BC, X0
	074 Move X20, X0
	075 Add X8, X31, 0
	076 Move X0, X19
	077 Call ComputedStyle.get_textShadow, X0
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 Move V1, [X31]
	080 Move [X20+44], V0
	081 Move [X20+2], V1
	082 Move X8, 0x388000
	083 Move X8, [X8+768]
	084 Move X0, X20
	085 Move X1, [X8]
	086 Call 0x266D4BC, X0
	087 Move X20, X0
	088 Move X0, X19
	089 Call ComputedStyle.get_unityFont, X0
	090 Move [X20+64], X0
	091 Move X8, 0x388000
	092 Move X8, [X8+768]
	093 Move X0, X20
	094 Move X1, [X8]
	095 Call 0x266D4BC, X0
	096 Move X20, X0
	097 Move X0, X19
	098 Call ComputedStyle.get_unityFontDefinition, X0
	099 Move [X20+72], X0
	100 Move [X20+80], X1
	101 Move X8, 0x388000
	102 Move X8, [X8+768]
	103 Move X0, X20
	104 Move X1, [X8]
	105 Call 0x266D4BC, X0
	106 Move X20, X0
	107 Move X0, X19
	108 Call ComputedStyle.get_unityFontStyleAndWeight, X0
	109 Move [X20+88], W0
	110 Move X8, 0x388000
	111 Move X8, [X8+768]
	112 Move X0, X20
	113 Move X1, [X8]
	114 Call 0x266D4BC, X0
	115 Move X20, X0
	116 Move X0, X19
	117 Call ComputedStyle.get_unityParagraphSpacing, X0
	118 Move [X20+92], X0
	119 Move X8, 0x388000
	120 Move X8, [X8+768]
	121 Move X0, X20
	122 Move X1, [X8]
	123 Call 0x266D4BC, X0
	124 Move X20, X0
	125 Move X0, X19
	126 Call ComputedStyle.get_unityTextAlign, X0
	127 Move [X20+100], W0
	128 Move X8, 0x388000
	129 Move X8, [X8+768]
	130 Move X0, X20
	131 Move X1, [X8]
	132 Call 0x266D4BC, X0
	133 Move X20, X0
	134 Move X0, X19
	135 Call ComputedStyle.get_unityTextOutlineColor, X0
	136 Move [X20+104], S0
	137 Move [X20+112], S1
	138 Move [X20+112], S2
	139 Move [X20+120], S3
	140 Move X8, 0x388000
	141 Move X8, [X8+768]
	142 Move X0, X20
	143 Move X1, [X8]
	144 Call 0x266D4BC, X0
	145 Move X20, X0
	146 Move X0, X19
	147 Call ComputedStyle.get_unityTextOutlineWidth, X0
	148 Move [X20+120], S0
	149 Move X8, 0x388000
	150 Move X8, [X8+768]
	151 Move X0, X20
	152 Move X1, [X8]
	153 Call 0x266D4BC, X0
	154 Move X20, X0
	155 Move X0, X19
	156 Call ComputedStyle.get_visibility, X0
	157 Move [X20+124], W0
	158 Move X8, 0x388000
	159 Move X8, [X8+768]
	160 Move X0, X20
	161 Move X1, [X8]
	162 Call 0x266D4BC, X0
	163 Move X20, X0
	164 Move X0, X19
	165 Call ComputedStyle.get_whiteSpace, X0
	166 Move [X20+128], W0
	167 Move X8, 0x388000
	168 Move X8, [X8+768]
	169 Move X0, X20
	170 Move X1, [X8]
	171 Call 0x266D4BC, X0
	172 Move X20, X0
	173 Move X0, X19
	174 Call ComputedStyle.get_wordSpacing, X0
	175 Move [X20+132], X0
	176 Move X20, [X31+64]
	177 Move X19, [X31+72]
	178 Move X22, [X31+48]
	179 Move X21, [X31+56]
	180 Move X30, [X31+32]
	181 Add X31, X31, 80
	182 Return 

Method: UnityEngine.UIElements.VersionChangeType CompareChanges(ref UnityEngine.UIElements.ComputedStyle x, ref UnityEngine.UIElements.ComputedStyle y)

Disassembly:
	0x03DDEFCC LDR X30, [X31], #0x30
	0x03DDEFD0 B 0x3D1E04C
	0x03DDEFD4 STR X30, [X31 - 0x20]!
	0x03DDEFD8 STP X20, X19, [X31 + 0x10]
	0x03DDEFDC ADRP X20, 0x60A000
	0x03DDEFE0 ADRP X19, 0x384000
	0x03DDEFE4 LDRB W8, [X20 + 0x1C6]
	0x03DDEFE8 LDR X19, [X19 + 0x6A8]
	0x03DDEFEC TBNZ X8, 0x0, 0x3DDF004
	0x03DDEFF0 ADRP X0, 0x384000
	0x03DDEFF4 LDR X0, [X0 + 0x6A8]
	0x03DDEFF8 BL 0x1C16CF4
	0x03DDEFFC MOVZ W8, 0x1
	0x03DDF000 STRB W8, [X20 + 0x1C6]
	0x03DDF004 LDR X0, [X19]
	0x03DDF008 LDR W8, [X0 + 0xE0]
	0x03DDF00C CBNZ W8, 0x3DDF018
	0x03DDF010 BL 0x1C16DFC
	0x03DDF014 LDR X0, [X19]
	0x03DDF018 LDR X8, [X0 + 0xB8]
	0x03DDF01C LDP X20, X19, [X31 + 0x10]
	0x03DDF020 LDR X0, [X8 + 0x8]
	0x03DDF024 LDR X30, [X31], #0x20
	0x03DDF028 RET
	0x03DDF02C LDRB W0, [X0 + 0x30]
	0x03DDF030 RET
	0x03DDF034 LDRB W0, [X0 + 0x31]
	0x03DDF038 RET
	0x03DDF03C STR X30, [X31 - 0x30]!
	0x03DDF040 STP X22, X21, [X31 + 0x10]
	0x03DDF044 STP X20, X19, [X31 + 0x20]
	0x03DDF048 MOV X20, X0
	0x03DDF04C LDR X0, [X0 + 0x28]
	0x03DDF050 CBZ X0, 0x3DDF0FC
	0x03DDF054 MOV W21, W2
	0x03DDF058 MOV X19, X1
	0x03DDF05C AND W22, W2, 0x200
	0x03DDF060 TBZ X2, 0xE, 0x3DDF070
	0x03DDF064 MOV X1, X19
	0x03DDF068 MOV X2, X31
	0x03DDF06C BL 0x3D25FF8
	0x03DDF070 UBFM W8, W21, 0x8, 0x1F
	0x03DDF074 ORR W8, W8, W21, 0xA
	0x03DDF078 AND W3, W8, 0x1
	0x03DDF07C ORR W8, W3, W22, 0x9
	0x03DDF080 CBZ W8, 0x3DDF0A0
	0x03DDF084 LDR X0, [X20 + 0x28]
	0x03DDF088 CBZ X0, 0x3DDF130
	0x03DDF08C CMP W22, 0x0
	0x03DDF090 CSET W2, NE
	0x03DDF094 MOV X1, X19
	0x03DDF098 MOV X4, X31
	0x03DDF09C BL 0x3D26310
	0x03DDF0A0 UBFM W8, W21, 0x6, 0x1F
	0x03DDF0A4 ORR W8, W8, W21, 0x7
	0x03DDF0A8 TBZ X8, 0x0, 0x3DDF0C4
	0x03DDF0AC LDR X0, [X20 + 0x28]
	0x03DDF0B0 CBZ X0, 0x3DDF130
	0x03DDF0B4 MOV X1, X19
	0x03DDF0B8 MOV W2, W31
	0x03DDF0BC MOV X3, X31
	0x03DDF0C0 BL 0x3D25BA8
	0x03DDF0C4 TBZ X21, 0xC, 0x3DDF0E0
	0x03DDF0C8 LDR X0, [X20 + 0x28]
	0x03DDF0CC CBZ X0, 0x3DDF130
	0x03DDF0D0 MOV X1, X19
	0x03DDF0D4 MOV W2, W31
	0x03DDF0D8 MOV X3, X31
	0x03DDF0DC BL 0x3D25C34
	0x03DDF0E0 TBZ X21, 0xD, 0x3DDF0F8
	0x03DDF0E4 LDR X0, [X20 + 0x28]
	0x03DDF0E8 CBZ X0, 0x3DDF130
	0x03DDF0EC MOV X1, X19
	0x03DDF0F0 MOV X2, X31
	0x03DDF0F4 BL 0x3D26290
	0x03DDF0F8 TBNZ X21, 0xB, 0x3DDF10C
	0x03DDF0FC LDP X20, X19, [X31 + 0x20]
	0x03DDF100 LDP X22, X21, [X31 + 0x10]
	0x03DDF104 LDR X30, [X31], #0x30
	0x03DDF108 RET
	0x03DDF10C LDR X0, [X20 + 0x28]
	0x03DDF110 CBZ X0, 0x3DDF130
	0x03DDF114 MOV X1, X19
	0x03DDF118 LDP X20, X19, [X31 + 0x20]
	0x03DDF11C LDP X22, X21, [X31 + 0x10]
	0x03DDF120 MOV W2, W31
	0x03DDF124 MOV X3, X31
	0x03DDF128 LDR X30, [X31], #0x30
	0x03DDF12C B 0x3D25CC0
	0x03DDF130 BL 0x1C16F20
	0x03DDF134 STP X30, X19, [X31 - 0x10]!
	0x03DDF138 MOV X19, X0
	0x03DDF13C LDR X0, [X0 + 0x28]
	0x03DDF140 CBZ X0, 0x3DDF14C
	0x03DDF144 CBNZ X0, 0x3DDF15C
	0x03DDF148 B 0x3DDF1E4
	0x03DDF14C MOV X0, X19
	0x03DDF150 BL 0x3DDF1F0
	0x03DDF154 LDR X0, [X19 + 0x28]
	0x03DDF158 CBZ X0, 0x3DDF1E4
	0x03DDF15C LDR X8, [X0 + 0x110]
	0x03DDF160 CBZ X8, 0x3DDF1E4
	0x03DDF164 MOV X1, X31
	0x03DDF168 BL 0x3D24390
	0x03DDF16C MOV X0, X19
	0x03DDF170 MOV X1, X31
	0x03DDF174 BL 0x3D1A824
	0x03DDF178 CBZ X0, 0x3DDF1EC
	0x03DDF17C LDRB W9, [X0 + 0x38]
	0x03DDF180 LDRB W8, [X0 + 0x39]
	0x03DDF184 ORR W10, W9, W8, 0x0
	0x03DDF188 TBZ X10, 0x0, 0x3DDF1B8
	0x03DDF18C LDP S0, S1, [X0 + 0x3C]
	0x03DDF190 LDP S2, S3, [X0 + 0x44]
	0x03DDF194 AND W1, W8, 0x1
	0x03DDF198 ADRP X8, 0xFFFFFFFFFCD0B000
	0x03DDF19C LDR V4, [X8 + 0x68]
	0x03DDF1A0 AND W0, W9, 0x1
	0x03DDF1A4 FMUL S0, S3, S0
	0x03DDF1A8 FMUL S1, S3, S1
	0x03DDF1AC FMUL S2, S3, S2
	0x03DDF1B0 MOV X2, X31
	0x03DDF1B4 BL 0x3C10410
	0x03DDF1B8 LDR X0, [X19 + 0x28]
	0x03DDF1BC CBZ X0, 0x3DDF1EC
	0x03DDF1C0 LDRB W9, [X19 + 0x30]
	0x03DDF1C4 LDR X8, [X0 + 0x110]
	0x03DDF1C8 STRB W9, [X0 + 0x218]
	0x03DDF1CC CBZ X8, 0x3DDF1EC
	0x03DDF1D0 LDRB W9, [X19 + 0x31]
	0x03DDF1D4 MOV X1, X31
	0x03DDF1D8 STRB W9, [X8 + 0xAC]
	0x03DDF1DC LDP X30, X19, [X31], #0x10
	0x03DDF1E0 B 0x3D24B4C
	0x03DDF1E4 LDP X30, X19, [X31], #0x10
	0x03DDF1E8 RET
	0x03DDF1EC BL 0x1C16F20
	0x03DDF1F0 STR X30, [X31 - 0x20]!
	0x03DDF1F4 STP X20, X19, [X31 + 0x10]
	0x03DDF1F8 LDR X8, [X0]
	0x03DDF1FC MOV X19, X0
	0x03DDF200 LDR X9, [X8 + 0x218]
	0x03DDF204 LDR X1, [X8 + 0x220]
	0x03DDF208 BLR X9
	0x03DDF20C LDR X8, [X19 + 0x20]
	0x03DDF210 STR X0, [X19 + 0x28]
	0x03DDF214 CBZ X8, 0x3DDF260
	0x03DDF218 LDR X9, [X8]
	0x03DDF21C MOV X0, X8
	0x03DDF220 LDR X10, [X9 + 0x398]
	0x03DDF224 LDR X1, [X9 + 0x3A0]
	0x03DDF228 BLR X10
	0x03DDF22C CBZ X0, 0x3DDF260
	0x03DDF230 LDR X0, [X19 + 0x20]
	0x03DDF234 CBZ X0, 0x3DDF2A8
	0x03DDF238 LDR X8, [X0]
	0x03DDF23C LDR X20, [X19 + 0x28]
	0x03DDF240 LDR X9, [X8 + 0x398]
	0x03DDF244 LDR X1, [X8 + 0x3A0]
	0x03DDF248 BLR X9
	0x03DDF24C CBZ X20, 0x3DDF2A8
	0x03DDF250 MOV X1, X0
	0x03DDF254 MOV X0, X20
	0x03DDF258 MOV X2, X31
	0x03DDF25C BL 0x3D259E4
	0x03DDF260 MOV X0, X19
	0x03DDF264 BL 0x3DDF9D8
	0x03DDF268 MOV X0, X19
	0x03DDF26C MOV X1, X31
	0x03DDF270 BL 0x3D1A824
	0x03DDF274 CBZ X0, 0x3DDF2A8
	0x03DDF278 LDR X8, [X0]
	0x03DDF27C LDR X9, [X8 + 0x3F8]
	0x03DDF280 LDR X1, [X8 + 0x400]
	0x03DDF284 BLR X9
	0x03DDF288 CBZ W0, 0x3DDF298
	0x03DDF28C LDP X20, X19, [X31 + 0x10]
	0x03DDF290 LDR X30, [X31], #0x20
	0x03DDF294 RET
	0x03DDF298 MOV X0, X19
	0x03DDF29C LDP X20, X19, [X31 + 0x10]
	0x03DDF2A0 LDR X30, [X31], #0x20
	0x03DDF2A4 B 0x3DDFB70
	0x03DDF2A8 BL 0x1C16F20
	0x03DDF2AC STP X30, X21, [X31 - 0x20]!
	0x03DDF2B0 STP X20, X19, [X31 + 0x10]
	0x03DDF2B4 ADRP X21, 0x609000
	0x03DDF2B8 ADRP X20, 0x385000
	0x03DDF2BC LDRB W8, [X21 + 0x1C7]
	0x03DDF2C0 LDR X20, [X20 + 0x658]
	0x03DDF2C4 MOV X19, X0
	0x03DDF2C8 TBNZ X8, 0x0, 0x3DDF2E0
	0x03DDF2CC ADRP X0, 0x385000
	0x03DDF2D0 LDR X0, [X0 + 0x658]
	0x03DDF2D4 BL 0x1C16CF4
	0x03DDF2D8 MOVZ W8, 0x1
	0x03DDF2DC STRB W8, [X21 + 0x1C7]
	0x03DDF2E0 MOV X0, X19
	0x03DDF2E4 MOV X1, X31
	0x03DDF2E8 BL 0x3D1A824
	0x03DDF2EC LDR X8, [X20]
	0x03DDF2F0 MOV X19, X0
	0x03DDF2F4 MOV X0, X8
	0x03DDF2F8 BL 0x1C16F10
	0x03DDF2FC MOV X1, X19
	0x03DDF300 MOV X2, X31
	0x03DDF304 MOV X20, X0
	0x03DDF308 BL 0x3D23724
	0x03DDF30C MOV X0, X20
	0x03DDF310 LDP X20, X19, [X31 + 0x10]
	0x03DDF314 LDP X30, X21, [X31], #0x20
	0x03DDF318 RET
	0x03DDF31C STR X30, [X31 - 0x40]!
	0x03DDF320 STP X24, X23, [X31 + 0x10]
	0x03DDF324 STP X22, X21, [X31 + 0x20]
	0x03DDF328 STP X20, X19, [X31 + 0x30]
	0x03DDF32C ADRP X24, 0x609000
	0x03DDF330 ADRP X23, 0x38A000
	0x03DDF334 ADRP X22, 0x383000
	0x03DDF338 ADRP X21, 0x314000
	0x03DDF33C ADRP X19, 0x38A000
	0x03DDF340 ADRP X20, 0x33D000
	0x03DDF344 LDRB W8, [X24 + 0x1C8]
	0x03DDF348 LDR X23, [X23 + 0x4B0]
	0x03DDF34C LDR X22, [X22 + 0x6A8]
	0x03DDF350 LDR X21, [X21 + 0xD28]
	0x03DDF354 LDR X19, [X19 + 0x4B8]
	0x03DDF358 LDR X20, [X20 + 0x820]
	0x03DDF35C TBNZ X8, 0x0, 0x3DDF3A4
	0x03DDF360 ADRP X0, 0x314000
	0x03DDF364 LDR X0, [X0 + 0xD28]
	0x03DDF368 BL 0x1C16CF4
	0x03DDF36C ADRP X0, 0x38A000
	0x03DDF370 LDR X0, [X0 + 0x4B8]
	0x03DDF374 BL 0x1C16CF4
	0x03DDF378 ADRP X0, 0x383000
	0x03DDF37C LDR X0, [X0 + 0x6A8]
	0x03DDF380 BL 0x1C16CF4
	0x03DDF384 ADRP X0, 0x33D000
	0x03DDF388 LDR X0, [X0 + 0x820]
	0x03DDF38C BL 0x1C16CF4
	0x03DDF390 ADRP X0, 0x38A000
	0x03DDF394 LDR X0, [X0 + 0x4B0]
	0x03DDF398 BL 0x1C16CF4
	0x03DDF39C MOVZ W8, 0x1
	0x03DDF3A0 STRB W8, [X24 + 0x1C8]
	0x03DDF3A4 LDR X8, [X22]
	0x03DDF3A8 LDR X9, [X23]
	0x03DDF3AC MOVZ W1, 0x1
	0x03DDF3B0 MOV W2, W31
	0x03DDF3B4 LDR X8, [X8 + 0xB8]
	0x03DDF3B8 MOV W3, W31
	0x03DDF3BC MOV X4, X31
	0x03DDF3C0 STR X9, [X8]
	0x03DDF3C4 LDR X8, [X22]
	0x03DDF3C8 LDR X8, [X8 + 0xB8]
	0x03DDF3CC LDR X0, [X8]
	0x03DDF3D0 BL 0x3BFE7FC
	0x03DDF3D4 LDR X8, [X22]
	0x03DDF3D8 LDR X8, [X8 + 0xB8]
	0x03DDF3DC STR X0, [X8 + 0x8]
	0x03DDF3E0 LDR X0, [X21]
	0x03DDF3E4 BL 0x1C16F10
	0x03DDF3E8 LDR X2, [X19]
	0x03DDF3EC MOV X1, X31
	0x03DDF3F0 MOV X3, X31
	0x03DDF3F4 MOV X19, X0
	0x03DDF3F8 BL 0x29818C8
	0x03DDF3FC LDR X0, [X20]
	0x03DDF400 LDR W8, [X0 + 0xE0]
	0x03DDF404 CBNZ W8, 0x3DDF40C
	0x03DDF408 BL 0x1C16DFC
	0x03DDF40C MOV X0, X19
	0x03DDF410 LDP X20, X19, [X31 + 0x30]
	0x03DDF414 LDP X22, X21, [X31 + 0x20]
	0x03DDF418 LDP X24, X23, [X31 + 0x10]
	0x03DDF41C MOV X1, X31
	0x03DDF420 LDR X30, [X31], #0x40
	0x03DDF424 B 0x3D1E78C
	0x03DDF428 SUB X31, X31, 0x90
	0x03DDF42C STP X30, X23, [X31 + 0x60]
	0x03DDF430 STP X22, X21, [X31 + 0x70]
	0x03DDF434 STP X20, X19, [X31 + 0x80]
	0x03DDF438 ADRP X20, 0x609000
	0x03DDF43C LDRB W8, [X20 + 0x1C9]
	0x03DDF440 MOV W19, W0
	0x03DDF444 TBNZ X8, 0x0, 0x3DDF498
	0x03DDF448 ADRP X0, 0x385000
	0x03DDF44C LDR X0, [X0 + 0x950]
	0x03DDF450 BL 0x1C16CF4
	0x03DDF454 ADRP X0, 0x385000
	0x03DDF458 LDR X0, [X0 + 0x958]
	0x03DDF45C BL 0x1C16CF4
	0x03DDF460 ADRP X0, 0x385000
	0x03DDF464 LDR X0, [X0 + 0x960]
	0x03DDF468 BL 0x1C16CF4
	0x03DDF46C ADRP X0, 0x33D000
	0x03DDF470 LDR X0, [X0 + 0xE98]
	0x03DDF474 BL 0x1C16CF4
	0x03DDF478 ADRP X0, 0x383000
	0x03DDF47C LDR X0, [X0 + 0x6A8]
	0x03DDF480 BL 0x1C16CF4
	0x03DDF484 ADRP X0, 0x385000
	0x03DDF488 LDR X0, [X0 + 0x6F8]
	0x03DDF48C BL 0x1C16CF4
	0x03DDF490 MOVZ W8, 0x1
	0x03DDF494 STRB W8, [X20 + 0x1C9]
	0x03DDF498 ADRP X20, 0x33D000
	0x03DDF49C ADRP X21, 0x385000
	0x03DDF4A0 LDR X20, [X20 + 0xE98]
	0x03DDF4A4 LDR X21, [X21 + 0x6F8]
	0x03DDF4A8 MOVI V0.2D, 0x0
	0x03DDF4AC STR X31, [X31 + 0x50]
	0x03DDF4B0 STP V0, V0, [X31 + 0x30]
	0x03DDF4B4 TBNZ X19, 0x0, 0x3DDF4D0
	0x03DDF4B8 LDR X0, [X21]
	0x03DDF4BC LDR W8, [X0 + 0xE0]
	0x03DDF4C0 CBNZ W8, 0x3DDF4C8
	0x03DDF4C4 BL 0x1C16DFC
	0x03DDF4C8 MOV X0, X31
	0x03DDF4CC BL 0x3D33D70
	0x03DDF4D0 LDR X0, [X20]
	0x03DDF4D4 ADRP X22, 0x385000
	0x03DDF4D8 LDR W8, [X0 + 0xE0]
	0x03DDF4DC LDR X22, [X22 + 0x950]
	0x03DDF4E0 CBNZ W8, 0x3DDF4E8
	0x03DDF4E4 BL 0x1C16DFC
	0x03DDF4E8 ADD X8, X31, 0x8
	0x03DDF4EC MOV X0, X31
	0x03DDF4F0 BL 0x3E194D0
	0x03DDF4F4 LDUR V0, [X31 + 0x8]
	0x03DDF4F8 LDUR V1, [X31 + 0x18]
	0x03DDF4FC LDR X8, [X31 + 0x28]
	0x03DDF500 LDR X1, [X22]
	0x03DDF504 ADD X0, X31, 0x30
	0x03DDF508 STP V0, V1, [X31 + 0x30]
	0x03DDF50C STR X8, [X31 + 0x50]
	0x03DDF510 BL 0x2BF5330
	0x03DDF514 TBZ X0, 0x0, 0x3DDF5BC
	0x03DDF518 ADRP X23, 0x383000
	0x03DDF51C LDR X23, [X23 + 0x6A8]
	0x03DDF520 MOV X20, X31
	0x03DDF524 LDR X0, [X31 + 0x48]
	0x03DDF528 CBZ X0, 0x3DDF5F4
	0x03DDF52C LDR X8, [X0]
	0x03DDF530 TBNZ X19, 0x0, 0x3DDF58C
	0x03DDF534 LDR X9, [X8 + 0x438]
	0x03DDF538 LDR X2, [X8 + 0x440]
	0x03DDF53C MOVZ W1, 0x6
	0x03DDF540 BLR X9
	0x03DDF544 CBZ X0, 0x3DDF578
	0x03DDF548 LDR X9, [X0]
	0x03DDF54C LDR X8, [X23]
	0x03DDF550 LDRB W11, [X9 + 0x130]
	0x03DDF554 LDRB W10, [X8 + 0x130]
	0x03DDF558 CMP W11, W10
	0x03DDF55C B.CC 0x3DDF578
	0x03DDF560 LDR X9, [X9 + 0xC8]
	0x03DDF564 ADD X9, X9, X10, 0x3, LSL
	0x03DDF568 LDUR X9, [X9 - 0x8]
	0x03DDF56C CMP X9, X8
	0x03DDF570 B.NE 0x3DDF578
	0x03DDF574 BL 0x3DDF5F8
	0x03DDF578 LDR X1, [X22]
	0x03DDF57C ADD X0, X31, 0x30
	0x03DDF580 BL 0x2BF5330
	0x03DDF584 TBNZ X0, 0x0, 0x3DDF524
	0x03DDF588 B 0x3DDF5BC
	0x03DDF58C LDR X9, [X8 + 0x468]
	0x03DDF590 LDR X1, [X8 + 0x470]
	0x03DDF594 BLR X9
	0x03DDF598 CMP X0, 0x0
	0x03DDF59C CSEL X20, X20, X0, EQ
	0x03DDF5A0 CBZ X0, 0x3DDF578
	0x03DDF5A4 CBZ X20, 0x3DDF5F4
	0x03DDF5A8 LDR X8, [X20]
	0x03DDF5AC MOV X0, X20
	0x03DDF5B0 LDP X9, X1, [X8 + 0x198]
	0x03DDF5B4 BLR X9
	0x03DDF5B8 B 0x3DDF578
	0x03DDF5BC LDR X0, [X21]
	0x03DDF5C0 LDR W8, [X0 + 0xE0]
	0x03DDF5C4 CBNZ W8, 0x3DDF5CC
	0x03DDF5C8 BL 0x1C16DFC
	0x03DDF5CC MOV X0, X31
	0x03DDF5D0 TBZ X19, 0x0, 0x3DDF5DC
	0x03DDF5D4 BL 0x3D33EF8
	0x03DDF5D8 B 0x3DDF5E0
	0x03DDF5DC BL 0x3D33F58
	0x03DDF5E0 LDP X20, X19, [X31 + 0x80]
	0x03DDF5E4 LDP X22, X21, [X31 + 0x70]
	0x03DDF5E8 LDP X30, X23, [X31 + 0x60]
	0x03DDF5EC ADD X31, X31, 0x90
	0x03DDF5F0 RET
	0x03DDF5F4 BL 0x1C16F20
	0x03DDF5F8 STP X30, X19, [X31 - 0x10]!
	0x03DDF5FC MOV X19, X0
	0x03DDF600 LDR X0, [X0 + 0x28]
	0x03DDF604 CBZ X0, 0x3DDF63C
	0x03DDF608 MOV X1, X31
	0x03DDF60C BL 0x3D242F4
	0x03DDF610 LDR X0, [X19 + 0x20]
	0x03DDF614 STR X31, [X19 + 0x28]
	0x03DDF618 CBZ X0, 0x3DDF644
	0x03DDF61C LDR X8, [X0]
	0x03DDF620 LDR X9, [X8 + 0x398]
	0x03DDF624 LDR X1, [X8 + 0x3A0]
	0x03DDF628 BLR X9
	0x03DDF62C MOV X1, X0
	0x03DDF630 MOV X0, X19
	0x03DDF634 LDP X30, X19, [X31], #0x10
	0x03DDF638 B 0x3DDFD08
	0x03DDF63C LDP X30, X19, [X31], #0x10
	0x03DDF640 RET
	0x03DDF644 BL 0x1C16F20
	0x03DDF648 STP X30, X19, [X31 - 0x10]!
	0x03DDF64C MOV X19, X0
	0x03DDF650 BL 0x3DDF660
	0x03DDF654 MOV X0, X19
	0x03DDF658 LDP X30, X19, [X31], #0x10
	0x03DDF65C B 0x3DDF7F4
	0x03DDF660 STP X30, X23, [X31 - 0x30]!
	0x03DDF664 STP X22, X21, [X31 + 0x10]
	0x03DDF668 STP X20, X19, [X31 + 0x20]
	0x03DDF66C ADRP X20, 0x609000
	0x03DDF670 LDRB W8, [X20 + 0x1CB]
	0x03DDF674 MOV X19, X0
	0x03DDF678 TBNZ X8, 0x0, 0x3DDF6CC
	0x03DDF67C ADRP X0, 0x315000
	0x03DDF680 LDR X0, [X0 + 0xE70]
	0x03DDF684 BL 0x1C16CF4
	0x03DDF688 ADRP X0, 0x389000
	0x03DDF68C LDR X0, [X0 + 0xF90]
	0x03DDF690 BL 0x1C16CF4
	0x03DDF694 ADRP X0, 0x38A000
	0x03DDF698 LDR X0, [X0 + 0x4C0]
	0x03DDF69C BL 0x1C16CF4
	0x03DDF6A0 ADRP X0, 0x38A000
	0x03DDF6A4 LDR X0, [X0 + 0x4C8]
	0x03DDF6A8 BL 0x1C16CF4
	0x03DDF6AC ADRP X0, 0x38A000
	0x03DDF6B0 LDR X0, [X0 + 0x4D0]
	0x03DDF6B4 BL 0x1C16CF4
	0x03DDF6B8 ADRP X0, 0x38A000
	0x03DDF6BC LDR X0, [X0 + 0x4D8]
	0x03DDF6C0 BL 0x1C16CF4
	0x03DDF6C4 MOVZ W8, 0x1
	0x03DDF6C8 STRB W8, [X20 + 0x1CB]
	0x03DDF6CC LDR X8, [X19 + 0x20]
	0x03DDF6D0 CBZ X8, 0x3DDF7E0
	0x03DDF6D4 ADRP X22, 0x315000
	0x03DDF6D8 ADRP X21, 0x38A000
	0x03DDF6DC LDR X22, [X22 + 0xE70]
	0x03DDF6E0 LDR X21, [X21 + 0x4C0]
	0x03DDF6E4 MOV X0, X19
	0x03DDF6E8 BL 0x3DDF5F8
	0x03DDF6EC LDR X0, [X22]
	0x03DDF6F0 LDR X20, [X19 + 0x20]
	0x03DDF6F4 BL 0x1C16F10
	0x03DDF6F8 LDR X2, [X21]
	0x03DDF6FC MOV X1, X19
	0x03DDF700 MOV X3, X31
	0x03DDF704 MOV X21, X0
	0x03DDF708 BL 0x3314368
	0x03DDF70C CBZ X20, 0x3DDF7F0
	0x03DDF710 ADRP X23, 0x38A000
	0x03DDF714 LDR X23, [X23 + 0x4D0]
	0x03DDF718 MOV X0, X20
	0x03DDF71C MOV X1, X21
	0x03DDF720 MOV X2, X31
	0x03DDF724 BL 0x3DBC630
	0x03DDF728 LDR X0, [X22]
	0x03DDF72C LDR X20, [X19 + 0x20]
	0x03DDF730 BL 0x1C16F10
	0x03DDF734 LDR X2, [X23]
	0x03DDF738 MOV X1, X19
	0x03DDF73C MOV X3, X31
	0x03DDF740 MOV X21, X0
	0x03DDF744 BL 0x3314368
	0x03DDF748 CBZ X20, 0x3DDF7F0
	0x03DDF74C ADRP X23, 0x38A000
	0x03DDF750 LDR X23, [X23 + 0x4D8]
	0x03DDF754 MOV X0, X20
	0x03DDF758 MOV X1, X21
	0x03DDF75C MOV X2, X31
	0x03DDF760 BL 0x3DBC3C0
	0x03DDF764 LDR X0, [X22]
	0x03DDF768 LDR X20, [X19 + 0x20]
	0x03DDF76C BL 0x1C16F10
	0x03DDF770 LDR X2, [X23]
	0x03DDF774 MOV X1, X19
	0x03DDF778 MOV X3, X31
	0x03DDF77C MOV X21, X0
	0x03DDF780 BL 0x3314368
	0x03DDF784 CBZ X20, 0x3DDF7F0
	0x03DDF788 ADRP X22, 0x389000
	0x03DDF78C ADRP X23, 0x38A000
	0x03DDF790 LDR X22, [X22 + 0xF90]
	0x03DDF794 LDR X23, [X23 + 0x4C8]
	0x03DDF798 MOV X0, X20
	0x03DDF79C MOV X1, X21
	0x03DDF7A0 MOV X2, X31
	0x03DDF7A4 BL 0x3DBC4F8
	0x03DDF7A8 LDR X0, [X22]
	0x03DDF7AC LDR X20, [X19 + 0x20]
	0x03DDF7B0 BL 0x1C16F10
	0x03DDF7B4 LDR X2, [X23]
	0x03DDF7B8 MOV X1, X19
	0x03DDF7BC MOV X3, X31
	0x03DDF7C0 MOV X21, X0
	0x03DDF7C4 BL 0x3DBB974
	0x03DDF7C8 CBZ X20, 0x3DDF7F0
	0x03DDF7CC MOV X0, X20
	0x03DDF7D0 MOV X1, X21
	0x03DDF7D4 MOV X2, X31
	0x03DDF7D8 BL 0x3DBC7A0
	0x03DDF7DC STR X31, [X19 + 0x20]
	0x03DDF7E0 LDP X20, X19, [X31 + 0x20]
	0x03DDF7E4 LDP X22, X21, [X31 + 0x10]
	0x03DDF7E8 LDP X30, X23, [X31], #0x30
	0x03DDF7EC RET
	0x03DDF7F0 BL 0x1C16F20
	0x03DDF7F4 STP X30, X23, [X31 - 0x30]!
	0x03DDF7F8 STP X22, X21, [X31 + 0x10]
	0x03DDF7FC STP X20, X19, [X31 + 0x20]
	0x03DDF800 ADRP X21, 0x609000
	0x03DDF804 ADRP X20, 0x314000
	0x03DDF808 LDRB W8, [X21 + 0x1CA]
	0x03DDF80C LDR X20, [X20 + 0xA28]
	0x03DDF810 MOV X19, X0
	0x03DDF814 TBNZ X8, 0x0, 0x3DDF874
	0x03DDF818 ADRP X0, 0x315000
	0x03DDF81C LDR X0, [X0 + 0xE70]
	0x03DDF820 BL 0x1C16CF4
	0x03DDF824 ADRP X0, 0x314000
	0x03DDF828 LDR X0, [X0 + 0xA28]
	0x03DDF82C BL 0x1C16CF4
	0x03DDF830 ADRP X0, 0x389000
	0x03DDF834 LDR X0, [X0 + 0xF90]
	0x03DDF838 BL 0x1C16CF4
	0x03DDF83C ADRP X0, 0x38A000
	0x03DDF840 LDR X0, [X0 + 0x4C0]
	0x03DDF844 BL 0x1C16CF4
	0x03DDF848 ADRP X0, 0x38A000
	0x03DDF84C LDR X0, [X0 + 0x4C8]
	0x03DDF850 BL 0x1C16CF4
	0x03DDF854 ADRP X0, 0x38A000
	0x03DDF858 LDR X0, [X0 + 0x4D0]
	0x03DDF85C BL 0x1C16CF4
	0x03DDF860 ADRP X0, 0x38A000
	0x03DDF864 LDR X0, [X0 + 0x4D8]
	0x03DDF868 BL 0x1C16CF4
	0x03DDF86C MOVZ W8, 0x1
	0x03DDF870 STRB W8, [X21 + 0x1CA]
	0x03DDF874 LDR X0, [X20]
	0x03DDF878 LDR X20, [X19 + 0x20]
	0x03DDF87C LDR W8, [X0 + 0xE0]
	0x03DDF880 CBNZ W8, 0x3DDF888
	0x03DDF884 BL 0x1C16DFC
	0x03DDF888 CMP X20, 0x0
	0x03DDF88C CSET W0, EQ
	0x03DDF890 MOV X1, X31
	0x03DDF894 BL 0x3C06E58
	0x03DDF898 MOV X0, X19
	0x03DDF89C MOV X1, X31
	0x03DDF8A0 BL 0x3D1A824
	0x03DDF8A4 CBZ X0, 0x3DDF9C4
	0x03DDF8A8 ADRP X22, 0x315000
	0x03DDF8AC ADRP X21, 0x38A000
	0x03DDF8B0 LDR X22, [X22 + 0xE70]
	0x03DDF8B4 LDR X21, [X21 + 0x4C0]
	0x03DDF8B8 MOV X0, X19
	0x03DDF8BC MOV X1, X31
	0x03DDF8C0 BL 0x3D1A824
	0x03DDF8C4 STR X0, [X19 + 0x20]
	0x03DDF8C8 MOV X20, X0
	0x03DDF8CC LDR X0, [X22]
	0x03DDF8D0 BL 0x1C16F10
	0x03DDF8D4 LDR X2, [X21]
	0x03DDF8D8 MOV X1, X19
	0x03DDF8DC MOV X3, X31
	0x03DDF8E0 MOV X21, X0
	0x03DDF8E4 BL 0x3314368
	0x03DDF8E8 CBZ X20, 0x3DDF9D4
	0x03DDF8EC ADRP X23, 0x38A000
	0x03DDF8F0 LDR X23, [X23 + 0x4D0]
	0x03DDF8F4 MOV X0, X20
	0x03DDF8F8 MOV X1, X21
	0x03DDF8FC MOV X2, X31
	0x03DDF900 BL 0x3DBC594
	0x03DDF904 LDR X0, [X22]
	0x03DDF908 LDR X20, [X19 + 0x20]
	0x03DDF90C BL 0x1C16F10
	0x03DDF910 LDR X2, [X23]
	0x03DDF914 MOV X1, X19
	0x03DDF918 MOV X3, X31
	0x03DDF91C MOV X21, X0
	0x03DDF920 BL 0x3314368
	0x03DDF924 CBZ X20, 0x3DDF9D4
	0x03DDF928 ADRP X23, 0x38A000
	0x03DDF92C LDR X23, [X23 + 0x4D8]
	0x03DDF930 MOV X0, X20
	0x03DDF934 MOV X1, X21
	0x03DDF938 MOV X2, X31
	0x03DDF93C BL 0x3DBC324
	0x03DDF940 LDR X0, [X22]
	0x03DDF944 LDR X20, [X19 + 0x20]
	0x03DDF948 BL 0x1C16F10
	0x03DDF94C LDR X2, [X23]
	0x03DDF950 MOV X1, X19
	0x03DDF954 MOV X3, X31
	0x03DDF958 MOV X21, X0
	0x03DDF95C BL 0x3314368
	0x03DDF960 CBZ X20, 0x3DDF9D4
	0x03DDF964 ADRP X22, 0x389000
	0x03DDF968 ADRP X23, 0x38A000
	0x03DDF96C LDR X22, [X22 + 0xF90]
	0x03DDF970 LDR X23, [X23 + 0x4C8]
	0x03DDF974 MOV X0, X20
	0x03DDF978 MOV X1, X21
	0x03DDF97C MOV X2, X31
	0x03DDF980 BL 0x3DBC45C
	0x03DDF984 LDR X0, [X22]
	0x03DDF988 LDR X20, [X19 + 0x20]
	0x03DDF98C BL 0x1C16F10
	0x03DDF990 LDR X2, [X23]
	0x03DDF994 MOV X1, X19
	0x03DDF998 MOV X3, X31
	0x03DDF99C MOV X21, X0
	0x03DDF9A0 BL 0x3DBB974
	0x03DDF9A4 CBZ X20, 0x3DDF9D4
	0x03DDF9A8 MOV X0, X20
	0x03DDF9AC MOV X1, X21
	0x03DDF9B0 LDP X20, X19, [X31 + 0x20]
	0x03DDF9B4 LDP X22, X21, [X31 + 0x10]
	0x03DDF9B8 MOV X2, X31
	0x03DDF9BC LDP X30, X23, [X31], #0x30
	0x03DDF9C0 B 0x3DBC704
	0x03DDF9C4 LDP X20, X19, [X31 + 0x20]
	0x03DDF9C8 LDP X22, X21, [X31 + 0x10]
	0x03DDF9CC LDP X30, X23, [X31], #0x30
	0x03DDF9D0 RET
	0x03DDF9D4 BL 0x1C16F20
	0x03DDF9D8 STP X30, X21, [X31 - 0x20]!
	0x03DDF9DC STP X20, X19, [X31 + 0x10]
	0x03DDF9E0 ADRP X20, 0x609000
	0x03DDF9E4 LDRB W8, [X20 + 0x1CC]
	0x03DDF9E8 MOV X19, X0
	0x03DDF9EC TBNZ X8, 0x0, 0x3DDFA28
	0x03DDF9F0 ADRP X0, 0x314000
	0x03DDF9F4 LDR X0, [X0 + 0xA28]
	0x03DDF9F8 BL 0x1C16CF4
	0x03DDF9FC ADRP X0, 0x314000
	0x03DDFA00 LDR X0, [X0 + 0x598]
	0x03DDFA04 BL 0x1C16CF4
	0x03DDFA08 ADRP X0, 0x33E000
	0x03DDFA0C LDR X0, [X0 + 0x240]
	0x03DDFA10 BL 0x1C16CF4
	0x03DDFA14 ADRP X0, 0x38A000
	0x03DDFA18 LDR X0, [X0 + 0x4E0]
	0x03DDFA1C BL 0x1C16CF4
	0x03DDFA20 MOVZ W8, 0x1
	0x03DDFA24 STRB W8, [X20 + 0x1CC]
	0x03DDFA28 LDR X8, [X19 + 0x28]
	0x03DDFA2C CBZ X8, 0x3DDFB60
	0x03DDFA30 MOV X0, X19
	0x03DDFA34 MOV X1, X31
	0x03DDFA38 BL 0x3D1A824
	0x03DDFA3C CBZ X0, 0x3DDFB6C
	0x03DDFA40 LDR X8, [X0]
	0x03DDFA44 ADRP X21, 0x314000
	0x03DDFA48 LDR X9, [X8 + 0x448]
	0x03DDFA4C LDR X1, [X8 + 0x450]
	0x03DDFA50 LDR X21, [X21 + 0x598]
	0x03DDFA54 BLR X9
	0x03DDFA58 LDR X8, [X21]
	0x03DDFA5C MOV X20, X0
	0x03DDFA60 LDR W9, [X8 + 0xE0]
	0x03DDFA64 CBNZ W9, 0x3DDFA70
	0x03DDFA68 MOV X0, X8
	0x03DDFA6C BL 0x1C16DFC
	0x03DDFA70 MOV X0, X20
	0x03DDFA74 MOV X1, X31
	0x03DDFA78 MOV X2, X31
	0x03DDFA7C BL 0x3C3883C
	0x03DDFA80 TBZ X0, 0x0, 0x3DDFB44
	0x03DDFA84 ADRP X20, 0x33E000
	0x03DDFA88 LDR X20, [X20 + 0x240]
	0x03DDFA8C LDR X0, [X20]
	0x03DDFA90 LDR W8, [X0 + 0xE0]
	0x03DDFA94 CBNZ W8, 0x3DDFAA0
	0x03DDFA98 BL 0x1C16DFC
	0x03DDFA9C LDR X0, [X20]
	0x03DDFAA0 LDR X8, [X0 + 0xB8]
	0x03DDFAA4 MOV X1, X31
	0x03DDFAA8 LDR X0, [X8]
	0x03DDFAAC BL 0x3C13E40
	0x03DDFAB0 LDR X8, [X21]
	0x03DDFAB4 MOV X20, X0
	0x03DDFAB8 LDR W9, [X8 + 0xE0]
	0x03DDFABC CBNZ W9, 0x3DDFAC8
	0x03DDFAC0 MOV X0, X8
	0x03DDFAC4 BL 0x1C16DFC
	0x03DDFAC8 MOV X0, X20
	0x03DDFACC MOV X1, X31
	0x03DDFAD0 MOV X2, X31
	0x03DDFAD4 BL 0x3C354F8
	0x03DDFAD8 ADRP X8, 0x314000
	0x03DDFADC LDR X8, [X8 + 0xA28]
	0x03DDFAE0 MOV W21, W0
	0x03DDFAE4 LDR X8, [X8]
	0x03DDFAE8 LDR W9, [X8 + 0xE0]
	0x03DDFAEC CBNZ W9, 0x3DDFAF8
	0x03DDFAF0 MOV X0, X8
	0x03DDFAF4 BL 0x1C16DFC
	0x03DDFAF8 ADRP X8, 0x38A000
	0x03DDFAFC LDR X8, [X8 + 0x4E0]
	0x03DDFB00 AND W0, W21, 0x1
	0x03DDFB04 MOV X2, X31
	0x03DDFB08 LDR X1, [X8]
	0x03DDFB0C BL 0x3C06F88
	0x03DDFB10 MOV X0, X20
	0x03DDFB14 MOV X1, X31
	0x03DDFB18 MOV X2, X31
	0x03DDFB1C BL 0x3C354F8
	0x03DDFB20 TBZ X0, 0x0, 0x3DDFB44
	0x03DDFB24 CBZ X20, 0x3DDFB6C
	0x03DDFB28 MOV X0, X20
	0x03DDFB2C MOV X1, X31
	0x03DDFB30 BL 0x3C396B0
	0x03DDFB34 ORR W1, W0, 0x4
	0x03DDFB38 MOV X0, X20
	0x03DDFB3C MOV X2, X31
	0x03DDFB40 BL 0x3C396EC
	0x03DDFB44 LDR X0, [X19 + 0x28]
	0x03DDFB48 CBZ X0, 0x3DDFB6C
	0x03DDFB4C MOV X1, X20
	0x03DDFB50 LDP X20, X19, [X31 + 0x10]
	0x03DDFB54 MOV X2, X31
	0x03DDFB58 LDP X30, X21, [X31], #0x20
	0x03DDFB5C B 0x3D264C8
	0x03DDFB60 LDP X20, X19, [X31 + 0x10]
	0x03DDFB64 LDP X30, X21, [X31], #0x20
	0x03DDFB68 RET
	0x03DDFB6C BL 0x1C16F20
	0x03DDFB70 STP X30, X21, [X31 - 0x20]!
	0x03DDFB74 STP X20, X19, [X31 + 0x10]
	0x03DDFB78 ADRP X20, 0x609000
	0x03DDFB7C LDRB W8, [X20 + 0x1CD]
	0x03DDFB80 MOV X19, X0
	0x03DDFB84 TBNZ X8, 0x0, 0x3DDFBC0
	0x03DDFB88 ADRP X0, 0x314000
	0x03DDFB8C LDR X0, [X0 + 0xA28]
	0x03DDFB90 BL 0x1C16CF4
	0x03DDFB94 ADRP X0, 0x314000
	0x03DDFB98 LDR X0, [X0 + 0x598]
	0x03DDFB9C BL 0x1C16CF4
	0x03DDFBA0 ADRP X0, 0x33E000
	0x03DDFBA4 LDR X0, [X0 + 0x240]
	0x03DDFBA8 BL 0x1C16CF4
	0x03DDFBAC ADRP X0, 0x38A000
	0x03DDFBB0 LDR X0, [X0 + 0x4E8]
	0x03DDFBB4 BL 0x1C16CF4
	0x03DDFBB8 MOVZ W8, 0x1
	0x03DDFBBC STRB W8, [X20 + 0x1CD]
	0x03DDFBC0 LDR X8, [X19 + 0x28]
	0x03DDFBC4 CBZ X8, 0x3DDFCF8
	0x03DDFBC8 MOV X0, X19
	0x03DDFBCC MOV X1, X31
	0x03DDFBD0 BL 0x3D1A824
	0x03DDFBD4 CBZ X0, 0x3DDFD04
	0x03DDFBD8 LDR X8, [X0]
	0x03DDFBDC ADRP X21, 0x314000
	0x03DDFBE0 LDR X9, [X8 + 0x458]
	0x03DDFBE4 LDR X1, [X8 + 0x460]
	0x03DDFBE8 LDR X21, [X21 + 0x598]
	0x03DDFBEC BLR X9
	0x03DDFBF0 LDR X8, [X21]
	0x03DDFBF4 MOV X20, X0
	0x03DDFBF8 LDR W9, [X8 + 0xE0]
	0x03DDFBFC CBNZ W9, 0x3DDFC08
	0x03DDFC00 MOV X0, X8
	0x03DDFC04 BL 0x1C16DFC
	0x03DDFC08 MOV X0, X20
	0x03DDFC0C MOV X1, X31
	0x03DDFC10 MOV X2, X31
	0x03DDFC14 BL 0x3C3883C
	0x03DDFC18 TBZ X0, 0x0, 0x3DDFCDC
	0x03DDFC1C ADRP X20, 0x33E000
	0x03DDFC20 LDR X20, [X20 + 0x240]
	0x03DDFC24 LDR X0, [X20]
	0x03DDFC28 LDR W8, [X0 + 0xE0]
	0x03DDFC2C CBNZ W8, 0x3DDFC38
	0x03DDFC30 BL 0x1C16DFC
	0x03DDFC34 LDR X0, [X20]
	0x03DDFC38 LDR X8, [X0 + 0xB8]
	0x03DDFC3C MOV X1, X31
	0x03DDFC40 LDR X0, [X8 + 0x8]
	0x03DDFC44 BL 0x3C13E40
	0x03DDFC48 LDR X8, [X21]
	0x03DDFC4C MOV X20, X0
	0x03DDFC50 LDR W9, [X8 + 0xE0]
	0x03DDFC54 CBNZ W9, 0x3DDFC60
	0x03DDFC58 MOV X0, X8
	0x03DDFC5C BL 0x1C16DFC
	0x03DDFC60 MOV X0, X20
	0x03DDFC64 MOV X1, X31
	0x03DDFC68 MOV X2, X31
	0x03DDFC6C BL 0x3C354F8
	0x03DDFC70 ADRP X8, 0x314000
	0x03DDFC74 LDR X8, [X8 + 0xA28]
	0x03DDFC78 MOV W21, W0
	0x03DDFC7C LDR X8, [X8]
	0x03DDFC80 LDR W9, [X8 + 0xE0]
	0x03DDFC84 CBNZ W9, 0x3DDFC90
	0x03DDFC88 MOV X0, X8
	0x03DDFC8C BL 0x1C16DFC
	0x03DDFC90 ADRP X8, 0x38A000
	0x03DDFC94 LDR X8, [X8 + 0x4E8]
	0x03DDFC98 AND W0, W21, 0x1
	0x03DDFC9C MOV X2, X31
	0x03DDFCA0 LDR X1, [X8]
	0x03DDFCA4 BL 0x3C06F88
	0x03DDFCA8 MOV X0, X20
	0x03DDFCAC MOV X1, X31
	0x03DDFCB0 MOV X2, X31
	0x03DDFCB4 BL 0x3C354F8
	0x03DDFCB8 TBZ X0, 0x0, 0x3DDFCDC
	0x03DDFCBC CBZ X20, 0x3DDFD04
	0x03DDFCC0 MOV X0, X20
	0x03DDFCC4 MOV X1, X31
	0x03DDFCC8 BL 0x3C396B0
	0x03DDFCCC ORR W1, W0, 0x4
	0x03DDFCD0 MOV X0, X20
	0x03DDFCD4 MOV X2, X31
	0x03DDFCD8 BL 0x3C396EC
	0x03DDFCDC LDR X0, [X19 + 0x28]
	0x03DDFCE0 CBZ X0, 0x3DDFD04
	0x03DDFCE4 MOV X1, X20
	0x03DDFCE8 LDP X20, X19, [X31 + 0x10]
	0x03DDFCEC MOV X2, X31
	0x03DDFCF0 LDP X30, X21, [X31], #0x20
	0x03DDFCF4 B 0x3D26578
	0x03DDFCF8 LDP X20, X19, [X31 + 0x10]
	0x03DDFCFC LDP X30, X21, [X31], #0x20
	0x03DDFD00 RET
	0x03DDFD04 BL 0x1C16F20
	0x03DDFD08 SUB X31, X31, 0x30
	0x03DDFD0C STP X30, X21, [X31 + 0x10]
	0x03DDFD10 STP X20, X19, [X31 + 0x20]
	0x03DDFD14 CBZ X1, 0x3DDFD90
	0x03DDFD18 MOV X19, X1
	0x03DDFD1C MOV X20, X0
	0x03DDFD20 ADD X0, X1, 0x88
	0x03DDFD24 MOVZ W2, 0x148
	0x03DDFD28 MOV W1, W31
	0x03DDFD2C BL 0x3EB1B10
	0x03DDFD30 LDR X8, [X19 + 0x378]
	0x03DDFD34 ADD X0, X31, 0x8
	0x03DDFD38 MOV X1, X31
	0x03DDFD3C STR X8, [X31 + 0x8]
	0x03DDFD40 BL 0x3DF8994
	0x03DDFD44 CMP W0, 0x1
	0x03DDFD48 B.MI 0x3DDFD80
	0x03DDFD4C MOV W21, W0
	0x03DDFD50 LDR X8, [X19 + 0x378]
	0x03DDFD54 SUB W21, W21, 0x1
	0x03DDFD58 ADD X0, X31, 0x8
	0x03DDFD5C MOV W1, W21
	0x03DDFD60 MOV X2, X31
	0x03DDFD64 STR X8, [X31 + 0x8]
	0x03DDFD68 BL 0x3DF98E4
	0x03DDFD6C MOV X1, X0
	0x03DDFD70 MOV X0, X20
	0x03DDFD74 BL 0x3DDFD08
	0x03DDFD78 CMP W21, 0x0
	0x03DDFD7C B.GT 0x3DDFD50
	0x03DDFD80 LDP X20, X19, [X31 + 0x20]
	0x03DDFD84 LDP X30, X21, [X31 + 0x10]
	0x03DDFD88 ADD X31, X31, 0x30
	0x03DDFD8C RET
	0x03DDFD90 BL 0x1C16F20
	0x03DDFD94 B 0x3DDF5F8
	0x03DDFD98 LDR X0, [X0 + 0x28]
	0x03DDFD9C CBZ X0, 0x3DDFDBC
	0x03DDFDA0 CMP W2, 0x2
	0x03DDFDA4 B.EQ 0x3DDFDC0
	0x03DDFDA8 CMP W2, 0x1
	0x03DDFDAC B.EQ 0x3DDFDC8
	0x03DDFDB0 CBNZ W2, 0x3DDFDBC
	0x03DDFDB4 MOV X2, X31
	0x03DDFDB8 B 0x3D259E4
	0x03DDFDBC RET
	0x03DDFDC0 MOV X2, X31
	0x03DDFDC4 B 0x3D25D4C
	0x03DDFDC8 MOV X2, X31
	0x03DDFDCC B 0x3D25EFC
	0x03DDFDD0 LDRB W0, [X0 + 0x32]
	0x03DDFDD4 RET
	0x03DDFDD8 AND W8, W1, 0x1
	0x03DDFDDC STRB W8, [X0 + 0x32]
	0x03DDFDE0 RET
	0x03DDFDE4 STP X30, X19, [X31 - 0x10]!
	0x03DDFDE8 LDRB W8, [X0 + 0x32]
	0x03DDFDEC CBNZ W8, 0x3DDFE08
	0x03DDFDF0 MOV X19, X0
	0x03DDFDF4 TBZ X1, 0x0, 0x3DDFE00
	0x03DDFDF8 MOV X0, X19
	0x03DDFDFC BL 0x3DDF660
	0x03DDFE00 MOVZ W8, 0x1
	0x03DDFE04 STRB W8, [X19 + 0x32]
	0x03DDFE08 LDP X30, X19, [X31], #0x10
	0x03DDFE0C RET
	0x03DDFE10 ADD W8, W1, 0x1
	0x03DDFE14 STR W8, [X0]
	0x03DDFE18 RET
	0x03DDFE1C LDR W8, [X0]
	0x03DDFE20 SUB W0, W8, 0x1
	0x03DDFE24 RET
	0x03DDFE28 STP X30, X21, [X31 - 0x20]!
	0x03DDFE2C STP X20, X19, [X31 + 0x10]
	0x03DDFE30 ADRP X20, 0x609000
	0x03DDFE34 ADRP X21, 0x33C000
	0x03DDFE38 LDRB W8, [X20 + 0x1CE]
	0x03DDFE3C LDR X21, [X21 + 0x620]
	0x03DDFE40 MOV X19, X0
	0x03DDFE44 TBNZ X8, 0x0, 0x3DDFE5C
	0x03DDFE48 ADRP X0, 0x33C000
	0x03DDFE4C LDR X0, [X0 + 0x620]
	0x03DDFE50 BL 0x1C16CF4
	0x03DDFE54 MOVZ W8, 0x1
	0x03DDFE58 STRB W8, [X20 + 0x1CE]
	0x03DDFE5C LDR X0, [X21]
	0x03DDFE60 LDR W8, [X0 + 0xE0]
	0x03DDFE64 CBNZ W8, 0x3DDFE6C
	0x03DDFE68 BL 0x1C16DFC
	0x03DDFE6C LDR W8, [X19]
	0x03DDFE70 LDP X20, X19, [X31 + 0x10]
	0x03DDFE74 SUB W8, W8, 0x1
	0x03DDFE78 SCVTF S0, W8
	0x03DDFE7C LDP X30, X21, [X31], #0x20
	0x03DDFE80 RET
	0x03DDFE84 STP X30, X21, [X31 - 0x20]!
	0x03DDFE88 STP X20, X19, [X31 + 0x10]
	0x03DDFE8C ADRP X21, 0x609000
	0x03DDFE90 LDRB W8, [X21 + 0x1CF]
	0x03DDFE94 MOV X19, X1
	0x03DDFE98 MOV X20, X0
	0x03DDFE9C TBNZ X8, 0x0, 0x3DDFEB4
	0x03DDFEA0 ADRP X0, 0x33C000
	0x03DDFEA4 LDR X0, [X0 + 0x620]
	0x03DDFEA8 BL 0x1C16CF4
	0x03DDFEAC MOVZ W8, 0x1
	0x03DDFEB0 STRB W8, [X21 + 0x1CF]
	0x03DDFEB4 CBZ X19, 0x3DDFED0
	0x03DDFEB8 ADRP X21, 0x33C000
	0x03DDFEBC LDR X21, [X21 + 0x620]
	0x03DDFEC0 LDR X8, [X19]
	0x03DDFEC4 LDR X0, [X21]
	0x03DDFEC8 CMP X8, X0
	0x03DDFECC B.EQ 0x3DDFED8
	0x03DDFED0 MOV W0, W31
	0x03DDFED4 B 0x3DDFF1C
	0x03DDFED8 LDR W8, [X0 + 0xE0]
	0x03DDFEDC LDR W20, [X20]
	0x03DDFEE0 CBZ W8, 0x3DDFEEC
	0x03DDFEE4 MOV X1, X0
	0x03DDFEE8 B 0x3DDFEF8
	0x03DDFEEC BL 0x1C16DFC
	0x03DDFEF0 LDR X1, [X21]
	0x03DDFEF4 LDR X0, [X19]
	0x03DDFEF8 LDR X8, [X0 + 0x40]
	0x03DDFEFC LDR X9, [X1 + 0x40]
	0x03DDFF00 MOV X0, X19
	0x03DDFF04 CMP X8, X9
	0x03DDFF08 B.NE 0x3DDFF28
	0x03DDFF0C BL 0x1C16E08
	0x03DDFF10 LDR W8, [X0]
	0x03DDFF14 CMP W8, W20
	0x03DDFF18 CSET W0, EQ
	0x03DDFF1C LDP X20, X19, [X31 + 0x10]
	0x03DDFF20 LDP X30, X21, [X31], #0x20
	0x03DDFF24 RET
	0x03DDFF28 BL 0x1C171E0
	0x03DDFF2C MOV X1, X31
	0x03DDFF30 B 0x337B6D8
	0x03DDFF34 CMP W0, W1
	0x03DDFF38 CSET W0, EQ
	0x03DDFF3C RET
	0x03DDFF40 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-128], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X29
	007 Move [X31+48], X30
	008 Move [X31+56], X27
	009 Move [X31+64], X26
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Subtract X31, X31, 448
	018 Move X22, 0x60B000
	019 Move X21, 0x38C000
	020 Move W8, [X22+452]
	021 Call 0x3EB2A34
	022 Return X0
	023 Move X19, X1
	024 Move X20, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {55}
	029 Move X0, 0x386000
	030 Move X0, [X0+616]
	031 Call 0x1C17CF4
	032 Move X0, 0x315000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move X0, 0x38B000
	036 Move X0, [X0+1152]
	037 Call 0x1C17CF4
	038 Move X0, 0x38B000
	039 Move X0, [X0+1144]
	040 Call 0x1C17CF4
	041 Move X0, 0x38B000
	042 Move X0, [X0+1160]
	043 Call 0x1C17CF4
	044 Move X0, 0x38B000
	045 Move X0, [X0+1168]
	046 Call 0x1C17CF4
	047 Move X0, 0x38B000
	048 Move X0, [X0+1176]
	049 Call 0x1C17CF4
	050 Move X0, 0x38B000
	051 Move X0, [X0+1184]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X22+452], W8
	055 Move X1, [X19+8]
	056 Move X2, [X21]
	057 Move X22, 0x38B000
	058 Move X22, [X22+1160]
	059 Add X0, X20, 8
	060 Call StyleDataRef`1<LayoutData>.ReferenceEquals, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {66}
	065 Move W21, 32
	066 Move X0, X20
	067 Call ComputedStyle.get_flexGrow, X0
	068 Move X0, X19
	069 Move V8, V0
	070 Call ComputedStyle.get_flexGrow, X0
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 Move X0, X20
	073 Call ComputedStyle.get_flexShrink, X0
	074 Move X0, X19
	075 Move V8, V0
	076 Call ComputedStyle.get_flexShrink, X0
	077 NotImplemented "Instruction FCMP not yet implemented."
	078 Move X0, X20
	079 Call ComputedStyle.get_flexWrap, X0
	080 Move W21, W0
	081 Move X0, X19
	082 Call ComputedStyle.get_flexWrap, X0
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, X20
	085 Call ComputedStyle.get_flexDirection, X0
	086 Move W21, W0
	087 Move X0, X19
	088 Call ComputedStyle.get_flexDirection, X0
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, X20
	091 Call ComputedStyle.get_justifyContent, X0
	092 Move W21, W0
	093 Move X0, X19
	094 Call ComputedStyle.get_justifyContent, X0
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, X20
	097 Call ComputedStyle.get_bottom, X0
	098 Move X21, X0
	099 Move X0, X19
	100 Call ComputedStyle.get_bottom, X0
	101 Move X1, X0
	102 Move X0, X21
	103 Move X2, X31
	104 Call Length.op_Inequality, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {341}
	109 Move X0, X20
	110 Call ComputedStyle.get_left, X0
	111 Move X21, X0
	112 Move X0, X19
	113 Call ComputedStyle.get_left, X0
	114 Move X1, X0
	115 Move X0, X21
	116 Move X2, X31
	117 Call Length.op_Inequality, X0, X1
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {341}
	122 Move X0, X20
	123 Call ComputedStyle.get_right, X0
	124 Move X21, X0
	125 Move X0, X19
	126 Call ComputedStyle.get_right, X0
	127 Move X1, X0
	128 Move X0, X21
	129 Move X2, X31
	130 Call Length.op_Inequality, X0, X1
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {341}
	135 Move X0, X20
	136 Call ComputedStyle.get_top, X0
	137 Move X21, X0
	138 Move X0, X19
	139 Call ComputedStyle.get_top, X0
	140 Move X1, X0
	141 Move X0, X21
	142 Move X2, X31
	143 Call Length.op_Inequality, X0, X1
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfEqual {341}
	148 Move X0, X20
	149 Call ComputedStyle.get_height, X0
	150 Move X21, X0
	151 Move X0, X19
	152 Call ComputedStyle.get_height, X0
	153 Move X1, X0
	154 Move X0, X21
	155 Move X2, X31
	156 Call Length.op_Inequality, X0, X1
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {341}
	161 Move X0, X20
	162 Call ComputedStyle.get_width, X0
	163 Move X21, X0
	164 Move X0, X19
	165 Call ComputedStyle.get_width, X0
	166 Move X1, X0
	167 Move X0, X21
	168 Move X2, X31
	169 Call Length.op_Inequality, X0, X1
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfEqual {341}
	174 Move X0, X20
	175 Call ComputedStyle.get_paddingBottom, X0
	176 Move X21, X0
	177 Move X0, X19
	178 Call ComputedStyle.get_paddingBottom, X0
	179 Move X1, X0
	180 Move X0, X21
	181 Move X2, X31
	182 Call Length.op_Inequality, X0, X1
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfEqual {341}
	187 Move X0, X20
	188 Call ComputedStyle.get_paddingLeft, X0
	189 Move X21, X0
	190 Move X0, X19
	191 Call ComputedStyle.get_paddingLeft, X0
	192 Move X1, X0
	193 Move X0, X21
	194 Move X2, X31
	195 Call Length.op_Inequality, X0, X1
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfEqual {341}
	200 Move X0, X20
	201 Call ComputedStyle.get_paddingRight, X0
	202 Move X21, X0
	203 Move X0, X19
	204 Call ComputedStyle.get_paddingRight, X0
	205 Move X1, X0
	206 Move X0, X21
	207 Move X2, X31
	208 Call Length.op_Inequality, X0, X1
	209 Move TEMP, X0
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfEqual {341}
	213 Move X0, X20
	214 Call ComputedStyle.get_paddingTop, X0
	215 Move X21, X0
	216 Move X0, X19
	217 Call ComputedStyle.get_paddingTop, X0
	218 Move X1, X0
	219 Move X0, X21
	220 Move X2, X31
	221 Call Length.op_Inequality, X0, X1
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfEqual {341}
	226 Move X0, X20
	227 Call ComputedStyle.get_marginBottom, X0
	228 Move X21, X0
	229 Move X0, X19
	230 Call ComputedStyle.get_marginBottom, X0
	231 Move X1, X0
	232 Move X0, X21
	233 Move X2, X31
	234 Call Length.op_Inequality, X0, X1
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfEqual {341}
	239 Move X0, X20
	240 Call ComputedStyle.get_marginLeft, X0
	241 Move X21, X0
	242 Move X0, X19
	243 Call ComputedStyle.get_marginLeft, X0
	244 Move X1, X0
	245 Move X0, X21
	246 Move X2, X31
	247 Call Length.op_Inequality, X0, X1
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfEqual {341}
	252 Move X0, X20
	253 Call ComputedStyle.get_marginRight, X0
	254 Move X21, X0
	255 Move X0, X19
	256 Call ComputedStyle.get_marginRight, X0
	257 Move X1, X0
	258 Move X0, X21
	259 Move X2, X31
	260 Call Length.op_Inequality, X0, X1
	261 Move TEMP, X0
	262 And TEMP, TEMP, 1
	263 Compare TEMP, 1
	264 JumpIfEqual {341}
	265 Move X0, X20
	266 Call ComputedStyle.get_marginTop, X0
	267 Move X21, X0
	268 Move X0, X19
	269 Call ComputedStyle.get_marginTop, X0
	270 Move X1, X0
	271 Move X0, X21
	272 Move X2, X31
	273 Call Length.op_Inequality, X0, X1
	274 Move TEMP, X0
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfEqual {341}
	278 Move X0, X20
	279 Call ComputedStyle.get_position, X0
	280 Move W21, W0
	281 Move X0, X19
	282 Call ComputedStyle.get_position, X0
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move X0, X20
	285 Call ComputedStyle.get_alignContent, X0
	286 Move W21, W0
	287 Move X0, X19
	288 Call ComputedStyle.get_alignContent, X0
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move X0, X20
	291 Call ComputedStyle.get_alignItems, X0
	292 Move W21, W0
	293 Move X0, X19
	294 Call ComputedStyle.get_alignItems, X0
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move X0, X20
	297 Call ComputedStyle.get_alignSelf, X0
	298 Move W21, W0
	299 Move X0, X19
	300 Call ComputedStyle.get_alignSelf, X0
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X0, X20
	303 Call ComputedStyle.get_flexBasis, X0
	304 Move X21, X0
	305 Move X0, X19
	306 Call ComputedStyle.get_flexBasis, X0
	307 Move X1, X0
	308 Move X0, X21
	309 Move X2, X31
	310 Call Length.op_Inequality, X0, X1
	311 Move TEMP, X0
	312 And TEMP, TEMP, 1
	313 Compare TEMP, 1
	314 JumpIfEqual {341}
	315 Move X0, X20
	316 Call ComputedStyle.get_maxHeight, X0
	317 Move X21, X0
	318 Move X0, X19
	319 Call ComputedStyle.get_maxHeight, X0
	320 Move X1, X0
	321 Move X0, X21
	322 Move X2, X31
	323 Call Length.op_Inequality, X0, X1
	324 Move TEMP, X0
	325 And TEMP, TEMP, 1
	326 Compare TEMP, 1
	327 JumpIfEqual {341}
	328 Move X0, X20
	329 Call ComputedStyle.get_maxWidth, X0
	330 Move X21, X0
	331 Move X0, X19
	332 Call ComputedStyle.get_maxWidth, X0
	333 Move X1, X0
	334 Move X0, X21
	335 Move X2, X31
	336 Call Length.op_Inequality, X0, X1
	337 Move TEMP, X0
	338 And TEMP, TEMP, 1
	339 Compare TEMP, 1
	340 JumpIfNotEqual {1089}
	341 Move W23, 40
	342 Move X0, X20
	343 Call ComputedStyle.get_borderBottomWidth, X0
	344 Move X0, X19
	345 Move V8, V0
	346 Call ComputedStyle.get_borderBottomWidth, X0
	347 NotImplemented "Instruction FCMP not yet implemented."
	348 Move X0, X20
	349 Call ComputedStyle.get_borderLeftWidth, X0
	350 Move X0, X19
	351 Move V8, V0
	352 Call ComputedStyle.get_borderLeftWidth, X0
	353 NotImplemented "Instruction FCMP not yet implemented."
	354 Move X0, X20
	355 Call ComputedStyle.get_borderRightWidth, X0
	356 Move X0, X19
	357 Move V8, V0
	358 Call ComputedStyle.get_borderRightWidth, X0
	359 NotImplemented "Instruction FCMP not yet implemented."
	360 Move W24, 2344
	361 Move X0, X20
	362 Call ComputedStyle.get_borderTopWidth, X0
	363 Move X0, X19
	364 Move V8, V0
	365 Call ComputedStyle.get_borderTopWidth, X0
	366 NotImplemented "Instruction FCMP not yet implemented."
	367 NotImplemented "Instruction CSEL not yet implemented."
	368 Move W24, 2344
	369 Move X0, X20
	370 Call ComputedStyle.get_display, X0
	371 Move W21, W0
	372 Move X0, X19
	373 Call ComputedStyle.get_display, X0
	374 Move W8, 2056
	375 Or W8, W24, W8
	376 NotImplemented "Instruction CMP not yet implemented."
	377 NotImplemented "Instruction CSEL not yet implemented."
	378 Move X1, [X19]
	379 Move X2, [X22]
	380 Move X23, 0x38B000
	381 Move X23, [X23+1176]
	382 Move X0, X20
	383 Add X26, X31, 384
	384 Add X25, X31, 128
	385 Call 0x266D7A4, X0, X1
	386 Move X24, -53432320
	387 Move TEMP, X0
	388 And TEMP, TEMP, 1
	389 Compare TEMP, 1
	390 JumpIfEqual {590}
	391 Move X0, X20
	392 Call ComputedStyle.get_color, X0
	393 Move X0, X19
	394 Move V8, V0
	395 Move V9, V1
	396 Move V10, V2
	397 Move V11, V3
	398 Call ComputedStyle.get_color, X0
	399 Subtract S0, S8, S0
	400 Subtract S1, S9, S1
	401 Subtract S2, S10, S2
	402 Move V12, [X24+3872]
	403 Multiply S0, S0, S0
	404 Multiply S1, S1, S1
	405 Subtract S3, S11, S3
	406 Multiply S2, S2, S2
	407 Add S0, S0, S1
	408 Multiply S3, S3, S3
	409 Add S0, S2, S0
	410 Add S0, S3, S0
	411 Or W8, W21, 0x2000
	412 NotImplemented "Instruction FCMP not yet implemented."
	413 NotImplemented "Instruction CSEL not yet implemented."
	414 And W31, W27, 0x8080808
	415 Move X0, X20
	416 Call ComputedStyle.get_unityFont, X0
	417 Move X21, X0
	418 Move X0, X19
	419 Call ComputedStyle.get_unityFont, X0
	420 Move X8, 0x315000
	421 Move X8, [X8+1432]
	422 Move X22, X0
	423 Move X8, [X8]
	424 Move W9, [X8+224]
	425 Compare W9, 0
	426 JumpIfNotEqual {429}
	427 Move X0, X8
	428 Call 0x1C17DFC
	429 Move X0, X21
	430 Move X1, X22
	431 Move X2, X31
	432 Call Object.op_Inequality, X0, X1
	433 Move TEMP, X0
	434 And TEMP, TEMP, 1
	435 Compare TEMP, 1
	436 JumpIfEqual {517}
	437 Move X0, X20
	438 Call ComputedStyle.get_fontSize, X0
	439 Move X21, X0
	440 Move X0, X19
	441 Call ComputedStyle.get_fontSize, X0
	442 Move X1, X0
	443 Move X0, X21
	444 Move X2, X31
	445 Call Length.op_Inequality, X0, X1
	446 Move TEMP, X0
	447 And TEMP, TEMP, 1
	448 Compare TEMP, 1
	449 JumpIfEqual {517}
	450 Move X0, X20
	451 Call ComputedStyle.get_unityFontDefinition, X0
	452 Move X21, X0
	453 Move X0, X19
	454 Move X22, X1
	455 Call ComputedStyle.get_unityFontDefinition, X0
	456 Move X2, X0
	457 Move X3, X1
	458 Move X0, X21
	459 Move X1, X22
	460 Move X4, X31
	461 Call FontDefinition.op_Inequality, X0, X1
	462 Move TEMP, X0
	463 And TEMP, TEMP, 1
	464 Compare TEMP, 1
	465 JumpIfEqual {517}
	466 Move X0, X20
	467 Call ComputedStyle.get_unityFontStyleAndWeight, X0
	468 Move W21, W0
	469 Move X0, X19
	470 Call ComputedStyle.get_unityFontStyleAndWeight, X0
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move X0, X20
	473 Call ComputedStyle.get_unityTextOutlineWidth, X0
	474 Move X0, X19
	475 Move V8, V0
	476 Call ComputedStyle.get_unityTextOutlineWidth, X0
	477 NotImplemented "Instruction FCMP not yet implemented."
	478 Move X0, X20
	479 Call ComputedStyle.get_letterSpacing, X0
	480 Move X21, X0
	481 Move X0, X19
	482 Call ComputedStyle.get_letterSpacing, X0
	483 Move X1, X0
	484 Move X0, X21
	485 Move X2, X31
	486 Call Length.op_Inequality, X0, X1
	487 Move TEMP, X0
	488 And TEMP, TEMP, 1
	489 Compare TEMP, 1
	490 JumpIfEqual {517}
	491 Move X0, X20
	492 Call ComputedStyle.get_wordSpacing, X0
	493 Move X21, X0
	494 Move X0, X19
	495 Call ComputedStyle.get_wordSpacing, X0
	496 Move X1, X0
	497 Move X0, X21
	498 Move X2, X31
	499 Call Length.op_Inequality, X0, X1
	500 Move TEMP, X0
	501 And TEMP, TEMP, 1
	502 Compare TEMP, 1
	503 JumpIfEqual {517}
	504 Move X0, X20
	505 Call ComputedStyle.get_unityParagraphSpacing, X0
	506 Move X21, X0
	507 Move X0, X19
	508 Call ComputedStyle.get_unityParagraphSpacing, X0
	509 Move X1, X0
	510 Move X0, X21
	511 Move X2, X31
	512 Call Length.op_Inequality, X0, X1
	513 Move TEMP, X0
	514 And TEMP, TEMP, 1
	515 Compare TEMP, 1
	516 JumpIfNotEqual {519}
	517 Move W8, 2056
	518 Or W27, W27, W8
	519 Move TEMP, X27
	520 And TEMP, TEMP, 2048
	521 Compare TEMP, 2048
	522 JumpIfEqual {572}
	523 Add X8, X31, 128
	524 Move X0, X20
	525 Call ComputedStyle.get_textShadow, X0
	526 Add X8, X31, 416
	527 Move X0, X19
	528 Call ComputedStyle.get_textShadow, X0
	529 Move V0, [X31+8]
	530 NotImplemented "Instruction LDUR not yet implemented."
	531 Move V2, [X26+2]
	532 NotImplemented "Instruction LDUR not yet implemented."
	533 Add X0, X31, 384
	534 Add X1, X31, 352
	535 Move X2, X31
	536 Move [X25+16], V0
	537 Move [X26+12], V1
	538 Move [X25+14], V2
	539 Move [X25+236], V3
	540 Call TextShadow.op_Inequality, X0, X1
	541 Move TEMP, X0
	542 And TEMP, TEMP, 1
	543 Compare TEMP, 1
	544 JumpIfEqual {571}
	545 Move X0, X20
	546 Call ComputedStyle.get_unityTextAlign, X0
	547 Move W21, W0
	548 Move X0, X19
	549 Call ComputedStyle.get_unityTextAlign, X0
	550 NotImplemented "Instruction CMP not yet implemented."
	551 Move X0, X20
	552 Call ComputedStyle.get_unityTextOutlineColor, X0
	553 Move X0, X19
	554 Move V8, V0
	555 Move V9, V1
	556 Move V10, V2
	557 Move V11, V3
	558 Call ComputedStyle.get_unityTextOutlineColor, X0
	559 Subtract S0, S8, S0
	560 Subtract S1, S9, S1
	561 Subtract S2, S10, S2
	562 Multiply S0, S0, S0
	563 Multiply S1, S1, S1
	564 Subtract S3, S11, S3
	565 Multiply S2, S2, S2
	566 Add S0, S0, S1
	567 Add S0, S2, S0
	568 Multiply S1, S3, S3
	569 Add S0, S1, S0
	570 NotImplemented "Instruction FCMP not yet implemented."
	571 Or W27, W27, 2048
	572 Move X0, X20
	573 Call ComputedStyle.get_visibility, X0
	574 Move W21, W0
	575 Move X0, X19
	576 Call ComputedStyle.get_visibility, X0
	577 Move W8, 2048
	578 NotImplemented "Instruction MOVK not yet implemented."
	579 Or W8, W27, W8
	580 NotImplemented "Instruction CMP not yet implemented."
	581 Move X0, X20
	582 NotImplemented "Instruction CSEL not yet implemented."
	583 Call ComputedStyle.get_whiteSpace, X0
	584 Move W21, W0
	585 Move X0, X19
	586 Call ComputedStyle.get_whiteSpace, X0
	587 Or W8, W22, 8
	588 NotImplemented "Instruction CMP not yet implemented."
	589 NotImplemented "Instruction CSEL not yet implemented."
	590 Move X1, [X19+24]
	591 Move X2, [X23]
	592 Move X27, 0x38B000
	593 Move X27, [X27+1168]
	594 Add X0, X20, 24
	595 Call StyleDataRef`1<TransformData>.ReferenceEquals, X0, X1
	596 Move TEMP, X0
	597 And TEMP, TEMP, 1
	598 Compare TEMP, 1
	599 JumpIfEqual {661}
	600 Move X0, X20
	601 Call ComputedStyle.get_scale, X0
	602 Move X22, X0
	603 Move X0, X19
	604 Move X23, X1
	605 Call ComputedStyle.get_scale, X0
	606 Move X2, X0
	607 Move X3, X1
	608 Move X0, X22
	609 Move X1, X23
	610 Move X4, X31
	611 Call Scale.op_Inequality, X0, X1
	612 Move TEMP, X0
	613 And TEMP, TEMP, 1
	614 Compare TEMP, 1
	615 JumpIfEqual {660}
	616 Add X8, X31, 128
	617 Move X0, X20
	618 Call ComputedStyle.get_rotate, X0
	619 Add X8, X31, 416
	620 Move X0, X19
	621 Call ComputedStyle.get_rotate, X0
	622 Move V0, [X31+8]
	623 Move X8, [X31+144]
	624 Move V1, [X26+2]
	625 Move X9, [X31+432]
	626 Add X0, X31, 320
	627 Add X1, X31, 288
	628 Move X2, X31
	629 Move [X25+12], V0
	630 Move [X31+336], X8
	631 Move [X25+10], V1
	632 Move [X31+304], X9
	633 Call Rotate.op_Inequality, X0, X1
	634 Move TEMP, X0
	635 And TEMP, TEMP, 1
	636 Compare TEMP, 1
	637 JumpIfEqual {660}
	638 Add X8, X31, 128
	639 Move X0, X20
	640 Call ComputedStyle.get_translate, X0
	641 Add X8, X31, 416
	642 Move X0, X19
	643 Call ComputedStyle.get_translate, X0
	644 Move V0, [X31+8]
	645 Move X8, [X31+144]
	646 Move V1, [X26+2]
	647 Move X9, [X31+432]
	648 Add X0, X31, 256
	649 Add X1, X31, 224
	650 Move X2, X31
	651 Move [X25+8], V0
	652 Move [X31+272], X8
	653 Move [X25+6], V1
	654 Move [X31+240], X9
	655 Call Translate.op_Inequality, X0, X1
	656 Move TEMP, X0
	657 And TEMP, TEMP, 1
	658 Compare TEMP, 1
	659 JumpIfNotEqual {1055}
	660 Or W21, W21, 512
	661 Move X1, [X19+32]
	662 Move X2, [X27]
	663 Move X22, 0x38B000
	664 Move X22, [X22+1152]
	665 Add X0, X20, 32
	666 Call StyleDataRef`1<TransitionData>.ReferenceEquals, X0, X1
	667 Move TEMP, X0
	668 And TEMP, TEMP, 1
	669 Compare TEMP, 1
	670 JumpIfEqual {685}
	671 Move X8, 0x386000
	672 Move X8, [X8+616]
	673 Move X0, [X8]
	674 Move W8, [X0+224]
	675 Compare W8, 0
	676 JumpIfNotEqual {678}
	677 Call 0x1C17DFC
	678 Move X0, X20
	679 Move X1, X19
	680 Move X2, X31
	681 Call ComputedTransitionUtils.SameTransitionProperty, X0, X1
	682 Or W8, W21, 0x8000
	683 And W31, W0, 1
	684 NotImplemented "Instruction CSEL not yet implemented."
	685 Move X1, [X19+40]
	686 Move X2, [X22]
	687 Move X26, 0x38B000
	688 Move X26, [X26+1184]
	689 Add X0, X20, 40
	690 Call StyleDataRef`1<VisualData>.ReferenceEquals, X0, X1
	691 Move TEMP, X0
	692 And TEMP, TEMP, 1
	693 Compare TEMP, 1
	694 JumpIfEqual {947}
	695 Move TEMP, X21
	696 And TEMP, TEMP, 0x2000
	697 Compare TEMP, 0x2000
	698 JumpIfEqual {801}
	699 Move X0, X20
	700 Call ComputedStyle.get_backgroundColor, X0
	701 Move X0, X19
	702 Move V8, V0
	703 Move V9, V1
	704 Move V10, V2
	705 Move V11, V3
	706 Call ComputedStyle.get_backgroundColor, X0
	707 Subtract S0, S8, S0
	708 Subtract S1, S9, S1
	709 Subtract S2, S10, S2
	710 Move V12, [X24+3872]
	711 Multiply S0, S0, S0
	712 Multiply S1, S1, S1
	713 Subtract S3, S11, S3
	714 Multiply S2, S2, S2
	715 Add S0, S0, S1
	716 Add S0, S2, S0
	717 Multiply S1, S3, S3
	718 Add S0, S1, S0
	719 NotImplemented "Instruction FCMP not yet implemented."
	720 Move X0, X20
	721 Call ComputedStyle.get_borderBottomColor, X0
	722 Move X0, X19
	723 Move V8, V0
	724 Move V9, V1
	725 Move V10, V2
	726 Move V11, V3
	727 Call ComputedStyle.get_borderBottomColor, X0
	728 Subtract S0, S8, S0
	729 Subtract S1, S9, S1
	730 Subtract S2, S10, S2
	731 Multiply S0, S0, S0
	732 Multiply S1, S1, S1
	733 Subtract S3, S11, S3
	734 Multiply S2, S2, S2
	735 Add S0, S0, S1
	736 Add S0, S2, S0
	737 Multiply S1, S3, S3
	738 Add S0, S1, S0
	739 NotImplemented "Instruction FCMP not yet implemented."
	740 Move X0, X20
	741 Call ComputedStyle.get_borderLeftColor, X0
	742 Move X0, X19
	743 Move V8, V0
	744 Move V9, V1
	745 Move V10, V2
	746 Move V11, V3
	747 Call ComputedStyle.get_borderLeftColor, X0
	748 Subtract S0, S8, S0
	749 Subtract S1, S9, S1
	750 Subtract S2, S10, S2
	751 Multiply S0, S0, S0
	752 Multiply S1, S1, S1
	753 Subtract S3, S11, S3
	754 Multiply S2, S2, S2
	755 Add S0, S0, S1
	756 Add S0, S2, S0
	757 Multiply S1, S3, S3
	758 Add S0, S1, S0
	759 NotImplemented "Instruction FCMP not yet implemented."
	760 Move X0, X20
	761 Call ComputedStyle.get_borderRightColor, X0
	762 Move X0, X19
	763 Move V8, V0
	764 Move V9, V1
	765 Move V10, V2
	766 Move V11, V3
	767 Call ComputedStyle.get_borderRightColor, X0
	768 Subtract S0, S8, S0
	769 Subtract S1, S9, S1
	770 Subtract S2, S10, S2
	771 Multiply S0, S0, S0
	772 Multiply S1, S1, S1
	773 Subtract S3, S11, S3
	774 Multiply S2, S2, S2
	775 Add S0, S0, S1
	776 Add S0, S2, S0
	777 Multiply S1, S3, S3
	778 Add S0, S1, S0
	779 NotImplemented "Instruction FCMP not yet implemented."
	780 Move X0, X20
	781 Call ComputedStyle.get_borderTopColor, X0
	782 Move X0, X19
	783 Move V8, V0
	784 Move V9, V1
	785 Move V10, V2
	786 Move V11, V3
	787 Call ComputedStyle.get_borderTopColor, X0
	788 Subtract S0, S8, S0
	789 Subtract S1, S9, S1
	790 Subtract S2, S10, S2
	791 Multiply S0, S0, S0
	792 Multiply S1, S1, S1
	793 Subtract S3, S11, S3
	794 Multiply S2, S2, S2
	795 Add S0, S0, S1
	796 Add S0, S2, S0
	797 Multiply S1, S3, S3
	798 Add S0, S1, S0
	799 NotImplemented "Instruction FCMP not yet implemented."
	800 Or W21, W21, 0x2000
	801 Move TEMP, X21
	802 And TEMP, TEMP, 2048
	803 Compare TEMP, 2048
	804 JumpIfEqual {889}
	805 Add X8, X31, 128
	806 Move X0, X20
	807 Call ComputedStyle.get_backgroundImage, X0
	808 Add X8, X31, 64
	809 Move X0, X19
	810 Call ComputedStyle.get_backgroundImage, X0
	811 Move V0, [X31+8]
	812 Move V1, [X25+1]
	813 Add X0, X31, 96
	814 Add X1, X31, 64
	815 Move X2, X31
	816 Move [X31+96], V0
	817 Move [X31+104], V1
	818 Call Background.op_Inequality, X0, X1
	819 Move TEMP, X0
	820 And TEMP, TEMP, 1
	821 Compare TEMP, 1
	822 JumpIfEqual {888}
	823 Move X0, X20
	824 Call ComputedStyle.get_backgroundPositionX, X0
	825 Move X22, X0
	826 Move X0, X19
	827 Move X23, X1
	828 Call ComputedStyle.get_backgroundPositionX, X0
	829 And X8, X23, 0
	830 Move X2, X0
	831 And X3, X1, 0
	832 Move X0, X22
	833 Move X1, X8
	834 Move X4, X31
	835 Call BackgroundPosition.op_Inequality, X0, X1
	836 Move TEMP, X0
	837 And TEMP, TEMP, 1
	838 Compare TEMP, 1
	839 JumpIfEqual {888}
	840 Move X0, X20
	841 Call ComputedStyle.get_backgroundPositionY, X0
	842 Move X22, X0
	843 Move X0, X19
	844 Move X23, X1
	845 Call ComputedStyle.get_backgroundPositionY, X0
	846 And X8, X23, 0
	847 Move X2, X0
	848 And X3, X1, 0
	849 Move X0, X22
	850 Move X1, X8
	851 Move X4, X31
	852 Call BackgroundPosition.op_Inequality, X0, X1
	853 Move TEMP, X0
	854 And TEMP, TEMP, 1
	855 Compare TEMP, 1
	856 JumpIfEqual {888}
	857 Move X0, X20
	858 Call ComputedStyle.get_backgroundRepeat, X0
	859 Move X22, X0
	860 Move X0, X19
	861 Call ComputedStyle.get_backgroundRepeat, X0
	862 Move X1, X0
	863 Move X0, X22
	864 Move X2, X31
	865 Call BackgroundRepeat.op_Inequality, X0, X1
	866 Move TEMP, X0
	867 And TEMP, TEMP, 1
	868 Compare TEMP, 1
	869 JumpIfEqual {888}
	870 Add X8, X31, 128
	871 Move X0, X20
	872 Call ComputedStyle.get_backgroundSize, X0
	873 Add X8, X31, 8
	874 Move X0, X19
	875 Call ComputedStyle.get_backgroundSize, X0
	876 Move V0, [X31+8]
	877 Move W8, [X31+144]
	878 Add X0, X31, 32
	879 Add X1, X31, 8
	880 Move X2, X31
	881 Move [X31+2], V0
	882 Move [X31+48], W8
	883 Call BackgroundSize.op_Inequality, X0, X1
	884 Move TEMP, X0
	885 And TEMP, TEMP, 1
	886 Compare TEMP, 1
	887 JumpIfNotEqual {889}
	888 Or W21, W21, 2048
	889 Move X0, X20
	890 Call ComputedStyle.get_borderBottomLeftRadius, X0
	891 Move X22, X0
	892 Move X0, X19
	893 Call ComputedStyle.get_borderBottomLeftRadius, X0
	894 Move X1, X0
	895 Move X0, X22
	896 Move X2, X31
	897 Call Length.op_Inequality, X0, X1
	898 Move TEMP, X0
	899 And TEMP, TEMP, 1
	900 Compare TEMP, 1
	901 JumpIfEqual {928}
	902 Move X0, X20
	903 Call ComputedStyle.get_borderBottomRightRadius, X0
	904 Move X22, X0
	905 Move X0, X19
	906 Call ComputedStyle.get_borderBottomRightRadius, X0
	907 Move X1, X0
	908 Move X0, X22
	909 Move X2, X31
	910 Call Length.op_Inequality, X0, X1
	911 Move TEMP, X0
	912 And TEMP, TEMP, 1
	913 Compare TEMP, 1
	914 JumpIfEqual {928}
	915 Move X0, X20
	916 Call ComputedStyle.get_borderTopLeftRadius, X0
	917 Move X22, X0
	918 Move X0, X19
	919 Call ComputedStyle.get_borderTopLeftRadius, X0
	920 Move X1, X0
	921 Move X0, X22
	922 Move X2, X31
	923 Call Length.op_Inequality, X0, X1
	924 Move TEMP, X0
	925 And TEMP, TEMP, 1
	926 Compare TEMP, 1
	927 JumpIfNotEqual {1076}
	928 Move W8, 2176
	929 Or W21, W21, W8
	930 Move X0, X20
	931 Call ComputedStyle.get_opacity, X0
	932 Move X0, X19
	933 Move V8, V0
	934 Call ComputedStyle.get_opacity, X0
	935 Or W8, W21, 4096
	936 NotImplemented "Instruction FCMP not yet implemented."
	937 Move X0, X20
	938 NotImplemented "Instruction CSEL not yet implemented."
	939 Call ComputedStyle.get_overflow, X0
	940 Move W21, W0
	941 Move X0, X19
	942 Call ComputedStyle.get_overflow, X0
	943 Move W8, 72
	944 Or W8, W22, W8
	945 NotImplemented "Instruction CMP not yet implemented."
	946 NotImplemented "Instruction CSEL not yet implemented."
	947 Move X1, [X19+16]
	948 Move X2, [X26]
	949 Add X0, X20, 16
	950 Call StyleDataRef`1<RareData>.ReferenceEquals, X0, X1
	951 Move TEMP, X0
	952 And TEMP, TEMP, 1
	953 Compare TEMP, 1
	954 JumpIfEqual {1036}
	955 Move X0, X20
	956 Call ComputedStyle.get_textOverflow, X0
	957 Move W22, W0
	958 Move X0, X19
	959 Call ComputedStyle.get_textOverflow, X0
	960 NotImplemented "Instruction CMP not yet implemented."
	961 Move X0, X20
	962 Call ComputedStyle.get_unitySliceScale, X0
	963 Move X0, X19
	964 Move V8, V0
	965 Call ComputedStyle.get_unitySliceScale, X0
	966 Move W8, 2056
	967 Or W8, W21, W8
	968 NotImplemented "Instruction FCMP not yet implemented."
	969 NotImplemented "Instruction CSEL not yet implemented."
	970 Move W8, 2056
	971 Or W21, W21, W8
	972 Move X0, X20
	973 Call ComputedStyle.get_unityBackgroundImageTintColor, X0
	974 Move X0, X19
	975 Move V8, V0
	976 Move V9, V1
	977 Move V10, V2
	978 Move V11, V3
	979 Call ComputedStyle.get_unityBackgroundImageTintColor, X0
	980 Subtract S0, S8, S0
	981 Subtract S1, S9, S1
	982 Subtract S2, S10, S2
	983 Move V4, [X24+3872]
	984 Multiply S0, S0, S0
	985 Multiply S1, S1, S1
	986 Subtract S3, S11, S3
	987 Multiply S2, S2, S2
	988 Add S0, S0, S1
	989 Multiply S3, S3, S3
	990 Add S0, S2, S0
	991 Add S0, S3, S0
	992 Or W8, W21, 0x2000
	993 NotImplemented "Instruction FCMP not yet implemented."
	994 NotImplemented "Instruction CSEL not yet implemented."
	995 Move TEMP, X21
	996 And TEMP, TEMP, 2048
	997 Compare TEMP, 2048
	998 JumpIfEqual {1036}
	999 Move X0, X20
	1000 Call ComputedStyle.get_unityOverflowClipBox, X0
	1001 Move W22, W0
	1002 Move X0, X19
	1003 Call ComputedStyle.get_unityOverflowClipBox, X0
	1004 NotImplemented "Instruction CMP not yet implemented."
	1005 Move X0, X20
	1006 Call ComputedStyle.get_unitySliceBottom, X0
	1007 Move W22, W0
	1008 Move X0, X19
	1009 Call ComputedStyle.get_unitySliceBottom, X0
	1010 NotImplemented "Instruction CMP not yet implemented."
	1011 Move X0, X20
	1012 Call ComputedStyle.get_unitySliceLeft, X0
	1013 Move W22, W0
	1014 Move X0, X19
	1015 Call ComputedStyle.get_unitySliceLeft, X0
	1016 NotImplemented "Instruction CMP not yet implemented."
	1017 Move X0, X20
	1018 Call ComputedStyle.get_unitySliceRight, X0
	1019 Move W22, W0
	1020 Move X0, X19
	1021 Call ComputedStyle.get_unitySliceRight, X0
	1022 NotImplemented "Instruction CMP not yet implemented."
	1023 Move X0, X20
	1024 Call ComputedStyle.get_unitySliceTop, X0
	1025 Move W22, W0
	1026 Move X0, X19
	1027 Call ComputedStyle.get_unitySliceTop, X0
	1028 NotImplemented "Instruction CMP not yet implemented."
	1029 Move X0, X20
	1030 Call ComputedStyle.get_unityTextOverflowPosition, X0
	1031 Move W20, W0
	1032 Move X0, X19
	1033 Call ComputedStyle.get_unityTextOverflowPosition, X0
	1034 NotImplemented "Instruction CMP not yet implemented."
	1035 Or W21, W21, 2048
	1036 Move W0, W21
	1037 Add X31, X31, 448
	1038 Move X20, [X31+112]
	1039 Move X19, [X31+120]
	1040 Move X22, [X31+96]
	1041 Move X21, [X31+104]
	1042 Move X24, [X31+80]
	1043 Move X23, [X31+88]
	1044 Move X26, [X31+64]
	1045 Move X25, [X31+72]
	1046 Move X30, [X31+48]
	1047 Move X27, [X31+56]
	1048 Move X29, [X31+40]
	1049 Move D9, [X31+24]
	1050 Move D8, [X31+32]
	1051 Move D11, [X31+8]
	1052 Move D10, [X31+16]
	1053 Move V12, [X31+128]
	1054 Return X0
	1055 Add X8, X31, 128
	1056 Move X0, X20
	1057 Call ComputedStyle.get_transformOrigin, X0
	1058 Add X8, X31, 416
	1059 Move X0, X19
	1060 Call ComputedStyle.get_transformOrigin, X0
	1061 Move V0, [X31+8]
	1062 Move W8, [X31+144]
	1063 Move V1, [X26+2]
	1064 Move W9, [X31+432]
	1065 Add X0, X31, 192
	1066 Add X1, X31, 160
	1067 Move X2, X31
	1068 Move [X25+4], V0
	1069 Move [X31+208], W8
	1070 Move [X25+2], V1
	1071 Move [X31+176], W9
	1072 Call TransformOrigin.op_Inequality, X0, X1
	1073 Or W8, W21, 512
	1074 And W31, W0, 1
	1075 NotImplemented "Instruction CSEL not yet implemented."
	1076 Move X0, X20
	1077 Call ComputedStyle.get_borderTopRightRadius, X0
	1078 Move X22, X0
	1079 Move X0, X19
	1080 Call ComputedStyle.get_borderTopRightRadius, X0
	1081 Move X1, X0
	1082 Move X0, X22
	1083 Move X2, X31
	1084 Call Length.op_Inequality, X0, X1
	1085 Move W8, 2176
	1086 Or W8, W21, W8
	1087 And W31, W0, 1
	1088 NotImplemented "Instruction CSEL not yet implemented."
	1089 Move X0, X20
	1090 Call ComputedStyle.get_minHeight, X0
	1091 Move X21, X0
	1092 Move X0, X19
	1093 Call ComputedStyle.get_minHeight, X0
	1094 Move X1, X0
	1095 Move X0, X21
	1096 Move X2, X31
	1097 Call Length.op_Inequality, X0, X1
	1098 Move W23, 40
	1099 Move TEMP, X0
	1100 And TEMP, TEMP, 1
	1101 Compare TEMP, 1
	1102 JumpIfEqual {342}
	1103 Move X0, X20
	1104 Call ComputedStyle.get_minWidth, X0
	1105 Move X21, X0
	1106 Move X0, X19
	1107 Call ComputedStyle.get_minWidth, X0
	1108 Move X1, X0
	1109 Move X0, X21
	1110 Move X2, X31
	1111 Call Length.op_Inequality, X0, X1
	1112 And W31, W0, 1
	1113 Move W8, 32
	1114 NotImplemented "Instruction CSEL not yet implemented."

