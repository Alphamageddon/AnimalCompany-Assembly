Type: UnityEngine.UIElements.TextInputBaseField`1

Method: UnityEngine.UIElements.TextInputBaseField`1/TextInputBase<TValueType> get_textInputBase()

Disassembly:
	0x026D3758 LDR W9, [X8 + 0x24]
	0x026D375C MOVN W10, 0x0

ISIL:
	001 Move X0, [X0+1096]
	002 Return X0

Method: System.String get_text()

Disassembly:
	0x026D3760 STR W9, [X19 + 0x440]
	0x026D3764 STR W10, [X8 + 0x24]
	0x026D3768 B 0x26D34C8
	0x026D376C BL 0x1C16F20
	0x026D3770 STR X30, [X31 - 0x30]!
	0x026D3774 STP X22, X21, [X31 + 0x10]
	0x026D3778 STP X20, X19, [X31 + 0x20]
	0x026D377C ADRP X21, 0x1D07000
	0x026D3780 LDRB W8, [X21 + 0x489]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+1096]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X1+32]
	006 Move X8, [X8+192]
	007 Move X1, [X8+16]
	008 Move X30, [X31+16]
	009 Call 0x26B2D90, X0
	010 Return X0
	011 Call 0x1C17F20

Method: System.Void set_text(System.String value)

Disassembly:
	0x026D3784 MOV X19, X1
	0x026D3788 MOV X20, X0
	0x026D378C TBNZ X8, 0x0, 0x26D37A4
	0x026D3790 ADRP X0, 0x1A4A000
	0x026D3794 LDR X0, [X0 + 0x710]
	0x026D3798 BL 0x1C16CF4
	0x026D379C MOVZ W8, 0x1
	0x026D37A0 STRB W8, [X21 + 0x489]
	0x026D37A4 CBZ X20, 0x26D39FC

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+1096]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X2+32]
	006 Move X8, [X8+192]
	007 Move X2, [X8+24]
	008 Move X30, [X31+16]
	009 Call 0x26B2DB4, X0, X1
	010 Return 
	011 Call 0x1C17F20

Method: System.Void add_onIsReadOnlyChanged(System.Action`1<System.Boolean> value)

Disassembly:
	0x026D37A8 LDRB W8, [X20 + 0x408]
	0x026D37AC CBZ W8, 0x26D384C
	0x026D37B0 LDR X8, [X20 + 0x448]
	0x026D37B4 CBZ X8, 0x26D39FC
	0x026D37B8 LDR X9, [X19 + 0x20]
	0x026D37BC LDR X21, [X8 + 0x3C8]
	0x026D37C0 LDR X9, [X9 + 0xC0]
	0x026D37C4 LDR X0, [X9 + 0x48]
	0x026D37C8 LDRB W9, [X0 + 0x135]
	0x026D37CC TBNZ X9, 0x0, 0x26D37D4
	0x026D37D0 BL 0x1C5C684
	0x026D37D4 LDR W8, [X0 + 0xE0]
	0x026D37D8 CBNZ W8, 0x26D37E0
	0x026D37DC BL 0x1C16DFC
	0x026D37E0 LDR X8, [X19 + 0x20]
	0x026D37E4 LDR X8, [X8 + 0xC0]
	0x026D37E8 LDR X0, [X8 + 0x48]
	0x026D37EC LDRB W8, [X0 + 0x135]
	0x026D37F0 TBNZ X8, 0x0, 0x26D37F8
	0x026D37F4 BL 0x1C5C684
	0x026D37F8 CBZ X21, 0x26D39FC
	0x026D37FC ADRP X10, 0x1A4A000
	0x026D3800 LDR X9, [X0 + 0xB8]
	0x026D3804 LDR X8, [X21]
	0x026D3808 LDR X10, [X10 + 0x710]
	0x026D380C LDR X22, [X9 + 0x40]
	0x026D3810 LDRH W9, [X8 + 0x12E]
	0x026D3814 LDR X1, [X10]
	0x026D3818 CBZ X9, 0x26D383C
	0x026D381C LDR X10, [X8 + 0xB0]
	0x026D3820 ADD X10, X10, 0x8
	0x026D3824 LDUR X11, [X10 - 0x8]
	0x026D3828 CMP X11, X1
	0x026D382C B.EQ 0x26D3928
	0x026D3830 SUBS X9, X9, 0x1
	0x026D3834 ADD X10, X10, 0x10
	0x026D3838 B.NE 0x26D3824
	0x026D383C MOVZ W2, 0x2
	0x026D3840 MOV X0, X21
	0x026D3844 BL 0x1C5C788
	0x026D3848 B 0x26D3938
	0x026D384C LDR X8, [X20]
	0x026D3850 MOV X0, X20
	0x026D3854 LDR X9, [X8 + 0x8C8]
	0x026D3858 LDR X1, [X8 + 0x8D0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1D08000
	009 Move W8, [X21+1148]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1A21000
	017 Move X0, [X0+3368]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1148], W8
	021 Move X24, 0x1A21000
	022 Move X21, [X20+1104]
	023 Move X24, [X24+3368]
	024 Add X20, X20, 1104
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_onIsReadOnlyChanged(System.Action`1<System.Boolean> value)

Disassembly:
	0x026D385C BLR X9
	0x026D3860 LDR X8, [X19 + 0x20]
	0x026D3864 MOV X0, X20
	0x026D3868 LDR X8, [X8 + 0xC0]
	0x026D386C LDR X1, [X8 + 0x60]
	0x026D3870 BL 0x277A368
	0x026D3874 CBZ X0, 0x26D38CC
	0x026D3878 LDR X8, [X19 + 0x20]
	0x026D387C MOV X21, X0
	0x026D3880 LDR X8, [X8 + 0xC0]
	0x026D3884 LDR X0, [X8 + 0x48]
	0x026D3888 LDRB W8, [X0 + 0x135]
	0x026D388C TBNZ X8, 0x0, 0x26D3894
	0x026D3890 BL 0x1C5C684
	0x026D3894 LDR W8, [X0 + 0xE0]
	0x026D3898 CBNZ W8, 0x26D38A0
	0x026D389C BL 0x1C16DFC
	0x026D38A0 LDR X8, [X19 + 0x20]
	0x026D38A4 LDR X8, [X8 + 0xC0]
	0x026D38A8 LDR X0, [X8 + 0x48]
	0x026D38AC LDRB W8, [X0 + 0x135]
	0x026D38B0 TBNZ X8, 0x0, 0x26D38B8
	0x026D38B4 BL 0x1C5C684
	0x026D38B8 LDR X8, [X0 + 0xB8]
	0x026D38BC MOV X0, X21
	0x026D38C0 MOV X2, X31
	0x026D38C4 LDR X1, [X8 + 0x28]
	0x026D38C8 BL 0x3DF1B54
	0x026D38CC LDR X8, [X19 + 0x20]
	0x026D38D0 LDR X8, [X8 + 0xC0]
	0x026D38D4 LDR X0, [X8 + 0x48]
	0x026D38D8 LDRB W8, [X0 + 0x135]
	0x026D38DC TBNZ X8, 0x0, 0x26D38E4
	0x026D38E0 BL 0x1C5C684
	0x026D38E4 LDR W8, [X0 + 0xE0]
	0x026D38E8 CBNZ W8, 0x26D38F0
	0x026D38EC BL 0x1C16DFC
	0x026D38F0 LDR X8, [X19 + 0x20]
	0x026D38F4 LDR X8, [X8 + 0xC0]
	0x026D38F8 LDR X0, [X8 + 0x48]
	0x026D38FC LDRB W8, [X0 + 0x135]
	0x026D3900 TBNZ X8, 0x0, 0x26D3908
	0x026D3904 BL 0x1C5C684
	0x026D3908 LDR X8, [X0 + 0xB8]
	0x026D390C MOV X0, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1D08000
	009 Move W8, [X21+1149]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1A21000
	017 Move X0, [X0+3368]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1149], W8
	021 Move X24, 0x1A21000
	022 Move X21, [X20+1104]
	023 Move X24, [X24+3368]
	024 Add X20, X20, 1104
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Boolean get_isReadOnly()

Disassembly:
	0x026D3910 LDP X20, X19, [X31 + 0x20]
	0x026D3914 LDP X22, X21, [X31 + 0x10]
	0x026D3918 LDR X1, [X8 + 0x28]
	0x026D391C MOV X2, X31
	0x026D3920 LDR X30, [X31], #0x30
	0x026D3924 B 0x3DF1B54
	0x026D3928 LDR W9, [X10]
	0x026D392C ADD W9, W9, 0x2
	0x026D3930 ADD X8, X8, W9, 0x4, SXTW
	0x026D3934 ADD X0, X8, 0x138
	0x026D3938 LDP X8, X2, [X0]
	0x026D393C MOV X0, X21
	0x026D3940 MOV X1, X22
	0x026D3944 BLR X8
	0x026D3948 LDR X8, [X19 + 0x20]
	0x026D394C LDR X8, [X8 + 0xC0]
	0x026D3950 LDR X0, [X8 + 0x48]
	0x026D3954 LDRB W8, [X0 + 0x135]
	0x026D3958 TBNZ X8, 0x0, 0x26D3960
	0x026D395C BL 0x1C5C684
	0x026D3960 LDR X8, [X0 + 0xB8]
	0x026D3964 MOV X0, X20
	0x026D3968 MOV X2, X31
	0x026D396C LDR X1, [X8 + 0x28]
	0x026D3970 BL 0x3DF1C70
	0x026D3974 LDR X8, [X19 + 0x20]
	0x026D3978 MOV X0, X20
	0x026D397C LDR X8, [X8 + 0xC0]
	0x026D3980 LDR X1, [X8 + 0x60]
	0x026D3984 BL 0x277A368
	0x026D3988 CBZ X0, 0x26D39EC
	0x026D398C LDR X8, [X19 + 0x20]
	0x026D3990 MOV X20, X0
	0x026D3994 LDR X8, [X8 + 0xC0]
	0x026D3998 LDR X0, [X8 + 0x48]
	0x026D399C LDRB W8, [X0 + 0x135]
	0x026D39A0 TBNZ X8, 0x0, 0x26D39A8
	0x026D39A4 BL 0x1C5C684
	0x026D39A8 LDR W8, [X0 + 0xE0]
	0x026D39AC CBNZ W8, 0x26D39B4
	0x026D39B0 BL 0x1C16DFC
	0x026D39B4 LDR X8, [X19 + 0x20]
	0x026D39B8 LDR X8, [X8 + 0xC0]
	0x026D39BC LDR X0, [X8 + 0x48]
	0x026D39C0 LDRB W8, [X0 + 0x135]
	0x026D39C4 TBNZ X8, 0x0, 0x26D39CC
	0x026D39C8 BL 0x1C5C684

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1D08000
	006 Move W8, [X21+1150]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1A4B000
	014 Move X0, [X0+1584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1150], W8
	018 Move X8, [X20+32]
	019 Move X0, X19
	020 Move X8, [X8+192]
	021 Move X1, [X8+32]
	022 Call 0x26D3DAC, X0
	023 Compare X0, 0
	024 JumpIfEqual {54}
	025 Move X10, 0x1A4B000
	026 Move X8, [X0]
	027 Move X10, [X10+1584]
	028 Move X19, X0
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move X1, [X10]
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move W2, 2
	040 Move X0, X19
	041 Call 0x1C5D788
	042 Move W9, [X10]
	043 Add W9, W9, 2
	044 Add X8, X8, W9
	045 Add X0, X8, 312
	046 Move X2, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 CallNoReturn X2
	054 Call 0x1C17F20

Method: System.Void set_isReadOnly(System.Boolean value)

Disassembly:
	0x026D39CC LDR X8, [X0 + 0xB8]
	0x026D39D0 MOV X0, X20
	0x026D39D4 LDP X20, X19, [X31 + 0x20]
	0x026D39D8 LDP X22, X21, [X31 + 0x10]
	0x026D39DC LDR X1, [X8 + 0x28]
	0x026D39E0 MOV X2, X31
	0x026D39E4 LDR X30, [X31], #0x30
	0x026D39E8 B 0x3DF1C70
	0x026D39EC LDP X20, X19, [X31 + 0x20]
	0x026D39F0 LDP X22, X21, [X31 + 0x10]
	0x026D39F4 LDR X30, [X31], #0x30
	0x026D39F8 RET
	0x026D39FC BL 0x1C16F20
	0x026D3A00 STP X30, X19, [X31 - 0x10]!
	0x026D3A04 LDR X8, [X1 + 0x20]
	0x026D3A08 MOV X19, X0
	0x026D3A0C LDR X8, [X8 + 0xC0]
	0x026D3A10 LDR X1, [X8 + 0xB0]
	0x026D3A14 BL 0x26D2760
	0x026D3A18 LDR X8, [X19]
	0x026D3A1C MOV X1, X0
	0x026D3A20 MOV X0, X19
	0x026D3A24 LDR X9, [X8 + 0x8A8]
	0x026D3A28 LDR X2, [X8 + 0x8B0]
	0x026D3A2C BLR X9
	0x026D3A30 LDR X8, [X19]
	0x026D3A34 MOV X0, X19
	0x026D3A38 LDR X2, [X8 + 0x7F8]
	0x026D3A3C LDR X1, [X8 + 0x800]
	0x026D3A40 LDP X30, X19, [X31], #0x10
	0x026D3A44 BR X2
	0x026D3A48 RET
	0x026D3A4C SUB X31, X31, 0x40
	0x026D3A50 STR X30, [X31 + 0x10]
	0x026D3A54 STP X22, X21, [X31 + 0x20]
	0x026D3A58 STP X20, X19, [X31 + 0x30]
	0x026D3A5C ADRP X22, 0x1D07000
	0x026D3A60 ADRP X21, 0x1A4A000
	0x026D3A64 ADRP X20, 0x1A4A000
	0x026D3A68 LDRB W8, [X22 + 0x48A]
	0x026D3A6C LDR X21, [X21 + 0x718]
	0x026D3A70 LDR X20, [X20 + 0x720]
	0x026D3A74 MOV X19, X0
	0x026D3A78 TBNZ X8, 0x0, 0x26D3B08
	0x026D3A7C ADRP X0, 0x1A4A000
	0x026D3A80 LDR X0, [X0 + 0x720]
	0x026D3A84 BL 0x1C16CF4
	0x026D3A88 ADRP X0, 0x1A4A000
	0x026D3A8C LDR X0, [X0 + 0x6B8]
	0x026D3A90 BL 0x1C16CF4
	0x026D3A94 ADRP X0, 0x1A4A000
	0x026D3A98 LDR X0, [X0 + 0x728]
	0x026D3A9C BL 0x1C16CF4
	0x026D3AA0 ADRP X0, 0x1A4A000
	0x026D3AA4 LDR X0, [X0 + 0x718]
	0x026D3AA8 BL 0x1C16CF4
	0x026D3AAC ADRP X0, 0x1A4A000
	0x026D3AB0 LDR X0, [X0 + 0x730]
	0x026D3AB4 BL 0x1C16CF4
	0x026D3AB8 ADRP X0, 0x1A4A000
	0x026D3ABC LDR X0, [X0 + 0x738]
	0x026D3AC0 BL 0x1C16CF4
	0x026D3AC4 ADRP X0, 0x1A4A000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1D08000
	007 Move W8, [X22+1151]
	008 Move X21, X2
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1A4B000
	016 Move X0, [X0+1584]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1151], W8
	020 Move X8, [X21+32]
	021 Move X0, X19
	022 Move X8, [X8+192]
	023 Move X1, [X8+32]
	024 Call 0x26D3DAC, X0
	025 Compare X0, 0
	026 JumpIfEqual {73}
	027 Move X10, 0x1A4B000
	028 Move X8, [X0]
	029 Move X10, [X10+1584]
	030 Move X21, X0
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 3
	042 Move X0, X21
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 3
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X2, [X0+8]
	050 And W20, W20, 1
	051 Move X0, X21
	052 Move W1, W20
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, [X19+1104]
	055 Compare X8, 0
	056 JumpIfEqual {67}
	057 Move X3, [X8+24]
	058 Move X0, [X8+64]
	059 Move X2, [X8+40]
	060 Move W1, W20
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 CallNoReturn X3
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return 
	073 Call 0x1C17F20

Method: System.Void set_isPasswordField(System.Boolean value)

Disassembly:
	0x026D3AC8 LDR X0, [X0 + 0x740]
	0x026D3ACC BL 0x1C16CF4
	0x026D3AD0 ADRP X0, 0x1A49000
	0x026D3AD4 LDR X0, [X0 + 0xEB8]
	0x026D3AD8 BL 0x1C16CF4
	0x026D3ADC ADRP X0, 0x1A4A000
	0x026D3AE0 LDR X0, [X0 + 0x748]
	0x026D3AE4 BL 0x1C16CF4
	0x026D3AE8 ADRP X0, 0x1A4A000
	0x026D3AEC LDR X0, [X0 + 0x750]
	0x026D3AF0 BL 0x1C16CF4
	0x026D3AF4 ADRP X0, 0x1A49000
	0x026D3AF8 LDR X0, [X0 + 0xEC0]
	0x026D3AFC BL 0x1C16CF4
	0x026D3B00 MOVZ W8, 0x1
	0x026D3B04 STRB W8, [X22 + 0x48A]
	0x026D3B08 LDR X1, [X21]
	0x026D3B0C LDR X2, [X20]
	0x026D3B10 ADD X0, X31, 0x18
	0x026D3B14 STR X31, [X31 + 0x18]
	0x026D3B18 BL 0x29AA2DC
	0x026D3B1C LDR X0, [X19 + 0x20]!
	0x026D3B20 LDRB W8, [X0 + 0x135]
	0x026D3B24 TBNZ X8, 0x0, 0x26D3B2C
	0x026D3B28 BL 0x1C5C684
	0x026D3B2C LDR X8, [X0 + 0xC0]
	0x026D3B30 LDR X0, [X8 + 0x58]
	0x026D3B34 LDRB W8, [X0 + 0x135]
	0x026D3B38 TBNZ X8, 0x0, 0x26D3B40
	0x026D3B3C BL 0x1C5C684
	0x026D3B40 LDR X8, [X0 + 0xB8]
	0x026D3B44 LDR X9, [X31 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+1096]
	006 Compare X0, 0
	007 JumpIfEqual {38}
	008 Move X8, [X0]
	009 Move W20, W1
	010 Move X9, [X8+1928]
	011 Move X1, [X8+1936]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 And W8, W0, 1
	014 And W9, W20, 1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X0, [X19+1096]
	017 Compare X0, 0
	018 JumpIfEqual {38}
	019 Move X8, [X0]
	020 And W1, W20, 1
	021 Move X9, [X8+1944]
	022 Move X2, [X8+1952]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X0, [X19+1096]
	025 Compare X0, 0
	026 JumpIfEqual {38}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move W1, 2048
	030 Move X2, X31
	031 Move X30, [X31+32]
	032 Call VisualElement.IncrementVersion, X0, X1
	033 Return 
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return 
	038 Call 0x1C17F20

Method: System.Void set_autoCorrection(System.Boolean value)

Disassembly:
	0x026D3B48 STR X9, [X8]
	0x026D3B4C LDR X0, [X19]
	0x026D3B50 LDRB W8, [X0 + 0x135]
	0x026D3B54 TBNZ X8, 0x0, 0x26D3B5C
	0x026D3B58 BL 0x1C5C684
	0x026D3B5C LDR X8, [X0 + 0xC0]
	0x026D3B60 ADRP X21, 0x1A4A000
	0x026D3B64 LDR X0, [X8 + 0x58]
	0x026D3B68 LDRB W8, [X0 + 0x135]
	0x026D3B6C LDR X21, [X21 + 0x750]
	0x026D3B70 TBNZ X8, 0x0, 0x26D3B78
	0x026D3B74 BL 0x1C5C684
	0x026D3B78 LDR X1, [X21]
	0x026D3B7C LDR X2, [X20]
	0x026D3B80 ADD X0, X31, 0x8
	0x026D3B84 STR X31, [X31 + 0x8]
	0x026D3B88 BL 0x29AA2DC
	0x026D3B8C LDR X0, [X19]
	0x026D3B90 LDRB W8, [X0 + 0x135]
	0x026D3B94 TBNZ X8, 0x0, 0x26D3B9C
	0x026D3B98 BL 0x1C5C684
	0x026D3B9C LDR X8, [X0 + 0xC0]
	0x026D3BA0 LDR X0, [X8 + 0x58]
	0x026D3BA4 LDRB W8, [X0 + 0x135]
	0x026D3BA8 TBNZ X8, 0x0, 0x26D3BB0
	0x026D3BAC BL 0x1C5C684
	0x026D3BB0 LDR X8, [X0 + 0xB8]
	0x026D3BB4 LDR X9, [X31 + 0x8]
	0x026D3BB8 STR X9, [X8 + 0x8]
	0x026D3BBC LDR X0, [X19]
	0x026D3BC0 LDRB W8, [X0 + 0x135]
	0x026D3BC4 TBNZ X8, 0x0, 0x26D3BCC
	0x026D3BC8 BL 0x1C5C684
	0x026D3BCC LDR X8, [X0 + 0xC0]
	0x026D3BD0 ADRP X20, 0x1A4A000
	0x026D3BD4 LDR X0, [X8 + 0x58]
	0x026D3BD8 LDRB W8, [X0 + 0x135]
	0x026D3BDC LDR X20, [X20 + 0x740]
	0x026D3BE0 TBNZ X8, 0x0, 0x26D3BE8
	0x026D3BE4 BL 0x1C5C684
	0x026D3BE8 LDR X0, [X19]
	0x026D3BEC LDR X20, [X20]
	0x026D3BF0 LDRB W8, [X0 + 0x135]
	0x026D3BF4 TBNZ X8, 0x0, 0x26D3BFC
	0x026D3BF8 BL 0x1C5C684
	0x026D3BFC LDR X8, [X0 + 0xC0]
	0x026D3C00 LDR X0, [X8 + 0x58]
	0x026D3C04 LDRB W8, [X0 + 0x135]
	0x026D3C08 TBNZ X8, 0x0, 0x26D3C10
	0x026D3C0C BL 0x1C5C684
	0x026D3C10 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1D08000
	007 Move W8, [X22+1152]
	008 Move X20, X2
	009 Move W19, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1A4B000
	016 Move X0, [X0+1584]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1152], W8
	020 Move X8, [X20+32]
	021 Move X0, X21
	022 Move X8, [X8+192]
	023 Move X1, [X8+32]
	024 Call 0x26D3DAC, X0
	025 Compare X0, 0
	026 JumpIfEqual {58}
	027 Move X10, 0x1A4B000
	028 Move X8, [X0]
	029 Move X10, [X10+1584]
	030 Move X20, X0
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 26
	042 Move X0, X20
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 26
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X3, [X0]
	049 Move X2, [X0+8]
	050 And W1, W19, 1
	051 Move X0, X20
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 CallNoReturn X3
	058 Call 0x1C17F20

Method: System.Void set_hideMobileInput(System.Boolean value)

Disassembly:
	0x026D3C14 STR X20, [X8 + 0x10]
	0x026D3C18 LDR X0, [X19]
	0x026D3C1C LDRB W8, [X0 + 0x135]
	0x026D3C20 TBNZ X8, 0x0, 0x26D3C28
	0x026D3C24 BL 0x1C5C684
	0x026D3C28 LDR X8, [X0 + 0xC0]
	0x026D3C2C LDR X0, [X8 + 0x58]
	0x026D3C30 LDRB W8, [X0 + 0x135]
	0x026D3C34 TBNZ X8, 0x0, 0x26D3C3C
	0x026D3C38 BL 0x1C5C684
	0x026D3C3C LDR X0, [X19]
	0x026D3C40 LDRB W8, [X0 + 0x135]
	0x026D3C44 TBNZ X8, 0x0, 0x26D3C4C
	0x026D3C48 BL 0x1C5C684
	0x026D3C4C LDR X8, [X0 + 0xC0]
	0x026D3C50 ADRP X20, 0x1A49000
	0x026D3C54 LDR X0, [X8 + 0x58]
	0x026D3C58 LDRB W8, [X0 + 0x135]
	0x026D3C5C LDR X20, [X20 + 0xEB8]
	0x026D3C60 TBNZ X8, 0x0, 0x26D3C68
	0x026D3C64 BL 0x1C5C684
	0x026D3C68 LDR X8, [X0 + 0xB8]
	0x026D3C6C LDR X1, [X20]
	0x026D3C70 MOV X2, X31
	0x026D3C74 LDR X0, [X8 + 0x10]
	0x026D3C78 BL 0x321B938
	0x026D3C7C LDR X8, [X19]
	0x026D3C80 MOV X20, X0
	0x026D3C84 LDRB W9, [X8 + 0x135]
	0x026D3C88 TBNZ X9, 0x0, 0x26D3C98
	0x026D3C8C MOV X0, X8
	0x026D3C90 BL 0x1C5C684
	0x026D3C94 MOV X8, X0
	0x026D3C98 LDR X8, [X8 + 0xC0]
	0x026D3C9C LDR X0, [X8 + 0x58]
	0x026D3CA0 LDRB W8, [X0 + 0x135]
	0x026D3CA4 TBNZ X8, 0x0, 0x26D3CAC
	0x026D3CA8 BL 0x1C5C684
	0x026D3CAC LDR X8, [X0 + 0xB8]
	0x026D3CB0 STR X20, [X8 + 0x18]
	0x026D3CB4 LDR X0, [X19]
	0x026D3CB8 LDRB W8, [X0 + 0x135]
	0x026D3CBC TBNZ X8, 0x0, 0x26D3CC4
	0x026D3CC0 BL 0x1C5C684
	0x026D3CC4 LDR X8, [X0 + 0xC0]
	0x026D3CC8 LDR X0, [X8 + 0x58]
	0x026D3CCC LDRB W8, [X0 + 0x135]
	0x026D3CD0 TBNZ X8, 0x0, 0x26D3CD8
	0x026D3CD4 BL 0x1C5C684
	0x026D3CD8 LDR X0, [X19]
	0x026D3CDC LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1D08000
	007 Move W8, [X22+1153]
	008 Move X20, X2
	009 Move W19, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1A4B000
	016 Move X0, [X0+1584]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1153], W8
	020 Move X8, [X20+32]
	021 Move X0, X21
	022 Move X8, [X8+192]
	023 Move X1, [X8+32]
	024 Call 0x26D3DAC, X0
	025 Compare X0, 0
	026 JumpIfEqual {58}
	027 Move X10, 0x1A4B000
	028 Move X8, [X0]
	029 Move X10, [X10+1584]
	030 Move X20, X0
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 28
	042 Move X0, X20
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 28
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X3, [X0]
	049 Move X2, [X0+8]
	050 And W1, W19, 1
	051 Move X0, X20
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 CallNoReturn X3
	058 Call 0x1C17F20

Method: System.Void set_keyboardType(UnityEngine.TouchScreenKeyboardType value)

Disassembly:
	0x026D3CE0 TBNZ X8, 0x0, 0x26D3CE8
	0x026D3CE4 BL 0x1C5C684
	0x026D3CE8 LDR X8, [X0 + 0xC0]
	0x026D3CEC ADRP X20, 0x1A49000
	0x026D3CF0 LDR X0, [X8 + 0x58]
	0x026D3CF4 LDRB W8, [X0 + 0x135]
	0x026D3CF8 LDR X20, [X20 + 0xEC0]
	0x026D3CFC TBNZ X8, 0x0, 0x26D3D04
	0x026D3D00 BL 0x1C5C684
	0x026D3D04 LDR X8, [X0 + 0xB8]
	0x026D3D08 LDR X1, [X20]
	0x026D3D0C MOV X2, X31
	0x026D3D10 LDR X0, [X8 + 0x10]
	0x026D3D14 BL 0x321B938
	0x026D3D18 LDR X8, [X19]
	0x026D3D1C MOV X20, X0
	0x026D3D20 LDRB W9, [X8 + 0x135]
	0x026D3D24 TBNZ X9, 0x0, 0x26D3D34
	0x026D3D28 MOV X0, X8
	0x026D3D2C BL 0x1C5C684
	0x026D3D30 MOV X8, X0
	0x026D3D34 LDR X8, [X8 + 0xC0]
	0x026D3D38 LDR X0, [X8 + 0x58]
	0x026D3D3C LDRB W8, [X0 + 0x135]
	0x026D3D40 TBNZ X8, 0x0, 0x26D3D48
	0x026D3D44 BL 0x1C5C684
	0x026D3D48 LDR X8, [X0 + 0xB8]
	0x026D3D4C STR X20, [X8 + 0x20]
	0x026D3D50 LDR X0, [X19]
	0x026D3D54 LDRB W8, [X0 + 0x135]
	0x026D3D58 TBNZ X8, 0x0, 0x26D3D60
	0x026D3D5C BL 0x1C5C684
	0x026D3D60 LDR X8, [X0 + 0xC0]
	0x026D3D64 LDR X0, [X8 + 0x58]
	0x026D3D68 LDRB W8, [X0 + 0x135]
	0x026D3D6C TBNZ X8, 0x0, 0x26D3D74
	0x026D3D70 BL 0x1C5C684
	0x026D3D74 LDR X0, [X19]
	0x026D3D78 LDRB W8, [X0 + 0x135]
	0x026D3D7C TBNZ X8, 0x0, 0x26D3D84
	0x026D3D80 BL 0x1C5C684
	0x026D3D84 LDR X8, [X0 + 0xC0]
	0x026D3D88 ADRP X20, 0x1A4A000
	0x026D3D8C LDR X0, [X8 + 0x58]
	0x026D3D90 LDRB W8, [X0 + 0x135]
	0x026D3D94 LDR X20, [X20 + 0x748]
	0x026D3D98 TBNZ X8, 0x0, 0x26D3DA0
	0x026D3D9C BL 0x1C5C684
	0x026D3DA0 LDR X8, [X0 + 0xB8]
	0x026D3DA4 LDR X1, [X20]
	0x026D3DA8 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1D08000
	007 Move W8, [X22+1154]
	008 Move X20, X2
	009 Move W19, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1A4B000
	016 Move X0, [X0+1584]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1154], W8
	020 Move X8, [X20+32]
	021 Move X0, X21
	022 Move X8, [X8+192]
	023 Move X1, [X8+32]
	024 Call 0x26D3DAC, X0
	025 Compare X0, 0
	026 JumpIfEqual {58}
	027 Move X10, 0x1A4B000
	028 Move X8, [X0]
	029 Move X10, [X10+1584]
	030 Move X20, X0
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 30
	042 Move X0, X20
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 30
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X3, [X0]
	049 Move X2, [X0+8]
	050 Move X0, X20
	051 Move W1, W19
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 CallNoReturn X3
	058 Call 0x1C17F20

Method: UnityEngine.UIElements.ITextEdition get_textEdition()

Disassembly:
	0x026D3DAC LDR X0, [X8 + 0x10]
	0x026D3DB0 BL 0x321B938
	0x026D3DB4 LDR X8, [X19]
	0x026D3DB8 MOV X20, X0
	0x026D3DBC LDRB W9, [X8 + 0x135]
	0x026D3DC0 TBNZ X9, 0x0, 0x26D3DD0
	0x026D3DC4 MOV X0, X8
	0x026D3DC8 BL 0x1C5C684
	0x026D3DCC MOV X8, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+1096]
	003 Compare X8, 0
	004 JumpIfEqual {12}
	005 Move X0, [X8+968]
	006 Compare X0, 0
	007 JumpIfEqual {12}
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Call TextElement.get_edition, X0
	011 Return X0
	012 Call 0x1C17F20

Method: System.Void set_maxLength(System.Int32 value)

Disassembly:
	0x026D3DD0 LDR X8, [X8 + 0xC0]
	0x026D3DD4 LDR X0, [X8 + 0x58]
	0x026D3DD8 LDRB W8, [X0 + 0x135]
	0x026D3DDC TBNZ X8, 0x0, 0x26D3DE4
	0x026D3DE0 BL 0x1C5C684
	0x026D3DE4 LDR X8, [X0 + 0xB8]
	0x026D3DE8 STR X20, [X8 + 0x28]
	0x026D3DEC LDR X0, [X19]
	0x026D3DF0 LDRB W8, [X0 + 0x135]
	0x026D3DF4 TBNZ X8, 0x0, 0x26D3DFC
	0x026D3DF8 BL 0x1C5C684
	0x026D3DFC LDR X8, [X0 + 0xC0]
	0x026D3E00 LDR X0, [X8 + 0x58]
	0x026D3E04 LDRB W8, [X0 + 0x135]
	0x026D3E08 TBNZ X8, 0x0, 0x26D3E10
	0x026D3E0C BL 0x1C5C684
	0x026D3E10 LDR X0, [X19]
	0x026D3E14 LDRB W8, [X0 + 0x135]
	0x026D3E18 TBNZ X8, 0x0, 0x26D3E20
	0x026D3E1C BL 0x1C5C684
	0x026D3E20 LDR X8, [X0 + 0xC0]
	0x026D3E24 ADRP X20, 0x1A4A000
	0x026D3E28 LDR X0, [X8 + 0x58]
	0x026D3E2C LDRB W8, [X0 + 0x135]
	0x026D3E30 LDR X20, [X20 + 0x730]
	0x026D3E34 TBNZ X8, 0x0, 0x26D3E3C
	0x026D3E38 BL 0x1C5C684
	0x026D3E3C LDR X8, [X0 + 0xB8]
	0x026D3E40 LDR X1, [X20]
	0x026D3E44 MOV X2, X31
	0x026D3E48 LDR X0, [X8 + 0x20]
	0x026D3E4C BL 0x321B938
	0x026D3E50 LDR X8, [X19]
	0x026D3E54 MOV X20, X0
	0x026D3E58 LDRB W9, [X8 + 0x135]
	0x026D3E5C TBNZ X9, 0x0, 0x26D3E6C
	0x026D3E60 MOV X0, X8
	0x026D3E64 BL 0x1C5C684
	0x026D3E68 MOV X8, X0
	0x026D3E6C LDR X8, [X8 + 0xC0]
	0x026D3E70 LDR X0, [X8 + 0x58]
	0x026D3E74 LDRB W8, [X0 + 0x135]
	0x026D3E78 TBNZ X8, 0x0, 0x26D3E80
	0x026D3E7C BL 0x1C5C684
	0x026D3E80 LDR X8, [X0 + 0xB8]
	0x026D3E84 STR X20, [X8 + 0x30]
	0x026D3E88 LDR X0, [X19]
	0x026D3E8C LDRB W8, [X0 + 0x135]
	0x026D3E90 TBNZ X8, 0x0, 0x26D3E98
	0x026D3E94 BL 0x1C5C684
	0x026D3E98 LDR X8, [X0 + 0xC0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1D08000
	007 Move W8, [X22+1155]
	008 Move X20, X2
	009 Move W19, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1A4B000
	016 Move X0, [X0+1584]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1155], W8
	020 Move X8, [X20+32]
	021 Move X0, X21
	022 Move X8, [X8+192]
	023 Move X1, [X8+32]
	024 Call 0x26D3DAC, X0
	025 Compare X0, 0
	026 JumpIfEqual {58}
	027 Move X10, 0x1A4B000
	028 Move X8, [X0]
	029 Move X10, [X10+1584]
	030 Move X20, X0
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 5
	042 Move X0, X20
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 5
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X3, [X0]
	049 Move X2, [X0+8]
	050 Move X0, X20
	051 Move W1, W19
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 CallNoReturn X3
	058 Call 0x1C17F20

Method: System.Boolean get_isDelayed()

Disassembly:
	0x026D3E9C LDR X0, [X8 + 0x58]
	0x026D3EA0 LDRB W8, [X0 + 0x135]
	0x026D3EA4 TBNZ X8, 0x0, 0x26D3EAC
	0x026D3EA8 BL 0x1C5C684
	0x026D3EAC LDR X0, [X19]
	0x026D3EB0 LDRB W8, [X0 + 0x135]
	0x026D3EB4 TBNZ X8, 0x0, 0x26D3EBC
	0x026D3EB8 BL 0x1C5C684
	0x026D3EBC LDR X8, [X0 + 0xC0]
	0x026D3EC0 ADRP X20, 0x1A4A000
	0x026D3EC4 LDR X0, [X8 + 0x58]
	0x026D3EC8 LDRB W8, [X0 + 0x135]
	0x026D3ECC LDR X20, [X20 + 0x738]
	0x026D3ED0 TBNZ X8, 0x0, 0x26D3ED8
	0x026D3ED4 BL 0x1C5C684
	0x026D3ED8 LDR X8, [X0 + 0xB8]
	0x026D3EDC LDR X1, [X20]
	0x026D3EE0 MOV X2, X31
	0x026D3EE4 LDR X0, [X8 + 0x20]
	0x026D3EE8 BL 0x321B938
	0x026D3EEC LDR X8, [X19]
	0x026D3EF0 MOV X20, X0
	0x026D3EF4 LDRB W9, [X8 + 0x135]
	0x026D3EF8 TBNZ X9, 0x0, 0x26D3F08
	0x026D3EFC MOV X0, X8
	0x026D3F00 BL 0x1C5C684
	0x026D3F04 MOV X8, X0
	0x026D3F08 LDR X8, [X8 + 0xC0]
	0x026D3F0C LDR X0, [X8 + 0x58]
	0x026D3F10 LDRB W8, [X0 + 0x135]
	0x026D3F14 TBNZ X8, 0x0, 0x26D3F1C
	0x026D3F18 BL 0x1C5C684
	0x026D3F1C LDR X8, [X0 + 0xB8]
	0x026D3F20 STR X20, [X8 + 0x38]
	0x026D3F24 LDR X0, [X19]
	0x026D3F28 LDRB W8, [X0 + 0x135]
	0x026D3F2C TBNZ X8, 0x0, 0x26D3F34
	0x026D3F30 BL 0x1C5C684
	0x026D3F34 LDR X8, [X0 + 0xC0]
	0x026D3F38 LDR X0, [X8 + 0x58]
	0x026D3F3C LDRB W8, [X0 + 0x135]
	0x026D3F40 TBNZ X8, 0x0, 0x26D3F48
	0x026D3F44 BL 0x1C5C684
	0x026D3F48 LDR X0, [X19]
	0x026D3F4C LDRB W8, [X0 + 0x135]
	0x026D3F50 TBNZ X8, 0x0, 0x26D3F58
	0x026D3F54 BL 0x1C5C684

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1D08000
	006 Move W8, [X21+1156]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1A4B000
	014 Move X0, [X0+1584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1156], W8
	018 Move X8, [X20+32]
	019 Move X0, X19
	020 Move X8, [X8+192]
	021 Move X1, [X8+32]
	022 Call 0x26D3DAC, X0
	023 Compare X0, 0
	024 JumpIfEqual {54}
	025 Move X10, 0x1A4B000
	026 Move X8, [X0]
	027 Move X10, [X10+1584]
	028 Move X19, X0
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move X1, [X10]
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move W2, 6
	040 Move X0, X19
	041 Call 0x1C5D788
	042 Move W9, [X10]
	043 Add W9, W9, 6
	044 Add X8, X8, W9
	045 Add X0, X8, 312
	046 Move X2, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 CallNoReturn X2
	054 Call 0x1C17F20

Method: System.Void set_isDelayed(System.Boolean value)

Disassembly:
	0x026D3F58 LDR X8, [X0 + 0xC0]
	0x026D3F5C ADRP X20, 0x1A4A000
	0x026D3F60 LDR X0, [X8 + 0x58]
	0x026D3F64 LDRB W8, [X0 + 0x135]
	0x026D3F68 LDR X20, [X20 + 0x6B8]
	0x026D3F6C TBNZ X8, 0x0, 0x26D3F74
	0x026D3F70 BL 0x1C5C684
	0x026D3F74 LDR X8, [X0 + 0xB8]
	0x026D3F78 LDR X1, [X20]
	0x026D3F7C MOV X2, X31
	0x026D3F80 LDR X0, [X8 + 0x38]
	0x026D3F84 BL 0x321B938
	0x026D3F88 LDR X8, [X19]
	0x026D3F8C MOV X20, X0
	0x026D3F90 LDRB W9, [X8 + 0x135]
	0x026D3F94 TBNZ X9, 0x0, 0x26D3FA4
	0x026D3F98 MOV X0, X8
	0x026D3F9C BL 0x1C5C684
	0x026D3FA0 MOV X8, X0
	0x026D3FA4 LDR X8, [X8 + 0xC0]
	0x026D3FA8 LDR X0, [X8 + 0x58]
	0x026D3FAC LDRB W8, [X0 + 0x135]
	0x026D3FB0 TBNZ X8, 0x0, 0x26D3FB8
	0x026D3FB4 BL 0x1C5C684
	0x026D3FB8 LDR X8, [X0 + 0xB8]
	0x026D3FBC STR X20, [X8 + 0x40]
	0x026D3FC0 LDR X0, [X19]
	0x026D3FC4 LDRB W8, [X0 + 0x135]
	0x026D3FC8 TBNZ X8, 0x0, 0x26D3FD0
	0x026D3FCC BL 0x1C5C684
	0x026D3FD0 LDR X8, [X0 + 0xC0]
	0x026D3FD4 ADRP X20, 0x1A4A000
	0x026D3FD8 LDR X0, [X8 + 0x58]
	0x026D3FDC LDRB W8, [X0 + 0x135]
	0x026D3FE0 LDR X20, [X20 + 0x728]
	0x026D3FE4 TBNZ X8, 0x0, 0x26D3FEC
	0x026D3FE8 BL 0x1C5C684
	0x026D3FEC LDR X0, [X19]
	0x026D3FF0 LDR X20, [X20]
	0x026D3FF4 LDRB W8, [X0 + 0x135]
	0x026D3FF8 TBNZ X8, 0x0, 0x26D4000
	0x026D3FFC BL 0x1C5C684
	0x026D4000 LDR X8, [X0 + 0xC0]
	0x026D4004 LDR X0, [X8 + 0x58]
	0x026D4008 LDRB W8, [X0 + 0x135]
	0x026D400C TBNZ X8, 0x0, 0x26D4014
	0x026D4010 BL 0x1C5C684
	0x026D4014 LDR X8, [X0 + 0xB8]
	0x026D4018 STR X20, [X8 + 0x48]
	0x026D401C LDR X0, [X19]
	0x026D4020 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1D08000
	007 Move W8, [X22+1157]
	008 Move X20, X2
	009 Move W19, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1A4B000
	016 Move X0, [X0+1584]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1157], W8
	020 Move X8, [X20+32]
	021 Move X0, X21
	022 Move X8, [X8+192]
	023 Move X1, [X8+32]
	024 Call 0x26D3DAC, X0
	025 Compare X0, 0
	026 JumpIfEqual {58}
	027 Move X10, 0x1A4B000
	028 Move X8, [X0]
	029 Move X10, [X10+1584]
	030 Move X20, X0
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 7
	042 Move X0, X20
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 7
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X3, [X0]
	049 Move X2, [X0+8]
	050 And W1, W19, 1
	051 Move X0, X20
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 CallNoReturn X3
	058 Call 0x1C17F20

Method: System.Void set_maskChar(System.Char value)

Disassembly:
	0x026D4024 TBNZ X8, 0x0, 0x26D402C
	0x026D4028 BL 0x1C5C684
	0x026D402C LDR X8, [X0 + 0xC0]
	0x026D4030 LDR X0, [X8 + 0x58]
	0x026D4034 LDRB W8, [X0 + 0x135]
	0x026D4038 TBNZ X8, 0x0, 0x26D4040
	0x026D403C BL 0x1C5C684
	0x026D4040 LDP X20, X19, [X31 + 0x30]
	0x026D4044 LDP X22, X21, [X31 + 0x20]
	0x026D4048 LDR X30, [X31 + 0x10]
	0x026D404C ADD X31, X31, 0x40
	0x026D4050 RET
	0x026D4054 LDR X0, [X0 + 0x450]
	0x026D4058 RET
	0x026D405C STR X30, [X31 - 0x10]!
	0x026D4060 LDR X0, [X0 + 0x450]
	0x026D4064 CBZ X0, 0x26D407C
	0x026D4068 LDR X8, [X1 + 0x20]
	0x026D406C LDR X8, [X8 + 0xC0]
	0x026D4070 LDR X1, [X8 + 0x10]
	0x026D4074 LDR X30, [X31], #0x10
	0x026D4078 B 0x26B57C4
	0x026D407C BL 0x1C16F20
	0x026D4080 STR X30, [X31 - 0x10]!
	0x026D4084 LDR X0, [X0 + 0x450]
	0x026D4088 CBZ X0, 0x26D40A0
	0x026D408C LDR X8, [X2 + 0x20]
	0x026D4090 LDR X8, [X8 + 0xC0]
	0x026D4094 LDR X2, [X8 + 0x18]
	0x026D4098 LDR X30, [X31], #0x10
	0x026D409C B 0x26B57E8
	0x026D40A0 BL 0x1C16F20
	0x026D40A4 STR X30, [X31 - 0x40]!
	0x026D40A8 STP X24, X23, [X31 + 0x10]
	0x026D40AC STP X22, X21, [X31 + 0x20]
	0x026D40B0 STP X20, X19, [X31 + 0x30]
	0x026D40B4 ADRP X21, 0x1D06000
	0x026D40B8 LDRB W8, [X21 + 0x48B]
	0x026D40BC MOV X19, X1
	0x026D40C0 MOV X20, X0
	0x026D40C4 TBNZ X8, 0x0, 0x26D40DC
	0x026D40C8 ADRP X0, 0x1A1F000
	0x026D40CC LDR X0, [X0 + 0xD28]
	0x026D40D0 BL 0x1C16CF4
	0x026D40D4 MOVZ W8, 0x1
	0x026D40D8 STRB W8, [X21 + 0x48B]
	0x026D40DC ADRP X24, 0x1A1F000
	0x026D40E0 LDR X21, [X20 + 0x458]
	0x026D40E4 LDR X24, [X24 + 0xD28]
	0x026D40E8 ADD X20, X20, 0x458
	0x026D40EC MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1D07000
	007 Move W8, [X22+1158]
	008 Move X20, X2
	009 Move W19, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1A4A000
	016 Move X0, [X0+1584]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1158], W8
	020 Move X8, [X20+32]
	021 Move X0, X21
	022 Move X8, [X8+192]
	023 Move X1, [X8+32]
	024 Call 0x26D3DAC, X0
	025 Compare X0, 0
	026 JumpIfEqual {58}
	027 Move X10, 0x1A4A000
	028 Move X8, [X0]
	029 Move X10, [X10+1584]
	030 Move X20, X0
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 22
	042 Move X0, X20
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 22
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X3, [X0]
	049 Move X2, [X0+8]
	050 Move X0, X20
	051 Move W1, W19
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 CallNoReturn X3
	058 Call 0x1C17F20

Method: System.String ValueToString(TValueType value)

Disassembly:
	

ISIL:
No ISIL was generated
Method: TValueType StringToValue(System.String str)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void .ctor(System.String label, System.Int32 maxLength, System.Char maskChar, UnityEngine.UIElements.TextInputBaseField`1/TextInputBase<TValueType> textInputBase)

Disassembly:
	0x026D40F0 MOV X1, X19
	0x026D40F4 MOV X2, X31
	0x026D40F8 BL 0x33C0DE4
	0x026D40FC CBZ X0, 0x26D411C
	0x026D4100 LDR X23, [X24]
	0x026D4104 MOV X22, X0
	0x026D4108 MOV X1, X23
	0x026D410C BL 0x1C16E00
	0x026D4110 MOV X1, X0
	0x026D4114 CBNZ X0, 0x26D4120
	0x026D4118 B 0x26D414C
	0x026D411C MOV X1, X31
	0x026D4120 MOV X0, X20
	0x026D4124 MOV X2, X21
	0x026D4128 BL 0x1C24138
	0x026D412C CMP X21, X0
	0x026D4130 MOV X21, X0
	0x026D4134 B.NE 0x26D40EC
	0x026D4138 LDP X20, X19, [X31 + 0x30]
	0x026D413C LDP X22, X21, [X31 + 0x20]
	0x026D4140 LDP X24, X23, [X31 + 0x10]
	0x026D4144 LDR X30, [X31], #0x40
	0x026D4148 RET
	0x026D414C MOV X0, X22
	0x026D4150 MOV X1, X23
	0x026D4154 BL 0x1C171E0
	0x026D4158 STR X30, [X31 - 0x40]!
	0x026D415C STP X24, X23, [X31 + 0x10]
	0x026D4160 STP X22, X21, [X31 + 0x20]
	0x026D4164 STP X20, X19, [X31 + 0x30]
	0x026D4168 ADRP X21, 0x1D06000
	0x026D416C LDRB W8, [X21 + 0x48C]
	0x026D4170 MOV X19, X1
	0x026D4174 MOV X20, X0
	0x026D4178 TBNZ X8, 0x0, 0x26D4190
	0x026D417C ADRP X0, 0x1A1F000
	0x026D4180 LDR X0, [X0 + 0xD28]
	0x026D4184 BL 0x1C16CF4
	0x026D4188 MOVZ W8, 0x1
	0x026D418C STRB W8, [X21 + 0x48C]
	0x026D4190 ADRP X24, 0x1A1F000
	0x026D4194 LDR X21, [X20 + 0x458]
	0x026D4198 LDR X24, [X24 + 0xD28]
	0x026D419C ADD X20, X20, 0x458
	0x026D41A0 MOV X0, X21
	0x026D41A4 MOV X1, X19
	0x026D41A8 MOV X2, X31
	0x026D41AC BL 0x33C0FDC
	0x026D41B0 CBZ X0, 0x26D41D0
	0x026D41B4 LDR X23, [X24]
	0x026D41B8 MOV X22, X0
	0x026D41BC MOV X1, X23
	0x026D41C0 BL 0x1C16E00
	0x026D41C4 MOV X1, X0
	0x026D41C8 CBNZ X0, 0x26D41D4
	0x026D41CC B 0x26D4200
	0x026D41D0 MOV X1, X31
	0x026D41D4 MOV X0, X20
	0x026D41D8 MOV X2, X21
	0x026D41DC BL 0x1C24138
	0x026D41E0 CMP X21, X0
	0x026D41E4 MOV X21, X0
	0x026D41E8 B.NE 0x26D41A0
	0x026D41EC LDP X20, X19, [X31 + 0x30]
	0x026D41F0 LDP X22, X21, [X31 + 0x20]
	0x026D41F4 LDP X24, X23, [X31 + 0x10]
	0x026D41F8 LDR X30, [X31], #0x40
	0x026D41FC RET
	0x026D4200 MOV X0, X22
	0x026D4204 MOV X1, X23
	0x026D4208 BL 0x1C171E0
	0x026D420C STP X30, X21, [X31 - 0x20]!
	0x026D4210 STP X20, X19, [X31 + 0x10]
	0x026D4214 ADRP X21, 0x1D06000
	0x026D4218 LDRB W8, [X21 + 0x48D]
	0x026D421C MOV X20, X1
	0x026D4220 MOV X19, X0
	0x026D4224 TBNZ X8, 0x0, 0x26D423C
	0x026D4228 ADRP X0, 0x1A49000
	0x026D422C LDR X0, [X0 + 0x630]
	0x026D4230 BL 0x1C16CF4
	0x026D4234 MOVZ W8, 0x1
	0x026D4238 STRB W8, [X21 + 0x48D]
	0x026D423C LDR X8, [X20 + 0x20]
	0x026D4240 MOV X0, X19
	0x026D4244 LDR X8, [X8 + 0xC0]
	0x026D4248 LDR X1, [X8 + 0x20]
	0x026D424C BL 0x26D46A8
	0x026D4250 CBZ X0, 0x26D42C4
	0x026D4254 ADRP X10, 0x1A49000
	0x026D4258 LDR X8, [X0]
	0x026D425C LDR X10, [X10 + 0x630]
	0x026D4260 MOV X19, X0
	0x026D4264 LDRH W9, [X8 + 0x12E]
	0x026D4268 LDR X1, [X10]
	0x026D426C CBZ X9, 0x26D4290
	0x026D4270 LDR X10, [X8 + 0xB0]
	0x026D4274 ADD X10, X10, 0x8
	0x026D4278 LDUR X11, [X10 - 0x8]
	0x026D427C CMP X11, X1
	0x026D4280 B.EQ 0x26D42A0
	0x026D4284 SUBS X9, X9, 0x1
	0x026D4288 ADD X10, X10, 0x10
	0x026D428C B.NE 0x26D4278
	0x026D4290 MOVZ W2, 0x2
	0x026D4294 MOV X0, X19
	0x026D4298 BL 0x1C5C788
	0x026D429C B 0x26D42B0
	0x026D42A0 LDR W9, [X10]
	0x026D42A4 ADD W9, W9, 0x2
	0x026D42A8 ADD X8, X8, W9, 0x4, SXTW
	0x026D42AC ADD X0, X8, 0x138
	0x026D42B0 LDP X2, X1, [X0]
	0x026D42B4 MOV X0, X19
	0x026D42B8 LDP X20, X19, [X31 + 0x10]
	0x026D42BC LDP X30, X21, [X31], #0x20
	0x026D42C0 BR X2
	0x026D42C4 BL 0x1C16F20
	0x026D42C8 STR X30, [X31 - 0x30]!
	0x026D42CC STP X22, X21, [X31 + 0x10]
	0x026D42D0 STP X20, X19, [X31 + 0x20]
	0x026D42D4 ADRP X22, 0x1D06000
	0x026D42D8 LDRB W8, [X22 + 0x48E]
	0x026D42DC MOV X21, X2
	0x026D42E0 MOV W20, W1
	0x026D42E4 MOV X19, X0
	0x026D42E8 TBNZ X8, 0x0, 0x26D4300
	0x026D42EC ADRP X0, 0x1A49000
	0x026D42F0 LDR X0, [X0 + 0x630]
	0x026D42F4 BL 0x1C16CF4
	0x026D42F8 MOVZ W8, 0x1
	0x026D42FC STRB W8, [X22 + 0x48E]
	0x026D4300 LDR X8, [X21 + 0x20]
	0x026D4304 MOV X0, X19
	0x026D4308 LDR X8, [X8 + 0xC0]
	0x026D430C LDR X1, [X8 + 0x20]
	0x026D4310 BL 0x26D46A8
	0x026D4314 CBZ X0, 0x26D43C0
	0x026D4318 ADRP X10, 0x1A49000
	0x026D431C LDR X8, [X0]
	0x026D4320 LDR X10, [X10 + 0x630]
	0x026D4324 MOV X21, X0
	0x026D4328 LDRH W9, [X8 + 0x12E]
	0x026D432C LDR X1, [X10]
	0x026D4330 CBZ X9, 0x26D4354
	0x026D4334 LDR X10, [X8 + 0xB0]
	0x026D4338 ADD X10, X10, 0x8
	0x026D433C LDUR X11, [X10 - 0x8]
	0x026D4340 CMP X11, X1
	0x026D4344 B.EQ 0x26D4364
	0x026D4348 SUBS X9, X9, 0x1
	0x026D434C ADD X10, X10, 0x10
	0x026D4350 B.NE 0x26D433C
	0x026D4354 MOVZ W2, 0x3
	0x026D4358 MOV X0, X21
	0x026D435C BL 0x1C5C788
	0x026D4360 B 0x26D4374
	0x026D4364 LDR W9, [X10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x1D07000
	010 Move W8, [X25+1159]
	011 Move X20, X5
	012 Move X22, X4
	013 Move W21, W3
	014 Move W23, W2
	015 Move X24, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x1A4A000
	022 Move X0, [X0+1592]
	023 Call 0x1C17CF4
	024 Move X0, 0x1A4A000
	025 Move X0, [X0+1600]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+1159], W8
	029 Move X8, [X20+32]
	030 Move X8, [X8+192]
	031 Move X0, [X8+72]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X8, [X20+32]
	043 Move X0, X19
	044 Move X1, X24
	045 Move X2, X22
	046 Move X8, [X8+192]
	047 Move X3, [X8+64]
	048 Call BaseField`1<Double>..ctor, X0, X1, X2
	049 Compare X19, 0
	050 JumpIfEqual {199}
	051 Move W1, 1
	052 Move X0, X19
	053 Move X2, X31
	054 Move [X19+36], W31
	055 Call Focusable.set_delegatesFocus, X0, X1
	056 Move X8, [X19+1024]
	057 Compare X8, 0
	058 JumpIfEqual {199}
	059 Move X9, [X20+32]
	060 Move TEMP, 0
	061 Not TEMP
	062 Move W10, TEMP
	063 Move X9, [X9+192]
	064 Move [X8+36], W10
	065 Move X0, [X9+88]
	066 Move W8, [X0+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {72}
	071 Call 0x1C5D684
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X8, [X20+32]
	077 Move X8, [X8+192]
	078 Move X0, [X8+88]
	079 Move W8, [X0+309]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {85}
	084 Call 0x1C5D684
	085 Move X8, [X0+184]
	086 Move X0, X19
	087 Move X2, X31
	088 Move X1, [X8+16]
	089 Call VisualElement.AddToClassList, X0, X1
	090 Move X8, [X20+32]
	091 Move X24, [X19+1024]
	092 Move X8, [X8+192]
	093 Move X0, [X8+88]
	094 Move W8, [X0+309]
	095 Move TEMP, X8
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {100}
	099 Call 0x1C5D684
	100 Compare X24, 0
	101 JumpIfEqual {199}
	102 Move X8, [X0+184]
	103 Move X0, X24
	104 Move X2, X31
	105 Move X1, [X8+24]
	106 Call VisualElement.AddToClassList, X0, X1
	107 Move X8, [X20+32]
	108 Move X0, X19
	109 Move X8, [X8+192]
	110 Move X1, [X8+96]
	111 Call BaseField`1<Double>.get_visualInput, X0
	112 Move X8, [X20+32]
	113 Move X24, X0
	114 Move X8, [X8+192]
	115 Move X8, [X8+88]
	116 Move W9, [X8+309]
	117 Move TEMP, X9
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {124}
	121 Move X0, X8
	122 Call 0x1C5D684
	123 Move X8, X0
	124 Compare X24, 0
	125 JumpIfEqual {199}
	126 Move X8, [X8+184]
	127 Move X0, X24
	128 Move X2, X31
	129 Move X1, [X8+32]
	130 Call VisualElement.AddToClassList, X0, X1
	131 Move X8, [X20+32]
	132 Move X0, X19
	133 Move X8, [X8+192]
	134 Move X1, [X8+96]
	135 Call BaseField`1<Double>.get_visualInput, X0
	136 Move X8, [X20+32]
	137 Move X24, X0
	138 Move X8, [X8+192]
	139 Move X8, [X8+88]
	140 Move W9, [X8+309]
	141 Move TEMP, X9
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {148}
	145 Move X0, X8
	146 Call 0x1C5D684
	147 Move X8, X0
	148 Compare X24, 0
	149 JumpIfEqual {199}
	150 Move X8, [X8+184]
	151 Move X0, X24
	152 Move X2, X31
	153 Move X1, [X8+48]
	154 Call VisualElement.AddToClassList, X0, X1
	155 Move [X19+1096], X22
	156 Compare X22, 0
	157 JumpIfEqual {199}
	158 Move X8, [X20+32]
	159 Move X0, X22
	160 Move W1, W23
	161 Move X8, [X8+192]
	162 Move X2, [X8+104]
	163 Call 0x26B2A9C, X0, X1
	164 Move X0, [X19+1096]
	165 Compare X0, 0
	166 JumpIfEqual {199}
	167 Move X8, [X20+32]
	168 Move X22, 0x1A4A000
	169 Move X23, 0x1A4A000
	170 Move W1, W21
	171 Move X8, [X8+192]
	172 Move X2, [X8+112]
	173 Move X22, [X22+1600]
	174 Move X23, [X23+1592]
	175 Call 0x26B2B58, X0, X1
	176 Move X0, [X22]
	177 Call 0x1C17F10
	178 Move X8, [X20+32]
	179 Move X1, X19
	180 Move X3, X31
	181 Move X20, X0
	182 Move X8, [X8+192]
	183 Move X2, [X8+120]
	184 Call 0x2D0F824, X0, X1, X2
	185 Move X3, [X23]
	186 Move X0, X19
	187 Move X1, X20
	188 Move X20, [X31+48]
	189 Move X19, [X31+56]
	190 Move X22, [X31+32]
	191 Move X21, [X31+40]
	192 Move X24, [X31+16]
	193 Move X23, [X31+24]
	194 Move W2, W31
	195 Move X30, [X31+64]
	196 Move X25, [X31+72]
	197 Call 0x21A2534, X0, X1, X2
	198 Return 
	199 Call 0x1C17F20

Method: System.Void OnFieldCustomStyleResolved(UnityEngine.UIElements.CustomStyleResolvedEvent e)

Disassembly:
	0x026D4368 ADD W9, W9, 0x3
	0x026D436C ADD X8, X8, W9, 0x4, SXTW
	0x026D4370 ADD X0, X8, 0x138
	0x026D4374 LDP X8, X2, [X0]
	0x026D4378 AND W20, W20, 0x1
	0x026D437C MOV X0, X21
	0x026D4380 MOV W1, W20
	0x026D4384 BLR X8
	0x026D4388 LDR X8, [X19 + 0x458]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+1096]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X2+32]
	006 Move X8, [X8+192]
	007 Move X2, [X8+128]
	008 Move X30, [X31+16]
	009 Call 0x26B43E0, X0, X1
	010 Return 
	011 Call 0x1C17F20

Method: System.Void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x026D438C CBZ X8, 0x26D43B0
	0x026D4390 LDR X3, [X8 + 0x18]
	0x026D4394 LDR X0, [X8 + 0x40]
	0x026D4398 LDR X2, [X8 + 0x28]
	0x026D439C MOV W1, W20
	0x026D43A0 LDP X20, X19, [X31 + 0x20]
	0x026D43A4 LDP X22, X21, [X31 + 0x10]
	0x026D43A8 LDR X30, [X31], #0x30
	0x026D43AC BR X3
	0x026D43B0 LDP X20, X19, [X31 + 0x20]
	0x026D43B4 LDP X22, X21, [X31 + 0x10]
	0x026D43B8 LDR X30, [X31], #0x30
	0x026D43BC RET
	0x026D43C0 BL 0x1C16F20
	0x026D43C4 STR X30, [X31 - 0x20]!
	0x026D43C8 STP X20, X19, [X31 + 0x10]
	0x026D43CC MOV X19, X0
	0x026D43D0 LDR X0, [X0 + 0x450]
	0x026D43D4 CBZ X0, 0x26D4440
	0x026D43D8 LDR X8, [X0]
	0x026D43DC MOV W20, W1
	0x026D43E0 LDR X9, [X8 + 0x788]
	0x026D43E4 LDR X1, [X8 + 0x790]
	0x026D43E8 BLR X9
	0x026D43EC AND W8, W0, 0x1
	0x026D43F0 AND W9, W20, 0x1
	0x026D43F4 CMP W8, W9
	0x026D43F8 B.EQ 0x26D4434
	0x026D43FC LDR X0, [X19 + 0x450]
	0x026D4400 CBZ X0, 0x26D4440
	0x026D4404 LDR X8, [X0]
	0x026D4408 AND W1, W20, 0x1
	0x026D440C LDR X9, [X8 + 0x798]
	0x026D4410 LDR X2, [X8 + 0x7A0]
	0x026D4414 BLR X9
	0x026D4418 LDR X0, [X19 + 0x450]
	0x026D441C CBZ X0, 0x26D4440
	0x026D4420 LDP X20, X19, [X31 + 0x10]
	0x026D4424 MOVZ W1, 0x800
	0x026D4428 MOV X2, X31
	0x026D442C LDR X30, [X31], #0x20
	0x026D4430 B 0x3DE5048
	0x026D4434 LDP X20, X19, [X31 + 0x10]
	0x026D4438 LDR X30, [X31], #0x20
	0x026D443C RET
	0x026D4440 BL 0x1C16F20
	0x026D4444 STR X30, [X31 - 0x30]!
	0x026D4448 STP X22, X21, [X31 + 0x10]
	0x026D444C STP X20, X19, [X31 + 0x20]
	0x026D4450 ADRP X22, 0x1D06000
	0x026D4454 LDRB W8, [X22 + 0x48F]
	0x026D4458 MOV X20, X2
	0x026D445C MOV W19, W1
	0x026D4460 MOV X21, X0
	0x026D4464 TBNZ X8, 0x0, 0x26D447C
	0x026D4468 ADRP X0, 0x1A49000
	0x026D446C LDR X0, [X0 + 0x630]
	0x026D4470 BL 0x1C16CF4
	0x026D4474 MOVZ W8, 0x1
	0x026D4478 STRB W8, [X22 + 0x48F]
	0x026D447C LDR X8, [X20 + 0x20]
	0x026D4480 MOV X0, X21
	0x026D4484 LDR X8, [X8 + 0xC0]
	0x026D4488 LDR X1, [X8 + 0x20]
	0x026D448C BL 0x26D46A8
	0x026D4490 CBZ X0, 0x26D450C
	0x026D4494 ADRP X10, 0x1A49000
	0x026D4498 LDR X8, [X0]
	0x026D449C LDR X10, [X10 + 0x630]
	0x026D44A0 MOV X20, X0
	0x026D44A4 LDRH W9, [X8 + 0x12E]
	0x026D44A8 LDR X1, [X10]
	0x026D44AC CBZ X9, 0x26D44D0
	0x026D44B0 LDR X10, [X8 + 0xB0]
	0x026D44B4 ADD X10, X10, 0x8
	0x026D44B8 LDUR X11, [X10 - 0x8]
	0x026D44BC CMP X11, X1
	0x026D44C0 B.EQ 0x26D44E0
	0x026D44C4 SUBS X9, X9, 0x1
	0x026D44C8 ADD X10, X10, 0x10
	0x026D44CC B.NE 0x26D44B8
	0x026D44D0 MOVZ W2, 0x1A
	0x026D44D4 MOV X0, X20
	0x026D44D8 BL 0x1C5C788
	0x026D44DC B 0x26D44F0
	0x026D44E0 LDR W9, [X10]
	0x026D44E4 ADD W9, W9, 0x1A
	0x026D44E8 ADD X8, X8, W9, 0x4, SXTW
	0x026D44EC ADD X0, X8, 0x138
	0x026D44F0 LDP X3, X2, [X0]
	0x026D44F4 AND W1, W19, 0x1
	0x026D44F8 MOV X0, X20
	0x026D44FC LDP X20, X19, [X31 + 0x20]
	0x026D4500 LDP X22, X21, [X31 + 0x10]
	0x026D4504 LDR X30, [X31], #0x30
	0x026D4508 BR X3
	0x026D450C BL 0x1C16F20
	0x026D4510 STR X30, [X31 - 0x30]!
	0x026D4514 STP X22, X21, [X31 + 0x10]
	0x026D4518 STP X20, X19, [X31 + 0x20]
	0x026D451C ADRP X22, 0x1D06000
	0x026D4520 LDRB W8, [X22 + 0x490]
	0x026D4524 MOV X20, X2
	0x026D4528 MOV W19, W1
	0x026D452C MOV X21, X0
	0x026D4530 TBNZ X8, 0x0, 0x26D4548
	0x026D4534 ADRP X0, 0x1A49000
	0x026D4538 LDR X0, [X0 + 0x630]
	0x026D453C BL 0x1C16CF4
	0x026D4540 MOVZ W8, 0x1
	0x026D4544 STRB W8, [X22 + 0x490]
	0x026D4548 LDR X8, [X20 + 0x20]
	0x026D454C MOV X0, X21
	0x026D4550 LDR X8, [X8 + 0xC0]
	0x026D4554 LDR X1, [X8 + 0x20]
	0x026D4558 BL 0x26D46A8
	0x026D455C CBZ X0, 0x26D45D8
	0x026D4560 ADRP X10, 0x1A49000
	0x026D4564 LDR X8, [X0]
	0x026D4568 LDR X10, [X10 + 0x630]
	0x026D456C MOV X20, X0
	0x026D4570 LDRH W9, [X8 + 0x12E]
	0x026D4574 LDR X1, [X10]
	0x026D4578 CBZ X9, 0x26D459C
	0x026D457C LDR X10, [X8 + 0xB0]
	0x026D4580 ADD X10, X10, 0x8
	0x026D4584 LDUR X11, [X10 - 0x8]
	0x026D4588 CMP X11, X1
	0x026D458C B.EQ 0x26D45AC
	0x026D4590 SUBS X9, X9, 0x1
	0x026D4594 ADD X10, X10, 0x10
	0x026D4598 B.NE 0x26D4584
	0x026D459C MOVZ W2, 0x1C
	0x026D45A0 MOV X0, X20
	0x026D45A4 BL 0x1C5C788
	0x026D45A8 B 0x26D45BC
	0x026D45AC LDR W9, [X10]
	0x026D45B0 ADD W9, W9, 0x1C
	0x026D45B4 ADD X8, X8, W9, 0x4, SXTW
	0x026D45B8 ADD X0, X8, 0x138
	0x026D45BC LDP X3, X2, [X0]
	0x026D45C0 AND W1, W19, 0x1
	0x026D45C4 MOV X0, X20
	0x026D45C8 LDP X20, X19, [X31 + 0x20]
	0x026D45CC LDP X22, X21, [X31 + 0x10]
	0x026D45D0 LDR X30, [X31], #0x30
	0x026D45D4 BR X3
	0x026D45D8 BL 0x1C16F20
	0x026D45DC STR X30, [X31 - 0x30]!
	0x026D45E0 STP X22, X21, [X31 + 0x10]
	0x026D45E4 STP X20, X19, [X31 + 0x20]
	0x026D45E8 ADRP X22, 0x1D06000
	0x026D45EC LDRB W8, [X22 + 0x491]
	0x026D45F0 MOV X20, X2
	0x026D45F4 MOV W19, W1
	0x026D45F8 MOV X21, X0
	0x026D45FC TBNZ X8, 0x0, 0x26D4614
	0x026D4600 ADRP X0, 0x1A49000
	0x026D4604 LDR X0, [X0 + 0x630]
	0x026D4608 BL 0x1C16CF4
	0x026D460C MOVZ W8, 0x1
	0x026D4610 STRB W8, [X22 + 0x491]
	0x026D4614 LDR X8, [X20 + 0x20]
	0x026D4618 MOV X0, X21
	0x026D461C LDR X8, [X8 + 0xC0]
	0x026D4620 LDR X1, [X8 + 0x20]
	0x026D4624 BL 0x26D46A8
	0x026D4628 CBZ X0, 0x26D46A4
	0x026D462C ADRP X10, 0x1A49000
	0x026D4630 LDR X8, [X0]
	0x026D4634 LDR X10, [X10 + 0x630]
	0x026D4638 MOV X20, X0
	0x026D463C LDRH W9, [X8 + 0x12E]
	0x026D4640 LDR X1, [X10]
	0x026D4644 CBZ X9, 0x26D4668
	0x026D4648 LDR X10, [X8 + 0xB0]
	0x026D464C ADD X10, X10, 0x8
	0x026D4650 LDUR X11, [X10 - 0x8]
	0x026D4654 CMP X11, X1
	0x026D4658 B.EQ 0x26D4678
	0x026D465C SUBS X9, X9, 0x1
	0x026D4660 ADD X10, X10, 0x10
	0x026D4664 B.NE 0x26D4650
	0x026D4668 MOVZ W2, 0x1E
	0x026D466C MOV X0, X20
	0x026D4670 BL 0x1C5C788
	0x026D4674 B 0x26D4688
	0x026D4678 LDR W9, [X10]
	0x026D467C ADD W9, W9, 0x1E
	0x026D4680 ADD X8, X8, W9, 0x4, SXTW
	0x026D4684 ADD X0, X8, 0x138
	0x026D4688 LDP X3, X2, [X0]
	0x026D468C MOV X0, X20
	0x026D4690 MOV W1, W19
	0x026D4694 LDP X20, X19, [X31 + 0x20]
	0x026D4698 LDP X22, X21, [X31 + 0x10]
	0x026D469C LDR X30, [X31], #0x30
	0x026D46A0 BR X3
	0x026D46A4 BL 0x1C16F20
	0x026D46A8 STR X30, [X31 - 0x10]!
	0x026D46AC LDR X8, [X0 + 0x450]
	0x026D46B0 CBZ X8, 0x26D46C8
	0x026D46B4 LDR X0, [X8 + 0x3C8]
	0x026D46B8 CBZ X0, 0x26D46C8
	0x026D46BC MOV X1, X31
	0x026D46C0 LDR X30, [X31], #0x10
	0x026D46C4 B 0x3E0AF0C
	0x026D46C8 BL 0x1C16F20
	0x026D46CC STR X30, [X31 - 0x30]!
	0x026D46D0 STP X22, X21, [X31 + 0x10]
	0x026D46D4 STP X20, X19, [X31 + 0x20]
	0x026D46D8 ADRP X22, 0x1D06000
	0x026D46DC LDRB W8, [X22 + 0x492]
	0x026D46E0 MOV X20, X2
	0x026D46E4 MOV W19, W1
	0x026D46E8 MOV X21, X0
	0x026D46EC TBNZ X8, 0x0, 0x26D4704
	0x026D46F0 ADRP X0, 0x1A49000
	0x026D46F4 LDR X0, [X0 + 0x630]
	0x026D46F8 BL 0x1C16CF4
	0x026D46FC MOVZ W8, 0x1
	0x026D4700 STRB W8, [X22 + 0x492]
	0x026D4704 LDR X8, [X20 + 0x20]
	0x026D4708 MOV X0, X21
	0x026D470C LDR X8, [X8 + 0xC0]
	0x026D4710 LDR X1, [X8 + 0x20]
	0x026D4714 BL 0x26D46A8
	0x026D4718 CBZ X0, 0x26D4794
	0x026D471C ADRP X10, 0x1A49000
	0x026D4720 LDR X8, [X0]
	0x026D4724 LDR X10, [X10 + 0x630]
	0x026D4728 MOV X20, X0
	0x026D472C LDRH W9, [X8 + 0x12E]
	0x026D4730 LDR X1, [X10]
	0x026D4734 CBZ X9, 0x26D4758
	0x026D4738 LDR X10, [X8 + 0xB0]
	0x026D473C ADD X10, X10, 0x8
	0x026D4740 LDUR X11, [X10 - 0x8]
	0x026D4744 CMP X11, X1
	0x026D4748 B.EQ 0x26D4768
	0x026D474C SUBS X9, X9, 0x1
	0x026D4750 ADD X10, X10, 0x10
	0x026D4754 B.NE 0x26D4740
	0x026D4758 MOVZ W2, 0x5
	0x026D475C MOV X0, X20
	0x026D4760 BL 0x1C5C788
	0x026D4764 B 0x26D4778
	0x026D4768 LDR W9, [X10]
	0x026D476C ADD W9, W9, 0x5

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1D07000
	007 Move W8, [X22+1160]
	008 Move X21, X2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0x1A4A000
	016 Move X0, [X0+1744]
	017 Call 0x1C17CF4
	018 Move X0, 0x1A4A000
	019 Move X0, [X0+1752]
	020 Call 0x1C17CF4
	021 Move X0, 0x1A4A000
	022 Move X0, [X0+1760]
	023 Call 0x1C17CF4
	024 Move X0, 0x1A4A000
	025 Move X0, [X0+1768]
	026 Call 0x1C17CF4
	027 Move X0, 0x1A4A000
	028 Move X0, [X0+1776]
	029 Call 0x1C17CF4
	030 Move X0, 0x1A4A000
	031 Move X0, [X0+1784]
	032 Call 0x1C17CF4
	033 Move X0, 0x1A4A000
	034 Move X0, [X0+1792]
	035 Call 0x1C17CF4
	036 Move X0, 0x1A4A000
	037 Move X0, [X0+1800]
	038 Call 0x1C17CF4
	039 Move X0, 0x1A4A000
	040 Move X0, [X0+1808]
	041 Call 0x1C17CF4
	042 Move X0, 0x1A4A000
	043 Move X0, [X0+1584]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X22+1160], W8
	047 Compare X19, 0
	048 JumpIfEqual {274}
	049 Move X0, X19
	050 Move X1, X20
	051 Move X2, X31
	052 Call CallbackEventHandler.ExecuteDefaultActionAtTarget, X0, X1
	053 Move X8, [X21+32]
	054 Move X0, X19
	055 Move X8, [X8+192]
	056 Move X1, [X8+32]
	057 Call 0x26D3DAC, X0
	058 Compare X0, 0
	059 JumpIfEqual {274}
	060 Move X10, 0x1A4A000
	061 Move X8, [X0]
	062 Move X10, [X10+1584]
	063 Move X21, X0
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move X1, [X10]
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move W2, 2
	075 Move X0, X21
	076 Call 0x1C5D788
	077 Move W9, [X10]
	078 Add W9, W9, 2
	079 Add X8, X8, W9
	080 Add X0, X8, 312
	081 Move X8, [X0]
	082 Move X1, [X0+8]
	083 Move X0, X21
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {95}
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X30, [X31+48]
	094 Return 
	095 Compare X20, 0
	096 JumpIfEqual {274}
	097 Move X8, [X20]
	098 Move X0, X20
	099 Move X9, [X8+392]
	100 Move X1, [X8+400]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X8, 0x1A4A000
	103 Move X8, [X8+1800]
	104 Move X21, X0
	105 Move X8, [X8]
	106 Move W9, [X8+224]
	107 Compare W9, 0
	108 JumpIfNotEqual {111}
	109 Move X0, X8
	110 Call 0x1C17DFC
	111 Move X8, 0x1A4A000
	112 Move X8, [X8+1752]
	113 Move X0, [X8]
	114 Call 0x2D0E5C8
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X8, [X19+1096]
	117 Compare X8, 0
	118 JumpIfEqual {274}
	119 Move X9, [X20+72]
	120 Move X0, [X8+968]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Compare X0, 0
	123 JumpIfEqual {274}
	124 Move X8, [X0]
	125 Move X20, [X31+32]
	126 Move X19, [X31+40]
	127 Move X22, [X31+16]
	128 Move X21, [X31+24]
	129 Move X2, [X8+584]
	130 Move X1, [X8+592]
	131 Move X30, [X31+48]
	132 CallNoReturn X2
	133 Move X8, [X20]
	134 Move X0, X20
	135 Move X9, [X8+392]
	136 Move X1, [X8+400]
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move X8, 0x1A4A000
	139 Move X8, [X8+1776]
	140 Move X21, X0
	141 Move X8, [X8]
	142 Move W9, [X8+224]
	143 Compare W9, 0
	144 JumpIfNotEqual {147}
	145 Move X0, X8
	146 Call 0x1C17DFC
	147 Move X8, 0x1A4A000
	148 Move X8, [X8+1760]
	149 Move X0, [X8]
	150 Call 0x2D0E5C8
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move W8, [X19+1032]
	153 Compare W8, 0
	154 JumpIfEqual {258}
	155 Move X8, [X19+1096]
	156 Compare X8, 0
	157 JumpIfEqual {274}
	158 Move X21, [X8+968]
	159 Compare X21, 0
	160 JumpIfEqual {274}
	161 Move X10, 0x1A4A000
	162 Move X8, [X21]
	163 Move X10, [X10+1808]
	164 NotImplemented "Instruction LDRH not yet implemented."
	165 Move X1, [X10]
	166 Compare X9, 0
	167 JumpIfEqual {174}
	168 Move X10, [X8+176]
	169 Add X10, X10, 8
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Subtract X9, X9, 1
	173 Add X10, X10, 16
	174 Move W2, 2
	175 Move X0, X21
	176 Call 0x1C5D788
	177 Move X8, [X20]
	178 Move X0, X20
	179 Move X9, [X8+392]
	180 Move X1, [X8+400]
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Move X8, 0x1A4A000
	183 Move X8, [X8+1792]
	184 Move X21, X0
	185 Move X8, [X8]
	186 Move W9, [X8+224]
	187 Compare W9, 0
	188 JumpIfNotEqual {191}
	189 Move X0, X8
	190 Call 0x1C17DFC
	191 Move X8, 0x1A4A000
	192 Move X8, [X8+1744]
	193 Move X0, [X8]
	194 Call 0x2D0E5C8
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X0, X19
	197 Move X20, [X31+32]
	198 Move X19, [X31+40]
	199 Move X22, [X31+16]
	200 Move X21, [X31+24]
	201 Move W1, W31
	202 Move X2, X31
	203 Move X30, [X31+48]
	204 Call Focusable.set_delegatesFocus, X0, X1
	205 Return 
	206 Move X8, [X20]
	207 Move X0, X20
	208 Move X9, [X8+392]
	209 Move X1, [X8+400]
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Move X8, 0x1A4A000
	212 Move X8, [X8+1784]
	213 Move X21, X0
	214 Move X8, [X8]
	215 Move W9, [X8+224]
	216 Compare W9, 0
	217 JumpIfNotEqual {220}
	218 Move X0, X8
	219 Call 0x1C17DFC
	220 Move X8, 0x1A4A000
	221 Move X8, [X8+1768]
	222 Move X0, [X8]
	223 Call 0x2D0E5C8
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move W8, [X19+1032]
	226 Compare W8, 0
	227 JumpIfEqual {233}
	228 Move X8, [X19]
	229 Move X0, X19
	230 Move X9, [X8+2168]
	231 Move X1, [X8+2176]
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Move W1, 1
	234 Move X0, X19
	235 Move X2, X31
	236 Call Focusable.set_delegatesFocus, X0, X1
	237 Move X8, [X20+72]
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move X9, [X19+1024]
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X8, [X19+1096]
	242 Compare X8, 0
	243 JumpIfEqual {274}
	244 Move X8, [X8+968]
	245 Compare X8, 0
	246 JumpIfEqual {274}
	247 Move W9, [X19+1088]
	248 Move [X8+36], W9
	249 Move W9, [X10]
	250 Add W9, W9, 2
	251 Add X8, X8, W9
	252 Add X0, X8, 312
	253 Move X8, [X0]
	254 Move X2, [X0+8]
	255 Move X0, X21
	256 Move X1, X31
	257 NotImplemented "Instruction BLR not yet implemented."
	258 Move X8, [X20+72]
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move X9, [X19+1024]
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move X8, [X19+1096]
	263 Compare X8, 0
	264 JumpIfEqual {274}
	265 Move X8, [X8+968]
	266 Compare X8, 0
	267 JumpIfEqual {274}
	268 Move W9, [X8+36]
	269 Move TEMP, 0
	270 Not TEMP
	271 Move W10, TEMP
	272 Move [X19+1088], W9
	273 Move [X8+36], W10
	274 Call 0x1C17F20

Method: System.Void UpdateMixedValueContent()

Disassembly:
	0x026D4770 ADD X8, X8, W9, 0x4, SXTW
	0x026D4774 ADD X0, X8, 0x138
	0x026D4778 LDP X3, X2, [X0]
	0x026D477C MOV X0, X20
	0x026D4780 MOV W1, W19
	0x026D4784 LDP X20, X19, [X31 + 0x20]
	0x026D4788 LDP X22, X21, [X31 + 0x10]
	0x026D478C LDR X30, [X31], #0x30
	0x026D4790 BR X3
	0x026D4794 BL 0x1C16F20
	0x026D4798 STP X30, X21, [X31 - 0x20]!
	0x026D479C STP X20, X19, [X31 + 0x10]
	0x026D47A0 ADRP X21, 0x1D06000
	0x026D47A4 LDRB W8, [X21 + 0x493]
	0x026D47A8 MOV X20, X1
	0x026D47AC MOV X19, X0
	0x026D47B0 TBNZ X8, 0x0, 0x26D47C8
	0x026D47B4 ADRP X0, 0x1A49000
	0x026D47B8 LDR X0, [X0 + 0x630]
	0x026D47BC BL 0x1C16CF4
	0x026D47C0 MOVZ W8, 0x1
	0x026D47C4 STRB W8, [X21 + 0x493]
	0x026D47C8 LDR X8, [X20 + 0x20]
	0x026D47CC MOV X0, X19
	0x026D47D0 LDR X8, [X8 + 0xC0]
	0x026D47D4 LDR X1, [X8 + 0x20]
	0x026D47D8 BL 0x26D46A8
	0x026D47DC CBZ X0, 0x26D4850
	0x026D47E0 ADRP X10, 0x1A49000
	0x026D47E4 LDR X8, [X0]
	0x026D47E8 LDR X10, [X10 + 0x630]
	0x026D47EC MOV X19, X0
	0x026D47F0 LDRH W9, [X8 + 0x12E]
	0x026D47F4 LDR X1, [X10]
	0x026D47F8 CBZ X9, 0x26D481C
	0x026D47FC LDR X10, [X8 + 0xB0]
	0x026D4800 ADD X10, X10, 0x8
	0x026D4804 LDUR X11, [X10 - 0x8]
	0x026D4808 CMP X11, X1
	0x026D480C B.EQ 0x26D482C
	0x026D4810 SUBS X9, X9, 0x1
	0x026D4814 ADD X10, X10, 0x10
	0x026D4818 B.NE 0x26D4804
	0x026D481C MOVZ W2, 0x6
	0x026D4820 MOV X0, X19
	0x026D4824 BL 0x1C5C788
	0x026D4828 B 0x26D483C
	0x026D482C LDR W9, [X10]
	0x026D4830 ADD W9, W9, 0x6
	0x026D4834 ADD X8, X8, W9, 0x4, SXTW
	0x026D4838 ADD X0, X8, 0x138
	0x026D483C LDP X2, X1, [X0]
	0x026D4840 MOV X0, X19
	0x026D4844 LDP X20, X19, [X31 + 0x10]
	0x026D4848 LDP X30, X21, [X31], #0x20
	0x026D484C BR X2
	0x026D4850 BL 0x1C16F20
	0x026D4854 STR X30, [X31 - 0x30]!
	0x026D4858 STP X22, X21, [X31 + 0x10]
	0x026D485C STP X20, X19, [X31 + 0x20]
	0x026D4860 ADRP X22, 0x1D06000
	0x026D4864 LDRB W8, [X22 + 0x494]
	0x026D4868 MOV X20, X2
	0x026D486C MOV W19, W1
	0x026D4870 MOV X21, X0
	0x026D4874 TBNZ X8, 0x0, 0x26D488C
	0x026D4878 ADRP X0, 0x1A49000
	0x026D487C LDR X0, [X0 + 0x630]
	0x026D4880 BL 0x1C16CF4
	0x026D4884 MOVZ W8, 0x1
	0x026D4888 STRB W8, [X22 + 0x494]
	0x026D488C LDR X8, [X20 + 0x20]
	0x026D4890 MOV X0, X21
	0x026D4894 LDR X8, [X8 + 0xC0]
	0x026D4898 LDR X1, [X8 + 0x20]
	0x026D489C BL 0x26D46A8
	0x026D48A0 CBZ X0, 0x26D491C
	0x026D48A4 ADRP X10, 0x1A49000
	0x026D48A8 LDR X8, [X0]
	0x026D48AC LDR X10, [X10 + 0x630]
	0x026D48B0 MOV X20, X0
	0x026D48B4 LDRH W9, [X8 + 0x12E]
	0x026D48B8 LDR X1, [X10]
	0x026D48BC CBZ X9, 0x26D48E0
	0x026D48C0 LDR X10, [X8 + 0xB0]
	0x026D48C4 ADD X10, X10, 0x8
	0x026D48C8 LDUR X11, [X10 - 0x8]
	0x026D48CC CMP X11, X1
	0x026D48D0 B.EQ 0x26D48F0
	0x026D48D4 SUBS X9, X9, 0x1
	0x026D48D8 ADD X10, X10, 0x10
	0x026D48DC B.NE 0x26D48C8
	0x026D48E0 MOVZ W2, 0x7
	0x026D48E4 MOV X0, X20
	0x026D48E8 BL 0x1C5C788
	0x026D48EC B 0x26D4900
	0x026D48F0 LDR W9, [X10]
	0x026D48F4 ADD W9, W9, 0x7
	0x026D48F8 ADD X8, X8, W9, 0x4, SXTW
	0x026D48FC ADD X0, X8, 0x138
	0x026D4900 LDP X3, X2, [X0]
	0x026D4904 AND W1, W19, 0x1
	0x026D4908 MOV X0, X20
	0x026D490C LDP X20, X19, [X31 + 0x20]
	0x026D4910 LDP X22, X21, [X31 + 0x10]
	0x026D4914 LDR X30, [X31], #0x30
	0x026D4918 BR X3
	0x026D491C BL 0x1C16F20
	0x026D4920 STR X30, [X31 - 0x30]!
	0x026D4924 STP X22, X21, [X31 + 0x10]
	0x026D4928 STP X20, X19, [X31 + 0x20]
	0x026D492C ADRP X22, 0x1D06000
	0x026D4930 LDRB W8, [X22 + 0x495]
	0x026D4934 MOV X20, X2
	0x026D4938 MOV W19, W1
	0x026D493C MOV X21, X0
	0x026D4940 TBNZ X8, 0x0, 0x26D4958
	0x026D4944 ADRP X0, 0x1A49000
	0x026D4948 LDR X0, [X0 + 0x630]
	0x026D494C BL 0x1C16CF4
	0x026D4950 MOVZ W8, 0x1
	0x026D4954 STRB W8, [X22 + 0x495]
	0x026D4958 LDR X8, [X20 + 0x20]
	0x026D495C MOV X0, X21
	0x026D4960 LDR X8, [X8 + 0xC0]
	0x026D4964 LDR X1, [X8 + 0x20]
	0x026D4968 BL 0x26D46A8
	0x026D496C CBZ X0, 0x26D49E8
	0x026D4970 ADRP X10, 0x1A49000
	0x026D4974 LDR X8, [X0]
	0x026D4978 LDR X10, [X10 + 0x630]
	0x026D497C MOV X20, X0
	0x026D4980 LDRH W9, [X8 + 0x12E]
	0x026D4984 LDR X1, [X10]
	0x026D4988 CBZ X9, 0x26D49AC
	0x026D498C LDR X10, [X8 + 0xB0]
	0x026D4990 ADD X10, X10, 0x8
	0x026D4994 LDUR X11, [X10 - 0x8]
	0x026D4998 CMP X11, X1
	0x026D499C B.EQ 0x26D49BC
	0x026D49A0 SUBS X9, X9, 0x1
	0x026D49A4 ADD X10, X10, 0x10
	0x026D49A8 B.NE 0x26D4994
	0x026D49AC MOVZ W2, 0x16
	0x026D49B0 MOV X0, X20
	0x026D49B4 BL 0x1C5C788
	0x026D49B8 B 0x26D49CC
	0x026D49BC LDR W9, [X10]
	0x026D49C0 ADD W9, W9, 0x16
	0x026D49C4 ADD X8, X8, W9, 0x4, SXTW
	0x026D49C8 ADD X0, X8, 0x138
	0x026D49CC LDP X3, X2, [X0]
	0x026D49D0 MOV X0, X20
	0x026D49D4 MOV W1, W19
	0x026D49D8 LDP X20, X19, [X31 + 0x20]
	0x026D49DC LDP X22, X21, [X31 + 0x10]
	0x026D49E0 LDR X30, [X31], #0x30
	0x026D49E4 BR X3
	0x026D49E8 BL 0x1C16F20
	0x026D49EC STP X30, X25, [X31 - 0x40]!
	0x026D49F0 STP X24, X23, [X31 + 0x10]
	0x026D49F4 STP X22, X21, [X31 + 0x20]
	0x026D49F8 STP X20, X19, [X31 + 0x30]
	0x026D49FC ADRP X25, 0x1D06000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1D07000
	007 Move W8, [X21+1161]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1A4A000
	015 Move X0, [X0+1808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1161], W8
	019 Compare X20, 0
	020 JumpIfEqual {213}
	021 Move W8, [X20+1032]
	022 Compare W8, 0
	023 JumpIfEqual {70}
	024 Move X8, [X20+1096]
	025 Compare X8, 0
	026 JumpIfEqual {213}
	027 Move X9, [X19+32]
	028 Move X21, [X8+968]
	029 Move X9, [X9+192]
	030 Move X0, [X9+72]
	031 Move W9, [X0+309]
	032 Move TEMP, X9
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X8, [X19+32]
	042 Move X8, [X8+192]
	043 Move X0, [X8+72]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Compare X21, 0
	051 JumpIfEqual {213}
	052 Move X10, 0x1A4A000
	053 Move X9, [X0+184]
	054 Move X8, [X21]
	055 Move X10, [X10+1808]
	056 Move X22, [X9+64]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Move X1, [X10]
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move W2, 2
	068 Move X0, X21
	069 Call 0x1C5D788
	070 Move X8, [X20]
	071 Move X0, X20
	072 Move X9, [X8+2248]
	073 Move X1, [X8+2256]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X8, [X19+32]
	076 Move X0, X20
	077 Move X8, [X8+192]
	078 Move X1, [X8+96]
	079 Call BaseField`1<Double>.get_visualInput, X0
	080 Compare X0, 0
	081 JumpIfEqual {110}
	082 Move X8, [X19+32]
	083 Move X21, X0
	084 Move X8, [X8+192]
	085 Move X0, [X8+72]
	086 Move W8, [X0+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {92}
	091 Call 0x1C5D684
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X8, [X19+32]
	097 Move X8, [X8+192]
	098 Move X0, [X8+72]
	099 Move W8, [X0+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Call 0x1C5D684
	105 Move X8, [X0+184]
	106 Move X0, X21
	107 Move X2, X31
	108 Move X1, [X8+40]
	109 Call VisualElement.RemoveFromClassList, X0, X1
	110 Move X8, [X19+32]
	111 Move X8, [X8+192]
	112 Move X0, [X8+72]
	113 Move W8, [X0+309]
	114 Move TEMP, X8
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {119}
	118 Call 0x1C5D684
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X8, [X19+32]
	124 Move X8, [X8+192]
	125 Move X0, [X8+72]
	126 Move W8, [X0+309]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {132}
	131 Call 0x1C5D684
	132 Move X8, [X0+184]
	133 Move X0, X20
	134 Move X20, [X31+32]
	135 Move X19, [X31+40]
	136 Move X22, [X31+16]
	137 Move X21, [X31+24]
	138 Move X1, [X8+40]
	139 Move X2, X31
	140 Move X30, [X31+48]
	141 Call VisualElement.RemoveFromClassList, X0, X1
	142 Return 
	143 Move W9, [X10]
	144 Add W9, W9, 2
	145 Add X8, X8, W9
	146 Add X0, X8, 312
	147 Move X8, [X0]
	148 Move X2, [X0+8]
	149 Move X0, X21
	150 Move X1, X22
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move X8, [X19+32]
	153 Move X8, [X8+192]
	154 Move X0, [X8+72]
	155 Move W8, [X0+309]
	156 Move TEMP, X8
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {161}
	160 Call 0x1C5D684
	161 Move X8, [X0+184]
	162 Move X0, X20
	163 Move X2, X31
	164 Move X1, [X8+40]
	165 Call VisualElement.AddToClassList, X0, X1
	166 Move X8, [X19+32]
	167 Move X0, X20
	168 Move X8, [X8+192]
	169 Move X1, [X8+96]
	170 Call BaseField`1<Double>.get_visualInput, X0
	171 Compare X0, 0
	172 JumpIfEqual {207}
	173 Move X8, [X19+32]
	174 Move X20, X0
	175 Move X8, [X8+192]
	176 Move X0, [X8+72]
	177 Move W8, [X0+309]
	178 Move TEMP, X8
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfEqual {183}
	182 Call 0x1C5D684
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Move X8, [X19+32]
	188 Move X8, [X8+192]
	189 Move X0, [X8+72]
	190 Move W8, [X0+309]
	191 Move TEMP, X8
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfEqual {196}
	195 Call 0x1C5D684
	196 Move X8, [X0+184]
	197 Move X0, X20
	198 Move X20, [X31+32]
	199 Move X19, [X31+40]
	200 Move X22, [X31+16]
	201 Move X21, [X31+24]
	202 Move X1, [X8+40]
	203 Move X2, X31
	204 Move X30, [X31+48]
	205 Call VisualElement.AddToClassList, X0, X1
	206 Return 
	207 Move X20, [X31+32]
	208 Move X19, [X31+40]
	209 Move X22, [X31+16]
	210 Move X21, [X31+24]
	211 Move X30, [X31+48]
	212 Return 
	213 Call 0x1C17F20

Method: System.Void UpdateValueFromText()

Disassembly:
	0x026D4A00 LDRB W8, [X25 + 0x496]
	0x026D4A04 MOV X20, X5
	0x026D4A08 MOV X22, X4
	0x026D4A0C MOV W21, W3
	0x026D4A10 MOV W23, W2
	0x026D4A14 MOV X24, X1
	0x026D4A18 MOV X19, X0
	0x026D4A1C TBNZ X8, 0x0, 0x26D4A40
	0x026D4A20 ADRP X0, 0x1A49000
	0x026D4A24 LDR X0, [X0 + 0x638]
	0x026D4A28 BL 0x1C16CF4
	0x026D4A2C ADRP X0, 0x1A49000
	0x026D4A30 LDR X0, [X0 + 0x640]
	0x026D4A34 BL 0x1C16CF4
	0x026D4A38 MOVZ W8, 0x1
	0x026D4A3C STRB W8, [X25 + 0x496]
	0x026D4A40 LDR X8, [X20 + 0x20]
	0x026D4A44 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move X8, [X8+192]
	006 Move X1, [X8+176]
	007 Call 0x26D3760, X0
	008 Move X8, [X19]
	009 Move X1, X0
	010 Move X0, X19
	011 Move X9, [X8+2216]
	012 Move X2, [X8+2224]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move X8, [X19]
	015 Move X0, X19
	016 Move X2, [X8+2040]
	017 Move X1, [X8+2048]
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 CallNoReturn X2

Method: System.Void UpdateTextFromValue()

Disassembly:
	0x026D4A48 LDR X0, [X8 + 0x48]

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x026D4A4C LDRB W8, [X0 + 0x135]
	0x026D4A50 TBNZ X8, 0x0, 0x26D4A58
	0x026D4A54 BL 0x1C5C684
	0x026D4A58 LDR W8, [X0 + 0xE0]
	0x026D4A5C CBNZ W8, 0x26D4A64
	0x026D4A60 BL 0x1C16DFC
	0x026D4A64 LDR X8, [X20 + 0x20]
	0x026D4A68 MOV X0, X19
	0x026D4A6C MOV X1, X24
	0x026D4A70 MOV X2, X22
	0x026D4A74 LDR X8, [X8 + 0xC0]
	0x026D4A78 LDR X3, [X8 + 0x40]
	0x026D4A7C BL 0x277D3E0
	0x026D4A80 CBZ X19, 0x26D4C60
	0x026D4A84 MOVZ W1, 0x1
	0x026D4A88 MOV X0, X19
	0x026D4A8C MOV X2, X31
	0x026D4A90 STR W31, [X19 + 0x24]
	0x026D4A94 BL 0x3DAED80
	0x026D4A98 LDR X8, [X19 + 0x408]
	0x026D4A9C CBZ X8, 0x26D4C60
	0x026D4AA0 LDR X9, [X20 + 0x20]
	0x026D4AA4 MOVN W10, 0x0
	0x026D4AA8 LDR X9, [X9 + 0xC0]
	0x026D4AAC STR W10, [X8 + 0x24]
	0x026D4AB0 LDR X0, [X9 + 0x58]
	0x026D4AB4 LDRB W8, [X0 + 0x135]
	0x026D4AB8 TBNZ X8, 0x0, 0x26D4AC0
	0x026D4ABC BL 0x1C5C684
	0x026D4AC0 LDR W8, [X0 + 0xE0]
	0x026D4AC4 CBNZ W8, 0x26D4ACC
	0x026D4AC8 BL 0x1C16DFC
	0x026D4ACC LDR X8, [X20 + 0x20]
	0x026D4AD0 LDR X8, [X8 + 0xC0]
	0x026D4AD4 LDR X0, [X8 + 0x58]
	0x026D4AD8 LDRB W8, [X0 + 0x135]
	0x026D4ADC TBNZ X8, 0x0, 0x26D4AE4
	0x026D4AE0 BL 0x1C5C684
	0x026D4AE4 LDR X8, [X0 + 0xB8]
	0x026D4AE8 MOV X0, X19
	0x026D4AEC MOV X2, X31
	0x026D4AF0 LDR X1, [X8 + 0x10]
	0x026D4AF4 BL 0x3DF1C70
	0x026D4AF8 LDR X8, [X20 + 0x20]
	0x026D4AFC LDR X24, [X19 + 0x408]
	0x026D4B00 LDR X8, [X8 + 0xC0]
	0x026D4B04 LDR X0, [X8 + 0x58]
	0x026D4B08 LDRB W8, [X0 + 0x135]
	0x026D4B0C TBNZ X8, 0x0, 0x26D4B14
	0x026D4B10 BL 0x1C5C684
	0x026D4B14 CBZ X24, 0x26D4C60
	0x026D4B18 LDR X8, [X0 + 0xB8]
	0x026D4B1C MOV X0, X24
	0x026D4B20 MOV X2, X31
	0x026D4B24 LDR X1, [X8 + 0x18]
	0x026D4B28 BL 0x3DF1C70
	0x026D4B2C LDR X8, [X20 + 0x20]
	0x026D4B30 MOV X0, X19
	0x026D4B34 LDR X8, [X8 + 0xC0]
	0x026D4B38 LDR X1, [X8 + 0x60]
	0x026D4B3C BL 0x277C904
	0x026D4B40 LDR X8, [X20 + 0x20]
	0x026D4B44 MOV X24, X0
	0x026D4B48 LDR X8, [X8 + 0xC0]
	0x026D4B4C LDR X8, [X8 + 0x58]
	0x026D4B50 LDRB W9, [X8 + 0x135]
	0x026D4B54 TBNZ X9, 0x0, 0x26D4B64
	0x026D4B58 MOV X0, X8
	0x026D4B5C BL 0x1C5C684
	0x026D4B60 MOV X8, X0
	0x026D4B64 CBZ X24, 0x26D4C60
	0x026D4B68 LDR X8, [X8 + 0xB8]
	0x026D4B6C MOV X0, X24
	0x026D4B70 MOV X2, X31
	0x026D4B74 LDR X1, [X8 + 0x20]
	0x026D4B78 BL 0x3DF1C70
	0x026D4B7C LDR X8, [X20 + 0x20]
	0x026D4B80 MOV X0, X19
	0x026D4B84 LDR X8, [X8 + 0xC0]
	0x026D4B88 LDR X1, [X8 + 0x60]
	0x026D4B8C BL 0x277C904
	0x026D4B90 LDR X8, [X20 + 0x20]
	0x026D4B94 MOV X24, X0
	0x026D4B98 LDR X8, [X8 + 0xC0]
	0x026D4B9C LDR X8, [X8 + 0x58]
	0x026D4BA0 LDRB W9, [X8 + 0x135]
	0x026D4BA4 TBNZ X9, 0x0, 0x26D4BB4
	0x026D4BA8 MOV X0, X8
	0x026D4BAC BL 0x1C5C684
	0x026D4BB0 MOV X8, X0
	0x026D4BB4 CBZ X24, 0x26D4C60
	0x026D4BB8 LDR X8, [X8 + 0xB8]
	0x026D4BBC MOV X0, X24
	0x026D4BC0 MOV X2, X31
	0x026D4BC4 LDR X1, [X8 + 0x30]
	0x026D4BC8 BL 0x3DF1C70
	0x026D4BCC STR X22, [X19 + 0x450]
	0x026D4BD0 CBZ X22, 0x26D4C60
	0x026D4BD4 LDR X8, [X20 + 0x20]
	0x026D4BD8 MOV X0, X22
	0x026D4BDC MOV W1, W23
	0x026D4BE0 LDR X8, [X8 + 0xC0]
	0x026D4BE4 LDR X2, [X8 + 0x68]
	0x026D4BE8 BL 0x26B54D0
	0x026D4BEC LDR X0, [X19 + 0x450]
	0x026D4BF0 CBZ X0, 0x26D4C60
	0x026D4BF4 LDR X8, [X20 + 0x20]
	0x026D4BF8 ADRP X22, 0x1A49000
	0x026D4BFC ADRP X23, 0x1A49000
	0x026D4C00 MOV W1, W21
	0x026D4C04 LDR X8, [X8 + 0xC0]
	0x026D4C08 LDR X2, [X8 + 0x70]
	0x026D4C0C LDR X22, [X22 + 0x640]
	0x026D4C10 LDR X23, [X23 + 0x638]
	0x026D4C14 BL 0x26B558C
	0x026D4C18 LDR X0, [X22]
	0x026D4C1C BL 0x1C16F10
	0x026D4C20 LDR X8, [X20 + 0x20]
	0x026D4C24 MOV X1, X19
	0x026D4C28 MOV X3, X31
	0x026D4C2C MOV X20, X0
	0x026D4C30 LDR X8, [X8 + 0xC0]
	0x026D4C34 LDR X2, [X8 + 0x78]
	0x026D4C38 BL 0x2D0E824
	0x026D4C3C LDR X3, [X23]
	0x026D4C40 MOV X0, X19
	0x026D4C44 MOV X1, X20
	0x026D4C48 LDP X20, X19, [X31 + 0x30]
	0x026D4C4C LDP X22, X21, [X31 + 0x20]
	0x026D4C50 LDP X24, X23, [X31 + 0x10]
	0x026D4C54 MOV W2, W31
	0x026D4C58 LDP X30, X25, [X31], #0x40
	0x026D4C5C B 0x21A1534
	0x026D4C60 BL 0x1C16F20
	0x026D4C64 STR X30, [X31 - 0x10]!
	0x026D4C68 LDR X0, [X0 + 0x450]
	0x026D4C6C CBZ X0, 0x26D4C84
	0x026D4C70 LDR X8, [X2 + 0x20]
	0x026D4C74 LDR X8, [X8 + 0xC0]
	0x026D4C78 LDR X2, [X8 + 0x80]
	0x026D4C7C LDR X30, [X31], #0x10
	0x026D4C80 B 0x26B6E14
	0x026D4C84 BL 0x1C16F20
	0x026D4C88 STR X30, [X31 - 0x30]!
	0x026D4C8C STP X22, X21, [X31 + 0x10]
	0x026D4C90 STP X20, X19, [X31 + 0x20]
	0x026D4C94 ADRP X22, 0x1D06000
	0x026D4C98 LDRB W8, [X22 + 0x497]
	0x026D4C9C MOV X21, X2
	0x026D4CA0 MOV X20, X1
	0x026D4CA4 MOV X19, X0
	0x026D4CA8 TBNZ X8, 0x0, 0x26D4D2C
	0x026D4CAC ADRP X0, 0x1A49000
	0x026D4CB0 LDR X0, [X0 + 0x6D0]
	0x026D4CB4 BL 0x1C16CF4
	0x026D4CB8 ADRP X0, 0x1A49000
	0x026D4CBC LDR X0, [X0 + 0x6D8]
	0x026D4CC0 BL 0x1C16CF4
	0x026D4CC4 ADRP X0, 0x1A49000
	0x026D4CC8 LDR X0, [X0 + 0x6E0]
	0x026D4CCC BL 0x1C16CF4
	0x026D4CD0 ADRP X0, 0x1A49000
	0x026D4CD4 LDR X0, [X0 + 0x6E8]
	0x026D4CD8 BL 0x1C16CF4
	0x026D4CDC ADRP X0, 0x1A49000
	0x026D4CE0 LDR X0, [X0 + 0x6F0]
	0x026D4CE4 BL 0x1C16CF4
	0x026D4CE8 ADRP X0, 0x1A49000
	0x026D4CEC LDR X0, [X0 + 0x6F8]
	0x026D4CF0 BL 0x1C16CF4
	0x026D4CF4 ADRP X0, 0x1A49000
	0x026D4CF8 LDR X0, [X0 + 0x700]
	0x026D4CFC BL 0x1C16CF4
	0x026D4D00 ADRP X0, 0x1A49000
	0x026D4D04 LDR X0, [X0 + 0x708]
	0x026D4D08 BL 0x1C16CF4
	0x026D4D0C ADRP X0, 0x1A49000
	0x026D4D10 LDR X0, [X0 + 0x710]
	0x026D4D14 BL 0x1C16CF4
	0x026D4D18 ADRP X0, 0x1A49000
	0x026D4D1C LDR X0, [X0 + 0x630]
	0x026D4D20 BL 0x1C16CF4
	0x026D4D24 MOVZ W8, 0x1
	0x026D4D28 STRB W8, [X22 + 0x497]
	0x026D4D2C CBZ X19, 0x26D5068
	0x026D4D30 MOV X0, X19
	0x026D4D34 MOV X1, X20
	0x026D4D38 MOV X2, X31
	0x026D4D3C BL 0x3DA19BC
	0x026D4D40 LDR X8, [X21 + 0x20]
	0x026D4D44 MOV X0, X19
	0x026D4D48 LDR X8, [X8 + 0xC0]
	0x026D4D4C LDR X1, [X8 + 0x20]
	0x026D4D50 BL 0x26D46A8
	0x026D4D54 CBZ X0, 0x26D5068
	0x026D4D58 ADRP X10, 0x1A49000
	0x026D4D5C LDR X8, [X0]
	0x026D4D60 LDR X10, [X10 + 0x630]
	0x026D4D64 MOV X21, X0
	0x026D4D68 LDRH W9, [X8 + 0x12E]
	0x026D4D6C LDR X1, [X10]
	0x026D4D70 CBZ X9, 0x26D4D94
	0x026D4D74 LDR X10, [X8 + 0xB0]
	0x026D4D78 ADD X10, X10, 0x8
	0x026D4D7C LDUR X11, [X10 - 0x8]
	0x026D4D80 CMP X11, X1
	0x026D4D84 B.EQ 0x26D4DA4
	0x026D4D88 SUBS X9, X9, 0x1
	0x026D4D8C ADD X10, X10, 0x10
	0x026D4D90 B.NE 0x26D4D7C
	0x026D4D94 MOVZ W2, 0x2
	0x026D4D98 MOV X0, X21
	0x026D4D9C BL 0x1C5C788
	0x026D4DA0 B 0x26D4DB4
	0x026D4DA4 LDR W9, [X10]
	0x026D4DA8 ADD W9, W9, 0x2
	0x026D4DAC ADD X8, X8, W9, 0x4, SXTW
	0x026D4DB0 ADD X0, X8, 0x138
	0x026D4DB4 LDP X8, X1, [X0]
	0x026D4DB8 MOV X0, X21
	0x026D4DBC BLR X8
	0x026D4DC0 TBZ X0, 0x0, 0x26D4DD4
	0x026D4DC4 LDP X20, X19, [X31 + 0x20]
	0x026D4DC8 LDP X22, X21, [X31 + 0x10]
	0x026D4DCC LDR X30, [X31], #0x30
	0x026D4DD0 RET
	0x026D4DD4 CBZ X20, 0x26D5068
	0x026D4DD8 LDR X8, [X20]
	0x026D4DDC MOV X0, X20
	0x026D4DE0 LDP X9, X1, [X8 + 0x188]
	0x026D4DE4 BLR X9
	0x026D4DE8 ADRP X8, 0x1A49000
	0x026D4DEC LDR X8, [X8 + 0x708]
	0x026D4DF0 MOV X21, X0
	0x026D4DF4 LDR X8, [X8]
	0x026D4DF8 LDR W9, [X8 + 0xE0]
	0x026D4DFC CBNZ W9, 0x26D4E08
	0x026D4E00 MOV X0, X8
	0x026D4E04 BL 0x1C16DFC
	0x026D4E08 ADRP X8, 0x1A49000
	0x026D4E0C LDR X8, [X8 + 0x6D8]
	0x026D4E10 LDR X0, [X8]
	0x026D4E14 BL 0x2D0D5C8
	0x026D4E18 CMP X21, X0
	0x026D4E1C B.NE 0x26D4E58
	0x026D4E20 LDR X8, [X19 + 0x450]
	0x026D4E24 CBZ X8, 0x26D5068
	0x026D4E28 LDR X9, [X20 + 0x48]
	0x026D4E2C LDR X0, [X8 + 0x3C8]
	0x026D4E30 CMP X9, X0
	0x026D4E34 B.EQ 0x26D4E58
	0x026D4E38 CBZ X0, 0x26D5068
	0x026D4E3C LDR X8, [X0]
	0x026D4E40 LDP X20, X19, [X31 + 0x20]
	0x026D4E44 LDP X22, X21, [X31 + 0x10]
	0x026D4E48 LDR X2, [X8 + 0x248]
	0x026D4E4C LDR X1, [X8 + 0x250]
	0x026D4E50 LDR X30, [X31], #0x30
	0x026D4E54 BR X2
	0x026D4E58 LDR X8, [X20]
	0x026D4E5C MOV X0, X20
	0x026D4E60 LDP X9, X1, [X8 + 0x188]
	0x026D4E64 BLR X9
	0x026D4E68 ADRP X8, 0x1A49000
	0x026D4E6C LDR X8, [X8 + 0x6F0]
	0x026D4E70 MOV X21, X0
	0x026D4E74 LDR X8, [X8]
	0x026D4E78 LDR W9, [X8 + 0xE0]
	0x026D4E7C CBNZ W9, 0x26D4E88
	0x026D4E80 MOV X0, X8
	0x026D4E84 BL 0x1C16DFC
	0x026D4E88 ADRP X8, 0x1A49000
	0x026D4E8C LDR X8, [X8 + 0x6E0]
	0x026D4E90 LDR X0, [X8]
	0x026D4E94 BL 0x2D0D5C8
	0x026D4E98 CMP X21, X0
	0x026D4E9C B.NE 0x26D4F00
	0x026D4EA0 LDRB W8, [X19 + 0x410]
	0x026D4EA4 CBZ W8, 0x26D502C
	0x026D4EA8 LDR X8, [X19 + 0x450]
	0x026D4EAC CBZ X8, 0x26D5068
	0x026D4EB0 LDR X21, [X8 + 0x3C8]
	0x026D4EB4 CBZ X21, 0x26D5068
	0x026D4EB8 ADRP X10, 0x1A49000
	0x026D4EBC LDR X8, [X21]
	0x026D4EC0 LDR X10, [X10 + 0x710]
	0x026D4EC4 LDRH W9, [X8 + 0x12E]
	0x026D4EC8 LDR X1, [X10]
	0x026D4ECC CBZ X9, 0x26D4EF0
	0x026D4ED0 LDR X10, [X8 + 0xB0]
	0x026D4ED4 ADD X10, X10, 0x8
	0x026D4ED8 LDUR X11, [X10 - 0x8]
	0x026D4EDC CMP X11, X1
	0x026D4EE0 B.EQ 0x26D500C
	0x026D4EE4 SUBS X9, X9, 0x1
	0x026D4EE8 ADD X10, X10, 0x10
	0x026D4EEC B.NE 0x26D4ED8
	0x026D4EF0 MOVZ W2, 0x2
	0x026D4EF4 MOV X0, X21
	0x026D4EF8 BL 0x1C5C788
	0x026D4EFC B 0x26D501C
	0x026D4F00 LDR X8, [X20]
	0x026D4F04 MOV X0, X20
	0x026D4F08 LDP X9, X1, [X8 + 0x188]
	0x026D4F0C BLR X9
	0x026D4F10 ADRP X8, 0x1A49000
	0x026D4F14 LDR X8, [X8 + 0x700]
	0x026D4F18 MOV X21, X0
	0x026D4F1C LDR X8, [X8]
	0x026D4F20 LDR W9, [X8 + 0xE0]
	0x026D4F24 CBNZ W9, 0x26D4F30
	0x026D4F28 MOV X0, X8
	0x026D4F2C BL 0x1C16DFC
	0x026D4F30 ADRP X8, 0x1A49000
	0x026D4F34 LDR X8, [X8 + 0x6D0]
	0x026D4F38 LDR X0, [X8]
	0x026D4F3C BL 0x2D0D5C8
	0x026D4F40 CMP X21, X0
	0x026D4F44 B.NE 0x26D4F64
	0x026D4F48 MOV X0, X19
	0x026D4F4C LDP X20, X19, [X31 + 0x20]
	0x026D4F50 LDP X22, X21, [X31 + 0x10]
	0x026D4F54 MOV W1, W31
	0x026D4F58 MOV X2, X31
	0x026D4F5C LDR X30, [X31], #0x30
	0x026D4F60 B 0x3DAED80
	0x026D4F64 LDR X8, [X20]
	0x026D4F68 MOV X0, X20
	0x026D4F6C LDP X9, X1, [X8 + 0x188]
	0x026D4F70 BLR X9
	0x026D4F74 ADRP X8, 0x1A49000
	0x026D4F78 LDR X8, [X8 + 0x6F8]
	0x026D4F7C MOV X21, X0
	0x026D4F80 LDR X8, [X8]
	0x026D4F84 LDR W9, [X8 + 0xE0]
	0x026D4F88 CBNZ W9, 0x26D4F94
	0x026D4F8C MOV X0, X8
	0x026D4F90 BL 0x1C16DFC
	0x026D4F94 ADRP X8, 0x1A49000
	0x026D4F98 LDR X8, [X8 + 0x6E8]
	0x026D4F9C LDR X0, [X8]
	0x026D4FA0 BL 0x2D0D5C8
	0x026D4FA4 CMP X21, X0
	0x026D4FA8 B.NE 0x26D4DC4
	0x026D4FAC LDRB W8, [X19 + 0x410]
	0x026D4FB0 CBZ W8, 0x26D4FC8
	0x026D4FB4 LDR X8, [X19]
	0x026D4FB8 MOV X0, X19
	0x026D4FBC LDR X9, [X8 + 0x878]
	0x026D4FC0 LDR X1, [X8 + 0x880]
	0x026D4FC4 BLR X9
	0x026D4FC8 MOVZ W1, 0x1
	0x026D4FCC MOV X0, X19
	0x026D4FD0 MOV X2, X31
	0x026D4FD4 BL 0x3DAED80
	0x026D4FD8 LDR X8, [X20 + 0x48]
	0x026D4FDC CMP X8, X19
	0x026D4FE0 B.EQ 0x26D4FF0
	0x026D4FE4 LDR X9, [X19 + 0x408]
	0x026D4FE8 CMP X8, X9
	0x026D4FEC B.NE 0x26D4DC4
	0x026D4FF0 LDR X8, [X19 + 0x450]
	0x026D4FF4 CBZ X8, 0x26D5068
	0x026D4FF8 LDR X8, [X8 + 0x3C8]
	0x026D4FFC CBZ X8, 0x26D5068
	0x026D5000 LDR W9, [X19 + 0x448]
	0x026D5004 STR W9, [X8 + 0x24]
	0x026D5008 B 0x26D4DC4
	0x026D500C LDR W9, [X10]
	0x026D5010 ADD W9, W9, 0x2
	0x026D5014 ADD X8, X8, W9, 0x4, SXTW
	0x026D5018 ADD X0, X8, 0x138
	0x026D501C LDP X8, X2, [X0]
	0x026D5020 MOV X0, X21
	0x026D5024 MOV X1, X31
	0x026D5028 BLR X8
	0x026D502C LDR X8, [X20 + 0x48]
	0x026D5030 CMP X8, X19
	0x026D5034 B.EQ 0x26D5044
	0x026D5038 LDR X9, [X19 + 0x408]
	0x026D503C CMP X8, X9
	0x026D5040 B.NE 0x26D4DC4
	0x026D5044 LDR X8, [X19 + 0x450]
	0x026D5048 CBZ X8, 0x26D5068
	0x026D504C LDR X8, [X8 + 0x3C8]
	0x026D5050 CBZ X8, 0x26D5068

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x1D07000
	008 Move X21, 0x1A4A000
	009 Move X20, 0x1A4A000
	010 Move W8, [X22+1162]
	011 Move X21, [X21+1816]
	012 Move X20, [X20+1824]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {53}
	018 Move X0, 0x1A4A000
	019 Move X0, [X0+1824]
	020 Call 0x1C17CF4
	021 Move X0, 0x1A4A000
	022 Move X0, [X0+1720]
	023 Call 0x1C17CF4
	024 Move X0, 0x1A4A000
	025 Move X0, [X0+1832]
	026 Call 0x1C17CF4
	027 Move X0, 0x1A4A000
	028 Move X0, [X0+1816]
	029 Call 0x1C17CF4
	030 Move X0, 0x1A4A000
	031 Move X0, [X0+1840]
	032 Call 0x1C17CF4
	033 Move X0, 0x1A4A000
	034 Move X0, [X0+1848]
	035 Call 0x1C17CF4
	036 Move X0, 0x1A4A000
	037 Move X0, [X0+1856]
	038 Call 0x1C17CF4
	039 Move X0, 0x1A49000
	040 Move X0, [X0+3768]
	041 Call 0x1C17CF4
	042 Move X0, 0x1A4A000
	043 Move X0, [X0+1864]
	044 Call 0x1C17CF4
	045 Move X0, 0x1A4A000
	046 Move X0, [X0+1872]
	047 Call 0x1C17CF4
	048 Move X0, 0x1A49000
	049 Move X0, [X0+3776]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X22+1162], W8
	053 Move X1, [X21]
	054 Move X2, [X20]
	055 Add X0, X31, 24
	056 Move [X31+24], X31
	057 Call 0x29AB2DC, X0, X1
	058 Add X19, X19, 32
	059 Move X0, [X19]
	060 Move W8, [X0+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {66}
	065 Call 0x1C5D684
	066 Move X8, [X0+192]
	067 Move X0, [X8+88]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move X8, [X0+184]
	075 Move X9, [X31+24]
	076 Move [X8], X9
	077 Move X0, [X19]
	078 Move W8, [X0+309]
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {84}
	083 Call 0x1C5D684
	084 Move X8, [X0+192]
	085 Move X21, 0x1A4A000
	086 Move X0, [X8+88]
	087 Move W8, [X0+309]
	088 Move X21, [X21+1872]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Move X1, [X21]
	095 Move X2, [X20]
	096 Add X0, X31, 8
	097 Move [X31+8], X31
	098 Call 0x29AB2DC, X0, X1
	099 Move X0, [X19]
	100 Move W8, [X0+309]
	101 Move TEMP, X8
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {106}
	105 Call 0x1C5D684
	106 Move X8, [X0+192]
	107 Move X0, [X8+88]
	108 Move W8, [X0+309]
	109 Move TEMP, X8
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {114}
	113 Call 0x1C5D684
	114 Move X8, [X0+184]
	115 Move X9, [X31+8]
	116 Move [X8+8], X9
	117 Move X0, [X19]
	118 Move W8, [X0+309]
	119 Move TEMP, X8
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {124}
	123 Call 0x1C5D684
	124 Move X8, [X0+192]
	125 Move X20, 0x1A4A000
	126 Move X0, [X8+88]
	127 Move W8, [X0+309]
	128 Move X20, [X20+1856]
	129 Move TEMP, X8
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {134}
	133 Call 0x1C5D684
	134 Move X0, [X19]
	135 Move X20, [X20]
	136 Move W8, [X0+309]
	137 Move TEMP, X8
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfEqual {142}
	141 Call 0x1C5D684
	142 Move X8, [X0+192]
	143 Move X0, [X8+88]
	144 Move W8, [X0+309]
	145 Move TEMP, X8
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {150}
	149 Call 0x1C5D684
	150 Move X8, [X0+184]
	151 Move [X8+16], X20
	152 Move X0, [X19]
	153 Move W8, [X0+309]
	154 Move TEMP, X8
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {159}
	158 Call 0x1C5D684
	159 Move X8, [X0+192]
	160 Move X0, [X8+88]
	161 Move W8, [X0+309]
	162 Move TEMP, X8
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {167}
	166 Call 0x1C5D684
	167 Move X0, [X19]
	168 Move W8, [X0+309]
	169 Move TEMP, X8
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfEqual {174}
	173 Call 0x1C5D684
	174 Move X8, [X0+192]
	175 Move X20, 0x1A49000
	176 Move X0, [X8+88]
	177 Move W8, [X0+309]
	178 Move X20, [X20+3768]
	179 Move TEMP, X8
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfEqual {184}
	183 Call 0x1C5D684
	184 Move X8, [X0+184]
	185 Move X1, [X20]
	186 Move X2, X31
	187 Move X0, [X8+16]
	188 Call String.Concat, X0, X1
	189 Move X8, [X19]
	190 Move X20, X0
	191 Move W9, [X8+309]
	192 Move TEMP, X9
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfEqual {199}
	196 Move X0, X8
	197 Call 0x1C5D684
	198 Move X8, X0
	199 Move X8, [X8+192]
	200 Move X0, [X8+88]
	201 Move W8, [X0+309]
	202 Move TEMP, X8
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfEqual {207}
	206 Call 0x1C5D684
	207 Move X8, [X0+184]
	208 Move [X8+24], X20
	209 Move X0, [X19]
	210 Move W8, [X0+309]
	211 Move TEMP, X8
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfEqual {216}
	215 Call 0x1C5D684
	216 Move X8, [X0+192]
	217 Move X0, [X8+88]
	218 Move W8, [X0+309]
	219 Move TEMP, X8
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfEqual {224}
	223 Call 0x1C5D684
	224 Move X0, [X19]
	225 Move W8, [X0+309]
	226 Move TEMP, X8
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfEqual {231}
	230 Call 0x1C5D684
	231 Move X8, [X0+192]
	232 Move X20, 0x1A49000
	233 Move X0, [X8+88]
	234 Move W8, [X0+309]
	235 Move X20, [X20+3776]
	236 Move TEMP, X8
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfEqual {241}
	240 Call 0x1C5D684
	241 Move X8, [X0+184]
	242 Move X1, [X20]
	243 Move X2, X31
	244 Move X0, [X8+16]
	245 Call String.Concat, X0, X1
	246 Move X8, [X19]
	247 Move X20, X0
	248 Move W9, [X8+309]
	249 Move TEMP, X9
	250 And TEMP, TEMP, 1
	251 Compare TEMP, 1
	252 JumpIfEqual {256}
	253 Move X0, X8
	254 Call 0x1C5D684
	255 Move X8, X0
	256 Move X8, [X8+192]
	257 Move X0, [X8+88]
	258 Move W8, [X0+309]
	259 Move TEMP, X8
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfEqual {264}
	263 Call 0x1C5D684
	264 Move X8, [X0+184]
	265 Move [X8+32], X20
	266 Move X0, [X19]
	267 Move W8, [X0+309]
	268 Move TEMP, X8
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfEqual {273}
	272 Call 0x1C5D684
	273 Move X8, [X0+192]
	274 Move X0, [X8+88]
	275 Move W8, [X0+309]
	276 Move TEMP, X8
	277 And TEMP, TEMP, 1
	278 Compare TEMP, 1
	279 JumpIfEqual {281}
	280 Call 0x1C5D684
	281 Move X0, [X19]
	282 Move W8, [X0+309]
	283 Move TEMP, X8
	284 And TEMP, TEMP, 1
	285 Compare TEMP, 1
	286 JumpIfEqual {288}
	287 Call 0x1C5D684
	288 Move X8, [X0+192]
	289 Move X20, 0x1A4A000
	290 Move X0, [X8+88]
	291 Move W8, [X0+309]
	292 Move X20, [X20+1864]
	293 Move TEMP, X8
	294 And TEMP, TEMP, 1
	295 Compare TEMP, 1
	296 JumpIfEqual {298}
	297 Call 0x1C5D684
	298 Move X8, [X0+184]
	299 Move X1, [X20]
	300 Move X2, X31
	301 Move X0, [X8+16]
	302 Call String.Concat, X0, X1
	303 Move X8, [X19]
	304 Move X20, X0
	305 Move W9, [X8+309]
	306 Move TEMP, X9
	307 And TEMP, TEMP, 1
	308 Compare TEMP, 1
	309 JumpIfEqual {313}
	310 Move X0, X8
	311 Call 0x1C5D684
	312 Move X8, X0
	313 Move X8, [X8+192]
	314 Move X0, [X8+88]
	315 Move W8, [X0+309]
	316 Move TEMP, X8
	317 And TEMP, TEMP, 1
	318 Compare TEMP, 1
	319 JumpIfEqual {321}
	320 Call 0x1C5D684
	321 Move X8, [X0+184]
	322 Move [X8+40], X20
	323 Move X0, [X19]
	324 Move W8, [X0+309]
	325 Move TEMP, X8
	326 And TEMP, TEMP, 1
	327 Compare TEMP, 1
	328 JumpIfEqual {330}
	329 Call 0x1C5D684
	330 Move X8, [X0+192]
	331 Move X0, [X8+88]
	332 Move W8, [X0+309]
	333 Move TEMP, X8
	334 And TEMP, TEMP, 1
	335 Compare TEMP, 1
	336 JumpIfEqual {338}
	337 Call 0x1C5D684
	338 Move X0, [X19]
	339 Move W8, [X0+309]
	340 Move TEMP, X8
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfEqual {345}
	344 Call 0x1C5D684
	345 Move X8, [X0+192]
	346 Move X20, 0x1A4A000
	347 Move X0, [X8+88]
	348 Move W8, [X0+309]
	349 Move X20, [X20+1840]
	350 Move TEMP, X8
	351 And TEMP, TEMP, 1
	352 Compare TEMP, 1
	353 JumpIfEqual {355}
	354 Call 0x1C5D684
	355 Move X8, [X0+184]
	356 Move X1, [X20]
	357 Move X2, X31
	358 Move X0, [X8+32]
	359 Call String.Concat, X0, X1
	360 Move X8, [X19]
	361 Move X20, X0
	362 Move W9, [X8+309]
	363 Move TEMP, X9
	364 And TEMP, TEMP, 1
	365 Compare TEMP, 1
	366 JumpIfEqual {370}
	367 Move X0, X8
	368 Call 0x1C5D684
	369 Move X8, X0
	370 Move X8, [X8+192]
	371 Move X0, [X8+88]
	372 Move W8, [X0+309]
	373 Move TEMP, X8
	374 And TEMP, TEMP, 1
	375 Compare TEMP, 1
	376 JumpIfEqual {378}
	377 Call 0x1C5D684
	378 Move X8, [X0+184]
	379 Move [X8+48], X20
	380 Move X0, [X19]
	381 Move W8, [X0+309]
	382 Move TEMP, X8
	383 And TEMP, TEMP, 1
	384 Compare TEMP, 1
	385 JumpIfEqual {387}
	386 Call 0x1C5D684
	387 Move X8, [X0+192]
	388 Move X0, [X8+88]
	389 Move W8, [X0+309]
	390 Move TEMP, X8
	391 And TEMP, TEMP, 1
	392 Compare TEMP, 1
	393 JumpIfEqual {395}
	394 Call 0x1C5D684
	395 Move X0, [X19]
	396 Move W8, [X0+309]
	397 Move TEMP, X8
	398 And TEMP, TEMP, 1
	399 Compare TEMP, 1
	400 JumpIfEqual {402}
	401 Call 0x1C5D684
	402 Move X8, [X0+192]
	403 Move X20, 0x1A4A000
	404 Move X0, [X8+88]
	405 Move W8, [X0+309]
	406 Move X20, [X20+1848]
	407 Move TEMP, X8
	408 And TEMP, TEMP, 1
	409 Compare TEMP, 1
	410 JumpIfEqual {412}
	411 Call 0x1C5D684
	412 Move X8, [X0+184]
	413 Move X1, [X20]
	414 Move X2, X31
	415 Move X0, [X8+32]
	416 Call String.Concat, X0, X1
	417 Move X8, [X19]
	418 Move X20, X0
	419 Move W9, [X8+309]
	420 Move TEMP, X9
	421 And TEMP, TEMP, 1
	422 Compare TEMP, 1
	423 JumpIfEqual {427}
	424 Move X0, X8
	425 Call 0x1C5D684
	426 Move X8, X0
	427 Move X8, [X8+192]
	428 Move X0, [X8+88]
	429 Move W8, [X0+309]
	430 Move TEMP, X8
	431 And TEMP, TEMP, 1
	432 Compare TEMP, 1
	433 JumpIfEqual {435}
	434 Call 0x1C5D684
	435 Move X8, [X0+184]
	436 Move [X8+56], X20
	437 Move X0, [X19]
	438 Move W8, [X0+309]
	439 Move TEMP, X8
	440 And TEMP, TEMP, 1
	441 Compare TEMP, 1
	442 JumpIfEqual {444}
	443 Call 0x1C5D684
	444 Move X8, [X0+192]
	445 Move X0, [X8+88]
	446 Move W8, [X0+309]
	447 Move TEMP, X8
	448 And TEMP, TEMP, 1
	449 Compare TEMP, 1
	450 JumpIfEqual {452}
	451 Call 0x1C5D684
	452 Move X0, [X19]
	453 Move W8, [X0+309]
	454 Move TEMP, X8
	455 And TEMP, TEMP, 1
	456 Compare TEMP, 1
	457 JumpIfEqual {459}
	458 Call 0x1C5D684
	459 Move X8, [X0+192]
	460 Move X20, 0x1A4A000
	461 Move X0, [X8+88]
	462 Move W8, [X0+309]
	463 Move X20, [X20+1720]
	464 Move TEMP, X8
	465 And TEMP, TEMP, 1
	466 Compare TEMP, 1
	467 JumpIfEqual {469}
	468 Call 0x1C5D684
	469 Move X8, [X0+184]
	470 Move X1, [X20]
	471 Move X2, X31
	472 Move X0, [X8+56]
	473 Call String.Concat, X0, X1
	474 Move X8, [X19]
	475 Move X20, X0
	476 Move W9, [X8+309]
	477 Move TEMP, X9
	478 And TEMP, TEMP, 1
	479 Compare TEMP, 1
	480 JumpIfEqual {484}
	481 Move X0, X8
	482 Call 0x1C5D684
	483 Move X8, X0
	484 Move X8, [X8+192]
	485 Move X0, [X8+88]
	486 Move W8, [X0+309]
	487 Move TEMP, X8
	488 And TEMP, TEMP, 1
	489 Compare TEMP, 1
	490 JumpIfEqual {492}
	491 Call 0x1C5D684
	492 Move X8, [X0+184]
	493 Move [X8+64], X20
	494 Move X0, [X19]
	495 Move W8, [X0+309]
	496 Move TEMP, X8
	497 And TEMP, TEMP, 1
	498 Compare TEMP, 1
	499 JumpIfEqual {501}
	500 Call 0x1C5D684
	501 Move X8, [X0+192]
	502 Move X20, 0x1A4A000
	503 Move X0, [X8+88]
	504 Move W8, [X0+309]
	505 Move X20, [X20+1832]
	506 Move TEMP, X8
	507 And TEMP, TEMP, 1
	508 Compare TEMP, 1
	509 JumpIfEqual {511}
	510 Call 0x1C5D684
	511 Move X0, [X19]
	512 Move X20, [X20]
	513 Move W8, [X0+309]
	514 Move TEMP, X8
	515 And TEMP, TEMP, 1
	516 Compare TEMP, 1
	517 JumpIfEqual {519}
	518 Call 0x1C5D684
	519 Move X8, [X0+192]
	520 Move X0, [X8+88]
	521 Move W8, [X0+309]
	522 Move TEMP, X8
	523 And TEMP, TEMP, 1
	524 Compare TEMP, 1
	525 JumpIfEqual {527}
	526 Call 0x1C5D684
	527 Move X8, [X0+184]
	528 Move [X8+72], X20
	529 Move X0, [X19]
	530 Move W8, [X0+309]
	531 Move TEMP, X8
	532 And TEMP, TEMP, 1
	533 Compare TEMP, 1
	534 JumpIfEqual {536}
	535 Call 0x1C5D684
	536 Move X8, [X0+192]
	537 Move X0, [X8+88]
	538 Move W8, [X0+309]
	539 Move TEMP, X8
	540 And TEMP, TEMP, 1
	541 Compare TEMP, 1
	542 JumpIfEqual {544}
	543 Call 0x1C5D684
	544 Move X20, [X31+48]
	545 Move X19, [X31+56]
	546 Move X22, [X31+32]
	547 Move X21, [X31+40]
	548 Move X30, [X31+16]
	549 Add X31, X31, 64
	550 Return 

