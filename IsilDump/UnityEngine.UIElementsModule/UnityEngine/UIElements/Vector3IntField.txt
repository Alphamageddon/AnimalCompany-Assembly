Type: UnityEngine.UIElements.Vector3IntField

Method: UnityEngine.UIElements.BaseCompositeField`3/FieldDescription<UnityEngine.Vector3Int, UnityEngine.UIElements.IntegerField, System.Int32>[] DescribeFields()

Disassembly:
	0x03D0BAF0 RET
	0x03D0BAF4 STR D12, [X31 - 0x50]!
	0x03D0BAF8 STP D11, D10, [X31 + 0x8]
	0x03D0BAFC STP D9, D8, [X31 + 0x18]
	0x03D0BB00 STR X30, [X31 + 0x28]
	0x03D0BB04 STP X22, X21, [X31 + 0x30]
	0x03D0BB08 STP X20, X19, [X31 + 0x40]
	0x03D0BB0C ADRP X22, 0x6DC000
	0x03D0BB10 ADRP X21, 0x458000
	0x03D0BB14 LDRB W8, [X22 + 0x87E]
	0x03D0BB18 LDR X21, [X21 + 0x8E0]
	0x03D0BB1C MOV V10.16B, V3.16B
	0x03D0BB20 MOV W20, W1
	0x03D0BB24 MOV V8.16B, V1.16B
	0x03D0BB28 MOV V9.16B, V0.16B
	0x03D0BB2C MOV X19, X0
	0x03D0BB30 TBNZ X8, 0x0, 0x3D0BB60
	0x03D0BB34 ADRP X0, 0x458000
	0x03D0BB38 LDR X0, [X0 + 0x8E8]
	0x03D0BB3C BL 0x1C16CF4
	0x03D0BB40 ADRP X0, 0x458000
	0x03D0BB44 LDR X0, [X0 + 0x8E0]
	0x03D0BB48 BL 0x1C16CF4
	0x03D0BB4C ADRP X0, 0x458000
	0x03D0BB50 LDR X0, [X0 + 0x8F0]
	0x03D0BB54 BL 0x1C16CF4
	0x03D0BB58 MOVZ W8, 0x1
	0x03D0BB5C STRB W8, [X22 + 0x87E]
	0x03D0BB60 MOV V0.16B, V10.16B
	0x03D0BB64 MOV X0, X31
	0x03D0BB68 BL 0x3C2F70C
	0x03D0BB6C CMP W20, 0x0
	0x03D0BB70 CSET W0, EQ
	0x03D0BB74 CMP W20, 0x2
	0x03D0BB78 CSET W1, EQ
	0x03D0BB7C MOV X2, X31
	0x03D0BB80 MOV V10.16B, V0.16B
	0x03D0BB84 BL 0x3C2F590
	0x03D0BB88 LDR X1, [X21]
	0x03D0BB8C MOV X0, X19
	0x03D0BB90 MOV V11.16B, V0.16B
	0x03D0BB94 BL 0x26B1D90
	0x03D0BB98 LDR X8, [X19]
	0x03D0BB9C MOV X1, X0
	0x03D0BBA0 MOV X0, X19
	0x03D0BBA4 LDR X9, [X8 + 0x778]
	0x03D0BBA8 LDR X2, [X8 + 0x780]
	0x03D0BBAC BLR X9
	0x03D0BBB0 MOV V12.16B, V0.16B
	0x03D0BBB4 MOV V0.16B, V9.16B
	0x03D0BBB8 MOV V1.16B, V8.16B
	0x03D0BBBC MOV V2.16B, V11.16B
	0x03D0BBC0 MOV X0, X31
	0x03D0BBC4 BL 0x3C2F5B4
	0x03D0BBC8 FCVT S0, S0
	0x03D0BBCC FMUL D0, D10, D0
	0x03D0BBD0 FADD D0, D12, D0
	0x03D0BBD4 MOV V1.16B, V10.16B
	0x03D0BBD8 MOV X0, X31
	0x03D0BBDC BL 0x3C2C2D0
	0x03D0BBE0 MOV X0, X19
	0x03D0BBE4 MOV V8.16B, V0.16B
	0x03D0BBE8 BL 0x3D0BA1C
	0x03D0BBEC CBZ X0, 0x3D0BC84
	0x03D0BBF0 ADRP X8, 0x458000
	0x03D0BBF4 LDR X8, [X8 + 0x8E8]
	0x03D0BBF8 LDR X1, [X8]
	0x03D0BBFC BL 0x26D2E9C
	0x03D0BC00 TBZ X0, 0x0, 0x3D0BC4C
	0x03D0BC04 LDR X8, [X19]
	0x03D0BC08 MOV X0, X19
	0x03D0BC0C MOV V0.16B, V8.16B
	0x03D0BC10 LDR X9, [X8 + 0x7D8]
	0x03D0BC14 LDR X1, [X8 + 0x7E0]
	0x03D0BC18 BLR X9
	0x03D0BC1C ADRP X8, 0x458000
	0x03D0BC20 LDR X8, [X8 + 0x8F0]
	0x03D0BC24 MOV X1, X0
	0x03D0BC28 MOV X0, X19
	0x03D0BC2C LDP X20, X19, [X31 + 0x40]
	0x03D0BC30 LDR X2, [X8]
	0x03D0BC34 LDP X22, X21, [X31 + 0x30]
	0x03D0BC38 LDR X30, [X31 + 0x28]
	0x03D0BC3C LDP D9, D8, [X31 + 0x18]
	0x03D0BC40 LDP D11, D10, [X31 + 0x8]
	0x03D0BC44 LDR V12, [X31], #0x50
	0x03D0BC48 B 0x26B1DB4
	0x03D0BC4C MOV X0, X19
	0x03D0BC50 BL 0x3D0BA1C
	0x03D0BC54 CBZ X0, 0x3D0BC84
	0x03D0BC58 LDR X8, [X0]
	0x03D0BC5C MOV V0.16B, V8.16B
	0x03D0BC60 LDP X20, X19, [X31 + 0x40]
	0x03D0BC64 LDP X22, X21, [X31 + 0x30]
	0x03D0BC68 LDR X2, [X8 + 0x7F8]
	0x03D0BC6C LDR X1, [X8 + 0x800]
	0x03D0BC70 LDR X30, [X31 + 0x28]
	0x03D0BC74 LDP D9, D8, [X31 + 0x18]
	0x03D0BC78 LDP D11, D10, [X31 + 0x8]
	0x03D0BC7C LDR V12, [X31], #0x50
	0x03D0BC80 BR X2
	0x03D0BC84 BL 0x1C16F20
	0x03D0BC88 STR X30, [X31 - 0x20]!
	0x03D0BC8C STP X20, X19, [X31 + 0x10]
	0x03D0BC90 ADRP X20, 0x6DC000
	0x03D0BC94 LDRB W8, [X20 + 0x87F]
	0x03D0BC98 MOV X19, X0
	0x03D0BC9C STR D0, [X31 + 0x8]
	0x03D0BCA0 TBNZ X8, 0x0, 0x3D0BCB8
	0x03D0BCA4 ADRP X0, 0x458000
	0x03D0BCA8 LDR X0, [X0 + 0x8F8]
	0x03D0BCAC BL 0x1C16CF4
	0x03D0BCB0 MOVZ W8, 0x1
	0x03D0BCB4 STRB W8, [X20 + 0x87F]
	0x03D0BCB8 LDR X1, [X19 + 0x400]
	0x03D0BCBC ADD X0, X31, 0x8
	0x03D0BCC0 MOV X2, X31
	0x03D0BCC4 BL 0x3366258
	0x03D0BCC8 LDP X20, X19, [X31 + 0x10]
	0x03D0BCCC LDR X30, [X31], #0x20
	0x03D0BCD0 RET
	0x03D0BCD4 SUB X31, X31, 0x40
	0x03D0BCD8 STP X30, X23, [X31 + 0x10]
	0x03D0BCDC STP X22, X21, [X31 + 0x20]
	0x03D0BCE0 STP X20, X19, [X31 + 0x30]
	0x03D0BCE4 ADRP X23, 0x6DC000
	0x03D0BCE8 ADRP X22, 0x458000
	0x03D0BCEC ADRP X21, 0x454000
	0x03D0BCF0 LDRB W8, [X23 + 0x880]
	0x03D0BCF4 LDR X22, [X22 + 0x888]
	0x03D0BCF8 LDR X21, [X21 + 0x7A8]
	0x03D0BCFC MOV X19, X1
	0x03D0BD00 MOV X20, X0
	0x03D0BD04 TBNZ X8, 0x0, 0x3D0BD28
	0x03D0BD08 ADRP X0, 0x458000
	0x03D0BD0C LDR X0, [X0 + 0x888]
	0x03D0BD10 BL 0x1C16CF4
	0x03D0BD14 ADRP X0, 0x454000
	0x03D0BD18 LDR X0, [X0 + 0x7A8]
	0x03D0BD1C BL 0x1C16CF4
	0x03D0BD20 MOVZ W8, 0x1
	0x03D0BD24 STRB W8, [X23 + 0x880]
	0x03D0BD28 LDR X1, [X22]
	0x03D0BD2C MOV X0, X20
	0x03D0BD30 STR X31, [X31 + 0x8]
	0x03D0BD34 BL 0x26B180C
	0x03D0BD38 LDR X8, [X21]
	0x03D0BD3C MOV X20, X0
	0x03D0BD40 LDR W9, [X8 + 0xE0]
	0x03D0BD44 CBNZ W9, 0x3D0BD50
	0x03D0BD48 MOV X0, X8
	0x03D0BD4C BL 0x1C16DFC
	0x03D0BD50 ADD X2, X31, 0x8
	0x03D0BD54 MOV X0, X19
	0x03D0BD58 MOV X1, X20
	0x03D0BD5C MOV X3, X31
	0x03D0BD60 BL 0x3C3D4A8
	0x03D0BD64 LDR V0, [X31 + 0x8]
	0x03D0BD68 LDP X20, X19, [X31 + 0x30]
	0x03D0BD6C LDP X22, X21, [X31 + 0x20]
	0x03D0BD70 LDP X30, X23, [X31 + 0x10]
	0x03D0BD74 ADD X31, X31, 0x40
	0x03D0BD78 RET
	0x03D0BD7C MOV X1, X31
	0x03D0BD80 B 0x3D0BD84
	0x03D0BD84 STR X30, [X31 - 0x30]!
	0x03D0BD88 STP X22, X21, [X31 + 0x10]
	0x03D0BD8C STP X20, X19, [X31 + 0x20]
	0x03D0BD90 ADRP X22, 0x6DC000
	0x03D0BD94 ADRP X21, 0x458000
	0x03D0BD98 LDRB W8, [X22 + 0x881]
	0x03D0BD9C LDR X21, [X21 + 0x900]
	0x03D0BDA0 MOV X19, X1
	0x03D0BDA4 MOV X20, X0
	0x03D0BDA8 TBNZ X8, 0x0, 0x3D0BDCC
	0x03D0BDAC ADRP X0, 0x458000
	0x03D0BDB0 LDR X0, [X0 + 0x908]
	0x03D0BDB4 BL 0x1C16CF4
	0x03D0BDB8 ADRP X0, 0x458000
	0x03D0BDBC LDR X0, [X0 + 0x900]
	0x03D0BDC0 BL 0x1C16CF4
	0x03D0BDC4 MOVZ W8, 0x1
	0x03D0BDC8 STRB W8, [X22 + 0x881]
	0x03D0BDCC LDR X0, [X21]
	0x03D0BDD0 ADRP X21, 0x458000
	0x03D0BDD4 LDR W8, [X0 + 0xE0]
	0x03D0BDD8 LDR X21, [X21 + 0x908]
	0x03D0BDDC CBNZ W8, 0x3D0BDE4
	0x03D0BDE0 BL 0x1C16DFC
	0x03D0BDE4 LDR X2, [X21]
	0x03D0BDE8 MOV X0, X20
	0x03D0BDEC MOV X1, X19
	0x03D0BDF0 LDP X20, X19, [X31 + 0x20]
	0x03D0BDF4 LDP X22, X21, [X31 + 0x10]
	0x03D0BDF8 LDR X30, [X31], #0x30
	0x03D0BDFC B 0x24A7388
	0x03D0BE00 STP X30, X21, [X31 - 0x20]!
	0x03D0BE04 STP X20, X19, [X31 + 0x10]
	0x03D0BE08 ADRP X20, 0x6DC000
	0x03D0BE0C ADRP X21, 0x458000
	0x03D0BE10 LDRB W8, [X20 + 0x882]
	0x03D0BE14 LDR X21, [X21 + 0x910]
	0x03D0BE18 MOV X19, X0
	0x03D0BE1C TBNZ X8, 0x0, 0x3D0BE34
	0x03D0BE20 ADRP X0, 0x458000
	0x03D0BE24 LDR X0, [X0 + 0x910]
	0x03D0BE28 BL 0x1C16CF4
	0x03D0BE2C MOVZ W8, 0x1
	0x03D0BE30 STRB W8, [X20 + 0x882]
	0x03D0BE34 LDR X1, [X21]
	0x03D0BE38 MOV X0, X19
	0x03D0BE3C LDP X20, X19, [X31 + 0x10]
	0x03D0BE40 LDP X30, X21, [X31], #0x20
	0x03D0BE44 B 0x2736468
	0x03D0BE48 SUB X31, X31, 0xA0
	0x03D0BE4C STR X30, [X31 + 0x60]
	0x03D0BE50 STP X24, X23, [X31 + 0x70]
	0x03D0BE54 STP X22, X21, [X31 + 0x80]
	0x03D0BE58 STP X20, X19, [X31 + 0x90]
	0x03D0BE5C ADRP X24, 0x6DC000
	0x03D0BE60 ADRP X23, 0x458000
	0x03D0BE64 LDRB W8, [X24 + 0x883]
	0x03D0BE68 LDR X23, [X23 + 0x918]
	0x03D0BE6C MOV X21, X3
	0x03D0BE70 MOV X20, X2
	0x03D0BE74 MOV X19, X1
	0x03D0BE78 MOV X22, X0
	0x03D0BE7C TBNZ X8, 0x0, 0x3D0BEB8
	0x03D0BE80 ADRP X0, 0x458000
	0x03D0BE84 LDR X0, [X0 + 0x920]
	0x03D0BE88 BL 0x1C16CF4
	0x03D0BE8C ADRP X0, 0x458000
	0x03D0BE90 LDR X0, [X0 + 0x928]
	0x03D0BE94 BL 0x1C16CF4
	0x03D0BE98 ADRP X0, 0x458000
	0x03D0BE9C LDR X0, [X0 + 0x918]
	0x03D0BEA0 BL 0x1C16CF4
	0x03D0BEA4 ADRP X0, 0x458000
	0x03D0BEA8 LDR X0, [X0 + 0x930]
	0x03D0BEAC BL 0x1C16CF4
	0x03D0BEB0 MOVZ W8, 0x1
	0x03D0BEB4 STRB W8, [X24 + 0x883]
	0x03D0BEB8 LDP V1, V0, [X21]
	0x03D0BEBC LDR X4, [X23]
	0x03D0BEC0 ADD X3, X31, 0x40
	0x03D0BEC4 MOV X0, X22
	0x03D0BEC8 MOV X1, X19
	0x03D0BECC MOV X2, X20
	0x03D0BED0 STP V1, V0, [X31 + 0x20]
	0x03D0BED4 STP V1, V0, [X31 + 0x40]
	0x03D0BED8 BL 0x273A0F4
	0x03D0BEDC CBZ X19, 0x3D0BF14
	0x03D0BEE0 ADRP X9, 0x458000
	0x03D0BEE4 LDR X9, [X9 + 0x920]
	0x03D0BEE8 LDR X8, [X19]
	0x03D0BEEC LDR X1, [X9]
	0x03D0BEF0 LDRB W10, [X8 + 0x130]
	0x03D0BEF4 LDRB W9, [X1 + 0x130]
	0x03D0BEF8 CMP W10, W9
	0x03D0BEFC B.CC 0x3D0BFDC
	0x03D0BF00 LDR X8, [X8 + 0xC8]
	0x03D0BF04 ADD X8, X8, X9, 0x3, LSL
	0x03D0BF08 LDUR X8, [X8 - 0x8]
	0x03D0BF0C CMP X8, X1
	0x03D0BF10 B.NE 0x3D0BFDC
	0x03D0BF14 LDP V0, V1, [X21]
	0x03D0BF18 LDR X0, [X22 + 0x88]
	0x03D0BF1C STP V0, V1, [X31]
	0x03D0BF20 CBZ X0, 0x3D0BFD8
	0x03D0BF24 LDR X8, [X0]
	0x03D0BF28 LDP V0, V1, [X31]
	0x03D0BF2C ADRP X23, 0x458000
	0x03D0BF30 ADD X2, X31, 0x40
	0x03D0BF34 LDR X9, [X8 + 0x178]
	0x03D0BF38 STP V0, V1, [X31 + 0x40]
	0x03D0BF3C LDR X3, [X8 + 0x180]
	0x03D0BF40 LDR X23, [X23 + 0x930]
	0x03D0BF44 MOV X1, X20
	0x03D0BF48 BLR X9
	0x03D0BF4C LDR X1, [X23]
	0x03D0BF50 BL 0x273A238
	0x03D0BF54 CBZ X0, 0x3D0BF74
	0x03D0BF58 CBZ X19, 0x3D0BFD8
	0x03D0BF5C LDR X8, [X19]
	0x03D0BF60 MOV X1, X0
	0x03D0BF64 MOV X0, X19
	0x03D0BF68 LDR X9, [X8 + 0x8C8]
	0x03D0BF6C LDR X2, [X8 + 0x8D0]
	0x03D0BF70 BLR X9
	0x03D0BF74 LDP V0, V1, [X21]
	0x03D0BF78 LDR X0, [X22 + 0x80]
	0x03D0BF7C STP V0, V1, [X31]
	0x03D0BF80 CBZ X0, 0x3D0BFD8
	0x03D0BF84 LDR X8, [X0]
	0x03D0BF88 LDP V0, V1, [X31]
	0x03D0BF8C ADD X2, X31, 0x40
	0x03D0BF90 MOV X1, X20
	0x03D0BF94 LDR X9, [X8 + 0x178]
	0x03D0BF98 STP V0, V1, [X31 + 0x40]
	0x03D0BF9C LDR X3, [X8 + 0x180]
	0x03D0BFA0 BLR X9
	0x03D0BFA4 CBZ X19, 0x3D0BFD8
	0x03D0BFA8 ADRP X8, 0x458000
	0x03D0BFAC LDR X8, [X8 + 0x928]
	0x03D0BFB0 MOV W1, W0
	0x03D0BFB4 MOV X0, X19
	0x03D0BFB8 LDR X2, [X8]
	0x03D0BFBC BL 0x24A7310
	0x03D0BFC0 LDP X20, X19, [X31 + 0x90]
	0x03D0BFC4 LDP X22, X21, [X31 + 0x80]
	0x03D0BFC8 LDP X24, X23, [X31 + 0x70]
	0x03D0BFCC LDR X30, [X31 + 0x60]
	0x03D0BFD0 ADD X31, X31, 0xA0
	0x03D0BFD4 RET
	0x03D0BFD8 BL 0x1C16F20
	0x03D0BFDC MOV X0, X19
	0x03D0BFE0 BL 0x1C171E0

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X20, 0x6DD000
	012 Move X19, 0x459000
	013 Move X25, 0x459000
	014 Move W8, [X20+2157]
	015 Move X19, [X19+2032]
	016 Move X25, [X25+2040]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {74}
	021 Move X0, 0x459000
	022 Move X0, [X0+2032]
	023 Call 0x1C17CF4
	024 Move X0, 0x459000
	025 Move X0, [X0+2048]
	026 Call 0x1C17CF4
	027 Move X0, 0x459000
	028 Move X0, [X0+2056]
	029 Call 0x1C17CF4
	030 Move X0, 0x459000
	031 Move X0, [X0+2064]
	032 Call 0x1C17CF4
	033 Move X0, 0x459000
	034 Move X0, [X0+2072]
	035 Call 0x1C17CF4
	036 Move X0, 0x459000
	037 Move X0, [X0+2080]
	038 Call 0x1C17CF4
	039 Move X0, 0x459000
	040 Move X0, [X0+2088]
	041 Call 0x1C17CF4
	042 Move X0, 0x459000
	043 Move X0, [X0+2096]
	044 Call 0x1C17CF4
	045 Move X0, 0x459000
	046 Move X0, [X0+2104]
	047 Call 0x1C17CF4
	048 Move X0, 0x459000
	049 Move X0, [X0+2040]
	050 Call 0x1C17CF4
	051 Move X0, 0x459000
	052 Move X0, [X0+2112]
	053 Call 0x1C17CF4
	054 Move X0, 0x41E000
	055 Move X0, [X0+1088]
	056 Call 0x1C17CF4
	057 Move X0, 0x459000
	058 Move X0, [X0+1168]
	059 Call 0x1C17CF4
	060 Move X0, 0x459000
	061 Move X0, [X0+1664]
	062 Call 0x1C17CF4
	063 Move X0, 0x418000
	064 Move X0, [X0+4008]
	065 Call 0x1C17CF4
	066 Move X0, 0x410000
	067 Move X0, [X0+2312]
	068 Call 0x1C17CF4
	069 Move X0, 0x459000
	070 Move X0, [X0+1176]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X20+2157], W8
	074 Move X0, [X19]
	075 Move X20, 0x459000
	076 Move X21, 0x410000
	077 Move X20, [X20+1176]
	078 Move X21, [X21+2312]
	079 Move W1, 3
	080 Call 0x1C17D6C
	081 Move X8, [X25]
	082 Move X19, X0
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {89}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X8, [X25]
	089 Move X9, [X8+184]
	090 Move X20, [X20]
	091 Move X21, [X21]
	092 Move X22, [X9+8]
	093 Compare X22, 0
	094 JumpIfNotEqual {117}
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {101}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move X8, [X25]
	101 Move X9, 0x459000
	102 Move X8, [X8+184]
	103 Move X9, [X9+2056]
	104 Move X23, [X8]
	105 Move X0, [X9]
	106 Call 0x1C17F10
	107 Move X8, 0x459000
	108 Move X8, [X8+2064]
	109 Move X1, X23
	110 Move X3, X31
	111 Move X22, X0
	112 Move X2, [X8]
	113 Call Func`2<Vector3Int, Int32>..ctor, X0, X1, X2
	114 Move X8, [X25]
	115 Move X9, [X8+184]
	116 Move [X9+8], X22
	117 Move W9, [X8+224]
	118 Compare W9, 0
	119 JumpIfNotEqual {123}
	120 Move X0, X8
	121 Call 0x1C17DFC
	122 Move X8, [X25]
	123 Move X9, [X8+184]
	124 Move X26, 0x459000
	125 Move X23, [X9+16]
	126 Move X26, [X26+2048]
	127 Compare X23, 0
	128 JumpIfNotEqual {151}
	129 Move W9, [X8+224]
	130 Compare W9, 0
	131 JumpIfNotEqual {135}
	132 Move X0, X8
	133 Call 0x1C17DFC
	134 Move X8, [X25]
	135 Move X9, 0x459000
	136 Move X8, [X8+184]
	137 Move X9, [X9+2112]
	138 Move X24, [X8]
	139 Move X0, [X9]
	140 Call 0x1C17F10
	141 Move X8, 0x459000
	142 Move X8, [X8+2072]
	143 Move X1, X24
	144 Move X3, X31
	145 Move X23, X0
	146 Move X2, [X8]
	147 Call WriteDelegate<Vector3Int, Object, Int32>..ctor, X0, X1, X2
	148 Move X8, [X25]
	149 Move X8, [X8+184]
	150 Move [X8+16], X23
	151 Move X5, [X26]
	152 NotImplemented "Instruction MOVI not yet implemented."
	153 Add X0, X31, 96
	154 Move X1, X21
	155 Move X2, X20
	156 Move X3, X22
	157 Move X4, X23
	158 Move [X31+96], V0
	159 Move [X31+104], V0
	160 Call FieldDescription<Vector3Int, Object, Int32>..ctor, X0, X1, X2, X3, X4
	161 Compare X19, 0
	162 JumpIfEqual {361}
	163 Move V0, [X31+96]
	164 Move V1, [X31+112]
	165 Move [X31+64], V0
	166 Move [X31+72], V1
	167 Move W8, [X19+24]
	168 Compare W8, 0
	169 JumpIfEqual {360}
	170 Move V1, [X31+64]
	171 Move V0, [X31+80]
	172 Move X20, 0x459000
	173 Move X21, 0x418000
	174 Move [X19+32], V1
	175 Move [X19+40], V0
	176 Move X0, [X25]
	177 Move W8, [X0+224]
	178 Move X20, [X20+1168]
	179 Move X21, [X21+4008]
	180 Compare W8, 0
	181 JumpIfNotEqual {184}
	182 Call 0x1C17DFC
	183 Move X0, [X25]
	184 Move X8, [X0+184]
	185 Move X20, [X20]
	186 Move X21, [X21]
	187 Move X22, [X8+24]
	188 Compare X22, 0
	189 JumpIfNotEqual {211}
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {195}
	193 Call 0x1C17DFC
	194 Move X0, [X25]
	195 Move X9, 0x459000
	196 Move X8, [X0+184]
	197 Move X9, [X9+2056]
	198 Move X23, [X8]
	199 Move X0, [X9]
	200 Call 0x1C17F10
	201 Move X8, 0x459000
	202 Move X8, [X8+2080]
	203 Move X1, X23
	204 Move X3, X31
	205 Move X22, X0
	206 Move X2, [X8]
	207 Call Func`2<Vector3Int, Int32>..ctor, X0, X1, X2
	208 Move X0, [X25]
	209 Move X8, [X0+184]
	210 Move [X8+24], X22
	211 Move W8, [X0+224]
	212 Compare W8, 0
	213 JumpIfNotEqual {216}
	214 Call 0x1C17DFC
	215 Move X0, [X25]
	216 Move X8, [X0+184]
	217 Move X23, [X8+32]
	218 Compare X23, 0
	219 JumpIfNotEqual {241}
	220 Move W8, [X0+224]
	221 Compare W8, 0
	222 JumpIfNotEqual {225}
	223 Call 0x1C17DFC
	224 Move X0, [X25]
	225 Move X9, 0x459000
	226 Move X8, [X0+184]
	227 Move X9, [X9+2112]
	228 Move X24, [X8]
	229 Move X0, [X9]
	230 Call 0x1C17F10
	231 Move X8, 0x459000
	232 Move X8, [X8+2088]
	233 Move X1, X24
	234 Move X3, X31
	235 Move X23, X0
	236 Move X2, [X8]
	237 Call WriteDelegate<Vector3Int, Object, Int32>..ctor, X0, X1, X2
	238 Move X8, [X25]
	239 Move X8, [X8+184]
	240 Move [X8+32], X23
	241 Move X5, [X26]
	242 NotImplemented "Instruction MOVI not yet implemented."
	243 Add X0, X31, 96
	244 Move X1, X21
	245 Move X2, X20
	246 Move X3, X22
	247 Move X4, X23
	248 Move [X31+96], V0
	249 Move [X31+104], V0
	250 Call FieldDescription<Vector3Int, Object, Int32>..ctor, X0, X1, X2, X3, X4
	251 Move V1, [X31+96]
	252 Move V0, [X31+112]
	253 Move [X31+32], V1
	254 Move [X31+40], V0
	255 Move W8, [X19+24]
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move V1, [X31+32]
	258 Move V0, [X31+48]
	259 Move X20, 0x459000
	260 Move X21, 0x41E000
	261 Move [X19+64], V1
	262 Move [X19+72], V0
	263 Move X0, [X25]
	264 Move W8, [X0+224]
	265 Move X20, [X20+1664]
	266 Move X21, [X21+1088]
	267 Compare W8, 0
	268 JumpIfNotEqual {271}
	269 Call 0x1C17DFC
	270 Move X0, [X25]
	271 Move X8, [X0+184]
	272 Move X20, [X20]
	273 Move X21, [X21]
	274 Move X22, [X8+40]
	275 Compare X22, 0
	276 JumpIfNotEqual {298}
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {282}
	280 Call 0x1C17DFC
	281 Move X0, [X25]
	282 Move X9, 0x459000
	283 Move X8, [X0+184]
	284 Move X9, [X9+2056]
	285 Move X23, [X8]
	286 Move X0, [X9]
	287 Call 0x1C17F10
	288 Move X8, 0x459000
	289 Move X8, [X8+2096]
	290 Move X1, X23
	291 Move X3, X31
	292 Move X22, X0
	293 Move X2, [X8]
	294 Call Func`2<Vector3Int, Int32>..ctor, X0, X1, X2
	295 Move X0, [X25]
	296 Move X8, [X0+184]
	297 Move [X8+40], X22
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {303}
	301 Call 0x1C17DFC
	302 Move X0, [X25]
	303 Move X8, [X0+184]
	304 Move X23, [X8+48]
	305 Compare X23, 0
	306 JumpIfNotEqual {328}
	307 Move W8, [X0+224]
	308 Compare W8, 0
	309 JumpIfNotEqual {312}
	310 Call 0x1C17DFC
	311 Move X0, [X25]
	312 Move X9, 0x459000
	313 Move X8, [X0+184]
	314 Move X9, [X9+2112]
	315 Move X24, [X8]
	316 Move X0, [X9]
	317 Call 0x1C17F10
	318 Move X8, 0x459000
	319 Move X8, [X8+2104]
	320 Move X1, X24
	321 Move X3, X31
	322 Move X23, X0
	323 Move X2, [X8]
	324 Call WriteDelegate<Vector3Int, Object, Int32>..ctor, X0, X1, X2
	325 Move X8, [X25]
	326 Move X8, [X8+184]
	327 Move [X8+48], X23
	328 Move X5, [X26]
	329 NotImplemented "Instruction MOVI not yet implemented."
	330 Add X0, X31, 96
	331 Move X1, X21
	332 Move X2, X20
	333 Move X3, X22
	334 Move X4, X23
	335 Move [X31+96], V0
	336 Move [X31+104], V0
	337 Call FieldDescription<Vector3Int, Object, Int32>..ctor, X0, X1, X2, X3, X4
	338 Move V1, [X31+96]
	339 Move V0, [X31+112]
	340 Move [X31], V1
	341 Move [X31+8], V0
	342 Move W8, [X19+24]
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move V1, [X31]
	345 Move V0, [X31+16]
	346 Move X0, X19
	347 Move X22, [X31+176]
	348 Move X21, [X31+184]
	349 Move X24, [X31+160]
	350 Move X23, [X31+168]
	351 Move [X19+96], V1
	352 Move [X19+104], V0
	353 Move X20, [X31+192]
	354 Move X19, [X31+200]
	355 Move X26, [X31+144]
	356 Move X25, [X31+152]
	357 Move X30, [X31+128]
	358 Add X31, X31, 208
	359 Return X0
	360 Call 0x1C17F28
	361 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03D0BFE4 STP X30, X21, [X31 - 0x20]!
	0x03D0BFE8 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X1, X31
	002 Call Vector3IntField..ctor, X0, X1
	003 Return 

Method: System.Void .ctor(System.String label)

Disassembly:
	0x03D06A40 LDR X0, [X0 + 0x400]
	0x03D06A44 BL 0x1C16CF4
	0x03D06A48 MOVZ W8, 0x1
	0x03D06A4C STRB W8, [X20 + 0x840]
	0x03D06A50 LDR X8, [X19 + 0x440]
	0x03D06A54 CBZ X8, 0x3D06AD8
	0x03D06A58 ADRP X23, 0x45D000
	0x03D06A5C LDR X23, [X23 + 0x400]
	0x03D06A60 MOV W20, W31
	0x03D06A64 LDR W8, [X8 + 0x18]
	0x03D06A68 CMP W20, W8
	0x03D06A6C B.GE 0x3D06ADC
	0x03D06A70 LDR X8, [X19]
	0x03D06A74 MOV X0, X19
	0x03D06A78 LDR X9, [X8 + 0x7E8]
	0x03D06A7C LDR X1, [X8 + 0x7F0]
	0x03D06A80 BLR X9
	0x03D06A84 LDR X8, [X19 + 0x440]
	0x03D06A88 CBZ X8, 0x3D06AD8
	0x03D06A8C LDR X2, [X23]
	0x03D06A90 MOV W22, W0
	0x03D06A94 MOV X0, X8
	0x03D06A98 MOV W1, W20
	0x03D06A9C BL 0x301BCCC
	0x03D06AA0 CBZ X0, 0x3D06AD8
	0x03D06AA4 CMP W20, W22
	0x03D06AA8 MOV X1, X31
	0x03D06AAC MOV X21, X0
	0x03D06AB0 CSET W22, EQ
	0x03D06AB4 BL 0x3DEEF88
	0x03D06AB8 MOV W1, W0
	0x03D06ABC BFM W1, W22, 0x1D, 0x0
	0x03D06AC0 MOV X0, X21
	0x03D06AC4 MOV X2, X31
	0x03D06AC8 BL 0x3DEEF90
	0x03D06ACC LDR X8, [X19 + 0x440]
	0x03D06AD0 ADD W20, W20, 0x1
	0x03D06AD4 CBNZ X8, 0x3D06A64
	0x03D06AD8 BL 0x1C16F20
	0x03D06ADC LDP X20, X19, [X31 + 0x20]
	0x03D06AE0 LDP X22, X21, [X31 + 0x10]
	0x03D06AE4 LDP X30, X23, [X31], #0x30
	0x03D06AE8 RET
	0x03D06AEC STP X30, X21, [X31 - 0x20]!
	0x03D06AF0 STP X20, X19, [X31 + 0x10]
	0x03D06AF4 ADRP X20, 0x6E1000
	0x03D06AF8 ADRP X21, 0x45D000
	0x03D06AFC LDRB W8, [X20 + 0x841]
	0x03D06B00 LDR X21, [X21 + 0x408]
	0x03D06B04 MOV X19, X0
	0x03D06B08 TBNZ X8, 0x0, 0x3D06B20
	0x03D06B0C ADRP X0, 0x45D000
	0x03D06B10 LDR X0, [X0 + 0x408]
	0x03D06B14 BL 0x1C16CF4
	0x03D06B18 MOVZ W8, 0x1
	0x03D06B1C STRB W8, [X20 + 0x841]
	0x03D06B20 LDR X1, [X21]
	0x03D06B24 MOV X0, X19
	0x03D06B28 LDP X20, X19, [X31 + 0x10]
	0x03D06B2C LDP X30, X21, [X31], #0x20
	0x03D06B30 B 0x2736468
	0x03D06B34 STP X30, X21, [X31 - 0x20]!
	0x03D06B38 STP X20, X19, [X31 + 0x10]
	0x03D06B3C ADRP X20, 0x6E1000
	0x03D06B40 ADRP X21, 0x45D000
	0x03D06B44 LDRB W8, [X20 + 0x842]
	0x03D06B48 LDR X21, [X21 + 0x410]
	0x03D06B4C MOV X19, X0
	0x03D06B50 TBNZ X8, 0x0, 0x3D06B68
	0x03D06B54 ADRP X0, 0x45D000
	0x03D06B58 LDR X0, [X0 + 0x410]
	0x03D06B5C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6E2000
	007 Move X21, 0x45E000
	008 Move W8, [X22+2158]
	009 Move X21, [X21+776]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x45E000
	017 Move X0, [X0+784]
	018 Call 0x1C17CF4
	019 Move X0, 0x45E000
	020 Move X0, [X0+776]
	021 Call 0x1C17CF4
	022 Move X0, 0x45E000
	023 Move X0, [X0+792]
	024 Call 0x1C17CF4
	025 Move X0, 0x45E000
	026 Move X0, [X0+800]
	027 Call 0x1C17CF4
	028 Move X0, 0x45E000
	029 Move X0, [X0+752]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+2158], W8
	033 Move X0, [X21]
	034 Move X22, 0x45E000
	035 Move X21, 0x45E000
	036 Move W8, [X0+224]
	037 Move X22, [X22+784]
	038 Move X21, [X21+752]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X3, [X22]
	043 Move W2, 3
	044 Move X0, X19
	045 Move X1, X20
	046 Call BaseCompositeField`3<Vector3Int, Object, Int32>..ctor, X0, X1, X2
	047 Move X0, [X21]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X21]
	053 Move X8, [X0+184]
	054 Move X0, X19
	055 Move X2, X31
	056 Move X1, [X8]
	057 Call VisualElement.AddToClassList, X0, X1
	058 Move X0, [X19+1032]
	059 Compare X0, 0
	060 JumpIfEqual {84}
	061 Move X8, [X21]
	062 Move X20, 0x45E000
	063 Move X2, X31
	064 Move X8, [X8+184]
	065 Move X1, [X8+8]
	066 Move X20, [X20+800]
	067 Call VisualElement.AddToClassList, X0, X1
	068 Move X1, [X20]
	069 Move X0, X19
	070 Call BaseField`1<Vector3Int>.get_visualInput, X0
	071 Compare X0, 0
	072 JumpIfEqual {84}
	073 Move X8, [X21]
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X2, X31
	079 Move X8, [X8+184]
	080 Move X1, [X8+16]
	081 Move X30, [X31+48]
	082 Call VisualElement.AddToClassList, X0, X1
	083 Return 
	084 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D0BFEC ADRP X20, 0x6DC000
	0x03D0BFF0 ADRP X21, 0x412000
	0x03D0BFF4 LDRB W8, [X20 + 0x884]
	0x03D0BFF8 LDR X21, [X21 + 0xC08]
	0x03D0BFFC MOV X19, X0
	0x03D0C000 TBNZ X8, 0x0, 0x3D0C054
	0x03D0C004 ADRP X0, 0x411000
	0x03D0C008 LDR X0, [X0 + 0xBF0]
	0x03D0C00C BL 0x1C16CF4
	0x03D0C010 ADRP X0, 0x411000
	0x03D0C014 LDR X0, [X0 + 0xC08]
	0x03D0C018 BL 0x1C16CF4
	0x03D0C01C ADRP X0, 0x411000
	0x03D0C020 LDR X0, [X0 + 0xB20]
	0x03D0C024 BL 0x1C16CF4
	0x03D0C028 ADRP X0, 0x457000
	0x03D0C02C LDR X0, [X0 + 0x938]
	0x03D0C030 BL 0x1C16CF4
	0x03D0C034 ADRP X0, 0x3F2000
	0x03D0C038 LDR X0, [X0 + 0x130]
	0x03D0C03C BL 0x1C16CF4
	0x03D0C040 ADRP X0, 0x457000
	0x03D0C044 LDR X0, [X0 + 0x940]
	0x03D0C048 BL 0x1C16CF4
	0x03D0C04C MOVZ W8, 0x1
	0x03D0C050 STRB W8, [X20 + 0x884]
	0x03D0C054 LDR X0, [X21]
	0x03D0C058 BL 0x1C16F10
	0x03D0C05C MOV X1, X31
	0x03D0C060 MOV X20, X0
	0x03D0C064 BL 0x3E1BCA4
	0x03D0C068 CBZ X20, 0x3D0C0D8
	0x03D0C06C ADRP X8, 0x3F2000
	0x03D0C070 LDR X8, [X8 + 0x130]
	0x03D0C074 ADRP X9, 0x411000
	0x03D0C078 MOVN W10, 0x0
	0x03D0C07C LDR X8, [X8]
	0x03D0C080 LDR X9, [X9 + 0xB20]
	0x03D0C084 STR W10, [X20 + 0x40]
	0x03D0C088 STR X8, [X20 + 0x10]
	0x03D0C08C STR X20, [X19 + 0x80]
	0x03D0C090 LDR X0, [X9]
	0x03D0C094 BL 0x1C16F10
	0x03D0C098 MOV X1, X31
	0x03D0C09C MOV X20, X0
	0x03D0C0A0 BL 0x3E0A2F4
	0x03D0C0A4 CBZ X20, 0x3D0C0D8
	0x03D0C0A8 ADRP X8, 0x457000
	0x03D0C0AC LDR X8, [X8 + 0x940]
	0x03D0C0B0 ADRP X9, 0x457000
	0x03D0C0B4 MOV X0, X19
	0x03D0C0B8 LDR X8, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x6DD000
	008 Move X22, 0x459000
	009 Move X19, 0x458000
	010 Move X21, 0x411000
	011 Move X20, 0x411000
	012 Move W8, [X23+2159]
	013 Move X22, [X22+2120]
	014 Move X19, [X19+752]
	015 Move X21, [X21+3768]
	016 Move X20, [X20+3776]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x458000
	022 Move X0, [X0+752]
	023 Call 0x1C17CF4
	024 Move X0, 0x458000
	025 Move X0, [X0+2120]
	026 Call 0x1C17CF4
	027 Move X0, 0x411000
	028 Move X0, [X0+3768]
	029 Call 0x1C17CF4
	030 Move X0, 0x411000
	031 Move X0, [X0+3776]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+2159], W8
	035 Move X8, [X19]
	036 Move X9, [X22]
	037 Move X2, X31
	038 Move X8, [X8+184]
	039 Move [X8], X9
	040 Move X8, [X19]
	041 Move X1, [X21]
	042 Move X8, [X8+184]
	043 Move X0, [X8]
	044 Call String.Concat, X0, X1
	045 Move X8, [X19]
	046 Move X2, X31
	047 Move X8, [X8+184]
	048 Move [X8+8], X0
	049 Move X0, [X8]
	050 Move X1, [X20]
	051 Call String.Concat, X0, X1
	052 Move X8, [X19]
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X8, [X8+184]
	058 Move [X8+16], X0
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return 

