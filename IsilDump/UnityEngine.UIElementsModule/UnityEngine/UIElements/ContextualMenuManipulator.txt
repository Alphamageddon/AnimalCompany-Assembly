Type: UnityEngine.UIElements.ContextualMenuManipulator

Method: System.Void .ctor(System.Action`1<UnityEngine.UIElements.ContextualMenuPopulateEvent> menuBuilder)

Disassembly:
	0x03CF9C1C ADRP X23, 0x423000
	0x03CF9C20 LDR X23, [X23 + 0xE78]
	0x03CF9C24 MOV X0, X20
	0x03CF9C28 LDR X22, [X23]
	0x03CF9C2C MOV X1, X22
	0x03CF9C30 BL 0x1C16E00
	0x03CF9C34 CBZ X0, 0x3CF9CDC
	0x03CF9C38 LDR X8, [X0]
	0x03CF9C3C LDR X1, [X23]
	0x03CF9C40 MOV X21, X0
	0x03CF9C44 LDRH W9, [X8 + 0x12E]
	0x03CF9C48 CBZ X9, 0x3CF9C6C
	0x03CF9C4C LDR X10, [X8 + 0xB0]
	0x03CF9C50 ADD X10, X10, 0x8
	0x03CF9C54 LDUR X11, [X10 - 0x8]
	0x03CF9C58 CMP X11, X1
	0x03CF9C5C B.EQ 0x3CF9C88
	0x03CF9C60 SUBS X9, X9, 0x1
	0x03CF9C64 ADD X10, X10, 0x10
	0x03CF9C68 B.NE 0x3CF9C54
	0x03CF9C6C MOVZ W2, 0x3
	0x03CF9C70 MOV X0, X21
	0x03CF9C74 BL 0x1C5C788
	0x03CF9C78 B 0x3CF9C98
	0x03CF9C7C LDR W9, [X10]
	0x03CF9C80 ADD W9, W9, 0x5
	0x03CF9C84 B 0x3CF9C90
	0x03CF9C88 LDR W9, [X10]
	0x03CF9C8C ADD W9, W9, 0x3
	0x03CF9C90 ADD X8, X8, W9, 0x4, SXTW
	0x03CF9C94 ADD X0, X8, 0x138
	0x03CF9C98 LDP X8, X1, [X0]
	0x03CF9C9C MOV X0, X21
	0x03CF9CA0 BLR X8
	0x03CF9CA4 CBZ W0, 0x3CF9CB8
	0x03CF9CA8 LDP X20, X19, [X31 + 0x20]
	0x03CF9CAC LDP X22, X21, [X31 + 0x10]
	0x03CF9CB0 LDP X30, X23, [X31], #0x30
	0x03CF9CB4 RET
	0x03CF9CB8 LDR X8, [X19]
	0x03CF9CBC MOV X0, X19
	0x03CF9CC0 LDP X20, X19, [X31 + 0x20]
	0x03CF9CC4 LDP X22, X21, [X31 + 0x10]
	0x03CF9CC8 LDR X2, [X8 + 0x8A8]
	0x03CF9CCC LDR X1, [X8 + 0x8B0]
	0x03CF9CD0 LDP X30, X23, [X31], #0x30
	0x03CF9CD4 BR X2
	0x03CF9CD8 BL 0x1C16F20
	0x03CF9CDC MOV X0, X20
	0x03CF9CE0 MOV X1, X22
	0x03CF9CE4 BL 0x1C171E0
	0x03CF9CE8 STP X30, X19, [X31 - 0x10]!
	0x03CF9CEC LDR X8, [X0]
	0x03CF9CF0 MOV X19, X0
	0x03CF9CF4 LDR X9, [X8 + 0x7E8]
	0x03CF9CF8 LDR X1, [X8 + 0x7F0]
	0x03CF9CFC BLR X9
	0x03CF9D00 LDR X8, [X19]
	0x03CF9D04 LDR X3, [X8 + 0x7F8]
	0x03CF9D08 LDR X2, [X8 + 0x800]
	0x03CF9D0C ORN W8, W31, W0, 0x0
	0x03CF9D10 AND W1, W8, 0x1
	0x03CF9D14 MOV X0, X19
	0x03CF9D18 LDP X30, X19, [X31], #0x10
	0x03CF9D1C BR X3
	0x03CF9D20 STR X30, [X31 - 0x30]!
	0x03CF9D24 STP X22, X21, [X31 + 0x10]
	0x03CF9D28 STP X20, X19, [X31 + 0x20]
	0x03CF9D2C ADRP X20, 0x6EE000
	0x03CF9D30 LDRB W8, [X20 + 0x7CE]
	0x03CF9D34 MOV X19, X0
	0x03CF9D38 TBNZ X8, 0x0, 0x3CF9D74
	0x03CF9D3C ADRP X0, 0x469000
	0x03CF9D40 LDR X0, [X0 + 0xDA8]
	0x03CF9D44 BL 0x1C16CF4
	0x03CF9D48 ADRP X0, 0x469000
	0x03CF9D4C LDR X0, [X0 + 0xDB0]
	0x03CF9D50 BL 0x1C16CF4
	0x03CF9D54 ADRP X0, 0x469000
	0x03CF9D58 LDR X0, [X0 + 0xC80]
	0x03CF9D5C BL 0x1C16CF4
	0x03CF9D60 ADRP X0, 0x3FA000
	0x03CF9D64 LDR X0, [X0 + 0x988]
	0x03CF9D68 BL 0x1C16CF4
	0x03CF9D6C MOVZ W8, 0x1
	0x03CF9D70 STRB W8, [X20 + 0x7CE]
	0x03CF9D74 ADRP X21, 0x469000
	0x03CF9D78 ADRP X22, 0x469000
	0x03CF9D7C LDRB W8, [X19 + 0x408]
	0x03CF9D80 LDR X21, [X21 + 0xC80]
	0x03CF9D84 LDR X22, [X22 + 0xDA8]
	0x03CF9D88 CBZ W8, 0x3CF9E40
	0x03CF9D8C LDR X1, [X21]
	0x03CF9D90 MOV X0, X19
	0x03CF9D94 BL 0x2772DDC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6EF000
	006 Move W8, [X21+1989]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x3FB000
	014 Move X0, [X0+2416]
	015 Call 0x1C17CF4
	016 Move X0, 0x46A000
	017 Move X0, [X0+2384]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1989], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call MouseManipulator..ctor, X0
	024 Move X0, [X19+24]
	025 Move [X19+48], X20
	026 Compare X0, 0
	027 JumpIfEqual {108}
	028 Move X20, 0x46A000
	029 Move X20, [X20+2384]
	030 Move W9, [X0+28]
	031 Move X8, [X0+16]
	032 Move X10, [X20]
	033 Add W9, W9, 1
	034 Move [X0+28], W9
	035 Compare X8, 0
	036 JumpIfEqual {108}
	037 NotImplemented "Instruction LDRSW not yet implemented."
	038 Move W11, [X8+24]
	039 Move X21, 0x3FB000
	040 Move X21, [X21+2416]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W11, 12
	043 Add W10, W9, 1
	044 Move W12, 1
	045 NotImplemented "Instruction MADD not yet implemented."
	046 Move [X0+24], W10
	047 Move [X8+32], X12
	048 Move [X8+40], W31
	049 Move X8, [X10+32]
	050 Move W1, 1
	051 Move X2, X31
	052 Move X8, [X8+192]
	053 Move X3, [X8+112]
	054 Call List`1<ManipulatorActivationFilter>.AddWithResize, X0, X1
	055 Move X0, [X21]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X31
	061 Call Application.get_platform
	062 Compare W0, 0
	063 JumpIfEqual {72}
	064 Move X0, [X21]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X31
	070 Call Application.get_platform
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, [X19+24]
	073 Compare X0, 0
	074 JumpIfEqual {108}
	075 Move W9, [X0+28]
	076 Move X8, [X0+16]
	077 Move X10, [X20]
	078 Add W9, W9, 1
	079 Move [X0+28], W9
	080 Compare X8, 0
	081 JumpIfEqual {108}
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Move W11, [X8+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W11, 12
	086 Add W10, W9, 1
	087 Move X12, 2
	088 NotImplemented "Instruction MADD not yet implemented."
	089 Move [X0+24], W10
	090 Move [X8+32], X12
	091 Move [X8+40], W31
	092 Move X20, [X31+16]
	093 Move X19, [X31+24]
	094 Move X30, [X31+32]
	095 Move X21, [X31+40]
	096 Return 
	097 Move X8, [X10+32]
	098 Move X20, [X31+16]
	099 Move X19, [X31+24]
	100 Move X1, 2
	101 Move X2, X31
	102 Move X8, [X8+192]
	103 Move X3, [X8+112]
	104 Move X30, [X31+32]
	105 Move X21, [X31+40]
	106 Call List`1<ManipulatorActivationFilter>.AddWithResize, X0, X1
	107 Return 
	108 Call 0x1C17F20

Method: System.Void RegisterCallbacksOnTarget()

Disassembly:
	0x03CF9D98 CBZ X0, 0x3CF9EA0
	0x03CF9D9C MOV X1, X31
	0x03CF9DA0 MOV X20, X0
	0x03CF9DA4 BL 0x3DEEF88
	0x03CF9DA8 AND W1, W0, 0xFFFFFFF7
	0x03CF9DAC MOV X0, X20
	0x03CF9DB0 MOV X2, X31
	0x03CF9DB4 BL 0x3DEEF90
	0x03CF9DB8 MOV X0, X19
	0x03CF9DBC MOV X1, X31
	0x03CF9DC0 BL 0x3DEEF88
	0x03CF9DC4 AND W1, W0, 0xFFFFFFF7
	0x03CF9DC8 MOV X0, X19
	0x03CF9DCC MOV X2, X31
	0x03CF9DD0 BL 0x3DEEF90
	0x03CF9DD4 LDR X0, [X19 + 0x448]
	0x03CF9DD8 CBZ X0, 0x3CF9EA0
	0x03CF9DDC MOV X1, X31
	0x03CF9DE0 BL 0x3DF6948
	0x03CF9DE4 LDR X1, [X21]
	0x03CF9DE8 MOV X0, X19
	0x03CF9DEC BL 0x2772DDC
	0x03CF9DF0 LDR X1, [X22]
	0x03CF9DF4 MOV X20, X0
	0x03CF9DF8 MOV X0, X19
	0x03CF9DFC BL 0x27734C0
	0x03CF9E00 CBZ X20, 0x3CF9EA0
	0x03CF9E04 ADRP X21, 0x3FA000
	0x03CF9E08 LDR X21, [X21 + 0x988]
	0x03CF9E0C MOV X1, X0
	0x03CF9E10 MOV X0, X20
	0x03CF9E14 MOV X2, X31
	0x03CF9E18 BL 0x3DF60E8
	0x03CF9E1C LDR X0, [X19 + 0x440]
	0x03CF9E20 CBZ X0, 0x3CF9E34
	0x03CF9E24 LDR X8, [X0]
	0x03CF9E28 LDR X9, [X8 + 0xB18]
	0x03CF9E2C LDR X1, [X8 + 0xB20]
	0x03CF9E30 BLR X9
	0x03CF9E34 STR X0, [X19 + 0x458]
	0x03CF9E38 LDR X1, [X21]
	0x03CF9E3C B 0x3CF9E7C
	0x03CF9E40 LDR X1, [X22]
	0x03CF9E44 MOV X0, X19
	0x03CF9E48 BL 0x27734C0
	0x03CF9E4C CBZ X0, 0x3CF9EA0
	0x03CF9E50 MOV X1, X31
	0x03CF9E54 BL 0x3DF6948
	0x03CF9E58 LDR X1, [X21]
	0x03CF9E5C MOV X0, X19
	0x03CF9E60 BL 0x2772DDC
	0x03CF9E64 CBZ X0, 0x3CF9EA0
	0x03CF9E68 LDR X1, [X19 + 0x448]
	0x03CF9E6C MOV X2, X31
	0x03CF9E70 BL 0x3DF60E8
	0x03CF9E74 LDR X1, [X19 + 0x458]
	0x03CF9E78 CBZ X1, 0x3CF9E90
	0x03CF9E7C MOV X0, X19
	0x03CF9E80 LDP X20, X19, [X31 + 0x20]
	0x03CF9E84 LDP X22, X21, [X31 + 0x10]
	0x03CF9E88 LDR X30, [X31], #0x30
	0x03CF9E8C B 0x3CF9818
	0x03CF9E90 LDP X20, X19, [X31 + 0x20]
	0x03CF9E94 LDP X22, X21, [X31 + 0x10]
	0x03CF9E98 LDR X30, [X31], #0x30
	0x03CF9E9C RET
	0x03CF9EA0 BL 0x1C16F20
	0x03CF9EA4 STR X30, [X31 - 0x50]!
	0x03CF9EA8 STP X26, X25, [X31 + 0x10]
	0x03CF9EAC STP X24, X23, [X31 + 0x20]
	0x03CF9EB0 STP X22, X21, [X31 + 0x30]
	0x03CF9EB4 STP X20, X19, [X31 + 0x40]
	0x03CF9EB8 ADRP X25, 0x6EE000
	0x03CF9EBC ADRP X26, 0x424000
	0x03CF9EC0 ADRP X20, 0x469000
	0x03CF9EC4 ADRP X24, 0x424000
	0x03CF9EC8 ADRP X23, 0x424000
	0x03CF9ECC ADRP X22, 0x469000
	0x03CF9ED0 ADRP X21, 0x424000
	0x03CF9ED4 LDR X26, [X26 + 0x788]
	0x03CF9ED8 LDRB W8, [X25 + 0x7CF]
	0x03CF9EDC LDR X20, [X20 + 0xDB8]
	0x03CF9EE0 LDR X24, [X24 + 0x778]
	0x03CF9EE4 LDR X23, [X23 + 0xDB0]
	0x03CF9EE8 LDR X22, [X22 + 0xDC0]
	0x03CF9EEC LDR X21, [X21 + 0xDA8]
	0x03CF9EF0 MOV X19, X0
	0x03CF9EF4 TBNZ X8, 0x0, 0x3CF9F48
	0x03CF9EF8 ADRP X0, 0x469000
	0x03CF9EFC LDR X0, [X0 + 0xDC0]
	0x03CF9F00 BL 0x1C16CF4
	0x03CF9F04 ADRP X0, 0x469000
	0x03CF9F08 LDR X0, [X0 + 0xDB8]
	0x03CF9F0C BL 0x1C16CF4
	0x03CF9F10 ADRP X0, 0x424000
	0x03CF9F14 LDR X0, [X0 + 0xDA8]
	0x03CF9F18 BL 0x1C16CF4
	0x03CF9F1C ADRP X0, 0x424000
	0x03CF9F20 LDR X0, [X0 + 0x778]
	0x03CF9F24 BL 0x1C16CF4
	0x03CF9F28 ADRP X0, 0x424000
	0x03CF9F2C LDR X0, [X0 + 0xDB0]
	0x03CF9F30 BL 0x1C16CF4
	0x03CF9F34 ADRP X0, 0x424000
	0x03CF9F38 LDR X0, [X0 + 0x788]
	0x03CF9F3C BL 0x1C16CF4
	0x03CF9F40 MOVZ W8, 0x1
	0x03CF9F44 STRB W8, [X25 + 0x7CF]
	0x03CF9F48 LDR X0, [X26]
	0x03CF9F4C BL 0x1C16F10
	0x03CF9F50 LDR X2, [X20]
	0x03CF9F54 MOV X1, X19
	0x03CF9F58 MOV X3, X31
	0x03CF9F5C MOV X20, X0
	0x03CF9F60 BL 0x2D0E824
	0x03CF9F64 LDR X3, [X24]
	0x03CF9F68 MOV X0, X19
	0x03CF9F6C MOV X1, X20
	0x03CF9F70 MOV W2, W31
	0x03CF9F74 BL 0x21A1534
	0x03CF9F78 LDR X0, [X23]
	0x03CF9F7C BL 0x1C16F10
	0x03CF9F80 LDR X2, [X22]
	0x03CF9F84 MOV X1, X19
	0x03CF9F88 MOV X3, X31
	0x03CF9F8C MOV X20, X0
	0x03CF9F90 BL 0x2D0E824
	0x03CF9F94 LDR X3, [X21]
	0x03CF9F98 MOV X0, X19
	0x03CF9F9C MOV X1, X20
	0x03CF9FA0 LDP X20, X19, [X31 + 0x40]
	0x03CF9FA4 LDP X22, X21, [X31 + 0x30]
	0x03CF9FA8 LDP X24, X23, [X31 + 0x20]
	0x03CF9FAC LDP X26, X25, [X31 + 0x10]
	0x03CF9FB0 MOV W2, W31
	0x03CF9FB4 LDR X30, [X31], #0x50
	0x03CF9FB8 B 0x21A1534
	0x03CF9FBC STR X30, [X31 - 0x50]!
	0x03CF9FC0 STP X26, X25, [X31 + 0x10]
	0x03CF9FC4 STP X24, X23, [X31 + 0x20]
	0x03CF9FC8 STP X22, X21, [X31 + 0x30]
	0x03CF9FCC STP X20, X19, [X31 + 0x40]
	0x03CF9FD0 ADRP X25, 0x6EE000
	0x03CF9FD4 ADRP X26, 0x424000
	0x03CF9FD8 ADRP X20, 0x469000
	0x03CF9FDC ADRP X24, 0x424000
	0x03CF9FE0 ADRP X23, 0x424000
	0x03CF9FE4 ADRP X22, 0x469000
	0x03CF9FE8 ADRP X21, 0x424000
	0x03CF9FEC LDR X26, [X26 + 0x788]
	0x03CF9FF0 LDRB W8, [X25 + 0x7D0]
	0x03CF9FF4 LDR X20, [X20 + 0xDB8]
	0x03CF9FF8 LDR X24, [X24 + 0x798]
	0x03CF9FFC LDR X23, [X23 + 0xDB0]
	0x03CFA000 LDR X22, [X22 + 0xDC0]
	0x03CFA004 LDR X21, [X21 + 0xDC0]
	0x03CFA008 MOV X19, X0
	0x03CFA00C TBNZ X8, 0x0, 0x3CFA060
	0x03CFA010 ADRP X0, 0x468000
	0x03CFA014 LDR X0, [X0 + 0xDC0]
	0x03CFA018 BL 0x1C16CF4
	0x03CFA01C ADRP X0, 0x468000
	0x03CFA020 LDR X0, [X0 + 0xDB8]
	0x03CFA024 BL 0x1C16CF4
	0x03CFA028 ADRP X0, 0x423000
	0x03CFA02C LDR X0, [X0 + 0xDC0]
	0x03CFA030 BL 0x1C16CF4
	0x03CFA034 ADRP X0, 0x423000
	0x03CFA038 LDR X0, [X0 + 0x798]
	0x03CFA03C BL 0x1C16CF4
	0x03CFA040 ADRP X0, 0x423000
	0x03CFA044 LDR X0, [X0 + 0xDB0]
	0x03CFA048 BL 0x1C16CF4
	0x03CFA04C ADRP X0, 0x423000
	0x03CFA050 LDR X0, [X0 + 0x788]
	0x03CFA054 BL 0x1C16CF4
	0x03CFA058 MOVZ W8, 0x1
	0x03CFA05C STRB W8, [X25 + 0x7D0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x6EF000
	008 Move X20, 0x3FB000
	009 Move W8, [X21+1990]
	010 Move X20, [X20+2416]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {60}
	016 Move X0, 0x3FB000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move X0, 0x46A000
	020 Move X0, [X0+3304]
	021 Call 0x1C17CF4
	022 Move X0, 0x46A000
	023 Move X0, [X0+3312]
	024 Call 0x1C17CF4
	025 Move X0, 0x426000
	026 Move X0, [X0+136]
	027 Call 0x1C17CF4
	028 Move X0, 0x46A000
	029 Move X0, [X0+3320]
	030 Call 0x1C17CF4
	031 Move X0, 0x46A000
	032 Move X0, [X0+3328]
	033 Call 0x1C17CF4
	034 Move X0, 0x46A000
	035 Move X0, [X0+3336]
	036 Call 0x1C17CF4
	037 Move X0, 0x46A000
	038 Move X0, [X0+3344]
	039 Call 0x1C17CF4
	040 Move X0, 0x46A000
	041 Move X0, [X0+3352]
	042 Call 0x1C17CF4
	043 Move X0, 0x46A000
	044 Move X0, [X0+3360]
	045 Call 0x1C17CF4
	046 Move X0, 0x46A000
	047 Move X0, [X0+2544]
	048 Call 0x1C17CF4
	049 Move X0, 0x46A000
	050 Move X0, [X0+3368]
	051 Call 0x1C17CF4
	052 Move X0, 0x46A000
	053 Move X0, [X0+3376]
	054 Call 0x1C17CF4
	055 Move X0, 0x426000
	056 Move X0, [X0+176]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X21+1990], W8
	060 Move X0, [X20]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X22, 0x46A000
	066 Move X22, [X22+2544]
	067 Move X0, X31
	068 Call Application.get_platform
	069 Compare W0, 0
	070 JumpIfEqual {89}
	071 Move X0, [X20]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X31
	077 Call Application.get_platform
	078 Move W20, W0
	079 Move X0, X19
	080 Move X1, X31
	081 Call Manipulator.get_target, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X20, X0
	084 Move X0, [X22]
	085 Call 0x1C17F10
	086 Move X8, 0x46A000
	087 Move X8, [X8+3352]
	088 Move X2, [X8]
	089 Move X0, X19
	090 Move X1, X31
	091 Call Manipulator.get_target, X0
	092 Move X20, X0
	093 Move X8, 0x426000
	094 Move X8, [X8+176]
	095 Move X21, 0x46A000
	096 Move X0, [X8]
	097 Move X21, [X21+3344]
	098 Call 0x1C17F10
	099 Move X2, [X21]
	100 Move X1, X19
	101 Move X3, X31
	102 Move X21, X0
	103 Call 0x2D0F824, X0, X1, X2
	104 Compare X20, 0
	105 JumpIfEqual {193}
	106 Move X8, 0x426000
	107 Move X8, [X8+136]
	108 Move X23, 0x46A000
	109 Move X0, X20
	110 Move X1, X21
	111 Move X3, [X8]
	112 Move X23, [X23+3360]
	113 Move W2, W31
	114 Call 0x21A2534, X0, X1, X2
	115 Move X0, X19
	116 Move X1, X31
	117 Call Manipulator.get_target, X0
	118 Move X8, [X22]
	119 Move X20, X0
	120 Move X0, X8
	121 Call 0x1C17F10
	122 Move X2, [X23]
	123 Move X1, X19
	124 Move X3, X31
	125 Move X21, X0
	126 Call 0x2D0F824, X0, X1, X2
	127 Compare X20, 0
	128 JumpIfEqual {193}
	129 Move X8, 0x46A000
	130 Move X8, [X8+3320]
	131 Move X22, 0x46A000
	132 Move X23, 0x46A000
	133 Move X0, X20
	134 Move X3, [X8]
	135 Move X22, [X22+3376]
	136 Move X23, [X23+3336]
	137 Move X1, X21
	138 Move W2, W31
	139 Call 0x21A2534, X0, X1, X2
	140 Move X0, X19
	141 Move X1, X31
	142 Call Manipulator.get_target, X0
	143 Move X8, [X22]
	144 Move X20, X0
	145 Move X0, X8
	146 Call 0x1C17F10
	147 Move X2, [X23]
	148 Move X1, X19
	149 Move X3, X31
	150 Move X21, X0
	151 Call 0x2D0F824, X0, X1, X2
	152 Compare X20, 0
	153 JumpIfEqual {193}
	154 Move X8, 0x46A000
	155 Move X8, [X8+3312]
	156 Move X22, 0x46A000
	157 Move X23, 0x46A000
	158 Move X0, X20
	159 Move X3, [X8]
	160 Move X22, [X22+3368]
	161 Move X23, [X23+3328]
	162 Move X1, X21
	163 Move W2, W31
	164 Call 0x21A2534, X0, X1, X2
	165 Move X0, X19
	166 Move X1, X31
	167 Call Manipulator.get_target, X0
	168 Move X8, [X22]
	169 Move X20, X0
	170 Move X0, X8
	171 Call 0x1C17F10
	172 Move X2, [X23]
	173 Move X1, X19
	174 Move X3, X31
	175 Move X21, X0
	176 Call 0x2D0F824, X0, X1, X2
	177 Compare X20, 0
	178 JumpIfEqual {193}
	179 Move X8, 0x469000
	180 Move X8, [X8+3304]
	181 Move X0, X20
	182 Move X1, X21
	183 Move X20, [X31+32]
	184 Move X19, [X31+40]
	185 Move X3, [X8]
	186 Move X22, [X31+16]
	187 Move X21, [X31+24]
	188 Move W2, W31
	189 Move X30, [X31+48]
	190 Move X23, [X31+56]
	191 Call 0x21A2534, X0, X1, X2
	192 Return 
	193 Call 0x1C17F20

Method: System.Void UnregisterCallbacksFromTarget()

Disassembly:
	0x03CFA060 LDR X0, [X26]
	0x03CFA064 BL 0x1C16F10
	0x03CFA068 LDR X2, [X20]
	0x03CFA06C MOV X1, X19
	0x03CFA070 MOV X3, X31
	0x03CFA074 MOV X20, X0
	0x03CFA078 BL 0x2D0E824
	0x03CFA07C LDR X3, [X24]
	0x03CFA080 MOV X0, X19
	0x03CFA084 MOV X1, X20
	0x03CFA088 MOV W2, W31
	0x03CFA08C BL 0x21A18B4
	0x03CFA090 LDR X0, [X23]
	0x03CFA094 BL 0x1C16F10
	0x03CFA098 LDR X2, [X22]
	0x03CFA09C MOV X1, X19
	0x03CFA0A0 MOV X3, X31
	0x03CFA0A4 MOV X20, X0
	0x03CFA0A8 BL 0x2D0E824
	0x03CFA0AC LDR X3, [X21]
	0x03CFA0B0 MOV X0, X19
	0x03CFA0B4 MOV X1, X20
	0x03CFA0B8 LDP X20, X19, [X31 + 0x40]
	0x03CFA0BC LDP X22, X21, [X31 + 0x30]
	0x03CFA0C0 LDP X24, X23, [X31 + 0x20]
	0x03CFA0C4 LDP X26, X25, [X31 + 0x10]
	0x03CFA0C8 MOV W2, W31
	0x03CFA0CC LDR X30, [X31], #0x50
	0x03CFA0D0 B 0x21A18B4
	0x03CFA0D4 LDRB W0, [X0 + 0x4AC]
	0x03CFA0D8 RET
	0x03CFA0DC LDRB W9, [X0 + 0x4AC]
	0x03CFA0E0 AND W8, W1, 0x1
	0x03CFA0E4 CMP W9, W8
	0x03CFA0E8 B.NE 0x3CFA0F0
	0x03CFA0EC RET
	0x03CFA0F0 STRB W8, [X0 + 0x4AC]
	0x03CFA0F4 B 0x3CFA0F8
	0x03CFA0F8 SUB X31, X31, 0x40
	0x03CFA0FC STP X30, X23, [X31 + 0x10]
	0x03CFA100 STP X22, X21, [X31 + 0x20]
	0x03CFA104 STP X20, X19, [X31 + 0x30]
	0x03CFA108 ADRP X20, 0x6ED000
	0x03CFA10C LDRB W8, [X20 + 0x7D2]
	0x03CFA110 MOV X19, X0
	0x03CFA114 TBNZ X8, 0x0, 0x3CFA18C
	0x03CFA118 ADRP X0, 0x468000
	0x03CFA11C LDR X0, [X0 + 0xDC8]
	0x03CFA120 BL 0x1C16CF4
	0x03CFA124 ADRP X0, 0x468000
	0x03CFA128 LDR X0, [X0 + 0xDD0]
	0x03CFA12C BL 0x1C16CF4
	0x03CFA130 ADRP X0, 0x468000
	0x03CFA134 LDR X0, [X0 + 0xA98]
	0x03CFA138 BL 0x1C16CF4
	0x03CFA13C ADRP X0, 0x424000
	0x03CFA140 LDR X0, [X0 + 0x170]
	0x03CFA144 BL 0x1C16CF4
	0x03CFA148 ADRP X0, 0x424000
	0x03CFA14C LDR X0, [X0 + 0x178]
	0x03CFA150 BL 0x1C16CF4
	0x03CFA154 ADRP X0, 0x3FB000
	0x03CFA158 LDR X0, [X0 + 0x278]
	0x03CFA15C BL 0x1C16CF4
	0x03CFA160 ADRP X0, 0x424000
	0x03CFA164 LDR X0, [X0 + 0x188]
	0x03CFA168 BL 0x1C16CF4
	0x03CFA16C ADRP X0, 0x468000
	0x03CFA170 LDR X0, [X0 + 0xDD8]
	0x03CFA174 BL 0x1C16CF4
	0x03CFA178 ADRP X0, 0x468000
	0x03CFA17C LDR X0, [X0 + 0xBF8]
	0x03CFA180 BL 0x1C16CF4
	0x03CFA184 MOVZ W8, 0x1
	0x03CFA188 STRB W8, [X20 + 0x7D2]
	0x03CFA18C STR X31, [X31 + 0x8]
	0x03CFA190 LDRB W8, [X19 + 0x4AC]
	0x03CFA194 CBZ W8, 0x3CFA1A8
	0x03CFA198 LDRB W8, [X19 + 0x4AD]
	0x03CFA19C CBZ W8, 0x3CFA1C0
	0x03CFA1A0 ADD X22, X19, 0x4E0
	0x03CFA1A4 B 0x3CFA1EC
	0x03CFA1A8 ADD X22, X19, 0x4E0
	0x03CFA1AC LDR X0, [X22]
	0x03CFA1B0 CBZ X0, 0x3CFA3D8
	0x03CFA1B4 MOV X1, X31
	0x03CFA1B8 BL 0x3DF6948
	0x03CFA1BC B 0x3CFA3D8
	0x03CFA1C0 ADRP X8, 0x468000
	0x03CFA1C4 LDR X8, [X8 + 0xBF8]
	0x03CFA1C8 MOV X1, X31
	0x03CFA1CC LDR X0, [X8]
	0x03CFA1D0 BL 0x3C30760
	0x03CFA1D4 AND X1, X0, 0x0
	0x03CFA1D8 MOV X0, X19
	0x03CFA1DC MOV X2, X31
	0x03CFA1E0 BL 0x3DF3018
	0x03CFA1E4 ADD X22, X19, 0x4E0
	0x03CFA1E8 CBZ X0, 0x3CFA1AC
	0x03CFA1EC ADRP X23, 0x468000
	0x03CFA1F0 LDR X20, [X22]
	0x03CFA1F4 LDR X23, [X23 + 0xA98]
	0x03CFA1F8 CBNZ X20, 0x3CFA2D4
	0x03CFA1FC ADRP X8, 0x424000
	0x03CFA200 LDR X8, [X8 + 0x188]
	0x03CFA204 LDR X0, [X8]
	0x03CFA208 BL 0x1C16F10
	0x03CFA20C MOV X1, X31
	0x03CFA210 MOV X20, X0
	0x03CFA214 BL 0x3D682EC
	0x03CFA218 LDR X0, [X23]
	0x03CFA21C LDR W8, [X0 + 0xE0]
	0x03CFA220 CBNZ W8, 0x3CFA228
	0x03CFA224 BL 0x1C16DFC
	0x03CFA228 CBZ X20, 0x3CFA3EC
	0x03CFA22C LDR X8, [X23]
	0x03CFA230 MOV X0, X20
	0x03CFA234 MOV X2, X31
	0x03CFA238 LDR X8, [X8 + 0xB8]
	0x03CFA23C LDR X1, [X8 + 0x60]
	0x03CFA240 BL 0x3DEF278
	0x03CFA244 STR X20, [X22]
	0x03CFA248 LDR X8, [X23]
	0x03CFA24C MOV X0, X20
	0x03CFA250 MOV X2, X31
	0x03CFA254 LDR X8, [X8 + 0xB8]
	0x03CFA258 LDR X1, [X8 + 0x60]
	0x03CFA25C BL 0x3DF1C70
	0x03CFA260 ADRP X8, 0x424000
	0x03CFA264 LDR X20, [X22]
	0x03CFA268 LDR X8, [X8 + 0x170]
	0x03CFA26C LDR X0, [X8]
	0x03CFA270 BL 0x1C16F10
	0x03CFA274 ADRP X8, 0x468000
	0x03CFA278 LDR X8, [X8 + 0xDD0]
	0x03CFA27C MOV X1, X19
	0x03CFA280 MOV X3, X31
	0x03CFA284 MOV X21, X0
	0x03CFA288 LDR X2, [X8]
	0x03CFA28C BL 0x2D0E824
	0x03CFA290 ADRP X8, 0x424000
	0x03CFA294 LDR X8, [X8 + 0x178]
	0x03CFA298 MOV X0, X20
	0x03CFA29C MOV X1, X21
	0x03CFA2A0 LDR X2, [X8]
	0x03CFA2A4 BL 0x21EF268
	0x03CFA2A8 LDR X0, [X19 + 0x4E0]
	0x03CFA2AC CBZ X0, 0x3CFA3EC
	0x03CFA2B0 ADRP X8, 0x468000
	0x03CFA2B4 LDR X8, [X8 + 0xDD8]
	0x03CFA2B8 MOVZ W1, 0x1
	0x03CFA2BC MOVZ W21, 0x1
	0x03CFA2C0 LDR X2, [X8]
	0x03CFA2C4 BL 0x26D9370
	0x03CFA2C8 LDR X20, [X22]
	0x03CFA2CC CBZ X20, 0x3CFA3EC
	0x03CFA2D0 STRB W21, [X20 + 0x20]
	0x03CFA2D4 LDR X0, [X23]
	0x03CFA2D8 LDR W8, [X0 + 0xE0]
	0x03CFA2DC CBNZ W8, 0x3CFA2E4
	0x03CFA2E0 BL 0x1C16DFC
	0x03CFA2E4 CBZ X20, 0x3CFA3EC
	0x03CFA2E8 LDR X8, [X23]
	0x03CFA2EC LDR X9, [X19 + 0x4F0]
	0x03CFA2F0 MOV X0, X20
	0x03CFA2F4 MOV X3, X31
	0x03CFA2F8 LDR X8, [X8 + 0xB8]
	0x03CFA2FC CMP X9, 0x0
	0x03CFA300 CSET W2, NE
	0x03CFA304 LDR X1, [X8 + 0x70]
	0x03CFA308 BL 0x3DF1E80
	0x03CFA30C LDR X0, [X19 + 0x4E0]
	0x03CFA310 CBZ X0, 0x3CFA3EC
	0x03CFA314 LDR X8, [X23]
	0x03CFA318 LDRB W2, [X19 + 0x4AD]
	0x03CFA31C MOV X3, X31
	0x03CFA320 LDR X8, [X8 + 0xB8]
	0x03CFA324 LDR X1, [X8 + 0x68]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x6EE000
	008 Move X20, 0x3FA000
	009 Move W8, [X21+1991]
	010 Move X20, [X20+2416]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {60}
	016 Move X0, 0x3FA000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move X0, 0x469000
	020 Move X0, [X0+3384]
	021 Call 0x1C17CF4
	022 Move X0, 0x469000
	023 Move X0, [X0+3392]
	024 Call 0x1C17CF4
	025 Move X0, 0x469000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move X0, 0x469000
	029 Move X0, [X0+2600]
	030 Call 0x1C17CF4
	031 Move X0, 0x469000
	032 Move X0, [X0+3328]
	033 Call 0x1C17CF4
	034 Move X0, 0x469000
	035 Move X0, [X0+3336]
	036 Call 0x1C17CF4
	037 Move X0, 0x469000
	038 Move X0, [X0+3344]
	039 Call 0x1C17CF4
	040 Move X0, 0x469000
	041 Move X0, [X0+3352]
	042 Call 0x1C17CF4
	043 Move X0, 0x469000
	044 Move X0, [X0+3360]
	045 Call 0x1C17CF4
	046 Move X0, 0x469000
	047 Move X0, [X0+2544]
	048 Call 0x1C17CF4
	049 Move X0, 0x469000
	050 Move X0, [X0+3368]
	051 Call 0x1C17CF4
	052 Move X0, 0x469000
	053 Move X0, [X0+3376]
	054 Call 0x1C17CF4
	055 Move X0, 0x425000
	056 Move X0, [X0+176]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X21+1991], W8
	060 Move X0, [X20]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X22, 0x469000
	066 Move X22, [X22+2544]
	067 Move X0, X31
	068 Call Application.get_platform
	069 Compare W0, 0
	070 JumpIfEqual {89}
	071 Move X0, [X20]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X31
	077 Call Application.get_platform
	078 Move W20, W0
	079 Move X0, X19
	080 Move X1, X31
	081 Call Manipulator.get_target, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X20, X0
	084 Move X0, [X22]
	085 Call 0x1C17F10
	086 Move X8, 0x469000
	087 Move X8, [X8+3352]
	088 Move X2, [X8]
	089 Move X0, X19
	090 Move X1, X31
	091 Call Manipulator.get_target, X0
	092 Move X20, X0
	093 Move X8, 0x425000
	094 Move X8, [X8+176]
	095 Move X21, 0x469000
	096 Move X0, [X8]
	097 Move X21, [X21+3344]
	098 Call 0x1C17F10
	099 Move X2, [X21]
	100 Move X1, X19
	101 Move X3, X31
	102 Move X21, X0
	103 Call 0x2D0F824, X0, X1, X2
	104 Compare X20, 0
	105 JumpIfEqual {193}
	106 Move X8, 0x469000
	107 Move X8, [X8+2584]
	108 Move X23, 0x469000
	109 Move X0, X20
	110 Move X1, X21
	111 Move X3, [X8]
	112 Move X23, [X23+3360]
	113 Move W2, W31
	114 Call 0x21A28B4, X0, X1, X2
	115 Move X0, X19
	116 Move X1, X31
	117 Call Manipulator.get_target, X0
	118 Move X8, [X22]
	119 Move X20, X0
	120 Move X0, X8
	121 Call 0x1C17F10
	122 Move X2, [X23]
	123 Move X1, X19
	124 Move X3, X31
	125 Move X21, X0
	126 Call 0x2D0F824, X0, X1, X2
	127 Compare X20, 0
	128 JumpIfEqual {193}
	129 Move X8, 0x469000
	130 Move X8, [X8+2600]
	131 Move X22, 0x469000
	132 Move X23, 0x469000
	133 Move X0, X20
	134 Move X3, [X8]
	135 Move X22, [X22+3376]
	136 Move X23, [X23+3336]
	137 Move X1, X21
	138 Move W2, W31
	139 Call 0x21A28B4, X0, X1, X2
	140 Move X0, X19
	141 Move X1, X31
	142 Call Manipulator.get_target, X0
	143 Move X8, [X22]
	144 Move X20, X0
	145 Move X0, X8
	146 Call 0x1C17F10
	147 Move X2, [X23]
	148 Move X1, X19
	149 Move X3, X31
	150 Move X21, X0
	151 Call 0x2D0F824, X0, X1, X2
	152 Compare X20, 0
	153 JumpIfEqual {193}
	154 Move X8, 0x469000
	155 Move X8, [X8+3392]
	156 Move X22, 0x469000
	157 Move X23, 0x469000
	158 Move X0, X20
	159 Move X3, [X8]
	160 Move X22, [X22+3368]
	161 Move X23, [X23+3328]
	162 Move X1, X21
	163 Move W2, W31
	164 Call 0x21A28B4, X0, X1, X2
	165 Move X0, X19
	166 Move X1, X31
	167 Call Manipulator.get_target, X0
	168 Move X8, [X22]
	169 Move X20, X0
	170 Move X0, X8
	171 Call 0x1C17F10
	172 Move X2, [X23]
	173 Move X1, X19
	174 Move X3, X31
	175 Move X21, X0
	176 Call 0x2D0F824, X0, X1, X2
	177 Compare X20, 0
	178 JumpIfEqual {193}
	179 Move X8, 0x469000
	180 Move X8, [X8+3384]
	181 Move X0, X20
	182 Move X1, X21
	183 Move X20, [X31+32]
	184 Move X19, [X31+40]
	185 Move X3, [X8]
	186 Move X22, [X31+16]
	187 Move X21, [X31+24]
	188 Move W2, W31
	189 Move X30, [X31+48]
	190 Move X23, [X31+56]
	191 Call 0x21A28B4, X0, X1, X2
	192 Return 
	193 Call 0x1C17F20

Method: System.Void OnMouseUpDownEvent(UnityEngine.UIElements.IMouseEvent evt)

Disassembly:
	0x03CFA328 BL 0x3DF1E80
	0x03CFA32C LDRB W8, [X19 + 0x4AD]
	0x03CFA330 LDR X20, [X19 + 0x4E0]
	0x03CFA334 CBZ W8, 0x3CFA380
	0x03CFA338 CBZ X20, 0x3CFA3EC
	0x03CFA33C ADRP X8, 0x3FB000
	0x03CFA340 LDR X8, [X8 + 0x278]
	0x03CFA344 ADRP X9, 0x468000
	0x03CFA348 MOV X0, X20
	0x03CFA34C LDR X8, [X8]
	0x03CFA350 LDR X8, [X8 + 0xB8]
	0x03CFA354 LDR X9, [X9 + 0xDC8]
	0x03CFA358 LDR X1, [X8]
	0x03CFA35C LDR X2, [X9]
	0x03CFA360 BL 0x289A20C
	0x03CFA364 LDR X8, [X19 + 0x378]
	0x03CFA368 ADD X0, X31, 0x8
	0x03CFA36C MOV X2, X31
	0x03CFA370 STR X8, [X31 + 0x8]
	0x03CFA374 LDR X1, [X22]
	0x03CFA378 BL 0x3DF891C
	0x03CFA37C B 0x3CFA3D0
	0x03CFA380 LDR X0, [X23]
	0x03CFA384 LDR W8, [X0 + 0xE0]
	0x03CFA388 CBNZ W8, 0x3CFA390
	0x03CFA38C BL 0x1C16DFC
	0x03CFA390 CBZ X20, 0x3CFA3EC
	0x03CFA394 LDR X8, [X23]
	0x03CFA398 ADRP X9, 0x468000
	0x03CFA39C MOV X0, X20
	0x03CFA3A0 LDR X8, [X8 + 0xB8]
	0x03CFA3A4 LDR X9, [X9 + 0xDC8]
	0x03CFA3A8 LDR X1, [X8]
	0x03CFA3AC LDR X2, [X9]
	0x03CFA3B0 BL 0x289A20C
	0x03CFA3B4 LDR X8, [X19 + 0x378]
	0x03CFA3B8 ADD X0, X31, 0x8
	0x03CFA3BC MOV W1, W31
	0x03CFA3C0 MOV X3, X31
	0x03CFA3C4 STR X8, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6EE000
	006 Move W8, [X21+1992]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x426000
	014 Move X0, [X0+552]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1992], W8
	018 Move X0, X19
	019 Move X1, X20
	020 Move X2, X31
	021 Call MouseManipulator.CanStartManipulation, X0, X1
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {36}
	026 Compare X20, 0
	027 JumpIfEqual {35}
	028 Move X8, 0x426000
	029 Move X8, [X8+552]
	030 Move X9, [X20]
	031 Move X8, [X8]
	032 Move W11, [X9+304]
	033 Move W10, [X8+304]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X1, X31
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Move X9, [X9+200]
	042 Add X9, X9, X10
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]

Method: System.Void OnMouseDownEventOSX(UnityEngine.UIElements.MouseDownEvent evt)

Disassembly:
	0x03CFA464 STRB W21, [X19 + 0x4AD]
	0x03CFA468 ADRP X22, 0x468000
	0x03CFA46C LDR X22, [X22 + 0xA98]
	0x03CFA470 LDR X0, [X22]
	0x03CFA474 LDR W8, [X0 + 0xE0]
	0x03CFA478 CBNZ W8, 0x3CFA484
	0x03CFA47C BL 0x1C16DFC
	0x03CFA480 LDR X0, [X22]
	0x03CFA484 LDR X8, [X0 + 0xB8]
	0x03CFA488 AND W2, W20, 0x1
	0x03CFA48C MOV X0, X19
	0x03CFA490 MOV X3, X31
	0x03CFA494 LDR X1, [X8 + 0x78]
	0x03CFA498 BL 0x3DF1E80
	0x03CFA49C LDRB W8, [X19 + 0x4AD]
	0x03CFA4A0 LDR X0, [X19 + 0x4D8]
	0x03CFA4A4 CBZ W8, 0x3CFA5F4
	0x03CFA4A8 CBNZ X0, 0x3CFA640
	0x03CFA4AC ADRP X21, 0x468000
	0x03CFA4B0 LDR X21, [X21 + 0xC88]
	0x03CFA4B4 LDR X0, [X21]
	0x03CFA4B8 BL 0x1C16F10
	0x03CFA4BC MOV X1, X31
	0x03CFA4C0 MOV X20, X0
	0x03CFA4C4 BL 0x3D0EB9C
	0x03CFA4C8 LDR X0, [X22]
	0x03CFA4CC LDR W8, [X0 + 0xE0]
	0x03CFA4D0 CBNZ W8, 0x3CFA4D8
	0x03CFA4D4 BL 0x1C16DFC
	0x03CFA4D8 CBZ X20, 0x3CFA650
	0x03CFA4DC LDR X8, [X22]
	0x03CFA4E0 MOV X0, X20
	0x03CFA4E4 MOV X2, X31
	0x03CFA4E8 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Manipulator.get_target, X0
	008 Compare X0, 0
	009 JumpIfEqual {48}
	010 Move X8, [X0+928]
	011 Compare X8, 0
	012 JumpIfEqual {28}
	013 Move X8, [X8+96]
	014 Compare X8, 0
	015 JumpIfEqual {28}
	016 Move X0, X20
	017 Move X1, X31
	018 Call Manipulator.get_target, X0
	019 Compare X0, 0
	020 JumpIfEqual {48}
	021 Move X8, [X0+928]
	022 Compare X8, 0
	023 JumpIfEqual {48}
	024 Move X8, [X8+96]
	025 Compare X8, 0
	026 JumpIfEqual {48}
	027 Move [X8+16], W31
	028 Compare X19, 0
	029 JumpIfEqual {48}
	030 Move X0, X19
	031 Move X1, X31
	032 Call EventBase.get_isDefaultPrevented, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {41}
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return 
	041 Move X0, X20
	042 Move X1, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Call ContextualMenuManipulator.OnMouseUpDownEvent, X0, X1
	047 Return 
	048 Call 0x1C17F20

Method: System.Void OnMouseUpEventOSX(UnityEngine.UIElements.MouseUpEvent evt)

Disassembly:
	0x03CFA4EC LDR X1, [X8 + 0x58]
	0x03CFA4F0 BL 0x3DEF278
	0x03CFA4F4 LDR X1, [X19 + 0x4B0]
	0x03CFA4F8 MOV X0, X20
	0x03CFA4FC MOV X2, X31
	0x03CFA500 BL 0x3D0E5D8
	0x03CFA504 STR X20, [X19 + 0x4D8]
	0x03CFA508 LDR X0, [X21]
	0x03CFA50C LDR W8, [X0 + 0xE0]
	0x03CFA510 CBNZ W8, 0x3CFA51C
	0x03CFA514 BL 0x1C16DFC
	0x03CFA518 LDR X0, [X21]
	0x03CFA51C ADRP X8, 0x422000
	0x03CFA520 LDR X8, [X8 + 0x830]
	0x03CFA524 LDR X9, [X0 + 0xB8]
	0x03CFA528 LDR X8, [X8]
	0x03CFA52C LDR X21, [X9 + 0x8]
	0x03CFA530 LDR W10, [X8 + 0xE0]
	0x03CFA534 CBNZ W10, 0x3CFA540
	0x03CFA538 MOV X0, X8
	0x03CFA53C BL 0x1C16DFC
	0x03CFA540 ADRP X8, 0x468000
	0x03CFA544 LDR X8, [X8 + 0xB78]
	0x03CFA548 MOV X0, X20
	0x03CFA54C MOV X1, X31
	0x03CFA550 MOV X2, X21
	0x03CFA554 LDR X3, [X8]
	0x03CFA558 BL 0x22A17C4
	0x03CFA55C CBZ X0, 0x3CFA650
	0x03CFA560 LDR X20, [X0 + 0x450]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Manipulator.get_target, X0
	008 Compare X0, 0
	009 JumpIfEqual {41}
	010 Move X8, [X0+928]
	011 Compare X8, 0
	012 JumpIfEqual {34}
	013 Move X8, [X8+96]
	014 Compare X8, 0
	015 JumpIfEqual {34}
	016 Move X0, X20
	017 Move X1, X31
	018 Call Manipulator.get_target, X0
	019 Compare X0, 0
	020 JumpIfEqual {41}
	021 Move X8, [X0+928]
	022 Compare X8, 0
	023 JumpIfEqual {41}
	024 Move X8, [X8+96]
	025 Compare X8, 0
	026 JumpIfEqual {41}
	027 Move W8, [X8+16]
	028 Compare W8, 0
	029 JumpIfEqual {34}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return 
	034 Move X0, X20
	035 Move X1, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Call ContextualMenuManipulator.OnMouseUpDownEvent, X0, X1
	040 Return 
	041 Call 0x1C17F20

Method: System.Void OnKeyUpEvent(UnityEngine.UIElements.KeyUpEvent evt)

Disassembly:
	0x03CFA564 CBZ X20, 0x3CFA650
	0x03CFA568 LDRB W8, [X20 + 0x60]
	0x03CFA56C CMP W8, 0x1
	0x03CFA570 B.EQ 0x3CFA59C
	0x03CFA574 LDR X8, [X20]
	0x03CFA578 MOV X0, X20
	0x03CFA57C LDP X9, X1, [X8 + 0x198]
	0x03CFA580 BLR X9
	0x03CFA584 LDR X8, [X20]
	0x03CFA588 MOVZ W9, 0x1
	0x03CFA58C STRB W9, [X20 + 0x60]
	0x03CFA590 MOV X0, X20
	0x03CFA594 LDP X9, X1, [X8 + 0x188]
	0x03CFA598 BLR X9
	0x03CFA59C LDR X0, [X19 + 0x4D8]
	0x03CFA5A0 CBZ X0, 0x3CFA650
	0x03CFA5A4 LDR X8, [X22]
	0x03CFA5A8 MOV X2, X31
	0x03CFA5AC LDR X8, [X8 + 0xB8]
	0x03CFA5B0 LDR X1, [X8 + 0x58]
	0x03CFA5B4 BL 0x3DF1C70
	0x03CFA5B8 LDR X1, [X19 + 0x4D8]
	0x03CFA5BC CBZ X1, 0x3CFA650
	0x03CFA5C0 MOVZ W8, 0x1
	0x03CFA5C4 STR W8, [X1 + 0x24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6EE000
	006 Move W8, [X21+1993]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x469000
	014 Move X0, [X0+3400]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1993], W8
	018 Compare X19, 0
	019 JumpIfEqual {35}
	020 Move W8, [X19+140]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X0, X20
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Call ContextualMenuManipulator.DoDisplayMenu, X0, X1
	029 Return 
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Call 0x1C17F20

Method: System.Void DoDisplayMenu(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03CFA3C8 LDR X2, [X22]
	0x03CFA3CC BL 0x3DF89E4
	0x03CFA3D0 MOV X0, X19
	0x03CFA3D4 BL 0x3CFAC10
	0x03CFA3D8 LDP X20, X19, [X31 + 0x30]
	0x03CFA3DC LDP X22, X21, [X31 + 0x20]
	0x03CFA3E0 LDP X30, X23, [X31 + 0x10]
	0x03CFA3E4 ADD X31, X31, 0x40
	0x03CFA3E8 RET
	0x03CFA3EC BL 0x1C16F20
	0x03CFA3F0 LDRB W0, [X0 + 0x4AD]
	0x03CFA3F4 RET
	0x03CFA3F8 STR X30, [X31 - 0x30]!
	0x03CFA3FC STP X22, X21, [X31 + 0x10]
	0x03CFA400 STP X20, X19, [X31 + 0x20]
	0x03CFA404 ADRP X22, 0x6ED000
	0x03CFA408 LDRB W8, [X22 + 0x7D1]
	0x03CFA40C MOV W20, W1
	0x03CFA410 MOV X19, X0
	0x03CFA414 AND W21, W1, 0x1
	0x03CFA418 TBNZ X8, 0x0, 0x3CFA454
	0x03CFA41C ADRP X0, 0x468000
	0x03CFA420 LDR X0, [X0 + 0xA98]
	0x03CFA424 BL 0x1C16CF4
	0x03CFA428 ADRP X0, 0x468000
	0x03CFA42C LDR X0, [X0 + 0xC88]
	0x03CFA430 BL 0x1C16CF4
	0x03CFA434 ADRP X0, 0x468000
	0x03CFA438 LDR X0, [X0 + 0xB78]
	0x03CFA43C BL 0x1C16CF4
	0x03CFA440 ADRP X0, 0x422000
	0x03CFA444 LDR X0, [X0 + 0x830]
	0x03CFA448 BL 0x1C16CF4
	0x03CFA44C MOVZ W8, 0x1
	0x03CFA450 STRB W8, [X22 + 0x7D1]
	0x03CFA454 STR X31, [X31 + 0x8]
	0x03CFA458 LDRB W8, [X19 + 0x4AD]
	0x03CFA45C CMP W8, W21
	0x03CFA460 B.EQ 0x3CFA640

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X1
	006 Move X1, X31
	007 Move X20, X0
	008 Call Manipulator.get_target, X0
	009 Compare X0, 0
	010 JumpIfEqual {53}
	011 Move X8, [X0+928]
	012 Compare X8, 0
	013 JumpIfEqual {48}
	014 Move X8, [X8+96]
	015 Compare X8, 0
	016 JumpIfEqual {48}
	017 Move X0, X20
	018 Move X1, X31
	019 Call Manipulator.get_target, X0
	020 Compare X0, 0
	021 JumpIfEqual {53}
	022 Move X8, [X0+928]
	023 Compare X8, 0
	024 JumpIfEqual {53}
	025 Move X21, [X8+96]
	026 Move X0, X20
	027 Move X1, X31
	028 Call Manipulator.get_target, X0
	029 Compare X21, 0
	030 JumpIfEqual {53}
	031 Move X2, X0
	032 Move X0, X21
	033 Move X1, X19
	034 Call ContextualMenuManager.DisplayMenu, X0, X1, X2
	035 Compare X19, 0
	036 JumpIfEqual {53}
	037 Move X0, X19
	038 Move X1, X31
	039 Call EventBase.StopPropagation, X0
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X1, X31
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call EventBase.PreventDefault, X0
	047 Return 
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 
	053 Call 0x1C17F20

Method: System.Void OnContextualMenuEvent(UnityEngine.UIElements.ContextualMenuPopulateEvent evt)

Disassembly:
	0x03CFA5C8 LDR X8, [X19 + 0x378]
	0x03CFA5CC ADD X0, X31, 0x8
	0x03CFA5D0 MOV X2, X31
	0x03CFA5D4 STR X8, [X31 + 0x8]
	0x03CFA5D8 BL 0x3DF891C
	0x03CFA5DC LDR X0, [X19 + 0x4D8]
	0x03CFA5E0 CBZ X0, 0x3CFA650

ISIL:
	001 Move X8, [X0+48]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X3, [X8+24]
	005 Move X0, [X8+64]
	006 Move X2, [X8+40]
	007 CallNoReturn X3
	008 Return 

