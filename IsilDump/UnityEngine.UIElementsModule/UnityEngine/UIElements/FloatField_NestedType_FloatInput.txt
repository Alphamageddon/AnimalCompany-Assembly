Type: UnityEngine.UIElements.FloatField/FloatInput

Method: UnityEngine.UIElements.FloatField get_parentFloatField()

Disassembly:
	0x03D0F258 LDR X0, [X8]
	0x03D0F25C LDR X1, [X24]
	0x03D0F260 BL 0x321B938
	0x03D0F264 LDR X8, [X19]
	0x03D0F268 MOV X2, X31
	0x03D0F26C LDR X8, [X8 + 0xB8]
	0x03D0F270 STR X0, [X8 + 0x18]
	0x03D0F274 LDR X0, [X8]
	0x03D0F278 LDR X1, [X23]
	0x03D0F27C BL 0x321B938
	0x03D0F280 LDR X8, [X19]
	0x03D0F284 MOV X2, X31
	0x03D0F288 LDR X8, [X8 + 0xB8]
	0x03D0F28C STR X0, [X8 + 0x20]
	0x03D0F290 LDR X0, [X8]
	0x03D0F294 LDR X1, [X22]
	0x03D0F298 BL 0x321B938
	0x03D0F29C LDR X8, [X19]
	0x03D0F2A0 MOV X2, X31
	0x03D0F2A4 LDR X8, [X8 + 0xB8]
	0x03D0F2A8 STR X0, [X8 + 0x28]
	0x03D0F2AC LDR X0, [X8 + 0x8]
	0x03D0F2B0 LDR X1, [X21]
	0x03D0F2B4 BL 0x321B938
	0x03D0F2B8 LDR X8, [X19]
	0x03D0F2BC MOV X2, X31
	0x03D0F2C0 LDR X8, [X8 + 0xB8]
	0x03D0F2C4 STR X0, [X8 + 0x30]
	0x03D0F2C8 LDR X0, [X8]
	0x03D0F2CC LDR X1, [X20]
	0x03D0F2D0 BL 0x321B938
	0x03D0F2D4 LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6D9000
	005 Move W8, [X20+2208]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x455000
	012 Move X0, [X0+2680]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2208], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Call VisualElement.get_parent, X0
	019 Compare X0, 0
	020 JumpIfEqual {32}
	021 Move X9, 0x455000
	022 Move X9, [X9+2680]
	023 Move X8, [X0]
	024 Move X1, [X9]
	025 Move W10, [X8+304]
	026 Move W9, [X1+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, [X8+200]
	029 Add X8, X8, X9
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0
	036 Call 0x1C181E0

Method: System.Void .ctor()

Disassembly:
	0x03D0EFE4 LDR X8, [X0 + 0xB8]
	0x03D0EFE8 LDR W9, [X0 + 0xE0]
	0x03D0EFEC LDR W25, [X8 + 0x40]
	0x03D0EFF0 CBNZ W9, 0x3D0F000
	0x03D0EFF4 BL 0x1C16DFC
	0x03D0EFF8 LDR X8, [X23]
	0x03D0EFFC LDR X8, [X8 + 0xB8]
	0x03D0F000 LDR X20, [X8 + 0x38]
	0x03D0F004 CMP W24, W25
	0x03D0F008 B.GT 0x3D0F044
	0x03D0F00C ADD X0, X31, 0x8
	0x03D0F010 MOV X1, X31
	0x03D0F014 BL 0x337B6E0
	0x03D0F018 MOV X1, X0
	0x03D0F01C MOV X0, X20
	0x03D0F020 MOV X2, X31
	0x03D0F024 BL 0x321B938
	0x03D0F028 MOV X1, X0
	0x03D0F02C MOV X0, X19
	0x03D0F030 MOV X2, X31
	0x03D0F034 BL 0x3DF1B54
	0x03D0F038 LDR W8, [X31 + 0x8]
	0x03D0F03C ADD W24, W8, 0x1
	0x03D0F040 B 0x3D0EFB4
	0x03D0F044 LDR X1, [X22]
	0x03D0F048 MOV X0, X20
	0x03D0F04C MOV X2, X31
	0x03D0F050 BL 0x321B938
	0x03D0F054 MOV X1, X0
	0x03D0F058 MOV X0, X19
	0x03D0F05C MOV X2, X31
	0x03D0F060 BL 0x3DF1B54
	0x03D0F064 LDR X8, [X23]
	0x03D0F068 LDR X0, [X21]
	0x03D0F06C LDR X20, [X19 + 0x3D8]
	0x03D0F070 LDR X8, [X8 + 0xB8]
	0x03D0F074 LDR W9, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6DA000
	007 Move X22, 0x456000
	008 Move X20, 0x452000
	009 Move W8, [X21+2209]
	010 Move X22, [X22+2712]
	011 Call 0x3EB29F4
	012 Return 
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x455000
	019 Move X0, [X0+2712]
	020 Call 0x1C17CF4
	021 Move X0, 0x455000
	022 Move X0, [X0+2720]
	023 Call 0x1C17CF4
	024 Move X0, 0x451000
	025 Move X0, [X0+1960]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2209], W8
	029 Move X1, [X22]
	030 Move X0, X19
	031 Call TextValueInput<Single>..ctor, X0
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X8, [X0+184]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X8, [X8+24]
	042 Move [X19+1024], X8
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+48]
	046 Return 

Method: System.String get_allowedCharacters()

Disassembly:
	0x03D0F2D8 LDP X20, X19, [X31 + 0x50]
	0x03D0F2DC LDP X22, X21, [X31 + 0x40]
	0x03D0F2E0 LDP X24, X23, [X31 + 0x30]
	0x03D0F2E4 LDR X8, [X8 + 0xB8]
	0x03D0F2E8 LDP X26, X25, [X31 + 0x20]
	0x03D0F2EC LDP X28, X27, [X31 + 0x10]
	0x03D0F2F0 MOVZ W9, 0x4
	0x03D0F2F4 STR X0, [X8 + 0x38]
	0x03D0F2F8 STR W9, [X8 + 0x40]
	0x03D0F2FC LDR X30, [X31], #0x60
	0x03D0F300 RET
	0x03D0F304 STR X30, [X31 - 0x20]!
	0x03D0F308 STP X20, X19, [X31 + 0x10]
	0x03D0F30C MOV X20, X0
	0x03D0F310 LDR X0, [X0 + 0x3D8]
	0x03D0F314 CBZ X0, 0x3D0F350
	0x03D0F318 LDR X8, [X0]
	0x03D0F31C MOV X19, X1
	0x03D0F320 LDR X9, [X8 + 0x7E8]
	0x03D0F324 LDR X1, [X8 + 0x7F0]
	0x03D0F328 BLR X9
	0x03D0F32C AND W1, W0, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6D9000
	005 Move X19, 0x451000
	006 Move W8, [X20+2210]
	007 Move X19, [X19+1960]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x451000
	013 Move X0, [X0+1960]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2210], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, System.Single startValue)

Disassembly:
	0x03D0F330 MOV X0, X20
	0x03D0F334 BL 0x3D0E708
	0x03D0F338 CBZ X19, 0x3D0F350
	0x03D0F33C MOV X0, X19
	0x03D0F340 LDP X20, X19, [X31 + 0x10]
	0x03D0F344 MOV X1, X31
	0x03D0F348 LDR X30, [X31], #0x20
	0x03D0F34C B 0x3D9D950
	0x03D0F350 BL 0x1C16F20
	0x03D0F354 STP X30, X21, [X31 - 0x20]!
	0x03D0F358 STP X20, X19, [X31 + 0x10]
	0x03D0F35C ADRP X20, 0x6D8000
	0x03D0F360 ADRP X21, 0x454000
	0x03D0F364 LDRB W8, [X20 + 0x8AC]
	0x03D0F368 LDR X21, [X21 + 0xB58]
	0x03D0F36C MOV X19, X0
	0x03D0F370 TBNZ X8, 0x0, 0x3D0F388
	0x03D0F374 ADRP X0, 0x454000
	0x03D0F378 LDR X0, [X0 + 0xB58]
	0x03D0F37C BL 0x1C16CF4
	0x03D0F380 MOVZ W8, 0x1
	0x03D0F384 STRB W8, [X20 + 0x8AC]
	0x03D0F388 LDR X1, [X21]
	0x03D0F38C MOV X0, X19
	0x03D0F390 LDP X20, X19, [X31 + 0x10]
	0x03D0F394 LDP X30, X21, [X31], #0x20
	0x03D0F398 B 0x2736468
	0x03D0F39C SUB X31, X31, 0xB0
	0x03D0F3A0 STP X30, X23, [X31 + 0x80]
	0x03D0F3A4 STP X22, X21, [X31 + 0x90]
	0x03D0F3A8 STP X20, X19, [X31 + 0xA0]
	0x03D0F3AC ADRP X23, 0x6D8000
	0x03D0F3B0 LDRB W8, [X23 + 0x8AD]
	0x03D0F3B4 MOV X20, X3
	0x03D0F3B8 MOV X19, X2
	0x03D0F3BC MOV X22, X1
	0x03D0F3C0 MOV X21, X0
	0x03D0F3C4 TBNZ X8, 0x0, 0x3D0F3DC
	0x03D0F3C8 ADRP X0, 0x453000
	0x03D0F3CC LDR X0, [X0 + 0xC88]
	0x03D0F3D0 BL 0x1C16CF4
	0x03D0F3D4 MOVZ W8, 0x1
	0x03D0F3D8 STRB W8, [X23 + 0x8AD]
	0x03D0F3DC LDP V1, V0, [X20]
	0x03D0F3E0 ADD X3, X31, 0x40
	0x03D0F3E4 MOV X0, X21
	0x03D0F3E8 MOV X1, X22
	0x03D0F3EC MOV X2, X19
	0x03D0F3F0 MOV X4, X31
	0x03D0F3F4 STP V1, V0, [X31 + 0x40]
	0x03D0F3F8 BL 0x3CEA08C
	0x03D0F3FC CBZ X22, 0x3D0F4B0
	0x03D0F400 ADRP X8, 0x453000
	0x03D0F404 LDR X8, [X8 + 0xC88]
	0x03D0F408 LDR X9, [X22]
	0x03D0F40C LDR X8, [X8]
	0x03D0F410 LDRB W11, [X9 + 0x130]
	0x03D0F414 LDRB W10, [X8 + 0x130]
	0x03D0F418 CMP W11, W10
	0x03D0F41C B.CC 0x3D0F4B0
	0x03D0F420 LDR X9, [X9 + 0xC8]
	0x03D0F424 ADD X9, X9, X10, 0x3, LSL
	0x03D0F428 LDUR X9, [X9 - 0x8]
	0x03D0F42C CMP X9, X8
	0x03D0F430 CSEL X22, X22, X31, EQ
	0x03D0F434 CBZ X22, 0x3D0F4B0
	0x03D0F438 LDP V0, V1, [X20]
	0x03D0F43C LDR X0, [X21 + 0x78]
	0x03D0F440 STP V0, V1, [X31 + 0x20]
	0x03D0F444 CBZ X0, 0x3D0F4C4
	0x03D0F448 LDR X8, [X0]
	0x03D0F44C LDP V0, V1, [X31 + 0x20]
	0x03D0F450 ADD X2, X31, 0x60
	0x03D0F454 MOV X1, X19
	0x03D0F458 LDR X9, [X8 + 0x178]
	0x03D0F45C STP V0, V1, [X31 + 0x60]
	0x03D0F460 LDR X3, [X8 + 0x180]
	0x03D0F464 BLR X9
	0x03D0F468 MOV X1, X0
	0x03D0F46C MOV X0, X22
	0x03D0F470 BL 0x3D0E5D8
	0x03D0F474 LDP V0, V1, [X20]
	0x03D0F478 LDR X0, [X21 + 0x80]
	0x03D0F47C STP V0, V1, [X31]
	0x03D0F480 CBZ X0, 0x3D0F4C4
	0x03D0F484 LDR X8, [X0]
	0x03D0F488 LDP V0, V1, [X31]
	0x03D0F48C ADD X2, X31, 0x60
	0x03D0F490 MOV X1, X19
	0x03D0F494 LDR X9, [X8 + 0x178]
	0x03D0F498 STP V0, V1, [X31 + 0x60]
	0x03D0F49C LDR X3, [X8 + 0x180]
	0x03D0F4A0 BLR X9
	0x03D0F4A4 AND W1, W0, 0x1
	0x03D0F4A8 MOV X0, X22
	0x03D0F4AC BL 0x3D0E914
	0x03D0F4B0 LDP X20, X19, [X31 + 0xA0]
	0x03D0F4B4 LDP X22, X21, [X31 + 0x90]
	0x03D0F4B8 LDP X30, X23, [X31 + 0x80]
	0x03D0F4BC ADD X31, X31, 0xB0
	0x03D0F4C0 RET
	0x03D0F4C4 BL 0x1C16F20
	0x03D0F4C8 STP X30, X21, [X31 - 0x20]!
	0x03D0F4CC STP X20, X19, [X31 + 0x10]
	0x03D0F4D0 ADRP X20, 0x6D8000
	0x03D0F4D4 ADRP X21, 0x40E000
	0x03D0F4D8 LDRB W8, [X20 + 0x8AE]

ISIL:
	001 Move [X31-80], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X30
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x6D9000
	012 Move X21, 0x455000
	013 Move W8, [X22+2211]
	014 Move X21, [X21+2752]
	015 Move V10, V3
	016 Move W20, W1
	017 Move V8, V1
	018 Move V9, V0
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0x455000
	025 Move X0, [X0+2760]
	026 Call 0x1C17CF4
	027 Move X0, 0x455000
	028 Move X0, [X0+2752]
	029 Call 0x1C17CF4
	030 Move X0, 0x455000
	031 Move X0, [X0+2768]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+2211], W8
	035 NotImplemented "Instruction FCVT not yet implemented."
	036 Move X0, X31
	037 Call NumericFieldDraggerUtility.CalculateFloatDragSensitivity, V0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Move X2, X31
	043 Move V10, V0
	044 Call NumericFieldDraggerUtility.Acceleration, X0, X1
	045 Move X1, [X21]
	046 Move X0, X19
	047 Move V11, V0
	048 Call TextInputBase<Single>.get_text, X0
	049 Move X8, [X19]
	050 Move X1, X0
	051 Move X0, X19
	052 Move X9, [X8+1912]
	053 Move X2, [X8+1920]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 NotImplemented "Instruction FCVT not yet implemented."
	056 Move V0, V9
	057 Move V1, V8
	058 Move V2, V11
	059 Move X0, X31
	060 Call NumericFieldDraggerUtility.NiceDelta, X0, V0
	061 NotImplemented "Instruction FCVT not yet implemented."
	062 Multiply D0, D10, D0
	063 Add D0, D0, D12
	064 Move V1, V10
	065 Move X0, X31
	066 Call Mathf.RoundBasedOnMinimumDifference, V0, V1
	067 Move X0, X19
	068 Move V8, V0
	069 Call FloatInput.get_parentFloatField, X0
	070 Compare X0, 0
	071 JumpIfEqual {128}
	072 Move X8, 0x455000
	073 Move X8, [X8+2760]
	074 Move X1, [X8]
	075 Call TextInputBaseField`1<Single>.get_isDelayed, X0
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {105}
	080 Move V0, V8
	081 Move X0, X31
	082 Call Mathf.ClampToFloat, V0
	083 Move X8, [X19]
	084 Move X0, X19
	085 Move X9, [X8+2008]
	086 Move X1, [X8+2016]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X8, 0x455000
	089 Move X8, [X8+2768]
	090 Move X1, X0
	091 Move X0, X19
	092 Move X20, [X31+64]
	093 Move X19, [X31+72]
	094 Move X2, [X8]
	095 Move X22, [X31+48]
	096 Move X21, [X31+56]
	097 Move X30, [X31+40]
	098 Move D9, [X31+24]
	099 Move D8, [X31+32]
	100 Move D11, [X31+8]
	101 Move D10, [X31+16]
	102 Move V12, [X31+80]
	103 Call TextInputBase<Single>.set_text, X0, X1
	104 Return 
	105 Move X0, X19
	106 Call FloatInput.get_parentFloatField, X0
	107 Move X19, X0
	108 Move V0, V8
	109 Move X0, X31
	110 Call Mathf.ClampToFloat, V0
	111 Compare X19, 0
	112 JumpIfEqual {128}
	113 Move X8, [X19]
	114 Move X0, X19
	115 Move X20, [X31+64]
	116 Move X19, [X31+72]
	117 Move X22, [X31+48]
	118 Move X21, [X31+56]
	119 Move X2, [X8+2040]
	120 Move X1, [X8+2048]
	121 Move X30, [X31+40]
	122 Move D9, [X31+24]
	123 Move D8, [X31+32]
	124 Move D11, [X31+8]
	125 Move D10, [X31+16]
	126 Move V12, [X31+80]
	127 CallNoReturn X2
	128 Call 0x1C17F20

Method: System.String ValueToString(System.Single v)

Disassembly:
	0x03D0F4DC LDR X21, [X21 + 0xB20]
	0x03D0F4E0 MOV X19, X0
	0x03D0F4E4 TBNZ X8, 0x0, 0x3D0F52C
	0x03D0F4E8 ADRP X0, 0x40E000
	0x03D0F4EC LDR X0, [X0 + 0xB28]
	0x03D0F4F0 BL 0x1C16CF4
	0x03D0F4F4 ADRP X0, 0x40E000
	0x03D0F4F8 LDR X0, [X0 + 0x758]
	0x03D0F4FC BL 0x1C16CF4
	0x03D0F500 ADRP X0, 0x40E000
	0x03D0F504 LDR X0, [X0 + 0xB20]
	0x03D0F508 BL 0x1C16CF4
	0x03D0F50C ADRP X0, 0x3EE000
	0x03D0F510 LDR X0, [X0 + 0xEC8]
	0x03D0F514 BL 0x1C16CF4
	0x03D0F518 ADRP X0, 0x437000
	0x03D0F51C LDR X0, [X0 + 0x3E0]
	0x03D0F520 BL 0x1C16CF4
	0x03D0F524 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6D9000
	005 Move W8, [X20+2212]
	006 Move X19, X0
	007 Move [X31+12], S0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x455000
	013 Move X0, [X0+2776]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2212], W8
	017 Move X1, [X19+1024]
	018 Add X0, X31, 12
	019 Move X2, X31
	020 Call Single.ToString, X0, X1
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return X0

Method: System.Single StringToValue(System.String str)

Disassembly:
	0x03D0F528 STRB W8, [X20 + 0x8AE]
	0x03D0F52C LDR X0, [X21]
	0x03D0F530 BL 0x1C16F10
	0x03D0F534 MOV X1, X31
	0x03D0F538 MOV X20, X0
	0x03D0F53C BL 0x3E0A2F4
	0x03D0F540 CBZ X20, 0x3D0F5A8
	0x03D0F544 ADRP X8, 0x437000
	0x03D0F548 LDR X8, [X8 + 0x3E0]
	0x03D0F54C ADRP X9, 0x40E000
	0x03D0F550 LDR X8, [X8]
	0x03D0F554 LDR X9, [X9 + 0x758]
	0x03D0F558 STR X8, [X20 + 0x10]
	0x03D0F55C STR X20, [X19 + 0x78]
	0x03D0F560 LDR X0, [X9]
	0x03D0F564 BL 0x1C16F10
	0x03D0F568 MOV X1, X31
	0x03D0F56C MOV X20, X0
	0x03D0F570 BL 0x3E13BD4
	0x03D0F574 CBZ X20, 0x3D0F5A8
	0x03D0F578 ADRP X8, 0x3EE000
	0x03D0F57C LDR X8, [X8 + 0xEC8]
	0x03D0F580 MOVZ W9, 0x1
	0x03D0F584 MOV X0, X19
	0x03D0F588 MOV X1, X31
	0x03D0F58C LDR X8, [X8]
	0x03D0F590 STRB W9, [X20 + 0x40]
	0x03D0F594 STR X8, [X20 + 0x10]
	0x03D0F598 STR X20, [X19 + 0x80]
	0x03D0F59C LDP X20, X19, [X31 + 0x10]
	0x03D0F5A0 LDP X30, X21, [X31], #0x20
	0x03D0F5A4 B 0x3CEA004
	0x03D0F5A8 BL 0x1C16F20
	0x03D0F5AC LDRB W0, [X0 + 0x58]
	0x03D0F5B0 RET
	0x03D0F5B4 AND W8, W1, 0x1
	0x03D0F5B8 STRB W8, [X0 + 0x58]
	0x03D0F5BC RET
	0x03D0F5C0 LDRB W0, [X0 + 0x59]
	0x03D0F5C4 RET
	0x03D0F5C8 AND W8, W1, 0x1
	0x03D0F5CC STRB W8, [X0 + 0x59]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x6D9000
	009 Move X22, 0x455000
	010 Move X21, 0x451000
	011 Move W8, [X23+2213]
	012 Move X22, [X22+2664]
	013 Move X21, [X21+1960]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x455000
	021 Move X0, [X0+2664]
	022 Call 0x1C17CF4
	023 Move X0, 0x451000
	024 Move X0, [X0+1960]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+2213], W8
	028 Move X1, [X22]
	029 Move X0, X20
	030 Move [X31+12], W31
	031 Call TextInputBase<Single>.get_originalText, X0
	032 Move X8, [X21]
	033 Move X20, X0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Add X2, X31, 12
	040 Move X0, X19
	041 Move X1, X20
	042 Move X3, X31
	043 Call UINumericFieldsUtils.TryConvertStringToFloat, X0, X1, X2
	044 Move V0, [X31+12]
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X30, [X31+16]
	050 Move X23, [X31+24]
	051 Add X31, X31, 64
	052 Return V0

