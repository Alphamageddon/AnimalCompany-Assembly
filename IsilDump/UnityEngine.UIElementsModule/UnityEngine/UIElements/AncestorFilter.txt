Type: UnityEngine.UIElements.AncestorFilter

Method: System.Void .ctor()

Disassembly:
	0x03D8DBE8 ADRP X29, 0x3DA000
	0x03D8DBEC LDR X25, [X25 + 0x968]
	0x03D8DBF0 LDR X27, [X27 + 0xE50]
	0x03D8DBF4 LDR X28, [X28 + 0x998]
	0x03D8DBF8 LDR X29, [X29 + 0x9A0]
	0x03D8DBFC MOVI V0.2D, 0x0
	0x03D8DC00 MOV W20, W31
	0x03D8DC04 STR W31, [X31 + 0xA0]
	0x03D8DC08 STP X31, X31, [X31 + 0x50]
	0x03D8DC0C STP V0, V0, [X31 + 0x80]
	0x03D8DC10 STP V0, V0, [X31 + 0x60]
	0x03D8DC14 LDR X21, [X19 + 0x10]
	0x03D8DC18 CBNZ X21, 0x3D8DC30
	0x03D8DC1C MOV X0, X19
	0x03D8DC20 BL 0x3D8D55C
	0x03D8DC24 MOV X21, X0
	0x03D8DC28 STR X0, [X19 + 0x10]
	0x03D8DC2C CBZ X0, 0x3D8DF94
	0x03D8DC30 LDR X8, [X21]
	0x03D8DC34 LDR X1, [X25]
	0x03D8DC38 LDRH W9, [X8 + 0x12E]
	0x03D8DC3C CBZ X9, 0x3D8DC60
	0x03D8DC40 LDR X10, [X8 + 0xB0]
	0x03D8DC44 ADD X10, X10, 0x8
	0x03D8DC48 LDUR X11, [X10 - 0x8]
	0x03D8DC4C CMP X11, X1
	0x03D8DC50 B.EQ 0x3D8DC70
	0x03D8DC54 SUBS X9, X9, 0x1
	0x03D8DC58 ADD X10, X10, 0x10
	0x03D8DC5C B.NE 0x3D8DC48
	0x03D8DC60 MOVZ W2, 0x4
	0x03D8DC64 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x65B000
	007 Move X22, 0x3C2000
	008 Move X20, 0x3DB000
	009 Move W8, [X21+3636]
	010 Move X22, [X22+2776]
	011 Move X20, [X20+2344]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x3DB000
	018 Move X0, [X0+2344]
	019 Call 0x1C17CF4
	020 Move X0, 0x3C2000
	021 Move X0, [X0+2776]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3636], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X2, [X20]
	028 Move W1, 100
	029 Move X20, X0
	030 Call Stack`1<Int32>..ctor, X0, X1
	031 Move [X19+16400], X20
	032 Move X0, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X1, X31
	038 Move X30, [X31+48]
	039 Call Object..ctor, X0
	040 Return 

Method: System.Void AddHash(System.Int32 hash)

Disassembly:
	0x03D8DC68 BL 0x1C5C788
	0x03D8DC6C B 0x3D8DC80
	0x03D8DC70 LDR W9, [X10]
	0x03D8DC74 ADD W9, W9, 0x4
	0x03D8DC78 ADD X8, X8, W9, 0x4, SXTW
	0x03D8DC7C ADD X0, X8, 0x138
	0x03D8DC80 LDP X8, X1, [X0]
	0x03D8DC84 MOV X0, X21
	0x03D8DC88 BLR X8
	0x03D8DC8C LDR X21, [X19 + 0x10]
	0x03D8DC90 MOV W22, W0
	0x03D8DC94 CBNZ X21, 0x3D8DCAC
	0x03D8DC98 MOV X0, X19
	0x03D8DC9C BL 0x3D8D55C
	0x03D8DCA0 MOV X21, X0
	0x03D8DCA4 STR X0, [X19 + 0x10]
	0x03D8DCA8 CBZ X0, 0x3D8DF94
	0x03D8DCAC CMP W20, W22
	0x03D8DCB0 B.GE 0x3D8DF08
	0x03D8DCB4 LDR X8, [X21]
	0x03D8DCB8 LDR X1, [X25]
	0x03D8DCBC LDRH W9, [X8 + 0x12E]
	0x03D8DCC0 CBZ X9, 0x3D8DCE4
	0x03D8DCC4 LDR X10, [X8 + 0xB0]
	0x03D8DCC8 ADD X10, X10, 0x8
	0x03D8DCCC LDUR X11, [X10 - 0x8]
	0x03D8DCD0 CMP X11, X1
	0x03D8DCD4 B.EQ 0x3D8DCF4
	0x03D8DCD8 SUBS X9, X9, 0x1
	0x03D8DCDC ADD X10, X10, 0x10
	0x03D8DCE0 B.NE 0x3D8DCCC
	0x03D8DCE4 MOVZ W2, 0x5
	0x03D8DCE8 MOV X0, X21
	0x03D8DCEC BL 0x1C5C788
	0x03D8DCF0 B 0x3D8DD04
	0x03D8DCF4 LDR W9, [X10]
	0x03D8DCF8 ADD W9, W9, 0x5

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x65B000
	006 Move W8, [X21+3637]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3C2000
	014 Move X0, [X0+2760]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3637], W8
	018 Move X0, [X20+16400]
	019 Compare X0, 0
	020 JumpIfEqual {45}
	021 Move X8, 0x3C2000
	022 Move X8, [X8+2760]
	023 Move W1, W19
	024 Move X2, [X8]
	025 Call Stack`1<Int32>.Push, X0, X1
	026 Move W9, W19
	027 Add X8, X20, 16
	028 And X9, X9, 0x3FFF
	029 Move W10, [X9]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add W10, W10, 1
	032 Move [X8], W10
	033 Move X9, X19
	034 ShiftRight X9, 14
	035 And X9, X9, 0x7FFFFFF
	036 Move W10, [X9]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add W10, W10, 1
	039 Move [X8], W10
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 
	045 Call 0x1C17F20

Method: System.Boolean IsCandidate(UnityEngine.UIElements.StyleComplexSelector complexSel)

Disassembly:
	0x03D8DCFC ADD X8, X8, W9, 0x4, SXTW
	0x03D8DD00 ADD X0, X8, 0x138
	0x03D8DD04 LDP X9, X2, [X0]
	0x03D8DD08 ADD X8, X31, 0xA8
	0x03D8DD0C MOV X0, X21
	0x03D8DD10 MOV W1, W20
	0x03D8DD14 BLR X9
	0x03D8DD18 ADD X0, X31, 0x60
	0x03D8DD1C ADD X1, X31, 0xA8
	0x03D8DD20 MOVZ W2, 0x44
	0x03D8DD24 BL 0x3EB1AC0
	0x03D8DD28 ADD X0, X31, 0x60
	0x03D8DD2C MOV X1, X31
	0x03D8DD30 BL 0x3C84608
	0x03D8DD34 CMP W0, 0x1
	0x03D8DD38 B.EQ 0x3D8DF00
	0x03D8DD3C ADD X0, X31, 0x60
	0x03D8DD40 MOV X1, X31
	0x03D8DD44 BL 0x3C845B0
	0x03D8DD48 ADRP X8, 0x38E000
	0x03D8DD4C LDR X8, [X8 + 0x930]
	0x03D8DD50 MOV V8.16B, V0.16B

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {26}
	004 Move X8, X31
	005 Add X9, X1, 16
	006 Add X10, X0, 16
	007 Move W11, [X9]
	008 Compare W11, 0
	009 JumpIfEqual {22}
	010 And X12, X11, 0x3FFF
	011 Move W12, [X12]
	012 Compare W12, 0
	013 JumpIfEqual {23}
	014 Move X11, X11
	015 ShiftRight X11, 14
	016 And X11, X11, 0x7FFFFFF
	017 Move W11, [X11]
	018 Compare W11, 0
	019 JumpIfEqual {23}
	020 Add X8, X8, 4
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W0, 1
	023 Move W0, W31
	024 Move X30, [X31+16]
	025 Return X0
	026 Call 0x1C17F20

Method: System.Void PushElement(UnityEngine.UIElements.VisualElement element)

Disassembly:
	0x03D8DD54 MOV V9.16B, V1.16B
	0x03D8DD58 LDR X0, [X8]
	0x03D8DD5C LDR W8, [X0 + 0xE0]
	0x03D8DD60 CBNZ W8, 0x3D8DD68
	0x03D8DD64 BL 0x1C16DFC
	0x03D8DD68 ADD X0, X31, 0x58
	0x03D8DD6C MOV V0.16B, V8.16B
	0x03D8DD70 MOV V1.16B, V9.16B
	0x03D8DD74 MOV X1, X31
	0x03D8DD78 BL 0x3E16C40
	0x03D8DD7C ADD X0, X31, 0x60
	0x03D8DD80 MOV X1, X31
	0x03D8DD84 BL 0x3C845B8
	0x03D8DD88 ADD X0, X31, 0x60
	0x03D8DD8C MOV X1, X31
	0x03D8DD90 BL 0x3C845C0
	0x03D8DD94 ADD X0, X31, 0x50
	0x03D8DD98 MOV X1, X31
	0x03D8DD9C BL 0x3E16C40
	0x03D8DDA0 ADD X0, X31, 0x60
	0x03D8DDA4 MOV X1, X31
	0x03D8DDA8 BL 0x3C845C8
	0x03D8DDAC ADD X0, X31, 0x60
	0x03D8DDB0 MOV X1, X31
	0x03D8DDB4 BL 0x3C845D0
	0x03D8DDB8 MOV X0, X31
	0x03D8DDBC BL 0x3E16EF8
	0x03D8DDC0 ADD X0, X31, 0x60
	0x03D8DDC4 MOV X1, X31
	0x03D8DDC8 BL 0x3C845D8
	0x03D8DDCC ADD X0, X31, 0x60
	0x03D8DDD0 MOV X1, X31
	0x03D8DDD4 BL 0x3C845B0
	0x03D8DDD8 ADD X0, X31, 0x60
	0x03D8DDDC MOV X1, X31
	0x03D8DDE0 MOV V8.16B, V0.16B
	0x03D8DDE4 MOV V9.16B, V1.16B
	0x03D8DDE8 BL 0x3C845D0
	0x03D8DDEC LDR X0, [X27]
	0x03D8DDF0 MOV V10.16B, V0.16B
	0x03D8DDF4 MOV V11.16B, V1.16B
	0x03D8DDF8 LDR W8, [X0 + 0xE0]
	0x03D8DDFC CBNZ W8, 0x3D8DE08
	0x03D8DE00 BL 0x1C16DFC
	0x03D8DE04 LDR X0, [X27]
	0x03D8DE08 LDR X8, [X0 + 0xB8]
	0x03D8DE0C ADD X0, X31, 0x60
	0x03D8DE10 MOV X1, X31
	0x03D8DE14 LDR W26, [X8 + 0xC]
	0x03D8DE18 BL 0x3C845A8
	0x03D8DE1C LDR X8, [X28]
	0x03D8DE20 LDR X21, [X31 + 0x58]
	0x03D8DE24 MOV W22, W0
	0x03D8DE28 LDR W9, [X8 + 0xE0]
	0x03D8DE2C CBNZ W9, 0x3D8DE3C
	0x03D8DE30 MOV X0, X8
	0x03D8DE34 BL 0x1C16DFC
	0x03D8DE38 LDR X8, [X28]
	0x03D8DE3C LDR X9, [X8 + 0xB8]
	0x03D8DE40 LDR X23, [X9 + 0x50]
	0x03D8DE44 CBNZ X23, 0x3D8DE9C
	0x03D8DE48 LDR W9, [X8 + 0xE0]
	0x03D8DE4C CBNZ W9, 0x3D8DE5C
	0x03D8DE50 MOV X0, X8
	0x03D8DE54 BL 0x1C16DFC
	0x03D8DE58 LDR X8, [X28]
	0x03D8DE5C LDR X8, [X8 + 0xB8]
	0x03D8DE60 LDR X24, [X8]
	0x03D8DE64 ADRP X8, 0x3DA000
	0x03D8DE68 LDR X8, [X8 + 0x9A8]
	0x03D8DE6C LDR X0, [X8]
	0x03D8DE70 BL 0x1C16F10
	0x03D8DE74 ADRP X8, 0x3DA000
	0x03D8DE78 LDR X8, [X8 + 0x9B0]
	0x03D8DE7C MOV X1, X24
	0x03D8DE80 MOV X3, X31
	0x03D8DE84 MOV X23, X0
	0x03D8DE88 LDR X2, [X8]
	0x03D8DE8C BL 0x2D40F18
	0x03D8DE90 LDR X8, [X28]
	0x03D8DE94 LDR X8, [X8 + 0xB8]
	0x03D8DE98 STR X23, [X8 + 0x50]
	0x03D8DE9C ADD X0, X31, 0x8
	0x03D8DEA0 ADD X1, X31, 0x60
	0x03D8DEA4 MOVZ W2, 0x44
	0x03D8DEA8 BL 0x3EB1AC0
	0x03D8DEAC CBZ X19, 0x3D8DF94
	0x03D8DEB0 LDR X24, [X29]
	0x03D8DEB4 ADD X0, X31, 0xA8
	0x03D8DEB8 ADD X1, X31, 0x8
	0x03D8DEBC MOVZ W2, 0x44
	0x03D8DEC0 ADD W22, W22, W26
	0x03D8DEC4 BL 0x3EB1AC0
	0x03D8DEC8 FMOV S2, W31
	0x03D8DECC FMOV S5, W31
	0x03D8DED0 ADD X4, X31, 0xA8
	0x03D8DED4 MOV X0, X19
	0x03D8DED8 MOV V0.16B, V8.16B
	0x03D8DEDC MOV V1.16B, V9.16B
	0x03D8DEE0 MOV V3.16B, V10.16B
	0x03D8DEE4 MOV V4.16B, V11.16B
	0x03D8DEE8 MOV W1, W22
	0x03D8DEEC MOV X2, X21
	0x03D8DEF0 MOV X3, X23
	0x03D8DEF4 MOV W5, W31
	0x03D8DEF8 MOV X6, X24
	0x03D8DEFC BL 0x21AC0D0
	0x03D8DF00 ADD W20, W20, 0x1
	0x03D8DF04 B 0x3D8DC14
	0x03D8DF08 LDR X8, [X21]
	0x03D8DF0C LDR X1, [X25]
	0x03D8DF10 LDRH W9, [X8 + 0x12E]
	0x03D8DF14 CBZ X9, 0x3D8DF38
	0x03D8DF18 LDR X10, [X8 + 0xB0]
	0x03D8DF1C ADD X10, X10, 0x8
	0x03D8DF20 LDUR X11, [X10 - 0x8]
	0x03D8DF24 CMP X11, X1
	0x03D8DF28 B.EQ 0x3D8DF48
	0x03D8DF2C SUBS X9, X9, 0x1
	0x03D8DF30 ADD X10, X10, 0x10
	0x03D8DF34 B.NE 0x3D8DF20
	0x03D8DF38 MOVZ W2, 0x4
	0x03D8DF3C MOV X0, X21
	0x03D8DF40 BL 0x1C5C788
	0x03D8DF44 B 0x3D8DF58
	0x03D8DF48 LDR W9, [X10]
	0x03D8DF4C ADD W9, W9, 0x4
	0x03D8DF50 ADD X8, X8, W9, 0x4, SXTW
	0x03D8DF54 ADD X0, X8, 0x138
	0x03D8DF58 LDP X8, X1, [X0]
	0x03D8DF5C MOV X0, X21
	0x03D8DF60 BLR X8
	0x03D8DF64 LDP X20, X19, [X31 + 0x160]
	0x03D8DF68 LDP X22, X21, [X31 + 0x150]
	0x03D8DF6C LDP X24, X23, [X31 + 0x140]
	0x03D8DF70 LDP X26, X25, [X31 + 0x130]
	0x03D8DF74 LDP X28, X27, [X31 + 0x120]
	0x03D8DF78 LDP X29, X30, [X31 + 0x110]
	0x03D8DF7C LDP D9, D8, [X31 + 0x100]
	0x03D8DF80 LDP D11, D10, [X31 + 0xF0]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X21, 0x65B000
	010 Move W8, [X21+3638]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x38E000
	018 Move X0, [X0+4040]
	019 Call 0x1C17CF4
	020 Move X0, 0x38E000
	021 Move X0, [X0+4048]
	022 Call 0x1C17CF4
	023 Move X0, 0x38E000
	024 Move X0, [X0+4056]
	025 Call 0x1C17CF4
	026 Move X0, 0x38E000
	027 Move X0, [X0+4064]
	028 Call 0x1C17CF4
	029 Move X0, 0x3C2000
	030 Move X0, [X0+2760]
	031 Call 0x1C17CF4
	032 Move X0, 0x3C4000
	033 Move X0, [X0+3112]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+3638], W8
	037 Move [X31+8], X31
	038 Move [X31+16], X31
	039 Move [X31+24], X31
	040 Move X8, [X19+16400]
	041 Compare X8, 0
	042 JumpIfEqual {134}
	043 Compare X20, 0
	044 JumpIfEqual {134}
	045 Move W22, [X8+24]
	046 Move X0, X20
	047 Move X1, X31
	048 Call VisualElement.get_typeName, X0
	049 Compare X0, 0
	050 JumpIfEqual {134}
	051 Move X8, [X0]
	052 Move X9, [X8+344]
	053 Move X1, [X8+352]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move W8, 13
	056 Multiply W1, W0, W8
	057 Move X0, X19
	058 Call AncestorFilter.AddHash, X0, X1
	059 Move X0, X20
	060 Move X1, X31
	061 Call VisualElement.get_name, X0
	062 Move X1, X31
	063 Call String.IsNullOrEmpty, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {80}
	068 Move X0, X20
	069 Move X1, X31
	070 Call VisualElement.get_name, X0
	071 Compare X0, 0
	072 JumpIfEqual {134}
	073 Move X8, [X0]
	074 Move X9, [X8+344]
	075 Move X1, [X8+352]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Add W1, W0, W0
	078 Move X0, X19
	079 Call AncestorFilter.AddHash, X0, X1
	080 Move X0, X20
	081 Move X1, X31
	082 Call VisualElement.get_classList, X0
	083 Compare X0, 0
	084 JumpIfEqual {134}
	085 Move X8, 0x38E000
	086 Move X8, [X8+4064]
	087 Move X21, 0x38E000
	088 Move X23, 0x3C2000
	089 Move X20, 0x38E000
	090 Move X1, [X8]
	091 Move X21, [X21+4048]
	092 Move X23, [X23+2760]
	093 Move X20, [X20+4040]
	094 Add X8, X31, 8
	095 Call List`1<Object>.GetEnumerator, X0
	096 Move W24, 19
	097 Move X1, [X21]
	098 Add X0, X31, 8
	099 Call Enumerator<Object>.MoveNext, X0
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {114}
	104 Move X0, [X31+24]
	105 Compare X0, 0
	106 JumpIfEqual {133}
	107 Move X8, [X0]
	108 Move X9, [X8+344]
	109 Move X1, [X8+352]
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Multiply W1, W0, W24
	112 Move X0, X19
	113 Call AncestorFilter.AddHash, X0, X1
	114 Move X1, [X20]
	115 Add X0, X31, 8
	116 Call Enumerator<Object>.Dispose, X0
	117 Move X0, [X19+16400]
	118 Compare X0, 0
	119 JumpIfEqual {134}
	120 Move W8, [X0+24]
	121 Move X2, [X23]
	122 Subtract W1, W8, W22
	123 Call Stack`1<Int32>.Push, X0, X1
	124 Move X20, [X31+80]
	125 Move X19, [X31+88]
	126 Move X22, [X31+64]
	127 Move X21, [X31+72]
	128 Move X24, [X31+48]
	129 Move X23, [X31+56]
	130 Move X30, [X31+32]
	131 Add X31, X31, 96
	132 Return 
	133 Call 0x1C17F20
	134 Call 0x1C17F20
	135 Move X20, X0
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, X20
	138 Call 0x3EB2AD0
	139 Move X21, [X0]
	140 Call 0x3EB2AE0
	141 Move X8, 0x38E000
	142 Move X8, [X8+4040]
	143 Add X0, X31, 8
	144 Move X1, [X8]
	145 Call Enumerator<Object>.Dispose, X0
	146 Compare X21, 0
	147 JumpIfEqual {117}
	148 Move X0, X21
	149 Call 0x1C17F18
	150 Move X21, X31
	151 Move X20, X0
	152 Move X8, 0x38E000
	153 Move X8, [X8+4040]
	154 Move X1, [X8]
	155 Add X0, X31, 8
	156 Call Enumerator<Object>.Dispose, X0
	157 Compare X21, 0
	158 JumpIfNotEqual {161}
	159 Move X0, X20
	160 Call 0x1D2D690
	161 Move X0, X21
	162 Call 0x1C17F18
	163 Call 0x1991590

Method: System.Void PopElement()

Disassembly:
	0x03D8DF84 CMP W0, 0x0
	0x03D8DF88 CSET W0, GT
	0x03D8DF8C ADD X31, X31, 0x170
	0x03D8DF90 RET
	0x03D8DF94 BL 0x1C16F20
	0x03D8DF98 SUB X31, X31, 0xA0
	0x03D8DF9C STR D12, [X31 + 0x10]
	0x03D8DFA0 STP D11, D10, [X31 + 0x20]
	0x03D8DFA4 STP D9, D8, [X31 + 0x30]
	0x03D8DFA8 STP X29, X30, [X31 + 0x40]
	0x03D8DFAC STP X28, X27, [X31 + 0x50]
	0x03D8DFB0 STP X26, X25, [X31 + 0x60]
	0x03D8DFB4 STP X24, X23, [X31 + 0x70]
	0x03D8DFB8 STP X22, X21, [X31 + 0x80]
	0x03D8DFBC STP X20, X19, [X31 + 0x90]
	0x03D8DFC0 ADRP X20, 0x65A000
	0x03D8DFC4 LDRB W8, [X20 + 0xE40]
	0x03D8DFC8 MOV X19, X0
	0x03D8DFCC TBNZ X8, 0x0, 0x3D8E068
	0x03D8DFD0 ADRP X0, 0x3DA000
	0x03D8DFD4 LDR X0, [X0 + 0x9B8]
	0x03D8DFD8 BL 0x1C16CF4
	0x03D8DFDC ADRP X0, 0x3DA000
	0x03D8DFE0 LDR X0, [X0 + 0x9C0]
	0x03D8DFE4 BL 0x1C16CF4
	0x03D8DFE8 ADRP X0, 0x3DA000
	0x03D8DFEC LDR X0, [X0 + 0x9C8]
	0x03D8DFF0 BL 0x1C16CF4
	0x03D8DFF4 ADRP X0, 0x3DA000
	0x03D8DFF8 LDR X0, [X0 + 0x9D0]
	0x03D8DFFC BL 0x1C16CF4
	0x03D8E000 ADRP X0, 0x3D9000
	0x03D8E004 LDR X0, [X0 + 0x968]
	0x03D8E008 BL 0x1C16CF4
	0x03D8E00C ADRP X0, 0x38E000
	0x03D8E010 LDR X0, [X0 + 0xE50]
	0x03D8E014 BL 0x1C16CF4
	0x03D8E018 ADRP X0, 0x3D9000
	0x03D8E01C LDR X0, [X0 + 0x9D8]
	0x03D8E020 BL 0x1C16CF4
	0x03D8E024 ADRP X0, 0x3D9000
	0x03D8E028 LDR X0, [X0 + 0x9E0]
	0x03D8E02C BL 0x1C16CF4
	0x03D8E030 ADRP X0, 0x3D9000
	0x03D8E034 LDR X0, [X0 + 0x9E8]
	0x03D8E038 BL 0x1C16CF4
	0x03D8E03C ADRP X0, 0x3D9000
	0x03D8E040 LDR X0, [X0 + 0x998]
	0x03D8E044 BL 0x1C16CF4
	0x03D8E048 ADRP X0, 0x38D000
	0x03D8E04C LDR X0, [X0 + 0x930]
	0x03D8E050 BL 0x1C16CF4
	0x03D8E054 ADRP X0, 0x3D9000
	0x03D8E058 LDR X0, [X0 + 0x9F0]
	0x03D8E05C BL 0x1C16CF4
	0x03D8E060 MOVZ W8, 0x1
	0x03D8E064 STRB W8, [X20 + 0xE40]
	0x03D8E068 STR X31, [X31 + 0x18]
	0x03D8E06C LDR X20, [X19 + 0x10]
	0x03D8E070 CBNZ X20, 0x3D8E088

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x65B000
	008 Move W8, [X20+3639]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x3DB000
	015 Move X0, [X0+2352]
	016 Call 0x1C17CF4
	017 Move X0, 0x3C4000
	018 Move X0, [X0+3104]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3639], W8
	022 Move X0, [X19+16400]
	023 Compare X0, 0
	024 JumpIfEqual {75}
	025 Move X21, 0x3DB000
	026 Move X21, [X21+2352]
	027 Move X1, [X21]
	028 Call Stack`1<Int32>.Peek, X0
	029 Move X8, [X19+16400]
	030 Compare X8, 0
	031 JumpIfEqual {75}
	032 Move X22, 0x3C4000
	033 Move X22, [X22+3104]
	034 Move W20, W0
	035 Move X0, X8
	036 Move X1, [X22]
	037 Call Stack`1<Int32>.Pop, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X23, X19, 16
	040 Add W20, W20, 1
	041 Move X0, [X19+16400]
	042 Compare X0, 0
	043 JumpIfEqual {75}
	044 Move X1, [X21]
	045 Call Stack`1<Int32>.Peek, X0
	046 Move W8, W0
	047 And X8, X8, 0x3FFF
	048 Move W9, [X8]
	049 Compare W9, 0
	050 JumpIfEqual {53}
	051 Subtract W9, W9, 1
	052 Move [X23], W9
	053 Move X8, X0
	054 ShiftRight X8, 14
	055 And X8, X8, 0x7FFFFFF
	056 Move W9, [X8]
	057 Compare W9, 0
	058 JumpIfEqual {61}
	059 Subtract W9, W9, 1
	060 Move [X23], W9
	061 Move X0, [X19+16400]
	062 Compare X0, 0
	063 JumpIfEqual {75}
	064 Move X1, [X22]
	065 Call Stack`1<Int32>.Pop, X0
	066 Subtract W20, W20, 1
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Move X23, [X31+56]
	074 Return 
	075 Call 0x1C17F20

