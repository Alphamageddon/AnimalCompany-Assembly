Type: UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer

Method: UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken get_current()

Disassembly:
	0x03D58EB8 ADRP X0, 0x40E000
	0x03D58EBC LDR X0, [X0 + 0x140]
	0x03D58EC0 BL 0x1C16CF4
	0x03D58EC4 ADRP X0, 0x40E000
	0x03D58EC8 LDR X0, [X0 + 0x200]
	0x03D58ECC BL 0x1C16CF4
	0x03D58ED0 ADRP X0, 0x40E000
	0x03D58ED4 LDR X0, [X0 + 0x1E8]
	0x03D58ED8 BL 0x1C16CF4
	0x03D58EDC ADRP X0, 0x40E000
	0x03D58EE0 LDR X0, [X0 + 0x1A8]
	0x03D58EE4 BL 0x1C16CF4
	0x03D58EE8 MOVZ W8, 0x1
	0x03D58EEC STRB W8, [X21 + 0xC3D]
	0x03D58EF0 STR X31, [X31 + 0x8]
	0x03D58EF4 LDR X0, [X20 + 0x28]
	0x03D58EF8 CBZ X0, 0x3D58FD4
	0x03D58EFC ADRP X8, 0x40E000
	0x03D58F00 LDR X8, [X8 + 0x140]
	0x03D58F04 ADD X2, X31, 0x8
	0x03D58F08 MOV X1, X19
	0x03D58F0C LDR X3, [X8]
	0x03D58F10 BL 0x2AA6B2C
	0x03D58F14 TBNZ X0, 0x0, 0x3D58F44
	0x03D58F18 LDR X0, [X20 + 0x20]
	0x03D58F1C CBZ X0, 0x3D58FD4
	0x03D58F20 ADRP X8, 0x40E000
	0x03D58F24 LDR X8, [X8 + 0x1A8]
	0x03D58F28 MOVZ W1, 0x5
	0x03D58F2C LDR X2, [X8]
	0x03D58F30 BL 0x260141C
	0x03D58F34 MOV X0, X20
	0x03D58F38 MOV X1, X19
	0x03D58F3C BL 0x3D56DB8
	0x03D58F40 STR X0, [X31 + 0x8]
	0x03D58F44 ADRP X8, 0x40E000
	0x03D58F48 LDR X8, [X8 + 0x1E8]
	0x03D58F4C ADRP X20, 0x40E000
	0x03D58F50 LDR X0, [X8]
	0x03D58F54 LDR X20, [X20 + 0x200]
	0x03D58F58 BL 0x1C16F10
	0x03D58F5C MOV X1, X31
	0x03D58F60 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x690000
	007 Move W9, [X21+3136]
	008 Move X20, X0
	009 Move X19, X8
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x40F000
	015 Move X0, [X0+472]
	016 Call 0x1C17CF4
	017 Move X0, 0x40F000
	018 Move X0, [X0+480]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3136], W8
	022 Move W1, [X20+24]
	023 Move TEMP, X1
	024 And TEMP, TEMP, -2147483648
	025 Compare TEMP, -2147483648
	026 JumpIfEqual {40}
	027 Move X0, [X20+16]
	028 Compare X0, 0
	029 JumpIfEqual {52}
	030 Move W8, [X0+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, 0x40F000
	033 Move X8, [X8+480]
	034 Move X2, [X8]
	035 Add X8, X31, 8
	036 Call List`1<StyleSyntaxToken>.get_Item, X0, X1
	037 Move V1, [X31+8]
	038 Move X8, [X31+16]
	039 Move V0, [X31+24]
	040 Move X8, X31
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Move [X19], D1
	044 Move [X19+8], X8
	045 Move [X19+16], D0
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Add X31, X31, 64
	051 Return X0
	052 Call 0x1C17F20

Method: UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken MoveNext()

Disassembly:
	0x03D59B1C FMUL S0, S8, S0
	0x03D59B20 BL 0x3EB1B90
	0x03D59B24 ADRP X8, 0xFFFFFFFFFCD90000
	0x03D59B28 MOV V9.16B, V0.16B
	0x03D59B2C ADRP X9, 0xFFFFFFFFFCD91000
	0x03D59B30 LDR V0, [X8 + 0xF84]
	0x03D59B34 LDR V1, [X9 + 0x6C]
	0x03D59B38 ADRP X8, 0xFFFFFFFFFCD91000
	0x03D59B3C LDR V2, [X8 + 0x44C]
	0x03D59B40 FADD S0, S8, S0
	0x03D59B44 FMUL S0, S0, S1
	0x03D59B48 FDIV S0, S0, S2
	0x03D59B4C BL 0x3EB1B70
	0x03D59B50 FMUL S0, S9, S0
	0x03D59B54 FMOV S1, 1
	0x03D59B58 FADD S0, S0, S1
	0x03D59B5C B 0x3D59B64
	0x03D59B60 FMOV S0, W31
	0x03D59B64 LDR X30, [X31 + 0x10]
	0x03D59B68 LDP D9, D8, [X31], #0x20
	0x03D59B6C RET
	0x03D59B70 STP D9, D8, [X31 - 0x20]!
	0x03D59B74 STR X30, [X31 + 0x10]
	0x03D59B78 MOV V1.16B, V0.16B
	0x03D59B7C FMOV S0, 0.5
	0x03D59B80 FCMP S1, S0
	0x03D59B84 B.PL 0x3D59BF0
	0x03D59B88 FADD S1, S1, S1
	0x03D59B8C FCMP S1, 0x0
	0x03D59B90 B.EQ 0x3D59C64
	0x03D59B94 FMOV S2, 1
	0x03D59B98 FCMP S1, S2
	0x03D59B9C B.EQ 0x3D59C68
	0x03D59BA0 FMOV S0, -1
	0x03D59BA4 FADD S9, S1, S0
	0x03D59BA8 FMOV S0, 10
	0x03D59BAC FMUL S0, S9, S0
	0x03D59BB0 BL 0x3EB1B90
	0x03D59BB4 ADRP X8, 0xFFFFFFFFFCD90000
	0x03D59BB8 MOV V8.16B, V0.16B
	0x03D59BBC ADRP X9, 0xFFFFFFFFFCD91000
	0x03D59BC0 LDR V0, [X8 + 0xF84]
	0x03D59BC4 LDR V1, [X9 + 0x6C]
	0x03D59BC8 ADRP X8, 0xFFFFFFFFFCD91000
	0x03D59BCC LDR V2, [X8 + 0x44C]
	0x03D59BD0 FADD S0, S9, S0
	0x03D59BD4 FMUL S0, S0, S1
	0x03D59BD8 FDIV S0, S0, S2
	0x03D59BDC BL 0x3EB1B70
	0x03D59BE0 FMUL S0, S0, S8
	0x03D59BE4 FMOV S1, -0.5
	0x03D59BE8 FMUL S0, S0, S1
	0x03D59BEC B 0x3D59C68
	0x03D59BF0 FMOV S2, -0.5
	0x03D59BF4 FADD S1, S1, S2
	0x03D59BF8 FADD S9, S1, S1
	0x03D59BFC FCMP S9, 0x0
	0x03D59C00 B.EQ 0x3D59C68
	0x03D59C04 FMOV S0, 1
	0x03D59C08 FCMP S9, S0
	0x03D59C0C B.EQ 0x3D59C68
	0x03D59C10 FMOV S0, -10
	0x03D59C14 FMUL S0, S9, S0
	0x03D59C18 BL 0x3EB1B90
	0x03D59C1C ADRP X8, 0xFFFFFFFFFCD90000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X9, [X21+40]
	009 Move X22, 0x68F000
	010 Move X20, X0
	011 Move X19, X8
	012 Move [X31+56], X9
	013 Move W9, [X22+3137]
	014 Move TEMP, X9
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x40E000
	019 Move X0, [X0+472]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3137], W8
	023 Add X8, X31, 0
	024 Move X0, X20
	025 Call StyleSyntaxTokenizer.get_current, X0
	026 Move W8, [X31]
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 Move W9, [X31+20]
	029 Move [X31+2], V0
	030 Move [X31+48], W9
	031 Compare W8, 0
	032 JumpIfEqual {54}
	033 Move W8, [X20+24]
	034 Move X0, X20
	035 Add W8, W8, 1
	036 Move [X20+24], W8
	037 Add X8, X31, 0
	038 Call StyleSyntaxTokenizer.get_current, X0
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 Move W8, [X31+20]
	041 Move [X31+2], V0
	042 Move [X31+48], W8
	043 Move X9, [X20+16]
	044 Move W8, [X31]
	045 Compare X9, 0
	046 JumpIfEqual {73}
	047 Move W10, [X20+24]
	048 Move W9, [X9+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move TEMP, 0
	051 Not TEMP
	052 Move W9, TEMP
	053 Move [X20+24], W9
	054 Move V0, [X31+2]
	055 Move W9, [X31+48]
	056 Move [X19], W8
	057 Move [X31], V0
	058 Move V0, [X31]
	059 Move [X31+16], W9
	060 Move W9, W9
	061 Move [X19+20], W9
	062 Move [X19+4], V0
	063 Move X8, [X21+40]
	064 Move X9, [X31+56]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X20, [X31+96]
	067 Move X19, [X31+104]
	068 Move X22, [X31+80]
	069 Move X21, [X31+88]
	070 Move X30, [X31+64]
	071 Add X31, X31, 112
	072 Return X0
	073 Call 0x1C17F20
	074 Call 0x3EB2B20

Method: UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken PeekNext()

Disassembly:
	0x03D59D94 FMUL S0, S0, S0
	0x03D59D98 FMUL S1, S1, S1
	0x03D59D9C FCSEL S0, S0, S1, MI
	0x03D59DA0 FMOV S3, -1
	0x03D59DA4 FSUB S0, S2, S0
	0x03D59DA8 FMOV S4, 0.5
	0x03D59DAC FMOV S1, -0.5
	0x03D59DB0 FCSEL S3, S3, S2, MI
	0x03D59DB4 FSQRT S0, S0
	0x03D59DB8 FCSEL S1, S1, S4, MI
	0x03D59DBC FADD S0, S0, S3
	0x03D59DC0 FMUL S0, S0, S1
	0x03D59DC4 RET
	0x03D59DC8 STP X30, X23, [X31 - 0x30]!
	0x03D59DCC STP X22, X21, [X31 + 0x10]
	0x03D59DD0 STP X20, X19, [X31 + 0x20]
	0x03D59DD4 ADRP X20, 0x68E000
	0x03D59DD8 ADRP X19, 0x40D000
	0x03D59DDC LDRB W8, [X20 + 0xC47]
	0x03D59DE0 LDR X19, [X19 + 0x318]
	0x03D59DE4 TBNZ X8, 0x0, 0x3D59E2C
	0x03D59DE8 ADRP X0, 0x40D000
	0x03D59DEC LDR X0, [X0 + 0x320]
	0x03D59DF0 BL 0x1C16CF4
	0x03D59DF4 ADRP X0, 0x40D000
	0x03D59DF8 LDR X0, [X0 + 0x328]
	0x03D59DFC BL 0x1C16CF4
	0x03D59E00 ADRP X0, 0x40D000
	0x03D59E04 LDR X0, [X0 + 0x330]
	0x03D59E08 BL 0x1C16CF4
	0x03D59E0C ADRP X0, 0x40D000
	0x03D59E10 LDR X0, [X0 + 0x338]
	0x03D59E14 BL 0x1C16CF4
	0x03D59E18 ADRP X0, 0x40D000
	0x03D59E1C LDR X0, [X0 + 0x318]
	0x03D59E20 BL 0x1C16CF4
	0x03D59E24 MOVZ W8, 0x1
	0x03D59E28 STRB W8, [X20 + 0xC47]
	0x03D59E2C LDR X0, [X19]
	0x03D59E30 ADRP X22, 0x40D000
	0x03D59E34 ADRP X23, 0x40D000
	0x03D59E38 ADRP X21, 0x40D000
	0x03D59E3C LDR W8, [X0 + 0xE0]
	0x03D59E40 LDR X22, [X22 + 0x330]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x68F000
	007 Move W9, [X21+3138]
	008 Move X20, X0
	009 Move X19, X8
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x40E000
	015 Move X0, [X0+472]
	016 Call 0x1C17CF4
	017 Move X0, 0x40E000
	018 Move X0, [X0+480]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3138], W8
	022 Move W8, [X20+24]
	023 Move TEMP, X8
	024 And TEMP, TEMP, -2147483648
	025 Compare TEMP, -2147483648
	026 JumpIfEqual {41}
	027 Move X0, [X20+16]
	028 Compare X0, 0
	029 JumpIfEqual {53}
	030 Move W9, [X0+24]
	031 Add W1, W8, 1
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, 0x40E000
	034 Move X8, [X8+480]
	035 Move X2, [X8]
	036 Add X8, X31, 8
	037 Call List`1<StyleSyntaxToken>.get_Item, X0, X1
	038 Move V1, [X31+8]
	039 Move X8, [X31+16]
	040 Move V0, [X31+24]
	041 Move X8, X31
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X19], D1
	045 Move [X19+8], X8
	046 Move [X19+16], D0
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Add X31, X31, 64
	052 Return X0
	053 Call 0x1C17F20

Method: System.Void Tokenize(System.String syntax)

Disassembly:
	0x03D57FD0 BL 0x1C16F10
	0x03D57FD4 MOV X1, X31
	0x03D57FD8 MOV X21, X0
	0x03D57FDC BL 0x33BDD8C
	0x03D57FE0 ADRP X8, 0xFFFFFFFFFCD94000
	0x03D57FE4 LDR V0, [X8 + 0x93]
	0x03D57FE8 STR W31, [X21 + 0x24]
	0x03D57FEC STP X31, X31, [X21 + 0x28]
	0x03D57FF0 STR V0, [X21 + 0x1]
	0x03D57FF4 CBZ X22, 0x3D58054
	0x03D57FF8 MOV X0, X22
	0x03D57FFC MOV X1, X31
	0x03D58000 BL 0x322B5E4
	0x03D58004 STR X0, [X21 + 0x30]
	0x03D58008 ADD X8, X31, 0x8
	0x03D5800C MOV X0, X19
	0x03D58010 BL 0x3D58B1C
	0x03D58014 B 0x3D5802C
	0x03D58018 MOV X0, X20
	0x03D5801C MOV X1, X19
	0x03D58020 BL 0x3D58740
	0x03D58024 MOV X21, X0
	0x03D58028 CBZ X0, 0x3D58054
	0x03D5802C ADD X2, X21, 0x14
	0x03D58030 MOV X0, X20
	0x03D58034 MOV X1, X19
	0x03D58038 BL 0x3D58C20
	0x03D5803C MOV X0, X21
	0x03D58040 LDP X20, X19, [X31 + 0x40]
	0x03D58044 LDP X22, X21, [X31 + 0x30]
	0x03D58048 LDR X30, [X31 + 0x20]
	0x03D5804C ADD X31, X31, 0x50
	0x03D58050 RET
	0x03D58054 BL 0x1C16F20
	0x03D58058 STR W8, [X31 + 0x8]
	0x03D5805C ADRP X0, 0x40E000
	0x03D58060 LDR X0, [X0 + 0x1C0]
	0x03D58064 BL 0x1C16D08
	0x03D58068 ADD X1, X31, 0x8
	0x03D5806C BL 0x1C16E04
	0x03D58070 MOV X19, X0
	0x03D58074 ADRP X0, 0x40E000
	0x03D58078 LDR X0, [X0 + 0x1F0]
	0x03D5807C BL 0x1C16D08
	0x03D58080 MOV X1, X19
	0x03D58084 MOV X2, X31
	0x03D58088 BL 0x321EFD0
	0x03D5808C MOV X19, X0
	0x03D58090 ADRP X0, 0x39B000
	0x03D58094 LDR X0, [X0 + 0x7D0]
	0x03D58098 BL 0x1C16D08
	0x03D5809C BL 0x1C16F10
	0x03D580A0 MOV X1, X19
	0x03D580A4 MOV X2, X31
	0x03D580A8 MOV X20, X0
	0x03D580AC BL 0x33B2C70
	0x03D580B0 ADRP X0, 0x40E000
	0x03D580B4 LDR X0, [X0 + 0x1F8]
	0x03D580B8 BL 0x1C16D08
	0x03D580BC MOV X1, X0
	0x03D580C0 MOV X0, X20
	0x03D580C4 BL 0x1C16DEC
	0x03D580C8 SUB X31, X31, 0x60
	0x03D580CC STR X30, [X31 + 0x20]
	0x03D580D0 STP X24, X23, [X31 + 0x30]
	0x03D580D4 STP X22, X21, [X31 + 0x40]
	0x03D580D8 STP X20, X19, [X31 + 0x50]
	0x03D580DC ADRP X21, 0x68F000
	0x03D580E0 LDRB W8, [X21 + 0xC3B]
	0x03D580E4 MOV X19, X1
	0x03D580E8 MOV X20, X0
	0x03D580EC TBNZ X8, 0x0, 0x3D5811C
	0x03D580F0 ADRP X0, 0x40E000
	0x03D580F4 LDR X0, [X0 + 0x200]
	0x03D580F8 BL 0x1C16CF4
	0x03D580FC ADRP X0, 0x40E000
	0x03D58100 LDR X0, [X0 + 0x1E8]
	0x03D58104 BL 0x1C16CF4
	0x03D58108 ADRP X0, 0x40E000
	0x03D5810C LDR X0, [X0 + 0x1A8]
	0x03D58110 BL 0x1C16CF4
	0x03D58114 MOVZ W8, 0x1
	0x03D58118 STRB W8, [X21 + 0xC3B]
	0x03D5811C CBZ X19, 0x3D58240
	0x03D58120 ADD X8, X31, 0x8
	0x03D58124 MOV X0, X19
	0x03D58128 BL 0x3D57EB8
	0x03D5812C LDR W8, [X31 + 0x8]
	0x03D58130 CMP W8, 0xE
	0x03D58134 B.NE 0x3D58244
	0x03D58138 LDR X0, [X20 + 0x20]
	0x03D5813C CBZ X0, 0x3D58240
	0x03D58140 ADRP X8, 0x40E000
	0x03D58144 LDR X8, [X8 + 0x1A8]
	0x03D58148 MOVZ W1, 0x5
	0x03D5814C MOVZ W23, 0x5
	0x03D58150 LDR X2, [X8]
	0x03D58154 BL 0x260141C
	0x03D58158 ADD X8, X31, 0x8
	0x03D5815C MOV X0, X19
	0x03D58160 BL 0x3D58B1C
	0x03D58164 MOV X0, X19
	0x03D58168 BL 0x3D58E58
	0x03D5816C MOV X0, X20
	0x03D58170 MOV X1, X19
	0x03D58174 BL 0x3D57C40
	0x03D58178 MOV X21, X0
	0x03D5817C ADD X8, X31, 0x8
	0x03D58180 MOV X0, X19
	0x03D58184 BL 0x3D57EB8
	0x03D58188 LDR W8, [X31 + 0x8]
	0x03D5818C CMP W8, 0xF
	0x03D58190 B.NE 0x3D5826C
	0x03D58194 ADRP X22, 0x40E000
	0x03D58198 ADRP X24, 0x40E000
	0x03D5819C LDR X22, [X22 + 0x1E8]
	0x03D581A0 LDR X24, [X24 + 0x200]
	0x03D581A4 ADD X8, X31, 0x8
	0x03D581A8 MOV X0, X19
	0x03D581AC BL 0x3D58B1C
	0x03D581B0 LDR X0, [X22]
	0x03D581B4 BL 0x1C16F10
	0x03D581B8 MOV X1, X31
	0x03D581BC MOV X22, X0
	0x03D581C0 BL 0x33BDD8C
	0x03D581C4 ADRP X8, 0xFFFFFFFFFCD92000
	0x03D581C8 LDR V0, [X8 + 0xEA]
	0x03D581CC STP X31, X31, [X22 + 0x28]
	0x03D581D0 STR W23, [X22 + 0x24]
	0x03D581D4 MOVZ W1, 0x1
	0x03D581D8 STR V0, [X22 + 0x1]
	0x03D581DC LDR X0, [X24]
	0x03D581E0 BL 0x1C16D6C
	0x03D581E4 CBZ X0, 0x3D58240
	0x03D581E8 MOV X23, X0
	0x03D581EC CBZ X21, 0x3D58204
	0x03D581F0 LDR X8, [X23]
	0x03D581F4 MOV X0, X21
	0x03D581F8 LDR X1, [X8 + 0x40]
	0x03D581FC BL 0x1C16E00
	0x03D58200 CBZ X0, 0x3D582E0
	0x03D58204 LDR W8, [X23 + 0x18]
	0x03D58208 CBZ W8, 0x3D582DC
	0x03D5820C ADD X2, X22, 0x14
	0x03D58210 MOV X0, X20
	0x03D58214 MOV X1, X19
	0x03D58218 STR X21, [X23 + 0x20]
	0x03D5821C STR X23, [X22 + 0x28]
	0x03D58220 BL 0x3D58C20
	0x03D58224 MOV X0, X22
	0x03D58228 LDP X20, X19, [X31 + 0x50]
	0x03D5822C LDP X22, X21, [X31 + 0x40]
	0x03D58230 LDP X24, X23, [X31 + 0x30]
	0x03D58234 LDR X30, [X31 + 0x20]
	0x03D58238 ADD X31, X31, 0x60
	0x03D5823C RET
	0x03D58240 BL 0x1C16F20
	0x03D58244 STR W8, [X31 + 0x8]
	0x03D58248 ADRP X0, 0x40E000
	0x03D5824C LDR X0, [X0 + 0x1C0]
	0x03D58250 BL 0x1C16D08
	0x03D58254 ADD X1, X31, 0x8
	0x03D58258 BL 0x1C16E04
	0x03D5825C MOV X19, X0
	0x03D58260 ADRP X0, 0x40E000
	0x03D58264 LDR X0, [X0 + 0x208]
	0x03D58268 B 0x3D58290
	0x03D5826C STR W8, [X31 + 0x8]
	0x03D58270 ADRP X0, 0x40E000
	0x03D58274 LDR X0, [X0 + 0x1C0]
	0x03D58278 BL 0x1C16D08
	0x03D5827C ADD X1, X31, 0x8
	0x03D58280 BL 0x1C16E04
	0x03D58284 MOV X19, X0
	0x03D58288 ADRP X0, 0x40E000
	0x03D5828C LDR X0, [X0 + 0x210]
	0x03D58290 BL 0x1C16D08
	0x03D58294 MOV X1, X19
	0x03D58298 MOV X2, X31
	0x03D5829C BL 0x321EFD0
	0x03D582A0 MOV X19, X0
	0x03D582A4 ADRP X0, 0x39B000
	0x03D582A8 LDR X0, [X0 + 0x7D0]
	0x03D582AC BL 0x1C16D08
	0x03D582B0 BL 0x1C16F10
	0x03D582B4 MOV X1, X19
	0x03D582B8 MOV X2, X31
	0x03D582BC MOV X20, X0
	0x03D582C0 BL 0x33B2C70
	0x03D582C4 ADRP X0, 0x40E000
	0x03D582C8 LDR X0, [X0 + 0x218]
	0x03D582CC BL 0x1C16D08
	0x03D582D0 MOV X1, X0
	0x03D582D4 MOV X0, X20
	0x03D582D8 BL 0x1C16DEC
	0x03D582DC BL 0x1C16F28
	0x03D582E0 BL 0x1C16F44
	0x03D582E4 MOV X1, X31
	0x03D582E8 BL 0x1C16DEC
	0x03D582EC SUB X31, X31, 0x50
	0x03D582F0 STP X30, X23, [X31 + 0x20]
	0x03D582F4 STP X22, X21, [X31 + 0x30]
	0x03D582F8 STP X20, X19, [X31 + 0x40]
	0x03D582FC CBZ X1, 0x3D58438
	0x03D58300 ADD X8, X31, 0x8
	0x03D58304 MOV X0, X1
	0x03D58308 MOV X19, X1
	0x03D5830C BL 0x3D57EB8
	0x03D58310 LDR W23, [X31 + 0x8]
	0x03D58314 CMP W23, 0xF
	0x03D58318 B.NE 0x3D58324
	0x03D5831C MOV W20, W31
	0x03D58320 B 0x3D583A8
	0x03D58324 ADRP X21, 0xFFFFFFFFFCE40000
	0x03D58328 MOV W20, W31
	0x03D5832C ADD X21, X21, 0x3F
	0x03D58330 MOVZ W22, 0x4
	0x03D58334 CMP W23, 0x14
	0x03D58338 B.EQ 0x3D583A8
	0x03D5833C CBNZ W20, 0x3D583A8
	0x03D58340 ADD X8, X31, 0x8
	0x03D58344 MOV X0, X19
	0x03D58348 BL 0x3D58D94
	0x03D5834C SUB W8, W23, 0x3
	0x03D58350 CMP W8, 0x3
	0x03D58354 B.HI 0x3D583C8
	0x03D58358 ADR X9, 0x14
	0x03D5835C LDRB W10, [X21, X8, LSL]
	0x03D58360 ADD X9, X9, X10, 0x2, LSL
	0x03D58364 MOVZ W20, 0x1
	0x03D58368 BR X9
	0x03D5836C LDR W8, [X31 + 0x8]
	0x03D58370 SUB W9, W8, 0x3
	0x03D58374 CMP W9, 0x4
	0x03D58378 CCMP W8, 0xF, 0x4, CS
	0x03D5837C CSEL W20, W31, W22, EQ
	0x03D58380 B 0x3D58390
	0x03D58384 MOVZ W20, 0x2
	0x03D58388 B 0x3D58390
	0x03D5838C MOVZ W20, 0x3
	0x03D58390 ADD X8, X31, 0x8
	0x03D58394 MOV X0, X19
	0x03D58398 BL 0x3D58B1C
	0x03D5839C LDR W23, [X31 + 0x8]
	0x03D583A0 CMP W23, 0xF
	0x03D583A4 B.NE 0x3D58334
	0x03D583A8 MOV X0, X19
	0x03D583AC BL 0x3D58E58
	0x03D583B0 MOV W0, W20
	0x03D583B4 LDP X20, X19, [X31 + 0x40]
	0x03D583B8 LDP X22, X21, [X31 + 0x30]
	0x03D583BC LDP X30, X23, [X31 + 0x20]
	0x03D583C0 ADD X31, X31, 0x50
	0x03D583C4 RET
	0x03D583C8 STR W23, [X31 + 0x8]
	0x03D583CC ADRP X0, 0x40E000
	0x03D583D0 LDR X0, [X0 + 0x1C0]
	0x03D583D4 BL 0x1C16D08
	0x03D583D8 ADD X1, X31, 0x8
	0x03D583DC BL 0x1C16E04
	0x03D583E0 MOV X19, X0
	0x03D583E4 ADRP X0, 0x40E000
	0x03D583E8 LDR X0, [X0 + 0x220]
	0x03D583EC BL 0x1C16D08
	0x03D583F0 MOV X1, X19
	0x03D583F4 MOV X2, X31
	0x03D583F8 BL 0x321EFD0
	0x03D583FC MOV X19, X0
	0x03D58400 ADRP X0, 0x39B000
	0x03D58404 LDR X0, [X0 + 0x7D0]
	0x03D58408 BL 0x1C16D08
	0x03D5840C BL 0x1C16F10
	0x03D58410 MOV X1, X19
	0x03D58414 MOV X2, X31
	0x03D58418 MOV X20, X0
	0x03D5841C BL 0x33B2C70
	0x03D58420 ADRP X0, 0x40E000
	0x03D58424 LDR X0, [X0 + 0x228]
	0x03D58428 BL 0x1C16D08
	0x03D5842C MOV X1, X0
	0x03D58430 MOV X0, X20
	0x03D58434 BL 0x1C16DEC
	0x03D58438 BL 0x1C16F20
	0x03D5843C STP X30, X27, [X31 - 0x50]!
	0x03D58440 STP X26, X25, [X31 + 0x10]
	0x03D58444 STP X24, X23, [X31 + 0x20]
	0x03D58448 STP X22, X21, [X31 + 0x30]
	0x03D5844C STP X20, X19, [X31 + 0x40]
	0x03D58450 ADRP X20, 0x68F000
	0x03D58454 LDRB W8, [X20 + 0xC39]
	0x03D58458 MOV X19, X0
	0x03D5845C TBNZ X8, 0x0, 0x3D584E0
	0x03D58460 ADRP X0, 0x40E000
	0x03D58464 LDR X0, [X0 + 0x1E8]
	0x03D58468 BL 0x1C16CF4
	0x03D5846C ADRP X0, 0x40E000
	0x03D58470 LDR X0, [X0 + 0x230]
	0x03D58474 BL 0x1C16CF4
	0x03D58478 ADRP X0, 0x40E000
	0x03D5847C LDR X0, [X0 + 0x238]
	0x03D58480 BL 0x1C16CF4
	0x03D58484 ADRP X0, 0x40E000
	0x03D58488 LDR X0, [X0 + 0x240]
	0x03D5848C BL 0x1C16CF4
	0x03D58490 ADRP X0, 0x40E000
	0x03D58494 LDR X0, [X0 + 0x248]
	0x03D58498 BL 0x1C16CF4
	0x03D5849C ADRP X0, 0x40E000
	0x03D584A0 LDR X0, [X0 + 0x190]
	0x03D584A4 BL 0x1C16CF4
	0x03D584A8 ADRP X0, 0x40E000
	0x03D584AC LDR X0, [X0 + 0x198]
	0x03D584B0 BL 0x1C16CF4
	0x03D584B4 ADRP X0, 0x40E000
	0x03D584B8 LDR X0, [X0 + 0x1A0]
	0x03D584BC BL 0x1C16CF4
	0x03D584C0 ADRP X0, 0x40E000
	0x03D584C4 LDR X0, [X0 + 0x1B0]
	0x03D584C8 BL 0x1C16CF4
	0x03D584CC ADRP X0, 0x40E000
	0x03D584D0 LDR X0, [X0 + 0x1B8]
	0x03D584D4 BL 0x1C16CF4
	0x03D584D8 MOVZ W8, 0x1
	0x03D584DC STRB W8, [X20 + 0xC39]
	0x03D584E0 LDR X0, [X19 + 0x20]
	0x03D584E4 CBZ X0, 0x3D5871C
	0x03D584E8 ADRP X23, 0x40E000
	0x03D584EC LDR X23, [X23 + 0x198]
	0x03D584F0 LDR X1, [X23]
	0x03D584F4 BL 0x26013CC
	0x03D584F8 LDR X8, [X19 + 0x18]
	0x03D584FC CBZ X8, 0x3D5871C
	0x03D58500 ADRP X24, 0x40E000
	0x03D58504 LDR X24, [X24 + 0x1A0]
	0x03D58508 MOV W20, W0
	0x03D5850C MOV X0, X8
	0x03D58510 LDR X1, [X24]
	0x03D58514 BL 0x26022C0
	0x03D58518 LDR X8, [X19 + 0x18]
	0x03D5851C CBZ X8, 0x3D5871C
	0x03D58520 LDR X1, [X24]
	0x03D58524 MOV X21, X0
	0x03D58528 MOV X0, X8
	0x03D5852C BL 0x26022C0
	0x03D58530 LDR X8, [X19 + 0x10]
	0x03D58534 CBZ X8, 0x3D5871C
	0x03D58538 LDP W2, W9, [X8 + 0x18]
	0x03D5853C MOV X22, X0
	0x03D58540 ADD W9, W9, 0x1
	0x03D58544 CMP W2, 0x1
	0x03D58548 STP W31, W9, [X8 + 0x18]
	0x03D5854C B.LT 0x3D58568
	0x03D58550 LDR X0, [X8 + 0x10]
	0x03D58554 MOV W1, W31
	0x03D58558 MOV X3, X31
	0x03D5855C BL 0x339FA34
	0x03D58560 LDR X8, [X19 + 0x10]
	0x03D58564 CBZ X8, 0x3D5871C
	0x03D58568 ADRP X25, 0x40E000
	0x03D5856C LDR X25, [X25 + 0x230]
	0x03D58570 LDR W11, [X8 + 0x1C]
	0x03D58574 LDR X9, [X8 + 0x10]
	0x03D58578 LDR X10, [X25]
	0x03D5857C ADD W11, W11, 0x1
	0x03D58580 STR W11, [X8 + 0x1C]
	0x03D58584 CBZ X9, 0x3D5871C
	0x03D58588 LDRSW X11, [X8 + 0x18]
	0x03D5858C LDR W12, [X9 + 0x18]
	0x03D58590 CMP W11, W12
	0x03D58594 B.CS 0x3D585AC
	0x03D58598 ADD W10, W11, 0x1
	0x03D5859C ADD X9, X9, X11, 0x3, LSL
	0x03D585A0 STR W10, [X8 + 0x18]
	0x03D585A4 STR X22, [X9 + 0x20]
	0x03D585A8 B 0x3D585C4
	0x03D585AC LDR X9, [X10 + 0x20]
	0x03D585B0 MOV X0, X8
	0x03D585B4 MOV X1, X22
	0x03D585B8 LDR X9, [X9 + 0xC0]
	0x03D585BC LDR X2, [X9 + 0x70]
	0x03D585C0 BL 0x301BF90
	0x03D585C4 LDR X0, [X19 + 0x10]
	0x03D585C8 CBZ X0, 0x3D5871C
	0x03D585CC LDR W10, [X0 + 0x1C]
	0x03D585D0 LDR X8, [X0 + 0x10]
	0x03D585D4 LDR X9, [X25]
	0x03D585D8 ADD W10, W10, 0x1
	0x03D585DC STR W10, [X0 + 0x1C]
	0x03D585E0 CBZ X8, 0x3D5871C
	0x03D585E4 LDRSW X10, [X0 + 0x18]
	0x03D585E8 LDR W11, [X8 + 0x18]
	0x03D585EC CMP W10, W11
	0x03D585F0 B.CS 0x3D58608
	0x03D585F4 ADD W9, W10, 0x1
	0x03D585F8 ADD X8, X8, X10, 0x3, LSL
	0x03D585FC STR W9, [X0 + 0x18]
	0x03D58600 STR X21, [X8 + 0x20]
	0x03D58604 B 0x3D5861C
	0x03D58608 LDR X8, [X9 + 0x20]
	0x03D5860C MOV X1, X21
	0x03D58610 LDR X8, [X8 + 0xC0]
	0x03D58614 LDR X2, [X8 + 0x70]
	0x03D58618 BL 0x301BF90
	0x03D5861C LDR X0, [X19 + 0x20]
	0x03D58620 CBZ X0, 0x3D5871C
	0x03D58624 ADRP X21, 0x40E000
	0x03D58628 ADRP X25, 0x40E000
	0x03D5862C ADRP X22, 0x40E000
	0x03D58630 ADRP X26, 0x40E000
	0x03D58634 ADRP X27, 0x40E000
	0x03D58638 LDR X21, [X21 + 0x1E8]
	0x03D5863C LDR X25, [X25 + 0x248]
	0x03D58640 LDR X22, [X22 + 0x1B0]
	0x03D58644 LDR X26, [X26 + 0x190]
	0x03D58648 LDR X27, [X27 + 0x240]
	0x03D5864C LDR W8, [X0 + 0x18]
	0x03D58650 CMP W8, 0x1
	0x03D58654 B.LT 0x3D586B0
	0x03D58658 LDR X1, [X26]
	0x03D5865C BL 0x2601388
	0x03D58660 CMP W20, W0
	0x03D58664 B.NE 0x3D586B0
	0x03D58668 LDR X0, [X19 + 0x18]
	0x03D5866C CBZ X0, 0x3D5871C
	0x03D58670 LDR X1, [X24]
	0x03D58674 BL 0x26022C0
	0x03D58678 LDR X8, [X19 + 0x10]
	0x03D5867C CBZ X8, 0x3D5871C
	0x03D58680 LDR X3, [X27]
	0x03D58684 MOV X2, X0
	0x03D58688 MOV X0, X8
	0x03D5868C MOV W1, W31
	0x03D58690 BL 0x301CEEC
	0x03D58694 LDR X0, [X19 + 0x20]
	0x03D58698 CBZ X0, 0x3D5871C
	0x03D5869C LDR X1, [X23]
	0x03D586A0 BL 0x26013CC
	0x03D586A4 LDR X0, [X19 + 0x20]
	0x03D586A8 CBNZ X0, 0x3D5864C
	0x03D586AC B 0x3D5871C
	0x03D586B0 LDR X0, [X21]
	0x03D586B4 BL 0x1C16F10
	0x03D586B8 MOV X1, X31
	0x03D586BC MOV X21, X0
	0x03D586C0 BL 0x33BDD8C
	0x03D586C4 ADRP X8, 0xFFFFFFFFFCD92000
	0x03D586C8 LDR V0, [X8 + 0xEA]
	0x03D586CC MOV X23, X21
	0x03D586D0 STR X31, [X21 + 0x30]
	0x03D586D4 STR V0, [X21 + 0x1]
	0x03D586D8 STR X31, [X23 + 0x28]!
	0x03D586DC STR W20, [X21 + 0x24]
	0x03D586E0 LDR X0, [X19 + 0x10]
	0x03D586E4 CBZ X0, 0x3D5871C
	0x03D586E8 LDR X1, [X25]
	0x03D586EC BL 0x301DDC4
	0x03D586F0 STR X0, [X23]
	0x03D586F4 LDR X0, [X19 + 0x18]
	0x03D586F8 CBZ X0, 0x3D5871C
	0x03D586FC LDR X2, [X22]
	0x03D58700 MOV X1, X21
	0x03D58704 LDP X20, X19, [X31 + 0x40]
	0x03D58708 LDP X22, X21, [X31 + 0x30]
	0x03D5870C LDP X24, X23, [X31 + 0x20]
	0x03D58710 LDP X26, X25, [X31 + 0x10]
	0x03D58714 LDP X30, X27, [X31], #0x50
	0x03D58718 B 0x2602314
	0x03D5871C BL 0x1C16F20
	0x03D58720 LDR W8, [X0]
	0x03D58724 CMP W8, 0xF
	0x03D58728 B.NE 0x3D58734
	0x03D5872C MOVZ W0, 0x1
	0x03D58730 RET
	0x03D58734 CMP W8, 0x14
	0x03D58738 CSET W0, EQ
	0x03D5873C RET
	0x03D58740 SUB X31, X31, 0x50
	0x03D58744 STR X30, [X31 + 0x20]
	0x03D58748 STP X22, X21, [X31 + 0x30]
	0x03D5874C STP X20, X19, [X31 + 0x40]
	0x03D58750 ADRP X20, 0x68F000
	0x03D58754 LDRB W8, [X20 + 0xC3C]
	0x03D58758 MOV X19, X1
	0x03D5875C MOV X21, X0
	0x03D58760 TBNZ X8, 0x0, 0x3D587CC
	0x03D58764 ADRP X0, 0x40E000
	0x03D58768 LDR X0, [X0 + 0x250]
	0x03D5876C BL 0x1C16CF4
	0x03D58770 ADRP X0, 0x40E000
	0x03D58774 LDR X0, [X0 + 0x258]
	0x03D58778 BL 0x1C16CF4
	0x03D5877C ADRP X0, 0x39B000
	0x03D58780 LDR X0, [X0 + 0xDF8]
	0x03D58784 BL 0x1C16CF4
	0x03D58788 ADRP X0, 0x40E000
	0x03D5878C LDR X0, [X0 + 0x1E8]
	0x03D58790 BL 0x1C16CF4
	0x03D58794 ADRP X0, 0x40D000
	0x03D58798 LDR X0, [X0 + 0x5F0]
	0x03D5879C BL 0x1C16CF4
	0x03D587A0 ADRP X0, 0x39B000
	0x03D587A4 LDR X0, [X0 + 0x6C0]
	0x03D587A8 BL 0x1C16CF4
	0x03D587AC ADRP X0, 0x39C000
	0x03D587B0 LDR X0, [X0 + 0x2A8]
	0x03D587B4 BL 0x1C16CF4
	0x03D587B8 ADRP X0, 0x39B000
	0x03D587BC LDR X0, [X0 + 0x988]
	0x03D587C0 BL 0x1C16CF4
	0x03D587C4 MOVZ W8, 0x1
	0x03D587C8 STRB W8, [X20 + 0xC3C]
	0x03D587CC STR X31, [X31 + 0x28]
	0x03D587D0 CBZ X19, 0x3D5899C
	0x03D587D4 ADD X8, X31, 0x8
	0x03D587D8 MOV X0, X19
	0x03D587DC BL 0x3D57EB8
	0x03D587E0 LDR W8, [X31 + 0x8]
	0x03D587E4 CMP W8, 0x12
	0x03D587E8 B.NE 0x3D589A0
	0x03D587EC ADD X8, X31, 0x8
	0x03D587F0 MOV X0, X19
	0x03D587F4 BL 0x3D58B1C
	0x03D587F8 LDR W8, [X31 + 0x8]
	0x03D587FC CMP W8, 0x8
	0x03D58800 B.EQ 0x3D58850
	0x03D58804 CMP W8, 0x1
	0x03D58808 B.NE 0x3D589F0
	0x03D5880C ADRP X8, 0x40D000
	0x03D58810 LDR X8, [X8 + 0x5F0]
	0x03D58814 LDR X20, [X31 + 0x10]
	0x03D58818 LDR X0, [X8]
	0x03D5881C LDR W8, [X0 + 0xE0]
	0x03D58820 CBNZ W8, 0x3D58828
	0x03D58824 BL 0x1C16DFC
	0x03D58828 ADD X1, X31, 0x28
	0x03D5882C MOV X0, X20
	0x03D58830 MOV X2, X31
	0x03D58834 BL 0x3D4AC78
	0x03D58838 TBZ X0, 0x0, 0x3D58864
	0x03D5883C LDR X1, [X31 + 0x28]
	0x03D58840 MOV X0, X21
	0x03D58844 BL 0x3D58E98
	0x03D58848 MOV X20, X0
	0x03D5884C B 0x3D58954
	0x03D58850 MOV X0, X21
	0x03D58854 MOV X1, X19
	0x03D58858 BL 0x3D58FE8
	0x03D5885C MOV X20, X0
	0x03D58860 B 0x3D58960
	0x03D58864 ADRP X8, 0x39B000
	0x03D58868 LDR X8, [X8 + 0x6C0]
	0x03D5886C LDR X0, [X8]
	0x03D58870 ADRP X8, 0x40E000
	0x03D58874 LDR X8, [X8 + 0x250]
	0x03D58878 LDR W9, [X0 + 0xE0]
	0x03D5887C LDR X21, [X8]
	0x03D58880 CBNZ W9, 0x3D58888
	0x03D58884 BL 0x1C16DFC
	0x03D58888 MOV X0, X21
	0x03D5888C MOV X1, X31
	0x03D58890 BL 0x338C698
	0x03D58894 CBZ X20, 0x3D58A60
	0x03D58898 ADRP X8, 0x39C000
	0x03D5889C LDR X8, [X8 + 0x2A8]
	0x03D588A0 ADRP X9, 0x39B000
	0x03D588A4 LDR X9, [X9 + 0x988]
	0x03D588A8 MOV X21, X0
	0x03D588AC LDR X1, [X8]
	0x03D588B0 LDR X2, [X9]
	0x03D588B4 MOV X0, X20
	0x03D588B8 MOV X3, X31
	0x03D588BC BL 0x32293BC
	0x03D588C0 ADRP X8, 0x39B000
	0x03D588C4 LDR X8, [X8 + 0xDF8]
	0x03D588C8 MOV X22, X0
	0x03D588CC LDR X0, [X8]
	0x03D588D0 LDR W8, [X0 + 0xE0]
	0x03D588D4 CBNZ W8, 0x3D588DC
	0x03D588D8 BL 0x1C16DFC
	0x03D588DC MOVZ W2, 0x1
	0x03D588E0 MOV X0, X21
	0x03D588E4 MOV X1, X22
	0x03D588E8 MOV X3, X31
	0x03D588EC BL 0x33AF1B8
	0x03D588F0 CBZ X0, 0x3D58920
	0x03D588F4 ADRP X8, 0x40E000
	0x03D588F8 LDR X8, [X8 + 0x258]
	0x03D588FC LDR X9, [X0]
	0x03D58900 LDR X1, [X8]
	0x03D58904 LDR X8, [X9 + 0x40]
	0x03D58908 LDR X9, [X1 + 0x40]
	0x03D5890C CMP X8, X9
	0x03D58910 B.NE 0x3D58A64
	0x03D58914 BL 0x1C16E08
	0x03D58918 LDR W21, [X0]
	0x03D5891C B 0x3D58924
	0x03D58920 MOV W21, W31
	0x03D58924 ADRP X8, 0x40E000
	0x03D58928 LDR X8, [X8 + 0x1E8]
	0x03D5892C LDR X0, [X8]
	0x03D58930 BL 0x1C16F10
	0x03D58934 MOV X1, X31
	0x03D58938 MOV X20, X0
	0x03D5893C BL 0x33BDD8C
	0x03D58940 ADRP X8, 0xFFFFFFFFFCD93000
	0x03D58944 LDR V0, [X8 + 0xA6]
	0x03D58948 STP X31, X31, [X20 + 0x28]
	0x03D5894C STP W21, W31, [X20 + 0x20]
	0x03D58950 STR V0, [X20 + 0x1]
	0x03D58954 ADD X8, X31, 0x8
	0x03D58958 MOV X0, X19
	0x03D5895C BL 0x3D58B1C
	0x03D58960 ADD X8, X31, 0x8
	0x03D58964 MOV X0, X19
	0x03D58968 BL 0x3D57EB8
	0x03D5896C LDR W8, [X31 + 0x8]
	0x03D58970 CMP W8, 0x13
	0x03D58974 B.NE 0x3D589C8
	0x03D58978 ADD X8, X31, 0x8
	0x03D5897C MOV X0, X19
	0x03D58980 BL 0x3D58B1C
	0x03D58984 MOV X0, X20
	0x03D58988 LDP X20, X19, [X31 + 0x40]
	0x03D5898C LDP X22, X21, [X31 + 0x30]
	0x03D58990 LDR X30, [X31 + 0x20]
	0x03D58994 ADD X31, X31, 0x50
	0x03D58998 RET
	0x03D5899C BL 0x1C16F20
	0x03D589A0 STR W8, [X31 + 0x8]
	0x03D589A4 ADRP X0, 0x40E000
	0x03D589A8 LDR X0, [X0 + 0x1C0]
	0x03D589AC BL 0x1C16D08
	0x03D589B0 ADD X1, X31, 0x8
	0x03D589B4 BL 0x1C16E04
	0x03D589B8 MOV X19, X0
	0x03D589BC ADRP X0, 0x40E000
	0x03D589C0 LDR X0, [X0 + 0x260]
	0x03D589C4 B 0x3D58A14
	0x03D589C8 STR W8, [X31 + 0x8]
	0x03D589CC ADRP X0, 0x40E000
	0x03D589D0 LDR X0, [X0 + 0x1C0]
	0x03D589D4 BL 0x1C16D08
	0x03D589D8 ADD X1, X31, 0x8
	0x03D589DC BL 0x1C16E04
	0x03D589E0 MOV X19, X0
	0x03D589E4 ADRP X0, 0x40E000
	0x03D589E8 LDR X0, [X0 + 0x268]
	0x03D589EC B 0x3D58A14
	0x03D589F0 STR W8, [X31 + 0x8]
	0x03D589F4 ADRP X0, 0x40E000
	0x03D589F8 LDR X0, [X0 + 0x1C0]
	0x03D589FC BL 0x1C16D08
	0x03D58A00 ADD X1, X31, 0x8
	0x03D58A04 BL 0x1C16E04
	0x03D58A08 MOV X19, X0
	0x03D58A0C ADRP X0, 0x40E000
	0x03D58A10 LDR X0, [X0 + 0x270]
	0x03D58A14 BL 0x1C16D08
	0x03D58A18 MOV X1, X19
	0x03D58A1C MOV X2, X31
	0x03D58A20 BL 0x321EFD0
	0x03D58A24 MOV X19, X0
	0x03D58A28 ADRP X0, 0x39B000
	0x03D58A2C LDR X0, [X0 + 0x7D0]
	0x03D58A30 BL 0x1C16D08
	0x03D58A34 BL 0x1C16F10
	0x03D58A38 MOV X1, X19
	0x03D58A3C MOV X2, X31
	0x03D58A40 MOV X20, X0
	0x03D58A44 BL 0x33B2C70
	0x03D58A48 ADRP X0, 0x40E000
	0x03D58A4C LDR X0, [X0 + 0x278]
	0x03D58A50 BL 0x1C16D08
	0x03D58A54 MOV X1, X0
	0x03D58A58 MOV X0, X20
	0x03D58A5C BL 0x1C16DEC
	0x03D58A60 BL 0x1C16F20
	0x03D58A64 BL 0x1C171E0
	0x03D58A68 B 0x3D58A7C
	0x03D58A6C B 0x3D58A7C
	0x03D58A70 B 0x3D58A7C
	0x03D58A74 B 0x3D58A7C
	0x03D58A78 B 0x3D58A7C
	0x03D58A7C MOV X19, X0
	0x03D58A80 CMP W1, 0x1
	0x03D58A84 B.NE 0x3D58B10
	0x03D58A88 MOV X0, X19
	0x03D58A8C BL 0x3EB1AD0
	0x03D58A90 MOV X19, X0
	0x03D58A94 ADRP X0, 0x39B000
	0x03D58A98 LDR X0, [X0 + 0x7D0]
	0x03D58A9C BL 0x1C16D08
	0x03D58AA0 LDR X8, [X19]
	0x03D58AA4 LDR X1, [X8]
	0x03D58AA8 BL 0x1C17270
	0x03D58AAC TBZ X0, 0x0, 0x3D58AE8
	0x03D58AB0 BL 0x3EB1AE0
	0x03D58AB4 ADRP X0, 0x40E000
	0x03D58AB8 LDR X0, [X0 + 0x280]
	0x03D58ABC BL 0x1C16D08
	0x03D58AC0 MOV X19, X0
	0x03D58AC4 ADRP X0, 0x3A3000
	0x03D58AC8 LDR X0, [X0 + 0x9B0]
	0x03D58ACC BL 0x1C16D08
	0x03D58AD0 MOV X2, X0
	0x03D58AD4 MOV X0, X19
	0x03D58AD8 MOV X1, X20
	0x03D58ADC MOV X3, X31
	0x03D58AE0 BL 0x32274B8
	0x03D58AE4 B 0x3D58A24
	0x03D58AE8 MOVZ W0, 0x8
	0x03D58AEC BL 0x3EB1AF0
	0x03D58AF0 LDR X8, [X19]
	0x03D58AF4 STR X8, [X0]
	0x03D58AF8 ADRP X1, 0x15C000
	0x03D58AFC ADD X1, X1, 0xE58
	0x03D58B00 MOV X2, X31
	0x03D58B04 BL 0x3EB1B00
	0x03D58B08 MOV X19, X0
	0x03D58B0C BL 0x3EB1AE0
	0x03D58B10 MOV X0, X19
	0x03D58B14 BL 0x1D2C690
	0x03D58B18 BL 0x1990590
	0x03D58B1C SUB X31, X31, 0x70
	0x03D58B20 STR X30, [X31 + 0x40]
	0x03D58B24 STP X22, X21, [X31 + 0x50]
	0x03D58B28 STP X20, X19, [X31 + 0x60]
	0x03D58B2C MRS X21, 0xC000
	0x03D58B30 LDR X9, [X21 + 0x28]
	0x03D58B34 ADRP X22, 0x68F000
	0x03D58B38 MOV X20, X0
	0x03D58B3C MOV X19, X8
	0x03D58B40 STR X9, [X31 + 0x38]
	0x03D58B44 LDRB W9, [X22 + 0xC41]
	0x03D58B48 TBNZ X9, 0x0, 0x3D58B60
	0x03D58B4C ADRP X0, 0x40E000
	0x03D58B50 LDR X0, [X0 + 0x1D8]
	0x03D58B54 BL 0x1C16CF4
	0x03D58B58 MOVZ W8, 0x1
	0x03D58B5C STRB W8, [X22 + 0xC41]
	0x03D58B60 ADD X8, X31, 0x0
	0x03D58B64 MOV X0, X20
	0x03D58B68 BL 0x3D57EB8
	0x03D58B6C LDR W8, [X31]
	0x03D58B70 LDUR V0, [X31 + 0x4]
	0x03D58B74 LDR W9, [X31 + 0x14]
	0x03D58B78 STR V0, [X31 + 0x2]
	0x03D58B7C STR W9, [X31 + 0x30]
	0x03D58B80 CBZ W8, 0x3D58BD0
	0x03D58B84 LDR W8, [X20 + 0x18]
	0x03D58B88 MOV X0, X20
	0x03D58B8C ADD W8, W8, 0x1
	0x03D58B90 STR W8, [X20 + 0x18]
	0x03D58B94 ADD X8, X31, 0x0
	0x03D58B98 BL 0x3D57EB8
	0x03D58B9C LDUR V0, [X31 + 0x4]
	0x03D58BA0 LDR W8, [X31 + 0x14]
	0x03D58BA4 STR V0, [X31 + 0x2]
	0x03D58BA8 STR W8, [X31 + 0x30]
	0x03D58BAC LDR X9, [X20 + 0x10]
	0x03D58BB0 LDR W8, [X31]
	0x03D58BB4 CBZ X9, 0x3D58C18
	0x03D58BB8 LDR W10, [X20 + 0x18]
	0x03D58BBC LDR W9, [X9 + 0x18]
	0x03D58BC0 CMP W10, W9
	0x03D58BC4 B.NE 0x3D58BD0
	0x03D58BC8 MOVN W9, 0x0
	0x03D58BCC STR W9, [X20 + 0x18]
	0x03D58BD0 LDR V0, [X31 + 0x2]
	0x03D58BD4 LDR W9, [X31 + 0x30]
	0x03D58BD8 STR W8, [X19]
	0x03D58BDC STR V0, [X31]
	0x03D58BE0 LDR V0, [X31]
	0x03D58BE4 STR W9, [X31 + 0x10]
	0x03D58BE8 MOV W9, W9
	0x03D58BEC STR W9, [X19 + 0x14]
	0x03D58BF0 STUR V0, [X19 + 0x4]
	0x03D58BF4 LDR X8, [X21 + 0x28]
	0x03D58BF8 LDR X9, [X31 + 0x38]
	0x03D58BFC CMP X8, X9
	0x03D58C00 B.NE 0x3D58C1C
	0x03D58C04 LDP X20, X19, [X31 + 0x60]
	0x03D58C08 LDP X22, X21, [X31 + 0x50]
	0x03D58C0C LDR X30, [X31 + 0x40]
	0x03D58C10 ADD X31, X31, 0x70
	0x03D58C14 RET
	0x03D58C18 BL 0x1C16F20
	0x03D58C1C BL 0x3EB1B20
	0x03D58C20 SUB X31, X31, 0x40
	0x03D58C24 STR X30, [X31 + 0x20]
	0x03D58C28 STP X20, X19, [X31 + 0x30]
	0x03D58C2C CBZ X1, 0x3D58D20
	0x03D58C30 ADD X8, X31, 0x8
	0x03D58C34 MOV X0, X1
	0x03D58C38 MOV X20, X2
	0x03D58C3C MOV X19, X1

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+128], D15
	003 Move [X31+136], D14
	004 Move [X31+144], D13
	005 Move [X31+152], D12
	006 Move [X31+160], D11
	007 Move [X31+168], D10
	008 Move [X31+176], D9
	009 Move [X31+184], D8
	010 Move [X31+192], X29
	011 Move [X31+200], X30
	012 Move [X31+208], X28
	013 Move [X31+216], X27
	014 Move [X31+224], X26
	015 Move [X31+232], X25
	016 Move [X31+240], X24
	017 Move [X31+248], X23
	018 Move [X31+256], X22
	019 Move [X31+264], X21
	020 Move [X31+272], X20
	021 Move [X31+280], X19
	022 Move X21, 0x691000
	023 Move W8, [X21+3139]
	024 Move X19, X1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {56}
	030 Move X0, 0x39E000
	031 Move X0, [X0+368]
	032 Call 0x1C17CF4
	033 Move X0, 0x39C000
	034 Move X0, [X0+2600]
	035 Call 0x1C17CF4
	036 Move X0, 0x40F000
	037 Move X0, [X0+360]
	038 Call 0x1C17CF4
	039 Move X0, 0x40F000
	040 Move X0, [X0+368]
	041 Call 0x1C17CF4
	042 Move X0, 0x39C000
	043 Move X0, [X0+2512]
	044 Call 0x1C17CF4
	045 Move X0, 0x40F000
	046 Move X0, [X0+376]
	047 Call 0x1C17CF4
	048 Move X0, 0x40F000
	049 Move X0, [X0+384]
	050 Call 0x1C17CF4
	051 Move X0, 0x40F000
	052 Move X0, [X0+392]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X21+3139], W8
	056 NotImplemented "Instruction STRH not yet implemented."
	057 Move X23, X20
	058 Add X23, X23, 16
	059 Move X8, [X23]
	060 Compare X8, 0
	061 JumpIfEqual {837}
	062 Move W2, [X8+24]
	063 Move W9, [X8+28]
	064 Add W9, W9, 1
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move [X8+24], W31
	067 Move [X8+28], W9
	068 Move X0, [X8+16]
	069 Move W1, W31
	070 Move X3, X31
	071 Call Array.Clear, X0, X1, X2
	072 Move [X20+24], W31
	073 Compare X19, 0
	074 JumpIfEqual {837}
	075 Move W1, 32
	076 Move X0, X19
	077 Move X2, X31
	078 Call String.Trim, X0, X1
	079 Compare X0, 0
	080 JumpIfEqual {837}
	081 Move X1, X31
	082 Call String.ToLowerInvariant, X0
	083 Compare X0, 0
	084 JumpIfEqual {837}
	085 Move W8, [X0+16]
	086 Move X24, 0x40F000
	087 Move X24, [X24+360]
	088 Move X19, X0
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X8, -52862976
	091 Move V0, [X8+3784]
	092 Move X25, 0x39E000
	093 Move X26, 0x39C000
	094 Move X27, 0x39C000
	095 Move X9, -52858880
	096 Move X25, [X25+368]
	097 Move X26, [X26+2512]
	098 Move X27, [X27+2600]
	099 Move [X31+88], D0
	100 Move V0, [X9+1272]
	101 Move X10, -52858880
	102 Move X8, -52862976
	103 Move X9, -52862976
	104 Move [X31+80], D0
	105 Move V0, [X10+696]
	106 Move X10, -52862976
	107 Move X28, -52162560
	108 Move W20, W31
	109 Move [X31+72], D0
	110 Move V0, [X8+1392]
	111 Move X8, -52862976
	112 Add X28, X28, 30
	113 Move W29, 24
	114 Move [X31+8], D0
	115 Move V0, [X9+2680]
	116 Move X9, -52862976
	117 Move V15, [X9+2920]
	118 Move X9, -52858880
	119 Move [X31+64], D0
	120 Move V0, [X10+1384]
	121 Move X10, -52862976
	122 Move [X31+56], D0
	123 Move V0, [X8+2264]
	124 Move X8, -52858880
	125 Move [X31+48], D0
	126 Move V0, [X10+3480]
	127 Move X10, -52862976
	128 Move V10, [X10+2200]
	129 Move X10, -52862976
	130 Move [X31+40], D0
	131 Move V0, [X8+608]
	132 Move X8, -52862976
	133 Move V11, [X10+1376]
	134 Move X10, -52862976
	135 Move [X31+32], D0
	136 Move V0, [X9+856]
	137 Move X9, -52862976
	138 Move V12, [X9+3688]
	139 Move X9, -52858880
	140 Move [X31+24], D0
	141 Move V0, [X8+3776]
	142 Move X8, -52858880
	143 Move V13, [X8+464]
	144 Move X8, -52858880
	145 Move V8, [X9+688]
	146 Move V14, [X10+976]
	147 Move V9, [X8+504]
	148 Move [X31+16], D0
	149 Move X0, X19
	150 Move W1, W20
	151 Move X2, X31
	152 Call String.get_Chars, X0, X1
	153 And W8, W0, 0xFFFF
	154 Move W21, W0
	155 NotImplemented "Instruction CMP not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Subtract W8, W8, 32
	158 NotImplemented "Instruction CMP not yet implemented."
	159 NotImplemented "Instruction ADR not yet implemented."
	160 NotImplemented "Instruction LDRH not yet implemented."
	161 Add X9, X9, X10
	162 CallNoReturn X9
	163 Move W2, 32
	164 Move X0, X19
	165 Move W1, W20
	166 Call StyleSyntaxTokenizer.IsNextCharacter, X0, X1, X2
	167 Add W20, W20, 1
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {163}
	172 Move X0, [X23]
	173 Compare X0, 0
	174 JumpIfEqual {837}
	175 Move W10, [X0+28]
	176 Move X8, [X0+16]
	177 Move X9, [X24]
	178 Add W10, W10, 1
	179 Move [X0+28], W10
	180 Compare X8, 0
	181 JumpIfEqual {837}
	182 NotImplemented "Instruction LDRSW not yet implemented."
	183 Move W11, [X8+24]
	184 Subtract W20, W20, 1
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move V0, [X31+88]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X0, [X23]
	192 Compare X0, 0
	193 JumpIfEqual {837}
	194 Move W10, [X0+28]
	195 Move X8, [X0+16]
	196 Move X9, [X24]
	197 Add W10, W10, 1
	198 Move [X0+28], W10
	199 Compare X8, 0
	200 JumpIfEqual {837}
	201 NotImplemented "Instruction LDRSW not yet implemented."
	202 Move W11, [X8+24]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Add W9, W10, 1
	205 NotImplemented "Instruction MADD not yet implemented."
	206 Move [X0+24], W9
	207 Move [X8+32], D9
	208 NotImplemented "Instruction CMP not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X0, [X23]
	211 Compare X0, 0
	212 JumpIfEqual {837}
	213 Move W10, [X0+28]
	214 Move X8, [X0+16]
	215 Move X9, [X24]
	216 Add W10, W10, 1
	217 Move [X0+28], W10
	218 Compare X8, 0
	219 JumpIfEqual {837}
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Move W11, [X8+24]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Add W9, W10, 1
	224 NotImplemented "Instruction MADD not yet implemented."
	225 Move [X0+24], W9
	226 Move [X8+32], D11
	227 NotImplemented "Instruction CMP not yet implemented."
	228 NotImplemented "Instruction CMP not yet implemented."
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X0, [X23]
	231 Compare X0, 0
	232 JumpIfEqual {837}
	233 Move W10, [X0+28]
	234 Move X8, [X0+16]
	235 Move X9, [X24]
	236 Add W10, W10, 1
	237 Move [X0+28], W10
	238 Compare X8, 0
	239 JumpIfEqual {837}
	240 NotImplemented "Instruction LDRSW not yet implemented."
	241 Move W11, [X8+24]
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move V0, [X31+24]
	244 Move X0, [X25]
	245 Move W8, [X0+224]
	246 Compare W8, 0
	247 JumpIfNotEqual {249}
	248 Call 0x1C17DFC
	249 Move W0, W21
	250 Move X1, X31
	251 Call Char.IsNumber, X0
	252 Move TEMP, X0
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfNotEqual {336}
	256 Move X0, X19
	257 Move W1, W20
	258 Call StyleSyntaxTokenizer.IsNextNumber, X0, X1
	259 Move TEMP, X0
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfNotEqual {550}
	263 Move W22, W31
	264 Add W8, W20, W22
	265 Add W1, W8, 1
	266 Move X0, X19
	267 Call StyleSyntaxTokenizer.IsNextNumber, X0, X1
	268 Add W22, W22, 1
	269 Move TEMP, X0
	270 And TEMP, TEMP, 1
	271 Compare TEMP, 1
	272 JumpIfEqual {264}
	273 Add W21, W20, W22
	274 Add W2, W22, 1
	275 Move X0, [X23]
	276 Compare X0, 0
	277 JumpIfEqual {837}
	278 Move W10, [X0+28]
	279 Move X8, [X0+16]
	280 Move X9, [X24]
	281 Add W10, W10, 1
	282 Move [X0+28], W10
	283 Compare X8, 0
	284 JumpIfEqual {837}
	285 NotImplemented "Instruction LDRSW not yet implemented."
	286 Move W11, [X8+24]
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Add W9, W10, 1
	289 NotImplemented "Instruction MADD not yet implemented."
	290 Move [X0+24], W9
	291 Move [X8+32], D13
	292 Move W2, 124
	293 Move X0, X19
	294 Move W1, W20
	295 Call StyleSyntaxTokenizer.IsNextCharacter, X0, X1, X2
	296 Move X8, [X23]
	297 Move TEMP, X0
	298 And TEMP, TEMP, 1
	299 Compare TEMP, 1
	300 JumpIfNotEqual {516}
	301 Compare X8, 0
	302 JumpIfEqual {837}
	303 Move W11, [X8+28]
	304 Move X9, [X8+16]
	305 Move X10, [X24]
	306 Add W11, W11, 1
	307 Move [X8+28], W11
	308 Compare X9, 0
	309 JumpIfEqual {837}
	310 NotImplemented "Instruction LDRSW not yet implemented."
	311 Move W12, [X9+24]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Add W10, W11, 1
	314 NotImplemented "Instruction MADD not yet implemented."
	315 Move [X8+24], W10
	316 Move [X9+32], D8
	317 Move [X9+40], X31
	318 Move [X9+48], X31
	319 Move X0, [X23]
	320 Compare X0, 0
	321 JumpIfEqual {837}
	322 Move W10, [X0+28]
	323 Move X8, [X0+16]
	324 Move X9, [X24]
	325 Add W10, W10, 1
	326 Move [X0+28], W10
	327 Compare X8, 0
	328 JumpIfEqual {837}
	329 NotImplemented "Instruction LDRSW not yet implemented."
	330 Move W11, [X8+24]
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Add W9, W10, 1
	333 NotImplemented "Instruction MADD not yet implemented."
	334 Move [X0+24], W9
	335 Move [X8+32], D12
	336 Move X0, [X25]
	337 Move W8, [X0+224]
	338 Compare W8, 0
	339 JumpIfNotEqual {341}
	340 Call 0x1C17DFC
	341 Move W0, W21
	342 Move X1, X31
	343 Call Char.IsLetter, X0
	344 Move TEMP, X0
	345 And TEMP, TEMP, 1
	346 Compare TEMP, 1
	347 JumpIfNotEqual {578}
	348 Move X0, X19
	349 Move W1, W20
	350 Call StyleSyntaxTokenizer.IsNextLetterOrDash, X0, X1
	351 Move TEMP, X0
	352 And TEMP, TEMP, 1
	353 Compare TEMP, 1
	354 JumpIfNotEqual {679}
	355 Move W22, W31
	356 Add W8, W20, W22
	357 Add W1, W8, 1
	358 Move X0, X19
	359 Call StyleSyntaxTokenizer.IsNextLetterOrDash, X0, X1
	360 Add W22, W22, 1
	361 Move TEMP, X0
	362 And TEMP, TEMP, 1
	363 Compare TEMP, 1
	364 JumpIfEqual {356}
	365 Add W21, W20, W22
	366 Add W2, W22, 1
	367 Move X0, [X23]
	368 Compare X0, 0
	369 JumpIfEqual {837}
	370 Move W10, [X0+28]
	371 Move X8, [X0+16]
	372 Move X9, [X24]
	373 Add W10, W10, 1
	374 Move [X0+28], W10
	375 Compare X8, 0
	376 JumpIfEqual {837}
	377 NotImplemented "Instruction LDRSW not yet implemented."
	378 Move W11, [X8+24]
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move V0, [X31+80]
	381 Move X0, [X23]
	382 Compare X0, 0
	383 JumpIfEqual {837}
	384 Move W10, [X0+28]
	385 Move X8, [X0+16]
	386 Move X9, [X24]
	387 Add W10, W10, 1
	388 Move [X0+28], W10
	389 Compare X8, 0
	390 JumpIfEqual {837}
	391 NotImplemented "Instruction LDRSW not yet implemented."
	392 Move W11, [X8+24]
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Move V0, [X31+72]
	395 Move W2, 38
	396 Move X0, X19
	397 Move W1, W20
	398 Call StyleSyntaxTokenizer.IsNextCharacter, X0, X1, X2
	399 Move TEMP, X0
	400 And TEMP, TEMP, 1
	401 Compare TEMP, 1
	402 JumpIfNotEqual {616}
	403 Move X0, [X23]
	404 Compare X0, 0
	405 JumpIfEqual {837}
	406 Move W10, [X0+28]
	407 Move X8, [X0+16]
	408 Move X9, [X24]
	409 Add W10, W10, 1
	410 Move [X0+28], W10
	411 Compare X8, 0
	412 JumpIfEqual {837}
	413 NotImplemented "Instruction LDRSW not yet implemented."
	414 Move W11, [X8+24]
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Move V0, [X31+8]
	417 Add W9, W10, 1
	418 NotImplemented "Instruction MADD not yet implemented."
	419 Move [X0+24], W9
	420 Move [X8+32], D0
	421 Move [X8+40], X31
	422 Move [X8+48], X31
	423 Move X0, [X23]
	424 Compare X0, 0
	425 JumpIfEqual {837}
	426 Move W10, [X0+28]
	427 Move X8, [X0+16]
	428 Move X9, [X24]
	429 Add W10, W10, 1
	430 Move [X0+28], W10
	431 Compare X8, 0
	432 JumpIfEqual {837}
	433 NotImplemented "Instruction LDRSW not yet implemented."
	434 Move W11, [X8+24]
	435 NotImplemented "Instruction CMP not yet implemented."
	436 Move V0, [X31+64]
	437 Move X0, [X23]
	438 Compare X0, 0
	439 JumpIfEqual {837}
	440 Move W10, [X0+28]
	441 Move X8, [X0+16]
	442 Move X9, [X24]
	443 Add W10, W10, 1
	444 Move [X0+28], W10
	445 Compare X8, 0
	446 JumpIfEqual {837}
	447 NotImplemented "Instruction LDRSW not yet implemented."
	448 Move W11, [X8+24]
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Move V0, [X31+56]
	451 Move X0, [X23]
	452 Compare X0, 0
	453 JumpIfEqual {837}
	454 Move W10, [X0+28]
	455 Move X8, [X0+16]
	456 Move X9, [X24]
	457 Add W10, W10, 1
	458 Move [X0+28], W10
	459 Compare X8, 0
	460 JumpIfEqual {837}
	461 NotImplemented "Instruction LDRSW not yet implemented."
	462 Move W11, [X8+24]
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Move V0, [X31+48]
	465 Move X0, [X23]
	466 Compare X0, 0
	467 JumpIfEqual {837}
	468 Move W10, [X0+28]
	469 Move X8, [X0+16]
	470 Move X9, [X24]
	471 Add W10, W10, 1
	472 Move [X0+28], W10
	473 Compare X8, 0
	474 JumpIfEqual {837}
	475 NotImplemented "Instruction LDRSW not yet implemented."
	476 Move W11, [X8+24]
	477 NotImplemented "Instruction CMP not yet implemented."
	478 Add W9, W10, 1
	479 NotImplemented "Instruction MADD not yet implemented."
	480 Move [X0+24], W9
	481 Move [X8+32], D15
	482 Move X0, [X23]
	483 Compare X0, 0
	484 JumpIfEqual {837}
	485 Move W10, [X0+28]
	486 Move X8, [X0+16]
	487 Move X9, [X24]
	488 Add W10, W10, 1
	489 Move [X0+28], W10
	490 Compare X8, 0
	491 JumpIfEqual {837}
	492 NotImplemented "Instruction LDRSW not yet implemented."
	493 Move W11, [X8+24]
	494 NotImplemented "Instruction CMP not yet implemented."
	495 Move V0, [X31+40]
	496 Move X0, [X23]
	497 Compare X0, 0
	498 JumpIfEqual {837}
	499 Move W10, [X0+28]
	500 Move X8, [X0+16]
	501 Move X9, [X24]
	502 Add W10, W10, 1
	503 Move [X0+28], W10
	504 Compare X8, 0
	505 JumpIfEqual {837}
	506 NotImplemented "Instruction LDRSW not yet implemented."
	507 Move W11, [X8+24]
	508 NotImplemented "Instruction CMP not yet implemented."
	509 Move V0, [X31+32]
	510 Add W9, W10, 1
	511 NotImplemented "Instruction MADD not yet implemented."
	512 Move [X0+24], W9
	513 Move [X8+32], D0
	514 Move [X8+40], X31
	515 Move [X8+48], X31
	516 Compare X8, 0
	517 JumpIfEqual {837}
	518 Move W11, [X8+28]
	519 Move X9, [X8+16]
	520 Move X10, [X24]
	521 Add W11, W11, 1
	522 Move [X8+28], W11
	523 Compare X9, 0
	524 JumpIfEqual {837}
	525 NotImplemented "Instruction LDRSW not yet implemented."
	526 Move W12, [X9+24]
	527 NotImplemented "Instruction CMP not yet implemented."
	528 Add W10, W11, 1
	529 NotImplemented "Instruction MADD not yet implemented."
	530 Move [X8+24], W10
	531 Move [X9+32], D14
	532 Move [X9+40], X31
	533 Move [X9+48], X31
	534 Move X8, [X9+32]
	535 Move X8, [X8+192]
	536 Move X2, [X8+112]
	537 Move [X31+104], D9
	538 Move X8, [X9+32]
	539 Move X8, [X8+192]
	540 Move X2, [X8+112]
	541 Move [X31+104], D11
	542 Move X8, [X9+32]
	543 Move X8, [X8+192]
	544 Move X2, [X8+112]
	545 Move [X31+104], D13
	546 Move X8, [X9+32]
	547 Move X8, [X8+192]
	548 Move X2, [X8+112]
	549 Move [X31+104], D12
	550 Move W2, 1
	551 Move W21, W20
	552 Move X0, X19
	553 Move W1, W20
	554 Move X3, X31
	555 Call String.Substring, X0, X1, X2
	556 Move X1, X31
	557 Call Int32.Parse, X0
	558 Move X8, [X23]
	559 Compare X8, 0
	560 JumpIfEqual {837}
	561 Move W11, [X8+28]
	562 Move X9, [X8+16]
	563 Move X10, [X24]
	564 Add W11, W11, 1
	565 Move [X8+28], W11
	566 Compare X9, 0
	567 JumpIfEqual {837}
	568 NotImplemented "Instruction LDRSW not yet implemented."
	569 Move W12, [X9+24]
	570 NotImplemented "Instruction CMP not yet implemented."
	571 Add W10, W11, 1
	572 NotImplemented "Instruction MADD not yet implemented."
	573 Move [X8+24], W10
	574 Move [X9+32], D10
	575 Move [X9+40], X31
	576 Move [X9+48], W0
	577 Move [X9+52], W31
	578 Move X0, [X26]
	579 Move W1, 1
	580 Call 0x1C17D6C
	581 Move X22, X0
	582 Move X0, [X25]
	583 Add X1, X31, 96
	584 NotImplemented "Instruction STRH not yet implemented."
	585 Call 0x1C17E04
	586 Compare X22, 0
	587 JumpIfEqual {837}
	588 Move X21, X0
	589 Compare X0, 0
	590 JumpIfEqual {597}
	591 Move X8, [X22]
	592 Move X0, X21
	593 Move X1, [X8+64]
	594 Call 0x1C17E00
	595 Compare X0, 0
	596 JumpIfEqual {839}
	597 Move W8, [X22+24]
	598 Compare W8, 0
	599 JumpIfEqual {838}
	600 Move [X22+32], X21
	601 Move X0, [X27]
	602 Move W8, [X0+224]
	603 Compare W8, 0
	604 JumpIfNotEqual {606}
	605 Call 0x1C17DFC
	606 Move X8, 0x40F000
	607 Move X8, [X8+392]
	608 Move X1, X22
	609 Move X9, [X10+32]
	610 Move X9, [X9+192]
	611 Move X2, [X9+112]
	612 Move [X31+104], D10
	613 Move [X31+112], X31
	614 Move [X31+120], W0
	615 Move [X31+124], W31
	616 Move W8, [X19+16]
	617 Add W1, W20, 1
	618 NotImplemented "Instruction CMP not yet implemented."
	619 Move X0, X19
	620 Move X2, X31
	621 Call String.get_Chars, X0, X1
	622 Move X8, [X25]
	623 NotImplemented "Instruction STRH not yet implemented."
	624 Move W9, [X8+224]
	625 Compare W9, 0
	626 JumpIfNotEqual {629}
	627 Move X0, X8
	628 Call 0x1C17DFC
	629 Add X0, X31, 100
	630 Move X1, X31
	631 Call Char.ToString, X0
	632 Move X22, X0
	633 Move X8, [X9+32]
	634 Move V0, [X31+88]
	635 Move X8, [X9+32]
	636 Move V0, [X31+80]
	637 Move X8, [X9+32]
	638 Move V0, [X31+72]
	639 Move X8, [X9+32]
	640 Move V0, [X31+64]
	641 Move X8, [X9+32]
	642 Move V0, [X31+56]
	643 Move X8, [X9+32]
	644 Move V0, [X31+48]
	645 Move X8, [X9+32]
	646 Move X8, [X8+192]
	647 Move X2, [X8+112]
	648 Move [X31+104], D15
	649 Move X8, [X9+32]
	650 Move V0, [X31+24]
	651 Move X9, [X10+32]
	652 Add X1, X31, 104
	653 Move X0, X8
	654 Move X9, [X9+192]
	655 Move X2, [X9+112]
	656 Move [X31+104], D8
	657 Move X8, [X9+32]
	658 Move V0, [X31+40]
	659 Move X8, [X9+32]
	660 Move V0, [X31+32]
	661 Move X8, [X8+192]
	662 Move X2, [X8+112]
	663 Move [X31+104], D0
	664 Move [X31+112], X31
	665 Move [X31+120], X31
	666 Add X1, X31, 104
	667 Call List`1<StyleSyntaxToken>.AddWithResize, X0, X1
	668 Move W8, [X19+16]
	669 Add W20, W20, 1
	670 NotImplemented "Instruction CMP not yet implemented."
	671 Move X9, [X10+32]
	672 Add X1, X31, 104
	673 Move X0, X8
	674 Move X9, [X9+192]
	675 Move X2, [X9+112]
	676 Move [X31+104], D14
	677 Move [X31+112], X31
	678 Move [X31+120], X31
	679 Move W2, 1
	680 Move W21, W20
	681 Move X0, X19
	682 Move W1, W20
	683 Move X3, X31
	684 Call String.Substring, X0, X1, X2
	685 Move X8, [X23]
	686 Compare X8, 0
	687 JumpIfEqual {837}
	688 Move W11, [X8+28]
	689 Move X9, [X8+16]
	690 Move X10, [X24]
	691 Add W11, W11, 1
	692 Move [X8+28], W11
	693 Compare X9, 0
	694 JumpIfEqual {837}
	695 NotImplemented "Instruction LDRSW not yet implemented."
	696 Move W12, [X9+24]
	697 NotImplemented "Instruction CMP not yet implemented."
	698 Move V0, [X31+16]
	699 Add W10, W11, 1
	700 NotImplemented "Instruction MADD not yet implemented."
	701 Move [X8+24], W10
	702 Move [X9+32], D0
	703 Move [X9+40], X0
	704 Move [X9+48], X31
	705 Move X9, [X10+32]
	706 Move V0, [X31+16]
	707 Move X9, [X9+192]
	708 Move X2, [X9+112]
	709 Move [X31+104], D0
	710 Move [X31+112], X0
	711 Move [X31+120], X31
	712 Add X1, X31, 104
	713 Move X0, X8
	714 Call List`1<StyleSyntaxToken>.AddWithResize, X0, X1
	715 Move W20, W21
	716 Move X8, 0x40F000
	717 Move X8, [X8+384]
	718 Move X22, [X8]
	719 Move X0, [X26]
	720 Move W1, 1
	721 Call 0x1C17D6C
	722 Compare X0, 0
	723 JumpIfEqual {837}
	724 Move X21, X0
	725 Compare X22, 0
	726 JumpIfEqual {733}
	727 Move X8, [X21]
	728 Move X0, X22
	729 Move X1, [X8+64]
	730 Call 0x1C17E00
	731 Compare X0, 0
	732 JumpIfEqual {839}
	733 Move W8, [X21+24]
	734 Compare W8, 0
	735 JumpIfEqual {838}
	736 Move [X21+32], X22
	737 Move X0, [X27]
	738 Move W8, [X0+224]
	739 Compare W8, 0
	740 JumpIfNotEqual {742}
	741 Call 0x1C17DFC
	742 Move X8, 0x40F000
	743 Move X8, [X8+376]
	744 Move X1, X21
	745 Move X0, [X8]
	746 Move X2, X31
	747 Call Debug.LogAssertionFormat, X0, X1
	748 Move X0, [X23]
	749 Compare X0, 0
	750 JumpIfEqual {837}
	751 Move W10, [X0+28]
	752 Move X8, [X0+16]
	753 Move X9, [X24]
	754 Add W10, W10, 1
	755 Move [X0+28], W10
	756 Compare X8, 0
	757 JumpIfEqual {837}
	758 NotImplemented "Instruction LDRSW not yet implemented."
	759 Move W11, [X8+24]
	760 NotImplemented "Instruction CMP not yet implemented."
	761 Add W9, W10, 1
	762 NotImplemented "Instruction MADD not yet implemented."
	763 Move [X0+24], W9
	764 Move [X8+32], X31
	765 Move [X8+40], X31
	766 Move [X8+48], X31
	767 Move X8, [X9+32]
	768 Move X8, [X8+192]
	769 Move X2, [X8+112]
	770 Move [X31+104], X31
	771 Move [X31+112], X31
	772 Move [X31+120], X31
	773 Move X8, [X9+32]
	774 Move V0, [X31+8]
	775 Add X1, X31, 104
	776 Move X8, [X8+192]
	777 Move X2, [X8+112]
	778 Move [X31+104], D0
	779 Move [X31+112], X31
	780 Move [X31+120], X31
	781 Call List`1<StyleSyntaxToken>.AddWithResize, X0, X1
	782 Add W20, W20, 1
	783 Move X0, [X23]
	784 Compare X0, 0
	785 JumpIfEqual {837}
	786 Move W9, [X0+28]
	787 Move X8, [X0+16]
	788 Move X10, [X24]
	789 Add W9, W9, 1
	790 Move [X0+28], W9
	791 Compare X8, 0
	792 JumpIfEqual {837}
	793 NotImplemented "Instruction LDRSW not yet implemented."
	794 Move W11, [X8+24]
	795 NotImplemented "Instruction CMP not yet implemented."
	796 Move X12, -52858880
	797 Move V0, [X12+272]
	798 Move W11, 24
	799 Add W10, W9, 1
	800 NotImplemented "Instruction MADD not yet implemented."
	801 Move [X0+24], W10
	802 Move [X8+40], X31
	803 Move [X8+48], X31
	804 Move [X8+32], D0
	805 Move X8, [X10+32]
	806 Move X9, -52858880
	807 Move V0, [X9+272]
	808 Add X1, X31, 104
	809 Move X8, [X8+192]
	810 Move X2, [X8+112]
	811 Move [X31+104], D0
	812 Move [X31+112], X31
	813 Move [X31+120], X31
	814 Call List`1<StyleSyntaxToken>.AddWithResize, X0, X1
	815 Move X20, [X31+272]
	816 Move X19, [X31+280]
	817 Move X22, [X31+256]
	818 Move X21, [X31+264]
	819 Move X24, [X31+240]
	820 Move X23, [X31+248]
	821 Move X26, [X31+224]
	822 Move X25, [X31+232]
	823 Move X28, [X31+208]
	824 Move X27, [X31+216]
	825 Move X29, [X31+192]
	826 Move X30, [X31+200]
	827 Move D9, [X31+176]
	828 Move D8, [X31+184]
	829 Move D11, [X31+160]
	830 Move D10, [X31+168]
	831 Move D13, [X31+144]
	832 Move D12, [X31+152]
	833 Move D15, [X31+128]
	834 Move D14, [X31+136]
	835 Add X31, X31, 288
	836 Return 
	837 Call 0x1C17F20
	838 Call 0x1C17F28
	839 Call 0x1C17F44
	840 Move X1, X31
	841 Call 0x1C17DEC

Method: System.Boolean IsNextCharacter(System.String s, System.Int32 index, System.Char c)

Disassembly:
	0x03D5A5CC MOV X19, X0
	0x03D5A5D0 BL 0x3D5A4DC
	0x03D5A5D4 MOV X0, X19
	0x03D5A5D8 LDP X20, X19, [X31 + 0x10]
	0x03D5A5DC LDR X30, [X31], #0x20
	0x03D5A5E0 RET
	0x03D5A5E4 STP X30, X23, [X31 - 0x30]!
	0x03D5A5E8 STP X22, X21, [X31 + 0x10]
	0x03D5A5EC STP X20, X19, [X31 + 0x20]
	0x03D5A5F0 ADRP X20, 0x68D000
	0x03D5A5F4 ADRP X19, 0x40C000
	0x03D5A5F8 LDRB W8, [X20 + 0xC59]
	0x03D5A5FC LDR X19, [X19 + 0x3F0]
	0x03D5A600 TBNZ X8, 0x0, 0x3D5A648
	0x03D5A604 ADRP X0, 0x40C000
	0x03D5A608 LDR X0, [X0 + 0x3F8]
	0x03D5A60C BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {18}
	005 Move W8, [X0+16]
	006 Add W1, W1, 1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W19, W2
	009 Move X2, X31
	010 Call String.get_Chars, X0, X1
	011 And W8, W0, 0xFFFF
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CSET not yet implemented."
	014 Move W0, W31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0
	018 Call 0x1C17F20

Method: System.Boolean IsNextLetterOrDash(System.String s, System.Int32 index)

Disassembly:
	0x03D5A6A8 CBNZ W8, 0x3D5A6B0
	0x03D5A6AC BL 0x1C16DFC
	0x03D5A6B0 LDR X1, [X22]
	0x03D5A6B4 MOV X0, X19
	0x03D5A6B8 LDP X20, X19, [X31 + 0x20]
	0x03D5A6BC LDP X22, X21, [X31 + 0x10]
	0x03D5A6C0 LDP X30, X23, [X31], #0x30
	0x03D5A6C4 B 0x2D0D4C0
	0x03D5A6C8 STR X1, [X0 + 0x108]
	0x03D5A6CC RET
	0x03D5A6D0 STR X1, [X0 + 0x110]
	0x03D5A6D4 RET
	0x03D5A6D8 STP X30, X21, [X31 - 0x20]!
	0x03D5A6DC STP X20, X19, [X31 + 0x10]
	0x03D5A6E0 ADRP X20, 0x68D000
	0x03D5A6E4 ADRP X21, 0x40C000
	0x03D5A6E8 LDRB W8, [X20 + 0xC5A]
	0x03D5A6EC LDR X21, [X21 + 0x418]
	0x03D5A6F0 MOV X19, X0
	0x03D5A6F4 TBNZ X8, 0x0, 0x3D5A70C
	0x03D5A6F8 ADRP X0, 0x40C000
	0x03D5A6FC LDR X0, [X0 + 0x418]
	0x03D5A700 BL 0x1C16CF4
	0x03D5A704 MOVZ W8, 0x1
	0x03D5A708 STRB W8, [X20 + 0xC5A]
	0x03D5A70C LDR X1, [X21]
	0x03D5A710 MOV X0, X19
	0x03D5A714 BL 0x24A3280
	0x03D5A718 MOVZ W8, 0x3
	0x03D5A71C STR W8, [X19 + 0x30]
	0x03D5A720 LDP X20, X19, [X31 + 0x10]
	0x03D5A724 LDP X30, X21, [X31], #0x20
	0x03D5A728 RET
	0x03D5A72C MOVZ W8, 0x3
	0x03D5A730 STR W8, [X0 + 0x30]
	0x03D5A734 RET
	0x03D5A738 STP X30, X23, [X31 - 0x30]!
	0x03D5A73C STP X22, X21, [X31 + 0x10]
	0x03D5A740 STP X20, X19, [X31 + 0x20]
	0x03D5A744 ADRP X22, 0x68D000
	0x03D5A748 ADRP X23, 0x40C000
	0x03D5A74C LDRB W8, [X22 + 0xC5B]
	0x03D5A750 LDR X23, [X23 + 0x420]
	0x03D5A754 MOV X19, X2
	0x03D5A758 MOV X20, X1
	0x03D5A75C MOV X21, X0
	0x03D5A760 TBNZ X8, 0x0, 0x3D5A778
	0x03D5A764 ADRP X0, 0x40C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x68E000
	006 Move W8, [X21+3140]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x39C000
	014 Move X0, [X0+368]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3140], W8
	018 Compare X19, 0
	019 JumpIfEqual {57}
	020 Move W8, [X19+16]
	021 Add W20, W20, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, X19
	024 Move W1, W20
	025 Move X2, X31
	026 Call String.get_Chars, X0, X1
	027 Move X8, 0x39C000
	028 Move X8, [X8+368]
	029 Move W21, W0
	030 Move X8, [X8]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move W0, W21
	037 Move X1, X31
	038 Call Char.IsLetter, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {45}
	043 Move W0, 1
	044 Move W0, W31
	045 Move X0, X19
	046 Move W1, W20
	047 Move X2, X31
	048 Call String.get_Chars, X0, X1
	049 And W8, W0, 0xFFFF
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return X0
	057 Call 0x1C17F20

Method: System.Boolean IsNextNumber(System.String s, System.Int32 index)

Disassembly:
	0x03D5A610 ADRP X0, 0x40C000
	0x03D5A614 LDR X0, [X0 + 0x400]
	0x03D5A618 BL 0x1C16CF4
	0x03D5A61C ADRP X0, 0x40C000
	0x03D5A620 LDR X0, [X0 + 0x408]
	0x03D5A624 BL 0x1C16CF4
	0x03D5A628 ADRP X0, 0x40C000
	0x03D5A62C LDR X0, [X0 + 0x410]
	0x03D5A630 BL 0x1C16CF4
	0x03D5A634 ADRP X0, 0x40C000
	0x03D5A638 LDR X0, [X0 + 0x3F0]
	0x03D5A63C BL 0x1C16CF4
	0x03D5A640 MOVZ W8, 0x1
	0x03D5A644 STRB W8, [X20 + 0xC59]
	0x03D5A648 LDR X0, [X19]
	0x03D5A64C ADRP X22, 0x40C000
	0x03D5A650 ADRP X23, 0x40C000
	0x03D5A654 ADRP X21, 0x40C000
	0x03D5A658 LDR W8, [X0 + 0xE0]
	0x03D5A65C LDR X22, [X22 + 0x408]
	0x03D5A660 LDR X23, [X23 + 0x410]
	0x03D5A664 LDR X21, [X21 + 0x400]
	0x03D5A668 CBNZ W8, 0x3D5A674
	0x03D5A66C BL 0x1C16DFC
	0x03D5A670 LDR X0, [X19]
	0x03D5A674 LDR X8, [X0 + 0xB8]
	0x03D5A678 LDR X0, [X22]
	0x03D5A67C ADRP X22, 0x40C000
	0x03D5A680 LDR X20, [X8]
	0x03D5A684 LDR X22, [X22 + 0x3F8]
	0x03D5A688 BL 0x1C16F10
	0x03D5A68C LDR X2, [X23]
	0x03D5A690 MOV X1, X20
	0x03D5A694 MOV X3, X31
	0x03D5A698 MOV X19, X0
	0x03D5A69C BL 0x2D27AA8
	0x03D5A6A0 LDR X0, [X21]
	0x03D5A6A4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x68E000
	006 Move W8, [X21+3141]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x39C000
	014 Move X0, [X0+368]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3141], W8
	018 Compare X19, 0
	019 JumpIfEqual {49}
	020 Move W8, [X19+16]
	021 Add W1, W20, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, X19
	024 Move X2, X31
	025 Call String.get_Chars, X0, X1
	026 Move X8, 0x39C000
	027 Move X8, [X8+368]
	028 Move W19, W0
	029 Move X8, [X8]
	030 Move W9, [X8+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X8
	034 Call 0x1C17DFC
	035 Move W0, W19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X1, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call Char.IsNumber, X0
	042 Return X0
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move W0, W31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Int32 GlobCharacter(System.String s, System.Int32 index, System.Char c)

Disassembly:
	0x03D5A590 B 0x33BDD8C
	0x03D5A594 STR X30, [X31 - 0x20]!
	0x03D5A598 STP X20, X19, [X31 + 0x10]
	0x03D5A59C ADRP X19, 0x68D000
	0x03D5A5A0 ADRP X20, 0x40C000
	0x03D5A5A4 LDRB W8, [X19 + 0xC58]
	0x03D5A5A8 LDR X20, [X20 + 0x3E8]
	0x03D5A5AC TBNZ X8, 0x0, 0x3D5A5C4
	0x03D5A5B0 ADRP X0, 0x40C000
	0x03D5A5B4 LDR X0, [X0 + 0x3E8]
	0x03D5A5B8 BL 0x1C16CF4
	0x03D5A5BC MOVZ W8, 0x1
	0x03D5A5C0 STRB W8, [X19 + 0xC58]
	0x03D5A5C4 LDR X0, [X20]
	0x03D5A5C8 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W2
	006 Move W19, W1
	007 Move X21, X0
	008 Move X0, X21
	009 Move W1, W19
	010 Move W2, W20
	011 Call StyleSyntaxTokenizer.IsNextCharacter, X0, X1, X2
	012 Add W19, W19, 1
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {8}
	017 Subtract W0, W19, 1
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03D57F4C STR D0, [X19 + 0x10]
	0x03D57F50 LDP X20, X19, [X31 + 0x30]
	0x03D57F54 LDP X30, X21, [X31 + 0x20]
	0x03D57F58 ADD X31, X31, 0x40
	0x03D57F5C RET
	0x03D57F60 BL 0x1C16F20
	0x03D57F64 SUB X31, X31, 0x50
	0x03D57F68 STR X30, [X31 + 0x20]
	0x03D57F6C STP X22, X21, [X31 + 0x30]
	0x03D57F70 STP X20, X19, [X31 + 0x40]
	0x03D57F74 ADRP X21, 0x690000
	0x03D57F78 LDRB W8, [X21 + 0xC3A]
	0x03D57F7C MOV X19, X1
	0x03D57F80 MOV X20, X0
	0x03D57F84 TBNZ X8, 0x0, 0x3D57F9C
	0x03D57F88 ADRP X0, 0x40F000
	0x03D57F8C LDR X0, [X0 + 0x1E8]
	0x03D57F90 BL 0x1C16CF4
	0x03D57F94 MOVZ W8, 0x1
	0x03D57F98 STRB W8, [X21 + 0xC3A]
	0x03D57F9C CBZ X19, 0x3D58054
	0x03D57FA0 ADD X8, X31, 0x8
	0x03D57FA4 MOV X0, X19
	0x03D57FA8 BL 0x3D57EB8
	0x03D57FAC LDR W8, [X31 + 0x8]
	0x03D57FB0 CMP W8, 0x12
	0x03D57FB4 B.EQ 0x3D58018
	0x03D57FB8 CMP W8, 0x1
	0x03D57FBC B.NE 0x3D58058
	0x03D57FC0 ADRP X8, 0x40F000
	0x03D57FC4 LDR X22, [X31 + 0x10]
	0x03D57FC8 LDR X8, [X8 + 0x1E8]
	0x03D57FCC LDR X0, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x691000
	007 Move X22, 0x410000
	008 Move X20, 0x410000
	009 Move W8, [X21+3142]
	010 Move X22, [X22+344]
	011 Move X20, [X20+352]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x410000
	018 Move X0, [X0+352]
	019 Call 0x1C17CF4
	020 Move X0, 0x410000
	021 Move X0, [X0+344]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3142], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<StyleSyntaxToken>..ctor, X0
	030 Move TEMP, 0
	031 Not TEMP
	032 Move W8, TEMP
	033 Move [X19+16], X20
	034 Move [X19+24], W8
	035 Move X0, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X1, X31
	041 Move X30, [X31+48]
	042 Call Object..ctor, X0
	043 Return 

