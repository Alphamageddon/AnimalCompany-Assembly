Type: UnityEngine.UIElements.FocusEventBase`1

Method: UnityEngine.UIElements.Focusable get_relatedTarget()

Disassembly:
	0x02D24394 LDR X0, [X19 + 0x20]
	0x02D24398 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

Method: System.Void set_relatedTarget(UnityEngine.UIElements.Focusable value)

Disassembly:
	0x02D2439C TBNZ X8, 0x0, 0x2D243A4
	0x02D243A0 BL 0x1C5C684

ISIL:
	001 Move [X0+136], X1
	002 Return 

Method: UnityEngine.UIElements.FocusChangeDirection get_direction()

Disassembly:
	0x02D243A4 LDR X8, [X0 + 0xC0]
	0x02D243A8 ADRP X20, 0x13F7000

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.Void set_direction(UnityEngine.UIElements.FocusChangeDirection value)

Disassembly:
	0x02D243AC LDR X0, [X8 + 0x8]
	0x02D243B0 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X0+144], X1
	002 Return 

Method: UnityEngine.UIElements.FocusController get_focusController()

Disassembly:
	0x02D243B4 LDR X20, [X20 + 0xB90]
	0x02D243B8 TBNZ X8, 0x0, 0x2D243C0

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.Void set_focusController(UnityEngine.UIElements.FocusController value)

Disassembly:
	0x02D243BC BL 0x1C5C684
	0x02D243C0 LDR X0, [X0 + 0xB8]

ISIL:
	001 Move [X0+152], X1
	002 Return 

Method: System.Boolean get_IsFocusDelegated()

Disassembly:
	0x02D243C4 LDR X1, [X20]
	0x02D243C8 BL 0x25E6504

ISIL:
	001 Move W0, [X0+160]
	002 Return X0

Method: System.Void set_IsFocusDelegated(System.Boolean value)

Disassembly:
	0x02D243CC LDR X0, [X0]
	0x02D243D0 MOV X1, X31
	0x02D243D4 MOV X2, X31

ISIL:
	001 And W8, W1, 1
	002 Move [X0+160], W8
	003 Return 

Method: System.Void Init()

Disassembly:
	0x02D243D8 BL 0x33BE5B0
	0x02D243DC TBZ X0, 0x0, 0x2D24538
	0x02D243E0 LDR X0, [X19 + 0x20]
	0x02D243E4 LDRB W8, [X0 + 0x135]
	0x02D243E8 TBNZ X8, 0x0, 0x2D243F0
	0x02D243EC BL 0x1C5C684
	0x02D243F0 LDR X8, [X0 + 0xC0]
	0x02D243F4 LDR X0, [X8 + 0x8]
	0x02D243F8 LDRB W8, [X0 + 0x135]
	0x02D243FC TBNZ X8, 0x0, 0x2D24404
	0x02D24400 BL 0x1C5C684
	0x02D24404 LDR W8, [X0 + 0xE0]
	0x02D24408 CBNZ W8, 0x2D24410
	0x02D2440C BL 0x1C16DFC
	0x02D24410 LDR X0, [X19 + 0x20]
	0x02D24414 LDRB W8, [X0 + 0x135]
	0x02D24418 TBNZ X8, 0x0, 0x2D24420

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {19}
	006 Move X8, [X1+32]
	007 Move X20, X1
	008 Move X19, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8+8]
	011 Call 0x2D0E634, X0
	012 Move X8, [X20+32]
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X8, [X8+192]
	017 Move X1, [X8+16]
	018 Move X30, [X31+32]
	019 Call 0x1C17F20

Method: System.Void LocalInit()

Disassembly:
	0x02D2441C BL 0x1C5C684
	0x02D24420 LDR X8, [X0 + 0xC0]
	0x02D24424 LDR X0, [X8 + 0x8]
	0x02D24428 LDRB W8, [X0 + 0x135]
	0x02D2442C TBNZ X8, 0x0, 0x2D24434
	0x02D24430 BL 0x1C5C684
	0x02D24434 LDR X0, [X0 + 0xB8]
	0x02D24438 LDR X1, [X20]
	0x02D2443C ADRP X21, 0x13CF000
	0x02D24440 LDR X21, [X21 + 0x6C0]
	0x02D24444 BL 0x25E6504
	0x02D24448 LDR X8, [X19 + 0x20]
	0x02D2444C MOV X20, X0
	0x02D24450 LDRB W9, [X8 + 0x135]
	0x02D24454 TBNZ X9, 0x0, 0x2D24464
	0x02D24458 MOV X0, X8
	0x02D2445C BL 0x1C5C684
	0x02D24460 MOV X8, X0
	0x02D24464 LDR X0, [X21]
	0x02D24468 LDR X8, [X8 + 0xC0]
	0x02D2446C LDR W9, [X0 + 0xE0]
	0x02D24470 LDR X21, [X8 + 0x10]
	0x02D24474 CBNZ W9, 0x2D2447C
	0x02D24478 BL 0x1C16DFC
	0x02D2447C MOV X0, X21
	0x02D24480 MOV X1, X31
	0x02D24484 BL 0x338C698
	0x02D24488 LDR X8, [X19 + 0x20]
	0x02D2448C MOV X21, X0
	0x02D24490 LDRB W9, [X8 + 0x135]
	0x02D24494 TBNZ X9, 0x0, 0x2D244A4
	0x02D24498 MOV X0, X8
	0x02D2449C BL 0x1C5C684
	0x02D244A0 MOV X8, X0
	0x02D244A4 LDR X8, [X8 + 0xC0]
	0x02D244A8 LDR X0, [X8 + 0x20]
	0x02D244AC LDRB W8, [X0 + 0x135]
	0x02D244B0 TBNZ X8, 0x0, 0x2D244B8
	0x02D244B4 BL 0x1C5C684
	0x02D244B8 BL 0x1C16F10
	0x02D244BC LDR X8, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x16B8000
	006 Move W8, [X20+2017]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x13FB000
	013 Move X0, [X0+3504]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2017], W8
	017 Compare X19, 0
	018 JumpIfEqual {53}
	019 Move X20, 0x13FB000
	020 Move X20, [X20+3504]
	021 Move W8, 2
	022 Move [X19+48], W8
	023 Move [X19+136], X31
	024 Move X0, [X20]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X21, 0x16B8000
	030 Move W8, [X21+2039]
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x13FB000
	034 Move X0, [X0+3504]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+2039], W8
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X20]
	044 Move X8, [X0+184]
	045 Move X8, [X8]
	046 Move [X19+144], X8
	047 Move [X19+152], X31
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 
	053 Call 0x1C17F20

Method: T GetPooled(UnityEngine.UIElements.IEventHandler target, UnityEngine.UIElements.Focusable relatedTarget, UnityEngine.UIElements.FocusChangeDirection direction, UnityEngine.UIElements.FocusController focusController, System.Boolean bIsFocusDelegated = False)

Disassembly:
	0x02D244C0 MOV X22, X0
	0x02D244C4 ADD X9, X8, 0x135
	0x02D244C8 LDRH W9, [X9]
	0x02D244CC TBNZ X9, 0x0, 0x2D244E8
	0x02D244D0 MOV X0, X8
	0x02D244D4 BL 0x1C5C684
	0x02D244D8 LDR X8, [X19 + 0x20]
	0x02D244DC ADD X9, X8, 0x135
	0x02D244E0 LDRH W9, [X9]
	0x02D244E4 B 0x2D244EC
	0x02D244E8 MOV X0, X8
	0x02D244EC LDR X10, [X0 + 0xC0]
	0x02D244F0 LDR X19, [X10 + 0x18]
	0x02D244F4 TBNZ X9, 0x0, 0x2D24504
	0x02D244F8 MOV X0, X8
	0x02D244FC BL 0x1C5C684
	0x02D24500 MOV X8, X0
	0x02D24504 LDR X8, [X8 + 0xC0]
	0x02D24508 MOV X0, X22
	0x02D2450C MOV X1, X31
	0x02D24510 MOV X2, X19
	0x02D24514 LDR X3, [X8 + 0x28]
	0x02D24518 BL 0x2D101D0
	0x02D2451C MOV X0, X21
	0x02D24520 MOV X1, X22
	0x02D24524 MOV X2, X31
	0x02D24528 MOV X3, X31
	0x02D2452C MOV X4, X31
	0x02D24530 BL 0x3BFE3B0
	0x02D24534 STR X0, [X20]
	0x02D24538 LDP X20, X19, [X31 + 0x20]
	0x02D2453C LDP X22, X21, [X31 + 0x10]
	0x02D24540 LDR X30, [X31], #0x30
	0x02D24544 RET
	0x02D24548 STR X30, [X31 - 0x40]!
	0x02D2454C STP X24, X23, [X31 + 0x10]
	0x02D24550 STP X22, X21, [X31 + 0x20]
	0x02D24554 STP X20, X19, [X31 + 0x30]
	0x02D24558 MOV X21, X3
	0x02D2455C MOV X19, X5
	0x02D24560 MOV W20, W4
	0x02D24564 MOV X22, X0
	0x02D24568 ADD X2, X31, 0xC
	0x02D2456C ADD X3, X31, 0x8
	0x02D24570 MOV X0, X21
	0x02D24574 MOV W1, W4
	0x02D24578 STR X31, [X31 + 0x8]
	0x02D2457C MOV X4, X31
	0x02D24580 BL 0x3BFE0D8
	0x02D24584 TBZ X0, 0x0, 0x2D245D8
	0x02D24588 LDP W24, W23, [X31 + 0x8]
	0x02D2458C CMP W23, W24
	0x02D24590 B.GE 0x2D245C4
	0x02D24594 LDR X0, [X19 + 0x20]
	0x02D24598 LDRB W8, [X0 + 0x135]
	0x02D2459C TBNZ X8, 0x0, 0x2D245A4
	0x02D245A0 BL 0x1C5C684
	0x02D245A4 LDR X8, [X0 + 0xC0]
	0x02D245A8 MOV X0, X22
	0x02D245AC MOV W1, W23
	0x02D245B0 LDR X2, [X8 + 0x40]
	0x02D245B4 BL 0x3A80678
	0x02D245B8 ADD W23, W23, 0x1
	0x02D245BC CMP W24, W23

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X5+32]
	010 Move X21, X5
	011 Move W19, W4
	012 Move X20, X3
	013 Move W9, [X8+309]
	014 Move X22, X2
	015 Move X23, X1
	016 Move X25, X0
	017 Move TEMP, X9
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {24}
	021 Move X0, X8
	022 Call 0x1C5D684
	023 Move X8, X0
	024 Move X8, [X8+192]
	025 Move X0, [X8+56]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, [X21+32]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move X8, [X0+192]
	044 Move X0, [X8+48]
	045 Call 0x2D0E6C4
	046 Compare X0, 0
	047 JumpIfEqual {95}
	048 Move X1, X25
	049 Move X2, X31
	050 Move X24, X0
	051 Call EventBase.set_target, X0, X1
	052 Move X0, [X21+32]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {60}
	058 Call 0x1C5D684
	059 Move X0, [X21+32]
	060 Move [X24+136], X23
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {68}
	066 Call 0x1C5D684
	067 Move X0, [X21+32]
	068 Move [X24+144], X22
	069 Move W8, [X0+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {76}
	074 Call 0x1C5D684
	075 Move X0, [X21+32]
	076 Move [X24+152], X20
	077 Move W8, [X0+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {83}
	082 Call 0x1C5D684
	083 And W8, W19, 1
	084 Move [X24+160], W8
	085 Move X0, X24
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X22, [X31+32]
	089 Move X21, [X31+40]
	090 Move X24, [X31+16]
	091 Move X23, [X31+24]
	092 Move X30, [X31+64]
	093 Move X25, [X31+72]
	094 Return X0
	095 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x02D245C0 B.NE 0x2D24594
	0x02D245C4 ADD X2, X31, 0xC
	0x02D245C8 ADD X3, X31, 0x8
	0x02D245CC MOV X0, X21
	0x02D245D0 MOV W1, W20
	0x02D245D4 B 0x2D2457C
	0x02D245D8 LDP X20, X19, [X31 + 0x30]
	0x02D245DC LDP X22, X21, [X31 + 0x20]
	0x02D245E0 LDP X24, X23, [X31 + 0x10]
	0x02D245E4 LDR X30, [X31], #0x40
	0x02D245E8 RET
	0x02D245EC STP X30, X19, [X31 - 0x10]!
	0x02D245F0 MOV X19, X0
	0x02D245F4 LDR X0, [X0 + 0x20]
	0x02D245F8 LDRB W8, [X0 + 0x135]
	0x02D245FC TBNZ X8, 0x0, 0x2D24604
	0x02D24600 BL 0x1C5C684
	0x02D24604 LDR X8, [X0 + 0xC0]
	0x02D24608 MOV W0, W31
	0x02D2460C LDR X1, [X8 + 0x48]
	0x02D24610 BL 0x2135898
	0x02D24614 LDR X8, [X19 + 0x20]
	0x02D24618 MOV X19, X0
	0x02D2461C LDRB W9, [X8 + 0x135]
	0x02D24620 TBNZ X9, 0x0, 0x2D24630
	0x02D24624 MOV X0, X8
	0x02D24628 BL 0x1C5C684
	0x02D2462C MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move X8, [X8+192]
	008 Move X8, [X8+56]
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move W9, [X8+224]
	018 Compare W9, 0
	019 JumpIfNotEqual {22}
	020 Move X0, X8
	021 Call 0x1C17DFC
	022 Move X8, [X19+32]
	023 Move X0, X20
	024 Move X8, [X8+192]
	025 Move X1, [X8+80]
	026 Call 0x2D0E54C, X0
	027 Move X8, [X19+32]
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X8, [X8+192]
	032 Move X1, [X8+16]
	033 Move X30, [X31+32]
	034 Call 0x2D2441C, X0
	035 Return 

