Type: UnityEngine.UIElements.NavigationMoveEvent

Method: System.Void .cctor()

Disassembly:
	0x03DA97C0 ADRP X24, 0x373000
	0x03DA97C4 LDR X24, [X24 + 0xE60]
	0x03DA97C8 MOV X0, X21
	0x03DA97CC LDR X1, [X24]
	0x03DA97D0 BL 0x1C16E00
	0x03DA97D4 CBZ X0, 0x3DA983C
	0x03DA97D8 LDR X8, [X0]
	0x03DA97DC LDR X1, [X24]
	0x03DA97E0 MOV X23, X0
	0x03DA97E4 LDRH W9, [X8 + 0x12E]
	0x03DA97E8 CBZ X9, 0x3DA980C
	0x03DA97EC LDR X10, [X8 + 0xB0]
	0x03DA97F0 ADD X10, X10, 0x8
	0x03DA97F4 LDUR X11, [X10 - 0x8]
	0x03DA97F8 CMP X11, X1
	0x03DA97FC B.EQ 0x3DA981C
	0x03DA9800 SUBS X9, X9, 0x1
	0x03DA9804 ADD X10, X10, 0x10
	0x03DA9808 B.NE 0x3DA97F4
	0x03DA980C MOVZ W2, 0x2
	0x03DA9810 MOV X0, X23
	0x03DA9814 BL 0x1C5C788
	0x03DA9818 B 0x3DA982C
	0x03DA981C LDR W9, [X10]
	0x03DA9820 ADD W9, W9, 0x2
	0x03DA9824 ADD X8, X8, W9, 0x4, SXTW
	0x03DA9828 ADD X0, X8, 0x138
	0x03DA982C LDP X8, X1, [X0]
	0x03DA9830 MOV X0, X23
	0x03DA9834 BLR X8
	0x03DA9838 TBZ X0, 0x0, 0x3DA9908
	0x03DA983C LDR X8, [X21]
	0x03DA9840 LDR X1, [X25]
	0x03DA9844 LDRH W9, [X8 + 0x12E]
	0x03DA9848 CBZ X9, 0x3DA986C
	0x03DA984C LDR X10, [X8 + 0xB0]
	0x03DA9850 ADD X10, X10, 0x8
	0x03DA9854 LDUR X11, [X10 - 0x8]
	0x03DA9858 CMP X11, X1
	0x03DA985C B.EQ 0x3DA987C
	0x03DA9860 SUBS X9, X9, 0x1
	0x03DA9864 ADD X10, X10, 0x10
	0x03DA9868 B.NE 0x3DA9854
	0x03DA986C MOV X0, X21
	0x03DA9870 MOV W2, W31
	0x03DA9874 BL 0x1C5C788
	0x03DA9878 B 0x3DA9888
	0x03DA987C LDRSW X9, [X10]
	0x03DA9880 ADD X8, X8, X9, 0x4, LSL
	0x03DA9884 ADD X0, X8, 0x138
	0x03DA9888 LDP X8, X1, [X0]
	0x03DA988C MOV X0, X21
	0x03DA9890 BLR X8
	0x03DA9894 LDR X8, [X21]
	0x03DA9898 LDR X1, [X25]
	0x03DA989C MOV W23, W0
	0x03DA98A0 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x63F000
	008 Move X19, 0x3C0000
	009 Move W8, [X20+3939]
	010 Move X19, [X19+1696]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x3C0000
	016 Move X0, [X0+1704]
	017 Call 0x1C17CF4
	018 Move X0, 0x3BC000
	019 Move X0, [X0+176]
	020 Call 0x1C17CF4
	021 Move X0, 0x3C0000
	022 Move X0, [X0+1712]
	023 Call 0x1C17CF4
	024 Move X0, 0x3C0000
	025 Move X0, [X0+1720]
	026 Call 0x1C17CF4
	027 Move X0, 0x3C0000
	028 Move X0, [X0+1696]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3939], W8
	032 Move X0, [X19]
	033 Move X22, 0x3C0000
	034 Move X23, 0x3C0000
	035 Move X21, 0x3BC000
	036 Move W8, [X0+224]
	037 Move X22, [X22+1712]
	038 Move X23, [X23+1720]
	039 Move X21, [X21+176]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X19]
	044 Move X8, [X0+184]
	045 Move X0, [X22]
	046 Move X22, 0x3C0000
	047 Move X20, [X8]
	048 Move X22, [X22+1704]
	049 Call 0x1C17F10
	050 Move X2, [X23]
	051 Move X1, X20
	052 Move X3, X31
	053 Move X19, X0
	054 Call Func`1<Object>..ctor, X0, X1, X2
	055 Move X0, [X21]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X1, [X22]
	061 Move X0, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Call 0x2D0E4C0, X0
	069 Return 

Method: UnityEngine.UIElements.NavigationMoveEvent/Direction DetermineMoveDirection(System.Single x, System.Single y, System.Single deadZone = 0.6)

Disassembly:
	0x03DA98A4 CBZ X9, 0x3DA98C8
	0x03DA98A8 LDR X10, [X8 + 0xB0]
	0x03DA98AC ADD X10, X10, 0x8
	0x03DA98B0 LDUR X11, [X10 - 0x8]
	0x03DA98B4 CMP X11, X1
	0x03DA98B8 B.EQ 0x3DA98D8
	0x03DA98BC SUBS X9, X9, 0x1
	0x03DA98C0 ADD X10, X10, 0x10
	0x03DA98C4 B.NE 0x3DA98B0
	0x03DA98C8 MOVZ W2, 0x5
	0x03DA98CC MOV X0, X21
	0x03DA98D0 BL 0x1C5C788
	0x03DA98D4 B 0x3DA98E8
	0x03DA98D8 LDR W9, [X10]
	0x03DA98DC ADD W9, W9, 0x5
	0x03DA98E0 ADD X8, X8, W9, 0x4, SXTW
	0x03DA98E4 ADD X0, X8, 0x138
	0x03DA98E8 LDP X8, X1, [X0]
	0x03DA98EC MOV X0, X21
	0x03DA98F0 BLR X8
	0x03DA98F4 MOV X0, X20

ISIL:
	001 Multiply S3, S0, S0
	002 Multiply S4, S1, S1
	003 Add S3, S3, S4
	004 Multiply S2, S2, S2
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 NotImplemented "Instruction FABS not yet implemented."
	007 NotImplemented "Instruction FABS not yet implemented."
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 Move W8, 3
	011 NotImplemented "Instruction CSINC not yet implemented."
	012 Return X0
	013 Move W0, W31
	014 Return X0
	015 NotImplemented "Instruction FCMP not yet implemented."
	016 Move W8, 2
	017 Move W9, 4
	018 NotImplemented "Instruction CSEL not yet implemented."
	019 Return X0

Method: UnityEngine.UIElements.NavigationMoveEvent/Direction get_direction()

Disassembly:
	0x03DA98F8 MOV W1, W23
	0x03DA98FC MOV X2, X19

ISIL:
	001 Move W0, [X0+140]
	002 Return X0

Method: System.Void set_direction(UnityEngine.UIElements.NavigationMoveEvent/Direction value)

Disassembly:
	0x03DA9900 MOV X3, X31
	0x03DA9904 BL 0x3DBC164

ISIL:
	001 Move [X0+140], W1
	002 Return 

Method: System.Void set_move(UnityEngine.Vector2 value)

Disassembly:
	0x03DA9908 LDR W8, [X19 + 0x40]
	0x03DA990C LDR X9, [X19 + 0x48]

ISIL:
	001 Move [X0+144], S0
	002 Move [X0+152], S1
	003 Return 

Method: UnityEngine.UIElements.NavigationMoveEvent GetPooled(UnityEngine.Vector2 moveVector, UnityEngine.EventModifiers modifiers = 0)

Disassembly:
	0x03DA9910 MOVZ W10, 0x208
	0x03DA9914 STR X22, [X19 + 0x50]
	0x03DA9918 ORR W8, W8, W10, 0x0
	0x03DA991C STR W8, [X19 + 0x40]
	0x03DA9920 CBNZ X9, 0x3DA9928
	0x03DA9924 STR X22, [X19 + 0x48]
	0x03DA9928 LDR W8, [X19 + 0x30]
	0x03DA992C ADRP X10, 0x372000
	0x03DA9930 LDR X10, [X10 + 0xB98]
	0x03DA9934 AND W8, W8, 0xFFFFFFF7
	0x03DA9938 STR W8, [X19 + 0x30]
	0x03DA993C LDR X9, [X22]
	0x03DA9940 LDR X8, [X10]
	0x03DA9944 LDRB W11, [X9 + 0x130]
	0x03DA9948 LDRB W10, [X8 + 0x130]
	0x03DA994C CMP W11, W10
	0x03DA9950 B.CC 0x3DA9974
	0x03DA9954 LDR X9, [X9 + 0xC8]
	0x03DA9958 ADD X9, X9, X10, 0x3, LSL
	0x03DA995C LDUR X9, [X9 - 0x8]
	0x03DA9960 CMP X9, X8
	0x03DA9964 B.NE 0x3DA9974
	0x03DA9968 MOV X0, X22
	0x03DA996C MOV X1, X19
	0x03DA9970 BL 0x3DA1608
	0x03DA9974 LDR X8, [X19]
	0x03DA9978 MOV X0, X19
	0x03DA997C MOV X1, X31
	0x03DA9980 LDP X9, X2, [X8 + 0x1E8]
	0x03DA9984 BLR X9
	0x03DA9988 LDR W8, [X19 + 0x40]
	0x03DA998C MOVN W9, 0xC8
	0x03DA9990 STR W31, [X19 + 0x60]
	0x03DA9994 AND W8, W8, W9, 0x0
	0x03DA9998 ORR W8, W8, 0x40
	0x03DA999C STR W8, [X19 + 0x40]
	0x03DA99A0 LDP X20, X19, [X31 + 0x40]
	0x03DA99A4 LDP X22, X21, [X31 + 0x30]
	0x03DA99A8 LDP X24, X23, [X31 + 0x20]
	0x03DA99AC LDP X26, X25, [X31 + 0x10]
	0x03DA99B0 LDP X30, X27, [X31], #0x50
	0x03DA99B4 RET
	0x03DA99B8 BL 0x1C16F20
	0x03DA99BC STR D8, [X31 - 0x70]!
	0x03DA99C0 STP X29, X30, [X31 + 0x10]
	0x03DA99C4 STP X28, X27, [X31 + 0x20]
	0x03DA99C8 STP X26, X25, [X31 + 0x30]
	0x03DA99CC STP X24, X23, [X31 + 0x40]
	0x03DA99D0 STP X22, X21, [X31 + 0x50]
	0x03DA99D4 STP X20, X19, [X31 + 0x60]
	0x03DA99D8 ADRP X20, 0x63E000
	0x03DA99DC LDRB W8, [X20 + 0xF7E]
	0x03DA99E0 MOV X19, X0
	0x03DA99E4 TBNZ X8, 0x0, 0x3DA9A08
	0x03DA99E8 ADRP X0, 0x372000
	0x03DA99EC LDR X0, [X0 + 0x958]
	0x03DA99F0 BL 0x1C16CF4
	0x03DA99F4 ADRP X0, 0x373000
	0x03DA99F8 LDR X0, [X0 + 0xE50]
	0x03DA99FC BL 0x1C16CF4
	0x03DA9A00 MOVZ W8, 0x1
	0x03DA9A04 STRB W8, [X20 + 0xF7E]
	0x03DA9A08 ADRP X23, 0x373000
	0x03DA9A0C ADRP X24, 0x372000

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x63F000
	009 Move X22, 0x3C0000
	010 Move X20, 0x3BC000
	011 Move W8, [X21+3940]
	012 Move X22, [X22+720]
	013 Move X20, [X20+200]
	014 Move W19, W0
	015 Move V8, V1
	016 Move V9, V0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x3C0000
	022 Move X0, [X0+720]
	023 Call 0x1C17CF4
	024 Move X0, 0x3BC000
	025 Move X0, [X0+200]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3940], W8
	029 Move X2, [X22]
	030 Move W0, W31
	031 Move W1, W19
	032 Call 0x240AB44, X0, X1
	033 Move X8, [X20]
	034 Move X19, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X8, -53207040
	041 Move V0, [X8+332]
	042 Multiply S1, S9, S9
	043 Multiply S2, S8, S8
	044 Add S1, S1, S2
	045 NotImplemented "Instruction FCMP not yet implemented."
	046 NotImplemented "Instruction FABS not yet implemented."
	047 NotImplemented "Instruction FABS not yet implemented."
	048 NotImplemented "Instruction FCMP not yet implemented."
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 Move W8, 3
	051 NotImplemented "Instruction CSINC not yet implemented."
	052 Compare X19, 0
	053 JumpIfNotEqual {57}
	054 Move W8, W31
	055 Compare X19, 0
	056 JumpIfEqual {75}
	057 Move [X19+140], W8
	058 Move [X19+144], S9
	059 Move [X19+152], S8
	060 Move X0, X19
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X30, [X31+16]
	066 Move D9, [X31+64]
	067 Move D8, [X31+72]
	068 Return X0
	069 NotImplemented "Instruction FCMP not yet implemented."
	070 Move W8, 2
	071 Move W9, 4
	072 NotImplemented "Instruction CSEL not yet implemented."
	073 Compare X19, 0
	074 JumpIfNotEqual {57}
	075 Call 0x1C17F20

Method: UnityEngine.UIElements.NavigationMoveEvent GetPooled(UnityEngine.Vector2 moveVector, UnityEngine.UIElements.NavigationDeviceType deviceType, UnityEngine.EventModifiers modifiers = 0)

Disassembly:
	0x03DA4F54 STP X20, X19, [X31 + 0x10]
	0x03DA4F58 ADD X2, X31, 0x8
	0x03DA4F5C MOV X20, X1
	0x03DA4F60 MOV X19, X0
	0x03DA4F64 STR X31, [X31 + 0x8]
	0x03DA4F68 BL 0x3DA52F0
	0x03DA4F6C CBZ X19, 0x3DA4FEC
	0x03DA4F70 LDR X8, [X19 + 0x50]
	0x03DA4F74 CBZ X8, 0x3DA4F90
	0x03DA4F78 LDR W8, [X19 + 0x40]
	0x03DA4F7C AND W8, W8, 0xFFFFFF7F
	0x03DA4F80 STR W8, [X19 + 0x40]
	0x03DA4F84 LDP X20, X19, [X31 + 0x10]
	0x03DA4F88 LDR X30, [X31], #0x20
	0x03DA4F8C RET
	0x03DA4F90 LDR X8, [X31 + 0x8]
	0x03DA4F94 CBZ X8, 0x3DA4FB8
	0x03DA4F98 LDR W9, [X19 + 0x40]
	0x03DA4F9C LDR X10, [X19 + 0x48]
	0x03DA4FA0 STR X8, [X19 + 0x50]
	0x03DA4FA4 AND W9, W9, 0xFFFFFF7F
	0x03DA4FA8 STR W9, [X19 + 0x40]
	0x03DA4FAC CBNZ X10, 0x3DA4F84
	0x03DA4FB0 STR X8, [X19 + 0x48]
	0x03DA4FB4 B 0x3DA4F84
	0x03DA4FB8 CBZ X20, 0x3DA4FD4
	0x03DA4FBC LDR X8, [X20]
	0x03DA4FC0 MOV X0, X20
	0x03DA4FC4 LDR X9, [X8 + 0x398]
	0x03DA4FC8 LDR X1, [X8 + 0x3A0]
	0x03DA4FCC BLR X9
	0x03DA4FD0 B 0x3DA4FD8
	0x03DA4FD4 MOV X0, X31
	0x03DA4FD8 LDR X8, [X19 + 0x48]
	0x03DA4FDC STR X0, [X19 + 0x50]
	0x03DA4FE0 CBNZ X8, 0x3DA4F84
	0x03DA4FE4 STR X0, [X19 + 0x48]
	0x03DA4FE8 B 0x3DA4F84
	0x03DA4FEC BL 0x1C16F20
	0x03DA4FF0 STR X30, [X31 - 0x20]!
	0x03DA4FF4 STP X20, X19, [X31 + 0x10]
	0x03DA4FF8 MOV X19, X1
	0x03DA4FFC MOV X20, X0
	0x03DA5000 BL 0x3DA502C
	0x03DA5004 TBZ X0, 0x0, 0x3DA5018
	0x03DA5008 LDP X20, X19, [X31 + 0x10]
	0x03DA500C MOVZ W0, 0x1
	0x03DA5010 LDR X30, [X31], #0x20
	0x03DA5014 RET
	0x03DA5018 MOV X0, X20
	0x03DA501C MOV X1, X19
	0x03DA5020 LDP X20, X19, [X31 + 0x10]
	0x03DA5024 LDR X30, [X31], #0x20
	0x03DA5028 B 0x3DA50E0
	0x03DA502C STP X30, X21, [X31 - 0x20]!
	0x03DA5030 STP X20, X19, [X31 + 0x10]
	0x03DA5034 ADRP X21, 0x642000
	0x03DA5038 LDRB W8, [X21 + 0xF12]
	0x03DA503C MOV X20, X1
	0x03DA5040 MOV X19, X0
	0x03DA5044 TBNZ X8, 0x0, 0x3DA505C
	0x03DA5048 ADRP X0, 0x376000
	0x03DA504C LDR X0, [X0 + 0x898]
	0x03DA5050 BL 0x1C16CF4
	0x03DA5054 MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x644000
	010 Move X23, 0x3C5000
	011 Move X21, 0x3C1000
	012 Move W8, [X22+3941]
	013 Move X23, [X23+720]
	014 Move X21, [X21+200]
	015 Move W19, W1
	016 Move W20, W0
	017 Move V8, V1
	018 Move V9, V0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x3C5000
	024 Move X0, [X0+720]
	025 Call 0x1C17CF4
	026 Move X0, 0x3C1000
	027 Move X0, [X0+200]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+3941], W8
	031 Move X2, [X23]
	032 Move W0, W20
	033 Move W1, W19
	034 Call 0x240AB44, X0, X1
	035 Move X8, [X21]
	036 Move X19, X0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X8, -53186560
	043 Move V0, [X8+332]
	044 Multiply S1, S9, S9
	045 Multiply S2, S8, S8
	046 Add S1, S1, S2
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 NotImplemented "Instruction FABS not yet implemented."
	049 NotImplemented "Instruction FABS not yet implemented."
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 Move W8, 3
	053 NotImplemented "Instruction CSINC not yet implemented."
	054 Compare X19, 0
	055 JumpIfNotEqual {59}
	056 Move W8, W31
	057 Compare X19, 0
	058 JumpIfEqual {78}
	059 Move [X19+140], W8
	060 Move [X19+144], S9
	061 Move [X19+152], S8
	062 Move X0, X19
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X30, [X31+16]
	068 Move X23, [X31+24]
	069 Move D9, [X31+64]
	070 Move D8, [X31+72]
	071 Return X0
	072 NotImplemented "Instruction FCMP not yet implemented."
	073 Move W8, 2
	074 Move W9, 4
	075 NotImplemented "Instruction CSEL not yet implemented."
	076 Compare X19, 0
	077 JumpIfNotEqual {59}
	078 Call 0x1C17F20

Method: UnityEngine.UIElements.NavigationMoveEvent GetPooled(UnityEngine.UIElements.NavigationMoveEvent/Direction direction, UnityEngine.EventModifiers modifiers = 0)

Disassembly:
	0x03DA9A10 ADRP X20, 0x352000
	0x03DA9A14 LDR X23, [X23 + 0xE50]
	0x03DA9A18 LDR X24, [X24 + 0x958]
	0x03DA9A1C LDR X20, [X20 + 0xF08]
	0x03DA9A20 MOV X22, X31
	0x03DA9A24 MOVZ W25, 0x4
	0x03DA9A28 ADRP X26, 0x630000
	0x03DA9A2C MOVZ W27, 0x1
	0x03DA9A30 ADRP X28, 0x63E000
	0x03DA9A34 LDR X0, [X23]
	0x03DA9A38 SUB X29, X25, 0x4
	0x03DA9A3C LDR W8, [X0 + 0xE0]
	0x03DA9A40 CBNZ W8, 0x3DA9A4C
	0x03DA9A44 BL 0x1C16DFC
	0x03DA9A48 LDR X0, [X23]
	0x03DA9A4C LDR X8, [X0 + 0xB8]
	0x03DA9A50 LDRSW X8, [X8]
	0x03DA9A54 CMP X29, X8
	0x03DA9A58 B.GE 0x3DA9B78
	0x03DA9A5C LDR X0, [X24]
	0x03DA9A60 LDR W8, [X0 + 0xE0]
	0x03DA9A64 CBNZ W8, 0x3DA9A70
	0x03DA9A68 BL 0x1C16DFC
	0x03DA9A6C LDR X0, [X24]
	0x03DA9A70 LDR X8, [X0 + 0xB8]
	0x03DA9A74 LDR X21, [X8]
	0x03DA9A78 CBZ X21, 0x3DA9B9C
	0x03DA9A7C LDR W8, [X21 + 0x18]
	0x03DA9A80 CMP X29, X8
	0x03DA9A84 B.CS 0x3DA9B98
	0x03DA9A88 ADD X8, X21, X22
	0x03DA9A8C LDR X8, [X8 + 0x28]
	0x03DA9A90 CMP X8, X19
	0x03DA9A94 B.NE 0x3DA9B0C
	0x03DA9A98 LDR W8, [X0 + 0xE0]
	0x03DA9A9C CBNZ W8, 0x3DA9AB4
	0x03DA9AA0 BL 0x1C16DFC
	0x03DA9AA4 LDR X8, [X24]
	0x03DA9AA8 LDR X8, [X8 + 0xB8]
	0x03DA9AAC LDR X21, [X8]
	0x03DA9AB0 CBZ X21, 0x3DA9B9C
	0x03DA9AB4 LDRB W8, [X26 + 0x78F]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x63F000
	007 Move X22, 0x3C0000
	008 Move W8, [X21+3942]
	009 Move X22, [X22+720]
	010 Move W20, W1
	011 Move W19, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3C0000
	017 Move X0, [X0+720]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3942], W8
	021 Move X2, [X22]
	022 Move W0, W31
	023 Move W1, W20
	024 Call 0x240AB44, X0, X1
	025 Compare X0, 0
	026 JumpIfEqual {51}
	027 Move [X0+140], W19
	028 Move X19, 0x631000
	029 Move W8, [X19+1935]
	030 Move X20, X0
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x353000
	034 Move X0, [X0+3848]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+1935], W8
	038 Move X8, 0x353000
	039 Move X8, [X8+3848]
	040 Move X0, X20
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X8, [X8]
	044 Move X8, [X8+184]
	045 Move V0, [X8]
	046 Move [X20+144], D0
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X30, [X31+48]
	050 Return X0
	051 Call 0x1C17F20

Method: UnityEngine.UIElements.NavigationMoveEvent GetPooled(UnityEngine.UIElements.NavigationMoveEvent/Direction direction, UnityEngine.UIElements.NavigationDeviceType deviceType, UnityEngine.EventModifiers modifiers = 0)

Disassembly:
	0x03DA4EA8 LDR X9, [X20]
	0x03DA4EAC LDR X8, [X21]
	0x03DA4EB0 LDRB W11, [X9 + 0x130]
	0x03DA4EB4 LDRB W10, [X8 + 0x130]
	0x03DA4EB8 CMP W11, W10
	0x03DA4EBC B.CS 0x3DA4EC8
	0x03DA4EC0 MOV W0, W31
	0x03DA4EC4 B 0x3DA4EDC
	0x03DA4EC8 LDR X9, [X9 + 0xC8]
	0x03DA4ECC ADD X9, X9, X10, 0x3, LSL
	0x03DA4ED0 LDUR X9, [X9 - 0x8]
	0x03DA4ED4 CMP X9, X8
	0x03DA4ED8 CSET W0, EQ
	0x03DA4EDC MOV X1, X31
	0x03DA4EE0 BL 0x3C620B8
	0x03DA4EE4 LDR X8, [X20]
	0x03DA4EE8 LDR X1, [X21]
	0x03DA4EEC LDRB W10, [X8 + 0x130]
	0x03DA4EF0 LDRB W9, [X1 + 0x130]
	0x03DA4EF4 CMP W10, W9
	0x03DA4EF8 B.CC 0x3DA4F44
	0x03DA4EFC LDR X8, [X8 + 0xC8]
	0x03DA4F00 ADD X8, X8, X9, 0x3, LSL
	0x03DA4F04 LDUR X8, [X8 - 0x8]
	0x03DA4F08 CMP X8, X1
	0x03DA4F0C B.NE 0x3DA4F44
	0x03DA4F10 MOV X0, X19
	0x03DA4F14 MOV X1, X20
	0x03DA4F18 BL 0x3DA4F50
	0x03DA4F1C MOV X0, X19
	0x03DA4F20 MOV X1, X20
	0x03DA4F24 BL 0x3DA4FF0
	0x03DA4F28 CBZ X19, 0x3DA4F4C
	0x03DA4F2C LDR W8, [X19 + 0x40]
	0x03DA4F30 ORR W8, W8, 0x40
	0x03DA4F34 STR W8, [X19 + 0x40]
	0x03DA4F38 LDP X20, X19, [X31 + 0x10]
	0x03DA4F3C LDP X30, X21, [X31], #0x20
	0x03DA4F40 RET
	0x03DA4F44 MOV X0, X20
	0x03DA4F48 BL 0x1C171E0
	0x03DA4F4C BL 0x1C16F20
	0x03DA4F50 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x644000
	008 Move X23, 0x3C5000
	009 Move W8, [X22+3943]
	010 Move X23, [X23+720]
	011 Move W20, W2
	012 Move W21, W1
	013 Move W19, W0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x3C5000
	019 Move X0, [X0+720]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3943], W8
	023 Move X2, [X23]
	024 Move W0, W21
	025 Move W1, W20
	026 Call 0x240AB44, X0, X1
	027 Compare X0, 0
	028 JumpIfEqual {54}
	029 Move [X0+140], W19
	030 Move X19, 0x636000
	031 Move W8, [X19+1935]
	032 Move X20, X0
	033 Compare W8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, 0x358000
	036 Move X0, [X0+3848]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X19+1935], W8
	040 Move X8, 0x358000
	041 Move X8, [X8+3848]
	042 Move X0, X20
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X8, [X8]
	046 Move X8, [X8+184]
	047 Move V0, [X8]
	048 Move [X20+144], D0
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Return X0
	054 Call 0x1C17F20

Method: System.Void Init()

Disassembly:
	0x03DA9AB8 CBNZ W8, 0x3DA9AC8
	0x03DA9ABC MOV X0, X20
	0x03DA9AC0 BL 0x1C16CF4
	0x03DA9AC4 STRB W27, [X26 + 0x78F]
	0x03DA9AC8 LDR W8, [X21 + 0x18]
	0x03DA9ACC CMP X29, X8
	0x03DA9AD0 B.CS 0x3DA9B98
	0x03DA9AD4 LDR X8, [X20]
	0x03DA9AD8 LDRB W9, [X28 + 0xF8B]
	0x03DA9ADC LDR X8, [X8 + 0xB8]
	0x03DA9AE0 LDR V8, [X8]
	0x03DA9AE4 TBNZ X9, 0x0, 0x3DA9AF8
	0x03DA9AE8 ADRP X0, 0x373000
	0x03DA9AEC LDR X0, [X0 + 0xE80]
	0x03DA9AF0 BL 0x1C16CF4
	0x03DA9AF4 STRB W27, [X28 + 0xF8B]
	0x03DA9AF8 ADD X8, X21, X22
	0x03DA9AFC STR D8, [X8 + 0x20]
	0x03DA9B00 STR X31, [X8 + 0x28]
	0x03DA9B04 STR W27, [X8 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x63F000
	006 Move X21, 0x3C0000
	007 Move W8, [X20+3944]
	008 Move X21, [X21+1728]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3C0000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3944], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x240AA28, X0
	022 Move X0, X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]

Method: System.Void .ctor()

Disassembly:
	0x03DA9B5C LDR W9, [X8 + 0x18]
	0x03DA9B60 CMP X29, X9
	0x03DA9B64 B.CS 0x3DA9B98
	0x03DA9B68 STR X31, [X8, X25, LSL #3]
	0x03DA9B6C ADD X25, X25, 0x1
	0x03DA9B70 ADD X22, X22, 0x18
	0x03DA9B74 B 0x3DA9A34
	0x03DA9B78 LDP X20, X19, [X31 + 0x60]
	0x03DA9B7C LDP X22, X21, [X31 + 0x50]
	0x03DA9B80 LDP X24, X23, [X31 + 0x40]
	0x03DA9B84 LDP X26, X25, [X31 + 0x30]
	0x03DA9B88 LDP X28, X27, [X31 + 0x20]
	0x03DA9B8C LDP X29, X30, [X31 + 0x10]
	0x03DA9B90 LDR V8, [X31], #0x70
	0x03DA9B94 RET
	0x03DA9B98 BL 0x1C16F28
	0x03DA9B9C BL 0x1C16F20
	0x03DA9BA0 STP D9, D8, [X31 - 0x30]!
	0x03DA9BA4 STP X30, X21, [X31 + 0x10]
	0x03DA9BA8 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x63F000
	006 Move X21, 0x3C0000
	007 Move W8, [X20+3945]
	008 Move X21, [X21+1736]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3C0000
	015 Move X0, [X0+1736]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3945], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x240A9B8, X0
	022 Move X0, X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Call NavigationMoveEvent.LocalInit, X0
	028 Return 

Method: System.Void LocalInit()

Disassembly:
	0x03DA9B08 LDR X0, [X24]
	0x03DA9B0C LDR W8, [X0 + 0xE0]
	0x03DA9B10 CBNZ W8, 0x3DA9B1C
	0x03DA9B14 BL 0x1C16DFC
	0x03DA9B18 LDR X0, [X24]
	0x03DA9B1C LDR X8, [X0 + 0xB8]
	0x03DA9B20 LDR X8, [X8 + 0x10]
	0x03DA9B24 CBZ X8, 0x3DA9B9C
	0x03DA9B28 LDR W9, [X8 + 0x18]
	0x03DA9B2C CMP X29, X9
	0x03DA9B30 B.CS 0x3DA9B98
	0x03DA9B34 LDR X9, [X8, X25, LSL #3]
	0x03DA9B38 CMP X9, X19
	0x03DA9B3C B.NE 0x3DA9B6C
	0x03DA9B40 LDR W9, [X0 + 0xE0]
	0x03DA9B44 CBNZ W9, 0x3DA9B5C
	0x03DA9B48 BL 0x1C16DFC
	0x03DA9B4C LDR X8, [X24]
	0x03DA9B50 LDR X8, [X8 + 0xB8]
	0x03DA9B54 LDR X8, [X8 + 0x10]
	0x03DA9B58 CBZ X8, 0x3DA9B9C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X0+140], W31
	005 Move X20, 0x631000
	006 Move W8, [X20+1935]
	007 Move X19, X0
	008 Compare W8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, 0x353000
	011 Move X0, [X0+3848]
	012 Call 0x1C17CF4
	013 Move W8, 1
	014 Move [X20+1935], W8
	015 Move X8, 0x353000
	016 Move X8, [X8+3848]
	017 Move X8, [X8]
	018 Move X8, [X8+184]
	019 Move V0, [X8]
	020 Move [X19+144], D0
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 

