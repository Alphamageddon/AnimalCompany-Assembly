Type: UnityEngine.UIElements.MultiColumnController

Method: System.Void add_columnSortingChanged(System.Action value)

Disassembly:
	0x03D771D8 BLR X8
	0x03D771DC CBNZ X20, 0x3D771E8
	0x03D771E0 MOV X0, X21
	0x03D771E4 BL 0x1D2C690
	0x03D771E8 MOV X0, X20
	0x03D771EC BL 0x1C16F18
	0x03D771F0 BL 0x1990590
	0x03D771F4 STR X30, [X31 - 0x60]!
	0x03D771F8 STP X28, X27, [X31 + 0x10]
	0x03D771FC STP X26, X25, [X31 + 0x20]
	0x03D77200 STP X24, X23, [X31 + 0x30]
	0x03D77204 STP X22, X21, [X31 + 0x40]
	0x03D77208 STP X20, X19, [X31 + 0x50]
	0x03D7720C ADRP X20, 0x670000
	0x03D77210 LDRB W8, [X20 + 0xD65]
	0x03D77214 MOV X19, X1
	0x03D77218 TBNZ X8, 0x0, 0x3D77278
	0x03D7721C ADRP X0, 0x3A5000
	0x03D77220 LDR X0, [X0 + 0xB68]
	0x03D77224 BL 0x1C16CF4
	0x03D77228 ADRP X0, 0x37C000
	0x03D7722C LDR X0, [X0 + 0xE00]
	0x03D77230 BL 0x1C16CF4
	0x03D77234 ADRP X0, 0x3EF000
	0x03D77238 LDR X0, [X0 + 0xF88]
	0x03D7723C BL 0x1C16CF4
	0x03D77240 ADRP X0, 0x3EF000
	0x03D77244 LDR X0, [X0 + 0xF90]
	0x03D77248 BL 0x1C16CF4
	0x03D7724C ADRP X0, 0x37C000
	0x03D77250 LDR X0, [X0 + 0xE18]
	0x03D77254 BL 0x1C16CF4
	0x03D77258 ADRP X0, 0x3A5000
	0x03D7725C LDR X0, [X0 + 0x100]
	0x03D77260 BL 0x1C16CF4
	0x03D77264 ADRP X0, 0x3A4000
	0x03D77268 LDR X0, [X0 + 0x898]
	0x03D7726C BL 0x1C16CF4
	0x03D77270 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x671000
	007 Move W8, [X21+3421]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x37E000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3421], W8
	019 Move X22, 0x37E000
	020 Add X20, X20, 16
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Combine, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void remove_columnSortingChanged(System.Action value)

Disassembly:
	0x03D77274 STRB W8, [X20 + 0xD65]
	0x03D77278 CBZ X19, 0x3D77580
	0x03D7727C MOV X0, X19
	0x03D77280 MOV X1, X31
	0x03D77284 BL 0x3DF66A4
	0x03D77288 CBZ X0, 0x3D77580
	0x03D7728C ADRP X10, 0x3EF000
	0x03D77290 LDR X8, [X0]
	0x03D77294 LDR X10, [X10 + 0xF88]
	0x03D77298 MOV X19, X0
	0x03D7729C LDRH W9, [X8 + 0x12E]
	0x03D772A0 LDR X1, [X10]
	0x03D772A4 CBZ X9, 0x3D772C8
	0x03D772A8 LDR X10, [X8 + 0xB0]
	0x03D772AC ADD X10, X10, 0x8
	0x03D772B0 LDUR X11, [X10 - 0x8]
	0x03D772B4 CMP X11, X1
	0x03D772B8 B.EQ 0x3D772D8
	0x03D772BC SUBS X9, X9, 0x1
	0x03D772C0 ADD X10, X10, 0x10
	0x03D772C4 B.NE 0x3D772B0
	0x03D772C8 MOV X0, X19
	0x03D772CC MOV W2, W31
	0x03D772D0 BL 0x1C5C788
	0x03D772D4 B 0x3D772E4
	0x03D772D8 LDRSW X9, [X10]
	0x03D772DC ADD X8, X8, X9, 0x4, LSL
	0x03D772E0 ADD X0, X8, 0x138
	0x03D772E4 LDP X8, X1, [X0]
	0x03D772E8 ADRP X22, 0x37C000
	0x03D772EC LDR X22, [X22 + 0xE00]
	0x03D772F0 MOV X0, X19
	0x03D772F4 BLR X8
	0x03D772F8 MOV X19, X0
	0x03D772FC CBZ X0, 0x3D77584
	0x03D77300 ADRP X24, 0x37C000
	0x03D77304 ADRP X25, 0x3EF000
	0x03D77308 ADRP X26, 0x3A5000
	0x03D7730C ADRP X27, 0x3A5000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x671000
	007 Move W8, [X21+3422]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x37E000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3422], W8
	019 Move X22, 0x37E000
	020 Add X20, X20, 16
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Remove, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void add_headerContextMenuPopulateEvent(System.Action`2<UnityEngine.UIElements.ContextualMenuPopulateEvent, UnityEngine.UIElements.Column> value)

Disassembly:
	0x03D77310 ADRP X28, 0x3A4000
	0x03D77314 LDR X24, [X24 + 0xE18]
	0x03D77318 LDR X25, [X25 + 0xF90]
	0x03D7731C LDR X26, [X26 + 0x100]
	0x03D77320 LDR X27, [X27 + 0xB68]
	0x03D77324 LDR X28, [X28 + 0x898]
	0x03D77328 MOV X23, X31
	0x03D7732C LDR X8, [X19]
	0x03D77330 LDR X1, [X24]
	0x03D77334 LDRH W9, [X8 + 0x12E]
	0x03D77338 CBZ X9, 0x3D7735C
	0x03D7733C LDR X10, [X8 + 0xB0]
	0x03D77340 ADD X10, X10, 0x8
	0x03D77344 LDUR X11, [X10 - 0x8]
	0x03D77348 CMP X11, X1
	0x03D7734C B.EQ 0x3D7736C
	0x03D77350 SUBS X9, X9, 0x1
	0x03D77354 ADD X10, X10, 0x10
	0x03D77358 B.NE 0x3D77344
	0x03D7735C MOV X0, X19
	0x03D77360 MOV W2, W31
	0x03D77364 BL 0x1C5C788
	0x03D77368 B 0x3D77378
	0x03D7736C LDRSW X9, [X10]
	0x03D77370 ADD X8, X8, X9, 0x4, LSL
	0x03D77374 ADD X0, X8, 0x138
	0x03D77378 LDP X8, X1, [X0]
	0x03D7737C MOV X0, X19
	0x03D77380 BLR X8
	0x03D77384 TBZ X0, 0x0, 0x3D774FC
	0x03D77388 LDR X8, [X19]
	0x03D7738C LDR X1, [X25]
	0x03D77390 LDRH W9, [X8 + 0x12E]
	0x03D77394 CBZ X9, 0x3D773B8
	0x03D77398 LDR X10, [X8 + 0xB0]
	0x03D7739C ADD X10, X10, 0x8
	0x03D773A0 LDUR X11, [X10 - 0x8]
	0x03D773A4 CMP X11, X1
	0x03D773A8 B.EQ 0x3D773C8
	0x03D773AC SUBS X9, X9, 0x1
	0x03D773B0 ADD X10, X10, 0x10
	0x03D773B4 B.NE 0x3D773A0
	0x03D773B8 MOV X0, X19
	0x03D773BC MOV W2, W31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x671000
	009 Move W8, [X21+3423]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F0000
	017 Move X0, [X0+1568]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3423], W8
	021 Move X24, 0x3F0000
	022 Add X20, X20, 24
	023 Move X21, [X20]
	024 Move X24, [X24+1568]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_headerContextMenuPopulateEvent(System.Action`2<UnityEngine.UIElements.ContextualMenuPopulateEvent, UnityEngine.UIElements.Column> value)

Disassembly:
	0x03D773C0 BL 0x1C5C788
	0x03D773C4 B 0x3D773D4
	0x03D773C8 LDRSW X9, [X10]
	0x03D773CC ADD X8, X8, X9, 0x4, LSL
	0x03D773D0 ADD X0, X8, 0x138
	0x03D773D4 LDP X8, X1, [X0]
	0x03D773D8 MOV X0, X19
	0x03D773DC BLR X8
	0x03D773E0 MOV X20, X0
	0x03D773E4 LDR X0, [X26]
	0x03D773E8 LDR W8, [X0 + 0xE0]
	0x03D773EC CBNZ W8, 0x3D773F4
	0x03D773F0 BL 0x1C16DFC
	0x03D773F4 CBZ X20, 0x3D7757C
	0x03D773F8 LDR X8, [X26]
	0x03D773FC LDR X8, [X8 + 0xB8]
	0x03D77400 LDR W1, [X8]
	0x03D77404 MOV X0, X20
	0x03D77408 MOV X2, X31
	0x03D7740C BL 0x3DF3018
	0x03D77410 MOV X21, X0
	0x03D77414 CBZ X0, 0x3D7732C
	0x03D77418 LDR X9, [X21]
	0x03D7741C LDR X8, [X27]
	0x03D77420 LDRB W11, [X9 + 0x130]
	0x03D77424 LDRB W10, [X8 + 0x130]
	0x03D77428 CMP W11, W10
	0x03D7742C B.CC 0x3D7732C
	0x03D77430 LDR X9, [X9 + 0xC8]
	0x03D77434 ADD X9, X9, X10, 0x3, LSL
	0x03D77438 LDUR X9, [X9 - 0x8]
	0x03D7743C CMP X9, X8
	0x03D77440 B.NE 0x3D7732C
	0x03D77444 LDR X0, [X26]
	0x03D77448 LDR W8, [X0 + 0xE0]
	0x03D7744C CBNZ W8, 0x3D77458
	0x03D77450 BL 0x1C16DFC
	0x03D77454 LDR X0, [X26]
	0x03D77458 LDR X8, [X0 + 0xB8]
	0x03D7745C LDR W1, [X8 + 0x4]
	0x03D77460 MOV X0, X20
	0x03D77464 MOV X2, X31
	0x03D77468 BL 0x3DF3018
	0x03D7746C CBZ X0, 0x3D77488

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x671000
	009 Move W8, [X21+3424]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F0000
	017 Move X0, [X0+1568]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3424], W8
	021 Move X24, 0x3F0000
	022 Add X20, X20, 24
	023 Move X21, [X20]
	024 Move X24, [X24+1568]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: UnityEngine.UIElements.Internal.MultiColumnCollectionHeader get_header()

Disassembly:
	0x03D77470 LDR X9, [X0]
	0x03D77474 LDR X8, [X28]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void .ctor(UnityEngine.UIElements.Columns columns, UnityEngine.UIElements.SortColumnDescriptions sortDescriptions, System.Collections.Generic.List`1<UnityEngine.UIElements.SortColumnDescription> sortedColumns)

Disassembly:
	0x03D77478 LDRB W11, [X9 + 0x130]
	0x03D7747C LDRB W10, [X8 + 0x130]
	0x03D77480 CMP W11, W10
	0x03D77484 B.CS 0x3D77490
	0x03D77488 MOV X8, X31
	0x03D7748C B 0x3D774A4
	0x03D77490 LDR X9, [X9 + 0xC8]
	0x03D77494 ADD X9, X9, X10, 0x3, LSL
	0x03D77498 LDUR X9, [X9 - 0x8]
	0x03D7749C CMP X9, X8
	0x03D774A0 CSEL X8, X0, X31, EQ
	0x03D774A4 LDR X9, [X21 + 0xA0]
	0x03D774A8 CMP X9, 0x0
	0x03D774AC CSEL X23, X23, X9, EQ
	0x03D774B0 CBZ X9, 0x3D774CC
	0x03D774B4 CBZ X23, 0x3D77590
	0x03D774B8 LDR X0, [X23 + 0x40]
	0x03D774BC LDR X9, [X23 + 0x18]
	0x03D774C0 LDR X2, [X23 + 0x28]
	0x03D774C4 MOV X1, X8
	0x03D774C8 BLR X9
	0x03D774CC LDR X0, [X26]
	0x03D774D0 LDR W8, [X0 + 0xE0]
	0x03D774D4 CBNZ W8, 0x3D774E0
	0x03D774D8 BL 0x1C16DFC
	0x03D774DC LDR X0, [X26]
	0x03D774E0 LDR X8, [X0 + 0xB8]
	0x03D774E4 LDR W1, [X8]
	0x03D774E8 MOV X0, X20
	0x03D774EC MOV X2, X31
	0x03D774F0 MOV X3, X31
	0x03D774F4 BL 0x3DF31F4
	0x03D774F8 B 0x3D7732C
	0x03D774FC MOV X20, X31
	0x03D77500 CBZ X19, 0x3D7755C
	0x03D77504 LDR X8, [X19]
	0x03D77508 LDR X1, [X22]
	0x03D7750C LDRH W9, [X8 + 0x12E]
	0x03D77510 CBZ X9, 0x3D77534
	0x03D77514 LDR X10, [X8 + 0xB0]
	0x03D77518 ADD X10, X10, 0x8
	0x03D7751C LDUR X11, [X10 - 0x8]
	0x03D77520 CMP X11, X1
	0x03D77524 B.EQ 0x3D77544
	0x03D77528 SUBS X9, X9, 0x1
	0x03D7752C ADD X10, X10, 0x10
	0x03D77530 B.NE 0x3D7751C
	0x03D77534 MOV X0, X19
	0x03D77538 MOV W2, W31
	0x03D7753C BL 0x1C5C788
	0x03D77540 B 0x3D77550
	0x03D77544 LDRSW X9, [X10]
	0x03D77548 ADD X8, X8, X9, 0x4, LSL
	0x03D7754C ADD X0, X8, 0x138
	0x03D77550 LDP X8, X1, [X0]
	0x03D77554 MOV X0, X19
	0x03D77558 BLR X8
	0x03D7755C CBNZ X20, 0x3D77588
	0x03D77560 LDP X20, X19, [X31 + 0x50]
	0x03D77564 LDP X22, X21, [X31 + 0x40]
	0x03D77568 LDP X24, X23, [X31 + 0x30]
	0x03D7756C LDP X26, X25, [X31 + 0x20]
	0x03D77570 LDP X28, X27, [X31 + 0x10]
	0x03D77574 LDR X30, [X31], #0x60
	0x03D77578 RET
	0x03D7757C BL 0x1C16F20
	0x03D77580 BL 0x1C16F20
	0x03D77584 BL 0x1C16F20
	0x03D77588 MOV X0, X20
	0x03D7758C BL 0x1C16F18
	0x03D77590 BL 0x1C16F20
	0x03D77594 B 0x3D775C0
	0x03D77598 B 0x3D775C0
	0x03D7759C B 0x3D775C0
	0x03D775A0 B 0x3D775C0
	0x03D775A4 B 0x3D775C0
	0x03D775A8 B 0x3D775C0
	0x03D775AC B 0x3D775C0
	0x03D775B0 B 0x3D775C0
	0x03D775B4 B 0x3D775C0
	0x03D775B8 B 0x3D775C0
	0x03D775BC B 0x3D775C0
	0x03D775C0 CMP W1, 0x1
	0x03D775C4 B.NE 0x3D775D8
	0x03D775C8 BL 0x3EB1AD0
	0x03D775CC LDR X20, [X0]
	0x03D775D0 BL 0x3EB1AE0
	0x03D775D4 B 0x3D77500
	0x03D775D8 MOV X21, X0
	0x03D775DC MOV X20, X31
	0x03D775E0 B 0x3D775E8
	0x03D775E4 MOV X21, X0
	0x03D775E8 CBZ X19, 0x3D77644
	0x03D775EC LDR X8, [X19]
	0x03D775F0 LDR X1, [X22]
	0x03D775F4 LDRH W9, [X8 + 0x12E]
	0x03D775F8 CBZ X9, 0x3D7761C
	0x03D775FC LDR X10, [X8 + 0xB0]
	0x03D77600 ADD X10, X10, 0x8
	0x03D77604 LDUR X11, [X10 - 0x8]
	0x03D77608 CMP X11, X1
	0x03D7760C B.EQ 0x3D7762C
	0x03D77610 SUBS X9, X9, 0x1
	0x03D77614 ADD X10, X10, 0x10
	0x03D77618 B.NE 0x3D77604
	0x03D7761C MOV X0, X19
	0x03D77620 MOV W2, W31
	0x03D77624 BL 0x1C5C788
	0x03D77628 B 0x3D77638
	0x03D7762C LDRSW X9, [X10]
	0x03D77630 ADD X8, X8, X9, 0x4, LSL
	0x03D77634 ADD X0, X8, 0x138
	0x03D77638 LDP X8, X1, [X0]
	0x03D7763C MOV X0, X19
	0x03D77640 BLR X8
	0x03D77644 CBNZ X20, 0x3D77650
	0x03D77648 MOV X0, X21
	0x03D7764C BL 0x1D2C690
	0x03D77650 MOV X0, X20
	0x03D77654 BL 0x1C16F18
	0x03D77658 BL 0x1990590
	0x03D7765C SUB X31, X31, 0x40
	0x03D77660 STP X30, X23, [X31 + 0x10]
	0x03D77664 STP X22, X21, [X31 + 0x20]
	0x03D77668 STP X20, X19, [X31 + 0x30]
	0x03D7766C ADRP X21, 0x670000
	0x03D77670 LDRB W8, [X21 + 0xD66]
	0x03D77674 MOV X20, X1
	0x03D77678 MOV X19, X0
	0x03D7767C TBNZ X8, 0x0, 0x3D77700
	0x03D77680 ADRP X0, 0x37E000
	0x03D77684 LDR X0, [X0 + 0x5B0]
	0x03D77688 BL 0x1C16CF4
	0x03D7768C ADRP X0, 0x3A6000
	0x03D77690 LDR X0, [X0 + 0x658]
	0x03D77694 BL 0x1C16CF4
	0x03D77698 ADRP X0, 0x37C000
	0x03D7769C LDR X0, [X0 + 0xA28]
	0x03D776A0 BL 0x1C16CF4
	0x03D776A4 ADRP X0, 0x3A6000
	0x03D776A8 LDR X0, [X0 + 0x660]
	0x03D776AC BL 0x1C16CF4
	0x03D776B0 ADRP X0, 0x3EF000
	0x03D776B4 LDR X0, [X0 + 0xF98]
	0x03D776B8 BL 0x1C16CF4
	0x03D776BC ADRP X0, 0x3EF000
	0x03D776C0 LDR X0, [X0 + 0xFA0]
	0x03D776C4 BL 0x1C16CF4
	0x03D776C8 ADRP X0, 0x3EF000
	0x03D776CC LDR X0, [X0 + 0xFA8]
	0x03D776D0 BL 0x1C16CF4
	0x03D776D4 ADRP X0, 0x3A5000
	0x03D776D8 LDR X0, [X0 + 0x100]
	0x03D776DC BL 0x1C16CF4
	0x03D776E0 ADRP X0, 0x3A4000
	0x03D776E4 LDR X0, [X0 + 0x898]
	0x03D776E8 BL 0x1C16CF4
	0x03D776EC ADRP X0, 0x3EF000
	0x03D776F0 LDR X0, [X0 + 0xFB0]
	0x03D776F4 BL 0x1C16CF4
	0x03D776F8 MOVZ W8, 0x1
	0x03D776FC STRB W8, [X21 + 0xD66]
	0x03D77700 LDR X8, [X19 + 0x20]
	0x03D77704 CBZ X8, 0x3D77738
	0x03D77708 ADRP X8, 0x37C000
	0x03D7770C LDR X8, [X8 + 0xA28]
	0x03D77710 ADRP X19, 0x3EF000
	0x03D77714 LDR X0, [X8]
	0x03D77718 LDR W8, [X0 + 0xE0]
	0x03D7771C LDR X19, [X19 + 0xFB0]
	0x03D77720 CBNZ W8, 0x3D77728
	0x03D77724 BL 0x1C16DFC
	0x03D77728 LDR X0, [X19]
	0x03D7772C MOV X1, X31
	0x03D77730 BL 0x3C06A04
	0x03D77734 B 0x3D778FC
	0x03D77738 STR X20, [X19 + 0x20]
	0x03D7773C ADRP X8, 0x3A4000
	0x03D77740 LDR X8, [X8 + 0x898]
	0x03D77744 LDR X0, [X8]
	0x03D77748 BL 0x1C16F10
	0x03D7774C MOV X1, X31
	0x03D77750 MOV X21, X0
	0x03D77754 BL 0x3DEF578
	0x03D77758 ADRP X22, 0x3A5000
	0x03D7775C LDR X22, [X22 + 0x100]
	0x03D77760 LDR X0, [X22]
	0x03D77764 LDR W8, [X0 + 0xE0]
	0x03D77768 CBNZ W8, 0x3D77770
	0x03D7776C BL 0x1C16DFC
	0x03D77770 CBZ X21, 0x3D77910
	0x03D77774 LDR X8, [X22]
	0x03D77778 MOV X0, X21
	0x03D7777C MOV X2, X31
	0x03D77780 LDR X8, [X8 + 0xB8]
	0x03D77784 LDR X1, [X8 + 0x18]
	0x03D77788 BL 0x3DEF278
	0x03D7778C STR X21, [X19 + 0x28]
	0x03D77790 LDR X8, [X22]
	0x03D77794 MOV X0, X21
	0x03D77798 MOV X2, X31
	0x03D7779C LDR X8, [X8 + 0xB8]
	0x03D777A0 LDR X1, [X8 + 0x18]
	0x03D777A4 BL 0x3DF1C70
	0x03D777A8 LDR X0, [X19 + 0x28]
	0x03D777AC CBZ X0, 0x3D77910
	0x03D777B0 LDR X8, [X22]
	0x03D777B4 MOV X2, X31
	0x03D777B8 LDR X8, [X8 + 0xB8]
	0x03D777BC LDR X1, [X8 + 0x10]
	0x03D777C0 BL 0x3DEB98C
	0x03D777C4 CBZ X20, 0x3D77910
	0x03D777C8 LDR X8, [X20 + 0x440]
	0x03D777CC CBZ X8, 0x3D77910
	0x03D777D0 LDR X8, [X8 + 0x378]
	0x03D777D4 ADD X0, X31, 0x8
	0x03D777D8 MOV W1, W31
	0x03D777DC MOV X3, X31
	0x03D777E0 STR X8, [X31 + 0x8]
	0x03D777E4 LDR X2, [X19 + 0x28]
	0x03D777E8 BL 0x3DF89E4
	0x03D777EC LDR X0, [X19 + 0x28]
	0x03D777F0 CBZ X0, 0x3D77910
	0x03D777F4 LDR X1, [X19 + 0x30]
	0x03D777F8 MOV X2, X31
	0x03D777FC BL 0x3DF60E8
	0x03D77800 LDR X8, [X19 + 0x20]
	0x03D77804 CBZ X8, 0x3D77910
	0x03D77808 LDR X8, [X8 + 0x440]
	0x03D7780C CBZ X8, 0x3D77910
	0x03D77810 LDR X20, [X8 + 0x420]
	0x03D77814 ADRP X8, 0x37E000
	0x03D77818 LDR X8, [X8 + 0x5B0]
	0x03D7781C LDR X0, [X8]
	0x03D77820 BL 0x1C16F10
	0x03D77824 ADRP X8, 0x3EF000
	0x03D77828 LDR X8, [X8 + 0xFA0]
	0x03D7782C MOV X1, X19
	0x03D77830 MOV X3, X31
	0x03D77834 MOV X21, X0
	0x03D77838 LDR X2, [X8]
	0x03D7783C BL 0x2A6DA40
	0x03D77840 CBZ X20, 0x3D77910
	0x03D77844 MOV X0, X20
	0x03D77848 MOV X1, X21
	0x03D7784C MOV X2, X31
	0x03D77850 BL 0x3D83D54
	0x03D77854 LDR X8, [X19 + 0x20]
	0x03D77858 CBZ X8, 0x3D77910
	0x03D7785C LDR X8, [X8 + 0x440]
	0x03D77860 CBZ X8, 0x3D77910
	0x03D77864 ADRP X22, 0x3A6000
	0x03D77868 LDR X20, [X8 + 0x418]
	0x03D7786C LDR X22, [X22 + 0x660]
	0x03D77870 LDR X0, [X22]
	0x03D77874 BL 0x1C16F10

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x671000
	010 Move X23, 0x3EC000
	011 Move X24, 0x3A6000
	012 Move W8, [X25+3425]
	013 Move X23, [X23+3152]
	014 Move X24, [X24+256]
	015 Move X20, X3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {82}
	023 Move X0, 0x3F0000
	024 Move X0, [X0+1616]
	025 Call 0x1C17CF4
	026 Move X0, 0x3F0000
	027 Move X0, [X0+3816]
	028 Call 0x1C17CF4
	029 Move X0, 0x3F0000
	030 Move X0, [X0+1624]
	031 Call 0x1C17CF4
	032 Move X0, 0x3F0000
	033 Move X0, [X0+1560]
	034 Call 0x1C17CF4
	035 Move X0, 0x3F0000
	036 Move X0, [X0+1632]
	037 Call 0x1C17CF4
	038 Move X0, 0x3F0000
	039 Move X0, [X0+1568]
	040 Call 0x1C17CF4
	041 Move X0, 0x3F0000
	042 Move X0, [X0+1640]
	043 Call 0x1C17CF4
	044 Move X0, 0x37E000
	045 Move X0, [X0+3696]
	046 Call 0x1C17CF4
	047 Move X0, 0x3EC000
	048 Move X0, [X0+3152]
	049 Call 0x1C17CF4
	050 Move X0, 0x3F0000
	051 Move X0, [X0+3904]
	052 Call 0x1C17CF4
	053 Move X0, 0x3F0000
	054 Move X0, [X0+3912]
	055 Call 0x1C17CF4
	056 Move X0, 0x3F0000
	057 Move X0, [X0+3920]
	058 Call 0x1C17CF4
	059 Move X0, 0x3F0000
	060 Move X0, [X0+3928]
	061 Call 0x1C17CF4
	062 Move X0, 0x3F0000
	063 Move X0, [X0+3936]
	064 Call 0x1C17CF4
	065 Move X0, 0x3F0000
	066 Move X0, [X0+3944]
	067 Call 0x1C17CF4
	068 Move X0, 0x3F0000
	069 Move X0, [X0+3952]
	070 Call 0x1C17CF4
	071 Move X0, 0x3F0000
	072 Move X0, [X0+3960]
	073 Call 0x1C17CF4
	074 Move X0, 0x3F0000
	075 Move X0, [X0+3968]
	076 Call 0x1C17CF4
	077 Move X0, 0x3A6000
	078 Move X0, [X0+256]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X25+3425], W8
	082 Move X0, X19
	083 Move X1, X31
	084 Call Object..ctor, X0
	085 Move X0, [X23]
	086 Call 0x1C17F10
	087 Move X1, X22
	088 Move X2, X21
	089 Move X3, X20
	090 Move X4, X31
	091 Move X23, X0
	092 Call MultiColumnCollectionHeader..ctor, X0, X1, X2, X3
	093 Move X0, [X24]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Compare X23, 0
	099 JumpIfEqual {283}
	100 Move X8, [X24]
	101 Move X22, 0x37E000
	102 Move X20, 0x3F0000
	103 Move X21, 0x3F0000
	104 Move X8, [X8+184]
	105 Move X22, [X22+3696]
	106 Move X24, 0x3F0000
	107 Move X0, X23
	108 Move X1, [X8+56]
	109 Move X20, [X20+3944]
	110 Move X21, [X21+1568]
	111 Move X24, [X24+3960]
	112 Move X2, X31
	113 Call VisualElement.set_viewDataKey, X0, X1
	114 Move [X19+48], X23
	115 Move X0, [X22]
	116 Call 0x1C17F10
	117 Move X2, [X20]
	118 Move X1, X19
	119 Move X3, X31
	120 Move X20, X0
	121 Call Action..ctor, X0, X1, X2
	122 Move X0, X23
	123 Move X1, X20
	124 Move X2, X31
	125 Call MultiColumnCollectionHeader.add_columnSortingChanged, X0, X1
	126 Move X0, [X21]
	127 Move X20, [X19+48]
	128 Call 0x1C17F10
	129 Move X2, [X24]
	130 Move X1, X19
	131 Move X3, X31
	132 Move X21, X0
	133 Call Action`2<Object, Object>..ctor, X0, X1, X2
	134 Compare X20, 0
	135 JumpIfEqual {283}
	136 Move X23, 0x3F0000
	137 Move X24, 0x3F0000
	138 Move X23, [X23+1560]
	139 Move X24, [X24+3936]
	140 Move X0, X20
	141 Move X1, X21
	142 Move X2, X31
	143 Call MultiColumnCollectionHeader.add_contextMenuPopulateEvent, X0, X1
	144 Move X0, [X23]
	145 Move X20, [X19+48]
	146 Call 0x1C17F10
	147 Move X2, [X24]
	148 Move X1, X19
	149 Move X3, X31
	150 Move X21, X0
	151 Call Action`2<Int32, Single>..ctor, X0, X1, X2
	152 Compare X20, 0
	153 JumpIfEqual {283}
	154 Move X23, 0x3F0000
	155 Move X23, [X23+3968]
	156 Move X0, X20
	157 Move X1, X21
	158 Move X2, X31
	159 Call MultiColumnCollectionHeader.add_columnResized, X0, X1
	160 Move X0, [X22]
	161 Move X20, [X19+48]
	162 Call 0x1C17F10
	163 Move X2, [X23]
	164 Move X1, X19
	165 Move X3, X31
	166 Move X21, X0
	167 Call Action..ctor, X0, X1, X2
	168 Compare X20, 0
	169 JumpIfEqual {283}
	170 Move X0, X20
	171 Move X1, X21
	172 Move X2, X31
	173 Call MultiColumnCollectionHeader.add_viewDataRestored, X0, X1
	174 Move X8, [X19+48]
	175 Compare X8, 0
	176 JumpIfEqual {283}
	177 Move X9, 0x3F0000
	178 Move X9, [X9+1632]
	179 Move X21, 0x3F0000
	180 Move X20, [X8+1056]
	181 Move X0, [X9]
	182 Move X21, [X21+3904]
	183 Call 0x1C17F10
	184 Move X2, [X21]
	185 Move X1, X19
	186 Move X3, X31
	187 Move X21, X0
	188 Call Action`2<Object, Int32>..ctor, X0, X1, X2
	189 Compare X20, 0
	190 JumpIfEqual {283}
	191 Move X0, X20
	192 Move X1, X21
	193 Call Columns.add_columnAdded, X0, X1
	194 Move X8, [X19+48]
	195 Compare X8, 0
	196 JumpIfEqual {283}
	197 Move X9, 0x3F0000
	198 Move X9, [X9+1616]
	199 Move X21, 0x3F0000
	200 Move X20, [X8+1056]
	201 Move X0, [X9]
	202 Move X21, [X21+3920]
	203 Call 0x1C17F10
	204 Move X2, [X21]
	205 Move X1, X19
	206 Move X3, X31
	207 Move X21, X0
	208 Call Action`1<Object>..ctor, X0, X1, X2
	209 Compare X20, 0
	210 JumpIfEqual {283}
	211 Move X0, X20
	212 Move X1, X21
	213 Call Columns.add_columnRemoved, X0, X1
	214 Move X8, [X19+48]
	215 Compare X8, 0
	216 JumpIfEqual {283}
	217 Move X9, 0x3F0000
	218 Move X9, [X9+1640]
	219 Move X21, 0x3F0000
	220 Move X20, [X8+1056]
	221 Move X0, [X9]
	222 Move X21, [X21+3928]
	223 Call 0x1C17F10
	224 Move X2, [X21]
	225 Move X1, X19
	226 Move X3, X31
	227 Move X21, X0
	228 Call Action`3<Object, Int32, Int32>..ctor, X0, X1, X2
	229 Compare X20, 0
	230 JumpIfEqual {283}
	231 Move X0, X20
	232 Move X1, X21
	233 Call Columns.add_columnReordered, X0, X1
	234 Move X8, [X19+48]
	235 Compare X8, 0
	236 JumpIfEqual {283}
	237 Move X9, 0x3F0000
	238 Move X9, [X9+1624]
	239 Move X21, 0x3F0000
	240 Move X20, [X8+1056]
	241 Move X0, [X9]
	242 Move X21, [X21+3952]
	243 Call 0x1C17F10
	244 Move X2, [X21]
	245 Move X1, X19
	246 Move X3, X31
	247 Move X21, X0
	248 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	249 Compare X20, 0
	250 JumpIfEqual {283}
	251 Move X0, X20
	252 Move X1, X21
	253 Call Columns.add_columnChanged, X0, X1
	254 Move X8, [X19+48]
	255 Compare X8, 0
	256 JumpIfEqual {283}
	257 Move X9, 0x3F0000
	258 Move X9, [X9+3816]
	259 Move X21, 0x3F0000
	260 Move X20, [X8+1056]
	261 Move X0, [X9]
	262 Move X21, [X21+3912]
	263 Call 0x1C17F10
	264 Move X2, [X21]
	265 Move X1, X19
	266 Move X3, X31
	267 Move X21, X0
	268 Call Action`1<Int32Enum>..ctor, X0, X1, X2
	269 Compare X20, 0
	270 JumpIfEqual {283}
	271 Move X0, X20
	272 Move X1, X21
	273 Move X20, [X31+48]
	274 Move X19, [X31+56]
	275 Move X22, [X31+32]
	276 Move X21, [X31+40]
	277 Move X24, [X31+16]
	278 Move X23, [X31+24]
	279 Move X30, [X31+64]
	280 Move X25, [X31+72]
	281 Call Columns.add_changed, X0, X1
	282 Return 
	283 Call 0x1C17F20

Method: System.Void BindCellItem(UnityEngine.UIElements.VisualElement ve, System.Int32 rowIndex, UnityEngine.UIElements.Column column, T item)

Disassembly:
	0x0222118C SUB X5, X29, 0x10
	0x02221190 MOV X2, X22
	0x02221194 LDR W9, [X9 + 0x28]
	0x02221198 MOV X4, X31
	0x0222119C CMP W9, 0x0
	0x022211A0 CSEL X3, X20, X8, LT
	0x022211A4 BL 0x1C17728
	0x022211A8 LDR X8, [X19]
	0x022211AC LDUR X1, [X29 - 0x10]
	0x022211B0 MOV X0, X19
	0x022211B4 LDR X9, [X8 + 0xB28]
	0x022211B8 LDR X2, [X8 + 0xB30]
	0x022211BC BLR X9
	0x022211C0 LDR X8, [X23 + 0x28]
	0x022211C4 LDUR X9, [X29 - 0x8]
	0x022211C8 CMP X8, X9
	0x022211CC B.NE 0x22211E8
	0x022211D0 ADD X31, X29, 0x0
	0x022211D4 LDP X20, X19, [X31 + 0x30]
	0x022211D8 LDP X22, X21, [X31 + 0x20]
	0x022211DC LDR X23, [X31 + 0x10]
	0x022211E0 LDP X29, X30, [X31], #0x40
	0x022211E4 RET
	0x022211E8 BL 0x3EB1B20
	0x022211EC SUB X31, X31, 0x80
	0x022211F0 STP X2, X30, [X31 + 0x48]
	0x022211F4 STP X22, X21, [X31 + 0x60]
	0x022211F8 STP X20, X19, [X31 + 0x70]
	0x022211FC STR X1, [X31 + 0x40]
	0x02221200 LDR X8, [X3 + 0x38]
	0x02221204 MOV X20, X0
	0x02221208 CBNZ X8, 0x2221248
	0x0222120C ADRP X0, 0x1ED2000
	0x02221210 LDR X0, [X0 + 0xE00]
	0x02221214 MOV X19, X3
	0x02221218 BL 0x1C16CF4
	0x0222121C ADRP X0, 0x1EFB000
	0x02221220 LDR X0, [X0 + 0x138]
	0x02221224 BL 0x1C16CF4
	0x02221228 ADRP X0, 0x1ED2000
	0x0222122C LDR X0, [X0 + 0xE18]
	0x02221230 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X4+56]
	008 Move X20, X3
	009 Move X22, X2
	010 Move W21, W1
	011 Move X19, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {23}
	014 Move X0, 0x1EFC000
	015 Move X0, [X0+256]
	016 Move X23, X4
	017 Call 0x1C17CF4
	018 Move X8, [X23+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {23}
	021 Move X0, X23
	022 Call 0x1C5D6E0
	023 Compare X22, 0
	024 JumpIfEqual {57}
	025 Move X8, [X22+144]
	026 Compare X8, 0
	027 JumpIfEqual {40}
	028 Move X4, [X8+24]
	029 Move X0, [X8+64]
	030 Move X3, [X8+40]
	031 Move X1, X19
	032 Move W2, W21
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 CallNoReturn X4
	040 Move X8, 0x1EFC000
	041 Move X8, [X8+256]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X19
	048 Move X2, X20
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Move X23, [X31+56]
	055 Call 0x2222000, X0, X1, X2
	056 Return 
	057 Call 0x1C17F20

Method: System.Void UnbindCellItem(UnityEngine.UIElements.VisualElement ve, System.Int32 rowIndex, UnityEngine.UIElements.Column column)

Disassembly:
	0x03D77878 ADRP X8, 0x3EF000
	0x03D7787C LDR X8, [X8 + 0xFA8]
	0x03D77880 MOV X1, X19
	0x03D77884 MOV X3, X31
	0x03D77888 MOV X21, X0
	0x03D7788C LDR X2, [X8]
	0x03D77890 BL 0x2D0E824
	0x03D77894 CBZ X20, 0x3D77910
	0x03D77898 ADRP X23, 0x3A6000
	0x03D7789C LDR X23, [X23 + 0x658]
	0x03D778A0 MOV X0, X20
	0x03D778A4 MOV X1, X21
	0x03D778A8 MOV W2, W31
	0x03D778AC LDR X3, [X23]
	0x03D778B0 BL 0x21A1534

ISIL:
	001 Move [X31-16], X30
	002 Compare X2, 0
	003 JumpIfEqual {17}
	004 Move X9, [X2+152]
	005 Compare X9, 0
	006 JumpIfEqual {15}
	007 Move W8, W1
	008 Move X1, X0
	009 Move X4, [X9+24]
	010 Move X0, [X9+64]
	011 Move X3, [X9+40]
	012 Move W2, W8
	013 Move X30, [X31+16]
	014 CallNoReturn X4
	015 Move X30, [X31+16]
	016 Return 
	017 Call 0x1C17F20

Method: UnityEngine.UIElements.VisualElement DefaultMakeCellItem()

Disassembly:
	0x03D778B4 LDR X8, [X19 + 0x30]
	0x03D778B8 CBZ X8, 0x3D77910
	0x03D778BC LDR X0, [X22]
	0x03D778C0 LDR X20, [X8 + 0x410]
	0x03D778C4 BL 0x1C16F10
	0x03D778C8 ADRP X8, 0x3EF000
	0x03D778CC LDR X8, [X8 + 0xF98]
	0x03D778D0 MOV X1, X19
	0x03D778D4 MOV X3, X31
	0x03D778D8 MOV X21, X0
	0x03D778DC LDR X2, [X8]
	0x03D778E0 BL 0x2D0E824
	0x03D778E4 CBZ X20, 0x3D77910
	0x03D778E8 LDR X3, [X23]
	0x03D778EC MOV X0, X20
	0x03D778F0 MOV X1, X21
	0x03D778F4 MOV W2, W31
	0x03D778F8 BL 0x21A1534
	0x03D778FC LDP X20, X19, [X31 + 0x30]
	0x03D77900 LDP X22, X21, [X31 + 0x20]
	0x03D77904 LDP X30, X23, [X31 + 0x10]
	0x03D77908 ADD X31, X31, 0x40
	0x03D7790C RET
	0x03D77910 BL 0x1C16F20
	0x03D77914 STR X30, [X31 - 0x40]!
	0x03D77918 STP X24, X23, [X31 + 0x10]
	0x03D7791C STP X22, X21, [X31 + 0x20]
	0x03D77920 STP X20, X19, [X31 + 0x30]
	0x03D77924 ADRP X20, 0x670000
	0x03D77928 LDRB W8, [X20 + 0xD67]
	0x03D7792C MOV X19, X0
	0x03D77930 TBNZ X8, 0x0, 0x3D77A50
	0x03D77934 ADRP X0, 0x3EF000
	0x03D77938 LDR X0, [X0 + 0x650]
	0x03D7793C BL 0x1C16CF4
	0x03D77940 ADRP X0, 0x37E000
	0x03D77944 LDR X0, [X0 + 0x5B0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x671000
	006 Move X21, 0x3A6000
	007 Move X20, 0x3A6000
	008 Move W8, [X19+3426]
	009 Move X21, [X21+304]
	010 Move X20, [X20+256]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x3A6000
	016 Move X0, [X0+304]
	017 Call 0x1C17CF4
	018 Move X0, 0x3A6000
	019 Move X0, [X0+256]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3426], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Call Label..ctor, X0
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Compare X19, 0
	033 JumpIfEqual {46}
	034 Move X8, [X20]
	035 Move X0, X19
	036 Move X2, X31
	037 Move X8, [X8+184]
	038 Move X1, [X8+48]
	039 Call VisualElement.AddToClassList, X0, X1
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 Call 0x1C17F20

Method: System.Void DefaultBindCellItem(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.Column column, T item)

Disassembly:
	0x02222000 BL 0x1E35770
	0x02222004 MOV X0, X20
	0x02222008 LDP X20, X19, [X31 + 0x10]
	0x0222200C LDR X30, [X31], #0x20
	0x02222010 RET
	0x02222014 STP X30, X19, [X31 - 0x10]!
	0x02222018 LDR X8, [X0 + 0x38]
	0x0222201C CBNZ X8, 0x2222024
	0x02222020 BL 0x1C5C6E0
	0x02222024 MOVZ W0, 0x40
	0x02222028 MOV X1, X31
	0x0222202C BL 0x1E35788
	0x02222030 MOVZ W1, 0x40
	0x02222034 MOV X2, X31
	0x02222038 MOV X19, X0
	0x0222203C BL 0x1E35770
	0x02222040 MOV X0, X19
	0x02222044 LDP X30, X19, [X31], #0x10
	0x02222048 RET
	0x0222204C MOV W1, W0
	0x02222050 MOVZ W0, 0x1
	0x02222054 MOV X2, X31
	0x02222058 B 0x1E358A8
	0x0222205C MOV W1, W0
	0x02222060 MOVZ W0, 0x2
	0x02222064 MOV X2, X31
	0x02222068 B 0x1E358A8
	0x0222206C MOV W1, W0
	0x02222070 MOVZ W0, 0x4
	0x02222074 MOV X2, X31
	0x02222078 B 0x1E358A8
	0x0222207C MOV W1, W0
	0x02222080 MOVZ W0, 0x168
	0x02222084 MOV X2, X31
	0x02222088 B 0x1E358A8
	0x0222208C MOV W1, W0
	0x02222090 MOVZ W0, 0x20
	0x02222094 MOV X2, X31
	0x02222098 B 0x1E358A8
	0x0222209C STR X30, [X31 - 0x20]!
	0x022220A0 STP X20, X19, [X31 + 0x10]
	0x022220A4 LDR X8, [X1 + 0x38]
	0x022220A8 MOV W19, W0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x21B8000
	006 Move W8, [X21+2170]
	007 Move X20, X2
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1EFB000
	014 Move X0, [X0+304]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2170], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x1EFB000
	021 Move X8, [X8+304]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 
	036 Compare X20, 0
	037 JumpIfEqual {53}
	038 Move X8, [X20]
	039 Move X0, X20
	040 Move X9, [X8+360]
	041 Move X1, [X8+368]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X8, [X19]
	044 Move X1, X0
	045 Move X0, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X3, [X8+2856]
	049 Move X2, [X8+2864]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 CallNoReturn X3
	053 Call 0x1C17F20

Method: UnityEngine.UIElements.VisualElement MakeItem()

Disassembly:
	0x03D77948 BL 0x1C16CF4
	0x03D7794C ADRP X0, 0x3EF000
	0x03D77950 LDR X0, [X0 + 0xEE8]
	0x03D77954 BL 0x1C16CF4
	0x03D77958 ADRP X0, 0x3EF000
	0x03D7795C LDR X0, [X0 + 0x658]
	0x03D77960 BL 0x1C16CF4
	0x03D77964 ADRP X0, 0x3EF000
	0x03D77968 LDR X0, [X0 + 0x618]
	0x03D7796C BL 0x1C16CF4
	0x03D77970 ADRP X0, 0x3EF000
	0x03D77974 LDR X0, [X0 + 0x660]
	0x03D77978 BL 0x1C16CF4
	0x03D7797C ADRP X0, 0x3EF000
	0x03D77980 LDR X0, [X0 + 0x620]
	0x03D77984 BL 0x1C16CF4
	0x03D77988 ADRP X0, 0x3EF000
	0x03D7798C LDR X0, [X0 + 0x668]
	0x03D77990 BL 0x1C16CF4
	0x03D77994 ADRP X0, 0x37D000
	0x03D77998 LDR X0, [X0 + 0xE70]
	0x03D7799C BL 0x1C16CF4
	0x03D779A0 ADRP X0, 0x3A6000
	0x03D779A4 LDR X0, [X0 + 0x698]
	0x03D779A8 BL 0x1C16CF4
	0x03D779AC ADRP X0, 0x3A6000
	0x03D779B0 LDR X0, [X0 + 0x660]
	0x03D779B4 BL 0x1C16CF4
	0x03D779B8 ADRP X0, 0x3EF000
	0x03D779BC LDR X0, [X0 + 0xF40]
	0x03D779C0 BL 0x1C16CF4
	0x03D779C4 ADRP X0, 0x3EF000
	0x03D779C8 LDR X0, [X0 + 0xF48]
	0x03D779CC BL 0x1C16CF4
	0x03D779D0 ADRP X0, 0x3EF000
	0x03D779D4 LDR X0, [X0 + 0xF98]
	0x03D779D8 BL 0x1C16CF4
	0x03D779DC ADRP X0, 0x3EF000
	0x03D779E0 LDR X0, [X0 + 0xF50]
	0x03D779E4 BL 0x1C16CF4
	0x03D779E8 ADRP X0, 0x3EF000
	0x03D779EC LDR X0, [X0 + 0xF58]
	0x03D779F0 BL 0x1C16CF4
	0x03D779F4 ADRP X0, 0x3EF000
	0x03D779F8 LDR X0, [X0 + 0xF60]
	0x03D779FC BL 0x1C16CF4
	0x03D77A00 ADRP X0, 0x3EF000
	0x03D77A04 LDR X0, [X0 + 0xF68]
	0x03D77A08 BL 0x1C16CF4
	0x03D77A0C ADRP X0, 0x3EF000
	0x03D77A10 LDR X0, [X0 + 0xF70]
	0x03D77A14 BL 0x1C16CF4
	0x03D77A18 ADRP X0, 0x3EF000
	0x03D77A1C LDR X0, [X0 + 0xF78]
	0x03D77A20 BL 0x1C16CF4
	0x03D77A24 ADRP X0, 0x3EF000
	0x03D77A28 LDR X0, [X0 + 0xFA0]
	0x03D77A2C BL 0x1C16CF4
	0x03D77A30 ADRP X0, 0x3EF000
	0x03D77A34 LDR X0, [X0 + 0xF80]
	0x03D77A38 BL 0x1C16CF4
	0x03D77A3C ADRP X0, 0x3EF000
	0x03D77A40 LDR X0, [X0 + 0xFA8]
	0x03D77A44 BL 0x1C16CF4
	0x03D77A48 MOVZ W8, 0x1
	0x03D77A4C STRB W8, [X20 + 0xD67]
	0x03D77A50 ADRP X23, 0x3A6000
	0x03D77A54 ADRP X22, 0x3A6000
	0x03D77A58 LDR X8, [X19 + 0x20]
	0x03D77A5C LDR X23, [X23 + 0x660]
	0x03D77A60 LDR X22, [X22 + 0x698]
	0x03D77A64 CBZ X8, 0x3D77B08
	0x03D77A68 LDR X8, [X8 + 0x440]
	0x03D77A6C CBZ X8, 0x3D77E0C
	0x03D77A70 ADRP X9, 0x37E000
	0x03D77A74 LDR X9, [X9 + 0x5B0]
	0x03D77A78 ADRP X21, 0x3EF000
	0x03D77A7C LDR X20, [X8 + 0x420]
	0x03D77A80 LDR X0, [X9]
	0x03D77A84 LDR X21, [X21 + 0xFA0]
	0x03D77A88 BL 0x1C16F10
	0x03D77A8C LDR X2, [X21]
	0x03D77A90 MOV X1, X19
	0x03D77A94 MOV X3, X31
	0x03D77A98 MOV X21, X0
	0x03D77A9C BL 0x2A6DA40
	0x03D77AA0 CBZ X20, 0x3D77E0C
	0x03D77AA4 MOV X0, X20
	0x03D77AA8 MOV X1, X21
	0x03D77AAC MOV X2, X31
	0x03D77AB0 BL 0x3D83E08
	0x03D77AB4 LDR X8, [X19 + 0x20]
	0x03D77AB8 CBZ X8, 0x3D77E0C
	0x03D77ABC LDR X8, [X8 + 0x440]
	0x03D77AC0 CBZ X8, 0x3D77E0C
	0x03D77AC4 LDR X0, [X23]
	0x03D77AC8 ADRP X21, 0x3EF000
	0x03D77ACC LDR X20, [X8 + 0x418]
	0x03D77AD0 LDR X21, [X21 + 0xFA8]
	0x03D77AD4 BL 0x1C16F10
	0x03D77AD8 LDR X2, [X21]
	0x03D77ADC MOV X1, X19
	0x03D77AE0 MOV X3, X31
	0x03D77AE4 MOV X21, X0
	0x03D77AE8 BL 0x2D0E824
	0x03D77AEC CBZ X20, 0x3D77E0C
	0x03D77AF0 LDR X3, [X22]
	0x03D77AF4 MOV X0, X20
	0x03D77AF8 MOV X1, X21
	0x03D77AFC MOV W2, W31
	0x03D77B00 BL 0x21A18B4
	0x03D77B04 STR X31, [X19 + 0x20]
	0x03D77B08 LDR X8, [X19 + 0x30]
	0x03D77B0C CBZ X8, 0x3D77E0C
	0x03D77B10 LDR X0, [X23]
	0x03D77B14 ADRP X21, 0x3EF000
	0x03D77B18 LDR X20, [X8 + 0x410]
	0x03D77B1C LDR X21, [X21 + 0xF98]
	0x03D77B20 BL 0x1C16F10
	0x03D77B24 LDR X2, [X21]
	0x03D77B28 MOV X1, X19
	0x03D77B2C MOV X3, X31
	0x03D77B30 MOV X21, X0
	0x03D77B34 BL 0x2D0E824
	0x03D77B38 CBZ X20, 0x3D77E0C
	0x03D77B3C LDR X3, [X22]
	0x03D77B40 ADRP X22, 0x37D000
	0x03D77B44 ADRP X23, 0x3EF000
	0x03D77B48 LDR X22, [X22 + 0xE70]
	0x03D77B4C LDR X23, [X23 + 0xF68]
	0x03D77B50 MOV X0, X20
	0x03D77B54 MOV X1, X21
	0x03D77B58 MOV W2, W31
	0x03D77B5C BL 0x21A18B4
	0x03D77B60 LDR X0, [X22]
	0x03D77B64 LDR X20, [X19 + 0x30]
	0x03D77B68 BL 0x1C16F10
	0x03D77B6C LDR X2, [X23]
	0x03D77B70 MOV X1, X19
	0x03D77B74 MOV X3, X31
	0x03D77B78 MOV X21, X0
	0x03D77B7C BL 0x3314368
	0x03D77B80 CBZ X20, 0x3D77E0C
	0x03D77B84 ADRP X23, 0x3EF000
	0x03D77B88 ADRP X24, 0x3EF000
	0x03D77B8C LDR X23, [X23 + 0x620]
	0x03D77B90 LDR X24, [X24 + 0xF78]
	0x03D77B94 MOV X0, X20
	0x03D77B98 MOV X1, X21
	0x03D77B9C MOV X2, X31
	0x03D77BA0 BL 0x3D5FA74
	0x03D77BA4 LDR X0, [X23]
	0x03D77BA8 LDR X20, [X19 + 0x30]
	0x03D77BAC BL 0x1C16F10
	0x03D77BB0 LDR X2, [X24]
	0x03D77BB4 MOV X1, X19
	0x03D77BB8 MOV X3, X31
	0x03D77BBC MOV X21, X0
	0x03D77BC0 BL 0x2A76D00
	0x03D77BC4 CBZ X20, 0x3D77E0C
	0x03D77BC8 ADRP X23, 0x3EF000
	0x03D77BCC ADRP X24, 0x3EF000
	0x03D77BD0 LDR X23, [X23 + 0x618]
	0x03D77BD4 LDR X24, [X24 + 0xF60]
	0x03D77BD8 MOV X0, X20
	0x03D77BDC MOV X1, X21
	0x03D77BE0 MOV X2, X31
	0x03D77BE4 BL 0x3D5FBC8
	0x03D77BE8 LDR X0, [X23]
	0x03D77BEC LDR X20, [X19 + 0x30]
	0x03D77BF0 BL 0x1C16F10
	0x03D77BF4 LDR X2, [X24]
	0x03D77BF8 MOV X1, X19
	0x03D77BFC MOV X3, X31
	0x03D77C00 MOV X21, X0
	0x03D77C04 BL 0x2A76110
	0x03D77C08 CBZ X20, 0x3D77E0C
	0x03D77C0C ADRP X23, 0x3EF000
	0x03D77C10 LDR X23, [X23 + 0xF80]
	0x03D77C14 MOV X0, X20
	0x03D77C18 MOV X1, X21
	0x03D77C1C MOV X2, X31
	0x03D77C20 BL 0x3D5F920
	0x03D77C24 LDR X0, [X22]
	0x03D77C28 LDR X20, [X19 + 0x30]
	0x03D77C2C BL 0x1C16F10
	0x03D77C30 LDR X2, [X23]
	0x03D77C34 MOV X1, X19
	0x03D77C38 MOV X3, X31
	0x03D77C3C MOV X21, X0
	0x03D77C40 BL 0x3314368
	0x03D77C44 CBZ X20, 0x3D77E0C
	0x03D77C48 MOV X0, X20
	0x03D77C4C MOV X1, X21
	0x03D77C50 MOV X2, X31
	0x03D77C54 BL 0x3D5FD1C
	0x03D77C58 LDR X8, [X19 + 0x30]
	0x03D77C5C CBZ X8, 0x3D77E0C
	0x03D77C60 ADRP X9, 0x3EF000
	0x03D77C64 LDR X9, [X9 + 0x660]
	0x03D77C68 ADRP X21, 0x3EF000
	0x03D77C6C LDR X20, [X8 + 0x420]
	0x03D77C70 LDR X0, [X9]
	0x03D77C74 LDR X21, [X21 + 0xF40]
	0x03D77C78 BL 0x1C16F10
	0x03D77C7C LDR X2, [X21]
	0x03D77C80 MOV X1, X19
	0x03D77C84 MOV X3, X31
	0x03D77C88 MOV X21, X0
	0x03D77C8C BL 0x2A7689C
	0x03D77C90 CBZ X20, 0x3D77E0C
	0x03D77C94 MOV X0, X20
	0x03D77C98 MOV X1, X21
	0x03D77C9C BL 0x3D74A88
	0x03D77CA0 LDR X8, [X19 + 0x30]
	0x03D77CA4 CBZ X8, 0x3D77E0C
	0x03D77CA8 ADRP X9, 0x3EF000
	0x03D77CAC LDR X9, [X9 + 0x650]
	0x03D77CB0 ADRP X21, 0x3EF000
	0x03D77CB4 LDR X20, [X8 + 0x420]
	0x03D77CB8 LDR X0, [X9]
	0x03D77CBC LDR X21, [X21 + 0xF50]
	0x03D77CC0 BL 0x1C16F10
	0x03D77CC4 LDR X2, [X21]
	0x03D77CC8 MOV X1, X19
	0x03D77CCC MOV X3, X31
	0x03D77CD0 MOV X21, X0
	0x03D77CD4 BL 0x2A6B948
	0x03D77CD8 CBZ X20, 0x3D77E0C
	0x03D77CDC MOV X0, X20
	0x03D77CE0 MOV X1, X21
	0x03D77CE4 BL 0x3D74B38
	0x03D77CE8 LDR X8, [X19 + 0x30]
	0x03D77CEC CBZ X8, 0x3D77E0C
	0x03D77CF0 ADRP X9, 0x3EF000
	0x03D77CF4 LDR X9, [X9 + 0x668]
	0x03D77CF8 ADRP X21, 0x3EF000
	0x03D77CFC LDR X20, [X8 + 0x420]
	0x03D77D00 LDR X0, [X9]
	0x03D77D04 LDR X21, [X21 + 0xF58]
	0x03D77D08 BL 0x1C16F10
	0x03D77D0C LDR X2, [X21]
	0x03D77D10 MOV X1, X19
	0x03D77D14 MOV X3, X31
	0x03D77D18 MOV X21, X0
	0x03D77D1C BL 0x2A782C0
	0x03D77D20 CBZ X20, 0x3D77E0C
	0x03D77D24 MOV X0, X20
	0x03D77D28 MOV X1, X21
	0x03D77D2C BL 0x3D74EA8
	0x03D77D30 LDR X8, [X19 + 0x30]
	0x03D77D34 CBZ X8, 0x3D77E0C
	0x03D77D38 ADRP X9, 0x3EF000
	0x03D77D3C LDR X9, [X9 + 0x658]
	0x03D77D40 ADRP X21, 0x3EF000
	0x03D77D44 LDR X20, [X8 + 0x420]
	0x03D77D48 LDR X0, [X9]
	0x03D77D4C LDR X21, [X21 + 0xF70]
	0x03D77D50 BL 0x1C16F10
	0x03D77D54 LDR X2, [X21]
	0x03D77D58 MOV X1, X19
	0x03D77D5C MOV X3, X31
	0x03D77D60 MOV X21, X0
	0x03D77D64 BL 0x2A769B4
	0x03D77D68 CBZ X20, 0x3D77E0C
	0x03D77D6C MOV X0, X20
	0x03D77D70 MOV X1, X21
	0x03D77D74 BL 0x3D74C98
	0x03D77D78 LDR X8, [X19 + 0x30]
	0x03D77D7C CBZ X8, 0x3D77E0C
	0x03D77D80 ADRP X9, 0x3EF000
	0x03D77D84 LDR X9, [X9 + 0xEE8]
	0x03D77D88 ADRP X21, 0x3EF000
	0x03D77D8C LDR X20, [X8 + 0x420]
	0x03D77D90 LDR X0, [X9]
	0x03D77D94 LDR X21, [X21 + 0xF48]
	0x03D77D98 BL 0x1C16F10
	0x03D77D9C LDR X2, [X21]
	0x03D77DA0 MOV X1, X19
	0x03D77DA4 MOV X3, X31
	0x03D77DA8 MOV X21, X0
	0x03D77DAC BL 0x2984034
	0x03D77DB0 CBZ X20, 0x3D77E0C
	0x03D77DB4 MOV X0, X20
	0x03D77DB8 MOV X1, X21
	0x03D77DBC BL 0x3D749A0
	0x03D77DC0 LDR X0, [X19 + 0x30]
	0x03D77DC4 CBZ X0, 0x3D77E0C
	0x03D77DC8 MOV X1, X31
	0x03D77DCC BL 0x3DF6948
	0x03D77DD0 LDR X0, [X19 + 0x30]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X19, 0x671000
	013 Move X24, 0x3A5000
	014 Move X25, 0x3A6000
	015 Move W8, [X19+3427]
	016 Move X24, [X24+2200]
	017 Move X25, [X25+256]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {43}
	023 Move X0, 0x37D000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0x3A6000
	027 Move X0, [X0+272]
	028 Call 0x1C17CF4
	029 Move X0, 0x3A6000
	030 Move X0, [X0+280]
	031 Call 0x1C17CF4
	032 Move X0, 0x37D000
	033 Move X0, [X0+3608]
	034 Call 0x1C17CF4
	035 Move X0, 0x3A6000
	036 Move X0, [X0+256]
	037 Call 0x1C17CF4
	038 Move X0, 0x3A5000
	039 Move X0, [X0+2200]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X19+3427], W8
	043 Move X0, [X24]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X19, X0
	047 Call VisualElement..ctor, X0
	048 Move X0, [X25]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Compare X19, 0
	054 JumpIfEqual {261}
	055 Move X8, [X25]
	056 Move X0, X19
	057 Move X2, X31
	058 Move X8, [X8+184]
	059 Move X1, [X8+32]
	060 Call VisualElement.set_name, X0, X1
	061 Move X8, [X25]
	062 Move X0, X19
	063 Move X2, X31
	064 Move X8, [X8+184]
	065 Move X1, [X8+32]
	066 Call VisualElement.AddToClassList, X0, X1
	067 Move X8, [X20+48]
	068 Compare X8, 0
	069 JumpIfEqual {261}
	070 Move X20, [X8+1056]
	071 Compare X20, 0
	072 JumpIfEqual {261}
	073 Move X0, X20
	074 Call Columns.UpdateVisibleColumns, X0
	075 Move X20, [X20+32]
	076 Compare X20, 0
	077 JumpIfEqual {261}
	078 Move X10, 0x3A6000
	079 Move X8, [X20]
	080 Move X10, [X10+272]
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Move X1, [X10]
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move X0, X20
	092 Move W2, W31
	093 Call 0x1C5D788
	094 NotImplemented "Instruction LDRSW not yet implemented."
	095 Add X8, X8, X9
	096 Add X0, X8, 312
	097 Move X8, [X0]
	098 Move X1, [X0+8]
	099 Move X23, 0x37D000
	100 Move X23, [X23+3584]
	101 Move X0, X20
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X20, X0
	104 Compare X0, 0
	105 JumpIfEqual {262}
	106 Move X27, 0x37D000
	107 Move X28, 0x3A6000
	108 Move X27, [X27+3608]
	109 Move X28, [X28+280]
	110 Move X26, X31
	111 Move X8, [X20]
	112 Move X1, [X27]
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move X0, X20
	123 Move W2, W31
	124 Call 0x1C5D788
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 Add X8, X8, X9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X1, [X0+8]
	130 Move X0, X20
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {219}
	136 Move X8, [X20]
	137 Move X1, [X28]
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move X0, X20
	148 Move W2, W31
	149 Call 0x1C5D788
	150 NotImplemented "Instruction LDRSW not yet implemented."
	151 Add X8, X8, X9
	152 Add X0, X8, 312
	153 Move X8, [X0]
	154 Move X1, [X0+8]
	155 Move X0, X20
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move X22, X0
	158 Move X0, [X24]
	159 Call 0x1C17F10
	160 Move X21, X0
	161 Move X1, X31
	162 Call VisualElement..ctor, X0
	163 Move X0, [X25]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Compare X21, 0
	169 JumpIfEqual {258}
	170 Move X8, [X25]
	171 Move X8, [X8+184]
	172 Move X1, [X8+40]
	173 Move X0, X21
	174 Move X2, X31
	175 Call VisualElement.AddToClassList, X0, X1
	176 Compare X22, 0
	177 JumpIfEqual {259}
	178 Move X8, [X22+136]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 NotImplemented "Instruction CSEL not yet implemented."
	181 Compare X8, 0
	182 JumpIfEqual {192}
	183 Compare X26, 0
	184 JumpIfEqual {260}
	185 Move X0, [X26+64]
	186 Move X1, [X26+40]
	187 Move X8, [X26+24]
	188 NotImplemented "Instruction BLR not yet implemented."
	189 Move X22, X0
	190 Compare X0, 0
	191 JumpIfNotEqual {199}
	192 Move X0, [X25]
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {197}
	196 Call 0x1C17DFC
	197 Call MultiColumnController.DefaultMakeCellItem
	198 Move X22, X0
	199 Move X0, [X25]
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {205}
	203 Call 0x1C17DFC
	204 Move X0, [X25]
	205 Move X8, [X0+184]
	206 Move W1, [X8+4]
	207 Move X0, X21
	208 Move X2, X22
	209 Move X3, X31
	210 Call VisualElement.SetProperty, X0, X1, X2
	211 Move X0, X21
	212 Move X1, X22
	213 Move X2, X31
	214 Call VisualElement.Add, X0, X1
	215 Move X0, X19
	216 Move X1, X21
	217 Move X2, X31
	218 Call VisualElement.Add, X0, X1
	219 Move X21, X31
	220 Compare X20, 0
	221 JumpIfEqual {243}
	222 Move X8, [X20]
	223 Move X1, [X23]
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 Compare X9, 0
	226 JumpIfEqual {233}
	227 Move X10, [X8+176]
	228 Add X10, X10, 8
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Subtract X9, X9, 1
	232 Add X10, X10, 16
	233 Move X0, X20
	234 Move W2, W31
	235 Call 0x1C5D788
	236 NotImplemented "Instruction LDRSW not yet implemented."
	237 Add X8, X8, X9
	238 Add X0, X8, 312
	239 Move X8, [X0]
	240 Move X1, [X0+8]
	241 Move X0, X20
	242 NotImplemented "Instruction BLR not yet implemented."
	243 Compare X21, 0
	244 JumpIfNotEqual {263}
	245 Move X0, X19
	246 Move X20, [X31+80]
	247 Move X19, [X31+88]
	248 Move X22, [X31+64]
	249 Move X21, [X31+72]
	250 Move X24, [X31+48]
	251 Move X23, [X31+56]
	252 Move X26, [X31+32]
	253 Move X25, [X31+40]
	254 Move X28, [X31+16]
	255 Move X27, [X31+24]
	256 Move X30, [X31+96]
	257 Return X0
	258 Call 0x1C17F20
	259 Call 0x1C17F20
	260 Call 0x1C17F20
	261 Call 0x1C17F20
	262 Call 0x1C17F20
	263 Move X0, X21
	264 Call 0x1C17F18
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Call 0x3EB2AD0
	267 Move X21, [X0]
	268 Call 0x3EB2AE0
	269 Move X19, X0
	270 Move X21, X31
	271 Move X19, X0
	272 Compare X20, 0
	273 JumpIfEqual {295}
	274 Move X8, [X20]
	275 Move X1, [X23]
	276 NotImplemented "Instruction LDRH not yet implemented."
	277 Compare X9, 0
	278 JumpIfEqual {285}
	279 Move X10, [X8+176]
	280 Add X10, X10, 8
	281 NotImplemented "Instruction LDUR not yet implemented."
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Subtract X9, X9, 1
	284 Add X10, X10, 16
	285 Move X0, X20
	286 Move W2, W31
	287 Call 0x1C5D788
	288 NotImplemented "Instruction LDRSW not yet implemented."
	289 Add X8, X8, X9
	290 Add X0, X8, 312
	291 Move X8, [X0]
	292 Move X1, [X0+8]
	293 Move X0, X20
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Compare X21, 0
	296 JumpIfNotEqual {299}
	297 Move X0, X19
	298 Call 0x1D2D690
	299 Move X0, X21
	300 Call 0x1C17F18
	301 Call 0x1991590

Method: System.Void BindItem(UnityEngine.UIElements.VisualElement element, System.Int32 index, T item)

Disassembly:
	0x02221378 LDUR X11, [X10 - 0x8]
	0x0222137C CMP X11, X1
	0x02221380 B.EQ 0x22213A0
	0x02221384 SUBS X9, X9, 0x1
	0x02221388 ADD X10, X10, 0x10
	0x0222138C B.NE 0x2221378
	0x02221390 MOV X0, X19
	0x02221394 MOV W2, W31
	0x02221398 BL 0x1C5C788
	0x0222139C B 0x22213AC
	0x022213A0 LDRSW X9, [X10]
	0x022213A4 ADD X8, X8, X9, 0x4, LSL
	0x022213A8 ADD X0, X8, 0x138
	0x022213AC LDP X8, X1, [X0]
	0x022213B0 MOV X0, X19
	0x022213B4 BLR X8
	0x022213B8 CBNZ X20, 0x22213D4
	0x022213BC LDP X20, X19, [X31 + 0x70]
	0x022213C0 LDP X22, X21, [X31 + 0x60]
	0x022213C4 LDR X30, [X31 + 0x50]
	0x022213C8 ADD X31, X31, 0x80
	0x022213CC RET
	0x022213D0 BL 0x1C16F20
	0x022213D4 MOV X0, X20
	0x022213D8 BL 0x1C16F18
	0x022213DC B 0x22213E8
	0x022213E0 B 0x22213E8
	0x022213E4 B 0x22213E8
	0x022213E8 CMP W1, 0x1
	0x022213EC B.NE 0x2221400
	0x022213F0 BL 0x3EB1AD0
	0x022213F4 LDR X20, [X0]
	0x022213F8 BL 0x3EB1AE0
	0x022213FC B 0x2221354
	0x02221400 STR X0, [X31 + 0x58]
	0x02221404 MOV X20, X31
	0x02221408 B 0x2221410
	0x0222140C STR X0, [X31 + 0x58]
	0x02221410 CBZ X19, 0x2221474
	0x02221414 ADRP X10, 0x1ED2000
	0x02221418 LDR X8, [X19]
	0x0222141C LDR X10, [X10 + 0xE00]
	0x02221420 LDRH W9, [X8 + 0x12E]
	0x02221424 LDR X1, [X10]
	0x02221428 CBZ X9, 0x222144C
	0x0222142C LDR X10, [X8 + 0xB0]
	0x02221430 ADD X10, X10, 0x8
	0x02221434 LDUR X11, [X10 - 0x8]
	0x02221438 CMP X11, X1
	0x0222143C B.EQ 0x222145C
	0x02221440 SUBS X9, X9, 0x1
	0x02221444 ADD X10, X10, 0x10
	0x02221448 B.NE 0x2221434
	0x0222144C MOV X0, X19
	0x02221450 MOV W2, W31
	0x02221454 BL 0x1C5C788
	0x02221458 B 0x2221468
	0x0222145C LDRSW X9, [X10]
	0x02221460 ADD X8, X8, X9, 0x4, LSL
	0x02221464 ADD X0, X8, 0x138
	0x02221468 LDP X8, X1, [X0]
	0x0222146C MOV X0, X19
	0x02221470 BLR X8
	0x02221474 CBNZ X20, 0x2221480
	0x02221478 LDR X0, [X31 + 0x58]
	0x0222147C BL 0x1D2C690
	0x02221480 MOV X0, X20
	0x02221484 BL 0x1C16F18
	0x02221488 BL 0x1990590
	0x0222148C STP X29, X30, [X31 - 0x40]!
	0x02221490 STR X23, [X31 + 0x10]
	0x02221494 STP X22, X21, [X31 + 0x20]
	0x02221498 STP X20, X19, [X31 + 0x30]
	0x0222149C ADD X29, X31, 0x0
	0x022214A0 SUB X31, X31, 0x50
	0x022214A4 MRS X23, 0xC000
	0x022214A8 LDR X8, [X23 + 0x28]
	0x022214AC MOV X21, X2
	0x022214B0 MOV X19, X1
	0x022214B4 MOV X20, X0
	0x022214B8 STUR X8, [X29 - 0x8]
	0x022214BC STUR X1, [X29 - 0x10]
	0x022214C0 LDR X8, [X2 + 0x38]
	0x022214C4 CBNZ X8, 0x2221500
	0x022214C8 ADRP X0, 0x1ED2000
	0x022214CC LDR X0, [X0 + 0xE00]
	0x022214D0 BL 0x1C16CF4
	0x022214D4 ADRP X0, 0x1EFB000
	0x022214D8 LDR X0, [X0 + 0x138]
	0x022214DC BL 0x1C16CF4
	0x022214E0 ADRP X0, 0x1ED2000
	0x022214E4 LDR X0, [X0 + 0xE18]
	0x022214E8 BL 0x1C16CF4
	0x022214EC LDR X8, [X21 + 0x38]
	0x022214F0 CBNZ X8, 0x2221500
	0x022214F4 MOV X0, X21
	0x022214F8 BL 0x1C5C6E0
	0x022214FC LDR X8, [X21 + 0x38]
	0x02221500 LDR X0, [X8]
	0x02221504 LDRB W9, [X0 + 0x135]
	0x02221508 TBNZ X9, 0x0, 0x2221514
	0x0222150C BL 0x1C5C684
	0x02221510 LDR X8, [X21 + 0x38]
	0x02221514 LDR W9, [X0 + 0xFC]
	0x02221518 ADD X10, X31, 0x0
	0x0222151C ADD W9, W9, 0x10
	0x02221520 ADD X9, X9, 0xF
	0x02221524 AND X9, X9, 0x1FFFFFFFF
	0x02221528 SUB X22, X10, X9
	0x0222152C ADD X31, X22, 0x0
	0x02221530 STP X31, X31, [X29 - 0x30]
	0x02221534 STUR X31, [X29 - 0x20]
	0x02221538 LDR X0, [X8]
	0x0222153C LDRB W9, [X0 + 0x135]
	0x02221540 TBNZ X9, 0x0, 0x222154C
	0x02221544 BL 0x1C5C684
	0x02221548 LDR X8, [X21 + 0x38]
	0x0222154C LDP X9, X1, [X8]
	0x02221550 SUB X8, X29, 0x10
	0x02221554 SUB X5, X29, 0x48
	0x02221558 MOV X2, X22
	0x0222155C LDR W9, [X9 + 0x28]
	0x02221560 MOV X4, X31
	0x02221564 CMP W9, 0x0
	0x02221568 CSEL X3, X19, X8, LT
	0x0222156C BL 0x1C17728
	0x02221570 LDUR X19, [X29 - 0x48]
	0x02221574 CBZ X19, 0x22216F8
	0x02221578 ADRP X21, 0x1ED2000
	0x0222157C ADRP X22, 0x1EFB000
	0x02221580 LDR X21, [X21 + 0xE18]
	0x02221584 LDR X22, [X22 + 0x138]
	0x02221588 LDR X8, [X19]
	0x0222158C LDR X1, [X21]
	0x02221590 LDRH W9, [X8 + 0x12E]
	0x02221594 CBZ X9, 0x22215B8
	0x02221598 LDR X10, [X8 + 0xB0]
	0x0222159C ADD X10, X10, 0x8
	0x022215A0 LDUR X11, [X10 - 0x8]
	0x022215A4 CMP X11, X1
	0x022215A8 B.EQ 0x22215C8
	0x022215AC SUBS X9, X9, 0x1
	0x022215B0 ADD X10, X10, 0x10
	0x022215B4 B.NE 0x22215A0
	0x022215B8 MOV X0, X19
	0x022215BC MOV W2, W31
	0x022215C0 BL 0x1C5C788
	0x022215C4 B 0x22215D4
	0x022215C8 LDRSW X9, [X10]
	0x022215CC ADD X8, X8, X9, 0x4, LSL
	0x022215D0 ADD X0, X8, 0x138
	0x022215D4 LDP X8, X1, [X0]
	0x022215D8 MOV X0, X19
	0x022215DC BLR X8
	0x022215E0 TBZ X0, 0x0, 0x2221664
	0x022215E4 LDR X8, [X19]
	0x022215E8 LDR X1, [X22]
	0x022215EC LDRH W9, [X8 + 0x12E]
	0x022215F0 CBZ X9, 0x2221614
	0x022215F4 LDR X10, [X8 + 0xB0]
	0x022215F8 ADD X10, X10, 0x8
	0x022215FC LDUR X11, [X10 - 0x8]
	0x02221600 CMP X11, X1
	0x02221604 B.EQ 0x2221624
	0x02221608 SUBS X9, X9, 0x1
	0x0222160C ADD X10, X10, 0x10
	0x02221610 B.NE 0x22215FC
	0x02221614 MOV X0, X19
	0x02221618 MOV W2, W31
	0x0222161C BL 0x1C5C788
	0x02221620 B 0x2221630
	0x02221624 LDRSW X9, [X10]
	0x02221628 ADD X8, X8, X9, 0x4, LSL
	0x0222162C ADD X0, X8, 0x138
	0x02221630 LDP X9, X1, [X0]
	0x02221634 SUB X8, X29, 0x48
	0x02221638 MOV X0, X19
	0x0222163C BLR X9
	0x02221640 LDUR V0, [X29 - 0x48]
	0x02221644 LDUR X8, [X29 - 0x38]
	0x02221648 STUR V0, [X29 - 0x30]
	0x0222164C STUR X8, [X29 - 0x20]
	0x02221650 SUB X0, X29, 0x30
	0x02221654 MOV X1, X20
	0x02221658 MOV X2, X31
	0x0222165C BL 0x3764750
	0x02221660 B 0x2221588
	0x02221664 MOV X20, X31
	0x02221668 CBZ X19, 0x22216CC
	0x0222166C ADRP X10, 0x1ED2000
	0x02221670 LDR X8, [X19]
	0x02221674 LDR X10, [X10 + 0xE00]
	0x02221678 LDRH W9, [X8 + 0x12E]
	0x0222167C LDR X1, [X10]
	0x02221680 CBZ X9, 0x22216A4
	0x02221684 LDR X10, [X8 + 0xB0]
	0x02221688 ADD X10, X10, 0x8
	0x0222168C LDUR X11, [X10 - 0x8]
	0x02221690 CMP X11, X1
	0x02221694 B.EQ 0x22216B4
	0x02221698 SUBS X9, X9, 0x1
	0x0222169C ADD X10, X10, 0x10
	0x022216A0 B.NE 0x222168C
	0x022216A4 MOV X0, X19
	0x022216A8 MOV W2, W31
	0x022216AC BL 0x1C5C788
	0x022216B0 B 0x22216C0
	0x022216B4 LDRSW X9, [X10]
	0x022216B8 ADD X8, X8, X9, 0x4, LSL
	0x022216BC ADD X0, X8, 0x138
	0x022216C0 LDP X8, X1, [X0]
	0x022216C4 MOV X0, X19
	0x022216C8 BLR X8
	0x022216CC CBNZ X20, 0x22216FC
	0x022216D0 LDR X8, [X23 + 0x28]
	0x022216D4 LDUR X9, [X29 - 0x8]
	0x022216D8 CMP X8, X9
	0x022216DC B.NE 0x2221704
	0x022216E0 ADD X31, X29, 0x0
	0x022216E4 LDP X20, X19, [X31 + 0x30]
	0x022216E8 LDP X22, X21, [X31 + 0x20]
	0x022216EC LDR X23, [X31 + 0x10]
	0x022216F0 LDP X29, X30, [X31], #0x40
	0x022216F4 RET
	0x022216F8 BL 0x1C16F20
	0x022216FC MOV X0, X20
	0x02221700 BL 0x1C16F18
	0x02221704 BL 0x3EB1B20
	0x02221708 B 0x2221714
	0x0222170C B 0x2221714
	0x02221710 B 0x2221714
	0x02221714 CMP W1, 0x1
	0x02221718 B.NE 0x222172C
	0x0222171C BL 0x3EB1AD0
	0x02221720 LDR X20, [X0]
	0x02221724 BL 0x3EB1AE0
	0x02221728 B 0x2221668
	0x0222172C MOV X21, X0
	0x02221730 MOV X20, X31
	0x02221734 B 0x222173C
	0x02221738 MOV X21, X0
	0x0222173C CBZ X19, 0x22217A0
	0x02221740 ADRP X10, 0x1ED2000
	0x02221744 LDR X8, [X19]
	0x02221748 LDR X10, [X10 + 0xE00]
	0x0222174C LDRH W9, [X8 + 0x12E]
	0x02221750 LDR X1, [X10]
	0x02221754 CBZ X9, 0x2221778
	0x02221758 LDR X10, [X8 + 0xB0]
	0x0222175C ADD X10, X10, 0x8
	0x02221760 LDUR X11, [X10 - 0x8]
	0x02221764 CMP X11, X1
	0x02221768 B.EQ 0x2221788
	0x0222176C SUBS X9, X9, 0x1
	0x02221770 ADD X10, X10, 0x10
	0x02221774 B.NE 0x2221760
	0x02221778 MOV X0, X19
	0x0222177C MOV W2, W31
	0x02221780 BL 0x1C5C788
	0x02221784 B 0x2221794
	0x02221788 LDRSW X9, [X10]
	0x0222178C ADD X8, X8, X9, 0x4, LSL
	0x02221790 ADD X0, X8, 0x138
	0x02221794 LDP X8, X1, [X0]
	0x02221798 MOV X0, X19
	0x0222179C BLR X8
	0x022217A0 CBNZ X20, 0x22217AC
	0x022217A4 MOV X0, X21
	0x022217A8 BL 0x1D2C690
	0x022217AC MOV X0, X20
	0x022217B0 BL 0x1C16F18
	0x022217B4 BL 0x1990590
	0x022217B8 STP X29, X30, [X31 - 0x40]!
	0x022217BC STP X24, X23, [X31 + 0x10]
	0x022217C0 STP X22, X21, [X31 + 0x20]
	0x022217C4 STP X20, X19, [X31 + 0x30]
	0x022217C8 ADD X29, X31, 0x0
	0x022217CC SUB X31, X31, 0x20
	0x022217D0 MRS X23, 0xC000
	0x022217D4 LDR X9, [X23 + 0x28]
	0x022217D8 MOV X21, X1
	0x022217DC MOV X19, X0
	0x022217E0 MOV X20, X8
	0x022217E4 STUR X9, [X29 - 0x8]
	0x022217E8 LDR X24, [X2 + 0x38]
	0x022217EC CBNZ X24, 0x2221800
	0x022217F0 MOV X0, X2
	0x022217F4 MOV X22, X2
	0x022217F8 BL 0x1C5C6E0
	0x022217FC LDR X24, [X22 + 0x38]
	0x02221800 LDR X8, [X24]
	0x02221804 LDR W2, [X8 + 0xFC]
	0x02221808 ADD X8, X31, 0x0
	0x0222180C ADD X9, X2, 0xF
	0x02221810 AND X9, X9, 0x1FFFFFFFF
	0x02221814 SUB X22, X8, X9
	0x02221818 ADD X31, X22, 0x0
	0x0222181C MOV X0, X22
	0x02221820 MOV X1, X21
	0x02221824 BL 0x3EB1AC0
	0x02221828 LDR X1, [X24 + 0x8]
	0x0222182C SUB X3, X29, 0x20
	0x02221830 SUB X4, X29, 0x18
	0x02221834 MOV X2, X31
	0x02221838 LDR X0, [X1]
	0x0222183C STUR X22, [X29 - 0x20]
	0x02221840 LDR X8, [X1 + 0x10]
	0x02221844 BLR X8
	0x02221848 LDP X8, X9, [X29 - 0x18]
	0x0222184C STP X19, X8, [X20]
	0x02221850 STR X9, [X20 + 0x10]
	0x02221854 LDR X8, [X23 + 0x28]
	0x02221858 LDUR X9, [X29 - 0x8]
	0x0222185C CMP X8, X9
	0x02221860 B.NE 0x222187C
	0x02221864 ADD X31, X29, 0x0
	0x02221868 LDP X20, X19, [X31 + 0x30]
	0x0222186C LDP X22, X21, [X31 + 0x20]
	0x02221870 LDP X24, X23, [X31 + 0x10]
	0x02221874 LDP X29, X30, [X31], #0x40
	0x02221878 RET
	0x0222187C BL 0x3EB1B20
	0x02221880 STP X30, X21, [X31 - 0x20]!
	0x02221884 STP X20, X19, [X31 + 0x10]
	0x02221888 LDR X8, [X2 + 0x38]
	0x0222188C MOV W19, W1
	0x02221890 MOV X20, X0
	0x02221894 CBNZ X8, 0x22218A8
	0x02221898 MOV X0, X2
	0x0222189C MOV X21, X2
	0x022218A0 BL 0x1C5C6E0
	0x022218A4 LDR X8, [X21 + 0x38]
	0x022218A8 LDR X8, [X8 + 0x8]
	0x022218AC MOV X0, X20
	0x022218B0 MOV X2, X31
	0x022218B4 LDR W8, [X8 + 0xFC]
	0x022218B8 MUL W1, W8, W19
	0x022218BC LDP X20, X19, [X31 + 0x10]
	0x022218C0 LDP X30, X21, [X31], #0x20
	0x022218C4 B 0x1E35770
	0x022218C8 STR X30, [X31 - 0x30]!
	0x022218CC STP X22, X21, [X31 + 0x10]
	0x022218D0 STP X20, X19, [X31 + 0x20]
	0x022218D4 LDR X8, [X3 + 0x38]
	0x022218D8 MOV W20, W2
	0x022218DC MOV X19, X1
	0x022218E0 MOV X21, X0
	0x022218E4 CBNZ X8, 0x22218F8
	0x022218E8 MOV X0, X3
	0x022218EC MOV X22, X3
	0x022218F0 BL 0x1C5C6E0
	0x022218F4 LDR X8, [X22 + 0x38]
	0x022218F8 LDR X8, [X8 + 0x8]
	0x022218FC MOV X0, X21
	0x02221900 MOV X1, X19
	0x02221904 LDP X22, X21, [X31 + 0x10]
	0x02221908 LDR W8, [X8 + 0xFC]
	0x0222190C MOV X3, X31
	0x02221910 MUL W2, W8, W20
	0x02221914 LDP X20, X19, [X31 + 0x20]
	0x02221918 LDR X30, [X31], #0x30
	0x0222191C B 0x1E3577C
	0x02221920 STP X30, X19, [X31 - 0x10]!
	0x02221924 CBZ X1, 0x2221950
	0x02221928 LDR W2, [X1 + 0x18]
	0x0222192C ADD X8, X1, 0x20
	0x02221930 MOV X19, X1
	0x02221934 MOV X3, X31
	0x02221938 CMP W2, 0x0
	0x0222193C CSEL X1, X31, X8, EQ
	0x02221940 BL 0x1E35764
	0x02221944 LDR W0, [X19 + 0x18]
	0x02221948 LDP X30, X19, [X31], #0x10
	0x0222194C RET
	0x02221950 BL 0x1C16F20
	0x02221954 STP X30, X19, [X31 - 0x10]!
	0x02221958 CBZ X1, 0x222198C
	0x0222195C LDR W8, [X1 + 0x18]
	0x02221960 ADD X9, X1, 0x20

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X8, [X4+56]
	015 Move X20, X4
	016 Move X21, X1
	017 Move X24, X0
	018 Move [X31+32], X3
	019 Move [X31+28], W2
	020 Compare X8, 0
	021 JumpIfNotEqual {54}
	022 Move X0, 0x1EFC000
	023 Move X0, [X0+264]
	024 Call 0x1C17CF4
	025 Move X0, 0x1ED3000
	026 Move X0, [X0+3584]
	027 Call 0x1C17CF4
	028 Move X0, 0x1EFC000
	029 Move X0, [X0+272]
	030 Call 0x1C17CF4
	031 Move X0, 0x1EFC000
	032 Move X0, [X0+280]
	033 Call 0x1C17CF4
	034 Move X0, 0x1ED3000
	035 Move X0, [X0+3608]
	036 Call 0x1C17CF4
	037 Move X0, 0x1EFC000
	038 Move X0, [X0+288]
	039 Call 0x1C17CF4
	040 Move X0, 0x1EFC000
	041 Move X0, [X0+296]
	042 Call 0x1C17CF4
	043 Move X0, 0x1EFC000
	044 Move X0, [X0+256]
	045 Call 0x1C17CF4
	046 Move X0, 0x1EFB000
	047 Move X0, [X0+2200]
	048 Call 0x1C17CF4
	049 Move X8, [X20+56]
	050 Compare X8, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X20
	053 Call 0x1C5D6E0
	054 Move [X31+40], X31
	055 Move X8, [X24+48]
	056 Compare X8, 0
	057 JumpIfEqual {334}
	058 Move X0, [X8+1056]
	059 Compare X0, 0
	060 JumpIfEqual {334}
	061 Move X1, X31
	062 Call Columns.get_visibleList, X0
	063 Compare X0, 0
	064 JumpIfEqual {334}
	065 Move X10, 0x1EFC000
	066 Move X8, [X0]
	067 Move X10, [X10+272]
	068 Move X19, X0
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Move X1, [X10]
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X19
	080 Move W2, W31
	081 Call 0x1C5D788
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Add X8, X8, X9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X19
	088 Move [X31+16], X20
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X19, X0
	091 Compare X0, 0
	092 JumpIfEqual {335}
	093 Move X22, 0x1ED3000
	094 Move X23, 0x1EFC000
	095 Move X20, 0x1EFC000
	096 Move X22, [X22+3608]
	097 Move X23, [X23+280]
	098 Move X20, [X20+264]
	099 Move W25, W31
	100 Move X8, [X19]
	101 Move X1, [X22]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Compare X9, 0
	104 JumpIfEqual {111}
	105 Move X10, [X8+176]
	106 Add X10, X10, 8
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Subtract X9, X9, 1
	110 Add X10, X10, 16
	111 Move X0, X19
	112 Move W2, W31
	113 Call 0x1C5D788
	114 NotImplemented "Instruction LDRSW not yet implemented."
	115 Add X8, X8, X9
	116 Add X0, X8, 312
	117 Move X8, [X0]
	118 Move X1, [X0+8]
	119 Move X0, X19
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {290}
	125 Move X8, [X19]
	126 Move X1, [X23]
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 Compare X9, 0
	129 JumpIfEqual {136}
	130 Move X10, [X8+176]
	131 Add X10, X10, 8
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Subtract X9, X9, 1
	135 Add X10, X10, 16
	136 Move X0, X19
	137 Move W2, W31
	138 Call 0x1C5D788
	139 NotImplemented "Instruction LDRSW not yet implemented."
	140 Add X8, X8, X9
	141 Add X0, X8, 312
	142 Move X8, [X0]
	143 Move X1, [X0+8]
	144 Move X0, X19
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move X8, [X24+48]
	147 Compare X8, 0
	148 JumpIfEqual {332}
	149 Move X26, X0
	150 Move X0, [X8+1024]
	151 Compare X0, 0
	152 JumpIfEqual {333}
	153 Move X3, [X20]
	154 Add X2, X31, 40
	155 Move X1, X26
	156 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {100}
	161 Compare X21, 0
	162 JumpIfEqual {341}
	163 Move X0, X21
	164 Move W1, W25
	165 Move X2, X31
	166 Move [X31+8], X21
	167 Call VisualElement.get_Item, X0, X1
	168 Move X8, 0x1EFC000
	169 Move X8, [X8+256]
	170 Move X27, X0
	171 Move X0, [X8]
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {176}
	175 Call 0x1C17DFC
	176 Compare X27, 0
	177 JumpIfEqual {342}
	178 Move X8, 0x1EFC000
	179 Move X8, [X8+256]
	180 Move X8, [X8]
	181 Move X8, [X8+184]
	182 Move W1, [X8+4]
	183 Move X0, X27
	184 Move X2, X31
	185 Call VisualElement.GetProperty, X0, X1
	186 Compare X0, 0
	187 JumpIfEqual {201}
	188 Move X8, 0x1EFB000
	189 Move X9, [X0]
	190 Move X8, [X8+2200]
	191 Move W11, [X9+304]
	192 Move X8, [X8]
	193 Move W10, [X8+304]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X0, X31
	196 Move X9, [X9+200]
	197 Add X9, X9, X10
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 NotImplemented "Instruction CSEL not yet implemented."
	201 Move X8, [X31+16]
	202 Move X8, [X8+56]
	203 Move X4, [X8+8]
	204 Move W1, [X31+28]
	205 Move X3, [X31+32]
	206 Move X2, X26
	207 Call 0x222118C, X0, X1, X2, X3
	208 Move X0, X27
	209 Move X1, X31
	210 Call VisualElement.get_style, X0
	211 Move X8, [X31+40]
	212 Compare X8, 0
	213 JumpIfEqual {338}
	214 Move X28, X0
	215 Move X0, [X8+16]
	216 Compare X0, 0
	217 JumpIfEqual {340}
	218 Move X1, X31
	219 Call VisualElement.get_resolvedStyle, X0
	220 Move X21, X0
	221 Compare X0, 0
	222 JumpIfEqual {343}
	223 Move X8, [X21]
	224 Move X10, 0x1EFC000
	225 NotImplemented "Instruction LDRH not yet implemented."
	226 Move X10, [X10+288]
	227 Move X1, [X10]
	228 Compare X9, 0
	229 JumpIfEqual {236}
	230 Move X10, [X8+176]
	231 Add X10, X10, 8
	232 NotImplemented "Instruction LDUR not yet implemented."
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Subtract X9, X9, 1
	235 Add X10, X10, 16
	236 Move W2, 44
	237 Move X0, X21
	238 Call 0x1C5D788
	239 Move W9, [X10]
	240 Add W9, W9, 44
	241 Add X8, X8, W9
	242 Add X0, X8, 312
	243 Move X8, [X0]
	244 Move X1, [X0+8]
	245 Move X0, X21
	246 NotImplemented "Instruction BLR not yet implemented."
	247 Move X0, X31
	248 Call StyleLength.op_Implicit, V0
	249 Compare X28, 0
	250 JumpIfEqual {339}
	251 Move X8, [X28]
	252 Move X10, 0x1EFC000
	253 Move X21, X1
	254 Move X29, X0
	255 NotImplemented "Instruction LDRH not yet implemented."
	256 Move X10, [X10+296]
	257 Move X1, [X10]
	258 Compare X9, 0
	259 JumpIfEqual {266}
	260 Move X10, [X8+176]
	261 Add X10, X10, 8
	262 NotImplemented "Instruction LDUR not yet implemented."
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Subtract X9, X9, 1
	265 Add X10, X10, 16
	266 Move W2, 54
	267 Move X0, X28
	268 Call 0x1C5D788
	269 Move W9, [X10]
	270 Add W9, W9, 54
	271 Add X8, X8, W9
	272 Add X0, X8, 312
	273 Move X8, [X0]
	274 Move X3, [X0+8]
	275 And X2, X21, 0
	276 Move X0, X28
	277 Move X1, X29
	278 NotImplemented "Instruction BLR not yet implemented."
	279 Move X8, 0x1EFC000
	280 Move X8, [X8+256]
	281 Add W25, W25, 1
	282 Move X8, [X8]
	283 Move X8, [X8+184]
	284 Move W1, [X8]
	285 Move X0, X27
	286 Move X2, X26
	287 Move X3, X31
	288 Call VisualElement.SetProperty, X0, X1, X2
	289 Move X21, [X31+8]
	290 Move X21, X31
	291 Compare X19, 0
	292 JumpIfEqual {316}
	293 Move X10, 0x1ED3000
	294 Move X8, [X19]
	295 Move X10, [X10+3584]
	296 NotImplemented "Instruction LDRH not yet implemented."
	297 Move X1, [X10]
	298 Compare X9, 0
	299 JumpIfEqual {306}
	300 Move X10, [X8+176]
	301 Add X10, X10, 8
	302 NotImplemented "Instruction LDUR not yet implemented."
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Subtract X9, X9, 1
	305 Add X10, X10, 16
	306 Move X0, X19
	307 Move W2, W31
	308 Call 0x1C5D788
	309 NotImplemented "Instruction LDRSW not yet implemented."
	310 Add X8, X8, X9
	311 Add X0, X8, 312
	312 Move X8, [X0]
	313 Move X1, [X0+8]
	314 Move X0, X19
	315 NotImplemented "Instruction BLR not yet implemented."
	316 Compare X21, 0
	317 JumpIfNotEqual {336}
	318 Move X20, [X31+128]
	319 Move X19, [X31+136]
	320 Move X22, [X31+112]
	321 Move X21, [X31+120]
	322 Move X24, [X31+96]
	323 Move X23, [X31+104]
	324 Move X26, [X31+80]
	325 Move X25, [X31+88]
	326 Move X28, [X31+64]
	327 Move X27, [X31+72]
	328 Move X29, [X31+48]
	329 Move X30, [X31+56]
	330 Add X31, X31, 144
	331 Return 
	332 Call 0x1C17F20
	333 Call 0x1C17F20
	334 Call 0x1C17F20
	335 Call 0x1C17F20
	336 Move X0, X21
	337 Call 0x1C17F18
	338 Call 0x1C17F20
	339 Call 0x1C17F20
	340 Call 0x1C17F20
	341 Call 0x1C17F20
	342 Call 0x1C17F20
	343 Call 0x1C17F20
	344 Move X20, X0
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Move X0, X20
	347 Call 0x3EB2AD0
	348 Move X21, [X0]
	349 Call 0x3EB2AE0
	350 Move X21, X31
	351 Move X20, X0
	352 Compare X19, 0
	353 JumpIfEqual {377}
	354 Move X10, 0x1ED3000
	355 Move X8, [X19]
	356 Move X10, [X10+3584]
	357 NotImplemented "Instruction LDRH not yet implemented."
	358 Move X1, [X10]
	359 Compare X9, 0
	360 JumpIfEqual {367}
	361 Move X10, [X8+176]
	362 Add X10, X10, 8
	363 NotImplemented "Instruction LDUR not yet implemented."
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Subtract X9, X9, 1
	366 Add X10, X10, 16
	367 Move X0, X19
	368 Move W2, W31
	369 Call 0x1C5D788
	370 NotImplemented "Instruction LDRSW not yet implemented."
	371 Add X8, X8, X9
	372 Add X0, X8, 312
	373 Move X8, [X0]
	374 Move X1, [X0+8]
	375 Move X0, X19
	376 NotImplemented "Instruction BLR not yet implemented."
	377 Compare X21, 0
	378 JumpIfNotEqual {381}
	379 Move X0, X20
	380 Call 0x1D2D690
	381 Move X0, X21
	382 Call 0x1C17F18
	383 Call 0x1991590

Method: System.Void UnbindItem(UnityEngine.UIElements.VisualElement element, System.Int32 index)

Disassembly:
	0x03D77DD4 CBZ X0, 0x3D77E0C
	0x03D77DD8 MOV X1, X31
	0x03D77DDC BL 0x3D646AC
	0x03D77DE0 LDR X0, [X19 + 0x28]
	0x03D77DE4 STR X31, [X19 + 0x30]
	0x03D77DE8 CBZ X0, 0x3D77E0C
	0x03D77DEC MOV X1, X31
	0x03D77DF0 BL 0x3DF6948
	0x03D77DF4 STR X31, [X19 + 0x28]
	0x03D77DF8 LDP X20, X19, [X31 + 0x30]
	0x03D77DFC LDP X22, X21, [X31 + 0x20]
	0x03D77E00 LDP X24, X23, [X31 + 0x10]
	0x03D77E04 LDR X30, [X31], #0x40
	0x03D77E08 RET
	0x03D77E0C BL 0x1C16F20
	0x03D77E10 STR X30, [X31 - 0x10]!
	0x03D77E14 LDR X0, [X0 + 0x30]
	0x03D77E18 CBZ X0, 0x3D77E28
	0x03D77E1C MOV X1, X31
	0x03D77E20 LDR X30, [X31], #0x10
	0x03D77E24 B 0x3D63968
	0x03D77E28 BL 0x1C16F20
	0x03D77E2C STP D9, D8, [X31 - 0x50]!
	0x03D77E30 STR X30, [X31 + 0x10]
	0x03D77E34 STP X24, X23, [X31 + 0x20]
	0x03D77E38 STP X22, X21, [X31 + 0x30]
	0x03D77E3C STP X20, X19, [X31 + 0x40]
	0x03D77E40 ADRP X21, 0x670000
	0x03D77E44 LDRB W8, [X21 + 0xD68]
	0x03D77E48 MOV X20, X1
	0x03D77E4C MOV X19, X0
	0x03D77E50 TBNZ X8, 0x0, 0x3D77E74
	0x03D77E54 ADRP X0, 0x3A5000
	0x03D77E58 LDR X0, [X0 + 0x120]
	0x03D77E5C BL 0x1C16CF4
	0x03D77E60 ADRP X0, 0x3A5000
	0x03D77E64 LDR X0, [X0 + 0x128]
	0x03D77E68 BL 0x1C16CF4
	0x03D77E6C MOVZ W8, 0x1
	0x03D77E70 STRB W8, [X21 + 0xD68]
	0x03D77E74 LDR X0, [X19 + 0x30]
	0x03D77E78 CBZ X0, 0x3D780C8
	0x03D77E7C MOV X1, X31
	0x03D77E80 BL 0x3DE0EB8
	0x03D77E84 CBZ X0, 0x3D780C8
	0x03D77E88 ADRP X22, 0x3A5000
	0x03D77E8C LDR X8, [X0]
	0x03D77E90 LDR X22, [X22 + 0x120]
	0x03D77E94 MOV X21, X0
	0x03D77E98 LDRH W9, [X8 + 0x12E]
	0x03D77E9C LDR X1, [X22]
	0x03D77EA0 CBZ X9, 0x3D77EC4
	0x03D77EA4 LDR X10, [X8 + 0xB0]
	0x03D77EA8 ADD X10, X10, 0x8
	0x03D77EAC LDUR X11, [X10 - 0x8]
	0x03D77EB0 CMP X11, X1
	0x03D77EB4 B.EQ 0x3D77ED4
	0x03D77EB8 SUBS X9, X9, 0x1
	0x03D77EBC ADD X10, X10, 0x10
	0x03D77EC0 B.NE 0x3D77EAC
	0x03D77EC4 MOVZ W2, 0x1D
	0x03D77EC8 MOV X0, X21
	0x03D77ECC BL 0x1C5C788
	0x03D77ED0 B 0x3D77EE4
	0x03D77ED4 LDR W9, [X10]
	0x03D77ED8 ADD W9, W9, 0x1D
	0x03D77EDC ADD X8, X8, W9, 0x4, SXTW
	0x03D77EE0 ADD X0, X8, 0x138
	0x03D77EE4 LDP X8, X1, [X0]
	0x03D77EE8 MOV X0, X21
	0x03D77EEC BLR X8
	0x03D77EF0 LDR X0, [X19 + 0x30]
	0x03D77EF4 CBZ X0, 0x3D780C8
	0x03D77EF8 MOV X1, X31
	0x03D77EFC MOV V8.16B, V0.16B
	0x03D77F00 BL 0x3DE0EB8
	0x03D77F04 CBZ X0, 0x3D780C8
	0x03D77F08 LDR X8, [X0]
	0x03D77F0C LDR X1, [X22]
	0x03D77F10 MOV X21, X0
	0x03D77F14 LDRH W9, [X8 + 0x12E]
	0x03D77F18 CBZ X9, 0x3D77F3C
	0x03D77F1C LDR X10, [X8 + 0xB0]
	0x03D77F20 ADD X10, X10, 0x8
	0x03D77F24 LDUR X11, [X10 - 0x8]
	0x03D77F28 CMP X11, X1
	0x03D77F2C B.EQ 0x3D77F4C
	0x03D77F30 SUBS X9, X9, 0x1
	0x03D77F34 ADD X10, X10, 0x10
	0x03D77F38 B.NE 0x3D77F24
	0x03D77F3C MOVZ W2, 0x1E
	0x03D77F40 MOV X0, X21
	0x03D77F44 BL 0x1C5C788
	0x03D77F48 B 0x3D77F5C
	0x03D77F4C LDR W9, [X10]
	0x03D77F50 ADD W9, W9, 0x1E
	0x03D77F54 ADD X8, X8, W9, 0x4, SXTW
	0x03D77F58 ADD X0, X8, 0x138
	0x03D77F5C LDP X8, X1, [X0]
	0x03D77F60 MOV X0, X21
	0x03D77F64 BLR X8
	0x03D77F68 LDR X0, [X19 + 0x30]
	0x03D77F6C CBZ X0, 0x3D780C8
	0x03D77F70 MOV X1, X31
	0x03D77F74 MOV V9.16B, V0.16B
	0x03D77F78 BL 0x3DE7EEC
	0x03D77F7C CBZ X20, 0x3D780C8
	0x03D77F80 LDR V0, [X20 + 0x9C]
	0x03D77F84 FADD S8, S8, S9
	0x03D77F88 MOV X21, X0
	0x03D77F8C MOV X0, X31
	0x03D77F90 FSUB S0, S0, S8
	0x03D77F94 BL 0x3DFED98
	0x03D77F98 CBZ X21, 0x3D780C8
	0x03D77F9C ADRP X24, 0x3A5000
	0x03D77FA0 LDR X9, [X21]
	0x03D77FA4 LDR X24, [X24 + 0x128]
	0x03D77FA8 MOV X8, X1
	0x03D77FAC MOV X22, X0
	0x03D77FB0 LDRH W10, [X9 + 0x12E]
	0x03D77FB4 LDR X1, [X24]
	0x03D77FB8 AND X23, X8, 0x0
	0x03D77FBC CBZ X10, 0x3D77FE0
	0x03D77FC0 LDR X8, [X9 + 0xB0]
	0x03D77FC4 ADD X8, X8, 0x8
	0x03D77FC8 LDUR X11, [X8 - 0x8]
	0x03D77FCC CMP X11, X1
	0x03D77FD0 B.EQ 0x3D77FF0
	0x03D77FD4 SUBS X10, X10, 0x1
	0x03D77FD8 ADD X8, X8, 0x10
	0x03D77FDC B.NE 0x3D77FC8
	0x03D77FE0 MOVZ W2, 0x1F
	0x03D77FE4 MOV X0, X21
	0x03D77FE8 BL 0x1C5C788
	0x03D77FEC B 0x3D78000
	0x03D77FF0 LDR W8, [X8]
	0x03D77FF4 ADD W8, W8, 0x1F
	0x03D77FF8 ADD X8, X9, W8, 0x4, SXTW
	0x03D77FFC ADD X0, X8, 0x138
	0x03D78000 LDP X8, X3, [X0]
	0x03D78004 MOV X0, X21
	0x03D78008 MOV X1, X22
	0x03D7800C MOV X2, X23
	0x03D78010 BLR X8
	0x03D78014 LDR X0, [X19 + 0x30]
	0x03D78018 CBZ X0, 0x3D780C8
	0x03D7801C MOV X1, X31
	0x03D78020 BL 0x3DE7EEC
	0x03D78024 LDR V0, [X20 + 0x9C]
	0x03D78028 MOV X21, X0
	0x03D7802C MOV X0, X31
	0x03D78030 FSUB S0, S0, S8
	0x03D78034 BL 0x3DFED98
	0x03D78038 CBZ X21, 0x3D780C8
	0x03D7803C LDR X8, [X21]
	0x03D78040 MOV X22, X1
	0x03D78044 LDR X1, [X24]
	0x03D78048 MOV X20, X0
	0x03D7804C LDRH W9, [X8 + 0x12E]
	0x03D78050 CBZ X9, 0x3D78074
	0x03D78054 LDR X10, [X8 + 0xB0]
	0x03D78058 ADD X10, X10, 0x8
	0x03D7805C LDUR X11, [X10 - 0x8]
	0x03D78060 CMP X11, X1
	0x03D78064 B.EQ 0x3D78084
	0x03D78068 SUBS X9, X9, 0x1
	0x03D7806C ADD X10, X10, 0x10
	0x03D78070 B.NE 0x3D7805C
	0x03D78074 MOVZ W2, 0x1F
	0x03D78078 MOV X0, X21
	0x03D7807C BL 0x1C5C788
	0x03D78080 B 0x3D78094
	0x03D78084 LDR W9, [X10]
	0x03D78088 ADD W9, W9, 0x1F
	0x03D7808C ADD X8, X8, W9, 0x4, SXTW
	0x03D78090 ADD X0, X8, 0x138
	0x03D78094 LDP X8, X3, [X0]
	0x03D78098 AND X2, X22, 0x0
	0x03D7809C MOV X0, X21
	0x03D780A0 MOV X1, X20
	0x03D780A4 BLR X8
	0x03D780A8 LDR X1, [X19 + 0x20]
	0x03D780AC MOV X0, X19
	0x03D780B0 LDP X20, X19, [X31 + 0x40]
	0x03D780B4 LDP X22, X21, [X31 + 0x30]
	0x03D780B8 LDP X24, X23, [X31 + 0x20]
	0x03D780BC LDR X30, [X31 + 0x10]
	0x03D780C0 LDP D9, D8, [X31], #0x50
	0x03D780C4 B 0x3D780CC
	0x03D780C8 BL 0x1C16F20
	0x03D780CC STR D8, [X31 - 0x30]!
	0x03D780D0 STP X30, X21, [X31 + 0x10]
	0x03D780D4 STP X20, X19, [X31 + 0x20]
	0x03D780D8 ADRP X21, 0x66F000
	0x03D780DC LDRB W8, [X21 + 0xD69]
	0x03D780E0 MOV X19, X1
	0x03D780E4 MOV X20, X0
	0x03D780E8 TBNZ X8, 0x0, 0x3D7810C
	0x03D780EC ADRP X0, 0x3A4000
	0x03D780F0 LDR X0, [X0 + 0x120]
	0x03D780F4 BL 0x1C16CF4
	0x03D780F8 ADRP X0, 0x3A4000
	0x03D780FC LDR X0, [X0 + 0x128]
	0x03D78100 BL 0x1C16CF4
	0x03D78104 MOVZ W8, 0x1
	0x03D78108 STRB W8, [X21 + 0xD69]
	0x03D7810C LDR X8, [X20 + 0x30]
	0x03D78110 CBZ X8, 0x3D78270
	0x03D78114 LDR X0, [X8 + 0x410]
	0x03D78118 CBZ X0, 0x3D78270
	0x03D7811C MOV X1, X31
	0x03D78120 BL 0x3DEC528
	0x03D78124 CBZ X19, 0x3D78270
	0x03D78128 LDR X8, [X19 + 0x440]
	0x03D7812C CBZ X8, 0x3D78270
	0x03D78130 LDR X0, [X8 + 0x418]
	0x03D78134 CBZ X0, 0x3D78270
	0x03D78138 MOV X1, X31
	0x03D7813C MOV V8.16B, V2.16B
	0x03D78140 BL 0x3DE0EB8
	0x03D78144 CBZ X0, 0x3D78270
	0x03D78148 ADRP X10, 0x3A4000
	0x03D7814C LDR X8, [X0]
	0x03D78150 LDR X10, [X10 + 0x120]
	0x03D78154 MOV X20, X0
	0x03D78158 LDRH W9, [X8 + 0x12E]
	0x03D7815C LDR X1, [X10]
	0x03D78160 CBZ X9, 0x3D78184
	0x03D78164 LDR X10, [X8 + 0xB0]
	0x03D78168 ADD X10, X10, 0x8
	0x03D7816C LDUR X11, [X10 - 0x8]
	0x03D78170 CMP X11, X1
	0x03D78174 B.EQ 0x3D78194
	0x03D78178 SUBS X9, X9, 0x1
	0x03D7817C ADD X10, X10, 0x10
	0x03D78180 B.NE 0x3D7816C
	0x03D78184 MOVZ W2, 0x2C
	0x03D78188 MOV X0, X20
	0x03D7818C BL 0x1C5C788
	0x03D78190 B 0x3D781A4
	0x03D78194 LDR W9, [X10]
	0x03D78198 ADD W9, W9, 0x2C
	0x03D7819C ADD X8, X8, W9, 0x4, SXTW
	0x03D781A0 ADD X0, X8, 0x138
	0x03D781A4 LDP X8, X1, [X0]
	0x03D781A8 MOV X0, X20
	0x03D781AC BLR X8
	0x03D781B0 LDR X0, [X19 + 0x440]
	0x03D781B4 FCMP S8, S0
	0x03D781B8 FCSEL S8, S8, S0, GT
	0x03D781BC CBZ X0, 0x3D78270
	0x03D781C0 LDR X8, [X0]
	0x03D781C4 LDR X9, [X8 + 0x768]
	0x03D781C8 LDR X1, [X8 + 0x770]
	0x03D781CC BLR X9
	0x03D781D0 CBZ X0, 0x3D78270
	0x03D781D4 MOV X1, X31
	0x03D781D8 BL 0x3DE7EEC
	0x03D781DC MOV X19, X0
	0x03D781E0 MOV V0.16B, V8.16B
	0x03D781E4 MOV X0, X31
	0x03D781E8 BL 0x3DFED98
	0x03D781EC CBZ X19, 0x3D78270
	0x03D781F0 ADRP X10, 0x3A4000

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x671000
	013 Move W8, [X21+3428]
	014 Move W20, W2
	015 Move X19, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0x3A6000
	021 Move X0, [X0+2920]
	022 Call 0x1C17CF4
	023 Move X0, 0x37D000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0x3F0000
	027 Move X0, [X0+3976]
	028 Call 0x1C17CF4
	029 Move X0, 0x3F0000
	030 Move X0, [X0+3984]
	031 Call 0x1C17CF4
	032 Move X0, 0x37D000
	033 Move X0, [X0+3608]
	034 Call 0x1C17CF4
	035 Move X0, 0x3A6000
	036 Move X0, [X0+256]
	037 Call 0x1C17CF4
	038 Move X0, 0x3A5000
	039 Move X0, [X0+2200]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+3428], W8
	043 Compare X19, 0
	044 JumpIfEqual {232}
	045 Move X0, X19
	046 Move X1, X31
	047 Call VisualElement.Children, X0
	048 Compare X0, 0
	049 JumpIfEqual {232}
	050 Move X10, 0x3F0000
	051 Move X8, [X0]
	052 Move X10, [X10+3976]
	053 Move X19, X0
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X1, [X10]
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move X0, X19
	065 Move W2, W31
	066 Call 0x1C5D788
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Add X8, X8, X9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X1, [X0+8]
	072 Move X23, 0x37D000
	073 Move X23, [X23+3584]
	074 Move X0, X19
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X19, X0
	077 Compare X0, 0
	078 JumpIfEqual {233}
	079 Move X24, 0x37D000
	080 Move X25, 0x3F0000
	081 Move X26, 0x3A6000
	082 Move X27, 0x3A6000
	083 Move X28, 0x3A5000
	084 Move X24, [X24+3608]
	085 Move X25, [X25+3984]
	086 Move X26, [X26+256]
	087 Move X27, [X27+2920]
	088 Move X28, [X28+2200]
	089 Move X8, [X19]
	090 Move X1, [X24]
	091 NotImplemented "Instruction LDRH not yet implemented."
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X19
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X19
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {193}
	114 Move X8, [X19]
	115 Move X1, [X25]
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Compare X9, 0
	118 JumpIfEqual {125}
	119 Move X10, [X8+176]
	120 Add X10, X10, 8
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract X9, X9, 1
	124 Add X10, X10, 16
	125 Move X0, X19
	126 Move W2, W31
	127 Call 0x1C5D788
	128 NotImplemented "Instruction LDRSW not yet implemented."
	129 Add X8, X8, X9
	130 Add X0, X8, 312
	131 Move X8, [X0]
	132 Move X1, [X0+8]
	133 Move X0, X19
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X22, X0
	136 Move X0, [X26]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Compare X22, 0
	142 JumpIfEqual {231}
	143 Move X8, [X26]
	144 Move X8, [X8+184]
	145 Move W1, [X8]
	146 Move X0, X22
	147 Move X2, X31
	148 Call VisualElement.GetProperty, X0, X1
	149 Move X21, X0
	150 Compare X0, 0
	151 JumpIfEqual {89}
	152 Move X9, [X21]
	153 Move X8, [X27]
	154 Move W11, [X9+304]
	155 Move W10, [X8+304]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X9, [X9+200]
	158 Add X9, X9, X10
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X0, [X26]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {167}
	165 Call 0x1C17DFC
	166 Move X0, [X26]
	167 Move X8, [X0+184]
	168 Move W1, [X8+4]
	169 Move X0, X22
	170 Move X2, X31
	171 Call VisualElement.GetProperty, X0, X1
	172 Compare X0, 0
	173 JumpIfEqual {179}
	174 Move X9, [X0]
	175 Move X8, [X28]
	176 Move W11, [X9+304]
	177 Move W10, [X8+304]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X1, X31
	180 Move X9, [X9+200]
	181 Add X9, X9, X10
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 NotImplemented "Instruction CSEL not yet implemented."
	185 Move X8, [X21+152]
	186 Compare X8, 0
	187 JumpIfEqual {89}
	188 Move X0, [X8+64]
	189 Move X9, [X8+24]
	190 Move X3, [X8+40]
	191 Move W2, W20
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Move X20, X31
	194 Compare X19, 0
	195 JumpIfEqual {217}
	196 Move X8, [X19]
	197 Move X1, [X23]
	198 NotImplemented "Instruction LDRH not yet implemented."
	199 Compare X9, 0
	200 JumpIfEqual {207}
	201 Move X10, [X8+176]
	202 Add X10, X10, 8
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Subtract X9, X9, 1
	206 Add X10, X10, 16
	207 Move X0, X19
	208 Move W2, W31
	209 Call 0x1C5D788
	210 NotImplemented "Instruction LDRSW not yet implemented."
	211 Add X8, X8, X9
	212 Add X0, X8, 312
	213 Move X8, [X0]
	214 Move X1, [X0+8]
	215 Move X0, X19
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Compare X20, 0
	218 JumpIfNotEqual {234}
	219 Move X20, [X31+80]
	220 Move X19, [X31+88]
	221 Move X22, [X31+64]
	222 Move X21, [X31+72]
	223 Move X24, [X31+48]
	224 Move X23, [X31+56]
	225 Move X26, [X31+32]
	226 Move X25, [X31+40]
	227 Move X28, [X31+16]
	228 Move X27, [X31+24]
	229 Move X30, [X31+96]
	230 Return 
	231 Call 0x1C17F20
	232 Call 0x1C17F20
	233 Call 0x1C17F20
	234 Move X0, X20
	235 Call 0x1C17F18
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Call 0x3EB2AD0
	238 Move X20, [X0]
	239 Call 0x3EB2AE0
	240 Move X21, X0
	241 Move X20, X31
	242 Move X21, X0
	243 Compare X19, 0
	244 JumpIfEqual {266}
	245 Move X8, [X19]
	246 Move X1, [X23]
	247 NotImplemented "Instruction LDRH not yet implemented."
	248 Compare X9, 0
	249 JumpIfEqual {256}
	250 Move X10, [X8+176]
	251 Add X10, X10, 8
	252 NotImplemented "Instruction LDUR not yet implemented."
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Subtract X9, X9, 1
	255 Add X10, X10, 16
	256 Move X0, X19
	257 Move W2, W31
	258 Call 0x1C5D788
	259 NotImplemented "Instruction LDRSW not yet implemented."
	260 Add X8, X8, X9
	261 Add X0, X8, 312
	262 Move X8, [X0]
	263 Move X1, [X0+8]
	264 Move X0, X19
	265 NotImplemented "Instruction BLR not yet implemented."
	266 Compare X20, 0
	267 JumpIfNotEqual {270}
	268 Move X0, X21
	269 Call 0x1D2D690
	270 Move X0, X20
	271 Call 0x1C17F18
	272 Call 0x1991590

Method: System.Void DestroyItem(UnityEngine.UIElements.VisualElement element)

Disassembly:
	0x03D781F4 LDR X8, [X19]
	0x03D781F8 LDR X10, [X10 + 0x128]
	0x03D781FC MOV X21, X1
	0x03D78200 MOV X20, X0
	0x03D78204 LDRH W9, [X8 + 0x12E]
	0x03D78208 LDR X1, [X10]
	0x03D7820C CBZ X9, 0x3D78230
	0x03D78210 LDR X10, [X8 + 0xB0]
	0x03D78214 ADD X10, X10, 0x8
	0x03D78218 LDUR X11, [X10 - 0x8]
	0x03D7821C CMP X11, X1
	0x03D78220 B.EQ 0x3D78240
	0x03D78224 SUBS X9, X9, 0x1
	0x03D78228 ADD X10, X10, 0x10
	0x03D7822C B.NE 0x3D78218
	0x03D78230 MOVZ W2, 0x36
	0x03D78234 MOV X0, X19
	0x03D78238 BL 0x1C5C788
	0x03D7823C B 0x3D78250
	0x03D78240 LDR W9, [X10]
	0x03D78244 ADD W9, W9, 0x36
	0x03D78248 ADD X8, X8, W9, 0x4, SXTW
	0x03D7824C ADD X0, X8, 0x138
	0x03D78250 LDP X4, X3, [X0]
	0x03D78254 AND X2, X21, 0x0
	0x03D78258 MOV X0, X19
	0x03D7825C MOV X1, X20
	0x03D78260 LDP X20, X19, [X31 + 0x20]
	0x03D78264 LDP X30, X21, [X31 + 0x10]
	0x03D78268 LDR V8, [X31], #0x30
	0x03D7826C BR X4
	0x03D78270 BL 0x1C16F20
	0x03D78274 LDR X1, [X0 + 0x20]
	0x03D78278 B 0x3D780CC
	0x03D7827C LDR X8, [X0 + 0x10]
	0x03D78280 CBZ X8, 0x3D78294
	0x03D78284 LDR X2, [X8 + 0x18]
	0x03D78288 LDR X0, [X8 + 0x40]
	0x03D7828C LDR X1, [X8 + 0x28]
	0x03D78290 BR X2
	0x03D78294 RET
	0x03D78298 LDR X8, [X0 + 0x18]
	0x03D7829C CBZ X8, 0x3D782B0
	0x03D782A0 LDR X4, [X8 + 0x18]
	0x03D782A4 LDR X0, [X8 + 0x40]
	0x03D782A8 LDR X3, [X8 + 0x28]
	0x03D782AC BR X4
	0x03D782B0 RET
	0x03D782B4 STR D8, [X31 - 0x60]!
	0x03D782B8 STP X30, X27, [X31 + 0x10]
	0x03D782BC STP X26, X25, [X31 + 0x20]
	0x03D782C0 STP X24, X23, [X31 + 0x30]
	0x03D782C4 STP X22, X21, [X31 + 0x40]
	0x03D782C8 STP X20, X19, [X31 + 0x50]
	0x03D782CC ADRP X21, 0x66F000
	0x03D782D0 LDRB W8, [X21 + 0xD6A]
	0x03D782D4 MOV V8.16B, V0.16B
	0x03D782D8 MOV W20, W1
	0x03D782DC MOV X19, X0
	0x03D782E0 TBNZ X8, 0x0, 0x3D78328
	0x03D782E4 ADRP X0, 0x37B000
	0x03D782E8 LDR X0, [X0 + 0xE00]
	0x03D782EC BL 0x1C16CF4
	0x03D782F0 ADRP X0, 0x3A5000
	0x03D782F4 LDR X0, [X0 + 0xF20]
	0x03D782F8 BL 0x1C16CF4
	0x03D782FC ADRP X0, 0x3A5000
	0x03D78300 LDR X0, [X0 + 0xF28]
	0x03D78304 BL 0x1C16CF4
	0x03D78308 ADRP X0, 0x37B000
	0x03D7830C LDR X0, [X0 + 0xE18]
	0x03D78310 BL 0x1C16CF4
	0x03D78314 ADRP X0, 0x3A4000
	0x03D78318 LDR X0, [X0 + 0x128]
	0x03D7831C BL 0x1C16CF4
	0x03D78320 MOVZ W8, 0x1
	0x03D78324 STRB W8, [X21 + 0xD6A]
	0x03D78328 LDR X0, [X19 + 0x20]
	0x03D7832C CBZ X0, 0x3D785B4
	0x03D78330 MOV X1, X31
	0x03D78334 BL 0x3CFEC08
	0x03D78338 CBZ X0, 0x3D785B4
	0x03D7833C ADRP X10, 0x3A5000
	0x03D78340 LDR X8, [X0]
	0x03D78344 LDR X10, [X10 + 0xF20]
	0x03D78348 MOV X19, X0
	0x03D7834C LDRH W9, [X8 + 0x12E]
	0x03D78350 LDR X1, [X10]
	0x03D78354 CBZ X9, 0x3D78378
	0x03D78358 LDR X10, [X8 + 0xB0]
	0x03D7835C ADD X10, X10, 0x8
	0x03D78360 LDUR X11, [X10 - 0x8]
	0x03D78364 CMP X11, X1
	0x03D78368 B.EQ 0x3D78388
	0x03D7836C SUBS X9, X9, 0x1
	0x03D78370 ADD X10, X10, 0x10
	0x03D78374 B.NE 0x3D78360
	0x03D78378 MOV X0, X19
	0x03D7837C MOV W2, W31
	0x03D78380 BL 0x1C5C788
	0x03D78384 B 0x3D78394
	0x03D78388 LDRSW X9, [X10]
	0x03D7838C ADD X8, X8, X9, 0x4, LSL
	0x03D78390 ADD X0, X8, 0x138
	0x03D78394 LDP X8, X1, [X0]
	0x03D78398 ADRP X24, 0x37B000
	0x03D7839C LDR X24, [X24 + 0xE00]
	0x03D783A0 MOV X0, X19
	0x03D783A4 BLR X8
	0x03D783A8 MOV X19, X0
	0x03D783AC CBZ X0, 0x3D785B8
	0x03D783B0 ADRP X25, 0x37B000
	0x03D783B4 ADRP X26, 0x3A5000
	0x03D783B8 ADRP X27, 0x3A4000
	0x03D783BC LDR X25, [X25 + 0xE18]
	0x03D783C0 LDR X26, [X26 + 0xF28]
	0x03D783C4 LDR X27, [X27 + 0x128]
	0x03D783C8 LDR X8, [X19]
	0x03D783CC LDR X1, [X25]
	0x03D783D0 LDRH W9, [X8 + 0x12E]
	0x03D783D4 CBZ X9, 0x3D783F8
	0x03D783D8 LDR X10, [X8 + 0xB0]
	0x03D783DC ADD X10, X10, 0x8
	0x03D783E0 LDUR X11, [X10 - 0x8]
	0x03D783E4 CMP X11, X1
	0x03D783E8 B.EQ 0x3D78408
	0x03D783EC SUBS X9, X9, 0x1
	0x03D783F0 ADD X10, X10, 0x10
	0x03D783F4 B.NE 0x3D783E0
	0x03D783F8 MOV X0, X19
	0x03D783FC MOV W2, W31
	0x03D78400 BL 0x1C5C788
	0x03D78404 B 0x3D78414
	0x03D78408 LDRSW X9, [X10]
	0x03D7840C ADD X8, X8, X9, 0x4, LSL
	0x03D78410 ADD X0, X8, 0x138
	0x03D78414 LDP X8, X1, [X0]
	0x03D78418 MOV X0, X19
	0x03D7841C BLR X8
	0x03D78420 TBZ X0, 0x0, 0x3D78524
	0x03D78424 LDR X8, [X19]
	0x03D78428 LDR X1, [X26]
	0x03D7842C LDRH W9, [X8 + 0x12E]
	0x03D78430 CBZ X9, 0x3D78454
	0x03D78434 LDR X10, [X8 + 0xB0]
	0x03D78438 ADD X10, X10, 0x8
	0x03D7843C LDUR X11, [X10 - 0x8]
	0x03D78440 CMP X11, X1
	0x03D78444 B.EQ 0x3D78464
	0x03D78448 SUBS X9, X9, 0x1
	0x03D7844C ADD X10, X10, 0x10
	0x03D78450 B.NE 0x3D7843C
	0x03D78454 MOV X0, X19
	0x03D78458 MOV W2, W31
	0x03D7845C BL 0x1C5C788
	0x03D78460 B 0x3D78470
	0x03D78464 LDRSW X9, [X10]
	0x03D78468 ADD X8, X8, X9, 0x4, LSL
	0x03D7846C ADD X0, X8, 0x138
	0x03D78470 LDP X8, X1, [X0]
	0x03D78474 MOV X0, X19
	0x03D78478 BLR X8
	0x03D7847C CBZ X0, 0x3D785AC
	0x03D78480 LDR X0, [X0 + 0x10]
	0x03D78484 CBZ X0, 0x3D785B0
	0x03D78488 MOV W1, W20
	0x03D7848C MOV X2, X31
	0x03D78490 BL 0x3DF6290
	0x03D78494 CBZ X0, 0x3D785A4
	0x03D78498 MOV X1, X31
	0x03D7849C BL 0x3DE7EEC
	0x03D784A0 MOV X21, X0
	0x03D784A4 MOV V0.16B, V8.16B
	0x03D784A8 MOV X0, X31
	0x03D784AC BL 0x3DFED98
	0x03D784B0 CBZ X21, 0x3D785A8
	0x03D784B4 LDR X8, [X21]
	0x03D784B8 MOV X23, X1
	0x03D784BC LDR X1, [X27]
	0x03D784C0 MOV X22, X0
	0x03D784C4 LDRH W9, [X8 + 0x12E]
	0x03D784C8 CBZ X9, 0x3D784EC
	0x03D784CC LDR X10, [X8 + 0xB0]
	0x03D784D0 ADD X10, X10, 0x8
	0x03D784D4 LDUR X11, [X10 - 0x8]
	0x03D784D8 CMP X11, X1
	0x03D784DC B.EQ 0x3D784FC
	0x03D784E0 SUBS X9, X9, 0x1
	0x03D784E4 ADD X10, X10, 0x10
	0x03D784E8 B.NE 0x3D784D4
	0x03D784EC MOVZ W2, 0x36
	0x03D784F0 MOV X0, X21
	0x03D784F4 BL 0x1C5C788
	0x03D784F8 B 0x3D7850C
	0x03D784FC LDR W9, [X10]
	0x03D78500 ADD W9, W9, 0x36
	0x03D78504 ADD X8, X8, W9, 0x4, SXTW
	0x03D78508 ADD X0, X8, 0x138
	0x03D7850C LDP X8, X3, [X0]
	0x03D78510 AND X2, X23, 0x0
	0x03D78514 MOV X0, X21
	0x03D78518 MOV X1, X22
	0x03D7851C BLR X8
	0x03D78520 B 0x3D783C8
	0x03D78524 MOV X20, X31
	0x03D78528 CBZ X19, 0x3D78584
	0x03D7852C LDR X8, [X19]
	0x03D78530 LDR X1, [X24]
	0x03D78534 LDRH W9, [X8 + 0x12E]
	0x03D78538 CBZ X9, 0x3D7855C
	0x03D7853C LDR X10, [X8 + 0xB0]
	0x03D78540 ADD X10, X10, 0x8
	0x03D78544 LDUR X11, [X10 - 0x8]
	0x03D78548 CMP X11, X1
	0x03D7854C B.EQ 0x3D7856C
	0x03D78550 SUBS X9, X9, 0x1
	0x03D78554 ADD X10, X10, 0x10
	0x03D78558 B.NE 0x3D78544
	0x03D7855C MOV X0, X19
	0x03D78560 MOV W2, W31
	0x03D78564 BL 0x1C5C788
	0x03D78568 B 0x3D78578
	0x03D7856C LDRSW X9, [X10]
	0x03D78570 ADD X8, X8, X9, 0x4, LSL
	0x03D78574 ADD X0, X8, 0x138
	0x03D78578 LDP X8, X1, [X0]
	0x03D7857C MOV X0, X19
	0x03D78580 BLR X8
	0x03D78584 CBNZ X20, 0x3D785BC
	0x03D78588 LDP X20, X19, [X31 + 0x50]
	0x03D7858C LDP X22, X21, [X31 + 0x40]
	0x03D78590 LDP X24, X23, [X31 + 0x30]
	0x03D78594 LDP X26, X25, [X31 + 0x20]
	0x03D78598 LDP X30, X27, [X31 + 0x10]
	0x03D7859C LDR V8, [X31], #0x60
	0x03D785A0 RET
	0x03D785A4 BL 0x1C16F20
	0x03D785A8 BL 0x1C16F20
	0x03D785AC BL 0x1C16F20
	0x03D785B0 BL 0x1C16F20
	0x03D785B4 BL 0x1C16F20
	0x03D785B8 BL 0x1C16F20
	0x03D785BC MOV X0, X20
	0x03D785C0 BL 0x1C16F18
	0x03D785C4 B 0x3D785EC
	0x03D785C8 B 0x3D785EC
	0x03D785CC B 0x3D785EC
	0x03D785D0 B 0x3D785EC
	0x03D785D4 B 0x3D785EC
	0x03D785D8 B 0x3D785EC
	0x03D785DC B 0x3D785EC
	0x03D785E0 B 0x3D785EC
	0x03D785E4 B 0x3D785EC
	0x03D785E8 B 0x3D785EC
	0x03D785EC CMP W1, 0x1
	0x03D785F0 B.NE 0x3D78604
	0x03D785F4 BL 0x3EB1AD0
	0x03D785F8 LDR X20, [X0]
	0x03D785FC BL 0x3EB1AE0
	0x03D78600 B 0x3D78528
	0x03D78604 STR X0, [X31 + 0x8]
	0x03D78608 MOV X20, X31
	0x03D7860C B 0x3D78614
	0x03D78610 STR X0, [X31 + 0x8]
	0x03D78614 CBZ X19, 0x3D78670
	0x03D78618 LDR X8, [X19]
	0x03D7861C LDR X1, [X24]
	0x03D78620 LDRH W9, [X8 + 0x12E]
	0x03D78624 CBZ X9, 0x3D78648
	0x03D78628 LDR X10, [X8 + 0xB0]
	0x03D7862C ADD X10, X10, 0x8
	0x03D78630 LDUR X11, [X10 - 0x8]
	0x03D78634 CMP X11, X1
	0x03D78638 B.EQ 0x3D78658
	0x03D7863C SUBS X9, X9, 0x1
	0x03D78640 ADD X10, X10, 0x10
	0x03D78644 B.NE 0x3D78630
	0x03D78648 MOV X0, X19
	0x03D7864C MOV W2, W31
	0x03D78650 BL 0x1C5C788
	0x03D78654 B 0x3D78664
	0x03D78658 LDRSW X9, [X10]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x670000
	013 Move W8, [X20+3429]
	014 Move X19, X1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0x3A5000
	020 Move X0, [X0+2920]
	021 Call 0x1C17CF4
	022 Move X0, 0x37C000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move X0, 0x3EF000
	026 Move X0, [X0+3976]
	027 Call 0x1C17CF4
	028 Move X0, 0x3EF000
	029 Move X0, [X0+3984]
	030 Call 0x1C17CF4
	031 Move X0, 0x37C000
	032 Move X0, [X0+3608]
	033 Call 0x1C17CF4
	034 Move X0, 0x3A5000
	035 Move X0, [X0+256]
	036 Call 0x1C17CF4
	037 Move X0, 0x3A4000
	038 Move X0, [X0+2200]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+3429], W8
	042 Compare X19, 0
	043 JumpIfEqual {248}
	044 Move X0, X19
	045 Move X1, X31
	046 Call VisualElement.Children, X0
	047 Compare X0, 0
	048 JumpIfEqual {248}
	049 Move X10, 0x3EF000
	050 Move X8, [X0]
	051 Move X10, [X10+3976]
	052 Move X19, X0
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move X0, X19
	064 Move W2, W31
	065 Call 0x1C5D788
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Add X8, X8, X9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X1, [X0+8]
	071 Move X22, 0x37C000
	072 Move X22, [X22+3584]
	073 Move X0, X19
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X19, X0
	076 Compare X0, 0
	077 JumpIfEqual {249}
	078 Move X24, 0x37C000
	079 Move X25, 0x3EF000
	080 Move X26, 0x3A5000
	081 Move X27, 0x3A5000
	082 Move X28, 0x3A4000
	083 Move X24, [X24+3608]
	084 Move X25, [X25+3984]
	085 Move X26, [X26+256]
	086 Move X27, [X27+2920]
	087 Move X28, [X28+2200]
	088 Move X23, X31
	089 Move X8, [X19]
	090 Move X1, [X24]
	091 NotImplemented "Instruction LDRH not yet implemented."
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X19
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X19
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {209}
	114 Move X8, [X19]
	115 Move X1, [X25]
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Compare X9, 0
	118 JumpIfEqual {125}
	119 Move X10, [X8+176]
	120 Add X10, X10, 8
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract X9, X9, 1
	124 Add X10, X10, 16
	125 Move X0, X19
	126 Move W2, W31
	127 Call 0x1C5D788
	128 NotImplemented "Instruction LDRSW not yet implemented."
	129 Add X8, X8, X9
	130 Add X0, X8, 312
	131 Move X8, [X0]
	132 Move X1, [X0+8]
	133 Move X0, X19
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X20, X0
	136 Move X0, [X26]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Compare X20, 0
	142 JumpIfEqual {247}
	143 Move X8, [X26]
	144 Move X8, [X8+184]
	145 Move W1, [X8]
	146 Move X0, X20
	147 Move X2, X31
	148 Call VisualElement.GetProperty, X0, X1
	149 Move X21, X0
	150 Compare X0, 0
	151 JumpIfEqual {89}
	152 Move X9, [X21]
	153 Move X8, [X27]
	154 Move W11, [X9+304]
	155 Move W10, [X8+304]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X9, [X9+200]
	158 Add X9, X9, X10
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X0, [X26]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {167}
	165 Call 0x1C17DFC
	166 Move X0, [X26]
	167 Move X8, [X0+184]
	168 Move W1, [X8+4]
	169 Move X0, X20
	170 Move X2, X31
	171 Call VisualElement.GetProperty, X0, X1
	172 Compare X0, 0
	173 JumpIfEqual {179}
	174 Move X9, [X0]
	175 Move X8, [X28]
	176 Move W11, [X9+304]
	177 Move W10, [X8+304]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X8, X31
	180 Move X9, [X9+200]
	181 Add X9, X9, X10
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 NotImplemented "Instruction CSEL not yet implemented."
	185 Move X9, [X21+160]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 NotImplemented "Instruction CSEL not yet implemented."
	188 Compare X9, 0
	189 JumpIfEqual {197}
	190 Compare X23, 0
	191 JumpIfEqual {252}
	192 Move X0, [X23+64]
	193 Move X9, [X23+24]
	194 Move X2, [X23+40]
	195 Move X1, X8
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move X0, [X26]
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {203}
	201 Call 0x1C17DFC
	202 Move X0, [X26]
	203 Move X8, [X0+184]
	204 Move W1, [X8]
	205 Move X0, X20
	206 Move X2, X31
	207 Move X3, X31
	208 Call VisualElement.SetProperty, X0, X1, X2
	209 Move X20, X31
	210 Compare X19, 0
	211 JumpIfEqual {233}
	212 Move X8, [X19]
	213 Move X1, [X22]
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Compare X9, 0
	216 JumpIfEqual {223}
	217 Move X10, [X8+176]
	218 Add X10, X10, 8
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Subtract X9, X9, 1
	222 Add X10, X10, 16
	223 Move X0, X19
	224 Move W2, W31
	225 Call 0x1C5D788
	226 NotImplemented "Instruction LDRSW not yet implemented."
	227 Add X8, X8, X9
	228 Add X0, X8, 312
	229 Move X8, [X0]
	230 Move X1, [X0+8]
	231 Move X0, X19
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Compare X20, 0
	234 JumpIfNotEqual {250}
	235 Move X20, [X31+80]
	236 Move X19, [X31+88]
	237 Move X22, [X31+64]
	238 Move X21, [X31+72]
	239 Move X24, [X31+48]
	240 Move X23, [X31+56]
	241 Move X26, [X31+32]
	242 Move X25, [X31+40]
	243 Move X28, [X31+16]
	244 Move X27, [X31+24]
	245 Move X30, [X31+96]
	246 Return 
	247 Call 0x1C17F20
	248 Call 0x1C17F20
	249 Call 0x1C17F20
	250 Move X0, X20
	251 Call 0x1C17F18
	252 Call 0x1C17F20
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Call 0x3EB2AD0
	255 Move X20, [X0]
	256 Call 0x3EB2AE0
	257 Move X21, X0
	258 Move X20, X31
	259 Move X21, X0
	260 Compare X19, 0
	261 JumpIfEqual {283}
	262 Move X8, [X19]
	263 Move X1, [X22]
	264 NotImplemented "Instruction LDRH not yet implemented."
	265 Compare X9, 0
	266 JumpIfEqual {273}
	267 Move X10, [X8+176]
	268 Add X10, X10, 8
	269 NotImplemented "Instruction LDUR not yet implemented."
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Subtract X9, X9, 1
	272 Add X10, X10, 16
	273 Move X0, X19
	274 Move W2, W31
	275 Call 0x1C5D788
	276 NotImplemented "Instruction LDRSW not yet implemented."
	277 Add X8, X8, X9
	278 Add X0, X8, 312
	279 Move X8, [X0]
	280 Move X1, [X0+8]
	281 Move X0, X19
	282 NotImplemented "Instruction BLR not yet implemented."
	283 Compare X20, 0
	284 JumpIfNotEqual {287}
	285 Move X0, X21
	286 Call 0x1D2D690
	287 Move X0, X20
	288 Call 0x1C17F18
	289 Call 0x1991590

Method: System.Void PrepareView(UnityEngine.UIElements.BaseVerticalCollectionView collectionView)

Disassembly:
	0x03D7865C ADD X8, X8, X9, 0x4, LSL
	0x03D78660 ADD X0, X8, 0x138
	0x03D78664 LDP X8, X1, [X0]
	0x03D78668 MOV X0, X19
	0x03D7866C BLR X8
	0x03D78670 CBNZ X20, 0x3D7867C
	0x03D78674 LDR X0, [X31 + 0x8]
	0x03D78678 BL 0x1D2C690
	0x03D7867C MOV X0, X20
	0x03D78680 BL 0x1C16F18
	0x03D78684 BL 0x1990590
	0x03D78688 STR X30, [X31 - 0x10]!
	0x03D7868C LDR X0, [X0 + 0x20]
	0x03D78690 CBZ X0, 0x3D786A0
	0x03D78694 MOV X1, X31
	0x03D78698 LDR X30, [X31], #0x10
	0x03D7869C B 0x3CFF05C
	0x03D786A0 BL 0x1C16F20
	0x03D786A4 STR X30, [X31 - 0x10]!
	0x03D786A8 LDR X0, [X0 + 0x20]
	0x03D786AC CBZ X0, 0x3D786BC
	0x03D786B0 MOV X1, X31
	0x03D786B4 LDR X30, [X31], #0x10
	0x03D786B8 B 0x3CFF05C
	0x03D786BC BL 0x1C16F20
	0x03D786C0 STR X30, [X31 - 0x10]!
	0x03D786C4 LDR X8, [X0 + 0x30]
	0x03D786C8 CBZ X8, 0x3D786F0
	0x03D786CC LDRB W8, [X8 + 0x3F8]
	0x03D786D0 CBZ W8, 0x3D786DC
	0x03D786D4 LDR X30, [X31], #0x10
	0x03D786D8 RET
	0x03D786DC LDR X0, [X0 + 0x20]
	0x03D786E0 CBZ X0, 0x3D786F0
	0x03D786E4 MOV X1, X31
	0x03D786E8 LDR X30, [X31], #0x10
	0x03D786EC B 0x3CFF05C
	0x03D786F0 BL 0x1C16F20
	0x03D786F4 STR X30, [X31 - 0x10]!
	0x03D786F8 LDR X8, [X0 + 0x30]
	0x03D786FC CBZ X8, 0x3D7872C
	0x03D78700 CMP W2, 0x3
	0x03D78704 B.NE 0x3D78724
	0x03D78708 LDRB W8, [X8 + 0x3F8]
	0x03D7870C CBNZ W8, 0x3D78724
	0x03D78710 LDR X0, [X0 + 0x20]
	0x03D78714 CBZ X0, 0x3D7872C
	0x03D78718 MOV X1, X31
	0x03D7871C LDR X30, [X31], #0x10
	0x03D78720 B 0x3CFF05C
	0x03D78724 LDR X30, [X31], #0x10
	0x03D78728 RET
	0x03D7872C BL 0x1C16F20
	0x03D78730 STR X30, [X31 - 0x10]!
	0x03D78734 LDR X8, [X0 + 0x30]
	0x03D78738 CBZ X8, 0x3D78764
	0x03D7873C CBNZ W1, 0x3D7875C
	0x03D78740 LDRB W8, [X8 + 0x3F8]
	0x03D78744 CBNZ W8, 0x3D7875C
	0x03D78748 LDR X0, [X0 + 0x20]
	0x03D7874C CBZ X0, 0x3D78764
	0x03D78750 MOV X1, X31
	0x03D78754 LDR X30, [X31], #0x10
	0x03D78758 B 0x3CFF05C
	0x03D7875C LDR X30, [X31], #0x10
	0x03D78760 RET
	0x03D78764 BL 0x1C16F20
	0x03D78768 STR X30, [X31 - 0x10]!
	0x03D7876C LDR X0, [X0 + 0x20]
	0x03D78770 CBZ X0, 0x3D78780
	0x03D78774 MOV X1, X31
	0x03D78778 LDR X30, [X31], #0x10
	0x03D7877C B 0x3CFF05C
	0x03D78780 BL 0x1C16F20
	0x03D78784 STP X29, X30, [X31 - 0x60]!
	0x03D78788 STP X28, X27, [X31 + 0x10]
	0x03D7878C STP X26, X25, [X31 + 0x20]
	0x03D78790 STP X24, X23, [X31 + 0x30]
	0x03D78794 STP X22, X21, [X31 + 0x40]
	0x03D78798 STP X20, X19, [X31 + 0x50]
	0x03D7879C ADRP X28, 0x66F000
	0x03D787A0 ADRP X29, 0x3EE000
	0x03D787A4 ADRP X19, 0x3A4000
	0x03D787A8 ADRP X27, 0x3EE000
	0x03D787AC ADRP X26, 0x3EE000
	0x03D787B0 ADRP X25, 0x3EE000
	0x03D787B4 ADRP X24, 0x3EE000
	0x03D787B8 ADRP X23, 0x3EE000
	0x03D787BC ADRP X22, 0x3EE000
	0x03D787C0 ADRP X21, 0x3A4000
	0x03D787C4 ADRP X20, 0x3EE000
	0x03D787C8 LDR X29, [X29 + 0xFB8]
	0x03D787CC LDR X19, [X19 + 0x100]
	0x03D787D0 LDR X27, [X27 + 0xFC0]
	0x03D787D4 LDR X26, [X26 + 0xFC8]
	0x03D787D8 LDR X25, [X25 + 0xFD0]
	0x03D787DC LDRB W8, [X28 + 0xD6B]
	0x03D787E0 LDR X24, [X24 + 0xFD8]
	0x03D787E4 LDR X23, [X23 + 0xFE0]
	0x03D787E8 LDR X22, [X22 + 0xFE8]
	0x03D787EC LDR X21, [X21 + 0xEB8]
	0x03D787F0 LDR X20, [X20 + 0xFF0]
	0x03D787F4 TBNZ X8, 0x0, 0x3D78878
	0x03D787F8 ADRP X0, 0x3A4000
	0x03D787FC LDR X0, [X0 + 0x100]
	0x03D78800 BL 0x1C16CF4
	0x03D78804 ADRP X0, 0x3EE000
	0x03D78808 LDR X0, [X0 + 0xFC8]
	0x03D7880C BL 0x1C16CF4
	0x03D78810 ADRP X0, 0x3EE000
	0x03D78814 LDR X0, [X0 + 0xFE0]
	0x03D78818 BL 0x1C16CF4
	0x03D7881C ADRP X0, 0x3EE000
	0x03D78820 LDR X0, [X0 + 0xFD8]
	0x03D78824 BL 0x1C16CF4
	0x03D78828 ADRP X0, 0x3EE000
	0x03D7882C LDR X0, [X0 + 0xFE8]
	0x03D78830 BL 0x1C16CF4
	0x03D78834 ADRP X0, 0x3EE000
	0x03D78838 LDR X0, [X0 + 0xFD0]
	0x03D7883C BL 0x1C16CF4
	0x03D78840 ADRP X0, 0x3EE000
	0x03D78844 LDR X0, [X0 + 0xFB8]
	0x03D78848 BL 0x1C16CF4
	0x03D7884C ADRP X0, 0x3EE000
	0x03D78850 LDR X0, [X0 + 0xFC0]
	0x03D78854 BL 0x1C16CF4
	0x03D78858 ADRP X0, 0x3A4000
	0x03D7885C LDR X0, [X0 + 0xEB8]
	0x03D78860 BL 0x1C16CF4
	0x03D78864 ADRP X0, 0x3EE000
	0x03D78868 LDR X0, [X0 + 0xFF0]
	0x03D7886C BL 0x1C16CF4
	0x03D78870 MOVZ W8, 0x1
	0x03D78874 STRB W8, [X28 + 0xD6B]
	0x03D78878 LDR X0, [X29]
	0x03D7887C MOV X1, X31
	0x03D78880 BL 0x3C30760
	0x03D78884 LDR X8, [X19]
	0x03D78888 MOV X1, X31
	0x03D7888C LDR X8, [X8 + 0xB8]
	0x03D78890 STR W0, [X8]
	0x03D78894 LDR X0, [X27]
	0x03D78898 BL 0x3C30760
	0x03D7889C LDR X8, [X19]
	0x03D788A0 MOV X2, X31
	0x03D788A4 LDR X8, [X8 + 0xB8]
	0x03D788A8 STR W0, [X8 + 0x4]
	0x03D788AC LDR X8, [X19]
	0x03D788B0 LDR X0, [X26]
	0x03D788B4 LDR X9, [X25]
	0x03D788B8 LDR X8, [X8 + 0xB8]
	0x03D788BC STP X0, X9, [X8 + 0x8]
	0x03D788C0 LDR X1, [X24]
	0x03D788C4 BL 0x321B938
	0x03D788C8 LDR X8, [X19]
	0x03D788CC MOV X2, X31
	0x03D788D0 LDR X8, [X8 + 0xB8]
	0x03D788D4 STR X0, [X8 + 0x18]
	0x03D788D8 LDR X0, [X8 + 0x8]
	0x03D788DC LDR X1, [X23]
	0x03D788E0 BL 0x321B938
	0x03D788E4 LDR X8, [X19]
	0x03D788E8 MOV X2, X31
	0x03D788EC LDR X8, [X8 + 0xB8]
	0x03D788F0 STR X0, [X8 + 0x20]
	0x03D788F4 LDR X0, [X8 + 0x8]
	0x03D788F8 LDR X1, [X22]
	0x03D788FC BL 0x321B938
	0x03D78900 LDR X8, [X19]
	0x03D78904 MOV X2, X31
	0x03D78908 LDR X8, [X8 + 0xB8]
	0x03D7890C STR X0, [X8 + 0x28]
	0x03D78910 LDR X1, [X21]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x670000
	009 Move W8, [X21+3430]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {48}
	016 Move X0, 0x37E000
	017 Move X0, [X0+1456]
	018 Call 0x1C17CF4
	019 Move X0, 0x3A6000
	020 Move X0, [X0+1624]
	021 Call 0x1C17CF4
	022 Move X0, 0x37C000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move X0, 0x3A6000
	026 Move X0, [X0+1632]
	027 Call 0x1C17CF4
	028 Move X0, 0x3EF000
	029 Move X0, [X0+3992]
	030 Call 0x1C17CF4
	031 Move X0, 0x3EF000
	032 Move X0, [X0+4000]
	033 Call 0x1C17CF4
	034 Move X0, 0x3EF000
	035 Move X0, [X0+4008]
	036 Call 0x1C17CF4
	037 Move X0, 0x3A5000
	038 Move X0, [X0+256]
	039 Call 0x1C17CF4
	040 Move X0, 0x3A4000
	041 Move X0, [X0+2200]
	042 Call 0x1C17CF4
	043 Move X0, 0x3EF000
	044 Move X0, [X0+4016]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+3430], W8
	048 Move X8, [X19+32]
	049 Compare X8, 0
	050 JumpIfEqual {63}
	051 Move X8, 0x37C000
	052 Move X8, [X8+2600]
	053 Move X19, 0x3EF000
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Move X19, [X19+4016]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, [X19]
	061 Move X1, X31
	062 Call Debug.LogWarning, X0
	063 Move [X19+32], X20
	064 Move X8, 0x3A4000
	065 Move X8, [X8+2200]
	066 Move X0, [X8]
	067 Call 0x1C17F10
	068 Move X1, X31
	069 Move X21, X0
	070 Call VisualElement..ctor, X0
	071 Move X22, 0x3A5000
	072 Move X22, [X22+256]
	073 Move X0, [X22]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Compare X21, 0
	079 JumpIfEqual {198}
	080 Move X8, [X22]
	081 Move X0, X21
	082 Move X2, X31
	083 Move X8, [X8+184]
	084 Move X1, [X8+24]
	085 Call VisualElement.set_name, X0, X1
	086 Move [X19+40], X21
	087 Move X8, [X22]
	088 Move X0, X21
	089 Move X2, X31
	090 Move X8, [X8+184]
	091 Move X1, [X8+24]
	092 Call VisualElement.AddToClassList, X0, X1
	093 Move X0, [X19+40]
	094 Compare X0, 0
	095 JumpIfEqual {198}
	096 Move X8, [X22]
	097 Move X2, X31
	098 Move X8, [X8+184]
	099 Move X1, [X8+16]
	100 Call VisualElement.set_viewDataKey, X0, X1
	101 Compare X20, 0
	102 JumpIfEqual {198}
	103 Move X8, [X20+1088]
	104 Compare X8, 0
	105 JumpIfEqual {198}
	106 Move X8, [X8+888]
	107 Add X0, X31, 8
	108 Move W1, W31
	109 Move X3, X31
	110 Move [X31+8], X8
	111 Move X2, [X19+40]
	112 Call Hierarchy.Insert, X0, X1, X2
	113 Move X0, [X19+40]
	114 Compare X0, 0
	115 JumpIfEqual {198}
	116 Move X1, [X19+48]
	117 Move X2, X31
	118 Call VisualElement.Add, X0, X1
	119 Move X8, [X19+32]
	120 Compare X8, 0
	121 JumpIfEqual {198}
	122 Move X8, [X8+1088]
	123 Compare X8, 0
	124 JumpIfEqual {198}
	125 Move X20, [X8+1056]
	126 Move X8, 0x37E000
	127 Move X8, [X8+1456]
	128 Move X0, [X8]
	129 Call 0x1C17F10
	130 Move X8, 0x3EF000
	131 Move X8, [X8+4000]
	132 Move X1, X19
	133 Move X3, X31
	134 Move X21, X0
	135 Move X2, [X8]
	136 Call Action`1<Single>..ctor, X0, X1, X2
	137 Compare X20, 0
	138 JumpIfEqual {198}
	139 Move X0, X20
	140 Move X1, X21
	141 Move X2, X31
	142 Call Scroller.add_valueChanged, X0, X1
	143 Move X8, [X19+32]
	144 Compare X8, 0
	145 JumpIfEqual {198}
	146 Move X8, [X8+1088]
	147 Compare X8, 0
	148 JumpIfEqual {198}
	149 Move X22, 0x3A6000
	150 Move X20, [X8+1048]
	151 Move X22, [X22+1632]
	152 Move X0, [X22]
	153 Call 0x1C17F10
	154 Move X8, 0x3EF000
	155 Move X8, [X8+4008]
	156 Move X1, X19
	157 Move X3, X31
	158 Move X21, X0
	159 Move X2, [X8]
	160 Call 0x2D0F824, X0, X1, X2
	161 Compare X20, 0
	162 JumpIfEqual {198}
	163 Move X23, 0x3A6000
	164 Move X23, [X23+1624]
	165 Move X0, X20
	166 Move X1, X21
	167 Move W2, W31
	168 Move X3, [X23]
	169 Call 0x21A2534, X0, X1, X2
	170 Move X8, [X19+48]
	171 Compare X8, 0
	172 JumpIfEqual {198}
	173 Move X0, [X22]
	174 Move X20, [X8+1040]
	175 Call 0x1C17F10
	176 Move X8, 0x3EF000
	177 Move X8, [X8+3992]
	178 Move X1, X19
	179 Move X3, X31
	180 Move X21, X0
	181 Move X2, [X8]
	182 Call 0x2D0F824, X0, X1, X2
	183 Compare X20, 0
	184 JumpIfEqual {198}
	185 Move X3, [X23]
	186 Move X0, X20
	187 Move X1, X21
	188 Move W2, W31
	189 Call 0x21A2534, X0, X1, X2
	190 Move X20, [X31+48]
	191 Move X19, [X31+56]
	192 Move X22, [X31+32]
	193 Move X21, [X31+40]
	194 Move X30, [X31+16]
	195 Move X23, [X31+24]
	196 Add X31, X31, 64
	197 Return 
	198 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x03D78914 BL 0x321B938
	0x03D78918 LDR X8, [X19]
	0x03D7891C LDR X9, [X20]
	0x03D78920 LDP X20, X19, [X31 + 0x50]
	0x03D78924 LDP X22, X21, [X31 + 0x40]
	0x03D78928 LDR X8, [X8 + 0xB8]
	0x03D7892C LDP X24, X23, [X31 + 0x30]
	0x03D78930 LDP X26, X25, [X31 + 0x20]
	0x03D78934 LDP X28, X27, [X31 + 0x10]
	0x03D78938 STP X0, X9, [X8 + 0x30]
	0x03D7893C LDP X29, X30, [X31], #0x60
	0x03D78940 RET
	0x03D78944 STR X30, [X31 - 0x20]!
	0x03D78948 STP X20, X19, [X31 + 0x10]
	0x03D7894C ADRP X20, 0x66F000
	0x03D78950 LDRB W8, [X20 + 0xD6C]
	0x03D78954 MOV X19, X0
	0x03D78958 TBNZ X8, 0x0, 0x3D78970
	0x03D7895C ADRP X0, 0x3EE000
	0x03D78960 LDR X0, [X0 + 0xFF8]
	0x03D78964 BL 0x1C16CF4
	0x03D78968 MOVZ W8, 0x1
	0x03D7896C STRB W8, [X20 + 0xD6C]
	0x03D78970 MOV X0, X19
	0x03D78974 MOV X1, X31
	0x03D78978 BL 0x3CFAD24
	0x03D7897C CBZ X0, 0x3D789BC
	0x03D78980 ADRP X8, 0x3EE000
	0x03D78984 LDR X8, [X8 + 0xFF8]
	0x03D78988 LDR X9, [X0]
	0x03D7898C LDR X8, [X8]
	0x03D78990 LDRB W11, [X9 + 0x130]
	0x03D78994 LDRB W10, [X8 + 0x130]
	0x03D78998 CMP W11, W10
	0x03D7899C B.CS 0x3D789A8
	0x03D789A0 MOV X0, X31
	0x03D789A4 B 0x3D789BC
	0x03D789A8 LDR X9, [X9 + 0xC8]
	0x03D789AC ADD X9, X9, X10, 0x3, LSL
	0x03D789B0 LDUR X9, [X9 - 0x8]
	0x03D789B4 CMP X9, X8
	0x03D789B8 CSEL X0, X0, X31, EQ
	0x03D789BC LDP X20, X19, [X31 + 0x10]
	0x03D789C0 LDR X30, [X31], #0x20
	0x03D789C4 RET
	0x03D789C8 LDR X0, [X0 + 0x538]
	0x03D789CC RET
	0x03D789D0 STP X30, X19, [X31 - 0x10]!
	0x03D789D4 MOV X19, X0
	0x03D789D8 CBZ X1, 0x3D78A00
	0x03D789DC MOV X0, X1
	0x03D789E0 STR X1, [X19 + 0x538]
	0x03D789E4 BL 0x3D70A04
	0x03D789E8 CMP W0, 0x1
	0x03D789EC B.LT 0x3D78A10
	0x03D789F0 MOV X0, X19
	0x03D789F4 MOV X1, X31
	0x03D789F8 LDP X30, X19, [X31], #0x10
	0x03D789FC B 0x3CFEA7C
	0x03D78A00 LDR X0, [X19 + 0x538]
	0x03D78A04 CBZ X0, 0x3D78A18
	0x03D78A08 LDP X30, X19, [X31], #0x10
	0x03D78A0C B 0x3D752D8
	0x03D78A10 LDP X30, X19, [X31], #0x10
	0x03D78A14 RET
	0x03D78A18 BL 0x1C16F20
	0x03D78A1C LDR X0, [X0 + 0x548]
	0x03D78A20 RET
	0x03D78A24 STR X30, [X31 - 0x20]!
	0x03D78A28 STP X20, X19, [X31 + 0x10]
	0x03D78A2C MOV X19, X0
	0x03D78A30 CBZ X1, 0x3D78A9C
	0x03D78A34 MOV X0, X19
	0x03D78A38 MOV X20, X1
	0x03D78A3C STR X1, [X19 + 0x548]
	0x03D78A40 BL 0x3D78944
	0x03D78A44 CBZ X0, 0x3D78A90
	0x03D78A48 MOV X0, X19
	0x03D78A4C BL 0x3D78944
	0x03D78A50 CBZ X0, 0x3D78AB0
	0x03D78A54 LDR X8, [X0 + 0x48]
	0x03D78A58 CBZ X8, 0x3D78AB0
	0x03D78A5C LDR X0, [X8 + 0x30]
	0x03D78A60 CBZ X0, 0x3D78AB0
	0x03D78A64 MOV X1, X20
	0x03D78A68 MOV X2, X31
	0x03D78A6C BL 0x3D5EA20
	0x03D78A70 LDR X8, [X19 + 0x558]
	0x03D78A74 CBZ X8, 0x3D78A90
	0x03D78A78 LDR X2, [X8 + 0x18]
	0x03D78A7C LDR X0, [X8 + 0x40]
	0x03D78A80 LDR X1, [X8 + 0x28]
	0x03D78A84 LDP X20, X19, [X31 + 0x10]
	0x03D78A88 LDR X30, [X31], #0x20
	0x03D78A8C BR X2
	0x03D78A90 LDP X20, X19, [X31 + 0x10]
	0x03D78A94 LDR X30, [X31], #0x20
	0x03D78A98 RET
	0x03D78A9C LDR X0, [X19 + 0x548]
	0x03D78AA0 CBZ X0, 0x3D78AB0
	0x03D78AA4 LDP X20, X19, [X31 + 0x10]
	0x03D78AA8 LDR X30, [X31], #0x20
	0x03D78AAC B 0x3D78AB4
	0x03D78AB0 BL 0x1C16F20
	0x03D78AB4 STR X30, [X31 - 0x30]!
	0x03D78AB8 STP X22, X21, [X31 + 0x10]
	0x03D78ABC STP X20, X19, [X31 + 0x20]
	0x03D78AC0 ADRP X20, 0x66F000
	0x03D78AC4 LDRB W8, [X20 + 0xD84]
	0x03D78AC8 MOV X19, X0
	0x03D78ACC TBNZ X8, 0x0, 0x3D78AF0
	0x03D78AD0 ADRP X0, 0x3EF000
	0x03D78AD4 LDR X0, [X0]
	0x03D78AD8 BL 0x1C16CF4
	0x03D78ADC ADRP X0, 0x3EF000
	0x03D78AE0 LDR X0, [X0 + 0x8]
	0x03D78AE4 BL 0x1C16CF4
	0x03D78AE8 MOVZ W8, 0x1
	0x03D78AEC STRB W8, [X20 + 0xD84]
	0x03D78AF0 LDR X20, [X19 + 0x10]
	0x03D78AF4 CBZ X20, 0x3D78BE0
	0x03D78AF8 ADRP X21, 0x3EF000
	0x03D78AFC ADRP X22, 0x3EF000
	0x03D78B00 LDR X21, [X21]
	0x03D78B04 LDR X22, [X22 + 0x8]
	0x03D78B08 LDR X8, [X20]
	0x03D78B0C LDR X1, [X21]
	0x03D78B10 LDRH W9, [X8 + 0x12E]
	0x03D78B14 CBZ X9, 0x3D78B38
	0x03D78B18 LDR X10, [X8 + 0xB0]
	0x03D78B1C ADD X10, X10, 0x8
	0x03D78B20 LDUR X11, [X10 - 0x8]
	0x03D78B24 CMP X11, X1
	0x03D78B28 B.EQ 0x3D78B48
	0x03D78B2C SUBS X9, X9, 0x1
	0x03D78B30 ADD X10, X10, 0x10
	0x03D78B34 B.NE 0x3D78B20
	0x03D78B38 MOV X0, X20
	0x03D78B3C MOV W2, W31
	0x03D78B40 BL 0x1C5C788
	0x03D78B44 B 0x3D78B54
	0x03D78B48 LDRSW X9, [X10]
	0x03D78B4C ADD X8, X8, X9, 0x4, LSL
	0x03D78B50 ADD X0, X8, 0x138
	0x03D78B54 LDP X8, X1, [X0]
	0x03D78B58 MOV X0, X20
	0x03D78B5C BLR X8
	0x03D78B60 CMP W0, 0x0
	0x03D78B64 B.LE 0x3D78BE4
	0x03D78B68 LDR X20, [X19 + 0x10]
	0x03D78B6C CBZ X20, 0x3D78BE0
	0x03D78B70 LDR X8, [X20]
	0x03D78B74 LDR X1, [X22]
	0x03D78B78 LDRH W9, [X8 + 0x12E]
	0x03D78B7C CBZ X9, 0x3D78BA0
	0x03D78B80 LDR X10, [X8 + 0xB0]
	0x03D78B84 ADD X10, X10, 0x8
	0x03D78B88 LDUR X11, [X10 - 0x8]
	0x03D78B8C CMP X11, X1
	0x03D78B90 B.EQ 0x3D78BB0
	0x03D78B94 SUBS X9, X9, 0x1
	0x03D78B98 ADD X10, X10, 0x10
	0x03D78B9C B.NE 0x3D78B88
	0x03D78BA0 MOV X0, X20
	0x03D78BA4 MOV W2, W31
	0x03D78BA8 BL 0x1C5C788
	0x03D78BAC B 0x3D78BBC
	0x03D78BB0 LDRSW X9, [X10]
	0x03D78BB4 ADD X8, X8, X9, 0x4, LSL
	0x03D78BB8 ADD X0, X8, 0x138
	0x03D78BBC LDP X8, X2, [X0]
	0x03D78BC0 MOV X0, X20
	0x03D78BC4 MOV W1, W31
	0x03D78BC8 BLR X8
	0x03D78BCC MOV X1, X0
	0x03D78BD0 MOV X0, X19
	0x03D78BD4 BL 0x3D7A4BC
	0x03D78BD8 LDR X20, [X19 + 0x10]
	0x03D78BDC CBNZ X20, 0x3D78B08
	0x03D78BE0 BL 0x1C16F20
	0x03D78BE4 LDP X20, X19, [X31 + 0x20]
	0x03D78BE8 LDP X22, X21, [X31 + 0x10]
	0x03D78BEC LDR X30, [X31], #0x30
	0x03D78BF0 RET
	0x03D78BF4 LDR X8, [X0 + 0x558]
	0x03D78BF8 CBZ X8, 0x3D78C0C
	0x03D78BFC LDR X2, [X8 + 0x18]
	0x03D78C00 LDR X0, [X8 + 0x40]
	0x03D78C04 LDR X1, [X8 + 0x28]
	0x03D78C08 BR X2
	0x03D78C0C RET
	0x03D78C10 STR X30, [X31 - 0x20]!
	0x03D78C14 STP X20, X19, [X31 + 0x10]
	0x03D78C18 AND W8, W1, 0x1
	0x03D78C1C MOV W19, W1
	0x03D78C20 MOV X20, X0
	0x03D78C24 STRB W8, [X0 + 0x540]
	0x03D78C28 BL 0x3D78944
	0x03D78C2C CBZ X0, 0x3D78C60
	0x03D78C30 MOV X0, X20
	0x03D78C34 BL 0x3D78944
	0x03D78C38 CBZ X0, 0x3D78C6C
	0x03D78C3C LDR X8, [X0 + 0x48]
	0x03D78C40 CBZ X8, 0x3D78C6C
	0x03D78C44 LDR X0, [X8 + 0x30]
	0x03D78C48 CBZ X0, 0x3D78C6C
	0x03D78C4C AND W1, W19, 0x1
	0x03D78C50 LDP X20, X19, [X31 + 0x10]
	0x03D78C54 MOV X2, X31
	0x03D78C58 LDR X30, [X31], #0x20
	0x03D78C5C B 0x3D5F1D8
	0x03D78C60 LDP X20, X19, [X31 + 0x10]
	0x03D78C64 LDR X30, [X31], #0x20
	0x03D78C68 RET
	0x03D78C6C BL 0x1C16F20
	0x03D78C70 STP X30, X21, [X31 - 0x20]!
	0x03D78C74 STP X20, X19, [X31 + 0x10]
	0x03D78C78 ADRP X20, 0x66F000
	0x03D78C7C ADRP X21, 0x3EF000
	0x03D78C80 LDRB W8, [X20 + 0xD6D]
	0x03D78C84 LDR X21, [X21 + 0x10]
	0x03D78C88 MOV X19, X0
	0x03D78C8C TBNZ X8, 0x0, 0x3D78CA4
	0x03D78C90 ADRP X0, 0x3EF000
	0x03D78C94 LDR X0, [X0 + 0x10]
	0x03D78C98 BL 0x1C16CF4
	0x03D78C9C MOVZ W8, 0x1
	0x03D78CA0 STRB W8, [X20 + 0xD6D]
	0x03D78CA4 LDR X0, [X21]
	0x03D78CA8 BL 0x1C16F10
	0x03D78CAC MOV X20, X0
	0x03D78CB0 BL 0x3D760CC
	0x03D78CB4 MOV X0, X19
	0x03D78CB8 MOV X1, X20
	0x03D78CBC LDP X20, X19, [X31 + 0x10]
	0x03D78CC0 LDP X30, X21, [X31], #0x20
	0x03D78CC4 B 0x3D78CC8
	0x03D78CC8 STP X30, X25, [X31 - 0x40]!
	0x03D78CCC STP X24, X23, [X31 + 0x10]
	0x03D78CD0 STP X22, X21, [X31 + 0x20]
	0x03D78CD4 STP X20, X19, [X31 + 0x30]
	0x03D78CD8 ADRP X21, 0x66F000
	0x03D78CDC ADRP X25, 0x3EF000
	0x03D78CE0 ADRP X24, 0x3EE000
	0x03D78CE4 ADRP X23, 0x3EE000
	0x03D78CE8 ADRP X22, 0x3EA000
	0x03D78CEC LDRB W8, [X21 + 0xD6E]
	0x03D78CF0 LDR X25, [X25 + 0x18]
	0x03D78CF4 LDR X24, [X24 + 0x848]
	0x03D78CF8 LDR X23, [X23 + 0x850]
	0x03D78CFC LDR X22, [X22 + 0xA98]
	0x03D78D00 MOV X20, X1
	0x03D78D04 MOV X19, X0
	0x03D78D08 TBNZ X8, 0x0, 0x3D78D5C
	0x03D78D0C ADRP X0, 0x3EA000
	0x03D78D10 LDR X0, [X0 + 0xA98]
	0x03D78D14 BL 0x1C16CF4
	0x03D78D18 ADRP X0, 0x3EF000
	0x03D78D1C LDR X0, [X0 + 0x10]
	0x03D78D20 BL 0x1C16CF4
	0x03D78D24 ADRP X0, 0x3EE000
	0x03D78D28 LDR X0, [X0 + 0x850]
	0x03D78D2C BL 0x1C16CF4
	0x03D78D30 ADRP X0, 0x3EE000
	0x03D78D34 LDR X0, [X0 + 0x848]
	0x03D78D38 BL 0x1C16CF4
	0x03D78D3C ADRP X0, 0x3EF000
	0x03D78D40 LDR X0, [X0 + 0x18]
	0x03D78D44 BL 0x1C16CF4
	0x03D78D48 ADRP X0, 0x3EF000
	0x03D78D4C LDR X0, [X0 + 0x20]
	0x03D78D50 BL 0x1C16CF4
	0x03D78D54 MOVZ W8, 0x1
	0x03D78D58 STRB W8, [X21 + 0xD6E]
	0x03D78D5C LDR X0, [X25]
	0x03D78D60 BL 0x1C16F10
	0x03D78D64 MOV X21, X0
	0x03D78D68 BL 0x3D78DFC
	0x03D78D6C STR X21, [X19 + 0x548]
	0x03D78D70 LDR X0, [X24]
	0x03D78D74 BL 0x1C16F10
	0x03D78D78 LDR X1, [X23]
	0x03D78D7C MOV X21, X0
	0x03D78D80 BL 0x301B7C4
	0x03D78D84 STR X21, [X19 + 0x550]
	0x03D78D88 LDR X0, [X22]
	0x03D78D8C LDR W8, [X0 + 0xE0]
	0x03D78D90 CBNZ W8, 0x3D78D98
	0x03D78D94 BL 0x1C16DFC
	0x03D78D98 MOV X0, X19
	0x03D78D9C MOV X1, X31
	0x03D78DA0 BL 0x3CFB82C
	0x03D78DA4 LDR X0, [X19 + 0x440]
	0x03D78DA8 CBZ X0, 0x3D78DF8
	0x03D78DAC ADRP X8, 0x3EF000
	0x03D78DB0 LDR X8, [X8 + 0x20]
	0x03D78DB4 MOV X2, X31
	0x03D78DB8 LDR X1, [X8]
	0x03D78DBC BL 0x3DEB98C
	0x03D78DC0 CBNZ X20, 0x3D78DDC
	0x03D78DC4 ADRP X8, 0x3EF000
	0x03D78DC8 LDR X8, [X8 + 0x10]
	0x03D78DCC LDR X0, [X8]
	0x03D78DD0 BL 0x1C16F10
	0x03D78DD4 MOV X20, X0
	0x03D78DD8 BL 0x3D760CC
	0x03D78DDC MOV X0, X19
	0x03D78DE0 MOV X1, X20
	0x03D78DE4 LDP X20, X19, [X31 + 0x30]
	0x03D78DE8 LDP X22, X21, [X31 + 0x20]
	0x03D78DEC LDP X24, X23, [X31 + 0x10]
	0x03D78DF0 LDP X30, X25, [X31], #0x40
	0x03D78DF4 B 0x3D789D0
	0x03D78DF8 BL 0x1C16F20
	0x03D78DFC STR X30, [X31 - 0x30]!
	0x03D78E00 STP X22, X21, [X31 + 0x10]
	0x03D78E04 STP X20, X19, [X31 + 0x20]
	0x03D78E08 ADRP X21, 0x66F000
	0x03D78E0C ADRP X22, 0x3EE000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x670000
	009 Move W8, [X20+3431]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {86}
	015 Move X0, 0x3EF000
	016 Move X0, [X0+1616]
	017 Call 0x1C17CF4
	018 Move X0, 0x37E000
	019 Move X0, [X0+1456]
	020 Call 0x1C17CF4
	021 Move X0, 0x3EF000
	022 Move X0, [X0+3816]
	023 Call 0x1C17CF4
	024 Move X0, 0x3EF000
	025 Move X0, [X0+1624]
	026 Call 0x1C17CF4
	027 Move X0, 0x3EF000
	028 Move X0, [X0+1560]
	029 Call 0x1C17CF4
	030 Move X0, 0x3EF000
	031 Move X0, [X0+1632]
	032 Call 0x1C17CF4
	033 Move X0, 0x3EF000
	034 Move X0, [X0+1568]
	035 Call 0x1C17CF4
	036 Move X0, 0x3EF000
	037 Move X0, [X0+1640]
	038 Call 0x1C17CF4
	039 Move X0, 0x37D000
	040 Move X0, [X0+3696]
	041 Call 0x1C17CF4
	042 Move X0, 0x3A6000
	043 Move X0, [X0+1688]
	044 Call 0x1C17CF4
	045 Move X0, 0x3A6000
	046 Move X0, [X0+1632]
	047 Call 0x1C17CF4
	048 Move X0, 0x3EF000
	049 Move X0, [X0+3904]
	050 Call 0x1C17CF4
	051 Move X0, 0x3EF000
	052 Move X0, [X0+3912]
	053 Call 0x1C17CF4
	054 Move X0, 0x3EF000
	055 Move X0, [X0+3992]
	056 Call 0x1C17CF4
	057 Move X0, 0x3EF000
	058 Move X0, [X0+3920]
	059 Call 0x1C17CF4
	060 Move X0, 0x3EF000
	061 Move X0, [X0+3928]
	062 Call 0x1C17CF4
	063 Move X0, 0x3EF000
	064 Move X0, [X0+3936]
	065 Call 0x1C17CF4
	066 Move X0, 0x3EF000
	067 Move X0, [X0+3944]
	068 Call 0x1C17CF4
	069 Move X0, 0x3EF000
	070 Move X0, [X0+3952]
	071 Call 0x1C17CF4
	072 Move X0, 0x3EF000
	073 Move X0, [X0+3960]
	074 Call 0x1C17CF4
	075 Move X0, 0x3EF000
	076 Move X0, [X0+4000]
	077 Call 0x1C17CF4
	078 Move X0, 0x3EF000
	079 Move X0, [X0+3968]
	080 Call 0x1C17CF4
	081 Move X0, 0x3EF000
	082 Move X0, [X0+4008]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X20+3431], W8
	086 Move X23, 0x3A6000
	087 Move X22, 0x3A6000
	088 Move X8, [X19+32]
	089 Move X23, [X23+1632]
	090 Move X22, [X22+1688]
	091 Compare X8, 0
	092 JumpIfEqual {138}
	093 Move X8, [X8+1088]
	094 Compare X8, 0
	095 JumpIfEqual {353}
	096 Move X9, 0x37E000
	097 Move X9, [X9+1456]
	098 Move X21, 0x3EF000
	099 Move X20, [X8+1056]
	100 Move X0, [X9]
	101 Move X21, [X21+4000]
	102 Call 0x1C17F10
	103 Move X2, [X21]
	104 Move X1, X19
	105 Move X3, X31
	106 Move X21, X0
	107 Call Action`1<Single>..ctor, X0, X1, X2
	108 Compare X20, 0
	109 JumpIfEqual {353}
	110 Move X0, X20
	111 Move X1, X21
	112 Move X2, X31
	113 Call Scroller.remove_valueChanged, X0, X1
	114 Move X8, [X19+32]
	115 Compare X8, 0
	116 JumpIfEqual {353}
	117 Move X8, [X8+1088]
	118 Compare X8, 0
	119 JumpIfEqual {353}
	120 Move X0, [X23]
	121 Move X21, 0x3EF000
	122 Move X20, [X8+1048]
	123 Move X21, [X21+4008]
	124 Call 0x1C17F10
	125 Move X2, [X21]
	126 Move X1, X19
	127 Move X3, X31
	128 Move X21, X0
	129 Call 0x2D0F824, X0, X1, X2
	130 Compare X20, 0
	131 JumpIfEqual {353}
	132 Move X3, [X22]
	133 Move X0, X20
	134 Move X1, X21
	135 Move W2, W31
	136 Call 0x21A28B4, X0, X1, X2
	137 Move [X19+32], X31
	138 Move X8, [X19+48]
	139 Compare X8, 0
	140 JumpIfEqual {353}
	141 Move X0, [X23]
	142 Move X21, 0x3EF000
	143 Move X20, [X8+1040]
	144 Move X21, [X21+3992]
	145 Call 0x1C17F10
	146 Move X2, [X21]
	147 Move X1, X19
	148 Move X3, X31
	149 Move X21, X0
	150 Call 0x2D0F824, X0, X1, X2
	151 Compare X20, 0
	152 JumpIfEqual {353}
	153 Move X3, [X22]
	154 Move X22, 0x37D000
	155 Move X23, 0x3EF000
	156 Move X22, [X22+3696]
	157 Move X23, [X23+3944]
	158 Move X0, X20
	159 Move X1, X21
	160 Move W2, W31
	161 Call 0x21A28B4, X0, X1, X2
	162 Move X0, [X22]
	163 Move X20, [X19+48]
	164 Call 0x1C17F10
	165 Move X2, [X23]
	166 Move X1, X19
	167 Move X3, X31
	168 Move X21, X0
	169 Call Action..ctor, X0, X1, X2
	170 Compare X20, 0
	171 JumpIfEqual {353}
	172 Move X23, 0x3EF000
	173 Move X24, 0x3EF000
	174 Move X23, [X23+1568]
	175 Move X24, [X24+3960]
	176 Move X0, X20
	177 Move X1, X21
	178 Move X2, X31
	179 Call MultiColumnCollectionHeader.remove_columnSortingChanged, X0, X1
	180 Move X0, [X23]
	181 Move X20, [X19+48]
	182 Call 0x1C17F10
	183 Move X2, [X24]
	184 Move X1, X19
	185 Move X3, X31
	186 Move X21, X0
	187 Call Action`2<Object, Object>..ctor, X0, X1, X2
	188 Compare X20, 0
	189 JumpIfEqual {353}
	190 Move X23, 0x3EF000
	191 Move X24, 0x3EF000
	192 Move X23, [X23+1560]
	193 Move X24, [X24+3936]
	194 Move X0, X20
	195 Move X1, X21
	196 Move X2, X31
	197 Call MultiColumnCollectionHeader.remove_contextMenuPopulateEvent, X0, X1
	198 Move X0, [X23]
	199 Move X20, [X19+48]
	200 Call 0x1C17F10
	201 Move X2, [X24]
	202 Move X1, X19
	203 Move X3, X31
	204 Move X21, X0
	205 Call Action`2<Int32, Single>..ctor, X0, X1, X2
	206 Compare X20, 0
	207 JumpIfEqual {353}
	208 Move X23, 0x3EF000
	209 Move X23, [X23+3968]
	210 Move X0, X20
	211 Move X1, X21
	212 Move X2, X31
	213 Call MultiColumnCollectionHeader.remove_columnResized, X0, X1
	214 Move X0, [X22]
	215 Move X20, [X19+48]
	216 Call 0x1C17F10
	217 Move X2, [X23]
	218 Move X1, X19
	219 Move X3, X31
	220 Move X21, X0
	221 Call Action..ctor, X0, X1, X2
	222 Compare X20, 0
	223 JumpIfEqual {353}
	224 Move X0, X20
	225 Move X1, X21
	226 Move X2, X31
	227 Call MultiColumnCollectionHeader.remove_viewDataRestored, X0, X1
	228 Move X8, [X19+48]
	229 Compare X8, 0
	230 JumpIfEqual {353}
	231 Move X9, 0x3EF000
	232 Move X9, [X9+1632]
	233 Move X21, 0x3EF000
	234 Move X20, [X8+1056]
	235 Move X0, [X9]
	236 Move X21, [X21+3904]
	237 Call 0x1C17F10
	238 Move X2, [X21]
	239 Move X1, X19
	240 Move X3, X31
	241 Move X21, X0
	242 Call Action`2<Object, Int32>..ctor, X0, X1, X2
	243 Compare X20, 0
	244 JumpIfEqual {353}
	245 Move X0, X20
	246 Move X1, X21
	247 Call Columns.remove_columnAdded, X0, X1
	248 Move X8, [X19+48]
	249 Compare X8, 0
	250 JumpIfEqual {353}
	251 Move X9, 0x3EF000
	252 Move X9, [X9+1616]
	253 Move X21, 0x3EF000
	254 Move X20, [X8+1056]
	255 Move X0, [X9]
	256 Move X21, [X21+3920]
	257 Call 0x1C17F10
	258 Move X2, [X21]
	259 Move X1, X19
	260 Move X3, X31
	261 Move X21, X0
	262 Call Action`1<Object>..ctor, X0, X1, X2
	263 Compare X20, 0
	264 JumpIfEqual {353}
	265 Move X0, X20
	266 Move X1, X21
	267 Call Columns.remove_columnRemoved, X0, X1
	268 Move X8, [X19+48]
	269 Compare X8, 0
	270 JumpIfEqual {353}
	271 Move X9, 0x3EF000
	272 Move X9, [X9+1640]
	273 Move X21, 0x3EF000
	274 Move X20, [X8+1056]
	275 Move X0, [X9]
	276 Move X21, [X21+3928]
	277 Call 0x1C17F10
	278 Move X2, [X21]
	279 Move X1, X19
	280 Move X3, X31
	281 Move X21, X0
	282 Call Action`3<Object, Int32, Int32>..ctor, X0, X1, X2
	283 Compare X20, 0
	284 JumpIfEqual {353}
	285 Move X0, X20
	286 Move X1, X21
	287 Call Columns.remove_columnReordered, X0, X1
	288 Move X8, [X19+48]
	289 Compare X8, 0
	290 JumpIfEqual {353}
	291 Move X9, 0x3EF000
	292 Move X9, [X9+1624]
	293 Move X21, 0x3EF000
	294 Move X20, [X8+1056]
	295 Move X0, [X9]
	296 Move X21, [X21+3952]
	297 Call 0x1C17F10
	298 Move X2, [X21]
	299 Move X1, X19
	300 Move X3, X31
	301 Move X21, X0
	302 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	303 Compare X20, 0
	304 JumpIfEqual {353}
	305 Move X0, X20
	306 Move X1, X21
	307 Call Columns.remove_columnChanged, X0, X1
	308 Move X8, [X19+48]
	309 Compare X8, 0
	310 JumpIfEqual {353}
	311 Move X9, 0x3EF000
	312 Move X9, [X9+3816]
	313 Move X21, 0x3EF000
	314 Move X20, [X8+1056]
	315 Move X0, [X9]
	316 Move X21, [X21+3912]
	317 Call 0x1C17F10
	318 Move X2, [X21]
	319 Move X1, X19
	320 Move X3, X31
	321 Move X21, X0
	322 Call Action`1<Int32Enum>..ctor, X0, X1, X2
	323 Compare X20, 0
	324 JumpIfEqual {353}
	325 Move X0, X20
	326 Move X1, X21
	327 Call Columns.remove_changed, X0, X1
	328 Move X0, [X19+48]
	329 Compare X0, 0
	330 JumpIfEqual {353}
	331 Move X1, X31
	332 Call VisualElement.RemoveFromHierarchy, X0
	333 Move X0, [X19+48]
	334 Compare X0, 0
	335 JumpIfEqual {353}
	336 Move X1, X31
	337 Call MultiColumnCollectionHeader.Dispose, X0
	338 Move X0, [X19+40]
	339 Move [X19+48], X31
	340 Compare X0, 0
	341 JumpIfEqual {353}
	342 Move X1, X31
	343 Call VisualElement.RemoveFromHierarchy, X0
	344 Move [X19+40], X31
	345 Move X20, [X31+48]
	346 Move X19, [X31+56]
	347 Move X22, [X31+32]
	348 Move X21, [X31+40]
	349 Move X24, [X31+16]
	350 Move X23, [X31+24]
	351 Move X30, [X31+64]
	352 Return 
	353 Call 0x1C17F20

Method: System.Void OnHorizontalScrollerValueChanged(System.Single v)

Disassembly:
	0x03D78E10 ADRP X20, 0x3EE000
	0x03D78E14 LDRB W8, [X21 + 0xD8B]
	0x03D78E18 LDR X22, [X22 + 0x848]
	0x03D78E1C LDR X20, [X20 + 0x850]
	0x03D78E20 MOV X19, X0
	0x03D78E24 TBNZ X8, 0x0, 0x3D78E48
	0x03D78E28 ADRP X0, 0x3EE000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call MultiColumnCollectionHeader.ScrollHorizontally, X0, V0
	008 Return 
	009 Call 0x1C17F20

Method: System.Void OnViewportGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent evt)

Disassembly:
	0x03D78E2C LDR X0, [X0 + 0x850]
	0x03D78E30 BL 0x1C16CF4
	0x03D78E34 ADRP X0, 0x3EE000
	0x03D78E38 LDR X0, [X0 + 0x848]
	0x03D78E3C BL 0x1C16CF4
	0x03D78E40 MOVZ W8, 0x1
	0x03D78E44 STRB W8, [X21 + 0xD8B]
	0x03D78E48 LDR X0, [X22]
	0x03D78E4C BL 0x1C16F10
	0x03D78E50 LDR X1, [X20]
	0x03D78E54 MOV X20, X0
	0x03D78E58 BL 0x301B7C4
	0x03D78E5C STR X20, [X19 + 0x10]
	0x03D78E60 MOV X0, X19
	0x03D78E64 LDP X20, X19, [X31 + 0x20]
	0x03D78E68 LDP X22, X21, [X31 + 0x10]
	0x03D78E6C MOV X1, X31
	0x03D78E70 LDR X30, [X31], #0x30
	0x03D78E74 B 0x33BDD8C
	0x03D78E78 STR X30, [X31 - 0x30]!
	0x03D78E7C STP X22, X21, [X31 + 0x10]
	0x03D78E80 STP X20, X19, [X31 + 0x20]
	0x03D78E84 ADRP X20, 0x66F000
	0x03D78E88 ADRP X22, 0x3EE000
	0x03D78E8C LDRB W8, [X20 + 0xD6F]
	0x03D78E90 LDR X22, [X22 + 0xFF8]
	0x03D78E94 MOV X19, X0
	0x03D78E98 TBNZ X8, 0x0, 0x3D78EB0
	0x03D78E9C ADRP X0, 0x3EE000
	0x03D78EA0 LDR X0, [X0 + 0xFF8]
	0x03D78EA4 BL 0x1C16CF4
	0x03D78EA8 MOVZ W8, 0x1
	0x03D78EAC STRB W8, [X20 + 0xD6F]
	0x03D78EB0 LDR X0, [X22]
	0x03D78EB4 LDR X20, [X19 + 0x538]
	0x03D78EB8 LDR X21, [X19 + 0x548]
	0x03D78EBC LDR X19, [X19 + 0x550]
	0x03D78EC0 BL 0x1C16F10
	0x03D78EC4 MOV X1, X20
	0x03D78EC8 MOV X2, X21
	0x03D78ECC MOV X3, X19
	0x03D78ED0 MOV X4, X31
	0x03D78ED4 MOV X22, X0
	0x03D78ED8 BL 0x3CF5968
	0x03D78EDC MOV X0, X22
	0x03D78EE0 LDP X20, X19, [X31 + 0x20]
	0x03D78EE4 LDP X22, X21, [X31 + 0x10]
	0x03D78EE8 LDR X30, [X31], #0x30
	0x03D78EEC RET
	0x03D78EF0 STR X30, [X31 - 0x50]!
	0x03D78EF4 STP X26, X25, [X31 + 0x10]
	0x03D78EF8 STP X24, X23, [X31 + 0x20]
	0x03D78EFC STP X22, X21, [X31 + 0x30]
	0x03D78F00 STP X20, X19, [X31 + 0x40]
	0x03D78F04 ADRP X21, 0x66F000
	0x03D78F08 LDRB W8, [X21 + 0xD70]
	0x03D78F0C MOV X20, X1
	0x03D78F10 MOV X19, X0
	0x03D78F14 TBNZ X8, 0x0, 0x3D78F50
	0x03D78F18 ADRP X0, 0x3EE000
	0x03D78F1C LDR X0, [X0 + 0x620]
	0x03D78F20 BL 0x1C16CF4
	0x03D78F24 ADRP X0, 0x37C000
	0x03D78F28 LDR X0, [X0 + 0xE70]
	0x03D78F2C BL 0x1C16CF4
	0x03D78F30 ADRP X0, 0x3EF000
	0x03D78F34 LDR X0, [X0 + 0x28]
	0x03D78F38 BL 0x1C16CF4
	0x03D78F3C ADRP X0, 0x3EF000
	0x03D78F40 LDR X0, [X0 + 0x30]
	0x03D78F44 BL 0x1C16CF4
	0x03D78F48 MOVZ W8, 0x1
	0x03D78F4C STRB W8, [X21 + 0xD70]
	0x03D78F50 ADRP X26, 0x37C000
	0x03D78F54 ADRP X25, 0x3EF000
	0x03D78F58 ADRP X24, 0x3EE000
	0x03D78F5C ADRP X23, 0x3EF000
	0x03D78F60 LDR X26, [X26 + 0xE70]
	0x03D78F64 LDR X25, [X25 + 0x28]
	0x03D78F68 LDR X24, [X24 + 0x620]
	0x03D78F6C LDR X23, [X23 + 0x30]
	0x03D78F70 MOV X0, X19
	0x03D78F74 BL 0x3D78944
	0x03D78F78 CBZ X0, 0x3D78FF4
	0x03D78F7C MOV X0, X19
	0x03D78F80 BL 0x3D78944
	0x03D78F84 CBZ X0, 0x3D790D8
	0x03D78F88 LDR X21, [X0 + 0x48]
	0x03D78F8C LDR X0, [X26]
	0x03D78F90 BL 0x1C16F10
	0x03D78F94 LDR X2, [X25]
	0x03D78F98 MOV X1, X19
	0x03D78F9C MOV X3, X31
	0x03D78FA0 MOV X22, X0
	0x03D78FA4 BL 0x3314368
	0x03D78FA8 CBZ X21, 0x3D790D8
	0x03D78FAC MOV X0, X21
	0x03D78FB0 MOV X1, X22
	0x03D78FB4 BL 0x3D76274
	0x03D78FB8 MOV X0, X19
	0x03D78FBC BL 0x3D78944
	0x03D78FC0 CBZ X0, 0x3D790D8
	0x03D78FC4 LDR X21, [X0 + 0x48]
	0x03D78FC8 LDR X0, [X24]
	0x03D78FCC BL 0x1C16F10
	0x03D78FD0 LDR X2, [X23]
	0x03D78FD4 MOV X1, X19
	0x03D78FD8 MOV X3, X31
	0x03D78FDC MOV X22, X0
	0x03D78FE0 BL 0x2A76D00
	0x03D78FE4 CBZ X21, 0x3D790D8
	0x03D78FE8 MOV X0, X21
	0x03D78FEC MOV X1, X22
	0x03D78FF0 BL 0x3D763C0
	0x03D78FF4 MOV X0, X19
	0x03D78FF8 MOV X1, X20
	0x03D78FFC MOV X2, X31
	0x03D79000 BL 0x3CFB450
	0x03D79004 MOV X0, X19
	0x03D79008 BL 0x3D78944
	0x03D7900C CBZ X0, 0x3D790C0
	0x03D79010 MOV X0, X19
	0x03D79014 BL 0x3D78944
	0x03D79018 CBZ X0, 0x3D790D8
	0x03D7901C MOV X1, X31
	0x03D79020 BL 0x3CF5950
	0x03D79024 CBZ X0, 0x3D790D8
	0x03D79028 LDRB W1, [X19 + 0x540]
	0x03D7902C MOV X2, X31
	0x03D79030 BL 0x3D5F1D8
	0x03D79034 MOV X0, X19
	0x03D79038 BL 0x3D78944
	0x03D7903C CBZ X0, 0x3D790D8
	0x03D79040 LDR X20, [X0 + 0x48]
	0x03D79044 LDR X0, [X26]
	0x03D79048 BL 0x1C16F10
	0x03D7904C LDR X2, [X25]
	0x03D79050 MOV X1, X19
	0x03D79054 MOV X3, X31
	0x03D79058 MOV X21, X0
	0x03D7905C BL 0x3314368
	0x03D79060 CBZ X20, 0x3D790D8
	0x03D79064 MOV X0, X20
	0x03D79068 MOV X1, X21
	0x03D7906C BL 0x3D761D8
	0x03D79070 MOV X0, X19
	0x03D79074 BL 0x3D78944
	0x03D79078 CBZ X0, 0x3D790D8
	0x03D7907C LDR X20, [X0 + 0x48]
	0x03D79080 LDR X0, [X24]
	0x03D79084 BL 0x1C16F10
	0x03D79088 LDR X2, [X23]
	0x03D7908C MOV X1, X19
	0x03D79090 MOV X3, X31
	0x03D79094 MOV X21, X0
	0x03D79098 BL 0x2A76D00
	0x03D7909C CBZ X20, 0x3D790D8
	0x03D790A0 MOV X0, X20
	0x03D790A4 MOV X1, X21
	0x03D790A8 LDP X20, X19, [X31 + 0x40]
	0x03D790AC LDP X22, X21, [X31 + 0x30]
	0x03D790B0 LDP X24, X23, [X31 + 0x20]
	0x03D790B4 LDP X26, X25, [X31 + 0x10]
	0x03D790B8 LDR X30, [X31], #0x50
	0x03D790BC B 0x3D76310
	0x03D790C0 LDP X20, X19, [X31 + 0x40]
	0x03D790C4 LDP X22, X21, [X31 + 0x30]
	0x03D790C8 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x670000
	011 Move W8, [X21+3432]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x3A5000
	019 Move X0, [X0+288]
	020 Call 0x1C17CF4
	021 Move X0, 0x3A5000
	022 Move X0, [X0+296]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3432], W8
	026 Move X0, [X19+48]
	027 Compare X0, 0
	028 JumpIfEqual {183}
	029 Move X1, X31
	030 Call VisualElement.get_resolvedStyle, X0
	031 Compare X0, 0
	032 JumpIfEqual {183}
	033 Move X22, 0x3A5000
	034 Move X8, [X0]
	035 Move X22, [X22+288]
	036 Move X21, X0
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X22]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move W2, 29
	048 Move X0, X21
	049 Call 0x1C5D788
	050 Move W9, [X10]
	051 Add W9, W9, 29
	052 Add X8, X8, W9
	053 Add X0, X8, 312
	054 Move X8, [X0]
	055 Move X1, [X0+8]
	056 Move X0, X21
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X0, [X19+48]
	059 Compare X0, 0
	060 JumpIfEqual {183}
	061 Move X1, X31
	062 Move V8, V0
	063 Call VisualElement.get_resolvedStyle, X0
	064 Compare X0, 0
	065 JumpIfEqual {183}
	066 Move X8, [X0]
	067 Move X1, [X22]
	068 Move X21, X0
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move W2, 30
	079 Move X0, X21
	080 Call 0x1C5D788
	081 Move W9, [X10]
	082 Add W9, W9, 30
	083 Add X8, X8, W9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X21
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X0, [X19+48]
	090 Compare X0, 0
	091 JumpIfEqual {183}
	092 Move X1, X31
	093 Move V9, V0
	094 Call VisualElement.get_style, X0
	095 Compare X20, 0
	096 JumpIfEqual {183}
	097 Move V0, [X20+156]
	098 Add S8, S8, S9
	099 Move X21, X0
	100 Move X0, X31
	101 Subtract S0, S0, S8
	102 Call StyleLength.op_Implicit, V0
	103 Compare X21, 0
	104 JumpIfEqual {183}
	105 Move X24, 0x3A5000
	106 Move X9, [X21]
	107 Move X24, [X24+296]
	108 Move X8, X1
	109 Move X22, X0
	110 NotImplemented "Instruction LDRH not yet implemented."
	111 Move X1, [X24]
	112 And X23, X8, 0
	113 Compare X10, 0
	114 JumpIfEqual {121}
	115 Move X8, [X9+176]
	116 Add X8, X8, 8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract X10, X10, 1
	120 Add X8, X8, 16
	121 Move W2, 31
	122 Move X0, X21
	123 Call 0x1C5D788
	124 Move W8, [X8]
	125 Add W8, W8, 31
	126 Add X8, X9, W8
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X3, [X0+8]
	130 Move X0, X21
	131 Move X1, X22
	132 Move X2, X23
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move X0, [X19+48]
	135 Compare X0, 0
	136 JumpIfEqual {183}
	137 Move X1, X31
	138 Call VisualElement.get_style, X0
	139 Move V0, [X20+156]
	140 Move X21, X0
	141 Move X0, X31
	142 Subtract S0, S0, S8
	143 Call StyleLength.op_Implicit, V0
	144 Compare X21, 0
	145 JumpIfEqual {183}
	146 Move X8, [X21]
	147 Move X22, X1
	148 Move X1, [X24]
	149 Move X20, X0
	150 NotImplemented "Instruction LDRH not yet implemented."
	151 Compare X9, 0
	152 JumpIfEqual {159}
	153 Move X10, [X8+176]
	154 Add X10, X10, 8
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Subtract X9, X9, 1
	158 Add X10, X10, 16
	159 Move W2, 31
	160 Move X0, X21
	161 Call 0x1C5D788
	162 Move W9, [X10]
	163 Add W9, W9, 31
	164 Add X8, X8, W9
	165 Add X0, X8, 312
	166 Move X8, [X0]
	167 Move X3, [X0+8]
	168 And X2, X22, 0
	169 Move X0, X21
	170 Move X1, X20
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X1, [X19+32]
	173 Move X0, X19
	174 Move X20, [X31+64]
	175 Move X19, [X31+72]
	176 Move X22, [X31+48]
	177 Move X21, [X31+56]
	178 Move X24, [X31+32]
	179 Move X23, [X31+40]
	180 Move X30, [X31+16]
	181 Move D9, [X31+80]
	182 Move D8, [X31+88]
	183 Call 0x1C17F20

Method: System.Void OnColumnContainerGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent evt)

Disassembly:
	0x03D79274 LDP V0, V1, [X31 + 0x20]
	0x03D79278 ADD X2, X31, 0x80

ISIL:
	001 Move X1, [X0+32]
	002 Call MultiColumnController.UpdateContentContainer, X0, X1
	003 Return 

Method: System.Void UpdateContentContainer(UnityEngine.UIElements.BaseVerticalCollectionView collectionView)

Disassembly:
	0x03D790CC LDP X26, X25, [X31 + 0x10]
	0x03D790D0 LDR X30, [X31], #0x50
	0x03D790D4 RET
	0x03D790D8 BL 0x1C16F20
	0x03D790DC STP X30, X21, [X31 - 0x20]!
	0x03D790E0 STP X20, X19, [X31 + 0x10]
	0x03D790E4 ADRP X20, 0x66E000
	0x03D790E8 ADRP X21, 0x3EE000
	0x03D790EC LDRB W8, [X20 + 0xD71]
	0x03D790F0 LDR X21, [X21 + 0x38]
	0x03D790F4 MOV X19, X0
	0x03D790F8 TBNZ X8, 0x0, 0x3D79110
	0x03D790FC ADRP X0, 0x3EE000
	0x03D79100 LDR X0, [X0 + 0x38]
	0x03D79104 BL 0x1C16CF4
	0x03D79108 MOVZ W8, 0x1
	0x03D7910C STRB W8, [X20 + 0xD71]
	0x03D79110 LDR X1, [X21]
	0x03D79114 MOV X0, X19
	0x03D79118 LDP X20, X19, [X31 + 0x10]
	0x03D7911C LDP X30, X21, [X31], #0x20
	0x03D79120 B 0x219FCE8
	0x03D79124 LDR X8, [X0 + 0x560]
	0x03D79128 CBZ X8, 0x3D7913C
	0x03D7912C LDR X4, [X8 + 0x18]
	0x03D79130 LDR X0, [X8 + 0x40]
	0x03D79134 LDR X3, [X8 + 0x28]
	0x03D79138 BR X4
	0x03D7913C RET
	0x03D79140 STP X30, X21, [X31 - 0x20]!
	0x03D79144 STP X20, X19, [X31 + 0x10]
	0x03D79148 ADRP X20, 0x66E000
	0x03D7914C ADRP X21, 0x3EE000
	0x03D79150 LDRB W8, [X20 + 0xD72]
	0x03D79154 LDR X21, [X21 + 0x40]
	0x03D79158 MOV X19, X0
	0x03D7915C TBNZ X8, 0x0, 0x3D79174
	0x03D79160 ADRP X0, 0x3EE000
	0x03D79164 LDR X0, [X0 + 0x40]
	0x03D79168 BL 0x1C16CF4
	0x03D7916C MOVZ W8, 0x1
	0x03D79170 STRB W8, [X20 + 0xD72]
	0x03D79174 LDR X1, [X21]
	0x03D79178 MOV X0, X19
	0x03D7917C LDP X20, X19, [X31 + 0x10]
	0x03D79180 LDP X30, X21, [X31], #0x20
	0x03D79184 B 0x2736468
	0x03D79188 SUB X31, X31, 0xD0
	0x03D7918C STP X30, X23, [X31 + 0xA0]
	0x03D79190 STP X22, X21, [X31 + 0xB0]
	0x03D79194 STP X20, X19, [X31 + 0xC0]
	0x03D79198 ADRP X23, 0x66E000
	0x03D7919C LDRB W8, [X23 + 0xD73]
	0x03D791A0 MOV X21, X3
	0x03D791A4 MOV X20, X2
	0x03D791A8 MOV X19, X1
	0x03D791AC MOV X22, X0
	0x03D791B0 TBNZ X8, 0x0, 0x3D791C8
	0x03D791B4 ADRP X0, 0x3EE000
	0x03D791B8 LDR X0, [X0 + 0x48]
	0x03D791BC BL 0x1C16CF4
	0x03D791C0 MOVZ W8, 0x1
	0x03D791C4 STRB W8, [X23 + 0xD73]
	0x03D791C8 LDP V1, V0, [X21]
	0x03D791CC ADD X3, X31, 0x60
	0x03D791D0 MOV X0, X22
	0x03D791D4 MOV X1, X19
	0x03D791D8 MOV X2, X20
	0x03D791DC MOV X4, X31
	0x03D791E0 STP V1, V0, [X31 + 0x60]
	0x03D791E4 BL 0x3CFC444
	0x03D791E8 CBZ X19, 0x3D79220
	0x03D791EC ADRP X9, 0x3EE000
	0x03D791F0 LDR X9, [X9 + 0x48]
	0x03D791F4 LDR X8, [X19]
	0x03D791F8 LDR X1, [X9]
	0x03D791FC LDRB W10, [X8 + 0x130]
	0x03D79200 LDRB W9, [X1 + 0x130]
	0x03D79204 CMP W10, W9
	0x03D79208 B.CC 0x3D792F0
	0x03D7920C LDR X8, [X8 + 0xC8]
	0x03D79210 ADD X8, X8, X9, 0x3, LSL
	0x03D79214 LDUR X8, [X8 - 0x8]
	0x03D79218 CMP X8, X1
	0x03D7921C B.NE 0x3D792F0
	0x03D79220 LDP V0, V1, [X21]
	0x03D79224 LDR X0, [X22 + 0xD8]
	0x03D79228 STP V0, V1, [X31 + 0x40]
	0x03D7922C CBZ X0, 0x3D792EC
	0x03D79230 LDR X8, [X0]
	0x03D79234 LDP V0, V1, [X31 + 0x40]
	0x03D79238 ADD X2, X31, 0x80
	0x03D7923C MOV X1, X20
	0x03D79240 LDR X9, [X8 + 0x178]
	0x03D79244 STP V0, V1, [X31 + 0x80]
	0x03D79248 LDR X3, [X8 + 0x180]
	0x03D7924C BLR X9
	0x03D79250 CBZ X19, 0x3D792EC
	0x03D79254 AND W1, W0, 0x1
	0x03D79258 MOV X0, X19
	0x03D7925C BL 0x3D78C10
	0x03D79260 LDP V0, V1, [X21]
	0x03D79264 LDR X0, [X22 + 0xE8]
	0x03D79268 STP V0, V1, [X31 + 0x20]
	0x03D7926C CBZ X0, 0x3D792EC
	0x03D79270 LDR X8, [X0]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x66F000
	007 Move W8, [X21+3433]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x3A4000
	015 Move X0, [X0+288]
	016 Call 0x1C17CF4
	017 Move X0, 0x3A4000
	018 Move X0, [X0+296]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3433], W8
	022 Move X8, [X20+48]
	023 Compare X8, 0
	024 JumpIfEqual {120}
	025 Move X0, [X8+1040]
	026 Compare X0, 0
	027 JumpIfEqual {120}
	028 Move X1, X31
	029 Call VisualElement.get_layout, X0
	030 Compare X19, 0
	031 JumpIfEqual {120}
	032 Move X8, [X19+1088]
	033 Compare X8, 0
	034 JumpIfEqual {120}
	035 Move X0, [X8+1048]
	036 Compare X0, 0
	037 JumpIfEqual {120}
	038 Move X1, X31
	039 Move V8, V2
	040 Call VisualElement.get_resolvedStyle, X0
	041 Compare X0, 0
	042 JumpIfEqual {120}
	043 Move X10, 0x3A4000
	044 Move X8, [X0]
	045 Move X10, [X10+288]
	046 Move X20, X0
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move W2, 44
	058 Move X0, X20
	059 Call 0x1C5D788
	060 Move W9, [X10]
	061 Add W9, W9, 44
	062 Add X8, X8, W9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X1, [X0+8]
	066 Move X0, X20
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X0, [X19+1088]
	069 NotImplemented "Instruction FCMP not yet implemented."
	070 NotImplemented "Instruction FCSEL not yet implemented."
	071 Compare X0, 0
	072 JumpIfEqual {120}
	073 Move X8, [X0]
	074 Move X9, [X8+1896]
	075 Move X1, [X8+1904]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Compare X0, 0
	078 JumpIfEqual {120}
	079 Move X1, X31
	080 Call VisualElement.get_style, X0
	081 Move X19, X0
	082 Move V0, V8
	083 Move X0, X31
	084 Call StyleLength.op_Implicit, V0
	085 Compare X19, 0
	086 JumpIfEqual {120}
	087 Move X10, 0x3A4000
	088 Move X8, [X19]
	089 Move X10, [X10+296]
	090 Move X21, X1
	091 Move X20, X0
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Move X1, [X10]
	094 Compare X9, 0
	095 JumpIfEqual {102}
	096 Move X10, [X8+176]
	097 Add X10, X10, 8
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Subtract X9, X9, 1
	101 Add X10, X10, 16
	102 Move W2, 54
	103 Move X0, X19
	104 Call 0x1C5D788
	105 Move W9, [X10]
	106 Add W9, W9, 54
	107 Add X8, X8, W9
	108 Add X0, X8, 312
	109 Move X4, [X0]
	110 Move X3, [X0+8]
	111 And X2, X21, 0
	112 Move X0, X19
	113 Move X1, X20
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X30, [X31+16]
	117 Move X21, [X31+24]
	118 Move V8, [X31+48]
	119 CallNoReturn X4
	120 Call 0x1C17F20

Method: System.Void OnColumnSortingChanged()

Disassembly:
	0x03D7927C MOV X1, X20
	0x03D79280 LDR X9, [X8 + 0x178]
	0x03D79284 STP V0, V1, [X31 + 0x80]
	0x03D79288 LDR X3, [X8 + 0x180]
	0x03D7928C BLR X9
	0x03D79290 MOV X1, X0
	0x03D79294 MOV X0, X19

ISIL:
	001 Move X8, [X0+16]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X2, [X8+24]
	005 Move X0, [X8+64]
	006 Move X1, [X8+40]
	007 CallNoReturn X2
	008 Return 

Method: System.Void OnContextMenuPopulateEvent(UnityEngine.UIElements.ContextualMenuPopulateEvent evt, UnityEngine.UIElements.Column column)

Disassembly:
	0x03D79298 BL 0x3D78A24
	0x03D7929C LDP V0, V1, [X21]
	0x03D792A0 LDR X0, [X22 + 0xE0]
	0x03D792A4 STP V0, V1, [X31]
	0x03D792A8 CBZ X0, 0x3D792EC
	0x03D792AC LDR X8, [X0]
	0x03D792B0 LDP V0, V1, [X31]

ISIL:
	001 Move X8, [X0+24]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X4, [X8+24]
	005 Move X0, [X8+64]
	006 Move X3, [X8+40]
	007 CallNoReturn X4
	008 Return 

Method: System.Void OnColumnResized(System.Int32 index, System.Single width)

Disassembly:
	0x03D792B4 ADD X2, X31, 0x80
	0x03D792B8 MOV X1, X20
	0x03D792BC LDR X9, [X8 + 0x178]
	0x03D792C0 STP V0, V1, [X31 + 0x80]
	0x03D792C4 LDR X3, [X8 + 0x180]
	0x03D792C8 BLR X9
	0x03D792CC MOV X1, X0
	0x03D792D0 MOV X0, X19
	0x03D792D4 BL 0x3D789D0
	0x03D792D8 LDP X20, X19, [X31 + 0xC0]
	0x03D792DC LDP X22, X21, [X31 + 0xB0]
	0x03D792E0 LDP X30, X23, [X31 + 0xA0]
	0x03D792E4 ADD X31, X31, 0xD0
	0x03D792E8 RET
	0x03D792EC BL 0x1C16F20
	0x03D792F0 MOV X0, X19
	0x03D792F4 BL 0x1C171E0
	0x03D792F8 STR X30, [X31 - 0x30]!
	0x03D792FC STP X22, X21, [X31 + 0x10]
	0x03D79300 STP X20, X19, [X31 + 0x20]
	0x03D79304 ADRP X20, 0x66E000
	0x03D79308 ADRP X21, 0x3A4000
	0x03D7930C LDRB W8, [X20 + 0xD74]
	0x03D79310 LDR X21, [X21 + 0x758]
	0x03D79314 MOV X19, X0
	0x03D79318 TBNZ X8, 0x0, 0x3D7936C
	0x03D7931C ADRP X0, 0x3A4000
	0x03D79320 LDR X0, [X0 + 0x758]
	0x03D79324 BL 0x1C16CF4
	0x03D79328 ADRP X0, 0x3EE000
	0x03D7932C LDR X0, [X0 + 0x50]
	0x03D79330 BL 0x1C16CF4
	0x03D79334 ADRP X0, 0x3EE000
	0x03D79338 LDR X0, [X0 + 0x58]
	0x03D7933C BL 0x1C16CF4
	0x03D79340 ADRP X0, 0x3EE000
	0x03D79344 LDR X0, [X0 + 0x60]
	0x03D79348 BL 0x1C16CF4
	0x03D7934C ADRP X0, 0x3EE000
	0x03D79350 LDR X0, [X0 + 0x68]
	0x03D79354 BL 0x1C16CF4
	0x03D79358 ADRP X0, 0x3EE000
	0x03D7935C LDR X0, [X0 + 0x70]
	0x03D79360 BL 0x1C16CF4
	0x03D79364 MOVZ W8, 0x1
	0x03D79368 STRB W8, [X20 + 0xD74]
	0x03D7936C LDR X0, [X21]
	0x03D79370 BL 0x1C16F10
	0x03D79374 MOV X1, X31
	0x03D79378 MOV X20, X0
	0x03D7937C BL 0x3E13BD4
	0x03D79380 CBZ X20, 0x3D79400
	0x03D79384 ADRP X8, 0x3EE000
	0x03D79388 LDR X8, [X8 + 0x70]
	0x03D7938C ADRP X9, 0x3EE000
	0x03D79390 ADRP X21, 0x3EE000
	0x03D79394 ADRP X22, 0x3EE000
	0x03D79398 LDR X8, [X8]
	0x03D7939C LDR X9, [X9 + 0x68]
	0x03D793A0 STR X8, [X20 + 0x10]
	0x03D793A4 STR X20, [X19 + 0xD8]
	0x03D793A8 LDR X0, [X9]
	0x03D793AC ADRP X20, 0x3EE000
	0x03D793B0 LDR X20, [X20 + 0x50]
	0x03D793B4 LDR X21, [X21 + 0x60]
	0x03D793B8 LDR X22, [X22 + 0x58]
	0x03D793BC BL 0x1C16F10
	0x03D793C0 LDR X1, [X20]
	0x03D793C4 MOV X20, X0
	0x03D793C8 BL 0x2736614
	0x03D793CC STR X20, [X19 + 0xE0]
	0x03D793D0 LDR X0, [X21]
	0x03D793D4 BL 0x1C16F10
	0x03D793D8 LDR X1, [X22]
	0x03D793DC MOV X20, X0
	0x03D793E0 BL 0x2736614
	0x03D793E4 STR X20, [X19 + 0xE8]
	0x03D793E8 MOV X0, X19
	0x03D793EC LDP X20, X19, [X31 + 0x20]
	0x03D793F0 LDP X22, X21, [X31 + 0x10]
	0x03D793F4 MOV X1, X31
	0x03D793F8 LDR X30, [X31], #0x30
	0x03D793FC B 0x3CFC8E4
	0x03D79400 BL 0x1C16F20
	0x03D79404 STR X30, [X31 - 0x20]!
	0x03D79408 STP X20, X19, [X31 + 0x10]
	0x03D7940C ADRP X20, 0x66E000
	0x03D79410 LDRB W8, [X20 + 0xD75]
	0x03D79414 MOV X19, X0
	0x03D79418 TBNZ X8, 0x0, 0x3D79430
	0x03D7941C ADRP X0, 0x3EE000
	0x03D79420 LDR X0, [X0 + 0x78]
	0x03D79424 BL 0x1C16CF4
	0x03D79428 MOVZ W8, 0x1
	0x03D7942C STRB W8, [X20 + 0xD75]
	0x03D79430 MOV X0, X19
	0x03D79434 MOV X1, X31
	0x03D79438 BL 0x3CFCE7C
	0x03D7943C CBZ X0, 0x3D7947C
	0x03D79440 ADRP X8, 0x3EE000
	0x03D79444 LDR X8, [X8 + 0x78]
	0x03D79448 LDR X9, [X0]
	0x03D7944C LDR X8, [X8]
	0x03D79450 LDRB W11, [X9 + 0x130]
	0x03D79454 LDRB W10, [X8 + 0x130]
	0x03D79458 CMP W11, W10
	0x03D7945C B.CS 0x3D79468
	0x03D79460 MOV X0, X31
	0x03D79464 B 0x3D7947C
	0x03D79468 LDR X9, [X9 + 0xC8]
	0x03D7946C ADD X9, X9, X10, 0x3, LSL
	0x03D79470 LDUR X9, [X9 - 0x8]
	0x03D79474 CMP X9, X8
	0x03D79478 CSEL X0, X0, X31, EQ
	0x03D7947C LDP X20, X19, [X31 + 0x10]
	0x03D79480 LDR X30, [X31], #0x20
	0x03D79484 RET
	0x03D79488 LDR X0, [X0 + 0x4B8]
	0x03D7948C RET
	0x03D79490 STP X30, X19, [X31 - 0x10]!
	0x03D79494 MOV X19, X0
	0x03D79498 CBZ X1, 0x3D794C0
	0x03D7949C MOV X0, X1
	0x03D794A0 STR X1, [X19 + 0x4B8]
	0x03D794A4 BL 0x3D70A04
	0x03D794A8 CMP W0, 0x1
	0x03D794AC B.LT 0x3D794D0
	0x03D794B0 MOV X0, X19
	0x03D794B4 MOV X1, X31
	0x03D794B8 LDP X30, X19, [X31], #0x10
	0x03D794BC B 0x3CFEA7C
	0x03D794C0 LDR X0, [X19 + 0x4B8]
	0x03D794C4 CBZ X0, 0x3D794D8
	0x03D794C8 LDP X30, X19, [X31], #0x10
	0x03D794CC B 0x3D752D8
	0x03D794D0 LDP X30, X19, [X31], #0x10
	0x03D794D4 RET
	0x03D794D8 BL 0x1C16F20
	0x03D794DC LDR X0, [X0 + 0x4C8]
	0x03D794E0 RET
	0x03D794E4 STR X30, [X31 - 0x20]!
	0x03D794E8 STP X20, X19, [X31 + 0x10]
	0x03D794EC MOV X19, X0
	0x03D794F0 CBZ X1, 0x3D7955C
	0x03D794F4 MOV X0, X19
	0x03D794F8 MOV X20, X1
	0x03D794FC STR X1, [X19 + 0x4C8]
	0x03D79500 BL 0x3D79404
	0x03D79504 CBZ X0, 0x3D79550
	0x03D79508 MOV X0, X19
	0x03D7950C BL 0x3D79404
	0x03D79510 CBZ X0, 0x3D79570
	0x03D79514 LDR X8, [X0 + 0x58]
	0x03D79518 CBZ X8, 0x3D79570
	0x03D7951C LDR X0, [X8 + 0x30]
	0x03D79520 CBZ X0, 0x3D79570
	0x03D79524 MOV X1, X20
	0x03D79528 MOV X2, X31
	0x03D7952C BL 0x3D5EA20
	0x03D79530 LDR X8, [X19 + 0x4D8]
	0x03D79534 CBZ X8, 0x3D79550
	0x03D79538 LDR X2, [X8 + 0x18]
	0x03D7953C LDR X0, [X8 + 0x40]
	0x03D79540 LDR X1, [X8 + 0x28]
	0x03D79544 LDP X20, X19, [X31 + 0x10]
	0x03D79548 LDR X30, [X31], #0x20
	0x03D7954C BR X2
	0x03D79550 LDP X20, X19, [X31 + 0x10]
	0x03D79554 LDR X30, [X31], #0x20
	0x03D79558 RET
	0x03D7955C LDR X0, [X19 + 0x4C8]
	0x03D79560 CBZ X0, 0x3D79570
	0x03D79564 LDP X20, X19, [X31 + 0x10]
	0x03D79568 LDR X30, [X31], #0x20
	0x03D7956C B 0x3D78AB4
	0x03D79570 BL 0x1C16F20
	0x03D79574 LDR X8, [X0 + 0x4D8]
	0x03D79578 CBZ X8, 0x3D7958C
	0x03D7957C LDR X2, [X8 + 0x18]
	0x03D79580 LDR X0, [X8 + 0x40]
	0x03D79584 LDR X1, [X8 + 0x28]
	0x03D79588 BR X2
	0x03D7958C RET
	0x03D79590 STR X30, [X31 - 0x20]!
	0x03D79594 STP X20, X19, [X31 + 0x10]
	0x03D79598 AND W8, W1, 0x1
	0x03D7959C MOV W19, W1
	0x03D795A0 MOV X20, X0
	0x03D795A4 STRB W8, [X0 + 0x4C0]
	0x03D795A8 BL 0x3D79404
	0x03D795AC CBZ X0, 0x3D795E0
	0x03D795B0 MOV X0, X20
	0x03D795B4 BL 0x3D79404
	0x03D795B8 CBZ X0, 0x3D795EC
	0x03D795BC LDR X8, [X0 + 0x58]
	0x03D795C0 CBZ X8, 0x3D795EC
	0x03D795C4 LDR X0, [X8 + 0x30]
	0x03D795C8 CBZ X0, 0x3D795EC
	0x03D795CC AND W1, W19, 0x1
	0x03D795D0 LDP X20, X19, [X31 + 0x10]
	0x03D795D4 MOV X2, X31
	0x03D795D8 LDR X30, [X31], #0x20
	0x03D795DC B 0x3D5F1D8
	0x03D795E0 LDP X20, X19, [X31 + 0x10]
	0x03D795E4 LDR X30, [X31], #0x20
	0x03D795E8 RET
	0x03D795EC BL 0x1C16F20
	0x03D795F0 STP X30, X21, [X31 - 0x20]!
	0x03D795F4 STP X20, X19, [X31 + 0x10]
	0x03D795F8 ADRP X20, 0x66E000
	0x03D795FC ADRP X21, 0x3EE000
	0x03D79600 LDRB W8, [X20 + 0xD76]
	0x03D79604 LDR X21, [X21 + 0x10]
	0x03D79608 MOV X19, X0
	0x03D7960C TBNZ X8, 0x0, 0x3D79624
	0x03D79610 ADRP X0, 0x3EE000
	0x03D79614 LDR X0, [X0 + 0x10]
	0x03D79618 BL 0x1C16CF4
	0x03D7961C MOVZ W8, 0x1
	0x03D79620 STRB W8, [X20 + 0xD76]
	0x03D79624 LDR X0, [X21]
	0x03D79628 BL 0x1C16F10
	0x03D7962C MOV X20, X0
	0x03D79630 BL 0x3D760CC
	0x03D79634 MOV X0, X19
	0x03D79638 MOV X1, X20
	0x03D7963C LDP X20, X19, [X31 + 0x10]
	0x03D79640 LDP X30, X21, [X31], #0x20
	0x03D79644 B 0x3D79648
	0x03D79648 STP X30, X25, [X31 - 0x40]!
	0x03D7964C STP X24, X23, [X31 + 0x10]
	0x03D79650 STP X22, X21, [X31 + 0x20]
	0x03D79654 STP X20, X19, [X31 + 0x30]
	0x03D79658 ADRP X21, 0x66E000
	0x03D7965C ADRP X25, 0x3EE000
	0x03D79660 ADRP X24, 0x3ED000
	0x03D79664 ADRP X23, 0x3ED000
	0x03D79668 ADRP X22, 0x3E9000
	0x03D7966C LDRB W8, [X21 + 0xD77]
	0x03D79670 LDR X25, [X25 + 0x18]
	0x03D79674 LDR X24, [X24 + 0x848]
	0x03D79678 LDR X23, [X23 + 0x850]
	0x03D7967C LDR X22, [X22 + 0xB00]
	0x03D79680 MOV X20, X1
	0x03D79684 MOV X19, X0

ISIL:
	001 Move [X31-96], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x66F000
	013 Move W8, [X21+3434]
	014 Move V8, V0
	015 Move W20, W1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x37B000
	022 Move X0, [X0+3584]
	023 Call 0x1C17CF4
	024 Move X0, 0x3A5000
	025 Move X0, [X0+3872]
	026 Call 0x1C17CF4
	027 Move X0, 0x3A5000
	028 Move X0, [X0+3880]
	029 Call 0x1C17CF4
	030 Move X0, 0x37B000
	031 Move X0, [X0+3608]
	032 Call 0x1C17CF4
	033 Move X0, 0x3A4000
	034 Move X0, [X0+296]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+3434], W8
	038 Move X0, [X19+32]
	039 Compare X0, 0
	040 JumpIfEqual {212}
	041 Move X1, X31
	042 Call BaseVerticalCollectionView.get_activeItems, X0
	043 Compare X0, 0
	044 JumpIfEqual {212}
	045 Move X10, 0x3A5000
	046 Move X8, [X0]
	047 Move X10, [X10+3872]
	048 Move X19, X0
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move X1, [X10]
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move X0, X19
	060 Move W2, W31
	061 Call 0x1C5D788
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Add X8, X8, X9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X1, [X0+8]
	067 Move X24, 0x37B000
	068 Move X24, [X24+3584]
	069 Move X0, X19
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X19, X0
	072 Compare X0, 0
	073 JumpIfEqual {213}
	074 Move X25, 0x37B000
	075 Move X26, 0x3A5000
	076 Move X27, 0x3A4000
	077 Move X25, [X25+3608]
	078 Move X26, [X26+3880]
	079 Move X27, [X27+296]
	080 Move X8, [X19]
	081 Move X1, [X25]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move X0, X19
	092 Move W2, W31
	093 Call 0x1C5D788
	094 NotImplemented "Instruction LDRSW not yet implemented."
	095 Add X8, X8, X9
	096 Add X0, X8, 312
	097 Move X8, [X0]
	098 Move X1, [X0+8]
	099 Move X0, X19
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {170}
	105 Move X8, [X19]
	106 Move X1, [X26]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Compare X9, 0
	109 JumpIfEqual {116}
	110 Move X10, [X8+176]
	111 Add X10, X10, 8
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X9, X9, 1
	115 Add X10, X10, 16
	116 Move X0, X19
	117 Move W2, W31
	118 Call 0x1C5D788
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Add X8, X8, X9
	121 Add X0, X8, 312
	122 Move X8, [X0]
	123 Move X1, [X0+8]
	124 Move X0, X19
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Compare X0, 0
	127 JumpIfEqual {210}
	128 Move X0, [X0+16]
	129 Compare X0, 0
	130 JumpIfEqual {211}
	131 Move W1, W20
	132 Move X2, X31
	133 Call VisualElement.ElementAt, X0, X1
	134 Compare X0, 0
	135 JumpIfEqual {208}
	136 Move X1, X31
	137 Call VisualElement.get_style, X0
	138 Move X21, X0
	139 Move V0, V8
	140 Move X0, X31
	141 Call StyleLength.op_Implicit, V0
	142 Compare X21, 0
	143 JumpIfEqual {209}
	144 Move X8, [X21]
	145 Move X23, X1
	146 Move X1, [X27]
	147 Move X22, X0
	148 NotImplemented "Instruction LDRH not yet implemented."
	149 Compare X9, 0
	150 JumpIfEqual {157}
	151 Move X10, [X8+176]
	152 Add X10, X10, 8
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Subtract X9, X9, 1
	156 Add X10, X10, 16
	157 Move W2, 54
	158 Move X0, X21
	159 Call 0x1C5D788
	160 Move W9, [X10]
	161 Add W9, W9, 54
	162 Add X8, X8, W9
	163 Add X0, X8, 312
	164 Move X8, [X0]
	165 Move X3, [X0+8]
	166 And X2, X23, 0
	167 Move X0, X21
	168 Move X1, X22
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Move X20, X31
	171 Compare X19, 0
	172 JumpIfEqual {194}
	173 Move X8, [X19]
	174 Move X1, [X24]
	175 NotImplemented "Instruction LDRH not yet implemented."
	176 Compare X9, 0
	177 JumpIfEqual {184}
	178 Move X10, [X8+176]
	179 Add X10, X10, 8
	180 NotImplemented "Instruction LDUR not yet implemented."
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Subtract X9, X9, 1
	183 Add X10, X10, 16
	184 Move X0, X19
	185 Move W2, W31
	186 Call 0x1C5D788
	187 NotImplemented "Instruction LDRSW not yet implemented."
	188 Add X8, X8, X9
	189 Add X0, X8, 312
	190 Move X8, [X0]
	191 Move X1, [X0+8]
	192 Move X0, X19
	193 NotImplemented "Instruction BLR not yet implemented."
	194 Compare X20, 0
	195 JumpIfNotEqual {214}
	196 Move X20, [X31+80]
	197 Move X19, [X31+88]
	198 Move X22, [X31+64]
	199 Move X21, [X31+72]
	200 Move X24, [X31+48]
	201 Move X23, [X31+56]
	202 Move X26, [X31+32]
	203 Move X25, [X31+40]
	204 Move X30, [X31+16]
	205 Move X27, [X31+24]
	206 Move V8, [X31+96]
	207 Return 
	208 Call 0x1C17F20
	209 Call 0x1C17F20
	210 Call 0x1C17F20
	211 Call 0x1C17F20
	212 Call 0x1C17F20
	213 Call 0x1C17F20
	214 Move X0, X20
	215 Call 0x1C17F18
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Call 0x3EB2AD0
	218 Move X20, [X0]
	219 Call 0x3EB2AE0
	220 Move [X31+8], X0
	221 Move X20, X31
	222 Move [X31+8], X0
	223 Compare X19, 0
	224 JumpIfEqual {246}
	225 Move X8, [X19]
	226 Move X1, [X24]
	227 NotImplemented "Instruction LDRH not yet implemented."
	228 Compare X9, 0
	229 JumpIfEqual {236}
	230 Move X10, [X8+176]
	231 Add X10, X10, 8
	232 NotImplemented "Instruction LDUR not yet implemented."
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Subtract X9, X9, 1
	235 Add X10, X10, 16
	236 Move X0, X19
	237 Move W2, W31
	238 Call 0x1C5D788
	239 NotImplemented "Instruction LDRSW not yet implemented."
	240 Add X8, X8, X9
	241 Add X0, X8, 312
	242 Move X8, [X0]
	243 Move X1, [X0+8]
	244 Move X0, X19
	245 NotImplemented "Instruction BLR not yet implemented."
	246 Compare X20, 0
	247 JumpIfNotEqual {250}
	248 Move X0, [X31+8]
	249 Call 0x1D2D690
	250 Move X0, X20
	251 Call 0x1C17F18
	252 Call 0x1991590

Method: System.Void OnColumnAdded(UnityEngine.UIElements.Column column, System.Int32 index)

Disassembly:
	0x03D79688 TBNZ X8, 0x0, 0x3D796DC
	0x03D7968C ADRP X0, 0x3E9000
	0x03D79690 LDR X0, [X0 + 0xB00]
	0x03D79694 BL 0x1C16CF4
	0x03D79698 ADRP X0, 0x3EE000
	0x03D7969C LDR X0, [X0 + 0x10]
	0x03D796A0 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call BaseVerticalCollectionView.Rebuild, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Void OnColumnRemoved(UnityEngine.UIElements.Column column)

Disassembly:
	0x03D796A4 ADRP X0, 0x3ED000
	0x03D796A8 LDR X0, [X0 + 0x850]
	0x03D796AC BL 0x1C16CF4
	0x03D796B0 ADRP X0, 0x3ED000
	0x03D796B4 LDR X0, [X0 + 0x848]
	0x03D796B8 BL 0x1C16CF4
	0x03D796BC ADRP X0, 0x3EE000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call BaseVerticalCollectionView.Rebuild, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Void OnColumnReordered(UnityEngine.UIElements.Column column, System.Int32 from, System.Int32 to)

Disassembly:
	0x03D796C0 LDR X0, [X0 + 0x18]
	0x03D796C4 BL 0x1C16CF4
	0x03D796C8 ADRP X0, 0x3EE000
	0x03D796CC LDR X0, [X0 + 0x20]
	0x03D796D0 BL 0x1C16CF4
	0x03D796D4 MOVZ W8, 0x1
	0x03D796D8 STRB W8, [X21 + 0xD77]
	0x03D796DC LDR X0, [X25]
	0x03D796E0 BL 0x1C16F10
	0x03D796E4 MOV X21, X0
	0x03D796E8 BL 0x3D78DFC
	0x03D796EC STR X21, [X19 + 0x4C8]
	0x03D796F0 LDR X0, [X24]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+48]
	003 Compare X8, 0
	004 JumpIfEqual {17}
	005 Move W8, [X8+1016]
	006 Compare W8, 0
	007 JumpIfEqual {10}
	008 Move X30, [X31+16]
	009 Return 
	010 Move X0, [X0+32]
	011 Compare X0, 0
	012 JumpIfEqual {17}
	013 Move X1, X31
	014 Move X30, [X31+16]
	015 Call BaseVerticalCollectionView.Rebuild, X0
	016 Return 
	017 Call 0x1C17F20

Method: System.Void OnColumnsChanged(UnityEngine.UIElements.Column column, UnityEngine.UIElements.ColumnDataType type)

Disassembly:
	0x03D796F4 BL 0x1C16F10
	0x03D796F8 LDR X1, [X23]
	0x03D796FC MOV X21, X0
	0x03D79700 BL 0x301B7C4
	0x03D79704 STR X21, [X19 + 0x4D0]
	0x03D79708 LDR X0, [X22]
	0x03D7970C LDR W8, [X0 + 0xE0]
	0x03D79710 CBNZ W8, 0x3D79718
	0x03D79714 BL 0x1C16DFC
	0x03D79718 MOV X0, X19
	0x03D7971C MOV X1, X31
	0x03D79720 BL 0x3CFD318
	0x03D79724 LDR X0, [X19 + 0x440]
	0x03D79728 CBZ X0, 0x3D79778
	0x03D7972C ADRP X8, 0x3EE000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+48]
	003 Compare X8, 0
	004 JumpIfEqual {18}
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W8, [X8+1016]
	007 Compare W8, 0
	008 JumpIfNotEqual {16}
	009 Move X0, [X0+32]
	010 Compare X0, 0
	011 JumpIfEqual {18}
	012 Move X1, X31
	013 Move X30, [X31+16]
	014 Call BaseVerticalCollectionView.Rebuild, X0
	015 Return 
	016 Move X30, [X31+16]
	017 Return 
	018 Call 0x1C17F20

Method: System.Void OnColumnChanged(UnityEngine.UIElements.ColumnsDataType type)

Disassembly:
	0x03D79730 LDR X8, [X8 + 0x20]
	0x03D79734 MOV X2, X31
	0x03D79738 LDR X1, [X8]
	0x03D7973C BL 0x3DEB98C
	0x03D79740 CBNZ X20, 0x3D7975C
	0x03D79744 ADRP X8, 0x3EE000
	0x03D79748 LDR X8, [X8 + 0x10]
	0x03D7974C LDR X0, [X8]
	0x03D79750 BL 0x1C16F10
	0x03D79754 MOV X20, X0
	0x03D79758 BL 0x3D760CC
	0x03D7975C MOV X0, X19
	0x03D79760 MOV X1, X20
	0x03D79764 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+48]
	003 Compare X8, 0
	004 JumpIfEqual {19}
	005 Compare W1, 0
	006 JumpIfNotEqual {17}
	007 Move W8, [X8+1016]
	008 Compare W8, 0
	009 JumpIfNotEqual {17}
	010 Move X0, [X0+32]
	011 Compare X0, 0
	012 JumpIfEqual {19}
	013 Move X1, X31
	014 Move X30, [X31+16]
	015 Call BaseVerticalCollectionView.Rebuild, X0
	016 Return 
	017 Move X30, [X31+16]
	018 Return 
	019 Call 0x1C17F20

Method: System.Void OnViewDataRestored()

Disassembly:
	0x03D79768 LDP X22, X21, [X31 + 0x20]
	0x03D7976C LDP X24, X23, [X31 + 0x10]
	0x03D79770 LDP X30, X25, [X31], #0x40
	0x03D79774 B 0x3D79490
	0x03D79778 BL 0x1C16F20
	0x03D7977C STP X30, X23, [X31 - 0x30]!
	0x03D79780 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call BaseVerticalCollectionView.Rebuild, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D79784 STP X20, X19, [X31 + 0x20]
	0x03D79788 ADRP X20, 0x66E000
	0x03D7978C ADRP X23, 0x3EE000
	0x03D79790 ADRP X22, 0x3EE000
	0x03D79794 LDRB W8, [X20 + 0xD78]
	0x03D79798 LDR X23, [X23 + 0x80]
	0x03D7979C LDR X22, [X22 + 0x88]
	0x03D797A0 MOV X19, X0
	0x03D797A4 TBNZ X8, 0x0, 0x3D797C8
	0x03D797A8 ADRP X0, 0x3EE000
	0x03D797AC LDR X0, [X0 + 0x88]
	0x03D797B0 BL 0x1C16CF4
	0x03D797B4 ADRP X0, 0x3EE000
	0x03D797B8 LDR X0, [X0 + 0x80]
	0x03D797BC BL 0x1C16CF4
	0x03D797C0 MOVZ W8, 0x1
	0x03D797C4 STRB W8, [X20 + 0xD78]
	0x03D797C8 LDR X0, [X23]
	0x03D797CC LDR X20, [X19 + 0x4B8]
	0x03D797D0 LDR X21, [X19 + 0x4C8]
	0x03D797D4 LDR X19, [X19 + 0x4D0]
	0x03D797D8 BL 0x1C16F10
	0x03D797DC LDR X4, [X22]
	0x03D797E0 MOV X1, X20
	0x03D797E4 MOV X2, X21
	0x03D797E8 MOV X3, X19
	0x03D797EC MOV X22, X0
	0x03D797F0 BL 0x29B2D88
	0x03D797F4 MOV X0, X22
	0x03D797F8 LDP X20, X19, [X31 + 0x20]
	0x03D797FC LDP X22, X21, [X31 + 0x10]
	0x03D79800 LDP X30, X23, [X31], #0x30
	0x03D79804 RET
	0x03D79808 STR X30, [X31 - 0x50]!
	0x03D7980C STP X26, X25, [X31 + 0x10]
	0x03D79810 STP X24, X23, [X31 + 0x20]
	0x03D79814 STP X22, X21, [X31 + 0x30]
	0x03D79818 STP X20, X19, [X31 + 0x40]
	0x03D7981C ADRP X21, 0x66E000
	0x03D79820 LDRB W8, [X21 + 0xD79]
	0x03D79824 MOV X20, X1
	0x03D79828 MOV X19, X0
	0x03D7982C TBNZ X8, 0x0, 0x3D79868
	0x03D79830 ADRP X0, 0x3ED000
	0x03D79834 LDR X0, [X0 + 0x620]
	0x03D79838 BL 0x1C16CF4
	0x03D7983C ADRP X0, 0x37B000
	0x03D79840 LDR X0, [X0 + 0xE70]
	0x03D79844 BL 0x1C16CF4
	0x03D79848 ADRP X0, 0x3EE000
	0x03D7984C LDR X0, [X0 + 0x90]
	0x03D79850 BL 0x1C16CF4
	0x03D79854 ADRP X0, 0x3EE000
	0x03D79858 LDR X0, [X0 + 0x98]
	0x03D7985C BL 0x1C16CF4
	0x03D79860 MOVZ W8, 0x1
	0x03D79864 STRB W8, [X21 + 0xD79]
	0x03D79868 ADRP X26, 0x37B000
	0x03D7986C ADRP X25, 0x3EE000
	0x03D79870 ADRP X24, 0x3ED000
	0x03D79874 ADRP X23, 0x3EE000
	0x03D79878 LDR X26, [X26 + 0xE70]
	0x03D7987C LDR X25, [X25 + 0x90]
	0x03D79880 LDR X24, [X24 + 0x620]
	0x03D79884 LDR X23, [X23 + 0x98]
	0x03D79888 MOV X0, X19
	0x03D7988C BL 0x3D79404
	0x03D79890 CBZ X0, 0x3D7990C
	0x03D79894 MOV X0, X19
	0x03D79898 BL 0x3D79404
	0x03D7989C CBZ X0, 0x3D799F0
	0x03D798A0 LDR X21, [X0 + 0x58]
	0x03D798A4 LDR X0, [X26]
	0x03D798A8 BL 0x1C16F10
	0x03D798AC LDR X2, [X25]
	0x03D798B0 MOV X1, X19
	0x03D798B4 MOV X3, X31
	0x03D798B8 MOV X22, X0
	0x03D798BC BL 0x3314368
	0x03D798C0 CBZ X21, 0x3D799F0
	0x03D798C4 MOV X0, X21
	0x03D798C8 MOV X1, X22
	0x03D798CC BL 0x3D76274
	0x03D798D0 MOV X0, X19
	0x03D798D4 BL 0x3D79404
	0x03D798D8 CBZ X0, 0x3D799F0
	0x03D798DC LDR X21, [X0 + 0x58]
	0x03D798E0 LDR X0, [X24]
	0x03D798E4 BL 0x1C16F10
	0x03D798E8 LDR X2, [X23]
	0x03D798EC MOV X1, X19
	0x03D798F0 MOV X3, X31
	0x03D798F4 MOV X22, X0
	0x03D798F8 BL 0x2A76D00
	0x03D798FC CBZ X21, 0x3D799F0
	0x03D79900 MOV X0, X21
	0x03D79904 MOV X1, X22
	0x03D79908 BL 0x3D763C0
	0x03D7990C MOV X0, X19
	0x03D79910 MOV X1, X20
	0x03D79914 MOV X2, X31
	0x03D79918 BL 0x3CFCF40
	0x03D7991C MOV X0, X19
	0x03D79920 BL 0x3D79404
	0x03D79924 CBZ X0, 0x3D799D8
	0x03D79928 MOV X0, X19
	0x03D7992C BL 0x3D79404
	0x03D79930 CBZ X0, 0x3D799F0
	0x03D79934 MOV X1, X31
	0x03D79938 BL 0x3CF62FC
	0x03D7993C CBZ X0, 0x3D799F0
	0x03D79940 LDRB W1, [X19 + 0x4C0]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X28, 0x66F000
	014 Move X29, 0x3EE000
	015 Move X19, 0x3A4000
	016 Move X27, 0x3EE000
	017 Move X26, 0x3EE000
	018 Move X25, 0x3EE000
	019 Move X24, 0x3EE000
	020 Move X23, 0x3EE000
	021 Move X22, 0x3EE000
	022 Move X21, 0x3A4000
	023 Move X20, 0x3EE000
	024 Move X29, [X29+4024]
	025 Move X19, [X19+256]
	026 Move X27, [X27+4032]
	027 Move X26, [X26+4040]
	028 Move X25, [X25+4048]
	029 Move W8, [X28+3435]
	030 Move X24, [X24+4056]
	031 Move X23, [X23+4064]
	032 Move X22, [X22+4072]
	033 Move X21, [X21+3768]
	034 Move X20, [X20+4080]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {71}
	039 Move X0, 0x3A4000
	040 Move X0, [X0+256]
	041 Call 0x1C17CF4
	042 Move X0, 0x3EE000
	043 Move X0, [X0+4040]
	044 Call 0x1C17CF4
	045 Move X0, 0x3EE000
	046 Move X0, [X0+4064]
	047 Call 0x1C17CF4
	048 Move X0, 0x3EE000
	049 Move X0, [X0+4056]
	050 Call 0x1C17CF4
	051 Move X0, 0x3EE000
	052 Move X0, [X0+4072]
	053 Call 0x1C17CF4
	054 Move X0, 0x3EE000
	055 Move X0, [X0+4048]
	056 Call 0x1C17CF4
	057 Move X0, 0x3EE000
	058 Move X0, [X0+4024]
	059 Call 0x1C17CF4
	060 Move X0, 0x3EE000
	061 Move X0, [X0+4032]
	062 Call 0x1C17CF4
	063 Move X0, 0x3A4000
	064 Move X0, [X0+3768]
	065 Call 0x1C17CF4
	066 Move X0, 0x3EE000
	067 Move X0, [X0+4080]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X28+3435], W8
	071 Move X0, [X29]
	072 Move X1, X31
	073 Call PropertyName.op_Implicit, X0
	074 Move X8, [X19]
	075 Move X1, X31
	076 Move X8, [X8+184]
	077 Move [X8], W0
	078 Move X0, [X27]
	079 Call PropertyName.op_Implicit, X0
	080 Move X8, [X19]
	081 Move X2, X31
	082 Move X8, [X8+184]
	083 Move [X8+4], W0
	084 Move X8, [X19]
	085 Move X0, [X26]
	086 Move X9, [X25]
	087 Move X8, [X8+184]
	088 Move [X8+8], X0
	089 Move [X8+16], X9
	090 Move X1, [X24]
	091 Call String.Concat, X0, X1
	092 Move X8, [X19]
	093 Move X2, X31
	094 Move X8, [X8+184]
	095 Move [X8+24], X0
	096 Move X0, [X8+8]
	097 Move X1, [X23]
	098 Call String.Concat, X0, X1
	099 Move X8, [X19]
	100 Move X2, X31
	101 Move X8, [X8+184]
	102 Move [X8+32], X0
	103 Move X0, [X8+8]
	104 Move X1, [X22]
	105 Call String.Concat, X0, X1
	106 Move X8, [X19]
	107 Move X2, X31
	108 Move X8, [X8+184]
	109 Move [X8+40], X0
	110 Move X1, [X21]
	111 Call String.Concat, X0, X1
	112 Move X8, [X19]
	113 Move X9, [X20]
	114 Move X20, [X31+80]
	115 Move X19, [X31+88]
	116 Move X22, [X31+64]
	117 Move X21, [X31+72]
	118 Move X8, [X8+184]
	119 Move X24, [X31+48]
	120 Move X23, [X31+56]
	121 Move X26, [X31+32]
	122 Move X25, [X31+40]
	123 Move X28, [X31+16]
	124 Move X27, [X31+24]
	125 Move [X8+48], X0
	126 Move [X8+56], X9
	127 Move X29, [X31+96]
	128 Move X30, [X31+104]
	129 Return 

