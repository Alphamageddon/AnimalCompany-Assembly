Type: UnityEngine.Yoga.Native

Method: System.IntPtr YGNodeNewWithConfig(System.IntPtr config)

Disassembly:
	0x03CE6328 MOV X0, X20
	0x03CE632C MOV W1, W19
	0x03CE6330 LDP X20, X19, [X31 + 0x20]
	0x03CE6334 LDP X30, X21, [X31 + 0x10]
	0x03CE6338 MOV V0.16B, V8.16B
	0x03CE633C LDR V8, [X31], #0x30
	0x03CE6340 BR X2
	0x03CE6344 STR D8, [X31 - 0x30]!
	0x03CE6348 STP X30, X21, [X31 + 0x10]
	0x03CE634C STP X20, X19, [X31 + 0x20]
	0x03CE6350 ADRP X21, 0x701000
	0x03CE6354 LDR X2, [X21 + 0x6B8]
	0x03CE6358 MOV V8.16B, V0.16B
	0x03CE635C MOV W19, W1
	0x03CE6360 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x702000
	005 Move X1, [X20+1272]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52248576
	010 Add X0, X0, 1999
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1272], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void YGNodeFree(System.IntPtr ygNode)

Disassembly:
	0x03CE6364 CBNZ X2, 0x3CE637C
	0x03CE6368 ADRP X0, 0xFFFFFFFFFCE25000
	0x03CE636C ADD X0, X0, 0xB1B
	0x03CE6370 BL 0x1C16CB8
	0x03CE6374 MOV X2, X0
	0x03CE6378 STR X0, [X21 + 0x6B8]
	0x03CE637C MOV X0, X20
	0x03CE6380 MOV W1, W19
	0x03CE6384 LDP X20, X19, [X31 + 0x20]
	0x03CE6388 LDP X30, X21, [X31 + 0x10]
	0x03CE638C MOV V0.16B, V8.16B
	0x03CE6390 LDR V8, [X31], #0x30
	0x03CE6394 BR X2
	0x03CE6398 STR D8, [X31 - 0x30]!
	0x03CE639C STP X30, X21, [X31 + 0x10]
	0x03CE63A0 STP X20, X19, [X31 + 0x20]
	0x03CE63A4 ADRP X21, 0x701000
	0x03CE63A8 LDR X2, [X21 + 0x6C0]
	0x03CE63AC MOV V8.16B, V0.16B
	0x03CE63B0 MOV W19, W1
	0x03CE63B4 MOV X20, X0
	0x03CE63B8 CBNZ X2, 0x3CE63D0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X2, X31
	006 Move X19, X0
	007 Call IntPtr.op_Equality, X0, X1
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {16}
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 
	016 Move X20, 0x702000
	017 Move X1, [X20+1280]
	018 Compare X1, 0
	019 JumpIfNotEqual {25}
	020 Move X0, -52158464
	021 Add X0, X0, 1119
	022 Call 0x1C17CB8
	023 Move X1, X0
	024 Move [X20+1280], X0
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 CallNoReturn X1

Method: System.Void YGNodeFreeInternal(System.IntPtr ygNode)

Disassembly:
	0x03CE63BC ADRP X0, 0xFFFFFFFFFCE09000
	0x03CE63C0 ADD X0, X0, 0x93B
	0x03CE63C4 BL 0x1C16CB8
	0x03CE63C8 MOV X2, X0
	0x03CE63CC STR X0, [X21 + 0x6C0]
	0x03CE63D0 MOV X0, X20
	0x03CE63D4 MOV W1, W19
	0x03CE63D8 LDP X20, X19, [X31 + 0x20]
	0x03CE63DC LDP X30, X21, [X31 + 0x10]
	0x03CE63E0 MOV V0.16B, V8.16B
	0x03CE63E4 LDR V8, [X31], #0x30
	0x03CE63E8 BR X2
	0x03CE63EC STR X30, [X31 - 0x20]!
	0x03CE63F0 STP X20, X19, [X31 + 0x10]
	0x03CE63F4 ADRP X20, 0x701000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x702000
	005 Move X1, [X20+1280]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52158464
	010 Add X0, X0, 1119
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1280], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void YGSetManagedObject(System.IntPtr ygNode, UnityEngine.Yoga.YogaNode node)

Disassembly:
	0x03CE63F8 LDR X1, [X20 + 0x6C8]
	0x03CE63FC MOV X19, X0
	0x03CE6400 CBNZ X1, 0x3CE6418
	0x03CE6404 ADRP X0, 0xFFFFFFFFFCE15000
	0x03CE6408 ADD X0, X0, 0xC33
	0x03CE640C BL 0x1C16CB8
	0x03CE6410 MOV X1, X0
	0x03CE6414 STR X0, [X20 + 0x6C8]
	0x03CE6418 MOV X0, X19
	0x03CE641C LDP X20, X19, [X31 + 0x10]
	0x03CE6420 LDR X30, [X31], #0x20
	0x03CE6424 BR X1
	0x03CE6428 STR X30, [X31 - 0x20]!
	0x03CE642C STP X20, X19, [X31 + 0x10]
	0x03CE6430 ADRP X20, 0x701000
	0x03CE6434 LDR X1, [X20 + 0x6D0]
	0x03CE6438 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x702000
	006 Move X2, [X21+1288]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52281344
	012 Add X0, X0, 3464
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1288], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void YGNodeSetConfig(System.IntPtr ygNode, System.IntPtr config)

Disassembly:
	0x03CE643C CBNZ X1, 0x3CE6454
	0x03CE6440 ADRP X0, 0xFFFFFFFFFCE09000
	0x03CE6444 ADD X0, X0, 0x9A0
	0x03CE6448 BL 0x1C16CB8
	0x03CE644C MOV X1, X0
	0x03CE6450 STR X0, [X20 + 0x6D0]
	0x03CE6454 MOV X0, X19
	0x03CE6458 LDP X20, X19, [X31 + 0x10]
	0x03CE645C LDR X30, [X31], #0x20
	0x03CE6460 BR X1
	0x03CE6464 STR X30, [X31 - 0x20]!
	0x03CE6468 STP X20, X19, [X31 + 0x10]
	0x03CE646C ADRP X20, 0x701000
	0x03CE6470 LDR X1, [X20 + 0x6D8]
	0x03CE6474 MOV X19, X0
	0x03CE6478 CBNZ X1, 0x3CE6490
	0x03CE647C ADRP X0, 0xFFFFFFFFFCE45000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x702000
	006 Move X2, [X21+1296]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52379648
	012 Add X0, X0, 2505
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1296], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.IntPtr YGConfigGetDefault()

Disassembly:
	0x03CE62E8 LDP X30, X21, [X31], #0x20
	0x03CE62EC BR X2
	0x03CE62F0 STR D8, [X31 - 0x30]!
	0x03CE62F4 STP X30, X21, [X31 + 0x10]
	0x03CE62F8 STP X20, X19, [X31 + 0x20]
	0x03CE62FC ADRP X21, 0x701000
	0x03CE6300 LDR X2, [X21 + 0x6B0]
	0x03CE6304 MOV V8.16B, V0.16B
	0x03CE6308 MOV W19, W1
	0x03CE630C MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x702000
	004 Move X0, [X19+1304]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -52174848
	008 Add X0, X0, 2630
	009 Call 0x1C17CB8
	010 Move [X19+1304], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.IntPtr YGConfigNew()

Disassembly:
	0x03CE5F38 LDR X30, [X31 + 0x8]
	0x03CE5F3C MOV V0.16B, V8.16B
	0x03CE5F40 LDR V8, [X31], #0x20
	0x03CE5F44 BR X1
	0x03CE5F48 STR D8, [X31 - 0x20]!
	0x03CE5F4C STR X30, [X31 + 0x8]
	0x03CE5F50 STP X20, X19, [X31 + 0x10]
	0x03CE5F54 ADRP X20, 0x702000
	0x03CE5F58 LDR X1, [X20 + 0x650]
	0x03CE5F5C MOV V8.16B, V0.16B

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x703000
	004 Move X0, [X19+1312]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -52285440
	008 Add X0, X0, 2827
	009 Call 0x1C17CB8
	010 Move [X19+1312], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void YGConfigFree(System.IntPtr config)

Disassembly:
	0x03CE6070 LDR V8, [X31], #0x20
	0x03CE6074 BR X1
	0x03CE6078 STR D8, [X31 - 0x20]!
	0x03CE607C STR X30, [X31 + 0x8]
	0x03CE6080 STP X20, X19, [X31 + 0x10]
	0x03CE6084 ADRP X20, 0x701000
	0x03CE6088 LDR X1, [X20 + 0x670]
	0x03CE608C MOV V8.16B, V0.16B
	0x03CE6090 MOV X19, X0
	0x03CE6094 CBNZ X1, 0x3CE60AC
	0x03CE6098 ADRP X0, 0xFFFFFFFFFCE19000
	0x03CE609C ADD X0, X0, 0x9AB
	0x03CE60A0 BL 0x1C16CB8
	0x03CE60A4 MOV X1, X0
	0x03CE60A8 STR X0, [X20 + 0x670]
	0x03CE60AC MOV X0, X19
	0x03CE60B0 LDP X20, X19, [X31 + 0x10]
	0x03CE60B4 LDR X30, [X31 + 0x8]
	0x03CE60B8 MOV V0.16B, V8.16B
	0x03CE60BC LDR V8, [X31], #0x20
	0x03CE60C0 BR X1
	0x03CE60C4 STR D8, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X2, X31
	006 Move X19, X0
	007 Call IntPtr.op_Equality, X0, X1
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {16}
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 
	016 Move X20, 0x702000
	017 Move X1, [X20+1320]
	018 Compare X1, 0
	019 JumpIfNotEqual {25}
	020 Move X0, -52207616
	021 Add X0, X0, 1798
	022 Call 0x1C17CB8
	023 Move X1, X0
	024 Move [X20+1320], X0
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 CallNoReturn X1

Method: System.Void YGConfigFreeInternal(System.IntPtr config)

Disassembly:
	0x03CE6480 ADD X0, X0, 0x2DF
	0x03CE6484 BL 0x1C16CB8
	0x03CE6488 MOV X1, X0
	0x03CE648C STR X0, [X20 + 0x6D8]
	0x03CE6490 MOV X0, X19
	0x03CE6494 LDP X20, X19, [X31 + 0x10]
	0x03CE6498 LDR X30, [X31], #0x20
	0x03CE649C BR X1
	0x03CE64A0 STR X30, [X31 - 0x20]!
	0x03CE64A4 STP X20, X19, [X31 + 0x10]
	0x03CE64A8 ADRP X20, 0x701000
	0x03CE64AC LDR X1, [X20 + 0x6E0]
	0x03CE64B0 MOV X19, X0
	0x03CE64B4 CBNZ X1, 0x3CE64CC
	0x03CE64B8 ADRP X0, 0xFFFFFFFFFCE11000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x702000
	005 Move X1, [X20+1320]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52207616
	010 Add X0, X0, 1798
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1320], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void YGConfigSetUseWebDefaults(System.IntPtr config, System.Boolean useWebDefaults)

Disassembly:
	0x03CE6184 ADD X0, X0, 0xA0F
	0x03CE6188 BL 0x1C16CB8
	0x03CE618C MOV X2, X0
	0x03CE6190 STR X0, [X21 + 0x688]
	0x03CE6194 MOV X0, X20
	0x03CE6198 MOV W1, W19
	0x03CE619C LDP X20, X19, [X31 + 0x20]
	0x03CE61A0 LDP X30, X21, [X31 + 0x10]
	0x03CE61A4 MOV V0.16B, V8.16B
	0x03CE61A8 LDR V8, [X31], #0x30
	0x03CE61AC BR X2
	0x03CE61B0 STR D8, [X31 - 0x30]!
	0x03CE61B4 STP X30, X21, [X31 + 0x10]
	0x03CE61B8 STP X20, X19, [X31 + 0x20]
	0x03CE61BC ADRP X21, 0x701000
	0x03CE61C0 LDR X2, [X21 + 0x690]
	0x03CE61C4 MOV V8.16B, V0.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x702000
	006 Move X2, [X21+1328]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52191232
	012 Add X0, X0, 1993
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1328], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean YGConfigGetUseWebDefaults(System.IntPtr config)

Disassembly:
	0x03CE6104 MOV V0.16B, V8.16B
	0x03CE6108 LDR V8, [X31], #0x20
	0x03CE610C BR X1
	0x03CE6110 STR D8, [X31 - 0x20]!
	0x03CE6114 STR X30, [X31 + 0x8]
	0x03CE6118 STP X20, X19, [X31 + 0x10]
	0x03CE611C ADRP X20, 0x701000
	0x03CE6120 LDR X1, [X20 + 0x680]
	0x03CE6124 MOV V8.16B, V0.16B
	0x03CE6128 MOV X19, X0
	0x03CE612C CBNZ X1, 0x3CE6144
	0x03CE6130 ADRP X0, 0xFFFFFFFFFCE25000
	0x03CE6134 ADD X0, X0, 0xAC6
	0x03CE6138 BL 0x1C16CB8
	0x03CE613C MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x702000
	005 Move X1, [X20+1336]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52256768
	010 Add X0, X0, 3347
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1336], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void YGConfigSetPointScaleFactor(System.IntPtr config, System.Single pixelsInPoint)

Disassembly:
	0x03CE6214 LDR X2, [X21 + 0x698]
	0x03CE6218 MOV V8.16B, V0.16B
	0x03CE621C MOV W19, W1
	0x03CE6220 MOV X20, X0
	0x03CE6224 CBNZ X2, 0x3CE623C
	0x03CE6228 ADRP X0, 0xFFFFFFFFFCE41000
	0x03CE622C ADD X0, X0, 0x49A
	0x03CE6230 BL 0x1C16CB8
	0x03CE6234 MOV X2, X0
	0x03CE6238 STR X0, [X21 + 0x698]
	0x03CE623C MOV X0, X20
	0x03CE6240 MOV W1, W19
	0x03CE6244 LDP X20, X19, [X31 + 0x20]
	0x03CE6248 LDP X30, X21, [X31 + 0x10]
	0x03CE624C MOV V0.16B, V8.16B
	0x03CE6250 LDR V8, [X31], #0x30
	0x03CE6254 BR X2
	0x03CE6258 STR D8, [X31 - 0x30]!
	0x03CE625C STP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x702000
	006 Move X1, [X20+1344]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52137984
	012 Add X0, X0, 3821
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1344], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void YGNodeInsertChild(System.IntPtr node, System.IntPtr child, System.UInt32 index)

Disassembly:
	0x03CE64BC ADD X0, X0, 0xCED
	0x03CE64C0 BL 0x1C16CB8
	0x03CE64C4 MOV X1, X0
	0x03CE64C8 STR X0, [X20 + 0x6E0]
	0x03CE64CC MOV X0, X19
	0x03CE64D0 LDP X20, X19, [X31 + 0x10]
	0x03CE64D4 LDR X30, [X31], #0x20
	0x03CE64D8 BR X1
	0x03CE64DC STR X30, [X31 - 0x20]!
	0x03CE64E0 STP X20, X19, [X31 + 0x10]
	0x03CE64E4 ADRP X20, 0x701000
	0x03CE64E8 LDR X1, [X20 + 0x6E8]
	0x03CE64EC MOV X19, X0
	0x03CE64F0 CBNZ X1, 0x3CE6508
	0x03CE64F4 ADRP X0, 0xFFFFFFFFFCE1D000
	0x03CE64F8 ADD X0, X0, 0xBE3
	0x03CE64FC BL 0x1C16CB8
	0x03CE6500 MOV X1, X0
	0x03CE6504 STR X0, [X20 + 0x6E8]
	0x03CE6508 MOV X0, X19
	0x03CE650C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x702000
	007 Move X3, [X22+1352]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -52191232
	014 Add X0, X0, 2074
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+1352], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void YGNodeRemoveChild(System.IntPtr node, System.IntPtr child)

Disassembly:
	0x03CE6510 LDR X30, [X31], #0x20
	0x03CE6514 BR X1
	0x03CE6518 STR X30, [X31 - 0x20]!
	0x03CE651C STP X20, X19, [X31 + 0x10]
	0x03CE6520 ADRP X20, 0x701000
	0x03CE6524 LDR X1, [X20 + 0x6F0]
	0x03CE6528 MOV X19, X0
	0x03CE652C CBNZ X1, 0x3CE6544
	0x03CE6530 ADRP X0, 0xFFFFFFFFFCE1B000
	0x03CE6534 ADD X0, X0, 0x93F
	0x03CE6538 BL 0x1C16CB8
	0x03CE653C MOV X1, X0
	0x03CE6540 STR X0, [X20 + 0x6F0]
	0x03CE6544 MOV X0, X19
	0x03CE6548 LDP X20, X19, [X31 + 0x10]
	0x03CE654C LDR X30, [X31], #0x20
	0x03CE6550 BR X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x702000
	006 Move X2, [X21+1360]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52142080
	012 Add X0, X0, 663
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1360], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void YGNodeCalculateLayout(System.IntPtr node, System.Single availableWidth, System.Single availableHeight, UnityEngine.Yoga.YogaDirection parentDirection)

Disassembly:
	0x03CE6554 STP X30, X21, [X31 - 0x20]!
	0x03CE6558 STP X20, X19, [X31 + 0x10]
	0x03CE655C ADRP X21, 0x701000
	0x03CE6560 LDR X2, [X21 + 0x6F8]
	0x03CE6564 MOV W19, W1
	0x03CE6568 MOV X20, X0
	0x03CE656C CBNZ X2, 0x3CE6584
	0x03CE6570 ADRP X0, 0xFFFFFFFFFCE46000
	0x03CE6574 ADD X0, X0, 0xF3F
	0x03CE6578 BL 0x1C16CB8
	0x03CE657C MOV X2, X0
	0x03CE6580 STR X0, [X21 + 0x6F8]
	0x03CE6584 MOV X0, X20
	0x03CE6588 MOV W1, W19
	0x03CE658C LDP X20, X19, [X31 + 0x10]
	0x03CE6590 LDP X30, X21, [X31], #0x20
	0x03CE6594 BR X2
	0x03CE6598 STP X30, X21, [X31 - 0x20]!
	0x03CE659C STP X20, X19, [X31 + 0x10]
	0x03CE65A0 ADRP X21, 0x701000
	0x03CE65A4 LDR X2, [X21 + 0x700]
	0x03CE65A8 MOV W19, W1
	0x03CE65AC MOV X20, X0

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x702000
	008 Move X2, [X21+1368]
	009 Move W19, W1
	010 Move V8, V1
	011 Move V9, V0
	012 Move X20, X0
	013 Compare X2, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -52240384
	016 Add X0, X0, 1478
	017 Call 0x1C17CB8
	018 Move X2, X0
	019 Move [X21+1368], X0
	020 Move X0, X20
	021 Move W1, W19
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X30, [X31+16]
	025 Move X21, [X31+24]
	026 Move V0, V9
	027 Move V1, V8
	028 Move D9, [X31+48]
	029 Move D8, [X31+56]
	030 CallNoReturn X2

Method: System.Void YGNodeMarkDirty(System.IntPtr node)

Disassembly:
	0x03CE65B0 CBNZ X2, 0x3CE65C8
	0x03CE65B4 ADRP X0, 0xFFFFFFFFFCE31000
	0x03CE65B8 ADD X0, X0, 0x3C5
	0x03CE65BC BL 0x1C16CB8
	0x03CE65C0 MOV X2, X0
	0x03CE65C4 STR X0, [X21 + 0x700]
	0x03CE65C8 MOV X0, X20
	0x03CE65CC MOV W1, W19
	0x03CE65D0 LDP X20, X19, [X31 + 0x10]
	0x03CE65D4 LDP X30, X21, [X31], #0x20
	0x03CE65D8 BR X2
	0x03CE65DC STP X30, X21, [X31 - 0x20]!
	0x03CE65E0 STP X20, X19, [X31 + 0x10]
	0x03CE65E4 ADRP X21, 0x701000
	0x03CE65E8 LDR X2, [X21 + 0x708]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x702000
	005 Move X1, [X20+1376]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52314112
	010 Add X0, X0, 2311
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1376], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean YGNodeIsDirty(System.IntPtr node)

Disassembly:
	0x03CE65EC MOV W19, W1
	0x03CE65F0 MOV X20, X0
	0x03CE65F4 CBNZ X2, 0x3CE660C
	0x03CE65F8 ADRP X0, 0xFFFFFFFFFCE2B000
	0x03CE65FC ADD X0, X0, 0x872
	0x03CE6600 BL 0x1C16CB8
	0x03CE6604 MOV X2, X0
	0x03CE6608 STR X0, [X21 + 0x708]
	0x03CE660C MOV X0, X20
	0x03CE6610 MOV W1, W19
	0x03CE6614 LDP X20, X19, [X31 + 0x10]
	0x03CE6618 LDP X30, X21, [X31], #0x20
	0x03CE661C BR X2
	0x03CE6620 MOV X2, X1
	0x03CE6624 MOV W1, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x702000
	005 Move X1, [X20+1384]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52363264
	010 Add X0, X0, 2841
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1384], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void YGNodeCopyStyle(System.IntPtr dstNode, System.IntPtr srcNode)

Disassembly:
	0x03CE6628 B 0x3CE662C
	0x03CE662C STR D8, [X31 - 0x30]!
	0x03CE6630 STP X30, X21, [X31 + 0x10]
	0x03CE6634 STP X20, X19, [X31 + 0x20]
	0x03CE6638 LDR X20, [X0 + 0x10]
	0x03CE663C UBFM X8, X2, 0x20, 0x3F
	0x03CE6640 MOV W19, W1
	0x03CE6644 CMP X8, 0x2
	0x03CE6648 FMOV S8, W2
	0x03CE664C B.NE 0x3CE6674
	0x03CE6650 ADRP X21, 0x701000
	0x03CE6654 LDR X2, [X21 + 0x690]
	0x03CE6658 CBNZ X2, 0x3CE6694
	0x03CE665C ADRP X0, 0xFFFFFFFFFCE11000
	0x03CE6660 ADD X0, X0, 0xC7F
	0x03CE6664 BL 0x1C16CB8
	0x03CE6668 MOV X2, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x702000
	006 Move X2, [X21+1392]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52183040
	012 Add X0, X0, 1752
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1392], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void YGNodeSetMeasureFunc(System.IntPtr node)

Disassembly:
	0x03CE666C STR X0, [X21 + 0x690]
	0x03CE6670 B 0x3CE6694
	0x03CE6674 ADRP X21, 0x701000
	0x03CE6678 LDR X2, [X21 + 0x688]
	0x03CE667C CBNZ X2, 0x3CE6694
	0x03CE6680 ADRP X0, 0xFFFFFFFFFCE0B000
	0x03CE6684 ADD X0, X0, 0xA0F
	0x03CE6688 BL 0x1C16CB8
	0x03CE668C MOV X2, X0
	0x03CE6690 STR X0, [X21 + 0x688]
	0x03CE6694 MOV X0, X20
	0x03CE6698 MOV W1, W19
	0x03CE669C LDP X20, X19, [X31 + 0x20]
	0x03CE66A0 LDP X30, X21, [X31 + 0x10]
	0x03CE66A4 MOV V0.16B, V8.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x702000
	005 Move X1, [X20+1400]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52232192
	010 Add X0, X0, 772
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1400], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void YGNodeRemoveMeasureFunc(System.IntPtr node)

Disassembly:
	0x03CE66A8 LDR V8, [X31], #0x30
	0x03CE66AC BR X2
	0x03CE66B0 MOV X2, X1
	0x03CE66B4 MOVZ W1, 0x1
	0x03CE66B8 B 0x3CE662C
	0x03CE66BC MOV X2, X1
	0x03CE66C0 MOVZ W1, 0x2
	0x03CE66C4 B 0x3CE662C
	0x03CE66C8 MOV X2, X1
	0x03CE66CC MOVZ W1, 0x3
	0x03CE66D0 B 0x3CE662C
	0x03CE66D4 LDR W0, [X0 + 0x4]
	0x03CE66D8 RET
	0x03CE66DC LDR V0, [X0]
	0x03CE66E0 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x702000
	005 Move X1, [X20+1408]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52264960
	010 Add X0, X0, 3071
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1408], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void YGNodeMeasureInvoke(UnityEngine.Yoga.YogaNode node, System.Single width, UnityEngine.Yoga.YogaMeasureMode widthMode, System.Single height, UnityEngine.Yoga.YogaMeasureMode heightMode, System.IntPtr returnValueAddress)

Disassembly:
	0x03CE66E4 MOV X2, X1
	0x03CE66E8 MOV W1, W31
	0x03CE66EC B 0x3CE66F0
	0x03CE66F0 STR D8, [X31 - 0x30]!
	0x03CE66F4 STP X30, X21, [X31 + 0x10]
	0x03CE66F8 STP X20, X19, [X31 + 0x20]
	0x03CE66FC UBFM X8, X2, 0x20, 0x3F
	0x03CE6700 MOV W19, W1
	0x03CE6704 CMP W8, 0x2
	0x03CE6708 FMOV S8, W2
	0x03CE670C B.NE 0x3CE6738
	0x03CE6710 ADRP X21, 0x701000
	0x03CE6714 LDR X2, [X21 + 0x6A0]
	0x03CE6718 LDR X20, [X0 + 0x10]
	0x03CE671C CBNZ X2, 0x3CE679C
	0x03CE6720 ADRP X0, 0xFFFFFFFFFCE3D000
	0x03CE6724 ADD X0, X0, 0xAC5
	0x03CE6728 BL 0x1C16CB8
	0x03CE672C MOV X2, X0
	0x03CE6730 STR X0, [X21 + 0x6A0]
	0x03CE6734 B 0x3CE679C
	0x03CE6738 LDR X20, [X0 + 0x10]
	0x03CE673C CMP W8, 0x3
	0x03CE6740 B.NE 0x3CE677C
	0x03CE6744 ADRP X21, 0x701000

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W20, W1
	009 Move X21, X0
	010 Move X0, X3
	011 Move X1, X31
	012 Move W19, W2
	013 Move V8, V1
	014 Move V9, V0
	015 Call IntPtr.op_Explicit, X0
	016 Move X22, X0
	017 Move X0, X21
	018 Move V0, V9
	019 Move W1, W20
	020 Move V1, V8
	021 Move W2, W19
	022 Call YogaNode.MeasureInternal, X0, V0, X1, V1, X2
	023 Move [X22], S0
	024 Move [X22+8], S1
	025 Move X20, [X31+48]
	026 Move X19, [X31+56]
	027 Move X22, [X31+32]
	028 Move X21, [X31+40]
	029 Move X30, [X31+16]
	030 Move D9, [X31+64]
	031 Move D8, [X31+72]
	032 Return 

Method: System.Void YGNodeBaselineInvoke(UnityEngine.Yoga.YogaNode node, System.Single width, System.Single height, System.IntPtr returnValueAddress)

Disassembly:
	0x03CE67C0 B 0x3CE66F0
	0x03CE67C4 MOV X2, X1
	0x03CE67C8 MOVZ W1, 0x2
	0x03CE67CC B 0x3CE66F0
	0x03CE67D0 MOV X2, X1
	0x03CE67D4 MOVZ W1, 0x3
	0x03CE67D8 B 0x3CE66F0
	0x03CE67DC MOV X2, X1
	0x03CE67E0 MOV W1, W31
	0x03CE67E4 B 0x3CE67E8
	0x03CE67E8 STR D8, [X31 - 0x30]!
	0x03CE67EC STP X30, X21, [X31 + 0x10]
	0x03CE67F0 STP X20, X19, [X31 + 0x20]
	0x03CE67F4 LDR X20, [X0 + 0x10]
	0x03CE67F8 UBFM X8, X2, 0x20, 0x3F
	0x03CE67FC MOV W19, W1
	0x03CE6800 CMP X8, 0x2
	0x03CE6804 FMOV S8, W2
	0x03CE6808 B.NE 0x3CE6830

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, X1
	008 Move X1, X31
	009 Move V8, V1
	010 Move V9, V0
	011 Call IntPtr.op_Explicit, X0
	012 Move X20, X0
	013 Move X0, X19
	014 Move V0, V9
	015 Move V1, V8
	016 Call YogaNode.BaselineInternal, X0, V0, V1
	017 Move [X20], S0
	018 Move X20, [X31+32]
	019 Move X19, [X31+40]
	020 Move X30, [X31+16]
	021 Move D9, [X31+48]
	022 Move D8, [X31+56]
	023 Return 

Method: System.Void YGNodeSetHasNewLayout(System.IntPtr node, System.Boolean hasNewLayout)

Disassembly:
	0x03CE687C MOVZ W1, 0x2
	0x03CE6880 B 0x3CE67E8
	0x03CE6884 MOV X2, X1
	0x03CE6888 MOVZ W1, 0x3
	0x03CE688C B 0x3CE67E8
	0x03CE6890 STR D8, [X31 - 0x20]!
	0x03CE6894 STR X30, [X31 + 0x8]
	0x03CE6898 STP X20, X19, [X31 + 0x10]
	0x03CE689C ADRP X20, 0x701000
	0x03CE68A0 LDR X2, [X20 + 0x6C0]
	0x03CE68A4 LDR X19, [X0 + 0x10]
	0x03CE68A8 MOV V8.16B, V0.16B
	0x03CE68AC CBNZ X2, 0x3CE68C4
	0x03CE68B0 ADRP X0, 0xFFFFFFFFFCE09000
	0x03CE68B4 ADD X0, X0, 0x93B
	0x03CE68B8 BL 0x1C16CB8
	0x03CE68BC MOV X2, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x702000
	006 Move X2, [X21+1416]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52224000
	012 Add X0, X0, 826
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1416], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean YGNodeGetHasNewLayout(System.IntPtr node)

Disassembly:
	0x03CE68C0 STR X0, [X20 + 0x6C0]
	0x03CE68C4 MOV X0, X19
	0x03CE68C8 LDP X20, X19, [X31 + 0x10]
	0x03CE68CC LDR X30, [X31 + 0x8]
	0x03CE68D0 MOV W1, W31
	0x03CE68D4 MOV V0.16B, V8.16B
	0x03CE68D8 LDR V8, [X31], #0x20
	0x03CE68DC BR X2
	0x03CE68E0 STR D8, [X31 - 0x20]!
	0x03CE68E4 STR X30, [X31 + 0x8]
	0x03CE68E8 STP X20, X19, [X31 + 0x10]
	0x03CE68EC ADRP X20, 0x701000
	0x03CE68F0 LDR X2, [X20 + 0x6C0]
	0x03CE68F4 LDR X19, [X0 + 0x10]
	0x03CE68F8 MOV V8.16B, V0.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x702000
	005 Move X1, [X20+1424]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52224000
	010 Add X0, X0, 903
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1424], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Yoga.YogaDirection YGNodeStyleGetDirection(System.IntPtr node)

Disassembly:
	0x03CE68FC CBNZ X2, 0x3CE6914
	0x03CE6900 ADRP X0, 0xFFFFFFFFFCE09000
	0x03CE6904 ADD X0, X0, 0x93B
	0x03CE6908 BL 0x1C16CB8
	0x03CE690C MOV X2, X0
	0x03CE6910 STR X0, [X20 + 0x6C0]
	0x03CE6914 MOV X0, X19
	0x03CE6918 LDP X20, X19, [X31 + 0x10]
	0x03CE691C LDR X30, [X31 + 0x8]
	0x03CE6920 MOVZ W1, 0x1
	0x03CE6924 MOV V0.16B, V8.16B
	0x03CE6928 LDR V8, [X31], #0x20
	0x03CE692C BR X2
	0x03CE6930 STR D8, [X31 - 0x20]!
	0x03CE6934 STR X30, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x702000
	005 Move X1, [X20+1432]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52289536
	010 Add X0, X0, 2866
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1432], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void YGNodeStyleSetFlexDirection(System.IntPtr node, UnityEngine.Yoga.YogaFlexDirection flexDirection)

Disassembly:
	0x03CE6938 STP X20, X19, [X31 + 0x10]
	0x03CE693C ADRP X20, 0x701000
	0x03CE6940 LDR X2, [X20 + 0x6C0]
	0x03CE6944 LDR X19, [X0 + 0x10]
	0x03CE6948 MOV V8.16B, V0.16B
	0x03CE694C CBNZ X2, 0x3CE6964
	0x03CE6950 ADRP X0, 0xFFFFFFFFFCE09000
	0x03CE6954 ADD X0, X0, 0x93B
	0x03CE6958 BL 0x1C16CB8
	0x03CE695C MOV X2, X0
	0x03CE6960 STR X0, [X20 + 0x6C0]
	0x03CE6964 MOV X0, X19
	0x03CE6968 LDP X20, X19, [X31 + 0x10]
	0x03CE696C LDR X30, [X31 + 0x8]
	0x03CE6970 MOVZ W1, 0x2
	0x03CE6974 MOV V0.16B, V8.16B
	0x03CE6978 LDR V8, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x702000
	006 Move X2, [X21+1440]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52248576
	012 Add X0, X0, 2059
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1440], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void YGNodeStyleSetJustifyContent(System.IntPtr node, UnityEngine.Yoga.YogaJustify justifyContent)

Disassembly:
	0x03CE697C BR X2
	0x03CE6980 STR D8, [X31 - 0x20]!
	0x03CE6984 STR X30, [X31 + 0x8]
	0x03CE6988 STP X20, X19, [X31 + 0x10]
	0x03CE698C ADRP X20, 0x701000
	0x03CE6990 LDR X2, [X20 + 0x6C0]
	0x03CE6994 LDR X19, [X0 + 0x10]
	0x03CE6998 MOV V8.16B, V0.16B
	0x03CE699C CBNZ X2, 0x3CE69B4
	0x03CE69A0 ADRP X0, 0xFFFFFFFFFCE09000
	0x03CE69A4 ADD X0, X0, 0x93B
	0x03CE69A8 BL 0x1C16CB8
	0x03CE69AC MOV X2, X0
	0x03CE69B0 STR X0, [X20 + 0x6C0]
	0x03CE69B4 MOV X0, X19
	0x03CE69B8 LDP X20, X19, [X31 + 0x10]
	0x03CE69BC LDR X30, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x702000
	006 Move X2, [X21+1448]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52256768
	012 Add X0, X0, 3413
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1448], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void YGNodeStyleSetAlignContent(System.IntPtr node, UnityEngine.Yoga.YogaAlign alignContent)

Disassembly:
	0x03CE69C0 MOVZ W1, 0x3
	0x03CE69C4 MOV V0.16B, V8.16B
	0x03CE69C8 LDR V8, [X31], #0x20
	0x03CE69CC BR X2
	0x03CE69D0 STR X30, [X31 - 0x20]!
	0x03CE69D4 STP X20, X19, [X31 + 0x10]
	0x03CE69D8 ADRP X20, 0x701000
	0x03CE69DC LDR X2, [X20 + 0x6F8]
	0x03CE69E0 LDR X19, [X0 + 0x10]
	0x03CE69E4 CBNZ X2, 0x3CE69FC
	0x03CE69E8 ADRP X0, 0xFFFFFFFFFCE46000
	0x03CE69EC ADD X0, X0, 0xF3F
	0x03CE69F0 BL 0x1C16CB8
	0x03CE69F4 MOV X2, X0
	0x03CE69F8 STR X0, [X20 + 0x6F8]
	0x03CE69FC MOV X0, X19
	0x03CE6A00 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x702000
	006 Move X2, [X21+1456]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52363264
	012 Add X0, X0, 2895
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1456], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void YGNodeStyleSetAlignItems(System.IntPtr node, UnityEngine.Yoga.YogaAlign alignItems)

Disassembly:
	0x03CE6A04 MOV W1, W31
	0x03CE6A08 LDR X30, [X31], #0x20
	0x03CE6A0C BR X2
	0x03CE6A10 STR X30, [X31 - 0x20]!
	0x03CE6A14 STP X20, X19, [X31 + 0x10]
	0x03CE6A18 ADRP X20, 0x701000
	0x03CE6A1C LDR X2, [X20 + 0x6F8]
	0x03CE6A20 LDR X19, [X0 + 0x10]
	0x03CE6A24 CBNZ X2, 0x3CE6A3C
	0x03CE6A28 ADRP X0, 0xFFFFFFFFFCE46000
	0x03CE6A2C ADD X0, X0, 0xF3F
	0x03CE6A30 BL 0x1C16CB8
	0x03CE6A34 MOV X2, X0
	0x03CE6A38 STR X0, [X20 + 0x6F8]
	0x03CE6A3C MOV X0, X19
	0x03CE6A40 LDP X20, X19, [X31 + 0x10]
	0x03CE6A44 MOVZ W1, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x702000
	006 Move X2, [X21+1464]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52232192
	012 Add X0, X0, 833
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1464], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void YGNodeStyleSetAlignSelf(System.IntPtr node, UnityEngine.Yoga.YogaAlign alignSelf)

Disassembly:
	0x03CE6A48 LDR X30, [X31], #0x20
	0x03CE6A4C BR X2
	0x03CE6A50 STR X30, [X31 - 0x20]!
	0x03CE6A54 STP X20, X19, [X31 + 0x10]
	0x03CE6A58 ADRP X20, 0x701000
	0x03CE6A5C LDR X2, [X20 + 0x6F8]
	0x03CE6A60 LDR X19, [X0 + 0x10]
	0x03CE6A64 CBNZ X2, 0x3CE6A7C
	0x03CE6A68 ADRP X0, 0xFFFFFFFFFCE46000
	0x03CE6A6C ADD X0, X0, 0xF3F
	0x03CE6A70 BL 0x1C16CB8
	0x03CE6A74 MOV X2, X0
	0x03CE6A78 STR X0, [X20 + 0x6F8]
	0x03CE6A7C MOV X0, X19
	0x03CE6A80 LDP X20, X19, [X31 + 0x10]
	0x03CE6A84 MOVZ W1, 0x2
	0x03CE6A88 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x702000
	006 Move X2, [X21+1472]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52338688
	012 Add X0, X0, 2947
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1472], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void YGNodeStyleSetPositionType(System.IntPtr node, UnityEngine.Yoga.YogaPositionType positionType)

Disassembly:
	0x03CE6A8C BR X2
	0x03CE6A90 STR X30, [X31 - 0x20]!
	0x03CE6A94 STP X20, X19, [X31 + 0x10]
	0x03CE6A98 ADRP X20, 0x701000
	0x03CE6A9C LDR X2, [X20 + 0x6F8]
	0x03CE6AA0 LDR X19, [X0 + 0x10]
	0x03CE6AA4 CBNZ X2, 0x3CE6ABC
	0x03CE6AA8 ADRP X0, 0xFFFFFFFFFCE46000
	0x03CE6AAC ADD X0, X0, 0xF3F
	0x03CE6AB0 BL 0x1C16CB8
	0x03CE6AB4 MOV X2, X0
	0x03CE6AB8 STR X0, [X20 + 0x6F8]
	0x03CE6ABC MOV X0, X19
	0x03CE6AC0 LDP X20, X19, [X31 + 0x10]
	0x03CE6AC4 MOVZ W1, 0x3
	0x03CE6AC8 LDR X30, [X31], #0x20
	0x03CE6ACC BR X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x702000
	006 Move X2, [X21+1480]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52330496
	012 Add X0, X0, 3119
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1480], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void YGNodeStyleSetFlexWrap(System.IntPtr node, UnityEngine.Yoga.YogaWrap flexWrap)

Disassembly:
	0x03CE6AD0 STR X30, [X31 - 0x20]!
	0x03CE6AD4 STP X20, X19, [X31 + 0x10]
	0x03CE6AD8 ADRP X20, 0x701000
	0x03CE6ADC LDR X2, [X20 + 0x700]
	0x03CE6AE0 LDR X19, [X0 + 0x10]
	0x03CE6AE4 CBNZ X2, 0x3CE6AFC
	0x03CE6AE8 ADRP X0, 0xFFFFFFFFFCE31000
	0x03CE6AEC ADD X0, X0, 0x3C5
	0x03CE6AF0 BL 0x1C16CB8
	0x03CE6AF4 MOV X2, X0
	0x03CE6AF8 STR X0, [X20 + 0x700]
	0x03CE6AFC MOV X0, X19
	0x03CE6B00 LDP X20, X19, [X31 + 0x10]
	0x03CE6B04 MOV W1, W31
	0x03CE6B08 LDR X30, [X31], #0x20
	0x03CE6B0C BR X2
	0x03CE6B10 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x702000
	006 Move X2, [X21+1488]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52363264
	012 Add X0, X0, 2989
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1488], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void YGNodeStyleSetOverflow(System.IntPtr node, UnityEngine.Yoga.YogaOverflow flexWrap)

Disassembly:
	0x03CE6B14 STP X20, X19, [X31 + 0x10]
	0x03CE6B18 ADRP X20, 0x701000
	0x03CE6B1C LDR X2, [X20 + 0x700]
	0x03CE6B20 LDR X19, [X0 + 0x10]
	0x03CE6B24 CBNZ X2, 0x3CE6B3C
	0x03CE6B28 ADRP X0, 0xFFFFFFFFFCE31000
	0x03CE6B2C ADD X0, X0, 0x3C5
	0x03CE6B30 BL 0x1C16CB8
	0x03CE6B34 MOV X2, X0
	0x03CE6B38 STR X0, [X20 + 0x700]
	0x03CE6B3C MOV X0, X19
	0x03CE6B40 LDP X20, X19, [X31 + 0x10]
	0x03CE6B44 MOVZ W1, 0x1
	0x03CE6B48 LDR X30, [X31], #0x20
	0x03CE6B4C BR X2
	0x03CE6B50 STR X30, [X31 - 0x20]!
	0x03CE6B54 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x702000
	006 Move X2, [X21+1496]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52232192
	012 Add X0, X0, 925
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1496], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void YGNodeStyleSetDisplay(System.IntPtr node, UnityEngine.Yoga.YogaDisplay display)

Disassembly:
	0x03CE6B58 ADRP X20, 0x701000
	0x03CE6B5C LDR X2, [X20 + 0x700]
	0x03CE6B60 LDR X19, [X0 + 0x10]
	0x03CE6B64 CBNZ X2, 0x3CE6B7C
	0x03CE6B68 ADRP X0, 0xFFFFFFFFFCE31000
	0x03CE6B6C ADD X0, X0, 0x3C5
	0x03CE6B70 BL 0x1C16CB8
	0x03CE6B74 MOV X2, X0
	0x03CE6B78 STR X0, [X20 + 0x700]
	0x03CE6B7C MOV X0, X19
	0x03CE6B80 LDP X20, X19, [X31 + 0x10]
	0x03CE6B84 MOVZ W1, 0x2
	0x03CE6B88 LDR X30, [X31], #0x20
	0x03CE6B8C BR X2
	0x03CE6B90 STR X30, [X31 - 0x20]!
	0x03CE6B94 STP X20, X19, [X31 + 0x10]
	0x03CE6B98 ADRP X20, 0x701000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x702000
	006 Move X2, [X21+1504]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52387840
	012 Add X0, X0, 2127
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1504], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void YGNodeStyleSetFlex(System.IntPtr node, System.Single flex)

Disassembly:
	0x03CE6B9C LDR X2, [X20 + 0x700]
	0x03CE6BA0 LDR X19, [X0 + 0x10]
	0x03CE6BA4 CBNZ X2, 0x3CE6BBC
	0x03CE6BA8 ADRP X0, 0xFFFFFFFFFCE31000
	0x03CE6BAC ADD X0, X0, 0x3C5
	0x03CE6BB0 BL 0x1C16CB8
	0x03CE6BB4 MOV X2, X0
	0x03CE6BB8 STR X0, [X20 + 0x700]
	0x03CE6BBC MOV X0, X19
	0x03CE6BC0 LDP X20, X19, [X31 + 0x10]
	0x03CE6BC4 MOVZ W1, 0x3
	0x03CE6BC8 LDR X30, [X31], #0x20
	0x03CE6BCC BR X2
	0x03CE6BD0 STR X30, [X31 - 0x20]!
	0x03CE6BD4 STP X20, X19, [X31 + 0x10]
	0x03CE6BD8 ADRP X20, 0x701000
	0x03CE6BDC LDR X2, [X20 + 0x708]
	0x03CE6BE0 LDR X19, [X0 + 0x10]
	0x03CE6BE4 CBNZ X2, 0x3CE6BFC

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x702000
	006 Move X1, [X20+1512]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52281344
	012 Add X0, X0, 3549
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1512], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void YGNodeStyleSetFlexGrow(System.IntPtr node, System.Single flexGrow)

Disassembly:
	0x03CE6BE8 ADRP X0, 0xFFFFFFFFFCE2B000
	0x03CE6BEC ADD X0, X0, 0x872
	0x03CE6BF0 BL 0x1C16CB8
	0x03CE6BF4 MOV X2, X0
	0x03CE6BF8 STR X0, [X20 + 0x708]
	0x03CE6BFC MOV X0, X19
	0x03CE6C00 LDP X20, X19, [X31 + 0x10]
	0x03CE6C04 MOV W1, W31
	0x03CE6C08 LDR X30, [X31], #0x20
	0x03CE6C0C BR X2
	0x03CE6C10 STR X30, [X31 - 0x20]!
	0x03CE6C14 STP X20, X19, [X31 + 0x10]
	0x03CE6C18 ADRP X20, 0x701000
	0x03CE6C1C LDR X2, [X20 + 0x708]
	0x03CE6C20 LDR X19, [X0 + 0x10]
	0x03CE6C24 CBNZ X2, 0x3CE6C3C
	0x03CE6C28 ADRP X0, 0xFFFFFFFFFCE2B000
	0x03CE6C2C ADD X0, X0, 0x872
	0x03CE6C30 BL 0x1C16CB8

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x702000
	006 Move X1, [X20+1520]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52264960
	012 Add X0, X0, 3135
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1520], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void YGNodeStyleSetFlexShrink(System.IntPtr node, System.Single flexShrink)

Disassembly:
	0x03CE6C34 MOV X2, X0
	0x03CE6C38 STR X0, [X20 + 0x708]
	0x03CE6C3C MOV X0, X19
	0x03CE6C40 LDP X20, X19, [X31 + 0x10]
	0x03CE6C44 MOVZ W1, 0x1
	0x03CE6C48 LDR X30, [X31], #0x20
	0x03CE6C4C BR X2
	0x03CE6C50 STR X30, [X31 - 0x20]!
	0x03CE6C54 STP X20, X19, [X31 + 0x10]
	0x03CE6C58 ADRP X20, 0x701000
	0x03CE6C5C LDR X2, [X20 + 0x708]
	0x03CE6C60 LDR X19, [X0 + 0x10]
	0x03CE6C64 CBNZ X2, 0x3CE6C7C
	0x03CE6C68 ADRP X0, 0xFFFFFFFFFCE2B000
	0x03CE6C6C ADD X0, X0, 0x872
	0x03CE6C70 BL 0x1C16CB8
	0x03CE6C74 MOV X2, X0
	0x03CE6C78 STR X0, [X20 + 0x708]
	0x03CE6C7C MOV X0, X19

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x702000
	006 Move X1, [X20+1528]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52215808
	012 Add X0, X0, 1614
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1528], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void YGNodeStyleSetFlexBasis(System.IntPtr node, System.Single flexBasis)

Disassembly:
	0x03CE6C80 LDP X20, X19, [X31 + 0x10]
	0x03CE6C84 MOVZ W1, 0x2
	0x03CE6C88 LDR X30, [X31], #0x20
	0x03CE6C8C BR X2
	0x03CE6C90 STR X30, [X31 - 0x20]!
	0x03CE6C94 STP X20, X19, [X31 + 0x10]
	0x03CE6C98 ADRP X20, 0x701000
	0x03CE6C9C LDR X2, [X20 + 0x708]
	0x03CE6CA0 LDR X19, [X0 + 0x10]
	0x03CE6CA4 CBNZ X2, 0x3CE6CBC
	0x03CE6CA8 ADRP X0, 0xFFFFFFFFFCE2B000
	0x03CE6CAC ADD X0, X0, 0x872
	0x03CE6CB0 BL 0x1C16CB8
	0x03CE6CB4 MOV X2, X0
	0x03CE6CB8 STR X0, [X20 + 0x708]
	0x03CE6CBC MOV X0, X19
	0x03CE6CC0 LDP X20, X19, [X31 + 0x10]
	0x03CE6CC4 MOVZ W1, 0x3
	0x03CE6CC8 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x702000
	006 Move X1, [X20+1536]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52281344
	012 Add X0, X0, 3622
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1536], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void YGNodeStyleSetFlexBasisPercent(System.IntPtr node, System.Single flexBasis)

Disassembly:
	0x03CE6CCC BR X2
	0x03CE6CD0 STP X30, X21, [X31 - 0x20]!
	0x03CE6CD4 STP X20, X19, [X31 + 0x10]
	0x03CE6CD8 ADRP X21, 0x701000
	0x03CE6CDC LDRB W8, [X21 + 0x710]
	0x03CE6CE0 MOV X20, X1
	0x03CE6CE4 MOV X19, X0
	0x03CE6CE8 TBNZ X8, 0x0, 0x3CE6D00
	0x03CE6CEC ADRP X0, 0x47C000
	0x03CE6CF0 LDR X0, [X0 + 0x630]
	0x03CE6CF4 BL 0x1C16CF4
	0x03CE6CF8 MOVZ W8, 0x1
	0x03CE6CFC STRB W8, [X21 + 0x710]
	0x03CE6D00 MOV X0, X19
	0x03CE6D04 MOV X1, X31
	0x03CE6D08 BL 0x33BDD8C
	0x03CE6D0C CBNZ X20, 0x3CE6D34
	0x03CE6D10 ADRP X20, 0x47C000
	0x03CE6D14 LDR X20, [X20 + 0x630]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x702000
	006 Move X1, [X20+1544]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52330496
	012 Add X0, X0, 3220
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1544], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void YGNodeStyleSetFlexBasisAuto(System.IntPtr node)

Disassembly:
	0x03CE6D18 LDR X0, [X20]
	0x03CE6D1C LDR W8, [X0 + 0xE0]
	0x03CE6D20 CBNZ W8, 0x3CE6D2C
	0x03CE6D24 BL 0x1C16DFC
	0x03CE6D28 LDR X0, [X20]
	0x03CE6D2C LDR X8, [X0 + 0xB8]
	0x03CE6D30 LDR X20, [X8]
	0x03CE6D34 CBZ X19, 0x3CE6D8C
	0x03CE6D38 STR X20, [X19 + 0x18]
	0x03CE6D3C CBZ X20, 0x3CE6D8C
	0x03CE6D40 ADRP X21, 0x701000
	0x03CE6D44 LDR X8, [X21 + 0x4F8]
	0x03CE6D48 LDR X20, [X20 + 0x10]
	0x03CE6D4C CBNZ X8, 0x3CE6D64
	0x03CE6D50 ADRP X0, 0xFFFFFFFFFCE2B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x702000
	005 Move X1, [X20+1552]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52387840
	010 Add X0, X0, 2218
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1552], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void YGNodeStyleSetWidth(System.IntPtr node, System.Single width)

Disassembly:
	0x03CE6D54 ADD X0, X0, 0x7CF
	0x03CE6D58 BL 0x1C16CB8
	0x03CE6D5C MOV X8, X0
	0x03CE6D60 STR X0, [X21 + 0x4F8]
	0x03CE6D64 MOV X0, X20
	0x03CE6D68 BLR X8
	0x03CE6D6C MOV X1, X31
	0x03CE6D70 MOV X2, X31
	0x03CE6D74 STR X0, [X19 + 0x10]
	0x03CE6D78 BL 0x33BE5B0
	0x03CE6D7C TBNZ X0, 0x0, 0x3CE6D90
	0x03CE6D80 LDP X20, X19, [X31 + 0x10]
	0x03CE6D84 LDP X30, X21, [X31], #0x20
	0x03CE6D88 RET
	0x03CE6D8C BL 0x1C16F20
	0x03CE6D90 ADRP X0, 0x40D000
	0x03CE6D94 LDR X0, [X0 + 0x5B0]
	0x03CE6D98 BL 0x1C16D08
	0x03CE6D9C BL 0x1C16F10

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x702000
	006 Move X1, [X20+1560]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52305920
	012 Add X0, X0, 2969
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1560], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void YGNodeStyleSetWidthPercent(System.IntPtr node, System.Single width)

Disassembly:
	0x03CE6DA0 MOV X19, X0
	0x03CE6DA4 ADRP X0, 0x47C000
	0x03CE6DA8 LDR X0, [X0 + 0x620]
	0x03CE6DAC BL 0x1C16D08
	0x03CE6DB0 MOV X1, X0
	0x03CE6DB4 MOV X0, X19
	0x03CE6DB8 MOV X2, X31
	0x03CE6DBC BL 0x337DF1C
	0x03CE6DC0 ADRP X0, 0x47C000
	0x03CE6DC4 LDR X0, [X0 + 0x658]
	0x03CE6DC8 BL 0x1C16D08
	0x03CE6DCC MOV X1, X0
	0x03CE6DD0 MOV X0, X19
	0x03CE6DD4 BL 0x1C16DEC
	0x03CE6DD8 STP X30, X21, [X31 - 0x20]!
	0x03CE6DDC STP X20, X19, [X31 + 0x10]
	0x03CE6DE0 MOV X19, X0
	0x03CE6DE4 LDR X0, [X0 + 0x10]
	0x03CE6DE8 BL 0x3CE5364

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x702000
	006 Move X1, [X20+1568]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52174848
	012 Add X0, X0, 2676
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1568], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void YGNodeStyleSetWidthAuto(System.IntPtr node)

Disassembly:
	0x03CE6DEC MOV X0, X19
	0x03CE6DF0 LDP X20, X19, [X31 + 0x10]
	0x03CE6DF4 MOV X1, X31
	0x03CE6DF8 LDP X30, X21, [X31], #0x20
	0x03CE6DFC B 0x33CB4DC
	0x03CE6E00 CMP W1, 0x1
	0x03CE6E04 MOV X21, X0
	0x03CE6E08 B.NE 0x3CE6E38
	0x03CE6E0C MOV X0, X21
	0x03CE6E10 BL 0x3EB1AD0
	0x03CE6E14 LDR X20, [X0]
	0x03CE6E18 BL 0x3EB1AE0
	0x03CE6E1C MOV X0, X19
	0x03CE6E20 MOV X1, X31
	0x03CE6E24 BL 0x33CB4DC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x702000
	005 Move X1, [X20+1576]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52281344
	010 Add X0, X0, 3700
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1576], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void YGNodeStyleSetHeight(System.IntPtr node, System.Single height)

Disassembly:
	0x03CE6E28 CBNZ X20, 0x3CE6E40
	0x03CE6E2C LDP X20, X19, [X31 + 0x10]
	0x03CE6E30 LDP X30, X21, [X31], #0x20
	0x03CE6E34 RET
	0x03CE6E38 MOV X20, X31
	0x03CE6E3C B 0x3CE6E4C
	0x03CE6E40 MOV X0, X20
	0x03CE6E44 BL 0x1C16F18
	0x03CE6E48 MOV X21, X0
	0x03CE6E4C MOV X0, X19
	0x03CE6E50 MOV X1, X31
	0x03CE6E54 BL 0x33CB4DC
	0x03CE6E58 CBNZ X20, 0x3CE6E64
	0x03CE6E5C MOV X0, X21
	0x03CE6E60 BL 0x1D2C690
	0x03CE6E64 MOV X0, X20
	0x03CE6E68 BL 0x1C16F18
	0x03CE6E6C BL 0x1990590
	0x03CE6E70 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x702000
	006 Move X1, [X20+1584]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52330496
	012 Add X0, X0, 3305
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1584], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void YGNodeStyleSetHeightPercent(System.IntPtr node, System.Single height)

Disassembly:
	0x03CE6E74 STP X20, X19, [X31 + 0x10]
	0x03CE6E78 ADRP X21, 0x701000
	0x03CE6E7C LDRB W8, [X21 + 0x711]
	0x03CE6E80 MOV X20, X1
	0x03CE6E84 MOV X19, X0
	0x03CE6E88 TBZ X8, 0x0, 0x3CE6E98
	0x03CE6E8C CBZ X20, 0x3CE6EB0
	0x03CE6E90 CBNZ X19, 0x3CE6ED8
	0x03CE6E94 B 0x3CE6F1C
	0x03CE6E98 ADRP X0, 0x47C000
	0x03CE6E9C LDR X0, [X0 + 0x630]
	0x03CE6EA0 BL 0x1C16CF4
	0x03CE6EA4 MOVZ W8, 0x1
	0x03CE6EA8 STRB W8, [X21 + 0x711]
	0x03CE6EAC CBNZ X20, 0x3CE6E90
	0x03CE6EB0 ADRP X20, 0x47C000
	0x03CE6EB4 LDR X20, [X20 + 0x630]
	0x03CE6EB8 LDR X0, [X20]
	0x03CE6EBC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x702000
	006 Move X1, [X20+1592]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52273152
	012 Add X0, X0, 2676
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1592], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void YGNodeStyleSetHeightAuto(System.IntPtr node)

Disassembly:
	0x03CE6EC0 CBNZ W8, 0x3CE6ECC
	0x03CE6EC4 BL 0x1C16DFC
	0x03CE6EC8 LDR X0, [X20]
	0x03CE6ECC LDR X8, [X0 + 0xB8]
	0x03CE6ED0 LDR X20, [X8]
	0x03CE6ED4 CBZ X19, 0x3CE6F1C
	0x03CE6ED8 STR X20, [X19 + 0x18]
	0x03CE6EDC CBZ X20, 0x3CE6F1C
	0x03CE6EE0 ADRP X21, 0x701000
	0x03CE6EE4 LDR X19, [X19 + 0x10]
	0x03CE6EE8 LDR X2, [X21 + 0x510]
	0x03CE6EEC LDR X20, [X20 + 0x10]
	0x03CE6EF0 CBNZ X2, 0x3CE6F08
	0x03CE6EF4 ADRP X0, 0xFFFFFFFFFCE0B000
	0x03CE6EF8 ADD X0, X0, 0x9C9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x702000
	005 Move X1, [X20+1600]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52346880
	010 Add X0, X0, 3572
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1600], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void YGNodeStyleSetMinWidth(System.IntPtr node, System.Single minWidth)

Disassembly:
	0x03CE6EFC BL 0x1C16CB8
	0x03CE6F00 MOV X2, X0
	0x03CE6F04 STR X0, [X21 + 0x510]
	0x03CE6F08 MOV X0, X19
	0x03CE6F0C MOV X1, X20
	0x03CE6F10 LDP X20, X19, [X31 + 0x10]
	0x03CE6F14 LDP X30, X21, [X31], #0x20
	0x03CE6F18 BR X2
	0x03CE6F1C BL 0x1C16F20
	0x03CE6F20 STR X30, [X31 - 0x20]!
	0x03CE6F24 STP X20, X19, [X31 + 0x10]
	0x03CE6F28 ADRP X20, 0x701000
	0x03CE6F2C LDR X1, [X20 + 0x568]
	0x03CE6F30 LDR X19, [X0 + 0x10]
	0x03CE6F34 CBNZ X1, 0x3CE6F4C
	0x03CE6F38 ADRP X0, 0xFFFFFFFFFCE0F000
	0x03CE6F3C ADD X0, X0, 0xB19
	0x03CE6F40 BL 0x1C16CB8
	0x03CE6F44 MOV X1, X0

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x702000
	006 Move X1, [X20+1608]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52387840
	012 Add X0, X0, 2286
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1608], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void YGNodeStyleSetMinWidthPercent(System.IntPtr node, System.Single minWidth)

Disassembly:
	0x03CE6F48 STR X0, [X20 + 0x568]
	0x03CE6F4C MOV X0, X19
	0x03CE6F50 LDP X20, X19, [X31 + 0x10]
	0x03CE6F54 LDR X30, [X31], #0x20
	0x03CE6F58 BR X1
	0x03CE6F5C STR X30, [X31 - 0x20]!
	0x03CE6F60 STP X20, X19, [X31 + 0x10]
	0x03CE6F64 ADRP X20, 0x701000
	0x03CE6F68 LDR X1, [X20 + 0x560]
	0x03CE6F6C LDR X19, [X0 + 0x10]
	0x03CE6F70 CBNZ X1, 0x3CE6F88
	0x03CE6F74 ADRP X0, 0xFFFFFFFFFCE1B000
	0x03CE6F78 ADD X0, X0, 0x907
	0x03CE6F7C BL 0x1C16CB8
	0x03CE6F80 MOV X1, X0
	0x03CE6F84 STR X0, [X20 + 0x560]
	0x03CE6F88 MOV X0, X19
	0x03CE6F8C LDP X20, X19, [X31 + 0x10]
	0x03CE6F90 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x702000
	006 Move X1, [X20+1616]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52215808
	012 Add X0, X0, 1693
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1616], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void YGNodeStyleSetMinHeight(System.IntPtr node, System.Single minHeight)

Disassembly:
	0x03CE6F94 BR X1
	0x03CE6F98 STR X30, [X31 - 0x20]!
	0x03CE6F9C STP X20, X19, [X31 + 0x10]
	0x03CE6FA0 ADRP X20, 0x701000
	0x03CE6FA4 LDR X1, [X20 + 0x590]
	0x03CE6FA8 LDR X19, [X0 + 0x10]
	0x03CE6FAC CBNZ X1, 0x3CE6FC4
	0x03CE6FB0 ADRP X0, 0xFFFFFFFFFCE31000
	0x03CE6FB4 ADD X0, X0, 0x387
	0x03CE6FB8 BL 0x1C16CB8
	0x03CE6FBC MOV X1, X0
	0x03CE6FC0 STR X0, [X20 + 0x590]
	0x03CE6FC4 MOV X0, X19
	0x03CE6FC8 LDP X20, X19, [X31 + 0x10]
	0x03CE6FCC LDR X30, [X31], #0x20
	0x03CE6FD0 BR X1
	0x03CE6FD4 LDR X8, [X0 + 0x30]
	0x03CE6FD8 CMP X8, 0x0
	0x03CE6FDC CSET W0, NE

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x702000
	006 Move X1, [X20+1624]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52183040
	012 Add X0, X0, 1822
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1624], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void YGNodeStyleSetMinHeightPercent(System.IntPtr node, System.Single minHeight)

Disassembly:
	0x03CE6FE0 RET
	0x03CE6FE4 LDR X8, [X0 + 0x38]
	0x03CE6FE8 CMP X8, 0x0
	0x03CE6FEC CSET W0, NE
	0x03CE6FF0 RET
	0x03CE6FF4 STP X30, X21, [X31 - 0x20]!
	0x03CE6FF8 STP X20, X19, [X31 + 0x10]
	0x03CE6FFC CBZ X1, 0x3CE703C
	0x03CE7000 ADRP X21, 0x700000
	0x03CE7004 LDR X19, [X0 + 0x10]
	0x03CE7008 B 0x3EB1764
	0x03CE700C LDR X20, [X1 + 0x10]
	0x03CE7010 CBNZ X2, 0x3CE7028
	0x03CE7014 ADRP X0, 0xFFFFFFFFFCE3A000
	0x03CE7018 ADD X0, X0, 0x6D8
	0x03CE701C BL 0x1C16CB8
	0x03CE7020 MOV X2, X0
	0x03CE7024 STR X0, [X21 + 0x570]
	0x03CE7028 MOV X0, X19

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x702000
	006 Move X1, [X20+1632]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52342784
	012 Add X0, X0, 3038
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1632], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void YGNodeStyleSetMaxWidth(System.IntPtr node, System.Single maxWidth)

Disassembly:
	0x03CE702C MOV X1, X20
	0x03CE7030 LDP X20, X19, [X31 + 0x10]
	0x03CE7034 LDP X30, X21, [X31], #0x20
	0x03CE7038 BR X2
	0x03CE703C BL 0x1C16F20
	0x03CE7040 STP X30, X21, [X31 - 0x20]!
	0x03CE7044 STP X20, X19, [X31 + 0x10]
	0x03CE7048 ADRP X21, 0x700000
	0x03CE704C LDR X2, [X21 + 0x5A0]
	0x03CE7050 LDR X20, [X0 + 0x10]
	0x03CE7054 MOV W19, W1
	0x03CE7058 CBNZ X2, 0x3CE7070
	0x03CE705C ADRP X0, 0xFFFFFFFFFCE2A000
	0x03CE7060 ADD X0, X0, 0x80B
	0x03CE7064 BL 0x1C16CB8
	0x03CE7068 MOV X2, X0
	0x03CE706C STR X0, [X21 + 0x5A0]
	0x03CE7070 MOV X0, X20
	0x03CE7074 MOV W1, W19

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x701000
	006 Move X1, [X20+1640]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52203520
	012 Add X0, X0, 1924
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1640], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void YGNodeStyleSetMaxWidthPercent(System.IntPtr node, System.Single maxWidth)

Disassembly:
	0x03CE7078 LDP X20, X19, [X31 + 0x10]
	0x03CE707C LDP X30, X21, [X31], #0x20
	0x03CE7080 BR X2
	0x03CE7084 STP X30, X21, [X31 - 0x20]!
	0x03CE7088 STP X20, X19, [X31 + 0x10]
	0x03CE708C ADRP X21, 0x700000
	0x03CE7090 LDR X2, [X21 + 0x5A8]
	0x03CE7094 LDR X20, [X0 + 0x10]
	0x03CE7098 MOV W19, W1
	0x03CE709C CBNZ X2, 0x3CE70B4
	0x03CE70A0 ADRP X0, 0xFFFFFFFFFCE28000
	0x03CE70A4 ADD X0, X0, 0xD55
	0x03CE70A8 BL 0x1C16CB8
	0x03CE70AC MOV X2, X0
	0x03CE70B0 STR X0, [X21 + 0x5A8]
	0x03CE70B4 MOV X0, X20
	0x03CE70B8 MOV W1, W19
	0x03CE70BC LDP X20, X19, [X31 + 0x10]
	0x03CE70C0 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x701000
	006 Move X1, [X20+1648]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52326400
	012 Add X0, X0, 2475
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1648], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void YGNodeStyleSetMaxHeight(System.IntPtr node, System.Single maxHeight)

Disassembly:
	0x03CE70C4 BR X2
	0x03CE70C8 STP X30, X21, [X31 - 0x20]!
	0x03CE70CC STP X20, X19, [X31 + 0x10]
	0x03CE70D0 ADRP X21, 0x700000
	0x03CE70D4 LDR X2, [X21 + 0x5E0]
	0x03CE70D8 LDR X20, [X0 + 0x10]
	0x03CE70DC MOV W19, W1
	0x03CE70E0 CBNZ X2, 0x3CE70F8
	0x03CE70E4 ADRP X0, 0xFFFFFFFFFCE08000
	0x03CE70E8 ADD X0, X0, 0x84F
	0x03CE70EC BL 0x1C16CB8
	0x03CE70F0 MOV X2, X0
	0x03CE70F4 STR X0, [X21 + 0x5E0]
	0x03CE70F8 MOV X0, X20
	0x03CE70FC MOV W1, W19
	0x03CE7100 LDP X20, X19, [X31 + 0x10]
	0x03CE7104 LDP X30, X21, [X31], #0x20
	0x03CE7108 BR X2
	0x03CE710C STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x701000
	006 Move X1, [X20+1656]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52375552
	012 Add X0, X0, 2978
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1656], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void YGNodeStyleSetMaxHeightPercent(System.IntPtr node, System.Single maxHeight)

Disassembly:
	0x03CE7110 STP X20, X19, [X31 + 0x10]
	0x03CE7114 ADRP X21, 0x700000
	0x03CE7118 LDR X2, [X21 + 0x5B8]
	0x03CE711C LDR X20, [X0 + 0x10]
	0x03CE7120 MOV W19, W1
	0x03CE7124 CBNZ X2, 0x3CE713C
	0x03CE7128 ADRP X0, 0xFFFFFFFFFCE2E000
	0x03CE712C ADD X0, X0, 0x341
	0x03CE7130 BL 0x1C16CB8
	0x03CE7134 MOV X2, X0
	0x03CE7138 STR X0, [X21 + 0x5B8]
	0x03CE713C MOV X0, X20
	0x03CE7140 MOV W1, W19
	0x03CE7144 LDP X20, X19, [X31 + 0x10]
	0x03CE7148 LDP X30, X21, [X31], #0x20
	0x03CE714C BR X2
	0x03CE7150 STP X30, X21, [X31 - 0x20]!
	0x03CE7154 STP X20, X19, [X31 + 0x10]
	0x03CE7158 ADRP X21, 0x700000

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x701000
	006 Move X1, [X20+1664]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52277248
	012 Add X0, X0, 2758
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1664], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void YGNodeStyleSetPosition(System.IntPtr node, UnityEngine.Yoga.YogaEdge edge, System.Single position)

Disassembly:
	0x03CE715C LDR X2, [X21 + 0x5C0]
	0x03CE7160 LDR X20, [X0 + 0x10]
	0x03CE7164 MOV W19, W1
	0x03CE7168 CBNZ X2, 0x3CE7180
	0x03CE716C ADRP X0, 0xFFFFFFFFFCE14000
	0x03CE7170 ADD X0, X0, 0xB83
	0x03CE7174 BL 0x1C16CB8
	0x03CE7178 MOV X2, X0
	0x03CE717C STR X0, [X21 + 0x5C0]
	0x03CE7180 MOV X0, X20
	0x03CE7184 MOV W1, W19
	0x03CE7188 LDP X20, X19, [X31 + 0x10]
	0x03CE718C LDP X30, X21, [X31], #0x20
	0x03CE7190 BR X2
	0x03CE7194 STP X30, X21, [X31 - 0x20]!
	0x03CE7198 STP X20, X19, [X31 + 0x10]
	0x03CE719C ADRP X21, 0x700000
	0x03CE71A0 LDR X2, [X21 + 0x5B0]
	0x03CE71A4 LDR X20, [X0 + 0x10]
	0x03CE71A8 MOV W19, W1
	0x03CE71AC CBNZ X2, 0x3CE71C4

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x701000
	007 Move X2, [X21+1672]
	008 Move V8, V0
	009 Move W19, W1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -52383744
	014 Add X0, X0, 2575
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+1672], X0
	018 Move X0, X20
	019 Move W1, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

Method: System.Void YGNodeStyleSetPositionPercent(System.IntPtr node, UnityEngine.Yoga.YogaEdge edge, System.Single position)

Disassembly:
	0x03CE71B0 ADRP X0, 0xFFFFFFFFFCE0E000
	0x03CE71B4 ADD X0, X0, 0xB4F
	0x03CE71B8 BL 0x1C16CB8
	0x03CE71BC MOV X2, X0
	0x03CE71C0 STR X0, [X21 + 0x5B0]
	0x03CE71C4 MOV X0, X20
	0x03CE71C8 MOV W1, W19
	0x03CE71CC LDP X20, X19, [X31 + 0x10]
	0x03CE71D0 LDP X30, X21, [X31], #0x20
	0x03CE71D4 BR X2
	0x03CE71D8 STP X30, X21, [X31 - 0x20]!
	0x03CE71DC STP X20, X19, [X31 + 0x10]
	0x03CE71E0 ADRP X21, 0x700000
	0x03CE71E4 LDR X2, [X21 + 0x5C8]
	0x03CE71E8 LDR X20, [X0 + 0x10]
	0x03CE71EC MOV W19, W1
	0x03CE71F0 CBNZ X2, 0x3CE7208
	0x03CE71F4 ADRP X0, 0xFFFFFFFFFCE16000
	0x03CE71F8 ADD X0, X0, 0xC2F
	0x03CE71FC BL 0x1C16CB8
	0x03CE7200 MOV X2, X0

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x701000
	007 Move X2, [X21+1680]
	008 Move V8, V0
	009 Move W19, W1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -52359168
	014 Add X0, X0, 3199
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+1680], X0
	018 Move X0, X20
	019 Move W1, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

Method: System.Void YGNodeStyleSetMargin(System.IntPtr node, UnityEngine.Yoga.YogaEdge edge, System.Single margin)

Disassembly:
	0x03CE7204 STR X0, [X21 + 0x5C8]
	0x03CE7208 MOV X0, X20
	0x03CE720C MOV W1, W19
	0x03CE7210 LDP X20, X19, [X31 + 0x10]
	0x03CE7214 LDP X30, X21, [X31], #0x20
	0x03CE7218 BR X2
	0x03CE721C STP X30, X21, [X31 - 0x20]!
	0x03CE7220 STP X20, X19, [X31 + 0x10]
	0x03CE7224 ADRP X21, 0x700000
	0x03CE7228 LDR X2, [X21 + 0x5D0]
	0x03CE722C LDR X20, [X0 + 0x10]
	0x03CE7230 MOV W19, W1
	0x03CE7234 CBNZ X2, 0x3CE724C
	0x03CE7238 ADRP X0, 0xFFFFFFFFFCE0E000
	0x03CE723C ADD X0, X0, 0xBAD
	0x03CE7240 BL 0x1C16CB8
	0x03CE7244 MOV X2, X0
	0x03CE7248 STR X0, [X21 + 0x5D0]
	0x03CE724C MOV X0, X20
	0x03CE7250 MOV W1, W19
	0x03CE7254 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x701000
	007 Move X2, [X21+1688]
	008 Move V8, V0
	009 Move W19, W1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -52162560
	014 Add X0, X0, 1178
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+1688], X0
	018 Move X0, X20
	019 Move W1, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

Method: System.Void YGNodeStyleSetMarginPercent(System.IntPtr node, UnityEngine.Yoga.YogaEdge edge, System.Single margin)

Disassembly:
	0x03CE7258 LDP X30, X21, [X31], #0x20
	0x03CE725C BR X2
	0x03CE7260 STR D8, [X31 - 0x20]!
	0x03CE7264 STR X30, [X31 + 0x8]
	0x03CE7268 STP X20, X19, [X31 + 0x10]
	0x03CE726C ADRP X20, 0x700000
	0x03CE7270 LDR X1, [X20 + 0x5E8]
	0x03CE7274 LDR X19, [X0 + 0x10]
	0x03CE7278 MOV V8.16B, V0.16B
	0x03CE727C CBNZ X1, 0x3CE7294
	0x03CE7280 ADRP X0, 0xFFFFFFFFFCE22000
	0x03CE7284 ADD X0, X0, 0xDDD
	0x03CE7288 BL 0x1C16CB8
	0x03CE728C MOV X1, X0
	0x03CE7290 STR X0, [X20 + 0x5E8]
	0x03CE7294 MOV X0, X19
	0x03CE7298 LDP X20, X19, [X31 + 0x10]
	0x03CE729C LDR X30, [X31 + 0x8]
	0x03CE72A0 MOV V0.16B, V8.16B
	0x03CE72A4 LDR V8, [X31], #0x20
	0x03CE72A8 BR X1

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x701000
	007 Move X2, [X21+1696]
	008 Move V8, V0
	009 Move W19, W1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -52178944
	014 Add X0, X0, 2757
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+1696], X0
	018 Move X0, X20
	019 Move W1, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

Method: System.Void YGNodeStyleSetMarginAuto(System.IntPtr node, UnityEngine.Yoga.YogaEdge edge)

Disassembly:
	0x03CE72AC STR D8, [X31 - 0x20]!
	0x03CE72B0 STR X30, [X31 + 0x8]
	0x03CE72B4 STP X20, X19, [X31 + 0x10]
	0x03CE72B8 ADRP X20, 0x700000
	0x03CE72BC LDR X1, [X20 + 0x5F0]
	0x03CE72C0 LDR X19, [X0 + 0x10]
	0x03CE72C4 MOV V8.16B, V0.16B
	0x03CE72C8 CBNZ X1, 0x3CE72E0
	0x03CE72CC ADRP X0, 0xFFFFFFFFFCE26000
	0x03CE72D0 ADD X0, X0, 0xC3F
	0x03CE72D4 BL 0x1C16CB8
	0x03CE72D8 MOV X1, X0
	0x03CE72DC STR X0, [X20 + 0x5F0]
	0x03CE72E0 MOV X0, X19
	0x03CE72E4 LDP X20, X19, [X31 + 0x10]
	0x03CE72E8 LDR X30, [X31 + 0x8]
	0x03CE72EC MOV V0.16B, V8.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x701000
	006 Move X2, [X21+1704]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52301824
	012 Add X0, X0, 2206
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1704], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void YGNodeStyleSetPadding(System.IntPtr node, UnityEngine.Yoga.YogaEdge edge, System.Single padding)

Disassembly:
	0x03CE72F0 LDR V8, [X31], #0x20
	0x03CE72F4 BR X1
	0x03CE72F8 STR D8, [X31 - 0x20]!
	0x03CE72FC STR X30, [X31 + 0x8]
	0x03CE7300 STP X20, X19, [X31 + 0x10]
	0x03CE7304 ADRP X20, 0x700000
	0x03CE7308 LDR X1, [X20 + 0x5F8]
	0x03CE730C LDR X19, [X0 + 0x10]
	0x03CE7310 MOV V8.16B, V0.16B
	0x03CE7314 CBNZ X1, 0x3CE732C
	0x03CE7318 ADRP X0, 0xFFFFFFFFFCE32000
	0x03CE731C ADD X0, X0, 0x64E
	0x03CE7320 BL 0x1C16CB8
	0x03CE7324 MOV X1, X0
	0x03CE7328 STR X0, [X20 + 0x5F8]
	0x03CE732C MOV X0, X19
	0x03CE7330 LDP X20, X19, [X31 + 0x10]
	0x03CE7334 LDR X30, [X31 + 0x8]
	0x03CE7338 MOV V0.16B, V8.16B
	0x03CE733C LDR V8, [X31], #0x20
	0x03CE7340 BR X1

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x701000
	007 Move X2, [X21+1712]
	008 Move V8, V0
	009 Move W19, W1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -52236288
	014 Add X0, X0, 1018
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+1712], X0
	018 Move X0, X20
	019 Move W1, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

Method: System.Void YGNodeStyleSetPaddingPercent(System.IntPtr node, UnityEngine.Yoga.YogaEdge edge, System.Single padding)

Disassembly:
	0x03CE7344 STR D8, [X31 - 0x20]!
	0x03CE7348 STR X30, [X31 + 0x8]
	0x03CE734C STP X20, X19, [X31 + 0x10]
	0x03CE7350 UBFM X8, X1, 0x20, 0x3F
	0x03CE7354 CMP W8, 0x2
	0x03CE7358 FMOV S8, W1
	0x03CE735C B.NE 0x3CE7388
	0x03CE7360 ADRP X20, 0x700000
	0x03CE7364 LDR X1, [X20 + 0x608]
	0x03CE7368 LDR X19, [X0 + 0x10]
	0x03CE736C CBNZ X1, 0x3CE73E8
	0x03CE7370 ADRP X0, 0xFFFFFFFFFCE16000
	0x03CE7374 ADD X0, X0, 0xC94
	0x03CE7378 BL 0x1C16CB8
	0x03CE737C MOV X1, X0
	0x03CE7380 STR X0, [X20 + 0x608]
	0x03CE7384 B 0x3CE73E8
	0x03CE7388 LDR X19, [X0 + 0x10]
	0x03CE738C CMP W8, 0x3
	0x03CE7390 B.NE 0x3CE73C8
	0x03CE7394 ADRP X20, 0x700000

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x701000
	007 Move X2, [X21+1720]
	008 Move V8, V0
	009 Move W19, W1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -52277248
	014 Add X0, X0, 2843
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+1720], X0
	018 Move X0, X20
	019 Move W1, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

Method: System.Void YGNodeStyleSetBorder(System.IntPtr node, UnityEngine.Yoga.YogaEdge edge, System.Single border)

Disassembly:
	0x03CE7398 LDR X1, [X20 + 0x610]
	0x03CE739C CBNZ X1, 0x3CE73B4
	0x03CE73A0 ADRP X0, 0xFFFFFFFFFCE08000
	0x03CE73A4 ADD X0, X0, 0x8AA
	0x03CE73A8 BL 0x1C16CB8
	0x03CE73AC MOV X1, X0
	0x03CE73B0 STR X0, [X20 + 0x610]
	0x03CE73B4 MOV X0, X19
	0x03CE73B8 LDP X20, X19, [X31 + 0x10]
	0x03CE73BC LDR X30, [X31 + 0x8]
	0x03CE73C0 LDR V8, [X31], #0x20
	0x03CE73C4 BR X1
	0x03CE73C8 ADRP X20, 0x700000
	0x03CE73CC LDR X1, [X20 + 0x600]
	0x03CE73D0 CBNZ X1, 0x3CE73E8
	0x03CE73D4 ADRP X0, 0xFFFFFFFFFCE22000
	0x03CE73D8 ADD X0, X0, 0xE26
	0x03CE73DC BL 0x1C16CB8
	0x03CE73E0 MOV X1, X0
	0x03CE73E4 STR X0, [X20 + 0x600]
	0x03CE73E8 MOV X0, X19

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x701000
	007 Move X2, [X21+1728]
	008 Move V8, V0
	009 Move W19, W1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -52391936
	014 Add X0, X0, 2363
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+1728], X0
	018 Move X0, X20
	019 Move W1, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

Method: System.Single YGNodeLayoutGetLeft(System.IntPtr node)

Disassembly:
	0x03CE73EC LDP X20, X19, [X31 + 0x10]
	0x03CE73F0 LDR X30, [X31 + 0x8]
	0x03CE73F4 MOV V0.16B, V8.16B
	0x03CE73F8 LDR V8, [X31], #0x20
	0x03CE73FC BR X1
	0x03CE7400 STR D8, [X31 - 0x20]!
	0x03CE7404 STR X30, [X31 + 0x8]
	0x03CE7408 STP X20, X19, [X31 + 0x10]
	0x03CE740C UBFM X8, X1, 0x20, 0x3F
	0x03CE7410 CMP W8, 0x2
	0x03CE7414 FMOV S8, W1
	0x03CE7418 B.NE 0x3CE7444
	0x03CE741C ADRP X20, 0x700000
	0x03CE7420 LDR X1, [X20 + 0x620]
	0x03CE7424 LDR X19, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x701000
	005 Move X1, [X20+1736]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52342784
	010 Add X0, X0, 3123
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1736], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single YGNodeLayoutGetTop(System.IntPtr node)

Disassembly:
	0x03CE7428 CBNZ X1, 0x3CE74A4
	0x03CE742C ADRP X0, 0xFFFFFFFFFCE3C000
	0x03CE7430 ADD X0, X0, 0xA74
	0x03CE7434 BL 0x1C16CB8
	0x03CE7438 MOV X1, X0
	0x03CE743C STR X0, [X20 + 0x620]
	0x03CE7440 B 0x3CE74A4
	0x03CE7444 LDR X19, [X0 + 0x10]
	0x03CE7448 CMP W8, 0x3
	0x03CE744C B.NE 0x3CE7484
	0x03CE7450 ADRP X20, 0x700000
	0x03CE7454 LDR X1, [X20 + 0x628]
	0x03CE7458 CBNZ X1, 0x3CE7470
	0x03CE745C ADRP X0, 0xFFFFFFFFFCE22000
	0x03CE7460 ADD X0, X0, 0xE74

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x701000
	005 Move X1, [X20+1744]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52391936
	010 Add X0, X0, 2464
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1744], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single YGNodeLayoutGetRight(System.IntPtr node)

Disassembly:
	0x03CE7464 BL 0x1C16CB8
	0x03CE7468 MOV X1, X0
	0x03CE746C STR X0, [X20 + 0x628]
	0x03CE7470 MOV X0, X19
	0x03CE7474 LDP X20, X19, [X31 + 0x10]
	0x03CE7478 LDR X30, [X31 + 0x8]
	0x03CE747C LDR V8, [X31], #0x20
	0x03CE7480 BR X1
	0x03CE7484 ADRP X20, 0x700000
	0x03CE7488 LDR X1, [X20 + 0x618]
	0x03CE748C CBNZ X1, 0x3CE74A4
	0x03CE7490 ADRP X0, 0xFFFFFFFFFCE1C000
	0x03CE7494 ADD X0, X0, 0xB99
	0x03CE7498 BL 0x1C16CB8
	0x03CE749C MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x701000
	005 Move X1, [X20+1752]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52146176
	010 Add X0, X0, 735
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1752], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single YGNodeLayoutGetBottom(System.IntPtr node)

Disassembly:
	0x03CE74A0 STR X0, [X20 + 0x618]
	0x03CE74A4 MOV X0, X19
	0x03CE74A8 LDP X20, X19, [X31 + 0x10]
	0x03CE74AC LDR X30, [X31 + 0x8]
	0x03CE74B0 MOV V0.16B, V8.16B
	0x03CE74B4 LDR V8, [X31], #0x20
	0x03CE74B8 BR X1
	0x03CE74BC STR D8, [X31 - 0x20]!
	0x03CE74C0 STR X30, [X31 + 0x8]
	0x03CE74C4 STP X20, X19, [X31 + 0x10]
	0x03CE74C8 UBFM X8, X1, 0x20, 0x3F
	0x03CE74CC CMP W8, 0x2
	0x03CE74D0 FMOV S8, W1
	0x03CE74D4 B.NE 0x3CE7500
	0x03CE74D8 ADRP X20, 0x700000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x701000
	005 Move X1, [X20+1760]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52359168
	010 Add X0, X0, 3309
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1760], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single YGNodeLayoutGetWidth(System.IntPtr node)

Disassembly:
	0x03CE74DC LDR X1, [X20 + 0x638]
	0x03CE74E0 LDR X19, [X0 + 0x10]
	0x03CE74E4 CBNZ X1, 0x3CE7560
	0x03CE74E8 ADRP X0, 0xFFFFFFFFFCE24000
	0x03CE74EC ADD X0, X0, 0xA74
	0x03CE74F0 BL 0x1C16CB8
	0x03CE74F4 MOV X1, X0
	0x03CE74F8 STR X0, [X20 + 0x638]
	0x03CE74FC B 0x3CE7560
	0x03CE7500 LDR X19, [X0 + 0x10]
	0x03CE7504 CMP W8, 0x3
	0x03CE7508 B.NE 0x3CE7540
	0x03CE750C ADRP X20, 0x700000
	0x03CE7510 LDR X1, [X20 + 0x640]
	0x03CE7514 CBNZ X1, 0x3CE752C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x701000
	005 Move X1, [X20+1768]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52310016
	010 Add X0, X0, 3043
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1768], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single YGNodeLayoutGetHeight(System.IntPtr node)

Disassembly:
	0x03CE7518 ADRP X0, 0xFFFFFFFFFCE12000
	0x03CE751C ADD X0, X0, 0xDF4
	0x03CE7520 BL 0x1C16CB8
	0x03CE7524 MOV X1, X0
	0x03CE7528 STR X0, [X20 + 0x640]
	0x03CE752C MOV X0, X19
	0x03CE7530 LDP X20, X19, [X31 + 0x10]
	0x03CE7534 LDR X30, [X31 + 0x8]
	0x03CE7538 LDR V8, [X31], #0x20
	0x03CE753C BR X1
	0x03CE7540 ADRP X20, 0x700000
	0x03CE7544 LDR X1, [X20 + 0x630]
	0x03CE7548 CBNZ X1, 0x3CE7560
	0x03CE754C ADRP X0, 0xFFFFFFFFFCE16000
	0x03CE7550 ADD X0, X0, 0xCE9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x701000
	005 Move X1, [X20+1776]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52318208
	010 Add X0, X0, 2367
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1776], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single YGNodeLayoutGetMargin(System.IntPtr node, UnityEngine.Yoga.YogaEdge edge)

Disassembly:
	0x03CE7554 BL 0x1C16CB8
	0x03CE7558 MOV X1, X0
	0x03CE755C STR X0, [X20 + 0x630]
	0x03CE7560 MOV X0, X19
	0x03CE7564 LDP X20, X19, [X31 + 0x10]
	0x03CE7568 LDR X30, [X31 + 0x8]
	0x03CE756C MOV V0.16B, V8.16B
	0x03CE7570 LDR V8, [X31], #0x20
	0x03CE7574 BR X1
	0x03CE7578 STR D8, [X31 - 0x20]!
	0x03CE757C STR X30, [X31 + 0x8]
	0x03CE7580 STP X20, X19, [X31 + 0x10]
	0x03CE7584 LDR X19, [X0 + 0x10]
	0x03CE7588 UBFM X8, X1, 0x20, 0x3F
	0x03CE758C CMP X8, 0x2
	0x03CE7590 FMOV S8, W1
	0x03CE7594 B.NE 0x3CE75BC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x701000
	006 Move X2, [X21+1784]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52142080
	012 Add X0, X0, 3903
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1784], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Single YGNodeLayoutGetPadding(System.IntPtr node, UnityEngine.Yoga.YogaEdge edge)

Disassembly:
	0x03CE7598 ADRP X20, 0x700000
	0x03CE759C LDR X1, [X20 + 0x670]
	0x03CE75A0 CBNZ X1, 0x3CE75DC
	0x03CE75A4 ADRP X0, 0xFFFFFFFFFCE18000
	0x03CE75A8 ADD X0, X0, 0x9AB
	0x03CE75AC BL 0x1C16CB8
	0x03CE75B0 MOV X1, X0
	0x03CE75B4 STR X0, [X20 + 0x670]
	0x03CE75B8 B 0x3CE75DC
	0x03CE75BC ADRP X20, 0x700000
	0x03CE75C0 LDR X1, [X20 + 0x668]
	0x03CE75C4 CBNZ X1, 0x3CE75DC
	0x03CE75C8 ADRP X0, 0xFFFFFFFFFCE36000
	0x03CE75CC ADD X0, X0, 0x784
	0x03CE75D0 BL 0x1C16CB8
	0x03CE75D4 MOV X1, X0
	0x03CE75D8 STR X0, [X20 + 0x668]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x701000
	006 Move X2, [X21+1792]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52228096
	012 Add X0, X0, 965
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1792], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Single YGNodeLayoutGetBorder(System.IntPtr node, UnityEngine.Yoga.YogaEdge edge)

Disassembly:
	0x03CE75DC MOV X0, X19
	0x03CE75E0 LDP X20, X19, [X31 + 0x10]
	0x03CE75E4 LDR X30, [X31 + 0x8]
	0x03CE75E8 MOV V0.16B, V8.16B
	0x03CE75EC LDR V8, [X31], #0x20
	0x03CE75F0 BR X1
	0x03CE75F4 STR D8, [X31 - 0x20]!
	0x03CE75F8 STR X30, [X31 + 0x8]
	0x03CE75FC STP X20, X19, [X31 + 0x10]
	0x03CE7600 LDR X19, [X0 + 0x10]
	0x03CE7604 UBFM X8, X1, 0x20, 0x3F
	0x03CE7608 CMP X8, 0x2
	0x03CE760C FMOV S8, W1
	0x03CE7610 B.NE 0x3CE7638
	0x03CE7614 ADRP X20, 0x700000
	0x03CE7618 LDR X1, [X20 + 0x680]
	0x03CE761C CBNZ X1, 0x3CE7658

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x701000
	006 Move X2, [X21+1800]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52252672
	012 Add X0, X0, 2162
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1800], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

