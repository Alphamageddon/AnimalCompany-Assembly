Type: Interop/Sys

Method: Interop/ErrorInfo GetLastErrorInfo()

Disassembly:
	0x0320A954 SUB X31, X31, 0x40
	0x0320A958 STP X30, X23, [X31 + 0x10]
	0x0320A95C STP X22, X21, [X31 + 0x20]
	0x0320A960 STP X20, X19, [X31 + 0x30]
	0x0320A964 ADRP X21, 0x11D2000
	0x0320A968 LDRB W8, [X21 + 0x280]
	0x0320A96C MOV X19, X1
	0x0320A970 MOV X20, X0
	0x0320A974 TBNZ X8, 0x0, 0x320A998
	0x0320A978 ADRP X0, 0xF17000
	0x0320A97C LDR X0, [X0 + 0x8A8]
	0x0320A980 BL 0x1C16CF4
	0x0320A984 ADRP X0, 0xEE9000
	0x0320A988 LDR X0, [X0 + 0x6C0]
	0x0320A98C BL 0x1C16CF4
	0x0320A990 MOVZ W8, 0x1
	0x0320A994 STRB W8, [X21 + 0x280]
	0x0320A998 CBZ X19, 0x320AA04
	0x0320A99C ADRP X23, 0xF17000
	0x0320A9A0 LDR X23, [X23 + 0x8A8]
	0x0320A9A4 LDR X8, [X20]
	0x0320A9A8 ADRP X22, 0xEE9000
	0x0320A9AC ADD X1, X31, 0x8
	0x0320A9B0 LDR X0, [X23]
	0x0320A9B4 LDR X22, [X22 + 0x6C0]
	0x0320A9B8 STR X8, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x11D3000
	005 Move X20, 0xF12000
	006 Move W8, [X19+623]
	007 Move X20, [X20+2128]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF12000
	013 Move X0, [X0+2128]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+623], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X0, X31
	023 Call Marshal.GetLastWin32Error
	024 Move W1, W0
	025 Add X0, X31, 8
	026 Move [X31+8], X31
	027 Call ErrorInfo..ctor, X0, X1
	028 Move X0, [X31+8]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: System.String StrError(System.Int32 platformErrno)

Disassembly:
	0x0320A784 MOV X0, X19
	0x0320A788 MOV X1, X31
	0x0320A78C BL 0x33E14E4
	0x0320A790 CBNZ X21, 0x320A7A4
	0x0320A794 LDP X20, X19, [X31 + 0x20]
	0x0320A798 LDP X30, X21, [X31 + 0x10]
	0x0320A79C ADD X31, X31, 0x30
	0x0320A7A0 RET
	0x0320A7A4 MOV X0, X21
	0x0320A7A8 BL 0x1C16F18
	0x0320A7AC ADRP X0, 0xEE9000
	0x0320A7B0 LDR X0, [X0 + 0x5B0]
	0x0320A7B4 BL 0x1C16D08
	0x0320A7B8 BL 0x1C16F10
	0x0320A7BC MOV X20, X0
	0x0320A7C0 MOV X1, X31
	0x0320A7C4 BL 0x337DEC0
	0x0320A7C8 ADRP X0, 0xF17000
	0x0320A7CC LDR X0, [X0 + 0x898]
	0x0320A7D0 BL 0x1C16D08
	0x0320A7D4 MOV X1, X0
	0x0320A7D8 MOV X0, X20
	0x0320A7DC BL 0x1C16DEC
	0x0320A7E0 B 0x320A7EC
	0x0320A7E4 B 0x320A7EC
	0x0320A7E8 B 0x320A7EC
	0x0320A7EC MOV X20, X0
	0x0320A7F0 CMP W1, 0x1
	0x0320A7F4 B.NE 0x320A80C
	0x0320A7F8 MOV X0, X20
	0x0320A7FC BL 0x3EB1AD0
	0x0320A800 LDR X21, [X0]
	0x0320A804 BL 0x3EB1AE0
	0x0320A808 B 0x320A77C
	0x0320A80C MOV X21, X31
	0x0320A810 B 0x320A818
	0x0320A814 MOV X20, X0
	0x0320A818 LDRB W8, [X31 + 0xC]
	0x0320A81C CBZ W8, 0x320A82C
	0x0320A820 MOV X0, X19
	0x0320A824 MOV X1, X31
	0x0320A828 BL 0x33E14E4
	0x0320A82C CBNZ X21, 0x320A838
	0x0320A830 MOV X0, X20
	0x0320A834 BL 0x1D2C690
	0x0320A838 MOV X0, X21
	0x0320A83C BL 0x1C16F18
	0x0320A840 BL 0x1990590
	0x0320A844 STP X30, X21, [X31 - 0x20]!
	0x0320A848 STP X20, X19, [X31 + 0x10]
	0x0320A84C ADRP X19, 0x11D2000
	0x0320A850 ADRP X21, 0xEEF000
	0x0320A854 ADRP X20, 0xF17000
	0x0320A858 LDRB W8, [X19 + 0x27E]
	0x0320A85C LDR X21, [X21 + 0xCC0]
	0x0320A860 LDR X20, [X20 + 0x860]
	0x0320A864 TBNZ X8, 0x0, 0x320A888
	0x0320A868 ADRP X0, 0xF17000
	0x0320A86C LDR X0, [X0 + 0x860]
	0x0320A870 BL 0x1C16CF4
	0x0320A874 ADRP X0, 0xEEF000
	0x0320A878 LDR X0, [X0 + 0xCC0]
	0x0320A87C BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Add X29, X31, 0
	009 Subtract X31, X31, 16
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X21+40]
	012 Move X20, 0x11D3000
	013 Move X23, 0xF15000
	014 Move W19, W0
	015 Move [X29-8], X8
	016 Move W8, [X20+624]
	017 Move X23, [X23+3448]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xF12000
	023 Move X0, [X0+2128]
	024 Call 0x1C17CF4
	025 Move X0, 0xF15000
	026 Move X0, [X0+3448]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+624], W8
	030 Move X22, 0xF12000
	031 Move X22, [X22+2128]
	032 Subtract X20, X31, 1024
	033 Add X31, X20, 0
	034 Move W2, 1024
	035 Move X0, X20
	036 Move W1, W31
	037 Call 0x3EB2B10
	038 Move X0, [X23]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move W2, 1024
	044 Move W0, W19
	045 Move X1, X20
	046 Call 0x3EB2C90
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 Move X1, X31
	050 Call IntPtr.op_Explicit, X0
	051 Move X8, [X22]
	052 Move X19, X0
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {58}
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Move X0, X19
	059 Move X1, X31
	060 Call Marshal.PtrToStringAnsi, X0
	061 Move X8, [X21+40]
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X31, X29, 0
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X23, [X31+16]
	070 Move X29, [X31+64]
	071 Move X30, [X31+72]
	072 Return X0
	073 Call 0x3EB2B20

Method: Interop/Error ConvertErrorPlatformToPal(System.Int32 platformErrno)

Disassembly:
	0x0320A768 BL 0x1C16DFC

ISIL:
	001 Call 0x3EB2C80
	002 Return X0

Method: System.Int32 ConvertErrorPalToPlatform(Interop/Error error)

Disassembly:
	0x0320A780 CBZ W8, 0x320A790

ISIL:
	001 Call 0x3EB2C60
	002 Return X0

Method: System.Byte* StrErrorR(System.Int32 platformErrno, System.Byte* buffer, System.Int32 bufferSize)

Disassembly:
	0x0320A9BC BL 0x1C16E04

ISIL:
	001 Call 0x3EB2C90
	002 Return X0

Method: System.Void GetNonCryptographicallySecureRandomBytes(System.Byte* buffer, System.Int32 length)

Disassembly:
	0x0320A6FC LDR X19, [X8]

ISIL:
	001 Call 0x3EB2C70
	002 Return 

Method: System.IntPtr OpenDir(System.String path)

Disassembly:
	0x0320A9C0 MOV X1, X31
	0x0320A9C4 BL 0x33BE520
	0x0320A9C8 MOV X21, X0
	0x0320A9CC MOV X0, X19
	0x0320A9D0 MOV X1, X31
	0x0320A9D4 BL 0x33BE520
	0x0320A9D8 LDR X8, [X22]
	0x0320A9DC MOV X22, X0
	0x0320A9E0 LDR W9, [X8 + 0xE0]
	0x0320A9E4 CBNZ W9, 0x320A9F0
	0x0320A9E8 MOV X0, X8
	0x0320A9EC BL 0x1C16DFC
	0x0320A9F0 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Call 0x1C1827C
	005 Move X19, X0
	006 Call 0x3EB2CA0
	007 Move X20, X0
	008 Call 0x1C17CAC
	009 Move X0, X19
	010 Call 0x1C18290
	011 Move X0, X20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return X0

Method: System.Int32 GetReadDirRBufferSize()

Disassembly:
	0x0320A9F4 MOV X1, X22

ISIL:
	001 Call 0x3EB2CB0
	002 Return X0

Method: System.Int32 ReadDirR(System.IntPtr dir, System.Byte* buffer, System.Int32 bufferSize, out Interop/Sys/DirectoryEntry outputEntry)

Disassembly:
	0x0320A9F8 MOV X2, X31

ISIL:
	001 Call 0x3EB2CC0
	002 Return X0

Method: System.Int32 CloseDir(System.IntPtr dir)

Disassembly:
	0x0320A9FC BL 0x3395F0C
	0x0320AA00 TBZ X0, 0x0, 0x320AA0C
	0x0320AA04 MOV W0, W31
	0x0320AA08 B 0x320AA3C
	0x0320AA0C LDR X8, [X19]
	0x0320AA10 LDR X1, [X23]
	0x0320AA14 LDR X8, [X8 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Call 0x3EB2CD0
	004 Move W19, W0
	005 Call 0x1C17CAC
	006 Move W0, W19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0

Method: System.Int32 ReadLink(System.String path, System.Byte[] buffer, System.Int32 bufferSize)

Disassembly:
	0x0320AA18 LDR X9, [X1 + 0x40]
	0x0320AA1C CMP X8, X9
	0x0320AA20 B.NE 0x320AA50
	0x0320AA24 LDR X20, [X20]
	0x0320AA28 MOV X0, X19
	0x0320AA2C BL 0x1C16E08
	0x0320AA30 LDR X8, [X0]
	0x0320AA34 CMP X20, X8
	0x0320AA38 CSET W0, EQ
	0x0320AA3C LDP X20, X19, [X31 + 0x30]
	0x0320AA40 LDP X22, X21, [X31 + 0x20]
	0x0320AA44 LDP X30, X23, [X31 + 0x10]
	0x0320AA48 ADD X31, X31, 0x40
	0x0320AA4C RET
	0x0320AA50 MOV X0, X19
	0x0320AA54 BL 0x1C171E0
	0x0320AA58 STR X30, [X31 - 0x10]!
	0x0320AA5C LDR X0, [X0]
	0x0320AA60 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W19, W2
	006 Move X20, X1
	007 Call 0x1C1827C
	008 Add X8, X20, 32
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSEL not yet implemented."
	011 Move W2, W19
	012 Move X21, X0
	013 Call 0x3EB2CE0
	014 Move W19, W0
	015 Call 0x1C17CAC
	016 Move X0, X21
	017 Call 0x1C18290
	018 Move W0, W19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return X0

Method: System.String ReadLink(System.String path)

Disassembly:
	0x0320AA64 BL 0x33C693C
	0x0320AA68 STR X0, [X31 + 0x8]
	0x0320AA6C ADD X0, X31, 0x8
	0x0320AA70 MOV X1, X31
	0x0320AA74 BL 0x33C24FC
	0x0320AA78 LDR X30, [X31], #0x10
	0x0320AA7C RET
	0x0320AA80 B 0x1C16888
	0x0320AA84 LDR X0, [X0]
	0x0320AA88 B 0x1C16888
	0x0320AA8C STR X30, [X31 - 0x10]!
	0x0320AA90 LDR X8, [X0]
	0x0320AA94 CBZ X8, 0x320AAA4
	0x0320AA98 LDR X0, [X8 + 0x10]
	0x0320AA9C LDR X30, [X31], #0x10
	0x0320AAA0 RET
	0x0320AAA4 BL 0x1C16F20
	0x0320AAA8 STP X30, X19, [X31 - 0x10]!
	0x0320AAAC MOV X19, X0
	0x0320AAB0 MOV X0, X1
	0x0320AAB4 MOV X1, X31
	0x0320AAB8 BL 0x33C6948
	0x0320AABC STR X0, [X19]
	0x0320AAC0 LDP X30, X19, [X31], #0x10
	0x0320AAC4 RET
	0x0320AAC8 B 0x320AACC
	0x0320AACC STP X30, X25, [X31 - 0x40]!
	0x0320AAD0 STP X24, X23, [X31 + 0x10]
	0x0320AAD4 STP X22, X21, [X31 + 0x20]
	0x0320AAD8 STP X20, X19, [X31 + 0x30]
	0x0320AADC ADRP X21, 0x11D2000
	0x0320AAE0 ADRP X20, 0xEF1000
	0x0320AAE4 LDRB W8, [X21 + 0x281]
	0x0320AAE8 LDR X20, [X20 + 0xC60]
	0x0320AAEC MOV X19, X0
	0x0320AAF0 TBNZ X8, 0x0, 0x320AB14
	0x0320AAF4 ADRP X0, 0xEF1000
	0x0320AAF8 LDR X0, [X0 + 0xC60]
	0x0320AAFC BL 0x1C16CF4
	0x0320AB00 ADRP X0, 0xEE9000
	0x0320AB04 LDR X0, [X0 + 0x6C0]
	0x0320AB08 BL 0x1C16CF4
	0x0320AB0C MOVZ W8, 0x1
	0x0320AB10 STRB W8, [X21 + 0x281]
	0x0320AB14 MOV X0, X19
	0x0320AB18 BL 0x320AC14
	0x0320AB1C LDR X8, [X20]
	0x0320AB20 MOV W21, W0
	0x0320AB24 MOV W1, W21
	0x0320AB28 MOV X0, X8
	0x0320AB2C BL 0x1C16D6C
	0x0320AB30 CMP W21, 0x1
	0x0320AB34 MOV X20, X0
	0x0320AB38 B.LT 0x320ABCC
	0x0320AB3C ADRP X23, 0xEE9000
	0x0320AB40 LDR X23, [X23 + 0x6C0]
	0x0320AB44 MOV X22, X31
	0x0320AB48 MOV W24, W21
	0x0320AB4C MOVZ W25, 0x20
	0x0320AB50 LDR X8, [X19]
	0x0320AB54 CBZ X8, 0x320ABE4
	0x0320AB58 LDR X8, [X8 + 0x18]
	0x0320AB5C ADD X8, X25, X8
	0x0320AB60 LDUR X0, [X8 - 0x20]
	0x0320AB64 BL 0x1C16888
	0x0320AB68 LDR X8, [X23]
	0x0320AB6C MOV X21, X0
	0x0320AB70 LDR W9, [X8 + 0xE0]
	0x0320AB74 CBNZ W9, 0x320AB80
	0x0320AB78 MOV X0, X8
	0x0320AB7C BL 0x1C16DFC
	0x0320AB80 MOV X0, X21
	0x0320AB84 MOV X1, X31
	0x0320AB88 BL 0x338C698
	0x0320AB8C CBZ X20, 0x320ABE4
	0x0320AB90 MOV X21, X0
	0x0320AB94 CBZ X0, 0x320ABAC
	0x0320AB98 LDR X8, [X20]
	0x0320AB9C MOV X0, X21
	0x0320ABA0 LDR X1, [X8 + 0x40]
	0x0320ABA4 BL 0x1C16E00
	0x0320ABA8 CBZ X0, 0x320ABEC
	0x0320ABAC LDR W8, [X20 + 0x18]
	0x0320ABB0 CMP X22, X8
	0x0320ABB4 B.CS 0x320ABE8
	0x0320ABB8 ADD X22, X22, 0x1
	0x0320ABBC STR X21, [X20, X25, LSL]
	0x0320ABC0 CMP X24, X22
	0x0320ABC4 ADD X25, X25, 0x8
	0x0320ABC8 B.NE 0x320AB50
	0x0320ABCC MOV X0, X20
	0x0320ABD0 LDP X20, X19, [X31 + 0x30]
	0x0320ABD4 LDP X22, X21, [X31 + 0x20]
	0x0320ABD8 LDP X24, X23, [X31 + 0x10]
	0x0320ABDC LDP X30, X25, [X31], #0x40
	0x0320ABE0 RET
	0x0320ABE4 BL 0x1C16F20
	0x0320ABE8 BL 0x1C16F28
	0x0320ABEC BL 0x1C16F44
	0x0320ABF0 MOV X1, X31
	0x0320ABF4 BL 0x1C16DEC
	0x0320ABF8 STR X30, [X31 - 0x10]!
	0x0320ABFC LDR X8, [X0]
	0x0320AC00 CBZ X8, 0x320AC10
	0x0320AC04 LDRH W0, [X8 + 0x10]
	0x0320AC08 LDR X30, [X31], #0x10
	0x0320AC0C RET
	0x0320AC10 BL 0x1C16F20
	0x0320AC14 STR X30, [X31 - 0x10]!
	0x0320AC18 LDR X8, [X0]
	0x0320AC1C CBZ X8, 0x320AC50
	0x0320AC20 LDR X8, [X8 + 0x18]
	0x0320AC24 CBZ X8, 0x320AC44
	0x0320AC28 MOV W0, W31
	0x0320AC2C LDR X9, [X8]
	0x0320AC30 CBZ X9, 0x320AC48
	0x0320AC34 ADDS X8, X8, 0x8
	0x0320AC38 ADD W0, W0, 0x1
	0x0320AC3C B.NE 0x320AC2C
	0x0320AC40 B 0x320AC48
	0x0320AC44 MOV W0, W31
	0x0320AC48 LDR X30, [X31], #0x10
	0x0320AC4C RET
	0x0320AC50 BL 0x1C16F20
	0x0320AC54 STR X1, [X0]
	0x0320AC58 RET
	0x0320AC5C LDR X0, [X0]
	0x0320AC60 RET
	0x0320AC64 SUB X31, X31, 0x40
	0x0320AC68 STP X30, X23, [X31 + 0x10]
	0x0320AC6C STP X22, X21, [X31 + 0x20]
	0x0320AC70 STP X20, X19, [X31 + 0x30]
	0x0320AC74 ADRP X21, 0x11D2000
	0x0320AC78 LDRB W8, [X21 + 0x282]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X20, 0x11D3000
	011 Move W8, [X20+625]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xF15000
	018 Move X0, [X0+3408]
	019 Call 0x1C17CF4
	020 Move X0, 0xF15000
	021 Move X0, [X0+3432]
	022 Call 0x1C17CF4
	023 Move X0, 0xF15000
	024 Move X0, [X0+3448]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+625], W8
	028 Move X22, 0xF15000
	029 Move X23, 0xF15000
	030 Move X24, 0xF15000
	031 Move X22, [X22+3432]
	032 Move X23, [X23+3408]
	033 Move X24, [X24+3448]
	034 Move W20, 256
	035 Add X25, X31, 24
	036 Move [X31+24], X31
	037 Move X0, [X22]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X21, [X23]
	043 Move X0, [X21+32]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+192]
	051 Move X0, [X8+8]
	052 Move W8, [X0+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {58}
	057 Call 0x1C5D684
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, [X21+32]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move X8, [X0+192]
	070 Move X0, [X8+8]
	071 Move W8, [X0+309]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {77}
	076 Call 0x1C5D684
	077 Move X8, [X0+184]
	078 Move X0, [X8]
	079 Compare X0, 0
	080 JumpIfEqual {152}
	081 Move X8, [X0]
	082 Move W1, W20
	083 Move X9, [X8+376]
	084 Move X2, [X8+384]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move [X31+16], X25
	087 Move [X31+24], X0
	088 Move [X31+8], X31
	089 Compare X0, 0
	090 JumpIfEqual {122}
	091 Move X21, X0
	092 Move X0, [X24]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move W2, [X21+24]
	098 Move X0, X19
	099 Move X1, X21
	100 Call Sys.ReadLink, X0, X1, X2
	101 Move W21, W0
	102 Move TEMP, X0
	103 And TEMP, TEMP, -2147483648
	104 Compare TEMP, -2147483648
	105 JumpIfEqual {151}
	106 Move X8, [X31+24]
	107 Compare X8, 0
	108 JumpIfEqual {123}
	109 Move W8, [X8+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X0, X31
	112 Call Encoding.get_UTF8
	113 Compare X0, 0
	114 JumpIfEqual {124}
	115 Move X8, [X0]
	116 Move X1, [X31+24]
	117 Move X9, [X8+904]
	118 Move X4, [X8+912]
	119 Move W2, W31
	120 Move W3, W21
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Call 0x1C17F20
	123 Call 0x1C17F20
	124 Call 0x1C17F20
	125 Move X21, X0
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X0, X21
	128 Call 0x3EB2AD0
	129 Move X8, [X0]
	130 Move [X31+8], X8
	131 Call 0x3EB2AE0
	132 Add X0, X31, 8
	133 Call 0x1BB4A54
	134 Move W20, W20
	135 ShiftRight W20, 31
	136 And W20, W20, 0x3FFFFFFF
	137 Move X21, X0
	138 Add X0, X31, 8
	139 Call 0x1BB4A54
	140 Move X0, X21
	141 Move X20, [X31+80]
	142 Move X19, [X31+88]
	143 Move X22, [X31+64]
	144 Move X21, [X31+72]
	145 Move X24, [X31+48]
	146 Move X23, [X31+56]
	147 Move X30, [X31+32]
	148 Move X25, [X31+40]
	149 Add X31, X31, 96
	150 Return X0
	151 Move X21, X31
	152 Call 0x1C17F20
	153 Move X21, X0
	154 Add X0, X31, 8
	155 Call 0x1BB4A54
	156 Move X0, X21
	157 Call 0x1D2D690
	158 Call 0x1991590

Method: System.Int32 Stat(System.String path, out Interop/Sys/FileStatus output)

Disassembly:
	0x0320AC7C MOV X19, X1
	0x0320AC80 MOV X20, X0
	0x0320AC84 TBNZ X8, 0x0, 0x320ACA8
	0x0320AC88 ADRP X0, 0xF17000
	0x0320AC8C LDR X0, [X0 + 0x8B0]
	0x0320AC90 BL 0x1C16CF4
	0x0320AC94 ADRP X0, 0xEE9000
	0x0320AC98 LDR X0, [X0 + 0x6C0]
	0x0320AC9C BL 0x1C16CF4
	0x0320ACA0 MOVZ W8, 0x1
	0x0320ACA4 STRB W8, [X21 + 0x282]
	0x0320ACA8 CBZ X19, 0x320AD14
	0x0320ACAC ADRP X23, 0xF17000
	0x0320ACB0 LDR X23, [X23 + 0x8B0]
	0x0320ACB4 LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Call 0x1C1827C
	006 Move X1, X19
	007 Move X20, X0
	008 Call 0x3EB2CF0
	009 Move W19, W0
	010 Call 0x1C17CAC
	011 Move X0, X20
	012 Call 0x1C18290
	013 Move W0, W19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return X0

Method: System.UInt32 GetEGid()

Disassembly:
	0x0320ACB8 ADRP X22, 0xEE9000

ISIL:
	001 Call 0x3EB2D00
	002 Return X0

Method: System.UInt32 GetEUid()

Disassembly:
	0x0320ACBC ADD X1, X31, 0x8

ISIL:
	001 Call 0x3EB2D10
	002 Return X0

Method: System.Int32 LChflagsCanSetHiddenFlag()

Disassembly:
	0x0320ACC0 LDR X0, [X23]

ISIL:
	001 Call 0x3EB2D20
	002 Return X0

Method: System.Int32 MkDir(System.String path, System.Int32 mode)

Disassembly:
	0x0320ACC4 LDR X22, [X22 + 0x6C0]
	0x0320ACC8 STR X8, [X31 + 0x8]
	0x0320ACCC BL 0x1C16E04
	0x0320ACD0 MOV X1, X31
	0x0320ACD4 BL 0x33BE520
	0x0320ACD8 MOV X21, X0
	0x0320ACDC MOV X0, X19
	0x0320ACE0 MOV X1, X31
	0x0320ACE4 BL 0x33BE520
	0x0320ACE8 LDR X8, [X22]
	0x0320ACEC MOV X22, X0
	0x0320ACF0 LDR W9, [X8 + 0xE0]
	0x0320ACF4 CBNZ W9, 0x320AD00
	0x0320ACF8 MOV X0, X8
	0x0320ACFC BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Call 0x1C1827C
	006 Move W1, W19
	007 Move X20, X0
	008 Call 0x3EB2D30
	009 Move W19, W0
	010 Call 0x1C17CAC
	011 Move X0, X20
	012 Call 0x1C18290
	013 Move W0, W19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return X0

Method: System.Int32 Stat(ref System.Byte path, out Interop/Sys/FileStatus output)

Disassembly:
	0x0320AD00 MOV X0, X21
	0x0320AD04 MOV X1, X22
	0x0320AD08 MOV X2, X31
	0x0320AD0C BL 0x3395F0C
	0x0320AD10 TBZ X0, 0x0, 0x320AD1C
	0x0320AD14 MOV W0, W31
	0x0320AD18 B 0x320AD50

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Call 0x3EB2CF0
	004 Move W19, W0
	005 Call 0x1C17CAC
	006 Move W0, W19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0

Method: System.Int32 Stat(System.ReadOnlySpan`1<System.Char> path, out Interop/Sys/FileStatus output)

Disassembly:
	0x0320AD1C LDR X8, [X19]
	0x0320AD20 LDR X1, [X23]
	0x0320AD24 LDR X8, [X8 + 0x40]
	0x0320AD28 LDR X9, [X1 + 0x40]
	0x0320AD2C CMP X8, X9
	0x0320AD30 B.NE 0x320AD68
	0x0320AD34 LDR X20, [X20]
	0x0320AD38 MOV X0, X19
	0x0320AD3C BL 0x1C16E08
	0x0320AD40 LDR X1, [X0]
	0x0320AD44 MOV X0, X20
	0x0320AD48 MOV X2, X31
	0x0320AD4C BL 0x33BE5B0
	0x0320AD50 LDP X20, X19, [X31 + 0x30]
	0x0320AD54 LDP X22, X21, [X31 + 0x20]
	0x0320AD58 LDP X30, X23, [X31 + 0x10]
	0x0320AD5C AND W0, W0, 0x1
	0x0320AD60 ADD X31, X31, 0x40
	0x0320AD64 RET
	0x0320AD68 MOV X0, X19
	0x0320AD6C BL 0x1C171E0
	0x0320AD70 MOV X1, X31
	0x0320AD74 B 0x33C24FC
	0x0320AD78 STR X1, [X0]
	0x0320AD7C RET
	0x0320AD80 LDR X0, [X0]
	0x0320AD84 RET
	0x0320AD88 SUB X31, X31, 0x40
	0x0320AD8C STP X30, X23, [X31 + 0x10]
	0x0320AD90 STP X22, X21, [X31 + 0x20]
	0x0320AD94 STP X20, X19, [X31 + 0x30]
	0x0320AD98 ADRP X21, 0x11D2000
	0x0320AD9C LDRB W8, [X21 + 0x283]
	0x0320ADA0 MOV X19, X1
	0x0320ADA4 MOV X20, X0
	0x0320ADA8 TBNZ X8, 0x0, 0x320ADCC
	0x0320ADAC ADRP X0, 0xF17000
	0x0320ADB0 LDR X0, [X0 + 0x8B8]
	0x0320ADB4 BL 0x1C16CF4
	0x0320ADB8 ADRP X0, 0xEE9000
	0x0320ADBC LDR X0, [X0 + 0x6C0]
	0x0320ADC0 BL 0x1C16CF4
	0x0320ADC4 MOVZ W8, 0x1
	0x0320ADC8 STRB W8, [X21 + 0x283]
	0x0320ADCC CBZ X19, 0x320AE38
	0x0320ADD0 ADRP X23, 0xF17000
	0x0320ADD4 LDR X23, [X23 + 0x8B8]
	0x0320ADD8 LDR X8, [X20]
	0x0320ADDC ADRP X22, 0xEE9000
	0x0320ADE0 ADD X1, X31, 0x8
	0x0320ADE4 LDR X0, [X23]
	0x0320ADE8 LDR X22, [X22 + 0x6C0]
	0x0320ADEC STR X8, [X31 + 0x8]
	0x0320ADF0 BL 0x1C16E04
	0x0320ADF4 MOV X1, X31
	0x0320ADF8 BL 0x33BE520
	0x0320ADFC MOV X21, X0
	0x0320AE00 MOV X0, X19
	0x0320AE04 MOV X1, X31
	0x0320AE08 BL 0x33BE520
	0x0320AE0C LDR X8, [X22]
	0x0320AE10 MOV X22, X0
	0x0320AE14 LDR W9, [X8 + 0xE0]
	0x0320AE18 CBNZ W9, 0x320AE24
	0x0320AE1C MOV X0, X8
	0x0320AE20 BL 0x1C16DFC
	0x0320AE24 MOV X0, X21
	0x0320AE28 MOV X1, X22
	0x0320AE2C MOV X2, X31
	0x0320AE30 BL 0x3395F0C
	0x0320AE34 TBZ X0, 0x0, 0x320AE40
	0x0320AE38 MOV W0, W31
	0x0320AE3C B 0x320AE74
	0x0320AE40 LDR X8, [X19]
	0x0320AE44 LDR X1, [X23]
	0x0320AE48 LDR X8, [X8 + 0x40]
	0x0320AE4C LDR X9, [X1 + 0x40]
	0x0320AE50 CMP X8, X9

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 32
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X23+40]
	014 Move X22, 0x11D3000
	015 Move X25, 0xF18000
	016 Move X24, 0xF15000
	017 Move [X29-8], X8
	018 Move W8, [X22+626]
	019 Move X25, [X25+2096]
	020 Move X24, [X24+3448]
	021 Move X19, X2
	022 Move X20, X1
	023 Move X21, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {39}
	028 Move X0, 0xF18000
	029 Move X0, [X0+2096]
	030 Call 0x1C17CF4
	031 Move X0, 0xF18000
	032 Move X0, [X0+2104]
	033 Call 0x1C17CF4
	034 Move X0, 0xF15000
	035 Move X0, [X0+3448]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+626], W8
	039 Subtract X22, X31, 256
	040 Move [X29-32], X31
	041 Move [X29-24], X31
	042 Move [X29-16], X31
	043 Add X31, X22, 0
	044 Move W2, 256
	045 Move X0, X22
	046 Move W1, W31
	047 Call 0x3EB2B10
	048 Subtract X0, X29, 32
	049 Move W2, 256
	050 Move X1, X22
	051 Move X3, X31
	052 Call ValueUtf8Converter..ctor, X0, X1
	053 Subtract X0, X29, 32
	054 Move X1, X21
	055 Move X2, X20
	056 Move X3, X31
	057 Call ValueUtf8Converter.ConvertAndTerminateString, X0, X1
	058 Move X2, [X25]
	059 Call 0x2219CF4, X0
	060 Move X8, [X24]
	061 Move X20, X0
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X0, X20
	068 Move X1, X19
	069 Call 0x3EB2CF0
	070 Move W19, W0
	071 Call 0x1C17CAC
	072 Subtract X0, X29, 32
	073 Move X1, X31
	074 Call ValueUtf8Converter.Dispose, X0
	075 Move X8, [X23+40]
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W0, W19
	079 Add X31, X29, 0
	080 Move X20, [X31+64]
	081 Move X19, [X31+72]
	082 Move X22, [X31+48]
	083 Move X21, [X31+56]
	084 Move X24, [X31+32]
	085 Move X23, [X31+40]
	086 Move X25, [X31+16]
	087 Move X29, [X31+80]
	088 Move X30, [X31+88]
	089 Return X0
	090 Call 0x3EB2B20

Method: System.Int32 LStat(ref System.Byte path, out Interop/Sys/FileStatus output)

Disassembly:
	0x0320AE54 B.NE 0x320AE8C
	0x0320AE58 LDR X20, [X20]
	0x0320AE5C MOV X0, X19
	0x0320AE60 BL 0x1C16E08
	0x0320AE64 LDR X1, [X0]
	0x0320AE68 MOV X0, X20
	0x0320AE6C MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Call 0x3EB2D40
	004 Move W19, W0
	005 Call 0x1C17CAC
	006 Move W0, W19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0

Method: System.Int32 LStat(System.ReadOnlySpan`1<System.Char> path, out Interop/Sys/FileStatus output)

Disassembly:
	0x0320AE70 BL 0x33BE5B0
	0x0320AE74 LDP X20, X19, [X31 + 0x30]
	0x0320AE78 LDP X22, X21, [X31 + 0x20]
	0x0320AE7C LDP X30, X23, [X31 + 0x10]
	0x0320AE80 AND W0, W0, 0x1
	0x0320AE84 ADD X31, X31, 0x40
	0x0320AE88 RET
	0x0320AE8C MOV X0, X19
	0x0320AE90 BL 0x1C171E0
	0x0320AE94 MOV X1, X31
	0x0320AE98 B 0x33C24FC
	0x0320AE9C STP X30, X19, [X31 - 0x10]!
	0x0320AEA0 MOV X19, X0
	0x0320AEA4 MOV X0, X1
	0x0320AEA8 MOV X1, X31
	0x0320AEAC BL 0x33C6948
	0x0320AEB0 STR X0, [X19]
	0x0320AEB4 LDP X30, X19, [X31], #0x10
	0x0320AEB8 RET
	0x0320AEBC STR X30, [X31 - 0x10]!
	0x0320AEC0 LDR X8, [X0]
	0x0320AEC4 CBZ X8, 0x320AED4
	0x0320AEC8 LDR W0, [X8 + 0x8]
	0x0320AECC LDR X30, [X31], #0x10
	0x0320AED0 RET
	0x0320AED4 BL 0x1C16F20
	0x0320AED8 B 0x320AEDC
	0x0320AEDC STP X30, X19, [X31 - 0x10]!
	0x0320AEE0 TBNZ X1, 0x1F, 0x320AF08
	0x0320AEE4 LDR X8, [X0]
	0x0320AEE8 CBZ X8, 0x320AF3C
	0x0320AEEC LDR W9, [X8 + 0x8]
	0x0320AEF0 CMP W9, W1
	0x0320AEF4 B.LE 0x320AF08
	0x0320AEF8 LDR X8, [X8]
	0x0320AEFC LDR X0, [X8, W1, UXTW]
	0x0320AF00 LDP X30, X19, [X31], #0x10
	0x0320AF04 RET
	0x0320AF08 ADRP X0, 0xEF3000
	0x0320AF0C LDR X0, [X0 + 0xF78]
	0x0320AF10 BL 0x1C16D08
	0x0320AF14 BL 0x1C16F10
	0x0320AF18 MOV X1, X31
	0x0320AF1C MOV X19, X0
	0x0320AF20 BL 0x3379B10
	0x0320AF24 ADRP X0, 0xF17000
	0x0320AF28 LDR X0, [X0 + 0x8C0]
	0x0320AF2C BL 0x1C16D08
	0x0320AF30 MOV X1, X0
	0x0320AF34 MOV X0, X19
	0x0320AF38 BL 0x1C16DEC
	0x0320AF3C BL 0x1C16F20
	0x0320AF40 B 0x1C16890
	0x0320AF44 STP X30, X19, [X31 - 0x10]!
	0x0320AF48 MOV X19, X0
	0x0320AF4C LDR X0, [X0]
	0x0320AF50 BL 0x1C16890
	0x0320AF54 STR X31, [X19]
	0x0320AF58 LDP X30, X19, [X31], #0x10
	0x0320AF5C RET
	0x0320AF60 STR X30, [X31 - 0x20]!
	0x0320AF64 STP X20, X19, [X31 + 0x10]
	0x0320AF68 ADRP X20, 0x11D2000
	0x0320AF6C LDRB W8, [X20 + 0x284]
	0x0320AF70 MOV X19, X0
	0x0320AF74 TBNZ X8, 0x0, 0x320AF8C
	0x0320AF78 ADRP X0, 0xEEB000
	0x0320AF7C LDR X0, [X0 + 0x278]
	0x0320AF80 BL 0x1C16CF4
	0x0320AF84 MOVZ W8, 0x1
	0x0320AF88 STRB W8, [X20 + 0x284]
	0x0320AF8C MOV X0, X19
	0x0320AF90 MOV X1, X31
	0x0320AF94 MOV X2, X31
	0x0320AF98 BL 0x33BE5B0
	0x0320AF9C TBZ X0, 0x0, 0x320AFC0
	0x0320AFA0 ADRP X8, 0xEEB000
	0x0320AFA4 LDR X8, [X8 + 0x278]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 32
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X23+40]
	014 Move X22, 0x11D3000
	015 Move X25, 0xF18000
	016 Move X24, 0xF15000
	017 Move [X29-8], X8
	018 Move W8, [X22+627]
	019 Move X25, [X25+2096]
	020 Move X24, [X24+3448]
	021 Move X19, X2
	022 Move X20, X1
	023 Move X21, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {39}
	028 Move X0, 0xF18000
	029 Move X0, [X0+2096]
	030 Call 0x1C17CF4
	031 Move X0, 0xF18000
	032 Move X0, [X0+2104]
	033 Call 0x1C17CF4
	034 Move X0, 0xF15000
	035 Move X0, [X0+3448]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+627], W8
	039 Subtract X22, X31, 256
	040 Move [X29-32], X31
	041 Move [X29-24], X31
	042 Move [X29-16], X31
	043 Add X31, X22, 0
	044 Move W2, 256
	045 Move X0, X22
	046 Move W1, W31
	047 Call 0x3EB2B10
	048 Subtract X0, X29, 32
	049 Move W2, 256
	050 Move X1, X22
	051 Move X3, X31
	052 Call ValueUtf8Converter..ctor, X0, X1
	053 Subtract X0, X29, 32
	054 Move X1, X21
	055 Move X2, X20
	056 Move X3, X31
	057 Call ValueUtf8Converter.ConvertAndTerminateString, X0, X1
	058 Move X2, [X25]
	059 Call 0x2219CF4, X0
	060 Move X8, [X24]
	061 Move X20, X0
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X0, X20
	068 Move X1, X19
	069 Call 0x3EB2D40
	070 Move W19, W0
	071 Call 0x1C17CAC
	072 Subtract X0, X29, 32
	073 Move X1, X31
	074 Call ValueUtf8Converter.Dispose, X0
	075 Move X8, [X23+40]
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W0, W19
	079 Add X31, X29, 0
	080 Move X20, [X31+64]
	081 Move X19, [X31+72]
	082 Move X22, [X31+48]
	083 Move X21, [X31+56]
	084 Move X24, [X31+32]
	085 Move X23, [X31+40]
	086 Move X25, [X31+16]
	087 Move X29, [X31+80]
	088 Move X30, [X31+88]
	089 Return X0
	090 Call 0x3EB2B20

Method: System.Int32 Unlink(System.String pathname)

Disassembly:
	0x0320AFA8 LDP X20, X19, [X31 + 0x10]
	0x0320AFAC LDR X8, [X8]
	0x0320AFB0 LDR X8, [X8 + 0xB8]
	0x0320AFB4 LDR X0, [X8]
	0x0320AFB8 LDR X30, [X31], #0x20
	0x0320AFBC RET
	0x0320AFC0 MOV X0, X19
	0x0320AFC4 MOV X1, X31
	0x0320AFC8 BL 0x33C6948
	0x0320AFCC LDRB W8, [X0]
	0x0320AFD0 CBZ W8, 0x320AFE8
	0x0320AFD4 MOV W20, W31
	0x0320AFD8 LDRB W8, [X0 + 0x1]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Call 0x1C1827C
	005 Move X19, X0
	006 Call 0x3EB2D50
	007 Move W20, W0
	008 Call 0x1C17CAC
	009 Move X0, X19
	010 Call 0x1C18290
	011 Move W0, W20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return X0

Method: System.Int32 DoubleToString(System.Double value, System.Byte* format, System.Byte* buffer, System.Int32 bufferLength)

Disassembly:
	0x0320AFDC ADD W20, W20, 0x1

ISIL:
	001 Call 0x1C50D24
	002 Return X0

Method: System.Void .cctor()

Disassembly:
	0x0320AFE0 CBNZ W8, 0x320AFD8
	0x0320AFE4 B 0x320AFEC
	0x0320AFE8 MOV W20, W31
	0x0320AFEC MOV X0, X19
	0x0320AFF0 MOV X1, X31
	0x0320AFF4 BL 0x33C6948
	0x0320AFF8 MOV X19, X0
	0x0320AFFC MOV X0, X31
	0x0320B000 BL 0x3241948
	0x0320B004 MOV X1, X19
	0x0320B008 MOV W3, W20
	0x0320B00C LDP X20, X19, [X31 + 0x10]
	0x0320B010 MOV X4, X0
	0x0320B014 MOV X0, X31
	0x0320B018 MOV W2, W31
	0x0320B01C MOV X5, X31
	0x0320B020 LDR X30, [X31], #0x20
	0x0320B024 B 0x322EB00
	0x0320B028 MOV X1, X31
	0x0320B02C RET
	0x0320B030 STP X1, X31, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11D3000
	005 Move X19, 0xF15000
	006 Move W8, [X20+628]
	007 Move X19, [X19+3448]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF15000
	013 Move X0, [X0+3448]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+628], W8
	017 Call 0x3EB2D20
	018 Move X8, [X19]
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSET not yet implemented."
	023 Move X8, [X8+184]
	024 Move [X8], W9
	025 Move X30, [X31+32]
	026 Return 

