Type: Interop/ErrorInfo

Method: System.Void .ctor(System.Int32 errno)

Disassembly:
	0x0320A700 STRB W31, [X31 + 0xC]
	0x0320A704 ADD X1, X31, 0xC
	0x0320A708 MOV X0, X19
	0x0320A70C MOV X2, X31
	0x0320A710 BL 0x33DE64C
	0x0320A714 LDR X8, [X21]
	0x0320A718 LDR W9, [X8 + 0xE0]
	0x0320A71C CBNZ W9, 0x320A72C
	0x0320A720 MOV X0, X8
	0x0320A724 BL 0x1C16DFC
	0x0320A728 LDR X8, [X21]
	0x0320A72C LDR X9, [X8 + 0xB8]
	0x0320A730 LDR X9, [X9 + 0x8]
	0x0320A734 CBZ X9, 0x320A75C
	0x0320A738 LDR W10, [X8 + 0xE0]
	0x0320A73C CBNZ W10, 0x320A754
	0x0320A740 MOV X0, X8
	0x0320A744 BL 0x1C16DFC
	0x0320A748 LDR X8, [X21]
	0x0320A74C LDR X9, [X8 + 0xB8]
	0x0320A750 LDR X9, [X9 + 0x8]
	0x0320A754 CMP X9, X20
	0x0320A758 B.NE 0x320A7AC
	0x0320A75C LDR W9, [X8 + 0xE0]
	0x0320A760 CBNZ W9, 0x320A770
	0x0320A764 MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x11D3000
	007 Move X22, 0xF15000
	008 Move W8, [X21+619]
	009 Move X22, [X22+3448]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xF15000
	017 Move X0, [X0+3448]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+619], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W19
	027 Call 0x3EB2C80
	028 Move [X20], W0
	029 Move [X20+4], W19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return 

Method: System.Void .ctor(Interop/Error error)

Disassembly:
	0x0320A76C LDR X8, [X21]
	0x0320A770 LDR X8, [X8 + 0xB8]
	0x0320A774 MOV X21, X31

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0], W1
	005 Move [X0+4], W8
	006 Return 

Method: Interop/Error get_Error()

Disassembly:
	0x0320A778 STR X20, [X8 + 0x8]
	0x0320A77C LDRB W8, [X31 + 0xC]

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Int32 get_RawErrno()

Disassembly:
	0x0320A5C8 STRB W8, [X20 + 0x27D]
	0x0320A5CC LDR X0, [X19]
	0x0320A5D0 ADRP X21, 0xF17000
	0x0320A5D4 ADRP X20, 0xF12000
	0x0320A5D8 ADRP X19, 0xF17000
	0x0320A5DC LDR W8, [X0 + 0xE0]
	0x0320A5E0 LDR X21, [X21 + 0x890]
	0x0320A5E4 LDR X20, [X20 + 0x1B0]
	0x0320A5E8 LDR X19, [X19 + 0x878]
	0x0320A5EC CBNZ W8, 0x320A5F4
	0x0320A5F0 BL 0x1C16DFC
	0x0320A5F4 LDR X0, [X21]
	0x0320A5F8 LDR X1, [X20]
	0x0320A5FC LDR X2, [X19]
	0x0320A600 BL 0x1C1703C
	0x0320A604 MOV X1, X31
	0x0320A608 MOV X2, X31
	0x0320A60C MOV X19, X0
	0x0320A610 BL 0x3395194
	0x0320A614 MOV W8, W0
	0x0320A618 MOV X0, X31
	0x0320A61C TBNZ X8, 0x0, 0x320A690
	0x0320A620 CBZ X19, 0x320A69C
	0x0320A624 ADRP X8, 0xF17000
	0x0320A628 LDR X8, [X8 + 0x888]
	0x0320A62C MOVZ W2, 0x1A
	0x0320A630 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11D3000
	005 Move W8, [X20+620]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xF15000
	012 Move X0, [X0+3448]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+620], W8
	016 Move W0, [X19+4]
	017 Add W31, W0, 1
	018 Move X8, 0xF15000
	019 Move X8, [X8+3448]
	020 Move W20, [X19]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W20
	027 Call 0x3EB2C60
	028 Move [X19+4], W0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: System.String GetErrorMessage()

Disassembly:
	0x0320A634 MOV X3, X31
	0x0320A638 LDR X1, [X8]
	0x0320A63C BL 0x3397828
	0x0320A640 MOV X1, X31
	0x0320A644 MOV X2, X31
	0x0320A648 MOV X19, X0
	0x0320A64C BL 0x32CE31C
	0x0320A650 MOV W8, W0
	0x0320A654 MOV X0, X31
	0x0320A658 TBNZ X8, 0x0, 0x320A690
	0x0320A65C CBZ X19, 0x320A69C
	0x0320A660 MOV X0, X19
	0x0320A664 MOV X1, X31
	0x0320A668 MOV X2, X31
	0x0320A66C BL 0x32CFB70
	0x0320A670 CBZ X0, 0x320A690
	0x0320A674 ADRP X8, 0xF17000
	0x0320A678 LDR X8, [X8 + 0x880]
	0x0320A67C MOV X19, X0
	0x0320A680 LDR X20, [X8]
	0x0320A684 MOV X1, X20
	0x0320A688 BL 0x1C16E00
	0x0320A68C CBZ X0, 0x320A6A0
	0x0320A690 LDP X20, X19, [X31 + 0x10]
	0x0320A694 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11D3000
	006 Move X20, 0xF15000
	007 Move W8, [X21+621]
	008 Move X20, [X20+3448]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xF15000
	015 Move X0, [X0+3448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+621], W8
	019 Move X0, X19
	020 Call ErrorInfo.get_RawErrno, X0
	021 Move X8, [X20]
	022 Move W19, W0
	023 Move W9, [X8+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {28}
	026 Move X0, X8
	027 Call 0x1C17DFC
	028 Move W0, W19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call Sys.StrError, X0
	034 Return X0

Method: System.String ToString()

Disassembly:
	0x0320A880 MOVZ W8, 0x1
	0x0320A884 STRB W8, [X19 + 0x27E]
	0x0320A888 LDR X0, [X21]
	0x0320A88C BL 0x1C16F10
	0x0320A890 MOV X1, X31
	0x0320A894 MOV X19, X0
	0x0320A898 BL 0x33BDD8C
	0x0320A89C LDR X8, [X20]
	0x0320A8A0 LDR X8, [X8 + 0xB8]
	0x0320A8A4 STR X19, [X8]
	0x0320A8A8 LDP X20, X19, [X31 + 0x10]
	0x0320A8AC LDP X30, X21, [X31], #0x20
	0x0320A8B0 RET
	0x0320A8B4 STP X30, X21, [X31 - 0x20]!
	0x0320A8B8 STP X20, X19, [X31 + 0x10]
	0x0320A8BC ADRP X19, 0x11D2000
	0x0320A8C0 ADRP X21, 0xEEF000
	0x0320A8C4 ADRP X20, 0xF17000
	0x0320A8C8 LDRB W8, [X19 + 0x27F]
	0x0320A8CC LDR X21, [X21 + 0xCC0]
	0x0320A8D0 LDR X20, [X20 + 0x8A0]
	0x0320A8D4 TBNZ X8, 0x0, 0x320A8F8
	0x0320A8D8 ADRP X0, 0xEEF000
	0x0320A8DC LDR X0, [X0 + 0xCC0]
	0x0320A8E0 BL 0x1C16CF4
	0x0320A8E4 ADRP X0, 0xF17000
	0x0320A8E8 LDR X0, [X0 + 0x8A0]
	0x0320A8EC BL 0x1C16CF4
	0x0320A8F0 MOVZ W8, 0x1
	0x0320A8F4 STRB W8, [X19 + 0x27F]
	0x0320A8F8 LDR X0, [X21]
	0x0320A8FC BL 0x1C16F10
	0x0320A900 MOV X1, X31
	0x0320A904 MOV X19, X0
	0x0320A908 BL 0x33BDD8C
	0x0320A90C LDR X8, [X20]
	0x0320A910 LDR X8, [X8 + 0xB8]
	0x0320A914 STR X19, [X8]
	0x0320A918 LDP X20, X19, [X31 + 0x10]
	0x0320A91C LDP X30, X21, [X31], #0x20
	0x0320A920 RET
	0x0320A924 STR X1, [X0]
	0x0320A928 RET
	0x0320A92C STP X30, X19, [X31 - 0x10]!
	0x0320A930 MOV X19, X0
	0x0320A934 MOV X0, X1
	0x0320A938 MOV X1, X31
	0x0320A93C BL 0x33C6948
	0x0320A940 STR X0, [X19]
	0x0320A944 LDP X30, X19, [X31], #0x10
	0x0320A948 RET
	0x0320A94C LDR X0, [X0]
	0x0320A950 RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x11D3000
	009 Move X20, 0xEEA000
	010 Move X21, 0xF18000
	011 Move X22, 0xF18000
	012 Move W8, [X23+622]
	013 Move X20, [X20+1880]
	014 Move X21, [X21+2080]
	015 Move X22, [X22+2088]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xF18000
	022 Move X0, [X0+2080]
	023 Call 0x1C17CF4
	024 Move X0, 0xEEA000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move X0, 0xF18000
	028 Move X0, [X0+2088]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+622], W8
	032 Move X0, X19
	033 Call ErrorInfo.get_RawErrno, X0
	034 Move X8, [X20]
	035 Move [X31+12], W0
	036 Add X1, X31, 12
	037 Move X0, X8
	038 Call 0x1C17E04
	039 Move X20, X0
	040 Move W8, [X19]
	041 Move X0, [X21]
	042 Add X1, X31, 8
	043 Move [X31+8], W8
	044 Call 0x1C17E04
	045 Move X21, X0
	046 Move X0, X19
	047 Call ErrorInfo.GetErrorMessage, X0
	048 Move X8, [X22]
	049 Move X3, X0
	050 Move X1, X20
	051 Move X2, X21
	052 Move X0, X8
	053 Move X4, X31
	054 Call String.Format, X0, X1, X2, X3
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X22, [X31+32]
	058 Move X21, [X31+40]
	059 Move X30, [X31+16]
	060 Move X23, [X31+24]
	061 Add X31, X31, 64
	062 Return X0

