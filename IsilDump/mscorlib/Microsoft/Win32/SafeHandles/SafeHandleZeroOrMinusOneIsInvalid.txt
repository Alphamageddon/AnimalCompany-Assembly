Type: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid

Method: System.Void .ctor(System.Boolean ownsHandle)

Disassembly:
	0x03225E44 CBZ X22, 0x3225F24
	0x03225E48 CBZ X20, 0x3225F24
	0x03225E4C TBNZ X23, 0x1F, 0x32260BC
	0x03225E50 TBNZ X19, 0x1F, 0x3226118

ISIL:
	001 And W2, W1, 1
	002 Move X1, X31
	003 Move X3, X31
	004 Call SafeHandle..ctor, X0, X1, X2
	005 Return 

Method: System.Boolean get_IsInvalid()

Disassembly:
	0x03225F1C CBNZ X0, 0x3225FB8
	0x03225F20 B 0x322619C
	0x03225F24 CMP X22, X20
	0x03225F28 B.EQ 0x3225F3C
	0x03225F2C CMP X22, 0x0
	0x03225F30 MOVN W8, 0x0
	0x03225F34 CSNEG W0, W8, W8, EQ
	0x03225F38 B 0x3225F40
	0x03225F3C MOV W0, W31
	0x03225F40 LDP X20, X19, [X31 + 0x40]
	0x03225F44 LDP X22, X21, [X31 + 0x30]
	0x03225F48 LDP X24, X23, [X31 + 0x20]
	0x03225F4C LDP X30, X25, [X31 + 0x10]
	0x03225F50 ADD X31, X31, 0x50
	0x03225F54 RET
	0x03225F58 ADRP X8, 0xED0000
	0x03225F5C LDR X8, [X8 + 0xC48]
	0x03225F60 LDR X0, [X8]
	0x03225F64 LDR W8, [X0 + 0xE0]
	0x03225F68 CBNZ W8, 0x3225F70
	0x03225F6C BL 0x1C16DFC
	0x03225F70 MOV X0, X31
	0x03225F74 BL 0x33387A0

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Add X19, X0, 16
	005 Move X0, X19
	006 Move X1, X31
	007 Call IntPtr.IsNull, X0
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {13}
	012 Move W0, 1
	013 Move X19, [X19]
	014 Add X0, X31, 8
	015 Move TEMP, 0
	016 Not TEMP
	017 Move W1, TEMP
	018 Move X2, X31
	019 Move [X31+8], X31
	020 Call IntPtr..ctor, X0, X1
	021 Move X1, [X31+8]
	022 Move X0, X19
	023 Move X2, X31
	024 Call IntPtr.op_Equality, X0, X1
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 And W0, W0, 1
	028 Add X31, X31, 32
	029 Return X0

