Type: System.Version

Method: System.Void .ctor(System.Int32 major, System.Int32 minor, System.Int32 build, System.Int32 revision)

Disassembly:
	0x0339D05C MOV X4, X20
	0x0339D060 MOV X5, X31
	0x0339D064 BL 0x337C1C0
	0x0339D068 TBZ X0, 0x0, 0x339D07C
	0x0339D06C LDR W8, [X20]
	0x0339D070 ORN W8, W31, W8, 0x0
	0x0339D074 UBFM W0, W8, 0x1F, 0x1F
	0x0339D078 B 0x339D080
	0x0339D07C MOV W0, W31
	0x0339D080 LDP X20, X19, [X31 + 0x30]
	0x0339D084 LDP X22, X21, [X31 + 0x20]
	0x0339D088 LDP X24, X23, [X31 + 0x10]
	0x0339D08C LDP X30, X25, [X31], #0x40
	0x0339D090 RET
	0x0339D094 ADRP X0, 0xD5E000
	0x0339D098 LDR X0, [X0 + 0x760]
	0x0339D09C BL 0x1C16D08
	0x0339D0A0 BL 0x1C16F10
	0x0339D0A4 MOV X20, X0
	0x0339D0A8 ADRP X0, 0xD8E000
	0x0339D0AC LDR X0, [X0 + 0x608]
	0x0339D0B0 BL 0x1C16D08
	0x0339D0B4 MOV X2, X0
	0x0339D0B8 MOV X0, X20
	0x0339D0BC MOV X1, X19
	0x0339D0C0 MOV X3, X31
	0x0339D0C4 BL 0x3311888
	0x0339D0C8 ADRP X0, 0xD8E000
	0x0339D0CC LDR X0, [X0 + 0x668]
	0x0339D0D0 BL 0x1C16D08
	0x0339D0D4 MOV X1, X0
	0x0339D0D8 MOV X0, X20
	0x0339D0DC BL 0x1C16DEC
	0x0339D0E0 CBZ X0, 0x339D0F4
	0x0339D0E4 STR X30, [X31 - 0x10]!
	0x0339D0E8 BL 0x339C660
	0x0339D0EC LDR X30, [X31], #0x10
	0x0339D0F0 B 0x339D0FC
	0x0339D0F4 CMP X1, 0x0
	0x0339D0F8 CSET W0, EQ
	0x0339D0FC ORN W8, W31, W0, 0x0
	0x0339D100 AND W0, W8, 0x1
	0x0339D104 RET
	0x0339D108 STP X30, X19, [X31 - 0x10]!
	0x0339D10C CBZ X0, 0x339D120
	0x0339D110 BL 0x339C594
	0x0339D114 UBFM W0, W0, 0x1F, 0x1F
	0x0339D118 LDP X30, X19, [X31], #0x10
	0x0339D11C RET
	0x0339D120 ADRP X0, 0xD5B000
	0x0339D124 LDR X0, [X0 + 0x528]
	0x0339D128 BL 0x1C16D08
	0x0339D12C BL 0x1C16F10
	0x0339D130 MOV X19, X0
	0x0339D134 ADRP X0, 0xD8E000
	0x0339D138 LDR X0, [X0 + 0x670]
	0x0339D13C BL 0x1C16D08
	0x0339D140 MOV X1, X0
	0x0339D144 MOV X0, X19
	0x0339D148 MOV X2, X31
	0x0339D14C BL 0x330E100
	0x0339D150 ADRP X0, 0xD8E000
	0x0339D154 LDR X0, [X0 + 0x678]
	0x0339D158 BL 0x1C16D08
	0x0339D15C MOV X1, X0
	0x0339D160 MOV X0, X19
	0x0339D164 BL 0x1C16DEC
	0x0339D168 MOV X8, X0
	0x0339D16C MOV X0, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W23, W1
	008 NotImplemented "Instruction MOVI not yet implemented."
	009 Move X1, X31
	010 Move W19, W4
	011 Move W20, W3
	012 Move W22, W2
	013 Move X21, X0
	014 Move [X0+24], D0
	015 Call Object..ctor, X0
	016 Move TEMP, X23
	017 And TEMP, TEMP, -2147483648
	018 Compare TEMP, -2147483648
	019 JumpIfEqual {43}
	020 Move TEMP, X22
	021 And TEMP, TEMP, -2147483648
	022 Compare TEMP, -2147483648
	023 JumpIfEqual {50}
	024 Move TEMP, X20
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {57}
	028 Move TEMP, X19
	029 And TEMP, TEMP, -2147483648
	030 Compare TEMP, -2147483648
	031 JumpIfEqual {64}
	032 Move [X21+16], W23
	033 Move [X21+20], W22
	034 Move [X21+24], W20
	035 Move [X21+28], W19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Return 
	043 Move X0, 0xD5F000
	044 Move X0, [X0+1888]
	045 Call 0x1C17D08
	046 Call 0x1C17F10
	047 Move X19, X0
	048 Move X0, 0xD8F000
	049 Move X0, [X0+1512]
	050 Move X0, 0xD5F000
	051 Move X0, [X0+1888]
	052 Call 0x1C17D08
	053 Call 0x1C17F10
	054 Move X19, X0
	055 Move X0, 0xD8F000
	056 Move X0, [X0+1520]
	057 Move X0, 0xD5F000
	058 Move X0, [X0+1888]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X19, X0
	062 Move X0, 0xD8F000
	063 Move X0, [X0+1528]
	064 Move X0, 0xD5F000
	065 Move X0, [X0+1888]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X19, X0
	069 Move X0, 0xD8F000
	070 Move X0, [X0+1536]
	071 Call 0x1C17D08
	072 Move X20, X0
	073 Move X0, 0xD8F000
	074 Move X0, [X0+1544]
	075 Call 0x1C17D08
	076 Move X2, X0
	077 Move X0, X19
	078 Move X1, X20
	079 Move X3, X31
	080 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	081 Move X0, 0xD8F000
	082 Move X0, [X0+1552]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Call 0x1C17DEC

Method: System.Void .ctor(System.Int32 major, System.Int32 minor, System.Int32 build)

Disassembly:
	0x0339D170 MOV X1, X8
	0x0339D174 B 0x339D108
	0x0339D178 STR X30, [X31 - 0x30]!
	0x0339D17C STP X22, X21, [X31 + 0x10]
	0x0339D180 STP X20, X19, [X31 + 0x20]
	0x0339D184 LDR X8, [X2 + 0x8]
	0x0339D188 STP X1, X2, [X0 + 0x20]
	0x0339D18C MOV X19, X0
	0x0339D190 MOV X20, X2
	0x0339D194 STR X8, [X0 + 0x10]
	0x0339D198 LDRB W22, [X2 + 0x52]
	0x0339D19C STR X0, [X0 + 0x40]
	0x0339D1A0 MOV X0, X2
	0x0339D1A4 MOV X21, X1
	0x0339D1A8 BL 0x1C16D84
	0x0339D1AC TBZ X0, 0x0, 0x339D1C4
	0x0339D1B0 CMP W22, 0x2
	0x0339D1B4 B.NE 0x339D200
	0x0339D1B8 ADRP X8, 0xFFFFFFFFFE81D000
	0x0339D1BC ADD X8, X8, 0xCCC
	0x0339D1C0 B 0x339D244
	0x0339D1C4 CMP W22, 0x1
	0x0339D1C8 B.NE 0x339D1FC
	0x0339D1CC LDRB W8, [X19 + 0x70]
	0x0339D1D0 CBZ W8, 0x339D214
	0x0339D1D4 MOV X0, X20
	0x0339D1D8 BL 0x1C16D7C
	0x0339D1DC MOV W21, W0
	0x0339D1E0 MOV X0, X20
	0x0339D1E4 BL 0x1C17238
	0x0339D1E8 TBZ X21, 0x0, 0x339D220
	0x0339D1EC TBZ X0, 0x0, 0x339D230
	0x0339D1F0 ADRP X8, 0xFFFFFFFFFE81D000
	0x0339D1F4 ADD X8, X8, 0xDE8
	0x0339D1F8 B 0x339D244
	0x0339D1FC CBZ X21, 0x339D264
	0x0339D200 LDR X8, [X19 + 0x10]
	0x0339D204 LDR X9, [X19 + 0x20]
	0x0339D208 STR X8, [X19 + 0x18]
	0x0339D20C STR X9, [X19 + 0x40]
	0x0339D210 B 0x339D248
	0x0339D214 ADRP X8, 0xFFFFFFFFFE81D000
	0x0339D218 ADD X8, X8, 0xCA8
	0x0339D21C B 0x339D244
	0x0339D220 TBZ X0, 0x0, 0x339D23C
	0x0339D224 ADRP X8, 0xFFFFFFFFFE81D000
	0x0339D228 ADD X8, X8, 0xD10
	0x0339D22C B 0x339D244
	0x0339D230 ADRP X8, 0xFFFFFFFFFE81D000
	0x0339D234 ADD X8, X8, 0xD9C
	0x0339D238 B 0x339D244
	0x0339D23C ADRP X8, 0xFFFFFFFFFE81D000
	0x0339D240 ADD X8, X8, 0xCE0
	0x0339D244 STR X8, [X19 + 0x18]
	0x0339D248 ADRP X8, 0xFFFFFFFFFE81D000
	0x0339D24C ADD X8, X8, 0xC50
	0x0339D250 STR X8, [X19 + 0x38]
	0x0339D254 LDP X20, X19, [X31 + 0x20]
	0x0339D258 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W22, W1
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move X1, X31
	009 Move W19, W3
	010 Move W20, W2
	011 Move X21, X0
	012 Move [X0+24], D0
	013 Call Object..ctor, X0
	014 Move TEMP, X22
	015 And TEMP, TEMP, -2147483648
	016 Compare TEMP, -2147483648
	017 JumpIfEqual {35}
	018 Move TEMP, X20
	019 And TEMP, TEMP, -2147483648
	020 Compare TEMP, -2147483648
	021 JumpIfEqual {42}
	022 Move TEMP, X19
	023 And TEMP, TEMP, -2147483648
	024 Compare TEMP, -2147483648
	025 JumpIfEqual {49}
	026 Move [X21+16], W22
	027 Move [X21+20], W20
	028 Move [X21+24], W19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Return 
	035 Move X0, 0xD5F000
	036 Move X0, [X0+1888]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0xD8F000
	041 Move X0, [X0+1512]
	042 Move X0, 0xD5F000
	043 Move X0, [X0+1888]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X19, X0
	047 Move X0, 0xD8F000
	048 Move X0, [X0+1520]
	049 Move X0, 0xD5F000
	050 Move X0, [X0+1888]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0xD8F000
	055 Move X0, [X0+1528]
	056 Call 0x1C17D08
	057 Move X20, X0
	058 Move X0, 0xD8F000
	059 Move X0, [X0+1544]
	060 Call 0x1C17D08
	061 Move X2, X0
	062 Move X0, X19
	063 Move X1, X20
	064 Move X3, X31
	065 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	066 Move X0, 0xD8F000
	067 Move X0, [X0+1560]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Call 0x1C17DEC

Method: System.Void .ctor(System.Int32 major, System.Int32 minor)

Disassembly:
	0x0339D25C LDR X30, [X31], #0x30
	0x0339D260 RET
	0x0339D264 ADRP X1, 0xFFFFFFFFFD77E000
	0x0339D268 ADD X1, X1, 0xEE3
	0x0339D26C MOV X0, X31
	0x0339D270 BL 0x1C16F3C
	0x0339D274 MOV X1, X31
	0x0339D278 BL 0x1C16DEC
	0x0339D27C LDR X8, [X0 + 0x40]
	0x0339D280 LDR X4, [X0 + 0x18]
	0x0339D284 LDR X3, [X0 + 0x28]
	0x0339D288 MOV X0, X8
	0x0339D28C BR X4
	0x0339D290 STR X30, [X31 - 0x30]!
	0x0339D294 STP X22, X21, [X31 + 0x10]
	0x0339D298 STP X20, X19, [X31 + 0x20]
	0x0339D29C ADRP X21, 0x1040000
	0x0339D2A0 ADRP X22, 0xD82000
	0x0339D2A4 LDRB W8, [X21 + 0x109]
	0x0339D2A8 LDR X22, [X22 + 0x158]
	0x0339D2AC MOV W19, W1
	0x0339D2B0 MOV X20, X0
	0x0339D2B4 TBNZ X8, 0x0, 0x339D2CC
	0x0339D2B8 ADRP X0, 0xD82000
	0x0339D2BC LDR X0, [X0 + 0x158]
	0x0339D2C0 BL 0x1C16CF4
	0x0339D2C4 MOVZ W8, 0x1
	0x0339D2C8 STRB W8, [X21 + 0x109]
	0x0339D2CC LDR X0, [X22]
	0x0339D2D0 LDR W8, [X0 + 0xE0]
	0x0339D2D4 CBNZ W8, 0x339D2DC
	0x0339D2D8 BL 0x1C16DFC
	0x0339D2DC MOV X0, X20
	0x0339D2E0 MOV X1, X31
	0x0339D2E4 BL 0x33671B0
	0x0339D2E8 STR W19, [X20 + 0x10]
	0x0339D2EC LDP X20, X19, [X31 + 0x20]
	0x0339D2F0 LDP X22, X21, [X31 + 0x10]
	0x0339D2F4 LDR X30, [X31], #0x30
	0x0339D2F8 RET
	0x0339D2FC LDRB W0, [X0 + 0x14]
	0x0339D300 RET
	0x0339D304 STR X30, [X31 - 0x20]!
	0x0339D308 STP X20, X19, [X31 + 0x10]
	0x0339D30C ADRP X19, 0x1040000
	0x0339D310 ADRP X20, 0xD8E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, W1
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 Move X1, X31
	008 Move W19, W2
	009 Move X20, X0
	010 Move [X0+24], D0
	011 Call Object..ctor, X0
	012 Move TEMP, X21
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {27}
	016 Move TEMP, X19
	017 And TEMP, TEMP, -2147483648
	018 Compare TEMP, -2147483648
	019 JumpIfEqual {34}
	020 Move [X20+16], W21
	021 Move [X20+20], W19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 
	027 Move X0, 0xD5F000
	028 Move X0, [X0+1888]
	029 Call 0x1C17D08
	030 Call 0x1C17F10
	031 Move X19, X0
	032 Move X0, 0xD8F000
	033 Move X0, [X0+1512]
	034 Move X0, 0xD5F000
	035 Move X0, [X0+1888]
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X19, X0
	039 Move X0, 0xD8F000
	040 Move X0, [X0+1520]
	041 Call 0x1C17D08
	042 Move X20, X0
	043 Move X0, 0xD8F000
	044 Move X0, [X0+1544]
	045 Call 0x1C17D08
	046 Move X2, X0
	047 Move X0, X19
	048 Move X1, X20
	049 Move X3, X31
	050 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	051 Move X0, 0xD8F000
	052 Move X0, [X0+1568]
	053 Call 0x1C17D08
	054 Move X1, X0
	055 Move X0, X19
	056 Call 0x1C17DEC

Method: System.Void .ctor(System.String version)

Disassembly:
	0x0339D314 LDRB W8, [X19 + 0x10A]
	0x0339D318 LDR X20, [X20 + 0x680]
	0x0339D31C TBNZ X8, 0x0, 0x339D334
	0x0339D320 ADRP X0, 0xD8E000
	0x0339D324 LDR X0, [X0 + 0x680]
	0x0339D328 BL 0x1C16CF4
	0x0339D32C MOVZ W8, 0x1
	0x0339D330 STRB W8, [X19 + 0x10A]
	0x0339D334 LDR X0, [X20]
	0x0339D338 BL 0x1C16D9C
	0x0339D33C STR X30, [X31 - 0x20]!
	0x0339D340 STP X20, X19, [X31 + 0x10]
	0x0339D344 CMP W2, 0x100
	0x0339D348 B.CS 0x339D37C
	0x0339D34C ANDS W31, W3, 0x1
	0x0339D350 MOVZ W8, 0x2
	0x0339D354 CSEL W8, W8, W31, NE

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move X1, X31
	007 Move X19, X0
	008 Move [X0+24], D0
	009 Call Object..ctor, X0
	010 Move X0, X20
	011 Call Version.Parse, X0
	012 Compare X0, 0
	013 JumpIfEqual {20}
	014 Move V0, [X0+1]
	015 Move [X19+1], V0
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 
	020 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0339D3F0 ADRP X21, 0x1040000
	0x0339D3F4 LDRB W8, [X21 + 0x10B]
	0x0339D3F8 MOV X20, X1
	0x0339D3FC MOV X19, X0
	0x0339D400 TBNZ X8, 0x0, 0x339D418
	0x0339D404 ADRP X0, 0xD8E000
	0x0339D408 LDR X0, [X0 + 0x698]
	0x0339D40C BL 0x1C16CF4
	0x0339D410 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 NotImplemented "Instruction MOVI not yet implemented."
	004 Move X1, X31
	005 Move X19, X0
	006 Move [X0+24], D0
	007 Call Object..ctor, X0
	008 Move [X19+16], X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.Void .ctor(System.Version version)

Disassembly:
	0x0339D414 STRB W8, [X21 + 0x10B]
	0x0339D418 CBZ X20, 0x339D470
	0x0339D41C ADRP X8, 0xD8E000
	0x0339D420 LDR X8, [X8 + 0x698]
	0x0339D424 LDR X9, [X20]
	0x0339D428 LDR X8, [X8]
	0x0339D42C CMP X9, X8
	0x0339D430 B.NE 0x339D470
	0x0339D434 MOV X0, X20
	0x0339D438 BL 0x1C16E08
	0x0339D43C LDR X8, [X0]
	0x0339D440 LDRH W9, [X19]
	0x0339D444 CMP W9, W8, UXTH
	0x0339D448 B.NE 0x339D470
	0x0339D44C LDR W9, [X19 + 0x4]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move X1, X31
	007 Move X19, X0
	008 Move [X0+24], D0
	009 Call Object..ctor, X0
	010 Compare X20, 0
	011 JumpIfEqual {18}
	012 Move V0, [X20+1]
	013 Move [X19+1], V0
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return 
	018 Call 0x1C17F20

Method: System.Object Clone()

Disassembly:
	0x0339D450 UBFM X8, X8, 0x20, 0x3F
	0x0339D454 CMP W9, W8
	0x0339D458 B.NE 0x339D470
	0x0339D45C LDR W8, [X0 + 0x8]
	0x0339D460 LDR W9, [X19 + 0x8]
	0x0339D464 CMP W9, W8
	0x0339D468 CSET W0, EQ
	0x0339D46C B 0x339D474
	0x0339D470 MOV W0, W31
	0x0339D474 LDP X20, X19, [X31 + 0x10]
	0x0339D478 LDP X30, X21, [X31], #0x20
	0x0339D47C RET
	0x0339D480 LDRH W8, [X0]
	0x0339D484 CMP W8, W1, UXTH
	0x0339D488 B.NE 0x339D4AC
	0x0339D48C LDR W8, [X0 + 0x4]
	0x0339D490 UBFM X9, X1, 0x20, 0x3F
	0x0339D494 CMP W8, W9
	0x0339D498 B.NE 0x339D4AC
	0x0339D49C LDR W8, [X0 + 0x8]
	0x0339D4A0 CMP W8, W2
	0x0339D4A4 CSET W0, EQ

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1041000
	006 Move X21, 0xD5F000
	007 Move W8, [X20+257]
	008 Move X21, [X21+1984]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD5F000
	015 Move X0, [X0+1984]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+257], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call Version..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Int32 get_Major()

Disassembly:
	0x0339D4A8 RET
	0x0339D4AC MOV W0, W31

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Int32 get_Minor()

Disassembly:
	0x0339D4B0 RET
	0x0339D4B4 LDRH W8, [X0]

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Int32 get_Build()

Disassembly:
	0x0339D4B8 LDP W9, W10, [X0 + 0x4]
	0x0339D4BC BFM W8, W9, 0x10, 0xF

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Int32 get_Revision()

Disassembly:
	0x0339D4C0 ORR W0, W8, W10, 0x18
	0x0339D4C4 RET

ISIL:
	001 Move W0, [X0+28]
	002 Return X0

Method: System.Int32 CompareTo(System.Object version)

Disassembly:
	0x0339D4C8 SUB X31, X31, 0x50
	0x0339D4CC STR X30, [X31 + 0x20]
	0x0339D4D0 STP X22, X21, [X31 + 0x30]
	0x0339D4D4 STP X20, X19, [X31 + 0x40]
	0x0339D4D8 ADRP X21, 0x1040000
	0x0339D4DC ADRP X22, 0xD8E000
	0x0339D4E0 ADRP X20, 0xD5B000
	0x0339D4E4 LDRB W8, [X21 + 0x10C]
	0x0339D4E8 LDR X22, [X22 + 0x6A0]
	0x0339D4EC LDR X20, [X20 + 0x528]
	0x0339D4F0 MOV W19, W0
	0x0339D4F4 TBNZ X8, 0x0, 0x339D518
	0x0339D4F8 ADRP X0, 0xD5B000
	0x0339D4FC LDR X0, [X0 + 0x528]
	0x0339D500 BL 0x1C16CF4
	0x0339D504 ADRP X0, 0xD8E000
	0x0339D508 LDR X0, [X0 + 0x6A0]
	0x0339D50C BL 0x1C16CF4
	0x0339D510 MOVZ W8, 0x1
	0x0339D514 STRB W8, [X21 + 0x10C]
	0x0339D518 LDR X8, [X22]
	0x0339D51C MOVN X9, 0x0
	0x0339D520 ADD X0, X31, 0x8
	0x0339D524 MOV X1, X31
	0x0339D528 STP X8, X9, [X31 + 0x8]
	0x0339D52C STR W19, [X31 + 0x18]
	0x0339D530 BL 0x33B162C
	0x0339D534 LDR X8, [X20]
	0x0339D538 MOV X19, X0
	0x0339D53C MOV X0, X8
	0x0339D540 BL 0x1C16F10
	0x0339D544 MOV X1, X19
	0x0339D548 MOV X2, X31
	0x0339D54C MOV X20, X0
	0x0339D550 BL 0x330E100
	0x0339D554 MOV X0, X20
	0x0339D558 LDP X20, X19, [X31 + 0x40]
	0x0339D55C LDP X22, X21, [X31 + 0x30]
	0x0339D560 LDR X30, [X31 + 0x20]
	0x0339D564 ADD X31, X31, 0x50
	0x0339D568 RET
	0x0339D56C STP X30, X19, [X31 - 0x10]!
	0x0339D570 BL 0x339D590
	0x0339D574 MOV X19, X0
	0x0339D578 ADRP X0, 0xD8E000
	0x0339D57C LDR X0, [X0 + 0x6A8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1041000
	006 Move W8, [X21+258]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD5F000
	014 Move X0, [X0+1984]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+258], W8
	018 Compare X19, 0
	019 JumpIfEqual {33}
	020 Move X8, 0xD5F000
	021 Move X8, [X8+1984]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Move X1, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Version.CompareTo, X0, X1
	032 Return X0
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move W0, 1
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Move X0, 0xD5F000
	040 Move X0, [X0+1400]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X19, X0
	044 Move X0, 0xD8F000
	045 Move X0, [X0+1584]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X19
	049 Move X2, X31
	050 Call ArgumentException..ctor, X0, X1
	051 Move X0, 0xD8F000
	052 Move X0, [X0+1592]
	053 Call 0x1C17D08
	054 Move X1, X0
	055 Move X0, X19
	056 Call 0x1C17DEC

Method: System.Int32 CompareTo(System.Version value)

Disassembly:
	0x0339D594 STP X20, X19, [X31 + 0x10]
	0x0339D598 ADRP X19, 0x1040000
	0x0339D59C ADRP X20, 0xD7F000
	0x0339D5A0 LDRB W8, [X19 + 0x10D]
	0x0339D5A4 LDR X20, [X20 + 0x320]
	0x0339D5A8 TBNZ X8, 0x0, 0x339D5C0
	0x0339D5AC ADRP X0, 0xD7F000
	0x0339D5B0 LDR X0, [X0 + 0x320]
	0x0339D5B4 BL 0x1C16CF4
	0x0339D5B8 MOVZ W8, 0x1
	0x0339D5BC STRB W8, [X19 + 0x10D]
	0x0339D5C0 LDR X0, [X20]
	0x0339D5C4 BL 0x1C16F10
	0x0339D5C8 MOV X1, X31
	0x0339D5CC MOV X19, X0
	0x0339D5D0 BL 0x3316388
	0x0339D5D4 MOV X0, X19
	0x0339D5D8 LDP X20, X19, [X31 + 0x10]
	0x0339D5DC LDR X30, [X31], #0x20
	0x0339D5E0 RET
	0x0339D5E4 STP X30, X19, [X31 - 0x10]!
	0x0339D5E8 BL 0x339D608
	0x0339D5EC MOV X19, X0
	0x0339D5F0 ADRP X0, 0xD8E000
	0x0339D5F4 LDR X0, [X0 + 0x6B0]
	0x0339D5F8 BL 0x1C16D08

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Compare X1, 0
	003 JumpIfEqual {21}
	004 Move W8, [X0+16]
	005 Move W9, [X1+16]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W8, [X0+20]
	008 Move W9, [X1+20]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W8, [X0+24]
	011 Move W9, [X1+24]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W8, [X0+28]
	014 Move W9, [X1+28]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W0, W31
	017 Return X0
	018 Move W8, 1
	019 NotImplemented "Instruction CSNEG not yet implemented."
	020 Return X0
	021 Move W0, 1
	022 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0339D5FC MOV X1, X0
	0x0339D600 MOV X0, X19
	0x0339D604 BL 0x1C16DEC
	0x0339D608 STP X30, X21, [X31 - 0x20]!
	0x0339D60C STP X20, X19, [X31 + 0x10]
	0x0339D610 ADRP X20, 0x1040000
	0x0339D614 ADRP X21, 0xD5E000
	0x0339D618 ADRP X19, 0xD8E000
	0x0339D61C LDRB W8, [X20 + 0x10E]
	0x0339D620 LDR X21, [X21 + 0x578]
	0x0339D624 LDR X19, [X19 + 0x6B8]
	0x0339D628 TBNZ X8, 0x0, 0x339D64C
	0x0339D62C ADRP X0, 0xD5E000
	0x0339D630 LDR X0, [X0 + 0x578]
	0x0339D634 BL 0x1C16CF4
	0x0339D638 ADRP X0, 0xD8E000
	0x0339D63C LDR X0, [X0 + 0x6B8]
	0x0339D640 BL 0x1C16CF4
	0x0339D644 MOVZ W8, 0x1
	0x0339D648 STRB W8, [X20 + 0x10E]
	0x0339D64C LDR X0, [X21]
	0x0339D650 BL 0x1C16F10
	0x0339D654 LDR X1, [X19]
	0x0339D658 MOV X2, X31
	0x0339D65C MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1041000
	006 Move W8, [X21+259]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD5F000
	014 Move X0, [X0+1984]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+259], W8
	018 Compare X20, 0
	019 JumpIfEqual {26}
	020 Move X8, 0xD5F000
	021 Move X8, [X8+1984]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Move X1, X31
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]

Method: System.Boolean Equals(System.Version obj)

Disassembly:
	0x0339D660 BL 0x3314A68
	0x0339D664 MOV X0, X19
	0x0339D668 LDP X20, X19, [X31 + 0x10]
	0x0339D66C LDP X30, X21, [X31], #0x20
	0x0339D670 RET
	0x0339D674 STP X30, X19, [X31 - 0x10]!
	0x0339D678 BL 0x339D698
	0x0339D67C MOV X19, X0
	0x0339D680 ADRP X0, 0xD8E000
	0x0339D684 LDR X0, [X0 + 0x6C0]
	0x0339D688 BL 0x1C16D08
	0x0339D68C MOV X1, X0
	0x0339D690 MOV X0, X19
	0x0339D694 BL 0x1C16DEC
	0x0339D698 STR X30, [X31 - 0x20]!
	0x0339D69C STP X20, X19, [X31 + 0x10]
	0x0339D6A0 ADRP X19, 0x1040000
	0x0339D6A4 ADRP X20, 0xD60000
	0x0339D6A8 LDRB W8, [X19 + 0x10F]
	0x0339D6AC LDR X20, [X20 + 0xF78]
	0x0339D6B0 TBNZ X8, 0x0, 0x339D6C8
	0x0339D6B4 ADRP X0, 0xD60000
	0x0339D6B8 LDR X0, [X0 + 0xF78]
	0x0339D6BC BL 0x1C16CF4

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Compare X1, 0
	003 JumpIfEqual {18}
	004 Move W8, [X0+16]
	005 Move W9, [X1+16]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W8, [X0+20]
	008 Move W9, [X1+20]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W8, [X0+24]
	011 Move W9, [X1+24]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W8, [X0+28]
	014 Move W9, [X1+28]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CSET not yet implemented."
	017 Return X0
	018 Move W0, W31
	019 Return X0
	020 Move W0, 1
	021 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x0339D6C0 MOVZ W8, 0x1
	0x0339D6C4 STRB W8, [X19 + 0x10F]
	0x0339D6C8 LDR X0, [X20]
	0x0339D6CC BL 0x1C16F10
	0x0339D6D0 MOV X1, X31
	0x0339D6D4 MOV X19, X0
	0x0339D6D8 BL 0x3379B10

ISIL:
	001 Move W8, [X0+16]
	002 Move W9, [X0+20]
	003 Move W10, [X0+24]
	004 Move W11, [X0+28]
	005 Move W0, W8
	006 ShiftRight W0, 4
	007 And W0, W0, 7
	008 NotImplemented "Instruction BFM not yet implemented."
	009 NotImplemented "Instruction BFM not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Return X0

Method: System.String ToString()

Disassembly:
	0x0339D6DC MOV X0, X19
	0x0339D6E0 LDP X20, X19, [X31 + 0x10]
	0x0339D6E4 LDR X30, [X31], #0x20
	0x0339D6E8 RET
	0x0339D6EC STP X30, X19, [X31 - 0x10]!
	0x0339D6F0 BL 0x339D710
	0x0339D6F4 MOV X19, X0
	0x0339D6F8 ADRP X0, 0xD8E000
	0x0339D6FC LDR X0, [X0 + 0x6C8]
	0x0339D700 BL 0x1C16D08

ISIL:
	001 Move W8, [X0+24]
	002 Add W31, W8, 1
	003 Move W8, [X0+28]
	004 Add W31, W8, 1
	005 Move W8, 3
	006 NotImplemented "Instruction CINC not yet implemented."
	007 Call Version.ToString, X0, X1
	008 Return X0
	009 Move W1, 2
	010 Call Version.ToString, X0, X1
	011 Return X0

Method: System.String ToString(System.Int32 fieldCount)

Disassembly:
	0x0339D72C ADRP X0, 0xD5E000
	0x0339D730 LDR X0, [X0 + 0x760]
	0x0339D734 BL 0x1C16CF4
	0x0339D738 MOVZ W8, 0x1
	0x0339D73C STRB W8, [X19 + 0x110]
	0x0339D740 LDR X0, [X20]
	0x0339D744 BL 0x1C16F10
	0x0339D748 MOV X1, X31
	0x0339D74C MOV X19, X0
	0x0339D750 BL 0x3315FB8
	0x0339D754 MOV X0, X19
	0x0339D758 LDP X20, X19, [X31 + 0x10]
	0x0339D75C LDR X30, [X31], #0x20
	0x0339D760 RET
	0x0339D764 STP X30, X19, [X31 - 0x10]!
	0x0339D768 BL 0x339D788
	0x0339D76C MOV X19, X0
	0x0339D770 ADRP X0, 0xD8E000
	0x0339D774 LDR X0, [X0 + 0x6D0]
	0x0339D778 BL 0x1C16D08
	0x0339D77C MOV X1, X0
	0x0339D780 MOV X0, X19
	0x0339D784 BL 0x1C16DEC
	0x0339D788 SUB X31, X31, 0x50
	0x0339D78C STR X30, [X31 + 0x20]
	0x0339D790 STP X22, X21, [X31 + 0x30]
	0x0339D794 STP X20, X19, [X31 + 0x40]
	0x0339D798 ADRP X21, 0x1040000
	0x0339D79C ADRP X22, 0xD8E000
	0x0339D7A0 ADRP X20, 0xD5E000
	0x0339D7A4 LDRB W8, [X21 + 0x111]
	0x0339D7A8 LDR X22, [X22 + 0x6A0]
	0x0339D7AC LDR X20, [X20 + 0x760]
	0x0339D7B0 MOV W19, W0
	0x0339D7B4 TBNZ X8, 0x0, 0x339D7D8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1041000
	006 Move W8, [X21+260]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD59000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+260], W8
	018 Compare W19, 0
	019 JumpIfEqual {29}
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Add X0, X20, 16
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X1, X31
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Call Int32.ToString, X0
	028 Return X0
	029 Move X8, 0xD59000
	030 Move X8, [X8+632]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X8, [X8]
	034 Move X8, [X8+184]
	035 Move X0, [X8]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Move X0, X20
	040 Move W1, W19
	041 Call Version.ToCachedStringBuilder, X0, X1
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X1, X31
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call StringBuilderCache.GetStringAndRelease, X0
	048 Return X0

Method: System.Boolean TryFormat(System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x0339DA00 ADRP X0, 0xD5E000
	0x0339DA04 LDR X0, [X0 + 0x578]
	0x0339DA08 BL 0x1C16D08
	0x0339DA0C BL 0x1C16F10
	0x0339DA10 MOV X20, X0
	0x0339DA14 ADRP X0, 0xD60000
	0x0339DA18 LDR X0, [X0 + 0xEC8]
	0x0339DA1C BL 0x1C16D08
	0x0339DA20 MOV X2, X0
	0x0339DA24 MOV X0, X20
	0x0339DA28 MOV X1, X19

ISIL:
	001 Move W8, [X0+24]
	002 Move X4, X3
	003 Add W31, W8, 1
	004 Move W8, [X0+28]
	005 Add W31, W8, 1
	006 Move W8, 3
	007 NotImplemented "Instruction CINC not yet implemented."
	008 Move W3, 2

Method: System.Boolean TryFormat(System.Span`1<System.Char> destination, System.Int32 fieldCount, out System.Int32 charsWritten)

Disassembly:
	0x0339DA2C MOV X3, X31
	0x0339DA30 BL 0x330E16C
	0x0339DA34 ADRP X0, 0xD8E000
	0x0339DA38 LDR X0, [X0 + 0x6F0]
	0x0339DA3C BL 0x1C16D08
	0x0339DA40 MOV X1, X0
	0x0339DA44 MOV X0, X20
	0x0339DA48 BL 0x1C16DEC
	0x0339DA4C STR X30, [X31 - 0x20]!
	0x0339DA50 STP X20, X19, [X31 + 0x10]
	0x0339DA54 BL 0x339DA9C
	0x0339DA58 MOV X1, X31
	0x0339DA5C BL 0x33BDD84
	0x0339DA60 MOV X19, X0
	0x0339DA64 ADRP X0, 0xD5E000
	0x0339DA68 LDR X0, [X0 + 0x578]
	0x0339DA6C BL 0x1C16D08
	0x0339DA70 BL 0x1C16F10
	0x0339DA74 MOV X1, X19
	0x0339DA78 MOV X2, X31
	0x0339DA7C MOV X20, X0
	0x0339DA80 BL 0x3314A68
	0x0339DA84 ADRP X0, 0xD8E000
	0x0339DA88 LDR X0, [X0 + 0x6F8]
	0x0339DA8C BL 0x1C16D08
	0x0339DA90 MOV X1, X0
	0x0339DA94 MOV X0, X20
	0x0339DA98 BL 0x1C16DEC
	0x0339DA9C STP X30, X21, [X31 - 0x20]!
	0x0339DAA0 STP X20, X19, [X31 + 0x10]
	0x0339DAA4 ADRP X21, 0x1040000
	0x0339DAA8 ADRP X20, 0xD58000
	0x0339DAAC LDRB W8, [X21 + 0x11A]
	0x0339DAB0 LDR X20, [X20 + 0x278]
	0x0339DAB4 MOV W19, W0
	0x0339DAB8 TBNZ X8, 0x0, 0x339DCF8
	0x0339DABC ADRP X0, 0xD58000
	0x0339DAC0 LDR X0, [X0 + 0x278]
	0x0339DAC4 BL 0x1C16CF4
	0x0339DAC8 ADRP X0, 0xD7E000
	0x0339DACC LDR X0, [X0 + 0x650]
	0x0339DAD0 BL 0x1C16CF4
	0x0339DAD4 ADRP X0, 0xD80000
	0x0339DAD8 LDR X0, [X0 + 0x60]
	0x0339DADC BL 0x1C16CF4
	0x0339DAE0 ADRP X0, 0xD8E000
	0x0339DAE4 LDR X0, [X0 + 0x700]
	0x0339DAE8 BL 0x1C16CF4
	0x0339DAEC ADRP X0, 0xD8E000
	0x0339DAF0 LDR X0, [X0 + 0x708]
	0x0339DAF4 BL 0x1C16CF4
	0x0339DAF8 ADRP X0, 0xD8E000
	0x0339DAFC LDR X0, [X0 + 0x710]
	0x0339DB00 BL 0x1C16CF4
	0x0339DB04 ADRP X0, 0xD81000
	0x0339DB08 LDR X0, [X0 + 0xC48]
	0x0339DB0C BL 0x1C16CF4
	0x0339DB10 ADRP X0, 0xD8E000
	0x0339DB14 LDR X0, [X0 + 0x718]
	0x0339DB18 BL 0x1C16CF4
	0x0339DB1C ADRP X0, 0xD8E000
	0x0339DB20 LDR X0, [X0 + 0x720]
	0x0339DB24 BL 0x1C16CF4
	0x0339DB28 ADRP X0, 0xD7E000
	0x0339DB2C LDR X0, [X0 + 0x670]
	0x0339DB30 BL 0x1C16CF4
	0x0339DB34 ADRP X0, 0xD7F000
	0x0339DB38 LDR X0, [X0 + 0x318]
	0x0339DB3C BL 0x1C16CF4
	0x0339DB40 ADRP X0, 0xD8E000
	0x0339DB44 LDR X0, [X0 + 0x728]
	0x0339DB48 BL 0x1C16CF4
	0x0339DB4C ADRP X0, 0xD80000
	0x0339DB50 LDR X0, [X0 + 0xE38]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1041000
	009 Move W8, [X24+261]
	010 Move X19, X4
	011 Move W22, W3
	012 Move X20, X2
	013 Move X21, X1
	014 Move X23, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xD86000
	020 Move X0, [X0+1416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+261], W8
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Compare W22, 0
	026 JumpIfNotEqual {45}
	027 Move [X19], W31
	028 Add X0, X23, 16
	029 Move X1, X21
	030 Move X2, X20
	031 Move X3, X19
	032 Move X20, [X31+48]
	033 Move X19, [X31+56]
	034 Move X22, [X31+32]
	035 Move X21, [X31+40]
	036 Move X24, [X31+16]
	037 Move X23, [X31+24]
	038 Move X4, X31
	039 Move X5, X31
	040 Move X6, X31
	041 Move X7, X31
	042 Move X30, [X31+64]
	043 Call Int32.TryFormat, X0, X1, X2, X3, X4
	044 Return X0
	045 Move X0, X23
	046 Move W1, W22
	047 Call Version.ToCachedStringBuilder, X0, X1
	048 Compare X0, 0
	049 JumpIfEqual {85}
	050 Move X1, X31
	051 Move X22, X0
	052 Call StringBuilder.get_Length, X0
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, X22
	055 Move X1, X31
	056 Call StringBuilderCache.Release, X0
	057 Move W0, W31
	058 Move [X19], W31
	059 Move X0, X22
	060 Move X1, X31
	061 Call StringBuilder.get_Length, X0
	062 Move W4, W0
	063 Move X0, X22
	064 Move W1, W31
	065 Move X2, X21
	066 Move X3, X20
	067 Move X5, X31
	068 Call StringBuilder.CopyTo, X0, X1, X2, X3
	069 Move X0, X22
	070 Move X1, X31
	071 Call StringBuilderCache.Release, X0
	072 Move X0, X22
	073 Move X1, X31
	074 Call StringBuilder.get_Length, X0
	075 Move [X19], W0
	076 Move W0, 1
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X24, [X31+16]
	082 Move X23, [X31+24]
	083 Move X30, [X31+64]
	084 Return X0
	085 Call 0x1C17F20

Method: System.Boolean System.ISpanFormattable.TryFormat(System.Span`1<System.Char> destination, out System.Int32 charsWritten, System.ReadOnlySpan`1<System.Char> format, System.IFormatProvider provider)

Disassembly:
	0x0339DB54 BL 0x1C16CF4
	0x0339DB58 ADRP X0, 0xD80000
	0x0339DB5C LDR X0, [X0 + 0x2A0]
	0x0339DB60 BL 0x1C16CF4
	0x0339DB64 ADRP X0, 0xD8E000
	0x0339DB68 LDR X0, [X0 + 0x730]
	0x0339DB6C BL 0x1C16CF4
	0x0339DB70 ADRP X0, 0xD8E000
	0x0339DB74 LDR X0, [X0 + 0x738]
	0x0339DB78 BL 0x1C16CF4
	0x0339DB7C ADRP X0, 0xD8E000

ISIL:
	001 Move W8, [X0+24]
	002 Move X4, X3
	003 Add W31, W8, 1
	004 Move W8, [X0+28]
	005 Add W31, W8, 1
	006 Move W8, 3
	007 NotImplemented "Instruction CINC not yet implemented."
	008 Call Version.TryFormat, X0, X1, X2, X3
	009 Return X0
	010 Move W3, 2
	011 Call Version.TryFormat, X0, X1, X2, X3
	012 Return X0

Method: System.Int32 get_DefaultFormatFieldCount()

Disassembly:
	0x0339D704 MOV X1, X0
	0x0339D708 MOV X0, X19
	0x0339D70C BL 0x1C16DEC
	0x0339D710 STR X30, [X31 - 0x20]!
	0x0339D714 STP X20, X19, [X31 + 0x10]
	0x0339D718 ADRP X19, 0x1040000
	0x0339D71C ADRP X20, 0xD5E000
	0x0339D720 LDRB W8, [X19 + 0x110]
	0x0339D724 LDR X20, [X20 + 0x760]
	0x0339D728 TBNZ X8, 0x0, 0x339D740

ISIL:
	001 Move W8, [X0+24]
	002 Add W31, W8, 1
	003 Move W8, [X0+28]
	004 Add W31, W8, 1
	005 Move W8, 3
	006 NotImplemented "Instruction CINC not yet implemented."
	007 Return X0
	008 Move W0, 2
	009 Return X0

Method: System.Text.StringBuilder ToCachedStringBuilder(System.Int32 fieldCount)

Disassembly:
	0x0339D7B8 ADRP X0, 0xD5E000
	0x0339D7BC LDR X0, [X0 + 0x760]
	0x0339D7C0 BL 0x1C16CF4
	0x0339D7C4 ADRP X0, 0xD8E000
	0x0339D7C8 LDR X0, [X0 + 0x6A0]
	0x0339D7CC BL 0x1C16CF4
	0x0339D7D0 MOVZ W8, 0x1
	0x0339D7D4 STRB W8, [X21 + 0x111]
	0x0339D7D8 LDR X8, [X22]
	0x0339D7DC MOVN X9, 0x0
	0x0339D7E0 ADD X0, X31, 0x8
	0x0339D7E4 MOV X1, X31
	0x0339D7E8 STP X8, X9, [X31 + 0x8]
	0x0339D7EC STR W19, [X31 + 0x18]
	0x0339D7F0 BL 0x33B162C
	0x0339D7F4 LDR X8, [X20]
	0x0339D7F8 MOV X19, X0
	0x0339D7FC MOV X0, X8
	0x0339D800 BL 0x1C16F10
	0x0339D804 MOV X1, X19
	0x0339D808 MOV X2, X31
	0x0339D80C MOV X20, X0
	0x0339D810 BL 0x3316014
	0x0339D814 MOV X0, X20
	0x0339D818 LDP X20, X19, [X31 + 0x40]
	0x0339D81C LDP X22, X21, [X31 + 0x30]
	0x0339D820 LDR X30, [X31 + 0x20]
	0x0339D824 ADD X31, X31, 0x50
	0x0339D828 RET
	0x0339D82C STP X30, X19, [X31 - 0x10]!
	0x0339D830 BL 0x339D850
	0x0339D834 MOV X19, X0
	0x0339D838 ADRP X0, 0xD8E000
	0x0339D83C LDR X0, [X0 + 0x6D8]
	0x0339D840 BL 0x1C16D08
	0x0339D844 MOV X1, X0
	0x0339D848 MOV X0, X19
	0x0339D84C BL 0x1C16DEC
	0x0339D850 STR X30, [X31 - 0x20]!
	0x0339D854 STP X20, X19, [X31 + 0x10]
	0x0339D858 ADRP X19, 0x1040000
	0x0339D85C ADRP X20, 0xD56000
	0x0339D860 LDRB W8, [X19 + 0x112]
	0x0339D864 LDR X20, [X20 + 0xB40]
	0x0339D868 TBNZ X8, 0x0, 0x339D880
	0x0339D86C ADRP X0, 0xD56000
	0x0339D870 LDR X0, [X0 + 0xB40]
	0x0339D874 BL 0x1C16CF4
	0x0339D878 MOVZ W8, 0x1
	0x0339D87C STRB W8, [X19 + 0x112]
	0x0339D880 LDR X0, [X20]
	0x0339D884 BL 0x1C16F10
	0x0339D888 MOV X1, X31
	0x0339D88C MOV X19, X0
	0x0339D890 BL 0x3380310
	0x0339D894 MOV X0, X19
	0x0339D898 LDP X20, X19, [X31 + 0x10]
	0x0339D89C LDR X30, [X31], #0x20
	0x0339D8A0 RET
	0x0339D8A4 STP X30, X21, [X31 - 0x20]!
	0x0339D8A8 STP X20, X19, [X31 + 0x10]
	0x0339D8AC MOV X20, X0
	0x0339D8B0 ADRP X0, 0xD56000
	0x0339D8B4 LDR X0, [X0 + 0x9D0]
	0x0339D8B8 MOV X19, X1
	0x0339D8BC BL 0x1C16D08
	0x0339D8C0 MOVZ W1, 0x2
	0x0339D8C4 BL 0x1C16D6C
	0x0339D8C8 MOV X21, X0
	0x0339D8CC BL 0x19903C0
	0x0339D8D0 MOV X0, X21
	0x0339D8D4 MOV X1, X20
	0x0339D8D8 BL 0x19980B4
	0x0339D8DC MOV X0, X21
	0x0339D8E0 MOV X1, X31
	0x0339D8E4 MOV X2, X20
	0x0339D8E8 BL 0x1993444
	0x0339D8EC MOV X0, X21
	0x0339D8F0 BL 0x19903C0
	0x0339D8F4 MOV X0, X21
	0x0339D8F8 MOV X1, X19
	0x0339D8FC BL 0x19980B4
	0x0339D900 MOVZ W1, 0x1
	0x0339D904 MOV X0, X21
	0x0339D908 MOV X2, X19
	0x0339D90C BL 0x1993444
	0x0339D910 ADRP X0, 0xD8E000
	0x0339D914 LDR X0, [X0 + 0x6E0]
	0x0339D918 BL 0x1C16D08
	0x0339D91C MOV X1, X21
	0x0339D920 MOV X2, X31
	0x0339D924 BL 0x33BFB40
	0x0339D928 MOV X19, X0
	0x0339D92C ADRP X0, 0xD5E000
	0x0339D930 LDR X0, [X0 + 0x578]
	0x0339D934 BL 0x1C16D08
	0x0339D938 BL 0x1C16F10
	0x0339D93C MOV X20, X0
	0x0339D940 ADRP X0, 0xD80000
	0x0339D944 LDR X0, [X0 + 0x70]
	0x0339D948 BL 0x1C16D08
	0x0339D94C MOV X2, X0
	0x0339D950 MOV X0, X20
	0x0339D954 MOV X1, X19
	0x0339D958 MOV X3, X31
	0x0339D95C BL 0x330E16C
	0x0339D960 ADRP X0, 0xD8E000
	0x0339D964 LDR X0, [X0 + 0x6E8]
	0x0339D968 BL 0x1C16D08
	0x0339D96C MOV X1, X0
	0x0339D970 MOV X0, X20
	0x0339D974 BL 0x1C16DEC
	0x0339D978 STP X30, X21, [X31 - 0x20]!
	0x0339D97C STP X20, X19, [X31 + 0x10]
	0x0339D980 MOV X20, X0
	0x0339D984 ADRP X0, 0xD56000
	0x0339D988 LDR X0, [X0 + 0x9D0]
	0x0339D98C MOV X19, X1
	0x0339D990 BL 0x1C16D08
	0x0339D994 MOVZ W1, 0x2
	0x0339D998 BL 0x1C16D6C
	0x0339D99C MOV X21, X0
	0x0339D9A0 BL 0x19903C0
	0x0339D9A4 MOV X0, X21
	0x0339D9A8 MOV X1, X20
	0x0339D9AC BL 0x19980B4
	0x0339D9B0 MOV X0, X21
	0x0339D9B4 MOV X1, X31
	0x0339D9B8 MOV X2, X20
	0x0339D9BC BL 0x1993444
	0x0339D9C0 MOV X0, X21
	0x0339D9C4 BL 0x19903C0
	0x0339D9C8 MOV X0, X21
	0x0339D9CC MOV X1, X19
	0x0339D9D0 BL 0x19980B4
	0x0339D9D4 MOVZ W1, 0x1
	0x0339D9D8 MOV X0, X21
	0x0339D9DC MOV X2, X19
	0x0339D9E0 BL 0x1993444
	0x0339D9E4 ADRP X0, 0xD8E000
	0x0339D9E8 LDR X0, [X0 + 0x6E0]
	0x0339D9EC BL 0x1C16D08
	0x0339D9F0 MOV X1, X21
	0x0339D9F4 MOV X2, X31
	0x0339D9F8 BL 0x33BFB40
	0x0339D9FC MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X19, X0
	006 Move W0, 16
	007 Move X1, X31
	008 Call StringBuilderCache.Acquire, X0
	009 Compare X0, 0
	010 JumpIfEqual {86}
	011 Move W1, [X19+16]
	012 Move X2, X31
	013 Move X20, X0
	014 Call StringBuilder.Append, X0, X1
	015 Move W1, 46
	016 Move X0, X20
	017 Move X2, X31
	018 Call StringBuilder.Append, X0, X1
	019 Move W1, [X19+20]
	020 Move W8, [X19+24]
	021 Add W31, W8, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W0, 16
	024 Move X1, X31
	025 Call StringBuilderCache.Acquire, X0
	026 Compare X0, 0
	027 JumpIfEqual {86}
	028 Move W1, [X19+16]
	029 Move X2, X31
	030 Move X20, X0
	031 Call StringBuilder.Append, X0, X1
	032 Move W1, 46
	033 Move X0, X20
	034 Move X2, X31
	035 Call StringBuilder.Append, X0, X1
	036 Move W1, [X19+20]
	037 Move X0, X20
	038 Move X2, X31
	039 Call StringBuilder.Append, X0, X1
	040 Move W1, 46
	041 Move X0, X20
	042 Move X2, X31
	043 Call StringBuilder.Append, X0, X1
	044 Move W1, [X19+24]
	045 Move W8, [X19+28]
	046 Add W31, W8, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W0, 16
	049 Move X1, X31
	050 Call StringBuilderCache.Acquire, X0
	051 Compare X0, 0
	052 JumpIfEqual {86}
	053 Move W1, [X19+16]
	054 Move X2, X31
	055 Move X20, X0
	056 Call StringBuilder.Append, X0, X1
	057 Move W1, 46
	058 Move X0, X20
	059 Move X2, X31
	060 Call StringBuilder.Append, X0, X1
	061 Move W1, [X19+20]
	062 Move X0, X20
	063 Move X2, X31
	064 Call StringBuilder.Append, X0, X1
	065 Move W1, 46
	066 Move X0, X20
	067 Move X2, X31
	068 Call StringBuilder.Append, X0, X1
	069 Move W1, [X19+24]
	070 Move X0, X20
	071 Move X2, X31
	072 Call StringBuilder.Append, X0, X1
	073 Move W1, 46
	074 Move X0, X20
	075 Move X2, X31
	076 Call StringBuilder.Append, X0, X1
	077 Move W1, [X19+28]
	078 Move X0, X20
	079 Move X2, X31
	080 Call StringBuilder.Append, X0, X1
	081 Move X0, X20
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X30, [X31+32]
	085 Return X0
	086 Call 0x1C17F20
	087 Move X0, 0xD8F000
	088 Move X0, [X0+1600]
	089 Call 0x1C17D08
	090 Move X19, X0
	091 Move X0, 0xD59000
	092 Move X0, [X0+1200]
	093 Call 0x1C17D08
	094 Move X20, X0
	095 Move X0, 0xD68000
	096 Move X0, [X0+824]
	097 Move X0, 0xD8F000
	098 Move X0, [X0+1600]
	099 Call 0x1C17D08
	100 Move X19, X0
	101 Move X0, 0xD59000
	102 Move X0, [X0+1200]
	103 Call 0x1C17D08
	104 Move X20, X0
	105 Move X0, 0xD68000
	106 Move X0, [X0+280]
	107 Move X0, 0xD8F000
	108 Move X0, [X0+1600]
	109 Call 0x1C17D08
	110 Move X19, X0
	111 Move X0, 0xD59000
	112 Move X0, [X0+1200]
	113 Call 0x1C17D08
	114 Move X20, X0
	115 Move X0, 0xD70000
	116 Move X0, [X0+1064]
	117 Call 0x1C17D08
	118 Move X2, X0
	119 Move X0, X19
	120 Move X1, X20
	121 Move X3, X31
	122 Call SR.Format, X0, X1, X2
	123 Move X19, X0
	124 Move X0, 0xD5F000
	125 Move X0, [X0+1400]
	126 Call 0x1C17D08
	127 Call 0x1C17F10
	128 Move X20, X0
	129 Move X0, 0xD8F000
	130 Move X0, [X0+1608]
	131 Call 0x1C17D08
	132 Move X2, X0
	133 Move X0, X20
	134 Move X1, X19
	135 Move X3, X31
	136 Call ArgumentException..ctor, X0, X1, X2
	137 Move X0, 0xD8F000
	138 Move X0, [X0+1616]
	139 Call 0x1C17D08
	140 Move X1, X0
	141 Move X0, X20
	142 Call 0x1C17DEC

Method: System.Version Parse(System.String input)

Disassembly:
	0x0339D358 BFM W8, W4, 0x0, 0x0
	0x0339D35C LDP X20, X19, [X31 + 0x10]
	0x0339D360 ANDS W31, W5, 0x1
	0x0339D364 ORR W9, W8, 0x4
	0x0339D368 CSEL W8, W9, W8, NE
	0x0339D36C STRH W1, [X0]
	0x0339D370 STP W2, W8, [X0 + 0x4]
	0x0339D374 LDR X30, [X31], #0x20
	0x0339D378 RET
	0x0339D37C ADRP X0, 0xD5E000
	0x0339D380 LDR X0, [X0 + 0x760]
	0x0339D384 BL 0x1C16D08
	0x0339D388 BL 0x1C16F10
	0x0339D38C MOV X19, X0
	0x0339D390 ADRP X0, 0xD80000
	0x0339D394 LDR X0, [X0 + 0x70]
	0x0339D398 BL 0x1C16D08
	0x0339D39C MOV X20, X0
	0x0339D3A0 ADRP X0, 0xD8E000
	0x0339D3A4 LDR X0, [X0 + 0x688]
	0x0339D3A8 BL 0x1C16D08
	0x0339D3AC MOV X2, X0
	0x0339D3B0 MOV X0, X19
	0x0339D3B4 MOV X1, X20
	0x0339D3B8 MOV X3, X31
	0x0339D3BC BL 0x3311888
	0x0339D3C0 ADRP X0, 0xD8E000
	0x0339D3C4 LDR X0, [X0 + 0x690]
	0x0339D3C8 BL 0x1C16D08
	0x0339D3CC MOV X1, X0
	0x0339D3D0 MOV X0, X19
	0x0339D3D4 BL 0x1C16DEC
	0x0339D3D8 LDRH W0, [X0]
	0x0339D3DC RET
	0x0339D3E0 LDR W0, [X0 + 0x4]
	0x0339D3E4 RET
	0x0339D3E8 STP X30, X21, [X31 - 0x20]!
	0x0339D3EC STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {26}
	006 Move X20, 0x1040000
	007 Move W8, [X20+939]
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0xD7E000
	012 Move X0, [X0+656]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+939], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Call String.GetRawStringData, X0
	019 Move W1, [X19+16]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move W2, 1
	023 Move X30, [X31+32]
	024 Call Version.ParseVersion, X0, X1
	025 Return X0
	026 Move X0, 0xD5C000
	027 Move X0, [X0+1320]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X19, X0
	031 Move X0, 0xD8B000
	032 Move X0, [X0+840]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X19
	036 Move X2, X31
	037 Call ArgumentNullException..ctor, X0, X1
	038 Move X0, 0xD8F000
	039 Move X0, [X0+1576]
	040 Call 0x1C17D08
	041 Move X1, X0
	042 Move X0, X19
	043 Call 0x1C17DEC

Method: System.Version ParseVersion(System.ReadOnlySpan`1<System.Char> input, System.Boolean throwOnFailure)

Disassembly:
	0x0339DB80 LDR X0, [X0 + 0x740]
	0x0339DB84 BL 0x1C16CF4
	0x0339DB88 ADRP X0, 0xD7E000
	0x0339DB8C LDR X0, [X0 + 0x660]
	0x0339DB90 BL 0x1C16CF4
	0x0339DB94 ADRP X0, 0xD8E000
	0x0339DB98 LDR X0, [X0 + 0x748]
	0x0339DB9C BL 0x1C16CF4
	0x0339DBA0 ADRP X0, 0xD7F000
	0x0339DBA4 LDR X0, [X0 + 0x310]
	0x0339DBA8 BL 0x1C16CF4
	0x0339DBAC ADRP X0, 0xD80000
	0x0339DBB0 LDR X0, [X0 + 0x290]
	0x0339DBB4 BL 0x1C16CF4
	0x0339DBB8 ADRP X0, 0xD8D000
	0x0339DBBC LDR X0, [X0 + 0x7A0]
	0x0339DBC0 BL 0x1C16CF4
	0x0339DBC4 ADRP X0, 0xD82000
	0x0339DBC8 LDR X0, [X0 + 0xD8]
	0x0339DBCC BL 0x1C16CF4
	0x0339DBD0 ADRP X0, 0xD8E000
	0x0339DBD4 LDR X0, [X0 + 0x750]
	0x0339DBD8 BL 0x1C16CF4
	0x0339DBDC ADRP X0, 0xD7E000
	0x0339DBE0 LDR X0, [X0 + 0x760]
	0x0339DBE4 BL 0x1C16CF4
	0x0339DBE8 ADRP X0, 0xD81000
	0x0339DBEC LDR X0, [X0 + 0xC40]
	0x0339DBF0 BL 0x1C16CF4
	0x0339DBF4 ADRP X0, 0xD8E000
	0x0339DBF8 LDR X0, [X0 + 0x758]
	0x0339DBFC BL 0x1C16CF4
	0x0339DC00 ADRP X0, 0xD8E000
	0x0339DC04 LDR X0, [X0 + 0x760]
	0x0339DC08 BL 0x1C16CF4
	0x0339DC0C ADRP X0, 0xD8E000
	0x0339DC10 LDR X0, [X0 + 0x768]
	0x0339DC14 BL 0x1C16CF4
	0x0339DC18 ADRP X0, 0xD80000
	0x0339DC1C LDR X0, [X0 + 0x308]
	0x0339DC20 BL 0x1C16CF4
	0x0339DC24 ADRP X0, 0xD8E000
	0x0339DC28 LDR X0, [X0 + 0x770]
	0x0339DC2C BL 0x1C16CF4
	0x0339DC30 ADRP X0, 0xD7F000
	0x0339DC34 LDR X0, [X0 + 0x308]
	0x0339DC38 BL 0x1C16CF4
	0x0339DC3C ADRP X0, 0xD8E000
	0x0339DC40 LDR X0, [X0 + 0x778]
	0x0339DC44 BL 0x1C16CF4
	0x0339DC48 ADRP X0, 0xD8E000
	0x0339DC4C LDR X0, [X0 + 0x780]
	0x0339DC50 BL 0x1C16CF4
	0x0339DC54 ADRP X0, 0xD80000
	0x0339DC58 LDR X0, [X0 + 0x2E8]
	0x0339DC5C BL 0x1C16CF4
	0x0339DC60 ADRP X0, 0xD8E000
	0x0339DC64 LDR X0, [X0 + 0x788]
	0x0339DC68 BL 0x1C16CF4
	0x0339DC6C ADRP X0, 0xD7F000
	0x0339DC70 LDR X0, [X0 + 0x328]
	0x0339DC74 BL 0x1C16CF4
	0x0339DC78 ADRP X0, 0xD8E000
	0x0339DC7C LDR X0, [X0 + 0x790]
	0x0339DC80 BL 0x1C16CF4
	0x0339DC84 ADRP X0, 0xD8E000
	0x0339DC88 LDR X0, [X0 + 0x798]
	0x0339DC8C BL 0x1C16CF4
	0x0339DC90 ADRP X0, 0xD8E000
	0x0339DC94 LDR X0, [X0 + 0x7A0]
	0x0339DC98 BL 0x1C16CF4
	0x0339DC9C ADRP X0, 0xD8E000
	0x0339DCA0 LDR X0, [X0 + 0x7A8]
	0x0339DCA4 BL 0x1C16CF4
	0x0339DCA8 ADRP X0, 0xD8E000
	0x0339DCAC LDR X0, [X0 + 0x7B0]
	0x0339DCB0 BL 0x1C16CF4
	0x0339DCB4 ADRP X0, 0xD8E000
	0x0339DCB8 LDR X0, [X0 + 0x7B8]
	0x0339DCBC BL 0x1C16CF4
	0x0339DCC0 ADRP X0, 0xD8D000
	0x0339DCC4 LDR X0, [X0 + 0x250]
	0x0339DCC8 BL 0x1C16CF4
	0x0339DCCC ADRP X0, 0xD8E000
	0x0339DCD0 LDR X0, [X0 + 0x7C0]
	0x0339DCD4 BL 0x1C16CF4
	0x0339DCD8 ADRP X0, 0xD80000
	0x0339DCDC LDR X0, [X0 + 0x68]
	0x0339DCE0 BL 0x1C16CF4
	0x0339DCE4 ADRP X0, 0xD80000
	0x0339DCE8 LDR X0, [X0 + 0x288]
	0x0339DCEC BL 0x1C16CF4
	0x0339DCF0 MOVZ W8, 0x1
	0x0339DCF4 STRB W8, [X21 + 0x11A]
	0x0339DCF8 LDR X8, [X20]
	0x0339DCFC ADRP X9, 0xB57000
	0x0339DD00 ADD X9, X9, 0x910
	0x0339DD04 ADD X9, X9, W19, 0x3, SXTW
	0x0339DD08 ADD X8, X8, 0xB8
	0x0339DD0C CMP W19, 0x2E
	0x0339DD10 CSEL X8, X9, X8, CC
	0x0339DD14 LDR X8, [X8]
	0x0339DD18 LDP X20, X19, [X31 + 0x10]
	0x0339DD1C LDR X0, [X8]
	0x0339DD20 LDP X30, X21, [X31], #0x20
	0x0339DD24 RET
	0x0339DD28 STP X30, X21, [X31 - 0x20]!
	0x0339DD2C STP X20, X19, [X31 + 0x10]
	0x0339DD30 MOV W19, W1
	0x0339DD34 BL 0x339DA9C
	0x0339DD38 MOV X1, X31
	0x0339DD3C BL 0x33BDD84
	0x0339DD40 MOV X20, X0
	0x0339DD44 MOV W0, W19
	0x0339DD48 BL 0x339DD8C
	0x0339DD4C MOV X19, X0
	0x0339DD50 ADRP X0, 0xD5E000
	0x0339DD54 LDR X0, [X0 + 0x578]
	0x0339DD58 BL 0x1C16D08
	0x0339DD5C BL 0x1C16F10
	0x0339DD60 MOV X1, X20
	0x0339DD64 MOV X2, X19
	0x0339DD68 MOV X3, X31
	0x0339DD6C MOV X21, X0
	0x0339DD70 BL 0x330E16C
	0x0339DD74 ADRP X0, 0xD8E000
	0x0339DD78 LDR X0, [X0 + 0x7C8]
	0x0339DD7C BL 0x1C16D08
	0x0339DD80 MOV X1, X0
	0x0339DD84 MOV X0, X21
	0x0339DD88 BL 0x1C16DEC
	0x0339DD8C STP X30, X21, [X31 - 0x20]!
	0x0339DD90 STP X20, X19, [X31 + 0x10]
	0x0339DD94 ADRP X21, 0x1040000
	0x0339DD98 ADRP X20, 0xD58000
	0x0339DD9C LDRB W8, [X21 + 0x118]
	0x0339DDA0 LDR X20, [X20 + 0x278]
	0x0339DDA4 MOV W19, W0
	0x0339DDA8 TBNZ X8, 0x0, 0x339DEE0
	0x0339DDAC ADRP X0, 0xD58000
	0x0339DDB0 LDR X0, [X0 + 0x278]
	0x0339DDB4 BL 0x1C16CF4
	0x0339DDB8 ADRP X0, 0xD7E000
	0x0339DDBC LDR X0, [X0 + 0x648]
	0x0339DDC0 BL 0x1C16CF4
	0x0339DDC4 ADRP X0, 0xD81000
	0x0339DDC8 LDR X0, [X0 + 0xCD0]
	0x0339DDCC BL 0x1C16CF4
	0x0339DDD0 ADRP X0, 0xD8E000
	0x0339DDD4 LDR X0, [X0 + 0x7D0]
	0x0339DDD8 BL 0x1C16CF4
	0x0339DDDC ADRP X0, 0xD8E000
	0x0339DDE0 LDR X0, [X0 + 0x7D8]
	0x0339DDE4 BL 0x1C16CF4
	0x0339DDE8 ADRP X0, 0xD61000
	0x0339DDEC LDR X0, [X0 + 0x130]
	0x0339DDF0 BL 0x1C16CF4
	0x0339DDF4 ADRP X0, 0xD7E000
	0x0339DDF8 LDR X0, [X0 + 0x8E8]
	0x0339DDFC BL 0x1C16CF4
	0x0339DE00 ADRP X0, 0xD60000
	0x0339DE04 LDR X0, [X0 + 0xEC8]
	0x0339DE08 BL 0x1C16CF4
	0x0339DE0C ADRP X0, 0xD7F000
	0x0339DE10 LDR X0, [X0 + 0x1C0]
	0x0339DE14 BL 0x1C16CF4
	0x0339DE18 ADRP X0, 0xD7F000
	0x0339DE1C LDR X0, [X0 + 0xB08]
	0x0339DE20 BL 0x1C16CF4
	0x0339DE24 ADRP X0, 0xD61000
	0x0339DE28 LDR X0, [X0 + 0x8A8]
	0x0339DE2C BL 0x1C16CF4
	0x0339DE30 ADRP X0, 0xD8E000
	0x0339DE34 LDR X0, [X0 + 0x7E0]
	0x0339DE38 BL 0x1C16CF4
	0x0339DE3C ADRP X0, 0xD80000
	0x0339DE40 LDR X0, [X0 + 0x2D8]
	0x0339DE44 BL 0x1C16CF4
	0x0339DE48 ADRP X0, 0xD87000
	0x0339DE4C LDR X0, [X0 + 0x68]
	0x0339DE50 BL 0x1C16CF4
	0x0339DE54 ADRP X0, 0xD7E000
	0x0339DE58 LDR X0, [X0 + 0x640]
	0x0339DE5C BL 0x1C16CF4
	0x0339DE60 ADRP X0, 0xD80000
	0x0339DE64 LDR X0, [X0 + 0x2B0]
	0x0339DE68 BL 0x1C16CF4
	0x0339DE6C ADRP X0, 0xD7E000
	0x0339DE70 LDR X0, [X0 + 0x8A8]
	0x0339DE74 BL 0x1C16CF4
	0x0339DE78 ADRP X0, 0xD80000
	0x0339DE7C LDR X0, [X0 + 0x58]
	0x0339DE80 BL 0x1C16CF4
	0x0339DE84 ADRP X0, 0xD5E000
	0x0339DE88 LDR X0, [X0 + 0x588]
	0x0339DE8C BL 0x1C16CF4
	0x0339DE90 ADRP X0, 0xD8A000
	0x0339DE94 LDR X0, [X0 + 0x830]
	0x0339DE98 BL 0x1C16CF4
	0x0339DE9C ADRP X0, 0xD7E000
	0x0339DEA0 LDR X0, [X0 + 0x778]
	0x0339DEA4 BL 0x1C16CF4
	0x0339DEA8 ADRP X0, 0xD7E000
	0x0339DEAC LDR X0, [X0 + 0x658]
	0x0339DEB0 BL 0x1C16CF4
	0x0339DEB4 ADRP X0, 0xD80000
	0x0339DEB8 LDR X0, [X0 + 0x70]
	0x0339DEBC BL 0x1C16CF4
	0x0339DEC0 ADRP X0, 0xD8E000
	0x0339DEC4 LDR X0, [X0 + 0x7E8]
	0x0339DEC8 BL 0x1C16CF4
	0x0339DECC ADRP X0, 0xD8E000
	0x0339DED0 LDR X0, [X0 + 0x7F0]
	0x0339DED4 BL 0x1C16CF4
	0x0339DED8 MOVZ W8, 0x1
	0x0339DEDC STRB W8, [X21 + 0x118]
	0x0339DEE0 LDR X8, [X20]
	0x0339DEE4 ADRP X9, 0xB57000
	0x0339DEE8 ADD X9, X9, 0xA80
	0x0339DEEC ADD X9, X9, W19, 0x3, SXTW
	0x0339DEF0 ADD X8, X8, 0xB8
	0x0339DEF4 CMP W19, 0x18
	0x0339DEF8 CSEL X8, X9, X8, CC
	0x0339DEFC LDR X8, [X8]
	0x0339DF00 LDP X20, X19, [X31 + 0x10]
	0x0339DF04 LDR X0, [X8]
	0x0339DF08 LDP X30, X21, [X31], #0x20
	0x0339DF0C RET
	0x0339DF10 STP X30, X21, [X31 - 0x20]!
	0x0339DF14 STP X20, X19, [X31 + 0x10]
	0x0339DF18 MOV W19, W0
	0x0339DF1C ADRP X0, 0xD8E000
	0x0339DF20 LDR X0, [X0 + 0x7F8]
	0x0339DF24 MOV W20, W1
	0x0339DF28 BL 0x1C16D08
	0x0339DF2C LDR X8, [X0 + 0xB8]
	0x0339DF30 MOV W0, W19
	0x0339DF34 LDRB W21, [X8]
	0x0339DF38 BL 0x339DD8C
	0x0339DF3C MOV X19, X0
	0x0339DF40 CBNZ W21, 0x339DF5C
	0x0339DF44 MOV W0, W20
	0x0339DF48 BL 0x339DA9C
	0x0339DF4C MOV X1, X31
	0x0339DF50 BL 0x33BDD84
	0x0339DF54 MOV X20, X0
	0x0339DF58 B 0x339DF70
	0x0339DF5C ADRP X0, 0xD58000
	0x0339DF60 LDR X0, [X0 + 0x278]
	0x0339DF64 BL 0x1C16D08
	0x0339DF68 LDR X8, [X0 + 0xB8]
	0x0339DF6C LDR X20, [X8]
	0x0339DF70 ADRP X0, 0xD5E000
	0x0339DF74 LDR X0, [X0 + 0x760]
	0x0339DF78 BL 0x1C16D08
	0x0339DF7C BL 0x1C16F10
	0x0339DF80 MOV X1, X19
	0x0339DF84 MOV X2, X20
	0x0339DF88 MOV X3, X31
	0x0339DF8C MOV X21, X0
	0x0339DF90 BL 0x3311888
	0x0339DF94 ADRP X0, 0xD8E000
	0x0339DF98 LDR X0, [X0 + 0x800]
	0x0339DF9C BL 0x1C16D08
	0x0339DFA0 MOV X1, X0
	0x0339DFA4 MOV X0, X21
	0x0339DFA8 BL 0x1C16DEC
	0x0339DFAC STR X30, [X31 - 0x20]!
	0x0339DFB0 STP X20, X19, [X31 + 0x10]
	0x0339DFB4 BL 0x339DA9C
	0x0339DFB8 MOV X1, X31
	0x0339DFBC BL 0x33BDD84
	0x0339DFC0 MOV X19, X0
	0x0339DFC4 ADRP X0, 0xD56000
	0x0339DFC8 LDR X0, [X0 + 0x5B0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x1041000
	015 Move X28, 0xD8E000
	016 Move W8, [X22+262]
	017 Move X28, [X28+3448]
	018 Move W19, W2
	019 Move X20, X1
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {48}
	025 Move X0, 0xD8E000
	026 Move X0, [X0+3448]
	027 Call 0x1C17CF4
	028 Move X0, 0xD8B000
	029 Move X0, [X0+2024]
	030 Call 0x1C17CF4
	031 Move X0, 0xD8A000
	032 Move X0, [X0+3472]
	033 Call 0x1C17CF4
	034 Move X0, 0xD5F000
	035 Move X0, [X0+1984]
	036 Call 0x1C17CF4
	037 Move X0, 0xD8B000
	038 Move X0, [X0+840]
	039 Call 0x1C17CF4
	040 Move X0, 0xD8F000
	041 Move X0, [X0+1528]
	042 Call 0x1C17CF4
	043 Move X0, 0xD8F000
	044 Move X0, [X0+1536]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X22+262], W8
	048 Move X3, [X28]
	049 Move W2, 46
	050 Move X0, X21
	051 Move X1, X20
	052 Move [X31], X31
	053 Move [X31+8], X31
	054 Call 0x338CFD4
	055 Move TEMP, X0
	056 And TEMP, TEMP, -2147483648
	057 Compare TEMP, -2147483648
	058 JumpIfEqual {114}
	059 Move W23, W0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X25, 0xD8B000
	062 Move X25, [X25+2024]
	063 Add W26, W23, 1
	064 Move X8, [X25]
	065 Move X0, [X8+32]
	066 Move W8, [X0+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {72}
	071 Call 0x1C5D684
	072 Move X3, [X28]
	073 Subtract W24, W20, W26
	074 Add X22, X21, W26
	075 Move W2, 46
	076 Move X0, X22
	077 Move X1, X24
	078 Call 0x338CFD4
	079 Add W31, W0, 1
	080 Add W27, W0, W26
	081 Add W26, W27, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, [X25]
	084 Move X0, [X8+32]
	085 Move W8, [X0+309]
	086 Move TEMP, X8
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {91}
	090 Call 0x1C5D684
	091 Move X3, [X28]
	092 Subtract W1, W20, W26
	093 Add X0, X21, W26
	094 Move W2, 46
	095 Call 0x338CFD4
	096 Add W31, W0, 1
	097 Add W26, W0, W26
	098 Add W29, W26, 1
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X8, [X25]
	101 Move X0, [X8+32]
	102 Move W8, [X0+309]
	103 Move TEMP, X8
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {108}
	107 Call 0x1C5D684
	108 Move X3, [X28]
	109 Subtract W1, W20, W29
	110 Add X0, X21, W29
	111 Move W2, 46
	112 Call 0x338CFD4
	113 Add W31, W0, 1
	114 Move TEMP, X19
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {316}
	118 Move X0, 0xD5F000
	119 Move X0, [X0+1400]
	120 Call 0x1C17D08
	121 Call 0x1C17F10
	122 Move X19, X0
	123 Move X0, 0xD8F000
	124 Move X0, [X0+1624]
	125 Call 0x1C17D08
	126 Move X20, X0
	127 Move X0, 0xD8B000
	128 Move X0, [X0+840]
	129 Call 0x1C17D08
	130 Move X2, X0
	131 Move X0, X19
	132 Move X1, X20
	133 Move X3, X31
	134 Call ArgumentException..ctor, X0, X1, X2
	135 Move X0, 0xD8F000
	136 Move X0, [X0+1632]
	137 Call 0x1C17D08
	138 Move X1, X0
	139 Move X0, X19
	140 Call 0x1C17DEC
	141 Move TEMP, 0
	142 Not TEMP
	143 Move W27, TEMP
	144 Move TEMP, 0
	145 Not TEMP
	146 Move W26, TEMP
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X28, 0xD8A000
	149 Move X28, [X28+3472]
	150 Move X8, [X28]
	151 Move X0, [X8+32]
	152 Move W8, [X0+309]
	153 Move TEMP, X8
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {158}
	157 Call 0x1C5D684
	158 Move X29, 0xD8B000
	159 Move X29, [X29+840]
	160 Move W1, W23
	161 And W3, W19, 1
	162 Add X4, X31, 0
	163 Move X2, [X29]
	164 Move X0, X21
	165 Call Version.TryParseComponent, X0, X1, X2, X3
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {316}
	170 Add W31, W27, 1
	171 NotImplemented "Instruction ORN not yet implemented."
	172 Add W23, W27, W8
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X8, [X28]
	175 Move X0, [X8+32]
	176 Move W8, [X0+309]
	177 Move TEMP, X8
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfEqual {182}
	181 Call 0x1C5D684
	182 Move X2, [X29]
	183 Move W1, W23
	184 And W3, W19, 1
	185 Add X4, X31, 12
	186 Move X0, X22
	187 Call Version.TryParseComponent, X0, X1, X2, X3
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {316}
	192 Add W31, W26, 1
	193 Add W22, W27, 1
	194 NotImplemented "Instruction CMP not yet implemented."
	195 NotImplemented "Instruction ORN not yet implemented."
	196 Add W23, W26, W8
	197 Subtract W8, W20, W22
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X8, [X28]
	200 Move X0, [X8+32]
	201 Move W8, [X0+309]
	202 Move TEMP, X8
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfEqual {207}
	206 Call 0x1C5D684
	207 Move X8, 0xD8F000
	208 Move X8, [X8+1528]
	209 Add X0, X21, W22
	210 Move W1, W23
	211 And W3, W19, 1
	212 Move X2, [X8]
	213 Add X4, X31, 8
	214 Call Version.TryParseComponent, X0, X1, X2, X3
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {316}
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X8, [X25]
	221 Add W22, W26, 1
	222 Move X0, [X8+32]
	223 Move W8, [X0+309]
	224 Move TEMP, X8
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfEqual {229}
	228 Call 0x1C5D684
	229 Move X8, 0xD8F000
	230 Move X8, [X8+1536]
	231 Subtract W1, W20, W22
	232 Add X0, X21, W22
	233 And W3, W19, 1
	234 Move X2, [X8]
	235 Add X4, X31, 4
	236 Call Version.TryParseComponent, X0, X1, X2, X3
	237 Move TEMP, X0
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfNotEqual {316}
	241 Move X8, 0xD5F000
	242 Move W20, [X31]
	243 Move W23, [X31+4]
	244 Move W22, [X31+8]
	245 Move W21, [X31+12]
	246 Move X8, [X8+1984]
	247 Move X0, [X8]
	248 Call 0x1C17F10
	249 Move W1, W20
	250 Move W2, W21
	251 Move W3, W22
	252 Move W4, W23
	253 Move X19, X0
	254 Call Version..ctor, X0, X1, X2, X3, X4
	255 Move X8, [X25]
	256 Move X0, [X8+32]
	257 Move W8, [X0+309]
	258 Move TEMP, X8
	259 And TEMP, TEMP, 1
	260 Compare TEMP, 1
	261 JumpIfEqual {263}
	262 Call 0x1C5D684
	263 Move X2, [X29]
	264 And W3, W19, 1
	265 Add X4, X31, 12
	266 Move X0, X22
	267 Move X1, X24
	268 Call Version.TryParseComponent, X0, X1, X2, X3
	269 Move TEMP, X0
	270 And TEMP, TEMP, 1
	271 Compare TEMP, 1
	272 JumpIfNotEqual {316}
	273 Move X8, 0xD5F000
	274 Move W20, [X31]
	275 Move W21, [X31+12]
	276 Move X8, [X8+1984]
	277 Move X0, [X8]
	278 Call 0x1C17F10
	279 Move W1, W20
	280 Move W2, W21
	281 Move X19, X0
	282 Call Version..ctor, X0, X1, X2
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move X8, [X25]
	285 Move X0, [X8+32]
	286 Move W8, [X0+309]
	287 Move TEMP, X8
	288 And TEMP, TEMP, 1
	289 Compare TEMP, 1
	290 JumpIfEqual {292}
	291 Call 0x1C5D684
	292 Move X8, 0xD8F000
	293 Move X8, [X8+1528]
	294 Subtract W1, W20, W22
	295 Add X0, X21, W22
	296 And W3, W19, 1
	297 Move X2, [X8]
	298 Add X4, X31, 8
	299 Call Version.TryParseComponent, X0, X1, X2, X3
	300 Move TEMP, X0
	301 And TEMP, TEMP, 1
	302 Compare TEMP, 1
	303 JumpIfNotEqual {316}
	304 Move X8, 0xD5F000
	305 Move W20, [X31]
	306 Move W22, [X31+8]
	307 Move W21, [X31+12]
	308 Move X8, [X8+1984]
	309 Move X0, [X8]
	310 Call 0x1C17F10
	311 Move W1, W20
	312 Move W2, W21
	313 Move W3, W22
	314 Move X19, X0
	315 Call Version..ctor, X0, X1, X2, X3
	316 Move X19, X31
	317 Move X0, X19
	318 Move X20, [X31+96]
	319 Move X19, [X31+104]
	320 Move X22, [X31+80]
	321 Move X21, [X31+88]
	322 Move X24, [X31+64]
	323 Move X23, [X31+72]
	324 Move X26, [X31+48]
	325 Move X25, [X31+56]
	326 Move X28, [X31+32]
	327 Move X27, [X31+40]
	328 Move X29, [X31+16]
	329 Move X30, [X31+24]
	330 Add X31, X31, 112
	331 Return X0
	332 Call ThrowHelper.ThrowArgumentOutOfRangeException

Method: System.Boolean TryParseComponent(System.ReadOnlySpan`1<System.Char> component, System.String componentName, System.Boolean throwOnFailure, out System.Int32 parsedComponent)

Disassembly:
	0x0339DFCC BL 0x1C16D08
	0x0339DFD0 BL 0x1C16F10
	0x0339DFD4 MOV X1, X19
	0x0339DFD8 MOV X2, X31
	0x0339DFDC MOV X20, X0
	0x0339DFE0 BL 0x337DF1C
	0x0339DFE4 ADRP X0, 0xD8E000
	0x0339DFE8 LDR X0, [X0 + 0x808]
	0x0339DFEC BL 0x1C16D08
	0x0339DFF0 MOV X1, X0
	0x0339DFF4 MOV X0, X20
	0x0339DFF8 BL 0x1C16DEC
	0x0339DFFC STR X30, [X31 - 0x20]!
	0x0339E000 STP X20, X19, [X31 + 0x10]
	0x0339E004 BL 0x339DA9C
	0x0339E008 MOV X1, X31
	0x0339E00C BL 0x33BDD84
	0x0339E010 MOV X19, X0
	0x0339E014 ADRP X0, 0xD7F000
	0x0339E018 LDR X0, [X0 + 0x2E0]
	0x0339E01C BL 0x1C16D08
	0x0339E020 BL 0x1C16F10
	0x0339E024 MOV X1, X19
	0x0339E028 MOV X2, X31
	0x0339E02C MOV X20, X0
	0x0339E030 BL 0x329F100
	0x0339E034 ADRP X0, 0xD8D000
	0x0339E038 LDR X0, [X0 + 0x810]
	0x0339E03C BL 0x1C16D08
	0x0339E040 MOV X1, X0
	0x0339E044 MOV X0, X20
	0x0339E048 BL 0x1C16DEC
	0x0339E04C STR X30, [X31 - 0x20]!
	0x0339E050 STP X20, X19, [X31 + 0x10]
	0x0339E054 BL 0x339DA9C
	0x0339E058 MOV X1, X31
	0x0339E05C BL 0x33BDD84
	0x0339E060 MOV X19, X0
	0x0339E064 ADRP X0, 0xD55000
	0x0339E068 LDR X0, [X0 + 0xB40]
	0x0339E06C BL 0x1C16D08
	0x0339E070 BL 0x1C16F10
	0x0339E074 MOV X1, X19
	0x0339E078 MOV X2, X31
	0x0339E07C MOV X20, X0
	0x0339E080 BL 0x3379A44
	0x0339E084 ADRP X0, 0xD8D000
	0x0339E088 LDR X0, [X0 + 0x818]
	0x0339E08C BL 0x1C16D08
	0x0339E090 MOV X1, X0
	0x0339E094 MOV X0, X20
	0x0339E098 BL 0x1C16DEC
	0x0339E09C STP X30, X19, [X31 - 0x10]!
	0x0339E0A0 ADRP X0, 0xD55000
	0x0339E0A4 LDR X0, [X0 + 0x5B0]
	0x0339E0A8 BL 0x1C16D08
	0x0339E0AC BL 0x1C16F10
	0x0339E0B0 MOV X19, X0
	0x0339E0B4 ADRP X0, 0xD7F000
	0x0339E0B8 LDR X0, [X0 + 0x288]
	0x0339E0BC BL 0x1C16D08
	0x0339E0C0 MOV X1, X0
	0x0339E0C4 MOV X0, X19
	0x0339E0C8 MOV X2, X31
	0x0339E0CC BL 0x337DF1C
	0x0339E0D0 ADRP X0, 0xD8D000
	0x0339E0D4 LDR X0, [X0 + 0x820]
	0x0339E0D8 BL 0x1C16D08
	0x0339E0DC MOV X1, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x1041000
	010 Move X24, 0xD59000
	011 Move W8, [X25+263]
	012 Move X24, [X24+3144]
	013 Move X20, X4
	014 Move W23, W3
	015 Move X19, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xD58000
	023 Move X0, [X0+3144]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+263], W8
	027 Move X0, [X24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X31
	033 Call CultureInfo.get_InvariantCulture
	034 Move X3, X0
	035 Move W2, 7
	036 Move X0, X22
	037 Move X1, X21
	038 Move TEMP, X23
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {50}
	042 Move X4, X31
	043 Call Int32.Parse, X0, X1, X2
	044 Move [X20], W0
	045 Move TEMP, X0
	046 And TEMP, TEMP, -2147483648
	047 Compare TEMP, -2147483648
	048 JumpIfEqual {72}
	049 Move W0, 1
	050 Move X4, X20
	051 Move X5, X31
	052 Call Int32.TryParse, X0, X1, X2, X3
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {62}
	057 Move W8, [X20]
	058 NotImplemented "Instruction ORN not yet implemented."
	059 Move W0, W8
	060 ShiftRight W0, 31
	061 And W0, W0, 0x7FFFFFFF
	062 Move W0, W31
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move X30, [X31+64]
	070 Move X25, [X31+72]
	071 Return X0
	072 Move X0, 0xD5E000
	073 Move X0, [X0+1888]
	074 Call 0x1C17D08
	075 Call 0x1C17F10
	076 Move X20, X0
	077 Move X0, 0xD8E000
	078 Move X0, [X0+1544]
	079 Call 0x1C17D08
	080 Move X2, X0
	081 Move X0, X20
	082 Move X1, X19
	083 Move X3, X31
	084 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	085 Move X0, 0xD8E000
	086 Move X0, [X0+1640]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X20
	090 Call 0x1C17DEC

Method: System.Boolean op_Equality(System.Version v1, System.Version v2)

Disassembly:
	0x0339D580 BL 0x1C16D08
	0x0339D584 MOV X1, X0
	0x0339D588 MOV X0, X19
	0x0339D58C BL 0x1C16DEC
	0x0339D590 STR X30, [X31 - 0x20]!

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {5}
	003 Call Version.Equals, X0, X1
	004 Return X0
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0

Method: System.Boolean op_Inequality(System.Version v1, System.Version v2)

Disassembly:
	0x0339E0E0 MOV X0, X19
	0x0339E0E4 BL 0x1C16DEC
	0x0339E0E8 STP X30, X19, [X31 - 0x10]!
	0x0339E0EC ADRP X0, 0xD55000
	0x0339E0F0 LDR X0, [X0 + 0x5B0]
	0x0339E0F4 BL 0x1C16D08
	0x0339E0F8 BL 0x1C16F10
	0x0339E0FC MOV X19, X0
	0x0339E100 ADRP X0, 0xD7F000
	0x0339E104 LDR X0, [X0 + 0x290]

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {6}
	003 Move [X31-16], X30
	004 Call Version.Equals, X0, X1
	005 Move X30, [X31+16]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 NotImplemented "Instruction ORN not yet implemented."
	009 And W0, W8, 1
	010 Return X0

Method: System.Boolean op_LessThan(System.Version v1, System.Version v2)

Disassembly:
	0x0339E108 BL 0x1C16D08
	0x0339E10C MOV X1, X0
	0x0339E110 MOV X0, X19
	0x0339E114 MOV X2, X31
	0x0339E118 BL 0x337DF1C
	0x0339E11C ADRP X0, 0xD8D000
	0x0339E120 LDR X0, [X0 + 0x828]
	0x0339E124 BL 0x1C16D08
	0x0339E128 MOV X1, X0
	0x0339E12C MOV X0, X19
	0x0339E130 BL 0x1C16DEC
	0x0339E134 STP X30, X19, [X31 - 0x10]!
	0x0339E138 ADRP X0, 0xD55000
	0x0339E13C LDR X0, [X0 + 0x5B0]
	0x0339E140 BL 0x1C16D08
	0x0339E144 BL 0x1C16F10
	0x0339E148 MOV X19, X0
	0x0339E14C ADRP X0, 0xD80000
	0x0339E150 LDR X0, [X0 + 0xC48]
	0x0339E154 BL 0x1C16D08
	0x0339E158 MOV X1, X0
	0x0339E15C MOV X0, X19
	0x0339E160 MOV X2, X31
	0x0339E164 BL 0x337DF1C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Call Version.CompareTo, X0, X1
	006 Move W0, W0
	007 ShiftRight W0, 31
	008 And W0, W0, 0x7FFFFFFF
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Move X0, 0xD5B000
	013 Move X0, [X0+1320]
	014 Call 0x1C17D08
	015 Call 0x1C17F10
	016 Move X19, X0
	017 Move X0, 0xD8E000
	018 Move X0, [X0+1648]
	019 Call 0x1C17D08
	020 Move X1, X0
	021 Move X0, X19
	022 Move X2, X31
	023 Call ArgumentNullException..ctor, X0, X1
	024 Move X0, 0xD8E000
	025 Move X0, [X0+1656]
	026 Call 0x1C17D08
	027 Move X1, X0
	028 Move X0, X19
	029 Call 0x1C17DEC

Method: System.Boolean op_GreaterThan(System.Version v1, System.Version v2)

Disassembly:
	0x0339E168 ADRP X0, 0xD8D000
	0x0339E16C LDR X0, [X0 + 0x830]
	0x0339E170 BL 0x1C16D08
	0x0339E174 MOV X1, X0

ISIL:
	001 Move X8, X0
	002 Move X0, X1
	003 Move X1, X8
	004 Call Version.op_LessThan, X0, X1
	005 Return X0

