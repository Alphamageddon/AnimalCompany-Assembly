Type: System.Globalization.DateTimeFormatInfoScanner

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get_KnownWords()

Disassembly:
	0x0332AE98 LDR W8, [X19 + 0x18]
	0x0332AE9C CMP W22, W8
	0x0332AEA0 B.CS 0x332AF30
	0x0332AEA4 LDR X0, [X23, X22, LSL #3]
	0x0332AEA8 CBZ X0, 0x332AF2C
	0x0332AEAC ADD W1, W20, 0x1
	0x0332AEB0 MOV X2, X31
	0x0332AEB4 BL 0x3222A1C
	0x0332AEB8 MOVZ W8, 0x6708
	0x0332AEBC CMP W8, W0, UXTH
	0x0332AEC0 B.NE 0x332AEF0
	0x0332AEC4 LDR W8, [X19 + 0x18]
	0x0332AEC8 CMP W22, W8
	0x0332AECC B.CS 0x332AF30
	0x0332AED0 LDR X0, [X23, X22, LSL #3]
	0x0332AED4 CBZ X0, 0x332AF2C
	0x0332AED8 ADD W1, W20, 0x2
	0x0332AEDC MOV X2, X31
	0x0332AEE0 BL 0x3222A1C
	0x0332AEE4 AND W8, W0, 0xFFFF
	0x0332AEE8 CMP W8, 0x27
	0x0332AEEC B.EQ 0x332AD70
	0x0332AEF0 MOVZ W0, 0x1
	0x0332AEF4 B 0x332AD74
	0x0332AEF8 MOV W1, W21
	0x0332AEFC MOV X2, X31
	0x0332AF00 BL 0x3222A1C
	0x0332AF04 AND W8, W0, 0xFFFF
	0x0332AF08 MOVZ W9, 0x6708
	0x0332AF0C CMP W8, W9
	0x0332AF10 MOV W0, W31
	0x0332AF14 B.EQ 0x332AD74
	0x0332AF18 MOVZ W9, 0xC6D4
	0x0332AF1C CMP W8, W9
	0x0332AF20 B.EQ 0x332AD74
	0x0332AF24 LDR W8, [X19 + 0x18]
	0x0332AF28 B 0x332AE34
	0x0332AF2C BL 0x1C16F20
	0x0332AF30 BL 0x1C16F28
	0x0332AF34 STP X30, X25, [X31 - 0x40]!
	0x0332AF38 STP X24, X23, [X31 + 0x10]
	0x0332AF3C STP X22, X21, [X31 + 0x20]
	0x0332AF40 STP X20, X19, [X31 + 0x30]
	0x0332AF44 ADRP X20, 0x10B2000
	0x0332AF48 LDRB W8, [X20 + 0xCB0]
	0x0332AF4C MOV X19, X0
	0x0332AF50 TBNZ X8, 0x0, 0x332AF68
	0x0332AF54 ADRP X0, 0xDCB000
	0x0332AF58 LDR X0, [X0 + 0x170]
	0x0332AF5C BL 0x1C16CF4
	0x0332AF60 MOVZ W8, 0x1
	0x0332AF64 STRB W8, [X20 + 0xCB0]
	0x0332AF68 CBZ X19, 0x332B024
	0x0332AF6C LDR X8, [X19 + 0x18]
	0x0332AF70 CMP W8, 0x0
	0x0332AF74 CSET W22, GT
	0x0332AF78 CMP W8, 0x1
	0x0332AF7C B.LT 0x332B00C
	0x0332AF80 ADRP X24, 0xDCB000
	0x0332AF84 LDR X24, [X24 + 0x170]
	0x0332AF88 MOV W23, W31
	0x0332AF8C CMP W23, W8
	0x0332AF90 B.CS 0x332B028
	0x0332AF94 ADD X9, X19, W23, 0x3, SXTW
	0x0332AF98 MOV W20, W31
	0x0332AF9C ADD X25, X9, 0x20
	0x0332AFA0 LDR X0, [X25]
	0x0332AFA4 CBZ X0, 0x332B024
	0x0332AFA8 LDR W9, [X0 + 0x10]
	0x0332AFAC CMP W20, W9
	0x0332AFB0 B.GE 0x332AFFC
	0x0332AFB4 MOV W1, W20
	0x0332AFB8 MOV X2, X31
	0x0332AFBC BL 0x3222A1C
	0x0332AFC0 LDR X8, [X24]
	0x0332AFC4 MOV W21, W0
	0x0332AFC8 LDR W9, [X8 + 0xE0]
	0x0332AFCC CBNZ W9, 0x332AFD8
	0x0332AFD0 MOV X0, X8
	0x0332AFD4 BL 0x1C16DFC
	0x0332AFD8 MOV W0, W21
	0x0332AFDC MOV X1, X31
	0x0332AFE0 BL 0x3317FCC
	0x0332AFE4 TBNZ X0, 0x0, 0x332B00C
	0x0332AFE8 LDR X8, [X19 + 0x18]
	0x0332AFEC ADD W20, W20, 0x1
	0x0332AFF0 CMP W23, W8
	0x0332AFF4 B.CC 0x332AFA0
	0x0332AFF8 B 0x332B028
	0x0332AFFC ADD W23, W23, 0x1
	0x0332B000 CMP W23, W8
	0x0332B004 CSET W22, LT
	0x0332B008 B.LT 0x332AF8C
	0x0332B00C AND W0, W22, 0x1
	0x0332B010 LDP X20, X19, [X31 + 0x30]
	0x0332B014 LDP X22, X21, [X31 + 0x20]
	0x0332B018 LDP X24, X23, [X31 + 0x10]
	0x0332B01C LDP X30, X25, [X31], #0x40
	0x0332B020 RET
	0x0332B024 BL 0x1C16F20
	0x0332B028 BL 0x1C16F28
	0x0332B02C STP X1, X2, [X0]
	0x0332B030 STR X3, [X0 + 0x10]
	0x0332B034 RET
	0x0332B038 STR X30, [X31 - 0x30]!
	0x0332B03C STP X22, X21, [X31 + 0x10]
	0x0332B040 STP X20, X19, [X31 + 0x20]
	0x0332B044 ADRP X19, 0x10B1000
	0x0332B048 ADRP X21, 0xDC8000
	0x0332B04C LDRB W8, [X19 + 0xCB2]
	0x0332B050 LDR X21, [X21 + 0x8F0]
	0x0332B054 MOV W20, W0
	0x0332B058 TBNZ X8, 0x0, 0x332B070
	0x0332B05C ADRP X0, 0xDC8000
	0x0332B060 LDR X0, [X0 + 0x8F0]
	0x0332B064 BL 0x1C16CF4
	0x0332B068 MOVZ W8, 0x1
	0x0332B06C STRB W8, [X19 + 0xCB2]
	0x0332B070 LDR X0, [X21]
	0x0332B074 BL 0x1C16F10
	0x0332B078 MOV X1, X31
	0x0332B07C MOV X19, X0
	0x0332B080 BL 0x3231AC4
	0x0332B084 MOVN W8, 0x1387
	0x0332B088 MOVZ W9, 0x1389
	0x0332B08C ADD W8, W20, W8
	0x0332B090 CMP W20, W9
	0x0332B094 CSEL W20, W20, W8, LT
	0x0332B098 CMP W20, 0x64
	0x0332B09C B.LT 0x332B11C
	0x0332B0A0 MOVZ W21, 0x851F
	0x0332B0A4 CMP W20, 0x190
	0x0332B0A8 MOVK W21, 0x51EB0000
	0x0332B0AC B.LT 0x332B0D4
	0x0332B0B0 CBZ X19, 0x332B2B8
	0x0332B0B4 UMADDL X8, X20, X21, X31
	0x0332B0B8 UBFM X22, X8, 0x27, 0x3F
	0x0332B0BC MOVZ W1, 0x5EA
	0x0332B0C0 MOV X0, X19
	0x0332B0C4 MOV X2, X31
	0x0332B0C8 BL 0x3233D30
	0x0332B0CC SUBS W22, W22, 0x1
	0x0332B0D0 B.NE 0x332B0BC
	0x0332B0D4 SMADDL X8, X20, X21, X31
	0x0332B0D8 UBFM X10, X8, 0x3F, 0x3F
	0x0332B0DC SBFM X8, X8, 0x25, 0x3F
	0x0332B0E0 ADD W10, W8, W10
	0x0332B0E4 ADD W8, W10, 0x3
	0x0332B0E8 CMP W10, 0x0
	0x0332B0EC CSEL W8, W8, W10, LT
	0x0332B0F0 AND W8, W8, 0xFFFFFFFC
	0x0332B0F4 MOVN W9, 0x63
	0x0332B0F8 SUB W8, W10, W8
	0x0332B0FC CMP W8, 0x1
	0x0332B100 MADD W20, W10, W9, W20
	0x0332B104 B.LT 0x332B11C
	0x0332B108 CBZ X19, 0x332B2B8
	0x0332B10C ADD W1, W8, 0x5E6
	0x0332B110 MOV X0, X19
	0x0332B114 MOV X2, X31
	0x0332B118 BL 0x3233D30
	0x0332B11C MOVZ W8, 0x6667
	0x0332B120 MOVK W8, 0x66660000
	0x0332B124 SMADDL X8, X20, X8, X31
	0x0332B128 UBFM X9, X8, 0x3F, 0x3F
	0x0332B12C SBFM X8, X8, 0x22, 0x3F
	0x0332B130 ADD W8, W8, W9
	0x0332B134 MOVZ W9, 0xA
	0x0332B138 SUB W10, W8, 0x1
	0x0332B13C CMP W10, 0x8
	0x0332B140 MSUB W8, W8, W9, W20
	0x0332B144 B.HI 0x332B174
	0x0332B148 ADRP X11, 0xFFFFFFFFFD86B000
	0x0332B14C ADD X11, X11, 0x6A0
	0x0332B150 ADR X12, 0x18
	0x0332B154 LDRB W13, [X11, X10, LSL]
	0x0332B158 ADD X12, X12, X13, 0x2, LSL
	0x0332B15C MOVZ W9, 0x5D9
	0x0332B160 MOVZ W10, 0x1
	0x0332B164 BR X12
	0x0332B168 MOV W10, W31
	0x0332B16C MOVZ W9, 0x5DB
	0x0332B170 B 0x332B1D0
	0x0332B174 MOV W10, W31
	0x0332B178 MOV W9, W31
	0x0332B17C B 0x332B1D0
	0x0332B180 MOV W10, W31
	0x0332B184 MOVZ W9, 0x5DC
	0x0332B188 B 0x332B1D0
	0x0332B18C MOV W10, W31
	0x0332B190 MOVZ W9, 0x5DE
	0x0332B194 B 0x332B1D0
	0x0332B198 MOV W10, W31
	0x0332B19C MOVZ W9, 0x5E0
	0x0332B1A0 B 0x332B1D0
	0x0332B1A4 MOV W10, W31
	0x0332B1A8 MOVZ W9, 0x5E1
	0x0332B1AC B 0x332B1D0
	0x0332B1B0 MOV W10, W31
	0x0332B1B4 MOVZ W9, 0x5E2
	0x0332B1B8 B 0x332B1D0
	0x0332B1BC MOV W10, W31
	0x0332B1C0 MOVZ W9, 0x5E4
	0x0332B1C4 B 0x332B1D0
	0x0332B1C8 MOV W10, W31
	0x0332B1CC MOVZ W9, 0x5E6
	0x0332B1D0 ADD W11, W8, 0x5CF
	0x0332B1D4 CMP W8, 0x0
	0x0332B1D8 CSEL W11, W11, W31, GT
	0x0332B1DC CMP W11, 0x5D4
	0x0332B1E0 CSET W12, EQ
	0x0332B1E4 MOVZ W8, 0x5D5
	0x0332B1E8 ANDS W31, W12, W10, 0x0
	0x0332B1EC CSEL W8, W8, W11, NE
	0x0332B1F0 MOVZ W10, 0x5D8
	0x0332B1F4 AND W11, W8, 0xFFFF
	0x0332B1F8 CSEL W9, W10, W9, NE
	0x0332B1FC CMP W11, 0x5D5
	0x0332B200 CSET W11, EQ
	0x0332B204 CMP W9, 0x5D9
	0x0332B208 CSET W12, EQ
	0x0332B20C ANDS W31, W11, W12, 0x0
	0x0332B210 MOVZ W11, 0x5D6
	0x0332B214 CSEL W1, W10, W9, NE
	0x0332B218 CSEL W20, W11, W8, NE
	0x0332B21C CBZ W1, 0x332B230
	0x0332B220 CBZ X19, 0x332B2B8
	0x0332B224 MOV X0, X19
	0x0332B228 MOV X2, X31
	0x0332B22C BL 0x3233D30
	0x0332B230 ANDS W31, W20, 0xFFFF
	0x0332B234 B.EQ 0x332B250
	0x0332B238 CBZ X19, 0x332B2B8
	0x0332B23C MOV X0, X19
	0x0332B240 MOV W1, W20
	0x0332B244 MOV X2, X31
	0x0332B248 BL 0x3233D30
	0x0332B24C B 0x332B254
	0x0332B250 CBZ X19, 0x332B2B8
	0x0332B254 MOV X0, X19
	0x0332B258 MOV X1, X31
	0x0332B25C BL 0x323260C
	0x0332B260 CMP W0, 0x2
	0x0332B264 B.GE 0x332B27C
	0x0332B268 MOVZ W1, 0x27
	0x0332B26C MOV X0, X19
	0x0332B270 MOV X2, X31
	0x0332B274 BL 0x3233D30
	0x0332B278 B 0x332B29C
	0x0332B27C MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x10B3000
	007 Move X20, 0xDFF000
	008 Move W8, [X19+3241]
	009 Move X20, [X20+1128]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {79}
	014 Move X0, 0xDFF000
	015 Move X0, [X0+1128]
	016 Call 0x1C17CF4
	017 Move X0, 0xDCB000
	018 Move X0, [X0+2064]
	019 Call 0x1C17CF4
	020 Move X0, 0xDCB000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move X0, 0xDCB000
	024 Move X0, [X0+1744]
	025 Call 0x1C17CF4
	026 Move X0, 0xDCC000
	027 Move X0, [X0+632]
	028 Call 0x1C17CF4
	029 Move X0, 0xDFF000
	030 Move X0, [X0+1072]
	031 Call 0x1C17CF4
	032 Move X0, 0xDFF000
	033 Move X0, [X0+1136]
	034 Call 0x1C17CF4
	035 Move X0, 0xDFF000
	036 Move X0, [X0+1144]
	037 Call 0x1C17CF4
	038 Move X0, 0xDFF000
	039 Move X0, [X0+1152]
	040 Call 0x1C17CF4
	041 Move X0, 0xDFF000
	042 Move X0, [X0+1160]
	043 Call 0x1C17CF4
	044 Move X0, 0xDFF000
	045 Move X0, [X0+1096]
	046 Call 0x1C17CF4
	047 Move X0, 0xDFF000
	048 Move X0, [X0+1168]
	049 Call 0x1C17CF4
	050 Move X0, 0xDCB000
	051 Move X0, [X0+680]
	052 Call 0x1C17CF4
	053 Move X0, 0xDFF000
	054 Move X0, [X0+1184]
	055 Call 0x1C17CF4
	056 Move X0, 0xDCB000
	057 Move X0, [X0+3784]
	058 Call 0x1C17CF4
	059 Move X0, 0xDFF000
	060 Move X0, [X0+1104]
	061 Call 0x1C17CF4
	062 Move X0, 0xDFF000
	063 Move X0, [X0+1200]
	064 Call 0x1C17CF4
	065 Move X0, 0xDFF000
	066 Move X0, [X0+1208]
	067 Call 0x1C17CF4
	068 Move X0, 0xDFF000
	069 Move X0, [X0+1216]
	070 Call 0x1C17CF4
	071 Move X0, 0xDFF000
	072 Move X0, [X0+1232]
	073 Call 0x1C17CF4
	074 Move X0, 0xDD3000
	075 Move X0, [X0+1936]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X19+3241], W8
	079 Move X8, [X20]
	080 Move X8, [X8+184]
	081 Move X19, [X8]
	082 Call 0x1C17D44
	083 Compare X19, 0
	084 JumpIfNotEqual {248}
	085 Move X8, 0xDCB000
	086 Move X8, [X8+1744]
	087 Move X0, [X8]
	088 Call 0x1C17F10
	089 Move X8, 0xDCB000
	090 Move X8, [X8+1728]
	091 Move X19, X0
	092 Move X1, [X8]
	093 Call Dictionary`2<Object, Object>..ctor, X0
	094 Compare X19, 0
	095 JumpIfEqual {259}
	096 Move X21, 0xDCC000
	097 Move X21, [X21+632]
	098 Move X9, 0xDCA000
	099 Move X22, 0xDCA000
	100 Move X0, X19
	101 Move X8, [X21]
	102 Move X8, [X8+184]
	103 Move X9, [X9+3784]
	104 Move X22, [X22+2064]
	105 Move X2, [X8]
	106 Move X1, [X9]
	107 Move X3, [X22]
	108 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	109 Move X8, [X21]
	110 Move X9, 0xDCA000
	111 Move X0, X19
	112 Move X8, [X8+184]
	113 Move X9, [X9+680]
	114 Move X3, [X22]
	115 Move X2, [X8]
	116 Move X1, [X9]
	117 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	118 Move X8, [X21]
	119 Move X9, 0xDD2000
	120 Move X0, X19
	121 Move X8, [X8+184]
	122 Move X9, [X9+1936]
	123 Move X3, [X22]
	124 Move X2, [X8]
	125 Move X1, [X9]
	126 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	127 Move X8, [X21]
	128 Move X9, 0xDFE000
	129 Move X0, X19
	130 Move X8, [X8+184]
	131 Move X9, [X9+1232]
	132 Move X3, [X22]
	133 Move X2, [X8]
	134 Move X1, [X9]
	135 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	136 Move X8, [X21]
	137 Move X9, 0xDFE000
	138 Move X0, X19
	139 Move X8, [X8+184]
	140 Move X9, [X9+1208]
	141 Move X3, [X22]
	142 Move X2, [X8]
	143 Move X1, [X9]
	144 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	145 Move X8, [X21]
	146 Move X9, 0xDFE000
	147 Move X0, X19
	148 Move X8, [X8+184]
	149 Move X9, [X9+1184]
	150 Move X3, [X22]
	151 Move X2, [X8]
	152 Move X1, [X9]
	153 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	154 Move X8, [X21]
	155 Move X9, 0xDFE000
	156 Move X0, X19
	157 Move X8, [X8+184]
	158 Move X9, [X9+1144]
	159 Move X3, [X22]
	160 Move X2, [X8]
	161 Move X1, [X9]
	162 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	163 Move X8, [X21]
	164 Move X9, 0xDFE000
	165 Move X0, X19
	166 Move X8, [X8+184]
	167 Move X9, [X9+1136]
	168 Move X3, [X22]
	169 Move X2, [X8]
	170 Move X1, [X9]
	171 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	172 Move X8, [X21]
	173 Move X9, 0xDFE000
	174 Move X0, X19
	175 Move X8, [X8+184]
	176 Move X9, [X9+1168]
	177 Move X3, [X22]
	178 Move X2, [X8]
	179 Move X1, [X9]
	180 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	181 Move X8, [X21]
	182 Move X9, 0xDFE000
	183 Move X0, X19
	184 Move X8, [X8+184]
	185 Move X9, [X9+1096]
	186 Move X3, [X22]
	187 Move X2, [X8]
	188 Move X1, [X9]
	189 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	190 Move X8, [X21]
	191 Move X9, 0xDFE000
	192 Move X0, X19
	193 Move X8, [X8+184]
	194 Move X9, [X9+1200]
	195 Move X3, [X22]
	196 Move X2, [X8]
	197 Move X1, [X9]
	198 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	199 Move X8, [X21]
	200 Move X9, 0xDFE000
	201 Move X0, X19
	202 Move X8, [X8+184]
	203 Move X9, [X9+1152]
	204 Move X3, [X22]
	205 Move X2, [X8]
	206 Move X1, [X9]
	207 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	208 Move X8, [X21]
	209 Move X9, 0xDFE000
	210 Move X0, X19
	211 Move X8, [X8+184]
	212 Move X9, [X9+1104]
	213 Move X3, [X22]
	214 Move X2, [X8]
	215 Move X1, [X9]
	216 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	217 Move X8, [X21]
	218 Move X9, 0xDFE000
	219 Move X0, X19
	220 Move X8, [X8+184]
	221 Move X9, [X9+1072]
	222 Move X3, [X22]
	223 Move X2, [X8]
	224 Move X1, [X9]
	225 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	226 Move X8, [X21]
	227 Move X9, 0xDFE000
	228 Move X0, X19
	229 Move X8, [X8+184]
	230 Move X9, [X9+1216]
	231 Move X3, [X22]
	232 Move X2, [X8]
	233 Move X1, [X9]
	234 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	235 Move X8, [X21]
	236 Move X9, 0xDFE000
	237 Move X0, X19
	238 Move X8, [X8+184]
	239 Move X9, [X9+1160]
	240 Move X3, [X22]
	241 Move X2, [X8]
	242 Move X1, [X9]
	243 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	244 Call 0x1C17D44
	245 Move X8, [X20]
	246 Move X8, [X8+184]
	247 Move [X8], X19
	248 Move X8, [X20]
	249 Move X8, [X8+184]
	250 Move X19, [X8]
	251 Call 0x1C17D44
	252 Move X0, X19
	253 Move X20, [X31+32]
	254 Move X19, [X31+40]
	255 Move X22, [X31+16]
	256 Move X21, [X31+24]
	257 Move X30, [X31+48]
	258 Return X0
	259 Call 0x1C17F20

Method: System.Int32 SkipWhiteSpacesAndNonLetter(System.String pattern, System.Int32 currentIndex)

Disassembly:
	0x0332B280 MOV X1, X31
	0x0332B284 BL 0x323260C
	0x0332B288 SUB W1, W0, 0x1
	0x0332B28C MOVZ W2, 0x22
	0x0332B290 MOV X0, X19
	0x0332B294 MOV X3, X31
	0x0332B298 BL 0x32341F8
	0x0332B29C LDR X8, [X19]
	0x0332B2A0 MOV X0, X19
	0x0332B2A4 LDP X20, X19, [X31 + 0x20]
	0x0332B2A8 LDP X22, X21, [X31 + 0x10]
	0x0332B2AC LDP X2, X1, [X8 + 0x168]
	0x0332B2B0 LDR X30, [X31], #0x30
	0x0332B2B4 BR X2
	0x0332B2B8 BL 0x1C16F20
	0x0332B2BC STR X30, [X31 - 0x20]!
	0x0332B2C0 STP X20, X19, [X31 + 0x10]
	0x0332B2C4 ADRP X19, 0x10B1000
	0x0332B2C8 ADRP X20, 0xDFD000
	0x0332B2CC LDRB W8, [X19 + 0xCB5]
	0x0332B2D0 LDR X20, [X20 + 0x518]
	0x0332B2D4 TBNZ X8, 0x0, 0x332B310
	0x0332B2D8 ADRP X0, 0xDFD000
	0x0332B2DC LDR X0, [X0 + 0x520]
	0x0332B2E0 BL 0x1C16CF4
	0x0332B2E4 ADRP X0, 0xDFD000
	0x0332B2E8 LDR X0, [X0 + 0x4E8]
	0x0332B2EC BL 0x1C16CF4
	0x0332B2F0 ADRP X0, 0xDFD000
	0x0332B2F4 LDR X0, [X0 + 0x518]
	0x0332B2F8 BL 0x1C16CF4
	0x0332B2FC ADRP X0, 0xDFD000
	0x0332B300 LDR X0, [X0 + 0x528]
	0x0332B304 BL 0x1C16CF4
	0x0332B308 MOVZ W8, 0x1
	0x0332B30C STRB W8, [X19 + 0xCB5]
	0x0332B310 LDR X0, [X20]
	0x0332B314 MOVZ W1, 0x1B
	0x0332B318 BL 0x1C16D6C
	0x0332B31C CBZ X0, 0x332B568
	0x0332B320 LDR W8, [X0 + 0x18]
	0x0332B324 CBZ W8, 0x332B564
	0x0332B328 MOVZ W9, 0x4
	0x0332B32C MOVK W9, 0x10000
	0x0332B330 CMP W8, 0x1
	0x0332B334 STR W9, [X0 + 0x20]
	0x0332B338 B.EQ 0x332B564
	0x0332B33C ADD W10, W9, 0x10000
	0x0332B340 CMP W8, 0x2
	0x0332B344 STR W10, [X0 + 0x24]
	0x0332B348 B.LS 0x332B564
	0x0332B34C ORR W10, W9, 0x20000
	0x0332B350 CMP W8, 0x3
	0x0332B354 STR W10, [X0 + 0x28]
	0x0332B358 B.EQ 0x332B564
	0x0332B35C ADD W10, W9, 0x30000
	0x0332B360 CMP W8, 0x4
	0x0332B364 STR W10, [X0 + 0x2C]
	0x0332B368 B.LS 0x332B564
	0x0332B36C ORR W9, W9, 0x40000
	0x0332B370 CMP W8, 0x5
	0x0332B374 STR W9, [X0 + 0x30]
	0x0332B378 B.EQ 0x332B564

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10B2000
	007 Move W8, [X21+3242]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDCB000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3242], W8
	019 Compare X20, 0
	020 JumpIfEqual {67}
	021 Move W8, [X20+16]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X22, 0xDCB000
	024 Move X22, [X22+368]
	025 Move X0, X20
	026 Move W1, W19
	027 Move X2, X31
	028 Call String.get_Chars, X0, X1
	029 And W8, W0, 0xFFFF
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, [X20+16]
	032 Add W19, W19, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X20
	035 Move W1, W19
	036 Move X2, X31
	037 Call String.get_Chars, X0, X1
	038 And W8, W0, 0xFFFF
	039 Move W21, W0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W21, W0
	042 Move X0, [X22]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move W0, W21
	048 Move X1, X31
	049 Call Char.IsLetter, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {60}
	054 And W8, W21, 0xFFFF
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add W19, W19, 1
	058 Move W8, [X20+16]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W0, W19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Return X0
	067 Call 0x1C17F20

Method: System.Void AddDateWordOrPostfix(System.String formatPostfix, System.String str)

Disassembly:
	0x0332B37C MOVZ W9, 0x5
	0x0332B380 MOVK W9, 0x60000
	0x0332B384 CMP W8, 0x6
	0x0332B388 STR W9, [X0 + 0x34]
	0x0332B38C B.LS 0x332B564
	0x0332B390 ADD W9, W9, 0x10000
	0x0332B394 CMP W8, 0x7
	0x0332B398 STR W9, [X0 + 0x38]
	0x0332B39C B.EQ 0x332B564
	0x0332B3A0 MOVZ W9, 0x4
	0x0332B3A4 MOVK W9, 0x80000
	0x0332B3A8 CMP W8, 0x8
	0x0332B3AC STR W9, [X0 + 0x3C]
	0x0332B3B0 B.LS 0x332B564
	0x0332B3B4 MOVZ W9, 0x7
	0x0332B3B8 MOVK W9, 0x90000
	0x0332B3BC CMP W8, 0x9
	0x0332B3C0 STR W9, [X0 + 0x40]
	0x0332B3C4 B.EQ 0x332B564
	0x0332B3C8 MOVZ W9, 0x3
	0x0332B3CC MOVK W9, 0xA0000
	0x0332B3D0 CMP W8, 0xA
	0x0332B3D4 STR W9, [X0 + 0x44]
	0x0332B3D8 B.LS 0x332B564
	0x0332B3DC MOVN W10, 0x0
	0x0332B3E0 CMP W8, 0xB
	0x0332B3E4 STR W10, [X0 + 0x48]
	0x0332B3E8 B.EQ 0x332B564
	0x0332B3EC ADD W10, W9, 0xA0000
	0x0332B3F0 CMP W8, 0xC
	0x0332B3F4 STR W10, [X0 + 0x4C]
	0x0332B3F8 B.LS 0x332B564
	0x0332B3FC ADD W10, W9, 0x140000
	0x0332B400 CMP W8, 0xD
	0x0332B404 STR W10, [X0 + 0x50]
	0x0332B408 B.EQ 0x332B564
	0x0332B40C MOVN W10, 0x0
	0x0332B410 CMP W8, 0xE
	0x0332B414 STR W10, [X0 + 0x54]
	0x0332B418 B.LS 0x332B564
	0x0332B41C ADD W10, W9, 0x1E0000
	0x0332B420 CMP W8, 0xF
	0x0332B424 STR W10, [X0 + 0x58]
	0x0332B428 B.EQ 0x332B564
	0x0332B42C MOVN W10, 0x0
	0x0332B430 CMP W8, 0x10
	0x0332B434 STR W10, [X0 + 0x5C]
	0x0332B438 B.LS 0x332B564
	0x0332B43C ADD W10, W9, 0x280000
	0x0332B440 CMP W8, 0x11
	0x0332B444 STR W10, [X0 + 0x60]
	0x0332B448 B.EQ 0x332B564
	0x0332B44C ADD W10, W9, 0x320000
	0x0332B450 CMP W8, 0x12
	0x0332B454 STR W10, [X0 + 0x64]
	0x0332B458 B.LS 0x332B564
	0x0332B45C ADD W10, W9, 0x3C0000
	0x0332B460 CMP W8, 0x13
	0x0332B464 STR W10, [X0 + 0x68]
	0x0332B468 B.EQ 0x332B564
	0x0332B46C MOVN W10, 0x0
	0x0332B470 CMP W8, 0x14
	0x0332B474 STR W10, [X0 + 0x6C]
	0x0332B478 B.LS 0x332B564
	0x0332B47C ADD W10, W9, 0x460000
	0x0332B480 CMP W8, 0x15
	0x0332B484 STR W10, [X0 + 0x70]
	0x0332B488 B.EQ 0x332B564
	0x0332B48C MOVN W10, 0x0
	0x0332B490 CMP W8, 0x16
	0x0332B494 STR W10, [X0 + 0x74]
	0x0332B498 B.LS 0x332B564
	0x0332B49C MOVZ W10, 0x500000
	0x0332B4A0 ORR W9, W9, W10, 0x0
	0x0332B4A4 CMP W8, 0x17
	0x0332B4A8 STR W9, [X0 + 0x78]
	0x0332B4AC B.EQ 0x332B564
	0x0332B4B0 MOVZ W9, 0x2
	0x0332B4B4 MOVK W9, 0x640000
	0x0332B4B8 CMP W8, 0x18
	0x0332B4BC STR W9, [X0 + 0x7C]
	0x0332B4C0 B.LS 0x332B564
	0x0332B4C4 MOVZ W9, 0x1
	0x0332B4C8 MOVK W9, 0xC80000
	0x0332B4CC CMP W8, 0x19
	0x0332B4D0 STR W9, [X0 + 0x80]
	0x0332B4D4 B.EQ 0x332B564
	0x0332B4D8 ADD W9, W9, 0x640000
	0x0332B4DC CMP W8, 0x1A
	0x0332B4E0 STR W9, [X0 + 0x84]
	0x0332B4E4 B.LS 0x332B564
	0x0332B4E8 ADRP X20, 0xDFD000
	0x0332B4EC LDR X20, [X20 + 0x4E8]
	0x0332B4F0 MOVZ W8, 0x1900000
	0x0332B4F4 STR W8, [X0 + 0x88]
	0x0332B4F8 LDR X8, [X20]
	0x0332B4FC LDR X8, [X8 + 0xB8]
	0x0332B500 STR X0, [X8]
	0x0332B504 LDR X8, [X20]
	0x0332B508 LDR X8, [X8 + 0xB8]
	0x0332B50C LDR X9, [X8]
	0x0332B510 CBZ X9, 0x332B568
	0x0332B514 LDRH W9, [X9 + 0x18]
	0x0332B518 ADRP X10, 0xDFD000
	0x0332B51C LDR X10, [X10 + 0x520]
	0x0332B520 ADRP X19, 0xDFD000
	0x0332B524 ADD W9, W9, 0x5CF
	0x0332B528 STRH W9, [X8 + 0x8]
	0x0332B52C LDR X0, [X10]
	0x0332B530 LDR X19, [X19 + 0x528]
	0x0332B534 MOVZ W1, 0xAA
	0x0332B538 BL 0x1C16D6C
	0x0332B53C LDR X1, [X19]
	0x0332B540 MOV X2, X31
	0x0332B544 MOV X19, X0
	0x0332B548 BL 0x32C5BD8
	0x0332B54C LDR X8, [X20]
	0x0332B550 LDR X8, [X8 + 0xB8]
	0x0332B554 STR X19, [X8 + 0x10]
	0x0332B558 LDP X20, X19, [X31 + 0x10]
	0x0332B55C LDR X30, [X31], #0x20
	0x0332B560 RET
	0x0332B564 BL 0x1C16F28
	0x0332B568 BL 0x1C16F20
	0x0332B56C STRH W1, [X0]
	0x0332B570 STRH W2, [X0 + 0x2]
	0x0332B574 RET
	0x0332B578 SUB X31, X31, 0x50
	0x0332B57C STR X30, [X31 + 0x20]
	0x0332B580 STP X22, X21, [X31 + 0x30]
	0x0332B584 STP X20, X19, [X31 + 0x40]
	0x0332B588 MRS X20, 0xC000
	0x0332B58C LDR X11, [X20 + 0x28]
	0x0332B590 MOVZ W9, 0xCCCD
	0x0332B594 MOV X19, X0
	0x0332B598 MOV W8, W31
	0x0332B59C MOVK W9, 0xCCCC0000
	0x0332B5A0 MOVN W10, 0x9
	0x0332B5A4 STR X11, [X31 + 0x18]
	0x0332B5A8 ADD X11, X31, 0x0
	0x0332B5AC STP X31, X31, [X31]
	0x0332B5B0 STR W31, [X31 + 0x10]
	0x0332B5B4 UMADDL X12, X1, X9, X31
	0x0332B5B8 UBFM X12, X12, 0x23, 0x3F
	0x0332B5BC MADD W13, W12, W10, W1
	0x0332B5C0 ADD W21, W8, 0x1
	0x0332B5C4 ADD W13, W13, 0x30
	0x0332B5C8 CMP W1, 0x9
	0x0332B5CC STRH W13, [X11, W8, SXTW]
	0x0332B5D0 MOV W8, W21
	0x0332B5D4 MOV W1, W12
	0x0332B5D8 B.HI 0x332B5B4
	0x0332B5DC SUB W8, W2, W21
	0x0332B5E0 CMP W8, 0x1
	0x0332B5E4 B.LT 0x332B60C
	0x0332B5E8 CBZ X19, 0x332B668
	0x0332B5EC ADD W22, W8, 0x1
	0x0332B5F0 MOVZ W1, 0x30
	0x0332B5F4 MOV X0, X19
	0x0332B5F8 MOV X2, X31
	0x0332B5FC BL 0x3233D30
	0x0332B600 SUB W22, W22, 0x1
	0x0332B604 CMP W22, 0x1
	0x0332B608 B.GT 0x332B5F0
	0x0332B60C SUB W8, W21, 0x1
	0x0332B610 TBNZ X8, 0x1F, 0x332B644
	0x0332B614 CBZ X19, 0x332B668
	0x0332B618 MOV W9, W8
	0x0332B61C ADD X10, X31, 0x0
	0x0332B620 ADD X21, X9, 0x1
	0x0332B624 ADD X22, X10, W8, 0x1, UXTW
	0x0332B628 LDRH W1, [X22], #0xFFFFFFFFFFFFFFFE
	0x0332B62C MOV X0, X19
	0x0332B630 MOV X2, X31
	0x0332B634 BL 0x3233D30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10B2000
	007 Move W8, [X22+3243]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {41}
	015 Move X0, 0xDFE000
	016 Move X0, [X0+1272]
	017 Call 0x1C17CF4
	018 Move X0, 0xDCA000
	019 Move X0, [X0+440]
	020 Call 0x1C17CF4
	021 Move X0, 0xDD2000
	022 Move X0, [X0+272]
	023 Call 0x1C17CF4
	024 Move X0, 0xDCA000
	025 Move X0, [X0+448]
	026 Call 0x1C17CF4
	027 Move X0, 0xDCA000
	028 Move X0, [X0+464]
	029 Call 0x1C17CF4
	030 Move X0, 0xDFE000
	031 Move X0, [X0+1280]
	032 Call 0x1C17CF4
	033 Move X0, 0xDFE000
	034 Move X0, [X0+1288]
	035 Call 0x1C17CF4
	036 Move X0, 0xDD2000
	037 Move X0, [X0+1936]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+3243], W8
	041 Move [X31+8], X31
	042 Compare X20, 0
	043 JumpIfEqual {199}
	044 Move W8, [X20+16]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X22, 0xDD2000
	047 Move X22, [X22+1936]
	048 Move X0, X20
	049 Move X2, X31
	050 Move X1, [X22]
	051 Call String.Equals, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {59}
	056 Move X1, [X22]
	057 Move X0, X19
	058 Call DateTimeFormatInfoScanner.AddIgnorableSymbols, X0, X1
	059 Call DateTimeFormatInfoScanner.get_KnownWords
	060 Compare X0, 0
	061 JumpIfEqual {199}
	062 Move X8, 0xDFE000
	063 Move X8, [X8+1272]
	064 Add X2, X31, 8
	065 Move X1, X20
	066 Move X3, [X8]
	067 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {193}
	072 Move X8, [X19+16]
	073 Compare X8, 0
	074 JumpIfNotEqual {85}
	075 Move X8, 0xDCA000
	076 Move X8, [X8+464]
	077 Move X0, [X8]
	078 Call 0x1C17F10
	079 Move X8, 0xDCA000
	080 Move X8, [X8+448]
	081 Move X22, X0
	082 Move X1, [X8]
	083 Call List`1<Object>..ctor, X0
	084 Move [X19+16], X22
	085 Move X8, 0xDFE000
	086 Move X8, [X8+1288]
	087 Move X0, X21
	088 Move X2, X31
	089 Move X1, [X8]
	090 Call String.op_Equality, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {108}
	095 Move X8, 0xDFE000
	096 Move X8, [X8+1280]
	097 Move X1, X20
	098 Move X2, X31
	099 Move X0, [X8]
	100 Call String.Concat, X0, X1
	101 Move X8, [X19+16]
	102 Compare X8, 0
	103 JumpIfEqual {199}
	104 Move X9, 0xDD2000
	105 Move X9, [X9+272]
	106 Move X20, X0
	107 Move X2, [X9]
	108 Move X0, [X19+16]
	109 Compare X0, 0
	110 JumpIfEqual {199}
	111 Move X21, 0xDD2000
	112 Move X21, [X21+272]
	113 Move X1, X20
	114 Move X2, [X21]
	115 Call List`1<Object>.Contains, X0, X1
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {144}
	120 Move X0, [X19+16]
	121 Compare X0, 0
	122 JumpIfEqual {199}
	123 Move X9, 0xDCA000
	124 Move X9, [X9+440]
	125 Move W10, [X0+28]
	126 Move X8, [X0+16]
	127 Move X9, [X9]
	128 Add W10, W10, 1
	129 Move [X0+28], W10
	130 Compare X8, 0
	131 JumpIfEqual {199}
	132 NotImplemented "Instruction LDRSW not yet implemented."
	133 Move W11, [X8+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Add W9, W10, 1
	136 Add X8, X8, X10
	137 Move [X0+24], W9
	138 Move [X8+32], X20
	139 Move X8, [X9+32]
	140 Move X1, X20
	141 Move X8, [X8+192]
	142 Move X2, [X8+112]
	143 Call List`1<Object>.AddWithResize, X0, X1
	144 Move W8, [X20+16]
	145 Move X0, X20
	146 Move X2, X31
	147 Subtract W1, W8, 1
	148 Call String.get_Chars, X0, X1
	149 And W8, W0, 0xFFFF
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move W8, [X20+16]
	152 Move X0, X20
	153 Move W1, W31
	154 Move X3, X31
	155 Subtract W2, W8, 1
	156 Call String.Substring, X0, X1, X2
	157 Move X8, [X19+16]
	158 Compare X8, 0
	159 JumpIfEqual {199}
	160 Move X2, [X21]
	161 Move X20, X0
	162 Move X0, X8
	163 Move X1, X20
	164 Call List`1<Object>.Contains, X0, X1
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {193}
	169 Move X0, [X19+16]
	170 Compare X0, 0
	171 JumpIfEqual {199}
	172 Move X9, 0xDCA000
	173 Move X9, [X9+440]
	174 Move W10, [X0+28]
	175 Move X8, [X0+16]
	176 Move X9, [X9]
	177 Add W10, W10, 1
	178 Move [X0+28], W10
	179 Compare X8, 0
	180 JumpIfEqual {199}
	181 NotImplemented "Instruction LDRSW not yet implemented."
	182 Move W11, [X8+24]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Add W9, W10, 1
	185 Add X8, X8, X10
	186 Move [X0+24], W9
	187 Move [X8+32], X20
	188 Move X8, [X9+32]
	189 Move X1, X20
	190 Move X8, [X8+192]
	191 Move X2, [X8+112]
	192 Call List`1<Object>.AddWithResize, X0, X1
	193 Move X20, [X31+32]
	194 Move X19, [X31+40]
	195 Move X22, [X31+16]
	196 Move X21, [X31+24]
	197 Move X30, [X31+48]
	198 Return 
	199 Call 0x1C17F20

Method: System.Int32 AddDateWords(System.String pattern, System.Int32 index, System.String formatPostfix)

Disassembly:
	0x0332B788 LDR X0, [X0 + 0x538]
	0x0332B78C BL 0x1C16CF4
	0x0332B790 MOVZ W8, 0x1
	0x0332B794 STRB W8, [X23 + 0xCB8]
	0x0332B798 ADRP X24, 0xDFD000
	0x0332B79C ADRP X23, 0xDFD000
	0x0332B7A0 LDR X24, [X24 + 0x328]
	0x0332B7A4 LDR X23, [X23 + 0x530]
	0x0332B7A8 CBZ W22, 0x332B7B4
	0x0332B7AC UBFM X8, X22, 0x20, 0x3F
	0x0332B7B0 B 0x332B7E8
	0x0332B7B4 ADRP X8, 0xDFD000
	0x0332B7B8 LDR X8, [X8 + 0x538]
	0x0332B7BC ADRP X20, 0x10AE000
	0x0332B7C0 LDRB W9, [X20 + 0x762]
	0x0332B7C4 LDR X22, [X8]
	0x0332B7C8 CBZ W9, 0x332B8A4
	0x0332B7CC CBZ X22, 0x332B8BC
	0x0332B7D0 MOV X0, X22
	0x0332B7D4 MOV X1, X31
	0x0332B7D8 BL 0x3225708
	0x0332B7DC LDR W22, [X22 + 0x10]
	0x0332B7E0 MOV X20, X0
	0x0332B7E4 MOV W8, W31
	0x0332B7E8 CMP W22, 0x1
	0x0332B7EC B.NE 0x332B8C4
	0x0332B7F0 LDRH W22, [X20]
	0x0332B7F4 CMP W22, 0x54
	0x0332B7F8 B.HI 0x332B810
	0x0332B7FC CMP W22, 0x47
	0x0332B800 B.EQ 0x332B858
	0x0332B804 CMP W22, 0x54
	0x0332B808 B.EQ 0x332B828
	0x0332B80C B 0x332B9B4
	0x0332B810 CMP W22, 0x74
	0x0332B814 B.EQ 0x332B828
	0x0332B818 CMP W22, 0x67
	0x0332B81C B.EQ 0x332B858
	0x0332B820 CMP W22, 0x63
	0x0332B824 B.NE 0x332B9B4
	0x0332B828 LDR X0, [X23]
	0x0332B82C MOVZ W21, 0x1
	0x0332B830 BFM X21, X8, 0x20, 0x1F
	0x0332B834 LDR W9, [X0 + 0xE0]
	0x0332B838 CBNZ W9, 0x332B840
	0x0332B83C BL 0x1C16DFC
	0x0332B840 MOVZ W1, 0x1
	0x0332B844 MOVZ W4, 0x1
	0x0332B848 MOV X0, X19
	0x0332B84C MOV X2, X20
	0x0332B850 MOV X3, X21
	0x0332B854 B 0x332B9A0
	0x0332B858 LDR X0, [X24]
	0x0332B85C LDR W8, [X0 + 0xE0]
	0x0332B860 CBNZ W8, 0x332B868
	0x0332B864 BL 0x1C16DFC
	0x0332B868 MOV X0, X21
	0x0332B86C BL 0x3324CFC
	0x0332B870 ADRP X8, 0xDCA000
	0x0332B874 LDR X8, [X8 + 0x570]
	0x0332B878 MOV X20, X0
	0x0332B87C LDR X8, [X8]
	0x0332B880 LDR W9, [X8 + 0xE0]
	0x0332B884 CBNZ W9, 0x332B890
	0x0332B888 MOV X0, X8
	0x0332B88C BL 0x1C16DFC
	0x0332B890 CBZ X20, 0x332B9FC
	0x0332B894 MOV X0, X20
	0x0332B898 TBNZ X19, 0x0, 0x332B924
	0x0332B89C BL 0x3326D30
	0x0332B8A0 B 0x332B928
	0x0332B8A4 ADRP X0, 0xDEF000
	0x0332B8A8 LDR X0, [X0 + 0x290]
	0x0332B8AC BL 0x1C16CF4
	0x0332B8B0 MOVZ W8, 0x1
	0x0332B8B4 STRB W8, [X20 + 0x762]
	0x0332B8B8 CBNZ X22, 0x332B7D0
	0x0332B8BC MOV X20, X31
	0x0332B8C0 MOV W8, W31
	0x0332B8C4 LDR X0, [X24]
	0x0332B8C8 MOV W22, W22
	0x0332B8CC BFM X22, X8, 0x20, 0x1F
	0x0332B8D0 LDR W9, [X0 + 0xE0]
	0x0332B8D4 CBNZ W9, 0x332B8DC
	0x0332B8D8 BL 0x1C16DFC
	0x0332B8DC MOV X0, X21
	0x0332B8E0 BL 0x3324CFC
	0x0332B8E4 LDR X8, [X23]
	0x0332B8E8 MOV X21, X0
	0x0332B8EC LDR W9, [X8 + 0xE0]
	0x0332B8F0 CBNZ W9, 0x332B8FC
	0x0332B8F4 MOV X0, X8
	0x0332B8F8 BL 0x1C16DFC
	0x0332B8FC MOV X0, X19
	0x0332B900 MOV X1, X20
	0x0332B904 MOV X2, X22
	0x0332B908 MOV X3, X21
	0x0332B90C LDP X20, X19, [X31 + 0x30]
	0x0332B910 LDP X22, X21, [X31 + 0x20]
	0x0332B914 LDP X24, X23, [X31 + 0x10]
	0x0332B918 MOV X4, X31
	0x0332B91C LDR X30, [X31], #0x40
	0x0332B920 B 0x332BFE4
	0x0332B924 BL 0x3326DFC
	0x0332B928 ADRP X21, 0x10AE000
	0x0332B92C LDRB W8, [X21 + 0x762]
	0x0332B930 MOV X20, X0
	0x0332B934 CBZ W8, 0x332B954
	0x0332B938 CBZ X20, 0x332B96C
	0x0332B93C MOV X0, X20
	0x0332B940 MOV X1, X31
	0x0332B944 BL 0x3225708
	0x0332B948 LDR W20, [X20 + 0x10]
	0x0332B94C MOV X21, X0
	0x0332B950 B 0x332B970
	0x0332B954 ADRP X0, 0xDEF000
	0x0332B958 LDR X0, [X0 + 0x290]
	0x0332B95C BL 0x1C16CF4
	0x0332B960 MOVZ W8, 0x1
	0x0332B964 STRB W8, [X21 + 0x762]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x10B2000
	011 Move X21, 0xDC9000
	012 Move W8, [X22+3244]
	013 Move X21, [X21+2288]
	014 Move X23, X3
	015 Move W24, W2
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xDCB000
	023 Move X0, [X0+368]
	024 Call 0x1C17CF4
	025 Move X0, 0xDC9000
	026 Move X0, [X0+2288]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3244], W8
	030 Move X0, X20
	031 Move W1, W24
	032 Call DateTimeFormatInfoScanner.SkipWhiteSpacesAndNonLetter, X0, X1
	033 Move X8, [X21]
	034 Move W21, W0
	035 Move X0, X8
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X22, X0
	039 Call StringBuilder..ctor, X0
	040 Compare X20, 0
	041 JumpIfEqual {131}
	042 Move W8, [X20+16]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X25, 0xDCB000
	045 Move X25, [X25+368]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 Move X0, X20
	049 Move W1, W21
	050 Move X2, X31
	051 Call String.get_Chars, X0, X1
	052 And W8, W0, 0xFFFF
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W24, W0
	056 Move X0, [X25]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move W0, W24
	062 Move X1, X31
	063 Call Char.IsWhiteSpace, X0
	064 Compare X22, 0
	065 JumpIfEqual {131}
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {89}
	070 Move W26, 1
	071 Move W8, [X20+16]
	072 Add W1, W21, 1
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X20
	075 Move X2, X31
	076 Call String.get_Chars, X0, X1
	077 Compare X22, 0
	078 JumpIfEqual {131}
	079 Move W24, W0
	080 Move W26, 2
	081 Move X0, X22
	082 Move W1, W24
	083 Move X2, X31
	084 Call StringBuilder.Append, X0, X1
	085 Add W1, W21, W26
	086 Move W8, [X20+16]
	087 Move W21, W1
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X8, [X22]
	090 Move X0, X22
	091 Move X9, [X8+360]
	092 Move X1, [X8+368]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X2, X0
	095 Move X0, X19
	096 Move X1, X23
	097 Call DateTimeFormatInfoScanner.AddDateWordOrPostfix, X0, X1, X2
	098 Move X0, X22
	099 Move W1, W31
	100 Move X2, X31
	101 Call StringBuilder.set_Length, X0, X1
	102 Move W8, [X20+16]
	103 Add W21, W21, 1
	104 Move X23, X31
	105 Move W1, W21
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move W1, W21
	108 Compare X22, 0
	109 JumpIfEqual {131}
	110 Move X8, [X22]
	111 Move X0, X22
	112 Move X9, [X8+360]
	113 Move X1, [X8+368]
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move X2, X0
	116 Move X0, X19
	117 Move X1, X23
	118 Call DateTimeFormatInfoScanner.AddDateWordOrPostfix, X0, X1, X2
	119 Add W1, W21, 1
	120 Move X20, [X31+64]
	121 Move X19, [X31+72]
	122 Move X22, [X31+48]
	123 Move X21, [X31+56]
	124 Move X24, [X31+32]
	125 Move X23, [X31+40]
	126 Move X26, [X31+16]
	127 Move X25, [X31+24]
	128 Move W0, W1
	129 Move X30, [X31+80]
	130 Return X0
	131 Call 0x1C17F20

Method: System.Int32 ScanRepeatChar(System.String pattern, System.Char ch, System.Int32 index, out System.Int32 count)

Disassembly:
	0x0332B968 CBNZ X20, 0x332B93C
	0x0332B96C MOV X21, X31
	0x0332B970 LDR X0, [X23]
	0x0332B974 CMP W22, 0x67
	0x0332B978 MOVZ W9, 0x1
	0x0332B97C CINC W22, W9, NE
	0x0332B980 LDR W8, [X0 + 0xE0]
	0x0332B984 CBNZ W8, 0x332B98C
	0x0332B988 BL 0x1C16DFC
	0x0332B98C MOV X0, X19
	0x0332B990 MOV W1, W31
	0x0332B994 MOV X2, X21
	0x0332B998 MOV X3, X20
	0x0332B99C MOV W4, W22
	0x0332B9A0 LDP X20, X19, [X31 + 0x30]
	0x0332B9A4 LDP X22, X21, [X31 + 0x20]
	0x0332B9A8 LDP X24, X23, [X31 + 0x10]
	0x0332B9AC LDR X30, [X31], #0x40
	0x0332B9B0 B 0x332BB20
	0x0332B9B4 ADRP X0, 0xDF5000
	0x0332B9B8 LDR X0, [X0 + 0xC08]
	0x0332B9BC BL 0x1C16D08
	0x0332B9C0 BL 0x1C16F10
	0x0332B9C4 MOV X19, X0
	0x0332B9C8 ADRP X0, 0xDF7000
	0x0332B9CC LDR X0, [X0 + 0x618]
	0x0332B9D0 BL 0x1C16D08
	0x0332B9D4 MOV X1, X0
	0x0332B9D8 MOV X0, X19
	0x0332B9DC MOV X2, X31
	0x0332B9E0 BL 0x33674A0
	0x0332B9E4 ADRP X0, 0xDFD000
	0x0332B9E8 LDR X0, [X0 + 0x540]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, 1
	007 Move [X3], W8
	008 Compare X0, 0
	009 JumpIfEqual {35}
	010 Move W8, [X0+16]
	011 Add W22, W2, 1
	012 Move X21, X0
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X19, X3
	015 Move W20, W1
	016 Move X0, X21
	017 Move W1, W22
	018 Move X2, X31
	019 Call String.get_Chars, X0, X1
	020 And W8, W0, 0xFFFF
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W8, [X19]
	023 Add W22, W22, 1
	024 Add W8, W8, 1
	025 Move [X19], W8
	026 Move W8, [X21+16]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W0, W22
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Return X0
	035 Call 0x1C17F20

Method: System.Void AddIgnorableSymbols(System.String text)

Disassembly:
	0x0332B638 SUB X21, X21, 0x1
	0x0332B63C CMP X21, 0x0
	0x0332B640 B.GT 0x332B628
	0x0332B644 LDR X8, [X20 + 0x28]
	0x0332B648 LDR X9, [X31 + 0x18]
	0x0332B64C CMP X8, X9
	0x0332B650 B.NE 0x332B66C
	0x0332B654 LDP X20, X19, [X31 + 0x40]
	0x0332B658 LDP X22, X21, [X31 + 0x30]
	0x0332B65C LDR X30, [X31 + 0x20]
	0x0332B660 ADD X31, X31, 0x50
	0x0332B664 RET
	0x0332B668 BL 0x1C16F20
	0x0332B66C BL 0x3EB1B20
	0x0332B670 STP X30, X23, [X31 - 0x30]!
	0x0332B674 STP X22, X21, [X31 + 0x10]
	0x0332B678 STP X20, X19, [X31 + 0x20]
	0x0332B67C ADRP X22, 0x10B1000
	0x0332B680 LDRB W8, [X22 + 0xCB6]
	0x0332B684 MOV X19, X2
	0x0332B688 MOV X21, X1
	0x0332B68C MOV X20, X0
	0x0332B690 TBNZ X8, 0x0, 0x332B6A8
	0x0332B694 ADRP X0, 0xDFD000
	0x0332B698 LDR X0, [X0 + 0x530]
	0x0332B69C BL 0x1C16CF4
	0x0332B6A0 MOVZ W8, 0x1
	0x0332B6A4 STRB W8, [X22 + 0xCB6]
	0x0332B6A8 ADRP X22, 0x10AE000
	0x0332B6AC LDRB W8, [X22 + 0x762]
	0x0332B6B0 CBNZ W8, 0x332B6C8
	0x0332B6B4 ADRP X0, 0xDEF000
	0x0332B6B8 LDR X0, [X0 + 0x290]
	0x0332B6BC BL 0x1C16CF4
	0x0332B6C0 MOVZ W8, 0x1
	0x0332B6C4 STRB W8, [X22 + 0x762]
	0x0332B6C8 ADRP X23, 0xDFD000
	0x0332B6CC LDR X23, [X23 + 0x530]
	0x0332B6D0 CBZ X21, 0x332B6EC
	0x0332B6D4 MOV X0, X21
	0x0332B6D8 MOV X1, X31
	0x0332B6DC BL 0x3225708
	0x0332B6E0 LDR W21, [X21 + 0x10]
	0x0332B6E4 MOV X22, X0
	0x0332B6E8 B 0x332B6F0
	0x0332B6EC MOV X22, X31
	0x0332B6F0 LDR X0, [X23]
	0x0332B6F4 LDR W8, [X0 + 0xE0]
	0x0332B6F8 CBNZ W8, 0x332B700
	0x0332B6FC BL 0x1C16DFC
	0x0332B700 MOV X0, X20
	0x0332B704 MOV X1, X22
	0x0332B708 MOV X2, X21
	0x0332B70C MOV X3, X19
	0x0332B710 BL 0x332B728
	0x0332B714 LDP X20, X19, [X31 + 0x20]
	0x0332B718 LDP X22, X21, [X31 + 0x10]
	0x0332B71C MOV X1, X31
	0x0332B720 LDP X30, X23, [X31], #0x30
	0x0332B724 B 0x3235BE8
	0x0332B728 STR X30, [X31 - 0x40]!
	0x0332B72C STP X24, X23, [X31 + 0x10]
	0x0332B730 STP X22, X21, [X31 + 0x20]
	0x0332B734 STP X20, X19, [X31 + 0x30]
	0x0332B738 ADRP X23, 0x10B1000
	0x0332B73C LDRB W8, [X23 + 0xCB8]
	0x0332B740 MOV X21, X3
	0x0332B744 MOV X22, X2
	0x0332B748 MOV X20, X1
	0x0332B74C MOV X19, X0
	0x0332B750 TBNZ X8, 0x0, 0x332B798
	0x0332B754 ADRP X0, 0xDFD000
	0x0332B758 LDR X0, [X0 + 0x328]
	0x0332B75C BL 0x1C16CF4
	0x0332B760 ADRP X0, 0xDF7000
	0x0332B764 LDR X0, [X0 + 0x28]
	0x0332B768 BL 0x1C16CF4
	0x0332B76C ADRP X0, 0xDFD000
	0x0332B770 LDR X0, [X0 + 0x530]
	0x0332B774 BL 0x1C16CF4
	0x0332B778 ADRP X0, 0xDCA000
	0x0332B77C LDR X0, [X0 + 0x570]
	0x0332B780 BL 0x1C16CF4
	0x0332B784 ADRP X0, 0xDFD000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10B2000
	007 Move W8, [X21+3245]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xDCA000
	015 Move X0, [X0+440]
	016 Call 0x1C17CF4
	017 Move X0, 0xDD2000
	018 Move X0, [X0+272]
	019 Call 0x1C17CF4
	020 Move X0, 0xDCA000
	021 Move X0, [X0+448]
	022 Call 0x1C17CF4
	023 Move X0, 0xDCA000
	024 Move X0, [X0+464]
	025 Call 0x1C17CF4
	026 Move X0, 0xDFE000
	027 Move X0, [X0+1296]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3245], W8
	031 Move X22, 0xDFE000
	032 Move X8, [X19+16]
	033 Move X22, [X22+1296]
	034 Compare X8, 0
	035 JumpIfNotEqual {46}
	036 Move X8, 0xDCA000
	037 Move X8, [X8+464]
	038 Move X0, [X8]
	039 Call 0x1C17F10
	040 Move X8, 0xDCA000
	041 Move X8, [X8+448]
	042 Move X21, X0
	043 Move X1, [X8]
	044 Call List`1<Object>..ctor, X0
	045 Move [X19+16], X21
	046 Move X0, [X22]
	047 Move X1, X20
	048 Move X2, X31
	049 Call String.Concat, X0, X1
	050 Move X8, [X19+16]
	051 Compare X8, 0
	052 JumpIfEqual {100}
	053 Move X9, 0xDD2000
	054 Move X9, [X9+272]
	055 Move X20, X0
	056 Move X0, X8
	057 Move X1, X20
	058 Move X2, [X9]
	059 Call List`1<Object>.Contains, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {83}
	064 Move X0, [X19+16]
	065 Compare X0, 0
	066 JumpIfEqual {100}
	067 Move X9, 0xDCA000
	068 Move X9, [X9+440]
	069 Move W10, [X0+28]
	070 Move X8, [X0+16]
	071 Move X9, [X9]
	072 Add W10, W10, 1
	073 Move [X0+28], W10
	074 Compare X8, 0
	075 JumpIfEqual {100}
	076 NotImplemented "Instruction LDRSW not yet implemented."
	077 Move W11, [X8+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add W9, W10, 1
	080 Add X8, X8, X10
	081 Move [X0+24], W9
	082 Move [X8+32], X20
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Return 
	089 Move X8, [X9+32]
	090 Move X1, X20
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Move X8, [X8+192]
	096 Move X2, [X8+112]
	097 Move X30, [X31+48]
	098 Call List`1<Object>.AddWithResize, X0, X1
	099 Return 
	100 Call 0x1C17F20

Method: System.Void ScanDateWord(System.String pattern)

Disassembly:
	0x0332B9EC BL 0x1C16D08
	0x0332B9F0 MOV X1, X0
	0x0332B9F4 MOV X0, X19
	0x0332B9F8 BL 0x1C16DEC
	0x0332B9FC BL 0x1C16F20
	0x0332BA00 STP X30, X27, [X31 - 0x50]!
	0x0332BA04 STP X26, X25, [X31 + 0x10]
	0x0332BA08 STP X24, X23, [X31 + 0x20]
	0x0332BA0C STP X22, X21, [X31 + 0x30]
	0x0332BA10 STP X20, X19, [X31 + 0x40]
	0x0332BA14 ADRP X27, 0x10B1000
	0x0332BA18 ADRP X26, 0xDFD000
	0x0332BA1C LDRB W8, [X27 + 0xCB7]
	0x0332BA20 LDR X26, [X26 + 0x530]
	0x0332BA24 MOV X22, X6
	0x0332BA28 MOV X23, X5
	0x0332BA2C MOV X24, X4
	0x0332BA30 MOV X21, X3
	0x0332BA34 MOV X19, X2
	0x0332BA38 MOV X20, X1
	0x0332BA3C MOV X25, X0
	0x0332BA40 TBNZ X8, 0x0, 0x332BA64
	0x0332BA44 ADRP X0, 0xDF7000
	0x0332BA48 LDR X0, [X0 + 0x588]
	0x0332BA4C BL 0x1C16CF4
	0x0332BA50 ADRP X0, 0xDFD000
	0x0332BA54 LDR X0, [X0 + 0x530]
	0x0332BA58 BL 0x1C16CF4
	0x0332BA5C MOVZ W8, 0x1
	0x0332BA60 STRB W8, [X27 + 0xCB7]
	0x0332BA64 LDR X0, [X26]
	0x0332BA68 LDR W8, [X0 + 0xE0]
	0x0332BA6C CBNZ W8, 0x332BA74
	0x0332BA70 BL 0x1C16DFC
	0x0332BA74 MOV X0, X25
	0x0332BA78 MOV X1, X24
	0x0332BA7C MOV X2, X23
	0x0332BA80 MOV X3, X22
	0x0332BA84 BL 0x332B728
	0x0332BA88 CBZ X0, 0x332BB1C
	0x0332BA8C MOV X1, X31
	0x0332BA90 MOV X22, X0
	0x0332BA94 BL 0x323260C
	0x0332BA98 MOV W23, W0
	0x0332BA9C CMP W0, W19
	0x0332BAA0 B.LE 0x332BAB8
	0x0332BAA4 MOV X0, X22
	0x0332BAA8 MOV X1, X31
	0x0332BAAC BL 0x3235B68
	0x0332BAB0 STR W31, [X21]
	0x0332BAB4 B 0x332BAFC
	0x0332BAB8 MOV X0, X22
	0x0332BABC MOV X1, X31
	0x0332BAC0 BL 0x323260C
	0x0332BAC4 STR W0, [X21]
	0x0332BAC8 MOV X0, X22
	0x0332BACC MOV X1, X31
	0x0332BAD0 BL 0x323260C
	0x0332BAD4 MOV W4, W0
	0x0332BAD8 MOV X0, X22
	0x0332BADC MOV W1, W31
	0x0332BAE0 MOV X2, X20
	0x0332BAE4 MOV X3, X19
	0x0332BAE8 MOV X5, X31
	0x0332BAEC BL 0x32328F4
	0x0332BAF0 MOV X0, X22
	0x0332BAF4 MOV X1, X31
	0x0332BAF8 BL 0x3235B68
	0x0332BAFC CMP W23, W19
	0x0332BB00 LDP X20, X19, [X31 + 0x40]
	0x0332BB04 LDP X22, X21, [X31 + 0x30]
	0x0332BB08 LDP X24, X23, [X31 + 0x20]
	0x0332BB0C LDP X26, X25, [X31 + 0x10]
	0x0332BB10 CSET W0, LE
	0x0332BB14 LDP X30, X27, [X31], #0x50
	0x0332BB18 RET
	0x0332BB1C BL 0x1C16F20
	0x0332BB20 SUB X31, X31, 0xD0
	0x0332BB24 STP X29, X30, [X31 + 0x70]
	0x0332BB28 STP X28, X27, [X31 + 0x80]
	0x0332BB2C STP X26, X25, [X31 + 0x90]
	0x0332BB30 STP X24, X23, [X31 + 0xA0]
	0x0332BB34 STP X22, X21, [X31 + 0xB0]
	0x0332BB38 STP X20, X19, [X31 + 0xC0]
	0x0332BB3C STR W1, [X31 + 0xC]
	0x0332BB40 ADRP X19, 0x10B1000
	0x0332BB44 ADRP X29, 0xDCA000
	0x0332BB48 LDRB W8, [X19 + 0xCB9]
	0x0332BB4C LDR X29, [X29 + 0x570]
	0x0332BB50 MOV W20, W4
	0x0332BB54 MOV X24, X3
	0x0332BB58 MOV X25, X2
	0x0332BB5C MOV X23, X0
	0x0332BB60 TBNZ X8, 0x0, 0x332BB9C
	0x0332BB64 ADRP X0, 0xDCA000
	0x0332BB68 LDR X0, [X0 + 0xC48]
	0x0332BB6C BL 0x1C16CF4
	0x0332BB70 ADRP X0, 0xDFD000
	0x0332BB74 LDR X0, [X0 + 0x548]
	0x0332BB78 BL 0x1C16CF4
	0x0332BB7C ADRP X0, 0xDFD000
	0x0332BB80 LDR X0, [X0 + 0x530]
	0x0332BB84 BL 0x1C16CF4
	0x0332BB88 ADRP X0, 0xDCA000
	0x0332BB8C LDR X0, [X0 + 0x570]
	0x0332BB90 BL 0x1C16CF4
	0x0332BB94 MOVZ W8, 0x1
	0x0332BB98 STRB W8, [X19 + 0xCB9]
	0x0332BB9C MOVZ W0, 0x10
	0x0332BBA0 MOV X1, X31
	0x0332BBA4 BL 0x3235A9C
	0x0332BBA8 LDR X8, [X29]
	0x0332BBAC MOV X19, X0
	0x0332BBB0 LDR W9, [X8 + 0xE0]
	0x0332BBB4 CBNZ W9, 0x332BBC0
	0x0332BBB8 MOV X0, X8
	0x0332BBBC BL 0x1C16DFC
	0x0332BBC0 MOVZ X8, 0x81E3
	0x0332BBC4 MOVK X8, 0xE2050000
	0x0332BBC8 MOVK X8, 0xFF1D
	0x0332BBCC MOVK X8, 0xA2E30000
	0x0332BBD0 SMULH X8, X23, X8, X31
	0x0332BBD4 MOVZ X9, 0xC000
	0x0332BBD8 ADD X8, X8, X23
	0x0332BBDC MOVK X9, 0x2A690000
	0x0332BBE0 MOVZ X10, 0x42BD
	0x0332BBE4 SBFM X11, X8, 0x27, 0x3F
	0x0332BBE8 MOVK X9, 0xC9
	0x0332BBEC MOVK X10, 0xE57A0000
	0x0332BBF0 ADD X8, X11, X8, 0x3F, LSR
	0x0332BBF4 CMP X23, 0x0
	0x0332BBF8 MOVK X10, 0x94D5
	0x0332BBFC MSUB X9, X8, X9, X23
	0x0332BC00 MOVK X10, 0xD6BF0000
	0x0332BC04 CSNEG X28, X9, X9, GE
	0x0332BC08 CSNEG W22, W8, W8, GE
	0x0332BC0C SMULH X8, X28, X10, X31
	0x0332BC10 ADD X8, X8, X28
	0x0332BC14 SBFM X9, X8, 0x17, 0x3F
	0x0332BC18 ADD X27, X9, X8, 0x3F, LSR
	0x0332BC1C MOVZ W8, 0x9680
	0x0332BC20 ADRP X21, 0xDFD000
	0x0332BC24 MOVK W8, 0x980000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x10B2000
	011 Move W8, [X21+3246]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xDCB000
	019 Move X0, [X0+368]
	020 Call 0x1C17CF4
	021 Move X0, 0xDFE000
	022 Move X0, [X0+1288]
	023 Call 0x1C17CF4
	024 Move X0, 0xDD2000
	025 Move X0, [X0+1936]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3246], W8
	029 Move [X31+12], W31
	030 Move [X20+24], W31
	031 Compare X19, 0
	032 JumpIfEqual {138}
	033 Move W8, [X19+16]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X23, 0xDD2000
	036 Move X24, 0xDFE000
	037 Move X25, 0xDCB000
	038 Move X23, [X23+1936]
	039 Move X24, [X24+1288]
	040 Move X25, [X25+368]
	041 Move W21, W31
	042 Move X0, X19
	043 Move W1, W21
	044 Move X2, X31
	045 Call String.get_Chars, X0, X1
	046 And W8, W0, 0xFFFF
	047 Move W22, W0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X3, X31, 12
	053 Move W1, 77
	054 Move X0, X19
	055 Move W2, W21
	056 Call DateTimeFormatInfoScanner.ScanRepeatChar, X0, X1, X2, X3
	057 Move W8, [X31+12]
	058 Move W21, W0
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W8, [X19+16]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, X19
	063 Move W1, W21
	064 Move X2, X31
	065 Call String.get_Chars, X0, X1
	066 And W8, W0, 0xFFFF
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X3, [X24]
	069 Add W2, W21, 1
	070 Move X0, X20
	071 Move X1, X19
	072 Call DateTimeFormatInfoScanner.AddDateWords, X0, X1, X2, X3
	073 Move W21, W0
	074 Move W8, [X20+24]
	075 Or W8, W8, 2
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add X3, X31, 12
	080 Move W1, 121
	081 Move X0, X19
	082 Move W2, W21
	083 Call DateTimeFormatInfoScanner.ScanRepeatChar, X0, X1, X2, X3
	084 Move W8, [X20+24]
	085 Move W21, W0
	086 Or W8, W8, 1
	087 Move W8, [X20+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, [X25]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move W0, W22
	095 Move X1, X31
	096 Call Char.IsWhiteSpace, X0
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {106}
	101 Move W8, [X20+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X1, [X23]
	104 Move X0, X20
	105 Call DateTimeFormatInfoScanner.AddIgnorableSymbols, X0, X1
	106 Move [X20+24], W31
	107 Add W21, W21, 1
	108 Add X3, X31, 12
	109 Move W1, 100
	110 Move X0, X19
	111 Move W2, W21
	112 Call DateTimeFormatInfoScanner.ScanRepeatChar, X0, X1, X2, X3
	113 Move W8, [X31+12]
	114 Move W21, W0
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W8, [X20+24]
	117 Or W8, W8, 4
	118 Move [X20+24], W8
	119 Add W2, W21, 1
	120 Move X0, X20
	121 Move X1, X19
	122 Move X3, X31
	123 Call DateTimeFormatInfoScanner.AddDateWords, X0, X1, X2, X3
	124 Move W21, W0
	125 Add W21, W21, 2
	126 Move W8, [X19+16]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X20, [X31+64]
	129 Move X19, [X31+72]
	130 Move X22, [X31+48]
	131 Move X21, [X31+56]
	132 Move X24, [X31+32]
	133 Move X23, [X31+40]
	134 Move X30, [X31+16]
	135 Move X25, [X31+24]
	136 Add X31, X31, 80
	137 Return 
	138 Call 0x1C17F20

Method: System.String[] GetDateWordsOfDTFI(System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x03329CD0 BL 0x1C16DEC
	0x03329CD4 STR X30, [X31 - 0x30]!
	0x03329CD8 STP X22, X21, [X31 + 0x10]
	0x03329CDC STP X20, X19, [X31 + 0x20]
	0x03329CE0 MOV X21, X1
	0x03329CE4 MOV X1, X31
	0x03329CE8 MOV W19, W3
	0x03329CEC MOV W20, W2
	0x03329CF0 MOV X22, X0
	0x03329CF4 BL 0x33BDD8C
	0x03329CF8 STR X21, [X22 + 0x10]
	0x03329CFC STP W20, W19, [X22 + 0x18]
	0x03329D00 LDP X20, X19, [X31 + 0x20]
	0x03329D04 LDP X22, X21, [X31 + 0x10]
	0x03329D08 LDR X30, [X31], #0x30
	0x03329D0C RET
	0x03329D10 SUB X31, X31, 0x60
	0x03329D14 STR X30, [X31 + 0x10]
	0x03329D18 STP X26, X25, [X31 + 0x20]
	0x03329D1C STP X24, X23, [X31 + 0x30]
	0x03329D20 STP X22, X21, [X31 + 0x40]
	0x03329D24 STP X20, X19, [X31 + 0x50]
	0x03329D28 MOV W19, W6
	0x03329D2C MOV W20, W5
	0x03329D30 MOV X21, X4
	0x03329D34 MOV W22, W3
	0x03329D38 MOV W23, W2
	0x03329D3C MOV X24, X1
	0x03329D40 CMP W3, 0x1
	0x03329D44 MOV X25, X0
	0x03329D48 B.NE 0x3329D94
	0x03329D4C CMP W19, 0x1
	0x03329D50 B.NE 0x3329D94
	0x03329D54 CBZ X24, 0x3329E00
	0x03329D58 MOV X0, X24
	0x03329D5C MOV W1, W23
	0x03329D60 MOV X2, X31
	0x03329D64 BL 0x3222A1C
	0x03329D68 CBZ X21, 0x3329E00
	0x03329D6C MOV W26, W0
	0x03329D70 MOV X0, X21
	0x03329D74 MOV W1, W20
	0x03329D78 MOV X2, X31
	0x03329D7C BL 0x3222A1C
	0x03329D80 AND W8, W26, 0xFFFF
	0x03329D84 CMP W8, W0, UXTH
	0x03329D88 B.NE 0x3329D94
	0x03329D8C MOVZ W0, 0x1
	0x03329D90 B 0x3329DE4
	0x03329D94 MOV X0, X25
	0x03329D98 BL 0x3324360
	0x03329D9C CBZ X0, 0x3329E00
	0x03329DA0 LDR X8, [X0]
	0x03329DA4 LDP X9, X1, [X8 + 0x1F8]
	0x03329DA8 BLR X9
	0x03329DAC CBZ X0, 0x3329E00
	0x03329DB0 LDR X8, [X0]
	0x03329DB4 MOVZ W7, 0x1
	0x03329DB8 MOV X1, X24
	0x03329DBC MOV W2, W23
	0x03329DC0 LDP X9, X8, [X8 + 0x1B8]
	0x03329DC4 MOV W3, W22
	0x03329DC8 MOV X4, X21
	0x03329DCC MOV W5, W20
	0x03329DD0 MOV W6, W19
	0x03329DD4 STR X8, [X31]
	0x03329DD8 BLR X9
	0x03329DDC CMP W0, 0x0
	0x03329DE0 CSET W0, EQ
	0x03329DE4 LDP X20, X19, [X31 + 0x50]
	0x03329DE8 LDP X22, X21, [X31 + 0x40]
	0x03329DEC LDP X24, X23, [X31 + 0x30]
	0x03329DF0 LDP X26, X25, [X31 + 0x20]
	0x03329DF4 LDR X30, [X31 + 0x10]
	0x03329DF8 ADD X31, X31, 0x60
	0x03329DFC RET
	0x03329E00 BL 0x1C16F20
	0x03329E04 STR X30, [X31 - 0x20]!
	0x03329E08 STP X20, X19, [X31 + 0x10]
	0x03329E0C ADRP X19, 0x10B3000
	0x03329E10 ADRP X20, 0xDD3000
	0x03329E14 LDRB W8, [X19 + 0xCA8]
	0x03329E18 LDR X20, [X20 + 0x8D8]
	0x03329E1C TBNZ X8, 0x0, 0x3329E40
	0x03329E20 ADRP X0, 0xDD3000
	0x03329E24 LDR X0, [X0 + 0x8D8]
	0x03329E28 BL 0x1C16CF4
	0x03329E2C ADRP X0, 0xDFF000
	0x03329E30 LDR X0, [X0 + 0x328]
	0x03329E34 BL 0x1C16CF4
	0x03329E38 MOVZ W8, 0x1
	0x03329E3C STRB W8, [X19 + 0xCA8]
	0x03329E40 LDR X0, [X20]
	0x03329E44 MOVZ W1, 0x2
	0x03329E48 BL 0x1C16D6C
	0x03329E4C CBZ X0, 0x3329E94
	0x03329E50 LDR W8, [X0 + 0x18]
	0x03329E54 CBZ W8, 0x3329E90
	0x03329E58 MOVZ W9, 0x20
	0x03329E5C CMP W8, 0x1
	0x03329E60 STRH W9, [X0 + 0x20]
	0x03329E64 B.EQ 0x3329E90
	0x03329E68 ADRP X8, 0xDFF000
	0x03329E6C LDR X8, [X8 + 0x328]
	0x03329E70 MOVZ W9, 0xA0
	0x03329E74 STRH W9, [X0 + 0x22]
	0x03329E78 LDP X20, X19, [X31 + 0x10]
	0x03329E7C LDR X8, [X8]
	0x03329E80 LDR X8, [X8 + 0xB8]
	0x03329E84 STR X0, [X8 + 0x8]
	0x03329E88 LDR X30, [X31], #0x20
	0x03329E8C RET
	0x03329E90 BL 0x1C16F28
	0x03329E94 BL 0x1C16F20
	0x03329E98 STR X30, [X31 - 0x30]!
	0x03329E9C STP X22, X21, [X31 + 0x10]
	0x03329EA0 STP X20, X19, [X31 + 0x20]
	0x03329EA4 ADRP X19, 0x10B3000
	0x03329EA8 ADRP X20, 0xDFF000
	0x03329EAC LDRB W8, [X19 + 0xCA9]
	0x03329EB0 LDR X20, [X20 + 0x468]
	0x03329EB4 TBNZ X8, 0x0, 0x3329FBC
	0x03329EB8 ADRP X0, 0xDFF000
	0x03329EBC LDR X0, [X0 + 0x468]
	0x03329EC0 BL 0x1C16CF4
	0x03329EC4 ADRP X0, 0xDCB000
	0x03329EC8 LDR X0, [X0 + 0x810]
	0x03329ECC BL 0x1C16CF4
	0x03329ED0 ADRP X0, 0xDCB000
	0x03329ED4 LDR X0, [X0 + 0x6C0]
	0x03329ED8 BL 0x1C16CF4
	0x03329EDC ADRP X0, 0xDCB000
	0x03329EE0 LDR X0, [X0 + 0x6D0]
	0x03329EE4 BL 0x1C16CF4
	0x03329EE8 ADRP X0, 0xDCC000
	0x03329EEC LDR X0, [X0 + 0x278]
	0x03329EF0 BL 0x1C16CF4
	0x03329EF4 ADRP X0, 0xDFF000
	0x03329EF8 LDR X0, [X0 + 0x430]
	0x03329EFC BL 0x1C16CF4
	0x03329F00 ADRP X0, 0xDFF000
	0x03329F04 LDR X0, [X0 + 0x470]
	0x03329F08 BL 0x1C16CF4
	0x03329F0C ADRP X0, 0xDFF000
	0x03329F10 LDR X0, [X0 + 0x478]
	0x03329F14 BL 0x1C16CF4
	0x03329F18 ADRP X0, 0xDFF000
	0x03329F1C LDR X0, [X0 + 0x480]
	0x03329F20 BL 0x1C16CF4
	0x03329F24 ADRP X0, 0xDFF000
	0x03329F28 LDR X0, [X0 + 0x488]
	0x03329F2C BL 0x1C16CF4
	0x03329F30 ADRP X0, 0xDFF000
	0x03329F34 LDR X0, [X0 + 0x448]
	0x03329F38 BL 0x1C16CF4
	0x03329F3C ADRP X0, 0xDFF000
	0x03329F40 LDR X0, [X0 + 0x490]
	0x03329F44 BL 0x1C16CF4
	0x03329F48 ADRP X0, 0xDCB000
	0x03329F4C LDR X0, [X0 + 0x2A8]
	0x03329F50 BL 0x1C16CF4
	0x03329F54 ADRP X0, 0xDFF000
	0x03329F58 LDR X0, [X0 + 0x4A0]
	0x03329F5C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x10B4000
	008 Move W8, [X21+3247]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xDCC000
	016 Move X0, [X0+456]
	017 Call 0x1C17CF4
	018 Move X0, 0xDF3000
	019 Move X0, [X0+2904]
	020 Call 0x1C17CF4
	021 Move X0, 0xDCB000
	022 Move X0, [X0+2760]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3247], W8
	026 Compare X20, 0
	027 JumpIfEqual {155}
	028 Move W1, 68
	029 Move X0, X20
	030 Call DateTimeFormatInfo.GetAllDateTimePatterns, X0, X1
	031 Compare X0, 0
	032 JumpIfEqual {155}
	033 Move X8, [X0+24]
	034 Move X21, X0
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X22, X31
	037 And X8, X8, 0
	038 Add X23, X21, 32
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X1, [X23]
	041 Move X0, X19
	042 Call DateTimeFormatInfoScanner.ScanDateWord, X0, X1
	043 Move W8, [X21+24]
	044 Add X22, X22, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W1, 100
	047 Move X0, X20
	048 Call DateTimeFormatInfo.GetAllDateTimePatterns, X0, X1
	049 Compare X0, 0
	050 JumpIfEqual {155}
	051 Move X8, [X0+24]
	052 Move X21, X0
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X22, X31
	055 And X8, X8, 0
	056 Add X23, X21, 32
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X1, [X23]
	059 Move X0, X19
	060 Call DateTimeFormatInfoScanner.ScanDateWord, X0, X1
	061 Move W8, [X21+24]
	062 Add X22, X22, 1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W1, 121
	065 Move X0, X20
	066 Call DateTimeFormatInfo.GetAllDateTimePatterns, X0, X1
	067 Compare X0, 0
	068 JumpIfEqual {155}
	069 Move X8, [X0+24]
	070 Move X21, X0
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X22, X31
	073 And X8, X8, 0
	074 Add X23, X21, 32
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X1, [X23]
	077 Move X0, X19
	078 Call DateTimeFormatInfoScanner.ScanDateWord, X0, X1
	079 Move W8, [X21+24]
	080 Add X22, X22, 1
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, X20
	083 Call DateTimeFormatInfo.get_MonthDayPattern, X0
	084 Move X1, X0
	085 Move X0, X19
	086 Call DateTimeFormatInfoScanner.ScanDateWord, X0, X1
	087 Move W1, 84
	088 Move X0, X20
	089 Call DateTimeFormatInfo.GetAllDateTimePatterns, X0, X1
	090 Compare X0, 0
	091 JumpIfEqual {155}
	092 Move X8, [X0+24]
	093 Move X21, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X22, X31
	096 And X8, X8, 0
	097 Add X23, X21, 32
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X1, [X23]
	100 Move X0, X19
	101 Call DateTimeFormatInfoScanner.ScanDateWord, X0, X1
	102 Move W8, [X21+24]
	103 Add X22, X22, 1
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move W1, 116
	106 Move X0, X20
	107 Call DateTimeFormatInfo.GetAllDateTimePatterns, X0, X1
	108 Compare X0, 0
	109 JumpIfEqual {155}
	110 Move X8, [X0+24]
	111 Move X20, X0
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X21, X31
	114 And X8, X8, 0
	115 Add X22, X20, 32
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X1, [X22]
	118 Move X0, X19
	119 Call DateTimeFormatInfoScanner.ScanDateWord, X0, X1
	120 Move W8, [X20+24]
	121 Add X21, X21, 1
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X8, [X19+16]
	124 Compare X8, 0
	125 JumpIfEqual {156}
	126 Move W1, [X8+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X8, 0xDCB000
	129 Move X8, [X8+2760]
	130 Move X0, [X8]
	131 Call 0x1C17D6C
	132 Move X8, [X19+16]
	133 Compare X8, 0
	134 JumpIfEqual {155}
	135 Move X23, 0xDF3000
	136 Move X23, [X23+2904]
	137 Move X20, X0
	138 Move X21, X31
	139 Add X22, X0, 32
	140 NotImplemented "Instruction LDRSW not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X2, [X23]
	143 Move X0, X8
	144 Move W1, W21
	145 Call List`1<Object>.get_Item, X0, X1
	146 Compare X20, 0
	147 JumpIfEqual {155}
	148 Move W8, [X20+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move [X22], X0
	151 Move X8, [X19+16]
	152 Add X21, X21, 1
	153 Compare X8, 0
	154 JumpIfNotEqual {140}
	155 Call 0x1C17F20
	156 Move X20, X31
	157 Move X0, X20
	158 Move X20, [X31+32]
	159 Move X19, [X31+40]
	160 Move X22, [X31+16]
	161 Move X21, [X31+24]
	162 Move X30, [X31+48]
	163 Move X23, [X31+56]
	164 Return X0
	165 Call 0x1C17F28

Method: System.Globalization.FORMATFLAGS GetFormatFlagGenitiveMonth(System.String[] monthNames, System.String[] genitveMonthNames, System.String[] abbrevMonthNames, System.String[] genetiveAbbrevMonthNames)

Disassembly:
	0x033280F0 BL 0x3222A1C
	0x033280F4 CBZ X24, 0x33282A8
	0x033280F8 LDR X8, [X24]
	0x033280FC MOV W1, W0
	0x03328100 MOV X0, X24
	0x03328104 LDP X9, X2, [X8 + 0x1A8]
	0x03328108 BLR X9
	0x0332810C CBZ X21, 0x33282A8
	0x03328110 MOVZ W9, 0x8873
	0x03328114 AND W8, W0, 0xFFFF
	0x03328118 MOVK W9, 0x4CAB0000
	0x0332811C UMADDL X9, X8, X9, X31
	0x03328120 UBFM X9, X9, 0x20, 0x3F
	0x03328124 SUB W11, W8, W9
	0x03328128 ADD W9, W9, W11, 0x1, LSR
	0x0332812C MOVZ W11, 0xE78F

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X3
	005 Move X20, X2
	006 Call DateTimeFormatInfoScanner.EqualStringArrays, X0, X1
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {19}
	011 Move X0, X20
	012 Move X1, X19
	013 Call DateTimeFormatInfoScanner.EqualStringArrays, X0, X1
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {19}
	018 Move W0, W31
	019 Move W0, 1
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Globalization.FORMATFLAGS GetFormatFlagUseSpaceInMonthNames(System.String[] monthNames, System.String[] genitveMonthNames, System.String[] abbrevMonthNames, System.String[] genetiveAbbrevMonthNames)

Disassembly:
	0x03328130 MOVK W11, 0x52540000
	0x03328134 MOVZ W10, 0xC5
	0x03328138 UBFM W9, W9, 0x7, 0x1F
	0x0332813C UMADDL X11, X8, X11, X31
	0x03328140 MSUB W9, W9, W10, W8
	0x03328144 MOVZ W10, 0xC7
	0x03328148 UBFM X11, X11, 0x26, 0x3F
	0x0332814C MOV W25, W0
	0x03328150 MOV W26, W31
	0x03328154 MSUB W24, W11, W10, W8
	0x03328158 ADD W27, W9, 0x1
	0x0332815C LDR W8, [X21 + 0x18]
	0x03328160 CMP W24, W8
	0x03328164 B.CS 0x33282AC
	0x03328168 ADD X29, X21, W24, 0x3, SXTW
	0x0332816C LDR X28, [X29 + 0x20]!
	0x03328170 CBZ X28, 0x33281C4
	0x03328174 LDR X4, [X28 + 0x10]
	0x03328178 CBZ X4, 0x33282A8
	0x0332817C LDR W8, [X22 + 0x10]
	0x03328180 LDR W3, [X4 + 0x10]
	0x03328184 CMP W8, W3
	0x03328188 B.LT 0x33281A8
	0x0332818C MOV X0, X23
	0x03328190 MOV X1, X22
	0x03328194 MOV W2, W31
	0x03328198 MOV W5, W31
	0x0332819C MOV W6, W3
	0x033281A0 BL 0x3329D10
	0x033281A4 TBNZ X0, 0x0, 0x332822C
	0x033281A8 ADD W8, W24, W27
	0x033281AC ADD W26, W26, 0x1
	0x033281B0 SUBS W9, W8, 0xC7
	0x033281B4 CSEL W24, W8, W9, LT
	0x033281B8 CMP W26, 0xC7
	0x033281BC B.NE 0x332815C
	0x033281C0 B 0x332820C
	0x033281C4 ADRP X8, 0xE00000
	0x033281C8 LDR X8, [X8 + 0x460]
	0x033281CC LDR X0, [X8]
	0x033281D0 BL 0x1C16F10
	0x033281D4 MOV X1, X31
	0x033281D8 MOV X23, X0
	0x033281DC BL 0x33BDD8C
	0x033281E0 STR X22, [X23 + 0x10]
	0x033281E4 STP W20, W19, [X23 + 0x18]
	0x033281E8 LDR X8, [X21]
	0x033281EC MOV X0, X23

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X3
	008 Move X20, X2
	009 Move X21, X1
	010 Move X22, X0
	011 Call DateTimeFormatInfoScanner.ArrayElementsBeginWithDigit, X0
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {34}
	016 Move X0, X21
	017 Call DateTimeFormatInfoScanner.ArrayElementsBeginWithDigit, X0
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {34}
	022 Move X0, X20
	023 Call DateTimeFormatInfoScanner.ArrayElementsBeginWithDigit, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {34}
	028 Move X0, X19
	029 Call DateTimeFormatInfoScanner.ArrayElementsBeginWithDigit, X0
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {71}
	034 Move W23, 32
	035 Move X0, X22
	036 Call DateTimeFormatInfoScanner.ArrayElementsHaveSpace, X0
	037 And W8, W0, 1
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Compare W8, 0
	040 JumpIfNotEqual {61}
	041 Move X0, X21
	042 Call DateTimeFormatInfoScanner.ArrayElementsHaveSpace, X0
	043 And W8, W0, 1
	044 NotImplemented "Instruction CSEL not yet implemented."
	045 Compare W8, 0
	046 JumpIfNotEqual {61}
	047 Move X0, X20
	048 Call DateTimeFormatInfoScanner.ArrayElementsHaveSpace, X0
	049 Move W23, W22
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {61}
	054 Move X0, X19
	055 Call DateTimeFormatInfoScanner.ArrayElementsHaveSpace, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {72}
	060 Move W23, W21
	061 Move W8, 4
	062 Move W21, W23
	063 Or W0, W8, W21
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Return X0
	071 Move W23, W31
	072 Move W8, W31

Method: System.Globalization.FORMATFLAGS GetFormatFlagUseSpaceInDayNames(System.String[] dayNames, System.String[] abbrevDayNames)

Disassembly:
	0x033281F0 LDR X1, [X8 + 0x40]
	0x033281F4 BL 0x1C16E00
	0x033281F8 CBZ X0, 0x33282B0
	0x033281FC LDR W8, [X21 + 0x18]
	0x03328200 CMP W24, W8
	0x03328204 B.CS 0x33282AC
	0x03328208 STR X23, [X29]
	0x0332820C LDP X20, X19, [X31 + 0x60]
	0x03328210 LDP X22, X21, [X31 + 0x50]
	0x03328214 LDP X24, X23, [X31 + 0x40]
	0x03328218 LDP X26, X25, [X31 + 0x30]
	0x0332821C LDP X28, X27, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X1
	004 Call DateTimeFormatInfoScanner.ArrayElementsHaveSpace, X0
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {15}
	009 Move X0, X19
	010 Call DateTimeFormatInfoScanner.ArrayElementsHaveSpace, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {16}
	015 Move W0, 16
	016 Move W0, W31
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0

Method: System.Globalization.FORMATFLAGS GetFormatFlagUseHebrewCalendar(System.Int32 calID)

Disassembly:
	0x03328220 LDP X29, X30, [X31 + 0x10]
	0x03328224 ADD X31, X31, 0x70
	0x03328228 RET
	0x0332822C LDR X8, [X28 + 0x10]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 10
	003 NotImplemented "Instruction CSEL not yet implemented."
	004 Return X0

Method: System.Boolean EqualStringArrays(System.String[] array1, System.String[] array2)

Disassembly:
	0x0332BC28 LDR X21, [X21 + 0x530]
	0x0332BC2C MSUB W26, W27, W8, W28
	0x0332BC30 LDR W8, [X31 + 0xC]
	0x0332BC34 STR W26, [X31 + 0x6C]
	0x0332BC38 TBZ X8, 0x0, 0x332BC90
	0x0332BC3C LDR X0, [X29]
	0x0332BC40 LDR W8, [X0 + 0xE0]
	0x0332BC44 CBNZ W8, 0x332BC4C
	0x0332BC48 BL 0x1C16DFC
	0x0332BC4C LDR X0, [X21]
	0x0332BC50 LDR W8, [X0 + 0xE0]
	0x0332BC54 CBNZ W8, 0x332BC5C
	0x0332BC58 BL 0x1C16DFC
	0x0332BC5C LDR X8, [X21]
	0x0332BC60 CMP X23, 0x0
	0x0332BC64 LDR X8, [X8 + 0xB8]
	0x0332BC68 ADD X9, X8, 0x28
	0x0332BC6C CSEL X8, X9, X8, LT
	0x0332BC70 LDP V0, V1, [X8]
	0x0332BC74 LDR X8, [X8 + 0x20]
	0x0332BC78 STP V0, V1, [X31 + 0x10]
	0x0332BC7C STR X8, [X31 + 0x30]
	0x0332BC80 STR X8, [X31 + 0x60]
	0x0332BC84 STP V0, V1, [X31 + 0x40]
	0x0332BC88 CBNZ W26, 0x332BCBC
	0x0332BC8C B 0x332BCD8
	0x0332BC90 CMP W20, 0x2
	0x0332BC94 MOVI V0.2D, 0x0
	0x0332BC98 CSET W3, EQ
	0x0332BC9C ADD X0, X31, 0x40
	0x0332BCA0 MOV X1, X25
	0x0332BCA4 MOV X2, X24
	0x0332BCA8 STR X31, [X31 + 0x60]
	0x0332BCAC STP V0, V0, [X31 + 0x40]
	0x0332BCB0 BL 0x332C704
	0x0332BCB4 LDR W26, [X31 + 0x6C]
	0x0332BCB8 CBZ W26, 0x332BCD8
	0x0332BCBC LDR W8, [X31 + 0x58]
	0x0332BCC0 MOVZ W9, 0x7
	0x0332BCC4 SUB W0, W9, W8
	0x0332BCC8 BL 0x332CA80
	0x0332BCCC SXTW X8, W26
	0x0332BCD0 SDIV X8, X8, X0
	0x0332BCD4 STR W8, [X31 + 0x6C]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X20, X0
	009 Compare X0, 0
	010 JumpIfEqual {48}
	011 Move X19, X1
	012 Compare X1, 0
	013 JumpIfEqual {48}
	014 Move W8, [X20+24]
	015 Move W9, [X19+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X21, X31
	019 Add X22, X19, 32
	020 Add X23, X20, 32
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W8, [X19+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X0, [X23]
	025 Compare X0, 0
	026 JumpIfEqual {48}
	027 Move X1, [X22]
	028 Move X2, X31
	029 Call String.Equals, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {39}
	034 Move W8, [X20+24]
	035 Add X21, X21, 1
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W0, 1
	038 Move W0, W31
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 And W0, W0, 1
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 Return X0
	047 Call 0x1C17F28
	048 Call 0x1C17F20

Method: System.Boolean ArrayElementsHaveSpace(System.String[] array)

Disassembly:
	0x0332BF34 CBNZ W8, 0x332BF40
	0x0332BF38 BL 0x1C16DFC
	0x0332BF3C LDR X0, [X22]
	0x0332BF40 LDR X8, [X0 + 0xB8]
	0x0332BF44 LDR X8, [X8 + 0x28]
	0x0332BF48 CBZ X8, 0x332BFDC
	0x0332BF4C LDR W9, [X8 + 0x18]
	0x0332BF50 CMP W21, W9
	0x0332BF54 B.CS 0x332BFE0
	0x0332BF58 ADRP X9, 0xDCA000
	0x0332BF5C LDR X9, [X9 + 0xC48]
	0x0332BF60 LDR X20, [X8, X20, LSL]
	0x0332BF64 LDR X0, [X9]
	0x0332BF68 LDR W9, [X0 + 0xE0]
	0x0332BF6C CBNZ W9, 0x332BF74
	0x0332BF70 BL 0x1C16DFC
	0x0332BF74 MOV X0, X31
	0x0332BF78 BL 0x3338524
	0x0332BF7C MOV X2, X0
	0x0332BF80 ADD X0, X31, 0x6C
	0x0332BF84 MOV X1, X20
	0x0332BF88 MOV X3, X31
	0x0332BF8C BL 0x337B8BC
	0x0332BF90 MOV X1, X0
	0x0332BF94 MOV X0, X19
	0x0332BF98 MOV X2, X31
	0x0332BF9C BL 0x32333E0
	0x0332BFA0 ADD X0, X31, 0x40
	0x0332BFA4 BL 0x332CBE8
	0x0332BFA8 MOV X1, X0
	0x0332BFAC MOV X0, X19
	0x0332BFB0 MOV X2, X31
	0x0332BFB4 BL 0x32333E0
	0x0332BFB8 MOV X0, X19
	0x0332BFBC LDP X20, X19, [X31 + 0xC0]
	0x0332BFC0 LDP X22, X21, [X31 + 0xB0]
	0x0332BFC4 LDP X24, X23, [X31 + 0xA0]
	0x0332BFC8 LDP X26, X25, [X31 + 0x90]
	0x0332BFCC LDP X28, X27, [X31 + 0x80]
	0x0332BFD0 LDP X29, X30, [X31 + 0x70]
	0x0332BFD4 ADD X31, X31, 0xD0
	0x0332BFD8 RET
	0x0332BFDC BL 0x1C16F20
	0x0332BFE0 BL 0x1C16F28
	0x0332BFE4 SUB X31, X31, 0xA0
	0x0332BFE8 STP X29, X30, [X31 + 0x40]
	0x0332BFEC STP X28, X27, [X31 + 0x50]
	0x0332BFF0 STP X26, X25, [X31 + 0x60]
	0x0332BFF4 STP X24, X23, [X31 + 0x70]
	0x0332BFF8 STP X22, X21, [X31 + 0x80]
	0x0332BFFC STP X20, X19, [X31 + 0x90]
	0x0332C000 ADRP X19, 0x10B0000
	0x0332C004 LDRB W8, [X19 + 0xCBA]
	0x0332C008 MOV X20, X4
	0x0332C00C MOV X21, X2
	0x0332C010 MOV X22, X1
	0x0332C014 STR X3, [X31 + 0x18]
	0x0332C018 STR X0, [X31 + 0x28]
	0x0332C01C TBNZ X8, 0x0, 0x332C070
	0x0332C020 ADRP X0, 0xDC9000
	0x0332C024 LDR X0, [X0 + 0xC48]
	0x0332C028 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x10B2000
	010 Move W8, [X20+3248]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDCB000
	017 Move X0, [X0+368]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3248], W8
	021 Compare X19, 0
	022 JumpIfEqual {72}
	023 Move X8, [X19+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSET not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X24, 0xDCB000
	028 Move X24, [X24+368]
	029 Move W23, W31
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X9, X19, W23
	032 Move W20, W31
	033 Add X25, X9, 32
	034 Move X0, [X25]
	035 Compare X0, 0
	036 JumpIfEqual {72}
	037 Move W9, [X0+16]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W1, W20
	040 Move X2, X31
	041 Call String.get_Chars, X0, X1
	042 Move X8, [X24]
	043 Move W21, W0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move W0, W21
	050 Move X1, X31
	051 Call Char.IsWhiteSpace, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {62}
	056 Move X8, [X19+24]
	057 Add W20, W20, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add W23, W23, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CSET not yet implemented."
	062 And W0, W22, 1
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move X30, [X31+64]
	070 Move X25, [X31+72]
	071 Return X0
	072 Call 0x1C17F20
	073 Call 0x1C17F28

Method: System.Boolean ArrayElementsBeginWithDigit(System.String[] array)

Disassembly:
	0x0332BCD8 ADD X0, X31, 0x40
	0x0332BCDC BL 0x332CB10
	0x0332BCE0 CBZ X19, 0x332BFDC
	0x0332BCE4 MOVZ X8, 0xF7D5
	0x0332BCE8 MOVK X8, 0x40BA0000
	0x0332BCEC MOVZ X9, 0x10B5
	0x0332BCF0 MOVK X8, 0x13D8
	0x0332BCF4 MOVK X9, 0x34C20000
	0x0332BCF8 MOVK X8, 0x1CA20000
	0x0332BCFC MOVK X9, 0x7FAB
	0x0332BD00 MOVK X9, 0x3D150000
	0x0332BD04 MOVZ W10, 0x8889
	0x0332BD08 SMULH X8, X28, X8, X31
	0x0332BD0C MOVK W10, 0x88880000
	0x0332BD10 SMULH X9, X28, X9, X31
	0x0332BD14 UBFM X15, X8, 0x3F, 0x3F
	0x0332BD18 UBFM X8, X8, 0x1A, 0x3F
	0x0332BD1C SMADDL X14, X27, X10, X31
	0x0332BD20 ADD W8, W8, W15
	0x0332BD24 UBFM X15, X9, 0x3F, 0x3F
	0x0332BD28 SBFM X9, X9, 0x21, 0x3F
	0x0332BD2C MOVZ W11, 0xAAAB
	0x0332BD30 UBFM X14, X14, 0x20, 0x3F
	0x0332BD34 ADD W9, W9, W15
	0x0332BD38 SXTH W15, W8
	0x0332BD3C MOVK W11, 0x2AAA0000
	0x0332BD40 ADD W14, W14, W27
	0x0332BD44 SMADDL X10, X15, X10, X31
	0x0332BD48 SXTB W15, W9
	0x0332BD4C SMADDL X11, X15, X11, X31
	0x0332BD50 SBFM W15, W14, 0x5, 0x1F
	0x0332BD54 UBFM X10, X10, 0x20, 0x3F
	0x0332BD58 ADD W14, W15, W14, 0x1F, LSR
	0x0332BD5C UBFM X15, X11, 0x3F, 0x3F
	0x0332BD60 UBFM X11, X11, 0x22, 0x3F
	0x0332BD64 ADD W10, W10, W8, SXTH
	0x0332BD68 ADD W11, W11, W15
	0x0332BD6C UBFM W15, W10, 0x5, 0x1F
	0x0332BD70 MOVZ W12, 0x18
	0x0332BD74 MOVZ W13, 0x3C
	0x0332BD78 ADD W10, W15, W10, 0x1F, LSR
	0x0332BD7C MOV X1, X0
	0x0332BD80 MSUB W9, W11, W12, W9
	0x0332BD84 MSUB W8, W10, W13, W8
	0x0332BD88 MOV X0, X19
	0x0332BD8C MOV X2, X31
	0x0332BD90 SXTB W25, W9
	0x0332BD94 SXTH W24, W8
	0x0332BD98 MSUB W23, W14, W13, W27
	0x0332BD9C BL 0x32333E0
	0x0332BDA0 CMP W20, 0x2
	0x0332BDA4 B.EQ 0x332BDAC
	0x0332BDA8 CBZ W22, 0x332BDD4
	0x0332BDAC MOV X0, X19
	0x0332BDB0 MOV W1, W22
	0x0332BDB4 MOV X2, X31
	0x0332BDB8 BL 0x3233E30
	0x0332BDBC ADD X0, X31, 0x40
	0x0332BDC0 BL 0x332CB38
	0x0332BDC4 MOV X1, X0
	0x0332BDC8 MOV X0, X19
	0x0332BDCC MOV X2, X31
	0x0332BDD0 BL 0x32333E0
	0x0332BDD4 LDR X0, [X21]
	0x0332BDD8 LDR W22, [X31 + 0x4C]
	0x0332BDDC LDR W8, [X0 + 0xE0]
	0x0332BDE0 CBNZ W8, 0x332BDE8
	0x0332BDE4 BL 0x1C16DFC
	0x0332BDE8 MOV X0, X19
	0x0332BDEC MOV W1, W25
	0x0332BDF0 MOV W2, W22
	0x0332BDF4 BL 0x332B578
	0x0332BDF8 ADD X0, X31, 0x40
	0x0332BDFC BL 0x332CB64
	0x0332BE00 MOV X1, X0
	0x0332BE04 MOV X0, X19
	0x0332BE08 MOV X2, X31
	0x0332BE0C BL 0x32333E0
	0x0332BE10 LDR W2, [X31 + 0x50]
	0x0332BE14 MOV X0, X19
	0x0332BE18 MOV W1, W24
	0x0332BE1C BL 0x332B578
	0x0332BE20 ADD X0, X31, 0x40
	0x0332BE24 BL 0x332CB90
	0x0332BE28 MOV X1, X0
	0x0332BE2C MOV X0, X19
	0x0332BE30 MOV X2, X31
	0x0332BE34 BL 0x32333E0
	0x0332BE38 LDR W2, [X31 + 0x54]
	0x0332BE3C MOV X0, X19
	0x0332BE40 MOV W1, W23
	0x0332BE44 BL 0x332B578
	0x0332BE48 CMP W20, 0x1
	0x0332BE4C B.NE 0x332BEB8
	0x0332BE50 LDR W8, [X31 + 0xC]
	0x0332BE54 TBNZ X8, 0x0, 0x332BEB8
	0x0332BE58 LDRSW X8, [X31 + 0x58]
	0x0332BE5C CMP W8, 0x1
	0x0332BE60 B.LT 0x332BFA0
	0x0332BE64 LDR W10, [X31 + 0x6C]
	0x0332BE68 SUB W21, W8, 0x1
	0x0332BE6C UBFM X8, X8, 0x3D, 0x3C
	0x0332BE70 ADD X20, X8, 0x18
	0x0332BE74 MOVZ W8, 0x6667
	0x0332BE78 MOVK W8, 0x66660000
	0x0332BE7C MOVZ W9, 0xA
	0x0332BE80 SMADDL X11, X10, X8, X31
	0x0332BE84 UBFM X12, X11, 0x3F, 0x3F
	0x0332BE88 SBFM X11, X11, 0x22, 0x3F
	0x0332BE8C ADD W11, W11, W12
	0x0332BE90 MSUB W10, W11, W9, W10
	0x0332BE94 CBNZ W10, 0x332BF0C
	0x0332BE98 ADD W10, W21, 0x1
	0x0332BE9C SUB W21, W21, 0x1
	0x0332BEA0 CMP W10, 0x1
	0x0332BEA4 SUB X20, X20, 0x8
	0x0332BEA8 MOV W10, W11
	0x0332BEAC STR W11, [X31 + 0x6C]
	0x0332BEB0 B.GT 0x332BE80
	0x0332BEB4 B 0x332BFA0
	0x0332BEB8 CMP W20, 0x2
	0x0332BEBC B.EQ 0x332BEC8
	0x0332BEC0 LDR W8, [X31 + 0x6C]
	0x0332BEC4 CBZ W8, 0x332BFA0
	0x0332BEC8 ADD X0, X31, 0x40
	0x0332BECC BL 0x332CBBC
	0x0332BED0 MOV X1, X0
	0x0332BED4 MOV X0, X19
	0x0332BED8 MOV X2, X31
	0x0332BEDC BL 0x32333E0
	0x0332BEE0 LDR X0, [X21]
	0x0332BEE4 LDR W20, [X31 + 0x6C]
	0x0332BEE8 LDR W21, [X31 + 0x58]
	0x0332BEEC LDR W8, [X0 + 0xE0]
	0x0332BEF0 CBNZ W8, 0x332BEF8
	0x0332BEF4 BL 0x1C16DFC
	0x0332BEF8 MOV X0, X19
	0x0332BEFC MOV W1, W20
	0x0332BF00 MOV W2, W21
	0x0332BF04 BL 0x332B578
	0x0332BF08 B 0x332BFA0
	0x0332BF0C ADD X0, X31, 0x40
	0x0332BF10 BL 0x332CBBC
	0x0332BF14 MOV X1, X0
	0x0332BF18 MOV X0, X19
	0x0332BF1C MOV X2, X31
	0x0332BF20 BL 0x32333E0
	0x0332BF24 ADRP X22, 0xDFD000
	0x0332BF28 LDR X22, [X22 + 0x548]
	0x0332BF2C LDR X0, [X22]
	0x0332BF30 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X0, 0
	008 JumpIfEqual {136}
	009 Move W8, [X0+24]
	010 Move X19, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X22, X31
	013 Add X20, X19, 32
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, [X20]
	016 Compare X0, 0
	017 JumpIfEqual {136}
	018 Move W8, [X0+16]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W1, W31
	021 Move X2, X31
	022 Call String.get_Chars, X0, X1
	023 And W8, W0, 0xFFFF
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, [X19+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, [X20]
	028 Compare X0, 0
	029 JumpIfEqual {136}
	030 Move W1, W31
	031 Move X2, X31
	032 Call String.get_Chars, X0, X1
	033 And W8, W0, 0xFFFF
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, [X19+24]
	036 Add X22, X22, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W0, W31
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Move X23, [X31+56]
	045 Return X0
	046 Move W8, [X19+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add X23, X19, 32
	049 Move W20, 2
	050 Move X0, [X23]
	051 Compare X0, 0
	052 JumpIfEqual {136}
	053 Move W8, [X0+16]
	054 Subtract W21, W20, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W1, W21
	057 Move X2, X31
	058 Call String.get_Chars, X0, X1
	059 And W8, W0, 0xFFFF
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W8, [X19+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, [X23]
	064 Compare X0, 0
	065 JumpIfEqual {136}
	066 Move W1, W21
	067 Move X2, X31
	068 Call String.get_Chars, X0, X1
	069 And W8, W0, 0xFFFF
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W8, [X19+24]
	072 Add W20, W20, 1
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W8, [X19+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, [X23]
	077 Compare X0, 0
	078 JumpIfEqual {136}
	079 Move W9, [X0+16]
	080 Subtract W10, W20, W9
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, [X23]
	085 Compare X0, 0
	086 JumpIfEqual {136}
	087 Move W8, [X0+16]
	088 Subtract W8, W20, W8
	089 Add W31, W8, 3
	090 Move W1, W21
	091 Move X2, X31
	092 Call String.get_Chars, X0, X1
	093 And W8, W0, 0xFFFF
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move W8, [X19+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X0, [X23]
	098 Compare X0, 0
	099 JumpIfEqual {136}
	100 Move W1, W20
	101 Move X2, X31
	102 Call String.get_Chars, X0, X1
	103 And W8, W0, 0xFFFF
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move W8, [X19+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X0, [X23]
	108 Compare X0, 0
	109 JumpIfEqual {136}
	110 Add W1, W20, 1
	111 Move X2, X31
	112 Call String.get_Chars, X0, X1
	113 Move W8, 0x6708
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move W8, [X19+24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, [X23]
	118 Compare X0, 0
	119 JumpIfEqual {136}
	120 Add W1, W20, 2
	121 Move X2, X31
	122 Call String.get_Chars, X0, X1
	123 And W8, W0, 0xFFFF
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move W0, 1
	126 Move W1, W21
	127 Move X2, X31
	128 Call String.get_Chars, X0, X1
	129 And W8, W0, 0xFFFF
	130 Move W9, 0x6708
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move W0, W31
	133 Move W9, 0xC6D4
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move W8, [X19+24]
	136 Call 0x1C17F20
	137 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x03329C54 LDR X8, [X25]
	0x03329C58 MOV W1, W0
	0x03329C5C MOV X0, X25
	0x03329C60 LDP X9, X2, [X8 + 0x1A8]
	0x03329C64 BLR X9
	0x03329C68 AND W8, W0, 0xFFFF
	0x03329C6C CMP W8, W20, UXTH
	0x03329C70 B.NE 0x3329BE8
	0x03329C74 CBZ X24, 0x3329C8C
	0x03329C78 LDR X8, [X21]
	0x03329C7C MOV X0, X24
	0x03329C80 LDR X1, [X8 + 0x40]
	0x03329C84 BL 0x1C16E00
	0x03329C88 CBZ X0, 0x3329CC8
	0x03329C8C LDR W8, [X21 + 0x18]
	0x03329C90 CMP W19, W8
	0x03329C94 B.CS 0x3329CC4
	0x03329C98 ADD W23, W27, 0x1
	0x03329C9C STR X24, [X29]
	0x03329CA0 CBNZ X28, 0x3329BE4
	0x03329CA4 LDP X20, X19, [X31 + 0x50]
	0x03329CA8 LDP X22, X21, [X31 + 0x40]
	0x03329CAC LDP X24, X23, [X31 + 0x30]
	0x03329CB0 LDP X26, X25, [X31 + 0x20]
	0x03329CB4 LDP X28, X27, [X31 + 0x10]
	0x03329CB8 LDP X29, X30, [X31], #0x60
	0x03329CBC RET
	0x03329CC0 BL 0x1C16F20
	0x03329CC4 BL 0x1C16F28
	0x03329CC8 BL 0x1C16F44
	0x03329CCC MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10B4000
	007 Move X22, 0xDCC000
	008 Move X20, 0xDCC000
	009 Move W8, [X21+3249]
	010 Move X22, [X22+464]
	011 Move X20, [X20+448]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xDCC000
	018 Move X0, [X0+448]
	019 Call 0x1C17CF4
	020 Move X0, 0xDCC000
	021 Move X0, [X0+464]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3249], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move [X19+16], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call Object..ctor, X0
	039 Return 

