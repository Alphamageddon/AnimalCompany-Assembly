Type: System.Globalization.CultureNotFoundException

Method: System.Void .ctor()

Disassembly:
	0x03324D74 LDRB W11, [X8 + 0x130]
	0x03324D78 LDRB W10, [X9 + 0x130]
	0x03324D7C CMP W11, W10
	0x03324D80 B.CC 0x3324DA0
	0x03324D84 LDR X11, [X8 + 0xC8]
	0x03324D88 ADD X10, X11, X10, 0x3, LSL
	0x03324D8C LDUR X10, [X10 - 0x8]
	0x03324D90 CMP X10, X9
	0x03324D94 B.NE 0x3324DA0
	0x03324D98 LDRB W9, [X19 + 0xC8]
	0x03324D9C CBZ W9, 0x3324E94
	0x03324DA0 LDR X9, [X21]
	0x03324DA4 CMP X8, X9
	0x03324DA8 CSEL X0, X19, X31, EQ
	0x03324DAC CBZ X0, 0x3324DCC
	0x03324DB0 LDP X20, X19, [X31 + 0x10]
	0x03324DB4 LDP X30, X21, [X31], #0x20
	0x03324DB8 RET
	0x03324DBC LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10B9000
	006 Move X21, 0xE05000
	007 Move W8, [X20+3195]
	008 Move X21, [X21+736]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE05000
	015 Move X0, [X0+736]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3195], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Call ArgumentException..ctor, X0, X1
	027 Return 

Method: System.Void .ctor(System.String paramName, System.String message)

Disassembly:
	0x03324E00 LDR X8, [X19]
	0x03324E04 LDR X10, [X10 + 0x5F0]
	0x03324E08 MOV X20, X0
	0x03324E0C LDRH W9, [X8 + 0x12E]
	0x03324E10 LDR X1, [X10]

ISIL:
	001 Move X8, X1
	002 Move X1, X2
	003 Move X2, X8
	004 Move X3, X31
	005 Call ArgumentException..ctor, X0, X1, X2
	006 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03324E14 CBZ X9, 0x3324E38
	0x03324E18 LDR X10, [X8 + 0xB0]
	0x03324E1C ADD X10, X10, 0x8
	0x03324E20 LDUR X11, [X10 - 0x8]
	0x03324E24 CMP X11, X1
	0x03324E28 B.EQ 0x3324E48
	0x03324E2C SUBS X9, X9, 0x1
	0x03324E30 ADD X10, X10, 0x10
	0x03324E34 B.NE 0x3324E20
	0x03324E38 MOV X0, X19
	0x03324E3C MOV W2, W31
	0x03324E40 BL 0x1C5C788
	0x03324E44 B 0x3324E54
	0x03324E48 LDRSW X9, [X10]
	0x03324E4C ADD X8, X8, X9, 0x4, LSL
	0x03324E50 ADD X0, X8, 0x138
	0x03324E54 LDP X8, X2, [X0]
	0x03324E58 MOV X0, X19
	0x03324E5C MOV X1, X20
	0x03324E60 BLR X8
	0x03324E64 LDR X8, [X21]
	0x03324E68 CBZ X0, 0x3324E78
	0x03324E6C LDR X9, [X0]
	0x03324E70 CMP X9, X8
	0x03324E74 B.EQ 0x3324DB0
	0x03324E78 LDR W9, [X8 + 0xE0]
	0x03324E7C CBNZ W9, 0x3324E88
	0x03324E80 MOV X0, X8
	0x03324E84 BL 0x1C16DFC
	0x03324E88 LDP X20, X19, [X31 + 0x10]
	0x03324E8C LDP X30, X21, [X31], #0x20
	0x03324E90 B 0x3324BF0
	0x03324E94 LDR X2, [X8 + 0x238]
	0x03324E98 LDR X1, [X8 + 0x240]
	0x03324E9C MOV X0, X19
	0x03324EA0 LDP X20, X19, [X31 + 0x10]
	0x03324EA4 LDP X30, X21, [X31], #0x20
	0x03324EA8 BR X2
	0x03324EAC STP X30, X23, [X31 - 0x30]!
	0x03324EB0 STP X22, X21, [X31 + 0x10]
	0x03324EB4 STP X20, X19, [X31 + 0x20]
	0x03324EB8 ADRP X23, 0x10B8000
	0x03324EBC ADRP X21, 0xE04000
	0x03324EC0 ADRP X22, 0xDCF000
	0x03324EC4 LDRB W8, [X23 + 0xC83]
	0x03324EC8 LDR X21, [X21 + 0x330]
	0x03324ECC LDR X22, [X22 + 0x6C0]
	0x03324ED0 MOV X20, X1
	0x03324ED4 MOV X19, X0
	0x03324ED8 TBNZ X8, 0x0, 0x3324EFC
	0x03324EDC ADRP X0, 0xE04000
	0x03324EE0 LDR X0, [X0 + 0x330]
	0x03324EE4 BL 0x1C16CF4
	0x03324EE8 ADRP X0, 0xDCF000
	0x03324EEC LDR X0, [X0 + 0x6C0]
	0x03324EF0 BL 0x1C16CF4
	0x03324EF4 MOVZ W8, 0x1
	0x03324EF8 STRB W8, [X23 + 0xC83]
	0x03324EFC LDR X0, [X22]
	0x03324F00 LDR X21, [X21]
	0x03324F04 LDR W8, [X0 + 0xE0]
	0x03324F08 CBNZ W8, 0x3324F10
	0x03324F0C BL 0x1C16DFC
	0x03324F10 MOV X0, X21
	0x03324F14 MOV X1, X31
	0x03324F18 BL 0x338C698
	0x03324F1C MOV X1, X0
	0x03324F20 MOV X0, X20
	0x03324F24 MOV X2, X31
	0x03324F28 BL 0x3395194
	0x03324F2C ANDS W31, W0, 0x1
	0x03324F30 CSEL X0, X19, X31, NE
	0x03324F34 LDP X20, X19, [X31 + 0x20]
	0x03324F38 LDP X22, X21, [X31 + 0x10]
	0x03324F3C LDP X30, X23, [X31], #0x30
	0x03324F40 RET
	0x03324F44 STR X30, [X31 - 0x20]!
	0x03324F48 STP X20, X19, [X31 + 0x10]
	0x03324F4C ADRP X19, 0x10B8000
	0x03324F50 LDRB W8, [X19 + 0xC84]
	0x03324F54 MOV X20, X0
	0x03324F58 TBNZ X8, 0x0, 0x3324F7C
	0x03324F5C ADRP X0, 0xE04000
	0x03324F60 LDR X0, [X0 + 0x338]
	0x03324F64 BL 0x1C16CF4
	0x03324F68 ADRP X0, 0xE04000
	0x03324F6C LDR X0, [X0 + 0x328]
	0x03324F70 BL 0x1C16CF4
	0x03324F74 MOVZ W8, 0x1
	0x03324F78 STRB W8, [X19 + 0xC84]
	0x03324F7C MOV X0, X20
	0x03324F80 MOV X1, X31
	0x03324F84 BL 0x33C5A24
	0x03324F88 MOV X19, X0
	0x03324F8C CBZ X0, 0x3324FA8
	0x03324F90 ADRP X8, 0xE04000
	0x03324F94 LDR X8, [X8 + 0x328]
	0x03324F98 LDR X1, [X8]
	0x03324F9C LDR X8, [X19]
	0x03324FA0 CMP X8, X1
	0x03324FA4 B.NE 0x332503C
	0x03324FA8 LDR X0, [X20 + 0x78]
	0x03324FAC CBZ X0, 0x3325038
	0x03324FB0 LDR X8, [X0]
	0x03324FB4 LDP X9, X1, [X8 + 0x1C8]
	0x03324FB8 BLR X9
	0x03324FBC CBZ X19, 0x3325038
	0x03324FC0 CBZ X0, 0x3325020
	0x03324FC4 ADRP X8, 0xE04000
	0x03324FC8 LDR X8, [X8 + 0x338]
	0x03324FCC LDR X9, [X0]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Move X21, 0x10B9000
	012 Move X24, 0xE05000
	013 Move X25, 0xDD0000
	014 Move W8, [X21+3193]
	015 Move X24, [X24+744]
	016 Move X25, [X25+1728]
	017 Move X22, X3
	018 Move X23, X2
	019 Move X20, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {48}
	025 Move X0, 0xE05000
	026 Move X0, [X0+744]
	027 Call 0x1C17CF4
	028 Move X0, 0xDD1000
	029 Move X0, [X0+1144]
	030 Call 0x1C17CF4
	031 Move X0, 0xDF8000
	032 Move X0, [X0+2912]
	033 Call 0x1C17CF4
	034 Move X0, 0xDD2000
	035 Move X0, [X0+632]
	036 Call 0x1C17CF4
	037 Move X0, 0xDD0000
	038 Move X0, [X0+1728]
	039 Call 0x1C17CF4
	040 Move X0, 0xE05000
	041 Move X0, [X0+752]
	042 Call 0x1C17CF4
	043 Move X0, 0xE05000
	044 Move X0, [X0+760]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+3193], W8
	048 Subtract X21, X31, 16
	049 Add X31, X21, 0
	050 Move X0, X19
	051 Move X1, X20
	052 Move X2, X23
	053 Move X3, X22
	054 Move X4, X31
	055 Call ArgumentException..ctor, X0, X1, X2
	056 Move X0, [X25]
	057 Move X22, [X24]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X22
	063 Move X1, X31
	064 Call Type.GetTypeFromHandle, X0
	065 Compare X20, 0
	066 JumpIfEqual {120}
	067 Move X8, 0xE05000
	068 Move X8, [X8+752]
	069 Move X22, 0xDD1000
	070 Move X2, X0
	071 Move X0, X20
	072 Move X1, [X8]
	073 Move X22, [X22+1144]
	074 Move X3, X31
	075 Call SerializationInfo.GetValue, X0, X1, X2
	076 Move X1, [X22]
	077 Compare X0, 0
	078 JumpIfEqual {82}
	079 Move X9, [X0]
	080 Move X8, [X1+64]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X22, 0xDF8000
	083 Move X23, 0xE05000
	084 Move X22, [X22+2912]
	085 Move X23, [X23+760]
	086 Move X2, X21
	087 Call 0x1C17E0C
	088 Move X8, [X21]
	089 Move X1, X31
	090 Move [X19+160], X8
	091 Move X0, [X22]
	092 Call Type.GetTypeFromHandle, X0
	093 Move X1, [X23]
	094 Move X2, X0
	095 Move X0, X20
	096 Move X3, X31
	097 Call SerializationInfo.GetValue, X0, X1, X2
	098 Compare X0, 0
	099 JumpIfEqual {108}
	100 Move X8, 0xDD2000
	101 Move X8, [X8+632]
	102 Move X1, [X8]
	103 Move X8, [X0]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move [X19+152], X0
	106 Move X8, [X0]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X19+152], X31
	109 Add X31, X29, 0
	110 Move X20, [X31+64]
	111 Move X19, [X31+72]
	112 Move X22, [X31+48]
	113 Move X21, [X31+56]
	114 Move X24, [X31+32]
	115 Move X23, [X31+40]
	116 Move X25, [X31+16]
	117 Move X29, [X31+80]
	118 Move X30, [X31+88]
	119 Return 
	120 Call 0x1C17F20
	121 Move X1, X8
	122 Call 0x1C181E0

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03324FD0 LDR X1, [X8]
	0x03324FD4 LDRB W10, [X9 + 0x130]
	0x03324FD8 LDRB W8, [X1 + 0x130]
	0x03324FDC CMP W10, W8
	0x03324FE0 B.CC 0x332501C
	0x03324FE4 LDR X10, [X9 + 0xC8]
	0x03324FE8 SUB X9, X8, 0x1
	0x03324FEC LDR X10, [X10, X9, LSL #3]
	0x03324FF0 CMP X10, X1
	0x03324FF4 B.NE 0x332501C
	0x03324FF8 STR X0, [X19 + 0x78]
	0x03324FFC LDR X10, [X0]
	0x03325000 LDRB W11, [X10 + 0x130]
	0x03325004 CMP W11, W8
	0x03325008 B.CC 0x332501C
	0x0332500C LDR X8, [X10 + 0xC8]
	0x03325010 LDR X8, [X8, X9, LSL #3]
	0x03325014 CMP X8, X1
	0x03325018 B.EQ 0x3325024
	0x0332501C BL 0x1C171E0
	0x03325020 STR X31, [X19 + 0x78]
	0x03325024 STRB W31, [X19 + 0x140]
	0x03325028 MOV X0, X19
	0x0332502C LDP X20, X19, [X31 + 0x10]
	0x03325030 LDR X30, [X31], #0x20
	0x03325034 RET
	0x03325038 BL 0x1C16F20
	0x0332503C MOV X0, X19
	0x03325040 BL 0x1C171E0
	0x03325044 STR X30, [X31 - 0x10]!
	0x03325048 LDR X8, [X0 + 0x38]
	0x0332504C CBNZ X8, 0x3325060
	0x03325050 LDR X8, [X0 + 0x10]
	0x03325054 CBZ X8, 0x332506C
	0x03325058 LDR X8, [X8 + 0x10]
	0x0332505C STR X8, [X0 + 0x38]
	0x03325060 MOV X0, X8
	0x03325064 LDR X30, [X31], #0x10
	0x03325068 RET
	0x0332506C BL 0x1C16F20
	0x03325070 LDR X0, [X0 + 0x78]
	0x03325074 RET
	0x03325078 STP X30, X21, [X31 - 0x20]!
	0x0332507C STP X20, X19, [X31 + 0x10]
	0x03325080 ADRP X21, 0x10B7000
	0x03325084 ADRP X20, 0xE02000
	0x03325088 LDRB W8, [X21 + 0xC99]
	0x0332508C LDR X20, [X20 + 0x930]
	0x03325090 MOV X19, X0
	0x03325094 TBNZ X8, 0x0, 0x33250AC
	0x03325098 ADRP X0, 0xE02000
	0x0332509C LDR X0, [X0 + 0x930]
	0x033250A0 BL 0x1C16CF4
	0x033250A4 MOVZ W8, 0x1
	0x033250A8 STRB W8, [X21 + 0xC99]
	0x033250AC LDR X0, [X20]
	0x033250B0 LDR W8, [X0 + 0xE0]
	0x033250B4 CBNZ W8, 0x33250BC
	0x033250B8 BL 0x1C16DFC
	0x033250BC ADRP X21, 0x10B7000
	0x033250C0 LDRB W8, [X21 + 0xAFE]
	0x033250C4 CBNZ W8, 0x33250DC
	0x033250C8 ADRP X0, 0xE02000
	0x033250CC LDR X0, [X0 + 0x930]
	0x033250D0 BL 0x1C16CF4
	0x033250D4 MOVZ W8, 0x1
	0x033250D8 STRB W8, [X21 + 0xAFE]
	0x033250DC LDR X0, [X20]
	0x033250E0 LDR W8, [X0 + 0xE0]
	0x033250E4 CBNZ W8, 0x33250F0
	0x033250E8 BL 0x1C16DFC
	0x033250EC LDR X0, [X20]
	0x033250F0 LDR X8, [X0 + 0xB8]
	0x033250F4 LDRB W8, [X8]
	0x033250F8 CBZ W8, 0x3325104
	0x033250FC MOVZ W0, 0x1
	0x03325100 B 0x3325110
	0x03325104 LDRB W8, [X19 + 0x140]
	0x03325108 CMP W8, 0x0
	0x0332510C CSET W0, NE
	0x03325110 LDP X20, X19, [X31 + 0x10]
	0x03325114 LDP X30, X21, [X31], #0x20
	0x03325118 RET
	0x0332511C STP X30, X19, [X31 - 0x10]!
	0x03325120 MOV X19, X0
	0x03325124 LDR X0, [X0 + 0x138]
	0x03325128 CBNZ X0, 0x3325140
	0x0332512C LDR X0, [X19 + 0x10]
	0x03325130 CBZ X0, 0x3325148

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x10B9000
	011 Move X25, 0xDD1000
	012 Move X23, 0xE05000
	013 Move X24, 0xDD0000
	014 Move W8, [X26+3194]
	015 Move X25, [X25+1144]
	016 Move X23, [X23+744]
	017 Move X24, [X24+1728]
	018 Move X21, X3
	019 Move X22, X2
	020 Move X19, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {46}
	026 Move X0, 0xE04000
	027 Move X0, [X0+744]
	028 Call 0x1C17CF4
	029 Move X0, 0xDD0000
	030 Move X0, [X0+1144]
	031 Call 0x1C17CF4
	032 Move X0, 0xDF7000
	033 Move X0, [X0+2912]
	034 Call 0x1C17CF4
	035 Move X0, 0xDCF000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move X0, 0xE04000
	039 Move X0, [X0+752]
	040 Call 0x1C17CF4
	041 Move X0, 0xE04000
	042 Move X0, [X0+760]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X26+3194], W8
	046 Move X0, X20
	047 Move X1, X19
	048 Move X2, X22
	049 Move X3, X21
	050 Move X4, X31
	051 Call ArgumentException.GetObjectData, X0, X1, X2
	052 Move X8, [X20+160]
	053 Move X0, [X25]
	054 Add X1, X31, 8
	055 Move [X31+8], X8
	056 Call 0x1C17E04
	057 Move X8, [X24]
	058 Move X22, [X23]
	059 Move X21, X0
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Move X0, X22
	066 Move X1, X31
	067 Call Type.GetTypeFromHandle, X0
	068 Compare X19, 0
	069 JumpIfEqual {102}
	070 Move X8, 0xE04000
	071 Move X8, [X8+752]
	072 Move X22, 0xDF7000
	073 Move X23, 0xE04000
	074 Move X3, X0
	075 Move X1, [X8]
	076 Move X22, [X22+2912]
	077 Move X23, [X23+760]
	078 Move X0, X19
	079 Move X2, X21
	080 Move X4, X31
	081 Call SerializationInfo.AddValue, X0, X1, X2, X3
	082 Move X0, [X22]
	083 Move X20, [X20+152]
	084 Move X1, X31
	085 Call Type.GetTypeFromHandle, X0
	086 Move X1, [X23]
	087 Move X3, X0
	088 Move X0, X19
	089 Move X2, X20
	090 Move X4, X31
	091 Call SerializationInfo.AddValue, X0, X1, X2, X3
	092 Move X20, [X31+64]
	093 Move X19, [X31+72]
	094 Move X22, [X31+48]
	095 Move X21, [X31+56]
	096 Move X24, [X31+32]
	097 Move X23, [X31+40]
	098 Move X26, [X31+16]
	099 Move X25, [X31+24]
	100 Move X30, [X31+80]
	101 Return 
	102 Call 0x1C17F20

Method: System.Nullable`1<System.Int32> get_InvalidCultureId()

Disassembly:
	0x03325134 MOV X1, X31
	0x03325138 BL 0x3340568

ISIL:
	001 Move X0, [X0+160]
	002 Return X0

Method: System.String get_InvalidCultureName()

Disassembly:
	0x0332513C STR X0, [X19 + 0x138]
	0x03325140 LDP X30, X19, [X31], #0x10

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.String get_DefaultMessage()

Disassembly:
	0x03324DC0 LDR W8, [X0 + 0xE0]
	0x03324DC4 CBNZ W8, 0x3324E88
	0x03324DC8 B 0x3324E84
	0x03324DCC ADRP X8, 0xDCF000
	0x03324DD0 LDR X8, [X8 + 0x6C0]
	0x03324DD4 LDR X0, [X8]
	0x03324DD8 ADRP X8, 0xE04000
	0x03324DDC LDR X8, [X8 + 0x330]
	0x03324DE0 LDR W9, [X0 + 0xE0]
	0x03324DE4 LDR X20, [X8]
	0x03324DE8 CBNZ W9, 0x3324DF0
	0x03324DEC BL 0x1C16DFC
	0x03324DF0 MOV X0, X20
	0x03324DF4 MOV X1, X31
	0x03324DF8 BL 0x338C698
	0x03324DFC ADRP X10, 0xDFE000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x10B9000
	005 Move X20, 0xE05000
	006 Move W8, [X19+3195]
	007 Move X20, [X20+736]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE05000
	013 Move X0, [X0+736]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3195], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.String get_FormatedInvalidCultureId()

Disassembly:
	0x03325144 RET
	0x03325148 BL 0x1C16F20
	0x0332514C MOVN W8, 0x0
	0x03325150 STR X31, [X0 + 0x158]
	0x03325154 STR W8, [X0 + 0x144]
	0x03325158 RET
	0x0332515C STR X30, [X31 - 0x20]!
	0x03325160 STP X20, X19, [X31 + 0x10]
	0x03325164 MOV X19, X0
	0x03325168 LDR X0, [X0 + 0x120]
	0x0332516C CBNZ X0, 0x33251A0
	0x03325170 LDR X0, [X19 + 0x78]
	0x03325174 CBZ X0, 0x33251AC
	0x03325178 LDR X8, [X0]
	0x0332517C LDR X20, [X19 + 0x10]
	0x03325180 LDP X9, X1, [X8 + 0x1A8]
	0x03325184 BLR X9
	0x03325188 CBZ X20, 0x33251AC
	0x0332518C MOV W1, W0
	0x03325190 MOV X0, X20
	0x03325194 MOV X2, X31
	0x03325198 BL 0x3340698
	0x0332519C STR X0, [X19 + 0x120]
	0x033251A0 LDP X20, X19, [X31 + 0x10]
	0x033251A4 LDR X30, [X31], #0x20
	0x033251A8 RET
	0x033251AC BL 0x1C16F20
	0x033251B0 STR X30, [X31 - 0x20]!
	0x033251B4 STP X20, X19, [X31 + 0x10]
	0x033251B8 MOV W20, W1
	0x033251BC MOV X19, X0
	0x033251C0 CBNZ W1, 0x33251DC
	0x033251C4 LDR X0, [X19 + 0x78]
	0x033251C8 CBZ X0, 0x3325224
	0x033251CC LDR X8, [X0]
	0x033251D0 LDP X9, X1, [X8 + 0x1D8]
	0x033251D4 BLR X9
	0x033251D8 MOV W20, W0
	0x033251DC MOV X0, X19
	0x033251E0 BL 0x332515C
	0x033251E4 CBZ X0, 0x3325224
	0x033251E8 SUB W8, W20, 0x1
	0x033251EC TBNZ X8, 0x1F, 0x3325228
	0x033251F0 LDR W9, [X0 + 0x18]
	0x033251F4 CMP W8, W9
	0x033251F8 B.GE 0x3325228
	0x033251FC LDR X9, [X19 + 0x120]
	0x03325200 CBZ X9, 0x3325224
	0x03325204 LDR W10, [X9 + 0x18]
	0x03325208 CMP W8, W10
	0x0332520C B.CS 0x3325284
	0x03325210 ADD X8, X9, W8, 0x3, UXTW
	0x03325214 LDR X0, [X8 + 0x20]
	0x03325218 LDP X20, X19, [X31 + 0x10]
	0x0332521C LDR X30, [X31], #0x20
	0x03325220 RET
	0x03325224 BL 0x1C16F20
	0x03325228 ADRP X0, 0xDD6000
	0x0332522C LDR X0, [X0 + 0x760]
	0x03325230 BL 0x1C16D08
	0x03325234 BL 0x1C16F10
	0x03325238 MOV X19, X0
	0x0332523C ADRP X0, 0xE03000
	0x03325240 LDR X0, [X0 + 0x340]
	0x03325244 BL 0x1C16D08
	0x03325248 MOV X20, X0
	0x0332524C ADRP X0, 0xE03000
	0x03325250 LDR X0, [X0 + 0x348]
	0x03325254 BL 0x1C16D08
	0x03325258 MOV X2, X0
	0x0332525C MOV X0, X19
	0x03325260 MOV X1, X20
	0x03325264 MOV X3, X31
	0x03325268 BL 0x3311888
	0x0332526C ADRP X0, 0xE03000
	0x03325270 LDR X0, [X0 + 0x350]
	0x03325274 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x10B8000
	009 Move W8, [X20+3196]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xDD1000
	016 Move X0, [X0+3144]
	017 Call 0x1C17CF4
	018 Move X0, 0xDCF000
	019 Move X0, [X0+1880]
	020 Call 0x1C17CF4
	021 Move X0, 0xDD2000
	022 Move X0, [X0+3832]
	023 Call 0x1C17CF4
	024 Move X0, 0xDD2000
	025 Move X0, [X0+3840]
	026 Call 0x1C17CF4
	027 Move X0, 0xE04000
	028 Move X0, [X0+768]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3196], W8
	032 Move [X31+8], X31
	033 Move X8, [X19]
	034 Move X0, X19
	035 Move X9, [X8+504]
	036 Move X1, [X8+512]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 And W31, W0, 255
	039 Move [X31+8], X0
	040 Move X8, 0xDD1000
	041 Move X8, [X8+3144]
	042 Move X23, 0xDD2000
	043 Move X22, 0xDCF000
	044 Move X21, 0xE04000
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Move X23, [X23+3840]
	048 Move X22, [X22+1880]
	049 Move X21, [X21+768]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X31
	054 Call CultureInfo.get_InvariantCulture
	055 Move X8, [X19]
	056 Move X20, X0
	057 Move X0, X19
	058 Move X9, [X8+504]
	059 Move X1, [X8+512]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X1, [X23]
	062 Move [X31+8], X0
	063 Add X0, X31, 8
	064 Call Nullable`1<Int32>.get_Value, X0
	065 Move X8, [X22]
	066 Move [X31+4], W0
	067 Add X1, X31, 4
	068 Move X0, X8
	069 Call 0x1C17E04
	070 Move X1, [X21]
	071 Move X2, X0
	072 Move X0, X20
	073 Move X3, X31
	074 Call String.Format, X0, X1, X2
	075 Move X8, [X19]
	076 Move X0, X19
	077 Move X9, [X8+520]
	078 Move X1, [X8+528]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X30, [X31+16]
	085 Move X23, [X31+24]
	086 Add X31, X31, 64
	087 Return X0

Method: System.String get_Message()

Disassembly:
	0x03325278 MOV X1, X0
	0x0332527C MOV X0, X19
	0x03325280 BL 0x1C16DEC
	0x03325284 BL 0x1C16F28
	0x03325288 STR X30, [X31 - 0x20]!
	0x0332528C STP X20, X19, [X31 + 0x10]
	0x03325290 MOV X19, X0
	0x03325294 LDR X0, [X0 + 0x128]
	0x03325298 CBNZ X0, 0x33252CC
	0x0332529C LDR X0, [X19 + 0x78]
	0x033252A0 CBZ X0, 0x33252D8
	0x033252A4 LDR X8, [X0]
	0x033252A8 LDR X20, [X19 + 0x10]
	0x033252AC LDP X9, X1, [X8 + 0x1A8]
	0x033252B0 BLR X9
	0x033252B4 CBZ X20, 0x33252D8
	0x033252B8 MOV W1, W0
	0x033252BC MOV X0, X20
	0x033252C0 MOV X2, X31
	0x033252C4 BL 0x33406B4
	0x033252C8 STR X0, [X19 + 0x128]
	0x033252CC LDP X20, X19, [X31 + 0x10]
	0x033252D0 LDR X30, [X31], #0x20
	0x033252D4 RET
	0x033252D8 BL 0x1C16F20
	0x033252DC STR X30, [X31 - 0x20]!
	0x033252E0 STP X20, X19, [X31 + 0x10]
	0x033252E4 MOV W20, W1
	0x033252E8 MOV X19, X0
	0x033252EC BL 0x3325288
	0x033252F0 CBZ X0, 0x3325360
	0x033252F4 LDR X8, [X0 + 0x18]
	0x033252F8 CBZ X8, 0x332534C
	0x033252FC CBNZ W20, 0x3325318
	0x03325300 LDR X0, [X19 + 0x78]
	0x03325304 CBZ X0, 0x3325360
	0x03325308 LDR X8, [X0]
	0x0332530C LDP X9, X1, [X8 + 0x1D8]
	0x03325310 BLR X9
	0x03325314 MOV W20, W0
	0x03325318 LDR X8, [X19 + 0x128]
	0x0332531C CBZ X8, 0x3325360
	0x03325320 SUB W9, W20, 0x1
	0x03325324 TBNZ X9, 0x1F, 0x3325364
	0x03325328 LDR W10, [X8 + 0x18]
	0x0332532C CMP W9, W10
	0x03325330 B.GE 0x3325364

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x10B8000
	006 Move W8, [X19+3197]
	007 Move X20, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xDD2000
	013 Move X0, [X0+3832]
	014 Call 0x1C17CF4
	015 Move X0, 0xE04000
	016 Move X0, [X0+776]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+3197], W8
	020 Move X0, X20
	021 Move X1, X31
	022 Call ArgumentException.get_Message, X0
	023 Move W8, [X20+160]
	024 Move X19, X0
	025 Compare W8, 0
	026 JumpIfNotEqual {30}
	027 Move X8, [X20+152]
	028 Compare X8, 0
	029 JumpIfEqual {55}
	030 Move X21, 0xE04000
	031 Move X21, [X21+776]
	032 Move X0, X20
	033 Call CultureNotFoundException.get_FormatedInvalidCultureId, X0
	034 Move X8, [X21]
	035 Move X1, X0
	036 Move X2, X31
	037 Move X0, X8
	038 Call SR.Format, X0, X1
	039 Move X20, X0
	040 Compare X19, 0
	041 JumpIfEqual {54}
	042 Move X0, X31
	043 Call Environment.get_NewLine
	044 Move X1, X0
	045 Move X0, X19
	046 Move X2, X20
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X3, X31
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Call String.Concat, X0, X1, X2
	053 Return X0
	054 Move X19, X20
	055 Move X0, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return X0

