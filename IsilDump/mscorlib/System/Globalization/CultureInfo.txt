Type: System.Globalization.CultureInfo

Method: System.Globalization.CultureData get__cultureData()

Disassembly:
	0x0334833C STP X20, X19, [X31 + 0x10]
	0x03348340 LDRB W8, [X0 + 0xB0]

ISIL:
	001 Move X0, [X0+192]
	002 Return X0

Method: System.Boolean get__isInherited()

Disassembly:
	0x03348344 MOV X19, X0
	0x03348348 MOV X20, X1

ISIL:
	001 Move W0, [X0+200]
	002 Return X0

Method: System.Globalization.CultureInfo get_InvariantCulture()

Disassembly:
	0x03339524 MOV X19, X0
	0x03339528 ADRP X0, 0xDE9000
	0x0333952C LDR X0, [X0 + 0x370]
	0x03339530 BL 0x1C16D08
	0x03339534 MOV X1, X31
	0x03339538 BL 0x33BDD84
	0x0333953C MOVZ W8, 0x1
	0x03339540 STR W8, [X31 + 0xC]
	0x03339544 ADRP X21, 0xDBA000
	0x03339548 LDR X21, [X21 + 0x758]
	0x0333954C MOV X20, X0
	0x03339550 MOV X0, X21
	0x03339554 BL 0x1C16D08
	0x03339558 ADD X1, X31, 0xC
	0x0333955C BL 0x1C16E04
	0x03339560 MOV X22, X0
	0x03339564 MOVZ W8, 0x25C2
	0x03339568 MOV X0, X21
	0x0333956C STR W8, [X31 + 0x8]
	0x03339570 BL 0x1C16D08
	0x03339574 ADD X1, X31, 0x8
	0x03339578 BL 0x1C16E04
	0x0333957C MOV X3, X0
	0x03339580 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10A4000
	005 Move X19, 0xDBD000
	006 Move W8, [X20+3446]
	007 Move X19, [X19+3144]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDBD000
	013 Move X0, [X0+3144]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3446], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X19, [X8]
	025 Call 0x1C17D44
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Globalization.CultureInfo get_CurrentCulture()

Disassembly:
	0x033397A0 LDR X30, [X31], #0x20
	0x033397A4 RET
	0x033397A8 SUB X31, X31, 0x50
	0x033397AC STR X30, [X31 + 0x20]
	0x033397B0 STP X22, X21, [X31 + 0x30]
	0x033397B4 STP X20, X19, [X31 + 0x40]
	0x033397B8 ADRP X19, 0x10A3000
	0x033397BC ADRP X21, 0xDEF000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X31
	003 Call Thread.get_CurrentThread
	004 Compare X0, 0
	005 JumpIfEqual {10}
	006 Move X1, X31
	007 Move X30, [X31+16]
	008 Call Thread.get_CurrentCulture, X0
	009 Return X0
	010 Call 0x1C17F20

Method: System.Globalization.CultureInfo get_CurrentUICulture()

Disassembly:
	0x0334834C CBNZ W8, 0x3348364
	0x03348350 LDR W1, [X19 + 0x14]
	0x03348354 MOV X0, X19
	0x03348358 BL 0x1C42B00
	0x0334835C MOVZ W8, 0x1
	0x03348360 STRB W8, [X19 + 0xB0]
	0x03348364 LDRB W8, [X19 + 0x10]
	0x03348368 CBNZ W8, 0x3348384

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X31
	003 Call Thread.get_CurrentThread
	004 Compare X0, 0
	005 JumpIfEqual {10}
	006 Move X1, X31
	007 Move X30, [X31+16]
	008 Call Thread.get_CurrentUICulture, X0
	009 Return X0
	010 Call 0x1C17F20

Method: System.Globalization.CultureInfo ConstructCurrentCulture()

Disassembly:
	0x0334836C CBZ X20, 0x33483B8
	0x03348370 BL 0x1C16D44
	0x03348374 STR X20, [X19 + 0x30]
	0x03348378 LDP X20, X19, [X31 + 0x10]
	0x0334837C LDR X30, [X31], #0x20
	0x03348380 RET
	0x03348384 ADRP X0, 0xDAB000
	0x03348388 LDR X0, [X0 + 0x5B0]
	0x0334838C BL 0x1C16D08
	0x03348390 BL 0x1C16F10
	0x03348394 MOV X19, X0
	0x03348398 ADRP X0, 0xDE1000
	0x0334839C LDR X0, [X0 + 0xAC0]
	0x033483A0 BL 0x1C16D08
	0x033483A4 MOV X1, X0
	0x033483A8 MOV X0, X19
	0x033483AC MOV X2, X31
	0x033483B0 BL 0x337DF1C
	0x033483B4 B 0x33483E8
	0x033483B8 ADRP X0, 0xDB0000
	0x033483BC LDR X0, [X0 + 0x528]
	0x033483C0 BL 0x1C16D08
	0x033483C4 BL 0x1C16F10
	0x033483C8 MOV X19, X0
	0x033483CC ADRP X0, 0xDE1000
	0x033483D0 LDR X0, [X0 + 0xAC8]
	0x033483D4 BL 0x1C16D08
	0x033483D8 MOV X1, X0
	0x033483DC MOV X0, X19
	0x033483E0 MOV X2, X31
	0x033483E4 BL 0x330E100
	0x033483E8 ADRP X0, 0xDE1000
	0x033483EC LDR X0, [X0 + 0xAD0]
	0x033483F0 BL 0x1C16D08
	0x033483F4 MOV X1, X0
	0x033483F8 MOV X0, X19
	0x033483FC BL 0x1C16DEC
	0x03348400 STR X30, [X31 - 0x30]!
	0x03348404 STP X22, X21, [X31 + 0x10]
	0x03348408 STP X20, X19, [X31 + 0x20]
	0x0334840C ADRP X20, 0x1094000
	0x03348410 LDRB W8, [X20 + 0xD7F]
	0x03348414 MOV X19, X0
	0x03348418 TBNZ X8, 0x0, 0x334843C
	0x0334841C ADRP X0, 0xDE0000
	0x03348420 LDR X0, [X0 + 0x328]
	0x03348424 BL 0x1C16CF4
	0x03348428 ADRP X0, 0xDDF000
	0x0334842C LDR X0, [X0 + 0x930]
	0x03348430 BL 0x1C16CF4
	0x03348434 MOVZ W8, 0x1
	0x03348438 STRB W8, [X20 + 0xD7F]
	0x0334843C LDR X20, [X19 + 0x38]
	0x03348440 BL 0x1C16D44
	0x03348444 CBZ X20, 0x3348450
	0x03348448 LDR X20, [X19 + 0x38]
	0x0334844C B 0x33484FC
	0x03348450 LDRB W8, [X19 + 0xB0]
	0x03348454 CBNZ W8, 0x334846C
	0x03348458 LDR W1, [X19 + 0x14]
	0x0334845C MOV X0, X19
	0x03348460 BL 0x1C42B00
	0x03348464 MOVZ W8, 0x1
	0x03348468 STRB W8, [X19 + 0xB0]
	0x0334846C ADRP X20, 0xDDF000
	0x03348470 LDR X20, [X20 + 0x930]
	0x03348474 LDR X0, [X20]
	0x03348478 LDR W8, [X0 + 0xE0]
	0x0334847C CBNZ W8, 0x3348484
	0x03348480 BL 0x1C16DFC
	0x03348484 ADRP X21, 0x1094000
	0x03348488 LDRB W8, [X21 + 0xAFE]
	0x0334848C CBNZ W8, 0x33484A4
	0x03348490 ADRP X0, 0xDDF000
	0x03348494 LDR X0, [X0 + 0x930]
	0x03348498 BL 0x1C16CF4
	0x0334849C MOVZ W8, 0x1
	0x033484A0 STRB W8, [X21 + 0xAFE]
	0x033484A4 LDR X0, [X20]
	0x033484A8 LDR W8, [X0 + 0xE0]
	0x033484AC CBNZ W8, 0x33484B8
	0x033484B0 BL 0x1C16DFC
	0x033484B4 LDR X0, [X20]
	0x033484B8 LDR X8, [X0 + 0xB8]
	0x033484BC LDRB W8, [X8]
	0x033484C0 CBZ W8, 0x3348514
	0x033484C4 ADRP X8, 0xDE0000
	0x033484C8 LDR X8, [X8 + 0x328]
	0x033484CC LDR X0, [X8]
	0x033484D0 BL 0x1C16F10
	0x033484D4 MOV X1, X31
	0x033484D8 MOV X20, X0
	0x033484DC BL 0x3324590
	0x033484E0 CBZ X20, 0x3348558
	0x033484E4 LDRB W8, [X19 + 0x10]
	0x033484E8 MOV X0, X31
	0x033484EC STRB W8, [X20 + 0x140]
	0x033484F0 BL 0x33E6F84
	0x033484F4 BL 0x1C16D44
	0x033484F8 STR X20, [X19 + 0x38]
	0x033484FC BL 0x1C16D44
	0x03348500 MOV X0, X20
	0x03348504 LDP X20, X19, [X31 + 0x20]
	0x03348508 LDP X22, X21, [X31 + 0x10]
	0x0334850C LDR X30, [X31], #0x30
	0x03348510 RET
	0x03348514 LDR X8, [X19]
	0x03348518 LDR X21, [X19 + 0xC0]
	0x0334851C MOV X0, X19
	0x03348520 LDP X9, X1, [X8 + 0x1B8]
	0x03348524 BLR X9
	0x03348528 ADRP X8, 0xDE0000
	0x0334852C LDR X8, [X8 + 0x328]
	0x03348530 MOV X22, X0
	0x03348534 LDR X8, [X8]
	0x03348538 MOV X0, X8
	0x0334853C BL 0x1C16F10
	0x03348540 MOV X1, X21
	0x03348544 MOV X2, X22
	0x03348548 MOV X3, X31
	0x0334854C MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1095000
	006 Move X20, 0xDAE000
	007 Move W8, [X19+3447]
	008 Move X20, [X20+3144]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xDAE000
	014 Move X0, [X0+3144]
	015 Call 0x1C17CF4
	016 Move X0, 0xDE0000
	017 Move X0, [X0+2352]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+3447], W8
	021 Move X0, [X20]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X20]
	027 Move X8, [X0+184]
	028 Move X19, [X8+16]
	029 Compare X19, 0
	030 JumpIfEqual {38}
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {126}
	034 Call 0x1C17DFC
	035 Move X8, [X20]
	036 Move X8, [X8+184]
	037 Move X19, [X8+16]
	038 Move X19, 0xDE0000
	039 Move X19, [X19+2352]
	040 Move X0, [X19]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X21, 0x1095000
	046 Move W8, [X21+2814]
	047 Compare W8, 0
	048 JumpIfNotEqual {54}
	049 Move X0, 0xDE0000
	050 Move X0, [X0+2352]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X21+2814], W8
	054 Move X0, [X19]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X19]
	060 Move X8, [X20]
	061 Move X9, [X0+184]
	062 Move W10, [X8+224]
	063 Move W19, [X9]
	064 Compare W10, 0
	065 JumpIfEqual {74}
	066 Compare W19, 0
	067 JumpIfEqual {78}
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Call CultureInfo.get_InvariantCulture
	073 Return X0
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Compare W19, 0
	077 JumpIfNotEqual {68}
	078 Call 0x1C43DD4
	079 Compare X0, 0
	080 JumpIfEqual {111}
	081 Move X19, X0
	082 Move X0, [X20]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X19
	088 Call CultureInfo.CreateSpecificCulture, X0
	089 Move X19, X0
	090 Compare X0, 0
	091 JumpIfEqual {111}
	092 Move W8, 1
	093 Move [X19+16], W8
	094 Move [X19+40], W8
	095 Move X19, X0
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X0, X19
	098 Call 0x3EB2AD0
	099 Move X19, X0
	100 Move X0, 0xDB2000
	101 Move X0, [X0+3264]
	102 Call 0x1C17D08
	103 Move X8, [X19]
	104 Move X1, [X8]
	105 Call 0x1C18270
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {132}
	110 Call 0x3EB2AE0
	111 Move X0, [X20]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Call CultureInfo.get_InvariantCulture
	117 Move X19, X0
	118 Move X0, [X20]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {124}
	122 Call 0x1C17DFC
	123 Move X0, [X20]
	124 Move X8, [X0+184]
	125 Move [X8+16], X19
	126 Move X0, X19
	127 Move X20, [X31+16]
	128 Move X19, [X31+24]
	129 Move X30, [X31+32]
	130 Move X21, [X31+40]
	131 Return X0
	132 Move W0, 8
	133 Call 0x3EB2AF0
	134 Move X8, [X19]
	135 Move [X0], X8
	136 Move X1, 0xB6D000
	137 Add X1, X1, 3672
	138 Move X2, X31
	139 Call 0x3EB2B00
	140 Move X19, X0
	141 Call 0x3EB2AE0
	142 Move X0, X19
	143 Call 0x1D2D690
	144 Call 0x1991590

Method: System.Globalization.CultureInfo ConstructCurrentUICulture()

Disassembly:
	0x0334878C TBNZ X8, 0x0, 0x33487D4
	0x03348790 ADRP X0, 0xDE0000
	0x03348794 LDR X0, [X0 + 0x3C8]
	0x03348798 BL 0x1C16CF4
	0x0334879C ADRP X0, 0xDAD000
	0x033487A0 LDR X0, [X0 + 0x278]
	0x033487A4 BL 0x1C16CF4
	0x033487A8 ADRP X0, 0xDE1000
	0x033487AC LDR X0, [X0 + 0xAE8]
	0x033487B0 BL 0x1C16CF4
	0x033487B4 ADRP X0, 0xDE1000
	0x033487B8 LDR X0, [X0 + 0xAF0]
	0x033487BC BL 0x1C16CF4
	0x033487C0 ADRP X0, 0xDE0000
	0x033487C4 LDR X0, [X0 + 0xB40]
	0x033487C8 BL 0x1C16CF4
	0x033487CC MOVZ W8, 0x1
	0x033487D0 STRB W8, [X21 + 0xD81]
	0x033487D4 MOVZ W8, 0x7F

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1095000
	005 Move X20, 0xDAE000
	006 Move W8, [X19+3448]
	007 Move X20, [X20+3144]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDAE000
	013 Move X0, [X0+3144]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3448], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Call CultureInfo.ConstructCurrentCulture
	026 Return X0

Method: System.String get_Territory()

Disassembly:
	0x033487D8 STR W8, [X19 + 0x14]
	0x033487DC BL 0x333AB78

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: System.String get__name()

Disassembly:
	0x033487E0 MOV X21, X0
	0x033487E4 BL 0x1C16D44

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Int32 get_LCID()

Disassembly:
	0x033487E8 STR X21, [X19 + 0x30]
	0x033487EC TBNZ X20, 0x0, 0x3348840

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.String get_Name()

Disassembly:
	0x033487F0 BL 0x1C16D44
	0x033487F4 CBZ X21, 0x33488B4

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Globalization.Calendar get_Calendar()

Disassembly:
	0x033487F8 MOV X0, X21
	0x033487FC BL 0x333AF8C
	0x03348800 MOV X20, X0
	0x03348804 BL 0x1C16D44
	0x03348808 CBZ X20, 0x334883C
	0x0334880C ADRP X8, 0xDE0000
	0x03348810 LDR X8, [X8 + 0x3C8]
	0x03348814 LDR X1, [X8]
	0x03348818 LDR X8, [X20]
	0x0334881C CMP X8, X1
	0x03348820 B.NE 0x3348834
	0x03348824 STR X20, [X19 + 0x30]
	0x03348828 LDR X8, [X20]
	0x0334882C CMP X8, X1
	0x03348830 B.EQ 0x3348840
	0x03348834 MOV X0, X20
	0x03348838 BL 0x1C171E0
	0x0334883C STR X31, [X19 + 0x30]
	0x03348840 ADRP X21, 0xDAD000
	0x03348844 ADRP X22, 0xDE1000
	0x03348848 ADRP X23, 0xDE1000
	0x0334884C ADRP X24, 0xDE0000
	0x03348850 LDR X21, [X21 + 0x278]
	0x03348854 LDR X22, [X22 + 0xAE8]
	0x03348858 LDR X23, [X23 + 0xAF0]
	0x0334885C LDR X24, [X24 + 0xB40]
	0x03348860 BL 0x333BD00
	0x03348864 MOV X20, X0
	0x03348868 BL 0x1C16D44
	0x0334886C STR X20, [X19 + 0x40]
	0x03348870 LDR X8, [X21]
	0x03348874 MOVZ W10, 0x101
	0x03348878 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1095000
	005 Move W8, [X20+3449]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDAE000
	012 Move X0, [X0+3144]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3449], W8
	016 Move X0, [X19+160]
	017 Compare X0, 0
	018 JumpIfNotEqual {38}
	019 Move W8, [X19+176]
	020 Compare W8, 0
	021 JumpIfNotEqual {27}
	022 Move W1, [X19+20]
	023 Move X0, X19
	024 Call 0x1C43B00
	025 Move W8, 1
	026 Move [X19+176], W8
	027 Move X8, 0xDAE000
	028 Move X8, [X8+3144]
	029 Move W20, [X19+36]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move W0, W20
	036 Call CultureInfo.CreateCalendar, X0
	037 Move [X19+160], X0
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0

Method: System.Globalization.CultureInfo get_Parent()

Disassembly:
	0x03348AC4 BL 0x3338524
	0x03348AC8 MOV X21, X0
	0x03348ACC ADRP X0, 0xDE1000
	0x03348AD0 LDR X0, [X0 + 0xB00]
	0x03348AD4 BL 0x1C16D08
	0x03348AD8 MOV X1, X0
	0x03348ADC ADD X0, X31, 0x3C
	0x03348AE0 MOV X2, X21
	0x03348AE4 MOV X3, X31
	0x03348AE8 BL 0x337B8BC
	0x03348AEC MOV X21, X0
	0x03348AF0 ADRP X0, 0xDE1000
	0x03348AF4 LDR X0, [X0 + 0xB08]
	0x03348AF8 BL 0x1C16D08
	0x03348AFC MOV X1, X0
	0x03348B00 MOV X0, X19
	0x03348B04 MOV X2, X20
	0x03348B08 MOV X3, X21
	0x03348B0C MOV X4, X31
	0x03348B10 BL 0x3227D58
	0x03348B14 MOV X19, X0
	0x03348B18 ADRP X0, 0xDE1000
	0x03348B1C LDR X0, [X0 + 0xB10]
	0x03348B20 BL 0x1C16D08
	0x03348B24 BL 0x1C16F10
	0x03348B28 MOV X20, X0
	0x03348B2C ADRP X0, 0xDD9000
	0x03348B30 LDR X0, [X0 + 0xFF0]
	0x03348B34 BL 0x1C16D08
	0x03348B38 MOV X1, X0
	0x03348B3C MOV X0, X20
	0x03348B40 MOV X2, X19
	0x03348B44 MOV X3, X31
	0x03348B48 BL 0x3323E00
	0x03348B4C ADRP X0, 0xDE1000
	0x03348B50 LDR X0, [X0 + 0xAF8]
	0x03348B54 BL 0x1C16D08
	0x03348B58 MOV X1, X0
	0x03348B5C MOV X0, X20
	0x03348B60 BL 0x1C16DEC
	0x03348B64 STP X30, X19, [X31 - 0x10]!
	0x03348B68 LDR W8, [X0 + 0x24]
	0x03348B6C SBFM X8, X8, 0x8, 0x1F
	0x03348B70 SUB X8, X8, 0x1
	0x03348B74 CMP W8, 0x4
	0x03348B78 B.CS 0x3348B90
	0x03348B7C ADRP X9, 0xFFFFFFFFFD7A4000
	0x03348B80 ADD X9, X9, 0x10
	0x03348B84 LDR W0, [X9, X8, LSL #2]
	0x03348B88 LDP X30, X19, [X31], #0x10
	0x03348B8C RET
	0x03348B90 ADRP X0, 0xDB4000
	0x03348B94 LDR X0, [X0 + 0x758]
	0x03348B98 BL 0x1C16D08
	0x03348B9C BL 0x1C16F10
	0x03348BA0 MOV X19, X0
	0x03348BA4 ADRP X0, 0xDE1000
	0x03348BA8 LDR X0, [X0 + 0xB18]
	0x03348BAC BL 0x1C16D08
	0x03348BB0 MOV X1, X0
	0x03348BB4 MOV X0, X19
	0x03348BB8 MOV X2, X31
	0x03348BBC BL 0x33802E4
	0x03348BC0 ADRP X0, 0xDE1000
	0x03348BC4 LDR X0, [X0 + 0xB20]
	0x03348BC8 BL 0x1C16D08
	0x03348BCC MOV X1, X0
	0x03348BD0 MOV X0, X19
	0x03348BD4 BL 0x1C16DEC
	0x03348BD8 SUB X31, X31, 0x90
	0x03348BDC STP X29, X30, [X31 + 0x30]
	0x03348BE0 STP X28, X27, [X31 + 0x40]
	0x03348BE4 STP X26, X25, [X31 + 0x50]
	0x03348BE8 STP X24, X23, [X31 + 0x60]
	0x03348BEC STP X22, X21, [X31 + 0x70]
	0x03348BF0 STP X20, X19, [X31 + 0x80]
	0x03348BF4 ADRP X20, 0x1094000
	0x03348BF8 LDRB W8, [X20 + 0xD84]
	0x03348BFC MOV W22, W3
	0x03348C00 MOV W25, W2
	0x03348C04 MOV X21, X1
	0x03348C08 MOV X19, X0
	0x03348C0C TBNZ X8, 0x0, 0x3348C3C
	0x03348C10 ADRP X0, 0xDAD000
	0x03348C14 LDR X0, [X0 + 0x170]
	0x03348C18 BL 0x1C16CF4
	0x03348C1C ADRP X0, 0xDE1000
	0x03348C20 LDR X0, [X0 + 0xB28]
	0x03348C24 BL 0x1C16CF4
	0x03348C28 ADRP X0, 0xDAB000
	0x03348C2C LDR X0, [X0 + 0x6C0]
	0x03348C30 BL 0x1C16CF4
	0x03348C34 MOVZ W8, 0x1
	0x03348C38 STRB W8, [X20 + 0xD84]
	0x03348C3C MOV X0, X19
	0x03348C40 MOV X1, X31
	0x03348C44 STRH W31, [X31 + 0x2C]
	0x03348C48 BL 0x33BDD8C
	0x03348C4C CBZ X21, 0x3348DC0
	0x03348C50 ADRP X20, 0xDE1000
	0x03348C54 ADRP X23, 0xDAB000
	0x03348C58 LDR X20, [X20 + 0xB28]
	0x03348C5C LDR X23, [X23 + 0x6C0]
	0x03348C60 AND W8, W25, 0x1
	0x03348C64 AND W9, W22, 0x1
	0x03348C68 MOVZ W10, 0x1
	0x03348C6C MOV X0, X19
	0x03348C70 MOV X1, X31
	0x03348C74 STRB W10, [X19 + 0xB0]
	0x03348C78 STRB W9, [X19 + 0x10]
	0x03348C7C STRB W8, [X19 + 0x28]
	0x03348C80 BL 0x33BE520
	0x03348C84 LDR X8, [X23]
	0x03348C88 LDR X24, [X20]
	0x03348C8C MOV X23, X0
	0x03348C90 LDR W9, [X8 + 0xE0]
	0x03348C94 CBNZ W9, 0x3348CA0
	0x03348C98 MOV X0, X8
	0x03348C9C BL 0x1C16DFC
	0x03348CA0 MOV X0, X24
	0x03348CA4 MOV X1, X31
	0x03348CA8 BL 0x338C698
	0x03348CAC MOV X1, X0
	0x03348CB0 MOV X0, X23
	0x03348CB4 MOV X2, X31
	0x03348CB8 BL 0x3395F0C
	0x03348CBC AND W8, W0, 0x1
	0x03348CC0 STRB W8, [X19 + 0xC8]
	0x03348CC4 LDR W8, [X21 + 0x10]
	0x03348CC8 CBZ W8, 0x3348D8C
	0x03348CCC MOV X0, X21
	0x03348CD0 MOV X1, X31
	0x03348CD4 STR W25, [X31 + 0x28]
	0x03348CD8 BL 0x322B6E4
	0x03348CDC MOV X1, X0
	0x03348CE0 MOV X0, X19
	0x03348CE4 BL 0x3348E28
	0x03348CE8 TBZ X0, 0x0, 0x3348DF4
	0x03348CEC LDR X8, [X19 + 0x90]
	0x03348CF0 ADRP X26, 0xDAD000
	0x03348CF4 LDR X23, [X19 + 0x48]
	0x03348CF8 LDR W24, [X19 + 0x1C]
	0x03348CFC LDP W21, W29, [X8]
	0x03348D00 LDP W28, W22, [X8 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1095000
	006 Move W8, [X20+3450]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0xDAE000
	013 Move X0, [X0+3144]
	014 Call 0x1C17CF4
	015 Move X0, 0xDE2000
	016 Move X0, [X0+2736]
	017 Call 0x1C17CF4
	018 Move X0, 0xDDA000
	019 Move X0, [X0+2752]
	020 Call 0x1C17CF4
	021 Move X0, 0xDE2000
	022 Move X0, [X0+2744]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3450], W8
	026 Move X20, [X19+168]
	027 Compare X20, 0
	028 JumpIfEqual {35}
	029 Move X0, X20
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0
	035 Move W8, [X19+176]
	036 Compare W8, 0
	037 JumpIfNotEqual {43}
	038 Move W1, [X19+20]
	039 Move X0, X19
	040 Call 0x1C43B00
	041 Move W8, 1
	042 Move [X19+176], W8
	043 Move W8, [X19+20]
	044 Move W21, [X19+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W8, 0x7C04
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X8, [X19]
	049 Move X0, X19
	050 Move X9, [X8+600]
	051 Move X1, [X8+608]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, [X19]
	054 Move X20, X0
	055 Move X0, X19
	056 Move X9, [X8+600]
	057 Move X1, [X8+608]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Compare X0, 0
	060 JumpIfEqual {144}
	061 Compare X20, 0
	062 JumpIfEqual {144}
	063 Move W8, [X0+16]
	064 Move X0, X20
	065 Move X2, X31
	066 Subtract W1, W8, 1
	067 Call String.get_Chars, X0, X1
	068 And W8, W0, 0xFFFF
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, 0xDAE000
	071 Move X8, [X8+3144]
	072 Move X0, [X8]
	073 Call 0x1C17F10
	074 Move X8, 0xDE2000
	075 Move X8, [X8+2736]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, 0xDAE000
	078 Move X8, [X8+3144]
	079 Move X0, [X8]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Call CultureInfo.get_InvariantCulture
	085 Move X20, X0
	086 Move [X19+168], X0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move [X19+168], X19
	090 Move X20, X19
	091 Move W21, [X19+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X8, [X19]
	094 Move X0, X19
	095 Move X9, [X8+600]
	096 Move X1, [X8+608]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X8, [X19]
	099 Move X20, X0
	100 Move X0, X19
	101 Move X9, [X8+600]
	102 Move X1, [X8+608]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Compare X0, 0
	105 JumpIfEqual {144}
	106 Compare X20, 0
	107 JumpIfEqual {144}
	108 Move W8, [X0+16]
	109 Move X0, X20
	110 Move X2, X31
	111 Subtract W1, W8, 1
	112 Call String.get_Chars, X0, X1
	113 And W8, W0, 0xFFFF
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X20, X31
	116 Move X8, 0xDAE000
	117 Move X8, [X8+3144]
	118 Move X0, [X8]
	119 Call 0x1C17F10
	120 Move X8, 0xDE2000
	121 Move X8, [X8+2744]
	122 Move X20, X31
	123 Move X8, 0xDAE000
	124 Move X8, [X8+3144]
	125 Move X0, [X8]
	126 Call 0x1C17F10
	127 Move X8, 0xDDA000
	128 Move X8, [X8+2752]
	129 Move X1, [X8]
	130 Move W2, 1
	131 Move W3, W31
	132 Move X20, X0
	133 Call CultureInfo..ctor, X0, X1, X2, X3
	134 Move X8, 0xDAE000
	135 Move X8, [X8+3144]
	136 Move X0, [X8]
	137 Call 0x1C17F10
	138 Move W2, 1
	139 Move W1, W21
	140 Move W3, W31
	141 Move X20, X0
	142 Call CultureInfo..ctor, X0, X1, X2, X3
	143 Move [X19+168], X20
	144 Call 0x1C17F20

Method: System.Globalization.TextInfo get_TextInfo()

Disassembly:
	0x03348D10 BL 0x3348B64
	0x03348D14 LDR X8, [X26]
	0x03348D18 UBFM W9, W20, 0x8, 0xF
	0x03348D1C LDR W25, [X19 + 0x20]
	0x03348D20 LDR X26, [X19 + 0x68]
	0x03348D24 STRH W9, [X31 + 0x2C]
	0x03348D28 LDR W9, [X8 + 0xE0]
	0x03348D2C MOV W27, W0
	0x03348D30 CBNZ W9, 0x3348D3C
	0x03348D34 MOV X0, X8
	0x03348D38 BL 0x1C16DFC
	0x03348D3C ADD X0, X31, 0x2C
	0x03348D40 MOV X1, X31
	0x03348D44 AND W20, W20, 0x1
	0x03348D48 BL 0x330A76C
	0x03348D4C LDR W8, [X31 + 0x28]
	0x03348D50 STR X0, [X31 + 0x18]
	0x03348D54 MOV X0, X23
	0x03348D58 MOV W2, W24
	0x03348D5C AND W1, W8, 0x1
	0x03348D60 MOV W3, W27
	0x03348D64 MOV W4, W25
	0x03348D68 MOV X5, X26
	0x03348D6C MOV W6, W21
	0x03348D70 MOV W7, W22
	0x03348D74 STRB W20, [X31 + 0x10]
	0x03348D78 STR W29, [X31 + 0x8]
	0x03348D7C STR W28, [X31]
	0x03348D80 BL 0x3340118
	0x03348D84 STR X0, [X19 + 0xC0]
	0x03348D88 B 0x3348DA0
	0x03348D8C BL 0x333BD94
	0x03348D90 STR X0, [X19 + 0xC0]
	0x03348D94 AND W1, W22, 0x1
	0x03348D98 MOV X0, X19
	0x03348D9C BL 0x334876C
	0x03348DA0 LDP X20, X19, [X31 + 0x80]
	0x03348DA4 LDP X22, X21, [X31 + 0x70]
	0x03348DA8 LDP X24, X23, [X31 + 0x60]
	0x03348DAC LDP X26, X25, [X31 + 0x50]
	0x03348DB0 LDP X28, X27, [X31 + 0x40]
	0x03348DB4 LDP X29, X30, [X31 + 0x30]
	0x03348DB8 ADD X31, X31, 0x90
	0x03348DBC RET
	0x03348DC0 ADRP X0, 0xDB0000
	0x03348DC4 LDR X0, [X0 + 0x528]
	0x03348DC8 BL 0x1C16D08
	0x03348DCC BL 0x1C16F10
	0x03348DD0 MOV X19, X0
	0x03348DD4 ADRP X0, 0xDB3000
	0x03348DD8 LDR X0, [X0 + 0x588]
	0x03348DDC BL 0x1C16D08
	0x03348DE0 MOV X1, X0
	0x03348DE4 MOV X0, X19
	0x03348DE8 MOV X2, X31
	0x03348DEC BL 0x330E100
	0x03348DF0 B 0x3348E10
	0x03348DF4 ADRP X0, 0xDAD000
	0x03348DF8 LDR X0, [X0 + 0xC48]
	0x03348DFC BL 0x1C16D08
	0x03348E00 BL 0x19903D0
	0x03348E04 MOV X0, X21
	0x03348E08 BL 0x3348EC8
	0x03348E0C MOV X19, X0
	0x03348E10 ADRP X0, 0xDE1000
	0x03348E14 LDR X0, [X0 + 0xB30]
	0x03348E18 BL 0x1C16D08
	0x03348E1C MOV X1, X0
	0x03348E20 MOV X0, X19
	0x03348E24 BL 0x1C16DEC
	0x03348E28 STR X30, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+12], W31
	007 Move X20, [X0+64]
	008 Move X19, X0
	009 Call 0x1C17D44
	010 Compare X20, 0
	011 JumpIfNotEqual {45}
	012 Move W8, [X19+176]
	013 Compare W8, 0
	014 JumpIfNotEqual {20}
	015 Move W1, [X19+20]
	016 Move X0, X19
	017 Call 0x1C43B00
	018 Move W8, 1
	019 Move [X19+176], W8
	020 Move [X31+12], W31
	021 Add X1, X31, 12
	022 Move X0, X19
	023 Move X2, X31
	024 Call Monitor.Enter, X0, X1
	025 Move X20, [X19+64]
	026 Call 0x1C17D44
	027 Compare X20, 0
	028 JumpIfEqual {30}
	029 Move X20, X31
	030 Move W1, [X19+16]
	031 Move X0, X19
	032 Call CultureInfo.CreateTextInfo, X0, X1
	033 Move X21, X0
	034 Call 0x1C17D44
	035 Move X20, X31
	036 Move [X19+64], X21
	037 Move W8, [X31+12]
	038 Compare W8, 0
	039 JumpIfEqual {43}
	040 Move X0, X19
	041 Move X1, X31
	042 Call Monitor.Exit, X0
	043 Compare X20, 0
	044 JumpIfNotEqual {54}
	045 Move X19, [X19+64]
	046 Call 0x1C17D44
	047 Move X0, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X30, [X31+16]
	051 Move X21, [X31+24]
	052 Add X31, X31, 48
	053 Return X0
	054 Move X0, X20
	055 Call 0x1C17F18
	056 Move X21, X0
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, X21
	059 Call 0x3EB2AD0
	060 Move X20, [X0]
	061 Call 0x3EB2AE0
	062 Move X20, X31
	063 Move X21, X0
	064 Move W8, [X31+12]
	065 Compare W8, 0
	066 JumpIfEqual {70}
	067 Move X0, X19
	068 Move X1, X31
	069 Call Monitor.Exit, X0
	070 Compare X20, 0
	071 JumpIfNotEqual {74}
	072 Move X0, X21
	073 Call 0x1D2D690
	074 Move X0, X20
	075 Call 0x1C17F18
	076 Call 0x1991590

Method: System.Object Clone()

Disassembly:
	0x03348EA4 TBZ X0, 0x0, 0x3348E60
	0x03348EA8 B 0x3348EB0
	0x03348EAC MOV W22, W31
	0x03348EB0 MOV W0, W22
	0x03348EB4 LDP X20, X19, [X31 + 0x20]
	0x03348EB8 LDP X22, X21, [X31 + 0x10]
	0x03348EBC LDR X30, [X31], #0x30
	0x03348EC0 RET
	0x03348EC4 BL 0x1C16F20
	0x03348EC8 STR X30, [X31 - 0x40]!
	0x03348ECC STP X24, X23, [X31 + 0x10]
	0x03348ED0 STP X22, X21, [X31 + 0x20]
	0x03348ED4 STP X20, X19, [X31 + 0x30]
	0x03348ED8 ADRP X22, 0x1094000
	0x03348EDC ADRP X23, 0xDE1000
	0x03348EE0 ADRP X24, 0xDE1000
	0x03348EE4 ADRP X21, 0xDE1000
	0x03348EE8 ADRP X20, 0xDB3000
	0x03348EEC LDRB W8, [X22 + 0xD8C]
	0x03348EF0 LDR X23, [X23 + 0xB38]
	0x03348EF4 LDR X24, [X24 + 0xB40]
	0x03348EF8 LDR X21, [X21 + 0xB10]
	0x03348EFC LDR X20, [X20 + 0x588]
	0x03348F00 MOV X19, X0
	0x03348F04 TBNZ X8, 0x0, 0x3348F40
	0x03348F08 ADRP X0, 0xDE1000
	0x03348F0C LDR X0, [X0 + 0xB10]
	0x03348F10 BL 0x1C16CF4
	0x03348F14 ADRP X0, 0xDE1000
	0x03348F18 LDR X0, [X0 + 0xB38]
	0x03348F1C BL 0x1C16CF4
	0x03348F20 ADRP X0, 0xDB3000
	0x03348F24 LDR X0, [X0 + 0x588]
	0x03348F28 BL 0x1C16CF4
	0x03348F2C ADRP X0, 0xDE1000
	0x03348F30 LDR X0, [X0 + 0xB40]
	0x03348F34 BL 0x1C16CF4
	0x03348F38 MOVZ W8, 0x1
	0x03348F3C STRB W8, [X22 + 0xD8C]
	0x03348F40 LDR X0, [X23]
	0x03348F44 LDR X2, [X24]
	0x03348F48 MOV X1, X19
	0x03348F4C MOV X3, X31
	0x03348F50 BL 0x32274B8
	0x03348F54 LDR X8, [X21]
	0x03348F58 MOV X19, X0
	0x03348F5C MOV X0, X8
	0x03348F60 BL 0x1C16F10
	0x03348F64 LDR X1, [X20]
	0x03348F68 MOV X2, X19
	0x03348F6C MOV X3, X31
	0x03348F70 MOV X20, X0
	0x03348F74 BL 0x3323E00
	0x03348F78 MOV X0, X20
	0x03348F7C LDP X20, X19, [X31 + 0x30]
	0x03348F80 LDP X22, X21, [X31 + 0x20]
	0x03348F84 LDP X24, X23, [X31 + 0x10]
	0x03348F88 LDR X30, [X31], #0x40
	0x03348F8C RET
	0x03348F90 STP X30, X19, [X31 - 0x10]!
	0x03348F94 MOV X1, X31
	0x03348F98 MOV X19, X0
	0x03348F9C BL 0x33BDD8C
	0x03348FA0 MOVZ W8, 0x1
	0x03348FA4 STRB W8, [X19 + 0xB0]
	0x03348FA8 LDP X30, X19, [X31], #0x10
	0x03348FAC RET
	0x03348FB0 STP X30, X21, [X31 - 0x20]!
	0x03348FB4 STP X20, X19, [X31 + 0x10]
	0x03348FB8 ADRP X20, 0x1094000
	0x03348FBC ADRP X21, 0xDAD000
	0x03348FC0 LDRB W8, [X20 + 0xD85]
	0x03348FC4 LDR X21, [X21 + 0xC48]
	0x03348FC8 MOV X19, X0
	0x03348FCC TBNZ X8, 0x0, 0x334902C
	0x03348FD0 ADRP X0, 0xDAD000
	0x03348FD4 LDR X0, [X0 + 0xC48]
	0x03348FD8 BL 0x1C16CF4
	0x03348FDC ADRP X0, 0xDE1000
	0x03348FE0 LDR X0, [X0 + 0xB48]
	0x03348FE4 BL 0x1C16CF4
	0x03348FE8 ADRP X0, 0xDE1000
	0x03348FEC LDR X0, [X0 + 0xB50]
	0x03348FF0 BL 0x1C16CF4
	0x03348FF4 ADRP X0, 0xDE1000
	0x03348FF8 LDR X0, [X0 + 0xB58]
	0x03348FFC BL 0x1C16CF4
	0x03349000 ADRP X0, 0xDE0000
	0x03349004 LDR X0, [X0 + 0xB60]
	0x03349008 BL 0x1C16CF4
	0x0334900C ADRP X0, 0xDE0000
	0x03349010 LDR X0, [X0 + 0xB68]
	0x03349014 BL 0x1C16CF4
	0x03349018 ADRP X0, 0xDE0000
	0x0334901C LDR X0, [X0 + 0xB70]
	0x03349020 BL 0x1C16CF4
	0x03349024 MOVZ W8, 0x1
	0x03349028 STRB W8, [X20 + 0xD85]
	0x0334902C LDR X0, [X21]
	0x03349030 LDR W8, [X0 + 0xE0]
	0x03349034 CBNZ W8, 0x3349040
	0x03349038 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1095000
	005 Move W8, [X20+3451]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0xDAE000
	012 Move X0, [X0+3144]
	013 Call 0x1C17CF4
	014 Move X0, 0xDE1000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xDE1000
	018 Move X0, [X0+968]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3451], W8
	022 Move W8, [X19+176]
	023 Compare W8, 0
	024 JumpIfNotEqual {30}
	025 Move W1, [X19+20]
	026 Move X0, X19
	027 Call 0x1C43B00
	028 Move W8, 1
	029 Move [X19+176], W8
	030 Move X0, X19
	031 Move X1, X31
	032 Call Object.MemberwiseClone, X0
	033 Compare X0, 0
	034 JumpIfEqual {110}
	035 Move X9, 0xDAE000
	036 Move X9, [X9+3144]
	037 Move X8, [X0]
	038 Move X20, X0
	039 Move X1, [X9]
	040 Move W10, [X8+304]
	041 Move W9, [X1+304]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, [X8+200]
	044 Add X8, X8, X9
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X20+16], W31
	048 Move [X20+184], X31
	049 Move X8, [X19]
	050 Move X0, X19
	051 Move X9, [X8+520]
	052 Move X1, [X8+528]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {103}
	058 Move X8, [X19]
	059 Move X0, X19
	060 Move X9, [X8+536]
	061 Move X1, [X8+544]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Compare X0, 0
	064 JumpIfEqual {110}
	065 Call NumberFormatInfo.Clone, X0
	066 Move X8, X0
	067 Compare X0, 0
	068 JumpIfEqual {74}
	069 Move X9, 0xDE1000
	070 Move X9, [X9+968]
	071 Move X1, [X9]
	072 Move X9, [X8]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X9, [X20]
	075 Move X0, X20
	076 Move X1, X8
	077 Move X10, [X9+552]
	078 Move X2, [X9+560]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X8, [X19]
	081 Move X0, X19
	082 Move X9, [X8+568]
	083 Move X1, [X8+576]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Compare X0, 0
	086 JumpIfEqual {110}
	087 Move X1, X31
	088 Call DateTimeFormatInfo.Clone, X0
	089 Move X8, X0
	090 Compare X0, 0
	091 JumpIfEqual {97}
	092 Move X9, 0xDE1000
	093 Move X9, [X9+808]
	094 Move X1, [X9]
	095 Move X9, [X8]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X9, [X20]
	098 Move X0, X20
	099 Move X1, X8
	100 Move X10, [X9+584]
	101 Move X2, [X9+592]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X0, X20
	104 Move X20, [X31+16]
	105 Move X19, [X31+24]
	106 Move X30, [X31+32]
	107 Return X0
	108 Move X0, X20
	109 Call 0x1C181E0
	110 Call 0x1C17F20
	111 Move X0, X8
	112 Call 0x1C181E0

Method: System.Boolean Equals(System.Object value)

Disassembly:
	0x0334903C LDR X0, [X21]
	0x03349040 LDR X8, [X0 + 0xB8]
	0x03349044 LDR X8, [X8 + 0x28]
	0x03349048 CBNZ X8, 0x33490BC
	0x0334904C ADRP X8, 0xDE0000
	0x03349050 LDR X8, [X8 + 0xB68]
	0x03349054 LDR X0, [X8]
	0x03349058 BL 0x1C16F10
	0x0334905C ADRP X8, 0xDE0000
	0x03349060 LDR X8, [X8 + 0xB50]
	0x03349064 MOV X20, X0
	0x03349068 LDR X1, [X8]
	0x0334906C BL 0x2A12DD4
	0x03349070 LDR X0, [X21]
	0x03349074 LDR W8, [X0 + 0xE0]
	0x03349078 CBNZ W8, 0x3349084
	0x0334907C BL 0x1C16DFC
	0x03349080 LDR X0, [X21]
	0x03349084 LDR X8, [X0 + 0xB8]
	0x03349088 STR X20, [X8 + 0x28]
	0x0334908C ADRP X8, 0xDE0000
	0x03349090 LDR X8, [X8 + 0xB70]
	0x03349094 LDR X0, [X8]
	0x03349098 BL 0x1C16F10
	0x0334909C ADRP X8, 0xDE0000
	0x033490A0 LDR X8, [X8 + 0xB48]
	0x033490A4 MOV X20, X0
	0x033490A8 LDR X1, [X8]
	0x033490AC BL 0x2AA4804
	0x033490B0 LDR X0, [X21]
	0x033490B4 LDR X8, [X0 + 0xB8]
	0x033490B8 STR X20, [X8 + 0x30]
	0x033490BC LDR W8, [X0 + 0xE0]
	0x033490C0 CBNZ W8, 0x33490CC
	0x033490C4 BL 0x1C16DFC
	0x033490C8 LDR X0, [X21]
	0x033490CC CBZ X19, 0x3349124
	0x033490D0 LDR X8, [X0 + 0xB8]
	0x033490D4 LDR X0, [X8 + 0x28]
	0x033490D8 CBZ X0, 0x3349124
	0x033490DC ADRP X8, 0xDE0000
	0x033490E0 LDR X8, [X8 + 0xB58]
	0x033490E4 LDR W1, [X19 + 0x14]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1094000
	006 Move W8, [X21+3452]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDAD000
	014 Move X0, [X0+3144]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3452], W8
	018 Compare X20, 0
	019 JumpIfEqual {46}
	020 Move X8, 0xDAD000
	021 Move X8, [X8+3144]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Compare X8, 0
	033 JumpIfEqual {52}
	034 Move W9, [X8+20]
	035 Move W10, [X19+20]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, [X8+72]
	038 Move X1, [X19+72]
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X2, X31
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call String.op_Equality, X0, X1
	045 Return X0
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move W0, W31
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return X0
	052 Call 0x1C17F20

Method: System.Globalization.CultureInfo/Data GetTextInfoData()

Disassembly:
	0x033490E8 MOV X2, X19
	0x033490EC LDR X3, [X8]
	0x033490F0 BL 0x2A13678
	0x033490F4 LDR X8, [X21]
	0x033490F8 LDR X8, [X8 + 0xB8]
	0x033490FC LDR X0, [X8 + 0x30]

ISIL:
	001 Move X9, [X0+144]
	002 Move W10, [X9+16]
	003 Move V0, [X9]
	004 Move [X8+16], W10
	005 Move [X8], V0
	006 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03349100 CBZ X0, 0x3349124
	0x03349104 ADRP X8, 0xDE0000
	0x03349108 LDR X8, [X8 + 0xB60]

ISIL:
	001 Add X0, X0, 20
	002 Move X1, X31
	003 Call Int32.GetHashCode, X0
	004 Return X0

Method: System.String ToString()

Disassembly:
	0x0334910C LDR X1, [X19 + 0x48]
	0x03349110 MOV X2, X19

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Globalization.CompareInfo get_CompareInfo()

Disassembly:
	0x03349114 LDP X20, X19, [X31 + 0x10]
	0x03349118 LDR X3, [X8]
	0x0334911C LDP X30, X21, [X31], #0x20
	0x03349120 B 0x2AA5084
	0x03349124 BL 0x1C16F20
	0x03349128 STP X30, X21, [X31 - 0x20]!
	0x0334912C STP X20, X19, [X31 + 0x10]
	0x03349130 ADRP X20, 0x1093000
	0x03349134 LDRB W8, [X20 + 0xD88]
	0x03349138 MOV X19, X0
	0x0334913C TBNZ X8, 0x0, 0x3349154
	0x03349140 ADRP X0, 0xDAC000
	0x03349144 LDR X0, [X0 + 0xC48]
	0x03349148 BL 0x1C16CF4
	0x0334914C MOVZ W8, 0x1
	0x03349150 STRB W8, [X20 + 0xD88]
	0x03349154 CBZ X19, 0x3349198
	0x03349158 ADRP X9, 0xDAC000
	0x0334915C LDR W8, [X19 + 0x10]
	0x03349160 LDR X9, [X9 + 0xC48]
	0x03349164 CMP W8, 0x0
	0x03349168 LDR X0, [X9]
	0x0334916C CSET W20, NE
	0x03349170 BL 0x1C16F10
	0x03349174 MOV X1, X19
	0x03349178 MOV W2, W20
	0x0334917C MOV W3, W31
	0x03349180 MOV X21, X0
	0x03349184 BL 0x3348BD8
	0x03349188 LDP X20, X19, [X31 + 0x10]
	0x0334918C MOV X0, X21
	0x03349190 LDP X30, X21, [X31], #0x20
	0x03349194 RET
	0x03349198 BL 0x1C16F20
	0x0334919C STR X30, [X31 - 0x20]!
	0x033491A0 STP X20, X19, [X31 + 0x10]
	0x033491A4 ADRP X20, 0x1093000
	0x033491A8 LDRB W8, [X20 + 0xD8A]
	0x033491AC MOV X19, X0
	0x033491B0 TBNZ X8, 0x0, 0x334987C
	0x033491B4 ADRP X0, 0xDAC000
	0x033491B8 LDR X0, [X0 + 0xC48]
	0x033491BC BL 0x1C16CF4
	0x033491C0 ADRP X0, 0xDE0000
	0x033491C4 LDR X0, [X0 + 0xB78]
	0x033491C8 BL 0x1C16CF4
	0x033491CC ADRP X0, 0xDE0000
	0x033491D0 LDR X0, [X0 + 0xB80]
	0x033491D4 BL 0x1C16CF4
	0x033491D8 ADRP X0, 0xDE0000
	0x033491DC LDR X0, [X0 + 0xB88]
	0x033491E0 BL 0x1C16CF4
	0x033491E4 ADRP X0, 0xDE0000
	0x033491E8 LDR X0, [X0 + 0xB90]
	0x033491EC BL 0x1C16CF4
	0x033491F0 ADRP X0, 0xDE0000
	0x033491F4 LDR X0, [X0 + 0xB98]
	0x033491F8 BL 0x1C16CF4
	0x033491FC ADRP X0, 0xDE0000
	0x03349200 LDR X0, [X0 + 0xBA0]
	0x03349204 BL 0x1C16CF4
	0x03349208 ADRP X0, 0xDE0000
	0x0334920C LDR X0, [X0 + 0xBA8]
	0x03349210 BL 0x1C16CF4
	0x03349214 ADRP X0, 0xDE0000
	0x03349218 LDR X0, [X0 + 0xBB0]
	0x0334921C BL 0x1C16CF4
	0x03349220 ADRP X0, 0xDE0000
	0x03349224 LDR X0, [X0 + 0xBB8]
	0x03349228 BL 0x1C16CF4
	0x0334922C ADRP X0, 0xDD8000
	0x03349230 LDR X0, [X0 + 0xAB0]
	0x03349234 BL 0x1C16CF4
	0x03349238 ADRP X0, 0xDE0000
	0x0334923C LDR X0, [X0 + 0xBC0]
	0x03349240 BL 0x1C16CF4
	0x03349244 ADRP X0, 0xDE0000
	0x03349248 LDR X0, [X0 + 0xBC8]
	0x0334924C BL 0x1C16CF4
	0x03349250 ADRP X0, 0xDDF000
	0x03349254 LDR X0, [X0 + 0x438]
	0x03349258 BL 0x1C16CF4
	0x0334925C ADRP X0, 0xDE0000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1094000
	007 Move W8, [X20+3453]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDD9000
	014 Move X0, [X0+4048]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3453], W8
	018 Move [X31+12], W31
	019 Move X20, [X19+136]
	020 Call 0x1C17D44
	021 Compare X20, 0
	022 JumpIfNotEqual {60}
	023 Move W8, [X19+176]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move W1, [X19+20]
	027 Move X0, X19
	028 Call 0x1C43B00
	029 Move W8, 1
	030 Move [X19+176], W8
	031 Move [X31+12], W31
	032 Add X1, X31, 12
	033 Move X0, X19
	034 Move X2, X31
	035 Call Monitor.Enter, X0, X1
	036 Move X20, [X19+136]
	037 Call 0x1C17D44
	038 Compare X20, 0
	039 JumpIfEqual {41}
	040 Move X20, X31
	041 Move X8, 0xDD9000
	042 Move X8, [X8+4048]
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X21, X0
	046 Move X1, X19
	047 Move X2, X31
	048 Call CompareInfo..ctor, X0, X1
	049 Call 0x1C17D44
	050 Move X20, X31
	051 Move [X19+136], X21
	052 Move W8, [X31+12]
	053 Compare W8, 0
	054 JumpIfEqual {58}
	055 Move X0, X19
	056 Move X1, X31
	057 Call Monitor.Exit, X0
	058 Compare X20, 0
	059 JumpIfNotEqual {69}
	060 Move X19, [X19+136]
	061 Call 0x1C17D44
	062 Move X0, X19
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X30, [X31+16]
	066 Move X21, [X31+24]
	067 Add X31, X31, 48
	068 Return X0
	069 Move X0, X20
	070 Call 0x1C17F18
	071 Move X21, X0
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, X21
	074 Call 0x3EB2AD0
	075 Move X20, [X0]
	076 Call 0x3EB2AE0
	077 Move X20, X31
	078 Move X21, X0
	079 Move W8, [X31+12]
	080 Compare W8, 0
	081 JumpIfEqual {85}
	082 Move X0, X19
	083 Move X1, X31
	084 Call Monitor.Exit, X0
	085 Compare X20, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X21
	088 Call 0x1D2D690
	089 Move X0, X20
	090 Call 0x1C17F18
	091 Call 0x1991590

Method: System.Boolean get_IsNeutralCulture()

Disassembly:
	0x03349260 LDR X0, [X0 + 0xBD0]
	0x03349264 BL 0x1C16CF4
	0x03349268 ADRP X0, 0xDE0000
	0x0334926C LDR X0, [X0 + 0xBD8]
	0x03349270 BL 0x1C16CF4
	0x03349274 ADRP X0, 0xDE0000
	0x03349278 LDR X0, [X0 + 0xBE0]
	0x0334927C BL 0x1C16CF4
	0x03349280 ADRP X0, 0xDE0000
	0x03349284 LDR X0, [X0 + 0xBE8]
	0x03349288 BL 0x1C16CF4
	0x0334928C ADRP X0, 0xDE0000
	0x03349290 LDR X0, [X0 + 0xBF0]
	0x03349294 BL 0x1C16CF4
	0x03349298 ADRP X0, 0xDE0000
	0x0334929C LDR X0, [X0 + 0xBF8]
	0x033492A0 BL 0x1C16CF4
	0x033492A4 ADRP X0, 0xDE0000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, [X0+20]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W0, W31
	006 Move W8, [X0+176]
	007 Move X19, X0
	008 Compare W8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X19
	011 Call 0x1C43B00
	012 Move W8, 1
	013 Move [X19+176], W8
	014 Move X8, [X19+120]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CSET not yet implemented."
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0

Method: System.Void CheckNeutral()

Disassembly:
	0x033492A8 LDR X0, [X0 + 0xC00]

ISIL:
	001 Return 

Method: System.Globalization.NumberFormatInfo get_NumberFormat()

Disassembly:
	0x033492AC BL 0x1C16CF4
	0x033492B0 ADRP X0, 0xDE0000
	0x033492B4 LDR X0, [X0 + 0xC08]
	0x033492B8 BL 0x1C16CF4
	0x033492BC ADRP X0, 0xDE0000
	0x033492C0 LDR X0, [X0 + 0xC10]
	0x033492C4 BL 0x1C16CF4
	0x033492C8 ADRP X0, 0xDE0000
	0x033492CC LDR X0, [X0 + 0xC18]
	0x033492D0 BL 0x1C16CF4
	0x033492D4 ADRP X0, 0xDE0000
	0x033492D8 LDR X0, [X0 + 0xC20]
	0x033492DC BL 0x1C16CF4
	0x033492E0 ADRP X0, 0xDE0000
	0x033492E4 LDR X0, [X0 + 0xC28]
	0x033492E8 BL 0x1C16CF4
	0x033492EC ADRP X0, 0xDE0000
	0x033492F0 LDR X0, [X0 + 0xC30]
	0x033492F4 BL 0x1C16CF4
	0x033492F8 ADRP X0, 0xDD8000
	0x033492FC LDR X0, [X0 + 0x948]
	0x03349300 BL 0x1C16CF4
	0x03349304 ADRP X0, 0xDE0000
	0x03349308 LDR X0, [X0 + 0xC38]
	0x0334930C BL 0x1C16CF4
	0x03349310 ADRP X0, 0xDE0000
	0x03349314 LDR X0, [X0 + 0xC40]
	0x03349318 BL 0x1C16CF4
	0x0334931C ADRP X0, 0xDE0000
	0x03349320 LDR X0, [X0 + 0xC48]
	0x03349324 BL 0x1C16CF4
	0x03349328 ADRP X0, 0xDDF000
	0x0334932C LDR X0, [X0 + 0x498]
	0x03349330 BL 0x1C16CF4
	0x03349334 ADRP X0, 0xDE0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1094000
	006 Move W8, [X20+3454]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDE0000
	013 Move X0, [X0+968]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3454], W8
	017 Move X20, [X19+48]
	018 Call 0x1C17D44
	019 Compare X20, 0
	020 JumpIfEqual {22}
	021 Move X20, [X19+48]
	022 Move X8, 0xDE0000
	023 Move X21, [X19+192]
	024 Move X8, [X8+968]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X21
	028 Move X20, X0
	029 Call NumberFormatInfo..ctor, X0, X1
	030 Compare X20, 0
	031 JumpIfEqual {43}
	032 Move W8, [X19+16]
	033 Move [X20+208], W8
	034 Call 0x1C17D44
	035 Move [X19+48], X20
	036 Call 0x1C17D44
	037 Move X0, X20
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0
	043 Call 0x1C17F20

Method: System.Void set_NumberFormat(System.Globalization.NumberFormatInfo value)

Disassembly:
	0x03349338 LDR X0, [X0 + 0xC50]
	0x0334933C BL 0x1C16CF4
	0x03349340 ADRP X0, 0xDE0000
	0x03349344 LDR X0, [X0 + 0xC58]
	0x03349348 BL 0x1C16CF4
	0x0334934C ADRP X0, 0xDD8000
	0x03349350 LDR X0, [X0 + 0xAB8]
	0x03349354 BL 0x1C16CF4
	0x03349358 ADRP X0, 0xDE0000
	0x0334935C LDR X0, [X0 + 0xC60]
	0x03349360 BL 0x1C16CF4
	0x03349364 ADRP X0, 0xDE0000
	0x03349368 LDR X0, [X0 + 0xC68]
	0x0334936C BL 0x1C16CF4
	0x03349370 ADRP X0, 0xDDF000
	0x03349374 LDR X0, [X0 + 0xB70]
	0x03349378 BL 0x1C16CF4
	0x0334937C ADRP X0, 0xDE0000
	0x03349380 LDR X0, [X0 + 0xC70]
	0x03349384 BL 0x1C16CF4
	0x03349388 ADRP X0, 0xDE0000
	0x0334938C LDR X0, [X0 + 0xC78]
	0x03349390 BL 0x1C16CF4
	0x03349394 ADRP X0, 0xDE0000
	0x03349398 LDR X0, [X0 + 0xC80]
	0x0334939C BL 0x1C16CF4
	0x033493A0 ADRP X0, 0xDDF000
	0x033493A4 LDR X0, [X0 + 0xB78]
	0x033493A8 BL 0x1C16CF4
	0x033493AC ADRP X0, 0xDE0000
	0x033493B0 LDR X0, [X0 + 0xC88]
	0x033493B4 BL 0x1C16CF4
	0x033493B8 ADRP X0, 0xDE0000
	0x033493BC LDR X0, [X0 + 0xC90]
	0x033493C0 BL 0x1C16CF4
	0x033493C4 ADRP X0, 0xDE0000
	0x033493C8 LDR X0, [X0 + 0xC98]
	0x033493CC BL 0x1C16CF4
	0x033493D0 ADRP X0, 0xDE0000
	0x033493D4 LDR X0, [X0 + 0xCA0]
	0x033493D8 BL 0x1C16CF4
	0x033493DC ADRP X0, 0xDE0000
	0x033493E0 LDR X0, [X0 + 0xCA8]
	0x033493E4 BL 0x1C16CF4
	0x033493E8 ADRP X0, 0xDE0000
	0x033493EC LDR X0, [X0 + 0xCB0]
	0x033493F0 BL 0x1C16CF4
	0x033493F4 ADRP X0, 0xDE0000
	0x033493F8 LDR X0, [X0 + 0xCB8]
	0x033493FC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+176]
	005 Move X19, X0
	006 Move X20, X1
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move W1, [X19+20]
	010 Move X0, X19
	011 Call 0x1C43B00
	012 Move W8, 1
	013 Move [X19+176], W8
	014 Move W8, [X19+16]
	015 Compare W8, 0
	016 JumpIfNotEqual {25}
	017 Compare X20, 0
	018 JumpIfEqual {37}
	019 Call 0x1C17D44
	020 Move [X19+48], X20
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 
	025 Move X0, 0xDAB000
	026 Move X0, [X0+1456]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Move X0, 0xDE1000
	031 Move X0, [X0+2752]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Move X2, X31
	036 Call InvalidOperationException..ctor, X0, X1
	037 Move X0, 0xDB0000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xDE1000
	043 Move X0, [X0+2760]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Move X2, X31
	048 Call ArgumentNullException..ctor, X0, X1
	049 Move X0, 0xDE1000
	050 Move X0, [X0+2768]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Call 0x1C17DEC

Method: System.Globalization.DateTimeFormatInfo get_DateTimeFormat()

Disassembly:
	0x03349400 ADRP X0, 0xDE0000
	0x03349404 LDR X0, [X0 + 0xCC0]
	0x03349408 BL 0x1C16CF4
	0x0334940C ADRP X0, 0xDE0000
	0x03349410 LDR X0, [X0 + 0xCC8]
	0x03349414 BL 0x1C16CF4
	0x03349418 ADRP X0, 0xDE0000
	0x0334941C LDR X0, [X0 + 0xCD0]
	0x03349420 BL 0x1C16CF4
	0x03349424 ADRP X0, 0xDE0000
	0x03349428 LDR X0, [X0 + 0xCD8]
	0x0334942C BL 0x1C16CF4
	0x03349430 ADRP X0, 0xDE0000
	0x03349434 LDR X0, [X0 + 0xCE0]
	0x03349438 BL 0x1C16CF4
	0x0334943C ADRP X0, 0xDE0000
	0x03349440 LDR X0, [X0 + 0xCE8]
	0x03349444 BL 0x1C16CF4
	0x03349448 ADRP X0, 0xDDF000
	0x0334944C LDR X0, [X0 + 0x4A8]
	0x03349450 BL 0x1C16CF4
	0x03349454 ADRP X0, 0xDE0000
	0x03349458 LDR X0, [X0 + 0xCF0]
	0x0334945C BL 0x1C16CF4
	0x03349460 ADRP X0, 0xDE0000
	0x03349464 LDR X0, [X0 + 0xCF8]
	0x03349468 BL 0x1C16CF4
	0x0334946C ADRP X0, 0xDE0000
	0x03349470 LDR X0, [X0 + 0xD00]
	0x03349474 BL 0x1C16CF4
	0x03349478 ADRP X0, 0xDE0000
	0x0334947C LDR X0, [X0 + 0xD08]
	0x03349480 BL 0x1C16CF4
	0x03349484 ADRP X0, 0xDE0000
	0x03349488 LDR X0, [X0 + 0xD10]
	0x0334948C BL 0x1C16CF4
	0x03349490 ADRP X0, 0xDE0000
	0x03349494 LDR X0, [X0 + 0xD18]
	0x03349498 BL 0x1C16CF4
	0x0334949C ADRP X0, 0xDE0000
	0x033494A0 LDR X0, [X0 + 0xD20]
	0x033494A4 BL 0x1C16CF4
	0x033494A8 ADRP X0, 0xDE0000
	0x033494AC LDR X0, [X0 + 0xD28]
	0x033494B0 BL 0x1C16CF4
	0x033494B4 ADRP X0, 0xDE0000
	0x033494B8 LDR X0, [X0 + 0xD30]
	0x033494BC BL 0x1C16CF4
	0x033494C0 ADRP X0, 0xDE0000
	0x033494C4 LDR X0, [X0 + 0xD38]
	0x033494C8 BL 0x1C16CF4
	0x033494CC ADRP X0, 0xDE0000
	0x033494D0 LDR X0, [X0 + 0xD40]
	0x033494D4 BL 0x1C16CF4
	0x033494D8 ADRP X0, 0xDE0000
	0x033494DC LDR X0, [X0 + 0xD48]
	0x033494E0 BL 0x1C16CF4
	0x033494E4 ADRP X0, 0xDDF000
	0x033494E8 LDR X0, [X0 + 0xC60]
	0x033494EC BL 0x1C16CF4
	0x033494F0 ADRP X0, 0xDE0000
	0x033494F4 LDR X0, [X0 + 0xD50]
	0x033494F8 BL 0x1C16CF4
	0x033494FC ADRP X0, 0xDE0000
	0x03349500 LDR X0, [X0 + 0xD58]
	0x03349504 BL 0x1C16CF4
	0x03349508 ADRP X0, 0xDE0000
	0x0334950C LDR X0, [X0 + 0xD60]
	0x03349510 BL 0x1C16CF4
	0x03349514 ADRP X0, 0xDE0000
	0x03349518 LDR X0, [X0 + 0xD68]
	0x0334951C BL 0x1C16CF4
	0x03349520 ADRP X0, 0xDE0000
	0x03349524 LDR X0, [X0 + 0xD70]
	0x03349528 BL 0x1C16CF4
	0x0334952C ADRP X0, 0xDE0000
	0x03349530 LDR X0, [X0 + 0xD78]
	0x03349534 BL 0x1C16CF4
	0x03349538 ADRP X0, 0xDE0000
	0x0334953C LDR X0, [X0 + 0xD80]
	0x03349540 BL 0x1C16CF4
	0x03349544 ADRP X0, 0xDE0000
	0x03349548 LDR X0, [X0 + 0xD88]
	0x0334954C BL 0x1C16CF4
	0x03349550 ADRP X0, 0xDE0000
	0x03349554 LDR X0, [X0 + 0xD90]
	0x03349558 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1094000
	007 Move W8, [X20+3455]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xDE0000
	014 Move X0, [X0+808]
	015 Call 0x1C17CF4
	016 Move X0, 0xDDF000
	017 Move X0, [X0+2352]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3455], W8
	021 Move X20, [X19+56]
	022 Call 0x1C17D44
	023 Compare X20, 0
	024 JumpIfEqual {26}
	025 Move X20, [X19+56]
	026 Move W8, [X19+176]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move W1, [X19+20]
	030 Move X0, X19
	031 Call 0x1C43B00
	032 Move W8, 1
	033 Move [X19+176], W8
	034 Move X20, 0xDDF000
	035 Move X20, [X20+2352]
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X21, 0x1094000
	042 Move W8, [X21+2814]
	043 Compare W8, 0
	044 JumpIfNotEqual {50}
	045 Move X0, 0xDDF000
	046 Move X0, [X0+2352]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+2814], W8
	050 Move X0, [X20]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X20]
	056 Move X8, [X0+184]
	057 Move W8, [X8]
	058 Compare W8, 0
	059 JumpIfEqual {83}
	060 Move X8, 0xDE0000
	061 Move X8, [X8+808]
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X1, X31
	065 Move X20, X0
	066 Call DateTimeFormatInfo..ctor, X0
	067 Compare X20, 0
	068 JumpIfEqual {102}
	069 Move W8, [X19+16]
	070 Move X0, X31
	071 Move [X20+320], W8
	072 Call Thread.MemoryBarrier
	073 Call 0x1C17D44
	074 Move [X19+56], X20
	075 Call 0x1C17D44
	076 Move X0, X20
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X30, [X31+48]
	082 Return X0
	083 Move X8, [X19]
	084 Move X21, [X19+192]
	085 Move X0, X19
	086 Move X9, [X8+440]
	087 Move X1, [X8+448]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X8, 0xDE0000
	090 Move X8, [X8+808]
	091 Move X22, X0
	092 Move X8, [X8]
	093 Move X0, X8
	094 Call 0x1C17F10
	095 Move X1, X21
	096 Move X2, X22
	097 Move X3, X31
	098 Move X20, X0
	099 Call DateTimeFormatInfo..ctor, X0, X1, X2
	100 Compare X20, 0
	101 JumpIfNotEqual {69}
	102 Call 0x1C17F20

Method: System.Void set_DateTimeFormat(System.Globalization.DateTimeFormatInfo value)

Disassembly:
	0x0334955C ADRP X0, 0xDE0000
	0x03349560 LDR X0, [X0 + 0xD98]
	0x03349564 BL 0x1C16CF4
	0x03349568 ADRP X0, 0xDE0000
	0x0334956C LDR X0, [X0 + 0xDA0]
	0x03349570 BL 0x1C16CF4
	0x03349574 ADRP X0, 0xDE0000
	0x03349578 LDR X0, [X0 + 0xDA8]
	0x0334957C BL 0x1C16CF4
	0x03349580 ADRP X0, 0xDE0000
	0x03349584 LDR X0, [X0 + 0xDB0]
	0x03349588 BL 0x1C16CF4
	0x0334958C ADRP X0, 0xDE0000
	0x03349590 LDR X0, [X0 + 0xDB8]
	0x03349594 BL 0x1C16CF4
	0x03349598 ADRP X0, 0xDE0000
	0x0334959C LDR X0, [X0 + 0xDC0]
	0x033495A0 BL 0x1C16CF4
	0x033495A4 ADRP X0, 0xDAC000
	0x033495A8 LDR X0, [X0 + 0xC10]
	0x033495AC BL 0x1C16CF4
	0x033495B0 ADRP X0, 0xDE0000
	0x033495B4 LDR X0, [X0 + 0xDC8]
	0x033495B8 BL 0x1C16CF4
	0x033495BC ADRP X0, 0xDE0000
	0x033495C0 LDR X0, [X0 + 0xDD0]
	0x033495C4 BL 0x1C16CF4
	0x033495C8 ADRP X0, 0xDE0000
	0x033495CC LDR X0, [X0 + 0xDD8]
	0x033495D0 BL 0x1C16CF4
	0x033495D4 ADRP X0, 0xDE0000
	0x033495D8 LDR X0, [X0 + 0xDE0]
	0x033495DC BL 0x1C16CF4
	0x033495E0 ADRP X0, 0xDE0000
	0x033495E4 LDR X0, [X0 + 0xDE8]
	0x033495E8 BL 0x1C16CF4
	0x033495EC ADRP X0, 0xDE0000
	0x033495F0 LDR X0, [X0 + 0xDF0]
	0x033495F4 BL 0x1C16CF4
	0x033495F8 ADRP X0, 0xDE0000
	0x033495FC LDR X0, [X0 + 0xDF8]
	0x03349600 BL 0x1C16CF4
	0x03349604 ADRP X0, 0xDE0000
	0x03349608 LDR X0, [X0 + 0xE00]
	0x0334960C BL 0x1C16CF4
	0x03349610 ADRP X0, 0xDE0000
	0x03349614 LDR X0, [X0 + 0xE08]
	0x03349618 BL 0x1C16CF4
	0x0334961C ADRP X0, 0xDE0000
	0x03349620 LDR X0, [X0 + 0xE10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+176]
	005 Move X19, X0
	006 Move X20, X1
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move W1, [X19+20]
	010 Move X0, X19
	011 Call 0x1C43B00
	012 Move W8, 1
	013 Move [X19+176], W8
	014 Move W8, [X19+16]
	015 Compare W8, 0
	016 JumpIfNotEqual {25}
	017 Compare X20, 0
	018 JumpIfEqual {37}
	019 Call 0x1C17D44
	020 Move [X19+56], X20
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 
	025 Move X0, 0xDAB000
	026 Move X0, [X0+1456]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Move X0, 0xDE1000
	031 Move X0, [X0+2752]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Move X2, X31
	036 Call InvalidOperationException..ctor, X0, X1
	037 Move X0, 0xDB0000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xDE1000
	043 Move X0, [X0+2776]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Move X2, X31
	048 Call ArgumentNullException..ctor, X0, X1
	049 Move X0, 0xDE1000
	050 Move X0, [X0+2784]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Call 0x1C17DEC

Method: System.String get_EnglishName()

Disassembly:
	0x03349624 BL 0x1C16CF4
	0x03349628 ADRP X0, 0xDE0000
	0x0334962C LDR X0, [X0 + 0xE18]
	0x03349630 BL 0x1C16CF4
	0x03349634 ADRP X0, 0xDE0000
	0x03349638 LDR X0, [X0 + 0xE20]
	0x0334963C BL 0x1C16CF4
	0x03349640 ADRP X0, 0xDE0000
	0x03349644 LDR X0, [X0 + 0xE28]
	0x03349648 BL 0x1C16CF4
	0x0334964C ADRP X0, 0xDE0000
	0x03349650 LDR X0, [X0 + 0xE30]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+176]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfNotEqual {12}
	007 Move W1, [X19+20]
	008 Move X0, X19
	009 Call 0x1C43B00
	010 Move W8, 1
	011 Move [X19+176], W8
	012 Move X0, [X19+80]
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0

Method: System.Object GetFormat(System.Type formatType)

Disassembly:
	0x03349654 BL 0x1C16CF4
	0x03349658 ADRP X0, 0xDE0000
	0x0334965C LDR X0, [X0 + 0xE38]
	0x03349660 BL 0x1C16CF4
	0x03349664 ADRP X0, 0xDE0000
	0x03349668 LDR X0, [X0 + 0xE40]
	0x0334966C BL 0x1C16CF4
	0x03349670 ADRP X0, 0xDE0000
	0x03349674 LDR X0, [X0 + 0xE48]
	0x03349678 BL 0x1C16CF4
	0x0334967C ADRP X0, 0xDE0000
	0x03349680 LDR X0, [X0 + 0xE50]
	0x03349684 BL 0x1C16CF4
	0x03349688 ADRP X0, 0xDE0000
	0x0334968C LDR X0, [X0 + 0xE58]
	0x03349690 BL 0x1C16CF4
	0x03349694 ADRP X0, 0xDE0000
	0x03349698 LDR X0, [X0 + 0xE60]
	0x0334969C BL 0x1C16CF4
	0x033496A0 ADRP X0, 0xDE0000
	0x033496A4 LDR X0, [X0 + 0xE68]
	0x033496A8 BL 0x1C16CF4
	0x033496AC ADRP X0, 0xDE0000
	0x033496B0 LDR X0, [X0 + 0xE70]
	0x033496B4 BL 0x1C16CF4
	0x033496B8 ADRP X0, 0xDE0000
	0x033496BC LDR X0, [X0 + 0xE78]
	0x033496C0 BL 0x1C16CF4
	0x033496C4 ADRP X0, 0xDE0000
	0x033496C8 LDR X0, [X0 + 0xE80]
	0x033496CC BL 0x1C16CF4
	0x033496D0 ADRP X0, 0xDE0000
	0x033496D4 LDR X0, [X0 + 0xE88]
	0x033496D8 BL 0x1C16CF4
	0x033496DC ADRP X0, 0xDAD000
	0x033496E0 LDR X0, [X0 + 0x318]
	0x033496E4 BL 0x1C16CF4
	0x033496E8 ADRP X0, 0xDE0000
	0x033496EC LDR X0, [X0 + 0xE90]
	0x033496F0 BL 0x1C16CF4
	0x033496F4 ADRP X0, 0xDAC000
	0x033496F8 LDR X0, [X0 + 0x60]
	0x033496FC BL 0x1C16CF4
	0x03349700 ADRP X0, 0xDE0000
	0x03349704 LDR X0, [X0 + 0xE98]
	0x03349708 BL 0x1C16CF4
	0x0334970C ADRP X0, 0xDE0000
	0x03349710 LDR X0, [X0 + 0xEA0]
	0x03349714 BL 0x1C16CF4
	0x03349718 ADRP X0, 0xDE0000
	0x0334971C LDR X0, [X0 + 0xEA8]
	0x03349720 BL 0x1C16CF4
	0x03349724 ADRP X0, 0xDE0000
	0x03349728 LDR X0, [X0 + 0xEB0]
	0x0334972C BL 0x1C16CF4
	0x03349730 ADRP X0, 0xDE0000
	0x03349734 LDR X0, [X0 + 0xEB8]
	0x03349738 BL 0x1C16CF4
	0x0334973C ADRP X0, 0xDE0000
	0x03349740 LDR X0, [X0 + 0xEC0]
	0x03349744 BL 0x1C16CF4
	0x03349748 ADRP X0, 0xDE0000
	0x0334974C LDR X0, [X0 + 0xEC8]
	0x03349750 BL 0x1C16CF4
	0x03349754 ADRP X0, 0xDE0000
	0x03349758 LDR X0, [X0 + 0xED0]
	0x0334975C BL 0x1C16CF4
	0x03349760 ADRP X0, 0xDE0000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1094000
	008 Move X21, 0xDE0000
	009 Move X22, 0xDAB000
	010 Move W8, [X23+3456]
	011 Move X21, [X21+2712]
	012 Move X22, [X22+1728]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0xDE0000
	020 Move X0, [X0+816]
	021 Call 0x1C17CF4
	022 Move X0, 0xDE0000
	023 Move X0, [X0+2712]
	024 Call 0x1C17CF4
	025 Move X0, 0xDAB000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+3456], W8
	030 Move X0, [X22]
	031 Move X21, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X21
	037 Move X1, X31
	038 Call Type.GetTypeFromHandle, X0
	039 Move X1, X0
	040 Move X0, X20
	041 Move X2, X31
	042 Call Type.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {50}
	047 Move X8, [X19]
	048 Move X2, [X8+536]
	049 Move X1, [X8+544]
	050 Move X8, 0xDE0000
	051 Move X0, [X22]
	052 Move X8, [X8+816]
	053 Move W9, [X0+224]
	054 Move X21, [X8]
	055 Compare W9, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X21
	059 Move X1, X31
	060 Call Type.GetTypeFromHandle, X0
	061 Move X1, X0
	062 Move X0, X20
	063 Move X2, X31
	064 Call Type.op_Equality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {80}
	069 Move X8, [X19]
	070 Move X2, [X8+568]
	071 Move X1, [X8+576]
	072 Move X0, X19
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Move X23, [X31+56]
	079 CallNoReturn X2
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X0, X31
	085 Move X30, [X31+48]
	086 Move X23, [X31+56]
	087 Return X0

Method: System.Void Construct()

Disassembly:
	0x0334887C LDR X9, [X8]
	0x03348880 LDR X8, [X22]
	0x03348884 LDP X22, X21, [X31 + 0x20]
	0x03348888 STR X8, [X19 + 0x58]
	0x0334888C STP X9, X8, [X19 + 0x48]
	0x03348890 LDR X8, [X23]
	0x03348894 LDR X9, [X24]
	0x03348898 STR W10, [X19 + 0x24]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, [X0+20]
	004 Move X19, X0
	005 Call 0x1C43B00
	006 Move W8, 1
	007 Move [X19+176], W8
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 

Method: System.Boolean construct_internal_locale_from_lcid(System.Int32 lcid)

Disassembly:
	0x03349764 LDR X0, [X0 + 0xED8]

ISIL:
	001 Call 0x1C43B00
	002 Return X0

Method: System.Boolean construct_internal_locale_from_name(System.String name)

Disassembly:
	0x03349768 BL 0x1C16CF4

ISIL:
	001 Call 0x1C43D08
	002 Return X0

Method: System.String get_current_locale_name()

Disassembly:
	0x03348550 BL 0x3324844

ISIL:
	001 Call 0x1C43DD4
	002 Return X0

Method: System.Void ConstructInvariant(System.Boolean read_only)

Disassembly:
	0x0334976C ADRP X0, 0xDE0000
	0x03349770 LDR X0, [X0 + 0xEE0]
	0x03349774 BL 0x1C16CF4
	0x03349778 ADRP X0, 0xDE0000
	0x0334977C LDR X0, [X0 + 0xEE8]
	0x03349780 BL 0x1C16CF4
	0x03349784 ADRP X0, 0xDE0000
	0x03349788 LDR X0, [X0 + 0xEF0]
	0x0334978C BL 0x1C16CF4
	0x03349790 ADRP X0, 0xDE0000
	0x03349794 LDR X0, [X0 + 0xEF8]
	0x03349798 BL 0x1C16CF4
	0x0334979C ADRP X0, 0xDE0000
	0x033497A0 LDR X0, [X0 + 0xF00]
	0x033497A4 BL 0x1C16CF4
	0x033497A8 ADRP X0, 0xDE0000
	0x033497AC LDR X0, [X0 + 0xF08]
	0x033497B0 BL 0x1C16CF4
	0x033497B4 ADRP X0, 0xDE0000
	0x033497B8 LDR X0, [X0 + 0xF10]
	0x033497BC BL 0x1C16CF4
	0x033497C0 ADRP X0, 0xDE0000
	0x033497C4 LDR X0, [X0 + 0xF18]
	0x033497C8 BL 0x1C16CF4
	0x033497CC ADRP X0, 0xDE0000
	0x033497D0 LDR X0, [X0 + 0xF20]
	0x033497D4 BL 0x1C16CF4
	0x033497D8 ADRP X0, 0xDDF000
	0x033497DC LDR X0, [X0 + 0xC68]
	0x033497E0 BL 0x1C16CF4
	0x033497E4 ADRP X0, 0xDE0000
	0x033497E8 LDR X0, [X0 + 0xF28]
	0x033497EC BL 0x1C16CF4
	0x033497F0 ADRP X0, 0xDE0000
	0x033497F4 LDR X0, [X0 + 0xF30]
	0x033497F8 BL 0x1C16CF4
	0x033497FC ADRP X0, 0xDE0000
	0x03349800 LDR X0, [X0 + 0xF38]
	0x03349804 BL 0x1C16CF4
	0x03349808 ADRP X0, 0xDE0000
	0x0334980C LDR X0, [X0 + 0xF40]
	0x03349810 BL 0x1C16CF4
	0x03349814 ADRP X0, 0xDE0000
	0x03349818 LDR X0, [X0 + 0xF48]
	0x0334981C BL 0x1C16CF4
	0x03349820 ADRP X0, 0xDE0000
	0x03349824 LDR X0, [X0 + 0xF50]
	0x03349828 BL 0x1C16CF4
	0x0334982C ADRP X0, 0xDE0000
	0x03349830 LDR X0, [X0 + 0xF58]
	0x03349834 BL 0x1C16CF4
	0x03349838 ADRP X0, 0xDE0000
	0x0334983C LDR X0, [X0 + 0xF60]
	0x03349840 BL 0x1C16CF4
	0x03349844 ADRP X0, 0xDE0000
	0x03349848 LDR X0, [X0 + 0xF68]
	0x0334984C BL 0x1C16CF4
	0x03349850 ADRP X0, 0xDE0000
	0x03349854 LDR X0, [X0 + 0xF70]
	0x03349858 BL 0x1C16CF4
	0x0334985C ADRP X0, 0xDE0000
	0x03349860 LDR X0, [X0 + 0xF78]
	0x03349864 BL 0x1C16CF4
	0x03349868 ADRP X0, 0xDE0000
	0x0334986C LDR X0, [X0 + 0xF80]
	0x03349870 BL 0x1C16CF4
	0x03349874 MOVZ W8, 0x1
	0x03349878 STRB W8, [X20 + 0xD8A]
	0x0334987C CBZ X19, 0x334B8E0
	0x03349880 MOV X0, X19
	0x03349884 MOV X1, X31
	0x03349888 BL 0x322B6E4
	0x0334988C MOV X1, X31
	0x03349890 MOV X20, X0
	0x03349894 BL 0x335C87C
	0x03349898 MOVZ W8, 0x87B1
	0x0334989C MOVK W8, 0x50290000
	0x033498A0 CMP W0, W8
	0x033498A4 B.HI 0x334993C
	0x033498A8 MOVZ W8, 0x49B7
	0x033498AC MOVK W8, 0x43450000
	0x033498B0 CMP W0, W8
	0x033498B4 B.HI 0x33499D0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1094000
	009 Move W8, [X21+3457]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xDE0000
	017 Move X0, [X0+968]
	018 Call 0x1C17CF4
	019 Move X0, 0xDAD000
	020 Move X0, [X0+632]
	021 Call 0x1C17CF4
	022 Move X0, 0xDE1000
	023 Move X0, [X0+2792]
	024 Call 0x1C17CF4
	025 Move X0, 0xDE1000
	026 Move X0, [X0+2800]
	027 Call 0x1C17CF4
	028 Move X0, 0xDE0000
	029 Move X0, [X0+2880]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3457], W8
	033 Move W8, 127
	034 Move [X19+20], W8
	035 Call NumberFormatInfo.get_InvariantInfo
	036 Move X21, X0
	037 Call 0x1C17D44
	038 Move [X19+48], X21
	039 Move TEMP, X20
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {63}
	043 Call 0x1C17D44
	044 Compare X21, 0
	045 JumpIfEqual {97}
	046 Move X0, X21
	047 Call NumberFormatInfo.Clone, X0
	048 Move X20, X0
	049 Call 0x1C17D44
	050 Compare X20, 0
	051 JumpIfEqual {62}
	052 Move X8, 0xDE0000
	053 Move X8, [X8+968]
	054 Move X1, [X8]
	055 Move X8, [X20]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move [X19+48], X20
	058 Move X8, [X20]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, X20
	061 Call 0x1C181E0
	062 Move [X19+48], X31
	063 Move X21, 0xDAD000
	064 Move X22, 0xDE1000
	065 Move X23, 0xDE1000
	066 Move X24, 0xDE0000
	067 Move X21, [X21+632]
	068 Move X22, [X22+2792]
	069 Move X23, [X23+2800]
	070 Move X24, [X24+2880]
	071 Call TextInfo.get_Invariant
	072 Move X20, X0
	073 Call 0x1C17D44
	074 Move [X19+64], X20
	075 Move X8, [X21]
	076 Move W10, 257
	077 Move X8, [X8+184]
	078 Move X9, [X8]
	079 Move X8, [X22]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move [X19+88], X8
	083 Move [X19+72], X9
	084 Move [X19+80], X8
	085 Move X8, [X23]
	086 Move X9, [X24]
	087 Move [X19+36], W10
	088 Move X24, [X31+16]
	089 Move X23, [X31+24]
	090 Move [X19+112], X8
	091 Move [X19+96], X8
	092 Move [X19+104], X9
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X30, [X31+64]
	096 Return 
	097 Call 0x1C17F20

Method: System.Globalization.TextInfo CreateTextInfo(System.Boolean readOnly)

Disassembly:
	0x03348E2C STP X22, X21, [X31 + 0x10]
	0x03348E30 STP X20, X19, [X31 + 0x20]
	0x03348E34 MOV X19, X1
	0x03348E38 MOV X20, X0
	0x03348E3C BL 0x1C42D08
	0x03348E40 TBZ X0, 0x0, 0x3348E4C
	0x03348E44 MOVZ W22, 0x1
	0x03348E48 B 0x3348EB0
	0x03348E4C CBZ X19, 0x3348EC4
	0x03348E50 LDR W8, [X19 + 0x10]
	0x03348E54 SUB W21, W8, 0x1
	0x03348E58 CMP W21, 0x1
	0x03348E5C B.LT 0x3348EAC
	0x03348E60 SUB W2, W21, 0x1
	0x03348E64 MOVZ W1, 0x2D
	0x03348E68 MOV X0, X19
	0x03348E6C MOV X3, X31
	0x03348E70 BL 0x322C678
	0x03348E74 CMP W0, 0x0
	0x03348E78 CSET W22, GT
	0x03348E7C B.LE 0x3348EB0
	0x03348E80 MOV W21, W0
	0x03348E84 MOV X0, X19
	0x03348E88 MOV W1, W31
	0x03348E8C MOV W2, W21
	0x03348E90 MOV X3, X31
	0x03348E94 BL 0x3228DE4
	0x03348E98 MOV X1, X0
	0x03348E9C MOV X0, X20
	0x03348EA0 BL 0x1C42D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1095000
	007 Move X22, 0xDE1000
	008 Move W8, [X21+3458]
	009 Move X22, [X22+2808]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDE1000
	017 Move X0, [X0+2808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3458], W8
	021 Move X0, [X22]
	022 Move X21, [X20+192]
	023 Call 0x1C17F10
	024 Move X1, X21
	025 Move X20, X0
	026 Call TextInfo..ctor, X0, X1
	027 Compare X20, 0
	028 JumpIfEqual {38}
	029 And W8, W19, 1
	030 Move [X20+24], W8
	031 Move X0, X20
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return X0
	038 Call 0x1C17F20

Method: System.Void .ctor(System.Int32 culture)

Disassembly:
	0x03348D04 LDR W20, [X8 + 0x10]
	0x03348D08 LDR X26, [X26 + 0x170]
	0x03348D0C MOV X0, X19

ISIL:
	001 Move W2, 1
	002 Move W3, W31
	003 Call CultureInfo..ctor, X0, X1, X2, X3
	004 Return 

Method: System.Void .ctor(System.Int32 culture, System.Boolean useUserOverride)

Disassembly:
	0x033498B8 MOVZ W8, 0x7E08
	0x033498BC MOVK W8, 0x3D1E0000
	0x033498C0 CMP W0, W8

ISIL:
	001 And W2, W2, 1
	002 Move W3, W31

Method: System.Void .ctor(System.Int32 culture, System.Boolean useUserOverride, System.Boolean read_only)

Disassembly:
	0x033498C4 B.HI 0x3349AC0
	0x033498C8 MOVZ W8, 0xA3A6
	0x033498CC MOVK W8, 0x3A2B0000
	0x033498D0 CMP W0, W8
	0x033498D4 B.HI 0x3349C78
	0x033498D8 MOVZ W8, 0x6AE0
	0x033498DC MOVK W8, 0x37380000
	0x033498E0 CMP W0, W8
	0x033498E4 B.HI 0x3349F80
	0x033498E8 MOVZ W8, 0x22FC
	0x033498EC MOVK W8, 0x356F0000
	0x033498F0 CMP W0, W8
	0x033498F4 B.HI 0x334A490
	0x033498F8 MOVZ W8, 0x50AB
	0x033498FC MOVK W8, 0x106C0000
	0x03349900 CMP W0, W8
	0x03349904 B.EQ 0x334ADD0
	0x03349908 MOVZ W8, 0x22FC
	0x0334990C MOVK W8, 0x356F0000
	0x03349910 CMP W0, W8
	0x03349914 B.NE 0x334B88C
	0x03349918 ADRP X8, 0xDE0000
	0x0334991C LDR X8, [X8 + 0xC48]
	0x03349920 MOV X0, X20
	0x03349924 MOV X2, X31
	0x03349928 LDR X1, [X8]
	0x0334992C BL 0x321BA08
	0x03349930 TBZ X0, 0x0, 0x334B88C
	0x03349934 MOVZ W19, 0x47A
	0x03349938 B 0x334B858
	0x0334993C MOVZ W8, 0xE842
	0x03349940 MOVK W8, 0x62220000
	0x03349944 CMP W0, W8
	0x03349948 B.HI 0x3349A54
	0x0334994C MOVZ W8, 0xCEA2
	0x03349950 MOVK W8, 0x5C1C0000
	0x03349954 CMP W0, W8
	0x03349958 B.HI 0x3349B34
	0x0334995C MOVZ W8, 0xFE4
	0x03349960 MOVK W8, 0x572E0000
	0x03349964 CMP W0, W8
	0x03349968 B.HI 0x3349CC4
	0x0334996C MOVZ W8, 0x1262
	0x03349970 MOVK W8, 0x55250000
	0x03349974 CMP W0, W8
	0x03349978 B.HI 0x3349FD4
	0x0334997C MOVZ W8, 0x588A
	0x03349980 MOVK W8, 0x504E0000
	0x03349984 CMP W0, W8
	0x03349988 B.HI 0x334A4D4
	0x0334998C MOVZ W8, 0xF69
	0x03349990 MOVK W8, 0x503D0000
	0x03349994 CMP W0, W8
	0x03349998 B.EQ 0x334ADF4
	0x0334999C MOVZ W8, 0x588A
	0x033499A0 MOVK W8, 0x504E0000
	0x033499A4 CMP W0, W8
	0x033499A8 B.NE 0x334B88C
	0x033499AC ADRP X8, 0xDE0000
	0x033499B0 LDR X8, [X8 + 0xD28]
	0x033499B4 MOV X0, X20
	0x033499B8 MOV X2, X31
	0x033499BC LDR X1, [X8]
	0x033499C0 BL 0x321BA08
	0x033499C4 TBZ X0, 0x0, 0x334B88C
	0x033499C8 MOVZ W19, 0x446
	0x033499CC B 0x334B858
	0x033499D0 MOVZ W8, 0x1D89
	0x033499D4 MOVK W8, 0x48520000
	0x033499D8 CMP W0, W8
	0x033499DC B.HI 0x3349BA8
	0x033499E0 MOVZ W8, 0x77F3
	0x033499E4 MOVK W8, 0x46290000
	0x033499E8 CMP W0, W8
	0x033499EC B.HI 0x3349D28
	0x033499F0 MOVZ W8, 0xE46
	0x033499F4 MOVK W8, 0x45430000
	0x033499F8 CMP W0, W8
	0x033499FC B.HI 0x334A028
	0x03349A00 MOVZ W8, 0x7F57
	0x03349A04 MOVK W8, 0x44380000
	0x03349A08 CMP W0, W8
	0x03349A0C B.HI 0x334A500
	0x03349A10 MOVZ W8, 0x15AA
	0x03349A14 MOVK W8, 0x43520000
	0x03349A18 CMP W0, W8
	0x03349A1C B.EQ 0x334AE18
	0x03349A20 MOVZ W8, 0x7F57
	0x03349A24 MOVK W8, 0x44380000
	0x03349A28 CMP W0, W8
	0x03349A2C B.NE 0x334B88C
	0x03349A30 ADRP X8, 0xDE0000
	0x03349A34 LDR X8, [X8 + 0xC78]
	0x03349A38 MOV X0, X20
	0x03349A3C MOV X2, X31
	0x03349A40 LDR X1, [X8]
	0x03349A44 BL 0x321BA08
	0x03349A48 TBZ X0, 0x0, 0x334B88C
	0x03349A4C MOVZ W19, 0x478
	0x03349A50 B 0x334B858
	0x03349A54 MOVZ W8, 0x1D86
	0x03349A58 MOVK W8, 0xB38F0000
	0x03349A5C CMP W0, W8
	0x03349A60 B.HI 0x3349C1C
	0x03349A64 MOVZ W8, 0xF69A
	0x03349A68 MOVK W8, 0x683A0000
	0x03349A6C CMP W0, W8
	0x03349A70 B.HI 0x3349D8C
	0x03349A74 MOVZ W8, 0x850E
	0x03349A78 MOVK W8, 0x62540000
	0x03349A7C CMP W0, W8
	0x03349A80 B.HI 0x334A064
	0x03349A84 MOVZ W8, 0x6FFA
	0x03349A88 MOVK W8, 0x62360000
	0x03349A8C CMP W0, W8
	0x03349A90 B.HI 0x334A544
	0x03349A94 MOVZ W8, 0xA407
	0x03349A98 MOVK W8, 0x62290000
	0x03349A9C CMP W0, W8
	0x03349AA0 B.EQ 0x334AE3C
	0x03349AA4 MOVZ W8, 0x6FFA
	0x03349AA8 MOVK W8, 0x62360000
	0x03349AAC CMP W0, W8
	0x03349AB0 B.NE 0x334B88C
	0x03349AB4 ADRP X8, 0xDE0000
	0x03349AB8 LDR X8, [X8 + 0xD48]
	0x03349ABC B 0x334AF1C
	0x03349AC0 MOVZ W8, 0x658A
	0x03349AC4 MOVK W8, 0x411A0000
	0x03349AC8 CMP W0, W8
	0x03349ACC B.HI 0x3349DF0
	0x03349AD0 MOVZ W8, 0x6264
	0x03349AD4 MOVK W8, 0x3F1A0000
	0x03349AD8 CMP W0, W8
	0x03349ADC B.HI 0x334A0B8
	0x03349AE0 MOVZ W8, 0x41D8
	0x03349AE4 MOVK W8, 0x3E450000
	0x03349AE8 CMP W0, W8
	0x03349AEC B.HI 0x334A588
	0x03349AF0 MOVZ W8, 0xF313
	0x03349AF4 MOVK W8, 0x3E3C0000
	0x03349AF8 CMP W0, W8
	0x03349AFC B.EQ 0x334AE60
	0x03349B00 MOVZ W8, 0x41D8
	0x03349B04 MOVK W8, 0x3E450000
	0x03349B08 CMP W0, W8
	0x03349B0C B.NE 0x334B88C
	0x03349B10 ADRP X8, 0xDE0000
	0x03349B14 LDR X8, [X8 + 0xCE8]
	0x03349B18 MOV X0, X20
	0x03349B1C MOV X2, X31
	0x03349B20 LDR X1, [X8]
	0x03349B24 BL 0x321BA08
	0x03349B28 TBZ X0, 0x0, 0x334B88C
	0x03349B2C MOVZ W19, 0x442
	0x03349B30 B 0x334B858
	0x03349B34 MOVZ W8, 0x208D
	0x03349B38 MOVK W8, 0x5E250000
	0x03349B3C CMP W0, W8
	0x03349B40 B.HI 0x3349E54
	0x03349B44 MOVZ W8, 0xD43C
	0x03349B48 MOVK W8, 0x5C7A0000
	0x03349B4C CMP W0, W8
	0x03349B50 B.HI 0x334A10C
	0x03349B54 MOVZ W8, 0x17C3
	0x03349B58 MOVK W8, 0x5C2E0000
	0x03349B5C CMP W0, W8
	0x03349B60 B.HI 0x334A5CC

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X23, 0x1094000
	015 Move W8, [X23+3459]
	016 Move W20, W3
	017 Move W22, W2
	018 Move W21, W1
	019 Move X19, X0
	020 Move [X31+60], W1
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xDAD000
	026 Move X0, [X0+368]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+3459], W8
	030 Move X0, X19
	031 Move X1, X31
	032 NotImplemented "Instruction STRH not yet implemented."
	033 Call Object..ctor, X0
	034 Move TEMP, X21
	035 And TEMP, TEMP, -2147483648
	036 Compare TEMP, -2147483648
	037 JumpIfEqual {118}
	038 And W8, W22, 1
	039 And W9, W20, 1
	040 Move W10, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move [X19+176], W10
	043 Move [X19+16], W9
	044 Move [X19+40], W8
	045 Call CultureData.get_Invariant
	046 Move [X19+192], X0
	047 And W1, W20, 1
	048 Move X0, X19
	049 Call CultureInfo.ConstructInvariant, X0, X1
	050 Move X0, X19
	051 Move W1, W21
	052 Call 0x1C43B00
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {141}
	057 Move X8, [X19+144]
	058 Move X22, [X19+72]
	059 Move W27, [X19+40]
	060 Move W23, [X19+28]
	061 Move W9, [X8]
	062 Move W29, [X8+4]
	063 Move W28, [X8+8]
	064 Move W21, [X8+12]
	065 Move W20, [X8+16]
	066 Move X0, X19
	067 Move [X31+52], W9
	068 Call CultureInfo.get_CalendarType, X0
	069 Move X8, 0xDAD000
	070 Move W24, [X19+32]
	071 Move X8, [X8+368]
	072 Move W9, W20
	073 ShiftRight W9, 8
	074 And W9, W9, 0x7FFF
	075 Move X25, [X19+104]
	076 NotImplemented "Instruction STRH not yet implemented."
	077 Move X8, [X8]
	078 Move W26, W0
	079 Move W9, [X8+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X8
	083 Call 0x1C17DFC
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add X0, X31, 56
	086 Move X1, X31
	087 And W20, W20, 1
	088 NotImplemented "Instruction CSET not yet implemented."
	089 Call Char.ToString, X0
	090 Move W6, [X31+52]
	091 Move [X31+24], X0
	092 Move X0, X22
	093 Move W1, W27
	094 Move W2, W23
	095 Move W3, W26
	096 Move W4, W24
	097 Move X5, X25
	098 Move W7, W21
	099 Move [X31+16], W20
	100 Move [X31+8], W29
	101 Move [X31], W28
	102 Call CultureData.GetCultureData, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	103 Move [X19+192], X0
	104 Move X20, [X31+144]
	105 Move X19, [X31+152]
	106 Move X22, [X31+128]
	107 Move X21, [X31+136]
	108 Move X24, [X31+112]
	109 Move X23, [X31+120]
	110 Move X26, [X31+96]
	111 Move X25, [X31+104]
	112 Move X28, [X31+80]
	113 Move X27, [X31+88]
	114 Move X29, [X31+64]
	115 Move X30, [X31+72]
	116 Add X31, X31, 160
	117 Return 
	118 Move X0, 0xDB3000
	119 Move X0, [X0+1888]
	120 Call 0x1C17D08
	121 Call 0x1C17F10
	122 Move X19, X0
	123 Move X0, 0xDD9000
	124 Move X0, [X0+4080]
	125 Call 0x1C17D08
	126 Move X20, X0
	127 Move X0, 0xDDE000
	128 Move X0, [X0+3368]
	129 Call 0x1C17D08
	130 Move X2, X0
	131 Move X0, X19
	132 Move X1, X20
	133 Move X3, X31
	134 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	135 Move X0, 0xDE1000
	136 Move X0, [X0+2808]
	137 Call 0x1C17D08
	138 Move X1, X0
	139 Move X0, X19
	140 Call 0x1C17DEC
	141 Move X0, 0xDAD000
	142 Move X0, [X0+3144]
	143 Call 0x1C17D08
	144 Call 0x19913D0
	145 Call CultureInfo.get_InvariantCulture
	146 Move X19, X0
	147 Call CultureInfo.get_InvariantCulture
	148 Move X1, X0
	149 Add X0, X31, 60
	150 Move X2, X31
	151 Call Int32.ToString, X0, X1
	152 Move X20, X0
	153 Call CultureInfo.get_InvariantCulture
	154 Move X21, X0
	155 Move X0, 0xDE1000
	156 Move X0, [X0+2816]
	157 Call 0x1C17D08
	158 Move X1, X0
	159 Add X0, X31, 60
	160 Move X2, X21
	161 Move X3, X31
	162 Call Int32.ToString, X0, X1, X2
	163 Move X21, X0
	164 Move X0, 0xDE1000
	165 Move X0, [X0+2824]
	166 Call 0x1C17D08
	167 Move X1, X0
	168 Move X0, X19
	169 Move X2, X20
	170 Move X3, X21
	171 Move X4, X31
	172 Call String.Format, X0, X1, X2, X3
	173 Move X19, X0
	174 Move X0, 0xDE1000
	175 Move X0, [X0+2832]
	176 Call 0x1C17D08
	177 Call 0x1C17F10
	178 Move X20, X0
	179 Move X0, 0xDD9000
	180 Move X0, [X0+4080]
	181 Call 0x1C17D08
	182 Move X1, X0
	183 Move X0, X20
	184 Move X2, X19
	185 Move X3, X31
	186 Call CultureNotFoundException..ctor, X0, X1, X2
	187 Move X0, 0xDE1000
	188 Move X0, [X0+2808]
	189 Call 0x1C17D08
	190 Move X1, X0
	191 Move X0, X20
	192 Call 0x1C17DEC

Method: System.Void .ctor(System.String name)

Disassembly:
	0x0333AE6C MOV X0, X20
	0x0333AE70 LDP X20, X19, [X31 + 0x10]
	0x0333AE74 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move W2, 1
	002 Move W3, W31
	003 Call CultureInfo..ctor, X0, X1, X2, X3
	004 Return 

Method: System.Void .ctor(System.String name, System.Boolean useUserOverride)

Disassembly:
	0x0334110C BL 0x1C16F28
	0x03341110 STR X30, [X31 - 0x20]!
	0x03341114 STP X20, X19, [X31 + 0x10]

ISIL:
	001 And W2, W2, 1
	002 Move W3, W31
	003 Call CultureInfo..ctor, X0, X1, X2, X3
	004 Return 

Method: System.Void .ctor(System.String name, System.Boolean useUserOverride, System.Boolean read_only)

Disassembly:
	0x03349BD8 MOVZ W8, 0x5C20
	0x03349BDC MOVK W8, 0x48540000
	0x03349BE0 CMP W0, W8
	0x03349BE4 B.EQ 0x334AEA8
	0x03349BE8 MOVZ W8, 0xFF7E
	0x03349BEC MOVK W8, 0x49240000
	0x03349BF0 CMP W0, W8
	0x03349BF4 B.NE 0x334B88C
	0x03349BF8 ADRP X8, 0xDE0000
	0x03349BFC LDR X8, [X8 + 0xEC8]
	0x03349C00 MOV X0, X20
	0x03349C04 MOV X2, X31
	0x03349C08 LDR X1, [X8]
	0x03349C0C BL 0x321BA08
	0x03349C10 TBZ X0, 0x0, 0x334B88C
	0x03349C14 MOVZ W19, 0x436
	0x03349C18 B 0x334B858
	0x03349C1C MOVZ W8, 0x4D71
	0x03349C20 MOVK W8, 0xE23C0000
	0x03349C24 CMP W0, W8
	0x03349C28 B.HI 0x3349F1C
	0x03349C2C MOVZ W8, 0xA0A9
	0x03349C30 MOVK W8, 0xC4580000
	0x03349C34 CMP W0, W8
	0x03349C38 B.HI 0x334A1B4
	0x03349C3C MOVZ W8, 0x5742
	0x03349C40 MOVK W8, 0xC0310000
	0x03349C44 CMP W0, W8
	0x03349C48 B.HI 0x334A654
	0x03349C4C MOVZ W8, 0xCF27
	0x03349C50 MOVK W8, 0xBD350000
	0x03349C54 CMP W0, W8
	0x03349C58 B.EQ 0x334AECC
	0x03349C5C MOVZ W8, 0x5742
	0x03349C60 MOVK W8, 0xC0310000
	0x03349C64 CMP W0, W8
	0x03349C68 B.NE 0x334B88C
	0x03349C6C ADRP X8, 0xDE0000
	0x03349C70 LDR X8, [X8 + 0xDA0]
	0x03349C74 B 0x334AB80
	0x03349C78 MOVZ W8, 0x333A
	0x03349C7C MOVK W8, 0x3B680000
	0x03349C80 CMP W0, W8
	0x03349C84 B.HI 0x334A208
	0x03349C88 MOVZ W8, 0x3B8C
	0x03349C8C MOVK W8, 0x3A450000
	0x03349C90 CMP W0, W8
	0x03349C94 B.HI 0x334A698
	0x03349C98 MOVZ W8, 0x6F99
	0x03349C9C MOVK W8, 0x3A380000
	0x03349CA0 CMP W0, W8
	0x03349CA4 B.EQ 0x334AEF0
	0x03349CA8 MOVZ W8, 0x3B8C
	0x03349CAC MOVK W8, 0x3A450000
	0x03349CB0 CMP W0, W8
	0x03349CB4 B.NE 0x334B88C
	0x03349CB8 ADRP X8, 0xDE0000
	0x03349CBC LDR X8, [X8 + 0xDA8]
	0x03349CC0 B 0x334B234
	0x03349CC4 MOVZ W8, 0x603C
	0x03349CC8 MOVK W8, 0x58360000
	0x03349CCC CMP W0, W8
	0x03349CD0 B.HI 0x334A25C
	0x03349CD4 MOVZ W8, 0xC856
	0x03349CD8 MOVK W8, 0x581C0000
	0x03349CDC CMP W0, W8
	0x03349CE0 B.HI 0x334A6DC
	0x03349CE4 MOVZ W8, 0x5EA9
	0x03349CE8 MOVK W8, 0x57360000
	0x03349CEC CMP W0, W8
	0x03349CF0 B.EQ 0x334AF14
	0x03349CF4 MOVZ W8, 0xC856
	0x03349CF8 MOVK W8, 0x581C0000
	0x03349CFC CMP W0, W8
	0x03349D00 B.NE 0x334B88C
	0x03349D04 ADRP X8, 0xDE0000
	0x03349D08 LDR X8, [X8 + 0xD50]
	0x03349D0C MOV X0, X20
	0x03349D10 MOV X2, X31
	0x03349D14 LDR X1, [X8]
	0x03349D18 BL 0x321BA08
	0x03349D1C TBZ X0, 0x0, 0x334B88C
	0x03349D20 MOVZ W19, 0x406
	0x03349D24 B 0x334B858
	0x03349D28 MOVZ W8, 0x5003
	0x03349D2C MOVK W8, 0x47450000
	0x03349D30 CMP W0, W8
	0x03349D34 B.HI 0x334A2B0
	0x03349D38 MOVZ W8, 0xC84B
	0x03349D3C MOVK W8, 0x47310000
	0x03349D40 CMP W0, W8
	0x03349D44 B.HI 0x334A720
	0x03349D48 MOVZ W8, 0x6EFC
	0x03349D4C MOVK W8, 0x471A0000
	0x03349D50 CMP W0, W8
	0x03349D54 B.EQ 0x334AF38
	0x03349D58 MOVZ W8, 0xC84B
	0x03349D5C MOVK W8, 0x47310000
	0x03349D60 CMP W0, W8
	0x03349D64 B.NE 0x334B88C
	0x03349D68 ADRP X8, 0xDE0000
	0x03349D6C LDR X8, [X8 + 0xBC0]
	0x03349D70 MOV X0, X20
	0x03349D74 MOV X2, X31
	0x03349D78 LDR X1, [X8]
	0x03349D7C BL 0x321BA08
	0x03349D80 TBZ X0, 0x0, 0x334B88C
	0x03349D84 MOVZ W19, 0x46E
	0x03349D88 B 0x334B858
	0x03349D8C MOVZ W8, 0x4CDC
	0x03349D90 MOVK W8, 0x79FC0000
	0x03349D94 CMP W0, W8
	0x03349D98 B.HI 0x334A304
	0x03349D9C MOVZ W8, 0x7A14
	0x03349DA0 MOVK W8, 0x6C3F0000
	0x03349DA4 CMP W0, W8
	0x03349DA8 B.HI 0x334A764
	0x03349DAC MOVZ W8, 0x23E8
	0x03349DB0 MOVK W8, 0x6AC00000
	0x03349DB4 CMP W0, W8
	0x03349DB8 B.EQ 0x334AF5C
	0x03349DBC MOVZ W8, 0x7A14
	0x03349DC0 MOVK W8, 0x6C3F0000
	0x03349DC4 CMP W0, W8
	0x03349DC8 B.NE 0x334B88C
	0x03349DCC ADRP X8, 0xDD8000
	0x03349DD0 LDR X8, [X8 + 0xAB0]
	0x03349DD4 MOV X0, X20
	0x03349DD8 MOV X2, X31
	0x03349DDC LDR X1, [X8]
	0x03349DE0 BL 0x321BA08
	0x03349DE4 TBZ X0, 0x0, 0x334B88C
	0x03349DE8 MOVZ W19, 0x411
	0x03349DEC B 0x334B858
	0x03349DF0 MOVZ W8, 0xC06C
	0x03349DF4 MOVK W8, 0x42310000
	0x03349DF8 CMP W0, W8
	0x03349DFC B.HI 0x334A340
	0x03349E00 MOVZ W8, 0x4691
	0x03349E04 MOVK W8, 0x41450000
	0x03349E08 CMP W0, W8
	0x03349E0C B.HI 0x334A7A8
	0x03349E10 MOVZ W8, 0xF7CC
	0x03349E14 MOVK W8, 0x413C0000
	0x03349E18 CMP W0, W8
	0x03349E1C B.EQ 0x334AF68
	0x03349E20 MOVZ W8, 0x4691
	0x03349E24 MOVK W8, 0x41450000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0x1094000
	015 Move W8, [X20+3460]
	016 Move W22, W3
	017 Move W25, W2
	018 Move X21, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0xDAD000
	025 Move X0, [X0+368]
	026 Call 0x1C17CF4
	027 Move X0, 0xDE1000
	028 Move X0, [X0+2856]
	029 Call 0x1C17CF4
	030 Move X0, 0xDAB000
	031 Move X0, [X0+1728]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+3460], W8
	035 Move X0, X19
	036 Move X1, X31
	037 NotImplemented "Instruction STRH not yet implemented."
	038 Call Object..ctor, X0
	039 Compare X21, 0
	040 JumpIfEqual {148}
	041 Move X20, 0xDE1000
	042 Move X23, 0xDAB000
	043 Move X20, [X20+2856]
	044 Move X23, [X23+1728]
	045 And W8, W25, 1
	046 And W9, W22, 1
	047 Move W10, 1
	048 Move X0, X19
	049 Move X1, X31
	050 Move [X19+176], W10
	051 Move [X19+16], W9
	052 Move [X19+40], W8
	053 Call "il2cpp_vm_object_is_inst", X0
	054 Move X8, [X23]
	055 Move X24, [X20]
	056 Move X23, X0
	057 Move W9, [X8+224]
	058 Compare W9, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Move X0, X24
	063 Move X1, X31
	064 Call Type.GetTypeFromHandle, X0
	065 Move X1, X0
	066 Move X0, X23
	067 Move X2, X31
	068 Call Type.op_Inequality, X0, X1
	069 And W8, W0, 1
	070 Move [X19+200], W8
	071 Move W8, [X21+16]
	072 Compare W8, 0
	073 JumpIfEqual {129}
	074 Move X0, X21
	075 Move X1, X31
	076 Move [X31+40], W25
	077 Call String.ToLowerInvariant, X0
	078 Move X1, X0
	079 Move X0, X19
	080 Call CultureInfo.ConstructLocaleFromName, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {160}
	085 Move X8, [X19+144]
	086 Move X26, 0xDAD000
	087 Move X23, [X19+72]
	088 Move W24, [X19+28]
	089 Move W21, [X8]
	090 Move W29, [X8+4]
	091 Move W28, [X8+8]
	092 Move W22, [X8+12]
	093 Move W20, [X8+16]
	094 Move X26, [X26+368]
	095 Move X0, X19
	096 Call CultureInfo.get_CalendarType, X0
	097 Move X8, [X26]
	098 Move W9, W20
	099 ShiftRight W9, 8
	100 And W9, W9, 0x7FFF
	101 Move W25, [X19+32]
	102 Move X26, [X19+104]
	103 NotImplemented "Instruction STRH not yet implemented."
	104 Move W9, [X8+224]
	105 Move W27, W0
	106 Compare W9, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X8
	109 Call 0x1C17DFC
	110 Add X0, X31, 44
	111 Move X1, X31
	112 And W20, W20, 1
	113 Call Char.ToString, X0
	114 Move W8, [X31+40]
	115 Move [X31+24], X0
	116 Move X0, X23
	117 Move W2, W24
	118 And W1, W8, 1
	119 Move W3, W27
	120 Move W4, W25
	121 Move X5, X26
	122 Move W6, W21
	123 Move W7, W22
	124 Move [X31+16], W20
	125 Move [X31+8], W29
	126 Move [X31], W28
	127 Call CultureData.GetCultureData, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	128 Move [X19+192], X0
	129 Call CultureData.get_Invariant
	130 Move [X19+192], X0
	131 And W1, W22, 1
	132 Move X0, X19
	133 Call CultureInfo.ConstructInvariant, X0, X1
	134 Move X20, [X31+128]
	135 Move X19, [X31+136]
	136 Move X22, [X31+112]
	137 Move X21, [X31+120]
	138 Move X24, [X31+96]
	139 Move X23, [X31+104]
	140 Move X26, [X31+80]
	141 Move X25, [X31+88]
	142 Move X28, [X31+64]
	143 Move X27, [X31+72]
	144 Move X29, [X31+48]
	145 Move X30, [X31+56]
	146 Add X31, X31, 144
	147 Return 
	148 Move X0, 0xDB0000
	149 Move X0, [X0+1320]
	150 Call 0x1C17D08
	151 Call 0x1C17F10
	152 Move X19, X0
	153 Move X0, 0xDB3000
	154 Move X0, [X0+1416]
	155 Call 0x1C17D08
	156 Move X1, X0
	157 Move X0, X19
	158 Move X2, X31
	159 Call ArgumentNullException..ctor, X0, X1
	160 Move X0, 0xDAD000
	161 Move X0, [X0+3144]
	162 Call 0x1C17D08
	163 Call 0x19913D0
	164 Move X0, X21
	165 Call CultureInfo.CreateNotFoundException, X0
	166 Move X19, X0
	167 Move X0, 0xDE1000
	168 Move X0, [X0+2864]
	169 Call 0x1C17D08
	170 Move X1, X0
	171 Move X0, X19
	172 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x03349F90 MOVZ W8, 0xA080
	0x03349F94 MOVK W8, 0x382B0000
	0x03349F98 CMP W0, W8
	0x03349F9C B.EQ 0x334AFF8
	0x03349FA0 MOVZ W8, 0x3866
	0x03349FA4 MOVK W8, 0x38450000
	0x03349FA8 CMP W0, W8
	0x03349FAC B.NE 0x334B88C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object..ctor, X0
	006 Move W8, 1
	007 Move [X19+176], W8
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 

Method: System.Void insert_into_shared_tables(System.Globalization.CultureInfo c)

Disassembly:
	0x03349FB0 ADRP X8, 0xDE0000
	0x03349FB4 LDR X8, [X8 + 0xDD0]
	0x03349FB8 MOV X0, X20
	0x03349FBC MOV X2, X31
	0x03349FC0 LDR X1, [X8]
	0x03349FC4 BL 0x321BA08
	0x03349FC8 TBZ X0, 0x0, 0x334B88C
	0x03349FCC MOVZ W19, 0x449
	0x03349FD0 B 0x334B858
	0x03349FD4 MOVZ W8, 0xC888
	0x03349FD8 MOVK W8, 0x55390000
	0x03349FDC CMP W0, W8
	0x03349FE0 B.HI 0x334A8FC
	0x03349FE4 MOVZ W8, 0xCBE
	0x03349FE8 MOVK W8, 0x552E0000
	0x03349FEC CMP W0, W8
	0x03349FF0 B.EQ 0x334B01C
	0x03349FF4 MOVZ W8, 0xC888
	0x03349FF8 MOVK W8, 0x55390000
	0x03349FFC CMP W0, W8
	0x0334A000 B.NE 0x334B88C
	0x0334A004 ADRP X8, 0xDDF000
	0x0334A008 LDR X8, [X8 + 0xC30]
	0x0334A00C MOV X0, X20
	0x0334A010 MOV X2, X31
	0x0334A014 LDR X1, [X8]
	0x0334A018 BL 0x321BA08
	0x0334A01C TBZ X0, 0x0, 0x334B88C
	0x0334A020 MOVZ W19, 0x484
	0x0334A024 B 0x334B858
	0x0334A028 MOVZ W8, 0x18D0
	0x0334A02C MOVK W8, 0x45520000
	0x0334A030 CMP W0, W8
	0x0334A034 B.HI 0x334A950
	0x0334A038 MOVZ W8, 0x4739
	0x0334A03C MOVK W8, 0x454E0000
	0x0334A040 CMP W0, W8
	0x0334A044 B.EQ 0x334B040
	0x0334A048 MOVZ W8, 0x18D0
	0x0334A04C MOVK W8, 0x45520000
	0x0334A050 CMP W0, W8
	0x0334A054 B.NE 0x334B88C
	0x0334A058 ADRP X8, 0xDDF000
	0x0334A05C LDR X8, [X8 + 0xD58]
	0x0334A060 B 0x334AC7C
	0x0334A064 MOVZ W8, 0x718D
	0x0334A068 MOVK W8, 0x63360000
	0x0334A06C CMP W0, W8
	0x0334A070 B.HI 0x334A9A4
	0x0334A074 MOVZ W8, 0xBE01
	0x0334A078 MOVK W8, 0x625F0000
	0x0334A07C CMP W0, W8
	0x0334A080 B.EQ 0x334B064
	0x0334A084 MOVZ W8, 0x718D
	0x0334A088 MOVK W8, 0x63360000
	0x0334A08C CMP W0, W8
	0x0334A090 B.NE 0x334B88C
	0x0334A094 ADRP X8, 0xDDF000
	0x0334A098 LDR X8, [X8 + 0xF00]
	0x0334A09C MOV X0, X20
	0x0334A0A0 MOV X2, X31
	0x0334A0A4 LDR X1, [X8]
	0x0334A0A8 BL 0x321BA08
	0x0334A0AC TBZ X0, 0x0, 0x334B88C
	0x0334A0B0 MOVZ W19, 0x814
	0x0334A0B4 B 0x334B858
	0x0334A0B8 MOVZ W8, 0xF153
	0x0334A0BC MOVK W8, 0x40240000
	0x0334A0C0 CMP W0, W8
	0x0334A0C4 B.HI 0x334A9F8
	0x0334A0C8 MOVZ W8, 0x7425
	0x0334A0CC MOVK W8, 0x40200000
	0x0334A0D0 CMP W0, W8
	0x0334A0D4 B.EQ 0x334B088
	0x0334A0D8 MOVZ W8, 0xF153
	0x0334A0DC MOVK W8, 0x40240000
	0x0334A0E0 CMP W0, W8
	0x0334A0E4 B.NE 0x334B88C
	0x0334A0E8 ADRP X8, 0xDDF000
	0x0334A0EC LDR X8, [X8 + 0xDF0]
	0x0334A0F0 MOV X0, X20
	0x0334A0F4 MOV X2, X31
	0x0334A0F8 LDR X1, [X8]
	0x0334A0FC BL 0x321BA08
	0x0334A100 TBZ X0, 0x0, 0x334B88C
	0x0334A104 MOVZ W19, 0x45E
	0x0334A108 B 0x334B858
	0x0334A10C MOVZ W8, 0xEAED
	0x0334A110 MOVK W8, 0x5D310000
	0x0334A114 CMP W0, W8
	0x0334A118 B.HI 0x334AA4C
	0x0334A11C MOVZ W8, 0x1EFA
	0x0334A120 MOVK W8, 0x5D250000
	0x0334A124 CMP W0, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1094000
	006 Move X21, 0xDAD000
	007 Move W8, [X20+3461]
	008 Move X21, [X21+3144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {37}
	014 Move X0, 0xDAD000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move X0, 0xDE1000
	018 Move X0, [X0+2888]
	019 Call 0x1C17CF4
	020 Move X0, 0xDE1000
	021 Move X0, [X0+2896]
	022 Call 0x1C17CF4
	023 Move X0, 0xDE1000
	024 Move X0, [X0+2904]
	025 Call 0x1C17CF4
	026 Move X0, 0xDE0000
	027 Move X0, [X0+2912]
	028 Call 0x1C17CF4
	029 Move X0, 0xDE0000
	030 Move X0, [X0+2920]
	031 Call 0x1C17CF4
	032 Move X0, 0xDE0000
	033 Move X0, [X0+2928]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+3461], W8
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X21]
	043 Move X8, [X0+184]
	044 Move X8, [X8+40]
	045 Compare X8, 0
	046 JumpIfNotEqual {76}
	047 Move X8, 0xDE0000
	048 Move X8, [X8+2920]
	049 Move X0, [X8]
	050 Call 0x1C17F10
	051 Move X8, 0xDE0000
	052 Move X8, [X8+2896]
	053 Move X20, X0
	054 Move X1, [X8]
	055 Call Dictionary`2<Int32, Object>..ctor, X0
	056 Move X0, [X21]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X21]
	062 Move X8, [X0+184]
	063 Move [X8+40], X20
	064 Move X8, 0xDE0000
	065 Move X8, [X8+2928]
	066 Move X0, [X8]
	067 Call 0x1C17F10
	068 Move X8, 0xDE0000
	069 Move X8, [X8+2888]
	070 Move X20, X0
	071 Move X1, [X8]
	072 Call Dictionary`2<Object, Object>..ctor, X0
	073 Move X0, [X21]
	074 Move X8, [X0+184]
	075 Move [X8+48], X20
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Call 0x1C17DFC
	080 Move X0, [X21]
	081 Compare X19, 0
	082 JumpIfEqual {109}
	083 Move X8, [X0+184]
	084 Move X0, [X8+40]
	085 Compare X0, 0
	086 JumpIfEqual {109}
	087 Move X8, 0xDE0000
	088 Move X8, [X8+2904]
	089 Move W1, [X19+20]
	090 Move X2, X19
	091 Move X3, [X8]
	092 Call Dictionary`2<Int32, Object>.set_Item, X0, X1, X2
	093 Move X8, [X21]
	094 Move X8, [X8+184]
	095 Move X0, [X8+48]
	096 Compare X0, 0
	097 JumpIfEqual {109}
	098 Move X8, 0xDE0000
	099 Move X8, [X8+2912]
	100 Move X1, [X19+72]
	101 Move X2, X19
	102 Move X20, [X31+16]
	103 Move X19, [X31+24]
	104 Move X3, [X8]
	105 Move X30, [X31+32]
	106 Move X21, [X31+40]
	107 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	108 Return 
	109 Call 0x1C17F20

Method: System.Globalization.CultureInfo GetCultureInfo(System.Int32 culture)

Disassembly:
	0x0333D1C8 LDR W8, [X0 + 0xE0]
	0x0333D1CC CBNZ W8, 0x333D1D8
	0x0333D1D0 BL 0x1C16DFC
	0x0333D1D4 LDR X0, [X20]
	0x0333D1D8 LDR X8, [X0 + 0xB8]
	0x0333D1DC LDR X8, [X8 + 0x18]
	0x0333D1E0 CBZ X8, 0x333D374
	0x0333D1E4 LDR W10, [X8 + 0x18]
	0x0333D1E8 MOVN X9, 0x24CF
	0x0333D1EC B 0x333D33C
	0x0333D1F0 MOVZ W0, 0x39C
	0x0333D1F4 B 0x333D350
	0x0333D1F8 MOVZ W0, 0x49
	0x0333D1FC B 0x333D350
	0x0333D200 MOVZ W0, 0x3A1
	0x0333D204 B 0x333D350
	0x0333D208 MOVZ W0, 0x1E60
	0x0333D20C B 0x333D350
	0x0333D210 ADRP X20, 0xDEB000
	0x0333D214 LDR X20, [X20 + 0xB90]
	0x0333D218 LDR X0, [X20]
	0x0333D21C LDR W8, [X0 + 0xE0]
	0x0333D220 CBNZ W8, 0x333D22C
	0x0333D224 BL 0x1C16DFC
	0x0333D228 LDR X0, [X20]
	0x0333D22C LDR X8, [X0 + 0xB8]
	0x0333D230 LDR X8, [X8 + 0x20]
	0x0333D234 CBZ X8, 0x333D374
	0x0333D238 LDR W10, [X8 + 0x18]
	0x0333D23C MOVN X9, 0x2C2F
	0x0333D240 B 0x333D33C
	0x0333D244 CMP W8, 0x3F0
	0x0333D248 B.NE 0x333D254
	0x0333D24C MOVZ W0, 0x39A
	0x0333D250 B 0x333D350
	0x0333D254 MOV X0, X20
	0x0333D258 BL 0x333C798
	0x0333D25C TBNZ X0, 0x0, 0x333CF2C
	0x0333D260 AND W8, W19, 0xFFFF
	0x0333D264 CMP W8, 0x69
	0x0333D268 B.NE 0x333D274
	0x0333D26C MOVZ W0, 0x130
	0x0333D270 B 0x333D350
	0x0333D274 CMP W8, 0x7F
	0x0333D278 B.HI 0x333CF2C
	0x0333D27C SUB W8, W19, 0x61
	0x0333D280 AND W8, W8, 0xFFFF
	0x0333D284 AND W9, W19, 0xFFFFFFDF
	0x0333D288 CMP W8, 0x19
	0x0333D28C CSEL W0, W19, W9, HI
	0x0333D290 B 0x333D350
	0x0333D294 MOVZ W0, 0x3A6
	0x0333D298 B 0x333D350
	0x0333D29C MOVZ W0, 0x3A0
	0x0333D2A0 B 0x333D350
	0x0333D2A4 ADRP X20, 0xDEB000
	0x0333D2A8 LDR X20, [X20 + 0xB90]
	0x0333D2AC LDR X0, [X20]
	0x0333D2B0 LDR W8, [X0 + 0xE0]
	0x0333D2B4 CBNZ W8, 0x333D2C0
	0x0333D2B8 BL 0x1C16DFC
	0x0333D2BC LDR X0, [X20]
	0x0333D2C0 LDR X8, [X0 + 0xB8]
	0x0333D2C4 LDR X8, [X8 + 0x28]
	0x0333D2C8 CBZ X8, 0x333D374
	0x0333D2CC LDR W10, [X8 + 0x18]
	0x0333D2D0 MOVN X9, 0x2CFF
	0x0333D2D4 B 0x333D33C
	0x0333D2D8 ADRP X20, 0xDEB000
	0x0333D2DC LDR X20, [X20 + 0xB90]
	0x0333D2E0 LDR X0, [X20]
	0x0333D2E4 LDR W8, [X0 + 0xE0]
	0x0333D2E8 CBNZ W8, 0x333D2F4
	0x0333D2EC BL 0x1C16DFC
	0x0333D2F0 LDR X0, [X20]
	0x0333D2F4 LDR X8, [X0 + 0xB8]
	0x0333D2F8 LDR X8, [X8 + 0x30]
	0x0333D2FC CBZ X8, 0x333D374
	0x0333D300 LDR W10, [X8 + 0x18]
	0x0333D304 MOVN X9, 0xA640
	0x0333D308 B 0x333D33C
	0x0333D30C ADRP X20, 0xDEB000
	0x0333D310 LDR X20, [X20 + 0xB90]
	0x0333D314 LDR X0, [X20]
	0x0333D318 LDR W8, [X0 + 0xE0]
	0x0333D31C CBNZ W8, 0x333D328
	0x0333D320 BL 0x1C16DFC
	0x0333D324 LDR X0, [X20]
	0x0333D328 LDR X8, [X0 + 0xB8]
	0x0333D32C LDR X8, [X8 + 0x38]
	0x0333D330 CBZ X8, 0x333D374
	0x0333D334 LDR W10, [X8 + 0x18]
	0x0333D338 MOVN X9, 0xA722
	0x0333D33C ADD X9, X9, W19, UXTH
	0x0333D340 CMP W9, W10
	0x0333D344 B.CS 0x333D378
	0x0333D348 ADD X8, X8, X9, 0x1, LSL
	0x0333D34C LDRH W0, [X8 + 0x20]
	0x0333D350 LDP X20, X19, [X31 + 0x10]
	0x0333D354 LDP X30, X21, [X31], #0x20
	0x0333D358 RET
	0x0333D35C SUB W0, W19, 0x20
	0x0333D360 B 0x333D350
	0x0333D364 MOVZ W0, 0xA77D
	0x0333D368 B 0x333D350
	0x0333D36C MOVZ W0, 0x2C63
	0x0333D370 B 0x333D350
	0x0333D374 BL 0x1C16F20
	0x0333D378 BL 0x1C16F28
	0x0333D37C CBZ X1, 0x333D384
	0x0333D380 B 0x333D3D0
	0x0333D384 STP X30, X19, [X31 - 0x10]!
	0x0333D388 ADRP X0, 0xDBB000
	0x0333D38C LDR X0, [X0 + 0x528]
	0x0333D390 BL 0x1C16D08
	0x0333D394 BL 0x1C16F10
	0x0333D398 MOV X19, X0
	0x0333D39C ADRP X0, 0xDB8000
	0x0333D3A0 LDR X0, [X0 + 0xC80]
	0x0333D3A4 BL 0x1C16D08
	0x0333D3A8 MOV X1, X0
	0x0333D3AC MOV X0, X19
	0x0333D3B0 MOV X2, X31
	0x0333D3B4 BL 0x330E100
	0x0333D3B8 ADRP X0, 0xDEB000
	0x0333D3BC LDR X0, [X0 + 0xB98]
	0x0333D3C0 BL 0x1C16D08
	0x0333D3C4 MOV X1, X0
	0x0333D3C8 MOV X0, X19
	0x0333D3CC BL 0x1C16DEC
	0x0333D3D0 STR X30, [X31 - 0x40]!
	0x0333D3D4 STP X24, X23, [X31 + 0x10]
	0x0333D3D8 STP X22, X21, [X31 + 0x20]
	0x0333D3DC STP X20, X19, [X31 + 0x30]
	0x0333D3E0 ADRP X21, 0x109F000
	0x0333D3E4 LDRB W8, [X21 + 0xD3A]
	0x0333D3E8 MOV X19, X1
	0x0333D3EC MOV X20, X0
	0x0333D3F0 TBNZ X8, 0x0, 0x333D408
	0x0333D3F4 ADRP X0, 0xDB8000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X19, 0x10A0000
	008 Move W8, [X19+3462]
	009 Move W20, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xDB9000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move X0, 0xDEC000
	018 Move X0, [X0+2896]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+3462], W8
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move [X31+24], X31
	024 Move X22, 0xDB9000
	025 Move X22, [X22+3144]
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X19, [X8+8]
	034 Move [X31+12], W31
	035 Add X1, X31, 12
	036 Move X0, X19
	037 Move X2, X31
	038 Call Monitor.Enter, X0, X1
	039 Move X8, [X22]
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {46}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X8, [X22]
	046 Move X9, [X8+184]
	047 Move X0, [X9+40]
	048 Compare X0, 0
	049 JumpIfEqual {71}
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {60}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X8, [X22]
	056 Move X8, [X8+184]
	057 Move X0, [X8+40]
	058 Compare X0, 0
	059 JumpIfEqual {129}
	060 Move X8, 0xDEC000
	061 Move X8, [X8+2896]
	062 Move X3, [X8]
	063 Add X2, X31, 24
	064 Move W1, W20
	065 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {86}
	070 Move X8, [X22]
	071 Move X0, X8
	072 Call 0x1C17F10
	073 Move X21, X0
	074 Move W3, 1
	075 Move W1, W20
	076 Move W2, W31
	077 Call CultureInfo..ctor, X0, X1, X2, X3
	078 Move X0, [X22]
	079 Move [X31+24], X21
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X21
	085 Call CultureInfo.insert_into_shared_tables, X0
	086 Move X21, [X31+24]
	087 Move X20, X31
	088 Move W8, [X31+12]
	089 Compare W8, 0
	090 JumpIfEqual {94}
	091 Move X0, X19
	092 Move X1, X31
	093 Call Monitor.Exit, X0
	094 Compare X20, 0
	095 JumpIfNotEqual {127}
	096 Move X0, X21
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X30, [X31+16]
	102 Add X31, X31, 64
	103 Return X0
	104 Move X0, 0xDBF000
	105 Move X0, [X0+1888]
	106 Call 0x1C17D08
	107 Call 0x1C17F10
	108 Move X19, X0
	109 Move X0, 0xDE5000
	110 Move X0, [X0+4080]
	111 Call 0x1C17D08
	112 Move X20, X0
	113 Move X0, 0xDEA000
	114 Move X0, [X0+3368]
	115 Call 0x1C17D08
	116 Move X2, X0
	117 Move X0, X19
	118 Move X1, X20
	119 Move X3, X31
	120 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	121 Move X0, 0xDEC000
	122 Move X0, [X0+2904]
	123 Call 0x1C17D08
	124 Move X1, X0
	125 Move X0, X19
	126 Call 0x1C17DEC
	127 Move X0, X20
	128 Call 0x1C17F18
	129 Call 0x1C17F20
	130 Move X21, X0
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, X21
	133 Call 0x3EB2AD0
	134 Move X20, [X0]
	135 Call 0x3EB2AE0
	136 Move X21, X31
	137 Move X20, X31
	138 Move X21, X0
	139 Move W8, [X31+12]
	140 Compare W8, 0
	141 JumpIfEqual {145}
	142 Move X0, X19
	143 Move X1, X31
	144 Call Monitor.Exit, X0
	145 Compare X20, 0
	146 JumpIfNotEqual {149}
	147 Move X0, X21
	148 Call 0x1D2D690
	149 Move X0, X20
	150 Call 0x1C17F18
	151 Call 0x1991590

Method: System.Globalization.CultureInfo GetCultureInfo(System.String name)

Disassembly:
	0x0333D3F8 LDR X0, [X0 + 0x278]
	0x0333D3FC BL 0x1C16CF4
	0x0333D400 MOVZ W8, 0x1
	0x0333D404 STRB W8, [X21 + 0xD3A]
	0x0333D408 CBZ X19, 0x333D4B0
	0x0333D40C LDR W0, [X19 + 0x10]
	0x0333D410 CBZ W0, 0x333D440
	0x0333D414 MOV X1, X31
	0x0333D418 BL 0x32277A4
	0x0333D41C MOV X21, X0
	0x0333D420 MOV X0, X31
	0x0333D424 BL 0x32C1424
	0x0333D428 MOV W22, W0
	0x0333D42C CBZ X21, 0x333D458
	0x0333D430 MOV X0, X31
	0x0333D434 BL 0x32C1424
	0x0333D438 ADD X23, X21, W0, SXTW
	0x0333D43C B 0x333D45C
	0x0333D440 ADRP X8, 0xDB8000
	0x0333D444 LDR X8, [X8 + 0x278]
	0x0333D448 LDR X8, [X8]
	0x0333D44C LDR X8, [X8 + 0xB8]
	0x0333D450 LDR X21, [X8]
	0x0333D454 B 0x333D498
	0x0333D458 MOV X23, X21
	0x0333D45C LDR W8, [X19 + 0x10]
	0x0333D460 CMP W8, 0x1
	0x0333D464 B.LT 0x333D498
	0x0333D468 MOV W24, W31
	0x0333D46C ADD X22, X19, W22, SXTW
	0x0333D470 LDR X8, [X20]
	0x0333D474 MOV X0, X20
	0x0333D478 LDP X9, X2, [X8 + 0x1C8]
	0x0333D47C LDRH W1, [X22], #0x2
	0x0333D480 BLR X9
	0x0333D484 STRH W0, [X23], #0x2
	0x0333D488 LDR W8, [X19 + 0x10]
	0x0333D48C ADD W24, W24, 0x1
	0x0333D490 CMP W24, W8
	0x0333D494 B.LT 0x333D470
	0x0333D498 MOV X0, X21
	0x0333D49C LDP X20, X19, [X31 + 0x30]
	0x0333D4A0 LDP X22, X21, [X31 + 0x20]
	0x0333D4A4 LDP X24, X23, [X31 + 0x10]
	0x0333D4A8 LDR X30, [X31], #0x40
	0x0333D4AC RET
	0x0333D4B0 BL 0x1C16F20
	0x0333D4B4 STP X30, X21, [X31 - 0x20]!
	0x0333D4B8 STP X20, X19, [X31 + 0x10]
	0x0333D4BC ADRP X21, 0x109F000
	0x0333D4C0 LDRB W8, [X21 + 0xD37]
	0x0333D4C4 MOV X20, X1
	0x0333D4C8 MOV X19, X0
	0x0333D4CC TBNZ X8, 0x0, 0x333D4E4
	0x0333D4D0 ADRP X0, 0xDEB000
	0x0333D4D4 LDR X0, [X0 + 0xAF8]
	0x0333D4D8 BL 0x1C16CF4
	0x0333D4DC MOVZ W8, 0x1
	0x0333D4E0 STRB W8, [X21 + 0xD37]
	0x0333D4E4 CBZ X20, 0x333D520
	0x0333D4E8 ADRP X8, 0xDEB000
	0x0333D4EC LDR X8, [X8 + 0xAF8]
	0x0333D4F0 LDR X9, [X20]
	0x0333D4F4 LDR X8, [X8]
	0x0333D4F8 LDRB W11, [X9 + 0x130]
	0x0333D4FC LDRB W10, [X8 + 0x130]
	0x0333D500 CMP W11, W10
	0x0333D504 B.CC 0x333D520
	0x0333D508 LDR X9, [X9 + 0xC8]
	0x0333D50C ADD X9, X9, X10, 0x3, LSL
	0x0333D510 LDUR X9, [X9 - 0x8]
	0x0333D514 CMP X9, X8
	0x0333D518 CSEL X8, X20, X31, EQ
	0x0333D51C B.EQ 0x333D530
	0x0333D520 LDP X20, X19, [X31 + 0x10]
	0x0333D524 MOV W0, W31
	0x0333D528 LDP X30, X21, [X31], #0x20
	0x0333D52C RET
	0x0333D530 CBZ X8, 0x333D550
	0x0333D534 LDR X0, [X19 + 0x30]
	0x0333D538 CBZ X0, 0x333D550
	0x0333D53C LDR X1, [X8 + 0x30]
	0x0333D540 LDP X20, X19, [X31 + 0x10]
	0x0333D544 MOV X2, X31
	0x0333D548 LDP X30, X21, [X31], #0x20
	0x0333D54C B 0x322693C
	0x0333D550 BL 0x1C16F20
	0x0333D554 STR X30, [X31 - 0x10]!
	0x0333D558 LDR X0, [X0 + 0x30]
	0x0333D55C CBZ X0, 0x333D570
	0x0333D560 LDR X8, [X0]
	0x0333D564 LDP X2, X1, [X8 + 0x158]
	0x0333D568 LDR X30, [X31], #0x10
	0x0333D56C BR X2
	0x0333D570 BL 0x1C16F20
	0x0333D574 STR X30, [X31 - 0x20]!
	0x0333D578 STP X20, X19, [X31 + 0x10]
	0x0333D57C ADRP X20, 0x109F000
	0x0333D580 LDRB W8, [X20 + 0xD38]
	0x0333D584 MOV X19, X0
	0x0333D588 TBNZ X8, 0x0, 0x333D5A0
	0x0333D58C ADRP X0, 0xDEB000
	0x0333D590 LDR X0, [X0 + 0xBA0]
	0x0333D594 BL 0x1C16CF4
	0x0333D598 MOVZ W8, 0x1
	0x0333D59C STRB W8, [X20 + 0xD38]
	0x0333D5A0 LDR X8, [X19 + 0x28]
	0x0333D5A4 CBZ X8, 0x333D5C8
	0x0333D5A8 ADRP X9, 0xDEB000
	0x0333D5AC LDR X9, [X9 + 0xBA0]
	0x0333D5B0 LDR X1, [X8 + 0x58]
	0x0333D5B4 LDP X20, X19, [X31 + 0x10]
	0x0333D5B8 MOV X2, X31
	0x0333D5BC LDR X0, [X9]
	0x0333D5C0 LDR X30, [X31], #0x20
	0x0333D5C4 B 0x321B938
	0x0333D5C8 BL 0x1C16F20
	0x0333D5CC SUB X31, X31, 0x80
	0x0333D5D0 STP X29, X30, [X31 + 0x20]
	0x0333D5D4 STP X28, X27, [X31 + 0x30]
	0x0333D5D8 STP X26, X25, [X31 + 0x40]
	0x0333D5DC STP X24, X23, [X31 + 0x50]
	0x0333D5E0 STP X22, X21, [X31 + 0x60]
	0x0333D5E4 STP X20, X19, [X31 + 0x70]
	0x0333D5E8 ADRP X21, 0x109F000
	0x0333D5EC LDRB W8, [X21 + 0xD39]
	0x0333D5F0 MOV X19, X1
	0x0333D5F4 MOV X20, X0
	0x0333D5F8 STR X1, [X31 + 0x18]
	0x0333D5FC TBNZ X8, 0x0, 0x333D620
	0x0333D600 ADRP X0, 0xDB8000
	0x0333D604 LDR X0, [X0 + 0x170]
	0x0333D608 BL 0x1C16CF4
	0x0333D60C ADRP X0, 0xDB6000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X19, 0x10A0000
	008 Move W8, [X19+3463]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xDB9000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move X0, 0xDEC000
	018 Move X0, [X0+2912]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+3463], W8
	022 Move [X31+24], X31
	023 Compare X20, 0
	024 JumpIfEqual {105}
	025 Move X22, 0xDB9000
	026 Move X22, [X22+3144]
	027 Move X0, [X22]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X22]
	033 Move X8, [X0+184]
	034 Move X19, [X8+8]
	035 Move [X31+12], W31
	036 Add X1, X31, 12
	037 Move X0, X19
	038 Move X2, X31
	039 Call Monitor.Enter, X0, X1
	040 Move X8, [X22]
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {47}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X22]
	047 Move X9, [X8+184]
	048 Move X0, [X9+48]
	049 Compare X0, 0
	050 JumpIfEqual {72}
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {61}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Move X8, [X22]
	057 Move X8, [X8+184]
	058 Move X0, [X8+48]
	059 Compare X0, 0
	060 JumpIfEqual {125}
	061 Move X8, 0xDEC000
	062 Move X8, [X8+2912]
	063 Move X3, [X8]
	064 Add X2, X31, 24
	065 Move X1, X20
	066 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {87}
	071 Move X8, [X22]
	072 Move X0, X8
	073 Call 0x1C17F10
	074 Move X21, X0
	075 Move W3, 1
	076 Move X1, X20
	077 Move W2, W31
	078 Call CultureInfo..ctor, X0, X1, X2, X3
	079 Move X0, [X22]
	080 Move [X31+24], X21
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X21
	086 Call CultureInfo.insert_into_shared_tables, X0
	087 Move X21, [X31+24]
	088 Move X20, X31
	089 Move W8, [X31+12]
	090 Compare W8, 0
	091 JumpIfEqual {95}
	092 Move X0, X19
	093 Move X1, X31
	094 Call Monitor.Exit, X0
	095 Compare X20, 0
	096 JumpIfNotEqual {123}
	097 Move X0, X21
	098 Move X20, [X31+48]
	099 Move X19, [X31+56]
	100 Move X22, [X31+32]
	101 Move X21, [X31+40]
	102 Move X30, [X31+16]
	103 Add X31, X31, 64
	104 Return X0
	105 Move X0, 0xDBC000
	106 Move X0, [X0+1320]
	107 Call 0x1C17D08
	108 Call 0x1C17F10
	109 Move X19, X0
	110 Move X0, 0xDBF000
	111 Move X0, [X0+1416]
	112 Call 0x1C17D08
	113 Move X1, X0
	114 Move X0, X19
	115 Move X2, X31
	116 Call ArgumentNullException..ctor, X0, X1
	117 Move X0, 0xDEC000
	118 Move X0, [X0+2920]
	119 Call 0x1C17D08
	120 Move X1, X0
	121 Move X0, X19
	122 Call 0x1C17DEC
	123 Move X0, X20
	124 Call 0x1C17F18
	125 Call 0x1C17F20
	126 Move X21, X0
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X0, X21
	129 Call 0x3EB2AD0
	130 Move X20, [X0]
	131 Call 0x3EB2AE0
	132 Move X21, X31
	133 Move X20, X31
	134 Move X21, X0
	135 Move W8, [X31+12]
	136 Compare W8, 0
	137 JumpIfEqual {141}
	138 Move X0, X19
	139 Move X1, X31
	140 Call Monitor.Exit, X0
	141 Compare X20, 0
	142 JumpIfNotEqual {145}
	143 Move X0, X21
	144 Call 0x1D2D690
	145 Move X0, X20
	146 Call 0x1C17F18
	147 Call 0x1991590

Method: System.Globalization.CultureInfo CreateCulture(System.String name, System.Boolean reference)

Disassembly:
	0x0334A128 B.EQ 0x334B0AC
	0x0334A12C MOVZ W8, 0xEAED
	0x0334A130 MOVK W8, 0x5D310000
	0x0334A134 CMP W0, W8
	0x0334A138 B.NE 0x334B88C
	0x0334A13C ADRP X8, 0xDD7000
	0x0334A140 LDR X8, [X8 + 0x948]
	0x0334A144 MOV X0, X20
	0x0334A148 MOV X2, X31
	0x0334A14C LDR X1, [X8]
	0x0334A150 BL 0x321BA08
	0x0334A154 TBZ X0, 0x0, 0x334B88C
	0x0334A158 MOVZ W19, 0x427
	0x0334A15C B 0x334B858
	0x0334A160 MOVZ W8, 0x20AF
	0x0334A164 MOVK W8, 0x4A520000
	0x0334A168 CMP W0, W8
	0x0334A16C B.HI 0x334AAA0
	0x0334A170 MOVZ W8, 0xFB2C
	0x0334A174 MOVK W8, 0x49C90000
	0x0334A178 CMP W0, W8
	0x0334A17C B.EQ 0x334B0D0
	0x0334A180 MOVZ W8, 0x20AF
	0x0334A184 MOVK W8, 0x4A520000
	0x0334A188 CMP W0, W8
	0x0334A18C B.NE 0x334B88C
	0x0334A190 ADRP X8, 0xDDF000
	0x0334A194 LDR X8, [X8 + 0xD78]
	0x0334A198 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1093000
	006 Move W8, [X20+3464]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDAC000
	013 Move X0, [X0+3144]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3464], W8
	017 Compare X19, 0
	018 JumpIfEqual {37}
	019 Move X9, 0xDAC000
	020 Move W8, [X19+16]
	021 Move X9, [X9+3144]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, [X9]
	024 NotImplemented "Instruction CSET not yet implemented."
	025 Call 0x1C17F10
	026 Move X1, X19
	027 Move W2, W20
	028 Move W3, W31
	029 Move X21, X0
	030 Call CultureInfo..ctor, X0, X1, X2, X3
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X0, X21
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Call 0x1C17F20

Method: System.Globalization.CultureInfo CreateSpecificCulture(System.String name)

Disassembly:
	0x03348554 CBNZ X20, 0x33484E4
	0x03348558 BL 0x1C16F20
	0x0334855C STR X30, [X31 - 0x20]!
	0x03348560 STP X20, X19, [X31 + 0x10]
	0x03348564 LDRB W8, [X0 + 0xB0]
	0x03348568 MOV X19, X0
	0x0334856C MOV X20, X1
	0x03348570 CBNZ W8, 0x3348588
	0x03348574 LDR W1, [X19 + 0x14]
	0x03348578 MOV X0, X19
	0x0334857C BL 0x1C42B00
	0x03348580 MOVZ W8, 0x1
	0x03348584 STRB W8, [X19 + 0xB0]
	0x03348588 LDRB W8, [X19 + 0x10]
	0x0334858C CBNZ W8, 0x33485A8
	0x03348590 CBZ X20, 0x33485DC
	0x03348594 BL 0x1C16D44
	0x03348598 STR X20, [X19 + 0x38]
	0x0334859C LDP X20, X19, [X31 + 0x10]
	0x033485A0 LDR X30, [X31], #0x20
	0x033485A4 RET
	0x033485A8 ADRP X0, 0xDAB000
	0x033485AC LDR X0, [X0 + 0x5B0]
	0x033485B0 BL 0x1C16D08
	0x033485B4 BL 0x1C16F10
	0x033485B8 MOV X19, X0
	0x033485BC ADRP X0, 0xDE1000
	0x033485C0 LDR X0, [X0 + 0xAC0]
	0x033485C4 BL 0x1C16D08
	0x033485C8 MOV X1, X0
	0x033485CC MOV X0, X19
	0x033485D0 MOV X2, X31
	0x033485D4 BL 0x337DF1C
	0x033485D8 B 0x334860C
	0x033485DC ADRP X0, 0xDB0000
	0x033485E0 LDR X0, [X0 + 0x528]
	0x033485E4 BL 0x1C16D08
	0x033485E8 BL 0x1C16F10
	0x033485EC MOV X19, X0
	0x033485F0 ADRP X0, 0xDE1000
	0x033485F4 LDR X0, [X0 + 0xAD8]
	0x033485F8 BL 0x1C16D08
	0x033485FC MOV X1, X0
	0x03348600 MOV X0, X19
	0x03348604 MOV X2, X31
	0x03348608 BL 0x330E100
	0x0334860C ADRP X0, 0xDE1000
	0x03348610 LDR X0, [X0 + 0xAE0]
	0x03348614 BL 0x1C16D08
	0x03348618 MOV X1, X0
	0x0334861C MOV X0, X19
	0x03348620 BL 0x1C16DEC
	0x03348624 STP X30, X19, [X31 - 0x10]!
	0x03348628 LDRB W8, [X0 + 0xB0]
	0x0334862C MOV X19, X0
	0x03348630 CBNZ W8, 0x3348648
	0x03348634 LDR W1, [X19 + 0x14]
	0x03348638 MOV X0, X19
	0x0334863C BL 0x1C42B00
	0x03348640 MOVZ W8, 0x1
	0x03348644 STRB W8, [X19 + 0xB0]
	0x03348648 LDR X0, [X19 + 0x50]
	0x0334864C LDP X30, X19, [X31], #0x10
	0x03348650 RET
	0x03348654 STP X30, X23, [X31 - 0x30]!
	0x03348658 STP X22, X21, [X31 + 0x10]
	0x0334865C STP X20, X19, [X31 + 0x20]
	0x03348660 ADRP X23, 0x1094000
	0x03348664 ADRP X21, 0xDE0000
	0x03348668 ADRP X22, 0xDAB000
	0x0334866C LDRB W8, [X23 + 0xD80]
	0x03348670 LDR X21, [X21 + 0xA98]
	0x03348674 LDR X22, [X22 + 0x6C0]
	0x03348678 MOV X20, X1
	0x0334867C MOV X19, X0
	0x03348680 TBNZ X8, 0x0, 0x33486B0
	0x03348684 ADRP X0, 0xDE0000
	0x03348688 LDR X0, [X0 + 0x330]
	0x0334868C BL 0x1C16CF4
	0x03348690 ADRP X0, 0xDE0000
	0x03348694 LDR X0, [X0 + 0xA98]
	0x03348698 BL 0x1C16CF4
	0x0334869C ADRP X0, 0xDAB000
	0x033486A0 LDR X0, [X0 + 0x6C0]
	0x033486A4 BL 0x1C16CF4
	0x033486A8 MOVZ W8, 0x1
	0x033486AC STRB W8, [X23 + 0xD80]
	0x033486B0 LDR X0, [X22]
	0x033486B4 LDR X21, [X21]
	0x033486B8 LDR W8, [X0 + 0xE0]
	0x033486BC CBNZ W8, 0x33486C4
	0x033486C0 BL 0x1C16DFC
	0x033486C4 MOV X0, X21
	0x033486C8 MOV X1, X31
	0x033486CC BL 0x338C698
	0x033486D0 MOV X1, X0
	0x033486D4 MOV X0, X20
	0x033486D8 MOV X2, X31
	0x033486DC BL 0x3395194
	0x033486E0 TBZ X0, 0x0, 0x33486F4
	0x033486E4 LDR X8, [X19]
	0x033486E8 LDR X2, [X8 + 0x218]
	0x033486EC LDR X1, [X8 + 0x220]
	0x033486F0 B 0x334873C
	0x033486F4 ADRP X8, 0xDE0000
	0x033486F8 LDR X0, [X22]
	0x033486FC LDR X8, [X8 + 0x330]
	0x03348700 LDR W9, [X0 + 0xE0]
	0x03348704 LDR X21, [X8]
	0x03348708 CBNZ W9, 0x3348710
	0x0334870C BL 0x1C16DFC
	0x03348710 MOV X0, X21
	0x03348714 MOV X1, X31
	0x03348718 BL 0x338C698
	0x0334871C MOV X1, X0
	0x03348720 MOV X0, X20
	0x03348724 MOV X2, X31
	0x03348728 BL 0x3395194
	0x0334872C TBZ X0, 0x0, 0x3348750
	0x03348730 LDR X8, [X19]
	0x03348734 LDR X2, [X8 + 0x238]
	0x03348738 LDR X1, [X8 + 0x240]
	0x0334873C MOV X0, X19
	0x03348740 LDP X20, X19, [X31 + 0x20]
	0x03348744 LDP X22, X21, [X31 + 0x10]
	0x03348748 LDP X30, X23, [X31], #0x30
	0x0334874C BR X2
	0x03348750 LDP X20, X19, [X31 + 0x20]
	0x03348754 LDP X22, X21, [X31 + 0x10]
	0x03348758 MOV X0, X31
	0x0334875C LDP X30, X23, [X31], #0x30
	0x03348760 RET
	0x03348764 B 0x1C42B00
	0x03348768 B 0x1C42D08
	0x0334876C STR X30, [X31 - 0x40]!
	0x03348770 STP X24, X23, [X31 + 0x10]
	0x03348774 STP X22, X21, [X31 + 0x20]
	0x03348778 STP X20, X19, [X31 + 0x30]
	0x0334877C ADRP X21, 0x1094000
	0x03348780 LDRB W8, [X21 + 0xD81]
	0x03348784 MOV W20, W1
	0x03348788 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X19, 0x1095000
	015 Move W8, [X19+3465]
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xDAE000
	022 Move X0, [X0+368]
	023 Call 0x1C17CF4
	024 Move X0, 0xDAE000
	025 Move X0, [X0+3144]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+3465], W8
	029 NotImplemented "Instruction STRH not yet implemented."
	030 Compare X20, 0
	031 JumpIfEqual {147}
	032 Move X22, 0xDAE000
	033 Move W8, [X20+16]
	034 Move X22, [X22+3144]
	035 Compare W8, 0
	036 JumpIfEqual {125}
	037 Move X0, X20
	038 Move X1, X31
	039 Call String.ToLowerInvariant, X0
	040 Move X8, [X22]
	041 Move X21, X0
	042 Move X0, X8
	043 Call 0x1C17F10
	044 Move X1, X31
	045 Move X19, X0
	046 Call Object..ctor, X0
	047 Move W8, 1
	048 Move X0, X19
	049 Move X1, X21
	050 Move [X19+176], W8
	051 Call CultureInfo.ConstructLocaleFromName, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {159}
	056 Move X8, [X19]
	057 Move X0, X19
	058 Move X9, [X8+520]
	059 Move X1, [X8+528]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {82}
	065 Move X8, [X19]
	066 Move X0, X19
	067 Move X9, [X8+424]
	068 Move X1, [X8+432]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X8, [X22]
	071 Move X19, X0
	072 Move W9, [X8+224]
	073 Compare W9, 0
	074 JumpIfNotEqual {77}
	075 Move X0, X8
	076 Call 0x1C17DFC
	077 Move X0, X19
	078 Call CultureInfo.CreateSpecificCultureFromNeutral, X0
	079 Move X19, X0
	080 Compare X0, 0
	081 JumpIfEqual {172}
	082 Move X8, [X19+144]
	083 Move X25, 0xDAE000
	084 Move X22, [X19+72]
	085 Move W23, [X19+28]
	086 Move W20, [X8]
	087 Move W28, [X8+4]
	088 Move W27, [X8+8]
	089 Move W21, [X8+12]
	090 Move W29, [X8+16]
	091 Move X25, [X25+368]
	092 Move X0, X19
	093 Call CultureInfo.get_CalendarType, X0
	094 Move X8, [X25]
	095 Move W9, W29
	096 ShiftRight W9, 8
	097 And W9, W9, 0x7FFF
	098 Move W24, [X19+32]
	099 Move X25, [X19+104]
	100 NotImplemented "Instruction STRH not yet implemented."
	101 Move W9, [X8+224]
	102 Move W26, W0
	103 Compare W9, 0
	104 JumpIfNotEqual {107}
	105 Move X0, X8
	106 Call 0x1C17DFC
	107 Add X0, X31, 44
	108 Move X1, X31
	109 And W29, W29, 1
	110 Call Char.ToString, X0
	111 Move [X31+24], X0
	112 Move X0, X22
	113 Move W1, W31
	114 Move W2, W23
	115 Move W3, W26
	116 Move W4, W24
	117 Move X5, X25
	118 Move W6, W20
	119 Move W7, W21
	120 Move [X31+16], W29
	121 Move [X31+8], W28
	122 Move [X31], W27
	123 Call CultureData.GetCultureData, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	124 Move [X19+192], X0
	125 Move X0, [X22]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Call CultureInfo.get_InvariantCulture
	131 Move X19, X0
	132 Move X0, X19
	133 Move X20, [X31+128]
	134 Move X19, [X31+136]
	135 Move X22, [X31+112]
	136 Move X21, [X31+120]
	137 Move X24, [X31+96]
	138 Move X23, [X31+104]
	139 Move X26, [X31+80]
	140 Move X25, [X31+88]
	141 Move X28, [X31+64]
	142 Move X27, [X31+72]
	143 Move X29, [X31+48]
	144 Move X30, [X31+56]
	145 Add X31, X31, 144
	146 Return X0
	147 Move X0, 0xDB1000
	148 Move X0, [X0+1320]
	149 Call 0x1C17D08
	150 Call 0x1C17F10
	151 Move X19, X0
	152 Move X0, 0xDB4000
	153 Move X0, [X0+1416]
	154 Call 0x1C17D08
	155 Move X1, X0
	156 Move X0, X19
	157 Move X2, X31
	158 Call ArgumentNullException..ctor, X0, X1
	159 Move X0, 0xDAE000
	160 Move X0, [X0+3144]
	161 Call 0x1C17D08
	162 Call 0x19913D0
	163 Move X0, X20
	164 Call CultureInfo.CreateNotFoundException, X0
	165 Move X19, X0
	166 Move X0, 0xDE2000
	167 Move X0, [X0+2688]
	168 Call 0x1C17D08
	169 Move X1, X0
	170 Move X0, X19
	171 Call 0x1C17DEC
	172 Call 0x1C17F20

Method: System.Boolean ConstructLocaleFromName(System.String name)

Disassembly:
	0x03349E28 CMP W0, W8
	0x03349E2C B.NE 0x334B88C
	0x03349E30 ADRP X8, 0xDE0000
	0x03349E34 LDR X8, [X8 + 0xC20]
	0x03349E38 MOV X0, X20
	0x03349E3C MOV X2, X31
	0x03349E40 LDR X1, [X8]
	0x03349E44 BL 0x321BA08
	0x03349E48 TBZ X0, 0x0, 0x334B88C
	0x03349E4C MOVZ W19, 0x41E
	0x03349E50 B 0x334B858
	0x03349E54 MOVZ W8, 0x1C7C
	0x03349E58 MOVK W8, 0x5F2E0000
	0x03349E5C CMP W0, W8
	0x03349E60 B.HI 0x334A394
	0x03349E64 MOVZ W8, 0x35A1
	0x03349E68 MOVK W8, 0x5E430000
	0x03349E6C CMP W0, W8
	0x03349E70 B.HI 0x334A7EC
	0x03349E74 MOVZ W8, 0x1AE9
	0x03349E78 MOVK W8, 0x5E2E0000
	0x03349E7C CMP W0, W8
	0x03349E80 B.EQ 0x334AF8C
	0x03349E84 MOVZ W8, 0x35A1
	0x03349E88 MOVK W8, 0x5E430000
	0x03349E8C CMP W0, W8
	0x03349E90 B.NE 0x334B88C
	0x03349E94 ADRP X8, 0xDE0000
	0x03349E98 LDR X8, [X8 + 0xDE8]
	0x03349E9C MOV X0, X20
	0x03349EA0 MOV X2, X31
	0x03349EA4 LDR X1, [X8]
	0x03349EA8 BL 0x321BA08
	0x03349EAC TBZ X0, 0x0, 0x334B88C
	0x03349EB0 MOVZ W19, 0x422
	0x03349EB4 B 0x334B858
	0x03349EB8 MOVZ W8, 0x5975
	0x03349EBC MOVK W8, 0x4D450000
	0x03349EC0 CMP W0, W8
	0x03349EC4 B.HI 0x334A3E8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Call 0x1C43D08
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {14}
	013 Move W22, 1
	014 Compare X19, 0
	015 JumpIfEqual {47}
	016 Move W8, [X19+16]
	017 Subtract W21, W8, 1
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Subtract W2, W21, 1
	020 Move W1, 45
	021 Move X0, X19
	022 Move X3, X31
	023 Call String.LastIndexOf, X0, X1, X2
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSET not yet implemented."
	026 Move W21, W0
	027 Move X0, X19
	028 Move W1, W31
	029 Move W2, W21
	030 Move X3, X31
	031 Call String.Substring, X0, X1, X2
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C43D08
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {19}
	039 Move W22, W31
	040 Move W0, W22
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Return X0
	047 Call 0x1C17F20

Method: System.Globalization.CultureInfo CreateSpecificCultureFromNeutral(System.String name)

Disassembly:
	0x0334A19C MOV X2, X31
	0x0334A1A0 LDR X1, [X8]
	0x0334A1A4 BL 0x321BA08
	0x0334A1A8 TBZ X0, 0x0, 0x334B88C
	0x0334A1AC MOVZ W19, 0x441
	0x0334A1B0 B 0x334B858
	0x0334A1B4 MOVZ W8, 0x9923
	0x0334A1B8 MOVK W8, 0xDA1C0000
	0x0334A1BC CMP W0, W8
	0x0334A1C0 B.HI 0x334AAF4
	0x0334A1C4 MOVZ W8, 0xA1F4
	0x0334A1C8 MOVK W8, 0xC6E40000
	0x0334A1CC CMP W0, W8
	0x0334A1D0 B.EQ 0x334B0DC
	0x0334A1D4 MOVZ W8, 0x9923
	0x0334A1D8 MOVK W8, 0xDA1C0000
	0x0334A1DC CMP W0, W8
	0x0334A1E0 B.NE 0x334B88C
	0x0334A1E4 ADRP X8, 0xDDF000
	0x0334A1E8 LDR X8, [X8 + 0xCF8]
	0x0334A1EC MOV X0, X20
	0x0334A1F0 MOV X2, X31
	0x0334A1F4 LDR X1, [X8]
	0x0334A1F8 BL 0x321BA08
	0x0334A1FC TBZ X0, 0x0, 0x334B88C
	0x0334A200 MOVZ W19, 0x485
	0x0334A204 B 0x334B858
	0x0334A208 MOVZ W8, 0x3EB2
	0x0334A20C MOVK W8, 0x3C450000
	0x0334A210 CMP W0, W8
	0x0334A214 B.HI 0x334AB48
	0x0334A218 MOVZ W8, 0xA6CC
	0x0334A21C MOVK W8, 0x3C2B0000
	0x0334A220 CMP W0, W8
	0x0334A224 B.EQ 0x334B100
	0x0334A228 MOVZ W8, 0x3EB2
	0x0334A22C MOVK W8, 0x3C450000
	0x0334A230 CMP W0, W8
	0x0334A234 B.NE 0x334B88C
	0x0334A238 ADRP X8, 0xDDF000
	0x0334A23C LDR X8, [X8 + 0xD18]
	0x0334A240 MOV X0, X20
	0x0334A244 MOV X2, X31
	0x0334A248 LDR X1, [X8]
	0x0334A24C BL 0x321BA08
	0x0334A250 TBZ X0, 0x0, 0x334B88C
	0x0334A254 MOVZ W19, 0x44A
	0x0334A258 B 0x334B858
	0x0334A25C MOVZ W8, 0xFD08
	0x0334A260 MOVK W8, 0x58670000
	0x0334A264 CMP W0, W8
	0x0334A268 B.HI 0x334AB9C
	0x0334A26C MOVZ W8, 0xDD6A
	0x0334A270 MOVK W8, 0x583A0000
	0x0334A274 CMP W0, W8
	0x0334A278 B.EQ 0x334B124
	0x0334A27C MOVZ W8, 0xFD08
	0x0334A280 MOVK W8, 0x58670000
	0x0334A284 CMP W0, W8
	0x0334A288 B.NE 0x334B88C
	0x0334A28C ADRP X8, 0xDDF000
	0x0334A290 LDR X8, [X8 + 0xC10]
	0x0334A294 MOV X0, X20
	0x0334A298 MOV X2, X31
	0x0334A29C LDR X1, [X8]
	0x0334A2A0 BL 0x321BA08
	0x0334A2A4 TBZ X0, 0x0, 0x334B88C
	0x0334A2A8 MOVZ W19, 0x435
	0x0334A2AC B 0x334B858
	0x0334A2B0 MOVZ W8, 0x5699
	0x0334A2B4 MOVK W8, 0x48330000
	0x0334A2B8 CMP W0, W8
	0x0334A2BC B.HI 0x334ABF0
	0x0334A2C0 MOVZ W8, 0x708F
	0x0334A2C4 MOVK W8, 0x481A0000
	0x0334A2C8 CMP W0, W8
	0x0334A2CC B.EQ 0x334B148
	0x0334A2D0 MOVZ W8, 0x5699
	0x0334A2D4 MOVK W8, 0x48330000
	0x0334A2D8 CMP W0, W8
	0x0334A2DC B.NE 0x334B88C
	0x0334A2E0 ADRP X8, 0xDDF000
	0x0334A2E4 LDR X8, [X8 + 0xCD0]
	0x0334A2E8 MOV X0, X20
	0x0334A2EC MOV X2, X31
	0x0334A2F0 LDR X1, [X8]
	0x0334A2F4 BL 0x321BA08
	0x0334A2F8 TBZ X0, 0x0, 0x334B88C
	0x0334A2FC MOVZ W19, 0x45D
	0x0334A300 B 0x334B858
	0x0334A304 MOVZ W8, 0xDEEB
	0x0334A308 MOVK W8, 0x83010000
	0x0334A30C CMP W0, W8
	0x0334A310 B.HI 0x334AC44
	0x0334A314 MOVZ W8, 0x31C3
	0x0334A318 MOVK W8, 0x81F70000
	0x0334A31C CMP W0, W8
	0x0334A320 B.EQ 0x334B16C
	0x0334A324 MOVZ W8, 0xDEEB
	0x0334A328 MOVK W8, 0x83010000
	0x0334A32C CMP W0, W8
	0x0334A330 B.NE 0x334B88C
	0x0334A334 ADRP X8, 0xDDF000
	0x0334A338 LDR X8, [X8 + 0xEF0]
	0x0334A33C B 0x334B174
	0x0334A340 MOVZ W8, 0x78DE
	0x0334A344 MOVK W8, 0x43200000
	0x0334A348 CMP W0, W8
	0x0334A34C B.HI 0x334AC98
	0x0334A350 MOVZ W8, 0xF95F
	0x0334A354 MOVK W8, 0x423C0000
	0x0334A358 CMP W0, W8
	0x0334A35C B.EQ 0x334B190
	0x0334A360 MOVZ W8, 0x78DE
	0x0334A364 MOVK W8, 0x43200000
	0x0334A368 CMP W0, W8
	0x0334A36C B.NE 0x334B88C
	0x0334A370 ADRP X8, 0xDDF000
	0x0334A374 LDR X8, [X8 + 0xC28]
	0x0334A378 MOV X0, X20
	0x0334A37C MOV X2, X31
	0x0334A380 LDR X1, [X8]
	0x0334A384 BL 0x321BA08
	0x0334A388 TBZ X0, 0x0, 0x334B88C
	0x0334A38C MOVZ W19, 0x456
	0x0334A390 B 0x334B858
	0x0334A394 MOVZ W8, 0x81E8
	0x0334A398 MOVK W8, 0x60540000
	0x0334A39C CMP W0, W8
	0x0334A3A0 B.HI 0x334ACEC
	0x0334A3A4 MOVZ W8, 0xEA02
	0x0334A3A8 MOVK W8, 0x603A0000
	0x0334A3AC CMP W0, W8
	0x0334A3B0 B.EQ 0x334B1B4
	0x0334A3B4 MOVZ W8, 0x81E8
	0x0334A3B8 MOVK W8, 0x60540000
	0x0334A3BC CMP W0, W8
	0x0334A3C0 B.NE 0x334B88C
	0x0334A3C4 ADRP X8, 0xDAB000
	0x0334A3C8 LDR X8, [X8 + 0x60]
	0x0334A3CC MOV X0, X20
	0x0334A3D0 MOV X2, X31
	0x0334A3D4 LDR X1, [X8]
	0x0334A3D8 BL 0x321BA08
	0x0334A3DC TBZ X0, 0x0, 0x334B88C
	0x0334A3E0 MOVZ W19, 0x417
	0x0334A3E4 B 0x334B858
	0x0334A3E8 MOVZ W8, 0x8F15
	0x0334A3EC MOVK W8, 0x4E380000
	0x0334A3F0 CMP W0, W8
	0x0334A3F4 B.HI 0x334AD40
	0x0334A3F8 MOVZ W8, 0xC322
	0x0334A3FC MOVK W8, 0x4E2B0000
	0x0334A400 CMP W0, W8
	0x0334A404 B.EQ 0x334B1D8
	0x0334A408 MOVZ W8, 0x8F15
	0x0334A40C MOVK W8, 0x4E380000
	0x0334A410 CMP W0, W8
	0x0334A414 B.NE 0x334B88C
	0x0334A418 ADRP X8, 0xDDF000
	0x0334A41C LDR X8, [X8 + 0xE78]
	0x0334A420 MOV X0, X20
	0x0334A424 MOV X2, X31
	0x0334A428 LDR X1, [X8]
	0x0334A42C BL 0x321BA08
	0x0334A430 TBZ X0, 0x0, 0x334B88C
	0x0334A434 MOVZ W19, 0x40F
	0x0334A438 B 0x334B858
	0x0334A43C MOVZ W8, 0x4D63
	0x0334A440 MOVK W8, 0xF0E10000
	0x0334A444 CMP W0, W8
	0x0334A448 B.HI 0x334AD94
	0x0334A44C MOVZ W8, 0x60A8
	0x0334A450 MOVK W8, 0xEE5E0000
	0x0334A454 CMP W0, W8
	0x0334A458 B.EQ 0x334B1FC
	0x0334A45C MOVZ W8, 0x4D63
	0x0334A460 MOVK W8, 0xF0E10000
	0x0334A464 CMP W0, W8
	0x0334A468 B.NE 0x334B88C
	0x0334A46C ADRP X8, 0xDDF000
	0x0334A470 LDR X8, [X8 + 0xF80]
	0x0334A474 MOV X0, X20
	0x0334A478 MOV X2, X31
	0x0334A47C LDR X1, [X8]
	0x0334A480 BL 0x321BA08
	0x0334A484 TBZ X0, 0x0, 0x334B88C
	0x0334A488 MOVZ W19, 0x46B
	0x0334A48C B 0x334B858
	0x0334A490 MOVZ W8, 0xC4A7
	0x0334A494 MOVK W8, 0x37290000
	0x0334A498 CMP W0, W8
	0x0334A49C B.EQ 0x334B220
	0x0334A4A0 MOVZ W8, 0x6AE0
	0x0334A4A4 MOVK W8, 0x37380000
	0x0334A4A8 CMP W0, W8
	0x0334A4AC B.NE 0x334B88C
	0x0334A4B0 ADRP X8, 0xDAB000
	0x0334A4B4 LDR X8, [X8 + 0xC10]
	0x0334A4B8 MOV X0, X20
	0x0334A4BC MOV X2, X31
	0x0334A4C0 LDR X1, [X8]
	0x0334A4C4 BL 0x321BA08
	0x0334A4C8 TBZ X0, 0x0, 0x334B88C
	0x0334A4CC MOVZ W19, 0x421
	0x0334A4D0 B 0x334B858
	0x0334A4D4 MOVZ W8, 0xC315
	0x0334A4D8 MOVK W8, 0x54EC0000
	0x0334A4DC CMP W0, W8
	0x0334A4E0 B.EQ 0x334B22C
	0x0334A4E4 MOVZ W8, 0x1262
	0x0334A4E8 MOVK W8, 0x55250000
	0x0334A4EC CMP W0, W8
	0x0334A4F0 B.NE 0x334B88C
	0x0334A4F4 ADRP X8, 0xDDE000
	0x0334A4F8 LDR X8, [X8 + 0xB78]
	0x0334A4FC B 0x334B204
	0x0334A500 MOVZ W8, 0xFC85
	0x0334A504 MOVK W8, 0x443C0000
	0x0334A508 CMP W0, W8
	0x0334A50C B.EQ 0x334B250
	0x0334A510 MOVZ W8, 0xE46
	0x0334A514 MOVK W8, 0x45430000
	0x0334A518 CMP W0, W8
	0x0334A51C B.NE 0x334B88C
	0x0334A520 ADRP X8, 0xDDF000
	0x0334A524 LDR X8, [X8 + 0xEB8]
	0x0334A528 MOV X0, X20
	0x0334A52C MOV X2, X31
	0x0334A530 LDR X1, [X8]
	0x0334A534 BL 0x321BA08
	0x0334A538 TBZ X0, 0x0, 0x334B88C
	0x0334A53C MOVZ W19, 0x420
	0x0334A540 B 0x334B858
	0x0334A544 MOVZ W8, 0xB91B
	0x0334A548 MOVK W8, 0x62470000
	0x0334A54C CMP W0, W8
	0x0334A550 B.EQ 0x334B274
	0x0334A554 MOVZ W8, 0x850E
	0x0334A558 MOVK W8, 0x62540000
	0x0334A55C CMP W0, W8
	0x0334A560 B.NE 0x334B88C
	0x0334A564 ADRP X8, 0xDDF000
	0x0334A568 LDR X8, [X8 + 0xBA0]
	0x0334A56C MOV X0, X20
	0x0334A570 MOV X2, X31
	0x0334A574 LDR X1, [X8]
	0x0334A578 BL 0x321BA08
	0x0334A57C TBZ X0, 0x0, 0x334B88C
	0x0334A580 MOVZ W19, 0x418
	0x0334A584 B 0x334B858
	0x0334A588 MOVZ W8, 0xDCB
	0x0334A58C MOVK W8, 0x3E520000
	0x0334A590 CMP W0, W8
	0x0334A594 B.EQ 0x334B298
	0x0334A598 MOVZ W8, 0x6264
	0x0334A59C MOVK W8, 0x3F1A0000
	0x0334A5A0 CMP W0, W8
	0x0334A5A4 B.NE 0x334B88C
	0x0334A5A8 ADRP X8, 0xDDF000
	0x0334A5AC LDR X8, [X8 + 0xC70]
	0x0334A5B0 MOV X0, X20
	0x0334A5B4 MOV X2, X31
	0x0334A5B8 LDR X1, [X8]
	0x0334A5BC BL 0x321BA08
	0x0334A5C0 TBZ X0, 0x0, 0x334B88C
	0x0334A5C4 MOVZ W19, 0x408
	0x0334A5C8 B 0x334B858
	0x0334A5CC MOVZ W8, 0xE3B6
	0x0334A5D0 MOVK W8, 0x5C3A0000
	0x0334A5D4 CMP W0, W8
	0x0334A5D8 B.EQ 0x334B2BC
	0x0334A5DC MOVZ W8, 0xD43C
	0x0334A5E0 MOVK W8, 0x5C7A0000
	0x0334A5E4 CMP W0, W8
	0x0334A5E8 B.NE 0x334B88C
	0x0334A5EC ADRP X8, 0xDDF000
	0x0334A5F0 LDR X8, [X8 + 0xC58]
	0x0334A5F4 MOV X0, X20
	0x0334A5F8 MOV X2, X31
	0x0334A5FC LDR X1, [X8]
	0x0334A600 BL 0x321BA08
	0x0334A604 TBZ X0, 0x0, 0x334B88C
	0x0334A608 MOVZ W19, 0x48C
	0x0334A60C B 0x334B858
	0x0334A610 MOVZ W8, 0x1F1C
	0x0334A614 MOVK W8, 0x49520000
	0x0334A618 CMP W0, W8
	0x0334A61C B.EQ 0x334B2E0
	0x0334A620 MOVZ W8, 0x683D
	0x0334A624 MOVK W8, 0x49630000
	0x0334A628 CMP W0, W8
	0x0334A62C B.NE 0x334B88C
	0x0334A630 ADRP X8, 0xDDF000
	0x0334A634 LDR X8, [X8 + 0xC38]
	0x0334A638 MOV X0, X20
	0x0334A63C MOV X2, X31
	0x0334A640 LDR X1, [X8]
	0x0334A644 BL 0x321BA08
	0x0334A648 TBZ X0, 0x0, 0x334B88C
	0x0334A64C MOVZ W19, 0x434
	0x0334A650 B 0x334B858
	0x0334A654 MOVZ W8, 0x5E46
	0x0334A658 MOVK W8, 0xC1230000
	0x0334A65C CMP W0, W8
	0x0334A660 B.EQ 0x334B304
	0x0334A664 MOVZ W8, 0xA0A9
	0x0334A668 MOVK W8, 0xC4580000
	0x0334A66C CMP W0, W8
	0x0334A670 B.NE 0x334B88C
	0x0334A674 ADRP X8, 0xDDF000
	0x0334A678 LDR X8, [X8 + 0xBF8]
	0x0334A67C MOV X0, X20
	0x0334A680 MOV X2, X31
	0x0334A684 LDR X1, [X8]
	0x0334A688 BL 0x321BA08
	0x0334A68C TBZ X0, 0x0, 0x334B88C
	0x0334A690 MOVZ W19, 0x45A
	0x0334A694 B 0x334B858
	0x0334A698 MOVZ W8, 0x6C46
	0x0334A69C MOVK W8, 0x3B200000
	0x0334A6A0 CMP W0, W8
	0x0334A6A4 B.EQ 0x334B328
	0x0334A6A8 MOVZ W8, 0x333A
	0x0334A6AC MOVK W8, 0x3B680000
	0x0334A6B0 CMP W0, W8
	0x0334A6B4 B.NE 0x334B88C
	0x0334A6B8 ADRP X8, 0xDDF000
	0x0334A6BC LDR X8, [X8 + 0xD70]
	0x0334A6C0 MOV X0, X20
	0x0334A6C4 MOV X2, X31
	0x0334A6C8 LDR X1, [X8]
	0x0334A6CC BL 0x321BA08
	0x0334A6D0 TBZ X0, 0x0, 0x334B88C
	0x0334A6D4 MOVZ W19, 0x850
	0x0334A6D8 B 0x334B858
	0x0334A6DC MOVZ W8, 0x9449
	0x0334A6E0 MOVK W8, 0x58290000
	0x0334A6E4 CMP W0, W8
	0x0334A6E8 B.EQ 0x334B34C
	0x0334A6EC MOVZ W8, 0x603C
	0x0334A6F0 MOVK W8, 0x58360000
	0x0334A6F4 CMP W0, W8
	0x0334A6F8 B.NE 0x334B88C
	0x0334A6FC ADRP X8, 0xDDF000
	0x0334A700 LDR X8, [X8 + 0xE88]
	0x0334A704 MOV X0, X20
	0x0334A708 MOV X2, X31
	0x0334A70C LDR X1, [X8]
	0x0334A710 BL 0x321BA08
	0x0334A714 TBZ X0, 0x0, 0x334B88C
	0x0334A718 MOVZ W19, 0x461
	0x0334A71C B 0x334B858
	0x0334A720 MOVZ W8, 0x8410
	0x0334A724 MOVK W8, 0x47380000
	0x0334A728 CMP W0, W8
	0x0334A72C B.EQ 0x334B370
	0x0334A730 MOVZ W8, 0x5003
	0x0334A734 MOVK W8, 0x47450000
	0x0334A738 CMP W0, W8
	0x0334A73C B.NE 0x334B88C
	0x0334A740 ADRP X8, 0xDDE000
	0x0334A744 LDR X8, [X8 + 0xB70]
	0x0334A748 MOV X0, X20
	0x0334A74C MOV X2, X31
	0x0334A750 LDR X1, [X8]
	0x0334A754 BL 0x321BA08
	0x0334A758 TBZ X0, 0x0, 0x334B88C
	0x0334A75C MOVZ W19, 0x41F
	0x0334A760 B 0x334B858
	0x0334A764 MOVZ W8, 0x4447
	0x0334A768 MOVK W8, 0x6E340000
	0x0334A76C CMP W0, W8
	0x0334A770 B.EQ 0x334B394
	0x0334A774 MOVZ W8, 0x4CDC
	0x0334A778 MOVK W8, 0x79FC0000
	0x0334A77C CMP W0, W8
	0x0334A780 B.NE 0x334B88C
	0x0334A784 ADRP X8, 0xDDF000
	0x0334A788 LDR X8, [X8 + 0xE20]
	0x0334A78C MOV X0, X20
	0x0334A790 MOV X2, X31
	0x0334A794 LDR X1, [X8]
	0x0334A798 BL 0x321BA08
	0x0334A79C TBZ X0, 0x0, 0x334B88C
	0x0334A7A0 MOVZ W19, 0x457
	0x0334A7A4 B 0x334B858
	0x0334A7A8 MOVZ W8, 0xB03E
	0x0334A7AC MOVK W8, 0x422B0000
	0x0334A7B0 CMP W0, W8
	0x0334A7B4 B.EQ 0x334B3B8
	0x0334A7B8 MOVZ W8, 0xC06C
	0x0334A7BC MOVK W8, 0x42310000
	0x0334A7C0 CMP W0, W8
	0x0334A7C4 B.NE 0x334B88C
	0x0334A7C8 ADRP X8, 0xDDF000
	0x0334A7CC LDR X8, [X8 + 0xB78]
	0x0334A7D0 MOV X0, X20
	0x0334A7D4 MOV X2, X31
	0x0334A7D8 LDR X1, [X8]
	0x0334A7DC BL 0x321BA08
	0x0334A7E0 TBZ X0, 0x0, 0x334B88C
	0x0334A7E4 MOVZ W19, 0x454
	0x0334A7E8 B 0x334B858
	0x0334A7EC MOVZ W8, 0x6E94
	0x0334A7F0 MOVK W8, 0x5E4E0000
	0x0334A7F4 CMP W0, W8
	0x0334A7F8 B.EQ 0x334B3DC
	0x0334A7FC MOVZ W8, 0x1C7C
	0x0334A800 MOVK W8, 0x5F2E0000
	0x0334A804 CMP W0, W8
	0x0334A808 B.NE 0x334B88C
	0x0334A80C ADRP X8, 0xDDF000
	0x0334A810 LDR X8, [X8 + 0xEE8]
	0x0334A814 MOV X0, X20
	0x0334A818 MOV X2, X31
	0x0334A81C LDR X1, [X8]
	0x0334A820 BL 0x321BA08
	0x0334A824 TBZ X0, 0x0, 0x334B88C
	0x0334A828 MOVZ W19, 0x44C
	0x0334A82C B 0x334B858
	0x0334A830 MOVZ W8, 0x1ADE
	0x0334A834 MOVK W8, 0x4D430000
	0x0334A838 CMP W0, W8
	0x0334A83C B.EQ 0x334B400
	0x0334A840 MOVZ W8, 0x5975
	0x0334A844 MOVK W8, 0x4D450000
	0x0334A848 CMP W0, W8
	0x0334A84C B.NE 0x334B88C
	0x0334A850 ADRP X8, 0xDDF000
	0x0334A854 LDR X8, [X8 + 0xE38]
	0x0334A858 MOV X0, X20
	0x0334A85C MOV X2, X31
	0x0334A860 LDR X1, [X8]
	0x0334A864 BL 0x321BA08
	0x0334A868 TBZ X0, 0x0, 0x334B88C
	0x0334A86C MOVZ W19, 0x444
	0x0334A870 B 0x334B858
	0x0334A874 MOVZ W8, 0x391B
	0x0334A878 MOVK W8, 0xE98E0000
	0x0334A87C CMP W0, W8
	0x0334A880 B.EQ 0x334B424
	0x0334A884 MOVZ W8, 0x8567
	0x0334A888 MOVK W8, 0xEB9E0000
	0x0334A88C CMP W0, W8
	0x0334A890 B.NE 0x334B88C
	0x0334A894 ADRP X8, 0xDDF000
	0x0334A898 LDR X8, [X8 + 0xCB8]
	0x0334A89C MOV X0, X20
	0x0334A8A0 MOV X2, X31
	0x0334A8A4 LDR X1, [X8]
	0x0334A8A8 BL 0x321BA08
	0x0334A8AC TBZ X0, 0x0, 0x334B88C
	0x0334A8B0 MOVZ W19, 0x47C
	0x0334A8B4 B 0x334B858
	0x0334A8B8 MOVZ W8, 0x459
	0x0334A8BC MOVK W8, 0x38520000
	0x0334A8C0 CMP W0, W8
	0x0334A8C4 B.EQ 0x334B448
	0x0334A8C8 MOVZ W8, 0xA3A6
	0x0334A8CC MOVK W8, 0x3A2B0000
	0x0334A8D0 CMP W0, W8
	0x0334A8D4 B.NE 0x334B88C
	0x0334A8D8 ADRP X8, 0xDDF000
	0x0334A8DC LDR X8, [X8 + 0xDB8]
	0x0334A8E0 MOV X0, X20
	0x0334A8E4 MOV X2, X31
	0x0334A8E8 LDR X1, [X8]
	0x0334A8EC BL 0x321BA08
	0x0334A8F0 TBZ X0, 0x0, 0x334B88C
	0x0334A8F4 MOVZ W19, 0x402
	0x0334A8F8 B 0x334B858
	0x0334A8FC MOVZ W8, 0xE51
	0x0334A900 MOVK W8, 0x562E0000
	0x0334A904 CMP W0, W8
	0x0334A908 B.EQ 0x334B46C
	0x0334A90C MOVZ W8, 0xD6F1
	0x0334A910 MOVK W8, 0x57220000
	0x0334A914 CMP W0, W8
	0x0334A918 B.EQ 0x334B490
	0x0334A91C MOVZ W8, 0xFE4
	0x0334A920 MOVK W8, 0x572E0000
	0x0334A924 CMP W0, W8
	0x0334A928 B.NE 0x334B88C
	0x0334A92C ADRP X8, 0xDDF000
	0x0334A930 LDR X8, [X8 + 0xCC0]
	0x0334A934 MOV X0, X20
	0x0334A938 MOV X2, X31
	0x0334A93C LDR X1, [X8]
	0x0334A940 BL 0x321BA08
	0x0334A944 TBZ X0, 0x0, 0x334B88C
	0x0334A948 MOVZ W19, 0x43A
	0x0334A94C B 0x334B858
	0x0334A950 MOVZ W8, 0xDF1F
	0x0334A954 MOVK W8, 0x45670000
	0x0334A958 CMP W0, W8
	0x0334A95C B.EQ 0x334B4B4
	0x0334A960 MOVZ W8, 0x6D69
	0x0334A964 MOVK W8, 0x461A0000
	0x0334A968 CMP W0, W8
	0x0334A96C B.EQ 0x334B4C0
	0x0334A970 MOVZ W8, 0x77F3
	0x0334A974 MOVK W8, 0x46290000
	0x0334A978 CMP W0, W8
	0x0334A97C B.NE 0x334B88C
	0x0334A980 ADRP X8, 0xDDF000
	0x0334A984 LDR X8, [X8 + 0xDE0]
	0x0334A988 MOV X0, X20
	0x0334A98C MOV X2, X31
	0x0334A990 LDR X1, [X8]
	0x0334A994 BL 0x321BA08
	0x0334A998 TBZ X0, 0x0, 0x334B88C
	0x0334A99C MOVZ W19, 0x405
	0x0334A9A0 B 0x334B858
	0x0334A9A4 MOVZ W8, 0xEB68
	0x0334A9A8 MOVK W8, 0x64220000
	0x0334A9AC CMP W0, W8
	0x0334A9B0 B.EQ 0x334B4E4
	0x0334A9B4 MOVZ W8, 0xFF0B
	0x0334A9B8 MOVK W8, 0x64290000
	0x0334A9BC CMP W0, W8
	0x0334A9C0 B.EQ 0x334B508
	0x0334A9C4 MOVZ W8, 0xF69A
	0x0334A9C8 MOVK W8, 0x683A0000
	0x0334A9CC CMP W0, W8
	0x0334A9D0 B.NE 0x334B88C
	0x0334A9D4 ADRP X8, 0xDDF000
	0x0334A9D8 LDR X8, [X8 + 0xF58]
	0x0334A9DC MOV X0, X20
	0x0334A9E0 MOV X2, X31
	0x0334A9E4 LDR X1, [X8]
	0x0334A9E8 BL 0x321BA08
	0x0334A9EC TBZ X0, 0x0, 0x334B88C
	0x0334A9F0 MOVZ W19, 0x439
	0x0334A9F4 B 0x334B858
	0x0334A9F8 MOVZ W8, 0x10F1
	0x0334A9FC MOVK W8, 0x40520000
	0x0334AA00 CMP W0, W8
	0x0334AA04 B.EQ 0x334B514
	0x0334AA08 MOVZ W8, 0x9EE7
	0x0334AA0C MOVK W8, 0x40D50000
	0x0334AA10 CMP W0, W8
	0x0334AA14 B.EQ 0x334B538
	0x0334AA18 MOVZ W8, 0x658A
	0x0334AA1C MOVK W8, 0x411A0000
	0x0334AA20 CMP W0, W8
	0x0334AA24 B.NE 0x334B88C
	0x0334AA28 ADRP X8, 0xDAC000
	0x0334AA2C LDR X8, [X8 + 0x318]
	0x0334AA30 MOV X0, X20
	0x0334AA34 MOV X2, X31
	0x0334AA38 LDR X1, [X8]
	0x0334AA3C BL 0x321BA08
	0x0334AA40 TBZ X0, 0x0, 0x334B88C
	0x0334AA44 MOVZ W19, 0x409
	0x0334AA48 B 0x334B858
	0x0334AA4C MOVZ W8, 0x2984
	0x0334AA50 MOVK W8, 0x5D340000
	0x0334AA54 CMP W0, W8
	0x0334AA58 B.EQ 0x334B55C
	0x0334AA5C MOVZ W8, 0x6D01
	0x0334AA60 MOVK W8, 0x5D4E0000
	0x0334AA64 CMP W0, W8
	0x0334AA68 B.EQ 0x334B580
	0x0334AA6C MOVZ W8, 0x208D
	0x0334AA70 MOVK W8, 0x5E250000
	0x0334AA74 CMP W0, W8
	0x0334AA78 B.NE 0x334B88C
	0x0334AA7C ADRP X8, 0xDDF000
	0x0334AA80 LDR X8, [X8 + 0xBA8]
	0x0334AA84 MOV X0, X20
	0x0334AA88 MOV X2, X31
	0x0334AA8C LDR X1, [X8]
	0x0334AA90 BL 0x321BA08
	0x0334AA94 TBZ X0, 0x0, 0x334B88C
	0x0334AA98 MOVZ W19, 0x44D
	0x0334AA9C B 0x334B858
	0x0334AAA0 MOVZ W8, 0x5F46
	0x0334AAA4 MOVK W8, 0x4A540000
	0x0334AAA8 CMP W0, W8
	0x0334AAAC B.EQ 0x334B5A4
	0x0334AAB0 MOVZ W8, 0xB3DF
	0x0334AAB4 MOVK W8, 0x4B1C0000
	0x0334AAB8 CMP W0, W8
	0x0334AABC B.EQ 0x334B5C8
	0x0334AAC0 MOVZ W8, 0x8709
	0x0334AAC4 MOVK W8, 0x4C200000
	0x0334AAC8 CMP W0, W8
	0x0334AACC B.NE 0x334B88C
	0x0334AAD0 ADRP X8, 0xDDF000
	0x0334AAD4 LDR X8, [X8 + 0xD90]
	0x0334AAD8 MOV X0, X20
	0x0334AADC MOV X2, X31
	0x0334AAE0 LDR X1, [X8]
	0x0334AAE4 BL 0x321BA08
	0x0334AAE8 TBZ X0, 0x0, 0x334B88C
	0x0334AAEC MOVZ W19, 0x447
	0x0334AAF0 B 0x334B858
	0x0334AAF4 MOVZ W8, 0xAFCA
	0x0334AAF8 MOVK W8, 0xDB3A0000
	0x0334AAFC CMP W0, W8
	0x0334AB00 B.EQ 0x334B5EC
	0x0334AB04 MOVZ W8, 0xB7A9
	0x0334AB08 MOVK W8, 0xE03A0000
	0x0334AB0C CMP W0, W8
	0x0334AB10 B.EQ 0x334B610
	0x0334AB14 MOVZ W8, 0x4D71
	0x0334AB18 MOVK W8, 0xE23C0000
	0x0334AB1C CMP W0, W8
	0x0334AB20 B.NE 0x334B88C
	0x0334AB24 ADRP X8, 0xDDF000
	0x0334AB28 LDR X8, [X8 + 0xE48]
	0x0334AB2C MOV X0, X20
	0x0334AB30 MOV X2, X31
	0x0334AB34 LDR X1, [X8]
	0x0334AB38 BL 0x321BA08
	0x0334AB3C TBZ X0, 0x0, 0x334B88C
	0x0334AB40 MOVZ W19, 0x281A
	0x0334AB44 B 0x334B858
	0x0334AB48 MOVZ W8, 0xBBE0
	0x0334AB4C MOVK W8, 0x3C490000
	0x0334AB50 CMP W0, W8
	0x0334AB54 B.EQ 0x334B634
	0x0334AB58 MOVZ W8, 0xAA5
	0x0334AB5C MOVK W8, 0x3C520000
	0x0334AB60 CMP W0, W8
	0x0334AB64 B.EQ 0x334B658
	0x0334AB68 MOVZ W8, 0x7E08
	0x0334AB6C MOVK W8, 0x3D1E0000
	0x0334AB70 CMP W0, W8
	0x0334AB74 B.NE 0x334B88C
	0x0334AB78 ADRP X8, 0xDDF000
	0x0334AB7C LDR X8, [X8 + 0xB98]
	0x0334AB80 MOV X0, X20
	0x0334AB84 MOV X2, X31
	0x0334AB88 LDR X1, [X8]
	0x0334AB8C BL 0x321BA08
	0x0334AB90 TBZ X0, 0x0, 0x334B88C
	0x0334AB94 MOVZ W19, 0x85F
	0x0334AB98 B 0x334B858
	0x0334AB9C MOVZ W8, 0x2F55
	0x0334ABA0 MOVK W8, 0x5A430000
	0x0334ABA4 CMP W0, W8
	0x0334ABA8 B.EQ 0x334B67C
	0x0334ABAC MOVZ W8, 0xE7C7
	0x0334ABB0 MOVK W8, 0x5B310000
	0x0334ABB4 CMP W0, W8
	0x0334ABB8 B.EQ 0x334B6A0
	0x0334ABBC MOVZ W8, 0xCEA2
	0x0334ABC0 MOVK W8, 0x5C1C0000
	0x0334ABC4 CMP W0, W8
	0x0334ABC8 B.NE 0x334B88C
	0x0334ABCC ADRP X8, 0xDDF000
	0x0334ABD0 LDR X8, [X8 + 0xEC0]
	0x0334ABD4 MOV X0, X20
	0x0334ABD8 MOV X2, X31
	0x0334ABDC LDR X1, [X8]
	0x0334ABE0 BL 0x321BA08
	0x0334ABE4 TBZ X0, 0x0, 0x334B88C
	0x0334ABE8 MOVZ W19, 0x407
	0x0334ABEC B 0x334B858
	0x0334ABF0 MOVZ W8, 0x85A3
	0x0334ABF4 MOVK W8, 0x48380000
	0x0334ABF8 CMP W0, W8
	0x0334ABFC B.EQ 0x334B6C4
	0x0334AC00 MOVZ W8, 0x2D1
	0x0334AC04 MOVK W8, 0x483D0000
	0x0334AC08 CMP W0, W8
	0x0334AC0C B.EQ 0x334B6E8
	0x0334AC10 MOVZ W8, 0x1D89
	0x0334AC14 MOVK W8, 0x48520000
	0x0334AC18 CMP W0, W8
	0x0334AC1C B.NE 0x334B88C
	0x0334AC20 ADRP X8, 0xDDE000
	0x0334AC24 LDR X8, [X8 + 0x498]
	0x0334AC28 MOV X0, X20
	0x0334AC2C MOV X2, X31
	0x0334AC30 LDR X1, [X8]
	0x0334AC34 BL 0x321BA08
	0x0334AC38 TBZ X0, 0x0, 0x334B88C
	0x0334AC3C MOVZ W19, 0x41C
	0x0334AC40 B 0x334B858
	0x0334AC44 MOVZ W8, 0x39A2
	0x0334AC48 MOVK W8, 0x86F70000
	0x0334AC4C CMP W0, W8
	0x0334AC50 B.EQ 0x334B70C
	0x0334AC54 MOVZ W8, 0xE6CA
	0x0334AC58 MOVK W8, 0x88010000
	0x0334AC5C CMP W0, W8
	0x0334AC60 B.EQ 0x334B718
	0x0334AC64 MOVZ W8, 0x1D86
	0x0334AC68 MOVK W8, 0xB38F0000
	0x0334AC6C CMP W0, W8
	0x0334AC70 B.NE 0x334B88C
	0x0334AC74 ADRP X8, 0xDDF000
	0x0334AC78 LDR X8, [X8 + 0xE10]
	0x0334AC7C MOV X0, X20
	0x0334AC80 MOV X2, X31
	0x0334AC84 LDR X1, [X8]
	0x0334AC88 BL 0x321BA08
	0x0334AC8C TBZ X0, 0x0, 0x334B88C
	0x0334AC90 MOVZ W19, 0x241A
	0x0334AC94 B 0x334B858
	0x0334AC98 MOVZ W8, 0xB1D1
	0x0334AC9C MOVK W8, 0x432B0000
	0x0334ACA0 CMP W0, W8
	0x0334ACA4 B.EQ 0x334B73C
	0x0334ACA8 MOVZ W8, 0xFAF2
	0x0334ACAC MOVK W8, 0x433C0000
	0x0334ACB0 CMP W0, W8
	0x0334ACB4 B.EQ 0x334B760
	0x0334ACB8 MOVZ W8, 0x49B7
	0x0334ACBC MOVK W8, 0x43450000
	0x0334ACC0 CMP W0, W8
	0x0334ACC4 B.NE 0x334B88C
	0x0334ACC8 ADRP X8, 0xDDF000
	0x0334ACCC LDR X8, [X8 + 0xB88]
	0x0334ACD0 MOV X0, X20
	0x0334ACD4 MOV X2, X31
	0x0334ACD8 LDR X1, [X8]
	0x0334ACDC BL 0x321BA08
	0x0334ACE0 TBZ X0, 0x0, 0x334B88C
	0x0334ACE4 MOVZ W19, 0x432
	0x0334ACE8 B 0x334B858
	0x0334ACEC MOVZ W8, 0x1FA2
	0x0334ACF0 MOVK W8, 0x612E0000
	0x0334ACF4 CMP W0, W8
	0x0334ACF8 B.EQ 0x334B784
	0x0334ACFC MOVZ W8, 0x6E67
	0x0334AD00 MOVK W8, 0x61360000
	0x0334AD04 CMP W0, W8
	0x0334AD08 B.EQ 0x334B7A8
	0x0334AD0C MOVZ W8, 0xE842
	0x0334AD10 MOVK W8, 0x62220000
	0x0334AD14 CMP W0, W8
	0x0334AD18 B.NE 0x334B88C
	0x0334AD1C ADRP X8, 0xDDF000
	0x0334AD20 LDR X8, [X8 + 0xCF0]
	0x0334AD24 MOV X0, X20
	0x0334AD28 MOV X2, X31
	0x0334AD2C LDR X1, [X8]
	0x0334AD30 BL 0x321BA08
	0x0334AD34 TBZ X0, 0x0, 0x334B88C
	0x0334AD38 MOVZ W19, 0x438
	0x0334AD3C B 0x334B858
	0x0334AD40 MOVZ W8, 0xC4B5
	0x0334AD44 MOVK W8, 0x4F2B0000
	0x0334AD48 CMP W0, W8
	0x0334AD4C B.EQ 0x334B7CC
	0x0334AD50 MOVZ W8, 0xCF3F
	0x0334AD54 MOVK W8, 0x4F3A0000
	0x0334AD58 CMP W0, W8
	0x0334AD5C B.EQ 0x334B7F0
	0x0334AD60 MOVZ W8, 0x87B1
	0x0334AD64 MOVK W8, 0x50290000
	0x0334AD68 CMP W0, W8
	0x0334AD6C B.NE 0x334B88C
	0x0334AD70 ADRP X8, 0xDDF000
	0x0334AD74 LDR X8, [X8 + 0xC18]
	0x0334AD78 MOV X0, X20
	0x0334AD7C MOV X2, X31
	0x0334AD80 LDR X1, [X8]
	0x0334AD84 BL 0x321BA08
	0x0334AD88 TBZ X0, 0x0, 0x334B88C
	0x0334AD8C MOVZ W19, 0x452
	0x0334AD90 B 0x334B858
	0x0334AD94 MOVZ W8, 0xFB4A
	0x0334AD98 MOVK W8, 0xF4910000
	0x0334AD9C CMP W0, W8
	0x0334ADA0 B.EQ 0x334B814
	0x0334ADA4 MOVZ W8, 0x636D
	0x0334ADA8 MOVK W8, 0xFEE10000
	0x0334ADAC CMP W0, W8
	0x0334ADB0 B.EQ 0x334B838
	0x0334ADB4 MOVZ W8, 0xC348
	0x0334ADB8 MOVK W8, 0xFF1F0000
	0x0334ADBC CMP W0, W8
	0x0334ADC0 B.NE 0x334B88C
	0x0334ADC4 ADRP X8, 0xDDF000
	0x0334ADC8 LDR X8, [X8 + 0xE60]
	0x0334ADCC B 0x334B1BC
	0x0334ADD0 ADRP X8, 0xDDF000
	0x0334ADD4 LDR X8, [X8 + 0xD10]
	0x0334ADD8 MOV X0, X20
	0x0334ADDC MOV X2, X31
	0x0334ADE0 LDR X1, [X8]
	0x0334ADE4 BL 0x321BA08
	0x0334ADE8 TBZ X0, 0x0, 0x334B88C
	0x0334ADEC MOVZ W19, 0x46C
	0x0334ADF0 B 0x334B858
	0x0334ADF4 ADRP X8, 0xDDE000
	0x0334ADF8 LDR X8, [X8 + 0x438]
	0x0334ADFC MOV X0, X20
	0x0334AE00 MOV X2, X31
	0x0334AE04 LDR X1, [X8]
	0x0334AE08 BL 0x321BA08
	0x0334AE0C TBZ X0, 0x0, 0x334B88C
	0x0334AE10 MOVZ W19, 0x440
	0x0334AE14 B 0x334B858
	0x0334AE18 ADRP X8, 0xDDF000
	0x0334AE1C LDR X8, [X8 + 0xE80]
	0x0334AE20 MOV X0, X20
	0x0334AE24 MOV X2, X31
	0x0334AE28 LDR X1, [X8]
	0x0334AE2C BL 0x321BA08
	0x0334AE30 TBZ X0, 0x0, 0x334B88C
	0x0334AE34 MOVZ W19, 0x424
	0x0334AE38 B 0x334B858
	0x0334AE3C ADRP X8, 0xDDF000
	0x0334AE40 LDR X8, [X8 + 0xEE0]
	0x0334AE44 MOV X0, X20
	0x0334AE48 MOV X2, X31
	0x0334AE4C LDR X1, [X8]
	0x0334AE50 BL 0x321BA08
	0x0334AE54 TBZ X0, 0x0, 0x334B88C
	0x0334AE58 MOVZ W19, 0x483
	0x0334AE5C B 0x334B858
	0x0334AE60 ADRP X8, 0xDDF000
	0x0334AE64 LDR X8, [X8 + 0xED8]
	0x0334AE68 MOV X0, X20
	0x0334AE6C MOV X2, X31
	0x0334AE70 LDR X1, [X8]
	0x0334AE74 BL 0x321BA08
	0x0334AE78 TBZ X0, 0x0, 0x334B88C
	0x0334AE7C MOVZ W19, 0x43F
	0x0334AE80 B 0x334B858
	0x0334AE84 ADRP X8, 0xDDF000
	0x0334AE88 LDR X8, [X8 + 0xD98]
	0x0334AE8C MOV X0, X20
	0x0334AE90 MOV X2, X31
	0x0334AE94 LDR X1, [X8]
	0x0334AE98 BL 0x321BA08
	0x0334AE9C TBZ X0, 0x0, 0x334B88C
	0x0334AEA0 MOVZ W19, 0x40B
	0x0334AEA4 B 0x334B858
	0x0334AEA8 ADRP X8, 0xDDF000
	0x0334AEAC LDR X8, [X8 + 0xE68]
	0x0334AEB0 MOV X0, X20
	0x0334AEB4 MOV X2, X31
	0x0334AEB8 LDR X1, [X8]
	0x0334AEBC BL 0x321BA08
	0x0334AEC0 TBZ X0, 0x0, 0x334B88C
	0x0334AEC4 MOVZ W19, 0x419
	0x0334AEC8 B 0x334B858
	0x0334AECC ADRP X8, 0xDDF000
	0x0334AED0 LDR X8, [X8 + 0xCB0]
	0x0334AED4 MOV X0, X20
	0x0334AED8 MOV X2, X31
	0x0334AEDC LDR X1, [X8]
	0x0334AEE0 BL 0x321BA08
	0x0334AEE4 TBZ X0, 0x0, 0x334B88C
	0x0334AEE8 MOVZ W19, 0x201A
	0x0334AEEC B 0x334B858
	0x0334AEF0 ADRP X8, 0xDDF000
	0x0334AEF4 LDR X8, [X8 + 0xDC8]
	0x0334AEF8 MOV X0, X20
	0x0334AEFC MOV X2, X31
	0x0334AF00 LDR X1, [X8]
	0x0334AF04 BL 0x321BA08
	0x0334AF08 TBZ X0, 0x0, 0x334B88C
	0x0334AF0C MOVZ W19, 0x470
	0x0334AF10 B 0x334B858
	0x0334AF14 ADRP X8, 0xDDF000
	0x0334AF18 LDR X8, [X8 + 0xC08]
	0x0334AF1C MOV X0, X20
	0x0334AF20 MOV X2, X31
	0x0334AF24 LDR X1, [X8]
	0x0334AF28 BL 0x321BA08
	0x0334AF2C TBZ X0, 0x0, 0x334B88C
	0x0334AF30 MOVZ W19, 0x414
	0x0334AF34 B 0x334B858
	0x0334AF38 ADRP X8, 0xDDF000
	0x0334AF3C LDR X8, [X8 + 0xEA8]
	0x0334AF40 MOV X0, X20
	0x0334AF44 MOV X2, X31
	0x0334AF48 LDR X1, [X8]
	0x0334AF4C BL 0x321BA08
	0x0334AF50 TBZ X0, 0x0, 0x334B88C
	0x0334AF54 MOVZ W19, 0x425
	0x0334AF58 B 0x334B858
	0x0334AF5C ADRP X8, 0xDDF000
	0x0334AF60 LDR X8, [X8 + 0xF40]
	0x0334AF64 B 0x334B1E0
	0x0334AF68 ADRP X8, 0xDDF000
	0x0334AF6C LDR X8, [X8 + 0xF38]
	0x0334AF70 MOV X0, X20
	0x0334AF74 MOV X2, X31
	0x0334AF78 LDR X1, [X8]
	0x0334AF7C BL 0x321BA08
	0x0334AF80 TBZ X0, 0x0, 0x334B88C
	0x0334AF84 MOVZ W19, 0x44B
	0x0334AF88 B 0x334B858
	0x0334AF8C ADRP X8, 0xDDF000
	0x0334AF90 LDR X8, [X8 + 0xDD8]
	0x0334AF94 MOV X0, X20
	0x0334AF98 MOV X2, X31
	0x0334AF9C LDR X1, [X8]
	0x0334AFA0 BL 0x321BA08
	0x0334AFA4 TBZ X0, 0x0, 0x334B88C
	0x0334AFA8 MOVZ W19, 0x42F
	0x0334AFAC B 0x334B858
	0x0334AFB0 ADRP X8, 0xDDF000
	0x0334AFB4 LDR X8, [X8 + 0xF18]
	0x0334AFB8 MOV X0, X20
	0x0334AFBC MOV X2, X31
	0x0334AFC0 LDR X1, [X8]
	0x0334AFC4 BL 0x321BA08
	0x0334AFC8 TBZ X0, 0x0, 0x334B88C
	0x0334AFCC MOVZ W19, 0x462
	0x0334AFD0 B 0x334B858
	0x0334AFD4 ADRP X8, 0xDDF000
	0x0334AFD8 LDR X8, [X8 + 0xF08]
	0x0334AFDC MOV X0, X20
	0x0334AFE0 MOV X2, X31
	0x0334AFE4 LDR X1, [X8]
	0x0334AFE8 BL 0x321BA08
	0x0334AFEC TBZ X0, 0x0, 0x334B88C
	0x0334AFF0 MOVZ W19, 0x143B
	0x0334AFF4 B 0x334B858
	0x0334AFF8 ADRP X8, 0xDDF000
	0x0334AFFC LDR X8, [X8 + 0xE28]
	0x0334B000 MOV X0, X20
	0x0334B004 MOV X2, X31
	0x0334B008 LDR X1, [X8]
	0x0334B00C BL 0x321BA08
	0x0334B010 TBZ X0, 0x0, 0x334B88C
	0x0334B014 MOVZ W19, 0x423
	0x0334B018 B 0x334B858
	0x0334B01C ADRP X8, 0xDDE000
	0x0334B020 LDR X8, [X8 + 0xF48]
	0x0334B024 MOV X0, X20
	0x0334B028 MOV X2, X31
	0x0334B02C LDR X1, [X8]
	0x0334B030 BL 0x321BA08
	0x0334B034 TBZ X0, 0x0, 0x334B88C
	0x0334B038 MOVZ W19, 0x44E
	0x0334B03C B 0x334B858
	0x0334B040 ADRP X8, 0xDDE000
	0x0334B044 LDR X8, [X8 + 0xEB0]
	0x0334B048 MOV X0, X20
	0x0334B04C MOV X2, X31
	0x0334B050 LDR X1, [X8]
	0x0334B054 BL 0x321BA08
	0x0334B058 TBZ X0, 0x0, 0x334B88C
	0x0334B05C MOVZ W19, 0x415
	0x0334B060 B 0x334B858
	0x0334B064 ADRP X8, 0xDDE000
	0x0334B068 LDR X8, [X8 + 0xBB0]
	0x0334B06C MOV X0, X20
	0x0334B070 MOV X2, X31
	0x0334B074 LDR X1, [X8]
	0x0334B078 BL 0x321BA08
	0x0334B07C TBZ X0, 0x0, 0x334B88C
	0x0334B080 MOVZ W19, 0x46A
	0x0334B084 B 0x334B858
	0x0334B088 ADRP X8, 0xDDE000
	0x0334B08C LDR X8, [X8 + 0xE40]
	0x0334B090 MOV X0, X20
	0x0334B094 MOV X2, X31
	0x0334B098 LDR X1, [X8]
	0x0334B09C BL 0x321BA08
	0x0334B0A0 TBZ X0, 0x0, 0x334B88C
	0x0334B0A4 MOVZ W19, 0x83C
	0x0334B0A8 B 0x334B858
	0x0334B0AC ADRP X8, 0xDDE000
	0x0334B0B0 LDR X8, [X8 + 0xD88]
	0x0334B0B4 MOV X0, X20
	0x0334B0B8 MOV X2, X31
	0x0334B0BC LDR X1, [X8]
	0x0334B0C0 BL 0x321BA08
	0x0334B0C4 TBZ X0, 0x0, 0x334B88C
	0x0334B0C8 MOVZ W19, 0x401
	0x0334B0CC B 0x334B858
	0x0334B0D0 ADRP X8, 0xDDE000
	0x0334B0D4 LDR X8, [X8 + 0xE18]
	0x0334B0D8 B 0x334B408
	0x0334B0DC ADRP X8, 0xDDE000
	0x0334B0E0 LDR X8, [X8 + 0xE90]
	0x0334B0E4 MOV X0, X20
	0x0334B0E8 MOV X2, X31
	0x0334B0EC LDR X1, [X8]
	0x0334B0F0 BL 0x321BA08
	0x0334B0F4 TBZ X0, 0x0, 0x334B88C
	0x0334B0F8 MOVZ W19, 0x464
	0x0334B0FC B 0x334B858
	0x0334B100 ADRP X8, 0xDDE000
	0x0334B104 LDR X8, [X8 + 0xC40]
	0x0334B108 MOV X0, X20
	0x0334B10C MOV X2, X31
	0x0334B110 LDR X1, [X8]
	0x0334B114 BL 0x321BA08
	0x0334B118 TBZ X0, 0x0, 0x334B88C
	0x0334B11C MOVZ W19, 0x46D
	0x0334B120 B 0x334B858
	0x0334B124 ADRP X8, 0xDDE000
	0x0334B128 LDR X8, [X8 + 0xDB0]
	0x0334B12C MOV X0, X20
	0x0334B130 MOV X2, X31
	0x0334B134 LDR X1, [X8]
	0x0334B138 BL 0x321BA08
	0x0334B13C TBZ X0, 0x0, 0x334B88C
	0x0334B140 MOVZ W19, 0x42B
	0x0334B144 B 0x334B858
	0x0334B148 ADRP X8, 0xDDD000
	0x0334B14C LDR X8, [X8 + 0x4A8]
	0x0334B150 MOV X0, X20
	0x0334B154 MOV X2, X31
	0x0334B158 LDR X1, [X8]
	0x0334B15C BL 0x321BA08
	0x0334B160 TBZ X0, 0x0, 0x334B88C
	0x0334B164 MOVZ W19, 0x42D
	0x0334B168 B 0x334B858
	0x0334B16C ADRP X8, 0xDDE000
	0x0334B170 LDR X8, [X8 + 0xE70]
	0x0334B174 MOV X0, X20
	0x0334B178 MOV X2, X31
	0x0334B17C LDR X1, [X8]
	0x0334B180 BL 0x321BA08
	0x0334B184 TBZ X0, 0x0, 0x334B88C
	0x0334B188 MOVZ W19, 0xC04
	0x0334B18C B 0x334B858
	0x0334B190 ADRP X8, 0xDD6000
	0x0334B194 LDR X8, [X8 + 0xAB8]
	0x0334B198 MOV X0, X20
	0x0334B19C MOV X2, X31
	0x0334B1A0 LDR X1, [X8]
	0x0334B1A4 BL 0x321BA08
	0x0334B1A8 TBZ X0, 0x0, 0x334B88C
	0x0334B1AC MOVZ W19, 0x412
	0x0334B1B0 B 0x334B858
	0x0334B1B4 ADRP X8, 0xDDE000
	0x0334B1B8 LDR X8, [X8 + 0xB80]
	0x0334B1BC MOV X0, X20
	0x0334B1C0 MOV X2, X31
	0x0334B1C4 LDR X1, [X8]
	0x0334B1C8 BL 0x321BA08
	0x0334B1CC TBZ X0, 0x0, 0x334B88C
	0x0334B1D0 MOVZ W19, 0x468
	0x0334B1D4 B 0x334B858
	0x0334B1D8 ADRP X8, 0xDDE000
	0x0334B1DC LDR X8, [X8 + 0xBE8]
	0x0334B1E0 MOV X0, X20
	0x0334B1E4 MOV X2, X31
	0x0334B1E8 LDR X1, [X8]
	0x0334B1EC BL 0x321BA08
	0x0334B1F0 TBZ X0, 0x0, 0x334B88C
	0x0334B1F4 MOVZ W19, 0x141A
	0x0334B1F8 B 0x334B858
	0x0334B1FC ADRP X8, 0xDDE000
	0x0334B200 LDR X8, [X8 + 0xCC8]
	0x0334B204 MOV X0, X20
	0x0334B208 MOV X2, X31
	0x0334B20C LDR X1, [X8]
	0x0334B210 BL 0x321BA08
	0x0334B214 TBZ X0, 0x0, 0x334B88C
	0x0334B218 MOVZ W19, 0x42C
	0x0334B21C B 0x334B858
	0x0334B220 ADRP X8, 0xDDE000
	0x0334B224 LDR X8, [X8 + 0xC60]
	0x0334B228 B 0x334B78C
	0x0334B22C ADRP X8, 0xDDE000
	0x0334B230 LDR X8, [X8 + 0xC88]
	0x0334B234 MOV X0, X20
	0x0334B238 MOV X2, X31
	0x0334B23C LDR X1, [X8]
	0x0334B240 BL 0x321BA08
	0x0334B244 TBZ X0, 0x0, 0x334B88C
	0x0334B248 MOVZ W19, 0x428
	0x0334B24C B 0x334B858
	0x0334B250 ADRP X8, 0xDDE000
	0x0334B254 LDR X8, [X8 + 0xD08]
	0x0334B258 MOV X0, X20
	0x0334B25C MOV X2, X31
	0x0334B260 LDR X1, [X8]
	0x0334B264 BL 0x321BA08
	0x0334B268 TBZ X0, 0x0, 0x334B88C
	0x0334B26C MOVZ W19, 0x453
	0x0334B270 B 0x334B858
	0x0334B274 ADRP X8, 0xDDE000
	0x0334B278 LDR X8, [X8 + 0xC90]
	0x0334B27C MOV X0, X20
	0x0334B280 MOV X2, X31
	0x0334B284 LDR X1, [X8]
	0x0334B288 BL 0x321BA08
	0x0334B28C TBZ X0, 0x0, 0x334B88C
	0x0334B290 MOVZ W19, 0x488
	0x0334B294 B 0x334B858
	0x0334B298 ADRP X8, 0xDDE000
	0x0334B29C LDR X8, [X8 + 0xD60]
	0x0334B2A0 MOV X0, X20
	0x0334B2A4 MOV X2, X31
	0x0334B2A8 LDR X1, [X8]
	0x0334B2AC BL 0x321BA08
	0x0334B2B0 TBZ X0, 0x0, 0x334B88C
	0x0334B2B4 MOVZ W19, 0x41B
	0x0334B2B8 B 0x334B858
	0x0334B2BC ADRP X8, 0xDDD000
	0x0334B2C0 LDR X8, [X8 + 0xC60]
	0x0334B2C4 MOV X0, X20
	0x0334B2C8 MOV X2, X31
	0x0334B2CC LDR X1, [X8]
	0x0334B2D0 BL 0x321BA08
	0x0334B2D4 TBZ X0, 0x0, 0x334B88C
	0x0334B2D8 MOVZ W19, 0x40D
	0x0334B2DC B 0x334B858
	0x0334B2E0 ADRP X8, 0xDDE000
	0x0334B2E4 LDR X8, [X8 + 0xDF8]
	0x0334B2E8 MOV X0, X20
	0x0334B2EC MOV X2, X31
	0x0334B2F0 LDR X1, [X8]
	0x0334B2F4 BL 0x321BA08
	0x0334B2F8 TBZ X0, 0x0, 0x334B88C
	0x0334B2FC MOVZ W19, 0x41D
	0x0334B300 B 0x334B858
	0x0334B304 ADRP X8, 0xDDE000
	0x0334B308 LDR X8, [X8 + 0xF78]
	0x0334B30C MOV X0, X20
	0x0334B310 MOV X2, X31
	0x0334B314 LDR X1, [X8]
	0x0334B318 BL 0x321BA08
	0x0334B31C TBZ X0, 0x0, 0x334B88C
	0x0334B320 MOVZ W19, 0x82E
	0x0334B324 B 0x334B858
	0x0334B328 ADRP X8, 0xDDE000
	0x0334B32C LDR X8, [X8 + 0xD68]
	0x0334B330 MOV X0, X20
	0x0334B334 MOV X2, X31
	0x0334B338 LDR X1, [X8]
	0x0334B33C BL 0x321BA08
	0x0334B340 TBZ X0, 0x0, 0x334B88C
	0x0334B344 MOVZ W19, 0x491
	0x0334B348 B 0x334B858
	0x0334B34C ADRP X8, 0xDDE000
	0x0334B350 LDR X8, [X8 + 0xE50]
	0x0334B354 MOV X0, X20
	0x0334B358 MOV X2, X31
	0x0334B35C LDR X1, [X8]
	0x0334B360 BL 0x321BA08
	0x0334B364 TBZ X0, 0x0, 0x334B88C
	0x0334B368 MOVZ W19, 0x403
	0x0334B36C B 0x334B858
	0x0334B370 ADRP X8, 0xDDE000
	0x0334B374 LDR X8, [X8 + 0xBE0]
	0x0334B378 MOV X0, X20
	0x0334B37C MOV X2, X31
	0x0334B380 LDR X1, [X8]
	0x0334B384 BL 0x321BA08
	0x0334B388 TBZ X0, 0x0, 0x334B88C
	0x0334B38C MOVZ W19, 0x410
	0x0334B390 B 0x334B858
	0x0334B394 ADRP X8, 0xDDE000
	0x0334B398 LDR X8, [X8 + 0xE00]
	0x0334B39C MOV X0, X20
	0x0334B3A0 MOV X2, X31
	0x0334B3A4 LDR X1, [X8]
	0x0334B3A8 BL 0x321BA08
	0x0334B3AC TBZ X0, 0x0, 0x334B88C
	0x0334B3B0 MOVZ W19, 0x482
	0x0334B3B4 B 0x334B858
	0x0334B3B8 ADRP X8, 0xDDE000
	0x0334B3BC LDR X8, [X8 + 0xBB8]
	0x0334B3C0 MOV X0, X20
	0x0334B3C4 MOV X2, X31
	0x0334B3C8 LDR X1, [X8]
	0x0334B3CC BL 0x321BA08
	0x0334B3D0 TBZ X0, 0x0, 0x334B88C
	0x0334B3D4 MOVZ W19, 0x451
	0x0334B3D8 B 0x334B858
	0x0334B3DC ADRP X8, 0xDDE000
	0x0334B3E0 LDR X8, [X8 + 0xCE0]
	0x0334B3E4 MOV X0, X20
	0x0334B3E8 MOV X2, X31
	0x0334B3EC LDR X1, [X8]
	0x0334B3F0 BL 0x321BA08
	0x0334B3F4 TBZ X0, 0x0, 0x334B88C
	0x0334B3F8 MOVZ W19, 0x463
	0x0334B3FC B 0x334B858
	0x0334B400 ADRP X8, 0xDDE000
	0x0334B404 LDR X8, [X8 + 0xF10]
	0x0334B408 MOV X0, X20
	0x0334B40C MOV X2, X31
	0x0334B410 LDR X1, [X8]
	0x0334B414 BL 0x321BA08
	0x0334B418 TBZ X0, 0x0, 0x334B88C
	0x0334B41C MOVZ W19, 0x443
	0x0334B420 B 0x334B858
	0x0334B424 ADRP X8, 0xDDE000
	0x0334B428 LDR X8, [X8 + 0xF30]
	0x0334B42C MOV X0, X20
	0x0334B430 MOV X2, X31
	0x0334B434 LDR X1, [X8]
	0x0334B438 BL 0x321BA08
	0x0334B43C TBZ X0, 0x0, 0x334B88C
	0x0334B440 MOVZ W19, 0x843
	0x0334B444 B 0x334B858
	0x0334B448 ADRP X8, 0xDDE000
	0x0334B44C LDR X8, [X8 + 0xC68]
	0x0334B450 MOV X0, X20
	0x0334B454 MOV X2, X31
	0x0334B458 LDR X1, [X8]
	0x0334B45C BL 0x321BA08
	0x0334B460 TBZ X0, 0x0, 0x334B88C
	0x0334B464 MOVZ W19, 0x44F
	0x0334B468 B 0x334B858
	0x0334B46C ADRP X8, 0xDDE000
	0x0334B470 LDR X8, [X8 + 0xC98]
	0x0334B474 MOV X0, X20
	0x0334B478 MOV X2, X31
	0x0334B47C LDR X1, [X8]
	0x0334B480 BL 0x321BA08
	0x0334B484 TBZ X0, 0x0, 0x334B88C
	0x0334B488 MOVZ W19, 0x43E
	0x0334B48C B 0x334B858
	0x0334B490 ADRP X8, 0xDDE000
	0x0334B494 LDR X8, [X8 + 0xBF0]
	0x0334B498 MOV X0, X20
	0x0334B49C MOV X2, X31
	0x0334B4A0 LDR X1, [X8]
	0x0334B4A4 BL 0x321BA08
	0x0334B4A8 TBZ X0, 0x0, 0x334B88C
	0x0334B4AC MOVZ W19, 0x40C
	0x0334B4B0 B 0x334B858
	0x0334B4B4 ADRP X8, 0xDDD000
	0x0334B4B8 LDR X8, [X8 + 0xC68]
	0x0334B4BC B 0x334B720
	0x0334B4C0 ADRP X8, 0xDDE000
	0x0334B4C4 LDR X8, [X8 + 0xD30]
	0x0334B4C8 MOV X0, X20
	0x0334B4CC MOV X2, X31
	0x0334B4D0 LDR X1, [X8]
	0x0334B4D4 BL 0x321BA08
	0x0334B4D8 TBZ X0, 0x0, 0x334B88C
	0x0334B4DC MOVZ W19, 0xC0A
	0x0334B4E0 B 0x334B858
	0x0334B4E4 ADRP X8, 0xDDE000
	0x0334B4E8 LDR X8, [X8 + 0xEA0]
	0x0334B4EC MOV X0, X20
	0x0334B4F0 MOV X2, X31
	0x0334B4F4 LDR X1, [X8]
	0x0334B4F8 BL 0x321BA08
	0x0334B4FC TBZ X0, 0x0, 0x334B88C
	0x0334B500 MOVZ W19, 0x429
	0x0334B504 B 0x334B858
	0x0334B508 ADRP X8, 0xDDE000
	0x0334B50C LDR X8, [X8 + 0xCD8]
	0x0334B510 B 0x334B6CC
	0x0334B514 ADRP X8, 0xDDE000
	0x0334B518 LDR X8, [X8 + 0xF50]
	0x0334B51C MOV X0, X20
	0x0334B520 MOV X2, X31
	0x0334B524 LDR X1, [X8]
	0x0334B528 BL 0x321BA08
	0x0334B52C TBZ X0, 0x0, 0x334B88C
	0x0334B530 MOVZ W19, 0x45B
	0x0334B534 B 0x334B858
	0x0334B538 ADRP X8, 0xDDE000
	0x0334B53C LDR X8, [X8 + 0xE98]
	0x0334B540 MOV X0, X20
	0x0334B544 MOV X2, X31
	0x0334B548 LDR X1, [X8]
	0x0334B54C BL 0x321BA08
	0x0334B550 TBZ X0, 0x0, 0x334B88C
	0x0334B554 MOVZ W19, 0x82C
	0x0334B558 B 0x334B858
	0x0334B55C ADRP X8, 0xDDE000
	0x0334B560 LDR X8, [X8 + 0xED0]
	0x0334B564 MOV X0, X20
	0x0334B568 MOV X2, X31
	0x0334B56C LDR X1, [X8]
	0x0334B570 BL 0x321BA08
	0x0334B574 TBZ X0, 0x0, 0x334B88C
	0x0334B578 MOVZ W19, 0x448
	0x0334B57C B 0x334B858
	0x0334B580 ADRP X8, 0xDDE000
	0x0334B584 LDR X8, [X8 + 0xBD0]
	0x0334B588 MOV X0, X20
	0x0334B58C MOV X2, X31
	0x0334B590 LDR X1, [X8]
	0x0334B594 BL 0x321BA08
	0x0334B598 TBZ X0, 0x0, 0x334B88C
	0x0334B59C MOVZ W19, 0x416
	0x0334B5A0 B 0x334B858
	0x0334B5A4 ADRP X8, 0xDDE000
	0x0334B5A8 LDR X8, [X8 + 0xCA8]
	0x0334B5AC MOV X0, X20
	0x0334B5B0 MOV X2, X31
	0x0334B5B4 LDR X1, [X8]
	0x0334B5B8 BL 0x321BA08
	0x0334B5BC TBZ X0, 0x0, 0x334B88C
	0x0334B5C0 MOVZ W19, 0x487
	0x0334B5C4 B 0x334B858
	0x0334B5C8 ADRP X8, 0xDDE000
	0x0334B5CC LDR X8, [X8 + 0xBD8]
	0x0334B5D0 MOV X0, X20
	0x0334B5D4 MOV X2, X31
	0x0334B5D8 LDR X1, [X8]
	0x0334B5DC BL 0x321BA08
	0x0334B5E0 TBZ X0, 0x0, 0x334B88C
	0x0334B5E4 MOVZ W19, 0x465
	0x0334B5E8 B 0x334B858
	0x0334B5EC ADRP X8, 0xDDE000
	0x0334B5F0 LDR X8, [X8 + 0xE30]
	0x0334B5F4 MOV X0, X20
	0x0334B5F8 MOV X2, X31
	0x0334B5FC LDR X1, [X8]
	0x0334B600 BL 0x321BA08
	0x0334B604 TBZ X0, 0x0, 0x334B88C
	0x0334B608 MOVZ W19, 0x203B
	0x0334B60C B 0x334B858
	0x0334B610 ADRP X8, 0xDDE000
	0x0334B614 LDR X8, [X8 + 0xBC8]
	0x0334B618 MOV X0, X20
	0x0334B61C MOV X2, X31
	0x0334B620 LDR X1, [X8]
	0x0334B624 BL 0x321BA08
	0x0334B628 TBZ X0, 0x0, 0x334B88C
	0x0334B62C MOVZ W19, 0x243B
	0x0334B630 B 0x334B858
	0x0334B634 ADRP X8, 0xDDE000
	0x0334B638 LDR X8, [X8 + 0xD80]
	0x0334B63C MOV X0, X20
	0x0334B640 MOV X2, X31
	0x0334B644 LDR X1, [X8]
	0x0334B648 BL 0x321BA08
	0x0334B64C TBZ X0, 0x0, 0x334B88C
	0x0334B650 MOVZ W19, 0x42A
	0x0334B654 B 0x334B858
	0x0334B658 ADRP X8, 0xDDE000
	0x0334B65C LDR X8, [X8 + 0xE08]
	0x0334B660 MOV X0, X20
	0x0334B664 MOV X2, X31
	0x0334B668 LDR X1, [X8]
	0x0334B66C BL 0x321BA08
	0x0334B670 TBZ X0, 0x0, 0x334B88C
	0x0334B674 MOVZ W19, 0x43B
	0x0334B678 B 0x334B858
	0x0334B67C ADRP X8, 0xDDE000
	0x0334B680 LDR X8, [X8 + 0xB90]
	0x0334B684 MOV X0, X20
	0x0334B688 MOV X2, X31
	0x0334B68C LDR X1, [X8]
	0x0334B690 BL 0x321BA08
	0x0334B694 TBZ X0, 0x0, 0x334B88C
	0x0334B698 MOVZ W19, 0x480
	0x0334B69C B 0x334B858
	0x0334B6A0 ADRP X8, 0xDDE000
	0x0334B6A4 LDR X8, [X8 + 0xF68]
	0x0334B6A8 MOV X0, X20
	0x0334B6AC MOV X2, X31
	0x0334B6B0 LDR X1, [X8]
	0x0334B6B4 BL 0x321BA08
	0x0334B6B8 TBZ X0, 0x0, 0x334B88C
	0x0334B6BC MOVZ W19, 0x426
	0x0334B6C0 B 0x334B858
	0x0334B6C4 ADRP X8, 0xDDE000
	0x0334B6C8 LDR X8, [X8 + 0xF70]
	0x0334B6CC MOV X0, X20
	0x0334B6D0 MOV X2, X31
	0x0334B6D4 LDR X1, [X8]
	0x0334B6D8 BL 0x321BA08
	0x0334B6DC TBZ X0, 0x0, 0x334B88C
	0x0334B6E0 MOVZ W19, 0x85D
	0x0334B6E4 B 0x334B858
	0x0334B6E8 ADRP X8, 0xDDE000
	0x0334B6EC LDR X8, [X8 + 0xCA0]
	0x0334B6F0 MOV X0, X20
	0x0334B6F4 MOV X2, X31
	0x0334B6F8 LDR X1, [X8]
	0x0334B6FC BL 0x321BA08
	0x0334B700 TBZ X0, 0x0, 0x334B88C
	0x0334B704 MOVZ W19, 0x437
	0x0334B708 B 0x334B858
	0x0334B70C ADRP X8, 0xDDE000
	0x0334B710 LDR X8, [X8 + 0xC80]
	0x0334B714 B 0x334B720
	0x0334B718 ADRP X8, 0xDDE000
	0x0334B71C LDR X8, [X8 + 0xEF8]
	0x0334B720 MOV X0, X20
	0x0334B724 MOV X2, X31
	0x0334B728 LDR X1, [X8]
	0x0334B72C BL 0x321BA08
	0x0334B730 TBZ X0, 0x0, 0x334B88C
	0x0334B734 MOVZ W19, 0x804
	0x0334B738 B 0x334B858
	0x0334B73C ADRP X8, 0xDDE000
	0x0334B740 LDR X8, [X8 + 0xD40]
	0x0334B744 MOV X0, X20
	0x0334B748 MOV X2, X31
	0x0334B74C LDR X1, [X8]
	0x0334B750 BL 0x321BA08
	0x0334B754 TBZ X0, 0x0, 0x334B88C
	0x0334B758 MOVZ W19, 0x445
	0x0334B75C B 0x334B858
	0x0334B760 ADRP X8, 0xDDE000
	0x0334B764 LDR X8, [X8 + 0xD20]
	0x0334B768 MOV X0, X20
	0x0334B76C MOV X2, X31
	0x0334B770 LDR X1, [X8]
	0x0334B774 BL 0x321BA08
	0x0334B778 TBZ X0, 0x0, 0x334B88C
	0x0334B77C MOVZ W19, 0x46F
	0x0334B780 B 0x334B858
	0x0334B784 ADRP X8, 0xDDE000
	0x0334B788 LDR X8, [X8 + 0xF28]
	0x0334B78C MOV X0, X20
	0x0334B790 MOV X2, X31
	0x0334B794 LDR X1, [X8]
	0x0334B798 BL 0x321BA08
	0x0334B79C TBZ X0, 0x0, 0x334B88C
	0x0334B7A0 MOVZ W19, 0x450
	0x0334B7A4 B 0x334B858
	0x0334B7A8 ADRP X8, 0xDDE000
	0x0334B7AC LDR X8, [X8 + 0xD00]
	0x0334B7B0 MOV X0, X20
	0x0334B7B4 MOV X2, X31
	0x0334B7B8 LDR X1, [X8]
	0x0334B7BC BL 0x321BA08
	0x0334B7C0 TBZ X0, 0x0, 0x334B88C
	0x0334B7C4 MOVZ W19, 0x413
	0x0334B7C8 B 0x334B858
	0x0334B7CC ADRP X8, 0xDDE000
	0x0334B7D0 LDR X8, [X8 + 0xC50]
	0x0334B7D4 MOV X0, X20
	0x0334B7D8 MOV X2, X31
	0x0334B7DC LDR X1, [X8]
	0x0334B7E0 BL 0x321BA08
	0x0334B7E4 TBZ X0, 0x0, 0x334B88C
	0x0334B7E8 MOVZ W19, 0x47E
	0x0334B7EC B 0x334B858
	0x0334B7F0 ADRP X8, 0xDDE000
	0x0334B7F4 LDR X8, [X8 + 0xDC0]
	0x0334B7F8 MOV X0, X20
	0x0334B7FC MOV X2, X31
	0x0334B800 LDR X1, [X8]
	0x0334B804 BL 0x321BA08
	0x0334B808 TBZ X0, 0x0, 0x334B88C
	0x0334B80C MOVZ W19, 0x41A
	0x0334B810 B 0x334B858
	0x0334B814 ADRP X8, 0xDDE000
	0x0334B818 LDR X8, [X8 + 0xE58]
	0x0334B81C MOV X0, X20
	0x0334B820 MOV X2, X31
	0x0334B824 LDR X1, [X8]
	0x0334B828 BL 0x321BA08
	0x0334B82C TBZ X0, 0x0, 0x334B88C
	0x0334B830 MOVZ W19, 0x42E
	0x0334B834 B 0x334B858
	0x0334B838 ADRP X8, 0xDDE000
	0x0334B83C LDR X8, [X8 + 0xF60]
	0x0334B840 MOV X0, X20
	0x0334B844 MOV X2, X31
	0x0334B848 LDR X1, [X8]
	0x0334B84C BL 0x321BA08
	0x0334B850 TBZ X0, 0x0, 0x334B88C
	0x0334B854 MOVZ W19, 0x486
	0x0334B858 ADRP X8, 0xDAA000
	0x0334B85C LDR X8, [X8 + 0xC48]
	0x0334B860 LDR X0, [X8]
	0x0334B864 BL 0x1C16F10
	0x0334B868 MOVZ W2, 0x1
	0x0334B86C MOV W1, W19
	0x0334B870 MOV W3, W31
	0x0334B874 MOV X20, X0
	0x0334B878 BL 0x33488C4
	0x0334B87C MOV X0, X20
	0x0334B880 LDP X20, X19, [X31 + 0x10]
	0x0334B884 LDR X30, [X31], #0x20
	0x0334B888 RET
	0x0334B88C ADRP X0, 0xDDE000
	0x0334B890 LDR X0, [X0 + 0xF88]
	0x0334B894 BL 0x1C16D08
	0x0334B898 MOV X1, X19
	0x0334B89C MOV X2, X31
	0x0334B8A0 BL 0x321B938
	0x0334B8A4 MOV X19, X0
	0x0334B8A8 ADRP X0, 0xDB1000
	0x0334B8AC LDR X0, [X0 + 0x758]
	0x0334B8B0 BL 0x1C16D08
	0x0334B8B4 BL 0x1C16F10
	0x0334B8B8 MOV X1, X19
	0x0334B8BC MOV X2, X31
	0x0334B8C0 MOV X20, X0
	0x0334B8C4 BL 0x33802E4
	0x0334B8C8 ADRP X0, 0xDDE000
	0x0334B8CC LDR X0, [X0 + 0xF90]
	0x0334B8D0 BL 0x1C16D08
	0x0334B8D4 MOV X1, X0
	0x0334B8D8 MOV X0, X20
	0x0334B8DC BL 0x1C16DEC
	0x0334B8E0 BL 0x1C16F20
	0x0334B8E4 STR X30, [X31 - 0x20]!
	0x0334B8E8 STP X20, X19, [X31 + 0x10]
	0x0334B8EC ADRP X20, 0x1091000
	0x0334B8F0 ADRP X19, 0xDAA000
	0x0334B8F4 LDRB W8, [X20 + 0xD8D]
	0x0334B8F8 LDR X19, [X19 + 0xC48]
	0x0334B8FC TBNZ X8, 0x0, 0x334B914
	0x0334B900 ADRP X0, 0xDAA000
	0x0334B904 LDR X0, [X0 + 0xC48]
	0x0334B908 BL 0x1C16CF4
	0x0334B90C MOVZ W8, 0x1
	0x0334B910 STRB W8, [X20 + 0xD8D]
	0x0334B914 LDR X0, [X19]
	0x0334B918 LDR W8, [X0 + 0xE0]
	0x0334B91C CBNZ W8, 0x334B928
	0x0334B920 BL 0x1C16DFC
	0x0334B924 LDR X0, [X19]
	0x0334B928 LDR X8, [X0 + 0xB8]
	0x0334B92C LDR X19, [X8 + 0x20]
	0x0334B930 BL 0x1C16D44
	0x0334B934 MOV X0, X19
	0x0334B938 LDP X20, X19, [X31 + 0x10]
	0x0334B93C LDR X30, [X31], #0x20
	0x0334B940 RET
	0x0334B944 STR X30, [X31 - 0x20]!
	0x0334B948 STP X20, X19, [X31 + 0x10]
	0x0334B94C ADRP X20, 0x1091000
	0x0334B950 ADRP X19, 0xDAA000
	0x0334B954 LDRB W8, [X20 + 0xD8E]
	0x0334B958 LDR X19, [X19 + 0xC48]
	0x0334B95C TBNZ X8, 0x0, 0x334B974
	0x0334B960 ADRP X0, 0xDAA000
	0x0334B964 LDR X0, [X0 + 0xC48]
	0x0334B968 BL 0x1C16CF4
	0x0334B96C MOVZ W8, 0x1
	0x0334B970 STRB W8, [X20 + 0xD8E]
	0x0334B974 LDR X0, [X19]
	0x0334B978 LDR W8, [X0 + 0xE0]
	0x0334B97C CBNZ W8, 0x334B988
	0x0334B980 BL 0x1C16DFC
	0x0334B984 LDR X0, [X19]
	0x0334B988 LDR X8, [X0 + 0xB8]
	0x0334B98C LDR X19, [X8 + 0x18]
	0x0334B990 BL 0x1C16D44
	0x0334B994 MOV X0, X19
	0x0334B998 LDP X20, X19, [X31 + 0x10]
	0x0334B99C LDR X30, [X31], #0x20
	0x0334B9A0 RET
	0x0334B9A4 LDR X0, [X0 + 0x48]
	0x0334B9A8 RET
	0x0334B9AC STR X30, [X31 - 0x20]!
	0x0334B9B0 STP X20, X19, [X31 + 0x10]
	0x0334B9B4 ADRP X19, 0x1091000
	0x0334B9B8 ADRP X20, 0xDAA000
	0x0334B9BC LDRB W8, [X19 + 0xD8F]
	0x0334B9C0 LDR X20, [X20 + 0xC48]
	0x0334B9C4 TBNZ X8, 0x0, 0x334B9DC
	0x0334B9C8 ADRP X0, 0xDAA000
	0x0334B9CC LDR X0, [X0 + 0xC48]
	0x0334B9D0 BL 0x1C16CF4
	0x0334B9D4 MOVZ W8, 0x1
	0x0334B9D8 STRB W8, [X19 + 0xD8F]
	0x0334B9DC LDR X0, [X20]
	0x0334B9E0 LDR W8, [X0 + 0xE0]
	0x0334B9E4 CBNZ W8, 0x334B9EC
	0x0334B9E8 BL 0x1C16DFC
	0x0334B9EC LDP X20, X19, [X31 + 0x10]
	0x0334B9F0 LDR X30, [X31], #0x20
	0x0334B9F4 B 0x334778C
	0x0334B9F8 STR X30, [X31 - 0x20]!
	0x0334B9FC STP X20, X19, [X31 + 0x10]
	0x0334BA00 ADRP X19, 0x1091000
	0x0334BA04 ADRP X20, 0xDAA000
	0x0334BA08 LDRB W8, [X19 + 0xD90]
	0x0334BA0C LDR X20, [X20 + 0xC48]
	0x0334BA10 TBNZ X8, 0x0, 0x334BA28
	0x0334BA14 ADRP X0, 0xDAA000
	0x0334BA18 LDR X0, [X0 + 0xC48]
	0x0334BA1C BL 0x1C16CF4
	0x0334BA20 MOVZ W8, 0x1
	0x0334BA24 STRB W8, [X19 + 0xD90]
	0x0334BA28 LDR X0, [X20]
	0x0334BA2C LDR W8, [X0 + 0xE0]
	0x0334BA30 CBNZ W8, 0x334BA38
	0x0334BA34 BL 0x1C16DFC
	0x0334BA38 LDP X20, X19, [X31 + 0x10]
	0x0334BA3C LDR X30, [X31], #0x20
	0x0334BA40 B 0x334736C
	0x0334BA44 STR X30, [X31 - 0x10]!
	0x0334BA48 BL 0x1C17294
	0x0334BA4C LDR X30, [X31], #0x10
	0x0334BA50 B 0x1C16D14
	0x0334BA54 STR X30, [X31 - 0x20]!
	0x0334BA58 STP X20, X19, [X31 + 0x10]
	0x0334BA5C ADRP X19, 0x1091000
	0x0334BA60 ADRP X20, 0xDAA000
	0x0334BA64 LDRB W8, [X19 + 0xD92]
	0x0334BA68 LDR X20, [X20 + 0xC48]
	0x0334BA6C TBNZ X8, 0x0, 0x334BA9C
	0x0334BA70 ADRP X0, 0xDDE000
	0x0334BA74 LDR X0, [X0 + 0xF98]
	0x0334BA78 BL 0x1C16CF4
	0x0334BA7C ADRP X0, 0xDAA000
	0x0334BA80 LDR X0, [X0 + 0xC48]
	0x0334BA84 BL 0x1C16CF4
	0x0334BA88 ADRP X0, 0xDDE000
	0x0334BA8C LDR X0, [X0 + 0xFA0]
	0x0334BA90 BL 0x1C16CF4
	0x0334BA94 MOVZ W8, 0x1
	0x0334BA98 STRB W8, [X19 + 0xD92]
	0x0334BA9C LDR X0, [X20]
	0x0334BAA0 LDR W8, [X0 + 0xE0]
	0x0334BAA4 CBNZ W8, 0x334BAB0
	0x0334BAA8 BL 0x1C16DFC
	0x0334BAAC LDR X0, [X20]
	0x0334BAB0 LDR X8, [X0 + 0xB8]
	0x0334BAB4 LDR X8, [X8 + 0x38]
	0x0334BAB8 CBNZ X8, 0x334BB08
	0x0334BABC ADRP X8, 0xDDE000
	0x0334BAC0 LDR X8, [X8 + 0xFA0]
	0x0334BAC4 LDR X0, [X8]
	0x0334BAC8 BL 0x1C16F10
	0x0334BACC ADRP X8, 0xDDE000
	0x0334BAD0 LDR X8, [X8 + 0xF98]
	0x0334BAD4 MOV X1, X31
	0x0334BAD8 MOV X3, X31
	0x0334BADC MOV X19, X0
	0x0334BAE0 LDR X2, [X8]
	0x0334BAE4 BL 0x334BBC8
	0x0334BAE8 LDR X0, [X20]
	0x0334BAEC LDR W8, [X0 + 0xE0]
	0x0334BAF0 CBNZ W8, 0x334BAF8
	0x0334BAF4 BL 0x1C16DFC
	0x0334BAF8 MOV X0, X19
	0x0334BAFC BL 0x1C17294
	0x0334BB00 BL 0x1C16D14
	0x0334BB04 LDR X0, [X20]
	0x0334BB08 LDR W8, [X0 + 0xE0]
	0x0334BB0C CBNZ W8, 0x334BB18
	0x0334BB10 BL 0x1C16DFC
	0x0334BB14 LDR X0, [X20]
	0x0334BB18 LDR X8, [X0 + 0xB8]
	0x0334BB1C LDP X20, X19, [X31 + 0x10]
	0x0334BB20 LDR X0, [X8 + 0x38]
	0x0334BB24 LDR X30, [X31], #0x20
	0x0334BB28 RET
	0x0334BB2C STP X30, X21, [X31 - 0x20]!
	0x0334BB30 STP X20, X19, [X31 + 0x10]
	0x0334BB34 ADRP X19, 0x1091000
	0x0334BB38 ADRP X20, 0xDAA000
	0x0334BB3C ADRP X21, 0xDAE000
	0x0334BB40 LDRB W8, [X19 + 0xD93]
	0x0334BB44 LDR X20, [X20 + 0xC48]
	0x0334BB48 LDR X21, [X21 + 0xCC0]
	0x0334BB4C TBNZ X8, 0x0, 0x334BB70
	0x0334BB50 ADRP X0, 0xDAA000
	0x0334BB54 LDR X0, [X0 + 0xC48]
	0x0334BB58 BL 0x1C16CF4
	0x0334BB5C ADRP X0, 0xDAE000
	0x0334BB60 LDR X0, [X0 + 0xCC0]
	0x0334BB64 BL 0x1C16CF4
	0x0334BB68 MOVZ W8, 0x1
	0x0334BB6C STRB W8, [X19 + 0xD93]
	0x0334BB70 LDR X0, [X20]
	0x0334BB74 BL 0x1C16F10
	0x0334BB78 MOVZ W1, 0x7F
	0x0334BB7C MOVZ W3, 0x1
	0x0334BB80 MOV W2, W31
	0x0334BB84 MOV X19, X0
	0x0334BB88 BL 0x33488C4
	0x0334BB8C BL 0x1C16D44
	0x0334BB90 LDR X8, [X20]
	0x0334BB94 LDR X8, [X8 + 0xB8]
	0x0334BB98 STR X19, [X8]
	0x0334BB9C LDR X0, [X21]
	0x0334BBA0 BL 0x1C16F10
	0x0334BBA4 MOV X1, X31
	0x0334BBA8 MOV X19, X0
	0x0334BBAC BL 0x33BDD8C
	0x0334BBB0 LDR X8, [X20]
	0x0334BBB4 LDR X8, [X8 + 0xB8]
	0x0334BBB8 STR X19, [X8 + 0x8]
	0x0334BBBC LDP X20, X19, [X31 + 0x10]
	0x0334BBC0 LDP X30, X21, [X31], #0x20
	0x0334BBC4 RET
	0x0334BBC8 STP X30, X21, [X31 - 0x20]!
	0x0334BBCC STP X20, X19, [X31 + 0x10]
	0x0334BBD0 LDR X8, [X2 + 0x8]
	0x0334BBD4 STP X1, X2, [X0 + 0x20]
	0x0334BBD8 MOV X19, X0
	0x0334BBDC MOV X20, X1
	0x0334BBE0 STR X8, [X0 + 0x10]
	0x0334BBE4 LDRB W21, [X2 + 0x52]
	0x0334BBE8 STR X0, [X0 + 0x40]
	0x0334BBEC MOV X0, X2
	0x0334BBF0 BL 0x1C16D84
	0x0334BBF4 TBZ X0, 0x0, 0x334BC0C
	0x0334BBF8 CMP W21, 0x1
	0x0334BBFC B.NE 0x334BC14
	0x0334BC00 ADRP X8, 0xFFFFFFFFFE86D000
	0x0334BC04 ADD X8, X8, 0xB24
	0x0334BC08 B 0x334BC30
	0x0334BC0C CBZ W21, 0x334BC28
	0x0334BC10 CBZ X20, 0x334BC4C
	0x0334BC14 LDR X8, [X19 + 0x10]
	0x0334BC18 LDR X9, [X19 + 0x20]
	0x0334BC1C STR X8, [X19 + 0x18]
	0x0334BC20 STR X9, [X19 + 0x40]
	0x0334BC24 B 0x334BC34
	0x0334BC28 ADRP X8, 0xFFFFFFFFFE86D000
	0x0334BC2C ADD X8, X8, 0xB04
	0x0334BC30 STR X8, [X19 + 0x18]
	0x0334BC34 ADRP X8, 0xFFFFFFFFFE86D000
	0x0334BC38 ADD X8, X8, 0xABC
	0x0334BC3C STR X8, [X19 + 0x38]
	0x0334BC40 LDP X20, X19, [X31 + 0x10]
	0x0334BC44 LDP X30, X21, [X31], #0x20
	0x0334BC48 RET
	0x0334BC4C ADRP X1, 0xFFFFFFFFFD7D0000
	0x0334BC50 ADD X1, X1, 0xEE3
	0x0334BC54 MOV X0, X31
	0x0334BC58 BL 0x1C16F3C
	0x0334BC5C MOV X1, X31
	0x0334BC60 BL 0x1C16DEC
	0x0334BC64 LDR X8, [X0 + 0x40]
	0x0334BC68 LDR X3, [X0 + 0x18]
	0x0334BC6C LDR X2, [X0 + 0x28]
	0x0334BC70 MOV X0, X8
	0x0334BC74 BR X3
	0x0334BC78 STP X30, X21, [X31 - 0x20]!
	0x0334BC7C STP X20, X19, [X31 + 0x10]
	0x0334BC80 ADRP X20, 0x1091000
	0x0334BC84 ADRP X21, 0xDDE000
	0x0334BC88 LDRB W8, [X20 + 0xD94]
	0x0334BC8C LDR X21, [X21 + 0xFA8]
	0x0334BC90 MOV X19, X0
	0x0334BC94 TBNZ X8, 0x0, 0x334BCAC
	0x0334BC98 ADRP X0, 0xDDE000
	0x0334BC9C LDR X0, [X0 + 0xFA8]
	0x0334BCA0 BL 0x1C16CF4
	0x0334BCA4 MOVZ W8, 0x1
	0x0334BCA8 STRB W8, [X20 + 0xD94]
	0x0334BCAC LDR X0, [X21]
	0x0334BCB0 BL 0x1C16F10
	0x0334BCB4 MOV X1, X31
	0x0334BCB8 MOV X20, X0
	0x0334BCBC BL 0x33BDD8C
	0x0334BCC0 ADRP X9, 0xFFFFFFFFFD7A0000
	0x0334BCC4 ADRP X10, 0xFFFFFFFFFD7A2000
	0x0334BCC8 LDR V0, [X9 + 0xD8]
	0x0334BCCC LDR V1, [X10 + 0x460]
	0x0334BCD0 MOVZ W8, 0x2D
	0x0334BCD4 MOVZ W11, 0x80
	0x0334BCD8 STRH W8, [X20 + 0x10]
	0x0334BCDC STR W11, [X20 + 0x2C]
	0x0334BCE0 STUR V0, [X20 + 0x14]
	0x0334BCE4 STUR D1, [X20 + 0x24]
	0x0334BCE8 STR X20, [X19 + 0x18]
	0x0334BCEC MOV X0, X19
	0x0334BCF0 LDP X20, X19, [X31 + 0x10]
	0x0334BCF4 MOV X1, X31
	0x0334BCF8 LDP X30, X21, [X31], #0x20
	0x0334BCFC B 0x33BDD8C
	0x0334BD00 STP X30, X19, [X31 - 0x10]!
	0x0334BD04 MOV X1, X31
	0x0334BD08 MOV X19, X0
	0x0334BD0C BL 0x33BDD8C
	0x0334BD10 ADRP X9, 0xFFFFFFFFFD7A0000
	0x0334BD14 ADRP X10, 0xFFFFFFFFFD7A2000
	0x0334BD18 LDR V0, [X9 + 0xD8]
	0x0334BD1C LDR V1, [X10 + 0x460]
	0x0334BD20 MOVZ W8, 0x2D
	0x0334BD24 MOVZ W9, 0x80
	0x0334BD28 STRH W8, [X19 + 0x10]
	0x0334BD2C STUR V0, [X19 + 0x14]
	0x0334BD30 STUR D1, [X19 + 0x24]
	0x0334BD34 STR W9, [X19 + 0x2C]
	0x0334BD38 LDP X30, X19, [X31], #0x10
	0x0334BD3C RET
	0x0334BD40 STP X30, X21, [X31 - 0x20]!
	0x0334BD44 STP X20, X19, [X31 + 0x10]
	0x0334BD48 ADRP X21, 0x1091000
	0x0334BD4C LDRB W8, [X21 + 0xD95]
	0x0334BD50 MOV X20, X1
	0x0334BD54 MOV X19, X0
	0x0334BD58 TBNZ X8, 0x0, 0x334BD70
	0x0334BD5C ADRP X0, 0xDDE000
	0x0334BD60 LDR X0, [X0 + 0xFB0]
	0x0334BD64 BL 0x1C16CF4
	0x0334BD68 MOVZ W8, 0x1
	0x0334BD6C STRB W8, [X21 + 0xD95]
	0x0334BD70 CBZ X20, 0x334BDB8
	0x0334BD74 ADRP X8, 0xDDE000
	0x0334BD78 LDR X8, [X8 + 0xFB0]
	0x0334BD7C LDR X9, [X20]
	0x0334BD80 LDR X8, [X8]
	0x0334BD84 CMP X9, X8
	0x0334BD88 CSEL X8, X20, X31, EQ
	0x0334BD8C B.NE 0x334BDB8
	0x0334BD90 CBZ X8, 0x334BDC8
	0x0334BD94 LDRB W9, [X19 + 0x10]
	0x0334BD98 LDRB W10, [X8 + 0x10]
	0x0334BD9C CMP W9, W10
	0x0334BDA0 B.NE 0x334BDB8
	0x0334BDA4 LDRB W9, [X19 + 0x11]
	0x0334BDA8 LDRB W8, [X8 + 0x11]
	0x0334BDAC CMP W9, W8
	0x0334BDB0 CSET W0, EQ
	0x0334BDB4 B 0x334BDBC
	0x0334BDB8 MOV W0, W31
	0x0334BDBC LDP X20, X19, [X31 + 0x10]
	0x0334BDC0 LDP X30, X21, [X31], #0x20
	0x0334BDC4 RET
	0x0334BDC8 BL 0x1C16F20
	0x0334BDCC LDRB W8, [X0 + 0x10]
	0x0334BDD0 LDRB W9, [X0 + 0x11]
	0x0334BDD4 ORR W0, W9, W8, 0x1
	0x0334BDD8 RET
	0x0334BDDC STP X30, X19, [X31 - 0x10]!
	0x0334BDE0 CBZ X1, 0x334BDF4
	0x0334BDE4 LDR W3, [X1 + 0x10]
	0x0334BDE8 MOV W2, W31
	0x0334BDEC LDP X30, X19, [X31], #0x10
	0x0334BDF0 B 0x334BE3C
	0x0334BDF4 ADRP X0, 0xDAD000
	0x0334BDF8 LDR X0, [X0 + 0x528]
	0x0334BDFC BL 0x1C16D08
	0x0334BE00 BL 0x1C16F10
	0x0334BE04 MOV X19, X0
	0x0334BE08 ADRP X0, 0xDDE000
	0x0334BE0C LDR X0, [X0 + 0x478]
	0x0334BE10 BL 0x1C16D08
	0x0334BE14 MOV X1, X0
	0x0334BE18 MOV X0, X19
	0x0334BE1C MOV X2, X31
	0x0334BE20 BL 0x330E100
	0x0334BE24 ADRP X0, 0xDDE000
	0x0334BE28 LDR X0, [X0 + 0xFB8]
	0x0334BE2C BL 0x1C16D08
	0x0334BE30 MOV X1, X0
	0x0334BE34 MOV X0, X19
	0x0334BE38 BL 0x1C16DEC
	0x0334BE3C STP X30, X19, [X31 - 0x10]!
	0x0334BE40 CBZ X1, 0x334BE88
	0x0334BE44 TBNZ X2, 0x1F, 0x334BEBC
	0x0334BE48 TBNZ X3, 0x1F, 0x334BE68
	0x0334BE4C LDR W8, [X1 + 0x10]
	0x0334BE50 ADD W9, W3, W2
	0x0334BE54 CMP W9, W8
	0x0334BE58 B.GT 0x334BE68
	0x0334BE5C MOVZ W4, 0x1
	0x0334BE60 LDP X30, X19, [X31], #0x10
	0x0334BE64 B 0x334BF04
	0x0334BE68 ADRP X0, 0xDB0000
	0x0334BE6C LDR X0, [X0 + 0x760]
	0x0334BE70 BL 0x1C16D08
	0x0334BE74 BL 0x1C16F10
	0x0334BE78 MOV X19, X0
	0x0334BE7C ADRP X0, 0xDDE000
	0x0334BE80 LDR X0, [X0 + 0xFC0]
	0x0334BE84 B 0x334BED8
	0x0334BE88 ADRP X0, 0xDAD000
	0x0334BE8C LDR X0, [X0 + 0x528]
	0x0334BE90 BL 0x1C16D08
	0x0334BE94 BL 0x1C16F10
	0x0334BE98 MOV X19, X0
	0x0334BE9C ADRP X0, 0xDDE000
	0x0334BEA0 LDR X0, [X0 + 0x478]
	0x0334BEA4 BL 0x1C16D08
	0x0334BEA8 MOV X1, X0
	0x0334BEAC MOV X0, X19
	0x0334BEB0 MOV X2, X31
	0x0334BEB4 BL 0x330E100
	0x0334BEB8 B 0x334BEEC
	0x0334BEBC ADRP X0, 0xDB0000
	0x0334BEC0 LDR X0, [X0 + 0x760]
	0x0334BEC4 BL 0x1C16D08
	0x0334BEC8 BL 0x1C16F10
	0x0334BECC MOV X19, X0
	0x0334BED0 ADRP X0, 0xDDE000
	0x0334BED4 LDR X0, [X0 + 0xFC8]
	0x0334BED8 BL 0x1C16D08
	0x0334BEDC MOV X1, X0
	0x0334BEE0 MOV X0, X19
	0x0334BEE4 MOV X2, X31
	0x0334BEE8 BL 0x3316014
	0x0334BEEC ADRP X0, 0xDDE000
	0x0334BEF0 LDR X0, [X0 + 0xFD0]
	0x0334BEF4 BL 0x1C16D08
	0x0334BEF8 MOV X1, X0
	0x0334BEFC MOV X0, X19
	0x0334BF00 BL 0x1C16DEC
	0x0334BF04 STP X30, X25, [X31 - 0x40]!
	0x0334BF08 STP X24, X23, [X31 + 0x10]
	0x0334BF0C STP X22, X21, [X31 + 0x20]
	0x0334BF10 STP X20, X19, [X31 + 0x30]
	0x0334BF14 ADRP X24, 0x1091000
	0x0334BF18 LDRB W8, [X24 + 0xD96]
	0x0334BF1C MOV W19, W4
	0x0334BF20 MOV W21, W3
	0x0334BF24 MOV W22, W2
	0x0334BF28 MOV X23, X1
	0x0334BF2C MOV X20, X0
	0x0334BF30 TBNZ X8, 0x0, 0x334BF6C
	0x0334BF34 ADRP X0, 0xDB1000
	0x0334BF38 LDR X0, [X0 + 0x8D8]
	0x0334BF3C BL 0x1C16CF4
	0x0334BF40 ADRP X0, 0xDAA000
	0x0334BF44 LDR X0, [X0 + 0xC48]
	0x0334BF48 BL 0x1C16CF4
	0x0334BF4C ADRP X0, 0xDDE000
	0x0334BF50 LDR X0, [X0 + 0xFD8]
	0x0334BF54 BL 0x1C16CF4
	0x0334BF58 ADRP X0, 0xDB1000
	0x0334BF5C LDR X0, [X0 + 0x790]
	0x0334BF60 BL 0x1C16CF4
	0x0334BF64 MOVZ W8, 0x1
	0x0334BF68 STRB W8, [X24 + 0xD96]
	0x0334BF6C CBZ X23, 0x334C0FC
	0x0334BF70 MOV X0, X23
	0x0334BF74 MOV W1, W22
	0x0334BF78 MOV W2, W21
	0x0334BF7C MOV X3, X31
	0x0334BF80 BL 0x3228DE4
	0x0334BF84 CBZ X0, 0x334C0FC
	0x0334BF88 LDR W8, [X0 + 0x10]
	0x0334BF8C ADRP X24, 0xDB1000
	0x0334BF90 ADRP X23, 0xDDE000
	0x0334BF94 LDR X24, [X24 + 0x8D8]
	0x0334BF98 LDR X23, [X23 + 0xFD8]
	0x0334BF9C MOV X21, X0
	0x0334BFA0 CMP W8, 0x1
	0x0334BFA4 B.LT 0x334C010
	0x0334BFA8 MOV W22, W31
	0x0334BFAC MOV X0, X21
	0x0334BFB0 MOV W1, W22
	0x0334BFB4 MOV X2, X31
	0x0334BFB8 BL 0x3222A1C
	0x0334BFBC AND W8, W0, 0xFFFF
	0x0334BFC0 CMP W8, 0x80
	0x0334BFC4 B.CS 0x334BFDC
	0x0334BFC8 LDR W8, [X21 + 0x10]
	0x0334BFCC ADD W22, W22, 0x1
	0x0334BFD0 CMP W22, W8
	0x0334BFD4 B.LT 0x334BFAC
	0x0334BFD8 B 0x334C010
	0x0334BFDC ADRP X8, 0xDAA000
	0x0334BFE0 LDR X8, [X8 + 0xC48]
	0x0334BFE4 LDR X0, [X8]
	0x0334BFE8 LDR W8, [X0 + 0xE0]
	0x0334BFEC CBNZ W8, 0x334BFF4
	0x0334BFF0 BL 0x1C16DFC
	0x0334BFF4 MOV X0, X31
	0x0334BFF8 BL 0x3338524
	0x0334BFFC MOV X1, X0
	0x0334C000 MOV X0, X21
	0x0334C004 MOV X2, X31
	0x0334C008 BL 0x322B660
	0x0334C00C MOV X21, X0
	0x0334C010 LDR X0, [X24]
	0x0334C014 MOVZ W1, 0x4
	0x0334C018 BL 0x1C16D6C
	0x0334C01C LDR X1, [X23]
	0x0334C020 MOV X2, X31
	0x0334C024 MOV X22, X0
	0x0334C028 BL 0x32C5BD8
	0x0334C02C CBZ X21, 0x334C0FC
	0x0334C030 MOV X0, X21
	0x0334C034 MOV X1, X22
	0x0334C038 MOV X2, X31
	0x0334C03C BL 0x3229E68
	0x0334C040 CBZ X0, 0x334C0FC
	0x0334C044 LDR X8, [X0 + 0x18]
	0x0334C048 MOV X21, X0
	0x0334C04C CMP W8, 0x1
	0x0334C050 B.LT 0x334C0D0
	0x0334C054 MOV W23, W31
	0x0334C058 MOV W22, W31
	0x0334C05C CMP W23, W8
	0x0334C060 B.CS 0x334C0F8
	0x0334C064 ADD X25, X21, W23, 0x3, SXTW
	0x0334C068 LDR X1, [X25 + 0x20]!
	0x0334C06C CBZ X1, 0x334C0FC
	0x0334C070 ADD W24, W23, 0x1
	0x0334C074 CMP W24, W8
	0x0334C078 B.NE 0x334C084
	0x0334C07C LDR W9, [X1 + 0x10]
	0x0334C080 CBZ W9, 0x334C0B0
	0x0334C084 MOV X0, X20
	0x0334C088 MOV W2, W22
	0x0334C08C TBZ X19, 0x0, 0x334C098
	0x0334C090 BL 0x334C100
	0x0334C094 B 0x334C09C
	0x0334C098 BL 0x334C334
	0x0334C09C LDR X8, [X21 + 0x18]
	0x0334C0A0 CMP W23, W8
	0x0334C0A4 B.CS 0x334C0F8
	0x0334C0A8 MOV X1, X0
	0x0334C0AC STR X0, [X25]
	0x0334C0B0 CMP W23, W8
	0x0334C0B4 B.CS 0x334C0F8
	0x0334C0B8 CBZ X1, 0x334C0FC
	0x0334C0BC LDR W9, [X1 + 0x10]
	0x0334C0C0 CMP W24, W8
	0x0334C0C4 MOV W23, W24
	0x0334C0C8 ADD W22, W9, W22
	0x0334C0CC B.LT 0x334C05C
	0x0334C0D0 ADRP X8, 0xDB0000
	0x0334C0D4 LDR X8, [X8 + 0x790]
	0x0334C0D8 MOV X1, X21
	0x0334C0DC LDP X20, X19, [X31 + 0x30]
	0x0334C0E0 LDP X22, X21, [X31 + 0x20]
	0x0334C0E4 LDR X0, [X8]
	0x0334C0E8 LDP X24, X23, [X31 + 0x10]
	0x0334C0EC MOV X2, X31
	0x0334C0F0 LDP X30, X25, [X31], #0x40
	0x0334C0F4 B 0x3227FF8
	0x0334C0F8 BL 0x1C16F28
	0x0334C0FC BL 0x1C16F20
	0x0334C100 SUB X31, X31, 0x40
	0x0334C104 STP X30, X23, [X31 + 0x10]
	0x0334C108 STP X22, X21, [X31 + 0x20]
	0x0334C10C STP X20, X19, [X31 + 0x30]
	0x0334C110 ADRP X22, 0x1090000
	0x0334C114 LDRB W8, [X22 + 0xD97]
	0x0334C118 MOV W19, W2
	0x0334C11C MOV X20, X1
	0x0334C120 MOV X21, X0
	0x0334C124 TBNZ X8, 0x0, 0x334C13C
	0x0334C128 ADRP X0, 0xDDD000
	0x0334C12C LDR X0, [X0 + 0xFE0]
	0x0334C130 BL 0x1C16CF4
	0x0334C134 MOVZ W8, 0x1
	0x0334C138 STRB W8, [X22 + 0xD97]
	0x0334C13C CBZ X20, 0x334C304
	0x0334C140 LDR W8, [X20 + 0x10]
	0x0334C144 CMP W8, 0x1
	0x0334C148 B.LT 0x334C1CC
	0x0334C14C MOV W22, W31
	0x0334C150 MOV X0, X20
	0x0334C154 MOV W1, W22
	0x0334C158 MOV X2, X31
	0x0334C15C BL 0x3222A1C
	0x0334C160 AND W8, W0, 0xFFFF
	0x0334C164 CMP W8, 0x20
	0x0334C168 B.CC 0x334C290
	0x0334C16C MOV X0, X20
	0x0334C170 MOV W1, W22
	0x0334C174 MOV X2, X31
	0x0334C178 BL 0x3222A1C
	0x0334C17C AND W8, W0, 0xFFFF
	0x0334C180 CMP W8, 0x7F
	0x0334C184 B.EQ 0x334C290
	0x0334C188 MOV X0, X20
	0x0334C18C MOV W1, W22
	0x0334C190 MOV X2, X31
	0x0334C194 BL 0x3222A1C
	0x0334C198 AND W8, W0, 0xFFFF
	0x0334C19C CMP W8, 0x80
	0x0334C1A0 B.CS 0x334C1B8
	0x0334C1A4 LDR W8, [X20 + 0x10]
	0x0334C1A8 ADD W22, W22, 0x1
	0x0334C1AC CMP W22, W8
	0x0334C1B0 B.LT 0x334C150
	0x0334C1B4 B 0x334C1CC
	0x0334C1B8 MOV X0, X21
	0x0334C1BC MOV X1, X20
	0x0334C1C0 MOV W2, W19
	0x0334C1C4 BL 0x334C504
	0x0334C1C8 MOV X20, X0
	0x0334C1CC LDRB W8, [X21 + 0x11]
	0x0334C1D0 CBZ W8, 0x334C1E0
	0x0334C1D4 MOV X1, X20
	0x0334C1D8 MOV W2, W19
	0x0334C1DC BL 0x334C648
	0x0334C1E0 CBZ X20, 0x334C304
	0x0334C1E4 LDR W8, [X20 + 0x10]
	0x0334C1E8 CMP W8, 0x1
	0x0334C1EC B.LT 0x334C26C
	0x0334C1F0 MOV W22, W31
	0x0334C1F4 MOV X0, X20
	0x0334C1F8 MOV W1, W22
	0x0334C1FC MOV X2, X31
	0x0334C200 BL 0x3222A1C
	0x0334C204 AND W8, W0, 0xFFFF
	0x0334C208 CMP W8, 0x80
	0x0334C20C B.CS 0x334C224
	0x0334C210 LDR W8, [X20 + 0x10]
	0x0334C214 ADD W22, W22, 0x1
	0x0334C218 CMP W22, W8
	0x0334C21C B.LT 0x334C1F4
	0x0334C220 B 0x334C26C
	0x0334C224 ADRP X23, 0xDDD000
	0x0334C228 LDR X23, [X23 + 0xFE0]
	0x0334C22C MOVZ W2, 0x5
	0x0334C230 MOV X0, X20
	0x0334C234 MOV X3, X31
	0x0334C238 LDR X1, [X23]
	0x0334C23C BL 0x3226FBC
	0x0334C240 TBNZ X0, 0x0, 0x334C308
	0x0334C244 LDR X0, [X21 + 0x18]
	0x0334C248 CBZ X0, 0x334C304
	0x0334C24C MOV X1, X20
	0x0334C250 BL 0x334C810
	0x0334C254 LDR X8, [X23]
	0x0334C258 MOV X1, X0
	0x0334C25C MOV X2, X31
	0x0334C260 MOV X0, X8
	0x0334C264 BL 0x321B938
	0x0334C268 MOV X20, X0
	0x0334C26C MOV X1, X20
	0x0334C270 MOV W2, W19
	0x0334C274 BL 0x334CB58
	0x0334C278 MOV X0, X20
	0x0334C27C LDP X20, X19, [X31 + 0x30]
	0x0334C280 LDP X22, X21, [X31 + 0x20]
	0x0334C284 LDP X30, X23, [X31 + 0x10]
	0x0334C288 ADD X31, X31, 0x40
	0x0334C28C RET
	0x0334C290 ADD W8, W19, W22
	0x0334C294 STR W8, [X31 + 0xC]
	0x0334C298 ADRP X0, 0xDA7000
	0x0334C29C LDR X0, [X0 + 0x758]
	0x0334C2A0 BL 0x1C16D08
	0x0334C2A4 ADD X1, X31, 0xC
	0x0334C2A8 BL 0x1C16E04
	0x0334C2AC MOV X19, X0
	0x0334C2B0 ADRP X0, 0xDDD000
	0x0334C2B4 LDR X0, [X0 + 0xFE8]
	0x0334C2B8 BL 0x1C16D08
	0x0334C2BC MOV X1, X19
	0x0334C2C0 MOV X2, X31
	0x0334C2C4 BL 0x321EFD0
	0x0334C2C8 MOV X19, X0
	0x0334C2CC ADRP X0, 0xDAF000
	0x0334C2D0 LDR X0, [X0 + 0x578]
	0x0334C2D4 BL 0x1C16D08
	0x0334C2D8 BL 0x1C16F10
	0x0334C2DC MOV X1, X19
	0x0334C2E0 MOV X2, X31
	0x0334C2E4 MOV X20, X0
	0x0334C2E8 BL 0x3314A68
	0x0334C2EC ADRP X0, 0xDDD000
	0x0334C2F0 LDR X0, [X0 + 0xFF0]
	0x0334C2F4 BL 0x1C16D08
	0x0334C2F8 MOV X1, X0
	0x0334C2FC MOV X0, X20
	0x0334C300 BL 0x1C16DEC
	0x0334C304 BL 0x1C16F20
	0x0334C308 ADD W8, W19, W22
	0x0334C30C STR W8, [X31 + 0x8]
	0x0334C310 ADRP X0, 0xDA7000
	0x0334C314 LDR X0, [X0 + 0x758]
	0x0334C318 BL 0x1C16D08
	0x0334C31C ADD X1, X31, 0x8
	0x0334C320 BL 0x1C16E04
	0x0334C324 MOV X19, X0
	0x0334C328 ADRP X0, 0xDDD000
	0x0334C32C LDR X0, [X0 + 0xFF8]
	0x0334C330 B 0x334C2B8
	0x0334C334 STR X30, [X31 - 0x30]!
	0x0334C338 STP X22, X21, [X31 + 0x10]
	0x0334C33C STP X20, X19, [X31 + 0x20]
	0x0334C340 ADRP X22, 0x1090000
	0x0334C344 LDRB W8, [X22 + 0xD9A]
	0x0334C348 MOV W19, W2
	0x0334C34C MOV X21, X1
	0x0334C350 MOV X20, X0
	0x0334C354 TBNZ X8, 0x0, 0x334C378
	0x0334C358 ADRP X0, 0xDA9000
	0x0334C35C LDR X0, [X0 + 0xC48]
	0x0334C360 BL 0x1C16CF4
	0x0334C364 ADRP X0, 0xDDD000
	0x0334C368 LDR X0, [X0 + 0xFE0]
	0x0334C36C BL 0x1C16CF4
	0x0334C370 MOVZ W8, 0x1
	0x0334C374 STRB W8, [X22 + 0xD9A]
	0x0334C378 CBZ X21, 0x334C490
	0x0334C37C LDR W8, [X21 + 0x10]
	0x0334C380 CMP W8, 0x1
	0x0334C384 B.LT 0x334C3D4
	0x0334C388 MOV W22, W31
	0x0334C38C MOV X0, X21
	0x0334C390 MOV W1, W22
	0x0334C394 MOV X2, X31
	0x0334C398 BL 0x3222A1C
	0x0334C39C AND W8, W0, 0xFFFF
	0x0334C3A0 CMP W8, 0x80
	0x0334C3A4 B.CS 0x334C3BC
	0x0334C3A8 LDR W8, [X21 + 0x10]
	0x0334C3AC ADD W22, W22, 0x1
	0x0334C3B0 CMP W22, W8
	0x0334C3B4 B.LT 0x334C38C
	0x0334C3B8 B 0x334C3D4
	0x0334C3BC MOV X0, X20
	0x0334C3C0 MOV X1, X21
	0x0334C3C4 MOV W2, W19
	0x0334C3C8 BL 0x334C504
	0x0334C3CC MOV X21, X0
	0x0334C3D0 CBZ X0, 0x334C490
	0x0334C3D4 ADRP X8, 0xDDD000
	0x0334C3D8 LDR X8, [X8 + 0xFE0]
	0x0334C3DC MOVZ W2, 0x5
	0x0334C3E0 MOV X0, X21
	0x0334C3E4 MOV X3, X31
	0x0334C3E8 LDR X1, [X8]
	0x0334C3EC BL 0x3226FBC
	0x0334C3F0 TBZ X0, 0x0, 0x334C47C
	0x0334C3F4 ADRP X8, 0xDA9000
	0x0334C3F8 LDR X8, [X8 + 0xC48]
	0x0334C3FC LDR X0, [X8]
	0x0334C400 LDR W8, [X0 + 0xE0]
	0x0334C404 CBNZ W8, 0x334C40C
	0x0334C408 BL 0x1C16DFC
	0x0334C40C MOV X0, X31
	0x0334C410 BL 0x3338524
	0x0334C414 MOV X1, X0
	0x0334C418 MOV X0, X21
	0x0334C41C MOV X2, X31
	0x0334C420 BL 0x322B660
	0x0334C424 CBZ X0, 0x334C490
	0x0334C428 MOVZ W1, 0x4
	0x0334C42C MOV X2, X31
	0x0334C430 MOV X22, X0
	0x0334C434 BL 0x322B484
	0x0334C438 LDR X8, [X20 + 0x18]
	0x0334C43C CBZ X8, 0x334C490
	0x0334C440 MOV X1, X0
	0x0334C444 MOV X0, X8
	0x0334C448 MOV W2, W19
	0x0334C44C BL 0x334CF7C
	0x0334C450 MOV X21, X0
	0x0334C454 MOV X0, X20
	0x0334C458 MOV X1, X21
	0x0334C45C MOV W2, W19
	0x0334C460 BL 0x334C100
	0x0334C464 MOV X1, X0
	0x0334C468 MOVZ W2, 0x5
	0x0334C46C MOV X0, X22
	0x0334C470 MOV X3, X31
	0x0334C474 BL 0x322590C
	0x0334C478 CBNZ W0, 0x334C494
	0x0334C47C MOV X0, X21
	0x0334C480 LDP X20, X19, [X31 + 0x20]
	0x0334C484 LDP X22, X21, [X31 + 0x10]
	0x0334C488 LDR X30, [X31], #0x30
	0x0334C48C RET
	0x0334C490 BL 0x1C16F20
	0x0334C494 STR W19, [X31 + 0xC]
	0x0334C498 ADRP X0, 0xDA7000
	0x0334C49C LDR X0, [X0 + 0x758]
	0x0334C4A0 BL 0x1C16D08
	0x0334C4A4 ADD X1, X31, 0xC
	0x0334C4A8 BL 0x1C16E04
	0x0334C4AC MOV X19, X0
	0x0334C4B0 ADRP X0, 0xDDE000
	0x0334C4B4 LDR X0, [X0]
	0x0334C4B8 BL 0x1C16D08
	0x0334C4BC MOV X1, X19
	0x0334C4C0 MOV X2, X31
	0x0334C4C4 BL 0x321EFD0
	0x0334C4C8 MOV X19, X0
	0x0334C4CC ADRP X0, 0xDAF000
	0x0334C4D0 LDR X0, [X0 + 0x578]
	0x0334C4D4 BL 0x1C16D08
	0x0334C4D8 BL 0x1C16F10
	0x0334C4DC MOV X1, X19
	0x0334C4E0 MOV X2, X31
	0x0334C4E4 MOV X20, X0
	0x0334C4E8 BL 0x3314A68
	0x0334C4EC ADRP X0, 0xDDE000
	0x0334C4F0 LDR X0, [X0 + 0x8]
	0x0334C4F4 BL 0x1C16D08
	0x0334C4F8 MOV X1, X0
	0x0334C4FC MOV X0, X20
	0x0334C500 BL 0x1C16DEC
	0x0334C504 STR X30, [X31 - 0x30]!
	0x0334C508 STP X22, X21, [X31 + 0x10]
	0x0334C50C STP X20, X19, [X31 + 0x20]
	0x0334C510 ADRP X22, 0x1090000
	0x0334C514 LDRB W8, [X22 + 0xD98]
	0x0334C518 MOV W19, W2
	0x0334C51C MOV X20, X1
	0x0334C520 MOV X21, X0
	0x0334C524 TBNZ X8, 0x0, 0x334C53C
	0x0334C528 ADRP X0, 0xDA9000
	0x0334C52C LDR X0, [X0 + 0x170]
	0x0334C530 BL 0x1C16CF4
	0x0334C534 MOVZ W8, 0x1
	0x0334C538 STRB W8, [X22 + 0xD98]
	0x0334C53C CBZ X20, 0x334C644
	0x0334C540 MOVZ W1, 0x5
	0x0334C544 MOV X0, X20
	0x0334C548 MOV X2, X31
	0x0334C54C BL 0x322E3D0
	0x0334C550 MOV X1, X0
	0x0334C554 MOV W2, W19
	0x0334C558 MOV X20, X0
	0x0334C55C BL 0x334CC1C
	0x0334C560 LDRB W8, [X21 + 0x10]
	0x0334C564 CBNZ W8, 0x334C5BC
	0x0334C568 CBZ X20, 0x334C644
	0x0334C56C LDR W8, [X20 + 0x10]
	0x0334C570 CMP W8, 0x1
	0x0334C574 B.LT 0x334C5BC
	0x0334C578 ADRP X22, 0xDA9000
	0x0334C57C LDR X22, [X22 + 0x170]
	0x0334C580 MOV W21, W31
	0x0334C584 LDR X0, [X22]
	0x0334C588 LDR W8, [X0 + 0xE0]
	0x0334C58C CBNZ W8, 0x334C594
	0x0334C590 BL 0x1C16DFC
	0x0334C594 MOV X0, X20
	0x0334C598 MOV W1, W21
	0x0334C59C MOV X2, X31
	0x0334C5A0 BL 0x331BEA8
	0x0334C5A4 CMP W0, 0x1D
	0x0334C5A8 B.EQ 0x334C5D0
	0x0334C5AC LDR W8, [X20 + 0x10]
	0x0334C5B0 ADD W21, W21, 0x1
	0x0334C5B4 CMP W21, W8
	0x0334C5B8 B.LT 0x334C584
	0x0334C5BC MOV X0, X20
	0x0334C5C0 LDP X20, X19, [X31 + 0x20]
	0x0334C5C4 LDP X22, X21, [X31 + 0x10]
	0x0334C5C8 LDR X30, [X31], #0x30
	0x0334C5CC RET
	0x0334C5D0 ADD W8, W19, W21
	0x0334C5D4 STR W8, [X31 + 0xC]
	0x0334C5D8 ADRP X0, 0xDA7000
	0x0334C5DC LDR X0, [X0 + 0x758]
	0x0334C5E0 BL 0x1C16D08
	0x0334C5E4 ADD X1, X31, 0xC
	0x0334C5E8 BL 0x1C16E04
	0x0334C5EC MOV X19, X0
	0x0334C5F0 ADRP X0, 0xDDE000
	0x0334C5F4 LDR X0, [X0 + 0x10]
	0x0334C5F8 BL 0x1C16D08
	0x0334C5FC MOV X1, X19
	0x0334C600 MOV X2, X31
	0x0334C604 BL 0x321EFD0
	0x0334C608 MOV X19, X0
	0x0334C60C ADRP X0, 0xDAF000
	0x0334C610 LDR X0, [X0 + 0x578]
	0x0334C614 BL 0x1C16D08
	0x0334C618 BL 0x1C16F10
	0x0334C61C MOV X1, X19
	0x0334C620 MOV X2, X31
	0x0334C624 MOV X20, X0
	0x0334C628 BL 0x3314A68
	0x0334C62C ADRP X0, 0xDDE000
	0x0334C630 LDR X0, [X0 + 0x18]
	0x0334C634 BL 0x1C16D08
	0x0334C638 MOV X1, X0
	0x0334C63C MOV X0, X20
	0x0334C640 BL 0x1C16DEC
	0x0334C644 BL 0x1C16F20
	0x0334C648 SUB X31, X31, 0x30
	0x0334C64C STP X30, X21, [X31 + 0x10]
	0x0334C650 STP X20, X19, [X31 + 0x20]
	0x0334C654 CBZ X1, 0x334C7A8
	0x0334C658 LDR W8, [X1 + 0x10]
	0x0334C65C MOV X20, X1
	0x0334C660 CMP W8, 0x1
	0x0334C664 B.LT 0x334C724
	0x0334C668 MOV W19, W2
	0x0334C66C MOV X0, X20
	0x0334C670 MOV W1, W31
	0x0334C674 MOV X2, X31
	0x0334C678 BL 0x3222A1C
	0x0334C67C AND W8, W0, 0xFFFF
	0x0334C680 CMP W8, 0x2D
	0x0334C684 B.EQ 0x334C7AC
	0x0334C688 LDR W8, [X20 + 0x10]
	0x0334C68C SUBS W1, W8, 0x1
	0x0334C690 B.LT 0x334C724
	0x0334C694 MOV X0, X20
	0x0334C698 MOV X2, X31
	0x0334C69C BL 0x3222A1C
	0x0334C6A0 AND W8, W0, 0xFFFF
	0x0334C6A4 CMP W8, 0x2D
	0x0334C6A8 B.EQ 0x334C7D4
	0x0334C6AC LDR W8, [X20 + 0x10]
	0x0334C6B0 CMP W8, 0x1
	0x0334C6B4 B.LT 0x334C724
	0x0334C6B8 MOV W21, W31
	0x0334C6BC MOV X0, X20
	0x0334C6C0 MOV W1, W21
	0x0334C6C4 MOV X2, X31
	0x0334C6C8 BL 0x3222A1C
	0x0334C6CC AND W8, W0, 0xFFFF
	0x0334C6D0 CMP W8, 0x2D
	0x0334C6D4 B.EQ 0x334C714
	0x0334C6D8 SUB W8, W0, 0x7B
	0x0334C6DC AND W8, W8, 0xFFFF
	0x0334C6E0 CMP W8, 0x5
	0x0334C6E4 B.CC 0x334C734
	0x0334C6E8 SUB W8, W0, 0x5B
	0x0334C6EC AND W8, W8, 0xFFFF
	0x0334C6F0 CMP W8, 0x6
	0x0334C6F4 B.CC 0x334C734
	0x0334C6F8 AND W8, W0, 0xFFFF
	0x0334C6FC CMP W8, 0x30
	0x0334C700 B.CC 0x334C734
	0x0334C704 SUB W8, W0, 0x3A
	0x0334C708 AND W8, W8, 0xFFFF
	0x0334C70C CMP W8, 0x6
	0x0334C710 B.LS 0x334C734
	0x0334C714 LDR W8, [X20 + 0x10]
	0x0334C718 ADD W21, W21, 0x1
	0x0334C71C CMP W21, W8
	0x0334C720 B.LT 0x334C6BC
	0x0334C724 LDP X20, X19, [X31 + 0x20]
	0x0334C728 LDP X30, X21, [X31 + 0x10]
	0x0334C72C ADD X31, X31, 0x30
	0x0334C730 RET
	0x0334C734 ADD W8, W19, W21
	0x0334C738 STR W8, [X31 + 0x4]
	0x0334C73C ADRP X0, 0xDA7000
	0x0334C740 LDR X0, [X0 + 0x758]
	0x0334C744 BL 0x1C16D08
	0x0334C748 ADD X1, X31, 0x4
	0x0334C74C BL 0x1C16E04
	0x0334C750 MOV X19, X0
	0x0334C754 ADRP X0, 0xDDE000
	0x0334C758 LDR X0, [X0 + 0x20]
	0x0334C75C BL 0x1C16D08
	0x0334C760 MOV X1, X19
	0x0334C764 MOV X2, X31
	0x0334C768 BL 0x321EFD0
	0x0334C76C MOV X19, X0
	0x0334C770 ADRP X0, 0xDAF000
	0x0334C774 LDR X0, [X0 + 0x578]
	0x0334C778 BL 0x1C16D08
	0x0334C77C BL 0x1C16F10
	0x0334C780 MOV X1, X19
	0x0334C784 MOV X2, X31
	0x0334C788 MOV X20, X0
	0x0334C78C BL 0x3314A68
	0x0334C790 ADRP X0, 0xDDE000
	0x0334C794 LDR X0, [X0 + 0x28]
	0x0334C798 BL 0x1C16D08
	0x0334C79C MOV X1, X0
	0x0334C7A0 MOV X0, X20
	0x0334C7A4 BL 0x1C16DEC
	0x0334C7A8 BL 0x1C16F20
	0x0334C7AC STR W19, [X31 + 0xC]
	0x0334C7B0 ADRP X0, 0xDA7000
	0x0334C7B4 LDR X0, [X0 + 0x758]
	0x0334C7B8 BL 0x1C16D08
	0x0334C7BC ADD X1, X31, 0xC
	0x0334C7C0 BL 0x1C16E04
	0x0334C7C4 MOV X19, X0
	0x0334C7C8 ADRP X0, 0xDDE000
	0x0334C7CC LDR X0, [X0 + 0x30]
	0x0334C7D0 B 0x334C75C
	0x0334C7D4 MOV X0, X20
	0x0334C7D8 BL 0x19903C0
	0x0334C7DC LDR W8, [X20 + 0x10]
	0x0334C7E0 ADRP X0, 0xDA7000
	0x0334C7E4 ADD W8, W19, W8
	0x0334C7E8 SUB W8, W8, 0x1
	0x0334C7EC STR W8, [X31 + 0x8]
	0x0334C7F0 LDR X0, [X0 + 0x758]
	0x0334C7F4 BL 0x1C16D08
	0x0334C7F8 ADD X1, X31, 0x8
	0x0334C7FC BL 0x1C16E04
	0x0334C800 MOV X19, X0
	0x0334C804 ADRP X0, 0xDDE000
	0x0334C808 LDR X0, [X0 + 0x38]
	0x0334C80C B 0x334C75C
	0x0334C810 SUB X31, X31, 0x80
	0x0334C814 STP X29, X30, [X31 + 0x20]
	0x0334C818 STP X28, X27, [X31 + 0x30]
	0x0334C81C STP X26, X25, [X31 + 0x40]
	0x0334C820 STP X24, X23, [X31 + 0x50]
	0x0334C824 STP X22, X21, [X31 + 0x60]
	0x0334C828 STP X20, X19, [X31 + 0x70]
	0x0334C82C ADRP X22, 0x1090000
	0x0334C830 ADRP X21, 0xDA7000
	0x0334C834 LDRB W8, [X22 + 0xD9B]
	0x0334C838 LDR X21, [X21 + 0x8F0]
	0x0334C83C MOV X19, X1
	0x0334C840 MOV X20, X0
	0x0334C844 TBNZ X8, 0x0, 0x334C868
	0x0334C848 ADRP X0, 0xDDE000
	0x0334C84C LDR X0, [X0 + 0x40]
	0x0334C850 BL 0x1C16CF4
	0x0334C854 ADRP X0, 0xDA7000
	0x0334C858 LDR X0, [X0 + 0x8F0]
	0x0334C85C BL 0x1C16CF4
	0x0334C860 MOVZ W8, 0x1
	0x0334C864 STRB W8, [X22 + 0xD9B]
	0x0334C868 LDR X0, [X21]
	0x0334C86C LDP W22, W25, [X20 + 0x28]
	0x0334C870 BL 0x1C16F10
	0x0334C874 MOV X1, X31
	0x0334C878 MOV X21, X0
	0x0334C87C BL 0x3231AC4
	0x0334C880 CBZ X19, 0x334CB54
	0x0334C884 LDR W8, [X19 + 0x10]
	0x0334C888 CMP W8, 0x1
	0x0334C88C B.LT 0x334C8E4
	0x0334C890 MOV W23, W31
	0x0334C894 MOV X0, X19
	0x0334C898 MOV W1, W23
	0x0334C89C MOV X2, X31
	0x0334C8A0 BL 0x3222A1C
	0x0334C8A4 AND W8, W0, 0xFFFF
	0x0334C8A8 CMP W8, 0x7F
	0x0334C8AC B.HI 0x334C8D4
	0x0334C8B0 MOV X0, X19
	0x0334C8B4 MOV W1, W23
	0x0334C8B8 MOV X2, X31
	0x0334C8BC BL 0x3222A1C
	0x0334C8C0 CBZ X21, 0x334CB54
	0x0334C8C4 MOV W1, W0
	0x0334C8C8 MOV X0, X21
	0x0334C8CC MOV X2, X31
	0x0334C8D0 BL 0x3233D30
	0x0334C8D4 LDR W8, [X19 + 0x10]
	0x0334C8D8 ADD W23, W23, 0x1
	0x0334C8DC CMP W23, W8
	0x0334C8E0 B.LT 0x334C894

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1093000
	005 Move W8, [X20+3466]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {445}
	011 Move X0, 0xDAC000
	012 Move X0, [X0+3144]
	013 Call 0x1C17CF4
	014 Move X0, 0xDE0000
	015 Move X0, [X0+2936]
	016 Call 0x1C17CF4
	017 Move X0, 0xDE0000
	018 Move X0, [X0+2944]
	019 Call 0x1C17CF4
	020 Move X0, 0xDE0000
	021 Move X0, [X0+2952]
	022 Call 0x1C17CF4
	023 Move X0, 0xDE0000
	024 Move X0, [X0+2960]
	025 Call 0x1C17CF4
	026 Move X0, 0xDE0000
	027 Move X0, [X0+2968]
	028 Call 0x1C17CF4
	029 Move X0, 0xDE0000
	030 Move X0, [X0+2976]
	031 Call 0x1C17CF4
	032 Move X0, 0xDE0000
	033 Move X0, [X0+2984]
	034 Call 0x1C17CF4
	035 Move X0, 0xDE0000
	036 Move X0, [X0+2992]
	037 Call 0x1C17CF4
	038 Move X0, 0xDE0000
	039 Move X0, [X0+3000]
	040 Call 0x1C17CF4
	041 Move X0, 0xDD8000
	042 Move X0, [X0+2736]
	043 Call 0x1C17CF4
	044 Move X0, 0xDE0000
	045 Move X0, [X0+3008]
	046 Call 0x1C17CF4
	047 Move X0, 0xDE0000
	048 Move X0, [X0+3016]
	049 Call 0x1C17CF4
	050 Move X0, 0xDDF000
	051 Move X0, [X0+1080]
	052 Call 0x1C17CF4
	053 Move X0, 0xDE0000
	054 Move X0, [X0+3024]
	055 Call 0x1C17CF4
	056 Move X0, 0xDE0000
	057 Move X0, [X0+3032]
	058 Call 0x1C17CF4
	059 Move X0, 0xDE0000
	060 Move X0, [X0+3040]
	061 Call 0x1C17CF4
	062 Move X0, 0xDE0000
	063 Move X0, [X0+3048]
	064 Call 0x1C17CF4
	065 Move X0, 0xDE0000
	066 Move X0, [X0+3056]
	067 Call 0x1C17CF4
	068 Move X0, 0xDE0000
	069 Move X0, [X0+3064]
	070 Call 0x1C17CF4
	071 Move X0, 0xDE0000
	072 Move X0, [X0+3072]
	073 Call 0x1C17CF4
	074 Move X0, 0xDE0000
	075 Move X0, [X0+3080]
	076 Call 0x1C17CF4
	077 Move X0, 0xDE0000
	078 Move X0, [X0+3088]
	079 Call 0x1C17CF4
	080 Move X0, 0xDE0000
	081 Move X0, [X0+3096]
	082 Call 0x1C17CF4
	083 Move X0, 0xDE0000
	084 Move X0, [X0+3104]
	085 Call 0x1C17CF4
	086 Move X0, 0xDE0000
	087 Move X0, [X0+3112]
	088 Call 0x1C17CF4
	089 Move X0, 0xDE0000
	090 Move X0, [X0+3120]
	091 Call 0x1C17CF4
	092 Move X0, 0xDD8000
	093 Move X0, [X0+2376]
	094 Call 0x1C17CF4
	095 Move X0, 0xDE0000
	096 Move X0, [X0+3128]
	097 Call 0x1C17CF4
	098 Move X0, 0xDE0000
	099 Move X0, [X0+3136]
	100 Call 0x1C17CF4
	101 Move X0, 0xDE0000
	102 Move X0, [X0+3144]
	103 Call 0x1C17CF4
	104 Move X0, 0xDDF000
	105 Move X0, [X0+1176]
	106 Call 0x1C17CF4
	107 Move X0, 0xDE0000
	108 Move X0, [X0+3152]
	109 Call 0x1C17CF4
	110 Move X0, 0xDE0000
	111 Move X0, [X0+3160]
	112 Call 0x1C17CF4
	113 Move X0, 0xDD8000
	114 Move X0, [X0+2744]
	115 Call 0x1C17CF4
	116 Move X0, 0xDE0000
	117 Move X0, [X0+3168]
	118 Call 0x1C17CF4
	119 Move X0, 0xDE0000
	120 Move X0, [X0+3176]
	121 Call 0x1C17CF4
	122 Move X0, 0xDDF000
	123 Move X0, [X0+2928]
	124 Call 0x1C17CF4
	125 Move X0, 0xDE0000
	126 Move X0, [X0+3184]
	127 Call 0x1C17CF4
	128 Move X0, 0xDE0000
	129 Move X0, [X0+3192]
	130 Call 0x1C17CF4
	131 Move X0, 0xDE0000
	132 Move X0, [X0+3200]
	133 Call 0x1C17CF4
	134 Move X0, 0xDDF000
	135 Move X0, [X0+2936]
	136 Call 0x1C17CF4
	137 Move X0, 0xDE0000
	138 Move X0, [X0+3208]
	139 Call 0x1C17CF4
	140 Move X0, 0xDE0000
	141 Move X0, [X0+3216]
	142 Call 0x1C17CF4
	143 Move X0, 0xDE0000
	144 Move X0, [X0+3224]
	145 Call 0x1C17CF4
	146 Move X0, 0xDE0000
	147 Move X0, [X0+3232]
	148 Call 0x1C17CF4
	149 Move X0, 0xDE0000
	150 Move X0, [X0+3240]
	151 Call 0x1C17CF4
	152 Move X0, 0xDE0000
	153 Move X0, [X0+3248]
	154 Call 0x1C17CF4
	155 Move X0, 0xDE0000
	156 Move X0, [X0+3256]
	157 Call 0x1C17CF4
	158 Move X0, 0xDE0000
	159 Move X0, [X0+3264]
	160 Call 0x1C17CF4
	161 Move X0, 0xDE0000
	162 Move X0, [X0+3272]
	163 Call 0x1C17CF4
	164 Move X0, 0xDE0000
	165 Move X0, [X0+3280]
	166 Call 0x1C17CF4
	167 Move X0, 0xDE0000
	168 Move X0, [X0+3288]
	169 Call 0x1C17CF4
	170 Move X0, 0xDE0000
	171 Move X0, [X0+3296]
	172 Call 0x1C17CF4
	173 Move X0, 0xDE0000
	174 Move X0, [X0+3304]
	175 Call 0x1C17CF4
	176 Move X0, 0xDDF000
	177 Move X0, [X0+1192]
	178 Call 0x1C17CF4
	179 Move X0, 0xDE0000
	180 Move X0, [X0+3312]
	181 Call 0x1C17CF4
	182 Move X0, 0xDE0000
	183 Move X0, [X0+3320]
	184 Call 0x1C17CF4
	185 Move X0, 0xDE0000
	186 Move X0, [X0+3328]
	187 Call 0x1C17CF4
	188 Move X0, 0xDE0000
	189 Move X0, [X0+3336]
	190 Call 0x1C17CF4
	191 Move X0, 0xDE0000
	192 Move X0, [X0+3344]
	193 Call 0x1C17CF4
	194 Move X0, 0xDE0000
	195 Move X0, [X0+3352]
	196 Call 0x1C17CF4
	197 Move X0, 0xDE0000
	198 Move X0, [X0+3360]
	199 Call 0x1C17CF4
	200 Move X0, 0xDE0000
	201 Move X0, [X0+3368]
	202 Call 0x1C17CF4
	203 Move X0, 0xDE0000
	204 Move X0, [X0+3376]
	205 Call 0x1C17CF4
	206 Move X0, 0xDE0000
	207 Move X0, [X0+3384]
	208 Call 0x1C17CF4
	209 Move X0, 0xDE0000
	210 Move X0, [X0+3392]
	211 Call 0x1C17CF4
	212 Move X0, 0xDE0000
	213 Move X0, [X0+3400]
	214 Call 0x1C17CF4
	215 Move X0, 0xDDF000
	216 Move X0, [X0+3168]
	217 Call 0x1C17CF4
	218 Move X0, 0xDE0000
	219 Move X0, [X0+3408]
	220 Call 0x1C17CF4
	221 Move X0, 0xDE0000
	222 Move X0, [X0+3416]
	223 Call 0x1C17CF4
	224 Move X0, 0xDE0000
	225 Move X0, [X0+3424]
	226 Call 0x1C17CF4
	227 Move X0, 0xDE0000
	228 Move X0, [X0+3432]
	229 Call 0x1C17CF4
	230 Move X0, 0xDE0000
	231 Move X0, [X0+3440]
	232 Call 0x1C17CF4
	233 Move X0, 0xDE0000
	234 Move X0, [X0+3448]
	235 Call 0x1C17CF4
	236 Move X0, 0xDE0000
	237 Move X0, [X0+3456]
	238 Call 0x1C17CF4
	239 Move X0, 0xDE0000
	240 Move X0, [X0+3464]
	241 Call 0x1C17CF4
	242 Move X0, 0xDE0000
	243 Move X0, [X0+3472]
	244 Call 0x1C17CF4
	245 Move X0, 0xDE0000
	246 Move X0, [X0+3480]
	247 Call 0x1C17CF4
	248 Move X0, 0xDE0000
	249 Move X0, [X0+3488]
	250 Call 0x1C17CF4
	251 Move X0, 0xDE0000
	252 Move X0, [X0+3496]
	253 Call 0x1C17CF4
	254 Move X0, 0xDE0000
	255 Move X0, [X0+3504]
	256 Call 0x1C17CF4
	257 Move X0, 0xDE0000
	258 Move X0, [X0+3512]
	259 Call 0x1C17CF4
	260 Move X0, 0xDE0000
	261 Move X0, [X0+3520]
	262 Call 0x1C17CF4
	263 Move X0, 0xDAC000
	264 Move X0, [X0+3088]
	265 Call 0x1C17CF4
	266 Move X0, 0xDE0000
	267 Move X0, [X0+3528]
	268 Call 0x1C17CF4
	269 Move X0, 0xDE0000
	270 Move X0, [X0+3536]
	271 Call 0x1C17CF4
	272 Move X0, 0xDE0000
	273 Move X0, [X0+3544]
	274 Call 0x1C17CF4
	275 Move X0, 0xDE0000
	276 Move X0, [X0+3552]
	277 Call 0x1C17CF4
	278 Move X0, 0xDE0000
	279 Move X0, [X0+3560]
	280 Call 0x1C17CF4
	281 Move X0, 0xDE0000
	282 Move X0, [X0+3568]
	283 Call 0x1C17CF4
	284 Move X0, 0xDE0000
	285 Move X0, [X0+3576]
	286 Call 0x1C17CF4
	287 Move X0, 0xDE0000
	288 Move X0, [X0+3584]
	289 Call 0x1C17CF4
	290 Move X0, 0xDE0000
	291 Move X0, [X0+3592]
	292 Call 0x1C17CF4
	293 Move X0, 0xDE0000
	294 Move X0, [X0+3600]
	295 Call 0x1C17CF4
	296 Move X0, 0xDE0000
	297 Move X0, [X0+3608]
	298 Call 0x1C17CF4
	299 Move X0, 0xDE0000
	300 Move X0, [X0+3616]
	301 Call 0x1C17CF4
	302 Move X0, 0xDE0000
	303 Move X0, [X0+3624]
	304 Call 0x1C17CF4
	305 Move X0, 0xDE0000
	306 Move X0, [X0+3632]
	307 Call 0x1C17CF4
	308 Move X0, 0xDE0000
	309 Move X0, [X0+3640]
	310 Call 0x1C17CF4
	311 Move X0, 0xDE0000
	312 Move X0, [X0+3648]
	313 Call 0x1C17CF4
	314 Move X0, 0xDE0000
	315 Move X0, [X0+3656]
	316 Call 0x1C17CF4
	317 Move X0, 0xDE0000
	318 Move X0, [X0+3664]
	319 Call 0x1C17CF4
	320 Move X0, 0xDE0000
	321 Move X0, [X0+3672]
	322 Call 0x1C17CF4
	323 Move X0, 0xDE0000
	324 Move X0, [X0+3680]
	325 Call 0x1C17CF4
	326 Move X0, 0xDE0000
	327 Move X0, [X0+3688]
	328 Call 0x1C17CF4
	329 Move X0, 0xDE0000
	330 Move X0, [X0+3696]
	331 Call 0x1C17CF4
	332 Move X0, 0xDE0000
	333 Move X0, [X0+3704]
	334 Call 0x1C17CF4
	335 Move X0, 0xDE0000
	336 Move X0, [X0+3712]
	337 Call 0x1C17CF4
	338 Move X0, 0xDE0000
	339 Move X0, [X0+3720]
	340 Call 0x1C17CF4
	341 Move X0, 0xDAD000
	342 Move X0, [X0+792]
	343 Call 0x1C17CF4
	344 Move X0, 0xDE0000
	345 Move X0, [X0+3728]
	346 Call 0x1C17CF4
	347 Move X0, 0xDAC000
	348 Move X0, [X0+96]
	349 Call 0x1C17CF4
	350 Move X0, 0xDE0000
	351 Move X0, [X0+3736]
	352 Call 0x1C17CF4
	353 Move X0, 0xDE0000
	354 Move X0, [X0+3744]
	355 Call 0x1C17CF4
	356 Move X0, 0xDE0000
	357 Move X0, [X0+3752]
	358 Call 0x1C17CF4
	359 Move X0, 0xDE0000
	360 Move X0, [X0+3760]
	361 Call 0x1C17CF4
	362 Move X0, 0xDE0000
	363 Move X0, [X0+3768]
	364 Call 0x1C17CF4
	365 Move X0, 0xDE0000
	366 Move X0, [X0+3776]
	367 Call 0x1C17CF4
	368 Move X0, 0xDE0000
	369 Move X0, [X0+3784]
	370 Call 0x1C17CF4
	371 Move X0, 0xDE0000
	372 Move X0, [X0+3792]
	373 Call 0x1C17CF4
	374 Move X0, 0xDE0000
	375 Move X0, [X0+3800]
	376 Call 0x1C17CF4
	377 Move X0, 0xDE0000
	378 Move X0, [X0+3808]
	379 Call 0x1C17CF4
	380 Move X0, 0xDE0000
	381 Move X0, [X0+3816]
	382 Call 0x1C17CF4
	383 Move X0, 0xDE0000
	384 Move X0, [X0+3824]
	385 Call 0x1C17CF4
	386 Move X0, 0xDE0000
	387 Move X0, [X0+3832]
	388 Call 0x1C17CF4
	389 Move X0, 0xDE0000
	390 Move X0, [X0+3840]
	391 Call 0x1C17CF4
	392 Move X0, 0xDE0000
	393 Move X0, [X0+3848]
	394 Call 0x1C17CF4
	395 Move X0, 0xDE0000
	396 Move X0, [X0+3856]
	397 Call 0x1C17CF4
	398 Move X0, 0xDE0000
	399 Move X0, [X0+3864]
	400 Call 0x1C17CF4
	401 Move X0, 0xDE0000
	402 Move X0, [X0+3872]
	403 Call 0x1C17CF4
	404 Move X0, 0xDDF000
	405 Move X0, [X0+3176]
	406 Call 0x1C17CF4
	407 Move X0, 0xDE0000
	408 Move X0, [X0+3880]
	409 Call 0x1C17CF4
	410 Move X0, 0xDE0000
	411 Move X0, [X0+3888]
	412 Call 0x1C17CF4
	413 Move X0, 0xDE0000
	414 Move X0, [X0+3896]
	415 Call 0x1C17CF4
	416 Move X0, 0xDE0000
	417 Move X0, [X0+3904]
	418 Call 0x1C17CF4
	419 Move X0, 0xDE0000
	420 Move X0, [X0+3912]
	421 Call 0x1C17CF4
	422 Move X0, 0xDE0000
	423 Move X0, [X0+3920]
	424 Call 0x1C17CF4
	425 Move X0, 0xDE0000
	426 Move X0, [X0+3928]
	427 Call 0x1C17CF4
	428 Move X0, 0xDE0000
	429 Move X0, [X0+3936]
	430 Call 0x1C17CF4
	431 Move X0, 0xDE0000
	432 Move X0, [X0+3944]
	433 Call 0x1C17CF4
	434 Move X0, 0xDE0000
	435 Move X0, [X0+3952]
	436 Call 0x1C17CF4
	437 Move X0, 0xDE0000
	438 Move X0, [X0+3960]
	439 Call 0x1C17CF4
	440 Move X0, 0xDE0000
	441 Move X0, [X0+3968]
	442 Call 0x1C17CF4
	443 Move W8, 1
	444 Move [X20+3466], W8
	445 Compare X19, 0
	446 JumpIfEqual {2562}
	447 Move X0, X19
	448 Move X1, X31
	449 Call String.ToLowerInvariant, X0
	450 Move X1, X31
	451 Move X20, X0
	452 Call <PrivateImplementationDetails>.ComputeStringHash, X0
	453 Move W8, 0x87B1
	454 NotImplemented "Instruction MOVK not yet implemented."
	455 NotImplemented "Instruction CMP not yet implemented."
	456 Move W8, 0x49B7
	457 NotImplemented "Instruction MOVK not yet implemented."
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Move W8, 0x7E08
	460 NotImplemented "Instruction MOVK not yet implemented."
	461 NotImplemented "Instruction CMP not yet implemented."
	462 Move W8, 0xA3A6
	463 NotImplemented "Instruction MOVK not yet implemented."
	464 NotImplemented "Instruction CMP not yet implemented."
	465 Move W8, 0x6AE0
	466 NotImplemented "Instruction MOVK not yet implemented."
	467 NotImplemented "Instruction CMP not yet implemented."
	468 Move W8, 0x22FC
	469 NotImplemented "Instruction MOVK not yet implemented."
	470 NotImplemented "Instruction CMP not yet implemented."
	471 Move W8, 0x50AB
	472 NotImplemented "Instruction MOVK not yet implemented."
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Move W8, 0x22FC
	475 NotImplemented "Instruction MOVK not yet implemented."
	476 NotImplemented "Instruction CMP not yet implemented."
	477 Move X8, 0xDE0000
	478 Move X8, [X8+3144]
	479 Move X0, X20
	480 Move X2, X31
	481 Move X1, [X8]
	482 Call String.op_Equality, X0, X1
	483 Move TEMP, X0
	484 And TEMP, TEMP, 1
	485 Compare TEMP, 1
	486 JumpIfNotEqual {2541}
	487 Move W19, 1146
	488 Move W8, 0xE842
	489 NotImplemented "Instruction MOVK not yet implemented."
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Move W8, 0xCEA2
	492 NotImplemented "Instruction MOVK not yet implemented."
	493 NotImplemented "Instruction CMP not yet implemented."
	494 Move W8, 4068
	495 NotImplemented "Instruction MOVK not yet implemented."
	496 NotImplemented "Instruction CMP not yet implemented."
	497 Move W8, 0x1262
	498 NotImplemented "Instruction MOVK not yet implemented."
	499 NotImplemented "Instruction CMP not yet implemented."
	500 Move W8, 0x588A
	501 NotImplemented "Instruction MOVK not yet implemented."
	502 NotImplemented "Instruction CMP not yet implemented."
	503 Move W8, 3945
	504 NotImplemented "Instruction MOVK not yet implemented."
	505 NotImplemented "Instruction CMP not yet implemented."
	506 Move W8, 0x588A
	507 NotImplemented "Instruction MOVK not yet implemented."
	508 NotImplemented "Instruction CMP not yet implemented."
	509 Move X8, 0xDE0000
	510 Move X8, [X8+3368]
	511 Move X0, X20
	512 Move X2, X31
	513 Move X1, [X8]
	514 Call String.op_Equality, X0, X1
	515 Move TEMP, X0
	516 And TEMP, TEMP, 1
	517 Compare TEMP, 1
	518 JumpIfNotEqual {2541}
	519 Move W19, 1094
	520 Move W8, 0x1D89
	521 NotImplemented "Instruction MOVK not yet implemented."
	522 NotImplemented "Instruction CMP not yet implemented."
	523 Move W8, 0x77F3
	524 NotImplemented "Instruction MOVK not yet implemented."
	525 NotImplemented "Instruction CMP not yet implemented."
	526 Move W8, 3654
	527 NotImplemented "Instruction MOVK not yet implemented."
	528 NotImplemented "Instruction CMP not yet implemented."
	529 Move W8, 0x7F57
	530 NotImplemented "Instruction MOVK not yet implemented."
	531 NotImplemented "Instruction CMP not yet implemented."
	532 Move W8, 0x15AA
	533 NotImplemented "Instruction MOVK not yet implemented."
	534 NotImplemented "Instruction CMP not yet implemented."
	535 Move W8, 0x7F57
	536 NotImplemented "Instruction MOVK not yet implemented."
	537 NotImplemented "Instruction CMP not yet implemented."
	538 Move X8, 0xDE0000
	539 Move X8, [X8+3192]
	540 Move X0, X20
	541 Move X2, X31
	542 Move X1, [X8]
	543 Call String.op_Equality, X0, X1
	544 Move TEMP, X0
	545 And TEMP, TEMP, 1
	546 Compare TEMP, 1
	547 JumpIfNotEqual {2541}
	548 Move W19, 1144
	549 Move W8, 0x1D86
	550 NotImplemented "Instruction MOVK not yet implemented."
	551 NotImplemented "Instruction CMP not yet implemented."
	552 Move W8, 0xF69A
	553 NotImplemented "Instruction MOVK not yet implemented."
	554 NotImplemented "Instruction CMP not yet implemented."
	555 Move W8, 0x850E
	556 NotImplemented "Instruction MOVK not yet implemented."
	557 NotImplemented "Instruction CMP not yet implemented."
	558 Move W8, 0x6FFA
	559 NotImplemented "Instruction MOVK not yet implemented."
	560 NotImplemented "Instruction CMP not yet implemented."
	561 Move W8, 0xA407
	562 NotImplemented "Instruction MOVK not yet implemented."
	563 NotImplemented "Instruction CMP not yet implemented."
	564 Move W8, 0x6FFA
	565 NotImplemented "Instruction MOVK not yet implemented."
	566 NotImplemented "Instruction CMP not yet implemented."
	567 Move X8, 0xDE0000
	568 Move X8, [X8+3400]
	569 Move W8, 0x658A
	570 NotImplemented "Instruction MOVK not yet implemented."
	571 NotImplemented "Instruction CMP not yet implemented."
	572 Move W8, 0x6264
	573 NotImplemented "Instruction MOVK not yet implemented."
	574 NotImplemented "Instruction CMP not yet implemented."
	575 Move W8, 0x41D8
	576 NotImplemented "Instruction MOVK not yet implemented."
	577 NotImplemented "Instruction CMP not yet implemented."
	578 Move W8, 0xF313
	579 NotImplemented "Instruction MOVK not yet implemented."
	580 NotImplemented "Instruction CMP not yet implemented."
	581 Move W8, 0x41D8
	582 NotImplemented "Instruction MOVK not yet implemented."
	583 NotImplemented "Instruction CMP not yet implemented."
	584 Move X8, 0xDE0000
	585 Move X8, [X8+3304]
	586 Move X0, X20
	587 Move X2, X31
	588 Move X1, [X8]
	589 Call String.op_Equality, X0, X1
	590 Move TEMP, X0
	591 And TEMP, TEMP, 1
	592 Compare TEMP, 1
	593 JumpIfNotEqual {2541}
	594 Move W19, 1090
	595 Move W8, 0x208D
	596 NotImplemented "Instruction MOVK not yet implemented."
	597 NotImplemented "Instruction CMP not yet implemented."
	598 Move W8, 0xD43C
	599 NotImplemented "Instruction MOVK not yet implemented."
	600 NotImplemented "Instruction CMP not yet implemented."
	601 Move W8, 0x17C3
	602 NotImplemented "Instruction MOVK not yet implemented."
	603 NotImplemented "Instruction CMP not yet implemented."
	604 Move W8, 0xDED0
	605 NotImplemented "Instruction MOVK not yet implemented."
	606 NotImplemented "Instruction CMP not yet implemented."
	607 Move W8, 0x17C3
	608 NotImplemented "Instruction MOVK not yet implemented."
	609 NotImplemented "Instruction CMP not yet implemented."
	610 Move X8, 0xDE0000
	611 Move X8, [X8+3872]
	612 Move X0, X20
	613 Move X2, X31
	614 Move X1, [X8]
	615 Call String.op_Equality, X0, X1
	616 Move TEMP, X0
	617 And TEMP, TEMP, 1
	618 Compare TEMP, 1
	619 JumpIfNotEqual {2541}
	620 Move W19, 1153
	621 Move W8, 0x8709
	622 NotImplemented "Instruction MOVK not yet implemented."
	623 NotImplemented "Instruction CMP not yet implemented."
	624 Move W8, 0x683D
	625 NotImplemented "Instruction MOVK not yet implemented."
	626 NotImplemented "Instruction CMP not yet implemented."
	627 Move W8, 0xFF7E
	628 NotImplemented "Instruction MOVK not yet implemented."
	629 NotImplemented "Instruction CMP not yet implemented."
	630 Move W8, 0x5C20
	631 NotImplemented "Instruction MOVK not yet implemented."
	632 NotImplemented "Instruction CMP not yet implemented."
	633 Move W8, 0xFF7E
	634 NotImplemented "Instruction MOVK not yet implemented."
	635 NotImplemented "Instruction CMP not yet implemented."
	636 Move X8, 0xDE0000
	637 Move X8, [X8+3784]
	638 Move X0, X20
	639 Move X2, X31
	640 Move X1, [X8]
	641 Call String.op_Equality, X0, X1
	642 Move TEMP, X0
	643 And TEMP, TEMP, 1
	644 Compare TEMP, 1
	645 JumpIfNotEqual {2541}
	646 Move W19, 1078
	647 Move W8, 0x4D71
	648 NotImplemented "Instruction MOVK not yet implemented."
	649 NotImplemented "Instruction CMP not yet implemented."
	650 Move W8, 0xA0A9
	651 NotImplemented "Instruction MOVK not yet implemented."
	652 NotImplemented "Instruction CMP not yet implemented."
	653 Move W8, 0x5742
	654 NotImplemented "Instruction MOVK not yet implemented."
	655 NotImplemented "Instruction CMP not yet implemented."
	656 Move W8, 0xCF27
	657 NotImplemented "Instruction MOVK not yet implemented."
	658 NotImplemented "Instruction CMP not yet implemented."
	659 Move W8, 0x5742
	660 NotImplemented "Instruction MOVK not yet implemented."
	661 NotImplemented "Instruction CMP not yet implemented."
	662 Move X8, 0xDE0000
	663 Move X8, [X8+3488]
	664 Move W8, 0x333A
	665 NotImplemented "Instruction MOVK not yet implemented."
	666 NotImplemented "Instruction CMP not yet implemented."
	667 Move W8, 0x3B8C
	668 NotImplemented "Instruction MOVK not yet implemented."
	669 NotImplemented "Instruction CMP not yet implemented."
	670 Move W8, 0x6F99
	671 NotImplemented "Instruction MOVK not yet implemented."
	672 NotImplemented "Instruction CMP not yet implemented."
	673 Move W8, 0x3B8C
	674 NotImplemented "Instruction MOVK not yet implemented."
	675 NotImplemented "Instruction CMP not yet implemented."
	676 Move X8, 0xDE0000
	677 Move X8, [X8+3496]
	678 Move W8, 0x603C
	679 NotImplemented "Instruction MOVK not yet implemented."
	680 NotImplemented "Instruction CMP not yet implemented."
	681 Move W8, 0xC856
	682 NotImplemented "Instruction MOVK not yet implemented."
	683 NotImplemented "Instruction CMP not yet implemented."
	684 Move W8, 0x5EA9
	685 NotImplemented "Instruction MOVK not yet implemented."
	686 NotImplemented "Instruction CMP not yet implemented."
	687 Move W8, 0xC856
	688 NotImplemented "Instruction MOVK not yet implemented."
	689 NotImplemented "Instruction CMP not yet implemented."
	690 Move X8, 0xDE0000
	691 Move X8, [X8+3408]
	692 Move X0, X20
	693 Move X2, X31
	694 Move X1, [X8]
	695 Call String.op_Equality, X0, X1
	696 Move TEMP, X0
	697 And TEMP, TEMP, 1
	698 Compare TEMP, 1
	699 JumpIfNotEqual {2541}
	700 Move W19, 1030
	701 Move W8, 0x5003
	702 NotImplemented "Instruction MOVK not yet implemented."
	703 NotImplemented "Instruction CMP not yet implemented."
	704 Move W8, 0xC84B
	705 NotImplemented "Instruction MOVK not yet implemented."
	706 NotImplemented "Instruction CMP not yet implemented."
	707 Move W8, 0x6EFC
	708 NotImplemented "Instruction MOVK not yet implemented."
	709 NotImplemented "Instruction CMP not yet implemented."
	710 Move W8, 0xC84B
	711 NotImplemented "Instruction MOVK not yet implemented."
	712 NotImplemented "Instruction CMP not yet implemented."
	713 Move X8, 0xDE0000
	714 Move X8, [X8+3008]
	715 Move X0, X20
	716 Move X2, X31
	717 Move X1, [X8]
	718 Call String.op_Equality, X0, X1
	719 Move TEMP, X0
	720 And TEMP, TEMP, 1
	721 Compare TEMP, 1
	722 JumpIfNotEqual {2541}
	723 Move W19, 1134
	724 Move W8, 0x4CDC
	725 NotImplemented "Instruction MOVK not yet implemented."
	726 NotImplemented "Instruction CMP not yet implemented."
	727 Move W8, 0x7A14
	728 NotImplemented "Instruction MOVK not yet implemented."
	729 NotImplemented "Instruction CMP not yet implemented."
	730 Move W8, 0x23E8
	731 NotImplemented "Instruction MOVK not yet implemented."
	732 NotImplemented "Instruction CMP not yet implemented."
	733 Move W8, 0x7A14
	734 NotImplemented "Instruction MOVK not yet implemented."
	735 NotImplemented "Instruction CMP not yet implemented."
	736 Move X8, 0xDD8000
	737 Move X8, [X8+2736]
	738 Move X0, X20
	739 Move X2, X31
	740 Move X1, [X8]
	741 Call String.op_Equality, X0, X1
	742 Move TEMP, X0
	743 And TEMP, TEMP, 1
	744 Compare TEMP, 1
	745 JumpIfNotEqual {2541}
	746 Move W19, 1041
	747 Move W8, 0xC06C
	748 NotImplemented "Instruction MOVK not yet implemented."
	749 NotImplemented "Instruction CMP not yet implemented."
	750 Move W8, 0x4691
	751 NotImplemented "Instruction MOVK not yet implemented."
	752 NotImplemented "Instruction CMP not yet implemented."
	753 Move W8, 0xF7CC
	754 NotImplemented "Instruction MOVK not yet implemented."
	755 NotImplemented "Instruction CMP not yet implemented."
	756 Move W8, 0x4691
	757 NotImplemented "Instruction MOVK not yet implemented."
	758 NotImplemented "Instruction CMP not yet implemented."
	759 Move X8, 0xDE0000
	760 Move X8, [X8+3104]
	761 Move X0, X20
	762 Move X2, X31
	763 Move X1, [X8]
	764 Call String.op_Equality, X0, X1
	765 Move TEMP, X0
	766 And TEMP, TEMP, 1
	767 Compare TEMP, 1
	768 JumpIfNotEqual {2541}
	769 Move W19, 1054
	770 Move W8, 0x1C7C
	771 NotImplemented "Instruction MOVK not yet implemented."
	772 NotImplemented "Instruction CMP not yet implemented."
	773 Move W8, 0x35A1
	774 NotImplemented "Instruction MOVK not yet implemented."
	775 NotImplemented "Instruction CMP not yet implemented."
	776 Move W8, 0x1AE9
	777 NotImplemented "Instruction MOVK not yet implemented."
	778 NotImplemented "Instruction CMP not yet implemented."
	779 Move W8, 0x35A1
	780 NotImplemented "Instruction MOVK not yet implemented."
	781 NotImplemented "Instruction CMP not yet implemented."
	782 Move X8, 0xDE0000
	783 Move X8, [X8+3560]
	784 Move X0, X20
	785 Move X2, X31
	786 Move X1, [X8]
	787 Call String.op_Equality, X0, X1
	788 Move TEMP, X0
	789 And TEMP, TEMP, 1
	790 Compare TEMP, 1
	791 JumpIfNotEqual {2541}
	792 Move W19, 1058
	793 Move W8, 0x5975
	794 NotImplemented "Instruction MOVK not yet implemented."
	795 NotImplemented "Instruction CMP not yet implemented."
	796 Move W8, 0xCA86
	797 NotImplemented "Instruction MOVK not yet implemented."
	798 NotImplemented "Instruction CMP not yet implemented."
	799 Move W8, 0xC5A0
	800 NotImplemented "Instruction MOVK not yet implemented."
	801 NotImplemented "Instruction CMP not yet implemented."
	802 Move W8, 0xCA86
	803 NotImplemented "Instruction MOVK not yet implemented."
	804 NotImplemented "Instruction CMP not yet implemented."
	805 Move X8, 0xDE0000
	806 Move X8, [X8+3072]
	807 Move X0, X20
	808 Move X2, X31
	809 Move X1, [X8]
	810 Call String.op_Equality, X0, X1
	811 Move TEMP, X0
	812 And TEMP, TEMP, 1
	813 Compare TEMP, 1
	814 JumpIfNotEqual {2541}
	815 Move W19, 1038
	816 Move W8, 0x8567
	817 NotImplemented "Instruction MOVK not yet implemented."
	818 NotImplemented "Instruction CMP not yet implemented."
	819 Move W8, 0xC5D4
	820 NotImplemented "Instruction MOVK not yet implemented."
	821 NotImplemented "Instruction CMP not yet implemented."
	822 Move W8, 0xBDF5
	823 NotImplemented "Instruction MOVK not yet implemented."
	824 NotImplemented "Instruction CMP not yet implemented."
	825 Move W8, 0xC5D4
	826 NotImplemented "Instruction MOVK not yet implemented."
	827 NotImplemented "Instruction CMP not yet implemented."
	828 Move X8, 0xDE0000
	829 Move X8, [X8+3384]
	830 Move X0, X20
	831 Move X2, X31
	832 Move X1, [X8]
	833 Call String.op_Equality, X0, X1
	834 Move TEMP, X0
	835 And TEMP, TEMP, 1
	836 Compare TEMP, 1
	837 JumpIfNotEqual {2541}
	838 Move W19, 0x1C3B
	839 Move W8, 0x3866
	840 NotImplemented "Instruction MOVK not yet implemented."
	841 NotImplemented "Instruction CMP not yet implemented."
	842 Move W8, 0xA080
	843 NotImplemented "Instruction MOVK not yet implemented."
	844 NotImplemented "Instruction CMP not yet implemented."
	845 Move W8, 0x3866
	846 NotImplemented "Instruction MOVK not yet implemented."
	847 NotImplemented "Instruction CMP not yet implemented."
	848 Move X8, 0xDE0000
	849 Move X8, [X8+3536]
	850 Move X0, X20
	851 Move X2, X31
	852 Move X1, [X8]
	853 Call String.op_Equality, X0, X1
	854 Move TEMP, X0
	855 And TEMP, TEMP, 1
	856 Compare TEMP, 1
	857 JumpIfNotEqual {2541}
	858 Move W19, 1097
	859 Move W8, 0xC888
	860 NotImplemented "Instruction MOVK not yet implemented."
	861 NotImplemented "Instruction CMP not yet implemented."
	862 Move W8, 3262
	863 NotImplemented "Instruction MOVK not yet implemented."
	864 NotImplemented "Instruction CMP not yet implemented."
	865 Move W8, 0xC888
	866 NotImplemented "Instruction MOVK not yet implemented."
	867 NotImplemented "Instruction CMP not yet implemented."
	868 Move X8, 0xDDF000
	869 Move X8, [X8+3120]
	870 Move X0, X20
	871 Move X2, X31
	872 Move X1, [X8]
	873 Call String.op_Equality, X0, X1
	874 Move TEMP, X0
	875 And TEMP, TEMP, 1
	876 Compare TEMP, 1
	877 JumpIfNotEqual {2541}
	878 Move W19, 1156
	879 Move W8, 0x18D0
	880 NotImplemented "Instruction MOVK not yet implemented."
	881 NotImplemented "Instruction CMP not yet implemented."
	882 Move W8, 0x4739
	883 NotImplemented "Instruction MOVK not yet implemented."
	884 NotImplemented "Instruction CMP not yet implemented."
	885 Move W8, 0x18D0
	886 NotImplemented "Instruction MOVK not yet implemented."
	887 NotImplemented "Instruction CMP not yet implemented."
	888 Move X8, 0xDDF000
	889 Move X8, [X8+3416]
	890 Move W8, 0x718D
	891 NotImplemented "Instruction MOVK not yet implemented."
	892 NotImplemented "Instruction CMP not yet implemented."
	893 Move W8, 0xBE01
	894 NotImplemented "Instruction MOVK not yet implemented."
	895 NotImplemented "Instruction CMP not yet implemented."
	896 Move W8, 0x718D
	897 NotImplemented "Instruction MOVK not yet implemented."
	898 NotImplemented "Instruction CMP not yet implemented."
	899 Move X8, 0xDDF000
	900 Move X8, [X8+3840]
	901 Move X0, X20
	902 Move X2, X31
	903 Move X1, [X8]
	904 Call String.op_Equality, X0, X1
	905 Move TEMP, X0
	906 And TEMP, TEMP, 1
	907 Compare TEMP, 1
	908 JumpIfNotEqual {2541}
	909 Move W19, 2068
	910 Move W8, 0xF153
	911 NotImplemented "Instruction MOVK not yet implemented."
	912 NotImplemented "Instruction CMP not yet implemented."
	913 Move W8, 0x7425
	914 NotImplemented "Instruction MOVK not yet implemented."
	915 NotImplemented "Instruction CMP not yet implemented."
	916 Move W8, 0xF153
	917 NotImplemented "Instruction MOVK not yet implemented."
	918 NotImplemented "Instruction CMP not yet implemented."
	919 Move X8, 0xDDF000
	920 Move X8, [X8+3568]
	921 Move X0, X20
	922 Move X2, X31
	923 Move X1, [X8]
	924 Call String.op_Equality, X0, X1
	925 Move TEMP, X0
	926 And TEMP, TEMP, 1
	927 Compare TEMP, 1
	928 JumpIfNotEqual {2541}
	929 Move W19, 1118
	930 Move W8, 0xEAED
	931 NotImplemented "Instruction MOVK not yet implemented."
	932 NotImplemented "Instruction CMP not yet implemented."
	933 Move W8, 0x1EFA
	934 NotImplemented "Instruction MOVK not yet implemented."
	935 NotImplemented "Instruction CMP not yet implemented."
	936 Move W8, 0xEAED
	937 NotImplemented "Instruction MOVK not yet implemented."
	938 NotImplemented "Instruction CMP not yet implemented."
	939 Move X8, 0xDD7000
	940 Move X8, [X8+2376]
	941 Move X0, X20
	942 Move X2, X31
	943 Move X1, [X8]
	944 Call String.op_Equality, X0, X1
	945 Move TEMP, X0
	946 And TEMP, TEMP, 1
	947 Compare TEMP, 1
	948 JumpIfNotEqual {2541}
	949 Move W19, 1063
	950 Move W8, 0x20AF
	951 NotImplemented "Instruction MOVK not yet implemented."
	952 NotImplemented "Instruction CMP not yet implemented."
	953 Move W8, 0xFB2C
	954 NotImplemented "Instruction MOVK not yet implemented."
	955 NotImplemented "Instruction CMP not yet implemented."
	956 Move W8, 0x20AF
	957 NotImplemented "Instruction MOVK not yet implemented."
	958 NotImplemented "Instruction CMP not yet implemented."
	959 Move X8, 0xDDF000
	960 Move X8, [X8+3448]
	961 Move X0, X20
	962 Move X2, X31
	963 Move X1, [X8]
	964 Call String.op_Equality, X0, X1
	965 Move TEMP, X0
	966 And TEMP, TEMP, 1
	967 Compare TEMP, 1
	968 JumpIfNotEqual {2541}
	969 Move W19, 1089
	970 Move W8, 0x9923
	971 NotImplemented "Instruction MOVK not yet implemented."
	972 NotImplemented "Instruction CMP not yet implemented."
	973 Move W8, 0xA1F4
	974 NotImplemented "Instruction MOVK not yet implemented."
	975 NotImplemented "Instruction CMP not yet implemented."
	976 Move W8, 0x9923
	977 NotImplemented "Instruction MOVK not yet implemented."
	978 NotImplemented "Instruction CMP not yet implemented."
	979 Move X8, 0xDDF000
	980 Move X8, [X8+3320]
	981 Move X0, X20
	982 Move X2, X31
	983 Move X1, [X8]
	984 Call String.op_Equality, X0, X1
	985 Move TEMP, X0
	986 And TEMP, TEMP, 1
	987 Compare TEMP, 1
	988 JumpIfNotEqual {2541}
	989 Move W19, 1157
	990 Move W8, 0x3EB2
	991 NotImplemented "Instruction MOVK not yet implemented."
	992 NotImplemented "Instruction CMP not yet implemented."
	993 Move W8, 0xA6CC
	994 NotImplemented "Instruction MOVK not yet implemented."
	995 NotImplemented "Instruction CMP not yet implemented."
	996 Move W8, 0x3EB2
	997 NotImplemented "Instruction MOVK not yet implemented."
	998 NotImplemented "Instruction CMP not yet implemented."
	999 Move X8, 0xDDF000
	1000 Move X8, [X8+3352]
	1001 Move X0, X20
	1002 Move X2, X31
	1003 Move X1, [X8]
	1004 Call String.op_Equality, X0, X1
	1005 Move TEMP, X0
	1006 And TEMP, TEMP, 1
	1007 Compare TEMP, 1
	1008 JumpIfNotEqual {2541}
	1009 Move W19, 1098
	1010 Move W8, 0xFD08
	1011 NotImplemented "Instruction MOVK not yet implemented."
	1012 NotImplemented "Instruction CMP not yet implemented."
	1013 Move W8, 0xDD6A
	1014 NotImplemented "Instruction MOVK not yet implemented."
	1015 NotImplemented "Instruction CMP not yet implemented."
	1016 Move W8, 0xFD08
	1017 NotImplemented "Instruction MOVK not yet implemented."
	1018 NotImplemented "Instruction CMP not yet implemented."
	1019 Move X8, 0xDDF000
	1020 Move X8, [X8+3088]
	1021 Move X0, X20
	1022 Move X2, X31
	1023 Move X1, [X8]
	1024 Call String.op_Equality, X0, X1
	1025 Move TEMP, X0
	1026 And TEMP, TEMP, 1
	1027 Compare TEMP, 1
	1028 JumpIfNotEqual {2541}
	1029 Move W19, 1077
	1030 Move W8, 0x5699
	1031 NotImplemented "Instruction MOVK not yet implemented."
	1032 NotImplemented "Instruction CMP not yet implemented."
	1033 Move W8, 0x708F
	1034 NotImplemented "Instruction MOVK not yet implemented."
	1035 NotImplemented "Instruction CMP not yet implemented."
	1036 Move W8, 0x5699
	1037 NotImplemented "Instruction MOVK not yet implemented."
	1038 NotImplemented "Instruction CMP not yet implemented."
	1039 Move X8, 0xDDF000
	1040 Move X8, [X8+3280]
	1041 Move X0, X20
	1042 Move X2, X31
	1043 Move X1, [X8]
	1044 Call String.op_Equality, X0, X1
	1045 Move TEMP, X0
	1046 And TEMP, TEMP, 1
	1047 Compare TEMP, 1
	1048 JumpIfNotEqual {2541}
	1049 Move W19, 1117
	1050 Move W8, 0xDEEB
	1051 NotImplemented "Instruction MOVK not yet implemented."
	1052 NotImplemented "Instruction CMP not yet implemented."
	1053 Move W8, 0x31C3
	1054 NotImplemented "Instruction MOVK not yet implemented."
	1055 NotImplemented "Instruction CMP not yet implemented."
	1056 Move W8, 0xDEEB
	1057 NotImplemented "Instruction MOVK not yet implemented."
	1058 NotImplemented "Instruction CMP not yet implemented."
	1059 Move X8, 0xDDF000
	1060 Move X8, [X8+3824]
	1061 Move W8, 0x78DE
	1062 NotImplemented "Instruction MOVK not yet implemented."
	1063 NotImplemented "Instruction CMP not yet implemented."
	1064 Move W8, 0xF95F
	1065 NotImplemented "Instruction MOVK not yet implemented."
	1066 NotImplemented "Instruction CMP not yet implemented."
	1067 Move W8, 0x78DE
	1068 NotImplemented "Instruction MOVK not yet implemented."
	1069 NotImplemented "Instruction CMP not yet implemented."
	1070 Move X8, 0xDDF000
	1071 Move X8, [X8+3112]
	1072 Move X0, X20
	1073 Move X2, X31
	1074 Move X1, [X8]
	1075 Call String.op_Equality, X0, X1
	1076 Move TEMP, X0
	1077 And TEMP, TEMP, 1
	1078 Compare TEMP, 1
	1079 JumpIfNotEqual {2541}
	1080 Move W19, 1110
	1081 Move W8, 0x81E8
	1082 NotImplemented "Instruction MOVK not yet implemented."
	1083 NotImplemented "Instruction CMP not yet implemented."
	1084 Move W8, 0xEA02
	1085 NotImplemented "Instruction MOVK not yet implemented."
	1086 NotImplemented "Instruction CMP not yet implemented."
	1087 Move W8, 0x81E8
	1088 NotImplemented "Instruction MOVK not yet implemented."
	1089 NotImplemented "Instruction CMP not yet implemented."
	1090 Move X8, 0xDAB000
	1091 Move X8, [X8+96]
	1092 Move X0, X20
	1093 Move X2, X31
	1094 Move X1, [X8]
	1095 Call String.op_Equality, X0, X1
	1096 Move TEMP, X0
	1097 And TEMP, TEMP, 1
	1098 Compare TEMP, 1
	1099 JumpIfNotEqual {2541}
	1100 Move W19, 1047
	1101 Move W8, 0x8F15
	1102 NotImplemented "Instruction MOVK not yet implemented."
	1103 NotImplemented "Instruction CMP not yet implemented."
	1104 Move W8, 0xC322
	1105 NotImplemented "Instruction MOVK not yet implemented."
	1106 NotImplemented "Instruction CMP not yet implemented."
	1107 Move W8, 0x8F15
	1108 NotImplemented "Instruction MOVK not yet implemented."
	1109 NotImplemented "Instruction CMP not yet implemented."
	1110 Move X8, 0xDDF000
	1111 Move X8, [X8+3704]
	1112 Move X0, X20
	1113 Move X2, X31
	1114 Move X1, [X8]
	1115 Call String.op_Equality, X0, X1
	1116 Move TEMP, X0
	1117 And TEMP, TEMP, 1
	1118 Compare TEMP, 1
	1119 JumpIfNotEqual {2541}
	1120 Move W19, 1039
	1121 Move W8, 0x4D63
	1122 NotImplemented "Instruction MOVK not yet implemented."
	1123 NotImplemented "Instruction CMP not yet implemented."
	1124 Move W8, 0x60A8
	1125 NotImplemented "Instruction MOVK not yet implemented."
	1126 NotImplemented "Instruction CMP not yet implemented."
	1127 Move W8, 0x4D63
	1128 NotImplemented "Instruction MOVK not yet implemented."
	1129 NotImplemented "Instruction CMP not yet implemented."
	1130 Move X8, 0xDDF000
	1131 Move X8, [X8+3968]
	1132 Move X0, X20
	1133 Move X2, X31
	1134 Move X1, [X8]
	1135 Call String.op_Equality, X0, X1
	1136 Move TEMP, X0
	1137 And TEMP, TEMP, 1
	1138 Compare TEMP, 1
	1139 JumpIfNotEqual {2541}
	1140 Move W19, 1131
	1141 Move W8, 0xC4A7
	1142 NotImplemented "Instruction MOVK not yet implemented."
	1143 NotImplemented "Instruction CMP not yet implemented."
	1144 Move W8, 0x6AE0
	1145 NotImplemented "Instruction MOVK not yet implemented."
	1146 NotImplemented "Instruction CMP not yet implemented."
	1147 Move X8, 0xDAB000
	1148 Move X8, [X8+3088]
	1149 Move X0, X20
	1150 Move X2, X31
	1151 Move X1, [X8]
	1152 Call String.op_Equality, X0, X1
	1153 Move TEMP, X0
	1154 And TEMP, TEMP, 1
	1155 Compare TEMP, 1
	1156 JumpIfNotEqual {2541}
	1157 Move W19, 1057
	1158 Move W8, 0xC315
	1159 NotImplemented "Instruction MOVK not yet implemented."
	1160 NotImplemented "Instruction CMP not yet implemented."
	1161 Move W8, 0x1262
	1162 NotImplemented "Instruction MOVK not yet implemented."
	1163 NotImplemented "Instruction CMP not yet implemented."
	1164 Move X8, 0xDDE000
	1165 Move X8, [X8+2936]
	1166 Move W8, 0xFC85
	1167 NotImplemented "Instruction MOVK not yet implemented."
	1168 NotImplemented "Instruction CMP not yet implemented."
	1169 Move W8, 3654
	1170 NotImplemented "Instruction MOVK not yet implemented."
	1171 NotImplemented "Instruction CMP not yet implemented."
	1172 Move X8, 0xDDF000
	1173 Move X8, [X8+3768]
	1174 Move X0, X20
	1175 Move X2, X31
	1176 Move X1, [X8]
	1177 Call String.op_Equality, X0, X1
	1178 Move TEMP, X0
	1179 And TEMP, TEMP, 1
	1180 Compare TEMP, 1
	1181 JumpIfNotEqual {2541}
	1182 Move W19, 1056
	1183 Move W8, 0xB91B
	1184 NotImplemented "Instruction MOVK not yet implemented."
	1185 NotImplemented "Instruction CMP not yet implemented."
	1186 Move W8, 0x850E
	1187 NotImplemented "Instruction MOVK not yet implemented."
	1188 NotImplemented "Instruction CMP not yet implemented."
	1189 Move X8, 0xDDF000
	1190 Move X8, [X8+2976]
	1191 Move X0, X20
	1192 Move X2, X31
	1193 Move X1, [X8]
	1194 Call String.op_Equality, X0, X1
	1195 Move TEMP, X0
	1196 And TEMP, TEMP, 1
	1197 Compare TEMP, 1
	1198 JumpIfNotEqual {2541}
	1199 Move W19, 1048
	1200 Move W8, 3531
	1201 NotImplemented "Instruction MOVK not yet implemented."
	1202 NotImplemented "Instruction CMP not yet implemented."
	1203 Move W8, 0x6264
	1204 NotImplemented "Instruction MOVK not yet implemented."
	1205 NotImplemented "Instruction CMP not yet implemented."
	1206 Move X8, 0xDDF000
	1207 Move X8, [X8+3184]
	1208 Move X0, X20
	1209 Move X2, X31
	1210 Move X1, [X8]
	1211 Call String.op_Equality, X0, X1
	1212 Move TEMP, X0
	1213 And TEMP, TEMP, 1
	1214 Compare TEMP, 1
	1215 JumpIfNotEqual {2541}
	1216 Move W19, 1032
	1217 Move W8, 0xE3B6
	1218 NotImplemented "Instruction MOVK not yet implemented."
	1219 NotImplemented "Instruction CMP not yet implemented."
	1220 Move W8, 0xD43C
	1221 NotImplemented "Instruction MOVK not yet implemented."
	1222 NotImplemented "Instruction CMP not yet implemented."
	1223 Move X8, 0xDDF000
	1224 Move X8, [X8+3160]
	1225 Move X0, X20
	1226 Move X2, X31
	1227 Move X1, [X8]
	1228 Call String.op_Equality, X0, X1
	1229 Move TEMP, X0
	1230 And TEMP, TEMP, 1
	1231 Compare TEMP, 1
	1232 JumpIfNotEqual {2541}
	1233 Move W19, 1164
	1234 Move W8, 0x1F1C
	1235 NotImplemented "Instruction MOVK not yet implemented."
	1236 NotImplemented "Instruction CMP not yet implemented."
	1237 Move W8, 0x683D
	1238 NotImplemented "Instruction MOVK not yet implemented."
	1239 NotImplemented "Instruction CMP not yet implemented."
	1240 Move X8, 0xDDF000
	1241 Move X8, [X8+3128]
	1242 Move X0, X20
	1243 Move X2, X31
	1244 Move X1, [X8]
	1245 Call String.op_Equality, X0, X1
	1246 Move TEMP, X0
	1247 And TEMP, TEMP, 1
	1248 Compare TEMP, 1
	1249 JumpIfNotEqual {2541}
	1250 Move W19, 1076
	1251 Move W8, 0x5E46
	1252 NotImplemented "Instruction MOVK not yet implemented."
	1253 NotImplemented "Instruction CMP not yet implemented."
	1254 Move W8, 0xA0A9
	1255 NotImplemented "Instruction MOVK not yet implemented."
	1256 NotImplemented "Instruction CMP not yet implemented."
	1257 Move X8, 0xDDF000
	1258 Move X8, [X8+3064]
	1259 Move X0, X20
	1260 Move X2, X31
	1261 Move X1, [X8]
	1262 Call String.op_Equality, X0, X1
	1263 Move TEMP, X0
	1264 And TEMP, TEMP, 1
	1265 Compare TEMP, 1
	1266 JumpIfNotEqual {2541}
	1267 Move W19, 1114
	1268 Move W8, 0x6C46
	1269 NotImplemented "Instruction MOVK not yet implemented."
	1270 NotImplemented "Instruction CMP not yet implemented."
	1271 Move W8, 0x333A
	1272 NotImplemented "Instruction MOVK not yet implemented."
	1273 NotImplemented "Instruction CMP not yet implemented."
	1274 Move X8, 0xDDF000
	1275 Move X8, [X8+3440]
	1276 Move X0, X20
	1277 Move X2, X31
	1278 Move X1, [X8]
	1279 Call String.op_Equality, X0, X1
	1280 Move TEMP, X0
	1281 And TEMP, TEMP, 1
	1282 Compare TEMP, 1
	1283 JumpIfNotEqual {2541}
	1284 Move W19, 2128
	1285 Move W8, 0x9449
	1286 NotImplemented "Instruction MOVK not yet implemented."
	1287 NotImplemented "Instruction CMP not yet implemented."
	1288 Move W8, 0x603C
	1289 NotImplemented "Instruction MOVK not yet implemented."
	1290 NotImplemented "Instruction CMP not yet implemented."
	1291 Move X8, 0xDDF000
	1292 Move X8, [X8+3720]
	1293 Move X0, X20
	1294 Move X2, X31
	1295 Move X1, [X8]
	1296 Call String.op_Equality, X0, X1
	1297 Move TEMP, X0
	1298 And TEMP, TEMP, 1
	1299 Compare TEMP, 1
	1300 JumpIfNotEqual {2541}
	1301 Move W19, 1121
	1302 Move W8, 0x8410
	1303 NotImplemented "Instruction MOVK not yet implemented."
	1304 NotImplemented "Instruction CMP not yet implemented."
	1305 Move W8, 0x5003
	1306 NotImplemented "Instruction MOVK not yet implemented."
	1307 NotImplemented "Instruction CMP not yet implemented."
	1308 Move X8, 0xDDE000
	1309 Move X8, [X8+2928]
	1310 Move X0, X20
	1311 Move X2, X31
	1312 Move X1, [X8]
	1313 Call String.op_Equality, X0, X1
	1314 Move TEMP, X0
	1315 And TEMP, TEMP, 1
	1316 Compare TEMP, 1
	1317 JumpIfNotEqual {2541}
	1318 Move W19, 1055
	1319 Move W8, 0x4447
	1320 NotImplemented "Instruction MOVK not yet implemented."
	1321 NotImplemented "Instruction CMP not yet implemented."
	1322 Move W8, 0x4CDC
	1323 NotImplemented "Instruction MOVK not yet implemented."
	1324 NotImplemented "Instruction CMP not yet implemented."
	1325 Move X8, 0xDDF000
	1326 Move X8, [X8+3616]
	1327 Move X0, X20
	1328 Move X2, X31
	1329 Move X1, [X8]
	1330 Call String.op_Equality, X0, X1
	1331 Move TEMP, X0
	1332 And TEMP, TEMP, 1
	1333 Compare TEMP, 1
	1334 JumpIfNotEqual {2541}
	1335 Move W19, 1111
	1336 Move W8, 0xB03E
	1337 NotImplemented "Instruction MOVK not yet implemented."
	1338 NotImplemented "Instruction CMP not yet implemented."
	1339 Move W8, 0xC06C
	1340 NotImplemented "Instruction MOVK not yet implemented."
	1341 NotImplemented "Instruction CMP not yet implemented."
	1342 Move X8, 0xDDF000
	1343 Move X8, [X8+2936]
	1344 Move X0, X20
	1345 Move X2, X31
	1346 Move X1, [X8]
	1347 Call String.op_Equality, X0, X1
	1348 Move TEMP, X0
	1349 And TEMP, TEMP, 1
	1350 Compare TEMP, 1
	1351 JumpIfNotEqual {2541}
	1352 Move W19, 1108
	1353 Move W8, 0x6E94
	1354 NotImplemented "Instruction MOVK not yet implemented."
	1355 NotImplemented "Instruction CMP not yet implemented."
	1356 Move W8, 0x1C7C
	1357 NotImplemented "Instruction MOVK not yet implemented."
	1358 NotImplemented "Instruction CMP not yet implemented."
	1359 Move X8, 0xDDF000
	1360 Move X8, [X8+3816]
	1361 Move X0, X20
	1362 Move X2, X31
	1363 Move X1, [X8]
	1364 Call String.op_Equality, X0, X1
	1365 Move TEMP, X0
	1366 And TEMP, TEMP, 1
	1367 Compare TEMP, 1
	1368 JumpIfNotEqual {2541}
	1369 Move W19, 1100
	1370 Move W8, 0x1ADE
	1371 NotImplemented "Instruction MOVK not yet implemented."
	1372 NotImplemented "Instruction CMP not yet implemented."
	1373 Move W8, 0x5975
	1374 NotImplemented "Instruction MOVK not yet implemented."
	1375 NotImplemented "Instruction CMP not yet implemented."
	1376 Move X8, 0xDDF000
	1377 Move X8, [X8+3640]
	1378 Move X0, X20
	1379 Move X2, X31
	1380 Move X1, [X8]
	1381 Call String.op_Equality, X0, X1
	1382 Move TEMP, X0
	1383 And TEMP, TEMP, 1
	1384 Compare TEMP, 1
	1385 JumpIfNotEqual {2541}
	1386 Move W19, 1092
	1387 Move W8, 0x391B
	1388 NotImplemented "Instruction MOVK not yet implemented."
	1389 NotImplemented "Instruction CMP not yet implemented."
	1390 Move W8, 0x8567
	1391 NotImplemented "Instruction MOVK not yet implemented."
	1392 NotImplemented "Instruction CMP not yet implemented."
	1393 Move X8, 0xDDF000
	1394 Move X8, [X8+3256]
	1395 Move X0, X20
	1396 Move X2, X31
	1397 Move X1, [X8]
	1398 Call String.op_Equality, X0, X1
	1399 Move TEMP, X0
	1400 And TEMP, TEMP, 1
	1401 Compare TEMP, 1
	1402 JumpIfNotEqual {2541}
	1403 Move W19, 1148
	1404 Move W8, 1113
	1405 NotImplemented "Instruction MOVK not yet implemented."
	1406 NotImplemented "Instruction CMP not yet implemented."
	1407 Move W8, 0xA3A6
	1408 NotImplemented "Instruction MOVK not yet implemented."
	1409 NotImplemented "Instruction CMP not yet implemented."
	1410 Move X8, 0xDDF000
	1411 Move X8, [X8+3512]
	1412 Move X0, X20
	1413 Move X2, X31
	1414 Move X1, [X8]
	1415 Call String.op_Equality, X0, X1
	1416 Move TEMP, X0
	1417 And TEMP, TEMP, 1
	1418 Compare TEMP, 1
	1419 JumpIfNotEqual {2541}
	1420 Move W19, 1026
	1421 Move W8, 3665
	1422 NotImplemented "Instruction MOVK not yet implemented."
	1423 NotImplemented "Instruction CMP not yet implemented."
	1424 Move W8, 0xD6F1
	1425 NotImplemented "Instruction MOVK not yet implemented."
	1426 NotImplemented "Instruction CMP not yet implemented."
	1427 Move W8, 4068
	1428 NotImplemented "Instruction MOVK not yet implemented."
	1429 NotImplemented "Instruction CMP not yet implemented."
	1430 Move X8, 0xDDF000
	1431 Move X8, [X8+3264]
	1432 Move X0, X20
	1433 Move X2, X31
	1434 Move X1, [X8]
	1435 Call String.op_Equality, X0, X1
	1436 Move TEMP, X0
	1437 And TEMP, TEMP, 1
	1438 Compare TEMP, 1
	1439 JumpIfNotEqual {2541}
	1440 Move W19, 1082
	1441 Move W8, 0xDF1F
	1442 NotImplemented "Instruction MOVK not yet implemented."
	1443 NotImplemented "Instruction CMP not yet implemented."
	1444 Move W8, 0x6D69
	1445 NotImplemented "Instruction MOVK not yet implemented."
	1446 NotImplemented "Instruction CMP not yet implemented."
	1447 Move W8, 0x77F3
	1448 NotImplemented "Instruction MOVK not yet implemented."
	1449 NotImplemented "Instruction CMP not yet implemented."
	1450 Move X8, 0xDDF000
	1451 Move X8, [X8+3552]
	1452 Move X0, X20
	1453 Move X2, X31
	1454 Move X1, [X8]
	1455 Call String.op_Equality, X0, X1
	1456 Move TEMP, X0
	1457 And TEMP, TEMP, 1
	1458 Compare TEMP, 1
	1459 JumpIfNotEqual {2541}
	1460 Move W19, 1029
	1461 Move W8, 0xEB68
	1462 NotImplemented "Instruction MOVK not yet implemented."
	1463 NotImplemented "Instruction CMP not yet implemented."
	1464 Move W8, 0xFF0B
	1465 NotImplemented "Instruction MOVK not yet implemented."
	1466 NotImplemented "Instruction CMP not yet implemented."
	1467 Move W8, 0xF69A
	1468 NotImplemented "Instruction MOVK not yet implemented."
	1469 NotImplemented "Instruction CMP not yet implemented."
	1470 Move X8, 0xDDF000
	1471 Move X8, [X8+3928]
	1472 Move X0, X20
	1473 Move X2, X31
	1474 Move X1, [X8]
	1475 Call String.op_Equality, X0, X1
	1476 Move TEMP, X0
	1477 And TEMP, TEMP, 1
	1478 Compare TEMP, 1
	1479 JumpIfNotEqual {2541}
	1480 Move W19, 1081
	1481 Move W8, 0x10F1
	1482 NotImplemented "Instruction MOVK not yet implemented."
	1483 NotImplemented "Instruction CMP not yet implemented."
	1484 Move W8, 0x9EE7
	1485 NotImplemented "Instruction MOVK not yet implemented."
	1486 NotImplemented "Instruction CMP not yet implemented."
	1487 Move W8, 0x658A
	1488 NotImplemented "Instruction MOVK not yet implemented."
	1489 NotImplemented "Instruction CMP not yet implemented."
	1490 Move X8, 0xDAC000
	1491 Move X8, [X8+792]
	1492 Move X0, X20
	1493 Move X2, X31
	1494 Move X1, [X8]
	1495 Call String.op_Equality, X0, X1
	1496 Move TEMP, X0
	1497 And TEMP, TEMP, 1
	1498 Compare TEMP, 1
	1499 JumpIfNotEqual {2541}
	1500 Move W19, 1033
	1501 Move W8, 0x2984
	1502 NotImplemented "Instruction MOVK not yet implemented."
	1503 NotImplemented "Instruction CMP not yet implemented."
	1504 Move W8, 0x6D01
	1505 NotImplemented "Instruction MOVK not yet implemented."
	1506 NotImplemented "Instruction CMP not yet implemented."
	1507 Move W8, 0x208D
	1508 NotImplemented "Instruction MOVK not yet implemented."
	1509 NotImplemented "Instruction CMP not yet implemented."
	1510 Move X8, 0xDDF000
	1511 Move X8, [X8+2984]
	1512 Move X0, X20
	1513 Move X2, X31
	1514 Move X1, [X8]
	1515 Call String.op_Equality, X0, X1
	1516 Move TEMP, X0
	1517 And TEMP, TEMP, 1
	1518 Compare TEMP, 1
	1519 JumpIfNotEqual {2541}
	1520 Move W19, 1101
	1521 Move W8, 0x5F46
	1522 NotImplemented "Instruction MOVK not yet implemented."
	1523 NotImplemented "Instruction CMP not yet implemented."
	1524 Move W8, 0xB3DF
	1525 NotImplemented "Instruction MOVK not yet implemented."
	1526 NotImplemented "Instruction CMP not yet implemented."
	1527 Move W8, 0x8709
	1528 NotImplemented "Instruction MOVK not yet implemented."
	1529 NotImplemented "Instruction CMP not yet implemented."
	1530 Move X8, 0xDDF000
	1531 Move X8, [X8+3472]
	1532 Move X0, X20
	1533 Move X2, X31
	1534 Move X1, [X8]
	1535 Call String.op_Equality, X0, X1
	1536 Move TEMP, X0
	1537 And TEMP, TEMP, 1
	1538 Compare TEMP, 1
	1539 JumpIfNotEqual {2541}
	1540 Move W19, 1095
	1541 Move W8, 0xAFCA
	1542 NotImplemented "Instruction MOVK not yet implemented."
	1543 NotImplemented "Instruction CMP not yet implemented."
	1544 Move W8, 0xB7A9
	1545 NotImplemented "Instruction MOVK not yet implemented."
	1546 NotImplemented "Instruction CMP not yet implemented."
	1547 Move W8, 0x4D71
	1548 NotImplemented "Instruction MOVK not yet implemented."
	1549 NotImplemented "Instruction CMP not yet implemented."
	1550 Move X8, 0xDDF000
	1551 Move X8, [X8+3656]
	1552 Move X0, X20
	1553 Move X2, X31
	1554 Move X1, [X8]
	1555 Call String.op_Equality, X0, X1
	1556 Move TEMP, X0
	1557 And TEMP, TEMP, 1
	1558 Compare TEMP, 1
	1559 JumpIfNotEqual {2541}
	1560 Move W19, 0x281A
	1561 Move W8, 0xBBE0
	1562 NotImplemented "Instruction MOVK not yet implemented."
	1563 NotImplemented "Instruction CMP not yet implemented."
	1564 Move W8, 2725
	1565 NotImplemented "Instruction MOVK not yet implemented."
	1566 NotImplemented "Instruction CMP not yet implemented."
	1567 Move W8, 0x7E08
	1568 NotImplemented "Instruction MOVK not yet implemented."
	1569 NotImplemented "Instruction CMP not yet implemented."
	1570 Move X8, 0xDDF000
	1571 Move X8, [X8+2968]
	1572 Move X0, X20
	1573 Move X2, X31
	1574 Move X1, [X8]
	1575 Call String.op_Equality, X0, X1
	1576 Move TEMP, X0
	1577 And TEMP, TEMP, 1
	1578 Compare TEMP, 1
	1579 JumpIfNotEqual {2541}
	1580 Move W19, 2143
	1581 Move W8, 0x2F55
	1582 NotImplemented "Instruction MOVK not yet implemented."
	1583 NotImplemented "Instruction CMP not yet implemented."
	1584 Move W8, 0xE7C7
	1585 NotImplemented "Instruction MOVK not yet implemented."
	1586 NotImplemented "Instruction CMP not yet implemented."
	1587 Move W8, 0xCEA2
	1588 NotImplemented "Instruction MOVK not yet implemented."
	1589 NotImplemented "Instruction CMP not yet implemented."
	1590 Move X8, 0xDDF000
	1591 Move X8, [X8+3776]
	1592 Move X0, X20
	1593 Move X2, X31
	1594 Move X1, [X8]
	1595 Call String.op_Equality, X0, X1
	1596 Move TEMP, X0
	1597 And TEMP, TEMP, 1
	1598 Compare TEMP, 1
	1599 JumpIfNotEqual {2541}
	1600 Move W19, 1031
	1601 Move W8, 0x85A3
	1602 NotImplemented "Instruction MOVK not yet implemented."
	1603 NotImplemented "Instruction CMP not yet implemented."
	1604 Move W8, 721
	1605 NotImplemented "Instruction MOVK not yet implemented."
	1606 NotImplemented "Instruction CMP not yet implemented."
	1607 Move W8, 0x1D89
	1608 NotImplemented "Instruction MOVK not yet implemented."
	1609 NotImplemented "Instruction CMP not yet implemented."
	1610 Move X8, 0xDDE000
	1611 Move X8, [X8+1176]
	1612 Move X0, X20
	1613 Move X2, X31
	1614 Move X1, [X8]
	1615 Call String.op_Equality, X0, X1
	1616 Move TEMP, X0
	1617 And TEMP, TEMP, 1
	1618 Compare TEMP, 1
	1619 JumpIfNotEqual {2541}
	1620 Move W19, 1052
	1621 Move W8, 0x39A2
	1622 NotImplemented "Instruction MOVK not yet implemented."
	1623 NotImplemented "Instruction CMP not yet implemented."
	1624 Move W8, 0xE6CA
	1625 NotImplemented "Instruction MOVK not yet implemented."
	1626 NotImplemented "Instruction CMP not yet implemented."
	1627 Move W8, 0x1D86
	1628 NotImplemented "Instruction MOVK not yet implemented."
	1629 NotImplemented "Instruction CMP not yet implemented."
	1630 Move X8, 0xDDF000
	1631 Move X8, [X8+3600]
	1632 Move X0, X20
	1633 Move X2, X31
	1634 Move X1, [X8]
	1635 Call String.op_Equality, X0, X1
	1636 Move TEMP, X0
	1637 And TEMP, TEMP, 1
	1638 Compare TEMP, 1
	1639 JumpIfNotEqual {2541}
	1640 Move W19, 0x241A
	1641 Move W8, 0xB1D1
	1642 NotImplemented "Instruction MOVK not yet implemented."
	1643 NotImplemented "Instruction CMP not yet implemented."
	1644 Move W8, 0xFAF2
	1645 NotImplemented "Instruction MOVK not yet implemented."
	1646 NotImplemented "Instruction CMP not yet implemented."
	1647 Move W8, 0x49B7
	1648 NotImplemented "Instruction MOVK not yet implemented."
	1649 NotImplemented "Instruction CMP not yet implemented."
	1650 Move X8, 0xDDF000
	1651 Move X8, [X8+2952]
	1652 Move X0, X20
	1653 Move X2, X31
	1654 Move X1, [X8]
	1655 Call String.op_Equality, X0, X1
	1656 Move TEMP, X0
	1657 And TEMP, TEMP, 1
	1658 Compare TEMP, 1
	1659 JumpIfNotEqual {2541}
	1660 Move W19, 1074
	1661 Move W8, 0x1FA2
	1662 NotImplemented "Instruction MOVK not yet implemented."
	1663 NotImplemented "Instruction CMP not yet implemented."
	1664 Move W8, 0x6E67
	1665 NotImplemented "Instruction MOVK not yet implemented."
	1666 NotImplemented "Instruction CMP not yet implemented."
	1667 Move W8, 0xE842
	1668 NotImplemented "Instruction MOVK not yet implemented."
	1669 NotImplemented "Instruction CMP not yet implemented."
	1670 Move X8, 0xDDF000
	1671 Move X8, [X8+3312]
	1672 Move X0, X20
	1673 Move X2, X31
	1674 Move X1, [X8]
	1675 Call String.op_Equality, X0, X1
	1676 Move TEMP, X0
	1677 And TEMP, TEMP, 1
	1678 Compare TEMP, 1
	1679 JumpIfNotEqual {2541}
	1680 Move W19, 1080
	1681 Move W8, 0xC4B5
	1682 NotImplemented "Instruction MOVK not yet implemented."
	1683 NotImplemented "Instruction CMP not yet implemented."
	1684 Move W8, 0xCF3F
	1685 NotImplemented "Instruction MOVK not yet implemented."
	1686 NotImplemented "Instruction CMP not yet implemented."
	1687 Move W8, 0x87B1
	1688 NotImplemented "Instruction MOVK not yet implemented."
	1689 NotImplemented "Instruction CMP not yet implemented."
	1690 Move X8, 0xDDF000
	1691 Move X8, [X8+3096]
	1692 Move X0, X20
	1693 Move X2, X31
	1694 Move X1, [X8]
	1695 Call String.op_Equality, X0, X1
	1696 Move TEMP, X0
	1697 And TEMP, TEMP, 1
	1698 Compare TEMP, 1
	1699 JumpIfNotEqual {2541}
	1700 Move W19, 1106
	1701 Move W8, 0xFB4A
	1702 NotImplemented "Instruction MOVK not yet implemented."
	1703 NotImplemented "Instruction CMP not yet implemented."
	1704 Move W8, 0x636D
	1705 NotImplemented "Instruction MOVK not yet implemented."
	1706 NotImplemented "Instruction CMP not yet implemented."
	1707 Move W8, 0xC348
	1708 NotImplemented "Instruction MOVK not yet implemented."
	1709 NotImplemented "Instruction CMP not yet implemented."
	1710 Move X8, 0xDDF000
	1711 Move X8, [X8+3680]
	1712 Move X8, 0xDDF000
	1713 Move X8, [X8+3344]
	1714 Move X0, X20
	1715 Move X2, X31
	1716 Move X1, [X8]
	1717 Call String.op_Equality, X0, X1
	1718 Move TEMP, X0
	1719 And TEMP, TEMP, 1
	1720 Compare TEMP, 1
	1721 JumpIfNotEqual {2541}
	1722 Move W19, 1132
	1723 Move X8, 0xDDE000
	1724 Move X8, [X8+1080]
	1725 Move X0, X20
	1726 Move X2, X31
	1727 Move X1, [X8]
	1728 Call String.op_Equality, X0, X1
	1729 Move TEMP, X0
	1730 And TEMP, TEMP, 1
	1731 Compare TEMP, 1
	1732 JumpIfNotEqual {2541}
	1733 Move W19, 1088
	1734 Move X8, 0xDDF000
	1735 Move X8, [X8+3712]
	1736 Move X0, X20
	1737 Move X2, X31
	1738 Move X1, [X8]
	1739 Call String.op_Equality, X0, X1
	1740 Move TEMP, X0
	1741 And TEMP, TEMP, 1
	1742 Compare TEMP, 1
	1743 JumpIfNotEqual {2541}
	1744 Move W19, 1060
	1745 Move X8, 0xDDF000
	1746 Move X8, [X8+3808]
	1747 Move X0, X20
	1748 Move X2, X31
	1749 Move X1, [X8]
	1750 Call String.op_Equality, X0, X1
	1751 Move TEMP, X0
	1752 And TEMP, TEMP, 1
	1753 Compare TEMP, 1
	1754 JumpIfNotEqual {2541}
	1755 Move W19, 1155
	1756 Move X8, 0xDDF000
	1757 Move X8, [X8+3800]
	1758 Move X0, X20
	1759 Move X2, X31
	1760 Move X1, [X8]
	1761 Call String.op_Equality, X0, X1
	1762 Move TEMP, X0
	1763 And TEMP, TEMP, 1
	1764 Compare TEMP, 1
	1765 JumpIfNotEqual {2541}
	1766 Move W19, 1087
	1767 Move X8, 0xDDF000
	1768 Move X8, [X8+3480]
	1769 Move X0, X20
	1770 Move X2, X31
	1771 Move X1, [X8]
	1772 Call String.op_Equality, X0, X1
	1773 Move TEMP, X0
	1774 And TEMP, TEMP, 1
	1775 Compare TEMP, 1
	1776 JumpIfNotEqual {2541}
	1777 Move W19, 1035
	1778 Move X8, 0xDDF000
	1779 Move X8, [X8+3688]
	1780 Move X0, X20
	1781 Move X2, X31
	1782 Move X1, [X8]
	1783 Call String.op_Equality, X0, X1
	1784 Move TEMP, X0
	1785 And TEMP, TEMP, 1
	1786 Compare TEMP, 1
	1787 JumpIfNotEqual {2541}
	1788 Move W19, 1049
	1789 Move X8, 0xDDF000
	1790 Move X8, [X8+3248]
	1791 Move X0, X20
	1792 Move X2, X31
	1793 Move X1, [X8]
	1794 Call String.op_Equality, X0, X1
	1795 Move TEMP, X0
	1796 And TEMP, TEMP, 1
	1797 Compare TEMP, 1
	1798 JumpIfNotEqual {2541}
	1799 Move W19, 0x201A
	1800 Move X8, 0xDDF000
	1801 Move X8, [X8+3528]
	1802 Move X0, X20
	1803 Move X2, X31
	1804 Move X1, [X8]
	1805 Call String.op_Equality, X0, X1
	1806 Move TEMP, X0
	1807 And TEMP, TEMP, 1
	1808 Compare TEMP, 1
	1809 JumpIfNotEqual {2541}
	1810 Move W19, 1136
	1811 Move X8, 0xDDF000
	1812 Move X8, [X8+3080]
	1813 Move X0, X20
	1814 Move X2, X31
	1815 Move X1, [X8]
	1816 Call String.op_Equality, X0, X1
	1817 Move TEMP, X0
	1818 And TEMP, TEMP, 1
	1819 Compare TEMP, 1
	1820 JumpIfNotEqual {2541}
	1821 Move W19, 1044
	1822 Move X8, 0xDDF000
	1823 Move X8, [X8+3752]
	1824 Move X0, X20
	1825 Move X2, X31
	1826 Move X1, [X8]
	1827 Call String.op_Equality, X0, X1
	1828 Move TEMP, X0
	1829 And TEMP, TEMP, 1
	1830 Compare TEMP, 1
	1831 JumpIfNotEqual {2541}
	1832 Move W19, 1061
	1833 Move X8, 0xDDF000
	1834 Move X8, [X8+3904]
	1835 Move X8, 0xDDF000
	1836 Move X8, [X8+3896]
	1837 Move X0, X20
	1838 Move X2, X31
	1839 Move X1, [X8]
	1840 Call String.op_Equality, X0, X1
	1841 Move TEMP, X0
	1842 And TEMP, TEMP, 1
	1843 Compare TEMP, 1
	1844 JumpIfNotEqual {2541}
	1845 Move W19, 1099
	1846 Move X8, 0xDDF000
	1847 Move X8, [X8+3544]
	1848 Move X0, X20
	1849 Move X2, X31
	1850 Move X1, [X8]
	1851 Call String.op_Equality, X0, X1
	1852 Move TEMP, X0
	1853 And TEMP, TEMP, 1
	1854 Compare TEMP, 1
	1855 JumpIfNotEqual {2541}
	1856 Move W19, 1071
	1857 Move X8, 0xDDF000
	1858 Move X8, [X8+3864]
	1859 Move X0, X20
	1860 Move X2, X31
	1861 Move X1, [X8]
	1862 Call String.op_Equality, X0, X1
	1863 Move TEMP, X0
	1864 And TEMP, TEMP, 1
	1865 Compare TEMP, 1
	1866 JumpIfNotEqual {2541}
	1867 Move W19, 1122
	1868 Move X8, 0xDDF000
	1869 Move X8, [X8+3848]
	1870 Move X0, X20
	1871 Move X2, X31
	1872 Move X1, [X8]
	1873 Call String.op_Equality, X0, X1
	1874 Move TEMP, X0
	1875 And TEMP, TEMP, 1
	1876 Compare TEMP, 1
	1877 JumpIfNotEqual {2541}
	1878 Move W19, 0x143B
	1879 Move X8, 0xDDF000
	1880 Move X8, [X8+3624]
	1881 Move X0, X20
	1882 Move X2, X31
	1883 Move X1, [X8]
	1884 Call String.op_Equality, X0, X1
	1885 Move TEMP, X0
	1886 And TEMP, TEMP, 1
	1887 Compare TEMP, 1
	1888 JumpIfNotEqual {2541}
	1889 Move W19, 1059
	1890 Move X8, 0xDDE000
	1891 Move X8, [X8+3912]
	1892 Move X0, X20
	1893 Move X2, X31
	1894 Move X1, [X8]
	1895 Call String.op_Equality, X0, X1
	1896 Move TEMP, X0
	1897 And TEMP, TEMP, 1
	1898 Compare TEMP, 1
	1899 JumpIfNotEqual {2541}
	1900 Move W19, 1102
	1901 Move X8, 0xDDE000
	1902 Move X8, [X8+3760]
	1903 Move X0, X20
	1904 Move X2, X31
	1905 Move X1, [X8]
	1906 Call String.op_Equality, X0, X1
	1907 Move TEMP, X0
	1908 And TEMP, TEMP, 1
	1909 Compare TEMP, 1
	1910 JumpIfNotEqual {2541}
	1911 Move W19, 1045
	1912 Move X8, 0xDDE000
	1913 Move X8, [X8+2992]
	1914 Move X0, X20
	1915 Move X2, X31
	1916 Move X1, [X8]
	1917 Call String.op_Equality, X0, X1
	1918 Move TEMP, X0
	1919 And TEMP, TEMP, 1
	1920 Compare TEMP, 1
	1921 JumpIfNotEqual {2541}
	1922 Move W19, 1130
	1923 Move X8, 0xDDE000
	1924 Move X8, [X8+3648]
	1925 Move X0, X20
	1926 Move X2, X31
	1927 Move X1, [X8]
	1928 Call String.op_Equality, X0, X1
	1929 Move TEMP, X0
	1930 And TEMP, TEMP, 1
	1931 Compare TEMP, 1
	1932 JumpIfNotEqual {2541}
	1933 Move W19, 2108
	1934 Move X8, 0xDDE000
	1935 Move X8, [X8+3464]
	1936 Move X0, X20
	1937 Move X2, X31
	1938 Move X1, [X8]
	1939 Call String.op_Equality, X0, X1
	1940 Move TEMP, X0
	1941 And TEMP, TEMP, 1
	1942 Compare TEMP, 1
	1943 JumpIfNotEqual {2541}
	1944 Move W19, 1025
	1945 Move X8, 0xDDE000
	1946 Move X8, [X8+3608]
	1947 Move X8, 0xDDE000
	1948 Move X8, [X8+3728]
	1949 Move X0, X20
	1950 Move X2, X31
	1951 Move X1, [X8]
	1952 Call String.op_Equality, X0, X1
	1953 Move TEMP, X0
	1954 And TEMP, TEMP, 1
	1955 Compare TEMP, 1
	1956 JumpIfNotEqual {2541}
	1957 Move W19, 1124
	1958 Move X8, 0xDDE000
	1959 Move X8, [X8+3136]
	1960 Move X0, X20
	1961 Move X2, X31
	1962 Move X1, [X8]
	1963 Call String.op_Equality, X0, X1
	1964 Move TEMP, X0
	1965 And TEMP, TEMP, 1
	1966 Compare TEMP, 1
	1967 JumpIfNotEqual {2541}
	1968 Move W19, 1133
	1969 Move X8, 0xDDE000
	1970 Move X8, [X8+3504]
	1971 Move X0, X20
	1972 Move X2, X31
	1973 Move X1, [X8]
	1974 Call String.op_Equality, X0, X1
	1975 Move TEMP, X0
	1976 And TEMP, TEMP, 1
	1977 Compare TEMP, 1
	1978 JumpIfNotEqual {2541}
	1979 Move W19, 1067
	1980 Move X8, 0xDDD000
	1981 Move X8, [X8+1192]
	1982 Move X0, X20
	1983 Move X2, X31
	1984 Move X1, [X8]
	1985 Call String.op_Equality, X0, X1
	1986 Move TEMP, X0
	1987 And TEMP, TEMP, 1
	1988 Compare TEMP, 1
	1989 JumpIfNotEqual {2541}
	1990 Move W19, 1069
	1991 Move X8, 0xDDE000
	1992 Move X8, [X8+3696]
	1993 Move X0, X20
	1994 Move X2, X31
	1995 Move X1, [X8]
	1996 Call String.op_Equality, X0, X1
	1997 Move TEMP, X0
	1998 And TEMP, TEMP, 1
	1999 Compare TEMP, 1
	2000 JumpIfNotEqual {2541}
	2001 Move W19, 3076
	2002 Move X8, 0xDD6000
	2003 Move X8, [X8+2744]
	2004 Move X0, X20
	2005 Move X2, X31
	2006 Move X1, [X8]
	2007 Call String.op_Equality, X0, X1
	2008 Move TEMP, X0
	2009 And TEMP, TEMP, 1
	2010 Compare TEMP, 1
	2011 JumpIfNotEqual {2541}
	2012 Move W19, 1042
	2013 Move X8, 0xDDE000
	2014 Move X8, [X8+2944]
	2015 Move X0, X20
	2016 Move X2, X31
	2017 Move X1, [X8]
	2018 Call String.op_Equality, X0, X1
	2019 Move TEMP, X0
	2020 And TEMP, TEMP, 1
	2021 Compare TEMP, 1
	2022 JumpIfNotEqual {2541}
	2023 Move W19, 1128
	2024 Move X8, 0xDDE000
	2025 Move X8, [X8+3048]
	2026 Move X0, X20
	2027 Move X2, X31
	2028 Move X1, [X8]
	2029 Call String.op_Equality, X0, X1
	2030 Move TEMP, X0
	2031 And TEMP, TEMP, 1
	2032 Compare TEMP, 1
	2033 JumpIfNotEqual {2541}
	2034 Move W19, 0x141A
	2035 Move X8, 0xDDE000
	2036 Move X8, [X8+3272]
	2037 Move X0, X20
	2038 Move X2, X31
	2039 Move X1, [X8]
	2040 Call String.op_Equality, X0, X1
	2041 Move TEMP, X0
	2042 And TEMP, TEMP, 1
	2043 Compare TEMP, 1
	2044 JumpIfNotEqual {2541}
	2045 Move W19, 1068
	2046 Move X8, 0xDDE000
	2047 Move X8, [X8+3168]
	2048 Move X8, 0xDDE000
	2049 Move X8, [X8+3208]
	2050 Move X0, X20
	2051 Move X2, X31
	2052 Move X1, [X8]
	2053 Call String.op_Equality, X0, X1
	2054 Move TEMP, X0
	2055 And TEMP, TEMP, 1
	2056 Compare TEMP, 1
	2057 JumpIfNotEqual {2541}
	2058 Move W19, 1064
	2059 Move X8, 0xDDE000
	2060 Move X8, [X8+3336]
	2061 Move X0, X20
	2062 Move X2, X31
	2063 Move X1, [X8]
	2064 Call String.op_Equality, X0, X1
	2065 Move TEMP, X0
	2066 And TEMP, TEMP, 1
	2067 Compare TEMP, 1
	2068 JumpIfNotEqual {2541}
	2069 Move W19, 1107
	2070 Move X8, 0xDDE000
	2071 Move X8, [X8+3216]
	2072 Move X0, X20
	2073 Move X2, X31
	2074 Move X1, [X8]
	2075 Call String.op_Equality, X0, X1
	2076 Move TEMP, X0
	2077 And TEMP, TEMP, 1
	2078 Compare TEMP, 1
	2079 JumpIfNotEqual {2541}
	2080 Move W19, 1160
	2081 Move X8, 0xDDE000
	2082 Move X8, [X8+3424]
	2083 Move X0, X20
	2084 Move X2, X31
	2085 Move X1, [X8]
	2086 Call String.op_Equality, X0, X1
	2087 Move TEMP, X0
	2088 And TEMP, TEMP, 1
	2089 Compare TEMP, 1
	2090 JumpIfNotEqual {2541}
	2091 Move W19, 1051
	2092 Move X8, 0xDDD000
	2093 Move X8, [X8+3168]
	2094 Move X0, X20
	2095 Move X2, X31
	2096 Move X1, [X8]
	2097 Call String.op_Equality, X0, X1
	2098 Move TEMP, X0
	2099 And TEMP, TEMP, 1
	2100 Compare TEMP, 1
	2101 JumpIfNotEqual {2541}
	2102 Move W19, 1037
	2103 Move X8, 0xDDE000
	2104 Move X8, [X8+3576]
	2105 Move X0, X20
	2106 Move X2, X31
	2107 Move X1, [X8]
	2108 Call String.op_Equality, X0, X1
	2109 Move TEMP, X0
	2110 And TEMP, TEMP, 1
	2111 Compare TEMP, 1
	2112 JumpIfNotEqual {2541}
	2113 Move W19, 1053
	2114 Move X8, 0xDDE000
	2115 Move X8, [X8+3960]
	2116 Move X0, X20
	2117 Move X2, X31
	2118 Move X1, [X8]
	2119 Call String.op_Equality, X0, X1
	2120 Move TEMP, X0
	2121 And TEMP, TEMP, 1
	2122 Compare TEMP, 1
	2123 JumpIfNotEqual {2541}
	2124 Move W19, 2094
	2125 Move X8, 0xDDE000
	2126 Move X8, [X8+3432]
	2127 Move X0, X20
	2128 Move X2, X31
	2129 Move X1, [X8]
	2130 Call String.op_Equality, X0, X1
	2131 Move TEMP, X0
	2132 And TEMP, TEMP, 1
	2133 Compare TEMP, 1
	2134 JumpIfNotEqual {2541}
	2135 Move W19, 1169
	2136 Move X8, 0xDDE000
	2137 Move X8, [X8+3664]
	2138 Move X0, X20
	2139 Move X2, X31
	2140 Move X1, [X8]
	2141 Call String.op_Equality, X0, X1
	2142 Move TEMP, X0
	2143 And TEMP, TEMP, 1
	2144 Compare TEMP, 1
	2145 JumpIfNotEqual {2541}
	2146 Move W19, 1027
	2147 Move X8, 0xDDE000
	2148 Move X8, [X8+3040]
	2149 Move X0, X20
	2150 Move X2, X31
	2151 Move X1, [X8]
	2152 Call String.op_Equality, X0, X1
	2153 Move TEMP, X0
	2154 And TEMP, TEMP, 1
	2155 Compare TEMP, 1
	2156 JumpIfNotEqual {2541}
	2157 Move W19, 1040
	2158 Move X8, 0xDDE000
	2159 Move X8, [X8+3584]
	2160 Move X0, X20
	2161 Move X2, X31
	2162 Move X1, [X8]
	2163 Call String.op_Equality, X0, X1
	2164 Move TEMP, X0
	2165 And TEMP, TEMP, 1
	2166 Compare TEMP, 1
	2167 JumpIfNotEqual {2541}
	2168 Move W19, 1154
	2169 Move X8, 0xDDE000
	2170 Move X8, [X8+3000]
	2171 Move X0, X20
	2172 Move X2, X31
	2173 Move X1, [X8]
	2174 Call String.op_Equality, X0, X1
	2175 Move TEMP, X0
	2176 And TEMP, TEMP, 1
	2177 Compare TEMP, 1
	2178 JumpIfNotEqual {2541}
	2179 Move W19, 1105
	2180 Move X8, 0xDDE000
	2181 Move X8, [X8+3296]
	2182 Move X0, X20
	2183 Move X2, X31
	2184 Move X1, [X8]
	2185 Call String.op_Equality, X0, X1
	2186 Move TEMP, X0
	2187 And TEMP, TEMP, 1
	2188 Compare TEMP, 1
	2189 JumpIfNotEqual {2541}
	2190 Move W19, 1123
	2191 Move X8, 0xDDE000
	2192 Move X8, [X8+3856]
	2193 Move X0, X20
	2194 Move X2, X31
	2195 Move X1, [X8]
	2196 Call String.op_Equality, X0, X1
	2197 Move TEMP, X0
	2198 And TEMP, TEMP, 1
	2199 Compare TEMP, 1
	2200 JumpIfNotEqual {2541}
	2201 Move W19, 1091
	2202 Move X8, 0xDDE000
	2203 Move X8, [X8+3888]
	2204 Move X0, X20
	2205 Move X2, X31
	2206 Move X1, [X8]
	2207 Call String.op_Equality, X0, X1
	2208 Move TEMP, X0
	2209 And TEMP, TEMP, 1
	2210 Compare TEMP, 1
	2211 JumpIfNotEqual {2541}
	2212 Move W19, 2115
	2213 Move X8, 0xDDE000
	2214 Move X8, [X8+3176]
	2215 Move X0, X20
	2216 Move X2, X31
	2217 Move X1, [X8]
	2218 Call String.op_Equality, X0, X1
	2219 Move TEMP, X0
	2220 And TEMP, TEMP, 1
	2221 Compare TEMP, 1
	2222 JumpIfNotEqual {2541}
	2223 Move W19, 1103
	2224 Move X8, 0xDDE000
	2225 Move X8, [X8+3224]
	2226 Move X0, X20
	2227 Move X2, X31
	2228 Move X1, [X8]
	2229 Call String.op_Equality, X0, X1
	2230 Move TEMP, X0
	2231 And TEMP, TEMP, 1
	2232 Compare TEMP, 1
	2233 JumpIfNotEqual {2541}
	2234 Move W19, 1086
	2235 Move X8, 0xDDE000
	2236 Move X8, [X8+3056]
	2237 Move X0, X20
	2238 Move X2, X31
	2239 Move X1, [X8]
	2240 Call String.op_Equality, X0, X1
	2241 Move TEMP, X0
	2242 And TEMP, TEMP, 1
	2243 Compare TEMP, 1
	2244 JumpIfNotEqual {2541}
	2245 Move W19, 1036
	2246 Move X8, 0xDDD000
	2247 Move X8, [X8+3176]
	2248 Move X8, 0xDDE000
	2249 Move X8, [X8+3376]
	2250 Move X0, X20
	2251 Move X2, X31
	2252 Move X1, [X8]
	2253 Call String.op_Equality, X0, X1
	2254 Move TEMP, X0
	2255 And TEMP, TEMP, 1
	2256 Compare TEMP, 1
	2257 JumpIfNotEqual {2541}
	2258 Move W19, 3082
	2259 Move X8, 0xDDE000
	2260 Move X8, [X8+3744]
	2261 Move X0, X20
	2262 Move X2, X31
	2263 Move X1, [X8]
	2264 Call String.op_Equality, X0, X1
	2265 Move TEMP, X0
	2266 And TEMP, TEMP, 1
	2267 Compare TEMP, 1
	2268 JumpIfNotEqual {2541}
	2269 Move W19, 1065
	2270 Move X8, 0xDDE000
	2271 Move X8, [X8+3288]
	2272 Move X8, 0xDDE000
	2273 Move X8, [X8+3920]
	2274 Move X0, X20
	2275 Move X2, X31
	2276 Move X1, [X8]
	2277 Call String.op_Equality, X0, X1
	2278 Move TEMP, X0
	2279 And TEMP, TEMP, 1
	2280 Compare TEMP, 1
	2281 JumpIfNotEqual {2541}
	2282 Move W19, 1115
	2283 Move X8, 0xDDE000
	2284 Move X8, [X8+3736]
	2285 Move X0, X20
	2286 Move X2, X31
	2287 Move X1, [X8]
	2288 Call String.op_Equality, X0, X1
	2289 Move TEMP, X0
	2290 And TEMP, TEMP, 1
	2291 Compare TEMP, 1
	2292 JumpIfNotEqual {2541}
	2293 Move W19, 2092
	2294 Move X8, 0xDDE000
	2295 Move X8, [X8+3792]
	2296 Move X0, X20
	2297 Move X2, X31
	2298 Move X1, [X8]
	2299 Call String.op_Equality, X0, X1
	2300 Move TEMP, X0
	2301 And TEMP, TEMP, 1
	2302 Compare TEMP, 1
	2303 JumpIfNotEqual {2541}
	2304 Move W19, 1096
	2305 Move X8, 0xDDE000
	2306 Move X8, [X8+3024]
	2307 Move X0, X20
	2308 Move X2, X31
	2309 Move X1, [X8]
	2310 Call String.op_Equality, X0, X1
	2311 Move TEMP, X0
	2312 And TEMP, TEMP, 1
	2313 Compare TEMP, 1
	2314 JumpIfNotEqual {2541}
	2315 Move W19, 1046
	2316 Move X8, 0xDDE000
	2317 Move X8, [X8+3240]
	2318 Move X0, X20
	2319 Move X2, X31
	2320 Move X1, [X8]
	2321 Call String.op_Equality, X0, X1
	2322 Move TEMP, X0
	2323 And TEMP, TEMP, 1
	2324 Compare TEMP, 1
	2325 JumpIfNotEqual {2541}
	2326 Move W19, 1159
	2327 Move X8, 0xDDE000
	2328 Move X8, [X8+3032]
	2329 Move X0, X20
	2330 Move X2, X31
	2331 Move X1, [X8]
	2332 Call String.op_Equality, X0, X1
	2333 Move TEMP, X0
	2334 And TEMP, TEMP, 1
	2335 Compare TEMP, 1
	2336 JumpIfNotEqual {2541}
	2337 Move W19, 1125
	2338 Move X8, 0xDDE000
	2339 Move X8, [X8+3632]
	2340 Move X0, X20
	2341 Move X2, X31
	2342 Move X1, [X8]
	2343 Call String.op_Equality, X0, X1
	2344 Move TEMP, X0
	2345 And TEMP, TEMP, 1
	2346 Compare TEMP, 1
	2347 JumpIfNotEqual {2541}
	2348 Move W19, 0x203B
	2349 Move X8, 0xDDE000
	2350 Move X8, [X8+3016]
	2351 Move X0, X20
	2352 Move X2, X31
	2353 Move X1, [X8]
	2354 Call String.op_Equality, X0, X1
	2355 Move TEMP, X0
	2356 And TEMP, TEMP, 1
	2357 Compare TEMP, 1
	2358 JumpIfNotEqual {2541}
	2359 Move W19, 0x243B
	2360 Move X8, 0xDDE000
	2361 Move X8, [X8+3456]
	2362 Move X0, X20
	2363 Move X2, X31
	2364 Move X1, [X8]
	2365 Call String.op_Equality, X0, X1
	2366 Move TEMP, X0
	2367 And TEMP, TEMP, 1
	2368 Compare TEMP, 1
	2369 JumpIfNotEqual {2541}
	2370 Move W19, 1066
	2371 Move X8, 0xDDE000
	2372 Move X8, [X8+3592]
	2373 Move X0, X20
	2374 Move X2, X31
	2375 Move X1, [X8]
	2376 Call String.op_Equality, X0, X1
	2377 Move TEMP, X0
	2378 And TEMP, TEMP, 1
	2379 Compare TEMP, 1
	2380 JumpIfNotEqual {2541}
	2381 Move W19, 1083
	2382 Move X8, 0xDDE000
	2383 Move X8, [X8+2960]
	2384 Move X0, X20
	2385 Move X2, X31
	2386 Move X1, [X8]
	2387 Call String.op_Equality, X0, X1
	2388 Move TEMP, X0
	2389 And TEMP, TEMP, 1
	2390 Compare TEMP, 1
	2391 JumpIfNotEqual {2541}
	2392 Move W19, 1152
	2393 Move X8, 0xDDE000
	2394 Move X8, [X8+3944]
	2395 Move X0, X20
	2396 Move X2, X31
	2397 Move X1, [X8]
	2398 Call String.op_Equality, X0, X1
	2399 Move TEMP, X0
	2400 And TEMP, TEMP, 1
	2401 Compare TEMP, 1
	2402 JumpIfNotEqual {2541}
	2403 Move W19, 1062
	2404 Move X8, 0xDDE000
	2405 Move X8, [X8+3952]
	2406 Move X0, X20
	2407 Move X2, X31
	2408 Move X1, [X8]
	2409 Call String.op_Equality, X0, X1
	2410 Move TEMP, X0
	2411 And TEMP, TEMP, 1
	2412 Compare TEMP, 1
	2413 JumpIfNotEqual {2541}
	2414 Move W19, 2141
	2415 Move X8, 0xDDE000
	2416 Move X8, [X8+3232]
	2417 Move X0, X20
	2418 Move X2, X31
	2419 Move X1, [X8]
	2420 Call String.op_Equality, X0, X1
	2421 Move TEMP, X0
	2422 And TEMP, TEMP, 1
	2423 Compare TEMP, 1
	2424 JumpIfNotEqual {2541}
	2425 Move W19, 1079
	2426 Move X8, 0xDDE000
	2427 Move X8, [X8+3200]
	2428 Move X8, 0xDDE000
	2429 Move X8, [X8+3832]
	2430 Move X0, X20
	2431 Move X2, X31
	2432 Move X1, [X8]
	2433 Call String.op_Equality, X0, X1
	2434 Move TEMP, X0
	2435 And TEMP, TEMP, 1
	2436 Compare TEMP, 1
	2437 JumpIfNotEqual {2541}
	2438 Move W19, 2052
	2439 Move X8, 0xDDE000
	2440 Move X8, [X8+3392]
	2441 Move X0, X20
	2442 Move X2, X31
	2443 Move X1, [X8]
	2444 Call String.op_Equality, X0, X1
	2445 Move TEMP, X0
	2446 And TEMP, TEMP, 1
	2447 Compare TEMP, 1
	2448 JumpIfNotEqual {2541}
	2449 Move W19, 1093
	2450 Move X8, 0xDDE000
	2451 Move X8, [X8+3360]
	2452 Move X0, X20
	2453 Move X2, X31
	2454 Move X1, [X8]
	2455 Call String.op_Equality, X0, X1
	2456 Move TEMP, X0
	2457 And TEMP, TEMP, 1
	2458 Compare TEMP, 1
	2459 JumpIfNotEqual {2541}
	2460 Move W19, 1135
	2461 Move X8, 0xDDE000
	2462 Move X8, [X8+3880]
	2463 Move X0, X20
	2464 Move X2, X31
	2465 Move X1, [X8]
	2466 Call String.op_Equality, X0, X1
	2467 Move TEMP, X0
	2468 And TEMP, TEMP, 1
	2469 Compare TEMP, 1
	2470 JumpIfNotEqual {2541}
	2471 Move W19, 1104
	2472 Move X8, 0xDDE000
	2473 Move X8, [X8+3328]
	2474 Move X0, X20
	2475 Move X2, X31
	2476 Move X1, [X8]
	2477 Call String.op_Equality, X0, X1
	2478 Move TEMP, X0
	2479 And TEMP, TEMP, 1
	2480 Compare TEMP, 1
	2481 JumpIfNotEqual {2541}
	2482 Move W19, 1043
	2483 Move X8, 0xDDE000
	2484 Move X8, [X8+3152]
	2485 Move X0, X20
	2486 Move X2, X31
	2487 Move X1, [X8]
	2488 Call String.op_Equality, X0, X1
	2489 Move TEMP, X0
	2490 And TEMP, TEMP, 1
	2491 Compare TEMP, 1
	2492 JumpIfNotEqual {2541}
	2493 Move W19, 1150
	2494 Move X8, 0xDDE000
	2495 Move X8, [X8+3520]
	2496 Move X0, X20
	2497 Move X2, X31
	2498 Move X1, [X8]
	2499 Call String.op_Equality, X0, X1
	2500 Move TEMP, X0
	2501 And TEMP, TEMP, 1
	2502 Compare TEMP, 1
	2503 JumpIfNotEqual {2541}
	2504 Move W19, 1050
	2505 Move X8, 0xDDE000
	2506 Move X8, [X8+3672]
	2507 Move X0, X20
	2508 Move X2, X31
	2509 Move X1, [X8]
	2510 Call String.op_Equality, X0, X1
	2511 Move TEMP, X0
	2512 And TEMP, TEMP, 1
	2513 Compare TEMP, 1
	2514 JumpIfNotEqual {2541}
	2515 Move W19, 1070
	2516 Move X8, 0xDDE000
	2517 Move X8, [X8+3936]
	2518 Move X0, X20
	2519 Move X2, X31
	2520 Move X1, [X8]
	2521 Call String.op_Equality, X0, X1
	2522 Move TEMP, X0
	2523 And TEMP, TEMP, 1
	2524 Compare TEMP, 1
	2525 JumpIfNotEqual {2541}
	2526 Move W19, 1158
	2527 Move X8, 0xDAA000
	2528 Move X8, [X8+3144]
	2529 Move X0, [X8]
	2530 Call 0x1C17F10
	2531 Move W2, 1
	2532 Move W1, W19
	2533 Move W3, W31
	2534 Move X20, X0
	2535 Call CultureInfo..ctor, X0, X1, X2, X3
	2536 Move X0, X20
	2537 Move X20, [X31+16]
	2538 Move X19, [X31+24]
	2539 Move X30, [X31+32]
	2540 Return X0
	2541 Move X0, 0xDDE000
	2542 Move X0, [X0+3976]
	2543 Call 0x1C17D08
	2544 Move X1, X19
	2545 Move X2, X31
	2546 Call String.Concat, X0, X1
	2547 Move X19, X0
	2548 Move X0, 0xDB1000
	2549 Move X0, [X0+1880]
	2550 Call 0x1C17D08
	2551 Call 0x1C17F10
	2552 Move X1, X19
	2553 Move X2, X31
	2554 Move X20, X0
	2555 Call NotImplementedException..ctor, X0, X1
	2556 Move X0, 0xDDE000
	2557 Move X0, [X0+3984]
	2558 Call 0x1C17D08
	2559 Move X1, X0
	2560 Move X0, X20
	2561 Call 0x1C17DEC
	2562 Call 0x1C17F20

Method: System.Int32 get_CalendarType()

Disassembly:
	0x03349B64 MOVZ W8, 0xDED0
	0x03349B68 MOVK W8, 0x5C220000
	0x03349B6C CMP W0, W8
	0x03349B70 B.EQ 0x334AE84
	0x03349B74 MOVZ W8, 0x17C3
	0x03349B78 MOVK W8, 0x5C2E0000
	0x03349B7C CMP W0, W8
	0x03349B80 B.NE 0x334B88C
	0x03349B84 ADRP X8, 0xDE0000
	0x03349B88 LDR X8, [X8 + 0xF20]
	0x03349B8C MOV X0, X20
	0x03349B90 MOV X2, X31
	0x03349B94 LDR X1, [X8]
	0x03349B98 BL 0x321BA08
	0x03349B9C TBZ X0, 0x0, 0x334B88C
	0x03349BA0 MOVZ W19, 0x481
	0x03349BA4 B 0x334B858
	0x03349BA8 MOVZ W8, 0x8709
	0x03349BAC MOVK W8, 0x4C200000
	0x03349BB0 CMP W0, W8
	0x03349BB4 B.HI 0x3349EB8
	0x03349BB8 MOVZ W8, 0x683D
	0x03349BBC MOVK W8, 0x49630000
	0x03349BC0 CMP W0, W8
	0x03349BC4 B.HI 0x334A160
	0x03349BC8 MOVZ W8, 0xFF7E
	0x03349BCC MOVK W8, 0x49240000
	0x03349BD0 CMP W0, W8
	0x03349BD4 B.HI 0x334A610

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+36]
	004 NotImplemented "Instruction SBFM not yet implemented."
	005 Subtract X8, X8, 1
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X9, -42319872
	008 Add X9, X9, 16
	009 Move W0, [X9]
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0
	013 Move X0, 0xDB4000
	014 Move X0, [X0+1880]
	015 Call 0x1C17D08
	016 Call 0x1C17F10
	017 Move X19, X0
	018 Move X0, 0xDE1000
	019 Move X0, [X0+2840]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X19
	023 Move X2, X31
	024 Call NotImplementedException..ctor, X0, X1
	025 Move X0, 0xDE1000
	026 Move X0, [X0+2848]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Call 0x1C17DEC

Method: System.Globalization.Calendar CreateCalendar(System.Int32 calendarType)

Disassembly:
	0x0334889C LDP X24, X23, [X31 + 0x10]
	0x033488A0 STR X8, [X19 + 0x70]
	0x033488A4 STP X8, X9, [X19 + 0x60]
	0x033488A8 LDP X20, X19, [X31 + 0x30]
	0x033488AC LDR X30, [X31], #0x40
	0x033488B0 RET
	0x033488B4 BL 0x1C16F20
	0x033488B8 AND W2, W2, 0x1
	0x033488BC MOV W3, W31
	0x033488C0 B 0x33488C4
	0x033488C4 SUB X31, X31, 0xA0
	0x033488C8 STP X29, X30, [X31 + 0x40]
	0x033488CC STP X28, X27, [X31 + 0x50]
	0x033488D0 STP X26, X25, [X31 + 0x60]
	0x033488D4 STP X24, X23, [X31 + 0x70]
	0x033488D8 STP X22, X21, [X31 + 0x80]
	0x033488DC STP X20, X19, [X31 + 0x90]
	0x033488E0 ADRP X23, 0x1094000
	0x033488E4 LDRB W8, [X23 + 0xD83]
	0x033488E8 MOV W20, W3
	0x033488EC MOV W22, W2
	0x033488F0 MOV W21, W1
	0x033488F4 MOV X19, X0
	0x033488F8 STR W1, [X31 + 0x3C]
	0x033488FC TBNZ X8, 0x0, 0x3348914
	0x03348900 ADRP X0, 0xDAD000
	0x03348904 LDR X0, [X0 + 0x170]
	0x03348908 BL 0x1C16CF4
	0x0334890C MOVZ W8, 0x1
	0x03348910 STRB W8, [X23 + 0xD83]
	0x03348914 MOV X0, X19
	0x03348918 MOV X1, X31
	0x0334891C STRH W31, [X31 + 0x38]
	0x03348920 BL 0x33BDD8C
	0x03348924 TBNZ X21, 0x1F, 0x3348A38
	0x03348928 AND W8, W22, 0x1
	0x0334892C AND W9, W20, 0x1
	0x03348930 MOVZ W10, 0x1
	0x03348934 CMP W21, 0x7F
	0x03348938 STRB W10, [X19 + 0xB0]
	0x0334893C STRB W9, [X19 + 0x10]
	0x03348940 STRB W8, [X19 + 0x28]
	0x03348944 B.NE 0x3348960
	0x03348948 BL 0x333BD94
	0x0334894C STR X0, [X19 + 0xC0]
	0x03348950 AND W1, W20, 0x1
	0x03348954 MOV X0, X19
	0x03348958 BL 0x334876C
	0x0334895C B 0x3348A18
	0x03348960 MOV X0, X19
	0x03348964 MOV W1, W21
	0x03348968 BL 0x1C42B00
	0x0334896C TBZ X0, 0x0, 0x3348A94
	0x03348970 LDR X8, [X19 + 0x90]
	0x03348974 LDR X22, [X19 + 0x48]
	0x03348978 LDRB W27, [X19 + 0x28]
	0x0334897C LDR W23, [X19 + 0x1C]
	0x03348980 LDP W9, W29, [X8]
	0x03348984 LDP W28, W21, [X8 + 0x8]
	0x03348988 LDR W20, [X8 + 0x10]
	0x0334898C MOV X0, X19
	0x03348990 STR W9, [X31 + 0x34]
	0x03348994 BL 0x3348B64
	0x03348998 ADRP X8, 0xDAD000
	0x0334899C LDR W24, [X19 + 0x20]
	0x033489A0 LDR X8, [X8 + 0x170]
	0x033489A4 UBFM W9, W20, 0x8, 0xF
	0x033489A8 LDR X25, [X19 + 0x68]
	0x033489AC STRH W9, [X31 + 0x38]
	0x033489B0 LDR X8, [X8]
	0x033489B4 MOV W26, W0
	0x033489B8 LDR W9, [X8 + 0xE0]
	0x033489BC CBNZ W9, 0x33489C8
	0x033489C0 MOV X0, X8
	0x033489C4 BL 0x1C16DFC
	0x033489C8 CMP W27, 0x0
	0x033489CC ADD X0, X31, 0x38
	0x033489D0 MOV X1, X31
	0x033489D4 AND W20, W20, 0x1
	0x033489D8 CSET W27, NE
	0x033489DC BL 0x330A76C
	0x033489E0 LDR W6, [X31 + 0x34]
	0x033489E4 STR X0, [X31 + 0x18]
	0x033489E8 MOV X0, X22
	0x033489EC MOV W1, W27
	0x033489F0 MOV W2, W23
	0x033489F4 MOV W3, W26
	0x033489F8 MOV W4, W24
	0x033489FC MOV X5, X25
	0x03348A00 MOV W7, W21
	0x03348A04 STRB W20, [X31 + 0x10]
	0x03348A08 STR W29, [X31 + 0x8]
	0x03348A0C STR W28, [X31]
	0x03348A10 BL 0x3340118
	0x03348A14 STR X0, [X19 + 0xC0]
	0x03348A18 LDP X20, X19, [X31 + 0x90]
	0x03348A1C LDP X22, X21, [X31 + 0x80]
	0x03348A20 LDP X24, X23, [X31 + 0x70]
	0x03348A24 LDP X26, X25, [X31 + 0x60]
	0x03348A28 LDP X28, X27, [X31 + 0x50]
	0x03348A2C LDP X29, X30, [X31 + 0x40]
	0x03348A30 ADD X31, X31, 0xA0
	0x03348A34 RET
	0x03348A38 ADRP X0, 0xDB3000
	0x03348A3C LDR X0, [X0 + 0x760]
	0x03348A40 BL 0x1C16D08
	0x03348A44 BL 0x1C16F10
	0x03348A48 MOV X19, X0
	0x03348A4C ADRP X0, 0xDD9000
	0x03348A50 LDR X0, [X0 + 0xFF0]
	0x03348A54 BL 0x1C16D08
	0x03348A58 MOV X20, X0
	0x03348A5C ADRP X0, 0xDDE000
	0x03348A60 LDR X0, [X0 + 0xD28]
	0x03348A64 BL 0x1C16D08
	0x03348A68 MOV X2, X0
	0x03348A6C MOV X0, X19
	0x03348A70 MOV X1, X20
	0x03348A74 MOV X3, X31
	0x03348A78 BL 0x3311888
	0x03348A7C ADRP X0, 0xDE1000
	0x03348A80 LDR X0, [X0 + 0xAF8]
	0x03348A84 BL 0x1C16D08
	0x03348A88 MOV X1, X0
	0x03348A8C MOV X0, X19
	0x03348A90 BL 0x1C16DEC
	0x03348A94 ADRP X0, 0xDAD000
	0x03348A98 LDR X0, [X0 + 0xC48]
	0x03348A9C BL 0x1C16D08
	0x03348AA0 BL 0x19903D0
	0x03348AA4 BL 0x3338524
	0x03348AA8 MOV X19, X0
	0x03348AAC BL 0x3338524
	0x03348AB0 MOV X1, X0
	0x03348AB4 ADD X0, X31, 0x3C
	0x03348AB8 MOV X2, X31
	0x03348ABC BL 0x337B824
	0x03348AC0 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1095000
	007 Move W8, [X20+3467]
	008 Move W19, W0
	009 Move [X31+12], W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {40}
	014 Move X0, 0xDE1000
	015 Move X0, [X0+824]
	016 Call 0x1C17CF4
	017 Move X0, 0xDE2000
	018 Move X0, [X0+2696]
	019 Call 0x1C17CF4
	020 Move X0, 0xDE1000
	021 Move X0, [X0+784]
	022 Call 0x1C17CF4
	023 Move X0, 0xDB4000
	024 Move X0, [X0+1480]
	025 Call 0x1C17CF4
	026 Move X0, 0xDAC000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xDE2000
	030 Move X0, [X0+2704]
	031 Call 0x1C17CF4
	032 Move X0, 0xDE2000
	033 Move X0, [X0+2712]
	034 Call 0x1C17CF4
	035 Move X0, 0xDE2000
	036 Move X0, [X0+2720]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+3467], W8
	040 NotImplemented "Instruction SBFM not yet implemented."
	041 Subtract W8, W8, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X9, -41619456
	044 Add X9, X9, 1851
	045 NotImplemented "Instruction ADR not yet implemented."
	046 Move W11, [X9]
	047 Add X10, X10, X11
	048 Move X8, 0xDE2000
	049 Move X8, [X8+2720]
	050 CallNoReturn X10
	051 Move X8, 0xDE1000
	052 Move X8, [X8+784]
	053 Move X0, [X8]
	054 Call 0x1C17F10
	055 Move X20, X0
	056 And W1, W19, 255
	057 Move X8, 0xDE2000
	058 Move X8, [X8+2712]
	059 Move X8, 0xDE2000
	060 Move X8, [X8+2704]
	061 Move X9, 0xDAC000
	062 Move X9, [X9+1728]
	063 Move X21, 0xDB4000
	064 Move X20, 0xDE2000
	065 Move X19, [X8]
	066 Move X0, [X9]
	067 Move W9, [X0+224]
	068 Move X21, [X21+1480]
	069 Move X20, [X20+2696]
	070 Compare W9, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X2, [X21]
	074 Move X3, [X20]
	075 Move X0, X19
	076 Move W1, W31
	077 Call 0x1C180BC
	078 Move X1, X31
	079 Move X2, X31
	080 Move X19, X0
	081 Call Type.op_Equality, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {94}
	086 Move X8, 0xDE1000
	087 Move X8, [X8+784]
	088 Move X0, [X8]
	089 Call 0x1C17F10
	090 Move X20, X0
	091 Move W1, 1
	092 Move X2, X31
	093 Call GregorianCalendar..ctor, X0, X1
	094 Move X0, X19
	095 Move X1, X31
	096 Call Activator.CreateInstance, X0
	097 Move X20, X0
	098 Compare X0, 0
	099 JumpIfEqual {111}
	100 Move X9, 0xDE1000
	101 Move X9, [X9+824]
	102 Move X8, [X20]
	103 Move X1, [X9]
	104 Move W10, [X8+304]
	105 Move W9, [X1+304]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X8, [X8+200]
	108 Add X8, X8, X9
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X0, X20
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X30, [X31+16]
	115 Move X21, [X31+24]
	116 Add X31, X31, 48
	117 Return X0
	118 Move X0, X20
	119 Call 0x1C181E0
	120 Add X0, X31, 12
	121 Move X1, X31
	122 Call Int32.ToString, X0
	123 Move X19, X0
	124 Move X0, 0xDE2000
	125 Move X0, [X0+2728]
	126 Call 0x1C17D08
	127 Move X1, X19
	128 Move X2, X31
	129 Call String.Concat, X0, X1
	130 Move X19, X0
	131 Move X0, 0xDB5000
	132 Move X0, [X0+1880]
	133 Call 0x1C17D08
	134 Call 0x1C17F10
	135 Move X1, X19
	136 Move X2, X31
	137 Move X20, X0
	138 Call NotImplementedException..ctor, X0, X1
	139 Move X0, 0xDE2000
	140 Move X0, [X0+2696]
	141 Call 0x1C17D08
	142 Move X1, X0
	143 Move X0, X20
	144 Call 0x1C17DEC

Method: System.Exception CreateNotFoundException(System.String name)

Disassembly:
	0x03349EC8 MOVZ W8, 0xCA86
	0x03349ECC MOVK W8, 0x4C3A0000
	0x03349ED0 CMP W0, W8
	0x03349ED4 B.HI 0x334A830
	0x03349ED8 MOVZ W8, 0xC5A0
	0x03349EDC MOVK W8, 0x4C220000
	0x03349EE0 CMP W0, W8
	0x03349EE4 B.EQ 0x334AFB0
	0x03349EE8 MOVZ W8, 0xCA86
	0x03349EEC MOVK W8, 0x4C3A0000
	0x03349EF0 CMP W0, W8
	0x03349EF4 B.NE 0x334B88C
	0x03349EF8 ADRP X8, 0xDE0000
	0x03349EFC LDR X8, [X8 + 0xC00]
	0x03349F00 MOV X0, X20
	0x03349F04 MOV X2, X31
	0x03349F08 LDR X1, [X8]
	0x03349F0C BL 0x321BA08
	0x03349F10 TBZ X0, 0x0, 0x334B88C
	0x03349F14 MOVZ W19, 0x40E
	0x03349F18 B 0x334B858
	0x03349F1C MOVZ W8, 0x8567
	0x03349F20 MOVK W8, 0xEB9E0000
	0x03349F24 CMP W0, W8
	0x03349F28 B.HI 0x334A43C
	0x03349F2C MOVZ W8, 0xC5D4
	0x03349F30 MOVK W8, 0xE93A0000
	0x03349F34 CMP W0, W8
	0x03349F38 B.HI 0x334A874
	0x03349F3C MOVZ W8, 0xBDF5
	0x03349F40 MOVK W8, 0xE43A0000
	0x03349F44 CMP W0, W8
	0x03349F48 B.EQ 0x334AFD4
	0x03349F4C MOVZ W8, 0xC5D4
	0x03349F50 MOVK W8, 0xE93A0000
	0x03349F54 CMP W0, W8
	0x03349F58 B.NE 0x334B88C
	0x03349F5C ADRP X8, 0xDE0000
	0x03349F60 LDR X8, [X8 + 0xD38]
	0x03349F64 MOV X0, X20
	0x03349F68 MOV X2, X31
	0x03349F6C LDR X1, [X8]
	0x03349F70 BL 0x321BA08
	0x03349F74 TBZ X0, 0x0, 0x334B88C
	0x03349F78 MOVZ W19, 0x1C3B
	0x03349F7C B 0x334B858
	0x03349F80 MOVZ W8, 0x3866
	0x03349F84 MOVK W8, 0x38450000
	0x03349F88 CMP W0, W8
	0x03349F8C B.HI 0x334A8B8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1094000
	009 Move X23, 0xDE1000
	010 Move X24, 0xDE1000
	011 Move X21, 0xDE1000
	012 Move X20, 0xDB3000
	013 Move W8, [X22+3468]
	014 Move X23, [X23+2872]
	015 Move X24, [X24+2880]
	016 Move X21, [X21+2832]
	017 Move X20, [X20+1416]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xDE1000
	024 Move X0, [X0+2832]
	025 Call 0x1C17CF4
	026 Move X0, 0xDE1000
	027 Move X0, [X0+2872]
	028 Call 0x1C17CF4
	029 Move X0, 0xDB3000
	030 Move X0, [X0+1416]
	031 Call 0x1C17CF4
	032 Move X0, 0xDE1000
	033 Move X0, [X0+2880]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+3468], W8
	037 Move X0, [X23]
	038 Move X2, [X24]
	039 Move X1, X19
	040 Move X3, X31
	041 Call String.Concat, X0, X1, X2
	042 Move X8, [X21]
	043 Move X19, X0
	044 Move X0, X8
	045 Call 0x1C17F10
	046 Move X1, [X20]
	047 Move X2, X19
	048 Move X3, X31
	049 Move X20, X0
	050 Call CultureNotFoundException..ctor, X0, X1, X2
	051 Move X0, X20
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X22, [X31+32]
	055 Move X21, [X31+40]
	056 Move X24, [X31+16]
	057 Move X23, [X31+24]
	058 Move X30, [X31+64]
	059 Return X0

Method: System.Globalization.CultureInfo get_DefaultThreadCurrentCulture()

Disassembly:
	0x0334C8E4 CBZ X21, 0x334CB54
	0x0334C8E8 MOV X0, X21
	0x0334C8EC MOV X1, X31
	0x0334C8F0 BL 0x323260C
	0x0334C8F4 CMP W0, 0x1
	0x0334C8F8 STR W0, [X31 + 0xC]
	0x0334C8FC B.LT 0x334C910
	0x0334C900 LDRH W1, [X20 + 0x10]
	0x0334C904 MOV X0, X21
	0x0334C908 MOV X2, X31
	0x0334C90C BL 0x3233D30
	0x0334C910 LDR W8, [X19 + 0x10]
	0x0334C914 LDR W9, [X31 + 0xC]
	0x0334C918 CMP W9, W8
	0x0334C91C B.GE 0x334CB14
	0x0334C920 LDR W23, [X31 + 0xC]
	0x0334C924 MOV W26, W31
	0x0334C928 MOVZ W29, 0x16
	0x0334C92C MOVZ W27, 0x61
	0x0334C930 CMP W8, 0x1
	0x0334C934 B.LT 0x334C998
	0x0334C938 MOV W24, W31
	0x0334C93C MOVN W28, 0x80000000
	0x0334C940 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1091000
	005 Move X19, 0xDAA000
	006 Move W8, [X20+3469]
	007 Move X19, [X19+3144]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDAA000
	013 Move X0, [X0+3144]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3469], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X19, [X8+32]
	025 Call 0x1C17D44
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Globalization.CultureInfo get_DefaultThreadCurrentUICulture()

Disassembly:
	0x0334C944 MOV W1, W24
	0x0334C948 MOV X2, X31
	0x0334C94C BL 0x3222A1C
	0x0334C950 CMP W25, W0, UXTH
	0x0334C954 B.GT 0x334C984
	0x0334C958 MOV X0, X19
	0x0334C95C MOV W1, W24
	0x0334C960 MOV X2, X31
	0x0334C964 BL 0x3222A1C
	0x0334C968 CMP W28, W0, UXTH
	0x0334C96C B.LE 0x334C984
	0x0334C970 MOV X0, X19
	0x0334C974 MOV W1, W24
	0x0334C978 MOV X2, X31
	0x0334C97C BL 0x3222A1C
	0x0334C980 AND W28, W0, 0xFFFF
	0x0334C984 LDR W8, [X19 + 0x10]
	0x0334C988 ADD W24, W24, 0x1
	0x0334C98C CMP W24, W8
	0x0334C990 B.LT 0x334C940
	0x0334C994 B 0x334C99C
	0x0334C998 MOVN W28, 0x80000000
	0x0334C99C SXTW X9, W28
	0x0334C9A0 SUB X9, X9, W25, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1091000
	005 Move X19, 0xDAA000
	006 Move W8, [X20+3470]
	007 Move X19, [X19+3144]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDAA000
	013 Move X0, [X0+3144]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3470], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X19, [X8+24]
	025 Call 0x1C17D44
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.String get_SortName()

Disassembly:
	0x0334C9A4 MOVZ W10, 0x80000000
	0x0334C9A8 ADD X9, X9, X10

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Globalization.CultureInfo get_UserDefaultUICulture()

Disassembly:
	0x0334C9AC UBFM X9, X9, 0x20, 0x3F
	0x0334C9B0 CBNZ X9, 0x334CB40
	0x0334C9B4 MOVN W9, 0x80000000
	0x0334C9B8 CMP W23, W9
	0x0334C9BC B.EQ 0x334CB40
	0x0334C9C0 SUB W9, W28, W25
	0x0334C9C4 ADD W10, W23, 0x1
	0x0334C9C8 SMADDL X11, X9, X10, X31
	0x0334C9CC CMP X11, W11, SXTW
	0x0334C9D0 B.NE 0x334CB40
	0x0334C9D4 MUL W9, W9, W10
	0x0334C9D8 ADDS W31, W26, W9
	0x0334C9DC B.VS 0x334CB40
	0x0334C9E0 CMP W8, 0x1
	0x0334C9E4 ADD W24, W9, W26
	0x0334C9E8 B.LT 0x334CB04
	0x0334C9EC MOV W25, W31
	0x0334C9F0 STR X28, [X31 + 0x10]
	0x0334C9F4 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1091000
	005 Move X20, 0xDAA000
	006 Move W8, [X19+3471]
	007 Move X20, [X20+3144]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDAA000
	013 Move X0, [X0+3144]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3471], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Call CultureInfo.ConstructCurrentUICulture
	026 Return X0

Method: System.Globalization.CultureInfo get_UserDefaultCulture()

Disassembly:
	0x0334C9F8 MOV W1, W25
	0x0334C9FC MOV X2, X31
	0x0334CA00 BL 0x3222A1C
	0x0334CA04 AND W8, W0, 0xFFFF
	0x0334CA08 CMP W8, 0x80
	0x0334CA0C B.CC 0x334CA18
	0x0334CA10 CMP W28, W8
	0x0334CA14 B.LE 0x334CA28
	0x0334CA18 MOVN W9, 0x80000000
	0x0334CA1C CMP W24, W9
	0x0334CA20 B.EQ 0x334CB40
	0x0334CA24 ADD W24, W24, 0x1
	0x0334CA28 CMP W28, W8
	0x0334CA2C B.NE 0x334CAF4
	0x0334CA30 LDR W8, [X20 + 0x14]
	0x0334CA34 MOV W9, W24
	0x0334CA38 STR W23, [X31 + 0x1C]
	0x0334CA3C MOV W26, W8
	0x0334CA40 LDR W23, [X20 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1091000
	005 Move X20, 0xDAA000
	006 Move W8, [X19+3472]
	007 Move X20, [X20+3144]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDAA000
	013 Move X0, [X0+3144]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3472], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Call CultureInfo.ConstructCurrentCulture
	026 Return X0

Method: System.Void InitializeUserPreferredCultureInfoInAppX(System.Globalization.CultureInfo/OnCultureInfoChangedDelegate onCultureInfoChangedInAppX)

Disassembly:
	0x0334CA44 ADD W10, W23, W22
	0x0334CA48 CMP W26, W10
	0x0334CA4C B.LE 0x334CA64
	0x0334CA50 LDR W10, [X20 + 0x1C]

ISIL:
	001 Move [X31-16], X30
	002 Call 0x1C18294
	003 Move X30, [X31+16]
	004 Call 0x1C17D14
	005 Return 

Method: System.Void OnCultureInfoChangedInAppX(System.String language)

Disassembly:
	0x033482A4 RET
	0x033482A8 RET
	0x033482AC STP X30, X21, [X31 - 0x20]!
	0x033482B0 STP X20, X19, [X31 + 0x10]
	0x033482B4 ADRP X20, 0x1094000
	0x033482B8 LDRB W8, [X20 + 0xD7E]
	0x033482BC MOV X19, X0
	0x033482C0 TBNZ X8, 0x0, 0x33482D8
	0x033482C4 ADRP X0, 0xDE0000
	0x033482C8 LDR X0, [X0 + 0x3C8]
	0x033482CC BL 0x1C16CF4
	0x033482D0 MOVZ W8, 0x1
	0x033482D4 STRB W8, [X20 + 0xD7E]
	0x033482D8 LDR X20, [X19 + 0x30]
	0x033482DC BL 0x1C16D44
	0x033482E0 CBZ X20, 0x33482EC
	0x033482E4 LDR X20, [X19 + 0x30]
	0x033482E8 B 0x3348320
	0x033482EC ADRP X8, 0xDE0000
	0x033482F0 LDR X21, [X19 + 0xC0]
	0x033482F4 LDR X8, [X8 + 0x3C8]
	0x033482F8 LDR X0, [X8]
	0x033482FC BL 0x1C16F10
	0x03348300 MOV X1, X21
	0x03348304 MOV X20, X0
	0x03348308 BL 0x333A4AC
	0x0334830C CBZ X20, 0x3348334
	0x03348310 LDRB W8, [X19 + 0x10]
	0x03348314 STRB W8, [X20 + 0xD0]
	0x03348318 BL 0x1C16D44
	0x0334831C STR X20, [X19 + 0x30]
	0x03348320 BL 0x1C16D44
	0x03348324 MOV X0, X20
	0x03348328 LDP X20, X19, [X31 + 0x10]
	0x0334832C LDP X30, X21, [X31], #0x20
	0x03348330 RET
	0x03348334 BL 0x1C16F20
	0x03348338 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1095000
	006 Move X21, 0xDAE000
	007 Move W8, [X20+3473]
	008 Move X21, [X21+3144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDAE000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3473], W8
	019 Move X0, [X21]
	020 Compare X19, 0
	021 JumpIfEqual {36}
	022 Call 0x1C17F10
	023 Move W2, 1
	024 Move X1, X19
	025 Move W3, W31
	026 Move X20, X0
	027 Call CultureInfo..ctor, X0, X1, X2, X3
	028 Move X0, [X21]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X21]
	034 Move X8, [X0+184]
	035 Move [X8+56], X20
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X21]
	041 Move X8, [X0+184]
	042 Move [X8+56], X31
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return 

Method: System.Globalization.CultureInfo GetCultureInfoForUserPreferredLanguageInAppX()

Disassembly:
	0x0334CA54 SUB W12, W26, W22
	0x0334CA58 ADD W11, W10, W22
	0x0334CA5C CMP W26, W11
	0x0334CA60 CSEL W23, W12, W10, LT
	0x0334CA64 SUBS W28, W9, W23
	0x0334CA68 B.LT 0x334CAA8
	0x0334CA6C SUB W8, W8, W23
	0x0334CA70 SDIV W9, W28, W8
	0x0334CA74 MSUB W8, W9, W8, W28
	0x0334CA78 ADD W8, W8, W23
	0x0334CA7C CMP W8, 0x1A
	0x0334CA80 CSEL W9, W27, W29, LT
	0x0334CA84 ADD W1, W9, W8
	0x0334CA88 MOV X0, X21
	0x0334CA8C MOV X2, X31
	0x0334CA90 BL 0x3233D30
	0x0334CA94 LDR W8, [X20 + 0x14]
	0x0334CA98 SUB W9, W8, W23
	0x0334CA9C SDIV W9, W28, W9
	0x0334CAA0 ADD W26, W8, W26
	0x0334CAA4 B 0x334CA40
	0x0334CAA8 CMP W9, 0x1A
	0x0334CAAC CSEL W8, W27, W29, LT
	0x0334CAB0 ADD W1, W8, W9
	0x0334CAB4 MOV X0, X21
	0x0334CAB8 MOV X2, X31
	0x0334CABC BL 0x3233D30
	0x0334CAC0 LDR W9, [X31 + 0x1C]
	0x0334CAC4 LDR W8, [X31 + 0xC]
	0x0334CAC8 MOV X0, X20
	0x0334CACC MOV W1, W24
	0x0334CAD0 ADD W26, W9, 0x1
	0x0334CAD4 CMP W9, W8
	0x0334CAD8 CSET W3, EQ
	0x0334CADC MOV W2, W26
	0x0334CAE0 BL 0x334D2D8
	0x0334CAE4 LDR X28, [X31 + 0x10]
	0x0334CAE8 MOV W22, W0
	0x0334CAEC MOV W24, W31
	0x0334CAF0 MOV W23, W26
	0x0334CAF4 LDR W8, [X19 + 0x10]
	0x0334CAF8 ADD W25, W25, 0x1
	0x0334CAFC CMP W25, W8
	0x0334CB00 B.LT 0x334C9F4
	0x0334CB04 ADD W26, W24, 0x1
	0x0334CB08 CMP W23, W8
	0x0334CB0C ADD W25, W28, 0x1
	0x0334CB10 B.LT 0x334C930
	0x0334CB14 LDR X8, [X21]
	0x0334CB18 MOV X0, X21
	0x0334CB1C LDP X20, X19, [X31 + 0x70]
	0x0334CB20 LDP X22, X21, [X31 + 0x60]
	0x0334CB24 LDP X2, X1, [X8 + 0x168]
	0x0334CB28 LDP X24, X23, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1091000
	005 Move X20, 0xDAA000
	006 Move W8, [X19+3474]
	007 Move X20, [X20+3144]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0xDDE000
	013 Move X0, [X0+3992]
	014 Call 0x1C17CF4
	015 Move X0, 0xDAA000
	016 Move X0, [X0+3144]
	017 Call 0x1C17CF4
	018 Move X0, 0xDDE000
	019 Move X0, [X0+4000]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3474], W8
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X20]
	029 Move X8, [X0+184]
	030 Move X8, [X8+56]
	031 Compare X8, 0
	032 JumpIfNotEqual {53}
	033 Move X8, 0xDDE000
	034 Move X8, [X8+4000]
	035 Move X0, [X8]
	036 Call 0x1C17F10
	037 Move X8, 0xDDE000
	038 Move X8, [X8+3992]
	039 Move X1, X31
	040 Move X3, X31
	041 Move X19, X0
	042 Move X2, [X8]
	043 Call OnCultureInfoChangedDelegate..ctor, X0, X1, X2
	044 Move X0, [X20]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X19
	050 Call 0x1C18294
	051 Call 0x1C17D14
	052 Move X0, [X20]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X20]
	058 Move X8, [X0+184]
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X0, [X8+56]
	062 Move X30, [X31+32]
	063 Return X0

Method: System.Void .cctor()

Disassembly:
	0x0334CB2C LDP X26, X25, [X31 + 0x40]
	0x0334CB30 LDP X28, X27, [X31 + 0x30]
	0x0334CB34 LDP X29, X30, [X31 + 0x20]
	0x0334CB38 ADD X31, X31, 0x80
	0x0334CB3C BR X2
	0x0334CB40 BL 0x1C16F30
	0x0334CB44 ADRP X8, 0xDDE000
	0x0334CB48 LDR X8, [X8 + 0x40]
	0x0334CB4C LDR X1, [X8]
	0x0334CB50 BL 0x1C16DEC
	0x0334CB54 BL 0x1C16F20
	0x0334CB58 STR X30, [X31 - 0x20]!
	0x0334CB5C STP X20, X19, [X31 + 0x10]
	0x0334CB60 CBZ X1, 0x334CB80
	0x0334CB64 LDR W8, [X1 + 0x10]
	0x0334CB68 CBZ W8, 0x334CB84
	0x0334CB6C CMP W8, 0x40
	0x0334CB70 B.GE 0x334CBAC
	0x0334CB74 LDP X20, X19, [X31 + 0x10]
	0x0334CB78 LDR X30, [X31], #0x20
	0x0334CB7C RET
	0x0334CB80 BL 0x1C16F20
	0x0334CB84 STR W2, [X31 + 0xC]
	0x0334CB88 ADRP X0, 0xDA7000
	0x0334CB8C LDR X0, [X0 + 0x758]
	0x0334CB90 BL 0x1C16D08
	0x0334CB94 ADD X1, X31, 0xC
	0x0334CB98 BL 0x1C16E04
	0x0334CB9C MOV X19, X0
	0x0334CBA0 ADRP X0, 0xDDE000
	0x0334CBA4 LDR X0, [X0 + 0x48]
	0x0334CBA8 B 0x334CBD0
	0x0334CBAC STR W2, [X31 + 0x8]
	0x0334CBB0 ADRP X0, 0xDA7000
	0x0334CBB4 LDR X0, [X0 + 0x758]
	0x0334CBB8 BL 0x1C16D08
	0x0334CBBC ADD X1, X31, 0x8
	0x0334CBC0 BL 0x1C16E04
	0x0334CBC4 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1091000
	006 Move X20, 0xDAA000
	007 Move X21, 0xDAE000
	008 Move W8, [X19+3475]
	009 Move X20, [X20+3144]
	010 Move X21, [X21+3264]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xDAA000
	016 Move X0, [X0+3144]
	017 Call 0x1C17CF4
	018 Move X0, 0xDAE000
	019 Move X0, [X0+3264]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3475], W8
	023 Move X0, [X20]
	024 Call 0x1C17F10
	025 Move W1, 127
	026 Move W3, 1
	027 Move W2, W31
	028 Move X19, X0
	029 Call CultureInfo..ctor, X0, X1, X2, X3
	030 Call 0x1C17D44
	031 Move X8, [X20]
	032 Move X8, [X8+184]
	033 Move [X8], X19
	034 Move X0, [X21]
	035 Call 0x1C17F10
	036 Move X1, X31
	037 Move X19, X0
	038 Call Object..ctor, X0
	039 Move X8, [X20]
	040 Move X8, [X8+184]
	041 Move [X8+8], X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return 

