Type: System.Globalization.RegionInfo

Method: System.Globalization.RegionInfo get_CurrentRegion()

Disassembly:
	0x0334E390 BL 0x301BF90
	0x0334E394 LDR X0, [X26]
	0x0334E398 BL 0x1C16F10
	0x0334E39C AND W2, W20, 0x1
	0x0334E3A0 MOV W1, W23
	0x0334E3A4 MOV X22, X0
	0x0334E3A8 BL 0x334DE74
	0x0334E3AC ADD W23, W23, 0x1
	0x0334E3B0 CBNZ X22, 0x334E31C
	0x0334E3B4 STRB W25, [X19 + 0x20]
	0x0334E3B8 B 0x334E3C4
	0x0334E3BC STRB W25, [X19 + 0x20]
	0x0334E3C0 CBZ X21, 0x334E3F4
	0x0334E3C4 ADRP X8, 0xDDC000
	0x0334E3C8 LDR X8, [X8 + 0x170]
	0x0334E3CC MOV X0, X21
	0x0334E3D0 LDR X1, [X8]
	0x0334E3D4 BL 0x301DDC4
	0x0334E3D8 STR X0, [X19 + 0x10]
	0x0334E3DC LDP X20, X19, [X31 + 0x40]
	0x0334E3E0 LDP X22, X21, [X31 + 0x30]
	0x0334E3E4 LDP X24, X23, [X31 + 0x20]
	0x0334E3E8 LDP X26, X25, [X31 + 0x10]
	0x0334E3EC LDR X30, [X31], #0x50
	0x0334E3F0 RET
	0x0334E3F4 BL 0x1C16F20
	0x0334E3F8 ADRP X0, 0xDAD000
	0x0334E3FC LDR X0, [X0 + 0x760]
	0x0334E400 BL 0x1C16D08
	0x0334E404 BL 0x1C16F10
	0x0334E408 MOV X19, X0
	0x0334E40C ADRP X0, 0xDD3000
	0x0334E410 LDR X0, [X0 + 0xE48]
	0x0334E414 BL 0x1C16D08
	0x0334E418 MOV X20, X0
	0x0334E41C ADRP X0, 0xDDC000
	0x0334E420 LDR X0, [X0 + 0x190]
	0x0334E424 BL 0x1C16D08
	0x0334E428 MOV X2, X0
	0x0334E42C MOV X0, X19
	0x0334E430 MOV X1, X20
	0x0334E434 MOV X3, X31
	0x0334E438 BL 0x3311888
	0x0334E43C ADRP X0, 0xDDC000
	0x0334E440 LDR X0, [X0 + 0x198]
	0x0334E444 BL 0x1C16D08
	0x0334E448 MOV X1, X0
	0x0334E44C MOV X0, X19
	0x0334E450 BL 0x1C16DEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x108F000
	006 Move X21, 0xDDD000
	007 Move W8, [X19+3485]
	008 Move X21, [X21+152]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xDA8000
	014 Move X0, [X0+3144]
	015 Call 0x1C17CF4
	016 Move X0, 0xDDD000
	017 Move X0, [X0+152]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+3485], W8
	021 Move X8, [X21]
	022 Move X8, [X8+184]
	023 Move X19, [X8]
	024 Compare X19, 0
	025 JumpIfNotEqual {54}
	026 Move X8, 0xDA8000
	027 Move X8, [X8+3144]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X31
	034 Call CultureInfo.get_CurrentCulture
	035 Compare X0, 0
	036 JumpIfEqual {43}
	037 Move X20, X0
	038 Move X0, [X21]
	039 Call 0x1C17F10
	040 Move X1, X20
	041 Move X19, X0
	042 Call RegionInfo..ctor, X0, X1
	043 Move X19, X31
	044 Move X8, [X21]
	045 Move X1, X19
	046 Move X2, X31
	047 Move X0, [X8+184]
	048 Call 0x1C25138
	049 Compare X0, 0
	050 JumpIfEqual {54}
	051 Move X8, [X21]
	052 Move X8, [X8+184]
	053 Move X19, [X8]
	054 Move X0, X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return X0

Method: System.Void .ctor(System.Int32 culture)

Disassembly:
	0x0334E5E8 BLR X9
	0x0334E5EC CMP W0, W19
	0x0334E5F0 B.LE 0x334E614
	0x0334E5F4 LDR X8, [X20 + 0x10]
	0x0334E5F8 CBZ X8, 0x334E624
	0x0334E5FC LDR W9, [X8 + 0x18]
	0x0334E600 CMP W9, W19
	0x0334E604 B.LS 0x334E628
	0x0334E608 ADD X8, X8, W19, 0x3, UXTW
	0x0334E60C LDR X0, [X8 + 0x20]
	0x0334E610 B 0x334E618
	0x0334E614 MOV X0, X31
	0x0334E618 LDP X20, X19, [X31 + 0x10]
	0x0334E61C LDR X30, [X31], #0x20
	0x0334E620 RET
	0x0334E624 BL 0x1C16F20
	0x0334E628 BL 0x1C16F28
	0x0334E62C SUB X31, X31, 0x40
	0x0334E630 STR X30, [X31 + 0x20]
	0x0334E634 STP X20, X19, [X31 + 0x30]
	0x0334E638 ADRP X20, 0x108E000
	0x0334E63C ADRP X19, 0xDD7000
	0x0334E640 LDRB W8, [X20 + 0xDAB]
	0x0334E644 LDR X19, [X19 + 0x808]
	0x0334E648 TBNZ X8, 0x0, 0x334E66C
	0x0334E64C ADRP X0, 0xDD7000
	0x0334E650 LDR X0, [X0 + 0x808]
	0x0334E654 BL 0x1C16CF4
	0x0334E658 ADRP X0, 0xDB0000
	0x0334E65C LDR X0, [X0 + 0x358]
	0x0334E660 BL 0x1C16CF4
	0x0334E664 MOVZ W8, 0x1
	0x0334E668 STRB W8, [X20 + 0xDAB]
	0x0334E66C LDR X8, [X19]
	0x0334E670 STP X31, X31, [X31 + 0x10]
	0x0334E674 LDR X8, [X8 + 0xB8]
	0x0334E678 LDRB W9, [X8]
	0x0334E67C CBNZ W9, 0x334E6E0
	0x0334E680 MOV X0, X31
	0x0334E684 BL 0x32D9018
	0x0334E688 CBZ X0, 0x334E6D0
	0x0334E68C MOV X1, X0
	0x0334E690 ADD X0, X31, 0x0
	0x0334E694 MOV X2, X31
	0x0334E698 STP X31, X31, [X31]
	0x0334E69C BL 0x3376898
	0x0334E6A0 ADRP X8, 0xDB0000
	0x0334E6A4 LDR V0, [X31]
	0x0334E6A8 LDR X8, [X8 + 0x358]
	0x0334E6AC ADD X0, X31, 0x10
	0x0334E6B0 MOV X2, X31
	0x0334E6B4 STR V0, [X31 + 0x1]
	0x0334E6B8 LDR X1, [X8]
	0x0334E6BC BL 0x3378CA4
	0x0334E6C0 LDR X8, [X19]
	0x0334E6C4 LDR X8, [X8 + 0xB8]
	0x0334E6C8 STR X0, [X8 + 0x8]
	0x0334E6CC B 0x334E6D8
	0x0334E6D0 LDR X8, [X19]
	0x0334E6D4 LDR X8, [X8 + 0xB8]
	0x0334E6D8 MOVZ W9, 0x1
	0x0334E6DC STRB W9, [X8]
	0x0334E6E0 LDR X0, [X8 + 0x8]
	0x0334E6E4 LDP X20, X19, [X31 + 0x30]
	0x0334E6E8 LDR X30, [X31 + 0x20]
	0x0334E6EC ADD X31, X31, 0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x108F000
	007 Move X21, 0xDA8000
	008 Move W8, [X22+3486]
	009 Move X21, [X21+3144]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDA8000
	017 Move X0, [X0+3144]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3486], W8
	021 Move X0, X20
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move W0, W19
	030 Move X1, X31
	031 Call CultureInfo.GetCultureInfo, X0
	032 Move X1, X0
	033 Move X0, X20
	034 Call RegionInfo.GetByTerritory, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {45}
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move [X31+12], W19
	046 Move X0, 0xDA6000
	047 Move X0, [X0+1880]
	048 Call 0x1C17D08
	049 Add X1, X31, 12
	050 Call 0x1C17E04
	051 Move X19, X0
	052 Move X0, 0xDDD000
	053 Move X0, [X0+224]
	054 Call 0x1C17D08
	055 Move X1, X19
	056 Move X2, X31
	057 Call String.Format, X0, X1
	058 Move X19, X0
	059 Move X0, 0xDAE000
	060 Move X0, [X0+1400]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X20, X0
	064 Move X0, 0xDD4000
	065 Move X0, [X0+4080]
	066 Call 0x1C17D08
	067 Move X2, X0
	068 Move X0, X20
	069 Move X1, X19
	070 Move X3, X31
	071 Call ArgumentException..ctor, X0, X1, X2
	072 Move X0, 0xDDD000
	073 Move X0, [X0+232]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X20
	077 Call 0x1C17DEC

Method: System.Void .ctor(System.String name)

Disassembly:
	0x0334E798 ADRP X0, 0xDDC000
	0x0334E79C LDR X0, [X0 + 0x1E0]
	0x0334E7A0 BL 0x1C16CF4
	0x0334E7A4 ADRP X0, 0xDDC000
	0x0334E7A8 LDR X0, [X0 + 0x1E8]
	0x0334E7AC BL 0x1C16CF4
	0x0334E7B0 ADRP X0, 0xDB0000
	0x0334E7B4 LDR X0, [X0 + 0x358]
	0x0334E7B8 BL 0x1C16CF4
	0x0334E7BC MOVZ W8, 0x1
	0x0334E7C0 STRB W8, [X23 + 0xDAC]
	0x0334E7C4 STRB W31, [X31 + 0x2C]
	0x0334E7C8 STP X31, X31, [X31 + 0x18]
	0x0334E7CC STRB W31, [X19]
	0x0334E7D0 LDR X8, [X22]
	0x0334E7D4 MOV X0, X22
	0x0334E7D8 LDP X9, X1, [X8 + 0x178]
	0x0334E7DC BLR X9
	0x0334E7E0 CMP W0, 0x1
	0x0334E7E4 B.LT 0x334EB78
	0x0334E7E8 ADRP X27, 0xDDC000
	0x0334E7EC ADRP X28, 0xDA7000
	0x0334E7F0 ADRP X29, 0xDA5000
	0x0334E7F4 ADRP X26, 0xDDC000
	0x0334E7F8 LDR X27, [X27 + 0x1E0]
	0x0334E7FC LDR X28, [X28 + 0xA60]
	0x0334E800 LDR X29, [X29 + 0x758]
	0x0334E804 LDR X26, [X26 + 0x1C0]
	0x0334E808 MOV W25, W31
	0x0334E80C MOV W23, W31
	0x0334E810 STR W20, [X31 + 0x8]
	0x0334E814 LDR X8, [X22]
	0x0334E818 MOV X0, X22
	0x0334E81C MOV W1, W23
	0x0334E820 LDP X9, X2, [X8 + 0x188]
	0x0334E824 BLR X9
	0x0334E828 CBZ X0, 0x334EBA0
	0x0334E82C LDR X8, [X0]
	0x0334E830 MOV X24, X0
	0x0334E834 LDP X9, X1, [X8 + 0x1A8]
	0x0334E838 BLR X9
	0x0334E83C MOV X1, X31
	0x0334E840 MOV X2, X31
	0x0334E844 BL 0x32CE12C
	0x0334E848 TBZ X0, 0x0, 0x334E874
	0x0334E84C ORR W8, W25, W20, 0x0
	0x0334E850 TBZ X8, 0x0, 0x334E8F4
	0x0334E854 MOV X0, X31
	0x0334E858 BL 0x33C1548
	0x0334E85C CBZ X21, 0x334EBA0
	0x0334E860 MOV X1, X0
	0x0334E864 MOV X0, X21
	0x0334E868 MOV X2, X31
	0x0334E86C BL 0x32333E0
	0x0334E870 B 0x334E8F8
	0x0334E874 LDR X8, [X24]
	0x0334E878 MOV X0, X24
	0x0334E87C LDP X9, X1, [X8 + 0x1A8]
	0x0334E880 BLR X9
	0x0334E884 ORR W8, W25, W20, 0x0
	0x0334E888 AND W3, W8, 0x1
	0x0334E88C ADD X4, X31, 0x2C
	0x0334E890 MOV X1, X21
	0x0334E894 MOV X2, X0
	0x0334E898 MOV X5, X19
	0x0334E89C BL 0x334EBA4
	0x0334E8A0 LDRB W8, [X31 + 0x2C]
	0x0334E8A4 CBNZ W8, 0x334EB58
	0x0334E8A8 LDR X8, [X24]
	0x0334E8AC MOV X0, X24
	0x0334E8B0 LDP X9, X1, [X8 + 0x198]
	0x0334E8B4 BLR X9
	0x0334E8B8 ADDS W31, W0, 0x1
	0x0334E8BC B.EQ 0x334E964
	0x0334E8C0 LDR X8, [X24]
	0x0334E8C4 MOV X0, X24
	0x0334E8C8 LDP X9, X1, [X8 + 0x198]
	0x0334E8CC BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x108F000
	006 Move W8, [X21+3487]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDA8000
	014 Move X0, [X0+3144]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3487], W8
	018 Move X0, X20
	019 Move X1, X31
	020 Call Object..ctor, X0
	021 Compare X19, 0
	022 JumpIfEqual {55}
	023 Move X0, X19
	024 Move X1, X31
	025 Call String.ToUpperInvariant, X0
	026 Move X1, X0
	027 Move X0, X20
	028 Call 0x1C44060
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {50}
	033 Move X8, 0xDA8000
	034 Move X8, [X8+3144]
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call CultureInfo.GetCultureInfo, X0
	043 Move X1, X0
	044 Move X0, X20
	045 Call RegionInfo.GetByTerritory, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {68}
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 
	055 Move X0, 0xDAB000
	056 Move X0, [X0+1320]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X1, X31
	060 Move X19, X0
	061 Call ArgumentNullException..ctor, X0
	062 Move X0, 0xDDD000
	063 Move X0, [X0+256]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X19
	067 Call 0x1C17DEC
	068 Move X0, 0xDDD000
	069 Move X0, [X0+264]
	070 Call 0x1C17D08
	071 Move X1, X19
	072 Move X2, X31
	073 Call String.Format, X0, X1
	074 Move X19, X0
	075 Move X0, 0xDAE000
	076 Move X0, [X0+1400]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X20, X0
	080 Move X0, 0xDAE000
	081 Move X0, [X0+1416]
	082 Call 0x1C17D08
	083 Move X2, X0
	084 Move X0, X20
	085 Move X1, X19
	086 Move X3, X31
	087 Call ArgumentException..ctor, X0, X1, X2
	088 Move X0, 0xDDD000
	089 Move X0, [X0+256]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X20
	093 Call 0x1C17DEC

Method: System.Void .ctor(System.Globalization.CultureInfo ci)

Disassembly:
	0x0334E454 STR X30, [X31 - 0x20]!
	0x0334E458 STP X20, X19, [X31 + 0x10]
	0x0334E45C MOV W19, W1
	0x0334E460 MOV X1, X31
	0x0334E464 MOV X20, X0
	0x0334E468 BL 0x33BDD8C
	0x0334E46C AND W2, W19, 0x1
	0x0334E470 MOV X0, X20
	0x0334E474 LDP X20, X19, [X31 + 0x10]
	0x0334E478 MOV W1, W31
	0x0334E47C LDR X30, [X31], #0x20
	0x0334E480 B 0x334E24C
	0x0334E484 STP X30, X21, [X31 - 0x20]!
	0x0334E488 STP X20, X19, [X31 + 0x10]
	0x0334E48C MOV W20, W1
	0x0334E490 MOV X1, X31
	0x0334E494 MOV W19, W2
	0x0334E498 MOV X21, X0
	0x0334E49C BL 0x33BDD8C
	0x0334E4A0 AND W2, W19, 0x1
	0x0334E4A4 MOV W1, W20
	0x0334E4A8 LDP X20, X19, [X31 + 0x10]
	0x0334E4AC MOV X0, X21
	0x0334E4B0 LDP X30, X21, [X31], #0x20
	0x0334E4B4 B 0x334E24C
	0x0334E4B8 AND W2, W2, 0x1
	0x0334E4BC B 0x1C712A4
	0x0334E4C0 AND W3, W2, 0x1
	0x0334E4C4 MOV W2, W31
	0x0334E4C8 B 0x334E4CC
	0x0334E4CC STR X30, [X31 - 0x30]!
	0x0334E4D0 STP X22, X21, [X31 + 0x10]
	0x0334E4D4 STP X20, X19, [X31 + 0x20]
	0x0334E4D8 MOV X20, X1
	0x0334E4DC MOV X1, X31
	0x0334E4E0 MOV W22, W3
	0x0334E4E4 MOV W21, W2
	0x0334E4E8 MOV X19, X0
	0x0334E4EC BL 0x33BDD8C
	0x0334E4F0 CBZ X20, 0x334E524
	0x0334E4F4 TBNZ X21, 0x1F, 0x334E558
	0x0334E4F8 AND W2, W22, 0x1
	0x0334E4FC MOV X0, X20
	0x0334E500 MOV W1, W21
	0x0334E504 BL 0x1C712A4
	0x0334E508 STR X0, [X19 + 0x10]
	0x0334E50C LDR X8, [X20 + 0x78]
	0x0334E510 LDP X22, X21, [X31 + 0x10]
	0x0334E514 STR X8, [X19 + 0x18]
	0x0334E518 LDP X20, X19, [X31 + 0x20]
	0x0334E51C LDR X30, [X31], #0x30
	0x0334E520 RET
	0x0334E524 ADRP X0, 0xDAA000
	0x0334E528 LDR X0, [X0 + 0x528]
	0x0334E52C BL 0x1C16D08
	0x0334E530 BL 0x1C16F10
	0x0334E534 MOV X19, X0
	0x0334E538 ADRP X0, 0xDDC000
	0x0334E53C LDR X0, [X0 + 0x1A0]
	0x0334E540 BL 0x1C16D08
	0x0334E544 MOV X1, X0
	0x0334E548 MOV X0, X19
	0x0334E54C MOV X2, X31
	0x0334E550 BL 0x330E100
	0x0334E554 B 0x334E59C
	0x0334E558 ADRP X0, 0xDAD000
	0x0334E55C LDR X0, [X0 + 0x760]
	0x0334E560 BL 0x1C16D08
	0x0334E564 BL 0x1C16F10
	0x0334E568 MOV X19, X0
	0x0334E56C ADRP X0, 0xDD3000
	0x0334E570 LDR X0, [X0 + 0xE48]
	0x0334E574 BL 0x1C16D08
	0x0334E578 MOV X20, X0
	0x0334E57C ADRP X0, 0xDDC000
	0x0334E580 LDR X0, [X0 + 0x190]
	0x0334E584 BL 0x1C16D08
	0x0334E588 MOV X2, X0
	0x0334E58C MOV X0, X19
	0x0334E590 MOV X1, X20
	0x0334E594 MOV X3, X31
	0x0334E598 BL 0x3311888
	0x0334E59C ADRP X0, 0xDDC000
	0x0334E5A0 LDR X0, [X0 + 0x1A8]
	0x0334E5A4 BL 0x1C16D08
	0x0334E5A8 MOV X1, X0
	0x0334E5AC MOV X0, X19
	0x0334E5B0 BL 0x1C16DEC
	0x0334E5B4 LDR X8, [X0 + 0x10]
	0x0334E5B8 CBZ X8, 0x334E5C4
	0x0334E5BC LDR W0, [X8 + 0x18]
	0x0334E5C0 RET
	0x0334E5C4 MOV W0, W31
	0x0334E5C8 RET
	0x0334E5CC STR X30, [X31 - 0x20]!
	0x0334E5D0 STP X20, X19, [X31 + 0x10]
	0x0334E5D4 TBNZ X1, 0x1F, 0x334E614
	0x0334E5D8 LDR X8, [X0]
	0x0334E5DC MOV W19, W1
	0x0334E5E0 MOV X20, X0
	0x0334E5E4 LDP X9, X1, [X8 + 0x178]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x108F000
	006 Move W8, [X21+3488]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {36}
	013 Move X0, 0xDDB000
	014 Move X0, [X0+2656]
	015 Call 0x1C17CF4
	016 Move X0, 0xDDD000
	017 Move X0, [X0+160]
	018 Call 0x1C17CF4
	019 Move X0, 0xDDD000
	020 Move X0, [X0+168]
	021 Call 0x1C17CF4
	022 Move X0, 0xDDD000
	023 Move X0, [X0+176]
	024 Call 0x1C17CF4
	025 Move X0, 0xDDD000
	026 Move X0, [X0+184]
	027 Call 0x1C17CF4
	028 Move X0, 0xDDD000
	029 Move X0, [X0+192]
	030 Call 0x1C17CF4
	031 Move X0, 0xDDD000
	032 Move X0, [X0+200]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+3488], W8
	036 Move X0, X19
	037 Move X1, X31
	038 Call Object..ctor, X0
	039 Compare X20, 0
	040 JumpIfEqual {97}
	041 Move X8, [X20]
	042 Move X0, X20
	043 Move X9, [X8+408]
	044 Move X1, [X8+416]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W8, 244
	048 Move [X19+16], W8
	049 Move X8, 0xDDD000
	050 Move X8, [X8+176]
	051 Move X8, [X8]
	052 Move [X19+24], X8
	053 Move X8, 0xDDD000
	054 Move X8, [X8+160]
	055 Move X8, [X8]
	056 Move [X19+32], X8
	057 Move X8, 0xDDD000
	058 Move X8, [X8+200]
	059 Move X8, [X8]
	060 Move [X19+40], X8
	061 Move X8, 0xDDD000
	062 Move X8, [X8+168]
	063 Move X8, [X8]
	064 Move [X19+48], X8
	065 Move [X19+56], X8
	066 Move X8, 0xDDB000
	067 Move X8, [X8+2656]
	068 Move X8, [X8]
	069 Move [X19+64], X8
	070 Move X8, 0xDDD000
	071 Move X8, [X8+184]
	072 Move X8, [X8]
	073 Move [X19+72], X8
	074 Move X8, 0xDDD000
	075 Move X8, [X8+192]
	076 Move X8, [X8]
	077 Move [X19+80], X8
	078 Move [X19+88], X8
	079 Move X20, [X31+16]
	080 Move X19, [X31+24]
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 Return 
	084 Move X0, [X20+120]
	085 Compare X0, 0
	086 JumpIfEqual {98}
	087 Move X1, X31
	088 Call String.ToUpperInvariant, X0
	089 Move X1, X0
	090 Move X0, X19
	091 Move X20, [X31+16]
	092 Move X19, [X31+24]
	093 Move X30, [X31+32]
	094 Move X21, [X31+40]
	095 Call 0x1C44060
	096 Return 
	097 Call 0x1C17F20
	098 Move X0, 0xDAF000
	099 Move X0, [X0+1880]
	100 Call 0x1C17D08
	101 Call 0x1C17F10
	102 Move X19, X0
	103 Move X0, 0xDDD000
	104 Move X0, [X0+208]
	105 Call 0x1C17D08
	106 Move X1, X0
	107 Move X0, X19
	108 Move X2, X31
	109 Call NotImplementedException..ctor, X0, X1
	110 Move X0, 0xDDD000
	111 Move X0, [X0+216]
	112 Call 0x1C17D08
	113 Move X1, X0
	114 Move X0, X19
	115 Call 0x1C17DEC

Method: System.Boolean GetByTerritory(System.Globalization.CultureInfo ci)

Disassembly:
	0x0334E6F0 RET
	0x0334E6F4 SUB X31, X31, 0x90
	0x0334E6F8 STP X29, X30, [X31 + 0x30]
	0x0334E6FC STP X28, X27, [X31 + 0x40]
	0x0334E700 STP X26, X25, [X31 + 0x50]
	0x0334E704 STP X24, X23, [X31 + 0x60]
	0x0334E708 STP X22, X21, [X31 + 0x70]
	0x0334E70C STP X20, X19, [X31 + 0x80]
	0x0334E710 ADRP X23, 0x108E000
	0x0334E714 LDRB W8, [X23 + 0xDAC]
	0x0334E718 MOV X19, X3
	0x0334E71C MOV W20, W2
	0x0334E720 MOV X21, X1
	0x0334E724 MOV X22, X0
	0x0334E728 TBNZ X8, 0x0, 0x334E7C4
	0x0334E72C ADRP X0, 0xDA5000
	0x0334E730 LDR X0, [X0 + 0x758]
	0x0334E734 BL 0x1C16CF4
	0x0334E738 ADRP X0, 0xDA7000
	0x0334E73C LDR X0, [X0 + 0xA60]
	0x0334E740 BL 0x1C16CF4
	0x0334E744 ADRP X0, 0xDAD000
	0x0334E748 LDR X0, [X0 + 0x720]
	0x0334E74C BL 0x1C16CF4
	0x0334E750 ADRP X0, 0xDDC000
	0x0334E754 LDR X0, [X0 + 0x1B0]
	0x0334E758 BL 0x1C16CF4
	0x0334E75C ADRP X0, 0xDDC000
	0x0334E760 LDR X0, [X0 + 0x1B8]
	0x0334E764 BL 0x1C16CF4
	0x0334E768 ADRP X0, 0xDDC000
	0x0334E76C LDR X0, [X0 + 0x1C0]
	0x0334E770 BL 0x1C16CF4
	0x0334E774 ADRP X0, 0xDDC000
	0x0334E778 LDR X0, [X0 + 0x1C8]
	0x0334E77C BL 0x1C16CF4
	0x0334E780 ADRP X0, 0xDDC000
	0x0334E784 LDR X0, [X0 + 0x1D0]
	0x0334E788 BL 0x1C16CF4
	0x0334E78C ADRP X0, 0xDDC000
	0x0334E790 LDR X0, [X0 + 0x1D8]
	0x0334E794 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {34}
	006 Move X8, [X1]
	007 Move X20, X1
	008 Move X19, X0
	009 Move X0, X20
	010 Move X9, [X8+520]
	011 Move X1, [X8+528]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {29}
	017 Move X0, [X20+120]
	018 Compare X0, 0
	019 JumpIfEqual {29}
	020 Move X1, X31
	021 Call String.ToUpperInvariant, X0
	022 Move X1, X0
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Call 0x1C44060
	028 Return X0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move W0, W31
	032 Move X30, [X31+32]
	033 Return X0
	034 Move X0, 0xDA6000
	035 Move X0, [X0+2000]
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X19, X0
	039 Move X0, 0xDDD000
	040 Move X0, [X0+240]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X19
	044 Move X2, X31
	045 Call Exception..ctor, X0, X1
	046 Move X0, 0xDDD000
	047 Move X0, [X0+248]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X19
	051 Call 0x1C17DEC

Method: System.Boolean construct_internal_region_from_name(System.String name)

Disassembly:
	0x0334E8D0 LDR X8, [X29]

ISIL:
	001 Call 0x1C44060
	002 Return X0

Method: System.String get_CurrencyEnglishName()

Disassembly:
	0x0334E8D4 STR W0, [X31 + 0x10]
	0x0334E8D8 ADD X1, X31, 0x10

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.String get_CurrencySymbol()

Disassembly:
	0x0334E8DC MOV X0, X8
	0x0334E8E0 BL 0x1C16E04

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.String get_DisplayName()

Disassembly:
	0x0334E8E4 CBZ X21, 0x334EBA0
	0x0334E8E8 ADRP X8, 0xDDC000

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.String get_EnglishName()

Disassembly:
	0x0334E8EC LDR X8, [X8 + 0x1C8]
	0x0334E8F0 B 0x334E9F4

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Int32 get_GeoId()

Disassembly:
	0x0334E8F4 CBZ X21, 0x334EBA0
	0x0334E8F8 LDR X1, [X27]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Boolean get_IsMetric()

Disassembly:
	0x0334E8FC MOV X0, X21
	0x0334E900 MOV X2, X31
	0x0334E904 BL 0x32333E0
	0x0334E908 LDR X1, [X24 + 0x40]
	0x0334E90C CBZ X1, 0x334E920
	0x0334E910 MOV X0, X21
	0x0334E914 MOV X2, X31
	0x0334E918 BL 0x32333E0
	0x0334E91C B 0x334EB54
	0x0334E920 LDR X8, [X24 + 0x18]
	0x0334E924 LDR X0, [X28]
	0x0334E928 ADD X1, X31, 0x10
	0x0334E92C STR X8, [X31 + 0x10]
	0x0334E930 BL 0x1C16E04
	0x0334E934 LDR X8, [X24]
	0x0334E938 MOV X25, X0
	0x0334E93C MOV X0, X24
	0x0334E940 LDP X9, X1, [X8 + 0x1B8]
	0x0334E944 BLR X9
	0x0334E948 LDR X8, [X29]
	0x0334E94C STR W0, [X31 + 0xC]
	0x0334E950 ADD X1, X31, 0xC
	0x0334E954 MOV X0, X8
	0x0334E958 BL 0x1C16E04
	0x0334E95C LDR X1, [X26]
	0x0334E960 B 0x334EB40
	0x0334E964 LDR X8, [X24 + 0x18]
	0x0334E968 LDR X0, [X28]
	0x0334E96C ADD X1, X31, 0x10
	0x0334E970 STR X8, [X31 + 0x10]
	0x0334E974 BL 0x1C16E04
	0x0334E978 LDR X8, [X24]
	0x0334E97C MOV X25, X0
	0x0334E980 MOV X0, X24
	0x0334E984 LDP X9, X1, [X8 + 0x1B8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x108F000
	006 Move X20, 0xDDD000
	007 Move W8, [X21+3489]
	008 Move X20, [X20+272]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xDDD000
	015 Move X0, [X0+272]
	016 Call 0x1C17CF4
	017 Move X0, 0xDDD000
	018 Move X0, [X0+280]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3489], W8
	022 Move X19, [X19+24]
	023 Move X1, [X20]
	024 Move X2, X31
	025 Move X0, X19
	026 Call String.op_Equality, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {32}
	031 Move W0, W31
	032 Move X8, 0xDDD000
	033 Move X8, [X8+280]
	034 Move X0, X19
	035 Move X2, X31
	036 Move X1, [X8]
	037 Call String.op_Equality, X0, X1
	038 NotImplemented "Instruction ORN not yet implemented."
	039 And W0, W8, 1
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0

Method: System.String get_ISOCurrencySymbol()

Disassembly:
	0x0334E988 BLR X9
	0x0334E98C LDR X8, [X29]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.String get_NativeName()

Disassembly:
	0x0334E990 STR W0, [X31 + 0xC]
	0x0334E994 ADD X1, X31, 0xC

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.String get_CurrencyNativeName()

Disassembly:
	0x0334E998 MOV X0, X8
	0x0334E99C BL 0x1C16E04

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.String get_Name()

Disassembly:
	0x0334E9A0 CBZ X21, 0x334EBA0
	0x0334E9A4 ADRP X8, 0xDDC000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.String get_ThreeLetterISORegionName()

Disassembly:
	0x0334E9A8 LDR X8, [X8 + 0x1E8]
	0x0334E9AC MOV X3, X0

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.String get_ThreeLetterWindowsRegionName()

Disassembly:
	0x0334E9B0 MOV X0, X21
	0x0334E9B4 MOV X2, X25

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.String get_TwoLetterISORegionName()

Disassembly:
	0x0334E9B8 LDR X1, [X8]
	0x0334E9BC MOV X4, X31

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Boolean Equals(System.Object value)

Disassembly:
	0x0334E9C0 BL 0x3234D98
	0x0334E9C4 LDR W8, [X24 + 0x20]
	0x0334E9C8 MOVN W9, 0xFF000000
	0x0334E9CC CMP W8, W9
	0x0334E9D0 B.EQ 0x334EA08
	0x0334E9D4 ADRP X9, 0xDAD000
	0x0334E9D8 LDR X9, [X9 + 0x720]
	0x0334E9DC ADD X1, X31, 0x10
	0x0334E9E0 STR W8, [X31 + 0x10]
	0x0334E9E4 LDR X0, [X9]
	0x0334E9E8 BL 0x1C16E04
	0x0334E9EC ADRP X8, 0xDDC000
	0x0334E9F0 LDR X8, [X8 + 0x1B8]
	0x0334E9F4 MOV X2, X0
	0x0334E9F8 LDR X1, [X8]
	0x0334E9FC MOV X0, X21
	0x0334EA00 MOV X3, X31
	0x0334EA04 BL 0x3234224
	0x0334EA08 MOV X0, X24
	0x0334EA0C BL 0x334DEE4
	0x0334EA10 CBZ X0, 0x334EBA0
	0x0334EA14 MOV W1, W31
	0x0334EA18 MOV X2, X31
	0x0334EA1C MOV X25, X0
	0x0334EA20 BL 0x3222A1C
	0x0334EA24 AND W8, W0, 0xFFFF
	0x0334EA28 CMP W8, 0x3C
	0x0334EA2C B.NE 0x334EB10
	0x0334EA30 LDR X8, [X24]
	0x0334EA34 MOV X0, X24
	0x0334EA38 MOV X20, X19
	0x0334EA3C MOV X19, X29
	0x0334EA40 LDP X9, X1, [X8 + 0x1A8]
	0x0334EA44 MOV X29, X27
	0x0334EA48 MOV X27, X28
	0x0334EA4C BLR X9
	0x0334EA50 CBZ X0, 0x334EBA0
	0x0334EA54 LDR X8, [X0]
	0x0334EA58 MOV X28, X26
	0x0334EA5C LDP X9, X1, [X8 + 0x1D8]
	0x0334EA60 BLR X9
	0x0334EA64 CBZ X0, 0x334EBA0
	0x0334EA68 LDR X8, [X0]
	0x0334EA6C LDP X9, X1, [X8 + 0x1B8]
	0x0334EA70 BLR X9
	0x0334EA74 ADRP X8, 0xDB0000
	0x0334EA78 LDR X8, [X8 + 0x358]
	0x0334EA7C STP X0, X1, [X31 + 0x18]
	0x0334EA80 ADD X0, X31, 0x18
	0x0334EA84 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x108F000
	006 Move W8, [X21+3490]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDDD000
	014 Move X0, [X0+152]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3490], W8
	018 Compare X20, 0
	019 JumpIfEqual {32}
	020 Move X8, 0xDDD000
	021 Move X8, [X8+152]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W0, W31
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0
	038 Move X8, [X19]
	039 Move X0, X19
	040 Move X9, [X8+520]
	041 Move X1, [X8+528]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Compare X20, 0
	044 JumpIfEqual {60}
	045 Move X8, [X20]
	046 Move X19, X0
	047 Move X0, X20
	048 Move X9, [X8+520]
	049 Move X1, [X8+528]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X1, X0
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X2, X31
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Call String.op_Equality, X0, X1
	059 Return X0
	060 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x0334EA88 LDR X8, [X8]
	0x0334EA8C MOV X1, X8
	0x0334EA90 BL 0x3378CA4
	0x0334EA94 MOV X25, X0
	0x0334EA98 BL 0x334E62C
	0x0334EA9C LDR X8, [X24]
	0x0334EAA0 MOV X26, X0
	0x0334EAA4 MOV X0, X24
	0x0334EAA8 LDP X9, X1, [X8 + 0x198]
	0x0334EAAC BLR X9
	0x0334EAB0 CBZ X26, 0x334EADC

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+520]
	004 Move X1, [X8+528]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Compare X0, 0
	007 JumpIfEqual {13}
	008 Move X8, [X0]
	009 Move X2, [X8+344]
	010 Move X1, [X8+352]
	011 Move X30, [X31+16]
	012 CallNoReturn X2
	013 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x0334EAB4 ADDS W31, W0, 0x1
	0x0334EAB8 B.NE 0x334EADC
	0x0334EABC ADRP X8, 0xDDC000
	0x0334EAC0 LDR X8, [X8 + 0x1D0]

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+520]
	003 Move X1, [X8+528]
	004 CallNoReturn X2

Method: System.Void ClearCachedData()

Disassembly:
	0x0334EAC4 MOV X1, X25
	0x0334EAC8 MOV X2, X26
	0x0334EACC MOV X3, X31
	0x0334EAD0 LDR X0, [X8]
	0x0334EAD4 BL 0x3227BD4
	0x0334EAD8 B 0x334EAF4
	0x0334EADC ADRP X8, 0xDDC000
	0x0334EAE0 LDR X8, [X8 + 0x1B0]
	0x0334EAE4 MOV X1, X25
	0x0334EAE8 MOV X2, X31
	0x0334EAEC LDR X0, [X8]
	0x0334EAF0 BL 0x321EFD0
	0x0334EAF4 MOV X26, X28
	0x0334EAF8 MOV X28, X27
	0x0334EAFC MOV X27, X29
	0x0334EB00 MOV X29, X19
	0x0334EB04 MOV X19, X20
	0x0334EB08 LDR W20, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x108F000
	005 Move X20, 0xDDD000
	006 Move W8, [X19+3491]
	007 Move X20, [X20+152]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDDD000
	013 Move X0, [X0+152]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3491], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move [X8], X31
	022 Move X30, [X31+32]
	023 Return 

