Type: System.Globalization.TimeSpanParse/TimeSpanRawInfo

Method: System.Globalization.TimeSpanFormat/FormatLiterals get_PositiveInvariant()

Disassembly:
	0x033335C8 ADRP X0, 0xDF5000
	0x033335CC LDR X0, [X0 + 0x5C8]
	0x033335D0 BL 0x1C16D08
	0x033335D4 MOV X1, X0
	0x033335D8 MOV X0, X20
	0x033335DC BL 0x1C16DEC
	0x033335E0 STP X30, X21, [X31 - 0x20]!
	0x033335E4 STP X20, X19, [X31 + 0x10]
	0x033335E8 ADRP X20, 0x10A9000
	0x033335EC ADRP X21, 0xDF5000
	0x033335F0 LDRB W8, [X20 + 0xCDB]
	0x033335F4 LDR X21, [X21 + 0x5A0]
	0x033335F8 MOV W19, W1
	0x033335FC TBNZ X8, 0x0, 0x3333614
	0x03333600 ADRP X0, 0xDF5000
	0x03333604 LDR X0, [X0 + 0x5A0]
	0x03333608 BL 0x1C16CF4
	0x0333360C MOVZ W8, 0x1
	0x03333610 STRB W8, [X20 + 0xCDB]
	0x03333614 LDR X0, [X21]
	0x03333618 LDR W8, [X0 + 0xE0]
	0x0333361C CBNZ W8, 0x3333624
	0x03333620 BL 0x1C16DFC
	0x03333624 MOV W0, W19
	0x03333628 LDP X20, X19, [X31 + 0x10]
	0x0333362C LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10AA000
	006 Move X20, 0xDF6000
	007 Move X19, X8
	008 Move W8, [X21+3275]
	009 Move X20, [X20+1328]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDF6000
	015 Move X0, [X0+1328]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3275], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X9, [X8+32]
	027 Move V1, [X8]
	028 Move V0, [X8+16]
	029 Move [X19+32], X9
	030 Move [X19], V1
	031 Move [X19+8], V0
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Globalization.TimeSpanFormat/FormatLiterals get_NegativeInvariant()

Disassembly:
	0x03333630 RET
	0x03333634 MOVN W0, 0x0
	0x03333638 RET
	0x0333363C MOVZ W8, 0x7ED
	0x03333640 MOV X1, X31
	0x03333644 STR W8, [X0 + 0x90]
	0x03333648 B 0x33BDD8C
	0x0333364C STP X29, X30, [X31 - 0x60]!
	0x03333650 STP X28, X27, [X31 + 0x10]
	0x03333654 STP X26, X25, [X31 + 0x20]
	0x03333658 STP X24, X23, [X31 + 0x30]
	0x0333365C STP X22, X21, [X31 + 0x40]
	0x03333660 STP X20, X19, [X31 + 0x50]
	0x03333664 ADRP X19, 0x10A9000
	0x03333668 ADRP X20, 0xDC0000
	0x0333366C LDRB W8, [X19 + 0xCDC]
	0x03333670 LDR X20, [X20 + 0xAC8]
	0x03333674 TBNZ X8, 0x0, 0x33339BC
	0x03333678 ADRP X0, 0xDF5000
	0x0333367C LDR X0, [X0 + 0x5A0]
	0x03333680 BL 0x1C16CF4
	0x03333684 ADRP X0, 0xDC0000
	0x03333688 LDR X0, [X0 + 0xAC8]
	0x0333368C BL 0x1C16CF4
	0x03333690 ADRP X0, 0xDC2000
	0x03333694 LDR X0, [X0 + 0x278]
	0x03333698 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10AA000
	006 Move X20, 0xDF6000
	007 Move X19, X8
	008 Move W8, [X21+3276]
	009 Move X20, [X20+1328]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDF6000
	015 Move X0, [X0+1328]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3276], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X9, [X8+72]
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 Move [X19+32], X9
	030 Move [X19], V1
	031 Move [X19+8], V0
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Globalization.TimeSpanFormat/FormatLiterals get_PositiveLocalized()

Disassembly:
	0x033310B8 ADRP X0, 0xDE9000
	0x033310BC LDR X0, [X0 + 0x2D0]
	0x033310C0 BL 0x1C16CF4
	0x033310C4 ADRP X0, 0xDF1000
	0x033310C8 LDR X0, [X0 + 0x28]
	0x033310CC BL 0x1C16CF4
	0x033310D0 MOVZ W8, 0x1
	0x033310D4 STRB W8, [X25 + 0xD06]
	0x033310D8 CMP W21, W23
	0x033310DC B.NE 0x3331304
	0x033310E0 CBZ W21, 0x3331108
	0x033310E4 ADRP X8, 0xDE9000
	0x033310E8 LDR X8, [X8 + 0x2D0]
	0x033310EC MOV X0, X22
	0x033310F0 MOV X1, X21
	0x033310F4 MOV X2, X24
	0x033310F8 LDR X4, [X8]
	0x033310FC MOV X3, X23
	0x03331100 BL 0x1F96ECC
	0x03331104 TBZ X0, 0x0, 0x3331304
	0x03331108 LDP X22, X21, [X19 + 0x128]
	0x0333110C MOV X0, X20
	0x03331110 BL 0x332CB38
	0x03331114 LDRB W8, [X26 + 0x762]
	0x03331118 MOV X23, X0
	0x0333111C CBNZ W8, 0x3331134
	0x03331120 ADRP X0, 0xDE9000
	0x03331124 LDR X0, [X0 + 0x290]
	0x03331128 BL 0x1C16CF4
	0x0333112C MOVZ W8, 0x1
	0x03331130 STRB W8, [X26 + 0x762]
	0x03331134 CBZ X23, 0x3331150
	0x03331138 MOV X0, X23
	0x0333113C MOV X1, X31
	0x03331140 BL 0x3225708
	0x03331144 LDR W23, [X23 + 0x10]
	0x03331148 MOV X24, X0
	0x0333114C B 0x3331154
	0x03331150 MOV X24, X31
	0x03331154 LDRB W8, [X25 + 0xD06]
	0x03331158 CBNZ W8, 0x333117C
	0x0333115C ADRP X0, 0xDE9000
	0x03331160 LDR X0, [X0 + 0x2D0]
	0x03331164 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W9, [X0+96]
	008 Move X20, X0
	009 Move X19, X8
	010 Compare W9, 0
	011 JumpIfNotEqual {43}
	012 NotImplemented "Instruction MOVI not yet implemented."
	013 Move X21, X20
	014 Move [X21+16], V0
	015 Move [X21+32], X31
	016 Move [X21+1], V0
	017 Move X23, 0x10A9000
	018 Move W8, [X23+1890]
	019 Move X22, [X21+88]
	020 Compare W8, 0
	021 JumpIfEqual {29}
	022 Compare X22, 0
	023 JumpIfEqual {36}
	024 Move X0, X22
	025 Move X1, X31
	026 Call String.GetRawStringData, X0
	027 Move W2, [X22+16]
	028 Move X1, X0
	029 Move X0, 0xDEA000
	030 Move X0, [X0+656]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+1890], W8
	034 Compare X22, 0
	035 JumpIfNotEqual {24}
	036 Move X1, X31
	037 Move X2, X31
	038 Move X0, X21
	039 Move W3, W31
	040 Call FormatLiterals.Init, X0, X1, X2
	041 Move W8, 1
	042 Move [X20+96], W8
	043 Move X8, [X20+48]
	044 Move V1, [X20+16]
	045 Move V0, [X20+32]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move [X19+32], X8
	049 Move [X19], V1
	050 Move [X19+8], V0
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X30, [X31+48]
	054 Move X23, [X31+56]
	055 Return X0

Method: System.Globalization.TimeSpanFormat/FormatLiterals get_NegativeLocalized()

Disassembly:
	0x03331168 ADRP X0, 0xDF1000
	0x0333116C LDR X0, [X0 + 0x28]
	0x03331170 BL 0x1C16CF4
	0x03331174 MOVZ W8, 0x1
	0x03331178 STRB W8, [X25 + 0xD06]
	0x0333117C CMP W21, W23
	0x03331180 B.NE 0x3331304
	0x03331184 CBZ W21, 0x33311AC
	0x03331188 ADRP X8, 0xDE9000
	0x0333118C LDR X8, [X8 + 0x2D0]
	0x03331190 MOV X0, X22
	0x03331194 MOV X1, X21
	0x03331198 MOV X2, X24
	0x0333119C LDR X4, [X8]
	0x033311A0 MOV X3, X23
	0x033311A4 BL 0x1F96ECC
	0x033311A8 TBZ X0, 0x0, 0x3331304
	0x033311AC LDP X22, X21, [X19 + 0x138]
	0x033311B0 MOV X0, X20
	0x033311B4 BL 0x332CB64
	0x033311B8 LDRB W8, [X26 + 0x762]
	0x033311BC MOV X23, X0
	0x033311C0 CBNZ W8, 0x33311D8
	0x033311C4 ADRP X0, 0xDE9000
	0x033311C8 LDR X0, [X0 + 0x290]
	0x033311CC BL 0x1C16CF4
	0x033311D0 MOVZ W8, 0x1
	0x033311D4 STRB W8, [X26 + 0x762]
	0x033311D8 CBZ X23, 0x33311F4
	0x033311DC MOV X0, X23
	0x033311E0 MOV X1, X31
	0x033311E4 BL 0x3225708
	0x033311E8 LDR W23, [X23 + 0x10]
	0x033311EC MOV X24, X0
	0x033311F0 B 0x33311F8
	0x033311F4 MOV X24, X31
	0x033311F8 LDRB W8, [X25 + 0xD06]
	0x033311FC CBNZ W8, 0x3331220
	0x03331200 ADRP X0, 0xDE9000
	0x03331204 LDR X0, [X0 + 0x2D0]
	0x03331208 BL 0x1C16CF4
	0x0333120C ADRP X0, 0xDF1000
	0x03331210 LDR X0, [X0 + 0x28]
	0x03331214 BL 0x1C16CF4
	0x03331218 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W9, [X0+97]
	008 Move X20, X0
	009 Move X19, X8
	010 Compare W9, 0
	011 JumpIfNotEqual {43}
	012 NotImplemented "Instruction MOVI not yet implemented."
	013 Move X21, X20
	014 Move [X21+56], V0
	015 Move [X21+32], X31
	016 Move [X21+1], V0
	017 Move X23, 0x10A9000
	018 Move W8, [X23+1890]
	019 Move X22, [X21+56]
	020 Compare W8, 0
	021 JumpIfEqual {29}
	022 Compare X22, 0
	023 JumpIfEqual {36}
	024 Move X0, X22
	025 Move X1, X31
	026 Call String.GetRawStringData, X0
	027 Move W2, [X22+16]
	028 Move X1, X0
	029 Move X0, 0xDEA000
	030 Move X0, [X0+656]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+1890], W8
	034 Compare X22, 0
	035 JumpIfNotEqual {24}
	036 Move X1, X31
	037 Move X2, X31
	038 Move X0, X21
	039 Move W3, W31
	040 Call FormatLiterals.Init, X0, X1, X2
	041 Move W8, 1
	042 Move [X20+97], W8
	043 Move X8, [X20+88]
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move [X19+32], X8
	049 Move [X19], V1
	050 Move [X19+8], V0
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X30, [X31+48]
	054 Move X23, [X31+56]
	055 Return X0

Method: System.Boolean FullAppCompatMatch(System.Globalization.TimeSpanFormat/FormatLiterals pattern)

Disassembly:
	0x03331980 ADRP X0, 0xDE9000
	0x03331984 LDR X0, [X0 + 0x290]
	0x03331988 BL 0x1C16CF4
	0x0333198C MOVZ W8, 0x1
	0x03331990 STRB W8, [X26 + 0x762]
	0x03331994 CBZ X20, 0x33319B0
	0x03331998 MOV X0, X20
	0x0333199C MOV X1, X31
	0x033319A0 BL 0x3225708
	0x033319A4 LDR W20, [X20 + 0x10]
	0x033319A8 MOV X22, X0
	0x033319AC B 0x33319B4
	0x033319B0 MOV X22, X31
	0x033319B4 LDRB W8, [X25 + 0xD06]
	0x033319B8 CBNZ W8, 0x33319DC
	0x033319BC ADRP X0, 0xDE9000
	0x033319C0 LDR X0, [X0 + 0x2D0]
	0x033319C4 BL 0x1C16CF4
	0x033319C8 ADRP X0, 0xDF1000
	0x033319CC LDR X0, [X0 + 0x28]
	0x033319D0 BL 0x1C16CF4
	0x033319D4 MOVZ W8, 0x1
	0x033319D8 STRB W8, [X25 + 0xD06]
	0x033319DC CMP W19, W20
	0x033319E0 B.NE 0x3331A1C
	0x033319E4 CBZ W19, 0x3331A38
	0x033319E8 ADRP X8, 0xDE9000
	0x033319EC LDR X8, [X8 + 0x2D0]
	0x033319F0 MOV X0, X21
	0x033319F4 MOV X1, X19
	0x033319F8 MOV X2, X22
	0x033319FC LDR X4, [X8]
	0x03331A00 MOV X3, X20
	0x03331A04 LDP X20, X19, [X31 + 0x40]
	0x03331A08 LDP X22, X21, [X31 + 0x30]
	0x03331A0C LDP X24, X23, [X31 + 0x20]
	0x03331A10 LDP X26, X25, [X31 + 0x10]
	0x03331A14 LDR X30, [X31], #0x50
	0x03331A18 B 0x1F96ECC
	0x03331A1C MOV W0, W31
	0x03331A20 LDP X20, X19, [X31 + 0x40]
	0x03331A24 LDP X22, X21, [X31 + 0x30]
	0x03331A28 LDP X24, X23, [X31 + 0x20]
	0x03331A2C LDP X26, X25, [X31 + 0x10]
	0x03331A30 LDR X30, [X31], #0x50
	0x03331A34 RET
	0x03331A38 MOVZ W0, 0x1
	0x03331A3C B 0x3331A20
	0x03331A40 SUB X31, X31, 0x30
	0x03331A44 STR X30, [X31 + 0x20]
	0x03331A48 MOV X3, X2
	0x03331A4C MOV X2, X1
	0x03331A50 MOV X1, X0
	0x03331A54 MOVI V0.2D, 0x0
	0x03331A58 ADD X0, X31, 0x0
	0x03331A5C STP V0, V0, [X31]
	0x03331A60 BL 0x33323D4
	0x03331A64 LDR X30, [X31 + 0x20]
	0x03331A68 AND W0, W0, 0x1
	0x03331A6C ADD X31, X31, 0x30
	0x03331A70 RET
	0x03331A74 SUB X31, X31, 0x160
	0x03331A78 STP X29, X30, [X31 + 0x100]
	0x03331A7C STP X28, X27, [X31 + 0x110]
	0x03331A80 STP X26, X25, [X31 + 0x120]
	0x03331A84 STP X24, X23, [X31 + 0x130]
	0x03331A88 STP X22, X21, [X31 + 0x140]
	0x03331A8C STP X20, X19, [X31 + 0x150]
	0x03331A90 ADRP X19, 0x10AB000
	0x03331A94 LDRB W8, [X19 + 0xCC7]
	0x03331A98 MOV X21, X3
	0x03331A9C MOV X22, X2
	0x03331AA0 MOV X23, X1
	0x03331AA4 MOV X24, X0
	0x03331AA8 STR X5, [X31 + 0x10]
	0x03331AAC STR W4, [X31 + 0x8]
	0x03331AB0 TBNZ X8, 0x0, 0x3331B1C
	0x03331AB4 ADRP X0, 0xDC4000
	0x03331AB8 LDR X0, [X0 + 0x170]
	0x03331ABC BL 0x1C16CF4
	0x03331AC0 ADRP X0, 0xDF7000
	0x03331AC4 LDR X0, [X0 + 0x548]
	0x03331AC8 BL 0x1C16CF4
	0x03331ACC ADRP X0, 0xDF7000
	0x03331AD0 LDR X0, [X0 + 0x588]
	0x03331AD4 BL 0x1C16CF4
	0x03331AD8 ADRP X0, 0xDF1000
	0x03331ADC LDR X0, [X0 + 0x28]
	0x03331AE0 BL 0x1C16CF4
	0x03331AE4 ADRP X0, 0xDF7000
	0x03331AE8 LDR X0, [X0 + 0x580]
	0x03331AEC BL 0x1C16CF4
	0x03331AF0 ADRP X0, 0xDF7000
	0x03331AF4 LDR X0, [X0 + 0x568]
	0x03331AF8 BL 0x1C16CF4
	0x03331AFC ADRP X0, 0xDF1000
	0x03331B00 LDR X0, [X0 + 0x618]
	0x03331B04 BL 0x1C16CF4
	0x03331B08 ADRP X0, 0xDF7000
	0x03331B0C LDR X0, [X0 + 0x590]
	0x03331B10 BL 0x1C16CF4
	0x03331B14 MOVZ W8, 0x1
	0x03331B18 STRB W8, [X19 + 0xCC7]
	0x03331B1C MOVN W8, 0x0
	0x03331B20 CMP W21, 0x1
	0x03331B24 STP X31, X31, [X31 + 0xC8]
	0x03331B28 STP X31, X31, [X31 + 0xD8]
	0x03331B2C STP X31, X24, [X31 + 0xC0]
	0x03331B30 STR W31, [X31 + 0xBC]
	0x03331B34 STR W31, [X31 + 0xF8]
	0x03331B38 STP X31, X31, [X31 + 0xE8]
	0x03331B3C STR X23, [X31 + 0xD0]
	0x03331B40 STR W8, [X31 + 0xD8]
	0x03331B44 B.LT 0x3331FA4
	0x03331B48 STR W31, [X31 + 0xC]
	0x03331B4C ADRP X27, 0xDF7000
	0x03331B50 LDR X27, [X27 + 0x548]
	0x03331B54 MOV W28, W31
	0x03331B58 MOV W24, W31
	0x03331B5C MOV W19, W31
	0x03331B60 MOV W20, W31
	0x03331B64 MOV W23, W31
	0x03331B68 MOVZ W29, 0x2
	0x03331B6C CMP W23, W21
	0x03331B70 B.CS 0x3332168
	0x03331B74 LDRH W25, [X22, W23, SXTW]
	0x03331B78 CMP W25, 0x46
	0x03331B7C B.HI 0x3331BD4
	0x03331B80 CMP W25, 0x25
	0x03331B84 B.HI 0x3331C84
	0x03331B88 CMP W25, 0x22
	0x03331B8C B.EQ 0x3331D68
	0x03331B90 CMP W25, 0x25
	0x03331B94 B.NE 0x3331FE4
	0x03331B98 LDR X0, [X27]
	0x03331B9C LDR W8, [X0 + 0xE0]
	0x03331BA0 CBNZ W8, 0x3331BA8
	0x03331BA4 BL 0x1C16DFC
	0x03331BA8 MOV X0, X22
	0x03331BAC MOV X1, X21
	0x03331BB0 MOV W2, W23
	0x03331BB4 MOV X3, X31
	0x03331BB8 BL 0x3367D0C
	0x03331BBC TBNZ X0, 0x1F, 0x3331FE4
	0x03331BC0 CMP W0, 0x25
	0x03331BC4 B.EQ 0x3331FE4
	0x03331BC8 MOVZ W8, 0x1
	0x03331BCC STR W8, [X31 + 0xE0]
	0x03331BD0 B 0x3331F94
	0x03331BD4 CMP W25, 0x68
	0x03331BD8 B.HI 0x3331CEC
	0x03331BDC SUB W9, W25, 0x5C
	0x03331BE0 UBFM W8, W9, 0x1, 0xF
	0x03331BE4 BFM W8, W9, 0x11, 0x10
	0x03331BE8 AND W9, W8, 0xFFFF
	0x03331BEC CMP W9, 0x6
	0x03331BF0 B.HI 0x3331FE4
	0x03331BF4 ADRP X11, 0xFFFFFFFFFD865000
	0x03331BF8 AND X8, X8, 0xFFFF
	0x03331BFC ADD X11, X11, 0x6BC
	0x03331C00 ADR X9, 0x10
	0x03331C04 LDRB W10, [X11, X8, LSL]
	0x03331C08 ADD X9, X9, X10, 0x2, LSL
	0x03331C0C BR X9
	0x03331C10 LDR X0, [X27]
	0x03331C14 LDR W8, [X0 + 0xE0]
	0x03331C18 CBNZ W8, 0x3331C20
	0x03331C1C BL 0x1C16DFC
	0x03331C20 MOV X0, X22
	0x03331C24 MOV X1, X21
	0x03331C28 MOV W2, W23
	0x03331C2C MOV X3, X31
	0x03331C30 BL 0x3367D0C
	0x03331C34 TBNZ X0, 0x1F, 0x3331FE4
	0x03331C38 ADRP X8, 0x10AB000
	0x03331C3C LDRB W8, [X8 + 0xCCA]
	0x03331C40 MOV W25, W0
	0x03331C44 TBNZ X8, 0x0, 0x3331C60
	0x03331C48 ADRP X0, 0xDF1000
	0x03331C4C LDR X0, [X0 + 0x28]
	0x03331C50 BL 0x1C16CF4
	0x03331C54 MOVZ W8, 0x1
	0x03331C58 ADRP X9, 0x10AB000
	0x03331C5C STRB W8, [X9 + 0xCCA]
	0x03331C60 LDR W8, [X31 + 0xD8]
	0x03331C64 LDR W9, [X31 + 0xD0]
	0x03331C68 ADD W8, W8, 0x1
	0x03331C6C CMP W8, W9
	0x03331C70 STR W8, [X31 + 0xD8]
	0x03331C74 B.CS 0x3331F84
	0x03331C78 LDR X9, [X31 + 0xC8]
	0x03331C7C LDRH W8, [X9, W8, SXTW]
	0x03331C80 B 0x3331F88
	0x03331C84 CMP W25, 0x27
	0x03331C88 B.EQ 0x3331D68
	0x03331C8C CMP W25, 0x46
	0x03331C90 B.NE 0x3331FE4
	0x03331C94 LDR X0, [X27]
	0x03331C98 LDR W8, [X0 + 0xE0]
	0x03331C9C CBNZ W8, 0x3331CA4
	0x03331CA0 BL 0x1C16DFC
	0x03331CA4 MOVZ W3, 0x46
	0x03331CA8 MOV X0, X22
	0x03331CAC MOV X1, X21
	0x03331CB0 MOV W2, W23
	0x03331CB4 MOV X4, X31
	0x03331CB8 BL 0x33679B4
	0x03331CBC CMP W0, 0x8
	0x03331CC0 CSET W8, LT
	0x03331CC4 BIC W8, W8, W20, 0x0
	0x03331CC8 STR W0, [X31 + 0xE0]
	0x03331CCC TBZ X8, 0x0, 0x3331FE4
	0x03331CD0 MOV W1, W0
	0x03331CD4 ADD X0, X31, 0xC8
	0x03331CD8 ADD X3, X31, 0xE8
	0x03331CDC ADD X4, X31, 0xE4
	0x03331CE0 MOV W2, W1
	0x03331CE4 BL 0x33321A8
	0x03331CE8 B 0x3331F10
	0x03331CEC CMP W25, 0x6D
	0x03331CF0 B.EQ 0x3331DD8
	0x03331CF4 CMP W25, 0x73
	0x03331CF8 B.NE 0x3331FE4
	0x03331CFC LDR X0, [X27]
	0x03331D00 LDR W8, [X0 + 0xE0]
	0x03331D04 CBNZ W8, 0x3331D0C
	0x03331D08 BL 0x1C16DFC
	0x03331D0C MOVZ W3, 0x73
	0x03331D10 MOV X0, X22
	0x03331D14 MOV X1, X21
	0x03331D18 MOV W2, W23
	0x03331D1C MOV X4, X31

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move W8, [X0+8]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, [X0+12]
	013 Move X19, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X22, [X19+280]
	016 Move X21, [X19+288]
	017 Move X0, X1
	018 Move X20, X1
	019 Call FormatLiterals.get_Start, X0
	020 Move X26, 0x10A9000
	021 Move W8, [X26+1890]
	022 Move X23, X0
	023 Compare W8, 0
	024 JumpIfEqual {32}
	025 Compare X23, 0
	026 JumpIfEqual {39}
	027 Move X0, X23
	028 Move X1, X31
	029 Call String.GetRawStringData, X0
	030 Move W23, [X23+16]
	031 Move X24, X0
	032 Move X0, 0xDEA000
	033 Move X0, [X0+656]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X26+1890], W8
	037 Compare X23, 0
	038 JumpIfNotEqual {27}
	039 Move X24, X31
	040 Move X25, 0x10AC000
	041 Move W8, [X25+3334]
	042 Compare W8, 0
	043 JumpIfNotEqual {52}
	044 Move X0, 0xDEA000
	045 Move X0, [X0+720]
	046 Call 0x1C17CF4
	047 Move X0, 0xDF2000
	048 Move X0, [X0+40]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X25+3334], W8
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare W21, 0
	054 JumpIfEqual {67}
	055 Move X8, 0xDEA000
	056 Move X8, [X8+720]
	057 Move X0, X22
	058 Move X1, X21
	059 Move X2, X24
	060 Move X4, [X8]
	061 Move X3, X23
	062 Call 0x1F97ECC
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {259}
	067 Move X22, [X19+296]
	068 Move X21, [X19+304]
	069 Move X0, X20
	070 Call FormatLiterals.get_DayHourSep, X0
	071 Move W8, [X26+1890]
	072 Move X23, X0
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0xDEA000
	076 Move X0, [X0+656]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X26+1890], W8
	080 Compare X23, 0
	081 JumpIfEqual {87}
	082 Move X0, X23
	083 Move X1, X31
	084 Call String.GetRawStringData, X0
	085 Move W23, [X23+16]
	086 Move X24, X0
	087 Move X24, X31
	088 Move W8, [X25+3334]
	089 Compare W8, 0
	090 JumpIfNotEqual {99}
	091 Move X0, 0xDEA000
	092 Move X0, [X0+720]
	093 Call 0x1C17CF4
	094 Move X0, 0xDF2000
	095 Move X0, [X0+40]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X25+3334], W8
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Compare W21, 0
	101 JumpIfEqual {114}
	102 Move X8, 0xDEA000
	103 Move X8, [X8+720]
	104 Move X0, X22
	105 Move X1, X21
	106 Move X2, X24
	107 Move X4, [X8]
	108 Move X3, X23
	109 Call 0x1F97ECC
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {259}
	114 Move X22, [X19+312]
	115 Move X21, [X19+320]
	116 Move X0, X20
	117 Call FormatLiterals.get_HourMinuteSep, X0
	118 Move W8, [X26+1890]
	119 Move X23, X0
	120 Compare W8, 0
	121 JumpIfNotEqual {127}
	122 Move X0, 0xDEA000
	123 Move X0, [X0+656]
	124 Call 0x1C17CF4
	125 Move W8, 1
	126 Move [X26+1890], W8
	127 Compare X23, 0
	128 JumpIfEqual {134}
	129 Move X0, X23
	130 Move X1, X31
	131 Call String.GetRawStringData, X0
	132 Move W23, [X23+16]
	133 Move X24, X0
	134 Move X24, X31
	135 Move W8, [X25+3334]
	136 Compare W8, 0
	137 JumpIfNotEqual {146}
	138 Move X0, 0xDEA000
	139 Move X0, [X0+720]
	140 Call 0x1C17CF4
	141 Move X0, 0xDF2000
	142 Move X0, [X0+40]
	143 Call 0x1C17CF4
	144 Move W8, 1
	145 Move [X25+3334], W8
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Compare W21, 0
	148 JumpIfEqual {161}
	149 Move X8, 0xDEA000
	150 Move X8, [X8+720]
	151 Move X0, X22
	152 Move X1, X21
	153 Move X2, X24
	154 Move X4, [X8]
	155 Move X3, X23
	156 Call 0x1F97ECC
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {259}
	161 Move X22, [X19+328]
	162 Move X21, [X19+336]
	163 Move W8, [X26+1890]
	164 Move X23, [X20]
	165 Compare W8, 0
	166 JumpIfNotEqual {172}
	167 Move X0, 0xDEA000
	168 Move X0, [X0+656]
	169 Call 0x1C17CF4
	170 Move W8, 1
	171 Move [X26+1890], W8
	172 Compare X23, 0
	173 JumpIfEqual {179}
	174 Move X0, X23
	175 Move X1, X31
	176 Call String.GetRawStringData, X0
	177 Move W23, [X23+16]
	178 Move X24, X0
	179 Move X24, X31
	180 Move W8, [X25+3334]
	181 Compare W8, 0
	182 JumpIfNotEqual {191}
	183 Move X0, 0xDEA000
	184 Move X0, [X0+720]
	185 Call 0x1C17CF4
	186 Move X0, 0xDF2000
	187 Move X0, [X0+40]
	188 Call 0x1C17CF4
	189 Move W8, 1
	190 Move [X25+3334], W8
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Compare W21, 0
	193 JumpIfEqual {206}
	194 Move X8, 0xDEA000
	195 Move X8, [X8+720]
	196 Move X0, X22
	197 Move X1, X21
	198 Move X2, X24
	199 Move X4, [X8]
	200 Move X3, X23
	201 Call 0x1F97ECC
	202 Move TEMP, X0
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfNotEqual {259}
	206 Move X21, [X19+344]
	207 Move X19, [X19+352]
	208 Move X0, X20
	209 Call FormatLiterals.get_End, X0
	210 Move W8, [X26+1890]
	211 Move X20, X0
	212 Compare W8, 0
	213 JumpIfNotEqual {219}
	214 Move X0, 0xDEA000
	215 Move X0, [X0+656]
	216 Call 0x1C17CF4
	217 Move W8, 1
	218 Move [X26+1890], W8
	219 Compare X20, 0
	220 JumpIfEqual {226}
	221 Move X0, X20
	222 Move X1, X31
	223 Call String.GetRawStringData, X0
	224 Move W20, [X20+16]
	225 Move X22, X0
	226 Move X22, X31
	227 Move W8, [X25+3334]
	228 Compare W8, 0
	229 JumpIfNotEqual {238}
	230 Move X0, 0xDEA000
	231 Move X0, [X0+720]
	232 Call 0x1C17CF4
	233 Move X0, 0xDF2000
	234 Move X0, [X0+40]
	235 Call 0x1C17CF4
	236 Move W8, 1
	237 Move [X25+3334], W8
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Compare W19, 0
	240 JumpIfEqual {270}
	241 Move X8, 0xDEA000
	242 Move X8, [X8+720]
	243 Move X0, X21
	244 Move X1, X19
	245 Move X2, X22
	246 Move X4, [X8]
	247 Move X3, X20
	248 Move X20, [X31+64]
	249 Move X19, [X31+72]
	250 Move X22, [X31+48]
	251 Move X21, [X31+56]
	252 Move X24, [X31+32]
	253 Move X23, [X31+40]
	254 Move X26, [X31+16]
	255 Move X25, [X31+24]
	256 Move X30, [X31+80]
	257 Call 0x1F97ECC
	258 Return X0
	259 Move W0, W31
	260 Move X20, [X31+64]
	261 Move X19, [X31+72]
	262 Move X22, [X31+48]
	263 Move X21, [X31+56]
	264 Move X24, [X31+32]
	265 Move X23, [X31+40]
	266 Move X26, [X31+16]
	267 Move X25, [X31+24]
	268 Move X30, [X31+80]
	269 Return X0
	270 Move W0, 1

Method: System.Boolean PartialAppCompatMatch(System.Globalization.TimeSpanFormat/FormatLiterals pattern)

Disassembly:
	0x03332328 STRB W8, [X20 + 0xCCA]
	0x0333232C LDR W8, [X19 + 0x10]
	0x03332330 LDR W9, [X19 + 0x8]
	0x03332334 ADD W8, W8, 0x1
	0x03332338 CMP W8, W9
	0x0333233C STR W8, [X19 + 0x10]
	0x03332340 B.CS 0x3332350
	0x03332344 LDR X9, [X19]
	0x03332348 LDRH W0, [X9, W8, SXTW]
	0x0333234C B 0x3332354
	0x03332350 MOV W0, W31
	0x03332354 LDP X20, X19, [X31 + 0x10]
	0x03332358 LDR X30, [X31], #0x20
	0x0333235C RET
	0x03332360 STR X30, [X31 - 0x20]!
	0x03332364 STP X20, X19, [X31 + 0x10]
	0x03332368 ADRP X20, 0x10AA000
	0x0333236C LDRB W8, [X20 + 0xCC9]
	0x03332370 MOV X19, X0
	0x03332374 TBNZ X8, 0x0, 0x333238C
	0x03332378 ADRP X0, 0xDF0000
	0x0333237C LDR X0, [X0 + 0x28]
	0x03332380 BL 0x1C16CF4
	0x03332384 MOVZ W8, 0x1
	0x03332388 STRB W8, [X20 + 0xCC9]
	0x0333238C LDR W8, [X19 + 0x8]
	0x03332390 LDR W9, [X19 + 0x10]
	0x03332394 LDP X20, X19, [X31 + 0x10]
	0x03332398 SUB W8, W8, 0x1
	0x0333239C CMP W9, W8
	0x033323A0 CSET W0, GE
	0x033323A4 LDR X30, [X31], #0x20
	0x033323A8 RET
	0x033323AC MOVZ W8, 0x2
	0x033323B0 STP W1, W2, [X0 + 0x4]
	0x033323B4 STRB W8, [X0]
	0x033323B8 STP X31, X31, [X0 + 0x10]
	0x033323BC RET
	0x033323C0 LDR W8, [X0 + 0x10]
	0x033323C4 SUBS W8, W8, 0x1
	0x033323C8 B.LT 0x33323D0
	0x033323CC STR W8, [X0 + 0x10]
	0x033323D0 RET
	0x033323D4 SUB X31, X31, 0x50
	0x033323D8 STP X30, X23, [X31 + 0x20]
	0x033323DC STP X22, X21, [X31 + 0x30]
	0x033323E0 STP X20, X19, [X31 + 0x40]
	0x033323E4 ADRP X23, 0x10AA000
	0x033323E8 LDRB W8, [X23 + 0xCD0]
	0x033323EC MOV X19, X3
	0x033323F0 MOV X21, X2
	0x033323F4 MOV X22, X1
	0x033323F8 MOV X20, X0
	0x033323FC TBNZ X8, 0x0, 0x333242C
	0x03332400 ADRP X0, 0xDF0000
	0x03332404 LDR X0, [X0 + 0x28]
	0x03332408 BL 0x1C16CF4
	0x0333240C ADRP X0, 0xDF6000
	0x03332410 LDR X0, [X0 + 0x580]
	0x03332414 BL 0x1C16CF4
	0x03332418 ADRP X0, 0xDF6000
	0x0333241C LDR X0, [X0 + 0x568]
	0x03332420 BL 0x1C16CF4
	0x03332424 MOVZ W8, 0x1
	0x03332428 STRB W8, [X23 + 0xCD0]
	0x0333242C MOVN W8, 0x0
	0x03332430 STR X31, [X31 + 0x18]
	0x03332434 STR W31, [X31 + 0x14]
	0x03332438 STR X31, [X31 + 0x8]
	0x0333243C STR X31, [X19]
	0x03332440 STP X22, X21, [X20]
	0x03332444 STP W8, W21, [X20 + 0x14]
	0x03332448 MOV X0, X20
	0x0333244C BL 0x33328B8
	0x03332450 LDRH W8, [X20 + 0x10]
	0x03332454 CMP W8, 0x9
	0x03332458 B.EQ 0x3332448
	0x0333245C CMP W8, 0x20
	0x03332460 B.EQ 0x3332448
	0x03332464 CMP W8, 0x2D
	0x03332468 B.NE 0x333247C
	0x0333246C MOV X0, X20
	0x03332470 BL 0x33328B8
	0x03332474 MOVZ W21, 0x1
	0x03332478 B 0x3332480
	0x0333247C MOV W21, W31
	0x03332480 MOV X0, X20
	0x03332484 BL 0x3332904
	0x03332488 AND W8, W0, 0xFFFF
	0x0333248C CMP W8, 0x3A
	0x03332490 B.NE 0x33324B0
	0x03332494 ADD X1, X31, 0x18
	0x03332498 MOV X0, X20
	0x0333249C MOV X2, X19
	0x033324A0 BL 0x3332990
	0x033324A4 TBZ X0, 0x0, 0x3332584
	0x033324A8 LDR X22, [X31 + 0x18]
	0x033324AC B 0x3332514
	0x033324B0 MOVZ W1, 0xE3FF
	0x033324B4 ADD X2, X31, 0x14
	0x033324B8 MOVK W1, 0xA20000
	0x033324BC MOV X0, X20
	0x033324C0 MOV X3, X19
	0x033324C4 BL 0x3332B50
	0x033324C8 TBZ X0, 0x0, 0x3332584
	0x033324CC LDRH W8, [X20 + 0x10]
	0x033324D0 LDRSW X9, [X31 + 0x14]
	0x033324D4 MOVZ X10, 0xC000
	0x033324D8 MOVK X10, 0x2A690000
	0x033324DC MOVK X10, 0xC9
	0x033324E0 CMP W8, 0x2E
	0x033324E4 MUL X22, X9, X10
	0x033324E8 B.NE 0x3332514
	0x033324EC MOV X0, X20
	0x033324F0 BL 0x33328B8
	0x033324F4 ADD X1, X31, 0x8
	0x033324F8 MOV X0, X20
	0x033324FC MOV X2, X19
	0x03332500 BL 0x3332990
	0x03332504 TBZ X0, 0x0, 0x3332584
	0x03332508 LDR X8, [X31 + 0x8]
	0x0333250C ADD X22, X8, X22
	0x03332510 STR X22, [X31 + 0x18]
	0x03332514 CBZ W21, 0x3332528
	0x03332518 SUB X22, X31, X22
	0x0333251C CMP X22, 0x1
	0x03332520 B.GE 0x333252C
	0x03332524 B 0x3332544
	0x03332528 TBZ X22, 0x0, 0x3332544
	0x0333252C ADRP X8, 0xDF6000
	0x03332530 LDR X8, [X8 + 0x580]
	0x03332534 MOVZ W1, 0x4
	0x03332538 B 0x3332570
	0x0333253C MOV X0, X20
	0x03332540 BL 0x33328B8
	0x03332544 LDRH W8, [X20 + 0x10]
	0x03332548 CMP W8, 0x9
	0x0333254C B.EQ 0x333253C
	0x03332550 CMP W8, 0x20
	0x03332554 B.EQ 0x333253C
	0x03332558 LDP W8, W9, [X20 + 0x14]
	0x0333255C CMP W8, W9
	0x03332560 B.GE 0x333259C
	0x03332564 ADRP X8, 0xDF6000
	0x03332568 LDR X8, [X8 + 0x568]
	0x0333256C MOVZ W1, 0x2
	0x03332570 LDR X2, [X8]
	0x03332574 MOV X0, X19
	0x03332578 MOV X3, X31
	0x0333257C MOV X4, X31
	0x03332580 BL 0x332D348
	0x03332584 MOV W0, W31
	0x03332588 LDP X20, X19, [X31 + 0x40]
	0x0333258C LDP X22, X21, [X31 + 0x30]
	0x03332590 LDP X30, X23, [X31 + 0x20]
	0x03332594 ADD X31, X31, 0x50
	0x03332598 RET
	0x0333259C MOVZ W0, 0x1
	0x033325A0 STR X22, [X19]
	0x033325A4 B 0x3332588
	0x033325A8 STRB W1, [X0]
	0x033325AC STP W31, W31, [X0 + 0x4]
	0x033325B0 STP X31, X31, [X0 + 0x10]
	0x033325B4 RET
	0x033325B8 STRB W1, [X0]
	0x033325BC STP W2, W3, [X0 + 0x4]
	0x033325C0 STP X4, X5, [X0 + 0x10]
	0x033325C4 RET
	0x033325C8 STP X30, X21, [X31 - 0x20]!
	0x033325CC STP X20, X19, [X31 + 0x10]
	0x033325D0 ADRP X21, 0x10AA000
	0x033325D4 ADRP X20, 0xDF6000
	0x033325D8 MOV X19, X8
	0x033325DC LDRB W8, [X21 + 0xCCB]
	0x033325E0 LDR X20, [X20 + 0x530]
	0x033325E4 TBNZ X8, 0x0, 0x33325FC
	0x033325E8 ADRP X0, 0xDF6000
	0x033325EC LDR X0, [X0 + 0x530]
	0x033325F0 BL 0x1C16CF4
	0x033325F4 MOVZ W8, 0x1
	0x033325F8 STRB W8, [X21 + 0xCCB]
	0x033325FC LDR X0, [X20]
	0x03332600 LDR W8, [X0 + 0xE0]
	0x03332604 CBNZ W8, 0x3332610
	0x03332608 BL 0x1C16DFC
	0x0333260C LDR X0, [X20]
	0x03332610 LDR X8, [X0 + 0xB8]
	0x03332614 LDR X9, [X8 + 0x20]
	0x03332618 LDP V1, V0, [X8]
	0x0333261C STR X9, [X19 + 0x20]
	0x03332620 STP V1, V0, [X19]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move W8, [X0+8]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, [X0+12]
	013 Move X19, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X22, [X19+280]
	016 Move X21, [X19+288]
	017 Move X0, X1
	018 Move X20, X1
	019 Call FormatLiterals.get_Start, X0
	020 Move X26, 0x10A8000
	021 Move W8, [X26+1890]
	022 Move X23, X0
	023 Compare W8, 0
	024 JumpIfEqual {32}
	025 Compare X23, 0
	026 JumpIfEqual {39}
	027 Move X0, X23
	028 Move X1, X31
	029 Call String.GetRawStringData, X0
	030 Move W23, [X23+16]
	031 Move X24, X0
	032 Move X0, 0xDE9000
	033 Move X0, [X0+656]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X26+1890], W8
	037 Compare X23, 0
	038 JumpIfNotEqual {27}
	039 Move X24, X31
	040 Move X25, 0x10AB000
	041 Move W8, [X25+3334]
	042 Compare W8, 0
	043 JumpIfNotEqual {52}
	044 Move X0, 0xDE9000
	045 Move X0, [X0+720]
	046 Call 0x1C17CF4
	047 Move X0, 0xDF1000
	048 Move X0, [X0+40]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X25+3334], W8
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare W21, 0
	054 JumpIfEqual {67}
	055 Move X8, 0xDE9000
	056 Move X8, [X8+720]
	057 Move X0, X22
	058 Move X1, X21
	059 Move X2, X24
	060 Move X4, [X8]
	061 Move X3, X23
	062 Call 0x1F97ECC
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {212}
	067 Move X22, [X19+296]
	068 Move X21, [X19+304]
	069 Move X0, X20
	070 Call FormatLiterals.get_HourMinuteSep, X0
	071 Move W8, [X26+1890]
	072 Move X23, X0
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0xDE9000
	076 Move X0, [X0+656]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X26+1890], W8
	080 Compare X23, 0
	081 JumpIfEqual {87}
	082 Move X0, X23
	083 Move X1, X31
	084 Call String.GetRawStringData, X0
	085 Move W23, [X23+16]
	086 Move X24, X0
	087 Move X24, X31
	088 Move W8, [X25+3334]
	089 Compare W8, 0
	090 JumpIfNotEqual {99}
	091 Move X0, 0xDE9000
	092 Move X0, [X0+720]
	093 Call 0x1C17CF4
	094 Move X0, 0xDF1000
	095 Move X0, [X0+40]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X25+3334], W8
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Compare W21, 0
	101 JumpIfEqual {114}
	102 Move X8, 0xDE9000
	103 Move X8, [X8+720]
	104 Move X0, X22
	105 Move X1, X21
	106 Move X2, X24
	107 Move X4, [X8]
	108 Move X3, X23
	109 Call 0x1F97ECC
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {212}
	114 Move X22, [X19+312]
	115 Move X21, [X19+320]
	116 Move W8, [X26+1890]
	117 Move X23, [X20]
	118 Compare W8, 0
	119 JumpIfNotEqual {125}
	120 Move X0, 0xDE9000
	121 Move X0, [X0+656]
	122 Call 0x1C17CF4
	123 Move W8, 1
	124 Move [X26+1890], W8
	125 Compare X23, 0
	126 JumpIfEqual {132}
	127 Move X0, X23
	128 Move X1, X31
	129 Call String.GetRawStringData, X0
	130 Move W23, [X23+16]
	131 Move X24, X0
	132 Move X24, X31
	133 Move W8, [X25+3334]
	134 Compare W8, 0
	135 JumpIfNotEqual {144}
	136 Move X0, 0xDE9000
	137 Move X0, [X0+720]
	138 Call 0x1C17CF4
	139 Move X0, 0xDF1000
	140 Move X0, [X0+40]
	141 Call 0x1C17CF4
	142 Move W8, 1
	143 Move [X25+3334], W8
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Compare W21, 0
	146 JumpIfEqual {159}
	147 Move X8, 0xDE9000
	148 Move X8, [X8+720]
	149 Move X0, X22
	150 Move X1, X21
	151 Move X2, X24
	152 Move X4, [X8]
	153 Move X3, X23
	154 Call 0x1F97ECC
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {212}
	159 Move X21, [X19+328]
	160 Move X19, [X19+336]
	161 Move X0, X20
	162 Call FormatLiterals.get_End, X0
	163 Move W8, [X26+1890]
	164 Move X20, X0
	165 Compare W8, 0
	166 JumpIfNotEqual {172}
	167 Move X0, 0xDE9000
	168 Move X0, [X0+656]
	169 Call 0x1C17CF4
	170 Move W8, 1
	171 Move [X26+1890], W8
	172 Compare X20, 0
	173 JumpIfEqual {179}
	174 Move X0, X20
	175 Move X1, X31
	176 Call String.GetRawStringData, X0
	177 Move W20, [X20+16]
	178 Move X22, X0
	179 Move X22, X31
	180 Move W8, [X25+3334]
	181 Compare W8, 0
	182 JumpIfNotEqual {191}
	183 Move X0, 0xDE9000
	184 Move X0, [X0+720]
	185 Call 0x1C17CF4
	186 Move X0, 0xDF1000
	187 Move X0, [X0+40]
	188 Call 0x1C17CF4
	189 Move W8, 1
	190 Move [X25+3334], W8
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Compare W19, 0
	193 JumpIfEqual {223}
	194 Move X8, 0xDE9000
	195 Move X8, [X8+720]
	196 Move X0, X21
	197 Move X1, X19
	198 Move X2, X22
	199 Move X4, [X8]
	200 Move X3, X20
	201 Move X20, [X31+64]
	202 Move X19, [X31+72]
	203 Move X22, [X31+48]
	204 Move X21, [X31+56]
	205 Move X24, [X31+32]
	206 Move X23, [X31+40]
	207 Move X26, [X31+16]
	208 Move X25, [X31+24]
	209 Move X30, [X31+80]
	210 Call 0x1F97ECC
	211 Return X0
	212 Move W0, W31
	213 Move X20, [X31+64]
	214 Move X19, [X31+72]
	215 Move X22, [X31+48]
	216 Move X21, [X31+56]
	217 Move X24, [X31+32]
	218 Move X23, [X31+40]
	219 Move X26, [X31+16]
	220 Move X25, [X31+24]
	221 Move X30, [X31+80]
	222 Return X0
	223 Move W0, 1

Method: System.Boolean FullMatch(System.Globalization.TimeSpanFormat/FormatLiterals pattern)

Disassembly:
	0x03330C6C MOVZ W8, 0x1
	0x03330C70 STRB W8, [X26 + 0x762]
	0x03330C74 CBZ X20, 0x3330C90
	0x03330C78 MOV X0, X20
	0x03330C7C MOV X1, X31
	0x03330C80 BL 0x3225708
	0x03330C84 LDR W20, [X20 + 0x10]
	0x03330C88 MOV X22, X0
	0x03330C8C B 0x3330C94
	0x03330C90 MOV X22, X31
	0x03330C94 LDRB W8, [X25 + 0xD06]
	0x03330C98 CBNZ W8, 0x3330CBC
	0x03330C9C ADRP X0, 0xDEA000
	0x03330CA0 LDR X0, [X0 + 0x2D0]
	0x03330CA4 BL 0x1C16CF4
	0x03330CA8 ADRP X0, 0xDF2000
	0x03330CAC LDR X0, [X0 + 0x28]
	0x03330CB0 BL 0x1C16CF4
	0x03330CB4 MOVZ W8, 0x1
	0x03330CB8 STRB W8, [X25 + 0xD06]
	0x03330CBC CMP W19, W20
	0x03330CC0 B.NE 0x3330CFC
	0x03330CC4 CBZ W19, 0x3330D18
	0x03330CC8 ADRP X8, 0xDEA000
	0x03330CCC LDR X8, [X8 + 0x2D0]
	0x03330CD0 MOV X0, X21
	0x03330CD4 MOV X1, X19
	0x03330CD8 MOV X2, X22
	0x03330CDC LDR X4, [X8]
	0x03330CE0 MOV X3, X20
	0x03330CE4 LDP X20, X19, [X31 + 0x40]
	0x03330CE8 LDP X22, X21, [X31 + 0x30]
	0x03330CEC LDP X24, X23, [X31 + 0x20]
	0x03330CF0 LDP X26, X25, [X31 + 0x10]
	0x03330CF4 LDR X30, [X31], #0x50
	0x03330CF8 B 0x1F96ECC
	0x03330CFC MOV W0, W31
	0x03330D00 LDP X20, X19, [X31 + 0x40]
	0x03330D04 LDP X22, X21, [X31 + 0x30]
	0x03330D08 LDP X24, X23, [X31 + 0x20]
	0x03330D0C LDP X26, X25, [X31 + 0x10]
	0x03330D10 LDR X30, [X31], #0x50
	0x03330D14 RET
	0x03330D18 MOVZ W0, 0x1
	0x03330D1C B 0x3330D00
	0x03330D20 STR X30, [X31 - 0x50]!
	0x03330D24 STP X26, X25, [X31 + 0x10]
	0x03330D28 STP X24, X23, [X31 + 0x20]
	0x03330D2C STP X22, X21, [X31 + 0x30]
	0x03330D30 STP X20, X19, [X31 + 0x40]
	0x03330D34 LDR W8, [X0 + 0x8]
	0x03330D38 CMP W8, 0x4
	0x03330D3C B.NE 0x3331000
	0x03330D40 LDR W8, [X0 + 0xC]
	0x03330D44 MOV X19, X0
	0x03330D48 CMP W8, 0x3
	0x03330D4C B.NE 0x3331000
	0x03330D50 LDP X22, X21, [X19 + 0x118]
	0x03330D54 MOV X0, X1
	0x03330D58 MOV X20, X1
	0x03330D5C BL 0x332CB10
	0x03330D60 ADRP X26, 0x10A9000
	0x03330D64 LDRB W8, [X26 + 0x762]
	0x03330D68 MOV X23, X0
	0x03330D6C CBZ W8, 0x3330D8C
	0x03330D70 CBZ X23, 0x3330DA4
	0x03330D74 MOV X0, X23
	0x03330D78 MOV X1, X31
	0x03330D7C BL 0x3225708
	0x03330D80 LDR W23, [X23 + 0x10]
	0x03330D84 MOV X24, X0
	0x03330D88 B 0x3330DA8
	0x03330D8C ADRP X0, 0xDEA000
	0x03330D90 LDR X0, [X0 + 0x290]
	0x03330D94 BL 0x1C16CF4
	0x03330D98 MOVZ W8, 0x1
	0x03330D9C STRB W8, [X26 + 0x762]
	0x03330DA0 CBNZ X23, 0x3330D74
	0x03330DA4 MOV X24, X31
	0x03330DA8 ADRP X25, 0x10AC000
	0x03330DAC LDRB W8, [X25 + 0xD06]
	0x03330DB0 CBNZ W8, 0x3330DD4
	0x03330DB4 ADRP X0, 0xDEA000
	0x03330DB8 LDR X0, [X0 + 0x2D0]
	0x03330DBC BL 0x1C16CF4
	0x03330DC0 ADRP X0, 0xDF2000
	0x03330DC4 LDR X0, [X0 + 0x28]
	0x03330DC8 BL 0x1C16CF4
	0x03330DCC MOVZ W8, 0x1
	0x03330DD0 STRB W8, [X25 + 0xD06]
	0x03330DD4 CMP W21, W23
	0x03330DD8 B.NE 0x3331000
	0x03330DDC CBZ W21, 0x3330E04
	0x03330DE0 ADRP X8, 0xDEA000
	0x03330DE4 LDR X8, [X8 + 0x2D0]
	0x03330DE8 MOV X0, X22
	0x03330DEC MOV X1, X21
	0x03330DF0 MOV X2, X24
	0x03330DF4 LDR X4, [X8]
	0x03330DF8 MOV X3, X23
	0x03330DFC BL 0x1F96ECC
	0x03330E00 TBZ X0, 0x0, 0x3331000
	0x03330E04 LDP X22, X21, [X19 + 0x128]
	0x03330E08 MOV X0, X20
	0x03330E0C BL 0x332CB64
	0x03330E10 LDRB W8, [X26 + 0x762]
	0x03330E14 MOV X23, X0
	0x03330E18 CBNZ W8, 0x3330E30
	0x03330E1C ADRP X0, 0xDEA000
	0x03330E20 LDR X0, [X0 + 0x290]
	0x03330E24 BL 0x1C16CF4
	0x03330E28 MOVZ W8, 0x1
	0x03330E2C STRB W8, [X26 + 0x762]
	0x03330E30 CBZ X23, 0x3330E4C
	0x03330E34 MOV X0, X23
	0x03330E38 MOV X1, X31
	0x03330E3C BL 0x3225708
	0x03330E40 LDR W23, [X23 + 0x10]
	0x03330E44 MOV X24, X0
	0x03330E48 B 0x3330E50
	0x03330E4C MOV X24, X31
	0x03330E50 LDRB W8, [X25 + 0xD06]
	0x03330E54 CBNZ W8, 0x3330E78
	0x03330E58 ADRP X0, 0xDEA000
	0x03330E5C LDR X0, [X0 + 0x2D0]
	0x03330E60 BL 0x1C16CF4
	0x03330E64 ADRP X0, 0xDF2000
	0x03330E68 LDR X0, [X0 + 0x28]
	0x03330E6C BL 0x1C16CF4
	0x03330E70 MOVZ W8, 0x1
	0x03330E74 STRB W8, [X25 + 0xD06]
	0x03330E78 CMP W21, W23
	0x03330E7C B.NE 0x3331000
	0x03330E80 CBZ W21, 0x3330EA8
	0x03330E84 ADRP X8, 0xDEA000
	0x03330E88 LDR X8, [X8 + 0x2D0]
	0x03330E8C MOV X0, X22
	0x03330E90 MOV X1, X21
	0x03330E94 MOV X2, X24
	0x03330E98 LDR X4, [X8]
	0x03330E9C MOV X3, X23
	0x03330EA0 BL 0x1F96ECC
	0x03330EA4 TBZ X0, 0x0, 0x3331000
	0x03330EA8 LDP X22, X21, [X19 + 0x138]
	0x03330EAC MOV X0, X20
	0x03330EB0 BL 0x332CB90
	0x03330EB4 LDRB W8, [X26 + 0x762]
	0x03330EB8 MOV X23, X0
	0x03330EBC CBNZ W8, 0x3330ED4
	0x03330EC0 ADRP X0, 0xDEA000
	0x03330EC4 LDR X0, [X0 + 0x290]
	0x03330EC8 BL 0x1C16CF4
	0x03330ECC MOVZ W8, 0x1
	0x03330ED0 STRB W8, [X26 + 0x762]
	0x03330ED4 CBZ X23, 0x3330EF0
	0x03330ED8 MOV X0, X23
	0x03330EDC MOV X1, X31
	0x03330EE0 BL 0x3225708
	0x03330EE4 LDR W23, [X23 + 0x10]
	0x03330EE8 MOV X24, X0
	0x03330EEC B 0x3330EF4
	0x03330EF0 MOV X24, X31
	0x03330EF4 LDRB W8, [X25 + 0xD06]
	0x03330EF8 CBNZ W8, 0x3330F1C
	0x03330EFC ADRP X0, 0xDEA000
	0x03330F00 LDR X0, [X0 + 0x2D0]
	0x03330F04 BL 0x1C16CF4
	0x03330F08 ADRP X0, 0xDF2000
	0x03330F0C LDR X0, [X0 + 0x28]
	0x03330F10 BL 0x1C16CF4
	0x03330F14 MOVZ W8, 0x1
	0x03330F18 STRB W8, [X25 + 0xD06]
	0x03330F1C CMP W21, W23
	0x03330F20 B.NE 0x3331000
	0x03330F24 CBZ W21, 0x3330F4C
	0x03330F28 ADRP X8, 0xDEA000
	0x03330F2C LDR X8, [X8 + 0x2D0]
	0x03330F30 MOV X0, X22
	0x03330F34 MOV X1, X21
	0x03330F38 MOV X2, X24
	0x03330F3C LDR X4, [X8]
	0x03330F40 MOV X3, X23
	0x03330F44 BL 0x1F96ECC
	0x03330F48 TBZ X0, 0x0, 0x3331000
	0x03330F4C LDP X21, X19, [X19 + 0x148]
	0x03330F50 MOV X0, X20
	0x03330F54 BL 0x332CBE8
	0x03330F58 LDRB W8, [X26 + 0x762]
	0x03330F5C MOV X20, X0
	0x03330F60 CBNZ W8, 0x3330F78
	0x03330F64 ADRP X0, 0xDEA000
	0x03330F68 LDR X0, [X0 + 0x290]
	0x03330F6C BL 0x1C16CF4
	0x03330F70 MOVZ W8, 0x1
	0x03330F74 STRB W8, [X26 + 0x762]
	0x03330F78 CBZ X20, 0x3330F94
	0x03330F7C MOV X0, X20
	0x03330F80 MOV X1, X31
	0x03330F84 BL 0x3225708
	0x03330F88 LDR W20, [X20 + 0x10]
	0x03330F8C MOV X22, X0
	0x03330F90 B 0x3330F98
	0x03330F94 MOV X22, X31
	0x03330F98 LDRB W8, [X25 + 0xD06]
	0x03330F9C CBNZ W8, 0x3330FC0
	0x03330FA0 ADRP X0, 0xDEA000
	0x03330FA4 LDR X0, [X0 + 0x2D0]
	0x03330FA8 BL 0x1C16CF4
	0x03330FAC ADRP X0, 0xDF2000
	0x03330FB0 LDR X0, [X0 + 0x28]
	0x03330FB4 BL 0x1C16CF4
	0x03330FB8 MOVZ W8, 0x1
	0x03330FBC STRB W8, [X25 + 0xD06]
	0x03330FC0 CMP W19, W20
	0x03330FC4 B.NE 0x3331000
	0x03330FC8 CBZ W19, 0x333101C
	0x03330FCC ADRP X8, 0xDEA000
	0x03330FD0 LDR X8, [X8 + 0x2D0]
	0x03330FD4 MOV X0, X21
	0x03330FD8 MOV X1, X19
	0x03330FDC MOV X2, X22
	0x03330FE0 LDR X4, [X8]
	0x03330FE4 MOV X3, X20
	0x03330FE8 LDP X20, X19, [X31 + 0x40]
	0x03330FEC LDP X22, X21, [X31 + 0x30]
	0x03330FF0 LDP X24, X23, [X31 + 0x20]
	0x03330FF4 LDP X26, X25, [X31 + 0x10]
	0x03330FF8 LDR X30, [X31], #0x50
	0x03330FFC B 0x1F96ECC
	0x03331000 MOV W0, W31
	0x03331004 LDP X20, X19, [X31 + 0x40]
	0x03331008 LDP X22, X21, [X31 + 0x30]
	0x0333100C LDP X24, X23, [X31 + 0x20]
	0x03331010 LDP X26, X25, [X31 + 0x10]
	0x03331014 LDR X30, [X31], #0x50
	0x03331018 RET
	0x0333101C MOVZ W0, 0x1
	0x03331020 B 0x3331004
	0x03331024 STR X30, [X31 - 0x50]!
	0x03331028 STP X26, X25, [X31 + 0x10]
	0x0333102C STP X24, X23, [X31 + 0x20]
	0x03331030 STP X22, X21, [X31 + 0x30]
	0x03331034 STP X20, X19, [X31 + 0x40]
	0x03331038 LDR W8, [X0 + 0x8]
	0x0333103C CMP W8, 0x4
	0x03331040 B.NE 0x3331304
	0x03331044 LDR W8, [X0 + 0xC]
	0x03331048 MOV X19, X0
	0x0333104C CMP W8, 0x3
	0x03331050 B.NE 0x3331304
	0x03331054 LDP X22, X21, [X19 + 0x118]
	0x03331058 MOV X0, X1
	0x0333105C MOV X20, X1
	0x03331060 BL 0x332CB10
	0x03331064 ADRP X26, 0x10A8000
	0x03331068 LDRB W8, [X26 + 0x762]
	0x0333106C MOV X23, X0
	0x03331070 CBZ W8, 0x3331090
	0x03331074 CBZ X23, 0x33310A8
	0x03331078 MOV X0, X23
	0x0333107C MOV X1, X31
	0x03331080 BL 0x3225708
	0x03331084 LDR W23, [X23 + 0x10]
	0x03331088 MOV X24, X0
	0x0333108C B 0x33310AC
	0x03331090 ADRP X0, 0xDE9000
	0x03331094 LDR X0, [X0 + 0x290]
	0x03331098 BL 0x1C16CF4
	0x0333109C MOVZ W8, 0x1
	0x033310A0 STRB W8, [X26 + 0x762]
	0x033310A4 CBNZ X23, 0x3331078
	0x033310A8 MOV X24, X31
	0x033310AC ADRP X25, 0x10AB000
	0x033310B0 LDRB W8, [X25 + 0xD06]
	0x033310B4 CBNZ W8, 0x33310D8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move W8, [X0+8]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, [X0+12]
	013 Move X19, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X22, [X19+280]
	016 Move X21, [X19+288]
	017 Move X0, X1
	018 Move X20, X1
	019 Call FormatLiterals.get_Start, X0
	020 Move X26, 0x10AA000
	021 Move W8, [X26+1890]
	022 Move X23, X0
	023 Compare W8, 0
	024 JumpIfEqual {32}
	025 Compare X23, 0
	026 JumpIfEqual {39}
	027 Move X0, X23
	028 Move X1, X31
	029 Call String.GetRawStringData, X0
	030 Move W23, [X23+16]
	031 Move X24, X0
	032 Move X0, 0xDEB000
	033 Move X0, [X0+656]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X26+1890], W8
	037 Compare X23, 0
	038 JumpIfNotEqual {27}
	039 Move X24, X31
	040 Move X25, 0x10AD000
	041 Move W8, [X25+3334]
	042 Compare W8, 0
	043 JumpIfNotEqual {52}
	044 Move X0, 0xDEB000
	045 Move X0, [X0+720]
	046 Call 0x1C17CF4
	047 Move X0, 0xDF3000
	048 Move X0, [X0+40]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X25+3334], W8
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare W21, 0
	054 JumpIfEqual {67}
	055 Move X8, 0xDEB000
	056 Move X8, [X8+720]
	057 Move X0, X22
	058 Move X1, X21
	059 Move X2, X24
	060 Move X4, [X8]
	061 Move X3, X23
	062 Call 0x1F97ECC
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {308}
	067 Move X22, [X19+296]
	068 Move X21, [X19+304]
	069 Move X0, X20
	070 Call FormatLiterals.get_DayHourSep, X0
	071 Move W8, [X26+1890]
	072 Move X23, X0
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0xDEB000
	076 Move X0, [X0+656]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X26+1890], W8
	080 Compare X23, 0
	081 JumpIfEqual {87}
	082 Move X0, X23
	083 Move X1, X31
	084 Call String.GetRawStringData, X0
	085 Move W23, [X23+16]
	086 Move X24, X0
	087 Move X24, X31
	088 Move W8, [X25+3334]
	089 Compare W8, 0
	090 JumpIfNotEqual {99}
	091 Move X0, 0xDEB000
	092 Move X0, [X0+720]
	093 Call 0x1C17CF4
	094 Move X0, 0xDF3000
	095 Move X0, [X0+40]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X25+3334], W8
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Compare W21, 0
	101 JumpIfEqual {114}
	102 Move X8, 0xDEB000
	103 Move X8, [X8+720]
	104 Move X0, X22
	105 Move X1, X21
	106 Move X2, X24
	107 Move X4, [X8]
	108 Move X3, X23
	109 Call 0x1F97ECC
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {308}
	114 Move X22, [X19+312]
	115 Move X21, [X19+320]
	116 Move X0, X20
	117 Call FormatLiterals.get_HourMinuteSep, X0
	118 Move W8, [X26+1890]
	119 Move X23, X0
	120 Compare W8, 0
	121 JumpIfNotEqual {127}
	122 Move X0, 0xDEB000
	123 Move X0, [X0+656]
	124 Call 0x1C17CF4
	125 Move W8, 1
	126 Move [X26+1890], W8
	127 Compare X23, 0
	128 JumpIfEqual {134}
	129 Move X0, X23
	130 Move X1, X31
	131 Call String.GetRawStringData, X0
	132 Move W23, [X23+16]
	133 Move X24, X0
	134 Move X24, X31
	135 Move W8, [X25+3334]
	136 Compare W8, 0
	137 JumpIfNotEqual {146}
	138 Move X0, 0xDEB000
	139 Move X0, [X0+720]
	140 Call 0x1C17CF4
	141 Move X0, 0xDF3000
	142 Move X0, [X0+40]
	143 Call 0x1C17CF4
	144 Move W8, 1
	145 Move [X25+3334], W8
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Compare W21, 0
	148 JumpIfEqual {161}
	149 Move X8, 0xDEB000
	150 Move X8, [X8+720]
	151 Move X0, X22
	152 Move X1, X21
	153 Move X2, X24
	154 Move X4, [X8]
	155 Move X3, X23
	156 Call 0x1F97ECC
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {308}
	161 Move X22, [X19+328]
	162 Move X21, [X19+336]
	163 Move X0, X20
	164 Call FormatLiterals.get_MinuteSecondSep, X0
	165 Move W8, [X26+1890]
	166 Move X23, X0
	167 Compare W8, 0
	168 JumpIfNotEqual {174}
	169 Move X0, 0xDEB000
	170 Move X0, [X0+656]
	171 Call 0x1C17CF4
	172 Move W8, 1
	173 Move [X26+1890], W8
	174 Compare X23, 0
	175 JumpIfEqual {181}
	176 Move X0, X23
	177 Move X1, X31
	178 Call String.GetRawStringData, X0
	179 Move W23, [X23+16]
	180 Move X24, X0
	181 Move X24, X31
	182 Move W8, [X25+3334]
	183 Compare W8, 0
	184 JumpIfNotEqual {193}
	185 Move X0, 0xDEB000
	186 Move X0, [X0+720]
	187 Call 0x1C17CF4
	188 Move X0, 0xDF3000
	189 Move X0, [X0+40]
	190 Call 0x1C17CF4
	191 Move W8, 1
	192 Move [X25+3334], W8
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Compare W21, 0
	195 JumpIfEqual {208}
	196 Move X8, 0xDEB000
	197 Move X8, [X8+720]
	198 Move X0, X22
	199 Move X1, X21
	200 Move X2, X24
	201 Move X4, [X8]
	202 Move X3, X23
	203 Call 0x1F97ECC
	204 Move TEMP, X0
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfNotEqual {308}
	208 Move X22, [X19+344]
	209 Move X21, [X19+352]
	210 Move X0, X20
	211 Call FormatLiterals.get_SecondFractionSep, X0
	212 Move W8, [X26+1890]
	213 Move X23, X0
	214 Compare W8, 0
	215 JumpIfNotEqual {221}
	216 Move X0, 0xDEB000
	217 Move X0, [X0+656]
	218 Call 0x1C17CF4
	219 Move W8, 1
	220 Move [X26+1890], W8
	221 Compare X23, 0
	222 JumpIfEqual {228}
	223 Move X0, X23
	224 Move X1, X31
	225 Call String.GetRawStringData, X0
	226 Move W23, [X23+16]
	227 Move X24, X0
	228 Move X24, X31
	229 Move W8, [X25+3334]
	230 Compare W8, 0
	231 JumpIfNotEqual {240}
	232 Move X0, 0xDEB000
	233 Move X0, [X0+720]
	234 Call 0x1C17CF4
	235 Move X0, 0xDF3000
	236 Move X0, [X0+40]
	237 Call 0x1C17CF4
	238 Move W8, 1
	239 Move [X25+3334], W8
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Compare W21, 0
	242 JumpIfEqual {255}
	243 Move X8, 0xDEB000
	244 Move X8, [X8+720]
	245 Move X0, X22
	246 Move X1, X21
	247 Move X2, X24
	248 Move X4, [X8]
	249 Move X3, X23
	250 Call 0x1F97ECC
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfNotEqual {308}
	255 Move X21, [X19+360]
	256 Move X19, [X19+368]
	257 Move X0, X20
	258 Call FormatLiterals.get_End, X0
	259 Move W8, [X26+1890]
	260 Move X20, X0
	261 Compare W8, 0
	262 JumpIfNotEqual {268}
	263 Move X0, 0xDEB000
	264 Move X0, [X0+656]
	265 Call 0x1C17CF4
	266 Move W8, 1
	267 Move [X26+1890], W8
	268 Compare X20, 0
	269 JumpIfEqual {275}
	270 Move X0, X20
	271 Move X1, X31
	272 Call String.GetRawStringData, X0
	273 Move W20, [X20+16]
	274 Move X22, X0
	275 Move X22, X31
	276 Move W8, [X25+3334]
	277 Compare W8, 0
	278 JumpIfNotEqual {287}
	279 Move X0, 0xDEA000
	280 Move X0, [X0+720]
	281 Call 0x1C17CF4
	282 Move X0, 0xDF2000
	283 Move X0, [X0+40]
	284 Call 0x1C17CF4
	285 Move W8, 1
	286 Move [X25+3334], W8
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Compare W19, 0
	289 JumpIfEqual {319}
	290 Move X8, 0xDEA000
	291 Move X8, [X8+720]
	292 Move X0, X21
	293 Move X1, X19
	294 Move X2, X22
	295 Move X4, [X8]
	296 Move X3, X20
	297 Move X20, [X31+64]
	298 Move X19, [X31+72]
	299 Move X22, [X31+48]
	300 Move X21, [X31+56]
	301 Move X24, [X31+32]
	302 Move X23, [X31+40]
	303 Move X26, [X31+16]
	304 Move X25, [X31+24]
	305 Move X30, [X31+80]
	306 Call 0x1F97ECC
	307 Return X0
	308 Move W0, W31
	309 Move X20, [X31+64]
	310 Move X19, [X31+72]
	311 Move X22, [X31+48]
	312 Move X21, [X31+56]
	313 Move X24, [X31+32]
	314 Move X23, [X31+40]
	315 Move X26, [X31+16]
	316 Move X25, [X31+24]
	317 Move X30, [X31+80]
	318 Return X0
	319 Move W0, 1

Method: System.Boolean FullDMatch(System.Globalization.TimeSpanFormat/FormatLiterals pattern)

Disassembly:
	0x03332884 STUR V0, [X19 + 0xC8]
	0x03332888 STUR V1, [X19 + 0xB8]
	0x0333288C B 0x333289C
	0x03332890 LDP V1, V0, [X20]
	0x03332894 STUR V0, [X19 + 0xE8]
	0x03332898 STUR V1, [X19 + 0xD8]
	0x0333289C ADD W8, W8, 0x1
	0x033328A0 MOVZ W0, 0x1
	0x033328A4 STR W8, [X19 + 0x4]
	0x033328A8 LDP X20, X19, [X31 + 0x20]
	0x033328AC LDP X22, X21, [X31 + 0x10]
	0x033328B0 LDR X30, [X31], #0x30
	0x033328B4 RET
	0x033328B8 STR X30, [X31 - 0x10]!
	0x033328BC LDP W8, W9, [X0 + 0x14]
	0x033328C0 CMP W8, W9
	0x033328C4 B.GE 0x33328D0
	0x033328C8 ADD W8, W8, 0x1
	0x033328CC STR W8, [X0 + 0x14]
	0x033328D0 CMP W8, W9
	0x033328D4 B.GE 0x33328F0
	0x033328D8 LDR W9, [X0 + 0x8]
	0x033328DC CMP W8, W9
	0x033328E0 B.CS 0x3332900
	0x033328E4 LDR X9, [X0]
	0x033328E8 LDRH W8, [X9, W8, SXTW]
	0x033328EC B 0x33328F4
	0x033328F0 MOV W8, W31
	0x033328F4 STRH W8, [X0 + 0x10]
	0x033328F8 LDR X30, [X31], #0x10
	0x033328FC RET
	0x03332900 BL 0x1C16F28
	0x03332904 STR X30, [X31 - 0x10]!
	0x03332908 LDP W9, W10, [X0 + 0x14]
	0x0333290C SXTW X9, W9
	0x03332910 CMP W9, W10
	0x03332914 B.GE 0x333294C
	0x03332918 LDR W8, [X0 + 0x8]
	0x0333291C CMP W8, W9
	0x03332920 CSEL W11, W8, W9, HI
	0x03332924 CMP W11, W9
	0x03332928 B.EQ 0x333295C
	0x0333292C LDR X8, [X0]
	0x03332930 LDRH W8, [X8, X9, LSL #1]
	0x03332934 SUB W12, W8, 0x30
	0x03332938 CMP W12, 0x9
	0x0333293C B.HI 0x3332950
	0x03332940 ADD X9, X9, 0x1
	0x03332944 CMP W9, W10
	0x03332948 B.LT 0x3332924
	0x0333294C MOV W8, W31
	0x03332950 MOV W0, W8
	0x03332954 LDR X30, [X31], #0x10
	0x03332958 RET
	0x0333295C BL 0x1C16F28
	0x03332960 STP X30, X19, [X31 - 0x10]!
	0x03332964 MOV X19, X0
	0x03332968 LDRH W8, [X19 + 0x10]
	0x0333296C CMP W8, 0x9
	0x03332970 B.EQ 0x333297C
	0x03332974 CMP W8, 0x20
	0x03332978 B.NE 0x3332988
	0x0333297C MOV X0, X19
	0x03332980 BL 0x33328B8
	0x03332984 B 0x3332968
	0x03332988 LDP X30, X19, [X31], #0x10
	0x0333298C RET
	0x03332990 SUB X31, X31, 0x40
	0x03332994 STP X30, X23, [X31 + 0x10]
	0x03332998 STP X22, X21, [X31 + 0x20]
	0x0333299C STP X20, X19, [X31 + 0x30]
	0x033329A0 ADRP X22, 0x10AA000
	0x033329A4 LDRB W8, [X22 + 0xCD2]
	0x033329A8 MOV X21, X2
	0x033329AC MOV X19, X1
	0x033329B0 MOV X20, X0
	0x033329B4 TBNZ X8, 0x0, 0x33329CC
	0x033329B8 ADRP X0, 0xDF6000
	0x033329BC LDR X0, [X0 + 0x568]
	0x033329C0 BL 0x1C16CF4
	0x033329C4 MOVZ W8, 0x1
	0x033329C8 STRB W8, [X22 + 0xCD2]
	0x033329CC ADD X2, X31, 0xC
	0x033329D0 MOVZ W1, 0x17
	0x033329D4 MOV X0, X20
	0x033329D8 MOV X3, X21
	0x033329DC STR W31, [X31 + 0xC]
	0x033329E0 STR X31, [X19]
	0x033329E4 BL 0x3332B50
	0x033329E8 MOV W8, W0
	0x033329EC MOV W0, W31
	0x033329F0 TBZ X8, 0x0, 0x3332B34
	0x033329F4 LDRSW X8, [X31 + 0xC]
	0x033329F8 MOVZ X9, 0x6800
	0x033329FC MOVK X9, 0x61C40000
	0x03332A00 MOVK X9, 0x8
	0x03332A04 MUL X8, X8, X9
	0x03332A08 STR X8, [X19]
	0x03332A0C LDRH W8, [X20 + 0x10]
	0x03332A10 CMP W8, 0x3A
	0x03332A14 B.NE 0x3332B10
	0x03332A18 MOV X0, X20
	0x03332A1C BL 0x33328B8
	0x03332A20 ADD X2, X31, 0xC
	0x03332A24 MOVZ W1, 0x3B
	0x03332A28 MOV X0, X20
	0x03332A2C MOV X3, X21
	0x03332A30 BL 0x3332B50
	0x03332A34 TBZ X0, 0x0, 0x3332B30
	0x03332A38 LDR X8, [X19]
	0x03332A3C LDRSW X9, [X31 + 0xC]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move W8, [X0+8]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, [X0+12]
	013 Move X19, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X22, [X19+280]
	016 Move X21, [X19+288]
	017 Move X0, X1
	018 Move X20, X1
	019 Call FormatLiterals.get_Start, X0
	020 Move X26, 0x10A8000
	021 Move W8, [X26+1890]
	022 Move X23, X0
	023 Compare W8, 0
	024 JumpIfEqual {32}
	025 Compare X23, 0
	026 JumpIfEqual {39}
	027 Move X0, X23
	028 Move X1, X31
	029 Call String.GetRawStringData, X0
	030 Move W23, [X23+16]
	031 Move X24, X0
	032 Move X0, 0xDE9000
	033 Move X0, [X0+656]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X26+1890], W8
	037 Compare X23, 0
	038 JumpIfNotEqual {27}
	039 Move X24, X31
	040 Move X25, 0x10AB000
	041 Move W8, [X25+3334]
	042 Compare W8, 0
	043 JumpIfNotEqual {52}
	044 Move X0, 0xDE9000
	045 Move X0, [X0+720]
	046 Call 0x1C17CF4
	047 Move X0, 0xDF1000
	048 Move X0, [X0+40]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X25+3334], W8
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare W21, 0
	054 JumpIfEqual {67}
	055 Move X8, 0xDE9000
	056 Move X8, [X8+720]
	057 Move X0, X22
	058 Move X1, X21
	059 Move X2, X24
	060 Move X4, [X8]
	061 Move X3, X23
	062 Call 0x1F97ECC
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {120}
	067 Move X21, [X19+296]
	068 Move X19, [X19+304]
	069 Move X0, X20
	070 Call FormatLiterals.get_End, X0
	071 Move W8, [X26+1890]
	072 Move X20, X0
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0xDE9000
	076 Move X0, [X0+656]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X26+1890], W8
	080 Compare X20, 0
	081 JumpIfEqual {87}
	082 Move X0, X20
	083 Move X1, X31
	084 Call String.GetRawStringData, X0
	085 Move W20, [X20+16]
	086 Move X22, X0
	087 Move X22, X31
	088 Move W8, [X25+3334]
	089 Compare W8, 0
	090 JumpIfNotEqual {99}
	091 Move X0, 0xDE9000
	092 Move X0, [X0+720]
	093 Call 0x1C17CF4
	094 Move X0, 0xDF1000
	095 Move X0, [X0+40]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X25+3334], W8
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Compare W19, 0
	101 JumpIfEqual {131}
	102 Move X8, 0xDE9000
	103 Move X8, [X8+720]
	104 Move X0, X21
	105 Move X1, X19
	106 Move X2, X22
	107 Move X4, [X8]
	108 Move X3, X20
	109 Move X20, [X31+64]
	110 Move X19, [X31+72]
	111 Move X22, [X31+48]
	112 Move X21, [X31+56]
	113 Move X24, [X31+32]
	114 Move X23, [X31+40]
	115 Move X26, [X31+16]
	116 Move X25, [X31+24]
	117 Move X30, [X31+80]
	118 Call 0x1F97ECC
	119 Return X0
	120 Move W0, W31
	121 Move X20, [X31+64]
	122 Move X19, [X31+72]
	123 Move X22, [X31+48]
	124 Move X21, [X31+56]
	125 Move X24, [X31+32]
	126 Move X23, [X31+40]
	127 Move X26, [X31+16]
	128 Move X25, [X31+24]
	129 Move X30, [X31+80]
	130 Return X0
	131 Move W0, 1

Method: System.Boolean FullHMMatch(System.Globalization.TimeSpanFormat/FormatLiterals pattern)

Disassembly:
	0x03332624 LDP X20, X19, [X31 + 0x10]
	0x03332628 LDP X30, X21, [X31], #0x20
	0x0333262C RET
	0x03332630 STP X30, X21, [X31 - 0x20]!
	0x03332634 STP X20, X19, [X31 + 0x10]
	0x03332638 ADRP X21, 0x10AA000
	0x0333263C ADRP X20, 0xDF6000
	0x03332640 MOV X19, X8
	0x03332644 LDRB W8, [X21 + 0xCCC]
	0x03332648 LDR X20, [X20 + 0x530]
	0x0333264C TBNZ X8, 0x0, 0x3332664
	0x03332650 ADRP X0, 0xDF6000
	0x03332654 LDR X0, [X0 + 0x530]
	0x03332658 BL 0x1C16CF4
	0x0333265C MOVZ W8, 0x1
	0x03332660 STRB W8, [X21 + 0xCCC]
	0x03332664 LDR X0, [X20]
	0x03332668 LDR W8, [X0 + 0xE0]
	0x0333266C CBNZ W8, 0x3332678
	0x03332670 BL 0x1C16DFC
	0x03332674 LDR X0, [X20]
	0x03332678 LDR X8, [X0 + 0xB8]
	0x0333267C LDR X9, [X8 + 0x48]
	0x03332680 LDUR V0, [X8 + 0x38]
	0x03332684 LDUR V1, [X8 + 0x28]
	0x03332688 STR X9, [X19 + 0x20]
	0x0333268C STP V1, V0, [X19]
	0x03332690 LDP X20, X19, [X31 + 0x10]
	0x03332694 LDP X30, X21, [X31], #0x20
	0x03332698 RET
	0x0333269C STP X30, X23, [X31 - 0x30]!
	0x033326A0 STP X22, X21, [X31 + 0x10]
	0x033326A4 STP X20, X19, [X31 + 0x20]
	0x033326A8 ADRP X23, 0x10AA000
	0x033326AC LDRB W8, [X23 + 0xCCE]
	0x033326B0 MOV X22, X3
	0x033326B4 MOV X19, X2
	0x033326B8 MOV X21, X1
	0x033326BC MOV X20, X0
	0x033326C0 TBNZ X8, 0x0, 0x33326D8
	0x033326C4 ADRP X0, 0xDF6000
	0x033326C8 LDR X0, [X0 + 0x568]
	0x033326CC BL 0x1C16CF4
	0x033326D0 MOVZ W8, 0x1
	0x033326D4 STRB W8, [X23 + 0xCCE]
	0x033326D8 LDR W9, [X20 + 0x8]
	0x033326DC CMP W9, 0x5
	0x033326E0 B.GT 0x3332728
	0x033326E4 LDR W8, [X20 + 0x4]
	0x033326E8 CMP W8, 0xB
	0x033326EC B.GE 0x3332728
	0x033326F0 ADD W10, W9, 0x1
	0x033326F4 CMP W9, 0x4
	0x033326F8 STR W10, [X20 + 0x8]
	0x033326FC B.HI 0x3332750
	0x03332700 ADRP X10, 0xFFFFFFFFFD864000
	0x03332704 MOV W9, W9
	0x03332708 ADD X10, X10, 0x6C3
	0x0333270C ADR X11, 0x10
	0x03332710 LDRB W12, [X10, X9, LSL]
	0x03332714 ADD X11, X11, X12, 0x2, LSL
	0x03332718 BR X11
	0x0333271C STR X21, [X20 + 0x118]
	0x03332720 ADD X9, X20, 0x120
	0x03332724 B 0x3332788
	0x03332728 ADRP X8, 0xDF6000
	0x0333272C LDR X8, [X8 + 0x568]
	0x03332730 MOVZ W1, 0x2
	0x03332734 MOV X0, X22
	0x03332738 MOV X3, X31
	0x0333273C LDR X2, [X8]
	0x03332740 MOV X4, X31
	0x03332744 BL 0x332D348
	0x03332748 MOV W0, W31
	0x0333274C B 0x3332798
	0x03332750 ADD X9, X20, 0x170
	0x03332754 STR X21, [X20 + 0x168]
	0x03332758 B 0x3332788
	0x0333275C STR X21, [X20 + 0x128]
	0x03332760 ADD X9, X20, 0x130
	0x03332764 B 0x3332788
	0x03332768 STR X21, [X20 + 0x138]
	0x0333276C ADD X9, X20, 0x140
	0x03332770 B 0x3332788
	0x03332774 STR X21, [X20 + 0x148]
	0x03332778 ADD X9, X20, 0x150
	0x0333277C B 0x3332788
	0x03332780 STR X21, [X20 + 0x158]
	0x03332784 ADD X9, X20, 0x160
	0x03332788 ADD W8, W8, 0x1
	0x0333278C MOVZ W0, 0x1
	0x03332790 STR X19, [X9]
	0x03332794 STR W8, [X20 + 0x4]
	0x03332798 LDP X20, X19, [X31 + 0x20]
	0x0333279C LDP X22, X21, [X31 + 0x10]
	0x033327A0 LDP X30, X23, [X31], #0x30
	0x033327A4 RET
	0x033327A8 STR X30, [X31 - 0x30]!
	0x033327AC STP X22, X21, [X31 + 0x10]
	0x033327B0 STP X20, X19, [X31 + 0x20]
	0x033327B4 ADRP X22, 0x10AA000
	0x033327B8 LDRB W8, [X22 + 0xCCF]
	0x033327BC MOV X21, X2
	0x033327C0 MOV X20, X1
	0x033327C4 MOV X19, X0
	0x033327C8 TBNZ X8, 0x0, 0x33327E0
	0x033327CC ADRP X0, 0xDF6000
	0x033327D0 LDR X0, [X0 + 0x568]
	0x033327D4 BL 0x1C16CF4
	0x033327D8 MOVZ W8, 0x1
	0x033327DC STRB W8, [X22 + 0xCCF]
	0x033327E0 LDR W9, [X19 + 0xC]
	0x033327E4 CMP W9, 0x4
	0x033327E8 B.GT 0x3332834
	0x033327EC LDR W8, [X19 + 0x4]
	0x033327F0 CMP W8, 0xB
	0x033327F4 B.GE 0x3332834
	0x033327F8 ADD W10, W9, 0x1
	0x033327FC CMP W9, 0x3
	0x03332800 STR W10, [X19 + 0xC]
	0x03332804 B.HI 0x333285C
	0x03332808 ADRP X10, 0xFFFFFFFFFD864000
	0x0333280C MOV W9, W9
	0x03332810 ADD X10, X10, 0x6C8
	0x03332814 ADR X11, 0x10
	0x03332818 LDRB W12, [X10, X9, LSL]
	0x0333281C ADD X11, X11, X12, 0x2, LSL
	0x03332820 BR X11
	0x03332824 LDP V1, V0, [X20]
	0x03332828 STUR V0, [X19 + 0x88]
	0x0333282C STUR V1, [X19 + 0x78]
	0x03332830 B 0x333289C
	0x03332834 ADRP X8, 0xDF6000
	0x03332838 LDR X8, [X8 + 0x568]
	0x0333283C MOVZ W1, 0x2
	0x03332840 MOV X0, X21
	0x03332844 MOV X3, X31
	0x03332848 LDR X2, [X8]
	0x0333284C MOV X4, X31
	0x03332850 BL 0x332D348
	0x03332854 MOV W0, W31
	0x03332858 B 0x33328A8
	0x0333285C LDP V1, V0, [X20]
	0x03332860 ADD X9, X19, 0xF8
	0x03332864 STR V0, [X9 + 0x1]
	0x03332868 STUR V1, [X19 + 0xF8]
	0x0333286C B 0x333289C
	0x03332870 LDP V1, V0, [X20]
	0x03332874 STUR V0, [X19 + 0xA8]
	0x03332878 STUR V1, [X19 + 0x98]
	0x0333287C B 0x333289C
	0x03332880 LDP V1, V0, [X20]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move W8, [X0+8]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, [X0+12]
	013 Move X19, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X22, [X19+280]
	016 Move X21, [X19+288]
	017 Move X0, X1
	018 Move X20, X1
	019 Call FormatLiterals.get_Start, X0
	020 Move X26, 0x10A8000
	021 Move W8, [X26+1890]
	022 Move X23, X0
	023 Compare W8, 0
	024 JumpIfEqual {32}
	025 Compare X23, 0
	026 JumpIfEqual {39}
	027 Move X0, X23
	028 Move X1, X31
	029 Call String.GetRawStringData, X0
	030 Move W23, [X23+16]
	031 Move X24, X0
	032 Move X0, 0xDE9000
	033 Move X0, [X0+656]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X26+1890], W8
	037 Compare X23, 0
	038 JumpIfNotEqual {27}
	039 Move X24, X31
	040 Move X25, 0x10AB000
	041 Move W8, [X25+3334]
	042 Compare W8, 0
	043 JumpIfNotEqual {52}
	044 Move X0, 0xDE9000
	045 Move X0, [X0+720]
	046 Call 0x1C17CF4
	047 Move X0, 0xDF1000
	048 Move X0, [X0+40]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X25+3334], W8
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare W21, 0
	054 JumpIfEqual {67}
	055 Move X8, 0xDE9000
	056 Move X8, [X8+720]
	057 Move X0, X22
	058 Move X1, X21
	059 Move X2, X24
	060 Move X4, [X8]
	061 Move X3, X23
	062 Call 0x1F97ECC
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {167}
	067 Move X22, [X19+296]
	068 Move X21, [X19+304]
	069 Move X0, X20
	070 Call FormatLiterals.get_HourMinuteSep, X0
	071 Move W8, [X26+1890]
	072 Move X23, X0
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0xDE9000
	076 Move X0, [X0+656]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X26+1890], W8
	080 Compare X23, 0
	081 JumpIfEqual {87}
	082 Move X0, X23
	083 Move X1, X31
	084 Call String.GetRawStringData, X0
	085 Move W23, [X23+16]
	086 Move X24, X0
	087 Move X24, X31
	088 Move W8, [X25+3334]
	089 Compare W8, 0
	090 JumpIfNotEqual {99}
	091 Move X0, 0xDE9000
	092 Move X0, [X0+720]
	093 Call 0x1C17CF4
	094 Move X0, 0xDF1000
	095 Move X0, [X0+40]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X25+3334], W8
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Compare W21, 0
	101 JumpIfEqual {114}
	102 Move X8, 0xDE9000
	103 Move X8, [X8+720]
	104 Move X0, X22
	105 Move X1, X21
	106 Move X2, X24
	107 Move X4, [X8]
	108 Move X3, X23
	109 Call 0x1F97ECC
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {167}
	114 Move X21, [X19+312]
	115 Move X19, [X19+320]
	116 Move X0, X20
	117 Call FormatLiterals.get_End, X0
	118 Move W8, [X26+1890]
	119 Move X20, X0
	120 Compare W8, 0
	121 JumpIfNotEqual {127}
	122 Move X0, 0xDE9000
	123 Move X0, [X0+656]
	124 Call 0x1C17CF4
	125 Move W8, 1
	126 Move [X26+1890], W8
	127 Compare X20, 0
	128 JumpIfEqual {134}
	129 Move X0, X20
	130 Move X1, X31
	131 Call String.GetRawStringData, X0
	132 Move W20, [X20+16]
	133 Move X22, X0
	134 Move X22, X31
	135 Move W8, [X25+3334]
	136 Compare W8, 0
	137 JumpIfNotEqual {146}
	138 Move X0, 0xDE9000
	139 Move X0, [X0+720]
	140 Call 0x1C17CF4
	141 Move X0, 0xDF1000
	142 Move X0, [X0+40]
	143 Call 0x1C17CF4
	144 Move W8, 1
	145 Move [X25+3334], W8
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Compare W19, 0
	148 JumpIfEqual {178}
	149 Move X8, 0xDE9000
	150 Move X8, [X8+720]
	151 Move X0, X21
	152 Move X1, X19
	153 Move X2, X22
	154 Move X4, [X8]
	155 Move X3, X20
	156 Move X20, [X31+64]
	157 Move X19, [X31+72]
	158 Move X22, [X31+48]
	159 Move X21, [X31+56]
	160 Move X24, [X31+32]
	161 Move X23, [X31+40]
	162 Move X26, [X31+16]
	163 Move X25, [X31+24]
	164 Move X30, [X31+80]
	165 Call 0x1F97ECC
	166 Return X0
	167 Move W0, W31
	168 Move X20, [X31+64]
	169 Move X19, [X31+72]
	170 Move X22, [X31+48]
	171 Move X21, [X31+56]
	172 Move X24, [X31+32]
	173 Move X23, [X31+40]
	174 Move X26, [X31+16]
	175 Move X25, [X31+24]
	176 Move X30, [X31+80]
	177 Return X0
	178 Move W0, 1

Method: System.Boolean FullDHMMatch(System.Globalization.TimeSpanFormat/FormatLiterals pattern)

Disassembly:
	0x03332024 RET
	0x03332028 LDR W19, [X31 + 0x8]
	0x0333202C LDP W10, W9, [X31 + 0xF4]
	0x03332030 LDP W12, W11, [X31 + 0xEC]
	0x03332034 LDP W13, W14, [X31 + 0xE4]
	0x03332038 ANDS W31, W19, 0x1
	0x0333203C ADD X8, X31, 0x98
	0x03332040 MOVZ W15, 0x2
	0x03332044 CSET W0, EQ
	0x03332048 ADD X1, X31, 0x98
	0x0333204C ADD X2, X31, 0x78
	0x03332050 ADD X3, X31, 0x58
	0x03332054 ADD X4, X31, 0x38
	0x03332058 ADD X5, X31, 0x18
	0x0333205C ADD X6, X31, 0xC0
	0x03332060 STRB W31, [X31 + 0x9B]
	0x03332064 STURH W31, [X31 + 0x79]
	0x03332068 STRB W31, [X31 + 0x7B]
	0x0333206C STR W31, [X31 + 0x94]
	0x03332070 STUR X31, [X31 + 0x84]
	0x03332074 STUR X31, [X31 + 0x8C]
	0x03332078 STRB W31, [X31 + 0x5B]
	0x0333207C STURH W31, [X31 + 0x59]
	0x03332080 STR W31, [X31 + 0x74]
	0x03332084 STUR X31, [X31 + 0x64]
	0x03332088 STUR X31, [X31 + 0x6C]
	0x0333208C STRB W31, [X31 + 0x3B]
	0x03332090 STURH W31, [X31 + 0x39]
	0x03332094 STUR X31, [X31 + 0x4C]
	0x03332098 STUR X31, [X31 + 0x44]
	0x0333209C STR W31, [X31 + 0x54]
	0x033320A0 STURH W31, [X31 + 0x19]
	0x033320A4 STRB W31, [X31 + 0x1B]
	0x033320A8 STR W31, [X31 + 0x34]
	0x033320AC STUR X31, [X31 + 0x24]
	0x033320B0 STRB W15, [X31 + 0x98]
	0x033320B4 STURH W31, [X8 + 0x1]
	0x033320B8 STR W31, [X31 + 0xB4]
	0x033320BC STRB W15, [X31 + 0x78]
	0x033320C0 STRB W15, [X31 + 0x58]
	0x033320C4 STRB W15, [X31 + 0x38]
	0x033320C8 STRB W15, [X31 + 0x18]
	0x033320CC STP W9, W31, [X31 + 0x9C]
	0x033320D0 STUR X31, [X8 + 0x14]
	0x033320D4 STUR X31, [X8 + 0xC]
	0x033320D8 STP W10, W31, [X31 + 0x7C]
	0x033320DC STP W11, W31, [X31 + 0x5C]
	0x033320E0 STP W12, W31, [X31 + 0x3C]
	0x033320E4 STP W13, W14, [X31 + 0x1C]
	0x033320E8 STUR X31, [X31 + 0x2C]
	0x033320EC BL 0x332CE08
	0x033320F0 TBZ X0, 0x0, 0x3332114
	0x033320F4 LDR X8, [X31 + 0xC0]
	0x033320F8 TBZ X19, 0x0, 0x3332104
	0x033320FC SUB X8, X31, X8
	0x03332100 STR X8, [X31 + 0xC0]
	0x03332104 LDR X9, [X31 + 0x10]
	0x03332108 MOVZ W0, 0x1
	0x0333210C STR X8, [X9]
	0x03332110 B 0x3332008
	0x03332114 ADRP X8, 0xDF6000
	0x03332118 LDR X8, [X8 + 0x580]
	0x0333211C MOVZ W1, 0x4
	0x03332120 LDR X2, [X8]
	0x03332124 B 0x3331FF4
	0x03332128 MOV X0, X26
	0x0333212C MOV X1, X31
	0x03332130 BL 0x3235B68
	0x03332134 ADRP X8, 0xDC3000
	0x03332138 LDR X8, [X8 + 0x170]
	0x0333213C ADD X1, X31, 0xFC
	0x03332140 STRH W25, [X31 + 0xFC]
	0x03332144 LDR X0, [X8]
	0x03332148 BL 0x1C16E04
	0x0333214C ADRP X8, 0xDF6000
	0x03332150 LDR X8, [X8 + 0x590]
	0x03332154 MOV X3, X0
	0x03332158 LDR X0, [X31 + 0x10]
	0x0333215C MOVZ W1, 0x3
	0x03332160 LDR X2, [X8]
	0x03332164 B 0x3331FFC
	0x03332168 BL 0x1C16F28
	0x0333216C STP X1, X2, [X0]
	0x03332170 STR W3, [X0 + 0x10]
	0x03332174 RET
	0x03332178 STR X30, [X31 - 0x10]!
	0x0333217C CMP W1, 0x1
	0x03332180 MOVZ W8, 0x2
	0x03332184 MOV X4, X2
	0x03332188 STR W31, [X2]
	0x0333218C CSEL W2, W8, W1, EQ
	0x03332190 ADD X3, X31, 0xC
	0x03332194 STR W31, [X31 + 0xC]
	0x03332198 BL 0x33321A8
	0x0333219C AND W0, W0, 0x1
	0x033321A0 LDR X30, [X31], #0x10
	0x033321A4 RET
	0x033321A8 STP X30, X27, [X31 - 0x50]!
	0x033321AC STP X26, X25, [X31 + 0x10]
	0x033321B0 STP X24, X23, [X31 + 0x20]
	0x033321B4 STP X22, X21, [X31 + 0x30]
	0x033321B8 STP X20, X19, [X31 + 0x40]
	0x033321BC MOV X19, X4
	0x033321C0 MOV X21, X3
	0x033321C4 MOV W20, W1
	0x033321C8 CMP W2, 0x1
	0x033321CC B.LT 0x3332224
	0x033321D0 MOV W23, W2
	0x033321D4 MOV X22, X0
	0x033321D8 MOV W26, W31
	0x033321DC MOV W25, W31
	0x033321E0 MOV W24, W31
	0x033321E4 MOVZ W27, 0xA
	0x033321E8 MOV X0, X22
	0x033321EC BL 0x3332300
	0x033321F0 SUB W8, W0, 0x30
	0x033321F4 AND W8, W8, 0xFFFF
	0x033321F8 CMP W8, 0xA
	0x033321FC B.CS 0x3332234
	0x03332200 MUL W8, W26, W27
	0x03332204 ADD W8, W8, W0, UXTH
	0x03332208 ADD W24, W24, 0x1
	0x0333220C SUBS W26, W8, 0x30
	0x03332210 CINC W25, W25, EQ
	0x03332214 CMP W23, W24
	0x03332218 B.NE 0x33321E8
	0x0333221C MOV W24, W23
	0x03332220 B 0x3332244
	0x03332224 MOV W24, W31
	0x03332228 MOV W25, W31
	0x0333222C MOV W26, W31
	0x03332230 B 0x3332244
	0x03332234 LDR W8, [X22 + 0x10]
	0x03332238 SUBS W8, W8, 0x1
	0x0333223C B.LT 0x3332244
	0x03332240 STR W8, [X22 + 0x10]
	0x03332244 STR W25, [X21]
	0x03332248 CMP W24, W20
	0x0333224C STR W26, [X19]
	0x03332250 LDP X20, X19, [X31 + 0x40]
	0x03332254 LDP X22, X21, [X31 + 0x30]
	0x03332258 LDP X24, X23, [X31 + 0x20]
	0x0333225C LDP X26, X25, [X31 + 0x10]
	0x03332260 CSET W0, GE
	0x03332264 LDP X30, X27, [X31], #0x50
	0x03332268 RET
	0x0333226C STP X30, X23, [X31 - 0x30]!
	0x03332270 STP X22, X21, [X31 + 0x10]
	0x03332274 STP X20, X19, [X31 + 0x20]
	0x03332278 CBZ X1, 0x33322FC
	0x0333227C MOV X19, X1
	0x03332280 MOV X20, X0
	0x03332284 MOV X0, X1
	0x03332288 MOV X1, X31
	0x0333228C BL 0x323260C
	0x03332290 CMP W0, 0x0
	0x03332294 CSET W22, GT
	0x03332298 CMP W0, 0x1
	0x0333229C B.LT 0x33322E4
	0x033322A0 MOV W21, W31
	0x033322A4 MOV X0, X19
	0x033322A8 MOV W1, W21
	0x033322AC MOV X2, X31
	0x033322B0 BL 0x3232E88
	0x033322B4 AND W23, W0, 0xFFFF
	0x033322B8 MOV X0, X20
	0x033322BC BL 0x3332300
	0x033322C0 CMP W23, W0, UXTH
	0x033322C4 B.NE 0x33322E4
	0x033322C8 MOV X0, X19
	0x033322CC MOV X1, X31
	0x033322D0 ADD W21, W21, 0x1
	0x033322D4 BL 0x323260C
	0x033322D8 CMP W21, W0
	0x033322DC CSET W22, LT
	0x033322E0 B.LT 0x33322A4
	0x033322E4 ORN W8, W31, W22, 0x0
	0x033322E8 LDP X20, X19, [X31 + 0x20]
	0x033322EC LDP X22, X21, [X31 + 0x10]
	0x033322F0 AND W0, W8, 0x1
	0x033322F4 LDP X30, X23, [X31], #0x30
	0x033322F8 RET
	0x033322FC BL 0x1C16F20
	0x03332300 STR X30, [X31 - 0x20]!
	0x03332304 STP X20, X19, [X31 + 0x10]
	0x03332308 ADRP X20, 0x10AA000
	0x0333230C LDRB W8, [X20 + 0xCCA]
	0x03332310 MOV X19, X0
	0x03332314 TBNZ X8, 0x0, 0x333232C
	0x03332318 ADRP X0, 0xDF0000
	0x0333231C LDR X0, [X0 + 0x28]
	0x03332320 BL 0x1C16CF4
	0x03332324 MOVZ W8, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move W8, [X0+8]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, [X0+12]
	013 Move X19, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X22, [X19+280]
	016 Move X21, [X19+288]
	017 Move X0, X1
	018 Move X20, X1
	019 Call FormatLiterals.get_Start, X0
	020 Move X26, 0x10A8000
	021 Move W8, [X26+1890]
	022 Move X23, X0
	023 Compare W8, 0
	024 JumpIfEqual {32}
	025 Compare X23, 0
	026 JumpIfEqual {39}
	027 Move X0, X23
	028 Move X1, X31
	029 Call String.GetRawStringData, X0
	030 Move W23, [X23+16]
	031 Move X24, X0
	032 Move X0, 0xDE9000
	033 Move X0, [X0+656]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X26+1890], W8
	037 Compare X23, 0
	038 JumpIfNotEqual {27}
	039 Move X24, X31
	040 Move X25, 0x10AB000
	041 Move W8, [X25+3334]
	042 Compare W8, 0
	043 JumpIfNotEqual {52}
	044 Move X0, 0xDE9000
	045 Move X0, [X0+720]
	046 Call 0x1C17CF4
	047 Move X0, 0xDF1000
	048 Move X0, [X0+40]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X25+3334], W8
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare W21, 0
	054 JumpIfEqual {67}
	055 Move X8, 0xDE9000
	056 Move X8, [X8+720]
	057 Move X0, X22
	058 Move X1, X21
	059 Move X2, X24
	060 Move X4, [X8]
	061 Move X3, X23
	062 Call 0x1F97ECC
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {214}
	067 Move X22, [X19+296]
	068 Move X21, [X19+304]
	069 Move X0, X20
	070 Call FormatLiterals.get_DayHourSep, X0
	071 Move W8, [X26+1890]
	072 Move X23, X0
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0xDE9000
	076 Move X0, [X0+656]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X26+1890], W8
	080 Compare X23, 0
	081 JumpIfEqual {87}
	082 Move X0, X23
	083 Move X1, X31
	084 Call String.GetRawStringData, X0
	085 Move W23, [X23+16]
	086 Move X24, X0
	087 Move X24, X31
	088 Move W8, [X25+3334]
	089 Compare W8, 0
	090 JumpIfNotEqual {99}
	091 Move X0, 0xDE9000
	092 Move X0, [X0+720]
	093 Call 0x1C17CF4
	094 Move X0, 0xDF1000
	095 Move X0, [X0+40]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X25+3334], W8
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Compare W21, 0
	101 JumpIfEqual {114}
	102 Move X8, 0xDE9000
	103 Move X8, [X8+720]
	104 Move X0, X22
	105 Move X1, X21
	106 Move X2, X24
	107 Move X4, [X8]
	108 Move X3, X23
	109 Call 0x1F97ECC
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {214}
	114 Move X22, [X19+312]
	115 Move X21, [X19+320]
	116 Move X0, X20
	117 Call FormatLiterals.get_HourMinuteSep, X0
	118 Move W8, [X26+1890]
	119 Move X23, X0
	120 Compare W8, 0
	121 JumpIfNotEqual {127}
	122 Move X0, 0xDE9000
	123 Move X0, [X0+656]
	124 Call 0x1C17CF4
	125 Move W8, 1
	126 Move [X26+1890], W8
	127 Compare X23, 0
	128 JumpIfEqual {134}
	129 Move X0, X23
	130 Move X1, X31
	131 Call String.GetRawStringData, X0
	132 Move W23, [X23+16]
	133 Move X24, X0
	134 Move X24, X31
	135 Move W8, [X25+3334]
	136 Compare W8, 0
	137 JumpIfNotEqual {146}
	138 Move X0, 0xDE9000
	139 Move X0, [X0+720]
	140 Call 0x1C17CF4
	141 Move X0, 0xDF1000
	142 Move X0, [X0+40]
	143 Call 0x1C17CF4
	144 Move W8, 1
	145 Move [X25+3334], W8
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Compare W21, 0
	148 JumpIfEqual {161}
	149 Move X8, 0xDE9000
	150 Move X8, [X8+720]
	151 Move X0, X22
	152 Move X1, X21
	153 Move X2, X24
	154 Move X4, [X8]
	155 Move X3, X23
	156 Call 0x1F97ECC
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {214}
	161 Move X21, [X19+328]
	162 Move X19, [X19+336]
	163 Move X0, X20
	164 Call FormatLiterals.get_End, X0
	165 Move W8, [X26+1890]
	166 Move X20, X0
	167 Compare W8, 0
	168 JumpIfNotEqual {174}
	169 Move X0, 0xDE9000
	170 Move X0, [X0+656]
	171 Call 0x1C17CF4
	172 Move W8, 1
	173 Move [X26+1890], W8
	174 Compare X20, 0
	175 JumpIfEqual {181}
	176 Move X0, X20
	177 Move X1, X31
	178 Call String.GetRawStringData, X0
	179 Move W20, [X20+16]
	180 Move X22, X0
	181 Move X22, X31
	182 Move W8, [X25+3334]
	183 Compare W8, 0
	184 JumpIfNotEqual {193}
	185 Move X0, 0xDE9000
	186 Move X0, [X0+720]
	187 Call 0x1C17CF4
	188 Move X0, 0xDF1000
	189 Move X0, [X0+40]
	190 Call 0x1C17CF4
	191 Move W8, 1
	192 Move [X25+3334], W8
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Compare W19, 0
	195 JumpIfEqual {225}
	196 Move X8, 0xDE9000
	197 Move X8, [X8+720]
	198 Move X0, X21
	199 Move X1, X19
	200 Move X2, X22
	201 Move X4, [X8]
	202 Move X3, X20
	203 Move X20, [X31+64]
	204 Move X19, [X31+72]
	205 Move X22, [X31+48]
	206 Move X21, [X31+56]
	207 Move X24, [X31+32]
	208 Move X23, [X31+40]
	209 Move X26, [X31+16]
	210 Move X25, [X31+24]
	211 Move X30, [X31+80]
	212 Call 0x1F97ECC
	213 Return X0
	214 Move W0, W31
	215 Move X20, [X31+64]
	216 Move X19, [X31+72]
	217 Move X22, [X31+48]
	218 Move X21, [X31+56]
	219 Move X24, [X31+32]
	220 Move X23, [X31+40]
	221 Move X26, [X31+16]
	222 Move X25, [X31+24]
	223 Move X30, [X31+80]
	224 Return X0
	225 Move W0, 1

Method: System.Boolean FullHMSMatch(System.Globalization.TimeSpanFormat/FormatLiterals pattern)

Disassembly:
	0x03331D20 BL 0x33679B4
	0x03331D24 CMP W0, 0x2
	0x03331D28 CSET W8, GT
	0x03331D2C ORR W8, W19, W8, 0x0
	0x03331D30 STR W0, [X31 + 0xE0]
	0x03331D34 TBNZ X8, 0x0, 0x3331FE4
	0x03331D38 CMP W0, 0x1
	0x03331D3C MOV W1, W0
	0x03331D40 CSEL W2, W29, W0, EQ
	0x03331D44 ADD X0, X31, 0xC8
	0x03331D48 ADD X3, X31, 0xFC
	0x03331D4C ADD X4, X31, 0xEC
	0x03331D50 STR W31, [X31 + 0xEC]
	0x03331D54 STR W31, [X31 + 0xFC]
	0x03331D58 BL 0x33321A8
	0x03331D5C TBZ X0, 0x0, 0x3331FE4
	0x03331D60 MOVZ W19, 0x1
	0x03331D64 B 0x3331F94
	0x03331D68 MOVZ W0, 0x10
	0x03331D6C MOV X1, X31
	0x03331D70 BL 0x3235A9C
	0x03331D74 ADRP X8, 0xDF7000
	0x03331D78 LDR X8, [X8 + 0x588]
	0x03331D7C MOV X26, X0
	0x03331D80 LDR X8, [X8]
	0x03331D84 LDR W9, [X8 + 0xE0]
	0x03331D88 CBNZ W9, 0x3331D94
	0x03331D8C MOV X0, X8
	0x03331D90 BL 0x1C16DFC
	0x03331D94 ADD X4, X31, 0xE0
	0x03331D98 MOV X0, X22
	0x03331D9C MOV X1, X21
	0x03331DA0 MOV W2, W23
	0x03331DA4 MOV X3, X26
	0x03331DA8 MOV X5, X31
	0x03331DAC BL 0x3373EC8
	0x03331DB0 TBZ X0, 0x0, 0x3332128
	0x03331DB4 ADD X0, X31, 0xC8
	0x03331DB8 MOV X1, X26
	0x03331DBC BL 0x333226C
	0x03331DC0 MOV W25, W0
	0x03331DC4 MOV X0, X26
	0x03331DC8 MOV X1, X31
	0x03331DCC BL 0x3235B68
	0x03331DD0 TBNZ X25, 0x0, 0x3331F94
	0x03331DD4 B 0x3331FE4
	0x03331DD8 LDR X0, [X27]
	0x03331DDC LDR W8, [X0 + 0xE0]
	0x03331DE0 CBNZ W8, 0x3331DE8
	0x03331DE4 BL 0x1C16DFC
	0x03331DE8 MOVZ W3, 0x6D
	0x03331DEC MOV X0, X22
	0x03331DF0 MOV X1, X21
	0x03331DF4 MOV W2, W23
	0x03331DF8 MOV X4, X31
	0x03331DFC BL 0x33679B4
	0x03331E00 CMP W0, 0x2
	0x03331E04 CSET W8, GT
	0x03331E08 ORR W8, W24, W8, 0x0
	0x03331E0C STR W0, [X31 + 0xE0]
	0x03331E10 TBNZ X8, 0x0, 0x3331FE4
	0x03331E14 CMP W0, 0x1
	0x03331E18 MOV W1, W0
	0x03331E1C CSEL W2, W29, W0, EQ
	0x03331E20 ADD X0, X31, 0xC8
	0x03331E24 ADD X3, X31, 0xFC
	0x03331E28 ADD X4, X31, 0xF0
	0x03331E2C STR W31, [X31 + 0xF0]
	0x03331E30 STR W31, [X31 + 0xFC]
	0x03331E34 BL 0x33321A8
	0x03331E38 TBZ X0, 0x0, 0x3331FE4
	0x03331E3C MOVZ W24, 0x1
	0x03331E40 B 0x3331F94
	0x03331E44 LDR X0, [X27]
	0x03331E48 LDR W8, [X0 + 0xE0]
	0x03331E4C CBNZ W8, 0x3331E54
	0x03331E50 BL 0x1C16DFC
	0x03331E54 MOV X0, X22
	0x03331E58 MOV X1, X21
	0x03331E5C MOV W2, W23
	0x03331E60 MOV W3, W25
	0x03331E64 MOV X4, X31
	0x03331E68 BL 0x33679B4
	0x03331E6C LDR W9, [X31 + 0xC]
	0x03331E70 CMP W0, 0x8
	0x03331E74 CSET W8, GT
	0x03331E78 STR W0, [X31 + 0xE0]
	0x03331E7C ORR W8, W9, W8, 0x0
	0x03331E80 STR W31, [X31 + 0xBC]
	0x03331E84 TBNZ X8, 0x0, 0x3331FE4
	0x03331E88 CMP W0, 0x2
	0x03331E8C MOVZ W8, 0x8
	0x03331E90 CSINC W1, W0, W31, GE
	0x03331E94 CSEL W2, W8, W0, LT
	0x03331E98 ADD X0, X31, 0xC8
	0x03331E9C ADD X3, X31, 0xBC
	0x03331EA0 ADD X4, X31, 0xF8
	0x03331EA4 BL 0x33321A8
	0x03331EA8 TBZ X0, 0x0, 0x3331FE4
	0x03331EAC MOVZ W8, 0x1
	0x03331EB0 STR W8, [X31 + 0xC]
	0x03331EB4 B 0x3331F94
	0x03331EB8 LDR X0, [X27]
	0x03331EBC LDR W8, [X0 + 0xE0]
	0x03331EC0 CBNZ W8, 0x3331EC8
	0x03331EC4 BL 0x1C16DFC
	0x03331EC8 MOV X0, X22
	0x03331ECC MOV X1, X21
	0x03331ED0 MOV W2, W23
	0x03331ED4 MOV W3, W25
	0x03331ED8 MOV X4, X31
	0x03331EDC BL 0x33679B4
	0x03331EE0 CMP W0, 0x7
	0x03331EE4 CSET W8, GT
	0x03331EE8 ORR W8, W20, W8, 0x0
	0x03331EEC STR W0, [X31 + 0xE0]
	0x03331EF0 TBNZ X8, 0x0, 0x3331FE4
	0x03331EF4 MOV W1, W0
	0x03331EF8 ADD X0, X31, 0xC8
	0x03331EFC ADD X3, X31, 0xE8
	0x03331F00 ADD X4, X31, 0xE4
	0x03331F04 MOV W2, W1
	0x03331F08 BL 0x33321A8
	0x03331F0C TBZ X0, 0x0, 0x3331FE4
	0x03331F10 MOVZ W20, 0x1
	0x03331F14 B 0x3331F94
	0x03331F18 LDR X0, [X27]
	0x03331F1C LDR W8, [X0 + 0xE0]
	0x03331F20 CBNZ W8, 0x3331F28
	0x03331F24 BL 0x1C16DFC
	0x03331F28 MOV X0, X22
	0x03331F2C MOV X1, X21
	0x03331F30 MOV W2, W23
	0x03331F34 MOV W3, W25
	0x03331F38 MOV X4, X31
	0x03331F3C BL 0x33679B4
	0x03331F40 CMP W0, 0x2
	0x03331F44 CSET W8, GT
	0x03331F48 ORR W8, W28, W8, 0x0
	0x03331F4C STR W0, [X31 + 0xE0]
	0x03331F50 TBNZ X8, 0x0, 0x3331FE4
	0x03331F54 CMP W0, 0x1
	0x03331F58 MOV W1, W0
	0x03331F5C CSEL W2, W29, W0, EQ
	0x03331F60 ADD X0, X31, 0xC8
	0x03331F64 ADD X3, X31, 0xFC
	0x03331F68 ADD X4, X31, 0xF4
	0x03331F6C STR W31, [X31 + 0xF4]
	0x03331F70 STR W31, [X31 + 0xFC]
	0x03331F74 BL 0x33321A8
	0x03331F78 TBZ X0, 0x0, 0x3331FE4
	0x03331F7C MOVZ W28, 0x1
	0x03331F80 B 0x3331F94
	0x03331F84 MOV W8, W31
	0x03331F88 CMP W8, W25, UXTH
	0x03331F8C B.NE 0x3331FE4
	0x03331F90 STR W29, [X31 + 0xE0]
	0x03331F94 LDR W8, [X31 + 0xE0]
	0x03331F98 ADD W23, W8, W23
	0x03331F9C CMP W23, W21
	0x03331FA0 B.LT 0x3331B6C
	0x03331FA4 ADRP X19, 0x10AB000
	0x03331FA8 LDRB W8, [X19 + 0xCC9]
	0x03331FAC TBNZ X8, 0x0, 0x3331FC4
	0x03331FB0 ADRP X0, 0xDF1000
	0x03331FB4 LDR X0, [X0 + 0x28]
	0x03331FB8 BL 0x1C16CF4
	0x03331FBC MOVZ W8, 0x1
	0x03331FC0 STRB W8, [X19 + 0xCC9]
	0x03331FC4 LDR W8, [X31 + 0xD0]
	0x03331FC8 LDR W9, [X31 + 0xD8]
	0x03331FCC SUB W8, W8, 0x1
	0x03331FD0 CMP W9, W8
	0x03331FD4 B.GE 0x3332028
	0x03331FD8 ADRP X8, 0xDF7000
	0x03331FDC LDR X8, [X8 + 0x568]
	0x03331FE0 B 0x3331FEC
	0x03331FE4 ADRP X8, 0xDF1000
	0x03331FE8 LDR X8, [X8 + 0x618]
	0x03331FEC LDR X2, [X8]
	0x03331FF0 MOVZ W1, 0x2
	0x03331FF4 LDR X0, [X31 + 0x10]
	0x03331FF8 MOV X3, X31
	0x03331FFC MOV X4, X31
	0x03332000 BL 0x332D348
	0x03332004 MOV W0, W31
	0x03332008 LDP X20, X19, [X31 + 0x150]
	0x0333200C LDP X22, X21, [X31 + 0x140]
	0x03332010 LDP X24, X23, [X31 + 0x130]
	0x03332014 LDP X26, X25, [X31 + 0x120]
	0x03332018 LDP X28, X27, [X31 + 0x110]
	0x0333201C LDP X29, X30, [X31 + 0x100]
	0x03332020 ADD X31, X31, 0x160

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move W8, [X0+8]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, [X0+12]
	013 Move X19, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X22, [X19+280]
	016 Move X21, [X19+288]
	017 Move X0, X1
	018 Move X20, X1
	019 Call FormatLiterals.get_Start, X0
	020 Move X26, 0x10A9000
	021 Move W8, [X26+1890]
	022 Move X23, X0
	023 Compare W8, 0
	024 JumpIfEqual {32}
	025 Compare X23, 0
	026 JumpIfEqual {39}
	027 Move X0, X23
	028 Move X1, X31
	029 Call String.GetRawStringData, X0
	030 Move W23, [X23+16]
	031 Move X24, X0
	032 Move X0, 0xDEA000
	033 Move X0, [X0+656]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X26+1890], W8
	037 Compare X23, 0
	038 JumpIfNotEqual {27}
	039 Move X24, X31
	040 Move X25, 0x10AC000
	041 Move W8, [X25+3334]
	042 Compare W8, 0
	043 JumpIfNotEqual {52}
	044 Move X0, 0xDEA000
	045 Move X0, [X0+720]
	046 Call 0x1C17CF4
	047 Move X0, 0xDF2000
	048 Move X0, [X0+40]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X25+3334], W8
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare W21, 0
	054 JumpIfEqual {67}
	055 Move X8, 0xDEA000
	056 Move X8, [X8+720]
	057 Move X0, X22
	058 Move X1, X21
	059 Move X2, X24
	060 Move X4, [X8]
	061 Move X3, X23
	062 Call 0x1F97ECC
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {214}
	067 Move X22, [X19+296]
	068 Move X21, [X19+304]
	069 Move X0, X20
	070 Call FormatLiterals.get_HourMinuteSep, X0
	071 Move W8, [X26+1890]
	072 Move X23, X0
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0xDEA000
	076 Move X0, [X0+656]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X26+1890], W8
	080 Compare X23, 0
	081 JumpIfEqual {87}
	082 Move X0, X23
	083 Move X1, X31
	084 Call String.GetRawStringData, X0
	085 Move W23, [X23+16]
	086 Move X24, X0
	087 Move X24, X31
	088 Move W8, [X25+3334]
	089 Compare W8, 0
	090 JumpIfNotEqual {99}
	091 Move X0, 0xDEA000
	092 Move X0, [X0+720]
	093 Call 0x1C17CF4
	094 Move X0, 0xDF2000
	095 Move X0, [X0+40]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X25+3334], W8
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Compare W21, 0
	101 JumpIfEqual {114}
	102 Move X8, 0xDEA000
	103 Move X8, [X8+720]
	104 Move X0, X22
	105 Move X1, X21
	106 Move X2, X24
	107 Move X4, [X8]
	108 Move X3, X23
	109 Call 0x1F97ECC
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {214}
	114 Move X22, [X19+312]
	115 Move X21, [X19+320]
	116 Move X0, X20
	117 Call FormatLiterals.get_MinuteSecondSep, X0
	118 Move W8, [X26+1890]
	119 Move X23, X0
	120 Compare W8, 0
	121 JumpIfNotEqual {127}
	122 Move X0, 0xDEA000
	123 Move X0, [X0+656]
	124 Call 0x1C17CF4
	125 Move W8, 1
	126 Move [X26+1890], W8
	127 Compare X23, 0
	128 JumpIfEqual {134}
	129 Move X0, X23
	130 Move X1, X31
	131 Call String.GetRawStringData, X0
	132 Move W23, [X23+16]
	133 Move X24, X0
	134 Move X24, X31
	135 Move W8, [X25+3334]
	136 Compare W8, 0
	137 JumpIfNotEqual {146}
	138 Move X0, 0xDEA000
	139 Move X0, [X0+720]
	140 Call 0x1C17CF4
	141 Move X0, 0xDF2000
	142 Move X0, [X0+40]
	143 Call 0x1C17CF4
	144 Move W8, 1
	145 Move [X25+3334], W8
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Compare W21, 0
	148 JumpIfEqual {161}
	149 Move X8, 0xDEA000
	150 Move X8, [X8+720]
	151 Move X0, X22
	152 Move X1, X21
	153 Move X2, X24
	154 Move X4, [X8]
	155 Move X3, X23
	156 Call 0x1F97ECC
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {214}
	161 Move X21, [X19+328]
	162 Move X19, [X19+336]
	163 Move X0, X20
	164 Call FormatLiterals.get_End, X0
	165 Move W8, [X26+1890]
	166 Move X20, X0
	167 Compare W8, 0
	168 JumpIfNotEqual {174}
	169 Move X0, 0xDEA000
	170 Move X0, [X0+656]
	171 Call 0x1C17CF4
	172 Move W8, 1
	173 Move [X26+1890], W8
	174 Compare X20, 0
	175 JumpIfEqual {181}
	176 Move X0, X20
	177 Move X1, X31
	178 Call String.GetRawStringData, X0
	179 Move W20, [X20+16]
	180 Move X22, X0
	181 Move X22, X31
	182 Move W8, [X25+3334]
	183 Compare W8, 0
	184 JumpIfNotEqual {193}
	185 Move X0, 0xDEA000
	186 Move X0, [X0+720]
	187 Call 0x1C17CF4
	188 Move X0, 0xDF2000
	189 Move X0, [X0+40]
	190 Call 0x1C17CF4
	191 Move W8, 1
	192 Move [X25+3334], W8
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Compare W19, 0
	195 JumpIfEqual {225}
	196 Move X8, 0xDEA000
	197 Move X8, [X8+720]
	198 Move X0, X21
	199 Move X1, X19
	200 Move X2, X22
	201 Move X4, [X8]
	202 Move X3, X20
	203 Move X20, [X31+64]
	204 Move X19, [X31+72]
	205 Move X22, [X31+48]
	206 Move X21, [X31+56]
	207 Move X24, [X31+32]
	208 Move X23, [X31+40]
	209 Move X26, [X31+16]
	210 Move X25, [X31+24]
	211 Move X30, [X31+80]
	212 Call 0x1F97ECC
	213 Return X0
	214 Move W0, W31
	215 Move X20, [X31+64]
	216 Move X19, [X31+72]
	217 Move X22, [X31+48]
	218 Move X21, [X31+56]
	219 Move X24, [X31+32]
	220 Move X23, [X31+40]
	221 Move X26, [X31+16]
	222 Move X25, [X31+24]
	223 Move X30, [X31+80]
	224 Return X0
	225 Move W0, 1

Method: System.Boolean FullDHMSMatch(System.Globalization.TimeSpanFormat/FormatLiterals pattern)

Disassembly:
	0x033315D8 MOV X1, X19
	0x033315DC MOV X2, X22
	0x033315E0 LDR X4, [X8]
	0x033315E4 MOV X3, X20
	0x033315E8 LDP X20, X19, [X31 + 0x40]
	0x033315EC LDP X22, X21, [X31 + 0x30]
	0x033315F0 LDP X24, X23, [X31 + 0x20]
	0x033315F4 LDP X26, X25, [X31 + 0x10]
	0x033315F8 LDR X30, [X31], #0x50
	0x033315FC B 0x1F96ECC
	0x03331600 MOV W0, W31
	0x03331604 LDP X20, X19, [X31 + 0x40]
	0x03331608 LDP X22, X21, [X31 + 0x30]
	0x0333160C LDP X24, X23, [X31 + 0x20]
	0x03331610 LDP X26, X25, [X31 + 0x10]
	0x03331614 LDR X30, [X31], #0x50
	0x03331618 RET
	0x0333161C MOVZ W0, 0x1
	0x03331620 B 0x3331604
	0x03331624 STR X30, [X31 - 0x50]!
	0x03331628 STP X26, X25, [X31 + 0x10]
	0x0333162C STP X24, X23, [X31 + 0x20]
	0x03331630 STP X22, X21, [X31 + 0x30]
	0x03331634 STP X20, X19, [X31 + 0x40]
	0x03331638 LDR W8, [X0 + 0x8]
	0x0333163C CMP W8, 0x3
	0x03331640 B.NE 0x3331860
	0x03331644 LDR W8, [X0 + 0xC]
	0x03331648 MOV X19, X0
	0x0333164C CMP W8, 0x2
	0x03331650 B.NE 0x3331860
	0x03331654 LDP X22, X21, [X19 + 0x118]
	0x03331658 MOV X0, X1
	0x0333165C MOV X20, X1
	0x03331660 BL 0x332CB10
	0x03331664 ADRP X26, 0x10A8000
	0x03331668 LDRB W8, [X26 + 0x762]
	0x0333166C MOV X23, X0
	0x03331670 CBZ W8, 0x3331690
	0x03331674 CBZ X23, 0x33316A8
	0x03331678 MOV X0, X23
	0x0333167C MOV X1, X31
	0x03331680 BL 0x3225708
	0x03331684 LDR W23, [X23 + 0x10]
	0x03331688 MOV X24, X0
	0x0333168C B 0x33316AC
	0x03331690 ADRP X0, 0xDE9000
	0x03331694 LDR X0, [X0 + 0x290]
	0x03331698 BL 0x1C16CF4
	0x0333169C MOVZ W8, 0x1
	0x033316A0 STRB W8, [X26 + 0x762]
	0x033316A4 CBNZ X23, 0x3331678
	0x033316A8 MOV X24, X31
	0x033316AC ADRP X25, 0x10AB000
	0x033316B0 LDRB W8, [X25 + 0xD06]
	0x033316B4 CBNZ W8, 0x33316D8
	0x033316B8 ADRP X0, 0xDE9000
	0x033316BC LDR X0, [X0 + 0x2D0]
	0x033316C0 BL 0x1C16CF4
	0x033316C4 ADRP X0, 0xDF1000
	0x033316C8 LDR X0, [X0 + 0x28]
	0x033316CC BL 0x1C16CF4
	0x033316D0 MOVZ W8, 0x1
	0x033316D4 STRB W8, [X25 + 0xD06]
	0x033316D8 CMP W21, W23
	0x033316DC B.NE 0x3331860
	0x033316E0 CBZ W21, 0x3331708
	0x033316E4 ADRP X8, 0xDE9000
	0x033316E8 LDR X8, [X8 + 0x2D0]
	0x033316EC MOV X0, X22
	0x033316F0 MOV X1, X21
	0x033316F4 MOV X2, X24
	0x033316F8 LDR X4, [X8]
	0x033316FC MOV X3, X23
	0x03331700 BL 0x1F96ECC
	0x03331704 TBZ X0, 0x0, 0x3331860
	0x03331708 LDP X22, X21, [X19 + 0x128]
	0x0333170C MOV X0, X20
	0x03331710 BL 0x332CB64
	0x03331714 LDRB W8, [X26 + 0x762]
	0x03331718 MOV X23, X0
	0x0333171C CBNZ W8, 0x3331734
	0x03331720 ADRP X0, 0xDE9000
	0x03331724 LDR X0, [X0 + 0x290]
	0x03331728 BL 0x1C16CF4
	0x0333172C MOVZ W8, 0x1
	0x03331730 STRB W8, [X26 + 0x762]
	0x03331734 CBZ X23, 0x3331750
	0x03331738 MOV X0, X23
	0x0333173C MOV X1, X31
	0x03331740 BL 0x3225708
	0x03331744 LDR W23, [X23 + 0x10]
	0x03331748 MOV X24, X0
	0x0333174C B 0x3331754
	0x03331750 MOV X24, X31
	0x03331754 LDRB W8, [X25 + 0xD06]
	0x03331758 CBNZ W8, 0x333177C
	0x0333175C ADRP X0, 0xDE9000
	0x03331760 LDR X0, [X0 + 0x2D0]
	0x03331764 BL 0x1C16CF4
	0x03331768 ADRP X0, 0xDF1000
	0x0333176C LDR X0, [X0 + 0x28]
	0x03331770 BL 0x1C16CF4
	0x03331774 MOVZ W8, 0x1
	0x03331778 STRB W8, [X25 + 0xD06]
	0x0333177C CMP W21, W23
	0x03331780 B.NE 0x3331860
	0x03331784 CBZ W21, 0x33317AC
	0x03331788 ADRP X8, 0xDE9000
	0x0333178C LDR X8, [X8 + 0x2D0]
	0x03331790 MOV X0, X22
	0x03331794 MOV X1, X21
	0x03331798 MOV X2, X24
	0x0333179C LDR X4, [X8]
	0x033317A0 MOV X3, X23
	0x033317A4 BL 0x1F96ECC
	0x033317A8 TBZ X0, 0x0, 0x3331860
	0x033317AC LDP X21, X19, [X19 + 0x138]
	0x033317B0 MOV X0, X20
	0x033317B4 BL 0x332CBE8
	0x033317B8 LDRB W8, [X26 + 0x762]
	0x033317BC MOV X20, X0
	0x033317C0 CBNZ W8, 0x33317D8
	0x033317C4 ADRP X0, 0xDE9000
	0x033317C8 LDR X0, [X0 + 0x290]
	0x033317CC BL 0x1C16CF4
	0x033317D0 MOVZ W8, 0x1
	0x033317D4 STRB W8, [X26 + 0x762]
	0x033317D8 CBZ X20, 0x33317F4
	0x033317DC MOV X0, X20
	0x033317E0 MOV X1, X31
	0x033317E4 BL 0x3225708
	0x033317E8 LDR W20, [X20 + 0x10]
	0x033317EC MOV X22, X0
	0x033317F0 B 0x33317F8
	0x033317F4 MOV X22, X31
	0x033317F8 LDRB W8, [X25 + 0xD06]
	0x033317FC CBNZ W8, 0x3331820
	0x03331800 ADRP X0, 0xDE9000
	0x03331804 LDR X0, [X0 + 0x2D0]
	0x03331808 BL 0x1C16CF4
	0x0333180C ADRP X0, 0xDF1000
	0x03331810 LDR X0, [X0 + 0x28]
	0x03331814 BL 0x1C16CF4
	0x03331818 MOVZ W8, 0x1
	0x0333181C STRB W8, [X25 + 0xD06]
	0x03331820 CMP W19, W20
	0x03331824 B.NE 0x3331860
	0x03331828 CBZ W19, 0x333187C
	0x0333182C ADRP X8, 0xDE9000
	0x03331830 LDR X8, [X8 + 0x2D0]
	0x03331834 MOV X0, X21
	0x03331838 MOV X1, X19
	0x0333183C MOV X2, X22
	0x03331840 LDR X4, [X8]
	0x03331844 MOV X3, X20
	0x03331848 LDP X20, X19, [X31 + 0x40]
	0x0333184C LDP X22, X21, [X31 + 0x30]
	0x03331850 LDP X24, X23, [X31 + 0x20]
	0x03331854 LDP X26, X25, [X31 + 0x10]
	0x03331858 LDR X30, [X31], #0x50
	0x0333185C B 0x1F96ECC
	0x03331860 MOV W0, W31
	0x03331864 LDP X20, X19, [X31 + 0x40]
	0x03331868 LDP X22, X21, [X31 + 0x30]
	0x0333186C LDP X24, X23, [X31 + 0x20]
	0x03331870 LDP X26, X25, [X31 + 0x10]
	0x03331874 LDR X30, [X31], #0x50
	0x03331878 RET
	0x0333187C MOVZ W0, 0x1
	0x03331880 B 0x3331864
	0x03331884 STR X30, [X31 - 0x50]!
	0x03331888 STP X26, X25, [X31 + 0x10]
	0x0333188C STP X24, X23, [X31 + 0x20]
	0x03331890 STP X22, X21, [X31 + 0x30]
	0x03331894 STP X20, X19, [X31 + 0x40]
	0x03331898 LDR W8, [X0 + 0x8]
	0x0333189C CMP W8, 0x2
	0x033318A0 B.NE 0x3331A1C
	0x033318A4 LDR W8, [X0 + 0xC]
	0x033318A8 MOV X19, X0
	0x033318AC CMP W8, 0x1
	0x033318B0 B.NE 0x3331A1C
	0x033318B4 LDP X22, X21, [X19 + 0x118]
	0x033318B8 MOV X0, X1
	0x033318BC MOV X20, X1
	0x033318C0 BL 0x332CB10
	0x033318C4 ADRP X26, 0x10A8000
	0x033318C8 LDRB W8, [X26 + 0x762]
	0x033318CC MOV X23, X0
	0x033318D0 CBZ W8, 0x33318F0
	0x033318D4 CBZ X23, 0x3331908
	0x033318D8 MOV X0, X23
	0x033318DC MOV X1, X31
	0x033318E0 BL 0x3225708
	0x033318E4 LDR W23, [X23 + 0x10]
	0x033318E8 MOV X24, X0
	0x033318EC B 0x333190C
	0x033318F0 ADRP X0, 0xDE9000
	0x033318F4 LDR X0, [X0 + 0x290]
	0x033318F8 BL 0x1C16CF4
	0x033318FC MOVZ W8, 0x1
	0x03331900 STRB W8, [X26 + 0x762]
	0x03331904 CBNZ X23, 0x33318D8
	0x03331908 MOV X24, X31
	0x0333190C ADRP X25, 0x10AB000
	0x03331910 LDRB W8, [X25 + 0xD06]
	0x03331914 CBNZ W8, 0x3331938
	0x03331918 ADRP X0, 0xDE9000
	0x0333191C LDR X0, [X0 + 0x2D0]
	0x03331920 BL 0x1C16CF4
	0x03331924 ADRP X0, 0xDF1000
	0x03331928 LDR X0, [X0 + 0x28]
	0x0333192C BL 0x1C16CF4
	0x03331930 MOVZ W8, 0x1
	0x03331934 STRB W8, [X25 + 0xD06]
	0x03331938 CMP W21, W23
	0x0333193C B.NE 0x3331A1C
	0x03331940 CBZ W21, 0x3331968
	0x03331944 ADRP X8, 0xDE9000
	0x03331948 LDR X8, [X8 + 0x2D0]
	0x0333194C MOV X0, X22
	0x03331950 MOV X1, X21
	0x03331954 MOV X2, X24
	0x03331958 LDR X4, [X8]
	0x0333195C MOV X3, X23
	0x03331960 BL 0x1F96ECC
	0x03331964 TBZ X0, 0x0, 0x3331A1C
	0x03331968 LDP X21, X19, [X19 + 0x128]
	0x0333196C MOV X0, X20
	0x03331970 BL 0x332CBE8
	0x03331974 LDRB W8, [X26 + 0x762]
	0x03331978 MOV X20, X0
	0x0333197C CBNZ W8, 0x3331994

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move W8, [X0+8]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, [X0+12]
	013 Move X19, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X22, [X19+280]
	016 Move X21, [X19+288]
	017 Move X0, X1
	018 Move X20, X1
	019 Call FormatLiterals.get_Start, X0
	020 Move X26, 0x10A9000
	021 Move W8, [X26+1890]
	022 Move X23, X0
	023 Compare W8, 0
	024 JumpIfEqual {32}
	025 Compare X23, 0
	026 JumpIfEqual {39}
	027 Move X0, X23
	028 Move X1, X31
	029 Call String.GetRawStringData, X0
	030 Move W23, [X23+16]
	031 Move X24, X0
	032 Move X0, 0xDEA000
	033 Move X0, [X0+656]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X26+1890], W8
	037 Compare X23, 0
	038 JumpIfNotEqual {27}
	039 Move X24, X31
	040 Move X25, 0x10AC000
	041 Move W8, [X25+3334]
	042 Compare W8, 0
	043 JumpIfNotEqual {52}
	044 Move X0, 0xDEA000
	045 Move X0, [X0+720]
	046 Call 0x1C17CF4
	047 Move X0, 0xDF2000
	048 Move X0, [X0+40]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X25+3334], W8
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare W21, 0
	054 JumpIfEqual {67}
	055 Move X8, 0xDEA000
	056 Move X8, [X8+720]
	057 Move X0, X22
	058 Move X1, X21
	059 Move X2, X24
	060 Move X4, [X8]
	061 Move X3, X23
	062 Call 0x1F97ECC
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {261}
	067 Move X22, [X19+296]
	068 Move X21, [X19+304]
	069 Move X0, X20
	070 Call FormatLiterals.get_DayHourSep, X0
	071 Move W8, [X26+1890]
	072 Move X23, X0
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0xDEA000
	076 Move X0, [X0+656]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X26+1890], W8
	080 Compare X23, 0
	081 JumpIfEqual {87}
	082 Move X0, X23
	083 Move X1, X31
	084 Call String.GetRawStringData, X0
	085 Move W23, [X23+16]
	086 Move X24, X0
	087 Move X24, X31
	088 Move W8, [X25+3334]
	089 Compare W8, 0
	090 JumpIfNotEqual {99}
	091 Move X0, 0xDEA000
	092 Move X0, [X0+720]
	093 Call 0x1C17CF4
	094 Move X0, 0xDF2000
	095 Move X0, [X0+40]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X25+3334], W8
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Compare W21, 0
	101 JumpIfEqual {114}
	102 Move X8, 0xDEA000
	103 Move X8, [X8+720]
	104 Move X0, X22
	105 Move X1, X21
	106 Move X2, X24
	107 Move X4, [X8]
	108 Move X3, X23
	109 Call 0x1F97ECC
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {261}
	114 Move X22, [X19+312]
	115 Move X21, [X19+320]
	116 Move X0, X20
	117 Call FormatLiterals.get_HourMinuteSep, X0
	118 Move W8, [X26+1890]
	119 Move X23, X0
	120 Compare W8, 0
	121 JumpIfNotEqual {127}
	122 Move X0, 0xDEA000
	123 Move X0, [X0+656]
	124 Call 0x1C17CF4
	125 Move W8, 1
	126 Move [X26+1890], W8
	127 Compare X23, 0
	128 JumpIfEqual {134}
	129 Move X0, X23
	130 Move X1, X31
	131 Call String.GetRawStringData, X0
	132 Move W23, [X23+16]
	133 Move X24, X0
	134 Move X24, X31
	135 Move W8, [X25+3334]
	136 Compare W8, 0
	137 JumpIfNotEqual {146}
	138 Move X0, 0xDEA000
	139 Move X0, [X0+720]
	140 Call 0x1C17CF4
	141 Move X0, 0xDF2000
	142 Move X0, [X0+40]
	143 Call 0x1C17CF4
	144 Move W8, 1
	145 Move [X25+3334], W8
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Compare W21, 0
	148 JumpIfEqual {161}
	149 Move X8, 0xDEA000
	150 Move X8, [X8+720]
	151 Move X0, X22
	152 Move X1, X21
	153 Move X2, X24
	154 Move X4, [X8]
	155 Move X3, X23
	156 Call 0x1F97ECC
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {261}
	161 Move X22, [X19+328]
	162 Move X21, [X19+336]
	163 Move X0, X20
	164 Call FormatLiterals.get_MinuteSecondSep, X0
	165 Move W8, [X26+1890]
	166 Move X23, X0
	167 Compare W8, 0
	168 JumpIfNotEqual {174}
	169 Move X0, 0xDEA000
	170 Move X0, [X0+656]
	171 Call 0x1C17CF4
	172 Move W8, 1
	173 Move [X26+1890], W8
	174 Compare X23, 0
	175 JumpIfEqual {181}
	176 Move X0, X23
	177 Move X1, X31
	178 Call String.GetRawStringData, X0
	179 Move W23, [X23+16]
	180 Move X24, X0
	181 Move X24, X31
	182 Move W8, [X25+3334]
	183 Compare W8, 0
	184 JumpIfNotEqual {193}
	185 Move X0, 0xDEA000
	186 Move X0, [X0+720]
	187 Call 0x1C17CF4
	188 Move X0, 0xDF2000
	189 Move X0, [X0+40]
	190 Call 0x1C17CF4
	191 Move W8, 1
	192 Move [X25+3334], W8
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Compare W21, 0
	195 JumpIfEqual {208}
	196 Move X8, 0xDEA000
	197 Move X8, [X8+720]
	198 Move X0, X22
	199 Move X1, X21
	200 Move X2, X24
	201 Move X4, [X8]
	202 Move X3, X23
	203 Call 0x1F97ECC
	204 Move TEMP, X0
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfNotEqual {261}
	208 Move X21, [X19+344]
	209 Move X19, [X19+352]
	210 Move X0, X20
	211 Call FormatLiterals.get_End, X0
	212 Move W8, [X26+1890]
	213 Move X20, X0
	214 Compare W8, 0
	215 JumpIfNotEqual {221}
	216 Move X0, 0xDEA000
	217 Move X0, [X0+656]
	218 Call 0x1C17CF4
	219 Move W8, 1
	220 Move [X26+1890], W8
	221 Compare X20, 0
	222 JumpIfEqual {228}
	223 Move X0, X20
	224 Move X1, X31
	225 Call String.GetRawStringData, X0
	226 Move W20, [X20+16]
	227 Move X22, X0
	228 Move X22, X31
	229 Move W8, [X25+3334]
	230 Compare W8, 0
	231 JumpIfNotEqual {240}
	232 Move X0, 0xDEA000
	233 Move X0, [X0+720]
	234 Call 0x1C17CF4
	235 Move X0, 0xDF2000
	236 Move X0, [X0+40]
	237 Call 0x1C17CF4
	238 Move W8, 1
	239 Move [X25+3334], W8
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Compare W19, 0
	242 JumpIfEqual {272}
	243 Move X8, 0xDEA000
	244 Move X8, [X8+720]
	245 Move X0, X21
	246 Move X1, X19
	247 Move X2, X22
	248 Move X4, [X8]
	249 Move X3, X20
	250 Move X20, [X31+64]
	251 Move X19, [X31+72]
	252 Move X22, [X31+48]
	253 Move X21, [X31+56]
	254 Move X24, [X31+32]
	255 Move X23, [X31+40]
	256 Move X26, [X31+16]
	257 Move X25, [X31+24]
	258 Move X30, [X31+80]
	259 Call 0x1F97ECC
	260 Return X0
	261 Move W0, W31
	262 Move X20, [X31+64]
	263 Move X19, [X31+72]
	264 Move X22, [X31+48]
	265 Move X21, [X31+56]
	266 Move X24, [X31+32]
	267 Move X23, [X31+40]
	268 Move X26, [X31+16]
	269 Move X25, [X31+24]
	270 Move X30, [X31+80]
	271 Return X0
	272 Move W0, 1

Method: System.Boolean FullHMSFMatch(System.Globalization.TimeSpanFormat/FormatLiterals pattern)

Disassembly:
	0x03331230 LDR X8, [X8 + 0x2D0]
	0x03331234 MOV X0, X22
	0x03331238 MOV X1, X21
	0x0333123C MOV X2, X24
	0x03331240 LDR X4, [X8]
	0x03331244 MOV X3, X23
	0x03331248 BL 0x1F96ECC
	0x0333124C TBZ X0, 0x0, 0x3331304
	0x03331250 LDP X21, X19, [X19 + 0x148]
	0x03331254 MOV X0, X20
	0x03331258 BL 0x332CBE8
	0x0333125C LDRB W8, [X26 + 0x762]
	0x03331260 MOV X20, X0
	0x03331264 CBNZ W8, 0x333127C
	0x03331268 ADRP X0, 0xDE9000
	0x0333126C LDR X0, [X0 + 0x290]
	0x03331270 BL 0x1C16CF4
	0x03331274 MOVZ W8, 0x1
	0x03331278 STRB W8, [X26 + 0x762]
	0x0333127C CBZ X20, 0x3331298
	0x03331280 MOV X0, X20
	0x03331284 MOV X1, X31
	0x03331288 BL 0x3225708
	0x0333128C LDR W20, [X20 + 0x10]
	0x03331290 MOV X22, X0
	0x03331294 B 0x333129C
	0x03331298 MOV X22, X31
	0x0333129C LDRB W8, [X25 + 0xD06]
	0x033312A0 CBNZ W8, 0x33312C4
	0x033312A4 ADRP X0, 0xDE9000
	0x033312A8 LDR X0, [X0 + 0x2D0]
	0x033312AC BL 0x1C16CF4
	0x033312B0 ADRP X0, 0xDF1000
	0x033312B4 LDR X0, [X0 + 0x28]
	0x033312B8 BL 0x1C16CF4
	0x033312BC MOVZ W8, 0x1
	0x033312C0 STRB W8, [X25 + 0xD06]
	0x033312C4 CMP W19, W20
	0x033312C8 B.NE 0x3331304
	0x033312CC CBZ W19, 0x3331320
	0x033312D0 ADRP X8, 0xDE9000
	0x033312D4 LDR X8, [X8 + 0x2D0]
	0x033312D8 MOV X0, X21
	0x033312DC MOV X1, X19
	0x033312E0 MOV X2, X22
	0x033312E4 LDR X4, [X8]
	0x033312E8 MOV X3, X20
	0x033312EC LDP X20, X19, [X31 + 0x40]
	0x033312F0 LDP X22, X21, [X31 + 0x30]
	0x033312F4 LDP X24, X23, [X31 + 0x20]
	0x033312F8 LDP X26, X25, [X31 + 0x10]
	0x033312FC LDR X30, [X31], #0x50
	0x03331300 B 0x1F96ECC
	0x03331304 MOV W0, W31
	0x03331308 LDP X20, X19, [X31 + 0x40]
	0x0333130C LDP X22, X21, [X31 + 0x30]
	0x03331310 LDP X24, X23, [X31 + 0x20]
	0x03331314 LDP X26, X25, [X31 + 0x10]
	0x03331318 LDR X30, [X31], #0x50
	0x0333131C RET
	0x03331320 MOVZ W0, 0x1
	0x03331324 B 0x3331308
	0x03331328 STR X30, [X31 - 0x50]!
	0x0333132C STP X26, X25, [X31 + 0x10]
	0x03331330 STP X24, X23, [X31 + 0x20]
	0x03331334 STP X22, X21, [X31 + 0x30]
	0x03331338 STP X20, X19, [X31 + 0x40]
	0x0333133C LDR W8, [X0 + 0x8]
	0x03331340 CMP W8, 0x4
	0x03331344 B.NE 0x3331600
	0x03331348 LDR W8, [X0 + 0xC]
	0x0333134C MOV X19, X0
	0x03331350 CMP W8, 0x3
	0x03331354 B.NE 0x3331600
	0x03331358 LDP X22, X21, [X19 + 0x118]
	0x0333135C MOV X0, X1
	0x03331360 MOV X20, X1
	0x03331364 BL 0x332CB10
	0x03331368 ADRP X26, 0x10A8000
	0x0333136C LDRB W8, [X26 + 0x762]
	0x03331370 MOV X23, X0
	0x03331374 CBZ W8, 0x3331394
	0x03331378 CBZ X23, 0x33313AC
	0x0333137C MOV X0, X23
	0x03331380 MOV X1, X31
	0x03331384 BL 0x3225708
	0x03331388 LDR W23, [X23 + 0x10]
	0x0333138C MOV X24, X0
	0x03331390 B 0x33313B0
	0x03331394 ADRP X0, 0xDE9000
	0x03331398 LDR X0, [X0 + 0x290]
	0x0333139C BL 0x1C16CF4
	0x033313A0 MOVZ W8, 0x1
	0x033313A4 STRB W8, [X26 + 0x762]
	0x033313A8 CBNZ X23, 0x333137C
	0x033313AC MOV X24, X31
	0x033313B0 ADRP X25, 0x10AB000
	0x033313B4 LDRB W8, [X25 + 0xD06]
	0x033313B8 CBNZ W8, 0x33313DC
	0x033313BC ADRP X0, 0xDE9000
	0x033313C0 LDR X0, [X0 + 0x2D0]
	0x033313C4 BL 0x1C16CF4
	0x033313C8 ADRP X0, 0xDF1000
	0x033313CC LDR X0, [X0 + 0x28]
	0x033313D0 BL 0x1C16CF4
	0x033313D4 MOVZ W8, 0x1
	0x033313D8 STRB W8, [X25 + 0xD06]
	0x033313DC CMP W21, W23
	0x033313E0 B.NE 0x3331600
	0x033313E4 CBZ W21, 0x333140C
	0x033313E8 ADRP X8, 0xDE9000
	0x033313EC LDR X8, [X8 + 0x2D0]
	0x033313F0 MOV X0, X22
	0x033313F4 MOV X1, X21
	0x033313F8 MOV X2, X24
	0x033313FC LDR X4, [X8]
	0x03331400 MOV X3, X23
	0x03331404 BL 0x1F96ECC
	0x03331408 TBZ X0, 0x0, 0x3331600
	0x0333140C LDP X22, X21, [X19 + 0x128]
	0x03331410 MOV X0, X20
	0x03331414 BL 0x332CB64
	0x03331418 LDRB W8, [X26 + 0x762]
	0x0333141C MOV X23, X0
	0x03331420 CBNZ W8, 0x3331438
	0x03331424 ADRP X0, 0xDE9000
	0x03331428 LDR X0, [X0 + 0x290]
	0x0333142C BL 0x1C16CF4
	0x03331430 MOVZ W8, 0x1
	0x03331434 STRB W8, [X26 + 0x762]
	0x03331438 CBZ X23, 0x3331454
	0x0333143C MOV X0, X23
	0x03331440 MOV X1, X31
	0x03331444 BL 0x3225708
	0x03331448 LDR W23, [X23 + 0x10]
	0x0333144C MOV X24, X0
	0x03331450 B 0x3331458
	0x03331454 MOV X24, X31
	0x03331458 LDRB W8, [X25 + 0xD06]
	0x0333145C CBNZ W8, 0x3331480
	0x03331460 ADRP X0, 0xDE9000
	0x03331464 LDR X0, [X0 + 0x2D0]
	0x03331468 BL 0x1C16CF4
	0x0333146C ADRP X0, 0xDF1000
	0x03331470 LDR X0, [X0 + 0x28]
	0x03331474 BL 0x1C16CF4
	0x03331478 MOVZ W8, 0x1
	0x0333147C STRB W8, [X25 + 0xD06]
	0x03331480 CMP W21, W23
	0x03331484 B.NE 0x3331600
	0x03331488 CBZ W21, 0x33314B0
	0x0333148C ADRP X8, 0xDE9000
	0x03331490 LDR X8, [X8 + 0x2D0]
	0x03331494 MOV X0, X22
	0x03331498 MOV X1, X21
	0x0333149C MOV X2, X24
	0x033314A0 LDR X4, [X8]
	0x033314A4 MOV X3, X23
	0x033314A8 BL 0x1F96ECC
	0x033314AC TBZ X0, 0x0, 0x3331600
	0x033314B0 LDP X22, X21, [X19 + 0x138]
	0x033314B4 LDRB W8, [X26 + 0x762]
	0x033314B8 LDR X23, [X20]
	0x033314BC CBNZ W8, 0x33314D4
	0x033314C0 ADRP X0, 0xDE9000
	0x033314C4 LDR X0, [X0 + 0x290]
	0x033314C8 BL 0x1C16CF4
	0x033314CC MOVZ W8, 0x1
	0x033314D0 STRB W8, [X26 + 0x762]
	0x033314D4 CBZ X23, 0x33314F0
	0x033314D8 MOV X0, X23
	0x033314DC MOV X1, X31
	0x033314E0 BL 0x3225708
	0x033314E4 LDR W23, [X23 + 0x10]
	0x033314E8 MOV X24, X0
	0x033314EC B 0x33314F4
	0x033314F0 MOV X24, X31
	0x033314F4 LDRB W8, [X25 + 0xD06]
	0x033314F8 CBNZ W8, 0x333151C
	0x033314FC ADRP X0, 0xDE9000
	0x03331500 LDR X0, [X0 + 0x2D0]
	0x03331504 BL 0x1C16CF4
	0x03331508 ADRP X0, 0xDF1000
	0x0333150C LDR X0, [X0 + 0x28]
	0x03331510 BL 0x1C16CF4
	0x03331514 MOVZ W8, 0x1
	0x03331518 STRB W8, [X25 + 0xD06]
	0x0333151C CMP W21, W23
	0x03331520 B.NE 0x3331600
	0x03331524 CBZ W21, 0x333154C
	0x03331528 ADRP X8, 0xDE9000
	0x0333152C LDR X8, [X8 + 0x2D0]
	0x03331530 MOV X0, X22
	0x03331534 MOV X1, X21
	0x03331538 MOV X2, X24
	0x0333153C LDR X4, [X8]
	0x03331540 MOV X3, X23
	0x03331544 BL 0x1F96ECC
	0x03331548 TBZ X0, 0x0, 0x3331600
	0x0333154C LDP X21, X19, [X19 + 0x148]
	0x03331550 MOV X0, X20
	0x03331554 BL 0x332CBE8
	0x03331558 LDRB W8, [X26 + 0x762]
	0x0333155C MOV X20, X0
	0x03331560 CBNZ W8, 0x3331578
	0x03331564 ADRP X0, 0xDE9000
	0x03331568 LDR X0, [X0 + 0x290]
	0x0333156C BL 0x1C16CF4
	0x03331570 MOVZ W8, 0x1
	0x03331574 STRB W8, [X26 + 0x762]
	0x03331578 CBZ X20, 0x3331594
	0x0333157C MOV X0, X20
	0x03331580 MOV X1, X31
	0x03331584 BL 0x3225708
	0x03331588 LDR W20, [X20 + 0x10]
	0x0333158C MOV X22, X0
	0x03331590 B 0x3331598
	0x03331594 MOV X22, X31
	0x03331598 LDRB W8, [X25 + 0xD06]
	0x0333159C CBNZ W8, 0x33315C0
	0x033315A0 ADRP X0, 0xDE9000
	0x033315A4 LDR X0, [X0 + 0x2D0]
	0x033315A8 BL 0x1C16CF4
	0x033315AC ADRP X0, 0xDF1000
	0x033315B0 LDR X0, [X0 + 0x28]
	0x033315B4 BL 0x1C16CF4
	0x033315B8 MOVZ W8, 0x1
	0x033315BC STRB W8, [X25 + 0xD06]
	0x033315C0 CMP W19, W20
	0x033315C4 B.NE 0x3331600
	0x033315C8 CBZ W19, 0x333161C
	0x033315CC ADRP X8, 0xDE9000
	0x033315D0 LDR X8, [X8 + 0x2D0]
	0x033315D4 MOV X0, X21

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move W8, [X0+8]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, [X0+12]
	013 Move X19, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X22, [X19+280]
	016 Move X21, [X19+288]
	017 Move X0, X1
	018 Move X20, X1
	019 Call FormatLiterals.get_Start, X0
	020 Move X26, 0x10A9000
	021 Move W8, [X26+1890]
	022 Move X23, X0
	023 Compare W8, 0
	024 JumpIfEqual {32}
	025 Compare X23, 0
	026 JumpIfEqual {39}
	027 Move X0, X23
	028 Move X1, X31
	029 Call String.GetRawStringData, X0
	030 Move W23, [X23+16]
	031 Move X24, X0
	032 Move X0, 0xDEA000
	033 Move X0, [X0+656]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X26+1890], W8
	037 Compare X23, 0
	038 JumpIfNotEqual {27}
	039 Move X24, X31
	040 Move X25, 0x10AC000
	041 Move W8, [X25+3334]
	042 Compare W8, 0
	043 JumpIfNotEqual {52}
	044 Move X0, 0xDEA000
	045 Move X0, [X0+720]
	046 Call 0x1C17CF4
	047 Move X0, 0xDF2000
	048 Move X0, [X0+40]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X25+3334], W8
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare W21, 0
	054 JumpIfEqual {67}
	055 Move X8, 0xDEA000
	056 Move X8, [X8+720]
	057 Move X0, X22
	058 Move X1, X21
	059 Move X2, X24
	060 Move X4, [X8]
	061 Move X3, X23
	062 Call 0x1F97ECC
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {261}
	067 Move X22, [X19+296]
	068 Move X21, [X19+304]
	069 Move X0, X20
	070 Call FormatLiterals.get_HourMinuteSep, X0
	071 Move W8, [X26+1890]
	072 Move X23, X0
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0xDEA000
	076 Move X0, [X0+656]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X26+1890], W8
	080 Compare X23, 0
	081 JumpIfEqual {87}
	082 Move X0, X23
	083 Move X1, X31
	084 Call String.GetRawStringData, X0
	085 Move W23, [X23+16]
	086 Move X24, X0
	087 Move X24, X31
	088 Move W8, [X25+3334]
	089 Compare W8, 0
	090 JumpIfNotEqual {99}
	091 Move X0, 0xDEA000
	092 Move X0, [X0+720]
	093 Call 0x1C17CF4
	094 Move X0, 0xDF2000
	095 Move X0, [X0+40]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X25+3334], W8
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Compare W21, 0
	101 JumpIfEqual {114}
	102 Move X8, 0xDEA000
	103 Move X8, [X8+720]
	104 Move X0, X22
	105 Move X1, X21
	106 Move X2, X24
	107 Move X4, [X8]
	108 Move X3, X23
	109 Call 0x1F97ECC
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {261}
	114 Move X22, [X19+312]
	115 Move X21, [X19+320]
	116 Move X0, X20
	117 Call FormatLiterals.get_MinuteSecondSep, X0
	118 Move W8, [X26+1890]
	119 Move X23, X0
	120 Compare W8, 0
	121 JumpIfNotEqual {127}
	122 Move X0, 0xDEA000
	123 Move X0, [X0+656]
	124 Call 0x1C17CF4
	125 Move W8, 1
	126 Move [X26+1890], W8
	127 Compare X23, 0
	128 JumpIfEqual {134}
	129 Move X0, X23
	130 Move X1, X31
	131 Call String.GetRawStringData, X0
	132 Move W23, [X23+16]
	133 Move X24, X0
	134 Move X24, X31
	135 Move W8, [X25+3334]
	136 Compare W8, 0
	137 JumpIfNotEqual {146}
	138 Move X0, 0xDEA000
	139 Move X0, [X0+720]
	140 Call 0x1C17CF4
	141 Move X0, 0xDF2000
	142 Move X0, [X0+40]
	143 Call 0x1C17CF4
	144 Move W8, 1
	145 Move [X25+3334], W8
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Compare W21, 0
	148 JumpIfEqual {161}
	149 Move X8, 0xDEA000
	150 Move X8, [X8+720]
	151 Move X0, X22
	152 Move X1, X21
	153 Move X2, X24
	154 Move X4, [X8]
	155 Move X3, X23
	156 Call 0x1F97ECC
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {261}
	161 Move X22, [X19+328]
	162 Move X21, [X19+336]
	163 Move X0, X20
	164 Call FormatLiterals.get_SecondFractionSep, X0
	165 Move W8, [X26+1890]
	166 Move X23, X0
	167 Compare W8, 0
	168 JumpIfNotEqual {174}
	169 Move X0, 0xDEA000
	170 Move X0, [X0+656]
	171 Call 0x1C17CF4
	172 Move W8, 1
	173 Move [X26+1890], W8
	174 Compare X23, 0
	175 JumpIfEqual {181}
	176 Move X0, X23
	177 Move X1, X31
	178 Call String.GetRawStringData, X0
	179 Move W23, [X23+16]
	180 Move X24, X0
	181 Move X24, X31
	182 Move W8, [X25+3334]
	183 Compare W8, 0
	184 JumpIfNotEqual {193}
	185 Move X0, 0xDEA000
	186 Move X0, [X0+720]
	187 Call 0x1C17CF4
	188 Move X0, 0xDF2000
	189 Move X0, [X0+40]
	190 Call 0x1C17CF4
	191 Move W8, 1
	192 Move [X25+3334], W8
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Compare W21, 0
	195 JumpIfEqual {208}
	196 Move X8, 0xDEA000
	197 Move X8, [X8+720]
	198 Move X0, X22
	199 Move X1, X21
	200 Move X2, X24
	201 Move X4, [X8]
	202 Move X3, X23
	203 Call 0x1F97ECC
	204 Move TEMP, X0
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfNotEqual {261}
	208 Move X21, [X19+344]
	209 Move X19, [X19+352]
	210 Move X0, X20
	211 Call FormatLiterals.get_End, X0
	212 Move W8, [X26+1890]
	213 Move X20, X0
	214 Compare W8, 0
	215 JumpIfNotEqual {221}
	216 Move X0, 0xDEA000
	217 Move X0, [X0+656]
	218 Call 0x1C17CF4
	219 Move W8, 1
	220 Move [X26+1890], W8
	221 Compare X20, 0
	222 JumpIfEqual {228}
	223 Move X0, X20
	224 Move X1, X31
	225 Call String.GetRawStringData, X0
	226 Move W20, [X20+16]
	227 Move X22, X0
	228 Move X22, X31
	229 Move W8, [X25+3334]
	230 Compare W8, 0
	231 JumpIfNotEqual {240}
	232 Move X0, 0xDEA000
	233 Move X0, [X0+720]
	234 Call 0x1C17CF4
	235 Move X0, 0xDF2000
	236 Move X0, [X0+40]
	237 Call 0x1C17CF4
	238 Move W8, 1
	239 Move [X25+3334], W8
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Compare W19, 0
	242 JumpIfEqual {272}
	243 Move X8, 0xDEA000
	244 Move X8, [X8+720]
	245 Move X0, X21
	246 Move X1, X19
	247 Move X2, X22
	248 Move X4, [X8]
	249 Move X3, X20
	250 Move X20, [X31+64]
	251 Move X19, [X31+72]
	252 Move X22, [X31+48]
	253 Move X21, [X31+56]
	254 Move X24, [X31+32]
	255 Move X23, [X31+40]
	256 Move X26, [X31+16]
	257 Move X25, [X31+24]
	258 Move X30, [X31+80]
	259 Call 0x1F97ECC
	260 Return X0
	261 Move W0, W31
	262 Move X20, [X31+64]
	263 Move X19, [X31+72]
	264 Move X22, [X31+48]
	265 Move X21, [X31+56]
	266 Move X24, [X31+32]
	267 Move X23, [X31+40]
	268 Move X26, [X31+16]
	269 Move X25, [X31+24]
	270 Move X30, [X31+80]
	271 Return X0
	272 Move W0, 1

Method: System.Void Init(System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x0332E47C AND W27, W8, 0x1
	0x0332E480 TBZ X0, 0x0, 0x332E48C
	0x0332E484 MOVZ W26, 0x1
	0x0332E488 B 0x332E5CC
	0x0332E48C ADRP X28, 0x10AE000
	0x0332E490 LDRB W8, [X28 + 0xD05]
	0x0332E494 CBNZ W8, 0x332E4AC
	0x0332E498 ADRP X0, 0xDFA000
	0x0332E49C LDR X0, [X0 + 0x530]
	0x0332E4A0 BL 0x1C16CF4
	0x0332E4A4 MOVZ W8, 0x1
	0x0332E4A8 STRB W8, [X28 + 0xD05]
	0x0332E4AC ADRP X26, 0xDFA000
	0x0332E4B0 LDR X26, [X26 + 0x530]
	0x0332E4B4 LDR X0, [X26]
	0x0332E4B8 LDR W8, [X0 + 0xE0]
	0x0332E4BC CBNZ W8, 0x332E4C8
	0x0332E4C0 BL 0x1C16DFC
	0x0332E4C4 LDR X0, [X26]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X0], W31
	005 Move [X0+8], X31
	006 Move [X0+4], W31
	007 Compare X1, 0
	008 JumpIfEqual {22}
	009 Move X19, X0
	010 Move X0, X1
	011 Move X20, X1
	012 Call DateTimeFormatInfo.get_FullTimeSpanPositivePattern, X0
	013 Move [X19+104], X0
	014 Move X0, X20
	015 Call DateTimeFormatInfo.get_FullTimeSpanNegativePattern, X0
	016 Move [X19+112], X0
	017 NotImplemented "Instruction STRH not yet implemented."
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return 
	022 Call 0x1C17F20

Method: System.Boolean ProcessToken(ref System.Globalization.TimeSpanParse/TimeSpanToken tok, ref System.Globalization.TimeSpanParse/TimeSpanResult result)

Disassembly:
	0x0332E724 CMP W27, 0x0
	0x0332E728 CSET W25, NE
	0x0332E72C LDRB W8, [X28 + 0xD05]
	0x0332E730 CBNZ W8, 0x332E748
	0x0332E734 ADRP X0, 0xDFA000
	0x0332E738 LDR X0, [X0 + 0x530]
	0x0332E73C BL 0x1C16CF4
	0x0332E740 MOVZ W8, 0x1
	0x0332E744 STRB W8, [X28 + 0xD05]
	0x0332E748 LDR X0, [X26]
	0x0332E74C LDR W8, [X0 + 0xE0]
	0x0332E750 CBNZ W8, 0x332E75C
	0x0332E754 BL 0x1C16DFC
	0x0332E758 LDR X0, [X26]
	0x0332E75C LDR X8, [X0 + 0xB8]
	0x0332E760 ADD X1, X31, 0x590
	0x0332E764 MOV X0, X20
	0x0332E768 LDR X9, [X8 + 0x48]
	0x0332E76C LDUR V0, [X8 + 0x38]
	0x0332E770 LDUR V1, [X8 + 0x28]
	0x0332E774 STR X9, [X31 + 0x5B0]
	0x0332E778 STR V0, [X31 + 0x5A]
	0x0332E77C STR V1, [X31 + 0x59]
	0x0332E780 BL 0x3331328
	0x0332E784 TBZ X0, 0x0, 0x332E874
	0x0332E788 LDRH W8, [X31 + 0x9EC]
	0x0332E78C LDRB W9, [X31 + 0x9EE]
	0x0332E790 LDR V0, [X24]
	0x0332E794 ADD X28, X31, 0x420
	0x0332E798 STRH W8, [X31 + 0x9AC]
	0x0332E79C LDR W8, [X31 + 0xA14]
	0x0332E7A0 STRB W9, [X31 + 0x9AE]
	0x0332E7A4 STR V0, [X31 + 0x9F]
	0x0332E7A8 AND W9, W9, 0xFF
	0x0332E7AC STR W8, [X31 + 0xA00]
	0x0332E7B0 LDUR V0, [X20 + 0x78]
	0x0332E7B4 LDUR V1, [X20 + 0x88]
	0x0332E7B8 MOVZ W8, 0x2
	0x0332E7BC LDR V2, [X31 + 0x9F]
	0x0332E7C0 STR V0, [X31 + 0x55]
	0x0332E7C4 STR V1, [X31 + 0x56]
	0x0332E7C8 LDUR V0, [X20 + 0xA8]
	0x0332E7CC LDUR V1, [X20 + 0x98]
	0x0332E7D0 LDR W10, [X31 + 0xA14]
	0x0332E7D4 ADD X1, X31, 0x570
	0x0332E7D8 STR V0, [X31 + 0x54]
	0x0332E7DC STR V1, [X31 + 0x53]
	0x0332E7E0 LDUR V0, [X20 + 0xC8]
	0x0332E7E4 LDUR V1, [X20 + 0xB8]
	0x0332E7E8 STRB W9, [X31 + 0x573]
	0x0332E7EC LDRH W9, [X31 + 0x9AC]
	0x0332E7F0 STRB W8, [X31 + 0x570]
	0x0332E7F4 STUR V2, [X29 + 0xC]
	0x0332E7F8 MOVI V2.2D, 0x0
	0x0332E7FC STURH W9, [X29 + 0x1]
	0x0332E800 LDRB W9, [X31 + 0x9EE]
	0x0332E804 STUR D2, [X29 + 0x4]
	0x0332E808 STRB W8, [X31 + 0x510]
	0x0332E80C LDR W8, [X31 + 0xA00]
	0x0332E810 STRB W9, [X31 + 0x513]
	0x0332E814 LDRH W9, [X31 + 0x9EC]
	0x0332E818 STUR D2, [X28 + 0xF4]
	0x0332E81C LDR V2, [X24]
	0x0332E820 ADD X2, X31, 0x550
	0x0332E824 ADD X3, X31, 0x530
	0x0332E828 ADD X4, X31, 0x510
	0x0332E82C ADD X5, X31, 0x4F0
	0x0332E830 ADD X6, X31, 0x9E0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0x10AF000
	008 Move W8, [X22+3277]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xDFB000
	017 Move X0, [X0+1408]
	018 Call 0x1C17CF4
	019 Move X0, 0xDFB000
	020 Move X0, [X0+1384]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3277], W8
	024 Move W8, [X20]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W8, [X21+4]
	029 Compare W8, 0
	030 JumpIfNotEqual {40}
	031 Move X0, X21
	032 Move X1, X31
	033 Move X2, X31
	034 Move X3, X19
	035 Call TimeSpanRawInfo.AddSep, X0, X1, X2
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {75}
	040 Move V1, [X20]
	041 Move V0, [X20+16]
	042 Add X1, X31, 0
	043 Move X0, X21
	044 Move X2, X19
	045 Move [X31], V1
	046 Move [X31+8], V0
	047 Call TimeSpanRawInfo.AddNum, X0, X1, X2
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {64}
	052 Move X8, 0xDFB000
	053 Move X8, [X8+1408]
	054 Move W1, 4
	055 Move X1, [X20+16]
	056 Move X2, [X20+24]
	057 Move X0, X21
	058 Move X3, X19
	059 Call TimeSpanRawInfo.AddSep, X0, X1, X2
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {75}
	064 Move W8, [X20]
	065 Move W0, 1
	066 Move [X21], W8
	067 Move X8, 0xDFB000
	068 Move X8, [X8+1384]
	069 Move W1, 2
	070 Move X2, [X8]
	071 Move X0, X19
	072 Move X3, X31
	073 Move X4, X31
	074 Call TimeSpanResult.SetFailure, X0, X1, X2, X3, X4
	075 Move W0, W31
	076 Move X20, [X31+64]
	077 Move X19, [X31+72]
	078 Move X22, [X31+48]
	079 Move X21, [X31+56]
	080 Move X30, [X31+32]
	081 Add X31, X31, 80
	082 Return X0

Method: System.Boolean AddSep(System.ReadOnlySpan`1<System.Char> sep, ref System.Globalization.TimeSpanParse/TimeSpanResult result)

Disassembly:
	0x0333369C ADRP X0, 0xDF5000
	0x033336A0 LDR X0, [X0 + 0x5D0]
	0x033336A4 BL 0x1C16CF4
	0x033336A8 ADRP X0, 0xDF5000
	0x033336AC LDR X0, [X0 + 0x5D8]
	0x033336B0 BL 0x1C16CF4
	0x033336B4 ADRP X0, 0xDF5000
	0x033336B8 LDR X0, [X0 + 0x5E0]
	0x033336BC BL 0x1C16CF4
	0x033336C0 ADRP X0, 0xDF5000
	0x033336C4 LDR X0, [X0 + 0x5E8]
	0x033336C8 BL 0x1C16CF4
	0x033336CC ADRP X0, 0xDF5000
	0x033336D0 LDR X0, [X0 + 0x5F0]
	0x033336D4 BL 0x1C16CF4
	0x033336D8 ADRP X0, 0xDF5000
	0x033336DC LDR X0, [X0 + 0x5F8]
	0x033336E0 BL 0x1C16CF4
	0x033336E4 ADRP X0, 0xDF5000
	0x033336E8 LDR X0, [X0 + 0x600]
	0x033336EC BL 0x1C16CF4
	0x033336F0 ADRP X0, 0xDF5000
	0x033336F4 LDR X0, [X0 + 0x608]
	0x033336F8 BL 0x1C16CF4
	0x033336FC ADRP X0, 0xDF5000
	0x03333700 LDR X0, [X0 + 0x610]
	0x03333704 BL 0x1C16CF4
	0x03333708 ADRP X0, 0xDF5000
	0x0333370C LDR X0, [X0 + 0x618]
	0x03333710 BL 0x1C16CF4
	0x03333714 ADRP X0, 0xDF5000
	0x03333718 LDR X0, [X0 + 0x620]
	0x0333371C BL 0x1C16CF4
	0x03333720 ADRP X0, 0xDF5000
	0x03333724 LDR X0, [X0 + 0x628]
	0x03333728 BL 0x1C16CF4
	0x0333372C ADRP X0, 0xDF5000
	0x03333730 LDR X0, [X0 + 0x630]
	0x03333734 BL 0x1C16CF4
	0x03333738 ADRP X0, 0xDF5000
	0x0333373C LDR X0, [X0 + 0x638]
	0x03333740 BL 0x1C16CF4
	0x03333744 ADRP X0, 0xDF5000
	0x03333748 LDR X0, [X0 + 0x640]
	0x0333374C BL 0x1C16CF4
	0x03333750 ADRP X0, 0xDF5000
	0x03333754 LDR X0, [X0 + 0x648]
	0x03333758 BL 0x1C16CF4
	0x0333375C ADRP X0, 0xDF5000
	0x03333760 LDR X0, [X0 + 0x650]
	0x03333764 BL 0x1C16CF4
	0x03333768 ADRP X0, 0xDF5000
	0x0333376C LDR X0, [X0 + 0x658]
	0x03333770 BL 0x1C16CF4
	0x03333774 ADRP X0, 0xDF5000
	0x03333778 LDR X0, [X0 + 0x660]
	0x0333377C BL 0x1C16CF4
	0x03333780 ADRP X0, 0xDF5000
	0x03333784 LDR X0, [X0 + 0x668]
	0x03333788 BL 0x1C16CF4
	0x0333378C ADRP X0, 0xDF5000
	0x03333790 LDR X0, [X0 + 0x670]
	0x03333794 BL 0x1C16CF4
	0x03333798 ADRP X0, 0xDF5000
	0x0333379C LDR X0, [X0 + 0x678]
	0x033337A0 BL 0x1C16CF4
	0x033337A4 ADRP X0, 0xDF5000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x10AA000
	008 Move W8, [X23+3278]
	009 Move X22, X3
	010 Move X19, X2
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xDF6000
	018 Move X0, [X0+1384]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+3278], W8
	022 Move W9, [X20+8]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W8, [X20+4]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Add W10, W9, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move [X20+8], W10
	029 Move X10, -41533440
	030 Move W9, W9
	031 Add X10, X10, 1731
	032 NotImplemented "Instruction ADR not yet implemented."
	033 Move W12, [X10]
	034 Add X11, X11, X12
	035 CallNoReturn X11
	036 Move [X20+280], X21
	037 Add X9, X20, 288
	038 Move X8, 0xDF6000
	039 Move X8, [X8+1384]
	040 Move W1, 2
	041 Move X0, X22
	042 Move X3, X31
	043 Move X2, [X8]
	044 Move X4, X31
	045 Call TimeSpanResult.SetFailure, X0, X1, X2, X3, X4
	046 Move W0, W31
	047 Add X9, X20, 368
	048 Move [X20+360], X21
	049 Move [X20+296], X21
	050 Add X9, X20, 304
	051 Move [X20+312], X21
	052 Add X9, X20, 320
	053 Move [X20+328], X21
	054 Add X9, X20, 336
	055 Move [X20+344], X21
	056 Add X9, X20, 352
	057 Add W8, W8, 1
	058 Move W0, 1
	059 Move [X9], X19
	060 Move [X20+4], W8
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 Return X0

Method: System.Boolean AddNum(System.Globalization.TimeSpanParse/TimeSpanToken num, ref System.Globalization.TimeSpanParse/TimeSpanResult result)

Disassembly:
	0x033337A8 LDR X0, [X0 + 0x680]
	0x033337AC BL 0x1C16CF4
	0x033337B0 ADRP X0, 0xDF5000
	0x033337B4 LDR X0, [X0 + 0x688]
	0x033337B8 BL 0x1C16CF4
	0x033337BC ADRP X0, 0xDF5000
	0x033337C0 LDR X0, [X0 + 0x690]
	0x033337C4 BL 0x1C16CF4
	0x033337C8 ADRP X0, 0xDF5000
	0x033337CC LDR X0, [X0 + 0x698]
	0x033337D0 BL 0x1C16CF4
	0x033337D4 ADRP X0, 0xDF5000
	0x033337D8 LDR X0, [X0 + 0x6A0]
	0x033337DC BL 0x1C16CF4
	0x033337E0 ADRP X0, 0xDF5000
	0x033337E4 LDR X0, [X0 + 0x6A8]
	0x033337E8 BL 0x1C16CF4
	0x033337EC ADRP X0, 0xDF5000
	0x033337F0 LDR X0, [X0 + 0x6B0]
	0x033337F4 BL 0x1C16CF4
	0x033337F8 ADRP X0, 0xDF5000
	0x033337FC LDR X0, [X0 + 0x6B8]
	0x03333800 BL 0x1C16CF4
	0x03333804 ADRP X0, 0xDF5000
	0x03333808 LDR X0, [X0 + 0x6C0]
	0x0333380C BL 0x1C16CF4
	0x03333810 ADRP X0, 0xDF5000
	0x03333814 LDR X0, [X0 + 0x6C8]
	0x03333818 BL 0x1C16CF4
	0x0333381C ADRP X0, 0xDF5000
	0x03333820 LDR X0, [X0 + 0x6D0]
	0x03333824 BL 0x1C16CF4
	0x03333828 ADRP X0, 0xDF5000
	0x0333382C LDR X0, [X0 + 0x6D8]
	0x03333830 BL 0x1C16CF4
	0x03333834 ADRP X0, 0xDF5000
	0x03333838 LDR X0, [X0 + 0x6E0]
	0x0333383C BL 0x1C16CF4
	0x03333840 ADRP X0, 0xDF5000
	0x03333844 LDR X0, [X0 + 0x6E8]
	0x03333848 BL 0x1C16CF4
	0x0333384C ADRP X0, 0xDF5000
	0x03333850 LDR X0, [X0 + 0x6F0]
	0x03333854 BL 0x1C16CF4
	0x03333858 ADRP X0, 0xDF5000
	0x0333385C LDR X0, [X0 + 0x6F8]
	0x03333860 BL 0x1C16CF4
	0x03333864 ADRP X0, 0xDF5000
	0x03333868 LDR X0, [X0 + 0x700]
	0x0333386C BL 0x1C16CF4
	0x03333870 ADRP X0, 0xDF5000
	0x03333874 LDR X0, [X0 + 0x708]
	0x03333878 BL 0x1C16CF4
	0x0333387C ADRP X0, 0xDF5000
	0x03333880 LDR X0, [X0 + 0x710]
	0x03333884 BL 0x1C16CF4
	0x03333888 ADRP X0, 0xDF5000
	0x0333388C LDR X0, [X0 + 0x718]
	0x03333890 BL 0x1C16CF4
	0x03333894 ADRP X0, 0xDF5000
	0x03333898 LDR X0, [X0 + 0x720]
	0x0333389C BL 0x1C16CF4
	0x033338A0 ADRP X0, 0xDF5000
	0x033338A4 LDR X0, [X0 + 0x728]
	0x033338A8 BL 0x1C16CF4
	0x033338AC ADRP X0, 0xDF5000
	0x033338B0 LDR X0, [X0 + 0x730]
	0x033338B4 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10AA000
	007 Move W8, [X22+3279]
	008 Move X21, X2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xDF6000
	016 Move X0, [X0+1384]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3279], W8
	020 Move W9, [X19+12]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W8, [X19+4]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add W10, W9, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move [X19+12], W10
	027 Move X10, -41533440
	028 Move W9, W9
	029 Add X10, X10, 1736
	030 NotImplemented "Instruction ADR not yet implemented."
	031 Move W12, [X10]
	032 Add X11, X11, X12
	033 CallNoReturn X11
	034 Move V1, [X20]
	035 Move V0, [X20+16]
	036 Move [X19+136], V0
	037 Move [X19+120], V1
	038 Move X8, 0xDF6000
	039 Move X8, [X8+1384]
	040 Move W1, 2
	041 Move X0, X21
	042 Move X3, X31
	043 Move X2, [X8]
	044 Move X4, X31
	045 Call TimeSpanResult.SetFailure, X0, X1, X2, X3, X4
	046 Move W0, W31
	047 Move V1, [X20]
	048 Move V0, [X20+16]
	049 Add X9, X19, 248
	050 Move [X9+1], V0
	051 Move [X19+248], V1
	052 Move V1, [X20]
	053 Move V0, [X20+16]
	054 Move [X19+168], V0
	055 Move [X19+152], V1
	056 Move V1, [X20]
	057 Move V0, [X20+16]
	058 Move [X19+200], V0
	059 Move [X19+184], V1
	060 Move V1, [X20]
	061 Move V0, [X20+16]
	062 Move [X19+232], V0
	063 Move [X19+216], V1
	064 Add W8, W8, 1
	065 Move W0, 1
	066 Move [X19+4], W8
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return X0

