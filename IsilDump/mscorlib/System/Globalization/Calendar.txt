Type: System.Globalization.Calendar

Method: System.DateTime get_MinSupportedDateTime()

Disassembly:
	0x03333D10 STR X8, [X19 + 0x30]
	0x03333D14 LDR X0, [X21]
	0x03333D18 BL 0x1C16D6C
	0x03333D1C CBZ X0, 0x3334290
	0x03333D20 LDR W8, [X0 + 0x18]
	0x03333D24 CBZ W8, 0x333428C
	0x03333D28 ADRP X8, 0xDF5000
	0x03333D2C LDR X8, [X8 + 0x698]
	0x03333D30 MOVZ W1, 0x1
	0x03333D34 LDR X8, [X8]
	0x03333D38 STR X8, [X0 + 0x20]
	0x03333D3C STR X0, [X19 + 0x38]
	0x03333D40 LDR X0, [X21]
	0x03333D44 BL 0x1C16D6C
	0x03333D48 CBZ X0, 0x3334290
	0x03333D4C LDR W8, [X0 + 0x18]
	0x03333D50 CBZ W8, 0x333428C
	0x03333D54 ADRP X20, 0xDC8000
	0x03333D58 LDR X20, [X20 + 0x4B8]
	0x03333D5C MOVZ W1, 0x1
	0x03333D60 LDR X8, [X20]
	0x03333D64 STR X8, [X0 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10AA000
	005 Move X19, 0xDC2000
	006 Move W8, [X20+3285]
	007 Move X19, [X19+2544]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDC2000
	013 Move X0, [X0+2544]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3285], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+16]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.DateTime get_MaxSupportedDateTime()

Disassembly:
	0x03333D68 STR X0, [X19 + 0x40]
	0x03333D6C LDR X0, [X21]
	0x03333D70 BL 0x1C16D6C
	0x03333D74 CBZ X0, 0x3334290
	0x03333D78 LDR W8, [X0 + 0x18]
	0x03333D7C CBZ W8, 0x333428C
	0x03333D80 LDR X8, [X20]
	0x03333D84 MOVZ W1, 0x7
	0x03333D88 STR X8, [X0 + 0x20]
	0x03333D8C STR X0, [X19 + 0x48]
	0x03333D90 LDR X0, [X21]
	0x03333D94 BL 0x1C16D6C
	0x03333D98 CBZ X0, 0x3334290
	0x03333D9C LDR W8, [X0 + 0x18]
	0x03333DA0 CBZ W8, 0x333428C
	0x03333DA4 ADRP X9, 0xDF5000
	0x03333DA8 LDR X9, [X9 + 0x6A8]
	0x03333DAC CMP W8, 0x1
	0x03333DB0 LDR X9, [X9]
	0x03333DB4 STR X9, [X0 + 0x20]
	0x03333DB8 B.EQ 0x333428C
	0x03333DBC ADRP X9, 0xDF5000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10AA000
	005 Move X19, 0xDC2000
	006 Move W8, [X20+3286]
	007 Move X19, [X19+2544]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDC2000
	013 Move X0, [X0+2544]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3286], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+24]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03333DC0 LDR X9, [X9 + 0x7C8]
	0x03333DC4 CMP W8, 0x2
	0x03333DC8 LDR X9, [X9]
	0x03333DCC STR X9, [X0 + 0x28]
	0x03333DD0 B.LS 0x333428C

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move X1, X31
	005 Move [X0+16], W8
	006 Move [X0+24], W8
	007 Call Object..ctor, X0
	008 Return 

Method: System.Int32 get_ID()

Disassembly:
	0x03333DD4 ADRP X9, 0xDF5000
	0x03333DD8 LDR X9, [X9 + 0x5F8]

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W0, TEMP
	004 Return X0

Method: System.Int32 get_BaseCalendarID()

Disassembly:
	0x03333DDC CMP W8, 0x3
	0x03333DE0 LDR X9, [X9]
	0x03333DE4 STR X9, [X0 + 0x30]

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+424]
	003 Move X1, [X8+432]
	004 CallNoReturn X2

Method: System.Object Clone()

Disassembly:
	0x03333DE8 B.EQ 0x333428C
	0x03333DEC ADRP X9, 0xDF5000
	0x03333DF0 LDR X9, [X9 + 0x768]
	0x03333DF4 CMP W8, 0x4
	0x03333DF8 LDR X9, [X9]
	0x03333DFC STR X9, [X0 + 0x38]
	0x03333E00 B.LS 0x333428C
	0x03333E04 ADRP X9, 0xDF5000
	0x03333E08 LDR X9, [X9 + 0x618]
	0x03333E0C CMP W8, 0x5
	0x03333E10 LDR X9, [X9]
	0x03333E14 STR X9, [X0 + 0x40]
	0x03333E18 B.EQ 0x333428C
	0x03333E1C ADRP X9, 0xDF5000
	0x03333E20 LDR X9, [X9 + 0x678]
	0x03333E24 CMP W8, 0x6
	0x03333E28 LDR X9, [X9]
	0x03333E2C STR X9, [X0 + 0x48]
	0x03333E30 B.LS 0x333428C
	0x03333E34 ADRP X8, 0xDF5000
	0x03333E38 LDR X8, [X8 + 0x720]
	0x03333E3C MOVZ W1, 0x7
	0x03333E40 LDR X8, [X8]
	0x03333E44 STR X8, [X0 + 0x50]
	0x03333E48 STR X0, [X19 + 0x50]
	0x03333E4C LDR X0, [X21]
	0x03333E50 BL 0x1C16D6C
	0x03333E54 CBZ X0, 0x3334290
	0x03333E58 LDR W8, [X0 + 0x18]
	0x03333E5C CBZ W8, 0x333428C
	0x03333E60 ADRP X9, 0xDF5000
	0x03333E64 LDR X9, [X9 + 0x798]
	0x03333E68 CMP W8, 0x1
	0x03333E6C LDR X9, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10AA000
	005 Move W8, [X20+3287]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDF6000
	012 Move X0, [X0+824]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3287], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Call Object.MemberwiseClone, X0
	019 Compare X0, 0
	020 JumpIfEqual {38}
	021 Move X9, 0xDF6000
	022 Move X9, [X9+824]
	023 Move X8, [X0]
	024 Move X1, [X9]
	025 Move W10, [X8+304]
	026 Move W9, [X1+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, [X8+200]
	029 Add X8, X8, X9
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move [X0+20], W31
	035 Move X30, [X31+32]
	036 Return X0
	037 Call 0x1C181E0
	038 Call 0x1C17F20

Method: System.Void VerifyWritable()

Disassembly:
	0x03333E70 STR X9, [X0 + 0x20]
	0x03333E74 B.EQ 0x333428C
	0x03333E78 ADRP X9, 0xDF5000
	0x03333E7C LDR X9, [X9 + 0x780]
	0x03333E80 CMP W8, 0x2
	0x03333E84 LDR X9, [X9]
	0x03333E88 STR X9, [X0 + 0x28]
	0x03333E8C B.LS 0x333428C
	0x03333E90 ADRP X9, 0xDF5000
	0x03333E94 LDR X9, [X9 + 0x7A0]
	0x03333E98 CMP W8, 0x3
	0x03333E9C LDR X9, [X9]
	0x03333EA0 STR X9, [X0 + 0x30]
	0x03333EA4 B.EQ 0x333428C
	0x03333EA8 ADRP X9, 0xDF5000
	0x03333EAC LDR X9, [X9 + 0x6E0]
	0x03333EB0 CMP W8, 0x4
	0x03333EB4 LDR X9, [X9]
	0x03333EB8 STR X9, [X0 + 0x38]
	0x03333EBC B.LS 0x333428C
	0x03333EC0 ADRP X9, 0xDF5000
	0x03333EC4 LDR X9, [X9 + 0x710]
	0x03333EC8 CMP W8, 0x5
	0x03333ECC LDR X9, [X9]
	0x03333ED0 STR X9, [X0 + 0x40]
	0x03333ED4 B.EQ 0x333428C
	0x03333ED8 ADRP X9, 0xDF5000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+20]
	005 Compare W8, 0
	006 JumpIfNotEqual {11}
	007 Move X20, [X31+16]
	008 Move X19, [X31+24]
	009 Move X30, [X31+32]
	010 Return 
	011 Move X0, 0xDF0000
	012 Move X0, [X0+2616]
	013 Call 0x1C17D08
	014 Move X1, X31
	015 Call Environment.GetResourceString, X0
	016 Move X19, X0
	017 Move X0, 0xDC1000
	018 Move X0, [X0+1456]
	019 Call 0x1C17D08
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X2, X31
	023 Move X20, X0
	024 Call InvalidOperationException..ctor, X0, X1
	025 Move X0, 0xDF6000
	026 Move X0, [X0+1432]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X20
	030 Call 0x1C17DEC

Method: System.Void SetReadOnlyState(System.Boolean readOnly)

Disassembly:
	0x03333EDC LDR X9, [X9 + 0x630]
	0x03333EE0 CMP W8, 0x6
	0x03333EE4 LDR X9, [X9]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+20], W8
	003 Return 

Method: System.Int32 get_CurrentEraValue()

Disassembly:
	0x03333EE8 STR X9, [X0 + 0x48]
	0x03333EEC B.LS 0x333428C
	0x03333EF0 ADRP X8, 0xDF5000
	0x03333EF4 LDR X8, [X8 + 0x660]
	0x03333EF8 MOVZ W1, 0x7
	0x03333EFC LDR X8, [X8]
	0x03333F00 STR X8, [X0 + 0x50]
	0x03333F04 STR X0, [X19 + 0x58]
	0x03333F08 LDR X0, [X21]
	0x03333F0C BL 0x1C16D6C
	0x03333F10 CBZ X0, 0x3334290
	0x03333F14 LDR W8, [X0 + 0x18]
	0x03333F18 CBZ W8, 0x333428C
	0x03333F1C ADRP X9, 0xDF5000
	0x03333F20 LDR X9, [X9 + 0x778]
	0x03333F24 CMP W8, 0x1
	0x03333F28 LDR X9, [X9]
	0x03333F2C STR X9, [X0 + 0x20]
	0x03333F30 B.EQ 0x333428C
	0x03333F34 ADRP X9, 0xDF5000
	0x03333F38 LDR X9, [X9 + 0x688]
	0x03333F3C CMP W8, 0x2
	0x03333F40 LDR X9, [X9]
	0x03333F44 STR X9, [X0 + 0x28]
	0x03333F48 B.LS 0x333428C
	0x03333F4C ADRP X9, 0xDF5000
	0x03333F50 LDR X9, [X9 + 0x5D0]
	0x03333F54 CMP W8, 0x3
	0x03333F58 LDR X9, [X9]
	0x03333F5C STR X9, [X0 + 0x30]
	0x03333F60 B.EQ 0x333428C
	0x03333F64 ADRP X9, 0xDF5000
	0x03333F68 LDR X9, [X9 + 0x6B8]
	0x03333F6C CMP W8, 0x4
	0x03333F70 LDR X9, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10AA000
	005 Move W8, [X20+3288]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDF6000
	012 Move X0, [X0+1440]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3288], W8
	016 Move W0, [X19+16]
	017 Add W31, W0, 1
	018 Move X8, [X19]
	019 Move X0, X19
	020 Move X9, [X8+440]
	021 Move X1, [X8+448]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X8, 0xDF6000
	024 Move X8, [X8+1440]
	025 Move W20, W0
	026 Move X8, [X8]
	027 Move W9, [X8+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X8
	031 Call 0x1C17DFC
	032 Move W0, W20
	033 Call CalendarData.GetCalendarData, X0
	034 Compare X0, 0
	035 JumpIfEqual {42}
	036 Move W0, [X0+148]
	037 Move [X19+16], W0
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0
	042 Call 0x1C17F20

Method: System.Int32 GetDayOfMonth(System.DateTime time)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.DayOfWeek GetDayOfWeek(System.DateTime time)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 GetDaysInMonth(System.Int32 year, System.Int32 month, System.Int32 era)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 GetDaysInYear(System.Int32 year, System.Int32 era)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 GetEra(System.DateTime time)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32[] get_Eras()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 GetMonth(System.DateTime time)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 GetMonthsInYear(System.Int32 year, System.Int32 era)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 GetYear(System.DateTime time)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean IsLeapYear(System.Int32 year)

Disassembly:
	0x0333401C B.EQ 0x333428C
	0x03334020 ADRP X9, 0xDF4000
	0x03334024 LDR X9, [X9 + 0x738]
	0x03334028 CMP W8, 0x4
	0x0333402C LDR X9, [X9]

ISIL:
	001 Move X8, [X0]
	002 Move W2, W31
	003 Move X4, [X8+648]
	004 Move X3, [X8+656]
	005 CallNoReturn X4

Method: System.Boolean IsLeapYear(System.Int32 year, System.Int32 era)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.DateTime ToDateTime(System.Int32 year, System.Int32 month, System.Int32 day, System.Int32 hour, System.Int32 minute, System.Int32 second, System.Int32 millisecond, System.Int32 era)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean TryToDateTime(System.Int32 year, System.Int32 month, System.Int32 day, System.Int32 hour, System.Int32 minute, System.Int32 second, System.Int32 millisecond, System.Int32 era, out System.DateTime result)

Disassembly:
	0x03334030 STR X9, [X0 + 0x38]
	0x03334034 B.LS 0x333428C
	0x03334038 ADRP X22, 0xDF4000
	0x0333403C LDR X22, [X22 + 0x700]
	0x03334040 CMP W8, 0x5
	0x03334044 LDR X9, [X22]
	0x03334048 STR X9, [X0 + 0x40]
	0x0333404C B.EQ 0x333428C
	0x03334050 ADRP X9, 0xDF4000
	0x03334054 LDR X9, [X9 + 0x748]
	0x03334058 CMP W8, 0x6
	0x0333405C LDR X9, [X9]
	0x03334060 STR X9, [X0 + 0x48]
	0x03334064 B.LS 0x333428C
	0x03334068 ADRP X9, 0xDF4000
	0x0333406C LDR X9, [X9 + 0x670]
	0x03334070 CMP W8, 0x7
	0x03334074 LDR X9, [X9]
	0x03334078 STR X9, [X0 + 0x50]
	0x0333407C B.EQ 0x333428C
	0x03334080 ADRP X9, 0xDF4000
	0x03334084 LDR X9, [X9 + 0x668]
	0x03334088 CMP W8, 0x8
	0x0333408C LDR X9, [X9]
	0x03334090 STR X9, [X0 + 0x58]
	0x03334094 B.LS 0x333428C
	0x03334098 ADRP X9, 0xDF4000
	0x0333409C LDR X9, [X9 + 0x7C0]
	0x033340A0 CMP W8, 0x9
	0x033340A4 LDR X9, [X9]
	0x033340A8 STR X9, [X0 + 0x60]
	0x033340AC B.EQ 0x333428C
	0x033340B0 ADRP X9, 0xDF4000
	0x033340B4 LDR X9, [X9 + 0x6E8]
	0x033340B8 CMP W8, 0xA
	0x033340BC LDR X9, [X9]
	0x033340C0 STR X9, [X0 + 0x68]
	0x033340C4 B.LS 0x333428C
	0x033340C8 ADRP X9, 0xDF4000
	0x033340CC LDR X9, [X9 + 0x628]
	0x033340D0 CMP W8, 0xB
	0x033340D4 LDR X9, [X9]
	0x033340D8 STR X9, [X0 + 0x70]
	0x033340DC B.EQ 0x333428C
	0x033340E0 ADRP X9, 0xDF4000
	0x033340E4 LDR X9, [X9 + 0x6C0]
	0x033340E8 CMP W8, 0xC
	0x033340EC LDR X9, [X9]
	0x033340F0 STR X9, [X0 + 0x78]
	0x033340F4 B.LS 0x333428C
	0x033340F8 ADRP X23, 0xDC1000
	0x033340FC LDR X23, [X23 + 0x278]
	0x03334100 MOVZ W1, 0xD
	0x03334104 LDR X8, [X23]
	0x03334108 LDR X8, [X8 + 0xB8]
	0x0333410C LDR X8, [X8]
	0x03334110 STR X8, [X0 + 0x80]
	0x03334114 STR X0, [X19 + 0x68]
	0x03334118 LDR X0, [X21]
	0x0333411C BL 0x1C16D6C
	0x03334120 CBZ X0, 0x3334290
	0x03334124 LDR W8, [X0 + 0x18]
	0x03334128 CBZ W8, 0x333428C
	0x0333412C ADRP X9, 0xDF4000
	0x03334130 LDR X9, [X9 + 0x5F0]
	0x03334134 CMP W8, 0x1
	0x03334138 LDR X9, [X9]
	0x0333413C STR X9, [X0 + 0x20]
	0x03334140 B.EQ 0x333428C
	0x03334144 ADRP X9, 0xDF4000
	0x03334148 LDR X9, [X9 + 0x600]
	0x0333414C CMP W8, 0x2
	0x03334150 LDR X9, [X9]
	0x03334154 STR X9, [X0 + 0x28]
	0x03334158 B.LS 0x333428C
	0x0333415C ADRP X9, 0xDF4000
	0x03334160 LDR X9, [X9 + 0x640]
	0x03334164 CMP W8, 0x3
	0x03334168 LDR X9, [X9]
	0x0333416C STR X9, [X0 + 0x30]
	0x03334170 B.EQ 0x333428C
	0x03334174 ADRP X9, 0xDF4000
	0x03334178 LDR X9, [X9 + 0x758]
	0x0333417C CMP W8, 0x4
	0x03334180 LDR X9, [X9]
	0x03334184 STR X9, [X0 + 0x38]
	0x03334188 B.LS 0x333428C
	0x0333418C LDR X9, [X22]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X28, 0x10A9000
	015 Move X29, 0xDC1000
	016 Move W8, [X28+3289]
	017 Move X27, [X31+120]
	018 Move X29, [X29+2544]
	019 Move W19, W7
	020 Move W20, W6
	021 Move W21, W5
	022 Move W22, W4
	023 Move W23, W3
	024 Move W24, W2
	025 Move W25, W1
	026 Move X26, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X0, 0xDC1000
	032 Move X0, [X0+2544]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X28+3289], W8
	036 Move X0, [X29]
	037 Move W28, [X31+112]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X29]
	043 Move X8, [X0+184]
	044 Move X8, [X8+16]
	045 Move [X27], X8
	046 Move X8, [X26]
	047 Move X9, [X8+664]
	048 Move X8, [X8+672]
	049 Move X0, X26
	050 Move W1, W25
	051 Move W2, W24
	052 Move W3, W23
	053 Move W4, W22
	054 Move W5, W21
	055 Move W6, W20
	056 Move W7, W19
	057 Move [X31+8], X8
	058 Move [X31], W28
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move [X27], X0
	061 Move W0, 1
	062 Move X20, [X31+96]
	063 Move X19, [X31+104]
	064 Move X22, [X31+80]
	065 Move X21, [X31+88]
	066 Move X24, [X31+64]
	067 Move X23, [X31+72]
	068 Move X26, [X31+48]
	069 Move X25, [X31+56]
	070 Move X28, [X31+32]
	071 Move X27, [X31+40]
	072 Move X29, [X31+16]
	073 Move X30, [X31+24]
	074 Add X31, X31, 112
	075 Return X0
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X19, X0
	078 Move X0, X19
	079 Call 0x3EB2AD0
	080 Move X19, X0
	081 Move X0, 0xDC8000
	082 Move X0, [X0+1400]
	083 Call 0x1C17D08
	084 Move X8, [X19]
	085 Move X1, [X8]
	086 Call 0x1C18270
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {93}
	091 Call 0x3EB2AE0
	092 Move W0, W31
	093 Move W0, 8
	094 Call 0x3EB2AF0
	095 Move X8, [X19]
	096 Move [X0], X8
	097 Move X1, 0xB81000
	098 Add X1, X1, 3672
	099 Move X2, X31
	100 Call 0x3EB2B00
	101 Move X19, X0
	102 Call 0x3EB2AE0
	103 Move X0, X19
	104 Call 0x1D2D690
	105 Call 0x1991590

Method: System.Boolean IsValidYear(System.Int32 year, System.Int32 era)

Disassembly:
	0x03334190 CMP W8, 0x5
	0x03334194 STR X9, [X0 + 0x40]
	0x03334198 B.EQ 0x333428C
	0x0333419C ADRP X9, 0xDF4000
	0x033341A0 LDR X9, [X9 + 0x648]
	0x033341A4 CMP W8, 0x6
	0x033341A8 LDR X9, [X9]
	0x033341AC STR X9, [X0 + 0x48]
	0x033341B0 B.LS 0x333428C
	0x033341B4 ADRP X9, 0xDF4000
	0x033341B8 LDR X9, [X9 + 0x6A0]
	0x033341BC CMP W8, 0x7
	0x033341C0 LDR X9, [X9]
	0x033341C4 STR X9, [X0 + 0x50]
	0x033341C8 B.EQ 0x333428C
	0x033341CC ADRP X9, 0xDF4000
	0x033341D0 LDR X9, [X9 + 0x6D8]
	0x033341D4 CMP W8, 0x8
	0x033341D8 LDR X9, [X9]
	0x033341DC STR X9, [X0 + 0x58]
	0x033341E0 B.LS 0x333428C
	0x033341E4 ADRP X9, 0xDF4000
	0x033341E8 LDR X9, [X9 + 0x650]
	0x033341EC CMP W8, 0x9
	0x033341F0 LDR X9, [X9]
	0x033341F4 STR X9, [X0 + 0x60]
	0x033341F8 B.EQ 0x333428C
	0x033341FC ADRP X9, 0xDF4000
	0x03334200 LDR X9, [X9 + 0x760]
	0x03334204 CMP W8, 0xA
	0x03334208 LDR X9, [X9]
	0x0333420C STR X9, [X0 + 0x68]
	0x03334210 B.LS 0x333428C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move W19, W1
	006 Move X20, X0
	007 Move X9, [X8+392]
	008 Move X8, [X8+400]
	009 Move X1, X8
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X8, [X20]
	012 Move X1, X0
	013 Move X0, X20
	014 Move X9, [X8+616]
	015 Move X2, [X8+624]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W0, W31
	019 Move X8, [X20]
	020 Move X0, X20
	021 Move X9, [X8+408]
	022 Move X1, [X8+416]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X8, [X20]
	025 Move X1, X0
	026 Move X0, X20
	027 Move X9, [X8+616]
	028 Move X2, [X8+624]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Boolean IsValidMonth(System.Int32 year, System.Int32 month, System.Int32 era)

Disassembly:
	0x03334214 ADRP X9, 0xDF4000
	0x03334218 LDR X9, [X9 + 0x658]
	0x0333421C CMP W8, 0xB
	0x03334220 LDR X9, [X9]
	0x03334224 STR X9, [X0 + 0x70]
	0x03334228 B.EQ 0x333428C
	0x0333422C ADRP X9, 0xDF4000
	0x03334230 LDR X9, [X9 + 0x750]
	0x03334234 CMP W8, 0xC
	0x03334238 LDR X9, [X9]
	0x0333423C STR X9, [X0 + 0x78]
	0x03334240 B.LS 0x333428C
	0x03334244 LDR X8, [X23]
	0x03334248 LDP X22, X21, [X31 + 0x40]
	0x0333424C LDP X26, X25, [X31 + 0x20]
	0x03334250 LDP X28, X27, [X31 + 0x10]
	0x03334254 LDR X8, [X8 + 0xB8]
	0x03334258 LDR X8, [X8]
	0x0333425C STR X8, [X0 + 0x80]
	0x03334260 LDR X8, [X19 + 0x68]
	0x03334264 STRB W31, [X19 + 0x98]
	0x03334268 STP X0, X8, [X19 + 0x70]
	0x0333426C STP X0, X8, [X19 + 0x80]
	0x03334270 LDR X8, [X24]
	0x03334274 LDP X24, X23, [X31 + 0x30]
	0x03334278 LDR X8, [X8 + 0xB8]
	0x0333427C STR X19, [X8]
	0x03334280 LDP X20, X19, [X31 + 0x50]
	0x03334284 LDP X29, X30, [X31], #0x60
	0x03334288 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0]
	007 Move W20, W3
	008 Move W19, W2
	009 Move W2, W20
	010 Move X9, [X8+696]
	011 Move X3, [X8+704]
	012 Move X21, X0
	013 Move W22, W1
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move W8, W0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W0, W31
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {31}
	022 Move X8, [X21]
	023 Move X0, X21
	024 Move W1, W22
	025 Move W2, W20
	026 Move X9, [X8+600]
	027 Move X3, [X8+608]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return X0

Method: System.Boolean IsValidDay(System.Int32 year, System.Int32 month, System.Int32 day, System.Int32 era)

Disassembly:
	0x0333428C BL 0x1C16F28
	0x03334290 BL 0x1C16F20
	0x03334294 STR X30, [X31 - 0x40]!
	0x03334298 STP X24, X23, [X31 + 0x10]
	0x0333429C STP X22, X21, [X31 + 0x20]
	0x033342A0 STP X20, X19, [X31 + 0x30]
	0x033342A4 ADRP X24, 0x10A8000
	0x033342A8 ADRP X22, 0xDF4000
	0x033342AC LDRB W8, [X24 + 0xCDD]
	0x033342B0 LDR X22, [X22 + 0x5A0]
	0x033342B4 MOV W20, W2
	0x033342B8 MOV X21, X1
	0x033342BC MOV X19, X0
	0x033342C0 AND W23, W3, 0x1
	0x033342C4 TBNZ X8, 0x0, 0x3334324
	0x033342C8 ADRP X0, 0xDF4000
	0x033342CC LDR X0, [X0 + 0x5A0]
	0x033342D0 BL 0x1C16CF4
	0x033342D4 ADRP X0, 0xDC1000
	0x033342D8 LDR X0, [X0 + 0xC48]
	0x033342DC BL 0x1C16CF4
	0x033342E0 ADRP X0, 0xDF3000
	0x033342E4 LDR X0, [X0 + 0x930]
	0x033342E8 BL 0x1C16CF4
	0x033342EC ADRP X0, 0xDBF000
	0x033342F0 LDR X0, [X0 + 0xAC8]
	0x033342F4 BL 0x1C16CF4
	0x033342F8 ADRP X0, 0xDC1000
	0x033342FC LDR X0, [X0 + 0x278]
	0x03334300 BL 0x1C16CF4
	0x03334304 ADRP X0, 0xDF4000
	0x03334308 LDR X0, [X0 + 0x7D8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X0]
	008 Move W20, W4
	009 Move W19, W3
	010 Move W3, W20
	011 Move X9, [X8+712]
	012 Move X4, [X8+720]
	013 Move W21, W2
	014 Move X22, X0
	015 Move W23, W1
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move W8, W0
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W0, W31
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {34}
	024 Move X8, [X22]
	025 Move X0, X22
	026 Move W1, W23
	027 Move W2, W21
	028 Move X9, [X8+520]
	029 Move X4, [X8+528]
	030 Move W3, W20
	031 NotImplemented "Instruction BLR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Return X0

Method: System.Int32 get_TwoDigitYearMax()

Disassembly:
	0x0333430C BL 0x1C16CF4
	0x03334310 ADRP X0, 0xDBF000

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_TwoDigitYearMax(System.Int32 value)

Disassembly:
	0x03334314 LDR X0, [X0 + 0x988]
	0x03334318 BL 0x1C16CF4
	0x0333431C MOVZ W8, 0x1
	0x03334320 STRB W8, [X24 + 0xCDD]
	0x03334324 MOVZ W8, 0x7ED
	0x03334328 MOV X0, X19
	0x0333432C MOV X1, X31
	0x03334330 STR W8, [X19 + 0x90]
	0x03334334 BL 0x33BDD8C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X20, X0
	006 Call Calendar.VerifyWritable, X0
	007 Move [X20+24], W19
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X30, [X31+32]
	011 Return 

Method: System.Int32 ToFourDigitYear(System.Int32 year)

Disassembly:
	0x03334338 STRB W23, [X19 + 0x98]
	0x0333433C LDR X0, [X22]
	0x03334340 LDR W8, [X0 + 0xE0]
	0x03334344 CBNZ W8, 0x333434C
	0x03334348 BL 0x1C16DFC
	0x0333434C MOV X0, X19
	0x03334350 MOV X1, X21
	0x03334354 MOV W2, W20
	0x03334358 BL 0x33347D4
	0x0333435C TBNZ X0, 0x0, 0x33345C0
	0x03334360 LDR X8, [X19 + 0x10]
	0x03334364 CBNZ X8, 0x3334380
	0x03334368 ADRP X8, 0xDC1000
	0x0333436C LDR X8, [X8 + 0x278]
	0x03334370 LDR X8, [X8]
	0x03334374 LDR X8, [X8 + 0xB8]
	0x03334378 LDR X8, [X8]
	0x0333437C STR X8, [X19 + 0x10]
	0x03334380 LDR X8, [X19 + 0x18]
	0x03334384 CBNZ X8, 0x33343B0
	0x03334388 LDR X0, [X22]
	0x0333438C LDR W8, [X0 + 0xE0]
	0x03334390 CBNZ W8, 0x333439C
	0x03334394 BL 0x1C16DFC
	0x03334398 LDR X0, [X22]
	0x0333439C LDR X8, [X0 + 0xB8]
	0x033343A0 LDR X8, [X8]
	0x033343A4 CBZ X8, 0x33347CC
	0x033343A8 LDR X8, [X8 + 0x18]
	0x033343AC STR X8, [X19 + 0x18]
	0x033343B0 LDR X8, [X19 + 0x20]
	0x033343B4 CBNZ X8, 0x33343E0
	0x033343B8 LDR X0, [X22]
	0x033343BC LDR W8, [X0 + 0xE0]
	0x033343C0 CBNZ W8, 0x33343CC
	0x033343C4 BL 0x1C16DFC
	0x033343C8 LDR X0, [X22]
	0x033343CC LDR X8, [X0 + 0xB8]
	0x033343D0 LDR X8, [X8]
	0x033343D4 CBZ X8, 0x33347CC
	0x033343D8 LDR X8, [X8 + 0x20]
	0x033343DC STR X8, [X19 + 0x20]
	0x033343E0 LDR X8, [X19 + 0x28]
	0x033343E4 CBNZ X8, 0x3334410
	0x033343E8 LDR X0, [X22]
	0x033343EC LDR W8, [X0 + 0xE0]
	0x033343F0 CBNZ W8, 0x33343FC
	0x033343F4 BL 0x1C16DFC
	0x033343F8 LDR X0, [X22]
	0x033343FC LDR X8, [X0 + 0xB8]
	0x03334400 LDR X8, [X8]
	0x03334404 CBZ X8, 0x33347CC
	0x03334408 LDR X8, [X8 + 0x28]
	0x0333440C STR X8, [X19 + 0x28]
	0x03334410 LDR X8, [X19 + 0x30]
	0x03334414 CBNZ X8, 0x3334440
	0x03334418 LDR X0, [X22]
	0x0333441C LDR W8, [X0 + 0xE0]
	0x03334420 CBNZ W8, 0x333442C
	0x03334424 BL 0x1C16DFC
	0x03334428 LDR X0, [X22]
	0x0333442C LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move TEMP, X1
	006 And TEMP, TEMP, -2147483648
	007 Compare TEMP, -2147483648
	008 JumpIfEqual {48}
	009 Move W19, W1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X8, [X0]
	012 Move X20, X0
	013 Move X9, [X8+744]
	014 Move X1, [X8+752]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X8, [X20]
	017 Move W21, W0
	018 Move X0, X20
	019 Move X9, [X8+744]
	020 Move X1, [X8+752]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move W8, 0x851F
	023 NotImplemented "Instruction MOVK not yet implemented."
	024 NotImplemented "Instruction SMADDL not yet implemented."
	025 Move X11, X10
	026 ShiftRight X11, 63
	027 And X11, X11, 0x7FFFFFFF
	028 NotImplemented "Instruction SBFM not yet implemented."
	029 Move W9, 100
	030 Add W10, W10, W11
	031 NotImplemented "Instruction SMADDL not yet implemented."
	032 NotImplemented "Instruction MSUB not yet implemented."
	033 Move X11, X8
	034 ShiftRight X11, 63
	035 And X11, X11, 0x7FFFFFFF
	036 NotImplemented "Instruction SBFM not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 Add W8, W8, W11
	040 Subtract W8, W8, W10
	041 NotImplemented "Instruction MADD not yet implemented."
	042 Move W0, W19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0
	048 Move X0, 0xDE8000
	049 Move X0, [X0+1648]
	050 Call 0x1C17D08
	051 Move X1, X31
	052 Call Environment.GetResourceString, X0
	053 Move X19, X0
	054 Move X0, 0xDC8000
	055 Move X0, [X0+1888]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X20, X0
	059 Move X0, 0xDF5000
	060 Move X0, [X0+1448]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X20
	064 Move X2, X19
	065 Move X3, X31
	066 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	067 Move X0, 0xDF5000
	068 Move X0, [X0+1456]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X20
	072 Call 0x1C17DEC

Method: System.Int64 TimeToTicks(System.Int32 hour, System.Int32 minute, System.Int32 second, System.Int32 millisecond)

Disassembly:
	0x03334430 LDR X8, [X8]
	0x03334434 CBZ X8, 0x33347CC
	0x03334438 LDR X8, [X8 + 0x30]
	0x0333443C STR X8, [X19 + 0x30]
	0x03334440 LDR X8, [X19 + 0x38]
	0x03334444 CBNZ X8, 0x3334470
	0x03334448 LDR X0, [X22]
	0x0333444C LDR W8, [X0 + 0xE0]
	0x03334450 CBNZ W8, 0x333445C
	0x03334454 BL 0x1C16DFC
	0x03334458 LDR X0, [X22]
	0x0333445C LDR X8, [X0 + 0xB8]
	0x03334460 LDR X8, [X8]
	0x03334464 CBZ X8, 0x33347CC
	0x03334468 LDR X8, [X8 + 0x38]
	0x0333446C STR X8, [X19 + 0x38]
	0x03334470 LDR X8, [X19 + 0x40]
	0x03334474 CBNZ X8, 0x33344A0
	0x03334478 LDR X0, [X22]
	0x0333447C LDR W8, [X0 + 0xE0]
	0x03334480 CBNZ W8, 0x333448C
	0x03334484 BL 0x1C16DFC
	0x03334488 LDR X0, [X22]
	0x0333448C LDR X8, [X0 + 0xB8]
	0x03334490 LDR X8, [X8]
	0x03334494 CBZ X8, 0x33347CC
	0x03334498 LDR X8, [X8 + 0x40]
	0x0333449C STR X8, [X19 + 0x40]
	0x033344A0 LDR X8, [X19 + 0x48]
	0x033344A4 CBNZ X8, 0x33344D0
	0x033344A8 LDR X0, [X22]
	0x033344AC LDR W8, [X0 + 0xE0]
	0x033344B0 CBNZ W8, 0x33344BC
	0x033344B4 BL 0x1C16DFC
	0x033344B8 LDR X0, [X22]
	0x033344BC LDR X8, [X0 + 0xB8]
	0x033344C0 LDR X8, [X8]
	0x033344C4 CBZ X8, 0x33347CC
	0x033344C8 LDR X8, [X8 + 0x48]
	0x033344CC STR X8, [X19 + 0x48]
	0x033344D0 LDR X8, [X19 + 0x50]
	0x033344D4 CBNZ X8, 0x3334500
	0x033344D8 LDR X0, [X22]
	0x033344DC LDR W8, [X0 + 0xE0]
	0x033344E0 CBNZ W8, 0x33344EC
	0x033344E4 BL 0x1C16DFC
	0x033344E8 LDR X0, [X22]
	0x033344EC LDR X8, [X0 + 0xB8]
	0x033344F0 LDR X8, [X8]
	0x033344F4 CBZ X8, 0x33347CC
	0x033344F8 LDR X8, [X8 + 0x50]
	0x033344FC STR X8, [X19 + 0x50]
	0x03334500 LDR X8, [X19 + 0x58]
	0x03334504 CBNZ X8, 0x3334530
	0x03334508 LDR X0, [X22]
	0x0333450C LDR W8, [X0 + 0xE0]
	0x03334510 CBNZ W8, 0x333451C
	0x03334514 BL 0x1C16DFC
	0x03334518 LDR X0, [X22]
	0x0333451C LDR X8, [X0 + 0xB8]
	0x03334520 LDR X8, [X8]
	0x03334524 CBZ X8, 0x33347CC
	0x03334528 LDR X8, [X8 + 0x58]
	0x0333452C STR X8, [X19 + 0x58]
	0x03334530 LDR X8, [X19 + 0x60]
	0x03334534 CBNZ X8, 0x3334560
	0x03334538 LDR X0, [X22]
	0x0333453C LDR W8, [X0 + 0xE0]
	0x03334540 CBNZ W8, 0x333454C
	0x03334544 BL 0x1C16DFC
	0x03334548 LDR X0, [X22]
	0x0333454C LDR X8, [X0 + 0xB8]
	0x03334550 LDR X8, [X8]
	0x03334554 CBZ X8, 0x33347CC
	0x03334558 LDR X8, [X8 + 0x60]
	0x0333455C STR X8, [X19 + 0x60]
	0x03334560 LDR X8, [X19 + 0x68]
	0x03334564 CBNZ X8, 0x3334590
	0x03334568 LDR X0, [X22]
	0x0333456C LDR W8, [X0 + 0xE0]
	0x03334570 CBNZ W8, 0x333457C
	0x03334574 BL 0x1C16DFC
	0x03334578 LDR X0, [X22]
	0x0333457C LDR X8, [X0 + 0xB8]
	0x03334580 LDR X8, [X8]
	0x03334584 CBZ X8, 0x33347CC
	0x03334588 LDR X8, [X8 + 0x68]
	0x0333458C STR X8, [X19 + 0x68]
	0x03334590 LDR X8, [X19 + 0x70]
	0x03334594 CBNZ X8, 0x33345C0
	0x03334598 LDR X0, [X22]
	0x0333459C LDR W8, [X0 + 0xE0]
	0x033345A0 CBNZ W8, 0x33345AC
	0x033345A4 BL 0x1C16DFC
	0x033345A8 LDR X0, [X22]
	0x033345AC LDR X8, [X0 + 0xB8]
	0x033345B0 LDR X8, [X8]
	0x033345B4 CBZ X8, 0x33347CC
	0x033345B8 LDR X8, [X8 + 0x70]
	0x033345BC STR X8, [X19 + 0x70]
	0x033345C0 LDR X0, [X19 + 0x18]
	0x033345C4 MOV X1, X31
	0x033345C8 BL 0x3340CA0
	0x033345CC LDR X8, [X19 + 0x28]
	0x033345D0 STR X0, [X19 + 0x18]
	0x033345D4 MOV X1, X31
	0x033345D8 MOV X0, X8
	0x033345DC BL 0x3340CA0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x10A9000
	009 Move W8, [X23+3290]
	010 Move W19, W3
	011 Move W20, W2
	012 Move W21, W1
	013 Move W22, W0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDC2000
	019 Move X0, [X0+1392]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3290], W8
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, 0xDC2000
	028 Move X8, [X8+1392]
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move W0, W22
	035 Move W1, W21
	036 Move W2, W20
	037 Move X3, X31
	038 Call TimeSpan.TimeToTicks, X0, X1, X2
	039 Move W8, 0x2710
	040 NotImplemented "Instruction UMADDL not yet implemented."
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X30, [X31+16]
	046 Move X23, [X31+24]
	047 Add X31, X31, 64
	048 Return X0
	049 Move X0, 0xDF5000
	050 Move X0, [X0+1464]
	051 Call 0x1C17D08
	052 Move X1, X31
	053 Call Environment.GetResourceString, X0
	054 Move X19, X0
	055 Move X0, 0xDC8000
	056 Move X0, [X0+1888]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X20, X0
	060 Move X1, X31
	061 Move X0, 0xDC2000
	062 Move X0, [X0+3144]
	063 Call 0x1C17D08
	064 Call 0x19913D0
	065 Move X0, X31
	066 Call CultureInfo.get_InvariantCulture
	067 Move X19, X0
	068 Move X0, 0xDEF000
	069 Move X0, [X0+880]
	070 Call 0x1C17D08
	071 Move X1, X31
	072 Call Environment.GetResourceString, X0
	073 Move [X31+12], W31
	074 Move X21, 0xDC0000
	075 Move X21, [X21+1880]
	076 Move X20, X0
	077 Move X0, X21
	078 Call 0x1C17D08
	079 Add X1, X31, 12
	080 Call 0x1C17E04
	081 Move X22, X0
	082 Move W8, 999
	083 Move X0, X21
	084 Move [X31+8], W8
	085 Call 0x1C17D08
	086 Add X1, X31, 8
	087 Call 0x1C17E04
	088 Move X3, X0
	089 Move X0, X19
	090 Move X1, X20
	091 Move X2, X22
	092 Move X4, X31
	093 Call String.Format, X0, X1, X2, X3
	094 Move X19, X0
	095 Move X0, 0xDC8000
	096 Move X0, [X0+1888]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X20, X0
	100 Move X0, 0xDF5000
	101 Move X0, [X0+1472]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X20
	105 Move X2, X19
	106 Move X3, X31
	107 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	108 Move X0, 0xDF5000
	109 Move X0, [X0+1480]
	110 Call 0x1C17D08
	111 Move X1, X0
	112 Move X0, X20
	113 Call 0x1C17DEC

Method: System.Int32 GetSystemTwoDigitYearSetting(System.Int32 CalID, System.Int32 defaultYearValue)

Disassembly:
	0x033345E0 LDR X8, [X19 + 0x20]
	0x033345E4 STR X0, [X19 + 0x28]
	0x033345E8 MOV X1, X31
	0x033345EC MOV X0, X8
	0x033345F0 BL 0x3340CA0
	0x033345F4 LDR X8, [X19 + 0x30]
	0x033345F8 STR X0, [X19 + 0x20]
	0x033345FC MOV X1, X31
	0x03334600 MOV X0, X8
	0x03334604 BL 0x3340CA4
	0x03334608 AND W8, W20, 0xFFFF
	0x0333460C CMP W8, 0x4
	0x03334610 STR X0, [X19 + 0x30]
	0x03334614 B.NE 0x3334664
	0x03334618 ADRP X23, 0xDC1000
	0x0333461C LDR X23, [X23 + 0xC48]
	0x03334620 LDR X0, [X23]
	0x03334624 LDR W8, [X0 + 0xE0]
	0x03334628 CBNZ W8, 0x3334634
	0x0333462C BL 0x1C16DFC
	0x03334630 LDR X0, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10A9000
	006 Move X21, 0xDF5000
	007 Move W8, [X20+3291]
	008 Move X21, [X21+1440]
	009 Move W19, W1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDF5000
	015 Move X0, [X0+1440]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3291], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W0, W19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

