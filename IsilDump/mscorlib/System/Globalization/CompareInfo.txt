Type: System.Globalization.CompareInfo

Method: System.Int32 InvariantIndexOf(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Boolean ignoreCase)

Disassembly:
	0x03304664 LDP X22, X21, [X31 + 0x40]
	0x03304668 LDP X24, X23, [X31 + 0x30]
	0x0330466C LDP X26, X25, [X31 + 0x20]
	0x03304670 LDP X28, X27, [X31 + 0x10]
	0x03304674 LDR X30, [X31], #0x60
	0x03304678 B 0x3307A30
	0x0330467C LDR X0, [X27]
	0x03304680 LDR W8, [X0 + 0xE0]
	0x03304684 CBNZ W8, 0x330468C
	0x03304688 BL 0x1C16DFC
	0x0330468C MOV X0, X25
	0x03304690 MOV W1, W24
	0x03304694 MOV W2, W23
	0x03304698 MOV X3, X22
	0x0330469C MOV W4, W21
	0x033046A0 MOV W5, W20
	0x033046A4 MOV W6, W19
	0x033046A8 LDP X20, X19, [X31 + 0x50]
	0x033046AC LDP X22, X21, [X31 + 0x40]
	0x033046B0 LDP X24, X23, [X31 + 0x30]
	0x033046B4 LDP X26, X25, [X31 + 0x20]
	0x033046B8 LDP X28, X27, [X31 + 0x10]
	0x033046BC LDR X30, [X31], #0x60
	0x033046C0 B 0x330797C
	0x033046C4 STR X30, [X31 - 0x50]!
	0x033046C8 STP X26, X25, [X31 + 0x10]
	0x033046CC STP X24, X23, [X31 + 0x20]
	0x033046D0 STP X22, X21, [X31 + 0x30]
	0x033046D4 STP X20, X19, [X31 + 0x40]
	0x033046D8 ADRP X24, 0x10D8000
	0x033046DC LDRB W8, [X24 + 0xADD]
	0x033046E0 MOV W22, W4
	0x033046E4 MOV X21, X3
	0x033046E8 MOV X19, X2
	0x033046EC MOV X20, X1
	0x033046F0 MOV X23, X0
	0x033046F4 TBNZ X8, 0x0, 0x3304718
	0x033046F8 ADRP X0, 0xE1D000
	0x033046FC LDR X0, [X0 + 0xFD0]
	0x03304700 BL 0x1C16CF4
	0x03304704 ADRP X0, 0xE23000
	0x03304708 LDR X0, [X0 + 0x930]
	0x0330470C BL 0x1C16CF4
	0x03304710 MOVZ W8, 0x1
	0x03304714 STRB W8, [X24 + 0xADD]
	0x03304718 ADRP X24, 0xE1D000
	0x0330471C LDR X24, [X24 + 0xFD0]
	0x03304720 MOVZ W8, 0x10000000
	0x03304724 CMP W22, W8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x10D9000
	010 Move W8, [X24+2772]
	011 Move W21, W4
	012 Move W20, W3
	013 Move W19, W2
	014 Move X22, X1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xE1E000
	021 Move X0, [X0+4048]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2772], W8
	025 Compare X23, 0
	026 JumpIfEqual {30}
	027 Move X0, X31
	028 Call RuntimeHelpers.get_OffsetToStringData
	029 Add X23, X23, W0
	030 Compare X22, 0
	031 JumpIfEqual {63}
	032 Move X24, 0xE1E000
	033 Move X24, [X24+4048]
	034 Move X0, X31
	035 Call RuntimeHelpers.get_OffsetToStringData
	036 Move X8, [X24]
	037 Move W24, [X22+16]
	038 Move W25, W0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Add X2, X22, W25
	045 Add X0, X23, W19
	046 And W4, W21, 1
	047 Move W5, 1
	048 Move W1, W20
	049 Move W3, W24
	050 Call CompareInfo.InvariantFindString, X0, X1, X2, X3, X4, X5
	051 Add W8, W0, W19
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X22, [X31+32]
	055 Move X21, [X31+40]
	056 Move X24, [X31+16]
	057 Move X23, [X31+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSINV not yet implemented."
	060 Move X30, [X31+64]
	061 Move X25, [X31+72]
	062 Return X0
	063 Call 0x1C17F20

Method: System.Int32 InvariantLastIndexOf(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Boolean ignoreCase)

Disassembly:
	0x03304AC4 STP X24, X23, [X31 + 0x10]
	0x03304AC8 STP X22, X21, [X31 + 0x20]
	0x03304ACC STP X20, X19, [X31 + 0x30]
	0x03304AD0 ADRP X24, 0x10D8000
	0x03304AD4 LDRB W8, [X24 + 0xADE]
	0x03304AD8 MOV X19, X4
	0x03304ADC MOV X20, X3
	0x03304AE0 MOV X21, X2
	0x03304AE4 MOV X22, X1
	0x03304AE8 MOV X23, X0
	0x03304AEC TBNZ X8, 0x0, 0x3304B1C
	0x03304AF0 ADRP X0, 0xE1D000
	0x03304AF4 LDR X0, [X0 + 0xFD0]
	0x03304AF8 BL 0x1C16CF4
	0x03304AFC ADRP X0, 0xE23000
	0x03304B00 LDR X0, [X0 + 0x930]
	0x03304B04 BL 0x1C16CF4
	0x03304B08 ADRP X0, 0xE1E000
	0x03304B0C LDR X0, [X0 + 0x28]
	0x03304B10 BL 0x1C16CF4
	0x03304B14 MOVZ W8, 0x1
	0x03304B18 STRB W8, [X24 + 0xADE]
	0x03304B1C CBZ W21, 0x3304BB8
	0x03304B20 CBZ W19, 0x3304BB8
	0x03304B24 ADRP X24, 0xE23000
	0x03304B28 LDR X24, [X24 + 0x930]
	0x03304B2C LDR X0, [X24]
	0x03304B30 LDR W8, [X0 + 0xE0]
	0x03304B34 CBNZ W8, 0x3304B3C
	0x03304B38 BL 0x1C16DFC
	0x03304B3C ADRP X25, 0x10D8000
	0x03304B40 LDRB W8, [X25 + 0xAFE]
	0x03304B44 CBNZ W8, 0x3304B5C
	0x03304B48 ADRP X0, 0xE23000
	0x03304B4C LDR X0, [X0 + 0x930]
	0x03304B50 BL 0x1C16CF4
	0x03304B54 MOVZ W8, 0x1
	0x03304B58 STRB W8, [X25 + 0xAFE]
	0x03304B5C LDR X0, [X24]
	0x03304B60 LDR W8, [X0 + 0xE0]
	0x03304B64 CBNZ W8, 0x3304B70
	0x03304B68 BL 0x1C16DFC
	0x03304B6C LDR X0, [X24]
	0x03304B70 LDR X8, [X0 + 0xB8]
	0x03304B74 LDRB W8, [X8]
	0x03304B78 CBZ W8, 0x3304BD0
	0x03304B7C ADRP X8, 0xE1D000
	0x03304B80 LDR X8, [X8 + 0xFD0]
	0x03304B84 LDR X0, [X8]
	0x03304B88 LDR W8, [X0 + 0xE0]
	0x03304B8C CBNZ W8, 0x3304B94

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x10D9000
	010 Move W8, [X24+2773]
	011 Move W20, W4
	012 Move W19, W3
	013 Move W21, W2
	014 Move X22, X1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xE1E000
	021 Move X0, [X0+4048]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2773], W8
	025 Compare X23, 0
	026 JumpIfEqual {30}
	027 Move X0, X31
	028 Call RuntimeHelpers.get_OffsetToStringData
	029 Add X23, X23, W0
	030 Compare X22, 0
	031 JumpIfEqual {65}
	032 Move X24, 0xE1E000
	033 Move X24, [X24+4048]
	034 Move X0, X31
	035 Call RuntimeHelpers.get_OffsetToStringData
	036 Move X8, [X24]
	037 Move W24, [X22+16]
	038 Move W25, W0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Subtract W8, W21, W19
	045 Add W21, W8, 1
	046 Add X2, X22, W25
	047 Add X0, X23, W21
	048 And W4, W20, 1
	049 Move W1, W19
	050 Move W3, W24
	051 Move W5, W31
	052 Call CompareInfo.InvariantFindString, X0, X1, X2, X3, X4, X5
	053 Add W8, W21, W0
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CSINV not yet implemented."
	062 Move X30, [X31+64]
	063 Move X25, [X31+72]
	064 Return X0
	065 Call 0x1C17F20

Method: System.Int32 InvariantFindString(System.Char* source, System.Int32 sourceCount, System.Char* value, System.Int32 valueCount, System.Boolean ignoreCase, System.Boolean start)

Disassembly:
	0x03304728 B.NE 0x3304754
	0x0330472C ADRP X22, 0x10D8000
	0x03304730 LDRB W8, [X22 + 0x3AB]
	0x03304734 CBZ W8, 0x3304884
	0x03304738 CBZ X21, 0x330489C
	0x0330473C MOV X0, X21
	0x03304740 MOV X1, X31
	0x03304744 BL 0x3225708
	0x03304748 LDR W21, [X21 + 0x10]
	0x0330474C MOV X22, X0
	0x03304750 B 0x33048A0
	0x03304754 TBNZ X22, 0x1E, 0x3304850
	0x03304758 MOVZ W8, 0xFFE0
	0x0330475C MOVK W8, 0xDFFF0000
	0x03304760 ANDS W31, W22, W8, 0x0
	0x03304764 B.NE 0x33049E0
	0x03304768 CBZ X21, 0x33048D8
	0x0330476C ADRP X25, 0xE23000
	0x03304770 LDR X25, [X25 + 0x930]
	0x03304774 LDR X0, [X25]
	0x03304778 LDR W8, [X0 + 0xE0]
	0x0330477C CBNZ W8, 0x3304784
	0x03304780 BL 0x1C16DFC
	0x03304784 ADRP X26, 0x10D8000
	0x03304788 LDRB W8, [X26 + 0xAFE]
	0x0330478C CBNZ W8, 0x33047A4
	0x03304790 ADRP X0, 0xE23000
	0x03304794 LDR X0, [X0 + 0x930]
	0x03304798 BL 0x1C16CF4
	0x0330479C MOVZ W8, 0x1
	0x033047A0 STRB W8, [X26 + 0xAFE]
	0x033047A4 LDR X0, [X25]
	0x033047A8 LDR W8, [X0 + 0xE0]
	0x033047AC CBNZ W8, 0x33047B8
	0x033047B0 BL 0x1C16DFC
	0x033047B4 LDR X0, [X25]
	0x033047B8 LDR X8, [X0 + 0xB8]
	0x033047BC LDRB W8, [X8]
	0x033047C0 CBZ W8, 0x3304994
	0x033047C4 ADRP X23, 0x10D8000
	0x033047C8 LDRB W8, [X23 + 0x3AB]
	0x033047CC CBNZ W8, 0x33047E4
	0x033047D0 ADRP X0, 0xE16000
	0x033047D4 LDR X0, [X0 + 0x290]
	0x033047D8 BL 0x1C16CF4
	0x033047DC MOVZ W8, 0x1
	0x033047E0 STRB W8, [X23 + 0x3AB]
	0x033047E4 MOV X0, X21
	0x033047E8 MOV X1, X31
	0x033047EC BL 0x3225708
	0x033047F0 LDR W21, [X21 + 0x10]
	0x033047F4 MOV X23, X0
	0x033047F8 TBNZ X22, 0x0, 0x33049C0
	0x033047FC ADRP X22, 0x10D8000
	0x03304800 LDRB W8, [X22 + 0xAFF]
	0x03304804 CBNZ W8, 0x3304828
	0x03304808 ADRP X0, 0xE1E000
	0x0330480C LDR X0, [X0 + 0x20]
	0x03304810 BL 0x1C16CF4
	0x03304814 ADRP X0, 0xE1E000
	0x03304818 LDR X0, [X0 + 0x28]
	0x0330481C BL 0x1C16CF4
	0x03304820 MOVZ W8, 0x1
	0x03304824 STRB W8, [X22 + 0xAFF]
	0x03304828 ADRP X22, 0xE1E000
	0x0330482C LDR X22, [X22 + 0x20]
	0x03304830 MOV X0, X20
	0x03304834 MOV X1, X19
	0x03304838 LDR X2, [X22]
	0x0330483C BL 0x2218CF8
	0x03304840 LDR X2, [X22]
	0x03304844 MOV X20, X0
	0x03304848 MOV X0, X23
	0x0330484C B 0x3304960
	0x03304850 MOVZ W8, 0x40000000
	0x03304854 CMP W22, W8
	0x03304858 B.NE 0x3304A00
	0x0330485C ADRP X22, 0x10D8000
	0x03304860 LDRB W8, [X22 + 0x3AB]
	0x03304864 CBZ W8, 0x33048F4
	0x03304868 CBZ X21, 0x330490C
	0x0330486C MOV X0, X21
	0x03304870 MOV X1, X31
	0x03304874 BL 0x3225708
	0x03304878 LDR W21, [X21 + 0x10]
	0x0330487C MOV X22, X0
	0x03304880 B 0x3304910
	0x03304884 ADRP X0, 0xE16000
	0x03304888 LDR X0, [X0 + 0x290]
	0x0330488C BL 0x1C16CF4
	0x03304890 MOVZ W8, 0x1
	0x03304894 STRB W8, [X22 + 0x3AB]
	0x03304898 CBNZ X21, 0x330473C
	0x0330489C MOV X22, X31
	0x033048A0 LDR X0, [X24]
	0x033048A4 LDR W8, [X0 + 0xE0]
	0x033048A8 CBNZ W8, 0x33048B0
	0x033048AC BL 0x1C16DFC
	0x033048B0 MOV X0, X20
	0x033048B4 MOV X1, X19
	0x033048B8 MOV X2, X22
	0x033048BC MOV X3, X21
	0x033048C0 LDP X20, X19, [X31 + 0x40]
	0x033048C4 LDP X22, X21, [X31 + 0x30]
	0x033048C8 LDP X24, X23, [X31 + 0x20]
	0x033048CC LDP X26, X25, [X31 + 0x10]
	0x033048D0 LDR X30, [X31], #0x50
	0x033048D4 B 0x33043D4
	0x033048D8 LDP X20, X19, [X31 + 0x40]
	0x033048DC LDP X22, X21, [X31 + 0x30]
	0x033048E0 LDP X24, X23, [X31 + 0x20]
	0x033048E4 LDP X26, X25, [X31 + 0x10]
	0x033048E8 MOVZ W0, 0x1
	0x033048EC LDR X30, [X31], #0x50
	0x033048F0 RET
	0x033048F4 ADRP X0, 0xE16000
	0x033048F8 LDR X0, [X0 + 0x290]
	0x033048FC BL 0x1C16CF4
	0x03304900 MOVZ W8, 0x1
	0x03304904 STRB W8, [X22 + 0x3AB]
	0x03304908 CBNZ X21, 0x330486C
	0x0330490C MOV X22, X31
	0x03304910 ADRP X23, 0x10D8000
	0x03304914 LDRB W8, [X23 + 0xAFF]
	0x03304918 CBNZ W8, 0x330493C
	0x0330491C ADRP X0, 0xE1E000
	0x03304920 LDR X0, [X0 + 0x20]
	0x03304924 BL 0x1C16CF4
	0x03304928 ADRP X0, 0xE1E000
	0x0330492C LDR X0, [X0 + 0x28]
	0x03304930 BL 0x1C16CF4
	0x03304934 MOVZ W8, 0x1
	0x03304938 STRB W8, [X23 + 0xAFF]
	0x0330493C ADRP X23, 0xE1E000
	0x03304940 LDR X23, [X23 + 0x20]
	0x03304944 MOV X0, X20
	0x03304948 MOV X1, X19
	0x0330494C LDR X2, [X23]
	0x03304950 BL 0x2218CF8
	0x03304954 LDR X2, [X23]
	0x03304958 MOV X20, X0
	0x0330495C MOV X0, X22
	0x03304960 MOV X1, X21
	0x03304964 BL 0x2218CF8
	0x03304968 MOV X2, X0
	0x0330496C MOV X0, X20
	0x03304970 MOV W1, W19
	0x03304974 MOV W3, W21
	0x03304978 LDP X20, X19, [X31 + 0x40]
	0x0330497C LDP X22, X21, [X31 + 0x30]
	0x03304980 LDP X24, X23, [X31 + 0x20]
	0x03304984 LDP X26, X25, [X31 + 0x10]
	0x03304988 MOV X4, X31
	0x0330498C LDR X30, [X31], #0x50
	0x03304990 B 0x33911D8
	0x03304994 MOV X0, X23
	0x03304998 MOV X1, X20
	0x0330499C MOV X2, X19
	0x033049A0 MOV X3, X21
	0x033049A4 MOV W4, W22
	0x033049A8 LDP X20, X19, [X31 + 0x40]
	0x033049AC LDP X22, X21, [X31 + 0x30]
	0x033049B0 LDP X24, X23, [X31 + 0x20]
	0x033049B4 LDP X26, X25, [X31 + 0x10]
	0x033049B8 LDR X30, [X31], #0x50
	0x033049BC B 0x3304A5C
	0x033049C0 LDR X0, [X24]
	0x033049C4 LDR W8, [X0 + 0xE0]
	0x033049C8 CBNZ W8, 0x33049D0
	0x033049CC BL 0x1C16DFC
	0x033049D0 MOV X0, X20
	0x033049D4 MOV X1, X19
	0x033049D8 MOV X2, X23
	0x033049DC B 0x33048BC
	0x033049E0 ADRP X0, 0xDF7000
	0x033049E4 LDR X0, [X0 + 0x578]
	0x033049E8 BL 0x1C16D08
	0x033049EC BL 0x1C16F10
	0x033049F0 MOV X19, X0
	0x033049F4 ADRP X0, 0xE1F000
	0x033049F8 LDR X0, [X0 + 0x958]
	0x033049FC B 0x3304A1C
	0x03304A00 ADRP X0, 0xDF7000
	0x03304A04 LDR X0, [X0 + 0x578]
	0x03304A08 BL 0x1C16D08
	0x03304A0C BL 0x1C16F10
	0x03304A10 MOV X19, X0
	0x03304A14 ADRP X0, 0xE23000
	0x03304A18 LDR X0, [X0 + 0x938]
	0x03304A1C BL 0x1C16D08
	0x03304A20 MOV X20, X0
	0x03304A24 ADRP X0, 0xE23000
	0x03304A28 LDR X0, [X0 + 0x830]
	0x03304A2C BL 0x1C16D08
	0x03304A30 MOV X2, X0
	0x03304A34 MOV X0, X19
	0x03304A38 MOV X1, X20
	0x03304A3C MOV X3, X31
	0x03304A40 BL 0x330E16C
	0x03304A44 ADRP X0, 0xE23000
	0x03304A48 LDR X0, [X0 + 0x948]
	0x03304A4C BL 0x1C16D08
	0x03304A50 MOV X1, X0
	0x03304A54 MOV X0, X19
	0x03304A58 BL 0x1C16DEC
	0x03304A5C SUB X31, X31, 0x30
	0x03304A60 STP X30, X21, [X31 + 0x10]
	0x03304A64 STP X20, X19, [X31 + 0x20]
	0x03304A68 MOV X20, X3
	0x03304A6C MOV X21, X0
	0x03304A70 MOV X0, X31
	0x03304A74 MOV X3, X31
	0x03304A78 MOV W19, W4
	0x03304A7C BL 0x322EB14
	0x03304A80 CBZ X0, 0x3304ABC
	0x03304A84 CBZ X20, 0x3304ABC
	0x03304A88 LDR W3, [X0 + 0x10]
	0x03304A8C LDR W6, [X20 + 0x10]
	0x03304A90 MOV X1, X0
	0x03304A94 MOV X0, X21
	0x03304A98 MOV W2, W31
	0x03304A9C MOV X4, X20
	0x03304AA0 MOV W5, W31
	0x03304AA4 MOV W7, W19
	0x03304AA8 BL 0x33045C8
	0x03304AAC LDP X20, X19, [X31 + 0x20]
	0x03304AB0 LDP X30, X21, [X31 + 0x10]
	0x03304AB4 ADD X31, X31, 0x30
	0x03304AB8 RET
	0x03304ABC BL 0x1C16F20
	0x03304AC0 STP X30, X25, [X31 - 0x40]!

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X25, 0x10D9000
	015 Move W8, [X25+2774]
	016 Move W23, W5
	017 Move W22, W4
	018 Move W19, W3
	019 Move X21, X2
	020 Move W24, W1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xE1E000
	027 Move X0, [X0+4048]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+2774], W8
	031 Compare W19, 0
	032 JumpIfEqual {37}
	033 Subtract W24, W24, W19
	034 Move TEMP, 0
	035 Not TEMP
	036 Move W0, TEMP
	037 Subtract W8, W24, 1
	038 And W31, W23, 1
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 Move X20, [X31+96]
	041 Move X19, [X31+104]
	042 Move X22, [X31+80]
	043 Move X21, [X31+88]
	044 Move X24, [X31+64]
	045 Move X23, [X31+72]
	046 Move X26, [X31+48]
	047 Move X25, [X31+56]
	048 Move X28, [X31+32]
	049 Move X27, [X31+40]
	050 Move X29, [X31+16]
	051 Move X30, [X31+24]
	052 Add X31, X31, 112
	053 Return X0
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move TEMP, X23
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {127}
	059 Move TEMP, X22
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {192}
	063 Move X22, 0xE1E000
	064 Move X22, [X22+4048]
	065 Move X0, [X22]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Subtract W8, W25, 97
	071 Subtract W9, W25, 32
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CSEL not yet implemented."
	074 Move TEMP, X24
	075 And TEMP, TEMP, -2147483648
	076 Compare TEMP, -2147483648
	077 JumpIfEqual {34}
	078 Move W8, W19
	079 Move W25, W31
	080 Add X29, X21, 2
	081 Subtract X28, X8, 1
	082 Move [X31+8], X28
	083 Move X0, [X22]
	084 NotImplemented "Instruction LDRH not yet implemented."
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Subtract W8, W21, 97
	090 Subtract W9, W21, 32
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CSEL not yet implemented."
	093 And W8, W8, 0xFFFF
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move W27, 1
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X26, X29
	098 Move X0, [X22]
	099 Add W8, W25, W27
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Move W9, [X0+224]
	102 Compare W9, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Subtract W8, W21, 97
	107 Subtract W9, W21, 32
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction CSEL not yet implemented."
	110 Subtract W9, W10, 97
	111 Subtract W11, W10, 32
	112 NotImplemented "Instruction CMP not yet implemented."
	113 And W8, W8, 0xFFFF
	114 NotImplemented "Instruction CSEL not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Add W27, W27, 1
	117 Subtract X28, X28, 1
	118 Add X29, X29, 2
	119 Move X28, [X31+8]
	120 Move X29, X26
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Add W25, W25, 1
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move TEMP, 0
	125 Not TEMP
	126 Move W0, TEMP
	127 Move TEMP, X22
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {219}
	131 Move X22, 0xE1E000
	132 Move X22, [X22+4048]
	133 Move X0, [X22]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Subtract W8, W25, 97
	139 Subtract W9, W25, 32
	140 NotImplemented "Instruction CMP not yet implemented."
	141 NotImplemented "Instruction CSEL not yet implemented."
	142 Move TEMP, X24
	143 And TEMP, TEMP, -2147483648
	144 Compare TEMP, -2147483648
	145 JumpIfEqual {34}
	146 Move W8, W19
	147 Add X21, X21, 2
	148 Subtract X25, X8, 1
	149 Move X0, [X22]
	150 NotImplemented "Instruction LDRH not yet implemented."
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Subtract W8, W26, 97
	156 Subtract W9, W26, 32
	157 NotImplemented "Instruction CMP not yet implemented."
	158 NotImplemented "Instruction CSEL not yet implemented."
	159 And W8, W8, 0xFFFF
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move W26, 1
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X27, X25
	164 Move X28, X21
	165 Move X0, [X22]
	166 Add W8, W24, W26
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Move W9, [X0+224]
	169 Compare W9, 0
	170 JumpIfNotEqual {172}
	171 Call 0x1C17DFC
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Subtract W8, W29, 97
	174 Subtract W9, W29, 32
	175 NotImplemented "Instruction CMP not yet implemented."
	176 NotImplemented "Instruction CSEL not yet implemented."
	177 Subtract W9, W10, 97
	178 Subtract W11, W10, 32
	179 NotImplemented "Instruction CMP not yet implemented."
	180 And W8, W8, 0xFFFF
	181 NotImplemented "Instruction CSEL not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Add W26, W26, 1
	184 Subtract X27, X27, 1
	185 Add X28, X28, 2
	186 NotImplemented "Instruction CMP not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Subtract W24, W24, 1
	189 Move TEMP, 0
	190 Not TEMP
	191 Move W0, TEMP
	192 Move TEMP, X24
	193 And TEMP, TEMP, -2147483648
	194 Compare TEMP, -2147483648
	195 JumpIfEqual {34}
	196 Move W10, W19
	197 Move W8, W31
	198 Add X9, X21, 2
	199 Subtract X10, X10, 1
	200 Move TEMP, 0
	201 Not TEMP
	202 Move W0, TEMP
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move W11, 1
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X12, X10
	208 Move X13, X9
	209 Add W14, W8, W11
	210 NotImplemented "Instruction LDRH not yet implemented."
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Add W11, W11, 1
	214 Subtract X12, X12, 1
	215 Add X13, X13, 2
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Add W8, W8, 1
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move TEMP, X24
	220 And TEMP, TEMP, -2147483648
	221 Compare TEMP, -2147483648
	222 JumpIfEqual {34}
	223 Move W9, W19
	224 Add X8, X21, 2
	225 Subtract X9, X9, 1
	226 Move TEMP, 0
	227 Not TEMP
	228 Move W0, TEMP
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move W10, 1
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move X11, X9
	234 Move X12, X8
	235 Add W13, W24, W10
	236 NotImplemented "Instruction LDRH not yet implemented."
	237 NotImplemented "Instruction LDRH not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Add W10, W10, 1
	240 Subtract X11, X11, 1
	241 Add X12, X12, 2
	242 NotImplemented "Instruction CMP not yet implemented."
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Subtract W24, W24, 1
	245 Move W0, W24
	246 Move W0, W25
	247 Move W0, W8

Method: System.Char InvariantToUpper(System.Char c)

Disassembly:
	0x03304B90 BL 0x1C16DFC
	0x03304B94 MOV X0, X22
	0x03304B98 MOV X1, X21
	0x03304B9C MOV X2, X20
	0x03304BA0 MOV X3, X19
	0x03304BA4 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 And W8, W0, 0xFFFF
	002 Subtract W8, W8, 97
	003 Subtract W9, W0, 32
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Return X0

Method: System.Globalization.SortKey InvariantCreateSortKey(System.String source, System.Globalization.CompareOptions options)

Disassembly:
	0x03304BA8 LDP X22, X21, [X31 + 0x20]
	0x03304BAC LDP X24, X23, [X31 + 0x10]
	0x03304BB0 LDP X30, X25, [X31], #0x40
	0x03304BB4 B 0x33043D4
	0x03304BB8 SUB W0, W21, W19
	0x03304BBC LDP X20, X19, [X31 + 0x30]
	0x03304BC0 LDP X22, X21, [X31 + 0x20]
	0x03304BC4 LDP X24, X23, [X31 + 0x10]
	0x03304BC8 LDP X30, X25, [X31], #0x40
	0x03304BCC RET
	0x03304BD0 MOV X0, X23
	0x03304BD4 MOV X1, X22
	0x03304BD8 MOV X2, X21
	0x03304BDC MOV X3, X20
	0x03304BE0 MOV X4, X19
	0x03304BE4 LDP X20, X19, [X31 + 0x30]
	0x03304BE8 LDP X22, X21, [X31 + 0x20]
	0x03304BEC LDP X24, X23, [X31 + 0x10]
	0x03304BF0 MOVZ W5, 0x1
	0x03304BF4 LDP X30, X25, [X31], #0x40
	0x03304BF8 B 0x3304BFC
	0x03304BFC SUB X31, X31, 0x50
	0x03304C00 STR X30, [X31 + 0x10]
	0x03304C04 STP X24, X23, [X31 + 0x20]
	0x03304C08 STP X22, X21, [X31 + 0x30]
	0x03304C0C STP X20, X19, [X31 + 0x40]
	0x03304C10 MOV X23, X3
	0x03304C14 MOV X20, X0
	0x03304C18 MOV X0, X31
	0x03304C1C MOV X3, X31
	0x03304C20 MOV W19, W5
	0x03304C24 MOV X22, X4
	0x03304C28 BL 0x322EB14
	0x03304C2C MOV X21, X0
	0x03304C30 MOV X0, X31
	0x03304C34 MOV X1, X23
	0x03304C38 MOV X2, X22
	0x03304C3C MOV X3, X31
	0x03304C40 BL 0x322EB14
	0x03304C44 CBZ X21, 0x3304CD0
	0x03304C48 ADRP X24, 0x10D5000
	0x03304C4C LDRB W8, [X24 + 0x762]
	0x03304C50 LDR W23, [X21 + 0x10]
	0x03304C54 MOV X22, X0
	0x03304C58 CBNZ W8, 0x3304C70
	0x03304C5C ADRP X0, 0xE16000
	0x03304C60 LDR X0, [X0 + 0x290]
	0x03304C64 BL 0x1C16CF4
	0x03304C68 MOVZ W8, 0x1
	0x03304C6C STRB W8, [X24 + 0x762]
	0x03304C70 CBZ X22, 0x3304CD4
	0x03304C74 MOV X0, X22
	0x03304C78 MOV X1, X31
	0x03304C7C BL 0x3225708
	0x03304C80 LDR W2, [X22 + 0x10]
	0x03304C84 MOV X1, X0
	0x03304C88 MOV X0, X31
	0x03304C8C MOV X3, X31
	0x03304C90 BL 0x322EB14
	0x03304C94 LDR W6, [X22 + 0x10]
	0x03304C98 MOV X4, X0
	0x03304C9C MOV X0, X20
	0x03304CA0 MOV X1, X21
	0x03304CA4 MOV W2, W31
	0x03304CA8 MOV W3, W23
	0x03304CAC MOV W5, W31
	0x03304CB0 MOV W7, W19
	0x03304CB4 BL 0x33045C8
	0x03304CB8 LDP X20, X19, [X31 + 0x40]
	0x03304CBC LDP X22, X21, [X31 + 0x30]
	0x03304CC0 LDP X24, X23, [X31 + 0x20]
	0x03304CC4 LDR X30, [X31 + 0x10]
	0x03304CC8 ADD X31, X31, 0x50
	0x03304CCC RET
	0x03304CD0 BL 0x1C16F20
	0x03304CD4 MOV X0, X31
	0x03304CD8 MOV X1, X31
	0x03304CDC MOV X2, X31
	0x03304CE0 MOV X3, X31
	0x03304CE4 BL 0x322EB14
	0x03304CE8 BL 0x1C16F20
	0x03304CEC SUB X31, X31, 0x70
	0x03304CF0 STP X29, X30, [X31 + 0x10]
	0x03304CF4 STP X28, X27, [X31 + 0x20]
	0x03304CF8 STP X26, X25, [X31 + 0x30]
	0x03304CFC STP X24, X23, [X31 + 0x40]
	0x03304D00 STP X22, X21, [X31 + 0x50]
	0x03304D04 STP X20, X19, [X31 + 0x60]
	0x03304D08 ADRP X27, 0x10D8000
	0x03304D0C LDRB W8, [X27 + 0xADF]
	0x03304D10 MOV W24, W7
	0x03304D14 MOV W19, W6
	0x03304D18 MOV W21, W5
	0x03304D1C MOV X22, X4
	0x03304D20 MOV W20, W3
	0x03304D24 MOV W23, W2
	0x03304D28 MOV X25, X1
	0x03304D2C MOV X26, X0
	0x03304D30 TBNZ X8, 0x0, 0x3304D54
	0x03304D34 ADRP X0, 0xE1D000
	0x03304D38 LDR X0, [X0 + 0xFD0]
	0x03304D3C BL 0x1C16CF4
	0x03304D40 ADRP X0, 0xE23000
	0x03304D44 LDR X0, [X0 + 0x930]
	0x03304D48 BL 0x1C16CF4
	0x03304D4C MOVZ W8, 0x1
	0x03304D50 STRB W8, [X27 + 0xADF]
	0x03304D54 MOVZ W8, 0x10000000
	0x03304D58 CMP W24, W8
	0x03304D5C B.NE 0x3304DA0
	0x03304D60 CMP W20, W19
	0x03304D64 CSEL W4, W20, W19, LT
	0x03304D68 MOVZ W5, 0x5
	0x03304D6C MOV X0, X25
	0x03304D70 MOV W1, W23
	0x03304D74 MOV X2, X22
	0x03304D78 MOV W3, W21
	0x03304D7C MOV X6, X31
	0x03304D80 BL 0x3225DC8
	0x03304D84 CMP W20, W19
	0x03304D88 B.EQ 0x3304F50
	0x03304D8C CBNZ W0, 0x3304F50
	0x03304D90 CMP W20, W19
	0x03304D94 MOVZ W8, 0x1
	0x03304D98 CSNEG W0, W8, W8, GT
	0x03304D9C B 0x3304F50
	0x03304DA0 TBNZ X19, 0x1F, 0x33050F0
	0x03304DA4 TBNZ X20, 0x1F, 0x33050F0
	0x03304DA8 TBNZ X21, 0x1F, 0x3305108
	0x03304DAC TBNZ X23, 0x1F, 0x3305108
	0x03304DB0 CBZ X25, 0x3304DBC
	0x03304DB4 LDR W8, [X25 + 0x10]
	0x03304DB8 B 0x3304DC0
	0x03304DBC MOV W8, W31
	0x03304DC0 SUB W8, W8, W20
	0x03304DC4 CMP W8, W23
	0x03304DC8 B.LT 0x3305174
	0x03304DCC CBZ X22, 0x3304DD8
	0x03304DD0 LDR W8, [X22 + 0x10]
	0x03304DD4 B 0x3304DDC
	0x03304DD8 MOV W8, W31
	0x03304DDC SUB W8, W8, W19
	0x03304DE0 CMP W8, W21
	0x03304DE4 B.LT 0x3305194
	0x03304DE8 TBNZ X24, 0x1E, 0x3304E1C
	0x03304DEC MOVZ W8, 0xFFE0
	0x03304DF0 MOVK W8, 0xDFFF0000
	0x03304DF4 ANDS W31, W24, W8, 0x0
	0x03304DF8 B.EQ 0x3304E28
	0x03304DFC ADRP X0, 0xDF7000
	0x03304E00 LDR X0, [X0 + 0x578]
	0x03304E04 BL 0x1C16D08
	0x03304E08 BL 0x1C16F10
	0x03304E0C MOV X19, X0
	0x03304E10 ADRP X0, 0xE1F000
	0x03304E14 LDR X0, [X0 + 0x958]
	0x03304E18 B 0x33051F8
	0x03304E1C MOVZ W8, 0x40000000
	0x03304E20 CMP W24, W8
	0x03304E24 B.NE 0x33051DC
	0x03304E28 CBZ X25, 0x3304F40
	0x03304E2C CBZ X22, 0x3304F4C
	0x03304E30 ADRP X28, 0x10D5000
	0x03304E34 LDRB W8, [X28 + 0x761]
	0x03304E38 CBNZ W8, 0x3304E50
	0x03304E3C ADRP X0, 0xE16000
	0x03304E40 LDR X0, [X0 + 0x290]
	0x03304E44 BL 0x1C16CF4
	0x03304E48 MOVZ W8, 0x1
	0x03304E4C STRB W8, [X28 + 0x761]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x10D9000
	011 Move W8, [X22+2775]
	012 Move W19, W2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xDF8000
	020 Move X0, [X0+3272]
	021 Call 0x1C17CF4
	022 Move X0, 0xDF0000
	023 Move X0, [X0+1560]
	024 Call 0x1C17CF4
	025 Move X0, 0xE1E000
	026 Move X0, [X0+4048]
	027 Call 0x1C17CF4
	028 Move X0, 0xE1E000
	029 Move X0, [X0+3096]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+2775], W8
	033 Compare X20, 0
	034 JumpIfEqual {154}
	035 Move W8, 0xFFE0
	036 NotImplemented "Instruction MOVK not yet implemented."
	037 And W31, W19, W8
	038 Move W8, [X20+16]
	039 Compare W8, 0
	040 JumpIfEqual {68}
	041 Move X9, 0xDF0000
	042 Move X9, [X9+1560]
	043 Move W24, 1
	044 Move W1, W8
	045 ShiftRight W1, 31
	046 And W1, W1, 0x3FFFFFFF
	047 NotImplemented "Instruction MOVK not yet implemented."
	048 Move X0, [X9]
	049 Call 0x1C17D6C
	050 Move X22, X0
	051 Move X0, X31
	052 Call RuntimeHelpers.get_OffsetToStringData
	053 Compare X22, 0
	054 JumpIfEqual {98}
	055 Move W8, [X22+24]
	056 Add X9, X22, 32
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CSEL not yet implemented."
	059 And W31, W19, W24
	060 Compare X22, 0
	061 JumpIfEqual {189}
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Add X0, X20, W0
	064 Move X1, X23
	065 Move X4, X31
	066 Move X3, X2
	067 Call Buffer.MemoryCopy, X0, X1, X2, X3
	068 Move X8, 0xDF8000
	069 Move X8, [X8+3272]
	070 Move X22, [X8]
	071 Move X8, [X22+56]
	072 Compare X8, 0
	073 JumpIfNotEqual {77}
	074 Move X0, X22
	075 Call 0x1C5D6E0
	076 Move X8, [X22+56]
	077 Move X0, [X8+16]
	078 Move W8, [X0+309]
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {84}
	083 Call 0x1C5D684
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X8, [X22+56]
	089 Move X0, [X8+16]
	090 Move W8, [X0+309]
	091 Move TEMP, X8
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {96}
	095 Call 0x1C5D684
	096 Move X8, [X0+184]
	097 Move X22, [X8]
	098 And W31, W19, W24
	099 Move X23, X31
	100 Move W8, [X20+16]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X26, 0xE1E000
	103 Move X26, [X26+4048]
	104 Move X24, X31
	105 Move X0, X20
	106 Move W1, W24
	107 Move X2, X31
	108 Call String.get_Chars, X0, X1
	109 Move X8, [X26]
	110 Move W25, W0
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {116}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 And W8, W25, 0xFFFF
	117 Subtract W8, W8, 97
	118 Subtract W9, W25, 32
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CSEL not yet implemented."
	121 NotImplemented "Instruction STRH not yet implemented."
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 Add X24, X24, 1
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X8, [X21]
	126 Move X23, 0xE1E000
	127 Move X0, X21
	128 Move X9, [X8+392]
	129 Move X1, [X8+400]
	130 Move X23, [X23+3096]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X8, [X23]
	133 Move X21, X0
	134 Move X0, X8
	135 Call 0x1C17F10
	136 Move X1, X21
	137 Move X2, X20
	138 Move W3, W19
	139 Move X4, X22
	140 Move X5, X31
	141 Move X23, X0
	142 Call SortKey..ctor, X0, X1, X2, X3, X4
	143 Move X0, X23
	144 Move X20, [X31+64]
	145 Move X19, [X31+72]
	146 Move X22, [X31+48]
	147 Move X21, [X31+56]
	148 Move X24, [X31+32]
	149 Move X23, [X31+40]
	150 Move X26, [X31+16]
	151 Move X25, [X31+24]
	152 Move X30, [X31+80]
	153 Return X0
	154 Move X0, 0xDF5000
	155 Move X0, [X0+1320]
	156 Call 0x1C17D08
	157 Call 0x1C17F10
	158 Move X19, X0
	159 Move X0, 0xDFB000
	160 Move X0, [X0+1408]
	161 Call 0x1C17D08
	162 Move X1, X0
	163 Move X0, X19
	164 Move X2, X31
	165 Call ArgumentNullException..ctor, X0, X1
	166 Move X0, 0xDF8000
	167 Move X0, [X0+1400]
	168 Call 0x1C17D08
	169 Call 0x1C17F10
	170 Move X19, X0
	171 Move X0, 0xE20000
	172 Move X0, [X0+2392]
	173 Call 0x1C17D08
	174 Move X20, X0
	175 Move X0, 0xE24000
	176 Move X0, [X0+2096]
	177 Call 0x1C17D08
	178 Move X2, X0
	179 Move X0, X19
	180 Move X1, X20
	181 Move X3, X31
	182 Call ArgumentException..ctor, X0, X1, X2
	183 Move X0, 0xE24000
	184 Move X0, [X0+2336]
	185 Call 0x1C17D08
	186 Move X1, X0
	187 Move X0, X19
	188 Call 0x1C17DEC
	189 Call 0x1C17F20

Method: System.Void .ctor(System.Globalization.CultureInfo culture)

Disassembly:
	0x03304E50 LDR W8, [X25 + 0x10]
	0x03304E54 SUBS W8, W8, W23
	0x03304E58 B.CC 0x3304E64
	0x03304E5C CMP W8, W20
	0x03304E60 B.CS 0x3304E70
	0x03304E64 MOVZ W0, 0x18
	0x03304E68 MOV X1, X31
	0x03304E6C BL 0x339D764
	0x03304E70 MOV X0, X25
	0x03304E74 MOV X1, X31
	0x03304E78 BL 0x3225708
	0x03304E7C LDRB W8, [X28 + 0x761]
	0x03304E80 MOV X27, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Compare X20, 0
	009 JumpIfEqual {17}
	010 Move X8, [X20+72]
	011 Move [X19+16], X8
	012 Move [X19+24], X8
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 
	017 Call 0x1C17F20

Method: System.Globalization.CompareInfo GetCompareInfo(System.String name)

Disassembly:
	0x03304EA0 ADD X27, X27, W23, 0x1, SXTW
	0x03304EA4 MOV W28, W20
	0x03304EA8 SUBS W8, W8, W21
	0x03304EAC B.CC 0x3304EB8
	0x03304EB0 CMP W8, W19
	0x03304EB4 B.CS 0x3304EC4
	0x03304EB8 MOVZ W0, 0x18
	0x03304EBC MOV X1, X31
	0x03304EC0 BL 0x339D764
	0x03304EC4 MOV X0, X22
	0x03304EC8 MOV X1, X31
	0x03304ECC BL 0x3225708
	0x03304ED0 MOVZ W8, 0x40000000
	0x03304ED4 ADD X29, X0, W21, 0x1, UXTW
	0x03304ED8 CMP W24, W8
	0x03304EDC MOV W8, W19
	0x03304EE0 B.NE 0x3304F70
	0x03304EE4 ADRP X21, 0x10D8000
	0x03304EE8 MOV X22, X8
	0x03304EEC LDRB W8, [X21 + 0xAFF]
	0x03304EF0 CBNZ W8, 0x3304F14
	0x03304EF4 ADRP X0, 0xE1E000
	0x03304EF8 LDR X0, [X0 + 0x20]
	0x03304EFC BL 0x1C16CF4
	0x03304F00 ADRP X0, 0xE1E000
	0x03304F04 LDR X0, [X0 + 0x28]
	0x03304F08 BL 0x1C16CF4
	0x03304F0C MOVZ W8, 0x1
	0x03304F10 STRB W8, [X21 + 0xAFF]
	0x03304F14 ADRP X21, 0xE1E000
	0x03304F18 LDR X21, [X21 + 0x20]
	0x03304F1C MOV X0, X27
	0x03304F20 MOV X1, X28
	0x03304F24 LDR X2, [X21]
	0x03304F28 BL 0x2218CF8
	0x03304F2C LDR X2, [X21]
	0x03304F30 MOV X21, X0
	0x03304F34 MOV X0, X29
	0x03304F38 MOV X1, X22
	0x03304F3C B 0x3305030
	0x03304F40 CMP X22, 0x0
	0x03304F44 CSINV W0, W31, W31, EQ
	0x03304F48 B 0x3304F50
	0x03304F4C MOVZ W0, 0x1
	0x03304F50 LDP X20, X19, [X31 + 0x60]
	0x03304F54 LDP X22, X21, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10D9000
	005 Move W8, [X20+2776]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDF2000
	012 Move X0, [X0+3144]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2776], W8
	016 Compare X19, 0
	017 JumpIfEqual {37}
	018 Move X8, 0xDF2000
	019 Move X8, [X8+3144]
	020 Move X0, [X8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X1, X31
	027 Call CultureInfo.GetCultureInfo, X0
	028 Compare X0, 0
	029 JumpIfEqual {55}
	030 Move X8, [X0]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X2, [X8+504]
	034 Move X1, [X8+512]
	035 Move X30, [X31+32]
	036 CallNoReturn X2
	037 Move X0, 0xDF5000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xDF8000
	043 Move X0, [X0+1416]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Move X2, X31
	048 Call ArgumentNullException..ctor, X0, X1
	049 Move X0, 0xE24000
	050 Move X0, [X0+2344]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Call 0x1C17DEC
	055 Call 0x1C17F20

Method: System.Void OnDeserializing(System.Runtime.Serialization.StreamingContext ctx)

Disassembly:
	0x03304F58 LDP X24, X23, [X31 + 0x40]
	0x03304F5C LDP X26, X25, [X31 + 0x30]

ISIL:
	001 Move [X0+16], X31
	002 Return 

Method: System.Void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object sender)

Disassembly:
	0x03304F60 LDP X28, X27, [X31 + 0x20]

ISIL:
No ISIL was generated
Method: System.Void OnDeserialized(System.Runtime.Serialization.StreamingContext ctx)

Disassembly:
	0x03305008 ADRP X21, 0xE1D000

ISIL:
	001 Call CompareInfo.OnDeserialized, X0
	002 Return 

Method: System.Void OnDeserialized()

Disassembly:
	0x03304F64 LDP X29, X30, [X31 + 0x10]
	0x03304F68 ADD X31, X31, 0x70
	0x03304F6C RET
	0x03304F70 STP X8, X29, [X31]
	0x03304F74 ADRP X8, 0xE23000
	0x03304F78 LDR X8, [X8 + 0x930]
	0x03304F7C LDR X0, [X8]
	0x03304F80 LDR W8, [X0 + 0xE0]
	0x03304F84 CBNZ W8, 0x3304F8C
	0x03304F88 BL 0x1C16DFC
	0x03304F8C ADRP X29, 0x10D8000
	0x03304F90 LDRB W8, [X29 + 0xAFE]
	0x03304F94 CBNZ W8, 0x3304FAC
	0x03304F98 ADRP X0, 0xE23000
	0x03304F9C LDR X0, [X0 + 0x930]
	0x03304FA0 BL 0x1C16CF4
	0x03304FA4 MOVZ W8, 0x1
	0x03304FA8 STRB W8, [X29 + 0xAFE]
	0x03304FAC ADRP X29, 0xE23000
	0x03304FB0 LDR X29, [X29 + 0x930]
	0x03304FB4 LDR X0, [X29]
	0x03304FB8 LDR W8, [X0 + 0xE0]
	0x03304FBC CBNZ W8, 0x3304FC8
	0x03304FC0 BL 0x1C16DFC
	0x03304FC4 LDR X0, [X29]
	0x03304FC8 LDR X8, [X0 + 0xB8]
	0x03304FCC LDR X29, [X31 + 0x8]
	0x03304FD0 LDRB W8, [X8]
	0x03304FD4 CBZ W8, 0x3305068
	0x03304FD8 TBNZ X24, 0x0, 0x33050A8
	0x03304FDC ADRP X21, 0x10D8000
	0x03304FE0 LDRB W8, [X21 + 0xAFF]
	0x03304FE4 CBNZ W8, 0x3305008
	0x03304FE8 ADRP X0, 0xE1E000
	0x03304FEC LDR X0, [X0 + 0x20]
	0x03304FF0 BL 0x1C16CF4
	0x03304FF4 ADRP X0, 0xE1E000
	0x03304FF8 LDR X0, [X0 + 0x28]
	0x03304FFC BL 0x1C16CF4
	0x03305000 MOVZ W8, 0x1
	0x03305004 STRB W8, [X21 + 0xAFF]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10D9000
	005 Move W8, [X20+2777]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDF2000
	012 Move X0, [X0+3144]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2777], W8
	016 Move X8, 0xDF2000
	017 Move X20, [X19+16]
	018 Move X8, [X8+3144]
	019 Compare X20, 0
	020 JumpIfEqual {33}
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Call CultureInfo.GetCultureInfo, X0
	029 Compare X0, 0
	030 JumpIfEqual {50}
	031 Move X8, [X0+72]
	032 Move [X19+24], X8
	033 Move X0, [X8]
	034 Move W20, [X19+40]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move W0, W20
	040 Move X1, X31
	041 Call CultureInfo.GetCultureInfo, X0
	042 Compare X0, 0
	043 JumpIfEqual {50}
	044 Move X8, [X0+72]
	045 Move [X19+16], X8
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Return 
	050 Call 0x1C17F20

Method: System.Void OnSerializing(System.Runtime.Serialization.StreamingContext ctx)

Disassembly:
	0x0330500C LDR X21, [X21 + 0x20]
	0x03305010 MOV X0, X27
	0x03305014 MOV X1, X28
	0x03305018 LDR X2, [X21]
	0x0330501C BL 0x2218CF8
	0x03305020 LDR X2, [X21]
	0x03305024 LDR X1, [X31]
	0x03305028 MOV X21, X0
	0x0330502C MOV X0, X29
	0x03305030 BL 0x2218CF8
	0x03305034 MOV X2, X0
	0x03305038 MOV X0, X21
	0x0330503C MOV W1, W20
	0x03305040 MOV W3, W19
	0x03305044 LDP X20, X19, [X31 + 0x60]
	0x03305048 LDP X22, X21, [X31 + 0x50]
	0x0330504C LDP X24, X23, [X31 + 0x40]
	0x03305050 LDP X26, X25, [X31 + 0x30]
	0x03305054 LDP X28, X27, [X31 + 0x20]
	0x03305058 LDP X29, X30, [X31 + 0x10]
	0x0330505C MOV X4, X31
	0x03305060 ADD X31, X31, 0x70
	0x03305064 B 0x33911D8
	0x03305068 MOV X0, X26
	0x0330506C MOV X1, X25
	0x03305070 MOV W2, W23
	0x03305074 MOV W3, W20
	0x03305078 MOV X4, X22
	0x0330507C MOV W5, W21
	0x03305080 MOV W6, W19
	0x03305084 MOV W7, W24
	0x03305088 LDP X20, X19, [X31 + 0x60]
	0x0330508C LDP X22, X21, [X31 + 0x50]
	0x03305090 LDP X24, X23, [X31 + 0x40]
	0x03305094 LDP X26, X25, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10D8000
	006 Move X20, 0xDF1000
	007 Move W8, [X21+2778]
	008 Move X20, [X20+3144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDF1000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2778], W8
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X9, [X8+392]
	022 Move X1, [X8+400]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X8, [X20]
	025 Move X20, X0
	026 Move W9, [X8+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X8
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Call CultureInfo.GetCultureInfo, X0
	034 Compare X0, 0
	035 JumpIfEqual {46}
	036 Move X8, [X0]
	037 Move X9, [X8+408]
	038 Move X1, [X8+416]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move [X19+40], W0
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return 
	046 Call 0x1C17F20

Method: System.String get_Name()

Disassembly:
	0x03305098 LDP X28, X27, [X31 + 0x20]
	0x0330509C LDP X29, X30, [X31 + 0x10]
	0x033050A0 ADD X31, X31, 0x70
	0x033050A4 B 0x33045C8
	0x033050A8 ADRP X8, 0xE1C000
	0x033050AC LDR X8, [X8 + 0xFD0]
	0x033050B0 LDR X0, [X8]
	0x033050B4 LDR W8, [X0 + 0xE0]
	0x033050B8 CBNZ W8, 0x33050C0
	0x033050BC BL 0x1C16DFC
	0x033050C0 MOV X0, X27
	0x033050C4 MOV X1, X28
	0x033050C8 MOV X2, X29
	0x033050CC LDR X3, [X31]
	0x033050D0 LDP X20, X19, [X31 + 0x60]
	0x033050D4 LDP X22, X21, [X31 + 0x50]
	0x033050D8 LDP X24, X23, [X31 + 0x40]
	0x033050DC LDP X26, X25, [X31 + 0x30]
	0x033050E0 LDP X28, X27, [X31 + 0x20]
	0x033050E4 LDP X29, X30, [X31 + 0x10]
	0x033050E8 ADD X31, X31, 0x70
	0x033050EC B 0x33043D4
	0x033050F0 ADRP X8, 0xE22000
	0x033050F4 ADRP X9, 0xE22000
	0x033050F8 LDR X8, [X8 + 0x950]
	0x033050FC LDR X9, [X9 + 0x958]
	0x03305100 CMP W20, 0x0
	0x03305104 B 0x330511C
	0x03305108 ADRP X8, 0xE22000
	0x0330510C ADRP X9, 0xE22000
	0x03305110 LDR X8, [X8 + 0x960]
	0x03305114 LDR X9, [X9 + 0x968]
	0x03305118 CMP W23, 0x0
	0x0330511C CSEL X0, X9, X8, LT
	0x03305120 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10D8000
	006 Move X21, 0xE1D000
	007 Move W8, [X20+2779]
	008 Move X21, [X21+2752]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xE1D000
	015 Move X0, [X0+2752]
	016 Call 0x1C17CF4
	017 Move X0, 0xE1D000
	018 Move X0, [X0+2720]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2779], W8
	022 Move X20, X19
	023 Add X20, X20, 16
	024 Move X0, [X20]
	025 Move X1, [X21]
	026 Move X2, X31
	027 Call String.op_Equality, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {41}
	032 Move X8, 0xE1D000
	033 Move X8, [X8+2720]
	034 Move X0, [X19+16]
	035 Move X2, X31
	036 Move X1, [X8]
	037 Call String.op_Equality, X0, X1
	038 Add X8, X19, 24
	039 And W31, W0, 1
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 Move X0, [X20]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0

Method: System.Int32 Compare(System.String string1, System.String string2)

Disassembly:
	0x03305124 MOV X19, X0
	0x03305128 ADRP X0, 0xDF6000
	0x0330512C LDR X0, [X0 + 0x760]
	0x03305130 BL 0x1C16D08

ISIL:
	001 Move X8, [X0]
	002 Move W3, W31
	003 Move X5, [X8+424]
	004 Move X4, [X8+432]
	005 CallNoReturn X5

Method: System.Int32 Compare(System.String string1, System.String string2, System.Globalization.CompareOptions options)

Disassembly:
	0x03305134 BL 0x1C16F10
	0x03305138 MOV X20, X0
	0x0330513C ADRP X0, 0xE21000
	0x03305140 LDR X0, [X0 + 0xD28]
	0x03305144 BL 0x1C16D08
	0x03305148 MOV X2, X0
	0x0330514C MOV X0, X20
	0x03305150 MOV X1, X19
	0x03305154 MOV X3, X31
	0x03305158 BL 0x3311888
	0x0330515C ADRP X0, 0xE22000
	0x03305160 LDR X0, [X0 + 0x970]
	0x03305164 BL 0x1C16D08
	0x03305168 MOV X1, X0
	0x0330516C MOV X0, X20
	0x03305170 BL 0x1C16DEC
	0x03305174 ADRP X0, 0xDF6000
	0x03305178 LDR X0, [X0 + 0x760]
	0x0330517C BL 0x1C16D08
	0x03305180 BL 0x1C16F10
	0x03305184 MOV X19, X0
	0x03305188 ADRP X0, 0xE22000
	0x0330518C LDR X0, [X0 + 0x978]
	0x03305190 B 0x33051B0
	0x03305194 ADRP X0, 0xDF6000
	0x03305198 LDR X0, [X0 + 0x760]
	0x0330519C BL 0x1C16D08
	0x033051A0 BL 0x1C16F10
	0x033051A4 MOV X19, X0
	0x033051A8 ADRP X0, 0xE22000
	0x033051AC LDR X0, [X0 + 0x980]
	0x033051B0 BL 0x1C16D08
	0x033051B4 MOV X20, X0
	0x033051B8 ADRP X0, 0xE22000
	0x033051BC LDR X0, [X0 + 0x988]
	0x033051C0 BL 0x1C16D08
	0x033051C4 MOV X2, X0
	0x033051C8 MOV X0, X19
	0x033051CC MOV X1, X20
	0x033051D0 MOV X3, X31
	0x033051D4 BL 0x3311888
	0x033051D8 B 0x3305220
	0x033051DC ADRP X0, 0xDF6000
	0x033051E0 LDR X0, [X0 + 0x578]
	0x033051E4 BL 0x1C16D08
	0x033051E8 BL 0x1C16F10
	0x033051EC MOV X19, X0
	0x033051F0 ADRP X0, 0xE22000
	0x033051F4 LDR X0, [X0 + 0x938]
	0x033051F8 BL 0x1C16D08
	0x033051FC MOV X20, X0
	0x03305200 ADRP X0, 0xE22000
	0x03305204 LDR X0, [X0 + 0x830]
	0x03305208 BL 0x1C16D08
	0x0330520C MOV X2, X0
	0x03305210 MOV X0, X19
	0x03305214 MOV X1, X20
	0x03305218 MOV X3, X31
	0x0330521C BL 0x330E16C
	0x03305220 ADRP X0, 0xE22000
	0x03305224 LDR X0, [X0 + 0x970]
	0x03305228 BL 0x1C16D08
	0x0330522C MOV X1, X0
	0x03305230 MOV X0, X19
	0x03305234 BL 0x1C16DEC
	0x03305238 STP X30, X25, [X31 - 0x40]!
	0x0330523C STP X24, X23, [X31 + 0x10]
	0x03305240 STP X22, X21, [X31 + 0x20]
	0x03305244 STP X20, X19, [X31 + 0x30]
	0x03305248 ADRP X25, 0x10D7000
	0x0330524C LDRB W8, [X25 + 0xAE0]
	0x03305250 MOV W19, W5
	0x03305254 MOV W20, W4
	0x03305258 MOV X21, X3
	0x0330525C MOV W23, W2
	0x03305260 MOV W22, W1
	0x03305264 MOV X24, X0
	0x03305268 TBNZ X8, 0x0, 0x3305280
	0x0330526C ADRP X0, 0xE1C000
	0x03305270 LDR X0, [X0 + 0xFD0]
	0x03305274 BL 0x1C16CF4
	0x03305278 MOVZ W8, 0x1
	0x0330527C STRB W8, [X25 + 0xAE0]
	0x03305280 ADRP X25, 0x10D4000
	0x03305284 LDRB W8, [X25 + 0x761]
	0x03305288 CBZ W8, 0x33052C8
	0x0330528C CBZ X24, 0x33052E0
	0x03305290 LDR W8, [X24 + 0x10]
	0x03305294 SUBS W8, W8, W22
	0x03305298 B.CC 0x33052A4
	0x0330529C CMP W8, W23
	0x033052A0 B.CS 0x33052B0
	0x033052A4 MOVZ W0, 0x18
	0x033052A8 MOV X1, X31
	0x033052AC BL 0x339D764
	0x033052B0 MOV X0, X24
	0x033052B4 MOV X1, X31
	0x033052B8 BL 0x3225708
	0x033052BC ADD X22, X0, W22, 0x1, SXTW
	0x033052C0 MOV W23, W23
	0x033052C4 B 0x33052FC
	0x033052C8 ADRP X0, 0xE15000
	0x033052CC LDR X0, [X0 + 0x290]
	0x033052D0 BL 0x1C16CF4
	0x033052D4 MOVZ W8, 0x1
	0x033052D8 STRB W8, [X25 + 0x761]
	0x033052DC CBNZ X24, 0x3305290
	0x033052E0 ORR W8, W23, W22, 0x0
	0x033052E4 CBZ W8, 0x33052F4
	0x033052E8 MOVZ W0, 0x18
	0x033052EC MOV X1, X31
	0x033052F0 BL 0x339D764
	0x033052F4 MOV X22, X31
	0x033052F8 MOV X23, X31
	0x033052FC LDRB W8, [X25 + 0x761]
	0x03305300 CBNZ W8, 0x3305318
	0x03305304 ADRP X0, 0xE15000
	0x03305308 LDR X0, [X0 + 0x290]
	0x0330530C BL 0x1C16CF4
	0x03305310 MOVZ W8, 0x1
	0x03305314 STRB W8, [X25 + 0x761]
	0x03305318 ADRP X24, 0xE1C000
	0x0330531C LDR X24, [X24 + 0xFD0]
	0x03305320 CBZ X21, 0x330535C
	0x03305324 LDR W8, [X21 + 0x10]
	0x03305328 SUBS W8, W8, W20
	0x0330532C B.CC 0x3305338
	0x03305330 CMP W8, W19
	0x03305334 B.CS 0x3305344
	0x03305338 MOVZ W0, 0x18
	0x0330533C MOV X1, X31
	0x03305340 BL 0x339D764
	0x03305344 MOV X0, X21
	0x03305348 MOV X1, X31
	0x0330534C BL 0x3225708
	0x03305350 ADD X20, X0, W20, 0x1, SXTW
	0x03305354 MOV W19, W19
	0x03305358 B 0x3305378
	0x0330535C ORR W8, W19, W20, 0x0
	0x03305360 CBZ W8, 0x3305370
	0x03305364 MOVZ W0, 0x18
	0x03305368 MOV X1, X31
	0x0330536C BL 0x339D764
	0x03305370 MOV X20, X31
	0x03305374 MOV X19, X31
	0x03305378 LDR X0, [X24]
	0x0330537C LDR W8, [X0 + 0xE0]
	0x03305380 CBNZ W8, 0x3305388
	0x03305384 BL 0x1C16DFC
	0x03305388 MOV X0, X22
	0x0330538C MOV X1, X23
	0x03305390 MOV X2, X20
	0x03305394 MOV X3, X19
	0x03305398 LDP X20, X19, [X31 + 0x30]
	0x0330539C LDP X22, X21, [X31 + 0x20]
	0x033053A0 LDP X24, X23, [X31 + 0x10]
	0x033053A4 LDP X30, X25, [X31], #0x40
	0x033053A8 B 0x33043D4
	0x033053AC STR X30, [X31 - 0x60]!
	0x033053B0 STP X28, X27, [X31 + 0x10]
	0x033053B4 STP X26, X25, [X31 + 0x20]
	0x033053B8 STP X24, X23, [X31 + 0x30]
	0x033053BC STP X22, X21, [X31 + 0x40]
	0x033053C0 STP X20, X19, [X31 + 0x50]
	0x033053C4 ADRP X21, 0x10D7000
	0x033053C8 ADRP X24, 0xDF0000
	0x033053CC LDRB W8, [X21 + 0xAF8]
	0x033053D0 LDR X24, [X24 + 0xC48]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X23, 0x10D8000
	010 Move W8, [X23+2780]
	011 Move W21, W3
	012 Move X19, X2
	013 Move X20, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xE1D000
	020 Move X0, [X0+4048]
	021 Call 0x1C17CF4
	022 Move X0, 0xE23000
	023 Move X0, [X0+2352]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2780], W8
	027 Move W8, 0x10000000
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X0, X20
	030 Move X1, X19
	031 Move X20, [X31+64]
	032 Move X19, [X31+72]
	033 Move X22, [X31+48]
	034 Move X21, [X31+56]
	035 Move X24, [X31+32]
	036 Move X23, [X31+40]
	037 Move X30, [X31+16]
	038 Move W2, 5
	039 Move X3, X31
	040 Add X31, X31, 80
	041 Call String.Compare, X0, X1, X2
	042 Return X0
	043 Move TEMP, X21
	044 And TEMP, TEMP, 0x40000000
	045 Compare TEMP, 0x40000000
	046 JumpIfEqual {131}
	047 Move W8, 0xFFE0
	048 NotImplemented "Instruction MOVK not yet implemented."
	049 And W31, W21, W8
	050 Compare X20, 0
	051 JumpIfEqual {146}
	052 Compare X19, 0
	053 JumpIfEqual {148}
	054 Move X23, 0xE23000
	055 Move X23, [X23+2352]
	056 Move X0, [X23]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X24, 0x10D8000
	062 Move W8, [X24+2814]
	063 Compare W8, 0
	064 JumpIfNotEqual {70}
	065 Move X0, 0xE23000
	066 Move X0, [X0+2352]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X24+2814], W8
	070 Move X0, [X23]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {76}
	074 Call 0x1C17DFC
	075 Move X0, [X23]
	076 Move X8, [X0+184]
	077 Move W8, [X8]
	078 Compare W8, 0
	079 JumpIfEqual {149}
	080 Move TEMP, X21
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {133}
	084 Move X22, 0x10D5000
	085 Move W8, [X22+1890]
	086 Compare W8, 0
	087 JumpIfNotEqual {93}
	088 Move X0, 0xE16000
	089 Move X0, [X0+656]
	090 Call 0x1C17CF4
	091 Move W8, 1
	092 Move [X22+1890], W8
	093 Move X0, X20
	094 Move X1, X31
	095 Call String.GetRawStringData, X0
	096 Move W8, [X22+1890]
	097 Move W20, [X20+16]
	098 Move X21, X0
	099 Compare W8, 0
	100 JumpIfNotEqual {106}
	101 Move X0, 0xE16000
	102 Move X0, [X0+656]
	103 Call 0x1C17CF4
	104 Move W8, 1
	105 Move [X22+1890], W8
	106 Move X0, X19
	107 Move X1, X31
	108 Call String.GetRawStringData, X0
	109 Move X8, 0xE1D000
	110 Move X8, [X8+4048]
	111 Move W19, [X19+16]
	112 Move X22, X0
	113 Move X8, [X8]
	114 Move W9, [X8+224]
	115 Compare W9, 0
	116 JumpIfNotEqual {119}
	117 Move X0, X8
	118 Call 0x1C17DFC
	119 Move X0, X21
	120 Move X1, X20
	121 Move X2, X22
	122 Move X3, X19
	123 Move X20, [X31+64]
	124 Move X19, [X31+72]
	125 Move X22, [X31+48]
	126 Move X21, [X31+56]
	127 Move X24, [X31+32]
	128 Move X23, [X31+40]
	129 Move X30, [X31+16]
	130 Add X31, X31, 80
	131 Move W8, 0x40000000
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, X20
	134 Move X1, X19
	135 Move X20, [X31+64]
	136 Move X19, [X31+72]
	137 Move X22, [X31+48]
	138 Move X21, [X31+56]
	139 Move X24, [X31+32]
	140 Move X23, [X31+40]
	141 Move X30, [X31+16]
	142 Move X2, X31
	143 Add X31, X31, 80
	144 Call String.CompareOrdinal, X0, X1
	145 Return X0
	146 NotImplemented "Instruction CMP not yet implemented."
	147 NotImplemented "Instruction CSINV not yet implemented."
	148 Move W0, 1
	149 Move W3, [X20+16]
	150 Move W6, [X19+16]
	151 Move X0, X22
	152 Move X1, X20
	153 Move W2, W31
	154 Move X4, X19
	155 Move W5, W31
	156 Move W7, W21
	157 Call CompareInfo.internal_compare_switch, X0, X1, X2, X3, X4, X5, X6, X7
	158 Move X20, [X31+64]
	159 Move X19, [X31+72]
	160 Move X22, [X31+48]
	161 Move X21, [X31+56]
	162 Move X24, [X31+32]
	163 Move X23, [X31+40]
	164 Move X30, [X31+16]
	165 Add X31, X31, 80
	166 Return X0
	167 Move X0, 0xDF7000
	168 Move X0, [X0+1400]
	169 Call 0x1C17D08
	170 Call 0x1C17F10
	171 Move X19, X0
	172 Move X0, 0xE1F000
	173 Move X0, [X0+2392]
	174 Move X0, 0xDF7000
	175 Move X0, [X0+1400]
	176 Call 0x1C17D08
	177 Call 0x1C17F10
	178 Move X19, X0
	179 Move X0, 0xE23000
	180 Move X0, [X0+2360]
	181 Call 0x1C17D08
	182 Move X20, X0
	183 Move X0, 0xE23000
	184 Move X0, [X0+2096]
	185 Call 0x1C17D08
	186 Move X2, X0
	187 Move X0, X19
	188 Move X1, X20
	189 Move X3, X31
	190 Call ArgumentException..ctor, X0, X1, X2
	191 Move X0, 0xE23000
	192 Move X0, [X0+2368]
	193 Call 0x1C17D08
	194 Move X1, X0
	195 Move X0, X19
	196 Call 0x1C17DEC

Method: System.Int32 Compare(System.ReadOnlySpan`1<System.Char> string1, System.String string2, System.Globalization.CompareOptions options)

Disassembly:
	0x033056C4 MOV X1, X19
	0x033056C8 MOV X3, X31
	0x033056CC BL 0x3315F7C
	0x033056D0 ADRP X0, 0xE22000
	0x033056D4 LDR X0, [X0 + 0x998]
	0x033056D8 BL 0x1C16D08
	0x033056DC MOV X1, X0
	0x033056E0 MOV X0, X20
	0x033056E4 BL 0x1C16DEC
	0x033056E8 ADRP X0, 0xDF6000
	0x033056EC LDR X0, [X0 + 0x578]
	0x033056F0 BL 0x1C16D08
	0x033056F4 BL 0x1C16F10
	0x033056F8 MOV X19, X0
	0x033056FC ADRP X0, 0xE1E000
	0x03305700 LDR X0, [X0 + 0x958]
	0x03305704 BL 0x1C16D08
	0x03305708 MOV X20, X0
	0x0330570C ADRP X0, 0xE22000
	0x03305710 LDR X0, [X0 + 0x830]
	0x03305714 BL 0x1C16D08
	0x03305718 MOV X2, X0
	0x0330571C MOV X0, X19
	0x03305720 MOV X1, X20
	0x03305724 MOV X3, X31
	0x03305728 BL 0x330E16C
	0x0330572C ADRP X0, 0xE22000
	0x03305730 LDR X0, [X0 + 0x998]
	0x03305734 BL 0x1C16D08
	0x03305738 MOV X1, X0
	0x0330573C MOV X0, X19
	0x03305740 BL 0x1C16DEC
	0x03305744 SUB X31, X31, 0x50
	0x03305748 STR X30, [X31 + 0x10]
	0x0330574C STP X24, X23, [X31 + 0x20]
	0x03305750 STP X22, X21, [X31 + 0x30]
	0x03305754 STP X20, X19, [X31 + 0x40]
	0x03305758 ADRP X23, 0x10D7000
	0x0330575C ADRP X24, 0xE1C000
	0x03305760 LDRB W8, [X23 + 0xAF9]
	0x03305764 LDR X24, [X24 + 0xFD0]
	0x03305768 MOV W19, W3
	0x0330576C MOV X20, X2
	0x03305770 MOV X21, X1
	0x03305774 MOV X22, X0
	0x03305778 TBNZ X8, 0x0, 0x330579C
	0x0330577C ADRP X0, 0xE1C000
	0x03305780 LDR X0, [X0 + 0xFD0]
	0x03305784 BL 0x1C16CF4
	0x03305788 ADRP X0, 0xE22000
	0x0330578C LDR X0, [X0 + 0x9A0]
	0x03305790 BL 0x1C16CF4
	0x03305794 MOVZ W8, 0x1
	0x03305798 STRB W8, [X23 + 0xAF9]
	0x0330579C LDR X0, [X24]
	0x033057A0 LDR W8, [X0 + 0xE0]
	0x033057A4 CBNZ W8, 0x33057AC
	0x033057A8 BL 0x1C16DFC
	0x033057AC BL 0x33070C0
	0x033057B0 TBZ X0, 0x0, 0x330580C
	0x033057B4 MOV X0, X22
	0x033057B8 BL 0x330720C
	0x033057BC CBZ X0, 0x33058B4
	0x033057C0 ADRP X10, 0xE22000
	0x033057C4 LDR X8, [X0]
	0x033057C8 LDR X10, [X10 + 0x9A0]
	0x033057CC MOV X22, X0
	0x033057D0 LDRH W9, [X8 + 0x12E]
	0x033057D4 LDR X1, [X10]
	0x033057D8 CBZ X9, 0x33057FC
	0x033057DC LDR X10, [X8 + 0xB0]
	0x033057E0 ADD X10, X10, 0x8
	0x033057E4 LDUR X11, [X10 - 0x8]
	0x033057E8 CMP X11, X1
	0x033057EC B.EQ 0x3305878
	0x033057F0 SUBS X9, X9, 0x1
	0x033057F4 ADD X10, X10, 0x10
	0x033057F8 B.NE 0x33057E4
	0x033057FC MOVZ W2, 0x2
	0x03305800 MOV X0, X22
	0x03305804 BL 0x1C5C788
	0x03305808 B 0x3305888
	0x0330580C CBZ X21, 0x33058B4
	0x03305810 CBZ X20, 0x33058B4
	0x03305814 LDR W8, [X21 + 0x10]
	0x03305818 LDR W3, [X20 + 0x10]
	0x0330581C CMP W8, W3
	0x03305820 B.GE 0x330582C
	0x03305824 MOV W0, W31
	0x03305828 B 0x3305860
	0x0330582C LDR X8, [X22]
	0x03305830 MOV X0, X22
	0x03305834 MOV X1, X21
	0x03305838 MOV W2, W31
	0x0330583C LDP X9, X8, [X8 + 0x1B8]
	0x03305840 MOV X4, X20
	0x03305844 MOV W5, W31
	0x03305848 MOV W6, W3
	0x0330584C MOV W7, W19
	0x03305850 STR X8, [X31]
	0x03305854 BLR X9
	0x03305858 CMP W0, 0x0
	0x0330585C CSET W0, EQ
	0x03305860 LDP X20, X19, [X31 + 0x40]
	0x03305864 LDP X22, X21, [X31 + 0x30]
	0x03305868 LDP X24, X23, [X31 + 0x20]
	0x0330586C LDR X30, [X31 + 0x10]
	0x03305870 ADD X31, X31, 0x50
	0x03305874 RET
	0x03305878 LDR W9, [X10]
	0x0330587C ADD W9, W9, 0x2
	0x03305880 ADD X8, X8, W9, 0x4, SXTW
	0x03305884 ADD X0, X8, 0x138
	0x03305888 LDP X5, X4, [X0]
	0x0330588C MOV X0, X22
	0x03305890 MOV X1, X21
	0x03305894 MOV X2, X20
	0x03305898 MOV W3, W19
	0x0330589C LDP X20, X19, [X31 + 0x40]
	0x033058A0 LDP X22, X21, [X31 + 0x30]
	0x033058A4 LDP X24, X23, [X31 + 0x20]
	0x033058A8 LDR X30, [X31 + 0x10]
	0x033058AC ADD X31, X31, 0x50
	0x033058B0 BR X5
	0x033058B4 BL 0x1C16F20
	0x033058B8 STR X30, [X31 - 0x40]!
	0x033058BC STP X24, X23, [X31 + 0x10]
	0x033058C0 STP X22, X21, [X31 + 0x20]
	0x033058C4 STP X20, X19, [X31 + 0x30]
	0x033058C8 ADRP X23, 0x10D7000
	0x033058CC LDRB W8, [X23 + 0xAE3]
	0x033058D0 MOV W21, W3
	0x033058D4 MOV X19, X2
	0x033058D8 MOV X20, X1
	0x033058DC MOV X22, X0
	0x033058E0 TBNZ X8, 0x0, 0x33058F8
	0x033058E4 ADRP X0, 0xE22000
	0x033058E8 LDR X0, [X0 + 0x930]
	0x033058EC BL 0x1C16CF4
	0x033058F0 MOVZ W8, 0x1
	0x033058F4 STRB W8, [X23 + 0xAE3]
	0x033058F8 CBZ X20, 0x3305A04
	0x033058FC CBZ X19, 0x3305A04
	0x03305900 LDR W8, [X19 + 0x10]
	0x03305904 CBZ W8, 0x3305930
	0x03305908 LDR W8, [X20 + 0x10]
	0x0330590C CBZ W8, 0x3305938
	0x03305910 MOVZ W8, 0x40000000
	0x03305914 CMP W21, W8
	0x03305918 B.EQ 0x3305950
	0x0330591C MOVZ W8, 0x10000000
	0x03305920 CMP W21, W8
	0x03305924 B.NE 0x3305958
	0x03305928 MOVZ W2, 0x5
	0x0330592C B 0x33059C0
	0x03305930 MOVZ W0, 0x1
	0x03305934 B 0x330593C
	0x03305938 MOV W0, W31
	0x0330593C LDP X20, X19, [X31 + 0x30]
	0x03305940 LDP X22, X21, [X31 + 0x20]
	0x03305944 LDP X24, X23, [X31 + 0x10]
	0x03305948 LDR X30, [X31], #0x40
	0x0330594C RET
	0x03305950 MOVZ W2, 0x4
	0x03305954 B 0x33059C0
	0x03305958 CMP W21, 0x20
	0x0330595C B.CS 0x3305A70
	0x03305960 ADRP X23, 0xE22000
	0x03305964 LDR X23, [X23 + 0x930]
	0x03305968 LDR X0, [X23]
	0x0330596C LDR W8, [X0 + 0xE0]
	0x03305970 CBNZ W8, 0x3305978
	0x03305974 BL 0x1C16DFC
	0x03305978 ADRP X24, 0x10D7000
	0x0330597C LDRB W8, [X24 + 0xAFE]
	0x03305980 CBNZ W8, 0x3305998
	0x03305984 ADRP X0, 0xE22000
	0x03305988 LDR X0, [X0 + 0x930]
	0x0330598C BL 0x1C16CF4
	0x03305990 MOVZ W8, 0x1
	0x03305994 STRB W8, [X24 + 0xAFE]
	0x03305998 LDR X0, [X23]
	0x0330599C LDR W8, [X0 + 0xE0]
	0x033059A0 CBNZ W8, 0x33059AC
	0x033059A4 BL 0x1C16DFC
	0x033059A8 LDR X0, [X23]
	0x033059AC LDR X8, [X0 + 0xB8]
	0x033059B0 LDRB W8, [X8]
	0x033059B4 CBZ W8, 0x33059E0
	0x033059B8 MOVZ W2, 0x4
	0x033059BC BFM W2, W21, 0x0, 0x0
	0x033059C0 MOV X0, X20
	0x033059C4 MOV X1, X19
	0x033059C8 LDP X20, X19, [X31 + 0x30]
	0x033059CC LDP X22, X21, [X31 + 0x20]
	0x033059D0 LDP X24, X23, [X31 + 0x10]
	0x033059D4 MOV X3, X31
	0x033059D8 LDR X30, [X31], #0x40
	0x033059DC B 0x3226590
	0x033059E0 MOV X0, X22
	0x033059E4 MOV X1, X20
	0x033059E8 MOV X2, X19
	0x033059EC MOV W3, W21
	0x033059F0 LDP X20, X19, [X31 + 0x30]
	0x033059F4 LDP X22, X21, [X31 + 0x20]
	0x033059F8 LDP X24, X23, [X31 + 0x10]
	0x033059FC LDR X30, [X31], #0x40
	0x03305A00 B 0x3305ACC
	0x03305A04 ADRP X8, 0xE22000
	0x03305A08 ADRP X9, 0xDF9000
	0x03305A0C LDR X8, [X8 + 0x9A8]
	0x03305A10 LDR X9, [X9 + 0x580]
	0x03305A14 CMP X20, 0x0
	0x03305A18 CSEL X0, X9, X8, EQ
	0x03305A1C BL 0x1C16D08
	0x03305A20 MOV X19, X0
	0x03305A24 ADRP X0, 0xDF3000
	0x03305A28 LDR X0, [X0 + 0x528]
	0x03305A2C BL 0x1C16D08
	0x03305A30 BL 0x1C16F10
	0x03305A34 MOV X20, X0
	0x03305A38 ADRP X0, 0xE1D000
	0x03305A3C LDR X0, [X0 + 0xA78]
	0x03305A40 BL 0x1C16D08
	0x03305A44 MOV X2, X0
	0x03305A48 MOV X0, X20
	0x03305A4C MOV X1, X19
	0x03305A50 MOV X3, X31
	0x03305A54 BL 0x3315F7C
	0x03305A58 ADRP X0, 0xE22000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x10D8000
	011 Move W8, [X24+2781]
	012 Move W22, W4
	013 Move X21, X3
	014 Move X19, X2
	015 Move X20, X1
	016 Move X23, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xE1D000
	022 Move X0, [X0+4048]
	023 Call 0x1C17CF4
	024 Move X0, 0xE23000
	025 Move X0, [X0+2352]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2781], W8
	029 Move X24, 0xE1D000
	030 Move X24, [X24+4048]
	031 Move W8, 0x10000000
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X22, 0x10D8000
	034 Move W8, [X22+939]
	035 Compare W8, 0
	036 JumpIfEqual {131}
	037 Compare X21, 0
	038 JumpIfEqual {138}
	039 Move X0, X21
	040 Move X1, X31
	041 Call String.GetRawStringData, X0
	042 Move W21, [X21+16]
	043 Move X22, X0
	044 Move TEMP, X22
	045 And TEMP, TEMP, 0x40000000
	046 Compare TEMP, 0x40000000
	047 JumpIfEqual {118}
	048 Move W8, 0xFFE0
	049 NotImplemented "Instruction MOVK not yet implemented."
	050 And W31, W22, W8
	051 Compare X21, 0
	052 JumpIfEqual {159}
	053 Move X25, 0xE23000
	054 Move X25, [X25+2352]
	055 Move X0, [X25]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X26, 0x10D8000
	061 Move W8, [X26+2814]
	062 Compare W8, 0
	063 JumpIfNotEqual {69}
	064 Move X0, 0xE23000
	065 Move X0, [X0+2352]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X26+2814], W8
	069 Move X0, [X25]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X25]
	075 Move X8, [X0+184]
	076 Move W8, [X8]
	077 Compare W8, 0
	078 JumpIfEqual {217}
	079 Move X23, 0x10D8000
	080 Move W8, [X23+939]
	081 Compare W8, 0
	082 JumpIfNotEqual {88}
	083 Move X0, 0xE16000
	084 Move X0, [X0+656]
	085 Call 0x1C17CF4
	086 Move W8, 1
	087 Move [X23+939], W8
	088 Move X0, X21
	089 Move X1, X31
	090 Call String.GetRawStringData, X0
	091 Move W21, [X21+16]
	092 Move X23, X0
	093 Move TEMP, X22
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {231}
	097 Move X22, 0x10D8000
	098 Move W8, [X22+2815]
	099 Compare W8, 0
	100 JumpIfNotEqual {109}
	101 Move X0, 0xE1E000
	102 Move X0, [X0+32]
	103 Call 0x1C17CF4
	104 Move X0, 0xE1E000
	105 Move X0, [X0+40]
	106 Call 0x1C17CF4
	107 Move W8, 1
	108 Move [X22+2815], W8
	109 Move X22, 0xE1E000
	110 Move X22, [X22+32]
	111 Move X0, X20
	112 Move X1, X19
	113 Move X2, [X22]
	114 Call MemoryMarshal.GetReference, X0
	115 Move X2, [X22]
	116 Move X20, X0
	117 Move X0, X23
	118 Move W8, 0x40000000
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X22, 0x10D8000
	121 Move W8, [X22+939]
	122 Compare W8, 0
	123 JumpIfEqual {170}
	124 Compare X21, 0
	125 JumpIfEqual {177}
	126 Move X0, X21
	127 Move X1, X31
	128 Call String.GetRawStringData, X0
	129 Move W21, [X21+16]
	130 Move X22, X0
	131 Move X0, 0xE16000
	132 Move X0, [X0+656]
	133 Call 0x1C17CF4
	134 Move W8, 1
	135 Move [X22+939], W8
	136 Compare X21, 0
	137 JumpIfNotEqual {39}
	138 Move X22, X31
	139 Move X0, [X24]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move X0, X20
	145 Move X1, X19
	146 Move X2, X22
	147 Move X3, X21
	148 Move X20, [X31+64]
	149 Move X19, [X31+72]
	150 Move X22, [X31+48]
	151 Move X21, [X31+56]
	152 Move X24, [X31+32]
	153 Move X23, [X31+40]
	154 Move X26, [X31+16]
	155 Move X25, [X31+24]
	156 Move X30, [X31+80]
	157 Call CompareInfo.CompareOrdinalIgnoreCase, X0, X1
	158 Return X0
	159 Move X20, [X31+64]
	160 Move X19, [X31+72]
	161 Move X22, [X31+48]
	162 Move X21, [X31+56]
	163 Move X24, [X31+32]
	164 Move X23, [X31+40]
	165 Move X26, [X31+16]
	166 Move X25, [X31+24]
	167 Move W0, 1
	168 Move X30, [X31+80]
	169 Return X0
	170 Move X0, 0xE16000
	171 Move X0, [X0+656]
	172 Call 0x1C17CF4
	173 Move W8, 1
	174 Move [X22+939], W8
	175 Compare X21, 0
	176 JumpIfNotEqual {126}
	177 Move X22, X31
	178 Move X23, 0x10D8000
	179 Move W8, [X23+2815]
	180 Compare W8, 0
	181 JumpIfNotEqual {190}
	182 Move X0, 0xE1E000
	183 Move X0, [X0+32]
	184 Call 0x1C17CF4
	185 Move X0, 0xE1E000
	186 Move X0, [X0+40]
	187 Call 0x1C17CF4
	188 Move W8, 1
	189 Move [X23+2815], W8
	190 Move X23, 0xE1E000
	191 Move X23, [X23+32]
	192 Move X0, X20
	193 Move X1, X19
	194 Move X2, [X23]
	195 Call MemoryMarshal.GetReference, X0
	196 Move X2, [X23]
	197 Move X20, X0
	198 Move X0, X22
	199 Move X1, X21
	200 Call MemoryMarshal.GetReference, X0
	201 Move X2, X0
	202 Move X0, X20
	203 Move W1, W19
	204 Move W3, W21
	205 Move X20, [X31+64]
	206 Move X19, [X31+72]
	207 Move X22, [X31+48]
	208 Move X21, [X31+56]
	209 Move X24, [X31+32]
	210 Move X23, [X31+40]
	211 Move X26, [X31+16]
	212 Move X25, [X31+24]
	213 Move X4, X31
	214 Move X30, [X31+80]
	215 Call SpanHelpers.SequenceCompareTo, X0, X1, X2, X3
	216 Return X0
	217 Move X0, X23
	218 Move X1, X20
	219 Move X2, X19
	220 Move X3, X21
	221 Move W4, W22
	222 Move X20, [X31+64]
	223 Move X19, [X31+72]
	224 Move X22, [X31+48]
	225 Move X21, [X31+56]
	226 Move X24, [X31+32]
	227 Move X23, [X31+40]
	228 Move X26, [X31+16]
	229 Move X25, [X31+24]
	230 Move X30, [X31+80]
	231 Move X0, [X24]
	232 Move W8, [X0+224]
	233 Compare W8, 0
	234 JumpIfNotEqual {236}
	235 Call 0x1C17DFC
	236 Move X0, X20
	237 Move X1, X19
	238 Move X2, X23
	239 Move X0, 0xDF7000
	240 Move X0, [X0+1400]
	241 Call 0x1C17D08
	242 Call 0x1C17F10
	243 Move X19, X0
	244 Move X0, 0xE1F000
	245 Move X0, [X0+2392]
	246 Move X0, 0xDF7000
	247 Move X0, [X0+1400]
	248 Call 0x1C17D08
	249 Call 0x1C17F10
	250 Move X19, X0
	251 Move X0, 0xE23000
	252 Move X0, [X0+2360]
	253 Call 0x1C17D08
	254 Move X20, X0
	255 Move X0, 0xE23000
	256 Move X0, [X0+2096]
	257 Call 0x1C17D08
	258 Move X2, X0
	259 Move X0, X19
	260 Move X1, X20
	261 Move X3, X31
	262 Call ArgumentException..ctor, X0, X1, X2
	263 Move X0, 0xE23000
	264 Move X0, [X0+2376]
	265 Call 0x1C17D08
	266 Move X1, X0
	267 Move X0, X19
	268 Call 0x1C17DEC

Method: System.Int32 CompareOptionIgnoreCase(System.ReadOnlySpan`1<System.Char> string1, System.ReadOnlySpan`1<System.Char> string2)

Disassembly:
	0x03305AC0 MOV X1, X0
	0x03305AC4 MOV X0, X19
	0x03305AC8 BL 0x1C16DEC
	0x03305ACC SUB X31, X31, 0x50
	0x03305AD0 STR X30, [X31 + 0x10]
	0x03305AD4 STP X24, X23, [X31 + 0x20]
	0x03305AD8 STP X22, X21, [X31 + 0x30]
	0x03305ADC STP X20, X19, [X31 + 0x40]
	0x03305AE0 ADRP X23, 0x10D7000
	0x03305AE4 ADRP X24, 0xE1C000
	0x03305AE8 LDRB W8, [X23 + 0xAFA]
	0x03305AEC LDR X24, [X24 + 0xFD0]
	0x03305AF0 MOV W19, W3
	0x03305AF4 MOV X20, X2
	0x03305AF8 MOV X21, X1
	0x03305AFC MOV X22, X0
	0x03305B00 TBNZ X8, 0x0, 0x3305B24
	0x03305B04 ADRP X0, 0xE1C000
	0x03305B08 LDR X0, [X0 + 0xFD0]
	0x03305B0C BL 0x1C16CF4
	0x03305B10 ADRP X0, 0xE22000
	0x03305B14 LDR X0, [X0 + 0x9A0]
	0x03305B18 BL 0x1C16CF4
	0x03305B1C MOVZ W8, 0x1
	0x03305B20 STRB W8, [X23 + 0xAFA]
	0x03305B24 LDR X0, [X24]
	0x03305B28 LDR W8, [X0 + 0xE0]
	0x03305B2C CBNZ W8, 0x3305B34
	0x03305B30 BL 0x1C16DFC
	0x03305B34 BL 0x33070C0
	0x03305B38 TBZ X0, 0x0, 0x3305B94
	0x03305B3C MOV X0, X22
	0x03305B40 BL 0x330720C
	0x03305B44 CBZ X0, 0x3305C38
	0x03305B48 ADRP X10, 0xE22000
	0x03305B4C LDR X8, [X0]
	0x03305B50 LDR X10, [X10 + 0x9A0]
	0x03305B54 MOV X22, X0
	0x03305B58 LDRH W9, [X8 + 0x12E]
	0x03305B5C LDR X1, [X10]
	0x03305B60 CBZ X9, 0x3305B84
	0x03305B64 LDR X10, [X8 + 0xB0]
	0x03305B68 ADD X10, X10, 0x8
	0x03305B6C LDUR X11, [X10 - 0x8]
	0x03305B70 CMP X11, X1
	0x03305B74 B.EQ 0x3305BFC
	0x03305B78 SUBS X9, X9, 0x1
	0x03305B7C ADD X10, X10, 0x10
	0x03305B80 B.NE 0x3305B6C
	0x03305B84 MOVZ W2, 0x3
	0x03305B88 MOV X0, X22
	0x03305B8C BL 0x1C5C788
	0x03305B90 B 0x3305C0C
	0x03305B94 CBZ X21, 0x3305C38
	0x03305B98 CBZ X20, 0x3305C38
	0x03305B9C LDR W8, [X21 + 0x10]
	0x03305BA0 LDR W3, [X20 + 0x10]
	0x03305BA4 SUBS W2, W8, W3
	0x03305BA8 B.GE 0x3305BB4
	0x03305BAC MOV W0, W31
	0x03305BB0 B 0x3305BE4
	0x03305BB4 LDR X8, [X22]
	0x03305BB8 MOV X0, X22
	0x03305BBC MOV X1, X21
	0x03305BC0 MOV X4, X20
	0x03305BC4 LDP X9, X8, [X8 + 0x1B8]
	0x03305BC8 MOV W5, W31
	0x03305BCC MOV W6, W3
	0x03305BD0 MOV W7, W19
	0x03305BD4 STR X8, [X31]
	0x03305BD8 BLR X9
	0x03305BDC CMP W0, 0x0
	0x03305BE0 CSET W0, EQ
	0x03305BE4 LDP X20, X19, [X31 + 0x40]
	0x03305BE8 LDP X22, X21, [X31 + 0x30]
	0x03305BEC LDP X24, X23, [X31 + 0x20]
	0x03305BF0 LDR X30, [X31 + 0x10]
	0x03305BF4 ADD X31, X31, 0x50
	0x03305BF8 RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x10D8000
	010 Move W8, [X24+2782]
	011 Move X19, X4
	012 Move X20, X3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xE1D000
	021 Move X0, [X0+4048]
	022 Call 0x1C17CF4
	023 Move X0, 0xE23000
	024 Move X0, [X0+2352]
	025 Call 0x1C17CF4
	026 Move X0, 0xE1E000
	027 Move X0, [X0+40]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+2782], W8
	031 Compare W21, 0
	032 JumpIfEqual {82}
	033 Compare W19, 0
	034 JumpIfEqual {82}
	035 Move X24, 0xE23000
	036 Move X24, [X24+2352]
	037 Move X0, [X24]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X25, 0x10D8000
	043 Move W8, [X25+2814]
	044 Compare W8, 0
	045 JumpIfNotEqual {51}
	046 Move X0, 0xE23000
	047 Move X0, [X0+2352]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X25+2814], W8
	051 Move X0, [X24]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X24]
	057 Move X8, [X0+184]
	058 Move W8, [X8]
	059 Compare W8, 0
	060 JumpIfEqual {92}
	061 Move X8, 0xE1D000
	062 Move X8, [X8+4048]
	063 Move X0, [X8]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X22
	069 Move X1, X21
	070 Move X2, X20
	071 Move X3, X19
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X30, [X31+64]
	079 Move X25, [X31+72]
	080 Call CompareInfo.CompareOrdinalIgnoreCase, X0, X1
	081 Return X0
	082 Subtract W0, W21, W19
	083 Move X20, [X31+48]
	084 Move X19, [X31+56]
	085 Move X22, [X31+32]
	086 Move X21, [X31+40]
	087 Move X24, [X31+16]
	088 Move X23, [X31+24]
	089 Move X30, [X31+64]
	090 Move X25, [X31+72]
	091 Return X0
	092 Move X0, X23
	093 Move X1, X22
	094 Move X2, X21
	095 Move X3, X20
	096 Move X4, X19
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X24, [X31+16]
	102 Move X23, [X31+24]
	103 Move W5, 1
	104 Move X30, [X31+64]
	105 Move X25, [X31+72]

Method: System.Int32 Compare(System.String string1, System.Int32 offset1, System.Int32 length1, System.String string2, System.Int32 offset2, System.Int32 length2, System.Globalization.CompareOptions options)

Disassembly:
	0x03305CEC CBZ X22, 0x3305E58
	0x03305CF0 CBZ X21, 0x3305E78
	0x03305CF4 LDR W8, [X22 + 0x10]
	0x03305CF8 CMP W8, W20
	0x03305CFC B.LT 0x3305E28
	0x03305D00 CBZ W8, 0x3305D2C
	0x03305D04 TBNZ X20, 0x1F, 0x3305E28
	0x03305D08 TBNZ X19, 0x1F, 0x3305EAC
	0x03305D0C SUB W8, W8, W19
	0x03305D10 CMP W8, W20
	0x03305D14 B.LT 0x3305EAC
	0x03305D18 MOVZ W8, 0x10000000
	0x03305D1C CMP W23, W8
	0x03305D20 B.NE 0x3305D50
	0x03305D24 MOVZ W5, 0x1
	0x03305D28 B 0x3305DCC
	0x03305D2C LDR W8, [X21 + 0x10]
	0x03305D30 LDP X20, X19, [X31 + 0x40]
	0x03305D34 LDP X22, X21, [X31 + 0x30]
	0x03305D38 LDP X24, X23, [X31 + 0x20]
	0x03305D3C LDP X26, X25, [X31 + 0x10]
	0x03305D40 CMP W8, 0x0
	0x03305D44 CSINV W0, W31, W31, EQ
	0x03305D48 LDR X30, [X31], #0x50
	0x03305D4C RET
	0x03305D50 CMP W23, 0x20
	0x03305D54 B.CC 0x3305D64
	0x03305D58 MOVZ W8, 0x40000000
	0x03305D5C CMP W23, W8
	0x03305D60 B.NE 0x3305F08
	0x03305D64 ADRP X25, 0xE22000
	0x03305D68 LDR X25, [X25 + 0x930]
	0x03305D6C LDR X0, [X25]
	0x03305D70 LDR W8, [X0 + 0xE0]
	0x03305D74 CBNZ W8, 0x3305D7C
	0x03305D78 BL 0x1C16DFC
	0x03305D7C ADRP X26, 0x10D7000
	0x03305D80 LDRB W8, [X26 + 0xAFE]
	0x03305D84 CBNZ W8, 0x3305D9C
	0x03305D88 ADRP X0, 0xE22000
	0x03305D8C LDR X0, [X0 + 0x930]
	0x03305D90 BL 0x1C16CF4
	0x03305D94 MOVZ W8, 0x1
	0x03305D98 STRB W8, [X26 + 0xAFE]
	0x03305D9C LDR X0, [X25]
	0x03305DA0 LDR W8, [X0 + 0xE0]
	0x03305DA4 CBNZ W8, 0x3305DB0
	0x03305DA8 BL 0x1C16DFC
	0x03305DAC LDR X0, [X25]
	0x03305DB0 LDR X8, [X0 + 0xB8]
	0x03305DB4 LDRB W8, [X8]
	0x03305DB8 CBZ W8, 0x3305DF4
	0x03305DBC MOVZ W8, 0x1
	0x03305DC0 MOVK W8, 0x10000000
	0x03305DC4 ANDS W31, W23, W8, 0x0
	0x03305DC8 CSET W5, NE
	0x03305DCC MOV X1, X22
	0x03305DD0 MOV X2, X21
	0x03305DD4 MOV W3, W20
	0x03305DD8 MOV W4, W19
	0x03305DDC LDP X20, X19, [X31 + 0x40]
	0x03305DE0 LDP X22, X21, [X31 + 0x30]
	0x03305DE4 LDP X24, X23, [X31 + 0x20]
	0x03305DE8 LDP X26, X25, [X31 + 0x10]
	0x03305DEC LDR X30, [X31], #0x50
	0x03305DF0 B 0x3305F50
	0x03305DF4 MOV X0, X24
	0x03305DF8 MOV X1, X22
	0x03305DFC MOV W2, W20
	0x03305E00 MOV W3, W19
	0x03305E04 MOV X4, X21
	0x03305E08 MOV W5, W23
	0x03305E0C LDP X20, X19, [X31 + 0x40]
	0x03305E10 LDP X22, X21, [X31 + 0x30]
	0x03305E14 LDP X24, X23, [X31 + 0x20]
	0x03305E18 LDP X26, X25, [X31 + 0x10]
	0x03305E1C MOVZ W6, 0x1
	0x03305E20 LDR X30, [X31], #0x50
	0x03305E24 B 0x3307660
	0x03305E28 ADRP X0, 0xDF6000
	0x03305E2C LDR X0, [X0 + 0x760]
	0x03305E30 BL 0x1C16D08
	0x03305E34 BL 0x1C16F10
	0x03305E38 MOV X19, X0
	0x03305E3C ADRP X0, 0xE16000
	0x03305E40 LDR X0, [X0 + 0x658]
	0x03305E44 BL 0x1C16D08
	0x03305E48 MOV X20, X0
	0x03305E4C ADRP X0, 0xE16000
	0x03305E50 LDR X0, [X0 + 0x660]
	0x03305E54 B 0x3305ED8
	0x03305E58 ADRP X0, 0xDF3000
	0x03305E5C LDR X0, [X0 + 0x528]
	0x03305E60 BL 0x1C16D08
	0x03305E64 BL 0x1C16F10
	0x03305E68 MOV X19, X0
	0x03305E6C ADRP X0, 0xDF9000
	0x03305E70 LDR X0, [X0 + 0x580]
	0x03305E74 B 0x3305E94
	0x03305E78 ADRP X0, 0xDF3000
	0x03305E7C LDR X0, [X0 + 0x528]
	0x03305E80 BL 0x1C16D08
	0x03305E84 BL 0x1C16F10
	0x03305E88 MOV X19, X0
	0x03305E8C ADRP X0, 0xDF8000
	0x03305E90 LDR X0, [X0 + 0xEC8]
	0x03305E94 BL 0x1C16D08
	0x03305E98 MOV X1, X0
	0x03305E9C MOV X0, X19
	0x03305EA0 MOV X2, X31
	0x03305EA4 BL 0x330E100
	0x03305EA8 B 0x3305EF0
	0x03305EAC ADRP X0, 0xDF6000
	0x03305EB0 LDR X0, [X0 + 0x760]
	0x03305EB4 BL 0x1C16D08
	0x03305EB8 BL 0x1C16F10
	0x03305EBC MOV X19, X0
	0x03305EC0 ADRP X0, 0xE16000
	0x03305EC4 LDR X0, [X0 + 0x648]
	0x03305EC8 BL 0x1C16D08
	0x03305ECC MOV X20, X0
	0x03305ED0 ADRP X0, 0xE16000
	0x03305ED4 LDR X0, [X0 + 0x650]
	0x03305ED8 BL 0x1C16D08
	0x03305EDC MOV X2, X0
	0x03305EE0 MOV X0, X19
	0x03305EE4 MOV X1, X20
	0x03305EE8 MOV X3, X31
	0x03305EEC BL 0x3311888
	0x03305EF0 ADRP X0, 0xE22000
	0x03305EF4 LDR X0, [X0 + 0x9B8]
	0x03305EF8 BL 0x1C16D08
	0x03305EFC MOV X1, X0
	0x03305F00 MOV X0, X19
	0x03305F04 BL 0x1C16DEC
	0x03305F08 ADRP X0, 0xDF6000
	0x03305F0C LDR X0, [X0 + 0x578]
	0x03305F10 BL 0x1C16D08
	0x03305F14 BL 0x1C16F10
	0x03305F18 MOV X19, X0
	0x03305F1C ADRP X0, 0xE1E000
	0x03305F20 LDR X0, [X0 + 0x958]
	0x03305F24 BL 0x1C16D08
	0x03305F28 MOV X20, X0
	0x03305F2C ADRP X0, 0xE22000
	0x03305F30 LDR X0, [X0 + 0x830]
	0x03305F34 BL 0x1C16D08
	0x03305F38 MOV X2, X0
	0x03305F3C MOV X0, X19
	0x03305F40 MOV X1, X20
	0x03305F44 MOV X3, X31
	0x03305F48 BL 0x330E16C
	0x03305F4C B 0x3305EF0
	0x03305F50 STP X30, X25, [X31 - 0x40]!
	0x03305F54 STP X24, X23, [X31 + 0x10]
	0x03305F58 STP X22, X21, [X31 + 0x20]
	0x03305F5C STP X20, X19, [X31 + 0x30]
	0x03305F60 ADRP X25, 0x10D7000
	0x03305F64 ADRP X24, 0xE22000
	0x03305F68 LDRB W8, [X25 + 0xAE6]
	0x03305F6C LDR X24, [X24 + 0x930]
	0x03305F70 MOV W22, W5
	0x03305F74 MOV W19, W4
	0x03305F78 MOV W20, W3
	0x03305F7C MOV X21, X2
	0x03305F80 MOV X23, X1
	0x03305F84 TBNZ X8, 0x0, 0x3305FA8
	0x03305F88 ADRP X0, 0xE1C000
	0x03305F8C LDR X0, [X0 + 0xFD0]
	0x03305F90 BL 0x1C16CF4
	0x03305F94 ADRP X0, 0xE22000
	0x03305F98 LDR X0, [X0 + 0x930]
	0x03305F9C BL 0x1C16CF4
	0x03305FA0 MOVZ W8, 0x1
	0x03305FA4 STRB W8, [X25 + 0xAE6]
	0x03305FA8 LDR X0, [X24]
	0x03305FAC LDR W8, [X0 + 0xE0]
	0x03305FB0 CBNZ W8, 0x3305FB8
	0x03305FB4 BL 0x1C16DFC
	0x03305FB8 ADRP X25, 0x10D7000
	0x03305FBC LDRB W8, [X25 + 0xAFE]
	0x03305FC0 CBNZ W8, 0x3305FD8
	0x03305FC4 ADRP X0, 0xE22000
	0x03305FC8 LDR X0, [X0 + 0x930]
	0x03305FCC BL 0x1C16CF4
	0x03305FD0 MOVZ W8, 0x1
	0x03305FD4 STRB W8, [X25 + 0xAFE]
	0x03305FD8 LDR X0, [X24]
	0x03305FDC ADRP X25, 0xE1C000
	0x03305FE0 LDR W8, [X0 + 0xE0]
	0x03305FE4 LDR X25, [X25 + 0xFD0]
	0x03305FE8 CBNZ W8, 0x3305FF4
	0x03305FEC BL 0x1C16DFC
	0x03305FF0 LDR X0, [X24]
	0x03305FF4 LDR X8, [X25]
	0x03305FF8 LDR X9, [X0 + 0xB8]
	0x03305FFC LDR W10, [X8 + 0xE0]
	0x03306000 LDRB W24, [X9]
	0x03306004 CBNZ W10, 0x3306010
	0x03306008 MOV X0, X8
	0x0330600C BL 0x1C16DFC
	0x03306010 AND W4, W22, 0x1
	0x03306014 MOV X0, X23
	0x03306018 MOV X1, X21
	0x0330601C MOV W2, W20
	0x03306020 MOV W3, W19
	0x03306024 CBZ W24, 0x330603C
	0x03306028 LDP X20, X19, [X31 + 0x30]
	0x0330602C LDP X22, X21, [X31 + 0x20]
	0x03306030 LDP X24, X23, [X31 + 0x10]
	0x03306034 LDP X30, X25, [X31], #0x40
	0x03306038 B 0x3303664
	0x0330603C LDP X20, X19, [X31 + 0x30]
	0x03306040 LDP X22, X21, [X31 + 0x20]
	0x03306044 LDP X24, X23, [X31 + 0x10]
	0x03306048 LDP X30, X25, [X31], #0x40
	0x0330604C B 0x3306244
	0x03306050 CBNZ X6, 0x330606C
	0x03306054 MOV X8, X2
	0x03306058 MOVZ W6, 0x1
	0x0330605C MOV W2, W3
	0x03306060 MOV W3, W4
	0x03306064 MOV X4, X8
	0x03306068 B 0x3307660
	0x0330606C STP X30, X19, [X31 - 0x10]!
	0x03306070 ADRP X0, 0xDF6000
	0x03306074 LDR X0, [X0 + 0x758]
	0x03306078 BL 0x1C16D08
	0x0330607C BL 0x1C16F10
	0x03306080 MOV X1, X31
	0x03306084 MOV X19, X0
	0x03306088 BL 0x3380288
	0x0330608C ADRP X0, 0xE21000
	0x03306090 LDR X0, [X0 + 0x9C0]
	0x03306094 BL 0x1C16D08
	0x03306098 MOV X1, X0
	0x0330609C MOV X0, X19
	0x033060A0 BL 0x1C16DEC
	0x033060A4 STP X30, X27, [X31 - 0x50]!
	0x033060A8 STP X26, X25, [X31 + 0x10]
	0x033060AC STP X24, X23, [X31 + 0x20]
	0x033060B0 STP X22, X21, [X31 + 0x30]
	0x033060B4 STP X20, X19, [X31 + 0x40]
	0x033060B8 ADRP X26, 0x10D6000
	0x033060BC LDRB W8, [X26 + 0xAE5]
	0x033060C0 MOV X19, X6
	0x033060C4 MOV W24, W5
	0x033060C8 MOV W21, W4
	0x033060CC MOV W22, W3
	0x033060D0 MOV X20, X2
	0x033060D4 MOV X23, X1
	0x033060D8 MOV X25, X0
	0x033060DC TBNZ X8, 0x0, 0x33060F4
	0x033060E0 ADRP X0, 0xE21000
	0x033060E4 LDR X0, [X0 + 0x930]
	0x033060E8 BL 0x1C16CF4
	0x033060EC MOVZ W8, 0x1
	0x033060F0 STRB W8, [X26 + 0xAE5]
	0x033060F4 STR W31, [X19]
	0x033060F8 CBZ X23, 0x3306240
	0x033060FC LDR W8, [X23 + 0x10]
	0x03306100 CBZ W8, 0x3306138
	0x03306104 CMP W8, W22
	0x03306108 B.LE 0x330614C
	0x0330610C MOVZ W8, 0x10000000
	0x03306110 CMP W24, W8
	0x03306114 B.NE 0x3306154
	0x03306118 MOVZ W5, 0x1
	0x0330611C MOV X1, X23
	0x03306120 MOV X2, X20
	0x03306124 MOV W3, W22
	0x03306128 MOV W4, W21
	0x0330612C BL 0x3305F50
	0x03306130 TBZ X0, 0x1F, 0x33061E0
	0x03306134 B 0x33061EC
	0x03306138 CBZ X20, 0x3306240
	0x0330613C LDR W8, [X20 + 0x10]
	0x03306140 CMP W8, 0x0
	0x03306144 CSINV W0, W31, W31, EQ
	0x03306148 B 0x33061EC
	0x0330614C MOVN W0, 0x0
	0x03306150 B 0x33061EC
	0x03306154 ADRP X26, 0xE21000
	0x03306158 LDR X26, [X26 + 0x930]
	0x0330615C LDR X0, [X26]
	0x03306160 LDR W8, [X0 + 0xE0]
	0x03306164 CBNZ W8, 0x330616C
	0x03306168 BL 0x1C16DFC
	0x0330616C ADRP X27, 0x10D6000
	0x03306170 LDRB W8, [X27 + 0xAFE]
	0x03306174 CBNZ W8, 0x330618C
	0x03306178 ADRP X0, 0xE21000
	0x0330617C LDR X0, [X0 + 0x930]
	0x03306180 BL 0x1C16CF4
	0x03306184 MOVZ W8, 0x1
	0x03306188 STRB W8, [X27 + 0xAFE]
	0x0330618C LDR X0, [X26]
	0x03306190 LDR W8, [X0 + 0xE0]
	0x03306194 CBNZ W8, 0x33061A0
	0x03306198 BL 0x1C16DFC
	0x0330619C LDR X0, [X26]
	0x033061A0 LDR X8, [X0 + 0xB8]
	0x033061A4 LDRB W8, [X8]
	0x033061A8 CBZ W8, 0x3306204
	0x033061AC MOVZ W8, 0x1
	0x033061B0 MOVK W8, 0x10000000
	0x033061B4 ANDS W31, W24, W8, 0x0
	0x033061B8 CSET W5, NE
	0x033061BC MOV X1, X23
	0x033061C0 MOV X2, X20
	0x033061C4 MOV W3, W22
	0x033061C8 MOV W4, W21
	0x033061CC BL 0x3305F50
	0x033061D0 CMP W0, 0x0
	0x033061D4 MOV W8, W0
	0x033061D8 CSEL W0, W31, W0, LT
	0x033061DC TBNZ X8, 0x1F, 0x3306238
	0x033061E0 CBZ X20, 0x3306240
	0x033061E4 LDR W8, [X20 + 0x10]
	0x033061E8 STR W8, [X19]
	0x033061EC LDP X20, X19, [X31 + 0x40]
	0x033061F0 LDP X22, X21, [X31 + 0x30]
	0x033061F4 LDP X24, X23, [X31 + 0x20]
	0x033061F8 LDP X26, X25, [X31 + 0x10]
	0x033061FC LDP X30, X27, [X31], #0x50
	0x03306200 RET
	0x03306204 MOV X0, X25
	0x03306208 MOV X1, X23
	0x0330620C MOV X2, X20
	0x03306210 MOV W3, W22
	0x03306214 MOV W4, W21
	0x03306218 MOV W5, W24
	0x0330621C MOV X6, X19
	0x03306220 LDP X20, X19, [X31 + 0x40]
	0x03306224 LDP X22, X21, [X31 + 0x30]
	0x03306228 LDP X24, X23, [X31 + 0x20]
	0x0330622C LDP X26, X25, [X31 + 0x10]
	0x03306230 LDP X30, X27, [X31], #0x50
	0x03306234 B 0x3306050

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X27, 0x10D8000
	015 Move W8, [X27+2783]
	016 Move W24, W7
	017 Move W19, W6
	018 Move W21, W5
	019 Move X22, X4
	020 Move W20, W3
	021 Move W23, W2
	022 Move X25, X1
	023 Move X26, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0xE1D000
	029 Move X0, [X0+4048]
	030 Call 0x1C17CF4
	031 Move X0, 0xE23000
	032 Move X0, [X0+2352]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X27+2783], W8
	036 Move W8, 0x10000000
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 Move W5, 5
	041 Move X0, X25
	042 Move W1, W23
	043 Move X2, X22
	044 Move W3, W21
	045 Move X6, X31
	046 Call String.Compare, X0, X1, X2, X3, X4, X5
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Compare W0, 0
	049 JumpIfNotEqual {169}
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W8, 1
	052 NotImplemented "Instruction CSNEG not yet implemented."
	053 Move TEMP, X19
	054 And TEMP, TEMP, -2147483648
	055 Compare TEMP, -2147483648
	056 JumpIfEqual {310}
	057 Move TEMP, X20
	058 And TEMP, TEMP, -2147483648
	059 Compare TEMP, -2147483648
	060 JumpIfEqual {310}
	061 Move TEMP, X21
	062 And TEMP, TEMP, -2147483648
	063 Compare TEMP, -2147483648
	064 JumpIfEqual {315}
	065 Move TEMP, X23
	066 And TEMP, TEMP, -2147483648
	067 Compare TEMP, -2147483648
	068 JumpIfEqual {315}
	069 Compare X25, 0
	070 JumpIfEqual {72}
	071 Move W8, [X25+16]
	072 Move W8, W31
	073 Subtract W8, W8, W20
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Compare X22, 0
	076 JumpIfEqual {78}
	077 Move W8, [X22+16]
	078 Move W8, W31
	079 Subtract W8, W8, W19
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move TEMP, X24
	082 And TEMP, TEMP, 0x40000000
	083 Compare TEMP, 0x40000000
	084 JumpIfEqual {95}
	085 Move W8, 0xFFE0
	086 NotImplemented "Instruction MOVK not yet implemented."
	087 And W31, W24, W8
	088 Move X0, 0xDF7000
	089 Move X0, [X0+1400]
	090 Call 0x1C17D08
	091 Call 0x1C17F10
	092 Move X19, X0
	093 Move X0, 0xE1F000
	094 Move X0, [X0+2392]
	095 Move W8, 0x40000000
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Compare X25, 0
	098 JumpIfEqual {166}
	099 Compare X22, 0
	100 JumpIfEqual {168}
	101 Move X28, 0x10D5000
	102 Move W8, [X28+1889]
	103 Compare W8, 0
	104 JumpIfNotEqual {110}
	105 Move X0, 0xE16000
	106 Move X0, [X0+656]
	107 Call 0x1C17CF4
	108 Move W8, 1
	109 Move [X28+1889], W8
	110 Move W8, [X25+16]
	111 Subtract W8, W8, W23
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move W0, 24
	114 Move X1, X31
	115 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	116 Move X0, X25
	117 Move X1, X31
	118 Call String.GetRawStringData, X0
	119 Move W8, [X28+1889]
	120 Move X27, X0
	121 Compare W8, 0
	122 JumpIfNotEqual {128}
	123 Move X0, 0xE16000
	124 Move X0, [X0+656]
	125 Call 0x1C17CF4
	126 Move W8, 1
	127 Move [X28+1889], W8
	128 Move W8, [X22+16]
	129 Add X27, X27, W23
	130 Move W28, W20
	131 Subtract W8, W8, W21
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move W0, 24
	134 Move X1, X31
	135 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	136 Move X0, X22
	137 Move X1, X31
	138 Call String.GetRawStringData, X0
	139 Move W8, 0x40000000
	140 Add X29, X0, W21
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move W8, W19
	143 Move X21, 0x10D8000
	144 Move X22, X8
	145 Move W8, [X21+2815]
	146 Compare W8, 0
	147 JumpIfNotEqual {156}
	148 Move X0, 0xE1E000
	149 Move X0, [X0+32]
	150 Call 0x1C17CF4
	151 Move X0, 0xE1E000
	152 Move X0, [X0+40]
	153 Call 0x1C17CF4
	154 Move W8, 1
	155 Move [X21+2815], W8
	156 Move X21, 0xE1E000
	157 Move X21, [X21+32]
	158 Move X0, X27
	159 Move X1, X28
	160 Move X2, [X21]
	161 Call MemoryMarshal.GetReference, X0
	162 Move X2, [X21]
	163 Move X21, X0
	164 Move X0, X29
	165 Move X1, X22
	166 NotImplemented "Instruction CMP not yet implemented."
	167 NotImplemented "Instruction CSINV not yet implemented."
	168 Move W0, 1
	169 Move X20, [X31+96]
	170 Move X19, [X31+104]
	171 Move X22, [X31+80]
	172 Move X21, [X31+88]
	173 Move X24, [X31+64]
	174 Move X23, [X31+72]
	175 Move X26, [X31+48]
	176 Move X25, [X31+56]
	177 Move X28, [X31+32]
	178 Move X27, [X31+40]
	179 Move X29, [X31+16]
	180 Move X30, [X31+24]
	181 Add X31, X31, 112
	182 Return X0
	183 Move [X31], X8
	184 Move [X31+8], X29
	185 Move X8, 0xE23000
	186 Move X8, [X8+2352]
	187 Move X0, [X8]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {192}
	191 Call 0x1C17DFC
	192 Move X29, 0x10D8000
	193 Move W8, [X29+2814]
	194 Compare W8, 0
	195 JumpIfNotEqual {201}
	196 Move X0, 0xE23000
	197 Move X0, [X0+2352]
	198 Call 0x1C17CF4
	199 Move W8, 1
	200 Move [X29+2814], W8
	201 Move X29, 0xE23000
	202 Move X29, [X29+2352]
	203 Move X0, [X29]
	204 Move W8, [X0+224]
	205 Compare W8, 0
	206 JumpIfNotEqual {209}
	207 Call 0x1C17DFC
	208 Move X0, [X29]
	209 Move X8, [X0+184]
	210 Move X29, [X31+8]
	211 Move W8, [X8]
	212 Compare W8, 0
	213 JumpIfEqual {261}
	214 Move TEMP, X24
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfEqual {284}
	218 Move X21, 0x10D8000
	219 Move W8, [X21+2815]
	220 Compare W8, 0
	221 JumpIfNotEqual {230}
	222 Move X0, 0xE1E000
	223 Move X0, [X0+32]
	224 Call 0x1C17CF4
	225 Move X0, 0xE1E000
	226 Move X0, [X0+40]
	227 Call 0x1C17CF4
	228 Move W8, 1
	229 Move [X21+2815], W8
	230 Move X21, 0xE1D000
	231 Move X21, [X21+32]
	232 Move X0, X27
	233 Move X1, X28
	234 Move X2, [X21]
	235 Call MemoryMarshal.GetReference, X0
	236 Move X2, [X21]
	237 Move X1, [X31]
	238 Move X21, X0
	239 Move X0, X29
	240 Call MemoryMarshal.GetReference, X0
	241 Move X2, X0
	242 Move X0, X21
	243 Move W1, W20
	244 Move W3, W19
	245 Move X20, [X31+96]
	246 Move X19, [X31+104]
	247 Move X22, [X31+80]
	248 Move X21, [X31+88]
	249 Move X24, [X31+64]
	250 Move X23, [X31+72]
	251 Move X26, [X31+48]
	252 Move X25, [X31+56]
	253 Move X28, [X31+32]
	254 Move X27, [X31+40]
	255 Move X29, [X31+16]
	256 Move X30, [X31+24]
	257 Move X4, X31
	258 Add X31, X31, 112
	259 Call SpanHelpers.SequenceCompareTo, X0, X1, X2, X3
	260 Return X0
	261 Move X0, X26
	262 Move X1, X25
	263 Move W2, W23
	264 Move W3, W20
	265 Move X4, X22
	266 Move W5, W21
	267 Move W6, W19
	268 Move W7, W24
	269 Move X20, [X31+96]
	270 Move X19, [X31+104]
	271 Move X22, [X31+80]
	272 Move X21, [X31+88]
	273 Move X24, [X31+64]
	274 Move X23, [X31+72]
	275 Move X26, [X31+48]
	276 Move X25, [X31+56]
	277 Move X28, [X31+32]
	278 Move X27, [X31+40]
	279 Move X29, [X31+16]
	280 Move X30, [X31+24]
	281 Add X31, X31, 112
	282 Call CompareInfo.internal_compare_switch, X0, X1, X2, X3, X4, X5, X6, X7
	283 Return X0
	284 Move X8, 0xE1C000
	285 Move X8, [X8+4048]
	286 Move X0, [X8]
	287 Move W8, [X0+224]
	288 Compare W8, 0
	289 JumpIfNotEqual {291}
	290 Call 0x1C17DFC
	291 Move X0, X27
	292 Move X1, X28
	293 Move X2, X29
	294 Move X3, [X31]
	295 Move X20, [X31+96]
	296 Move X19, [X31+104]
	297 Move X22, [X31+80]
	298 Move X21, [X31+88]
	299 Move X24, [X31+64]
	300 Move X23, [X31+72]
	301 Move X26, [X31+48]
	302 Move X25, [X31+56]
	303 Move X28, [X31+32]
	304 Move X27, [X31+40]
	305 Move X29, [X31+16]
	306 Move X30, [X31+24]
	307 Add X31, X31, 112
	308 Call CompareInfo.CompareOrdinalIgnoreCase, X0, X1
	309 Return X0
	310 Move X8, 0xE22000
	311 Move X9, 0xE22000
	312 Move X8, [X8+2384]
	313 Move X9, [X9+2392]
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Move X8, 0xE22000
	316 Move X9, 0xE22000
	317 Move X8, [X8+2400]
	318 Move X9, [X9+2408]
	319 NotImplemented "Instruction CMP not yet implemented."
	320 NotImplemented "Instruction CSEL not yet implemented."
	321 Call 0x1C17D08
	322 Move X19, X0
	323 Move X0, 0xDF6000
	324 Move X0, [X0+1888]
	325 Call 0x1C17D08
	326 Call 0x1C17F10
	327 Move X20, X0
	328 Move X0, 0xE21000
	329 Move X0, [X0+3368]
	330 Call 0x1C17D08
	331 Move X2, X0
	332 Move X0, X20
	333 Move X1, X19
	334 Move X3, X31
	335 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	336 Move X0, 0xE22000
	337 Move X0, [X0+2416]
	338 Call 0x1C17D08
	339 Move X1, X0
	340 Move X0, X20
	341 Call 0x1C17DEC
	342 Move X0, 0xDF6000
	343 Move X0, [X0+1888]
	344 Call 0x1C17D08
	345 Call 0x1C17F10
	346 Move X19, X0
	347 Move X0, 0xE22000
	348 Move X0, [X0+2424]
	349 Move X0, 0xDF6000
	350 Move X0, [X0+1888]
	351 Call 0x1C17D08
	352 Call 0x1C17F10
	353 Move X19, X0
	354 Move X0, 0xE22000
	355 Move X0, [X0+2432]
	356 Call 0x1C17D08
	357 Move X20, X0
	358 Move X0, 0xE22000
	359 Move X0, [X0+2440]
	360 Call 0x1C17D08
	361 Move X2, X0
	362 Move X0, X19
	363 Move X1, X20
	364 Move X3, X31
	365 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	366 Move X0, 0xDF6000
	367 Move X0, [X0+1400]
	368 Call 0x1C17D08
	369 Call 0x1C17F10
	370 Move X19, X0
	371 Move X0, 0xE22000
	372 Move X0, [X0+2360]
	373 Call 0x1C17D08
	374 Move X20, X0
	375 Move X0, 0xE22000
	376 Move X0, [X0+2096]
	377 Call 0x1C17D08
	378 Move X2, X0
	379 Move X0, X19
	380 Move X1, X20
	381 Move X3, X31
	382 Call ArgumentException..ctor, X0, X1, X2
	383 Move X0, 0xE22000
	384 Move X0, [X0+2416]
	385 Call 0x1C17D08
	386 Move X1, X0
	387 Move X0, X19
	388 Call 0x1C17DEC

Method: System.Int32 CompareOrdinalIgnoreCase(System.String strA, System.Int32 indexA, System.Int32 lengthA, System.String strB, System.Int32 indexB, System.Int32 lengthB)

Disassembly:
	0x03306238 AND W0, W8, W8, 0x1F
	0x0330623C B 0x33061EC
	0x03306240 BL 0x1C16F20
	0x03306244 CBZ X0, 0x330625C
	0x03306248 TBZ X4, 0x0, 0x3306254
	0x0330624C MOV X4, X31
	0x03306250 B 0x322E540
	0x03306254 MOV X4, X31
	0x03306258 B 0x322E440
	0x0330625C STR X30, [X31 - 0x10]!
	0x03306260 BL 0x1C16F20
	0x03306264 STR X30, [X31 - 0x50]!
	0x03306268 STP X26, X25, [X31 + 0x10]
	0x0330626C STP X24, X23, [X31 + 0x20]
	0x03306270 STP X22, X21, [X31 + 0x30]
	0x03306274 STP X20, X19, [X31 + 0x40]
	0x03306278 ADRP X25, 0x10D6000
	0x0330627C LDRB W8, [X25 + 0xAE7]
	0x03306280 MOV W23, W5
	0x03306284 MOV W19, W4
	0x03306288 MOV W20, W3
	0x0330628C MOV X21, X2
	0x03306290 MOV X22, X1
	0x03306294 MOV X24, X0
	0x03306298 TBNZ X8, 0x0, 0x33062BC
	0x0330629C ADRP X0, 0xE1B000
	0x033062A0 LDR X0, [X0 + 0xFD0]
	0x033062A4 BL 0x1C16CF4
	0x033062A8 ADRP X0, 0xE21000
	0x033062AC LDR X0, [X0 + 0x930]
	0x033062B0 BL 0x1C16CF4
	0x033062B4 MOVZ W8, 0x1
	0x033062B8 STRB W8, [X25 + 0xAE7]
	0x033062BC CBZ X22, 0x33064B0
	0x033062C0 CBZ X21, 0x33064D0
	0x033062C4 CMP W23, 0x20
	0x033062C8 B.CC 0x33062E4
	0x033062CC MOVZ W8, 0x10000000
	0x033062D0 CMP W23, W8
	0x033062D4 B.EQ 0x33062E4
	0x033062D8 MOVZ W8, 0x40000000
	0x033062DC CMP W23, W8
	0x033062E0 B.NE 0x3306560
	0x033062E4 LDR W8, [X22 + 0x10]
	0x033062E8 CBZ W8, 0x3306374
	0x033062EC TBNZ X20, 0x1F, 0x3306504
	0x033062F0 CMP W8, W20
	0x033062F4 B.LT 0x3306504
	0x033062F8 B.NE 0x330632C
	0x033062FC CMP W19, 0x0
	0x03306300 CSET W8, GT
	0x03306304 SUBS W19, W19, W8
	0x03306308 SUB W20, W20, 0x1
	0x0330630C B.MI 0x330632C
	0x03306310 LDR W8, [X21 + 0x10]
	0x03306314 CBNZ W8, 0x330632C
	0x03306318 SUB W8, W20, W19
	0x0330631C ADDS W31, W8, 0x1
	0x03306320 B.LT 0x3306330
	0x03306324 MOV W0, W20
	0x03306328 B 0x330638C
	0x0330632C TBNZ X19, 0x1F, 0x3306480
	0x03306330 SUB W8, W20, W19
	0x03306334 ADDS W31, W8, 0x1
	0x03306338 B.MI 0x3306480
	0x0330633C MOVZ W8, 0x10000000
	0x03306340 CMP W23, W8
	0x03306344 B.NE 0x33063A4
	0x03306348 MOV X1, X22
	0x0330634C MOV X2, X21
	0x03306350 MOV W3, W20
	0x03306354 MOV W4, W19
	0x03306358 LDP X20, X19, [X31 + 0x40]
	0x0330635C LDP X22, X21, [X31 + 0x30]
	0x03306360 LDP X24, X23, [X31 + 0x20]
	0x03306364 LDP X26, X25, [X31 + 0x10]
	0x03306368 MOVZ W5, 0x1
	0x0330636C LDR X30, [X31], #0x50
	0x03306370 B 0x33065A8
	0x03306374 ADD W9, W20, 0x1
	0x03306378 CMP W9, 0x1
	0x0330637C B.HI 0x33062EC
	0x03306380 LDR W8, [X21 + 0x10]
	0x03306384 CMP W8, 0x0
	0x03306388 CSINV W0, W31, W31, EQ
	0x0330638C LDP X20, X19, [X31 + 0x40]
	0x03306390 LDP X22, X21, [X31 + 0x30]
	0x03306394 LDP X24, X23, [X31 + 0x20]
	0x03306398 LDP X26, X25, [X31 + 0x10]
	0x0330639C LDR X30, [X31], #0x50
	0x033063A0 RET
	0x033063A4 ADRP X25, 0xE21000
	0x033063A8 LDR X25, [X25 + 0x930]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x10D7000
	010 Move W8, [X25+2784]
	011 Move W19, W5
	012 Move W20, W4
	013 Move X21, X3
	014 Move W23, W2
	015 Move W22, W1
	016 Move X24, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xE1C000
	022 Move X0, [X0+4048]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X25+2784], W8
	026 Move X25, 0x10D4000
	027 Move W8, [X25+1889]
	028 Compare W8, 0
	029 JumpIfEqual {43}
	030 Compare X24, 0
	031 JumpIfEqual {50}
	032 Move W8, [X24+16]
	033 Subtract W8, W8, W22
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W0, 24
	036 Move X1, X31
	037 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	038 Move X0, X24
	039 Move X1, X31
	040 Call String.GetRawStringData, X0
	041 Add X22, X0, W22
	042 Move W23, W23
	043 Move X0, 0xE15000
	044 Move X0, [X0+656]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X25+1889], W8
	048 Compare X24, 0
	049 JumpIfNotEqual {32}
	050 Or W8, W23, W22
	051 Compare W8, 0
	052 JumpIfEqual {56}
	053 Move W0, 24
	054 Move X1, X31
	055 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	056 Move X22, X31
	057 Move X23, X31
	058 Move W8, [X25+1889]
	059 Compare W8, 0
	060 JumpIfNotEqual {66}
	061 Move X0, 0xE15000
	062 Move X0, [X0+656]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X25+1889], W8
	066 Move X24, 0xE1C000
	067 Move X24, [X24+4048]
	068 Compare X21, 0
	069 JumpIfEqual {81}
	070 Move W8, [X21+16]
	071 Subtract W8, W8, W20
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W0, 24
	074 Move X1, X31
	075 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	076 Move X0, X21
	077 Move X1, X31
	078 Call String.GetRawStringData, X0
	079 Add X20, X0, W20
	080 Move W19, W19
	081 Or W8, W19, W20
	082 Compare W8, 0
	083 JumpIfEqual {87}
	084 Move W0, 24
	085 Move X1, X31
	086 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	087 Move X20, X31
	088 Move X19, X31
	089 Move X0, [X24]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X22
	095 Move X1, X23
	096 Move X2, X20
	097 Move X3, X19
	098 Move X20, [X31+48]
	099 Move X19, [X31+56]
	100 Move X22, [X31+32]
	101 Move X21, [X31+40]
	102 Move X24, [X31+16]
	103 Move X23, [X31+24]
	104 Move X30, [X31+64]
	105 Move X25, [X31+72]
	106 Call CompareInfo.CompareOrdinalIgnoreCase, X0, X1
	107 Return X0

Method: System.Int32 CompareOrdinalIgnoreCase(System.ReadOnlySpan`1<System.Char> strA, System.ReadOnlySpan`1<System.Char> strB)

Disassembly:
	0x033053D4 MOV W22, W3
	0x033053D8 MOV X19, X2
	0x033053DC MOV W23, W1
	0x033053E0 MOV X20, X0
	0x033053E4 TBNZ X8, 0x0, 0x33053FC
	0x033053E8 ADRP X0, 0xDF0000
	0x033053EC LDR X0, [X0 + 0xC48]
	0x033053F0 BL 0x1C16CF4
	0x033053F4 MOVZ W8, 0x1
	0x033053F8 STRB W8, [X21 + 0xAF8]
	0x033053FC LDR X0, [X24]
	0x03305400 LDR W8, [X0 + 0xE0]
	0x03305404 CBNZ W8, 0x330540C
	0x03305408 BL 0x1C16DFC
	0x0330540C MOV X0, X31
	0x03305410 BL 0x3338524
	0x03305414 CBZ X0, 0x330552C
	0x03305418 LDR X8, [X0]
	0x0330541C LDP X9, X1, [X8 + 0x1D8]
	0x03305420 BLR X9
	0x03305424 CMP W23, 0x0
	0x03305428 CSET W25, GT
	0x0330542C CMP W22, 0x0
	0x03305430 CSET W24, GT
	0x03305434 SUBS W8, W23, 0x1
	0x03305438 MOV X21, X0
	0x0330543C B.LT 0x33054C0
	0x03305440 SUBS W9, W22, 0x1
	0x03305444 B.LT 0x33054C0
	0x03305448 CBZ X21, 0x330552C
	0x0330544C CMP W9, W8
	0x03305450 CSEL W8, W22, W23, CC
	0x03305454 MOVZ W24, 0x1
	0x03305458 MOVN W26, 0x0
	0x0330545C SUB W27, W8, 0x1
	0x03305460 MOVZ W25, 0x1
	0x03305464 LDR X8, [X21]
	0x03305468 LDRH W1, [X20]
	0x0330546C MOV X0, X21
	0x03305470 LDP X9, X2, [X8 + 0x1C8]
	0x03305474 BLR X9
	0x03305478 LDR X8, [X21]
	0x0330547C LDRH W1, [X19]
	0x03305480 AND W28, W0, 0xFFFF
	0x03305484 MOV X0, X21
	0x03305488 LDP X9, X2, [X8 + 0x1C8]
	0x0330548C BLR X9
	0x03305490 CMP W28, W0, UXTH
	0x03305494 B.NE 0x33054C0
	0x03305498 ADD W8, W26, 0x2
	0x0330549C CMP W8, W23
	0x033054A0 ADD W26, W26, 0x1
	0x033054A4 CSET W25, LT
	0x033054A8 CMP W8, W22
	0x033054AC ADD X20, X20, 0x2
	0x033054B0 CSET W24, LT
	0x033054B4 CMP W27, W26
	0x033054B8 ADD X19, X19, 0x2
	0x033054BC B.NE 0x3305464
	0x033054C0 TBZ X25, 0x0, 0x3305504
	0x033054C4 TBZ X24, 0x0, 0x330550C
	0x033054C8 CBZ X21, 0x330552C
	0x033054CC LDR X8, [X21]
	0x033054D0 LDRH W1, [X20]
	0x033054D4 MOV X0, X21
	0x033054D8 LDP X9, X2, [X8 + 0x1C8]
	0x033054DC BLR X9
	0x033054E0 LDR X8, [X21]
	0x033054E4 LDRH W1, [X19]
	0x033054E8 MOV W19, W0
	0x033054EC MOV X0, X21
	0x033054F0 LDP X9, X2, [X8 + 0x1C8]
	0x033054F4 BLR X9
	0x033054F8 AND W8, W19, 0xFFFF
	0x033054FC SUB W0, W8, W0, UXTH
	0x03305500 B 0x3305510
	0x03305504 SBFM W0, W24, 0x0, 0x0
	0x03305508 B 0x3305510
	0x0330550C MOVZ W0, 0x1
	0x03305510 LDP X20, X19, [X31 + 0x50]
	0x03305514 LDP X22, X21, [X31 + 0x40]
	0x03305518 LDP X24, X23, [X31 + 0x30]
	0x0330551C LDP X26, X25, [X31 + 0x20]
	0x03305520 LDP X28, X27, [X31 + 0x10]
	0x03305524 LDR X30, [X31], #0x60
	0x03305528 RET
	0x0330552C BL 0x1C16F20
	0x03305530 STR X30, [X31 - 0x40]!
	0x03305534 STP X24, X23, [X31 + 0x10]
	0x03305538 STP X22, X21, [X31 + 0x20]
	0x0330553C STP X20, X19, [X31 + 0x30]
	0x03305540 ADRP X23, 0x10D7000
	0x03305544 LDRB W8, [X23 + 0xAE2]
	0x03305548 MOV W21, W3
	0x0330554C MOV X19, X2
	0x03305550 MOV X20, X1
	0x03305554 MOV X22, X0
	0x03305558 TBNZ X8, 0x0, 0x3305570
	0x0330555C ADRP X0, 0xE22000
	0x03305560 LDR X0, [X0 + 0x930]
	0x03305564 BL 0x1C16CF4
	0x03305568 MOVZ W8, 0x1
	0x0330556C STRB W8, [X23 + 0xAE2]
	0x03305570 CBZ X20, 0x330567C
	0x03305574 CBZ X19, 0x330567C
	0x03305578 LDR W8, [X19 + 0x10]
	0x0330557C CBZ W8, 0x33055A8
	0x03305580 LDR W8, [X20 + 0x10]
	0x03305584 CBZ W8, 0x33055B0
	0x03305588 MOVZ W8, 0x40000000
	0x0330558C CMP W21, W8
	0x03305590 B.EQ 0x33055C8
	0x03305594 MOVZ W8, 0x10000000
	0x03305598 CMP W21, W8
	0x0330559C B.NE 0x33055D0
	0x033055A0 MOVZ W2, 0x5
	0x033055A4 B 0x3305638
	0x033055A8 MOVZ W0, 0x1
	0x033055AC B 0x33055B4
	0x033055B0 MOV W0, W31
	0x033055B4 LDP X20, X19, [X31 + 0x30]
	0x033055B8 LDP X22, X21, [X31 + 0x20]
	0x033055BC LDP X24, X23, [X31 + 0x10]
	0x033055C0 LDR X30, [X31], #0x40
	0x033055C4 RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x10D8000
	010 Move X22, 0xDEF000
	011 Move W8, [X24+2785]
	012 Move X22, [X22+1448]
	013 Move X19, X3
	014 Move X23, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0xE1D000
	022 Move X0, [X0+4048]
	023 Call 0x1C17CF4
	024 Move X0, 0xE23000
	025 Move X0, [X0+2352]
	026 Call 0x1C17CF4
	027 Move X0, 0xDEF000
	028 Move X0, [X0+1448]
	029 Call 0x1C17CF4
	030 Move X0, 0xE1E000
	031 Move X0, [X0+32]
	032 Call 0x1C17CF4
	033 Move X0, 0xE1E000
	034 Move X0, [X0+40]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+2785], W8
	038 Move X0, [X22]
	039 Move X25, 0xE1E000
	040 Move X24, 0xE23000
	041 Move W8, [X0+224]
	042 Move X25, [X25+32]
	043 Move X24, [X24+2352]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move W0, W20
	048 Move W1, W19
	049 Move X2, X31
	050 Call Math.Min, X0, X1
	051 Move X2, [X25]
	052 Move W22, W0
	053 Move X0, X21
	054 Move X1, X20
	055 Call MemoryMarshal.GetReference, X0
	056 Move X2, [X25]
	057 Move X21, X0
	058 Move X0, X23
	059 Move X1, X19
	060 Call MemoryMarshal.GetReference, X0
	061 Move X8, [X24]
	062 Move X23, X0
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move X25, 0x10D8000
	069 Move W8, [X25+2814]
	070 Compare W8, 0
	071 JumpIfNotEqual {77}
	072 Move X0, 0xE23000
	073 Move X0, [X0+2352]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X25+2814], W8
	077 Move X0, [X24]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1C17DFC
	082 Move X0, [X24]
	083 Move X8, [X0+184]
	084 Move W9, 0xFFFF
	085 Move W8, [X8]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W8, 127
	088 NotImplemented "Instruction CSEL not yet implemented."
	089 Compare W22, 0
	090 JumpIfEqual {114}
	091 Move W25, W20
	092 Move W24, W19
	093 NotImplemented "Instruction LDRH not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract W11, W9, 97
	099 Subtract W12, W9, 32
	100 Subtract W13, W10, 97
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract W14, W10, 32
	103 NotImplemented "Instruction CSEL not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CSEL not yet implemented."
	106 Subtract W0, W9, W10
	107 Subtract W22, W22, 1
	108 Add X21, X21, 2
	109 Add X23, X23, 2
	110 Subtract W24, W24, 1
	111 Subtract W25, W25, 1
	112 Compare W22, 0
	113 JumpIfNotEqual {93}
	114 Subtract W0, W20, W19
	115 Move X20, [X31+48]
	116 Move X19, [X31+56]
	117 Move X22, [X31+32]
	118 Move X21, [X31+40]
	119 Move X24, [X31+16]
	120 Move X23, [X31+24]
	121 Move X30, [X31+64]
	122 Move X25, [X31+72]
	123 Return X0
	124 Move X8, 0xE1D000
	125 Move X8, [X8+4048]
	126 Move X0, [X8]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X0, X21
	132 Move X2, X23
	133 Move W3, W24
	134 Move X20, [X31+48]
	135 Move X19, [X31+56]
	136 Move X22, [X31+32]
	137 Move X21, [X31+40]
	138 Move X24, [X31+16]
	139 Move X23, [X31+24]
	140 Move W1, W25
	141 Move X30, [X31+64]
	142 Move X25, [X31+72]
	143 Call CompareInfo.CompareStringOrdinalIgnoreCase, X0, X1, X2, X3
	144 Return X0

Method: System.Boolean IsPrefix(System.String source, System.String prefix, System.Globalization.CompareOptions options)

Disassembly:
	0x03306530 BL 0x1C16D08
	0x03306534 MOV X2, X0
	0x03306538 MOV X0, X19
	0x0330653C MOV X1, X20
	0x03306540 MOV X3, X31
	0x03306544 BL 0x3311888
	0x03306548 ADRP X0, 0xE21000
	0x0330654C LDR X0, [X0 + 0x9C8]
	0x03306550 BL 0x1C16D08
	0x03306554 MOV X1, X0
	0x03306558 MOV X0, X19
	0x0330655C BL 0x1C16DEC
	0x03306560 ADRP X0, 0xDF5000
	0x03306564 LDR X0, [X0 + 0x578]
	0x03306568 BL 0x1C16D08
	0x0330656C BL 0x1C16F10
	0x03306570 MOV X19, X0
	0x03306574 ADRP X0, 0xE1D000
	0x03306578 LDR X0, [X0 + 0x958]
	0x0330657C BL 0x1C16D08
	0x03306580 MOV X20, X0
	0x03306584 ADRP X0, 0xE21000
	0x03306588 LDR X0, [X0 + 0x830]
	0x0330658C BL 0x1C16D08
	0x03306590 MOV X2, X0
	0x03306594 MOV X0, X19
	0x03306598 MOV X1, X20
	0x0330659C MOV X3, X31
	0x033065A0 BL 0x330E16C
	0x033065A4 B 0x3306548
	0x033065A8 STP X30, X25, [X31 - 0x40]!
	0x033065AC STP X24, X23, [X31 + 0x10]
	0x033065B0 STP X22, X21, [X31 + 0x20]
	0x033065B4 STP X20, X19, [X31 + 0x30]
	0x033065B8 ADRP X25, 0x10D6000
	0x033065BC ADRP X24, 0xE21000
	0x033065C0 LDRB W8, [X25 + 0xAE8]
	0x033065C4 LDR X24, [X24 + 0x930]
	0x033065C8 MOV W22, W5
	0x033065CC MOV W19, W4
	0x033065D0 MOV W20, W3
	0x033065D4 MOV X21, X2
	0x033065D8 MOV X23, X1
	0x033065DC TBNZ X8, 0x0, 0x3306600
	0x033065E0 ADRP X0, 0xE1B000
	0x033065E4 LDR X0, [X0 + 0xFD0]
	0x033065E8 BL 0x1C16CF4
	0x033065EC ADRP X0, 0xE21000
	0x033065F0 LDR X0, [X0 + 0x930]
	0x033065F4 BL 0x1C16CF4
	0x033065F8 MOVZ W8, 0x1
	0x033065FC STRB W8, [X25 + 0xAE8]
	0x03306600 LDR X0, [X24]
	0x03306604 LDR W8, [X0 + 0xE0]
	0x03306608 CBNZ W8, 0x3306610
	0x0330660C BL 0x1C16DFC
	0x03306610 ADRP X25, 0x10D6000
	0x03306614 LDRB W8, [X25 + 0xAFE]
	0x03306618 CBNZ W8, 0x3306630
	0x0330661C ADRP X0, 0xE21000
	0x03306620 LDR X0, [X0 + 0x930]
	0x03306624 BL 0x1C16CF4
	0x03306628 MOVZ W8, 0x1
	0x0330662C STRB W8, [X25 + 0xAFE]
	0x03306630 LDR X0, [X24]
	0x03306634 ADRP X25, 0xE1B000
	0x03306638 LDR W8, [X0 + 0xE0]
	0x0330663C LDR X25, [X25 + 0xFD0]
	0x03306640 CBNZ W8, 0x330664C
	0x03306644 BL 0x1C16DFC
	0x03306648 LDR X0, [X24]
	0x0330664C LDR X8, [X25]
	0x03306650 LDR X9, [X0 + 0xB8]
	0x03306654 LDR W10, [X8 + 0xE0]
	0x03306658 LDRB W24, [X9]
	0x0330665C CBNZ W10, 0x3306668
	0x03306660 MOV X0, X8
	0x03306664 BL 0x1C16DFC
	0x03306668 AND W4, W22, 0x1
	0x0330666C MOV X0, X23
	0x03306670 MOV X1, X21
	0x03306674 MOV W2, W20
	0x03306678 MOV W3, W19
	0x0330667C CBZ W24, 0x3306694
	0x03306680 LDP X20, X19, [X31 + 0x30]
	0x03306684 LDP X22, X21, [X31 + 0x20]
	0x03306688 LDP X24, X23, [X31 + 0x10]
	0x0330668C LDP X30, X25, [X31], #0x40
	0x03306690 B 0x3303AC4
	0x03306694 LDP X20, X19, [X31 + 0x30]
	0x03306698 LDP X22, X21, [X31 + 0x20]
	0x0330669C LDP X24, X23, [X31 + 0x10]
	0x033066A0 LDP X30, X25, [X31], #0x40
	0x033066A4 B 0x33066C0
	0x033066A8 MOV X8, X2
	0x033066AC MOV W2, W3
	0x033066B0 MOV W3, W4
	0x033066B4 MOV X4, X8
	0x033066B8 MOV W6, W31
	0x033066BC B 0x3307660
	0x033066C0 CBZ X0, 0x33066D8
	0x033066C4 TBZ X4, 0x0, 0x33066D0
	0x033066C8 MOV X4, X31
	0x033066CC B 0x322E7DC
	0x033066D0 MOV X4, X31
	0x033066D4 B 0x322E70C
	0x033066D8 STR X30, [X31 - 0x10]!
	0x033066DC BL 0x1C16F20
	0x033066E0 STP X30, X23, [X31 - 0x30]!
	0x033066E4 STP X22, X21, [X31 + 0x10]
	0x033066E8 STP X20, X19, [X31 + 0x20]
	0x033066EC ADRP X23, 0x10D6000
	0x033066F0 ADRP X22, 0xE21000
	0x033066F4 LDRB W8, [X23 + 0xAE9]
	0x033066F8 LDR X22, [X22 + 0x930]
	0x033066FC MOV W19, W2
	0x03306700 MOV X20, X1
	0x03306704 MOV X21, X0
	0x03306708 TBNZ X8, 0x0, 0x3306720
	0x0330670C ADRP X0, 0xE21000
	0x03306710 LDR X0, [X0 + 0x930]
	0x03306714 BL 0x1C16CF4
	0x03306718 MOVZ W8, 0x1
	0x0330671C STRB W8, [X23 + 0xAE9]
	0x03306720 LDR X0, [X22]
	0x03306724 LDR W8, [X0 + 0xE0]
	0x03306728 CBNZ W8, 0x3306730
	0x0330672C BL 0x1C16DFC
	0x03306730 ADRP X23, 0x10D6000
	0x03306734 LDRB W8, [X23 + 0xAFE]
	0x03306738 CBNZ W8, 0x3306750
	0x0330673C ADRP X0, 0xE21000
	0x03306740 LDR X0, [X0 + 0x930]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x10D7000
	009 Move W8, [X23+2786]
	010 Move W21, W3
	011 Move X19, X2
	012 Move X20, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE22000
	019 Move X0, [X0+2352]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2786], W8
	023 Compare X20, 0
	024 JumpIfEqual {101}
	025 Compare X19, 0
	026 JumpIfEqual {101}
	027 Move W8, [X19+16]
	028 Compare W8, 0
	029 JumpIfEqual {38}
	030 Move W8, [X20+16]
	031 Compare W8, 0
	032 JumpIfEqual {39}
	033 Move W8, 0x40000000
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, 0x10000000
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W2, 5
	038 Move W0, 1
	039 Move W0, W31
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X22, [X31+32]
	043 Move X21, [X31+40]
	044 Move X24, [X31+16]
	045 Move X23, [X31+24]
	046 Move X30, [X31+64]
	047 Return X0
	048 Move W2, 4
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X23, 0xE22000
	051 Move X23, [X23+2352]
	052 Move X0, [X23]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X24, 0x10D7000
	058 Move W8, [X24+2814]
	059 Compare W8, 0
	060 JumpIfNotEqual {66}
	061 Move X0, 0xE22000
	062 Move X0, [X0+2352]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X24+2814], W8
	066 Move X0, [X23]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X23]
	072 Move X8, [X0+184]
	073 Move W8, [X8]
	074 Compare W8, 0
	075 JumpIfEqual {90}
	076 Move W2, 4
	077 NotImplemented "Instruction BFM not yet implemented."
	078 Move X0, X20
	079 Move X1, X19
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move X3, X31
	087 Move X30, [X31+64]
	088 Call String.StartsWith, X0, X1, X2
	089 Return X0
	090 Move X0, X22
	091 Move X1, X20
	092 Move X2, X19
	093 Move W3, W21
	094 Move X20, [X31+48]
	095 Move X19, [X31+56]
	096 Move X22, [X31+32]
	097 Move X21, [X31+40]
	098 Move X24, [X31+16]
	099 Move X23, [X31+24]
	100 Move X30, [X31+64]
	101 Move X8, 0xE22000
	102 Move X9, 0xDF9000
	103 Move X8, [X8+2448]
	104 Move X9, [X9+1408]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 NotImplemented "Instruction CSEL not yet implemented."
	107 Call 0x1C17D08
	108 Move X19, X0
	109 Move X0, 0xDF3000
	110 Move X0, [X0+1320]
	111 Call 0x1C17D08
	112 Call 0x1C17F10
	113 Move X20, X0
	114 Move X0, 0xE1D000
	115 Move X0, [X0+2680]
	116 Call 0x1C17D08
	117 Move X2, X0
	118 Move X0, X20
	119 Move X1, X19
	120 Move X3, X31
	121 Call ArgumentNullException..ctor, X0, X1, X2
	122 Move X0, 0xE22000
	123 Move X0, [X0+2456]
	124 Call 0x1C17D08
	125 Move X1, X0
	126 Move X0, X20
	127 Call 0x1C17DEC
	128 Move X0, 0xDF6000
	129 Move X0, [X0+1400]
	130 Call 0x1C17D08
	131 Call 0x1C17F10
	132 Move X19, X0
	133 Move X0, 0xE1E000
	134 Move X0, [X0+2392]
	135 Call 0x1C17D08
	136 Move X20, X0
	137 Move X0, 0xE22000
	138 Move X0, [X0+2096]
	139 Call 0x1C17D08
	140 Move X2, X0
	141 Move X0, X19
	142 Move X1, X20
	143 Move X3, X31
	144 Call ArgumentException..ctor, X0, X1, X2
	145 Move X0, 0xE22000
	146 Move X0, [X0+2456]
	147 Call 0x1C17D08
	148 Move X1, X0
	149 Move X0, X19
	150 Call 0x1C17DEC

Method: System.Boolean IsSuffix(System.String source, System.String suffix, System.Globalization.CompareOptions options)

Disassembly:
	0x033068B8 ADD X9, X9, X10, 0x3, LSL
	0x033068BC LDUR X9, [X9 - 0x8]
	0x033068C0 CMP X9, X8
	0x033068C4 CSEL X20, X20, X31, EQ
	0x033068C8 B.EQ 0x33068DC
	0x033068CC LDP X20, X19, [X31 + 0x10]
	0x033068D0 MOV W0, W31
	0x033068D4 LDP X30, X21, [X31], #0x20
	0x033068D8 RET
	0x033068DC LDR X8, [X19]
	0x033068E0 MOV X0, X19
	0x033068E4 LDP X9, X1, [X8 + 0x188]
	0x033068E8 BLR X9
	0x033068EC CBZ X20, 0x330691C
	0x033068F0 LDR X8, [X20]
	0x033068F4 MOV X19, X0
	0x033068F8 MOV X0, X20
	0x033068FC LDP X9, X1, [X8 + 0x188]
	0x03306900 BLR X9
	0x03306904 MOV X1, X0
	0x03306908 MOV X0, X19
	0x0330690C LDP X20, X19, [X31 + 0x10]
	0x03306910 MOV X2, X31
	0x03306914 LDP X30, X21, [X31], #0x20
	0x03306918 B 0x321BA08
	0x0330691C BL 0x1C16F20
	0x03306920 STR X30, [X31 - 0x10]!
	0x03306924 LDR X8, [X0]
	0x03306928 LDP X9, X1, [X8 + 0x188]
	0x0330692C BLR X9
	0x03306930 CBZ X0, 0x3306944
	0x03306934 LDR X8, [X0]
	0x03306938 LDP X2, X1, [X8 + 0x158]
	0x0330693C LDR X30, [X31], #0x10
	0x03306940 BR X2
	0x03306944 BL 0x1C16F20
	0x03306948 STP X29, X30, [X31 - 0x50]!
	0x0330694C STR X25, [X31 + 0x10]
	0x03306950 STP X24, X23, [X31 + 0x20]
	0x03306954 STP X22, X21, [X31 + 0x30]
	0x03306958 STP X20, X19, [X31 + 0x40]
	0x0330695C ADD X29, X31, 0x0
	0x03306960 SUB X31, X31, 0x10
	0x03306964 MRS X24, 0xC000
	0x03306968 LDR X8, [X24 + 0x28]
	0x0330696C ADRP X19, 0x10D6000
	0x03306970 MOV X20, X0
	0x03306974 STUR X8, [X29 - 0x8]
	0x03306978 LDRB W8, [X19 + 0xAEB]
	0x0330697C TBNZ X8, 0x0, 0x33069E8
	0x03306980 ADRP X0, 0xE18000
	0x03306984 LDR X0, [X0 + 0xD58]
	0x03306988 BL 0x1C16CF4
	0x0330698C ADRP X0, 0xE18000
	0x03306990 LDR X0, [X0 + 0xD60]
	0x03306994 BL 0x1C16CF4
	0x03306998 ADRP X0, 0xE21000
	0x0330699C LDR X0, [X0 + 0x9D8]
	0x033069A0 BL 0x1C16CF4
	0x033069A4 ADRP X0, 0xE21000
	0x033069A8 LDR X0, [X0 + 0x9E0]
	0x033069AC BL 0x1C16CF4
	0x033069B0 ADRP X0, 0xE1B000
	0x033069B4 LDR X0, [X0 + 0x850]
	0x033069B8 BL 0x1C16CF4
	0x033069BC ADRP X0, 0xE1C000
	0x033069C0 LDR X0, [X0 + 0x4E8]
	0x033069C4 BL 0x1C16CF4
	0x033069C8 ADRP X0, 0xE1C000
	0x033069CC LDR X0, [X0 + 0x2D0]
	0x033069D0 BL 0x1C16CF4
	0x033069D4 ADRP X0, 0xE20000
	0x033069D8 LDR X0, [X0 + 0xF68]
	0x033069DC BL 0x1C16CF4
	0x033069E0 MOVZ W8, 0x1
	0x033069E4 STRB W8, [X19 + 0xAEB]
	0x033069E8 CBZ X20, 0x3306D80
	0x033069EC LDR W8, [X20 + 0x10]
	0x033069F0 CBZ W8, 0x3306AB0
	0x033069F4 CMP W8, 0xFF
	0x033069F8 B.LE 0x3306AD4
	0x033069FC ADRP X8, 0xE18000
	0x03306A00 LDR X8, [X8 + 0xD60]
	0x03306A04 LDR X0, [X8]
	0x03306A08 LDR W8, [X0 + 0xE0]
	0x03306A0C CBNZ W8, 0x3306A14
	0x03306A10 BL 0x1C16DFC
	0x03306A14 ADRP X8, 0xE18000
	0x03306A18 LDR X8, [X8 + 0xD58]
	0x03306A1C LDR X19, [X8]
	0x03306A20 LDR X0, [X19 + 0x20]
	0x03306A24 LDRB W8, [X0 + 0x135]
	0x03306A28 TBNZ X8, 0x0, 0x3306A30
	0x03306A2C BL 0x1C5C684
	0x03306A30 LDR X8, [X0 + 0xC0]
	0x03306A34 LDR X0, [X8 + 0x8]
	0x03306A38 LDRB W8, [X0 + 0x135]
	0x03306A3C TBNZ X8, 0x0, 0x3306A44
	0x03306A40 BL 0x1C5C684
	0x03306A44 LDR W8, [X0 + 0xE0]
	0x03306A48 CBNZ W8, 0x3306A50
	0x03306A4C BL 0x1C16DFC
	0x03306A50 LDR X0, [X19 + 0x20]
	0x03306A54 LDRB W8, [X0 + 0x135]
	0x03306A58 TBNZ X8, 0x0, 0x3306A60
	0x03306A5C BL 0x1C5C684
	0x03306A60 LDR X8, [X0 + 0xC0]
	0x03306A64 LDR X0, [X8 + 0x8]
	0x03306A68 LDRB W8, [X0 + 0x135]
	0x03306A6C TBNZ X8, 0x0, 0x3306A74
	0x03306A70 BL 0x1C5C684
	0x03306A74 LDR X8, [X0 + 0xB8]
	0x03306A78 LDR X0, [X8]
	0x03306A7C CBZ X0, 0x3306D80
	0x03306A80 LDR X8, [X0]
	0x03306A84 LDR W1, [X20 + 0x10]
	0x03306A88 LDP X9, X2, [X8 + 0x178]
	0x03306A8C BLR X9
	0x03306A90 ADRP X8, 0xE1C000
	0x03306A94 LDR X8, [X8 + 0x2D0]
	0x03306A98 MOV X19, X0
	0x03306A9C LDR X1, [X8]
	0x03306AA0 BL 0x25FBC40
	0x03306AA4 MOV X21, X0
	0x03306AA8 MOV X22, X1
	0x03306AAC B 0x3306AF4
	0x03306AB0 LDR X8, [X20]
	0x03306AB4 MOV X0, X20
	0x03306AB8 LDP X9, X1, [X8 + 0x158]
	0x03306ABC BLR X9
	0x03306AC0 LDR X8, [X24 + 0x28]
	0x03306AC4 LDUR X9, [X29 - 0x8]
	0x03306AC8 CMP X8, X9

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x10D7000
	009 Move W8, [X23+2787]
	010 Move W21, W3
	011 Move X19, X2
	012 Move X20, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE22000
	019 Move X0, [X0+2352]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2787], W8
	023 Compare X20, 0
	024 JumpIfEqual {101}
	025 Compare X19, 0
	026 JumpIfEqual {101}
	027 Move W8, [X19+16]
	028 Compare W8, 0
	029 JumpIfEqual {38}
	030 Move W8, [X20+16]
	031 Compare W8, 0
	032 JumpIfEqual {39}
	033 Move W8, 0x40000000
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, 0x10000000
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W2, 5
	038 Move W0, 1
	039 Move W0, W31
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X22, [X31+32]
	043 Move X21, [X31+40]
	044 Move X24, [X31+16]
	045 Move X23, [X31+24]
	046 Move X30, [X31+64]
	047 Return X0
	048 Move W2, 4
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X23, 0xE22000
	051 Move X23, [X23+2352]
	052 Move X0, [X23]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X24, 0x10D7000
	058 Move W8, [X24+2814]
	059 Compare W8, 0
	060 JumpIfNotEqual {66}
	061 Move X0, 0xE22000
	062 Move X0, [X0+2352]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X24+2814], W8
	066 Move X0, [X23]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X23]
	072 Move X8, [X0+184]
	073 Move W8, [X8]
	074 Compare W8, 0
	075 JumpIfEqual {90}
	076 Move W2, 4
	077 NotImplemented "Instruction BFM not yet implemented."
	078 Move X0, X20
	079 Move X1, X19
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move X3, X31
	087 Move X30, [X31+64]
	088 Call String.EndsWith, X0, X1, X2
	089 Return X0
	090 Move X0, X22
	091 Move X1, X20
	092 Move X2, X19
	093 Move W3, W21
	094 Move X20, [X31+48]
	095 Move X19, [X31+56]
	096 Move X22, [X31+32]
	097 Move X21, [X31+40]
	098 Move X24, [X31+16]
	099 Move X23, [X31+24]
	100 Move X30, [X31+64]
	101 Move X8, 0xE22000
	102 Move X9, 0xDF9000
	103 Move X8, [X8+2472]
	104 Move X9, [X9+1408]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 NotImplemented "Instruction CSEL not yet implemented."
	107 Call 0x1C17D08
	108 Move X19, X0
	109 Move X0, 0xDF3000
	110 Move X0, [X0+1320]
	111 Call 0x1C17D08
	112 Call 0x1C17F10
	113 Move X20, X0
	114 Move X0, 0xE1D000
	115 Move X0, [X0+2680]
	116 Call 0x1C17D08
	117 Move X2, X0
	118 Move X0, X20
	119 Move X1, X19
	120 Move X3, X31
	121 Call ArgumentNullException..ctor, X0, X1, X2
	122 Move X0, 0xE22000
	123 Move X0, [X0+2480]
	124 Call 0x1C17D08
	125 Move X1, X0
	126 Move X0, X20
	127 Call 0x1C17DEC
	128 Move X0, 0xDF6000
	129 Move X0, [X0+1400]
	130 Call 0x1C17D08
	131 Call 0x1C17F10
	132 Move X19, X0
	133 Move X0, 0xE1E000
	134 Move X0, [X0+2392]
	135 Call 0x1C17D08
	136 Move X20, X0
	137 Move X0, 0xE22000
	138 Move X0, [X0+2096]
	139 Call 0x1C17D08
	140 Move X2, X0
	141 Move X0, X19
	142 Move X1, X20
	143 Move X3, X31
	144 Call ArgumentException..ctor, X0, X1, X2
	145 Move X0, 0xE22000
	146 Move X0, [X0+2480]
	147 Call 0x1C17D08
	148 Move X1, X0
	149 Move X0, X19
	150 Call 0x1C17DEC

Method: System.Boolean IsSuffix(System.ReadOnlySpan`1<System.Char> source, System.ReadOnlySpan`1<System.Char> suffix, System.Globalization.CompareOptions options)

Disassembly:
	0x03306C3C CBNZ W9, 0x3306C6C

ISIL:
No ISIL was generated
Method: System.Int32 IndexOf(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Globalization.CompareOptions options)

Disassembly:
	0x03306CA0 MOV W1, W20
	0x03306CA4 MOV X2, X22
	0x03306CA8 MOV X3, X31
	0x03306CAC BL 0x337E57C
	0x03306CB0 MOV W20, W0
	0x03306CB4 CBZ X19, 0x3306D50
	0x03306CB8 ADRP X8, 0xE18000
	0x03306CBC LDR X8, [X8 + 0xD60]
	0x03306CC0 LDR X0, [X8]
	0x03306CC4 LDR W8, [X0 + 0xE0]
	0x03306CC8 CBNZ W8, 0x3306CD0
	0x03306CCC BL 0x1C16DFC
	0x03306CD0 ADRP X8, 0xE18000
	0x03306CD4 LDR X8, [X8 + 0xD58]
	0x03306CD8 LDR X21, [X8]
	0x03306CDC LDR X0, [X21 + 0x20]
	0x03306CE0 LDRB W8, [X0 + 0x135]
	0x03306CE4 TBNZ X8, 0x0, 0x3306CEC
	0x03306CE8 BL 0x1C5C684
	0x03306CEC LDR X8, [X0 + 0xC0]
	0x03306CF0 LDR X0, [X8 + 0x8]
	0x03306CF4 LDRB W8, [X0 + 0x135]
	0x03306CF8 TBNZ X8, 0x0, 0x3306D00
	0x03306CFC BL 0x1C5C684
	0x03306D00 LDR W8, [X0 + 0xE0]
	0x03306D04 CBNZ W8, 0x3306D0C
	0x03306D08 BL 0x1C16DFC
	0x03306D0C LDR X0, [X21 + 0x20]
	0x03306D10 LDRB W8, [X0 + 0x135]
	0x03306D14 TBNZ X8, 0x0, 0x3306D1C
	0x03306D18 BL 0x1C5C684
	0x03306D1C LDR X8, [X0 + 0xC0]
	0x03306D20 LDR X0, [X8 + 0x8]
	0x03306D24 LDRB W8, [X0 + 0x135]
	0x03306D28 TBNZ X8, 0x0, 0x3306D30
	0x03306D2C BL 0x1C5C684
	0x03306D30 LDR X8, [X0 + 0xB8]
	0x03306D34 LDR X0, [X8]
	0x03306D38 CBZ X0, 0x3306D80
	0x03306D3C LDR X8, [X0]
	0x03306D40 MOV X1, X19
	0x03306D44 MOV W2, W31
	0x03306D48 LDP X9, X3, [X8 + 0x188]
	0x03306D4C BLR X9
	0x03306D50 LDR X8, [X24 + 0x28]
	0x03306D54 LDUR X9, [X29 - 0x8]
	0x03306D58 CMP X8, X9
	0x03306D5C B.NE 0x3306D90
	0x03306D60 MOV W0, W20
	0x03306D64 ADD X31, X29, 0x0
	0x03306D68 LDP X20, X19, [X31 + 0x40]
	0x03306D6C LDP X22, X21, [X31 + 0x30]
	0x03306D70 LDP X24, X23, [X31 + 0x20]
	0x03306D74 LDR X25, [X31 + 0x10]
	0x03306D78 LDP X29, X30, [X31], #0x50
	0x03306D7C RET
	0x03306D80 BL 0x1C16F20
	0x03306D84 BL 0x1C16F30
	0x03306D88 MOV X1, X20
	0x03306D8C BL 0x1C16DEC
	0x03306D90 BL 0x3EB1B20
	0x03306D94 STP X30, X23, [X31 - 0x30]!
	0x03306D98 STP X22, X21, [X31 + 0x10]
	0x03306D9C STP X20, X19, [X31 + 0x20]
	0x03306DA0 ADRP X22, 0x10D6000
	0x03306DA4 LDRB W8, [X22 + 0xAEC]
	0x03306DA8 MOV W20, W2
	0x03306DAC MOV X19, X1
	0x03306DB0 MOV X21, X0
	0x03306DB4 TBNZ X8, 0x0, 0x3306DD8
	0x03306DB8 ADRP X0, 0xE1B000
	0x03306DBC LDR X0, [X0 + 0xFD0]
	0x03306DC0 BL 0x1C16CF4
	0x03306DC4 ADRP X0, 0xE21000
	0x03306DC8 LDR X0, [X0 + 0x930]
	0x03306DCC BL 0x1C16CF4
	0x03306DD0 MOVZ W8, 0x1
	0x03306DD4 STRB W8, [X22 + 0xAEC]
	0x03306DD8 CBZ X19, 0x3306EA4
	0x03306DDC CMP W20, 0x20
	0x03306DE0 B.CS 0x3306ED8
	0x03306DE4 ADRP X22, 0xE21000
	0x03306DE8 LDR X22, [X22 + 0x930]
	0x03306DEC LDR X0, [X22]
	0x03306DF0 LDR W8, [X0 + 0xE0]
	0x03306DF4 CBNZ W8, 0x3306DFC
	0x03306DF8 BL 0x1C16DFC
	0x03306DFC ADRP X23, 0x10D6000
	0x03306E00 LDRB W8, [X23 + 0xAFE]
	0x03306E04 CBNZ W8, 0x3306E1C
	0x03306E08 ADRP X0, 0xE21000
	0x03306E0C LDR X0, [X0 + 0x930]
	0x03306E10 BL 0x1C16CF4
	0x03306E14 MOVZ W8, 0x1
	0x03306E18 STRB W8, [X23 + 0xAFE]
	0x03306E1C LDR X0, [X22]
	0x03306E20 LDR W8, [X0 + 0xE0]
	0x03306E24 CBNZ W8, 0x3306E30
	0x03306E28 BL 0x1C16DFC
	0x03306E2C LDR X0, [X22]
	0x03306E30 LDR X8, [X0 + 0xB8]
	0x03306E34 LDRB W8, [X8]
	0x03306E38 CBZ W8, 0x3306E5C
	0x03306E3C TBNZ X20, 0x0, 0x3306E78
	0x03306E40 LDR X8, [X19]
	0x03306E44 MOV X0, X19
	0x03306E48 LDP X20, X19, [X31 + 0x20]
	0x03306E4C LDP X22, X21, [X31 + 0x10]
	0x03306E50 LDP X2, X1, [X8 + 0x158]
	0x03306E54 LDP X30, X23, [X31], #0x30
	0x03306E58 BR X2
	0x03306E5C MOV X0, X21
	0x03306E60 MOV X1, X19
	0x03306E64 MOV W2, W20
	0x03306E68 LDP X20, X19, [X31 + 0x20]
	0x03306E6C LDP X22, X21, [X31 + 0x10]
	0x03306E70 LDP X30, X23, [X31], #0x30
	0x03306E74 B 0x3306F34
	0x03306E78 ADRP X8, 0xE1B000
	0x03306E7C LDR X8, [X8 + 0xFD0]
	0x03306E80 LDR X0, [X8]
	0x03306E84 LDR W8, [X0 + 0xE0]
	0x03306E88 CBNZ W8, 0x3306E90
	0x03306E8C BL 0x1C16DFC
	0x03306E90 MOV X0, X19
	0x03306E94 LDP X20, X19, [X31 + 0x20]
	0x03306E98 LDP X22, X21, [X31 + 0x10]
	0x03306E9C LDP X30, X23, [X31], #0x30
	0x03306EA0 B 0x3306948
	0x03306EA4 ADRP X0, 0xDF2000
	0x03306EA8 LDR X0, [X0 + 0x528]
	0x03306EAC BL 0x1C16D08
	0x03306EB0 BL 0x1C16F10
	0x03306EB4 MOV X19, X0
	0x03306EB8 ADRP X0, 0xDF8000
	0x03306EBC LDR X0, [X0 + 0x580]
	0x03306EC0 BL 0x1C16D08
	0x03306EC4 MOV X1, X0
	0x03306EC8 MOV X0, X19
	0x03306ECC MOV X2, X31
	0x03306ED0 BL 0x330E100
	0x03306ED4 B 0x3306F1C
	0x03306ED8 ADRP X0, 0xDF5000
	0x03306EDC LDR X0, [X0 + 0x578]
	0x03306EE0 BL 0x1C16D08
	0x03306EE4 BL 0x1C16F10
	0x03306EE8 MOV X19, X0
	0x03306EEC ADRP X0, 0xE1D000
	0x03306EF0 LDR X0, [X0 + 0x958]
	0x03306EF4 BL 0x1C16D08
	0x03306EF8 MOV X20, X0
	0x03306EFC ADRP X0, 0xE21000
	0x03306F00 LDR X0, [X0 + 0x830]
	0x03306F04 BL 0x1C16D08
	0x03306F08 MOV X2, X0
	0x03306F0C MOV X0, X19
	0x03306F10 MOV X1, X20
	0x03306F14 MOV X3, X31
	0x03306F18 BL 0x330E16C
	0x03306F1C ADRP X0, 0xE21000
	0x03306F20 LDR X0, [X0 + 0x9E8]
	0x03306F24 BL 0x1C16D08
	0x03306F28 MOV X1, X0
	0x03306F2C MOV X0, X19
	0x03306F30 BL 0x1C16DEC
	0x03306F34 STR X30, [X31 - 0x10]!
	0x03306F38 LDR X8, [X0]
	0x03306F3C LDR X9, [X8 + 0x208]
	0x03306F40 LDR X3, [X8 + 0x210]
	0x03306F44 BLR X9
	0x03306F48 CBZ X0, 0x3306F5C
	0x03306F4C LDR X8, [X0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x10D7000
	011 Move W8, [X25+2788]
	012 Move W23, W5
	013 Move W19, W4
	014 Move W20, W3
	015 Move X21, X2
	016 Move X22, X1
	017 Move X24, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xE22000
	023 Move X0, [X0+2352]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+2788], W8
	027 Compare X22, 0
	028 JumpIfEqual {136}
	029 Compare X21, 0
	030 JumpIfEqual {143}
	031 Move W8, [X22+16]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Compare W8, 0
	034 JumpIfEqual {48}
	035 Move TEMP, X20
	036 And TEMP, TEMP, -2147483648
	037 Compare TEMP, -2147483648
	038 JumpIfEqual {125}
	039 Move TEMP, X19
	040 And TEMP, TEMP, -2147483648
	041 Compare TEMP, -2147483648
	042 JumpIfEqual {155}
	043 Subtract W8, W8, W19
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W8, 0x10000000
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W5, 1
	048 Move W8, [X21+16]
	049 Move X20, [X31+64]
	050 Move X19, [X31+72]
	051 Move X22, [X31+48]
	052 Move X21, [X31+56]
	053 Move X24, [X31+32]
	054 Move X23, [X31+40]
	055 Move X26, [X31+16]
	056 Move X25, [X31+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CSINV not yet implemented."
	059 Move X30, [X31+80]
	060 Return X0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W8, 0x40000000
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X25, 0xE22000
	065 Move X25, [X25+2352]
	066 Move X0, [X25]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X26, 0x10D7000
	072 Move W8, [X26+2814]
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0xE22000
	076 Move X0, [X0+2352]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X26+2814], W8
	080 Move X0, [X25]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {86}
	084 Call 0x1C17DFC
	085 Move X0, [X25]
	086 Move X8, [X0+184]
	087 Move W8, [X8]
	088 Compare W8, 0
	089 JumpIfEqual {107}
	090 Move W8, 1
	091 NotImplemented "Instruction MOVK not yet implemented."
	092 And W31, W23, W8
	093 NotImplemented "Instruction CSET not yet implemented."
	094 Move X1, X22
	095 Move X2, X21
	096 Move W3, W20
	097 Move W4, W19
	098 Move X20, [X31+64]
	099 Move X19, [X31+72]
	100 Move X22, [X31+48]
	101 Move X21, [X31+56]
	102 Move X24, [X31+32]
	103 Move X23, [X31+40]
	104 Move X26, [X31+16]
	105 Move X25, [X31+24]
	106 Move X30, [X31+80]
	107 Move X0, X24
	108 Move X1, X22
	109 Move W2, W20
	110 Move W3, W19
	111 Move X4, X21
	112 Move W5, W23
	113 Move X20, [X31+64]
	114 Move X19, [X31+72]
	115 Move X22, [X31+48]
	116 Move X21, [X31+56]
	117 Move X24, [X31+32]
	118 Move X23, [X31+40]
	119 Move X26, [X31+16]
	120 Move X25, [X31+24]
	121 Move W6, 1
	122 Move X30, [X31+80]
	123 Call CompareInfo.internal_index_switch, X0, X1, X2, X3, X4, X5, X6
	124 Return X0
	125 Move X0, 0xDF6000
	126 Move X0, [X0+1888]
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move X19, X0
	130 Move X0, 0xE16000
	131 Move X0, [X0+1624]
	132 Call 0x1C17D08
	133 Move X20, X0
	134 Move X0, 0xE16000
	135 Move X0, [X0+1632]
	136 Move X0, 0xDF3000
	137 Move X0, [X0+1320]
	138 Call 0x1C17D08
	139 Call 0x1C17F10
	140 Move X19, X0
	141 Move X0, 0xDF9000
	142 Move X0, [X0+1408]
	143 Move X0, 0xDF3000
	144 Move X0, [X0+1320]
	145 Call 0x1C17D08
	146 Call 0x1C17F10
	147 Move X19, X0
	148 Move X0, 0xDF8000
	149 Move X0, [X0+3784]
	150 Call 0x1C17D08
	151 Move X1, X0
	152 Move X0, X19
	153 Move X2, X31
	154 Call ArgumentNullException..ctor, X0, X1
	155 Move X0, 0xDF6000
	156 Move X0, [X0+1888]
	157 Call 0x1C17D08
	158 Call 0x1C17F10
	159 Move X19, X0
	160 Move X0, 0xE16000
	161 Move X0, [X0+1608]
	162 Call 0x1C17D08
	163 Move X20, X0
	164 Move X0, 0xE16000
	165 Move X0, [X0+1616]
	166 Call 0x1C17D08
	167 Move X2, X0
	168 Move X0, X19
	169 Move X1, X20
	170 Move X3, X31
	171 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	172 Move X0, 0xE22000
	173 Move X0, [X0+2488]
	174 Call 0x1C17D08
	175 Move X1, X0
	176 Move X0, X19
	177 Call 0x1C17DEC
	178 Move X0, 0xDF6000
	179 Move X0, [X0+1400]
	180 Call 0x1C17D08
	181 Call 0x1C17F10
	182 Move X19, X0
	183 Move X0, 0xE1E000
	184 Move X0, [X0+2392]
	185 Call 0x1C17D08
	186 Move X20, X0
	187 Move X0, 0xE22000
	188 Move X0, [X0+2096]
	189 Call 0x1C17D08
	190 Move X2, X0
	191 Move X0, X19
	192 Move X1, X20
	193 Move X3, X31
	194 Call ArgumentException..ctor, X0, X1, X2

Method: System.Int32 IndexOf(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Globalization.CompareOptions options, System.Int32* matchLengthPtr)

Disassembly:
	0x033070A4 LDR X8, [X20]
	0x033070A8 LDP X20, X19, [X31 + 0x10]
	0x033070AC MOV X1, X0
	0x033070B0 MOV X2, X31
	0x033070B4 MOV X0, X8
	0x033070B8 LDP X30, X21, [X31], #0x20
	0x033070BC B 0x321B938
	0x033070C0 STP X30, X21, [X31 - 0x20]!
	0x033070C4 STP X20, X19, [X31 + 0x10]
	0x033070C8 ADRP X20, 0x10D5000
	0x033070CC ADRP X19, 0xE1A000
	0x033070D0 LDRB W8, [X20 + 0xAEF]
	0x033070D4 LDR X19, [X19 + 0xFD0]
	0x033070D8 TBNZ X8, 0x0, 0x3307114
	0x033070DC ADRP X0, 0xE1A000
	0x033070E0 LDR X0, [X0 + 0xFD0]
	0x033070E4 BL 0x1C16CF4
	0x033070E8 ADRP X0, 0xE1A000
	0x033070EC LDR X0, [X0 + 0xA10]
	0x033070F0 BL 0x1C16CF4
	0x033070F4 ADRP X0, 0xE20000
	0x033070F8 LDR X0, [X0 + 0xA00]
	0x033070FC BL 0x1C16CF4
	0x03307100 ADRP X0, 0xE20000
	0x03307104 LDR X0, [X0 + 0xA08]
	0x03307108 BL 0x1C16CF4
	0x0330710C MOVZ W8, 0x1
	0x03307110 STRB W8, [X20 + 0xAEF]
	0x03307114 LDR X0, [X19]
	0x03307118 LDR W8, [X0 + 0xE0]
	0x0330711C CBNZ W8, 0x3307128
	0x03307120 BL 0x1C16DFC
	0x03307124 LDR X0, [X19]
	0x03307128 LDR X8, [X0 + 0xB8]
	0x0330712C LDRB W8, [X8 + 0x11]
	0x03307130 CBNZ W8, 0x33071E8
	0x03307134 ADRP X8, 0xE20000
	0x03307138 LDR X8, [X8 + 0xA00]
	0x0330713C MOV X1, X31
	0x03307140 LDR X0, [X8]
	0x03307144 BL 0x33C190C
	0x03307148 ADRP X8, 0xE20000
	0x0330714C LDR X8, [X8 + 0xA08]
	0x03307150 MOV X2, X31
	0x03307154 LDR X1, [X8]
	0x03307158 BL 0x3226EF8
	0x0330715C TBZ X0, 0x0, 0x33071C0
	0x03307160 ADRP X20, 0xE1A000
	0x03307164 LDR X20, [X20 + 0xA10]
	0x03307168 LDR X0, [X20]
	0x0330716C LDR W8, [X0 + 0xE0]
	0x03307170 CBNZ W8, 0x3307178
	0x03307174 BL 0x1C16DFC
	0x03307178 ADRP X21, 0x10D5000
	0x0330717C LDRB W8, [X21 + 0x2F4]
	0x03307180 CBNZ W8, 0x3307198
	0x03307184 ADRP X0, 0xE1A000
	0x03307188 LDR X0, [X0 + 0xA10]
	0x0330718C BL 0x1C16CF4
	0x03307190 MOVZ W8, 0x1
	0x03307194 STRB W8, [X21 + 0x2F4]
	0x03307198 LDR X0, [X20]
	0x0330719C LDR W8, [X0 + 0xE0]
	0x033071A0 CBNZ W8, 0x33071AC
	0x033071A4 BL 0x1C16DFC
	0x033071A8 LDR X0, [X20]
	0x033071AC LDR X8, [X0 + 0xB8]
	0x033071B0 LDRB W8, [X8 + 0x90]
	0x033071B4 CMP W8, 0x0
	0x033071B8 CSET W20, NE
	0x033071BC B 0x33071C4
	0x033071C0 MOV W20, W31
	0x033071C4 LDR X0, [X19]
	0x033071C8 LDR W8, [X0 + 0xE0]
	0x033071CC CBNZ W8, 0x33071D8
	0x033071D0 BL 0x1C16DFC
	0x033071D4 LDR X0, [X19]
	0x033071D8 LDR X8, [X0 + 0xB8]
	0x033071DC MOVZ W9, 0x1
	0x033071E0 STRB W20, [X8 + 0x10]
	0x033071E4 STRB W9, [X8 + 0x11]
	0x033071E8 LDR W8, [X0 + 0xE0]
	0x033071EC CBNZ W8, 0x33071F8
	0x033071F0 BL 0x1C16DFC
	0x033071F4 LDR X0, [X19]
	0x033071F8 LDR X8, [X0 + 0xB8]
	0x033071FC LDP X20, X19, [X31 + 0x10]
	0x03307200 LDRB W0, [X8 + 0x10]
	0x03307204 LDP X30, X21, [X31], #0x20
	0x03307208 RET
	0x0330720C STR X30, [X31 - 0x40]!
	0x03307210 STP X24, X23, [X31 + 0x10]
	0x03307214 STP X22, X21, [X31 + 0x20]
	0x03307218 STP X20, X19, [X31 + 0x30]
	0x0330721C ADRP X19, 0x10D5000
	0x03307220 LDRB W8, [X19 + 0xAF0]
	0x03307224 MOV X20, X0
	0x03307228 TBNZ X8, 0x0, 0x3307294
	0x0330722C ADRP X0, 0xE1A000
	0x03307230 LDR X0, [X0 + 0xFD0]
	0x03307234 BL 0x1C16CF4
	0x03307238 ADRP X0, 0xDEE000
	0x0330723C LDR X0, [X0 + 0xC48]
	0x03307240 BL 0x1C16CF4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X26, 0x10D6000
	012 Move W8, [X26+2789]
	013 Move X19, X6
	014 Move W24, W5
	015 Move W21, W4
	016 Move W22, W3
	017 Move X20, X2
	018 Move X23, X1
	019 Move X25, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xE21000
	025 Move X0, [X0+2352]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X26+2789], W8
	029 Move [X19], W31
	030 Compare X23, 0
	031 JumpIfEqual {133}
	032 Move W8, [X23+16]
	033 Compare W8, 0
	034 JumpIfEqual {48}
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, 0x10000000
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W5, 1
	039 Move X1, X23
	040 Move X2, X20
	041 Move W3, W22
	042 Move W4, W21
	043 Call CompareInfo.IndexOfOrdinal, X0, X1, X2, X3, X4, X5
	044 Move TEMP, X0
	045 And TEMP, TEMP, -2147483648
	046 Compare TEMP, -2147483648
	047 JumpIfNotEqual {98}
	048 Compare X20, 0
	049 JumpIfEqual {133}
	050 Move W8, [X20+16]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSINV not yet implemented."
	053 Move TEMP, 0
	054 Not TEMP
	055 Move W0, TEMP
	056 Move X26, 0xE21000
	057 Move X26, [X26+2352]
	058 Move X0, [X26]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X27, 0x10D6000
	064 Move W8, [X27+2814]
	065 Compare W8, 0
	066 JumpIfNotEqual {72}
	067 Move X0, 0xE21000
	068 Move X0, [X0+2352]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X27+2814], W8
	072 Move X0, [X26]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X0, [X26]
	078 Move X8, [X0+184]
	079 Move W8, [X8]
	080 Compare W8, 0
	081 JumpIfEqual {113}
	082 Move W8, 1
	083 NotImplemented "Instruction MOVK not yet implemented."
	084 And W31, W24, W8
	085 NotImplemented "Instruction CSET not yet implemented."
	086 Move X1, X23
	087 Move X2, X20
	088 Move W3, W22
	089 Move W4, W21
	090 Call CompareInfo.IndexOfOrdinal, X0, X1, X2, X3, X4, X5
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W8, W0
	093 NotImplemented "Instruction CSEL not yet implemented."
	094 Move TEMP, X8
	095 And TEMP, TEMP, -2147483648
	096 Compare TEMP, -2147483648
	097 JumpIfEqual {132}
	098 Compare X20, 0
	099 JumpIfEqual {133}
	100 Move W8, [X20+16]
	101 Move [X19], W8
	102 Move X20, [X31+64]
	103 Move X19, [X31+72]
	104 Move X22, [X31+48]
	105 Move X21, [X31+56]
	106 Move X24, [X31+32]
	107 Move X23, [X31+40]
	108 Move X26, [X31+16]
	109 Move X25, [X31+24]
	110 Move X30, [X31+80]
	111 Move X27, [X31+88]
	112 Return X0
	113 Move X0, X25
	114 Move X1, X23
	115 Move X2, X20
	116 Move W3, W22
	117 Move W4, W21
	118 Move W5, W24
	119 Move X6, X19
	120 Move X20, [X31+64]
	121 Move X19, [X31+72]
	122 Move X22, [X31+48]
	123 Move X21, [X31+56]
	124 Move X24, [X31+32]
	125 Move X23, [X31+40]
	126 Move X26, [X31+16]
	127 Move X25, [X31+24]
	128 Move X30, [X31+80]
	129 Move X27, [X31+88]
	130 Call CompareInfo.IndexOfCore, X0, X1, X2, X3, X4, X5, X6
	131 Return X0
	132 And W0, W8, W8
	133 Call 0x1C17F20

Method: System.Int32 IndexOfOrdinal(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Boolean ignoreCase)

Disassembly:
	0x03306F50 LDP X2, X1, [X8 + 0x158]
	0x03306F54 LDR X30, [X31], #0x10
	0x03306F58 BR X2
	0x03306F5C BL 0x1C16F20
	0x03306F60 STR X30, [X31 - 0x30]!
	0x03306F64 STP X22, X21, [X31 + 0x10]
	0x03306F68 STP X20, X19, [X31 + 0x20]
	0x03306F6C ADRP X22, 0x10D6000
	0x03306F70 LDRB W8, [X22 + 0xAED]
	0x03306F74 MOV W20, W2
	0x03306F78 MOV X19, X1
	0x03306F7C MOV X21, X0
	0x03306F80 TBNZ X8, 0x0, 0x3306F98
	0x03306F84 ADRP X0, 0xE1B000
	0x03306F88 LDR X0, [X0 + 0xFD0]
	0x03306F8C BL 0x1C16CF4
	0x03306F90 MOVZ W8, 0x1
	0x03306F94 STRB W8, [X22 + 0xAED]
	0x03306F98 CBZ X19, 0x3307018
	0x03306F9C MOVZ W8, 0x10000000
	0x03306FA0 CMP W20, W8
	0x03306FA4 B.EQ 0x3306FD0
	0x03306FA8 MOVZ W8, 0x40000000
	0x03306FAC CMP W20, W8
	0x03306FB0 B.NE 0x3306FFC
	0x03306FB4 LDR X8, [X19]
	0x03306FB8 MOV X0, X19
	0x03306FBC LDP X20, X19, [X31 + 0x20]
	0x03306FC0 LDP X22, X21, [X31 + 0x10]
	0x03306FC4 LDP X2, X1, [X8 + 0x158]
	0x03306FC8 LDR X30, [X31], #0x30
	0x03306FCC BR X2
	0x03306FD0 ADRP X8, 0xE1B000
	0x03306FD4 LDR X8, [X8 + 0xFD0]
	0x03306FD8 LDR X0, [X8]
	0x03306FDC LDR W8, [X0 + 0xE0]
	0x03306FE0 CBNZ W8, 0x3306FE8
	0x03306FE4 BL 0x1C16DFC
	0x03306FE8 MOV X0, X19
	0x03306FEC LDP X20, X19, [X31 + 0x20]
	0x03306FF0 LDP X22, X21, [X31 + 0x10]
	0x03306FF4 LDR X30, [X31], #0x30
	0x03306FF8 B 0x3306948
	0x03306FFC MOV X0, X21
	0x03307000 MOV X1, X19
	0x03307004 MOV W2, W20
	0x03307008 LDP X20, X19, [X31 + 0x20]
	0x0330700C LDP X22, X21, [X31 + 0x10]
	0x03307010 LDR X30, [X31], #0x30
	0x03307014 B 0x3306D94
	0x03307018 ADRP X0, 0xDF1000
	0x0330701C LDR X0, [X0 + 0x528]
	0x03307020 BL 0x1C16D08
	0x03307024 BL 0x1C16F10
	0x03307028 MOV X19, X0
	0x0330702C ADRP X0, 0xDF7000
	0x03307030 LDR X0, [X0 + 0x580]
	0x03307034 BL 0x1C16D08
	0x03307038 MOV X1, X0
	0x0330703C MOV X0, X19
	0x03307040 MOV X2, X31
	0x03307044 BL 0x330E100
	0x03307048 ADRP X0, 0xE20000
	0x0330704C LDR X0, [X0 + 0x9F0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x10D7000
	010 Move X24, 0xE22000
	011 Move W8, [X25+2790]
	012 Move X24, [X24+2352]
	013 Move W22, W5
	014 Move W19, W4
	015 Move W20, W3
	016 Move X21, X2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xE1C000
	023 Move X0, [X0+4048]
	024 Call 0x1C17CF4
	025 Move X0, 0xE22000
	026 Move X0, [X0+2352]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2790], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X25, 0x10D7000
	036 Move W8, [X25+2814]
	037 Compare W8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, 0xE22000
	040 Move X0, [X0+2352]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X25+2814], W8
	044 Move X0, [X24]
	045 Move X25, 0xE1C000
	046 Move W8, [X0+224]
	047 Move X25, [X25+4048]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X24]
	052 Move X8, [X25]
	053 Move X9, [X0+184]
	054 Move W10, [X8+224]
	055 Move W24, [X9]
	056 Compare W10, 0
	057 JumpIfNotEqual {60}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 And W4, W22, 1
	061 Move X0, X23
	062 Move X1, X21
	063 Move W2, W20
	064 Move W3, W19
	065 Compare W24, 0
	066 JumpIfEqual {77}
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X24, [X31+16]
	072 Move X23, [X31+24]
	073 Move X30, [X31+64]
	074 Move X25, [X31+72]
	075 Call CompareInfo.InvariantIndexOf, X0, X1, X2, X3, X4
	076 Return X0
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X24, [X31+16]
	082 Move X23, [X31+24]
	083 Move X30, [X31+64]
	084 Move X25, [X31+72]
	085 Call CompareInfo.IndexOfOrdinalCore, X0, X1, X2, X3, X4
	086 Return X0

Method: System.Int32 LastIndexOf(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Globalization.CompareOptions options)

Disassembly:
	0x03307264 BL 0x1C16CF4
	0x03307268 ADRP X0, 0xE20000
	0x0330726C LDR X0, [X0 + 0xA28]
	0x03307270 BL 0x1C16CF4
	0x03307274 ADRP X0, 0xE1A000
	0x03307278 LDR X0, [X0 + 0xBD8]
	0x0330727C BL 0x1C16CF4
	0x03307280 ADRP X0, 0xDF9000
	0x03307284 LDR X0, [X0 + 0x2F0]
	0x03307288 BL 0x1C16CF4
	0x0330728C MOVZ W8, 0x1
	0x03307290 STRB W8, [X19 + 0xAF0]
	0x03307294 MOV X19, X20
	0x03307298 LDR X8, [X19 + 0x30]!
	0x0330729C CBNZ X8, 0x330748C
	0x033072A0 ADRP X24, 0xE1A000
	0x033072A4 LDR X24, [X24 + 0xFD0]
	0x033072A8 LDR X0, [X24]
	0x033072AC LDR W8, [X0 + 0xE0]
	0x033072B0 CBNZ W8, 0x33072BC
	0x033072B4 BL 0x1C16DFC
	0x033072B8 LDR X0, [X24]
	0x033072BC LDR X8, [X0 + 0xB8]
	0x033072C0 LDR X8, [X8 + 0x8]
	0x033072C4 CBNZ X8, 0x330736C
	0x033072C8 LDR W8, [X0 + 0xE0]
	0x033072CC CBNZ W8, 0x33072D4
	0x033072D0 BL 0x1C16DFC
	0x033072D4 ADRP X21, 0xDF9000
	0x033072D8 LDR X21, [X21 + 0x2F0]
	0x033072DC LDR X0, [X21]
	0x033072E0 LDR W8, [X0 + 0xE0]
	0x033072E4 CBNZ W8, 0x33072EC
	0x033072E8 BL 0x1C16DFC
	0x033072EC ADRP X22, 0x10D2000
	0x033072F0 LDRB W8, [X22 + 0x5A3]
	0x033072F4 CBNZ W8, 0x330730C
	0x033072F8 ADRP X0, 0xDF9000
	0x033072FC LDR X0, [X0 + 0x2F0]
	0x03307300 BL 0x1C16CF4
	0x03307304 MOVZ W8, 0x1
	0x03307308 STRB W8, [X22 + 0x5A3]
	0x0330730C LDR X0, [X21]
	0x03307310 LDR W8, [X0 + 0xE0]
	0x03307314 CBNZ W8, 0x3307320
	0x03307318 BL 0x1C16DFC
	0x0330731C LDR X0, [X21]
	0x03307320 ADRP X9, 0xE20000
	0x03307324 LDR X8, [X0 + 0xB8]
	0x03307328 LDR X9, [X9 + 0xA28]
	0x0330732C LDR X21, [X8 + 0x10]
	0x03307330 LDR X0, [X9]
	0x03307334 BL 0x1C16F10
	0x03307338 ADRP X8, 0xE20000
	0x0330733C LDR X8, [X8 + 0xA18]
	0x03307340 MOV X1, X21
	0x03307344 MOV X22, X0
	0x03307348 LDR X2, [X8]
	0x0330734C BL 0x2AA4830
	0x03307350 LDR X8, [X24]
	0x03307354 MOV X1, X22
	0x03307358 MOV X2, X31
	0x0330735C LDR X8, [X8 + 0xB8]
	0x03307360 ADD X0, X8, 0x8
	0x03307364 BL 0x1C24138
	0x03307368 LDR X0, [X24]
	0x0330736C LDR W8, [X0 + 0xE0]
	0x03307370 CBNZ W8, 0x330737C
	0x03307374 BL 0x1C16DFC
	0x03307378 LDR X0, [X24]
	0x0330737C LDR X8, [X0 + 0xB8]
	0x03307380 LDR X21, [X8 + 0x8]
	0x03307384 STRB W31, [X31 + 0xC]
	0x03307388 ADD X1, X31, 0xC
	0x0330738C MOV X0, X21
	0x03307390 MOV X2, X31
	0x03307394 BL 0x33DE64C
	0x03307398 LDR X0, [X24]
	0x0330739C LDR W8, [X0 + 0xE0]
	0x033073A0 CBNZ W8, 0x33073AC
	0x033073A4 BL 0x1C16DFC
	0x033073A8 LDR X0, [X24]
	0x033073AC LDR X8, [X0 + 0xB8]
	0x033073B0 LDR X0, [X8 + 0x8]
	0x033073B4 CBZ X0, 0x33074AC
	0x033073B8 ADRP X8, 0xE20000
	0x033073BC LDR X1, [X20 + 0x18]
	0x033073C0 LDR X8, [X8 + 0xA10]
	0x033073C4 LDR X3, [X8]
	0x033073C8 MOV X2, X19
	0x033073CC BL 0x2AA6B2C
	0x033073D0 TBNZ X0, 0x0, 0x330745C
	0x033073D4 ADRP X8, 0xDEE000
	0x033073D8 LDR X8, [X8 + 0xC48]
	0x033073DC LDR X22, [X20 + 0x10]
	0x033073E0 LDR X0, [X8]
	0x033073E4 LDR W8, [X0 + 0xE0]
	0x033073E8 CBNZ W8, 0x33073F0
	0x033073EC BL 0x1C16DFC
	0x033073F0 MOV X0, X22
	0x033073F4 MOV X1, X31
	0x033073F8 BL 0x333C3F8
	0x033073FC ADRP X8, 0xE1A000
	0x03307400 LDR X8, [X8 + 0xBD8]
	0x03307404 MOV X22, X0
	0x03307408 LDR X0, [X8]
	0x0330740C BL 0x1C16F10
	0x03307410 MOV X23, X0
	0x03307414 MOV X1, X22
	0x03307418 MOV X2, X31
	0x0330741C BL 0x320FF38
	0x03307420 STR X23, [X19]
	0x03307424 LDR X0, [X24]
	0x03307428 LDR W8, [X0 + 0xE0]
	0x0330742C CBNZ W8, 0x3307438
	0x03307430 BL 0x1C16DFC
	0x03307434 LDR X0, [X24]
	0x03307438 LDR X8, [X0 + 0xB8]
	0x0330743C LDR X0, [X8 + 0x8]
	0x03307440 CBZ X0, 0x33074B0
	0x03307444 ADRP X8, 0xE20000
	0x03307448 LDR X2, [X20 + 0x30]
	0x0330744C LDR X1, [X20 + 0x18]
	0x03307450 LDR X8, [X8 + 0xA20]
	0x03307454 LDR X3, [X8]
	0x03307458 BL 0x2AA5084
	0x0330745C MOV X20, X31
	0x03307460 MOVZ W22, 0x5
	0x03307464 LDRB W8, [X31 + 0xC]
	0x03307468 CBZ W8, 0x3307478
	0x0330746C MOV X0, X21
	0x03307470 MOV X1, X31
	0x03307474 BL 0x33E14E4
	0x03307478 CBNZ X20, 0x33074A4
	0x0330747C CMP W22, 0x5
	0x03307480 B.EQ 0x3307488
	0x03307484 CBNZ W22, 0x330748C
	0x03307488 LDR X8, [X19]
	0x0330748C LDP X20, X19, [X31 + 0x30]
	0x03307490 LDP X22, X21, [X31 + 0x20]
	0x03307494 LDP X24, X23, [X31 + 0x10]
	0x03307498 MOV X0, X8
	0x0330749C LDR X30, [X31], #0x40
	0x033074A0 RET
	0x033074A4 MOV X0, X20
	0x033074A8 BL 0x1C16F18
	0x033074AC BL 0x1C16F20
	0x033074B0 BL 0x1C16F20
	0x033074B4 B 0x33074CC
	0x033074B8 B 0x33074CC
	0x033074BC B 0x33074CC
	0x033074C0 B 0x33074CC
	0x033074C4 B 0x33074CC
	0x033074C8 B 0x33074CC
	0x033074CC MOV X22, X0
	0x033074D0 CMP W1, 0x1
	0x033074D4 B.NE 0x33074F0
	0x033074D8 MOV X0, X22
	0x033074DC BL 0x3EB1AD0
	0x033074E0 LDR X20, [X0]
	0x033074E4 BL 0x3EB1AE0
	0x033074E8 MOV W22, W31
	0x033074EC B 0x3307464
	0x033074F0 MOV X20, X31
	0x033074F4 B 0x33074FC
	0x033074F8 MOV X22, X0
	0x033074FC LDRB W8, [X31 + 0xC]
	0x03307500 CBZ W8, 0x3307510
	0x03307504 MOV X0, X21
	0x03307508 MOV X1, X31
	0x0330750C BL 0x33E14E4
	0x03307510 CBNZ X20, 0x330751C
	0x03307514 MOV X0, X22
	0x03307518 BL 0x1D2C690
	0x0330751C MOV X0, X20
	0x03307520 BL 0x1C16F18
	0x03307524 BL 0x1990590
	0x03307528 STP X30, X23, [X31 - 0x30]!
	0x0330752C STP X22, X21, [X31 + 0x10]
	0x03307530 STP X20, X19, [X31 + 0x20]
	0x03307534 ADRP X22, 0x10D5000
	0x03307538 ADRP X23, 0xE1A000
	0x0330753C LDRB W8, [X22 + 0xAF1]
	0x03307540 LDR X23, [X23 + 0xFD0]
	0x03307544 MOV W19, W2
	0x03307548 MOV X20, X1
	0x0330754C MOV X21, X0
	0x03307550 TBNZ X8, 0x0, 0x3307580
	0x03307554 ADRP X0, 0xE1A000
	0x03307558 LDR X0, [X0 + 0xFD0]
	0x0330755C BL 0x1C16CF4
	0x03307560 ADRP X0, 0xE20000
	0x03307564 LDR X0, [X0 + 0x9A0]
	0x03307568 BL 0x1C16CF4
	0x0330756C ADRP X0, 0xE1A000
	0x03307570 LDR X0, [X0 + 0xC18]
	0x03307574 BL 0x1C16CF4
	0x03307578 MOVZ W8, 0x1
	0x0330757C STRB W8, [X22 + 0xAF1]
	0x03307580 LDR X0, [X23]
	0x03307584 LDR W8, [X0 + 0xE0]
	0x03307588 CBNZ W8, 0x3307590
	0x0330758C BL 0x1C16DFC
	0x03307590 BL 0x33070C0
	0x03307594 TBZ X0, 0x0, 0x33075F0
	0x03307598 MOV X0, X21
	0x0330759C BL 0x330720C
	0x033075A0 CBZ X0, 0x330765C
	0x033075A4 ADRP X10, 0xE20000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x10D6000
	011 Move W8, [X25+2791]
	012 Move W23, W5
	013 Move W19, W4
	014 Move W20, W3
	015 Move X21, X2
	016 Move X22, X1
	017 Move X24, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xE1B000
	023 Move X0, [X0+4048]
	024 Call 0x1C17CF4
	025 Move X0, 0xE21000
	026 Move X0, [X0+2352]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2791], W8
	030 Compare X22, 0
	031 JumpIfEqual {175}
	032 Compare X21, 0
	033 JumpIfEqual {182}
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, 0x10000000
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, 0x40000000
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W8, [X22+16]
	040 Compare W8, 0
	041 JumpIfEqual {79}
	042 Move TEMP, X20
	043 And TEMP, TEMP, -2147483648
	044 Compare TEMP, -2147483648
	045 JumpIfEqual {194}
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 Subtract W19, W19, W8
	050 Subtract W20, W20, 1
	051 Move W8, [X21+16]
	052 Compare W8, 0
	053 JumpIfNotEqual {57}
	054 Subtract W8, W20, W19
	055 Add W31, W8, 1
	056 Move W0, W20
	057 Move TEMP, X19
	058 And TEMP, TEMP, -2147483648
	059 Compare TEMP, -2147483648
	060 JumpIfEqual {164}
	061 Subtract W8, W20, W19
	062 Add W31, W8, 1
	063 Move W8, 0x10000000
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X1, X22
	066 Move X2, X21
	067 Move W3, W20
	068 Move W4, W19
	069 Move X20, [X31+64]
	070 Move X19, [X31+72]
	071 Move X22, [X31+48]
	072 Move X21, [X31+56]
	073 Move X24, [X31+32]
	074 Move X23, [X31+40]
	075 Move X26, [X31+16]
	076 Move X25, [X31+24]
	077 Move W5, 1
	078 Move X30, [X31+80]
	079 Add W9, W20, 1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W8, [X21+16]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CSINV not yet implemented."
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X22, [X31+48]
	087 Move X21, [X31+56]
	088 Move X24, [X31+32]
	089 Move X23, [X31+40]
	090 Move X26, [X31+16]
	091 Move X25, [X31+24]
	092 Move X30, [X31+80]
	093 Return X0
	094 Move X25, 0xE21000
	095 Move X25, [X25+2352]
	096 Move X0, [X25]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X26, 0x10D6000
	102 Move W8, [X26+2814]
	103 Compare W8, 0
	104 JumpIfNotEqual {110}
	105 Move X0, 0xE21000
	106 Move X0, [X0+2352]
	107 Call 0x1C17CF4
	108 Move W8, 1
	109 Move [X26+2814], W8
	110 Move X0, [X25]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {116}
	114 Call 0x1C17DFC
	115 Move X0, [X25]
	116 Move X8, [X0+184]
	117 Move W8, [X8]
	118 Compare W8, 0
	119 JumpIfEqual {146}
	120 Move X8, 0xE1B000
	121 Move X8, [X8+4048]
	122 Move X0, [X8]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move W8, 1
	128 NotImplemented "Instruction MOVK not yet implemented."
	129 And W31, W23, W8
	130 Move X0, X22
	131 Move X1, X21
	132 Move W2, W20
	133 Move W3, W19
	134 Move X20, [X31+64]
	135 Move X19, [X31+72]
	136 Move X22, [X31+48]
	137 Move X21, [X31+56]
	138 Move X24, [X31+32]
	139 Move X23, [X31+40]
	140 Move X26, [X31+16]
	141 Move X25, [X31+24]
	142 NotImplemented "Instruction CSET not yet implemented."
	143 Move X30, [X31+80]
	144 Call CompareInfo.InvariantLastIndexOf, X0, X1, X2, X3, X4
	145 Return X0
	146 Move X0, X24
	147 Move X1, X22
	148 Move W2, W20
	149 Move W3, W19
	150 Move X4, X21
	151 Move W5, W23
	152 Move X20, [X31+64]
	153 Move X19, [X31+72]
	154 Move X22, [X31+48]
	155 Move X21, [X31+56]
	156 Move X24, [X31+32]
	157 Move X23, [X31+40]
	158 Move X26, [X31+16]
	159 Move X25, [X31+24]
	160 Move W6, W31
	161 Move X30, [X31+80]
	162 Call CompareInfo.internal_index_switch, X0, X1, X2, X3, X4, X5, X6
	163 Return X0
	164 Move X0, 0xDF5000
	165 Move X0, [X0+1888]
	166 Call 0x1C17D08
	167 Call 0x1C17F10
	168 Move X19, X0
	169 Move X0, 0xE15000
	170 Move X0, [X0+1608]
	171 Call 0x1C17D08
	172 Move X20, X0
	173 Move X0, 0xE15000
	174 Move X0, [X0+1616]
	175 Move X0, 0xDF2000
	176 Move X0, [X0+1320]
	177 Call 0x1C17D08
	178 Call 0x1C17F10
	179 Move X19, X0
	180 Move X0, 0xDF8000
	181 Move X0, [X0+1408]
	182 Move X0, 0xDF2000
	183 Move X0, [X0+1320]
	184 Call 0x1C17D08
	185 Call 0x1C17F10
	186 Move X19, X0
	187 Move X0, 0xDF7000
	188 Move X0, [X0+3784]
	189 Call 0x1C17D08
	190 Move X1, X0
	191 Move X0, X19
	192 Move X2, X31
	193 Call ArgumentNullException..ctor, X0, X1
	194 Move X0, 0xDF5000
	195 Move X0, [X0+1888]
	196 Call 0x1C17D08
	197 Call 0x1C17F10
	198 Move X19, X0
	199 Move X0, 0xE15000
	200 Move X0, [X0+1624]
	201 Call 0x1C17D08
	202 Move X20, X0
	203 Move X0, 0xE15000
	204 Move X0, [X0+1632]
	205 Call 0x1C17D08
	206 Move X2, X0
	207 Move X0, X19
	208 Move X1, X20
	209 Move X3, X31
	210 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	211 Move X0, 0xE21000
	212 Move X0, [X0+2504]
	213 Call 0x1C17D08
	214 Move X1, X0
	215 Move X0, X19
	216 Call 0x1C17DEC
	217 Move X0, 0xDF5000
	218 Move X0, [X0+1400]
	219 Call 0x1C17D08
	220 Call 0x1C17F10
	221 Move X19, X0
	222 Move X0, 0xE1D000
	223 Move X0, [X0+2392]
	224 Call 0x1C17D08
	225 Move X20, X0
	226 Move X0, 0xE21000
	227 Move X0, [X0+2096]
	228 Call 0x1C17D08
	229 Move X2, X0
	230 Move X0, X19
	231 Move X1, X20
	232 Move X3, X31
	233 Call ArgumentException..ctor, X0, X1, X2

Method: System.Int32 LastIndexOfOrdinal(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Boolean ignoreCase)

Disassembly:
	0x033075A8 LDR X8, [X0]
	0x033075AC LDR X10, [X10 + 0x9A0]
	0x033075B0 MOV X21, X0
	0x033075B4 LDRH W9, [X8 + 0x12E]
	0x033075B8 LDR X1, [X10]
	0x033075BC CBZ X9, 0x33075E0
	0x033075C0 LDR X10, [X8 + 0xB0]
	0x033075C4 ADD X10, X10, 0x8
	0x033075C8 LDUR X11, [X10 - 0x8]
	0x033075CC CMP X11, X1
	0x033075D0 B.EQ 0x3307630
	0x033075D4 SUBS X9, X9, 0x1
	0x033075D8 ADD X10, X10, 0x10
	0x033075DC B.NE 0x33075C8
	0x033075E0 MOV X0, X21
	0x033075E4 MOV W2, W31
	0x033075E8 BL 0x1C5C788
	0x033075EC B 0x330763C
	0x033075F0 ADRP X8, 0xE1A000
	0x033075F4 LDR W21, [X21 + 0x28]
	0x033075F8 LDR X8, [X8 + 0xC18]
	0x033075FC LDR X0, [X8]
	0x03307600 BL 0x1C16F10
	0x03307604 MOV W1, W21
	0x03307608 MOV X2, X20
	0x0330760C MOV W3, W19
	0x03307610 MOV X4, X31
	0x03307614 MOV X22, X0
	0x03307618 BL 0x333FC10
	0x0330761C MOV X0, X22
	0x03307620 LDP X20, X19, [X31 + 0x20]
	0x03307624 LDP X22, X21, [X31 + 0x10]
	0x03307628 LDP X30, X23, [X31], #0x30
	0x0330762C RET
	0x03307630 LDRSW X9, [X10]
	0x03307634 ADD X8, X8, X9, 0x4, LSL
	0x03307638 ADD X0, X8, 0x138
	0x0330763C LDP X4, X3, [X0]
	0x03307640 MOV X0, X21
	0x03307644 MOV X1, X20
	0x03307648 MOV W2, W19
	0x0330764C LDP X20, X19, [X31 + 0x20]
	0x03307650 LDP X22, X21, [X31 + 0x10]
	0x03307654 LDP X30, X23, [X31], #0x30
	0x03307658 BR X4
	0x0330765C BL 0x1C16F20
	0x03307660 STR X30, [X31 - 0x50]!
	0x03307664 STP X26, X25, [X31 + 0x10]
	0x03307668 STP X24, X23, [X31 + 0x20]
	0x0330766C STP X22, X21, [X31 + 0x30]
	0x03307670 STP X20, X19, [X31 + 0x40]
	0x03307674 ADRP X26, 0x10D5000
	0x03307678 LDRB W8, [X26 + 0xAF2]
	0x0330767C MOV W23, W6
	0x03307680 MOV W24, W5
	0x03307684 MOV X20, X4
	0x03307688 MOV W19, W3
	0x0330768C MOV W21, W2
	0x03307690 MOV X22, X1
	0x03307694 MOV X25, X0
	0x03307698 TBNZ X8, 0x0, 0x33076B0
	0x0330769C ADRP X0, 0xE1A000
	0x033076A0 LDR X0, [X0 + 0xFD0]
	0x033076A4 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x10D6000
	010 Move X24, 0xE21000
	011 Move W8, [X25+2792]
	012 Move X24, [X24+2352]
	013 Move W22, W5
	014 Move W19, W4
	015 Move W20, W3
	016 Move X21, X2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xE1B000
	023 Move X0, [X0+4048]
	024 Call 0x1C17CF4
	025 Move X0, 0xE21000
	026 Move X0, [X0+2352]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2792], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X25, 0x10D6000
	036 Move W8, [X25+2814]
	037 Compare W8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, 0xE21000
	040 Move X0, [X0+2352]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X25+2814], W8
	044 Move X0, [X24]
	045 Move X25, 0xE1B000
	046 Move W8, [X0+224]
	047 Move X25, [X25+4048]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X24]
	052 Move X8, [X25]
	053 Move X9, [X0+184]
	054 Move W10, [X8+224]
	055 Move W24, [X9]
	056 Compare W10, 0
	057 JumpIfNotEqual {60}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 And W4, W22, 1
	061 Move X0, X23
	062 Move X1, X21
	063 Move W2, W20
	064 Move W3, W19
	065 Compare W24, 0
	066 JumpIfEqual {77}
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X24, [X31+16]
	072 Move X23, [X31+24]
	073 Move X30, [X31+64]
	074 Move X25, [X31+72]
	075 Call CompareInfo.InvariantLastIndexOf, X0, X1, X2, X3, X4
	076 Return X0
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X24, [X31+16]
	082 Move X23, [X31+24]
	083 Move X30, [X31+64]
	084 Move X25, [X31+72]
	085 Call CompareInfo.LastIndexOfOrdinalCore, X0, X1, X2, X3, X4
	086 Return X0

Method: System.Globalization.SortKey GetSortKey(System.String source, System.Globalization.CompareOptions options)

Disassembly:
	0x033076E0 LDP X24, X23, [X31 + 0x20]
	0x033076E4 LDP X26, X25, [X31 + 0x10]
	0x033076E8 LDR X30, [X31], #0x50
	0x033076EC B 0x322E440
	0x033076F0 ADRP X26, 0xE1A000
	0x033076F4 LDR X26, [X26 + 0xFD0]
	0x033076F8 LDR X0, [X26]
	0x033076FC LDR W8, [X0 + 0xE0]
	0x03307700 CBNZ W8, 0x3307708
	0x03307704 BL 0x1C16DFC
	0x03307708 BL 0x33070C0
	0x0330770C TBZ X0, 0x0, 0x3307744
	0x03307710 AND W6, W23, 0x1
	0x03307714 MOV X0, X25
	0x03307718 MOV X1, X22
	0x0330771C MOV W2, W21
	0x03307720 MOV W3, W19
	0x03307724 MOV X4, X20
	0x03307728 MOV W5, W24
	0x0330772C LDP X20, X19, [X31 + 0x40]
	0x03307730 LDP X22, X21, [X31 + 0x30]
	0x03307734 LDP X24, X23, [X31 + 0x20]
	0x03307738 LDP X26, X25, [X31 + 0x10]
	0x0330773C LDR X30, [X31], #0x50
	0x03307740 B 0x3307850
	0x03307744 LDR X0, [X26]
	0x03307748 LDR W8, [X0 + 0xE0]
	0x0330774C CBNZ W8, 0x3307754
	0x03307750 BL 0x1C16DFC
	0x03307754 AND W4, W23, 0x1
	0x03307758 MOV X0, X22
	0x0330775C MOV W1, W21
	0x03307760 MOV W2, W19
	0x03307764 MOV X3, X20
	0x03307768 LDP X20, X19, [X31 + 0x40]
	0x0330776C LDP X22, X21, [X31 + 0x30]
	0x03307770 LDP X24, X23, [X31 + 0x20]
	0x03307774 LDP X26, X25, [X31 + 0x10]
	0x03307778 LDR X30, [X31], #0x50
	0x0330777C B 0x330779C
	0x03307780 LDP X20, X19, [X31 + 0x40]
	0x03307784 LDP X22, X21, [X31 + 0x30]
	0x03307788 LDP X24, X23, [X31 + 0x20]
	0x0330778C LDP X26, X25, [X31 + 0x10]
	0x03307790 LDR X30, [X31], #0x50
	0x03307794 B 0x322E70C
	0x03307798 BL 0x1C16F20
	0x0330779C STP X30, X25, [X31 - 0x40]!
	0x033077A0 STP X24, X23, [X31 + 0x10]
	0x033077A4 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x10D6000
	008 Move X22, 0xE21000
	009 Move W8, [X23+2793]
	010 Move X22, [X22+2352]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE21000
	019 Move X0, [X0+2352]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2793], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X23, 0x10D6000
	029 Move W8, [X23+2814]
	030 Compare W8, 0
	031 JumpIfNotEqual {37}
	032 Move X0, 0xE21000
	033 Move X0, [X0+2352]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+2814], W8
	037 Move X0, [X22]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X22]
	043 Move X8, [X0+184]
	044 Move W8, [X8]
	045 Compare W8, 0
	046 JumpIfEqual {58}
	047 Move X0, X21
	048 Move X1, X20
	049 Move W2, W19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 Call CompareInfo.InvariantCreateSortKey, X0, X1, X2
	057 Return X0
	058 Move X0, X21
	059 Move X1, X20
	060 Move W2, W19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]

Method: System.Boolean Equals(System.Object value)

Disassembly:
	0x03307860 STP X20, X19, [X31 + 0x40]
	0x03307864 ADRP X26, 0x10D5000
	0x03307868 LDRB W8, [X26 + 0xAF5]
	0x0330786C MOV W25, W6
	0x03307870 MOV W19, W5
	0x03307874 MOV X22, X4
	0x03307878 MOV W20, W3
	0x0330787C MOV W21, W2
	0x03307880 MOV X23, X1
	0x03307884 MOV X24, X0
	0x03307888 TBNZ X8, 0x0, 0x33078A0
	0x0330788C ADRP X0, 0xE20000
	0x03307890 LDR X0, [X0 + 0x9A0]
	0x03307894 BL 0x1C16CF4
	0x03307898 MOVZ W8, 0x1
	0x0330789C STRB W8, [X26 + 0xAF5]
	0x033078A0 MOV X0, X24
	0x033078A4 BL 0x330720C
	0x033078A8 CBZ X0, 0x3307978
	0x033078AC ADRP X9, 0xE20000
	0x033078B0 LDR X8, [X0]
	0x033078B4 LDR X9, [X9 + 0x9A0]
	0x033078B8 MOV X24, X0
	0x033078BC LDR X1, [X9]
	0x033078C0 LDRH W9, [X8 + 0x12E]
	0x033078C4 TBZ X25, 0x0, 0x33078F4
	0x033078C8 CBZ W9, 0x33078EC
	0x033078CC LDR X10, [X8 + 0xB0]
	0x033078D0 ADD X10, X10, 0x8
	0x033078D4 LDUR X11, [X10 - 0x8]
	0x033078D8 CMP X11, X1
	0x033078DC B.EQ 0x3307928
	0x033078E0 SUBS X9, X9, 0x1
	0x033078E4 ADD X10, X10, 0x10
	0x033078E8 B.NE 0x33078D4
	0x033078EC MOVZ W2, 0x4
	0x033078F0 B 0x330791C
	0x033078F4 CBZ W9, 0x3307918
	0x033078F8 LDR X10, [X8 + 0xB0]
	0x033078FC ADD X10, X10, 0x8
	0x03307900 LDUR X11, [X10 - 0x8]
	0x03307904 CMP X11, X1
	0x03307908 B.EQ 0x3307934
	0x0330790C SUBS X9, X9, 0x1
	0x03307910 ADD X10, X10, 0x10
	0x03307914 B.NE 0x3307900
	0x03307918 MOVZ W2, 0x5
	0x0330791C MOV X0, X24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10D6000
	006 Move W8, [X21+2794]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE1B000
	014 Move X0, [X0+4048]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2794], W8
	018 Compare X20, 0
	019 JumpIfEqual {32}
	020 Move X8, 0xE1B000
	021 Move X8, [X8+4048]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W0, W31
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0
	038 Move X8, [X19]
	039 Move X0, X19
	040 Move X9, [X8+392]
	041 Move X1, [X8+400]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Compare X20, 0
	044 JumpIfEqual {60}
	045 Move X8, [X20]
	046 Move X19, X0
	047 Move X0, X20
	048 Move X9, [X8+392]
	049 Move X1, [X8+400]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X1, X0
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X2, X31
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Call String.op_Equality, X0, X1
	059 Return X0
	060 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03307920 BL 0x1C5C788
	0x03307924 B 0x3307944
	0x03307928 LDR W9, [X10]
	0x0330792C ADD W9, W9, 0x4
	0x03307930 B 0x330793C
	0x03307934 LDR W9, [X10]
	0x03307938 ADD W9, W9, 0x5
	0x0330793C ADD X8, X8, W9, 0x4, SXTW
	0x03307940 ADD X0, X8, 0x138
	0x03307944 LDP X7, X6, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+392]
	004 Move X1, [X8+400]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Compare X0, 0
	007 JumpIfEqual {13}
	008 Move X8, [X0]
	009 Move X2, [X8+344]
	010 Move X1, [X8+352]
	011 Move X30, [X31+16]
	012 CallNoReturn X2
	013 Call 0x1C17F20

Method: System.Int32 GetIgnoreCaseHash(System.String source)

Disassembly:
	0x03307948 MOV X0, X24
	0x0330794C MOV X1, X23
	0x03307950 MOV X2, X22
	0x03307954 MOV W3, W21
	0x03307958 MOV W4, W20
	0x0330795C MOV W5, W19
	0x03307960 LDP X20, X19, [X31 + 0x40]
	0x03307964 LDP X22, X21, [X31 + 0x30]
	0x03307968 LDP X24, X23, [X31 + 0x20]
	0x0330796C LDP X26, X25, [X31 + 0x10]
	0x03307970 LDR X30, [X31], #0x50
	0x03307974 BR X7
	0x03307978 BL 0x1C16F20
	0x0330797C STR X30, [X31 - 0x50]!
	0x03307980 STP X26, X25, [X31 + 0x10]
	0x03307984 STP X24, X23, [X31 + 0x20]
	0x03307988 STP X22, X21, [X31 + 0x30]
	0x0330798C STP X20, X19, [X31 + 0x40]
	0x03307990 ADRP X26, 0x10D5000
	0x03307994 LDRB W8, [X26 + 0xAF6]
	0x03307998 MOV W19, W6
	0x0330799C MOV W20, W5
	0x033079A0 MOV W22, W4
	0x033079A4 MOV X23, X3
	0x033079A8 MOV W21, W2
	0x033079AC MOV W24, W1
	0x033079B0 MOV X25, X0
	0x033079B4 TBNZ X8, 0x0, 0x33079CC
	0x033079B8 ADRP X0, 0xE1A000
	0x033079BC LDR X0, [X0 + 0xFD0]
	0x033079C0 BL 0x1C16CF4
	0x033079C4 MOVZ W8, 0x1
	0x033079C8 STRB W8, [X26 + 0xAF6]
	0x033079CC CBZ X25, 0x33079DC
	0x033079D0 MOV X0, X31
	0x033079D4 BL 0x32C1424
	0x033079D8 ADD X25, X25, W0, SXTW
	0x033079DC ADRP X26, 0xE1A000
	0x033079E0 LDR X26, [X26 + 0xFD0]
	0x033079E4 CBZ X23, 0x33079F4
	0x033079E8 MOV X0, X31
	0x033079EC BL 0x32C1424
	0x033079F0 ADD X23, X23, W0, SXTW
	0x033079F4 LDR X0, [X26]
	0x033079F8 LDR W8, [X0 + 0xE0]
	0x033079FC CBNZ W8, 0x3307A04
	0x03307A00 BL 0x1C16DFC
	0x03307A04 ADD X0, X25, W24, 0x1, SXTW
	0x03307A08 ADD X2, X23, W22, 0x1, SXTW
	0x03307A0C MOV W1, W21
	0x03307A10 MOV W3, W20
	0x03307A14 MOV W4, W19
	0x03307A18 LDP X20, X19, [X31 + 0x40]
	0x03307A1C LDP X22, X21, [X31 + 0x30]
	0x03307A20 LDP X24, X23, [X31 + 0x20]
	0x03307A24 LDP X26, X25, [X31 + 0x10]
	0x03307A28 LDR X30, [X31], #0x50
	0x03307A2C B 0x1C426A0
	0x03307A30 STP X30, X27, [X31 - 0x50]!
	0x03307A34 STP X26, X25, [X31 + 0x10]
	0x03307A38 STP X24, X23, [X31 + 0x20]
	0x03307A3C STP X22, X21, [X31 + 0x30]
	0x03307A40 STP X20, X19, [X31 + 0x40]
	0x03307A44 ADRP X27, 0x10D5000
	0x03307A48 LDRB W8, [X27 + 0xAF4]
	0x03307A4C MOV W19, W7
	0x03307A50 MOV W20, W6
	0x03307A54 MOV W21, W5
	0x03307A58 MOV X22, X4
	0x03307A5C MOV W23, W3
	0x03307A60 MOV W24, W2
	0x03307A64 MOV X25, X1
	0x03307A68 MOV X26, X0
	0x03307A6C TBNZ X8, 0x0, 0x3307A84
	0x03307A70 ADRP X0, 0xE20000
	0x03307A74 LDR X0, [X0 + 0x9A0]
	0x03307A78 BL 0x1C16CF4
	0x03307A7C MOVZ W8, 0x1
	0x03307A80 STRB W8, [X27 + 0xAF4]
	0x03307A84 MOV X0, X26
	0x03307A88 BL 0x330720C
	0x03307A8C CBZ X0, 0x3307B2C
	0x03307A90 ADRP X10, 0xE20000
	0x03307A94 LDR X8, [X0]
	0x03307A98 LDR X10, [X10 + 0x9A0]
	0x03307A9C MOV X26, X0
	0x03307AA0 LDRH W9, [X8 + 0x12E]
	0x03307AA4 LDR X1, [X10]
	0x03307AA8 CBZ X9, 0x3307ACC
	0x03307AAC LDR X10, [X8 + 0xB0]
	0x03307AB0 ADD X10, X10, 0x8
	0x03307AB4 LDUR X11, [X10 - 0x8]
	0x03307AB8 CMP X11, X1
	0x03307ABC B.EQ 0x3307ADC
	0x03307AC0 SUBS X9, X9, 0x1
	0x03307AC4 ADD X10, X10, 0x10
	0x03307AC8 B.NE 0x3307AB4
	0x03307ACC MOVZ W2, 0x1
	0x03307AD0 MOV X0, X26
	0x03307AD4 BL 0x1C5C788
	0x03307AD8 B 0x3307AEC
	0x03307ADC LDR W9, [X10]
	0x03307AE0 ADD W9, W9, 0x1
	0x03307AE4 ADD X8, X8, W9, 0x4, SXTW
	0x03307AE8 ADD X0, X8, 0x138
	0x03307AEC LDP X8, X9, [X0]
	0x03307AF0 MOV X0, X26
	0x03307AF4 MOV X1, X25
	0x03307AF8 MOV W2, W24
	0x03307AFC MOV W3, W23
	0x03307B00 MOV X4, X22
	0x03307B04 MOV W5, W21
	0x03307B08 MOV W6, W20
	0x03307B0C MOV W7, W19
	0x03307B10 LDP X20, X19, [X31 + 0x40]
	0x03307B14 LDP X22, X21, [X31 + 0x30]
	0x03307B18 LDP X24, X23, [X31 + 0x20]
	0x03307B1C LDP X26, X25, [X31 + 0x10]
	0x03307B20 STR X9, [X31 + 0x50]
	0x03307B24 LDP X30, X27, [X31], #0x50
	0x03307B28 BR X8
	0x03307B2C BL 0x1C16F20
	0x03307B30 B 0x1C426A0
	0x03307B34 AND W5, W5, 0x1
	0x03307B38 B 0x1C42804
	0x03307B3C STR X30, [X31 - 0x20]!
	0x03307B40 STP X20, X19, [X31 + 0x10]
	0x03307B44 ADRP X19, 0x10D5000
	0x03307B48 ADRP X20, 0xDEE000
	0x03307B4C LDRB W8, [X19 + 0xAFB]
	0x03307B50 LDR X20, [X20 + 0xC48]
	0x03307B54 TBNZ X8, 0x0, 0x3307B78
	0x03307B58 ADRP X0, 0xE1A000
	0x03307B5C LDR X0, [X0 + 0xFD0]
	0x03307B60 BL 0x1C16CF4
	0x03307B64 ADRP X0, 0xDEE000
	0x03307B68 LDR X0, [X0 + 0xC48]
	0x03307B6C BL 0x1C16CF4
	0x03307B70 MOVZ W8, 0x1
	0x03307B74 STRB W8, [X19 + 0xAFB]
	0x03307B78 LDR X0, [X20]
	0x03307B7C LDR W8, [X0 + 0xE0]
	0x03307B80 CBNZ W8, 0x3307B88
	0x03307B84 BL 0x1C16DFC
	0x03307B88 MOV X0, X31
	0x03307B8C BL 0x3338524
	0x03307B90 CBZ X0, 0x3307BC0
	0x03307B94 LDR X8, [X0]
	0x03307B98 ADRP X19, 0xE1A000
	0x03307B9C LDP X9, X1, [X8 + 0x1F8]
	0x03307BA0 LDR X19, [X19 + 0xFD0]
	0x03307BA4 BLR X9
	0x03307BA8 LDR X8, [X19]
	0x03307BAC LDP X20, X19, [X31 + 0x10]
	0x03307BB0 LDR X8, [X8 + 0xB8]
	0x03307BB4 STR X0, [X8]
	0x03307BB8 LDR X30, [X31], #0x20
	0x03307BBC RET
	0x03307BC0 BL 0x1C16F20
	0x03307BC4 STR X30, [X31 - 0x20]!
	0x03307BC8 STP X20, X19, [X31 + 0x10]
	0x03307BCC ADRP X19, 0x10D5000
	0x03307BD0 ADRP X20, 0xE20000
	0x03307BD4 LDRB W8, [X19 + 0xAFC]
	0x03307BD8 LDR X20, [X20 + 0xA30]
	0x03307BDC TBNZ X8, 0x0, 0x3307BF4
	0x03307BE0 ADRP X0, 0xE20000
	0x03307BE4 LDR X0, [X0 + 0xA30]
	0x03307BE8 BL 0x1C16CF4
	0x03307BEC MOVZ W8, 0x1
	0x03307BF0 STRB W8, [X19 + 0xAFC]
	0x03307BF4 LDR X0, [X20]
	0x03307BF8 BL 0x1C16D9C
	0x03307BFC STR X30, [X31 - 0x40]!
	0x03307C00 STP X24, X23, [X31 + 0x10]
	0x03307C04 STP X22, X21, [X31 + 0x20]
	0x03307C08 STP X20, X19, [X31 + 0x30]
	0x03307C0C LDR X8, [X4 + 0x38]
	0x03307C10 MOV X21, X4
	0x03307C14 MOV X19, X3
	0x03307C18 MOV X22, X2
	0x03307C1C MOV X20, X1
	0x03307C20 MOV X23, X0
	0x03307C24 CBNZ X8, 0x3307C54
	0x03307C28 ADRP X0, 0xE13000
	0x03307C2C LDR X0, [X0 + 0xD68]
	0x03307C30 BL 0x1C16CF4
	0x03307C34 ADRP X0, 0xDEC000
	0x03307C38 LDR X0, [X0 + 0x6C0]
	0x03307C3C BL 0x1C16CF4
	0x03307C40 LDR X8, [X21 + 0x38]
	0x03307C44 CBNZ X8, 0x3307C54
	0x03307C48 MOV X0, X21
	0x03307C4C BL 0x1C5C6E0
	0x03307C50 LDR X8, [X21 + 0x38]
	0x03307C54 ADRP X9, 0xDEC000
	0x03307C58 LDR X9, [X9 + 0x6C0]
	0x03307C5C LDR X24, [X8]
	0x03307C60 LDR X0, [X9]
	0x03307C64 LDR W9, [X0 + 0xE0]
	0x03307C68 CBNZ W9, 0x3307C70
	0x03307C6C BL 0x1C16DFC
	0x03307C70 MOV X0, X24
	0x03307C74 MOV X1, X31
	0x03307C78 BL 0x338C698
	0x03307C7C ADRP X8, 0xE13000
	0x03307C80 LDR X8, [X8 + 0xD68]
	0x03307C84 MOV X24, X0
	0x03307C88 MOV X1, X31
	0x03307C8C LDR X8, [X8]
	0x03307C90 MOV X0, X8
	0x03307C94 BL 0x338C698
	0x03307C98 MOV X1, X0
	0x03307C9C MOV X0, X24
	0x03307CA0 MOV X2, X31
	0x03307CA4 BL 0x3395194
	0x03307CA8 LDR X8, [X21 + 0x38]
	0x03307CAC MOV W24, W0
	0x03307CB0 MOV X0, X23
	0x03307CB4 MOV X1, X20
	0x03307CB8 LDR X2, [X8 + 0x10]
	0x03307CBC BL 0x2218CF8
	0x03307CC0 MOV X23, X0
	0x03307CC4 TBZ X24, 0x0, 0x3307D04
	0x03307CC8 LDR X8, [X21 + 0x38]
	0x03307CCC MOV X0, X22
	0x03307CD0 MOV X1, X19
	0x03307CD4 LDR X2, [X8 + 0x10]
	0x03307CD8 BL 0x2218CF8
	0x03307CDC MOV X2, X0
	0x03307CE0 MOV X0, X23
	0x03307CE4 MOV W1, W20
	0x03307CE8 MOV W3, W19
	0x03307CEC LDP X20, X19, [X31 + 0x30]
	0x03307CF0 LDP X22, X21, [X31 + 0x20]
	0x03307CF4 LDP X24, X23, [X31 + 0x10]
	0x03307CF8 MOV X4, X31
	0x03307CFC LDR X30, [X31], #0x40
	0x03307D00 B 0x3390D40
	0x03307D04 LDR X8, [X21 + 0x38]
	0x03307D08 MOV X0, X22
	0x03307D0C MOV X1, X19
	0x03307D10 LDR X2, [X8 + 0x10]
	0x03307D14 BL 0x2218CF8
	0x03307D18 LDR X8, [X21 + 0x38]
	0x03307D1C MOV X2, X0
	0x03307D20 MOV X0, X23
	0x03307D24 MOV W1, W20
	0x03307D28 LDR X4, [X8 + 0x30]
	0x03307D2C MOV W3, W19
	0x03307D30 LDP X20, X19, [X31 + 0x30]
	0x03307D34 LDP X22, X21, [X31 + 0x20]
	0x03307D38 LDP X24, X23, [X31 + 0x10]
	0x03307D3C LDR X30, [X31], #0x40
	0x03307D40 B 0x22584B0
	0x03307D44 SUB X31, X31, 0xE0
	0x03307D48 STP X29, X30, [X31 + 0x80]
	0x03307D4C STP X28, X27, [X31 + 0x90]
	0x03307D50 STP X26, X25, [X31 + 0xA0]
	0x03307D54 STP X24, X23, [X31 + 0xB0]
	0x03307D58 STP X22, X21, [X31 + 0xC0]
	0x03307D5C STP X20, X19, [X31 + 0xD0]
	0x03307D60 ADRP X20, 0x10D5000
	0x03307D64 ADRP X29, 0xE20000
	0x03307D68 LDRB W8, [X20 + 0xB02]
	0x03307D6C LDR X29, [X29 + 0xA38]
	0x03307D70 MOV W23, W3
	0x03307D74 MOV X21, X2
	0x03307D78 MOV X22, X1
	0x03307D7C MOV X19, X0
	0x03307D80 TBNZ X8, 0x0, 0x3307DBC
	0x03307D84 ADRP X0, 0xDED000
	0x03307D88 LDR X0, [X0 + 0x9F0]
	0x03307D8C BL 0x1C16CF4
	0x03307D90 ADRP X0, 0xDEE000

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 16
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X24+40]
	014 Move X19, 0x10D6000
	015 Move X20, X0
	016 Move [X29-8], X8
	017 Move W8, [X19+2795]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {48}
	022 Move X0, 0xE18000
	023 Move X0, [X0+3416]
	024 Call 0x1C17CF4
	025 Move X0, 0xE18000
	026 Move X0, [X0+3424]
	027 Call 0x1C17CF4
	028 Move X0, 0xE21000
	029 Move X0, [X0+2520]
	030 Call 0x1C17CF4
	031 Move X0, 0xE21000
	032 Move X0, [X0+2528]
	033 Call 0x1C17CF4
	034 Move X0, 0xE1B000
	035 Move X0, [X0+2128]
	036 Call 0x1C17CF4
	037 Move X0, 0xE1C000
	038 Move X0, [X0+1256]
	039 Call 0x1C17CF4
	040 Move X0, 0xE1C000
	041 Move X0, [X0+720]
	042 Call 0x1C17CF4
	043 Move X0, 0xE20000
	044 Move X0, [X0+3944]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X19+2795], W8
	048 Compare X20, 0
	049 JumpIfEqual {324}
	050 Move W8, [X20+16]
	051 Compare W8, 0
	052 JumpIfEqual {114}
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, 0xE18000
	055 Move X8, [X8+3424]
	056 Move X0, [X8]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X8, 0xE18000
	062 Move X8, [X8+3416]
	063 Move X19, [X8]
	064 Move X0, [X19+32]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Move X8, [X0+192]
	072 Move X0, [X8+8]
	073 Move W8, [X0+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {79}
	078 Call 0x1C5D684
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, [X19+32]
	084 Move W8, [X0+309]
	085 Move TEMP, X8
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {90}
	089 Call 0x1C5D684
	090 Move X8, [X0+192]
	091 Move X0, [X8+8]
	092 Move W8, [X0+309]
	093 Move TEMP, X8
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {98}
	097 Call 0x1C5D684
	098 Move X8, [X0+184]
	099 Move X0, [X8]
	100 Compare X0, 0
	101 JumpIfEqual {324}
	102 Move X8, [X0]
	103 Move W1, [X20+16]
	104 Move X9, [X8+376]
	105 Move X2, [X8+384]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X8, 0xE1C000
	108 Move X8, [X8+720]
	109 Move X19, X0
	110 Move X1, [X8]
	111 Call Span`1<Char>.op_Implicit, X0
	112 Move X21, X0
	113 Move X22, X1
	114 Move X8, [X20]
	115 Move X0, X20
	116 Move X9, [X8+344]
	117 Move X1, [X8+352]
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X8, [X24+40]
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Subtract X21, X31, 512
	123 Add X31, X21, 0
	124 Move W2, 510
	125 Move X0, X21
	126 Move W1, W31
	127 Call 0x3EB2B10
	128 Move X19, X31
	129 Move W22, 255
	130 Move X25, 0x10D6000
	131 Move X23, 0xE1B000
	132 Move W8, [X25+939]
	133 Move X23, [X23+2128]
	134 Compare W8, 0
	135 JumpIfNotEqual {141}
	136 Move X0, 0xE14000
	137 Move X0, [X0+656]
	138 Call 0x1C17CF4
	139 Move W8, 1
	140 Move [X25+939], W8
	141 Move X0, X20
	142 Move X1, X31
	143 Call String.GetRawStringData, X0
	144 Move W1, [X20+16]
	145 Move X2, X21
	146 Move X3, X22
	147 Move X4, X31
	148 Call MemoryExtensions.ToUpperInvariant, X0, X1
	149 Move X20, [X23]
	150 Move W23, W0
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X0, X31
	153 Call ThrowHelper.ThrowArgumentOutOfRangeException
	154 Move X0, [X20+32]
	155 Move X20, 0xE21000
	156 Move W8, [X0+309]
	157 Move X20, [X20+2528]
	158 Move TEMP, X8
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfEqual {163}
	162 Call 0x1C5D684
	163 Move X20, [X20]
	164 Move W22, W23
	165 Move X8, [X20+56]
	166 Compare X8, 0
	167 JumpIfNotEqual {177}
	168 Move X0, 0xE16000
	169 Move X0, [X0+104]
	170 Call 0x1C17CF4
	171 Move X8, [X20+56]
	172 Compare X8, 0
	173 JumpIfNotEqual {177}
	174 Move X0, X20
	175 Call 0x1C5D6E0
	176 Move X8, [X20+56]
	177 Move X2, [X8+24]
	178 Move X0, X21
	179 Move X1, X22
	180 Call MemoryMarshal.GetReference, X0
	181 Move X8, 0x40000000
	182 Move X9, INVALID
	183 Add X8, X8, X22
	184 NotImplemented "Instruction MOVK not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X8, 0xE20000
	187 Move X8, [X8+3944]
	188 Move X23, 0xE21000
	189 Move W1, W22
	190 ShiftRight W1, 31
	191 And W1, W1, 0x3FFFFFFF
	192 Move X2, [X8]
	193 Move X23, [X23+2520]
	194 Call 0x25FC09C, X0
	195 Move X21, X0
	196 Move X0, [X23]
	197 Move X20, X1
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {202}
	201 Call 0x1C17DFC
	202 Move X22, 0x10D6000
	203 Move W8, [X22+2816]
	204 Compare W8, 0
	205 JumpIfNotEqual {211}
	206 Move X0, 0xE21000
	207 Move X0, [X0+2520]
	208 Call 0x1C17CF4
	209 Move W8, 1
	210 Move [X22+2816], W8
	211 Move X0, [X23]
	212 Move W8, [X0+224]
	213 Compare W8, 0
	214 JumpIfNotEqual {217}
	215 Call 0x1C17DFC
	216 Move X0, [X23]
	217 Move X8, [X0+184]
	218 Move X25, 0x10D6000
	219 Move W9, [X25+2817]
	220 Move X22, [X8]
	221 Compare W9, 0
	222 JumpIfNotEqual {234}
	223 Move X0, 0xE21000
	224 Move X0, [X0+2520]
	225 Call 0x1C17CF4
	226 Move X0, 0xE20000
	227 Move X0, [X0+3536]
	228 Call 0x1C17CF4
	229 Move X0, 0xE1C000
	230 Move X0, [X0+2752]
	231 Call 0x1C17CF4
	232 Move W8, 1
	233 Move [X25+2817], W8
	234 Move X8, 0xE20000
	235 Move X8, [X8+3536]
	236 Move X0, X21
	237 Move X1, X20
	238 Move X2, [X8]
	239 Call 0x2219CF0, X0
	240 Move X8, [X23]
	241 Move X21, X0
	242 Move W9, [X8+224]
	243 Compare W9, 0
	244 JumpIfNotEqual {247}
	245 Move X0, X8
	246 Call 0x1C17DFC
	247 Move X0, X21
	248 Move W1, W20
	249 Move X2, X22
	250 Move X3, X31
	251 Call Marvin.ComputeHash32, X0, X1, X2
	252 Move W20, W0
	253 Compare X19, 0
	254 JumpIfEqual {309}
	255 Move X8, 0xE18000
	256 Move X8, [X8+3424]
	257 Move X0, [X8]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move X8, 0xE18000
	263 Move X8, [X8+3416]
	264 Move X21, [X8]
	265 Move X0, [X21+32]
	266 Move W8, [X0+309]
	267 Move TEMP, X8
	268 And TEMP, TEMP, 1
	269 Compare TEMP, 1
	270 JumpIfEqual {272}
	271 Call 0x1C5D684
	272 Move X8, [X0+192]
	273 Move X0, [X8+8]
	274 Move W8, [X0+309]
	275 Move TEMP, X8
	276 And TEMP, TEMP, 1
	277 Compare TEMP, 1
	278 JumpIfEqual {280}
	279 Call 0x1C5D684
	280 Move W8, [X0+224]
	281 Compare W8, 0
	282 JumpIfNotEqual {284}
	283 Call 0x1C17DFC
	284 Move X0, [X21+32]
	285 Move W8, [X0+309]
	286 Move TEMP, X8
	287 And TEMP, TEMP, 1
	288 Compare TEMP, 1
	289 JumpIfEqual {291}
	290 Call 0x1C5D684
	291 Move X8, [X0+192]
	292 Move X0, [X8+8]
	293 Move W8, [X0+309]
	294 Move TEMP, X8
	295 And TEMP, TEMP, 1
	296 Compare TEMP, 1
	297 JumpIfEqual {299}
	298 Call 0x1C5D684
	299 Move X8, [X0+184]
	300 Move X0, [X8]
	301 Compare X0, 0
	302 JumpIfEqual {324}
	303 Move X8, [X0]
	304 Move X1, X19
	305 Move W2, W31
	306 Move X9, [X8+392]
	307 Move X3, [X8+400]
	308 NotImplemented "Instruction BLR not yet implemented."
	309 Move X8, [X24+40]
	310 NotImplemented "Instruction LDUR not yet implemented."
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move W0, W20
	313 Add X31, X29, 0
	314 Move X20, [X31+64]
	315 Move X19, [X31+72]
	316 Move X22, [X31+48]
	317 Move X21, [X31+56]
	318 Move X24, [X31+32]
	319 Move X23, [X31+40]
	320 Move X25, [X31+16]
	321 Move X29, [X31+80]
	322 Move X30, [X31+88]
	323 Return X0
	324 Call 0x1C17F20
	325 Call 0x1C17F30
	326 Move X1, X20
	327 Call 0x1C17DEC
	328 Call 0x3EB2B20

Method: System.Int32 GetHashCodeOfString(System.String source, System.Globalization.CompareOptions options)

Disassembly:
	0x03307D94 LDR X0, [X0 + 0x570]
	0x03307D98 BL 0x1C16CF4
	0x03307D9C ADRP X0, 0xE20000
	0x03307DA0 LDR X0, [X0 + 0xA38]
	0x03307DA4 BL 0x1C16CF4
	0x03307DA8 ADRP X0, 0xE20000
	0x03307DAC LDR X0, [X0 + 0xA40]
	0x03307DB0 BL 0x1C16CF4
	0x03307DB4 MOVZ W8, 0x1
	0x03307DB8 STRB W8, [X20 + 0xB02]
	0x03307DBC ADRP X20, 0xE20000
	0x03307DC0 ADRP X24, 0xDEE000
	0x03307DC4 LDR X20, [X20 + 0xA40]
	0x03307DC8 LDR X24, [X24 + 0x570]
	0x03307DCC MOVI V0.2D, 0x0
	0x03307DD0 MOV X0, X19
	0x03307DD4 MOV X1, X31
	0x03307DD8 STP X31, X31, [X31 + 0x50]
	0x03307DDC STP X31, X31, [X31 + 0x40]
	0x03307DE0 STP X31, X31, [X31 + 0x30]
	0x03307DE4 STP V0, V0, [X31 + 0x60]
	0x03307DE8 STR X31, [X31 + 0x28]
	0x03307DEC BL 0x33BDD8C
	0x03307DF0 LDR X0, [X29]
	0x03307DF4 LDR W8, [X0 + 0xE0]
	0x03307DF8 CBNZ W8, 0x3307E00
	0x03307DFC BL 0x1C16DFC
	0x03307E00 ADD X8, X31, 0x28
	0x03307E04 ADD X1, X31, 0x60
	0x03307E08 ADD X2, X31, 0x58
	0x03307E0C ADD X3, X31, 0x50
	0x03307E10 ADD X4, X31, 0x48
	0x03307E14 ADD X5, X31, 0x40
	0x03307E18 ADD X6, X31, 0x38
	0x03307E1C ADD X7, X31, 0x30
	0x03307E20 MOV X0, X22
	0x03307E24 STR X8, [X31]
	0x03307E28 BL 0x3308190
	0x03307E2C LDR X8, [X20]
	0x03307E30 STP X21, X8, [X19 + 0x10]
	0x03307E34 LDR X0, [X24]
	0x03307E38 LDR W8, [X0 + 0xE0]
	0x03307E3C CBNZ W8, 0x3307E48
	0x03307E40 BL 0x1C16DFC
	0x03307E44 LDR X0, [X24]
	0x03307E48 LDR X8, [X0 + 0xB8]
	0x03307E4C LDR X8, [X8]
	0x03307E50 STR X8, [X19 + 0x30]
	0x03307E54 ADRP X8, 0xDED000
	0x03307E58 LDR X8, [X8 + 0x9F0]
	0x03307E5C LDR X0, [X8]
	0x03307E60 LDR W8, [X0 + 0xE0]
	0x03307E64 CBNZ W8, 0x3307E6C
	0x03307E68 BL 0x1C16DFC
	0x03307E6C MOV X0, X31
	0x03307E70 BL 0x33616A4
	0x03307E74 LDR X21, [X31 + 0x58]
	0x03307E78 CBZ X21, 0x330818C
	0x03307E7C LDR X8, [X21 + 0x18]
	0x03307E80 STR W23, [X31 + 0x14]
	0x03307E84 LDP X23, X22, [X31 + 0x48]
	0x03307E88 LDR X24, [X31 + 0x40]
	0x03307E8C ADD X20, X19, 0x28
	0x03307E90 CMP W8, 0x1
	0x03307E94 ADD X9, X19, 0x20
	0x03307E98 STR X9, [X31 + 0x18]
	0x03307E9C B.LT 0x3307F98
	0x03307EA0 MOV X25, X0
	0x03307EA4 MOV W9, W31
	0x03307EA8 MOV X27, X29
	0x03307EAC CMP W9, W8
	0x03307EB0 B.CS 0x3308188
	0x03307EB4 ADRP X8, 0xDED000
	0x03307EB8 LDR X8, [X8 + 0x9F0]
	0x03307EBC SXTW X28, W9
	0x03307EC0 LDR X0, [X8]
	0x03307EC4 ADD X8, X21, X28, 0x3, LSL
	0x03307EC8 LDR X26, [X8 + 0x20]
	0x03307ECC LDR W9, [X0 + 0xE0]
	0x03307ED0 CBNZ W9, 0x3307ED8
	0x03307ED4 BL 0x1C16DFC
	0x03307ED8 MOV X0, X26
	0x03307EDC MOV X1, X25
	0x03307EE0 MOV X2, X31
	0x03307EE4 BL 0x33631B4
	0x03307EE8 TBZ X0, 0x0, 0x3307FA0
	0x03307EEC CBZ X22, 0x330818C
	0x03307EF0 LDR W8, [X22 + 0x18]
	0x03307EF4 CMP W28, W8
	0x03307EF8 B.CS 0x3308188
	0x03307EFC CBZ X23, 0x330818C
	0x03307F00 ADD X8, X22, X28
	0x03307F04 LDRB W8, [X8 + 0x20]
	0x03307F08 LDR W9, [X23 + 0x18]
	0x03307F0C CMP W8, W9
	0x03307F10 B.CS 0x3308188
	0x03307F14 ADD X9, X23, W8, 0x4, UXTW
	0x03307F18 LDRB W10, [X9 + 0x28]
	0x03307F1C MOV W9, W8
	0x03307F20 CBZ W10, 0x3307F44
	0x03307F24 LDR X0, [X29]
	0x03307F28 ADD X8, X23, X9, 0x4, LSL
	0x03307F2C LDRB W26, [X8 + 0x29]
	0x03307F30 LDR W9, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x10D6000
	008 Move W8, [X22+2796]
	009 Move W20, W2
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xE1B000
	017 Move X0, [X0+4048]
	018 Call 0x1C17CF4
	019 Move X0, 0xE21000
	020 Move X0, [X0+2352]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2796], W8
	024 Compare X19, 0
	025 JumpIfEqual {93}
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X22, 0xE21000
	028 Move X22, [X22+2352]
	029 Move X0, [X22]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X23, 0x10D6000
	035 Move W8, [X23+2814]
	036 Compare W8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, 0xE21000
	039 Move X0, [X0+2352]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X23+2814], W8
	043 Move X0, [X22]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X22]
	049 Move X8, [X0+184]
	050 Move W8, [X8]
	051 Compare W8, 0
	052 JumpIfEqual {68}
	053 Move TEMP, X20
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {77}
	057 Move X8, [X19]
	058 Move X0, X19
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X2, [X8+344]
	064 Move X1, [X8+352]
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 CallNoReturn X2
	068 Move X0, X21
	069 Move X1, X19
	070 Move W2, W20
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Move X23, [X31+56]
	077 Move X8, 0xE1B000
	078 Move X8, [X8+4048]
	079 Move X0, [X8]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X19
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X30, [X31+48]
	090 Move X23, [X31+56]
	091 Call CompareInfo.GetIgnoreCaseHash, X0
	092 Return X0
	093 Move X0, 0xDF2000
	094 Move X0, [X0+1320]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X19, X0
	098 Move X0, 0xDF8000
	099 Move X0, [X0+1408]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Move X2, X31
	104 Call ArgumentNullException..ctor, X0, X1
	105 Move X0, 0xDF5000
	106 Move X0, [X0+1400]
	107 Call 0x1C17D08
	108 Call 0x1C17F10
	109 Move X19, X0
	110 Move X0, 0xE1D000
	111 Move X0, [X0+2392]
	112 Call 0x1C17D08
	113 Move X20, X0
	114 Move X0, 0xE21000
	115 Move X0, [X0+2096]
	116 Call 0x1C17D08
	117 Move X2, X0
	118 Move X0, X19
	119 Move X1, X20
	120 Move X3, X31
	121 Call ArgumentException..ctor, X0, X1, X2
	122 Move X0, 0xE21000
	123 Move X0, [X0+2536]
	124 Call 0x1C17D08
	125 Move X1, X0
	126 Move X0, X19
	127 Call 0x1C17DEC

Method: System.Int32 GetHashCode(System.String source, System.Globalization.CompareOptions options)

Disassembly:
	0x03307F60 LDRB W26, [X9 + 0x29]
	0x03307F64 LDR W8, [X0 + 0xE0]
	0x03307F68 CBNZ W8, 0x3307F70
	0x03307F6C BL 0x1C16DFC
	0x03307F70 LDR X29, [X31 + 0x18]
	0x03307F74 MOV X0, X24
	0x03307F78 MOV W1, W26
	0x03307F7C BL 0x33086B8
	0x03307F80 STR X0, [X29]
	0x03307F84 LDR X8, [X21 + 0x18]
	0x03307F88 ADD W9, W28, 0x1
	0x03307F8C MOV X29, X27
	0x03307F90 CMP W9, W8
	0x03307F94 B.LT 0x3307EAC
	0x03307F98 CBNZ X8, 0x3308040
	0x03307F9C B 0x3307FA8
	0x03307FA0 LDR X8, [X21 + 0x18]
	0x03307FA4 CBNZ X8, 0x3308040
	0x03307FA8 CBZ X23, 0x330818C
	0x03307FAC LDR X8, [X23 + 0x18]
	0x03307FB0 CMP W8, 0x1
	0x03307FB4 B.LT 0x3308040
	0x03307FB8 MOV X26, X31
	0x03307FBC AND X8, X8, 0x0
	0x03307FC0 ADD X27, X23, 0x29
	0x03307FC4 CMP X26, W8, UXTW
	0x03307FC8 B.CS 0x3308188
	0x03307FCC LDURB W8, [X27 - 0x1]
	0x03307FD0 CBZ W8, 0x3307FF0
	0x03307FD4 LDR X0, [X29]
	0x03307FD8 LDRB W25, [X27]
	0x03307FDC LDR W8, [X0 + 0xE0]
	0x03307FE0 CBNZ W8, 0x3307FE8
	0x03307FE4 BL 0x1C16DFC
	0x03307FE8 MOV X28, X20
	0x03307FEC B 0x330801C
	0x03307FF0 LDUR X8, [X27 - 0x9]
	0x03307FF4 STR X8, [X19 + 0x30]
	0x03307FF8 LDR W8, [X23 + 0x18]
	0x03307FFC CMP X26, X8
	0x03308000 B.CS 0x3308188
	0x03308004 LDR X0, [X29]
	0x03308008 LDRB W25, [X27]
	0x0330800C LDR W8, [X0 + 0xE0]
	0x03308010 CBNZ W8, 0x3308018
	0x03308014 BL 0x1C16DFC
	0x03308018 LDR X28, [X31 + 0x18]
	0x0330801C MOV X0, X24
	0x03308020 MOV W1, W25
	0x03308024 BL 0x33086B8
	0x03308028 STR X0, [X28]
	0x0330802C LDR W8, [X23 + 0x18]
	0x03308030 ADD X26, X26, 0x1
	0x03308034 ADD X27, X27, 0x10
	0x03308038 CMP X26, W8, SXTW
	0x0330803C B.LT 0x3307FC4
	0x03308040 LDR X8, [X19 + 0x20]
	0x03308044 ADRP X26, 0xDED000
	0x03308048 ADD X25, X19, 0x30
	0x0330804C STR X8, [X19 + 0x18]
	0x03308050 LDR X26, [X26 + 0x570]
	0x03308054 LDR X0, [X26]
	0x03308058 LDR W8, [X0 + 0xE0]
	0x0330805C CBNZ W8, 0x3308064

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10D6000
	007 Move W8, [X22+2797]
	008 Move W20, W2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE1B000
	016 Move X0, [X0+4048]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2797], W8
	020 Compare X19, 0
	021 JumpIfEqual {61}
	022 Move W8, 0x10000000
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W8, 0x40000000
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X19]
	027 Move X0, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, [X8+344]
	033 Move X1, [X8+352]
	034 Move X30, [X31+48]
	035 CallNoReturn X2
	036 Move X8, 0xE1B000
	037 Move X8, [X8+4048]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Call CompareInfo.GetIgnoreCaseHash, X0
	050 Return X0
	051 Move X0, X21
	052 Move X1, X19
	053 Move W2, W20
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Call CompareInfo.GetHashCodeOfString, X0, X1, X2
	060 Return X0
	061 Move X0, 0xDF1000
	062 Move X0, [X0+1320]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0xDF7000
	067 Move X0, [X0+1408]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Move X2, X31
	072 Call ArgumentNullException..ctor, X0, X1
	073 Move X0, 0xE20000
	074 Move X0, [X0+2544]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Call 0x1C17DEC

Method: System.String ToString()

Disassembly:
	0x03308060 BL 0x1C16DFC
	0x03308064 LDR X24, [X25]
	0x03308068 MOVZ X8, 0x5A0B
	0x0330806C MOVK X8, 0x60F80000
	0x03308070 MOVZ X9, 0x1000
	0x03308074 MOVK X8, 0x26E
	0x03308078 MOVK X9, 0x84F60000
	0x0330807C MOVK X8, 0x97CD0000
	0x03308080 MOVK X9, 0x728
	0x03308084 MADD X8, X24, X8, X9
	0x03308088 MOVZ X9, 0xF611
	0x0330808C LDR W20, [X31 + 0x14]
	0x03308090 MOVK X9, 0x28840000
	0x03308094 EXTR X8, X8, X8, 0x9
	0x03308098 MOVK X9, 0x7
	0x0330809C CMP X8, X9
	0x033080A0 B.CC 0x33080F4
	0x033080A4 LDR X0, [X26]
	0x033080A8 LDR W8, [X0 + 0xE0]
	0x033080AC CBNZ W8, 0x33080B4
	0x033080B0 BL 0x1C16DFC
	0x033080B4 MOV X0, X25
	0x033080B8 MOV X1, X31
	0x033080BC BL 0x33940AC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10D5000
	006 Move X20, 0xE20000
	007 Move W8, [X21+2798]
	008 Move X20, [X20+2552]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE20000
	015 Move X0, [X0+2552]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2798], W8
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X9, [X8+392]
	022 Move X1, [X8+400]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X8, [X20]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X0
	028 Move X2, X31
	029 Move X0, X8
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call String.Concat, X0, X1
	033 Return X0

Method: System.Boolean get_UseManagedCollation()

Disassembly:
	0x033080C0 MOV W24, W0
	0x033080C4 MOV X0, X25
	0x033080C8 MOV X1, X31
	0x033080CC BL 0x339413C
	0x033080D0 MOV W2, W0
	0x033080D4 ADD X0, X31, 0x20
	0x033080D8 MOV W1, W24
	0x033080DC MOV W3, W31
	0x033080E0 MOV X4, X31
	0x033080E4 STR X31, [X31 + 0x20]
	0x033080E8 BL 0x3393ED0
	0x033080EC LDR X24, [X31 + 0x20]
	0x033080F0 STR X24, [X25]
	0x033080F4 TBNZ X20, 0x0, 0x330813C
	0x033080F8 LDR X0, [X29]
	0x033080FC LDP X25, X26, [X31 + 0x30]
	0x03308100 LDR X20, [X31 + 0x28]
	0x03308104 ADD X27, X19, 0x40
	0x03308108 LDR W8, [X0 + 0xE0]
	0x0330810C CBNZ W8, 0x3308114
	0x03308110 BL 0x1C16DFC
	0x03308114 MOV X0, X27
	0x03308118 MOV X1, X24
	0x0330811C MOV X2, X21
	0x03308120 MOV X3, X22
	0x03308124 MOV X4, X23
	0x03308128 MOV X5, X26
	0x0330812C MOV X6, X25
	0x03308130 MOV X7, X20
	0x03308134 BL 0x330871C
	0x03308138 LDR X24, [X19 + 0x30]
	0x0330813C LDR X0, [X29]
	0x03308140 LDR X21, [X19 + 0x10]
	0x03308144 LDR X20, [X19 + 0x40]
	0x03308148 LDR W8, [X0 + 0xE0]
	0x0330814C CBNZ W8, 0x3308154
	0x03308150 BL 0x1C16DFC
	0x03308154 ADD X3, X19, 0x38
	0x03308158 MOV X0, X21
	0x0330815C MOV X1, X24
	0x03308160 MOV X2, X20
	0x03308164 BL 0x3308864
	0x03308168 LDP X20, X19, [X31 + 0xD0]
	0x0330816C LDP X22, X21, [X31 + 0xC0]
	0x03308170 LDP X24, X23, [X31 + 0xB0]
	0x03308174 LDP X26, X25, [X31 + 0xA0]
	0x03308178 LDP X28, X27, [X31 + 0x90]
	0x0330817C LDP X29, X30, [X31 + 0x80]
	0x03308180 ADD X31, X31, 0xE0
	0x03308184 RET
	0x03308188 BL 0x1C16F28
	0x0330818C BL 0x1C16F20
	0x03308190 SUB X31, X31, 0xA0
	0x03308194 STP X29, X30, [X31 + 0x40]
	0x03308198 STP X28, X27, [X31 + 0x50]
	0x0330819C STP X26, X25, [X31 + 0x60]
	0x033081A0 STP X24, X23, [X31 + 0x70]
	0x033081A4 STP X22, X21, [X31 + 0x80]
	0x033081A8 STP X20, X19, [X31 + 0x90]
	0x033081AC STR X5, [X31 + 0x18]
	0x033081B0 ADRP X21, 0x10D4000
	0x033081B4 ADRP X23, 0xDED000
	0x033081B8 LDRB W8, [X21 + 0xB20]
	0x033081BC LDR X22, [X31 + 0xA0]
	0x033081C0 LDR X23, [X23 + 0x278]
	0x033081C4 MOV X26, X7
	0x033081C8 MOV X29, X6
	0x033081CC MOV X24, X4
	0x033081D0 MOV X25, X3
	0x033081D4 MOV X27, X2
	0x033081D8 MOV X20, X1
	0x033081DC MOV X19, X0
	0x033081E0 TBNZ X8, 0x0, 0x3308234
	0x033081E4 ADRP X0, 0xDED000
	0x033081E8 LDR X0, [X0 + 0x9B8]
	0x033081EC BL 0x1C16CF4
	0x033081F0 ADRP X0, 0xDEB000
	0x033081F4 LDR X0, [X0 + 0x618]
	0x033081F8 BL 0x1C16CF4
	0x033081FC ADRP X0, 0xE1D000
	0x03308200 LDR X0, [X0 + 0x70]
	0x03308204 BL 0x1C16CF4
	0x03308208 ADRP X0, 0xDED000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10D5000
	006 Move X19, 0xE1A000
	007 Move W8, [X20+2799]
	008 Move X19, [X19+4048]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xE1A000
	014 Move X0, [X0+4048]
	015 Call 0x1C17CF4
	016 Move X0, 0xE1A000
	017 Move X0, [X0+2576]
	018 Call 0x1C17CF4
	019 Move X0, 0xE20000
	020 Move X0, [X0+2560]
	021 Call 0x1C17CF4
	022 Move X0, 0xE20000
	023 Move X0, [X0+2568]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2799], W8
	027 Move X0, [X19]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X19]
	033 Move X8, [X0+184]
	034 Move W8, [X8+17]
	035 Compare W8, 0
	036 JumpIfNotEqual {88}
	037 Move X8, 0xE20000
	038 Move X8, [X8+2560]
	039 Move X1, X31
	040 Move X0, [X8]
	041 Call Environment.internalGetEnvironmentVariable, X0
	042 Move X8, 0xE20000
	043 Move X8, [X8+2568]
	044 Move X2, X31
	045 Move X1, [X8]
	046 Call String.op_Inequality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {77}
	051 Move X20, 0xE1A000
	052 Move X20, [X20+2576]
	053 Move X0, [X20]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X21, 0x10D5000
	059 Move W8, [X21+756]
	060 Compare W8, 0
	061 JumpIfNotEqual {67}
	062 Move X0, 0xE1A000
	063 Move X0, [X0+2576]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X21+756], W8
	067 Move X0, [X20]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X20]
	073 Move X8, [X0+184]
	074 Move W8, [X8+144]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CSET not yet implemented."
	077 Move W20, W31
	078 Move X0, [X19]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X19]
	084 Move X8, [X0+184]
	085 Move W9, 1
	086 Move [X8+16], W20
	087 Move [X8+17], W9
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {93}
	091 Call 0x1C17DFC
	092 Move X0, [X19]
	093 Move X8, [X0+184]
	094 Move X20, [X31+16]
	095 Move X19, [X31+24]
	096 Move W0, [X8+16]
	097 Move X30, [X31+32]
	098 Move X21, [X31+40]
	099 Return X0

Method: System.Globalization.ISimpleCollator GetCollator()

Disassembly:
	0x0330820C LDR X0, [X0 + 0x278]
	0x03308210 BL 0x1C16CF4
	0x03308214 ADRP X0, 0xE1F000
	0x03308218 LDR X0, [X0 + 0xA48]
	0x0330821C BL 0x1C16CF4
	0x03308220 ADRP X0, 0xE1F000
	0x03308224 LDR X0, [X0 + 0xA38]
	0x03308228 BL 0x1C16CF4
	0x0330822C MOVZ W8, 0x1
	0x03308230 STRB W8, [X21 + 0xB20]
	0x03308234 STR X31, [X27]
	0x03308238 STR X31, [X25]
	0x0330823C STR X31, [X24]
	0x03308240 LDR X8, [X23]
	0x03308244 ADRP X23, 0xE1D000
	0x03308248 ADRP X21, 0xE1F000
	0x0330824C ADRP X28, 0xDED000
	0x03308250 LDR X8, [X8 + 0xB8]
	0x03308254 LDR X23, [X23 + 0x70]
	0x03308258 MOVI V0.2D, 0x0
	0x0330825C ADD X0, X31, 0x20
	0x03308260 LDR X8, [X8]
	0x03308264 LDR X21, [X21 + 0xA48]
	0x03308268 LDR X28, [X28 + 0x9B8]
	0x0330826C LDR X9, [X31 + 0x18]
	0x03308270 MOV X1, X19
	0x03308274 MOV W2, W31
	0x03308278 STP X29, X26, [X31 + 0x8]
	0x0330827C STR X8, [X9]
	0x03308280 STR X31, [X29]
	0x03308284 STR X31, [X26]
	0x03308288 STR X22, [X31]
	0x0330828C STR X31, [X22]
	0x03308290 STP V0, V0, [X31 + 0x20]
	0x03308294 BL 0x330D0F8
	0x03308298 LDP V0, V1, [X31 + 0x20]
	0x0330829C STP V0, V1, [X20]
	0x033082A0 LDRB W8, [X20 + 0x4]
	0x033082A4 CBZ W8, 0x3308304
	0x033082A8 LDP W9, W8, [X20 + 0x10]
	0x033082AC LDP W12, W13, [X20 + 0x18]
	0x033082B0 LDP W11, W10, [X20 + 0x8]
	0x033082B4 MOVZ W14, 0x6
	0x033082B8 ADD W8, W8, W8, 0x2, LSL
	0x033082BC MADD W8, W12, W14, W8
	0x033082C0 ADD W8, W8, W9, 0x3, LSL
	0x033082C4 ADD W8, W8, W10
	0x033082C8 ADD W8, W8, W11
	0x033082CC MOV X22, X21
	0x033082D0 ADD W21, W8, W13
	0x033082D4 ADD W2, W21, 0x2C
	0x033082D8 MOVI V0.2D, 0x0
	0x033082DC ADD X0, X31, 0x20
	0x033082E0 MOV X1, X19
	0x033082E4 STP V0, V0, [X31 + 0x20]
	0x033082E8 BL 0x330D0F8
	0x033082EC LDP V1, V0, [X31 + 0x20]
	0x033082F0 ADD W26, W21, 0x58
	0x033082F4 MOV X21, X22
	0x033082F8 MOVZ W29, 0x8
	0x033082FC STP V1, V0, [X20]
	0x03308300 B 0x330830C
	0x03308304 MOVZ W26, 0x2C
	0x03308308 MOVZ W29, 0x4
	0x0330830C LDR W1, [X20 + 0x14]
	0x03308310 LDR X0, [X23]
	0x03308314 BL 0x1C16D6C
	0x03308318 STR X0, [X27]
	0x0330831C ADRP X8, 0xDEB000
	0x03308320 LDR W1, [X20 + 0x14]
	0x03308324 LDR X8, [X8 + 0x618]
	0x03308328 LDR X0, [X8]
	0x0330832C BL 0x1C16D6C
	0x03308330 STR X0, [X25]
	0x03308334 LDR W1, [X20 + 0x18]
	0x03308338 LDR X0, [X21]
	0x0330833C BL 0x1C16D6C
	0x03308340 STR X0, [X24]
	0x03308344 ADRP X8, 0xDED000
	0x03308348 LDR X8, [X8 + 0x278]
	0x0330834C LDR X9, [X31 + 0x18]
	0x03308350 LDR X8, [X8]
	0x03308354 LDR X8, [X8 + 0xB8]
	0x03308358 LDR X8, [X8]
	0x0330835C STR X8, [X9]
	0x03308360 LDR W1, [X20 + 0x18]
	0x03308364 LDR X0, [X28]
	0x03308368 BL 0x1C16D6C
	0x0330836C LDR X8, [X31 + 0x8]
	0x03308370 STR X0, [X8]
	0x03308374 LDR W1, [X20 + 0x18]
	0x03308378 LDR X0, [X28]
	0x0330837C BL 0x1C16D6C
	0x03308380 LDR X8, [X31 + 0x10]
	0x03308384 STR X0, [X8]
	0x03308388 LDR W8, [X20 + 0x14]
	0x0330838C CBZ W8, 0x3308460
	0x03308390 ADRP X23, 0xE1F000
	0x03308394 LDR X23, [X23 + 0xA38]
	0x03308398 MOV X22, X31
	0x0330839C MOVZ W21, 0x1
	0x033083A0 LDR X0, [X23]
	0x033083A4 LDRB W28, [X20 + 0x4]
	0x033083A8 LDR W8, [X0 + 0xE0]
	0x033083AC CBNZ W8, 0x33083B4
	0x033083B0 BL 0x1C16DFC
	0x033083B4 MOV X0, X19
	0x033083B8 MOV W1, W26
	0x033083BC MOV W2, W28
	0x033083C0 BL 0x330CF78
	0x033083C4 LDR X28, [X27]
	0x033083C8 BL 0x330D000
	0x033083CC CBZ X28, 0x33086B4
	0x033083D0 LDR W8, [X28 + 0x18]
	0x033083D4 SUB W9, W21, 0x1
	0x033083D8 CMP W9, W8
	0x033083DC B.CS 0x33086B0
	0x033083E0 ADD X8, X28, X22, 0x3, LSL
	0x033083E4 STR X0, [X8 + 0x20]
	0x033083E8 LDR W8, [X20 + 0x14]
	0x033083EC SXTW X22, W21
	0x033083F0 ADD W26, W26, W29
	0x033083F4 ADD W21, W21, 0x1
	0x033083F8 CMP X22, X8
	0x033083FC B.LT 0x33083A0
	0x03308400 CBZ W8, 0x3308460
	0x03308404 CBZ X19, 0x33086B4
	0x03308408 MOV X9, X31
	0x0330840C LDR W10, [X19 + 0x18]
	0x03308410 MOV X8, X9
	0x03308414 ADD W9, W26, W8
	0x03308418 CMP W9, W10
	0x0330841C B.CS 0x33086B0
	0x03308420 LDR X10, [X25]
	0x03308424 CBZ X10, 0x33086B4
	0x03308428 LDR W11, [X10 + 0x18]
	0x0330842C CMP W8, W11
	0x03308430 B.CS 0x33086B0
	0x03308434 ADD X9, X19, W9, SXTW
	0x03308438 LDRB W9, [X9 + 0x20]
	0x0330843C ADD X10, X10, X8
	0x03308440 STRB W9, [X10 + 0x20]
	0x03308444 LDR W10, [X20 + 0x14]
	0x03308448 ADD W9, W8, 0x1
	0x0330844C SXTW X9, W9
	0x03308450 CMP X9, X10
	0x03308454 B.LT 0x330840C
	0x03308458 ADD W8, W8, W26
	0x0330845C ADD W26, W8, 0x1
	0x03308460 LDR W8, [X20 + 0x18]
	0x03308464 CBZ W8, 0x33084C0
	0x03308468 MOV X22, X31
	0x0330846C MOVZ W21, 0x1
	0x03308470 LDR X23, [X24]
	0x03308474 ADD X0, X31, 0x20
	0x03308478 MOV X1, X19
	0x0330847C MOV W2, W26
	0x03308480 STP X31, X31, [X31 + 0x20]
	0x03308484 BL 0x330D2A4
	0x03308488 CBZ X23, 0x33086B4
	0x0330848C LDR W8, [X23 + 0x18]
	0x03308490 SUB W9, W21, 0x1
	0x03308494 CMP W9, W8
	0x03308498 B.CS 0x33086B0
	0x0330849C LDR V0, [X31 + 0x2]
	0x033084A0 ADD X8, X23, X22, 0x4, LSL
	0x033084A4 SXTW X22, W21
	0x033084A8 ADD W26, W26, 0x6
	0x033084AC STR V0, [X8 + 0x2]
	0x033084B0 LDR W8, [X20 + 0x18]
	0x033084B4 ADD W21, W21, 0x1
	0x033084B8 CMP X22, X8
	0x033084BC B.LT 0x3308470
	0x033084C0 MOV X0, X31
	0x033084C4 BL 0x3241948
	0x033084C8 CBZ X0, 0x33086B4
	0x033084CC LDR X8, [X0]
	0x033084D0 LDR W3, [X20 + 0x1C]
	0x033084D4 MOV X1, X19
	0x033084D8 MOV W2, W26
	0x033084DC LDR X9, [X8 + 0x388]
	0x033084E0 LDR X4, [X8 + 0x390]
	0x033084E4 MOV X24, X0
	0x033084E8 BLR X9
	0x033084EC LDR X8, [X31 + 0x18]
	0x033084F0 ADD W11, W29, 0x4
	0x033084F4 STR X0, [X8]
	0x033084F8 LDR W8, [X20 + 0x1C]
	0x033084FC LDP W10, W9, [X20 + 0xC]
	0x03308500 ADD W8, W8, W26
	0x03308504 MADD W8, W9, W11, W8
	0x03308508 CBZ W10, 0x3308598
	0x0330850C LDR W11, [X20 + 0x18]
	0x03308510 LDP X21, X1, [X31]
	0x03308514 LDR X0, [X31 + 0x10]
	0x03308518 ADD X15, X19, W8, SXTW
	0x0330851C MOV X9, X31
	0x03308520 MOV X12, X31
	0x03308524 SXTW X13, W8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x10D5000
	009 Move W8, [X19+2800]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {41}
	015 Move X0, 0xE1A000
	016 Move X0, [X0+4048]
	017 Call 0x1C17CF4
	018 Move X0, 0xDEE000
	019 Move X0, [X0+3144]
	020 Call 0x1C17CF4
	021 Move X0, 0xE20000
	022 Move X0, [X0+2576]
	023 Call 0x1C17CF4
	024 Move X0, 0xE20000
	025 Move X0, [X0+2584]
	026 Call 0x1C17CF4
	027 Move X0, 0xE20000
	028 Move X0, [X0+2592]
	029 Call 0x1C17CF4
	030 Move X0, 0xE20000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0xE1A000
	034 Move X0, [X0+3032]
	035 Call 0x1C17CF4
	036 Move X0, 0xDF9000
	037 Move X0, [X0+752]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X19+2800], W8
	041 Move X19, X20
	042 Add X19, X19, 48
	043 Move X8, [X19]
	044 Compare X8, 0
	045 JumpIfNotEqual {186}
	046 Move X24, 0xE1A000
	047 Move X24, [X24+4048]
	048 Move X0, [X24]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X24]
	054 Move X8, [X0+184]
	055 Move X8, [X8+8]
	056 Compare X8, 0
	057 JumpIfNotEqual {103}
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X21, 0xDF9000
	063 Move X21, [X21+752]
	064 Move X0, [X21]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X22, 0x10D2000
	070 Move W8, [X22+1443]
	071 Compare W8, 0
	072 JumpIfNotEqual {78}
	073 Move X0, 0xDF9000
	074 Move X0, [X0+752]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X22+1443], W8
	078 Move X0, [X21]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X21]
	084 Move X9, 0xE20000
	085 Move X8, [X0+184]
	086 Move X9, [X9+2600]
	087 Move X21, [X8+16]
	088 Move X0, [X9]
	089 Call 0x1C17F10
	090 Move X8, 0xE20000
	091 Move X8, [X8+2584]
	092 Move X1, X21
	093 Move X22, X0
	094 Move X2, [X8]
	095 Call Dictionary`2<Object, Object>..ctor, X0, X1
	096 Move X8, [X24]
	097 Move X1, X22
	098 Move X2, X31
	099 Move X8, [X8+184]
	100 Add X0, X8, 8
	101 Call 0x1C25138
	102 Move X0, [X24]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {108}
	106 Call 0x1C17DFC
	107 Move X0, [X24]
	108 Move X8, [X0+184]
	109 Move X21, [X8+8]
	110 Move [X31+12], W31
	111 Add X1, X31, 12
	112 Move X0, X21
	113 Move X2, X31
	114 Call Monitor.Enter, X0, X1
	115 Move X0, [X24]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {121}
	119 Call 0x1C17DFC
	120 Move X0, [X24]
	121 Move X8, [X0+184]
	122 Move X0, [X8+8]
	123 Compare X0, 0
	124 JumpIfEqual {197}
	125 Move X8, 0xE20000
	126 Move X1, [X20+24]
	127 Move X8, [X8+2576]
	128 Move X3, [X8]
	129 Move X2, X19
	130 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {172}
	135 Move X8, 0xDEE000
	136 Move X8, [X8+3144]
	137 Move X22, [X20+16]
	138 Move X0, [X8]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X0, X22
	144 Move X1, X31
	145 Call CultureInfo.GetCultureInfo, X0
	146 Move X8, 0xE1A000
	147 Move X8, [X8+3032]
	148 Move X22, X0
	149 Move X0, [X8]
	150 Call 0x1C17F10
	151 Move X23, X0
	152 Move X1, X22
	153 Move X2, X31
	154 Call SimpleCollator..ctor, X0, X1
	155 Move [X19], X23
	156 Move X0, [X24]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {162}
	160 Call 0x1C17DFC
	161 Move X0, [X24]
	162 Move X8, [X0+184]
	163 Move X0, [X8+8]
	164 Compare X0, 0
	165 JumpIfEqual {198}
	166 Move X8, 0xE20000
	167 Move X2, [X20+48]
	168 Move X1, [X20+24]
	169 Move X8, [X8+2592]
	170 Move X3, [X8]
	171 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	172 Move X20, X31
	173 Move W22, 5
	174 Move W8, [X31+12]
	175 Compare W8, 0
	176 JumpIfEqual {180}
	177 Move X0, X21
	178 Move X1, X31
	179 Call Monitor.Exit, X0
	180 Compare X20, 0
	181 JumpIfNotEqual {195}
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Compare W22, 0
	184 JumpIfNotEqual {186}
	185 Move X8, [X19]
	186 Move X20, [X31+48]
	187 Move X19, [X31+56]
	188 Move X22, [X31+32]
	189 Move X21, [X31+40]
	190 Move X24, [X31+16]
	191 Move X23, [X31+24]
	192 Move X0, X8
	193 Move X30, [X31+64]
	194 Return X0
	195 Move X0, X20
	196 Call 0x1C17F18
	197 Call 0x1C17F20
	198 Call 0x1C17F20
	199 Move X22, X0
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X0, X22
	202 Call 0x3EB2AD0
	203 Move X20, [X0]
	204 Call 0x3EB2AE0
	205 Move W22, W31
	206 Move X20, X31
	207 Move X22, X0
	208 Move W8, [X31+12]
	209 Compare W8, 0
	210 JumpIfEqual {214}
	211 Move X0, X21
	212 Move X1, X31
	213 Call Monitor.Exit, X0
	214 Compare X20, 0
	215 JumpIfNotEqual {218}
	216 Move X0, X22
	217 Call 0x1D2D690
	218 Move X0, X20
	219 Call 0x1C17F18
	220 Call 0x1991590

Method: System.Globalization.SortKey CreateSortKeyCore(System.String source, System.Globalization.CompareOptions options)

Disassembly:
	0x03308528 MOV W14, W8
	0x0330852C ADD X15, X15, 0x20
	0x03308530 CMP X12, X11
	0x03308534 B.GE 0x3308590
	0x03308538 CBZ X19, 0x33086B4
	0x0330853C LDR X16, [X19 + 0x18]
	0x03308540 ADD X17, X13, X9
	0x03308544 CMP X17, W16, SXTW
	0x03308548 B.GE 0x3308590
	0x0330854C ADD X17, X14, X9
	0x03308550 CMP W17, W16
	0x03308554 B.CS 0x33086B0
	0x03308558 LDR X16, [X1]
	0x0330855C CBZ X16, 0x33086B4
	0x03308560 LDR W17, [X16 + 0x18]
	0x03308564 CMP W9, W17
	0x03308568 B.CS 0x33086B0
	0x0330856C LDRB W17, [X15, X9, LSL]
	0x03308570 ADD X9, X9, 0x1
	0x03308574 ADD X16, X16, X12
	0x03308578 SXTW X12, W9
	0x0330857C CMP W17, 0x0
	0x03308580 CSET W17, NE
	0x03308584 CMP X12, X10
	0x03308588 STRB W17, [X16 + 0x20]
	0x0330858C B.LT 0x3308530
	0x03308590 ADD W8, W8, W9
	0x03308594 B 0x33085A0
	0x03308598 LDR X21, [X31]
	0x0330859C LDR X0, [X31 + 0x10]
	0x033085A0 LDR W10, [X20 + 0x8]
	0x033085A4 CBZ W10, 0x330862C
	0x033085A8 LDR W11, [X20 + 0x18]
	0x033085AC MOV W13, W8
	0x033085B0 ADD X15, X19, W8, SXTW
	0x033085B4 MOV X9, X31
	0x033085B8 MOV X12, X31
	0x033085BC SXTW X13, W13
	0x033085C0 MOV W14, W8
	0x033085C4 ADD X15, X15, 0x20
	0x033085C8 CMP X12, X11
	0x033085CC B.GE 0x3308628
	0x033085D0 CBZ X19, 0x33086B4
	0x033085D4 LDR X16, [X19 + 0x18]
	0x033085D8 ADD X17, X13, X9
	0x033085DC CMP X17, W16, SXTW
	0x033085E0 B.GE 0x3308628
	0x033085E4 ADD X17, X14, X9
	0x033085E8 CMP W17, W16
	0x033085EC B.CS 0x33086B0
	0x033085F0 LDR X16, [X0]
	0x033085F4 CBZ X16, 0x33086B4
	0x033085F8 LDR W17, [X16 + 0x18]
	0x033085FC CMP W9, W17
	0x03308600 B.CS 0x33086B0
	0x03308604 LDRB W17, [X15, X9, LSL]
	0x03308608 ADD X9, X9, 0x1
	0x0330860C ADD X16, X16, X12
	0x03308610 SXTW X12, W9
	0x03308614 CMP W17, 0x0
	0x03308618 CSET W17, NE
	0x0330861C CMP X12, X10
	0x03308620 STRB W17, [X16 + 0x20]
	0x03308624 B.LT 0x33085C8
	0x03308628 ADD W8, W8, W9
	0x0330862C LDRB W9, [X20 + 0x4]
	0x03308630 CBZ W9, 0x3308690
	0x03308634 CBZ X19, 0x33086B4
	0x03308638 LDR X9, [X19 + 0x18]
	0x0330863C CMP W8, W9
	0x03308640 B.CS 0x33086B0
	0x03308644 ADD X10, X19, W8, SXTW
	0x03308648 LDRB W10, [X10 + 0x20]
	0x0330864C CMP W10, 0xA
	0x03308650 B.NE 0x3308690
	0x03308654 SUB W10, W9, 0x1
	0x03308658 ADD X10, X19, W10, SXTW
	0x0330865C LDRB W10, [X10 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x10D5000
	008 Move X23, 0xE1A000
	009 Move W8, [X22+2801]
	010 Move X23, [X23+4048]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xE1A000
	019 Move X0, [X0+4048]
	020 Call 0x1C17CF4
	021 Move X0, 0xE20000
	022 Move X0, [X0+2464]
	023 Call 0x1C17CF4
	024 Move X0, 0xE1A000
	025 Move X0, [X0+3096]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2801], W8
	029 Move X0, [X23]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Call CompareInfo.get_UseManagedCollation
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {60}
	039 Move X0, X21
	040 Call CompareInfo.GetCollator, X0
	041 Compare X0, 0
	042 JumpIfEqual {94}
	043 Move X10, 0xE20000
	044 Move X8, [X0]
	045 Move X10, [X10+2464]
	046 Move X21, X0
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move X0, X21
	058 Move W2, W31
	059 Call 0x1C5D788
	060 Move X8, 0xE1A000
	061 Move W21, [X21+40]
	062 Move X8, [X8+3096]
	063 Move X0, [X8]
	064 Call 0x1C17F10
	065 Move W1, W21
	066 Move X2, X20
	067 Move W3, W19
	068 Move X4, X31
	069 Move X22, X0
	070 Call SortKey..ctor, X0, X1, X2, X3
	071 Move X0, X22
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Move X23, [X31+56]
	078 Return X0
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X4, [X0]
	083 Move X3, [X0+8]
	084 Move X0, X21
	085 Move X1, X20
	086 Move W2, W19
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 Move X30, [X31+48]
	092 Move X23, [X31+56]
	093 CallNoReturn X4
	094 Call 0x1C17F20

Method: System.Int32 internal_index_switch(System.String s1, System.Int32 sindex, System.Int32 count, System.String s2, System.Globalization.CompareOptions opt, System.Boolean first)

Disassembly:
	0x03308660 CMP W10, 0xA
	0x03308664 B.NE 0x3308690
	0x03308668 LDR X10, [X24]
	0x0330866C ADD W2, W8, 0x1
	0x03308670 SUB W8, W9, W8
	0x03308674 SUB W3, W8, 0x2
	0x03308678 LDR X11, [X10 + 0x388]
	0x0330867C LDR X4, [X10 + 0x390]
	0x03308680 MOV X0, X24
	0x03308684 MOV X1, X19
	0x03308688 BLR X11
	0x0330868C STR X0, [X21]
	0x03308690 LDP X20, X19, [X31 + 0x90]
	0x03308694 LDP X22, X21, [X31 + 0x80]
	0x03308698 LDP X24, X23, [X31 + 0x70]
	0x0330869C LDP X26, X25, [X31 + 0x60]
	0x033086A0 LDP X28, X27, [X31 + 0x50]
	0x033086A4 LDP X29, X30, [X31 + 0x40]
	0x033086A8 ADD X31, X31, 0xA0
	0x033086AC RET
	0x033086B0 BL 0x1C16F28
	0x033086B4 BL 0x1C16F20
	0x033086B8 STR X30, [X31 - 0x20]!
	0x033086BC STP X20, X19, [X31 + 0x10]
	0x033086C0 CBZ X0, 0x3308718
	0x033086C4 MOV W19, W1
	0x033086C8 MOV W1, W31
	0x033086CC MOV W2, W19
	0x033086D0 MOV X3, X31
	0x033086D4 MOV X20, X0
	0x033086D8 BL 0x322BDA8
	0x033086DC CMP W0, 0x0
	0x033086E0 B.LE 0x3308700
	0x033086E4 SUB W2, W0, W19
	0x033086E8 MOV X0, X20
	0x033086EC MOV W1, W19
	0x033086F0 LDP X20, X19, [X31 + 0x10]
	0x033086F4 MOV X3, X31
	0x033086F8 LDR X30, [X31], #0x20
	0x033086FC B 0x3228DE4
	0x03308700 MOV X0, X20
	0x03308704 MOV W1, W19
	0x03308708 LDP X20, X19, [X31 + 0x10]
	0x0330870C MOV X2, X31
	0x03308710 LDR X30, [X31], #0x20
	0x03308714 B 0x322B484
	0x03308718 BL 0x1C16F20
	0x0330871C SUB X31, X31, 0x60
	0x03308720 STR X30, [X31 + 0x10]
	0x03308724 STP X26, X25, [X31 + 0x20]
	0x03308728 STP X24, X23, [X31 + 0x30]
	0x0330872C STP X22, X21, [X31 + 0x40]
	0x03308730 STP X20, X19, [X31 + 0x50]
	0x03308734 ADRP X25, 0x10D4000
	0x03308738 LDRB W8, [X25 + 0xB10]
	0x0330873C MOV X20, X7
	0x03308740 MOV X21, X4
	0x03308744 MOV X22, X3
	0x03308748 MOV X23, X2
	0x0330874C MOV X24, X1
	0x03308750 MOV X19, X0
	0x03308754 TBNZ X8, 0x0, 0x3308790
	0x03308758 ADRP X0, 0xE1F000
	0x0330875C LDR X0, [X0 + 0xA50]
	0x03308760 BL 0x1C16CF4
	0x03308764 ADRP X0, 0xE1F000
	0x03308768 LDR X0, [X0 + 0xA58]
	0x0330876C BL 0x1C16CF4
	0x03308770 ADRP X0, 0xE1F000
	0x03308774 LDR X0, [X0 + 0xA60]
	0x03308778 BL 0x1C16CF4
	0x0330877C ADRP X0, 0xE1F000
	0x03308780 LDR X0, [X0 + 0xA38]
	0x03308784 BL 0x1C16CF4
	0x03308788 MOVZ W8, 0x1
	0x0330878C STRB W8, [X25 + 0xB10]
	0x03308790 STR X31, [X19]
	0x03308794 CBZ X23, 0x3308860
	0x03308798 LDR X8, [X23 + 0x18]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x10D5000
	011 Move W8, [X26+2802]
	012 Move W23, W6
	013 Move W24, W5
	014 Move X20, X4
	015 Move W19, W3
	016 Move W21, W2
	017 Move X22, X1
	018 Move X25, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xE1A000
	024 Move X0, [X0+4048]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X26+2802], W8
	028 Move W8, 0x40000000
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Compare X22, 0
	031 JumpIfEqual {112}
	032 Move X0, X22
	033 Move X1, X20
	034 Move W2, W21
	035 Move W3, W19
	036 Move X4, X31
	037 Move TEMP, X23
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {101}
	041 Move X20, [X31+64]
	042 Move X19, [X31+72]
	043 Move X22, [X31+48]
	044 Move X21, [X31+56]
	045 Move X24, [X31+32]
	046 Move X23, [X31+40]
	047 Move X26, [X31+16]
	048 Move X25, [X31+24]
	049 Move X30, [X31+80]
	050 Call String.IndexOfUnchecked, X0, X1, X2, X3
	051 Return X0
	052 Move X26, 0xE1A000
	053 Move X26, [X26+4048]
	054 Move X0, [X26]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Call CompareInfo.get_UseManagedCollation
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {82}
	064 And W6, W23, 1
	065 Move X0, X25
	066 Move X1, X22
	067 Move W2, W21
	068 Move W3, W19
	069 Move X4, X20
	070 Move W5, W24
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X24, [X31+32]
	076 Move X23, [X31+40]
	077 Move X26, [X31+16]
	078 Move X25, [X31+24]
	079 Move X30, [X31+80]
	080 Call CompareInfo.internal_index_managed, X0, X1, X2, X3, X4, X5, X6
	081 Return X0
	082 Move X0, [X26]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 And W4, W23, 1
	088 Move X0, X22
	089 Move W1, W21
	090 Move W2, W19
	091 Move X3, X20
	092 Move X20, [X31+64]
	093 Move X19, [X31+72]
	094 Move X22, [X31+48]
	095 Move X21, [X31+56]
	096 Move X24, [X31+32]
	097 Move X23, [X31+40]
	098 Move X26, [X31+16]
	099 Move X25, [X31+24]
	100 Move X30, [X31+80]
	101 Move X20, [X31+64]
	102 Move X19, [X31+72]
	103 Move X22, [X31+48]
	104 Move X21, [X31+56]
	105 Move X24, [X31+32]
	106 Move X23, [X31+40]
	107 Move X26, [X31+16]
	108 Move X25, [X31+24]
	109 Move X30, [X31+80]
	110 Call String.LastIndexOfUnchecked, X0, X1, X2, X3
	111 Return X0
	112 Call 0x1C17F20

Method: System.Int32 internal_compare_switch(System.String str1, System.Int32 offset1, System.Int32 length1, System.String str2, System.Int32 offset2, System.Int32 length2, System.Globalization.CompareOptions options)

Disassembly:
	0x033055C8 MOVZ W2, 0x4
	0x033055CC B 0x3305638
	0x033055D0 CMP W21, 0x20
	0x033055D4 B.CS 0x33056E8
	0x033055D8 ADRP X23, 0xE22000
	0x033055DC LDR X23, [X23 + 0x930]
	0x033055E0 LDR X0, [X23]
	0x033055E4 LDR W8, [X0 + 0xE0]
	0x033055E8 CBNZ W8, 0x33055F0
	0x033055EC BL 0x1C16DFC
	0x033055F0 ADRP X24, 0x10D7000
	0x033055F4 LDRB W8, [X24 + 0xAFE]
	0x033055F8 CBNZ W8, 0x3305610
	0x033055FC ADRP X0, 0xE22000
	0x03305600 LDR X0, [X0 + 0x930]
	0x03305604 BL 0x1C16CF4
	0x03305608 MOVZ W8, 0x1
	0x0330560C STRB W8, [X24 + 0xAFE]
	0x03305610 LDR X0, [X23]
	0x03305614 LDR W8, [X0 + 0xE0]
	0x03305618 CBNZ W8, 0x3305624
	0x0330561C BL 0x1C16DFC
	0x03305620 LDR X0, [X23]
	0x03305624 LDR X8, [X0 + 0xB8]
	0x03305628 LDRB W8, [X8]
	0x0330562C CBZ W8, 0x3305658
	0x03305630 MOVZ W2, 0x4
	0x03305634 BFM W2, W21, 0x0, 0x0
	0x03305638 MOV X0, X20
	0x0330563C MOV X1, X19
	0x03305640 LDP X20, X19, [X31 + 0x30]
	0x03305644 LDP X22, X21, [X31 + 0x20]
	0x03305648 LDP X24, X23, [X31 + 0x10]
	0x0330564C MOV X3, X31
	0x03305650 LDR X30, [X31], #0x40
	0x03305654 B 0x3226FBC
	0x03305658 MOV X0, X22
	0x0330565C MOV X1, X20
	0x03305660 MOV X2, X19
	0x03305664 MOV W3, W21
	0x03305668 LDP X20, X19, [X31 + 0x30]
	0x0330566C LDP X22, X21, [X31 + 0x20]
	0x03305670 LDP X24, X23, [X31 + 0x10]
	0x03305674 LDR X30, [X31], #0x40
	0x03305678 B 0x3305744
	0x0330567C ADRP X8, 0xE22000
	0x03305680 ADRP X9, 0xDF9000
	0x03305684 LDR X8, [X8 + 0x990]
	0x03305688 LDR X9, [X9 + 0x580]
	0x0330568C CMP X20, 0x0
	0x03305690 CSEL X0, X9, X8, EQ
	0x03305694 BL 0x1C16D08
	0x03305698 MOV X19, X0
	0x0330569C ADRP X0, 0xDF3000
	0x033056A0 LDR X0, [X0 + 0x528]
	0x033056A4 BL 0x1C16D08
	0x033056A8 BL 0x1C16F10
	0x033056AC MOV X20, X0
	0x033056B0 ADRP X0, 0xE1D000
	0x033056B4 LDR X0, [X0 + 0xA78]
	0x033056B8 BL 0x1C16D08
	0x033056BC MOV X2, X0
	0x033056C0 MOV X0, X20

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x10D8000
	013 Move X27, 0xE1D000
	014 Move W8, [X28+2803]
	015 Move X27, [X27+4048]
	016 Move W19, W7
	017 Move W20, W6
	018 Move W21, W5
	019 Move X22, X4
	020 Move W23, W3
	021 Move W24, W2
	022 Move X25, X1
	023 Move X26, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0xE1D000
	029 Move X0, [X0+4048]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X28+2803], W8
	033 Move X0, [X27]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Call CompareInfo.get_UseManagedCollation
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {64}
	043 Move X0, X26
	044 Move X1, X25
	045 Move W2, W24
	046 Move W3, W23
	047 Move X4, X22
	048 Move W5, W21
	049 Move W6, W20
	050 Move W7, W19
	051 Move X20, [X31+80]
	052 Move X19, [X31+88]
	053 Move X22, [X31+64]
	054 Move X21, [X31+72]
	055 Move X24, [X31+48]
	056 Move X23, [X31+56]
	057 Move X26, [X31+32]
	058 Move X25, [X31+40]
	059 Move X28, [X31+16]
	060 Move X27, [X31+24]
	061 Move X30, [X31+96]
	062 Call CompareInfo.internal_compare_managed, X0, X1, X2, X3, X4, X5, X6, X7
	063 Return X0
	064 Move X0, [X27]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X25
	070 Move W1, W24
	071 Move W2, W23
	072 Move X3, X22
	073 Move W4, W21
	074 Move W5, W20
	075 Move W6, W19
	076 Move X20, [X31+80]
	077 Move X19, [X31+88]
	078 Move X22, [X31+64]
	079 Move X21, [X31+72]
	080 Move X24, [X31+48]
	081 Move X23, [X31+56]
	082 Move X26, [X31+32]
	083 Move X25, [X31+40]
	084 Move X28, [X31+16]
	085 Move X27, [X31+24]
	086 Move X30, [X31+96]
	087 Call CompareInfo.internal_compare, X0, X1, X2, X3, X4, X5, X6
	088 Return X0

Method: System.Int32 internal_compare_managed(System.String str1, System.Int32 offset1, System.Int32 length1, System.String str2, System.Int32 offset2, System.Int32 length2, System.Globalization.CompareOptions options)

Disassembly:
	0x03308A30 BL 0x1C16D08
	0x03308A34 BL 0x1C16F10
	0x03308A38 MOV X19, X0
	0x03308A3C ADRP X0, 0xE1F000
	0x03308A40 LDR X0, [X0 + 0xA78]
	0x03308A44 B 0x3308A64
	0x03308A48 ADRP X0, 0xE1F000
	0x03308A4C LDR X0, [X0 + 0xA68]
	0x03308A50 BL 0x1C16D08
	0x03308A54 BL 0x1C16F10
	0x03308A58 MOV X19, X0
	0x03308A5C ADRP X0, 0xE1F000
	0x03308A60 LDR X0, [X0 + 0xA80]
	0x03308A64 BL 0x1C16D08
	0x03308A68 MOV X1, X0
	0x03308A6C MOV X0, X19
	0x03308A70 MOV X2, X31
	0x03308A74 BL 0x337E04C
	0x03308A78 ADRP X0, 0xE1F000
	0x03308A7C LDR X0, [X0 + 0xA88]
	0x03308A80 BL 0x1C16D08
	0x03308A84 MOV X1, X0
	0x03308A88 MOV X0, X19
	0x03308A8C BL 0x1C16DEC
	0x03308A90 ADRP X0, 0xDF0000
	0x03308A94 LDR X0, [X0 + 0x528]
	0x03308A98 BL 0x1C16D08
	0x03308A9C BL 0x1C16F10
	0x03308AA0 MOV X19, X0
	0x03308AA4 ADRP X0, 0xDED000
	0x03308AA8 LDR X0, [X0 + 0xC10]
	0x03308AAC BL 0x1C16D08
	0x03308AB0 MOV X1, X0
	0x03308AB4 MOV X0, X19
	0x03308AB8 BL 0x330E100
	0x03308ABC B 0x3308A78
	0x03308AC0 ADRP X0, 0xE1F000
	0x03308AC4 LDR X0, [X0 + 0xA90]
	0x03308AC8 BL 0x1C16D08
	0x03308ACC MOV X1, X22
	0x03308AD0 MOV X2, X31
	0x03308AD4 BL 0x32094D4
	0x03308AD8 MOV X19, X0
	0x03308ADC ADRP X0, 0xDF3000
	0x03308AE0 LDR X0, [X0 + 0x578]
	0x03308AE4 BL 0x1C16D08
	0x03308AE8 BL 0x1C16F10
	0x03308AEC MOV X20, X0
	0x03308AF0 ADRP X0, 0xDED000
	0x03308AF4 LDR X0, [X0 + 0xC10]
	0x03308AF8 BL 0x1C16D08
	0x03308AFC MOV X2, X0
	0x03308B00 MOV X0, X20
	0x03308B04 MOV X1, X19
	0x03308B08 BL 0x330E16C
	0x03308B0C ADRP X0, 0xE1F000
	0x03308B10 LDR X0, [X0 + 0xA88]
	0x03308B14 BL 0x1C16D08
	0x03308B18 MOV X1, X0
	0x03308B1C MOV X0, X20
	0x03308B20 BL 0x1C16DEC
	0x03308B24 ADRP X0, 0xDF3000
	0x03308B28 LDR X0, [X0 + 0x760]
	0x03308B2C BL 0x1C16D08

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x10D5000
	012 Move W8, [X27+2804]
	013 Move W19, W7
	014 Move W20, W6
	015 Move W21, W5
	016 Move X22, X4
	017 Move W23, W3
	018 Move W24, W2
	019 Move X25, X1
	020 Move X26, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xE20000
	026 Move X0, [X0+2464]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X27+2804], W8
	030 Move X0, X26
	031 Call CompareInfo.GetCollator, X0
	032 Compare X0, 0
	033 JumpIfEqual {77}
	034 Move X10, 0xE20000
	035 Move X8, [X0]
	036 Move X10, [X10+2464]
	037 Move X26, X0
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Move X1, [X10]
	040 Compare X9, 0
	041 JumpIfEqual {48}
	042 Move X10, [X8+176]
	043 Add X10, X10, 8
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Subtract X9, X9, 1
	047 Add X10, X10, 16
	048 Move W2, 1
	049 Move X0, X26
	050 Call 0x1C5D788
	051 Move W9, [X10]
	052 Add W9, W9, 1
	053 Add X8, X8, W9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X9, [X0+8]
	057 Move X0, X26
	058 Move X1, X25
	059 Move W2, W24
	060 Move W3, W23
	061 Move X4, X22
	062 Move W5, W21
	063 Move W6, W20
	064 Move W7, W19
	065 Move X20, [X31+64]
	066 Move X19, [X31+72]
	067 Move X22, [X31+48]
	068 Move X21, [X31+56]
	069 Move X24, [X31+32]
	070 Move X23, [X31+40]
	071 Move X26, [X31+16]
	072 Move X25, [X31+24]
	073 Move [X31+80], X9
	074 Move X30, [X31+80]
	075 Move X27, [X31+88]
	076 CallNoReturn X8
	077 Call 0x1C17F20

Method: System.Int32 internal_index_managed(System.String s1, System.Int32 sindex, System.Int32 count, System.String s2, System.Globalization.CompareOptions opt, System.Boolean first)

Disassembly:
	0x03308850 LDP X26, X25, [X31 + 0x20]
	0x03308854 LDR X30, [X31 + 0x10]
	0x03308858 ADD X31, X31, 0x60
	0x0330885C RET
	0x03308860 BL 0x1C16F20
	0x03308864 STP X30, X27, [X31 - 0x50]!
	0x03308868 STP X26, X25, [X31 + 0x10]
	0x0330886C STP X24, X23, [X31 + 0x20]
	0x03308870 STP X22, X21, [X31 + 0x30]
	0x03308874 STP X20, X19, [X31 + 0x40]
	0x03308878 ADRP X23, 0x10D4000
	0x0330887C LDRB W8, [X23 + 0xB48]
	0x03308880 MOV X21, X3
	0x03308884 MOV X19, X2
	0x03308888 MOV X20, X1
	0x0330888C MOV X22, X0
	0x03308890 TBNZ X8, 0x0, 0x33088C0
	0x03308894 ADRP X0, 0xDEC000
	0x03308898 LDR X0, [X0 + 0x9F0]
	0x0330889C BL 0x1C16CF4
	0x033088A0 ADRP X0, 0xDED000
	0x033088A4 LDR X0, [X0 + 0x570]
	0x033088A8 BL 0x1C16CF4
	0x033088AC ADRP X0, 0xE1F000
	0x033088B0 LDR X0, [X0 + 0xA38]
	0x033088B4 BL 0x1C16CF4
	0x033088B8 MOVZ W8, 0x1
	0x033088BC STRB W8, [X23 + 0xB48]
	0x033088C0 CBZ X22, 0x3308A90
	0x033088C4 LDR W8, [X22 + 0x10]
	0x033088C8 CBZ W8, 0x3308AC0
	0x033088CC ADRP X24, 0xE1F000
	0x033088D0 LDR X24, [X24 + 0xA38]
	0x033088D4 LDR X0, [X24]
	0x033088D8 LDR W8, [X0 + 0xE0]
	0x033088DC CBNZ W8, 0x33088E4
	0x033088E0 BL 0x1C16DFC
	0x033088E4 MOV X0, X20
	0x033088E8 BL 0x3311798
	0x033088EC TBNZ X0, 0x0, 0x3308B24
	0x033088F0 ADRP X8, 0xDED000
	0x033088F4 LDR X8, [X8 + 0x570]
	0x033088F8 LDR X0, [X8]
	0x033088FC LDR W8, [X0 + 0xE0]
	0x03308900 CBNZ W8, 0x3308908
	0x03308904 BL 0x1C16DFC
	0x03308908 MOVZ X8, 0x5A0B
	0x0330890C MOVK X8, 0x60F80000
	0x03308910 MOVZ X9, 0x1000
	0x03308914 MOVK X8, 0x26E
	0x03308918 MOVK X9, 0x84F60000
	0x0330891C MOVK X8, 0x97CD0000
	0x03308920 MOVK X9, 0x728
	0x03308924 MADD X8, X20, X8, X9
	0x03308928 MOVZ X9, 0xF611
	0x0330892C MOVK X9, 0x28840000
	0x03308930 EXTR X8, X8, X8, 0x9
	0x03308934 MOVK X9, 0x7
	0x03308938 CMP X8, X9
	0x0330893C B.CS 0x3308B68
	0x03308940 STRB W31, [X21]
	0x03308944 CBZ X19, 0x33089EC
	0x03308948 LDR X8, [X19 + 0x18]
	0x0330894C CBZ X8, 0x33089EC
	0x03308950 MOVZ W8, 0x1
	0x03308954 STRB W8, [X21]
	0x03308958 LDR W8, [X19 + 0x18]
	0x0330895C CMP W8, 0x1
	0x03308960 B.LT 0x33089EC
	0x03308964 ADRP X27, 0xDEC000
	0x03308968 LDR X27, [X27 + 0x9F0]
	0x0330896C MOV X25, X31
	0x03308970 MOV X23, X31
	0x03308974 ADD X26, X19, 0x20
	0x03308978 CMP W25, W8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x10D5000
	011 Move W8, [X26+2805]
	012 Move W25, W6
	013 Move W19, W5
	014 Move X22, X4
	015 Move W20, W3
	016 Move W21, W2
	017 Move X23, X1
	018 Move X24, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xE20000
	024 Move X0, [X0+2464]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X26+2805], W8
	028 Move X0, X24
	029 Call CompareInfo.GetCollator, X0
	030 Compare X0, 0
	031 JumpIfEqual {86}
	032 Move X9, 0xE20000
	033 Move X8, [X0]
	034 Move X9, [X9+2464]
	035 Move X24, X0
	036 Move X1, [X9]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move TEMP, X25
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {51}
	042 Compare W9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move W2, 4
	051 Compare W9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move W2, 5
	060 Move X0, X24
	061 Call 0x1C5D788
	062 Move W9, [X10]
	063 Add W9, W9, 4
	064 Move W9, [X10]
	065 Add W9, W9, 5
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X7, [X0]
	069 Move X6, [X0+8]
	070 Move X0, X24
	071 Move X1, X23
	072 Move X2, X22
	073 Move W3, W21
	074 Move W4, W20
	075 Move W5, W19
	076 Move X20, [X31+64]
	077 Move X19, [X31+72]
	078 Move X22, [X31+48]
	079 Move X21, [X31+56]
	080 Move X24, [X31+32]
	081 Move X23, [X31+40]
	082 Move X26, [X31+16]
	083 Move X25, [X31+24]
	084 Move X30, [X31+80]
	085 CallNoReturn X7
	086 Call 0x1C17F20

Method: System.Int32 internal_compare_icall(System.Char* str1, System.Int32 length1, System.Char* str2, System.Int32 length2, System.Globalization.CompareOptions options)

Disassembly:
	0x03308B30 BL 0x1C16F10

ISIL:
	001 Call 0x1C436A0
	002 Return X0

Method: System.Int32 internal_compare(System.String str1, System.Int32 offset1, System.Int32 length1, System.String str2, System.Int32 offset2, System.Int32 length2, System.Globalization.CompareOptions options)

Disassembly:
	0x0330897C B.CS 0x3308A04
	0x03308980 LDR X21, [X26, X25, LSL #3]
	0x03308984 CBZ X21, 0x3308A08
	0x03308988 LDR X0, [X24]
	0x0330898C LDR W8, [X0 + 0xE0]
	0x03308990 CBNZ W8, 0x3308998
	0x03308994 BL 0x1C16DFC
	0x03308998 MOV X0, X20
	0x0330899C MOV X1, X21
	0x033089A0 BL 0x330B4E8
	0x033089A4 TBZ X0, 0x0, 0x3308A28
	0x033089A8 CBZ X23, 0x33089D8
	0x033089AC LDR X0, [X27]
	0x033089B0 LDR X22, [X21 + 0x10]
	0x033089B4 LDR X23, [X23 + 0x18]
	0x033089B8 LDR W8, [X0 + 0xE0]
	0x033089BC CBNZ W8, 0x33089C4
	0x033089C0 BL 0x1C16DFC
	0x033089C4 MOV X0, X22
	0x033089C8 MOV X1, X23
	0x033089CC MOV X2, X31
	0x033089D0 BL 0x33631B4
	0x033089D4 TBNZ X0, 0x0, 0x3308A48
	0x033089D8 LDR W8, [X19 + 0x18]
	0x033089DC ADD X25, X25, 0x1
	0x033089E0 MOV X23, X21
	0x033089E4 CMP W25, W8
	0x033089E8 B.LT 0x3308978
	0x033089EC LDP X20, X19, [X31 + 0x40]
	0x033089F0 LDP X22, X21, [X31 + 0x30]
	0x033089F4 LDP X24, X23, [X31 + 0x20]
	0x033089F8 LDP X26, X25, [X31 + 0x10]
	0x033089FC LDP X30, X27, [X31], #0x50
	0x03308A00 RET
	0x03308A04 BL 0x1C16F28
	0x03308A08 ADRP X0, 0xE1F000
	0x03308A0C LDR X0, [X0 + 0xA68]
	0x03308A10 BL 0x1C16D08
	0x03308A14 BL 0x1C16F10
	0x03308A18 MOV X19, X0
	0x03308A1C ADRP X0, 0xE1F000
	0x03308A20 LDR X0, [X0 + 0xA70]
	0x03308A24 B 0x3308A64
	0x03308A28 ADRP X0, 0xE1F000
	0x03308A2C LDR X0, [X0 + 0xA68]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x10D5000
	011 Move W8, [X26+2806]
	012 Move W19, W6
	013 Move W20, W5
	014 Move W22, W4
	015 Move X23, X3
	016 Move W21, W2
	017 Move W24, W1
	018 Move X25, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xE1A000
	024 Move X0, [X0+4048]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X26+2806], W8
	028 Compare X25, 0
	029 JumpIfEqual {33}
	030 Move X0, X31
	031 Call RuntimeHelpers.get_OffsetToStringData
	032 Add X25, X25, W0
	033 Move X26, 0xE1A000
	034 Move X26, [X26+4048]
	035 Compare X23, 0
	036 JumpIfEqual {40}
	037 Move X0, X31
	038 Call RuntimeHelpers.get_OffsetToStringData
	039 Add X23, X23, W0
	040 Move X0, [X26]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X0, X25, W24
	046 Add X2, X23, W22
	047 Move W1, W21
	048 Move W3, W20
	049 Move W4, W19
	050 Move X20, [X31+64]
	051 Move X19, [X31+72]
	052 Move X22, [X31+48]
	053 Move X21, [X31+56]
	054 Move X24, [X31+32]
	055 Move X23, [X31+40]
	056 Move X26, [X31+16]
	057 Move X25, [X31+24]
	058 Move X30, [X31+80]
	059 Call 0x1C436A0
	060 Return X0

Method: System.Int32 internal_index_icall(System.Char* source, System.Int32 sindex, System.Int32 count, System.Char* value, System.Int32 value_length, System.Boolean first)

Disassembly:
	0x03308B34 MOV X19, X0
	0x03308B38 ADRP X0, 0xE1F000

ISIL:
	001 And W5, W5, 1
	002 Call 0x1C43804
	003 Return X0

Method: System.Int32 internal_index(System.String source, System.Int32 sindex, System.Int32 count, System.String value, System.Boolean first)

Disassembly:
	0x0330879C CBZ X8, 0x3308844
	0x033087A0 ADRP X8, 0xE1F000
	0x033087A4 LDR X8, [X8 + 0xA60]
	0x033087A8 ADRP X25, 0xE1F000
	0x033087AC LDR X0, [X8]
	0x033087B0 LDR X25, [X25 + 0xA58]
	0x033087B4 STR W31, [X31 + 0x1C]
	0x033087B8 BL 0x1C16F10
	0x033087BC LDR X1, [X25]
	0x033087C0 MOV X25, X0
	0x033087C4 BL 0x301B7C4
	0x033087C8 LDR W8, [X23 + 0x18]
	0x033087CC TBNZ X8, 0x1F, 0x3308818
	0x033087D0 ADRP X26, 0xE1F000
	0x033087D4 LDR X26, [X26 + 0xA38]
	0x033087D8 LDR X0, [X26]
	0x033087DC LDR W8, [X0 + 0xE0]
	0x033087E0 CBNZ W8, 0x33087E8
	0x033087E4 BL 0x1C16DFC
	0x033087E8 ADD X0, X31, 0x1C
	0x033087EC MOV X1, X24
	0x033087F0 MOV X2, X25
	0x033087F4 MOV X3, X23
	0x033087F8 MOV X4, X22
	0x033087FC MOV X5, X21
	0x03308800 STR X20, [X31]
	0x03308804 BL 0x330AB90
	0x03308808 LDR W8, [X31 + 0x1C]
	0x0330880C LDR W9, [X23 + 0x18]
	0x03308810 CMP W8, W9
	0x03308814 B.LE 0x33087D8
	0x03308818 CBZ X25, 0x3308860
	0x0330881C ADRP X8, 0xE1F000
	0x03308820 LDR X8, [X8 + 0xA50]
	0x03308824 MOV X0, X25
	0x03308828 LDR X1, [X8]
	0x0330882C BL 0x301DDC4
	0x03308830 STR X0, [X19]
	0x03308834 CBZ X0, 0x3308844
	0x03308838 LDR X8, [X0 + 0x18]
	0x0330883C CBNZ X8, 0x3308844
	0x03308840 STR X31, [X19]
	0x03308844 LDP X20, X19, [X31 + 0x50]
	0x03308848 LDP X22, X21, [X31 + 0x40]
	0x0330884C LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x10D5000
	010 Move W8, [X24+2807]
	011 Move W21, W4
	012 Move X19, X3
	013 Move W20, W2
	014 Move W22, W1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xE1A000
	021 Move X0, [X0+4048]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2807], W8
	025 Compare X23, 0
	026 JumpIfEqual {30}
	027 Move X0, X31
	028 Call RuntimeHelpers.get_OffsetToStringData
	029 Add X23, X23, W0
	030 Move X25, 0xE1A000
	031 Move X25, [X25+4048]
	032 Compare X19, 0
	033 JumpIfEqual {38}
	034 Move X0, X31
	035 Call RuntimeHelpers.get_OffsetToStringData
	036 Move W24, [X19+16]
	037 Add X19, X19, W0
	038 Move W24, W31
	039 Move X0, [X25]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 And W5, W21, 1
	045 Move X0, X23
	046 Move W1, W22
	047 Move W2, W20
	048 Move X3, X19
	049 Move W4, W24
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X30, [X31+64]
	057 Move X25, [X31+72]
	058 Call 0x1C43804
	059 Return X0

Method: System.Void InitSort(System.Globalization.CultureInfo culture)

Disassembly:
	0x03304E84 CBNZ W8, 0x3304E9C
	0x03304E88 ADRP X0, 0xE16000
	0x03304E8C LDR X0, [X0 + 0x290]
	0x03304E90 BL 0x1C16CF4
	0x03304E94 MOVZ W8, 0x1
	0x03304E98 STRB W8, [X28 + 0x761]
	0x03304E9C LDR W8, [X22 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {8}
	004 Move X8, [X1+72]
	005 Move [X0+24], X8
	006 Move X30, [X31+16]
	007 Return 
	008 Call 0x1C17F20

Method: System.Int32 CompareStringOrdinalIgnoreCase(System.Char* pString1, System.Int32 length1, System.Char* pString2, System.Int32 length2)

Disassembly:
	0x033063AC LDR X0, [X25]
	0x033063B0 LDR W8, [X0 + 0xE0]
	0x033063B4 CBNZ W8, 0x33063BC
	0x033063B8 BL 0x1C16DFC
	0x033063BC ADRP X26, 0x10D6000
	0x033063C0 LDRB W8, [X26 + 0xAFE]
	0x033063C4 CBNZ W8, 0x33063DC
	0x033063C8 ADRP X0, 0xE21000
	0x033063CC LDR X0, [X0 + 0x930]
	0x033063D0 BL 0x1C16CF4
	0x033063D4 MOVZ W8, 0x1
	0x033063D8 STRB W8, [X26 + 0xAFE]
	0x033063DC LDR X0, [X25]
	0x033063E0 LDR W8, [X0 + 0xE0]
	0x033063E4 CBNZ W8, 0x33063F0
	0x033063E8 BL 0x1C16DFC
	0x033063EC LDR X0, [X25]
	0x033063F0 LDR X8, [X0 + 0xB8]
	0x033063F4 LDRB W8, [X8]
	0x033063F8 CBZ W8, 0x330644C
	0x033063FC ADRP X8, 0xE1B000
	0x03306400 LDR X8, [X8 + 0xFD0]
	0x03306404 LDR X0, [X8]
	0x03306408 LDR W8, [X0 + 0xE0]
	0x0330640C CBNZ W8, 0x3306414
	0x03306410 BL 0x1C16DFC
	0x03306414 MOVZ W8, 0x1
	0x03306418 MOVK W8, 0x10000000
	0x0330641C ANDS W31, W23, W8, 0x0
	0x03306420 MOV X0, X22
	0x03306424 MOV X1, X21
	0x03306428 MOV W2, W20
	0x0330642C MOV W3, W19
	0x03306430 LDP X20, X19, [X31 + 0x40]
	0x03306434 LDP X22, X21, [X31 + 0x30]
	0x03306438 LDP X24, X23, [X31 + 0x20]
	0x0330643C LDP X26, X25, [X31 + 0x10]
	0x03306440 CSET W4, NE
	0x03306444 LDR X30, [X31], #0x50
	0x03306448 B 0x3303AC4
	0x0330644C MOV X0, X24
	0x03306450 MOV X1, X22
	0x03306454 MOV W2, W20
	0x03306458 MOV W3, W19
	0x0330645C MOV X4, X21
	0x03306460 MOV W5, W23
	0x03306464 LDP X20, X19, [X31 + 0x40]
	0x03306468 LDP X22, X21, [X31 + 0x30]
	0x0330646C LDP X24, X23, [X31 + 0x20]
	0x03306470 LDP X26, X25, [X31 + 0x10]
	0x03306474 MOV W6, W31
	0x03306478 LDR X30, [X31], #0x50
	0x0330647C B 0x3307660
	0x03306480 ADRP X0, 0xDF5000
	0x03306484 LDR X0, [X0 + 0x760]
	0x03306488 BL 0x1C16D08
	0x0330648C BL 0x1C16F10
	0x03306490 MOV X19, X0
	0x03306494 ADRP X0, 0xE15000
	0x03306498 LDR X0, [X0 + 0x648]
	0x0330649C BL 0x1C16D08
	0x033064A0 MOV X20, X0
	0x033064A4 ADRP X0, 0xE15000
	0x033064A8 LDR X0, [X0 + 0x650]
	0x033064AC B 0x3306530
	0x033064B0 ADRP X0, 0xDF2000
	0x033064B4 LDR X0, [X0 + 0x528]
	0x033064B8 BL 0x1C16D08
	0x033064BC BL 0x1C16F10
	0x033064C0 MOV X19, X0
	0x033064C4 ADRP X0, 0xDF8000
	0x033064C8 LDR X0, [X0 + 0x580]
	0x033064CC B 0x33064EC
	0x033064D0 ADRP X0, 0xDF2000
	0x033064D4 LDR X0, [X0 + 0x528]
	0x033064D8 BL 0x1C16D08
	0x033064DC BL 0x1C16F10
	0x033064E0 MOV X19, X0
	0x033064E4 ADRP X0, 0xDF7000
	0x033064E8 LDR X0, [X0 + 0xEC8]
	0x033064EC BL 0x1C16D08
	0x033064F0 MOV X1, X0
	0x033064F4 MOV X0, X19
	0x033064F8 MOV X2, X31
	0x033064FC BL 0x330E100
	0x03306500 B 0x3306548
	0x03306504 ADRP X0, 0xDF5000
	0x03306508 LDR X0, [X0 + 0x760]
	0x0330650C BL 0x1C16D08
	0x03306510 BL 0x1C16F10
	0x03306514 MOV X19, X0
	0x03306518 ADRP X0, 0xE15000
	0x0330651C LDR X0, [X0 + 0x658]
	0x03306520 BL 0x1C16D08
	0x03306524 MOV X20, X0
	0x03306528 ADRP X0, 0xE15000
	0x0330652C LDR X0, [X0 + 0x660]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x10D7000
	013 Move X24, 0xDF0000
	014 Move W8, [X21+2808]
	015 Move X24, [X24+3144]
	016 Move W22, W3
	017 Move X19, X2
	018 Move W23, W1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xDF0000
	025 Move X0, [X0+3144]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2808], W8
	029 Move X0, [X24]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X31
	035 Call CultureInfo.get_InvariantCulture
	036 Compare X0, 0
	037 JumpIfEqual {121}
	038 Move X8, [X0]
	039 Move X9, [X8+472]
	040 Move X1, [X8+480]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSET not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 Subtract W8, W23, 1
	047 Move X21, X0
	048 Subtract W9, W22, 1
	049 Compare X21, 0
	050 JumpIfEqual {121}
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 Move W24, 1
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W26, TEMP
	057 Subtract W27, W8, 1
	058 Move W25, 1
	059 Move X8, [X21]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move X0, X21
	062 Move X9, [X8+456]
	063 Move X2, [X8+464]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X8, [X21]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 And W28, W0, 0xFFFF
	068 Move X0, X21
	069 Move X9, [X8+456]
	070 Move X2, [X8+464]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add W8, W26, 2
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add W26, W26, 1
	076 NotImplemented "Instruction CSET not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add X20, X20, 2
	079 NotImplemented "Instruction CSET not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add X19, X19, 2
	082 Move TEMP, X25
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {107}
	086 Move TEMP, X24
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {108}
	090 Compare X21, 0
	091 JumpIfEqual {121}
	092 Move X8, [X21]
	093 NotImplemented "Instruction LDRH not yet implemented."
	094 Move X0, X21
	095 Move X9, [X8+456]
	096 Move X2, [X8+464]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X8, [X21]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Move W19, W0
	101 Move X0, X21
	102 Move X9, [X8+456]
	103 Move X2, [X8+464]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 And W8, W19, 0xFFFF
	106 Subtract W0, W8, W0
	107 NotImplemented "Instruction SBFM not yet implemented."
	108 Move W0, 1
	109 Move X20, [X31+80]
	110 Move X19, [X31+88]
	111 Move X22, [X31+64]
	112 Move X21, [X31+72]
	113 Move X24, [X31+48]
	114 Move X23, [X31+56]
	115 Move X26, [X31+32]
	116 Move X25, [X31+40]
	117 Move X28, [X31+16]
	118 Move X27, [X31+24]
	119 Move X30, [X31+96]
	120 Return X0
	121 Call 0x1C17F20

Method: System.Int32 IndexOfOrdinalCore(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Boolean ignoreCase)

Disassembly:
	0x03307244 ADRP X0, 0xE20000
	0x03307248 LDR X0, [X0 + 0xA10]
	0x0330724C BL 0x1C16CF4
	0x03307250 ADRP X0, 0xE20000
	0x03307254 LDR X0, [X0 + 0xA18]
	0x03307258 BL 0x1C16CF4
	0x0330725C ADRP X0, 0xE20000
	0x03307260 LDR X0, [X0 + 0xA20]

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {13}
	003 Move TEMP, X4
	004 And TEMP, TEMP, 1
	005 Compare TEMP, 1
	006 JumpIfNotEqual {10}
	007 Move X4, X31
	008 Call String.IndexOfUncheckedIgnoreCase, X0, X1, X2, X3
	009 Return X0
	010 Move X4, X31
	011 Call String.IndexOfUnchecked, X0, X1, X2, X3
	012 Return X0
	013 Move [X31-16], X30
	014 Call 0x1C17F20

Method: System.Int32 LastIndexOfOrdinalCore(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Boolean ignoreCase)

Disassembly:
	0x033076C0 MOV X0, X22
	0x033076C4 MOV X1, X20
	0x033076C8 MOV W2, W21
	0x033076CC MOV W3, W19
	0x033076D0 MOV X4, X31
	0x033076D4 TBZ X23, 0x0, 0x3307780
	0x033076D8 LDP X20, X19, [X31 + 0x40]
	0x033076DC LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {13}
	003 Move TEMP, X4
	004 And TEMP, TEMP, 1
	005 Compare TEMP, 1
	006 JumpIfNotEqual {10}
	007 Move X4, X31
	008 Call String.LastIndexOfUncheckedIgnoreCase, X0, X1, X2, X3
	009 Return X0
	010 Move X4, X31
	011 Call String.LastIndexOfUnchecked, X0, X1, X2, X3
	012 Return X0
	013 Move [X31-16], X30
	014 Call 0x1C17F20

Method: System.Int32 LastIndexOfCore(System.String source, System.String target, System.Int32 startIndex, System.Int32 count, System.Globalization.CompareOptions options)

Disassembly:
	0x033076A8 MOVZ W8, 0x1
	0x033076AC STRB W8, [X26 + 0xAF2]
	0x033076B0 MOVZ W8, 0x40000000
	0x033076B4 CMP W24, W8
	0x033076B8 B.NE 0x33076F0
	0x033076BC CBZ X22, 0x3307798

ISIL:
	001 Move X8, X2
	002 Move W2, W3
	003 Move W3, W4
	004 Move X4, X8
	005 Move W6, W31
	006 Call CompareInfo.internal_index_switch, X0, X1, X2, X3, X4, X5, X6
	007 Return X0

Method: System.Int32 IndexOfCore(System.String source, System.String target, System.Int32 startIndex, System.Int32 count, System.Globalization.CompareOptions options, System.Int32* matchLengthPtr)

Disassembly:
	0x03307050 BL 0x1C16D08
	0x03307054 MOV X1, X0
	0x03307058 MOV X0, X19
	0x0330705C BL 0x1C16DEC
	0x03307060 STP X30, X21, [X31 - 0x20]!
	0x03307064 STP X20, X19, [X31 + 0x10]
	0x03307068 ADRP X21, 0x10D5000
	0x0330706C ADRP X20, 0xE20000
	0x03307070 LDRB W8, [X21 + 0xAEE]
	0x03307074 LDR X20, [X20 + 0x9F8]
	0x03307078 MOV X19, X0
	0x0330707C TBNZ X8, 0x0, 0x3307094
	0x03307080 ADRP X0, 0xE20000
	0x03307084 LDR X0, [X0 + 0x9F8]
	0x03307088 BL 0x1C16CF4
	0x0330708C MOVZ W8, 0x1
	0x03307090 STRB W8, [X21 + 0xAEE]
	0x03307094 LDR X8, [X19]
	0x03307098 MOV X0, X19
	0x0330709C LDP X9, X1, [X8 + 0x188]
	0x033070A0 BLR X9

ISIL:
	001 Compare X6, 0
	002 JumpIfNotEqual {10}
	003 Move X8, X2
	004 Move W6, 1
	005 Move W2, W3
	006 Move W3, W4
	007 Move X4, X8
	008 Call CompareInfo.internal_index_switch, X0, X1, X2, X3, X4, X5, X6
	009 Return X0
	010 Move [X31-16], X30
	011 Move [X31-8], X19
	012 Move X0, 0xDF6000
	013 Move X0, [X0+1880]
	014 Call 0x1C17D08
	015 Call 0x1C17F10
	016 Move X1, X31
	017 Move X19, X0
	018 Call NotImplementedException..ctor, X0
	019 Move X0, 0xE21000
	020 Move X0, [X0+2496]
	021 Call 0x1C17D08
	022 Move X1, X0
	023 Move X0, X19
	024 Call 0x1C17DEC

Method: System.Int32 CompareString(System.ReadOnlySpan`1<System.Char> string1, System.String string2, System.Globalization.CompareOptions options)

Disassembly:
	0x03305A5C LDR X0, [X0 + 0x9B0]
	0x03305A60 BL 0x1C16D08
	0x03305A64 MOV X1, X0
	0x03305A68 MOV X0, X20
	0x03305A6C BL 0x1C16DEC
	0x03305A70 ADRP X0, 0xDF6000
	0x03305A74 LDR X0, [X0 + 0x578]
	0x03305A78 BL 0x1C16D08
	0x03305A7C BL 0x1C16F10
	0x03305A80 MOV X19, X0
	0x03305A84 ADRP X0, 0xE1E000
	0x03305A88 LDR X0, [X0 + 0x958]
	0x03305A8C BL 0x1C16D08
	0x03305A90 MOV X20, X0
	0x03305A94 ADRP X0, 0xE22000
	0x03305A98 LDR X0, [X0 + 0x830]
	0x03305A9C BL 0x1C16D08
	0x03305AA0 MOV X2, X0
	0x03305AA4 MOV X0, X19
	0x03305AA8 MOV X1, X20
	0x03305AAC MOV X3, X31
	0x03305AB0 BL 0x330E16C
	0x03305AB4 ADRP X0, 0xE22000
	0x03305AB8 LDR X0, [X0 + 0x9B0]
	0x03305ABC BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X3
	007 Move X21, X0
	008 Move X0, X31
	009 Move X3, X31
	010 Move W19, W4
	011 Call String.CreateString, X0, X1
	012 Compare X0, 0
	013 JumpIfEqual {31}
	014 Compare X20, 0
	015 JumpIfEqual {31}
	016 Move W3, [X0+16]
	017 Move W6, [X20+16]
	018 Move X1, X0
	019 Move X0, X21
	020 Move W2, W31
	021 Move X4, X20
	022 Move W5, W31
	023 Move W7, W19
	024 Call CompareInfo.internal_compare_switch, X0, X1, X2, X3, X4, X5, X6, X7
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return X0
	031 Call 0x1C17F20

Method: System.Int32 CompareString(System.ReadOnlySpan`1<System.Char> string1, System.ReadOnlySpan`1<System.Char> string2, System.Globalization.CompareOptions options)

Disassembly:
	0x03305BFC LDR W9, [X10]
	0x03305C00 ADD W9, W9, 0x3
	0x03305C04 ADD X8, X8, W9, 0x4, SXTW
	0x03305C08 ADD X0, X8, 0x138
	0x03305C0C LDP X5, X4, [X0]
	0x03305C10 MOV X0, X22
	0x03305C14 MOV X1, X21
	0x03305C18 MOV X2, X20
	0x03305C1C MOV W3, W19
	0x03305C20 LDP X20, X19, [X31 + 0x40]
	0x03305C24 LDP X22, X21, [X31 + 0x30]
	0x03305C28 LDP X24, X23, [X31 + 0x20]
	0x03305C2C LDR X30, [X31 + 0x10]
	0x03305C30 ADD X31, X31, 0x50
	0x03305C34 BR X5
	0x03305C38 BL 0x1C16F20
	0x03305C3C B 0x3305C40
	0x03305C40 STP X30, X23, [X31 - 0x30]!
	0x03305C44 STP X22, X21, [X31 + 0x10]
	0x03305C48 STP X20, X19, [X31 + 0x20]
	0x03305C4C MOV X21, X3
	0x03305C50 MOV X22, X0
	0x03305C54 MOV X0, X31
	0x03305C58 MOV X3, X31
	0x03305C5C MOV W19, W5
	0x03305C60 MOV X20, X4
	0x03305C64 BL 0x322EB14
	0x03305C68 MOV X23, X0
	0x03305C6C MOV X0, X31
	0x03305C70 MOV X1, X21
	0x03305C74 MOV X2, X20
	0x03305C78 MOV X3, X31
	0x03305C7C BL 0x322EB14
	0x03305C80 MOV X2, X0
	0x03305C84 MOV X0, X22
	0x03305C88 MOV W3, W19
	0x03305C8C LDP X20, X19, [X31 + 0x20]
	0x03305C90 LDP X22, X21, [X31 + 0x10]
	0x03305C94 MOV X1, X23
	0x03305C98 LDP X30, X23, [X31], #0x30
	0x03305C9C B 0x3305ACC
	0x03305CA0 STR X30, [X31 - 0x50]!
	0x03305CA4 STP X26, X25, [X31 + 0x10]
	0x03305CA8 STP X24, X23, [X31 + 0x20]
	0x03305CAC STP X22, X21, [X31 + 0x30]
	0x03305CB0 STP X20, X19, [X31 + 0x40]
	0x03305CB4 ADRP X25, 0x10D7000
	0x03305CB8 LDRB W8, [X25 + 0xAE4]
	0x03305CBC MOV W23, W5
	0x03305CC0 MOV W19, W4
	0x03305CC4 MOV W20, W3
	0x03305CC8 MOV X21, X2
	0x03305CCC MOV X22, X1
	0x03305CD0 MOV X24, X0
	0x03305CD4 TBNZ X8, 0x0, 0x3305CEC
	0x03305CD8 ADRP X0, 0xE22000
	0x03305CDC LDR X0, [X0 + 0x930]
	0x03305CE0 BL 0x1C16CF4
	0x03305CE4 MOVZ W8, 0x1
	0x03305CE8 STRB W8, [X25 + 0xAE4]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X23, X3
	010 Move X20, X0
	011 Move X0, X31
	012 Move X3, X31
	013 Move W19, W5
	014 Move X22, X4
	015 Call String.CreateString, X0, X1
	016 Move X21, X0
	017 Move X0, X31
	018 Move X1, X23
	019 Move X2, X22
	020 Move X3, X31
	021 Call String.CreateString, X0, X1
	022 Compare X21, 0
	023 JumpIfEqual {63}
	024 Move X24, 0x10D5000
	025 Move W8, [X24+1890]
	026 Move W23, [X21+16]
	027 Move X22, X0
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0xE16000
	031 Move X0, [X0+656]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X24+1890], W8
	035 Compare X22, 0
	036 JumpIfEqual {64}
	037 Move X0, X22
	038 Move X1, X31
	039 Call String.GetRawStringData, X0
	040 Move W2, [X22+16]
	041 Move X1, X0
	042 Move X0, X31
	043 Move X3, X31
	044 Call String.CreateString, X0, X1
	045 Move W6, [X22+16]
	046 Move X4, X0
	047 Move X0, X20
	048 Move X1, X21
	049 Move W2, W31
	050 Move W3, W23
	051 Move W5, W31
	052 Move W7, W19
	053 Call CompareInfo.internal_compare_switch, X0, X1, X2, X3, X4, X5, X6, X7
	054 Move X20, [X31+64]
	055 Move X19, [X31+72]
	056 Move X22, [X31+48]
	057 Move X21, [X31+56]
	058 Move X24, [X31+32]
	059 Move X23, [X31+40]
	060 Move X30, [X31+16]
	061 Add X31, X31, 80
	062 Return X0
	063 Call 0x1C17F20
	064 Move X0, X31
	065 Move X1, X31
	066 Move X2, X31
	067 Move X3, X31
	068 Call String.CreateString, X0, X1
	069 Call 0x1C17F20

Method: System.Globalization.SortKey CreateSortKey(System.String source, System.Globalization.CompareOptions options)

Disassembly:
	0x033077A8 STP X20, X19, [X31 + 0x30]
	0x033077AC ADRP X24, 0x10D5000
	0x033077B0 LDRB W8, [X24 + 0xAF7]
	0x033077B4 MOV W21, W4
	0x033077B8 MOV X19, X3
	0x033077BC MOV W20, W2
	0x033077C0 MOV W22, W1
	0x033077C4 MOV X23, X0
	0x033077C8 TBNZ X8, 0x0, 0x33077E0
	0x033077CC ADRP X0, 0xE1A000
	0x033077D0 LDR X0, [X0 + 0xFD0]
	0x033077D4 BL 0x1C16CF4
	0x033077D8 MOVZ W8, 0x1
	0x033077DC STRB W8, [X24 + 0xAF7]
	0x033077E0 CBZ X23, 0x33077F0
	0x033077E4 MOV X0, X31
	0x033077E8 BL 0x32C1424
	0x033077EC ADD X23, X23, W0, SXTW
	0x033077F0 ADRP X25, 0xE1A000
	0x033077F4 LDR X25, [X25 + 0xFD0]
	0x033077F8 CBZ X19, 0x3307810
	0x033077FC MOV X0, X31
	0x03307800 BL 0x32C1424
	0x03307804 LDR W24, [X19 + 0x10]
	0x03307808 ADD X19, X19, W0, SXTW
	0x0330780C B 0x3307814
	0x03307810 MOV W24, W31
	0x03307814 LDR X0, [X25]
	0x03307818 LDR W8, [X0 + 0xE0]
	0x0330781C CBNZ W8, 0x3307824
	0x03307820 BL 0x1C16DFC
	0x03307824 AND W5, W21, 0x1
	0x03307828 MOV X0, X23
	0x0330782C MOV W1, W22
	0x03307830 MOV W2, W20
	0x03307834 MOV X3, X19
	0x03307838 MOV W4, W24
	0x0330783C LDP X20, X19, [X31 + 0x30]
	0x03307840 LDP X22, X21, [X31 + 0x20]
	0x03307844 LDP X24, X23, [X31 + 0x10]
	0x03307848 LDP X30, X25, [X31], #0x40
	0x0330784C B 0x1C42804
	0x03307850 STR X30, [X31 - 0x50]!
	0x03307854 STP X26, X25, [X31 + 0x10]
	0x03307858 STP X24, X23, [X31 + 0x20]
	0x0330785C STP X22, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {14}
	006 Move W8, 0xFFE0
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 And W31, W2, W8
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Call CompareInfo.CreateSortKeyCore, X0, X1, X2
	013 Return X0
	014 Move X0, 0xDF2000
	015 Move X0, [X0+1320]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move X19, X0
	019 Move X0, 0xDF8000
	020 Move X0, [X0+1408]
	021 Call 0x1C17D08
	022 Move X1, X0
	023 Move X0, X19
	024 Move X2, X31
	025 Call ArgumentNullException..ctor, X0, X1
	026 Move X0, 0xDF5000
	027 Move X0, [X0+1400]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X19, X0
	031 Move X0, 0xE1D000
	032 Move X0, [X0+2392]
	033 Call 0x1C17D08
	034 Move X20, X0
	035 Move X0, 0xE21000
	036 Move X0, [X0+2096]
	037 Call 0x1C17D08
	038 Move X2, X0
	039 Move X0, X19
	040 Move X1, X20
	041 Move X3, X31
	042 Call ArgumentException..ctor, X0, X1, X2
	043 Move X0, 0xE21000
	044 Move X0, [X0+2512]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.Boolean StartsWith(System.String source, System.String prefix, System.Globalization.CompareOptions options)

Disassembly:
	0x03306744 BL 0x1C16CF4
	0x03306748 MOVZ W8, 0x1
	0x0330674C STRB W8, [X23 + 0xAFE]
	0x03306750 LDR X0, [X22]
	0x03306754 LDR W8, [X0 + 0xE0]
	0x03306758 CBNZ W8, 0x3306764
	0x0330675C BL 0x1C16DFC
	0x03306760 LDR X0, [X22]
	0x03306764 LDR X8, [X0 + 0xB8]
	0x03306768 LDRB W8, [X8]
	0x0330676C CBZ W8, 0x330678C
	0x03306770 MOV X0, X21
	0x03306774 MOV X1, X20
	0x03306778 MOV W2, W19
	0x0330677C LDP X20, X19, [X31 + 0x20]
	0x03306780 LDP X22, X21, [X31 + 0x10]
	0x03306784 LDP X30, X23, [X31], #0x30
	0x03306788 B 0x3303BA8
	0x0330678C MOV X0, X21
	0x03306790 MOV X1, X20
	0x03306794 MOV W2, W19
	0x03306798 LDP X20, X19, [X31 + 0x20]
	0x0330679C LDP X22, X21, [X31 + 0x10]
	0x033067A0 LDP X30, X23, [X31], #0x30
	0x033067A4 B 0x33067A8
	0x033067A8 STR X30, [X31 - 0x20]!
	0x033067AC STP X20, X19, [X31 + 0x10]
	0x033067B0 CBZ X1, 0x33067D0
	0x033067B4 MOVZ W8, 0xFFE0
	0x033067B8 MOVK W8, 0xDFFF0000
	0x033067BC ANDS W31, W2, W8, 0x0
	0x033067C0 B.NE 0x3306804
	0x033067C4 LDP X20, X19, [X31 + 0x10]
	0x033067C8 LDR X30, [X31], #0x20
	0x033067CC B 0x3307528
	0x033067D0 ADRP X0, 0xDF2000
	0x033067D4 LDR X0, [X0 + 0x528]
	0x033067D8 BL 0x1C16D08
	0x033067DC BL 0x1C16F10
	0x033067E0 MOV X19, X0
	0x033067E4 ADRP X0, 0xDF8000
	0x033067E8 LDR X0, [X0 + 0x580]
	0x033067EC BL 0x1C16D08
	0x033067F0 MOV X1, X0
	0x033067F4 MOV X0, X19
	0x033067F8 MOV X2, X31
	0x033067FC BL 0x330E100
	0x03306800 B 0x3306848
	0x03306804 ADRP X0, 0xDF5000
	0x03306808 LDR X0, [X0 + 0x578]
	0x0330680C BL 0x1C16D08
	0x03306810 BL 0x1C16F10
	0x03306814 MOV X19, X0
	0x03306818 ADRP X0, 0xE1D000
	0x0330681C LDR X0, [X0 + 0x958]
	0x03306820 BL 0x1C16D08
	0x03306824 MOV X20, X0
	0x03306828 ADRP X0, 0xE21000
	0x0330682C LDR X0, [X0 + 0x830]
	0x03306830 BL 0x1C16D08
	0x03306834 MOV X2, X0
	0x03306838 MOV X0, X19
	0x0330683C MOV X1, X20
	0x03306840 MOV X3, X31
	0x03306844 BL 0x330E16C
	0x03306848 ADRP X0, 0xE21000
	0x0330684C LDR X0, [X0 + 0x9D0]
	0x03306850 BL 0x1C16D08
	0x03306854 MOV X1, X0
	0x03306858 MOV X0, X19
	0x0330685C BL 0x1C16DEC
	0x03306860 STP X30, X21, [X31 - 0x20]!
	0x03306864 STP X20, X19, [X31 + 0x10]
	0x03306868 ADRP X21, 0x10D6000
	0x0330686C LDRB W8, [X21 + 0xAEA]
	0x03306870 MOV X20, X1
	0x03306874 MOV X19, X0
	0x03306878 TBNZ X8, 0x0, 0x3306890
	0x0330687C ADRP X0, 0xE1B000
	0x03306880 LDR X0, [X0 + 0xFD0]
	0x03306884 BL 0x1C16CF4
	0x03306888 MOVZ W8, 0x1
	0x0330688C STRB W8, [X21 + 0xAEA]
	0x03306890 CBZ X20, 0x33068CC
	0x03306894 ADRP X8, 0xE1B000
	0x03306898 LDR X8, [X8 + 0xFD0]
	0x0330689C LDR X9, [X20]
	0x033068A0 LDR X8, [X8]
	0x033068A4 LDRB W11, [X9 + 0x130]
	0x033068A8 LDRB W10, [X8 + 0x130]
	0x033068AC CMP W11, W10
	0x033068B0 B.CC 0x33068CC
	0x033068B4 LDR X9, [X9 + 0xC8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X23, 0x10D7000
	010 Move X24, 0xE1C000
	011 Move W8, [X23+2809]
	012 Move X24, [X24+4048]
	013 Move W19, W3
	014 Move X20, X2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xE1C000
	022 Move X0, [X0+4048]
	023 Call 0x1C17CF4
	024 Move X0, 0xE22000
	025 Move X0, [X0+2464]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+2809], W8
	029 Move X0, [X24]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Call CompareInfo.get_UseManagedCollation
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {60}
	039 Move X0, X22
	040 Call CompareInfo.GetCollator, X0
	041 Compare X0, 0
	042 JumpIfEqual {110}
	043 Move X10, 0xE22000
	044 Move X8, [X0]
	045 Move X10, [X10+2464]
	046 Move X22, X0
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move W2, 2
	058 Move X0, X22
	059 Call 0x1C5D788
	060 Compare X21, 0
	061 JumpIfEqual {110}
	062 Compare X20, 0
	063 JumpIfEqual {110}
	064 Move W8, [X21+16]
	065 Move W3, [X20+16]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W0, W31
	068 Move X8, [X22]
	069 Move X0, X22
	070 Move X1, X21
	071 Move W2, W31
	072 Move X9, [X8+440]
	073 Move X8, [X8+448]
	074 Move X4, X20
	075 Move W5, W31
	076 Move W6, W3
	077 Move W7, W19
	078 Move [X31], X8
	079 NotImplemented "Instruction BLR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CSET not yet implemented."
	082 Move X20, [X31+64]
	083 Move X19, [X31+72]
	084 Move X22, [X31+48]
	085 Move X21, [X31+56]
	086 Move X24, [X31+32]
	087 Move X23, [X31+40]
	088 Move X30, [X31+16]
	089 Add X31, X31, 80
	090 Return X0
	091 Move W9, [X10]
	092 Add W9, W9, 2
	093 Add X8, X8, W9
	094 Add X0, X8, 312
	095 Move X5, [X0]
	096 Move X4, [X0+8]
	097 Move X0, X22
	098 Move X1, X21
	099 Move X2, X20
	100 Move W3, W19
	101 Move X20, [X31+64]
	102 Move X19, [X31+72]
	103 Move X22, [X31+48]
	104 Move X21, [X31+56]
	105 Move X24, [X31+32]
	106 Move X23, [X31+40]
	107 Move X30, [X31+16]
	108 Add X31, X31, 80
	109 CallNoReturn X5
	110 Call 0x1C17F20

Method: System.Boolean EndsWith(System.String source, System.String suffix, System.Globalization.CompareOptions options)

Disassembly:
	0x03306ACC B.EQ 0x3306D64
	0x03306AD0 B 0x3306D90
	0x03306AD4 SUB X21, X31, 0x200
	0x03306AD8 ADD X31, X21, 0x0
	0x03306ADC MOVZ W2, 0x1FE
	0x03306AE0 MOV X0, X21
	0x03306AE4 MOV W1, W31
	0x03306AE8 BL 0x3EB1B10
	0x03306AEC MOV X19, X31
	0x03306AF0 MOVZ W22, 0xFF
	0x03306AF4 ADRP X25, 0x10D6000
	0x03306AF8 ADRP X23, 0xE1B000
	0x03306AFC LDRB W8, [X25 + 0x3AB]
	0x03306B00 LDR X23, [X23 + 0x850]
	0x03306B04 CBNZ W8, 0x3306B1C
	0x03306B08 ADRP X0, 0xE14000
	0x03306B0C LDR X0, [X0 + 0x290]
	0x03306B10 BL 0x1C16CF4
	0x03306B14 MOVZ W8, 0x1
	0x03306B18 STRB W8, [X25 + 0x3AB]
	0x03306B1C MOV X0, X20
	0x03306B20 MOV X1, X31
	0x03306B24 BL 0x3225708
	0x03306B28 LDR W1, [X20 + 0x10]
	0x03306B2C MOV X2, X21
	0x03306B30 MOV X3, X22
	0x03306B34 MOV X4, X31
	0x03306B38 BL 0x337F86C
	0x03306B3C LDR X20, [X23]
	0x03306B40 MOV W23, W0
	0x03306B44 CMP W0, W22
	0x03306B48 B.LS 0x3306B54
	0x03306B4C MOV X0, X31
	0x03306B50 BL 0x339D6EC
	0x03306B54 LDR X0, [X20 + 0x20]
	0x03306B58 ADRP X20, 0xE21000
	0x03306B5C LDRB W8, [X0 + 0x135]
	0x03306B60 LDR X20, [X20 + 0x9E0]
	0x03306B64 TBNZ X8, 0x0, 0x3306B6C
	0x03306B68 BL 0x1C5C684
	0x03306B6C LDR X20, [X20]
	0x03306B70 MOV W22, W23
	0x03306B74 LDR X8, [X20 + 0x38]
	0x03306B78 CBNZ X8, 0x3306B9C
	0x03306B7C ADRP X0, 0xE16000
	0x03306B80 LDR X0, [X0 + 0x68]
	0x03306B84 BL 0x1C16CF4
	0x03306B88 LDR X8, [X20 + 0x38]
	0x03306B8C CBNZ X8, 0x3306B9C
	0x03306B90 MOV X0, X20
	0x03306B94 BL 0x1C5C6E0
	0x03306B98 LDR X8, [X20 + 0x38]
	0x03306B9C LDR X2, [X8 + 0x18]
	0x03306BA0 MOV X0, X21
	0x03306BA4 MOV X1, X22
	0x03306BA8 BL 0x2218CFC
	0x03306BAC MOVZ X8, 0x40000000
	0x03306BB0 MOV X9, INVALID
	0x03306BB4 ADD X8, X8, X22, 0x20, LSL
	0x03306BB8 MOVK X9, 0x1
	0x03306BBC CMP X8, X9
	0x03306BC0 B.CS 0x3306D84
	0x03306BC4 ADRP X8, 0xE20000
	0x03306BC8 LDR X8, [X8 + 0xF68]
	0x03306BCC ADRP X23, 0xE21000
	0x03306BD0 UBFM W1, W22, 0x1F, 0x1E
	0x03306BD4 LDR X2, [X8]
	0x03306BD8 LDR X23, [X23 + 0x9D8]
	0x03306BDC BL 0x25FB09C
	0x03306BE0 MOV X21, X0
	0x03306BE4 LDR X0, [X23]
	0x03306BE8 MOV X20, X1
	0x03306BEC LDR W8, [X0 + 0xE0]
	0x03306BF0 CBNZ W8, 0x3306BF8
	0x03306BF4 BL 0x1C16DFC
	0x03306BF8 ADRP X22, 0x10D6000
	0x03306BFC LDRB W8, [X22 + 0xB00]
	0x03306C00 CBNZ W8, 0x3306C18
	0x03306C04 ADRP X0, 0xE21000
	0x03306C08 LDR X0, [X0 + 0x9D8]
	0x03306C0C BL 0x1C16CF4
	0x03306C10 MOVZ W8, 0x1
	0x03306C14 STRB W8, [X22 + 0xB00]
	0x03306C18 LDR X0, [X23]
	0x03306C1C LDR W8, [X0 + 0xE0]
	0x03306C20 CBNZ W8, 0x3306C2C
	0x03306C24 BL 0x1C16DFC
	0x03306C28 LDR X0, [X23]
	0x03306C2C LDR X8, [X0 + 0xB8]
	0x03306C30 ADRP X25, 0x10D6000
	0x03306C34 LDRB W9, [X25 + 0xB01]
	0x03306C38 LDR X22, [X8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X23, 0x10D7000
	010 Move X24, 0xE1C000
	011 Move W8, [X23+2810]
	012 Move X24, [X24+4048]
	013 Move W19, W3
	014 Move X20, X2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xE1C000
	022 Move X0, [X0+4048]
	023 Call 0x1C17CF4
	024 Move X0, 0xE22000
	025 Move X0, [X0+2464]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+2810], W8
	029 Move X0, [X24]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Call CompareInfo.get_UseManagedCollation
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {60}
	039 Move X0, X22
	040 Call CompareInfo.GetCollator, X0
	041 Compare X0, 0
	042 JumpIfEqual {109}
	043 Move X10, 0xE22000
	044 Move X8, [X0]
	045 Move X10, [X10+2464]
	046 Move X22, X0
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move W2, 3
	058 Move X0, X22
	059 Call 0x1C5D788
	060 Compare X21, 0
	061 JumpIfEqual {109}
	062 Compare X20, 0
	063 JumpIfEqual {109}
	064 Move W8, [X21+16]
	065 Move W3, [X20+16]
	066 Subtract W2, W8, W3
	067 Move W0, W31
	068 Move X8, [X22]
	069 Move X0, X22
	070 Move X1, X21
	071 Move X4, X20
	072 Move X9, [X8+440]
	073 Move X8, [X8+448]
	074 Move W5, W31
	075 Move W6, W3
	076 Move W7, W19
	077 Move [X31], X8
	078 NotImplemented "Instruction BLR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CSET not yet implemented."
	081 Move X20, [X31+64]
	082 Move X19, [X31+72]
	083 Move X22, [X31+48]
	084 Move X21, [X31+56]
	085 Move X24, [X31+32]
	086 Move X23, [X31+40]
	087 Move X30, [X31+16]
	088 Add X31, X31, 80
	089 Return X0
	090 Move W9, [X10]
	091 Add W9, W9, 3
	092 Add X8, X8, W9
	093 Add X0, X8, 312
	094 Move X5, [X0]
	095 Move X4, [X0+8]
	096 Move X0, X22
	097 Move X1, X21
	098 Move X2, X20
	099 Move W3, W19
	100 Move X20, [X31+64]
	101 Move X19, [X31+72]
	102 Move X22, [X31+48]
	103 Move X21, [X31+56]
	104 Move X24, [X31+32]
	105 Move X23, [X31+40]
	106 Move X30, [X31+16]
	107 Add X31, X31, 80
	108 CallNoReturn X5
	109 Call 0x1C17F20

Method: System.Boolean EndsWith(System.ReadOnlySpan`1<System.Char> source, System.ReadOnlySpan`1<System.Char> suffix, System.Globalization.CompareOptions options)

Disassembly:
	0x03306C40 ADRP X0, 0xE21000
	0x03306C44 LDR X0, [X0 + 0x9D8]
	0x03306C48 BL 0x1C16CF4
	0x03306C4C ADRP X0, 0xE20000
	0x03306C50 LDR X0, [X0 + 0xDD0]
	0x03306C54 BL 0x1C16CF4
	0x03306C58 ADRP X0, 0xE1C000
	0x03306C5C LDR X0, [X0 + 0xAC0]
	0x03306C60 BL 0x1C16CF4
	0x03306C64 MOVZ W8, 0x1
	0x03306C68 STRB W8, [X25 + 0xB01]
	0x03306C6C ADRP X8, 0xE20000
	0x03306C70 LDR X8, [X8 + 0xDD0]
	0x03306C74 MOV X0, X21
	0x03306C78 MOV X1, X20
	0x03306C7C LDR X2, [X8]
	0x03306C80 BL 0x2218CF0
	0x03306C84 LDR X8, [X23]
	0x03306C88 MOV X21, X0
	0x03306C8C LDR W9, [X8 + 0xE0]
	0x03306C90 CBNZ W9, 0x3306C9C
	0x03306C94 MOV X0, X8
	0x03306C98 BL 0x1C16DFC
	0x03306C9C MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, X3
	008 Move X22, X0
	009 Move X0, X31
	010 Move X3, X31
	011 Move W19, W5
	012 Move X20, X4
	013 Call String.CreateString, X0, X1
	014 Move X23, X0
	015 Move X0, X31
	016 Move X1, X21
	017 Move X2, X20
	018 Move X3, X31
	019 Call String.CreateString, X0, X1
	020 Move X2, X0
	021 Move X0, X22
	022 Move W3, W19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move X1, X23
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 Call CompareInfo.EndsWith, X0, X1, X2, X3
	031 Return X0

Method: System.Int32 GetHashCodeOfStringCore(System.String source, System.Globalization.CompareOptions options)

Disassembly:
	0x03307F34 CBNZ W9, 0x3307F3C
	0x03307F38 BL 0x1C16DFC
	0x03307F3C MOV X29, X20
	0x03307F40 B 0x3307F74
	0x03307F44 ADD X9, X23, X9, 0x4, LSL
	0x03307F48 LDR X10, [X9 + 0x20]
	0x03307F4C STR X10, [X19 + 0x30]
	0x03307F50 LDR W10, [X23 + 0x18]
	0x03307F54 CMP W8, W10
	0x03307F58 B.CS 0x3308188
	0x03307F5C LDR X0, [X29]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+520]
	004 Move X3, [X8+528]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Compare X0, 0
	007 JumpIfEqual {13}
	008 Move X8, [X0]
	009 Move X2, [X8+344]
	010 Move X1, [X8+352]
	011 Move X30, [X31+16]
	012 CallNoReturn X2
	013 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03308B3C LDR X0, [X0 + 0xA98]
	0x03308B40 BL 0x1C16D08
	0x03308B44 MOV X20, X0
	0x03308B48 ADRP X0, 0xE1F000
	0x03308B4C LDR X0, [X0 + 0xAA0]
	0x03308B50 BL 0x1C16D08
	0x03308B54 MOV X2, X0
	0x03308B58 MOV X0, X19
	0x03308B5C MOV X1, X20
	0x03308B60 BL 0x3311888
	0x03308B64 B 0x3308A78
	0x03308B68 ADRP X0, 0xDF3000
	0x03308B6C LDR X0, [X0 + 0x578]
	0x03308B70 BL 0x1C16D08
	0x03308B74 BL 0x1C16F10
	0x03308B78 MOV X19, X0
	0x03308B7C ADRP X0, 0xE1F000
	0x03308B80 LDR X0, [X0 + 0xAA8]
	0x03308B84 BL 0x1C16D08
	0x03308B88 MOV X20, X0
	0x03308B8C ADRP X0, 0xE1F000
	0x03308B90 LDR X0, [X0 + 0xA98]
	0x03308B94 BL 0x1C16D08
	0x03308B98 MOV X2, X0
	0x03308B9C MOV X0, X19
	0x03308BA0 MOV X1, X20
	0x03308BA4 BL 0x330E16C
	0x03308BA8 B 0x3308A78
	0x03308BAC STR X30, [X31 - 0x20]!
	0x03308BB0 STP X20, X19, [X31 + 0x10]
	0x03308BB4 ADRP X19, 0x10D4000
	0x03308BB8 ADRP X20, 0xE1F000
	0x03308BBC LDRB W8, [X19 + 0xB03]
	0x03308BC0 LDR X20, [X20 + 0xA38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x10D5000
	005 Move X20, 0xDEE000
	006 Move W8, [X19+2811]
	007 Move X20, [X20+3144]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xE1A000
	013 Move X0, [X0+4048]
	014 Call 0x1C17CF4
	015 Move X0, 0xDEE000
	016 Move X0, [X0+3144]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+2811], W8
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X31
	026 Call CultureInfo.get_InvariantCulture
	027 Compare X0, 0
	028 JumpIfEqual {42}
	029 Move X8, [X0]
	030 Move X19, 0xE1A000
	031 Move X9, [X8+504]
	032 Move X1, [X8+512]
	033 Move X19, [X19+4048]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X8, [X19]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X8, [X8+184]
	039 Move [X8], X0
	040 Move X30, [X31+32]
	041 Return 
	042 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03308BC4 TBNZ X8, 0x0, 0x3308BDC
	0x03308BC8 ADRP X0, 0xE1F000
	0x03308BCC LDR X0, [X0 + 0xA38]
	0x03308BD0 BL 0x1C16CF4
	0x03308BD4 MOVZ W8, 0x1
	0x03308BD8 STRB W8, [X19 + 0xB03]
	0x03308BDC LDR X0, [X20]
	0x03308BE0 LDR W8, [X0 + 0xE0]
	0x03308BE4 CBNZ W8, 0x3308BEC
	0x03308BE8 BL 0x1C16DFC
	0x03308BEC LDP X20, X19, [X31 + 0x10]
	0x03308BF0 LDR X30, [X31], #0x20
	0x03308BF4 B 0x3308BF8
	0x03308BF8 SUB X31, X31, 0x30
	0x03308BFC STP X30, X21, [X31 + 0x10]
	0x03308C00 STP X20, X19, [X31 + 0x20]
	0x03308C04 ADRP X19, 0x10D4000
	0x03308C08 ADRP X21, 0xE1F000
	0x03308C0C LDRB W8, [X19 + 0xB0C]
	0x03308C10 LDR X21, [X21 + 0xA38]
	0x03308C14 TBNZ X8, 0x0, 0x3308C2C
	0x03308C18 ADRP X0, 0xE1F000
	0x03308C1C LDR X0, [X0 + 0xA38]
	0x03308C20 BL 0x1C16CF4
	0x03308C24 MOVZ W8, 0x1
	0x03308C28 STRB W8, [X19 + 0xB0C]
	0x03308C2C LDR X0, [X21]
	0x03308C30 STP X31, X31, [X31]
	0x03308C34 LDR W8, [X0 + 0xE0]
	0x03308C38 CBNZ W8, 0x3308C40
	0x03308C3C BL 0x1C16DFC
	0x03308C40 ADD X0, X31, 0x8
	0x03308C44 ADD X1, X31, 0x0
	0x03308C48 BL 0x3308D5C
	0x03308C4C TBZ X0, 0x0, 0x3308C74
	0x03308C50 LDR X0, [X21]
	0x03308C54 LDP X20, X19, [X31]
	0x03308C58 LDR W8, [X0 + 0xE0]
	0x03308C5C CBNZ W8, 0x3308C64
	0x03308C60 BL 0x1C16DFC
	0x03308C64 MOV X0, X19
	0x03308C68 MOV X1, X20
	0x03308C6C BL 0x330A100
	0x03308C70 CBNZ X0, 0x3308CD8
	0x03308C74 LDR X0, [X21]
	0x03308C78 LDR W8, [X0 + 0xE0]
	0x03308C7C CBNZ W8, 0x3308C84
	0x03308C80 BL 0x1C16DFC
	0x03308C84 BL 0x330A2A8
	0x03308C88 CBNZ X0, 0x3308CD8
	0x03308C8C LDR X0, [X21]
	0x03308C90 LDR W8, [X0 + 0xE0]
	0x03308C94 CBNZ W8, 0x3308C9C
	0x03308C98 BL 0x1C16DFC
	0x03308C9C ADRP X19, 0x10D4000
	0x03308CA0 LDRB W8, [X19 + 0xC76]
	0x03308CA4 CBNZ W8, 0x3308CBC
	0x03308CA8 ADRP X0, 0xE1F000
	0x03308CAC LDR X0, [X0 + 0xA38]
	0x03308CB0 BL 0x1C16CF4
	0x03308CB4 MOVZ W8, 0x1
	0x03308CB8 STRB W8, [X19 + 0xC76]
	0x03308CBC LDR X0, [X21]
	0x03308CC0 LDR W8, [X0 + 0xE0]
	0x03308CC4 CBNZ W8, 0x3308CD0
	0x03308CC8 BL 0x1C16DFC
	0x03308CCC LDR X0, [X21]
	0x03308CD0 LDR X8, [X0 + 0xB8]
	0x03308CD4 LDR X0, [X8]
	0x03308CD8 LDP X20, X19, [X31 + 0x20]
	0x03308CDC LDP X30, X21, [X31 + 0x10]
	0x03308CE0 ADD X31, X31, 0x30
	0x03308CE4 RET
	0x03308CE8 B 0x3308CEC
	0x03308CEC MOV X19, X0
	0x03308CF0 CMP W1, 0x1
	0x03308CF4 B.NE 0x3308D50
	0x03308CF8 MOV X0, X19
	0x03308CFC BL 0x3EB1AD0
	0x03308D00 MOV X19, X0
	0x03308D04 ADRP X0, 0xDF1000
	0x03308D08 LDR X0, [X0 + 0xCC0]
	0x03308D0C BL 0x1C16D08
	0x03308D10 LDR X8, [X19]
	0x03308D14 LDR X1, [X8]
	0x03308D18 BL 0x1C17270
	0x03308D1C TBZ X0, 0x0, 0x3308D28
	0x03308D20 BL 0x3EB1AE0
	0x03308D24 B 0x3308C8C
	0x03308D28 MOVZ W0, 0x8
	0x03308D2C BL 0x3EB1AF0
	0x03308D30 LDR X8, [X19]
	0x03308D34 STR X8, [X0]
	0x03308D38 ADRP X1, 0xBAC000
	0x03308D3C ADD X1, X1, 0xE58
	0x03308D40 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x10D5000
	005 Move X20, 0xE20000
	006 Move W8, [X19+2812]
	007 Move X20, [X20+2608]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE20000
	013 Move X0, [X0+2608]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2812], W8
	017 Move X0, [X20]
	018 Call 0x1C17D9C
	019 Move [X31-64], X30
	020 Move [X31+16], X24
	021 Move [X31+24], X23
	022 Move [X31+32], X22
	023 Move [X31+40], X21
	024 Move [X31+48], X20
	025 Move [X31+56], X19
	026 Move X8, [X4+56]
	027 Move X21, X4
	028 Move X19, X3
	029 Move X22, X2
	030 Move X20, X1
	031 Move X23, X0
	032 Compare X8, 0
	033 JumpIfNotEqual {46}
	034 Move X0, 0xE13000
	035 Move X0, [X0+3432]
	036 Call 0x1C17CF4
	037 Move X0, 0xDEC000
	038 Move X0, [X0+1728]
	039 Call 0x1C17CF4
	040 Move X8, [X21+56]
	041 Compare X8, 0
	042 JumpIfNotEqual {46}
	043 Move X0, X21
	044 Call 0x1C5D6E0
	045 Move X8, [X21+56]
	046 Move X9, 0xDEC000
	047 Move X9, [X9+1728]
	048 Move X24, [X8]
	049 Move X0, [X9]
	050 Move W9, [X0+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X24
	055 Move X1, X31
	056 Call Type.GetTypeFromHandle, X0
	057 Move X8, 0xE13000
	058 Move X8, [X8+3432]
	059 Move X24, X0
	060 Move X1, X31
	061 Move X8, [X8]
	062 Move X0, X8
	063 Call Type.GetTypeFromHandle, X0
	064 Move X1, X0
	065 Move X0, X24
	066 Move X2, X31
	067 Call Type.op_Equality, X0, X1
	068 Move X8, [X21+56]
	069 Move W24, W0
	070 Move X0, X23
	071 Move X1, X20
	072 Move X2, [X8+16]
	073 Call MemoryMarshal.GetReference, X0
	074 Move X23, X0
	075 Move TEMP, X24
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {98}
	079 Move X8, [X21+56]
	080 Move X0, X22
	081 Move X1, X19
	082 Move X2, [X8+16]
	083 Call MemoryMarshal.GetReference, X0
	084 Move X2, X0
	085 Move X0, X23
	086 Move W1, W20
	087 Move W3, W19
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X24, [X31+16]
	093 Move X23, [X31+24]
	094 Move X4, X31
	095 Move X30, [X31+64]
	096 Call SpanHelpers.IndexOfAny, X0, X1, X2, X3
	097 Return 
	098 Move X8, [X21+56]
	099 Move X0, X22
	100 Move X1, X19
	101 Move X2, [X8+16]
	102 Call MemoryMarshal.GetReference, X0
	103 Move X8, [X21+56]
	104 Move X2, X0
	105 Move X0, X23
	106 Move W1, W20
	107 Move X4, [X8+48]
	108 Move W3, W19
	109 Move X20, [X31+48]
	110 Move X19, [X31+56]
	111 Move X22, [X31+32]
	112 Move X21, [X31+40]
	113 Move X24, [X31+16]
	114 Move X23, [X31+24]
	115 Move X30, [X31+64]
	116 Call 0x22594B0, X0, X1, X2, X3
	117 Return 

